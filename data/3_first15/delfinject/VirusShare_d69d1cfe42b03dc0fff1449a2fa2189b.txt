loop
jns
ffreep
bound
ja
lea
test
lcall
mov
add
cmc
xchg
adc
dec
push
stc
mov
sub
sti
fnsave
test
pop
ljmp
shlb
in
dec
sub
inc
mov
jo
lds
cwtl
add
insb
jne
sahf
inc
test
mov
xor
addr16
jle
xchg
add
push
rcrl
rorb
loopne
xchg
adc
mov
mov
std
push
xor
les
mov
pop
es
mov
add
xchg
repnz
mov
loopne
mov
repz
inc
out
or
add
jecxz
mov
fldcw
and
nop
imul
mov
inc
jmp
mov
mov
pop
lret
adc
jbe
into
or
lahf
popf
sub
jmp
inc
push
data16
call
loop
test
cmc
scas
sahf
xchg
inc
dec
mov
movsb
jge
mov
test
jae
jo,pn
jbe
aad
mov
inc
and
insb
mov
adc
adc
push
dec
stos
into
pop
push
ficompl
xor
movsl
sub
dec
inc
daa
ljmp
or
test
mov
popf
fdivrs
aad
mov
jge
xor
or
fbstp
dec
rorl
lods
xor
adc
cmpsb
adc
jnp
fwait
out
push
cmc
push
daa
xor
dec
jno
faddl
loope
outsb
jns
stc
scas
cmpsl
fwait
jo
ds
ficompl
dec
test
arpl
inc
or
pop
jmp
repnz
and
daa
ljmp
or
dec
mov
test
mov
imul
pop
or
stc
roll
jbe
rcll
aas
lods
lea
test
out
in
es
cltd
and
loopne
daa
stos
fmulp
loop
mov
jb
mov
ret
sbb
inc
hlt
lea
adc
sbb
push
mov
push
dec
insb
inc
mov
insl
loop
jle
lcall
insb
sbb
in
les
cmc
int
sti
xorl
mov
pop
mov
out
rcl
scas
dec
nop
in
sub
loop
inc
imul
cmp
loope
dec
ret
jmp
movsl
and
mov
dec
stos
xor
call
es
dec
mov
insl
pop
fnstsw
and
lds
add
mov
mov
aas
mov
leave
jle,pn
adc
popa
inc
out
inc
jb
cmpsb
popf
push
mov
pushf
je
jmp
cmp
pop
or
insb
call
cltd
call
bound
ret
add
and
cmc
ret
icebp
sbb
repz
rorb
mov
imul
mov
inc
decb
or
sub
pop
sub
sub
dec
sub
decb
sub
fsubl
mov
loop
js
fldpi
lock
ljmp
sbb
xchg
lret
int3
ret
sub
dec
mov
into
ss
mov
js
rorb
adcb
push
movsl
inc
mov
pop
gs
lahf
out
xchg
pop
push
int
push
and
xchg
loope
xchg
or
xlat
push
in
cs
jmp
sub
lods
cmp
cs
jo
pop
push
jns
xor
call
jge
test
popa
sub
mov
dec
outsl
push
fiadds
in
outsb
lea
inc
and
ds
insb
insb
jmp
mov
jmp
test
lret
cmp
push
dec
or
incb
insl
repnz
add
shrb
and
xchg
sti
sbb
mov
outsb
popf
mov
pop
sti
loopne
cmpsb
fdivrl
cvtpi2ps
xchg
dec
or
int
xor
ret
pop
jg
dec
xchg
loopne
shrl
in
fcmovu
scas
xchg
fistpll
xchg
in
xchg
or
cmp
jg
mov
cmc
sahf
outsl
jmp
inc
jno
lds
dec
pop
jae
fmuls
fistl
mov
mov
xlat
fnsetpm(287
les
iret
xor
pusha
outsb
sti
jo
mov
rorl
xchg
jecxz
iret
test
mov
lea
inc
popf
insl
jo
jmp
xchg
adc
push
xor
mov
les
xchg
std
push
mov
mov
or
ds
xchg
dec
cs
mov
xor
adc
fwait
outsl
lods
mov
adc
sub
jecxz
lods
jmp
ficoml
mov
imul
xchg
jmp
loope
pop
mov
insb
out
push
add
leave
nop
clc
cld
add
hlt
sbb
sub
add
pop
inc
out
mov
popf
in
sahf
lock
lock
shll
adc
adc
pop
xchg
xor
leave
arpl
dec
movsl
shl
sub
sbb
or
push
mov
lods
loope
leave
loopne
xor
jb
andb
lods
outsl
or
cltd
sub
incl
hlt
imul
in
pop
jmp
int
xadd
lock
fsubl
jmp
mov
mov
addr16
aad
loop
out
xor
mov
jbe
pop
insl
sbb
pushf
ret
loope
outsl
bound
inc
scas
and
ja
mov
jmp
dec
shl
fimull
cmpsb
jg
movsl
and
fsubp
jo
pop
nop
and
mov
adcb
cltd
gs
mov
shll
push
arpl
into
in
and
inc
lods
fsubs
jecxz
sbb
loopne,pn
pusha
scas
hlt
push
jae
pop
cmc
daa
test
in
jg
std
fidivl
and
dec
add
jo
in
icebp
fwait
call
outsb
push
inc
ds
je
mull
std
sub
push
push
sti
pop
xor
mov
int
insb
inc
nop
mov
push
lds
cmpsl
sti
je
cmp
mov
and
jbe
icebp
loop
cmpsb
imul
shrb
aad
add
stc
push
je
insl
pop
adc
dec
movsb
in
jne
cmp
jno
paddusw
je
outsb
les
push
add
frstor
cmc
dec
adc
mov
pop
add
mov
flds
add
add
addr16
repz
adc
call
xor
pop
repz
in
int3
xchg
push
inc
sbb
lret
sub
stc
ss
push
sub
mov
loope
stc
jno
addl
in
jo
mov
lock
push
inc
rol
cltd
sti
enter
xchg
int3
es
jne
pop
lret
or
mov
popf
ja
call
ljmp
and
xchg
out
xchg
and
xor
mov
dec
mov
mov
mov
jno
pushw
mov
dec
out
jecxz
xchg
daa
popa
jo
out
jmp
mov
imul
xchg
add
sub
inc
inc
sbb
negb
lahf
leave
movsl
cs
dec
inc
jle
dec
jae
fisttpl
jbe
stos
bnd
lods
xor
adc
mov
sbb
mov
mov
sti
je
jmp
jle,pn
nop
pusha
pop
test
mov
idivl
lods
push
test
sub
sti
sti
js
stc
push
add
arpl
inc
movsl
les
xchg
fs
test
bound
or
pop
jne
movsl
dec
pop
lret
mov
add
in
sub
popf
push
arpl
mov
fs
xchg
loopne
icebp
in
and
mov
stos
aam
jbe
xchg
aas
hlt
cli
adc
sbb
push
div
gs
xchg
push
push
adc
jne
mov
sbb
sub
cmp
hlt
push
dec
movsb
cmovge
fidivrl
jbe
jae
mov
insb
adc
cld
scas
daa
push
int
jmp
cmp
jbe
sub
jl
mov
jecxz
pop
add
push
or
fcomip
iret
mov
icebp
and
lock
into
outsl
fdivl
ss
dec
pop
cs
inc
fucomip
testl
out
xchg
mov
pop
mov
pop
or
inc
add
dec
lods
in
xabort
scas
add
push
mov
jb
lds
ret
xor
in
xchg
mov
xor
jle
in
sahf
jecxz
mov
lds
out
push
sbb
jno
dec
ss
stos
sahf
addr16
in
cmp
imul
cmp
and
dec
aas
in
xchg
dec
hlt
xchg
mov
negb
sub
loope
inc
mov
lods
nop
jl
dec
push
cwtl
stc
sbbb
pop
aad
push
mov
add
jb
add
rol
into
mov
std
popf
pop
sbbb
inc
aaa
enter
pop
int3
fs
pop
stc
clc
push
in
and
cmp
lock
jb
rcrb
add
loopne
scas
adc
aam
lret
or
out
jae
jp
rorb
repz
icebp
out
sub
lret
xchg
in
sahf
jne
mov
loop
adc
dec
xchg
push
mov
push
orl
mov
push
sarl
stos
out
daa
add
lea
sbb
in
or
nop
in
ror
or
sbb
inc
out
or
cmp
inc
xchg
and
and
xlat
xchg
dec
sbb
mov
std
jmp
ljmp
clc
inc
adc
arpl
inc
arpl
sbbl
fildl
inc
syscall
cli
mov
test
jmp
mov
pop
and
push
fiadds
xor
imul
xor
xor
pmuludq
mov
push
mov
inc
and
push
aad
pushf
outsb
shll
in
xor
xchg
icebp
mov
rorl
mov
mov
icebp
jecxz
out
or
adc
cwtl
ds
mov
repnz
es
jg
into
jmp
gs
imul
cmp
negl
addr16
and
cmp
ret
in
xchg
ret
push
movsl
mov
scas
lahf
jle
xchg
sti
pop
mov
jl
jno
adc
faddl
popf
mov
fs
jns
xchg
int3
in
fists
int3
sti
add
aas
mov
dec
jmp
cmpsb
xchg
leave
sub
jmp
mov
jge
pop
gs
scas
add
cs
mov
xorl
loopne
cmpsl
adc
popl
push
push
call
dec
jp
std
icebp
jl
je
imul
dec
bound
mov
mov
iret
std
movsl
inc
testl
leave
xchg
and
loop
mov
jbe
cmp
push
pop
xchg
mov
lahf
aam
mov
hlt
lahf
popf
mov
jo
add
idivb
lahf
pop
adc
or
inc
mov
sub
inc
mov
jno
add
or
xor
lcall
mov
pop
adc
ficoml
pop
and
bound
arpl
mov
out
xchg
sbb
loop
mov
adc
mov
insl
push
jno
fnstsw
push
fisttps
add
int
xor
fwait
adc
call
sbb
sub
push
or
dec
mov
jbe
ret
test
xchg
xor
ljmp
push
je
mov
ret
cmc
pop
stc
xchg
in
adc
dec
xchg
pop
movl
dec
cmp
out
add
sbb
ret
and
sbb
jp
aam
mov
pop
ljmp
dec
int3
pop
push
movsb
xchg
pop
mov
pop
add
mov
push
inc
jmp
dec
push
ss
mov
jns
test
inc
mov
or
test
pop
ljmp
loop
rcll
jl
shll
jecxz
xchg
inc
push
jg
sbb
test
out
ficoms
shrl
iret
popf
mov
lret
lret
loop
outsb
scas
loop
cmp
pop
mov
jmp
data16
call
bound
pushf
push
cmp
ss
scas
pop
repz
enter
test
dec
inc
xor
sbb
dec
aad
or
pop
fildll
pop
in
test
cmovs
addr16
xlat
inc
pop
jae
xchg
mov
jae
dec
mov
lret
adc
xchg
imul
ss
popa
test
push
inc
inc
push
mov
and
push
adc
pushf
sbb
pop
push
sub
cmpsb
ret
and
mov
sub
jl
lahf
out
mov
sti
adc
sbb
pop
and
push
add
lds
jnp
in
icebp
xor
jle
mov
inc
jmp
dec
pop
or
aas
fwait
arpl
fnstsw
adc
outsl
arpl
lret
or
imul
lock
mov
add
push
jb
xchg
jecxz
cmp
lock
stc
enter
inc
pop
ja
and
cs
sub
or
mov
or
push
dec
aas
dec
test
push
inc
fucomip
add
in
jmp
pop
popa
lcall
cmpsl
pop
aaa
arpl
and
int3
js
jns
lds
dec
and
lods
enter
mov
into
arpl
lock
cli
out
and
push
movsb
xor
and
jno
mov
pop
jae
mov
mov
pop
je
loope
ja
test
andb
lock
push
ret
push
mov
mov
repnz
adc
je
test
aad
scas
sarl
imul
popf
gs
inc
movsl
scas
xor
clc
out
mov
jo
and
lods
dec
sub
mov
test
and
fstl
ret
mov
hlt
pushf
sub
bound
mov
popa
jo
inc
sub
dec
out
mov
push
loope
scas
lcall
mov
dec
jo
xchg
inc
mov
xchg
xor
fs
sbbb
xchg
mov
and
mov
pusha
enter
into
cmpsb
in
xchg
lret
mov
cmp
test
loop
ds
enter
int3
cmp
mov
js
pop
lock
popf
repnz
push
jae
dec
sbb
sbb
jae
sti
jmp
lods
mov
bound
add
mov
pop
cmp
movl
and
insl
gs
push
and
pop
shr
subl
xchg
lds
and
xchg
iret
fsubr
mov
int3
add
and
mov
inc
in
xor
jne
sbb
push
arpl
and
mov
xor
leave
loope
inc
push
fld
add
mov
adc
aad
adc
dec
jne
aam
mov
push
popa
in
fisubs
pmuludq
pop
int
sarb
and
daa
xchg
int
pop
out
in
es
testb
jle
jp
test
jge
xor
dec
fidivl
test
cmp
fldcw
add
aas
test
xchg
sbb
fstpt
xchg
cwtl
xchg
and
adc
test
push
dec
xor
std
enter
add
fdivrp
add
or
call
in
jmp
rcl
mov
cwtl
or
xor
sti
fiadds
cmc
pop
orb
mulb
push
loope
js
inc
jns
xchg
inc
ss
xor
pop
psubusw
stos
and
je
pop
push
xchg
fildl
jecxz
jo
loopne
roll
jmp
mov
push
test
cmpsb
loop
and
fisttpl
fistpl
or
out
rcrl
iret
xchg
stc
icebp
addr16
sbbb
out
outsb
jbe
fistps
lds
jbe
cmpsb
sbbl
test
xchg
and
push
push
add
es
gs
mov
add
scas
lret
xchg
loopne
leave
pop
ss
movsb
dec
out
fildll
xchg
shr
xor
aaa
test
add
push
mov
les
popf
cmc
sbb
shlb
rolb
insl
sub
xchg
stos
prefetch
or
insl
xchg
int
repnz
xchg
les
and
clc
dec
and
in
push
mov
xchg
subl
dec
sahf
dec
pop
out
xchg
bound
lods
sahf
inc
pop
clc
add
cwtl
addr16
loope
fisubl
in
in
outsl
pusha
adc
mov
cmpsb
adc
mov
adc
jbe
lds
cmp
pusha
es
sbb
loop
dec
sahf
mov
xor
scas
test
sbb
lret
pushf
xchg
mov
pop
mov
pop
jne
loope
stos
sub
xchg
xchg
inc
loop
adc
lds
je
aas
xor
pushf
aaa
test
test
test
nop
vpavgb
stos
movsl
movsb
nop
xchg
repz
inc
jno
aaa
mov
pop
push
insl
rcr
fldenv
xchg
adc
mov
lods
pop
pop
testb
and
sbb
fcomp
inc
je
in
es
in
adc
mov
xlat
aad
jae
aad
cld
xchg
lret
jmp
inc
xor
aam
aaa
inc
out
icebp
lock
add
pop
lods
lret
in
icebp
push
aas
not
in
cmpsb
lret
mov
xlat
enter
mov
dec
push
and
mov
lea
fbld
pop
leave
in
rcrb
gs
cmp
dec
das
mov
mov
int
jmp
sub
sub
std
test
sbb
jle
or
add
insl
adc
sahf
fsubrl
jmp
add
jmp
jmp
js
ss
add
jecxz
xchg
call
jno
dec
jne
shr
lcall
es
imull
lea
out
in
scas
inc
dec
test
addl
push
bound
cmp
stc
xchg
icebp
push
cld
ja
cs
testb
das
and
mov
imul
arpl
sahf
in
dec
in
mov
push
shll
mov
mov
push
xchg
frstor
cmc
dec
cmpsb
psubb
shll
lahf
cli
dec
sub
iret
cmpl
mov
mov
iret
out
and
in
xor
push
pop
fisubs
dec
push
mov
adc
xchg
arpl
mov
in
jb
mov
jns
loopne
fcmovnu
pusha
cwtl
mov
push
add
sahf
dec
stos
rep
in
sub
bound
mov
adc
es
mov
leave
mov
sbb
inc
jge
and
fwait
pop
into
xchg
mov
mov
fdivl
cmc
xor
jle
mov
mov
xchg
inc
pop
xchg
shlb
pop
cld
pop
int3
insl
dec
sub
gs
cmp
std
pop
add
pop
add
rcrl
inc
hlt
mov
jns
mov
dec
insb
cmp
mov
lock
mov
out
jbe
inc
dec
push
fs
loope
xchg
jecxz
ljmp
nop
in
lods
add
stc
dec
pop
stc
ret
out
rdmsr
mov
icebp
xchg
lret
xchg
in
es
inc
fmul
cmpsb
or
fdivs
add
mov
pop
and
imul
mov
clc
iret
in
ret
jne
adc
into
add
orb
jo
and
loop
lret
push
testl
and
lods
push
cmp
or
bound
xorl
xchg
mov
or
hlt
das
cmp
dec
scas
lods
shlb
ds
sub
dec
jno
or
sbb
adc
inc
ret
arpl
data16
sti
stos
movl
scas
scas
ret
arpl
jno
addl
je
push
add
loope
aam
sub
popa
clc
add
sub
cmpsb
fldl2t
and
jecxz
loope
adc
jl
mov
aas
adc
mulb
and
sbb
xor
adc
inc
shl
ret
jmp
scas
jmp
fiaddl
fcmove
cmp
jmp
mov
stos
out
stos
push
lock
loope
lahf
fdivrs
das
cld
pop
sub
adc
testl
adc
out
ficomps
and
xchg
fisubrs
cmpsb
mov
in
fdivrp
mov
and
and
cmp
xchg
push
push
inc
sub
push
cmpsb
add
push
xchg
lret
int
testb
jne
ficoms
xchg
popf
jg
out
mov
outsb
shl
jg
in
push
fmuls
orl
xor
pop
cmp
in
sbb
dec
xchg
ficoms
mov
in
adc
fstpl
sbb
pushf
jb
in
mov
sahf
punpckldq
int3
xlat
pop
xchg
mov
iret
outsl
and
lahf
dec
inc
inc
into
push
sti
in
enter
ret
out
and
xchg
and
adc
inc
mov
fildll
mov
out
in
mov
into
adc
jmp
and
data16
mov
ljmp
cmp
push
adc
dec
arpl
int3
rclb
cwtl
ret
or
inc
out
fmulp
fmull
and
cmp
sbb
jmp
adc
jl
sahf
cmp
push
movsb
clc
adc
push
cmpl
movsb
sti
jno
arpl
frstor
ret
jno
xchg
shrl
sbb
dec
cmp
lods
jge
repnz
shr
and
icebp
out
sbb
pop
out
mov
lret
dec
lods
jns
pop
in
jecxz
idiv
mov
fists
in
das
aam
mov
jl
out
pop
lcall
cli
std
jecxz
dec
lods
jecxz
dec
sbb
hlt
mov
push
negb
mov
add
pop
mov
out
int
jmp
and
mov
ret
jne
jge
test
call
loop
popf
push
into
imul
and
in
mov
push
mov
mov
lret
pop
adc
jmp
cmpsb
popa
outsb
push
insb
enter
loop
lret
int
leave
les
sbb
pop
mov
mov
jmp
add
jne
xor
jl
stos
cwtl
inc
sbb
or
sub
ljmp
mov
push
repnz
ss
fidivrl
lods
rcll
xchg
mov
test
push
mov
xchg
stc
mov
fs
xchg
jnp
int3
pop
pop
aam
add
adc
je
mov
fs
mov
imul
fcmovnu
in
repnz
popf
push
pop
cmp
sbb
inc
jb
inc
or
in
xchg
ret
imul
adc
mov
push
outsb
sbb
fisubrs
lods
in
and
jp
pop
ds
mov
popa
jno
jg
loopne
xchg
sbb
mov
mov
mov
adc
add
add
hlt
icebp
inc
popf
dec
pushf
pop
mov
inc
and
fimuls
jns
bswap
mov
inc
mov
adc
cmp
add
dec
dec
lods
loope
and
lret
pop
std
jmp
pusha
int3
js
adc
std
mov
push
in
inc
push
or
mov
hlt
lds
mov
jmp
in
mulb
mov
int
clc
incl
out
adc
popa
in
pop
dec
cmpsl
movsb
pop
cmc
loop
jno
jmp
push
and
les
fwait
nop
iret
pop
or
jg
in
dec
gs
pop
insl
test
mov
out
lahf
out
dec
call
push
cmp
pop
sbb
push
ret
mov
mov
dec
fwait
ror
sbb
sub
and
stos
inc
inc
inc
jne
test
xchg
cmp
repz
lahf
xor
lds
jmp
shll
cmc
popf
mov
jnp
gs
jmp
scas
fistpll
cmp
jg
sub
xchg
xchg
lahf
add
aaa
inc
mov
daa
adc
ret
cltd
lret
and
jge
xor
loopne
sbb
inc
ret
and
imul
or
fdivs
imul
mov
xor
adc
sbb
mov
add
or
cmpsb
imul
add
bound
jmp
jne
leave
inc
inc
xor
lcall
or
sarl
bound
mov
mov
sub
test
fisubrs
jp
in
inc
xlat
popa
addb
inc
jecxz
nop
shll
cltd
movsl
ret
fsubrl
dec
push
or
add
pop
adc
cwtl
out
in
xor
aas
push
arpl
fcomip
les
and
jp
jp
cmp
ds
cltd
push
mov
sub
pop
imul
imul
mov
and
xchg
xchg
lods
jbe
add
jo
sbb
daa
mov
repnz
mov
pop
icebp
out
xchg
mov
cli
ss
mov
fxch
cmpsl
jns
sub
pop
rcll
xor
lcall
push
ficomps
and
popf
mov
loope
add
in
movsl
inc
jmp
lods
push
xchg
shl
notb
xchg
and
lds
pop
push
mov
mov
mov
orl
and
aaa
lods
cli
jmp
out
xchg
cmpl
sub
out
roll
lret
pop
in
fildl
sti
xor
add
add
test
sub
sub
pop
mov
or
jb
loop
movsl
jg
repnz
xchg
or
add
lea
aas
mov
adc
in
mov
out
xchg
popf
call
jno
xchg
ljmp
mov
fildl
hlt
and
push
fistps
movb
in
shl
stos
dec
push
rorl
dec
inc
push
mov
push
hlt
lret
repnz
mov
mov
push
and
rcll
xchg
pusha
shll
cmc
mov
repz
and
or
lods
aad
xchg
shl
lret
gs
out
add
mov
add
inc
leave
jecxz
movsl
cs
popa
xor
xchg
in
and
pop
cld
xlat
push
repnz
stos
aam
jmp
lret
inc
nop
pop
frstor
fists
repnz
xchg
xchg
shlb
dec
es
bound
sti
out
jecxz
iret
fcompl
push
cmpl
mov
scas
ja
fisttpl
jmp
test
jp
cltd
sahf
jmp
mov
movsl
cmp
addb
push
inc
repnz
dec
pcmpgtd
bound
pop
jp
adc
inc
movsb
pop
xor
mov
sbb
std
push
mov
fimull
gs
test
and
stos
push
sbb
inc
add
lock
lods
sbb
daa
lcall
jge
jmp
dec
shlb
pop
andl
and
scas
call
xlat
enter
lds
push
lods
adc
fisubrl
cmp
mov
andl
mov
loop
insl
int3
or
xor
pop
dec
push
leave
ret
and
loopne
out
or
mov
pop
popf
ljmp
lret
rcll
adc
add
xor
or
sub
xchg
lods
mov
les
imul
stc
push
sahf
jb
jp
push
in
int
or
sub
pop
pop
push
fsubrl
jo
addr16
rcrb
test
mov
xchg
xorb
lods
mov
pop
push
fildll
mov
jae
sahf
icebp
sub
xchg
repz
sar
jle
imul
sbb
add
lret
xchg
push
mov
push
std
inc
pop
mov
rorl
mov
push
inc
loope
testl
or
icebp
clc
dec
scas
and
loope
xchg
mov
push
test
sbb
lret
dec
mov
test
nop
data16
and
jp
call
xchg
push
sbb
xchg
clc
cltd
push
cli
std
imul
movsw
cmp
xchg
scas
mov
mov
mov
xor
repnz
out
dec
add
or
xchg
jg
rorb
test
pop
cmp
ret
lock
loop
in
adc
in
mov
push
dec
subb
lds
xlat
dec
in
sub
shlb
adc
pop
push
push
sub
dec
lods
push
into
dec
inc
fcmovne
xlat
fs
mov
lods
repz
fs
mov
mov
mov
mov
and
pop
in
ret
jns
push
lret
shrb
mull
loop
mov
arpl
mov
pop
cltd
add
mov
loope
adc
jl
icebp
ds
les
mov
mov
in
stc
outsl
xorl
and
or
fisubs
sub
mov
inc
in
cmp
mov
je
gs
mov
and
fildll
es
subb
imul
fisttpl
adc
arpl
pop
mov
mov
lods
xchg
lods
mov
mov
jnp
mulb
and
fs
cmpsb
loopne,pt
fst
in
lds
jmp
push
lahf
sbb
repnz
xor
mov
add
cmp
bound
test
push
frstor
int3
int
sub
cmpsl
in
or
xchg
fcoms
mov
mov
fldenv
push
gs
adc
ss
push
cmp
dec
mov
mov
scas
shrl
lret
add
idivl
fldl
mov
mov
or
ficomps
adc
loop,pn
addr16
mov
push
shr
icebp
int
jge
or
jle
std
int3
ret
and
cmp
fistps
jb
lret
fisubrl
faddl
loope
stos
mov
out
mov
pop
dec
in
cmc
jmp
jne
lret
test
std
popf
sbb
adc
xor
xchg
rcrb
into
out
in
xchg
sbb
or
ljmp
sarl
pop
lods
in
adc
in
lock
mov
loope
fisttpl
lcall
lret
cltd
jne
cs
xchg
cmpsl
lea
dec
lcall
popa
popa
sub
xor
insl
in
jne
dec
dec
test
jmp
gs
test
mov
jno
and
pusha
divb
icebp
dec
sbb
mov
pusha
adc
xor
mov
movsb
push
cmpsb
out
sahf
cld
lock
adc
int
pusha
mov
adc
test
push
sbb
in
into
pop
push
dec
adc
xchg
in
xor
test
gs
and
aam
ret
test
sarb
xchg
lock
pop
push
xlat
inc
adc
pusha
lahf
jb
sub
or
add
loop
mov
stos
mov
jecxz,pt
mov
pmulhw
inc
mov
add
daa
mov
leave
enter
cmp
inc
cmpb
in
cmc
mov
mov
enter
cmpsb
test
shll
sahf
dec
std
movsb
mov
ds
jecxz
fmull
outsl
movsb
int
bound
iret
shl
jle
dec
js
enter
mov
mov
iret
jns
test
aad
mov
adc
clc
add
in
fs
faddp
sbb
decb
data16
push
test
and
daa
xor
jmp
pop
jae
stos
lcall
lret
je
scas
jecxz
loopne
loop
pop
dec
xchg
pop
sub
xchg
cwtl
outsl
movl
xorl
into
jmp
dec
pop
repz
jp
sti
xor
mov
test
sub
les
sti
enter
enter
enter
enter
sarl
movsl
mov
xchg
xlat
or
jcxz
insl
lea
add
pop
sbb
lock
stos
mov
xorl
lea
adcl
imul
sub
pusha
pop
dec
mov
sbb
push
popa
in
mov
in
repnz
mov
out
push
xchg
add
movsl
test
sbb
fidivrs
sub
das
lret
pop
xchg
repnz
inc
leave
pushf
mov
xchg
frstor
lret
mov
push
xorb
pop
jle
lods
dec
dec
cmpsl
lds
sub
int
cmpsb
fldenv
leave
sbb
inc
loope
mov
adc
lea
in
stos
xchg
jmp
sbb
xlat
push
mov
sbb
or
vunpckhps
loop
mov
js
ja
push
sti
je
pop
pop
mov
mov
loop
dec
std
dec
outsb
popa
or
sub
xor
into
pop
dec
cmp
movsb
cltd
movsb
daa
add
sbb
mov
shrl
hlt
cmpsb
or
repz
idivb
sub
push
mov
cltd
movsl
push
mov
je
jmp
adc
repnz
je
and
out
pop
lea
xchg
cli
and
push
out
aam
rolb
add
push
fldt
xorl
push
cmpsb
dec
repz
lods
mov
lods
mov
dec
pop
cld
push
adc
cli
xor
out
inc
es
loop
mov
shlb
std
out
and
and
cmp
popf
data16
in
icebp
icebp
fildll
aad
jmp
mov
loop,pt
out
xlat
dec
mov
bound
and
xor
out
dec
mov
lret
enter
shl
dec
fs
cwtl
inc
std
incb
and
ss
mov
pop
sbb
loopne
arpl
dec
int
rcll
addr16
sbb
scas
xor
fdivl
js
adc
jnp
arpl
outsl
pop
push
in
out
dec
lea
outsl
idivl
stos
movsl
adc
sbb
or
in
xchg
dec
popf
add
fiaddl
sub
xchg
pop
xchg
repnz
jmp
je
inc
lea
repnz
xlat
lock
push
mul
sbb
pop
or
out
fiadds
ficompl
xchg
out
loop
dec
adc
test
pusha
mov
nop
xchg
int
inc
addr16
add
xor
add
rolb
rclb
loopne
push
mov
mov
xchg
sti
xchg
popf
mov
xchg
adc
lret
lds
jmp
daa
push
sub
fnstenv
jecxz
inc
in
pop
sbb
lods
ficoml
test
frstor
cmp
lock
test
popf
idiv
pop
stos
mov
xchg
inc
in
cmp
loope
loopew
lock
sub
adc
push
je
faddl
mov
add
cltd
outsl
jo
xchg
cmc
jecxz
jle
dec
xchg
aad
xor
call
in
lds
out
hlt
negb
mov
or
xchg
push
sub
sub
xchg
rorb
mov
push
jne
daa
cmp
aam
insl
cltd
xchg
insl
jecxz
shl
in
lods
roll
jae
jle
sbbb
mov
fisubrl
scas
and
lock
hlt
add
into
int
inc
mov
outsb
xor
scas
and
inc
repnz
jge
adc
cltd
mov
testb
xchg
shrb
pop
add
ret
jl
cmp
jecxz
jbe
mov
and
lods
iret
insl
in
inc
jmp
test
negb
cmp
aaa
in
or
bound
rol
or
add
cmpsb
mov
mov
icebp
lcall
and
out
icebp
fcomps
inc
xor
nop
lahf
out
mov
dec
cmp
xor
cmpsb
fisubrs
test
sbb
xor
adcb
xor
fcompl
inc
sub
fistpll
aas
mov
lret
mov
adc
mov
lods
mov
pop
and
mov
lahf
sbb
mov
call
jp
js
rclb
fwait
mov
inc
or
sbb
out
sti
add
pop
rol
xchg
rcll
out
mov
mov
xchg
pop
mov
mov
imul
push
lret
mov
ss
inc
xchg
arpl
leave
in
shr
cmc
ret
aad
push
push
push
or
mov
insb
add
dec
loopne
pushf
ret
xchg
sbb
les
js
sub
adc
outsb
loop
ficompl
and
dec
cmp
lods
ljmp
rorl
fsubrl
lret
cmp
into
mov
xor
jno
add
addr16
jecxz
pop
adc
clc
sbb
and
inc
imul
stc
outsb
int3
mov
dec
xchg
cmp
and
pop
add
or
loope
push
cltd
xchg
test
fs
mov
mov
pop
lret
and
aam
jmp
in
or
mov
out
sbb
push
cmp
adc
ret
rcr
gs
stos
dec
loope
jb
push
cmp
repnz
ljmp
fadds
jecxz
stos
fisttps
pushf
shl
cltd
mov
mov
jecxz
adc
mov
mov
pop
cltd
sti
push
popa
and
push
scas
mov
pop
or
or
mov
mov
jnp
sar
dec
outsb
sbb
push
es
mov
stos
std
xor
into
xlat
loopne
mov
mov
jb
sub
sbb
lret
dec
xlat
test
ret
pop
and
mov
mov
mov
rcll
popf
sti
or
fimuls
sub
and
sub
movsl
jns
fistl
cmp
push
adc
mov
les
sarb
leave
shrl
leave
test
insl
push
jae
out
sahf
inc
xor
push
mov
ljmp
rcrl
jae
xchg
lds
jns
mov
lods
pop
mov
js
lret
lods
mov
or
jg
pop
sub
inc
sbb
int3
aam
cmp
mov
repnz
add
int3
pop
pusha
pop
popf
scas
test
lods
mov
je
js
mov
pop
inc
into
and
out
mov
clc
hlt
mov
lret
push
lock
mov
lods
test
stc
ja
out
daa
cmpsb
loope
mov
test
insb
test
icebp
icebp
dec
je
aaa
ret
in
pop
cmc
ss
cmp
mov
rorb
sbb
fidivrl
sbb
ljmp
jge
jae
in
xor
add
mov
xchg
mov
cmpsb
lahf
sbb
or
mov
sub
jg
enter
stos
mov
mov
imul
ds
jbe
and
adc
in
loope
lret
iret
mov
in
jae
mov
in
mov
out
dec
add
insl
divl
xor
ja
xchg
push
movsb
scas
int
out
or
ret
adc
xchg
int
jnp
loopne
jne
mov
jns
cmp
mov
arpl
or
pop
out
ds
pop
inc
cwtl
mov
xchg
mov
sbb
ret
bnd
adc
mov
sub
and
jl
in
xchg
out
push
jmp
lcall
adc
into
jno
shl
mov
cmp
fucomp
leave
inc
imul
add
adc
or
lret
dec
fucomip
mov
sbb
push
sti
andb
mov
push
js
mov
jecxz
icebp
movsb
subb
push
pop
dec
stc
cmp
aam
xchg
mov
push
fstl
rcll
push
aas
xor
imul
mov
in
sbb
push
jmp
movsb
jo
mov
daa
fisubrl
sub
sbb
popf
and
xchg
mov
cmpb
sar
sarl
lock
xchg
and
jo
inc
jg
add
inc
and
sub
fwait
repz
xchg
adc
loop
dec
inc
mov
scas
cltd
inc
into
and
adc
rolb
popa
mov
xchg
cli
dec
in
repz
bound
insb
rolb
repnz
and
std
jl
addr16
insl
lahf
xor
mov
lahf
xor
stos
int
and
adc
out
mov
negl
xor
sbb
insl
fisttps
popf
and
fdivrl
dec
push
int3
adc
sahf
movsb
dec
push
popf
enter
jl
dec
push
insl
lret
jle
jne
dec
addr16
or
mov
lea
inc
mov
sub
mov
pop
lds
std
movl
fiaddl
jne
xchg
dec
leave
xor
inc
add
or
xchg
fldl
xor
dec
lds
dec
test
ror
add
fldt
in
loopne
shll
scas
mov
mov
lret
jge
mov
sbb
add
and
push
in
out
stc
inc
fisttps
sub
pop
jp
ja
in
sbb
cs
lds
xor
mov
lret
push
mov
sti
cltd
inc
or
cmp
lcall
push
sbb
bound
in
fcompl
and
icebp
dec
add
inc
sub
sti
add
cli
insb
out
icebp
jmp
inc
gs
pop
daa
mov
pusha
inc
out
inc
inc
xor
xor
jge
shr
cmc
lret
out
sbb
adc
sbb
aam
and
adc
hlt
sbb
pop
jmp
std
sbb
addb
fs
fisubl
sbb
lods
adc
mov
inc
outsl
push
dec
in
insb
mov
pop
lcall
or
insl
mov
sti
shll
fsubl
lret
loop
std
enter
out
hlt
test
out
sti
mov
fsubr
or
je
insl
scas
insl
dec
std
sub
mov
or
mov
cs
lret
push
cmpsl
adc
or
repnz
xchg
inc
shlb
xchg
call
aam
out
ret
std
cmp
or
lret
adc
dec
xchg
jle
jne
push
lods
add
in
popa
pop
jge
dec
mov
loopne
sbb
das
lret
mov
jg
pop
xchg
inc
add
movsb
and
and
inc
cwtl
mov
popa
xchg
out
add
pop
hlt
cmp
in
adc
sbb
repnz
js
int
in
loope
and
dec
insb
ret
pop
jne
cmpsb
mov
sbb
lock
scas
mov
or
pop
dec
les
repz
in
sub
mov
and
xor
push
ja
arpl
push
jne
cwtl
jae
into
shl
xor
xchg
add
jmp
mov
push
rorb
mov
into
jge
out
inc
pop
sahf
cmc
push
xor
add
adc
imul
xor
xor
and
mov
gs
and
subl
lret
push
inc
and
mov
imul
and
pandn
push
or
jmp
sub
jmp
ficompl
insl
mov
and
lds
jo
lds
lods
pushf
sub
bound
in
shlb
cld
or
cmc
ret
shr
fisttps
scas
movsb
mov
loopne
mov
ret
mov
leave
push
sbb
out
ss
mov
repnz
or
jecxz
ljmp
mov
cmp
lods
outsl
arpl
loopne
lret
idivb
repnz
push
lods
add
xor
mov
xchg
testb
dec
xor
mov
sbb
out
clc
sub
add
pop
mov
repz
mov
test
sub
ret
out
fsub
mov
addr16
sbb
test
loop
push
push
pop
clc
mov
paddb
adc
sahf
lahf
ret
into
ret
adc
cs
sti
cmc
push
or
jle
jne
push
inc
xchg
mov
pop
push
push
hlt
adc
je
xor
enter
pushf
cwtl
lods
aad
ret
cltd
repnz
and
push
cmc
stos
xchg
mov
mov
jns
enter
ds
add
push
in
sbb
lock
std
incb
add
ficompl
lock
pop
rorl
js
jbe
cmc
int
fcmovnu
pushf
outsb
or
push
mov
add
dec
xchg
jo,pt
lahf
dec
scas
dec
mov
test
sbb
sbb
mov
fsub
xchg
lret
out
loope
das
rcrl
mov
inc
leave
cs
popf
jmp
inc
ret
pop
mov
lods
icebp
pop
ret
sub
ss
outsl
adc
jp
mov
add
repz
sub
xchg
arpl
or
mov
add
fsubrs
push
jno
in
xchg
push
sti
ret
sbb
cwtl
sub
mov
and
or
out
bound
ret
adc
cltd
ss
jbe
jns
je
pop
xchg
mov
shrb
stos
xchg
sbb
inc
sub
push
cmp
ficompl
bsf
in
push
mov
test
inc
mov
ljmp
test
mov
mov
dec
push
mov
ljmp
inc
addr16
jno
lods
repz
jne
xchg
out
pop
pushf
js
loope
xchg
xor
iret
dec
jmp
shl
movsl
sti
les
xor
in
xchg
ret
jg
cmp
ret
je
mov
inc
or
idiv
mov
mov
cld
div
lret
ret
popf
mov
shll
ljmp
add
or
cmp
mov
in
xchg
ficomps
leave
popf
das
xor
rorl
lcall
push
loop
mov
sub
cmp
loopne
mov
ficoml
fs
data16
and
adc
ret
cwtl
mov
decb
adc
adc
xchg
arpl
inc
in
jne
arpl
in
push
insb
lret
decb
jp
xchg
repz
xchg
fildll
ror
outsl
enter
cltd
xchg
dec
cmpsb
sahf
inc
pop
pop
pop
pop
or
ss
hlt
add
fldt
mov
pop
sub
cli
jb
push
mov
and
divps
sbb
add
ja
orl
mov
lock
outsl
mov
mov
clc
cmp
insl
lret
jno
jne
in
mov
mov
es
push
imul
mov
leave
test
lds
lds
bound
jns
imul
pop
mov
es
xchg
jl
xchg
push
add
sbb
adcl
bnd
and
sub
mov
inc
pop
cs
fisubl
fcomps
aam
enter
icebp
adc
sbb
cmpl
lods
mov
negb
rep
test
scas
lea
mov
cmp
icebp
mov
mov
cmp
call
push
push
enter
jae
test
fwait
je
mov
push
lods
dec
jbe
xchg
cwtl
push
dec
mov
push
pop
push
leave
adc
dec
dec
fbld
in
push
dec
outsl
fmul
pop
dec
into
xor
xchg
sub
lock
lret
les
loop
adc
mov
push
fmul
mov
fimuls
push
ljmp
lods
xchg
popf
or
dec
xor
sbb
jbe
call
popf
mov
jge
loop
stos
cmp
jp
cltd
sbb
nop
insl
xchg
jle
xchg
pop
push
dec
or
sbb
jno
lret
shrl
mov
outsb
mov
outsb
out
ds
mov
out
xor
lahf
scas
lock
test
inc
xor
inc
popa
mov
mov
das
test
lret
je
test
push
lea
aaa
jle
out
fs
test
ucomiss
mov
addr16
icebp
dec
cmpsb
in
add
icebp
in
test
aas
fbstp
fnstsw
leave
gs
push
push
fdiv
mov
xor
imulb
xlat
jno
adc
sbb
adc
sub
push
test
jge
mov
xchg
and
add
dec
add
and
xor
adc
leave
cmpsb
dec
icebp
and
vmread
mov
push
push
repnz
add
pop
movl
xor
jle
pop
or
add
and
or
mov
mov
loop
ds
jecxz
movsb
xchg
or
inc
xchg
jne
add
stos
je
aaa
push
adc
adc
jns
aaa
dec
mov
subb
cmp
cmp
mov
loope
inc
push
pop
jbe
adc
mov
aam
xor
clc
inc
ss
in
outsb
push
or
sub
cmpl
cltd
xchg
imul
dec
add
mov
sbb
mov
mov
fidivrl
dec
adc
sub
outsl
jbe
es
push
mov
std
or
xor
pop
ds
insl
xchg
je
pop
push
clc
cmp
pop
pop
imul
ret
fwait
inc
pop
push
sbb
cmc
adc
adc
int3
push
or
cmpsb
in
adc
lods
mov
dec
daa
mov
hlt
adc
push
inc
in
pop
stc
cmpsl
pop
lods
movsl
movsb
or
xchg
add
in
xchg
inc
das
add
push
shll
cltd
nop
aas
fsubs
jae
lahf
pop
or
jb
xor
and
xchg
dec
test
icebp
ljmp
xor
outsb
add
pop
sbb
out
in
jnp
xor
dec
mov
cmp
stos
push
lods
xchg
add
out
adc
xchg
pop
mov
negb
jno
push
lods
dec
andb
mov
and
pop
cmp
loopne
mov
movsb
fistps
lods
inc
enter
lea
inc
nop
dec
in
shl
std
and
jnp
add
arpl
and
and
mov
stos
lea
pop
nop
xchg
mov
mov
ficoms
cwtl
rolb
les
lds
adc
mov
pusha
adc
push
maskmovq
testl
hlt
mov
xchg
lret
pop
push
insb
mov
sahf
pmullw
fwait
cmp
and
jmp
in
je
cli
dec
cld
fcomip
addr16
lds
cli
sbb
repz
inc
xchg
mov
jb
aad
sub
loop
in
cmc
mov
loop
push
jb
loope
sarl
mov
lock
test
out
fdivl
sub
jmp
orl
push
mov
scas
test
lret
nop
jbe
sub
cltd
addr16
lret
lock
mov
push
rorl
test
jmp
push
cld
jb
cmp
and
mov
xor
sub
dec
cmpsl
imul
inc
push
cmp
dec
faddl
gs
inc
and
addr16
and
popa
in
icebp
jbe
sahf
xor
jae
dec
xlat
xor
sub
imul
xchg
pop
fistps
pop
pop
sti
cli
call
pmullw
loop
push
cltd
popl
sbb
outsb
sbb
fadds
xlat
ljmp
xor
call
call
test
cs
es
pop
sub
fistl
adc
fs
leave
stos
lahf
adc
jne
pop
add
les
movsl
push
adc
dec
mov
or
xchg
mov
xchg
xchg
push
xlat
enter
les
sub
cltd
push
or
sahf
xchg
out
insl
shll
icebp
xchg
ficomps
ret
test
jecxz
lds
inc
fcmovnu
add
addr16
leave
dec
inc
push
repnz
das
fdivs
addr16
int3
cmp
aaa
dec
icebp
pop
in
add
or
and
push
mov
repz
and
jl
mov
repnz
outsl
sub
movsb
inc
mov
cmp
mov
into
push
outsl
jg
inc
mov
inc
movsl
pop
xor
shl
in
sub
cwtl
pop
stc
out
pop
dec
jge
rcrb
cltd
notb
fwait
and
subb
jecxz
stos
cmc
test
jmp
in
mov
adc
outsb
repnz
mov
das
xlat
inc
repnz
and
xchg
or
std
sbb
sub
or
adcl
sbb
jns
insb
push
or
fldcw
int3
pop
test
xchg
ja
xchg
fldlg2
sub
or
push
hlt
mov
mov
mov
or
mov
fldl
adc
mov
idivl
xchg
xchg
mov
mov
mov
lods
hlt
mov
push
add
es
pop
inc
movb
xor
lods
sti
or
pop
jno
cld
repnz
lock
jecxz
pop
call
cmpsl
subl
push
add
loope
ja
in
or
stos
mov
add
sbb
mov
xchg
cmc
add
sahf
push
jo
daa
jae
inc
ljmp
jbe
lret
dec
inc
or
jb,pt
and
cmc
jb
aas
stos
addr16
call
ja
mov
inc
jle
jp
dec
mov
push
bound
aad
bswap
loopne
xchg
adc
mov
mov
jecxz
movsl
es
adc
out
movsl
adc
add
clc
gs
in
daa
dec
sbbb
push
mov
sub
xchg
hlt
test
leave
xor
jno
add
gs
lret
dec
and
inc
int
int
repz
jns
mov
das
movsb
and
add
test
imul
in
mov
loop
lahf
and
dec
pop
or
popf
test
mov
mov
or
lcall
lcall
leave
mov
fildll
lea
jecxz
pushf
js
mov
jg
dec
and
ss
test
clc
sbb
lods
arpl
pushf
add
and
inc
adc
mov
adcb
mov
cmp
cmp
ds
lea
sbbb
andl
dec
ret
gs
inc
mov
je
mov
sbb
add
insb
pop
in
lock
int3
mov
and
or
mov
aam
push
andb
or
inc
lods
or
sub
ljmp
xchg
add
cmpsl
lret
xor
lret
jbe
mov
and
ljmp
aad
int
rcr
mov
or
aad
fists
xchg
xlat
xchg
xor
fdivs
add
xchg
int
hlt
push
mov
pop
subl
and
out
xor
frstor
or
or
dec
out
out
mov
mov
cmc
sahf
mov
std
les
push
or
mov
enter
mov
in
insl
cmpsb
dec
mov
push
cmpb
xcrypt-ctr
cmpsl
lcall
test
inc
pusha
fldt
jbe
fidivl
sbb
stc
xlat
jecxz
loopne
test
adc
mov
sub
xlat
mov
dec
mov
arpl
ret
lock
pop
jns
add
inc
in
movsl
lret
and
ds
sub
popa
add
cmc
jge
sahf
push
mov
push
mov
dec
xchg
add
js
mov
inc
es
or
pop
rcrb
mov
or
test
ret
mov
jg
xchg
mov
add
bound
mov
jo
mov
sub
mov
lods
pop
push
xchg
sbb
adc
mov
lods
adc
and
or
pushf
clc
cltd
push
lahf
add
xchg
jmp
add
add
add
adc
cli
mov
inc
xchg
xor
int
jge
pop
or
das
xor
sub
fstpt
mov
cmp
push
addl
ljmp
jne
mov
sbbb
fstpl
mov
inc
cmpsb
jne
xor
push
xchg
push
int
jge
pop
or
ret
loope
dec
cmpsb
fists
dec
fcmovnu
stc
dec
push
mov
inc
push
arpl
inc
ljmp
je
mov
cmpl
int3
insl
push
pop
out
mov
xor
dec
hlt
cmc
cmc
jns
leave
sbb
notb
jno
jge
jmp
shll
cs
xor
xor
sub
adc
jns
icebp
popa
add
xchg
fwait
dec
scas
pop
push
sub
mov
push
test
push
mov
push
push
pop
fwait
pop
mov
inc
pop
lcall
and
adc
mov
adc
inc
fadds
mov
ret
ljmp
stos
xor
fisubs
daa
or
dec
cmp
dec
sbb
jmp
js
inc
adc
mov
lds
adc
mov
mov
ljmp
sub
pop
jbe
divb
lret
jns
lods
fucomp
jns
push
pop
jno
gs
inc
aad
lret
scas
ret
mov
sti
leave
pop
ja
mov
scas
push
icebp
clc
cld
subl
fisubl
pop
mov
leave
cmpsl
es
inc
lret
xor
arpl
cmc
test
sub
xor
pop
scas
xor
mov
push
call
outsl
es
dec
loope
adc
inc
dec
stos
adc
cmp
sahf
sub
lea
xchg
cmpsb
jns
add
js
stc
cmp
xchg
lret
xchg
xchg
push
fs
xchg
mov
pop
cmp
mov
add
mov
pop
aam
xchg
in
int
sub
push
cmpsl
or
bnd
push
pop
jns
mov
clc
or
and
les
or
cld
lea
xchg
data16
jne
add
lods
es
out
adc
xor
stos
addr16
adc
mul
lea
mov
loope
sahf
and
jb
mov
mov
imul
xchg
cmp
and
mov
and
shl
pop
jle
mov
test
add
pop
in
pop
sbb
loope
lods
daa
popa
and
mov
out
add
daa
inc
mov
mov
inc
in
xchg
cmpsb
dec
loop
hlt
shr
add
daa
test
scas
inc
call
rcl
pop
loopne
test
xor
mov
adc
fsub
leave
cmc
shrl
insl
fcom
push
xor
mov
mov
xchg
sub
insb
lret
sub
jno
int
jge
pop
push
dec
xor
insl
inc
hlt
jp
add
jns
bound
shl
xor
rol
popa
jo
adc
mov
inc
out
fldl
xor
cmc
mov
fwait
imul
iret
jbe
leave
adcl
sbb
fists
mov
xorb
fsubp
nop
aad
sub
xor
mov
scas
rolb
jmp
inc
clc
sub
lea
push
int
in
icebp
or
stos
jo
ret
mov
mov
clc
sub
mov
mov
pop
lds
imul
push
mov
dec
adc
jge
out
in
sub
outsb
nop
xor
xchg
xchg
inc
mov
mov
pop
sbb
sbb
shrb
lcall
sbbb
jg
scas
repnz
stos
dec
and
cs
sbb
test
inc
jg
cmp
or
sub
and
stos
jne
inc
mov
mov
lock
fmuls
push
shrb
leave
fildll
add
ss
in
je
repz
xchg
mov
lock
lcall
add
jne
hlt
jmp
dec
push
ret
das
popa
orb
dec
loop
and
add
test
pop
loope
mov
adc
movsb
flds
loop
out
xchg
jecxz
das
inc
fmuls
loop
cld
cmp
pop
push
pop
cltd
arpl
xor
mov
xor
push
loop
scas
fldl
pop
pop
js
xchg
mov
inc
sub
xchg
mov
les
lret
dec
and
movsl
lea
xchg
sub
stos
sub
jnp
fidivrs
out
add
mov
mov
in
push
lret
inc
pop
jle
lds
int3
cmpsb
mov
pop
mov
test
sbb
adc
scas
daa
cmpsb
loopne
jo
xchg
inc
lret
gs
imulb
lods
jecxz
jne
xchg
je
test
ficomps
adc
out
fisubs
mov
out
loop
add
or
fstpt
jge
cmpsb
push
and
xchg
cltd
ret
sbb
xor
mov
lcall
sti
mov
sub
xchg
push
jo
xchg
aas
dec
inc
icebp
cwtl
inc
mov
mov
mov
jle
mov
out
ljmp
fmuls
outsb
testl
pop
loope
pop
js
cs
pop
jge
sbb
and
loop
pop
andb
jno
fmul
pushf
mov
ljmp
or
dec
jne
or
xchg
outsb
dec
add
add
sbb
adc
lods
rorb
mov
mov
cmp
jmp
adc
test
data16
xchg
std
fwait
push
lea
cmp
mov
or
adc
faddl
sub
pushf
pop
xchg
dec
add
mov
bound
aas
sub
arpl
cmpb
adc
push
mov
mov
pop
dec
fxch
cld
mov
mov
sbb
mov
fwait
jle
mov
cmpsb
lds
sbb
jnp
and
or
xlat
int
out
pop
loop
xchg
out
mov
jmp
mov
gs
mov
lods
popf
xchg
jbe
sbb
sbb
cmp
shl
adc
mov
in
call
xlat
lcall
insl
mov
inc
sub
sub
or
mov
sub
dec
mov
adc
in
mov
adc
dec
daa
loope
arpl
fildl
sbb
neg
fxch
jns
xchg
xchg
xorb
dec
testb
es
mov
and
mov
repz
arpl
enter
xor
pop
mov
xchg
push
insb
mov
orb
push
push
call
xchg
xchg
fsubrp
shrb
sar
sbb
sbb
mov
dec
cmpsl
aad
push
mov
bound
rolb
stos
push
mov
mov
fdivr
das
cmp
cwtl
jne
loopne
add
adc
jo
xor
adc
xor
lds
adc
xchg
hlt
fadd
push
adc
mov
xor
adc
out
xchg
test
mov
xor
mov
mov
out
and
push
lods
pusha
push
outsb
nop
jl
dec
adc
fiadds
pushf
movsb
push
insl
popa
mov
mov
mov
jbe
fidivrl
dec
push
mov
ljmp
dec
sub
mov
enter
insl
loopne
pushf
cmc
mov
test
daa
and
ficomps
mov
fildll
dec
stos
nop
mov
divl
lods
insw
loop
sub
in
test
mov
shlb
xor
adc
xor
inc
pop
pop
jl
mov
imul
stos
sub
jmp
pop
xchg
xchg
test
pop
mov
out
leave
jmp
adc
in
mov
jp
leave
ror
inc
mov
repnz
sub
xchg
hlt
dec
jl
incb
repnz
nop
test
or
jp
xchg
in
and
xorl
mov
sub
and
lret
in
into
xor
mov
orl
jp
mov
movsb
incb
push
and
imull
mov
mov
call
mov
aaa
imul
stos
or
mov
xor
ljmp
cmp
cmp
jno
pop
inc
push
mov
push
add
jecxz
aaa
jbe
loope
jb
dec
add
inc
push
xchg
pop
xchg
mov
lahf
test
sub
repnz
xor
addr16
sbb
or
xor
loope
jno
sub
adc
mov
xchg
pop
jmp
cli
add
xor
dec
pop
cmpl
neg
adc
fisubrl
xor
std
pop
jns
dec
rcrl
icebp
mov
sbb
mov
lds
cmc
sarl
push
mov
push
inc
pop
mov
xorl
cmpsl
sbb
daa
repz
xor
dec
mov
dec
sbb
lcall
movsb
cmp
and
ja
nop
mov
test
and
push
sbb
cwtl
data16
lods
mov
cmp
aaa
xchg
in
mov
scas
subb
mov
pop
icebp
push
jecxz
dec
movsb
ss
aas
lcall
fisubrs
push
adc
xchg
add
pusha
mov
stos
or
into
adc
in
rcr
inc
cmpsl
ja
jns
outsl
mov
ret
out
lds
sub
popf
divb
jns
int
mov
cli
shl
xchg
jae
imulb
and
iret
lret
ret
repz
jecxz
xorl
out
pop
test
movsb
mov
movsl
mov
filds
adc
adc
mov
aad
call
jns
adc
repnz
jno
mov
movsl
jo
lret
lcall
fnstsw
mov
sbb
loopne
mov
movsb
sbb
stos
jp
mov
or
pavgw
jb
jo
popa
cld
popa
push
jmp
pop
mov
fldl
fwait
jmp
jne
pop
sbb
and
outsl
xchg
or
stos
jnp
lret
and
jno
adcb
sub
sahf
adc
pop
clc
in
in
js
mov
xorb
pop
adc
mov
mov
cmpsb
xor
fisubrs
jge
sbb
je
jmp
loop
and
xchg
roll
mov
pop
out
das
ss
mov
in
test
push
scas
in
mov
lods
movsl
test
bound
dec
jmp
jp
xchg
gs
cmp
leave
aam
and
repz
popf
in
jns
sub
mov
lds
imul
addb
les
cmp
mov
pop
mov
add
inc
cmc
xchg
jecxz
inc
jmp
xor
mov
push
in
adc
das
xor
pop
ret
out
jge
adcl
repz
out
mov
xchg
xor
adc
out
dec
sub
or
fstl
imul
lods
pop
mov
movsb
jno
pop
call
inc
fs
inc
push
in
mov
jmp
icebp
jns
mov
outsb
add
popa
mov
idivb
jge
sbb
xchg
mov
loope
jecxz
cmp
sbb
adc
ja
push
mov
jl
push
mov
ljmp
test
ret
imul
mov
fisubrl
gs
or
loope
xor
fwait
out
fwait
les
mov
sbb
gs
in
xor
aaa
iret
mov
lock
in
adcb
push
leave
jmp
stc
bt
icebp
mov
out
adc
repz
push
fsts
mov
or
test
jb
add
xchg
sbb
dec
out
mov
sbb
ret
out
or
scas
mov
and
test
sbb
jge
cmp
jge
incl
iret
testl
inc
fmull
cld
sti
mov
add
xchg
xor
xor
lods
mov
adcl
rcr
fidivrs
cmp
cmpsl
jmp
mov
xor
jmp
mov
pop
and
hlt
insl
push
arpl
leave
lcall
push
repnz
jl
cli
mov
pop
loopne
aaa
arpl
mov
pusha
mov
and
cmpsl
jbe
mov
js
push
ja
xchg
jb
cmpsb
shll
fidivs
sub
inc
jbe
pop
mov
xor
ljmp
jno
mov
xchg
ds
call
sarl
mov
mov
mov
jo
push
pop
sub
mov
mov
imul
loope
fists
jecxz
lret
inc
or
dec
xchg
push
filds
pop
dec
sbb
movsb
cmp
dec
push
test
test
sbb
lcall
cwtl
int3
mov
mov
sub
push
cmpb
pop
add
xchg
aas
lods
lahf
mov
jecxz
dec
cmp
xchg
fldenv
xchg
test
aam
inc
cmpsl
je
xchg
out
icebp
or
repnz
call
cmp
mov
in
mov
mov
inc
mov
inc
mov
jmp
and
xor
in
mov
push
sbb
dec
test
xor
xchg
add
push
dec
shrl
movsl
ss
andl
sub
mov
mov
and
adc
add
add
mov
jecxz
jo
lods
jb
movsl
mov
push
sbb
popf
mov
mov
aam
addr16
movsl
popf
or
add
push
cltd
dec
or
rorb
lock
mov
sbb
push
push
outsb
aaa
cmpsl
or
or
testb
test
out
or
es
in
sub
inc
xor
xor
pop
test
mov
add
punpckhbw
bound
xchg
in
and
push
std
out
int3
sbb
lods
jl
adc
push
scas
arpl
in
push
das
cmpsb
xor
icebp
mov
int
pop
orb
pop
ljmp
mov
jbe
or
dec
and
ja
and
int
dec
orl
jmp
outsb
mov
pslld
sbb
xor
gs
xlat
add
sub
mov
xchg
mov
incb
jo
lds
stos
inc
dec
mov
jmp
je,pn
sbb
outsb
lock
pushf
inc
inc
adc
shrb
repz
lods
divb
aad
jecxz
or
inc
fdivl
nop
push
adc
mov
mov
aam
jge
repz
jl
cmc
cmpsl
xor
mov
in
fdivl
insl
jne
mov
mov
in
outsl
pop
clc
dec
ffreep
cmp
js
xchg
cmpsl
test
lret
fdiv
jne,pn
mov
jp
out
mov
push
mov
nop
scas
xchg
jmp
jmp
shlb
loope
mov
jl
cld
mov
pop
data16
fdivrl
mov
mov
cmpsb
push
pop
push
inc
sub
lods
out
adc
sbb
push
xchg
nop
mov
cmpxchg
mov
das
sub
aaa
jae
push
mov
ljmp
mov
jmp
pop
mov
cmpsl
or
xor
adc
and
sub
inc
pop
mov
dec
pop
sbb
inc
jmp
xchg
cmc
mov
mov
leave
cs
inc
insl
add
pop
inc
adc
insl
mov
push
fiadds
mov
in
in
pop
mov
add
insb
lahf
loop
pop
xchg
daa
leave
mov
loopne
inc
add
mov
repnz
stos
idivb
shrl
fnstenv
ret
out
sub
mov
sbb
aam
pop
mov
push
inc
lds
ljmp
mov
jb
je
int
dec
inc
out
fwait
loopne
std
in
add
mov
iret
sbbb
and
lds
insb
mov
arpl
sub
add
rcrb
icebp
stc
push
in
movsb
stos
std
in
cmp
xchg
in
push
sbb
pop
stos
icebp
and
xchg
dec
rorb
mov
sbb
xchg
sub
sbb
test
jb
inc
outsl
movl
jge
adc
and
mov
add
sahf
adc
fildll
inc
pushf
jle
push
jo
sbb
les
xor
jnp
mov
jb
aaa
shlb
jecxz
jmp
mov
lods
cli
out
ja
stos
mov
lret
adc
aad
fsubp
fmull
cmpsb
pop
leave
sahf
mov
push
aam
sbb
gs
ds
lahf
inc
cmp
xchg
pop
bound
js
imulb
mov
jg
add
inc
push
stos
push
out
outsb
and
fnsave
adc
dec
push
mov
jbe
out
lds
ret
mov
fidivrs
and
out
sub
mov
dec
call
lret
inc
fcompl
xchg
dec
push
repz
mov
cltd
mov
adc
out
pushw
inc
mov
test
jmp
dec
xchg
sti
lods
ljmp
in
mov
push
ja
rolb
rorb
mov
and
in
inc
cwtl
repnz
movsb
mov
addb
lods
lock
or
test
aam
jecxz
and
mov
xor
cmp
outsb
push
lret
cmc
dec
les
xchg
dec
enter
xor
lahf
scas
or
outsl
dec
ljmp
push
mov
jno
cltd
in
cmove
adc
scas
add
cwtl
hlt
or
add
push
xor
stos
pushf
or
add
pop
jbe
cmp
ret
in
adc
fisttps
lcall
jecxz
pop
hlt
adc
bound
cli
cwtl
lods
fs
inc
lcall
out
pusha
mov
mov
ret
sub
mov
mov
ret
sub
loopne
sahf
inc
and
jno
out
hlt
mov
add
sub
lahf
arpl
sbb
test
add
jbe
inc
cld
xlat
sahf
cs
push
inc
cmp
pushf
repnz
xlat
mov
or
jmp
jns
cmc
arpl
add
ret
or
je
mov
aas
add
sti
sar
jne
mov
pusha
jp
rcrb
ljmp
ljmp
mov
adc
mov
inc
mov
pushf
push
ret
ficoms
pushf
mov
sub
sbb
out
cmc
mov
stos
mov
adc
pop
stos
pop
dec
adc
mov
cmpsl
or
adc
jecxz
es
aam
sbb
lds
std
xchg
xor
call
mov
ds
xor
aam
pop
xor
stc
fiadds
mov
mov
dec
xor
icebp
jle
popf
pop
insl
dec
add
add
pop
cs
ficompl
jge
jmp
or
xchg
pop
shll
jo
mov
sbb
aas
or
and
call
les
dec
add
test
jno
mov
sub
push
jge
mov
mov
imul
inc
dec
inc
add
fidivl
cmp
jmp
or
jge
sti
lret
cmpsl
dec
jmp
or
cld
ret
pop
jns
cmp
bound
aad
iret
add
pop
adc
pop
jmp
ret
push
out
adc
shll
insb
divl
addps
mov
cmpsb
subl
jl
out
lcall
fildl
loop
cli
mov
scas
lods
push
push
roll
push
dec
push
popa
faddl
jb
inc
push
jo
bound
push
mov
lahf
ljmp
daa
xchg
jmp
out
sbb
test
add
rolb
loope
jp
xchg
les
es
mov
or
repz
push
inc
cmp
dec
add
rcrl
mov
cltd
pop
push
mov
sub
and
imul
push
pop
enter
scas
jp
push
ret
xchg
out
lds
adc
push
add
push
inc
sarl
sarl
pop
jne
movsb
mov
addr16
std
xchg
adc
cmp
icebp
addr16
fcompl
or
jo
and
jle
lcall
subl
lock
inc
sub
xlat
dec
ds
lcall
mov
shlb
fildll
lods
cli
stc
adc
xchg
pop
push
jae
add
test
mov
fcmove
movsl
popf
inc
ljmp
call
dec
in
ljmp
push
sbb
mov
test
and
in
divl
pop
jne
mov
fwait
hlt
adc
repz
inc
mov
jmp
sub
xchg
jmp
dec
xor
out
adc
in
jecxz
adc
in
or
test
stc
and
data16
scas
aas
dec
in
pop
pop
cmpsl
mov
dec
jmp
jns
sub
add
push
ret
xchg
hlt
js
fidivrs
push
outsb
aas
ret
push
inc
xor
sub
and
call
mov
movsb
pop
int3
call
pop
aad
fs
sub
mov
mov
popa
sahf
xchg
repnz
push
mov
and
adc
cmp
dec
xchg
mov
fists
inc
loope
sub
push
or
mov
jmp
idivl
loope
repnz
xor
add
push
mov
popf
push
jno
cmpsb
shll
or
cmp
jne
inc
sti
lcall
idivb
fistpll
lds
lret
sti
sbb
jno
xchg
mov
xchg
adc
push
and
mov
insl
sbb
mov
lret
movsl
or
or
mov
dec
adc
dec
imul
rolb
pop
sbb
out
out
mov
insl
dec
dec
mov
fisubs
loopne
orl
shl
xlat
in
lret
jno
xchg
mov
and
jp
mov
sub
testb
test
or
mov
in
rolb
pop
mov
mov
jno
cmp
imul
jg
movsb
aaa
out
xchg
in
sub
repz
mov
imul
jmp
push
popf
adcl
out
pop
lahf
test
jmp
dec
xor
fsubp
mov
movswl
pop
nop
fidivl
stos
jmp
inc
xchg
call
push
add
movsl
adc
fstps
xchg
mov
lods
jp
pop
push
jne
sbbl
shlb
jmp
adc
sbb
mov
add
jge
gs
addr16
jb
jae
test
scas
pop
in
sub
xor
icebp
cmpsl
sub
dec
adc
dec
pusha
loope
jo
cmp
in
popf
testb
std
movsl
out
lcall
mov
mov
fdivs
inc
ret
xor
orl
je
gs
and
xchg
imul
call
lret
push
jl
push
out
mov
sti
fimull
push
and
ret
lcall
jmp
adc
cmpb
fsubl
pop
add
mov
mov
lcall
push
lret
lock
imul
je
call
movsb
clc
test
jmp
push
fsubr
xchg
in
push
mov
dec
pop
shlb
test
jb
or
ss
pusha
xchg
xchg
adc
sbbb
lret
mov
lret
scas
ret
stc
mov
sub
clc
cmp
arpl
ret
mov
repz
pop
cmp
sti
scas
ds
inc
push
cmp
push
pop
push
push
sbb
mov
insl
mov
jg
pop
xor
orb
int3
popf
outsl
in
xchg
sarb
jmp
adc
and
stos
dec
stc
pop
rcrb
fstl
hlt
fidivs
mov
xor
or
inc
jecxz
stos
in
in
aam
das
xchg
popa
enter
adc
jno
mov
and
push
cwtl
test
xchg
xchg
mov
call
int3
gs
in
xor
rolb
in
cmpsl
jp
imul
mov
popa
out
lret
pop
mov
ss
ds
cmp
imul
mov
in
icebp
mov
mov
mov
in
stmxcsr
mov
mov
insb
xor
push
cmc
clc
cmpsl
sbb
xchg
loopne
outsl
loopne
ss
int
js
movsl
lds
xchg
ror
insb
mov
adc
aad
lods
jmp
in
fs
xchg
out
and
ljmp
cmpsl
ret
and
pop
jecxz
daa
lock
lea
xor
rorb
fnstsw
sbb
fidivrs
jp
push
mov
stos
inc
push
adc
xchg
add
sub
adc
fs
jbe
idivb
cmp
jl
cmp
cmpsl
fcmovnb
aam
lods
mov
roll
sbb
jnp
int
xchg
rorb
lods
repz
lods
test
cmpsb
adc
sbb
lcall
or
jge
pop
xorl
jp
shll
push
bnd
je
mov
adc
push
add
stc
in
rcrl
jmp
cwtl
rcl
pop
jp
or
sbb
movsl
sbb
inc
mov
ret
out
dec
gs
ret
out
flds
push
mov
xchg
pop
rol
adc
les
aam
sub
rcrb
aam
add
or
jne
iret
cwtl
pop
out
cmp
sti
sahf
push
adc
in
mov
and
scas
nop
xchg
test
pop
push
inc
add
and
dec
xchg
cmpsb
xlat
fsubs
test
je
out
int
lahf
in
shlb
add
ljmp
mov
movb
sbb
fcompl
sub
int
adc
sahf
jns
cli
inc
jg
xchg
add
mov
push
sahf
push
in
adc
cmpsl
mov
jne
cmc
enter
xchg
mov
fcomp
in
popf
sbb
ljmp
and
call
sahf
xchg
sub
lea
je
es
push
xor
aas
fstpl
add
lock
enter
cs
dec
xor
lea
std
es
push
lds
pop
loop
cmc
sub
test
dec
xor
xor
daa
jne
stos
cmp
xor
mov
lcall
jecxz
mov
pop
sbb
aas
cwtl
sub
mov
jecxz
cmpsb
mov
xchg
sub
and
xor
cli
dec
fnstenv
enter
ja
jns
xchg
hlt
sbbb
std
imul
dec
in
dec
cmp
sbb
test
test
stos
mov
adc
test
mov
out
mov
jp
mov
stc
sbb
mov
add
dec
jne
subb
test
ja
jb
fnsave
lock
add
push
cmp
jp
sbb
push
testl
mov
jbe
add
call
in
jg
test
movntps
repnz
lea
jbe
or
leave
cs
jl
sbb
addl
adcl
inc
cmpxchg
sub
jl
jb
mov
mov
cs
mov
out
imul
sbb
fucom
jo
fsubrl
inc
inc
dec
popa
push
bound
xchg
dec
test
scas
outsl
or
xchg
add
cwtl
mov
cltd
cld
pop
or
loopne
sbb
xchg
adc
dec
cmp
and
or
andb
add
cmpsl
push
in
add
and
icebp
push
push
add
xchg
aad
dec
outsl
sub
aas
push
fimuls
inc
int3
jne
fucomi
ljmp
outsb
xchg
ret
sbb
xlat
mov
jne
mov
test
jns
in
insb
lcall
lret
jg
jnp
into
xchg
or
push
jae
mov
pop
push
lea
shl
add
enter
adc
pop
push
inc
jmp
mov
ds
push
loop
shrd
call
addr16
les
or
sub
add
addr16
loopne
enter
inc
mov
cwtl
inc
mov
lea
sbb
push
mov
push
mov
lret
lods
adc
stos
lods
sti
test
es
xchg
xor
ret
movsb
pop
imul
adc
aaa
mov
jmp
stos
jo
jno
add
lock
push
sarl
aas
xchg
out
das
jo
lret
pextrw
or
je
xor
jnp
aad
inc
sbb
aam
lods
insb
and
in
test
mov
jecxz
push
ficoms
push
je
push
dec
pop
fst
gs
xor
bound
mov
repz
jo
lock
adc
and
cmp
pop
inc
or
dec
push
cmp
outsl
or
mov
fwait
push
mov
xchg
push
stc
cli
ficoms
xor
xor
dec
lcall
testb
jae
lret
leave
add
add
faddp
fisubs
mov
in
fs
mov
fdivrp
lcall
push
call
inc
push
jge,pt
jmp
pop
pop
pusha
xchg
inc
std
hlt
sbb
loope
out
jg
cmp
scas
movsb
xchg
push
xchg
add
sahf
les
cwtl
dec
mov
xchg
lcall
or
lret
jnp
repnz
daa
ret
in
xlat
sub
call
pusha
adc
fcmovb
jmp
insl
jmp
enter
lret
fdivl
inc
fistps
out
test
hlt
sahf
subl
cmp
pop
outsb
repnz
mov
shl
adc
adc
bound
sahf
movsl
filds
in
mov
dec
scas
fwait
push
inc
or
mov
lods
pop
sub
push
xor
movsb
cmp
out
data16
jne
xor
dec
pop
jnp
xlat
adc
sbb
out
mov
jmp
xor
cmpsb
mov
pop
pop
mov
inc
je
push
fnsave
xor
aad
ret
in
gs
mov
insb
jg
mov
in
setnp
ds
mov
test
or
ja
fldcw
movhps
test
mov
in
adc
das
loop
lcall
mov
lcall
push
and
inc
testb
or
jns
sbb
int3
add
mov
jge
mov
aam
push
push
fs
lods
mov
sti
push
lods
popf
shlb
mov
sbb
faddl
or
mov
enter
lods
mov
and
faddl
aaa
repz
orl
orb
fwait
hlt
test
dec
pop
push
xchg
and
push
mov
imul
cmp
mov
push
stos
ret
dec
sub
jg
add
aas
out
sub
push
mov
xchg
xchg
add
iret
mov
lds
fimuls
insl
in
lock
mov
mov
popf
ret
push
loopne
sub
jle
fisubs
and
loope
adc
pop
sbb
add
lret
hlt
ret
aam
inc
cmc
sbbl
mov
aas
scas
rcr
daa
cmpsb
or
into
movsl
in
insb
cltd
jns
push
loopne
movsb
mov
mov
mov
pop
pop
sbbb
mov
jo
loop
mov
out
fstp
mov
pusha
icebp
jecxz
lods
popa
dec
and
mov
xchg
mov
sub
mov
out
loope
xor
dec
loop
gs
mov
push
aam
addl
push
xchg
lea
or
mov
mov
icebp
jbe
fsubrs
in
and
in
mov
xchg
sbb
xlat
cld
jbe
jbe
jle
repz
inc
stc
repz
rclb
and
cmpsl
repz
mov
outsb
les
pushf
repz
dec
xor
fisttps
pusha
shl
push
rcrb
outsb
sub
pop
jnp
fnclex
dec
jb
mov
cld
iret
and
mov
in
popf
add
rcrl
xor
ja
movl
cli
dec
aam
cmc
push
hlt
rol
scas
jmp
lcall
fstpl
dec
and
xor
pusha
xchg
outsl
inc
xor
popa
lods
mov
fstp
jns
sub
mov
jecxz
jge
lds
stos
popf
in
adc
jl
orb
jae
sub
lods
enter
fimull
fldenv
scas
and
movsl
iret
in
jo
outsb
jmp
test
pop
mov
xor
loop
inc
or
mov
fsubl
push
in
test
pop
mov
xchg
mov
insl
out
and
fs
cltd
movsl
push
pop
stos
rolb
call
mov
in
mov
cmpsl
jmp
lret
fists
adc
xchg
lods
daa
cmpsb
mov
pop
js
movsl
add
bound
outsb
sahf
pop
std
mov
adc
sub
and
pop
les
pop
mov
scas
test
mov
cmpsb
xchg
adc
bsr
pusha
and
push
add
xor
imul
mov
mov
jmp
xor
dec
push
cmpsl
shrl
pushf
dec
xor
dec
lock
pop
adc
jp
insl
cltd
mov
addr16
stos
dec
ret
fucomip
lods
cwtl
mov
cli
lds
sbb
xchg
std
mov
pop
into
inc
cltd
jne,pn
cmp
push
pop
adc
cltd
fcmovu
out
cmc
cmp
cmpsb
filds
fcompl
ret
or
push
sbb
call
fs
out
lret
ja
or
in
xlat
enter
sti
mov
jecxz
mov
jecxz
mov
cmpl
stos
es
dec
lcall
and
out
repnz
cli
sahf
loopne
pop
cmpl
add
mov
push
pop
movlps
outsb
ficoml
dec
fidivs
lock
out
push
xchg
fwait
int3
pop
insl
sbb
inc
js
pop
adc
in
loopne
dec
mov
pop
das
inc
test
adc
shrl
dec
ja
int3
loop
add
pop
fsubrp
push
lcall
sbb
pop
cmp
pop
fwait
mov
arpl
mov
repnz
pop
mov
xchg
jecxz
pop
popf
repnz
scas
xchg
dec
outsb
lock
adc
adc
adc
pop
adc
xchg
sub
ficoms
xchg
mov
movsb
repz
cmpb
stos
push
xor
fwait
outsb
jbe
jl
inc
pop
push
inc
lcall
sub
and
lret
sbb
movsb
jne
mov
out
cli
les
jbe
sbb
jle
lods
movsl
cs
addr16
mov
jno
in
ss
pop
iret
scas
lret
cmc
ror
cwtl
pop
jecxz
add
rcr
test
mov
mov
adc
icebp
inc
ds
pop
xor
cmp
fisttps
cmpsb
pop
adcb
fbstp
js
clc
test
movsl
xchg
clc
jle
scas
ja
cmp
int
dec
inc
pop
jmp
jmp
in
lods
cltd
mov
adc
testl
mov
or
ret
lods
daa
clc
mov
fcmove
jbe
out
sbb
arpl
xor
rcrl
dec
jecxz
lods
dec
lea
mov
add
in
js
pop
dec
lahf
jge
inc
fldt
in
jae
lods
mov
outsl
lods
or
jmp
push
jge
out
pop
and
arpl
js
cmp
stos
inc
je
fstpl
adc
pop
lock
push
adc
shlb
and
shll
test
rorl
xor
jbe
pop
es
mov
mov
push
jmp
pop
mov
or
bound
pusha
pop
nopl
out
fisubrs
push
lea
cmp
shll
cmc
in
clc
sbb
sti
pop
and
xorb
stos
lea
push
jo
pop
jecxz
aas
sub
dec
and
in
mov
fcompl
xlat
ret
inc
ja
rcrb
cmpsb
mov
int
jg
cmpl
and
fucompp
xor
cmp
insl
js
aam
pushf
add
xor
xor
pushf
rclb
outsb
addr16
shl
enter
lret
insb
sub
insl
adc
pop
mov
hlt
mov
mov
cmp
aaa
sahf
out
js
cli
fisttpl
mov
aam
pusha
dec
lcall
stc
or
fnstsw
push
push
pop
push
dec
inc
push
icebp
pop
shr
ficompl
movsb
xlat
hlt
push
arpl
in
pop
jne
cltd
xchg
mov
mov
sub
adc
cmpb
rorl
popf
adc
adc
icebp
dec
mov
lea
in
mov
in
xchg
stc
inc
adc
mov
imul
in
cmp
stos
cmp
insl
fdiv
divb
jo
aam
xor
enter
cmpl
xor
mov
mov
std
into
and
mov
in
out
clc
orb
pop
idivb
xchg
out
decb
inc
stos
jae
std
inc
clc
mov
inc
aas
lds
xchg
xorl
es
shl
test
push
mov
cld
loop
adc
imul
pop
mov
xchg
aas
mov
std
movsb
jno
mov
outsb
xchg
jmp
pushf
mov
mov
sbb
and
in
add
jnp
mov
repnz
push
mull
pop
inc
push
xchg
lock
sub
sbb
or
arpl
xorb
movsl
mov
mov
out
ss
mov
mov
frstor
jb
scas
and
sbb
into
cwtl
les
or
dec
jnp
rcr
cmp
testb
and
or
and
or
pusha
cmp
jmp
fs
and
into
in
out
push
push
cmc
jle
int3
cmpsb
cwtl
pop
mov
loope
iret
push
adc
and
pop
push
aaa
loope
dec
mov
mov
sub
xor
cmp
aad
inc
sub
push
jge
sbb
sub
in
adc
call
push
hlt
inc
inc
cmp
addb
lods
mov
sbb
adc
rorb
loopne
enter
cmp
push
jmp
popf
pop
in
gs
nop
jno
push
popf
notb
popf
int3
sbb
jno
or
pop
shl
jb
fstps
mov
jns
mov
push
sub
dec
mov
pop
sti
jae
in
stos
mov
jbe
xor
inc
add
jge
push
pop
cli
lret
push
pop
mov
lcall
lret
cwtl
mov
pop
or
neg
push
frstor
mov
jp
jae
dec
cmp
pop
std
push
mov
pushf
push
push
aam
les
and
push
sub
mov
scas
add
sub
repnz
stos
lahf
pop
add
int3
imul
lods
dec
pop
imul
lahf
dec
jp
int3
dec
lret
and
gs
movsl
popf
test
sub
fs
in
mov
jmp
imul
ds
call
mov
mov
scas
test
lea
sub
push
movsl
sbb
and
aas
cmpsl
fisttps
jne
sub
cltd
add
mov
dec
ss
les
fldl
sub
xlat
retw
stos
data16
stos
iret
push
mov
dec
loop
cmp
in
sbb
jg
test
mov
int3
loop
cltd
imul
lds
ds
xor
and
mov
mov
push
mov
out
lods
adc
pusha
stc
bound
mov
mov
jb
jbe
in
sbb
cmp
xlat
dec
jno
call
mov
xchg
in
mov
movsb
subb
ds
adc
inc
cmp
xorl
xchg
ret
mov
pop
ds
sbb
int3
shll
dec
cs
loopne
jnp
popf
mov
mov
pop
notb
or
in
xchg
stc
mov
hlt
clc
sahf
pop
push
jbe
repz
and
rol
in
stc
dec
sti
rcl
or
ljmp
in
mov
fnsave
push
int
int
xchg
loope
add
or
adc
in
outsb
xor
icebp
pusha
loopne
sub
push
push
adc
lds
sahf
fstl
in
sub
je
mov
mov
out
shll
cld
inc
push
xor
loope
test
gs
aaa
lds
andb
pusha
ret
dec
sub
xchg
dec
fincstp
gs
out
rcll
arpl
loope
pop
les
loopne
ds
mov
add
in
sub
inc
repnz
dec
mov
call
push
pusha
dec
hlt
xlat
into
fwait
int3
sub
inc
dec
shll
ret
sbb
sbb
cmp
ds
stos
fmull
sub
xchg
outsb
sub
push
lods
sbb
push
mov
jp
nop
lret
ja
iret
and
dec
ret
push
es
fsubr
or
loopne
les
bound
fnsave
and
push
out
add
adc
int3
add
mov
sahf
push
fimull
xlat
lcall
lods
cld
out
xchg
les
and
xlat
jl
sub
fwait
push
sub
pushf
out
ret
insl
sbb
mov
scas
call
out
lods
in
mov
cs
xchg
sbb
sahf
scas
dec
subb
leave
sbb
sahf
pop
lea
pop
scas
shll
in
loop,pn
push
shlb
addr16
push
or
test
scas
lcall
sub
daa
sbb
shll
sbb
and
adc
in
popa
pop
xor
jg
rcr
mov
sbb
icebp
and
in
repnz
mov
ret
fs
out
int
imul
in
sarl
aas
push
push
popf
arpl
fstp
jbe
sub
test
cltd
dec
mov
vmwrite
lods
jl
shl
and
fmull
push
sarl
stos
cli
push
lods
outsb
xor
jmp
lods
lock
inc
xor
cwtl
sbb
das
fnsaves
xchg
aaa
hlt
les
inc
sub
stc
vfnmsub231pd
dec
mov
pusha
lret
xor
ss
sbb
fildl
cmp
test
sub
adc
add
leave
mov
fisubrl
mov
jb
js
lcall
dec
gs
add
pop
xchg
lods
stc
out
mov
xchg
ret
outsl
add
mov
push
arpl
sub
popa
pusha
hlt
popa
je
jns
cmp
push
stos
cmp
mov
xorb
push
out
shrl
lock
insb
imul
pop
test
aad
in
sub
loope
sub
cli
call
jb
mov
pushf
stos
adc
jl
daa
cmp
add
cmp
cmc
pop
xor
fucom
jb
movsl
dec
shrb
ja
idivl
rcrb
push
in
lock
dec
mov
nop
push
data16
es
leave
arpl
jno
call
out
mov
jbe
cli
xchg
pop
int3
les
out
pop
xchg
sbb
push
jmp
int
cld
cmp
fldenv
mov
inc
sub
arpl
jns
rcrb
push
jbe
in
push
push
cli
jae
lret
xchg
std
jl
inc
add
arpl
or
in
pop
sbb
cmp
push
push
xchg
aad
jge
imul
add
rcrl
dec
jne
loope
ss
push
movsb
out
loopne
int
add
mov
cmp
repz
push
sbb
pop
je
call
xor
jbe
cli
sub
insb
jno
stc
stc
add
outsb
inc
inc
std
xor
dec
in
and
add
ja
inc
dec
push
cmp
cmc
lods
outsb
or
mov
jb
addr16
jne
mov
popw
or
stos
mov
mov
je
mov
sti
mov
aas
lock
mov
test
cmpsb
mov
mov
cmc
cmc
jle
or
sbb
mov
enter
pushf
mov
jmp
jecxz
dec
das
cmc
and
movsb
sahf
sub
and
pop
dec
push
ljmp
push
xlat
and
movsl
xor
je
jg
imul
shll
outsb
les
add
add
mov
push
inc
lea
push
shlb
pop
les
xor
xchg
sub
sbb
enter
dec
arpl
lcall
cmpsl
ss
inc
outsb
lds
mov
pop
shrb
cmp
adcl
cmp
call
pop
les
mov
bound
adc
and
jmp
in
lret
mov
sti
jbe
mov
in
jge
cmp
arpl
jo
push
movsb
stc
push
int
outsl
hlt
cs
out
sti
icebp
cmp
call
hlt
adc
cmpsl
mov
push
jbe
mov
loope
cwtl
inc
add
adc
icebp
test
lret
and
ja
jb
xchg
sbb
push
pop
mov
inc
jmp
inc
mov
sti
lret
fstpt
test
repnz
xor
mov
div
mov
pop
xor
repz
jnp
fidivs
mov
cmp
sbb
in
andb
cmp
dec
mov
shl
cmp
adc
in
xor
fistps
pushf
xor
or
enter
inc
push
dec
or
repz
jno
or
mov
add
repz
inc
pop
cld
mov
sub
cmp
mov
or
lret
lcall
sti
xor
outsb
cld
test
mov
lret
mov
and
dec
adc
cmp
add
std
xchg
mov
out
mov
mov
adc
pop
sti
push
out
mov
cwtl
popf
add
aad
aad
leave
xor
fnstenv
sub
sbb
scas
loope
mov
lods
or
xchg
lods
mov
mov
fiadds
cli
jecxz
dec
daa
aaa
test
dec
dec
loop
sbb
bound
imul
ficoms
mov
and
aam
add
enter
inc
in
and
aas
cwtl
outsb
cmpsb
fdivrl
sbb
xor
js
mov
xor
push
popa
scas
lcall
adc
addr16
cmpl
and
push
hlt
add
xor
xlat
cmpsb
outsb
test
cmpsl
pop
call
mov
fisttpll
sub
bound
lods
dec
pop
aas
cli
movsl
ja
fdivl
adc
and
mov
in
lret
and
sub
test
mov
and
pop
lahf
cmpsb
lahf
pop
test
and
lcall
cmc
out
fiaddl
mov
lahf
inc
sar
sbb
ss
leave
sbb
sti
stc
aaa
and
sbb
mov
out
test
sbb
jl
jp
mov
sbb
rcl
push
ss
cmp
pop
ja
div
lock
dec
stos
aaa
dec
repnz
and
cld
scas
call
sar
lcall
jo
xor
out
shll
rolb
gs
and
cs
jmp
add
dec
negl
inc
cld
ja
or
les
xor
xchg
movsl
jae
lods
dec
test
xor
clc
js
sbb
xchg
inc
mov
push
loope
pusha
lahf
movsl
std
dec
dec
pop
jbe
add
jo
push
je
leave
pop
or
xchg
xlat
adc
stos
pop
les
and
xor
mov
xor
jns
sub
and
jae
sbb
pop
shr
in
call
and
cmc
std
cmpsb
sub
xor
add
stos
adc
popf
push
jnp
cmpsb
sti
repnz
sub
aam
sbb
push
cmc
mov
push
dec
decl
ja
or
and
out
lea
lret
push
cltd
cmpsb
nop
mov
mov
pop
push
subb
test
sub
mov
fdiv
fsubr
pop
in
mov
and
insl
inc
jnp
push
stc
xlat
fidivl
pop
fst
inc
inc
lds
lret
clc
insl
pop
adc
ss
ret
out
mov
mov
out
inc
xchg
mov
inc
mov
adc
mov
je
outsb
ja
or
xor
aaa
shlb
jb
andl
stc
mov
inc
adc
pusha
insb
sbbl
jl
lahf
fstl
call
lret
mov
fwait
xchg
push
cmp
in
repz
xor
repz
out
pushf
lahf
daa
repz
repz
mov
rcll
jp
rclb
or
lock
xor
loope
movsl
and
popa
push
sub
push
and
test
rcrb
fs
push
outsb
in
adc
cmc
cld
push
pop
fdivr
mov
adc
add
sub
sbb
test
mov
setne
nop
inc
ljmp
jno
xchg
jbe
and
fisttpl
in
in
je
or
loope
leave
push
adc
jmp
imul
and
or
push
lock
loop
insl
movsl
and
lods
fstpt
subl
les
mov
lds
fwait
in
and
flds
lret
mov
cwtl
mov
test
cmp
divb
pop
mov
sbbl
mov
test
out
xchg
lcall
mov
hlt
and
stos
and
xchg
add
rcrl
sbb
add
xchg
int
cmp
mov
mov
insl
jg
fdivp
cltd
imul
fisubs
push
mov
pop
xlat
mov
outsl
repnz
test
ljmp
rcrb
inc
popa
movsb
int
dec
mov
vcvtsi2ss
xchg
and
and
sub
jnp
sbb
adc
mov
jns
out
xchg
cmpsl
adc
mov
enter
les
pop
mov
shr
or
xor
repnz
test
stc
fstl
lea
ljmp
mov
cmpsb
push
sub
in
push
mov
add
mov
mov
rcr
lahf
movsl
xchg
lods
movsl
ja
mov
push
sahf
loopne
add
dec
cld
and
out
aad
fs
fisubl
mov
pop
dec
in
fmull
lahf
cmp
mov
jle
jle
dec
repz
in
fcomp
clc
test
ret
lods
stc
int
mov
loopne
lcall
mov
jae
cld
popa
in
and
inc
xor
xchg
mov
enter
and
rcl
les
mov
icebp
add
insw
hlt
xchg
jno
int3
jle
mov
ja
cmp
fildl
xchg
in
mov
out
clc
jge
jle
sub
and
dec
data16
jb
orl
pop
leave
xchg
push
lock
outsb
jecxz
push
mov
or
xchg
inc
sub
xchg
stc
mov
add
lds
fs
lcall
mov
dec
pusha
nop
pusha
rcr
dec
push
movsb
push
out
pop
and
mov
outsl
icebp
sbb
sub
movsl
lret
enter
test
and
mov
scas
ljmp
mov
jne
cmp
add
push
sub
test
data16
fwait
dec
lcall
mov
pop
mov
mov
xor
fstl
jne
mov
jmp
adc
scas
mov
das
mov
cmc
mov
in
sub
and
adc
sbb
add
movsb
sbb
sub
ljmp
test
popf
das
test
cli
mov
mov
xor
pusha
mov
hlt
inc
outsl
and
leave
cmp
shll
mov
push
pop
bound
cltd
cmp
das
hlt
push
aad
clc
lret
add
loopne
jae
adc
in
add
jle
sbb
jmp
std
mov
sub
sub
loop
es
add
or
test
addr16
stc
shr
jno
push
push
pop
rcrb
aad
popf
popf
inc
fs
icebp
sub
inc
add
mov
cmp
add
jle
shll
rolb
push
or
xor
pop
jg
inc
outsl
clc
aam
xchg
inc
sub
and
jns
insb
icebp
mov
xor
push
cmp
in
add
cmp
jg
movl
inc
gs
out
and
scas
cli
cmp
ja
repnz
mov
sbb
fmull
adc
cmpsb
cmp
scas
insl
adc
aas
mov
mov
fsub
cmp
mov
mov
dec
pop
mov
cmpl
mov
sub
shrl
xchg
std
pop
pop
jmp
push
cmc
std
jne
mov
mov
lods
cmp
sbb
sahf
das
mov
lock
or
fldenv
lock
fidivl
shll
andl
xor
adc
mov
in
bound
rclb
nop
xchg
lret
xchg
enter
dec
mov
addr16
pop
jno
push
loop
xlat
inc
stos
pop
lret
or
stc
inc
ss
mov
vmovups
int
xchg
js
aam
cmp
movsl
or
sub
sbb
xchg
and
mov
xlat
andb
sti
push
fnsave
into
mov
pop
adc
ret
out
cmp
xor
jl
dec
adc
mov
ja
call
push
scas
push
call
sbb
arpl
mov
inc
pop
lcall
add
pop
arpl
aad
out
cmp
push
lcall
leave
push
xchg
push
cwtl
mov
dec
repz
lods
xor
outsb
scas
xchg
sbb
mov
ljmp
inc
roll
rclb
daa
repz
cli
shr
cmc
push
add
cmp
and
pop
sub
and
lcall
in
and
iret
pop
aam
pop
mov
jecxz
test
rcr
push
jbe
xchg
mov
xchg
mov
pop
mov
xchg
gs
jbe
out
sub
mov
mov
jl
enter
sbbl
pop
fs
shll
fidivl
mov
xchg
xchg
arpl
jp
sub
idivb
jne
out
push
pop
les
dec
shlb
cmpsb
stos
push
mov
xor
cmp
and
jmp
gs
shrl
dec
and
daa
sti
jp
xchg
cmpsb
xor
xchg
hlt
push
adc
fdiv
out
repz
dec
mov
and
cld
lods
jge
or
mov
jp
or
mov
ret
and
jmp
ss
hlt
dec
dec
in
leave
test
ja
out
test
pop
cs
notb
sbb
pop
shrb
mov
sbb
out
scas
mov
push
cmp
lret
in
bound
subb
int
mov
lret
test
out
test
and
test
out
mov
dec
push
mov
mov
xchg
lods
xchg
movsb
sbb
cwtl
cmp
push
in
lret
sub
dec
push
mov
add
pop
ret
cmp
mov
ficompl
addr16
fnstenv
test
mov
lahf
jo
cmp
jmp
repnz
inc
into
pop
xor
cmp
ja
cli
mov
ljmp
push
pop
sbb
push
pop
testb
movsl
sbb
rolb
xor
lods
mov
lret
pop
lods
add
mov
ljmp
andb
clc
into
jecxz
aas
mulb
jo
sahf
mov
outsl
sub
pop
pushf
lahf
mov
dec
or
jg
jns
inc
and
adc
dec
mov
out
cli
dec
ficoml
sub
xorl
pushf
dec
aam
outsl
stos
lods
test
pop
and
insb
xor
bound
add
jg
inc
mov
in
sub
sbb
inc
mov
pop
popf
icebp
addr16
cmc
dec
push
inc
sbb
arpl
adc
lret
clc
outsl
jbe
add
adc
jmp
jmp
xor
test
mov
imull
jl
or
movsb
fstl
emms
add
add
fs
daa
xor
adc
jne
sbb
push
or
leave
out
cmp
fists
xchg
js
pushf
js
daa
aam
cmc
jb
inc
and
push
jno
insl
push
mov
movsl
lcall
je
aam
xor
inc
aaa
movsl
jo
cmp
lds
lock
hlt
dec
inc
jns
add
mov
jl
xor
add
add
stc
hlt
mov
and
cmpsb
cmpsb
dec
test
popf
dec
shlb
inc
cmp
cmpsb
and
out
jo
adc
push
push
and
outsb
shrb
in
les
aam
mov
jp
inc
mov
add
mov
popf
cmc
cmp
std
adc
sub
xchg
lock
push
mov
add
ret
movsl
xchg
push
and
sarl
mov
xor
cmpl
pop
push
sub
xor
or
sub
adc
sbbl
or
add
ret
and
xchg
xchg
push
sbb
inc
out
adc
bound
or
shrb
pop
jge
fabs
aam
mov
fdivl
xchg
fcompl
pop
jl
dec
ja
insl
and
repz
addl
mov
and
sti
push
sub
inc
pop
jbe
cli
xor
xlat
cmpsl
das
lcall
add
push
sbb
icebp
add
mov
sub
out
cmp
add
repnz
insl
ljmp
in
ret
out
jmp
negl
inc
lock
jno
jnp
decl
mov
and
bound
movsb
std
inc
mov
or
std
lret
pop
mov
push
push
jp
bound
cmc
ret
dec
mov
pop
xor
ret
and
ljmp
push
xor
add
les
cmp
addr16
mov
loope
repz
pushf
out
rol
inc
or
xchg
mov
jp
add
fwait
jmp
sti
mov
mov
rcr
test
jbe
arpl
adc
jmp
cmc
sub
adc
das
ljmp
sbb
and
xchg
inc
jno
outsl
mov
addr16
decb
xor
mov
aaa
xchg
clc
test
pop
imul
jg,pn
in
lcall
dec
jo
and
mov
pop
mov
mov
lods
xchg
movsl
aam
or
sub
mov
push
ljmp
scas
subl
loop
xor
sub
inc
pushf
arpl
xchg
jle
inc
dec
subl
add
mov
ljmp
mov
sub
cli
aaa
aas
inc
in
add
in
lds
stos
imul
mov
das
adc
jne
and
fdivs
aad
repnz
movsb
mov
lds
ret
adc
jmp
add
clc
or
rcrl
pop
dec
lods
inc
nop
mov
dec
bound
out
lods
pop
inc
pop
pop
subl
cmpsl
xchg
sbb
xor
pop
fwait
mov
pop
icebp
mov
jg
incb
adc
jo
neg
and
mov
movsl
pop
cmp
jg
neg
sbb
mov
xchg
in
jmp
cmp
dec
ret
imul
test
fnstsw
fidivrl
mov
popa
mov
testb
in
les
adc
leave
pop
cs
or
jp
push
cwtl
sbb
and
into
loop
mulb
into
add
sarl
cmc
pop
lret
or
pop
and
in
xchg
movsl
jne
dec
int
jge
mov
repnz
lock
fdivp
jecxz
lcall
add
lret
mov
jecxz
div
mov
add
jmp
js
and
fcmovb
ja
in
and
xor
loop
hlt
push
xchg
xchg
cli
js
add
fsubrl
test
lea
dec
cmc
stc
mov
daa
mov
ja
mov
mov
cmpsl
add
add
mov
hlt
mov
push
sbb
test
sahf
leave
stos
nop
and
roll
into
cmpsb
les
jecxz
rolb
and
and
xchg
test
inc
mov
testb
outsb
cld
inc
rcll
hlt
lret
mov
jb
pop
jnp
adc
imulb
mov
sub
sub
test
in
sahf
or
cmpsl
push
cmp
fs
movb
faddl
rolb
jb
mov
jno
in
mov
sbb
out
and
xchg
cmc
aaa
rorl
xor
ljmp
std
mov
cmp
and
in
loope
jmp
mov
mov
icebp
mov
lcall
divb
test
ds
push
xchg
jmp
mov
and
std
mov
mov
mov
and
shll
jae
cmc
sbb
xchg
js
sbb
dec
aam
test
xor
xchg
mov
xorb
data16
addb
jnp
cmpsl
xchg
adc
rcl
jbe
or
icebp
test
mov
mulb
ficompl
mov
push
or
test
mov
sub
xchg
insl
cmpsb
popl
jge
subl
mov
cltd
or
or
mov
xor
xchg
mov
inc
inc
int
in
packsswb
aaa
cld
adcb
xchg
or
test
adc
cmpsl
and
fldenv
das
sbb
test
mov
out
add
mov
cld
lret
js
bound
or
mov
test
and
fsubrp
addl
pop
aad
push
xchg
adc
adc
dec
jne
std
xor
shl
movsl
enter
lds
xorl
outsb
or
mov
sbbl
sbb
mov
sbb
fsub
xchg
icebp
int
inc
inc
mov
mov
sbb
jmp
dec
push
jmp
or
push
xchg
shll
add
mov
jp
decb
movsb
in
pop
push
test
test
mov
push
add
xchg
int3
cmp
inc
mov
outsb
xor
test
jmp
sarl
mov
dec
mov
adcl
ret
mov
pop
enter
sahf
cmpsl
xchg
lock
enter
adc
rclb
sbb
xchg
sbb
std
fbstp
cmp
cld
jnp
mov
mov
test
popf
jecxz
mov
std
lcall
push
mov
mov
arpl
push
mov
addr16
ds
shll
mov
dec
sub
inc
cmpsb
in
loop
enter
push
out
adc
jns
cli
bound
in
adc
stc
loopne
mov
cmc
pop
insb
aam
fwait
clc
jge
stc
inc
mov
mov
add
push
dec
stc
add
gs
push
adc
mov
lcall
and
ret
icebp
in
dec
mov
rol
mov
cmp
rolb
dec
ret
cwtl
sti
loope
mov
push
jae
hlt
es
jno
mov
pop
xchg
adc
dec
pop
cmc
inc
int
dec
adc
aam
test
leave
jns
cmp
mov
mov
inc
inc
or
mov
lcall
cmc
or
mov
mov
mov
outsb
insl
pusha
sahf
xlat
or
jne
xchg
fcmovbe
inc
sbb
movsb
andl
into
mov
pop
jl
push
mov
pop
insb
sub
and
faddl
ljmp
mov
loop
sahf
icebp
jno
dec
repz
xor
push
and
and
mov
xchg
jg
sbb
in
lock
jecxz
jp
in
mov
jbe
lret
icebp
jecxz
xchg
dec
mov
dec
mov
arpl
jecxz
dec
inc
cli
mov
das
sub
mov
loopne
adc
in
mov
ljmp
xchg
scas
mov
adc
adc
or
les
and
ror
ds
cmp
sti
rcr
repnz
testl
std
out
or
mov
jbe
mov
pop
aam
fdivrp
imul
pop
or
jae
cmp
ds
imul
stc
inc
adc
inc
lock
insl
add
repnz
gs
xor
lds
jl
in
push
popf
not
in
out
outsl
bound
inc
sbbb
fldt
aaa
adcl
outsb
mov
in
shl
shlb
sub
xchg
push
rol
xor
lods
inc
cs
push
imul
mov
call
les
push
enter
in
ret
xchg
out
push
or
inc
lret
adc
std
or
call
lock
mov
orl
jge
insl
sti
out
sbb
iret
push
xor
je
pop
jbe
xchg
xor
lods
xor
insl
insb
mov
adc
fs
movsl
mov
add
scas
lcall
pop
lcall
insl
fs
jp
es
xor
aaa
insb
push
cmp
jne
dec
jo
mov
pop
dec
movl
ret
dec
push
mov
add
xchg
mov
movsl
pop
xchg
inc
js
fisubs
int
xor
cmp
outsb
pop
push
mov
xchg
push
call
icebp
adc
ret
dec
test
adc
in
dec
stc
jg
dec
or
aaa
sbbb
xor
xadd
sahf
ss
jae
lods
pop
cltd
out
xor
mov
hlt
push
xchg
int
mov
divl
xchg
jle
popa
movsl
les
insb
pop
add
lds
mov
push
dec
ret
sti
sbb
out
repz
sbb
mov
clc
addr16
add
clc
dec
mov
fidivl
in
movsl
inc
and
negb
sbb
mov
fdivrs
jmp
ret
pop
es
aad
popl
mov
std
test
push
mov
push
in
daa
aas
lods
add
adc
cmp
adc
mov
push
sub
or
xchg
dec
fbld
cmp
lcall
int
or
repnz
test
fsubp
pop
sbb
xchg
icebp
adc
lea
int3
push
jbe
pop
shlb
hlt
mov
pop
inc
xor
sbb
dec
hlt
out
push
fsubp
int3
mov
inc
lret
adc
pop
or
jb
add
sbb
enter
cltd
ljmp
fs
test
cwtl
in
stos
adc
add
and
fmull
xchg
mov
push
addr16
negb
and
or
pop
mov
adc
cmp
ss
adc
pop
mov
cli
js
enter
aad
push
int
jbe
adc
bnd
lret
mov
push
jne
aam
xchg
in
mov
add
loope
enter
in
jmp
cmpsb
out
or
fisubs
add
paddusw
jle
xchg
loopne
stos
add
sarb
es
decl
sbb
mov
push
test
jmp
rorl
push
icebp
mov
js
inc
cmp
mov
stc
shll
aam
and
sahf
cmc
inc
mov
dec
jno
cwtl
addb
outsb
aaa
inc
xchg
jno
add
adc
dec
xorb
and
push
mov
in
nop
fs
sbb
bound
cmp
icebp
or
stos
andb
stc
inc
repz
pop
push
data16
adc
lret
mov
inc
loope
dec
shlb
jne
pop
push
in
mov
jae
cmp
mov
pop
rorb
push
nop
test
mov
jo
hlt
xchg
inc
hlt
lock
lcall
popa
cmpsb
mov
adcb
mov
loope
mov
jne
inc
frstor
xlat
lea
data16
xor
call
pop
arpl
lea
push
lea
jns
int
mov
mov
pusha
popa
push
repz
popf
incl
dec
cmpsl
pop
xchg
push
popf
pop
mov
inc
jo
bound
jecxz
inc
inc
mov
stos
mov
add
test
gs
ret
cmpsl
movsb
mov
hlt
lds
jns
rcll
ret
or
into
xchg
into
lret
dec
loop
arpl
mov
jb
or
mov
add
and
push
ja
push
add
rorb
and
mov
pop
push
clc
inc
jns
cmc
sbb
ja
inc
mov
cmpsb
jecxz
dec
fldln2
adc
lret
xor
dec
jle
fbld
repnz
dec
or
xchg
cmp
inc
in
xchg
hlt
sbb
bnd
add
adc
or
fs
rorl
push
movsl
xchg
push
shll
jmp
adc
inc
sbb
mov
push
insb
mov
in
jnp
mov
aaa
test
cltd
lock
push
push
aad
fnstcw
ret
jb
int
repnz
int
roll
xchg
roll
icebp
and
ret
sahf
lds
hlt
addr16
lods
sahf
test
mov
and
movb
repz
ror
cmpsl
jmp
pop
arpl
mov
or
add
negb
and
ret
cmp
jb
pop
ficoml
lcall
in
add
inc
in
ret
sub
mov
call
or
xlat
push
stos
dec
or
push
push
iret
dec
icebp
fwait
shlb
outsl
jno
cmp
cmp
mov
inc
nop
test
xchg
sahf
lea
dec
sub
mov
xor
lods
inc
push
aam
push
xor
lds
stc
test
mov
in
les
jecxz
stos
mov
les
dec
cmc
lea
and
inc
lods
sub
pop
lods
jbe
jb
inc
pop
adc
add
mov
out
mov
popa
push
xchg
data16
jne
in
sbb
mov
mov
lock
push
sti
ds
test
rcr
loop
push
jbe
ret
mov
jg
push
test
adc
inc
mov
push
ret
xchg
cmc
mov
sbbl
fcomi
shrb
sahf
scas
neg
bound
xor
and
dec
addl
cmpl
scas
int
sbb
loope
mov
popa
subb
cmp
cmc
jbe
push
pop
add
jnp
movsl
stc
inc
push
pop
add
dec
cmp
ret
ficoml
or
sub
andb
dec
cmp
jge
push
fwait
data16
and
push
popa
jmp
xor
fwait
in
jp
movsb
loop
int
dec
add
lret
or
icebp
mov
mov
jne
inc
dec
mov
jo
mov
mov
pushfw
push
jmp
je
jecxz
and
jmp
mov
inc
out
and
xchg
mov
cmc
into
jbe
sbb
jmp
push
jecxz
rorb
push
mov
mull
dec
pop
push
mov
stos
aaa
movsb
clc
fucom
repnz
leave
iret
xchg
mov
push
rorl
stc
cmc
incb
sarb
add
fidivrs
repnz
fisttpl
xchg
adc
ss
arpl
enter
adc
add
popa
enter
jle
xorb
and
push
jle
inc
cmp
and
push
jle
dec
es
xor
add
lds
push
or
rorl
div
cmpsb
dec
loope
incb
je
in
and
mov
ret
in
das
addr16
loop
mov
ja
pop
mov
inc
pop
ja
inc
adc
inc
andnps
hlt
sub
repnz
std
repz
lret
mov
sub
mov
ret
loope
fidivl
push
mov
lods
xchg
std
aam
cmp
xchg
xchg
movsb
sbb
cmpsb
fnstsw
push
inc
sbb
test
xor
mov
dec
and
pusha
imul
jecxz
adc
jmp
lret
adc
and
push
xor
std
lea
lods
push
fdiv
push
add
mov
xchg
cwtl
fdivl
call
rcll
mov
pop
xor
xchg
popa
dec
popa
pushf
xor
loop
jl
nop
cld
out
cwtl
jmp
dec
into
shrb
in
xor
imul
or
movsb
rolb
idivb
pop
adc
jno
movsb
sub
jbe
rcl
ljmp
outsb
cmc
popa
and
xor
insl
cmc
jbe
mov
mov
mov
xchg
loopne
mov
push
fwait
sbb
pop
xchg
push
xchg
add
pop
mov
movsb
xorl
addr16
jno
dec
pop
cmpsl
int3
and
fwait
xchg
pop
imul
cmpsb
loope
ror
adc
je
incb
dec
jecxz
repnz
cmp
sub
mov
lods
jp
leave
movsl
loopne
bound
in
push
jo
cmp
push
add
icebp
inc
imul
addb
mov
inc
or
int3
jo
add
mov
push
clc
adc
jns
inc
adc
push
repz
div
mov
in
pop
xchg
push
jne
repnz
adc
mov
stos
fnstsw
mov
loop
mov
test
and
test
je
repnz
inc
push
rcll
add
outsb
decl
dec
int
fwait
shll
lret
fists
negb
push
jge
mov
xchg
add
fs
pop
push
nop
or
xor
and
in
add
jno
push
inc
lcall
rcl
into
imul
mov
xchg
fs
jecxz
popf
andl
push
lock
dec
out
sahf
pop
lahf
test
hlt
fstl
cld
jb
pushf
cli
ffreep
mov
aam
cmp
pop
aad
addr16
imul
mov
mov
lret
sahf
popl
jno
and
cwtl
cmp
mov
pop
jecxz
test
adc
xor
movsb
push
fwait
aaa
ret
sub
out
pop
and
jns
pusha
mov
iret
mov
adc
adc
aad
shl
jbe
int
jno
pop
xchg
pusha
sahf
test
jno
call
int
imul
xor
or
sub
inc
jmp
inc
decl
lcall
adc
outsl
dec
movsl
in
adc
data16
js
mov
or
loope
ret
test
mov
mov
xchg
jne
int
hlt
sahf
in
push
ficoms
inc
and
lret
in
dec
fidivrl
sub
out
mov
inc
loopne
push
lret
mov
lahf
adc
icebp
sbb
loop
jmp
or
and
mov
icebp
leave
out
in
mov
pop
into
or
sbb
mov
add
xor
mov
sti
int3
in
sbb
out
loope
adc
mov
test
fcompl
popa
cmp
mov
in
jns
push
dec
test
push
or
ret
sar
mov
sbb
dec
add
xlat
inc
out
dec
and
fwait
imul
jecxz
mov
fs
int
movb
push
mov
cmp
hlt
adc
gs
push
test
pop
mov
fnstenv
xchg
rcll
jge
mov
mov
cmpsb
das
mov
jbe
cmp
je
inc
gs
sub
adc
jne
test
sahf
mov
stc
bound
aaa
arpl
imul
xor
mov
imul
mov
xor
sbb
insb
push
mov
mov
push
cltd
cmp
dec
mov
dec
cmpsb
mov
jno
movsl
cmp
dec
stos
dec
scas
pop
mov
or
push
dec
cmp
push
insb
push
push
and
or
inc
pop
xchg
je
lahf
out
jmp
jo
nop
divb
jne
sbbb
int3
pop
and
pop
rol
and
push
int
bound
cli
push
mov
outsb
js
jp
lret
xorl
bound
pop
pop
stc
lock
push
fdivrl
mov
pop
push
add
adc
sti
pop
je
pop
lret
repz
adc
add
sub
add
pop
mov
cmc
out
dec
add
lahf
sub
sbb
ret
pusha
ljmp
clc
pop
lea
xchg
dec
loop
sub
hlt
fmul
scas
lods
mov
enter
scas
aaa
fistl
rcrb
add
data16
test
dec
int
add
push
repz
xor
pop
mov
mov
xor
cs
aaa
leave
xor
icebp
movsl
cmp
popf
cmp
inc
mov
xlat
pop
xchg
jmp
testl
out
dec
mov
jns
sub
je
mov
xchg
aas
es
dec
pop
popa
imul
inc
fisubs
idiv
jae
mov
outsl
push
cmp
jnp
cmp
push
push
cld
je
mov
andl
out
lahf
inc
inc
pusha
jne
xor
dec
xchg
insb
int
jge
pop
or
ret
jmp
push
addr16
mov
xor
adc
cmpb
out
icebp
out
mov
testl
in
mov
push
jecxz
das
push
aas
cltd
xlat
xor
push
call
and
adc
pop
xchg
sti
iret
pop
aad
or
int
and
sub
and
jle
jp
cmp
lcall
movsl
jns
les
fildll
lcall
xchg
mov
dec
in
frstor
in
stos
mov
sti
orl
imul
int3
gs
mov
jbe
xchg
scas
rcll
push
lahf
ja
call
rolb
cmp
daa
fldt
xchg
pop
pop
insl
es
cli
adc
dec
and
lods
xor
inc
add
nop
sbb
or
mov
adc
jge
xchg
sarl
or
imul
push
insb
jmp
insl
push
sub
add
in
sbb
mov
dec
fldcw
loop
into
loop
xlat
mov
push
push
lcall
mov
fsubl
xlat
jmp
enter
push
sub
push
or
fistps
xchg
ljmp
js
dec
jae
std
inc
add
sahf
pop
aam
lcall
gs
cld
bound
out
push
pop
loope
inc
out
inc
out
shrb
arpl
push
ja
sub
insl
xchg
sahf
popa
or
dec
mov
fdivs
push
aaa
idivl
pop
lahf
jge
xchg
push
pop
mov
pmaxub
and
jecxz
pop
xchg
lock
inc
scas
mov
lret
pop
das
insb
inc
or
aam
ss
dec
pop
into
push
ljmp
fs
mov
in
sbb
and
xchg
iret
fndisi(8087
mov
sbb
mov
mov
inc
lds
mov
dec
mov
jne
push
ss
lahf
dec
and
or
imul
or
sub
mov
mov
imul
nop
mov
fidivrl
fs
adc
pop
nop
in
out
sbb
jb
in
popa
lods
clc
mov
sub
cmp
test
inc
cmp
adc
adc
jnp
mov
sbb
addr16
movsb
int3
test
in
jns
cltd
in
sub
or
mov
cwtl
cltd
inc
cmp
jl
in
cwtl
mov
outsl
fldl
daa
int
mov
rep
and
cld
popa
dec
jge
and
loope
sub
fstps
jbe
hlt
sbb
add
sbb
adc
or
out
mov
aad
jbe
mov
fs
int3
lret
cmp
xor
js
test
dec
andl
xchg
int
mov
xchg
add
in
jecxz
mov
sub
test
jle
data16
ret
cli
fwait
xchg
sbb
mov
lret
shl
test
jne
cmp
inc
fisttps
aam
xchg
adc
inc
inc
mov
data16
orb
sbb
inc
jo
fidivs
orb
test
mov
fs
scas
dec
add
mov
stos
push
cwtl
push
popa
pop
mov
inc
dec
hlt
nop
inc
mov
sub
inc
lods
loope
jle
sbb
mov
daa
pusha
out
and
std
and
xor
insb
mov
in
movsl
lret
fdivrp
jb
sbb
cmp
idiv
dec
sbb
test
out
push
insl
add
shll
lret
jg
icebp
jae
mov
pushf
or
mov
insl
pop
sar
jle
mov
push
in
jno
inc
mov
pop
sub
stos
push
in
pop
mov
mov
js
pop
cli
mov
cmc
lahf
jb
dec
cmp
add
adc
mov
jmp
icebp
sti
fsubr
dec
sti
repz
imul
es
cmp
lret
mov
dec
pop
push
cmp
std
inc
mov
xchg
bound
inc
sub
fsub
mov
ss
jae
and
mov
cmp
inc
mov
iret
subb
sub
xchg
ds
jecxz
push
repz
pushf
jno
lods
jmp
dec
mov
sub
sbb
cmp
jl
add
pop
fcmovne
or
ljmp
jo
xchg
mov
xchg
sub
sbb
into
inc
jae
mov
insb
mov
jae
push
pop
shrb
jp
mov
lahf
xchg
pop
xor
les
dec
mov
mov
push
in
mov
mov
fcoml
mov
jp
addl
sbb
pop
rorl
scas
add
outsl
nop
xchg
or
jno
mov
sbb
lahf
jbe
push
jl
lret
jge
dec
pop
dec
mov
sub
les
shl
xchg
fdiv
mov
push
mov
je
lret
mov
push
inc
adc
in
icebp
pop
adc
mov
jecxz
add
fnstenv
loopne
mov
test
xchg
xchg
leave
out
jb
xor
leave
jns
and
icebp
or
inc
and
ljmp
imul
iret
jmp
or
sbb
xor
push
xchg
dec
xor
rcrb
and
jmp
fwait
mov
icebp
orl
fnstsw
fcmovbe
push
sub
xor
jb
fucomp
sub
pop
dec
add
mov
mov
sbb
dec
sub
mov
shrb
fbstp
push
movsl
pushf
popa
cmp
jne
jge
mov
pop
dec
pop
into
or
pop
into
xlat
dec
push
cmc
cmp
into
or
jbe
push
icebp
add
jae
cmc
cmpsb
outsl
push
cli
std
adc
cli
pop
outsb
fs
loope
or
cld
movsl
fnsave
cli
lods
and
in
adc
jns
lcall
mov
mov
adc
ret
sbb
push
hlt
clc
xchg
or
and
sub
fsub
out
dec
js
push
or
push
incb
jmp
int
cmp
data16
cmp
jecxz
sub
cmp
movsb
leave
adcb
xor
pop
scas
xor
xchg
int3
shll
divb
pop
out
shrl
adc
cmpsl
sbb
cmp
js
repz
lcall
mov
sbb
lea
push
jae
sbb
in
es
mull
cmpsb
in
pop
pop
aam
test
or
movsl
mov
add
add
bound
xor
mov
xchg
call
and
mov
add
xorb
out
bound
pushf
pop
fnstenv
mov
ffree
mov
pop
lcall
fucom
test
cli
or
stc
repnz
jo
sahf
icebp
out
xchg
test
and
stos
test
fbstp
inc
dec
add
push
and
out
stos
xchg
enter
insl
icebp
lea
imul
dec
sbb
mov
mov
fdivrl
add
sub
jle
mov
and
pop
insl
push
pusha
dec
xchg
nop
ffreep
or
jns
icebp
addb
mov
adc
enter
dec
sbb
addr16
fdivs
add
icebp
ret
dec
in
adc
lds
mov
in
mov
or
icebp
pop
out
cmc
pop
fidivrs
test
fnsave
pop
ret
sbb
cld
sub
sub
or
jns
pop
scas
ja
jno
pop
push
js
dec
lds
push
adc
in
clc
aad
pop
sbbl
sub
mov
push
mov
add
and
ret
jne,pt
cmc
mov
adc
notb
in
cmp
lods
xor
dec
lcall
into
jb
movb
mov
pop
inc
dec
ljmp
popf
push
dec
add
mov
out
push
push
push
xor
jno
ja
dec
outsl
inc
leave
inc
aas
rcrb
and
cld
fiadds
mov
lods
push
push
adc
adc
mov
mov
in
lcall
aad
fs
addl
mov
fs
dec
nop
insl
mov
jne
lods
jae
stc
ljmp
push
arpl
mov
loope
jecxz
lret
xor
push
int
idiv
cld
jbe
or
test
lret
sahf
dec
mov
fldt
hlt
dec
jp
add
mov
and
arpl
into
pcmpeqd
pusha
mov
ret
xchg
mov
out
in
dec
push
test
sbb
push
je
fyl2x
pop
jne
xor
rorb
popa
jmp
js
push
xor
popf
push
add
pop
leave
dec
ffree
std
sbb
mov
int3
cmp
fldl
lcall
add
in
dec
add
adc
jno
lret
fcmovne
mov
outsb
hlt
inc
jle
into
inc
push
jb
mov
mov
inc
daa
pop
xor
xor
in
pop
xor
and
rcl
hlt
fprem1
mov
test
xchg
aam
mov
sbb
lock
out
mov
aaa
gs
add
leave
xlat
mov
sbb
jne
sahf
xor
jae
inc
mov
or
mov
push
cltd
roll
inc
jno
xchg
fnstenv
mov
xor
jb
sbb
shll
add
mulb
pop
int
push
or
xchg
fmull
movsl
sbb
sub
scas
mov
jno
adc
adc
sbb
in
sbb
pop
push
jmp
outsl
dec
sub
or
outsw
and
icebp
cmc
repz
repnz
adc
mov
loop
js
insl
aaa
jmp
lock
mov
dec
mov
sbb
mov
inc
fidivrs
imul
mov
repnz
lds
and
adc
adc
lcall
lods
xchg
cmp
js
dec
mov
adc
repz
out
sub
pop
mov
adc
pushf
inc
aam
ja
xor
xor
jo
sahf
shr
push
or
mov
int
int
mulb
sub
sahf
add
les
xor
popf
mov
in
leave
mov
jnp
cli
mov
xor
sbb
incb
insl
push
cmp
insb
sbb
sbb
arpl
lds
mov
mov
sub
dec
inc
fstpl
bound
mov
add
enter
cmc
mov
xchg
rcll
jmp
int
xor
mov
adc
addr16
push
bound
mov
idiv
mov
outsb
jae
and
out
aam
jae
sub
divl
jmp
mov
mov
mov
xchg
std
mov
bound
adc
enter
pop
ret
xorb
stos
mov
pop
sar
sub
push
jle
stos
lret
dec
stc
mov
inc
xlat
aad
mov
or
mov
les
jne
pop
cltd
mov
sub
out
inc
cs
es
push
xchg
add
cmp
out
shlb
mov
fs
test
stc
sbb
jae
adc
loope
sub
lods
hlt
jno
out
xor
xchg
cld
and
pop
and
add
shl
dec
inc
sub
jnp
lea
sbb
mov
add
cld
rcrb
mov
jns
jbe
addr16
call
cwtl
cli
addr16
cli
xchg
daa
xchg
repnz
and
xchg
push
xchg
xor
test
cltd
lods
leave
inc
sahf
xor
loop
jno
repnz
ret
push
mov
roll
cmp
ljmp
sub
ds
aad
add
mov
mov
out
add
loope
and
inc
fildl
inc
gs
sarb
cmc
mov
and
sbb
jbe
or
and
mov
jne
hlt
test
mov
out
jge
or
xchg
mov
ljmp
daa
mov
xor
xor
in
sub
sahf
dec
lds
adc
mov
xchg
out
subb
popa
pop
jb
loop
mov
push
mov
insl
dec
jns
leave
je
les
sub
inc
dec
stos
icebp
and
push
lods
std
test
movsl
jmp
push
hlt
pushf
cmp
imul
xor
push
outsb
xor
cmc
fcoml
mov
cli
xchg
testb
jb
mov
ficompl
subl
xchg
fildll
data16
xchg
jo
push
inc
ret
sbb
dec
loope
loop
xor
xor
cwtl
push
xchg
adc
mov
sub
in
mov
xlat
std
pop
cli
imul
jge
arpl
nop
sbbl
loope
sar
xlat
rcl
test
jb
sbb
cvtps2pd
das
stos
addr16
cmp
mov
scas
sbb
sub
aam
aad
insb
mov
pop
ja
cmp
pop
stos
fildl
push
jo
jmp
in
test
sahf
aaa
dec
mov
testb
cmp
jge
lcall
in
shll
pop
fsts
and
and
scas
mov
fidivl
mov
inc
cltd
inc
sub
mov
int3
mov
xor
mov
fndisi(8087
mov
pop
dec
mov
subb
popf
test
test
cwtl
loop
adc
push
cld
imull
inc
cmp
outsb
sbb
mov
mov
in
mov
sub
cmc
mov
push
push
sub
mov
xor
sahf
push
test
mov
mov
aas
imull
test
lahf
jecxz
xor
movsl
bound
mov
fiaddl
dec
lret
add
out
aam
cmc
jl
adc
xchg
and
sti
jae
lahf
movsl
pop
push
ds
vpsubsb
cmpsl
cmpsl
fadd
xor
xlat
inc
dec
cli
add
in
mov
cld
sbb
mov
cmp
xchg
cmpsl
cli
lds
jbe
jns
std
or
insb
inc
shr
inc
decb
dec
cmpsl
ror
push
xchg
test
mov
clc
popf
ljmp
lds
syscall
stc
dec
push
bound
push
cld
cmp
jmp
dec
mov
bound
sbb
xchg
or
pop
loopne
pop
xchg
or
adc
imulb
pop
fs
lea
test
pop
lods
push
shll
cmc
push
lret
or
xchg
int
pushf
mov
mov
jbe
sub
cltd
loop
shll
inc
icebp
loope
call
sub
add
test
rcrb
test
inc
ljmp
clc
test
xor
jne
arpl
mov
lcall
inc
insl
xor
lds
adc
xor
insb
ja
jge
mov
icebp
stc
iret
fs
fldcw
sbb
mov
outsb
lock
and
push
push
cmp
dec
mov
cmpsb
call
dec
leave
or
jns
xor
adcl
cmp
loope
sub
fstl
out
or
jb,pn
fld
and
test
mov
imul
stos
faddp
js
jecxz
cmp
mov
lret
repnz
rclb
fcoml
inc
into
jge
fs
aad
cld
sub
fwait
sbbb
mov
mov
aas
jne
cli
adc
jge
loopne
rol
xor
jmp
jae
pop
cli
pop
and
data16
sub
aam
mov
ja
inc
push
inc
mov
pop
pushf
lock
add
cmp
cli
adc
jb
inc
in
and
add
cltd
in
lods
xor
lea
cmpsl
idivl
dec
js
in
lods
gs
sbb
data16
popa
outsl
xchg
loopne
and
mov
sti
ss
push
push
clc
divb
jp
in
nop
shr
stc
clc
cmp
into
cmp
fwait
cmp
jne
sub
js,pn
imull
mov
call
xor
fs
fimuls
dec
inc
mov
pushf
lods
mov
cmp
mov
cmc
cmp
es
xchg
cmp
mov
xchg
outsb
jnp
pop
sbb
jmp
stos
stos
inc
mov
mov
cli
push
jae
bound
rorl
jle
pop
cli
fistpll
cmpsb
jnp
mov
dec
mov
bound
sub
out
cmp
repnz
or
mov
sbb
leave
icebp
out
mov
lods
jge
pusha
lahf
js
fidivl
sbb
movsl
add
or
pop
neg
mov
jmp
add
mov
mov
sub
in
std
movsl
pushf
ss
test
fsubl
jns
pop
test
cmpsb
jmp
out
lods
xchg
pop
mov
or
out
fmulp
xchg
hlt
lds
orl
pop
mov
fidivrs
test
lret
test
push
nop
or
subl
lret
lcall
dec
xchg
fs
iret
sub
jnp
std
sahf
fisubrl
int3
rorl
mov
cmp
inc
mov
sub
or
ret
aaa
loop
in
insb
test
popw
xor
xchg
fdivl
arpl
inc
sahf
cmc
repnz
lock
hlt
mov
dec
push
push
push
in
scas
mov
fisubrs
mov
cmpsl
or
push
mov
mov
ficomps
xor
jnp
sub
xchg
push
ljmp
shr
in
test
mov
push
je
pshufw
movsl
sbb
mov
fadd
insb
xlat
mov
xor
sbb
stos
pop
adc
push
sbbl
or
lds
push
jecxz
sub
cmp
shl
iret
mov
add
arpl
push
sub
push
fcomi
inc
mov
mov
add
pop
sbbb
mov
sbb
daa
cmp
or
mov
int3
mov
inc
jg
and
sbb
jecxz
loop
xchg
in
stos
aad
xchg
add
mov
add
ja
mov
mov
push
mov
les
pop
push
fstpl
cmp
call
dec
test
arpl
clc
scas
cwtl
cmp
xchg
jne
dec
ret
adc
movsb
or
xchg
xor
and
out
pop
repz
cmp
mov
sub
icebp
xor
sti
lcall
inc
add
jge
ret
push
ds
cmpsb
fwait
daa
jecxz
pop
aam
jg
mov
rcl
jo
push
movsbl
xchg
mov
stos
mov
mov
in
lock
mov
push
out
out
test
add
pop
mov
sbb
mov
cwtl
lds
sub
test
je
inc
lods
add
pop
adc
les
pop
mov
pop
and
push
sub
lods
sbbb
push
or
sub
inc
out
mov
loop
inc
jae
fisttpl
testb
and
hlt
out
js
pop
add
push
sbb
cmp
sarl
out
mov
pop
imul
cli
mov
shll
ljmp
das
insl
fdivr
push
mov
adc
repz
repnz
cmpsl
pop
call
frstor
mulb
and
mov
or
jmp
cmpsl
aaa
leave
pusha
mov
pop
or
pop
mov
jb
pop
repz
loopne
dec
push
movsb
sbb
in
frstor
dec
insl
cmc
and
addr16
mov
imul
in
add
jbe
xchg
pop
idivb
sti
lods
pop
movsl
mov
lds
pop
xchg
fistps
push
push
xor
repz
xchg
adc
ljmp
icebp
outsl
adc
mov
mov
stc
daa
call
and
mov
popa
push
aam
inc
lcall
scas
mov
pop
or
and
xchg
rcl
pop
pop
into
loopne
xor
addr16
mov
pop
add
data16
mov
test
sub
and
jno
ret
jmp
enter
in
repnz
shrl
loop
add
test
xorb
and
lock
les
lcall
loop
test
sti
mov
fimull
add
add
lock
or
mov
mov
sub
in
and
imul
outsb
lods
xchg
xchg
xor
cmp
nop
lahf
and
or
lods
enter
push
cltd
popf
and
mov
mov
test
inc
add
fisttpll
test
je
jmp
jb
fs
or
adc
shrb
pmaxsw
movsb
mov
mov
test
mov
ret
xor
mov
mov
inc
loopne
jmp
out
icebp
imul
fadds
adc
mov
or
out
xchg
push
xchg
icebp
cs
dec
pop
xchg
cmp
or
inc
lahf
mov
in
mov
movsb
ja
dec
loop
repnz
adc
fwait
test
imul
repz
cmp
cli
popa
out
push
dec
out
jge
xor
ja
inc
stc
inc
rep
pop
ljmp
int
lods
inc
xor
ss
pop
inc
pop
test
insl
fisttpll
xchg
into
out
loopne
pop
jb
xlat
imul
popf
inc
mov
insl
fwait
leave
inc
hlt
sub
pushf
shr
mov
aam
mov
and
add
sub
loop
mov
mov
aas
mov
add
hlt
ret
add
int
jbe
and
adc
jne
sarb
mov
int3
or
popf
ret
and
dec
ficoms
adcl
or
mov
and
rorb
scas
test
icebp
mov
rcrl
jne
test
mov
int
push
aas
bound
or
pop
mov
icebp
insl
bound
pushf
out
mov
sbb
push
out
in
js
ror
mov
loope
adc
jecxz
cli
adc
sbb
jb
lods
test
hlt
or
fisttps
loope
mov
adc
jg
mov
lret
enter
pop
pop
lret
sahf
pop
aas
outsl
push
mov
cmc
pop
leave
test
test
outsb
lea
mov
xor
xchg
push
lods
cltd
pop
adc
into
xchg
cmp
fstl
loope
repz
sbb
dec
inc
lds
lret
cmp
lock
fnstcw
dec
push
in
mov
jp
fwait
cmp
push
lret
adc
inc
push
pusha
es
ret
add
or
nop
idivl
mov
ljmp
scas
lahf
cli
add
stc
jge
call
and
std
aam
cmp
xchg
leave
xchg
mov
or
mov
ljmp
in
pop
cs
adcl
mov
inc
test
push
enter
jmp
int
xor
out
fsubr
lods
pop
in
sbb
fcoms
nop
ret
movsl
cmp
fimull
mov
js
dec
mov
out
adc
push
mov
mov
push
fdivl
dec
insb
scas
pop
pop
adc
jg
or
scas
dec
stos
push
lods
mov
in
lods
mov
mov
enter
test
inc
lretw
cwtl
sub
hlt
repz
jge
jae
or
lock
push
mov
push
jb
sbb
testb
hlt
add
subl
les
jecxz
sbb
cmpsb
xor
pop
call
nop
test
adc
hlt
ret
cwtl
jno
mov
sahf
outsl
gs
jae
repz
ffree
pop
mov
js
arpl
cmp
pop
add
push
dec
push
lods
lret
fnstsw
out
pop
adc
cmc
cmp
and
xchg
pop
cmc
neg
test
insb
xor
jecxz
fnstsw
sbb
sub
and
jne
sti
xlat
inc
in
inc
movsl
aas
pushf
inc
pop
push
jne
dec
or
add
stos
mov
movsb
push
sbb
jnp
adc
pop
xchg
ficomps
aas
lock
pop
jne
sub
xor
add
call
mov
push
adc
and
mov
arpl
xor
loop
xchg
lahf
lods
sub
or
aad
pop
xor
in
xor
xchg
gs
xlat
testb
sub
repnz
movsb
test
mov
pminub
inc
lret
inc
and
cltd
add
and
xchg
pushf
gs
jne
xchg
mov
jae
out
jmp
in
movsb
lcall
aad
sub
ja
scas
add
xchg
pop
jge
mov
mov
shrl
pop
into
xchg
roll
jns
push
test
imul
lcall
xor
pusha
pop
mov
jns
mov
jbe
dec
imul
outsl
inc
inc
jl
sub
in
in
cmpsl
movsl
inc
cs
or
jecxz
insl
popa
add
cmp
loopne
jo
shll
mov
aaa
cwtl
icebp
and
addl
push
jno
nop
jge
adc
mov
lcall
sub
clc
movsb
and
mov
dec
pop
jo
addr16
mov
add
out
cmc
sbbb
repnz
push
loope
jg
out
pop
gs
xor
mov
mov
lahf
xchg
leave
xchg
adcl
sti
inc
in
mov
dec
dec
jnp
mov
ss
xor
std
lds
mov
pop
xor
or
shrl
ja
or
cmp
mov
or
test
ds
dec
lcall
fnsave
push
test
or
pop
and
test
dec
sar
les
jns
scas
mov
xlat
xor
and
or
push
loopne
rcll
mov
push
scas
and
icebp
mov
mov
mov
cwtl
repnz
mov
dec
sub
ret
fisubl
push
lret
mov
add
icebp
aad
jmp
mov
je
sti
sub
jp
adc
cmpsl
sbb
sub
arpl
and
shl
xor
inc
and
aaa
xor
dec
mov
cli
jmp
mov
adc
fs
xor
std
or
inc
xor
repnz
lret
xchg
xor
xorl
jp
sbb
sbb
push
imul
std
push
je
or
sbb
stc
lret
cmc
add
lds
add
mov
push
add
fnstsw
xchg
aad
push
mov
jle
push
pop
loopne
dec
and
dec
pop
xchg
lds
jp
sbb
ljmp
mov
fisubrs
xor
cmc
imul
cld
test
test
push
add
adc
pop
pop
dec
cwtl
mov
mov
or
call
and
sarb
mov
jmp
cwtl
out
pushf
pop
jmp
sbb
xchg
lahf
inc
push
loope
ds
push
testb
adc
and
test
sub
jmp
lcall
mov
repnz
or
or
fdivs
in
test
xor
sbb
ss
fwait
cmp
shll
or
mov
jge
in
into
pop
pop
cmp
add
jae
xor
mov
stos
adc
jle
and
sahf
loope
bound
pop
shll
popf
outsl
sbb
test
pop
sahf
imull
call
inc
pop
lods
fs
js
adc
dec
sti
lret
cli
test
ret
ficoml
push
inc
mov
sbbb
in
pop
xchg
xchg
jo
out
xor
mov
int
fsubp
cltd
xor
adc
out
fsts
shrb
mov
repnz
outsb
push
out
cltd
sti
repz
mov
fisubrl
addl
stos
loopne
inc
adc
sti
dec
in
mov
jg
xchg
cli
iret
inc
insl
js
mov
mov
mov
and
dec
sbb
ljmp
sbb
sbb
fldenv
jle
pushf
bound
sub
mov
sbb
pop
push
test
shll
in
out
push
out
xor
dec
dec
test
mov
lret
lods
cmpl
mov
push
fstpt
in
or
sbb
adc
push
mov
mov
adc
sub
lea
loop
stos
insb
xchg
xor
arpl
lock
cmc
mov
mov
aaa
and
ret
jecxz
insb
mov
adc
out
insb
dec
xor
cwtl
lcall
dec
mov
mov
sbb
test
pop
gs
cmp
dec
into
in
or
lret
shrb
lahf
pop
loope
popa
ficoms
rolb
ficoml
xchg
out
scas
jne
pop
clc
jg
inc
xor
and
pop
mov
adc
aad
and
xchg
js
data16
out
push
and
push
xchg
mov
mov
cld
dec
nop
mov
in
or
pop
add
push
mov
das
dec
iret
push
cmp
scas
or
hlt
xchg
sbb
sti
ret
cmp
into
jne
and
xchg
lock
test
out
mov
mov
mov
push
fisttpl
roll
mov
jp
movb
in
fs
mov
fsubl
jne
div
insl
cmc
stos
ljmp
dec
cmp
dec
icebp
add
int3
fwait
or
add
clc
test
flds
js
sbb
jmp
jl
inc
or
cwtl
add
lcall
mov
hlt
dec
jl
inc
mov
aaa
ds
sbb
out
rcrb
mov
insb
repz
mov
lahf
aaa
xor
dec
jecxz
dec
mov
dec
ja
push
jmp
xchg
xor
pop
cld
and
add
adc
shl
push
add
mov
cmp
jmp
dec
lret
scas
mov
ss
imul
movzwl
lods
insl
xor
cld
out
jbe,pn
out
popa
mov
pop
in
push
and
rcl
in
ret
insl
movsb
jp
call
iret
sub
loopne
addr16
push
jl
sub
cmpl
mov
jecxz
les
out
jecxz
cmp
mov
popf
sub
das
push
pop
xchg
mov
inc
xor
and
repnz
in
in
and
fidivrs
lock
outsl
popf
incb
pop
and
in
mov
repz
xor
xor
aad
call
add
nop
lods
cld
adc
xchg
loopne
jo
fs
mov
inc
cs
cmp
shll
mov
pusha
mull
push
out
adc
pop
lds
aaa
divb
out
loope
adc
mov
xchg
sub
hlt
xchg
xchg
xchg
leave
lods
mov
jge
or
xchg
fidivl
cmc
loopne
call
mov
cmp
mov
rorl
leave
cmpsl
mov
negb
fiadds
lret
sbb
fwait
jno
dec
xchg
fistpl
mov
cmp
jno
lcall
xchg
mov
pop
or
mov
ja
pop
js
addl
mov
push
sbb
push
jl
adc
mov
jae
call
jp
xchg
les
dec
scas
in
push
jg
mov
xchg
mov
stc
filds
jno
push
call
ret
cmp
lret
or
test
sbb
shlb
sub
adc
adcl
xchg
fidivrl
aaa
das
popl
mov
push
pushf
std
add
push
mov
push
jnp
js
test
push
push
in
or
nop
pusha
mov
mov
cmp
arpl
das
mov
cwtl
ja
sub
jne
cli
jnp
or
testl
out
cmpl
push
lret
dec
or
in
vldmxcsr
fwait
or
out
ljmp
sahf
shl
push
bound
add
jae
cmp
in
mov
mov
mov
or
mov
movsl
movsl
repz
aaa
mov
repnz
jle
pop
pop
mov
mov
jge
xor
push
jmp
outsl
ds
subl
mov
in
jg
xchg
and
sub
ds
sub
and
cltd
sub
push
jne
push
xor
mov
mov
mov
ror
push
xchg
lahf
in
sub
adc
mov
mov
lock
cmpb
rcll
das
rorl
pop
sbb
inc
push
out
rcrl
sbb
test
out
adcl
outsb
stos
or
cmc
xor
ss
mov
inc
icebp
arpl
dec
xor
mov
in
sbb
adc
mov
dec
sub
mov
mov
sub
dec
push
mov
movsb
mov
enter
popf
adc
xor
nop
adc
mov
mov
jne
xor
or
mov
xchg
cmp
mov
jge
in
add
push
xchg
mov
mov
sub
xor
dec
shrl
test
and
gs
jbe
pop
mov
mov
jle
jb
mov
push
pop
inc
icebp
and
inc
inc
xchg
sub
fnstsw
adc
or
xchg
shrb
push
pop
push
pop
pop
sub
leave
movsl
sarl
xchg
inc
mov
lret
outsb
push
push
cld
bound
stos
jno
push
aaa
into
clc
sub
pushf
jg
ljmp
lods
push
mov
sub
in
pop
movsb
mov
sar
pop
lods
jns
mov
sub
jle
in
or
nop
test
dec
insb
daa
loope
mov
adc
dec
imul
and
mov
fldcw
and
jnp
jb
mov
popf
jge
leave
cmp
std
mov
addr16
cwtl
lret
jmp
pop
hlt
test
jns
orl
adc
out
shlb
and
adc
dec
sbb
ja
outsb
mov
sbbb
push
sub
lret
rclb
pop
rorl
inc
xchg
popf
sti
mov
and
push
cmpsb
out
jae
mov
mov
popa
mov
lret
lods
push
jmp
sti
popl
in
mov
lods
aam
std
add
mov
stos
pop
icebp
inc
sub
cmp
mov
out
movsb
mov
lret
in
dec
sbb
pushf
pop
in
cs
push
mov
shr
rorl
sbb
jge
xor
lret
movzbl
lds
push
push
cli
leave
aad
cmpsl
push
dec
cwtl
orb
pop
jo
jbe
ljmp
nop
cld
stos
sub
dec
lds
cwtl
sub
mov
std
or
aad
dec
inc
mulb
add
popa
iret
inc
or
and
dec
jmp
gs
mulb
mov
lret
cmp
mov
subps
inc
xchg
scas
mov
jp
add
jp
inc
int3
cld
adc
xchg
ret
rclb
jecxz
mov
dec
cmpsb
jae
outsl
mov
pop
push
xchg
push
inc
in
pop
test
in
outsl
fnclex
sbb
lret
sbb
jbe
aam
shl
fldl2t
fcmovu
push
mov
neg
adcl
adc
push
xchg
inc
sbb
dec
mov
cmp
push
push
out
mov
lods
jns
mov
bound
sub
js
xchg
cltd
mov
inc
out
add
ljmp
or
mov
pushf
xchg
popl
fmull
fistl
lds
add
lret
xchg
test
in
sub
push
add
rol
repnz
push
out
sub
loopne
sbb
sbb
jp
sub
inc
pop
les
mov
or
jecxz
jno
adc
sub
dec
jbe
jno
sub
cmp
daa
imul
xchg
frstor
movsl
mov
or
inc
mov
xlat
inc
push
xor
pop
xor
mov
dec
out
mov
adc
push
push
inc
add
test
xchg
out
movsb
int
fnsave
adc
xchg
por
jbe
sub
flds
es
sub
jne
popa
lds
mov
test
jbe
lea
ret
shr
ret
xchg
add
lahf
mov
mov
stos
and
test
pop
out
mov
cmpsl
and
or
jo
outsl
cmpsl
xor
fnstenv
jmp
jb
incb
pop
jp
jno
mov
cmp
shld
cmpsb
mov
ret
rcll
popa
out
pop
cmpsb
loopne
es
into
fmulp
xchg
jmp
leave
sub
jb
inc
xor
sub
das
lret
sub
and
mov
cmc
fisubs
ficoms
fcoml
fs
mov
movd
ss
aas
or
addr16
xor
mov
or
out
xchg
and
lcall
inc
or
push
stos
jge
fmuls
cmc
cmp
adc
popf
jmp
aad
add
or
test
push
leave
dec
arpl
mov
push
test
pop
pop
scas
inc
jae
pop
push
stos
loopne
jno
call
push
adc
repz
pop
sub
hlt
and
sbb
js
lock
lods
mov
mov
sbb
or
aad
pop
leave
sti
lock
test
pop
lock
dec
cmp
mov
addr16
movsl
and
or
inc
in
scas
bound
and
pop
cli
shlb
stos
jmp
jns
ror
inc
mov
out
mov
sub
popa
xor
inc
mov
dec
ljmp
fwait
clc
jge
notb
daa
rol
ljmp
dec
aam
stc
call
inc
jnp
cmc
dec
gs
and
cmp
nop
mov
outsb
and
inc
movb
insb
and
jno
jecxz,pt
sub
test
mov
inc
pop
aad
mov
jnp
dec
test
jo
add
jae
cmpl
push
out
insb
in
ljmp
xor
pop
fistps
notl
lods
or
inc
inc
cmp
insl
out
fcmovu
xchg
in
xchg
mov
stos
int
mov
lods
xor
or
and
mov
pusha
pop
jp
mov
or
jecxz
in
adc
lods
jle
or
js
xchg
into
test
adc
pop
or
dec
mov
jg
sar
adc
mov
cltd
push
mov
cmp
adc
stc
jbe
jge
js
push
push
int
adc
lds
shl
pop
sub
xchg
jg
add
inc
push
lret
test
aaa
imul
ret
xchg
aaa
jae
mov
fadds
sub
clc
nop
lea
mov
or
rcrb
aaa
in
bnd
cmp
bound
test
adc
inc
in
ss
test
ljmp
inc
xchg
xor
xor
mov
xchg
test
out
mov
mov
movsb
lods
test
imulb
call
pop
sub
xchg
add
cli
aad
adc
cmpsb
test
fmull
ret
jae
pop
add
push
mov
dec
xor
cmc
jge,pn
dec
lahf
dec
lock
mov
push
stos
jmp
xchg
push
cmp
mov
dec
fwait
jmp
dec
rcrb
test
mov
loope
in
sub
pop
or
xchg
insb
pop
divb
fdivl
call
push
shll
cltd
fwait
hlt
sti
movsb
mov
sbb
xchg
dec
pusha
adc
lret
jmp
out
aas
cmc
push
mov
in
cmp
sbb
mov
stc
jae
std
push
insl
shl
pop
fcoml
dec
repnz
and
call
push
jge
pop
scas
adc
icebp
xor
aad
out
sub
jb
gs
jecxz
dec
rcrb
sub
or
rcrb
int
jmp
sub
sub
or
je
or
cmc
mov
scas
dec
imul
add
xlat
in
mov
scas
iret
xchg
icebp
cmp
cmp
std
jb
repz
movsb
pop
mov
mov
xor
push
shlb
pop
cmp
data16
lock
out
sarl
adc
aad
arpl
jae
or
sbb
gs
mov
sbb
cld
ret
jg
rcrb
push
or
call
out
xor
adcl
and
clc
fisubrs
mov
dec
jb
jne
out
rolb
push
ret
add
mov
sub
call
pop
loope
fists
adc
dec
ret
push
pop
sbb
sbb
pop
xorb
lea
js
pop
and
xchg
pop
decl
loop
call
jno
mov
inc
xor
cmp
std
dec
xchg
in
orl
bound
clc
jae
cs
push
gs
push
rcll
lock
mov
xorl
mov
bound
mov
mov
and
lock
sbb
inc
sbb
or
aaa
or
and
mov
add
cmpsl
xchg
mov
xchg
jge
nop
into
repz
inc
jg
call
lahf
adc
leave
aas
mov
and
dec
push
fxch
add
inc
mov
jno
mov
gs
sti
lods
xchg
loop
cmc
dec
push
lods
mov
or
adc
in
mov
cmp
sub
rorb
sahf
mov
lea
stos
js
ret
stc
das
fadds
imul
xchg
fwait
cmpsl
cmp
in
cmp
inc
lret
test
fisttpl
cli
push
decb
xor
and
into
loope
mov
lea
sbb
mov
lret
jae
insb
push
pop
add
xlat
leave
mov
cmovle
jecxz
cmpb
js
push
in
or
rorb
stc
sub
xchg
xor
inc
xchg
and
pop
lds
jno
cmp
xchg
pop
mov
xor
jnp
lret
pop
push
js
cmp
sbb
sub
adc
test
adcl
outsb
push
insl
xchg
jb
mov
arpl
lds
cmp
xor
jmp
or
mov
out
icebp
andl
gs
sarl
mov
shr
dec
imul
xchg
mov
xchg
loop
push
jnp
rorl
mov
icebp
ljmp
cmpsb
pop
fiadds
enter
dec
mov
je
icebp
les
inc
fisttpll
fsubs
in
repz
xor
inc
bound
fcomps
popa
dec
jecxz
adc
push
into
mov
cmp
dec
andb
push
movsl
dec
push
inc
inc
test
andb
xor
shlb
lea
aaa
jo
pop
sbb
cmp
fs
pop
repnz
pop
icebp
sahf
jmp
sbb
leave
dec
mov
pushf
jecxz
xchg
jecxz
jo
sarl
outsl
xchg
inc
lahf
and
fstpl
loopne
xor
shrb
in
rcr
mov
shll
inc
pop
push
es
mov
fwait
mov
lcall
fwait
adc
mov
ret
and
xchg
sbb
in
add
mov
insb
jl
sti
mov
xchg
test
sbb
into
mov
ja
cmp
cmp
inc
mov
in
mov
jge
mov
jg
dec
hlt
add
xchg
pop
idivb
xchg
out
repnz
cli
pushf
addr16
imul
in
push
hlt
lcall
cmp
and
pop
and
mov
outsl
stc
nop
and
adc
fldenv
aad
cltd
cmp
inc
mov
adc
call
inc
iret
dec
mov
je
and
mov
test
pop
mul
push
pop
ljmp
mov
xchg
rclb
push
bound
push
mov
inc
aaa
add
lods
popa
inc
cmc
ja
jecxz
and
pop
adc
push
insb
insl
pop
cmpl
test
nop
mov
outsl
xor
insl
popa
xchg
sar
push
push
cmp
dec
fimull
sbb
fstl
mov
adc
call
xor
mov
mov
sub
xchg
bound
xchg
insb
icebp
xor
sbb
pusha
xlat
lcall
xor
xchg
mov
dec
gs
rcrb
loopne
leave
mov
mov
imul
cmpsb
xchg
outsl
ret
lcall
shlb
dec
fcmovu
js
mov
pop
mov
push
push
and
jl
mov
test
cmc
inc
pusha
loope
adc
push
mov
stos
cmp
rol
gs
or
and
mov
std
mov
outsl
mov
gs
dec
enter
push
addr16
inc
push
pand
jmp
int
int
mov
push
faddl
int3
xor
or
lcall
jmp
pop
hlt
jmp
and
sti
iret
dec
cltd
add
inc
xor
jbe
dec
jnp
cmc
push
addr16
or
mov
test
adc
shufps
es
cmp
xchg
fidivrs
dec
push
sub
pop
xchg
dec
fildl
xor
and
shlb
shll
and
mov
js
pop
mov
adc
bts
sub
cmpb
pop
scas
xor
jnp
fsubl
mov
xchg
inc
fmull
in
jo
ffree
cmp
daa
dec
add
lahf
cmpsb
negl
data16
gs
sbb
inc
repnz
das
loop
adc
test
daa
pop
fs
mov
cmpsw
clc
out
lret
mov
sub
jp
outsl
test
mov
popf
mov
or
mov
in
adc
adc
in
test
ret
sbb
push
data16
test
inc
cmp
cli
fadds
arpl
inc
mov
sub
pop
movsl
xor
push
mov
xchg
mov
insb
mov
xchg
sarb
and
sbb
jmp
xchg
jbe
inc
push
fisttpl
mov
jmp
xor
repnz
mov
cmc
push
and
mov
xchg
testl
jmp
loop
pusha
cmp
inc
or
fnstenv
inc
sub
mov
jge
pop
cwtl
xchg
ja
dec
and
cmpsl
cmp
call
or
repnz
pop
mov
jns
sbb
xor
dec
cmpsb
repz
int3
sbb
out
cmp
sub
out
or
movl
ret
mov
lret
push
addl
fisttps
xlat
cmp
repnz
scas
std
fucom
test
xchg
inc
jp
mov
out
fdivl
mov
enter
movsl
aam
insb
mov
icebp
inc
cmp
pop
rclb
mov
xchg
inc
dec
dec
imul
fdivr
push
xor
sbb
cld
pushf
testl
jecxz
inc
and
and
fisubrl
mov
mov
test
scas
jns,pn
imul
xor
decb
lods
addr16
cs
mov
or
pop
add
jo
dec
push
push
mov
push
sub
cwtl
adc
xchg
lods
fists
lahf
dec
fwait
xchg
rorl
push
lds
cli
lock
push
cwtl
test
cld
lret
cld
stos
lock
mov
jns
fldcw
data16
stos
inc
inc
fnstenv
inc
and
cmp
xchg
shll
int3
sar
cmp
push
fimull
adc
jmp
push
stos
xor
fisubs
inc
insl
es
lcall
add
je
cli
mov
and
sub
scas
mov
cmpsb
pushf
andl
cli
jmp
mov
inc
hlt
scas
jae
iret
add
js
jne
inc
cmpsl
push
out
push
push
aas
and
jbe
or
inc
pop
clc
adc
mov
dec
xchg
xor
mov
xchg
sarb
in
pop
or
scas
insl
out
testl
movl
xchg
pop
inc
insl
cmc
sbbl
sahf
fsubrp
les
ffreep
popf
jbe
fcoms
jnp
dec
xorb
les
cmpl
and
jns
or
jno
and
adc
lret
or
xor
rcr
out
mov
pop
mov
mov
pop
cld
jge
sahf
out
outsb
add
mov
dec
push
dec
sub
fs
jl
jecxz
mul
mov
xchg
fmuls
mov
stos
cmpsb
pop
mov
sub
out
pushf
imul
push
inc
pop
sub
mov
push
jmp
rorb
jmp
movsb
lds
mov
sub
les
pop
hlt
lret
cmpsb
enter
mov
fwait
int3
adc
add
out
sub
sbb
pusha
ljmp
inc
mov
mov
pop
jmp
mov
ljmp
inc
sarb
inc
mov
mov
cwtl
fcom
inc
int3
scas
inc
xchg
pop
mov
cwtl
fstpl
popf
enter
repnz
push
cli
lds
cmp
pop
cmp
inc
push
sti
in
iret
cmp
sub
in
dec
xchg
test
inc
pop
ss
fwait
mov
int
push
iret
cmp
lds
and
arpl
orb
js
scas
xchg
jecxz
test
mov
xchg
and
mov
and
xor
outsb
mov
sub
aaa
jbe
or
shll
adc
mov
mov
in
in
mov
lods
xor
je
cmpsb
lods
stos
loope
shr
mov
xchg
sbb
aam
jnp
shl
clc
sbb
in
clc
outsb
movsb
int3
xor
jb
cmp
mov
fildll
gs
mov
push
push
fcomi
mov
mov
add
inc
into
inc
mov
or
hlt
repz
nop
aaa
scas
repnz
or
stc
mov
mov
shrb
test
decl
or
lret
clc
add
xorb
out
push
cmpsl
push
adc
pusha
enter
es
popa
jmp
mov
mov
mov
lods
cltd
rolb
xchg
and
adc
hlt
and
data16
mov
arpl
pop
pop
push
js
ret
push
popl
std
mov
fnstsw
xchg
xor
mov
pushf
clts
jecxz
or
aaa
fstpl
cmp
orb
mov
inc
mov
xchg
scas
mov
jno
shl
push
cmp
adc
ret
push
mov
popa
cwtl
or
pop
rcrb
mov
inc
mov
mov
mov
popa
or
sbb
loope
imul
pop
inc
sbb
pop
and
sub
dec
fcmovbe
sub
mov
mov
out
ret
scas
ja
push
loopnew,pt
testl
mov
sbb
popa
mov
jp
jo
jp
jl
jnp
movsl
hlt
lret
daa
pop
pop
mov
stos
divb
lods
fmuls
mov
shrb
call
pop
pop
in
push
js
pusha
les
sahf
shrl
pop
mov
scas
mov
popf
fmull
xchg
sbb
fisubs
sti
lock
flds
push
fadds
mov
outsl
in
ret
xchg
sub
outsb
clc
mov
mov
test
les
fs
mov
jg
icebp
dec
fwait
xor
xor
sbb
mov
xlat
out
daa
mov
jns
fcompl
rcl
call
fidivrl
xor
les
lahf
fucom
xor
in
push
inc
adc
push
lahf
mov
lahf
stos
push
fisttps
xchg
mov
aam
inc
sbb
scas
cld
pop
mov
imul
test
popf
cmp
mov
inc
imul
add
into
xorb
pop
pop
pop
cmpsb
lcall
mov
mov
in
addr16
std
inc
aaa
jae
dec
into
lcall
cmpsb
std
add
mov
fiadds
xchg
enter
movsl
adc
and
pop
xor
sub
xchg
mov
or
loop
dec
loop
enter
lret
mov
mov
insl
in
icebp
or
pop
sahf
int
lods
out
out
adc
mov
insb
imul
sbb
xor
les
shrb
bound
repnz
subl
fidivs
mov
repnz
push
add
adc
or
adc
sub
jmp
add
stos
std
fsubrs
into
xor
es
pop
outsb
add
push
arpl
xchg
mov
jns
add
push
mov
push
xor
or
mov
jno
pushf
das
out
dec
inc
cwtl
or
hlt
movl
sahf
cltd
mov
outsl
es
cmp
lahf
mov
sti
pushl
push
cld
add
insb
mov
sub
fnstcw
mov
mov
and
sbb
aam
in
rcll
mov
cmp
ljmp
add
test
arpl
xorb
xor
es
jae
cmc
cmp
inc
xor
test
mov
int3
dec
in
cmc
les
ss
dec
js
jmp
xorb
div
add
pop
subl
cld
push
jmp
dec
mov
cli
adc
jb
xor
int3
test
sbb
in
xor
adc
adc
cmp
push
das
xchg
push
ret
add
out
std
mov
jl
decl
dec
scas
int3
outsb
cmp
out
xor
in
out
aas
pop
cmp
push
push
add
mov
dec
icebp
xor
add
sbb
ds
sub
in
cld
add
fdivl
add
xchg
loopne
push
outsb
xchg
push
shrl
stc
loope
lock
xor
jge
ret
push
nop
jecxz
sti
mov
jbe
aas
aaa
ja
mov
inc
push
in
cs
int3
pop
cli
shlb
repz
sar
jns
and
xor
jno
outsb
aas
aas
add
lret
sti
push
sbb
movsl
notb
cmp
sub
cmp
addr16
shrb
int3
js
fwait
in
lret
ds
movsl
mov
lret
cltd
add
mov
adc
rcll
cwtl
bnd
jge
ficoms
push
sub
imul
xor
dec
loope
out
and
sahf
add
xor
test
iret
in
ljmp
sbb
mov
sub
jae
in
stc
xchg
and
les
jg
icebp
mov
inc
mov
ret
and
or
js
ret
dec
out
adc
je
adc
int
or
push
inc
les
dec
ja
aad
lea
aam
mov
xor
inc
ljmp
sti
jne
or
jl
ret
std
loope
jb
stos
mov
aad
jg
mov
mov
mov
cmp
push
mov
arpl
movsl
sti
clc
add
mov
xchg
std
shrb
dec
or
push
or
daa
mov
and
sahf
mov
push
lahf
shr
es
adc
pop
loopne
jle
rol
popf
hlt
jo
mov
xchg
mov
aaa
adc
dec
je
jnp
popf
mov
xor
cmp
adc
jne
loope
out
adc
jbe
cld
int
dec
jecxz
clc
jae
lcall
inc
add
subl
loope
cltd
movsb
xchg
int
inc
subl
mov
pop
sub
push
fmul
test
lret
pushf
or
pop
mov
ss
cmpsl
xchg
test
call
frstor
lods
xor
jbe
or
fcoms
shr
into
scas
mov
mov
out
mov
into
mov
lods
fiadds
shl
jmp
daa
cs
or
mov
mov
mov
lods
loop
sub
jb
movsb
lock
lds
sahf
dec
inc
jecxz
mov
icebp
pop
push
inc
push
shr
jnp
mov
pop
cmc
imul
repnz
jle
mov
cmc
ret
fdivrl
ss
fs
adc
xlat
cwtl
das
xor
xchg
xor
push
loopne
sbb
popa
cmp
cmp
shll
in
es
ret
sbb
lock
repz
movsl
int3
gs
in
lds
and
pop
add
repnz
fildll
dec
lock
outsb
aad
pop
leave
dec
out
ficoml
jp
in
sbb
jl
bound
lds
scas
les
jbe
scas
mov
loopew
xchg
xchg
push
jmp
popa
sarl
xchg
xor
imul
loop
in
shrb
stos
inc
scas
push
cmc
dec
push
sahf
test
mov
loopne
addr16
xor
push
loopne
lods
lock
mov
lds
inc
int
inc
jp
lahf
fmul
mov
out
sbb
icebp
pusha
xlat
push
out
es
insl
jbe
fwait
adc
ficompl
lahf
ret
fists
cmc
jb
or
int3
cmp
rcrl
add
test
jmp
and
xlat
pop
mov
xor
test
shrb
push
popf
roll
leave
xchg
repnz
mov
xor
outsb
jle
test
push
mov
test
filds
xchg
loop
and
cld
add
dec
loop
stos
sbb
outsl
jge
cmc
sub
fimull
fwait
xchg
mov
adc
stos
pop
inc
xchg
xchg
sbb
fsts
mov
sahf
imul
scas
push
popf
je
out
les
push
mov
sub
mov
into
inc
mov
inc
push
lods
mov
rcrb
and
mov
xchg
pop
push
int
cmp
sub
es
pusha
mov
and
sbb
jo
inc
fmull
sbb
xchg
xchg
flds
xor
lcall
daa
xlat
dec
mov
mov
in
rorl
push
pushl
in
out
jbe
clc
pop
addb
popf
mov
insl
decb
lock
cmp
jnp
cld
stc
xchg
clc
mov
jle
stos
xchg
pop
jb
std
mov
subb
xorl
push
add
lock
dec
cwtl
mov
enter
out
lcall
out
push
ret
icebp
and
sbb
stos
mov
adc
test
imul
push
stc
std
in
in
mov
pop
and
outsl
lret
ds
push
addr16
test
std
push
pop
shl
mov
data16
xor
or
cmpsl
pop
out
leave
movsb
sub
insl
push
mov
stos
lods
xor
lds
inc
xor
das
adc
in
in
sahf
cld
je
add
jae
mov
adc
iret
aam
pop
cwtl
lds
icebp
mov
jl
inc
xlat
pop
mov
mov
rclb
push
cmp
cmpsl
cmp
jbe
dec
dec
iretw
repz
sub
mov
fisubs
mov
jmp
test
add
sbb
lahf
pop
mov
pop
nop
or
gs
fisubrs
ljmp
pop
icebp
idivb
jb
push
xor
push
cmp
clc
adc
push
pop
xlat
push
jae
inc
jmp
mov
push
ss
lahf
mov
rclb
xor
aam
mov
out
sti
fiaddl
test
ret
jo
inc
adc
jmp
ja
fcmovnbe
imul
cmp
stc
dec
mov
xor
mov
cmp
fsubl
cmp
inc
bound
jnp
pop
lcall
mov
fimuls
add
fldl
fbld
lahf
and
mov
imul
mov
cmc
gs
jecxz
je
xor
lret
test
xor
sub
adc
add
ret
in
jle
add
jle
in
and
adc
xchg
std
jmp
out
cmp
daa
testb
hlt
push
mov
xchg
test
cmc
mov
mov
test
adc
loop
into
mov
jmp
pop
movsb
mov
lods
xchg
orl
bound
push
ret
fsts
or
mov
fisubrs
jns
in
inc
sti
out
call
sbb
enter
dec
imul
popf
enter
xor
push
xor
fwait
adc
inc
pop
sbb
and
mov
repnz
arpl
jg
ficompl
sub
cmc
dec
jp
call
jp
xor
aaa
mov
outsl
sub
out
pop
add
ja
push
push
mov
or
jnp
lret
or
pop
cltd
jmp
and
decl
dec
inc
sbb
inc
dec
dec
jne
into
cmp
in
push
icebp
or
out
dec
xor
or
jno
push
inc
or
les
testl
in
xor
pop
movsl
xor
mov
cltd
clc
enter
jg
cmc
sbb
ss
fistl
loop
int
nop
dec
pop
push
push
add
push
dec
jecxz
in
rclb
fadds
negl
fcoms
cmp
add
xchg
cli
int
cltd
daa
dec
cwtl
fs
je
or
sbb
sub
int
xchg
pop
jmp
mov
fisttps
lret
fwait
xchg
stc
mov
xchg
aad
cld
shl
out
jecxz
add
int3
rcl
sar
inc
push
push
xchg
outsl
aaa
sahf
hlt
or
aad
and
mov
cs
dec
loop
lock
inc
notl
mov
sbb
aam
cmp
stos
cs
xchg
in
push
hlt
mov
mov
mov
subb
andl
lock
cmpsb
enter
ljmp
cmpsl
cld
fwait
inc
jge
je
dec
sub
jmp
faddp
loopne
sahf
sbb
cmpsl
fdivl
mov
sahf
mov
cmp
xor
fdivl
nop
movsb
sub
lock
cmp
shlb
dec
cmp
xor
mov
cld
gs
test
loope
sbb
mov
inc
shl
ss
jg
sbb
pop
adc
push
mov
xor
or
test
push
adc
test
pusha
dec
jp
mov
pusha
dec
or
inc
ficoml
lds
in
adc
loope
aas
xchg
mov
inc
and
in
pop
fisubrs
mul
inc
test
shrb
sub
lea
add
adc
jbe
ret
xchg
shl
out
out
xchg
test
insb
mov
loope
dec
cmp
incl
fidivl
xor
fcmovnbe
mov
in
roll
out
add
sahf
mov
leave
test
ja
loope
jmp
daa
bound
inc
cmp
xor
jo
cli
dec
add
pop
insl
loopne
cmp
test
pushf
inc
nop
or
adc
out
add
dec
repz
shl
xchg
mov
adc
cmp
push
pop
mov
loopne
icebp
sbb
loopne
add
xchg
mov
dec
dec
xchg
rcrb
add
les
stos
lods
jne
sti
out
test
cmpsl
add
movsb
mov
rorl
jno
mov
shll
dec
arpl
jecxz
mov
xor
imull
push
adc
hlt
les
push
cmp
icebp
jb
ds
xor
in
inc
dec
mov
fs
in
push
mov
in
xchg
pop
negb
xor
test
fsincos
xor
mov
sub
outsb
sub
mov
or
jge
enter
out
dec
xchg
jae
xchg
inc
xchg
and
cld
push
fucom
mov
repnz
addl
gs
jns
dec
dec
pop
xchg
sbb
inc
inc
mov
aad
jb
push
fdivr
fnsave
add
pop
pop
popa
rcl
mov
sub
mov
ret
outsl
push
pop
jb
das
cld
lret
cmp
pop
xchg
add
cmp
mov
in
mov
push
ja
pop
lods
pop
jo
cmp
mov
icebp
mov
mov
mov
sub
stc
lods
frstor
push
les
es
mov
jns
cmc
lret
mov
in
sub
std
pushf
clc
jno
push
cli
mov
es
cmpsl
sbb
sub
jecxz
push
jb
bound
data16
lret
mov
insl
fsubl
xchg
mov
xor
repnz
adc
xchg
stc
mov
sbb
mov
cmc
mov
mov
addb
mov
shlb
mov
bound
bound
dec
ja
mov
mov
sbb
sbb
sub
cmc
push
dec
in
xchg
iret
jl
jecxz
mov
pushf
pushf
dec
cmp
cmpsb
and
sub
push
fwait
arpl
and
in
cli
xchg
push
scas
inc
inc
add
or
dec
mov
dec
nop
sarb
push
jae
stc
push
nop
jo
add
xor
ficoms
pop
inc
arpl
jbe
inc
mov
xchg
mov
js
repz
shlb
stc
or
insb
repnz
test
xchg
lahf
scas
call
and
mov
in
pop
cld
imull
scas
clc
or
pop
cmc
sar
push
out
or
aaa
rol
je
imul
hlt
les
and
cmpsb
inc
cmpsl
cmpsl
mov
push
add
xor
mov
cmp
ljmp
add
dec
mov
xor
pushf
shrb
add
fisttps
scas
xchg
scas
or
push
inc
mov
and
lret
test
ss
cld
out
mov
outsl
out
fisubs
jg
inc
outsb
xor
and
xchg
mov
jnp
icebp
pop
repz
pop
xchg
inc
cld
aad
je
add
mov
jnp
divl
mov
jno
test
loop
lods
insb
sub
push
call
mov
nop
jae
in
jge
mov
mov
test
movsl
push
int3
adc
or
push
sbb
test
lods
mov
jl
inc
sub
insl
and
nop
mov
dec
jnp
lods
jbe
mov
push
stc
decb
mov
sub
add
adc
add
cmp
pop
cmp
xorl
testb
xrelease
das
jno
popf
and
jbe
jle
jp
mov
and
mov
outsb
mov
pop
jns
jne
mov
xchg
call
xor
iret
insl
ret
notl
xor
push
pop
into
push
pop
sbb
mov
sarl
mov
or
mov
mov
loope
int3
ror
and
les
cld
std
in
dec
out
mov
inc
sbb
shll
test
lods
pop
in
fs
push
rol
addr16
lds
repz
les
inc
daa
js
sub
stos
lods
out
addr16
sbb
daa
jge
jle
popf
repz
les
cmc
pop
testb
in
lcall
out
sbb
jle
shll
in
into
push
movsb
ret
fiadds
in
std
xlat
xchg
scas
out
or
into
sbb
inc
into
jmp
sahf
insl
inc
push
sbb
sarb
aas
aad
mov
std
pop
test
add
push
stc
push
mov
jecxz
jg
icebp
movsl
add
xchg
aaa
push
push
outsb
in
cmc
sub
add
sub
shrb
cs
mul
cmp
rcrb
daa
leave
lods
inc
dec
and
arpl
push
cmp
rorb
test
in
ja
jmp
push
jbe
mov
jmp
sub
cmp
and
jae
loop
dec
sbb
inc
lret
cmpsb
rolb
pop
mov
aad
pop
mov
add
push
dec
aaa
clc
push
push
and
sbb
add
jns
pop
xor
cmpsl
or
iret
test
cmp
in
decb
inc
or
mov
cmpsb
mov
fldenv
leave
testb
ljmp
gs
mov
dec
repnz
and
in
fcom
loop
jnp
and
and
jmp
xlat
loope
in
rcll
xor
or
in
sbb
popf
frstor
jb
mov
adcl
inc
xchg
fdivl
mov
push
pop
pusha
adcb
sub
mov
jne
shrl
lods
mov
cltd
xchg
dec
dec
into
add
fists
inc
sbb
int
push
mov
in
xor
add
out
or
xor
imul
imul
pop
test
nop
add
jbe
repz
icebp
ret
insl
adc
xchg
test
inc
repnz
cmp
sbb
gs
and
roll
loopne
fsubrs
xchg
and
mov
fdivp
adc
fcomp
imul
dec
int3
aam
cmp
int
shl
or
dec
imul
negb
aaa
mov
cmp
mov
gs
fsubl
xchg
mov
rorb
push
cmpsb
aam
add
cmp
push
ret
arpl
mov
xchg
dec
mov
gs
xchg
roll
repnz
hlt
bound
mov
add
dec
xchg
xchg
in
jl
xor
hlt
ljmp
fbstp
jmp
jns
dec
das
inc
call
pusha
push
iret
in
jae
xchg
popa
inc
arpl
mov
inc
orb
cmp
cmp
adc
test
sbb
pop
stos
mov
pop
in
cmpsl
cmc
das
stos
mov
jmp
in
divb
or
outsb
jg
xchg
push
xadd
insb
in
addb
iret
icebp
push
in
icebp
sti
mov
xor
les
pushf
jge
mov
ljmp
mov
arpl
scas
fcompl
push
in
leave
sbb
or
jl
sbb
stc
cmp
cld
jns
mov
add
dec
sbb
hlt
lds
icebp
mov
add
lret
cmpsl
jl
repz
lret
sbb
or
mov
inc
sub
adc
gs
hlt
shlb
es
jae
gs
into
mov
fwait
sub
test
mov
es
jle
dec
push
popf
jp
ljmp
shlb
push
dec
mov
fcmovne
mov
loop
enter
int3
test
inc
mov
cs
mov
rcll
cli
scas
outsl
cmp
ds
dec
and
jb
dec
into
xor
out
cmp
leave
xchg
sbb
popa
dec
adc
add
jg
sbb
mov
icebp
ja
add
push
jae
out
inc
aaa
xchg
in
jle
je
enter
insl
pop
rcrl
fldt
jl
lahf
out
ja
cwtl
jno
sar
addr16
cmp
shr
call
xlat
das
cmpsl
int3
insl
mov
cwtl
std
xor
outsl
popf
es
jns
hlt
jae
movsl
jb
or
fdiv
jnp
les
cmp
pop
mov
push
ret
mov
sbb
add
cmpsl
mov
lods
adc
loop
adc
push
loop
mov
imul
lock
sub
scas
sti
cli
xchg
stc
loop
jns
pop
int
jmp
bound
dec
lea
js
lods
fwait
sub
out
jns
xchg
xor
fcomps
bound
or
add
adc
adc
aam
mov
pop
daa
sub
insb
push
hlt
mov
jmp
outsb
cmpsb
xor
lret
loop
aas
jns
stos
gs
push
and
std
xchg
add
and
fdivrp
cld
and
sahf
popa
test
cltd
pushf
loop
fs
xor
sub
out
popf
or
mov
dec
bound
sub
mov
aaa
pop
xchg
pop
pop
lock
sub
outsb
cmpsb
push
test
sbb
sub
aaa
xor
jp
aad
push
xor
aad
negl
outsb
ret
fdivr
xor
les
xchg
aas
popf
cmp
outsb
jg
mov
jmp
sub
or
add
repnz
lea
loope
cmp
pop
mov
inc
fldenv
and
jecxz
or
ret
mov
cmpsb
lret
mov
and
push
inc
and
movntq
jnp
imul
lock
pop
dec
or
cmpsl
jg
pop
xor
lock
xchg
mov
adc
fisttpll
vpand
das
gs
add
xchg
into
sbb
in
mov
dec
push
lods
push
jne
out
ror
sar
inc
popf
loop
out
push
data16
into
add
es
fxch
add
ret
push
out
inc
popf
clc
out
push
test
rcrl
out
shll
xor
cli
sub
in
arpl
loop
mov
cmc
mov
addr16
arpl
sbb
jo
xchg
push
lret
aad
clc
mov
and
repz
sti
int
dec
aas
inc
mov
inc
test
popf
add
inc
ret
mov
jecxz
adc
lock
xor
js
test
lock
negb
movsb
mov
daa
inc
lahf
sahf
cmp
inc
and
mov
cmp
dec
or
xchg
mov
addb
cmp
mov
ret
fucomi
lret
and
fimuls
jmp
or
mov
or
xorb
es
push
ljmp
sub
or
mov
clc
addr16
add
dec
testl
loop
mov
aaa
cld
mov
xchg
fsubrl
cmp
jecxz
cmpsl
mov
les
jp
outsb
stos
es
mov
repnz
iret
bound
pop
sbb
dec
dec
jmp
jle
sub
add
mov
push
in
es
repnz
inc
add
std
je
adc
adc
jne
mov
mov
pusha
add
adc
test
mov
mov
out
ss
orb
mov
mov
mov
mov
inc
cmp
into
out
cmpsl
dec
xchg
jae
xchg
mov
cmp
pop
adc
push
jp
nop
dec
ret
and
outsl
popa
je
jns
inc
lock
xchg
jo
jp
ss
fwait
leave
sbb
dec
loop
add
ret
lcall
or
cs
mov
and
iret
out
mov
or
mov
and
xchg
int3
add
jbe,pn
or
fwait
shl
nop
test
aaa
mov
add
in
push
mov
ret
fwait
xchg
dec
pop
pusha
or
mov
jns
jne
add
mov
outsl
lret
cmp
jp
and
out
test
pop
push
cmc
jo
insb
repnz
push
xor
sub
and
xor
xlat
cld
pushf
dec
push
inc
jmp
out
rcl
push
push
test
dec
loop
lahf
fisttps
jns
mov
enter
push
xor
lods
sbb
adc
push
pop
fs
push
push
popf
out
mov
or
outsl
into
jno
fs
test
int
into
sub
inc
jbe
loop
xchg
jbe
call
jg
adc
cmp
mov
shlb
add
jnp
daa
or
mov
push
mov
pop
mov
repnz
xor
fidivrs
xor
ss
dec
sbb
mov
and
mov
inc
jns
rcr
pop
ss
pop
jge
clc
mov
adc
in
push
shll
fdiv
jg
cwtl
data16
jmp
xor
iret
daa
mov
cmc
jl
xor
dec
xor
cltd
add
push
or
popa
xchg
test
sahf
mov
and
pop
aad
pop
test
dec
pushf
lahf
call
cmpsb
sar
inc
imul
jl
data16
mov
push
inc
arpl
fwait
arpl
cmp
cmp
mov
in
fwait
icebp
add
add
jp
in
push
add
ret
pop
sbb
push
jmp
push
xor
push
pop
jo
xchg
mov
dec
jb
roll
jp
shrl
push
stos
ja
fnstsw
add
jns
sub
cltd
hlt
xor
lea
ds
pop
cmp
pusha
dec
add
push
mul
inc
xor
jecxz
test
add
rcrl
daa
lcall
mov
ljmp
xchg
pushf
push
out
pop
scas
xchg
sub
cwtl
lods
and
jb
xor
out
jae
fwait
rol
xorb
dec
scas
mov
jo
or
dec
test
popf
out
stc
mov
mov
jmp
outsb
es
inc
push
inc
or
mov
push
pop
push
das
mov
sub
hlt
fwait
push
mov
out
push
sti
xor
into
sub
into
jge
xchg
adc
mov
dec
popa
mov
push
mov
adc
jg
pushf
mov
add
mov
mov
dec
jb
outsl
int
scas
cli
add
into
and
add
test
mov
int
mov
in
push
pusha
inc
add
out
loop
pop
je
mov
pop
add
jns
bound
or
arpl
iret
lds
or
dec
sbb
xchg
add
cmp
cmc
enter
mov
and
lods
pop
ss
repz
xchg
add
fbstp
adc
and
mov
jge
inc
sub
ljmp
and
mov
mov
mov
idivl
sbb
pop
xchg
stc
mov
in
dec
xchg
cmc
sti
mov
cmc
push
and
dec
std
xchg
jne
inc
pop
jo
cs
pop
pop
adcl
lock
cmp
mov
push
mov
mov
insl
andb
push
aad
inc
xor
inc
mov
test
push
pop
dec
inc
adc
mov
push
mov
out
imul
fimull
adc
fiadds
orl
gs
jmp
sbb
loope
insb
push
stc
jne
inc
repnz
sbb
das
push
sub
pushf
mov
xor
pop
sbb
lret
add
jae
insl
jmp
mov
std
popa
and
xor
mov
jecxz
adc
add
ja
cmp
inc
push
inc
cltd
je
ret
rcrb
jns
fptan
imul
push
lcall
lea
cs
std
arpl
scas
fdiv
mov
sbb
loopne
mov
jb
andl
and
sti
test
add
push
mov
outsb
scas
call
icebp
push
idivb
insl
add
xchg
clc
mov
test
push
rolb
int3
sub
stos
int3
jns
test
lea
sbb
mov
dec
push
data16
frstor
add
aad
push
daa
cltd
xchg
jecxz
inc
pushf
test
dec
addr16
out
or
std
imul
int3
mov
sbb
add
mov
out
jecxz
lea
push
negb
shll
popa
push
mov
arpl
fwait
ret
movsl
and
cmc
cmpsb
repz
xchg
scas
push
push
imul
jns
inc
push
xor
dec
fdivl
inc
pop
lea
and
rcrb
ss
lods
fdivl
daa
es
sub
std
out
out
fsub
ja
mov
xchg
loop
mov
cld
hlt
pop
fs
sbb
pop
and
mov
mov
out
mov
das
cltd
dec
aam
les
push
test
lret
scas
xorl
loop
sbb
inc
push
mov
sar
xchg
xchg
xchg
pushf
insb
mov
mov
pop
mov
aad
mov
push
stos
xchg
add
fistps
ljmp
push
pop
push
scas
fisubrl
push
add
lods
adc
sahf
fisubrs
mov
cwtl
iret
in
adc
std
sarb
cmp
mov
cmc
jmp
inc
mov
ljmp
xor
jecxz
push
push
sub
or
add
inc
ficompl
and
xchg
mov
add
push
in
sti
mov
ljmp
stos
data16
dec
jle
aad
fs
mov
fstpl
jle
imul
inc
mov
test
pop
push
and
test
mov
int3
test
fs
cmp
push
sbb
inc
std
jmp
sarb
jp
pop
in
jbe
xor
nop
and
insl
std
mov
out
jbe
xchg
rcll
and
pop
js
lahf
aam
daa
dec
dec
adc
loope
mov
mov
xchg
dec
mov
mulb
les
iret
ss
xor
lret
lods
cmp
mov
arpl
stos
add
add
repnz
mov
cmpsl
divl
push
or
scas
stos
inc
mov
jg
jp
lds
dec
dec
hlt
xor
push
xchg
int3
push
das
adc
add
push
sbb
add
lock
loope
mov
xor
xor
mov
xor
mov
pop
aad
sub
hlt
sub
jne
push
out
dec
arpl
sbb
ja
sarb
mov
or
xchg
xchg
repnz
in
leave
outsl
sbb
and
push
lret
pop
cltd
xlat
pop
sahf
icebp
sub
xor
stos
negb
pop
out
imul
jae
jp
ret
scas
ljmp
inc
lret
mov
fimull
js
mov
cmp
repnz
lcall
mov
adc
loopne
add
mov
lret
je
jge
imul
mov
ret
adc
sub
sub
push
je
mov
lods
cmc
dec
sbb
push
repz
jnp
in
into
test
lcall
mov
sbb
adc
xor
ficompl
fisttpl
dec
adc
pop
fistl
pop
call
pushf
scas
push
jo
movsb
push
lcall
add
int3
mov
add
rorl
movsl
sahf
mov
inc
xchg
shrl
pop
xor
call
mov
and
and
dec
and
fcos
rcr
adc
mov
dec
mov
leave
and
lret
inc
mov
jecxz
mov
fstpt
testl
imul
mov
fdivl
cmp
add
call
mov
jo
mov
cwtl
faddl
dec
shlb
int3
pop
push
jle
mov
jbe
arpl
enter
jbe
iret
shrb
and
cmp
dec
mov
in
pushf
pushf
faddp
jmp
jmp
mov
pop
add
xor
fisttps
int3
mov
or
das
movsb
pop
jge
pop
xor
push
sub
pop
scas
clc
mov
push
push
push
sbb
mov
or
push
xor
and
adc
negb
xor
pop
out
stos
sbb
fdivl
les
nop
outsb
xchg
cli
mov
fiaddl
hlt
sbb
xor
push
sbb
sub
jp
call
js
jecxz
mov
cmp
ffree
xchg
and
cmpsb
mov
mov
xchg
es
into
in
fistps
mov
lcall
repnz
xchg
addr16
pop
pop
inc
mov
jle
mov
mov
in
fwait
movsl
mov
dec
and
pushf
and
loop
add
sub
mov
inc
pop
jmp
jb
div
push
insl
stc
push
in
repnz
outsb
lret
mov
and
push
test
inc
mov
push
clc
pop
mov
jecxz
pushf
push
push
fisttpll
clc
dec
test
icebp
add
push
in
sub
push
or
data16
mov
shl
fdivl
ret
inc
cld
mov
jo
fwait
test
jge
jno
mov
or
xor
sahf
roll
loopne
lret
mov
lcall
cmp
popf
mov
ljmp
lds
stos
pop
dec
roll
mov
cmp
mov
mov
or
cmpb
fldl
pop
lret
pop
lods
aad
fwait
or
dec
lods
faddl
lret
stc
mov
xchg
jecxz
sub
cltd
cltd
push
cwtl
jo
insl
lds
mov
add
movl
in
push
adc
adc
lret
rcll
out
scas
lock
inc
adc
dec
add
mov
in
dec
push
int
popa
jge
mov
dec
lea
mov
rorl
aad
hlt
mov
lret
add
jo
ficoms
inc
cmpsl
push
pop
bound
lods
pop
sbb
cmpsb
xor
and
dec
hlt
scas
push
les
pop
jp
xlat
fildl
cmpsl
push
push
pop
jae
push
and
gs
mov
xchg
cmpsl
aas
dec
out
stos
mov
push
dec
cmp
call
cs
shr
inc
xchg
popa
insb
xor
pop
xchg
lods
int3
jecxz
pop
fptan
mov
sub
fnstsw
add
sbb
xor
pop
lock
add
add
test
pop
repnz
pop
xchg
shrl
or
push
push
adc
fiadds
inc
xor
fcoml
ret
mov
pop
mov
mov
mov
scas
adc
push
dec
test
lea
sub
xchg
loopne
xchg
hlt
adc
mov
sbb
pop
xlat
xchg
and
aad
or
add
mov
push
enter
dec
cld
movsb
xchg
mov
lcall
stc
mov
outsb
test
stos
xor
out
xlat
in
xchg
xchg
bound
test
jg
pop
pop
scas
xchg
or
daa
and
xorb
mov
jbe
adc
or
inc
cmp
out
cmpsl
mov
pop
pop
fisubs
lahf
dec
cmc
sub
jl
clc
enter
xor
enter
lahf
jecxz
pusha
and
xor
rorl
je
rcrb
pop
pop
daa
negb
adc
push
mov
dec
pop
mov
clc
sbb
out
add
dec
jne
dec
pop
cmp
ret
mov
xchg
pop
add
les
pop
rcll
cmp
sub
sbb
cmpsl
push
ds
mov
sbb
lret
push
jge
push
outsb
popf
mov
inc
sbb
lcall
adc
lods
pop
cli
sbb
jne
lret
and
xchg
dec
mov
frstor
es
mov
mov
or
jmp
adc
xor
xchg
xchg
adc
or
xchg
jecxz
sbb
outsl
jnp
mov
shll
xchg
inc
adc
push
dec
xor
sti
xchg
dec
pop
sbb
insl
addr16
jp
fnstcw
nop
test
jno
mov
call
gs
insb
sbb
adcl
lret
cmp
pop
mov
lods
push
dec
and
stos
incl
sbb
xchg
add
pop
jecxz
data16
gs
insl
add
stc
or
fcoms
aas
push
push
movsl
icebp
shll
stc
bound
frstor
add
negl
icebp
int3
mov
cmpsl
mov
leave
rcll
add
jge
in
lock
sahf
mov
mov
and
pusha
loopne
and
popa
addl
out
xchg
lds
orl
and
jae
mov
jne
cmp
add
nop
bound
mov
scas
add
sbb
test
decb
idivb
push
and
cmp
mov
mov
mov
mov
mov
fstpt
fsts
push
adc
cmpsb
and
xchg
aad
mov
mov
dec
sbb
xor
mov
in
daa
mov
push
sub
cltd
adc
ss
mov
mov
jns
sbb
dec
mov
and
cmp
je
adc
imul
push
ret
inc
popa
and
negb
jl
lds
das
dec
jae
pop
test
xor
xor
xor
lock
mov
movsl
dec
stos
add
inc
xor
adc
cmp
out
outsl
mov
adc
xor
inc
cld
dec
cmp
pusha
dec
dec
movsl
lret
inc
clc
cmp
cli
xor
sub
pop
pop
inc
movsl
adc
cltd
scas
leave
lds
shll
pop
out
add
fldl
add
aaa
lea
mov
fisubrl
hlt
testb
mov
mov
icebp
add
shl
lret
jmp
mov
dec
mov
mov
cmp
stc
mov
cmpsb
ja
aad
xchg
sti
inc
test
das
xorl
jnp
mov
mov
lds
lock
ss
mov
xor
mov
cmpsb
pop
out
stc
movsl
push
les
inc
lcall
mov
hlt
xor
push
or
mov
lret
pop
bound
mov
int3
add
jns
js
fidivrl
dec
mov
push
andl
and
jae
mov
lds
mov
lock
sbb
fs
das
lock
add
mov
mov
outsb
repnz
fistpl
mov
xor
pop
mov
test
imul
cmp
pop
push
or
mov
insb
ja
decb
jmp
movsl
jecxz
out
in
icebp
sbb
mov
jmp
dec
sahf
cmc
cmpsl
fnstcw
mov
or
fwait
das
xor
roll
pop
test
and
ficomps
add
inc
xor
xchg
fwait
mov
daa
dec
dec
and
push
jbe
and
in
mov
xchg
aaa
sbb
sbb
int
xor
testl
push
test
add
loope
xchg
repz
dec
push
mov
lcall
dec
hlt
xor
inc
and
cmpsl
dec
aad
jbe
adc
das
lret
jo
repnz
mov
addr16
stos
hlt
mov
fwait
push
inc
ss
mov
sbb
js
sbb
int
call
inc
dec
adc
in
or
and
mov
lret
mov
inc
xor
mov
imul
aam
cld
jmp
xor
add
sub
out
scas
popa
mov
enter
cmp
gs
repz
cltd
shrl
adc
ljmp
inc
mov
ds
ds
rclb
push
ret
scas
adc
inc
cmp
test
jg
ja
loope
or
popa
loope
adc
mov
or
jns
aam
inc
imul
sub
jge
mov
repnz
sub
xchg
daa
or
bound
adc
rcrl
pushf
push
xor
jns
js
sub
clc
fcoml
out
add
es
cltd
insb
pop
mov
std
nop
cmp
pop
push
mov
push
test
movl
mov
mov
scas
leave
int3
cltd
mov
fs
or
cmpb
push
push
or
sbb
or
sbb
or
inc
inc
dec
mov
pop
ja
push
pop
and
in
xchg
shrb
ljmp
and
push
gs
lods
popa
mov
xchg
mov
xor
mov
inc
mov
xor
sub
leave
cwtl
inc
ljmp
mov
testl
inc
sbb
fimull
fimuls
add
fstps
or
icebp
test
call
mov
fst
mov
and
in
negb
arpl
ss
xor
xor
enter
push
ret
pmulhuw
in
cmpsb
lret
mov
and
fldcw
enter
daa
loope
or
xor
ljmp
bound
pop
sub
adc
cmpsl
sub
popf
in
pop
in
cmc
ret
pop
lds
js
in
inc
inc
into
mov
pop
divl
leave
arpl
xchg
rclb
pop
ret
loop
sub
add
frstor
hlt
xchg
push
loope
fcmovnbe
ja
das
jmp
lret
lock
mov
stos
pop
repnz
js
xchg
jae
loop
cmc
dec
ficompl
bound
lret
mov
cmpsl
jl
ss
mov
int3
mov
xor
pop
jge
push
int3
mov
daa
pop
cmp
test
jge
pop
lods
outsl
add
subb
mov
mov
in
lahf
mov
sub
fisttpll
dec
add
sub
sbb
jecxz
mov
gs
mov
iret
push
paddw
jo
ror
repnz
mov
pop
lea
dec
inc
out
shll
sbb
and
mov
scas
lcall
jecxz
cld
jnp
mov
rclb
jbe
add
and
sbb
mov
jl
das
jmp
add
pop
int
cld
push
test
inc
sub
repnz
sarb
lock
and
inc
jns
pop
and
xchg
rcrb
inc
jecxz
and
enter
jle
mov
jne
sti
or
sbb
push
sbb
mov
iret
jne
sbb
movsl
test
xor
adc
in
loope
xor
imul
pop
ss
rcr
jecxz
add
mul
test
in
xor
jmp
scas
ret
jmp
int
xchg
push
scas
dec
xor
mov
mov
cmpsl
repnz
fwait
leave
jmp
or
cs
push
stc
sub
adc
lock
mov
clc
aad
leave
and
mov
orl
and
cmc
gs
and
xlat
xor
mov
xchg
shll
hlt
icebp
inc
xchg
lret
cwtl
push
ret
clc
jae
ja
xchg
shll
popf
sub
mov
adc
cmp
add
cmc
xlat
fnsave
rcrl
aad
mov
and
mov
or
adcb
push
jo
inc
xor
ja
rorl
add
les
hlt
std
and
fadd
inc
sub
mov
repz
cmpsl
shl
out
in
mov
add
mov
addr16
rorl
lcall
std
fdiv
xchg
test
mov
out
mov
sub
dec
inc
lret
test
enter
push
pop
call
and
cmc
nop
lock
into
jle
cmp
or
iret
fistpll
movsl
sbb
bound
sbb
mov
or
daa
sahf
sbbl
mov
jmp
xor
out
aad
insl
cmpsl
loopne
and
xor
hlt
adc
popf
push
xor
add
imul
out
fistl
xchg
int
nop
leave
inc
push
jne
xor
int
jle
pop
or
test
test
orl
or
xchg
sub
or
cs
push
js
mov
mov
fdivl
testl
add
xchg
cmp
std
jge
pop
or
movsl
movsl
cmpsl
adc
dec
mov
sub
push
or
popa
daa
ljmp
je
mov
rclb
push
mov
inc
fdivl
xor
add
xchg
fmul
fistpll
pop
or
lds
inc
lods
ret
movsl
inc
adc
fiaddl
mov
fwait
mov
adc
lret
into
ret
xchg
lock
mov
mov
cwtl
xchg
sbb
scas
fmull
push
lret
movsb
xchg
xor
in
mov
test
imul
das
or
cltd
in
inc
lcall
jle
lret
fwait
sbb
fidivs
cmpsl
in
sbb
fsubr
pop
jbe
jo
or
cli
xchg
ret
xchg
addr16
ret
cmp
int3
mov
stos
loop
int3
pop
mov
cmpsl
lcall
mov
jmp
jne
inc
sbb
arpl
loop
add
push
sarl
into
push
push
mov
ss
mov
jb
or
sub
xchg
xchg
or
movsb
add
jecxz
sbb
push
dec
or
lock
aas
or
fidivrs
shlb
jl
aam
add
scas
sub
stc
pop
and
xor
scas
pop
int
mov
fbstp
push
std
pop
or
movsb
xchg
pop
mov
sub
adc
dec
or
jmp
xchg
adc
xchg
repz
scas
in
and
xchg
ljmp
idivl
lods
loop
insb
cld
cmp
push
mov
push
in
adc
push
xchg
dec
inc
xor
mov
in
or
int
enter
in
dec
out
sbb
dec
jne
inc
inc
adc
mov
loope
push
pop
xchg
cltd
add
testb
adc
je
adc
mov
and
fcmovu
lret
adc
push
add
out
in
cmpsb
movsb
add
jl
dec
stos
xchg
rolb
in
mov
pop
dec
dec
push
call
add
mov
mov
or
stos
repz
stos
aam
inc
or
fldl
push
sub
lret
dec
sub
nop
jne
jle
push
or
sbb
test
cmp
lock
pop
pop
popf
and
mov
mov
lock
aas
mov
orb
sbb
imul
push
xchg
jns
stos
test
negl
stos
pushf
fidivs
mov
inc
xor
sbb
insb
call
mov
movsb
mov
mov
popf
pop
fistps
pop
lods
ret
daa
xlat
and
sub
lea
adc
and
lods
movsl
adc
inc
pop
pop
sbb
js
sbb
and
clc
out
push
daa
mov
es
test
ret
fildll
ficoms
cmp
dec
inc
in
push
xchg
adc
jl
inc
xor
jne
add
pop
push
js
out
and
or
xlat
std
cmp
xlat
dec
cwtl
std
out
ficoms
mov
sub
mov
xchg
enter
pop
jb
call
and
sub
bndldx
sbb
scas
lock
jl
sbb
jb
test
inc
pop
stc
outsl
in
mov
xor
cmc
lahf
mov
es
dec
stc
mov
adc
pop
sbb
test
xchg
xor
ds
xchg
sbb
out
sti
push
addb
inc
mov
std
les
ljmp
pop
fstpl
test
inc
jg
jno
rcl
bound
xlat
jns
mov
push
or
fnsave
icebp
int
fisubrs
pop
loopne
insb
cmc
inc
pop
cmp
adc
adc
add
push
stc
mov
adc
stos
mov
jg
test
stos
icebp
mov
std
push
adc
out
push
and
imul
test
xchg
jmp
into
push
sub
cld
jb
out
clc
jp
test
mov
into
jle
fxch
ret
cli
mov
mov
fcmovnb
test
add
add
repz
or
ret
fistpll
adc
test
sub
sub
inc
mov
das
sub
outsb
pop
add
int
and
pop
adc
lods
leave
int3
repz
insl
jns
out
repz
xchg
mov
not
movsl
cld
lcall
xchg
test
sub
sub
mov
fbstp
es
popa
cmp
ss
or
mov
je
pop
jge
jecxz
ret
ret
jnp
jb
test
or
repz
std
in
ffree
cmc
jne
inc
shll
jo
add
enter
push
dec
sarb
cmc
insl
jmp
push
mov
or
fisubl
mov
jo
push
mov
and
ret
aam
sbbb
decb
mov
js
fcomip
pmulhuw
std
pushf
movb
loop
jg
popa
jne
loope
cmpsb
movsl
mov
subl
lods
lret
jns
mov
inc
out
js
in
push
idiv
fldt
jmp
cmp
ds
out
push
inc
data16
enter
push
leave
pop
ja
pusha
pop
fldl
add
inc
mov
outsb
daa
sar
rcrl
or
jbe
lods
icebp
xchg
mov
loop
jne
mov
scas
in
stc
gs
popa
dec
test
push
xor
jecxz
xchg
repz
fwait
mov
clc
xor
cmp
shlb
in
ror
inc
loope
das
xor
stos
dec
aaa
stos
sbb
xor
pop
daa
xor
rolb
mov
loop
in
jecxz
test
or
mov
out
std
out
icebp
rclb
shrb
movl
dec
in
push
shr
test
mov
cmp
out
inc
add
mov
out
push
dec
cmc
cmc
sub
ficompl
cli
jp
cwtl
cmc
fisttpll
loope
cmc
cmpsb
add
or
call
xor
mov
lret
cmp
in
inc
mov
xchg
inc
std
push
std
sbb
jno
adc
mov
mov
stc
gs
xorb
imul
jl
ret
mov
xchg
mov
jg
shlb
ror
lret
cltd
push
dec
into
in
sbb
pop
xor
mov
icebp
leave
stos
and
ja
sbb
mov
dec
in
fbstp
adc
add
cmpsb
push
mov
push
lahf
addr16
adc
stc
jnp
lock
out
push
insl
in
lods
adc
sub
loop
cmc
cmc
add
aas
popf
cmc
push
adc
std
imul
xor
adc
movb
iret
shr
ss
pop
std
jp
push
jb
icebp
xchg
addr16
fucom
lock
cmpsb
fs
dec
les
mov
push
jg
mov
lods
fildl
faddl
sub
or
shlb
pop
in
mov
sahf
repnz
movsl
or
cmp
cld
outsb
ljmp
mov
adc
xchg
aad
gs
jecxz
push
adc
or
jge
lds
mov
leave
repz
or
test
mov
jns
shrd
lret
das
mov
pop
push
mov
mov
repnz
das
sbbb
push
add
jne
mov
lret
std
popf
sub
ret
stc
push
push
add
in
adc
mov
leave
pop
cli
sbb
stos
cmp
gs
hlt
out
jecxz
adc
sub
jp
xchg
inc
adc
sbb
cmc
repz
mov
sub
orb
stc
inc
stos
xor
and
call
lds
cli
test
out
jmp
stc
popa
pushf
mov
mov
jle
sub
mov
stc
nop
add
and
ljmp
fldenv
mov
cli
push
aaa
pop
mov
mov
jae
test
add
xchg
mov
mov
push
mov
sahf
test
or
cltd
in
push
es
cld
xchg
jp
daa
xchg
jp
lret
or
mov
push
leave
scas
hlt
movsb
nop
jl
in
in
xchg
xchg
mov
clc
and
in
movsl
mov
fisttpll
fs
lea
movsb
mov
and
sub
and
sahf
frstor
addl
in
jb
in
inc
imul
xor
in
cmpsb
dec
xchg
cmp
in
jbe
pop
in
mov
push
in
ret
sarl
clc
rcrb
lret
sbb
inc
pop
add
mov
pop
pop
das
flds
xor
adc
mov
test
icebp
or
mov
in
mov
xorl
or
jge
and
cmc
bound
ret
sahf
pop
sub
jae
dec
mov
hlt
sbb
add
and
dec
insl
mov
jmp
adc
loope
mov
inc
flds
outsl
int3
jo
jns
fsubl
out
sub
mov
and
insl
negb
mov
mov
add
cs
daa
std
add
xor
dec
xchg
or
pop
cmpb
xor
enter
iret
jns
jno
xor
fldl
jecxz
or
insl
add
sub
pop
adc
adc
std
js
add
jl
loope
adc
pop
inc
xor
jecxz
enter
inc
fisubs
loope
sti
aam
sahf
xchg
cltd
nop
adc
lret
mov
imul
add
xchg
sub
fisttpl
icebp
mov
std
jle
cmp
push
lods
stos
in
in
pop
outsb
stos
dec
movsl
jmp
push
mov
sahf
or
cmp
test
out
mov
lret
xchg
and
dec
test
jmp
lcall
out
jo
scas
repz
out
mov
push
cmp
adc
xor
and
add
xlat
in
dec
inc
add
cmp
mov
jg
lds
popa
inc
loope
cmp
test
xor
vaddpd
or
dec
lea
data16
xor
push
imul
mov
test
test
adc
mov
sbb
add
jae
pop
inc
or
xchg
ret
sahf
or
mov
stos
fiaddl
fwait
add
jae
ljmp
pop
or
in
mov
dec
popa
stos
inc
dec
adc
les
or
mov
sub
push
aaa
stc
call
outsl
outsb
sub
test
scas
movsb
mov
cmp
orl
mov
sbb
mov
inc
into
jmp
mov
push
jg
lahf
add
sbb
and
dec
lahf
mov
mov
cmp
daa
loop
and
test
sbb
mov
rcl
cmp
shrb
mov
insl
mov
jns
inc
fdivp
popw
outsl
cs
test
and
cmpsl
divl
push
inc
fdivrs
fisubs
lds
push
xor
les
sbb
jmp
test
dec
push
clc
xchg
pop
mov
inc
loope
cmc
cmp
jae
mov
xchg
lea
mov
sti
lret
lcall
mov
stos
int3
add
mov
out
les
xor
mov
out
jbe
sbb
stc
in
pop
int3
iret
les
or
aas
sbb
and
mov
push
push
dec
fs
mov
ret
adc
adc
fwait
sub
ljmp
add
cltd
scas
mov
sub
fsubr
mov
test
mov
pop
cmc
nop
fnstcw
adc
shll
push
sbb
jge
mov
rclb
mov
jle
outsl
mov
in
in
roll
sbb
jle
xchg
add
inc
test
xchg
and
test
jns
adc
loop
inc
pusha
sbb
xchg
outsl
sub
add
add
cs
stos
cltd
push
inc
mov
add
add
push
or
mov
clc
mov
sub
cmp
and
insb
add
pop
dec
pop
cmpb
and
das
movsb
mov
adc
and
pop
lret
pcmpeqw
int3
outsl
cmp
shrl
add
jbe
sbb
vshufps
xchg
leave
fwait
hlt
inc
repnz
sbb
std
dec
iret
jno
xor
loope
sub
mov
jb
dec
push
fldt
sub
or
mov
xor
sub
mov
lahf
mov
rcr
pop
dec
and
mov
lret
xorb
or
iret
sub
loopne
push
or
loope
pop
xor
adc
mov
add
loop
xor
xchg
inc
jae
scas
push
rcrl
movsl
icebp
jnp
or
dec
sub
idiv
mov
cmp
or
cmp
loop
lret
out
mov
sbb
push
stos
or
pop
mov
cmp
inc
incb
jp
lcall
loope
ret
jno
popa
bnd
push
loope
repnz
push
mov
xchg
add
clc
repz
xchg
cmc
clc
fcos
add
lods
cs
mov
aas
add
movsb
adc
inc
cltd
add
bound
push
inc
daa
lahf
push
cmpsl
mov
pushf
adc
inc
rol
sbb
rcl
sub
mov
shld
nop
add
rorl
clc
sub
rcrl
jo
xor
push
jmp
scas
push
test
add
repz
std
inc
add
lds
mov
movsb
divb
xchg
outsb
out
cmp
scas
or
mov
in
movsl
hlt
mov
stos
xor
xchg
jne
leave
jl
js
adc
dec
popf
jb
push
aam
add
dec
inc
aaa
xor
or
sbb
addr16
outsb
mov
addr16
notl
mov
sub
sbb
jns
shlb
inc
scas
call
repnz
xchg
ljmp
jae
ficoms
cmp
mov
imul
sbb
enter
aas
fldt
shll
leave
in
ljmp
scas
stos
push
inc
jmp
sti
cli
insb
jecxz
jb
pop
aad
enter
test
fwait
mov
mov
icebp
and
out
inc
dec
xchg
adc
add
mov
int
cmp
or
call
cmp
bound
inc
mov
pop
shl
mov
pop
jns
repnz
lret
jbe
cmp
inc
push
outsl
jbe
and
pusha
jmp
xchg
fwait
push
das
icebp
cvtpi2ps
stos
pusha
scas
scas
jp
out
addr16
xchg
pop
aas
loopne
sub
test
mov
dec
inc
mov
cmpsl
xchg
push
cld
addl
xchg
lea
loope
icebp
cmp
ljmp
jo
xor
jmp
out
dec
das
and
lea
jge
jnp
sahf
lds
fdivrp
inc
sbb
push
and
pop
mov
cs
lock
dec
aam
sarb
lcall
fistpll
out
xchg
add
js
fsubp
mov
mov
cmp
loop
pmaddwd
xor
jg
js
adc
pop
dec
out
dec
mov
mov
stos
mull
xchg
cltd
addl
loope
mov
push
dec
pop
test
push
dec
repnz
jp
cmp
in
in
in
push
mov
sbb
out
in
xor
repnz
orl
sbb
push
mov
les
fbstp
jecxz
push
in
mov
or
pusha
or
and
push
jne
data16
jge
into
enter
pop
scas
sti
les
jmp
lret
ffree
cltd
inc
daa
movsl
mov
push
aaa
dec
sub
pop
pop
xchg
xor
test
mov
push
adc
mov
stc
mov
lret
cmpsb
push
mov
dec
push
mov
imul
and
add
xor
lods
xchg
and
and
fstpl
and
pop
add
fwait
cmc
cwtl
or
lods
test
loopne
dec
inc
pop
in
sub
popf
test
cs
mov
sub
inc
nop
xchg
loopne
jo
sti
int
fisubrl
les
fld
ljmp
test
bound
ret
lock
repz
cmp
sub
push
stc
in
icebp
mov
enter
cmp
inc
push
add
in
cli
sbb
hlt
test
push
cmp
jae
mov
jne
push
test
fwait
xor
out
imul
je
insb
mov
negl
push
movsb
jns
sahf
out
negl
xor
push
les
cmp
ja
push
out
dec
fs
shll
clc
jb
inc
cmp
mov
loope
xor
mov
inc
push
cs
loope
xchg
adc
sar
stos
mov
fnclex
addr16
int3
add
divb
ret
push
jne
or
mov
jge
jge
loope
loope
push
mov
data16
or
hlt
lcall
and
xchg
and
add
stos
mov
aas
div
lock
in
call
inc
in
test
and
mov
aam
mov
mov
mov
ficompl
fwait
scas
inc
and
lret
xchg
pop
dec
and
sub
mov
insb
enter
sub
in
popa
inc
ror
int
insl
mov
repnz
inc
or
fcmovb
shll
notl
fwait
mov
icebp
cli
push
mov
xor
dec
out
jg
jno
aam
inc
negb
push
fisttpll
jge
jge
imul
sbb
mov
cmp
push
add
xchg
ja
aam
imul
aam
adc
cmc
inc
inc
add
xchg
push
push
sbb
jecxz
mov
jle
dec
mov
adc
mov
adc
enter
in
adc
notl
xor
cld
test
push
push
stos
fcomip
imul
insb
xorb
loopne
jns
pop
mov
jno
int3
sub
outsb
ljmp
xchg
jmp
cmp
jb
xor
pop
sbb
push
mov
shll
jge
ret
or
ds
cmc
and
jg
push
jecxz
ljmp
inc
or
mov
sub
xchg
sbb
xchg
jne
pop
jbe
ficoml
jmp
std
jbe
add
adc
fnstenv
fmuls
sub
xchg
jmp
jl
push
jb
ja
mov
and
fcom
add
repz
pop
lea
xchg
mov
std
jnp
mov
dec
push
pop
sahf
test
pop
testb
test
cmc
cmp
xchg
mov
mov
xor
mov
dec
je
cmp
push
mov
data16
and
fnstenv
or
sbb
iret
push
dec
mov
adc
add
sahf
test
call
ljmp
lods
or
push
lods
add
cltd
adc
data16
ret
loop
jno
testb
nop
mov
dec
repnz
lcall
add
add
fstpl
out
adc
popa
dec
fsubr
add
mov
xor
lods
in
and
sbbb
sbb
cmp
in
mov
sahf
movsl
mov
scas
shll
test
clc
jmp
sbb
lret
sbb
fsts
pushw
bound
jo
cmp
stc
cmpl
cmc
cmp
outsb
jg
cmpsl
and
mov
pop
mov
jnp
cmpsb
jne
xor
inc
lds
jp
mov
dec
ret
add
mov
jmp
jb
pop
inc
pushf
xor
iret
repnz
lds
mov
xor
sbbb
push
hlt
cmp
mov
ja
pop
xchg
xchg
fisubrs
addr16
or
call
mov
xor
int
js
gs
sbb
rcrb
xor
out
fisubl
mov
jmp
loope
popf
scas
fisubrl
push
push
dec
mov
imul
dec
pushf
insb
enter
mov
lcall
mov
ja
lret
mov
sbb
jl
sub
push
or
xchg
lret
out
ljmp
lods
pop
inc
mov
mov
or
je
and
lods
dec
or
pop
pusha
pop
inc
into
add
jne
xor
inc
push
in
or
imul
push
lock
in
sub
js
inc
repnz
orl
xor
lds
or
icebp
mov
xchg
stos
pusha
xchg
mov
inc
lea
hlt
je
in
hlt
dec
jmp
into
fnstsw
sarl
mov
or
shlb
insb
cmc
hlt
xlat
pop
push
mov
push
stc
std
test
cmp
mov
lds
or
shll
and
outsb
aaa
jnp
jo
jne
xchg
fwait
fwait
and
popa
repnz
in
sub
mov
dec
out
push
mov
shlb
rclb
negl
fisttps
popf
pop
jmp
mov
loope
jae
dec
mov
add
pop
push
push
insl
jno
mov
inc
imul
cmp
mov
mov
xchg
aam
mov
in
and
dec
sahf
cmp
adc
xor
adc
cmp
sahf
stos
scas
testl
or
ret
movsb
add
out
pop
mov
pushf
repz
call
jle
dec
mov
mov
loope
mov
pop
fisubs
inc
cltd
mov
loopne
mov
inc
int
pop
clc
sub
mov
mov
push
mov
into
loop
insl
jecxz
mov
iret
mov
xchg
adc
test
cmc
in
mov
jge
jns
xor
subl
add
leave
xorl
int
enter
je
decb
adcb
insl
push
xlat
xchg
dec
enter
imul
sahf
mov
pop
or
inc
sbb
aad
add
xchg
cmpl
jmp
outsb
cmc
shrb
inc
xor
movsb
jo
xor
inc
stos
pop
mov
and
mov
in
mov
adc
outsl
inc
or
mov
cs
popa
movsl
inc
cli
push
pop
gs
mov
jl
inc
es
out
mov
or
loope
xor
and
jecxz
faddl
test
repz
insb
add
mov
mov
and
dec
imul
out
ret
adc
sarb
int3
dec
cmp
std
add
out
stc
and
mov
xchg
xor
out
stc
stc
lahf
xor
mov
lock
lock
ret
test
pop
mov
mov
outsl
lret
jl
outsb
xor
hlt
sarl
or
fisubs
or
mov
mov
iret
ret
jb
fisubs
cmp
aas
cmpsb
jne
gs
orb
in
cwtl
push
xor
dec
xor
shlb
dec
in
push
xchg
in
add
scas
leave
addr16
repz
push
cmp
mov
fst
insb
and
dec
push
xchg
loope
and
push
inc
mov
xlat
repz
mov
test
fildl
dec
jecxz
nop
dec
adc
in
jp
sbb
test
leave
dec
and
sub
push
jns
nop
xorb
repz
in
cmc
in
clc
sub
sub
pop
insb
cmpsb
ss
movsb
pop
in
out
or
jb
in
out
movsb
cmp
outsb
insb
sti
mov
lds
sbb
fbstp
pop
pop
lahf
sbb
icebp
or
mov
jmp
incb
mov
add
nop
xor
test
lret
scas
jo
jl
push
inc
cmp
pop
arpl
mov
mov
into
pusha
xchg
push
add
jecxz
rol
xorb
xchg
cmp
add
test
pop
xlat
aaa
out
inc
call
sbb
jno
sbb
inc
and
inc
bound
adc
test
lods
mov
movsb
mul
shlb
jo
dec
pushl
jmp
gs
dec
pop
mov
jp
lods
and
sub
movsl
es
xchg
popf
mov
ljmp
and
add
dec
mov
add
imul
fstpt
loope
insl
movsb
hlt
stos
mov
insb
loope
inc
jb
aaa
mov
mov
mov
mov
jecxz
aas
jp
mov
or
fmull
push
jno
sub
gs
test
cmp
shl
aas
ja
mov
les
push
and
loop
int
jmp
out
insl
aaa
jno
mov
sub
stc
in
daa
mov
inc
iret
test
pop
mov
ja
ret
iret
cmpsb
cs
mov
dec
repnz
add
dec
mov
cmp
popa
mov
inc
mov
je
je
hlt
dec
jb
adc
enter
xor
adc
xor
xor
adc
repnz
stc
inc
mov
rol
mov
jecxz
sub
lds
mov
out
cmpsl
mov
push
mov
in
mov
call
or
mov
adcb
jecxz
ret
ds
push
add
jne
ljmp
insl
push
inc
xor
mov
or
mov
pop
inc
adc
out
xor
stc
push
pop
enter
out
clc
fs
enter
not
adc
add
mov
cmp
xor
or
into
icebp
daa
into
add
xchg
pop
cmp
cmp
ljmp
insl
scas
aas
push
in
in
ss
jecxz
scas
push
push
cmp
sbb
stc
stos
insb
mov
pop
aam
ja
mov
mov
mov
dec
adc
test
lcall
inc
ds
pop
jl
add
push
stos
mov
inc
int
add
in
jns
js
jle
push
shrb
in
imul
push
int3
cld
adc
sbb
cmp
out
pop
cs
fisubrs
aad
add
adc
xchg
addr16
xchg
sub
dec
lock
popf
sbb
sti
mov
inc
insl
pop
cmp
int3
notb
lock
sbb
adc
ss
loop
daa
and
leave
arpl
repz
hlt
cltd
sbb
xchg
mov
xlat
ja
cld
out
xchg
sbb
lods
push
movsb
adc
addl
into
not
in
add
pusha
pop
loopne
jno
out
and
inc
dec
pop
out
inc
xor
in
xchg
push
lcall
mov
ret
out
push
push
cmpsb
enter
cmc
mov
jb
inc
or
aad
sub
call
leave
out
test
push
out
shl
mov
lods
xchg
rcll
enter
mov
and
scas
sbb
inc
movsl
jno
inc
lahf
mov
fcomps
dec
or
jo
cwtl
xor
or
imul
dec
lret
loope
sbb
gs
sbb
mov
jle
in
ret
in
and
std
jb
leave
and
xchg
xor
icebp
into
inc
movsb
mov
ljmp
out
movsb
imul
test
xchg
add
rcll
pop
cmp
sub
pop
push
mov
in
movsl
mov
into
ret
or
lcall
lods
pop
adc
mov
push
push
jmp
in
jno
divb
iret
and
imul
rcrl
inc
cld
and
sahf
pop
rep
jge
jge
jns
fsts
arpl
xlat
xlat
mov
in
cmpsl
int
add
mov
imul
mov
icebp
ror
jne
mov
aas
in
mov
cmpsb
lret
fidivrs
and
xorb
cwtl
popl
dec
cmpsl
daa
repnz
cli
jmp
test
movsl
int3
adc
push
jge
pop
adc
mov
inc
sub
jl
mov
and
or
insb
push
in
adc
mov
xor
mov
popa
loopne
cwtl
out
mov
jnp
les
or
int3
jne
mov
mull
sbb
decl
cli
mov
push
in
ss
cmp
test
add
in
das
dec
pusha
mov
cs
inc
mov
decb
inc
icebp
pusha
pushf
sbb
in
ljmp
sbb
je
pushf
pop
and
pushf
fnstsw
sbb
mov
jo
mov
int
lret
dec
ss
push
or
in
popf
jmp
nop
repz
in
xor
lods
ret
movsb
pop
and
mov
push
push
test
imul
xchg
sub
aam
xchg
push
fstpl
xchg
in
mov
or
movsb
mov
jl
hlt
and
pop
out
cmp
outsb
or
addr16
mov
dec
mov
sub
fisubrl
orl
mov
mov
push
lods
sarl
xor
sti
movsl
es
int3
adc
xchg
mov
lock
jp
out
jne
fidivl
icebp
sti
into
adc
rorb
mov
mov
sub
cmpl
inc
pop
sub
jns
cli
mov
loop
outsb
dec
insb
sub
daa
imul
imul
test
int
mov
push
in
enter
mov
mov
lret
adc
cmpsb
cmp
lea
insb
push
inc
adc
push
mov
jecxz
sbb
mov
add
and
and
imulb
mov
cltd
lret
call
arpl
sti
xor
dec
sarl
add
fnstenv
in
sub
cld
mov
jo
add
push
out
daa
and
xlat
fnsave
mov
ss
inc
mov
bound
icebp
mov
fs
mov
xor
xor
cli
xchg
sub
test
ds
loop
cli
mov
jle
cmpsb
movsb
inc
repnz
jmp
in
notb
mov
out
mov
fnstcw
pushl
mov
inc
test
push
das
mov
mov
les
or
jo
mov
test
fdivrp
cmc
lods
out
push
ljmp
bound
rep
test
inc
movsb
test
mov
js
cwtl
jmp
jae
jno
out
push
lahf
add
cltd
outsl
movsb
push
imul
movsl
in
in
adc
in
cld
mov
xor
add
les
roll
mov
arpl
lret
xchg
enter
adc
inc
dec
sete
cmp
int
push
jge
inc
xor
psubsw
loopne
jae
out
std
pop
xlat
in
xchg
mov
or
outsb
and
or
push
mov
ljmp
pop
sbb
mov
lds
and
sbb
imul
sbb
orb
shl
sub
dec
mov
shlb
bound
insb
jns
bound
inc
es
fsub
rcll
cli
std
lds
mov
das
in
subb
lods
lods
call
pushf
adc
or
mov
xor
popf
cmp
in
sbb
out
in
mov
in
pop
cmc
insl
shrl
adc
out
fisubrl
cmp
test
shll
xor
sub
dec
insl
sub
clc
push
cld
mov
ja
xor
sbb
mov
add
imul
int
inc
jns
cmp
cwtl
cld
mov
inc
rclb
jno
mov
jb
icebp
fwait
sbb
adc
scas
sti
xchg
cmp
int
pop
jo
stos
and
mov
nop
imul
xchg
pop
xlat
xchg
mov
add
xor
scas
hlt
insb
and
or
bound
loope
dec
lods
inc
ret
sbb
fidivs
xorl
daa
lods
dec
xchg
lock
sbb
scas
std
les
cmpsl
or
pop
jns
mov
or
mov
pop
test
jg
xchg
adc
in
push
shrl
fs
shrl
test
add
cmp
cmpsb
cmp
inc
cwtl
cmp
cmpsb
mov
repz
jnp
popa
jg
out
jecxz
movsb
xchg
xor
jge
add
add
dec
lcall
xlat
xor
dec
dec
into
aam
and
out
gs
mov
xor
faddp
int3
outsb
dec
mov
sub
pop
cld
lret
push
aad
aad
pop
jae
bound
pop
mulb
bound
add
xlat
lea
mov
sub
add
cmpsb
xor
adc
mov
stc
and
xor
xchg
lods
icebp
gs
repz
hlt
loopne
imul
mov
xchg
mov
daa
ja
add
mov
pusha
dec
mov
pop
adc
cltd
pop
mov
push
add
lret
xor
sahf
pinsrw
jmp
add
jb
jmp
imul
stos
or
xorl
pop
ljmp
dec
imulb
aad
lret
and
inc
notl
mov
mov
mov
mov
inc
pop
test
stos
sarl
xchg
inc
mov
ljmp
push
mov
xchg
lret
fisttpl
out
ljmp
jae
pop
mov
rolb
xor
add
bound
mov
jg
fimull
or
mov
xchg
es
loop
add
adc
test
ja
mov
decb
mov
loopw
cld
rcrl
jl
push
stc
push
pop
movl
cmp
mov
loopne
and
adc
mov
cmpsl
xchg
sbb
jl
jno
ret
clc
call
jb
aas
idivb
inc
lret
pop
leave
into
cmpsl
cmpsl
pop
inc
mov
xor
pop
xor
popf
pop
dec
les
das
mov
decl
push
xor
insb
or
push
ljmp
mov
idiv
xchg
insl
push
jno
test
es
jo
loope
add
pop
push
mov
test
test
add
xchg
das
jno
popa
iret
push
push
sbb
rcl
inc
pop
xor
inc
int3
ja
adc
data16
clc
insl
scas
out
mov
mov
adc
or
loope
lret
jne
icebp
das
mov
pop
rolb
mov
das
jno
pop
cmp
jbe
popa
xchg
pop
and
mov
mov
insb
dec
les
scas
std
out
add
and
add
shlb
cli
dec
pop
sarb
outsb
add
ret
ret
mov
ja
fbld
jmp
sub
fbstp
pop
mov
jns
fsts
fdivrl
fidivl
scas
out
mov
mov
xchg
mov
cmp
jae
lea
stos
cli
lret
xchg
or
sub
ja
mov
xchg
and
cmp
mov
gs
cli
xchg
mov
adc
mov
mov
jno
mov
adc
jbe
pop
sbb
or
adc
addl
aaa
cli
mov
mov
lods
sbbl
cmp
pop
lret
and
xchg
test
sbb
pop
enter
mov
jecxz
mov
sub
jg
adc
js
sti
rcll
sub
popa
aam
call
stc
jno
loopne
ljmp
dec
jmp
rorb
mov
jb
call
and
test
adc
xchg
sahf
mov
les
pop
or
mov
add
lods
in
pop
dec
int
push
fwait
icebp
jnp
popf
outsb
and
js
mov
int3
mov
and
pop
mov
insb
mov
orl
mov
or
sub
loop
inc
js
mov
sti
and
hlt
popf
xor
mov
je
sbb
das
in
pop
adc
repnz
int3
idiv
daa
xorb
dec
out
cli
mov
inc
jae
mov
lds
sub
inc
fsubrs
enter
xchg
lret
fnsave
xor
int3
cld
and
sub
cmc
mov
movsb
shll
pop
inc
push
adc
test
out
mov
xchg
cs
push
in
cwtl
cmc
jbe
add
sub
fiadds
pop
lea
popl
test
lock
add
nop
adc
flds
sbb
mov
cmp
mov
add
sbb
stc
cwtl
lock
and
dec
or
es
js
lea
dec
lret
test
outsl
les
loop
inc
repnz
adc
pop
mov
subb
ljmp
std
inc
sbb
dec
or
lock
scas
mov
xor
cmp
jmp
jno
std
jbe
push
dec
aas
xchg
mulb
or
je
xorb
dec
xor
loope
lock
fldl2t
pop
in
dec
mov
into
outsb
lret
add
mov
mov
push
mov
mov
imulb
xor
rorl
jne
inc
scas
push
pop
push
mov
je
js
pop
xor
into
andl
lods
scas
ror
dec
xor
cs
out
or
sbb
mov
adcb
lcall
add
inc
jmp
jmp
cmpsl
daa
push
ret
inc
cmp
sahf
push
insb
sub
and
sbb
stos
sub
ret
xchg
mov
loop
loope
dec
mov
mov
in
fwait
dec
pop
pushl
mov
mov
fidivl
lods
pop
mov
cli
sub
pop
ret
add
or
or
pop
sbbl
sub
mov
mov
popa
daa
xor
js
cmpb
sbb
jmp
inc
fs
sub
xor
shll
or
jne
adc
mov
sub
pop
bound
scas
cmpb
sub
lret
pop
mov
insb
jmp
shlb
loope
sbb
xor
loope
movsb
pop
jnp
lret
lods
mov
int3
rolb
pop
bts
dec
push
push
dec
cmpsl
cs
orb
stos
inc
bnd
rclb
inc
sub
adc
cmp
inc
je
mov
pop
ljmp
call
jbe
lcall
pop
es
push
jmp
subl
notb
aaa
or
xchg
subl
cmp
fstpl
ss
cmp
popf
lahf
mov
adc
push
mov
xor
loope
aas
cli
inc
fildl
into
cmp
mov
or
das
push
xchg
mov
repz
in
push
cwtl
rorl
lods
mov
loope
roll
icebp
push
mov
es
jp
sbb
rorl
out
mov
lods
out
gs
shll
int
adc
xor
jno
sub
mov
xlat
jge
pop
add
popa
sub
cs
add
ja
iret
shl
test
ret
inc
fstpt
cmpsb
ret
insl
std
push
sbb
and
fdivs
movsl
cmp
and
jle
add
insb
add
out
stc
add
rcrb
roll
mov
decb
fildl
mov
mov
inc
add
xchg
lcall
sbb
daa
jecxz
testl
mov
fsub
inc
dec
sub
loop
jmp
fxam
push
stc
dec
xor
jo
or
sub
and
cmp
xor
sub
or
push
sbb
sti
mov
pop
fadd
push
bnd
or
out
les
stc
jne
je
repz
orl
mov
add
rorl
push
inc
xchg
sub
outsl
imul
in
add
test
lret
mov
dec
insb
xchg
daa
mov
mov
and
pop
cmpsb
repnz
pop
dec
cs
add
and
mov
in
sbb
addr16
push
mov
sub
loope
into
dec
add
ficomps
cs
adc
stos
jb
mov
shrl
mov
push
test
sub
fdivp
mov
ret
dec
cmp
std
lea
jae
adc
mull
sbb
mov
aas
dec
adc
cmp
jge
cmp
cs
cmp
jb
mov
push
fldt
inc
dec
xchg
jne
imul
push
ds
scas
outsl
jae
aaa
mov
mov
in
mov
dec
cmpsb
or
jecxz
movsb
sub
jge
mov
dec
mov
int
ljmp
pop
repnz
pop
pop
arpl
movsb
cs
sub
jge
push
and
dec
sbb
pop
fwait
mov
clc
iret
arpl
add
out
xchg
fwait
or
push
and
push
and
sub
leave
shlb
out
cli
xor
mov
xchg
and
adc
sub
push
repz
inc
cwtl
add
cmp
sub
mov
daa
sub
and
scas
sbb
aad
dec
adc
gs
xchg
mov
inc
mov
mov
lods
or
pop
fcoms
dec
push
mov
iret
mov
sbbl
cmp
mov
lret
jae
mov
aas
dec
outsl
xor
in
daa
pushf
fidivrs
ret
push
dec
jl
cld
loop
testb
pop
sbb
jno
into
dec
aaa
and
int3
fs
xor
in
aaa
push
inc
cltd
call
sub
cli
push
subb
cltd
fiadds
mov
ss
orb
les
int
xor
and
in
scas
xor
lea
sbb
aaa
dec
jmp
cld
jae
sub
js
popf
add
push
mov
iret
or
dec
repnz
lahf
jbe
push
icebp
or
xchg
push
adc
cli
xchg
lahf
mov
jns
xor
sub
pusha
pop
and
mov
push
test
outsl
lds
mov
xor
adc
insl
cli
data16
mov
inc
xchg
or
aam
bnd
pop
in
mov
ret
push
pop
pop
cli
push
ds
shrl
jne
xlat
fisttpll
icebp
jno
push
xor
push
or
fbstp
out
mov
out
mov
push
or
stc
pop
dec
fnstenv
into
insl
mov
xchg
daa
aam
mov
jo
sahf
mov
in
add
arpl
dec
aas
mov
mov
scas
inc
xchg
mov
test
test
xchg
sbbb
inc
in
jnp
ljmp
sbb
or
in
int
lret
fdiv
in
mov
cmp
das
adc
mov
dec
fwait
mov
lds
orb
les
negl
sbb
dec
mov
cmc
inc
gs
fcmove
cwtl
and
ja
ljmp
icebp
fs
bound
sbb
clc
lock
out
icebp
cmp
or
cld
add
insl
loop
ret
mov
iret
inc
fwait
leave
and
std
sti
mov
test
push
out
and
jbe
repnz
mov
push
pop
push
xor
popa
sub
fistl
or
mov
cld
add
sub
cmp
adc
mov
adc
fistps
je
push
bound
jl
popa
movsb
dec
xchg
es
mov
mov
dec
aas
daa
cli
lahf
imul
or
sbb
mov
fdivrs
jno
push
fwait
jo
jae
out
std
jge
gs
js
rcrb
mov
loopne
lock
test
add
sbb
cmp
adc
ljmp
rorb
xor
mov
mov
mov
mov
je
jg
ja
loope
sub
inc
jbe
bound
leave
jnp
ret
lcall
adc
inc
icebp
cs
add
lock
lret
and
pop
test
xchg
sbb
jns
jns
out
xchg
add
loop
bound
mov
pop
or
subps
mov
mov
push
jg
fwait
inc
outsl
mov
ja
fs
sub
sbb
mov
sub
mov
jmp
xchg
in
nop
cmp
mov
or
xchg
int
push
xchg
mov
cwtl
loop
cwtl
ds
jg
mov
vprotb
sbb
mov
pop
or
sti
notb
out
sti
aad
popa
mov
int
add
push
sbb
mov
adc
jns
add
repnz
sahf
lds
push
lods
adc
push
inc
shlb
push
dec
add
inc
stc
out
or
aaa
push
enter
push
jno
lds
adc
out
scas
xchg
loope
lods
repz
lahf
scas
es
inc
les
popa
iret
xor
add
pop
and
mov
in
cwtl
mov
cwtl
in
or
sub
jne
mov
test
xchg
xchg
in
xor
jmp
sbb
lock
adc
and
xchg
adc
xchg
cmc
push
hlt
push
mov
and
int
xchg
xchg
pop
lret
sub
repnz
ja
sub
add
sub
inc
sbb
jo
ss
mov
push
lret
jae
push
lods
dec
push
scas
adc
loope
jb
lret
cmpsl
push
imul
aas
xor
bound
mov
push
aas
mov
jge
sbb
and
stos
xor
outsb
dec
xchg
fisttpl
jecxz
in
xchg
pop
out
clc
add
inc
ror
xor
mov
sahf
xchg
daa
mov
sbb
pop
or
dec
push
ss
div
popa
push
aam
cmp
sbb
add
jge
cli
adc
adc
sbb
leave
pushf
adc
bound
xor
push
mov
xlat
test
loope
add
mov
pushf
ja
inc
je
jmp
pop
xor
pop
andl
or
out
pop
adc
notb
mov
inc
mov
xchg
xor
dec
mov
mov
xor
or
dec
push
dec
pop
out
loop
test
mov
psllq
addl
xor
add
icebp
and
or
popf
push
gs
add
mov
rcl
leave
pop
pop
ljmp
sarl
test
push
aas
jle
not
add
jae
mov
or
out
lcall
sbb
fstpl
push
outsl
dec
mov
out
ror
pop
jae
jb
jno
pusha
pop
sbb
mov
cmp
fwait
ret
xchg
stos
xor
mov
or
push
cwtl
mov
xchg
add
pusha
fs
xor
or
xchg
mov
jg
pop
call
lods
mov
les
scas
aam
adc
sti
les
test
call
adc
ljmp
popa
into
or
sti
and
push
jne
and
inc
scas
dec
test
pop
mov
lret
insb
por
xchg
mov
icebp
shl
jg
pop
mov
mov
ret
in
pop
xchg
fs
lret
nop
test
push
jne
and
mov
cwtl
loope
and
mov
inc
xchg
insb
ret
outsl
xor
mov
jl
xor
outsl
add
pop
cmp
iret
cmpsl
gs
xchg
aaa
cmp
pop
sbb
pusha
sub
add
dec
jb
cmp
pop
in
fisubl
and
addb
popa
xchg
adc
adc
adc
inc
ret
push
fsub
aam
lds
test
js
stc
mov
insl
jne
inc
out
lcall
in
in
inc
and
mov
inc
int
adc
sbb
loope
outsb
psllw
xlat
jge
adc
decl
das
dec
das
push
outsb
lds
jno
popf
cmp
test
jmp
insl
imul
mov
movsl
sarb
lea
test
popf
push
cmpl
lret
jo
outsl
mov
aam
fcoms
cmc
xor
dec
mov
nop
out
jmp
rol
or
lds
popa
mov
jo
and
dec
sarb
mov
xor
arpl
jb
fmull
and
lret
rep
push
mov
xor
ds
rcrl
mov
outsl
mul
enter
hlt
jg
and
rorb
jbe
sbb
pop
aam
stc
lods
cmp
fsub
sbb
or
stos
in
xchg
rcrl
in
test
pop
stos
jbe
xor
lcall
xchg
mov
test
std
movsb
stos
ss
adc
add
stos
or
mov
jo
push
fwait
mov
lods
and
lods
jne,pt
xor
mov
inc
jmp
cs
mov
and
gs
jle
sbb
loope
push
daa
lahf
scas
js
pop
lock
fadd
and
popa
iret
popf
xchg
inc
popa
fisttpl
sub
in
jne
mov
jns
cmpsb
push
cmp
add
mov
hlt
pushf
sub
or
dec
jne
jge
jle
pop
cmp
xchg
fcmove
push
in
aaa
and
xchg
pushf
pop
fnstenv
and
dec
jno
popa
insl
fprem1
push
mov
lcall
out
insb
in
jge
mov
mov
outsb
mov
dec
mov
pop
pusha
xchg
lret
jmp
frstor
in
inc
cld
inc
fcmovbe
mov
ret
lock
lcall
mov
std
insb
mov
outsl
imul
in
mov
jle
lahf
xor
sub
mov
push
sahf
mov
jb
push
and
in
jno
popa
xor
cwtl
ret
jo
and
movsl
lods
or
or
jp
loope
and
test
mov
mov
data16
sbb
imul
bound
hlt
cmpsb
mov
dec
cmp
in
push
ds
xor
push
nop
push
add
sbb
push
insb
mov
int3
pushw
mov
cwtl
out
xchg
scas
insb
pop
shlb
sub
fimuls
jns
cld
stc
cwtl
mov
loope
in
xchg
cmp
jmp
pop
xchg
mov
fsubl
fsubs
hlt
add
mov
mov
fdivrp
bound
lods
push
xor
jno
pop
push
or
fcmovnbe
fwait
std
or
inc
lret
loop
rclb
jmp
adc
repnz
xchg
mov
push
lret
cmp
test
mov
xor
xlat
and
test
push
loop
lds
sbb
mov
out
cmp
lret
jne
push
ret
mov
in
sub
push
popf
add
jnp
xchg
push
or
jmp
or
loopne
xchg
jno
sub
jecxz
xor
cmc
sbb
pushf
or
sbb
aad
js
cld
jl
mov
push
mov
pushf
enter
mov
cmpsl
mov
xchg
cmp
add
jo
loop
orl
mov
sub
jmp
dec
push
sub
scas
jp
mov
mov
push
int3
lock
cmp
cmp
push
or
movb
mov
ljmp
xchg
imul
mov
test
ret
out
test
push
leave
xor
mov
xchg
pop
xchg
mov
fcomps
push
adc
mov
inc
xchg
cli
nop
lahf
inc
mov
dec
fisubl
cli
fnsave
dec
repz
les
jbe
subl
jno
push
lret
ret
dec
jo
adc
mov
cmp
clc
mov
add
ret
clc
lret
xchg
lods
jl
lret
cmpsb
adc
popf
sub
or
roll
popa
fs
dec
lea
testb
and
mov
mov
xor
lretw
push
sub
or
cltd
pop
popa
inc
mov
testl
sbb
inc
cmpsb
sti
out
xlat
test
dec
pop
push
leave
ja
xchg
imul
jg
or
xor
cmpsb
leave
jno
data16
fs
inc
sub
and
xchg
xor
into
xchg
lahf
xchg
rcrb
das
push
sti
inc
fsubrs
or
cmp
ss
inc
dec
shll
jmp
mov
and
xorb
jmp
cmpsb
add
mov
inc
clc
mov
dec
mov
fstps
fcomps
mov
pop
sub
aas
pop
orb
das
mov
cmp
xor
add
and
out
and
push
in
insl
repz
popa
pop
mov
rol
out
dec
mov
dec
cltd
imul
stos
lcall
lret
aaa
int
mov
ffree
xor
sti
jl
imul
xchg
sbb
in
outsb
dec
pop
mov
imul
pop
xchg
mov
loop
xchg
loopne
movsb
jae
in
ret
gs
ljmp
clc
out
jmp
ret
push
jmp
jle
mov
sub
in
bound
and
adcb
lock
outsb
test
add
arpl
fsubrp
cli
int
sbbb
xor
and
loope
repz
in
out
and
mov
cmp
xchg
popf
lret
mov
xchg
pop
mov
fldl
fcoms
out
lds
mov
inc
les
add
pop
xor
pop
stos
leave
push
fs
xchg
mov
loop
js
movsb
je
add
mov
test
xor
push
leave
popf
dec
jmp
std
mov
lods
in
mov
cmp
fiadds
push
iret
cmp
rclb
out
test
in
insl
js
popa
mov
jo
mov
sbbb
mov
cmp
lea
inc
xor
mov
jecxz
inc
push
into
push
mov
out
mov
iret
lcall
jecxz
mov
sahf
cli
rcll
adc
es
daa
xchg
roll
jae
incb
outsl
repz
gs
push
and
fcoms
xchg
out
insl
push
imul
jmp
push
in
adc
mov
xchg
movsl
jmp
push
test
push
jmp
xor
sub
jp
in
arpl
hlt
jg
scas
pop
shlb
lea
xchg
test
leavew
loope
cmc
lret
push
pop
dec
sub
std
xorl
daa
fs
inc
and
insl
addr16
lret
pop
cmp
cmp
dec
loop
aaa
das
stc
and
jae
adc
and
mov
jo
jnp
sbb
sahf
bound
imul
dec
fsubrp
sub
jp
cmp
xchg
fsubrs
xchg
mov
pop
insb
dec
in
divl
inc
icebp
xor
xor
sbb
jle
fwait
inc
and
adc
xorb
or
fmull
lcall
inc
cmp
data16
mov
sahf
sub
mov
fxam
sub
or
bnd
loope
or
nop
pusha
not
mov
xor
sub
cmp
and
cmpsl
iret
aad
mov
loopne
test
rorb
leave
aad
or
mov
pxor
inc
xor
lea
jle
movsb
push
inc
sti
cmp
mov
pushf
loope
das
aad
arpl
and
aam
pop
in
aad
aam
xchg
movsl
in
int
inc
lcall
push
out
cmc
icebp
aaa
jecxz
repnz
movsb
imul
leave
div
icebp
push
or
add
cmp
lcall
out
pop
pop
imul
dec
mov
test
mov
sub
aaa
pop
decb
fcomip
push
mov
fdivl
and
in
inc
cmp
out
daa
mov
jp
imul
loope
or
cmp
imul
inc
scas
jecxz
xlat
in
aas
sarb
dec
push
or
cmc
lahf
mov
mov
and
xchg
cli
repnz
jno
mov
adc
roll
lea
std
sub
movb
scas
mov
xor
pop
adc
pop
sarl
outsl
cmp
sbb
mov
or
mov
adc
jecxz
cmp
divb
in
sbb
ss
fcmovb
cltd
shl
mov
nop
mov
and
mov
gs
ficompl
into
jns
dec
inc
and
dec
mov
daa
fcmovnbe
popa
push
add
jecxz
push
push
lea
or
and
xor
es
into
pop
fcompl
jp
rclb
mov
dec
fldlg2
xchg
xchg
and
inc
mov
iret
rolb
xchg
adc
xchg
insb
mov
decb
ret
mov
ror
add
out
pop
pop
imul
inc
stc
scas
mov
mov
xchg
movsl
outsb
vorpd
fstpl
fmulp
in
movsl
xorb
clc
xchg
adc
sbb
lods
sub
cmpsb
int
jle
les
and
mov
dec
popf
jecxz
js
mov
mov
int3
push
fsubr
push
popf
cmc
xor
das
cli
mov
lock
cltd
bound
and
ds
mov
rorl
add
lret
mov
xchg
xor
jecxz
flds
add
notb
arpl
push
repnz
jge
arpl
cltd
mov
or
imul
in
call
jecxz
ljmp
push
lock
jl
push
out
mov
orl
fs
lahf
scas
ret
jnp
xchg
cmpsb
aam
gs
incl
mov
in
fimuls
pop
push
add
pop
inc
pop
push
and
cmpl
inc
pop
sbb
or
ret
nop
ret
cmp
mov
adc
sbb
movsl
xchg
push
into
mov
gs
xchg
cmp
ret
into
mov
mov
mov
or
inc
jmp
inc
scas
adc
cmpsl
push
mov
loopne
xor
sbb
in
es
repz
std
notb
nop
flds
cmpsb
loope
sbb
fsubl
into
jno
mov
in
sub
cmpb
fwait
pop
insl
lock
mov
gs
adc
bound
in
icebp
push
mov
mov
lock
cmp
lret
data16
push
fcmovnb
int
jmp
sbb
ja
movsl
sbb
lods
jno
dec
aaa
cmp
and
out
pop
fldenv
jle
fmuls
leave
mov
fisubs
outsl
in
mov
jl
inc
mov
roll
lds
lds
jmp
popl
add
lret
popa
loope
dec
test
push
jno
pop
add
pop
icebp
repz
dec
lock
mov
cwtl
outsb
add
xor
leave
xchg
movq
and
daa
or
insb
and
fdivrp
test
insl
in
stos
mov
sub
or
lahf
out
ss
and
dec
and
inc
sub
cmc
movsb
push
lods
sbb
sbb
push
mov
and
ret
adc
les
scas
repz
cltd
xchg
mov
imull
loop
jae
mov
aas
xchg
aad
pop
push
scas
dec
outsb
or
mov
test
fmull
jo
lds
mov
stos
sti
jmp
mov
sub
mov
inc
pop
rorl
out
push
out
fimull
aas
sub
daa
xor
scas
sti
adc
loope
pop
pop
fiadds
inc
pop
pop
mov
xchg
push
dec
mov
outsb
notb
mov
mov
push
mov
mov
mov
sti
leave
jb
mov
sbb
jmp
ds
std
movsb
in
push
xchg
pop
xor
aam
mov
jg
xor
mov
lea
ljmp
jmp
jns
adc
mov
loop
icebp
in
pushf
cmp
stos
pop
mov
mov
movsl
cltd
or
jge
mov
fisubrl
or
fisttpll
add
cmpsb
lret
js
bound
add
repnz
mov
push
fdivl
jp
int3
pop
in
jae
repz
jmp
mov
in
push
xlat
adc
stos
mov
aam
mov
adc
loope
jne
pop
in
or
or
xchg
cmp
xor
cmpsl
adc
jb
pop
outsl
out
test
movsl
sbb
inc
fs
mov
icebp
imull
icebp
jl
loope
in
fisubrs
icebp
adc
notl
cli
adc
jae
in
icebp
jge
pop
mull
mov
out
push
aad
xor
push
je
insb
repz
arpl
adc
arpl
es
xchg
cmpsl
loopne
mov
in
hlt
cmp
daa
cwtl
jo
fisttps
hlt
push
sub
add
mov
out
popa
fnsave
sbb
push
sbb
sbb
sbb
and
data16
shlb
or
adc
roll
stos
je
insl
jne
stos
sbb
push
lahf
sub
popf
aaa
xchg
dec
je
and
sbb
xchg
push
mov
xorl
xor
and
push
or
in
scas
imul
push
in
ret
sub
and
sub
jnp
mov
jp
cmpsl
inc
jge
icebp
scas
mov
scas
xchg
fstl
xchg
jle
and
inc
or
mov
xchg
or
rcll
sub
jecxz
and
xchg
les
push
push
in
lret
mov
mov
mov
pop
xchg
sub
lcall
ljmp
xchg
jno
rcll
repz
mov
int3
arpl
fsubs
call
pop
push
inc
sub
ljmp
stc
and
mov
mov
sbb
dec
ret
fwait
push
movsl
xor
cmp
outsb
push
insl
pop
in
add
inc
push
fldenv
xor
lret
iret
mov
enter
ficoml
push
xchg
fists
mov
adc
xchg
sbb
mov
xchg
dec
fstps
not
or
popa
sub
enter
xlat
jo
dec
xor
mov
lret
xor
stos
add
or
leave
movsl
or
out
test
rcll
xchg
call
in
fbld
insb
cmp
inc
pushf
inc
sub
es
les
aaa
mov
ljmp
call
dec
and
xor
lsl
les
call
jecxz
fldt
or
mov
pop
xor
or
icebp
xchg
movsb
and
into
stc
pop
lahf
xor
cmc
movsl
in
adc
adc
or
loop
dec
into
mov
adc
sub
test
scas
jo
movsl
cmc
lahf
mov
fidivrl
pop
in
aad
mov
clc
jae
in
jp
push
fldl
loopne
mov
das
cmp
jae
and
inc
push
adc
fidivrs
cmp
xchg
inc
loopne
add
mov
hlt
cmp
pushf
jecxz
mov
dec
mov
stc
xchg
mov
jnp
out
xchg
inc
xchg
test
sub
dec
pop
dec
add
add
push
mov
dec
int
jo
dec
aam
mov
arpl
dec
fisttpl
dec
fwait
popa
mov
adcb
xchg
mov
hlt
cmp
push
sbb
xchg
clc
movsb
int3
leave
lea
xchg
and
cwtl
mov
insb
mov
mov
mov
sti
std
imul
add
mov
fsubrl
in
jg
pop
popf
push
push
pop
mov
les
push
ja
fisttpl
mov
ret
add
nop
adc
stc
dec
inc
xchg
adc
inc
jns
mov
ds
inc
or
jbe
mov
fistpll
fs
xchg
mov
popf
cmpb
addr16
scas
fists
in
adc
stos
inc
dec
xchg
or
or
add
std
repnz
hlt
fldt
inc
xchg
cli
test
dec
test
dec
add
cwtl
xlat
out
leave
cmpsl
fbstp
add
or
mov
mov
mov
push
into
mov
icebp
pusha
add
sub
push
mov
inc
outsl
sub
xor
xchg
scas
push
push
dec
mov
mov
jno
jmp
flds
add
stc
pop
imul
and
jno
loope
fdivl
fs
dec
in
lods
xchg
xchg
pop
fisttps
dec
fldt
adc
outsb
lcall
icebp
push
loopne
fs
dec
pop
mov
mov
cwtl
inc
cmp
icebp
icebp
push
cmp
sub
mov
outsl
push
je
ds
sbb
stos
movsb
sar
ret
rorl
sahf
es
cmp
push
push
roll
leave
dec
pop
in
inc
icebp
int3
adc
push
das
dec
popf
cmc
or
mov
les
mov
cltd
in
pop
enter
cli
push
stc
xchg
inc
inc
jg
call
int
mov
xchg
leave
jo
xchg
jo
mov
lods
adc
lods
jae
pusha
or
sub
lods
sub
adc
mov
dec
adc
rol
call
mov
add
inc
fcomip
xchg
popa
ss
dec
add
repz
mov
int3
push
pop
mov
xchg
sahf
outsl
sbb
jge
push
mov
aad
bound
and
aam
fists
sub
aam
out
sub
inc
stc
loopne
ss
leave
int
insb
push
push
dec
cmp
dec
dec
cmp
mov
inc
nop
or
leave
pop
push
mov
lds
xor
cmp
ja
mov
repnz
arpl
inc
or
mov
adc
jge
jnp
and
jg
in
imul
scas
in
dec
pop
ret
repnz
adc
arpl
ret
jo
mov
imul
cmpsb
adc
mov
push
repnz
mov
jne
xchg
mov
div
cmp
loope
xlat
cmp
aad
cmc
test
sbb
testl
dec
mov
in
sahf
popf
push
mov
xor
adc
pop
pusha
das
scas
out
adc
outsb
adc
dec
push
mov
lds
mov
cmp
orl
fcomps
push
repnz
in
pop
xor
leave
add
dec
mov
call
pop
xor
shll
jae
or
mov
xchg
inc
in
push
sbb
xor
leave
jl
mov
rcrb
dec
aam
into
push
gs
push
test
testb
mul
pop
in
adc
out
std
lods
or
rcr
adc
mov
mov
mov
push
mov
ja
sbb
sbb
test
cltd
hlt
xchg
lds
adc
push
in
push
cmp
dec
sub
lods
mov
out
cmc
mov
ss
xchg
outsb
cli
cmp
lcall
ljmp
rcrb
mov
je
sbb
fs
adc
mov
ss
imul
fnstcw
aaa
xor
imul
cmc
pop
ffree
icebp
ficoms
adc
cmpsl
cltd
mov
shlb
out
dec
xor
fbstp
cmp
out
fcmovbe
aam
dec
ss
push
inc
or
seto
mov
adc
aaa
cs
mov
xchg
mov
les
lock
int
jb
insl
adc
js
mov
sbb
mov
xchg
push
jmp
add
movsl
mov
lea
push
cmp
fmulp
dec
dec
cmp
fmuls
popf
js
fistpll
ds
jl
dec
sbb
gs
cmpsb
inc
call
sub
lock
sbbl
test
daa
js
add
lcall
sbb
and
repnz
add
add
test
les
out
sub
addr16
xchg
popf
dec
push
iret
sub
mov
pusha
push
int3
das
push
scas
dec
sti
imul
data16
mov
mov
jns
inc
jbe
jbe
sbb
and
hlt
js
mov
push
add
mov
les
daa
pop
cld
out
cmp
add
out
cli
fcoml
xchg
lcall
int3
pop
and
xchg
mov
jno
fsub
inc
fsubs
sahf
or
rcrb
icebp
outsb
out
dec
aad
dec
outsl
shlb
ret
hlt
mov
icebp
gs
repnz
adc
adc
lods
xor
dec
popf
mull
dec
adc
outsl
cmpsb
xchg
stos
and
dec
shlb
hlt
adc
dec
dec
jno
inc
addr16
outsb
mov
xchg
addl
mov
xor
add
fisubrl
xchg
inc
jge
cmp
inc
sbb
mov
sahf
aam
repz
jne
jne
div
cmpsb
adc
mov
js
icebp
push
int3
loop
pop
js
adc
jp
mov
jecxz
xchg
add
pop
jmp
cs
pop
pop
mov
repz
lds
jg
jbe
data16
bound
jmp
das
adc
or
sub
sbb
or
inc
repnz
mov
adc
sti
repz
mov
rclb
cmpsb
or
pop
iret
or
cmp
and
test
mov
cmc
xchg
add
pop
sub
repz
jmp
notb
and
int
jns
mov
fcoms
mov
sti
cmc
add
pop
das
inc
jecxz
test
jge
rcll
addb
add
dec
jecxz
cli
or
insl
fisttpll
mov
into
aad
outsl
sbb
push
adc
jmp
das
xchg
sub
lea
jp
les
fbld
pop
xchg
inc
push
or
xor
dec
sbb
sub
nop
repnz
mov
pop
es
sti
dec
aad
adc
xchg
lret
insl
jecxz
mov
inc
inc
pop
pop
loopne
insb
in
pusha
pop
inc
out
xor
bound
push
cmc
push
mov
jmp
data16
dec
and
push
aad
sbbl
or
ret
push
mov
outsb
xchg
incb
dec
mov
mov
and
cltd
in
sbb
loop
arpl
pop
or
divb
jge
rolb
mov
sarl
pop
fisubl
and
or
pop
lcall
or
jo
fs
sarb
movb
clc
lahf
push
icebp
dec
or
cli
call
pusha
cmpsl
dec
addr16
rorl
mov
add
or
mov
je
cwtl
jecxz
mov
popa
mov
test
push
jge
adc
inc
bound
push
lds
push
mov
fidivs
pop
mov
insl
push
push
stos
adc
mov
in
mov
cmpsl
faddp
pop
popa
sahf
cmc
xchg
xor
es
lods
add
les
cmp
push
inc
mov
test
les
dec
xchg
cmp
mov
movsl
jmp
pop
jecxz
out
fisubrl
pinsrw
ljmp
jne
dec
add
repnz
in
fdivl
stc
dec
clc
notb
inc
xchg
cmc
inc
jge
mov
xor
negb
inc
loope
or
andl
mov
inc
mov
xchg
adc
imul
in
dec
imulb
repnz
mov
mov
movsl
mov
lods
roll
dec
in
mov
sarb
pop
push
or
pop
fisttpl
out
rolb
jge
jp
fstpl
add
mov
cmpsb
in
push
movsb
loop
hlt
push
mov
and
and
and
ds
mov
jecxz
fcompl
xor
push
into
int3
and
ds
enter
movsl
and
and
mov
mov
xchg
adc
hlt
mov
test
ja
ss
push
push
pop
jae
lea
dec
xor
sti
mov
mov
and
test
sbb
mov
or
repnz
pop
cmc
out
jne
notl
and
lods
ret
or
xor
pop
and
inc
lret
mov
int
xchg
sub
adc
out
mov
xorb
or
enter
sbb
jle
ret
lea
cmc
pop
push
in
rcrl
push
test
and
popf
cmp
push
xor
jae
or
mov
rorb
dec
ss
mov
sub
jo
xchg
and
jne
mov
inc
and
xor
adc
test
dec
or
pop
fcom
icebp
mov
xchg
xchg
inc
pop
jbe
stc
arpl
notb
adc
test
call
repnz
mov
outsb
push
into
xchg
mov
fstpl
xchg
adc
repnz
add
and
loop
or
xchg
xchg
clc
xchg
push
mov
mov
jae
xchg
test
mov
sub
jns
and
xchg
xchg
or
sub
daa
mov
aaa
or
sbb
push
popa
mov
pop
jmp
pusha
cmp
test
mov
mov
or
movsb
adc
push
in
das
mov
imul
fyl2x
inc
push
hlt
stc
mov
in
mov
addb
aad
cli
lret
inc
xchg
out
std
int3
mov
cld
inc
outsb
repz
mov
fsts
loope
push
test
or
and
pop
outsl
xor
dec
jns
xchg
cmp
ja
mov
imull
js
je
jmp
sub
adc
insb
mov
cmp
mov
lret
mov
xchg
push
mov
adc
xor
data16
push
jbe
arpl
cmc
lock
mov
dec
orb
jbe
and
in
inc
jno
inc
sbb
pop
negb
or
jae
sub
outsl
xchg
std
bound
dec
repz
les
rol
xor
mov
sub
or
repnz
pop
fistpl
inc
xor
and
xchg
jne
lds
movsb
jge
in
mov
cmp
add
inc
or
iret
cmp
fnstcw
repz
and
mov
pop
and
loop
add
gs
mov
xchg
sub
cmpsl
mov
outsb
shl
in
stos
ret
jge
and
xchg
aad
out
xchg
jnp
cs
cmpsl
mov
xor
pop
fisubl
shr
in
mov
push
test
add
lret
cmc
push
add
sub
inc
test
std
push
xchg
popf
call
mov
jno
cmc
aam
sahf
xchg
mov
iret
ja
fmuls
bound
mov
cmc
fldl
daa
mov
mov
push
inc
lock
stos
fbstp
into
fldl
mov
push
jne
push
stos
or
jns
in
dec
xor
cmc
in
in
cmp
into
cmpsl
popf
aam
jo
lahf
iret
or
dec
data16
xchg
sbb
sub
sub
mov
dec
ds
xchg
repnz
xor
xchg
imul
adc
inc
sub
dec
dec
scas
inc
popf
mov
mov
stos
and
outsl
in
hlt
pop
sbb
mov
adc
pop
add
cmp
into
cld
repnz
aaa
aaa
inc
dec
test
adc
js
movsb
sub
std
mov
fstps
fdivr
movsl
ret
cmp
lock
xchg
call
jmp
mov
lahf
mov
mov
sub
xchg
mov
ljmp
pop
pop
inc
mov
mov
adc
jmp
testb
sub
inc
in
dec
ljmp
je
mov
test
lahf
inc
insl
out
mov
sub
leave
mov
cmpsl
mov
pop
sub
xor
movsl
stos
in
lahf
dec
mull
div
mov
jmp
out
push
repz
call
scas
pop
fidivl
pop
dec
sbb
jl
jle
je
fs
cmp
lret
push
and
ja
testb
jb
pusha
clc
sub
shlb
pop
mov
dec
fwait
idivl
shl
in
adc
pop
popa
push
push
lods
dec
ljmp
js
jnp
popa
push
push
lds
xor
push
test
ljmp
loope
mov
leave
mov
push
cltd
int
addr16
lret
enter
jne
add
pusha
inc
mov
test
ja
pop
fbld
scas
mov
xchg
add
fs
or
dec
loop
sbb
imul
lahf
lds
xlat
fstps
mov
push
lds
push
leave
leave
inc
jb
mov
sti
mov
sbb
mov
xor
push
push
xlat
es
mov
jne
fisubrs
add
bound
addl
and
test
push
sbb
jmp
mov
fmulp
push
enter
jmp
jne
dec
cmpb
sahf
mov
out
cmp
es
adc
jmp
lea
mov
test
nop
or
aad
lret
pop
repz
push
push
pop
push
mov
mov
rcll
test
and
lret
xchg
xor
mov
outsb
adc
xor
cli
inc
add
or
in
sub
push
out
loope
add
add
arpl
roll
mov
mov
sub
hlt
mov
aad
cld
ss
shrl
negb
mov
mov
lds
test
jns
xor
movsl
cmc
daa
adc
ret
pop
or
dec
in
adc
aad
fisttpll
sub
and
movsb
push
jmp
ret
ret
jne
dec
sub
pop
adc
cmc
jp
sbbb
test
in
addr16
lock
out
imul
jle
mov
push
cmp
jnp
cmp
rcr
add
mov
fwait
lock
add
jecxz
and
ds
cmp
jno
test
cs
push
test
vpsubw
jecxz
sub
sahf
sub
outsb
in
jns
shrl
sub
jo
cmpsb
sbb
test
popf
cmpsb
and
mov
and
pop
popa
pop
repnz
or
data16
mov
fstpt
int3
sahf
ss
out
push
jecxz
xor
test
in
pop
bound
adc
add
outsl
inc
inc
sbbb
sbb
flds
xchg
adc
clc
enter
xlat
mov
sti
mov
lds
cmp
test
lcall
inc
push
jmp
mov
mov
ret
jae
fprem
lret
das
dec
fsts
cmp
sub
ds
rcr
aaa
ljmp
cld
mov
daa
iret
addr16
cmc
inc
jecxz
test
add
sahf
sub
nop
cmp
mov
jne
mov
test
andl
dec
int
jno
sub
jae
add
out
xchg
sub
xchg
jae
or
mov
xor
jl
mov
pop
jp
fidivl
jl
jnp
push
xchg
aam
dec
pop
mov
inc
mov
cs
call
mov
cli
jge
or
in
insl
mov
jno
sbb
je
shr
mov
call
push
out
jle
xchg
xor
cmp
inc
lcall
jecxz
mov
les
les
push
ss
scas
lds
pop
ss
add
ss
outsl
sarl
jns
xchg
push
std
test
xor
mov
rcrb
call
aam
and
je
xchg
push
xlat
mov
leave
inc
adc
decl
jno
fcmovnb
sub
repz
add
xchg
and
mov
jmp
pusha
aas
loopne
fadds
lret
xor
imul
loop
arpl
fmull
inc
dec
mov
adc
shll
test
adc
ja
insl
cmp
push
dec
loopne
mov
and
fs
sbb
cmpsb
leave
xchg
and
fisubl
insb
movsl
in
mov
sarl
sub
add
filds
sub
adc
into
sub
aaa
scas
test
add
lods
imul
push
xchg
inc
jnp
mov
dec
push
orl
aam
js
ds
into
aaa
lret
and
pop
or
loop
xlat
loop
fiadds
mov
inc
add
dec
out
js
xor
gs
out
inc
jno
loope
das
dec
jbe
shlb
xorl
mov
and
sysenter
lods
pop
dec
jns
gs
push
xor
xchg
cmpsl
pushf
push
clc
insb
adc
loop
fs
scas
cmc
mov
les
sbb
mov
mov
pop
test
scas
ret
cwtl
xchg
xchg
frstor
test
sbbl
jae
dec
inc
add
cmp
mov
jg
mov
mov
je
mov
lahf
loop
lods
aad
mov
clc
mov
call
cmp
call
and
sbb
inc
push
and
jle
add
mov
fs
or
push
mov
je
test
lods
xchg
xor
aam
inc
fcmovnbe
in
mov
and
sarl
stos
pop
dec
pop
pop
out
inc
test
inc
jmp
leave
ret
pop
mov
addr16
scas
mov
in
jecxz
sbb
in
out
mov
sbb
fistps
dec
inc
mov
imul
jae
pop
sbb
cmpsl
cld
rorb
push
insl
inc
je
test
jbe
push
mov
roll
scas
jge
inc
arpl
add
in
xchg
fwait
adc
xchg
mov
and
in
cwtl
aad
xchg
out
jo
add
ds
push
mov
and
xchg
lahf
in
mov
insl
mov
sbb
mov
sub
pop
sub
inc
lds
lret
stos
cmp
jge
imul
pop
sahf
xor
nop
add
pop
shr
inc
jb
icebp
dec
pop
stc
lods
xchg
sub
out
in
jo
jno
mov
inc
add
push
dec
pop
lcall
outsl
test
sahf
cmc
xchg
movsb
mov
mov
fnop
mov
jb
mov
aam
adc
stc
lahf
movsb
mov
rorl
and
lods
or
popa
xchg
mov
es
fstp
scas
fwait
sbb
inc
xchg
mov
sub
or
xor
dec
das
push
mov
fldenv
int
insl
sub
popl
outsl
sbb
rclb
lds
lea
arpl
das
aam
addr16
sbb
xor
das
scas
rorb
pop
enter
test
dec
push
add
lahf
lea
push
popf
ficompl
cmp
and
les
dec
cmp
jge
push
jne
xor
outsb
xor
test
leave
sti
rcrb
stc
cltd
push
les
pop
xlat
dec
aaa
in
icebp
push
add
pop
outsl
cmp
xchg
mov
inc
inc
in
sbbb
call
lds
mov
fadds
xor
adc
int
mov
out
pop
inc
dec
test
movsb
and
lea
ljmp
fidivrl
push
dec
ret
outsl
dec
addl
fisttpl
dec
dec
jo
decl
sub
mov
or
xchg
push
adc
jbe
jmp
bound
imul
cmp
lds
fwait
jno
pop
or
push
clc
fldt
divb
jg
daa
in
fldenv
loop
bound
mov
ret
rcl
imull
mov
test
in
jnp
fidivl
test
daa
aam
int
stos
adc
stos
out
lods
test
push
sbb
aad
repz
insl
mov
stos
sahf
pop
xchg
dec
add
in
pop
call
push
pop
dec
out
and
sub
cs
int
dec
inc
sub
xchg
div
or
cli
push
xchg
ja
pop
outsl
scas
mov
cmc
pop
lret
mov
xchg
aaa
xchg
and
cmpsb
arpl
xlat
mov
sarl
fiadds
mov
adc
and
and
sbb
push
xchg
loopne
lret
data16
hlt
movsl
rol
lea
add
mov
xchg
insl
xchg
loop
xchg
inc
dec
dec
and
push
stos
jb
cli
xor
inc
lahf
enter
jl
fldt
mov
add
in
outsb
mov
cld
icebp
sahf
sub
ja
jecxz
lods
mov
inc
dec
lret
jmp
jno
addb
fwait
adc
lock
mov
dec
pusha
pop
push
inc
stos
lcall
pop
mov
adc
sub
xor
sti
sub
inc
push
adc
cmc
mov
fdivrl
andl
mov
push
daa
out
and
mov
xchg
xor
ljmp
adc
inc
repnz
jae
loope
out
sbb
rcrl
mov
mov
shrd
js
jo
icebp
sahf
lahf
lock
in
bound
cltd
icebp
lcall
outsl
pop
push
jle
leave
push
popf
or
cwtl
icebp
fdivrl
push
hlt
mov
sub
cmp
ds
mov
addl
gs
cmp
icebp
nop
js
sub
lods
in
test
rclb
loopne
pusha
movsl
fadds
mov
stc
out
je
sub
mov
cmpb
stos
jg
test
adc
mov
jg
pop
mov
xchg
ficomps
rcr
cmp
ja
aas
es
ja
dec
fs
popa
jmp
jno
in
clc
nop
mov
add
bound
inc
ljmp
in
jecxz
mov
popf
in
clc
pop
daa
std
mov
jmp
movsl
push
fdivrl
push
pop
xlat
and
in
bound
ljmp
jmp
xchg
aad
mov
sub
fisubs
notb
add
sahf
or
or
imul
ljmp
loopne
push
addb
push
std
dec
cmpsl
xor
in
lods
cltd
call
fiadds
push
divl
push
in
pop
fidivrl
dec
cli
or
mov
and
outsb
pushf
mov
xorl
or
nop
and
mov
pop
adc
inc
cmp
es
outsb
fisubrs
popf
test
xchg
orl
dec
push
imul
sub
xchg
lea
cwtl
movsb
pop
cltd
lock
mov
cmp
cmp
inc
pushf
xor
xor
gs
xchg
push
jno
lock
roll
sbb
xor
push
add
add
dec
enter
mov
sbb
sarl
lds
ret
in
mov
imul
in
xchg
outsl
dec
push
pop
pop
pusha
std
inc
xchg
pop
inc
ss
popa
icebp
jb
mov
div
push
lds
push
repz
popf
repz
ss
pop
push
das
mov
cld
test
pop
push
jbe
mov
cmpsl
lds
shll
loop
scas
sub
jp
pop
pop
mov
loop
divb
cltd
push
inc
mov
cmp
xchg
insl
or
testl
movsl
out
xchg
mov
mov
add
mov
loope
icebp
fidivrl
bound
xlat
in
jns
shlb
inc
and
test
je
mov
pop
inc
xchg
in
dec
mulb
cmpsb
repnz
jp
dec
xchg
inc
pop
clc
scas
andb
repz
outsb
jmp
mov
xor
clc
dec
adc
jae
enter
les
insb
leave
jbe
or
mov
clc
jle
test
or
insb
fisubl
sbb
adc
rolb
cld
jae
mov
test
jnp
hlt
test
push
add
in
test
adc
es
jmp
mov
push
adc
or
mov
les
outsb
sbb
dec
adc
in
mov
iret
mov
jmp
mov
addr16
mov
daa
icebp
aad
test
or
and
aam
xor
out
ficomps
out
xchg
lock
cmpsb
adc
in
cltd
mov
sbb
jnp
scas
inc
dec
mov
sbb
loop
add
push
fidivrl
repnz
cmc
movsb
ret
and
je
push
push
jle
mov
adc
mov
push
outsb
test
sti
test
nop
fidivrs
pop
sub
mov
sbb
mov
mov
jnp
sbb
sub
in
das
xchg
or
push
sbb
bound
lea
inc
adc
pop
push
push
dec
push
or
dec
mov
adc
adc
dec
dec
xchg
sbb
lods
int
mov
test
xor
sarb
mov
cltd
xor
push
lcall
xor
sbb
setl
add
cwtl
sbb
jbe
sti
inc
fsubrp
sub
jne
mov
testb
xchg
adc
iret
dec
stos
in
and
out
xor
cmp
sub
lods
out
adc
inc
mov
into
test
xchg
outsl
add
rorb
scas
or
sub
jnp
add
sub
es
repz
add
rcrb
outsb
push
mov
dec
sub
mov
in
fdivs
test
stc
fdivrl
lds
dec
mov
xchg
mov
daa
mov
data16
or
icebp
cmpsl
jb
or
in
mov
push
imul
outsb
mov
ret
jmp
pop
shlb
sub
jne
mov
stc
xchg
mov
sbbl
mov
mov
xor
lods
jecxz
xchg
adc
jle
mov
sub
pop
repnz
add
sbb
mov
das
lcall
xor
loope
adc
jge
lock
enter
and
push
mov
lods
mov
jns
xor
sbb
aad
sbb
and
orb
jnp
dec
or
adc
dec
and
xor
push
fsubrs
push
jae
mov
and
cs
mov
jmp
notb
cmpsb
pop
call
outsl
mov
in
das
decl
ret
pop
fisubrs
mov
mov
and
or
mov
test
xor
ja
sub
lods
push
bound
xor
mov
insl
inc
subl
dec
div
push
es
in
sbb
es
jae
adc
aad
ljmp
mov
fisubs
mov
repz
sti
dec
xor
push
test
jbe
in
and
lock
sahf
movsl
js
fiadds
mov
dec
cld
mov
push
leave
and
mov
lea
cltd
adc
inc
pop
ljmp
jmp
pop
push
in
sbb
inc
sbb
fldz
das
jge
pop
inc
sarl
pop
sub
inc
mov
lods
add
sub
cmp
mov
out
push
mov
loop
fstpt
stc
inc
adc
aad
pop
or
ljmp
mov
jbe
sbbb
sar
lret
mov
lret
push
lret
mov
sbb
adc
sbb
leave
sub
push
add
mov
push
pop
xlat
enter
mov
dec
pop
inc
out
cmp
cmp
adc
cmovle
stos
sbb
push
rcrb
repz
pop
mov
mov
adc
out
dec
bound
jns
pop
test
or
sub
dec
jg
mov
aaa
push
xor
stc
mov
sbb
pop
sub
or
mov
push
cmc
insl
stos
fsubrl
inc
mov
inc
jecxz
test
outsb
pop
jge
mov
adc
push
jno
addb
aam
jmp
push
dec
dec
mov
mov
adc
popl
int3
lret
pop
mov
movb
movsb
xlat
mov
jnp
add
test
mov
mov
call
and
jge
pop
mov
mov
push
js
fisttps
imul
outsl
push
xchg
mov
xchg
cmpl
xchg
add
std
ljmp
jb
cmc
cmp
lcall
aam
pushf
mov
pop
stos
ja
xor
push
jne
xorb
mov
jmp
mov
pop
scas
iret
fsubl
add
lret
xor
add
js
cli
movsb
cmpl
inc
loope
ret
int3
push
out
insl
adc
cmpsb
gs
frndint
sub
inc
pop
sti
xor
add
aaa
lea
ljmp
jge
inc
inc
dec
hlt
inc
pop
cmp
cmpsl
jbe
or
clc
popa
and
or
jbe
cmpsb
add
dec
insl
jns
dec
jecxz
aaa
movsb
out
mov
sbb
int
test
pop
in
mov
out
movsb
pop
movsl
jne
cld
cwtl
sarl
bnd
movsl
dec
sbb
mov
push
dec
add
jno
push
dec
andb
or
jo
out
mov
cltd
add
dec
fs
test
js
sub
in
jno
jl
mov
hlt
push
cmp
cld
mov
push
adc
mov
flds
add
ss
mov
loop
dec
dec
stos
les
mov
mov
mov
sbb
mov
xor
inc
or
lahf
test
push
fbld
loop
mov
outsb
stos
fs
inc
icebp
xor
sarl
xor
shlb
hlt
xchg
pop
in
cs
xchg
out
push
add
add
pop
or
cli
add
ret
test
mov
pop
pop
jo
and
mov
insl
mov
ret
cmp
rorb
out
sub
sub
fwait
cmc
loope
push
rcl
jnp
push
jae
scas
inc
mov
push
dec
int
adc
add
dec
cltd
mov
and
mov
aam
push
ja
iret
aaa
or
pop
icebp
out
insb
mov
daa
pop
jns,pt
pop
in
addr16
pop
popa
insl
iret
pop
rol
fistpl
xchg
pop
xchg
lcall
and
cli
in
pop
sub
cld
shlb
jg
mov
lret
lahf
pushf
sarb
test
sub
mov
imul
mov
mov
mov
ds
adc
in
add
bound
push
adc
loopne
dec
xor
outsb
popa
insb
imul
dec
ljmp
xor
inc
mov
sbb
std
fwait
push
leave
fidivrl
std
jno
scas
dec
arpl
sbb
aad
cs
fsubrs
mov
xchg
movsl
mov
outsb
cli
pop
mov
les
cmp
xchg
shrl
adc
pop
jbe
outsb
xor
call
mov
lock
lods
xor
mov
aaa
leave
sbb
mov
and
insl
push
addl
ficompl
jne
ss
aaa
sbb
subb
int
sub
out
mov
pushf
ret
data16
lahf
fprem1
rol
rep
icebp
dec
inc
out
lds
repz
notb
jge
inc
sbb
lods
lods
dec
outsl
and
xor
loope
cmc
or
hlt
fldl
stos
ret
push
mov
xchg
jno
jbe
scas
enter
sbb
inc
lea
out
std
fstpl
mov
icebp
sbb
and
lahf
xchg
addb
dec
lds
enter
fs
mov
jnp
mov
jae
imul
movsb
jmp
enter
js
flds
repz
adc
cli
dec
shll
lret
and
sub
hlt
push
push
jmp
pop
jno
cmp
xor
shlb
jbe
cltd
mov
jns
aad
iret
inc
xchg
loop
mov
bndstx
je
cmp
xorb
lds
push
fidivl
insl
jns
faddl
imull
pop
cmp
stc
dec
stos
lret
insb
insl
fisubrs
call
pop
test
mov
rcrb
insb
xchg
insl
and
and
cwtl
repz
stos
mov
mov
into
inc
shll
repz
mov
out
fwait
sbb
xor
mov
int
repz
mov
inc
adc
jg
xor
or
and
repz
jge
in
mov
xor
xchg
lahf
or
inc
movl
cmpl
or
out
repz
sub
iret
enter
rorb
lods
insb
shlb
fsubrs
lahf
inc
inc
fucom
jmp
ret
dec
inc
aad
xchg
jmp
mov
clc
arpl
xor
fisubs
and
test
jl
and
in
lret
ficoms
imul
xchg
arpl
or
jne
xchg
into
jl
xor
lock
jecxz
insb
lock
js
and
mov
add
in
incl
fs
add
adc
call
cmp
in
addr16
sar
pop
xor
cld
xor
jnp
sub
cmp
rorl
add
xor
jle
mov
inc
shlb
xchg
shlb
sbb
cmp
xchg
les
jo
lock
cs
cltd
es
push
pop
mov
stos
movsb
xor
bound
xor
incb
or
mov
rclb
adc
jb
jmp
and
sbb
xor
sub
addr16
jbe
lods
aaa
loop
je
pop
testb
adc
in
sarb
scas
icebp
leave
call
bound
dec
or
mov
xor
xor
das
xchg
add
dec
outsl
lea
and
aad
dec
outsl
mov
lcall
lds
icebp
sbb
inc
mov
inc
inc
push
mov
sahf
aam
shll
movsb
notb
sbb
jmp
fisubrl
jp
sub
lods
cmc
inc
in
shll
fs
sub
push
inc
xchg
push
cs
lret
lds
xchg
gs
mov
dec
scas
cltd
int
sub
in
lock
je
cld
lahf
enter
xchg
pop
sbb
test
lock
out
cmpsb
adc
movsl
xchg
stos
push
les
ret
push
inc
mov
xor
lahf
or
cmp
dec
hlt
jp
sahf
call
push
sbb
xor
jl
or
test
cmc
cltd
xchg
rolb
in
lds
push
rclb
cmp
sahf
test
sbb
mov
stos
fmull
push
mov
lock
stos
shrb
adc
in
aad
pop
movsl
fdivr
cltd
fdivr
loope
jmp
int3
xchg
mov
jo
jmp
adc
insl
frstor
mov
aaa
cmc
sbbl
das
mov
jbe
cmp
mov
lea
cs
les
lds
fimuls
adc
arpl
or
xchg
dec
lods
arpl
adc
push
sahf
push
into
add
or
fcoms
lret
scas
push
lret
out
std
stos
or
or
mov
lea
push
loop
push
pop
out
sub
loop
sub
loop
cmc
das
or
sub
add
mov
xor
dec
push
popf
jne
cmpsl
mov
and
lret
or
in
or
cmpsl
add
mov
mov
mov
outsb
andb
add
add
dec
and
movsb
inc
or
adc
dec
in
movsb
jbe
mulb
lret
mov
aaa
inc
cld
cltd
repnz
push
hlt
cltd
inc
movsl
adc
jge
jne
and
jne
mov
mov
dec
repz
dec
cmp
inc
adc
xor
in
sub
movsb
inc
je
in
push
lret
adc
mov
jl
lcall
or
daa
or
xor
push
inc
jb
dec
cmp
inc
mov
mulb
ret
add
adc
out
in
pusha
cmc
fsubl
adc
push
adc
daa
add
inc
sub
movsb
xchg
insl
jne
fidivrs
fucom
pop
addr16
in
fwait
lcall
iret
cmpsb
sbb
mov
xchg
mov
gs
jmp
lods
sub
leave
mov
in
sub
inc
xor
mov
jecxz
xorb
or
pushf
cwtl
leave
push
xor
fists
pop
movsl
lahf
push
dec
aam
shll
rol
sbb
push
pop
fimuls
int
rcrl
arpl
leave
dec
adc
mov
mov
push
testl
xor
mov
adc
mov
pushf
sub
and
inc
stos
mov
xchg
jo
in
in
mov
sub
and
or
ss
in
dec
mov
je
fcmovu
mov
in
ds
popl
dec
mov
mov
sub
dec
repz
dec
pop
add
xchg
and
in
xchg
les
ficoml
pop
mov
mov
repz
int3
pop
jo
out
mov
std
pop
movsb
fsts
int
fsubrp
or
cwtl
pop
jbe
cmc
jno
movsb
or
out
or
int
adc
mov
pop
stos
and
jno
enter
shlb
mov
fbld
pop
adc
lods
sbb
inc
pop
or
jg
les
mov
sbb
in
fidivrl
gs
mov
pop
or
lahf
popf
in
jno
cltd
in
pop
pop
lea
sub
push
ja
dec
in
inc
das
mov
sub
push
out
cmp
jne
popf
lea
sbb
push
cwtl
enter
stos
ret
jae
adc
fisttpll
in
out
call
movsl
leave
fwait
and
xor
sbb
mov
push
sbb
jno
xor
and
hlt
movsl
rcrb
xchg
adc
adc
add
or
or
and
imull
xchg
fwait
push
test
adc
mov
mov
and
cmpsb
pop
lret
and
cmpsb
mov
fsubs
mov
mov
dec
jle
pop
or
cli
mov
push
mov
dec
lahf
loope
jns
in
imul
push
int3
es
xor
xchg
mov
fstpt
test
add
xchg
sub
or
jmp
sub
mov
inc
add
inc
mov
mov
dec
jne
in
sbb
out
add
in
mov
pop
outsl
lds
sub
and
xor
push
lret
ss
mov
jns
mov
dec
popa
inc
adc
jo
decb
imull
lahf
fwait
lock
and
aaa
pop
fxch
mov
cmc
jno
xor
in
push
in
mov
popf
dec
sub
das
sub
inc
out
insb
mov
loop
inc
dec
into
lea
ret
ret
mov
outsb
icebp
cwtl
xor
mov
push
xor
push
test
jmp
repnz
push
stos
mov
sub
das
test
inc
es
and
xlat
pop
mov
cmp
js
cmpsb
mov
cmp
fsubrl
mov
shrb
jecxz
dec
mov
mov
jne
addr16
aad
fldenv
jno
adc
mov
jg
shrb
icebp
push
cs
lds
mov
or
lret
pop
or
xor
xchg
mov
lahf
popw
aad
aad
jp
subl
mov
push
gs
scas
insl
cmp
clc
dec
sahf
mov
insl
push
push
fistl
mov
jb
mov
out
adc
xchg
mov
jnp
add
mov
loop
xor
jle
xlat
aam
movsl
aas
mov
ds
push
bound
lahf
adc
bound
pop
es
rclb
movsl
inc
pop
and
jle
pop
test
bound
pop
mov
sbb
in
lock
insb
lds
popa
fstpt
add
aad
sub
popf
cltd
inc
cwtl
xor
inc
and
dec
sti
andb
jge
mov
fdivp
fists
pop
gs
pushaw
mov
or
popfw
outsb
out
xchg
lea
ds
iret
adc
jecxz
mov
scas
adc
add
shl
jo
inc
dec
sbb
dec
xchg
inc
cmp
adc
pop
add
mov
popf
mov
test
fmuls
out
add
pop
jp
mov
add
dec
xor
subl
addl
ds
pop
dec
bound
jno
fwait
xor
sti
mov
or
int3
shll
adc
dec
pop
sbbl
in
add
test
stos
xor
ds
cmp
popf
sub
ss
sub
out
and
mov
sub
pop
push
scas
rol
mov
xchg
shlb
sub
add
mov
mov
jae
roll
sahf
std
and
ds
ja
mov
dec
lcall
lcall
push
mov
dec
mov
add
add
rorl
and
sub
jmp
mov
xlat
std
repnz
jbe
test
sbb
dec
pop
adc
rcrb
pop
stc
shrb
cs
mov
xor
sbbb
lret
pop
rol
cmp
jnp
lds
add
sbb
mov
cmp
xor
pop
inc
cmpsl
iret
in
nop
loope
fstpl
in
jns
or
lret
repnz
loop
sbb
mov
std
push
lret
nop
or
inc
cmp
xchg
lret
data16
dec
inc
mov
faddp
pop
add
in
mov
and
orb
int
inc
das
mov
outsl
inc
out
adc
lock
push
cmpsb
test
xorb
push
sub
cwtl
jl
push
xchg
cmc
sub
jns
adcb
xchg
dec
sti
and
or
sub
add
mov
sub
sahf
pop
fs
ret
dec
xchg
sti
dec
movsb
pop
test
cmp
sarb
cmp
push
jne
in
popf
cmpsb
les
push
adc
jg
xchg
lret
pop
movsb
fs
jo
incb
lock
data16
arpl
dec
pop
cli
push
enter
in
and
sub
mov
push
or
call
jp
add
test
add
and
movsl
xor
mov
cmc
insl
xor
test
imul
sub
jns
repnz
adc
cmp
lea
mov
mov
out
call
mov
repz
out
cmp
icebp
sbb
dec
fldl2e
test
add
stos
shlb
push
ljmp
clc
out
xorb
in
mov
push
and
jecxz
and
sbb
and
jb
push
test
cmpsl
ret
pop
fwait
shl
testl
push
adc
inc
and
mov
push
xchg
xorl
mov
imul
cmp
lret
out
cmp
or
adc
orb
stos
mov
leave
mov
div
xor
addr16
dec
jns
stos
or
stos
rclb
adc
xlat
cmc
sbb
xchg
bsr
mov
ss
ljmp
loop
pop
mov
xorl
fbstp
and
sub
popf
pusha
icebp
lret
xchg
or
popa
in
xchg
mov
enter
int
pop
mov
je
xchg
fsts
sbb
inc
roll
gs
mov
inc
mov
lods
lcall
in
xchg
inc
adc
cli
shll
stc
int
or
xchg
lret
jbe
repnz
in
dec
enter
int
xchg
hlt
cltd
or
insb
cs
aam
add
jge
es
mov
push
call
add
enter
sub
sbb
jno
dec
sub
data16
xchg
popf
jnp
xor
mov
mov
and
bound
sahf
cld
mov
cmp
stc
shll
xor
jns
xchg
fstsw
shlb
xor
int3
jle
fcoms
xchg
lret
sub
fbld
and
pop
pop
push
dec
mov
mov
rorb
mov
push
stc
or
fsts
add
or
rorb
inc
jmp
push
out
jecxz
sub
imul
mov
mov
dec
add
stos
and
dec
pop
push
cli
icebp
sbb
pusha
lods
ficoms
xor
and
aad
jmp
mov
lea
inc
xchg
push
jecxz
ja
test
cli
fs
and
cmpsb
jns
test
xlat
cmpsl
call
jne
or
adc
jge
js
push
jb
push
mov
mov
fisubs
sub
test
sbb
add
loope
fsubs
cmpxchg
fisttpll
or
inc
enter
dec
shrl
jmp
repz
icebp
dec
inc
divl
sahf
mov
out
popa
mov
iret
jge
mov
sbb
test
xor
pop
insb
or
mov
mov
jae
scas
push
outsl
leave
sbb
sbb
js,pn
lea
mov
and
pop
pop
orb
inc
jns
arpl
lock
ljmp
xchg
pop
lret
arpl
adc
sub
and
dec
push
fildll
pushf
das
mov
shll
data16
leave
adc
jmp
sbb
in
int
sub
sbbb
mov
imul
pop
push
add
es
push
stos
adc
push
cmp
bound
bound
fsubp
push
fisttps
sbb
test
ficompl
std
mov
faddl
in
les
movsl
cs
inc
adc
lods
push
push
sahf
mov
and
mov
inc
sti
mov
cli
rolb
rclb
or
jns
ret
shl
mov
adc
mov
add
movsb
gs
xchg
fdivrl
into
xchg
push
fcmovb
fs
and
scas
out
shlb
ljmp
scas
mov
adc
xor
or
fbstp
push
mov
leave
adc
popf
pop
es
jmp
dec
iret
les
repz
std
mov
sbb
mov
jp
cmp
fstps
mov
and
adc
daa
lret
adc
pop
jp
fwait
xchg
imul
jb
or
xor
mov
rcrl
inc
pop
sahf
cmp
scas
xchg
xchg
xchg
scas
dec
or
mov
push
movsb
mov
cmc
call
nop
dec
inc
xchg
and
inc
mov
arpl
and
aam
mov
sbb
lods
aad
inc
lret
inc
insb
fiaddl
sbb
sbb
decl
xchg
jge
mov
inc
repz
in
loope
out
repnz
in
testb
aaa
xchg
std
cmp
push
add
setb
js
cmp
mov
mov
in
lcall
fsubrp
jns
cmp
xchg
mov
or
xchg
and
faddl
cli
fcompl
out
scas
sbb
sub
int
testb
cmp
adc
scas
mov
pop
enter
inc
out
or
cmpb
in
mov
popa
push
dec
push
jno
mov
shl
ljmp
fidivl
xor
pop
xchg
mov
or
int
and
shrb
mov
inc
lea
repz
mov
jb
mov
inc
xor
mov
add
and
push
adc
inc
sbb
fnop
shl
inc
int3
out
ljmp
jbe
enter
push
sub
fisubrl
fisubs
push
push
add
rcll
fdivr
popa
push
dec
jp
pop
jb
jmp
les
xor
mov
insl
jno
lret
mov
and
outsl
add
sbb
push
mov
imulb
fpatan
in
xchg
stc
rorl
or
outsb
xor
hlt
roll
addb
cmp
and
ds
ljmp
mov
sbb
mov
int
mov
add
shr
fcomps
add
pushf
aam
adc
leave
mov
cltd
dec
out
ss
aad
add
je
in
addb
and
hlt
sarb
push
jmp
sub
lock
insb
and
xchg
std
sbb
sub
dec
push
xor
test
popa
or
les
in
mul
xor
dec
jne
push
aam
int
lock
int3
inc
mov
mov
jo
inc
shrb
push
jecxz
daa
sub
jno
xlat
add
inc
loope
sahf
jno
pusha
or
push
or
cs
add
pop
ret
lods
mov
or
daa
ss
mov
sbb
jmpw
mov
pop
lahf
push
loope
std
inc
lea
leave
outsl
les
imul
hlt
sbb
mov
in
repnz
xor
lret
into
or
out
mov
je
icebp
int
dec
sbbl
xlat
sub
xor
xchg
mov
std
rcll
addr16
xor
insb
xchg
dec
mov
mov
lcall
inc
into
sbb
dec
pop
rolb
cmc
mov
ss
xor
dec
xchg
xor
jbe
cwtl
loop
icebp
mov
movsb
pusha
sub
enter
push
fistpll
cmp
sarb
ljmp
sub
fidivs
test
cwtl
add
dec
loop
add
pushf
jo
push
or
xor
and
or
and
push
jne
fidivl
xor
shlb
ss
xchg
test
nop
movsl
scas
xchg
lcall
aam
pop
jg
cmpsl
push
jle
cmc
jle
jbe
adc
cmc
addb
add
push
mov
je
sbb
sti
xchg
pop
sub
cmc
xchg
push
inc
mov
je
jns
icebp
or
pop
adc
sbb
dec
sub
iret
aam
pusha
pop
lret
xor
pop
imul
mov
xor
mov
int3
mov
into
xchg
fimull
cmp
cmp
mov
psubd
sub
xor
jbe
les
movsl
repnz
jle
lods
stos
popf
imul
mov
daa
ljmp
add
push
pop
stos
push
or
push
lret
or
je
cmp
adc
pop
xchg
add
out
push
pop
je
std
inc
sbb
lods
sbb
movsl
adc
in
fnsave
inc
les
mov
mov
and
lret
shll
movsl
jg
test
xor
mov
jno
cmc
imull
test
cwtl
cmp
and
xor
lock
hlt
leave
rol
pop
inc
lds
and
test
mov
mov
leave
cmp
adc
mov
scas
lds
js
jne
or
sub
xchg
jle
push
mov
sarb
addb
pop
sub
in
adc
jbe
lods
or
xchg
scas
and
inc
pop
cmpsb
pop
mov
mov
frstor
in
cmc
or
inc
mov
fdivl
nop
icebp
cld
movsb
and
mov
inc
pusha
repnz
fmul
cmc
jo
inc
cs
lds
aas
pop
mov
lcall
fidivl
mov
jns
and
sub
loopne
jae
inc
jmp
cmp
cmp
ficoml
inc
adc
xor
pop
xchg
outsb
inc
stc
ret
fiaddl
in
int
stos
cmp
movsl
mov
dec
outsl
cmp
or
je
add
aas
push
mul
or
jns
mov
inc
adc
movsl
push
and
or
dec
push
ret
nop
jne
les
mov
loope
xor
and
and
add
cmpsl
jmp
push
mov
jmp
hlt
sbb
and
or
aam
mov
repnz
cltd
in
insl
mov
outsl
mov
pop
test
fdivs
pop
add
stos
mov
add
inc
scas
push
push
nop
sub
cmp
jae
js
mov
out
and
sbb
ret
cmp
jns
xor
xor
scas
inc
mov
and
xchg
mov
mov
sbb
shl
mov
cmp
push
mov
push
outsb
movsb
faddp
into
jbe
test
enter
rorb
xor
adc
out
rcrb
mov
sbb
and
pushf
loopne
pop
sub
add
in
fidivs
in
adc
daa
mov
imul
inc
ret
stos
or
inc
stos
mov
fs
mov
and
mov
xor
mov
lods
adc
enter
cli
lods
cmp
jns
fistps
or
fs
pop
fs
lret
pop
jbe
mov
pcmpeqb
push
fst
cmp
ja
stc
add
les
mov
push
cmp
lds
loopne
cltd
add
sub
stos
xor
dec
lret
cmp
and
outsb
xchg
dec
sbb
inc
outsl
into
fsts
jle
ljmp
mov
or
mov
jnp
xor
mov
testb
call
mov
fisttps
push
jmp
out
arpl
jge
cmpsl
fdivl
test
or
les
and
push
stos
negb
inc
or
cli
loop
pusha
in
mov
sbb
push
jne
mov
hlt
push
mov
add
mov
call
sub
jmp
sub
dec
jecxz
pushf
test
arpl
cmc
add
sub
imul
adc
jno
push
imul
jl
insl
pop
shl
cmp
ds
outsl
pop
inc
cmpsl
jne
ljmp
gs
inc
inc
push
jns
movsl
out
ljmp
rcl
xchg
pushf
sub
xchg
sahf
mov
clc
and
sti
push
sbb
lret
movsl
testl
jle
stc
push
aaa
xchg
std
and
int3
arpl
fcmovb
sahf
movsl
cwtl
shll
pop
rcl
aad
in
fsubs
add
pop
lahf
or
sub
hlt
push
cmp
stc
adc
mov
adc
dec
add
out
pop
cltd
xor
cld
mov
cwtl
ret
js
xchg
and
cmp
sub
shl
lea
xor
lahf
lods
xlat
add
orb
cld
std
xor
ucomiss
pop
lcall
dec
sub
adc
ss
adc
andl
test
cs
filds
sbb
or
mov
mov
dec
rorl
mov
sar
inc
out
inc
jg
in
int3
rorl
add
mov
mov
je
xchg
repnz
jecxz
pop
add
xchg
lretw
push
out
pushf
mov
xchg
adc
sbb
iret
pop
push
enter
xlat
lret
pop
mov
shl
push
jg
xor
jbe
in
inc
mov
gs
push
fidivrs
pop
inc
mov
pop
loop
leave
shrb
test
stos
out
cltd
adc
jb
inc
mov
pop
jb
pop
mov
repz
jno
bound
imul
test
mov
lods
popf
inc
out
into
sub
loope
add
out
imul
mov
and
lea
sub
add
imul
jge
jge
sbb
pushf
jl
and
popf
pop
cmp
enter
rorl
dec
ds
movsl
lcall
inc
dec
iret
lahf
jp
lds
iret
jg
dec
xchg
jno
mov
jbe
pop
add
ret
dec
mov
insl
push
push
ret
xor
mov
mov
insl
mov
leave
adc
fidivs
and
jecxz
cwtl
xor
or
mov
and
or
cwtl
and
pushl
pop
aaa
out
cmpsb
stos
ja
lret
jno
sub
pushf
mov
mov
cwtl
jl
sbb
shrl
cmp
sub
testb
cmp
scas
inc
rcr
negl
fldenv
dec
stos
dec
popf
adc
mov
in
call
mov
insb
popf
les
sar
push
push
push
enter
cvtps2pd
lods
add
dec
push
or
cmpsb
jecxz
test
in
dec
push
mov
sets
inc
inc
mov
jnp
orl
jae
jae
xchg
pop
mov
mov
mov
add
mov
and
mov
push
mov
cltd
mov
or
jo
jl
arpl
loop
mov
xchg
inc
out
movsb
divb
inc
fs
stos
pop
mov
and
mov
sub
in
mov
leave
or
shr
add
aaa
int
ret
js
pop
dec
adc
dec
lock
mov
lods
dec
jb
pop
test
rolb
sbb
jno
xor
movsb
mov
mov
or
sbb
test
pop
cmp
xchg
adc
es
movsb
ret
imul
pop
pop
sbb
sub
push
and
mov
lods
mov
inc
stos
lcall
cmpsl
cmc
push
inc
in
mov
cld
jnp
int
out
sti
stos
pop
loope
xchg
fwait
hlt
pop
dec
xchg
leave
ss
add
and
cli
pop
js
cmp
pusha
lock
cmpsb
push
and
pop
out
sbb
pushf
fucomi
andb
jmp
cli
pop
iret
cld
lods
mov
lret
pop
xchg
iret
lods
inc
dec
pop
mov
cli
jg
in
aaa
in
adc
xlat
in
and
jmp
mov
add
repz
shr
or
mov
mov
adc
mov
jb
out
outsb
je
outsl
add
cmp
adc
dec
xlat
int
test
and
jne
pop
repz
or
mov
fs
hlt
pop
and
and
dec
cmpsb
inc
in
orl
add
mov
add
mov
jbe
jge
jo
into
adc
movsb
lret
jns
push
mov
out
adc
mov
jbe
movsl
iret
test
mov
push
loope
mov
shr
fisttpll
sbb
test
arpl
stc
or
fsubl
push
adc
fcmovnbe
movsb
icebp
popa
gs
add
shlb
push
jle
loope
ljmp
and
mov
push
jmp
je
stc
movsb
repz
jns
sub
xchg
mov
in
jmp
je
xor
pop
sub
add
fldl
subb
jl
adc
out
cwtl
sbb
imul
negb
or
jns
cmpsb
in
lds
dec
in
cmp
dec
cmp
int
pop
repnz
fsubrl
jge
into
mov
mov
fs
icebp
pop
or
leave
adc
iret
jne
aam
into
and
adc
leave
and
rol
lahf
jns
cmpsb
jecxz
or
push
ds
je
push
daa
jo
ja
pop
std
shlb
mov
pop
jae
lock
fucom
xchg
fmul
add
test
mov
mov
pop
es
ret
fs
shll
ds
in
sbb
mov
test
outsb
mov
xchg
xchg
shlb
in
and
insl
ret
jmp
sub
cli
ret
daa
shlb
push
call
mov
sub
inc
push
stos
push
incl
pushf
adc
gs
jne
call
stos
mov
andb
mov
dec
xchg
cmc
call
addb
hlt
jno
lods
or
enter
mov
in
mov
scas
push
ds
icebp
inc
aam
cmpsb
sti
fisttpll
sbb
ss
adc
movsl
daa
dec
mov
std
pop
dec
fldl
jecxz
push
mov
lds
mov
cld
xor
pop
fiaddl
shll
mov
mov
andb
into
leave
or
arpl
mov
sti
push
mov
ret
sbb
imul
out
adc
adc
pop
mov
out
fsub
pushf
negb
and
xlat
movsl
rcrb
inc
bound
jnp
push
xor
inc
jae
jp
out
xchg
int
push
sub
mov
out
pop
mov
enter
loopne
jnp
add
cmp
hlt
faddp
mov
loope
data16
push
aas
mov
jb
rorl
and
mov
dec
and
loop
adc
imull
fcomi
dec
aad
jecxz
push
imul
sub
jno
or
popa
lock
push
jecxz
ds
sub
scas
daa
lahf
in
notb
mov
ss
out
je
lock
inc
xor
in
in
add
aam
ret
fcmovnu
inc
rcrl
icebp
push
xchg
ds
cmp
xchg
lock
out
hlt
mov
inc
int3
inc
adc
mov
and
in
mov
in
pop
in
stc
popa
add
lock
popa
icebp
or
dec
cs
ret
das
adc
pop
jmp
pop
jmp
cld
cmpb
divb
inc
divb
lods
mov
inc
ljmp
ljmp
leave
cmpsb
pop
adc
shr
add
cmpb
push
xchg
jb
arpl
pushf
push
mov
daa
loopne
test
aam
lret
mov
out
inc
sub
inc
push
not
mov
adc
iret
mov
cs
dec
add
int
lea
xor
push
ret
xchg
inc
add
lret
push
mov
fisubrl
std
js
in
mov
test
mov
mov
jbe
lods
enter
idivb
repnz
mov
lock
scas
rcrb
jo
and
add
mov
or
jle
cmp
in
mov
int3
dec
daa
mov
mov
xorl
lods
test
int
out
dec
dec
je
out
adc
fs
push
mov
cmc
mov
outsb
mov
shll
in
xchg
adc
inc
push
mov
bound
shlb
lea
mov
mov
jge
fbld
or
or
push
xor
jae
push
in
out
cld
or
mov
cs
pop
insl
ds
dec
adc
mov
inc
and
cwtl
sub
jmp
hlt
push
cmpsl
popf
adc
mov
lds
stc
push
or
jle
mov
pop
leave
das
shll
add
fisttpl
mov
int3
cmp
adc
xor
clc
inc
insl
in
xchg
xor
jle
and
lret
in
inc
sbb
outsb
xor
aad
push
mov
das
out
movsb
adc
dec
pminub
movsl
or
inc
movsb
daa
fwait
push
int3
test
icebp
shll
aad
push
lret
jmp
movsl
push
outsb
push
aad
loop
fbld
out
sub
fs
cmp
or
mov
je
push
lcall
cmp
arpl
int3
shrl
sub
leave
hlt
cmc
test
add
mov
xchg
or
cmpl
cwtl
movsb
in
sbb
dec
dec
xorl
adc
in
lock
push
xchg
loop
mov
aas
push
xchg
xor
or
mov
mov
test
pop
out
lds
cltd
jmp
pop
adc
adc
jmp
jp
xchg
aad
adc
int3
dec
in
push
mov
and
sub
loopne
pop
xchg
repnz
pop
sub
int
xchg
cmp
cmpsl
mov
add
data16
repnz
stos
pop
sub
mov
xlat
je
pop
shll
mov
mov
add
mov
sbb
jbe
jns
mov
daa
jns
or
cmp
mov
jae
les
mov
mov
sahf
insb
in
jp
jecxz
loop
std
xchg
leave
mov
push
adc
push
bnd
aas
dec
pop
xchg
xchg
mov
or
fnstenv
lahf
add
jg
in
sbb
fcmovnu
movsb
pop
push
sarb
andb
ja
lock
mov
push
rcrb
add
mov
rclb
je
push
mov
mov
es
fisubrs
gs
iret
bound
test
jbe
insb
dec
leave
sub
cltd
push
dec
xchg
jp
ds
sahf
bound
aaa
adc
aad
into
notb
add
bnd
sub
scas
in
jae
clc
add
fstl
enter
ror
in
rcll
sti
mov
xlat
les
ja
mov
push
movsl
mov
or
insl
add
mov
mov
mov
jecxz
inc
lcall
mov
add
lds
out
or
hlt
lds
je
in
mov
adc
icebp
fisttpll
sbb
movsl
inc
add
jb
sbb
push
iret
lret
cwtl
jo
cli
scas
data16
dec
fidivrl
movsb
aad
pop
roll
add
mov
cmc
shlb
pop
mov
mov
bound
pushf
outsl
fimull
pop
int3
in
jno
fidivrl
insl
xchg
mov
adc
lret
xchg
jmp
std
dec
mov
imul
in
jbe
mov
dec
xor
pushf
movsl
and
push
pushl
js
outsl
bound
lods
xor
in
les
sahf
lret
mov
fwait
arpl
addl
mov
xchg
data16
or
push
pop
outsl
adc
xchg
in
loope
fadds
dec
jne
xor
jge
inc
push
ljmp
cmpsb
jae
cmp
scas
mov
xchg
repz
inc
pop
pop
jbe
xor
repz
gs
mov
push
dec
movsl
add
and
xor
lock
mov
test
or
test
gs
pushf
add
jb
jmp
es
jne
jb
xor
sbb
inc
lds
addr16
mov
int3
sub
jb
fdivl
jbe
movsb
mov
xchg
add
sti
rol
adc
ret
pop
mov
mov
iret
inc
jne
orl
ficompl
int3
or
jmp
mov
cmc
mov
lea
in
test
hlt
mov
mov
das
jno
int3
push
mov
push
andl
inc
clc
je
pop
mov
mov
aam
mov
lret
cmp
subl
sub
xor
mov
cmp
into
sub
push
shl
xor
inc
sub
push
jg
pop
pop
mov
in
lds
stc
sarl
jecxz
hlt
mov
int
and
pop
add
mov
push
pop
cwtl
loopne
in
pop
aad
pop
cmp
mov
das
lods
jb
mov
int3
pop
and
xor
xchg
sub
fwait
ret
inc
int
into
add
ja
sahf
xchg
nop
fbstp
int3
sbb
and
and
mov
scas
shl
cmp
iret
cmpsb
mov
mov
sahf
jne
bound
in
mov
jge
call
sahf
loope
lret
cld
and
shlb
push
and
lret
push
clc
pop
add
or
or
mov
or
leave
mov
in
xchg
sub
mov
mov
ja
mov
adcb
cmp
sub
daa
fcmovu
movsl
stos
cltd
test
lahf
jns
outsb
repnz
mov
jns
lea
out
negb
push
mov
rcrl
push
je
dec
fbstp
popa
push
dec
lods
xchg
push
xor
xlat
mov
inc
mov
fsts
loop
push
push
lock
mov
mov
lret
push
xor
inc
mov
mov
out
jp
sub
jecxz
ljmp
dec
mov
cmpsl
pop
dec
inc
pop
mov
scas
ret
pop
xor
insl
test
hlt
addr16
and
insl
bound
mov
test
sarl
add
test
inc
out
testb
ficoml
dec
inc
shlb
and
lods
lea
cmc
mov
addr16
ja
and
movsb
repz
or
mov
mov
arpl
cmp
jp
rcll
lea
daa
out
xchg
andl
in
jo
or
call
gs
adc
ljmp
pop
divb
push
lods
xchg
pop
cmpsl
lcall
shrb
xchg
add
pushf
imul
enter
mov
and
test
dec
pushf
pop
lret
cmpsb
daa
int3
push
xchg
cmp
ficomps
cmp
pop
mov
xchg
push
xor
sbb
inc
cmp
aas
sub
xchg
sbb
dec
inc
cmp
mov
out
inc
dec
ja
in
adc
inc
sub
cmp
loop
mov
loopne
lock
xchg
cmp
popa
inc
and
lock
sbb
inc
or
sti
adc
push
das
mov
pop
pop
sahf
jae
jp
in
jns
loop
testb
addl
in
lock
pop
mov
pop
subb
aad
jl
fisubrs
fbld
add
jnp
js
mov
inc
cmpsl
mov
and
jle
hlt
inc
mov
cwtl
cld
push
cmp
addb
lea
nop
adc
push
insb
hlt
std
push
xor
rdmsr
sub
test
jb
fnsave
hlt
testb
jae
repnz
pop
ret
dec
sbb
push
jno,pn
and
xchg
cmp
andl
mov
pushf
xor
popa
frstor
pusha
outsl
jl
pop
push
push
aam
std
cmp
jns
cli
mov
cltd
or
pop
jae
add
mov
push
add
cltd
sub
loopne
and
mov
lods
mov
xchg
xlat
mov
data16
jb
lods
rclb
cmp
jecxz
hlt
push
xchg
lds
pop
add
lods
jnp
mov
out
out
cmpsb
pusha
pop
jo
sub
jno
lock
sahf
into
sbb
dec
arpl
mov
cmp
push
push
cmp
or
dec
int
insl
cmp
out
out
in
xor
movsb
adc
push
or
add
iret
nop
incl
popf
cmp
jb
or
adc
fidivrl
push
mov
and
cmp
sub
add
repnz
push
lret
clc
cmp
lock
outsb
sub
cltd
cmp
call
and
sub
dec
and
loope
push
mov
xchg
ret
sub
pop
dec
adc
lcall
addr16
xchg
xor
mov
mov
notb
rcpps
test
pop
loope
jge
scas
add
and
cmpsl
xor
stos
leave
adc
in
lods
jns
mov
xchg
cmpsl
je
cli
dec
xor
inc
test
push
lahf
sbb
mov
fwait
sbb
sbb
adc
in
and
movsl
lock
fisubl
mov
xor
dec
cld
inc
add
pop
inc
ss
flds
jg
fidivl
cmc
mov
in
sub
add
jle
std
cwtl
mov
or
mov
not
or
mov
and
mov
stos
fmull
dec
inc
ret
mov
push
test
arpl
add
repz
add
imul
jecxz
xor
jo,pn
shl
enter
sbb
sbb
xchg
das
je
dec
mov
jb
sub
or
pop
shll
xchg
shl
mov
push
aas
inc
adcl
addl
dec
in
sti
out
mov
mov
in
cmp
lods
adc
lea
sbb
cmp
pop
lds
dec
sbb
and
imul
adc
aad
int3
xchg
fcom
push
push
test
inc
popf
mov
mov
scas
cmp
fwait
and
pop
adc
enter
adc
sarb
int
pop
jnp
loope
xchg
jnp
popa
sahf
jno
aad
sbb
mov
dec
icebp
cld
cld
rorl
aad
xor
jb
fmuls
adc
sub
pop
and
pop
mov
out
adcl
inc
in
inc
lahf
lods
pop
dec
and
pop
push
shlb
pop
pop
push
aas
jno
sti
stos
push
mov
call
mov
testb
cwtl
gs
aas
and
jle
sbb
dec
cwtl
xchg
jl
cli
movsb
mov
clc
push
xchg
sbb
adc
lcall
test
inc
sarl
sbb
push
icebp
leave
mov
push
and
xor
test
jmp
or
jbe
test
in
clc
mov
testb
es
dec
inc
push
mov
pop
shrb
xchg
aaa
jbe
sti
sbb
xchg
push
addr16
xchg
or
scas
fwait
inc
insl
sbb
sbb
jbe
out
sahf
mov
cmp
xor
repnz
sti
cmc
inc
scas
mov
add
or
scas
outsb
popa
mov
es
push
jecxz
popf
sub
movsl
daa
mov
adc
add
push
ds
cmp
mov
clc
inc
mov
std
mov
fwait
jle
push
xor
out
adc
inc
push
or
inc
cltd
jmp
cwtl
sti
lret
or
xor
popf
xor
jmp
push
pushw
inc
in
sti
jnp
push
repnz
add
mov
and
cmp
idiv
call
xorl
lahf
js
push
movsb
mov
cmp
and
pop
sahf
popa
dec
push
jb
lods
xchg
push
movsl
sub
fdivrs
out
push
inc
std
cmp
fiaddl
or
in
js
xchg
mov
lret
sbb
aaa
dec
dec
mov
cld
inc
outsb
sbb
inc
pop
mov
fisubrs
cmp
xchg
sub
sub
pop
test
xchg
push
outsl
adc
pop
insl
jl
mov
int3
clc
mov
pop
fs
inc
dec
popw
xchg
rcrb
out
sub
je
adc
shll
push
xor
mov
mov
add
xchg
xlat
imul
sub
add
cltd
pop
stos
add
icebp
and
fucom
repz
mov
add
adc
mov
pop
es
cmp
jbe
je
into
push
aad
testb
jl
pop
cmp
insb
push
push
jecxz
xchg
stos
loop
cmc
pop
ffreep
sbb
mov
imul
inc
xchg
dec
subl
out
les
dec
lock
jns
mov
shlb
sbb
scas
push
push
push
jecxz
fsubrl
xchg
inc
push
sbb
out
cmp
iret
repnz
xchg
add
test
out
stc
int3
push
icebp
enter
inc
lret
jecxz
jle
or
mov
xchg
cld
rcll
cmp
out
or
jnp
add
mov
ljmp
add
lea
pop
outsb
out
sub
mov
insl
xchg
mov
icebp
insb
ret
in
rcr
xchg
xchg
xchg
hlt
push
movsl
lds
clc
ror
xlat
pop
cwtl
aas
dec
jo
lcall
push
pop
sarb
sub
add
in
xchg
aaa
stos
stos
int3
sbb
or
test
sbb
push
or
repz
fcomps
jmp
sbb
movsl
xor
jne
inc
imull
push
pusha
pop
es
mov
aas
lret
rol
pop
lcall
lds
sahf
aaa
mov
add
pushf
or
test
sub
add
imull
sbb
jecxz
push
xchg
fdivr
ss
sub
dec
mov
fildl
scas
das
mov
xor
xchg
push
movsb
sub
mov
cmp
mov
je
xor
cmp
xor
adc
jns
std
xlat
dec
dec
insb
and
inc
in
loop
mov
mov
and
cmp
push
or
sub
xchg
mov
cli
jmp
cltd
das
lret
ficoml
cmp
sti
sbb
lods
pop
jle
sub
lods
loope
mov
dec
stos
xchg
addl
adc
daa
in
xchg
or
test
jp
inc
loop
mov
xlat
sub
pop
cmc
pop
or
inc
out
mov
insl
sarb
out
xorb
lds
add
les
and
lock
dec
repnz
dec
xchg
scas
mov
sub
cwtl
push
adc
xchg
add
or
adc
mov
jecxz
mov
rolb
pop
repnz
pop
cmp
push
outsb
xchg
stos
mov
pop
jmp
rcrb
jo
jno
outsl
stc
mov
into
mov
loopne
dec
bound
mov
ret
inc
xor
jg
dec
ret
addb
shll
xor
shl
shll
mov
lea
and
xchg
cmc
lret
jae
loope
lods
push
adc
fdivs
shr
xchg
push
insl
or
pop
aam
jbe
push
push
push
push
xor
mov
xchg
mov
movsl
cmp
pop
cwtl
arpl
dec
mov
pop
cmp
rdmsr
and
fisttpl
call
add
mov
pop
inc
in
jl
out
jo
jae
test
sub
fldcw
arpl
icebp
sub
cmp
and
aas
xor
bound
lods
jmp
adc
and
xchg
and
mov
test
pusha
test
mov
jmp
mov
sub
pop
lcall
add
test
adc
jle
cmp
sbb
or
jmp
mov
add
aas
inc
xchg
or
xchg
or
ja
xor
insl
in
imul
loopne
jmp
pop
js
sbb
mov
pusha
adc
popa
inc
mov
add
dec
stc
into
mov
cmc
mov
outsl
xor
mov
xchg
sub
in
pop
fimull
sbb
sahf
dec
jne
sahf
int
loop
lds
mov
xor
gs
leave
rcr
lds
dec
or
insb
xor
test
cmc
add
sub
cmp
add
std
push
adc
mov
and
jp
and
sbb
pop
push
cmc
das
es
cmpsb
cmp
or
gs
icebp
mov
sub
jmp
adc
pop
mov
cmp
sahf
add
lods
mov
test
daa
add
sar
mov
pushf
mov
les
rol
in
movsb
pop
loope
xchg
mov
idiv
add
stos
pop
les
je
pop
mov
sti
orb
or
push
outsb
in
push
xor
repnz
cmp
pop
scas
rclb
orl
sub
lcall
adc
jbe
pushf
incl
shlb
fiadds
ret
out
int3
dec
out
push
je
imul
lahf
cmpsb
lret
fs
xor
pusha
sar
mov
daa
inc
xor
in
movsl
js
and
arpl
das
fs
ret
clc
subl
ror
mov
add
in
pop
mov
popf
xchg
or
jecxz
xchg
in
mov
push
mov
mov
shl
movsl
push
ret
jge
add
icebp
or
pusha
cmp
cmc
loope
cwtl
push
mov
ret
sarb
mov
inc
adc
cmp
flds
push
or
iret
lods
jb
out
xor
sbb
out
dec
ret
pop
xor
mov
leave
fdivl
push
movb
xchg
fisttpl
lods
fiaddl
adc
cmp
lods
repz
nop
gs
lret
inc
mov
push
jae
inc
cmp
jmp
movsl
popf
outsl
in
jecxz
pop
jae
jmp
repz
cmc
popa
xchg
add
mov
mov
out
inc
mov
lock
pop
bound
jge
jnp
cmp
mov
pop
scas
inc
mov
outsb
fmull
movsb
stc
jge
lods
add
xchg
iret
int3
rol
push
lcall
sahf
mov
loopne
mov
cltd
adc
xchg
jno
test
push
mov
lds
jo
inc
es
insl
out
pop
icebp
mov
mov
xor
popa
add
mov
mov
in
mov
xor
sbb
je
enter
int
repnz
and
mov
mov
int
jb
lret
inc
gs
sti
xchg
jns
mov
lods
nop
add
mov
sarb
add
pop
clc
xor
push
js
mov
jmp
daa
movsl
pop
lods
add
push
cmpsb
push
mov
cmp
cmc
test
sarb
aam
xchg
sti
adc
clc
inc
and
mov
jbe
popf
js
sbb
dec
js
scas
mov
es
mov
mov
movsl
lret
adc
sub
push
adc
movsl
cmp
jp
jmp
int3
into
imul
movsl
shll
pushf
add
jns
insl
call
ljmp
and
lcall
scas
fmuls
ljmp
stos
push
movsb
and
shl
or
or
dec
leave
push
dec
jmp
xchg
mov
cmp
adc
int
adc
cmpsb
ficoms
repz
insb
mov
push
lret
test
sarl
dec
xchg
and
pop
push
add
outsl
jmp
xchg
mov
repz
adc
hlt
lahf
repz
jecxz
pop
mov
sub
fmull
mov
jge
push
mov
pop
out
push
outsl
das
scas
sub
lret
mov
pusha
in
push
nop
pop
pop
lea
mov
stc
pop
adc
sub
lock
mov
stc
loop
or
xchg
mov
outsl
dec
ljmp
daa
push
aad
sti
sub
in
repz
push
pop
cmc
pxor
ret
shll
push
insl
lahf
mov
out
int3
scas
and
rorb
popa
xor
add
sub
sub
push
adc
mov
lds
mov
pop
lds
xor
push
add
lcall
dec
ds
jl
adc
dec
sbb
enter
insb
and
mov
ret
ss
pop
mov
jo
shll
xlat
outsb
mov
cmc
add
sbb
cs
loopne
fstpt
cmpsb
cwtl
stos
les
lea
notb
in
jne
push
int
add
or
lods
jnp
mov
into
mov
loope
les
and
cwtl
push
bound
clc
mov
mov
ja
ror
ss
xor
sbb
mov
xchg
push
mov
fimull
pop
mov
in
mov
mov
and
xor
push
sub
lea
je
dec
out
in
stc
adc
jno
or
pop
ljmp
pop
cld
inc
mov
dec
mov
das
mov
cmpsb
xchg
cmp
xchg
lret
lret
sti
jne
popa
jmp
cmc
mov
ljmp
mov
imul
pop
sahf
lods
xchg
shr
frstor
mov
stos
cld
xchg
test
inc
jp
adc
xor
testb
and
mov
mov
les
hlt
mov
add
loope
int
fwait
xchg
aam
movsl
inc
mov
fistpll
sub
add
popa
ret
mov
fistl
or
subl
andb
insb
mov
xchg
ljmp
dec
iret
test
rorw
jne
cli
jp
xchg
xor
sub
push
jge
cli
and
mov
pop
stos
insb
inc
fsub
mov
push
mov
pop
movsl
mov
mov
dec
rolb
sub
fwait
mov
test
add
mov
cmp
sub
out
push
cltd
std
call
cmc
cld
push
ja
movsb
xor
lods
ret
data16
mov
fwait
jnp
lds
movb
call
not
inc
jmp
sbb
popa
mov
pop
push
jno
insb
lret
xor
je
push
loop
ret
sub
and
inc
mov
jne
arpl
xor
pop
pushf
movsb
jmp
data16
gs
sahf
jb
push
hlt
sub
mov
sub
aam
inc
mov
pop
xor
cld
daa
or
test
ljmp
icebp
mov
mov
and
mov
sbb
mov
mov
mov
inc
mov
adc
xor
adc
rcr
notl
fdivr
mov
lret
push
push
enter
sub
mov
and
mov
shlb
cmc
scas
push
stc
orb
xor
mov
sbb
sahf
test
jbe
and
jge
jno
xlat
nop
fldt
testl
loop
divl
xchg
xchg
sbb
add
or
or
push
in
stos
or
mov
out
push
sub
mov
andl
and
push
popa
or
adc
jecxz
movsl
mov
cmp
or
adc
rorb
sub
fmull
pop
call
insb
out
pop
movsb
mov
dec
sbb
fld
push
fsubp
out
sahf
lods
push
hlt
mov
pop
mov
fildl
daa
fldlg2
inc
pop
lock
jne
mov
fmuls
dec
lcall
cwtl
mov
sti
xchg
cmc
jl
xor
pop
cmp
mov
loope
mov
sub
xchg
imul
jb
mov
inc
or
and
mov
push
inc
stos
add
pusha
aas
mov
pop
add
sbb
mov
lcall
int3
icebp
clc
jb
mov
or
jne
mov
xor
mov
outsl
into
push
dec
stos
lret
jmp
daa
repnz
mov
push
or
add
stos
jle
inc
in
mov
stos
pop
ljmp
test
mov
mov
dec
mov
addr16
xlat
dec
ret
test
dec
jno
movsl
mov
in
std
mov
add
repz
xchg
dec
xchg
jmp
mov
push
in
mov
pop
mov
loope
xchg
or
cmp
inc
cmp
and
ret
lods
sbb
jb
mov
and
mov
dec
mov
xchg
jbe
lret
pop
push
add
jae
clc
and
mov
loop
ja
hlt
mov
iret
cmpsb
add
insb
push
jge
and
cmp
pop
cmp
inc
or
fadds
pusha
dec
lret
ret
rorl
insb
xor
std
mov
mov
pop
xchg
aam
inc
hlt
pop
pop
outsl
fists
ret
push
iret
adc
lret
inc
sub
dec
mov
mov
subl
je
rorb
jb
lret
fidivl
pop
les
and
cmpsl
cmp
int
loop
outsl
and
loope
loop
scas
dec
jge
rorb
lret
aaa
sbb
mov
mov
repz
or
jns
shl
push
dec
dec
push
pop
fstpl
adc
lcall
loope
xchg
sbb
roll
jno
pop
add
dec
in
sub
loopne
jno
lret
fildl
jle
out
repnz
aam
sbb
ja
ss
cld
pop
sti
pop
inc
mov
jp
rorl
inc
adc
push
daa
sbb
inc
lahf
sub
ja
mov
mov
xchg
jmp
scas
std
xchg
push
adc
mov
and
sub
movsb
lcall
jne
mov
fdivl
sbb
icebp
hlt
loopne
test
cmp
lods
sub
mov
push
out
or
xchg
movsb
sub
push
shl
pusha
push
mov
test
and
inc
sub
pop
jecxz
adc
and
xchg
in
mov
and
mov
scas
xchg
aaa
jge
cltd
push
shlb
push
rcl
inc
xor
mov
out
sbb
arpl
in
cmpl
dec
mov
hlt
cmp
add
mov
push
pop
jg
ds
or
insl
shll
cmc
cmc
cmp
pop
repnz
cs
mov
lahf
sub
pop
test
mov
sbb
push
jne
and
lods
dec
cmp
gs
and
dec
lret
mov
mov
push
lock
scas
pop
mov
rcll
xchg
dec
pop
insl
movsl
inc
push
sbb
jl
cli
push
xchg
cmp
leave
dec
inc
or
aaa
jecxz
lahf
fdivrl
mov
jge
negl
rcl
daa
jl
rcll
int
lcall
push
nop
dec
jg
stos
xor
ja
jns
pop
jns
inc
gs
xchg
inc
jns
xchg
outsl
sbb
rorb
jae
es
insb
xor
mov
adc
cmc
leave
gs
inc
mov
in
mov
call
inc
jge
pop
add
xor
cld
ds
fimull
out
ss
cmpsb
mov
in
movlps
push
fidivrs
lret
xchg
out
sti
cmp
pop
outsb
dec
sub
xchg
add
nop
in
adc
add
jecxz
add
cld
and
mov
faddl
in
xor
jecxz
lcall
fildll
sub
jl
hlt
cmpsb
out
mull
lret
push
sub
dec
mov
mov
xchg
push
jp
mov
icebp
int
test
sbb
xor
fidivrs
mov
xor
jnp
xor
or
and
loop
add
repz
aad
iret
mov
testb
rep
fisubrl
rcll
stos
hlt
rolb
push
push
xchg
pop
cld
xor
jmp
ljmp
adc
sub
push
bound
cmpsl
hlt
mov
les
popf
or
pusha
adc
xor
repnz
pop
inc
mov
pop
inc
or
mov
pop
clc
push
xchg
ja
fldt
pop
insb
insb
add
xchg
into
pop
es
sub
pop
xor
mov
push
stos
fndisi(8087
imul
hlt
incb
hlt
cmpsb
ret
adc
ret
adc
jmp
out
inc
sub
and
xor
into
rcll
pop
xchg
xor
cmp
cmp
xchg
in
das
in
dec
lea
rclb
adc
pushw
jo
mov
adc
lds
cmp
fnstsw
sbb
out
insb
inc
pop
inc
inc
mov
mov
fld
icebp
xor
jecxz
insl
push
xchg
inc
in
or
adc
dec
or
daa
lcall
aaa
hlt
inc
std
mov
pop
movsl
in
scas
mov
fdivs
mov
and
mov
xchg
adc
mov
and
sub
mov
inc
mov
out
out
cmp
lds
inc
stos
jb
add
test
and
lahf
in
jo
mov
insl
rcll
mov
pop
aam
jmp
jecxz
lock
fwait
mov
scas
jge
add
adc
ljmp
fwait
cmp
sbb
pop
cs
jge
xchg
mov
xor
xchg
mov
aad
add
inc
loop
es
cli
mov
push
roll
mov
pop
mov
jae
cmp
rorb
stos
lahf
inc
or
xchg
lret
adc
push
mov
inc
add
loop
in
dec
xchg
push
cmc
cmc
dec
data16
pop
jb
sub
jge
pop
mov
je
mov
pusha
dec
sub
mov
push
stos
into
adc
insb
icebp
pop
test
jb
test
xor
add
data16
fs
jecxz
loope
jg
int3
sahf
cwtl
fldenv
jp
pop
mov
pop
aad
in
jge
js
jge
fdivrs
mov
xchg
jl
or
pushf
bound
push
xor
fiaddl
mov
dec
repnz
push
jb
push
add
dec
xor
lcall
testl
in
ljmp
fcmovu
enter
imul
jmp
adc
stc
xchg
inc
ss
sbb
pop
inc
ficomps
and
sbb
xlat
insb
add
call
dec
shl
fdivp
in
mov
mov
mov
adc
popa
sub
dec
mov
scas
test
xor
cmp
es
minps
dec
inc
lcall
jg
xchg
add
pop
ss
mov
je
movsl
addr16
les
in
fidivl
xchg
ret
insb
sti
lret
pushf
jl
loope
xor
lea
or
stc
jb
add
lea
fs
xchg
fstpl
sti
imul
cmp
popa
mov
ja
fwait
shll
into
xor
outsb
imul
mov
in
rcrl
pop
hlt
mov
sub
outsb
dec
ljmp
mov
dec
pop
mov
sub
mov
fnsave
mov
stos
mov
dec
negb
mov
inc
push
jns
cmpsl
daa
repnz
jle
movsb
mov
pop
inc
rolb
icebp
das
aad
mov
fdivs
mov
lea
js
jnp
xchg
icebp
in
ret
mov
add
mov
pop
xor
stc
stos
add
jo
xchg
mov
sbb
hlt
fists
jae
mov
in
lods
jge
rorl
bound
cmpsl
xchg
cmc
sarl
bound
out
inc
das
push
stos
dec
or
sub
pop
sub
jecxz
in
xchg
push
xchg
mov
jne
jno
mov
adc
sbbb
cmpsb
add
mov
int
mov
mov
outsl
pushf
jg
sub
and
iret
pop
and
jbe
test
xchg
xchg
or
pop
xchg
jle
jno
mov
cmpl
mov
push
xchg
addb
std
push
mov
mov
mov
cmp
mov
adc
xchg
adc
jne
dec
cmc
stos
dec
jecxz
pop
out
fistps
jb
test
sub
pop
repz
dec
add
andl
and
adc
hlt
pop
cld
xlat
mov
xor
fsubrl
sbb
cmpsb
cs
mov
inc
ret
fmuls
adc
mov
in
pop
lahf
push
xchg
pop
xor
rcr
xor
or
mov
xchg
adc
add
loope
in
imul
jae
add
pop
nop
and
repz
mov
pushf
pop
mov
sbb
cli
enter
xchg
mov
add
cmp
mov
xchg
shll
mov
mov
adc
outsl
daa
or
mov
jle
icebp
nop
mov
mov
pop
dec
and
xor
add
jnp
int
add
dec
sbbb
and
pusha
scas
and
xchg
cwtl
inc
rcr
shlb
dec
inc
insb
rcll
and
outsb
jecxz
cmc
and
dec
jle
lods
jmp
push
aaa
test
mov
or
and
imul
mov
lock
xchg
adc
mov
mov
mov
rcll
movsb
mov
xchg
adc
pushf
ror
cmp
xchg
push
mov
fwait
out
ret
jp
dec
xchg
es
dec
push
jbe
mov
lret
test
ds
je
gs
pop
loopne
xlat
and
xchg
pop
xor
lret
stos
add
adc
xor
into
inc
aaa
jo
loop
lock
ret
mov
in
scas
add
sub
popa
nop
inc
rclb
in
lcall
xor
or
call
jno
scas
mov
or
xchg
fistpl
and
sbb
stos
pop
ret
mov
inc
mov
push
sti
jmp
or
ljmp
push
jo
pop
inc
scas
int
jns
inc
push
fldcw
sbb
xchg
lock
mov
ja
cmp
scas
insb
xchg
xchg
mov
add
mov
push
daa
lcall
and
jno
gs
pop
xor
mov
and
pop
pushf
lret
outsb
xchg
xlat
push
fiaddl
loopne
cld
call
adc
icebp
adc
orl
incl
std
arpl
jecxz
imul
jp
shrl
push
mov
test
jmp
lahf
or
test
xchg
push
pop
js
push
xchg
in
loope
stos
push
das
jbe
adc
loopne
jns
ss
push
push
cmp
hlt
loope
test
rep
sub
imulb
in
cmp
insl
ljmp
cmpsb
sub
cmpsl
sub
and
sbb
out
inc
push
loope
adc
dec
popl
fsubrs
or
shll
call
sbb
sarb
mov
in
or
movsb
int
jge
mov
dec
xchg
nop
loop
cmc
aaa
cmp
and
int
adc
insb
push
js
icebp
in
stc
lret
inc
in
mov
mov
xor
aam
and
ds
lock
aaa
je
jmp
fldenv
push
adc
bound
jnp
dec
outsl
test
mov
out
cli
in
loop
cmp
pop
mov
sub
les
sbb
sub
insb
jae
js
pop
sub
cli
inc
jns
mov
pop
mov
cwtl
pop
xor
xchg
repz
jno
loopne
mov
rorb
sbb
cmp
push
loop
in
mov
pop
out
mov
hlt
pop
or
scas
loop
pop
push
test
repz
repz
mov
mov
fisubrl
arpl
out
mov
bound
outsl
and
mov
in
jp
adc
dec
icebp
stos
push
push
inc
add
or
jp
cmp
jns
adc
int3
jns
inc
mov
mov
arpl
or
out
sti
outsl
push
push
ljmp
pop
rcll
int3
vmovaps
pop
push
pushl
xchg
xlat
lret
daa
adc
mov
daa
push
sub
call
subl
jge
rcr
sbb
scas
xchg
in
imul
sbb
or
xchg
fisttps
jno
cmp
lock
adc
cmc
mov
insb
lds
sar
push
sbb
or
icebp
xor
addb
xchg
aaa
sbb
pop
adc
rep
jae
cltd
ret
loop
sahf
repnz
scas
or
mov
adc
dec
in
mov
inc
or
jmp
mov
insl
cmp
mov
xlat
dec
or
movsb
cmpsl
shll
fwait
cld
or
lret
or
xor
pop
scas
shrl
hlt
pop
sub
pop
push
in
insb
outsl
icebp
or
lret
scas
jno
dec
xor
arpl
cmpsb
scas
xor
cmp
test
inc
or
cltd
popa
push
adc
aad
ror
jne
loopne
and
dec
jmp
add
adc
mov
pop
ret
and
insb
mov
mov
dec
adc
rcrb
ret
jne
aam
mov
ljmp
mov
or
in
das
je
insb
inc
cltd
sbb
int3
in
dec
lcall
into
hlt
scas
jmp
divps
dec
cmp
nop
fisubrl
jbe
into
daa
mov
xor
sbb
cli
mov
lea
jo
or
pop
pushf
mov
dec
jg
mov
lret
ds
shll
hlt
bound
test
mov
call
lahf
aaa
mov
lahf
leave
xor
outsb
movsb
mov
scas
jmp
in
fldt
or
mov
int
divb
mov
lods
ja
xor
ja
cmp
iret
mov
mov
sbb
aad
or
xchg
leave
rol
pop
in
mov
pop
jle
mov
cmc
iret
fwait
lock
hlt
sub
push
or
data16
lea
push
pop
mov
sub
imul
mov
sbb
outsl
dec
and
pop
scas
mov
in
jl
popw
cmpl
int3
stc
stc
adc
scas
cwtl
es
inc
push
xor
xchg
into
insl
inc
aaa
mov
ret
lret
cs
mov
insb
stc
jg
lds
jns
push
das
shrb
outsl
cwtl
mov
adc
das
mov
sub
lea
mov
xlat
xchg
lds
fisttps
mov
fistps
inc
popf
shl
mov
jae
stos
lcall
push
das
pop
mov
arpl
popa
or
fucomip
or
les
imul
call
xchg
iret
mov
pusha
mov
adc
mov
push
lods
arpl
push
cmp
das
or
ss
hlt
lods
in
dec
mov
fdivrs
jmp
xchg
dec
and
addr16
sbb
iret
xor
mov
aam
gs
fcmovu
pushf
popf
flds
sub
call
mov
lods
add
mov
test
or
repnz
xchg
decb
mov
daa
adc
lods
cltd
lcall
sbb
mov
jg
pushf
das
mov
mov
test
int
pushf
inc
xchg
sarb
test
adc
dec
jo
scas
add
ret
les
dec
dec
stos
jbe
sti
cmp
add
sahf
inc
or
xchg
ja
dec
hlt
fcmovbe
and
les
test
je
test
add
jne
inc
cmp
mov
xor
sahf
hlt
ss
push
je
lea
mov
xchg
lcall
fldl
sahf
repnz
xorb
jle
bound
adc
repnz
imul
es
in
fsubr
movsl
in
pop
leave
adc
movsl
pop
hlt
imul
fs
sub
imul
loope
shll
jmp
outsl
fiaddl
inc
mov
into
and
out
inc
addl
xor
push
sbb
pop
insl
inc
stos
fcomps
mov
gs
mov
and
or
ret
in
or
or
int
xor
mov
dec
push
add
mov
leave
dec
nop
dec
stc
imul
les
mov
jns
jmp
lds
mov
sub
pop
mov
js
pop
jno
mov
orb
dec
cs
pushw
les
cmpsb
jbe
xorl
and
adc
cmp
fnsave
xchg
add
in
mov
mov
punpckldq
pop
pop
shlb
jle
lret
mov
or
insl
cmpsb
jo
repnz
out
mov
inc
ja
mov
dec
and
jecxz
imul
outsb
bound
push
stc
xchg
lcall
push
dec
add
or
add
lds
inc
js
insl
sti
jne
into
mov
rcl
lds
xchg
insl
hlt
xchg
dec
aaa
add
pop
ss
push
mov
bound
imul
iret
lretw
cmc
push
dec
les
pop
add
pop
out
push
js
push
cmp
or
lock
push
ret
stc
andl
and
hlt
pop
cmpsb
push
mov
adc
outsl
push
popa
subb
push
test
stos
xchg
xor
enter
jae
popf
cmp
mov
sbb
jne
testl
mov
push
and
sbb
mov
xor
dec
cli
xchg
das
loope
iret
fs
xor
xor
lds
pop
add
push
fistpll
mov
jp
lods
xchg
lods
xor
es
iret
notb
lods
fwait
push
xlat
dec
add
add
repnz
repnz
inc
xor
int3
sti
fistpll
movsl
out
int
daa
ja
jbe
cwtl
into
cmpsl
lds
mov
xor
cmp
sbb
xor
leave
inc
add
clc
rcr
data16
repnz
fldt
mov
jo
mov
mov
adc
mov
jge
adc
fmull
outsb
push
sub
inc
sbb
icebp
adc
xor
std
fs
into
xlat
stc
icebp
xorb
jle
fwait
in
sbb
or
leave
aad
jno
mov
mov
jb
int3
mov
pop
insl
jge
jecxz
popa
jb
and
out
nop
lea
mov
or
pop
jne
cmp
repnz
cmc
or
lret
ljmp
loop
mov
cld
jns
repnz
shrb
cli
cltd
test
push
pop
sub
aam
cmp
mov
cwtl
push
mov
roll
jno
adcb
pop
jmp
lock
into
sub
int3
jl
lret
jo
mov
test
out
out
dec
sub
fimuls
push
mov
inc
cmc
pop
xor
rclb
popa
lahf
mov
xchg
jecxz
and
pop
jne
inc
in
icebp
pushf
repz
ss
jp
xchg
imul
push
and
mov
insl
mov
cltd
and
hlt
incb
and
in
daa
and
cmp
neg
rclb
adc
shlb
loope
lock
movb
jecxz
add
inc
xorb
in
pop
xor
data16
repz
mov
mov
loop
inc
leave
subb
xchg
cmp
fdivrp
scas
fldenv
imull
in
shrb
jno
mov
lds
jne
fs
sbb
cwtl
hlt
push
or
ds
pop
xorb
dec
push
add
das
lret
inc
shll
outsb
mov
sub
jg
dec
add
jle
ret
outsb
or
xchg
fiadds
sbb
cmc
inc
push
dec
add
jbe
loop
frstor
dec
mov
mov
jno
mov
fsub
addb
gs
push
adc
jbe
jne
insl
shlb
mov
in
mov
sub
sub
mov
stos
push
andb
loopne
mov
ds
xchg
push
outsl
lods
loopne
jns
xchg
cwtl
dec
pop
ds
jno
fsub
lret
ret
repnz
push
mov
pmulhw
mov
cmp
add
adc
insb
in
xlat
or
lret
scas
jmp
inc
scas
data16
stos
sbb
jmp
mov
js
push
pop
fldt
adc
shl
aas
mov
xor
aaa
mov
movb
std
jmp
mov
call
or
pop
or
mov
jo
mov
adcl
pop
daa
inc
sbb
or
shll
loope
aad
and
or
xor
xor
jb
daa
dec
jno
mov
dec
lods
xlat
mov
xchg
cmpsl
mov
jno
pop
loopne
sahf
cmc
into
cmp
insl
pop
inc
add
stc
sbb
movsb
mov
jg
push
mov
jmp
jo
fisubs
je
frstpm(287
movsl
out
sarl
pop
mov
or
push
lea
aaa
pop
test
xor
mov
mov
adc
and
dec
cltd
enter
int
and
stos
hlt
sub
aam
pop
sbb
jno
inc
inc
push
ret
loop
mov
loope
or
inc
or
popa
scas
sub
inc
jp
adc
shlb
int3
pop
sbb
sub
outsl
cmp
pop
adc
ja
mov
cltd
xchg
bound
lcall
jbe
pop
stos
ja
pop
sub
out
dec
cmp
pop
cli
jl
test
sbb
mov
in
push
adc
test
dec
push
js
and
loope
sahf
push
mov
inc
and
lahf
inc
dec
cmp
adc
movsl
pop
leave
sub
xlat
lods
in
mov
out
jp
lahf
iret
outsb
push
fimull
insb
fsts
ficoms
push
data16
outsl
cmpsb
pause
jne
ljmp
cmpsb
mov
arpl
cld
stos
adc
add
push
popf
add
or
sub
ds
sub
inc
popf
cs
xor
xor
cmp
push
fwait
sub
sbb
pop
lods
mov
hlt
aad
test
dec
jo
loope
or
out
arpl
mov
sub
mov
or
jp
in
inc
mov
hlt
bnd
in
inc
cltd
in
rclb
out
or
outsb
repnz
subb
mov
repz
jge
lcall
std
cmp
cwtl
xchg
test
sbb
xorb
ret
ljmp
jno
cmpsb
xchg
push
insb
dec
mov
ret
cli
xchg
gs
mov
mov
jmp
je
lods
push
mov
inc
cs
jo
cli
inc
fnsave
mov
mov
dec
push
loop
subb
lea
cmc
fstp
test
lea
xor
fildll
jno
ljmp
pop
fwait
cli
mov
lcall
jns
hlt
xor
inc
and
push
out
hlt
fstp
imul
les
ret
loope
jge
div
or
inc
imul
lds
mov
adc
mov
scas
pop
aam
sbb
mov
inc
scas
mov
mov
aad
sbb
or
xchg
or
lret
dec
mov
std
fadds
mov
outsb
mov
arpl
lods
cmp
sbb
adcb
clc
jge
mov
cld
xor
incl
outsb
repz
fs
mov
cli
pop
xor
daa
cmpsl
stc
xor
push
out
enter
add
add
and
push
ss
mov
popf
lahf
pop
push
and
das
inc
fisubl
imul
shlb
into
shrb
push
int3
scas
aad
push
push
mull
cmp
fs
lea
or
mov
mov
popf
sub
xchg
add
inc
pop
add
in
push
rcl
push
stos
loop
sarl
dec
push
clc
xchg
mov
jae
ret
repz
sub
in
add
lock
inc
cmp
ret
jbe
pop
adc
popl
mov
inc
push
add
loope
mov
out
into
cli
jo
or
in
mov
outsb
pop
dec
jmp
jbe
dec
push
xchg
cmpl
fsubs
or
sub
inc
lea
clc
dec
movsl
in
jae
fldt
pop
int
rorl
lcall
or
fistpl
mov
out
mov
sub
cmp
dec
sbb
inc
sub
sub
pop
in
sbb
aaa
push
in
sti
jecxz
mov
jmp
jecxz
arpl
mov
fsubrp
jnp
xor
call
push
fldenv
mov
push
icebp
call
outsl
sarl
addr16
cld
addr16
sti
jae
out
ret
sbb
pop
inc
pop
mov
adc
adc
pop
sbb
dec
pop
lcall
daa
int
shl
adc
fmull
mov
sbb
sub
pop
sub
fstpl
fwait
loope
jbe
rol
or
and
pop
push
and
daa
push
jmp
lahf
je
sub
leave
leave
and
mov
sub
dec
mov
mov
std
sub
cmc
push
jns
lcall
hlt
and
addr16
les
loope
push
mov
in
adc
cmp
xor
aad
lock
nop
les
aad
ret
in
inc
test
or
cwtl
and
xchg
insl
sbb
stos
mov
ret
es
xor
test
in
aaa
loopne
js
stos
cmp
shrl
sbb
mov
popa
cmpsl
int
cmc
cli
mov
jne
sbb
inc
mov
xchg
jecxz
movsl
push
and
jne
adc
in
jp
and
mulb
out
testl
mov
jns
and
add
dec
test
aad
bound
std
es
dec
ret
cmc
hlt
ds
or
xor
add
imul
mov
jmp
pop
add
add
push
cmp
adc
lds
cs
jge
mov
pop
je
pop
cmpb
repz
pushf
test
xor
mov
jge
and
jns
pop
jne
adc
mov
cmpsb
mov
cmpsb
dec
repz
jb
shll
cmp
mov
or
adc
dec
mov
call
cmp
xor
ss
mov
pop
shrl
pop
pop
push
mov
scas
dec
testb
dec
pusha
out
sub
je
icebp
push
dec
xor
sbbl
shlb
mov
sub
mov
mov
inc
sbb
in
and
out
mov
popa
shll
out
mov
inc
lcall
or
jecxz
das
mov
repz
dec
pop
ret
mov
stc
bound
mov
xor
bound
mov
jns
in
adc
jb
fcompl
inc
jecxz
std
mov
push
cli
daa
add
iret
jmp
and
js
inc
or
in
in
and
sub
in
stos
jns
pop
pop
out
add
xchg
cmp
xchg
jo
add
add
fxch
jg
mov
xor
sbb
sti
popf
push
pop
mov
int3
jmp
xchg
rclb
stc
and
xor
mov
hlt
lcall
add
mov
xlat
push
insl
in
xchg
adc
loop
dec
in
in
addr16
xchg
inc
ficompl
jne
cmp
loope
subb
loop
repnz
xor
inc
mov
jns
adc
xchg
loope
aad
jno
cmc
dec
push
arpl
fdivr
out
sahf
jmp
pop
loopne
bound
fsubrp
inc
bound
mov
mov
push
pop
imul
and
jg
data16
pop
xor
mov
and
mov
add
repz
out
adc
call
mov
loope
das
and
dec
jnp
dec
xchg
mov
fs
stos
pop
add
dec
xchg
and
xchg
adc
push
jbe
idiv
and
in
loope
enter
xor
outsl
or
add
mov
cmp
adc
xor
lret
inc
aad
repz
repnz
mov
inc
push
lods
clc
popf
push
int3
mov
jno
sub
mov
aam
pop
xchg
lds
roll
mov
and
lret
sbb
pop
xchg
mov
mov
sub
dec
mov
adc
lahf
lods
testl
insl
jmp
xlat
insl
sub
fs
mov
in
mov
leave
mov
js
mov
enter
iret
in
pop
mov
lods
xchg
jbe
xlat
add
ljmp
not
cmpsb
notl
int3
cmpsl
add
mov
dec
popf
mov
dec
xor
in
sti
test
add
inc
cmpsl
mov
negb
int3
mov
mov
sub
and
mov
or
mov
sub
xchg
frstor
sub
nop
xor
fmuls
jle
loop
test
xor
test
sub
movsb
push
or
sbb
dec
mov
or
in
arpl
push
mov
lock
inc
fldt
and
mov
xchg
ds
sbb
push
aad
fldl
hlt
popf
mov
mov
jo
sbb
loopne
shll
adc
sbb
int
pop
push
scas
mov
movsl
push
mov
pop
loopne
pop
cmc
push
insb
lcall
or
stos
mov
mov
and
xor
in
in
mov
lods
dec
sub
pop
sti
mov
sbb
cmovl
xor
iret
pcmpeqd
or
cmc
pop
mov
in
lret
add
loope
enter
inc
mov
test
lods
les
xor
dec
or
push
adc
popa
push
out
sbb
lock
testb
xor
push
psubsb
std
xchg
cmp
or
aam
outsl
jle
sbb
shlb
and
mov
dec
or
or
pop
clc
fwait
pop
and
mov
pop
jne
out
xor
mov
mov
cld
out
jo
movl
pop
xor
cmp
test
fs
push
roll
push
push
adc
negb
les
sbb
mov
inc
pop
fs
loop
push
cs
mov
mov
cld
rol
es
adc
inc
das
pop
loopne
popa
sbb
mov
lds
add
lret
inc
adc
xor
sbb
movsl
adc
iret
push
bndstx
mov
mov
jmp
subl
test
jl
xor
fadds
lret
insl
in
push
js
xchg
into
pop
ret
push
aaa
xchg
or
mov
or
insl
pop
jb
lahf
fistpll
data16
cmp
stos
ret
push
int3
lock
push
xlat
dec
stc
sahf
lods
idiv
xchg
cmpsl
sbb
imul
iret
cltd
addr16
fcoms
dec
int
ret
dec
out
loope
jle
aad
adc
cmpl
imulb
dec
xchg
cmp
mov
pushf
xorb
ret
and
aaa
out
pop
lret
enter
mov
cli
fs
ja
int
xchg
xor
bound
mov
cmp
movsb
mov
dec
out
addr16
leave
mov
add
mov
cmp
das
in
mov
jecxz
xchg
dec
outsl
out
inc
jb
sahf
adc
rcrb
xor
xlat
pusha
jno
fsubrs
out
icebp
test
xchg
fiaddl
lods
adc
mov
int3
jp
scas
adc
adc
sub
push
xor
scas
cmp
or
xor
and
mov
dec
add
hlt
xchg
fmul
cmp
mov
and
mov
adc
pop
sbb
call
mov
lea
les
int
jge
mov
out
xor
bound
mov
std
xchg
mov
scas
cmp
mov
decl
insl
insl
loop
push
outsl
scas
push
pop
jae
push
cwtl
loopne
cli
aam
push
idivb
dec
add
mov
or
out
repz
add
inc
cmp
xchg
lea
jns
clc
xchg
dec
xor
cmpsb
shrb
lea
mov
stc
cltd
scas
loopne
and
mulb
sahf
aad
or
nop
dec
adc
ret
lcall
cld
repz
jp
add
xchg
fdivrs
test
imul
sub
jle
sub
aas
cltd
pop
xchg
mov
mov
popa
aaa
in
or
out
push
mov
insl
data16
das
cs
mov
mov
mov
cmpsb
push
out
int3
xchg
gs
inc
inc
sub
xchg
lock
xchg
sub
ret
stos
ret
jno
and
or
stos
push
pop
adc
mov
decl
sub
pop
movsl
test
push
int3
jns
mov
in
jp
andl
les
out
dec
mov
mov
jle
ljmp
sbb
push
loop
mov
scas
sub
cwtl
ds
mov
enter
mov
lock
and
mov
sub
dec
sti
inc
sub
divb
arpl
mov
push
pop
test
dec
dec
int3
aaa
push
fbstp
dec
sbb
or
pop
jno
in
repnz
and
lods
aaa
repnz
mov
mov
pop
mov
movsl
mov
inc
push
arpl
adc
and
loopne
cmpsl
or
rclb
cmpsb
repz
in
jmp
icebp
cmpsb
jnp
pusha
mov
lods
mov
cld
rcll
mov
sti
or
dec
push
loop
nop
and
loope
pop
ds
dec
dec
movsl
cwtl
jmp
enter
imul
icebp
push
and
fistl
cmpsl
icebp
in
pushf
hlt
fwait
rcr
rorb
in
adc
stos
lock
push
test
das
mov
cmp
adc
cwtl
push
pop
mov
add
loopne
mov
adc
push
dec
xchg
outsl
inc
test
cltd
nop
sub
in
jb
cmp
ja
xchg
push
or
add
sub
fst
pop
mov
jge
xorl
sbb
cmc
xorb
jmp
int3
mov
and
int3
xchg
mov
jb
rol
pop
xor
dec
sub
or
fwait
rorb
jle
movsl
pop
xchg
jb
fdiv
mov
dec
lcall
fnstenv
repnz
lret
sti
or
daa
icebp
test
pop
gs
lret
xchg
popa
mov
stc
loop
inc
mov
mov
nop
jno
inc
mov
jg
push
lds
andb
insb
cmp
dec
mov
lods
lcall
and
loopne
lods
cmp
in
and
mov
in
daa
inc
inc
mov
out
push
sahf
pushf
aaa
cvtdq2ps
mov
or
outsl
fistps
ret
fisubl
pop
aam
arpl
movsb
loope
mov
shl
pop
mov
hlt
jmp
in
mov
lcall
mov
ret
inc
push
sbb
jle
xchg
mov
rorb
in
pop
pop
dec
mov
push
andl
adc
dec
dec
xlat
dec
out
lds
sbb
xor
shll
cmp
push
rorl
fisubrl
pop
jns
mov
pop
cmpsl
movb
loopne
adc
cs
mov
mov
adc
jnp
loope
sarl
lods
lods
mov
ljmp
dec
jno
repz
adc
add
adc
cmp
data16
ds
inc
lcall
shl
gs
ret
xorb
jp
enter
test
lds
add
cld
sbb
hlt
cmp
les
aaa
leave
lea
repz
ficomps
pop
mov
sub
scas
ficompl
xchg
loop
ret
push
and
rclb
xor
mov
dec
push
cmc
icebp
mov
pop
mov
push
inc
push
xchg
cmc
sub
push
adc
les
dec
and
mov
jmp
data16
mov
push
not
out
xchg
aaa
call
hlt
jge
loop
pop
ljmp
jae
and
xlat
clc
xlat
push
outsb
xor
out
adc
adc
and
mov
mov
icebp
insb
loopne
nop
clc
shlb
dec
call
and
mov
in
jns
std
enter
rcrb
js
inc
daa
add
pop
imul
lcall
movsl
add
icebp
sub
or
pop
arpl
xor
adc
sbb
in
xchg
mov
arpl
rcl
push
das
lea
and
out
lret
adc
mov
adc
je
in
arpl
cmc
fdivl
fldt
nop
mov
dec
cmp
cltd
mov
out
add
push
jmp
and
fcmovb
pop
xchg
xchg
mull
mov
ja
subl
test
mov
jle
jne
loop
je
push
jecxz
bound
icebp
mov
arpl
stos
dec
cmp
fnstenv
jno
inc
ss
push
mov
mov
sub
repnz
fldcw
adc
mov
mov
mov
fwait
gs
out
jg
mov
push
mov
sbbb
xchg
adc
lock
xchg
pusha
push
mov
in
repnz
mov
jae
lds
addb
iret
inc
cmp
xchg
out
inc
aas
mov
adc
dec
popa
mov
es
das
call
fnstenv
stc
pop
xchg
sub
test
pop
jmp
in
xchg
sbbl
sub
xchg
xchg
loopne
mov
inc
jmp
and
cmpsl
mov
rolb
fs
xchg
mov
fstps
into
in
adc
jno
and
jp
pop
dec
in
inc
jns
dec
pop
lret
sub
push
lret
cmp
sub
andl
adc
pop
jb
cmpsb
xor
dec
and
fsubrs
jae
stc
mov
ret
in
xor
stos
jns
stos
inc
insb
sub
std
pop
outsb
lods
xlat
dec
loope
sti
jl
call
fs
lret
xchg
xor
add
xlat
mov
push
or
outsl
adc
add
lea
rcrb
push
jo
jle
loop
xor
int3
int3
nop
lds
in
xchg
xor
and
or
push
addr16
dec
rcr
aaa
out
inc
testb
jb
gs
dec
cmpsl
sub
in
and
mov
mov
repz
fidivs
push
jge
adc
ja
mov
jg
ljmp
and
jnp
pop
in
icebp
gs
in
mov
ljmp
push
pop
and
std
push
cmp
rol
cmp
pop
xchg
rclb
cmc
push
mov
push
stc
jae
loop
repnz
fdivp
push
add
inc
out
xor
jmp
cmc
push
outsl
shll
mov
push
clc
cmc
mov
dec
loope
mov
mov
or
sub
inc
insb
pop
repz
sub
add
cmp
push
sbb
mov
pop
jle
fs
cli
xchg
and
stos
mov
xor
inc
inc
lock
xchg
shll
dec
lock
ret
push
sub
push
fcmovb
mov
adc
or
insl
pop
pop
and
cmpsb
scas
pop
mov
leave
lcall
shrb
ja
shl
stos
cmp
sbb
mov
mov
shl
mov
stos
out
stc
push
xchg
insl
out
shl
pusha
xor
adc
mov
fs
popa
test
scas
dec
jmp
cld
mov
mov
mov
inc
jnp
jle
jno
cmpsb
les
push
sahf
out
jae
adc
les
movb
in
sbb
in
lock
addr16
sahf
movsl
dec
sbb
ret
fsubl
cld
xor
in
dec
out
cwtl
aam
xchg
sbb
jo
popf
bound
sbb
int3
shrb
gs
movsl
call
sti
jae
jnp
adc
loope
inc
push
push
jecxz
xor
push
jp
outsb
mov
cwtl
or
imul
andl
int3
movsl
clc
inc
lcall
push
loopne
lret
mov
jmp
xchg
and
pop
push
xchg
jnp
mov
sbb
out
cmpsb
adc
mov
mov
mov
int
insb
mov
insl
stc
xchg
push
xor
mov
cmc
jne
mov
dec
aam
push
push
mov
add
cmovns
gs
mov
or
xchg
jb
mov
aam
std
sbb
mov
test
push
and
psubw
popf
cmpsb
inc
pop
xor
bnd
in
aaa
push
movsl
and
jp
adc
ret
push
and
mov
mov
leave
and
or
bound
clc
adc
call
lds
pop
mov
ret
imul
fisttpl
xchg
inc
inc
or
loope
je
pop
mov
bound
jmp
dec
stos
jbe
out
lahf
mov
int
and
popa
nop
insl
xchg
push
mov
lods
daa
sub
push
or
std
jge
push
lods
add
jne
mov
sub
adc
inc
adc
add
aam
mov
outsb
and
mov
loop
les
lcall
sub
mov
imul
or
test
dec
icebp
xchg
add
pop
rorl
stc
sub
dec
xor
ffreep
nop
dec
les
gs
sub
movsl
inc
rcrl
sub
inc
xor
mov
stc
lcall
pop
sti
clc
fbstp
dec
mov
stc
lock
shlb
mov
jno
test
pusha
push
pop
lea
scas
sub
mov
add
rcrl
es
fidivl
pop
fstl
xor
ja
ja
call
lds
xchg
jo
aad
aam
adcb
shl
mov
js
xlat
dec
insb
aas
cmp
xor
filds
vmovupd
fstl
xor
js
test
nop
cmpsb
xlat
cmp
and
push
push
mov
sub
sbb
dec
loop
fstpt
cld
sbb
push
push
mov
sti
mov
pusha
sbb
out
lods
movsl
and
cmp
es
mov
adc
cld
movsl
push
movhps
loope
stos
inc
or
lods
ret
jmp
pop
inc
xchg
int3
add
pop
pop
pop
pop
inc
jp
add
lahf
test
jp
outsb
in
mov
sub
push
jp
cmpsl
pop
xchg
popf
jl
cmp
cmp
xchg
inc
push
test
fcoml
xchg
insb
mov
dec
mov
jle
mov
xor
scas
cmp
decb
mov
xor
repz
outsb
mov
lds
jge
dec
mov
lret
das
daa
cmp
mov
dec
jne
sbb
shl
cmp
out
scas
xchg
mov
call
xor
faddp
stos
call
outsl
lds
add
jae
int
pusha
cwtl
icebp
jno
xchg
aas
clc
mov
pop
cmp
sti
aas
cmc
dec
orl
mov
dec
push
push
jo
fwait
cmc
repnz
insl
lods
bound
lahf
rol
loope
or
repz
decl
or
int
inc
push
divb
push
xor
push
ffree
mov
das
idivb
or
push
sti
jmp
fidivrl
xchg
xchg
testb
jle
dec
pop
addr16
inc
dec
movsl
jp
xchg
rcrb
push
adc
fildll
jmp
mov
jg
mov
xor
mov
fwait
mov
xlat
cmc
jl
repnz
mov
pop
mov
sbb
and
mov
std
xlat
shll
cmp
mov
jge
out
call
mov
mov
mov
xor
add
imul
mov
or
push
mov
sub
shrb
loop
push
jbe
stos
into
sbb
bound
sbb
inc
cmp
arpl
cli
int3
pop
cld
pusha
pop
xchg
mov
cltd
mov
orl
cmc
jg
packsswb
ljmp
xor
lea
imul
dec
mov
inc
inc
cmp
add
jmp
add
pop
movsl
dec
xor
dec
push
or
mov
sbb
push
cltd
fsubl
jne
test
std
pushf
scas
jne
fiadds
mov
je
test
lcall
mov
mov
addr16
out
or
clc
add
mov
lods
fstpt
push
xchg
or
mov
push
stos
sarl
push
lock
xchg
push
outsl
frstor
bound
test
shrl
lret
call
sbb
mov
out
mov
mov
sbb
push
mov
and
loop
cmp
test
js
ret
popf
mov
ss
loope
push
shlb
inc
xor
xor
ja
lea
dec
das
sub
sbb
push
js
mov
push
mov
or
fmull
lahf
adc
jecxz
xchg
push
mov
and
pusha
push
std
fstpl
jle
in
data16
repnz
pop
cli
cli
cltd
jl
add
shr
sbb
lods
xlat
add
lods
rclb
push
pusha
mov
test
xchg
data16
xor
xor
sbb
or
fxch
aad
pop
rsm
adc
mov
fistl
push
outsb
mov
push
loope
fisubrs
sub
push
test
fwait
pop
adc
jle
out
adc
jmp
lods
or
test
mov
das
outsb
cs
shrl
jecxz
push
int
out
and
mov
adc
and
out
jle
test
sbb
jne
movb
pop
sar
mov
xchg
pop
mov
xor
cmp
push
add
ficoms
movsb
push
mov
outsl
mov
fidivrl
shl
cs
xor
add
clc
jne
stos
xchg
dec
movhps
inc
sub
mov
pop
mov
jmp
push
cli
xchg
test
jb
ja
jno
push
or
cld
push
pop
jb
or
or
xchg
mov
inc
stos
icebp
xchg
and
push
or
shll
ja
inc
in
dec
jge
dec
xchg
sti
xchg
push
test
adc
dec
aad
and
adc
mov
xchg
std
daa
and
lret
cmc
mov
or
out
push
push
adc
jns
out
testb
out
push
lret
sub
xlat
mov
les
mov
inc
or
jge
dec
push
shlb
push
into
mov
lds
lea
mov
ljmp
push
or
icebp
test
adc
adc
adc
xor
bound
cmpsb
push
lock
icebp
sahf
push
outsb
in
pop
and
xor
pop
icebp
pop
dec
jo
fstpl
dec
setl
lods
jne
push
add
es
mov
xchg
inc
xchg
sti
idivl
pop
inc
jne
aas
cwtl
loope
lds
es
or
push
insb
and
dec
testl
shll
mov
fnsave
cwtl
popa
mov
cmp
cmp
sbb
xchg
or
add
ss
jl
xor
and
push
das
bound
shrl
pop
xlat
jae
mov
cmpsb
out
pop
repnz
mov
dec
jle
xchg
sbbl
mov
push
std
fdivrs
in
mov
mov
sbb
orl
xor
mov
push
cltd
fwait
scas
movsb
icebp
mov
iret
cwtl
jp
mov
test
ret
jne
shl
and
leave
and
lret
lock
sbb
jno
mov
je
sbb
jge
mov
cmpsl
out
jl
lods
push
mov
negb
hlt
cmc
sub
loopne
pop
fsubr
sub
xchg
pusha
sbb
inc
xor
pop
jecxz
je
test
scas
popa
mov
enter
addr16
xchg
icebp
fimull
repz
inc
push
fld
mov
jp
shr
sub
xor
or
pop
jno
roll
loopne
data16
dec
or
out
dec
mov
xchg
sbb
ss
pop
shrb
aas
xchg
pop
nop
sub
shr
pop
ljmp
inc
xchg
dec
cmovno
cltd
leave
test
fidivl
mov
in
pop
push
dec
pop
pop
cwtl
mov
sbb
push
nop
enter
sahf
xchg
mov
lcall
push
shl
mov
sbb
mov
lahf
rorl
sbb
insb
xchg
into
or
push
and
xchg
jmp
pop
mov
cmpsb
repz
mov
pushf
mov
out
inc
fildl
adc
push
pusha
fists
shl
sti
dec
repz
sbb
sbb
push
popf
mov
push
inc
das
mov
stc
cmpsl
xchg
lock
jecxz
mov
push
add
repnz
cmp
rcrb
xlat
js
jo
sub
jg
push
mov
ret
gs
ficomps
out
mov
arpl
jmp
fsubl
xor
orl
add
pusha
jg
addl
int3
addr16
sarb
jge
stos
cmc
pop
mov
lret
aas
aas
repnz
push
lcall
adc
rol
jno
sti
mov
and
gs
cltd
dec
jp
mov
stos
jmp
in
pusha
outsb
or
out
arpl
xchg
inc
jb
inc
sbb
xorb
xlat
jecxz
add
xor
mov
or
fidivs
dec
jg
inc
cwtl
bound
xor
xor
es
mov
ljmp
jp
fwait
push
jo
flds
jmp
lcall
jge
jae
inc
rorl
je
pop
in
call
or
outsb
scas
mov
int3
jg
js
dec
cmpsb
pop
fidivl
mov
adc
rcrb
scas
mov
push
push
push
js
test
and
adc
test
dec
stc
lock
stos
fs
aam
call
jecxz
pop
push
repz
add
and
or
cmp
das
jnp
mov
push
mov
call
loop
mov
xchg
mov
lcall
lahf
sbb
add
scas
rol
mov
jmp
xchg
and
ret
cmp
bound
xor
pop
jnp
jne
pop
push
xor
jmp
fistl
loop
data16
mov
mov
fidivrl
cmp
repz
rcrl
cmpsb
test
or
lret
faddl
jb
repz
les
loopne
mov
mov
scas
dec
out
cmc
pop
in
sahf
lcall
negb
cmp
rcrl
lods
gs
or
outsb
push
jb
mov
cmpb
insb
mov
test
pminub
cmp
mov
and
adc
adc
push
outsb
outsb
mov
int3
test
mov
sbb
cmc
data16
dec
dec
or
mov
mov
dec
sbb
or
in
mov
add
pop
hlt
cmp
fldt
push
stos
movsl
pop
inc
cmpsl
scas
outsb
dec
arpl
jb
jp
dec
dec
lock
or
data16
rcll
sub
icebp
popa
scas
xchg
out
pop
adcb
push
sbb
and
or
in
pop
in
xchg
jne
arpl
aam
mov
jbe
mov
fisubrs
push
push
in
pop
mov
adc
xchg
and
jmp
add
xchg
in
jo
daa
lahf
shll
xor
es
lods
jno
dec
test
pop
lret
xchg
fstl
and
mov
lds
jg
mov
pop
movsb
aas
aaa
inc
sahf
lret
sysret
cli
dec
adc
verw
sbb
das
ss
fstpl
xchg
jbe
lods
sbb
aas
in
lods
aas
inc
ja
lods
cmpsb
xor
or
in
dec
repnz
cltd
mov
lea
mov
pop
int3
repnz
fistl
jbe
xchg
neg
lret
into
aaa
iret
xor
adc
idivb
dec
cmp
rorl
xchg
leave
push
sti
inc
mov
cmpsb
in
mov
gs
insb
in
xchg
shll
jg
pop
push
data16
push
dec
call
jl
pop
pop
rolb
repnz
imul
rolb
ds
shll
enter
jno
sub
stc
xchg
cmpsb
lcall
out
cmc
inc
jb
jecxz
sarb
stc
sbb
and
jmp
fcompl
pop
loop
xchg
testl
into
push
aam
loopne
adc
movb
fimull
cmp
dec
aam
in
loope
loop
fmul
sbb
xchg
jmp
and
pop
dec
cli
addr16
xor
sbb
lcall
mov
enter
cmp
dec
stos
or
or
rolb
xchg
aas
mov
inc
pop
hlt
push
stc
fdivr
aad
jge
stos
rcl
push
nop
call
jne
fmuls
fisubs
mov
cmp
pop
rolb
mov
outsl
cs
or
je
jns
or
cmp
out
mov
orb
add
xchg
inc
cli
leave
idivb
pop
and
xchg
adc
mov
insb
pop
in
push
mov
mov
ja
in
pop
lahf
adc
and
lea
lcall
or
ljmp
pop
dec
stos
in
xchg
mov
cmc
dec
int3
jmp
pop
outsb
push
inc
bound
fmuls
jmp
fsqrt
jno
or
std
dec
mov
in
ds
in
push
jne
imul
add
ss
push
lret
adc
sub
les
fld
push
sti
jg
imul
lret
cmpsb
push
inc
sub
lea
push
pushf
sbb
push
pop
icebp
mov
out
stos
sbb
inc
popa
lea
adc
xor
dec
lock
orb
cmp
stos
jns
shrl
sbb
add
outsl
mov
and
arpl
mov
imulb
inc
mov
push
cmc
mov
mov
xchg
mov
nop
je
mov
jp
out
jg
insb
xor
stc
xchg
bound
mov
test
mov
lock
je
xchg
inc
adc
movsl
int3
ror
dec
insb
sbb
stc
jge
cli
xchg
clc
jmp
sbbb
sbb
jle
jo
xchg
sub
dec
in
lock
jno
and
pusha
les
adc
pop
mov
and
shrb
and
pop
xchg
adc
imul
mov
cmp
jmp
mov
je
and
call
pop
dec
xor
loop
in
sbb
inc
push
cmp
in
cmp
sbb
sbb
insl
insb
in
shlb
bound
popf
mov
das
xchg
lret
fsubrl
test
popa
aad
or
dec
pop
cmp
fnstsw
jp
popf
lods
dec
jb
adc
mov
arpl
scas
pushf
icebp
aas
push
mov
outsb
pop
dec
xchg
mov
mov
icebp
scas
leave
dec
pop
orb
mov
je
jae
sahf
inc
xchg
fisubrl
or
xchg
sbb
mov
mov
or
lods
aaa
or
xor
adc
cmp
hlt
lods
cltd
or
sub
ljmp
sub
sbb
and
and
lods
test
sti
dec
mov
hlt
popf
lods
js
lods
add
fiaddl
add
mov
es
enter
jl
pop
es
dec
add
cld
push
aad
pusha
mov
sub
dec
pop
push
mov
push
mov
sub
dec
mov
pop
push
push
popa
jo
pop
fwait
daa
add
xor
arpl
movsl
xchg
mov
into
add
and
or
shlb
or
pop
popf
pop
mov
lock
insl
in
cmpsb
imul
inc
icebp
mov
push
shr
add
mulps
mov
pop
test
adc
clc
xor
stos
mov
sub
shrl
ljmp
lds
int
ja
idivb
push
pop
xor
mov
xor
and
fdivrl
push
add
xchg
mov
mov
icebp
rclb
mov
pop
inc
scas
jg
cli
push
adc
cltd
in
ljmp
mov
in
mov
aam
mov
cli
sbb
pop
mov
cmpsb
dec
lods
idivl
std
mov
fstpl
shl
jmp
hlt
sbb
ficompl
in
mov
xchg
jp
cmp
loopne
dec
and
adc
or
push
pop
cmpsb
outsl
jae
fs
xchg
inc
sbb
test
aad
jne
dec
adc
out
aaa
mov
add
cmpsl
popf
mov
xor
mov
aaa
stos
into
imul
repnz
je
lret
cli
push
lock
mov
dec
dec
and
sbb
jo
cld
xor
cmp
jecxz
div
rep
es
push
cs
xlat
cmp
mov
lds
ja
push
mov
cwtl
cs
xchg
or
divb
repnz
inc
xchg
jno
mov
push
rcll
cltd
stos
out
ja
push
outsb
inc
adc
popa
gs
xlat
lret
push
cli
mov
jmp
scas
outsl
adc
ror
mov
cmp
cmp
bound
shll
jno
and
sbb
dec
pop
outsl
jl
push
and
movsl
cmp
cmc
adc
mov
mov
in
fsubs
loop
lahf
sub
es
gs
mov
adc
emms
jns
inc
aam
mov
jbe
rcl
std
and
in
ss
insb
test
les
add
das
popf
in
insb
outsl
lcall
sbb
add
jbe
mov
mov
cmp
pushf
and
loopne
jmp
testb
in
pop
aas
lahf
addr16
out
mov
popa
addl
fimuls
sub
jb
xor
mov
sub
dec
add
stc
gs
push
push
jp
in
ja
sbb
stos
jbe
mov
lods
pop
faddl
ljmp
push
out
inc
push
aas
fdivl
sbb
out
add
out
xchg
cs
cmpsb
test
xchg
jne
or
insb
pop
push
mov
jnp
cmp
inc
sub
dec
insb
jp
jns
les
push
jnp
and
and
pushf
movsl
jae
inc
xor
prefetcht0
ja
andb
insl
push
test
push
and
lcall
jmp
ret
inc
sub
aam
shrl
dec
jmp
add
xor
cmc
mov
pop
pop
and
inc
adc
pop
test
dec
sbb
add
out
xchg
sarl
fildll
testb
push
xchg
into
out
in
scas
int
dec
xor
inc
cmp
add
insb
and
daa
ret
adc
pop
push
movsb
addr16
leave
jmp
inc
sti
je
lret
dec
lods
mov
and
test
adc
lods
mov
cmpb
cs
mov
cmpsb
inc
adc
pop
insb
imul
repz
cwtl
inc
sti
pop
dec
lods
dec
dec
outsl
push
jmp
cmp
push
in
les
mov
mov
add
push
dec
fisttpll
jno
pop
or
cmc
out
cmp
call
cld
cmpsb
lret
sub
ret
push
fmuls
mov
repz
cltd
aam
je
adc
jl
cmp
xchg
out
inc
and
outsl
jns
and
or
cmc
movsb
movsb
sub
xor
stos
push
sub
xchg
adc
push
and
cmpsl
lahf
or
xchg
pop
adc
lock
dec
mov
push
lahf
sbb
movsl
mov
lds
ljmp
das
cmp
in
jmp
push
dec
jle
int
mov
not
negb
movsl
cmpsl
cs
mov
sbb
pop
inc
icebp
int3
loop
xchg
int3
mov
xor
mov
mov
push
es
sbb
push
in
jns
jmp
lods
lds
xor
imul
mov
jnp
xor
hlt
jae
into
xchg
mov
ret
inc
dec
cmpsl
mov
push
sahf
push
iret
sub
out
adc
adc
scas
popa
pusha
ret
aaa
dec
ret
icebp
jecxz
jl
pop
inc
mov
push
pop
shlb
and
push
int3
in
out
sahf
jg
pop
repnz
addr16
sti
ret
pop
lods
mov
loope
and
cmp
sbb
popf
outsb
fstl
dec
cwtl
lea
outsb
hlt
inc
sbb
dec
cmp
fdivrs
in
outsb
and
pop
add
mov
push
sar
out
jge
sub
data16
pop
mov
fcomip
mov
sahf
call
xor
mov
int
xor
and
in
adc
test
ja
mov
lods
xor
cmpsl
dec
movsb
cmp
enter
jnp
int
and
ss
test
shrl
jnp
cli
insl
icebp
mov
xor
lahf
arpl
scas
lea
popa
inc
testb
push
pop
enter
adc
xor
adc
inc
in
std
pop
add
and
insl
outsl
xchg
pop
sbb
fsts
lea
mov
cmp
scas
sbb
int3
xchg
test
ss
ja
and
cmp
outsl
add
rdpmc
adcb
nop
pop
notb
cltd
daa
mov
push
xchg
push
dec
cld
mov
ds
or
cltd
pop
mov
mov
js
mov
cmc
mov
repz
scas
inc
sar
mov
mov
dec
xchg
xchg
pop
and
das
or
out
imul
mov
sti
rcrb
dec
cmc
push
jo
xor
sbb
mov
and
xchg
insb
mov
mov
push
and
adcl
push
and
mov
test
stos
gs
adc
repz
cld
push
jo
pop
je
adc
dec
popf
das
stos
imul
gs
adc
in
xor
fldenv
cld
pop
es
mov
xchg
std
lret
ja
jl
sbb
adc
dec
sub
cs
outsb
insb
adc
das
pop
aam
and
sahf
mov
sub
icebp
mov
pop
pop
insb
sub
dec
fwait
repz
out
jecxz
pop
fsubs
pop
in
cwtl
xchg
add
lret
inc
sbb
pusha
jge
test
icebp
xchg
inc
test
stos
test
out
cmp
adc
hlt
jne
popa
je
loopne
fcoms
adc
test
pop
fbstp
mov
jno
lock
in
pop
xchg
insb
fwait
int
jl
test
int
testb
test
push
js
mov
jae
jno
sub
jno
sbbb
push
dec
jmp
loope
lea
fiaddl
filds
mov
je
cmpsb
lds
adc
or
jno
mov
out
mov
jle
das
ss
leave
or
in
ljmp
fs
into
xchg
dec
leave
cmpsb
ficoml
inc
icebp
push
mov
pop
shr
in
mov
out
push
ljmpw
push
stc
mov
outsl
dec
shrl
mov
or
lds
mov
test
mov
mov
ja
cmp
mov
lock
jne
and
add
jno
push
into
jo
or
push
mov
outsb
les
cli
mov
sti
mov
in
roll
mov
fmuls
jns
out
sar
ret
pop
stos
inc
jno
push
adc
mov
outsl
lock
rcrl
push
ljmp
mov
add
in
jmp
mov
loopne
int
cwtl
mov
faddl
push
popa
movsl
push
or
or
popf
cmpsb
push
add
iret
cwtl
in
dec
hlt
lds
in
dec
push
xor
adc
andl
mov
hlt
scas
lahf
jns
mov
mov
arpl
pop
mov
pop
pop
fcomps
std
ja
pop
mov
mov
mov
test
lods
in
mov
or
nop
movsl
jecxz
outsb
insl
jp
mov
dec
addr16
xchg
inc
fldt
mov
inc
aam
and
shr
jnp
sti
cmc
dec
les
or
mov
andb
fiaddl
imul
imul
sarl
rcl
sbb
and
std
cmp
add
movsl
pop
test
mov
inc
mov
das
sub
cwtl
cmc
jle
sti
pop
insb
cmpsb
lahf
xchg
push
mov
ljmp
test
test
push
pop
mov
pop
inc
push
sub
in
jne
push
add
mov
shl
inc
xchg
test
mov
and
push
jo
mov
fsubp
mulb
pop
xsaves
push
decl
mov
sbb
enter
in
test
mov
dec
mov
xor
pop
pop
out
sbbl
cmpsb
fxch
or
sti
mov
sub
push
xlat
aaa
ja
pop
fcoml
sub
hlt
shlb
jb
cmp
dec
push
inc
inc
stos
sarb
and
icebp
dec
ror
icebp
add
repz
subl
sub
fs
cmpsb
aaa
aas
xlat
mov
push
xor
lea
lahf
mov
loopne
repz
lock
clc
insb
not
and
cmpsl
inc
mov
sar
imul
adc
leave
fsubs
mov
xchg
aaa
test
lock
cwtl
mov
imull
fs
outsl
adc
pop
and
shll
mov
js
mov
fsubrs
mov
call
adc
mov
mov
cmpsb
add
inc
lcall
in
or
mov
xchg
mov
xor
mov
push
lods
pop
imulb
xchg
adc
jnp
sahf
jecxz
pop
imul
xchg
je
ds
sbbb
pop
mov
xor
or
les
mov
inc
ljmp
jecxz
mov
cmc
mov
or
xor
movsl
or
jl
icebp
add
jno
aaa
dec
insb
xor
ljmp
sbb
cmp
cmp
into
push
enter
inc
xor
in
sbb
cmp
ja
adc
stos
pop
inc
inc
stc
outsl
stos
dec
or
repnz
and
xor
sub
cmpl
addr16
xor
mov
dec
sub
pop
ja
and
dec
rcr
fstl
js
or
pop
in
pop
icebp
xchg
dec
outsb
cmc
fucomp
xor
pop
jecxz
lock
add
loope
adc
pop
lret
jmp
inc
andb
lret
cmp
jmp
aam
ja
stos
mov
pop
movsb
adc
mov
push
sahf
inc
mov
push
lret
dec
repz
jbe
xchg
stos
mov
loope
adc
int3
daa
adc
inc
adcl
adc
pushf
fldt
rcl
pop
fisubs
mov
or
xor
loop
scas
fisttpll
outsb
mov
pop
adc
and
fstl
pop
jg
out
mov
sysexit
in
or
jnp
out
pop
js
xor
pop
mov
sub
add
imul
jge
hlt
xor
jne
adc
imul
mov
lods
dec
scas
jae
fldt
cmp
jge
dec
xor
or
jle
bound
adc
movsl
aaa
into
jecxz
adc
cltd
jo
xchg
mov
cmp
or
fadds
add
and
add
jo
repz
pop
and
jae
mov
es
ficoms
lods
xchg
loop
int3
outsb
xor
pusha
rcr
scas
jbe
dec
ss
scas
push
ret
lock
xorl
movsl
sub
cmpsb
dec
xchg
loopne
addr16
pop
shll
xlat
punpckhbw
imulb
addr16
lcall
lea
scas
push
stos
ds
add
xchg
std
call
lret
mov
inc
mov
xchg
xor
sbb
nop
xor
into
lods
jp
and
loope
in
inc
jecxz
pusha
mov
neg
mov
xorl
adc
rcrb
in
push
dec
insl
xor
jb
jnp
jmp
js
mov
mov
push
pop
push
mov
sbb
hlt
cld
mov
xchg
push
mov
jecxz
mov
adc
vcvttsd2si
xor
ljmp
push
mov
popa
push
loope
xchg
lods
cwtl
loopne
inc
stc
cmpsl
mov
in
lock
ja
mov
rcr
mov
jb
aad
pop
pop
addb
add
dec
sub
pop
add
addr16
and
leave
dec
cld
in
dec
jns
fmuls
out
adc
movhlps
outsl
sbb
inc
test
test
pop
mov
out
jmp
mov
or
cmc
mov
test
mov
cmp
push
or
test
cwtl
add
pop
pusha
pop
out
pop
xchg
mov
iret
and
sahf
inc
insl
scas
fmull
clc
sti
mov
and
int3
icebp
pop
loopne
sbb
leave
inc
insl
lcall
push
bound
dec
jne
xchg
int
lock
mov
inc
repz
mov
jmp
pop
in
fsubrs
in
addr16
xchg
lcall
sarb
incb
xor
movsb
mov
or
lcall
movsb
or
inc
cld
or
dec
xor
mov
popa
mov
push
mov
and
cmpsl
in
push
sub
mov
rcl
xchg
test
call
sub
or
sbb
fisttpll
popa
lods
scas
or
out
mov
icebp
xor
and
sbb
push
loopne
mov
aam
dec
cmpl
fxch
sti
mov
dec
out
lea
jns
adc
iret
std
jno
fidivs
or
popf
lret
push
inc
add
xor
jb
xor
mov
std
add
std
dec
pushf
out
jbe
fwait
and
ret
fcoms
ja
push
or
fsubrp
mov
cmpsl
inc
push
out
jmp
or
mov
or
test
ja
jp
stos
das
out
cmp
inc
inc
cs
gs
das
popf
xor
lds
cmp
popf
call
repnz
jb
xchg
fiadds
sarl
mov
in
divb
push
pop
not
xor
cld
aaa
ret
jmp
push
in
mov
jno
outsb
mov
push
das
cld
pushf
lock
push
mov
icebp
je
add
mov
and
cmp
xor
in
jmp
leave
mov
fcomps
mov
cmc
shll
lock
and
fwait
jbe
sbb
fbld
add
jecxz
fsubrl
test
lea
sbb
jmp
or
cwtl
out
push
adc
loop
pop
jle
test
sahf
cmpsb
lret
outsb
loop
jo
fimuls
and
aaa
cmp
and
pop
rol
jp
pop
mov
mov
insb
pop
pop
pop
div
repz
push
sub
mov
lods
add
sbb
in
xor
fwait
lahf
or
pop
mov
test
mov
cmp
lcall
shlb
ljmp
pop
fs
out
call
mov
sub
scas
add
testl
repnz
cmp
mov
out
jge
add
pop
dec
add
stc
popf
lea
sbb
push
push
mov
lods
in
xchg
dec
pop
cmc
xchg
dec
stos
icebp
adc
xchg
pop
adc
mov
dec
jne
mull
aaa
push
pop
outsb
js
mov
enter
mov
add
mov
or
or
sahf
cmc
mov
add
push
dec
idiv
or
test
sub
lock
mov
cltd
dec
add
stos
mov
lock
xor
mov
push
and
mov
cltd
icebp
jo
push
data16
xor
jg
push
adc
lods
hlt
movsl
xor
jbe
add
jb
std
ret
sbb
pop
pop
and
or
mov
xchg
je
out
in
cmpsb
fdivrl
sbb
adc
inc
out
jns
or
pop
cmp
les
push
add
cmp
jbe
cmp
mov
inc
xchg
std
aam
mov
cs
fldl
outsl
mov
dec
out
sbb
push
fists
addl
push
jge
mov
lods
mov
mov
ret
lret
fwait
sub
in
test
in
mov
iret
cmp
add
sahf
dec
pop
jmp
jbe
jp
pop
out
sahf
xor
mov
mov
mov
subb
scas
enter
pop
fimull
sub
mov
sub
in
mov
data16
add
mov
cltd
jp
mov
addr16
cmp
nop
mov
mov
add
movsl
add
in
cmp
mov
and
loopne
lods
outsb
pusha
xlat
ret
jecxz
cs
pop
int3
into
ror
inc
jb
mov
sub
test
pusha
jle
in
loope
lcall
mov
jp
ret
fnstenv
mov
dec
leave
xchg
aaa
sub
movsl
cmp
cli
xchg
rcr
inc
stos
xor
out
ja
cmpsl
bound
icebp
mov
mov
pop
mov
pop
and
jno
insl
pop
cmp
out
fidivl
mov
fwait
mov
cmp
mov
mov
mov
xchg
gs
mov
test
mov
jbe
ja
mov
dec
jmp
or
ja
test
sbb
dec
test
push
pop
testb
inc
rorb
cmp
test
dec
pop
mov
or
jne
cmp
cmpsl
xor
mov
dec
insb
aaa
loop
dec
in
mov
or
popa
jge
loop
adc
data16
outsb
push
jle
pushl
jne
data16
mov
and
int
mov
dec
out
adc
cmp
mov
and
lret
mov
popa
or
repz
push
jae
hlt
add
mov
fiadds
jbe
sti
mov
loopne
cmp
in
push
pop
mov
mov
adc
mov
sbb
stos
enter
arpl
push
fs
hlt
cmpsl
mov
or
insb
jne
cld
dec
lods
nop
movsb
xlat
jns
mov
rcl
xchg
test
push
sub
mov
jae
fidivs
sahf
loop
or
dec
mov
adc
pextrw
call
cmc
or
pop
in
or
mov
xor
lret
cmpb
adc
jne
sbb
add
lds
push
out
call
je
adc
fidivl
pop
dec
cmpsl
aad
and
lds
fs
popa
sbb
jb
push
and
push
xor
mov
dec
shl
add
dec
adc
adc
mov
sbb
std
testb
insb
push
loop
sbb
fxtract
push
fidivrl
jge
sub
dec
jle
and
pop
out
ljmp
mov
stos
sarb
sub
push
push
inc
jmp
xor
jle
push
pop
jg
mov
dec
dec
sbb
jbe
pop
leave
in
pop
sbb
shl
rcl
fwait
mov
and
push
or
divl
loop
je
and
xchg
lret
jp
fwait
insl
sub
addr16
xor
dec
xchg
out
loopne
cmc
mov
lret
push
leave
inc
mov
mov
out
aas
jecxz
out
loopne
adc
xor
out
scas
xchg
dec
outsl
mov
sarb
jbe
and
mov
sub
sbb
and
popa
lret
mov
aam
mov
push
inc
lea
cwtl
add
dec
loop
sub
lock
jno
mov
and
dec
push
lods
xlat
fsub
mov
shl
mov
pop
ret
pushf
loop
out
lcall
mov
or
inc
out
in
push
adc
mov
hlt
stos
mov
and
and
sub
stos
sub
mov
jg
bound
cltd
xor
fstps
pop
outsl
push
xchg
lock
nop
mov
repz
sbb
mov
popa
dec
and
stos
inc
lret
cld
mov
out
and
test
rcl
test
outsb
or
adc
sub
shlb
sbb
fmull
lods
sarb
test
jl
xchg
mov
fisubl
or
es
ret
lcall
movb
sti
pop
bound
test
sub
jmp
jo
cmp
js
mov
outsb
sbb
jne
ljmp
mov
mov
inc
jecxz
idivb
ret
movsb
hlt
das
mov
push
mov
jns
add
into
scas
pop
outsb
shl
je
fdivrl
outsl
ljmp
outsb
cmc
mov
mov
and
mov
push
jp
mov
fiaddl
test
jne
int
mov
jne
sbb
adc
dec
inc
flds
mov
push
mov
imul
push
mov
mov
aaa
iret
sbb
fsubs
dec
stos
add
test
mov
pop
adc
stos
sbbl
arpl
pop
test
mov
sbb
ja
adc
adc
cmpb
jmp
sti
add
ljmp
mov
push
push
sbb
xor
add
mov
jg
inc
mov
out
loopne
inc
or
or
in
mov
jmp
ljmp
push
and
inc
popf
cmpsl
and
stos
test
lock
movsb
inc
inc
int
pusha
dec
fidivs
das
adc
jo
pusha
xchg
pop
inc
cmp
scas
int
lret
rorl
sbb
dec
and
add
sbb
push
arpl
mov
addr16
mov
jecxz
inc
lret
movsl
sub
cmp
repnz
lds
ljmp
test
repnz
dec
mov
mov
add
mov
mov
fadd
sbb
mov
test
mov
lea
loop
lret
xor
lret
mov
lods
leave
mov
xchg
inc
jmp
clc
mov
xor
inc
ror
mov
jl
test
jne
dec
mov
clc
outsl
mov
mov
insl
mov
test
iret
sti
xlat
mov
mov
daa
into
pusha
lea
xchg
into
jb
outsb
sbb
das
movsb
cmc
lock
push
iret
adc
mov
inc
fldenv
or
adc
outsl
outsl
into
lock
and
das
loop
mov
cltd
pushf
fisubrs
sub
adc
or
addr16
ret
aam
jl
cmpsb
shrb
pop
mov
jo
aam
in
sub
jae
inc
out
adcb
jb
iret
jp
orb
dec
dec
repz
ret
fnstsw
out
sub
adc
or
mov
movb
add
test
cld
or
aaa
xchg
mov
add
jg
pop
sbb
pop
xchg
pop
sar
rorb
pop
mov
movsl
add
mov
xor
mov
pop
mov
es
stos
mov
out
in
out
sub
aas
inc
cs
jl
mov
mov
lock
mov
out
stc
mov
xchg
les
adc
leave
xor
negl
repz
fists
dec
and
cli
pop
inc
mov
decl
scas
jnp
ret
xorl
mov
je
es
or
loop
clc
jb
jl
xchg
or
ficompl
cltd
push
in
inc
stos
xchg
or
inc
sbb
scas
xor
imul
and
xor
push
mov
jae
xor
dec
adc
cmpsl
mov
or
inc
and
xchg
fwait
sub
popa
pop
jne
and
xchg
in
rcll
mov
bound
jae
in
inc
mov
arpl
adc
lret
lret
jl
xlat
add
sub
dec
cmc
mov
xchg
fdivp
sbb
sarb
xchg
adc
pushf
jmp
movsl
xchg
push
cmp
jp
pop
xor
add
mov
test
sub
insb
pop
loopne
adc
xor
cmp
adc
js
les
inc
lods
jno
je
frstor
pop
shlb
push
fs
mov
jns
out
xchg
adcb
hlt
add
inc
inc
inc
scas
ret
inc
icebp
jns
in
inc
sub
adc
js
shl
or
fdivr
cld
xchg
outsb
xor
aam
xchg
mov
aas
jno
mov
push
jecxz
xor
stos
into
jae
mov
jns
mov
mov
mov
cmc
xor
pop
out
repnz
scas
xchg
mov
test
and
shlb
icebp
xchg
or
les
pop
and
stc
mov
mov
je
inc
xchg
ljmp
and
mov
outsb
pop
leave
dec
mov
cmp
stc
sbb
popa
loop
fmuls
pop
sub
mov
add
test
mov
in
fimull
mov
jns
mov
xlat
out
inc
test
orl
ficomps
popa
movsb
xor
into
imul
mov
mov
cltd
jecxz
popf
sub
xor
add
outsl
add
in
inc
lds
in
hlt
loope
and
dec
aaa
fwait
cwtl
cmp
lods
dec
hlt
cmpsb
loope
loope
cmpsl
lods
mov
std
xor
stos
xchg
add
aam
dec
shll
sbb
dec
aaa
sub
ja
jecxz
jmp
mov
pop
or
cwtl
fisubs
xchg
push
ss
mov
cmp
mov
insl
fidivs
mov
pop
xchg
aas
mov
loop
cmp
cmp
iret
dec
jecxz
jo
or
jns
mov
rcll
loop
jb
stos
xchg
fdivl
out
cmp
shll
dec
mov
jmp
out
jg
ja
inc
sub
add
adc
shr
add
mov
ss
cmp
push
pop
adc
pop
sub
pop
lods
xchg
push
mov
inc
cmp
xor
adc
in
leave
mov
stos
stc
pop
dec
cmp
mov
popf
aas
push
pusha
dec
push
iret
movsl
mov
mov
lods
aad
mov
pop
lret
sub
mov
cs
sahf
pop
out
popl
push
cmp
test
adc
mov
insl
dec
jge
mov
jbe
jl
aad
dec
stos
sahf
test
clc
adc
xchg
test
xchg
cld
in
les
mov
in
mov
loopne
sbb
pop
xor
mov
lock
daa
out
xor
xchg
dec
addl
mov
pushf
push
adc
xor
dec
rorb
dec
xor
mov
jmp
adc
stos
sub
lret
out
sub
jecxz
xor
inc
inc
out
das
xor
push
or
mov
aaa
mov
jbe
and
test
push
jne
dec
insl
rcll
fdivl
shr
xor
pushf
pop
in
loop
sbb
push
popa
scas
loope
dec
movsb
shrb
int3
repnz
xor
adc
mov
dec
aad
repnz
pop
push
lods
xchg
adc
mov
jg
call
arpl
sbb
arpl
sbb
mov
cwtl
js
dec
jb
jecxz
loope
sbb
js
push
adc
push
mov
dec
adc
fcmovne
and
mov
dec
sub
lret
push
sub
mov
sub
or
sbb
jp
push
out
in
push
adc
sbb
add
fdivrs
sbb
cmp
dec
sbb
repnz
int
xor
mov
std
push
dec
test
and
pop
pop
jge
out
push
jo
inc
aam
pusha
sub
cmpsl
lcall
mov
jp
xlat
mov
cmp
inc
add
inc
add
lock
ljmp
cld
and
ja
out
dec
lret
out
mov
xchg
mov
mov
jne
dec
dec
pusha
jae
mov
std
jae
lea
int
pop
mov
add
mov
std
push
mov
xor
fwait
bound
jbe
jno
add
mov
mov
and
cmpsb
leave
jmp
sub
push
xor
fwait
sbb
cmc
int
and
mov
adcb
icebp
inc
aaa
ljmp
ljmp
loope
xchg
add
mov
inc
sub
mov
pop
pop
int
test
cmp
stos
out
fucomip
test
insb
xchg
rorl
ret
adc
xchg
dec
add
jne
xor
lods
dec
popa
lea
and
divl
outsl
leave
and
dec
icebp
pop
adcb
push
out
lcall
sbb
dec
mov
pop
stos
pushf
imul
mov
mov
hlt
push
cli
xchg
pop
or
or
push
mov
fxch
in
call
lods
lea
in
push
hlt
fisubrs
insb
hlt
inc
push
push
and
dec
jecxz
jo
xchg
and
inc
xchg
dec
and
test
push
dec
fists
jno
mov
rcrl
push
push
xor
pop
or
cwtl
orb
xor
inc
or
pusha
aaa
mov
pop
pusha
sbb
jl
cmpsl
push
fidivl
or
lock
test
jns
and
mov
popa
ret
cmp
repnz
in
out
xchg
daa
fisttps
lods
icebp
pusha
sbb
mov
adc
mov
jae
loop
ljmp
jb
pop
cs
pushf
hlt
leave
mov
insl
ret
fnsave
pushf
wbinvd
call
out
mov
shl
fisubrs
rolb
imul
sub
movsb
pop
mov
ljmp
sub
sbb
notb
push
jge
int3
cli
stos
push
xor
icebp
call
xchg
cmp
out
shlb
lret
sti
outsl
inc
fstpt
pop
cltd
sahf
arpl
xchg
pop
mov
int3
pop
clc
dec
out
mov
test
push
lret
stos
in
ficompl
enter
mov
rcrb
push
pop
dec
and
push
std
inc
and
test
mov
lret
mov
ss
push
sbb
popf
std
pop
lds
stos
lods
and
mov
pop
sub
int
lret
clc
test
notb
xchg
or
pop
push
adc
xchg
push
int3
jmp
js
cmp
out
and
loope
cmp
fwait
in
imul
adc
jmp
cmp
testl
sub
movsl
cmp
cmpsl
jmp
popa
pop
mov
dec
stos
dec
push
lret
decb
into
fsubrs
jae
loope
pop
movb
cmc
out
cltd
loop
and
pusha
sub
jnp
cwtl
lds
mov
shl
aas
jne
loop
addl
jne
sbb
cltd
mov
insl
mov
shll
and
pop
add
ljmp
jmp
inc
movsb
xchg
mov
stos
ret
hlt
bound
sub
out
je
xchg
sbb
cmp
call
fwait
nop
idiv
mov
fildl
fiadds
add
mov
scas
inc
jmp
and
lahf
pavgb
popa
in
addr16
dec
lretw
test
loop
push
push
cmp
je
testb
inc
loopne
inc
or
cli
insb
add
sub
push
and
push
scas
not
daa
repnz
mov
stos
mull
mov
insb
push
push
testl
push
int
mov
add
cmc
mov
aam
mov
imul
js
rol
mov
cld
dec
jb
cmc
fists
sub
sub
lret
jnp
mov
out
insl
adc
loop
sub
aad
xor
adc
aas
inc
mov
sub
js
add
test
push
pop
add
scas
insl
mov
sbb
or
lods
test
lods
aad
addr16
inc
dec
pop
mov
adc
bndstx
aam
or
imul
jmp
jne
lcall
aaa
fwait
sbb
scas
popf
mov
cmpsb
inc
xor
inc
test
adc
out
mov
daa
jle
inc
das
stos
push
cmp
int3
loopne
outsb
mov
mov
aad
lahf
mov
adc
sub
movsl
das
outsb
mov
xor
repz
ds
inc
jae
imul
mov
pusha
lret
repz
bound
sahf
adc
xchg
push
movsb
into
imul
sub
test
or
rclb
and
mov
xor
or
nop
cmc
jmp
repnz
test
int
dec
jl
mov
add
mov
pop
xchg
jmp
icebp
inc
loopne
mov
fildll
pop
pop
xor
adc
sub
icebp
aad
shlb
stc
fdivrl
mov
rorb
push
and
lds
mov
sbb
icebp
dec
cmpsl
xor
push
sub
xchg
jns
jg
inc
clc
push
ret
out
xchg
fisubrs
and
leave
in
inc
inc
rclb
into
or
or
inc
xor
out
nop
or
sahf
outsb
pop
cmp
into
mov
sub
lock
and
sbb
pop
sub
dec
dec
fcompl
in
test
or
xchg
jns
mov
xchg
and
rcrb
xchg
mov
lahf
shr
mov
les
or
add
mov
fmuls
dec
adc
cmc
mov
pop
fistl
daa
insl
pop
xor
fidivl
ljmp
out
xor
xchg
push
jmp
pop
push
push
hlt
gs
movsl
push
mov
and
and
mov
mov
push
loopne
int
lods
push
mov
gs
sub
fwait
jb
test
stos
pop
notb
sub
push
and
gs
lret
divb
dec
aam
cltd
dec
push
jl
hlt
jge
jno
mov
pop
mov
fdivl
add
mov
inc
push
es
xchg
mov
jne
insb
shlb
loop
out
mov
jb
mov
pop
sbbb
cmp
cmp
mov
lods
inc
xchg
dec
lods
dec
push
add
mov
xor
stos
sbbl
iret
mov
inc
add
mov
pop
add
pop
out
jb
test
call
jge
stos
mov
pop
pop
adc
xlat
ljmp
out
test
and
bswap
or
xor
xchg
lods
shrl
loop
xorb
inc
sub
repnz
ds
mov
push
icebp
lret
mov
pop
out
popa
in
push
fimuls
shl
btsl
movsl
das
sbb
mov
cli
loopne
out
in
loopne
mov
sti
xlat
fs
pop
lahf
xor
fiaddl
stos
sub
ja
daa
or
lock
add
aam
mov
dec
inc
iret
inc
sahf
mov
daa
in
pop
xor
in
jne
leave
jmp
mov
pusha
pop
icebp
mov
inc
adc
add
hlt
leave
in
lret
stc
mov
ljmp
dec
pusha
sbb
cwtl
cs
jne
ds
ja
stos
test
enter
je
in
and
lret
imull
outsl
sbb
repnz
jae
xchg
pop
pushf
daa
adc
xorb
stos
lea
sahf
pop
mov
shlb
inc
pop
test
xchg
jp
xchg
iret
movsl
lds
and
cmc
stos
loopne
icebp
loop
movsb
jecxz
jo
jb
inc
and
push
push
lds
add
addl
push
jo
fs
not
and
ljmp
inc
fldl
stos
scas
out
mulb
in
in
or
inc
cltd
fdiv
cmpsb
pop
jmp
dec
fstpt
cwtl
or
idivb
pop
and
lods
repz
cli
dec
and
arpl
mov
inc
add
rorb
out
sbbb
cmp
andb
cmpsl
lretw
ja
pop
and
jmp
fsubrl
lahf
pushf
in
es
adc
fdiv
out
mov
lret
out
jge
jmp
movsb
xchg
push
xor
jge
in
adc
std
cmp
and
jno
stos
mov
xor
les
int3
sbb
xorl
inc
lock
test
ror
rcr
lock
pop
ret
sbbb
fbld
sub
jmp
and
jecxz
lea
fidivl
and
cmp
push
cmc
xchg
mov
fnstsw
sub
movsl
sti
push
int
push
jg
jns
dec
insl
ret
ret
fcoml
call
or
push
test
and
imul
sbb
mov
or
test
push
lods
arpl
xchg
lret
mov
mov
test
hlt
and
pop
loopne
mov
stc
cmp
and
cmpsb
jecxz
out
jl
push
mov
leave
jno
fidivs
xor
lock
mov
jmp
in
add
dec
repnz
fsubl
pop
popa
cmp
push
push
out
jbe
push
mov
add
or
hlt
dec
mov
and
sub
dec
lock
fldcw
lods
mov
ret
loop
gs
xlat
push
inc
iret
aad
lds
add
adc
rcr
jne
or
xchg
or
adc
and
fldcw
pop
outsl
mov
push
mov
push
cmc
stos
add
icebp
mov
xor
lods
inc
enter
in
mov
aam
icebp
xchg
or
sbb
movl
nop
imul
loopne
in
pop
fdivrs
into
data16
aaa
movsb
ficomps
sbb
mov
loope
movsl
fdivl
fdivr
push
ficoml
dec
scas
cwtl
gs
popf
mov
cmpsl
cmp
pop
inc
cwtl
lret
lahf
sbb
mov
inc
pop
les
jl
sbb
scas
add
orb
test
or
cli
orb
mov
push
fmulp
adc
mov
jo
ljmp
fcmovnu
stc
call
mov
mov
inc
add
xchg
in
dec
mov
mov
rcl
sbb
nop
mov
add
popa
rcrb
fsubs
fwait
xchg
lods
in
sarb
mov
jg
and
jmp
movsb
push
lcall
add
xchg
jo
push
ljmp
sub
push
scas
mov
mov
ljmp
mov
jge
pop
repz
sahf
fists
jne
adc
imul
cmc
push
aad
into
xor
icebp
loop
sbb
adc
cmp
mov
insl
and
outsl
lds
add
sbb
addl
cmp
imulb
insb
out
cli
pop
lock
int
into
fstl
pop
cmp
mov
xchg
sarb
test
call
arpl
or
ret
arpl
push
pop
push
push
sub
mov
pop
adc
imul
movsb
outsb
pop
repnz
iret
lahf
shll
jbe
data16
rcrb
shl
test
test
roll
arpl
mov
enter
dec
xor
in
std
and
pop
mov
dec
mov
or
cmc
cmp
cmp
dec
stc
hlt
push
mov
loop
sub
push
xor
adc
pushf
nop
bound
fcoms
mov
popf
out
fsubrl
pop
out
in
jne
gs
mov
mov
sahf
push
sbb
inc
jb
ja
cld
xchg
mov
shlb
insb
xor
inc
xor
sbb
cmpsb
outsb
pop
test
inc
cmp
nop
add
and
icebp
jmp
aas
jae
aad
ficompl
outsb
mov
inc
data16
xchg
in
stos
scas
lcall
testb
push
push
pushf
sub
mov
push
stc
xor
mov
mov
gs
jb
sbbl
dec
mov
cwtl
xchg
cmp
inc
push
xchg
add
jecxz
xchg
pop
mov
dec
cmp
add
repnz
cli
push
mov
jle
imul
movsb
pop
inc
mov
pop
ficoms
and
push
int3
int3
test
dec
ret
sahf
mov
std
xor
mov
xchg
adc
fisttpll
outsl
xchg
jge
clc
dec
jae
test
cld
adc
inc
pop
in
adc
or
xchg
xchg
mov
lret
adc
fstpt
xchg
das
test
nop
pop
repnz
movsl
sub
mov
xor
fsubl
insl
adc
lret
jns
xchg
xor
fwait
xchg
add
jge
cmp
lock
stc
loop
and
out
jmp
sbb
outsl
jle
gs
fmul
lods
bound
aaa
cmp
push
addr16
xlat
inc
in
sbb
daa
jb
mov
rcll
dec
dec
loopne
repnz
mov
xor
push
sarb
aam
pusha
pop
loope
push
sahf
inc
and
ljmp
add
loope
or
clc
out
push
jb
aad
inc
outsb
rol
mov
sub
jge
addr16
mov
inc
cltd
ret
fistl
out
movsl
push
lds
lret
call
mov
loopne
push
jo
jecxz
inc
inc
xlat
inc
push
push
repz
lret
rol
arpl
imul
icebp
imul
pushf
icebp
test
in
jne
adc
dec
cmc
xor
insb
jae
les
aad
in
cmp
mov
add
adc
popf
aas
out
dec
jle
mov
rolb
mov
movsb
dec
jnp
mov
insb
lahf
loopne
cmp
sti
clc
aam
mov
pop
je
enter
sahf
or
lods
push
jp
movsb
cli
icebp
sbb
pop
pop
iret
sbb
mov
rol
mov
aad
push
mov
dec
dec
out
inc
rolb
test
xlat
les
xor
mov
insl
push
mov
sbb
jbe
xchg
xchg
bound
addb
fwait
mov
mov
daa
adc
loopne
out
sahf
es
dec
jmp
push
xchg
inc
mov
enter
ja
mov
and
jecxz
xor
pushf
aad
dec
test
add
sbb
divb
mov
and
lahf
popa
push
loopne
push
dec
daa
les
xchg
popa
mov
cld
stos
hlt
pop
push
dec
loope
mov
push
nopl
insb
rorl
dec
mov
repnz
lock
inc
das
inc
fcmovne
lret
xor
mov
adc
outsb
in
add
ljmp
dec
movsl
mov
loop
dec
rclb
mov
xchg
or
popf
ds
cltd
lret
lret
fmull
and
or
mov
mov
fmuls
or
mov
adc
outsl
jno
in
pop
mov
pop
add
mov
mov
xor
mov
sub
mov
jle,pn
mov
add
outsl
mov
test
mov
in
xchg
movsb
jb
adc
insb
xor
add
ds
adc
mov
sub
mov
out
dec
pop
movsl
data16
cmpsb
test
and
mov
jge
bound
mov
mov
adc
shlb
inc
imul
inc
inc
in
aad
push
lcall
inc
pop
lret
pop
rcr
sbb
repnz
leave
xchg
aas
dec
mov
and
or
mov
jbe
cltd
cmpsl
add
ret
jne
mov
es
scas
call
jnp
pushf
popf
pushf
lret
outsl
loope
lds
adc
mov
push
loope
lahf
int
xor
mov
push
xor
call
sbb
in
xlat
jmp
mov
lds
push
jno
mov
cmpsl
lea
cltd
pop
jno
or
or
inc
and
mulb
shll
mov
cltd
cli
out
jns
mov
push
inc
sbb
out
mov
jb
insl
ja
push
pop
pop
pop
stos
inc
pusha
testl
xor
cvtps2pi
mov
rorb
out
xlat
jmp
fs
outsl
addr16
and
inc
sti
cmp
mov
pop
in
sub
mov
adc
movsl
dec
subb
dec
lea
jbe
in
fcompl
add
inc
loop
inc
stos
aaa
mov
outsb
lods
push
mov
mov
clc
repnz
mov
pusha
scas
repz
xchg
xchg
push
push
sub
shlb
aaa
push
lret
inc
xor
popa
sub
aaa
loop
in
addb
and
cwtl
dec
aaa
cmc
out
aad
sbb
ljmp
inc
call
sbb
jo
mov
push
and
insl
mov
and
mov
lret
mov
std
jno
lcall
mull
jo
outsl
mov
push
bswap
dec
aad
call
fwait
dec
and
dec
lds
out
mov
mov
add
hlt
cmp
fstps
add
popf
cwtl
jle
pop
jle
xor
sub
cmp
lds
ficompl
lret
mov
test
out
dec
sbb
aas
mov
push
cld
out
les
outsl
push
cmpsb
xchg
testl
in
imul
or
cmp
dec
out
xchg
das
test
js
scas
fcmovb
mov
mov
cmp
and
inc
outsl
pop
cmc
xor
mov
and
mov
cmp
and
mov
jno
imul
aaa
scas
fs
sbb
idivl
adc
fwait
int
cmc
cmpsl
adc
loop
out
mov
mov
insb
xchg
sub
roll
ficomps
std
popf
push
fs
push
cmp
cmpb
mov
mov
mov
xchg
stos
ret
cmp
push
xchg
out
jl
sub
mov
cmp
repnz
fwait
and
into
mov
jp
push
aad
pop
pop
faddl
xor
fwait
push
and
frstor
pop
test
std
xchg
pop
push
add
cltd
rcrl
jo,pt
mov
je
pop
ljmp
ss
push
test
inc
stos
test
lds
aad
push
fisttps
roll
adc
xchg
testl
lods
xor
jb
xchg
pushf
icebp
cmc
mov
jecxz
push
cld
dec
sub
mov
les
nop
or
jbe
ss
in
faddp
in
inc
out
mov
dec
cmpsb
popf
outsb
add
fsubp
xor
inc
jecxz
repz
repz
mov
popa
pushf
adc
xchg
mov
xor
jge
outsb
mov
dec
fs
bound
dec
stc
push
jl
sbb
jnp
jb
pop
sbb
or
push
int
and
fcmovnb
pop
nop
jns
mov
mov
mov
mov
les
adc
mov
mov
adc
mov
mov
aad
icebp
or
cmpb
mov
mov
ss
cmc
xchg
mov
ret
push
subl
pop
movsl
mov
repz
pop
int
shll
scas
cmp
subb
push
pop
sub
xchg
mov
call
inc
mov
adc
mov
stos
icebp
addb
push
mov
pop
mov
repz
enter
or
lods
adc
out
in
adc
std
test
popa
stos
mov
jb
stc
mov
lds
xor
adc
mov
hlt
jns
out
sbb
iret
xchg
testl
lret
dec
mov
notb
out
sti
fcomp
add
mov
mov
pop
xchg
cld
ficoms
cli
int
mov
not
fbld
leave
fidivrl
cmpsl
xchg
or
out
das
sub
in
adc
mov
jecxz
jg
mov
inc
adcb
cmpsl
dec
sub
xchg
movsl
jle
loopne
xor
ret
sub
aam
out
mov
mov
sub
lods
fmull
dec
add
xor
jnp
dec
cmp
mov
negb
mov
mov
or
out
adc
mov
fisubrl
mov
loope
jmp
scas
out
in
or
ficompl
mov
scas
insl
mov
mov
dec
clc
dec
and
adc
push
jecxz
dec
sub
unpcklps
sub
xchg
out
and
imul
lret
adc
adc
xor
and
lods
and
mov
cld
ja
in
in
fsincos
mov
lret
gs
in
popf
in
sbb
pop
nop
inc
hlt
jmp
call
aaa
sbb
repz
inc
jbe
mov
stos
push
orb
out
inc
add
inc
out
js
xlat
mov
jne
inc
pop
aaa
mov
call
jno
xor
subb
sub
push
inc
test
add
xchg
loopne
mov
xchg
push
lds
cmp
hlt
sbb
sti
jl
mov
out
jg
push
mov
test
xor
sbb
jae
fimuls
mov
jb
rcrb
mov
imul
mov
jno
into
jl
mov
and
int3
xlat
lret
insl
pop
inc
and
or
xchg
ljmp
jb
fcoml
shr
push
and
mov
sub
push
adc
pop
fnstsw
int
nop
mov
aam
mov
mov
push
jl
jae
pop
adc
push
out
sahf
or
je
cmpsb
in
imul
cmp
add
orb
jae
arpl
stos
or
jg
or
js
or
gs
loop
inc
xchg
pop
push
pop
mov
test
test
int3
xchg
cmc
outsl
ja
xor
mov
pop
clc
or
inc
fst
add
fadd
and
cmp
add
xor
lea
or
cmp
nop
inc
push
test
mov
insl
add
outsl
or
cmp
shlb
sub
jp
adc
xchg
xor
out
lds
or
popa
pop
cltd
jno
test
adc
ja
cmpsl
std
jb
lret
ss
mov
add
sahf
add
pop
xlat
push
ss
ret
jg
push
push
mov
push
mov
xor
mov
cmp
dec
push
movsl
mov
mov
shl
xor
fwait
add
jns
cld
adc
xor
pop
insb
xchg
ret
push
add
dec
push
pop
mov
push
and
ret
inc
jge
mov
decl
xchg
and
rcr
lret
inc
pop
cli
push
cmp
xchg
aas
js
jae
in
and
push
push
fcmovu
inc
shlb
sub
inc
mov
mov
xchg
cs
lret
pop
mov
leave
xchg
filds
fsub
mov
pop
jl
movsl
dec
xor
es
mov
dec
fimuls
cltd
aaa
ja
inc
in
add
in
inc
pop
rcr
out
call
sub
ficoms
mov
aam
sub
or
ja
dec
lock
mov
aaa
and
dec
test
cld
mov
addr16
mov
inc
mov
and
lea
xor
rcr
in
pop
xor
mov
stos
js
test
cwtl
lods
in
inc
data16
xorl
ficompl
cmp
iret
repz
shufps
outsb
sub
sub
jno
ds
out
cmp
and
xchg
movsb
fbstp
test
insl
mov
scas
fs
scas
jns
dec
vmovdqu
movsb
fwait
into
inc
test
aaa
cmp
sub
cltd
js
sti
add
test
and
add
lret
outsb
xchg
pop
mov
jb,pn
jb
sub
mov
mov
push
jno
aam
xor
cmp
lea
fdivl
stc
lds
lock
xor
dec
pop
fstps
pop
cli
insb
lock
sbb
jne
sti
fnstsw
rcr
adc
repz
jmp
fimuls
les
jae
fcmove
std
imul
sti
leave
test
ret
lret
jle
adc
mov
ds
ljmp
mov
mov
mov
jb
adc
sahf
inc
data16
outsb
mov
add
xchg
fisttps
mov
bound
test
gs
lods
dec
cmp
jle
cmpl
enter
das
dec
hlt
push
addr16
mov
test
fiaddl
dec
add
clc
push
aaa
jb
jae
fdivrs
cmp
test
std
sbb
cmp
gs
xchg
icebp
jb
cmp
hlt
add
mov
cmp
rol
insb
cmpsl
xchg
sbb
ss
add
mov
inc
ljmp
pop
mov
push
loope
mov
rolb
lahf
cmp
sbb
outsb
lods
fidivs
jb
fsubl
add
notl
les
lods
loope
lock
jge
fcos
popa
inc
cmp
test
and
xchg
jne
fisubs
lock
sub
lods
inc
popf
es
pop
jmp
pusha
jns
repz
fimull
cmp
or
pop
sub
aaa
jne
in
insl
jecxz
sarb
ds
jp
mov
and
hlt
cwtl
lods
lods
mov
movsb
loopne
push
xor
cmpsb
lds
mov
dec
div
mov
push
vshufps
repnz
xor
dec
icebp
daa
push
addr16
jae
rol
adc
jecxz
dec
sarw
and
sub
add
scas
aam
mov
rclb
xchg
shrl
in
outsb
sbb
hlt
out
mov
int3
mov
xchg
or
bound
or
aam
xchg
mov
jne
add
popa
inc
and
add
adc
les
push
jle
jl
xor
cmc
add
in
icebp
lds
cmp
jmp
mov
int3
andl
pushf
jl
rorb
repnz
sahf
mov
xchg
xchg
xchg
mov
push
cmpsb
shlb
mov
lea
cmpsb
xchg
add
ss
cwtl
fidivl
mov
aad
loop
rcrb
rol
loope
mov
test
scas
xchg
int
xor
mov
pusha
or
loop
xchg
repz
sbb
fiadds
cmpsl
popa
inc
ficoml
addb
imul
andb
lock
pusha
pop
into
pop
lds
sarl
in
push
outsl
and
mov
mov
mov
stos
inc
xchg
daa
sub
vmwrite
xchg
adc
insb
addr16
aad
lret
mov
mov
jno
mov
cld
add
repz
mov
mov
cmp
repnz
sub
xchg
push
xor
pop
shr
into
sub
xchg
mov
adc
bound
xlat
pop
xchg
mov
iret
rorb
mov
pop
mov
and
jge
shl
add
mov
push
lods
adc
push
dec
daa
int
mov
lret
add
add
outsb
cmp
ja
sbb
pop
lcall
lea
or
adc
ret
lock
adc
jle
and
je
bound
pop
jo
les
adc
pop
add
in
add
lret
or
cmp
jmp
in
das
add
xchg
jbe
pop
ret
pop
in
xchg
mov
cmp
or
popl
jne
fdivs
outsb
inc
inc
scas
stc
push
mov
aaa
testb
or
fistpl
or
adc
lahf
fs
sahf
xor
outsb
icebp
lods
pop
mov
jne
lock
pop
pop
je
std
cmc
mov
nop
xor
add
jae
jl
xlat
xchg
shlb
leave
popf
imul
push
push
lahf
and
adc
jae
subb
dec
add
dec
jmp
lret
lcall
xchg
mov
xchg
cltd
or
or
dec
mov
inc
cmp
xor
pop
inc
sub
pop
add
in
cmp
cmc
xchg
adc
add
ret
call
scas
and
xlat
push
lock
push
mov
cli
mov
sti
loope
imull
lock
add
pop
and
or
or
adc
xor
fcom
cmp
mov
xchg
mov
repz
loop
xor
mov
and
aaa
shr
adc
lock
inc
and
mov
aaa
jb
pusha
lds
je
mov
faddl
mov
lret
jge
adc
jns
sti
lret
in
mov
call
lret
outsb
nop
push
mov
cs
adc
xor
out
test
frstor
out
mov
cmp
xor
test
or
imul
pop
push
dec
bound
filds
lcall
out
dec
pop
jae
mov
les
repz
sbb
adc
mov
push
mov
fisubrl
rep
out
dec
aaa
fwait
shrb
clc
mov
mov
insb
popa
lock
in
pop
addr16
popf
pop
pop
push
and
cwtl
sbb
and
add
ret
pop
xor
lock
mov
add
jp
mov
arpl
in
dec
leave
jle
or
and
imul
scas
xchg
mov
sub
out
mov
popf
jl
aaa
mov
shlb
rorb
lret
xor
insb
aas
mov
pop
lret
and
stos
fcmovnu
imul
inc
pop
xor
hlt
add
mov
repnz
int
mov
shll
sub
sbb
inc
sbbb
mov
leave
xorl
push
cmpsl
rcr
das
cmp
jne
adc
xor
rcll
sub
out
mov
sub
cltd
inc
mov
xor
fidivrs
mov
aas
inc
test
or
lcall
out
fisubs
lahf
mov
outsl
and
bound
mov
cmp
mov
jnp
outsl
cwtl
call
lret
aaa
dec
movsb
bound
nop
mov
loope
xor
out
xor
dec
inc
mov
mov
minps
jp
xchg
out
inc
hlt
pop
outsl
inc
pusha
out
inc
xor
and
js
mov
and
pop
mov
rcr
lods
insb
xor
test
cld
pop
insb
adc
icebp
out
popf
icebp
aaa
jg
mov
cmc
mov
xor
iret
add
aam
xor
out
xlat
leave
dec
hlt
les
mov
mov
add
mov
mov
jns
int
and
imul
fisubrl
jmp
je
cbtw
ss
sarb
std
in
cmp
sbb
xchg
cmp
dec
xchg
psrlq
pop
pushf
or
xchg
stos
ret
les
dec
jecxz
sub
ret
stos
mov
fsubl
cmc
add
or
pop
add
jae
inc
dec
insl
mov
fidivrl
mov
xchg
stos
insl
in
into
cmpsb
mov
xor
outsl
arpl
enter
or
push
push
cmp
sub
ss
lds
mov
in
cs
inc
pusha
cwtl
mov
push
jae
jae
dec
into
loop
pop
stos
sbb
xchg
lock
shlb
movsl
cmpsb
repnz
sub
call
dec
adc
or
mov
ljmp
pusha
xor
insl
xor
push
mov
jl
mov
pop
dec
push
sahf
xor
add
fsubr
icebp
mov
pop
insb
pushf
push
jb
sub
xchg
aas
jbe
adc
icebp
add
push
jns
pusha
dec
jl
hlt
add
cmpsb
sbb
pop
out
and
push
int
push
mov
push
sarl
int
lret
mov
in
lds
bound
fbstp
inc
rorb
mov
mov
mov
shll
push
cld
cmc
aam
pop
rorl
add
arpl
ret
lret
xchg
lcall
mov
pusha
dec
jp
adc
arpl
scas
push
movsb
inc
mov
xchg
mov
pop
mov
test
rorb
mov
mov
jecxz
add
sbb
loope
lods
jmp
mov
iret
or
std
cmp
jns
pop
inc
test
addr16
cwtl
shll
mov
fldz
jg
dec
and
adc
push
xchg
push
push
js
jmp
pop
or
test
xchg
xor
jno
and
jmp
scas
lods
dec
and
dec
ss
test
cmp
xchg
mov
pusha
add
ret
mov
jmp
cltd
pop
stc
cltd
cmpl
out
mov
jno
mov
jae
and
lret
cmp
fcoml
dec
cltd
jecxz
sahf
loop
adc
pop
or
in
cmp
and
inc
ljmp
cmpsl
jp
lret
clc
pop
add
xor
inc
cli
xor
dec
xchg
dec
popa
add
dec
js
fsubrs
pop
inc
loope
into
mov
mov
push
jno
push
adc
insl
push
xor
es
or
gs
push
adc
mov
push
inc
and
inc
imul
movb
mov
sub
mov
mov
std
inc
or
adc
sbb
dec
or
ret
pop
mov
test
dec
aam
repz
rcr
movsb
add
push
push
cmp
nop
mov
inc
inc
mov
repz
out
ljmp
jo
mov
and
xor
and
and
xor
test
mov
adc
ljmp
xchg
add
imul
rcrl
rcl
mov
loop
jno
push
iret
xchg
div
jne
ret
test
iret
xchg
repz
jns
adc
pop
push
in
dec
mov
mov
loope
loope
fisttps
lock
ret
cmpsb
mov
jb
or
jbe
or
sbb
dec
push
push
insb
loop
js
test
lods
or
adc
fiaddl
pop
clc
loope
ret
pop
and
mov
ret
jl
cli
pop
cld
mov
push
aad
fwait
xchg
push
jge
xchg
mov
xchg
adc
mov
loope
stos
aam
jg
aam
repz
out
cmp
add
lea
je
xor
cmp
mov
verw
inc
push
push
fisubrl
mov
sbb
sti
lds
les
mov
inc
lret
cltd
divb
jno
pop
pop
xchg
adc
ficoms
mov
clc
leave
jecxz
lock
jns
cmp
in
sub
cmpsb
stos
xor
xchg
mov
jbe
fsubr
nop
faddl
out
sbb
sbb
pop
lods
fstpt
and
adc
adc
pop
rol
movsl
dec
aam
fmull
es
push
jecxz
or
ljmp
jns
mov
jmp
jo
mov
sti
enter
push
int3
pop
mov
test
dec
mov
cmc
ret
pop
xchg
hlt
sub
xchg
mov
mov
or
loopne
inc
adc
mov
out
mov
push
aas
mov
pop
mov
imul
cmp
push
jl
pop
out
mov
insl
xor
cli
adc
outsb
xchg
stc
les
and
gs
xchg
ljmp
fimull
hlt
fstl
mov
xchg
ljmp
pop
sub
mov
cmc
xchg
bound
jl
add
pop
mov
inc
dec
jne
inc
jno
hlt
xor
das
in
dec
lods
xchg
sbb
cs
cs
push
rcr
inc
mov
push
and
sbb
mov
mov
pop
mov
addr16
jns
dec
jns
bound
xor
add
jnp
cltd
mov
fnsave
sbb
out
lds
mov
movsb
flds
rcrb
fisttps
cli
popa
jae
xor
ljmp
pop
pushl
inc
lock
cli
jb
adc
je
das
call
in
cs
stc
loope
push
outsl
xlat
add
push
mov
insb
neg
pop
cmp
cmp
cmc
fcmovne
cld
icebp
es
mov
push
jnp
mov
inc
xor
xor
adc
mov
inc
jns
xchg
or
je
subl
cmp
add
fwait
push
or
add
sub
add
out
xchg
xor
and
mov
out
dec
cli
popf
imul
lcall
clc
in
nop
andb
cwtl
fcompl
xor
jbe
push
cmp
fidivs
dec
pop
dec
cli
dec
pusha
cmp
dec
sub
push
nopl
xchg
jge
xchg
arpl
loop
ret
das
rol
repnz
negl
sub
movsl
adc
pop
xor
mov
sub
xlat
adc
and
xor
and
clc
pushf
mov
mov
pusha
xchg
cltd
jno
mov
in
mov
je
mov
fimuls
jmp
jns
dec
mov
outsl
add
leave
lret
xchg
sub
inc
inc
jmp
or
repz
out
mov
int3
push
adc
xor
stos
imul
cli
or
in
hlt
xchg
testb
mov
popf
or
pop
shl
push
lahf
and
test
sbb
or
or
pop
xor
shll
je
fwait
test
icebp
int3
mov
add
push
cmp
mov
mov
into
adc
scas
adc
fsqrt
jae
imul
lret
mov
sti
mov
bound
add
popa
mov
mov
loop
bswap
stc
lods
xchg
adc
mov
mov
ja
hlt
jmp
enter
popf
pop
jns
inc
xor
jb
int3
or
fwait
mov
daa
scas
pop
ret
xor
mov
jb
xchg
mov
sbbl
arpl
in
out
pusha
mov
movnti
jl
jmp
push
test
mov
mov
pop
pop
inc
cs
sbb
cwtl
add
lea
mov
clc
xor
movsl
fwait
xchg
mov
testb
mov
mov
xor
das
sti
mov
pop
fs
addr16
fs
xor
int
mov
adc
add
jbe
mov
mov
iret
mov
inc
insl
movsb
bound
lret
mov
adc
jge
dec
mov
xor
sub
daa
sti
sub
lahf
lds
mov
imul
stc
inc
shl
pop
movsl
repz
inc
add
push
fucomp
and
inc
dec
pop
fstl
dec
bound
sbb
in
leave
lahf
dec
push
or
loope
sti
stc
adc
shlb
cld
xchg
dec
outsb
mov
test
push
lret
sahf
imul
lret
popa
sub
pop
or
pop
sahf
sahf
insb
mov
or
pusha
in
mov
ret
xor
shrl
popa
dec
ret
and
rol
lcall
aad
sub
xchg
nop
shll
ss
cwtl
sbb
dec
mov
mov
outsl
xchg
inc
and
shrl
call
sbb
xor
int
mov
xor
dec
cmpsl
sahf
push
push
and
popa
or
cmp
inc
inc
fs
in
mov
dec
call
test
outsl
fyl2x
cmpsl
popf
add
repnz
ret
aad
pop
lock
mov
stc
mov
int
icebp
xchg
inc
xor
adc
divl
std
cmp
xor
add
pop
stos
pusha
xlat
outsl
sbb
scas
jg
gs
jnp
js
inc
aad
adc
sti
jae
leave
inc
movsb
shl
leave
adc
gs
jo
arpl
pop
jmp
int
shl
xor
int3
stos
pop
mov
outsl
dec
out
jg
xchg
sbb
add
push
jbe
fdiv
std
fstl
pop
lahf
idivb
stos
imul
mov
ficompl
and
pop
icebp
stc
filds
sets
inc
frstor
scas
fucomip
adc
pop
fcmovu
sbb
fnsave
push
hlt
cmc
ret
xchg
xchg
dec
pop
nop
inc
xchg
in
fmulp
fst
leave
popa
cmp
mov
aas
xchg
leave
push
mov
notl
scas
dec
daa
add
ret
xlat
add
lret
fistpll
and
push
stc
test
mov
rorl
leave
fwait
jb
gs
popa
inc
in
fwait
lret
mov
and
subl
xor
adc
dec
push
pusha
aas
es
pop
daa
rcll
sub
mov
fists
test
imull
mov
shrl
sub
adc
sti
jbe
test
test
jno
push
pushf
std
pop
adc
jle
add
pushf
adc
sbb
add
test
pop
out
mov
lcall
cli
adc
and
and
aaa
adc
xchg
rcrb
mov
clc
cld
jle
lock
icebp
xor
adc
jp
imul
les
add
mov
nop
mov
xrelease
pusha
jno
fs
addr16
leave
push
xor
cmpsl
mov
leave
add
add
test
or
cmp
dec
xchg
cltd
push
add
daa
ljmp
neg
stc
dec
dec
cmp
cld
xchg
xchg
xchg
jle
pusha
popa
inc
jnp
add
mov
ljmp
mov
es
stos
arpl
movsl
sub
cmp
pop
arpl
rcr
xchg
jae
push
lock
in
sbb
jae
fdivr
jecxz
mov
sti
push
or
loopne
adc
je
test
xchg
xchg
repnz
sbb
mov
mov
movsb
xchg
sbb
or
xor
jno
sahf
nop
adc
outsb
icebp
js
mov
outsb
fwait
pop
xor
hlt
hlt
lods
adc
test
mov
cmc
aas
mov
bound
int
xchg
push
cmp
jno
push
jo
xchg
pop
or
mov
sahf
arpl
xor
out
cmc
sub
aad
mov
push
push
cld
mov
jbe
movsl
cld
mov
test
out
loope
iret
jmp
mov
dec
sbb
pushf
pusha
mov
pusha
arpl
das
mov
or
scas
dec
pop
mov
jb
jle
and
clc
xchg
pop
mov
mov
xchg
lds
lret
cmp
js
jmp
mov
shrl
ljmp
fwait
adc
aad
jae
mov
jae
ret
inc
aad
dec
cmpsb
or
loopne
mov
sbb
sub
insb
sahf
mov
pop
leave
test
cmp
lret
sbb
lret
outsl
cmp
and
xchg
mov
mov
call
xor
cltd
push
aam
js
shll
jp
lret
arpl
out
clc
xchg
lea
sbb
jnp
or
cmpl
xchg
enter
sub
test
cltd
pop
aaa
inc
repz
leave
sbb
sbb
fwait
mov
stos
mov
and
cwtl
popf
jb
sbb
sub
pushf
imul
jecxz
push
imul
mov
xchg
fst
cmpsl
cmc
or
mov
ss
lcall
loop
cmp
in
sub
mov
mov
popa
std
mov
cltd
scas
dec
rcrl
f2xm1
add
mov
and
push
mov
stos
mov
jmp
push
adc
and
cmc
or
cwtl
push
sahf
sarb
dec
sahf
cmp
dec
pxor
notb
insb
iret
cld
pop
idivb
inc
fisttpl
mov
or
xor
or
mov
mov
jnp
mov
or
lods
and
inc
and
or
push
add
pop
shl
mov
push
in
ret
cld
js
add
pop
lock
xchg
pusha
jns
out
clc
mov
lods
mov
fwait
jo
push
mov
cli
call
mov
mov
and
mov
sbb
cmpl
ss
popf
cmpsl
mov
std
andl
mov
push
call
mov
in
int3
mov
out
xlat
push
mov
push
and
push
dec
repz
jno
sbb
stos
or
cmc
dec
sti
aam
mov
and
gs
cmp
es
repz
xchg
jmp
fldt
in
mov
ljmp
or
sahf
xchg
mov
movsb
fwait
dec
push
in
mov
inc
je
mov
and
mov
push
and
aad
sbb
lods
pushf
sub
stc
jo
scas
mov
cmp
mov
xchg
push
add
insb
sahf
or
js
inc
push
popf
out
xor
xor
lock
pop
pop
cld
and
add
jmp
add
mov
adc
out
mov
pop
xor
cmc
test
shlb
xchg
and
sbb
shl
outsl
sarb
mov
lods
mov
lret
add
mov
xchg
ds
bnd
lcall
mov
add
push
xor
fsubrl
or
and
dec
aam
xchg
dec
fwait
cltd
in
sbbb
aaa
or
mov
xchg
sub
jns
jns
mov
out
jo
sti
loope
pop
test
xchg
add
hlt
movsb
bound
push
jecxz
mov
bound
fldcw
lods
movsb
jbe
inc
test
xor
repz
repnz
adc
in
test
or
push
mov
fstl
inc
ficomps
cmpsl
ja
inc
adc
lret
das
jmp
mov
leave
xor
mov
ja
sbb
fbstp
ss
xchg
jns
sete
push
loop
jmp
lcall
push
fcom
shl
and
inc
and
fdiv
cmp
pop
inc
jge
mov
jge
out
pop
xchg
addr16
mov
xchg
into
subb
mov
xchg
jne
xor
out
out
sub
xorb
jbe
xchg
lcall
adc
clts
fistpl
repnz
mov
in
sbb
and
arpl
lds
in
xchg
pop
imul
xor
xchg
out
sbb
or
in
and
or
ja
inc
cmp
xlat
in
fidivrl
pusha
and
ficomps
cmp
pusha
aaa
lret
lods
lahf
repnz
cmc
jae
inc
filds
push
xor
mov
jp
xchg
frstor
adc
movl
adc
mov
ljmp
and
fs
stos
lods
mov
lods
mov
and
xchg
repz
push
sub
cld
fnstcw
repz
loop
jmp
mov
sub
adc
cmp
mov
lods
icebp
cmpsb
or
mov
subl
cmc
lods
cmp
in
lcall
xchg
sbb
xchg
sub
adc
insl
push
sbb
xchg
dec
cwtl
add
mov
sbb
mov
cld
out
out
mov
jle
int3
sub
shll
jno
mov
stc
or
add
stos
inc
pop
jp
fiadds
adc
pmaddwd
stos
jo
sub
mov
fildl
xor
jae
gs
sub
adc
mov
xchg
jecxz
jmp
dec
sub
jecxz
lock
cwtl
lock
adc
and
int
add
sub
jp
add
je
add
push
daa
cli
mov
xchg
fxch
push
ficompl
inc
in
cmpsl
and
lea
add
popf
pusha
xchg
inc
inc
jae
push
lds
aaa
fisubrl
sub
sub
jl
mov
push
adc
cmc
push
sub
pop
adc
rclb
lea
mov
test
add
xchg
outsl
call
jnp
xchg
mov
cmp
aaa
inc
insb
roll
into
popa
jmp
insl
stc
xorb
repz
insb
jle
scas
inc
jmp
movsb
jns,pt
xor
lcall
ret
insl
mov
xor
sbb
jp
jmp
addr16
popf
out
and
push
xchg
adc
cmc
cmp
and
cmpsb
loope
test
inc
xchg
cltd
dec
lea
mov
shlb
sar
cmp
cmp
sub
lret
sub
mov
add
into
outsl
mov
adc
je
cltd
dec
adc
outsb
pusha
and
mov
mov
scas
pop
or
fnsave
cmp
incb
cmp
xchg
ljmp
addb
sbbl
mov
inc
and
adc
mov
and
push
shlb
sub
or
dec
push
dec
mov
push
das
rcll
mov
cltd
adc
jmp
xchg
cld
cmp
dec
or
aad
adc
int
inc
add
aad
mov
movsb
mov
bound
movsb
call
faddp
pop
in
std
js
jb
insl
mov
push
pop
imul
rorl
lea
sti
dec
lahf
push
xlat
dec
mov
repz
jb
mov
dec
xchg
outsl
lods
out
lret
sti
xchg
repz
shrl
or
test
scas
es
in
adc
ret
in
mov
xor
je
ds
add
test
lret
pop
jl
mov
mov
lahf
and
dec
inc
lcall
xchg
data16
xor
aad
in
data16
mov
mov
or
fisttpll
dec
mov
fs
push
xor
dec
in
hlt
pop
xor
fwait
aas
repz
mov
mov
cmp
or
hlt
sti
ror
dec
inc
and
icebp
xchg
ret
inc
sub
mov
aaa
lods
lods
test
jno
fucomp
xchg
inc
jbe
and
in
jg
or
testl
add
mov
xchg
mov
scas
xchg
sbb
inc
aam
test
ss
xchg
adc
fists
icebp
lahf
testb
sub
das
jle
cld
sbb
sub
xchg
ss
cwtl
test
jno
jg
pop
rorl
out
sbb
arpl
scas
dec
andl
addb
dec
iret
inc
fstpl
sarb
insl
mov
ljmp
and
movsl
jge
repz
dec
sbb
xchg
pusha
jp
sub
dec
pop
sbb
sbb
xorl
mov
push
cmp
sub
insb
std
ret
push
mov
bound
aaa
xchg
fwait
sub
pop
sbb
adc
xor
push
popa
lods
jb
sub
js
jg
xchg
lock
and
jo
shrb
push
dec
push
xchg
mov
push
jmp
pop
pop
punpckldq
jns
inc
pop
pop
adc
jmp
imulb
mov
aam
push
scas
push
mov
aad
idivl
outsl
fisubrl
mov
and
cmp
sub
std
sub
xchg
adc
mov
cmpsl
out
mov
mov
data16
push
sbbl
out
jecxz
sbb
popa
or
dec
bnd
test
clc
lret
rorl
mov
out
aas
cmp
or
cld
rcrb
mov
fstp
mov
lret
lods
mov
fcmovnb
js
mov
sahf
es
sar
call
jmp
lcall
jb
loop
dec
inc
sbb
inc
push
mov
mov
cwtl
ret
decb
jl
out
repnz
add
lods
les
xchg
push
xor
jb
mov
ss
out
bound
add
xor
xchg
shl
scas
mov
push
popa
dec
pop
sbb
push
xchg
fdivrs
pop
cwtl
push
jbe
jo
cmp
std
cmp
lock
push
mov
or
xchg
push
hlt
inc
xor
sub
ret
xchg
jbe
or
mov
mov
jl
mov
in
sbb
mov
movsl
rol
into
js
xor
out
pop
mov
sub
and
jle
and
sub
dec
in
xchg
vmulpd
outsb
sub
cli
sahf
jbe
jbe
adcl
xor
rcr
aad
in
insb
les
in
repz
jl
aam
xor
and
aad
test
gs
hlt
sti
out
leave
fs
push
mov
hlt
hlt
mov
cmc
sysret
mov
iret
rclb
andb
xor
jns
aam
push
dec
jnp
lret
loope
outsb
and
subb
inc
lea
xchg
jg
jp
cmp
pop
jle
ficomps
inc
push
mov
cmp
leave
xchg
cmc
ja
sti
into
sbb
push
jle
adc
ds
cmp
xor
test
cmp
sbb
jge
call
rclb
adc
pop
mov
cltd
add
sarl
in
sub
out
mov
shll
mov
push
mov
test
xchg
pop
xchg
mov
ds
xor
js
inc
dec
int3
loope
dec
sbb
or
icebp
jns
or
stc
cmp
jno
testb
mov
movsb
aas
les
xorb
and
insb
and
clc
or
arpl
out
stos
clc
sub
add
out
cmp
cltd
jno
push
inc
ja
or
pop
push
ljmp
out
ja
mov
and
sub
cmpl
xchg
sti
imul
push
loope
cmp
mov
push
and
or
cmc
iret
push
aam
dec
pop
loop
outsl
arpl
mov
andb
pop
out
lret
popa
out
movb
jbe
hlt
mov
adc
mov
mov
popa
mov
jp
dec
xchg
int
and
jns
mov
aas
lock
clc
mov
sahf
sub
adc
aaa
fisubrl
or
pop
and
and
aam
pop
or
adc
jg
inc
aad
sarb
daa
xchg
xchg
sub
icebp
flds
clc
sub
push
lcall
add
es
outsb
pop
mov
sub
rorl
xchg
mov
and
cmovge
xchg
mov
pop
xchg
rcrb
movsl
or
mov
inc
repz
xchg
adc
adc
jp
sbb
xchg
xchg
fwait
xchg
inc
mov
stos
push
add
xchg
int3
cmpsb
push
xchg
lret
push
mov
aam
es
clc
pop
ds
shr
arpl
cwtl
sub
jl
dec
bswap
push
loop
cmp
orb
sti
push
sub
mov
fmulp
push
and
adc
or
push
call
fnstenv
sub
in
out
icebp
cmp
cltd
leave
dec
and
out
les
mov
ret
mov
movsl
dec
dec
addl
jb
bound
outsb
pop
mov
int3
xchg
int
jl
loopne
int3
dec
fisttpll
mov
aad
jno
mov
jb
jne
jl
and
mov
and
and
les
mov
in
jecxz
mov
and
sahf
sbb
cld
ret
sbb
fwait
loope
sub
add
enter
lea
mov
sub
repnz
and
xor
cmp
jecxz
in
faddp
adc
movsb
stos
add
add
loopne
in
cmpsl
std
cmpsb
loop
mov
xchg
xor
leave
repz
lret
mov
and
lods
pusha
cmp
int
fyl2x
push
jmp
or
outsl
sub
xlat
inc
xchg
add
or
lret
loopne
ss
jb
aaa
push
push
xor
push
outsb
mov
and
pop
jge
jae
mov
pop
outsl
and
mov
imul
imul
lret
xchg
subl
clc
popf
add
cltd
addr16
mov
jno
sub
xchg
call
fdiv
rcll
loop
adc
adc
lods
lahf
int3
jbe
loop
mov
or
dec
sbb
jg
add
cmp
add
clc
std
jp
pop
les
mov
in
push
inc
clc
or
lcall
imul
subl
stos
push
adc
jo
xchg
mov
mov
lcall
arpl
mov
sub
mov
inc
mov
jbe
rcrb
shlb
lods
dec
loop
adc
push
sub
test
lret
fnstsw
inc
push
orb
test
orl
fbld
insb
adc
es
cwtl
dec
add
dec
cmp
add
stos
int
int
cmc
jae
insl
neg
add
mov
jo
jae
xlat
and
daa
movsl
sub
test
xchg
ficoml
stos
xchg
push
mov
sbb
arpl
icebp
lock
lcall
lret
arpl
in
xchg
int3
push
dec
lret
popf
fidivl
stos
pop
pop
pop
sbb
popa
mov
dec
movzbl
push
insl
jo
ficomps
mov
push
adc
rep
sub
mov
cld
jmp
mov
outsb
sbb
pop
cmp
mov
hlt
enter
std
jo
mov
mov
inc
pop
mov
and
ljmp
test
mov
xchg
push
outsl
mov
xchg
sub
pop
and
push
arpl
aam
sbbl
push
push
out
sbb
jne
ficoml
imul
or
push
lret
and
sbb
inc
popf
inc
out
sub
scas
or
daa
movsl
mov
mov
aam
mov
cmp
mov
mov
leave
sbb
pop
stc
fisubl
and
ds
inc
ret
mov
lock
cmc
sarl
outsl
add
add
cmpsb
mov
lea
add
popa
mov
je
mov
int
and
aas
mov
test
push
cmp
out
jmp
insb
mov
lock
out
cmp
test
pushl
je
int3
push
xchg
popa
aad
repz
push
test
leave
dec
mov
adc
pop
jbe
cmp
lahf
test
test
mov
cmc
lahf
int3
push
cs
pop
fwait
imul
fimuls
and
in
dec
jbe
or
clc
jle
popf
jno
mov
xor
inc
ljmp
sbb
xor
add
or
testb
add
hlt
mov
lret
mov
jbe
shlb
pushf
and
push
rorl
or
inc
inc
in
scas
cmp
push
in
orl
fldcw
and
adc
xor
cld
fdivl
xchg
jg
enter
and
fistl
mov
inc
scas
in
push
mov
imul
adc
xor
dec
xlat
sarl
sbb
icebp
xor
imul
sti
icebp
stc
ds
mov
jmp
nop
jns
add
push
stc
out
xlat
mov
xor
movsl
xorl
sarl
sub
jmp
xchg
sar
sbb
jbe
in
fwait
xchg
jecxz
aam
or
pop
rcrb
adc
out
dec
jno
push
xchg
ret
shr
jo
add
push
andl
jl
data16
scas
insb
push
loopne,pt
adc
lcall
sbb
lods
call
adc
push
dec
push
mov
adc
sub
divb
in
pop
cmc
scas
mov
std
jns
imul
into
les
push
pop
mov
aas
cmc
int
mov
pop
scas
add
loop
addr16
roll
mov
mov
pop
sbb
repz
xchg
repz
sub
mov
pop
sub
and
push
and
push
mov
jge
xchg
sti
popf
mov
cmpl
fsub
cmpsl
in
test
insl
int3
fnstenv
inc
mov
pop
and
inc
insl
out
roll
test
and
pop
into
pop
ds
xor
insb
or
mov
push
jbe
aam
mov
xor
adc
and
into
insb
push
and
lahf
sub
jb
jl
push
mov
cmc
pop
out
mov
cmp
xchg
mov
call
roll
cmp
arpl
mov
lcall
xchg
out
sbbl
fidivrl
insb
pop
shll
cmp
rclb
push
push
adc
fnsave
mov
jle
jb
jmp
scas
jl
lock
xchg
inc
sahf
pop
cmp
xlat
mov
dec
inc
inc
pop
sahf
mov
mov
nop
push
jl
add
adc
pop
pop
mov
mov
push
stc
movsl
add
lahf
xchg
mov
or
mov
cmc
push
cmc
jmp
xchg
lods
loope
jne
jne
cmc
push
in
data16
aad
lods
repnz
and
ja
mov
cmp
inc
outsl
and
fadds
sub
sar
adc
sub
add
iret
idiv
icebp
clc
repnz
imull
pop
push
xchg
sbb
mov
mov
decb
leave
cwtl
xchg
jo
fmul
test
mov
sbb
mov
or
mov
popa
rcrl
popf
push
ds
repz
mov
mov
xor
dec
pusha
nop
jp
dec
movsb
flds
idivb
or
lods
stos
stos
xchg
adc
pop
shrl
js
notb
mov
les
hlt
push
daa
add
sbb
mov
cmc
sub
out
mov
cmp
sahf
int3
mov
jbe
or
pusha
mov
inc
jecxz
out
ljmp
xor
test
enter
pusha
cmp
cld
push
lea
push
dec
cmp
and
sahf
test
push
add
test
and
push
fldcw
and
or
inc
shll
out
adc
sub
daa
fyl2xp1
divl
sti
add
shl
icebp
jae
ret
sbb
mov
or
xchg
jle
push
and
sub
imulb
inc
scas
mov
mov
xchg
pop
daa
xor
cli
das
in
sbb
outsb
je
sti
sbb
out
mov
outsl
and
jns
clc
shrb
mov
sbb
vcvtsd2si
ja
cmp
cltd
jbe
data16
sahf
in
int
add
test
popf
xor
rcll
jecxz
or
xor
fwait
pop
push
cmpsb
pop
insb
mov
add
xchg
dec
icebp
std
dec
mov
mov
xchg
cltd
mov
dec
and
int3
mov
inc
cmp
mov
in
push
imul
fdivp
pop
movb
xor
or
call
mov
push
mov
lods
fstp
in
fsub
lods
push
cmp
out
adc
cmpsl
adc
inc
subb
test
lcall
jg
add
cmp
push
mov
jmp
sub
movsb
push
aam
mov
shlb
or
sub
xor
xchg
sar
mov
and
fiadds
sub
cmp
int
jg
dec
mov
push
ret
in
stos
daa
or
insb
mov
cmpsl
jmp
pop
bound
add
aad
mov
stc
jmp
mov
aas
arpl
sbb
adc
mov
mov
cld
sub
imul
data16
mov
jp
mov
mov
daa
push
shrl
mov
not
ljmp
aad
sub
popa
sub
push
mov
add
or
sahf
stos
pushf
lahf
jmp
add
data16
out
in
mov
daa
into
mov
gs
out
cmp
leave
push
inc
xchg
mov
pop
pop
cmpsb
test
fistpll
clc
lcall
pushf
inc
jg
into
push
mov
sbb
sub
fwait
jno,pt
cmp
cltd
rcrb
fsubp
jle
and
jno
push
cli
gs
jecxz
arpl
dec
enter
adc
jne
ljmp
adc
bound
pop
out
pop
dec
lret
cmp
mov
les
dec
lret
into
int3
or
dec
mov
cmc
pop
mov
sub
daa
sub
xchg
out
cmp
push
cld
mov
subl
mov
dec
pop
and
test
push
shl
jne
popa
sar
adc
clc
and
div
sbb
xor
sarb
sbb
jmp
mov
add
or
push
ja
inc
dec
xchg
cmpsb
pop
test
jae
daa
cmp
mov
mov
jecxz
jne
xchg
sbb
xor
xchg
icebp
test
xchg
notl
fmuls
outsl
inc
mov
push
adc
cmpsb
xchg
mov
fwait
sti
adc
jp
insb
fs
shlb
ds
leave
in
and
test
out
inc
add
test
aas
mov
test
or
mov
adc
adc
sub
push
push
inc
inc
shll
fwait
int3
mov
popf
sarb
shlb
ljmp
push
jmp
mov
jmp
add
stos
or
inc
pop
in
mov
mov
insl
hlt
or
mov
add
daa
sbb
data16
jmp
aam
lds
mov
xchg
dec
cmp
mov
out
cmp
lcall
add
xor
stc
push
cs
aaa
jbe
loop
in
xchg
movsb
insb
cmpsb
adc
ja
pop
data16
jp
cmp
ja
jmp
push
mov
out
pop
cmp
mov
lahf
icebp
test
nop
in
xor
sub
leave
sub
aam
repnz
sti
mulb
mov
lret
xor
jne
push
in
andb
pop
cmc
scas
and
pusha
fcomps
push
orb
mov
jns
pop
outsb
sarb
test
inc
sub
sub
faddl
mov
js
into
dec
push
jecxz
ret
popf
clc
jnp
fwait
movsl
dec
gs
cld
test
cltd
add
je
or
in
jecxz
mov
lret
add
popf
aam
mov
popf
shr
push
mov
shl
mov
div
xlat
xor
movsb
cwtl
cli
mov
mov
fidivs
pop
mov
dec
and
add
fcoml
inc
xor
jp
jo
ret
pop
sar
push
into
sahf
xor
mov
scas
cmp
push
mov
call
aas
xlat
es
or
fs
in
dec
shll
jmp
js
mov
push
popa
popf
in
fnstsw
stos
mov
mov
mov
leave
xor
xor
loop
mov
xor
ror
cld
add
mov
pop
lods
xchg
dec
mov
adc
out
pop
xor
mov
dec
pop
xor
push
cltd
rcr
xchg
enter
stos
cmp
mov
stos
scas
je,pn
cli
in
cmpsb
push
mov
movsl
jae
bound
dec
xor
pop
jg
adc
fwait
dec
pop
xor
repnz
lahf
dec
aaa
mov
pop
adc
pop
sahf
add
loope
stos
push
jae
sub
mov
stos
test
cli
xor
and
push
imul
roll
push
dec
icebp
xor
mov
mov
and
sbb
pop
insl
dec
lods
sbb
test
movsb
inc
aad
sbb
add
cs
lds
out
or
test
xor
push
iret
test
jne
popa
rolb
into
cmp
jae
cmp
sbb
rcrb
or
mov
mov
sti
xor
cld
ja
cmp
dec
pop
jne
repnz
call
mov
add
mov
mov
fs
jp
in
adc
clc
pop
cmp
out
adc
mov
ret
jge
push
pusha
shlb
xor
xchg
sti
adc
jbe
sbb
inc
lret
popf
jno
cmpsl
jns
nop
loope
push
or
cmp
dec
fisttpll
inc
xor
dec
cltd
mov
xchg
loop
outsl
sarb
lret
adc
xchg
fdiv
push
push
dec
test
cmc
lret
or
add
jne
and
xchg
cld
loope
movsl
pop
les
sbb
int3
popl
adc
in
sub
std
lods
inc
jnp
or
push
movsl
push
jle
sbb
push
lea
inc
cld
inc
push
jp
pushf
into
jecxz
mov
aad
int3
test
mov
mov
inc
and
jno
in
jbe
xchg
jno
arpl
hlt
jb
test
inc
icebp
jge
sbb
inc
jb
mov
out
pop
jp
pop
sbbb
cs
jge
cmp
adc
push
into
loop
add
inc
push
mov
sub
stos
js
lcall
int
divl
shl
clc
mov
and
jmp
or
sub
add
mov
add
mov
xor
fbstp
ret
adc
adc
out
push
fsts
iret
stos
adc
aas
push
lcall
fsubl
xchg
aaa
xchg
mov
lcall
sub
push
decl
lret
imul
pushf
ljmp
clc
insb
add
xchg
or
addr16
push
push
add
adc
mov
push
push
icebp
mov
mov
xchg
add
and
es
scas
insb
mov
popa
mov
movsb
jbe
ljmp
inc
jle
mov
arpl
out
outsb
mov
stos
jecxz
jns
repz
inc
imul
stc
or
aaa
dec
mov
push
jmp
insb
frstor
inc
cmc
xlat
push
mov
mov
imul
push
pop
mov
mov
imul
pop
jb
adc
dec
jbe
xchg
outsb
les
test
incl
mov
movsb
inc
stos
sub
outsl
stos
rcl
mov
stc
fucompp
rorl
xchg
test
in
test
cmp
int3
js
arpl
adc
sub
sub
inc
in
add
push
popa
add
inc
cwtl
xchg
inc
mov
add
xor
aam
push
and
xor
lret
sub
repnz
inc
les
push
out
mov
rol
fwait
lds
push
out
mov
sahf
inc
and
dec
lcall
mov
scas
or
mov
add
jp
lock
mov
sti
div
adc
inc
sub
and
out
add
pop
pop
push
and
outsb
cld
inc
mov
ds
in
fs
cmc
dec
dec
push
jo
sbbb
gs
imull
test
out
shr
es
cmp
mov
in
sti
inc
or
enter
or
out
popa
cmp
pop
add
out
mov
test
mov
sbb
ljmp
pop
push
dec
and
scas
mov
jne
outsb
insl
mov
jne
xchg
adc
fidivs
in
mov
rolb
outsl
sti
dec
loope
arpl
pop
xchg
cmp
insl
orb
fs
add
loop
jge
cmc
aad
xor
lea
push
and
aaa
outsb
jne
adc
sbb
sub
mov
sbb
add
pop
lock
and
xchg
arpl
push
imul
clc
cli
cmpsb
jmp
je
add
mov
pop
xor
cmp
mov
xlat
jmp
sahf
pop
add
jo
mov
out
xchg
xchg
pusha
xlat
je
insl
inc
hlt
mov
add
pop
sti
lock
enter
add
aaa
dec
out
imul
mulb
repz
mov
cmpsl
out
lods
shrb
mov
mov
jno
stos
pop
add
fbstp
ds
sbb
jno
add
lret
cmp
fildl
mov
jne
cltd
and
sbb
inc
shl
mov
add
iret
test
push
stos
xchg
cmp
stos
or
dec
jne
leave
insl
mov
adc
fidivrl
mov
dec
test
std
lahf
in
aad
aas
xchg
bound
clc
jbe
dec
jmp
inc
push
inc
movsb
int
insb
jb
jne
ret
in
cmpsl
mov
sarb
ret
and
mov
imul
and
insl
mov
mov
mov
sarb
xchg
test
dec
mov
mov
cmp
sahf
jno
and
shll
leave
dec
int3
pushf
xchg
pushf
jb
daa
in
pusha
sti
imul
sub
jo
jne
mov
push
sub
popf
mov
mov
lcall
push
xor
fdiv
pop
push
int
and
adc
sub
lds
adc
push
roll
mov
xchg
or
or
xchg
cmc
loope
jle
in
adc
scas
popa
andl
das
fidivl
gs
mov
sub
or
inc
fcmovbe
push
adc
std
cmp
xchg
push
mov
icebp
gs
lea
xchg
mov
scas
push
repnz
lock
adc
adc
int3
xor
int3
icebp
in
mov
dec
pop
divb
jp
nop
movsl
jle
jae
mov
mov
addb
push
push
xor
iret
xchg
jp
mov
add
xor
jns
imul
or
roll
shll
out
dec
andl
int
sbb
sub
xlat
shl
fmuls
imul
and
lret
inc
inc
mov
test
and
sahf
sub
xchg
call
cmpsl
and
scas
add
cli
dec
push
xor
pop
je
in
push
cmp
ss
push
gs
popf
adc
adc
xor
jle
mov
or
dec
data16
arpl
neg
or
lds
dec
inc
sub
xor
dec
xchg
jns
xchg
or
cmc
in
jnp
jbe
cmp
cltd
movzbl
pop
adc
mov
into
gs
xchg
mov
mov
push
jge
push
cmp
adc
mov
mov
test
pop
push
fsubr
mov
or
pop
rorb
mov
sub
fcmove
loopne
add
gs
pop
imul
xchg
jp
mov
test
std
call
or
fcoml
xchg
loopne
jp
repz
mov
jae
xchg
repnz
xchg
out
sahf
jo
or
sbb
mov
mov
push
push
mov
or
sbb
sub
outsl
ficomps
xchg
stos
ljmp
in
cmp
sarb
repnz
sbb
xor
fdivrs
cmpsl
imul
push
out
dec
bound
ret
inc
insl
cltd
in
filds
jp
ljmp
jecxz
lcall
hlt
enter
pshufw
dec
mov
adc
cld
mov
jo
data16
cmc
sbb
mov
andl
les
xor
aam
out
mov
clc
push
mov
les
sub
inc
xchg
fmulp
les
icebp
out
inc
inc
xor
cmp
nop
push
in
scas
cmp
mov
imul
bound
fdivrp
jo
fdivr
outsb
cmp
repnz
ret
fadds
ja
ret
icebp
jne
inc
out
mov
mov
shr
jle
jmp
jecxz
ret
or
fidivrs
inc
dec
sahf
pop
clc
stos
les
or
test
shll
add
adc
mov
rcrl
sbb
in
mov
mov
rcll
jmp
ds
lock
xor
or
xlat
ret
jmp
dec
mov
inc
ljmp
in
js
cmc
mov
lcall
icebp
mov
lret
cmc
jp
in
bound
ret
outsl
insl
in
add
jge
inc
dec
cmpsl
jmp
pop
iret
movsl
pop
out
in
pop
xchg
loop
cmc
mov
jecxz
hlt
mov
js
movsb
roll
divb
xchg
cmc
fnstenv
pop
add
lret
insl
icebp
add
push
out
cmc
add
jae
sahf
mov
outsb
out
add
test
in
jecxz
repnz
and
hlt
mov
ret
mov
icebp
stc
mov
mov
xchg
lods
jmp
sub
les
jns
hlt
loope
add
push
icebp
fisubs
inc
add
add
addb
rol
sbb
ficompl
mov
out
inc
stos
jge
add
jl
icebp
inc
les
insl
pop
in
or
jmp
sub
jnp
mov
push
std
adc
sbb
cmp
or
ss
in
jbe
popa
inc
faddl
inc
aaa
bound
adc
aam
add
and
out
jecxz
xor
repnz
push
jo
cs
sbb
cs
data16
in
leave
adc
lea
xchg
mov
fsubl
sbb
dec
pop
fsin
jl
sbb
sub
mov
inc
das
pushf
int
pop
sub
mov
bound
pop
xchg
sub
push
sbb
and
xchg
fwait
bound
add
mov
mov
xchg
cmpsb
insb
jno
mov
lea
popf
sar
xchg
sub
loopne
dec
cmc
add
mov
add
gs
cmpsb
loope
out
sar
mov
testl
nop
mov
mov
arpl
mov
cmp
movsb
pop
mov
gs
call
adc
test
data16
xchg
sbb
adc
mov
and
adc
jecxz
cmp
jp
mov
dec
dec
push
hlt
fcomi
cmpsb
or
addl
lea
fistpl
adc
clc
popf
push
cltd
add
mov
in
jo
sub
ffreep
mov
repz
xchg
dec
shr
jnp
lea
loope
mov
test
sbb
shl
mov
xor
aad
jno
sub
sub
idiv
xor
mov
aam
bound
inc
daa
sbb
into
xor
imul
push
sub
sub
in
arpl
cli
xor
aad
loopne
adc
mov
mov
imul
int
mov
rcrb
xchg
jo
jns
jne
in
adc
jns
mov
inc
jbe
xor
mov
outsb
mov
lahf
cld
lcall
sub
es
dec
addr16
femms
adc
out
push
ljmp
in
enter
add
push
addr16
pop
imul
jl
sub
hlt
xor
mov
or
xor
push
ljmp
arpl
or
loop
pop
lret
mov
std
jno
ja
in
mov
xchg
lds
and
mov
cmp
xchg
xor
xchg
insb
pop
adc
insb
lret
xor
outsb
xor
stc
cmpsb
add
sarl
lahf
xor
out
jle
dec
xorl
aam
fs
test
movsl
sahf
leave
jne
out
in
hlt
cwtl
sub
mov
lea
inc
ljmp
adc
adc
shlb
mov
popl
dec
push
dec
xlat
sti
test
add
jbe
mov
cmp
add
lahf
arpl
mov
dec
leave
sub
clc
repnz
pop
xchg
jns
pop
pop
in
es
mov
push
mov
test
sbb
sahf
test
inc
adc
sbb
in
xor
out
aaa
cltd
pop
sbb
jmp
out
in
mov
fst
add
mov
cwtl
xchg
out
jno
int
cmp
lock
sub
lods
sbb
aaa
inc
jns
jne
mov
cmpb
imul
test
rcrb
decl
cmpsb
xchg
popa
adc
inc
push
jle
push
ret
mov
ja
inc
in
adc
cmpsl
repz
mov
aam
or
repz
popa
sbb
mov
js
push
jnp
inc
and
dec
dec
popf
mov
out
adc
das
and
in
loop
in
inc
jecxz
js
mov
and
lret
inc
add
lcall
js
jno
popa
shll
jecxz
pop
scas
mov
xchg
xchg
in
scas
out
mov
adc
push
lea
adc
push
les
fcmovnbe
mov
lea
clc
mov
xchg
in
shlb
push
add
add
add
xchg
paddq
shl
cmc
ljmp
imul
xchg
push
dec
stos
add
cmp
xor
stc
movsl
sub
add
in
aam
enter
dec
inc
dec
xlat
cltd
adc
xor
xor
mov
inc
pushf
shll
lds
mov
mov
popf
ret
mov
push
dec
mov
dec
cmp
fdiv
sbbb
sub
lret
popa
xchg
arpl
and
inc
sub
loop
add
inc
das
push
mov
sbb
sub
push
add
in
fisttpll
fnstenv
sti
cwtl
in
mov
lcall
test
jmp
shr
mov
xchg
data16
and
fimuls
repnz
cmpsb
adc
inc
xlat
xor
test
mov
mov
push
mov
mov
inc
mov
insb
push
mov
mov
rcl
and
scas
pop
mov
push
lret
loope
mov
arpl
das
lret
imulb
mov
jbe
push
push
and
dec
and
les
lea
pop
add
shll
xchg
cmc
cs
sbb
enter
inc
inc
lret
mov
les
xchg
jae
iret
ss
pop
xlat
mov
es
or
xchg
stos
jmp
fs
jle
cli
das
aas
add
movsl
sub
jl
mov
icebp
fimull
stc
and
les
pop
lds
jb
cmp
cmp
jp
sbb
lret
push
push
ret
cmpsb
out
bswap
sbb
xor
inc
daa
or
mov
movsb
iret
out
icebp
mov
icebp
sti
adc
xorb
out
cwtl
icebp
sbb
dec
sub
or
push
cmpsb
call
add
sbb
stc
jmp
test
nop
leave
add
sbb
xor
iret
aas
frstor
add
int
testl
inc
ja
aaa
scas
jmp
dec
int3
or
cmpsl
lock
out
fisubl
pop
xchg
or
imul
mov
mov
imul
and
mov
xchg
and
lret
mov
icebp
mov
mov
mov
outsb
sub
add
sub
faddp
jo
add
adc
dec
out
mov
and
mov
and
inc
jmp
addr16
push
mov
clc
adc
imul
mov
out
mov
lret
lahf
pop
vmlaunch
fsubs
out
nop
sbb
lds
jmp
ffree
js
movsl
dec
cmpsb
jle
shrl
test
imull
shlb
xor
add
inc
out
ljmp
pop
lods
je
pop
cs
sub
or
xlat
mov
insb
jnp
inc
inc
add
push
cmpsb
mov
adc
mov
mov
cltd
jno
scas
push
mov
add
sub
std
scas
mov
repnz
adc
pop
push
push
pop
and
adc
jl
jp
pop
cltd
in
mov
jg
out
push
aad
rcrl
int3
cmp
and
out
leave
in
sarl
inc
in
sub
mov
int
add
fldl
or
lret
push
adc
out
and
popl
cmp
loope
out
sub
test
dec
aad
cmp
mov
mov
push
pop
int3
cltd
shlb
ja
dec
bound
sub
rolb
lcall
xor
insb
icebp
loopne
es
and
and
into
mov
cwtl
jnp
mov
fiaddl
add
pop
popa
lret
mov
sub
inc
bound
sub
push
add
iret
sub
jle
js
mov
dec
push
fcmovnu
xchg
shr
push
lret
movsb
push
cld
sarl
lret
mov
mov
popa
cmp
push
jb
outsb
xor
add
adc
mov
push
pop
push
lret
mov
out
std
push
adc
sbb
jbe
xor
out
push
mov
adc
ja
cmpb
je
mov
push
stos
fsts
test
pusha
push
out
loop
mov
negl
add
out
mov
jno
mov
push
in
inc
mov
lret
andpd
xchg
into
or
mov
std
in
je
mov
lret
xor
cld
mov
adc
or
enter
push
adc
sub
push
and
adc
mov
or
ret
leave
inc
mov
outsb
and
lea
push
sbb
jae
or
shr
cmovge
xchg
jo
fmul
mov
jmp
add
add
movsb
cs
mov
push
int3
shll
mov
cmp
shll
sbb
adc
leave
mov
rclb
stos
xchg
sub
cmp
clc
insl
jl
jnp
cmp
push
repz
jno
jno
sub
fwait
cmp
xor
or
cmp
sarl
adc
iret
jns
push
aad
arpl
movsl
xor
and
dec
rcl
ljmp
pop
int
and
xchg
bound
fcompl
xlat
jo
scas
in
mov
iret
je
loop
mov
inc
cmp
ret
cmpsl
repz
hlt
mov
mov
aaa
mov
mov
sub
leave
and
insl
mov
lods
xchg
fcmovnu
repnz
xlat
or
add
pop
icebp
or
incb
mov
push
or
jp
fistps
dec
je
rcrl
jecxz
and
arpl
faddl
sub
dec
mov
mov
imul
sub
test
int
out
int
or
lods
mov
mov
test
int3
in
xchg
filds
mov
aas
aaa
mov
jns
popa
or
push
mov
les
stc
jns
bound
add
hlt
push
adc
aas
addr16
xchg
mov
mov
jmp
cmpsl
mov
lds
or
adc
and
xor
clc
rorb
push
or
cld
mov
mov
iret
or
add
mov
pop
fbstp
mov
jns
add
jns
adc
add
orb
mov
inc
jb
repnz
adc
into
inc
jle
adc
std
mov
jo
jne
mov
mov
cmp
rol
cwtl
data16
sti
jge
inc
mov
ror
push
test
add
movsb
dec
icebp
sbb
insl
pop
lcall
nop
xchg
ss
repz
mov
les
sbb
sbb
outsb
cmc
pushf
mov
aad
outsb
jmp
push
and
dec
xchg
repz
call
int
imul
sbb
dec
cmpb
cmp
out
dec
negb
test
cmpsl
repz
xchg
pop
les
cli
cmpsl
dec
mov
push
push
jle
jecxz
lea
cmpxchg
mov
aad
pop
and
filds
inc
sbb
xor
xchg
shl
mov
out
add
cli
and
sub
push
jbe
in
push
push
adc
enter
xor
xchg
test
mov
mov
dec
mov
cld
add
add
inc
cmp
popf
cmc
fnstenv
mov
das
fsubrl
sbb
fldl
mov
mov
sahf
pop
jmp
or
lds
ja
scas
outsb
and
sbb
adc
push
repnz
sub
fldl
mov
mov
loop
and
sub
xor
xorb
out
and
int
cli
xchg
test
and
cmpsb
pop
mov
fwait
pop
xchg
rorl
mov
daa
jmp
mov
addr16
mov
add
movsl
std
add
cmpsb
push
mov
push
add
push
xor
test
in
test
push
mov
add
movsl
in
and
mov
test
or
push
xchg
mov
pop
pop
push
xor
cld
dec
or
mov
jns
push
add
inc
into
je
xchg
sbb
popf
sub
dec
jp
cmpsb
push
lea
push
xor
shll
jno
cmc
cmp
out
inc
leave
out
mov
hlt
fs
mov
mov
movsb
adc
ficomps
push
sub
test
sub
jp
pop
aam
in
xchg
lock
and
jp
pop
mov
push
mov
push
cmp
sbbb
adc
dec
arpl
lea
cmp
mov
cld
dec
insl
jge
mov
leave
out
bound
test
mov
xchg
sub
fs
mov
into
mov
jle
sub
xchg
mov
inc
adc
add
mov
fld
add
stc
pop
unpckhps
sbbb
or
insb
push
test
inc
leave
and
xchg
add
mov
mov
xor
test
fldcw
ja
fiadds
xor
mov
xchg
pop
mov
sub
ljmp
data16
and
mov
out
adc
mov
scas
cs
and
scas
cltd
test
xchg
jge
sahf
and
dec
jbe
loopne
sar
lret
adc
and
test
lret
xchg
jg
xor
or
adcl
xor
sbb
hlt
stos
fsubrl
loopne
testl
mov
in
xor
xchg
sbb
cli
sbb
imul
mov
sbb
addl
add
gs
mov
adc
mov
lret
add
pop
ss
pop
xchg
mov
sbb
jmp
lret
jb
mov
sbb
stos
sbb
int
add
fnstenv
pop
add
and
pushf
inc
aas
push
push
pop
inc
mov
movsl
subl
in
icebp
in
sbbb
or
subb
mov
xchg
insb
out
push
into
mov
sbb
adc
xchg
gs
mov
dec
test
sub
or
rorb
adc
mov
pop
and
push
or
insl
push
mov
dec
in
jno
push
sbb
push
add
orl
imul
push
mov
lods
bound
lcall
lods
pop
xor
cmp
enter
xor
cmpsl
in
clc
dec
js
cmpsl
mov
mov
push
inc
push
arpl
inc
xor
sub
scas
outsl
cmc
shl
dec
adc
xor
pop
sub
ret
push
xchg
pusha
mov
ds
cli
xchg
mov
and
dec
push
sahf
mov
add
aas
or
adc
add
lret
push
scas
fisttpll
in
xor
dec
shl
hlt
leave
shll
je
cmp
cmpsl
pop
pop
lret
icebp
and
std
mov
rcrb
sbb
pop
mov
fcmovnbe
aaa
cmpb
aas
pop
jo
and
adc
fists
aad
in
addb
mov
pop
insl
mov
mov
cmpsb
add
cltd
dec
test
cli
loope
push
push
mov
out
mov
js
pop
jo
add
inc
mov
ljmp
sbb
lods
decb
out
js
pop
decb
xchg
pop
and
test
shl
cmp
insb
mov
mov
pushf
inc
add
or
test
popf
popa
dec
jns
insb
in
ljmp
pop
xor
arpl
sbb
sbb
sbb
repz
mov
dec
ja
popf
xlat
add
fstps
add
pop
mul
push
add
xchg
xchg
mov
in
or
adc
or
repz
fisttpl
fndisi(8087
mov
mov
pop
mov
leave
sub
mov
mov
sbb
lret
ret
mov
sbb
pushf
repnz
sahf
ret
adc
add
fbstp
jge
in
inc
pop
rcrl
ja
lahf
sub
pop
pop
out
pushf
ds
and
ret
cwtl
jmp
or
stos
dec
mov
sub
fidivl
sbb
in
push
icebp
dec
sbb
sbb
push
in
xor
stos
gs
cmp
jmp
and
in
jecxz
addr16
cwtl
cld
add
mov
movsl
frstor
adc
shufps
sbb
xor
lahf
shrl
add
test
and
cltd
or
lds
scas
inc
jb
mov
sti
mov
sub
incl
push
adc
xchg
icebp
pop
push
jge
cmp
jl
aas
in
jecxz
or
sub
xor
gs
dec
mov
cmpsl
lock
out
xchg
jecxz
or
mov
push
call
adc
mov
loope
fldl
ficoml
dec
fcos
xor
gs
stc
mov
aaa
inc
ret
leave
lea
add
dec
mov
icebp
loope
inc
xor
mov
jae
movsl
adc
push
fsubs
jge
inc
rclb
mov
pop
inc
ror
cmp
xchg
stos
outsb
mov
inc
add
sub
dec
popa
mov
pop
inc
mov
push
pop
pushf
mov
loope
insb
pop
enter
push
sub
mov
push
mov
fwait
into
loopne
icebp
pop
mov
xor
loopne
rol
scas
roll
push
jp
fnstsw
push
inc
mov
or
pop
fistpl
push
add
push
dec
sbb
xchg
lods
ret
js
add
adc
repz
scas
xor
nop
adc
loope
cmp
fldl
out
sti
or
stc
cmc
sbb
aas
sahf
ret
mov
cs
cmp
cltd
push
shlb
sub
sbb
sub
in
sub
and
ss
pop
mov
lock
inc
sahf
mov
in
loop
icebp
xor
push
add
sbb
mov
xchg
or
mov
or
mov
pop
icebp
pop
inc
aaa
pop
sub
movsb
popf
mov
incl
cmpsl
sbb
push
out
js
xchg
and
sub
ret
std
out
ljmp
pusha
in
mov
push
cwtl
dec
aad
insl
jecxz
dec
jg
gs
xor
mov
mov
mov
repz
jmp
les
mov
and
mov
pop
or
icebp
xchg
xchg
std
cmp
aad
mov
dec
cmc
das
mov
sub
cld
xor
xor
xchg
mov
xchg
inc
stc
cmp
mov
ljmp
push
rclb
in
or
decb
ljmp
repz
jb
jbe
xchg
cmp
lds
iret
pop
enter
fmull
add
test
nop
sbb
das
insl
in
scas
mov
stos
sbb
xchg
xor
jp
clc
andb
mov
addb
incl
lea
mov
stc
push
sub
or
and
sub
into
rcll
mov
insl
rorb
mov
pop
add
xchg
popa
js
and
sub
or
cmp
sbb
fimuls
sti
es
sbb
jmp
or
xchg
adc
xor
daa
fs
mov
iret
mov
negb
filds
mov
subl
sahf
push
and
dec
sub
stos
mov
call
in
inc
mov
cmp
or
fdivrs
insl
dec
jae
jns
mulb
roll
inc
lret
mov
sbb
xchg
out
pop
adc
push
lds
clc
leave
shlb
fadd
popa
jae
loope
ret
ljmp
adc
dec
xchg
lods
xor
loop
fistl
mov
shlb
loopne
mov
and
insl
push
mov
push
mov
arpl
std
and
out
jmp
jae
mov
negb
popf
imul
mov
xchg
xor
jle
cmpsb
aad
dec
jge
gs
ret
fdiv
or
shl
jge
sub
out
lds
sahf
mov
in
gs
mov
xchg
mov
clc
clc
xchg
push
ljmp
test
ljmp
xchg
fcomip
mov
mov
movsl
add
xor
out
imul
iret
ficomps
xchg
sub
test
ja
sub
fldl
jmpw
xchg
pop
adc
mov
adcb
lret
orl
mov
dec
stc
iret
push
xchg
pop
pop
dec
inc
cmc
loope
leave
mov
pop
in
adc
fdivp
push
in
mov
cld
pop
mov
out
aam
jno,pn
iret
les
lds
mov
cmpsl
pop
dec
xor
in
int3
fistpll
inc
sbb
xorb
je
inc
stos
mov
or
adc
push
pop
jne
imul
test
repz
mov
rcl
gs
xlat
int
sub
jle
js
ret
mov
or
mov
les
push
xor
dec
push
loope
xchg
rol
imul
mov
jb
outsl
in
sahf
inc
pop
add
arpl
notl
xor
mulb
cmc
jbe
imul
or
or
xchg
scas
push
out
clc
mov
test
inc
lea
mov
add
out
in
nop
sub
mov
out
orb
sbb
adc
aas
xor
lret
push
dec
insl
in
mov
into
and
xchg
cmc
lret
mov
clc
out
movsl
adc
jne
leave
jmp
rcr
add
jmp
sub
adc
ror
adcl
lret
sub
or
data16
push
jbe
ret
movb
aad
jecxz
mov
mov
in
je
bnd
lock
mov
sub
das
xchg
jmp
mov
aaa
inc
loopne
je
and
loop
push
mov
jbe
pop
cmp
push
mov
inc
or
xchg
or
ljmp
or
fists
sbb
pop
js
inc
ja
hlt
jns
imul
filds
iret
out
sbb
and
addr16
ret
hlt
popa
out
push
and
sub
push
mov
test
enter
dec
sub
rcl
fcomp
and
je
xchg
mov
loopne
sbb
pop
add
adc
xchg
cmpsl
xor
int
iret
scas
cli
cmp
dec
daa
jb
loopne
out
shrl
and
imul
inc
mov
xor
insb
sahf
icebp
jbe
rep
jns
xor
stos
mov
push
dec
out
or
jge
xchg
mov
xor
std
cmp
int3
lds
in
push
sbb
mov
scas
sbb
outsb
or
in
idivb
stos
sub
bound
sbb
add
pop
rcrb
hlt
in
lods
adc
mov
sub
pusha
dec
mov
fnsave
ffree
ret
xor
into
add
insb
adc
mov
mov
in
jno
popf
mov
cmp
testl
jno
pop
loop
mov
jb
test
lea
jo
mov
outsl
lret
test
push
loopne
xor
ret
cmp
push
xchg
jge
lret
pop
aad
or
test
ret
cmp
addb
lahf
jbe
jns
adc
pop
fisttpll
cs
or
std
cs
inc
iret
aaa
sub
and
jne
aam
cmp
rol
or
inc
jl
or
mov
cli
daa
sarl
jno
jp
sub
adc
push
mov
xor
lret
mov
mov
jmp
insl
ficoms
dec
pop
pop
or
les
inc
pop
test
mov
ret
lret
pop
ljmp
mov
mov
enter
push
sub
ficompl
into
mov
jne
mov
xchg
fucomp
fldenv
push
pop
push
mov
jl
and
sbb
imul
popf
dec
cltd
hlt
popf
push
cltd
leave
popf
jno
sahf
popf
movsl
cwtl
or
inc
inc
pop
outsl
ret
insl
add
add
jmp
mov
lret
cmpsl
orl
pop
out
mov
sbb
jno
adc
loopne
push
lods
frstor
stc
mov
inc
lcall
int
mov
gs
leave
fs
push
cmpsb
inc
shrl
jmp
outsl
data16
gs
jne
dec
add
mov
mov
sbb
mov
pop
ja,pt
mov
lock
inc
add
fnstenv
mov
mov
push
jmp
adc
push
imul
or
fnstsw
push
cld
stos
or
mov
or
vmovaps
cmc
xlat
mov
add
cli
lock
sub
fcmove
std
repnz
out
gs
push
sbb
pop
les
mov
cmp
mov
shrb
adcb
mul
sub
xchg
cld
adc
cs
mov
dec
lret
inc
iret
push
add
mov
or
lea
sbb
sub
jbe
and
sub
test
sub
repz
inc
insl
test
test
std
ds
popf
adc
pop
imul
mov
rclb
fildl
cmc
scas
int3
pop
or
pop
mov
clc
fsub
pop
das
or
xchg
into
xor
daa
jb
mov
mov
add
xchg
mov
pop
testb
fucomip
movsb
loope
push
and
add
scas
sub
shll
out
mov
and
stos
cmpsb
icebp
mov
das
cmp
mov
xor
mov
outsb
inc
fisttpl
pop
enter
sub
jge
cmpsb
adc
push
addl
pop
or
and
dec
int
xchg
sbb
jae
es
lahf
and
add
fiadds
xchg
xor
xor
inc
lahf
idivb
xor
roll
imull
inc
inc
imul
jne
adc
stc
loope
loop
mov
jecxz
lret
mov
jae
push
sub
cmc
xor
stos
lcall
std
mov
jno
dec
add
jae
mov
in
dec
pop
xchg
xchg
jg
or
jae
sahf
in
mov
or
dec
mov
mov
inc
in
notb
or
xor
mov
inc
add
lods
dec
rcl
repz
xor
hlt
inc
mov
mov
hlt
mov
mov
push
aaa
cmp
pop
dec
fwait
inc
iret
xor
inc
cmc
int3
ret
xor
xor
mov
movsl
fdivrs
bound
leave
ret
lods
dec
out
cltd
fstpl
push
into
fnstenv
orl
rorb
in
cwtl
adc
repnz
mov
in
mov
or
jmp
fcompl
mov
dec
inc
sbb
dec
leave
xchg
sub
imul
xor
pop
jno
sub
setne
kxnorw
rcll
cmp
sbb
pop
dec
repz
ds
clc
inc
xchg
sbb
pop
xor
loopne
jb
mov
frstor
shrl
sbb
subl
sbb
test
shl
cli
jnp
shl
sub
lods
xchg
dec
jg
mov
into
mov
stos
and
mov
adc
int
sub
mov
add
and
int3
xchg
jle
lret
mov
dec
std
push
in
push
and
add
bound
jae
jae
aad
sub
jmp
fmulp
xchg
ja
stos
push
push
mov
gs
sub
lret
aas
repnz
mov
xor
mov
jne
addl
mov
jecxz,pn
lods
in
lret
movsb
pop
sub
push
mov
push
xor
lea
sbb
mov
xchg
pop
roll
mov
fsub
pop
mov
pop
daa
mov
mov
jno
ret
scas
or
in
loope
and
mov
std
test
in
loope
jmp
sub
mov
xchg
test
sbb
pop
les
dec
inc
ret
mov
lods
popa
mov
rol
xor
sarb
mov
data16
jecxz
add
jnp
aas
jl
push
mov
cmpsl
mov
jns
ficomps
cmp
sub
mov
loop
mov
loop
lahf
xor
jns
xchg
stos
jnp
repnz
and
inc
out
pushf
xchg
and
jge
test
popf
push
push
into
jmp
cmc
pusha
in
jne
dec
in
call
out
int
cli
in
jl
mov
cmp
ret
jne
mov
fdivrs
adc
and
and
pushf
and
ret
inc
mov
outsb
mov
lea
dec
pop
pop
clc
mov
lcall
push
lea
lea
jae
and
test
adc
jge
add
and
roll
ja
ja
jmp
add
idivl
sub
or
xor
cltd
xor
pushf
jno
xor
pop
push
xchg
loope
cmpsb
pop
pusha
ficompl
sub
adc
aam
dec
jne
fisttps
pop
lahf
mov
sub
std
ret
cmpsl
push
fstl
cmp
sub
outsb
jbe
push
cs
inc
push
cmc
test
mov
mov
add
shrl
jmp
inc
cmpsl
adc
mov
dec
or
fmulp
mov
xchg
int
and
mov
and
lcall
jmp
subb
lret
or
cmp
ret
cmp
rorl
push
xor
pop
outsb
push
and
je
and
cmp
imul
test
dec
jmp
and
cmpsl
int3
jge
jle
sahf
cld
push
mov
sahf
lcall
cld
add
pop
popfw
add
shr
out
mov
out
dec
or
fmulp
jae
jb
sub
and
sub
cs
dec
js
xor
inc
fisubrs
cmpsb
add
pop
adc
fmuls
rorb
cs
mov
push
inc
adc
adc
ss
push
push
mov
sub
mov
xor
add
mov
sti
mulb
cld
pop
push
lret
cld
jne
in
fsts
movsb
adc
and
call
ffree
leave
hlt
stos
mov
inc
stc
dec
movsl
imul
pusha
out
xchg
cmc
outsl
jo
adc
pop
leave
inc
outsl
mov
xorb
xchg
cmc
fistps
push
fidivl
jno
cmpsl
cmc
xchg
pop
jmp
lea
mov
lds
ljmp
or
in
dec
inc
dec
inc
mov
push
arpl
inc
aaa
mov
movsb
dec
fwait
dec
xlat
dec
les
shlb
xor
aaa
mov
sbb
pop
lock
and
cli
push
dec
mov
aaa
and
xchg
in
or
dec
rorl
loop
int3
dec
fdivrp
leave
js
in
dec
mov
or
mov
adc
icebp
jmp
jge
mov
ljmp
bnd
dec
sub
jno
mov
mov
in
lret
inc
cltd
mov
mov
mov
int
jmp
hlt
jbe
mov
or
jmp
divb
in
lds
enter
jb
loopne
rorb
dec
sub
je
in
push
jp
jne
addr16
fsub
jnp
repnz
jecxz
call
std
push
data16
add
and
and
adc
dec
int
xor
ja
es
xchg
andb
push
cmpsb
je
ss
cmp
data16
out
xor
inc
cmpsb
and
mov
dec
mov
inc
pusha
inc
mov
in
negl
push
mov
das
and
adc
into
ret
lret
adcb
incl
jmp
ret
mov
lods
ret
pushf
dec
add
jmp
sub
inc
jne
jns
and
fmull
fs
cmp
cmp
jnp
adc
push
int
roll
and
fldt
jo
insb
ret
xchg
jg
or
sub
mov
mov
jmp
mov
imul
lods
ffreep
push
xchg
sti
filds
sbb
fistps
add
jl
cmp
fwait
loope
arpl
enter
cmp
cmpsb
call
sbb
outsb
test
dec
jmp
pop
sbb
pop
pushf
lahf
dec
sub
jmp
xlat
in
mov
sbb
test
inc
fiaddl
shl
jae
icebp
aam
insb
das
jecxz
loope
push
jo
xor
ja
fs
or
sub
adc
xchg
jmp
fdivl
adc
movsl
mov
faddp
add
aam
push
mov
out
push
mov
mov
enter
push
pop
adc
aad
addr16
incb
shr
sub
pop
out
mov
push
leave
in
cmpsl
pop
div
lods
sbb
dec
push
out
lock
test
xchg
aaa
shrl
mov
add
sub
sub
jecxz
pop
pop
aad
in
mov
test
xchg
jne
sar
aas
lods
sub
scas
shll
shlb
cmp
add
ret
mov
dec
push
movsb
out
pop
mov
inc
push
fcmovb
out
frstor
mov
pop
sahf
push
jecxz
jle
mov
shll
filds
jb
push
push
sub
add
gs
je
lret
scas
dec
in
xor
mov
subb
out
cld
jb
cld
lret
add
inc
lahf
mov
sti
daa
sbb
xchg
sub
xor
push
call
adc
shrb
mov
dec
dec
cmp
movsl
pop
xor
fisttpl
add
push
repnz
insl
mov
loopne
cmpsb
hlt
push
xor
pop
clc
jns
je
xor
test
lock
sub
inc
xor
xor
cmp
out
les
jl
and
rolb
stos
sub
gs
pop
cli
pop
ret
xchg
insl
sahf
aad
int
dec
test
jl
test
pop
dec
lea
ljmp
out
adc
sbb
dec
lock
gs
pusha
push
jb
pusha
pop
jp
in
add
cmc
int
orb
loope
pushf
pop
mov
in
test
in
js
shlb
lds
lret
adc
testb
hlt
mov
and
in
jecxz
ficoms
add
push
mov
imul
dec
ljmp
mov
mov
orl
or
lods
adc
rcrl
and
test
stos
pop
mov
jne
leave
loop
pop
sbb
mov
pop
jge
cmp
xor
mov
sub
add
and
loopne
mov
ds
push
stc
das
inc
xor
and
andb
push
xabort
outsb
xchg
bound
or
sub
xor
mov
in
lcall
dec
cmpsb
xchg
xlat
lds
lret
adc
and
loope
xchg
ret
inc
jo
shll
mov
mov
rcrb
add
es
adc
jo
pop
orl
fistl
mov
xchg
in
cmp
mov
vpsubusw
and
loopne
test
and
inc
arpl
add
push
dec
cmp
shl
std
cmc
mov
popf
icebp
dec
in
inc
pop
adc
mov
mov
pop
xor
mov
test
loop
imul
loopne
bound
movsl
add
dec
pop
std
jbe
mov
mov
adc
loop
mov
or
add
xchg
loopne
in
mov
mov
add
arpl
fdivl
pop
push
or
sti
or
mov
test
shlb
pop
rcrb
cmp
int
popf
xlat
insl
loop
push
addr16
add
outsl
lret
push
inc
in
into
in
adc
sbb
jecxz
push
testb
in
cmp
movsl
fs
mov
mov
and
loopne
shl
cmp
test
inc
test
in
jl
shr
adc
dec
and
push
in
lods
fisttpl
jb
ss
shll
lock
cli
ja
pop
sub
sbb
jb
cmpsl
insl
int3
mov
or
mov
shll
ret
popa
jl
dec
jmp
add
cld
dec
and
xchg
add
mov
cmpsl
in
jl
jbe
arpl
aas
cmp
sbb
dec
add
arpl
int3
rcrb
xor
cs
inc
jb
push
add
sub
gs
push
jno
mov
or
ljmp
mov
ret
adc
pop
adc
adc
ficoml
sub
loope
mov
add
test
jnp
lock
out
icebp
xchg
cwtl
mov
cmp
repz
mov
mov
fucomip
cmp
push
jmp
jecxz
mov
pop
push
insl
inc
pop
xor
insl
iret
add
fsubl
repz
jo
cmp
mov
mov
stc
arpl
ljmp
adc
nop
in
das
mov
clc
or
add
add
insl
xor
pusha
pop
pop
and
cmp
in
sbb
pop
in
in
loop
femms
mov
repz
xor
jnp
loopne
inc
cli
les
pop
lret
scas
jge
cmp
mov
push
inc
lods
push
and
add
shl
or
sub
xchg
fisttpl
mov
in
mov
jo
fcmovbe
sbb
fs
les
leave
and
mov
lret
xchg
lods
out
lret
adc
fmuls
test
xchg
and
jl
inc
push
out
rcrb
dec
jmp
push
mov
mov
fldt
mov
jecxz
cmpsl
adc
jecxz
iret
mov
pop
adc
repnz
xor
cmp
dec
mov
lret
roll
nop
jp
xchg
std
pop
je
jecxz
add
xchg
dec
les
mov
dec
dec
inc
mov
nop
loope
outsb
xchg
roll
inc
in
mov
data16
into
dec
loope
icebp
lods
jo
xor
jns
pop
mov
rcrl
repnz
test
fldt
pop
pop
jge
pop
ss
lret
mov
inc
call
fldl
dec
bound
jmp
add
mov
push
or
fmull
aaa
subb
loopne
js
hlt
xorl
js
int
or
mov
outsl
pop
mov
dec
mov
imul
inc
adc
fwait
pop
xchg
imul
or
jecxz
mov
popf
fs
mov
test
stc
shl
sbb
lret
icebp
push
adc
sahf
sti
jmp
jle
iret
ficoms
sbb
push
jge
int3
icebp
dec
adc
dec
aaa
in
and
outsl
push
mov
and
mov
loopne
jno
fisubrl
xor
cmp
arpl
pop
or
fnstsw
fstl
push
adc
in
daa
xor
shrl
dec
add
lret
sbb
and
mov
popa
test
jns
test
push
repnz
mov
add
sbb
mov
add
dec
aad
out
mov
dec
repnz
shlb
outsb
mov
pop
xlat
movsb
test
aad
loop
loopne
rolb
fcoms
fldl
aad
int3
pop
std
lcall
cmc
popa
mov
in
loop
divl
mov
and
and
jbe
subl
data16
cmc
mov
rcrb
popf
or
lahf
outsb
add
lcall
dec
xchg
iret
pop
std
pop
aam
ret
xlat
xlat
fdivrl
push
loope
sbb
mov
aas
pop
and
inc
cmp
les
in
jne
movsb
int3
std
sti
jg
and
jg
add
ficompl
int3
mov
sub
jbe
pop
sub
dec
jne
push
cmp
xor
dec
pop
rcrl
fistps
jbe
sbb
ret
pushf
pop
mov
cs
xor
jns
cld
mov
sbb
dec
mov
jnp
xchg
pushf
fisubrs
and
fwait
jg
push
add
jo
xor
mov
inc
pop
daa
jp
cld
insb
enter
je
shrl
jmp
mov
and
mov
mov
cmc
pusha
cltd
jg
movsb
sbb
loope
mov
lock
sub
adc
fildll
outsb
cmp
sub
jo
fisubs
sbb
or
clc
mov
scas
repz
out
js
xor
cmpsl
in
or
cmp
dec
movsl
out
and
outsb
enter
test
aam
inc
adc
cli
pop
sub
out
mov
insl
xor
inc
ds
jae
cmp
cs
dec
cmp
jnp
arpl
push
leave
lcall
xchg
mov
fildl
or
sub
cwtl
testl
std
inc
or
jmp
out
jmp
cmp
mov
or
adc
mov
mov
shlb
mov
pop
shll
inc
mov
inc
mov
into
stos
cmp
movsl
jae
sbb
cmp
test
test
comiss
pop
jmp
xchg
out
add
dec
xorl
dec
or
mov
cwtl
enter
iret
inc
cmp
jb
jne
push
into
jns
je
push
fidivs
ds
mov
outsb
mov
scas
int
push
out
popl
shl
push
push
xor
add
sbb
adc
hlt
shll
jle
xor
dec
mov
xor
or
icebp
inc
cmp
call
push
adcl
aam
fdiv
rcl
lret
xchg
enter
mov
sbb
out
mov
popa
in
push
bsf
and
pushf
hlt
xchg
lock
repnz
push
insb
or
mov
dec
xchg
loop
pusha
sub
mov
inc
push
out
cs
jl
jl
test
push
and
bound
loope
fsub
push
adc
dec
jb
inc
add
cmp
fnstsw
cmc
or
add
enter
push
cmp
out
outsl
lea
andb
cld
arpl
jns
clc
pop
mov
dec
out
hlt
adc
jmp
pop
insl
das
push
shlb
mov
cld
scas
push
aam
cmpsb
sub
fs
mov
push
loop
loope
fs
mov
lret
aam
xchg
mov
in
in
test
scas
mov
fisubrs
jne
scas
mov
mov
push
mov
aas
dec
inc
dec
push
fdiv
push
pop
mov
ja
xchg
repz
repz
cvtpi2ps
outsb
mov
and
sarl
or
fimull
mov
out
push
adc
pusha
out
mov
lods
clc
rolb
sbb
pop
test
fiadds
lock
hlt
pop
jbe
in
and
mov
jne
icebp
movsb
lds
add
out
ficomps
rcll
add
int3
lds
addr16
mov
or
js
insb
dec
aad
mov
mov
cmp
adc
clc
clc
push
and
push
arpl
test
hlt
add
inc
loope
inc
jg
add
sti
inc
jo
repnz
pop
out
cmpsb
dec
add
repnz
out
dec
xor
mov
ss
add
mov
xchg
sub
scas
inc
faddl
outsb
dec
in
test
testb
fcomps
pop
mov
jno
fdivs
or
inc
mov
mov
test
xlat
and
mov
cmc
mov
push
add
ror
inc
aad
mov
xlat
out
mov
xor
into
xchg
xchg
inc
lahf
in
xor
jo
pop
roll
sbb
testb
fxam
and
fisubl
jbe
adc
mov
jae
pushl
test
mov
icebp
in
call
jge
xor
loope
and
pushf
mov
leave
cmp
stos
mov
inc
nop
jno
fdivrl
in
adc
mov
pop
imulb
clc
arpl
dec
nop
push
sub
les
shll
fbld
inc
enter
lret
mov
fucomi
push
inc
and
mov
mov
jae
adc
lea
loopne
outsl
mov
push
aad
push
pop
test
jnp
and
jns
sbb
outsl
shrb
dec
cld
in
mov
out
inc
cld
bound
jo
push
cmpsb
cmp
sti
mulb
cs
add
ret
movsl
mov
addr16
mov
sbb
popa
hlt
iret
call
jecxz
mov
movsb
fnstenv
mov
ljmp
push
or
sarb
xor
mov
ss
gs
jno
sub
inc
xchg
xor
mov
push
mov
leave
mov
leave
mov
insl
inc
flds
frstor
inc
sbb
lret
clc
outsb
insb
clc
mov
pop
mov
lods
adc
sub
mov
addr16
scas
lods
dec
pop
movsl
fisubl
in
adc
fcoml
sarl
enter
jge
add
sbb
mov
jbe
adc
fcoml
imul
ds
dec
pop
pop
xchg
mov
je
test
lock
dec
inc
into
cmp
push
adc
enter
dec
lret
mov
mov
test
cmpsb
ret
fidivs
mov
int3
dec
enter
cmpsl
in
cld
pop
lea
icebp
insb
jl
mov
cmpb
fldl
add
push
ljmp
jns
mov
sbb
dec
cwtl
xor
das
jae
or
divl
lret
ljmp
lret
xchg
and
jns
pop
dec
or
push
out
pusha
mov
mov
cmc
shlb
stos
mov
outsl
jecxz
ret
inc
std
add
and
mov
push
and
fcoms
out
in
movsb
fdivrs
jo
into
aam
in
repnz
xchg
inc
jne
aam
gs
in
inc
lods
cmp
dec
add
outsl
in
loop
mov
in
fdivrp
outsl
sub
lea
insb
inc
js
xchg
mov
fs
popf
sub
sahf
pop
or
cmp
rcrl
adc
xchg
fs
shl
icebp
repz
mov
enter
mov
ljmp
sarb
arpl
push
outsb
mov
jmp
mov
pop
movsl
or
sbbb
lds
movsb
psubsb
dec
sub
insb
adc
adc
mov
iret
scas
cwtl
out
les
dec
dec
cmpsl
ffree
jmp
jle
test
xchg
fwait
fwait
jo
lret
leave
pop
pop
movsb
dec
or
add
mov
fst
clc
rorb
dec
xchg
stc
mov
scas
inc
xchg
gs
dec
imul
lret
and
stc
adc
sti
rclb
loop
add
in
pop
lea
mov
push
es
mov
out
aaa
test
mov
lods
movsl
add
mov
add
sub
cmc
arpl
cmpb
popf
add
stc
xlat
mov
movsb
dec
inc
mov
adc
jb
dec
iret
sub
jo
sub
push
lds
rcrb
pop
rcl
outsl
sbb
mov
loopne
ja
inc
mov
or
push
popa
icebp
inc
fidivl
scas
inc
jg
fcompl
pop
clc
leave
xchg
std
mov
clc
or
out
ja
dec
out
jne
int
xchg
sbb
out
sub
jge
jo
shll
fstpt
push
add
xor
add
lock
cmp
out
inc
push
ret
frstor
mov
dec
popa
lret
jnp
into
loop
and
insl
cmpsl
cmpsb
inc
mov
mov
loop
in
lds
adc
scas
jmp
mov
pop
les
sub
fidivrs
es
lods
or
int3
and
test
inc
cmpb
push
jb
ljmp
ds
out
or
xchg
adc
xor
mov
scas
lcall
inc
push
inc
cwtl
pop
add
popa
or
popa
arpl
insl
push
mov
divb
jp
xchg
fldl
and
mov
data16
mov
adc
test
adc
call
test
mov
mov
jnp
nop
mov
and
mov
dec
fs
xchg
out
dec
loope
dec
dec
push
inc
push
mov
pop
les
xchg
push
gs
mov
jne
inc
adc
and
xlat
inc
mov
push
fidivrl
movb
push
les
inc
sbb
int
pusha
movl
pop
int
popa
aas
popa
arpl
test
push
xchg
negb
icebp
pop
xor
jae
sbb
decb
das
dec
std
adc
and
mov
adc
pop
sbb
in
dec
aad
mov
in
lea
push
adc
mov
test
ret
test
lock
sub
dec
rorl
popl
add
xchg
int
cmp
xor
add
jp
pop
dec
mov
std
jp
out
seto
mov
ret
aaa
jns
movsl
mov
in
or
sbb
insl
dec
mov
js
sub
icebp
jge
fiaddl
xchg
hlt
xchg
mov
xchg
push
stc
je
lcall
mov
jle
and
jmp
pop
loop
aas
mov
dec
adc
cmp
int
pop
push
jmp
stc
mov
into
mov
repnz
and
les
jno
stos
in
in
mov
jp
sbb
add
xchg
loopne
shr
push
pop
inc
push
pop
les
cmpl
cli
pop
ds
jns
cltd
aas
push
idivl
lahf
xchg
mov
xchg
int
das
lcall
lock
add
lea
jge
mov
fldcw
test
enter
ljmp
mov
xor
dec
in
lahf
mov
mulps
jb
push
mov
shl
or
jno
lret
and
cmp
mov
sub
insl
cmpsb
sbb
ljmp
push
mov
ret
test
pop
or
mov
fs
pop
insl
loope
add
adcb
and
pop
cmp
cmp
loope
sti
sub
push
and
mov
scas
out
push
xchg
lods
popa
sti
sbb
outsb
iret
imul
ret
fsub
push
pop
mov
sti
scas
fnstsw
inc
inc
jl
out
iret
fsubrl
in
test
push
jnp
inc
xchg
ja
outsb
and
mov
outsl
dec
shlb
les
xchg
cmp
pushf
stos
scas
mov
lods
negl
xor
adc
aad
inc
fsubs
ljmp
fsts
aad
xchg
ljmp
or
aad
int
call
js
and
cmpsl
cmp
and
sub
push
fdivr
jmp
stc
ret
arpl
cmc
fwait
shrb
adc
mov
sti
icebp
cmp
stc
xchg
enter
mov
outsl
mov
fisttpl
addr16
ja
mov
ds
movswl
and
mov
mov
mov
lds
sub
testl
lret
test
or
icebp
jnp
movsl
out
inc
arpl
mov
sbb
cli
loope
testb
or
in
inc
mov
mov
jmp
jecxz
mov
fisubrs
icebp
jno
push
inc
call
fstl
adc
adc
ss
les
cmp
movsb
mov
push
sub
mov
sub
jns
fdivrp
adc
mov
xor
ds
push
push
cmp
and
mov
ss
xchg
xor
out
lods
push
sbb
frstor
loope
test
mov
lret
xor
test
xor
lock
push
repz
mov
aas
push
and
dec
pusha
jno
sub
dec
into
xchg
rcrl
and
adc
in
xchg
lret
jb
push
out
mov
je
cmc
xchg
xchg
push
sbb
shl
push
xchg
pop
mov
cwtl
jb
lods
xor
pop
popa
insl
pop
sub
pop
jecxz
leave
xchg
cli
pop
xor
jae
jmp
jmp
daa
movsl
insl
mov
pop
in
cmp
push
add
out
sahf
aad
push
out
xor
jno
imul
movsl
sbb
dec
and
and
lods
inc
lret
inc
lret
je
dec
and
mov
std
jae
sub
imul
cmpsl
xchg
movsl
cmp
xrelease
mov
adc
call
xor
push
pop
or
mov
pushf
rorl
mov
fsubrl
push
in
pushf
dec
ss
mov
outsl
mov
push
imul
das
scas
or
cmpsl
mov
aam
sub
adc
mov
fwait
arpl
out
jle
mov
cmp
sbb
cwtl
sti
stc
movsl
gs
stos
xor
int3
mov
aam
enter
nop
xchg
pop
jbe
jmp
dec
mov
out
lock
icebp
xchg
das
arpl
fwait
gs
xchg
jle
jmp
fs
leave
xchg
xchg
xchg
cmp
inc
daa
xchg
loopne
data16
push
in
lods
hlt
jecxz
jmp
and
popa
idivb
lods
jnp
into
call
cmp
mov
pushf
cmp
clc
jle
ret
mov
arpl
leave
fbld
jp
aaa
aam
mov
pop
pop
xlat
sarl
loope
xor
addl
lock
inc
popa
ds
sbb
jno
push
mov
aam
add
ljmp
gs
cmp
mov
arpl
bound
mov
xchg
sbb
jmp
repnz
icebp
mov
mov
inc
int
mov
test
jle
fsubl
push
loop
shrl
dec
insl
repnz
adcb
sub
lods
hlt
xor
add
ljmp
loopne
jno
adcb
scas
imul
out
xchg
iret
and
lods
add
ror
push
add
jmp
xchg
jecxz
in
pop
dec
xor
pushf
cltd
sbb
lret
push
xor
push
mov
lcall
roll
ljmp
cmp
cmpsl
les
and
test
in
flds
ljmp
sbb
loopne
mov
inc
pop
sbb
jle
repz
sbb
fiadds
out
inc
in
mov
adc
std
push
out
aam
roll
mov
pop
lock
cltd
test
xor
xlat
mov
mov
in
dec
dec
ret
mov
xchg
cmc
jg
testb
ljmp
mov
xorb
xor
stos
push
int
mov
adc
jp
xor
insl
sub
outsl
stc
inc
mov
icebp
mov
xor
mov
ljmp
cmp
pusha
jb
xor
cwtl
and
out
adc
popa
cmpsl
xor
std
jmp
or
pop
stc
je
jge
loope
pop
daa
or
clc
sbbl
das
jp
push
dec
mov
lahf
test
push
mov
jno
int
out
jmp
scas
stos
adcb
mov
in
jne
inc
mov
adc
clc
dec
js
popa
scas
gs
cwtl
int
jmp
das
jbe
sub
daa
lret
in
stc
ljmp
mov
push
adc
je
scas
in
xchg
xchg
jo
out
andb
pop
test
lret
add
jae
mov
loope
movl
inc
dec
xchg
add
lret
cld
ljmp
int
outsl
ret
test
jmp
fdivrp
imull
jno
int3
clc
lret
mov
xchg
cmpsl
mov
test
ljmp
les
pop
mov
add
in
daa
xchg
ret
in
aaa
sahf
mov
sti
xor
cmc
cwtl
inc
int
pop
sti
jae
sub
imul
lds
loope
xchg
rcr
in
popa
stc
aaa
add
and
cmpsb
pop
pop
aaa
push
mov
out
bound
ss
out
pop
sahf
push
push
push
stos
jnp
add
jb
fimuls
pop
pop
mov
int3
mov
fisttps
push
push
adc
icebp
icebp
adc
stos
in
fmulp
or
xor
in
push
aas
adcl
jle
xor
adc
repnz
in
xlat
idivb
pop
xor
cmp
ret
adc
lea
stos
stos
dec
mov
dec
enter
fs
jno
lds
leave
movsb
lds
fdiv
jne
mov
pop
ja
cltd
dec
jno
inc
popa
jbe
jbe
nop
lcall
sbb
sbb
sarb
mov
fstl
orl
pushf
and
or
fwait
sbb
daa
inc
jge,pt
in
pushf
cmpsl
or
xor
sub
inc
jg
sub
cmp
nop
icebp
mov
in
sub
lock
in
cmp
lods
mov
sub
cmp
push
pop
icebp
mov
adc
inc
shrb
lahf
xorb
in
xchg
stc
and
imul
xor
daa
push
fildl
mov
mov
jecxz
addr16
popf
cli
mov
xchg
jns
mov
jmp
fldz
or
sbbl
xor
mov
outsb
cwtl
lcall
and
lret
adc
inc
xor
inc
stos
bnd
movsb
pop
mov
ljmp
jmp
adc
aas
jae
add
push
in
xorl
cmp
cmp
and
outsb
xor
stc
nop
idiv
cmc
shl
lds
in
bound
sahf
pop
or
xor
js
in
mov
fistl
adc
inc
int3
xchg
and
out
xchg
dec
ja
repnz
call
mov
idivb
fs
fiaddl
pusha
xor
insl
cmpsb
sub
push
dec
or
loopne
or
jecxz
aas
sbb
mov
push
pop
imul
jmp
or
hlt
movb
add
or
mov
xchg
adc
adc
outsl
pop
loopne
call
lock
push
adc
leave
adc
dec
sub
cmp
movsb
insl
insb
fisttpll
jbe
xorl
jnp
fldcw
pop
lcall
cmp
cmpsl
mov
lock
mov
pushf
jmp
inc
pop
jg
fnsave
fsubs
or
ja
and
in
popa
in
push
mov
leave
push
push
stos
outsl
movsl
dec
in
add
loop
cmc
leave
loope
lods
mov
hlt
jne
mov
aam
std
sub
scas
mov
mov
push
cmpsb
push
inc
push
pop
adc
pushf
push
pop
loope
push
in
pop
lods
xor
xor
push
gs
std
loope
jecxz
push
aad
mov
jo
push
mov
xor
cmpsb
iret
xlat
inc
jecxz
mov
faddl
lock
sbb
shlb
push
in
into
andl
pop
fsubs
jb
ljmp
loopne
dec
insb
push
dec
push
adc
ds
jno
fimull
xchg
sti
int
jg
sbbl
jmp
pop
ja
sbb
stc
cmpb
call
push
mov
inc
out
jns
repz
adc
and
je
pop
add
pop
add
gs
cli
cmp
inc
or
aam
mov
mov
sbb
ja
bound
sub
int3
ret
cwtl
cmp
clc
push
sub
jmp
test
fnstcw
and
and
cld
stc
iret
mov
in
xor
jle
imul
or
mov
jl
add
sarl
aad
inc
cmpsb
sub
dec
repnz
sub
sahf
mov
sub
ret
ret
mov
xor
jmp
cltd
jg
xor
call
shlb
sbb
std
mov
sub
cli
pop
adc
xor
jo
inc
mov
js
jb
out
mov
enter
jno
dec
push
push
cltd
mov
or
mov
jno
out
mov
das
xor
sarb
sub
pop
popa
xchg
push
sub
negb
mov
pop
inc
mov
cld
call
dec
ret
push
adc
insl
shrb
negl
pop
aam
notl
ret
das
pusha
mov
std
sahf
ret
sbb
ja
es
sub
out
mov
movb
xchg
or
and
push
ja
cmpsb
push
mov
dec
cmp
ds
int
jge
xor
and
xchg
jno
or
cmp
push
cwtl
test
and
and
push
rcrl
xchg
lods
lds
lods
out
rclb
add
das
repnz
add
xor
mov
xor
ret
fstp
or
jns
popf
inc
sar
jecxz
or
in
scas
call
push
push
mov
xchg
loopne
mov
xchg
dec
int
add
mov
repnz
lret
sbb
and
xchg
sub
ja
scas
lds
mov
cmpsb
jne
imul
lret
sbb
out
movsl
dec
lahf
fsub
xchg
call
mov
and
ljmp
inc
dec
sbb
cmp
pop
loope
insl
push
in
push
cmc
out
push
inc
xchg
sub
imul
hlt
aam
xor
mov
add
movsl
adc
shl
nop
mov
loop
aam
stos
outsb
add
sub
dec
adc
xor
xor
pop
gs
movq
jo
test
or
loope
add
jns
or
inc
dec
notl
mov
stc
jmp
in
aam
in
push
into
test
xchg
scas
jmp
repz
cmp
sub
jns
add
aad
inc
fmul
sub
mov
and
inc
stc
push
stos
out
bound
xor
mov
repz
adc
lahf
sarb
lret
push
fsub
dec
mov
ret
mov
in
scas
notl
jge
mov
sti
lret
scas
sarb
aaa
insl
dec
movsl
mov
stos
xchg
movd
mov
xchg
pop
sbb
mov
in
xor
jecxz
mov
fidivl
push
arpl
sar
inc
xor
sub
lcall
inc
nop
xor
lcall
pop
sbb
movsb
or
insb
dec
cld
xchg
push
jecxz
adc
jns
push
and
test
aad
arpl
push
mov
mov
pushf
addr16
cld
xor
push
cs
stos
in
and
jno
pop
pop
stos
negl
sbb
jbe
xor
mov
mov
xchg
cmp
jp
lret
or
mov
insb
jp
sahf
lret
shr
imul
imul
push
repnz
add
mov
les
mov
sbb
sub
pop
jge
adc
mov
in
clc
fwait
pop
hlt
push
fs
lods
jg
out
jge
xlat
mov
add
icebp
mov
out
lds
cwtl
loop
and
mov
mov
pop
test
dec
mov
lret
repnz
shll
xchg
pop
cmc
mov
sti
mov
xor
mov
dec
out
in
mov
mov
repz
and
sbb
pop
ds
in
in
pop
or
add
jle
stc
pop
mov
add
sub
or
mov
popf
inc
sbb
ss
adc
loope
sbb
jecxz
jnp
mov
insl
testb
ljmp
push
leave
aam
jnp
adc
iret
jno
dec
mov
pop
lret
pop
lret
push
and
or
cmp
popa
inc
test
enter
ret
insb
cmp
sub
adcl
inc
movsb
and
dec
sub
dec
call
cmc
pusha
sbb
arpl
push
in
mov
mov
mov
out
jno
aas
push
mov
testb
fldl
mov
inc
mov
and
cwtl
loope
jmp
aaa
loop
mov
push
ss
xlat
xchg
loopew
jmp
pushl
xchg
lea
negl
inc
push
or
iret
popa
inc
sahf
adc
rcrl
jo
outsl
subl
fwait
and
xor
adc
sub
mov
jae
xor
andl
pusha
ja
adc
out
leave
mov
push
dec
gs
jl
jb
sbb
loope
lret
inc
mov
insb
inc
icebp
inc
lahf
xchg
jbe
or
lods
xor
xchg
jecxz
xchg
cmc
lcall
shl
dec
movsb
icebp
fwait
in
xlat
icebp
adc
push
xorl
shrb
push
xchg
or
in
repz
out
flds
mov
mov
push
inc
or
pushf
add
xlat
dec
sahf
sub
vpsubq
shl
imul
sbb
adc
into
sbb
xchg
ljmp
xchg
mov
fdiv
cmpsl
cmc
les
pusha
hlt
popa
adc
out
mov
mov
cwtl
dec
dec
sti
std
popa
leave
hlt
mov
insl
mov
dec
mov
lods
test
mov
dec
repz
aam
add
xor
sbb
push
mov
or
loopne
enter
jg
in
leave
inc
fimull
arpl
adc
cmpsb
iret
mov
icebp
pop
mov
cmp
std
in
mov
hlt
push
xchg
icebp
insb
cmp
and
add
mov
inc
lea
inc
movsb
fsubl
dec
or
int3
mov
fimuls
inc
popa
out
pop
js
cli
fsubrl
xlat
cmp
jmp
dec
jmp
add
ljmp
repz
enter
testl
xchg
movsb
mov
out
push
daa
lret
repnz
jb
lret
test
xchg
lods
fldcw
mov
and
xor
mov
xor
das
lret
fdiv
xchg
sub
or
fsubp
loopne
mov
mov
scas
add
push
cmc
push
ret
in
bound
mov
popa
insb
pop
imul
sub
dec
js
test
mov
sbb
enter
mov
xor
inc
sti
pop
cmp
outsl
mov
lods
mov
in
pop
lret
inc
aad
xor
jae,pn
in
inc
cmp
nop
push
movsl
out
dec
jb
in
pusha
stc
dec
cmp
shll
repz
mov
push
pop
and
pop
cmc
mov
adc
aad
pop
dec
cmpsb
lock
mov
add
inc
push
fcomp
or
and
or
sub
int3
sub
or
insl
fildll
imul
adcl
repz
and
fisttpll
stc
lock
aas
popa
push
add
jb
jo
or
je
inc
pushf
divb
cmpsb
pop
or
push
aad
mov
cmc
push
mov
out
roll
into
dec
push
test
sub
in
jne
pop
repnz
clc
ja
pushf
mov
mov
mull
iret
jmp
mov
fisubrs
sbb
daa
cwtl
ss
jnp
sbb
dec
fisubl
adc
repnz
arpl
jne
sub
cmp
mov
inc
in
aas
addr16
test
cwtl
sbb
insl
fwait
lahf
lcall
cltd
push
repnz
cmp
mov
xor
gs
rcl
xchg
std
lret
repz
loope
push
in
outsb
test
mov
test
xchg
jmp
outsb
push
cmpsb
mov
in
inc
jb
and
lods
dec
js
ljmp
pop
inc
mov
nop
sub
pop
test
mov
sbb
out
xchg
aad
adc
dec
sbb
loope
xchg
and
pop
and
int3
push
and
inc
mov
inc
cmpb
sbb
daa
adc
repz
out
adc
js
push
std
loopne
jg
push
cmp
jmp
testb
imul
mov
pop
add
or
pop
push
cs
lret
cmp
lcall
sub
imul
and
test
in
jl
xchg
je
std
out
inc
cli
popa
sbb
in
fs
faddl
test
mov
mov
and
imul
push
jg
xchg
loop
and
repnz
ja
mov
or
in
inc
call
xchg
loop
out
test
jg
pop
pop
mov
loope
ret
sub
ljmp
loop
lahf
cmpsl
gs
cmpsl
jl
cld
add
cmp
xchg
repnz
jl
or
push
imul
xchg
adc
and
stos
ljmp
inc
fistpl
add
sbb
aaa
xor
sbb
aas
mov
iret
mov
mov
inc
push
inc
divb
add
jb
pop
and
subl
pop
inc
mov
cmc
push
push
fisttpl
mov
pop
dec
ljmp
jge
addr16
pushf
jo
push
lds
aad
adc
or
fstpl
rorb
sub
icebp
jle
ret
std
imul
or
fistpll
les
in
sbb
rolb
and
test
outsl
dec
and
icebp
cld
mov
pop
inc
sarl
xchg
or
fbld
sbb
xchg
sub
cmpsl
insl
out
mov
outsl
cld
jae
movsb
pusha
dec
iret
int
lds
jne
inc
mov
pushf
push
call
inc
mov
adc
into
ret
int3
lcall
cmc
dec
imul
lret
dec
ljmp
mulb
ds
pop
stos
out
jne
or
xor
mov
out
lea
jecxz
clc
les
andb
sub
scas
insb
mov
int3
or
and
jns
cli
loope
and
in
gs
fsubp
insb
cltd
pop
sub
xchg
outsl
pop
and
add
inc
insb
mov
jg
cmc
sti
out
xchg
pop
pop
mov
jp
xchg
les
jecxz
ljmp
dec
add
daa
rorl
stc
out
in
lahf
cmpsl
mov
sub
jge
ret
cmc
addr16
or
shlb
pop
add
push
cmpsb
leave
mov
mov
test
jae
fcos
sub
cmp
xlat
inc
mov
pop
adc
mov
push
push
pop
pop
int
pop
mov
sbb
push
jbe
lcall
sub
insl
js
popa
dec
outsl
xchg
jb
shlb
sbb
fwait
xchg
repnz
bound
cmp
mov
std
addr16
pop
xchg
outsl
cmpsl
sbb
mov
jns
lock
js
imulb
mov
xchg
mov
push
and
xchg
das
xchg
adc
inc
sbb
fmul
xchg
jl
and
jecxz
icebp
and
jmp
jns
shll
or
xor
mov
arpl
arpl
push
aam
fimuls
push
fsub
out
clc
loopne
inc
arpl
xor
shll
jmp
insl
mov
lds
sbb
pop
lret
and
adc
lods
insl
cmp
pop
fisubl
icebp
inc
and
loop
push
or
dec
adc
mov
sbb
dec
lds
and
mov
movsb
out
dec
sarl
xor
dec
lret
shll
js
mov
and
in
jp
outsb
pop
jae
lret
sti
insl
dec
mov
outsb
fcomip
jg
outsl
jp,pn
mov
push
or
lock
mov
repnz
dec
sbb
fildll
mulb
setle
add
inc
fistl
filds
movsb
rorb
sub
cmovs
rcrb
cld
push
test
sbb
fneni(8087
adcb
mov
outsl
test
inc
enter
push
mov
push
icebp
popf
xchg
mov
add
lods
or
dec
aas
int
mov
lcall
lock
lret
jbe
aaa
hlt
mov
mov
outsb
push
loopne
push
xor
jp
cmp
or
sub
mov
or
incb
mov
in
push
scas
inc
cmp
push
std
sbb
add
sti
imul
push
mov
in
lret
mov
dec
mov
pop
mov
in
repnz
shl
inc
adc
mov
insl
jne
stc
daa
add
jno
fdivp
scas
in
or
insb
jbe
movsl
scas
movsb
pop
fstps
add
mov
rclb
dec
ficoms
roll
dec
rclb
lds
addr16
cmp
push
mov
outsb
daa
js
out
push
cmc
ret
cmp
shll
iret
sahf
mov
stos
fstps
xchg
cmp
jge
adc
int
loope
popa
sbb
cmp
xchg
push
or
push
dec
lds
ds
cs
ds
and
shl
mov
in
push
and
nop
and
add
shll
retw
mov
push
xchg
aam
into
popl
pop
data16
fs
bound
dec
add
add
jae
mov
ficoml
inc
fdivr
leave
stos
xchg
pop
insl
xchg
push
jle
mov
inc
fimull
xchg
mov
inc
stos
push
mov
mov
xchg
sbb
pop
mov
stc
aad
xor
push
bound
xchg
gs
mov
and
lods
dec
sub
stos
mov
mov
in
push
xor
sbb
inc
repz
mov
loop
jecxz
shrb
js
jle
enter
in
out
aaa
out
ss
sub
ret
mov
sbb
nop
leave
mov
jo
nop
call
loope
in
mov
sub
inc
loopne
jbe
and
hlt
cmpb
stc
sub
rolb
xchg
adc
push
lods
ret
stos
and
inc
mov
fstpl
scas
jne
rcrb
cmp
enter
mov
mov
pop
ret
lcall
je
scas
mov
mov
cmc
imul
add
test
out
lret
repnz
jo
movl
inc
adc
inc
jp
inc
xor
clc
jge
inc
mov
add
mov
jo
adc
xor
test
ret
je
sbb
gs
push
mov
dec
jmp
xchg
push
fistl
movsl
lret
xorl
daa
mov
mov
pop
stc
lods
mov
and
jno
lea
and
cmpsl
sbb
jg
shrl
adc
xchg
push
popf
inc
and
negb
mov
je
testb
imul
push
push
mov
lcall
les
mov
iret
or
or
mov
and
and
jo
mov
dec
clc
jl
adc
mov
xchg
in
and
mov
icebp
dec
rcrl
cld
popa
fstp
ljmp
pop
mov
pop
lret
and
push
xor
jb
cmpsb
cmpl
and
mov
jp
aas
adc
les
or
out
jmp
fdivl
and
fstps
arpl
add
or
mov
mov
inc
hlt
cli
mov
mov
mov
mov
pop
cmpsb
mov
fcmovbe
out
ficomps
pop
xlat
outsl
testl
jmp
lods
pusha
fldt
mov
lods
add
iret
loop
jbe
mov
jmp
movsl
mov
test
test
rcl
out
or
hlt
or
test
loop
icebp
dec
in
cld
sub
or
bound
push
dec
push
push
das
mov
ljmp
xchg
lret
mov
in
fmull
add
mov
push
add
sub
sahf
daa
pushf
dec
gs
enter
jmp
xor
sti
push
adc
xchg
jl
jns
push
or
fwait
xchg
leave
stos
jbe
sbb
or
roll
push
inc
loop
adc
sahf
fistpl
lods
inc
jl
mov
fwait
inc
push
lock
sub
in
outsl
scas
inc
loopne
bound
pop
outsb
shlb
addr16
shrl
ret
or
outsb
cmp
jbe
sahf
add
pop
rclb
fisubs
loope
data16
in
lea
popf
inc
jbe
dec
sub
lock
test
shrb
sub
inc
movsb
lret
mov
das
arpl
inc
inc
stc
loopne
xor
loop
flds
ret
cmpsb
ret
dec
daa
les
dec
mov
push
in
imul
cmpsb
loope
and
dec
and
cmp
xor
jecxz
hlt
mov
add
push
bound
add
clc
jo
dec
adc
mov
stos
loopne
lret
jle
fldt
lret
fildll
pop
add
addr16
cmp
mov
out
jmp
xor
sbb
test
pop
in
dec
fistpl
cmp
fsub
insl
pop
in
arpl
mov
icebp
repnz
cmp
mov
pop
stos
dec
js
ds
jb
scas
xor
xchg
sub
ss
loope
push
cmp
jecxz
dec
mov
pop
or
loopne
sbb
add
sbb
lret
jecxz
inc
fisubl
movsb
lea
pop
pop
xor
loope
popa
out
popf
or
add
shr
fs
arpl
jns
call
lods
ret
inc
inc
std
pop
stos
aad
aad
testb
xor
xchg
lret
push
dec
aad
in
jno
pop
sahf
inc
dec
sar
shrb
jle
jmp
mov
incl
adc
push
in
insb
pop
dec
dec
mov
or
ljmp
aaa
xor
roll
xchg
enter
jo
pop
in
push
andl
fistl
sbb
push
dec
sub
xchg
in
pop
sbb
cs
adc
popa
int
mov
dec
jmp
jne
movsl
enter
out
xor
movsb
cmp
inc
mov
test
push
sub
mov
xchg
pop
into
inc
mov
sub
addr16
mov
cmp
gs
popa
pusha
dec
pop
insl
xchg
jae
sub
xchg
adc
push
ret
cld
xlat
ror
jne
adc
ss
pop
cmpsl
clc
in
xchg
dec
jo
iret
and
mov
scas
xchg
cli
cltd
fdivs
mov
inc
inc
rolb
js
pop
sbb
roll
pop
jp
dec
test
add
std
lea
adc
fldl
roll
add
or
adc
mov
xor
cld
divb
insb
fs
enter
cmp
daa
jbe
xchg
ds
clc
aad
shlb
adc
and
jecxz
lods
sub
incb
call
sbb
jmp
enter
xchg
leave
shr
cmp
sub
stos
arpl
jmp
ficomps
add
aad
mov
xchg
std
cmp
xor
mov
out
lret
mov
stc
xor
xchg
in
aaa
add
push
pop
push
scas
mov
mov
adc
cmp
push
jp
jno
sahf
sbb
xchg
dec
scas
mov
clc
lds
cmp
fldl
add
loop
in
xchg
idivb
ret
fnstsw
icebp
shr
sarw
xchg
cmpsl
jns
adc
popa
out
push
repz
xlat
test
jp
sub
outsb
fisttps
test
inc
dec
lea
std
pop
pop
popf
fisttpll
ss
loop
jbe
fcoms
fstps
mov
cwtl
faddp
daa
adc
es
scas
test
inc
sti
sbb
push
or
fcompl
sub
xor
pop
mov
dec
dec
push
sub
fsub
test
dec
je
lods
and
jne
lret
aaa
cmp
push
xchg
bound
call
repz
sub
mov
sub
in
lret
push
push
adc
mov
mov
pop
insb
sbb
jns
mov
in
repnz
jg
subb
sub
fdivr
jae
ret
jmp
xor
out
in
cmp
dec
ret
lret
bound
mov
lea
cltd
sub
mov
jl
lea
xor
adc
mov
inc
cs
fwait
cmp
cmp
pop
and
icebp
cld
add
inc
cmpsl
fidivl
ss
dec
xchg
adc
addr16
push
xor
mov
mov
xor
sub
stos
cwtl
ja
ret
mov
pusha
add
xchg
in
jmp
in
push
or
lahf
jno
in
mov
pop
fucomip
cmp
leave
xlat
pop
cmpsl
push
cmc
mov
in
repz
call
xchg
repnz
add
in
push
stos
dec
mov
lret
popf
jbe
out
shll
fstl
aaa
mov
stos
bound
xor
rcrl
adc
cs
shll
pop
es
notb
addr16
dec
dec
jne
fiadds
lds
mov
push
inc
cs
push
pop
dec
inc
int
push
or
call
shll
hlt
xchg
sub
or
jmp
insl
rcrl
lcall
nop
dec
mov
je
xchg
cwtl
cmpsl
movsl
or
xchg
mov
fildll
shl
daa
and
jo
jno
les
sbb
cltd
sbb
arpl
xchg
cltd
xor
mov
and
mov
dec
je
dec
mov
ss
cmp
iret
mov
in
cmp
mov
jp
lahf
jno
aam
add
loope
or
shlb
jp
jp
mov
bound
pop
jge
jmp
movsb
xchg
mov
movsl
xorb
std
mov
jmp
mov
sbb
push
insl
sub
repnz
movl
inc
mov
pushf
sti
or
mov
inc
xchg
mov
pop
ret
cmc
fistpl
adc
and
lods
mov
push
lahf
xchg
mov
mov
rorb
cld
fsubr
sbb
loope
push
aad
and
pop
mov
and
xchg
enter
push
add
pop
ds
mov
adc
out
cmp
or
dec
xor
mov
xchg
push
xchg
scas
xchg
test
mov
test
xlat
ret
push
sarb
sub
cmc
xchg
mov
adc
in
and
das
cmpsb
outsl
gs
xchg
sub
ja
sub
lds
mov
jno
std
ja
lods
cmp
push
jns
dec
or
or
lcall
sti
sub
mov
stos
fsubrl
testb
movsb
int3
aad
and
mov
loop
or
pop
jae
int3
stc
shrb
dec
leave
pop
ss
sbb
xor
loope
lods
addr16
inc
repnz
stos
cmp
stc
xchg
sub
rolb
xchg
jg
icebp
aam
lahf
add
xchg
jle
adc
rol
mov
sub
test
adc
popf
outsl
hlt
cs
js
dec
imul
and
or
add
loop
add
loopne
insb
mov
aaa
xchg
vhaddpd
into
out
fsubs
mov
jnp
pop
sbb
cmc
scas
mov
int
into
arpl
adc
stos
xchg
xor
mov
imul
mov
mov
repz
iret
mov
pop
arpl
xor
jge
repnz
inc
xchg
adc
into
arpl
mov
in
in
in
into
cmc
mov
dec
shl
dec
js
lss
mov
xor
pop
dec
cmp
notb
mov
cmp
mov
roll
mov
daa
mov
lds
cli
imul
cmpsl
lds
lcall
cltd
and
mov
xchg
mov
out
lock
fmul
loopne
mov
fdivs
das
sti
cmp
or
cld
jmp
lds
mov
adc
dec
daa
pop
mov
shl
out
pop
inc
mov
or
mov
aas
loop
and
fld
and
lcall
push
cmc
fidivrs
mov
test
mov
cli
add
arpl
sar
dec
test
cwtl
jb
jne
test
mov
dec
push
pop
pop
frstor
icebp
loopne
and
clc
inc
pop
xchg
dec
insb
and
push
jmp
insl
aas
in
shrb
adc
jl
inc
pop
in
repz
stos
sbb
fnstsw
mov
loop
xor
aaa
inc
mov
mov
ret
insb
test
shrl
test
in
sub
ss
ss
jmp
add
repnz
dec
mov
scas
fcoms
faddl
ret
ret
sub
add
jns
jp
cmpsb
push
and
cmpsb
and
pop
jb
lock
add
rclb
sbb
push
ret
fisubrl
notb
es
ret
cmpsl
sub
repz
pop
add
aas
inc
lds
adc
push
ret
dec
jle
jg
out
sub
xchg
fs
movaps
mov
pop
jns
push
push
in
cmc
rdmsr
shrb
stos
loop
je
fbstp
int3
cmpsb
mov
icebp
mov
pusha
andb
out
imul
aad
xchg
les
xor
fwait
inc
testb
test
repnz
dec
sbb
mulb
and
push
insb
sub
outsl
int
mov
and
sbb
repnz
sbb
dec
and
adc
clc
jns
xchg
lret
xchg
test
sbb
inc
fwait
cmp
stc
dec
ret
adc
in
repz
add
inc
insb
aas
adc
add
iret
outsb
mov
push
aad
test
dec
add
mov
dec
adcb
adc
dec
cmp
aaa
cmp
xchg
mov
inc
xor
fwait
shlb
shll
imul
repnz
mov
lock
push
ljmp
push
in
fnstcw
push
fxch
shlb
int3
syscall
dec
xor
pop
das
pop
cmc
fnstsw
sti
sub
lods
and
or
addb
and
out
jle
sbb
xorb
lods
push
add
push
out
repnz
adc
mov
inc
repnz
and
scas
bound
add
mov
test
andb
aaa
sub
cwtl
jne
repnz
sahf
add
cli
add
mov
add
lret
lods
dec
out
cmpsb
aas
fdivrl
sbb
xchg
aam
xor
js
lret
xchg
or
stos
sbb
es
or
xchg
inc
ja
std
sbb
xchg
imul
test
adc
dec
mov
sub
jmp
push
and
pop
jmp
outsb
xchg
xchg
aaa
pushf
imul
test
adc
and
mov
pop
in
mov
cld
push
pop
and
pop
popa
jbe
jae
popf
push
movsb
pop
xchg
and
sbb
insb
jae
addr16
mov
jp
mov
popf
push
icebp
repnz
xchg
aad
add
in
xor
scas
cmp
dec
xchg
xor
mov
jns
sub
fcompl
jbe
lods
into
mov
cs
adc
jmp
add
js
pusha
fidivrs
inc
sti
add
mov
negl
jp
pop
cmpsl
push
rcll
xor
andb
jo
lods
or
leave
mov
pop
cltd
jnp
mov
jge
ror
pop
leave
mov
ret
test
addb
add
sub
xor
scas
xchg
pusha
jb
jae
xchg
and
mov
dec
call
es
decl
cmp
ljmp
jo
dec
push
or
adc
pusha
aaa
mov
lea
mov
in
and
or
fmul
sub
shrb
mov
movsb
fdivr
or
xlat
outsb
cli
dec
mov
pusha
jne
mov
in
inc
rcrl
cmpsb
jmp
jno
cmp
xchg
cmp
push
sbb
mov
push
outsb
shrl
fcmovb
push
jp
or
in
sub
aam
inc
out
cli
in
xchg
push
addr16
rol
sbb
jecxz
adc
mov
insb
xchg
sbb
scas
pop
inc
jo
pop
nop
xchg
jns
sbb
rorb
jge
ja
lcall
fs
pop
nop
mov
loope
mov
rol
and
test
jno
push
dec
rcll
cld
dec
shrl
xchg
dec
testl
or
adc
xor
pushf
jbe
out
add
and
xchg
mov
push
push
shrl
or
cwtl
aaa
lahf
jb
int
pop
rorl
divb
lahf
scas
xchg
out
clc
enter
andl
xchg
test
xchg
arpl
mov
pop
mov
cmpsb
test
xor
jg
mov
cmp
inc
mov
sub
sbb
pop
sahf
jno
xor
xor
cwtl
cmp
mull
sbb
hlt
loopne
mov
xchg
jns
fstpl
add
or
into
xchg
ficomps
les
add
call
adc
xchg
mov
adc
sbb
mov
dec
cmpsl
xor
sub
in
les
lods
inc
inc
push
lods
xor
lret
data16
or
aaa
push
inc
ret
outsl
popf
mov
mov
mov
stos
loope
addr16
repnz
clc
mov
push
mov
cmp
test
repz
or
pop
icebp
mov
ret
inc
iret
cmpsl
call
inc
lret
repz
jno
cltd
inc
ret
sahf
lcallw
pusha
xor
jo
sub
xchg
test
stos
mov
int3
cs
inc
sbb
inc
insl
push
jb
shlb
sub
scas
jne
and
dec
call
ja
popa
or
test
add
std
push
fmulp
data16
dec
lods
fwait
xor
pop
fcmovb
sbb
jb
and
aam
pop
in
dec
sbb
aaa
inc
push
push
into
repnz
pop
hlt
mov
fdivl
mov
mov
arpl
shll
jb
negb
cs
in
je
pop
add
negb
adc
movsb
arpl
das
mov
jmp
mov
push
repnz
add
mov
aas
dec
rcll
inc
outsl
in
ss
push
fsubrs
scas
mov
mull
outsb
movsb
add
push
mov
jecxz
shl
ja
sub
rorl
sbb
push
loop
mov
dec
cmp
lds
call
jb
inc
aam
aam
jle
lods
and
pop
xchg
inc
shr
int
xor
pop
fcmovnu
hlt
fucomp
pop
pop
int3
pop
jns
out
mov
cmpsb
je
jne
push
lret
sbb
push
and
jo
pop
cmpsl
scas
and
es
pushf
nop
mov
loopne
dec
movsl
in
mov
insb
and
push
int3
dec
add
in
fdivrl
sbb
jno
scas
sbb
ljmp
mov
or
mov
xor
sti
mov
cltd
mov
push
sahf
arpl
or
sti
int3
mov
out
in
lds
adc
in
dec
mov
mov
jb
sbb
jge
lret
pop
test
sbb
xchg
into
xor
and
leave
add
add
repz
sub
test
push
dec
cmpsl
sub
mov
xor
sub
mov
pop
notb
cltd
pop
clc
in
cmc
les
dec
pusha
movl
out
jo
jb
jl
cltd
or
cwtl
sub
inc
lcall
mov
movsb
dec
fwait
or
inc
push
add
push
fstps
add
jmp
add
scas
addr16
stos
mov
cmp
fwait
sbb
dec
xchg
inc
mov
pop
inc
fsubl
sub
out
es
and
jl
pop
jb
std
and
dec
jle
push
mov
jbe
dec
sti
in
cmp
push
popa
divb
insb
addl
mov
aaa
xor
outsb
fadds
push
cmp
dec
push
adc
inc
cmc
in
dec
out
or
pop
push
xchg
lret
mov
cmp
mov
pusha
xchg
push
xor
pop
stos
das
push
lock
sbb
pop
ja
jno
pop
inc
mov
push
mov
cmc
in
subl
ljmp
add
aam
mov
xchg
dec
arpl
sbb
movsl
or
xor
mov
inc
or
loop
lods
fidivs
cmp
js
cli
sbb
dec
mulb
cmp
adc
jmp
dec
and
inc
sti
aad
xlat
push
push
mov
inc
mov
fimull
fadd
xchg
mov
test
bound
mov
outsb
mov
aam
ss
enter
cmp
ja
movsl
loopne
stos
insl
bound
out
pop
inc
or
inc
pop
cli
repnz
loopne
mov
dec
cmpsl
sub
sbb
out
pop
dec
sbb
lahf
mov
mov
into
aaa
dec
cmp
daa
xchg
jo
mov
push
pop
mov
and
enter
movsl
dec
fnsave
aaa
je
outsb
subl
jb
stos
mov
mov
pop
into
mov
imul
jecxz
pop
xor
adc
xchg
and
and
push
sbb
mov
pop
movb
mov
test
and
int3
jge
shl
sbb
icebp
mov
cs
cmp
mov
mov
imul
mov
push
lds
mov
xchg
mov
lret
in
out
ret
movsl
jmp
addr16
xor
js
push
xlat
or
shl
int
aas
add
call
out
lahf
out
loop
imul
test
lock
loope
jg
out
fwait
lcall
cmc
popf
mov
pusha
imul
sub
push
jmp
sub
add
lret
ss
icebp
loope
lods
inc
inc
adc
enter
xor
mov
cmc
xor
pop
rorl
aaa
cmc
sbb
icebp
aad
ds
cmp
gs
ljmp
ficoml
dec
dec
cld
inc
pop
adc
add
xchg
stc
sahf
xor
sub
mov
in
scas
add
ficomps
scas
and
push
cmc
movsb
mov
cmp
rolb
rcrw
fisttpll
sarb
mov
xchg
add
clc
out
jecxz
mov
imul
leave
or
fdivrs
lock
fwait
clc
addr16
out
jl
pop
pop
addr16
cltd
inc
fidivl
lods
xchg
lcall
addb
repnz
jmp
pop
sahf
fsubs
mov
mov
lds
sar
and
xor
dec
lret
fistpl
test
cmpsb
or
xor
in
arpl
cld
jns
lret
add
test
xchg
lret
je
cmc
pop
imul
sub
mov
add
cli
in
fmuls
sbb
bound
pusha
movsl
mov
mov
dec
mov
imul
pusha
mov
jbe
inc
jns
pop
js
in
in
aam
and
bound
mov
xchg
fcmove
dec
add
sbb
or
test
outsl
xchg
mov
push
inc
lcall
mov
adc
jmp
cwtl
mov
push
imul
leave
rorb
adc
xchg
fisttpll
xchg
xchg
cmpsl
scas
hlt
mov
test
pop
insl
lcall
out
call
mov
xor
mov
lahf
cld
in
aas
and
adc
mov
int
inc
fimull
add
mov
jmp
xchg
out
iret
fists
pop
xor
sbb
std
and
popa
dec
fwait
cmp
inc
in
stos
jb
push
loop
cmpsl
add
xchg
mov
inc
cltd
hlt
repnz
pop
imul
inc
int3
lods
rcl
popa
in
out
std
push
and
ds
pop
cmc
xchg
rolb
jnp
into
test
punpckhwd
pop
iret
mov
xor
out
in
mov
jmp
fimuls
out
out
push
dec
les
cld
mov
lret
pop
insb
popa
data16
cmp
leave
call
aad
int
mov
mov
data16
test
shll
je
dec
outsl
pop
mov
in
cmp
push
lahf
xor
shrl
mov
cmp
aam
cld
xchg
adc
out
es
jmp
pop
push
loopne
and
xor
int
imul
ja
sub
sahf
lret
and
int
push
xor
jne
sub
dec
mov
test
imul
arpl
inc
gs
xchg
fld
adc
repz
je
mov
cmc
mov
rclb
push
push
jb
insb
xor
dec
pop
xor
clc
push
mov
stos
add
adc
fbld
pop
jmp
outsb
push
xlat
or
sbb
pop
mov
lods
scas
pop
xchg
xchg
adc
fldenv
lds
jmp
in
push
shlb
xor
nop
and
cmp
shlb
icebp
aad
pop
push
jbe
xchg
arpl
pop
repnz
inc
push
pushf
cmp
add
fwait
cwtl
xlat
cltd
out
push
lret
test
decl
fldcw
and
arpl
outsl
or
xlat
or
mov
pop
or
mov
adc
or
insb
and
cmp
ficoml
dec
fsubr
stos
xchg
repnz
and
data16
cmpsl
pop
fxtract
mov
xor
jnp
pop
fnsave
adc
push
cmp
mov
int3
cmp
fdivrl
cmp
dec
add
xor
addr16
sub
ret
mov
rcr
mov
pusha
jnp
rclb
test
mov
in
out
popf
xlat
sti
pop
inc
xor
inc
inc
mov
cmc
out
jo
or
es
addr16
xor
and
mov
hlt
es
aaa
xchg
ret
mov
or
xor
inc
les
inc
mov
imulb
popf
rep
ret
or
xchg
mov
adc
cld
aam
insl
and
repnz
rclb
imul
addl
out
in
call
jmp
mov
and
dec
arpl
lcall
in
jae
sahf
test
or
or
stos
fdiv
dec
jo
pop
fcompl
cmc
scas
popf
insl
push
js
outsb
ljmp
lock
fbld
flds
jo
sti
daa
pop
sub
mov
bound
fs
mov
push
ss
clc
aam
inc
outsl
push
in
ljmp
cmpsl
adc
jl
mov
mov
cltd
mov
movsb
mov
aad
xchg
outsl
insb
bswap
outsb
push
mov
stc
mov
stos
ss
mov
scas
sub
int
jae
fwait
add
ret
and
or
data16
sub
outsb
xchg
jl
cmp
xchg
mov
mov
std
aaa
dec
push
mov
ds
pop
out
lret
mov
jecxz
xor
ret
mov
out
popf
insl
inc
inc
push
mov
in
shll
adc
xor
iret
insb
and
push
add
push
outsb
or
push
fmul
dec
adc
int
lret
xchg
repz
mov
cwtl
lods
xchg
or
jno
outsl
sub
jno
lret
aam
test
in
les
ja
mov
insl
dec
and
cmc
inc
push
cltd
push
jo
fs
jmp
mov
aaa
insb
push
dec
add
and
dec
xchg
addb
bound
jo
iret
add
mov
mov
clc
jecxz
or
add
push
cmp
xchg
loope
cli
scas
xor
out
mov
inc
push
or
jmp
orb
mov
aam
inc
xchg
or
adc
or
mov
xchg
stc
mov
lret
mov
add
clc
movzbl
lret
ffree
xchg
push
sti
cmpsb
mov
xchg
mov
push
pop
push
mov
rcrl
and
loop
pop
js
lcall
add
push
movsl
test
aas
icebp
ss
jb
hlt
xchg
mov
jg
insl
cs
inc
dec
xchg
data16
xor
mov
fcoml
add
adc
rclb
in
mov
lock
stos
cmp
xor
inc
ds
stos
popf
jg
push
push
dec
pusha
sub
pushf
rclb
mov
jg
push
mov
mov
push
inc
popa
notl
mov
repz
jns
jecxz
bound
fistpll
xor
rcll
imul
cltd
out
aas
mov
divb
lods
push
cli
lds
mov
cmc
sti
sti
icebp
lea
xchg
mov
cmp
loop
das
cmovno
das
xchg
pop
and
mov
mov
xor
adcb
out
fldenv
les
mov
mov
test
fwait
dec
adc
divb
add
jp
and
xor
cltd
insl
fistl
sbb
clc
mulps
and
adc
test
and
jns
mov
rclb
sti
fs
sarl
and
not
jmp
cwtl
mov
stos
mov
or
lock
pop
shlb
icebp
lods
push
lret
test
pop
lds
mov
mov
aam
mov
jbe
in
inc
push
add
inc
cmpl
inc
pop
jecxz
ret
insb
sbb
repz
jno
jb
mov
lret
add
jge
lock
inc
scas
cmp
mov
adc
and
dec
notb
mov
in
test
shlb
fcomps
out
mov
xchg
fucomip
pop
and
hlt
inc
pop
les
add
xchg
pop
mov
fsubs
stos
mov
and
pusha
daa
dec
adc
jo
mov
faddl
jne
iret
xchg
and
and
pop
loopne
push
jl
sti
ret
in
xchg
jne
fcomi
fidivs
cmpsb
lret
mov
leave
push
mov
xchg
lret
lea
mov
inc
mov
push
pop
loope
iret
aad
fisttpll
adc
mov
lret
or
cmp
daa
sti
filds
push
jmp
jle
sub
mov
sbb
into
jle
or
jns
jo
jb
sbb
adc
fidivrl
xchg
repz
das
dec
push
scas
add
and
lret
xor
icebp
and
sar
mov
scas
dec
aad
into
test
jb
fstpt
add
adc
mov
scas
cld
mov
mov
jmp
adc
roll
lock
mov
lret
arpl
pop
mov
mov
fs
sbb
pusha
mov
lock
push
loop
jmp
mov
int
bound
push
sti
enter
out
jne
lahf
mov
js
imul
and
rcll
mov
adc
inc
mov
mov
mov
sbb
add
or
push
rol
jne
loop
or
insl
inc
and
xchg
icebp
dec
data16
push
mov
mov
sub
mov
mull
add
mov
xchg
and
aaa
jmp
mov
pop
fs
push
and
add
inc
call
repnz
test
inc
insl
outsl
loop
cld
add
les
sbb
or
or
sbb
pop
and
inc
pop
in
push
jns
inc
sub
sub
push
sub
or
and
les
shlb
mov
pop
push
push
out
adc
scas
data16
adc
inc
divl
out
lock
xor
inc
dec
mov
cwtl
sub
inc
add
mov
subb
mov
ficomps
shrb
je
repz
and
inc
call
pop
imul
cmc
jnp
orb
call
inc
pop
pop
sbb
adc
pushaw
int
ret
dec
je
jne
pop
jecxz
mov
mov
pusha
jle
divb
fwait
sub
leave
lcall
mov
dec
and
dec
inc
in
inc
dec
mov
inc
je
fnclex
add
int3
mov
and
cmp
sbb
adc
xchg
js
orl
mov
add
inc
mov
dec
ret
mov
cmc
jb
js
mov
out
push
loope
lds
addr16
cli
xacquire
jae
sbb
mov
out
fs
jle
daa
jmp
mov
scas
hlt
mov
sar
push
out
cmp
dec
pop
mov
pop
mov
sbb
dec
mov
bound
adc
pushf
hlt
aaa
outsl
inc
in
mov
lods
mov
dec
bound
out
lock
or
xor
jae
jno
cmp
out
cld
inc
negb
icebp
inc
popa
movsb
sub
in
movsl
pop
sub
punpckhbw
add
cmp
aam
notb
repz
cmp
call
mull
or
lcall
mov
cmp
xchg
out
push
pop
push
and
jne
bound
stos
repz
inc
fdivl
out
pop
outsb
pop
xor
and
ret
pop
mov
enter
mov
mov
ficoml
shr
xchg
sahf
enter
sbb
ret
xchg
add
pop
ret
and
dec
cs
jo
inc
sub
or
or
cltd
into
sub
enter
cvtps2pd
xchg
adc
sbb
and
testl
and
dec
popf
call
cli
push
loop
fs
dec
insb
mov
addl
sbb
cwtl
jb
or
std
push
xor
push
xor
sbb
adc
outsb
sbb
xor
out
push
mov
adc
push
dec
stos
rorl
sub
das
cmp
std
out
fcomip
adc
inc
shlb
inc
or
mov
lea
loopne
xchg
ja
sub
outsb
jmp
out
push
cmc
xor
jl
or
leave
pop
xor
and
out
in
andb
insl
pop
jmp
cmp
fsubl
ja
lds
leave
cwtl
aaa
addr16
sti
repz
pop
rorl
leave
jne,pn
stos
enter
in
mov
cmpsl
movsl
les
and
lret
xchg
fsub
das
inc
fnstenv
int
dec
out
fmuls
sbb
push
mov
mov
xor
test
lods
adc
lods
adcl
dec
bound
ret
popa
fstps
mov
daa
ja
inc
dec
ret
jecxz
push
fst
lds
jns
add
leave
out
pop
mov
loope
lret
mov
jns
fistpl
repz
popf
pop
stc
shrb
test
push
in
fdivrl
cwtl
mov
outsb
or
adc
cld
cld
lret
jae
ds
inc
stos
dec
test
jne
mov
push
and
xchg
into
mov
leave
sub
fwait
push
pop
in
stos
cmp
int
arpl
fcmovne
lock
rorl
stc
inc
add
cld
das
xchg
stos
arpl
dec
cld
cmp
in
add
mov
pop
ljmp
fistpl
pop
xor
and
test
clc
ret
and
lcall
pop
dec
jbe
loop
dec
push
push
add
es
xchg
sar
xor
xchg
popa
inc
sub
jo
mov
cmc
or
or
aas
stc
dec
test
movsl
jns
hlt
lret
shr
inc
lret
into
sbb
inc
mov
pusha
push
gs
and
pop
xchg
aam
pop
outsl
and
hlt
fwait
push
cmp
insb
mov
popf
jl
loopne
xchg
sub
in
adc
lods
dec
loopne
push
imul
mov
lcall
jmp
push
lret
xor
lods
call
mov
or
push
pusha
xchg
out
dec
icebp
and
clc
out
mov
roll
mov
sub
test
outsl
aaa
adc
shlb
imul
ss
pop
lea
pop
xor
add
pushf
dec
test
mov
push
gs
and
popa
sub
std
adc
mov
xchg
mov
cmp
movsb
repnz
movsb
mov
cmpsl
xor
cmpsl
arpl
in
out
mov
mov
paddsb
popf
inc
sub
and
vpmaddubsw
cltd
arpl
fs
jne
sub
adc
pop
aaa
repz
gs
jbe
int
stos
mov
pop
sbb
xor
pop
dec
shrl
inc
or
bound
mov
je
jecxz
jns
pop
xchg
sub
pop
out
frstor
xor
ljmp
repnz
rclb
dec
in
mov
adc
and
ficomps
or
lea
jge
fucom
jg
fwait
hlt
adc
icebp
mov
lcall
icebp
insb
int3
xor
lods
mov
sub
fs
inc
fldlg2
bound
push
popa
mov
lds
stos
je
hlt
inc
mov
cmc
bound
xor
mov
in
gs
adc
sub
imul
loope
fimuls
pop
lahf
jle
or
cmp
sub
mov
scas
loop
jg
cwtl
outsl
and
ljmp
mov
popf
xor
mov
pushf
stc
mov
test
xchg
adc
inc
aam
xchg
lock
cmpsl
pop
adc
out
mov
sti
insl
fistl
shll
fcom
mov
mov
aam
loopne
sahf
add
orb
bnd
mov
push
shrl
inc
mov
xchg
data16
lea
cmp
xor
cltd
inc
inc
pop
dec
mov
jmp
aas
inc
in
xchg
ficomps
out
test
push
mov
mov
adc
jecxz
fnsave
mov
mov
inc
pop
gs
push
and
push
inc
shll
push
add
imulb
int3
mov
adc
in
shrl
shr
into
orb
movsl
cmp
mov
lods
je
or
mov
cmp
push
mov
push
dec
push
ljmp
pusha
icebp
notl
imul
push
fmull
xchg
test
fcoml
shrb
cwtl
mov
pushfw
jecxz
push
jbe
xor
popf
push
xlat
cmp
ss
inc
stos
popf
aas
mov
scas
cwtl
scas
inc
in
inc
bound
jl
pop
inc
scas
test
mov
mov
push
movsb
repnz
and
push
outsl
jge
lock
loop
jbe
add
out
loop
js
movsb
mov
shlb
fucomi
in
sbb
nop
in
sbb
and
out
push
push
jecxz
xchg
cmc
fxch
call
rolb
int
loop
sar
mov
ljmp
test
pop
loopne
adc
daa
push
mov
imul
mov
mov
mov
rorb
pusha
pop
mov
lcall
lds
shlb
je
xor
aaa
sub
mov
lea
sbbb
fcomps
daa
adc
or
xchg
xor
fistpll
in
pop
out
mov
ret
or
test
fsubrl
fsubrp
lods
cld
rorb
mov
inc
push
xor
popl
mov
dec
test
fdivp
hlt
lcall
scas
stos
jmp
pop
lcall
neg
jecxz
xchg
sub
cltd
aam
flds
mov
in
sbb
mov
les
mov
jp
jns
mov
mov
in
dec
loope
inc
jno
mov
loop
mov
mov
bnd
or
mov
jge
rolb
mov
sbb
mov
outsb
mov
push
adc
or
adc
push
lods
inc
hlt
inc
jae
lds
inc
jge
int
xor
insb
xchg
pop
adc
mov
pop
lret
dec
jmp
das
out
cld
fstpl
scas
test
jp
leave
int
sti
into
add
fcoml
pop
testb
push
mov
sbb
inc
add
inc
and
cmpl
cmc
xor
pushf
pop
dec
push
mov
or
inc
or
je
inc
pop
lods
popf
pop
adc
push
lret
and
push
sarl
imul
or
adc
dec
ret
lret
cld
loop
shl
insl
xor
and
push
lret
or
xchg
int
je
arpl
lret
loop
lds
jecxz
sbb
xchg
cli
test
clc
cwtl
dec
adc
fxch
enter
aad
scas
mov
nop
imul
sar
lret
out
das
inc
jb
sti
lret
in
adc
cmp
pop
adc
clc
jg
jl
int3
imul
test
stos
jp
xor
xchg
ss
shrb
adc
sbb
cs
in
adc
mov
pop
jbe
push
mov
fs
loopne
in
call
sbb
jbe
cld
xor
xlat
push
out
sub
cmp
jns
adc
loope
jp
ret
test
icebp
ftst
sbb
pop
and
in
lret
shr
mov
lock
jne
pop
shlb
adc
inc
or
fisubrs
mov
shr
aaa
dec
movsl
push
repz
cwtl
outsb
push
dec
cmp
shll
repz
lret
push
out
push
push
test
loop
repnz
daa
add
mov
mov
fstps
test
push
cmp
mov
ds
scas
test
jle
fs
loope
stos
sub
in
lock
add
mov
mov
stc
loope
fstpl
and
lcall
cld
scas
negb
cli
and
idivl
dec
and
stos
stos
xor
pop
jge
leave
in
cmc
in
or
mov
aam
lcall
add
repz
cmp
je
repz
push
mov
test
mov
fwait
mov
adc
fs
xchg
mov
inc
sub
in
cmp
in
sahf
cli
and
push
gs
xchg
cltd
test
insl
add
mov
xlat
out
adc
inc
dec
fstl
lds
lock
dec
enter
mov
stos
inc
inc
dec
pop
icebp
stos
dec
lock
lret
lret
mulb
loop
bound
add
imul
mov
call
mov
movsb
xchg
jecxz
cli
xchg
pop
cmp
test
cli
stos
and
jns
leave
and
mov
ss
cmp
push
dec
sbb
adc
lock
xchg
aad
test
imul
add
or
call
mov
sub
mov
mov
shlb
out
jle
loopne
xchg
gs
inc
inc
lahf
pop
test
les
dec
nop
sub
repz
rcrb
and
sahf
incb
mov
nop
jmp
dec
in
inc
sbb
repnz
cltd
jno
insb
ret
pop
lods
mov
inc
repz
mov
jno
xchg
add
mov
enter
xor
adc
ja
lcall
shr
dec
std
and
in
fsts
fdivrl
jmp
cmp
inc
mov
das
push
push
scas
movsb
dec
dec
cli
push
xorb
adc
sahf
inc
xorb
mov
in
jb
std
dec
xchg
xchg
mov
and
or
jo
and
fscale
sbb
push
mov
fdivrl
xchg
loop
mov
bound
test
ret
sbb
and
dec
gs
icebp
fmull
nop
mov
xchg
xor
mov
pop
cmp
adc
push
add
push
nop
mov
push
ss
js
jns
rcl
xor
sbb
xchg
or
mov
in
inc
cmp
pop
add
stos
arpl
xor
stos
mov
xchg
jmp
xchg
jmp
or
adc
jns
mov
and
mov
sarl
pusha
repnz
shll
ss
inc
jno
push
scas
mov
bound
or
mov
je
imul
rcr
cltd
sub
cmp
int
pop
out
mov
outsl
int3
xchg
into
jns
pop
and
cwtl
inc
xchg
insb
cs
cli
mov
int3
and
push
xor
pop
ret
push
jb
dec
dec
push
sti
shlb
push
inc
ja
cld
les
shl
pop
or
stos
enter
xchg
pop
sbb
jae
fcomip
fsubrl
fisttps
cmp
clc
adc
sub
push
inc
pop
sbb
xor
out
cltd
addb
and
pop
hlt
mov
mov
inc
test
dec
outsb
jg
xchg
stc
adc
add
inc
ljmp
mov
ljmp
popf
jge
sarb
shrb
pop
add
sbb
mov
ret
aas
sub
pop
fadd
shl
lret
mov
xchg
inc
jecxz
fldenv
or
mov
dec
imulb
mov
or
push
mov
push
inc
movsl
xchg
mov
mov
adc
xchg
add
addr16
test
outsb
negl
mov
mov
lahf
jecxz
fxam
push
repnz
xor
insb
hlt
ja
xor
stos
int
data16
and
rol
xchg
sahf
adc
repz
lcall
aad
or
loop
test
mov
repz
popf
jecxz
mov
pop
mov
icebp
movsl
and
fsubrl
xchg
and
subl
mov
xlat
shll
jge
xor
lods
sahf
in
sub
sbb
and
jo
jnp
and
fmulp
lock
pop
and
out
inc
mov
mov
int
mov
cmp
and
mov
clc
fldt
loopne
mov
or
outsl
and
lods
repz
idivl
pop
pushf
mov
or
add
jmp
jnp
push
add
jo
pop
and
outsw
push
dec
in
sbb
xor
cmp
stc
xor
mov
xor
jmp
and
repnz
dec
add
dec
lahf
std
xchg
push
and
jmp
lds
sbb
pushf
jb
andb
in
popa
pusha
pushl
mov
es
jmp
cli
pop
insl
adc
scas
out
dec
sbb
negb
js
adc
push
fsts
test
scas
jns
or
dec
call
mov
js
pop
rolb
imul
or
sbb
icebp
rolb
test
jnp
lret
cltd
push
outsb
out
sbb
sbb
mov
sub
test
int3
iret
jae
jmp
in
rorb
mov
jo
lods
dec
popf
sahf
jne
xchg
aam
pushf
bound
push
outsl
add
test
dec
sbb
imul
dec
repnz
sbb
rcll
je
lock
fwait
leave
push
imul
out
pop
mov
int
rorl
push
arpl
fwait
xor
aad
or
jo
cmp
mov
adc
outsb
jge
xchg
mov
push
mov
push
and
xchg
imulb
cmc
sub
xchg
mov
mov
xor
and
xchg
adc
and
cmpsb
mov
sub
es
lret
lret
xchg
sub
shll
mov
fidivl
out
xor
xchg
ljmp
ljmp
ljmp
repnz
xor
pusha
jne
dec
lds
and
scas
je
xchg
imul
sub
jecxz
stos
negl
jmp
int
jbe
je
dec
jle
pop
out
cmp
aaa
add
xor
in
sahf
in
fisubrl
ret
jge
repnz
mov
jl
lret
aas
add
xchg
jno
jne
lods
mov
sahf
pop
xor
jge
test
adc
dec
imul
mov
dec
jle
mov
mov
xlat
adc
out
sbb
dec
js
push
divl
xchg
fs
outsl
sub
mov
inc
hlt
fs
ja
mov
add
adc
jg
aad
aas
stos
mov
sub
inc
cmp
mov
mov
mov
push
dec
sub
jle
push
into
dec
imul
and
mov
testl
or
ds
xchg
or
lret
add
sub
lods
or
push
sbb
scas
ds
icebp
mov
inc
inc
sahf
enter
adcb
jbe
xchg
std
mov
call
xchg
mov
lea
es
loopne
cltd
fstps
sti
rorl
cld
jne
xor
sbb
pop
loope
pushf
mov
jb
scas
mov
scas
pop
mov
xchg
in
in
cmp
rol
jmp
sub
pop
xchg
sub
pop
mov
fldenv
cltd
inc
ds
fmul
cwtl
das
inc
sub
enter
xchg
out
sar
jns
xor
dec
sbb
inc
rclb
push
adc
cmpsl
and
jne
enter
mov
push
test
loope
add
loope
pop
mov
mov
bound
lcall
mov
nop
xor
repz
inc
aas
jae
std
pop
pop
into
out
js
sbb
jp
sti
or
andl
cli
mov
hlt
pop
loop
xor
insl
fsts
xchg
in
mov
xor
outsl
mov
jp
data16
push
daa
fstpt
adc
sub
push
stc
scas
pop
aam
push
nop
enter
mov
rcr
icebp
mov
cmpsb
jmp
outsl
sbb
jno
mov
push
aaa
push
pop
push
test
shrl
loope
movb
aad
add
outsl
push
sub
insb
outsl
xchg
mov
add
xchg
or
es
mov
in
jmp
icebp
les
push
xlat
sbb
or
out
cmp
iret
mov
dec
iret
push
daa
xor
push
add
mov
adc
add
scas
xor
dec
push
adcb
push
hlt
cmp
into
or
loopne
add
xor
adc
jg
in
rclb
sub
lea
jbe
jmp
mov
jecxz
ljmp
insb
pop
mov
ja
aad
dec
lea
add
insl
ds
pop
push
sub
imul
popf
aad
stos
mov
pop
into
xchg
leave
rolb
outsb
and
shrl
dec
dec
insl
mov
jmp
pop
pop
arpl
int
test
arpl
pushl
add
out
pop
xchg
lock
pop
mov
add
mov
jl
iret
xlat
pusha
outsb
repnz
mov
out
mov
in
clc
xor
scas
push
push
daa
or
lcall
into
mov
lcall
cltd
dec
fwait
dec
mov
cwtl
lods
xor
pop
mov
adc
inc
stos
add
sti
pop
loop
stc
pop
or
leave
loope
or
jnp
dec
adc
adc
ret
daa
outsl
push
mov
or
pop
fnstenv
dec
add
into
mov
in
js
out
jl
mov
xor
mov
insb
mov
sub
pop
or
lea
in
mov
jns
in
fisubrl
and
fwait
pop
cmp
sarb
lods
loope
and
lods
sti
int
inc
push
xchg
xchg
and
iret
mov
mov
fdiv
jp
dec
shrb
cmp
mov
jne
popf
and
mov
sub
mov
mov
add
mov
jbe
cmp
jbe
fisubrl
cmp
mov
xchg
push
inc
sahf
add
mov
test
mov
lahf
test
test
jnp
cld
clc
mov
mov
lods
mov
adc
lret
push
sub
das
xchg
mov
or
ja
xor
xchg
cs
popf
jo
int
imul
adcb
in
adc
mov
test
push
add
xor
out
aam
fs
fwait
fwait
icebp
sbb
inc
inc
lret
les
gs
xchg
dec
js
add
adc
idiv
push
scas
cs
ret
inc
or
push
sahf
insl
pop
daa
xchg
enter
test
add
in
dec
cld
pop
out
sbbb
cld
mov
pushf
mov
daa
pop
sbb
hlt
cltd
dec
inc
push
int3
xchg
stc
dec
js
data16
aaa
add
in
and
mov
fisttps
in
mov
jne
cmp
mov
push
mov
xor
pop
ret
jl
test
fucomip
fmul
add
icebp
and
insb
aam
decl
jge
es
push
adc
in
lds
scas
ds
push
js
mov
fcompl
in
jnp
data16
sub
or
adc
cmp
in
insb
filds
lret
les
or
cmpsb
mov
inc
mov
push
pop
push
inc
mov
or
mov
mov
inc
adc
in
sub
xchg
repnz
jmp
aad
or
dec
mov
xchg
inc
jecxz
xchg
ret
mov
xor
stc
mov
nop
popa
lret
mov
mov
int3
call
mov
cmc
cmp
ret
adc
mov
and
jnp
and
bound
lret
and
scas
mov
dec
cli
pcmpeqb
and
je
xor
sahf
loop
mov
stos
and
xlat
mov
dec
push
push
dec
cmp
fsubl
push
mov
xchg
inc
and
test
jecxz
adc
imul
movsl
xor
sbb
dec
cmp
jle
mov
scas
arpl
lods
mov
xchg
js
inc
add
dec
je
mov
jmp
hlt
dec
push
aad
out
dec
cmp
mov
or
adc
out
xchg
pusha
stc
and
lret
inc
sbb
int
lret
divb
stos
add
test
mov
mov
sbb
adc
adc
ret
xlat
test
xchg
into
adc
xor
cmp
lock
and
mov
sbb
mov
dec
xchg
push
pop
outsl
cmp
cld
mov
out
xor
pop
adc
int
inc
mov
cmpl
pop
cmp
mov
or
aam
xor
insl
movsb
stc
imulb
scas
ja
cld
cltd
mov
icebp
pusha
rcrl
sar
mov
pop
shl
mov
and
xor
mov
sbb
mov
cli
pop
lods
ret
dec
les
pop
mov
pop
mov
xchg
mov
in
xlat
pop
addb
and
mov
xor
aam
push
mov
pop
mov
mov
or
mov
adc
rclb
gs
fsubs
add
lret
push
test
fistps
and
adc
icebp
push
aam
xchg
jl
cmc
mov
sbb
lahf
dec
mov
in
in
push
aam
inc
jg
shlb
lds
adc
hlt
sub
mov
addr16
mov
outsl
pop
and
sub
sub
push
xchg
repnz
fldl
pop
inc
shll
std
fdivr
mov
stc
and
mov
cmp
adc
add
shll
in
cld
scas
ret
scas
push
ret
adcb
sbb
test
popf
jmp
fs
pop
pop
jp
sub
fcompl
sub
inc
jno
xchg
mov
mov
xchg
js
inc
inc
bound
sbb
and
cmp
imull
mov
aas
or
pop
inc
rcll
dec
xor
xchg
adc
imul
sub
outsl
mov
mov
and
popf
xor
mov
in
cmpsl
inc
jmp
inc
mov
in
jb
mov
hlt
mov
adc
inc
mov
dec
xorb
mov
inc
or
ljmp
cld
aas
lret
and
movups
mov
pop
imul
mov
jmp
lahf
rcll
aam
adc
xchg
adc
pusha
jg
fistpl
cmc
or
pop
aas
aaa
push
inc
sub
xor
int
and
in
hlt
add
add
or
sbb
enter
adc
push
jo
mov
jecxz
xchg
add
push
sub
stos
mov
pop
outsl
adc
cmp
sbb
jmp
xchg
pusha
lcall
ljmp
pop
cmpsl
loope
les
notl
enterw
incl
cmp
and
outsb
aam
add
rol
out
sbb
mov
dec
sub
or
or
mov
push
add
mov
repz
cmp
insb
cmpsb
lds
mov
movsl
cmp
cmc
mov
mov
scas
in
push
cmp
jp
and
jmp
lds
icebp
inc
dec
add
ja
push
push
mov
jns
mov
sub
cltd
pop
add
outsb
mov
mov
inc
cmpsl
movsl
pop
add
das
leave
into
les
sub
icebp
fwait
testb
xchg
lods
dec
pop
dec
xlat
cmp
mov
jno
fimuls
inc
mov
ja
and
inc
xchg
inc
repnz
loope
add
mov
mov
jbe
cmp
ret
outsb
lods
shrl
testl
push
mov
movsl
in
mov
mov
inc
jno
or
cmc
cmp
jmp
icebp
mov
and
xor
add
testb
ret
cmc
pop
and
repnz
lods
imulb
gs
xchg
int
pop
in
xlat
jbe
mov
mov
adc
inc
mov
cld
or
enter
icebp
xor
jns
int
fdivrl
out
dec
jmp
mov
test
push
frstor
popf
lcall
inc
fs
sub
sub
js
out
daa
push
sub
mov
jge
cmp
out
out
fidivl
jns
into
mov
dec
xchg
add
xor
fwait
in
xchg
sub
test
dec
jno
shrb
lret
fcoml
push
dec
inc
aam
stos
xor
loope
mov
add
sbb
lea
jmp
inc
cmpsb
ret
test
sbb
jge
repz
cmc
mov
arpl
out
and
lods
cmp
sbb
pusha
or
bound
adc
sub
inc
loop
jae
out
vucomisd
sbb
add
bound
mov
pop
sub
test
push
xor
xor
in
jno
mov
negl
lods
popf
mov
js
add
cmp
loopne
dec
ret
sti
ret
inc
cld
mov
adc
inc
int
icebp
and
ffreep
es
in
mov
mov
movsl
mov
sub
ror
movsl
cmpb
movsl
fadds
jecxz
stos
push
rcl
in
and
pop
sub
xchg
repnz
push
xchg
dec
jne
sub
and
mov
jge
test
pop
mov
fcmovnb
mov
fisubrl
and
stos
pop
in
dec
ret
push
mov
mov
pop
repnz
imul
mov
loop
fists
xor
mov
mov
mov
jno
adc
cmp
cmp
out
scas
popf
sahf
mov
jno
loope
arpl
and
sbb
sbb
sbb
push
int3
lds
scas
xchg
mov
push
jge
xchg
addb
or
ret
cli
in
push
cmc
test
add
test
aam
sub
ljmp
les
loope
mov
in
loop
leave
lcall
test
cld
mov
adc
cmp
mov
in
pop
cmpsb
in
int3
mov
adcl
mov
dec
cwtl
inc
and
xor
movsb
and
mov
ror
shl
and
call
and
fbstp
mov
test
xchg
xor
fcmove
mov
decb
or
jno
bsf
or
mov
dec
mov
xlat
int3
mov
jmp
mov
xchg
mov
lea
sbb
mov
and
pop
jle
mov
fnstenv
movnti
sub
pusha
mov
stos
jge
cli
jno
in
xchg
push
jg
lods
mov
push
mov
pop
mov
icebp
mov
je
inc
stos
pop
mov
push
icebp
xchg
push
push
jle
push
mov
leave
sbb
jae
jno
add
jp
cmp
enter
adc
mov
inc
mov
mov
adc
or
in
in
test
in
mov
pusha
hlt
fnstcw
xor
cmc
icebp
sub
and
lea
cmp
outsl
xor
in
adc
push
out
xchg
push
or
pop
lret
cld
je
loope
cmpsl
pop
jb
test
mov
test
mov
xchg
adc
cs
std
xchg
cmp
incb
insb
les
lcall
dec
ja
fucom
adc
xor
leave
inc
xor
pushf
stc
dec
jno
enter
push
cmp
push
jns
cmp
imul
adcl
mov
ja
fcomip
sbb
xchg
pop
adc
xchg
mov
cld
jae
in
sub
bound
ficoml
outsl
addr16
push
movsl
push
fwait
bnd
sbb
lods
xor
cmp
mov
push
mov
push
and
cld
inc
int
pop
jmp
jbe
lahf
lret
ficoms
cmp
in
pop
mov
data16
sub
or
sub
ss
adc
mov
mov
mov
push
adc
fmul
push
gs
cli
scas
sbb
push
iret
out
mov
and
sub
jp
movsb
fadd
aas
jmp
pop
or
or
fs
popa
add
xchg
lods
adc
xchg
jle
dec
mov
xorl
ret
mov
push
xchg
popa
or
add
xchg
lret
jge
pop
or
pop
push
push
leave
movsb
jmp
add
aad
and
popf
mov
test
jb
sbb
ss
mov
mov
lcall
fdivrp
popa
inc
sarl
adc
popa
out
data16
faddp
punpckhwd
mov
xchg
jmp
je
test
nop
icebp
inc
icebp
cli
pslld
lahf
push
mov
cmpsl
rcrb
sub
sbb
add
aas
out
sub
fcompl
dec
mov
cli
push
jle
cmpsb
adc
cmpsl
jns
pop
sbb
fimuls
icebp
cmc
dec
dec
insb
and
iret
int3
and
push
mov
sub
rorl
into
push
lods
outsl
sbb
mov
sbb
lock
push
test
mov
lcall
sub
push
je
xchg
push
and
pop
nopl
mov
icebp
pop
scas
stos
ljmp
add
sahf
rolb
inc
mov
repz
in
mov
pop
sti
lret
mov
cmp
pop
testb
icebp
call
fidivl
cli
pop
nop
xchg
scas
jbe
sub
add
cmc
inc
mov
in
mov
popf
inc
inc
pushf
mov
add
ja
bound
sbb
sbb
int3
jecxz
and
outsb
push
dec
jmp
js
mov
insb
js
jmp
push
jbe
xrelease
sahf
cltd
nop
dec
adc
lret
cli
sbb
push
ret
adc
movsl
pop
shr
shl
inc
clc
icebp
jbe
out
sub
enter
jb
xor
adc
in
mov
stos
mov
jle
fld
dec
subb
adc
fisubs
push
mov
stos
ficompl
icebp
xchg
loope
lahf
xchg
gs
lahf
mov
dec
mov
push
mov
add
and
push
test
fadd
mov
mov
insl
xchg
jp
in
fsub
jns
sti
loope
or
ret
icebp
popf
pop
addr16
mov
adc
mov
std
out
out
inc
jle
fbld
cmp
fisttps
jmp
je
fs
mov
rcrb
xlat
mov
push
cltd
mov
repnz
cmp
mov
xchg
push
dec
mov
fiadds
fs
in
mov
push
mov
bound
dec
add
cmp
push
cmpsl
mov
jno
lods
push
aam
push
pop
dec
cmp
ret
shll
fst
inc
fcomps
mov
and
sbb
mov
and
lret
pop
xchg
leave
push
xor
xor
sbb
clc
enter
sbb
jl
cmp
int3
pop
shlb
mov
stos
mov
cmp
mov
xchg
loopne
lods
sti
testb
lods
push
pop
les
or
mov
pop
mov
xchg
imul
lods
or
jmp
loope
movsl
adc
push
fstpt
movsl
push
in
xor
aam
mov
std
mov
dec
xor
xor
mov
iret
test
test
mov
pop
xor
shlb
cwtl
imul
dec
inc
adc
mov
leave
jbe
scas
cmp
inc
mov
arpl
data16
popf
jnp
fstpl
dec
sub
sti
incl
fmul
cmp
jbe
sti
or
cmp
orl
mov
cmc
jmp
icebp
fs
push
fildll
adc
xchg
ret
push
ret
test
pop
fnsave
cmpsb
sbb
mov
inc
lds
lock
cmpsl
stos
mov
js
adc
cmc
leave
out
lds
sub
loop
or
or
mov
jnp
and
sub
dec
in
pop
fistps
mov
sbb
jmp
andb
sbb
sahf
cmpsb
stc
add
push
divb
repz
jle
xchg
pop
cmc
das
loopne
add
mov
icebp
mov
push
mov
icebp
mov
adc
icebp
insl
loopne
mov
lock
push
and
fs
out
mov
push
cmp
push
mov
jle
cmpb
sbb
cmp
cwtl
lahf
mov
inc
jg
push
xchg
test
ss
cmpsl
add
aam
popa
jle
xchg
mov
insb
xchg
adc
cmp
sub
add
xor
add
mov
jmp
cmp
andl
inc
jo
fstp
jo
not
push
loopne
popa
xor
lods
fsts
xor
js
and
lret
fisubrl
cmpsb
in
pop
negl
aad
lahf
daa
cli
push
hlt
inc
lret
mov
inc
push
out
je
repz
mov
es
xchg
mov
out
fs
or
in
cmc
rcr
repz
dec
lahf
and
cmpsb
sbb
call
mov
lret
das
push
jae,pn
push
es
fs
push
mov
jae
mov
cmc
adc
jno
sub
imul
out
push
xchg
rol
pop
rcl
ficomps
and
insl
shl
lock
pusha
sbb
dec
pop
js
movsb
in
dec
pop
mov
inc
pushf
ljmp
and
mov
cmp
int
lods
ret
and
and
xchg
inc
aaa
mov
in
mov
int
push
dec
fiaddl
jae
sub
dec
adc
and
in
ret
in
mov
into
mov
mov
in
xor
push
pop
cltd
mov
add
ljmp
inc
lds
sub
jnp
add
mov
and
xlat
inc
mov
inc
inc
add
in
ljmp
insb
rcrl
arpl
pop
add
mov
mov
pushf
xor
cmp
cs
mov
mov
daa
andb
ss
loop
push
cmpsl
shl
rorb
cmpsl
aam
mov
stos
stos
lock
stc
pop
lret
cli
xchg
bound
jbe
loopne
outsb
xor
pop
cli
aam
inc
lds
or
mov
pop
xor
jge
sti
push
repnz
xor
mov
inc
negl
mov
cmpsl
std
xor
js
mov
js
xchg
fwait
jp
pushf
into
or
outsl
sti
clc
clc
int3
lock
sub
pop
int3
leave
test
mov
aaa
sub
gs
cmp
mov
sbb
xchg
imul
hlt
hlt
sub
ror
loop
xchg
insl
xor
sub
fistps
pop
sbbl
dec
notb
push
sbb
jecxz
dec
testl
outsb
out
sub
out
fisubs
xor
xchg
enter
push
sub
mov
cmpsl
or
inc
mov
bound
lods
int
mov
dec
ds
pusha
add
fadds
test
xchg
mov
mov
sbb
enter
xor
dec
mov
pop
sbb
cmp
mov
cmc
nop
call
repz
loope
push
data16
dec
popf
je
push
xchg
outsb
and
pop
push
scas
adc
hlt
into
leave
cld
jecxz
pop
jo
jno
jns
lret
jnp
fidivs
mov
loope
test
xchg
js
loopne
mov
pop
or
loope
and
lods
and
sbb
call
and
aas
cmpsb
movsb
inc
pop
out
movsb
jno
dec
mov
cld
mov
popf
and
loope
xor
das
jge
xchg
and
inc
mov
lret
ljmp
int3
inc
mov
call
movsb
and
dec
jno
in
add
sub
imul
daa
xor
mov
jp
jmp
ljmp
movsb
dec
sub
lret
adc
into
jmp
jb
out
jp
icebp
mov
mov
mov
mov
dec
inc
xchg
mov
inc
sbb
or
lds
xchg
fidivs
cwtl
movsl
lods
xor
sub
push
mov
ret
pop
addr16
sub
xchg
fbld
loopne
lcall
sub
sub
pop
mov
in
test
pop
vpshlb
pop
jo
push
inc
mov
lds
fs
imul
push
inc
enter
sbbl
pop
loope
add
gs
outsl
cmp
and
adc
pusha
or
in
push
ficoms
stc
lret
jne
push
in
icebp
jmp
dec
daa
icebp
and
dec
mov
lods
mov
jl
popf
mov
inc
jecxz
mov
or
insl
push
out
push
pop
cmp
mov
pop
cmp
test
xchg
inc
xor
gs
loopne
bound
sbb
xor
in
in
inc
pop
pop
dec
and
arpl
fistpl
test
and
je
fistl
js
mov
mov
sub
in
test
xor
lods
dec
push
adc
in
sarl
jg
xorl
repz
adc
pop
or
adc
mov
lahf
adc
out
pop
sahf
sbb
sarb
adc
add
cmc
bound
jae
leave
jg
sub
xchg
jbe
mov
xchg
dec
jne
or
mov
out
rclb
shr
xchg
mov
or
mov
insl
sub
push
dec
fwait
jne
inc
hlt
mov
rcrl
ljmp
loope
jbe
in
push
leave
or
jle
ds
dec
in
mov
ja
xchg
jbe
gs
hlt
or
sarb
pop
insl
fcompl
mov
fistps
sahf
movsl
in
sub
jmp
xlat
iret
push
and
xor
pusha
mov
icebp
lahf
sub
or
scas
lds
lods
mov
cmc
aaa
mov
jbe
rcll
test
mov
sahf
cld
movsl
mov
push
lods
pop
fldl
jl
dec
xor
cli
and
aad
pusha
adc
lock
mov
cli
or
ret
pushf
lods
fwait
shll
and
test
cld
mov
cmp
mov
mov
cmpsb
popa
mov
xchg
push
xchg
lods
scas
xchg
pop
add
lret
gs
test
pusha
enter
mov
lahf
repz
push
lods
dec
repnz
aam
hlt
mov
sbb
loop
in
movsb
pop
fimuls
test
sarb
push
mov
sub
pop
adc
mov
mov
dec
or
cwtl
cs
or
adc
mov
mov
mov
je
xor
mov
je
and
lahf
mov
mov
into
aam
mov
inc
or
xor
xchg
mov
xchg
std
out
call
push
repnz
in
lds
or
push
insb
push
loop
sbb
mov
aaa
insb
xor
xor
sbb
sub
leave
and
sbb
je
les
in
or
or
stc
push
push
sbb
flds
andl
and
xchg
xchg
add
jge
cmpsw
fiadds
inc
loope
xchg
jge
push
fldenv
mov
mov
ficomps
aad
mov
aam
outsl
lea
pop
push
into
mov
imull
popl
and
movsl
dec
jmp
rcrb
xor
idivb
enter
fidivrs
or
jmp
lcall
cmp
add
push
jecxz
or
in
xchg
shl
stc
add
sub
push
divl
push
aam
lods
mov
fcmovnb
sub
jae
adc
popa
stos
insb
xor
mov
push
je
sub
pop
shlb
sti
in
int3
mov
mov
gs
repnz
cwtl
mov
dec
lcall
roll
inc
js
xor
add
call
dec
cmpsl
sub
push
mov
iret
inc
push
loope
in
mov
shrb
adc
jns
inc
mov
jno
or
xchg
shrb
pushf
ljmp
sahf
or
js
sbb
inc
test
test
mov
in
lcall
dec
mov
fstpt
sub
loope
pusha
stc
jl
xor
pop
test
test
pop
gs
mov
push
stos
or
xor
sub
push
outsl
adc
cltd
mov
insl
xor
popf
loopne
rolb
push
test
fidivs
jmp
mov
jmp
and
pop
mov
mov
inc
icebp
sbb
setbe
ret
and
sub
sbb
movb
mov
call
int3
xchg
cli
out
inc
push
stc
inc
outsb
mov
xchg
andl
jmp
push
mov
in
ljmp
lock
imul
nop
popa
sar
and
icebp
repnz
cmc
aad
imul
icebp
inc
movsb
shlb
movsb
movb
adc
lret
pop
xchg
xor
in
in
pop
sbb
loop
jne
and
call
push
dec
mov
mov
jmp
cwtl
jne
sahf
sbb
arpl
inc
mov
repz
scas
xchg
out
cwtl
cld
or
xchg
sub
cwtl
movsb
xor
test
fbld
in
clc
or
add
xor
mov
jecxz
mov
inc
sbb
icebp
int
js
sbb
lea
loope
pop
inc
mull
jecxz
out
out
jbe
imul
or
push
mov
and
fs
test
fdivp
add
outsl
jmp
int3
movsl
jmp
fsubs
cmc
arpl
adc
inc
in
add
pop
movsb
push
sbb
je
mov
adcb
pop
movl
and
in
xor
popa
xor
fisttpl
pop
jge
mov
in
push
lock
into
push
loop
sti
mov
lods
repz
cltd
outsl
repz
pop
loopne,pn
mov
lea
mov
nop
dec
ljmp
pushf
push
arpl
test
pop
std
or
push
arpl
addr16
ljmp
fstpl
mov
or
sbb
jnp
leave
loopne
push
fdivrl
dec
cmpsb
roll
mov
arpl
test
nop
scas
fstpt
cmp
icebp
sbbl
push
push
out
shl
js
inc
mov
add
addb
outsl
xchg
dec
outsl
mov
add
mov
push
cmp
cmp
cwtl
gs
sub
test
xchg
jg
scas
stc
pop
mov
stc
cmc
cmp
dec
pop
mov
pop
popl
or
rorl
icebp
add
imul
jae
adc
lret
inc
repz
jp
divb
lock
sti
arpl
neg
dec
jmp
or
aas
test
bound
je
jno
test
sbb
in
dec
stos
loope
xor
lock
in
xor
inc
dec
imul
imul
mov
jne
ret
jle
mov
cmp
xor
bound
lcall
add
je
xchg
cmp
std
adcl
lock
fdivl
xlat
inc
faddl
std
loop
shlb
mov
pop
in
xorl
mov
sahf
jecxz
mov
mov
cwtl
icebp
mov
int3
jmp
jl
fistps
cmp
aad
inc
lahf
jno
cmp
xchg
jbe
pop
inc
mov
popf
enter
jecxz
mov
mov
lret
push
icebp
loopne
mov
movsb
mov
adc
test
inc
fimuls
and
jbe
jle
ror
loop
and
and
mov
xchg
sbb
outsb
adc
and
mov
inc
mov
mov
lea
psadbw
roll
test
cltd
subb
jle
mov
repz
sub
jb
js
push
and
fists
shlb
inc
sbb
std
popf
push
or
int3
cmp
mov
pop
hlt
or
and
push
daa
ficomps
push
insb
lock
lds
or
shr
mov
add
in
leave
in
or
aad
add
lods
xchg
call
jne
aam
pop
in
addr16
aad
mull
xor
xor
and
sub
test
jns
cmpsb
add
fs
scas
in
lret
fs
push
sbb
dec
ja
inc
lret
mov
popa
ret
jo
mov
adc
imul
stc
mov
mov
mov
dec
stc
mov
loope
movntq
ljmp
push
or
jp
int3
mov
jp
push
hlt
ja
aam
mov
xor
sub
imul
stos
sbb
and
jnp
fidivrs
rcr
push
loop
cmp
testb
jne
shrb
je
mov
pop
cwtl
nop
cmp
mov
loop,pt
hlt
enter
test
ret
adc
xchg
stc
lds
je
imul
jp
test
fisubrl
cmp
sub
subl
orl
mov
sbbl
in
sbb
rcr
stos
repz
mov
sarb
cli
push
shl
cmp
pop
into
xlat
push
lods
jg
sub
push
mov
sbbb
jns
fwait
lds
mov
int3
fadds
and
mov
xor
repz
ret
xor
orb
jbe
nop
cmp
lock
sti
xchg
cmp
xchg
das
das
push
divb
loope
push
je
mov
call
test
pop
xchg
out
jne
in
je
mov
adc
cmp
sub
imul
inc
mov
inc
mov
sbb
push
mov
and
xchg
mov
stc
aaa
outsb
or
adc
jle
pop
hlt
mov
lods
fs
sahf
adc
fsubs
push
lock
lods
outsl
rorb
and
out
pop
movsl
loopne
mov
das
je
in
stos
call
cmpsb
xor
icebp
dec
jecxz
outsl
fimull
ljmp
ret
mov
sub
cltd
sub
cmp
incl
sub
mov
sbb
out
lock
jecxz
adc
clc
push
lds
out
add
cmc
fldt
les
mov
sbb
fdivr
cmpsb
icebp
adc
xchg
xchg
adc
cmp
dec
add
push
shl
mov
out
ss
pop
sbb
add
or
addr16
aad
xchg
mov
sub
mov
pop
fidivs
push
lods
xchg
jnp
push
addr16
cmp
vmovups
in
push
out
jae
cmp
xor
inc
and
jmp
mov
in
sub
iret
xor
mov
fnsave
dec
sar
push
ds
int
mov
ret
lock
mov
jbe
in
clc
sub
aaa
in
popa
test
adc
push
push
cld
sahf
lcall
daa
xor
add
into
add
lea
mov
jo
lret
and
mov
cli
jo
pusha
mov
shl
and
xor
cmpsb
xchg
test
int3
mov
in
cmp
scas
in
roll
sti
sbb
negb
dec
pop
ss
cmp
and
jo
arpl
jae
inc
pushl
addr16
push
fstpt
sti
adc
mov
out
popf
dec
cmpsl
bndldx
sbb
lods
repz
cmp
lea
pop
loopne
pop
add
mov
or
scas
mov
fnsave
or
stos
mov
ret
jbe
cltd
popf
icebp
sub
jns
popf
cli
add
call
outsl
push
fwait
insb
and
stos
adc
add
and
arpl
mov
movsb
inc
lret
nop
cmp
push
or
mov
dec
cmc
mov
and
out
in
pop
mov
std
leave
lret
data16
inc
gs
jmp
shlb
gs
jmp
dec
in
pop
dec
in
or
std
aas
cmp
shlb
jne
mull
xchg
vmread
ret
dec
sahf
mov
mov
lahf
inc
push
mov
adc
repnz
push
cmpsb
or
xor
inc
sub
cmpsl
mov
xchg
ds
sub
aas
addr16
pop
lret
xchg
hlt
std
rcl
ret
sub
jmp
push
leave
cmp
fidivrs
and
int
sbbb
add
mov
mov
dec
call
xor
mov
shrb
cmp
sbb
jae
daa
loop
mov
mov
bound
cmp
and
inc
adc
push
sahf
test
xor
inc
mov
pop
fstpt
dec
mov
and
fsubrp
pmaxub
js
mov
push
jl
loope
jae
ffreep
stos
js
cmp
notb
cwtl
dec
lret
icebp
gs
aas
aam
lahf
mov
subl
daa
add
popa
orl
test
and
push
mov
add
push
ret
push
jle
mov
mov
fldenv
mov
push
popa
xchg
add
aad
shll
insl
out
std
cmp
repnz
push
imul
jecxz
jno
fs
mov
or
in
adc
out
mov
test
pop
or
sub
imull
sarb
cli
jecxz
pop
int
iret
outsb
andl
sbb
push
mov
jno
loop
icebp
jmp
rcrb
mov
push
call
out
stos
out
or
jno
fbstp
xchg
cmc
fisubrs
jecxz
push
mov
daa
fdivs
inc
mov
popf
test
sub
cmp
int
jb
pop
scas
das
mov
jmp
int
lods
dec
xchg
xor
cmc
push
mov
jmp
hlt
lahf
out
mov
mov
cli
cs
jnp
jge
mov
or
loope
sbb
std
scas
fprem
imul
mov
imul
ss
cmp
add
sub
into
xor
jecxz
cmc
aas
adc
imull
cmc
pop
ds
add
mov
xor
cli
or
add
xchg
cli
xor
sub
stc
lahf
push
fisttpll
inc
js
std
fbld
cmpsb
outsl
loop
stos
in
cmp
xchg
ret
ljmp
int3
jmp
cltd
imul
add
leave
movsl
iret
lret
push
test
mov
cmp
xor
les
sbb
out
mov
jns
outsb
mov
and
daa
pop
scas
pop
or
out
aam
cmp
pop
jae
arpl
pop
sahf
fcomi
push
jae
push
xchg
or
in
fisubl
ja
loop
and
arpl
shr
clc
cmpsb
lds
sbb
les
push
and
jg
dec
push
ds
cli
jns
in
lcall
mov
mov
or
sbb
xchg
in
movsb
shll
int3
hlt
mov
fwait
and
in
aas
adc
mov
les
arpl
stos
adc
mov
mov
out
rcr
push
or
sbb
xor
out
shl
movb
pushf
mov
mov
pop
sub
jmp
repz
ljmp
insl
leave
lock
mov
sub
fs
fcmove
imul
xchg
roll
ffreep
pop
inc
lds
or
ss
jle
inc
lock
stos
movsl
push
xor
sbb
add
add
scas
ds
mov
rorl
and
decb
lret
repz
stos
and
jecxz
jp
bound
mov
push
in
fldcw
mov
aaa
test
les
stc
scas
inc
out
xchg
cmc
jge
pop
int3
imul
fwait
leave
jmp
test
xor
adc
and
xchg
mov
cmpsb
xlat
in
jle
add
testl
sub
hlt
sbb
sub
xchg
pusha
mov
data16
jb
cmp
or
mov
mov
or
lret
aam
push
repz
lock
lds
sub
fs
in
pop
shll
sbb
lahf
loopne
or
push
orl
jge
cmpsb
data16
nop
loop
pop
call
in
xchg
mov
or
cmp
and
popf
insb
in
outsb
mov
hlt
in
pop
insb
std
mov
std
cmp
stc
repz
in
imul
adc
pushf
dec
in
inc
sbb
aas
pushf
push
mov
pop
jo
outsl
in
lods
lods
fmuls
push
and
add
cmc
int3
dec
mov
aad
pop
pop
mov
loop
sub
aad
dec
inc
fs
movsl
ret
or
push
addb
and
neg
xchg
rolb
push
xor
dec
adc
jns
cmp
loope
add
pop
pcmpeqb
shl
and
cltd
fdivrs
xorl
int3
push
sub
cmp
mov
fldt
mov
xchg
shrl
and
mov
mov
mov
sub
xchg
cmp
mov
pop
icebp
jne
ret
rcll
mov
insb
jecxz
push
mov
nop
pop
push
jecxz
es
enter
inc
adc
xlat
push
test
in
add
loope
roll
insl
mov
mov
in
rolb
sti
and
lods
loopne
cmpb
fsubs
lods
xchg
and
push
mov
or
lds
lea
packssdw
or
push
add
and
lock
lret
pop
push
push
sub
inc
fs
xor
xchg
dec
jecxz
daa
int3
shll
fisttps
daa
stos
gs
mov
icebp
cmp
xorl
inc
gs
in
inc
call
movsb
adc
or
pushl
pop
shr
inc
aad
mov
outsb
dec
fistps
cmp
ret
push
in
std
mov
inc
lock
inc
mov
adc
ret
push
mov
aas
popf
xchg
inc
mov
sbb
test
fstps
adc
je
push
and
lahf
int
fisubrs
mov
cmp
lock
mov
es
aad
mov
pop
push
sti
pop
push
mov
mov
leave
mov
int
cmpsb
sbb
repnz
mov
nop
lahf
lahf
push
mov
jne
and
sahf
ja
aad
add
hlt
fiaddl
add
imul
mov
jl
mov
mov
fs
mov
push
pop
in
rolb
mov
ss
dec
mov
dec
cs
pushf
jns
stos
jmp
jae
fildll
loope
sbbl
mulb
rorb
notl
ffree
pop
jne
shl
xor
mov
int3
mov
cmp
clc
jno
adc
test
mov
in
cmc
loope
in
pop
inc
movsl
add
arpl
sub
and
push
dec
addl
and
mov
insl
rcrb
mov
cmp
or
push
jp
nop
jmp
sub
in
jp
int
movsb
ljmp
mov
lds
mov
cmc
int
les
in
jns
ds
jne
dec
lock
push
les
mov
adc
int3
fmull
cmp
lret
mov
in
lock
dec
jmp
mov
add
inc
lea
mov
cmc
jge
pop
pusha
jbe
icebp
sub
add
cmp
push
lret
test
and
or
and
mov
and
or
dec
push
jp
nop
jmp
rol
imul
in
int
movsb
ljmp
push
ljmp
push
ljmp
push
ljmp
in
lcall
or
and
jns
push
outsb
js
fmull
cmp
lret
mov
in
repz
xor
add
roll
mov
sub
dec
mov
cmc
jge
mov
sub
add
lret
lds
test
lcall
jne
push
insl
fdiv
mov
push
dec
hlt
cmp
or
mov
or
repz
pop
jecxz
xor
int3
dec
dec
imul
shll
popa
xor
xor
scas
cmpsl
mov
fbld
sub
push
out
movsl
dec
mov
jecxz
lock
clc
push
jns
das
imul
fdiv
mov
mov
xchg
and
xchg
rorl
int3
xlat
in
mull
dec
and
imul
sbbl
push
not
inc
loope
pop
jno
mov
dec
fcmovnu
pop
fldenv
xor
es
pop
in
pop
jecxz
pop
push
inc
mov
call
iret
nop
jmp
mov
push
pop
es
pop
inc
sbb
in
mov
inc
dec
xor
jne
ret
jmp
push
nop
mov
imul
cmpsl
add
notb
insl
cmc
adc
ljmp
add
insl
sub
sbb
lods
inc
push
sub
push
aad
mov
ret
jmp
fnstcw
push
cmp
jns
imul
and
cmp
mov
fldcw
enter
test
jp
jno
hlt
stc
adcb
pop
xchg
and
cwtl
test
sbb
cmp
cmc
repnz
gs
hlt
xchg
imul
pop
add
mov
std
jbe
add
jne
jno
gs
mov
cmc
push
insl
jns
add
les
leave
insl
push
push
not
inc
mov
out
bound
dec
mov
adc
insl
jns
pop
xchg
int
repz
aad
movb
lds
aad
lds
fcmovne
dec
cwtl
jmp
jae
xchg
and
test
jecxz
add
les
cltd
mov
call
mov
int
jns
int3
cs
test
cmpsb
out
iret
cmpsl
sahf
add
lods
pushf
in
mov
fiaddl
add
mov
mov
scas
adc
test
jg
jno
adcl
xchg
mov
hlt
add
dec
bnd
inc
lea
inc
outsl
repnz
and
cmc
push
push
lret
pop
jmp
mov
mov
or
dec
xchg
adc
mov
mov
push
adc
jle
in
or
mov
test
sbb
sbb
xor
es
mov
xchg
leave
mov
ljmp
or
ret
movsl
rclb
cmc
fbld
or
mov
insl
sub
in
push
mov
adc
loop
sbb
mov
inc
std
out
mov
mov
clc
fs
cmp
mov
push
fildl
mov
ja
sub
cmc
xchg
leave
scas
mov
ret
lock
jmp
mov
addr16
out
jmp
sub
cmpsb
imul
mov
jb
fisubrs
into
mov
rclb
or
mov
stc
sahf
xchg
mov
mov
sarl
pop
into
loope
leave
scas
sbb
adc
aaa
jl
mov
les
enter
jno
pushf
dec
ljmp
push
bound
mov
test
lods
mov
popf
roll
pop
pop
sbb
push
jge
imul
lods
loope
lea
lret
jns
in
cld
sbb
hlt
scas
dec
or
fabs
scas
mov
clc
cmpl
test
lret
mov
pop
push
mov
das
es
lods
addr16
mov
clc
popf
stos
mov
paddsb
shrl
lea
push
sub
adc
inc
call
icebp
hlt
lret
add
jae
lret
pusha
inc
jmp
sub
test
push
jo
mov
cmc
mov
inc
jne
test
xchg
cmpsl
stos
pop
cmp
xor
fxtract
inc
repnz
cltd
data16
cmp
bound
ds
cmp
jb
mov
jbe
pop
or
je
pop
add
gs
or
shrl
mov
cld
in
movups
int
and
and
mov
jne
in
mull
divb
or
dec
and
test
imul
push
jo
mov
pop
dec
ss
loopne
cmpsb
dec
jnp
jecxz
xchg
es
adc
inc
gs
lods
sub
ljmp
xor
and
inc
and
loop
es
cmpsb
or
dec
inc
and
jns
sbb
xchg
mov
jmp
mov
jo
mov
pop
jbe
inc
std
popa
lds
fnstsw
cmc
or
int
out
cmp
fistpl
adc
fimull
xor
rcll
movsl
out
push
add
add
scas
jb
inc
add
mov
loopne
inc
mov
inc
xor
inc
sbb
stos
pop
mov
icebp
add
insl
sbb
pop
int3
dec
addr16
inc
lahf
push
scas
sub
fwait
pop
dec
xchg
ret
dec
or
aaa
in
repnz
mov
pop
lock
and
and
ds
pop
mov
jns
scas
xchg
fidivs
jmp
icebp
in
je
mov
fsubr
mov
inc
divl
cmp
in
lds
fistps
arpl
fidivs
jo
fsubl
insb
stc
fmuls
out
xchg
sbb
cmpsb
pop
adc
fldl
cli
mov
fwait
push
popf
add
cltd
xchg
mov
jmp
add
push
jne
mov
add
loop
adc
mov
inc
mov
xor
adc
sahf
ror
add
ficomps
mov
mov
shrl
push
add
sbb
imul
mov
mov
shrl
xorb
cmp
dec
mov
push
inc
outsb
xchg
or
adc
sub
add
dec
xchg
xchg
lods
bound
or
and
cwtl
mov
and
add
popa
inc
scas
mov
mov
sub
mov
jle
mov
jns
mov
cmp
jb
add
add
movsl
jno
mov
xor
or
fwait
fwait
jp
xorb
or
out
and
lcall
and
bnd
push
or
shl
aad
adc
sub
ja
dec
sbb
pop
shrb
or
inc
mov
inc
icebp
outsb
sbb
mov
packuswb
daa
or
adc
inc
jp
pop
sub
jmp
push
sub
jb
lea
test
mov
ret
sti
adc
stos
jmp
pop
add
and
sbb
jmp
jb
aad
in
shll
loopne
mov
add
mov
or
ret
inc
dec
sub
jbe
jns
jnp
pop
and
mov
sbb
outsb
shrl
add
aam
cmp
push
jbe
neg
add
jecxz
jnp
cli
xor
xchg
mov
jns
mov
sbb
cmc
and
jo
pop
fcmovne
movsb
sub
fdiv
mov
cwtl
sbb
jbe
sbb
push
cs
shlb
in
push
pop
pop
repz
inc
push
loope
push
cmc
sarl
pop
mov
roll
roll
popf
aad
int3
xor
nop
movsb
push
movsb
push
push
movsb
jmp
leave
scas
mov
aam
rcr
mov
pop
das
inc
pop
and
add
test
cmp
xor
pop
jae
popf
adc
jne
dec
data16
or
sti
and
adc
ds
jp
lds
dec
js
test
inc
movsl
jo
out
lcall
inc
mov
test
das
adc
mov
lods
icebp
jmp
push
mov
mov
xor
cwtl
pop
nop
sbb
fldl
or
sbb
xchg
dec
rol
xor
pop
cmc
pusha
fldt
loope
je
das
ret
repz
or
iret
push
mov
ljmp
int
lcall
cld
pop
lcall
ds
loopne
cmpsb
insl
xor
push
sbb
clc
adc
repnz
sub
cmpsb
inc
scas
data16
xor
icebp
mul
cs
mov
in
out
mov
leave
js
aad
cmpsb
fldt
rolb
and
sbb
sbb
loop
popf
lea
add
fstp
sub
ret
or
cltd
adc
push
test
mov
and
mov
int3
fscale
cli
or
cmc
push
cmc
xor
mov
imul
scas
cwtl
xchg
mov
cmp
mov
dec
dec
dec
mov
rcr
imul
insl
and
cmc
cmpsl
fs
in
pushf
add
mov
adc
add
and
jbe
jno
xor
movsl
lea
add
jb
dec
ret
cmc
xor
in
sbbl
sub
sub
xor
movsb
sbb
aam
add
jne
jne
push
inc
cmpsb
adc
or
test
shll
inc
sbb
cmp
add
cmp
rcll
lcall
cmc
mov
into
jecxz
push
xchg
pop
lcall
lock
mov
pop
push
fsubrp
hlt
sub
lret
lahf
mov
mov
gs
cmc
mov
repz
mov
mov
jno
mov
mov
loope
push
arpl
lcall
rcl
outsb
lds
jnp
gs
sbb
lea
mov
mov
cltd
call
mov
jecxz
notb
xor
mov
dec
mov
inc
mov
sbb
jae
pop
sub
dec
cltd
inc
sub
mov
arpl
xor
dec
mov
fnstcw
and
jge
cmp
inc
sub
or
decb
scas
adcb
pop
xchg
in
pop
int
jl
xchg
daa
pop
xchg
mov
ret
pop
inc
sbb
mov
out
daa
dec
push
sub
les
jg
mov
out
cmpb
inc
cmp
std
xor
popf
lock
push
mov
shlb
call
jmp
sbb
and
mov
out
imul
pop
lds
mov
icebp
pushf
in
insl
rcrb
sub
sbb
stos
and
push
orl
mov
jo
inc
repz
fistpl
popf
jo
cmp
adc
or
inc
leave
xchg
and
out
iret
mov
jb
mov
and
mov
lods
js
rolb
mov
xchg
xor
jl
mov
dec
stc
pop
aad
jno
test
sub
dec
xchg
sti
out
in
sub
xor
or
rorl
loopne
jne
mov
xorb
jne
fbld
cmpsl
and
and
movsl
cmpsl
into
pop
int
sbb
xor
pop
push
scas
loope
cmp
lds
xlat
mov
fistpll
mov
adc
dec
rcl
push
jbe
addl
push
cmc
add
inc
or
pop
pop
mov
shr
daa
test
sbb
cwtl
adc
push
pop
std
xor
aaa
xchg
or
cmp
jne
mov
fistpll
das
pop
lret
int3
repz
pop
aad
jo
into
nop
cmp
pop
mov
and
fwait
cld
dec
pop
scas
lods
filds
lret
push
faddp
shrb
or
mov
or
adc
inc
add
into
scas
sub
ret
nop
mov
out
jge
inc
jl
mov
mov
repz
xor
call
int
leave
daa
xlat
pop
jbe
lret
pop
aas
test
jo
sub
call
add
ret
sub
add
xchg
pusha
stos
xorb
ret
xchg
lahf
cwtl
icebp
jae
out
adc
negb
push
push
mov
add
fs
xchg
loopne
fnstenv
mov
inc
lahf
sub
push
fsub
data16
testb
pop
fnstsw
mov
sub
or
push
insl
and
jecxz
jbe
or
mov
in
jge
aad
mov
addr16
in
pushf
pop
push
repnz
pinsrw
mov
std
sub
call
cmc
add
mov
jns
shr
stc
cmpsl
adc
mov
xor
xchg
add
pusha
popf
jns
sti
lret
xor
xchg
fwait
icebp
test
cmpsl
mov
push
sub
and
push
pop
jge
orl
cmp
movsl
sbb
leave
add
sub
dec
jmp
arpl
aas
addr16
inc
xor
cs
gs
aad
pop
pop
pop
dec
mov
xchg
shll
push
lds
jnp
cmpb
xlat
xchg
in
adc
cmp
xor
add
add
mov
inc
shlb
jge
dec
shlb
das
popf
add
lcall
and
movsb
xchg
test
fstl
ret
std
ds
jg
sbb
loop
fwait
loop
mov
mov
imul
dec
xor
inc
loope
ret
mov
inc
adc
dec
push
dec
dec
push
adc
daa
scas
repz
fwait
and
inc
or
pusha
les
rclb
mov
cs
das
xorb
call
adc
xor
mov
dec
xchg
inc
mov
out
in
add
bound
cmpsb
test
mov
mov
adc
or
mov
fcoml
rolb
mov
aam
jmp
scas
mov
std
adc
dec
mov
ss
insb
mov
sahf
sbb
leave
sahf
dec
mov
xchg
sub
popf
rcr
jae
scas
sub
dec
jb
lods
aam
jne
dec
ret
add
jge
imul
mov
mov
add
inc
stc
push
mov
jnp
popa
cld
mov
adc
xchg
mov
cmp
in
sub
aaa
data16
cmp
je
mov
xor
add
mov
mov
popl
pusha
inc
jae
fidivl
jb
dec
mov
jecxz
aaa
pop
fcomip
inc
loopne
mov
fst
xor
lea
outsb
notl
fidivrs
add
push
push
mov
mov
aaa
fldl
out
and
pop
and
or
jae
inc
dec
fisubl
insl
lock
jg
test
sbb
js
pushf
repnz
or
mov
inc
or
add
mov
sub
add
xor
push
pavgb
pop
clts
mov
divb
mov
hlt
mov
insb
jecxz
mov
lds
xor
cmc
movsl
pop
frstor
cmpsl
push
repz
pop
xchg
bnd
movsb
add
xor
fcmovbe
push
pop
jp
push
mov
cltd
int3
push
arpl
sti
ret
pushf
out
js
scas
mov
cmp
fsub
jne
xorb
or
cmc
cmpsb
pop
xchg
insb
mov
sbb
ret
cmp
or
test
mov
shlb
mov
cli
adc
mov
out
lds
scas
lahf
xlat
inc
jne
jl
pusha
sarl
loop
sub
pop
mov
repz
test
push
inc
fs
or
cmp
sbb
mov
jno
pop
stos
and
inc
mov
sbb
mov
hlt
and
lds
jle
shl
movsl
movsl
scas
add
stc
mov
popa
pop
lods
push
cmc
lock
stos
push
fsub
test
adcl
cmpsb
xchg
adc
das
add
hlt
pop
ss
mov
test
sub
icebp
std
sub
mov
ret
cwtl
rol
lock
mov
outsb
or
pop
and
cmp
push
inc
adc
add
mov
movsb
add
push
xchg
xchg
mov
cmp
add
xchg
dec
repnz
test
jle
and
or
scas
popf
loop
jbe
sbb
cld
sub
and
fs
test
in
outsb
popf
xor
repnz
dec
movsb
in
xorl
ret
add
inc
cmpsb
popa
or
push
jne
outsb
aam
jno
in
orb
iret
out
popa
repnz
divl
xchg
pop
xchg
pushf
leave
xor
arpl
pop
movsb
gs
cmp
mov
mov
je
sbb
cmpsb
jbe
insl
les
ret
mov
push
push
repz
inc
dec
lcall
testb
cmc
dec
test
es
lock
jns
cli
dec
mov
pushf
hlt
mov
xchg
or
xor
sbb
cmpsb
lret
fwait
and
mov
fwait
jmp
ja
lret
sub
les
popa
testb
inc
fwait
ja
jecxz
arpl
inc
pop
xor
xor
lahf
mov
inc
mov
test
scas
mov
ds
xor
cltd
and
and
out
ljmp
subb
add
and
in
mov
mov
lahf
test
xchg
leave
addl
out
cld
push
repnz
arpl
jg
mov
jb
leave
mov
push
std
mov
xor
lods
pminub
inc
popf
lds
dec
inc
mov
loopne
dec
xchg
sbbb
pop
pop
or
mov
jne
jo
xchg
jl
xor
and
mov
fcoms
rcrb
add
sbbl
add
scas
xchg
sbb
mov
add
addr16
leave
bound
ret
addr16
test
leave
jle
sub
cmpsl
repz
pop
and
inc
sbb
push
add
clc
pop
call
jmp
test
scas
addr16
xchg
stc
mov
jg
mov
insb
cmpsl
xchg
out
mov
loop
xchg
fucomip
and
sub
mov
xchg
jle
xchg
rcll
int3
push
inc
sahf
insb
movsl
pop
mov
sub
out
or
rorb
testl
dec
lret
jg
clc
test
clc
lcall
dec
fdivl
repnz
add
mov
lcall
push
mov
aad
push
mov
add
cltd
scas
jmp
sbb
les
push
nop
jmp
xchg
push
loop
fwait
and
xchg
jmp
cwtl
nop
fbld
dec
sahf
push
loop
fcomp
inc
inc
adc
divb
xchg
addl
aas
lods
cmp
mov
or
aad
lea
adc
adc
out
xor
jnp
insw
int3
loope
addl
xor
adc
gs
xchg
or
repnz
ror
push
rcll
js
negl
push
enter
jbe
movsb
fs
shll
bound
loopne
sbb
cmpsl
pop
inc
and
and
std
popa
jnp
ja
test
and
mov
repz
nop
in
jmp
clc
mov
mov
imul
out
jecxz
lret
mov
in
int
in
add
xchg
stc
int3
test
pushf
mov
xor
jp
jnp
add
loop
xchg
and
dec
repnz
fnsave
shrl
ljmp
xchg
xor
dec
dec
sbb
cltd
xchg
xchg
fbstp
les
xchg
or
push
mov
daa
fisubrs
int3
fldcw
xchg
adc
jl
inc
fldcw
lahf
in
stos
out
test
ljmp
addr16
inc
icebp
pop
push
jp
sbb
push
add
push
test
push
shlb
adcb
int3
jp
cmc
sbb
adc
in
dec
push
cmp
les
xchg
adc
jg
outsb
test
jp
jo
push
adc
or
aad
hlt
lcall
add
cmp
in
lret
loop
xchg
call
jp
sub
bound
sbb
mov
negl
pusha
add
les
es
cmpsb
aad
movsb
inc
js
js
add
data16
jns
loop
cwtl
mov
testb
lret
lods
ljmp
push
sbb
dec
push
jns
jp
pop
outsb
movsl
add
out
movsl
mov
repnz
or
int
dec
push
lea
dec
pop
mov
fnstenv
jbe
in
push
mov
xor
loopne
rcrb
bound
test
lds
loop
imul
xor
pop
fisubrl
gs
sub
push
js
movsl
jns
mov
xchg
push
pop
test
dec
popa
inc
fidivrs
and
adc
outsb
lock
stos
int3
mov
sbb
vpunpcklwd
inc
popa
inc
sarl
jae
into
imul
inc
xchg
mov
lea
test
test
sub
mov
push
outsl
test
std
xchg
push
jo
xchg
mov
iret
mov
pop
or
fstps
mov
adc
sbb
xchg
cmp
lea
out
xchg
adc
mov
dec
adc
dec
xlat
pop
call
mov
pop
fisubrs
and
imul
dec
andb
test
sub
int
push
pop
xor
mov
dec
and
adc
xlat
je
lds
aam
jge
out
divb
or
mov
xchg
leave
sub
arpl
mov
inc
leave
add
mov
fcmovnu
ret
popf
gs
mov
or
sbb
jg
or
xor
out
cwtl
inc
mov
dec
enter
xchg
sbb
jno
xor
adc
scas
fs
adc
jns
cmp
mov
dec
inc
testb
push
dec
mov
out
lret
into
push
repnz
and
movsl
lods
lds
daa
xchg
mov
cmpsl
andl
mov
inc
mov
in
sti
lods
insl
es
scas
and
jno
repnz
subl
push
push
inc
mov
push
sub
cmpsb
xchg
in
push
inc
mov
push
xchg
imul
dec
imul
hlt
or
jp
lock
mov
test
adc
enter
cmpsl
fldcw
pop
or
push
push
cli
cltd
pop
stos
movsl
out
ror
push
cltd
xchg
cmp
dec
pop
and
fldl
shl
fstl
ss
fmuls
jmp
add
mov
and
mov
roll
or
sbb
leave
jns
pop
and
or
mov
xchg
inc
pop
push
test
gs
mov
loop
cmp
in
xor
xorb
xchg
faddl
xor
mov
adc
pop
pusha
mov
sbb
ret
add
or
out
cwtl
inc
test
lret
mov
jp
adc
cltd
fmulp
in
ljmp
and
mov
add
bound
test
push
out
mov
or
mov
push
and
jge
cmc
cmc
mov
in
movsb
jo
mov
xchg
mov
dec
popa
repnz
les
rep
mov
bound
add
fnsave
cmpsl
or
and
xchg
fst
pop
lret
fcomps
xchg
xchg
jmp
fnstcw
pop
fadds
push
push
xchg
popa
jmp
popf
push
inc
std
mov
in
into
sbb
mul
mov
push
cmp
addr16
pushf
xor
add
negl
fidivs
mov
xor
push
lret
ds
xor
icebp
movsb
or
pushw
pop
mov
push
in
sarl
lods
insl
rolb
sub
mov
pop
sub
mov
movsl
or
std
xlat
lea
mov
xchg
xor
cmp
cmc
mov
movsb
test
inc
cmpsb
xor
inc
xlat
cmpsb
sub
shr
sbb
ja
mov
jge
les
scas
xchg
icebp
stos
inc
xor
mov
gs
scas
icebp
inc
and
std
in
ja
mov
mov
into
push
int
cs
shl
xchg
in
push
sti
xchg
jns
xor
iret
cwtl
jmp
ljmp
jle
iret
mov
adc
cmc
and
sbb
xchg
dec
sbb
adc
sti
movsb
add
mov
test
nop
adc
loope
push
es
insl
sub
pop
and
sti
cmc
pop
push
call
cmp
je
popfw
popa
mov
lods
sbb
sahf
lret
push
stc
test
mov
jmp
lds
in
xchg
in
xchg
mov
and
mov
sbb
pop
int3
aad
add
mov
mov
add
std
jbe
jno
data16
stc
pop
jne
lock
fs
or
insb
cmpsl
pop
jg
enter
movsb
xor
movsb
xor
add
bound
push
outsb
rcrb
push
jns
pop
cmpsb
movsl
mov
push
jns
or
or
ret
adc
pop
fs
jnp
lea
mov
and
rorl
or
dec
cmc
pop
jno
pusha
inc
test
repz
imull
hlt
push
add
fcomip
add
lods
out
xorl
and
xor
inc
frstor
jg
mov
pop
push
pop
sbb
je
outsb
daa
std
dec
lret
xor
push
sbb
or
adc
adc
jae
and
hlt
jg
pop
mov
xchg
out
jb
cs
adc
int3
ror
cmpsb
icebp
ljmp
scas
mov
movsb
test
imulb
push
mov
and
xor
push
inc
cmpsb
ret
mov
cmp
lods
mov
lcall
and
sub
int3
sub
mov
sbb
icebp
and
adc
cmpsb
sbbb
dec
cmpsl
mov
pop
pop
and
xchg
dec
push
sub
lret
fldcw
mov
mov
subb
mov
sub
sbb
clc
cmpsb
mov
mov
or
xlat
push
mov
push
xchg
ljmp
mov
pop
fiadds
cmpsb
pop
sbb
pop
push
frstor
ss
inc
stos
je
mov
jae
jecxz
loope
lret
scas
repnz
mov
je
sbb
cs
in
adc
dec
xchg
or
cmpsl
push
or
lahf
lods
pop
pop
sub
lock
or
pusha
mov
jecxz
and
in
and
in
fisubrl
stc
add
dec
clc
or
push
dec
movsl
adc
xchg
add
ret
mov
ret
mov
ret
add
dec
dec
adc
dec
push
jne
dec
xchg
jne
jns
ja
add
mov
jne
mov
jne
mov
insl
mov
and
push
sahf
jne
push
mov
out
rorl
in
es
cmp
push
dec
jge
mov
jno
jne
jne
lods
cmpb
xchg
jecxz
ret
or
es
repnz
orl
cmc
add
jmp
int3
or
popf
fdivl
gs
mov
push
xor
jbe
xor
jbe
xor
pop
add
add
or
add
add
inc
xor
jmp
inc
adc
mov
xrelease
pop
repz
jno
ret
sub
leave
sahf
hlt
mov
mov
mov
std
cld
scas
mov
std
stos
mov
sbb
and
xchg
aam
inc
push
aam
inc
adc
mov
repz
mov
mov
sbb
std
push
gs
popa
ret
insl
les
fwait
hlt
pop
mov
inc
add
dec
les
inc
or
aam
inc
cltd
aam
inc
sub
jb
int
ss
jno
pop
repnz
pop
pop
xor
pop
jb
movsl
pop
mov
xchg
pop
mov
lea
and
xor
and
in
js
lds
add
int
insl
cli
xor
daa
inc
data16
lcall
adc
loope
rcr
div
sub
loope
mov
push
cltd
movsl
out
push
insb
pop
cs
mov
sti
mov
mov
dec
adc
push
sbb
sub
imulb
and
xchg
sbb
sti
ljmp
shlb
jns
daa
fwait
jecxz
dec
push
out
mov
mov
stc
cltd
mov
mov
cli
pop
mov
inc
push
inc
xor
popa
pop
cmp
inc
lods
push
lds
in
pop
xchg
dec
push
jae
test
add
mov
push
xor
cmp
pop
test
daa
xchg
pop
cld
mov
pop
loope
xor
fidivs
push
mov
jno
pop
ss
and
imul
andl
cmp
fstps
sub
and
push
lds
iret
jg
out
add
cmp
inc
shl
mov
in
pop
insl
xor
hlt
mov
scas
mov
loop
and
lods
sub
mov
inc
mov
xchg
mov
pushf
sahf
fiadds
mov
xchg
cmp
test
mov
data16
xor
cmpsl
imul
xchg
cmpsl
or
pop
ret
out
push
jmp
fiaddl
inc
or
jb
pop
adc
call
add
stc
in
rclb
mov
stc
fmuls
outsb
out
pop
add
test
std
sbb
in
mov
or
mov
cli
lock
mov
mov
int3
data16
xchg
sub
lret
mov
cli
inc
and
dec
cmp
sbb
imul
xor
push
and
sbb
sbb
pop
jo
inc
fs
lods
push
lret
in
cmp
cmp
jo
les
jmp
push
lret
xlat
int
negb
jmp
je
or
lret
scas
addr16
jne
es
ror
bound
fwait
and
fmulp
popa
mov
inc
cmpsb
jmp
jle
or
mov
mov
in
jmp
xor
ds
mov
jge
mov
dec
jno
pusha
or
push
mov
or
out
jmp
in
stos
xor
scas
insl
ljmp
movsb
xchg
ja
sub
and
lret
sbb
out
loope
mov
test
mov
jmp
scas
call
xchg
leave
xchg
pop
orb
and
daa
xlat
fcmovbe
std
and
loop
adc
jns
and
outsl
add
push
mov
sub
pop
mov
mov
cmp
in
jb
js
fisttpll
pop
loope
xor
cmpsb
insl
inc
lods
loop
movsb
and
std
je
aad
inc
mov
iret
movsb
add
aaa
and
popf
adc
inc
cmp
xorb
pop
repnz
ss
xchg
subb
dec
jb
int3
test
out
mov
adc
xor
aaa
mov
and
pop
jb
jbe
jae
jbe
das
repnz
push
pop
lcall
or
ror
cs
ret
xchg
fidivs
cmc
xor
loope
popf
pop
pop
scas
in
xlat
push
ja
repz
or
stc
addr16
mov
divb
imul
push
xchg
addr16
cmp
aam
mov
adc
lock
pop
imul
ficoms
mov
cmp
mov
call
jecxz
sbb
push
add
lret
push
out
jno
in
xchg
outsb
test
pop
mov
xchg
insb
out
push
clc
push
fbld
inc
pop
sarl
cld
ret
push
add
in
pop
inc
push
imul
xor
scas
xchg
mov
xchg
cmp
loope
bound
cmpsl
ja
aaa
insb
nop
out
and
mov
sti
xchg
movsl
adc
jmp
and
and
dec
mov
mov
pop
or
jmp
cmpsl
ficomps
das
imul
ret
jmp
out
insl
shrb
and
nop
add
jmp
dec
popaw
xchg
xchg
dec
pusha
or
lds
add
popa
aad
xchg
sbb
sbb
lock
iret
shl
mov
cld
lds
stc
mov
into
fisttpll
jmp
xor
xor
cmc
sbb
scas
cmp
out
fwait
xchg
lahf
repnz
bound
jo
testl
jecxz
dec
out
loopne
add
popf
sbb
push
dec
rep
lds
push
sub
cmc
repz
stos
mov
add
fnstenv
ret
lds
push
lods
testl
pushf
loope
and
popw
xchg
push
ljmp
jne
aad
out
xorl
mov
faddp
pop
jmp
and
fbld
outsb
das
inc
aas
mov
or
in
pop
bound
rclb
jo
rol
dec
fdivl
mov
mov
mov
pop
ljmp
jae
rcrl
call
sub
jecxz
inc
nop
dec
out
outsb
pop
fdivs
push
add
dec
cwtl
pop
aad
out
in
mov
stc
andb
cmpsb
dec
push
icebp
loope,pn
or
fcom
dec
scas
or
or
mov
lret
call
xchg
dec
int3
jecxz
push
xor
lds
int
shlb
or
pop
sub
ret
jns
outsl
inc
push
mov
mov
jnp
mov
rcrl
xchg
repz
in
sub
dec
push
xor
mov
lret
jge
mov
push
test
mull
and
insb
push
lret
les
and
in
or
jecxz
std
push
or
rcrl
js
movsb
mov
cld
fiadds
cmpsb
int3
cmc
jg
hlt
jp
aad
bound
sub
fidivrs
rolb
xor
push
lock
jmp
push
jbe
pop
pop
ljmp
fcompp
aad
push
dec
andb
imul
lods
cmc
mov
insl
mov
and
aad
cmpsl
ret
js
inc
std
mov
sarl
bound
js
adc
test
ret
ret
push
xor
push
mov
jb
or
daa
in
sbb
add
rol
and
mov
inc
cwtl
cmp
push
dec
dec
pop
test
hlt
imul
and
jbe
hlt
pop
and
hlt
test
mov
add
push
imul
sbb
insb
ds
adc
clc
add
fsubrs
push
cmpsb
xchg
mov
xlat
lea
jb
pop
pop
jno
bound
andb
shlb
out
mov
icebp
or
adc
insl
push
push
icebp
shlb
test
adc
lds
insb
pop
icebp
adc
aaa
xchg
sub
push
sti
call
fstl
adc
pop
movsb
repz
add
add
stos
pop
xor
mov
fwait
sub
ret
pop
push
push
icebp
cmp
popf
adc
jo
cld
sbb
cmc
aaa
jae
loop
mov
add
insb
shl
nop
inc
push
pop
fisubl
mov
roll
xlat
in
mov
in
clc
mov
outsb
data16
inc
fwait
mov
pop
das
pop
mov
adc
adc
and
sahf
jae
out
fisubl
ja
dec
insl
repz
xor
ds
arpl
add
jo
stc
mov
ficompl
testb
mov
adc
pop
test
pop
dec
cmp
sbb
outsb
leave
rolb
adc
sub
in
push
orb
lret
jmp
popa
iret
mov
push
and
jmp
xchg
cwtl
lods
cwtl
test
or
mov
sub
out
mov
out
adc
lods
outsb
test
inc
mov
shll
jg
ret
dec
dec
sub
insb
dec
xorb
in
pop
andl
test
call
scas
loope
dec
mov
mov
int
test
pop
cld
dec
jmp
imul
xchg
fisubl
xchg
aad
sahf
mov
sbb
xor
add
pop
arpl
and
sub
cmpsb
stos
outsb
inc
sarl
jl
out
fucom
add
cmp
dec
sub
sub
mov
and
dec
in
lods
andl
aaa
xchg
and
and
ret
gs
add
pushf
sub
sti
mov
adc
jp
lret
test
in
mov
adc
in
fsubr
or
dec
dec
mov
test
dec
push
lds
icebp
mov
lods
sub
insl
cmp
inc
push
test
stc
jbe
insb
roll
jb
push
dec
in
shl
lcall
loop
mov
inc
pop
gs
icebp
les
jno
into
dec
insb
adc
std
insl
mov
jecxz
mov
mov
add
and
lock
jmp
dec
xchg
jl
xchg
mov
ret
and
stos
lea
stc
dec
data16
mov
lds
cli
lret
inc
jecxz
aam
push
pop
repnz
fisubrl
push
xor
scas
or
call
clc
push
arpl
jmp
sti
cmpsl
push
mov
xchg
xor
std
mov
dec
dec
or
push
cs
movsb
pop
xor
out
xor
fs
pop
icebp
and
movsl
jmp
dec
push
jge
mov
dec
aad
inc
adc
out
inc
adc
cmp
loope
jbe
stos
je
push
jle
xchg
pop
mov
int3
stc
dec
pusha
stc
es
sbb
mov
lods
mov
repnz
pop
aaa
in
mov
push
pop
xchg
icebp
test
imul
inc
inc
inc
or
mov
xor
movsl
and
insl
insb
in
cmp
xor
shlb
inc
mov
xor
int
daa
mov
xchg
adc
push
repz
push
arpl
lods
imul
inc
sbb
fcmovu
mov
jge
leave
loop
add
shl
sub
inc
xor
push
inc
bound
pop
data16
sbb
inc
xor
fs
lea
cmp
arpl
cmc
sub
lock
int3
out
dec
mov
xchg
out
ljmp
add
popa
push
fwait
ret
jbe
mov
inc
push
dec
mov
fucom
or
test
inc
les
cwtl
stos
mov
cld
insb
popf
hlt
out
push
add
sbb
popf
iret
mov
bound
ds
mov
dec
or
and
inc
push
out
data16
push
test
popf
pop
mov
jbe
shlb
inc
adc
ret
in
or
fidivrl
inc
enter
jns
loope
mov
or
jns
dec
scas
cmp
push
xor
lret
test
jle
pusha
aas
ljmp
int
pause
in
pop
lret
popf
insl
lahf
pop
jnp
or
inc
cmp
lea
std
mov
sarb
mov
push
test
mov
sub
addl
pop
pop
rcll
iret
xor
adc
ret
test
and
std
xchg
cmp
loop
dec
cmp
cmc
jecxz
dec
ret
mov
pop
inc
cmp
jne
mov
xchg
enter
push
enter
sub
divb
jmp
jne
movsl
in
xor
iret
sbb
lods
hlt
aas
fsubl
inc
imul
outsb
daa
sub
leave
pushf
lahf
push
aam
test
fstl
and
es
insb
jg
mov
jb
and
jp
push
in
in
les
lret
xorb
fst
adc
adc
pop
call
xchg
push
aad
jne
jne
repnz
add
das
push
sub
pop
push
inc
daa
add
add
cmp
xor
aas
hlt
push
orb
mov
push
and
mov
xor
movsb
mov
imull
jecxz
mov
out
mov
jp
pushf
push
jae
or
mov
inc
lds
inc
sub
pop
jge
imul
and
or
mov
and
sub
xchg
jb
and
pop
movswl
aas
ficoms
ss
xchg
in
and
loop
cs
or
ja
jae
in
mov
out
fimull
push
mov
push
dec
fisubrl
cltd
cwtl
js
sahf
or
inc
cmc
shrl
mov
cmp
frstor
mov
jbe
subb
pop
inc
daa
mov
cli
cmpl
shl
push
and
jnp
xor
jne
fwait
bound
shrl
test
jno
push
xchg
push
andl
pop
pop
mov
pop
lds
mov
push
pop
adc
fisubl
fsubrp
lds
movsb
xor
or
and
icebp
outsb
dec
add
inc
outsl
aaa
mov
test
and
and
lret
test
xchg
fistpl
sbb
andl
push
clc
jb
out
pop
xchg
xor
mov
dec
inc
jp
dec
dec
cmp
jns
cmp
out
mov
test
ss
sub
dec
rorb
cli
addr16
fdivs
jbe
out
dec
cwtl
mov
in
sbb
dec
jb
enter
je
jle
adc
ret
adc
pop
clc
stc
loope
bound
frstor
cmp
jno
or
repz
aaa
mov
sbb
adc
shlb
je
mov
aad
idivl
cmc
or
or
sahf
fstpl
arpl
ljmp
out
js
fldl
mul
pop
ds
mov
cmp
dec
cs
lret
sub
clc
pop
mov
add
cmp
adc
jns
outsb
icebp
cmp
jns
mov
cld
sbb
loope
jne
push
dec
pop
imul
cmp
lret
test
pop
xchg
sbb
fcomps
test
jmp
jno
je
push
dec
ficomps
out
jno
ljmp
mov
inc
jbe
lods
pop
push
ljmp
add
es
cld
loope
add
ljmp
fdivrs
mov
pop
addr16
gs
and
jo
mov
popf
rolb
mov
inc
jl
je
pmullw
in
in
push
add
sub
jnp
or
pop
xor
lock
xchg
mov
cwtl
sar
cmp
test
push
inc
jno
or
pop
inc
fwait
inc
hlt
and
inc
je
sbb
mov
cmc
loope
jae
dec
imul
leave
cmp
jb
daa
push
ljmp
mov
idivl
mov
movsb
jns,pt
jno
shll
imul
push
dec
clc
sub
sub
hlt
or
lret
add
push
and
dec
inc
fldenv
arpl
jno
fnstenv
mov
xor
dec
into
jns
movsl
sbbl
ret
dec
or
cmpsb
xchg
pusha
xchg
add
inc
fcoml
ss
jg
inc
mov
shlb
pop
cli
fldl
lret
mov
fisttpl
ds
in
mov
sbbl
xor
cmp
mov
xchg
xor
cltd
cli
add
ret
fiadds
sahf
les
ret
push
fisubs
xchg
ret
pop
xor
arpl
insb
jo
subb
dec
loopne
mov
stos
inc
insl
and
out
js
mov
mov
jne
add
xchg
jl
int3
or
cmp
mov
mov
iret
test
cmp
fwait
add
sahf
jge
xchg
popa
cmp
daa
jae
imul
jb
insl
or
adc
insl
push
xor
jns
loope
aam
xchg
lods
pushf
movl
in
call
int3
cmp
push
stos
les
jo
je
or
push
nop
inc
out
mov
lret
sub
pusha
sub
jl
rcr
shr
mov
lcall
movsl
jge
mov
lcall
repnz
jp
loopne
ja
dec
enter
movsl
inc
jmp
cltd
popa
jl
fwait
dec
mov
ja
leave
jo
test
hlt
sahf
jl
inc
push
adc
push
insl
pop
inc
xor
cs
pop
mov
pushf
sahf
push
insl
popa
mov
and
sti
test
inc
bound
cwtl
pop
sub
fwait
mov
and
xor
mov
insb
mov
jle
movsb
pop
jb
or
cmp
sbb
insl
xlat
add
shll
cmpsl
or
add
sar
fwait
scas
icebp
pop
mov
xlat
scas
push
mov
and
push
pop
xor
fsts
adc
xor
jns
sub
mov
jne
mov
push
mov
notb
loopne
sbb
push
mov
dec
inc
cmp
repnz
testb
test
push
push
movsb
inc
sub
ljmp
jecxz
mov
mov
mov
enter
pusha
xor
sbb
jecxz
mov
insl
inc
pop
dec
dec
shlb
xorl
rcrl
sbb
fdivrs
fidivl
cld
mov
pop
bound
ss
xor
cltd
rorl
xchg
add
cmp
mov
sbb
jae
or
in
stos
cwtl
test
xor
js
pop
fisubl
inc
inc
stos
ja
sub
or
insl
imulb
mov
shrl
aad
push
outsb
jge
lds
call
mov
lcall
rcrb
adc
hlt
lea
xchg
dec
xchg
in
sbb
and
outsl
iret
cmovno
nop
xlat
mov
sbb
outsb
mov
mov
pushf
jmp
jbe
mov
jp
leave
add
inc
das
aaa
inc
jle
hlt
push
pop
cmpb
inc
ljmp
sbb
movsl
sbb
inc
aam
es
jnp
mov
pop
fwait
xchg
xchg
mov
mov
adc
cld
scas
pushf
mov
cld
mov
push
inc
repz
pop
out
sbb
inc
gs
xchg
pop
addb
cmp
test
loop
aas
bound
push
sti
fidivs
imul
jg
call
pop
sbb
fidivl
scas
push
jl
pushf
ret
inc
daa
cmpsb
mov
inc
pop
stos
mov
jo
inc
out
adc
cld
xchg
mov
fcompl
and
cmp
imul
call
std
jmp
fisubrl
sbb
repnz
jecxz
inc
test
insl
sbb
inc
push
mov
imul
in
pop
imul
ss
test
ds
jb
xacquire
rcrl
xchg
cmpsl
jg
mov
pop
scas
xor
int3
mov
inc
enter
in
push
or
cmp
sub
mov
bound
int
add
loope
pop
and
jb
arpl
mov
insl
xchg
pop
and
jne
lock
fucomi
or
lea
adc
sbb
add
fs
xchg
jne
loop
push
add
cmp
sti
push
jne
test
cmp
dec
pusha
adc
lds
lahf
mov
xlat
icebp
sar
cmpsl
or
int
mov
jae
scas
mov
in
cmp
jae
push
cs
cli
stos
cmpsb
test
jp
fstps
add
cmc
aam
rorb
add
stos
dec
arpl
cmp
jb
inc
fcmovb
jno
jne
mov
mov
mov
fidivrl
mov
les
int3
int
std
xor
aad
and
mov
insb
negl
mov
mov
enter
xor
adc
gs
dec
cltd
int3
and
jae
hlt
jmp
push
mov
es
sbb
sub
shl
mov
call
sub
push
imul
imul
dec
movsl
sbb
push
mov
movsb
mov
xchg
xor
outsb
push
inc
push
aaa
pop
pmaxub
and
int3
orl
aad
lahf
lret
pop
jp
movsl
repnz
movsl
hlt
movsl
insb
popa
sub
mov
das
push
or
or
in
popa
mov
insb
dec
push
fadds
cmp
std
popa
and
push
jl
aad
sub
sbb
xchg
sahf
sub
add
jl
mov
lods
scas
bound
push
scas
mov
jmp
xchg
dec
cmp
cli
popa
xor
mov
jecxz
sub
fs
scas
or
sbb
gs
lock
sub
test
xchg
push
pop
jns
cmpsl
or
cmp
shl
imul
inc
sahf
or
add
loop
push
addb
roll
icebp
pop
mov
mov
xchg
shrl
stos
pop
lods
clc
cmp
push
mov
jmp
ja
outsb
pop
push
inc
mov
loope
push
les
jecxz
into
push
icebp
add
fs
push
jo
push
arpl
out
jne
ss
insl
jmp
je
sbb
adc
push
push
push
rclb
or
outsl
gs
mov
shlw
add
dec
data16
gs
bswap
movsl
mov
mov
movb
jmp
adc
stc
inc
leave
dec
jne
das
xor
ret
loop
mov
aad
xchg
add
orb
pop
outsl
xchg
cli
repnz
fcmovu
shll
inc
jae
lsl
inc
xchg
mov
enter
in
xchg
push
push
sub
jae
adc
jecxz
imulb
or
fldenv
pop
mov
aam
into
add
dec
inc
lcall
and
push
sahf
int3
push
cmp
pop
bound
mov
ret
or
ja
add
inc
lret
push
aad
out
out
push
mov
lret
outsb
pop
and
inc
je
cmc
sbb
scas
mov
xchg
xorl
jno
das
aam
lods
push
int3
xor
leave
mov
adc
xor
and
ja
enter
iret
push
test
inc
jne
mov
mul
stc
aas
mov
mov
lods
lea
cmp
xor
xor
insl
aad
lods
lock
fsub
pop
add
insl
ret
push
imul
pop
jo
stos
jl
cwtl
mov
jle
cmp
nop
push
jns
mulb
repz
mov
mov
movhlps
int3
in
scas
xor
je
cmc
fildll
rcll
addl
cmc
mov
lds
add
les
push
adc
lods
push
popa
andl
or
std
and
sub
adc
bound
push
adc
pop
pop
cmp
into
mov
mov
out
popf
inc
in
mov
lock
mov
clc
aaa
and
mov
mov
mov
imul
sub
push
push
jo
repz
push
in
pop
or
mov
pop
push
dec
ret
es
loopne
ss
cmp
sti
inc
xor
lods
jne
add
xchg
in
loope
dec
xchg
repz
sub
frstor
jb
mov
cmp
mov
imul
frstor
cmp
mov
and
adc
sub
popa
add
pushf
out
sbb
test
push
ljmp
pop
xchg
or
jmp
cli
or
or
ret
or
pushf
fwait
xor
fdivrl
mov
sub
loopnew
push
mov
repz
jne
or
jmp
fidivs
pop
pop
mull
and
push
aam
stos
adc
jbe
sub
xlat
push
or
aaa
adc
fldl
fdivrs
pop
fidivs
push
lea
mov
sbb
scas
pushf
push
push
inc
push
mov
loop
mov
xchg
imul
inc
icebp
loope
mov
loope
mov
xchg
add
fisttps
test
fucomp
repnz
cmp
jecxz
popf
or
cmc
cld
sbb
dec
xchg
jne
adc
jns
insb
dec
mov
dec
adc
mov
stc
sti
sub
lods
in
pop
push
clc
xchg
ds
pop
fiadds
push
mov
mov
or
mov
leave
call
leave
push
jae
cs
mov
sahf
add
push
out
jne
xchg
lods
jg
movsb
push
dec
mov
imul
fs
lock
and
scas
mov
mov
push
std
add
dec
std
jns
or
push
lahf
sti
ret
in
sub
xor
js
aaa
mov
jecxz
xchg
inc
xlat
inc
mov
and
cmp
push
sub
jmp
and
mov
mov
ret
mov
pop
push
and
pop
mov
and
sbb
mov
mov
lock
mov
mov
popa
stc
adc
pop
xor
aad
mov
mov
clc
leave
mov
movsb
adc
mov
movsb
cmpsl
outsl
cmp
inc
je
sbb
sbb
iret
cs
cmp
in
sub
shrb
mov
mov
push
fmulp
cmpsb
push
mov
bound
jp
sbb
mov
negl
fisubrl
out
pop
xchg
loop
stos
and
cld
sbb
div
mov
and
gs
sbb
jp
pop
push
mov
div
push
mov
xlat
xchg
add
aam
mov
scas
das
inc
mov
adc
stos
pop
inc
mov
negb
add
sahf
pop
stc
cltd
insl
mov
push
mov
xor
mov
cmpsb
int3
pop
popf
xchg
hlt
xor
inc
sahf
pop
shlb
adc
enter
dec
das
mov
loop
xor
add
jne
jle
in
bound
cmp
int
xchg
test
adc
mov
aaa
lock
lret
dec
push
cmp
orb
dec
ja
loop
int
fwait
daa
inc
out
inc
je
jnp
sub
sbb
js
sbb
mov
sbb
outsb
icebp
jae
cmpsl
iret
lret
fnsave
sub
and
imul
in
repnz
testb
lods
cmpsl
adc
jnp
jp
repnz
popa
popa
arpl
jne
orb
xor
icebp
aaa
in
std
sbb
push
fmul
js
push
repnz
jmp
stc
imul
dec
stos
sbb
and
mov
xor
sbb
push
mov
aad
lods
ja
lds
mov
js
xchg
cmp
xor
xor
push
pop
outsb
sbb
sbbl
fisubrs
je
pop
mov
xchg
mov
iret
out
sbb
dec
adc
cmpsl
iret
push
out
mov
and
aad
mov
inc
out
aaa
insl
dec
pop
cmc
cs
jo
lock
add
call
mov
popa
cs
stc
ret
mov
xchg
mov
inc
fsubrs
jo
inc
pop
js
jmp
xchg
or
mov
push
or
cs
iret
cmpsl
jl
adc
stos
inc
dec
xchg
out
pushf
cmp
xor
dec
xchg
or
add
ret
aad
aaa
add
cltd
inc
dec
andl
fidivs
pusha
or
data16
lods
pop
jbe
sub
and
out
in
inc
mov
lods
mov
or
insb
dec
ret
xchg
in
jmp
jle
mov
inc
jbe
mov
in
xorl
jmp
and
xchg
fs
fsub
stos
in
mov
insl
fldl
mov
cmc
mov
repnz
iret
out
pop
sbb
std
scas
xor
xchg
adc
push
pop
or
dec
push
fiaddl
andb
test
inc
push
test
mov
sbb
les
pop
adc
cmc
pop
sbb
scas
cmp
mov
into
imul
bound
pusha
xlat
pop
inc
sbb
cwtl
adc
in
adc
stc
mov
scas
pop
mov
add
push
and
lock
jne
movsb
ljmp
in
sbb
loop
mov
push
shlb
enter
push
sub
fimuls
xchg
or
xchg
and
xchg
pop
push
fmull
dec
lock
inc
add
fwait
roll
mov
loope
arpl
les
ret
lods
inc
or
popa
add
fdivrs
adc
inc
gs
push
pop
jnp
test
xor
in
rcrb
inc
mov
lret
jne
dec
jae
bound
mov
sbb
push
and
dec
ss
cli
cmp
popf
mov
pop
cmpsl
pop
cmpsb
scas
daa
or
in
mov
imul
xchg
movaps
rcll
ffree
inc
jl
je
ja
cltd
dec
pop
in
sub
data16
scas
jp
xor
aad
mov
add
jle
cld
xchg
repz
call
pop
or
pop
xchg
je
out
inc
adc
mov
pop
mov
jecxz
aad
and
popa
jmp
scas
out
mov
mov
clc
jae
popf
sub
insb
pop
cmc
pushf
popf
jns
mov
inc
pop
pusha
mov
mov
jmp
cs
cmpsl
mov
pop
int
xor
ret
inc
cwtl
xchg
adc
pop
das
cmp
mov
mov
dec
fxch
xor
jb
fstl
jno
cmp
repnz
lcall
leave
ret
mov
insb
xlat
cmpsw
adc
jg
stos
lods
in
xor
sbb
mov
add
rcll
add
repnz
divb
pop
cmc
cmp
movsl
pop
lret
mov
mov
and
fdivrl
xor
or
hlt
xlat
push
in
jns
jl
dec
xchg
movsl
and
or
sbb
aaa
mov
ja
sbb
mulb
push
xlat
pop
inc
cmp
sub
scas
pop
test
leave
sub
xor
jge
pop
leave
cld
sahf
push
mov
mov
dec
lods
mov
test
mov
mov
test
sarb
dec
stos
out
sahf
mov
pushf
fildll
fcomps
jmp
outsl
xchg
jp
add
adc
popa
cltd
jmp
repz
xchg
cmc
out
stos
je
nop
cld
xchg
sub
mov
ds
leave
outsl
xchg
or
push
push
pusha
add
pop
into
inc
pop
mov
fld1
mov
bound
test
cs
xor
in
lock
sbb
mov
cmp
int
push
mov
and
inc
lahf
xlat
outsb
rcrb
push
mov
dec
xlat
ret
or
mov
sbb
popa
movsbl
cmc
fiaddl
pop
lea
xchg
push
je
shll
lods
jmp
stos
das
mov
mov
add
and
les
pop
pop
ja
xchg
aad
inc
adc
aad
sub
or
int
dec
sub
pop
push
add
adc
xor
mov
xlat
movsb
adc
mov
mov
push
dec
jmp
jno
mov
add
cmp
popf
cwtl
dec
inc
in
fmulp
std
cmp
cmc
lods
ljmp
inc
rol
and
mov
jle
xor
jne
and
stc
cs
jnp
mov
fisttps
enter
sub
in
sub
filds
jmp
add
cmp
daa
or
cmp
lods
add
pop
cmp
sbb
jne
popf
mov
xchg
pusha
inc
sarl
and
jecxz
mov
jo
xlat
xlat
jmp
dec
leave
and
imul
push
adc
jmp
push
lret
fst
bound
fdivp
jno
cmp
push
data16
mov
adc
into
jae
leave
ja
sbb
movsb
add
pop
cmp
adc
ss
lds
es
jne
jae
jno
fs
mov
mov
ds
in
out
aam
adc
lods
inc
and
sbb
int
mov
std
sub
sti
or
repnz
test
add
movsb
sbb
int
aad
in
pushf
xor
pop
lock
push
xchg
push
in
push
push
mov
insl
xor
pop
lret
hlt
out
sahf
sub
dec
cmp
push
lods
inc
hlt
adc
aaa
adc
mov
sti
daa
icebp
mov
mov
pop
sarl
or
mov
adc
stos
rcrl
sti
push
stos
mov
cmc
inc
ljmp
add
push
rcrl
stc
and
dec
rcll
loope
xchg
dec
push
add
pop
into
loop
sub
xchg
in
test
sahf
xchg
xchg
fstpl
mov
test
stos
jne
nop
imul
cmc
lret
mov
pusha
imul
push
aad
cltd
inc
in
lahf
mov
cmc
or
adc
cs
lock
mov
jne
js
add
setle
outsb
jg
repnz
push
jne
mov
out
push
iret
aaa
mov
mov
rcll
xchg
test
and
stc
jmp
mov
mov
popf
push
mov
jbe
jno
dec
loop
fs
rorl
jg
cmp
aad
cld
jb
sti
aam
dec
ffree
xor
cmp
push
adc
test
andl
leave
mov
into
lret
push
movsb
and
dec
sbbl
ljmp
pushf
push
addr16
jbe
out
adc
aam
je
push
cmc
movsl
addb
fidivrl
scas
xchg
push
adc
callw
mov
mov
daa
mov
pop
int
test
sbb
scas
sbb
fildl
cmpsl
dec
push
or
lods
ss
xchg
xor
cwtl
movsb
pop
lret
dec
xchg
loop
nop
ret
ret
cmp
dec
add
sbb
dec
icebp
cmp
sbb
cmpsb
aam
outsb
aad
jl
jb
add
popf
pop
dec
sbb
cmpsl
aas
lea
mov
in
push
mov
dec
movsb
or
mov
and
mov
jg
in
stos
adc
fidivs
xor
in
and
ja
dec
in
and
push
xor
aad
jno
sahf
loope
cmp
or
outsb
pop
fsubl
jbe
xor
pop
stos
jb
mov
stc
lret
xor
dec
sub
and
cmpsl
xor
jo
pop
clc
push
pop
out
lock
add
sti
test
dec
mov
pusha
addr16
dec
mov
je
sub
mov
icebp
scas
push
loope
jbe
sbb
dec
or
cmpsl
push
inc
ret
mov
mov
jne
xchg
pop
sub
mov
bound
sahf
inc
jmp
jge
pop
icebp
inc
fucomip
les
sahf
fisubl
fwait
xor
push
dec
aaa
insl
pop
xorl
mov
xor
inc
inc
push
mov
cld
jns
sub
rcrl
lret
stos
in
sbb
sub
imul
fdiv
or
cld
jns
daa
and
lock
fsubp
in
cmp
mov
loop
inc
sub
push
hlt
out
sub
mov
dec
fwait
mov
or
push
lds
inc
jle
shrl
inc
outsl
mov
sbb
inc
inc
adc
push
xor
cmpsb
lds
dec
sahf
int
inc
icebp
push
mov
adc
stc
les
stos
addr16
mov
cmp
pop
pop
repz
jno
inc
add
sbb
popf
leave
lahf
aad
push
lahf
enter
push
inc
inc
inc
arpl
pop
or
ret
add
xchg
xorl
mov
xchg
mov
jmp
push
xlat
pop
cmpsl
shll
or
push
and
mov
andl
dec
dec
jg
movsl
add
inc
push
movsl
movl
js
icebp
lahf
into
loop
mov
pop
sub
sar
mov
mov
fildll
sbb
inc
mov
lret
mov
inc
mov
mov
stc
lcall
lea
sbb
faddl
fistpl
ret
loopne
inc
pop
in
inc
jmp
outsl
mov
rdpmc
cmp
pop
out
dec
cmp
sar
add
hlt
mov
shrb
xor
ljmp
int
loop
leave
push
jbe
lea
addr16
xchg
push
insb
xor
cmc
sahf
call
das
cmp
outsb
lcall
outsl
cmpsl
jmp
pop
cmp
mov
gs
adc
stos
xor
mov
int3
ljmp
mov
in
adc
out
psllw
sbb
ds
mov
adc
addb
cli
scas
jno
ds
loope
mov
sbb
xchg
sti
dec
mov
mov
mov
enter
jp
dec
xchg
pop
push
inc
and
push
dec
xchg
jns
hlt
jne
mov
imul
cmpsl
movsl
aam
loop
xor
jno
push
pop
inc
push
movsl
add
ljmp
dec
add
xchg
pop
add
mov
stos
test
xor
lret
add
mov
ja
scas
pop
or
sub
cmpsb
cmp
cli
daa
push
mov
mov
xchg
xchg
ljmp
jne
mov
sbbb
sub
push
mov
cmp
test
dec
stc
jle
lret
vpand
mov
stos
sub
xchg
and
scas
call
sub
stos
jne
mov
mov
and
lods
dec
cld
cli
in
int
mov
sub
bound
xlat
lds
xchg
aad
int
mov
shll
mov
add
loop
cmc
addr16
cmpsl
aaa
out
test
cld
sbb
in
lods
pop
inc
pop
cld
jge
es
cli
adc
mul
jl
std
dec
movb
mov
stos
test
in
jmp
lcall
cli
into
out
ficoml
xor
xchg
andl
xor
mov
inc
fisubrl
inc
lods
cwtl
fistps
test
pop
out
mov
mov
lods
and
dec
mov
mov
in
cmc
mov
nop
fs
icebp
es
es
sub
mov
insl
sti
testb
leave
and
xor
xor
mov
mov
sarb
sbb
fsts
cld
lret
mov
jecxz
in
mov
loope
fisubrl
xchg
dec
ficoml
cs
lcall
js
fdivr
mov
movsl
add
adc
out
sti
cwtl
mov
jo
lock
inc
cmp
add
push
cmc
das
cld
mov
iret
loop,pn
out
fcmovu
jns
lret
aaa
jg
xor
lods
subb
jp
out
pop
xchg
mov
xchg
mov
out
outsl
rcrl
ret
add
mov
fisubl
xor
std
hlt
ja,pn
lods
mov
xor
xor
in
or
jge
into
add
sbb
insb
sahf
jl
andb
cmp
and
cmp
mov
cli
ja
loop
push
icebp
mov
xchg
mov
xchg
mov
add
adc
out
or
lret
push
mov
mov
aad
shr
ja
sub
pop
lods
daa
push
mov
mov
add
push
mov
mov
pop
jg
stos
stos
xchg
imul
inc
stos
jbe
movsl
xchg
das
xor
fstl
xchg
jno
jae
es
mov
leave
or
lcall
xor
mov
xchg
jle
mov
mov
and
adc
mov
add
lock
sub
xchg
test
sbb
jge
cwtl
add
sub
xchg
mulb
mov
loope
les
pushf
repz
and
and
enter
fsubrl
cmpsl
push
inc
jns
scas
mov
repnz
jno
mov
mov
or
loopne
pop
fsubs
lds
fwait
insb
mov
mov
push
mov
inc
sub
cmp
mul
and
jb
cwtl
hlt
dec
inc
out
add
in
push
sub
sub
shll
inc
addb
repz
jecxz
cmp
loop
xchg
std
movsl
pushf
xor
mov
sub
push
out
loop
in
pop
or
fidivrl
and
pmaxsw
or
dec
out
imul
inc
and
jle
dec
xchg
xchg
stos
xchg
in
sub
jo
daa
mov
test
or
js
scas
xchg
jg
mov
ret
dec
repz
cmp
mov
push
mov
push
xor
add
dec
pusha
xor
pop
mov
mov
add
push
pop
lcall
cwtl
pop
sbb
cld
loopne
add
sbb
ja
out
xor
cld
movlps
fdivr
mov
and
jnp
out
and
mov
icebp
xor
inc
jge
inc
mov
int
mov
push
xchg
decl
xor
push
sub
mulb
pusha
movsl
ret
mov
imul
pusha
pop
lahf
test
orb
out
js
pop
inc
adc
or
imul
loopne
arpl
in
mov
std
jp
inc
rcl
pop
fldt
xchg
pop
scas
xchg
add
xchg
jne
stos
aad
icebp
mov
repnz
mov
jne
inc
rolb
daa
mov
push
cmpsl
add
mov
push
cmpsl
push
dec
das
cltd
in
inc
add
popf
push
and
mov
xchg
in
cmp
pop
popaw
xchg
xchg
call
outsb
repz
or
cld
mov
aad
adc
mov
lcall
dec
lds
mov
inc
icebp
mov
insl
pop
adc
int3
andl
mov
inc
cwtl
cmp
push
imulb
or
jo
mov
stos
pushf
in
jno
loope
mov
adc
or
push
push
fwait
lret
pop
out
repnz
xchg
shl
fdivl
mov
out
loop
sahf
mov
inc
std
mov
sahf
push
and
or
adc
dec
lcall
test
pop
clc
jb
inc
sub
scas
push
mov
cmp
jp
inc
mov
loopne
add
fwait
adc
lret
pushf
mov
js
repz
in
ds
in
xor
xor
loopne
or
cltd
hlt
mov
mov
dec
mov
or
popf
pop
inc
lea
pop
aad
and
arpl
fldcw
push
push
xor
js
sbb
or
aam
aas
sbb
ja
test
sub
icebp
cmp
outsb
push
js
nop
mov
mov
or
xor
xor
aam
push
or
lret
mov
cmpsl
in
data16
ds
pusha
arpl
xchg
mov
xor
sub
bound
sub
int3
adcl
cmp
and
mov
mov
mov
fdivr
sbb
mov
scas
in
nop
xor
mov
stc
call
pusha
daa
testb
fucomi
sbb
je
outsl
cwtl
sbb
lds
jl
mov
adc
and
push
push
out
das
iret
idivl
in
push
loope
mov
ja
cltd
push
stos
scas
lds
repz
mov
jb
mov
push
mov
rcrb
adc
cmpsl
inc
lret
sbb
jae
popf
pop
or
and
dec
cmpsl
mov
test
fimuls
leave
xchg
mov
inc
popf
inc
adc
inc
inc
ret
adc
cmp
testl
push
insl
sbb
das
sub
ja
std
test
imul
pop
push
shrl
mov
loop
push
aas
stos
ret
pop
aaa
jb
and
pop
xchg
call
adc
xchg
dec
adc
pop
cli
ret
jecxz
aad
mov
xchg
mov
test
jno
repnz
jb
adc
adc
sub
ljmp
ret
add
jle
and
pop
mov
jl
mov
xchg
xchg
jmp
in
sub
stc
lods
and
rdtsc
lcall
pusha
lds
mov
rorl
inc
ret
xchg
add
mov
mov
lea
in
je
jno
pop
mov
out
cmp
sub
push
ret
ss
mov
cld
dec
movsl
jmp
add
jge
mov
or
out
xor
or
rol
movsl
aad
and
mov
pop
mov
stc
pop
sub
cmp
sub
mov
leave
fisubs
lds
add
mov
push
jo
add
mov
dec
xchg
cmp
adc
in
push
push
data16
sbb
mov
dec
es
mov
inc
and
scas
xor
shrl
test
daa
sub
inc
mov
insl
mov
lret
pop
push
dec
rcl
ss
cmpsl
adc
pop
pop
adc
movsl
cmpsb
or
dec
ljmp
mov
repz
xorb
pop
mov
sti
in
stos
ljmp
adc
test
cpuid
push
xor
in
call
daa
cmp
jmp
mov
push
adc
sbb
xorb
inc
fnstcw
add
stos
inc
push
jno
mov
jbe
adc
cmpsb
adc
cmc
dec
sub
movsl
push
cli
int
jge
sahf
mov
int
aas
jb
xchg
cmp
xchg
dec
or
sbb
out
jecxz
test
scas
call
jge
mov
outsl
stc
repz
mov
sbb
mov
pushf
or
lret
fistl
jge
add
sub
in
cltd
vphadduwd
roll
repz
stos
xor
jno
movsl
push
clc
dec
cmc
push
aam
sbb
xor
stos
fsts
inc
es
stc
xor
mov
lcall
add
stos
sub
sbb
rcrb
stc
enter
sub
push
inc
out
cld
add
test
int
ljmp
lret
mov
pusha
ds
lea
fst
mov
sbb
adc
dec
xchg
lret
push
cs
xchg
jp
rcll
add
adc
add
mov
lret
das
mov
pop
mov
xchg
mov
faddp
push
or
cmp
movsb
movsl
jb
mov
adc
popf
add
stos
fwait
mov
mov
xchg
testl
or
jae
jb
jo
in
push
lds
push
jbe
push
std
lds
push
dec
and
fmuls
sbb
addb
dec
jle
lea
lret
or
cld
cmpsb
out
mov
xchg
popf
pop
jp
jmp
fldenv
adc
mov
push
adc
push
and
jo
adc
in
loop
or
adc
setb
js
ficompl
jp
aad
lahf
mov
loop
jbe
mov
jp,pt
jne
jmp
push
xchg
push
lret
sbb
icebp
xchg
popa
jbe
fadd
jnp
sbb
mov
js
mov
jp
adc
and
fs
cltd
es
lds
ret
sub
cmp
loopne
hlt
xor
or
dec
fsubs
lahf
shrb
fsubl
mov
into
jmp
arpl
and
arpl
jge
push
in
add
sub
fstp
and
out
xchg
pop
into
bound
lahf
jecxz
popa
nopl
push
fnsave
es
cwtl
adc
cltd
lret
popf
pop
lods
jmp
push
jl
xchg
sub
adc
ficoms
adc
cs
mov
xchg
mov
std
ss
fstpl
js
fstl
mov
jnp
cs
jge
aas
loop
jo
mov
xor
mov
fsubrl
push
mov
popa
xchg
jp
xchg
mov
and
push
cmpsb
int3
cld
std
jp
jmp
mov
cmovo
xchg
inc
into
lahf
idivl
push
cmp
add
out
loope
neg
cmc
icebp
hlt
loop
cmp
les
adc
in
outsb
lods
shll
fs
in
iret
mov
and
dec
cmc
out
cmp
jns
cmpsb
mov
and
xchg
dec
jge
mov
xor
subb
lcall
in
dec
lcall
pop
outsb
sbb
mov
or
inc
shl
loope
mov
ljmp
xchg
add
mov
mov
and
scas
push
testb
lock
cld
sbb
push
sub
scas
or
jo
pop
cli
mov
inc
scas
jne
fists
mov
xor
xchg
sbb
sbb
push
add
int3
repnz
sbb
dec
insl
test
sbb
inc
xchg
arpl
mov
cli
pop
mov
aas
pop
jmp
and
shl
test
sbb
sbb
daa
roll
dec
cmpsl
lods
push
fs
out
test
aam
mov
push
arpl
jae
mov
in
test
lock
cmpsl
adc
add
xor
ss
ffree
inc
shrl
pop
frstor
int3
jns
dec
cwtl
scas
nop
jne
loop
icebp
jg
sbbb
outsb
mov
pop
jmp
lods
push
jle
push
es
imul
fadds
sbbl
iret
leave
sub
cwtl
mov
mov
jmp
sub
out
test
xchg
das
fcmovbe
jae
mov
in
inc
fimull
lea
mov
mov
clc
clc
mov
cmp
push
mov
bound
ficoms
mov
cmpsl
push
lcall
dec
clc
adcb
imul
cs
roll
dec
pop
lock
lock
mov
lret
jge
mov
and
fcompl
pop
into
icebp
push
imul
inc
loopne
call
mov
lods
test
fidivs
jge
mov
outsb
fwait
icebp
cmpsl
dec
shlb
out
jnp
ja
ja
adcl
clc
mov
ljmp
push
jmp
push
xor
cld
sbb
push
movsl
les
add
mov
lods
sub
push
fsubp
in
dec
mov
xchg
mov
push
pusha
cmc
xchg
or
and
das
lahf
xchg
and
sbb
jae
incl
ret
xchg
pop
xchg
adc
sahf
pusha
mov
pop
adc
clc
sbb
dec
jp
cmpsl
daa
and
outsl
aaa
and
xorl
xchg
dec
xor
jbe
sub
jecxz,pn
push
popf
shll
lret
sbb
xor
mov
cmp
repnz
xor
sbb
adc
popf
dec
in
ss
push
xchg
add
lods
or
cmp
xchg
adc
bound
cmp
sub
insb
jne
leave
les
pop
clc
mov
dec
neg
inc
push
cmpsl
iret
mov
js
xchg
decb
ss
pop
cmp
and
or
les
orb
sbb
lock
icebp
or
lret
sub
hlt
in
cmp
or
out
jp
mov
repz
js
or
mov
xchg
mov
dec
repnz
push
icebp
xor
test
jno
jne
mov
or
lock
xchg
mov
cmp
mov
dec
and
jmp
fisttpl
xchg
sbb
popf
mov
movsl
outsl
pop
fstpt
shll
enter
movsb
mov
imul
out
sub
lods
mov
pop
aaa
aaa
insb
jno
pop
and
fldl
aaa
xor
insb
sub
mov
xadd
xchg
jnp
popf
mov
cltd
sub
cmp
popa
mov
leave
jg
fwait
pop
lret
mov
pop
mov
mov
inc
adc
pop
je
mov
cwtl
movb
adc
test
adc
jmp
mov
shl
xchg
jns
xchg
lret
jne
lea
adc
enter
out
mov
push
cmc
ret
and
and
and
test
xchg
sub
les
sbb
cmpsl
pop
adc
sbb
mov
pop
push
adc
fidivrs
jno
push
cmp
or
jmp
in
push
neg
aaa
cmpsl
adc
rolb
mov
and
sub
out
lret
nop
cmpb
inc
jo
push
inc
mov
out
sbb
inc
or
aad
rcl
xor
pmaxub
adc
incb
rol
out
mov
xchg
push
fdivl
mov
pop
daa
sub
movnti
test
xor
mov
stos
xchg
jmp
pop
repnz
fstpl
popf
test
cmpsl
out
fcompl
es
xchg
xor
mov
pop
mov
cmp
in
scas
cmp
or
scas
test
insb
fcoms
ja
dec
int
and
mov
push
rcll
in
cld
mov
push
cmp
pop
std
jl
sub
push
test
pop
repz
cmc
fildl
inc
push
sbb
pop
inc
or
loope
xor
jae
dec
push
jb
fisttpll
bound
push
xorb
jecxz
hlt
orb
or
les
popf
cwtl
add
icebp
xchg
add
pop
movsl
jno
test
dec
push
repnz
or
sahf
mov
dec
cwtl
push
mov
push
xor
ret
dec
mov
das
xchg
and
frstor
push
in
jmp
pop
push
or
mov
xchg
mov
xor
icebp
clc
xchg
push
pop
or
fistpll
dec
scas
sahf
mov
insl
jns
shl
and
push
pop
cmp
adc
sub
or
jb
shll
inc
inc
aas
mov
push
cmc
jne
popf
and
pop
movsb
sbb
xorl
adcl
cmp
xchg
xchg
loopne
sub
inc
je
int3
adc
out
push
sub
pop
sbbb
mov
loop
xchg
insl
dec
sub
in
std
movsl
data16
mov
fsubs
int3
dec
sub
pop
mov
fxch
lods
int
mov
movsl
pop
icebp
pushf
fsub
inc
cmpsb
cmp
fsubp
je
fwait
mov
fnsave
movsb
mov
jl
leave
mov
push
leave
mov
lcall
pop
in
ljmp
imul
dec
enter
bound
sarl
test
adc
repnz
fs
inc
fisubrs
jo
outsb
mov
aad
or
jbe
dec
insb
ds
or
into
pop
or
es
orb
loop
cmp
cld
mov
je
test
mov
lods
xchg
fistl
loop
adc
push
hlt
cmpsb
js
jmp
push
dec
sub
es
fidivl
mov
shrl
inc
inc
jne,pn
outsb
add
sub
mov
ja
mov
add
mov
in
push
loop
fidivs
mov
push
imull
xor
push
push
fwait
cmp
adc
add
and
mov
ror
add
mov
jno
clc
push
inc
popf
enter
scas
orb
in
es
mov
lea
and
imul
scas
jb
fwait
sub
lea
aam
clc
mov
xchg
movsl
adc
ss
test
mov
rcrb
repnz
in
movsb
in
cmp
negb
popf
xor
add
es
sbb
mov
xor
or
std
mov
sti
in
push
and
jl
test
jp
inc
aam
cmpsb
loope
retw
and
pushf
outsb
fisttps
xor
loope
icebp
test
mov
adc
dec
sahf
int
sahf
ret
data16
or
push
push
cli
aad
testl
shl
shll
mov
mov
test
mov
rcll
cmc
mov
int
xlat
mov
clc
mov
cmp
xchg
repz
jbe
ja
sbb
mov
inc
mov
xchg
int
repz
daa
loope
adc
movsl
mov
mov
sub
mov
stos
cmp
scas
popa
or
fisubl
sub
mov
enter
xchg
pop
shlb
mov
mov
push
mov
push
ret
jbe
push
xor
jo
xor
insl
fidivl
sub
inc
cmp
mov
sbb
push
mov
subb
bound
mov
pusha
jle
nop
jle
cmp
push
cs
xor
test
test
negl
mov
cmc
pop
inc
enter
sbb
jecxz
loope
xchg
push
push
data16
fldcw
sub
repnz
outsl
push
bnd
cli
aad
lcall
pop
sbb
jb
pop
pusha
in
icebp
mov
mov
icebp
push
imull
orl
and
xchg
push
aaa
in
push
adc
push
icebp
and
or
mov
mov
call
in
stos
xchg
add
orl
xor
mov
fildll
scas
inc
imul
fisttps
add
mov
ficoms
dec
xor
out
push
insb
add
push
orb
pop
mov
hlt
mov
xchg
mov
loop
sti
inc
js
inc
sbb
lret
xchg
sub
or
xchg
movsl
loopne
stos
xor
xchg
lock
dec
sub
pop
icebp
iret
std
jmp
dec
shrl
hlt
pop
inc
jmp
mov
ret
pop
dec
pop
xchg
fimuls
mov
add
or
test
inc
imul
mov
sbb
sbb
lret
xchg
pop
xor
dec
push
xchg
sbb
inc
sub
xchg
mov
leave
pop
pop
out
xchg
sbb
sbb
insl
loopne
in
jmp
adc
push
jae
xorb
jns
int3
and
xorb
sub
fisttpl
inc
mov
cld
adc
dec
mov
sbb
mov
fucomp
in
daa
sbb
mov
jo
push
loop
push
mov
je
mov
xchg
adc
mov
xor
mov
adc
lret
lcall
mov
jbe
lret
add
insb
shlb
jg
mov
mov
int3
push
cmp
mov
xor
xchg
dec
rcll
std
iret
shrl
popa
xchg
bound
or
xchg
pop
nop
pop
hlt
or
pop
les
pop
cmpsb
insb
stos
scas
mov
insl
push
cmp
cmc
out
jmp
mov
je
mov
stc
jge
loope
adc
push
mov
divl
hlt
push
xchg
test
ror
subl
int
jne
mov
cli
out
and
push
enter
insb
lret
nop
dec
rep
les
mov
in
arpl
mov
pop
push
mov
aas
xchg
les
pushf
adc
add
addr16
cwtl
sarl
sbb
ficomps
lds
cli
add
sahf
das
sbb
js
mov
movsb
hlt
incb
cmc
ss
inc
sbb
mov
sub
cltd
sbb
jns
rorl
rcrl
daa
hlt
inc
jno
loop
cmp
rol
sub
cmp
les
sub
movsb
loope
or
inc
cli
fdivrl
fwait
out
in
jecxz
xchg
lods
js
test
in
lea
scas
mov
cmp
push
shl
cmpsb
leave
leave
jb
aas
and
push
inc
ret
dec
addr16
adc
jmp
enter
ja
imul
fldenv
rorb
std
bound
mov
push
mov
stos
xor
jl
mov
cli
adc
popa
sbb
push
add
pop
and
dec
jae
or
xor
xor
lret
stc
xor
mov
aas
lds
xchg
pop
and
jo
mov
lret
or
push
out
add
mov
in
jns
mov
movsl
pop
into
lcall
push
pop
jmp
in
jne
dec
cld
lods
dec
adc
popf
cmpsl
mov
mov
and
pop
adc
adc
out
icebp
leave
jl
push
add
les
mov
neg
out
test
add
loop
cmc
pop
cmpsl
ret
mov
sahf
in
dec
loop
loopne
ror
ret
sbb
mov
mov
fnstcw
lret
cmc
lods
jo
push
repz
in
ss
sub
daa
nop
xchg
pop
push
jg
add
fwait
jbe
mov
jl
ja
je
pushf
jge
clc
mov
or
sbb
arpl
sbb
mov
scas
cmp
inc
cs
lahf
cmp
mov
and
fisubl
ret
lds
fs
fwait
lds
insl
in
jne
mov
stc
ss
jne
or
mov
inc
aam
cmpb
push
fwait
sarl
cmp
fdivr
push
push
xlat
ds
movsb
cmp
std
outsl
outsb
das
daa
cmp
cs
loope
and
pushf
std
xor
in
push
pop
dec
cmp
mov
lock
out
lret
cmpsl
hlt
mov
in
icebp
rcrl
int
and
pop
lods
icebp
js
cmc
ret
test
jmp
pop
ret
mov
jl
jl
neg
jmp
icebp
xchg
in
add
push
movsb
xor
mov
lds
adc
cmc
lds
shr
or
sbb
shr
xor
popa
fsubrs
add
les
test
stc
jb
out
pushf
dec
dec
ds
ljmp
inc
popa
fwait
out
cmpsb
insl
sar
mov
mov
xlat
andb
rorb
inc
lds
mov
stc
daa
not
push
and
mov
mov
popa
pop
mov
dec
pop
pop
jbe
push
mov
mov
xor
jns
xor
jle
push
dec
dec
addl
cltd
les
or
test
aad
lcall
out
loop
in
jno
or
push
das
movsb
cmpsb
je
leave
stos
hlt
les
cmc
sbb
daa
push
fdivl
dec
js
sahf
xor
mov
sub
out
xchg
lahf
outsb
rorl
cwtl
and
inc
fimuls
lahf
loop
cmc
outsl
shlb
rcrl
inc
iret
movsb
in
pop
rolb
xor
inc
sbb
pop
xor
lds
sbb
mov
dec
lcall
push
mov
cmp
or
mov
int3
ja
mov
or
jae
test
fidivs
and
popa
add
mov
cmp
aam
mov
imul
outsb
insl
mov
adc
xchg
rcll
jo
push
pop
pop
popf
ret
xlat
xchg
insl
or
loope
sbb
ja
shll
mov
cmp
ss
shl
pop
mov
pop
adc
ss
pop
out
adc
dec
lock
cltd
pop
lds
or
lret
push
pop
ljmp
jnp
js
and
push
jne
jno
push
ljmp
popf
int
jno
inc
lret
jno
or
fwait
jne
fldt
mov
sbb
add
lods
inc
xchg
mov
inc
hlt
jns
ffree
adc
test
mov
dec
outsl
mov
xor
cmc
leave
dec
into
mov
test
jno
adc
out
test
jbe
enter
add
outsl
sub
mov
pop
push
xchg
inc
out
andl
gs
cmc
pop
rcl
pop
sub
repnz
jae
sti
mov
lock
out
mov
cmp
popf
pop
data16
add
pushl
xor
jne
mov
cmp
faddl
out
pusha
sahf
adc
shlb
push
push
lock
add
pop
or
ret
call
lods
cmpsl
cld
hlt
sbb
int
mov
incb
std
cli
inc
call
push
cmpsl
shll
std
repnz
lea
push
xchg
and
inc
mov
push
mov
jbe
mov
cmp
fiadds
arpl
je
test
cmc
movsl
pop
sub
test
sbb
js
into
lds
jmp
add
data16
jns
loope
shll
sub
xorb
les
xchg
add
push
add
ljmp
sahf
cmp
mov
imul
xchg
js
aad
mov
inc
ljmp
jns
hlt
push
dec
jae
jmp
cld
mov
dec
stos
mov
mov
pop
and
or
xchg
arpl
movsb
loope
fdivr
xlat
dec
dec
and
cmp
pop
movsl
fadds
inc
xchg
pop
sbb
pop
cld
or
addr16
popf
jmp
stos
xlat
scas
dec
xchg
or
xchg
adc
and
dec
int3
sub
fldl
dec
push
adc
das
dec
loope
add
mov
mulb
test
std
add
in
adc
fcmovu
pop
xor
xor
orb
rcrb
jl
lahf
and
int
xchg
pop
xor
pop
xchg
into
mov
push
arpl
rclb
mov
inc
andb
add
inc
loope
mov
in
cmp
and
in
test
in
pop
inc
xchg
into
popa
push
mov
mov
fldl
xor
scas
aad
or
jmp
aad
jmp
nop
stc
sbb
adc
outsb
int3
mov
jne
insl
mov
sub
mov
pop
jb
pop
xor
jne
xor
pop
rolb
popa
mov
jno
mov
arpl
mov
pushf
mov
pusha
mov
int
lds
mov
scas
rcr
pop
mov
xor
repz
loopne
shlb
bound
lods
fisttpl
stos
jo
push
lret
sbb
xor
sbb
jno
lret
int
in
js
pushf
pop
xchg
test
test
pusha
aas
data16
iret
mov
leave
fnstsw
xor
sub
fcmovnbe
rcrl
inc
sahf
test
imul
call
in
jb
outsl
push
popa
cmp
jmp
jle
ss
mov
jge
dec
and
into
test
sbbb
pop
insl
div
lods
mov
pop
repnz
loop
pop
xor
aas
lods
pop
jbe
lods
xchg
lock
int3
iret
adc
dec
je
xchg
cmpsl
pushf
inc
mov
movb
xor
sti
arpl
dec
loop
jne
xchg
icebp
cli
adc
leave
pusha
jne
pop
cmpsb
aad
outsb
imul
movsl
mov
inc
cld
fcmovnbe
enter
lds
js
xchg
clc
cs
clc
adc
add
sarb
push
push
call
fidivrs
mov
lret
lcall
loop
outsl
xor
pop
rcrl
inc
dec
daa
pushf
pop
dec
xorb
popa
cmp
addr16
sbb
add
xchg
cli
mov
add
mov
pop
inc
imul
add
leave
stos
sbb
push
pop
pusha
mov
push
mov
cmp
les
xor
stos
in
pop
jmp
je
test
and
in
and
les
cmp
fdivrl
fisubs
xor
loop
or
adcb
ss
lret
or
lods
dec
movsb
xchg
std
xor
pop
pusha
lock
andl
dec
push
cmpb
adc
into
aas
pusha
sbb
out
out
push
or
mov
rcrl
lret
jg
sahf
add
cs
mov
xchg
add
out
fiadds
iret
ljmp
dec
out
lds
cmp
dec
sub
insl
flds
out
xor
jecxz
pop
push
stos
test
push
push
jne
cmpsb
ret
mov
les
mov
loopne
or
in
or
mov
ljmp
jp
mov
ja
sbb
push
xor
dec
idivb
xchg
jnp
cs
ret
push
aas
sbb
xchg
push
bound
addr16
or
add
lods
and
test
ret
pop
pop
and
add
or
repnz
fdivrl
inc
aad
mov
shl
out
pop
jno
or
cwtl
enter
std
or
mov
mov
repnz
xchg
and
push
enter
lret
push
popl
push
lods
cmp
cltd
not
lcall
add
inc
push
adc
or
movsl
mov
out
scas
jbe
data16
inc
les
sub
jno
lret
inc
sub
xchg
insl
jno
hlt
add
pop
scas
add
mov
cmp
push
rorb
mov
fwait
jge
into
hlt
fisubrl
dec
adc
hlt
loope
lret
ljmp
jmp
ss
pop
dec
aad
sbb
xor
leave
lret
jecxz
out
int
xchg
pushf
adc
repnz
pusha
mov
dec
mov
xchg
popf
adc
add
shrl
cli
dec
and
addr16
pop
sbb
pushf
pop
xchg
std
in
mov
scas
fs
push
pop
pusha
push
jno
in
xlat
pop
mov
aas
xchg
jg
add
jns
cmpsb
cmp
xor
xor
testb
xor
pop
popl
adc
dec
lock
or
int
fldenv
or
bound
int3
sbb
mov
mov
stos
stos
jno
lret
xor
js
out
shrl
lds
sbb
call
psrad
sbb
xor
fildl
cltd
test
sbb
mov
shl
popf
mov
add
adc
push
repz
in
rol
push
negl
arpl
mov
and
int3
pop
and
dec
popa
pop
loope
lret
lcall
or
insl
loop
push
and
jae
fxch
dec
mov
lea
inc
mov
and
jle
sub
ljmp
dec
push
mov
cmp
adc
xchg
ljmp
pushf
jle
test
leave
jl
data16
and
ss
mov
mov
sub
fstps
push
ret
lahf
outsb
sahf
mov
sbb
mov
incb
mov
test
ret
add
mov
fsubs
mov
daa
cmc
mov
ljmp
pop
lods
mov
pop
and
fcompl
mov
cltd
cmpsl
popf
jbe
enter
dec
cmpsb
popf
data16
cmp
fildll
xor
and
fcompl
sbb
les
call
in
lea
pop
jae
pop
mov
dec
adc
dec
aad
sub
add
lahf
in
jecxz
push
sub
mov
sub
adc
fsubl
call
sub
fldt
das
out
fisubrs
fs
test
icebp
lock
jecxz
jbe
cld
adc
leave
outsl
push
xor
add
cltd
in
or
fucomp
or
out
inc
das
sub
out
sti
inc
sbb
cmp
out
or
sbb
and
lds
mov
fisttpll
push
dec
pop
cwtl
popa
in
and
mov
bound
jno
insb
jmp
mov
pop
cmpsl
pop
xchg
test
movb
or
or
lahf
clc
stos
in
or
xlat
sahf
mov
int
test
push
cmpsl
sbb
adc
bound
shr
lds
jo
jp
gs
mov
jo
nop
arpl
in
pop
jo
and
mov
ror
lods
or
shrl
mov
mov
fimull
cli
sbb
pop
lahf
mov
add
dec
dec
sarb
sbbb
xchg
inc
aaa
shrl
push
imul
repz
inc
mov
and
pop
xchg
xlat
push
movsb
out
rcll
mov
cmp
add
unpckhps
xchg
jae
mov
js
es
xor
mov
mov
xchg
lret
jns
ljmp
insb
mov
mov
fcoms
dec
mov
mov
ss
divb
lds
les
fisttpll
sub
sbb
adc
mov
adc
int3
mov
push
stos
popf
mov
inc
dec
loope
push
sbb
push
std
push
gs
push
loopne
jecxz
add
add
das
mov
xor
lcall
push
and
icebp
push
cmpl
push
cmp
insl
test
lods
cli
inc
dec
xor
aaa
ljmp
insl
cmp
cwtl
scas
cmp
dec
lds
mov
out
lods
mov
and
fs
pop
push
adcb
lods
dec
je
stos
in
cs
mov
imul
hlt
xor
push
push
fcomps
inc
fildl
mov
cld
icebp
cltd
mov
in
lods
je
out
cmpsb
mov
mov
cltd
push
ja
jmp
ret
fmull
or
lret
rorl
xchg
inc
lret
xor
add
sub
push
sub
pop
ss
ja
mov
mov
roll
lods
divb
addr16
test
mulb
cmp
aam
fs
or
cmp
and
rcl
lock
dec
adc
hlt
xchg
xlat
ss
mov
pop
negb
jns
imul
mov
xchg
jns
in
mov
push
bound
jmp
push
push
sarl
sbb
in
hlt
push
mov
mov
sbb
pusha
adc
add
adc
std
mov
cmpsb
stos
lret
outsl
jb
mov
test
cwtl
aad
data16
fbstp
lret
jp
scas
pcmpeqd
fld1
fwait
mov
sub
cmp
pop
fisttpll
aas
sahf
sbb
jge
add
lret
xchg
in
mov
sub
inc
mov
xchg
xor
vpavgw
mov
lahf
pop
sub
inc
push
xlat
push
ds
xchg
mov
push
arpl
mov
mov
cmp
sahf
loop
mov
inc
add
jns
mov
icebp
movsl
pop
mov
fdivs
cwtl
leave
or
cwtl
lods
cltd
push
inc
bound
les
xchg
testl
cmp
sub
repnz
sub
cli
ret
and
hlt
xchg
fisttps
in
dec
in
mov
jmp
out
test
fwait
divb
es
jmp
mov
pusha
pop
push
out
pop
jecxz
mov
mov
mov
stc
in
cmpsl
mov
add
jne
aam
cmpsb
sbb
dec
repz
lods
test
out
mov
imul
cltd
push
inc
xchg
cmp
cli
push
jl
add
pop
icebp
xchg
inc
mov
sbb
int3
adc
imul
bound
lret
sbb
jnp
int
mov
gs
daa
sub
sahf
subb
and
mov
lds
or
and
icebp
jnp
pop
xchg
jno
adc
adc
dec
pop
mov
pop
jg
mov
icebp
mov
dec
adc
xor
mov
iret
insl
pop
mov
jg
mov
push
in
daa
or
in
inc
lods
jg
xor
lret
push
cmc
push
adc
pop
mov
jle
mov
ret
cli
mov
mov
or
push
in
cmc
mov
in
mov
add
cmp
mov
shlb
bound
loope
loope
lret
mov
xchg
into
mov
ret
test
inc
xor
shll
xchg
push
test
popf
mov
push
iret
jg
lds
mov
outsl
repz
add
jns
sub
rep
fs
mov
or
xchg
aad
addr16
cltd
add
mov
les
fs
mov
addr16
or
xchg
push
xchg
and
inc
popa
loope
mov
cmp
cltd
adc
mov
arpl
mov
dec
cmp
adc
js
jne
push
shl
loop
ret
movsl
gs
dec
adc
xor
dec
jae
push
js
out
lret
js
loope
cld
fwait
aad
push
cmc
inc
stc
popa
jmp
lock
pushf
insb
sub
xchg
popa
movsb
ret
popa
cltd
movsb
leave
add
mov
jecxz
fbld
xor
pop
dec
ret
mov
mov
jge
lahf
outsb
mov
mov
jecxz
fisubs
lock
arpl
push
lds
mov
pop
nop
adc
dec
inc
or
or
xchg
mov
and
jno
sbb
adc
icebp
ret
insl
mov
in
lds
into
dec
mov
ret
xchg
pop
nop
push
inc
je
pop
mov
loope,pt
jle
jg
sarb
jb
pop
gs
aad
imul
js
fidivrs
jl
lods
lods
bound
fstpl
ret
mov
mov
cmp
jbe
inc
xchg
push
stos
dec
mov
fsubl
mov
pop
push
mov
xchg
repz
int3
pushaw
mov
xor
fucomip
fnstenv
adc
jg
jb
fcompl
dec
shl
call
fnstenv
shll
jnp
ljmp
cwtl
idivb
dec
daa
xor
cld
es
push
inc
repz
in
xchg
jo
punpckldq
mov
cwtl
imul
lock
inc
dec
add
or
addr16
add
adc
or
jecxz
mov
pop
aaa
cli
xchg
in
mov
jbe
pop
and
xchg
test
scas
lock
hlt
cwtl
aaa
repnz
les
lea
inc
add
jns
adc
outsb
loope
mov
xor
mov
pushl
mov
sub
addr16
iret
cmc
shrl
mov
cmp
and
outsl
dec
pop
sub
arpl
jecxz
xor
int3
inc
mov
push
dec
fs
stos
push
and
and
cli
stc
push
lock
xor
jno
cmpsl
je
mov
or
push
push
push
rolb
sub
pop
mov
inc
movsl
movsb
xor
dec
push
lret
jecxz
inc
arpl
or
sti
or
aaa
ljmp
jno
jae
mov
into
lds
adc
mov
dec
mov
sahf
pusha
cmp
xchg
cmc
jl
lret
add
negl
loop
daa
adc
imul
aaa
inc
sub
sub
lods
addr16
inc
out
insb
adc
mov
repnz
jl
loopne
fs
xlat
jge
stc
jmp
xchg
je
sub
scas
xchg
inc
jno
or
inc
dec
and
scas
or
cmc
add
and
xchg
movsl
fs
sahf
movsl
pushf
lahf
aaa
push
stos
push
fsubrl
pop
incb
jge
fs
cltd
repnz
mov
or
ljmp
ret
dec
sub
pop
pop
pop
sbb
inc
mov
sti
mov
in
dec
add
pop
xchg
scas
cmp
mov
das
jnp
negl
call
hlt
dec
adc
stos
sti
push
xchg
sahf
out
or
mov
into
mov
lods
cld
insb
ficomps
ficoms
sbb
addb
in
hlt
pop
data16
adc
fbld
xlat
inc
das
jnp
sbb
test
insb
outsb
les
fwait
pop
sahf
aaa
xor
jmp
or
idivl
xor
sbb
pop
stos
mov
loope
pushf
or
loope
pusha
icebp
lods
fwait
cmc
fcmovb
popw
or
adc
mov
lods
repnz
push
movsb
aad
mov
lods
cltd
mov
xor
les
daa
pusha
cwtl
cmp
mov
xchg
sbb
inc
icebp
icebp
into
inc
and
sub
call
lea
das
sbb
insl
cmp
mov
add
push
std
inc
adc
movsb
popa
loope
std
sbb
test
pop
mov
loope
std
lret
les
cmc
sbb
movsl
loopne
inc
movsb
inc
test
or
in
out
pop
or
cld
dec
out
mov
fwait
les
sbb
adc
mov
jle
pop
pop
daa
test
cltd
cli
fwait
cmp
or
into
out
and
mov
divb
cld
lock
in
lret
adc
ficoml
in
push
movsb
xor
xor
xor
outsb
push
adc
mov
aaa
push
mov
mov
js
inc
out
xor
add
pop
lcall
cmp
addb
scas
test
loopne
cmc
mov
sub
dec
mov
test
je
pop
out
mov
xor
sbb
in
inc
in
and
mov
aad
lret
sub
test
insb
stos
shl
cltd
in
ljmp
shl
sub
ljmp
in
lcall
dec
sbb
frstor
sti
and
inc
popa
mov
push
shr
dec
or
add
xchg
mov
ss
roll
fs
xchg
cmc
cmp
shll
movsl
out
orl
outsb
clc
dec
mov
stos
js
mov
fstp
pop
aam
les
popa
ret
xor
loope
push
push
mov
push
and
addb
in
lea
sub
mov
dec
aad
mov
and
fadd
adc
mov
inc
notb
xchg
lods
data16
ljmp
aam
push
cmc
std
pop
cwtl
sbb
jl
loope
pop
daa
inc
push
mov
push
and
or
mov
les
repnz
ret
push
pusha
mov
inc
cli
jae
cmp
jb
add
xchg
mov
inc
jl
inc
ss
sub
mov
jg
jns
jmp
adc
and
out
xchg
cmpsb
aad
loopne
je
dec
mov
xchg
out
pop
dec
mov
mov
jmp
inc
and
sbb
xchg
jp
hlt
scas
arpl
and
jl
outsl
sti
jbe
test
jecxz
sbb
sbb
mov
mov
outsb
mov
mov
cmp
icebp
out
mov
cmpsl
sub
cli
add
push
pinsrw
inc
add
or
push
pop
jecxz
mov
call
ficoml
pop
push
adc
ja
nop
cld
pop
sarl
js
and
cwtl
cmc
lods
or
pop
stc
lods
test
fldcw
jbe
test
xchg
sahf
iret
lods
and
int3
lcall
adc
dec
sub
lahf
sub
jo
and
repnz
lods
imul
pop
or
xor
adc
aam
and
inc
repnz
rorl
push
fildl
fs
jb
cmp
das
mov
and
mov
aas
jne
inc
xchg
cmpb
int3
loope
sbb
adc
add
inc
or
ss
cli
mov
loopne
ficoml
rolb
sbb
adc
sub
loop
scas
je
sub
adc
and
xchg
loop
mov
mov
push
outsl
imul
shrl
sti
fs
scas
mov
insl
inc
shll
int3
loope
inc
in
rol
mov
mov
in
repz
mov
mov
sub
fs
or
js
adc
pop
pop
cmpsl
ret
jb
fldl
or
push
adc
rcll
mov
or
xchg
cli
xchg
and
cmc
xor
lods
pop
int3
cmc
stos
xor
lods
bound
mov
int3
in
cs
jne
icebp
imul
jecxz
add
lods
xchg
lret
lds
xchg
stc
mov
or
sbb
push
mov
leave
inc
mov
loop
mov
pusha
test
xchg
loope
sbb
stos
imul
stos
inc
pop
mov
jbe
and
stos
jns
orb
lds
ss
pop
jne
and
jnp
jge
jno
mov
leave
std
sahf
jecxz
cwtl
or
fnstcw
xor
in
cmc
fs
lret
call
lahf
xor
and
pop
jg
movsb
push
adc
add
cli
push
scas
sub
cmc
loop
and
sub
sbb
lahf
xchg
in
mov
addr16
jmp
hlt
insb
sbb
in
jecxz
jmp
inc
out
in
cmc
mov
loop
movb
and
ret
fisubrs
in
icebp
ljmp
mov
jns
filds
push
add
jle
cmpsl
or
cmp
mov
and
sub
fiadds
js
aaa
cli
aad
push
xchg
jno
add
adc
inc
pop
xchg
push
sbb
push
les
mov
lods
jg
jno
sbb
bound
popf
test
test
into
jns
je
popa
mov
pop
push
lds
dec
aad
std
mov
mov
fimull
add
jnp
lods
xor
inc
ret
adc
push
mov
aas
add
pop
pop
movsb
dec
loop
xchg
in
inc
shrl
mov
out
iret
orb
jb
xor
sahf
arpl
xchg
ds
xchg
in
jae
push
les
loopne
cmc
pop
dec
cmc
shlb
push
pop
push
push
xchg
xchg
sbb
dec
mov
loop
pop
jp
mov
ds
orl
jbe
mov
fs
adc
mov
push
push
dec
outsl
mov
testb
cmpsl
lea
call
fadds
cmc
stos
lret
ds
adc
jb
int3
jae
mov
cwtl
xchg
test
jle
fisttps
jle
adc
adc
push
cmpl
loop
sbb
adc
stos
ret
sub
mov
jmp
lods
shll
bnd
dec
div
push
xor
lcall
mov
sub
xor
outsl
mov
out
lret
cmc
push
cmp
sub
imulb
out
ret
movsl
fs
cmp
cmpsb
xchg
jge
popa
ret
dec
inc
push
hlt
insb
inc
mov
js
sub
and
push
inc
in
test
fnstcw
scas
push
adc
test
adc
adc
mov
add
dec
push
je
icebp
ja
and
ja
ret
movsb
jno
and
add
dec
cmc
xor
sub
lock
enter
test
adc
les
mov
into
pop
push
cmp
mov
adc
fwait
jns
push
mov
fmull
dec
jno
stos
sbb
fbld
xchg
mov
jl
xchg
xchg
adc
pushf
call
test
call
cwtl
jae
into
and
push
pushf
sub
mov
lcall
mov
out
into
aaa
pop
xchg
mov
or
inc
outsb
sub
std
dec
inc
xlat
push
mov
movb
shrl
push
mov
lods
push
jo
adc
lods
cwtl
and
int
mov
stos
rclb
sbb
xor
ss
imul
in
and
fldl
nop
adc
jno
push
mov
fs
popa
addr16
adc
shrl
cmp
pusha
pop
dec
cmp
imulb
pop
xchg
mov
lcall
add
dec
jle
lcall
pop
mov
movsb
sub
jns
mov
leave
inc
xchg
push
dec
pop
mov
dec
xchg
mov
enter
rcr
jb
arpl
jl
jmp
movntq
out
js
mov
lret
stos
test
insl
or
insl
fs
enter
mov
dec
shlb
sub
xor
add
arpl
mov
dec
dec
es
jge
cmp
bound
mov
sub
and
sub
int3
mov
xor
or
adcb
mov
repnz
jp
dec
sub
hlt
xchg
stos
or
cmpsl
stos
xchg
add
or
xchg
pushf
and
daa
pop
mov
pop
call
pop
jge
divl
pusha
icebp
jne
mov
jbe
jg
aam
xchg
loope
xor
jns
mov
js
xor
int3
loop
pop
mov
add
lods
xchg
xor
jb
sub
cwtl
test
adc
test
enter
fcompp
push
and
xchg
sbb
xchg
xor
xor
or
out
mov
setg
adc
rolb
call
test
ljmp
rolb
pop
and
mov
fwait
jecxz
fistpll
jl
push
imul
test
mov
ljmp
fistl
jbe
sbb
push
inc
sbb
xchg
mov
xchg
unpcklps
lods
push
fwait
and
push
movsl
jno
jns
inc
adc
ja
mov
push
jno
sbb
in
sbb
clc
fiaddl
in
repnz
inc
iret
push
jo
pusha
adc
adc
jecxz
out
outsl
cmpsb
mov
ss
inc
dec
nopl
add
data16
and
inc
xchg
js
cmc
jns
xlat
in
shl
mov
cmp
dec
pushf
sub
and
pop
mov
jns
mov
inc
dec
inc
leave
xlat
cmp
mov
stc
shlb
hlt
push
push
cmp
es
fwait
stos
inc
test
add
jnp
inc
mov
xor
stos
cmp
inc
and
sti
dec
pop
and
adc
dec
int3
mov
scas
and
fwait
xchg
or
lock
push
push
cmpsb
mov
hlt
fs
push
jne
sbb
ucomiss
jno
jp
repz
sbb
pop
sbb
out
ja
cmp
and
xor
pop
shrl
mov
sub
lcall
aad
push
ljmp
mov
inc
mov
nop
mov
mov
lods
icebp
xor
pop
cmc
aas
aam
jl
mov
sbb
dec
out
pop
jp
sub
jp
push
stc
sbb
cmc
push
and
dec
adc
pushf
and
hlt
inc
mov
mov
and
jge
cmc
iret
sbb
xchg
push
mov
pop
inc
xor
and
xchg
cmpsl
in
sbb
ss
dec
daa
testb
lahf
nop
xor
js
test
test
xor
loope
mov
push
stos
stos
ret
dec
sub
add
or
data16
inc
adc
jg
repnz
push
fsub
push
gs
xor
sub
cmpsb
out
loope
bound
inc
dec
test
lds
inc
ja
inc
arpl
fwait
jno
xchg
cmp
mov
cmp
sub
add
in
shrl
dec
lock
pop
call
mov
loope
lcall
mov
loope
push
mov
gs
push
sub
stos
ffree
shlb
pop
jg
add
mov
inc
jb
hlt
test
jne
sub
fidivs
arpl
jmp
test
insb
testb
sti
inc
adc
add
dec
jae
in
adc
mov
sub
dec
loopne
stos
aaa
fisubl
add
repz
push
fcmovbe
or
imul
push
adc
loop
sub
jp
mov
sahf
cmpsl
xlat
xor
jnp
cmp
dec
mov
and
push
or
je
lcall
dec
mov
dec
jbe
in
iret
in
pop
ljmp
jno
mov
mov
jbe
or
testb
xorb
loope
inc
pop
es
mov
rcrl
mov
ljmp
push
sahf
addr16
outsl
fwait
aaa
sub
shll
insl
or
out
dec
xchg
mov
popa
faddp
mov
lds
add
lock
ss
lret
and
mov
cli
stos
jg
cli
xor
inc
fsubp
pop
mov
into
sbb
fwait
cltd
in
cltd
lahf
dec
jbe
cmovg
leave
std
pop
lahf
stos
cmp
cwtl
xor
int
push
sub
stc
lret
fcoml
pushf
cld
dec
dec
jo
push
xchg
mov
and
addr16
hlt
mov
mov
jno
ss
fwait
mov
push
jnp
les
and
scas
lea
mov
mov
jmp
xlat
loopne
xchg
cmp
sub
insb
inc
mov
dec
jle
call
lock
mov
out
jb
test
hlt
push
dec
pop
fsub
pop
int
mov
hlt
sbb
lret
mov
cmp
push
pushf
adc
or
push
into
adc
aaa
aaa
in
jnp
leave
dec
dec
mov
dec
ljmp
fimuls
mov
pop
cmpsb
cs
or
cmpsb
stc
adc
bound
sahf
in
mov
enter
das
mov
fdivl
xlat
xor
xor
ret
repnz
ret
push
pop
push
bound
pop
mov
pushf
aad
ret
mov
sbb
jl
ficoml
in
inc
xor
jb
pop
insb
xorl
pop
mov
ja
pop
or
nop
das
dec
inc
jecxz
adc
push
inc
fcmove
clc
in
jae
je
testb
sbb
lods
js
jbe
shll
out
push
notl
cs
fwait
lock
dec
pop
inc
inc
call
sbb
jmp
jne
mov
pop
mov
jo
or
mov
mov
fwait
inc
aas
xor
out
pop
jne
or
loop
mov
push
mov
inc
mov
jl
jmp
mov
cmp
or
js
sbb
rcrl
jle
loop
bound
dec
sbb
adc
fadd
or
mov
arpl
je
arpl
es
mov
icebp
loope
into
popa
push
gs
cmp
movsb
test
icebp
xchg
lods
in
and
in
loop
push
fmul
xorb
cmc
stos
fmuls
in
pop
mov
fsts
fildl
inc
pop
cs
cmpsb
push
cmp
int
dec
in
xchg
cmpsb
push
ret
sub
loop
testl
inc
mov
xchg
adc
sub
or
js
dec
sbb
aam
jg
cmp
mov
outsl
lock
cmp
popa
shl
mov
pop
bnd
or
dec
movsb
mov
xchg
lods
mov
divb
insl
movsb
xchg
add
das
cld
arpl
hlt
push
loope
push
mov
inc
mov
push
mov
adc
fists
lods
notb
or
pop
lret
mov
xchg
aam
mov
inc
test
rorb
sbb
dec
sbb
divb
mov
dec
popf
lcall
insl
loope
aam
adc
mov
bound
mov
repz
mov
jnp
or
mov
lret
outsb
and
pop
repz
xor
push
or
sahf
sahf
bound
lods
mov
push
stos
lock
jae
add
psubd
bound
mov
pop
cmp
adc
push
cmp
stc
std
add
dec
daa
ds
add
loopne
stos
repnz
fldt
sbb
xor
or
in
sbb
inc
insl
inc
dec
bound
dec
fwait
loopne
inc
jl
xor
aam
out
lcall
pop
pop
cmp
imulb
add
push
and
push
sar
out
fxch
fisubrl
fs
loop
pusha
xchg
popa
rclb
cmpsl
push
adc
or
add
test
shll
jl
das
inc
cmp
dec
and
push
mov
and
mov
sar
and
fnstenv
js
mov
xor
xchg
mull
adc
pop
aam
mov
dec
fildl
push
fimuls
sub
xor
and
sub
mov
xor
ret
das
addl
mov
mov
mov
xor
lahf
nop
push
push
or
jnp
sti
mov
mov
mov
roll
shl
dec
add
lock
dec
push
sbb
sub
push
out
test
stos
les
dec
xchg
mov
dec
addr16
adc
mov
imul
mov
mov
adc
int3
loope
js
sti
adc
rcrl
add
aaa
jmp
push
icebp
lods
mov
sub
into
cmp
push
ret
xchg
jno
cwtl
mov
movsl
insb
adc
rorb
int3
cmp
les
inc
inc
in
ficoml
sti
mov
push
xchg
imul
and
pop
ss
enter
testl
xchg
mov
xchg
xor
lcall
mov
cmc
test
es
mov
lods
fldpi
ret
xor
fwait
jmp
pop
dec
jo
push
loop
andb
pusha
lret
or
sub
lock
mov
pop
mov
jbe
lcall
enter
aam
mov
or
xlat
in
bound
pop
lds
test
sarb
outsb
push
stos
dec
roll
pop
je
mov
sahf
fstl
push
and
or
push
insl
push
ret
jne
lret
mov
insl
lock
fwait
mov
push
pop
push
iret
dec
out
add
mov
mov
in
mov
fnsave
adc
icebp
in
bound
je
inc
mov
test
inc
pusha
nop
push
call
mov
mov
push
cmc
push
inc
dec
mov
jne
add
jle
inc
sub
sbb
dec
push
std
sbbl
pop
pusha
test
out
and
mov
les
loop
sti
lret
sbb
movsb
mov
hlt
push
clc
mov
sti
outsb
xor
out
lret
push
repz
int3
and
adc
les
sub
dec
mov
and
cmp
insb
lods
cmp
dec
cmp
jge
xor
lret
dec
sahf
adc
lret
lods
repnz
jge
loopne
stos
mov
jae
mov
cmp
repnz
fs
inc
dec
addr16
stc
cmc
shlb
fnsave
aas
xlat
loop
cmpsb
stos
inc
dec
or
sub
adc
mov
sahf
lret
sub
je
fdivrl
fcomps
mov
push
adc
int3
scas
ja
or
sub
fsubrs
jne
stc
addr16
int
dec
dec
movsl
push
mov
rcrb
ret
cmc
push
dec
inc
dec
dec
dec
aad
or
cmpsb
xor
mov
cmc
fistpll
jne
and
in
cld
xchg
movsb
inc
mov
sbb
loope
aam
sbb
mov
stos
jno
loop
pushf
cltd
xchg
out
xchg
jge
insl
inc
daa
mov
movsb
sbb
loopne
push
xchg
fdivr
fucom
ljmp
jle
mov
mov
mov
decl
xor
mov
lret
sub
and
mov
add
inc
fcomps
fcoms
aas
cmc
out
call
jbe
inc
and
inc
clc
lods
test
xchg
mov
push
lcall
popa
in
es
je
pushf
mov
andb
fwait
pop
in
shlb
int
push
in
xlat
loop
rcll
pop
das
inc
mov
and
cmp
sub
insl
sbb
incl
mov
lea
mov
adc
and
xchg
xor
jbe
iret
or
daa
inc
push
ret
xor
jle
clc
stos
out
mov
movsb
xchg
sbb
mov
push
cmp
imul
push
lock
int3
test
stc
jbe
push
sahf
push
push
mov
std
andb
mov
dec
mov
jmp
icebp
das
clc
dec
mov
dec
sbb
mov
dec
rcrl
xlat
push
inc
pop
push
mov
push
into
push
mov
mov
jns
pop
dec
movsl
jmp
leave
leave
jae
push
xchg
icebp
lret
push
jle
xchg
push
ljmp
aaa
imul
lret
sbb
push
imul
stc
lcall
outsl
jb
or
lock
clc
ja
bound
repnz
lock
xchg
cmp
xor
inc
in
daa
xor
mov
push
mov
iret
test
fcmovnbe
aaa
push
xor
outsb
pop
mov
jecxz
loop
jnp
rsqrtps
test
dec
mov
es
repnz
dec
lret
lods
push
movsl
sbb
stos
push
add
lret
sbb
bts
in
je
ret
adc
inc
ficoml
and
in
push
push
xor
and
lods
gs
mov
lods
test
adc
adc
inc
lods
push
mov
jae
ja
add
stos
xchg
aaa
mov
pop
divb
cwtl
pop
int
jo
lret
cmp
sti
or
rcrl
add
mov
mov
sbb
in
clc
ret
test
test
into
pop
insl
cmp
dec
cmp
ret
push
push
mov
sbbl
push
notb
rcr
dec
or
push
xor
sub
push
dec
mov
dec
pop
adc
cs
lock
sahf
outsb
pop
scas
out
stc
in
sbb
mov
lcall
push
sar
mov
cmc
popa
imul
aaa
xchg
int
pusha
les
mov
dec
aam
and
or
push
mov
pop
mov
stos
jmp
jg
test
cmp
adc
js
push
or
movsl
pop
dec
dec
mov
loope
outsl
mov
push
icebp
mov
inc
add
loopne
add
adcl
push
push
mov
pop
pushf
lahf
add
mov
mov
movsl
mov
sbb
add
mov
ficoml
mov
xor
xchg
fs
xor
testb
xor
lock
int3
jge
sbb
dec
loopne
adc
adc
lods
test
out
jbe
cmp
sub
ret
loopne
mov
cltd
aam
into
jb
push
add
and
adc
enter
mov
jle
jbe
stos
sub
imul
jo
xchg
sub
repnz
adc
push
ljmp
fldenv
xor
int3
pop
ret
adcl
push
repz
cwtl
lret
cmpsl
aam
mov
jp
movsb
outsl
std
inc
std
rcr
test
loope
push
into
rcl
mov
or
test
ret
sbb
cmp
jno
mov
xchg
arpl
mov
xchg
or
mov
int3
cmc
adc
repnz
in
mov
add
dec
fwait
cwtl
and
and
and
int3
add
pusha
out
gs
dec
gs
add
fisubl
loop
add
shl
xlat
std
add
pusha
push
cli
aas
and
cltd
inc
inc
test
pop
ret
lock
adc
sbb
jb
xchg
popa
cli
add
daa
sarb
adc
roll
aaa
mov
leave
add
mov
ja
mov
repz
stos
popa
jmp
mov
jbe
push
aad
rclb
insl
iret
mov
pusha
aad
pusha
fidivrl
shlb
inc
mov
adc
test
add
jle
inc
lds
lods
lods
mov
or
dec
push
repz
push
add
test
jns
pop
jmp
test
cmp
leave
les
add
icebp
pop
repnz
movsb
scas
cmc
mov
pushf
imul
inc
and
dec
jl
push
xor
xor
ja
mov
jno
push
jl
mov
test
jb
das
lahf
sub
mov
mov
push
lahf
imul
adc
inc
in
pop
or
loope
data16
popf
mov
push
inc
add
xchg
inc
pushl
push
out
div
vpunpckhdq
hlt
lods
sub
addl
jecxz
xor
xchg
int
adc
jl
xor
jle
cmpsb
sub
enter
inc
mov
bound
negb
fstpl
xor
or
mov
xchg
cmc
lock
push
xchg
mov
xor
add
xor
enter
add
push
pop
push
dec
sbb
adc
push
jbe
cmpsl
add
jb
mov
icebp
lcall
into
pop
hlt
ja
sbb
sarb
rcll
or
ret
and
mov
into
add
add
iret
fldcw
jl
add
sbb
negb
inc
push
add
fldt
test
sub
and
in
dec
ret
das
mov
sub
lea
ror
ljmp
lret
enter
rcll
orb
jl
es
std
push
push
cltd
aam
rol
fs
sub
das
push
mov
outsl
xor
enter
and
mov
pop
pop
and
orb
popf
mov
stc
push
std
adc
add
cld
ficomps
aam
aam
daa
bound
mov
and
add
mov
js
loop
ds
adc
sub
sbbb
mov
mov
ror
daa
ja
lods
push
and
jb
scas
test
bound
mov
pop
mov
aam
fcom
lock
test
xor
scas
aad
lea
sub
iret
outsb
pop
insb
aam
and
pop
xchg
adc
mov
or
mov
jle
inc
das
cltd
aam
movl
mov
add
push
outsb
or
mov
inc
movsb
xor
inc
jae
jge
aam
insb
cltd
hlt
bound
iret
mov
sarb
or
shl
mov
sahf
sub
add
and
sarb
jae
fs
dec
lret
icebp
fcmovnu
cmpsb
mov
fstps
call
icebp
dec
add
in
lret
gs
movsl
hlt
lods
in
aad
scas
ret
mov
aam
push
rcrb
insb
test
sbb
mov
ret
inc
jno
aad
cmp
out
push
mov
aad
add
mov
aad
sbb
out
push
push
sub
je
cmc
scas
sub
add
and
ret
push
es
mov
mov
cmp
loop
sbb
pop
jge
jge
cmp
mov
cmp
movsl
rcr
test
add
push
xchg
mov
rclb
push
and
loopne
out
xchg
push
jle,pt
mov
mov
dec
or
jp
push
mov
pop
ss
push
jne
mov
fadds
xchg
cmc
push
or
in
inc
dec
ljmp
inc
dec
add
add
aam
sti
test
and
ds
sub
out
mov
push
mov
mov
cmp
in
out
add
pop
xor
xchg
push
test
xor
push
daa
mov
iret
jno
jmp
ss
mov
loopne
pop
xor
int
cmpsb
or
mov
inc
and
gs
rorl
sbb
jb
stos
push
leave
push
testb
int
fisttps
insb
icebp
jp
push
leave
adc
xchg
xor
fisubl
inc
mov
sub
aam
pusha
mov
loop
fsubs
pop
shr
lcall
rclb
pop
sbb
rorb
xor
shrb
mov
mov
fwait
jnp
add
mov
xchg
arpl
test
add
push
push
sbb
rorb
xchg
xchg
mov
lcall
in
cmpsb
shrl
push
aam
jo
adc
mov
shll
movsb
adc
shrl
adc
mov
sbb
fcomps
iret
into
cmp
out
shll
xchg
outsl
fs
ucomiss
xor
pop
mov
sti
je
insl
and
aas
xor
out
push
mov
xchg
test
push
and
pop
mov
roll
iret
out
xor
rolb
iret
lret
es
popa
ror
aad
and
sub
cmpsb
mov
adc
test
popa
push
sub
mov
jne
mov
push
add
add
cmp
pop
pop
aad
aam
pop
xor
mov
popf
xchg
xor
cli
fwait
mov
jle
sbb
loope
pop
clc
xor
rol
xlat
pusha
int
xchg
mov
push
ret
xchg
adc
sub
add
mov
dec
dec
mov
sti
gs
sbb
movsb
sbb
pop
sbb
mov
rolb
insl
push
ja
xchg
xor
jne
xor
aas
insl
jne
out
mov
adc
in
cmpsl
mov
pusha
jbe
mov
jmp
shll
cltd
mov
push
inc
in
ss
sbb
popf
test
out
mov
mov
in
push
movsb
jge
iret
cmp
xor
test
sbb
rolb
es
sbb
inc
sub
outsb
scas
fsts
cwtl
fstp
jge
fsts
push
mov
jb
cmp
fists
orl
and
rcl
cmc
sbb
xor
int
cmp
sbb
sub
cmp
lret
ficomps
popa
sub
and
lods
pop
notl
dec
cli
push
cmpsl
scas
gs
xor
fwait
stc
out
shll
dec
mov
xchg
or
cld
iret
xlat
loope
aad
std
dec
out
push
and
rclb
cwtl
loop
inc
arpl
gs
fwait
jne
sahf
or
movsl
cmpsl
sarl
je
rolb
addr16
popf
xor
fcomps
test
mov
je
aad
cmp
rorb
cltd
lret
shrl
cmp
shlb
mov
push
fs
add
cmpsl
jl
xchg
push
bound
sahf
push
inc
outsl
xchg
adc
dec
xlat
mov
fstpt
int
popf
mov
xchg
xchg
or
out
cmp
fdivrl
pop
je
jo
pop
ss
push
cmpsb
xchg
ret
repnz
lods
dec
cmp
out
lds
loope
fisubrl
cmp
cwtl
stc
divb
ljmp
sub
lds
ficoml
mov
enter
nop
in
in
out
das
outsl
cli
sti
and
jmp
leave
jge
inc
fistpl
add
xor
lret
xchg
mov
lds
insb
cmpl
mov
sub
push
xorl
mov
mov
shr
pop
aaa
in
adc
nop
int3
call
or
lcall
sahf
push
test
andl
pop
lds
jno
xchg
sbb
sbb
or
jb
push
cmpsb
mov
xor
dec
pop
fidivl
aam
aam
in
or
insb
jmp
mov
iret
sbb
cmpsb
sarl
int3
icebp
xor
repnz
or
arpl
xor
mov
and
jno
cmp
mov
and
add
rcl
xchg
push
scas
inc
adc
mov
mov
inc
xor
aam
fisubl
aaa
jb
jecxz
sahf
adc
and
push
push
push
lcall
shlb
popa
aad
mov
stc
xchg
add
clc
lcall
sub
lcall
iret
sarb
push
jp
inc
adc
sub
and
sub
aad
xchg
lahf
shll
jle
jno
jge
mov
push
mov
in
aad
or
shrb
mov
cmpsb
fstpl
sub
shll
lock
push
sbb
jb
sahf
xor
rcrl
outsb
std
into
mov
ret
testb
bound
inc
and
fnstenv
aaa
ficoms
bound
mov
cli
mov
xchg
pop
lock
push
mov
repnz
sahf
mov
es
inc
das
aam
sti
xorb
negb
mov
xchg
dec
pushf
jmp
iret
adc
test
inc
fcomps
xchg
xchg
xlat
cmpsb
lcall
ljmp
xor
lea
add
loop,pn
inc
xor
mov
roll
pop
xor
shlb
push
sbb
cmp
cmc
shrb
movw
xchg
push
pop
lahf
daa
mov
xchg
loope
rcl
push
ja
mov
push
loope
mov
repnz
xor
push
rol
jo
dec
adc
push
or
iret
cmc
das
ret
aaa
lcall
cli
aam
mov
test
fnstenv
ss
data16
add
fsubl
inc
stc
fdivrl
push
dec
hlt
dec
rcl
stos
xchg
leave
push
lret
aad
and
lcall
mov
cmp
sub
xchg
add
mov
repz
push
out
inc
shlb
xor
popa
loope
xlat
lret
cmpsl
clc
jns
push
fcompl
mov
lea
movsb
test
mov
mov
jb
int3
loop
adc
rcl
cmpsb
orl
addr16
clc
cmp
add
xchg
into
pop
movsl
jp
rcrl
popa
mov
leave
add
fcmovne
add
in
sahf
cmc
mov
mov
mov
sbb
out
rcrl
imull
pushf
mov
lock
dec
and
je
xchg
cs
out
popa
and
jo
push
aam
nop
xor
sbb
sub
cmp
jns
ljmp
adc
push
mov
icebp
testb
test
sub
aaa
lret
xor
repnz
mov
mov
bound
dec
loop
out
add
cmc
repnz
into
mov
jae
js
popf
add
icebp
mov
or
out
and
sub
into
mov
sbb
in
aam
dec
or
ret
ljmp
int
out
cs
imulb
mov
jbe
stc
xor
js
es
push
into
pushf
push
xor
mov
cld
test
pop
cwtl
push
icebp
shl
cmp
push
aam
jne
imul
mov
jge
xchg
xor
roll
sarb
and
pop
mov
imul
add
inc
sarl
in
adc
rorl
fsub
add
jmp
iret
mov
cmp
rcr
dec
into
sub
cmc
dec
call
imul
mov
xchg
push
mov
mov
pop
xlat
pop
out
pop
and
fdivr
and
dec
fnstenv
push
xchg
imul
push
nop
cmp
es
aad
insl
or
push
std
inc
or
or
cmp
test
inc
xchg
stc
sub
pusha
mul
fs
mov
into
fsubs
mov
shrl
push
push
jmp
in
js
sbb
flds
pop
add
mov
sbb
jne
stos
aad
xor
loop
push
mov
dec
fsubs
repz
jno
flds
jno
outsb
aaa
jno
aaa
push
stos
push
int
and
xlat
jnp
rorb
mov
lret
outsb
test
push
push
stos
mov
ljmp
out
or
jae
xor
cmp
in
push
xlat
adc
adcb
repz
inc
push
cmp
sub
sub
xor
mov
cmc
mov
lods
fiadds
ss
sub
outsl
jp
scas
ret
cltd
loope
jns
fdivrs
mov
jge
mov
ss
adc
ds
mov
mov
shll
jmp
cmp
push
cmp
mov
add
inc
mov
mov
repnz
mov
jns
insl
xor
push
test
test
jo
xchg
lcall
jge
lret
fstl
pop
in
iret
xlat
cmp
rcl
dec
daa
rcl
loopne
rorb
jge
push
push
mov
mov
ljmp
ret
inc
mov
rolb
inc
cmpsb
mov
pop
aam
stos
xor
xlat
push
repnz
pop
add
lret
adc
adc
jns
push
or
cmc
icebp
les
lock
xchg
xchg
out
xchg
adc
xchg
shlb
add
aam
mov
jle
mov
testb
fidivrl
pop
lret
and
cmp
mov
cmpsb
cmc
call
add
sahf
sbb
xor
jne
es
or
mov
test
dec
or
jp
je
mov
cmp
lds
dec
push
sarl
pop
mov
xor
sbb
mov
int3
call
mov
fnsave
sbb
xor
mov
in
popa
outsl
push
imul
loop
xchg
xor
push
mov
ffreep
leave
ss
ret
dec
xchg
push
xchg
mov
add
and
loop
inc
inc
mov
and
movsl
mov
xor
movsb
repz
out
and
and
pop
pop
add
pop
js
pop
es
mov
jp
and
fdivrl
mov
cmpsb
mov
sbb
int
jge
sbb
jo
nop
cwtl
loopne
jmp
or
mov
in
cmp
pop
loop
popa
pop
icebp
xor
sub
adc
lea
or
add
mov
mov
std
insl
adc
in
fwait
mov
jmp
lock
pop
sub
das
mov
andl
xchg
jmp
add
xlat
and
sub
es
cs
pminub
stc
or
scas
adc
js
mov
push
cmp
lods
inc
mov
dec
cmc
push
or
popa
je
add
scas
pop
dec
mov
push
and
sub
insb
xor
or
push
jns
mov
pop
sub
mov
gs
movsb
lods
push
pop
mov
leave
stos
orl
adc
sub
or
add
jno
ret
adc
push
into
out
sub
sub
dec
cmp
dec
cmp
int
popa
sarb
adc
jmp
push
adc
and
repz
jp
jmp
pop
fdivrl
mov
out
cmp
jbe
dec
jbe
and
mov
and
pop
or
xor
xchg
nop
add
xor
sbb
repz
or
ss
aad
aad
icebp
lret
insl
pop
into
adc
mov
xchg
ffree
repnz
and
out
jecxz
dec
or
movsb
jmp
xor
mov
cmp
pop
fs
lret
push
in
rorl
insl
les
sub
mov
mov
and
xchg
data16
xor
fucomip
lds
test
enter
int
addb
lods
ja
pop
dec
and
dec
jle
insl
push
sbb
pop
in
lods
mov
call
nop
and
ror
aam
mov
outsb
imul
subl
add
xchg
xor
imull
call
fmull
cmp
sbb
enter
lods
sbb
or
int3
and
bnd
imul
popa
add
scas
sub
xor
xor
mov
jnp
xor
sub
sbb
hlt
enter
xlat
mov
fmulp
cmp
pop
cwtl
sub
jle
jno
xor
fimuls
cmpl
mov
mov
adc
and
in
es
add
aad
lahf
xor
out
push
jp
adc
inc
arpl
aam
lea
add
insl
sub
and
out
popa
and
jmp
or
jo
mov
xchg
out
rcr
in
test
movups
adc
sbb
arpl
add
orb
pop
shlb
ljmp
adc
mov
sub
adc
jge
jo
xlat
cmp
mov
iret
push
scas
mov
lock
popa
and
call
pop
mov
jmp
not
sbbl
aad
pop
mov
sub
leave
gs
cmp
mov
inc
shrb
sbbb
pop
xlat
pcmpgtb
dec
inc
lods
sahf
dec
adc
xor
and
and
jae
push
adc
subl
arpl
pusha
xor
cltd
jnp
adc
cmp
data16
int
adc
adc
repnz
ret
movsl
cmc
aam
mov
xor
jmp
pop
jle
dec
mov
sbb
mov
sbb
je
xor
mov
push
ja
dec
neg
ficoms
cs
xchg
lret
jecxz
mov
fcomi
psrad
repz
pushf
out
cs
mov
jp
xchg
int3
sbb
popa
xchg
je
sub
lahf
lock
nop
fidivrs
mov
iret
test
repz
jecxz
test
lret
mov
out
lods
int3
mov
int3
cltd
call
cmp
daa
jle
mov
imul
mov
daa
inc
and
int
pop
aad
pop
addl
iret
or
jb
push
into
add
push
add
into
mov
mov
pop
adc
and
lods
xchg
dec
test
cmc
mov
jge
test
loope
jne
sbb
jg
adc
icebp
mov
xor
roll
push
pop
and
inc
push
in
pop
ja
lret
cmp
cmp
inc
data16
dec
repnz
mov
push
loop
push
xchg
ja
subl
imul
aam
push
in
call
or
add
ret
push
sbb
push
in
test
dec
imul
popf
movsl
jl
mov
in
imul
dec
shrb
xchg
hlt
add
jp
sahf
mov
sub
cmpsl
or
push
pop
mov
dec
imul
jg
cmc
clc
dec
sub
inc
inc
mov
mov
xchg
mov
lret
leave
xchg
imul
rclb
sub
stos
cmp
ds
imul
mov
inc
jb
incb
adc
mov
shr
std
xchg
loope
fmuls
adc
inc
add
mov
jnp
or
nop
inc
les
cmpsl
push
mov
xchg
repnz
cli
lods
xor
hlt
pop
das
clc
pusha
xchg
lods
lahf
lods
ja
jmp
push
push
dec
add
bound
cmpsl
sahf
cmp
repz
daa
into
xchg
or
cwtl
adc
pop
mov
inc
sbb
outsb
mov
pop
test
mov
pushf
aad
pop
xchg
pop
dec
pop
leave
or
shr
push
inc
push
lock
roll
sbb
imul
mov
icebp
or
leave
cmp
in
in
dec
lock
mov
sbb
dec
orb
lret
mov
jns
add
mov
ja
push
fs
adc
fs
fwait
inc
adc
out
sub
movsb
mov
nop
les
ret
pop
gs
std
fwait
add
pop
push
pop
xchg
mov
ljmp
or
out
xchg
lahf
mov
mov
roll
sbbl
js
mov
addl
xchg
sahf
jnp
in
cmpl
sbb
mov
shll
bound
add
test
sti
adc
mov
rcll
or
dec
push
cwtl
dec
in
adc
xchg
lahf
inc
ror
ds
inc
push
and
jb
or
test
rolb
cwtl
sbb
insl
cmc
mov
movsb
push
scas
jnp
out
div
mov
push
or
and
scas
int3
shll
sbb
shlb
sbb
ror
cmc
dec
pop
mov
cltd
sti
mov
sub
rcl
sarl
push
ljmp
cmc
push
lods
hlt
push
cli
js
sbb
std
sub
in
cmp
cwtl
outsb
adc
inc
mov
movsb
pop
mov
fimuls
test
and
test
pushf
fwait
mov
jmp
cmpb
pusha
cmc
movsb
xor
mov
lods
mov
out
pop
sahf
cmp
xor
and
flds
push
shrl
mov
adcl
adc
xchg
jae
or
aas
test
pop
fs
jecxz
or
dec
xchg
or
movsb
not
fucomp
push
push
sbb
push
adc
rol
fadd
dec
out
mov
add
mov
xchg
push
cmp
loope
lret
negb
and
insl
mov
cmp
fidivrl
mov
mov
addr16
xor
push
inc
inc
mull
in
cli
test
movsl
iret
xchg
mov
ret
xchg
insl
xchg
xchg
enter
mov
mov
test
subb
mov
jb
sbb
cmp
mov
cmc
test
pop
js
cltd
insl
push
fisubrs
imul
in
dec
adc
daa
jo
jg
gs
mov
or
out
pop
cmpsb
mov
rolb
lods
insl
out
repnz
sbb
xor
mov
jns
movsl
mov
arpl
out
inc
test
cmp
sti
lret
lret
daa
adc
out
add
popa
mov
dec
add
pop
sbb
inc
dec
xor
adc
xor
out
push
inc
mov
xor
in
xchg
xchg
jne
and
or
xchg
loope
test
adc
jp
xchg
push
in
jmp
xor
int
pop
loop
push
mov
jle
mov
cmp
cli
push
mov
arpl
shrb
pop
and
sbb
xor
fwait
sub
adc
cld
dec
mov
cltd
mov
push
popf
cmp
stos
das
jb
mov
daa
jecxz
push
mov
mov
test
std
push
movsl
dec
jnp
and
scas
inc
dec
movsl
mov
gs
xor
push
jae
fwait
sbb
pop
pop
les
jge
addb
daa
and
dec
aas
outsb
ljmp
add
mov
out
call
mov
insl
jl
leave
ja
add
push
push
dec
pop
aad
fnstsw
mov
jnp
sahf
repz
jmp
xor
outsb
stos
cmc
mov
enter
and
mov
xchg
xor
push
xlat
push
mov
stc
lods
pop
add
fstpt
adc
dec
aad
lods
icebp
lds
jo
xchg
testb
jno
pop
jno
jae
je
push
ficompl
in
mov
or
leave
sub
clts
dec
add
xor
mov
ds
fnstenv
cltd
in
cmp
xchg
xor
bound
mov
and
and
push
test
cs
mov
sub
mov
outsb
insl
dec
push
icebp
mov
in
je
xor
mov
inc
jo
mov
notl
and
xor
pop
test
xchg
test
in
repnz
add
jno
imul
jns
add
subb
pop
mov
fimull
loop
into
xchg
fcompl
cmp
stos
ja
mov
ret
cwtl
add
mov
xorb
mov
loop
es
push
repz
lods
pop
stos
mov
pop
aas
cmc
xchg
jno
scas
xor
mov
scas
mov
lock
loope
sti
jmp
or
mov
sarb
jmp
mov
push
push
stos
fdivp
push
out
hlt
movsl
in
fcmovu
mov
inc
xchg
xor
les
nop
ficoml
and
in
xchg
outsl
cmp
bound
aas
movsb
mov
push
or
ljmp
aam
push
aad
xchg
and
xchg
leave
or
mov
cmp
add
ret
mov
std
push
mov
pusha
int
xor
or
mov
pop
xchg
cli
scas
ret
lcall
push
orl
popf
xchg
pushf
mov
push
and
bound
sub
xlat
cmpsb
xor
mov
pushf
cmpsb
dec
fidivs
lods
xchg
xchg
loopne
scas
mov
lods
cltd
jmp
std
adc
insl
xchg
test
mov
dec
dec
push
mov
shlb
popa
mov
xchg
int
inc
aam
idivb
divl
fwait
pop
scas
mov
int
or
cmp
xor
sbb
loope
aad
addr16
push
js
loop
xor
add
repnz
cmp
xor
dec
mov
cmpsb
std
popa
fildll
repnz
dec
shl
addl
jl
ljmp
call
push
mov
cmc
dec
loop
and
xchg
aam
jl
pop
pop
insb
les
es
lods
sbb
jp
lcall
shll
dec
mov
daa
shrl
mov
lret
mov
loope
pop
pop
jmp
cmpsl
mov
bound
imul
dec
cmp
fistl
jno
pop
add
xchg
clc
mov
stc
sub
cmpsl
mov
popl
jg
mov
or
cwtl
mov
dec
pop
addr16
ret
jmp
scas
cmp
mov
scas
mov
or
arpl
ss
in
ror
jnp
sub
add
testb
cltd
in
fcoml
in
stos
dec
fmulp
xchg
push
adc
jge
sbb
pusha
imul
inc
sbb
dec
in
leave
pop
xchg
addr16
sub
mov
cmp
mov
and
mov
lcall
ror
jne
cmp
add
sbbb
leave
fnstenv
ss
cmp
call
sub
mov
pop
mov
and
jno
daa
xor
mov
movsl
stos
sahf
push
rorl
jle
xchg
mov
push
mov
mov
lock
enter
insl
test
imul
add
or
push
xor
add
mov
ja
aas
insb
mov
hlt
dec
inc
mov
and
test
push
mov
fadd
or
lea
cmp
shl
mov
jo
mov
stos
pop
mov
push
cmp
and
stc
fcoms
in
fcomip
sbb
movsb
xchg
sub
or
shl
jnp
dec
mov
fstpl
add
sbb
jne
test
add
xchg
and
pop
or
and
repnz
mov
popa
loop
sub
push
push
repnz
scas
add
lea
fisttps
mov
sbb
mov
pop
stos
ja
inc
lds
mov
sub
push
push
dec
lea
outsb
jg
call
dec
jle
addl
out
xor
and
jb
in
push
popa
adc
jae
and
loope
cmp
fildl
fidivl
in
cmp
cmpsb
xlat
fucom
cmp
shld
inc
repnz
daa
pushf
pop
cli
icebp
fwait
add
ret
out
xlat
out
loope
cmp
xor
icebp
rorl
popfw
xorb
leave
fidivrl
jne
xor
scas
dec
dec
xor
push
or
mov
push
push
arpl
adc
pop
in
xlat
pusha
mov
mov
cmp
add
jo
lahf
xchg
cltd
pop
xor
loopne
lret
lret
mov
dec
std
sbb
inc
les
in
mov
pop
addl
push
pop
jne
mov
dec
jns
insb
pop
fcmovbe
shlb
cld
lret
lods
and
jecxz
fisttps
cmc
mov
xchg
movsb
mov
sahf
cmp
scas
xchg
xchg
jp
sbb
ds
and
cmp
xor
icebp
test
xor
mov
mov
dec
enter
sti
lds
cmp
bound
dec
ds
std
cmc
nop
mov
adc
f2xm1
sarl
cltd
adc
lods
out
cmc
sahf
dec
jns
pop
mov
fs
js
ror
cmp
lds
fidivs
cli
sbb
sbb
test
jge
lcall
loop
and
data16
in
mov
xchg
or
mov
xor
inc
add
hlt
fsts
out
sahf
pop
jge
xor
pop
xchg
cwtl
leave
adc
out
loop
cmpsb
and
int
adc
xlat
xchg
and
mov
ljmp
fisttpll
fwait
lcall
jmp
enter
cmpsb
adc
mov
and
popa
mov
pop
xchg
mov
in
mov
int
lock
fildl
fstpl
bound
repnz
icebp
jns
out
js
mov
push
imul
sub
fimull
gs
cmpsb
hlt
in
fwait
lahf
ljmp
or
adc
pop
add
xchg
dec
mov
mov
icebp
test
fcmovnb
repnz
cmpsl
or
int
fisubl
push
mov
pop
stos
mov
popf
jo
mov
out
jge
jecxz
push
in
xor
fisubs
lea
leave
push
xorl
out
add
stos
fiaddl
shrl
enter
imulb
daa
stos
inc
cmp
jnp
mov
and
jae
push
cli
cmp
pop
call
sbb
call
stos
int
adc
mov
and
mov
mov
rcrb
std
ljmp
push
mov
and
or
int3
pand
or
cmp
jmp
and
loopne
and
fists
sub
sbb
mov
inc
mov
js
xchg
push
jae
cmc
insb
pop
adc
aas
imul
je
adc
lock
jns
popf
pop
xchg
negb
and
roll
in
and
fucom
dec
jmp
inc
imul
ss
test
inc
or
pusha
stos
xchg
push
jle
into
jmp
cld
push
dec
daa
cmp
jg
movl
stc
sti
fimuls
lock
or
or
repnz
loopne
loop
addl
mov
daa
dec
or
stos
in
test
cmp
stc
pop
lds
push
sub
enter
inc
cmp
xchg
cld
pop
in
jmp
out
imul
pop
jnp
vunpckhps
xor
and
jbe
adc
sub
in
or
cli
lock
cmp
orb
enter
xchg
daa
xchg
inc
pushf
dec
loopne
pop
out
mov
scas
in
or
cmpsb
shll
adc
movsb
fdivp
push
push
push
cmpsb
mov
cld
mov
and
cmpsl
lock
xchg
push
push
fidivl
push
and
push
and
inc
mov
sub
rorl
sbb
jl
test
mov
xor
or
dec
pop
sbbb
jl
jb
aad
dec
mov
jmp
pop
int
adc
mov
nop
adc
adc
and
mov
cltd
fs
and
das
out
fisttpll
or
cli
xchg
cmpb
mov
outsb
int
dec
or
inc
xrelease
dec
aaa
and
and
xchg
clc
inc
adc
dec
hlt
stc
cmp
mov
pop
push
push
or
push
fadd
xor
mov
popa
loop
cli
test
mov
xor
adc
cmpsl
sub
and
sbb
and
mov
rol
shll
mov
fsubr
mov
mov
in
xchg
xor
fbstp
js
inc
sub
into
mov
gs
fsubp
or
push
mov
jno
dec
in
add
dec
jne
cmc
push
jns
dec
pop
lock
mov
es
insb
sbb
lock
mov
outsb
outsb
mov
lahf
data16
jmp
cmp
xchg
rolb
and
cmp
movsb
sub
repz
shll
push
leave
jg
xorl
enter
push
int3
jmp
ficomps
in
addr16
shll
outsb
in
out
jle
movsl
and
and
cmpsb
out
icebp
ret
mov
xchg
outsb
mov
popf
xor
mov
in
mov
movsb
jge
mov
std
jle
cwtl
xchg
bnd
clc
cmc
and
adcb
xor
lahf
and
pop
mov
fisubl
pop
es
pop
adc
sbbl
jb
and
push
sub
xor
insl
dec
pop
mov
icebp
pop
pop
lcall
add
adc
loop
lea
mov
mov
cmp
jbe
into
shrl
xchg
xor
adc
repz
movsl
cmp
call
cmc
fidivrl
rclb
cmc
cmp
add
jno
jecxz
push
mov
push
sarl
pop
jmp
std
mov
fdivs
sti
pop
test
jmp
mov
mov
data16
xor
stos
repnz
add
xchg
add
roll
and
or
hlt
cmp
mov
test
pop
pop
call
or
add
cmc
test
xor
inc
adc
outsl
clc
cmpsb
loop
imul
int
add
push
mov
cmpsl
jmp
ud2
and
in
or
arpl
cmc
push
rorl
xor
stc
mov
test
or
hlt
xor
adc
pop
repz
mov
lcall
pop
jo
andps
add
push
ret
pop
mov
push
sbb
mov
lahf
push
addl
jne
adc
aas
sarl
mov
push
adc
jg,pt
outsl
mov
popf
insl
xor
mov
sub
push
mov
xor
mov
mov
data16
insl
rcr
adcl
imul
xor
scas
fwait
cld
stos
dec
xor
lcall
add
adc
cmp
mov
repnz
lock
loop
push
insb
push
pusha
adc
pop
test
fsubrs
pop
push
shrl
lods
ja
out
mov
popa
arpl
jle
mov
mov
add
stc
add
int3
xor
xorb
mov
xchg
xchg
mov
adc
and
dec
mov
pop
lcall
pop
addr16
lret
mov
lods
xor
add
in
xchg
stc
fists
mov
inc
in
fidivs
xchg
add
ret
ss
jno
push
int
repz
cmp
aaa
sbb
dec
cwtl
sub
xor
jge
or
mov
mov
pop
mov
das
sbb
adc
loopne
loopne
xchg
leave
adc
pop
stos
lods
cmp
data16
add
lods
scas
lods
jno
mov
lret
fidivs
pop
insl
jecxz
test
lret
fsubrl
xlat
or
mov
dec
or
pop
and
iret
mov
push
inc
or
enter
aam
out
inc
loop
push
inc
xor
je
adc
jg
cmp
mov
jge
pop
xchg
xor
pop
aam
mov
and
js
pop
jp
test
shl
dec
aad
mov
repz
sbb
xor
fs
icebp
inc
sub
lods
mov
inc
pop
jmp
shll
mov
xchg
mov
lahf
shlb
inc
mov
xchg
out
pop
sbb
push
icebp
push
mov
pop
in
pushf
hlt
in
mov
jnp
in
scas
and
insl
popf
stc
or
in
movsl
sar
hlt
push
rcrl
mov
in
rol
push
rorb
shrb
aaa
inc
add
push
repnz
dec
divps
out
pop
popf
ljmp
or
and
pop
mov
mov
adc
mov
xorb
or
cld
sbb
inc
into
movsl
stc
lret
push
andl
mov
sbb
mov
ret
insl
movsl
mov
rolb
std
outsb
hlt
scas
mov
push
gs
icebp
jo
push
shr
pop
ret
xor
inc
mov
adcb
ds
pop
push
mov
shl
xchg
je
nop
jae
lods
mov
cltd
xchg
mov
pop
idivl
rolb
cld
in
add
mov
xor
bnd
jecxz
xor
in
jno
mov
push
sub
jmp
mov
out
xchg
adc
jb
enter
mov
loopne
cld
and
jae
jl
cmp
cmpsb
icebp
icebp
out
mov
dec
jo
pushf
ja
in
inc
adc
out
lods
sbbb
popa
sti
mov
enter
mov
and
inc
dec
cmc
test
rcr
bound
adc
aaa
push
fldenv
cli
push
insb
or
sub
pop
jo
sahf
push
insl
fcom
mov
bound
movl
shl
inc
popf
sub
ret
lcall
rorl
movsb
pusha
dec
sub
aam
and
imul
mov
jl
push
mov
lds
inc
sbbl
jae
scas
sub
loop
lret
test
xor
call
mov
sub
test
lds
hlt
mov
inc
out
mov
imul
shr
adc
lcall
lods
je
push
xchg
cmpsl
outsl
mov
cmpsb
mov
test
int
lds
dec
inc
adc
sbb
push
mov
or
xor
aaa
mov
or
in
dec
add
xor
or
adc
stos
and
int
daa
in
sti
popa
rcrb
addl
pop
aas
xchg
xchg
adc
cmp
popaw
orb
dec
subl
lea
add
add
ficoms
push
test
jns
mulb
push
inc
xchg
shrl
roll
das
icebp
scas
jne
pop
arpl
icebp
leave
shll
ss
jae
add
cmpsl
and
popf
mov
or
xor
mov
mov
scas
in
cmp
xchg
subb
or
jns
pop
adc
xchg
push
xchg
push
mov
dec
sbb
pop
fsubp
rcl
push
into
into
ficoml
mov
inc
mov
and
and
cmp
cmc
repnz
mov
out
fcompl
out
aad
dec
sub
stos
jns
adcl
leave
sub
insl
push
pusha
mov
xchg
mov
and
and
lret
test
sahf
mov
xchg
lret
mov
idivl
gs
lock
or
lock
and
and
test
negb
popa
ret
dec
aad
arpl
popf
fidivrs
pop
and
mov
jg
vmread
sub
test
mov
push
add
jge
movsl
and
lods
test
cmc
test
or
pop
and
mov
outsl
push
lret
shlb
sub
imul
fwait
popf
jo
ss
mov
sbbl
cmp
loopne
loope
aaa
push
mov
repz
loope
dec
mov
xor
lcall
dec
movsb
repnz
cltd
cmp
sbb
mov
inc
jne
into
inc
pop
shr
mov
and
xor
popf
cmc
mov
mov
push
loope
out
popa
sbbb
jecxz
int
stc
gs
in
pop
sub
push
sub
dec
ss
fstpl
mov
data16
outsl
adc
addr16
icebp
gs
inc
mov
lret
adc
cmc
repz
data16
shrb
pop
mov
mov
mov
xchg
in
inc
inc
bound
pushf
push
add
rcr
iret
cmpsl
xchg
xor
sbb
cmp
ss
lds
push
in
xchg
mov
scas
sbb
cmp
inc
and
lret
push
sarb
mov
mov
leave
add
insb
enter
jp
mov
lret
push
imul
scas
lods
and
jl
adc
dec
ror
mov
lret
aas
mov
sahf
xor
popa
adc
inc
sahf
add
mov
flds
pop
fidivrs
in
fstpl
shlb
outsb
fcmovu
dec
mov
mov
push
lcall
pop
pop
decl
xchg
sub
mov
pop
das
lret
daa
jl
push
addb
or
mov
cwtl
xchg
icebp
pushf
mov
and
stos
push
and
test
not
popf
xchg
mov
add
inc
mov
inc
loop
fidivl
insb
cmpsl
dec
ds
inc
and
test
jae
add
push
xchg
pop
mov
out
in
lods
into
cwtl
add
imul
sarb
out
pop
or
mov
in
ss
jns
idivb
mov
jnp
add
or
loopne
hlt
mulb
dec
mov
orb
std
add
in
dec
add
push
pop
call
dec
jmp
mov
sahf
xor
aaa
pop
adc
sub
in
lds
sub
jg
bound
and
andl
inc
push
ret
call
rol
xor
aad
repz
in
push
test
or
roll
je
loop
mov
icebp
cs
test
cld
sahf
push
call
insl
dec
dec
mov
lret
fucomip
mov
jnp
jle
mov
or
rorb
add
aam
stos
pop
pop
into
lds
jbe
cld
lods
loopne
fwait
mov
push
dec
js
dec
mov
mov
pop
in
dec
mov
pop
dec
fs
add
test
js
imul
out
adc
imul
popf
mov
adc
ret
scas
xor
fbld
mov
sbb
mov
lods
outsl
call
in
stos
cmc
nop
mov
cwtl
rcll
pop
pushf
in
lret
pushf
movsb
daa
or
push
mov
sub
sbb
adc
mov
mov
in
or
repz
push
dec
lret
aas
or
stc
mov
addr16
cmc
fiadds
or
and
jge
arpl
addr16
lods
jb
lds
bound
insb
sub
insb
adcb
jmp
inc
push
push
xchg
sub
jno
mov
and
jns
jp
cmp
jecxz
and
lock
adc
scas
xchg
push
mov
iret
mov
adc
enter
inc
dec
ret
movl
lods
mov
icebp
orb
sahf
mov
mov
inc
stos
xor
xchg
notb
sub
decb
in
xchg
js
out
in
push
ljmp
repnz
and
cli
lods
dec
icebp
mov
or
sahf
jp
sbb
mov
sub
lods
mov
addr16
cmp
xchg
or
or
mov
mov
push
addb
mov
push
and
xor
hlt
adc
and
jno
into
push
imul
cwtl
es
lret
fistpll
mov
fisubrs
sbb
fidivrs
insl
aam
mov
icebp
xchg
jae
dec
xchg
and
dec
frstor
in
adc
mov
jne
inc
mov
int
push
in
jge
das
jmp
add
dec
stos
test
adc
pop
leave
jb
fs
add
lret
lods
in
xchg
sbb
and
or
dec
add
fisttpll
inc
les
lcall
aam
mov
fsubrp
fwait
js
mulb
and
out
push
gs
div
test
insl
out
imul
lds
push
push
out
imul
adc
std
dec
scas
mov
cmp
dec
iret
roll
jnp
mov
and
cli
ror
ljmp
imul
shlb
ja
aad
jecxz
inc
in
lret
aad
pop
cmpsl
std
xchg
outsl
leave
imul
hlt
inc
xor
cmpsb
pop
call
mov
sarl
in
adc
xor
mov
into
cwtl
out
inc
mov
vpunpcklqdq
pop
cltd
push
mov
sub
iret
lea
jae
pop
pop
fsubrs
jb
lahf
test
sti
outsb
mov
out
and
jo
shlb
dec
mov
mov
pop
cmc
xchg
fcoms
mov
pop
insl
ret
rcrb
inc
cli
outsl
mov
aas
mov
or
push
popf
sahf
ss
out
rcrb
xor
cs
popa
cmc
cmpb
xchg
fstl
push
cmp
test
push
add
push
sub
leave
inc
ret
xlat
in
jb
pop
dec
in
adc
sbb
ret
dec
pop
pop
mov
sarl
hlt
mov
scas
dec
mulb
divl
and
push
mov
ss
mov
andb
and
fiaddl
fwait
jle
dec
scas
mov
inc
pop
push
mov
mov
popf
test
sbb
inc
fwait
in
movsl
mov
stc
inc
loop
or
push
jns
jns
ret
or
adc
les
jne
or
lahf
lret
add
inc
cli
mov
pop
mov
dec
int3
imul
lds
mov
add
mov
mov
mov
dec
es
jno
addl
lret
dec
bound
push
pop
fiadds
jne
es
sbb
aam
mov
jns
inc
jno
xchg
pop
hlt
dec
rcll
and
rcrl
cmc
into
dec
xchg
negb
add
add
dec
ret
adc
push
push
fcomip
pavgw
leave
mov
out
jmp
add
repz
fistl
adc
rol
test
inc
enter
cltd
mov
jbe
jle
mov
mov
lods
inc
inc
and
mov
movsl
mov
mov
jg
pusha
imul
mov
jecxz
mov
dec
jmp
movb
and
mov
xor
and
repz
jns
sub
dec
in
std
icebp
lock
gs
and
out
outsl
ficomps
and
sub
es
sarl
add
lods
xchg
jle
cmp
rcr
subl
xor
sbb
loop
adc
andl
cmc
lock
int3
mov
and
scas
add
in
mov
repz
test
inc
mov
mov
sbb
enter
sub
ss
push
leave
mov
aad
inc
xchg
in
cmpsl
ret
pop
mov
mov
and
icebp
scas
mov
mov
xor
lock
movsl
adc
ret
inc
sbb
jmp
inc
shll
jnp
cld
fistpll
decl
out
int3
aad
mov
inc
lds
mov
or
mov
cli
jne
mov
das
jmp
dec
movsb
cmp
mov
dec
or
or
mov
pop
sbb
mov
int3
push
popa
or
scas
int3
leave
int
mov
int
sub
enter
jne
mov
dec
pop
dec
ffree
add
mov
nop
push
je
and
ljmp
std
mov
repz
cli
mov
gs
adc
adc
jmp
pop
outsb
psllq
cmpb
dec
rcrl
pop
sarl
pop
in
icebp
and
sbb
out
mov
sub
or
fbstp
rcll
push
jle
movsb
sub
fdivrp
ja
xlat
dec
sbb
dec
cwtl
mov
jo,pn
cmpxchg
dec
and
pop
out
int3
shrb
clc
cmp
cmp
jmp
fldenv
daa
popf
dec
adc
in
mov
shrb
loope
imul
mov
cs
test
inc
bound
packssdw
mov
shll
mov
hlt
xor
xchg
test
cmp
xor
fadds
dec
or
mov
jmp
jne
lret
test
jae
lcall
popa
or
and
mov
popa
ffreep
ret
icebp
imull
mov
sbb
fildl
mov
mov
mov
push
or
lods
pop
sub
dec
out
inc
mov
iret
jge
cli
mov
fldcw
xchg
stc
pop
add
mov
mov
pop
and
insb
adc
sbb
in
mov
loope
cmc
out
cmp
lods
push
inc
cs
dec
popa
jo
mov
ds
fidivrl
xchg
leave
sbb
sub
and
jmp
jmp
sti
ret
flds
mov
rcrb
adc
sbb
mov
pushf
movsb
and
scas
outsb
or
dec
mov
loope
pop
cmpb
pop
ret
loop
xchg
ja
in
xchg
insl
ffree
pop
push
in
add
jp
loopne
jnp
insb
rcrl
jne
mov
and
xchg
lahf
mov
movups
fwait
rcll
inc
or
mov
jbe
add
jmp
adc
bound
cmpsb
fs
cmc
push
int3
and
cmc
mov
pop
add
lret
data16
cmpsb
fsubs
hlt
lret
shlb
test
pusha
loopne
lahf
into
jmp
or
das
sahf
xor
bound
divb
dec
adc
xchg
mov
sbb
add
pop
sar
and
add
ror
inc
repz
push
orl
sub
dec
shrl
push
inc
mov
inc
or
dec
out
add
mov
dec
sub
clc
movsb
cmc
leave
mul
xor
sbb
movsl
sub
jl
hlt
and
sbb
mov
jge
xor
leave
sahf
mov
or
push
fisubrs
lahf
mov
fnsave
jg
add
clc
fistps
incl
and
dec
sbb
jp
jb
mov
sub
repnz
ds
adc
out
xlat
inc
xor
jg
movsl
or
fs
cmp
mov
mov
outsl
sbb
and
pushf
or
dec
scas
dec
pop
or
outsl
pop
mov
mov
movsb
mov
and
movsb
add
lea
sarl
hlt
inc
mov
add
mov
iret
cmc
cmp
inc
inc
enter
cmc
rorb
jbe
dec
push
repnz
in
and
test
dec
lds
pushf
mov
inc
jno
fimuls
push
mov
lods
jl
xchg
xor
add
adc
loope
or
cmpsl
cmp
scas
mov
int3
jo
xchg
jle
mov
jno
inc
inc
xor
add
pop
jno
mov
add
ja
lret
jbe
ret
outsb
adc
or
or
and
dec
iret
xchg
movsb
aaa
outsb
pop
mov
movsb
and
jp
adc
dec
pop
mov
adc
mov
xor
cwtl
call
int
in
adcl
pushf
lds
imul
adc
pop
out
jae
hlt
movsb
dec
inc
iret
in
fcoms
insl
scas
inc
jmp
fdivs
clc
call
xor
cli
jge
enter
popf
lock
push
cli
mov
paddusw
mov
or
pusha
movsl
iret
clc
sti
dec
mov
dec
sbb
fisubrl
in
xor
ljmp
sub
ficoms
cmp
inc
popf
sbb
mov
das
mulb
cmpb
xor
mov
sahf
cmp
fnstsw
xlat
ljmp
inc
shl
faddl
sbb
push
mov
rcrb
xor
mov
mov
push
mov
and
gs
mov
sahf
hlt
sbb
test
mov
cwtl
sbb
repnz
out
scas
fwait
fwait
sbb
data16
xchg
daa
fisubrl
int
sbb
fcmovne
ret
into
fsubp
outsb
sti
mov
and
imul
mov
ljmp
sbb
and
fnstcw
leave
push
lds
jo
sti
out
mov
xor
sbb
mov
es
ljmp
adc
xchg
movsb
nop
dec
or
add
cmp
jp
push
dec
sub
push
push
les
ljmp
and
testb
mov
loope
xchg
stc
stos
stos
mov
and
or
and
sahf
mov
pop
or
leave
in
mov
insb
je
je
adcl
sbb
xlat
mov
dec
ret
lret
fwait
pop
mov
sub
sti
lock
jecxz
jo
mov
xor
jno
gs
add
lret
add
xor
fstpl
mov
sub
cmpsl
jmp
add
dec
ss
push
lret
ret
in
stos
cmp
jmp
xchg
fldcw
push
rcl
faddl
jg
xlat
sbb
sbb
add
iret
xlat
out
cmp
and
bound
bts
icebp
push
push
cmc
cmc
pop
out
pop
test
adc
outsb
add
roll
and
mov
jg
shl
das
into
xor
subb
inc
lahf
in
je
fiaddl
arpl
inc
and
mov
lods
cmc
jbe
mov
mov
es
stc
cmp
mov
mov
dec
inc
stos
popf
gs
ret
jnp
in
fbld
sbb
fsub
out
dec
int3
jecxz
lds
mov
mov
into
in
fld
lds
out
push
rcll
aam
pushfw
or
stos
lods
xchg
or
fidivl
ja
fwait
push
sbb
pop
or
out
sub
mov
mov
int
in
stos
xchg
mov
out
rorb
incb
stos
push
jbe
jmp
dec
test
and
dec
pop
ficompl
cmpsb
test
mov
jmp
sub
xchg
mov
dec
xlat
test
cwtl
and
push
imulb
jns
subl
out
pop
xchg
ja
add
int
mov
and
scas
shrb
movsl
fs
dec
ja
test
sbb
pop
out
jge
sub
ja
cmpsb
push
aad
rolb
fs
xchg
lret
jmp
push
push
push
aaa
in
test
aam
mov
repnz
dec
xchg
sbbl
xchg
out
cmc
cltd
jno
fsubl
pop
shl
or
xor
push
adc
xchg
test
push
adc
jmp
or
xor
xchg
loop
enter
xor
jb
sub
mov
inc
lahf
fbld
fldcw
and
shl
out
movsb
and
lods
popa
fmul
xor
push
pusha
sbb
sbb
mov
out
push
sbb
jb
loope
lcall
clc
cld
dec
xchg
lret
stos
dec
jb
mov
xchg
pop
ja
cmp
adc
stos
xor
lock
fidivrs
dec
dec
pop
or
pop
pop
jle
ret
jl
or
into
loope
outsb
xor
cmpsb
mov
cmc
adc
mov
xor
bnd
stc
pop
jns
lea
mov
movsl
int
dec
mov
filds
jmp
in
shrl
imul
scas
mov
xchg
xchg
or
add
lea
ds
cld
int3
sbb
notb
add
mov
in
push
int
pushf
lret
in
push
shl
dec
cmc
or
cmpsl
decl
fstp
mov
mov
insl
xchg
xchg
xor
inc
push
push
mov
lret
push
push
pop
jns
and
sub
or
gs
sahf
xchg
lret
jmp
fiadds
sub
and
call
jne
dec
mov
jl
scas
je
mov
cmp
insl
in
test
bound
or
hlt
jmp
sahf
jecxz
or
pusha
stos
scas
repnz
ret
and
sbb
mov
sbb
pop
repnz
mov
shrl
in
lahf
adc
in
fnstenv
scas
data16
pop
out
pop
clc
insl
pop
jbe
adc
dec
xorb
icebp
mov
in
lret
int
xchg
cmp
ret
les
inc
pop
lods
mov
xchg
xor
pop
mov
cltd
cmp
add
push
insl
inc
or
adc
xlat
mov
mov
cmp
loop
loopne
in
push
mov
xor
sbb
sub
aad
or
dec
scas
lock
xor
xor
inc
nop
idivb
lea
fimuls
mov
mov
test
orb
mov
add
mov
cmp
test
jmp
add
hlt
adc
mov
in
jge
inc
adc
movsl
and
shlb
test
ja
or
loope
pop
add
jbe
loope
stos
pushf
mov
pop
lea
lods
out
sub
loope
add
cmc
pop
mov
loop
sub
scas
data16
into
add
jge
nop
xor
xchg
cmpsl
int
and
fnstenv
in
stc
fs
xchg
ret
mov
cli
movsl
jo
and
add
mov
jmp
or
mov
dec
xchg
jne
or
or
sbb
mov
pop
fcomps
gs
push
xchg
push
cltd
and
mov
sbb
mov
and
mov
shll
xchg
pop
mov
sub
xor
fwait
les
pop
lea
aas
stc
push
jns
dec
imul
daa
lods
hlt
dec
sub
sti
xchg
sbb
cli
push
inc
fists
arpl
add
loope
xorl
notb
int
lret
lods
cs
dec
push
js
xchg
inc
or
in
jge
divb
in
lock
movsb
popf
mov
leave
call
or
or
add
and
popa
sub
adc
leave
push
dec
jne
mov
inc
adc
ljmp
idiv
in
out
in
repz
movsl
fsubr
lods
push
cld
cmp
repz
loop
pusha
and
mov
xchg
push
mov
mov
xor
mov
jecxz
cmp
and
push
sbb
sbb
mov
pop
repnz
test
mov
mov
inc
dec
mov
mov
imul
shll
mov
mov
adc
lods
pop
and
xchg
and
leave
int
or
ljmp
sbb
adc
mov
xor
mov
cmp
call
repnz
stos
mov
xor
jmp
push
push
fs
dec
jnp
dec
loopne
mov
mov
mov
std
ds
push
dec
push
mov
and
lods
je
sub
jo
fcomp
pushf
cmp
inc
push
mov
fbld
fcoml
es
ja
add
cmpsb
mov
pop
ret
repz
add
fisubs
fistpl
sub
insb
fwait
mov
call
rcrl
push
mov
icebp
xchg
out
das
xchg
push
xchg
dec
cld
cld
sbb
popf
xchg
cmp
jmp
mov
push
divb
adc
fidivs
cltd
mov
iret
lods
mov
iret
enter
cmc
fiaddl
pop
call
loopne
mov
je
ret
xorl
dec
fldcw
xor
or
cmp
mov
push
add
mov
in
outsb
rcrl
enter
xor
gs
popf
or
cld
sarb
cmpb
gs
mov
add
test
gs
jb
stos
lods
call
pop
or
lods
mov
pop
cmp
add
and
mov
pop
arpl
jmp
outsl
sarb
cmp
xchg
out
call
xchg
repz
rep
push
mov
mov
xor
shlb
shlb
std
or
cmc
jecxz
int
mov
mov
ljmp
mov
dec
aaa
dec
rdtsc
cli
loope
mov
and
popf
into
inc
jnp,pn
or
jns
in
js
in
jp
lock
inc
adc
inc
out
jbe
leave
adc
testb
and
xor
inc
pop
std
mov
sub
adc
cmp
jmp
cmp
lret
jge
push
sbb
sbb
xchg
movsb
inc
fnsave
and
test
lea
in
mov
scas
lds
shlb
pop
stc
aam
jne
dec
cli
xchg
push
jle
dec
jecxz
adc
int3
dec
mov
xor
pop
fists
or
pop
jo
mov
das
jb
clc
sbb
fs
js
mov
mov
arpl
or
repz
filds
pop
fwait
mov
inc
into
xor
aam
je
in
xchg
cld
inc
jbe
imul
ja
int3
push
in
hlt
mov
lock
scas
mov
push
pop
fwait
pop
xor
inc
xchg
cmp
mov
in
in
lcall
scas
cmpsb
mov
push
add
adc
popa
push
je
dec
imul
or
xorb
add
enter
popa
ljmp
test
pop
jl
int3
sub
insb
dec
cmpsb
insl
stc
ljmp
stc
push
add
loop
jge
movsl
shrl
loop
mov
gs
mov
mov
push
add
cmpsl
loop
jge
scas
lods
sub
jecxz
and
lret
fsubl
mov
mov
outsl
jbe
leave
leave
jns
or
insl
add
pop
push
and
jge
or
or
in
icebp
lds
out
aad
aad
push
xor
jns
jno
jb
gs
jno
fs
in
pop
movsl
push
cwtl
roll
fstpl
or
pop
icebp
xor
fwait
leave
lds
add
in
imull
dec
lret
fs
pop
mov
jg
fstps
jg
dec
ss
pop
fstps
jg
dec
push
in
and
xchg
mov
jg
ret
pop
sub
loope
xor
aad
into
sbb
adc
dec
ds
pop
xchg
sbb
out
int3
jge
jne
jno
fimull
push
jecxz
ds
mov
push
pusha
pop
mov
jp
cmp
or
and
rcll
ss
popl
mov
and
mov
dec
lock
mov
mov
inc
inc
and
pushf
inc
dec
mov
imul
daa
inc
jecxz
jne
xor
lret
dec
push
push
or
loope
pop
ret
test
and
dec
shlb
xchg
and
jle
sub
dec
gs
daa
sahf
dec
adc
jno
dec
and
test
sbb
xchg
jmp
xorl
out
xor
jno
imul
jge
add
xlat
xchg
std
lods
jg
pop
mov
push
mov
sbb
icebp
movsb
push
pop
and
ljmp
ret
pop
xchg
lock
stc
lcall
lcall
repnz
push
add
mov
sarl
insb
sub
test
push
mov
mov
fdivr
stos
dec
sub
adc
scas
pop
xchg
inc
test
cmp
pop
aam
out
xor
gs
andl
and
sbb
mov
xchg
push
into
lds
out
or
popa
lcall
es
ss
mov
sbb
adc
dec
mov
cmpsb
xchg
push
popa
outsb
je
cmp
pop
out
or
addl
mov
imul
mov
cli
daa
lret
and
fdivrp
add
dec
add
pop
in
and
xchg
mov
cmp
sbb
and
mov
jae
mov
cltd
lds
mov
int3
popf
ret
js
fwait
inc
ret
mov
movsl
jo
insl
push
dec
xchg
repnz
push
push
shll
clc
mov
mov
cmc
stos
xor
aad
clc
pop
ljmp
jne
push
sbb
add
push
jmp
dec
lods
pusha
xchg
and
mov
pop
out
fsubl
mov
dec
push
loop
lods
xor
lods
fbld
loope
mov
sahf
cwtl
js
clc
adc
es
adc
std
adc
out
sahf
shll
je
repz
sbb
sub
mov
mov
out
mov
pop
and
add
xor
out
inc
sub
outsl
mov
jno
vpsubw
push
stos
inc
icebp
mov
or
ret
lock
mov
push
add
stos
xor
mov
inc
fwait
test
adc
sub
or
mov
cmpsb
mov
stos
mov
imul
pop
aas
arpl
xchg
jae
adc
sti
andb
and
dec
sbb
xor
hlt
mov
adcl
leave
sub
add
int
mov
sbb
add
aas
jns
jnp
and
jmp
sbb
jp
jp
lock
movsb
jge
xor
gs
push
xchg
das
push
mov
in
inc
mov
push
into
pop
ljmp
movb
shrl
movsl
cmc
xor
and
ret
cmp
test
push
out
dec
dec
add
clc
jge
mov
mov
push
test
xchg
aam
int
lahf
adc
sbb
ljmp
and
insb
xor
ljmp
jbe
dec
lock
mov
test
adc
sbb
mov
and
or
jne
mov
inc
clc
sti
jle
sbb
jp
cwtl
shlb
je
xchg
fists
cs
adc
push
aad
insb
xchg
fists
fildll
imul
enter
cmp
add
loopne
mov
push
pusha
pop
xor
inc
aas
jmp
stc
int
fwait
fs
lret
inc
lea
cmp
xor
or
in
xchg
cs
cltd
add
push
and
xor
fisttpl
lds
movups
cmp
lahf
rcrl
push
or
cmp
mov
xchg
mov
call
inc
aas
test
xor
addb
cmp
jl
sub
shrl
adc
hlt
dec
inc
stc
repz
pop
nop
into
insl
jns
sbb
repnz
add
or
cmp
mov
outsb
jne
jle
sbb
xorb
or
bound
rcl
iret
fwait
mov
mov
shlb
les
js
pop
cmpsl
lds
in
inc
mov
mov
push
xorl
cmpsb
inc
insl
mov
arpl
cwtl
test
mov
mov
imul
add
data16
in
out
imul
xchg
fldcw
sub
add
adcl
or
dec
lret
pop
ljmp
xchg
sti
add
push
loope
inc
fildl
lcall
jl
adc
and
xchg
rcrb
jmp
pop
gs
dec
icebp
stos
test
xor
add
and
cltd
jle
jbe
add
pop
movsl
fucomp
adc
faddp
or
gs
and
and
or
fs
rcrl
lods
pop
scas
jle
push
xlat
outsl
pop
fdivrl
outsb
in
inc
xchg
repnz
mov
mov
out
addr16
rcll
mov
test
jo
pusha
daa
adc
jnp
outsb
mov
insb
cmc
sbb
mov
adc
adc
ficomps
cmp
outsb
xchg
pop
cmp
std
cmpsl
cmp
xor
repnz
and
cmp
ret
fwait
sbb
movsl
lods
xchg
gs
aad
repz
add
jmp
push
loop
mov
mov
lahf
loop
xchg
pop
mov
xchg
sahf
bound
gs
and
mov
push
mov
xor
js
or
dec
adc
sub
ljmp
shrb
push
fwait
in
and
push
mov
cmp
jae
orb
inc
or
cmc
outsl
jl
in
jp
pop
jmp
dec
bound
xor
sbb
mov
and
mov
ljmp
rolb
test
out
inc
add
and
mov
rorb
jae
mov
pop
and
mov
push
push
xchg
inc
pop
jne
xchg
nop
in
or
into
jg
pop
pop
and
dec
jecxz
mov
jp
icebp
sbb
push
scas
in
sbb
and
nop
aam
cmc
ljmp
cld
mov
cmp
pop
sti
pop
fmuls
dec
in
sub
cli
or
mov
inc
int
push
mov
and
and
add
xchg
in
insl
cwtl
cmc
xor
into
push
cmp
adc
or
jno
mov
adc
inc
jg
cmp
cmp
mov
out
ja
fiaddl
rorl
and
imul
nop
mov
notb
call
dec
mov
xchg
dec
ss
inc
cli
dec
jae
cmp
jl
sahf
sbbb
push
insb
xchg
jge
and
mov
lds
out
test
jb
jns
sub
push
jnp
sub
jns
idivb
push
cmp
cmp
test
gs
mov
sbb
fwait
pop
fimuls
sub
popf
hlt
jle
out
xchg
add
ffree
xor
pop
insb
mov
add
insb
cmp
add
xor
std
ret
stc
mov
xchg
xchg
xchg
jbe
inc
xor
js
mov
in
test
in
add
lods
in
mov
ds
aad
dec
inc
lds
fwait
cld
lods
mov
lods
mov
in
and
jle
sbb
outsb
xor
lret
cs
jns
mov
sbb
jmp
out
imul
shr
in
dec
pop
xchg
sub
mov
mov
mov
call
xchg
adc
xor
fidivrl
add
out
xor
inc
xchg
dec
xor
dec
sub
sub
fadd
pop
sahf
mov
pusha
pop
fbstp
adc
inc
mov
sbb
fsubs
sbb
in
shrl
popa
loop
mov
daa
fwait
imul
cmpsb
mov
aad
mov
loopne
add
aaa
dec
in
lret
pop
mov
add
push
cmp
loopne
adc
push
ret
gs
adc
loopne
adc
mov
outsb
daa
xchg
cs
mov
in
fistl
inc
mov
sub
cld
sarb
ss
ficoms
push
mov
push
leave
addb
pop
jae
pop
std
and
jns
inc
fisubs
mov
sar
rcll
jo
insl
out
pop
mov
mov
lahf
sub
std
push
jb
or
jae
repz
jne
hlt
or
lods
ret
out
movsl
cmp
xbegin
loop
dec
icebp
popa
out
sub
repz
mov
adc
addb
lods
lock
repnz
mov
jb
pop
mov
je
cli
movsl
les
out
jns
pusha
movsl
xor
fbstp
les
mov
filds
data16
std
xor
pop
jne
fstp
sbb
jno
cmpsb
pop
dec
insb
lret
xor
imul
jno
add
xchg
dec
mov
mov
lods
or
ljmp
scas
leave
lds
rcrb
imul
mov
loop
shl
push
dec
dec
push
sahf
stc
pop
push
shlb
or
scas
xor
pop
mov
stc
or
jno
js
xor
mov
cli
pusha
mov
setle
out
jg
or
adc
jecxz
inc
fnsave
fisttps
xchg
add
insl
ret
inc
in
out
jecxz
cmc
mov
aad
nop
and
das
pop
push
adcl
iret
ja
jle
int3
cmp
jge
movsl
sub
mov
mov
and
stos
cmp
pusha
adcl
leave
jg
mov
sub
cmp
movsl
push
andb
insl
out
xchg
xor
mov
mov
lret
sbb
decb
push
dec
lods
je
leave
imull
jg
dec
and
dec
mov
or
ret
mov
mov
divl
sbb
mov
mov
sub
add
push
sbb
aad
push
inc
fcoms
pop
mov
in
dec
je
jo
mov
scas
jae
sub
lods
cmc
dec
cmp
jbe
idivb
imull
cli
mov
mov
dec
stos
or
das
ljmp
sub
or
je
rorb
icebp
jbe
test
aaa
cltd
insb
fdivs
movsb
dec
repz
dec
push
cmp
or
xchg
andl
aas
roll
or
mov
sahf
pushf
jns
dec
or
lahf
jno
xchg
loopne
cs
shlb
jb
gs
mov
push
movsb
jno
pop
ljmp
out
pop
cmp
sub
jne
xor
adc
jmp
dec
nop
pushf
jno
mov
jle
push
fdivl
xor
add
popf
cmp
sahf
mov
sarb
in
mov
cmpsl
jnp
and
aam
adc
test
dec
or
lock
mov
push
xchg
cs
test
xchg
dec
xchg
call
xor
sbbl
adc
adc
sub
jmp
dec
sub
sarb
mov
aaa
daa
xor
sbb
scas
ret
bnd
or
xchg
lret
filds
notl
xchg
ljmp
ficomps
pop
xchg
dec
dec
out
int
mov
mov
sbb
aam
rcll
mov
fstp
lret
dec
sbb
pop
add
xchg
cmp
rcll
xchg
js
and
cmp
push
iret
clc
mov
lods
lgs
std
fsubrl
stos
adc
lret
and
pop
xchg
xor
stc
push
ja
in
or
in
sub
adc
adc
cld
inc
repnz
test
pushf
ss
adc
adc
jno
sub
les
outsb
inc
push
adc
idivl
es
scas
dec
pop
ss
add
dec
mov
cmp
call
insl
push
cmc
add
call
push
adc
imul
or
jne
and
adc
xchg
mov
loop
out
add
sub
cwtl
xor
push
or
pop
mov
jne
test
lahf
jno
rcl
xchg
lods
inc
and
fisttpll
repnz
jle
xchg
fsubr
frstor
xor
xor
lcall
adc
sahf
dec
sub
inc
inc
adc
and
jno
std
mov
in
push
mov
adc
mov
jecxz
lods
in
mov
out
inc
ljmp
adc
jecxz
inc
clc
add
pop
mov
dec
movsb
rcll
imul
loop
in
xchg
dec
xor
jle
jnp
add
add
cmpsb
pop
stos
and
out
pushf
xor
ret
mov
xchg
push
movsl
ficomps
xchg
dec
jno
sbb
pop
ficoml
xchg
adc
xor
leave
adc
and
sbbb
cmp
vpmaddubsw
lock
push
andb
adc
or
or
inc
fadds
mov
cmc
in
data16
dec
sbb
and
out
xor
or
push
in
pop
mov
sbb
inc
lahf
mov
gs
shl
xor
mov
mov
test
jle
dec
nop
repnz
insl
xor
add
std
mov
scas
dec
faddl
pop
sbb
clc
fisubrs
xchg
xor
lcall
int3
test
mov
stos
mov
adc
pop
icebp
xor
insl
mov
fwait
sbb
inc
jne
xor
dec
inc
jl
sbb
arpl
loope
icebp
enter
jne
xor
dec
das
mov
in
bound
sbb
outsb
xor
sub
dec
push
jge
les
and
icebp
mov
setge
jns
and
and
dec
lods
cmp
std
call
ja
jne
jb
add
mov
je
movsb
test
lcall
stos
xorl
sub
lcall
adc
test
lods
cld
jno
add
imul
mov
insl
sbb
sub
aad
sub
mov
hlt
jb
mov
shl
dec
sarb
int3
adc
aam
shr
filds
xor
mov
adc
add
mov
packsswb
mov
lahf
jne
cmpsb
mov
repnz
outsb
mov
adc
push
mov
inc
mov
cmc
lret
lcall
pusha
xor
int3
inc
dec
cmc
int
push
in
mov
inc
shll
out
inc
sbb
ret
xor
mov
xor
repnz
loope
test
jb
mov
ljmp
testb
bound
loope
jle
inc
shll
cmp
test
xor
inc
mov
movhps
icebp
je
inc
sbb
leave
xchg
adc
in
ljmp
sahf
sbbl
std
jecxz
sub
dec
mov
xlat
dec
bound
jo
dec
sbb
mov
sbb
xchg
push
mov
fwait
out
jg
add
and
sub
sbb
mov
cmp
sahf
pop
mov
aad
and
and
inc
and
pop
fisttpl
or
lock
lahf
jle
xor
xor
sbb
pop
data16
outsb
or
dec
iret
std
in
fildll
inc
or
cli
negb
xor
pop
cmpsl
xorl
int
lock
sub
mov
pop
jo
pop
pop
sbb
lcall
popf
mull
in
in
xchg
push
into
mov
and
es
icebp
xchg
sti
sub
push
jb
sbb
cmp
divb
xchg
sbb
test
loope
xor
fcmovbe
mov
or
outsl
sbb
into
int3
or
xchg
pop
add
bound
bound
rcll
lea
hlt
out
fwait
lcall
xchg
jae
jae
outsb
jle
mov
int
sbb
xchg
shlb
inc
mov
sub
ret
fwait
es
scas
ljmp
mov
xchg
push
cmp
xchg
push
outsb
lods
sub
sarb
adc
and
cmp
sti
push
repnz
in
add
mov
sub
stc
add
xchg
mov
mov
insl
jbe
sub
sbb
lea
and
mov
repz
mov
mov
xchg
and
cmpsl
lret
int
jmp
repnz
and
jg
jmp
js
mov
and
add
movsl
sbbl
cli
sbbb
sub
sbb
aaa
cmpsl
jle
jl
lods
lret
or
je
adc
cmpsb
dec
and
cmp
lea
push
fbstp
subl
mov
ret
xor
push
jmp
call
test
aam
add
push
and
sub
push
in
cli
inc
cmp
pop
adc
push
out
je
inc
mov
js
and
lds
sbb
cmpsb
xchg
and
pusha
sti
pop
subl
movsb
jne
leave
inc
lea
cmc
int
dec
cmp
icebp
sub
gs
clc
stos
push
repnz
cmp
test
jle
pop
mov
xorl
aaa
cmpsl
xor
sub
icebp
dec
hlt
int
pop
movsl
mov
xor
mov
sub
pop
insl
lock
outsb
rcr
push
sti
loopne
jno
pop
jno
fs
mov
cmpb
int
out
mov
icebp
dec
adc
mov
cmc
or
inc
jns
sub
stos
les
scas
fstl
add
shll
in
jbe
adc
movsb
mov
adc
cs
dec
pop
push
xchg
bound
int3
jae
pop
add
adc
stos
adc
das
lret
and
mov
rcr
orb
gs
add
dec
repnz
adcl
mov
popf
pop
mov
and
fists
ss
stc
imul
push
cmc
clc
das
or
mov
mov
cmpsl
pushf
dec
mov
or
mov
sahf
fs
test
fwait
mov
dec
sub
movsl
pop
inc
and
or
xchg
loopne
test
jns
mov
push
rorb
pop
das
dec
sbb
push
push
icebp
in
mov
xchg
and
inc
cmpsb
and
mov
add
mov
mov
ja
into
fmull
std
movsl
mov
jns
mulb
test
sarl
data16
push
jmp
in
arpl
imul
out
mov
movsb
pop
out
xor
pop
lods
adc
movsb
mov
cmp
stos
cmp
fdivp
loopne
sub
repnz
pop
inc
jo
mov
adc
xor
lret
push
add
fdivp
test
mov
divb
and
pop
jno
shrl
adc
lret
cmp
cmp
mov
push
je
mov
adc
push
in
fdiv
pop
xchg
shlb
in
test
loop
mov
rclb
lock
imul
adc
sub
insl
jl
sub
int3
gs
aam
into
push
ljmp
loopne
add
je
mov
jmp
mov
add
dec
pop
ljmp
out
or
not
push
loopne
add
ss
mov
outsl
movsb
enter
in
push
into
or
push
mov
pop
js
gs
cmp
movsl
jmp
addr16
dec
aad
fistpll
mov
pop
sub
xchg
xchg
and
out
repz
mov
loopne
aad
fldcw
push
cmp
cmpsl
ljmp
cmpsl
push
pop
rclb
push
mov
inc
icebp
mov
repnz
cltd
pop
ss
mov
rcll
and
in
pop
and
movsb
lods
lds
loope
pop
icebp
std
jecxz
push
mov
xchg
sbbb
inc
sbb
mov
aas
loope
lret
rorb
jo
decb
stc
icebp
adc
lret
lcall
or
in
and
cltd
fnsave
jmp
adc
cmc
pop
xchg
aas
jl
cmpsb
dec
imul
adcl
adc
or
andb
mov
inc
stc
jl
outsb
fs
ljmp
xchg
neg
mov
rcl
repnz
dec
jl
inc
cmp
ljmp
hlt
sbb
pop
aam
int3
jo
push
pop
mov
jae
mov
lods
movsl
in
mov
add
insb
jno
sahf
pop
gs
mov
imul
ffree
jne
xchg
scas
fcmovnbe
aad
xchg
int
mov
clc
mov
dec
ret
fldl
jbe
mov
lahf
out
rolb
std
jae
test
sti
loopne
in
or
ljmp
icebp
and
dec
stc
and
outsb
and
xor
lods
dec
xor
pop
jbe
ret
ret
aam
rolb
xor
ss
cmpsb
pop
pop
push
jo
pop
dec
push
es
jne
sub
adc
imul
jbe
dec
stos
fiadds
cmpsl
shl
test
xchg
cmp
dec
inc
mov
pusha
xchg
in
or
int
loope
push
xor
out
jmp
test
adc
scas
fwait
dec
mov
add
stos
xchg
adc
jmp
pop
mov
scas
fldenv
push
jp,pn
mov
mov
adc
test
push
insb
fmul
out
push
clc
bound
mov
inc
jbe
cmp
pop
shlb
mov
aaa
mov
or
je
repz
inc
sbb
xchg
cmpsb
mov
adc
sar
test
push
stos
pop
pop
xchg
jge
cmc
fisttpl
dec
cmpsb
mov
popa
outsl
add
mov
repz
push
inc
mov
xchg
sub
xor
rcrl
or
imul
setne
inc
push
outsl
insb
cli
cmpb
pop
and
sub
call
push
insb
adc
in
push
mov
aaa
push
jnp
popa
out
mov
scas
into
out
jl
movsb
mulb
std
clc
jo
fucom
ss
popf
push
repnz
lret
push
mov
stos
stos
pop
or
adc
pop
push
cmp
xor
sti
jecxz
shl
mov
ds
sub
cmpsl
mov
or
lret
xchg
jne
out
pop
xor
data16
dec
sbb
in
aaa
jae
add
outsl
dec
pushf
lcall
mov
idivb
rorl
pop
xchg
inc
jmp
and
popa
out
popa
push
negl
enter
mov
aad
cmove
push
ficoms
adc
xchg
xor
or
mov
jo
adc
arpl
xchg
popf
jmp
test
fldl
mov
fs
mov
mov
adc
lds
sbb
jo
insl
adc
adc
cmc
fstl
mov
xchg
clc
mov
push
je
and
std
or
and
mov
int3
jl
xchg
int3
inc
xchg
inc
mov
sbb
leave
jmp
pop
mov
je
dec
jae
cltd
sbb
in
out
sbb
jge
jnp
cmp
rcrl
jno
js
sti
mov
ret
adc
out
sbb
mov
pushf
inc
repnz
adc
inc
bound
imul
push
lods
dec
mov
testb
xchg
icebp
sbb
test
les
aam
pop
jmp
jno
mov
fndisi(8087
or
adc
jmp
pop
aam
loopne
sub
nop
and
push
in
cmp
and
dec
das
data16
adc
cmpsl
or
lods
movsl
xor
test
repnz
lea
push
dec
jns
test
cmp
push
arpl
jp
ret
push
add
icebp
clc
sub
mov
pop
leave
imul
mov
mov
iret
dec
sub
jmp
lock
enter
jge
orl
das
pop
mov
adc
jae
pushf
mov
sub
xor
sub
repnz
pop
add
dec
cli
ljmp
mov
std
dec
mov
stc
xchg
xor
inc
mov
jbe
shrb
push
js
jbe
xchg
push
shll
lret
mov
lcall
jno
or
flds
imulb
adc
lock
xchg
dec
icebp
mov
jb
dec
mov
arpl
jge
arpl
test
push
sbb
data16
add
push
push
vandps
cmp
jle
mov
adc
mov
mov
sub
test
mov
pop
jge
cwtl
xchg
andb
scas
insl
or
xchg
and
test
or
dec
mov
xchg
and
ss
int
int
sti
int
in
jbe
pop
adc
jg
test
popl
shrb
cmp
cmpsl
testb
out
lahf
mov
cmc
imul
add
repz
imul
dec
push
and
sbb
adc
xor
lea
sbb
repnz
mov
lret
push
dec
psubq
or
cli
notb
lahf
imul
mov
inc
test
or
sub
and
dec
cs
das
add
mov
jbe
fadd
or
mov
lret
and
mov
jg
and
push
cmpsb
pop
daa
jmp
repz
or
cmp
xor
add
movhlps
inc
les
mov
in
mov
jge
ds
and
sti
lret
lret
jb
inc
pusha
imul
sbb
mov
dec
sbb
dec
idivl
das
push
andb
daa
jne
cmp
push
out
loop
pop
xor
inc
pop
ret
cli
xor
lret
jno
das
repz
sarb
shlb
pop
cmp
cmpsb
sub
mov
sbb
add
add
and
jb
jbe
adc
dec
mov
pop
cmp
inc
pop
and
push
dec
cwtl
sahf
lret
test
scas
out
xchg
in
dec
shl
das
push
add
das
sbbl
jo
jo
dec
mov
and
aad
inc
out
xchg
loope
or
xor
insl
insb
push
les
js
call
orb
cmp
testl
push
ja
pop
dec
scas
inc
insb
mov
das
dec
xor
loopne
mov
add
inc
gs
add
mov
mov
out
inc
hlt
dec
pop
fs
outsb
mov
pop
xchg
cmp
daa
addr16
cltd
jne
fisubrs
imul
repnz
lods
or
lock
fcomi
jno
ffree
push
cmp
xchg
movsb
pop
push
mov
mov
jle
xor
push
jns
add
cmp
stc
sub
mov
mov
jge
insl
or
leave
pusha
adc
nop
popf
aam
shll
sbb
scas
mov
mov
adc
adc
fstps
cmpsl
inc
shl
cld
lahf
fiaddl
mov
cmp
or
dec
push
ds
jp
test
es
cmpsb
daa
xchg
push
ret
jne
popa
inc
lock
ss
xchg
gs
cmc
dec
mov
fsts
int3
xor
js
inc
xchg
xor
loope
lods
mov
fsts
outsb
insl
or
xchg
sbb
int
jae
jns
or
mov
cmc
inc
cmp
enter
dec
data16
insl
lods
sbb
mov
cmc
add
mov
push
jae
fs
lret
and
mov
out
mov
inc
mov
pop
push
addr16
pop
fstl
inc
and
fs
stos
inc
sub
xchg
outsl
in
jns
adc
xchg
push
push
sbb
je
cltd
or
into
movsb
negl
add
mov
mov
jae
push
test
lea
test
jecxz
jo
std
ret
or
pop
or
lea
es
insl
jmp
push
lret
push
xor
dec
loope
push
cmp
sub
or
adc
mov
and
mov
sub
into
jno
lcall
push
mov
dec
dec
sbb
nop
sbb
xchg
mov
in
inc
inc
pushw
out
mov
jmp
add
and
lods
mov
stos
pop
jle
and
mov
aad
dec
lret
dec
insl
mov
cwtl
jo
test
movsl
aad
dec
hlt
jp
rorl
mov
mov
and
imul
dec
xchg
xchg
cli
xchg
sub
cmp
and
or
in
cmp
dec
mov
dec
cmp
push
lcall
test
pop
sahf
aam
clc
sbb
fcomps
mov
jmp
jae
out
or
shlb
push
sub
jecxz
sbb
pushl
cltd
leave
cmp
nop
not
cmpsb
lods
push
hlt
insb
or
mov
js
xchg
adc
fldt
je
sub
and
std
in
ret
jecxz
xor
mov
mov
jl
inc
jmp
xor
mov
cmc
xlat
xchg
repz
arpl
mov
inc
pop
gs
add
push
inc
adc
mov
int
lea
flds
lds
icebp
stc
ror
lods
jge
cld
aad
push
shll
rcr
insl
cmp
push
fdivrl
js
mov
test
testb
adc
xor
int
test
inc
mov
and
xchg
data16
fsubs
inc
sbb
out
mov
leave
adc
sarl
push
es
std
dec
dec
popa
fldcw
lods
pop
sbbl
out
addl
pop
mov
mov
leave
movsl
clc
ret
sbbl
jno
sub
scas
xor
inc
jp
aaa
ret
add
loope
call
push
sahf
add
call
std
icebp
stos
mov
or
cld
push
lea
js
mov
jmp
fmulp
lds
inc
push
daa
and
testb
add
dec
jecxz
dec
fs
inc
inc
out
clc
insl
xchg
lret
pushf
bound
ss
outsb
lret
jg
fmuls
mov
xor
mov
insb
lret
mov
fnsave
enter
popa
cmpsl
lahf
call
out
jno
push
sbb
push
clc
push
data16
mov
loop
daa
pushf
and
pushf
repz
inc
iret
popa
cmp
jle
test
xchg
call
dec
out
add
adc
leave
in
out
mov
adc
fs
fisttpl
pop
fs
nop
cmpsb
out
adc
cltd
mov
out
cmp
sbb
aam
mov
stos
and
mov
dec
cmp
outsl
pushf
lahf
fcmovne
jle
lods
icebp
push
sbb
in
ficoms
dec
mov
adc
inc
pop
add
or
dec
add
inc
jp
loope
dec
lret
jp
stos
mov
clc
mov
mov
mov
js
in
and
and
bound
lods
repnz
clc
xchg
test
inc
insb
loop
and
test
cmp
jno
inc
hlt
cmp
add
cmp
xor
stos
push
icebp
dec
sbbl
repz
out
jb
sbb
test
jge
adc
icebp
cwtl
or
mov
inc
pop
dec
xchg
inc
sahf
dec
jo
cmp
out
xchg
mov
cmp
mov
cli
pop
lock
adc
xchg
pusha
cmp
push
stos
and
fidivl
aaa
shrb
das
int
dec
icebp
leave
inc
aas
test
movb
inc
fisubrs
pop
jmp
mov
jmp
xchg
push
dec
movsb
xchg
cld
mov
xchg
jecxz
cltd
xchg
xor
cld
pushf
js
sbb
gs
popw
mov
push
add
dec
inc
lcall
outsl
les
xchg
fdivrp
adc
gs
sti
inc
mov
lahf
repz
pop
stos
dec
sbb
mov
test
pop
mov
lret
xor
test
scas
or
dec
aad
test
or
cmpsl
cmp
dec
and
sar
jne
cmpb
cs
cmp
jp
mov
push
lret
pop
mov
pop
mov
cmp
lods
decl
inc
fdivs
lods
lods
xchg
test
mulb
add
call
xor
jbe
daa
cmpsl
adc
loope
stc
dec
stos
cmp
and
pop
das
ret
cld
dec
mov
fistpll
outsl
in
xchg
jb
jns
xlat
jle
adc
pop
test
dec
imul
jne
jge
sbb
add
test
in
inc
outsb
in
sub
mov
int3
adc
stc
push
inc
in
vmwrite
xchg
lods
sahf
leave
pop
and
out
fnstcw
test
pop
mov
mov
xor
pop
cmpsl
xor
cltd
mov
sub
or
int
inc
insb
dec
push
pop
loop
push
inc
jae
mov
mov
pop
mov
movswl
imul
mov
jbe
out
cltd
jecxz
add
adc
inc
out
and
jle
in
cmp
sub
mov
xor
repnz
gs
pushf
pop
and
scas
aaa
and
push
xchg
dec
and
mov
or
and
sub
cwtl
push
popa
ss
data16
fadds
decl
lret
repnz
sub
xchg
pop
cmp
pop
es
clc
fs
mov
push
xchg
mov
movsl
or
and
pop
test
jecxz
insl
rep
scas
in
adc
rorl
out
or
lret
xchg
sbb
and
jns
mov
add
xchg
ja
out
dec
aad
xchg
mov
jns
outsl
in
pop
aaa
fldcw
test
jns
mov
fbstp
dec
lds
mov
pop
adc
lods
inc
xchg
shlb
jns
mov
in
mov
out
cmp
repz
push
pop
mov
push
or
cmp
and
add
fsts
into
add
and
icebp
imul
mov
ljmp
in
mov
cmp
dec
test
icebp
imul
or
ret
xchg
mov
sub
push
jbe
fisubrl
out
sbb
inc
push
ljmp
in
xchg
add
in
in
inc
dec
stos
push
push
cli
and
cmpsl
mov
je
dec
cli
ss
test
icebp
lods
inc
sbb
scas
in
pop
es
sahf
mov
mov
leave
in
pop
pop
jae
push
ljmp
push
icebp
push
push
mov
inc
push
jno
clc
iret
push
psrld
pusha
popf
insl
rcrl
out
test
fadds
in
xor
mov
std
mov
lods
dec
pusha
cmpsb
shrl
and
movsb
lock
pop
mov
pusha
es
mov
sub
bnd
push
or
subl
mov
push
mov
aam
roll
insl
bound
in
mov
in
mov
in
lock
mov
pop
add
mov
rorb
inc
and
in
jmp
push
xchg
aad
insb
in
xchg
andb
lods
and
cmpsl
out
push
and
stc
sbbl
lret
jbe
fidivrl
xor
adc
cs
push
mov
sbb
testb
jnp
leave
or
stos
out
in
fdivl
inc
shl
fstl
mov
push
das
fwait
test
inc
add
es
mov
dec
jle
aam
pop
outsb
scas
fiaddl
popa
mov
int3
cli
lds
lea
pop
stos
jns
mov
repz
mov
in
cmc
sbb
mov
xor
dec
test
icebp
and
hlt
inc
repz
dec
daa
and
jns
pusha
mov
cmp
stos
pusha
mov
shll
repnz
jo
push
push
xor
cmpsl
add
push
push
mov
mov
jne
out
mov
iret
cmpsl
xor
push
push
mov
dec
add
xchg
daa
push
movsb
fiaddl
lahf
shll
enter
lea
test
adc
inc
insb
out
hlt
jne
adc
jo
loopne
stos
pusha
pop
adc
push
xor
imul
xor
arpl
and
int3
lods
sub
adc
mov
scas
lea
icebp
jns
pusha
sbb
cmp
push
mov
test
adc
rep
in
mov
cmc
and
xor
dec
or
test
xchg
roll
sub
inc
shll
in
aas
xor
test
dec
push
push
ret
jl
popa
mov
rep
lea
jne
push
xor
push
movsb
sbb
inc
icebp
andb
dec
mov
ss
mov
leave
lock
or
sbb
loop
mov
push
jle
shll
daa
popa
int3
sub
mov
mov
lahf
inc
fucom
cli
scas
mov
aad
shrl
pop
test
add
movsb
jmp
xlat
xor
test
loope
fwait
rcr
xchg
adc
out
mov
outsl
es
test
lret
mov
in
pop
mov
lea
push
mov
std
lahf
xor
push
enter
loope
dec
and
ss
push
incb
fs
scas
jae
add
or
outsb
ljmp
lret
lahf
sub
pop
push
in
xchg
repz
jns
cmp
daa
pop
mov
xchg
xor
dec
loope
insl
push
popa
out
rolb
shll
jns
cmp
fcmovnbe
scas
insl
daa
aam
out
sahf
add
jg
adc
cmc
xchg
int3
test
decb
ljmp
test
mov
jle
and
dec
mov
mov
psrad
or
pop
mov
push
inc
mov
test
subl
or
mov
xchg
mov
xor
js
add
repnz
daa
sbb
inc
stc
xor
hlt
sub
scas
ljmp
pop
fdivrp
push
sti
jmp
stos
mov
data16
cmc
shl
sarl
int
inc
cmp
mov
stc
xchg
fisubrl
add
jmp
popf
mov
mov
cld
fistl
cwtl
cmp
test
lods
mov
and
pop
out
pop
xchg
int3
test
cmpsl
pushf
inc
and
test
test
popa
adc
or
scas
fcom
in
cld
in
repnz
jo
scas
xlat
ret
sahf
pop
inc
push
mov
in
push
in
sbb
jl
loopne
or
insb
ret
lock
dec
mov
fstps
jmp
sbb
cmp
dec
mov
jnp
gs
push
xor
jns
push
sub
jg
pusha
pop
adc
insb
mov
jno
push
jns
push
inc
adc
cmp
lahf
into
cmpsb
loope
leave
mov
test
jno
movsb
adc
sbb
xor
cmpsl
mov
andb
inc
ficompl
hlt
add
xor
fldl
jmp
pop
test
test
mov
mov
mov
cmp
mov
arpl
stc
xor
dec
jnp
ss
cmp
movl
xor
cmp
cmpsl
sub
inc
icebp
xchg
shlb
and
push
and
xor
cmp
int3
jp
cmc
cmp
or
pusha
popf
addl
jle
mov
pop
jge
xchg
cmp
scas
mov
insl
in
fnstcw
mov
mov
add
mov
cli
lret
dec
fistps
mov
fldcw
test
cs
les
dec
cmp
xor
mov
xorl
fisttpll
sub
or
xchg
push
ja
icebp
lds
xor
insb
mov
pusha
cltd
jge
pop
xor
into
xchg
mov
or
out
xor
adc
test
shll
mov
imul
sub
jecxz
inc
aaa
adc
lcall
xlat
xchg
gs
and
test
ret
pushw
cltd
xchg
push
inc
cwtl
test
pop
je
pop
les
lea
andb
ficompl
add
cli
jle
mov
jmp
cmp
lock
jmp
cltd
mov
jb
xchg
and
pop
in
loopne
and
pop
jge
adc
icebp
jo
hlt
jo
mov
dec
data16
sbb
icebp
test
movsl
xor
adc
push
push
sarb
ss
gs
fisubrl
aam
dec
inc
pushf
sti
out
arpl
push
xor
or
cli
dec
arpl
xchg
mov
mov
sbb
stos
adcl
cwtl
push
and
sbb
ret
movsl
push
sahf
push
icebp
cmpsl
xchg
mov
sbb
mov
and
out
mov
inc
jle
mov
fwait
mov
cmpsb
aam
int3
and
mov
mov
ds
les
cmpsb
cmc
cli
shl
jno
cmp
std
sub
jno
jae
or
cmp
or
out
in
movsb
sbb
into
mov
inc
es
pop
es
inc
jge
sti
push
mov
pop
dec
lea
ds
out
iret
jecxz
sbb
pop
int
aaa
mov
outsb
pushf
sub
pop
in
sbb
mov
inc
add
sub
pusha
cltd
jge
mov
lock
aaa
cli
and
lcall
shll
ja
mov
mov
fwait
inc
xor
pop
push
aam
sub
int
jg
lret
ret
dec
cmp
es
jb
insl
or
fsubrs
and
mov
mov
cmp
push
imulb
mov
push
jns
mov
sahf
jne
push
lock
inc
repz
dec
mov
leave
loop
jne
mov
aas
fabs
orl
mov
push
pop
add
icebp
pop
or
jne
out
add
xchg
jne
into
push
mov
mov
add
push
cwtl
out
mov
dec
jae
jbe
add
xor
sub
mov
out
int3
addl
lods
sahf
je
adc
inc
lods
mov
test
mov
daa
xchg
sti
negl
lock
std
push
adc
mov
das
mov
mov
lcall
leave
pushf
in
cli
loop
jae
pop
in
in
jle
adc
fwait
push
icebp
incl
mov
fwait
or
and
ret
mov
mov
insl
shll
cltd
lods
fstpl
sbb
test
pop
push
das
lret
inc
mov
ret
loopne
jnp
jbe
jno
or
pop
popa
jmp
add
lcall
dec
xor
rcl
jno
imul
ret
cmp
jae
daa
mov
sar
add
cmc
jno
and
push
sub
sahf
pop
out
mov
and
jge
sub
pop
or
aad
xor
and
jmp
push
mov
loop
mov
add
xlat
sbb
ja
aaa
add
cmp
xchg
in
jmp
sub
jg
jae
sbb
sbb
outsb
mov
sbb
stos
sbb
inc
cmp
cltd
inc
mov
inc
aaa
xchg
test
in
movsb
lods
jne
cli
andl
push
dec
aad
es
aaa
push
xlat
lahf
dec
push
in
int3
mov
lds
xchg
xlat
sub
cmpsl
jo
test
sbb
mov
mov
xor
mov
repz
mov
inc
jp
pushf
push
jne
jmp
out
mov
push
ja
mov
iret
std
repz
test
inc
aas
adc
out
push
mov
leave
dec
push
or
shrl
or
add
inc
jmp
andb
iret
jecxz
mov
mov
push
mov
repnz
repnz
ja
pop
push
mov
in
aas
mov
nop
xchg
dec
mov
xchg
outsb
rolb
and
push
in
ret
adc
sbb
mov
push
loop
jmp
pushf
and
gs
dec
sarl
cmp
lods
mov
jmp
jno
stos
rcrb
or
dec
mov
ljmp
enter
and
xchg
js
push
int
ja
adc
mov
push
push
push
icebp
gs
push
or
imul
dec
test
inc
mov
add
jo
push
push
mov
mov
push
rcrb
out
js
lock
scas
mov
cmp
jns
cmpl
lock
out
xor
rol
and
js
nop
adc
insl
out
jl
imul
push
adc
popa
jp
lods
mov
xor
std
sbb
push
lods
popf
mov
into
and
xlat
and
out
xor
mov
test
xchg
call
jge
fstl
popf
inc
sbb
and
push
call
adc
mov
test
and
dec
add
push
mov
adc
movsb
adc
jg
mov
adc
push
sub
push
jb
dec
je
stc
fwait
adc
icebp
pop
enter
cwtl
pusha
jg
icebp
das
lds
jne
in
push
mov
shrb
jb
inc
xchg
mov
pusha
pop
pop
outsb
insl
add
aam
or
insl
xor
ljmp
xor
dec
ljmp
push
lret
hlt
dec
rcrb
xor
sbb
pop
faddl
mov
repz
pop
addr16
and
push
fisubs
movsb
xchg
lahf
sub
in
pop
and
lods
mov
pop
std
out
xchg
stos
cs
lea
mov
fsubs
jae
int
xchg
lret
and
fwait
ja
icebp
or
push
repz
sti
lock
rorb
jmp
dec
push
and
test
adc
mov
push
cmp
cmpsl
or
mov
and
dec
lret
push
std
jo,pn
adc
out
push
scas
dec
js
mul
push
call
and
cmpsl
testl
test
sub
sti
jns
and
xor
or
js
imulb
dec
or
push
fisubrs
mov
fldenv
mov
in
dec
jae
inc
ss
jle
xor
sbb
pusha
test
lock
testl
add
sub
jle
xor
pop
jecxz
notb
fmul
ja
int
cs
adc
and
push
lock
xchg
push
xor
and
mov
push
bound
sbb
mov
jb
pop
or
sub
adc
pusha
or
ljmp
sahf
je
dec
leave
sub
sahf
push
scas
pop
xor
sbb
jg
jae
push
ret
and
daa
and
cmp
mov
cli
and
xor
mov
negl
clc
mov
std
sahf
xlat
mov
data16
in
pop
loop
and
and
lods
sub
mov
cmpsb
push
sub
inc
jle
or
xlat
and
inc
in
dec
sub
ret
repz
push
fnstcw
mov
aaa
add
lods
xacquire
aaa
repz
cmc
pop
jg
push
and
insl
cmc
pop
orl
cmc
lret
and
into
jbe
aam
pop
cmc
jnp
push
ljmp
in
out
dec
cmpsl
or
notl
rorb
inc
popf
jne
inc
sub
cwtl
vmovsldup
jp
scas
mov
push
xchg
je
dec
out
push
push
addl
mov
lret
in
arpl
jnp
sbb
repz
push
xor
or
jno
xlat
xor
cmp
xor
jns
imul
xorb
jecxz
popa
sub
sbb
and
mov
rcrl
and
rorb
xor
imul
jno
jp
fisubrl
hlt
int3
insb
xchg
loop
in
cmpsb
mov
lret
mov
push
lock
inc
ficomps
inc
inc
enter
mov
test
ficomps
andl
mov
mov
jbe
ret
xchg
subb
into
sub
shl
aam
lar
movsb
and
dec
jmp
icebp
lcall
jae
jno
gs
into
sub
hlt
lret
xor
lret
js
fidivs
movsb
mov
in
adc
daa
sub
adcb
inc
mov
mov
sub
scas
mov
add
push
xor
aas
lea
movsb
jns
dec
mov
dec
sbb
inc
das
stos
ds
scas
mov
xchg
mov
hlt
xchg
pop
xchg
mov
sbb
ret
push
mov
jmp
arpl
stc
cwtl
and
insl
xchg
ret
push
out
mov
lds
divb
not
sub
lcall
mov
xor
push
xchg
testb
mov
mov
std
loope
or
hlt
and
int3
add
push
jns
stos
cmp
cmpsb
popf
icebp
int3
into
stos
jns
iret
hlt
test
outsb
add
pop
loopne
sahf
rorb
insb
xor
aaa
xchg
jle
out
cmp
inc
xor
dec
xchg
mov
dec
icebp
dec
test
mov
pusha
pop
add
stc
insb
dec
cmc
jns
jg
aas
les
dec
and
mov
test
loop
add
xchg
mov
xchg
test
add
dec
das
add
pop
rolb
out
pop
popa
dec
mov
js
test
mov
repnz
shll
fwait
jb
push
repz
test
outsb
fwait
mov
loope
lods
arpl
mov
fwait
cmp
jb
sub
aas
adc
outsb
add
ja
jbe
lods
js
xchg
clc
mov
cli
inc
loopne
loop
jns
aam
stc
xchg
mov
push
nop
ret
sbb
lcall
sub
popf
int
aam
jns
fwait
jne
out
adc
ret
mov
or
ja
cmp
bound
sbb
in
lods
andl
mov
add
xlat
and
or
push
add
lock
test
fiadds
es
mov
add
jb
cmp
xor
test
xor
outsb
orl
imul
in
lock
call
dec
cs
adc
mov
mov
in
cltd
jae
jno
mov
push
jp
icebp
add
cmp
add
int3
out
inc
sub
inc
scas
arpl
imul
fdivl
ror
fisubs
inc
fldenv
popl
inc
outsl
fimull
jnp
insb
sbb
div
push
and
lods
out
orl
add
dec
and
popl
out
mov
movsl
mov
out
lds
push
rcll
cmp
xor
pop
orl
out
pop
sbb
and
xor
add
cmpsb
test
bound
cld
test
gs
cmpl
or
push
sbb
and
push
fcmovb
add
mov
mov
es
aas
bound
push
push
sbb
test
lcall
imul
js
clc
xchg
js
test
insb
aaa
cmp
jmp
idivb
js
xchg
outsl
mov
movsb
xor
mov
cmp
mov
cmp
mov
lret
xchg
add
sub
and
es
sbb
dec
mov
dec
push
popf
shrb
xor
mov
pop
xor
fdivp
call
pop
inc
test
dec
lock
add
fldenv
sub
adc
shrb
ror
dec
pop
sahf
adc
roll
scas
lahf
mov
mov
hlt
mov
pushf
je
inc
ja
cmpsl
insb
out
xor
fcoms
test
sti
pop
jg
xchg
call
inc
and
jns
out
lret
jb
loope
add
and
lahf
ljmp
xor
mov
push
rcr
out
shll
les
inc
stos
insb
add
call
cwtl
sti
into
mov
lds
mov
and
cmc
mov
cmp
std
add
push
into
lds
cld
adc
repz
leave
lret
test
push
arpl
je
mov
pop
push
sub
flds
pop
imul
adc
scas
xchg
arpl
jecxz
jmp
rcrb
mov
pushf
adc
in
pop
lock
fidivs
jno
mov
jle
je
mov
not
in
push
into
dec
lcall
dec
add
inc
sub
dec
out
sub
adc
add
xchg
push
fmull
testb
dec
loop
xchg
fwait
mov
jno
xchg
push
gs
or
xchg
xchg
and
mov
addr16
pop
lods
push
pop
hlt
je
fstl
out
push
ja
pop
scas
mov
push
sti
add
cli
xorl
mov
jno
int
in
subl
push
cmp
aad
mov
leave
dec
stc
andb
call
add
gs
sbb
or
test
das
notl
fdivs
popa
jmp
sub
std
ds
lods
adc
push
or
fdiv
inc
jo
or
mov
lods
adc
xchg
aaa
cmp
inc
mov
pmullw
insb
aad
mov
xchg
ljmp
mov
push
mov
jl
xor
cmp
fsubr
jmp
cs
mov
cmc
lds
loop
inc
jno
mov
cltd
jb
das
lahf
jecxz
add
pop
rorb
xor
pop
mov
addb
mov
pop
jg
jmp
pop
dec
add
ret
sub
sbb
mov
xlat
cmpsb
out
scas
mov
mov
inc
mov
stc
mov
pop
dec
inc
dec
popa
inc
xchg
das
sub
xchg
scas
jle
stos
jb
fistpl
mov
inc
test
lret
xchg
sbb
cmp
mov
inc
scas
sbbl
mov
mov
das
mov
jg
icebp
and
push
hlt
pop
es
inc
pop
pushf
in
out
gs
cmp
cmpsl
das
lea
clc
lds
jnp
clc
hlt
add
pop
dec
and
lea
mov
push
sub
and
aaa
outsb
pop
adc
sti
int3
cld
sbb
repnz
scas
test
ds
cmp
ror
fdivl
push
adc
outsl
mov
mov
int
movsb
mull
mov
daa
pusha
pop
cmp
xor
bound
lret
rorl
rclb
dec
cmc
test
clc
fsubr
lods
lret
and
xor
insl
sbb
mov
adc
in
sbb
movsb
jl
lock
or
add
je
push
divl
sub
inc
out
jo
mov
outsl
cmpsl
or
das
aaa
in
mov
neg
pusha
into
mov
mov
out
aaa
testb
jmp
jae
test
mov
fdivrs
mov
mov
ret
mov
dec
cmc
inc
test
push
inc
rorl
movsb
cmc
fsubrs
int3
jne
cs
subb
pop
jp
scas
push
mov
jle
jo
pop
test
mov
icebp
outsb
scas
testl
popa
and
xor
dec
mov
scas
inc
add
sub
jns
and
inc
mov
jnp
push
xor
test
mov
out
fldenv
mov
neg
mov
add
push
mov
outsl
mov
neg
add
push
pushf
mov
and
in
mov
movsl
mov
mov
repnz
data16
stc
outsb
das
popa
and
xor
mov
dec
xchg
add
mov
mov
arpl
popa
xchg
cmc
xchg
sub
push
cld
push
stos
mov
mov
out
frstor
mov
divb
mov
fdiv
dec
stos
jns
sahf
xor
mov
xor
inc
xor
repz
xor
push
jae
cs
xchg
push
fldl
loopne
mov
repz
ret
inc
xchg
lcall
das
lds
cmp
cwtl
or
mov
mov
add
pop
mov
or
xchg
neg
pushf
aaa
pop
sbb
fstps
stc
test
push
rolb
incb
lret
sbb
mov
hlt
stc
leave
push
popa
cli
cmpl
mov
cltd
imul
push
scas
dec
jns
scas
push
lods
or
jp
fwait
insl
xor
sub
test
sub
inc
or
dec
fs
jo
inc
dec
enter
fsubs
in
insl
dec
sub
or
jae
repnz
push
test
sub
pusha
push
mov
jae
mov
and
mov
cmp
gs
jne
sbb
mov
or
ljmp
add
mov
dec
xchg
sub
lods
subb
xorb
aas
sahf
ss
cwtl
sub
cmp
mov
je
sbb
dec
push
sahf
stc
push
sub
test
sub
scas
sub
cmp
mov
popa
imull
cltd
mov
fimuls
xor
pop
test
ret
inc
test
test
mov
std
adc
xchg
push
imul
cmp
jmp
mov
lret
mov
push
lret
or
popa
add
imul
sub
dec
daa
mov
pushf
xchg
adc
jns
subb
xorb
mov
movsb
out
lock
jne
das
lds
movsb
cmp
jne
insb
or
mov
mov
cmpsl
push
jecxz
pop
test
and
int
mov
fstl
pop
enter
cwtl
or
dec
movl
std
push
movsb
fiaddl
je
jno
jbe
insl
or
inc
mov
bound
mov
pop
mov
lahf
inc
xchg
mov
jge
mov
test
mov
mov
lds
cmc
inc
inc
cmp
les
icebp
hlt
imul
sbb
and
sbb
mov
cmpsb
adc
and
and
dec
dec
and
das
lds
add
lods
and
xchg
shr
and
jbe
popa
lds
xchg
mov
out
mov
je
std
push
in
xchg
mov
arpl
inc
cmpsl
jns
mov
fs
xor
or
mov
inc
push
push
inc
hlt
cmp
fstl
in
in
xor
fistl
std
lcall
sub
xor
push
push
add
je
dec
jmp
push
mov
lret
add
inc
xchg
outsl
data16
aaa
imulb
xor
and
add
cli
rcll
or
in
faddl
ss
jne
or
fbld
ret
ret
and
jne
mov
xor
lods
out
test
cs
or
or
call
xchg
inc
push
ljmp
inc
pusha
mov
incl
mov
mov
and
mov
cmpsl
and
mov
test
loope
shlb
lea
cmp
les
add
jnp
mov
les
inc
xlat
icebp
dec
ret
loop
xlat
scas
loop
pusha
test
sbb
cmp
ss
ds
mov
bound
mov
pop
std
push
out
js
mov
adcb
sbb
lods
scas
inc
xchg
jmp
icebp
add
stc
frstor
lock
in
andl
sarl
sub
cmpb
into
sub
roll
aad
stc
inc
mov
add
addb
out
cmp
adc
sti
jo
in
mov
mov
xchg
fimuls
cmpsl
sbb
test
mov
in
adc
pop
sbb
out
fildl
mov
bound
sahf
add
mov
mov
int
test
test
mov
adc
cmpsb
inc
push
ljmp
orb
into
test
mov
in
and
aam
rorb
mov
add
fstpl
ret
icebp
je
lcall
fmull
into
mov
mov
inc
in
add
push
and
cli
rcrl
adc
ja
aam
pop
orl
repz
aad
cmp
dec
mov
sub
scas
imul
cs
jns
lds
pop
fsubrs
and
inc
lcall
pusha
ja
fs
mov
add
adc
cmpsl
sbb
jb
gs
add
out
addr16
es
pop
fwait
mov
fisubs
push
pushf
out
dec
cmpsl
popa
or
xchg
and
mov
fisubl
stc
xchg
pop
adc
cmp
xchg
aas
repz
mov
adc
repz
dec
mov
test
in
xor
out
std
cs
out
popa
mov
dec
mov
mov
inc
aam
shll
mov
sub
push
add
mov
mov
sub
and
call
bound
data16
mov
bound
mov
or
cmpsb
adc
lods
dec
xchg
add
jo
push
push
push
daa
aam
mov
aam
sarb
bound
or
inc
icebp
fidivl
pusha
or
lret
pusha
fistpl
ljmp
mov
lcall
pop
mov
int
fisubrl
int
stc
insl
pop
inc
push
and
in
xchg
fs
cmc
jo
dec
push
fs
xorb
inc
jge
movsb
cmc
fwait
pop
movsl
mov
fstps
pop
stos
mov
pop
mov
lock
aas
ss
mov
mov
popa
sti
leave
repz
movsb
rorl
testb
xchg
jns
lfs
je
imul
loope
mov
xchg
jns
pop
or
xor
mov
push
leave
push
loopne
fidivrs
call
mov
outsb
das
leave
push
cmc
cs
inc
pop
mov
movsl
pop
ret
loope
xor
mov
and
fstps
adc
fisubl
addr16
les
pusha
repnz
push
pop
add
loope
sti
mov
jecxz
mov
daa
inc
sub
into
xchg
push
into
xlat
mov
ficoml
push
xchg
vpunpckhdq
xchg
test
sub
sbb
test
adc
add
pop
adc
fisubl
and
test
aad
test
and
push
jecxz
dec
mov
pop
xchg
push
or
sbb
iret
rcrb
and
ret
xor
dec
inc
rcl
mov
xlat
push
jl
sbb
mov
aas
rcr
test
mov
loop
xabort
dec
inc
sar
xchg
shlb
adc
mov
insl
inc
xchg
shlb
loope
inc
ss
adc
cmc
xlat
mov
sub
shrl
xchg
shl
dec
push
sar
pop
shl
ljmp
xor
push
into
std
int3
add
popf
iret
stos
jg
sub
cmp
cmpsl
iret
push
ljmp
add
push
push
aaa
fldcw
push
dec
fistpl
pop
push
jmp
and
scas
dec
jns
pop
and
push
das
rcr
test
sarb
xor
negb
push
dec
sbb
aam
test
cmp
rclb
movsb
xlat
fsubrs
shrb
mov
xchg
add
xchg
outsl
mov
xlat
int
movsb
xlat
fdivrs
lret
and
test
insl
lret
sub
insl
inc
dec
mov
pop
jl
leave
aaa
xor
pop
pop
aad
daa
aad
sub
cs
pop
shrl
divl
cmp
dec
out
js
mov
and
aad
xlat
mov
sub
push
dec
mov
pop
push
inc
dec
cmc
ja
int
movsb
aad
mov
lret
and
inc
aad
cltd
and
push
faddl
adc
cmp
rcll
dec
jmp
add
hlt
sub
dec
inc
push
and
push
add
faddl
lcall
fwait
dec
dec
sbb
ljmp
test
aam
pop
cmpsl
rcll
dec
jmp
je
dec
inc
push
and
push
sub
faddl
mov
cmp
pop
lret
inc
fwait
enter
and
sub
xchg
icebp
mov
push
lahf
cmpb
out
call
hlt
push
mov
mov
mov
and
sub
lock
icebp
dec
imul
insl
loope
push
das
sbb
jno
loope
repnz
aas
or
adc
mov
pop
inc
mov
ret
ret
mov
cmc
and
push
pop
scas
cli
sbb
rcl
sub
add
int
or
lods
adc
ja
sbb
pushf
jmp
ja
jp
cwtl
mov
push
adc
pop
xchg
jmp
shl
and
push
sbb
cmp
sbb
addr16
mov
mov
stos
leave
mov
in
mov
pop
mov
test
int3
jmp
neg
icebp
jl
add
cmc
add
mov
mov
mov
in
test
hlt
les
jno
divb
jl
scas
popa
xor
leave
sbb
hlt
leave
clc
shl
insl
data16
push
dec
fsubr
mov
fcmovu
add
jno
jmp
mov
imul
ror
mov
neg
rcrl
dec
cmpsl
cmpsb
push
push
push
jno
or
mov
into
jmp
sub
inc
lret
sahf
pop
xchg
frstor
adc
pushf
icebp
lds
mov
lahf
jne
aas
out
jmp
dec
std
imul
lea
mov
mov
xchg
std
xchg
fdivp
xchg
cmpsb
mov
jne
sarl
or
and
das
fs
loope
std
fstl
std
add
and
lock
jle
jge
dec
loop
sbb
cltd
test
push
jmp
jae
loope
aad
loope
gs
inc
jmp
and
stos
repz
ds
jmp
mov
sahf
or
in
xlat
xor
cli
lret
xchg
loop
add
xchg
stc
mov
sbb
inc
clc
insl
push
dec
add
jge
cmp
lds
jo
cmc
outsl
adc
dec
int3
repnz
pop
add
adc
jecxz
in
shl
jecxz
mov
dec
push
test
sahf
adcl
inc
pop
sub
or
pop
cmc
out
mov
mov
and
or
fs
scas
sbb
std
or
xchg
add
loope
cmpsl
cmpsl
loop
cmpsl
and
mov
inc
push
xchg
pop
fs
leave
pop
in
bnd
push
jle
sbb
int
or
shll
jmp
xchg
inc
mov
in
testb
out
pop
jp
into
movsb
push
fmull
dec
int3
cmc
fsubs
inc
into
jne
fdivrs
jne
lahf
xchg
pop
xor
push
ret
push
test
mov
fs
xchg
jecxz
aam
or
cmc
mov
mov
jns
xchg
int
mov
fs
cmp
outsb
cltd
and
add
hlt
mov
xor
ret
mov
inc
addr16
test
sbb
aad
mov
and
arpl
adc
roll
dec
lds
xor
adc
int
mov
or
dec
cld
add
cmpsb
mov
idivb
xchg
mov
fstps
pop
loopne
push
push
lahf
scas
cmc
pop
mov
ljmp
repnz
add
adcl
dec
sbbl
dec
jmp
push
mov
out
mov
sbbb
xchg
das
nop
xchg
cs
pop
lret
cmpsb
mov
sbb
dec
mov
adc
sahf
sub
lea
lods
xor
jnp
mov
scas
int3
mov
dec
pop
cmpsl
repz
cmp
popa
push
insb
jmp
cmpsl
movsb
pop
mov
jge
loope
iret
aam
sub
cmp
fadds
cmp
mov
xchg
ss
cli
outsl
jo
inc
xor
notl
outsb
push
outsb
leave
pop
dec
fcmovne
mov
dec
pop
pop
dec
mov
pop
dec
outsl
lret
dec
pop
pop
jb
sbb
shlb
and
jnp
push
add
es
or
add
daa
add
testl
push
pusha
xor
sti
mov
shll
pop
dec
ss
xor
mov
insl
leave
das
mov
pop
aam
mov
mov
imul
xor
and
mov
jecxz
push
gs
sbb
push
std
adc
in
sbb
sahf
push
lret
cmp
inc
jo
loopne
ljmp
jle
mov
in
xlat
scas
shlb
hlt
pop
rcl
mov
pop
mov
movsb
mov
push
xor
mov
sarb
ret
lods
jg
aam
insl
mov
sub
imul
cs
cltd
int
movsb
xor
movsb
bound
out
mov
icebp
mov
inc
push
testb
out
hlt
xchg
in
and
and
mov
es
xor
popa
cmpl
mov
push
mov
mov
faddl
neg
or
lods
xor
fistps
dec
jne
or
mov
push
pop
div
xor
inc
lcall
movsb
mov
cmc
mov
inc
stos
fidivs
sbb
xchg
and
sbb
jmp
sub
adc
inc
xchg
lcall
icebp
mov
add
or
sbb
mov
sbb
hlt
movsl
iret
sti
shl
ja
add
sbb
jg
fdivs
rep
addr16
add
ret
mov
in
and
xor
out
pop
xor
xchg
fidivl
dec
pop
mov
mov
fcomi
mov
push
or
hlt
mov
cmp
add
mov
push
test
mov
xor
dec
out
incb
adc
lds
leave
imul
xchg
mov
ss
repz
mov
ret
pop
cmp
sti
mov
jecxz
fninit
sahf
jnp
mov
jo
loopne
ret
pop
ret
mov
dec
push
push
pushf
inc
pusha
push
cmp
xor
lret
rcrl
std
in
xlat
ss
fcmovnb
xor
push
pop
imul
fiaddl
inc
and
inc
aam
hlt
mov
jno
lcall
mov
fwait
add
ljmp
enter
lds
mov
inc
popf
add
add
dec
dec
pushf
repz
leave
cmovae
sbb
mov
shlb
arpl
in
addb
test
xlat
test
push
jae
insl
add
pop
jne
and
out
jecxz
dec
mov
cmpsb
jge
loopne
in
inc
arpl
in
cmpsl
jmp
mov
pop
cli
hlt
sub
xchg
dec
and
iret
sbb
mov
aad
xor
pop
mov
daa
faddl
xor
cmp
xor
arpl
cli
mov
pop
lret
out
xor
movsb
pop
jecxz
xchg
pop
jl
sbb
mov
test
clc
lds
jnp
sbb
inc
rol
jmp
js
jnp
cmp
insb
xor
fdivrs
bound
jne
xchg
push
cltd
push
sbb
in
mov
ss
inc
stos
in
dec
divb
jl
cmp
inc
cmp
stc
and
mov
mov
jbe
gs
mov
mov
cmc
push
sti
inc
movsb
adc
mov
loope
push
jmp
pusha
test
jle
pop
inc
jge
mov
add
clc
icebp
dec
dec
stc
mov
inc
negl
repnz
fwait
into
cmc
out
cmc
pop
movsb
popf
mov
ja
outsb
ljmp
fistpll
shl
or
jb
xor
idivb
inc
dec
sub
and
push
inc
neg
mov
ljmp
repnz
outsl
jmp
jbe
push
in
jbe
xor
daa
sti
mov
rorb
xchg
in
cmp
dec
cmc
outsb
jecxz
andb
and
inc
xchg
test
loop
inc
mov
and
jl
mov
mov
int
inc
fists
mov
lret
in
jo
inc
add
and
fiadds
repnz
movsb
mov
and
dec
insl
push
and
push
addr16
stos
clc
mov
enter
mov
xor
jecxz
push
xor
sahf
js
popf
adc
pop
lret
aam
xor
xor
jp
test
jnp
pop
jle
das
lds
jnp
rol
in
ret
shlb
shll
lea
sbb
pop
jo
lods
push
mov
cmp
in
hlt
jmp
leave
imul
dec
cmp
mov
mov
pusha
cmpsl
inc
mov
add
test
mov
push
adc
adc
in
insl
and
push
adc
faddl
cmp
cmp
cmpsl
cld
push
insl
jle
and
out
arpl
xor
insl
insl
jae
jb
jae
fisubrl
hlt
ret
insb
pop
mov
cmp
andb
subl
loopne
in
repz
mov
mov
inc
xchg
in
mov
pusha
mov
xchg
shll
dec
scas
je
es
stos
leave
push
jnp
push
icebp
sbb
jmp
in
mov
popa
stos
mov
int
movsb
mov
ret
out
lret
and
insl
jo
in
push
jae
popa
rcr
in
pop
mov
and
leave
bound
mov
and
mov
dec
aas
stos
std
cmp
fsubrs
lret
and
aam
xchg
inc
or
scas
out
mov
out
std
and
xor
lds
insb
nop
jbe
adc
popf
inc
push
out
in
fstps
inc
adc
and
mov
jne
mulb
dec
sbb
dec
cmc
fnstenv
fdivr
out
sbb
frstor
jb
popa
hlt
and
ret
and
push
ljmp
daa
lds
or
mov
sbb
and
jne
mov
jbe
movsb
mov
push
push
arpl
icebp
mov
lods
cwtl
cmc
jo
outsl
mov
mov
sbb
in
cmp
pop
mov
inc
mov
pop
inc
or
les
pop
stos
icebp
pop
test
movsb
cmp
pop
xchg
cmp
mov
add
repnz
daa
sub
addr16
inc
xor
daa
repnz
sbb
out
jno
pusha
or
add
cs
jno
inc
and
jecxz
int3
in
sub
xchg
test
lock
jecxz
cmp
lods
mov
insb
mov
lret
mov
push
pop
repz
into
cld
adc
je
and
clc
xor
inc
add
and
icebp
inc
das
mov
hlt
cmp
cmc
push
push
jbe
hlt
pop
cmc
dec
leave
bound
lret
jae
lds
jbe
xchg
je
lea
arpl
mov
jbe
scas
mov
js
icebp
inc
jno
repz
sub
out
cmc
add
aad
xor
mov
jae
rcll
push
inc
xchg
cmc
mov
mov
in
dec
cmp
lds
fisubl
pop
rcr
movsb
mov
loopne
mov
and
lret
jns
insl
add
push
add
outsl
mov
movsb
mov
popa
push
dec
mov
push
sbbb
pop
lret
adc
dec
mov
jecxz
pop
inc
dec
out
jmp
testb
in
push
mov
adc
subl
fdiv
inc
mov
lea
test
movl
inc
imul
jns
lea
dec
push
imul
xchg
xor
mov
jbe
adc
mov
imul
dec
adc
mov
aad
cmc
fmull
lds
mov
fnstenv
xor
gs
cmp
enter
fcmovne
mov
scas
into
rolb
mov
rcl
stc
in
jne
mov
mov
dec
dec
in
loopne
ret
lret
xchg
push
pop
out
aas
insl
pop
mov
mov
or
mov
mov
sbb
call
push
jge
in
ja
inc
shld
add
lret
and
cmp
insl
mov
push
adc
faddl
js
cmp
cmpsl
out
lods
insb
out
xchg
jns
iret
inc
shr
jl
inc
dec
fistps
push
cmp
dec
jecxz
push
and
mov
scas
int3
pop
insb
cmpsl
inc
inc
jmp
mov
out
pop
stc
ret
lahf
test
mov
fstps
call
pop
stos
outsl
das
lds
in
push
int
insl
mov
shll
jbe
sbb
in
jbe
jb
inc
iret
shlb
scas
inc
aad
lahf
and
cmc
push
insl
pop
pop
and
imul
dec
icebp
mov
fmul
cmp
mov
out
call
lahf
dec
lods
shlb
lock
imull
mulb
jo
or
outsl
mov
mov
int
movsb
lret
fcmovne
and
stos
fsubrs
and
push
test
faddl
pop
call
push
pop
insl
jmp
out
lret
outsb
dec
inc
add
push
cli
into
outsl
mov
add
int
movsb
leave
fadds
fsubrp
hlt
xor
mov
sbb
inc
cmc
fldt
mov
cmc
dec
push
fstl
rcpps
dec
in
scas
jmp
fs
les
cmp
std
enter
leave
mov
add
rcll
mov
imul
dec
dec
fbld
cmc
mov
mov
call
cmc
addr16
lcall
in
push
jecxz
dec
adc
icebp
rcr
dec
xor
stc
pop
loopne
and
fcomip
dec
and
mov
arpl
scas
adc
pusha
js
fs
lds
cmp
je
pop
int
rol
roll
xchg
daa
mov
mov
jmp
popf
insl
gs
jecxz
in
enter
icebp
ret
pusha
and
loope
sbb
popf
inc
push
xor
adc
pushf
pop
jae
leave
ja
test
icebp
shll
pusha
or
mov
rcrb
pop
xchg
stc
cmp
mov
cli
daa
aad
mov
aam
rcrl
xor
adc
push
ljmp
andb
jae
loop
inc
mov
lcall
adc
into
mov
inc
sub
sub
push
orl
leave
jg
push
add
shlb
lds
inc
stc
out
out
xorb
fcomp
mov
aaa
add
lods
notb
mov
lcall
adc
loop
fisttpll
scas
push
cwtl
mov
filds
add
andl
pop
xor
jg
ret
mov
pop
add
push
push
jb
insl
xchg
xor
lods
push
test
mov
mov
pop
clc
inc
push
and
add
in
popa
sahf
lret
cwtl
jl
lds
mov
aaa
repnz
dec
nop
enter
pop
ljmp
mov
ss
call
jecxz
cmpsb
rol
cld
test
and
and
icebp
lret
pusha
or
int3
jo
pop
jmp
adc
inc
mov
pop
pop
sbb
lret
lds
cmc
sbb
xchg
sub
repnz
shr
sub
mov
cmp
cmpsb
dec
iret
jnp
je
dec
test
dec
test
icebp
jb
sbb
in
push
or
mov
mov
sahf
fiadds
mov
jne
icebp
in
push
xor
lock
insl
imul
bsr
add
mov
aad
fsincos
adc
push
out
lea
icebp
lock
dec
ljmp
es
add
jo
push
push
sbb
push
or
adc
ljmp
xchg
lret
inc
in
sbb
cli
inc
aaa
in
pop
es
jns
add
push
repnz
cmp
sub
or
pop
aaa
mov
and
lods
lea
jno
mov
lds
in
xor
sub
or
lahf
sub
shrb
xor
inc
out
sub
out
and
lret
test
push
and
pop
cmc
outsb
orl
sbb
mov
movsl
pusha
pop
jbe
jno
mov
pop
cli
inc
sub
push
inc
insl
icebp
ret
jns
daa
sub
pop
ret
cltd
addr16
pop
mov
cwtl
addr16
pop
ljmp
leave
cmc
lds
bound
ret
mov
dec
sti
sub
pusha
mov
sbb
test
les
leave
mov
xchg
mov
flds
jmp
inc
loop
xor
scas
push
out
stc
push
mov
insl
push
and
fldt
gs
or
hlt
test
popa
dec
lcall
insl
orb
mov
scas
fs
lret
mov
add
fld
jmp
adc
inc
cli
adc
pop
jmp
inc
lret
inc
mov
imul
push
cli
sbbl
in
xor
xchg
inc
xor
adc
or
mov
movsb
addl
scas
push
lret
mov
mov
ret
mov
js
es
repnz
push
lea
or
dec
sub
dec
outsl
or
decl
mov
dec
hlt
and
pop
lds
mov
lock
mov
pop
insb
hlt
cmc
into
cltd
or
adc
mov
or
inc
mov
ljmp
and
lods
cmpsl
hlt
push
pop
icebp
test
sbb
push
int
dec
jns
bound
push
sub
mov
lock
in
bound
lret
mulb
jae
cld
fsubs
inc
mov
mov
dec
adc
and
ss
mov
arpl
jno
sbb
ss
mov
fsts
repz
push
notb
push
mov
ret
out
andb
push
sarb
repnz
shll
xor
xor
and
mov
dec
leave
shl
mov
and
ljmp
add
and
cmp
cmp
jno
ficoms
mov
pop
mov
mov
add
mov
es
lock
lds
insb
and
or
xor
sub
and
inc
push
pop
and
std
in
adc
ja
cmc
aaa
repnz
leave
add
movsb
adc
mov
xor
sti
sbb
and
addr16
leave
repz
out
movsb
sbb
andl
mov
imul
movsb
sbb
aam
iret
jns
hlt
dec
cltd
and
add
insl
cmp
add
push
jbe
xor
or
icebp
leave
cmp
movsb
cld
push
stc
mov
xor
sti
add
pop
cwtl
out
fidivs
mov
lock
in
cmc
add
loop
mov
fidivs
cmp
roll
mov
mov
mov
bnd
mov
jecxz
xor
es
mov
and
inc
fdivp
lds
push
out
add
movsl
jb
loop
and
add
out
subb
imul
in
mul
pop
cmc
mov
in
fcmovb
push
jns
add
jecxz
sti
pop
mov
dec
fstl
cld
lock
add
mov
jecxz
lock
xor
data16
mov
cwtl
int
mov
jmp
jmp
dec
shll
ret
jno
movsb
out
jbe
lock
jne
es
pop
mov
pusha
pop
test
inc
jne
int
andl
jge
jbe
icebp
js
lea
pop
repnz
insb
lret
adc
mov
and
or
icebp
xor
cmpsl
std
push
sahf
sti
mov
or
loopne
clc
jns
or
ret
shl
xchg
cli
das
in
dec
mov
cmc
xor
in
mov
push
ljmp
add
jle
nop
dec
out
cmp
aad
fcmovbe
xor
inc
inc
and
cmpsb
flds
mov
mov
jmp
imull
hlt
daa
mov
cmpsl
pop
jp
dec
sub
sbb
shlb
popf
jmp
push
mov
shrb
stos
mov
sti
lret
and
jl
les
je
loop
dec
dec
push
sub
push
dec
movsl
sub
inc
add
in
add
ss
push
pop
cmpsl
dec
xchg
icebp
jae
std
xchg
cmpsl
push
testb
adc
cld
pop
icebp
cmc
xlat
cwtl
dec
mov
fmuls
repnz
insl
pop
movsl
sahf
call
and
cmc
push
push
pop
jbe
adc
xor
sbb
or
xor
mov
sbb
and
or
adc
mov
mov
out
pop
fcoml
ss
in
rcr
in
arpl
ds
inc
mov
les
cmp
lcall
pop
xchg
push
mov
pop
and
cltd
stos
push
popf
imul
xchg
mov
xorb
push
push
rclb
testl
testb
push
cmp
inc
in
mov
pop
aad
and
pop
rclb
icebp
xchg
cmp
dec
in
push
out
adc
jns
negl
sbb
stc
jnp
lret
adc
jbe
lret
je
leave
mov
dec
test
lret
popf
xchg
jl
das
jge
jnp
and
bound
shl
popf
outsl
arpl
xchg
sbb
push
mov
ja
dec
hlt
popa
adc
pop
fwait
dec
pop
aaa
loope
in
dec
in
mov
mov
sbb
adc
int3
cmovg
mov
cltd
mov
imulb
or
or
push
pusha
mov
xor
pop
xor
movsb
mov
inc
cld
xchg
mov
mov
popf
dec
in
out
mov
xor
cmpsl
cltd
inc
jae
lcall
jae
insl
inc
inc
cmp
fcmovbe
jecxz
pop
xor
xor
imul
add
popf
je
ja
sbb
lcall
popf
cli
xor
or
mov
leave
cltd
xchg
idivb
stc
popf
enter
lock
add
div
mov
pop
xchg
lods
inc
int
pop
add
jns
loope
enter
jo
in
mov
sti
push
sahf
push
ja
inc
testl
negl
mov
das
lret
dec
dec
push
dec
shll
scas
cmpsl
cltd
inc
cs
lcall
out
stc
popf
je
jae
sbb
lcall
in
jl
xchg
mov
dec
mov
daa
xchg
insl
cmp
fsts
lds
xor
int3
out
negl
int
mov
jecxz
push
pop
xchg
scas
ljmp
movsb
and
cli
fisttpll
inc
inc
ficomps
sub
addr16
xrelease
divb
hlt
in
iret
enter
leave
testl
lds
cmpsl
cltd
popa
inc
stc
leave
add
xor
jb
mov
cs
mov
push
cld
popf
mov
bound
sbb
mov
inc
inc
lock
int
push
nop
push
je
movsl
and
pop
mov
movsb
sarl
cs
out
mov
movsl
mov
lcall
fs
mov
xor
push
push
orb
repnz
mov
sub
stos
xchg
jge
mulb
lock
jbe
pop
cmp
cmp
out
dec
in
cmc
stos
xor
sub
and
push
ret
cmp
loope
mov
adc
adc
inc
push
aaa
add
cmpsb
push
mov
and
sub
mov
inc
data16
outsl
sub
push
adc
negl
mov
adc
dec
cmpsl
xlat
aam
in
imul
cmpsb
leave
inc
sti
popf
jmp
dec
aaa
xor
cld
push
or
jae
mov
aad
popf
dec
in
sub
xor
mul
gs
stc
cltd
rcrb
sbb
out
push
in
scas
pop
jne
dec
cmpsb
mov
xchg
test
popa
movsl
popa
adc
or
xchg
mov
in
inc
imul
jnp
jb
lods
cmp
sbb
ret
fs
rol
jnp
aam
rolb
fld
ja
das
mov
adc
add
inc
xlat
xor
cmp
ljmp
test
pop
jecxz
cmc
pop
xor
mov
int3
popa
into
cmp
xor
ja
idiv
daa
call
push
sub
dec
mov
aam
inc
xchg
dec
dec
lahf
inc
push
pusha
lret
sub
jmp
pop
nop
push
imul
and
jmp
idivb
lret
fisttpl
fimull
sub
cmp
shll
mov
jne
test
cld
mov
pop
cltd
mov
jo
cmc
sub
lcall
add
popf
in
int
cmpsl
gs
popa
pop
out
insl
les
and
cmc
jb
sbb
lds
jns
pop
movsl
mov
popa
js
fisubs
and
jecxz
cmc
sbb
and
in
hlt
cmp
sub
fs
mov
and
jg
hlt
cltd
mov
repnz
or
pop
loopne
jg
mov
sbb
inc
in
and
out
cmp
mov
test
cmovb
and
movsl
cmc
cmc
and
sbb
mov
imul
loop
gs
xchg
leave
cmpsl
mov
shrl
pop
jecxz
js
shrb
and
cmc
mov
data16
les
out
jno
movsb
and
xchg
cld
imul
dec
cmpsb
jmp
or
mov
add
add
xor
jge
and
xchg
add
mov
loop
push
int3
pop
mov
mov
ljmp
movsl
xchg
or
ret
in
xchg
jne
mov
add
add
mov
jl
pop
sub
jbe
dec
cmpsb
xorb
mov
mov
loop
add
lahf
stc
push
mov
add
or
fidivrl
iret
movsl
js
in
dec
inc
adc
fdivrs
sub
std
mov
sub
lahf
sbb
imul
sub
movsl
popa
loope
and
leave
and
aad
adc
out
mov
ljmp
outsb
jb
pop
repnz
push
enter
movsl
in
sbb
mov
sbb
and
insl
adc
mov
call
jne
add
mov
inc
lds
jnp
clts
shlb
ja
daa
cmp
lret
push
das
dec
jbe
and
adc
pop
add
fxch
stos
cmp
jns
fildl
adc
xchg
inc
repnz
add
lcall
sub
jmp
mov
test
jbe
testb
lret
or
adc
adc
je
flds
xchg
popa
adcb
negb
mov
inc
push
loope
cli
adc
xlat
and
mov
inc
mov
stos
lods
cwtl
shlb
add
adc
shll
sub
xor
sbb
adc
sbb
xor
and
push
mov
add
rclb
movsb
pop
inc
fsubp
dec
je
pop
mov
or
and
in
inc
fxch
add
and
in
rcrl
jecxz
dec
cmpsl
stc
imul
shll
xor
rcrb
cli
inc
mov
jnp
imul
pop
addl
jno
sub
in
pop
xchg
mov
addr16
fsubrl
xor
addr16
cld
jne
pop
cmp
push
cmp
rcrb
clc
fstl
in
fdecstp
fsubs
gs
push
shlb
add
inc
or
lds
inc
add
push
loop
repnz
push
clc
in
push
scas
test
iret
jle
inc
inc
jb
adc
adc
arpl
lcall
and
mov
fnstsw
lcall
in
aaa
pop
mov
loopne
push
sub
movsb
vmulpd
mov
push
cmc
xor
mov
xor
dec
dec
into
lcall
in
or
scas
or
repz
xchg
test
jmp
repz
sarl
push
enter
stos
int3
out
adc
sbb
in
je
test
popa
push
stc
movsb
sbb
jno
jbe
push
imul
out
cmpxchg
repnz
insb
pop
xchg
mov
in
jcxz
hlt
je
inc
and
push
hlt
mov
dec
aad
pushl
rolb
hlt
jns
fistl
mov
pop
popa
inc
mov
lds
adc
inc
jp
cmpsb
cmp
mov
lods
fcoml
orb
ljmp
push
add
out
test
imul
subb
mov
pusha
inc
outsl
sbb
outsl
mov
pop
rcl
mov
mov
mov
jmp
inc
int
fnstsw
pop
in
imul
push
arpl
shll
icebp
add
out
xchg
adc
mov
pop
push
xchg
imul
daa
push
and
sbb
dec
pop
hlt
ljmp
xchg
les
sbb
mov
cmp
add
mov
push
cmp
xor
or
dec
std
jle
jl
movb
adc
popa
js
bound
push
int3
imul
pop
pop
incl
pop
aam
lcall
cmp
xor
jns
push
test
jge
les
test
jno
in
dec
out
pop
jo
fimull
pusha
imul
inc
jecxz
pop
loope
add
bound
dec
or
incb
sub
mov
fs
pop
jmp
lcall
fdivrs
insl
pop
movsb
outsl
repz
xchg
jo
es
fabs
jle
sbb
fsubr
addr16
repz
pop
cwtl
mov
adc
lods
xor
xchg
imul
mov
aad
cmp
popf
fsubl
pop
sbb
inc
rclb
fimull
ds
pop
inc
push
push
dec
adc
mulb
dec
xadd
inc
mov
loope
mov
addr16
out
aad
pop
stos
fistpl
cltd
in
xchg
int3
lock
stos
pop
test
outsb
inc
sarb
roll
ret
mov
jns
lret
icebp
arpl
loope
sub
mov
mov
adc
push
popa
loop
cwtl
jno
push
mov
ljmp
jmp
sub
rol
aaa
cltd
cmc
test
sbb
lret
inc
loopne
dec
test
fstl
mov
push
add
inc
xchg
lret
cmp
adc
or
push
cmc
push
and
iret
pop
in
xor
xlat
jl
push
gs
pop
fnstsw
inc
xor
and
sbb
jg
mov
xchg
ljmp
inc
fisttps
mov
fsubs
add
and
mov
sub
mov
bound
roll
dec
pop
movsl
or
gs
mov
mov
sbb
je
jbe
xor
adc
arpl
mov
repz
add
mov
rcll
dec
bound
sub
nop
ja
push
pusha
xchg
std
or
aaa
sub
cltd
pop
or
xchg
sbb
and
inc
sub
mov
test
mov
ret
inc
out
pop
cmpsl
cmp
jp
leave
add
lret
rcr
jp
dec
mov
scas
mov
inc
xorb
rcr
xor
dec
mov
stos
fcmovu
arpl
insl
jae
and
cmp
daa
inc
addr16
aam
out
movsl
in
test
mov
notb
ret
mov
std
loopw
std
push
loop
and
in
cmp
int
push
shll
sarl
sahf
dec
xchg
icebp
mov
mov
xor
push
xchg
mov
outsb
or
cli
xchg
outsb
loope
inc
or
andl
mov
or
push
xchg
ret
loope
out
test
data16
xor
cltd
es
add
jecxz
add
adcl
les
mull
loop
pop
ret
inc
and
mov
or
test
hlt
es
jmp
in
out
pop
jmp
popa
sar
cmpsb
mov
inc
mul
fldl
cs
std
ror
stos
sbb
imul
sub
call
stc
mov
ret
mov
mov
jge
mov
imul
adc
jl
movsl
jle
cltd
out
test
mov
cmc
sub
out
jge
fidivrs
jl
adc
imul
in
xor
jno
aad
sbb
ret
clc
jecxz
les
outsl
repz
fidivrs
or
cmp
pop
pusha
or
jg
xchg
push
test
or
imul
mov
or
in
mov
mov
sarl
fidivl
sub
push
jb
mov
sahf
xchg
clc
popf
xchg
add
std
ret
int
rolb
or
je
jecxz
and
dec
inc
jne
cmp
inc
scas
mov
loop
lds
dec
test
cmp
call
in
push
arpl
push
cmc
mov
repnz
fiadds
push
jle
jge
pop
cmpb
adc
pop
push
data16
pop
pop
sahf
icebp
je
mov
in
in
test
les
imul
fnstenv
enter
test
repnz
fldenv
repz
in
sub
es
cmp
push
lret
jecxz
and
ret
dec
outsb
cmc
ss
dec
cli
loop
inc
sub
lds
jmp
icebp
mov
mov
insl
jmp
adc
inc
jle
and
lds
movsb
sbb
cltd
hlt
xchg
mov
fsubl
sub
stos
cmpsb
mov
dec
rcll
mov
int3
fisubrs
out
loopne
jmp
mov
lds
mov
popa
cmc
mov
jbe
mov
add
repz
loop
loope
sti
dec
cmc
cs
dec
cmc
mov
inc
and
mov
and
or
lds
orl
mov
jne
dec
in
xor
ds
rorl
je
in
and
lret
lock
cli
insl
jecxz
hlt
ljmp
je
jecxz
and
xor
inc
ljmp
movsl
repnz
dec
sub
jne
inc
loope
add
mov
roll
sbb
mov
ret
insl
adc
cmc
icebp
xor
ret
lock
ja
ret
in
pop
into
push
aam
dec
pop
jl
push
jne
ror
jecxz
cmc
add
ja
ret
cmc
mov
inc
lock
dec
inc
sub
les
sbb
cmc
repz
out
sub
sbb
ds
int
sub
sub
sub
jb
lretw
loop
mov
clc
vhaddpd
ljmp
fcmovnu
insb
sub
daa
imul
aaa
add
jae
jecxz
fldlg2
sub
cmp
cmc
sbb
je
fistl
insb
fmull
xor
std
nop
or
into
mov
aaa
mov
lret
popf
sbb
je
cmc
or
into
shlb
jno
push
jle
sub
xchg
push
in
loop
mov
adc
in
jg
aam
dec
js
push
xchg
lds
add
inc
nop
mov
mov
or
sub
xor
leave
add
hlt
mov
mov
inc
es
js
adc
sub
mov
gs
mov
jbe
xor
lret
inc
leave
test
mov
cmc
jnp
pop
inc
mov
mov
dec
push
push
push
inc
jne
fisubs
jmp
gs
dec
clc
jno
dec
int
sbb
and
mov
js
data16
jns
lret
lcall
add
mov
or
cmpl
cmc
jae
or
cmpl
ljmpw
inc
hlt
push
fdivl
gs
sbb
xlat
ret
pop
dec
mov
mov
popf
js
mov
dec
dec
js
test
loope
xchg
cmc
stos
repz
xchg
push
or
pop
mov
push
cmp
lcall
jp
push
and
es
cmp
lcall
mov
dec
arpl
push
bound
pop
stc
or
pop
jl
cmp
insl
hlt
jmp
mov
and
inc
cmc
cmp
xchg
gs
hlt
mov
xchg
lcall
jge
idivb
fsts
outsb
push
cmc
pop
push
pop
fstpt
mov
mov
sbb
cltd
hlt
lods
incb
sbb
dec
push
inc
ret
jno
insb
jecxz
jno
push
inc
cs
aas
test
add
mov
xchg
andl
pop
mov
mov
ret
sahf
out
xor
jno
or
and
hlt
fwait
jg
xchg
or
push
inc
sub
cmc
cmpsb
jbe
in
push
jge
xor
fsubrp
and
and
test
add
and
xchg
into
mov
xchg
inc
xchg
addr16
sbb
inc
cmc
add
pop
inc
sub
sub
and
fldl
je
fisubs
jno
sarl
aam
bnd
gs
aad
cmpl
lds
lds
in
pop
in
pop
fs
jle
pop
mov
cltd
aad
xor
jo
or
and
pop
mov
xor
and
inc
or
jl
or
bound
inc
cwtl
es
repnz
sub
push
jg
movsl
sbb
hlt
push
xchg
fs
adc
mov
bound
mov
push
xor
lahf
cmc
pop
call
cmp
or
fstl
cmp
nop
in
leave
mov
jbe
shl
mov
add
cmc
or
push
sub
mov
or
enter
dec
xor
jnp
sarl
jge
sti
sub
or
std
fldl
cmc
xchg
push
and
into
jne
and
scas
lock
cmc
int
in
in
sub
stos
daa
pop
je
lret
sahf
dec
shl
in
sub
popw
mov
xchg
adc
lret
test
rcrl
in
or
cmpsl
loop
sahf
pop
sbb
jns
and
xor
icebp
in
cmp
pushf
push
add
sub
push
in
repnz
mov
fucom
mov
cmp
inc
rclb
push
cmpsb
push
xor
xor
rcr
jle
aas
loop
adc
push
add
outsb
out
gs
add
push
mov
add
sbb
out
xor
ficomps
ja
ret
add
mov
mov
rcll
fidivl
sub
adc
lock
hlt
test
clc
xchg
mov
ret
clc
add
ja
ret
mov
inc
mov
aad
arpl
imull
xchg
sub
sbbb
push
jg
adc
in
cli
addb
xlat
arpl
jbe
mov
ret
jp
in
xchg
out
imul
adc
cmp
loope
and
inc
les
push
and
cmpsb
mov
mov
or
je
jecxz
and
lock
hlt
ret
sti
mov
ret
testb
inc
push
push
scas
mov
sub
xchg
lods
sub
fsubrs
xor
out
push
cmp
xor
fsubrl
lods
add
inc
cmc
add
and
movsl
push
dec
icebp
repz
push
or
sbb
pop
lcall
jle
in
popa
rolb
popa
inc
lock
pop
inc
loop
mov
es
and
push
cmc
shll
lret
dec
in
and
lock
sahf
mov
dec
fucom
aam
adc
and
pop
sub
xchg
mov
data16
in
dec
fisubl
nop
and
repz
sbb
xchg
xor
mov
push
jp
jnp
mov
call
sbb
andb
xchg
test
int
in
fnstenv
push
cmc
add
ja
ret
lret
inc
fisubl
mov
shll
je
in
shl
jl
add
clc
loop
pop
push
loope
push
xchg
test
arpl
fldcw
movsl
aam
dec
mov
gs
xor
mov
push
ffreep
leave
mov
jne
inc
std
mov
mov
dec
add
xor
popa
scas
inc
mov
cmc
dec
inc
jmp
jecxz
int
call
fwait
and
mov
mov
fisubrl
add
out
hlt
cltd
in
vpcmpeqd
push
call
movsl
lret
pusha
add
inc
fists
es
es
cmpsb
pusha
cmp
jbe
xor
into
fidivrl
hlt
mov
js
jle
push
stc
push
push
icebp
addr16
dec
lret
clc
loope
testb
cmp
lret
stc
rcrl
mov
shr
jmp
xchg
out
mov
mov
stos
adc
cmp
ret
sbb
fnstsw
jae
clc
out
push
cs
lret
add
fimull
lods
lds
mov
inc
pop
or
xchg
xor
and
inc
stc
inc
push
mov
and
cmpsb
or
xchg
xor
in
push
int3
in
jne
mov
mov
inc
xchg
jne
xor
add
clc
in
mov
inc
test
add
xchg
dec
int
jge
pop
or
test
jnp
push
xchg
mov
pop
stc
sub
cli
ret
das
stc
push
pop
add
daa
ljmp
hlt
js
mov
mov
xor
add
int
jge
pop
or
scas
lods
movsl
adcb
loopne
sbb
mov
sub
ljmp
push
popf
in
xorb
push
push
shl
das
addb
fs
inc
inc
and
pop
cmp
mov
pushf
lods
leave
movsl
aas
sbb
mov
call
xchg
fwait
pop
imul
frstpm(287
lahf
adc
shlb
pop
add
in
aas
pop
dec
mov
arpl
cmpsb
lds
popf
in
dec
mov
sbb
mov
roll
fwait
mov
xor
mov
xchg
ret
sub
push
mov
push
push
mov
aaa
ljmp
add
xor
jne
xor
add
es
pop
in
in
popf
inc
shll
or
stc
xchg
xor
xchg
ljmp
or
xchg
insl
loope
mov
or
or
xchg
add
clc
jo
ja
adcl
sub
mov
aas
ljmp
lahf
jp
and
clc
inc
or
inc
mov
push
jp
adc
ljmp
jge
lods
dec
mov
ljmp
cmp
das
mov
pop
adcl
mov
lods
addr16
adc
pop
je
mov
mov
dec
xchg
xor
and
cmp
pop
aad
mov
xchg
lods
test
mov
not
add
jmp
push
push
cli
cmpsl
cmc
in
mov
lds
mov
ret
fldl
sar
clc
out
push
fiadds
test
movsb
mov
push
fistps
mov
mov
mov
adc
fptan
insl
std
and
das
int3
mov
sti
repz
imul
in
sub
sarl
push
mov
jnp
test
xchg
sub
xchg
jmp
dec
and
push
js
lea
mov
adc
lea
sti
std
pusha
das
lcall
or
dec
add
icebp
inc
sub
lds
push
imull
jne
pop
push
popl
lds
mov
imul
adc
ljmp
cltd
ljmp
and
fst
sub
xor
mov
jnp
inc
sbb
mov
aam
push
sbb
cmp
pop
cmp
sub
adc
mov
mov
or
sub
xor
arpl
fildl
adc
in
jle
or
mov
lcall
jne
lock
stos
in
mov
insb
in
adcl
ficomps
fldcw
push
test
cmc
pop
bound
cmp
mov
imul
into
test
mov
mov
pop
lds
push
jg
es
sahf
add
movsl
sbb
cltd
mov
out
push
inc
adc
in
inc
add
jecxz
ss
ss
outsb
pop
jne
push
loop
pop
cli
loope
pop
loope
pop
push
loop
pop
sub
leave
pop
loop,pn
pop
xor
add
ss
sbb
add
lds
hlt
xor
xor
in
or
add
xlat
mov
mov
add
inc
add
adc
push
pop
pop
push
mov
xor
mov
xor
test
fwait
jmp
xor
adc
mov
pop
int
pmaxub
scas
mov
repz
mov
shr
push
adc
cmp
test
cwtl
add
in
xor
sbb
aad
xor
or
popa
jbe
sub
pop
jno
in
in
and
push
sbb
dec
pop
cmc
inc
push
popa
and
in
push
cmc
into
js
dec
or
xor
mov
sbb
repz
lret
rcr
stos
lret
js
xchg
push
into
lcall
ljmp
xchg
add
ss
arpl
fcomps
in
inc
out
inc
repnz
int
inc
call
je
dec
mov
in
fwait
arpl
les
insb
hlt
data16
test
or
pop
daa
sub
clc
xchg
pop
ss
push
push
movsb
push
push
int3
cmp
test
sbb
mov
imull
loop
movsb
mulb
test
pop
jne
into
dec
pop
pop
push
sub
bound
out
fisubrs
std
arpl
push
icebp
pop
adc
xchg
lds
mov
enter
dec
fs
jns
and
lea
push
pop
add
cmp
pop
int
or
pop
push
mov
aad
fcompl
jns
mov
jbe
sub
sbb
in
mov
push
es
pusha
iret
mov
fldcw
xor
jmp
adc
sub
mov
lds
and
int
mov
popf
push
or
pushf
movsb
rcl
jo
xchg
sti
lret
adcl
adc
shlb
rcrb
push
hlt
jle
dec
sub
rorl
pop
jp
lret
jge
add
mov
or
push
pop
or
fsubs
cli
push
mov
push
repz
adc
test
jns
jle
adc
out
cmp
out
enter
sub
lods
insl
addr16
pop
mov
out
je
out
je
testb
xorl
fisubrl
out
gs
lods
push
adcb
mov
cwtl
and
dec
ret
dec
mov
imul
sbb
das
xchg
jge
push
cmp
mov
stc
cmc
mov
lret
shlb
test
add
js
ret
jno
bound
mov
mov
ret
push
out
mov
mov
movsb
jge
and
inc
sub
adc
inc
or
loope
into
mov
rcrl
stc
and
lock
hlt
jno
test
mov
ret
into
add
js
ret
pop
jne
inc
lea
mov
inc
cmp
les
movsl
dec
and
hlt
cli
out
dec
je
mov
mov
shll
je
in
and
xchg
icebp
in
insl
inc
jne
shl
lods
sub
pop
push
push
pop
mov
ret
cltd
pop
mov
hlt
ret
and
cmp
clc
mov
imul
and
add
inc
gs
xor
movsl
test
idivb
mov
jne
inc
adc
push
mov
ret
and
js,pt
in
movsl
and
out
sub
add
and
cmpsb
aas
push
insb
cmpsb
mov
rcll
aad
and
mov
popf
inc
cmc
addr16
mov
add
fisttpll
jns
pop
movsl
mov
dec
sbb
rol
mov
jne
inc
adc
cmp
jne
mov
shr
mov
rorl
frstor
ss
xchg
cmc
int
jecxz
in
sub
xchg
add
ja
ret
xchg
pop
mov
out
jecxz
and
sbb
clc
pop
les
lea
dec
jns
sub
or
stc
imul
dec
sbb
loop
addr16
ret
xor
mov
mov
enter
je
add
mov
mov
ret
and
push
lods
insb
xchg
lret
in
and
xchg
icebp
loope
inc
jns
in
sub
xchg
add
mov
jne
inc
mov
cmp
add
ret
popa
jne
inc
dec
mov
mov
ret
fisubrs
or
shll
add
cmp
pop
insb
movsl
jmp
scas
in
sub
push
push
xor
cmp
lret
sub
jbe
shlb
out
or
mov
inc
lock
gs
push
sahf
clc
test
xchg
dec
jmp
pop
push
js
ret
imul
adc
jno
icebp
sahf
jmp
movsl
adc
inc
out
sub
push
loop
push
mov
mov
rorl
loope
xor
sub
mov
or
and
lock
xchg
inc
cltd
mov
mov
and
xor
sahf
pop
clc
mov
test
xlat
movsb
fldl
inc
imul
dec
jns
gs
rol
or
popa
mov
mov
ret
push
outsb
ficoms
int
fldenv
repz
sub
es
sbbb
add
xor
imul
mov
jne
inc
mov
pop
call
rcrl
sub
aad
push
out
cs
xor
ret
fst
movsl
and
in
sub
es
sbbb
icebp
dec
les
into
or
and
lock
hlt
test
sahf
test
fistpll
stc
inc
or
movsl
pop
push
dec
inc
hlt
push
in
pop
cmpb
sahf
xor
pop
dec
std
repz
push
fdivs
sub
dec
mov
xchg
popf
sub
push
push
xchg
jb
dec
lret
mov
and
adc
sahf
popa
clc
push
les
sbb
loop
jno
jne
inc
aad
add
shll
je
in
and
mov
mov
inc
mov
ret
ljmp
add
sbb
dec
mov
mov
ret
outsb
movsl
fidivrs
movsl
sub
out
sub
pop
jb
test
cltd
movsl
cmc
and
jecxz
and
xor
sahf
pop
clc
test
and
mov
mov
ret
bound
push
pop
xorb
test
es
ljmp
sbb
sahf
cmp
in
and
dec
fstpl
ja
ret
jno
push
pop
mov
mov
mov
ret
cmp
dec
popa
mov
mov
ret
data16
fidivrs
movsl
sub
mov
in
sub
es
sbbb
gs
je
jecxz
and
lock
mov
lret
dec
je
jecxz
and
insl
dec
xchg
les
xor
hlt
and
sahf
dec
clc
inc
les
mov
fimuls
inc
sub
les
sub
and
mov
jne
inc
and
mov
roll
je
in
and
into
test
repz
xor
ret
outsb
push
into
pop
pop
sahf
mov
jne
cltd
or
jnp
lds
ja
ret
adc
inc
jns
push
sub
mov
cmpsl
in
inc
add
pop
movsl
mov
dec
out
cmpb
fstps
cmp
cmc
divb
leave
ret
adc
mov
jb
shl
cmc
inc
adc
pop
movsl
mov
shlb
ret
adc
inc
jns
push
and
enter
icebp
aad
sub
pop
out
sub
adc
insl
mov
loope
insb
cmpsb
mov
sarl
je
in
and
mov
xor
mov
xor
ret
es
cs
ret
in
xor
jne
jecxz
and
add
inc
or
hlt
cmc
jns
aad
insl
mov
in
push
mov
ret
push
jne
mov
aam
mov
stc
mov
in
sub
xchg
add
push
scas
movsl
adcl
jg
mov
sub
mov
jns
xchg
fldl
dec
adc
jecxz
flds
push
aad
loope
and
jb
fsubrp
lret
mov
ljmp
lods
cmpsb
add
lret
pop
mov
sub
in
and
add
subb
jno
lds
push
je
sti
cltd
shlb
loop
jne
pop
popa
test
or
mov
sbb
cmp
push
sub
jmp
mov
sub
xor
aad
cli
push
insb
push
inc
jecxz
imulb
jb
in
lret
lds
out
hlt
div
sbb
aam
in
sub
outsb
sub
in
sub
and
mov
shl
fwait
test
jae
aam
gs
mov
jp
aam
jo
inc
xor
test
add
dec
push
sbb
ljmp
popf
pusha
test
insl
sub
les
xchg
push
fstpt
fucom
add
ljmp
rcrl
int3
mov
movb
cmp
pop
cld
in
shlb
and
fsts
jbe
push
fmull
jecxz
mov
or
sub
pop
jecxz
shlb
test
cmp
std
lods
mov
aad
xchg
cmc
sub
push
popf
mov
inc
je
out
and
and
adcb
lret
icebp
xor
aaa
dec
fisttpll
roll
loope
add
adc
or
fucomp
cmp
hlt
out
repz
inc
cmpsb
xchg
and
test
pop
in
mov
shlb
ljmp
std
push
pusha
xor
and
xchg
fstp
cmp
sub
test
inc
scas
imul
adc
movsl
sbbb
fldl
jb
mov
test
push
xchg
mov
idivb
fsubl
mov
lods
mov
lcall
aam
int
outsl
adc
dec
xor
lret
push
pop
dec
pop
fsubl
shr
mov
in
in
dec
xchg
mov
add
xchg
ljmp
mov
insl
xchg
cmp
add
jbe
jne
and
jge
lea
insl
jmp
xor
and
jno
popaw
or
xchg
sahf
jns
je
shll
ljmp
ss
xchg
aad
ljmp
je
addl
inc
xor
lcall
cmp
xor
roll
cmp
push
imulb
mov
fisttpl
lds
xor
divb
lret
out
insl
movsl
movsl
mov
in
ds
dec
sub
loope
add
or
jl
int
ss
je
daa
dec
sbb
jae
dec
jge
rcl
ss
cmc
in
subl
fst
and
sub
mov
cmp
popf
lods
mov
jno
xor
xor
jb
fstl
les
addl
insl
ljmp
or
inc
jno
xor
sub
and
addb
and
repnz
mov
mov
dec
sbb
sahf
xchg
mov
or
mov
mov
mov
add
orb
mov
pop
mov
dec
xchg
mov
icebp
push
pop
mov
fnsave
pop
and
shll
dec
aam
aad
mov
mov
test
repz
lret
addb
movsl
daa
bound
xchg
mov
xchg
in
push
insl
push
pop
mov
xor
inc
shll
scas
lods
mov
jo
mov
mov
fstps
addr16
jne
arpl
mov
aas
jmp
pop
insl
and
insl
repz
cmp
jo
loop
mov
insl
sbb
fidivs
jle
into
mov
xor
orl
sbb
repnz
popf
out
lds
xor
repz
dec
and
jnp
xor
jp
pop
jp
push
test
lss
icebp
push
mov
and
popa
add
and
popa
add
hlt
pop
fsubp
and
popa
add
popf
pop
and
sub
decb
sbb
mov
stos
gs
inc
cli
push
push
inc
ret
mov
inc
fwait
mov
pop
jo
push
dec
sarl
into
scas
dec
shl
shr
stc
mov
push
popa
fsubp
push
sbb
inc
outsb
cmp
icebp
lea
in
mov
outsb
fstp
xor
jns
mul
push
push
or
cmpsb
aad
xor
inc
lret
mov
jb
fsts
xchg
or
xchg
push
xchg
sbb
jb
fs
pop
shr
es
push
lock
inc
xchg
fldenv
cs
cmp
cmpsl
nop
or
stos
push
push
pop
adc
adc
push
xchg
or
xor
cld
sub
sub
adc
sbb
fs
dec
sub
sub
sub
sub
jl
test
lods
sub
lret
div
inc
mov
xor
pop
or
xor
and
pusha
pop
push
sub
cmp
push
jae
movb
in
int3
std
mov
aaa
outsb
add
pop
adc
jecxz
iret
add
and
push
ds
fstl
and
sbb
stc
inc
insb
push
fsubs
add
cmpsl
lea
xchg
out
insb
sahf
xor
daa
sahf
adc
int3
sub
lret
imul
pop
inc
push
pop
cmpsl
js
lock
fsubrs
xchg
xlat
pushf
cmpsb
repz
inc
mov
popf
les
add
out
rorl
int
mov
dec
mov
xchg
les
or
imul
xchg
inc
xchg
jl
insl
lahf
sahf
mov
fwait
fwait
ljmp
add
cmc
into
ds
dec
lahf
test
xor
lods
inc
std
int3
adc
mov
std
fldenv
inc
in
fisubrs
or
ds
mov
jle
test
sub
mov
mov
test
xchg
pop
fwait
pushf
dec
fwait
cmp
inc
mov
outsl
add
pop
cli
jns
dec
cmpsb
rorl
lea
xchg
sub
lea
out
xchg
cmpsb
sbb
shl
or
xchg
inc
adc
pop
and
xchg
into
je
cmpsb
pop
pop
jb
test
push
mull
cmp
ss
sahf
sbb
lret
inc
add
sti
in
push
pop
xchg
and
add
and
sub
push
bound
pop
cmp
fistpl
in
mov
into
jp
test
fwait
push
rol
loop
sarl
out
push
fnstcw
sbb
dec
aas
push
and
sbb
adc
cmpsl
xlat
loop
pop
mov
sbb
pop
fisttpll
movsl
mov
mov
inc
mov
jle
mov
insl
mov
aad
test
stos
inc
xchg
mov
fwait
add
adc
xchg
enter
mov
mov
bound
push
add
popf
ja
adc
push
lods
js
out
or
test
lret
mov
cmpb
sub
ficoms
dec
mov
shlw
dec
outsl
into
stc
mov
fnstsw
mov
fcom
test
xchg
add
mov
ror
fldt
fcoms
and
loopne
insb
daa
out
pop
cmpsb
mov
inc
repz
ret
xchg
movsl
lret
std
in
or
xchg
pop
push
sub
clc
sbb
push
or
mov
cmpsb
sbb
push
add
sbb
adc
and
push
sbb
xlat
nop
fistpl
fdivs
sti
mov
xchg
test
xor
clc
nop
adc
fdivs
inc
call
je
jle
xchg
mov
cmpsb
test
andl
nop
jecxz
pop
imul
call
pop
incl
add
add
leave
loop
enter
mov
mov
xchg
dec
xchg
rcrb
stos
cltd
mov
mov
jbe
inc
jecxz
pop
inc
repz
inc
ret
jbe
xor
es
xchg
test
js
mov
pop
cwtl
sub
or
notl
xchg
rclb
stos
pushf
mov
mov
pushf
nop
lcall
jo
sti
pushf
inc
fwait
lret
pushf
push
fistpl
fwait
cmp
adc
xchg
out
mov
testl
pop
pushf
daa
mov
shll
pop
pushf
pop
mov
pushf
pop
mov
mov
fwait
ja
addr16
inc
mov
push
mov
fwait
mov
cmpsl
fwait
xchg
fldt
lock
rcr
xlat
shl
pop
mov
loopne
mov
mov
sahf
lret
cltd
push
sahf
fistpl
xor
or
loopne
push
out
mov
test
xlat
pop
xlat
movl
mov
jbe
inc
fwait
jbe
inc
jmp
jo
sti
jbe
inc
lret
jbe
inc
inc
sub
inc
cmp
inc
or
inc
sbb
imul
inc
dec
sahf
aas
mov
mov
test
mov
mov
test
jle
test
sti
jle
test
adc
pop
nop
cld
mov
jae
call
xor
lods
cmpsb
mov
mov
xchg
jmp
test
xchg
rcll
sbb
add
or
psubsb
inc
sbb
or
sub
sub
or
dec
and
jecxz
ja
addr16
inc
mov
rol
xor
ja
inc
or
inc
sbb
mov
jnp
sarb
jbe
inc
stos
jbe
inc
mov
jbe
inc
fwait
jbe
inc
jmp
jo
sti
jbe
inc
lret
jbe
inc
inc
sub
inc
cmp
inc
or
or
repnz
gs
ss
adc
arpl
push
adc
or
sbb
xchg
or
add
lds
fwait
and
mov
rolb
daa
sti
insl
addr16
jge
cli
dec
addr16
cli
pop
addr16
addr16
mov
addr16
repz
cwtl
or
testb
rclb
push
popa
cmpsb
cmpsb
nop
mov
mov
shll
nop
mov
and
cmp
inc
andb
cltd
dec
sahf
sub
cs
or
push
lahf
sub
fisubs
dec
xchg
mov
popf
test
cltd
scas
xor
cltd
jbe
inc
jmp
jbe
inc
leave
outsl
ds
lods
pop
jp
mov
rcrb
cwtl
mov
int
mov
xlat
movl
pop
sub
icebp
pop
aaa
adc
cmp
popa
pop
inc
imul
pop
pop
mov
xchg
inc
xchg
fistpll
sbb
push
enter
push
add
cs
push
push
ss
sbb
push
or
push
push
or
push
jp
sbb
outsb
sbb
movsl
out
cli
movsl
addr16
mov
xchg
cli
cltd
dec
fucompp
adc
movb
xor
mov
std
pop
mov
or
popf
mov
jns
rorl
pop
inc
int
push
test
pop
adc
mov
mov
repnz
sahf
ret
cmpl
cs
push
or
push
push
or
push
data16
jb
cmpsb
jp
addr16
addr16
test
push
mov
add
ret
jp
out
cli
shll
cli
sub
addr16
sti
sbb
addr16
cli
insl
addr16
cli
jne
cli
movsl
addr16
test
addr16
mov
stos
lcall
ret
sbb
rorb
out
add
ss
adc
push
pop
push
sub
inc
sub
dec
sub
sub
push
scas
test
cmp
popf
lcall
xchg
in
leave
nop
shrl
in
adc
cmpsb
nop
movsl
cmpsb
sahf
nop
lods
cmpsb
xchg
in
cmpsb
jbe
cmc
cmpsb
outsb
xchg
std
cmpsb
inc
xchg
lds
sub
or
cmpsl
push
xchg
sbb
daa
ljmp
and
repnz
or
and
adc
pop
inc
gs
dec
fildll
jle
test
cmp
test
iret
loop
jno
fisubrl
jp
repnz
mov
mov
mov
scas
test
jle
test
jle
test
jle
test
jle
test
aad
dec
test
and
sbbb
push
jmp
jg
loop
aas
loop
ret
dec
cltd
cmpsb
popf
mov
xchg
popf
xchg
cltd
mov
in
pop
ds
testb
ja
xor
push
mov
adc
insb
xchg
dec
inc
cmpsb
mov
cwtl
pop
or
enter
add
lcall
add
adc
outsb
add
jb
mov
call
pusha
in
sbb
jecxz
lret
addr16
icebp
pop
cmp
es
gs
popa
pop
dec
inc
outsb
pop
push
push
pop
pop
pop
pop
movsl
movl
jmp
pop
shrb
xchg
fldl2e
xor
pop
push
sub
dec
cs
pushf
outsb
fwait
std
pushf
inc
fwait
lds
jmp
sarl
fiadds
sbb
loope
jbe
mov
adc
jbe
push
cmc
add
enter
mov
lods
lcall
test
mov
dec
loopne
xlat
add
push
iret
aad
stos
movsb
xor
cmp
sub
pop
out
and
lea
subl
fldt
pop
mov
lret
add
push
push
scas
ss
shrl
cld
pop
enter
inc
fcomps
dec
inc
sub
inc
xor
inc
cmp
cmp
shrl
or
mov
cld
jg
loop
aas
out
mov
fldt
jl
sub
lods
shlb
fsubl
jbe
fdivl
cmc
test
int3
pop
xchg
sub
fs
fidivs
stos
stc
iret
jmp
fdivrs
push
es
xor
xchg
mov
pushf
cltd
add
mov
es
enter
fmull
inc
in
shll
lahf
pushf
pushl
fistpll
inc
mov
shlb
mov
inc
nop
outsl
jns
mov
sbb
inc
pop
mov
rclb
sub
lds
pop
or
inc
and
add
adc
negb
shrb
push
add
mov
repz
mov
push
mov
pop
cltd
push
adc
jb
adc
lahf
mov
mov
pop
stc
imul
push
push
fsub
mov
icebp
xchg
sbb
sub
or
mov
inc
inc
andl
cmp
leave
adc
sbb
loopne
fldt
pop
mov
cmp
push
or
mov
or
pushf
lret
and
lcall
adc
ficomps
jae
mov
in
bound
push
mov
mov
mov
leave
repz
psubb
scas
inc
stc
addl
sbb
dec
mov
neg
mov
out
out
adc
daa
xor
or
or
movsl
mov
sub
ficoms
incb
sub
out
repz
cltd
xchg
xchg
xchg
sahf
xchg
fs
ljmp
rcrl
fwait
inc
popf
add
sbb
call
lock
jp
sub
adc
ret
cltd
jb
les
and
pop
xor
inc
cmp
adc
popf
sbb
lds
and
out
sarl
sahf
jb
mov
pop
xchg
mov
xchg
dec
sbb
call
or
mov
imul
enter
cmp
fisttpll
loope
lret
cld
jmp
cld
mov
xchg
aaa
adc
cmp
mov
inc
out
inc
cmp
mov
push
lds
push
push
pop
ret
jmp
cmpsb
repz
stos
add
rolb
outsl
scas
test
add
inc
lock
cld
out
mov
insl
push
lret
in
pop
mov
lret
push
lret
xor
leave
nop
inc
test
mov
mov
jp
shll
sti
out
cli
shll
leave
addr16
shll
int
repnz
adc
lcall
mov
popf
pop
sub
outsb
decl
jbe
loopne
jb
std
fwait
movsl
mov
cmp
xor
inc
xlat
sub
or
outsl
mov
daa
mov
fwait
leave
cltd
aad
cmpsb
loopne
lcall
adc
or
dec
sub
cmp
inc
lcall
mov
jbe
mov
scas
cli
xchg
addr16
jp
jne
and
lret
sub
sbb
into
cwtl
adc
std
mov
adc
and
xor
xchg
call
lds
mov
push
fcmovb
mov
outsl
mov
adc
cmp
mov
pop
cmpsl
xchg
sub
sub
pusha
out
adc
add
mov
mov
cmpsb
sub
jns
jmp
sti
lock
test
pop
xor
enter
lahf
test
popf
ja
lret
mov
sbb
aas
sbb
sbb
sbb
mov
xlat
ret
hlt
stc
out
fiaddl
pushf
mov
mov
fisttpll
dec
mov
stos
aas
imul
movsb
decl
add
or
cmp
icebp
pop
sbbb
pop
pop
movsl
shlb
sbb
lcall
arpl
add
out
loopne
mov
incl
add
add
sub
insb
aad
rorb
mov
mov
out
cli
inc
jae
cmp
fwait
cmp
or
popa
shl
fcmovu
jns
repnz
push
fisttpll
out
inc
insl
pop
loop
jle
cmpsb
std
xchg
shlb
or
push
push
xchg
es
or
jb
ficoml
inc
xor
xchg
lea
mov
mov
std
popf
sub
sbb
inc
pop
push
mov
rol
cmpl
loope
cmp
sbb
movsl
adc
mov
fwait
sahf
cmp
sbb
sbb
inc
jl
xor
nop
dec
mov
stc
push
cmpb
jb
aam
cltd
andb
pushf
out
daa
xchg
jbe
pop
xchg
xor
aas
cs
push
mov
out
inc
jne
adcb
pusha
cli
add
std
pop
ret
nop
pop
rolb
scas
mov
bnd
cmpsb
fmull
loope
xlat
adc
arpl
icebp
or
sub
enter
lret
int3
pop
cmp
testb
sahf
pop
aam
xorb
jp
or
fcmovne
jae
mov
mov
mov
inc
cmpsl
sub
xchg
mov
dec
arpl
out
xchg
inc
xor
dec
out
cmp
dec
inc
lcall
add
add
or
xchg
add
dec
jmp
aam
xchg
sarb
daa
fidivrs
push
stos
enter
mov
cmp
insb
fisubl
push
int
das
je
mov
pop
push
in
mov
sbb
std
daa
inc
inc
mov
sbb
push
cli
pop
je
or
xor
pop
inc
sbb
and
adc
adc
fstpl
out
cli
int
out
scas
mov
lret
and
fisubrl
or
int3
nop
imul
sub
rorl
scas
mov
push
mov
cltd
ja
xor
dec
mov
jae
fs
add
in
ret
pusha
ret
mov
mov
into
fisttpll
xor
pop
rcrb
adc
xchg
sbb
in
imul
push
pop
pop
pop
mov
adc
xchg
icebp
xor
and
fldl
test
push
jp
xchg
cmpsb
mov
cmc
cmpsb
push
lds
add
jecxz
add
enter
shrd
notb
mov
jne
hlt
xchg
insl
xchg
cld
js
and
sarl
sub
int
jae
or
pop
out
test
adc
rorb
imul
roll
hlt
or
lods
mov
fisubrl
fsubs
shrb
jnp
std
ror
cmp
cmp
shll
pop
add
jp
rorl
sbb
ljmp
sbb
pop
jmp
pop
out
push
scas
movsl
add
popf
cs
cmp
movsl
fisubrl
pusha
lds
dec
push
inc
pop
rcrl
inc
movsl
jbe
inc
mov
push
test
sbb
jge
fldenv
cs
or
inc
adc
inc
sbb
inc
and
test
imulb
nop
stc
bound
add
imul
mov
or
shll
dec
push
xor
je
mov
sub
call
in
push
mov
shrl
pop
inc
add
dec
inc
shlb
notl
push
loope
dec
xor
push
xchg
or
pop
push
outsb
dec
jbe
jne
je
dec
in
jb
shrl
daa
jle
idiv
mulb
push
cmc
adc
repz
pop
in
pop
cmp
jle
test
cmc
enter
mov
cmp
cmp
das
outsb
push
jle
insb
out
add
out
dec
in
push
frstor
inc
mov
xchg
test
push
and
pop
dec
and
sbb
and
sbb
or
scas
push
rorl
call
mov
daa
fidivrl
test
jle
movsl
out
xor
push
or
sar
lods
pop
mov
mov
jbe
shrl
fwait
or
cmp
fsubl
sbb
jno
or
or
inc
xor
xlat
in
pushf
jbe
cmc
pushf
outsb
sub
inc
xor
negb
cmp
mov
jmp
pop
call
inc
mov
or
mov
aam
mov
mov
push
cmp
outsb
push
loop
and
sbb
repnz
jmp
sub
pop
divb
ds
pop
scas
add
pop
dec
xor
subl
mov
push
out
add
movq
gs
fsubrl
mov
adc
xor
imul
adc
rcll
and
out
mov
push
adc
cmpsb
cltd
mov
int
cmp
hlt
pusha
clc
insl
shl
push
inc
pop
jb
mov
pushl
mov
ljmp
inc
out
pop
test
mov
sbb
mov
jp
in
mov
out
aad
addr16
and
sub
or
out
cltd
roll
and
mov
das
mov
lods
mov
xor
das
sbb
stc
mov
cltd
inc
sahf
lds
sti
int
je
sub
pop
cmpsb
scas
mov
lods
mov
sbb
jmp
pop
mov
inc
mov
es
xor
sub
mov
je,pt
or
dec
cmp
sbb
mov
loope
lret
xchg
and
mov
add
or
sbb
flds
mov
pop
cs
mov
add
jle
pop
sbb
leave
pop
fs
loop
aas
dec
and
push
mov
movsl
lahf
sbb
cwtl
out
gs
inc
divb
sub
divb
lods
std
js
scas
lds
push
push
pop
out
pop
xor
adc
stos
mov
and
call
repz
bound
jge
cli
stos
inc
jno
mov
and
popf
sub
adcb
and
test
sti
add
pop
stos
xchg
fstl
inc
pop
adc
jae
xlat
mov
pop
jb
mov
imul
out
cld
roll
aam
fmuls
mov
mov
fst
adc
push
add
pop
or
into
out
ret
or
pop
add
add
adc
xchg
movsb
mov
pop
out
pop
je
fld
add
jle
pop
sub
lahf
popa
xor
pop
xchg
xor
cmp
es
xor
xchg
mov
mov
ret
mov
xor
cmp
int
inc
fcmovnbe
in
fnsave
pop
rcl
xchg
sub
sbb
shll
lret
es
add
flds
fmul
fmull
add
add
and
push
mov
test
dec
mov
cs
or
nop
std
xor
pop
pop
cmp
sbb
and
jo
imul
and
das
fiaddl
and
pushf
mov
cmpsb
loop
jle
nop
mov
in
scas
mov
int
sbb
aad
imul
lock
and
push
test
inc
mov
movsl
mov
pop
or
in
test
nop
or
mov
sahf
xchg
int3
test
ss
cmp
mov
or
add
popa
repz
dec
add
ret
je
xorl
and
inc
jmp
inc
push
pop
mov
lds
fsubs
stos
inc
adc
in
outsb
pop
lret
insb
imul
imulb
inc
adc
fadds
xchg
fs
mov
xchg
lods
fsubl
pop
jns
mov
jle
popf
loop
lea
mov
pop
xor
fisttpl
push
mov
add
stc
and
sti
pop
push
mov
in
aam
aam
jae
outsl
pop
pop
add
push
pop
xchg
add
insb
mov
push
loop
jae
cmp
push
or
lock
push
out
notl
and
aad
push
cmp
xor
fsub
push
dec
or
gs
jo
mov
mov
enter
dec
loop
fidivs
mov
inc
mov
mov
test
fwait
cli
push
pop
or
dec
ret
adc
inc
push
cmpsl
adc
ret
cmpsl
jmp
or
mov
cmpsb
dec
xchg
cld
xor
sbb
lret
fsts
fs
fisubl
jmp
loope
lret
test
mov
jecxz
jecxz
aam
mov
stc
inc
sub
movsl
sub
fnsave
addr16
xchg
cmp
mov
aad
enter
xor
dec
out
rcrb
xor
lret
fcoms
cli
rcr
mov
insl
push
cmp
ret
mov
popa
xor
hlt
call
add
push
xor
and
cltd
add
lods
scas
ljmp
test
cli
xorl
jae
or
inc
ja
or
add
xchg
mov
out
push
gs
in
clc
in
dec
mov
jg
pop
loopne
and
or
sub
adc
xor
add
movl
pop
or
lcall
or
outsl
test
ljmp
lock
stos
aad
lret
sbb
jle
iret
push
cs
jge
int
std
daa
out
repz
lods
std
cmc
repz
mov
dec
cmp
sbb
fwait
out
pushf
pop
and
jo
jmp
enter
and
leave
ds
jmp
adc
and
add
mov
inc
xchg
iret
xlat
fisttpll
dec
adc
imul
inc
xchg
imul
cmp
pop
sub
pop
dec
data16
fisttpl
adc
enter
inc
ret
lcall
jg
shll
cmc
mov
xchg
xor
push
mov
addr16
jp
addr16
xorb
mov
movsl
jbe
push
mov
and
or
push
int
leave
divl
iret
xchg
mov
or
gs
push
dec
mov
inc
add
lods
or
push
test
push
in
inc
shlb
inc
leave
cmp
movsb
dec
mov
mov
jl
outsl
inc
es
movsl
sbb
roll
imul
out
adc
pop
mov
inc
test
lret
push
imulb
xchg
push
xchg
int
adc
pusha
cmpl
cmp
inc
cmp
sub
imul
mov
mov
sbb
pop
das
test
mov
jl
outsl
icebp
xchg
icebp
stos
sub
hlt
movsb
inc
push
and
and
dec
lret
mov
sbb
out
in
lahf
mov
test
jecxz
mov
add
and
sbb
es
jo
jp
je
xor
loop
xor
mov
jg
lea
mov
push
cmp
daa
mov
mov
push
xchg
and
cmp
test
insl
fnsave
and
mov
pop
cmpsb
push
push
pusha
add
test
call
cmp
movsl
pusha
fmul
push
inc
push
fmuls
xchg
add
mov
sbb
pop
test
dec
movsb
dec
popf
xor
inc
pop
data16
sarl
cmpsb
dec
push
repnz
mov
xchg
pop
mov
int
push
and
sub
xchg
addr16
popa
sbb
mov
xor
jne
scas
loopne
jb
fs
push
mov
adc
jecxz
lods
jne
jecxz
out
out
pop
cmc
mov
call
jb
scas
movsl
cli
mov
cmp
repz
test
mov
movsl
ficoml
shl
test
sbb
cmp
ret
inc
lret
inc
nop
data16
push
push
and
outsb
lods
mov
addr16
mov
sti
xchg
rcl
movsl
jge
mov
hlt
fidivrl
sub
adc
jp
jo
daa
pusha
es
mov
ss
roll
aam
sbb
enter
lret
push
int3
xchg
and
into
mov
mov
and
es
dec
insb
jae,pn
repnz
xchg
jge
fisubs
sbb
jecxz
or
or
jbe
adc
inc
lods
test
lret
xlat
ja
scas
push
pop
ja
ficomps
sub
das
cs
and
repz
push
pop
pop
fs
aas
push
lahf
mov
out
push
adcb
out
mov
loope
divb
add
je
push
dec
pop
pop
mov
mov
ret
xchg
mov
scas
pop
pop
push
cwtl
fwait
xchg
std
and
mov
mov
cli
sahf
mov
mulb
inc
stc
xchg
test
mov
push
adc
fisttpll
sbb
sub
sub
mov
addr16
incl
mov
movsb
lods
arpl
pop
sarl
fwait
addl
loope
cmpsl
leave
test
out
pop
mov
xchg
dec
int
cmp
fldt
add
testb
bound
jecxz
stc
enter
fisttpl
mov
call
or
int
fs
fldl
sarl
adc
dec
cmp
out
aas
sahf
rcrl
mov
loop
dec
test
sbb
repnz
in
sar
repnz
add
fsts
fistps
aaa
mov
lahf
cmp
xorl
mov
clc
jnp
icebp
outsb
in
mov
add
xchg
ret
cmpsb
cmp
lret
cmpsb
push
lea
adcb
sbb
jg
std
incb
pop
ret
lcall
or
adc
pop
mov
sbb
pop
aas
xlat
mov
test
xchg
pop
out
pop
test
jne
xor
leave
cltd
inc
cmp
jg
das
jl
sub
iret
lea
and
lds
mov
in
xor
sbb
fwait
and
xchg
jle
pop
mov
dec
xor
lea
icebp
sbb
lcall
fidivrs
js
repnz
jne
xchg
jo
inc
testw
xor
pop
cmp
xchg
out
pop
outsl
test
stos
aas
iret
testb
pop
adc
adc
rolb
addr16
jp
push
rep
aam
adc
icebp
mov
mov
or
jg
cmp
loope
xor
jge
test
enter
sbbb
fsubrp
cmp
call
jge
cld
dec
movsl
stos
fcomps
outsl
mov
dec
xchg
mov
push
leave
pop
dec
mov
leave
inc
addr16
dec
stos
inc
loope
jne
or
mov
icebp
scas
cmp
add
ret
std
call
xor
and
imul
orb
lahf
pop
idivl
mov
inc
aas
test
repnz
mov
xchg
push
outsl
gs
imul
sub
je
movsl
mov
jbe
test
inc
sbb
fbld
repnz
cli
jne
pushf
inc
cmpsl
movsb
push
inc
stc
jae
mov
cmp
cmp
pop
sub
loope
push
lret
jp
mov
mov
xor
js
ljmp
jns
inc
daa
fsubr
adc
jecxz
push
orb
std
aaa
jecxz
das
and
push
mov
jmp
xor
jge
mov
jp
pop
pop
pop
jb
xchg
stc
filds
leave
out
insl
movsl
pop
fs
popl
pusha
jp
pop
movsb
xor
sbb
mov
jno
pop
leave
jbe
movsl
fidivrs
int
insl
xorb
mov
out
aaa
cli
mov
js
mov
les
dec
adc
out
cmp
das
testb
mov
outsb
push
pop
jb
arpl
xchg
push
stc
fdivrs
jle
mov
inc
and
adc
jge
pop
stc
push
scas
rcll
cs
shrb
pop
xchg
pop
rcrl
sbb
sub
mov
hlt
dec
enter
icebp
pop
xor
or
daa
jae
fs
xor
or
cmc
mov
push
mov
out
and
fistps
sbb
out
mov
xchg
push
mov
test
xchg
bound
pop
test
and
pop
pop
mov
leave
cmpsb
repnz
lock
fistpl
cmp
lods
lods
fsubs
into
test
jns
in
dec
jmp
fsubr
mov
out
rcll
js
pop
adc
mov
fisubl
movsl
aad
jae
cmp
fisttpll
int
out
mov
iret
loope,pn
jl
and
mov
fstps
cmp
jne
cmpsb
xor
popf
sub
les
loope
xor
test
push
notb
gs
xor
ja
fld
loop
jg
push
dec
aad
shll
mov
dec
jb
fisubrl
fistps
adc
push
div
pop
xchg
in
out
imul
mov
std
iret
je
mov
int3
pop
into
cmpsb
cli
lahf
loope
push
fisttpl
mov
adc
int
dec
xchg
inc
test
pop
ss
xor
dec
ss
jne
fdivrl
test
leave
fldenv
mov
lods
mov
imul
jecxz
aam
mov
shlb
mov
inc
push
imul
sbb
pusha
outsl
push
push
sahf
and
push
adc
fistps
cmp
mov
xlat
jb
fsubp
cmp
push
movsb
push
mov
sub
or
inc
scas
and
or
push
mov
xorl
mov
jb
push
shl
cwtl
sar
xor
fwait
push
mov
movsb
and
xor
jb
cmp
int
xchg
subl
daa
xor
iret
sbb
or
mov
cltd
jnp
pop
stos
sub
push
mov
adc
cld
inc
std
inc
out
cli
jnp
arpl
jns
jb
es
test
stos
adc
mov
jbe
push
push
and
ret
mov
push
adc
mov
sbb
repz
andb
outsl
sub
sbb
ror
cli
popa
int3
mov
cmpsl
push
and
and
inc
adc
adc
mov
cs
leave
pop
sbb
rcll
add
lock
cmp
mov
lods
jl
push
sbb
inc
adc
mov
pop
adc
mov
mov
mov
sub
mov
sbb
push
fldz
rcll
push
push
jb
and
mov
push
push
cltd
stos
mov
push
ljmp
cltd
shrb
push
xchg
mov
ljmp
mov
shr
xor
inc
fdivl
push
addr16
xchg
sub
arpl
inc
adc
jnp
pop
or
lret
xor
test
adc
inc
mov
test
sbb
aas
repz
bound
push
or
cmp
or
jno
push
pushf
inc
fwait
mov
lods
push
js
cmp
ja
negl
loope
dec
icebp
fisttpll
dec
sub
test
daa
jl
xchg
int3
xchg
push
xchg
loopne
xorb
in
lds
adc
and
and
pop
mov
pop
add
ja
ret
das
ja
inc
or
push
adc
lret
add
cmp
cwtl
and
push
ror
push
mov
push
dec
sub
sbb
addr16
pop
loop
add
icebp
xlat
pop
lods
xorl
push
dec
out
adc
inc
or
test
and
add
cwtl
jg
pop
loopne
test
fildll
adcb
xchg
pop
push
pop
cli
mov
mov
or
mov
jle
test
xchg
sub
out
xor
mov
scas
sub
scas
jns
cmp
and
and
cmp
mov
or
aad
out
out
out
stos
movsl
addr16
mull
ret
push
inc
xor
andl
fcmovu
ds
aas
jae
in
xor
xchg
pop
fnstenv
pushf
pop
adc
loope
sub
sub
push
ret
pop
adc
adc
or
rolb
jae
adc
sahf
es
divl
xor
arpl
loope
pop
jb
movsl
mov
fmul
mov
mov
pop
pop
xchg
cli
xor
sbb
lods
std
idivb
xor
jne
push
sbb
sub
mov
add
out
repz
xchg
cmp
test
js
test
mov
push
push
and
inc
cwtl
pop
std
int
mov
fs
mov
cli
into
and
aad
mov
call
mov
mov
push
int
push
stos
test
mov
push
popf
test
pop
mov
imul
fldl
pop
cmp
and
xor
sub
mov
inc
mov
dec
inc
push
or
fwait
sahf
in
xor
dec
and
add
inc
mov
cltd
cmp
xchg
dec
dec
jae
stc
jne
push
sti
xorl
sub
sub
pusha
mov
mov
dec
or
jge
push
pop
inc
mov
mov
xchg
sbb
aas
lods
test
lods
leave
out
shlb
dec
int
rcll
jmp
mov
das
jbe
cli
dec
std
pop
cs
ret
rorl
pop
push
scas
add
pushaw
and
jge
hlt
mov
dec
lret
pop
pop
test
jnp
lahf
cwtl
dec
outsb
or
and
popa
ljmp
movsb
sti
into
js
jecxz
mov
into
mov
inc
testl
add
cwtl
notb
cwtl
cmp
in
repz
jmp
cmp
push
cmp
test
stc
sbb
dec
pusha
fidivl
sti
cmp
xchg
aaa
sbb
test
mov
pop
popf
out
push
mov
add
sbb
jle
or
or
test
loopne
mov
jae
imul
xor
xchg
pop
pop
mov
jnp
xor
xor
pop
outsl
arpl
and
push
movsl
std
sahf
push
arpl
cmp
out
lret
pop
das
sbb
pop
inc
scas
popa
xor
push
sbb
or
cmc
push
je
stc
dec
pop
sub
das
outsb
and
mov
shll
mov
cmpsl
lcall
sub
shrb
fs
jmp
cmp
cmc
pop
add
out
mov
and
mov
das
test
add
arpl
in
jbe
cltd
sbb
dec
leave
jmp
pop
add
jecxz
imull
fwait
cmc
dec
subb
mul
repnz
popa
adc
and
lds
or
cmc
sbb
dec
sahf
jb
xlat
and
mov
sub
jbe
out
jae
ret
adc
ret
xchg
inc
shl
add
lret
xchg
cmpsl
call
cmpps
or
lret
push
nop
cs
mov
cmp
orl
xor
scas
or
sub
adcl
xor
sbb
inc
and
arpl
xorb
push
pusha
push
fldt
mov
mov
add
add
shlb
pop
cmpsb
mov
call
mov
xlat
lds
pushf
fdivrs
push
push
adc
mov
hlt
loope
pop
mov
subl
adc
loopne
into
scas
jecxz
xor
shl
jb
pop
xor
arpl
stos
mov
outsb
mov
adc
ja
imul
mov
adc
xchg
stos
inc
inc
fbld
sbb
fsubr
xchg
lods
mov
outsl
imul
sbb
cmpsl
js
popa
in
pop
pop
mov
mov
in
xor
inc
pushf
sub
or
push
sbb
sub
stos
shll
xor
jb
xchg
mov
mov
loope
movsb
bound
push
mov
fstpl
popf
push
lds
push
lcall
movl
cmp
fucomp
push
cmp
inc
push
into
fistpl
adc
icebp
or
adc
push
or
pusha
ljmp
push
popf
std
push
sarl
jno
fcmovnb
jnp
les
mov
jl
push
pop
push
xchg
jecxz
clc
inc
frstor
adc
push
outsb
sub
fwait
pop
mull
dec
test
lcall
or
pusha
mov
stos
fcomps
sub
fdivl
pop
and
fsubl
pop
stos
sbb
mov
and
fildl
inc
hlt
mov
sub
iret
loope
popa
pop
int3
cmp
push
xchg
std
pop
jae
daa
push
xor
out
pop
loop
cmp
mov
ror
aas
stc
test
mov
xor
loope
jae
mov
hlt
clc
dec
mov
and
cmp
and
inc
mov
es
fdivr
fstl
leave
stc
and
jno
mov
mov
jb
shr
cmpsb
mov
jo
sbb
in
jnp
stos
inc
push
out
fisubrs
shl
pop
mov
pop
je
xor
movsb
xor
xchg
aaa
test
adc
xchg
lret
cmp
mov
pop
cmp
jne
add
fidivl
lret
loope
fisubrs
jno
dec
cltd
movsl
add
mov
xor
hlt
out
mov
movhps
test
adc
mov
push
rclb
arpl
sbb
rclb
lods
insb
xchg
movsb
mov
mov
inc
gs
lret
test
cli
fcom
mov
or
fwait
inc
out
inc
push
fmull
cmpsb
xchg
pop
jae
rdmsr
call
mov
je
roll
adc
pop
cli
add
lods
sub
cmpsb
in
test
add
mov
mov
aaa
std
dec
and
add
es
jnp
mov
inc
jnp
dec
dec
lods
loope
adc
cmp
adc
test
popf
sbb
cmp
je
rsqrtps
incb
xor
jo
and
rcl
mov
hlt
sbb
or
mov
stos
push
add
dec
or
movhps
pop
fucomp
data16
ds
call
call
lock
xor
adc
ret
add
or
pop
lods
jl
std
add
ljmp
jb
dec
adc
sbb
movsl
sbb
or
mov
frstor
out
mulb
std
repz
sbb
mov
jns
xchg
int3
inc
setp
shlb
ljmp
sub
sbb
inc
mov
pop
subl
mov
outsl
or
jne
sub
xchg
and
dec
mov
mov
out
adc
dec
pop
add
jmp
aam
xlat
outsl
push
popfw
ja
arpl
or
mov
test
data16
call
or
cltd
dec
sahf
and
xor
and
xchg
inc
jmp
pop
pop
test
xchg
les
adc
int3
nop
out
scas
shrl
out
inc
fcmovbe
xchg
sti
aaa
int
arpl
pop
and
mov
dec
mov
rcr
sbb
sub
cltd
inc
loop
pushf
lods
je
loope
int
pop
jmp
iret
shll
cmp
popf
mov
add
jno
insl
repnz
aaa
jp
mov
out
idivl
push
stos
imul
scas
jmp
int3
jb
push
into
inc
sti
rolb
dec
dec
and
xlat
and
xchg
adc
mov
adc
fiadds
scas
aad
lahf
xlat
pusha
xchg
fsts
pop
and
sub
xor
sahf
push
repz
bound
lods
or
pop
mov
js
dec
sub
sub
add
out
clc
test
sbb
fmull
insb
xchg
cs
jg
cwtl
pop
dec
sub
inc
and
or
lret
popf
xorb
inc
jnp
push
fabs
pop
sahf
add
inc
mov
inc
push
sbb
outsl
push
xchg
jne
add
imul
sarb
aaa
mov
stc
adc
roll
incb
mov
popa
add
scas
cltd
mov
leave
pop
std
mov
iret
xchg
arpl
shrl
aaa
inc
mov
pop
daa
xchg
movsb
cmp
imul
cli
mov
add
xchg
ret
mov
sub
sub
sbb
mov
ret
jle
cmpsl
lret
dec
xchg
loopne
enter
mov
das
leave
fbstp
jg
add
loop
clc
cmpsb
pop
cwtl
fstpt
addr16
call
js
lock
inc
add
rcl
mov
dec
xchg
xlat
incl
push
and
iret
outsb
call
pop
dec
pop
dec
push
popa
loopne
push
cmpsb
sbb
mov
mov
sub
mov
imul
inc
rcl
repz
ffree
jmp
add
cltd
rcrb
cmpsl
mov
sbb
xchg
fstl
das
test
push
lock
and
or
adc
mov
inc
or
push
fwait
test
fwait
lods
in
lcall
or
jge
mov
jmp
fwait
xchg
cltd
or
cmovo
mov
lar
fldl
dec
lock
pop
adc
adc
add
push
insb
mov
pop
dec
push
test
aas
adc
adc
cmpps
push
mov
fmulp
push
pop
cli
sub
outsb
fsubrl
ds
flds
mov
fst
cli
dec
or
push
inc
test
lods
push
cs
ds
rorb
xchg
pop
mov
lahf
xor
leave
jae
popa
mov
fcompl
push
cmp
je
inc
mov
lock
outsb
rcll
jae
push
lret
scas
xchg
scas
mov
xchg
es
decb
jecxz
rcl
cmp
mov
ret
lea
out
cs
test
in
cmp
and
cmp
adc
inc
std
jns
testl
sahf
ss
loop
or
fwait
je
flds
cmp
ss
xchg
push
lea
push
std
jne
jno
mov
cs
mov
mov
lods
mov
pop
test
out
out
iret
pop
ret
sbb
imulb
sbb
dec
mov
test
fists
test
out
xchg
jo
sbb
insl
sahf
fistps
adc
xor
jge
mov
outsl
dec
sbb
push
mov
inc
test
inc
js
jmp
mov
cwtl
xchg
rclb
mov
and
pop
pop
js
sbbl
add
cmp
je
sbb
stos
stos
push
or
lcall
js
arpl
mov
mov
call
imull
insb
pop
movsl
push
out
mov
xchg
mov
pop
fldt
mov
mov
xlat
mov
and
pop
std
js
ljmp
out
test
pmaddwd
data16
stos
mov
xor
scas
test
in
push
in
repnz
enter
aaa
mov
out
insb
mov
dec
mov
jp
mov
call
sbb
es
lret
out
pop
into
cmp
stos
xor
aas
pop
std
xchg
pop
push
lcall
aad
insb
imul
iret
filds
lret
push
lcall
ja
fwait
inc
bound
rcl
in
push
pusha
ror
btr
enter
mov
outsl
jecxz
push
jb
push
jb
xchg
test
dec
testb
xchg
jle
sub
mov
in
leave
out
rorb
dec
sbbl
sarb
mov
and
cmp
frstor
add
adc
and
movsb
rcrb
out
push
sarl
fstpt
xchg
fs
add
leave
mov
loop
jns
push
push
xchg
jp
arpl
call
pop
mov
pop
cmpsb
or
push
dec
cmc
out
lock
mov
outsl
mov
or
fsts
mov
ret
cmp
test
pop
adc
loopne
pop
mov
add
test
adcl
sbb
outsb
pop
fstp
xchg
les
pusha
mov
loopne
jmp
ret
jo
sub
mov
dec
mov
ss
adcb
mov
fwait
pop
mov
jge
hlt
out
int
mov
les
mov
loope
sbb
shrb
je
dec
repnz
mov
sub
call
fwait
and
les
mov
test
fldl
lret
jl
jmp
xchg
std
adc
movsl
xchg
or
addr16
imul
bndldx
push
or
sahf
xchg
push
xor
jae
fldcw
repz
test
dec
mov
mul
pushf
pop
es
addb
push
pop
out
mov
mov
mov
mov
pop
mov
xchg
pop
lcall
push
pop
sar
and
and
bound
sbb
jmp
dec
es
add
mov
pop
mov
xchg
call
in
push
jp
mov
adc
cmp
mov
pop
in
daa
xchg
mov
dec
imul
cltd
out
mov
adc
icebp
rcl
mov
loope
fnstsw
lcall
push
pmulhuw
inc
pop
mov
jne
repz
pop
loopne
ja
stos
out
mov
add
jae
rol
scas
cmp
gs
in
pop
out
out
adc
fcomp
cmp
and
pop
jb
cmp
jmp
jo
cmp
je
jecxz
inc
xor
adc
mov
sbb
sub
pop
cmp
push
sarb
sbb
aam
inc
sahf
loop
aad
mov
in
rorb
xchg
pop
clc
mov
cwtl
mov
movsl
imul
lock
frstor
or
hlt
loopne
xchg
jge
sub
xchg
mov
mov
inc
stc
push
jbe
add
subl
shl
stos
outsb
shlb
xchg
cmp
xchg
dec
insl
xor
fisttps
dec
js
in
enter
loop
gs
les
call
ror
jno
repz
add
rcll
jle
xor
shl
cmp
lods
aam
adc
movntps
outsb
fisttps
push
fisttpll
push
jno
jb
jecxz
aad
pavgw
push
dec
jno
add
jno
mov
cmpsl
xchg
add
cmp
inc
std
outsb
sbb
sti
jmp
cmp
out
stc
andl
fcoml
aam
fcom
xor
cmpsb
lcall
cwtl
inc
or
lods
lahf
xchg
xchg
out
push
xchg
movsl
jbe
add
and
loopne
loope
xor
cmp
cmpl
xor
loope
inc
cmpsb
pop
notl
xchg
jge
xor
arpl
mov
dec
fmul
fbld
push
jnp
push
push
scas
xor
mov
sbb
rcrl
aas
leave
sti
aam
fmull
jbe
xchg
mov
rcll
dec
inc
aas
aas
push
repnz
pop
test
aas
xchg
rcll
jecxz
orl
inc
daa
jae
rorl
aad
pushf
inc
scas
jae
adc
or
add
jo
push
add
xchg
jge
lods
fsts
les
pop
shlb
mov
push
inc
jnp
and
pop
mov
or
arpl
fisttpl
xchg
pop
sti
or
xchg
inc
fwait
enter
loopne
gs
pusha
jo
lock
notl
test
mov
fcomps
mov
sbb
stc
cli
or
rcll
xor
into
shrl
mov
sub
jno
out
adc
rolb
inc
jno
xor
lret
les
sub
cltd
rorb
mov
jl
fcmovnb
push
mov
lea
les
push
test
loope
xor
mov
jp
cli
push
push
mov
andb
aad
lret
loope
mov
and
sbb
lcall
lret
xchg
mov
cld
bound
jnp
icebp
mov
jecxz
rorl
mov
lret
mov
shlb
lods
jno
je
mov
dec
sbb
shl
sub
jno
inc
inc
and
xor
mov
iret
mov
iret
daa
inc
mov
lea
movsl
cltd
sahf
add
and
add
push
loope
push
ss
sbb
iret
mov
mov
leave
cmp
clc
dec
xchg
pop
mov
das
jecxz,pt
dec
inc
rorl
mov
sbb
fwait
addl
mov
fiaddl
mov
in
fcmovnu
push
test
test
iret
inc
xchg
fsubs
lock
add
sti
add
inc
in
pop
lods
push
jle
aam
movsb
outsb
sarb
popa
mov
pop
shrl
rorb
icebp
xlat
xchg
lret
js
filds
in
int
int3
stos
fdivrl
mul
inc
es
dec
adc
mov
fisttpl
jno
ss
mov
xchg
cli
adcl
jb
mov
shll
push
mov
xlat
mov
mov
inc
or
call
mov
loop
in
jmp
mov
lcall
pop
outsl
aas
jb
cmp
es
or
mov
call
aad
pusha
test
mov
mov
movsl
adc
xchg
roll
cli
das
pushf
mov
push
sbb
repnz
xor
call
lods
lock
dec
inc
int3
pop
cs
xor
mov
mov
add
mov
jo
xchg
int
arpl
hlt
jae
mov
out
lret
push
ds
faddl
dec
cmpsb
dec
pop
pop
and
jle
cmpsb
mov
cmp
or
xchg
icebp
xchg
cmpsb
nop
nop
lahf
cmpsb
mov
out
lods
pop
xchg
or
cmp
jecxz
dec
dec
jp
addr16
cmpsl
xchg
inc
xor
add
add
inc
or
movl
inc
outsb
dec
scas
xor
mov
sub
imul
sbb
sub
or
cld
hlt
fsubr
dec
ljmp
mov
js
mov
cs
loop
jbe
push
mov
xchg
mov
mov
leave
rcrb
shrl
jmp
xor
lret
mov
sub
jecxz
inc
dec
jmp
mov
in
lcall
movsl
mov
sbb
push
dec
addl
aas
leave
stc
enter
mov
cld
sbb
idivb
cli
mov
shll
sbbl
and
loopne
pushf
mov
xsavec
inc
xchg
lcall
gs
mov
lret
out
mov
test
stos
in
mov
and
movsb
push
arpl
loop
cltd
dec
stos
stos
sbb
sahf
js
xchg
mov
pop
cld
fstpl
fbstp
mov
test
sbb
mov
push
loop
xchg
popa
lcall
xlat
mov
or
inc
sbb
cmp
bound
cmp
loope
js
fdivs
out
clc
and
xchg
call
mov
adc
mov
sbb
cwtl
loop
test
je
push
or
mov
jp
push
imul
xchg
enter
ljmp
movsl
inc
orb
mov
mov
and
shlb
in
inc
out
pop
insl
es
mov
inc
loope
mov
cs
aas
fs
stc
jbe
stc
mov
incb
fstp
insb
mov
sbb
mov
lret
xchg
test
fwait
mov
loope
pop
call
in
mov
push
ret
push
aaa
leave
mov
mov
cmp
cwtl
adc
inc
test
add
jbe,pt
add
xchg
mov
jge
cmc
inc
inc
call
in
push
lret
or
out
lods
xor
adc
inc
and
push
out
mov
lea
addr16
push
fmull
sub
in
cmp
pop
sbb
push
repz
pop
frstor
or
pop
das
mov
loope
pusha
icebp
jb
fimuls
out
xor
xchg
add
adc
fwait
divl
dec
jno
decb
int3
movsl
xchg
xchg
sbb
and
pusha
cli
aaa
sub
insl
icebp
pusha
test
xchg
xchg
nop
sbb
xor
push
ret
outsl
rcrb
sarl
cld
cmpsb
loop
pop
pop
add
std
or
int
pop
cli
cmp
arpl
in
cmpsb
leave
cmc
fs
shll
jge
aas
in
inc
pop
rorb
cmp
out
bound
jae
rorl
pop
or
push
mov
pop
in
inc
push
jns
xchg
fucom
cmp
popa
and
hlt
cmp
push
out
aaa
push
cmp
pushf
fisubl
call
outsb
push
leave
inc
xor
ljmp
mov
popf
popf
cmc
lret
xchg
xor
xchg
jb
mov
aad
jb
pop
popf
popa
mov
sbb
sbb
jge
mov
and
js
dec
xor
xchg
mov
cmp
shufps
pop
dec
push
popa
roll
pusha
es
arpl
xor
push
ljmp
xor
iret
repnz
fimuls
cmp
sbb
jge
xchg
rorl
int3
cld
inc
or
icebp
jo
cld
and
sar
dec
mov
add
mov
add
and
xlat
inc
adc
aaa
sub
jae
and
xchg
out
imul
and
ja
push
adc
mov
in
inc
and
lret
xor
cmp
lahf
dec
inc
cmp
add
rorl
hlt
movsb
cmp
lcall
mov
testl
lret
or
add
rclb
scas
add
and
lret
pop
out
push
xchg
push
dec
mov
jnp
mov
mov
mov
movb
cmp
or
jnp
inc
in
hlt
cmc
xlat
fcomps
inc
pop
dec
lret
jp
int3
pop
movsl
fxch
push
out
and
out
movsl
xor
pop
mov
cltd
lahf
test
enter
aaa
test
mov
sbb
jle
dec
pop
dec
xor
sub
cltd
sub
mov
out
mov
jp
or
xorb
adc
mov
loop
sbb
leave
xchg
fdivs
pop
aam
mov
outsl
test
rcl
lods
pop
jns
lods
hlt
mov
and
inc
pop
ljmp
scas
mov
mov
popa
dec
xchg
int
or
push
and
es
cmp
xchg
into
push
inc
cmp
pop
mov
mov
inc
xor
push
sub
js
or
dec
inc
cs
scas
push
push
push
ss
sbb
or
lret
aaa
adc
pop
sbb
push
flds
test
xchg
push
sar
sbb
inc
or
cmp
add
push
add
mov
movsb
mov
adc
fadds
jno
sub
mov
in
popf
movsb
push
pop
xor
pop
push
or
inc
outsl
leave
push
mov
jnp
cmc
mov
sub
das
mov
outsl
mov
je
sbb
addb
cli
cmpsl
loop
cmc
int3
andb
push
jge
mov
cmpsl
repz
out
fdivrs
push
add
and
push
scas
jb
rep
sub
xlat
inc
jbe
sub
or
push
std
sub
and
mov
stos
out
jne
sub
inc
inc
jno
add
adc
out
idivb
adc
sbb
mov
test
adc
das
pop
xor
cmp
mov
fdivrs
stc
mov
sbb
pop
sbb
and
sub
lret
ja
test
xchg
bound
out
cltd
decb
cmp
xor
add
sbb
sbb
es
lods
or
jmp
mov
fs
sbb
mov
ret
iret
daa
bound
pop
fcomi
ficomps
adc
jnp
mov
stos
mov
movsl
nop
lret
pop
ss
cmp
aad
pop
out
je
jg
gs
inc
xor
mov
call
sbb
cs
icebp
aad
jmp
xchg
int3
pcmpgtb
mov
stos
rclb
sub
iret
bswap
pop
icebp
shl
push
popf
dec
popf
ffree
add
mov
aad
mov
dec
aad
pop
jns
sbbl
frstor
aad
push
cld
inc
mov
dec
mov
xchg
mov
mov
call
or
xor
push
pop
jae
lret
test
pop
or
push
scas
inc
ret
pop
mov
pop
shrl
push
dec
mov
pop
cmp
mov
xchg
inc
icebp
outsb
inc
and
es
scas
push
xlat
adc
test
in
sbb
cmc
cmpsb
adc
adc
or
lods
loop
or
movsl
and
cmp
adc
sub
test
outsl
repz
ljmp
and
push
dec
add
xor
bound
loop
sub
xor
jae
push
mov
dec
scas
mov
mov
cltd
and
dec
iret
lahf
mov
jg
mov
test
mov
mov
cmp
repnz
push
orl
ja
in
xchg
rcrl
inc
adc
fstcw
and
push
xchg
cmpsl
stos
xchg
popa
lret
fucom
dec
daa
cli
mov
mov
outsl
movsl
adc
sub
xchg
dec
rol
sbb
lods
je
faddl
lds
iret
adc
insl
lea
fisubl
ret
cmp
sub
test
and
xchg
xchg
xorb
mov
pushf
fildll
stos
fcmovnbe
shll
dec
stc
or
dec
test
daa
add
and
jmp
jecxz
ret
mov
jmp
cmp
outsb
dec
dec
ror
mov
in
lret
repz
int3
xchg
addr16
leave
imul
ret
loope
mov
aad
inc
jl
in
mov
sub
adc
ja
nop
adc
shll
xlat
xor
adc
lock
mov
pop
les
pushf
cmp
js
xchg
adc
mov
push
int3
rorb
je
testl
pushf
ja
pop
lock
loop
xchg
lea
shl
lock
push
call
add
stos
inc
loop
push
lea
mov
sbbb
mov
or
fldt
mov
aas
pop
dec
cmpsl
cs
mov
mov
fnstcw
mov
mov
mov
fistps
jg
out
fistpl
mov
fwait
mov
fwait
push
and
mov
pop
inc
mov
mov
arpl
into
in
mov
dec
in
stos
mov
push
ljmp
lock
dec
std
inc
or
mov
js
aas
movl
aaa
mull
cmp
movsl
or
mov
jno
std
negb
gs
sbb
stos
rcrl
ljmp
mov
mov
incb
and
lret
clc
aam
jmp
inc
add
sbb
or
lcall
inc
push
mov
push
out
scas
xor
dec
call
mov
adc
and
enter
in
fisubrl
jge
icebp
aas
push
and
jnp
xor
push
pop
xor
push
push
fcomi
ret
outsb
jne
movsl
mov
push
mov
jb
cltd
pop
cwtl
mov
jb
ficomps
out
and
xchg
jbe
mov
ss
push
ret
mov
scas
jo
xor
push
clc
xchg
mov
xchg
ljmp
push
movsb
out
lahf
insl
cmp
inc
or
int
or
push
out
ror
cmc
popa
stos
shrb
mov
hlt
cmc
jge
dec
adc
lcall
xor
jae
cmp
add
push
roll
stos
push
enter
cwtl
loop
mov
adc
leave
repz
leave
dec
adc
roll
xchg
add
idiv
dec
push
fcompl
stos
dec
xchg
pushf
iret
pusha
adc
int
lds
mov
pop
shr
je
lds
xchg
fwait
pushf
cltd
mov
enter
add
outsb
sahf
cld
cltd
push
imul
rorb
jp
pop
mov
sub
xor
mov
fnstsw
jno
out
aaa
ljmp
stos
jo
incb
cs
lods
xchg
fstl
push
sub
sbb
mov
mov
xchg
stos
fcoms
enter
movsb
cmc
mov
cmp
lods
cmpl
enter
mov
jmp
xchg
xchg
sbb
pop
cs
push
sub
adc
mov
xor
pop
icebp
in
loope
pop
movntq
out
mov
mov
roll
xchg
stc
or
je
cmp
mov
loope
shrb
adc
scas
jmp
mov
fwait
clc
ret
dec
jb
mov
ffree
fs
or
cmpsb
es
inc
add
lahf
out
cli
lods
outsl
jp
in
in
cli
out
mov
cmp
xchg
imul
inc
jo
test
xor
jne
popf
mov
sub
dec
test
subb
test
pop
xchg
pop
stc
popf
gs
or
lods
mov
inc
ret
dec
xor
out
or
dec
repz
push
lret
imull
mov
sub
out
insl
inc
jl
mov
shrl
sbb
xor
nop
pusha
rorl
or
rolb
clc
sbb
sbb
sub
aas
fcoms
and
sub
test
xchg
frstor
jle
test
add
data16
ss
in
lock
push
stc
aaa
xchg
adcl
inc
fs
test
add
pop
dec
adc
nop
adcb
sub
inc
insl
daa
mov
jnp
pushl
call
pop
adc
ret
push
loopne
dec
cmpsl
sub
mov
insl
jo
std
in
fnstsw
and
xor
in
inc
inc
popf
inc
sar
in
icebp
insl
jg
mov
cltd
adc
push
push
mull
clc
arpl
daa
jb
movsb
sbb
adc
popa
jbe
add
scas
xchg
sbb
inc
mov
xor
in
push
repz
sbbb
int
push
or
cmp
cmp
lods
call
rcll
cltd
mov
mov
mov
push
and
xchg
daa
popf
xchg
or
pushf
jl
inc
sub
les
loope
fwait
popf
jne
mov
rolb
in
call
sbbb
or
lock
xor
js
cli
or
idivb
iret
popf
lea
and
js
leave
popf
sbbl
cld
and
adc
inc
repz
push
jno
mov
push
cwtl
sub
or
mov
mov
repnz
in
mov
cld
sbb
movsb
repz
and
inc
negb
add
cltd
insb
cmp
push
cmp
lret
push
je
fstpt
xor
xor
cwtl
cmpsl
pop
mov
pop
pop
cs
outsb
sbb
gs
punpckhdq
fsubl
shrb
mov
andb
cmpsl
lret
in
push
imul
fildll
shrl
inc
mov
jae
xlat
mov
mov
out
adc
shlb
push
daa
mov
push
fisttpl
sub
outsb
and
sub
arpl
hlt
jb
mov
add
cmp
or
add
mov
and
rcrl
ds
outsb
mov
xlat
nop
pop
mov
lea
cmp
fldenv
dec
nop
add
adc
jo
aaa
cmp
and
add
test
outsl
adc
scas
jl
ss
and
sbb
sub
cmpsl
lds
out
test
cltd
aaa
jo
enter
sbb
xchg
sti
xchg
adc
insl
sbb
mov
and
fsubrl
jecxz
cmpl
fsub
cli
popf
jae
scas
xchg
add
mov
push
call
divb
or
dec
loop
inc
sahf
lret
fisttps
mov
testb
test
sarl
cmpsb
hlt
mov
in
sti
push
repz
daa
dec
sub
popa
cmp
push
outsb
cmpsb
loope
mov
ret
mov
es
bound
div
sbbb
ret
out
push
and
jl
jne
inc
stc
push
mov
mov
sub
vmovupd
inc
inc
mov
fildl
movsb
mov
pop
fstl
outsl
xor
test
sbb
sub
cmp
hlt
pushl
out
and
movsb
jle
inc
addr16
jae
and
daa
sbb
icebp
xchg
out
cmp
mov
dec
push
add
cmc
sub
and
movsb
loopne
xor
xor
nop
sbb
add
xor
mov
inc
or
mov
insb
add
mov
dec
jp
pop
lret
push
lea
jge
jae
fadds
xor
inc
xor
jae
lret
inc
shlb
fisttpll
fcompl
bound
cmp
aaa
push
subl
call
rorl
jecxz
or
inc
mov
push
dec
and
sub
dec
cmp
stos
mov
xchg
mov
push
stos
lock
and
subb
inc
cli
push
adcl
mov
jne
out
or
data16
daa
xchg
insl
mov
out
or
cld
lcall
and
cld
add
clc
nopl
cld
cli
pop
in
cmp
ja
mov
testl
adc
aaa
mov
mov
out
adc
mov
cmpsb
mov
jle
les
cmp
xchg
mov
out
dec
aam
imul
xor
cltd
fdivrl
sti
inc
out
nop
icebp
out
pop
repz
push
ret
cld
in
push
arpl
mov
xor
sti
or
shlb
test
ret
mov
adc
xlat
fidivl
adc
fstps
loope
dec
jmp
xor
adc
mov
mov
xchg
sbb
push
add
pushf
pop
sub
sarl
xchg
sub
or
stc
ret
mov
hlt
pop
sub
add
fadds
push
out
cmp
ss
jl
aad
es
in
fisubl
test
jns
popf
push
lock
push
or
call
pop
sbb
out
int
sub
sbb
lret
jmp
cmp
sub
mov
orb
and
mov
xchg
mov
mov
adc
out
add
jnp
jns
xchg
pop
in
push
ss
cmp
xchg
push
mov
adcl
outsb
or
dec
pop
mov
sbb
pop
pushf
cmp
shrl
push
test
lahf
in
out
mov
jbe
sub
js
cmp
jecxz
push
inc
add
push
add
aad
sahf
mov
xchg
mov
std
cpuid
push
inc
push
add
push
sub
cmpsl
lock
pop
xor
bnd
pop
enter
and
push
add
or
jecxz
mov
ret
jg
adcl
ja
push
lock
out
mov
imul
sahf
in
out
lret
and
es
dec
in
lret
jno
xchg
arpl
int
or
dec
rorl
stos
lods
lcall
cs
idivl
mov
jae
xchg
outsb
mov
seta
xchg
mov
mov
jno
mov
in
fs
push
rorl
lods
insb
pop
xor
add
stos
sbb
mov
scas
sub
daa
out
cwtl
or
dec
adc
popf
adc
imul
sbb
shl
je
jp
fld
ss
push
dec
sub
in
jle
sub
fwait
mov
lahf
test
xchg
fisttps
xchg
add
xor
mov
mov
testl
pusha
mov
ss
movsl
cmp
xchg
mov
jmp
jnp
insl
mov
push
sbb
adc
push
lods
inc
jb
xchg
mov
push
test
cmp
stc
dec
xchg
or
icebp
sti
imul
sub
xor
sbb
or
mov
adc
mov
sub
jne
push
xor
push
nop
aas
into
cmp
xchg
fnsave
sbb
mov
fcmovbe
scas
leave
add
sub
outsl
daa
int3
jle
movsl
lea
into
repz
lret
lret
pop
jmp
or
mov
mov
rcrl
repnz
sub
fcompl
dec
dec
scas
adcb
xorb
pop
mov
hlt
and
je
ds
das
push
mov
jl
xchg
outsl
addl
xchg
pop
add
xchg
pushf
daa
sub
mov
push
adc
add
outsl
inc
adc
mov
fisubrl
mov
cld
outsl
xor
xor
fists
lret
pop
and
xor
aam
jns
lods
jmp
inc
jne
subb
ja
jbe
xchg
popl
test
rcr
fisttpl
or
movsb
push
aam
and
mov
movaps
bound
push
add
sbb
lock
mov
out
jl
sahf
int3
jle
in
inc
pop
jp
dec
xor
aam
push
loope
mov
test
outsl
loope
pop
xor
nopl
fistl
jge
pop
cmpsb
pop
ja
mov
cmp
push
loop
in
mov
xor
sub
shl
nop
je
mov
js
push
sub
dec
dec
mov
mov
dec
push
repnz
cltd
cmp
ret
clc
pop
ss
clc
out
mov
lock
mov
rorb
xchg
and
cmp
je
dec
inc
ss
jbe
int3
and
in
sbb
sub
int
in
ror
xchg
arpl
mov
js
and
imul
inc
sbb
imul
sti
mov
mov
xlat
repnz
mov
lcall
fcomp
test
push
add
mov
out
or
lcall
push
mov
pop
or
sahf
test
and
idivb
xchg
pop
mov
dec
pop
mov
mov
pop
mov
mov
jmp
fisubrl
mov
jl
mov
inc
add
push
or
mov
fildl
and
mov
lcall
mov
jecxz
flds
mov
mov
push
shl
test
sbb
lock
mov
outsl
fld
add
cmp
dec
mov
xchg
add
stos
arpl
dec
rcl
dec
xor
lcall
cmpsb
lods
push
repnz
add
adc
cmpsb
shll
add
test
and
push
sub
sbb
xor
inc
inc
stos
jo
into
mov
fisttpll
jne
lods
fnsave
xor
repnz
repnz
jb
leave
push
mov
out
sub
lods
xchg
xchg
cmp
out
mov
clc
inc
mov
push
mov
adc
mov
adc
aas
nop
sahf
and
xor
fwait
movsl
int3
loopne
addl
mov
dec
shll
push
push
jne
pop
test
mov
out
adc
pushaw
out
inc
dec
xor
fwait
fs
push
mov
insb
jo
icebp
cmpb
xchg
cmp
jae
ret
mov
push
push
push
pusha
dec
jb
mov
cmc
and
xor
jmp
into
dec
mov
cltd
sbb
loop
or
mov
je
mov
sbb
popa
lods
or
mov
adc
mov
push
hlt
mov
outsb
add
pop
rclb
xchg
out
fsubl
jle
sbb
movsb
scas
push
xchg
lods
popa
inc
push
or
out
imull
in
jb
fildll
pusha
add
sahf
ljmp
icebp
inc
cmc
cmpsl
sbb
pop
negl
mov
jecxz
xor
fucomi
xchg
mov
call
mov
jb
fcmovbe
xchg
test
mov
and
ffree
xor
dec
cmp
test
outsl
mov
mov
xchg
adc
xchg
lods
jno
or
ret
lea
aam
das
sbbb
xor
push
push
push
mov
imul
test
and
or
loop
mov
scas
adc
loope
sub
jo
jl
push
jecxz
shrb
lret
int3
popf
mov
or
hlt
pop
mov
mov
pusha
cli
int3
jmp
jecxz
mov
mov
mov
adc
pop
in
mov
mov
test
cwtl
and
ds
lods
scas
pop
scas
nop
fcomps
ss
out
xchg
outsl
icebp
or
or
les
sbb
dec
pushf
pop
in
and
push
mov
mov
lds
test
xor
shlb
arpl
test
shrl
adc
ja
mov
push
adc
mov
push
cmp
push
xor
leave
or
scas
stos
int3
roll
test
pop
and
add
pop
lock
xchg
ss
adc
aam
fisubs
inc
les
aam
mov
ds
aaa
pop
inc
les
add
loopne
cld
out
push
mov
inc
clc
gs
xlat
xchg
jo
arpl
xor
subl
sti
mov
inc
jae
sahf
out
pop
mov
arpl
test
push
cmp
jmp
xor
lcall
lock
inc
popa
or
pop
and
push
xlat
push
loope
xlat
adc
jle
imul
aaa
fucom
mov
loope
push
outsl
inc
sbb
jp
adc
fldenv
push
data16
push
dec
pop
mov
scas
clc
inc
xor
cmpl
mov
adc
icebp
jne
or
aad
incl
push
sub
pop
fildl
cltd
mov
ficompl
cmp
inc
and
aas
push
sbb
mov
mov
jb
cltd
jge
sbb
insb
sub
lret
pop
adc
dec
or
fidivrs
inc
inc
jne
cli
aas
inc
mov
popa
pop
sub
ja
lock
pop
les
mov
notl
adc
pop
pop
ljmp
hlt
insl
pop
inc
addr16
push
stc
or
aaa
fisttpll
rorl
jg
inc
shlb
in
int3
ret
jo
mov
or
sbb
fstpt
lcall
es
mov
movl
sbb
fildll
xchg
push
xchg
cmp
push
push
fnstsw
imul
sub
imul
push
cld
and
cmpb
call
rolb
push
pop
and
xor
ret
outsl
jle
inc
lods
xor
xchg
lock
pushf
mov
jp
cmp
daa
ret
mov
out
popf
cli
or
subl
sbb
out
sarl
enter
dec
test
or
fcompl
pop
sbb
adc
push
jae
or
imul
scas
pop
stos
aam
add
sub
clc
or
out
push
add
sti
or
pop
sbb
sar
pop
dec
dec
jo
pop
test
dec
inc
imulb
pop
out
push
cmp
out
and
sarl
fnstenv
out
pop
ds
dec
pop
dec
addb
cmc
sub
data16
pop
xchg
loopne
xor
orl
xor
sub
repz
mov
mov
push
arpl
add
fnstsw
xchg
fistpl
mov
rorb
fcomps
jne
and
aaa
push
movsb
pop
adc
adc
aad
cmp
sbb
stc
shll
hlt
sub
das
mov
inc
jmp
xchg
mov
test
push
mov
out
sti
xchg
mov
mul
and
movsl
aas
xorb
add
gs
lock
jg
out
push
adc
jo
jp
in
scas
repz
or
xchg
mov
stc
stc
fwait
dec
ffree
add
mov
add
ret
pop
inc
and
sub
mov
mov
mov
test
push
sbb
add
xor
inc
iret
or
xor
mov
adc
fisttpll
push
or
sbb
imul
stc
icebp
inc
sub
in
cmp
inc
out
call
out
incb
inc
push
push
jl
cwtl
and
mov
inc
mov
and
out
jb
lds
outsb
sub
mov
adc
mov
test
adc
inc
adc
add
outsb
pop
sub
pop
inc
test
cpuid
leave
mov
sub
inc
inc
std
scas
cpuid
fwait
add
xchg
and
lahf
sbb
cmpsl
outsb
and
mov
push
mov
cltd
mov
addr16
loopne
ror
sbb
sbb
sbb
and
das
xorl
cltd
mov
loopne
in
jge
test
jge
shlb
int3
or
rcrb
pusha
aam
xchg
cwtl
mov
lret
pushf
daa
lret
cmp
loop
jecxz
sbb
aas
ss
pop
mov
mov
not
out
out
xor
orl
inc
jbe,pn
sub
cmp
or
mov
xchg
lcall
sbb
sub
inc
rep
shll
xchg
sti
test
arpl
add
sti
popl
in
pop
xlat
push
jl
scas
out
out
lods
jl
mov
imul
xchg
std
push
dec
dec
push
in
inc
push
dec
aam
in
outsb
pop
out
cltd
js
mov
and
sub
outsb
xchg
fstl
repz
jbe
push
test
dec
icebp
inc
jge
pop
mov
aas
jb
rcrl
outsb
jo
icebp
icebp
pop
adc
enter
gs
mov
das
xor
scas
in
xchg
push
nop
mov
inc
cmpsb
loop
mov
faddl
xlat
xorl
pusha
and
xchg
cld
xchg
adc
or
filds
inc
popf
and
add
xor
mov
sub
cmp
stc
push
sbb
in
shlb
stos
adc
push
stc
dec
sub
mov
lret
sbb
mov
mov
gs
adc
shll
or
bnd
adc
sbb
inc
fwait
in
fsubrl
test
fwait
cmp
fldl
push
dec
pop
stc
sub
or
scas
jle
jp
imul
fstpt
clc
and
xchg
in
popa
scas
jae
mov
bound
mov
mov
daa
adc
sbb
pusha
sbb
arpl
adc
fidivrl
push
mov
jl
popf
addr16
pusha
test
xchg
mov
popf
scas
cltd
mov
bound
ret
sub
xchg
pop
cmp
adc
sbb
fwait
mov
push
cwtl
and
pop
cmp
add
jae
iret
jne
notb
push
aad
inc
movsb
daa
inc
lock
mov
sub
fcmovu
adc
inc
sub
dec
fwait
das
int3
xlat
test
cmpsl
jge
jmp
push
out
mov
fnstsw
nop
repnz
push
inc
hlt
and
mov
xchg
scas
add
scas
sbb
inc
sub
pop
dec
negl
pcmpeqb
out
ljmp
int3
xor
fsubs
mov
jnp
or
clc
xchg
outsb
adc
hlt
push
out
pop
test
xor
xor
cs
out
fildl
sbb
loop
jge
adc
push
and
cmp
mov
test
lods
inc
fldt
jno
je
xchg
and
test
mov
xor
xor
mov
push
sub
rcrb
mov
inc
in
pop
bound
loope
fsubrs
jl
repnz
push
movb
adc
in
imul
push
js
add
lds
dec
xor
and
mov
mov
cwtl
adc
or
push
sbb
sbb
xor
repz
arpl
lds
pop
sub
jno
lret
add
xor
rolb
sub
xor
repz
test
pop
fs
insb
or
and
outsl
sub
call
iret
gs
int
test
or
out
pop
mov
insl
mov
mov
inc
lret
mov
xor
mov
inc
or
popf
fidivs
jle
mov
inc
bound
addr16
rorl
test
iret
add
mov
mov
cwtl
and
push
adc
xchg
test
rcr
jp
out
dec
pusha
pop
jo
jmp
sbb
jl
push
mov
pop
xor
xor
stos
ret
or
mov
aas
add
rcll
push
and
pop
add
lahf
mov
adc
ret
scas
fldt
divl
out
sti
pop
aas
insl
popa
sbb
fidivs
imul
push
lret
jb
pop
fcmovu
in
lahf
add
xor
sbb
js
sbb
fcom
scas
adc
inc
hlt
out
lods
jo
dec
dec
jmp
dec
mov
in
es
jb
fistl
test
inc
dec
out
jge
iret
rorb
clc
adc
cwtl
push
pop
sbb
repz
pop
cmp
hlt
xor
shrl
mull
out
into
ja
pop
pop
test
jnp
jo
mov
push
movsl
fimuls
scas
xor
lret
ret
aad
scas
dec
ror
pop
add
xchg
aas
mov
add
fcomip
js
xchg
sub
outsl
sbb
push
cld
sub
notb
outsl
jae
mov
mov
sub
std
daa
test
mov
icebp
jge
push
test
stos
xchg
and
dec
repz
cltd
mov
gs
pop
fnstsw
add
popa
movsl
cmp
loop
xchg
add
ficoml
out
cltd
mov
pop
and
push
out
dec
add
sbb
mov
lcall
add
out
mov
or
dec
lods
mov
imul
ficomps
push
cwtl
sub
mov
and
testl
xchg
add
test
xchg
xchg
add
cmpl
loope
stos
fadd
or
clc
arpl
pop
lret
jae
ja
inc
std
in
iret
adc
sbb
les
mov
and
out
mov
cli
xchg
dec
call
ss
lcall
jp
push
enter
mov
xor
rclb
adc
sub
lock
pop
test
xchg
add
cwtl
mov
xchg
sbb
stos
xchg
mov
push
xchg
fs
cmp
rolb
daa
jp
shrl
xlat
call
dec
sub
cmpsb
xchg
dec
insb
sbb
test
cwtl
mov
movsb
cld
cmp
in
xchg
int
pop
shr
jo
cs
aam
xchg
fs
push
push
add
push
bound
add
fcmovnbe
pop
sahf
jp
insb
mov
out
add
pop
notl
cmp
adc
xchg
and
pop
cld
jnp
test
fwait
lcall
call
sahf
sub
arpl
je
les
dec
sub
cli
movsl
adc
lock
jb
push
xor
mov
pusha
adc
cltd
stos
test
sbb
and
mov
js
push
push
xorl
push
je
push
lods
mov
fwait
aam
insb
push
dec
cmp
dec
insl
xor
je
pop
jg
xor
inc
mov
and
and
fsub
pop
xlat
cwtl
dec
jmp
sbb
inc
fisubrs
enter
repz
cmp
and
pop
stos
pop
cmpsb
pushl
addr16
sub
cmpsb
fwait
jle
fiaddl
pop
mov
mov
lds
jns
xchg
add
into
pop
ljmp
int3
loope
push
mov
pop
pusha
sbb
add
popf
jnp
sbb
adc
sub
cltd
cmp
outsl
negl
cmp
and
int3
sub
repz
cmp
lock
cli
sub
xchg
adc
fisttpll
ret
sub
movaps
mov
enter
das
frstor
dec
jae
dec
dec
jo
leave
push
mov
sbb
and
xor
es
sbb
negb
mov
cmp
sub
movsb
ds
xchg
js
cmp
pop
es
inc
iret
mov
repz
jmp
mov
pop
sbb
movsl
ljmp
jb
sbb
cld
int3
mov
mov
or
or
fwait
outsl
stos
popa
loope
push
pusha
cs
scas
jns
addl
loope
mov
adc
fdivl
cmp
aaa
sahf
pop
ss
cmp
pushf
in
inc
dec
inc
mov
in
sbb
repnz
push
test
fsubl
push
push
scas
mov
bound
sub
dec
dec
pop
je
in
mov
sbb
push
scas
movb
ret
xor
sbb
or
sbb
adc
pop
push
lcall
inc
mov
push
hlt
lret
ss
sub
out
mov
enter
add
ret
pop
jl
setl
mov
push
cli
call
sub
or
jl
jmp
nop
mov
cli
mov
mov
out
mov
loopne
and
xor
pushf
sbb
xchg
mov
pop
fcmovne
push
pop
es
or
jg
icebp
mov
out
pop
and
mov
leave
repnz
xchg
fnstsw
mov
xor
cmp
in
cmpsb
pop
test
xor
mov
xchg
or
sub
outsb
pop
mov
insl
pop
jl
xchg
repnz
inc
insl
and
dec
xchg
cmp
rcll
int3
or
inc
jns
mov
arpl
cwtl
out
testl
stos
out
jp
inc
cltd
inc
pusha
imul
add
pop
mov
sbb
push
shlb
js
ret
pop
lods
push
lret
outsb
out
jns
daa
mov
in
or
jle
popa
mov
jb
pop
daa
mov
jb
cld
fisubrs
mov
pop
and
rol
sarl
sahf
inc
xor
pop
dec
arpl
hlt
adc
pop
lods
imul
sahf
ss
add
outsb
push
mov
xchg
pop
push
dec
in
pop
inc
inc
pop
and
ret
repz
in
shl
pop
cs
dec
fistpll
scas
and
in
mov
cmpsl
int
bound
daa
cld
or
mov
jp
stos
push
cld
outsb
dec
shlb
scas
adc
mov
scas
scas
mov
cs
in
jb
pop
inc
repz
pop
pop
sub
add
fimull
mov
insl
mov
fisubl
pop
notb
out
jne
and
les
push
loop
test
mov
or
cmc
cmp
leave
ficoml
stc
inc
hlt
popa
cmp
xchg
arpl
inc
and
std
stos
scas
push
pop
mov
fldt
pop
ret
cmpsl
xor
popa
rcrb
stos
ffree
lret
jge
movsl
fucomp
mov
popf
add
popa
or
add
jb
test
mov
xchg
fwait
lret
out
lds
les
xor
lret
sub
sub
mov
mov
push
rcll
xor
ja
bound
mov
call
dec
xchg
dec
out
pushf
xor
xor
adc
loop
mov
xor
sbb
inc
push
push
pop
add
mov
jo
iret
test
jne
lods
arpl
mov
shlb
cmp
scas
pop
popl
push
push
fdivl
mov
nop
pop
mov
sbbl
cwtl
push
and
icebp
mov
jg
jecxz
lret
sub
loop
push
jbe
pop
add
mov
mov
mov
cmp
mov
mov
adc
inc
adc
fbld
dec
mov
dec
rcll
jmp
push
mov
add
add
jb
sldt
add
add
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
sub
mov
movb
popa
jmp
insb
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
and
jl
sub
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
adc
xlat
loope
jmp
push
push
fs
inc
ljmp
loope
ljmp
and
pop
add
popa
jo
shll
pop
push
repz
jmp
lahf
js
xor
add
or
repz
dec
adc
out
mov
adc
test
fucom
xor
jns
pop
or
pop
dec
fsubl
fwait
add
ljmp
and
or
mov
stos
xchg
or
add
ret
mov
nop
aam
call
in
cmp
mov
mov
adc
mov
je
mov
xchg
loop
sub
cmp
and
and
push
cmp
xor
aas
addl
fisttps
dec
mov
dec
aad
jmp
mov
add
out
sbbb
add
adc
inc
fdivs
or
xor
or
sbb
incb
call
inc
jmp
fsubl
call
inc
or
add
dec
mov
pop
or
test
or
rol
mov
inc
mov
cmpl
lea
fdivs
or
pop
mov
js
rcrb
jbe
or
dec
inc
inc
shll
mov
inc
cmp
jb
mov
sub
popa
jle
mov
and
xchg
stos
mov
add
sbb
ja
clc
or
jl
adc
pop
cmpsb
dec
rcrb
push
xor
aas
add
xor
or
mov
adc
add
mov
test
cmpsb
frstor
mov
push
lea
push
push
mov
xor
and
xor
jne
mov
int3
ret
sub
xor
loopne
sarl
add
jmp
ret
roll
add
push
pop
or
mov
fsubr
and
cmp
mov
add
xor
adc
movb
test
clc
bound
mov
popf
or
je
bound
lret
push
call
movsl
imul
mov
and
xor
add
mov
sbb
mov
out
add
xor
pop
je
test
fstpt
mov
shlb
adc
cmpb
jne
and
shr
and
cmp
mov
jg
mov
fadds
test
leave
je
mov
xor
push
ret
sub
int3
rclb
pop
mov
jnp
cltd
arpl
add
jne
adc
ret
cmpb
and
xor
add
push
popa
or
adc
pop
shrb
aaa
jmp
and
inc
pushf
jge
cmpl
cld
add
lea
jg
clc
test
lock
push
hlt
push
adc
gs
lock
shl
add
in
sub
fisttpl
sti
lock
xor
ja
jmp
and
cli
or
ficomps
mov
adc
push
test
or
outsl
and
or
pop
lock
hlt
in
cwtl
add
jbe
movsl
xor
cmp
push
cld
jb
loopne
fistpll
es
sbb
sbb
adc
sarl
cmova
jne
mov
mov
cmp
mov
pop
push
gs
mov
mov
repnz
fldl2e
pusha
adc
dec
jnp
add
es
and
or
add
clc
repnz
popa
sub
sbb
ficoml
xchg
lret
xor
lock
pop
add
adc
clc
cmp
inc
xorb
cs
adc
dec
in
in
sub
lds
fstl
mov
add
test
or
jne
adc
adc
repz
or
pop
iret
in
or
mov
fistpll
repnz
repnz
lcall
ja
xor
adc
icebp
shlb
or
or
sub
movaps
jle
xor
roll
aas
sbb
xor
int3
inc
in
loop
push
jg
cld
inc
xchg
add
push
mov
mov
cmpsl
push
push
mov
pop
adc
push
dec
jp
mov
mov
xchg
inc
push
imul
jmp
pop
lret
and
or
and
add
imul
add
and
add
fdivrs
cmp
addb
daa
xlat
mov
sbb
cmp
cltd
add
lcall
addr16
icebp
xchg
movsb
pop
xchg
and
pop
lock
std
push
or
adc
cwtl
imul
in
inc
push
and
add
les
and
add
push
fucomip
cmp
adc
clc
inc
cmp
xchg
and
inc
push
les
push
iret
cltd
dec
push
jbe
inc
fldl
popa
add
rcrl
mov
pop
xor
adc
jle
push
sbb
jo
pop
hlt
mov
or
xchg
xor
pop
jno
nop
lea
lret
mov
bound
out
cmp
ret
pop
ljmp
repz
add
cmp
into
int3
sti
add
push
ret
scas
sub
xor
hlt
xchg
pop
add
dec
inc
push
adc
and
subl
ljmp
imul
mov
imulb
adc
aaa
ljmp
cmc
and
cmp
or
xlat
and
dec
pusha
subl
cli
shr
lret
pop
sub
mov
pop
pop
shr
hlt
mov
mov
adcl
add
sub
test
pop
in
stc
jne
push
adc
imul
ljmp
mulb
add
iret
push
push
cld
pop
jmp
add
stos
imul
push
fs
adc
loop
je
icebp
icebp
mov
pop
pusha
out
add
mov
xor
and
fildl
push
mov
inc
adc
mov
adc
cmp
add
fdiv
cld
add
push
rolb
or
nop
add
dec
es
sub
movsl
cmpsl
xor
pop
push
setb
and
jecxz
push
xor
std
adc
mov
jg
jo
aas
sti
jno
test
jmp
fimuls
inc
lea
add
cmp
add
mov
rorb
sub
leave
mov
mov
xlat
add
xchg
jo
xchg
add
sbb
sbb
sub
es
stc
xchg
mov
mov
pop
in
inc
adcl
pop
ljmp
add
jmp
or
test
jb
in
or
sbb
mov
pop
repnz
push
sbb
negl
cld
js
sbb
sbb
rcl
jmp
add
insb
in
push
ljmp
sbb
add
or
mov
add
out
in
or
or
adcw
fucom
push
mov
shlb
gs
ja
sub
cmpb
cmp
sbb
imul
ja
xchg
xchg
cmp
adc
jns
call
cs
push
jae
mov
jmp
sub
xchg
sahf
jns
add
pop
pop
rcr
xchg
pusha
add
mov
loop
sbbl
sub
add
sar
ljmp
mov
and
sbb
lea
sbb
sbb
mov
inc
sub
jge
add
mov
push
jmp
xor
add
pushf
ljmp
jmp
in
sbb
or
ljmp
mov
lcall
or
stos
pop
adc
mov
and
or
es
mov
test
movsb
sbbb
and
mov
ja
daa
add
mov
sar
loopne
sbb
aas
sbb
gs
pusha
lea
andl
add
inc
addr16
sbb
gs
add
xchg
sbb
xchg
add
inc
dec
mov
cli
mov
leave
hlt
stos
pop
mov
out
into
add
fs
mov
add
ret
sti
mov
inc
mov
xor
sub
xchg
cwtl
clc
sbb
ljmp
add
adc
sbb
cwtl
and
dec
and
into
lcall
testb
inc
movsb
mov
ror
and
sbb
add
adc
inc
filds
xor
test
adc
add
jge
daa
mov
nop
cmpb
or
mov
xor
out
cmc
insl
add
sahf
push
xor
sbb
add
inc
mov
mov
mov
shr
pop
and
sub
jno
inc
mov
inc
fbstp
mov
popf
out
cmp
inc
or
or
or
cmpsb
nop
fbld
jle
divb
in
dec
mov
add
sbb
mov
dec
ret
mov
sbb
lcall
fisttpl
and
push
mov
pop
mov
dec
bound
jge
add
xchg
jno
scas
adcb
call
movsb
addr16
das
add
pop
je
sbb
lcall
daa
mulb
aam
push
iret
mov
xchg
xor
jbe
rorb
inc
or
push
sbbb
sarb
fwait
insl
sub
insb
dec
int
jecxz
sub
cld
sbb
sub
xchg
lock
fcomps
xorb
inc
pop
push
add
mov
mov
xchg
cmp
in
jmp
stc
or
pop
push
adc
mov
sub
pop
add
daa
imul
mov
adc
dec
lea
ret
rclb
inc
fildl
xchg
cmpsl
sbb
je
or
xor
fs
mov
leave
faddp
cmp
shlb
decl
pop
and
sbb
ret
mov
push
xchg
enter
sub
orb
inc
dec
rorl
cs
jmp
mov
push
jle
enter
mov
push
fldt
cmp
fimuls
ror
aaa
icebp
push
bound
dec
rcr
jo
mov
add
inc
cmpl
adc
add
adc
loop
xchg
push
add
adc
call
sub
pusha
push
nop
cli
mov
jecxz
sbb
adc
or
leave
sub
je
je
or
xchg
sbb
pushf
int
fs
cltd
pop
mov
mov
xor
mov
inc
mov
inc
jae
fldt
cs
cmpsb
ds
int3
xor
xor
sbb
fwait
or
cltd
mov
dec
cs
add
je
xor
sub
push
fwait
mov
subb
jmp
dec
add
pusha
xor
ja
ljmp
test
add
dec
lock
mov
cmp
mov
push
pop
scas
sbb
mov
add
in
pop
into
mov
fcompl
pushf
ja
call
testb
rorl
sub
in
ljmp
inc
xlat
jge
shll
imul
adc
or
add
clc
test
push
loopne
sub
add
sub
cwtl
pop
inc
and
mov
add
add
add
xor
and
and
and
add
in
add
or
mov
adcb
mov
fsubrs
data16
add
sti
add
ds
or
dec
test
or
lcall
adc
int3
inc
push
inc
sub
push
mov
addb
lcall
push
aaa
add
imul
mov
mull
mov
and
sbb
in
and
mov
imul
jle
and
add
cli
xchg
cmpsb
add
sbb
adc
ljmp
xor
and
pop
push
push
in
in
daa
add
shrd
out
test
add
out
adc
fs
sti
fs
jb
in
int
xor
ret
inc
movsl
pop
repnz
mov
dec
das
or
add
jo
sbb
cli
push
test
pop
into
mov
cmp
popa
and
add
mov
jmp
icebp
shr
xor
mov
shlb
mov
sub
mov
or
clc
jl
addl
xchg
jbe
xor
addps
imul
pop
jmp
sbb
xor
add
push
xchg
inc
mov
push
add
cmp
aam
fidivrl
add
roll
sahf
push
orl
lret
paddusb
rorb
ficoml
xor
flds
int
add
cld
dec
stc
ss
pop
sub
or
adc
jl
lcall
mov
adc
aam
nop
aad
sbb
or
xor
mov
xor
andb
sub
push
fisubrs
fnstsw
roll
push
mov
mov
cmpsb
push
aas
mov
sub
xor
sbb
push
jbe
lret
xchg
sub
call
dec
lahf
add
hlt
cs
mov
xor
ja
xor
cmp
mov
iret
lea
mov
test
imul
push
int3
dec
enter
iret
mov
push
int
jns
int3
push
xchg
iret
fwait
add
and
stos
mov
jnp
pop
add
call
adcb
test
les
sbb
push
stc
aam
fisubrs
adc
mov
push
pop
arpl
mov
out
push
fsubr
inc
pop
pushf
fimuls
out
or
jae
xchg
addr16
mov
jl
push
sub
add
aam
sbb
mov
mov
sti
imul
jnp
iret
pop
push
sub
push
add
shrb
sahf
mov
or
mov
dec
jp
or
dec
jge
push
mov
add
aas
add
sarb
fld
or
sbb
sub
sbb
iret
pop
mov
mov
add
and
movsb
sbbb
and
gs
and
sbb
in
mov
rorb
test
push
sub
adc
jl
push
xor
hlt
push
bound
das
mov
xchg
sub
adc
jl
aad
cmp
pusha
inc
roll
jb
push
add
sbb
iret
data16
shlb
mov
and
popa
dec
and
clc
push
test
ret
ss
xor
push
stos
and
dec
sbb
xor
fdivr
xchg
in
mov
adc
push
call
xchg
mov
call
push
scas
ss
stc
pop
and
arpl
pop
or
jae
cwtl
inc
das
stos
icebp
inc
dec
adc
sarl
push
jne
aam
movsb
cwtl
push
add
sarb
xorb
and
arpl
xor
add
xchg
jecxz
jne
loope
jbe
lock
or
mov
xor
mov
in
or
fsub
inc
jmp
scas
lret
mov
hlt
pusha
xchg
mov
adc
add
call
in
push
mov
out
mov
add
std
push
clc
xchg
loopne
adc
inc
adc
cld
fldl
mov
fcoml
imulb
add
xchg
fnstcw
and
jno
add
mov
xor
data16
add
xor
inc
push
adc
inc
stos
iret
repnz
mov
mov
cmp
add
and
add
lret
int
cmp
in
cwtl
cmp
out
cmp
mov
mov
mov
loopne
dec
add
push
clc
inc
xor
push
movaps
loope
mov
scas
lahf
inc
pop
je
mov
add
loope
into
add
std
sub
sbb
and
jecxz
and
idivl
cmp
and
push
lea
mov
daa
clc
fsub
push
add
add
lock
mov
push
clc
pop
and
add
pop
inc
push
add
push
mov
dec
mov
xor
sub
fsubrl
mov
ret
add
mov
add
fdivp
xor
push
bound
xchg
jmp
add
scas
pop
mov
add
dec
adc
mov
or
push
test
cmp
mov
sbb
add
stos
jo
jecxz
lods
jmp
cmp
pop
and
xchg
add
sti
aas
stc
pop
sbb
fstp
bound
xor
cs
push
adcb
call
roll
push
cli
sub
scas
sbb
mov
pusha
adc
test
sbb
fldenv
sbb
cmpsb
jno
adc
stc
push
fcomps
insl
xor
lods
push
xlat
ljmp
add
cwtl
xchg
iret
mov
mov
aaa
sbb
push
push
mov
mov
mov
xchg
xchg
pusha
bound
rorl
add
addr16
adc
push
add
dec
bound
adc
mov
mov
jo
mov
ljmp
push
mov
das
mov
hlt
cs
jecxz
add
push
rcll
sbb
hlt
or
and
leave
xchg
mov
push
cmpsl
pushl
pusha
and
nop
enter
xchg
or
bound
and
ficoms
pop
aam
and
subl
cwtl
inc
rcll
or
shlb
jge
lock
in
pop
jmp
add
call
mov
push
xchg
jp
sarb
xor
je
sbbb
xor
sub
enter
jl
popa
cld
sti
and
pop
add
adc
cmp
stos
mov
cmp
jmp
mov
sbb
push
dec
xor
cmp
sbb
cmp
sarl
jp
sub
push
jno
sbb
andl
xor
mov
push
sbb
xchg
filds
pop
cmp
sbb
jl
inc
sti
inc
rol
pop
push
xchg
mov
iret
jns
mov
mov
popf
nop
mov
bound
pop
xor
je
popf
loop
pop
cltd
int3
sti
sbb
lret
pop
es
lds
jge
push
enter
pop
sbb
jecxz
lock
dec
addr16
mov
and
not
push
clc
shlb
icebp
cmp
or
inc
cmc
xor
mov
insb
adc
addr16
add
stos
xor
xchg
jb
sbb
in
inc
and
add
and
adc
lock
mov
loopne
add
add
push
inc
cld
bnd
add
add
repz
int3
xchg
xor
push
add
dec
mov
jl
dec
add
push
and
sbb
cltd
inc
rol
add
sbb
push
stos
cmp
add
push
or
cld
rolb
sub
in
mov
jno
rolb
jmp
nop
iret
pop
pop
pop
dec
loopne
test
dec
adc
push
les
nop
push
inc
sbb
je
push
mov
push
xor
leave
cld
xlat
adc
add
rcr
adc
pop
das
or
inc
jmp
lock
jbe
insl
pop
les
lods
in
or
xchg
sbb
push
inc
xor
mov
xor
jb
jle
jmp
add
roll
jg
sti
adc
mov
mov
dec
and
pop
mov
pop
inc
pushf
xor
scas
sbb
loopne
aam
mov
in
or
xchg
negb
or
xchg
sahf
loopne
cltd
adc
mov
mov
mov
xchg
rorb
pop
or
xchg
inc
add
and
movsl
or
push
aaa
sbb
sti
inc
sub
and
movb
xor
hlt
outsl
add
pop
int
dec
das
fcoml
add
lret
sub
fsubl
jmp
add
iret
scas
inc
add
dec
mov
or
xor
xchg
mov
add
xchg
xchg
push
xchg
mov
pop
rol
test
pusha
jge
lcall
push
out
les
in
cmp
int3
cli
push
add
xchg
dec
jns
mov
int
rcll
fwait
xchg
rolb
enter
dec
cwtl
filds
int3
mov
clc
popa
dec
sub
add
cmp
in
andl
ljmp
fnclex
mov
pop
mov
dec
stos
out
sarl
jp
and
xor
js
rolb
outsb
roll
and
popf
xorb
adc
sub
mov
or
ja
addr16
push
lret
push
std
add
pop
inc
or
outsl
xor
and
and
and
add
outsl
or
inc
cwtl
push
cmp
xorb
movsb
stc
aad
pop
and
push
xchg
jecxz
cmp
pop
repnz
clc
sarl
push
mov
mov
pop
mov
cwtl
mov
data16
js
sub
test
leave
dec
mov
push
je
fsubp
dec
in
cmp
in
mov
inc
cmp
inc
imul
push
pop
icebp
xchg
add
or
pusha
test
shll
add
fiadds
push
push
int
or
fisttps
sbbb
pop
lret
fnstsw
das
or
std
xor
jg
adc
pop
jbe
lret
xchg
adc
mov
popa
orl
pop
js
test
inc
mov
or
mov
mov
cmp
pop
add
int
imulb
pop
push
and
cmovs
int3
fs
cmpsb
or
sbb
mov
sbb
rolb
iret
mov
adc
dec
dec
mov
std
aad
int
or
adc
test
fimuls
or
add
shl
sub
or
cmp
and
ss
js
fisttps
aad
clc
cmp
sbb
cmp
and
mov
add
xor
inc
add
clc
mov
into
pop
add
mov
pop
dec
orl
mov
scas
sub
mov
ja
fs
lds
mov
xor
cmp
and
sbb
pop
movl
xor
add
add
xchg
xchg
ds
addl
add
std
outsl
jo
inc
and
add
xlat
or
int
lods
xor
leave
add
fdivs
subb
push
add
mov
stos
mov
orl
fs
inc
adc
jg
add
and
mov
push
loopne
cld
mov
lahf
add
xchg
scas
mov
push
cwtl
fadds
pop
jbe
inc
daa
pop
int
mov
or
mov
cmp
and
sub
test
and
daa
mov
xchg
add
movsl
mov
test
jae
mov
int3
inc
jmp
sbb
into
mov
andb
mov
in
xor
or
inc
repnz
les
dec
cmc
jo,pn
cmp
mov
ds
adc
adc
adc
cmp
xchg
inc
inc
push
adc
call
repz
add
pop
loope
push
mov
jl
cmp
dec
fidivs
iret
jae
add
mov
mov
cmpsb
cmp
out
push
inc
mov
mov
jo
lea
arpl
cmp
lret
xor
dec
rcrb
xor
add
xlat
cmp
jo
inc
jge
hlt
rorl
sub
rclb
dec
cmpb
cs
add
add
xchg
add
jno
pusha
or
xchg
mov
and
dec
add
movsl
and
xchg
mov
lret
push
in
cltd
sbb
add
add
roll
insl
lret
add
dec
or
add
shlb
pop
fsubrs
fs
add
adc
pusha
xlat
push
cmp
js
mov
xor
roll
add
push
sbb
leave
push
int3
cmp
push
scas
jnp
sbb
and
mov
jecxz
je
mov
add
xchg
add
adc
add
scas
sub
mov
movsl
xor
int3
inc
cmp
xchg
test
or
les
mov
add
mov
lock
mov
cmpl
enter
ss
jo
mov
mov
sub
mov
out
dec
add
adc
pop
add
leave
jno
jnp
and
sbb
call
adc
int3
mov
loopne
pusha
popf
xlat
add
jnp
and
mov
mov
std
inc
sbb
insb
outsb
ds
cmpsb
dec
int3
adc
push
fadds
or
mov
inc
pop
jo
adcl
or
jo
add
dec
nop
mov
ja
adc
rclb
add
mov
or
push
xlat
leave
fbstp
and
loopne
cmpsl
mov
out
rcrb
icebp
mov
mov
jno
mov
jae
popf
pop
add
mov
mov
pop
xor
dec
daa
fldenv
and
andl
repnz
sub
sahf
out
pop
mov
int
adc
rol
sti
fcmovnbe
fmuls
aas
mov
cs
mov
aad
pop
scas
iret
push
sub
xor
int
push
aam
lret
fs
mov
push
mov
dec
into
and
cmp
pop
jecxz
pop
xchg
xor
add
int3
pop
push
and
push
and
loop
into
imul
sarl
dec
mov
xchg
pop
jecxz
push
nop
inc
scas
sahf
add
mov
int
push
sti
hlt
add
inc
js
push
mov
push
faddl
lods
gs
pop
add
inc
mov
xor
mov
ljmp
outsb
xor
xchg
or
push
adc
or
ret
mov
dec
jne
into
and
mov
or
xlat
xorb
sbb
cmp
add
mov
fiaddl
cmp
mov
xor
movl
test
cmpsb
imul
push
mov
ja
cmp
mov
cmp
movsl
xchg
add
into
push
cmpsl
es
add
shlb
push
or
inc
mov
cmp
lret
je
xchg
or
cltd
cmp
add
xchg
cli
bound
or
mov
pusha
mov
scas
mov
mov
or
mov
dec
es
and
imul
loopne
inc
xorb
mov
push
iret
mov
sarb
int
das
add
mov
pop
sbb
or
jo
out
xchg
mov
nop
outsl
and
sbb
and
aas
mov
mov
mov
fs
cmp
sbb
and
xorb
leave
loopne
push
sub
loopne
fadd
jl
xchg
inc
inc
and
cmp
enter
pop
imul
sub
in
sub
jae
cmp
int3
mov
js
movsl
and
or
sbb
dec
je
push
outsl
fwait
cltd
pop
or
add
mov
in
push
or
out
push
je
dec
inc
xchg
cltd
jl
dec
mov
stc
ficoms
or
add
addl
mov
pop
xor
loopne
push
scas
add
leave
or
push
lcall
and
fmuls
xchg
jmp
inc
push
fstps
xor
ficoml
add
in
lea
arpl
sbb
xchg
add
sbb
add
clc
lock
scas
push
bound
dec
xor
mov
mov
sti
sbb
dec
lods
lock
and
cli
leave
pop
push
dec
je
rolb
adc
add
outsl
movl
add
or
jae
push
and
mov
movsb
cmp
mov
lret
inc
push
aam
mov
ja
adc
or
and
dec
xchg
stos
les
cli
xor
shll
cmp
mov
xor
insb
fs
aaa
xor
data16
pop
fwait
int3
push
push
int
stc
cmp
mov
and
fwait
je
and
lcall
cmpl
mov
aam
movsl
popa
cs
rcrl
mov
jnp
pusha
into
xchg
mov
mov
lcall
call
or
push
test
mov
testb
sbb
xchg
add
dec
enter
mov
mov
loop
sub
pop
les
add
inc
dec
mov
xchg
js
add
mov
iret
jecxz
jns
add
fsubs
hlt
cwtl
sub
mov
dec
inc
dec
and
fsub
aas
xor
rclb
loope
cmp
cmpsb
push
popa
mov
das
and
lret
cli
xchg
insl
fidivs
push
mov
rcll
int3
scas
aam
mov
insl
xchg
adc
lcall
xchg
gs
add
outsl
insb
rorl
and
scas
psubw
movb
and
sahf
and
xchg
xchg
cmpsl
subl
sbb
es
leave
push
scas
icebp
in
in
xor
shlb
das
and
in
sbb
into
imul
in
mov
shlb
sub
out
rorb
or
jmp
xchg
cmp
andl
add
ljmp
sbb
adc
add
mov
and
test
and
push
ret
push
xchg
stos
add
shrb
and
inc
push
dec
addr16
clc
scas
pop
or
sub
or
int3
dec
pop
sbb
roll
mov
adc
pop
mov
lods
shlb
pop
les
fwait
inc
je
test
jae
lcall
js
in
cmc
add
fwait
add
fmul
dec
lret
push
ffreep
lret
sub
xchg
shr
addb
add
fwait
enter
outsl
out
dec
loope
scas
dec
mov
sub
pop
insl
icebp
fwait
dec
inc
add
and
call
mov
fwait
sub
cmp
pop
sub
xor
push
test
in
cmp
mov
sbb
nop
and
or
rcrb
or
or
or
cwtl
aas
push
adc
and
movsb
adc
add
fiaddl
push
adc
out
iret
jle
lret
pop
sahf
jecxz
ret
sub
inc
call
aam
push
gs
sub
or
or
or
mov
ja
nop
aas
mov
dec
jbe
aam
adc
in
cs
adc
call
push
lcall
ret
or
jg
ja
adc
mov
test
jo
jae
jne
repnz
inc
dec
iret
pushf
movsb
repnz
add
mov
cmp
adc
popf
xor
call
cs
enter
sub
lea
nop
or
jmp
test
aam
pop
push
lret
xchg
and
cmp
sub
dec
call
or
cmp
lcall
cmpsb
test
repnz
xor
add
mov
sbb
xor
mov
dec
cltd
loop
repz
mov
aaa
in
mov
in
and
or
xor
in
cmp
ret
adc
mov
sbb
loopne
enter
mov
mov
subb
xchg
or
push
mov
mov
pop
cmp
add
pop
sbb
divb
popa
insl
aas
mov
inc
test
pushf
pop
cmp
inc
pop
pop
dec
pop
or
clc
cmp
fildl
jnp
inc
push
lcall
pop
mov
dec
rclb
insb
cwtl
mov
enter
push
or
mov
sahf
imul
mov
loopne
inc
das
inc
dec
ja
cmp
xor
fcomps
sbb
mov
push
sahf
sub
pop
cmc
mov
fcoms
add
cli
push
mov
jle
add
cmp
stc
rolb
dec
inc
sbbb
pop
fadds
add
cmp
inc
inc
adc
inc
ret
movsl
test
pop
mov
sbb
sub
mov
adc
cmp
xor
ficoms
test
sbbb
mov
jmp
je
sub
icebp
mov
imul
mov
add
inc
cli
icebp
je
ret
arpl
cmpl
lret
das
pusha
scas
pop
mov
jns
push
adc
imul
push
sbb
xchg
or
pusha
mov
xor
lds
mov
mov
inc
push
add
and
jo
mov
mov
lcall
rol
fwait
xor
dec
rcrl
push
and
orl
std
xor
pop
loopne
adc
inc
enter
lock
push
int3
aam
popf
cs
add
pop
inc
sub
add
ret
xlat
rclb
cmp
sbb
sbb
or
inc
add
loopne
inc
pop
cmp
and
add
mov
add
rorb
loope
pop
pop
jp
mov
sbb
ror
mov
sti
nop
pushf
pop
and
jmp
jns
sbbl
loop
mov
push
lds
lock
pop
push
adc
pop
jmp
test
dec
cmc
test
sbbl
push
mull
jmp
pop
jl
adc
add
sbb
popl
xchg
int3
pop
adc
adc
xor
cmc
xor
lock
mov
add
add
iret
inc
sbb
popf
add
outsb
cmpsb
dec
cmp
mov
stos
sub
mov
jnp
push
insb
dec
xchg
aaa
mov
adc
sub
pop
add
cwtl
aam
stos
clc
pop
push
jns
sbb
std
xchg
push
in
add
call
mov
adc
cmp
sahf
loopne
inc
aam
loope
mov
lret
dec
add
fiadds
out
add
sub
movsl
or
les
sti
rclb
mov
add
sarl
add
aas
cmc
and
xchg
bound
xchg
aas
addr16
or
xchg
mov
fwait
dec
add
add
mov
pop
mov
mov
cltd
xchg
cmp
xor
sub
or
sbb
add
test
les
cmp
lsl
pop
mov
add
add
or
mov
add
clc
outsl
mov
and
adcb
push
sbb
xchg
add
in
inc
mov
pusha
aaa
loop
es
cwtl
add
sub
push
and
cmp
add
cs
sub
push
sub
adc
and
add
ds
mov
push
cltd
cmpsl
adc
sahf
jnp
and
and
rdtsc
leave
neg
inc
pop
ret
pop
data16
mov
rcrb
sub
xchg
sub
shll
sbb
cld
add
sbb
nop
dec
xor
push
xchg
add
int
out
add
pusha
xlat
lahf
and
fs
add
sub
inc
ja
xchg
mov
add
or
int
rcrl
cmp
mov
cltd
add
ret
mov
add
cmpsl
fsubrs
in
hlt
inc
push
add
inc
clc
inc
stc
cmp
adc
andb
mov
cmp
int
push
lcall
xor
roll
mov
jl
push
movsl
sub
and
jge
movsl
pmuludq
lds
lea
subl
xchg
stc
pushf
mov
nop
inc
aas
xchg
or
add
jbe
adcl
push
repnz
sub
mov
faddl
jge
and
je
adc
dec
leave
nop
and
jb
dec
ljmp
inc
xchg
push
rcll
leave
sub
sub
js
xor
subb
xor
int3
xlat
xchg
test
test
cld
loop
xor
gs
stos
push
and
push
wbinvd
jmp
mov
push
adc
inc
inc
mov
mov
or
pop
je
aam
push
popf
pop
pushf
jo
sbb
js
aad
sub
or
add
mov
cmp
movsb
inc
aam
faddl
divl
jae
dec
lret
shll
sbb
add
loopne
inc
push
popf
xchg
test
rcll
sub
push
sub
add
imul
xchg
int
test
adc
shll
aas
test
mov
adc
cmp
js
inc
leave
hlt
fldenv
jno
sbb
add
lret
mov
into
jbe
clc
adc
cmp
mov
inc
sahf
adc
jmp
adc
inc
xor
fcmovnbe
or
rorl
push
clc
int3
and
imul
jae
jno,pn
jns
sbb
insb
icebp
daa
mov
js
mov
adc
test
push
lods
pop
mov
inc
subb
mov
sub
pop
pop
push
mov
clc
xchg
jg
inc
ret
xor
push
cmp
nop
xchg
cmp
or
addr16
fxch
rcrl
int3
daa
push
inc
cwtl
jae
cs
pushf
fcoms
cmp
test
or
cli
push
cmp
mov
jge
lea
add
int
xor
rcrb
push
dec
jg
pop
pop
push
xor
add
fs
add
inc
pop
aaa
jnp
rorl
dec
movsb
cld
push
mov
pop
loop
neg
js
cmp
rol
push
sahf
mov
cmp
add
mov
enter
imul
cli
scas
pop
jns
mov
jle
jg
movsb
popf
ljmp
or
push
fucom
aas
adc
popa
jl
xlat
add
sti
sbb
mov
in
xlat
push
mov
jo
int3
add
sbb
mov
imul
inc
push
xor
addr16
shll
outsb
xchg
add
push
xchg
repz
push
xlat
xchg
push
inc
cmp
inc
and
adc
fistps
icebp
push
sbb
pop
inc
and
pop
mul
int3
cs
mov
pushf
push
inc
adc
mov
push
add
or
sbb
push
add
les
aad
ret
movsb
dec
dec
loopne
outsl
loopne
push
or
dec
push
xor
push
stc
mov
orb
pushf
dec
mov
xchg
add
pop
xchg
add
mov
shll
sbb
or
add
cltd
pop
fs
mov
cwtl
cld
and
or
push
pop
mov
add
push
leave
jae
cld
mov
jecxz
js
call
mov
addl
hlt
jo
mov
xor
pop
cmp
xchg
mov
clc
jecxz
adc
pop
push
pop
jmp
add
icebp
mov
fdiv
and
cs
mov
adc
mov
cmp
or
mov
insl
ret
inc
xchg
in
pusha
xchg
sub
or
shll
adc
out
loopne
inc
gs
sbb
sbbl
sbb
addr16
mov
cmp
adc
mov
jo
jge
mov
inc
sub
sbb
lret
inc
rolb
sub
cmp
jle
jno
jp
add
mov
pusha
adc
add
mov
pop
fiaddl
push
jle
or
scas
pop
inc
xchg
push
es
pop
movsb
dec
stos
xchg
in
or
add
adc
cwtl
cli
sub
repnz
pop
das
movsb
mov
subl
outsb
push
mov
pusha
inc
add
repz
mov
into
nop
dec
push
add
clc
cld
rcrl
or
int3
dec
sub
mov
sbb
mov
adc
inc
aas
mov
rol
and
lea
xchg
dec
sbb
mov
pop
adc
mov
cli
sub
stc
inc
inc
sub
aas
nop
rolb
sub
adc
push
cmp
out
jge
add
or
mov
push
jo
mov
xlat
stc
mov
add
fcomps
fcoms
xor
xor
ljmp
out
sbb
and
and
je
and
and
dec
pop
in
hlt
lea
stos
out
les
add
or
mov
out
push
dec
fists
push
mov
mov
lods
les
pop
fwait
test
mov
dec
aad
inc
and
leave
sbb
jmp
mov
subb
sbb
ds
mov
sbbl
lcall
push
pushf
test
scas
pop
mov
jg
mov
insb
jmp
adc
enter
mov
fs
inc
pop
jb
mov
sar
push
add
lods
mov
add
das
cmp
push
mov
or
add
sbb
mov
sub
and
push
sbb
fldcw
sbb
sub
ret
dec
frstor
jl
jbe
shll
xchg
jg
sub
pushf
fldl
idivb
push
xor
jle
add
xor
push
cwtl
test
pusha
jmp
and
jge
lods
insl
add
dec
xor
fsubs
das
subl
fcmovbe
gs
mov
js
lods
and
add
loop
nop
or
xchg
push
enter
dec
arpl
mov
xchg
js
insb
test
sbb
les
mov
xor
add
add
jl
push
enter
mov
pusha
lret
fstps
mov
add
lock
in
rorl
ror
and
call
push
sub
add
mov
and
mov
fxch
shl
sub
dec
sub
mov
pop
test
icebp
xchg
push
jno
popw
cmpsl
test
inc
insl
dec
out
and
adc
pop
clc
rcll
pop
xchg
adc
enter
mov
js
add
stos
sti
cmp
pop
add
out
and
clc
ret
pop
fcmove
push
addr16
scas
jno
out
add
jne
inc
inc
mov
and
cld
xor
xchg
mov
xlat
adc
xchg
enter
push
or
mov
add
outsl
or
adc
jo
in
pop
icebp
or
mov
or
or
mov
inc
jae
xchg
pop
subb
push
mov
sub
xor
dec
inc
and
pop
out
iret
jo
lret
push
or
inc
push
scas
or
mov
push
int3
pusha
adc
daa
sbbl
insb
sbb
aad
or
mov
cmp
inc
ss
test
add
add
mov
or
sti
sub
cwtl
jl
cmp
icebp
push
movsl
mov
lock
lds
jae
addr16
fsubrs
das
dec
and
add
in
mov
test
mov
out
push
into
movsb
in
inc
iret
jmp
and
fnstcw
cmp
dec
sbb
dec
mov
push
cmp
inc
add
cld
enter
les
je
inc
pusha
imul
jbe
inc
mov
xchg
rolb
xor
or
sbb
and
or
adc
xor
and
fcmovnbe
add
cmp
jmp
insb
push
adc
rcll
movsb
push
mov
xchg
or
shrb
stos
mov
xor
sub
outsl
call
imul
and
jb
and
pop
fildl
sub
iret
scas
or
and
push
mov
fdivrs
push
cmp
dec
mov
inc
sub
add
lock
pop
inc
aaa
dec
mov
movsb
pop
rorb
mov
push
lea
mov
nop
cmp
daa
jmp
mov
mov
out
ret
fdiv
sub
addr16
cmp
push
mov
pop
add
mov
iret
add
cs
mov
mov
mov
jmp
pop
dec
xchg
adc
sub
jmp
out
adc
mov
push
in
int
loope
mov
ret
lcall
cmp
sub
ret
sub
inc
dec
movl
pushf
xchg
test
and
cmp
int3
dec
pop
aad
jmp
in
add
cltd
add
push
xchg
xor
andb
dec
dec
sub
mov
or
xchg
or
add
fbld
jge
xor
jmp
jl
clc
cmp
imul
push
orl
loopne
outsl
sbb
jmp
in
scas
cwtl
jg
fisubs
das
je
inc
imul
and
pop
or
insb
adc
xor
xchg
aam
call
push
mov
add
lods
cmp
dec
xor
cmp
mov
jo
or
test
inc
sub
or
ret
shrl
mov
js
mov
mov
enter
xor
add
lds
sti
jb
adc
inc
push
cmp
xor
js
add
addr16
pop
pop
dec
mov
mov
pop
fidivs
lods
and
shrb
fcoms
test
jo
inc
ret
scas
test
lods
jo
inc
pop
add
in
mov
xchg
inc
mov
add
outsb
inc
mov
sub
inc
cmp
sarl
in
inc
or
jno
ret
add
xchg
adcb
xor
mov
sbb
cmp
push
ret
push
dec
cmp
mov
orb
xor
mov
cmp
ss
or
jbe
or
add
jp
leave
xchg
inc
inc
and
sbb
pop
add
mov
cmp
outsb
lret
in
cli
inc
data16
shll
jg
test
ret
xchg
insb
xor
add
jge
dec
pop
cltd
sbb
add
in
je
scas
mov
pop
lds
stc
sbbb
gs
pop
sub
add
dec
bound
xor
ret
fisubs
jmp
add
push
sahf
inc
or
sbb
in
inc
mov
in
or
addl
xchg
inc
pop
int
js
aam
sbb
dec
or
sarl
mov
xor
lret
testl
movsb
mov
gs
lock
sti
sbbb
sbb
scas
je,pt
pop
and
mov
imul
xorb
lock
pop
das
nop
adc
sti
adc
mov
roll
sub
xchg
in
pop
xor
xor
push
test
pop
stos
adc
push
insl
repnz
adc
xorb
inc
je
aad
add
mov
enter
add
scas
xchg
cmp
shlb
xor
jl
jp
jo
pop
pop
stos
adc
or
std
addr16
fdivl
cld
push
add
push
pusha
xor
add
or
fstps
or
adcl
push
mov
sti
pop
call
xlat
idivl
or
dec
add
mov
cltd
sbbb
fstl
pusha
rcrb
or
mov
divb
lods
xor
mov
testl
inc
jb
xor
adc
inc
mov
lods
out
imul
les
mov
xor
rcrl
mov
xor
pusha
or
xor
mov
sbb
sbb
mov
outsl
stc
mov
sbb
pop
xor
lock
rolb
aam
test
addl
sti
and
push
and
fsubl
sbb
sub
cmp
xchg
movsl
adc
or
sbb
push
sub
or
add
and
mov
faddl
rol
cmc
lcall
mov
or
xor
dec
or
ret
nop
sbb
fnstcw
je
xor
jnp
pop
xor
jno
jp
add
add
subl
inc
jae
or
or
inc
fnstcw
int3
stc
mov
mov
repnz
mov
lret
jns
les
fisubl
in
loope
add
sbb
dec
repz
rcll
arpl
out
cmp
in
out
xchg
and
adc
or
xor
add
adc
adc
fwait
push
sbb
orb
sub
test
les
filds
cwtl
xor
and
inc
bound
jmp
add
pop
adc
sub
sub
mov
cld
adc
jno
xchg
imul
or
inc
add
xchg
mov
hlt
or
mov
stos
rolb
mov
mov
sbb
and
dec
and
xor
sbb
add
and
push
rcrb
scas
nop
xchg
dec
clc
adc
cmp
xor
adc
iret
mov
xchg
data16
mov
pop
mov
add
fwait
clc
mov
adc
hlt
and
rorl
sti
stos
jb
enter
add
roll
fcmovu
adc
inc
dec
pop
mov
aas
stc
dec
add
jle
mov
stos
mov
cmpsl
xor
cmpsb
nop
cwtl
and
add
lea
mov
flds
jge
push
sub
and
jmp
orl
loope
sub
idiv
or
lock
cmp
and
jg,pn
sbb
out
cmp
movsl
push
sbb
hlt
adc
xchg
out
pop
mov
dec
cmpl
xchg
jns
psubsb
popa
inc
mov
cmpb
out
adc
sarb
add
pop
or
xor
sub
nop
stos
inc
sbb
bound
mov
inc
sarb
add
xor
inc
jb
pop
mov
sub
mov
cmp
int
aad
pop
popf
jg,pt
cmp
stc
orb
jle
cmp
rcll
movsb
xor
jb
rolb
xor
mov
xor
cmpb
cld
and
arpl
jg
dec
push
mov
add
jmp
out
stos
add
add
cmp
or
add
fisttpl
movsl
xlat
sbb
cli
mov
push
cwtl
pop
sbb
ds
or
sti
ret
push
mov
lret
jecxz
stos
sbbl
push
stc
out
xchg
mov
scas
add
cltd
mov
mov
and
pop
adc
jecxz
inc
dec
inc
add
cmp
addr16
xchg
mov
pusha
mov
pop
sub
loopne
mov
cmp
adc
or
in
movsl
push
in
push
add
xchg
and
aam
fnsave
or
and
mov
les
in
mov
fnstenv
adc
dec
push
call
fadds
lea
cmp
xlat
les
mov
mov
loopne
loopne
lods
rcl
les
pushf
push
xchg
cmpsb
aaa
pop
hlt
or
out
sub
cld
in
adc
mov
shlb
xor
adcb
and
lcall
andb
add
xchg
pop
pop
cld
sbbl
mov
pop
stos
ja
mov
inc
cmpb
into
fisubrs
cmp
adc
add
adc
xor
xor
push
pop
jbe
cltd
push
pop
mov
mov
loopne
pusha
pop
dec
jecxz
sbb
lock
add
push
push
add
add
adc
jae
mov
psubb
fstps
or
mov
ss
in
cwtl
gs
pushf
jbe
cmp
jg
jne
iret
dec
andl
dec
push
and
sub
lods
out
or
faddl
out
xor
enter
int3
add
and
and
data16
bound
mov
in
jo
sti
push
dec
sbb
je
xchg
pusha
adc
lods
jo
in
jns
push
idivb
adc
mov
xchg
dec
mov
mov
cmpsl
subb
mov
push
dec
in
jl
dec
mov
ret
xor
pushl
clc
xadd
push
shll
testl
or
inc
or
pop
int
adc
mov
mov
fcoms
lcall
and
push
mov
fldenv
outsb
or
lret
sti
icebp
push
lods
add
fdivrl
mov
xchg
add
pop
rorl
ret
push
ret
in
add
mov
pushf
dec
es
jmp
mov
inc
jb
arpl
xor
cmp
pop
mov
pshufw
and
mov
ret
and
in
xchg
xor
loopne
or
jg
or
cmp
mov
xchg
sub
lock
sub
add
xor
pop
aaa
and
dec
lcall
or
add
pop
sub
pop
mov
wbinvd
test
mov
lods
push
xlat
std
icebp
pop
fs
inc
or
mov
adc
pushf
cwtl
push
cmp
pop
push
test
adc
mov
stc
clc
js
adc
cwtl
jae
mov
adc
cmp
cmp
adc
adc
xchg
ds
js
pusha
sbb
add
xchg
rcrl
pop
popa
addr16
push
xor
lret
cmp
stos
push
js
mov
push
adc
inc
addb
ret
add
xlat
out
out
add
jecxz
aas
jb
lds
and
add
sti
aad
cs
jmp
push
mov
ljmp
mov
cmpb
lret
aaa
or
mov
and
add
inc
cwtl
cli
and
xor
jg
fcoms
inc
xor
dec
xchg
int3
adc
cmp
loopne
xor
mov
pop
add
inc
jge
cmp
insl
mov
mov
jl
add
std
jcxz
shrl
cmp
lret
mov
enter
out
cmpsb
cltd
sub
addr16
lds
mov
inc
push
sti
sub
add
inc
mov
hlt
adc
pop
aam
mov
test
enter
fcom
rol
inc
cli
cmp
and
mov
call
pusha
sar
sbbb
inc
push
mov
push
lret
xlat
inc
sub
and
push
imul
push
cmp
mov
imull
add
mov
cld
sbb
add
jl
clc
in
hlt
add
or
fbstp
add
adcl
add
rclb
inc
jne
paddb
inc
cmp
or
dec
or
xor
scas
daa
popf
add
cltd
sbb
xorl
push
xor
cmp
xor
leave
mov
nop
call
push
add
das
lcall
xchg
nop
and
cwtl
cmp
pusha
add
push
mov
fldl
xchg
and
out
aam
and
rol
sub
std
mov
add
scas
notl
in
xchg
xchg
lods
add
cmpsb
pop
adc
aad
mov
and
push
mov
mov
negl
sbb
mov
and
and
sub
pop
or
add
fdivl
mov
mov
ljmp
subl
jo
cmp
shlb
call
inc
cmp
xchg
fdivrl
push
push
xchg
lock
cmp
add
testl
enter
inc
cmp
stos
jl
cmpsb
pop
xchg
inc
sbb
adc
sbb
pop
stos
movsb
add
leave
aas
rolb
mov
mov
mov
leave
mov
fcompl
popf
js
fs
mov
xor
jbe
jnp
icebp
mov
adc
pop
mov
lods
dec
inc
js
add
adc
call
xor
add
xlat
lock
adc
jne
add
scas
into
roll
add
imul
adc
loop
icebp
push
call
fisttpll
sbb
pop
jo
and
jle
fsts
sarl
sbb
repz
and
arpl
in
enter
add
fcompl
daa
outsb
xor
mov
xor
cmp
push
pushf
adc
pusha
enter
nop
push
mov
out
push
pushf
or
inc
int3
je
xor
pop
lea
stc
or
pop
ds
adc
add
scas
xchg
jge
add
adc
js
or
ret
mov
in
ds
sbb
bound
je
mov
divl
adc
adc
dec
cmp
nop
mov
imul
in
cld
xchg
into
cmp
pop
mov
sub
je
xchg
popa
nop
xor
add
call
je
xor
sub
sti
dec
fisubrs
xorb
scas
xchg
mov
mov
add
and
js
add
dec
out
or
sub
jo
cmp
sar
shrb
clc
cli
add
mov
and
inc
push
and
adc
lods
sti
cltd
mov
jno
push
out
fs
or
pop
icebp
aaa
lock
leave
sti
jge
fdivs
jo
jns
add
xchg
icebp
scas
psubw
bound
test
in
mov
out
shll
push
insl
mov
inc
push
fcoms
outsb
add
push
popf
lods
xor
lahf
mov
mov
shll
int
inc
add
mov
cmp
jo
pop
es
push
or
sti
or
insb
scas
xchg
mov
loopne
or
add
pusha
or
sbb
jb
gs
pop
mov
rcrl
add
or
adc
pop
push
rorb
adc
call
adc
add
add
andl
pusha
add
xor
inc
ljmp
das
cli
loope
jne
or
int
inc
lret
sbb
outsb
or
out
jg
orl
dec
or
fsubrl
add
cmp
shr
and
pop
adc
loop
int3
test
movsb
in
add
push
or
xor
adc
push
fiadds
addr16
dec
add
rorl
shlb
hlt
int3
orl
jp
sbb
test
fcmovnu
out
push
cmp
int
mov
xchg
fimull
in
imul
inc
add
iret
shl
sub
ret
sub
rcl
roll
outsl
scas
call
adc
adc
div
sub
and
inc
fmuls
xor
pushf
mov
test
andb
loope
add
jg
and
das
jl
xchg
and
addr16
pop
andb
push
sub
addb
add
xor
test
sub
jle
cs
push
sbb
sub
shl
hlt
enter
stos
add
push
add
and
add
lock
inc
cld
add
int3
cmp
in
pop
xchg
ja
jnp
mov
sbb
lock
mov
test
xchg
sbb
outsb
sbb
scas
xchg
xor
cmp
hlt
arpl
adc
jo
fdivrs
stos
shll
mov
and
adc
push
xchg
xor
lds
adc
enter
ljmp
mov
mov
mov
sti
dec
mov
add
nop
jns
movsl
push
shlb
add
push
add
stc
imul
mov
add
inc
mov
outsl
stos
jnp
fisttps
cli
jg
aaa
shll
mov
lock
or
sub
gs
xlat
lcall
mov
cmp
shlb
and
push
in
cmp
push
adc
test
mov
mov
mov
push
filds
add
pop
jno
and
lret
pop
mov
mov
mov
call
xchg
enter
iret
xor
pop
enter
loopne
jl
xor
scas
and
add
cmp
xor
adcl
add
out
push
jmp
mov
leave
mov
test
sti
in
mov
xor
lods
add
testb
cmpsl
dec
loop
add
dec
cmp
test
or
pop
sbb
ret
push
mov
test
push
and
cltd
and
xchg
imul
jns
or
xchg
addb
xadd
pop
push
and
aaa
or
orb
lock
jo
cmp
add
dec
mull
sahf
loop
or
sbb
xor
cld
add
and
std
cmp
xlat
lds
rcrl
mov
adc
xor
sbb
add
in
andb
bound
cmp
add
pop
push
mov
mov
inc
je
test
in
sub
lds
pusha
mov
cmp
add
int
insb
adc
leave
cld
leave
fmull
ja
xchg
adc
fnstcw
pop
xchg
and
inc
rcrb
ret
cltd
data16
paddd
out
inc
mov
je
orb
fcomp
jge
mov
out
and
add
mov
xor
sbb
cwtl
dec
pop
cmp
sti
movsb
jmp
les
iret
inc
pop
mov
out
lret
sti
xchg
push
inc
inc
mov
pop
mov
sub
xchg
repnz
fists
cli
xchg
iret
dec
mov
inc
add
addr16
imul
mov
sti
outsb
leave
pop
push
repnz
in
sbbb
push
xor
aas
add
adc
sbb
push
sti
ret
mov
sbb
jl
xchg
add
cmp
popw
mov
mov
rcr
les
stos
add
push
sub
or
inc
test
cmp
dec
mov
sbb
cmpb
roll
push
mov
xchg
out
shlb
or
out
dec
adc
bnd
fld
rorb
stc
or
mov
push
subl
pop
dec
test
pop
inc
add
fiadds
sub
shr
sbb
jno
pop
je
arpl
test
fcoml
xchg
sub
in
jl
mov
ljmp
push
add
jl
lea
ds
clc
adc
or
stos
aad
shr
das
test
xor
add
insl
mov
pushf
cmp
xor
add
or
aam
xchg
or
addr16
inc
mov
xchg
adc
out
push
sbb
cmp
mov
shll
xor
adc
xchg
into
push
gs
add
mov
movsb
adc
in
test
add
stc
loopne
mov
cmp
xchg
mov
or
rolb
test
mov
sahf
shrl
sbb
mov
mov
sbb
add
jecxz
int
sar
xchg
test
dec
fldenv
daa
dec
push
push
mov
xor
mov
arpl
outsl
mov
loopne
test
jmp
aad
sub
add
fistpll
cmp
mov
sub
andb
add
pop
aas
idiv
push
push
adc
pop
test
add
cmp
call
ret
les
cltd
sub
adc
addb
pop
mov
loope
aam
mov
mov
push
fadds
pop
cltd
add
lods
iret
pop
xor
and
jle
out
pop
dec
adc
sub
mov
je
cmp
cmp
jne
mov
dec
sub
out
popa
int
push
in
sub
mov
stc
mov
imul
bound
imul
int3
cltd
not
mov
inc
dec
pop
je
add
xchg
xchg
aam
adc
push
inc
lock
push
mov
inc
add
mov
mov
add
test
sbb
imul
adc
add
and
xchg
inc
sbb
call
adc
mov
stc
filds
jecxz
push
call
xor
adc
mov
push
scas
std
jo
add
dec
or
mov
xor
jecxz
pusha
mov
xchg
sbb
and
and
cld
sti
testb
pop
xchg
movl
inc
or
stc
call
lahf
and
pop
std
add
jle
cmpl
push
cmp
sub
int3
and
dec
add
add
scas
out
and
lds
shlb
jne
inc
cmp
int
aam
add
sbb
test
jle
shrl
test
mov
dec
adc
lcall
and
iret
ds
stos
xor
loopne
add
les
xlat
cmp
mov
add
add
test
sub
je
shlb
sub
gs
pop
fldl
fwait
lahf
mov
ds
add
cmp
aas
je
test
addb
pop
rcll
and
ljmp
lds
jl
rcll
test
into
stc
add
jns
loopw
rcrb
lea
sbb
es
sbb
pop
loopne
jmp
xor
gs
xchg
add
std
insb
icebp
add
push
add
es
and
add
daa
xchg
jae
dec
push
add
mov
je
lret
mov
ss
les
inc
cmp
lret
push
sti
or
inc
adc
je
mov
jge
jb
lahf
or
ficoms
dec
ss
or
les
inc
push
xchg
push
inc
pusha
adc
or
enter
in
and
xorb
orl
test
aam
lock
out
cmp
nop
aaa
or
add
sarb
or
sub
pop
mov
mov
xchg
loopne
es
lret
pusha
adc
int3
cltd
xchg
subb
movsb
outsb
xlat
sbb
sbb
lock
loopne
and
and
test
mov
nop
sbb
pop
rol
jns
pop
inc
pop
rorb
pop
jae
or
neg
lods
cmc
sbb
js
stc
mov
jbe
mov
inc
push
cmp
cmp
leave
adc
inc
sub
addr16
xor
adc
mov
push
or
mov
dec
sbb
insl
ss
cmp
fs
push
mov
add
sub
adcb
arpl
imul
cmpsb
test
xor
inc
in
cmp
xorb
jne
sbb
xchg
shlb
scas
test
push
aas
dec
or
sub
mov
addl
mov
xor
cmp
call
lea
cmpsb
lcall
pop
jo
add
dec
sub
les
lods
pusha
leave
call
das
pop
mov
mov
mov
inc
mov
pop
dec
adc
push
mov
cmp
pop
data16
std
jmp
repz
and
mov
pusha
mov
sbb
pinsrw
aaa
clc
loope
jge
addr16
or
loope
decl
mov
and
push
add
or
loopne
stc
add
xor
rorl
xchg
jl
popf
add
daa
inc
push
cwtl
jp
adc
inc
sub
add
mov
into
mov
sahf
inc
scas
call
or
or
add
cmpsl
jo
push
into
cmp
sub
add
push
mov
das
xchg
add
xor
fimull
stos
mov
push
in
out
dec
inc
xchg
adc
insb
mov
inc
shlb
cmp
cltd
addr16
and
xor
sbb
sbb
imul
fildll
pushf
jp
in
cmpsb
pop
dec
pop
mov
cmp
aas
sub
or
sti
lcall
mov
insb
rclb
or
les
sbb
or
and
and
cmp
imul
shll
jne
cmpsl
je
cmp
mov
int
ret
adc
cmc
mov
pop
jo
stos
lods
push
add
mov
cmc
and
and
push
sbbb
pop
pop
adc
repnz
and
or
enter
cld
test
pushf
add
iret
dec
cmp
mov
push
jo
and
nop
adc
fimull
xchg
js
pop
adc
dec
push
add
sbb
pop
cmc
stc
fadd
flds
xor
jl
and
adc
jne
xor
jb
mov
sub
gs
dec
cwtl
fsubs
loop
cmp
pop
popa
add
mov
in
je
enter
addr16
cmp
sbb
into
and
or
popf
addb
jge
add
jbe
jmp
hlt
push
sub
jg
add
pop
cli
jns
push
sarb
cmp
adc
or
in
jecxz
repnz
and
jmp
pop
or
sub
mov
inc
cmc
mov
xchg
sbb
aaa
fsubs
cwtl
in
adcb
mov
enter
mov
mov
stos
test
fisubrs
jno
in
sbb
lods
movsb
add
mull
daa
aad
add
aas
rcr
cmp
jp
mov
push
out
mov
jnp
rcrb
xor
adc
addr16
into
stos
test
add
sti
jle
inc
shrl
mov
or
pop
lds
or
cmc
mov
push
dec
dec
pop
adc
jno
lock
xchg
pushf
and
ror
add
or
push
lods
push
cmp
and
or
sub
cmpl
add
or
mov
mov
call
add
mov
in
outsb
fdivs
dec
nop
mov
jnp
sbb
pop
bound
in
mov
aaa
jl
inc
fsts
mov
mov
adc
adc
pop
inc
cmp
xor
adc
in
popf
pop
int3
pop
pushf
add
adc
mov
je
add
popf
mov
pop
pusha
sub
add
cli
sub
mov
divb
inc
mov
inc
hlt
dec
add
fsubrs
add
sub
sbb
or
jl
je
xchg
je
mov
pop
jne
push
and
lret
mov
aam
imul
push
xor
adc
mov
ljmp
pop
push
mov
xchg
nop
sub
js
xchg
sbb
jge
imull
inc
mov
xor
mov
cltd
imul
clc
inc
iret
mov
xchg
es
jbe
cmc
ret
sti
jnp
fcoml
mov
jo
jl
add
push
scas
add
test
mov
mov
add
mov
inc
cld
xchg
icebp
adc
loopne
xor
and
sbb
push
pop
mov
cmp
cmp
and
jns
mulb
repz
pop
loopne
ret
out
pop
pop
and
cld
pop
xor
inc
xlat
sarb
push
adc
or
jbe
outsl
add
sar
push
xchg
inc
and
test
inc
lahf
and
xchg
xor
jo
jne
dec
xor
sti
mov
or
cmp
aaa
and
cmpsl
cwtl
push
sub
fdiv
insb
cmc
add
in
ds
add
sarl
and
je
xchg
loopne
xchg
jmp
push
jl
mov
lods
cmp
outsl
adcb
push
adc
test
mov
decb
cmp
js
adc
and
fnstenv
loope
mov
add
pop
xor
dec
sub
shlb
cwtl
add
jo
loop
out
in
add
vcmpps
add
xor
xor
add
xor
cmp
dec
adc
jl
add
es
rolb
nop
jmp
pop
cmp
shlb
and
add
adc
das
jbe
rcl
aad
pop
or
sti
inc
mov
dec
add
xchg
ds
sub
mov
pop
enter
insb
rorb
sti
push
ss
push
bound
mov
aaa
daa
or
push
pushf
gs
in
or
cli
add
push
js
add
and
aam
or
test
rcll
push
add
inc
imul
sub
repz
push
mov
loopne
jl
push
dec
test
mov
addb
sbb
pop
mov
call
ljmp
addr16
xchg
mov
leave
and
aas
or
jl
adcl
cmp
xchg
daa
nop
cmp
xchg
lods
add
lcall
into
int3
clc
jno
movsl
or
adcb
mov
push
inc
dec
cmp
pop
movsb
add
je
int3
lock
xchg
clc
jle
imulb
aam
cmpb
pusha
cmp
add
jo
aas
das
or
clc
sbb
orl
rorb
iret
mov
pop
out
xlat
lds
push
add
add
in
xchg
cwtl
movsb
aaa
add
inc
cmp
add
in
adc
adc
sti
scas
and
in
or
addr16
or
and
sbb
jl
das
shrb
dec
jl
movsl
add
add
cmpsl
or
add
xor
dec
pop
pop
movsb
les
out
mov
icebp
jno
pop
push
pushf
add
pop
push
fmull
sarb
aad
and
xchg
or
cmp
sub
fs
mov
sub
or
lret
nop
das
push
adc
push
and
sti
in
inc
or
add
pushf
inc
ss
sub
xchg
or
pushf
lcall
je
lret
loopne
adc
rcrb
enter
add
fnstenv
int3
dec
mov
cmp
repnz
insl
sti
out
cmp
shrb
ret
and
lock
push
lea
dec
je
mov
or
sbbb
jle
shr
data16
orb
ljmp
cli
and
ret
popa
jae
add
cmp
call
lock
adc
stc
xchg
xchg
inc
or
sub
mov
or
shlb
shl
mull
sbb
add
xor
dec
add
mov
xor
and
add
loopw
outsl
inc
or
xor
pop
jbe
add
fsubrl
push
add
add
mov
jecxz
or
fs
add
jne
jb
jae
add
push
and
stc
jnp
jecxz
gs
inc
scas
xchg
add
sbbl
add
cld
repz
mov
rcll
movsb
cmp
xchg
sub
and
adc
stos
mov
clc
pop
mov
addr16
out
adc
or
pop
mov
cld
adc
xor
test
loop
or
nop
push
enter
or
or
xchg
add
mov
cmpsb
add
pop
cld
and
pop
mov
dec
push
pusha
sub
shlb
sarb
out
push
or
in
or
sti
stos
push
mov
mov
mov
dec
cmp
imul
xchg
or
out
lcall
andb
bound
scas
call
test
dec
lret
mov
loope
int
test
imul
mov
jbe
sbb
jl
pop
cmp
fmull
add
mov
jp
scas
cwtl
adc
inc
push
dec
int3
add
add
addr16
adc
jle
add
dec
inc
test
ds
or
add
pop
aam
lods
inc
sub
leave
out
aam
sub
gs
mov
push
and
pop
lea
jl
outsb
push
push
aam
sti
mov
jo
cmp
inc
nop
push
loop
hlt
test
stos
andb
rcrl
add
push
or
fsubrs
add
imul
mov
icebp
mov
div
add
cltd
push
or
shll
lock
push
pushw
sarl
sbb
add
pop
sbb
cmc
add
xor
or
push
inc
stos
test
sub
je,pn
lods
pop
ret
push
mov
fldenv
das
mov
add
push
and
sub
nop
or
pushf
lds
je
or
mov
fsubrl
out
stc
mov
cs
mov
mov
fstl
mov
sahf
cmp
mov
xor
sbb
rorb
cli
jge
sbb
shl
cmp
pop
pop
jl
cmp
mov
dec
int
mulb
data16
sub
push
movsl
rcrb
sbb
cmp
insl
adc
mov
sbb
loope
dec
mov
add
sbb
inc
dec
push
mov
inc
test
mov
jb
push
mov
das
daa
xor
adc
add
xor
jae
inc
data16
scas
add
mov
stc
xchg
xor
rcr
out
sbb
mov
mov
je
add
adc
ds
cmp
xor
aaa
popa
dec
xor
mov
test
outsb
or
int3
cmp
stos
cmp
add
mov
mov
sti
xor
aaa
int
xor
mov
andb
mov
cwtl
pop
and
add
xor
push
sti
lahf
push
not
je
in
xor
cmp
sbb
xchg
icebp
inc
push
push
mov
push
sbb
pop
mov
xchg
adc
mov
dec
and
call
in
mov
jo
fs
cmp
cwtl
nop
inc
aam
js
push
aad
lret
inc
or
and
or
and
dec
add
sti
aaa
jne
cwtl
call
mov
adc
clc
push
test
popf
test
sub
add
cmpl
add
ja
cli
fidivs
cmp
call
or
xor
jnp
sub
pusha
jmp
enter
into
sub
test
loop
pop
xchg
xor
xchg
dec
sbb
test
sub
xor
bound
jg
jae
cwtl
gs
and
out
leave
test
pop
mov
inc
push
sbb
mov
loope
es
add
mov
clc
cli
out
add
fcmovnu
jle
xchg
inc
or
cmp
rorb
add
data16
inc
dec
mov
cli
sbb
push
dec
xor
test
mul
xor
sbb
js
js
nop
into
xor
mov
dec
addr16
and
jecxz
mov
insb
ret
push
pop
inc
mov
pop
and
adc
push
pop
mov
pop
push
push
movsb
push
xor
pop
mov
cwtl
test
mov
bnd
sub
sahf
jge
rcrb
add
add
or
cmp
xchg
or
xor
add
shll
jnp
hlt
and
rol
shrb
stos
test
add
pop
repnz
out
sti
pop
roll
add
loope
cmp
xor
xchg
mov
mov
mov
dec
add
mov
mov
add
jae
pop
add
neg
test
xor
pop
ret
cwtl
ss
mov
rolb
in
imul
ljmp
aas
nop
mov
adc
inc
push
jo
lock
mov
out
rorl
or
mov
dec
mov
push
adc
inc
inc
mov
mov
rclb
pop
lock
mov
je
add
les
pop
pop
enter
rolb
sarb
shlb
lock
pushf
verw
clc
pop
push
mov
arpl
jle
sbb
inc
call
mov
push
pop
addr16
mov
mov
cmp
mov
cs
push
adc
fs
add
jne
add
pusha
pop
sti
mov
dec
add
mov
jbe
push
xor
push
in
popf
mov
stc
pop
push
mov
mov
sub
lahf
test
jmp
push
notl
pop
mov
outsb
add
loopne
jg
out
mov
cmp
cli
inc
mov
subl
adc
push
icebp
aaa
add
push
and
in
pop
pop
mov
and
mov
aam
cmp
pop
pop
shl
pop
add
addr16
mov
add
xor
xor
popa
jnp
pop
mov
or
jmp
add
xor
or
or
push
jmp
aas
mov
test
pop
test
push
xor
mov
enter
push
lds
jp
shr
roll
or
or
lock
add
mov
mov
repnz
mov
add
xor
sub
push
lods
push
jmp
in
out
sbb
leave
sub
pop
cld
dec
push
push
mov
and
jecxz
inc
mov
push
movsl
clc
notl
mov
pop
push
jmp
shl
pushf
in
xlat
fcomps
ja
adc
pusha
sbb
mov
cmpsb
int
call
pop
push
or
or
rolb
xor
pop
sub
ds
add
xor
mov
xchg
sub
push
sti
imul
add
test
or
mov
mov
sbb
pop
dec
sub
push
sbb
xorb
push
add
mov
and
sbb
lds
jmp
add
dec
mov
sbb
xchg
aaa
pop
add
sub
scas
jmp
push
mov
fdiv
cwtl
jmp
test
add
test
pop
cmp
sbb
decl
repnz
jg
movsbl
sahf
and
xor
inc
push
adc
dec
pusha
fstpt
imul
sbb
push
ud1
cs
pop
shl
pusha
dec
push
xor
movsl
xor
dec
rclb
push
xor
iret
popf
in
sub
push
outsl
testb
push
mov
testb
sbb
jmp
mov
add
and
xchg
pcmpgtd
addl
xchg
or
jg
add
pusha
adc
add
dec
shl
rclb
test
or
cli
repz
pop
int3
cmp
int
or
add
fildl
clc
jmp
push
pop
jp
xor
fmuls
jmp
adc
add
mov
dec
cmp
or
pop
imul
out
es
repz
add
add
jp
pop
add
add
pop
push
and
mov
or
pop
push
and
lret
pop
push
jmp
xor
pop
add
pop
push
pushl
dec
lods
mov
inc
filds
pop
lret
pop
or
incb
mov
outsl
mov
stc
bound
push
addb
push
adc
adc
inc
push
int
sub
cs
aad
mov
jl
pop
lods
add
xchg
jmp
push
mov
or
pop
xor
mov
sub
add
pop
imul
or
sbb
push
inc
dec
mov
sbb
push
xchg
or
and
adc
add
pop
cs
icebp
jecxz
mov
iret
mov
sbbb
jg
aad
mov
pop
push
jae
loope
push
jmp
xchg
sbb
test
cmp
lock
imul
and
push
push
xor
cmp
int3
inc
test
aaa
and
insb
or
adc
in
xchg
xchg
out
shlb
inc
inc
int3
push
mul
push
dec
pushf
ret
ret
pop
and
cld
sub
add
dec
in
sbb
std
jmp
outsb
imul
scas
or
mov
jno
jecxz
xor
repnz
push
add
pop
in
ja
push
in
jmp
not
inc
fldl
or
pop
adcl
jmp
push
pusha
in
cmpsb
fisubl
pop
push
pop
and
mov
sbb
add
subl
fists
jl
scas
xor
test
call
push
jle
xchg
push
adc
pop
add
or
add
push
jne
scas
out
pop
jmp
bound
push
das
pop
sub
inc
cmp
pop
push
and
push
mov
pop
or
incl
push
push
mov
xor
push
cmp
test
arpl
enter
dec
into
pusha
enter
das
sub
cs
ret
add
shl
cmp
call
fstps
cmp
sub
jne
add
adc
clc
sub
xchg
push
imul
mov
inc
je
pushl
jmp
add
or
es
imul
xor
inc
ss
push
cs
mov
mov
movsb
jmp
subl
mov
movzbl
push
xchg
mov
inc
ds
dec
and
rclb
not
sbb
in
push
adc
or
ss
sbb
orl
pop
scas
xchg
add
push
jmp
add
jg
jb
loope
popa
std
push
in
rorl
dec
sub
mov
push
push
int
callw
and
jl
mov
not
mov
mov
cmp
fidivrl
inc
aam
js
pop
pop
pop
push
mov
aad
ror
pop
dec
lds
addr16
sbb
add
mov
mov
pusha
outsb
mov
xor
cmc
dec
lret
into
jmp
sti
fimuls
shll
out
cli
xor
add
shll
adc
push
or
pop
cwtl
and
les
pop
mov
rorb
pop
loope
test
add
xchg
or
adc
leave
push
orb
sub
add
xor
es
mov
inc
mov
mov
inc
cmpsl
subb
jae
daa
fcomps
dec
jmp
pop
pop
inc
inc
adcl
lahf
cmpsl
xchg
sahf
and
add
add
mov
ret
inc
pop
bound
or
fidivrl
mov
leave
fimull
out
add
pop
push
dec
addr16
mov
or
mov
push
and
add
sbb
int
xlat
push
popa
xor
test
enter
adc
or
mov
sbb
lds
sub
movswl
push
movsb
xor
fwait
adc
xchg
sub
add
cwtl
data16
and
movsb
and
pop
shrb
iret
orb
xor
xor
mov
jp
xadd
cmp
adc
add
jne
sub
pop
inc
or
mov
mov
inc
add
xor
add
movsb
or
push
test
or
xlat
sahf
imul
dec
ljmp
pop
pop
js
push
leave
jmp
inc
adc
pop
jmp
scas
xchg
movsb
add
imul
pusha
insl
test
dec
sub
gs
out
orl
daa
pop
shll
sahf
cltd
iret
movq
not
push
sub
ret
jns
mov
mov
and
cmc
xor
scas
pop
push
push
push
daa
mov
cmp
aad
addr16
xor
add
in
aam
or
lock
xor
lds
and
mov
sbb
add
cmp
lahf
jmp
lret
pop
mov
adc
in
repnz
pop
mov
pusha
jb
mov
pop
jmp
pop
shr
sbb
jmp
ds
loopne
clc
sbb
dec
mov
ds
loope
das
roll
sbb
es
mov
dec
sub
dec
movsl
imul
or
ss
out
sub
adc
cld
in
outsl
xor
lds
clc
push
mov
dec
mov
nop
lcall
xor
xchg
in
inc
push
or
pop
xchg
add
pop
or
sub
jmp
dec
push
lods
xchg
dec
orb
in
cmp
sbb
pop
xor
lret
push
mov
les
cltd
inc
adc
or
and
pop
add
sub
add
add
sbb
push
fs
dec
pop
inc
nop
cmpsl
les
mov
inc
and
imul
cmpsl
pop
push
cmc
inc
jmp
sub
pop
shufps
outsl
or
mov
lcall
repz
inc
out
stos
int
shl
adc
jo
enter
sbb
sbb
pop
push
inc
je
mov
pop
push
adc
jae
into
inc
dec
mov
or
mov
pop
jl
inc
or
sub
xor
jno
test
inc
es
dec
adc
push
mov
dec
and
jmp
or
movsl
in
mov
nop
mov
jmp
adc
jo
or
dec
and
mov
adc
pop
jp
mov
add
repz
mov
pop
sub
cmp
adc
jmp
nop
add
push
or
push
scas
jmp
mov
cmp
or
ret
dec
imull
cld
pop
mov
fwait
sti
test
pop
pop
pop
mull
push
xor
push
add
push
mov
lock
push
push
or
cmp
addl
and
ret
out
je
jo
push
push
pop
cltd
aad
es
xchg
inc
pop
push
inc
push
pop
jmp
ljmp
adc
outsl
arpl
jge
add
cmp
mov
add
push
add
test
push
movsb
loop
fcomps
test
lret
add
in
add
or
mov
cmpsl
lret
xchg
xor
fs
nop
dec
inc
pop
arpl
inc
sahf
pop
pop
and
movsl
mov
sbb
in
neg
sub
pusha
push
cltd
arpl
test
pop
sbb
cld
pop
jecxz
ljmp
push
sub
mov
jg
or
adc
add
add
ficomps
sub
aaa
cmpsb
sbb
pop
or
dec
fadds
xchg
add
sub
dec
mov
sub
push
and
lret
push
push
jmp
and
mov
push
push
rolb
not
xchg
add
mov
sub
cmp
or
jmp
stos
sbb
sub
lods
cmp
cmp
mov
pop
adc
mov
hlt
addr16
aam
xlat
cwtl
xor
aaa
adc
xchg
outsb
jg
and
jmp
push
push
ret
pop
and
cmp
fistps
pop
add
aas
cmp
sub
rcll
push
xor
xor
or
sbb
and
test
jge
into
xchg
loop
stos
xlat
adc
sub
and
xchg
lcall
cmpsl
push
loopne
jbe
push
lods
or
into
dec
and
loopne
in
jns
pop
jbe
add
xchg
mov
test
adc
pop
lret
or
fcoml
fwait
clc
scas
vmovapd
push
pop
inc
add
jmp
insb
jmp
ret
jg
push
jo
movb
and
dec
adc
mov
in
add
ret
mov
movb
dec
sbb
or
push
mov
inc
in
sub
add
shlb
sbb
pop
into
jg
sub
insb
xchg
push
or
jns
fstps
jmp
jbe
lods
add
xor
fcmovb
ljmp
adc
lock
push
pop
in
xchg
sbb
pop
shr
mov
bound
push
dec
dec
fisttpl
xchg
add
imulb
addb
aas
mov
dec
cwtl
stos
mov
pop
and
pop
shlb
pop
or
dec
ret
lret
roll
sub
mov
and
cmp
add
and
pop
insl
hlt
pop
pusha
lods
inc
out
lcall
and
or
lds
mov
jp
int3
xchg
call
int3
lea
push
pop
fimuls
jne
inc
xchg
push
mov
cld
xchg
fwait
enter
dec
es
rorb
lea
ret
mov
and
adc
add
jo
push
push
clc
xor
jmp
jnp
das
and
pop
lea
inc
lea
rcrb
add
inc
push
lret
repnz
jmp
dec
rcpps
out
idiv
inc
mov
lods
int
sti
xchg
jns
fs
add
in
shl
neg
add
inc
add
pop
sbbl
lods
inc
push
adc
xchg
mov
mov
xchg
add
push
dec
cmp
lock
mov
jno
jmp
or
or
and
cli
test
inc
pop
xor
and
mov
push
or
loope
cmp
dec
es
js
lods
adc
add
mov
cmp
pop
sub
add
or
or
pop
xor
repz
mov
in
pop
inc
add
pusha
fsubl
add
inc
push
dec
pop
test
add
dec
cmp
stc
popa
xor
jmp
pop
push
pop
int3
sarb
jmp
xorb
xlat
lret
push
pop
push
stos
fsts
cli
pop
or
pop
push
mov
pop
xor
jmp
and
mov
sbb
cs
mov
dec
aas
and
add
int
push
or
sub
adc
pop
nop
add
adc
adc
xor
sbb
in
pop
xchg
cwtl
pop
xchg
nop
mov
adc
mov
cmp
cld
pop
cmp
iret
sbb
sahf
das
push
mov
inc
or
push
pop
mov
mov
jae
dec
cld
mov
ficoml
out
add
add
push
test
xchg
addr16
dec
or
std
fadds
xor
cmp
push
xchg
xor
or
or
and
adc
jmp
push
sarl
cmp
push
cwtl
add
rcll
sqrtps
test
sbb
add
adc
push
add
sbb
add
jae
sub
cmp
dec
xor
out
pop
push
adc
insl
add
mov
jmp
jmp
fs
xor
add
adc
sbb
rcrb
mov
xor
sti
jmp
pop
xor
in
in
outsb
pop
ljmp
daa
in
in
fcom
and
fsub
push
and
jmp
neg
xchg
in
in
clc
push
push
cmp
pop
lock
out
pop
xor
xchg
fisubrs
mov
sbb
push
jnp
repnz
push
xor
or
mov
add
and
sbb
hlt
xchg
add
popf
cwtl
mov
ret
into
inc
aad
clc
test
fisttps
sbb
sub
aaa
sbb
or
dec
push
es
flds
imul
shr
mov
adc
lret
jg
jb
lret
sahf
push
mov
xchg
jmp
xor
jmp
push
mov
or
sti
in
push
pop
pop
leave
xrelease
mov
pop
add
pop
movzbl
sub
add
push
or
and
or
rcll
repnz
scas
out
push
rcrb
popa
movl
dec
add
cmp
clc
mov
mov
shlb
rclb
add
lcall
sbbb
inc
lock
inc
or
cwtl
sub
adc
insb
push
add
dec
xchg
jo
sub
sbb
dec
cmp
pop
ret
pop
mov
ds
jbe
mov
jmp
adc
movsb
test
stc
pop
mov
sub
and
xchg
loop
std
rcll
iret
mov
in
push
imul
adc
cmp
dec
add
cmc
xor
pop
xor
nop
dec
dec
xor
icebp
insb
lea
shl
loopne
inc
adc
sbb
and
add
popa
jmp
lds
and
cld
insb
les
pop
pop
push
je
cltd
pop
dec
imul
jmp
hlt
int
xchg
mov
jge
jns
push
pop
adc
jmp
popa
sbb
sbbl
sbb
sahf
pop
and
adc
or
xor
inc
fwait
pop
push
cs
aam
add
jmp
pop
test
pop
xor
push
jmp
sahf
out
or
xor
xchg
jmp
fists
push
and
icebp
loopne
fcoms
dec
adc
or
shl
sub
imul
cmpsb
pop
lds
jmp
adc
mov
mov
jbe
ret
mov
push
mov
mov
in
push
addl
aad
frstor
rclb
je
dec
inc
sub
cs
or
add
cmp
sub
cmp
pop
mov
cs
cmp
std
or
push
or
sbb
push
add
add
pop
xchg
mov
sahf
add
push
mov
inc
jecxz
jecxz
sbb
push
dec
dec
bound
in
pop
pop
frstor
out
fstpl
xchg
pop
ret
adcb
jae
inc
dec
imul
ja
lret
and
in
sbb
sub
dec
or
pop
mov
imul
mov
jmp
ret
cmp
xchg
stos
lods
pusha
jmp
das
xor
repnz
inc
pop
sub
adc
mov
test
sbb
shr
dec
lods
flds
jecxz
sub
mov
cmp
xor
pop
push
add
xchg
xchg
mov
and
fstps
sbbb
fistpll
repz
rorb
add
xchg
rcrl
add
call
lock
xorl
sub
dec
pop
es
and
pop
sub
mov
fdivs
inc
cmp
inc
int3
mov
mov
cmp
loopne
dec
jmp
jb
push
jno
xchg
mov
les
jp
sub
jns
xchg
and
repnz
jne
add
push
push
jmp
xorb
sti
mov
jbe
sbb
adc
push
jae
add
test
out
pop
and
mov
aas
add
sub
jmp
dec
and
sub
clc
repz
mov
adc
dec
pop
enter
mov
dec
xchg
les
push
neg
shl
mov
xor
or
pop
inc
outsl
and
push
int3
bnd
movsb
sbb
int
out
shl
add
dec
outsl
scas
add
test
and
inc
add
pop
imul
out
pop
in
cs
mov
mov
cmp
icebp
mov
fs
sub
dec
mov
mov
insl
in
dec
mov
xchg
lcall
orl
mov
mov
pop
shr
push
outsl
mov
ret
add
fisubs
adc
xchg
pop
xchg
adc
mov
loopne
bound
pop
add
jo
add
mov
cmp
fists
or
dec
ljmp
add
add
mov
push
test
cmp
xchg
mov
cld
movntq
xchg
add
push
xchg
add
fcoms
add
pop
sarb
cs
xor
push
mov
lods
inc
pop
inc
ret
bound
mov
sub
jp
xchg
lock
fidivrl
and
nop
push
push
mov
not
addl
jge
pop
fs
roll
push
pop
pusha
pop
jmp
add
dec
push
jl
push
testl
mov
cmp
aad
pop
mov
pusha
pop
sub
add
cmpsl
xor
inc
pop
ds
faddl
shlb
xor
adc
mov
jl
xchg
adc
sti
stc
ljmp
test
paddd
neg
out
pop
push
xor
cmpsl
cmp
rcrl
or
cwtl
aad
repnz
mov
fimull
add
inc
int
pop
jbe
pop
shr
in
inc
or
bswap
sbb
outsb
loopne
add
xor
dec
or
daa
jge
pushf
test
cmovp
cmpsl
insb
stos
sbb
clc
pop
push
pusha
popf
push
add
dec
sub
repnz
out
xor
shr
xchg
xchg
or
cmp
or
je
imul
xchg
mov
mov
push
nop
leave
sub
jg
cmp
push
add
orb
push
orb
out
ret
add
pop
mov
push
jl
ljmp
jmp
push
adc
bound
push
or
jmp
xor
cmpsb
or
and
enter
dec
push
sbb
jl
and
fisttps
add
hlt
inc
add
add
pop
and
pop
test
pop
mov
inc
cmp
inc
or
inc
sahf
dec
repz
and
jp
add
push
inc
mov
jle
sub
xor
cmp
push
data16
cmpsl
add
cmc
or
pop
mov
ret
lods
mov
pushf
add
xor
sbb
ljmp
sub
push
fs
mov
jb
mov
xchg
xlat
sbb
repnz
jbe
adc
inc
push
es
pop
dec
mov
xor
es
or
mov
fisubrl
and
aas
jmp
lods
inc
xor
in
pop
cs
fimuls
dec
mov
test
xor
mov
push
mov
call
fnstenv
sbb
inc
or
adc
in
push
mov
dec
pushf
sub
jmp
jne
call
sub
sub
pop
roll
pushf
pop
pusha
dec
and
dec
xchg
mov
pop
or
cmp
push
push
inc
scas
sbb
add
pop
jmp
pop
xchg
cld
mov
cmp
pop
pop
push
xor
lods
mov
xchg
data16
push
and
jmp
dec
sarl
or
mov
pop
repnz
inc
leave
add
inc
mov
push
scas
or
cmp
scas
add
adc
lock
inc
add
adc
push
lock
scas
imul
mov
xchg
push
bound
aad
lock
push
xchg
and
jne
clc
pop
mov
add
and
cmp
pop
jne
xor
xor
push
daa
jmp
pop
frstor
js
xchg
sub
pop
subb
test
gs
cmpb
jb
inc
pop
add
dec
or
sub
adc
scas
repnz
pop
sub
mov
jae
aaa
adc
pop
ljmp
push
call
fucomip
aad
ficoms
mov
ljmp
repnz
and
sbb
xor
pushf
loope
mov
mov
outsb
mov
pop
loop
loop
shrb
and
mov
and
arpl
mov
div
ret
mov
andl
fucompp
mov
push
add
jmp
and
mov
inc
adc
pop
enter
mov
push
xchg
pop
or
adc
into
test
add
pop
inc
add
rorb
xchg
xor
lock
cmpl
sbb
lock
iret
popa
loopne
imul
pop
push
rcrb
outsl
jns
dec
ret
mov
cmp
nop
mov
les
pop
addb
xchg
cwtl
cmpl
add
repnz
adc
jmp
mov
adc
jae
sub
sub
jmp
xor
aaa
fimull
mov
inc
fnstenv
pop
daa
sbb
mov
xor
jl
daa
cld
and
ja
lock
sti
outsb
mov
inc
cmovno
push
mov
repnz
adc
mov
push
jmp
loopne
jb
stos
adc
dec
pop
pop
and
dec
bound
inc
adc
cwtl
push
pushf
add
add
xor
outsl
adc
push
sub
push
cmc
add
jne
mov
das
adc
loopne
mov
pop
xor
sub
push
mov
addr16
jmp
and
and
mov
xchg
push
or
add
sbb
sub
test
mov
jo
test
dec
ret
ds
and
or
pop
mov
xor
mov
lret
cmp
xor
loopne
rolb
dec
scas
adc
pop
adc
fldl
adc
mov
or
sub
pop
notb
mov
fcoml
mov
punpcklbw
jle
shll
jg
xorb
mov
lahf
cmpsb
xchg
push
aaa
and
xor
add
mov
lcall
aam
lods
mov
mov
and
jge
pop
cli
add
lods
xor
push
sub
lods
and
ret
xor
loope
repz
sbb
imul
ljmp
xorl
movsb
push
out
or
mov
and
sub
pop
dec
pop
mov
pop
mov
in
mov
outsb
xorl
call
mov
adc
mov
push
xchg
sahf
push
push
pusha
pop
jmp
push
push
adc
xchg
hlt
mov
push
test
orb
fsubp
or
jle
lods
stos
sahf
dec
add
sbb
pop
in
ljmp
jo
or
push
jbe
dec
pop
mov
adc
insb
sub
xchg
ljmp
cltd
ret
add
jecxz
jle
or
mov
inc
dec
popa
aad
pop
push
mov
inc
or
pusha
jle
fdivs
outsb
cs
test
jl
sbb
cmp
sbbb
sbb
mov
arpl
and
lret
pusha
fwait
pop
push
mov
in
push
aas
js
push
xchg
sub
incl
pop
sti
mov
inc
mov
les
push
data16
pop
push
xor
mov
addr16
mov
clc
pop
jno
dec
fdivp
dec
cmc
xor
push
loopne
push
or
pushf
mov
lea
and
rcr
popa
mov
cs
pop
sub
jae
xchg
cwtl
jecxz
xchg
pop
outsl
jo
mov
loopne
push
add
cmp
sub
mov
mov
pop
sub
push
stos
mov
adc
push
loopne
xor
nop
addr16
in
xchg
std
scas
lds
inc
stos
outsb
outsb
add
dec
sub
jg
orb
and
cmpsb
ficomps
push
add
int
xchg
dec
mov
push
andb
fdivs
mov
dec
addl
outsl
and
pop
popa
jle
mov
neg
std
daa
cs
dec
xchg
idivb
dec
ljmp
cwtl
lea
sbb
dec
push
cmp
lcall
cs
cmovno
pop
rclb
add
cli
lds
xchg
js
repz
add
js
xchg
dec
xor
bound
push
push
push
leave
scas
dec
or
mov
inc
jbe
bound
or
add
fs
mov
inc
mov
sbbl
push
sub
orb
xor
pop
push
add
lods
pminsw
mov
pushf
mov
sbb
jle
push
xor
and
xor
sub
clc
data16
data16
leave
es
clc
inc
and
and
in
push
mov
add
shl
rolb
xor
sbb
dec
xor
mov
ds
loop
pop
add
sub
pop
pop
mov
mov
pop
jno
add
inc
xor
sbb
insb
mov
add
in
pop
xor
xor
push
mov
or
shll
lds
mov
add
push
inc
fcmove
lcall
mov
and
jmp
sbbl
push
dec
test
pop
xlat
xor
fimuls
mov
sub
mov
adc
add
mov
jmp
mov
push
add
jl
adcl
sub
adc
scas
mov
add
add
orb
fldenv
inc
dec
test
mov
loopne
pop
in
dec
pop
out
adc
sub
pop
nop
pop
and
faddl
fmull
push
orb
xor
xlat
data16
rorb
adc
add
push
orl
pop
jmp
jmp
ss
xor
jbe
push
or
push
add
add
sub
push
add
inc
fs
es
sub
jmp
inc
add
inc
inc
or
fldenv
mov
dec
pushf
pop
add
and
divl
dec
lods
addr16
idiv
test
and
out
jl
repz
mov
movsl
jmp
xlat
xchg
inc
lahf
sub
sub
add
dec
sbb
push
sti
or
sbb
pop
cmp
das
xchg
mov
push
aaa
or
sub
jmp
xchg
fimull
cs
jl
daa
pavgb
adc
pop
das
ficoml
inc
xchg
xchg
insb
or
test
out
add
add
add
jmp
andb
mov
push
inc
inc
push
mov
pop
push
and
scas
xorb
pcmpgtb
enter
cmp
das
dec
and
xor
cmpsb
ret
loopne
shl
adcb
sub
cli
adc
pop
dec
int3
cs
les
mov
push
sub
lea
xchg
inc
lgs
xchg
push
sub
xchg
cmc
pushf
insb
int
lcall
add
xor
pop
and
pop
push
ret
lcall
pop
mov
xchg
xor
es
push
sub
jmp
sbb
pop
mov
outsl
sub
out
xor
adc
jecxz
inc
das
in
mov
testl
stos
ret
push
imull
sub
jmp
mov
pop
push
pop
sbb
rcl
lock
cmp
push
faddp
repz
jne
stc
mov
adcb
nop
ficoms
insl
test
fmulp
addr16
daa
inc
push
sbb
cli
inc
lods
pop
fptan
in
pop
sbb
outsb
test
push
mov
inc
icebp
pop
jge
sbb
fnstcw
jbe
daa
verw
loop
or
jmp
lock
or
mov
sub
mov
dec
cli
dec
inc
or
leave
or
cwtl
iret
lret
dec
pop
aaa
or
adc
sbb
jne
in
call
mov
enter
mov
mov
add
add
fldl
or
in
sub
fimuls
addb
cmc
jg
jb
mov
sbbb
sbb
aaa
push
addl
stc
sub
mov
loop
movsb
jmp
sub
sub
rcll
xchg
adc
jno
add
inc
push
push
inc
test
pop
push
movb
cmp
add
push
bndldx
nop
aas
add
aaa
add
mov
add
sbb
clc
push
das
ja
add
notl
dec
pop
pop
iret
pop
dec
lret
or
ret
xchg
jmp
inc
push
test
mov
mov
pusha
dec
idivb
fbstp
or
test
test
ss
mov
enter
push
imul
xor
and
adc
sahf
or
xchg
or
inc
sar
adc
and
push
loope
cmp
adc
adc
adc
rorl
popa
mov
or
add
js
xchg
mov
jg
jb
and
nop
and
stos
add
not
sub
and
cli
aas
xchg
and
adc
mov
cld
mov
shrl
mov
cmp
ret
sub
inc
sbb
push
mov
loop
pusha
mov
pushf
sub
ret
addr16
cld
push
or
daa
push
fidivl
adc
sbb
add
sub
fisubs
and
filds
data16
push
in
test
lret
aam
pop
in
out
cmp
push
sahf
cmc
push
sub
rclb
and
in
pop
mov
orb
scas
jmp
out
loop
jl
and
dec
mov
inc
cmp
jbe
and
aas
stc
in
xor
or
int
xor
mov
push
adc
movl
sub
mov
sbb
mov
dec
adc
push
push
out
cmp
and
xchg
sub
shll
push
or
das
mov
pop
jns
jo
push
dec
and
adcb
xlat
sub
dec
std
add
and
movb
jmp
movsb
adc
dec
push
sub
or
int
cli
lock
dec
loopne
popf
sarl
or
pushf
xchg
add
loopne
xor
add
mov
orb
jns
mov
neg
lods
adc
popa
xchg
push
js
cmpl
and
ds
pop
sbb
loop
mov
test
mov
aad
mov
push
inc
fsubs
aas
cmpsl
sti
leave
inc
pop
pushf
ret
lahf
cmp
pop
xor
push
pop
jmp
sbb
mov
outsb
fsubs
jno
and
pop
mov
xchg
xchg
sbb
add
or
xor
es
aad
inc
les
call
dec
loop
add
xchg
push
jl
sub
mov
jmp
negl
out
addl
cltd
dec
es
adc
les
pop
or
imul
pop
jle
add
out
lahf
call
mov
lods
popf
sbb
fldcw
and
dec
adc
mov
ja
xchg
popw
not
inc
shl
cmp
fiaddl
and
dec
adc
xchg
jmp
int
jno
aas
adc
lods
push
shll
sub
or
imulb
inc
pop
adc
roll
jae
repnz
sub
adcb
rorl
imul
test
sub
push
mov
je
pop
push
adc
mov
or
mov
add
inc
incb
lret
dec
dec
push
movsb
shl
je
xlat
add
jecxz
pop
cmp
insl
jns
fadds
dec
pop
cmp
es
decl
mov
sbb
aaa
pop
rcrl
push
dec
pop
sub
add
stc
add
loopne
int3
mov
in
xchg
es
mov
xchg
rorl
inc
cmp
xor
push
or
pop
mov
cmp
xor
xor
out
mov
adc
daa
jmp
mov
xor
inc
lock
jmp
pop
or
into
add
mov
inc
mov
cmpb
jmp
mov
sub
jg
andb
dec
jmp
cmpsl
into
add
cs
in
sub
insl
mov
in
aaa
add
push
mov
test
inc
mov
jmp
popf
popa
add
popf
ds
pop
push
lds
xchg
jmp
pop
sub
and
push
mov
lret
add
xor
mov
sbb
dec
mov
adcl
insb
dec
xor
mov
in
or
lock
and
dec
hlt
fisttps
xlat
inc
test
mov
pusha
or
ret
and
add
dec
shl
xor
test
dec
das
xchg
adc
and
xchg
inc
mov
iret
xchg
cmp
repnz
rcll
getsec
bound
imul
add
adc
popa
inc
xor
jp
or
xchg
and
cmc
ss
jle
sub
sub
ds
mov
movsb
or
sarl
jbe
mov
leave
cwtl
pop
sub
xchg
dec
pop
pushf
add
movsb
jo
in
movsb
or
jno
out
or
repz
cmp
popa
outsl
pop
repz
inc
orb
movsl
pusha
sub
pop
jmp
bound
adc
cli
out
stc
cld
rolb
xchg
push
push
cmp
add
movsb
lea
xchg
jmp
jmp
push
pop
xchg
adc
repz
jae
loopne
aaa
shrb
pop
jg
jmp
push
frstor
xchg
xchg
pop
pop
fdivrs
out
cmp
jb
or
push
sub
mov
cwtl
push
popf
stos
scas
pop
push
arpl
fldenv
cmp
push
xchg
add
cmp
bound
fldt
dec
out
xor
mov
cmp
dec
lret
ret
adc
pop
add
divb
jno
sub
pop
inc
add
xor
xchg
es
xor
mov
call
add
add
loopne
mov
and
iret
cmp
std
inc
shlb
push
mov
dec
xor
or
inc
and
ljmp
cmp
inc
adc
test
xor
imul
jnp
jb
movsl
inc
xor
jecxz
push
mov
loopne
in
push
add
sub
ds
push
sahf
mov
jnp
jmp
push
pop
push
es
or
call
fsub
push
sub
xchg
fiaddl
pop
mov
push
mov
ret
push
jge
nop
sbbl
pop
push
push
sbb
pusha
mov
mov
and
fcomps
and
aad
in
pop
xchg
lahf
lds
push
subb
jg
or
call
pop
cmp
add
rcrb
enter
sub
sbb
lret
or
cmc
sahf
jno
loopne
xchg
mov
sbb
nop
or
push
nop
jo
ss
inc
sub
daa
jmp
pop
jg
pop
mov
xor
xchg
or
adcb
add
jge
push
sbb
pop
shr
int3
in
mov
icebp
mov
cmp
lret
out
xor
xor
in
or
jmp
or
push
pushf
sub
enter
mov
or
sarb
add
push
jecxz
nop
aaa
lcall
ss
lahf
xchg
pop
push
push
ret
push
int
add
iret
and
push
cmp
pushf
arpl
aas
movsl
push
xchg
xor
repz
jb
add
sub
into
push
neg
jmp
or
push
and
adc
ss
dec
dec
push
call
push
mov
repz
ret
push
adc
dec
jp
add
cs
dec
add
cmc
or
adc
repnz
add
clc
popf
mov
jmp
lods
sbb
push
push
mov
mov
stos
add
addr16
mov
iret
shl
out
imul
jl
pop
stc
pop
mov
sub
add
test
adc
push
outsb
inc
or
sub
inc
or
sbb
scas
sub
xchg
or
fmulp
sahf
jb
sbbb
cs
sbb
ljmp
adc
movzbl
adc
xchg
sub
in
and
xchg
sub
cmp
inc
sub
sbb
or
add
loopne
loope
adc
jge,pn
pop
jmp
or
jns
pushf
mov
xor
scas
jno
rclb
push
push
sbb
dec
mov
xor
pop
xlat
or
mov
jmp
ljmp
subl
test
js
lahf
mov
js
pop
push
add
or
and
rorl
sbb
test
or
pop
add
add
inc
or
scas
push
push
jae
adc
psubsw
pop
mov
dec
je
sub
orl
lret
mov
shr
lea
pop
or
fs
inc
mov
xchg
inc
nop
test
lea
aam
add
cmc
mov
mov
dec
add
and
popf
insb
outsb
mov
sub
fsubr
jb
and
mov
mov
push
es
push
mov
pop
loope
inc
pop
sub
add
lret
jmp
or
jbe
sub
push
pop
adcb
mov
sbb
mov
and
xchg
or
mov
lea
dec
sub
jmp
scas
xor
sbb
adc
xchg
add
lcall
mov
add
sub
jle
mov
inc
pop
mov
aam
pop
jmp
test
lret
and
xchg
jg
mov
clc
pop
shrl
sbb
or
sar
pop
mov
add
xor
cmp
inc
push
pop
lcall
fs
flds
bound
sub
cmp
dec
or
out
adc
outsl
sbb
out
inc
xor
dec
jnp
pop
xchg
je
rcl
cmp
push
dec
fisubrs
test
jge
and
cwtl
mov
mov
add
out
test
into
rcr
cs
xor
lds
mov
or
pop
jbe
jmp
mov
clc
dec
push
push
bound
jmp
adc
mov
outsb
lret
dec
dec
jnp
add
pop
aas
fs
mov
add
inc
push
xlat
adcb
repz
jnp
je
and
rclb
or
jmp
dec
add
loope
enter
jnp
imul
push
vpmaddwd
pop
adc
and
pop
inc
mov
push
xorl
sub
mov
dec
pop
xchg
mov
movsl
jmp
fnstsw
ficoml
aas
fldcw
pop
pop
or
pop
sub
xor
call
cmp
inc
jg
mov
push
das
les
or
dec
ja
lods
or
mov
sub
or
call
mov
push
cmpsb
push
call
cmp
dec
lods
xchg
cld
xchg
jge
cli
imul
jle
inc
add
push
pop
or
insb
jbe
not
jns
xor
aaa
mov
push
push
fsub
dec
xchg
cmp
das
inc
add
fadd
and
cmp
xchg
pop
ret
jmp
adc
xchg
lahf
mov
or
mov
mulps
xchg
mov
mov
push
push
ficomps
shr
shr
push
or
lret
inc
movsl
cmp
sbb
or
into
add
ret
enter
pop
popf
push
sub
aam
mov
mov
push
mov
insl
or
or
fwait
lcall
adc
sbb
call
xor
pusha
mov
or
or
not
cli
mov
mov
pop
test
sbb
xchg
mov
mov
cmp
ljmp
dec
sub
in
xchg
sub
ja
aaa
mov
jl
mov
data16
sub
pop
iret
sahf
pop
or
sub
inc
cmp
sbb
pop
jne
loope
gs
shrl
cmp
sub
enter
xchg
gs
stos
mov
lcall
sbb
add
jp
dec
inc
idivl
xchg
js
add
push
xchg
adc
cld
jmp
lods
inc
push
cld
pop
in
lret
xor
sbb
pop
xchg
push
pop
sub
and
pop
push
out
pushf
lcall
dec
mov
add
push
lock
insl
push
sub
sbb
pop
ljmp
stos
push
negl
add
or
andl
in
dec
xor
push
ljmp
push
aam
sub
inc
bound
mov
cmpb
add
pusha
lret
and
pop
stos
lods
mov
or
cmp
movsl
aas
dec
sbbb
lret
shlb
fldcw
mull
mov
xchg
push
fs
movsl
push
add
mov
aad
gs
scas
xchg
xchg
dec
dec
push
mov
roll
es
inc
mov
sub
cwtl
push
in
jae
adc
pop
mov
rclb
out
fs
orb
inc
or
sbb
adc
mov
add
idiv
jmp
add
or
addb
test
and
cmpsb
int
pop
mov
sbb
sub
dec
mov
push
xchg
rorb
push
cmpxchg
pop
testl
push
andl
add
cwtl
rorl
or
jmp
push
mov
in
xor
mov
and
stos
roll
adc
addb
lret
sub
sarl
add
mov
mov
jecxz
dec
and
add
inc
adc
sub
push
neg
andb
lock
add
add
cmpsl
mov
shr
mov
pop
mov
or
out
cld
mov
cltd
ljmp
and
push
cmp
sbb
imul
xchg
inc
dec
push
inc
lock
out
xor
adc
shll
pop
test
mov
fwait
aad
or
mov
adc
add
scas
push
popa
jns
and
sub
std
or
sbb
xor
sub
sub
out
imul
jl
out
adc
jo
pop
notl
test
pop
pop
adc
cwtl
jmp
sub
cwtl
lods
sub
cmp
ret
aam
and
clc
repz
xchg
cmp
and
mov
shl
push
dec
push
aas
and
iret
and
mov
ja
cmpsb
mov
mov
or
sub
pop
sahf
xchg
sbb
mov
mov
out
lds
outsb
mov
sub
push
popa
repnz
daa
inc
bound
dec
adc
push
fildll
ss
sub
cmp
push
sub
sub
sub
rolb
int
test
push
or
inc
dec
fwait
mov
sbb
ret
pop
push
push
inc
cmpsl
and
mov
dec
add
or
das
bound
inc
push
push
pop
mov
dec
xchg
mov
inc
pushf
push
push
add
add
add
pusha
jl
mov
push
add
jmp
test
or
sbb
adc
mov
jae
mov
sub
cmp
popf
insb
jnp
push
adc
lahf
dec
xchg
mov
cwtl
xchg
or
mov
jnp
in
pop
push
pop
lods
mov
cmp
mov
daa
push
inc
into
es
sub
xor
aad
jmp
jg
and
sub
cmpsb
das
push
pop
sub
mov
lds
cltd
mov
add
jno
neg
add
repnz
push
mov
and
and
lods
loopne
jne
adc
and
in
jo
xor
inc
dec
ret
push
xor
fisttpll
jo
or
roll
aaa
loopne
sbb
adc
lock
cmc
adc
inc
add
orb
ja
push
je
lds
inc
ljmp
sub
test
nop
ss
fnstenv
imul
cli
sbbb
and
shl
adc
adcl
xchg
pop
jg
dec
push
in
test
lahf
pop
cmpb
adc
mov
dec
aam
in
addr16
imul
scas
cmp
sub
loopne
std
shlb
xchg
leave
loopne
cmpsl
push
fcoms
adc
in
jle
ret
clc
sub
in
gs
icebp
xlat
repz
mov
pop
add
push
mov
add
mov
decl
add
rol
sub
jmp
out
pop
repnz
addr16
jnp
jmp
push
pop
leave
cmc
xchg
repnz
pop
push
add
pop
inc
jnp
int
cmp
fdivl
or
jmp
inc
loop
in
scas
outsb
repz
pusha
adc
dec
mov
sub
mov
sub
adc
fistps
adc
adc
push
enter
shrb
dec
adc
lret
push
inc
jne
jmp
mov
mov
mov
aaa
jae
in
pushf
mov
push
loopne
addr16
lock
pop
push
sub
and
sub
mov
add
inc
sub
cwtl
fisttpl
out
mov
mov
jge
out
imul
dec
int
in
fdivl
xchg
insb
call
cwtl
and
test
push
lahf
mov
out
dec
mov
push
push
or
mov
push
mov
sahf
push
test
sbb
popa
ret
lock
stos
cwtl
out
push
mov
loop
pop
mov
and
mov
ds
mov
sub
push
cld
addl
jg
lahf
sub
mov
adcb
lods
mov
lods
test
aas
fsub
out
inc
test
xchg
add
push
or
icebp
xchg
cmp
xlat
mov
and
stc
fs
or
bound
pop
scas
xor
and
mov
xchg
pop
ret
loop
mov
add
mov
fnstsw
dec
mov
mov
mov
add
dec
loop
or
ds
sub
add
f2xm1
test
xor
ds
add
or
add
jmp
jmp
push
and
aaa
fwait
cld
cmpsl
add
xor
test
repnz
mov
xor
lret
js
push
icebp
dec
aaa
or
dec
inc
lods
jge
jbe
rolb
sub
lcall
mov
movsl
adc
sahf
hlt
add
daa
jnp
push
clc
icebp
and
adc
mov
xor
or
pop
jecxz
pusha
mov
test
or
enter
sub
sbbb
xor
push
mov
out
addr16
pop
arpl
pop
lret
sub
mov
andb
or
sbb
mov
sub
pop
sub
mov
loopne
inc
push
loopne
pop
sub
in
push
mov
pop
dec
neg
shr
rolb
hlt
pop
jnp
lret
test
sarl
sub
shll
xor
jno
orb
or
or
push
imul
add
or
or
or
pop
mov
or
pop
repz
pop
cmp
jns
mov
mov
ret
mov
rolb
sub
xchg
push
inc
inc
sahf
cmp
dec
mov
dec
mov
xchg
lret
divl
sub
inc
add
and
ds
xor
lods
dec
movsb
mov
mov
cmpsb
int
xor
cmp
or
rcrl
adc
push
dec
mov
xor
dec
or
rcrl
loope
gs
sbb
push
sarl
or
mov
icebp
sarb
sub
add
xor
mov
add
fucompp
xor
lods
pop
mov
dec
and
adcb
adc
not
sub
mov
or
and
nop
es
fimull
pusha
mov
cmp
xor
push
shr
push
daa
push
push
xchg
sti
lds
mull
push
sbb
jmp
mov
std
and
loop
cmp
test
mov
pop
imul
push
sub
aam
ret
js
or
or
mov
mov
shrl
or
add
roll
mov
jnp
lahf
inc
adc
test
pop
je
jle
and
push
or
clc
testb
fcompl
negl
loopne
add
lods
sti
push
jmp
cmp
cmp
call
push
mov
and
test
das
pop
sub
mov
ds
add
pop
imul
pop
inc
inc
addr16
inc
jg
jb
jmp
js
jnp
and
adc
push
sbb
and
sbb
pop
insb
add
inc
xchg
push
fsubl
push
lods
pop
push
mov
arpl
call
ss
fmull
xchg
or
icebp
push
mov
add
push
pop
rcrl
push
add
xchg
das
lods
outsl
jne
outsl
mov
mov
xor
into
or
jo
or
adc
in
nop
daa
syscall
ret
inc
mov
pop
xor
sbbb
pop
and
ficompl
and
loopne
push
pusha
enter
sbb
pop
push
mov
mov
pop
push
add
mov
mov
and
jmp
sub
gs
mov
cmc
stc
dec
out
in
fcomp
dec
bnd
jp
leave
or
fs
inc
jmp
or
out
aas
shl
xchg
xchg
mov
jge
mov
gs
dec
lret
push
pop
jne
jo
movb
daa
sub
or
and
inc
add
and
dec
mov
ficoml
sarl
fcoml
inc
cld
cmp
ds
mov
add
xor
jnp
or
xor
pop
repnz
int3
ljmp
push
mov
mov
or
pop
adc
lret
mov
aam
pusha
mov
push
adc
push
and
and
subb
or
xor
std
jge
mov
lds
jp
dec
sub
or
push
sub
stc
inc
adc
popa
or
mov
test
lret
push
push
or
cmp
fcoms
sahf
inc
dec
adc
hlt
or
aas
pop
sub
adc
mul
push
cmp
loop
cmp
and
imul
in
or
mov
add
push
pop
push
mov
push
repz
or
orl
ret
test
lret
aam
mov
pop
dec
dec
les
pop
sub
sub
or
lds
sbb
jnp
sub
clc
mull
push
or
scas
fwait
sub
pop
xor
pop
mov
js
adc
mov
ret
rol
sub
fnstsw
sub
add
inc
push
xor
dec
addb
pop
or
cmpsl
lea
fs
push
mov
jae
ss
mov
rcrl
jl
pop
sbb
adc
lcall
mov
jp
xlat
adc
loop
cmp
fs
ss
add
cmp
push
ret
fiadds
mov
mov
fisubs
xchg
and
jmp
aad
and
add
xor
test
xchg
push
testb
push
mov
jmp
pop
sub
inc
dec
xor
mov
shll
stc
push
and
push
mov
sub
xchg
dec
or
mov
pop
add
out
xchg
sbb
or
icebp
add
push
sub
pop
push
xchg
push
inc
jmp
loope
pop
xchg
pop
ljmp
or
pop
inc
clc
add
push
jmp
adc
dec
dec
bnd
or
in
xor
xor
nop
pop
add
lds
sbb
popf
mov
push
jl
and
jg
sub
sub
jne
push
push
jmp
push
pop
int
pushf
ljmp
push
mov
inc
mov
add
pop
push
das
pop
test
hlt
push
mov
mov
cmp
mov
out
adc
dec
or
xchg
pop
cmpsb
mov
pop
sub
fwait
push
mov
jnp
mov
push
adc
imul
ja
popf
xchg
popl
adc
not
jg
divl
push
adc
shll
xlat
add
shlb
pop
gs
or
jae
xor
cltd
sbb
push
and
add
addl
loopne
insl
mov
adc
xor
lods
outsl
out
jl
sbb
test
pop
mov
lret
mov
jmp
inc
push
jo
inc
sub
push
or
adc
mov
daa
mov
push
test
adc
ficompl
sbb
loopne
jge
pushf
add
mov
inc
dec
xchg
mov
test
pop
push
jl
xor
or
jbe
adcb
mov
in
dec
in
lods
mov
sub
lahf
cwtl
or
cmp
stc
cmp
outsl
pusha
pop
dec
jno
nop
sub
call
and
mov
pop
pushf
popa
mov
popa
pop
mov
imul
cs
fs
inc
leave
or
mov
xor
pop
pop
sbb
and
or
push
cmp
sub
mov
xchg
dec
mov
loopne
mov
add
or
xor
int3
xchg
lret
divb
and
inc
jnp
cmpsb
inc
jne
ds
lcall
and
mov
jno
cmpsl
push
sbbl
add
or
add
sbb
or
xor
les
lahf
push
jg
sbb
int
mov
mov
xor
push
push
cmp
mov
fs
sub
xor
dec
pop
test
mov
hlt
dec
push
sbb
adc
dec
int3
inc
xlat
cmp
ja
add
jo
sbb
dec
shlb
jae
pushf
jbe
test
or
sub
mov
fmulp
imul
pop
and
mov
sbb
mov
iret
mov
or
pop
shl
js
cwtl
sbb
test
aas
outsb
out
mov
xor
push
ljmp
mov
and
insb
mov
mov
push
push
or
cmp
jb
xor
jmp
add
inc
cmp
lcall
push
jmp
sub
popa
xor
insb
mov
lods
or
xchg
pop
dec
inc
push
push
mov
lahf
mov
mov
jecxz
pop
or
push
pop
fcmovnb
fcomps
test
sahf
and
pop
mov
mov
shl
jl
adc
ret
les
rcl
ja
jnp
loope
adc
push
pop
add
mov
or
mov
sub
xchg
adc
rolb
push
fmull
lock
jns
mov
out
inc
push
pop
push
push
je
sub
sbb
or
into
xchg
inc
and
xlat
or
adc
push
sub
sbb
popf
shll
data16
add
loopne
sub
hlt
mov
outsb
cld
std
and
movhps
jl
cld
push
or
loopne
jbe
dec
daa
clc
in
dec
testb
aaa
js
xor
push
pusha
cmpl
subb
rclb
repnz
and
dec
add
pop
mov
xchg
pop
xlat
nop
sub
sbb
sbb
ficoml
ficomps
add
mov
icebp
mov
addr16
push
icebp
mov
inc
sahf
scas
add
inc
mov
xor
mov
imul
rorb
lods
adc
push
pusha
std
dec
in
xchg
adc
mov
or
push
jmp
push
dec
jle
and
sub
push
cmpl
cltd
pop
aaa
loopne
mov
popf
push
push
loope
dec
pop
std
adc
push
push
test
fisubl
inc
adc
addr16
cmp
lahf
adc
incl
jmp
jmp
mov
cmpl
jb
pop
jmp
push
ds
imul
pop
add
xlat
pop
pop
adc
or
jno,pt
adc
negb
pushf
ja
out
push
out
pusha
push
push
mov
fwait
cld
push
daa
jmp
sbb
cmp
pop
mov
adc
std
aas
pop
dec
es
add
and
cmpsl
xor
xor
inc
dec
jb
js
jmp
sbb
add
cs
pop
outsb
jmp
into
pop
or
dec
push
inc
or
insb
xchg
nop
cmp
dec
pop
xchg
fldenv
lret
stos
and
adc
pop
jmp
fcoms
jno
jb
push
and
shll
or
cmpb
es
pop
movsb
xchg
pop
sub
and
pushf
xchg
sbbl
or
xchg
adc
cwtl
lea
push
jmp
data16
xchg
mov
xlat
cld
push
jmp
xor
les
sbb
andl
jmp
gs
repnz
jmp
maxps
push
dec
xchg
cli
jno
push
lea
dec
mov
push
mov
imul
push
pushw
or
adc
and
sub
lods
loopne
mov
add
jmp
jmp
cwtl
in
pop
pop
out
add
popa
movntps
sbb
test
inc
call
pop
pop
xchg
jns
mov
int3
mov
rcrl
ljmp
add
lods
les
jbe
push
adc
fcoml
sbb
cmp
add
push
call
xchg
cld
dec
lahf
mov
jns
ret
jne
adc
xlat
in
rorl
sub
dec
adc
mov
rolb
jl
leave
or
out
into
push
mov
add
nop
scas
jne
pop
pushf
or
inc
loop
jmp
push
repnz
into
pop
xor
jo
pop
xor
sti
xchg
pop
xchg
add
and
mov
mov
lock
cmpsb
pop
adc
call
fdivs
and
xchg
inc
xchg
lock
inc
popf
outsb
sarb
dec
or
test
lock
dec
xor
test
inc
dec
jp
lock
call
add
int
scas
xchg
push
ljmp
mov
cli
mov
pop
cmp
leave
xchg
jbe
cli
rcrb
ret
push
inc
add
mov
pop
fimull
js
jns
dec
ret
les
add
pusha
jmp
rcr
decb
mov
cmpb
pop
pop
repnz
and
push
mov
and
lahf
and
out
mov
adc
pop
push
rclb
push
inc
sar
inc
mov
jae
pusha
jg
scas
sub
rcrl
shr
mov
cmp
or
popf
mov
out
je
mov
dec
cli
inc
pop
push
push
fwait
and
xor
fldl
pop
in
xchg
outsb
loopne
dec
or
xchg
cmp
ror
testl
je
out
sub
and
xor
sti
fs
inc
xchg
cmpsl
push
cli
mov
mov
mov
mov
mov
sub
mov
dec
pop
dec
dec
and
adc
in
mov
daa
jbe
ret
repnz
and
lcall
lods
push
call
cwtl
mov
jge
push
jmp
lahf
jae
in
and
add
pop
mov
sbb
not
or
pop
imul
inc
pop
adc
pop
adc
push
mov
imul
mov
push
xor
cmp
inc
cmp
ja
and
out
sub
outsl
popa
std
push
sbb
iret
dec
push
jmp
push
pop
test
xchg
loope
aas
fisubrl
addl
incl
cli
add
test
add
push
rcrl
jmp
cltd
mov
je
sub
push
das
andl
push
mull
repnz
addr16
pop
push
icebp
js
into
fs
int
les
movb
popf
mov
xchg
add
jg
std
xchg
rcrb
into
jmp
and
addr16
icebp
out
adc
popf
dec
icebp
push
add
sub
mov
adc
xchg
inc
lock
sub
call
push
add
jge
das
xchg
pop
sbb
cltd
pop
fiadds
inc
mov
pop
aas
add
stos
sbb
jnp
sub
clc
or
pop
enter
cmp
mov
or
sub
or
dec
pop
push
mov
cmp
mov
nop
dec
mov
das
push
sub
push
sahf
arpl
or
mov
insb
stos
movsb
andb
mov
out
add
adc
pop
sub
push
mov
and
repnz
jg
aaa
adc
pop
xchg
pop
mov
arpl
in
mov
lahf
fsubrl
inc
pop
pop
mov
or
inc
xor
data16
lcall
push
mov
xchg
pop
arpl
inc
ss
mov
sbb
push
loop
xchg
cmc
addl
dec
gs
icebp
dec
add
cmp
mov
in
insl
fs
orb
dec
sbb
add
and
push
pop
movl
jmp
movsb
sub
push
xchg
lock
jp
daa
call
sbb
push
sub
push
cmpsl
sub
xchg
insb
adc
sbb
push
add
shl
dec
and
rcll
add
dec
adc
push
shl
mov
testl
mov
loope
or
or
jg
inc
mov
bound
ja,pt
xchg
jg
mov
or
js
pusha
mov
or
and
arpl
inc
sub
push
or
push
adc
in
cmpsb
add
add
testl
shr
imulb
sarb
sub
mov
add
mov
lock
cmp
jae
test
sahf
or
xchg
push
outsl
shl
mov
loope
dec
mov
cli
movsl
mov
cmp
repnz
mov
pop
repz
mov
fidivrl
negl
rolb
mov
inc
cmp
das
pop
mov
inc
arpl
inc
movsl
jge
sti
adc
pop
push
mov
movsl
in
xor
jl
ret
sbb
movsb
pop
fmuls
xchg
shrl
add
aam
dec
push
lahf
jge
lea
movl
imul
xchg
mov
fists
fildl
addr16
test
jg
loope
xor
loopne
xor
mov
xor
das
icebp
push
lret
aad
push
ret
add
vpmacssdqh
outsl
insl
xchg
filds
out
jp
push
mov
xor
xor
fdivrs
xor
jmp
cli
inc
addr16
les
sbb
shrd
xchg
lds
es
in
pop
xchg
jnp
mov
sub
push
jnp
stos
mov
push
sub
aam
movsl
mov
fmulp
sub
adc
shlb
mov
xchg
push
add
or
les
out
aad
inc
pop
pop
stc
and
sub
mov
mov
xchg
lcall
mov
lahf
inc
mov
mov
ret
pusha
pushf
inc
xor
or
xchg
mov
std
jnp
in
jmp
out
test
adc
or
cmp
ret
lret
sbb
stos
inc
add
aaa
or
jg
sbb
add
xchg
not
cltd
shr
pmaddwd
adc
and
jmp
pop
sub
leave
jbe
inc
lock
inc
push
icebp
sub
mov
rcr
subb
jno
aaa
in
push
mov
and
jns
dec
fwait
push
es
push
movsb
leave
mov
cmp
add
shr
jmp
lret
mov
xchg
xchg
data16
cli
push
mov
pop
cltd
ffree
xchg
in
add
cmp
pop
adc
or
jmp
dec
ljmp
and
xor
or
test
inc
inc
adc
xorb
mov
pop
jmp
or
pop
push
pop
xchg
push
cmp
data16
or
leave
and
xlat
xchg
xor
cwtl
push
pop
push
mov
push
scas
inc
sub
sub
lock
popf
inc
xchg
add
outsl
adc
pusha
and
aam
fs
hlt
daa
stos
inc
je
push
movsb
cli
lret
lahf
adc
mov
push
adc
add
pop
sub
cmp
fsubrs
sar
rclb
pop
shll
fstl
add
jle
test
cld
mov
das
sbb
xchg
lds
lods
pop
addb
or
jl
add
pushf
pusha
and
in
dec
inc
stos
sbb
xchg
or
dec
pushf
add
cmp
lds
mov
inc
repz
into
in
ret
fmull
mov
pop
outsl
test
jecxz
push
mov
add
sub
xlat
notl
mov
and
test
pop
lds
sub
sahf
sub
clc
mov
sahf
and
adc
es
push
aam
and
pop
jge
leave
jg
pop
mov
icebp
js
not
stc
inc
mov
enter
stc
cmp
ret
push
repz
sbb
xor
test
sbb
stc
insl
stos
and
dec
sbb
cmp
sub
xor
dec
or
mov
push
mov
add
mov
sbb
inc
popf
or
iret
dec
mov
idiv
inc
adc
mov
or
inc
mov
ss
jno
lahf
jno
leave
xor
inc
ficoms
inc
or
dec
mov
cmpsl
pop
jge
dec
lods
push
dec
mov
daa
jmp
fyl2xp1
and
pop
pop
xchg
push
rorl
ss
ljmp
inc
inc
loope
push
sbb
push
mov
mov
pusha
jle
mov
jmp
xchg
jb
shll
loope
xor
pop
out
jle
pop
and
scas
dec
sub
mov
lods
mov
ljmp
repnz
jbe
dec
mov
xchg
push
add
push
xchg
push
sbb
sub
pushf
sub
cmp
adc
sub
aas
jmp
pop
xor
dec
mov
mov
dec
aaa
add
add
jne
jb
add
addr16
jmp
stos
push
add
shr
iret
push
push
and
incl
add
xchg
notb
test
xor
test
rcrl
outsl
mov
push
add
or
push
add
mov
push
sub
ljmp
jmp
out
scas
lds
mov
pop
add
decb
mov
aaa
outsl
add
aas
mov
movsl
loope
je
fdivs
push
es
push
loop
mov
dec
insb
nop
or
icebp
pop
cmp
lret
pop
adc
sub
add
and
mov
shrl
cmc
xchg
subl
push
rorb
xor
xor
cltd
mov
sub
fidivs
and
decb
fimull
into
ret
jg
insl
add
call
adc
xchg
xchg
and
add
outsl
push
mov
bound
out
add
sbb
and
or
jp
shll
outsl
and
pop
xor
fists
fs
jbe
add
cmp
sub
add
or
into
and
jo
scas
ljmp
and
add
test
xor
sub
dec
inc
mov
repz
xlat
add
imul
adc
push
leave
or
sub
pop
aad
xchg
xchg
pop
pop
and
inc
lock
mov
push
das
and
sbb
xlat
cmp
rcrl
test
movsb
mov
xlat
psubusw
in
pop
jne
pop
fs
adc
cwtl
outsl
rorl
iret
or
pop
scas
fwait
pop
and
push
loop
rorb
aas
pusha
cmp
push
add
lods
idivl
sub
adc
xchg
add
xor
add
sahf
je
pop
jmp
push
adc
mov
sbb
icebp
or
js
adc
rolb
fsubrl
or
inc
or
mov
hlt
and
inc
addr16
repnz
or
add
mov
and
repz
xor
jno
cmp
ret
adc
or
add
neg
pushw
movsl
add
in
jo
lret
js
mov
sub
add
lods
lret
sti
mov
add
dec
push
call
dec
push
jge
add
test
add
jae
mov
leave
sbb
ss
sub
mov
scas
lods
mov
mov
or
mov
pop
cmp
push
enter
inc
lret
jmp
stos
popa
push
jmp
pop
xor
pusha
xchg
sub
hlt
sti
enter
sub
add
mov
mov
cmp
push
xchg
xchg
inc
fisttps
arpl
add
fsubr
enter
pop
pushl
addl
clc
xor
or
daa
fwait
xadd
jb
dec
int
xor
jle
in
jmp
cmp
xor
inc
insl
sub
jns
mov
cltd
and
aam
pop
test
inc
dec
out
aam
ret
rcl
add
xor
loope
push
movl
mov
jne
add
jae
sbb
or
pop
push
les
mov
pop
pop
enter
fdivl
mov
inc
notb
sub
js
adc
movsl
loopne
or
mov
stos
ja
pusha
dec
faddl
mov
push
jmp
xchg
sub
dec
je
inc
mov
adc
stos
push
adc
add
push
test
dec
xchg
jg
dec
push
adc
dec
add
outsl
lret
mov
out
jg
add
inc
jmp
popa
sub
out
push
jle
jmp
and
enter
subb
or
pop
mov
lahf
inc
pop
mov
cmp
xor
sarl
pusha
test
xor
andb
ret
xchg
nop
imul
in
js
mov
add
inc
add
mov
sub
cmpsl
lret
out
das
and
out
add
inc
cmp
jmp
cs
dec
add
or
dec
add
dec
adc
xor
add
out
loop
lret
or
dec
mov
push
int3
push
and
and
jne
sub
add
call
sbb
call
inc
mov
push
jmp
daa
std
push
faddl
bound
icebp
jecxz
mov
cmp
cmp
adc
dec
shrl
push
add
jmp
pop
add
addb
mov
nop
pusha
or
dec
jnp
mov
in
jne
lret
sub
mov
repnz
outsl
jae
pop
mov
sbb
or
sub
jns
pop
pop
mov
popa
fdivrl
mov
icebp
test
lahf
subl
cs
cld
push
sub
ss
mov
test
idivb
mov
xchg
cmp
or
jl
push
mov
and
pop
iret
pop
adc
sti
or
push
icebp
mov
data16
icebp
adc
or
pop
mov
lods
mov
test
mov
jmp
xor
cmp
shl
push
fstps
int
jo
pop
add
adc
out
add
push
inc
inc
dec
xor
or
push
test
xor
ja
movsl
and
cmpsb
pop
insl
loop
add
dec
inc
mov
sub
and
inc
inc
ret
inc
cwtl
in
or
add
xor
pop
push
push
mov
cltd
add
outsl
shl
stos
fisubs
and
sahf
push
into
ret
mov
pop
dec
andl
or
push
adc
inc
or
cmp
sbb
mov
mov
xor
out
add
sbb
and
adc
inc
inc
push
jl
dec
jns
inc
cli
into
gs
notb
jne
and
add
pusha
leave
aas
daa
push
daa
fcoml
addr16
and
push
bt
call
mov
pop
xchg
sarl
or
pusha
fs
imul
es
jnp
test
adc
leave
pop
lea
leave
test
sbb
xor
fimull
push
push
pop
dec
pop
cld
in
loope
fcoms
cli
jae
push
loop
hlt
lea
cwtl
adc
sbb
cwtl
xchg
jnp
mov
test
mov
pusha
lods
lods
xchg
addb
add
push
jns
dec
adcb
sub
out
lret
pop
sarb
sti
and
lds
clc
sub
mov
xor
jb
ljmp
or
arpl
or
mov
movlps
or
push
push
pop
xchg
rcr
sub
cltd
jnp
repnz
lahf
rep
or
pop
test
pop
inc
or
push
clc
jmp
add
das
sbb
rolb
jl
add
xchg
ss
mov
sbb
ja
push
jae
pop
pop
shll
adc
mov
or
sbb
pop
add
insl
dec
rcrb
fisubl
or
addr16
push
push
mov
xchg
ljmp
add
xor
lods
add
xor
mov
ljmp
or
cmp
or
cmp
or
pop
or
jle
or
sbb
and
shlb
clc
cmc
sub
mov
movsb
mov
lock
into
insb
jno
pop
dec
shr
pusha
inc
xchg
pop
outsl
jnp
sub
pop
sti
pusha
adc
dec
inc
dec
adc
push
lea
lcall
push
mov
pop
mov
mov
sub
add
dec
ja
pop
aaa
mov
cmp
popf
adc
cmp
call
jecxz
stos
xor
sub
btc
inc
cmp
add
rclb
xchg
rorb
addb
fisttpll
and
mov
mov
pop
and
mov
scas
icebp
scas
push
push
gs
push
inc
push
sbb
into
or
adc
inc
jl
add
jmp
push
push
pusha
xor
stos
bound
lock
pusha
cld
iret
fidivrl
and
les
mov
loopne
xor
cmc
rcll
test
mov
outsl
add
push
sub
cld
jne
dec
movl
dec
cmpsl
mov
movsb
add
push
je
xlat
or
dec
fcoml
rorl
cmp
jmp
push
pop
lods
in
or
dec
test
xchg
sub
sub
or
pop
inc
adc
jecxz
and
pop
sbb
adc
pop
push
fcmovnbe
das
out
pop
cmpsb
cld
test
mov
mov
shrb
sub
inc
mov
call
xchg
arpl
test
inc
or
repnz
mov
push
rcll
test
ficoms
adc
jecxz
mov
sahf
xlat
andb
xor
pop
dec
testl
xor
jmp
dec
in
xorb
lret
add
jae
addl
sub
out
movsb
insb
push
popa
push
in
add
orb
xor
in
adc
popf
imul
mov
xorl
out
jno
pop
fistpll
cli
daa
daa
and
inc
sub
fimuls
jae
and
mov
lretw
xor
add
das
jmp
xchg
ret
add
in
inc
ds
jns
dec
push
xorb
negb
mov
or
cmc
mov
push
jl
add
and
cmp
icebp
inc
out
and
or
sub
movsl
push
data16
pop
mov
or
xor
xchg
mov
pop
loopne
pop
sub
lods
sub
mov
add
popa
xlat
inc
test
cmp
sub
popf
sub
pop
insb
lret
inc
sbb
jnp
cli
loop
inc
call
xchg
in
call
ret
jmp
mov
mov
inc
rcr
mov
dec
add
loop
xchg
cli
clc
add
sub
adc
mull
pop
add
pop
and
mov
popa
jmp
or
hlt
inc
stos
pusha
movsb
jge
pop
add
imul
jne
push
hlt
sub
mov
mov
shr
add
adcl
adc
xor
adc
lods
sub
or
xorb
fwait
xor
cmp
sub
loope
add
add
push
bound
pop
inc
inc
sbbb
cwtl
cwtl
xor
add
and
jmp
lods
into
aas
push
sbb
mov
add
sub
popa
aaa
pop
and
cld
jmp
mov
push
and
sub
daa
add
mov
nop
jnp
scas
js
mov
inc
add
dec
inc
mov
mov
add
dec
xchg
cs
inc
xchg
sub
in
addr16
jo
jno
jg
repz
idivb
push
fisubrl
sub
sub
aas
and
ret
neg
xor
add
pop
loope
pop
das
or
push
add
fcmovnbe
je
mov
pop
dec
mov
mov
mov
push
pop
sbb
sahf
mov
pop
and
sbb
addr16
lea
xchg
dec
pop
or
mov
cmp
dec
out
cmp
sub
jae
orb
jmp
mov
pusha
sbb
inc
inc
das
aad
out
rcrb
out
inc
xor
jo
stos
cmp
jl
pop
out
mov
dec
lahf
std
sbbb
sub
stc
hlt
push
insb
mov
cmp
cmp
xchg
testb
js
loope
popf
repz
mov
test
das
lock
sbb
add
fwait
enter
xchg
into
or
or
je
xchg
jmp
scas
enter
jns
sbb
lret
xor
jmp
mov
push
push
push
xchg
sbb
dec
sub
inc
loopne
mov
fbld
out
lds
pop
jecxz
xchg
jno
cmp
nop
sub
insb
int
cmpsb
jg
add
push
push
mov
push
mov
mov
inc
imul
outsb
xchg
mov
pop
mov
xchg
push
mov
xchg
dec
sti
add
dec
sbb
pop
outsb
stos
subl
leave
add
xor
sub
pop
add
int3
jmp
fs
out
push
xlat
imul
cmpl
pop
inc
jo
cmpsl
movb
mov
enter
xor
addr16
mov
push
push
push
and
stc
lods
cmc
incb
es
scas
ja
xor
test
add
pop
xor
rcl
cmc
push
sub
aas
daa
jge
adc
popf
and
loop
sbb
in
add
enter
add
jp
add
and
mov
sub
cwtl
adc
jmp
out
test
shll
std
inc
loope
mov
add
sub
repz
int3
out
ret
repnz
sbb
nop
pop
test
sub
addr16
mov
leave
jp
test
adc
cmp
into
sub
mov
out
dec
mov
js
dec
insb
push
rorb
pop
insl
repz
and
in
into
jmp
xor
sub
or
aad
xchg
in
movsb
and
adc
push
and
mov
ret
call
push
or
push
shl
or
les
roll
and
cwtl
add
sbb
sbb
shrb
jl
add
add
or
jmp
ljmp
fs
sub
cwtl
inc
jge
mov
mov
int3
rcl
ds
out
sub
inc
dec
push
add
fisttpll
pop
mov
out
dec
mov
adc
cmp
pop
fbld
adc
mov
pop
jecxz
sarb
mov
sub
jg
push
mov
jnp
add
out
repz
xchg
aas
lock
es
test
sub
push
test
lcall
cmpsl
xor
fucomp
mov
jnp
push
push
outsl
xchg
mov
pop
popf
jbe
or
push
lret
pop
and
test
inc
in
add
jmp
inc
push
in
inc
jle
cli
jo
mov
pop
das
push
mov
mov
xor
sub
xlat
add
jno
fcmovnbe
jp
sbb
xor
icebp
andb
jbe
das
sub
div
push
dec
jno
pop
pop
push
insb
clc
pop
jmp
test
lcall
fstl
es
cmp
lods
push
lcall
jl
sbb
les
pop
pop
sub
cmc
inc
sbb
sbbb
ljmp
loopne
push
or
dec
jnp
xchg
mov
out
dec
jne
pop
mov
and
mov
mov
dec
sub
or
iret
cli
fcoms
scas
arpl
ret
dec
mov
sbbb
sbb
cmp
mov
repz
stos
dec
jmp
mov
adc
lods
add
lea
and
push
mov
add
mov
imul
cmp
stc
popf
sub
leave
push
mov
inc
xchg
or
shll
call
push
add
mov
and
jae
sub
mov
jl
ljmp
js
test
jp
add
insl
stos
pop
add
jmp
xchg
pop
jl
rol
inc
pushf
mov
bound
push
inc
in
add
cmp
in
xchg
stos
dec
sub
mov
or
daa
sub
pop
mov
push
das
inc
dec
out
mov
das
inc
not
push
mov
add
aas
mov
sbb
lret
lds
or
and
push
push
inc
test
loopne
pop
xchg
sbbl
repnz
push
loopne
and
and
dec
pop
mov
mov
inc
inc
add
add
jnp
stc
lods
pop
in
lahf
inc
xor
sbb
addb
adc
push
and
sub
repz
inc
imul
push
fildl
push
mov
lds
xlat
mov
ficoms
mov
ja
stos
leave
aam
idivl
xchg
rcrl
shrb
inc
fnstsw
aam
push
movsb
fists
adc
cltd
test
or
jne
test
add
aaa
jno
cli
andnps
test
aad
rcr
push
test
mov
fadds
pushf
cmp
nop
cmp
cs
loope
cmpsb
mov
push
testl
iret
pop
out
idiv
inc
mov
push
push
add
in
or
and
push
outsb
int
pop
xchg
jo
and
sarl
add
aaa
dec
js
ror
add
dec
sub
sub
pop
pop
push
subb
imul
xchg
sbb
add
imul
mov
aad
ret
dec
pop
in
xor
iret
lds
in
pop
or
cmp
rcl
jp
push
sbb
push
call
mov
gs
das
push
and
in
ficoml
out
cli
enter
xchg
pop
sub
push
pop
aas
or
xor
pop
cmpb
ds
or
or
add
movsb
jbe
std
sbb
mov
and
pop
dec
mov
jmp
pop
das
pop
sub
sbb
test
cmc
fadds
mov
in
jecxz
mov
add
sub
or
xchg
pop
js
fdivl
insb
sti
lods
jmp
mov
repnz
push
das
push
scas
dec
cmpsl
jb
xlat
popa
loopne
push
rorl
xchg
jmp
mov
inc
add
daa
or
aam
lret
pop
add
aad
add
pusha
or
jns
add
ljmp
notb
inc
sar
jg
sbb
out
dec
test
lods
or
push
mov
mov
jno
lcall
clc
sub
mov
push
push
push
and
cs
add
inc
jmp
add
stc
hlt
fs
out
sub
push
mov
mov
ja
fs
fidivrl
mov
or
in
movsl
add
not
js
mov
inc
add
mov
into
mov
xchg
cmpsb
cwtl
sbb
loope
popa
hlt
pop
pop
outsl
mov
and
add
cmp
lret
aam
add
adc
pop
fucomp
sbb
inc
or
push
ds
and
into
gs
mov
jne
cwtl
push
or
shlb
ret
das
dec
fs
push
push
jmp
loopne
dec
pop
and
push
add
les
outsb
mov
and
stc
ljmp
or
or
popf
jne
add
js
cmp
fldl
sub
mov
cwtl
pop
lods
add
cmp
or
sub
loope
adc
xchg
cmpsb
rol
movsl
pop
push
in
idiv
xor
push
les
pop
data16
push
add
lods
sbb
inc
addl
adc
scas
pop
dec
lret
sbb
cld
outsl
cmp
xor
sub
ficomps
dec
push
jb
jbe
push
pop
push
int3
fistps
sub
shl
negb
ret
bound
and
cwtl
les
lea
cmc
sub
sbb
addr16
jmp
sub
sbb
gs
add
ret
outsb
and
and
and
add
push
mov
xor
dec
add
jge
fiadds
mov
hlt
enter
cwtl
cmc
js,pn
and
in
aad
in
cld
pop
je
pusha
mov
sub
call
lret
mov
ret
or
mov
enter
push
adc
add
mov
sahf
je
jnp
mov
sub
inc
add
jmp
dec
add
cwtl
pop
push
pop
and
aas
jns
mov
imul
scas
fcmovne
stos
inc
pop
imul
mov
in
push
mov
mov
and
mov
push
idiv
pop
mov
popf
xor
jmp
subb
jmp
xlat
and
mov
aam
or
test
xchg
lds
test
sbb
mov
popa
mov
outsb
ja
push
loope
dec
rolb
rol
xchg
stc
mov
pop
xchg
rdmsr
add
inc
loopne
cli
xchg
pushf
add
or
push
rorb
sahf
test
incb
pushf
mov
jmp
outsb
rclb
mov
into
mov
xor
test
jns
popf
dec
mov
leave
sbb
mov
cltd
push
movsl
sbbb
mov
xor
shll
fisttps
pop
js
xor
and
pushf
jge
add
jmp
push
cld
negl
fisubrs
pop
xorl
push
pop
insb
inc
sahf
ret
mov
pop
es
mov
cld
stos
dec
dec
loopne
imul
popa
push
xchg
aad
sbbb
bnd
das
mov
pop
mov
lock
cmp
mov
ror
inc
out
and
aad
jecxz
test
push
shrb
cwtl
out
add
out
or
in
push
subb
ret
mov
xor
jle
ss
or
jl
push
add
imul
ss
push
aam
pop
mov
imul
mov
scas
or
lds
inc
or
aaa
mov
sbb
mov
enter
das
adc
push
add
fsubrs
jmp
pop
lcall
adc
aad
sbb
inc
and
dec
xor
push
out
pop
andb
cltd
jmp
fxch
sti
aad
test
jle
or
out
push
mov
lahf
jno
xchg
push
or
sbb
mov
mov
testl
push
dec
fidivs
out
sbb
pop
shr
mov
ret
test
hlt
arpl
test
jo
xadd
sub
mov
jmp
add
repz
inc
inc
sub
lahf
pop
cmp
mov
sub
jp
mov
add
mov
stc
dec
scas
push
dec
in
xchg
sub
push
out
push
mov
out
sub
mov
push
aas
mov
inc
dec
jmp
jl
add
pop
test
push
mov
popa
or
mov
add
sti
add
jmp
push
adc
aad
dec
inc
aas
pop
push
add
inc
xor
std
jmp
cmp
or
or
push
and
or
xor
shrl
push
dec
lock
push
sbb
jns
xchg
xchg
or
jb
inc
imul
mov
addb
mov
popf
add
jae
pop
jmp
outsl
or
mov
push
sub
es
iret
lret
ss
cmp
stc
das
cmpb
mov
sbb
jle
lahf
ret
cmp
dec
mov
mov
nop
fimull
push
clc
jmp
in
mov
pop
inc
not
jo
rolb
push
add
pop
aaa
add
packssdw
pop
scas
mov
add
pop
loope
outsb
fimull
jae
repnz
cwtl
sqrtps
mov
inc
adc
lods
dec
or
cld
lahf
xchg
scas
and
arpl
call
mov
fistl
pop
bndstx
push
cmp
dec
jg
in
or
jno
in
xor
fldl
mov
push
shrb
aas
cwtl
jmp
test
into
mov
vmulss
and
out
bound
adc
adc
and
rcr
and
pop
nop
movsl
pop
into
or
je
push
bound
cmp
out
add
jle
sbb
adc
fnstsw
in
jg
jge
jmp
pop
push
dec
enter
xor
iret
shl
pushf
stos
or
js
cltd
mov
pop
lahf
int3
adc
in
add
push
cmc
sbb
stc
and
fisttpll
cmp
or
fstpt
jmp
ret
push
mulb
sub
das
jns
mov
insb
sbb
cmp
and
inc
or
cmp
mov
std
pop
push
mov
mov
pop
je
jp
scas
fcompl
ret
mov
in
in
sbb
pop
test
enter
jb
inc
test
xchg
xchg
out
inc
pop
add
into
das
mov
or
push
aam
dec
arpl
mov
pop
in
inc
mov
imul
push
cli
mov
mov
xchg
push
or
jbe
jo
lds
jmp
pop
and
pop
fcoml
inc
fistps
std
cmp
xor
cmpsl
dec
mov
jno
jmp
mov
bnd
pop
and
jb
or
inc
add
aas
or
mov
aam
in
mov
sarb
rcrl
andb
mov
jnp
mov
in
scas
dec
dec
and
cli
sub
mov
cmp
repz
xor
call
into
andl
or
imul
pop
and
inc
adc
lods
repnz
xchg
ljmp
xchg
jge
addb
pop
int3
mov
sbb
les
push
stc
cmp
push
push
push
mov
les
rclb
add
push
cmp
xchg
inc
das
add
xor
jbe
nop
movsl
aas
sub
and
out
addr16
data16
cmp
add
mov
scas
xor
shrb
or
jg
daa
mov
add
test
daa
insb
xchg
dec
adc
fsubs
mov
aam
outsl
adc
scas
lret
jl
movsl
add
stos
push
mulb
cmc
adc
or
adc
scas
es
test
popa
and
ja
lock
out
aas
mov
pop
xor
fcoms
out
mov
adc
add
gs
and
imul
xor
sbb
or
adc
pushf
subl
lds
jnp
pop
pop
mov
mov
mov
jp
push
pop
xor
addr16
rolb
cwtl
add
push
pusha
push
mov
jl
ret
xchg
inc
cld
push
loopne
insb
or
je
and
push
mov
jmp
dec
push
das
add
or
daa
or
mov
xchg
pop
aam
mov
aas
mov
test
pop
sub
imull
mov
xor
imul
push
adc
enter
pop
and
dec
repnz
in
pop
xor
insb
and
sub
mov
ds
in
mov
inc
lcall
add
mov
gs
cmp
mov
dec
jae
lcall
subl
xor
pop
dec
scas
mov
subb
sub
inc
and
subb
pop
pop
push
repnz
mov
push
imull
adc
sub
sbb
jo
xor
mov
dec
mov
pop
pop
mov
or
push
dec
idivb
pop
mov
aas
dec
adc
mov
cli
mov
mov
inc
and
push
xor
push
movhps
out
daa
out
shr
jmp
mov
pop
lea
mov
pop
rcl
ret
jg
push
mov
sbbb
out
outsl
addl
add
inc
pop
aaa
sub
xor
sub
xor
add
out
fcmove
and
dec
negb
adcb
imul
lds
mov
and
es
xor
ret
je
roll
push
xor
mov
scas
inc
sub
mov
sbb
fs
or
das
scas
inc
mov
dec
in
xchg
mov
xor
mov
out
xchg
and
lret
cmp
jne
cmp
add
jl
xor
add
pop
jmp
shll
shrl
adc
sbb
fimull
push
rolb
sbb
jns
jo
or
jnp
sub
mov
dec
fdivs
xor
cli
jno
xor
cmp
sub
jne
or
cwtl
enter
ss
xchg
test
mov
mov
jnp
or
subl
sub
sbb
js
jno
add
mov
adc
or
sub
loopne
xor
sub
jns
pop
data16
mov
lea
pushf
jmp
mov
andb
leave
push
pop
push
mov
dec
insb
mov
xchg
dec
int
inc
jnp
ja
adc
neg
add
fiaddl
mov
or
add
clc
xchg
mov
movsb
lds
mov
jae
pop
test
or
dec
dec
call
orl
into
pop
mov
dec
lods
in
pop
notl
push
es
cltd
xchg
push
repz
and
shl
test
and
dec
sub
pop
add
and
loope
add
mov
fmull
mov
adc
or
pop
test
xchg
cmpsl
aas
mov
add
adc
rcrl
sti
ret
subb
pop
out
pop
push
cmp
sbb
rolb
pusha
dec
mov
aam
hlt
jo
cmp
pop
das
xlat
sbb
js
in
xchg
lcall
je
xor
inc
adc
int
cwtl
ret
jmp
push
adc
xchg
test
std
push
mov
lret
xlat
nop
movsb
movb
mov
repz
sbb
jg
cld
dec
adc
cmp
inc
sub
std
xor
ja
shlb
pop
pop
lret
loopne
jmp
mov
add
add
or
inc
adc
shll
push
adc
or
sub
adc
dec
out
ds
stos
or
xchg
dec
stc
pop
xor
xor
adc
lock
into
pop
add
fsubl
or
das
xchg
adc
fcoms
or
xchg
mov
cwtl
xorb
pop
pop
push
pop
adc
push
push
mov
or
aas
sub
scas
icebp
jnp
mov
shr
add
je
sti
and
outsl
add
pop
add
lahf
loop
mov
pop
jle
jle
or
les
pop
hlt
mov
add
daa
dec
dec
jae
add
pop
cld
mov
data16
loope
movsb
add
xchg
test
dec
aad
sbb
sbb
jnp
out
push
outsl
add
add
mov
js
adc
or
push
and
add
push
sub
out
dec
mov
mov
dec
dec
push
adc
in
add
xchg
cmp
sub
dec
scas
ret
and
scas
repz
push
and
scas
and
jmp
mov
loop
fisttps
push
ret
pop
xor
pop
enter
mov
inc
add
scas
adc
pop
test
fadds
scas
sub
shr
push
lds
inc
insl
xor
mov
add
and
aaa
sub
mulps
xchg
pop
pop
call
lods
pop
shll
ljmp
je
jmp
xchg
mov
in
faddl
lods
pushw
ja
cli
popf
pop
xchg
cwtl
cmc
rep
mov
outsb
or
sarl
dec
xor
xor
bound
fistpll
and
mov
cltd
adc
sub
mov
mov
add
lds
dec
jg
test
add
inc
push
or
push
clc
es
lods
out
cs
add
iret
add
and
testb
or
inc
pusha
scas
sub
addr16
cmp
sbb
dec
add
or
cs
stc
shl
mulb
xchg
jnp
repz
xchg
xor
xchg
cmp
mov
movsb
xchg
stc
call
rcll
int3
cmp
pop
iret
lret
add
jns
popa
push
jmp
xchg
push
pushf
jns
aaa
add
nop
fcmovne
push
dec
xchg
mov
xchg
jns
iret
js
cmp
jecxz
es
dec
and
pop
push
jmp
dec
fistps
xlat
push
mov
cmpsl
enter
xchg
push
shrb
push
xor
sub
add
ffree
js
stc
adc
bnd
sub
or
aas
icebp
pop
mov
mov
and
repz
push
pop
xchg
jns
ljmp
sbb
and
fdivrl
sub
negb
sub
push
pop
push
movb
dec
pusha
push
jmp
movsb
test
inc
fwait
mov
int
aam
leave
xchg
push
pusha
das
pop
dec
sub
add
cmp
or
pop
loope
shlb
sub
pop
add
push
sbb
cmp
mull
insl
sub
mov
push
jmp
sub
dec
mov
push
test
inc
sub
xchg
xchg
mov
pop
jns
add
test
mov
jmp
les
and
pop
adc
xchg
imul
rolb
ss
inc
mov
scas
or
scas
sti
aas
inc
sbb
imul
xor
adc
mov
fstl
sbb
or
cmp
lods
gs
sarb
jg
mov
cmp
xor
jmp
jb
pop
jmp
and
ds
add
mov
xor
daa
jmp
xor
mov
into
mov
inc
xor
dec
daa
into
loopne
mov
add
les
repz
jecxz
fwait
push
aas
push
pop
xchg
int
test
pop
shl
jle
aam
cltd
jp
cmp
inc
pop
bound
aad
cmp
dec
out
inc
sbb
gs
mov
jmp
mov
js
in
divl
sub
inc
aas
pop
jle
stos
sarl
jmp
lods
pop
cvtps2pd
lret
push
mov
outsl
gs
rcll
xchg
jp
pop
or
fnstsw
rolb
lock
popf
in
xor
push
mov
push
add
lcall
ljmp
scas
dec
test
add
push
mov
bound
add
or
mov
and
and
and
push
cmp
ljmp
jle
pusha
push
mov
adc
xor
or
jns
cmpsl
push
xchg
sub
out
into
push
out
mov
inc
xor
cmc
mov
sub
jle
sub
jbe
cmp
dec
stc
fistpl
mov
mov
jnp
pop
hlt
xor
fisubrl
js
imul
xor
loope
movsl
es
xchg
mov
imul
ret
mov
push
pop
push
mov
lea
out
xor
or
in
inc
inc
es
dec
mov
in
pusha
mov
mov
insb
mov
fsubrs
jns
lcall
push
jmp
in
pop
xor
adc
out
jmp
fdivl
mov
imul
lret
push
mov
mov
adc
adc
sbb
ja
dec
mov
insl
push
jne
sub
cmpb
push
cmp
push
cli
int
fcomps
inc
sti
add
mov
cmp
es
ss
jmp
or
sub
mov
pop
mov
dec
and
push
out
dec
jae
sub
jg
xor
enter
fisttps
dec
jbe
and
mov
or
cmp
loope
jg
pusha
dec
pop
add
ds
push
jecxz
pop
jl
mov
negl
das
and
sbb
sbb
inc
pop
and
sti
jg
push
sbb
dec
je
daa
faddl
add
shr
dec
mov
sbb
fwait
int3
add
popl
inc
stc
mov
idivb
or
ss
or
mov
pop
dec
jae
sub
lahf
clc
pop
mov
dec
add
or
cmp
popf
inc
jne
add
xchg
divl
add
jns
add
dec
pop
mov
aas
xchg
pop
cmpsl
repz
aas
sti
mov
jmp
fnstenv
mov
loop,pt
cmpsl
add
mov
push
push
xchg
sbb
loope
dec
push
xor
int
push
push
jae
or
ret
sahf
push
addr16
push
orl
ljmp
js
hlt
adc
ret
sbb
sahf
sub
inc
pop
fistpll
lods
stos
sbb
cmc
fimull
jmp
xchg
pop
cmp
cs
repnz
pop
xchg
testb
imull
mov
mov
pop
inc
nop
adc
pop
nop
clc
adc
push
fwait
xor
setp
jb
dec
cmp
mov
loop
rol
add
inc
fadds
ret
dec
int3
aam
xchg
and
lret
scas
mov
mov
mov
adc
or
cmp
fimull
mov
aas
dec
aaa
jmp
in
insb
test
add
loope
cmp
dec
ficoms
ljmp
and
jmp
or
jbe
add
adc
xor
push
jbe
fs
push
loop
jmp
pop
outsl
adc
ret
inc
fs
or
adc
add
xor
xor
push
les
xlat
ljmp
pop
xlat
cmp
xor
inc
in
cmc
mov
or
sub
lods
add
mov
int3
add
mov
add
and
cli
sbb
or
adc
mov
inc
jns
jne
call
flds
jns
pop
jbe
push
cld
dec
iret
fs
ja
fists
stos
mov
mov
addb
lret
mov
ljmp
sub
ss
push
push
pushf
test
std
scas
stc
ljmp
jge
jg
pop
fnstenv
add
stos
sub
pop
push
loop
add
andl
pushf
jg
xor
sub
mov
add
pop
push
mov
fwait
fwait
int
repnz
into
pop
adc
shll
dec
and
pusha
push
push
adc
adc
ja
xchg
or
ja
aas
or
add
ret
aas
pop
push
pop
and
pop
aad
std
addb
mov
pop
cld
inc
loopne
or
sbb
or
jmp
inc
and
pop
add
sub
ret
stos
xchg
pop
xchg
flds
or
jns
and
out
pop
shll
fldl
jae
jne
push
push
mov
sub
or
add
repnz
or
cwtl
dec
cmpsl
dec
sub
insb
mulb
in
ljmp
add
loope,pn
lcall
or
xor
arpl
mov
mov
testb
and
test
shrb
imul
add
scas
jo
icebp
scas
popa
mov
fiaddl
repnz
test
mov
inc
pop
adcb
add
clc
outsb
inc
imul
loop
rol
adc
and
nop
mov
sub
sub
mov
add
cmp
pop
sub
pop
ret
jp
xor
jmp
popf
int3
pop
xor
or
mov
pop
pop
sub
and
dec
adc
orl
inc
or
jmp
adc
mov
pop
inc
jmp
xchg
fnstsw
inc
pop
mov
adc
fildl
test
jo
jmp
add
xor
dec
in
xchg
mov
push
sub
jbe
leave
imull
repz
push
mov
jmp
push
cmp
pop
push
rorb
cltd
xchg
adc
mov
pop
fildl
cmp
mov
mov
sbb
out
pop
into
dec
das
movsb
xor
fdivrl
cmp
xor
dec
push
loopne
repz
cwtl
addl
push
mov
jbe
xlat
cltd
inc
or
test
ret
dec
add
das
xor
dec
push
dec
dec
in
mov
mov
sub
sub
in
and
add
pop
inc
cld
mov
or
push
ds
xchg
pop
cmp
repz
add
inc
adc
fildl
mov
fcmovb
pop
mov
mov
and
add
adcl
das
sub
sub
loope
popa
ss
enter
hlt
shrl
cwtl
xor
aaa
jno
push
or
add
lds
jg
scas
lea
imul
or
and
cmp
cmc
dec
rorb
jmp
outsl
push
mov
push
xor
cld
adc
cli
and
mov
loope
pop
inc
cmpsb
orb
mov
rorb
outsl
jecxz
les
pop
xchg
adc
mov
pop
jne
adc
push
lods
mov
movsl
lock
dec
adc
mov
push
cld
and
and
adc
mov
pusha
out
je
ret
push
in
mov
inc
or
dec
je
pop
in
sbb
sahf
test
and
push
cmp
mov
and
je
ds
adc
bound
scas
shl
repz
push
jmp
mov
add
sbb
sub
push
ja
push
popf
xchg
or
mov
fisubrs
sti
cmp
sbb
daa
xchg
test
add
out
lods
rolb
jg
cmc
bnd
out
rol
jmp
pop
or
cmp
mov
imull
sbb
add
cmp
pop
arpl
add
shrl
std
insl
xor
push
cmp
sti
xor
mov
xchg
adc
mov
imul
xchg
rolb
push
jecxz
jl
clc
outsb
cmp
out
or
lcall
xchg
xchg
data16
jns
cld
xor
pop
jp
mov
jp
jmp
imul
push
inc
loopne
mov
mov
xchg
sub
scas
int3
sbb
pop
test
nop
daa
daa
rcll
push
scas
nop
mov
or
sub
lock
inc
add
cmpb
add
cmp
ljmp
cmpsl
dec
orb
pushf
or
xchg
mov
or
hlt
cmpb
jmp
mov
adcb
not
jecxz
pop
shlb
push
push
inc
test
mov
ret
jle
push
aam
lret
push
cltd
fiaddl
jl
outsl
es
mov
inc
inc
dec
push
xor
add
cltd
out
stc
pusha
fldl2t
jns
sub
out
xor
cmpsl
jmp
add
jbe
inc
ljmp
push
cmp
mov
arpl
icebp
cmpsl
push
outsl
push
dec
pop
adc
add
add
addl
dec
sub
int
enter
xchg
push
dec
add
push
mov
cmp
or
push
cmp
mov
shl
pop
icebp
out
ds
mov
lea
fadds
popa
jge
lods
in
adc
xor
cwtl
pop
xor
out
sub
cld
scas
sbb
mov
pop
test
sub
in
push
xchg
not
or
bts
xchg
loope
or
or
jg
mov
mov
sub
add
pop
cld
ds
cmp
cs
jl
jb
fsts
xchg
addr16
xchg
dec
xchg
lcall
adc
mov
repnz
mov
notb
pop
sbb
pop
push
pushf
sarb
pop
pop
decl
xor
dec
adc
add
in
lahf
pop
imul
shrl
mov
icebp
push
shll
js
and
popf
add
outsl
lods
dec
mov
mov
jns
inc
dec
in
or
dec
or
sub
shll
or
aad
fwait
lcall
sahf
ret
add
and
jmp
movsb
pop
sub
xlat
out
xor
jmp
lods
push
mov
mov
or
test
out
mov
cmp
data16
add
sub
je
mov
push
mov
and
out
test
jns
inc
jb
lods
ja
xchg
jno
scas
pop
enter
das
mov
leave
push
sbb
shr
jmp
mov
push
sub
add
dec
mov
jae
xor
or
test
popa
push
pop
push
push
mov
mov
or
pop
call
xlat
adc
movsl
lcall
andl
daa
push
pop
flds
adc
mov
pop
in
mov
mov
mov
jmp
xor
ret
push
pop
pop
test
xor
sub
inc
mov
pop
inc
push
and
out
push
adc
add
pop
sahf
xor
add
nop
fsubrs
fmull
outsl
xchg
cmp
push
add
mov
mov
cmpsb
loopne
or
add
rolb
mov
add
ret
test
repnz
xor
jecxz
push
pop
sbb
push
mov
nop
mov
or
jmp
fcoms
popa
mov
xchg
sbb
pop
pop
rolb
sub
xchg
or
fdiv
sti
or
out
out
xchg
mov
pop
fisttps
cmp
push
add
mov
or
xchg
cmp
ljmp
jmp
gs
mov
je
sub
and
push
popf
mov
mov
sti
cmpsl
xor
or
mov
daa
pop
pop
cmpsb
sbb
scas
xchg
push
pop
xchg
dec
ljmp
inc
dec
pop
cmpsb
add
rolb
inc
icebp
add
lahf
es
jnp
outsl
negb
add
pop
rorb
ret
xor
fildl
shlb
test
and
xchg
mov
sub
inc
popf
andl
jg
lock
or
sub
xchg
dec
push
lcall
bound
mov
notl
mov
jl
sub
ss
test
repnz
loop
pop
push
pop
cltd
add
sbb
mov
fstpt
shrl
subb
add
out
inc
insl
cmp
mov
push
cmp
ret
cmp
mov
xorb
shll
cmp
add
adc
mov
and
ret
adc
adc
adc
ss
daa
ret
jbe
mov
push
and
dec
cmp
adc
pop
push
out
or
xor
outsb
test
cmpsl
js
push
inc
pop
sbb
push
mov
push
or
pop
hlt
jle
cmp
in
push
in
jle
add
fwait
sbb
rcrl
dec
xor
pop
pop
mov
int3
pop
adc
push
stos
push
dec
and
int3
dec
pop
mov
and
push
mov
sar
jmp
push
mov
jno
fs
push
dec
pop
mov
or
or
fcmovbe
stos
and
sarb
dec
out
arpl
rorl
push
mov
sbb
aaa
jge
cli
jg
movsl
jmp
adc
sub
ffreep
test
add
add
and
jmp
jl
jl
or
mov
scas
pop
add
sbb
test
pop
sub
push
jl
add
into
fdivrs
mov
pop
cmpsl
mov
pop
cmc
cmp
inc
ret
loop
cltd
icebp
xchg
push
out
sub
sarl
decb
mov
stc
add
dec
ret
negl
mov
push
jge
xchg
nop
repnz
sbb
insb
dec
or
add
pop
pop
shr
ljmp
test
fstpt
mov
sbbl
and
testl
dec
movlps
mov
lea
xchg
lcall
adc
dec
jecxz
pop
nop
cwtl
ret
sub
cmovae
dec
clc
dec
pop
push
add
xor
pop
xor
and
push
jns
jge
inc
into
jge
les
xor
loope
outsb
cmp
fcom
add
fimull
call
jmp
dec
cmp
push
nop
adc
popf
shrd
xlat
mov
and
push
das
test
ljmp
sarb
sbb
repnz
dec
xor
jecxz
add
addr16
das
add
test
jmp
mov
or
pop
sub
sub
push
lret
xor
mov
aas
daa
xor
cwtl
jno
outsl
daa
pop
jg
xchg
mov
and
test
out
jg
or
jmp
shll
test
push
inc
roll
jge
or
xor
inc
add
sbbb
push
shl
pop
aas
leave
ja
popf
sub
out
outsb
ja
dec
add
popa
in
adc
cmp
pop
mov
mov
in
popa
jmp
push
pop
push
sti
fsts
rcl
imul
test
jae
dec
pop
fcomps
pop
push
xchg
add
cld
push
sahf
loope
testb
out
ret
pop
sbb
fadds
jg
xchg
push
test
shrb
add
cmp
mov
add
pusha
xchg
cmp
mov
cld
pop
or
fs
es
cmp
gs
pop
mov
cmpb
in
mov
jp
and
pop
cmc
push
out
xchg
cmc
sub
cmc
popf
push
add
mov
mov
mov
pop
sub
and
xor
or
pop
incb
out
call
shl
add
lcall
jb
fdivs
in
lds
adc
je
mov
shll
push
sbb
adc
adc
sub
and
rcrb
xchg
push
fsts
mov
pop
mov
loope
outsb
mov
ficompl
sbb
pop
jo
or
pop
push
sbbb
sbb
test
in
pop
les
mov
fldl
inc
ficoms
rcrl
in
jl
dec
lds
gs
mov
call
dec
sbbb
fmull
cmpb
sti
andb
pop
sbb
cmc
or
pop
ds
adc
mov
pop
in
pop
bound
mov
pop
adc
inc
test
inc
mov
cld
pop
enter
out
xorb
sbb
push
jmp
sub
mov
inc
sbbl
repnz
jl
dec
pop
stc
mov
push
and
lahf
push
add
add
and
pushf
add
add
cld
stos
cwtl
jne
pushf
xchg
insb
out
daa
sbb
lcall
and
mov
repz
pop
lds
lret
test
cmp
int3
and
popa
cmp
fcomi
subl
and
or
or
add
xor
jmp
scas
bound
les
pop
sub
pop
or
jg
cltd
or
sbb
jmp
iret
es
xor
out
and
pop
mov
in
jno
mov
lahf
mov
dec
add
add
in
cld
pop
mov
lds
push
dec
aaa
and
sti
xor
mov
mov
pop
cmp
scas
inc
sub
stos
fldcw
inc
jmp
mov
add
call
inc
pop
sub
mov
sub
jnp
rolb
jmp
push
jne
sbb
pop
sub
out
or
push
fmuls
shll
gs
cmp
fsubs
imul
ret
std
inc
mov
shlb
clc
pop
sbb
push
add
jae
lret
mov
sub
sbb
int
xor
out
aas
sbb
sbb
cs
lret
pop
mov
xor
mov
shlb
mov
pop
clc
cmc
bound
add
sbb
divb
add
push
fists
les
mov
push
adc
add
dec
and
aam
push
orb
and
ja
lock
rcrb
push
je
add
inc
inc
adc
test
lret
dec
mov
repnz
decb
and
push
adc
leave
jns
adc
mov
pop
add
xchg
sub
lcall
cmpsl
sub
push
push
add
xor
push
ret
jbe
push
loopne
ficoml
sub
subl
or
loope
fdivrs
mov
test
lcall
fildll
adc
push
lcall
xchg
scas
cld
test
jge
ret
push
cmpsb
mov
cmc
adc
sbb
add
push
jo
out
insb
or
pop
mov
out
out
pusha
add
aas
push
mov
dec
dec
call
sub
push
movsb
or
dec
and
xor
xchg
mov
rcll
xchg
inc
sbb
push
fistps
dec
adc
mov
mov
sbb
pop
xchg
lods
test
dec
or
sub
push
jmp
mov
adc
stos
pop
or
mov
es
pop
inc
add
jnp
push
mov
mov
sub
int3
jno
mov
ja
sub
push
cmpb
mov
imul
jmp
sbb
std
push
push
jnp
mov
xor
addr16
dec
or
jbe
or
add
repnz
cmpsb
sub
pop
popf
gs
pop
dec
subl
push
xor
inc
neg
fidivl
xchg
adc
call
push
adc
xlat
les
or
jmp
sub
push
jp
not
cmp
pop
mov
shl
cmpb
inc
mov
lcall
push
dec
mov
pop
add
push
cmp
cs
loope
ljmp
dec
subb
popa
push
inc
pusha
and
jle
insb
pop
sub
and
mov
jl
or
xchg
or
je
mov
or
ss
fsts
cmp
sbb
test
or
xor
imul
jg
in
adc
or
mov
add
fadds
xor
mov
ja
jbe
aas
dec
or
fsts
call
jnp
jecxz
jg
icebp
popf
jmp
mov
xchg
imulb
sbb
lahf
inc
push
or
nop
sub
mov
inc
or
mov
call
xchg
jne
cmp
out
cmp
subb
xor
jl,pt
imul
addr16
and
or
mov
cmp
scas
aam
aad
xchg
pop
lret
cs
pop
cmp
outsb
and
add
repz
dec
mov
je
rolb
aaa
mov
add
dec
and
jge
sbb
jns
or
pop
aad
movl
push
jmp
mov
fildll
test
xchg
rcrb
or
ds
les
adc
cltd
sub
push
out
add
addl
pusha
or
scas
and
and
sub
lret
cmpsb
gs
cli
adc
mov
hlt
lcall
and
lret
std
jmp
not
and
push
inc
out
test
xchg
push
mov
insl
test
repnz
add
mov
and
inc
rcll
sbb
add
cmpb
jmp
inc
mov
ds
hlt
in
mov
or
adc
push
insb
xor
pop
ja
cli
mov
cmc
xchg
popf
scas
sub
jmp
lods
aas
add
or
dec
mov
add
jns
or
cli
sub
cmp
and
call
cltd
adc
inc
pop
and
sub
cmp
push
adc
sbb
mov
les
pop
dec
cmpl
fimuls
jp
xchg
or
push
enter
mov
jae
movsl
sbb
sbb
bound
xchg
jmp
xor
cmp
or
jbe
int3
rcll
je
push
xchg
out
dec
and
loop
push
dec
out
jb
push
imull
pop
push
imul
xor
sbb
ss
or
xor
fcomip
dec
ret
decl
cvtps2pd
mov
js
fsubs
dec
push
or
mov
pop
andb
sub
pop
add
add
ret
call
mov
mov
jno
enter
or
icebp
jae
in
ret
lods
xor
adcl
enter
test
fmull
xchg
shlb
es
lahf
xchg
pusha
clc
ficompl
push
jmp
adc
mov
mov
lret
mov
jmp
aaa
push
bound
mov
add
lea
mov
outsb
xchg
pop
sti
adc
pop
push
add
jge
gs
pop
inc
or
out
pop
nop
and
lods
dec
das
jmp
mov
jp
mov
mov
dec
mov
cmp
xor
cltd
inc
into
push
loopne
mov
adcb
mov
mov
insb
xor
xchg
jp
xchg
xor
pop
test
pop
mov
test
mov
sub
pop
call
add
and
pop
pop
pop
loop
in
push
sbbb
sub
or
out
dec
repnz
push
dec
out
mov
sub
mov
mov
add
sarl
ret
dec
cmp
add
repz
and
mov
shll
imul
mov
jo
orl
or
jl
adc
sbb
lds
mov
sbb
dec
add
mov
cld
xchg
ret
out
xor
or
shll
mov
inc
test
or
rclb
daa
je
dec
fcomps
add
cwtl
cmp
std
push
pop
sub
pop
aad
sub
jg
add
mov
add
sub
aad
mov
or
push
push
jns
addr16
dec
dec
xor
int3
inc
sarl
and
pop
mov
inc
or
push
and
aas
adc
add
pop
pusha
or
test
das
orb
and
das
fucomp
ret
scas
and
fxam
or
jge
push
push
cmp
mov
mov
push
sti
aas
adc
sbb
fnstsw
and
jnp
enter
pusha
xor
pushf
and
je
push
add
adc
pop
dec
mov
les
repz
cmp
addb
adc
stc
cmp
daa
icebp
or
xchg
push
rcll
lret
cli
mulb
jle
fs
jo
dec
mov
int3
sbb
cmp
ljmp
stos
sub
mov
imul
shll
popa
sub
lds
stos
cltd
cmp
sbb
popa
orb
xchg
and
leave
mov
pop
fwait
imul
push
push
cli
and
mov
sbb
in
dec
loop
mov
jp
add
dec
orb
add
pop
aas
test
fisttps
xor
dec
and
dec
dec
icebp
cmp
pop
imul
add
pop
jmp
jbe
outsl
fs
push
mov
js
adc
jge
push
mov
mov
push
outsl
jne
cmp
aaa
push
inc
mov
adc
iret
popa
add
pop
mov
push
ljmp
xor
mov
sahf
pusha
cs
inc
sub
jne
mov
jmp
push
dec
xor
in
add
or
mov
js
cli
bound
ss
inc
adc
lock
bound
mov
pop
inc
sub
pop
push
leave
mov
jle
pop
adc
adc
pusha
repz
adc
imul
pop
pop
jnp
inc
insl
dec
cmp
das
aad
shlb
mov
pop
cmp
push
sub
and
iret
ret
fidivl
and
mov
movsb
imul
xor
pop
push
cld
ljmp
push
out
pop
dec
and
mov
or
inc
fcompl
add
and
dec
xor
mov
sbb
jmp
xorb
pop
insb
and
pop
scas
adc
xchg
mov
or
jl
push
xchg
sbb
mov
pop
iret
cld
mov
iret
addr16
add
dec
repz
add
pop
lock
ficoml
sub
jmp
mov
mov
test
stos
leave
mov
and
inc
push
mov
dec
inc
ja
add
pop
push
shr
xor
or
inc
cli
inc
sub
pop
mov
mov
xchg
stc
lock
adc
lods
xor
ljmp
xchg
sbb
loop
rcrb
xchg
fldt
sub
add
out
test
xor
and
push
add
sbb
aas
imul
or
out
cmpb
addr16
jno
lds
ljmp
cli
dec
sub
mov
das
loop
movsl
mov
cli
mov
aas
jb
sub
jmp
xor
out
nop
inc
cmc
shlb
push
jmp
les
in
and
ret
pop
mov
js
loop
add
iret
cmp
or
pop
fmuls
pop
icebp
jb
dec
and
mov
aaa
mov
ss
sbb
jb
mov
push
push
pop
xor
outsb
shr
jge
jno
xor
rcrl
fstl
add
enter
popf
xor
daa
pop
mov
xchg
pop
add
les
and
sti
leave
pop
cwtl
imul
movsl
test
fwait
mov
mov
add
stos
cmp
dec
jmp
add
mov
cld
xor
aas
sub
mov
mov
jnp
shll
or
mov
loope
sub
pop
rolb
repz
pop
popf
adc
and
pop
lahf
mov
pop
fiadds
ds
test
push
xor
mov
mov
and
or
pop
xchg
inc
push
add
push
gs
push
add
pop
rcrl
add
cmp
std
inc
test
push
cmp
out
adc
imul
inc
outsb
pop
popa
es
pextrw
popf
dec
mov
xor
mov
adc
lret
jp
sbb
push
jmp
sbb
inc
ja
add
xor
add
addr16
sub
in
pop
add
fnstenv
in
enter
push
inc
push
mov
inc
into
pop
les
ljmp
and
aad
inc
jmp
adc
shrl
xor
xchg
jle
movsl
push
popa
stos
lret
cli
daa
mov
rcrb
sti
sub
lret
das
sub
xorl
adc
inc
scas
inc
dec
popa
scas
imul
decb
ficoml
mov
clc
loope
xor
sbb
sbb
jne
fstps
aam
or
sahf
inc
sub
xor
pop
mov
pushf
loope
aam
push
pop
jmp
jmp
cs
push
xchg
repnz
adc
mov
pop
xor
push
mov
movhlps
test
pop
ror
std
xor
lods
rorb
pop
aad
notb
or
imul
xadd
mov
jo
jne
fwait
mov
out
jecxz
cmp
or
lods
pand
jmp
clc
push
mov
lea
xchg
pop
mov
out
cld
scas
add
cs
jne
arpl
pop
pop
inc
in
mov
lcall
jns
ror
xor
add
adc
jmp
xor
xor
sub
and
mov
fdivrs
add
mov
lahf
pop
or
rolb
inc
add
out
mov
or
xor
scas
and
push
lret
sbb
ret
fwait
inc
call
sbb
aad
jbe
and
or
ss
push
adc
mov
cmp
outsl
dec
jl
add
sub
out
aas
stos
inc
lret
int
decb
add
icebp
pop
or
jb
ljmp
rcl
movsb
inc
cs
pop
mov
stc
pop
push
mov
movsb
rolb
nopl
sub
adc
dec
push
shlb
adc
push
mov
and
pop
jbe
mov
inc
xchg
mov
jg
push
mov
shrb
repz
adc
cmpsb
test
jl
or
loope
out
mov
bound
jns
dec
and
inc
arpl
aaa
lret
pop
pop
add
push
add
faddl
ds
lret
pushl
adc
inc
sbb
outsb
loopne
dec
push
jbe
movsl
inc
and
jb
or
add
add
add
rclb
or
push
mov
repnz
movnti
or
xor
or
addl
dec
dec
mov
hlt
push
movsl
inc
pop
and
push
leave
push
aad
movsl
jge
ljmp
shll
out
xchg
hlt
repnz
jb
jmp
adc
jmp
notb
adc
inc
pop
push
dec
test
ljmp
sub
fs
nop
add
sub
pop
pop
jp
outsb
or
rclb
sbb
jp
mov
and
repnz
inc
movsb
adc
jae
add
rcr
cmp
xchg
xor
or
cmc
aaa
fucomip
mov
mov
call
xor
inc
arpl
mov
mov
jecxz
push
ret
cmpsl
mov
imul
ds
push
mov
mov
call
imul
push
inc
sbb
push
ljmp
sub
push
xchg
push
add
pop
pop
popa
popf
ret
clc
fimuls
push
das
out
lds
or
pop
frstor
lret
int
loope
mov
sbb
adc
and
xchg
aas
ljmp
dec
jb
add
shr
push
call
cmp
int3
xchg
dec
mov
and
sti
or
loopne
inc
fstl
adc
call
jmp
inc
and
ret
inc
or
sub
xchg
xchg
out
sub
sar
dec
mov
pop
pop
push
inc
push
jmp
mov
pop
sbb
in
push
and
add
inc
push
push
adc
or
or
or
jnp
inc
adc
std
pop
decl
pop
pop
loope
add
lahf
xor
add
cmp
call
sub
or
adc
ja
jge
out
pop
leave
ret
sahf
adc
sarl
adc
inc
idivl
decb
std
and
cmp
fnsave
jnp
inc
test
add
sub
popf
mov
jae
lods
jmp
and
outsl
inc
xor
and
scas
add
pusha
jg
mov
pop
lcall
jmp
pop
mov
inc
aas
mov
in
fdivrs
outsb
add
mov
gs
inc
inc
iret
sbb
arpl
mull
xor
ret
jbe
dec
mov
ficoms
ret
jne
fidivl
dec
sti
int3
jmp
sub
out
nop
imul
push
mov
das
sub
out
call
inc
dec
fsubrl
push
stos
mov
cli
nop
or
adc
sub
mov
adc
xlat
fists
and
inc
addr16
pusha
pop
jl
jae
popa
mov
pop
cmp
sahf
push
inc
mov
push
mov
inc
xor
push
xchg
dec
les
fldenv
cwtl
shlb
inc
fs
in
out
mov
add
loopne
jmp
test
jecxz
sub
pop
xchg
sub
std
jecxz
subb
aam
shr
sub
sub
pop
mov
pop
sub
shlb
add
pop
test
push
or
pop
add
dec
pop
fcomps
adc
sub
cmp
add
vpor
mov
push
push
inc
leave
add
pop
sub
ja
dec
mov
mov
inc
inc
cmp
or
push
mov
rorl
jae
push
add
test
addl
in
out
mov
push
inc
inc
enter
mov
pop
shll
pop
shl
pop
mov
push
mov
sub
in
pop
inc
mov
roll
mov
cmp
mov
stc
out
fs
shlb
mov
pop
push
pop
adc
jo
jne
push
das
inc
jg
dec
sarb
jge
sub
jg
pop
push
jmp
shlb
add
push
outsl
push
add
jb
push
adc
lcall
les
in
int
jmp
sub
faddl
js
shll
sbb
shll
icebp
mov
jb
jge
pop
pushf
test
jbe
stos
adc
add
sbbl
adc
inc
jnp
lods
push
and
loopne
mov
sbb
sti
jp
inc
ret
or
mov
shl
or
pusha
fstpl
nop
cltd
out
cmpb
add
jb
sbbb
sub
and
adc
cmp
sbb
jmp
movsb
xchg
icebp
je
jl
lret
test
inc
lods
pop
ljmp
cmp
es
fcmovu
lds
and
push
jle
clc
cmc
jnp
xchg
std
adc
into
jmp
xor
pop
sbb
jle
inc
push
push
push
outsb
jmp
and
je
gs
add
jl
insl
add
add
mov
outsb
inc
adc
fadds
adc
add
loope
xor
sarb
lods
mov
popa
jne
scas
mov
xor
jp
mov
or
inc
aaa
daa
lea
push
inc
pop
and
push
lret
mov
mov
mov
jl
ret
push
mov
scas
jno
add
xor
xlat
cmpb
add
sbb
pop
or
inc
xor
out
icebp
xchg
jecxz
out
stc
or
rolb
repnz
push
imul
pop
mov
inc
mov
sub
call
sbb
add
and
push
mov
call
rclb
and
popa
or
xor
aas
or
insl
pusha
lcall
out
fisubrs
jg
lret
jmp
xchg
arpl
js
test
jnp
cmp
inc
sub
jecxz
add
rclb
jp
inc
xor
add
sub
add
cmp
mov
mov
jae
or
ja
cmpsl
mov
stos
popa
es
inc
and
rcrl
inc
imul
lea
popa
mov
movl
lods
or
adc
push
mov
or
enter
ret
and
push
dec
inc
stc
pop
mov
adc
inc
test
or
ja
jno
outsl
mov
out
xchg
jmp
jecxz
shr
push
mov
scas
xor
out
push
in
inc
sub
inc
fstl
clc
faddl
cmpsl
jmp
push
ret
dec
adc
divb
aas
pop
sub
out
add
xor
xor
pop
dec
push
mov
adcb
dec
inc
or
mov
je
pop
sti
sub
or
xor
cmpsl
ficomps
xor
inc
test
fwait
loope
push
subb
popa
imul
cmp
stc
mov
imul
sbb
pop
jge
mov
fwait
jp
mov
fs
dec
iret
dec
jo
test
or
rol
inc
push
inc
add
fimuls
adc
jge
jecxz
xor
out
rcl
push
jno
jp
pusha
shl
xor
mov
xchg
insb
or
fldl
std
shrb
jp
mov
pop
cmpb
subb
icebp
push
sbb
or
pop
push
movsb
inc
sub
and
push
sub
in
leave
push
dec
push
push
mov
mov
and
dec
ljmp
jecxz
subb
stc
repnz
pop
jne
dec
popf
fcomps
mov
aad
mov
sbb
mov
and
test
pop
scas
sub
cmp
fcom
in
mov
pop
sbb
adc
jg
push
imul
push
cmpsl
subl
jmp
jne
pop
daa
jge
and
jmp
stos
mov
cmp
cmpb
neg
ret
add
pop
pop
and
jmp
push
shlb
jne
jge
push
out
pmuludq
into
daa
in
sti
lahf
das
js
xchg
fmuls
int
add
leave
mov
and
add
sbb
add
xchg
outsl
and
jmp
xor
sbb
or
push
inc
xchg
pop
les
and
sub
gs
inc
int3
sub
mov
adc
add
stc
pop
sti
or
call
lahf
jbe
daa
inc
subb
adc
xchg
jne
rcrl
xor
stos
add
mov
mov
pop
addl
push
outsl
mov
jmp
xor
insb
or
filds
es
xchg
and
push
pop
mov
cmp
sub
jp
ja
xchg
pop
push
add
pop
enter
add
mov
dec
mov
jne
inc
or
jmp
mov
data16
add
mov
ret
sub
les
adc
popf
cmp
sbb
jbe
xor
int
push
fwait
xchg
jle
jae
push
in
inc
mov
rorl
stos
cli
xchg
pop
mov
es
and
push
adc
js
dec
add
or
adc
daa
je
inc
or
mov
add
or
adc
repnz
pusha
or
add
jmp
jo
in
push
adc
cmp
jbe
pusha
xchg
jp
jbe
sub
loope
or
or
adc
or
rorl
cmp
ljmp
xchg
push
lahf
mov
ret
loope
pop
jecxz
xchg
loop
adc
jl
pop
pop
adc
lods
rorl
cli
dec
cwtl
sbb
jmp
test
jo
lret
pop
push
insl
les
ja
lahf
push
jnp
inc
dec
das
je
pop
cmp
or
ljmp
cmp
or
jnp
nop
xchg
cmpb
jb
or
or
pop
clc
push
movsl
rolb
idivl
jmp
addl
push
arpl
xor
rol
pusha
popa
push
movsb
inc
ja
in
loop
fldl
das
dec
out
in
imul
and
xorb
jb
lock
aas
sbb
addr16
push
subl
jmp
stc
dec
dec
add
push
jmp
push
cmp
xor
pop
fstpt
jmp
lret
and
sti
or
cld
push
push
xor
mov
add
rol
bound
push
pop
iret
jmp
aam
cmpsl
in
imul
rcrl
xor
xor
pop
pop
jg
pop
cmpsb
in
adc
int
frstor
lret
xchg
ds
add
pop
out
push
ret
push
adc
push
push
mov
mov
lret
cmpsl
enter
rolb
jb
mov
add
push
scas
adc
test
cli
mov
jg
fdivrl
cmp
pop
mov
popa
jmp
sub
mov
xchg
popl
shrb
and
int
pop
pop
xor
test
and
fwait
pusha
jmp
add
nop
or
es
sub
in
fdivr
push
ljmp
mov
adc
ret
push
pop
xchg
out
sub
es
mov
dec
loop
ss
sbb
cmpsl
test
pop
jbe
ror
or
pop
pop
push
or
jbe
mov
aaa
mov
and
pop
aam
cmp
leave
jno
dec
jmp
repnz
test
mov
mov
repz
fs
scas
lds
xor
push
mov
inc
cmp
adc
lret
or
rorb
push
xor
aaa
nopl
or
ficoms
repz
xchg
out
imul
mov
mov
xchg
pusha
call
xor
cli
xor
push
xor
or
stos
jecxz
sub
or
inc
xorb
cmp
push
jg
popa
add
lods
or
mulb
sub
xchg
cmp
arpl
nop
sbb
add
sti
mov
test
push
adc
sub
lods
or
stc
sub
shll
add
sub
lock
xchg
hlt
pop
push
add
dec
orb
and
pusha
cltd
andl
int3
je
push
xchg
test
leave
push
dec
out
pop
push
inc
mov
aam
add
sub
inc
pop
in
sbbb
and
mov
fldcw
lock
ret
adc
add
xchg
nop
or
iret
pop
jle
jmp
lods
jnp
or
adcb
push
clc
xlat
mov
int
aaa
std
leave
add
and
rcrl
ds
and
add
hlt
cmc
push
dec
sbb
push
lock
pusha
jnp
fsts
shr
icebp
stc
aad
outsl
adc
repz
sti
loop
or
and
data16
cmp
push
ss
fnsave
mov
jmp
ljmp
aaa
sbbl
jge
cli
shr
das
fnstsw
andb
mov
std
dec
arpl
call
sahf
or
shl
jl
adc
xor
and
xor
xchg
std
and
or
mov
push
not
add
ds
cmp
rolb
mov
and
push
aad
out
test
in
ret
mov
ljmp
in
sbb
or
pop
es
xor
push
mul
stos
icebp
sub
ja
arpl
test
mov
xor
iret
and
adc
outsl
sub
addr16
stc
inc
fidivrs
adc
pop
pop
dec
js
pop
rcll
pop
iret
ficompl
inc
out
ret
loope
pop
push
mov
dec
xor
adc
and
fdivrs
adc
dec
lods
and
pop
sub
xor
add
pop
inc
xlat
cwtl
and
das
and
add
mov
push
dec
add
sub
jmp
cmp
addps
mov
jb
in
out
cmc
stos
dec
bound
imull
dec
inc
int3
pop
pop
cli
lret
pushf
test
jo
jmp
xchg
add
mov
pop
out
pop
roll
fcomps
mov
or
rcrb
or
pop
popa
les
sub
popa
mov
pop
mov
xchg
add
push
movsb
jg
lret
repz
stos
cltd
jg
xchg
stos
repz
sbb
mov
sbb
stc
xchg
xor
add
add
jo
adc
or
cmpsb
jge
adc
lock
shrb
sub
lret
lcall
dec
int3
mov
pop
inc
jecxz
and
stos
cmp
fcoms
pop
jb
out
pop
jns
pusha
shr
xor
push
add
cmpb
mov
subb
call
loope
imul
loopne
cmp
add
and
insb
xor
push
pop
dec
movsb
pop
xchg
imul
stos
add
and
cmpsl
add
pop
xor
or
enter
mov
inc
loop
bnd
daa
and
imul
arpl
or
cs
push
xchg
pop
neg
cmpsb
or
lds
jecxz
cwtl
xchg
jp
inc
jge
mov
xor
pop
adc
sub
imul
cmp
push
fsubrl
sbb
jo,pn
add
cmpsl
dec
pop
aaa
icebp
aaa
jp
push
cwtl
fidivs
scas
aad
jne
mov
xor
mov
aam
lret
repnz
cmc
pusha
xor
addr16
push
mov
dec
dec
adc
jbe
movsb
push
mov
jg
mov
jmp
dec
lods
jne
rorl
cmp
mov
enter
adc
pop
push
push
imul
push
cmpsb
push
daa
pop
mov
out
xorb
lcall
cld
sbbl
sub
sub
std
clc
roll
lea
jbe
daa
aas
movsb
jl
add
rol
lret
jo
lea
inc
lock
adc
fwait
mov
or
outsb
adc
rcl
js
xorps
dec
stos
sbb
add
test
push
pop
pop
push
jmp
daa
inc
push
pop
jmp
faddl
pop
inc
ret
and
pusha
add
icebp
jge
popf
dec
mov
mov
fcom
cltd
ljmp
xor
dec
mov
popa
imul
out
addr16
or
out
sbb
cmp
or
ffreep
pop
mov
sub
dec
in
or
mov
dec
das
stc
and
imul
adc
sub
push
inc
mov
out
add
or
popl
mov
mov
stos
nop
inc
mov
ficompl
nop
pop
xor
pop
and
mov
loop
push
sbb
addb
daa
push
sbb
jl
repz
andl
add
push
or
pop
notl
in
rclb
out
pop
inc
or
cmp
addb
fs
push
add
xor
lahf
sub
shr
ffree
adc
jl
push
dec
jnp
mov
jbe
aam
or
and
and
add
pop
jmp
push
ds
dec
movsb
cmp
sub
sbbb
shl
ljmp
push
shlb
push
das
xchg
cmp
adc
pop
push
add
pop
dec
call
shll
and
mov
icebp
and
iret
scas
call
in
push
add
lods
ds
or
das
lods
enter
pop
pushf
xchg
add
fs
js
stos
add
cmp
stos
mov
jmp
js
fucomip
and
test
xor
mov
mov
or
pop
sbb
roll
pop
or
shr
pusha
shl
idivb
pusha
sbb
inc
and
mov
popw
ret
pop
std
loopne
mov
psllw
jno
jb
add
sub
pop
sub
add
adc
and
ficoms
out
rcrl
movd
nop
sub
or
cmp
push
push
mov
imul
cli
sub
std
out
push
movl
ss
das
mov
data16
or
lret
pop
stc
add
inc
mov
cli
adc
xchg
outsl
push
fldcw
mov
mov
cld
int3
daa
ds
mov
fbld
je
xchg
inc
imul
jnp
adc
loopne
xchg
xlat
lds
iret
inc
int3
mov
and
pop
xor
inc
loope
jmp
jns
inc
push
push
rorl
pop
mov
adc
inc
cmp
pop
inc
fdivrs
or
or
fadds
pop
sub
je
das
cwtl
dec
jmp
mov
mov
mov
dec
pushf
stos
add
scas
in
or
mov
je
mov
mov
sbb
adc
dec
in
ret
mov
test
es
std
xor
or
rcrb
incl
xor
ret
xor
in
push
mov
das
mov
add
outsl
lds
ljmp
push
mov
pop
pushf
add
push
push
rorb
sub
or
dec
jmp
popa
icebp
inc
push
mov
adc
pop
imul
sub
pop
and
fsubl
add
sub
mov
test
imul
inc
mov
int3
mov
push
xor
sub
mov
std
mov
push
hlt
ror
sbb
xor
dec
stos
xchg
fldenv
or
sub
push
out
pop
outsl
stc
arpl
add
add
jns
adc
mov
jl
cli
pop
gs
or
or
and
cmp
sub
movsl
popf
jnp
lret
push
mov
mov
fdivrl
aaa
movb
inc
add
dec
push
push
stc
fistps
or
and
decl
daa
mov
jne
xor
aad
mov
or
add
hlt
add
sarb
jp
sbb
imul
daa
lods
adc
iret
push
gs
pop
mov
aad
mov
jge
xlat
sbb
shrb
dec
push
xor
pusha
push
add
daa
xchg
adc
sub
testl
dec
push
or
ja
fisubl
imul
mov
dec
pop
test
lods
dec
inc
or
and
push
xor
jnp
das
push
daa
jno
mov
jmp
sbb
sbb
in
inc
jne
imul
dec
push
or
into
sub
dec
nop
mov
leave
jo
out
lret
jb
iret
push
pop
pop
addl
xchg
inc
mov
jne
orb
mov
das
push
cwtl
sub
sbb
cs
lret
jb
idivb
aaa
lret
mov
daa
shlb
sub
sub
leave
loopne
jg
inc
in
add
jmp
lret
sub
lret
or
adc
push
sbbb
xchg
imulb
inc
inc
out
push
or
int
jl
fimuls
dec
loopne
push
cmc
in
inc
inc
andl
mov
or
xor
jge
and
icebp
and
bound
add
jns
aaa
xor
insb
adc
pop
jno
cmp
lcall
cld
aas
mov
sti
popf
into
test
lds
sbb
iret
subl
xlat
pushf
adc
loopne
add
inc
shll
cmp
push
sub
mov
push
jb
es
adcb
jo
mull
pop
xor
pop
ret
mov
pop
movsl
ljmp
pop
mov
inc
push
bnd
and
pop
push
jb
cmp
std
addr16
jmp
movsb
in
add
in
xor
outsb
xchg
push
faddl
push
stos
xchg
test
and
mov
push
jb
jge
stos
xchg
sbb
data16
out
or
into
ljmp
mov
jmp
in
and
rcrl
out
sbb
add
and
xchg
xor
pop
pop
sbb
mov
add
scas
cmp
push
add
inc
mov
xor
mov
dec
add
clc
out
cwtl
cs
or
repnz
idivb
and
push
dec
fisttps
jbe
mov
ret
repnz
cmp
pop
dec
sbb
lock
xor
icebp
xchg
fidivrs
add
lods
push
mov
cmp
add
xor
inc
jae
mov
adc
fdivl
pop
xchg
ret
xchg
and
adc
push
sbb
int3
cmpsb
daa
sbb
push
pop
xor
mov
jmp
lret
out
jmp
sub
cmpsl
movsb
and
stos
iret
xchg
and
cmpsl
jbe
jae
testl
loopne
fs
ret
cmc
lds
jo
fnstsw
aaa
lret
pop
popa
push
xchg
add
shr
xor
das
inc
or
ljmp
sub
adc
push
notb
add
xorl
add
add
mov
ficomps
adc
xor
mov
stc
jge
ret
std
out
data16
into
push
stc
pop
hlt
mov
notb
sub
push
push
pop
clc
and
pop
and
andl
add
sub
mov
mov
mov
xor
insb
cmpsl
ret
jnp
icebp
mov
sbb
aam
cmp
pop
sbbl
stos
push
repnz
lret
xor
push
xchg
lcall
push
idiv
push
les
ret
inc
ds
and
dec
mov
pop
scas
mov
lahf
mov
dec
add
rorb
or
xchg
arpl
lcall
andb
imul
add
add
sub
pop
push
sbb
in
bound
inc
popf
shr
push
xor
test
mov
in
sub
psrlw
out
cmp
ret
loopne
and
push
dec
add
es
lods
add
and
pop
cld
mov
mov
hlt
aas
mov
xchg
jmp
or
mov
rol
scas
pop
in
movsb
out
and
pusha
dec
pop
mov
shl
push
inc
dec
adc
outsb
mov
iret
pop
mov
bound
or
xchg
inc
movsl
out
push
push
pop
push
fidivrl
imul
xchg
jnp
les
sbb
cs
mov
add
out
mov
rcl
cmc
and
xor
mov
push
mov
mov
jb
adc
inc
push
icebp
add
xor
psllw
or
lea
stos
les
inc
mov
aas
sti
pop
pop
loop
leave
add
shlb
pop
lahf
or
mov
mov
jnp
and
in
lock
jae
pop
mov
mov
push
stc
pop
ror
cmovno
jmp
imul
insb
negb
sub
roll
sub
push
push
jb
mov
arpl
or
ss
xor
mov
mov
aam
jecxz
dec
in
sub
mov
cmp
jmp
add
arpl
das
push
mov
dec
shr
pop
jmp
mov
lgs
rclb
and
or
pop
bound
jbe
push
xchg
mov
dec
ljmp
ds
std
out
xchg
ljmp
jno
or
testb
sbb
jb
or
xchg
xchg
ds
mov
and
add
in
ja
mov
jge
pminsw
push
rorl
sub
cmpl
or
dec
pop
adc
loop
xor
stos
addl
sbb
xchg
cmp
or
aaa
aaa
jle
or
out
sbb
jg
lods
dec
xor
inc
mov
sub
out
adc
adc
rorl
out
pop
je
mov
jns
add
add
xor
pop
push
int
outsb
ljmp
xchg
cmp
push
mov
mov
fildl
dec
in
mov
aam
mul
mov
jmp
pop
sbb
fwait
loope
ret
orb
sub
in
call
rcrb
push
icebp
cmc
mov
cs
add
scas
sub
add
cmp
pop
push
out
xchg
jbe
fsubrl
cwtl
pop
mov
es
lahf
jg
mov
push
sbb
loop
lahf
sbb
pop
push
mov
sub
mov
pusha
push
mov
mulb
pop
loop
xchg
mov
mov
pop
pushf
cmpsl
movsl
xchg
xorl
pop
outsl
mov
push
pop
jp
cmp
fs
pop
out
push
or
fsubrs
dec
or
add
mov
ds
lods
arpl
pop
test
test
outsl
adc
add
add
in
and
dec
aas
push
aas
xchg
mov
cmp
leave
into
dec
faddl
ljmp
bound
mov
mov
rolb
mov
jne
sti
adc
lods
sub
inc
lock
mov
in
jmp
and
jl
pop
cmp
ds
cmpsb
push
sub
shlb
cmp
xchg
sbb
jge
mov
dec
cmpl
sub
pop
jle
pop
scas
inc
add
jne
xor
push
pop
aad
imul
stos
pop
cwtl
insb
icebp
dec
out
sub
jmp
rorl
xor
pop
or
in
into
cmp
adc
lds
push
jb
push
aas
dec
push
decl
adc
xchg
cmp
mov
inc
cwtl
xor
out
mov
add
and
pop
scas
iret
push
adc
icebp
and
dec
jmp
dec
add
shld
ds
and
ljmp
push
jnp
or
jne
sub
sbb
sbb
shll
nop
pop
xchg
sbb
in
dec
jne
adc
into
adc
sbb
leave
sbb
add
or
int3
xchg
mov
mov
or
or
sti
push
or
lods
or
fiadds
or
xor
or
jle
cmp
sub
sbb
rorb
and
and
or
push
nop
cwtl
xor
frstor
adc
pop
adc
pop
sbb
push
dec
sbbb
test
mov
bound
insb
or
inc
aaa
cltd
inc
stos
jb
ss
clc
fcmovnb
or
jle
orl
and
test
push
xor
cltd
push
adc
jmp
cltd
shrl
push
faddl
xor
add
fiaddl
mov
add
nop
adcl
dec
andl
and
les
call
xor
int3
push
sbb
mov
sbb
lcall
js
and
xchg
inc
out
inc
lret
movsb
cmc
lds
lret
adc
jo
stc
cltd
out
or
mov
bound
or
sub
xor
and
lods
xor
adc
dec
leave
pop
cmp
rcll
adc
push
adc
add
mov
addb
fiadds
sbb
add
scas
lock
sbb
mov
cmp
movsl
fs
imul
cld
push
adc
arpl
das
xlat
sbb
jl
or
rolb
sub
sbb
add
fadd
push
ret
or
pop
add
mov
and
xchg
pop
enter
and
movsl
hlt
nop
mov
vfrczss
pusha
pushf
cld
call
push
out
jle
ss
mov
adc
inc
sub
or
jmp
mov
mov
add
dec
or
je
loope
push
add
mov
loopne
mov
dec
xor
push
push
lea
add
jno
shl
xor
mov
neg
ja
int3
jl
cmp
outsl
mov
xchg
inc
loope
lock
jae
repz
mov
push
filds
and
sub
pop
adc
call
cmp
mov
and
xor
ss
pop
sub
pop
cpuid
nop
shrb
or
add
add
bound
cmp
and
pop
push
xor
and
inc
popa
xor
xor
pop
outsl
sbb
fs
outsl
adc
aas
jmp
clc
inc
sti
pusha
add
negl
es
fwait
daa
jp
loop
push
xchg
push
jmp
lea
insl
jo
loopne
add
mov
add
inc
pop
cmp
subl
push
or
jbe
pop
add
nop
ret
push
test
inc
repnz
xchg
ljmp
lret
lea
sub
jmp
js
add
sbb
lods
cs
add
add
jle
out
jbe
lret
data16
sbb
adc
jmp
mov
jle
mov
mov
ja
or
aad
lret
push
rclb
mov
fs
out
lds
add
mov
adc
and
and
inc
pop
mov
add
push
ja
jmp
call
int3
incl
popf
xor
aas
dec
cmp
lahf
daa
jmp
or
popf
adc
lahf
inc
mov
xchg
mov
pop
jg
inc
sub
add
add
jmp
add
enter
imul
lods
testb
pop
popf
or
scas
or
fistpl
outsl
cld
adc
pop
pop
xor
mov
mov
ret
fisubl
or
xchg
scas
xor
mov
inc
jmp
into
aas
mov
hlt
adc
stos
insl
xor
test
adc
enter
pop
sub
push
mov
in
cmpsl
dec
add
add
sub
imul
add
dec
fld1
and
jp
dec
cld
arpl
rcll
loop
dec
enter
xchg
jl
push
pop
nop
or
dec
push
or
call
sbb
sti
jmp
or
push
mov
in
fcomps
jmp
add
xor
inc
pop
push
and
aaa
sbb
rep
sbb
mov
cmp
out
add
aas
add
sbbl
jmp
mov
pushf
sub
rcrb
das
clc
sbb
enter
sub
add
fcomps
push
loop
outsb
adc
push
movsl
stos
cltd
jo
bound
ss
add
clc
push
or
test
dec
dec
or
fimuls
shr
push
or
sub
push
jne
jnp
xchg
sbb
popf
jns
sbbb
adc
adc
and
adcl
inc
pop
lds
imul
and
jle
inc
sahf
add
aam
mov
sub
cmp
ss
push
mov
sub
inc
jbe
sbb
cmp
or
ja
or
xor
push
cmc
int3
andl
orb
and
mov
push
and
or
jmp
mov
xor
or
cltd
inc
push
outsb
in
sub
add
psubusw
xchg
dec
das
shll
sahf
fadd
inc
adc
ljmp
mov
mov
das
mov
add
mov
sbb
subb
bound
cmp
adc
and
aam
xchg
cmp
bound
test
xorb
ret
pop
and
inc
jno
fs
outsb
pusha
mov
xor
sub
dec
int3
fnstcw
shr
pusha
pop
push
pop
jmp
dec
and
dec
inc
add
cltd
mov
cwtl
jmp
mov
js
push
and
push
adc
jle
and
cmpsl
es
enter
ljmp
in
roll
pop
dec
dec
push
inc
fcmovb
xor
push
je
sub
pop
or
add
jbe
sub
xchg
add
push
pop
loopne
xor
rcrb
call
out
sbb
jo
repz
pop
addr16
add
inc
push
es
xor
push
das
addr16
push
stos
mov
sub
push
push
pop
ret
arpl
cmp
pop
push
or
jmp
jo
push
enter
addr16
and
cli
sbb
push
outsl
iret
imul
in
movsb
cmp
pop
pop
cmp
and
mov
adc
lds
clc
push
mov
clc
std
pop
repnz
fnstcw
and
add
xor
cli
loope
fstpl
sub
or
jo
mov
lea
lahf
and
das
mov
testb
pop
sub
add
cld
cmpl
dec
or
dec
sbb
pop
mov
test
call
xchg
mov
jns
rcl
adc
sub
sub
out
pop
das
jmp
mov
ret
orb
shrl
pop
test
push
sub
or
imul
js
es
adc
shl
add
xchg
fdivrl
shr
push
mov
push
leave
sub
adc
mov
mov
cmp
loop
repnz
jo
pop
call
enter
inc
lret
test
cmp
mov
jae
loope
cmp
lahf
hlt
pop
imul
mov
adc
sub
dec
xor
dec
stos
add
push
add
jae
or
rorl
push
insb
inc
xchg
fmuls
push
es
movsl
push
ret
or
sahf
mov
cmp
pop
test
push
icebp
pop
mov
inc
mov
movsb
mov
add
push
mov
gs
push
popa
sub
mov
sub
dec
in
and
or
mov
cmp
xchg
das
sbb
push
push
jg
inc
add
mov
jmp
add
cmp
out
and
mov
bound
scas
decb
in
pusha
into
mov
push
add
scas
shlb
dec
dec
jae
mov
bound
xor
adc
pop
outsb
ficompl
push
fildll
jg
or
dec
sbb
or
pop
pop
adc
enter
imul
sbb
or
idivb
pop
rcll
jmp
inc
testb
pop
sub
mov
pop
xchg
add
add
add
vmovupd
ljmp
dec
sub
dec
or
je
test
cmp
rcll
add
sahf
sbb
lahf
sbb
cmc
inc
or
call
and
pop
push
hlt
cmp
std
jle
push
addb
pop
or
mov
mov
dec
fs
mov
add
shll
repnz
pop
add
ficoml
fildll
daa
sbb
inc
add
xor
xorl
jo
xchg
sbb
lahf
add
aas
pusha
sti
or
negb
inc
dec
pop
pop
ret
sub
fwait
jbe
in
cmp
lods
cmp
or
pop
xchg
cmpl
in
icebp
cmpsl
in
inc
xchg
lcall
push
push
jmp
mov
push
lea
out
or
mov
and
xor
movsl
icebp
mov
hlt
out
add
lds
fldt
test
pop
call
jno
pop
mov
cmp
fwait
jne
inc
jmp
xor
pop
imul
cs
add
mov
or
and
aam
xlat
or
scas
fsubrs
mov
jge
adc
cmp
mov
js
and
lahf
push
sbb
xor
push
pushf
adc
icebp
lret
mov
movsl
and
mov
mov
out
cmc
dec
sti
or
fs
clc
movsl
push
add
sbb
addr16
add
sbb
shrb
jmp
mov
and
fsubl
inc
push
out
int
shll
bound
mov
mov
test
les
mov
dec
rorb
xchg
jp
push
adc
add
add
gs
das
mov
aas
inc
mov
sub
adc
in
mov
pop
pop
mov
lds
pop
push
hlt
and
or
pop
fldl
imul
test
notb
pop
test
ljmp
jg
imul
enter
sub
aas
rolb
sbb
or
insb
and
pop
xor
mov
and
adc
xchg
or
and
or
pop
push
ret
jne
mov
ljmp
dec
sbb
dec
add
push
xchg
mov
out
push
mov
sbb
xchg
mov
dec
mov
popa
stos
mov
and
roll
jle
sbbl
mov
mov
push
push
and
cwtl
je
and
push
add
jg
pop
dec
lods
faddl
dec
xor
inc
add
ds
push
mov
out
xchg
sti
dec
push
adc
adcl
cmpsl
fadd
stos
ss
sbb
js
add
nop
fsubr
and
mov
cmp
jge
push
scas
mov
insb
in
xchg
add
or
jo
js
lds
pop
push
ret
icebp
repnz
adc
xchg
je
imul
jno
shrl
sub
leave
mov
pop
test
cmp
cmp
or
daa
clc
dec
idivb
sub
js
mov
mov
je
jne
add
jmp
xorb
rolb
bound
lods
pop
pop
sbb
outsb
into
shr
repz
int
push
inc
add
adc
sbbb
push
dec
add
std
movsb
jo
pop
inc
mov
mov
inc
inc
std
in
pop
hlt
jne
leave
adc
jmp
add
or
cmc
or
sub
xor
inc
gs
mov
repz
add
pop
pop
out
and
das
mov
jmp
push
imul
dec
mov
jp
inc
pop
or
add
or
loopne
xchg
rcrl
cmp
mov
mov
std
xor
icebp
lahf
daa
js
inc
push
mov
add
std
xor
dec
jmp
jle
or
out
push
loopne
pop
pushf
in
mov
xor
or
in
aad
xor
shll
popf
sbbb
stos
ret
ja
iret
pop
pusha
js
jp
xor
cli
add
adcb
mov
out
fmuls
out
add
stc
std
fcoml
sub
fs
jnp
lods
add
xchg
lds
insl
lret
cwtl
cmp
or
es
pop
xchg
and
add
sti
xor
pop
sub
adc
fcomps
popa
dec
bnd
idivl
push
mov
inc
add
fcompl
xor
pop
aad
and
xorb
push
jg
cmc
mov
subl
les
pop
add
mov
xor
add
sbb
adc
xor
jnp
jmp
and
add
fldenv
dec
clc
or
call
xlat
pop
shr
push
enter
divl
cmp
mov
mov
pop
loope
leave
cmp
cmp
dec
div
jo
or
jmp
bswap
cmp
cld
xor
push
xlat
loopne
aam
adc
mov
es
mov
jg
bound
mov
loope
cmp
jmp
repz
mov
add
sub
jae
and
movups
out
jl
adc
subl
loopne
loopne
mov
es
or
sbb
mov
or
flds
rorl
pop
adc
push
xor
test
dec
push
fs
enter
outsb
ds
aad
in
das
es
dec
xchg
incb
push
sbb
pop
xchg
mov
sub
pop
imul
sbb
out
pop
add
movsb
mov
cmp
jecxz
sub
and
insb
mov
repnz
bound
or
inc
add
neg
shr
push
bound
adc
add
add
dec
and
int
jnp
out
pop
sub
pop
inc
dec
sbb
insb
into
xor
aas
jmp
popa
inc
ret
ret
jge
sbb
fistl
pop
cmp
mov
lods
js
dec
push
mov
and
dec
lods
pusha
jnp
fmull
in
mov
jl
jmp
xor
sub
lods
cltd
loop
fisttpll
loope
push
movsb
std
out
jno
mov
fsts
rorb
jo
cmpsb
add
test
push
inc
ret
dec
dec
add
inc
lds
inc
jge
jp
and
or
jns
jmp
fsubrl
std
xor
mov
jmp
outsb
mov
inc
arpl
outsl
adc
push
pop
in
scas
mov
adc
push
push
sbb
and
sub
cwtl
in
in
mov
je
push
push
sub
sub
adc
xchg
sbb
jo
mov
jge
mov
les
or
fisttps
jmp
imulb
xchg
push
add
sub
test
xor
jl
xlat
add
out
pop
jmp
pop
ss
rolb
pop
enter
pop
not
lcall
in
xor
mov
dec
jl
cmpl
loop
or
pop
pop
sub
jmp
cld
rcrl
outsl
cmp
xchg
sub
mov
jmp
or
mov
sbb
cmp
ds
cs
fldenv
test
andb
push
add
xor
jmp
lods
sub
or
pop
in
repnz
repz
jl
lahf
push
fs
pop
adc
sbb
sbb
pop
pushf
sbb
jecxz
sbb
pop
jne
mov
ljmp
scas
and
mov
adc
mov
daa
insb
mov
shlb
incl
lea
popa
sahf
or
xor
push
adc
sbb
xchg
fimuls
aad
and
insl
pop
push
mov
and
dec
jmp
cwtl
std
adc
inc
lret
cmp
xchg
and
xor
xchg
cli
cmpsl
stc
pop
leave
testl
je
roll
ljmp
enter
xchg
icebp
bound
lcallw
filds
inc
lret
pop
and
xchg
sub
sub
push
cli
jge
dec
and
jmp
cmc
cmpsb
data16
pusha
push
arpl
flds
inc
movsb
stos
cld
imul
mov
fs
orl
dec
ds
daa
xchg
inc
repnz
push
mov
add
fs
repz
stos
mov
clc
pop
lret
jb
push
or
jle
jp
enter
imul
inc
sbb
repnz
or
lock
negl
ja
ja
jle
sahf
mov
or
pushf
add
sub
mov
and
jmp
xor
pop
xchg
nop
fimull
cli
cmp
or
mov
sbb
frstor
adc
pop
push
enter
lcall
rorl
aad
sub
inc
xchg
out
sub
or
movsl
fiaddl
shr
add
aam
mov
adc
push
and
xor
cltd
xor
cmc
sub
add
push
pop
pop
out
pop
shr
sbb
push
or
filds
or
aad
or
xchg
sahf
mov
add
jno
fs
push
and
dec
xchg
mov
push
sub
es
adc
xor
pop
dec
push
mov
cmp
xchg
cmp
xor
adc
leave
pop
jb
fs
add
std
jae
je
sub
cmc
dec
mov
mov
pop
das
daa
inc
fisubrs
outsl
add
clc
add
pop
imul
test
ja
fcmovu
pop
mov
addr16
movsb
loopne
push
add
popf
xor
enter
popf
fimuls
mov
and
mov
add
adcb
in
jbe
out
pop
data16
arpl
jmp
cwtl
mov
loop
ljmp
push
ljmp
imul
shlb
xor
add
daa
pop
inc
jae
rolb
in
std
je
lahf
inc
dec
jnp
lds
adc
lds
cmp
pop
cmpsl
xor
jg
or
sub
addr16
mov
push
pusha
jne
inc
or
fidivrs
add
pop
xchg
insb
mov
idivb
movsb
xchg
or
std
xchg
test
into
add
mov
out
jae
cmp
loopne
enter
sbb
and
inc
in
icebp
mov
dec
sub
ffree
iret
cs
push
dec
mov
jmp
xchg
xchg
sti
mov
adc
setb
mov
gs
daa
pop
xchg
scas
int
testl
mov
lret
dec
rorb
aaa
mov
cld
inc
xchg
sub
jns
test
outsb
ss
fstps
or
jbe
jg,pn
xchg
test
sbb
and
cltd
xchg
sbb
pop
xchg
cmc
jmp
stc
out
sbbb
or
or
repnz
loop
mov
fs
mov
jmp
pop
xchg
clc
mov
mov
push
push
scas
fldcw
push
adc
and
mov
rorl
pop
out
jmp
in
push
mov
xchg
shl
cs
pop
inc
cs
cmp
fs
in
popa
add
pop
jnp
fidivrs
mov
lock
dec
sub
jo
mov
mov
pop
dec
add
sar
mov
cli
push
stc
out
pop
jb
in
jo
adc
adc
pop
popa
mov
dec
push
mov
and
dec
push
ret
cmp
ds
xchg
or
lret
inc
adc
jecxz
add
mov
push
jge
mov
call
push
jl
or
lret
add
add
fildl
test
mov
pushf
add
fwait
repnz
insb
dec
fldenv
data16
add
pop
and
aaa
add
in
and
andb
and
jle
ret
xchg
js
xchg
dec
shrl
or
xor
add
mov
mov
mov
add
and
cmp
jmp
add
inc
xchg
fldcw
je
movsb
push
sbb
aam
pop
neg
xchg
ficoml
loop
or
xlat
cmpsl
popf
int3
outsl
dec
push
and
dec
aaa
bnd
pop
push
adc
and
push
push
or
add
or
cmpsb
addl
or
push
lods
test
xorb
neg
int3
push
push
xchg
push
cmp
pop
mov
pop
push
pusha
sti
push
cmp
nop
repnz
mov
int
inc
ja
dec
push
in
jl
rorb
inc
sti
arpl
push
in
scas
idivb
add
ljmp
sub
cmp
es
pop
cltd
pop
xorb
jge
mov
add
dec
addr16
hlt
nop
xor
mov
sbb
stos
ljmp
or
or
addb
jbe
inc
mov
je
cli
push
mov
test
shl
and
add
push
pop
mov
add
jmp
in
inc
outsl
sbb
lret
sbb
in
lds
push
push
push
cld
mov
add
mov
push
jmp
push
xchg
nopl
xor
mov
cli
add
or
inc
ret
arpl
int3
sbb
lret
inc
ret
add
scas
mov
push
push
movsl
pop
sar
add
mov
push
cmpl
xchg
dec
fldl
push
jo
push
adc
shlb
sub
dec
add
xchg
cmc
ljmp
inc
jb
mov
push
or
push
mov
pop
or
icebp
dec
xor
jmp
cs
cwtl
andl
sub
int
xor
and
pop
lret
mov
es
inc
push
cwtl
jmp
fdiv
push
stos
jmp
popa
mov
sbb
push
cmc
ret
jns
lret
push
mov
push
jb
aad
aam
fisubl
lods
cmp
jbe
mov
rolb
dec
sbb
mul
rcll
sti
inc
push
sbb
jne
cmp
mov
push
mov
or
and
out
xchg
sbb
addb
xor
arpl
hlt
sub
negl
lods
nop
adc
jno
stos
sub
cmp
mov
sub
outsl
out
inc
mov
loope
rcrl
inc
imul
mov
jecxz
testb
xor
pop
aas
inc
jo
ds
jge
jp
or
dec
jl
mov
pop
jmp
sahf
rcrb
or
cs
add
movsl
es
jge
inc
daa
jne
sub
mov
andl
push
ljmp
push
or
clc
xlat
inc
adc
loop
mulb
stos
pop
out
frstor
sbbb
sar
sub
sub
pop
mov
shl
cmp
pop
mov
pushf
js
adc
mov
jmp
jae
js
and
mov
xchg
sub
xchg
movsl
out
lock
pop
fdivrs
cmp
pusha
out
xchg
dec
test
subl
push
push
mov
pushf
idivl
icebp
sbb
adc
das
push
addr16
sti
mov
test
shl
add
test
jl
sub
stc
xor
ret
cwtl
push
jge
sbb
add
adc
add
fsubrl
pop
add
fldenv
dec
sbb
pop
sub
mov
cmp
insl
sti
add
data16
mov
jmp
ljmp
sub
movsb
or
movsb
movsl
hlt
dec
push
popf
rcll
mov
shrl
pop
adc
shlb
add
mov
aas
js
lods
mov
js
es
insl
das
inc
loope
sub
mov
xor
dec
insb
out
jnp
sub
scas
sub
es
and
out
inc
fdivl
mov
sbb
andl
add
in
mov
lds
aas
pop
cmpsb
inc
push
test
or
add
push
jp
adc
in
adc
in
inc
pop
mov
push
push
sarb
leave
mov
jno
add
lock
or
cmpsl
lahf
js
push
jmp
pop
lret
pop
in
lods
push
add
add
les
mov
in
dec
loop
xchg
stos
pop
add
mov
sbb
fmul
cmp
ja
add
or
cli
jmp
sub
das
sub
les
dec
or
fadds
mov
or
jbe,pt
push
test
rcll
lds
and
ljmp
incl
je
enter
stc
scas
xor
nop
neg
cvttps2pi
vaddss
out
std
insb
or
xor
cli
cwtl
bound
ret
jmp
inc
js
push
fcomi
mov
xor
test
sub
and
cmpsl
fiaddl
out
dec
xchg
pop
dec
pop
dec
pop
test
repnz
mov
bound
imul
insb
jle
out
adc
sahf
mov
sub
test
loope
pop
mov
add
jne
test
orl
inc
das
add
dec
jmp
sub
adc
movsl
pushf
push
jge
jle
xor
dec
stos
mov
sbb
scas
jnp
lret
xchg
jno
repnz
adc
test
push
and
cld
mov
jp
stos
or
outsl
or
insl
cmp
push
dec
mov
in
pop
hlt
add
jo
xor
das
ficomps
sbb
testl
or
addb
mov
repnz
out
sub
dec
adcb
fisttps
adc
xchg
sbb
inc
rcll
arpl
adc
out
rorl
mov
xor
push
push
shll
fiadds
xchg
mov
mov
pop
add
add
or
mov
add
xor
push
daa
adc
pop
out
mov
add
lock
addl
adc
mov
incl
pop
push
add
mov
ljmp
loope
push
jmp
cld
fistps
sbb
pop
mov
das
test
jl
rclb
lock
mov
mov
add
movsb
pop
jne
cmp
rclb
pop
je
or
out
mov
xor
jmp
nop
cmpl
ficomps
push
xchg
rol
mov
outsl
cmpsb
mov
pop
test
fnstcw
jmp
cmpsl
jl
outsb
push
rclb
pusha
lods
sub
jns
les
adc
xchg
or
jmp
mov
add
cmpsb
adc
mov
jae
jmp
icebp
push
jecxz
push
mov
int
adc
and
rolb
sbb
ljmp
mov
push
aaa
incb
and
mov
push
xor
and
xchg
push
ret
dec
jl
call
sbb
aaa
inc
ret
rolb
sbb
mov
push
add
add
or
adc
fldcw
mov
lods
jo
xor
not
jno
fiadds
mov
les
xlat
adc
hlt
fwait
cmp
and
dec
add
sub
or
and
jmp
jbe
add
pop
xor
or
popf
mov
push
ds
xor
pop
inc
inc
pop
add
mov
push
les
pop
and
lret
sbb
adc
lcall
dec
push
addr16
jo
cmp
movsb
inc
sub
dec
sbb
or
mov
xor
jmp
aam
js
push
sub
sub
gs
cmp
iret
cmp
cwtl
lret
sub
sahf
pushf
xchg
je
inc
sbb
xchg
pop
xchg
xor
orb
or
daa
dec
inc
int
pop
cmp
cli
fdivl
mov
sbb
jmp
cmp
push
jns
xor
jle
jge
add
arpl
outsl
xor
shll
dec
ljmp
and
sub
outsl
xchg
sbb
cmpsl
mov
mov
xor
inc
cli
pop
call
and
jmp
imul
sahf
lret
pop
ret
loopne
popa
inc
push
sub
add
mov
pop
jae
sbb
orl
fsubrs
daa
inc
push
pusha
jnp
je
js
mov
mov
lds
or
aam
push
jns
jl
bound
pop
inc
jmp
clc
mov
ja
ss
sbb
add
rcrl
stc
adc
dec
inc
adc
lds
rcrl
jmp
push
push
cmp
stos
and
nop
outsb
test
rorb
jecxz
and
dec
add
add
adc
ds
imul
sub
lcall
test
mov
mov
push
mov
inc
lock
mov
cmp
lods
jmp
push
add
fcmovnb
imull
outsl
xchg
les
mov
sub
mov
jmp
mov
rcll
push
push
add
movsl
aad
add
fyl2xp1
xchg
and
push
fwait
push
stos
call
cmp
jg
pop
pop
mov
adc
add
stos
mov
lret
pop
xchg
pusha
lea
addr16
ret
ja
cs
test
xchg
fmuls
push
push
mov
shl
jmp
jb
movsl
repz
fwait
dec
sub
sbb
xor
inc
pop
add
fcomps
pusha
out
push
push
jmp
out
cwtl
outsl
movl
sub
sub
rol
outsl
leave
fcoms
dec
cltd
adc
push
rcl
mov
scas
fcmovnb
push
test
jl
inc
repz
sub
mov
in
adc
lds
add
jmp
pop
ret
mov
subl
out
lds
sti
adc
add
jmp
jle
int3
xchg
or
push
ds
mov
xor
clc
inc
data16
mov
dec
sub
movsb
xor
mov
mov
pop
dec
sub
pop
popa
dec
das
loop
push
dec
xor
or
mov
sub
in
int3
and
inc
add
push
add
jmp
shr
xchg
push
rorb
out
idivb
dec
repz
sbb
aaa
shrb
pop
inc
and
lods
aam
adc
push
out
movsb
lds
outsb
aam
jbe
dec
push
push
sub
stos
cmp
add
ret
fistpl
rcrb
mov
sbb
push
xchg
push
cmpsl
cmpsb
cs
mov
xchg
mov
aad
or
mov
loopne
stos
add
push
cltd
es
int3
popf
push
leave
xchg
cmp
aas
loop
pop
pusha
mov
add
outsb
pop
adc
lods
cmp
xor
or
negl
in
jmp
loopne
mov
dec
and
add
xchg
ljmp
daa
cmp
inc
addr16
inc
or
outsb
mov
pop
add
inc
out
inc
pop
roll
jmp
sub
mov
je
cmpsb
sbb
pop
jo
add
inc
rolb
aaa
push
imul
idiv
push
jmp
lock
jge
xchg
add
rcrb
push
js
ret
shrb
mov
xor
ja
cmc
cmp
jmp
sarl
fnstsw
fsts
sbb
jno
rorb
mov
mov
jmp
xor
sub
mov
or
scas
loop
jg
inc
push
mov
ds
subb
add
repz
mov
pusha
mov
mov
mov
imul
lods
add
adc
popa
and
lret
inc
xchg
or
push
fs
fisubrs
repnz
push
hlt
je
daa
mov
push
dec
iret
or
movsb
jl
gs
jmp
or
mov
mov
int3
jnp
sbb
inc
mov
adc
aam
xchg
and
pop
das
jp
sbb
out
addb
mov
popa
rolb
sarb
mov
insb
adc
mov
add
notb
xor
pminsw
xor
fdivs
or
movsb
inc
add
add
jg
dec
or
sbb
add
mov
cmp
mov
in
addr16
mov
adc
loope
push
ret
fimuls
and
loope
pop
xor
mov
das
jo
lcall
push
jmp
push
dec
sub
enter
pop
cmp
fsubrl
int3
insl
xor
ljmp
loop
pop
mov
pop
mov
dec
jmp
popl
push
push
pop
pop
push
sti
pop
adc
jbe
sub
add
pop
jmp
pop
push
cmp
in
imulb
dec
loop
in
cltd
pop
jno
icebp
cli
mov
pop
xor
mov
sub
add
fldln2
xor
out
inc
mov
pop
push
push
sub
jmp
sarb
push
xor
sub
dec
cld
dec
fimull
packssdw
jmp
push
lahf
jl
ficoml
mov
lcall
or
mov
lods
in
daa
lods
cmc
dec
clc
rcrl
subb
or
cmc
xlat
and
xchg
outsb
pop
neg
mov
jb
mov
adc
mov
xchg
push
rolb
bswap
jns
dec
jg
cmpsl
jbe
inc
dec
in
dec
adc
sbbb
into
lahf
in
out
pusha
pop
xor
pop
push
ds
inc
mov
xor
xchg
shlb
fisubrs
add
lret
jne
inc
pop
pop
addr16
cltd
push
pop
aas
mov
pop
jbe
mov
adc
dec
push
push
adc
push
out
into
or
sbb
inc
pop
push
jmp
push
push
add
lods
dec
shl
add
fmuls
xor
and
mov
sub
jle
sub
cmp
dec
lock
pop
scas
lret
push
pusha
or
mov
cmp
js
lock
outsb
dec
xor
jmp
rcll
lret
xchg
mov
inc
or
jg
sbb
mov
inc
loopne
pop
mov
push
sub
push
mov
push
add
mov
xchg
movsl
pop
lds
push
cwtl
mov
push
lds
adc
stos
add
stos
xor
sub
data16
hlt
inc
or
mov
das
cmpsl
clc
mov
dec
pop
inc
mov
es
push
pop
push
sbb
adc
aas
xor
lret
mov
xchg
int3
add
jae
ljmp
mov
popa
sub
adc
movsl
push
test
adc
push
mov
loop
rcl
imul
sub
sub
add
xor
add
fmuls
addb
sbb
mov
call
sbb
filds
cmpsl
pop
push
popa
jmp
rep
mov
iret
addb
mov
inc
rorb
icebp
lcall
lahf
pop
pop
call
or
and
sbb
jmp
dec
add
aad
mov
out
add
or
mov
push
jg
insl
sub
xchg
out
imul
jg
int
xlat
mov
xchg
push
xchg
jmp
xchg
aaa
repz
cmp
rolb
mov
jmp
xor
leave
pop
or
sahf
dec
pop
or
or
dec
inc
add
test
mov
lods
sldt
sub
aaa
push
pop
and
pop
out
jns
shll
pop
cmp
punpckhbw
fs
sub
adc
out
and
dec
dec
test
mov
push
xchg
ljmp
pop
cmp
add
sub
push
dec
insb
and
in
call
mov
jno
or
icebp
adcb
lock
scas
ljmp
std
push
pop
cs
and
mov
repz
pop
inc
js
ret
ljmp
pop
addb
jmp
pusha
incb
push
inc
je
out
jo
add
or
fidivl
push
leave
add
sbb
xor
out
insb
adc
or
push
add
iret
std
movl
add
jmp
add
dec
jg
orb
call
fwait
sbb
xchg
and
mov
out
adc
fisttpl
test
addb
adc
push
loope
jl
cmp
mov
or
aad
test
pop
aad
stos
and
rorl
call
in
pop
pop
jl
bound
sbb
rcrl
mov
std
inc
ds
mov
cmp
pop
cmp
inc
sub
inc
mov
jae
mov
pop
mov
push
loopne
and
daa
pop
push
faddl
jle
sbb
in
jecxz
pop
and
shlb
jmp
pop
sbb
pop
sub
jmp
xchg
inc
pop
jmp
test
mov
inc
add
pop
push
push
pop
ror
xchg
rcrl
add
ss
movsl
rcr
jnp
adc
push
scas
mov
jmp
lods
xor
sbb
push
push
jmp
inc
es
jo
int3
loop
clc
shlb
cs
push
in
sub
or
adc
mov
push
inc
inc
aaa
and
inc
push
rorb
rolb
push
cld
mov
les
push
fs
or
and
lret
push
inc
addb
cmp
add
ds
mov
sub
lret
or
out
push
jae
mov
adc
or
push
orl
in
rolb
and
add
push
daa
adc
aam
or
cltd
and
in
jo
jnp
dec
xor
dec
add
dec
xor
mov
xchg
sub
in
and
enter
mov
pop
mov
adc
js
sbb
ficoms
out
ret
and
jecxz
add
lret
jb
dec
lret
lahf
mov
loope
fsubs
mov
popf
inc
push
mov
outsl
in
insl
js
dec
out
rcrb
fstl
or
xchg
das
negl
push
xchg
jge
push
mov
push
js
jb
out
and
divl
mov
and
aad
leave
cmp
outsb
data16
insb
pop
sbb
jo
inc
outsl
mov
sub
fistl
sbb
mov
das
jle
out
test
xor
add
jmp
shl
mov
xor
sbbb
sahf
mov
add
ljmp
push
or
push
push
pop
mov
jo
add
dec
test
repz
mov
jmp
push
arpl
dec
clc
push
pusha
adc
mov
push
dec
inc
mov
iret
test
out
xchg
std
cwtl
and
dec
das
xchg
ret
xor
fwait
cmc
in
mov
fstl
sub
setae
sbb
mov
sbb
add
jbe
outsl
shrl
and
pop
test
das
or
hlt
lahf
out
and
adc
notb
dec
jge
in
cld
jge
inc
pop
and
stos
or
inc
lock
xchg
add
or
dec
push
push
les
add
pop
and
push
push
jmp
mov
pop
in
outsb
int
sub
jp
xor
push
sub
test
dec
sbb
or
imul
mov
imul
push
pop
pusha
push
pop
cwtl
jle
repnz
jb
hlt
testb
stos
jbe
out
sub
je
add
sub
mov
lods
icebp
jb
lahf
jbe
jmp
xchg
xchg
ljmp
adc
js
adc
pushf
cmp
dec
cwtl
mov
push
push
addr16
sti
popa
pop
les
dec
mov
push
lret
mov
lcall
out
cli
pop
mov
je
cmc
add
push
sahf
sahf
das
rcll
dec
ret
sbb
hlt
imul
repnz
mov
lahf
push
dec
negl
arpl
push
pop
pop
icebp
cmp
xchg
adc
mov
sbb
sub
xchg
in
or
in
sub
adc
or
dec
stos
mov
xor
in
dec
sbb
push
mov
and
lret
adcb
shlb
jmp
dec
scas
mov
mov
insb
idivl
or
xchg
push
or
pop
pop
adc
push
jl
jnp
outsb
xchg
sar
fucomp
icebp
xor
cmpb
inc
mov
hlt
sub
ret
insl
pop
push
sbb
stos
or
fistps
pop
push
add
mov
pop
mov
repz
stc
adc
jmp
cmp
pop
repz
push
mov
sbb
out
xor
mov
xchg
dec
repz
out
dec
xor
jmp
mov
or
fidivrs
dec
xor
jmp
sahf
push
mov
sub
add
test
mov
test
add
std
call
pop
jp
inc
js
jp
ss
or
or
cmp
sahf
mov
rcr
in
sub
push
push
mov
add
add
adc
lock
push
push
addr16
idivl
xchg
aas
rcrl
jle
mov
push
dec
call
sbb
mov
xchg
jo
test
xchg
test
mov
data16
sub
sub
mov
cli
scas
and
jg
ret
test
aaa
sub
popa
icebp
sbb
das
jb
fcoms
xor
repz
lret
sub
pop
xchg
hlt
cmp
pushf
aad
pop
xor
jae
cmp
fcomps
out
fldenv
pop
mov
ja
outsl
adc
call
xchg
push
xchg
and
fistpll
mov
mull
lock
rcll
xor
add
lret
fimuls
js
jnp
scas
hlt
insl
cmp
fwait
pop
dec
popf
sbb
test
std
jb
push
fisubs
lret
mov
out
pusha
ja
int
or
sbb
mov
cmp
push
mov
pusha
movzbl
push
dec
test
and
ljmp
cs
mov
sbb
int3
addr16
xor
jmp
push
xchg
test
shll
pop
flds
lea
int3
inc
int3
xor
out
adc
ljmp
push
lds
stos
sub
push
nop
adc
dec
dec
dec
lods
gs
xchg
or
cld
incl
push
pushf
mov
xchg
sub
push
push
or
adc
jbe
inc
mov
in
mov
or
rcrl
stos
jns
and
mov
or
pop
fprem
or
jb
fildl
push
mov
sub
mov
imul
test
adc
loope
xor
push
and
mov
sbb
dec
ds
add
cmpsb
sbb
cmp
or
inc
pop
xchg
loopne
lock
int
dec
push
push
pop
loopne
adc
mov
std
pop
xchg
loope
mov
in
gs
fcmovb
ja
add
mov
push
xchg
or
fldt
ds
lods
jbe
jge
jle
pushf
fadd
sub
in
or
faddl
repz
popa
mov
sub
loopne
movsl
cli
dec
pop
hlt
sbb
cmp
cld
nop
aaa
orb
push
adc
dec
repz
mov
clc
xor
test
vpavgw
cmpl
and
rcr
icebp
xor
cld
mov
mov
push
sub
fdivr
rcrb
xchg
jle
jo
jmp
xchg
and
xor
rorb
mov
pop
shlb
mov
push
add
mov
ror
mov
add
add
mov
imul
add
and
xor
mov
sub
add
scas
pop
sub
icebp
das
mov
push
xchg
dec
jg
sub
mov
movsb
mov
sub
daa
pop
fdivr
leave
xor
orl
scas
xlat
mov
xor
dec
in
mov
dec
dec
jg
add
pop
push
jecxz
nop
fstpl
movsb
jl
call
jo
add
jbe
daa
xchg
jno
sub
std
xor
mov
ljmp
sub
mov
and
push
cmp
fisubrs
dec
aam
stos
mov
xchg
cmc
and
mov
adc
mov
repnz
mov
mov
bswap
lods
aad
test
push
ds
mov
sbb
jne
inc
sub
or
add
push
mov
pop
mov
adcl
fdivrl
push
filds
push
jmp
cmp
in
inc
and
jl
pop
jne
out
fstl
sbb
add
sub
or
dec
xchg
sub
and
push
mov
mov
repz
neg
add
loope
add
fidivrs
xchg
add
adc
sbb
icebp
mov
std
push
es
adc
iret
pop
lds
push
movsl
add
mov
movsl
js
cmp
daa
push
dec
ds
daa
and
inc
movsl
push
loope
fsts
mov
dec
or
sub
add
lret
add
push
subl
jmp
test
or
jmp
sub
add
pop
adc
aas
shrb
insb
xchg
jp
mov
push
mov
cmc
in
cmp
mov
dec
push
cmp
add
ja
pop
clc
xchg
rolb
cwtl
lods
ljmp
add
mov
in
inc
mov
orl
in
mov
sub
mov
dec
dec
loope
xchg
icebp
inc
jmp
lds
scas
fucomp
cmp
push
jmp
add
adc
add
inc
inc
subb
imul
frstor
sub
cmpsl
sti
xor
jmp
nop
fsts
jbe
es
pop
pop
push
mov
ret
dec
inc
pusha
xor
cmp
std
fwait
or
dec
push
push
mov
or
xor
sub
outsl
mov
xchg
test
les
mov
icebp
loop
or
push
in
push
adc
loop
ja
mov
xchg
loop
je
push
jae
mov
xor
mov
nop
out
test
dec
pop
add
leave
data16
sbb
pop
xchg
adc
mov
push
sub
cld
or
mov
pop
push
jle
add
subl
add
xor
iret
in
js
test
sti
pop
je
ret
dec
call
pop
pusha
mov
outsl
int
outsb
rcl
jmp
mov
sbb
ss
jbe
idivb
xor
xorb
fsubl
ds
inc
and
inc
or
ljmp
lahf
leave
cmp
cmp
mov
fildll
jmp
out
mov
movsb
adc
mov
data16
fists
not
inc
dec
xor
movsbl
xor
xchg
jmp
mov
and
adc
cmpsb
test
aam
clc
es
shrl
or
add
and
and
mov
cmpsb
sub
add
mov
pop
out
cmp
lret
filds
mov
cmp
leave
clc
pop
and
frstor
inc
cld
lahf
jno
sub
in
es
and
mov
sub
in
cmp
std
and
xor
mov
sahf
pop
sub
xchg
outsl
orl
dec
jne
je
sbb
rol
mov
push
mov
in
cwtl
mov
shl
add
cltd
repz
lret
bnd
idivb
stc
pusha
scas
repz
xor
mov
adc
insb
rol
shl
movsl
xlat
loopne
dec
mov
shll
adc
inc
lahf
dec
addr16
mov
in
jmp
and
aas
pop
orl
or
loope
push
mov
or
pop
pop
add
mov
nop
push
or
dec
sbbl
and
fs
push
and
jns
das
das
or
sbb
or
faddl
or
test
inc
push
or
std
push
aaa
xchg
mov
cltd
mov
outsb
fldenv
inc
inc
sub
data16
or
push
add
lret
add
jns
roll
loopne
fldcw
mov
ret
mov
movsl
getsec
daa
or
jl
push
mov
aam
mov
jmp
enter
mov
or
jae
pop
push
xchg
add
pusha
in
cmc
les
sbb
pop
cld
pmulhw
cmp
xor
inc
mov
insl
add
cmp
xor
imul
sbbb
jmp
push
dec
inc
sub
or
xor
inc
fmul
push
out
or
mov
push
enter
mov
xchg
in
rorb
jno
inc
into
add
pop
jg
sbb
push
add
cmc
dec
mov
out
pop
mov
lret
jl
test
lock
data16
dec
cmp
add
mov
out
xchg
cltd
fwait
inc
push
add
and
insl
jmp
mov
xorl
add
insl
out
fsubrp
jbe
inc
push
pop
test
inc
faddl
icebp
rclb
fdivrl
or
mov
push
xor
shll
sub
adc
gs
or
xor
push
push
in
mov
cmp
test
aad
cwtl
and
fmull
call
mov
ja
xchg
pop
xchg
repz
pusha
or
insb
cmp
jmp
add
sub
add
xor
aas
mov
or
mov
leave
cld
xchg
subb
jno
dec
adc
je
shll
xor
incb
sub
cltd
scas
in
int
in
sbb
add
xchg
out
adc
jns
addb
pop
es
or
pop
ret
dec
ret
out
popa
lods
add
stc
scas
lret
fidivrs
dec
movaps
mov
add
in
pop
sub
ror
push
jl
jmp
sub
subb
or
add
ljmp
call
iret
pop
xorl
mov
dec
inc
push
adc
jne
xor
push
jnp
xchg
shrb
js
or
add
pop
outsb
xchg
faddl
movsl
movsb
and
or
gs
das
xchg
add
lea
dec
retw
cmp
testl
lods
or
neg
push
out
icebp
add
loopne
or
dec
and
ja
mov
xor
push
addb
jae
mov
add
test
jle
test
adc
cmp
push
add
cmovl
out
or
repnz
sbb
sub
xchg
sahf
jmp
call
and
gs
icebp
xchg
fists
testl
dec
popa
mov
jg
pusha
push
and
xor
mov
mov
add
add
adc
loop,pn
xchg
add
mov
push
mov
clc
imul
leave
das
pop
icebp
rorl
loop
ljmp
pop
dec
mov
ljmp
pop
jns
adc
mov
add
aas
mov
xchg
sub
push
push
repz
mov
sub
sub
push
les
cmpsb
and
lret
jae
sarl
js
add
in
repz
inc
sbb
int3
or
out
test
icebp
mov
mov
jae
pop
jmp
xchg
scas
or
mov
mov
and
jb,pt
sbb
mov
cmc
mov
arpl
icebp
sbb
pop
push
or
and
dec
pop
test
mov
testl
xchg
mov
sub
jp
or
jg
ret
aas
test
ja
in
dec
aaa
xchg
or
pop
jp
add
movsb
roll
popf
aam
add
sub
jns
sub
int3
add
jmp
adc
inc
push
movsl
rcr
insb
pusha
or
ljmp
sub
sbb
inc
lods
movsl
mov
pop
push
enter
mov
push
ss
not
rcl
push
cs
inc
popf
jecxz
sub
sbbb
push
adc
sbb
scas
sbb
js
cli
add
add
out
jb
pusha
das
shr
aam
inc
aaa
outsb
dec
out
in
loop
push
add
push
rclb
icebp
add
push
cmpsb
pusha
popa
xchg
and
add
es
jmp
mov
cli
push
divl
mov
out
mov
xchg
add
xchg
adc
sti
mov
pop
adc
lods
add
aas
pop
push
adc
and
sub
push
mov
incb
daa
sbb
xlat
or
lcall
in
and
mov
mov
or
jmp
pop
hlt
pushf
cmp
or
sub
js
data16
add
jmp
mov
test
shll
xor
jb
adc
xchg
or
sub
not
sbb
pop
mov
mov
xchg
arpl
ljmp
push
xorl
rolb
pop
and
cmp
icebp
in
and
xlat
cs
pop
mov
or
mov
lret
adc
std
int
pop
dec
shlb
ret
add
and
je
ja
sub
dec
addr16
and
test
rcr
mov
pop
add
fs
rcll
dec
hlt
sti
push
rclb
mov
pop
xor
push
push
jmp
add
inc
push
mov
xorb
jmp
cmp
scas
insb
ss
or
push
outsl
sti
mov
lahf
mov
xor
mov
xor
gs
or
add
jmp
into
push
mov
data16
mov
sub
repz
inc
fs
push
mov
loopne
mov
mov
int3
or
and
outsb
xor
add
sub
push
cli
pop
ror
int
push
jecxz
add
fildl
push
mov
divb
mov
xchg
pop
ja
inc
dec
or
sub
mov
dec
jns
push
stos
mov
xchg
xchg
dec
jae
jo
sub
add
jge
lahf
fsubr
leave
push
add
hlt
das
sub
stc
in
dec
cmp
jmp
mov
dec
add
movl
add
inc
loope
out
cmp
push
jl
jno
jb
dec
aas
add
ret
pop
adc
sbb
and
faddl
sub
xor
data16
push
mov
cmc
out
mov
sub
je
push
xchg
rcrl
repnz
call
loopne
daa
std
sbb
jmp
loopne
push
mov
js
dec
push
imul
out
pop
fcompl
cmp
shr
dec
xchg
ret
dec
test
add
inc
aad
daa
add
loopne
call
hlt
dec
lcall
in
push
fnsave
xchg
icebp
inc
jmp
push
xor
mov
and
dec
adc
call
stos
daa
jbe
mov
cmp
push
pop
mov
jne
out
mov
imul
mov
mov
xor
pop
and
adc
iret
cmp
cmp
cmpl
add
cmp
fsubrs
push
pop
mov
pop
ret
adcb
mov
out
popa
xor
cli
xor
ja
pop
cli
jge
sbb
das
gs
pusha
int3
and
inc
mov
sti
enter
jno
or
add
cmp
adc
add
pop
test
gs
mov
inc
arpl
fs
jmp
and
or
pop
mov
jbe
pop
pop
rcl
mov
adc
loopnew
sbb
pop
push
lcall
loopne
or
and
jbe
andl
into
mov
lea
add
addr16
jae
and
subb
or
or
stos
les
enter
or
push
jno
dec
in
rcl
pop
jmp
cli
xor
push
mov
and
push
xchg
add
or
jmp
outsb
pop
repnz
shll
inc
mov
dec
pusha
mov
js
or
stos
dec
out
cmpsb
sub
xchg
out
push
pop
das
loopne
push
bound
bnd
mov
clc
or
jl
orl
mov
cwtl
mov
mov
in
sbb
fldt
jb
or
movsb
incl
sub
mov
mov
add
or
pop
mov
xchg
jmp
inc
ljmp
jo
push
adc
push
dec
js
pop
mov
add
xor
jg
sbb
xchg
inc
cwtl
add
push
mov
or
pusha
and
xor
or
push
pop
mov
lret
call
inc
mov
mov
int
fistps
pusha
jmp
add
imul
pop
dec
dec
rcrb
jp
sub
dec
xchg
lahf
call
fbld
and
cmpsb
sbbb
jg
inc
dec
mov
push
lds
dec
shl
testl
popw
sub
mov
sti
mov
fcompl
xchg
push
mov
fwait
add
mov
out
sub
push
out
mov
add
pushl
push
sub
dec
jb
pop
fs
fisubrl
push
xchg
mov
sbb
lock
xor
push
sbb
inc
jge
lods
push
adc
outsl
xor
xchg
mov
xchg
or
lret
rcrl
sbb
inc
imul
push
ds
xorb
fwait
mov
and
fwait
adc
loopne
shlb
in
dec
pop
gs
mov
push
fisttps
and
inc
daa
iret
inc
jb
push
jg
and
cli
pop
outsb
stc
jg
add
sub
xchg
lret
and
out
pop
mov
add
and
dec
mov
or
loopne
jmp
jbe
pushf
add
xchg
notl
xlat
jmp
sbb
test
mov
push
adc
lret
call
hlt
push
mov
nop
cmpb
add
xor
mov
pop
add
inc
mov
jp
fdivr
movsl
ljmp
es
mov
cmp
mov
nop
push
negl
mov
dec
push
cmp
dec
insl
or
cltd
mov
shl
ret
jbe
jmp
ja
mov
or
fcmovb
jmp
fidivrl
aam
dec
cld
push
pop
mov
jo
mov
pop
sbb
cmp
notb
xor
lds
gs
and
mov
repz
sar
ret
dec
jmp
dec
push
add
jae
test
push
movsb
dec
mov
fadds
jae
pop
pop
in
adc
cmp
pusha
push
lds
push
daa
clc
and
outsb
jg
sub
or
mov
stos
mov
xchg
mov
movb
lcall
cmpsl
mov
les
or
adc
ret
mulb
sqrtps
xchg
xchg
xor
aad
push
dec
mov
pop
out
fdivs
popa
cmpsl
icebp
cmp
js
sub
push
inc
sub
sub
mov
testl
push
cmp
das
in
jns
or
xchg
lock
call
mov
add
mov
pop
lahf
jns
or
and
dec
in
sub
inc
in
push
lahf
ljmp
scas
hlt
jmp
inc
loopne
pop
sub
jl
push
mov
or
ret
dec
lahf
hlt
cmp
adc
addr16
lock
adc
or
pop
popa
pop
push
cld
roll
icebp
loopne
aad
xlat
cld
mov
loope
rorl
and
mov
mov
pop
mov
loop
xor
gs
adc
add
xchg
das
daa
push
push
rclb
and
test
rcrl
mov
sub
pop
and
rcrb
out
jne
std
mov
sti
sahf
fs
mov
pop
jmp
jnp
in
pop
int
mov
add
push
test
lret
add
adc
lea
sub
cwtl
pop
inc
cmp
pop
inc
aad
hlt
jmp
push
mov
mov
shll
es
add
push
add
insl
imul
out
hlt
xor
pop
repz
push
test
add
popa
stos
sub
cmp
xchg
addr16
push
imul
xchg
jno
add
sub
sub
leave
sbb
int3
push
mov
push
mov
mov
sub
leave
call
cmp
push
pop
mov
add
sub
out
subb
pop
or
mov
sti
shl
and
ds
imul
inc
xchg
mov
ds
mov
mov
dec
push
add
out
mov
jb
push
cmpsb
jle
pop
sbb
pcmpgtd
clc
sbb
cmpsb
jg
sub
mov
push
mov
dec
inc
loopne
cmpsb
jno
and
pop
test
in
mov
mov
loope
test
add
out
int3
repnz
sbb
aad
inc
pusha
xchg
insb
mov
mov
sub
outsl
lds
mov
inc
adc
addr16
loope
or
cmp
or
std
mov
aad
mov
xor
stos
test
dec
rclb
fs
sarb
fcomp
inc
popf
xlat
mov
js
pop
mov
add
out
mov
dec
pop
imulb
test
aaa
sbb
jp
js
mov
out
jecxz
xchg
sbbb
fbld
lret
loop
sub
dec
sub
push
pop
push
add
jge
mov
and
nop
fldl
dec
scas
aas
add
leave
data16
sarb
mov
lds
push
cmp
inc
add
pop
inc
jmp
xor
pusha
enter
imul
sbb
rcrl
iret
dec
int
mov
sub
fs
nop
xchg
mov
jmp
and
xchg
dec
sbb
jbe
mov
ds
mov
push
push
pusha
add
cmp
pusha
and
popf
mov
sbb
add
and
in
test
add
pop
push
xor
std
pop
sub
push
cli
inc
popa
rcll
mov
pusha
lahf
fldenv
jbe
jmp
out
or
mov
popf
jmp
test
je
cmpb
push
pop
push
dec
pop
jmp
dec
pop
sub
ret
scas
js
xor
pop
pop
arpl
adc
out
add
pop
xchg
inc
cmpsb
push
leave
add
push
adc
sub
lret
dec
adc
pop
add
jne
pop
fs
out
pop
cmp
adc
push
mov
fidivl
sub
mov
jmp
test
loopne
push
xor
mov
jo
and
add
inc
mov
jne
pop
dec
rol
leave
inc
xorb
mov
cltd
into
push
xor
es
ljmp
pushf
xor
ljmp
sub
movb
jge
and
xchg
adc
or
jmp
pop
sub
jmp
push
in
mov
xchg
sub
mov
jns
and
dec
sub
stos
cmp
mov
ret
mov
call
or
jb
and
jl
sahf
daa
push
orl
xchg
jno
sub
sub
cld
roll
cs
pop
adc
rcll
mov
enter
loope
rcr
call
or
cmc
mov
jae
dec
xor
fs
bnd
loope
add
pushf
lahf
ja
mov
cmp
lds
test
add
add
lock
popf
js
dec
jns
cmc
inc
pop
adc
insl
aas
sub
sbb
into
aam
inc
and
test
in
xchg
push
mov
and
mov
or
mov
xlat
sti
mov
les
sti
add
mov
adc
inc
lcall
fnstenv
cmc
gs
jmp
icebp
popa
xor
int3
in
fs
aad
sar
and
icebp
je
mov
push
add
adc
mov
sub
inc
jo
je
mov
jg
sbb
push
fnsave
or
ret
and
rclb
xor
cmp
or
xchg
mov
repnz
mov
leave
insl
add
mov
cmp
cs
xchg
or
push
fs
jg
push
jmp
in
movsb
jmp
pusha
testl
aam
jne
clc
and
jbe
cmp
addb
sbb
xor
fxch
enter
add
das
add
inc
sub
aam
dec
add
add
mov
lret
sub
jmp
add
adc
add
in
jnp
das
fs
stc
nop
nop
or
adc
xor
cmp
jle
and
pushf
in
mov
and
add
lods
mov
test
jmp
xor
das
cld
testb
mov
dec
mov
pop
adc
popa
lahf
test
and
mov
mov
or
in
inc
and
dec
dec
sti
ror
pop
add
pop
pop
dec
mov
bound
into
mov
jns
jmp
out
sbb
pop
popf
aam
lret
inc
push
push
jmp
push
mov
add
clc
cmpsl
les
adc
push
in
dec
mov
inc
in
mov
cmp
and
pop
pop
lret
dec
daa
push
inc
push
push
inc
rol
xor
add
cmp
mov
cwtl
nop
fldl2t
rcr
inc
popf
dec
gs
pop
out
sub
adc
std
lods
sbb
pop
adc
cmp
push
add
outsl
bound
rorb
test
add
or
add
or
mov
pushf
stc
and
xchg
cwtl
out
pop
lea
das
lahf
jo
repnz
inc
push
popl
sub
inc
add
in
dec
mov
dec
pop
adc
jl
insb
or
pop
xor
cmpsb
fnstenv
push
das
call
jge
push
cmp
bound
fisubrs
pop
xor
pop
data16
push
or
jne
push
cmp
jb
jle
pop
dec
adc
mov
mov
xchg
mov
fldcw
fdivp
push
in
mov
push
jns
and
xchg
push
sbb
outsb
and
jmp
lret
frstor
dec
rcll
sub
and
or
mov
inc
adc
js,pn
mov
test
jmp
mov
jmp
sbb
dec
jae
mov
outsb
aad
imul
xchg
push
test
in
or
lds
pop
xor
xor
iret
decb
jmp
sbb
push
sbb
xchg
pushf
ret
fisubrs
pop
out
lret
or
add
pop
push
daa
jmp
das
call
out
rolb
inc
adc
xchg
mov
lods
inc
ret
clc
cmpsb
or
fldenv
ja
push
test
leave
jmp
hlt
in
imul
cmp
pop
mov
out
inc
mov
push
xchg
lcall
outsb
rcrl
loopne
dec
add
xorl
push
sub
lcall
xor
xor
pop
cmp
or
sbb
sub
popa
add
fdivrl
add
pop
add
std
pop
or
mov
sub
dec
xchg
std
xor
and
xchg
outsb
pop
jb
jne
ss
dec
scas
in
loopne
mov
jmp
lcall
imul
and
repz
test
pop
mov
sbb
and
or
dec
push
arpl
dec
or
xor
inc
daa
jmp
lock
mov
xchg
icebp
dec
in
pop
sub
popa
sbb
jg
or
outsl
jmp
aam
jp
mov
or
aas
mov
aas
mov
sbb
pop
cmp
enter
push
lret
pop
mov
lds
sbb
xor
das
cld
inc
and
pop
sbb
out
jmp
push
mov
xchg
sbb
dec
lods
xchg
in
lcall
jnp
iret
sbbb
mov
add
leave
mov
inc
sbb
push
push
jmp
cli
pop
sbb
add
pop
rclb
push
data16
xlat
sbb
or
fmull
cmc
fimull
in
mov
cmp
mov
mov
leave
jmp
and
add
cmpl
leave
fs
sub
lock
lahf
pop
mov
fists
pop
cli
mov
dec
xchg
jg
push
arpl
cwtl
ja
or
fwait
jle
jbe
jmp
mov
loop
inc
sbbb
icebp
or
aaa
add
mov
leave
sub
mov
test
sarl
jno
adc
push
push
pop
das
push
sahf
add
mov
jns
outsl
imul
movsb
mov
mov
push
xor
push
mov
loope
bound
cmp
repnz
in
jmp
subl
mov
cltd
add
push
push
fldt
shll
sti
aas
lods
pop
cltd
adc
pusha
push
pop
mov
leave
rolb
mov
mov
mov
sub
cli
pop
push
or
addr16
rolb
fadds
and
xor
jp
add
jmp
cmc
sbb
scas
lcall
fildll
fdivrs
test
jp
mov
or
dec
jmp
outsl
pop
add
testb
pop
add
inc
and
jne
clc
xor
xchg
jo
mov
dec
jle
faddp
adc
or
stc
xor
rclb
int
les
lds
sub
xchg
adc
rcrb
daa
dec
pop
pop
or
push
dec
cltd
incl
pushl
ja
mov
pop
lds
lods
cwtl
add
outsl
add
or
mov
jne
push
imul
out
sub
popa
push
push
push
imul
and
inc
addb
test
push
sub
nop
or
fsubr
daa
divl
scas
sub
jmp
not
shl
pop
push
mov
filds
mov
mov
add
push
dec
xchg
mov
mov
aas
dec
push
ret
pusha
push
cli
out
xchg
fldl
jmp
mov
jl
aas
test
in
fsubp
push
fisttpll
mov
jmp
addr16
gs
dec
mov
and
add
pusha
jbe
add
cmc
jp
add
add
sarl
enter
imulb
pop
cmp
rorl
jns
dec
and
jp
pop
pop
mov
xchg
enter
dec
fldenv
out
pusha
xor
or
out
sub
and
mov
pop
cmp
shr
movsb
mov
push
inc
pop
fcoml
movsl
lods
lahf
lahf
or
adc
or
fmuls
mov
clc
cmp
or
jo
mov
mov
aam
dec
or
lret
jmp
xchg
mov
jmp
out
jae
vmread
xor
push
add
or
add
cltd
popf
jmp
dec
in
mov
aad
pop
push
iret
icebp
xor
or
mov
jns
popf
mov
or
mov
pop
les
cmp
add
sti
add
mov
add
jmp
loopne
ss
in
clc
incb
push
test
daa
call
gs
ljmp
xor
sahf
adc
or
add
mov
lea
shll
push
mov
ss
adc
and
xor
xchg
movsb
or
inc
cltd
cmpsl
fsubrs
push
popa
jmp
or
inc
insb
es
adc
ss
cmp
jecxz
and
push
xor
jl
cmp
sahf
rorb
lods
jecxz
mov
movsl
aad
push
jns
sahf
mov
cmp
push
mov
aas
loop
subb
pop
add
xchg
push
ds
js
and
ret
out
sub
jg
pop
lods
jne
ss
sti
xor
testw
adc
push
add
aaa
sub
nop
xor
jg
pop
cli
sbb
mov
in
ljmp
sbb
ja
or
adc
cld
push
sbb
js
xor
inc
fucomp
mov
adc
mov
jl
sbb
cmc
out
or
lds
cmp
jmp
aad
mov
lcall
out
and
push
rcrl
loope
push
or
jns
mov
cmp
sbbb
dec
xchg
and
lods
icebp
mov
push
mov
mov
xchg
add
ljmp
jne
adcl
sub
push
loop
jmp
mov
repz
xchg
out
pop
adc
aad
pop
add
sbb
adc
lret
or
and
sub
xor
mov
xchg
sbb
jns
out
fisubs
ficoml
int3
xchg
icebp
lea
adc
nop
mov
test
sub
push
out
or
mov
leave
xor
mov
mov
adc
mov
loopne
aaa
lahf
insb
mov
pop
and
add
push
and
popf
lahf
movsl
fsubl
inc
inc
adc
testl
mov
pop
mov
push
adc
mov
enter
xor
and
pop
push
bound
push
ljmp
push
cli
orl
movlps
pop
ljmp
cmpsb
mov
mulb
push
icebp
mov
or
pop
add
push
jle
pop
aad
add
stos
xor
dec
lock
rclb
adc
pop
neg
or
rclb
test
ret
jo
lahf
jbe
lret
fnsave
aam
enter
test
lahf
in
sbb
sub
push
test
adc
push
dec
sub
les
sub
das
inc
cs
push
filds
cwtl
popa
inc
imul
mov
lret
js
pop
push
jae
cmp
or
pop
pop
add
popf
stos
stos
cmpsb
cmp
push
jmp
inc
pop
jle
addr16
repz
lret
aam
clc
xor
les
cwtl
ss
mov
inc
add
stos
aaa
jns
xor
adc
dec
icebp
in
xchg
lcall
lds
add
push
add
lcall
dec
push
addr16
jno
or
jmp
and
arpl
jno
mov
in
aas
scas
popf
movsb
mov
or
xor
add
lock
mov
leave
mov
packsswb
lea
cwtl
imul
aaa
sub
lcall
jno
outsb
jl
pop
popf
jns
bound
inc
mov
stc
sbb
push
xor
gs
and
filds
arpl
rclb
std
inc
shrb
jl
pop
and
add
out
or
cmp
sbb
sub
pop
add
movsl
mov
stos
sbb
sbb
pop
clc
mov
jmp
out
test
mov
jbe
sbb
sub
xor
jmp
pop
out
int3
in
xchg
loopne
enter
sbb
and
inc
push
add
cli
es
pop
pusha
pushf
pop
into
or
push
mov
add
jo
les
or
sub
js
pop
xor
fstp
jmp
and
stos
call
mov
je
lret
hlt
sbb
pop
xor
or
out
ja
push
nop
pop
sub
popf
loopne
jne
das
dec
imul
mov
mov
add
add
jle
mov
mull
jl
jp
out
xchg
sbb
mov
mov
dec
mov
add
int3
push
in
rcll
inc
push
lea
cwtl
push
in
test
add
cmp
jmp
adcb
mov
ljmp
ss
add
pop
xchg
dec
jp
fsts
or
cmp
cld
cmpb
ficompl
adc
mov
inc
aas
xor
mov
jmp
jle
loope
adc
dec
xor
xor
andb
pop
adc
enter
xrelease
int
out
add
test
add
xchg
cld
jb
pop
mov
mov
jp
fsubrp
inc
jmp
add
push
fbld
pop
or
pop
pop
shll
rclb
fbstp
mov
push
mov
imul
jl
pop
cmp
out
jp
icebp
ja
lods
inc
repnz
push
es
dec
movsl
adc
adc
mov
push
push
and
dec
mov
mov
test
pop
test
out
dec
dec
adc
pop
pop
cmp
dec
add
nop
mov
call
push
in
or
fimull
cmp
adc
daa
sti
loopne
icebp
or
test
add
loop
mov
sub
pop
push
dec
ficoms
jg
cmp
push
add
or
mov
xchg
scas
xchg
imul
add
jno
xchg
mov
ljmp
sbb
fbld
cmp
push
hlt
pop
and
xchg
mov
mov
ret
mov
jmp
mov
inc
into
dec
jge
push
lret
dec
inc
xchg
pop
xchg
fimull
xor
pop
or
adc
mov
push
iret
repnz
cld
jp
mov
fimuls
and
jmp
mov
mov
inc
scas
test
add
jae
pop
shl
jb
xlat
movsl
ret
xchg
push
pop
push
fiadds
ret
pop
pop
jae
aaa
cmpsb
push
pop
and
push
or
clc
sbb
incb
stos
daa
mov
fsubl
aad
mov
push
sbb
inc
rorb
testl
cs
and
xor
int3
dec
repnz
mov
jmp
int
fildl
inc
inc
jo
data16
push
push
xchg
mov
inc
ja
sbbb
loopne
dec
pusha
dec
push
xor
repnz
xor
add
mov
sub
push
jmp
pop
add
orl
adcb
mov
add
ret
jmp
ja
ret
xlat
push
mov
add
outsb
adc
mov
nop
push
mov
mov
out
pop
imul
pop
push
push
mov
shl
push
sbb
je
cltd
in
ret
add
or
mov
mov
lahf
outsb
mov
fstpt
hlt
push
data16
js
stos
pop
push
movsb
push
lret
ljmp
push
pop
xor
ret
jmp
pop
daa
pop
pop
das
or
pushf
or
mov
das
orl
inc
mov
sbbl
movsl
add
mov
movsb
add
dec
ja
cmp
sbb
repnz
scas
sub
shll
push
cwtl
ljmp
outsb
clc
inc
scas
jp
mov
fsts
push
sub
push
pop
add
push
pop
xor
dec
mov
and
loope
clc
dec
js
aaa
xchg
lock
push
rcr
mov
push
pop
es
call
mov
mov
and
adc
push
mov
and
and
xor
xchg
and
inc
add
pop
sbb
xorl
sarb
in
shlb
mov
pop
inc
add
lea
psubusw
and
ljmp
outsl
dec
cmp
popf
lcall
add
xorl
test
sbb
and
sbb
lea
push
pop
stos
sub
pop
mov
xor
sub
pop
popa
les
hlt
jecxz
push
adc
push
dec
stc
or
pop
ret
sti
out
push
inc
jecxz
sbbb
movsb
imul
inc
pop
mov
aad
stc
out
xabort
mov
pop
rolb
lods
adc
add
add
inc
ret
or
cmp
in
mov
rorb
xchg
dec
rclb
jmp
lahf
das
inc
inc
stos
or
pushf
and
dec
pop
lock
aas
cmp
leave
adcb
add
mov
loop
aam
pop
lods
pop
xor
sbb
orl
ss
or
jl
imul
pop
jle
xor
or
mov
nop
xchg
and
mov
pushf
call
xlat
aad
and
jmp
out
sbb
dec
inc
hlt
loop
push
or
fistps
mulb
pop
mov
xchg
ljmp
imul
out
push
lods
mov
xchg
mov
xor
pop
shlb
and
adc
pop
out
sbb
js
push
nop
cltd
xchg
cmpb
xor
sar
aaa
bound
cs
orl
pop
add
lcall
enter
sbb
pop
jmp
xchg
test
ffree
and
jmp
inc
rcrl
xchg
add
ss
sbb
es
adcb
sbb
stc
or
inc
or
xor
pop
xor
add
jmp
lret
dec
xchg
ljmp
add
sbb
xchg
pop
xor
and
or
cld
gs
movsl
gs
jp
sbb
iret
jle
fs
insb
sub
add
cmp
push
adc
mov
stc
push
xchg
dec
inc
mov
push
cs
jle
faddl
sbb
cmpb
call
inc
adc
subb
jl
mov
ss
ljmp
sub
push
jge
and
sub
enter
jae
imul
in
lahf
out
and
cmp
mov
adc
addb
imul
pop
jnp
push
push
mov
mov
adc
out
or
mov
ljmp
cld
fsubs
pop
mov
cmpl
push
add
daa
ja
pop
mov
cwtl
push
and
sbb
dec
fadds
adc
aam
pop
push
pop
jbe
test
jno
sub
and
popa
cmp
add
arpl
das
test
out
icebp
mov
mov
mov
xor
pop
fisubrs
ds
testb
mov
es
outsl
inc
lods
les
sbb
sti
add
test
ja
shll
stc
pop
stc
roll
loopne
push
xchg
cmp
or
sbb
jmp
ss
je
ds
sbbb
hlt
jne
ljmp
pusha
sarl
xchg
xchg
mov
mov
pop
mov
mov
xor
lahf
push
add
jmp
push
das
dec
inc
sbb
jmp
inc
daa
aad
hlt
sbbl
iret
nop
movsb
inc
popf
bound
mov
and
add
cmpb
ljmp
or
imul
push
aad
xchg
jg
dec
pop
jbe
push
in
jno
daa
negl
ljmp
fidivrs
into
cltd
xchg
inc
loope
loope
sub
add
out
test
and
test
std
lret
push
push
dec
test
cmp
jno
dec
pmaxsw
push
mov
sub
nop
sub
jnp
sub
push
out
fiaddl
dec
mov
xor
ja
ds
adc
negb
pop
enter
cmp
cmp
insb
call
and
aam
aas
xor
adc
mov
push
dec
or
bound
pop
dec
or
test
jge
sbb
jns
xchg
roll
imul
xor
dec
in
cmpsl
mov
fs
out
cmp
xchg
add
inc
movsl
pop
imul
mov
notb
dec
sbb
adc
fiadds
push
jne
xchg
add
pop
not
xor
lcall
sbb
adc
pop
out
rorl
jnp
mov
push
push
jmp
lret
mov
imul
pop
and
ret
mov
xchg
cmpsl
mov
jmp
lcall
adc
int
jmp
dec
mov
cmp
xchg
push
jo
imul
mov
adc
add
and
adc
xlat
xor
adc
sub
mov
lds
pop
dec
adc
jns
mov
lret
loopne
pop
and
jmp
es
dec
push
xchg
dec
xor
jmp
neg
and
fimuls
or
sbb
ja
mov
add
push
adc
push
cltd
pusha
push
jmp
ja
cmp
dec
cmp
movb
mov
add
push
in
repnz
addr16
rcrb
sti
int3
nop
push
mov
adc
jecxz
clc
cwtl
sub
dec
adc
cmp
push
mov
mov
xor
lahf
pop
into
pop
adcb
or
and
add
pop
and
xchg
jbe
pop
mov
rclb
ficoms
jmp
fsubrl
push
xor
add
xor
cmpsb
jno
sub
pop
or
sub
sub
insl
pop
and
xchg
imul
fisubrl
cmp
cmp
cmp
mov
or
test
or
outsb
adc
inc
jle
negb
jp
pop
push
test
leave
push
push
mov
paddusb
push
shrb
jmp
mov
imul
mov
jbe
inc
les
movsl
push
mov
lahf
scas
sub
push
add
inc
addl
push
push
add
call
mov
ret
pop
adc
ds
dec
dec
mov
sbb
int3
test
push
sbbl
sub
push
sub
mov
mov
xor
inc
mov
push
scas
lret
cvtps2pd
jge
add
leave
lret
adc
xor
iret
xor
stc
shlb
sbb
xor
pop
or
sub
or
pop
sti
int3
add
adc
pop
test
or
clc
test
fadds
dec
divl
cwtl
shlb
xchg
js
data16
shlb
fistps
xor
pop
std
mov
mov
out
or
repnz
push
cmpsl
out
lahf
ja
cs
and
sub
mov
daa
sbb
and
aas
pop
pop
mov
and
aaa
enter
dec
pop
jmp
xchg
into
pop
xchg
push
sbb
cmp
sti
jbe
or
es
pusha
imul
imul
adc
sub
mov
les
dec
mov
push
jge
fisubrl
jb
push
mov
mov
cmp
sbb
repnz
mov
xchg
pusha
push
and
subb
in
adc
push
xchg
das
push
jae
popa
inc
jge
or
imul
xor
xchg
dec
jge
or
mov
or
les
nop
jg
lock
mov
stos
fisubs
sub
addl
nop
add
test
inc
jne
lea
or
or
dec
dec
pop
and
out
bound
push
pop
jne
xchg
leave
push
cmp
ja
dec
push
mov
data16
pop
xor
addb
cwtl
notb
cld
cmp
sbb
xchg
xchg
pop
cmp
mov
cs
pushl
xor
mov
xchg
sti
mov
cwtl
jmp
xchg
sub
adc
movsb
in
sub
cmp
sub
addr16
xor
cmpsb
jo
jnp
pop
jns
sbb
jle
mov
inc
std
jmp
mov
jae
fcmove
inc
fwait
aad
pop
repz
stos
repnz
dec
in
repz
dec
sbb
subb
push
sbbb
mov
int
mov
aam
jae
or
inc
f2xm1
je
push
and
movsl
sbb
in
dec
cmp
rol
and
jmp
movl
or
pop
jl
jae
push
pop
test
aam
add
pop
inc
neg
inc
repnz
push
inc
lods
pop
pop
and
jmp
cmp
clc
push
sub
mov
xor
xor
popf
jle
add
mov
dec
cmp
pop
loope
add
jae
in
sub
xor
sbb
adc
sub
add
movsl
imul
out
cs
sub
adc
in
jb
outsb
out
mov
pop
add
xchg
adc
popf
sarl
push
mov
mov
leave
xchg
scas
movsl
mov
out
lcall
sub
pop
mov
or
or
jl
or
insb
pushf
cmp
push
mov
xchg
orl
cmp
mov
add
push
jno
jge
push
in
xchg
dec
shrl
push
jns
inc
hlt
add
inc
lods
jae
lds
sti
je
adc
cmp
cmp
xor
leave
xor
clc
jbe
inc
jns
sub
ja
sbb
dec
movsb
xchg
ljmp
dec
push
cmp
mov
daa
or
out
fwait
sub
sbb
xor
pop
mov
mov
loopne
lock
jmp
dec
jbe
mov
xchg
xchg
in
outsb
sub
jns
or
and
xchg
xchg
sbb
pop
cld
popf
aam
imul
and
js
jmp
pop
pop
sti
inc
pop
sbb
leave
xchg
push
mov
push
adc
imul
sub
push
mov
xchg
std
jmp
pop
js
cwtl
sbb
inc
xchg
ror
push
add
push
push
xlat
or
sub
cld
mov
hlt
clc
push
lret
xchg
fstp
addb
dec
or
push
daa
sahf
mov
push
mov
sub
inc
aas
cmp
sub
fstps
hlt
mov
notl
das
mov
dec
add
sub
inc
jmp
out
push
or
push
out
shr
pop
cmp
and
push
arpl
jge
dec
push
movsl
adc
stos
int3
and
or
inc
sub
mov
addl
jnp
pop
mov
adc
cmp
cmp
clc
sbb
jno
jmp
push
xor
xchg
test
outsb
or
adc
mov
je
daa
xchg
dec
sahf
pop
ja
jl
jmp
fnstsw
push
fisttps
or
pop
seto
pop
mov
sub
enter
xor
add
ret
mov
fsubrp
add
inc
insl
adc
mov
stos
cmpsb
es
stc
push
add
shrb
not
ljmp
add
jmp
popl
mov
inc
inc
push
lods
sbb
add
add
or
aad
dec
pop
add
mov
and
lock
inc
mov
sub
push
lahf
lret
xchg
aad
pop
add
jmp
or
pop
add
jecxz
push
popa
push
mov
popf
jbe
sub
fisttps
sbb
lret
add
mov
mov
dec
sti
sub
push
pop
outsb
aaa
int3
popl
out
inc
or
pop
or
cli
in
pop
insl
call
dec
mov
or
push
roll
add
bound
jmp
sti
xor
cmp
dec
test
and
xchg
xlat
mov
and
add
mov
cwtl
in
lahf
div
rcrb
jmp
mov
xor
pop
and
int3
pop
not
push
mov
sar
das
sub
icebp
or
dec
icebp
ljmp
pop
not
or
mov
fcmovbe
mov
push
nop
fistpl
rclb
lret
mov
sbb
xchg
rcrl
mov
inc
pop
xor
dec
andb
push
nop
pop
cmp
dec
pop
in
movsb
in
daa
ds
jecxz
adc
test
bswap
or
stc
les
int
aas
arpl
repnz
xor
out
ret
push
dec
aaa
pop
lea
enter
cli
loopne
mov
imul
sbb
and
xchg
incb
push
nop
mov
xor
or
mov
jg
mov
push
jb
repnz
mov
mov
dec
clc
jge
mov
and
mov
sub
pop
xor
xlat
push
outsb
les
pop
js
push
cmp
pusha
and
out
pop
add
pushf
clc
inc
cwtl
sub
pop
adc
sti
shll
mov
xor
out
jg
fcoms
dec
popw
outsl
adc
les
es
popf
adc
prefetcht1
mov
fmul
or
or
pushf
imul
stos
cmp
mov
mov
push
dec
push
sub
movsb
mov
push
lret
jo
add
andb
decl
shr
mov
dec
pop
add
mov
lahf
mov
cmp
imul
add
pop
sub
pop
out
in
pop
xor
mov
rcl
shll
shrb
shl
neg
xor
loope
sar
rcrl
aas
lods
lods
ficoms
push
out
scas
pause
ret
int3
pop
add
jmp
jb
adc
xchg
pop
jnp
add
add
aaa
ret
jl
lods
leave
xchg
add
fidivrs
insl
nop
pop
pop
and
sti
or
add
out
shrb
jmp
icebp
lahf
bound
xorps
mov
addl
mov
xlat
add
sbb
jg
cli
dec
sub
adc
cmp
pop
fbld
jmp
dec
adc
lahf
pavgw
fcoms
fnstsw
mov
test
repnz
sbbb
mov
outsb
bnd
pop
sub
psrld
imul
mov
dec
add
rclb
mov
xor
loope
add
sub
sbb
xchg
imul
pop
leave
mov
adc
pop
aas
push
popf
rcrl
xchg
pop
cmp
scas
push
stc
sub
jl,pt
lods
push
xchg
es
mov
sub
loopne
push
add
and
push
push
bound
ss
sarb
sysexit
and
imul
jmp
ljmp
pop
add
aaa
orb
and
add
xor
push
xchg
mov
cmpsl
lock
negb
orl
aam
fsub
mov
scas
and
ret
pop
xor
dec
pop
stc
das
jp
jae
cmp
pop
add
mov
repnz
stc
icebp
leave
and
pop
xchg
jbe
add
jecxz
add
mov
and
loop
cmpsl
ret
and
pop
pop
mov
mov
sub
jno
xchg
add
ret
dec
pop
push
jg
addr16
mov
int3
ljmp
repz
mov
stc
push
sub
mov
adc
adc
push
adc
jmp
mov
leave
test
mov
cmpsb
xchg
out
dec
jge
in
sbb
dec
adc
mov
sub
je
push
call
idiv
xchg
stos
mov
jmp
cmp
sbb
mov
lahf
push
push
out
fmull
mov
pop
mov
jno
outsl
xchg
in
add
pop
mov
cmc
push
mov
jns
sbb
xchg
out
sbb
mov
pop
push
push
pop
xchg
test
scas
inc
sbb
mov
sarb
pop
and
pushf
dec
mov
daa
bound
xlat
dec
lahf
pop
enter
jo
mov
add
xor
add
iret
cmp
inc
sub
add
xor
loope
mov
sub
aas
loop
push
sub
dec
push
xor
imul
dec
pop
test
mov
xchg
inc
jns
or
xor
cmp
jb
mov
adc
add
or
cmp
lret
adc
lret
push
cmpsl
hlt
mov
stos
sbb
adc
and
xor
push
jl
shl
sub
sbb
aas
ds
dec
and
jmp
in
pop
dec
mov
imulb
xchg
icebp
cmp
stc
out
adc
and
push
mov
jp
cltd
pop
and
xchg
call
jnp
ret
dec
pop
neg
test
mov
add
inc
das
pop
fnstenv
sti
dec
ja
test
enter
cmp
adc
mov
mov
and
lods
dec
cmpsl
nop
outsb
leave
lret
adc
stos
adc
jmp
sbb
xlat
or
mov
mov
add
ret
mov
sub
fdivr
cmp
pop
test
cli
sbbb
lcall
jmp
ret
pop
fs
jo
or
inc
jmp
test
push
mov
xchg
pushf
adcb
adc
inc
jmp
pushf
orl
or
push
test
sbb
or
adc
cwtl
iret
test
and
mov
repnz
enter
lret
shlb
test
cwtl
sbb
test
inc
xchg
cmp
or
ss
mov
add
jp
push
nop
add
filds
or
add
fmulp
dec
xor
pop
mov
push
jne
sbb
inc
add
cltd
add
loope
cs
adc
sub
mov
pusha
push
test
sub
aad
adc
scas
inc
adc
mov
sub
pop
inc
or
ds
add
jmp
in
inc
cs
sti
aad
mov
xchg
jge
sub
stc
mov
or
add
dec
jne
jg
clc
mov
nop
cmp
dec
sub
sbb
mov
cmp
mulps
cld
push
jns
setne
mov
stos
push
inc
push
push
jmp
add
daa
shll
mov
gs
adc
sub
sub
jmp
into
jnp
add
lods
jge
inc
shll
xchg
movsl
out
xor
or
inc
nop
jl
inc
negl
and
in
daa
idivl
aaa
test
in
roll
mov
mov
test
test
xchg
jecxz
inc
pop
pop
jno
addl
gs
pop
out
push
jmp
test
ds
insb
lret
mov
insb
popa
cwtl
icebp
add
add
test
cwtl
pop
cmp
mov
outsl
hlt
adc
dec
pusha
test
cmp
xor
pop
js
mov
and
test
mov
filds
dec
add
pop
shll
icebp
pop
jnp
pushf
filds
sub
push
jmp
push
add
sbb
sub
xor
push
dec
mov
das
jge
or
jnp
ds
xor
jle
pop
mov
loopne
stc
rclb
cmp
and
push
push
xchg
push
adcw
cli
adc
daa
inc
loopne
ja
dec
adc
in
sbb
outsl
in
inc
add
sti
add
pop
leave
push
lcall
xchg
adc
mov
mov
fadds
out
mov
ret
jne,pn
pop
sti
inc
test
jg
aaa
jmp
dec
seta
fucompp
jns
mov
inc
and
cs
mov
push
dec
add
jno
lret
rcr
pop
adc
xor
popf
es
lods
add
xor
xchg
lock
jg
scas
hlt
lock
dec
xor
push
xor
mov
push
jae
or
movsb
cs
sub
sub
push
daa
mov
inc
jg
cmp
ja
mov
movsl
cmp
mov
sub
cmpsl
mov
xchg
aas
push
fildl
mov
hlt
outsb
or
mov
or
or
add
xorb
shl
testl
jo
jmp
and
loope
or
and
bound
pop
das
mov
push
and
xor
mov
sub
jp
daa
lret
adc
jae
lock
cmpl
dec
popa
addl
lret
add
mov
test
dec
adc
fistpll
jp
xchg
and
mov
imul
jb
addl
adcb
add
mov
insl
jle
lcall
mov
cmp
repz
add
jne
jmp
adc
addr16
mov
cmp
icebp
outsl
arpl
push
or
daa
lret
add
xor
js
cld
sarl
pop
fstpt
insl
xchg
arpl
es
jge
dec
pushf
inc
cmpl
and
cmp
sar
push
push
push
add
adc
mov
pop
in
cmp
xchg
stc
xchg
xor
and
push
and
sbb
js
mov
es
jmp
dec
mov
imul
push
xorb
xor
push
mov
cmc
stc
movsb
or
cmp
cli
add
in
pop
loop
movsb
sti
jg
and
push
pop
push
call
aaa
pop
xlat
dec
mov
or
mov
sub
push
mov
in
mov
adc
fsub
push
sbb
icebp
push
adc
mov
das
lea
and
pop
cli
cmp
sub
or
xorl
pop
push
mov
dec
loopne
xchg
orl
stc
pop
daa
push
ficoms
mov
pop
push
cmp
in
push
mov
aam
dec
lret
out
js
ret
mov
push
pop
add
and
or
repz
or
ret
add
xor
inc
xorb
and
aaa
mov
mov
xchg
pusha
mov
dec
hlt
test
add
and
int
scas
mov
test
pusha
dec
shl
inc
sbb
adc
ljmp
push
and
dec
and
mov
xchg
xchg
stos
dec
push
cmc
gs
mov
repnz
mov
or
sbb
sub
data16
lds
adc
or
lcall
or
mov
sbbl
clc
and
jmp
ror
or
add
jbe
sub
dec
push
into
addl
repnz
dec
add
inc
xchg
lret
jle
mov
jle
push
aam
push
mov
cmpsl
sbb
xor
insb
push
mov
jmp
xchg
or
jge
pop
pop
dec
and
out
xor
or
pop
fsubrl
repnz
xchg
sub
into
push
jmp
addr16
nop
add
gs
add
and
aaa
popf
add
stc
mov
xor
push
jo
pop
loopne
jecxz
sahf
inc
fldt
ret
repz
stos
adc
mov
inc
adcb
hlt
iret
mov
pop
test
fnsave
jle
push
enter
in
arpl
leave
mov
push
sahf
ret
jg
pop
pop
aam
imul
inc
pop
and
mov
sub
imul
pop
xor
fsubs
dec
push
sub
add
and
xor
or
test
cli
add
inc
sub
add
mov
sub
cmpb
xor
adc
testl
add
pop
call
jns
pusha
popa
lods
or
mov
jle
in
mov
jp
or
pop
sbb
xchg
cmc
pop
popf
xor
enter
imul
sub
popf
inc
or
aam
pop
negl
jp
mov
out
mov
cli
mov
inc
dec
loope
jecxz
sbb
adcw
and
jbe
jne
daa
cmp
inc
out
add
xor
das
mov
popl
push
xor
decl
je
sahf
mov
sbbb
test
mov
push
cwtl
mov
inc
popf
mov
xchg
movb
insl
jmp
dec
out
test
into
es
aaa
push
pusha
cmc
sbb
repz
add
or
jo
xchg
imulb
insl
fisttpll
pop
pop
adc
inc
jg
addr16
jno
sub
pop
xor
xchg
push
pop
cmpsl
jle
shll
mov
dec
divl
dec
jmp
and
pop
jge
ret
out
in
jno
sub
adc
mov
fs
cli
dec
or
ljmp
add
daa
in
bound
push
xor
out
mov
addr16
sar
bound
scas
xor
jp
enter
frstor
sub
xchg
je
stos
arpl
or
bnd
and
xor
sbb
cmp
push
sub
incb
add
outsb
inc
push
out
mov
in
and
jp
xchg
jle
xlat
push
inc
pop
ljmp
lock
repnz
xchg
inc
push
push
cmc
cmp
inc
scas
clc
mov
pop
out
inc
mov
fcmovne
lds
push
mov
adc
mov
imull
data16
xchg
aaa
aas
add
or
out
pop
add
movsl
inc
lea
pop
lahf
shlb
push
sbb
orl
or
and
inc
dec
adc
shl
loopne
es
pop
push
mov
xor
ja
arpl
or
stos
and
out
xchg
stos
xor
xchg
je
mov
mov
or
pop
cmp
jmp
lcall
and
mov
fbstp
repnz
sar
lcall
mov
out
inc
mov
pop
pop
pop
and
test
ret
aaa
stc
bound
add
mov
adc
jo
sti
aas
rcrl
xlat
add
sub
pop
or
addr16
adc
cli
dec
push
xor
int
jb
add
dec
xor
dec
neg
cwtl
aas
or
in
rcrl
shll
mov
cmp
push
testl
mov
xchg
add
pusha
inc
push
mov
push
pop
push
movsl
add
out
shll
hlt
cmpsl
rcr
xchg
or
inc
xchg
add
das
add
push
cld
adc
jne
jmp
xor
jno
cmc
fiaddl
les
lcall
sub
popa
pop
xchg
sub
fwait
sti
dec
inc
pop
mov
push
addl
sbb
fwait
addb
mull
push
pop
push
dec
pusha
inc
js
gs
xor
daa
data16
cmpsl
push
imul
xchg
cli
adc
out
add
sub
mov
fsubl
les
aas
ret
push
inc
mov
and
ror
dec
fstpt
or
mov
fdivp
jmp
sbb
mov
fisubs
xor
add
sub
add
and
data16
jp
ja
xchg
push
pop
push
push
inc
mov
add
out
and
test
pusha
sbb
not
ljmp
sar
pusha
push
sbb
push
mov
adc
sbb
xor
je
scas
push
sub
xor
addb
mov
out
cld
outsl
out
mov
mov
pop
push
xchg
aaa
cltd
je
cmp
cmp
rolb
lock
mov
clc
pop
call
pop
jp
push
mov
or
outsb
pop
dec
pop
mov
je
push
lock
repnz
xchg
lcall
mov
das
inc
mov
xchg
ja
nop
orl
cmp
sub
or
mov
out
addr16
cmpsl
icebp
into
add
push
outsl
push
or
push
pop
add
sarb
stos
int
or
jmp
or
adc
das
jl
leave
or
jae
out
mov
pop
lods
mov
push
js
fs
scas
mov
sbb
arpl
daa
pop
xchg
or
adc
cmpsb
hlt
xchg
mov
sub
out
sbb
int3
and
push
dec
and
out
mov
cmpsb
jp
jmp
sarb
add
imulb
pop
or
and
mov
mov
aaa
inc
push
jp
add
push
pop
pop
push
mov
adc
cmpb
sbb
xchg
rorb
popf
push
pop
dec
push
mov
into
sub
sub
push
les
dec
push
les
stos
add
pop
adc
or
repnz
mov
aas
aaa
inc
cwtl
lcall
pop
lcall
std
scas
xchg
into
rcrb
inc
cmp
scas
and
xor
es
jno
inc
pop
shrb
sub
jle
out
lahf
sarl
rorl
fiaddl
pop
xchg
pop
pop
cld
stos
movsl
jno
jne
add
fstps
mov
inc
xchg
jmp
lret
or
xchg
sbb
fildl
xor
push
mov
mov
icebp
push
jmp
es
or
xchg
ret
or
aad
add
sti
sub
add
lret
push
mov
sahf
add
int3
mov
test
sub
xchg
arpl
xchg
pop
lret
push
sub
mov
push
les
out
fmul
in
testl
in
mov
sub
fadds
inc
add
jne
inc
jg
push
push
shlb
shl
jmp
bound
xchg
lcall
mov
and
jmp
xchg
push
push
or
mov
push
xchg
push
jmp
dec
popf
jl
mov
shl
sub
inc
push
icebp
scas
in
add
push
push
jmp
mov
adc
in
cs
xor
lcall
in
pop
mov
inc
cs
sbb
and
inc
mov
jmp
cmp
adc
push
pop
jmp
sti
sub
jmp
or
add
push
push
int3
adc
dec
mov
or
ds
push
xchg
sub
push
lods
nop
pop
and
lds
push
in
ss
sbb
js
adc
xor
mov
cmp
mov
dec
mov
inc
leave
pop
mov
xor
push
mov
mov
sbb
sbb
add
push
sbb
sub
sahf
mov
mov
add
outsb
inc
fsub
lock
jb
imul
sbb
dec
push
and
sub
push
add
mov
inc
aam
pop
das
lods
sar
es
or
sti
xor
mov
loop
add
xchg
out
adc
xchg
cmp
jne
sbb
or
jl
jb
popf
icebp
add
add
fwait
xchg
push
cwtl
pop
sub
cmp
cmp
jmp
out
add
daa
ss
imul
ds
xor
shlb
push
sbbl
leave
mov
lea
inc
jno
mov
mov
mov
mov
pop
jmp
push
xchg
mov
out
clc
or
adc
cs
mov
loop
pop
sahf
mov
mov
mov
fidivrl
cs
mov
shrb
dec
cmp
push
adc
and
lea
or
test
xlat
add
xchg
lcall
mov
xor
div
adc
mov
mov
clc
add
jns
lods
test
dec
dec
pushf
ljmp
and
adc
shl
inc
arpl
cli
jns
lret
or
add
out
sub
dec
je
out
dec
pop
jp
ficomps
popf
push
test
mov
sbb
inc
dec
sub
mov
push
nop
mov
idivb
in
sbbb
sub
test
int3
mov
sbb
push
popa
pushf
adc
fdivrs
loop
cmc
inc
sub
jae
push
fbstp
fidivs
sbb
gs
pop
imul
js
iret
lcall
push
rorl
adc
or
sub
or
xor
or
cmp
adc
daa
pop
rclb
cli
dec
xlat
push
stos
mov
rorb
idiv
xor
ds
and
pop
or
imul
adc
pmuludq
sub
push
cwtl
push
add
mov
out
daa
jg
mov
adc
push
and
ss
pusha
daa
xchg
push
cmp
jl
movsb
inc
add
jb
js
leave
sbb
jle
icebp
mov
xor
stos
sbb
adc
sbb
add
int
ss
lret
jno
in
push
dec
add
and
mov
outsb
or
cld
mov
mov
js
addb
cmp
push
mov
jnp
loop,pn
adc
adc
adc
ss
adc
push
js
add
sbb
or
enter
or
push
jg
sbb
scas
cmp
scas
xor
pop
push
push
cli
jne
outsl
adc
int
and
xlat
mov
or
push
pushf
mov
mov
push
lret
gs
mov
mov
je
push
or
repz
rcrb
mov
pop
push
outsl
add
das
jmp
sub
cmpsl
cmp
das
jmp
add
aaa
dec
jbe
add
orb
and
adc
hlt
sub
cmp
xchg
cltd
dec
push
ljmp
test
mov
adc
mov
ljmp
mov
fs
add
pop
mov
fwait
xor
inc
pop
lods
mov
xor
jl
arpl
pop
test
mov
pop
mov
insl
push
fbld
roll
cmpsl
cmpsl
pop
lock
dec
mov
adc
bound
inc
daa
in
sbb
inc
cmpl
jle
lds
push
shll
xchg
out
mov
aam
dec
rorl
mov
xchg
scas
sbb
into
sbb
pop
inc
repz
outsl
cmpsb
push
fiadds
dec
out
ret
jo
and
push
jmp
sarb
push
das
jp
lcall
popf
push
push
sbb
sbb
adc
cmp
gs
jno
aaa
test
cmp
lods
push
jle
pop
or
icebp
sbb
jne
mov
lret
loopne
mov
call
test
add
dec
add
sbb
imul
pop
or
sub
in
data16
mov
in
cld
orl
dec
jmp
in
mov
xchg
sahf
test
cltd
pop
hlt
dec
fisttps
push
pop
nop
in
push
sub
mov
jp
add
jg
lods
or
lret
aaa
push
jg
push
mov
add
cmc
mov
add
ret
sub
pop
adc
push
idiv
inc
cli
in
jo
mov
mov
daa
leave
dec
push
dec
jno
mov
andl
pop
cwtl
nop
dec
in
pop
iret
push
and
jbe
filds
mov
cli
movsb
notb
into
sub
movsb
fistl
sarl
sarl
mov
cli
dec
sbb
add
jbe
and
jmp
inc
rorl
push
add
dec
adc
pop
sub
cwtl
cmc
push
in
xchg
sbb
mov
lods
sub
adc
outsl
dec
inc
aam
adc
call
sub
adc
call
adc
aam
test
jae
inc
inc
or
lock
mov
cs
mov
xlat
or
add
sarb
es
and
jo
and
jo
push
cmp
jno
addl
cs
cmp
xchg
stos
xor
jle
and
loop
mov
mov
sub
xor
sub
leave
push
fdivs
rolb
push
sub
pop
iret
or
mov
xchg
jmp
pop
arpl
add
push
shrl
xor
and
or
paddb
pop
xor
lret
and
movsl
mov
lcall
fldl
ja
mov
pusha
repnz
lcall
ja
jle
jb
bound
adc
sub
andb
jmp
add
fsubrl
mov
mov
xor
and
imul
mov
fiadds
inc
ja
push
or
cs
push
push
sbb
or
in
add
aas
mov
jbe
loopne
cld
pop
jns
mov
push
das
jmp
gs
or
and
xchg
fcmovnbe
std
fnsave
lret
je
rorb
pop
adcb
cmp
pop
inc
push
and
dec
xchg
shrl
out
test
stos
stc
ljmp
call
addr16
sub
mov
add
mov
mov
pop
push
arpl
mov
lock
pop
adc
fistps
into
sub
jbe
dec
mov
push
jo
es
add
insl
mov
mov
sbb
add
and
sbb
sub
inc
arpl
cltd
ljmp
movsb
rclb
ret
push
add
ss
dec
mov
mov
sahf
daa
cmp
lahf
int
or
sbb
xchg
popf
cld
mov
dec
ret
sub
pop
mov
les
jmp
push
mov
gs
push
add
adc
jns
add
imul
sub
xor
xor
xor
pop
outsb
test
fcoms
flds
inc
addr16
jmp
cmp
push
lock
or
lds
repnz
and
andb
push
out
cwtl
stc
nop
lds
mov
sbb
adc
jns
test
sub
lods
xchg
jne
outsb
mov
pop
ucomiss
push
mov
out
ret
pop
pop
dec
mov
pop
cmc
in
add
in
mov
add
sub
js
fdivr
push
mov
adc
out
dec
dec
inc
mov
movb
movb
test
rorl
dec
dec
scas
pop
mov
push
mov
shll
cmc
outsb
aad
jmp
jp
ret
out
and
aas
adc
xlat
jmp
mov
adc
je
add
lds
jnp
cmc
lds
hlt
mov
xor
test
clc
cld
loop
jne
ret
push
push
jp
dec
pop
shll
jno
inc
and
adc
lea
ja
mov
lret
or
repz
jecxz
xchg
dec
or
jle
add
xor
adc
jmp
shll
neg
sub
add
xchg
test
das
sti
sub
mov
xor
cmpsb
cmp
lcall
push
in
cwtl
adc
repz
mov
push
mov
jp
repnz
inc
add
adc
jle
push
dec
dec
xor
jne
shl
stc
and
pop
xor
insl
jne
add
and
mov
fdivrl
imul
add
stc
mov
outsb
clc
mov
jns
sub
bound
xor
rolb
fimull
cmpl
inc
or
aam
push
int3
dec
mov
rorb
sbb
pop
gs
pop
or
leave
fnstcw
mov
jne
or
sbb
and
sub
cmc
inc
sbb
xor
sbb
dec
push
aas
rorl
lds
pop
mov
sub
jecxz
cmp
pop
jmp
jle
pop
ds
pop
mov
inc
popl
test
into
cs
out
xlat
or
cmp
push
add
icebp
aas
loopne
call
or
add
aaa
dec
and
pop
sub
inc
int
fwait
in
in
mov
xchg
xlat
adcb
cmp
adc
push
or
jp
aam
add
xor
pushw
jle
sub
imul
cld
xchg
lods
mov
inc
or
mov
cmp
jge
add
sub
outsl
aam
adcl
cli
jb
pusha
inc
push
push
nop
iret
or
inc
xor
ficoml
jae
pop
pusha
inc
xchg
aas
daa
stc
pusha
mov
shll
insb
jno
scas
and
or
es
push
out
sub
pop
adc
psubsw
inc
sub
cmp
xor
sbb
push
pop
push
push
test
jmp
xlat
sbb
cmp
mov
xor
jns
jmp
int3
pop
loop
dec
cmpsl
jge
call
shrl
scas
or
mov
aad
outsb
and
jmp
or
out
in
aaa
and
sub
sub
sub
outsb
clc
rolb
pop
xchg
outsl
mov
push
push
repnz
push
jg
jae
loop
stc
jg
jmp
mov
dec
ljmp
test
mulb
dec
rol
push
sub
test
adc
fcompl
mov
addb
jmp
sub
pop
ret
out
addl
ret
jg
cmp
mov
or
lcall
pop
das
test
jmp
sub
inc
pop
xor
mov
leave
sub
cli
sub
int
or
icebp
or
adc
aaa
add
dec
add
or
sub
addl
sub
adc
pop
inc
add
pushf
imul
imul
cld
les
mov
mov
loope
pusha
mov
add
into
mov
mov
sub
sub
add
cs
cwtl
mov
add
test
jl
inc
sbb
add
cli
mov
jns
pop
dec
or
xchg
or
mov
mov
sub
outsb
add
sub
push
push
mov
lret
and
testl
adc
or
ds
push
jo
jge
fisubs
adc
cld
inc
inc
push
push
inc
gs
mov
adc
icebp
aad
popa
arpl
mov
push
ret
mov
xchg
sarb
ret
jge
cltd
mov
pop
jae
push
js
ds
test
adc
insl
loope
sub
dec
popf
std
add
cmc
pop
push
mov
in
int3
jl
cmp
push
xor
outsb
or
jmp
jno
div
xchg
jne
jo
or
cld
shl
xchg
jno
mov
fsub
push
jmp
mov
xchg
aas
push
sbb
outsb
aas
lds
or
push
mov
inc
rolb
ja
cld
and
pop
jae
cmp
jns
mov
jmp
aad
lock
push
push
lret
into
je
adc
shrl
jecxz
in
jno
imul
sti
shrb
ret
mov
or
notb
movsl
pop
fcmovbe
cli
or
jb
dec
mov
adc
pop
sahf
or
fdivl
mov
fs
push
les
shrb
adc
clc
cmp
cli
lock
bound
sbb
jmp
adc
sahf
jmp
mov
cwtl
in
fsts
push
ret
call
push
push
sub
and
lret
jae
pop
loop
clc
test
adc
movsb
test
stos
sub
sbb
and
cmpb
std
lret
adc
not
cwtl
mov
sti
xor
movsl
sbb
jnp
cmp
pop
xor
pop
out
cmc
in
cmp
stos
in
dec
xor
cltd
jl
pop
mov
test
orb
xorb
lea
sbb
pop
cmpl
add
cmp
xchg
inc
cmp
test
clc
fisttpl
addb
cmpb
in
sbb
nop
test
aas
aas
clc
dec
pop
icebp
ret
pop
or
push
outsb
push
and
mov
jmp
pop
add
fidivs
dec
das
test
addl
dec
adc
lods
jg
and
bound
or
ret
repz
sbb
xlat
jp
pop
mov
rorl
inc
dec
lock
mov
mov
sub
mov
jbe
test
fidivrl
cmpb
or
cli
punpckhdq
mov
xchg
sbb
push
mov
add
mov
std
inc
pop
or
pop
pop
pop
out
popa
test
icebp
or
mov
adc
out
push
xchg
sti
adc
repnz
scas
inc
and
sarl
insb
lahf
and
mov
push
mov
sub
jb
dec
data16
xchg
inc
push
jp
and
jecxz
mov
jmp
jg
push
xchg
popf
jbe
jp
cltd
loope
cmp
or
add
push
sbb
sbbb
mov
jns
xchg
sub
or
sbb
cmp
and
jno
push
mov
popa
lret
or
pop
out
push
push
shr
and
dec
or
or
dec
in
ficoms
cmp
sub
or
pop
push
pop
sbbl
inc
adc
jl
scas
nop
mov
mov
pop
cmp
cmpsb
jmp
xchg
xchg
xchg
pusha
pusha
push
jmp
pop
xchg
fnstsw
popl
jmp
daa
jge
cmc
mov
cmp
sbb
jae
and
xor
cs
cmpsl
pushf
push
xor
push
rcrb
fldl
add
popa
pop
aam
pop
add
push
neg
mov
mov
punpckhwd
sub
pop
sub
in
mov
adc
xchg
in
pop
dec
mov
add
stos
xchg
push
scas
into
add
xor
mov
jmp
xchg
jmp
sarb
sbb
sbb
test
clc
jmp
mov
inc
xor
scas
add
push
roll
inc
pop
gs
add
pop
or
and
pop
or
adc
mov
in
test
fs
test
fcompl
xchg
push
aam
and
dec
mov
inc
inc
jge
std
pop
lods
js
jmp
push
and
mov
mov
push
pop
pop
gs
push
xor
pop
popa
dec
adc
hlt
fsubp
cmp
mov
rorb
push
push
nop
sbb
imul
add
outsb
add
cmp
jmp
dec
pop
fnstenv
push
adc
testl
orb
dec
iret
pop
into
push
je
cltd
mov
inc
ja
dec
loopne
loopne
mov
dec
inc
sub
jmp
xchg
daa
lahf
jbe,pn
in
dec
hlt
mov
cmp
cmpb
push
cmp
and
add
into
imul
mov
test
movhps
add
repnz
jno
add
and
and
pop
notb
mov
movsl
ret
repnz
add
jle
mov
shll
mov
mov
adc
test
xchg
lds
adcb
loop
and
push
loope
jl
out
jmp
add
mov
sbb
nop
lcall
mov
lahf
dec
std
pop
add
cmp
cs
daa
jmp
hlt
into
rclb
daa
je
jns
insl
or
xor
adc
or
fadds
pop
push
push
push
inc
inc
jo
das
das
pop
incl
repnz
cmp
cld
sub
pop
inc
mov
push
inc
decb
sbb
add
ljmp
je
adc
lds
arpl
shr
push
cmp
outsl
adc
pop
push
pop
push
jle
std
lret
aam
add
icebp
sbb
sbb
or
jne
inc
xchg
dec
sar
push
mov
push
push
cmpb
aad
shl
inc
xchg
mov
hlt
mov
cli
inc
scas
int3
cmp
repnz
dec
pop
pop
push
scas
or
sbb
lahf
xor
push
add
and
fmuls
mov
mov
push
add
dec
pop
sub
imul
jo
mov
sahf
mov
pop
adc
into
mov
or
add
push
mov
sub
xchg
lret
and
loopne
ljmp
les
push
push
les
ret
cli
cld
or
aam
adc
xor
sub
sbb
rcrb
lods
js
dec
in
divb
shlb
fs
test
mov
mov
pop
add
xor
lds
pop
sub
stos
sub
jno
sbb
and
pushf
sahf
or
xor
jge
inc
pop
sub
push
pop
jmp
xchg
mov
insb
add
push
inc
dec
or
adc
loope
add
hlt
ljmp
push
inc
loop
push
xchg
adc
aad
and
and
xor
xchg
and
imul
inc
xor
js
dec
jbe
or
mov
les
rclb
jp
jo
jle
pusha
sub
adc
aas
mov
jle
mov
sbb
aas
xchg
addr16
add
test
inc
into
push
mov
out
inc
repz
add
jge
shl
inc
pusha
push
insb
imul
inc
insl
lods
repz
cld
or
outsl
xor
mov
insl
or
jno
fcoml
jle
scas
lds
xchg
aad
imulb
cmp
test
mov
pop
and
loope
mov
stos
std
loop
xchg
lret
repnz
adc
mov
stc
sub
shr
cwtl
lock
aaa
test
les
lock
add
adc
cmpsl
shll
ffreep
xor
stos
leave
js
shlb
and
mov
lock
jnp
std
in
add
lds
icebp
int
shl
negb
loopne
sub
cli
xchg
add
add
pop
adc
dec
push
xchg
pop
mov
mov
and
jmp
push
add
inc
and
dec
pop
inc
rcrb
xchg
fisubs
sbb
push
jne
pop
push
loopne
sub
push
inc
mov
fnstcw
shrl
repz
pop
or
push
pop
pop
ljmp
push
ja
sbb
mov
adc
movsl
outsb
ljmp
jmp
mov
inc
addr16
xor
movsb
jbe
outsb
jmp
out
inc
and
andb
shr
jmp
punpckhbw
pop
into
push
dec
mov
or
push
dec
push
cmc
add
out
add
mull
test
orl
test
inc
dec
mov
addl
adc
jno
popa
sbb
sbb
lret
add
push
jnp
nop
cwtl
push
out
insb
xchg
in
and
test
rorb
lret
or
popa
sub
jnp
xor
push
push
pushf
outsb
andl
or
pop
and
and
je
ja
xchg
add
popf
jns
mov
push
or
add
sub
jne
in
pop
cld
ja
and
test
pop
jle
bound
push
in
stos
movsl
rcll
mov
iret
dec
pop
adc
fnsave
push
add
enter
or
fsubrp
xor
test
inc
mov
add
into
or
pop
pop
pop
or
mov
pop
sub
cmp
aam
or
outsl
adc
ljmp
sbb
dec
out
ret
pop
int
mov
xchg
mov
stc
xchg
xorb
sub
jmp
sub
add
bound
push
sbb
xor
loop
dec
jnp
icebp
sahf
jecxz
pop
rol
xlat
xor
sub
movsb
test
xlat
cli
mov
not
push
xchg
aas
inc
add
inc
add
add
out
mov
leave
gs
mulb
mov
mov
stos
add
inc
lcall
and
jp
jle
mov
push
in
test
ret
stos
lods
test
add
jl
sbb
ljmp
inc
push
pop
loope
or
mov
pop
in
push
push
mov
pop
popf
pop
or
nop
xlat
xchg
mov
imul
cli
jmp
pop
inc
sub
lods
stos
clc
or
bnd
adc
push
push
mov
ds
loop
je
and
push
js
push
es
cmp
mov
adc
push
addr16
in
sbb
sub
jle
iret
ds
mov
and
jecxz
push
cld
loop
js
cli
push
adcb
andb
add
ljmp
adc
jmp
mov
or
or
shlb
push
xlat
jbe
dec
out
sti
sbb
jne
pop
imul
xchg
pop
int
or
lods
pop
fcomps
push
or
stos
jo
pop
jno
mov
mov
inc
xchg
cwtl
repnz
and
mov
inc
or
push
popf
add
or
lock
and
xor
dec
push
xor
bound
and
adc
pop
ja
in
push
mov
stc
jmp
in
xor
jmp
add
or
clc
test
in
mov
adcl
das
out
cmpb
jb
inc
push
frstor
outsl
pop
jmp
in
stos
lahf
faddl
pushf
cld
cltd
pop
sub
sti
mov
int
and
ljmp
out
stc
push
rclb
incb
lahf
out
fisttpll
pop
test
cs
sub
xchg
pop
les
into
jmp
lds
imul
clc
or
nop
mov
cwtl
out
dec
dec
jns
negb
daa
inc
xorb
push
mov
icebp
mov
inc
xchg
lret
std
icebp
add
mov
stos
es
and
push
and
mov
popf
sub
popl
call
pop
sub
and
imul
sub
inc
mov
or
ficoml
push
add
int
pop
jl
cli
add
mov
or
sub
repz
incb
push
push
cld
push
js
jecxz
sub
add
inc
in
push
imul
sbb
jae
lea
mov
stc
mov
or
ja
cmp
mov
clc
pop
ja
jle
jne
jg
imul
mov
add
repz
test
addr16
repz
and
push
call
stos
hlt
and
adc
imul
je
andl
push
lds
add
sub
pushf
add
inc
push
dec
push
push
cmp
or
add
dec
push
mov
add
js
add
xchg
or
add
pusha
pop
pop
sbb
sbb
mov
jmp
sbb
icebp
push
hlt
rorb
adc
adcl
jno
lahf
or
sarl
cmp
xor
dec
sbb
push
jmp
shl
push
or
sub
sbb
test
insl
xchg
js
pop
cmpl
xchg
or
mov
cmp
jecxz
xor
insl
pop
fs
adc
or
mov
addb
cmc
add
arpl
nop
repnz
sbb
jp
sub
into
clc
inc
mov
ret
cld
out
jmp
int3
mov
jmp
mov
movb
mov
jb
aam
and
lcall
pop
movsb
jae
inc
es
lock
enter
cli
or
pop
or
mov
push
add
mov
cmp
mov
push
mov
fs
sub
mov
shll
pop
out
add
inc
test
or
lock
popf
push
cmp
or
movsl
dec
pusha
ljmp
jns
cmpl
jmp
inc
mov
push
daa
loop
lret
sub
sub
xor
xchg
push
sti
add
xlat
loopne
pop
dec
xchg
inc
add
jmp
add
jle
cmp
add
mov
andb
or
ljmp
push
imul
popa
int
shlb
jmp
fsubrs
js
sbbb
lret
ja
fimuls
imul
jmp
out
adc
mov
pop
cmp
or
sbb
inc
xor
out
inc
sbb
sbb
dec
or
lret
fbld
sbbl
xor
inc
jmp
out
push
xor
das
sub
stos
push
and
sub
ljmp
loop
xchg
or
testb
cmp
stos
mov
mov
pop
push
jno
imul
add
rclb
cmp
cmp
out
adc
into
push
pop
add
sub
mov
push
add
imul
push
icebp
loope
jmp
fcmovbe
mov
push
push
addr16
test
sub
fldz
xor
call
cli
adc
popa
jne
sub
push
xchg
xchg
cpuid
inc
sub
mov
ret
push
pop
sub
popf
pop
cmp
and
popf
cmp
pop
dec
adc
pusha
jmp
cmp
sbbb
andb
and
repz
mov
je
adcl
fisttps
sbb
pop
ljmp
iret
jmp
pop
add
jo
addb
push
push
pop
test
test
jle
jmp
inc
mov
pop
mov
xor
dec
loope
mov
sub
sar
sub
stos
adc
jns
adc
jmp
pop
jle
sub
dec
add
sub
jo
jmp
xchg
stos
mov
adc
rolb
push
dec
mov
out
sbb
sbb
js
lahf
sub
jle
jb
mov
add
dec
push
and
push
push
loope
jle
mov
dec
add
xchg
arpl
xlat
out
add
shr
not
aad
aas
ret
cmpsb
lret
mov
cvtps2pi
ja
xor
xchg
pop
add
mov
and
pop
fwait
adc
test
jmp
add
aad
sar
or
or
jle
lds
jo
push
mov
push
sub
and
sub
lock
xchg
not
inc
inc
push
shlb
inc
push
les
loop
add
shrb
or
lret
in
cwtl
and
and
ret
and
aam
std
nop
sub
les
push
add
xor
cltd
les
cmp
mov
push
mov
aas
movsb
stc
insl
push
dec
insb
sub
js
iret
clc
pop
pusha
pop
dec
sub
sub
repnz
pop
hlt
inc
std
or
cmc
xor
sahf
repz
scas
mov
in
push
dec
cmpsb
gs
cmp
jno
xor
roll
add
arpl
jl
push
jns
sub
sub
push
or
sub
pop
fiadds
mov
add
fisubrs
sbb
mov
jo
outsl
pop
test
insl
outsl
sub
jae
jae
and
not
stc
ss
push
inc
inc
mov
pop
push
push
or
jbe
add
or
stc
mov
xchg
pop
mov
stos
insb
pop
popa
mov
and
imul
jmp
jecxz
lahf
push
push
push
pop
pop
test
add
clc
int3
jae
xchg
pop
pop
fucomp
sub
lods
dec
out
repnz
add
sti
inc
dec
and
clc
addl
aad
jns
push
aas
out
xorb
addr16
in
fistpl
xchg
or
push
push
xchg
add
and
data16
mov
push
jmp
cmpl
loop
mov
out
mov
and
mov
subb
xor
leave
cmp
imul
mov
xor
push
arpl
sbb
push
outsb
mov
hlt
push
lahf
fimuls
cwtl
mov
mov
ret
xchg
sahf
fnstcw
in
mov
push
mov
xchg
out
divl
test
cmp
mov
cmpsl
aam
add
jmp
pop
test
dec
pop
dec
mov
stc
lds
addr16
dec
xchg
rolb
mov
dec
in
xchg
or
das
jp
mov
cmp
lods
icebp
inc
loop
push
pop
push
cmp
pop
data16
pop
cwtl
pop
and
sbb
cmpsl
push
out
xor
lahf
push
mull
ret
pop
push
xchg
dec
jno
mov
and
push
arpl
mov
push
or
hlt
add
dec
jecxz
push
mull
ja
popf
xor
push
ret
dec
push
scas
fcoms
outsl
or
push
cmp
orb
adc
cmp
loope
jmp
testl
int3
push
push
ds
es
sbb
xor
pop
add
cmp
lock
push
nop
mov
mov
inc
das
push
push
push
cmp
mov
inc
adcb
repnz
cli
add
ljmp
push
fstpl
xchg
sbb
ret
popf
ja
outsl
pusha
cmp
loopne
es
div
xchg
mov
mov
sub
repnz
negl
and
push
mov
hlt
and
or
lret
cli
pop
add
mov
jb
sbb
jecxz
adc
jne
notb
test
jmp
loope
inc
outsl
idivl
add
mov
mov
and
mov
mov
mov
or
mov
decb
loopne
dec
test
es
pusha
cmp
jmp
xchg
cld
les
lret
cwtl
xor
inc
ret
push
adc
and
mov
sarl
aad
push
dec
add
and
mov
jmp
and
cli
je
stos
test
das
dec
mov
sub
mov
inc
push
movsl
dec
push
mov
das
out
inc
cmp
pop
add
cmpsb
pop
add
adc
mov
mov
pop
add
xchg
sub
das
popa
jnp
test
sbb
sbb
adc
cmp
push
ficoms
adc
sub
in
add
cs
cmp
xchg
or
push
pop
jne
out
ffreep
insl
das
out
fstpl
pushf
lea
adc
sbbb
shr
and
mov
or
mov
jmp
sarb
add
in
xchg
into
or
aad
pop
data16
mov
dec
xchg
es
hlt
stos
push
data16
adc
and
not
inc
dec
push
mov
cmpl
and
das
lods
movlps
mov
xchg
push
or
fmull
cld
dec
pop
mov
mov
dec
mov
inc
insb
pop
into
pop
cs
xor
jmp
mov
mov
mov
and
pop
push
lret
bnd
or
outsl
add
push
and
cmp
add
clc
jmp
push
jmp
rcll
jp
lock
jg
in
fidivl
pop
mov
mov
das
xchg
add
xor
jmp
enter
gs
into
out
cs
cmp
push
mov
add
into
jmp
pop
adc
xor
pop
inc
cmp
jmp
not
dec
mov
pusha
mov
adc
repnz
push
ss
cmp
xchg
mov
jb
aam
pusha
dec
pop
xor
stos
inc
jg
add
jl
pop
xor
jns
jae
dec
ss
hlt
push
push
subl
sar
int
xchg
repz
iret
shll
jmp
push
in
aam
add
aaa
pusha
aaa
cmc
push
jmp
xchg
pop
int3
mov
ret
jg
and
push
arpl
dec
or
mov
mov
sub
dec
clc
loope
inc
xor
insl
sub
add
adc
pushf
pop
adc
hlt
sbb
xor
icebp
fs
leave
push
inc
xor
sbb
insb
ds
push
imul
jmp
inc
idiv
fildll
repnz
push
idivl
shlb
xlat
fs
add
mov
hlt
cmpl
sub
jle
xchg
dec
ljmp
jl
xchg
imul
adc
in
sub
or
aaa
xor
rorb
js
testb
imulb
jmp
sbb
xor
cmc
pop
mov
and
dec
mov
xor
inc
mov
push
jne
js
push
lock
popa
sub
mov
into
xor
xchg
mov
out
xlat
sub
shrl
push
push
mov
xor
jmp
out
mov
pop
push
lret
or
and
pop
fcoml
push
push
mov
jle
sti
xchg
negl
sub
pushf
test
ss
test
pop
pushf
sbb
aaa
mov
adc
ds
mov
pop
jbe
or
mov
and
loopne
lds
push
inc
gs
ror
pavgb
add
pusha
adc
pop
mov
aad
sub
pxor
insl
outsb
mov
or
pop
or
or
pop
std
in
das
aam
xchg
pop
stos
jb
push
fstp
inc
call
jnp,pt
int3
xchg
sbb
pop
cltd
mov
addr16
push
sbb
or
rol
pop
loopne
test
in
add
stc
xchg
cmc
scas
hlt
leave
insb
inc
sbb
aad
mov
ret
orb
pusha
cmc
shrl
fsub
sub
loope
sub
loope
jle
jmp
dec
insl
add
sbb
xor
call
lds
or
lahf
movlps
jle
mov
jmp
ficoml
lock
scas
hlt
inc
xchg
rcl
push
subb
pop
xchg
dec
sub
adc
lods
push
pop
adc
xchg
add
sub
mov
mov
pop
mov
inc
fcomps
shr
pop
push
jns
cmp
xor
mov
popf
adc
leave
or
pop
jbe
or
gs
sbb
xor
and
daa
sti
filds
push
push
xchg
js
jmp
jl
and
push
push
fld
cli
or
lret
in
clc
sub
push
mov
pop
sub
fs
fstl
inc
mov
and
sarl
xchg
sti
ds
cmp
test
popl
mov
and
pop
add
mov
and
enter
scas
dec
fs
pop
gs
or
jl
dec
xchg
rcrl
adc
mov
xor
repnz
jmp
xchg
sub
inc
add
fstpt
xchg
and
xor
lods
cld
pop
mov
fmuls
mov
ds
das
mov
add
cwtl
ret
xchg
imul
or
cmp
lahf
inc
add
rcrl
rcrb
stc
in
js
jmp
orl
imul
aam
or
gs
sbb
jle
inc
jmp
dec
push
leave
stc
outsb
mov
aad
xchg
pop
add
lods
sbb
push
aas
mov
cmp
or
bound
pop
push
orl
mov
aam
pop
je
push
push
dec
pop
and
or
jmp
dec
push
loopne
out
add
dec
inc
jmp
repz
inc
adc
fstpt
and
pop
test
pop
xor
in
adc
dec
ds
adc
cmc
addr16
scas
push
mov
or
mov
sub
push
arpl
sub
orl
aas
movsb
push
mov
aaa
push
mov
mov
ret
push
jl
jmp
pusha
popa
push
loope
push
idiv
les
jle
jmp
cmpsb
sub
fs
jb
sub
popa
jge
sub
fnstenv
mov
clc
adc
add
and
push
leave
jno
fxch
subl
push
ds
push
inc
pop
fwait
shl
das
add
mov
mov
mov
xchg
daa
in
jb
adcb
cmpsl
add
mov
testl
mov
pop
add
or
jmp
or
and
mov
dec
mov
xchg
out
cli
testb
push
loop
fistl
inc
call
in
out
cmp
sub
mov
adcl
mov
push
add
mov
add
arpl
rcr
sub
xchg
ret
sub
cmp
push
and
ss
xchg
dec
xchg
daa
lahf
pop
pop
add
shr
fs
mov
pop
or
lahf
xor
loopne
jl
dec
sub
jmp
pop
pop
mov
ret
out
imul
out
std
in
ja
add
sbb
mov
nop
adc
mov
mov
and
and
sti
aam
pop
lahf
push
jmp
negb
jno
cwtl
sbb
jge
jbe
sbb
test
jb
into
js
shlb
mov
push
daa
and
push
cwtl
inc
les
and
mov
mov
cmpsl
fwait
pop
inc
adc
adc
rcrb
jns
add
mov
add
negl
shlb
cmp
add
xchg
aam
jle
call
sqrtps
push
mov
mov
arpl
shr
sbb
jnp
mov
dec
mov
push
mov
sub
repz
arpl
aaa
inc
mov
pop
sub
jl
jl
dec
imul
xchg
add
pop
nop
xor
jge
lock
sbb
add
pop
pop
mov
inc
out
push
sti
jns
aas
subl
ficoms
inc
xchg
in
js
mov
add
mov
jmp
cmp
ret
mov
gs
push
jbe
jmp
daa
movsl
lcall
int3
lods
inc
dec
mov
mov
imul
add
jl
das
clc
les
push
loope
sub
mov
jnp
sbb
or
not
push
sub
shll
ret
pop
and
pop
mov
repnz
pop
cld
xchg
stc
lods
pop
dec
cmpsb
xor
sub
or
jae
fcoml
stos
lahf
js
mov
cld
pushf
pop
push
mov
jg
jb
pop
out
addb
add
in
pop
cs
and
push
add
inc
cmp
or
insl
cmc
mov
dec
jnp
popf
xor
rcll
sub
pop
mov
push
sub
ss
pop
mov
adc
popf
pop
nop
outsl
not
jp
xchg
lcallw
inc
jmp
push
sbb
pop
addr16
add
ja
mov
pop
cmpsb
pop
adc
cmp
push
push
shll
notl
stc
push
mov
pop
mov
cmp
pop
sahf
add
and
hlt
inc
pop
bt
sub
add
mov
jmp
pusha
jbe
out
pusha
push
inc
pop
dec
dec
out
cmp
mov
dec
cwtl
test
jg
mov
cmp
cmp
push
pop
jecxz
dec
lret
iret
jno
mov
les
mov
das
fwait
push
outsl
sub
sub
xbegin
xchg
nop
mov
shr
mov
pop
popf
mov
add
push
add
iret
es
adc
mov
sbb
and
test
xchg
test
stos
cmpsl
xlat
inc
fdivrs
xor
mov
movsb
scas
mov
pop
shll
cmp
and
fmuls
cmp
mov
sub
cli
cld
nop
hlt
inc
lcall
loop
cwtl
jl
cmp
pop
sbb
arpl
xor
aam
andb
mov
jae
cli
jmp
frstor
pop
inc
cmp
and
pop
add
push
xchg
pop
clc
sahf
adc
pusha
fs
in
pop
sub
lahf
vmulps
push
stos
mov
popa
mov
shl
xchg
pop
sub
inc
adc
inc
add
mov
pushf
pusha
andb
pop
jb
scas
xchg
inc
xchg
ret
mov
mov
and
push
and
lock
dec
add
not
inc
push
pop
jge
fsubr
adc
ret
push
mov
dec
add
or
or
pop
lahf
dec
ljmp
add
push
pop
cmpsb
icebp
push
cmp
inc
lock
imul
in
sbb
jmp
shr
mov
xor
push
adc
xchg
pop
jmp
jle
loop
xchg
inc
subl
test
idivb
ljmp
jb
dec
jae
and
lods
scas
inc
xor
into
jo
jne
pop
jmp
pop
ret
aam
push
pop
bound
ljmp
xor
sbb
notl
add
dec
inc
jecxz
scas
ret
imul
push
add
mov
jmp
or
lods
push
dec
and
shrb
jmp
push
aam
dec
call
stos
leave
pop
xor
pop
mov
ret
mov
push
add
dec
in
inc
mov
subl
outsl
cmp
push
insl
pop
imul
mov
xor
sub
or
sub
sub
pop
xchg
into
adc
jns
nop
mov
test
jmp
add
mov
jns
shrb
xor
fcmovnb
ss
pop
pop
adc
push
test
test
push
add
jnp
rolb
push
loope
adc
mov
daa
pop
std
mov
cwtl
push
inc
je
dec
lds
lcall
imul
shlb
push
fildll
xchg
inc
push
or
add
das
dec
arpl
dec
and
nop
outsl
add
add
mov
int3
add
mov
pusha
sub
cmp
push
jmp
repnz
fisubl
and
jo
sbbb
in
in
cmp
sub
add
imul
and
bswap
daa
iret
and
inc
out
push
ja
call
stc
or
daa
cli
xor
add
push
xor
adc
sub
pop
add
sbb
aam
adc
sub
div
push
fcomp
add
push
add
sub
jle
xchg
mov
adc
or
push
sub
shl
and
shll
lds
push
jns
and
cmp
addr16
push
dec
gs
adc
mov
or
lcall
jmp
insb
lock
aad
mov
and
jb
push
fldenv
das
xchg
pop
mov
outsb
idiv
pop
dec
insb
or
cmpsb
pop
les
add
sahf
shll
loope
pop
cs
inc
lahf
jecxz
add
inc
mov
mov
stc
mov
in
push
and
fbstp
add
add
bound
les
sub
loopne
leave
data16
pop
push
test
cmp
adc
add
push
add
xor
adc
inc
xor
push
cmpsl
jne
or
mov
lahf
sub
inc
hlt
aaa
push
dec
jo
aam
sbb
or
jne
rcrl
pop
or
es
xor
pop
mov
sub
push
push
inc
push
push
ds
int
shl
pop
mov
and
cmp
push
lret
cmpsl
ljmp
jbe
fwait
pop
sub
push
clc
or
mov
das
pop
cmpsl
cmp
ficoml
inc
and
rorb
xchg
jo
dec
jecxz
mov
loop
pop
inc
xchg
sbb
and
jl
jmp
das
and
pop
push
jmp
sub
jbe
iret
psraw
xor
sub
or
icebp
testl
add
dec
sarl
negl
cwtl
pop
lcall
add
fisubs
clc
xchg
lock
ss
in
pop
sub
jmp
scas
mov
xchg
ljmp
adc
lret
adc
mov
adc
dec
or
xchg
jae
out
es
testb
ja
add
push
jmp
cmpl
cld
fisttps
mov
cmpl
xchg
push
pop
iret
shr
nop
inc
std
push
sub
sahf
add
rorb
mov
xor
add
int
jo
rolb
push
xchg
pop
cli
rcrl
jmp
out
nop
add
and
loopne
in
aad
sbb
sub
inc
sub
add
mov
into
dec
inc
cmp
andl
dec
movsl
xlat
int3
mov
out
dec
cwtl
xlat
sbb
xor
stc
mov
xchg
xchg
adc
mov
push
push
vpsubd
inc
rclb
mov
pop
loopne
pop
add
shrb
ja
pop
test
imul
xlat
fimuls
dec
and
out
fstpl
daa
adc
pop
into
ljmp
push
sub
adc
inc
add
adc
or
adc
gs
add
sub
sti
decb
pop
push
pop
out
inc
sbb
in
dec
adc
sub
pop
and
dec
jmp
sbb
test
cmp
jg
lods
pop
ds
xchg
mov
daa
stos
and
push
daa
es
loop
inc
and
or
mov
push
xor
mov
scas
sub
xor
fnstenvs
movsb
in
jge
dec
inc
arpl
and
push
mull
cmp
mov
pop
and
inc
add
cmp
fdivr
sub
xor
iret
gs
pop
shr
shl
adc
xchg
shrl
insl
test
sub
push
dec
inc
loop
push
mov
popf
xor
je
cmpsl
pop
ss
mov
mov
mov
mov
ljmp
scas
cmpsl
pop
jle
adc
adc
pusha
addr16
adc
sub
mov
inc
imul
test
das
pop
fstps
mov
add
int3
xor
out
dec
mov
inc
and
and
adc
cmp
pop
xorb
xor
pop
shl
imul
push
cs
xchg
sbb
out
pusha
int3
pusha
outsl
sub
fs
movsb
nop
ljmp
sarl
xchg
pop
adc
enter
dec
imul
stos
js
mov
jmp
adc
mov
shll
cmp
fcompl
sub
dec
pop
and
loop,pt
jge
mov
jns
lods
jge
jmp
cs
lret
orb
popf
jge
mov
rcrl
push
add
mov
push
dec
push
icebp
push
test
jmp
arpl
pop
jmp
add
mov
mov
xchg
fisubs
call
loopne
push
add
je
push
add
fwait
sbb
xchg
dec
mov
ret
ficoml
dec
pop
stos
sub
mov
pop
inc
movsbl
xor
js
mov
adc
je
scas
in
ret
mov
xchg
jp
pop
push
daa
sbb
jp
mov
mov
jle
jns
pop
ljmp
ret
pop
scas
call
dec
push
xor
icebp
push
xchg
cmp
jbe
mov
stos
cmp
jmp
mov
jl
lret
push
xlat
pusha
jle
pop
mov
es
inc
adc
std
call
pop
add
lods
sbb
rcll
mov
xlat
cli
sub
add
xchg
nop
xchg
and
sub
sbb
xchg
mov
daa
xor
das
adc
mov
push
cli
mov
xor
lods
andb
push
push
jmp
jns
movsb
mov
adc
cltd
out
decb
mov
push
jle
sub
out
sub
inc
mov
adc
arpl
pop
dec
jecxz
push
divl
stos
pusha
lods
push
jmp
ja
daa
mov
cld
mov
imul
xchg
pop
mov
rorb
cmp
lahf
xor
sbb
dec
inc
mov
jne
pop
xorb
in
mov
pop
shl
cld
xlat
loope
or
lock
jle
sbb
xor
xor
or
test
jmp
aad
rcll
push
clc
dec
mov
jge
jmp
ss
adc
outsb
test
mov
inc
jmp
cmp
xor
fsts
push
jmp
movsl
pop
and
in
into
push
lcall
scas
test
popa
mov
ss
adc
hlt
and
xor
jae
add
stos
out
and
lods
das
push
push
xchg
ljmp
mov
shrl
jo
rcrl
loope
sub
inc
adc
sub
insb
add
jmp
add
stc
cmp
push
mov
xor
jmp
shl
lret
cmpsl
xor
andb
jne
mov
data16
push
or
or
sbb
add
dec
sub
xor
fsubrs
xor
mov
adc
pusha
inc
addb
jmp
ds
xchg
cmpsb
mov
add
jb
mov
sub
in
lods
and
pop
nop
mov
mov
in
push
sbb
fnsave
ljmp
movsl
pop
and
int3
int
jne
dec
mov
add
add
pusha
cmpsl
sub
lret
mov
add
sub
mov
pusha
cmpsb
or
dec
imul
icebp
mov
jbe
es
addl
fcmovnbe
enter
push
cmp
push
mov
lret
sub
xor
fidivs
bound
jmp
xor
leave
enter
mov
mov
clc
lock
pop
jmp
cmp
out
cmpl
stc
or
loope
push
or
inc
and
cmp
push
pop
or
jecxz
mov
ds
aam
add
bound
sub
sbb
jne
xchg
xchg
gs
jg
sbb
mov
pop
hlt
sub
cmp
cmpsl
nop
or
jno
gs
or
jmp
push
ficomps
test
jmp
ud2
dec
or
fcomip
mov
adc
icebp
adc
add
pop
push
sub
daa
inc
adc
dec
jmp
mov
adc
in
lahf
js
xchg
push
pop
lds
xor
sub
fidivrs
inc
cmp
repz
das
rolb
xchg
orb
push
out
dec
push
jl
jb
insl
cmp
sub
xor
fmulp
xchg
pop
push
dec
stc
or
xor
mov
xchg
cmp
pop
shrb
or
sub
push
or
sub
arpl
incb
lcall
sub
ret
test
pusha
lret
int3
imul
push
imulb
sbb
imul
bound
out
ljmp
inc
movsb
add
push
or
add
into
jno
or
jnp
pop
xor
or
aad
dec
pop
sbb
fnstcw
cmpsb
mov
add
popa
pop
imul
pop
insb
push
das
jmp
mov
xor
repnz
arpl
add
add
add
adc
lar
fsubl
or
rcr
jp
lahf
enter
fisubrs
aad
call
fbld
hlt
inc
idiv
adc
gs
mov
cmpsl
std
adc
mov
cmpsb
gs
int3
jmp
jmp
mov
ljmp
pop
push
je
lahf
pop
xchg
adc
imul
adc
scas
push
imul
push
mov
fnstsw
cli
xor
pop
pop
int3
add
push
shlb
cmp
mov
fcoms
mov
mov
xor
adc
ljmp
ljmp
gs
cmp
andb
push
cmpb
add
ljmp
adc
push
dec
stos
push
adc
and
mov
mov
dec
out
push
and
push
mov
sub
pop
jmp
sub
je
js
loop
jmp
fldt
xchg
in
or
sbb
inc
or
pop
xor
push
lret
mov
aas
mov
push
jg
inc
dec
pop
lds
jmp
push
out
test
inc
push
mov
inc
or
jns
outsl
arpl
jmp
push
subb
add
rorb
or
pop
pop
int
push
je
rclb
push
jnp
push
add
mov
stc
aad
or
pop
pop
ljmp
aam
add
add
add
inc
cli
sbb
in
ret
or
jp
push
ret
or
sbb
mov
dec
lds
push
sub
jle
imulb
neg
inc
pop
negb
clc
hlt
fcomps
jmp
jo
add
mov
lahf
sbb
xchg
sahf
jle
outsl
and
or
inc
addb
lret
daa
pop
and
outsl
scas
dec
xchg
cltd
and
mov
dec
stc
test
cmpsl
pop
or
ss
cmp
movsb
dec
xor
mov
jge
rcr
and
dec
leave
or
mov
insb
mov
hlt
dec
cmp
add
push
jno
outsb
ljmp
je
lret
push
int3
aas
xor
lea
push
jp
and
push
stc
mov
pop
and
movsb
mov
mov
cmp
outsb
pop
adc
xor
stos
inc
inc
mov
cs
xchg
jb
lahf
out
sub
push
pop
mov
leave
mov
mov
sbb
jge,pt
cmp
daa
mov
sbbb
fisubrs
mov
fbld
and
in
xchg
jb
hlt
add
mov
lcall
lock
jnp
xchg
mov
xor
dec
mov
leave
sbb
mov
add
pop
push
jb
or
push
fsubr
xchg
lahf
popf
hlt
imulb
lahf
and
cmc
mov
rcrl
mov
mov
mov
xchg
inc
and
daa
fs
dec
sahf
or
adc
mov
outsb
xor
mov
sti
adc
pop
das
or
push
in
fistl
cmp
cmovne
mov
sub
addl
mov
test
subb
rolb
repz
ret
pop
dec
mov
mov
jmp
movb
xchg
fisubs
or
int3
jge
fldt
movsb
and
xor
inc
pop
inc
xchg
ljmp
repnz
ds
mov
or
out
cmp
cmp
xor
call
push
add
mov
stos
xchg
xor
pop
sub
xchg
sub
pop
scas
cmp
imul
int
jle
fsub
xchg
xchg
mov
ret
pop
add
mov
lea
push
or
or
pop
cmpsb
xor
ret
mov
inc
das
adc
or
jmp
xor
lock
lahf
pop
push
add
mov
push
movsl
inc
fists
mov
jae
add
out
inc
push
jmp
add
das
mov
iret
je
mov
les
mov
sub
pop
das
xor
ja
cmp
push
cmpsb
leave
test
add
inc
icebp
mov
jl
or
call
mov
push
fisubrl
cld
xchg
add
call
sbb
shrb
mov
adcl
cs
lods
dec
xchg
decl
mov
xchg
shll
push
js
add
cli
add
scas
sub
sub
add
outsl
in
jmp
ja
jae
test
push
ja
or
and
mov
mov
sub
adc
daa
js
idivl
push
adc
dec
sub
xchg
lods
jg
pop
imul
in
xchg
aam
hlt
pop
add
movsb
loop
stos
push
cmp
mov
test
aaa
and
clc
jbe
pop
jmp
mov
jmp
ret
jnp
add
mov
aas
or
js
mov
jmp
das
sub
lret
or
jae
push
iret
lock
in
ljmp
test
stos
pop
incb
push
cltd
js
imul
jmp
insl
data16
div
rorl
or
or
xor
add
and
ds
ret
fisttps
fisubrs
mov
push
test
ljmp
dec
and
imul
call
inc
add
sbb
into
jmp
xchg
xor
push
sbbl
jp
int3
and
les
xlat
idiv
pop
pop
adc
cmp
ds
test
mov
dec
ljmp
pop
jbe
dec
push
jmp
loop
sarl
imul
cld
popf
pop
xchg
mov
lds
or
movaps
and
dec
test
push
push
movsl
fcoms
sub
pop
loop
ficompl
mov
addr16
xor
mov
ffreep
adc
push
ss
pop
cli
sbb
pop
push
popf
std
xchg
cmc
and
cmpsl
push
sbb
xchg
or
insb
mov
sbb
ja
add
andb
mov
test
cld
xor
sarb
lahf
pusha
mov
ret
inc
mov
jb
add
std
inc
data16
pop
cmpsl
negb
iret
arpl
dec
jnp
loop
adc
imul
inc
icebp
outsb
sub
sbb
clc
loope
orb
jae
insb
jb
mov
scas
out
sub
lock
cmpb
adc
mov
ljmp
adc
mov
movsl
stos
and
dec
pop
push
sub
add
sub
rcll
pop
and
ja
lods
int
ficoml
jbe
cli
cmp
xlat
ljmp
dec
fstl
inc
inc
push
mov
and
add
or
lret
std
dec
or
clc
call
push
in
imul
and
sbb
or
adc
sub
mov
lods
or
call
sbbb
ds
jmp
jmp
or
inc
fiadds
xor
leave
pushf
add
pop
jmp
pop
jle
jb
insl
popf
push
pop
shll
or
lret
pop
fnstsw
scas
jge
mov
and
pop
adc
add
bound
or
sub
inc
ja
js
imul
push
xor
icebp
add
inc
ss
jge
les
add
xor
sbb
jg
movsb
pusha
leave
jo
jmp
ja
out
push
mov
push
push
add
adc
pop
jmp
xchg
sub
and
dec
pop
add
add
xor
arpl
mov
sub
push
jle
das
in
arpl
outsb
popa
ds
jg
dec
mov
xchg
std
lods
lret
xchg
arpl
jne
sbb
aas
pop
pushf
mov
pop
imul
sub
das
and
test
adc
push
pusha
cmp
je
js
ret
loop
and
xchg
stos
fistl
mov
pop
inc
push
cwtl
adc
icebp
fiadds
loop
test
lock
push
push
cmp
out
loop
jbe
mov
and
add
sbb
loopne
addl
push
add
sbb
pop
shl
rol
or
pusha
sub
das
xor
mov
xor
ror
inc
jmp
and
enter
push
inc
jmp
jmp
pop
cmp
cmc
inc
js
inc
or
cli
ficoms
enter
add
and
inc
test
or
push
mov
mov
and
sub
ljmp
lods
andl
inc
outsb
mov
test
lods
xchg
push
sub
leave
push
cli
jne
xor
mov
jns
add
push
mov
xor
out
add
shl
push
mov
sub
pop
iret
or
loopne
jnp
rep
shrl
ja
incl
stos
mov
shl
push
and
pop
sub
mov
dec
or
pop
mov
popa
loopne
jnp
cmpsb
subb
pop
sub
loope
testl
jmp
jl
or
stos
push
and
jmp
out
sub
aas
loopne
xchg
push
out
sub
pop
jne
dec
jmp
sbb
or
mov
sub
push
mov
mov
aas
add
pop
inc
clc
ds
out
adc
xor
lods
fucomip
push
sbb
cmp
mov
xor
inc
add
sbb
inc
or
add
jle
cmp
loop
pop
int
pushf
xor
dec
push
and
push
daa
or
xor
loope
mov
das
jmp
sub
cmp
cwtl
ret
pop
cmpsl
leave
or
in
mov
repz
test
jg
cmp
mov
sub
rclb
push
jmp
add
jl
adc
mov
add
adc
push
orb
cs
comiss
mov
das
lret
mov
sub
mov
data16
test
mov
fimull
lods
decb
cltd
pop
and
loop
cmp
repnz
arpl
xchg
shlb
dec
mov
inc
pop
jg
in
mov
hlt
rol
or
mov
mov
imull
xor
mov
out
testl
sbb
xchg
lds
inc
gs
mov
and
xor
rorb
push
xor
pushf
pop
dec
std
adc
sub
lock
pop
lods
sbb
xchg
xor
or
xchg
jecxz
push
js
or
sub
pop
adc
push
adcl
shr
xor
jo
push
fsts
je
mov
or
inc
inc
cmp
shll
mov
add
out
add
icebp
push
rorl
mov
adc
pop
or
push
test
sub
adc
xrelease
nop
mov
xchg
or
or
mov
push
jo
add
repnz
push
iret
jmp
call
adc
dec
mov
lcall
aaa
mulb
fiaddl
pop
pushf
and
dec
cmc
sti
inc
insl
sbb
lods
mov
or
cld
mov
vunpckhps
lret
js
call
cs
adc
bound
ds
aas
mov
pop
loop
js
xchg
dec
repnz
fs
iret
sub
in
adc
and
cmc
movl
loopne
pop
add
subb
mov
and
cmp
loope
mulb
xchg
jb
add
sub
or
mov
inc
push
or
or
jbe
jb
roll
add
or
mov
dec
repnz
in
aas
mov
cmp
dec
dec
out
test
cld
add
cmpsl
add
jbe
xor
xchg
sti
iret
mov
jmp
aaa
cmpsb
xchg
or
sbb
lret
pop
sbb
inc
ret
dec
add
adc
cmp
lds
shl
add
cmp
icebp
xchg
cmpsl
jne
popf
and
out
cli
cs
pop
mov
shr
xchg
sbb
jbe
or
mov
jg
jb
sub
or
outsb
sbb
add
shr
mov
cmpb
jnp
dec
xor
push
mov
mov
out
jbe
nop
das
jp
mov
adc
or
cmp
ljmp
pop
cmp
jmp
add
mov
jle
and
mov
daa
aam
in
pop
xor
das
fs
sbbb
cmc
cld
xchg
pop
loopne
inc
cmp
frstor
call
xor
or
mov
lods
pop
ret
shlb
rcrb
out
push
sbb
inc
mov
or
sbb
fiadds
mov
jne
nop
test
cmp
fs
or
push
ficoml
ds
test
js
mov
mov
das
push
popf
sbb
repnz
sbb
orb
lret
dec
sbb
add
imul
push
add
or
pop
push
sbb
rcr
sbb
jmp
daa
cmp
and
popa
in
fs
pusha
in
cs
fs
adcl
ljmp
daa
fcoml
push
dec
add
and
inc
mov
outsl
add
call
nop
push
dec
mov
popf
push
test
mov
scas
scas
xchg
pop
int3
dec
fstps
nop
jns
out
jo
or
sub
sub
mov
cmc
mov
jmp
adc
inc
cmp
das
sub
cmc
and
rolb
dec
push
cmp
cmpsb
xor
rcl
ret
or
mov
jg
rolb
sub
mov
daa
imul
aas
popa
dec
mov
clc
ret
adc
fistl
cld
jb
push
push
mov
sbb
loop
jmp
fisubrs
mov
aas
ret
push
das
inc
popa
push
add
jp
xchg
clc
pop
add
inc
pop
and
and
mov
adc
sahf
fldl
inc
add
lock
xor
popa
fldcw
clc
mov
or
push
push
push
inc
test
mov
pop
xor
dec
pushf
addr16
xor
repz
mov
or
push
pushf
mov
and
outsl
sbb
jp
push
pop
sub
jne
mov
mov
loop
xlat
repnz
push
popa
push
and
stos
out
jle
lock
xor
rorb
sub
bound
das
fsts
loopne
mov
push
jmp
cltd
pop
pop
incl
repnz
add
dec
ljmp
nop
jmp
stos
aaa
dec
and
add
pop
and
cltd
outsb
xor
ret
lock
inc
ficoml
jnp
push
and
or
lret
mov
cmp
icebp
or
jmp
jmp
jno
cwtl
fadd
jge
push
adc
pop
ret
push
xchg
leave
jg
jbe
sub
mov
arpl
aad
jg
mov
mov
jmp
sbb
lds
push
xchg
insl
fisubrs
lods
push
mov
in
stos
test
out
daa
pop
sub
xchg
adc
and
pop
std
js
call
cmp
mov
and
addr16
xor
outsb
add
out
cmp
mov
dec
add
roll
sar
push
jmp
lds
por
push
jmp
sub
stc
shr
test
or
xorl
inc
movsl
mov
lahf
or
fnstenv
aad
and
pop
jmp
iret
mov
frstor
add
ljmp
stos
xor
fsubr
cwtl
insl
inc
pop
movsbl
aas
or
notl
rcl
add
inc
ds
insb
out
jp
cmp
addb
in
out
push
or
cmpsb
pop
lods
sbb
push
dec
addb
push
add
adc
out
hlt
stc
mov
lea
ret
sar
out
add
jecxz
ficoms
jmp
outsl
mov
dec
adc
pop
pop
mov
or
jle
je
int3
inc
ljmp
out
and
adcb
andl
das
sarb
adc
push
add
jp
and
ret
sub
and
cmp
ja
fisttps
shrl
insl
test
jb
loope
or
push
out
adc
lods
push
mov
mov
dec
loope
jne
in
js
popf
push
xchg
js
out
or
stos
adc
sbb
and
add
mov
pop
rolb
sbb
loope
add
pop
daa
pop
xor
scas
fs
mul
pop
or
jbe
not
into
fmulp
add
stc
add
rorb
sub
cwtl
or
lret
test
bound
addb
lock
lahf
mov
sbbb
adc
and
cli
cmc
insb
jo
cmc
rcrl
dec
and
jns
in
daa
stos
mov
mov
movsb
in
ss
or
lahf
or
dec
mov
jle
int
cltd
sub
push
es
ds
pushf
sub
cwtl
cmp
neg
push
dec
cmp
or
push
inc
fwait
xor
add
push
mov
mov
and
popf
lods
lds
roll
loope
inc
mov
xor
adc
aam
jecxz
cmc
lock
fcomps
push
jmp
jmp
inc
lahf
dec
push
mov
mov
je
scas
testl
or
mov
or
dec
or
mov
aad
cmp
repnz
inc
notb
bound
ficompl
inc
pop
test
inc
enter
and
insb
push
cmpsl
and
pop
pop
fistl
pop
jmp
insb
ss
loope
test
popf
pop
mov
call
les
and
mov
imul
in
iret
xchg
add
or
test
aam
mov
mov
clc
outsb
jnp
enter
dec
xor
jmp
add
pop
sbbl
stc
adc
push
aaa
push
cs
and
mov
pop
mov
sarl
cld
sti
cmp
fcomip
in
push
addr16
sub
fdivrs
sub
insb
push
push
jg
pop
push
dec
out
imul
sbb
cmp
or
mov
mov
add
decl
add
lea
ds
push
popa
jae
fsubl
mov
xchg
stos
pop
xlat
push
or
mov
popfw
push
adc
jle
add
pop
repz
mov
shl
and
or
loop
inc
insl
inc
sti
add
repz
adc
push
dec
rorb
call
lods
insl
dec
mov
push
scas
lods
loopne
lock
sub
rolb
pop
lock
stc
daa
add
jo
mov
je
add
pop
mov
xor
aad
jg
repnz
insb
add
cmp
aad
pop
push
rcl
sub
testb
sti
decb
dec
push
add
iret
xor
shll
or
mov
and
mov
add
out
add
stc
dec
and
add
stos
iret
add
push
and
inc
imul
pop
xor
jl
and
mov
sarb
nop
mov
loope
add
xchg
repz
out
xor
js
pop
call
xchg
adc
sbb
adcl
adc
pop
adc
pop
fldl
icebp
xchg
ljmp
lahf
lock
add
jb
enter
jg
mov
pop
jge
xchg
jno
imul
out
fdivrl
test
sub
lret
je
fcompl
sahf
xlat
cmpsl
jne
cmp
mov
or
xor
rcrb
adc
pop
jns
and
add
test
pop
adcl
cwtl
push
sbb
jmp
icebp
lret
jbe
xorb
dec
pop
shlb
testl
aas
mov
and
mov
or
gs
fscale
or
push
lods
push
imul
or
pop
ljmp
ss
add
or
push
fnsave
push
cmp
inc
push
push
cmp
test
dec
add
mov
cwtl
mov
push
and
xor
add
push
loope
out
addr16
mov
adc
xor
sub
mov
and
or
dec
jbe
les
ret
mov
movsb
fldl
cmc
ret
jmp
sub
fsub
sahf
js
xor
jb
push
xlat
cmp
clc
pop
add
mov
incb
xor
pop
out
icebp
xor
std
and
cmpb
stos
pop
out
pushf
add
add
pop
push
or
mov
adc
sub
fcmovnb
movsb
arpl
jl
or
aam
or
push
cmp
push
inc
pushf
cs
mov
les
stos
cmp
arpl
jge
mov
ds
and
inc
jns
add
or
shlb
shl
das
cmp
pop
ret
lret
push
inc
inc
add
pop
pop
jno
popa
shrl
cmpsl
repnz
adc
mov
xor
sbb
dec
cmp
inc
jle
jmp
mov
loopne
ret
add
mov
daa
push
push
add
les
in
cs
cmp
ficomps
xlat
inc
icebp
pop
mov
add
pop
mov
sub
decl
in
mov
pop
add
ret
out
sub
xorb
adc
mov
xchg
jmp
mov
ret
push
pop
jmp
mov
lret
sub
sub
cmp
das
out
leave
jge
xchg
shl
mov
jnp
sub
orb
cli
in
mov
not
rcrl
xchg
sub
mov
jmp
dec
rcll
jp
cmp
jg
adc
pop
stos
aaa
add
or
lods
icebp
pop
sbb
mov
sbb
call
push
xchg
xchg
push
mov
pop
xor
add
mov
insb
and
scas
push
inc
in
shll
push
jecxz
into
pop
xchg
cmp
push
rcll
roll
sub
shl
or
mov
in
push
sbb
cs
pop
inc
imul
pop
jge
lea
dec
pusha
adc
test
adc
ficoms
popf
cmc
xchg
dec
mov
mov
lcall
dec
es
andb
call
shlb
bound
pop
jmp
pop
mov
sbb
push
pop
adc
push
fs
jmp
fadds
jmp
dec
push
in
je
cld
pop
mov
push
fists
push
test
aas
xchg
dec
aam
outsl
adc
mov
or
mov
bnd
cmpb
xchg
rorb
add
daa
imul
in
lods
hlt
lea
adc
jge
popl
rcrb
mov
neg
xchg
push
inc
test
push
push
lret
and
push
gs
xchg
aaa
lret
push
adc
pop
clc
aam
orb
movsb
dec
pop
mov
std
add
bound
mov
stos
add
sbb
push
push
dec
pusha
mov
jno
xor
sub
out
adc
sbb
and
in
rol
mov
aad
cmpb
sub
out
mov
or
jmp
sbb
and
leave
pop
add
mov
mov
or
push
inc
cwtl
testb
fs
addr16
out
mov
cltd
ds
push
shll
inc
test
ret
add
cmc
fwait
in
push
cmp
or
repnz
fsubr
nop
std
pcmpeqw
xor
dec
sub
xor
xchg
insl
imul
xor
or
outsl
sbbl
lahf
push
push
jmp
and
push
and
jmp
in
add
insb
sbb
jnp
mov
int3
cmpsb
out
jge
outsl
outsb
repnz
sbb
pop
inc
dec
add
jecxz
scas
push
ljmp
and
push
sbb
repz
ja
sahf
andb
das
repz
std
lret
and
lret
add
sbb
sub
fnstcw
adc
filds
jbe
call
cmp
pop
mov
mov
add
addl
push
vpunpcklqdq
insb
pop
rcll
sub
adc
nop
cwtl
popf
sti
sub
jmp
xchg
jmp
out
dec
sub
add
das
inc
jbe
fdivrp
add
cmp
or
ds
sarl
jne
mov
push
pop
cmp
xchg
rclb
orl
pop
jge
imul
rorl
jns
js
and
sbb
dec
testb
push
mov
or
mov
es
sub
nop
rcrb
push
xchg
jb
adc
jmp
jmp
and
js
aaa
mov
pop
adc
cmp
add
movb
add
jne
mov
stos
mov
clc
jae
sti
lret
addl
and
rcr
sub
and
pop
push
adc
decb
imul
decl
jnp
jbe
pop
aad
in
les
pop
sbb
out
fwait
pop
inc
stos
xchg
cs
bound
pop
icebp
inc
out
pushf
sti
add
xchg
cmp
pop
mov
cmpl
jl
rclb
jb
pop
sub
fidivs
push
sub
sahf
jmp
repnz
push
or
hlt
add
lds
dec
add
push
and
push
scas
jg
and
cld
sub
or
push
jno
pop
sub
sub
loop
inc
sub
dec
lods
cmp
in
cltd
movsb
sub
inc
jbe
mov
jnp
pop
and
cmp
std
and
arpl
fs
jns
iret
mov
push
jns
mov
rclb
mov
push
mov
jmp
mov
sub
mov
add
ret
or
cld
adc
pop
mov
sub
push
sub
in
fdivr
orb
das
adc
lret
js
inc
inc
jge
and
out
add
mov
mov
or
push
sbb
mov
fs
hlt
aam
nop
or
dec
lods
jno
push
pushf
outsb
and
pshufw
mov
idiv
insl
sbb
lea
out
aas
cmpsl
inc
jne
arpl
or
cmp
xchg
jb
dec
fisttpl
sar
lods
je
or
mov
dec
lods
pop
pop
push
orl
out
mov
mov
adc
js
rorb
es
out
cmp
adc
addl
dec
inc
dec
es
mov
rcrb
shr
pop
in
mov
adc
jbe
sbb
cli
enter
add
sub
mov
loope
ret
dec
hlt
dec
cmp
repz
decl
scas
or
rorl
ret
jmp
not
inc
into
jge
pop
inc
int3
push
cmpb
pop
pop
jb
inc
rol
jns
push
out
outsl
add
pop
jmp
testl
mov
push
add
es
movsl
in
jle
and
push
dec
testb
or
fs
sbb
adc
xchg
shr
push
jg
cld
scas
cmp
xor
cwtl
cmp
and
je
or
shrl
pop
or
dec
pop
and
lgs
loopne
lahf
rcll
leave
aad
pop
outsl
rcl
pop
fldl2e
pusha
cltd
in
pop
ds
inc
jnp
pop
cltd
add
xor
push
ret
inc
pop
fistl
or
add
sbb
mov
xlat
cmpb
inc
adc
adc
test
insb
xor
test
push
daa
mov
mov
pop
int3
add
dec
imul
lcall
pop
or
pop
xor
test
shrb
decb
add
int3
out
out
sub
ljmp
sub
cmp
leave
pop
push
cli
xor
mov
xchg
ret
jmp
movl
bound
xchg
cld
popa
lds
sbb
aad
repnz
loop
push
shrl
adc
lods
xchg
dec
add
pop
stos
add
lret
push
or
arpl
shr
adc
push
and
dec
push
push
das
xor
in
lret
pop
jae
dec
mov
and
jo
popf
dec
sbb
or
xchg
mov
sbbb
scas
and
js
inc
mov
or
ljmp
mov
xor
sbb
add
jmp
cltd
add
out
cmp
ficoms
daa
sar
mov
aam
push
or
icebp
leave
and
into
or
sub
outsb
adc
insb
or
ret
rolb
add
dec
pop
push
cmp
sub
out
cmpsl
scas
pop
sub
dec
adc
pop
mov
cmp
enter
and
sbb
ljmp
pop
jne
insl
mov
xlat
clc
icebp
ret
pop
fiadds
nop
addl
movsl
repnz
sub
leave
pop
data16
add
ret
jmp
push
pop
push
mov
jmp
jno
jns
adc
adc
mov
add
shl
dec
push
les
sub
mov
push
jb
rorb
dec
push
mov
cmpsb
dec
cmp
fildl
cs
push
pushf
icebp
dec
pop
sti
mov
jmp
sbb
add
xor
xchg
jle
pop
out
push
pop
push
pusha
iret
das
jno
dec
push
push
add
and
cmp
daa
adc
mov
xlat
pop
stos
jne
stos
mov
xor
xchg
xchg
mov
test
and
out
pop
add
push
and
dec
insb
pop
adc
mov
dec
mov
pop
mov
push
test
push
in
out
xchg
push
scas
testl
push
aaa
sbb
shr
mov
push
jns
orb
or
add
ret
arpl
lret
lea
adc
ss
cpuid
mov
sbb
test
and
add
add
push
mov
shrl
test
push
lods
subl
push
daa
mov
lock
repz
jbe
daa
notb
shrb
jmp
out
fs
or
jl
mov
fmuls
in
cmp
rolb
push
daa
sbb
xchg
loope
not
push
add
popf
mov
loop
inc
ja
outsb
mov
mov
xchg
jns
cmp
je
mov
mov
add
sbb
stos
add
pop
push
loope
popa
dec
push
lds
icebp
dec
pop
mov
jmp
daa
pop
cmp
xor
xchg
mov
aam
in
adc
addr16
pop
xor
xchg
in
mov
cmp
iret
gs
xor
scas
dec
ret
rclb
push
mov
lods
pop
xchg
or
jg
sub
pop
or
mov
cmpsl
push
int
movsb
rcll
divps
mov
jmp
jns
push
and
call
ret
sti
mov
popa
xor
jnp
mov
faddp
scas
ret
xlat
shl
dec
jge
jnp
clc
jl
mov
out
inc
push
cmp
jge
imul
push
ret
rolb
add
ds
shlb
cmp
xchg
pusha
in
les
push
or
daa
and
stos
aam
pop
sti
mov
stos
mov
push
insl
xor
scas
dec
mov
cmp
sub
loop
mov
adc
shrl
add
jle
xor
xchg
adc
ret
rcrl
inc
add
dec
push
jg
aas
cwtl
jns
pop
mov
shll
sahf
push
jo
xchg
push
xchg
sub
pop
fcom
mov
add
les
adc
adc
pop
add
or
mov
xor
mov
adc
push
arpl
jnp
lock
push
sbb
fisubrs
jp
xlat
test
mov
push
mov
stc
stos
and
push
orl
xorb
cmc
push
pop
pop
loop,pn
dec
scas
or
rcrl
stc
pop
lock
pop
xor
push
cmp
cli
push
ss
xchg
jge
sahf
out
pop
out
lret
pop
adc
rcrl
add
test
mov
and
cmp
shrb
bound
leave
mov
xlat
hlt
cmp
lds
lock
and
mov
ja
dec
ja
cmp
clc
xchg
out
test
je
mov
fisubrl
cmp
sub
pop
or
inc
sub
or
push
incb
jmp
sbb
mov
data16
sbb
imull
xlat
pop
add
push
or
mov
cwtl
pop
jmp
pop
add
cmpsl
or
or
pop
std
push
push
adc
sbb
mov
and
mov
sbb
das
xor
pop
in
push
subl
sarb
lods
and
xchg
mov
pop
es
fwait
daa
jmp
test
jg
pop
add
push
repnz
xor
adc
add
jge
inc
in
leave
jae
and
inc
pop
sti
adc
sub
pop
xlat
inc
je
ss
push
pusha
mov
daa
jae
jmp
push
push
mov
dec
ja
xchg
jp
and
push
push
bound
cmp
loopne
add
lret
lds
je
pusha
int
adc
in
pop
and
pop
push
cwtl
in
lea
lods
add
adc
test
mov
in
cmp
je
mov
lret
pop
or
mov
sbb
cmp
mov
mov
sti
cmp
cmpsl
mov
cmp
adc
out
push
sub
add
inc
rcll
cmpsb
inc
push
pop
or
push
inc
outsl
dec
dec
sbb
adc
int
das
ljmp
mov
push
outsl
push
xorb
repz
ficomps
data16
xchg
and
es
pop
test
push
push
mov
ret
and
push
fisttpl
pop
mov
pusha
ret
mov
xchg
out
cmp
jno
and
xchg
cmp
loop
cmc
jno
loope
shll
pop
fs
sarb
clc
loopne
sbb
adc
gs
adc
sub
add
adc
addb
out
ds
dec
imul
rcl
xchg
pop
jmp
gs
adc
sub
movsl
jnp
sbb
ret
mov
ljmp
nop
arpl
mov
jne
in
jbe
or
sub
mov
pop
push
sbb
jecxz
push
push
jmp
push
xchg
push
ffreep
mov
pop
push
inc
sub
ret
stos
bound
shl
fisubrs
int3
or
dec
push
or
sbb
scas
ss
outsb
ret
or
imul
fistpl
hlt
add
mov
jo
push
inc
push
in
or
divb
and
test
jmp
sbbb
sub
adc
pusha
andb
jl
or
lret
addr16
or
popa
jmp
pushf
push
sarl
fisttpl
loopne
and
lea
js
cs
inc
or
int
mov
addl
ret
jmp
dec
nop
lock
dec
sub
or
mov
aaa
add
mov
add
negl
fmuls
xor
cmpsb
jle
orb
and
leave
inc
xchg
push
add
push
imul
int3
adc
inc
jle
mov
fwait
lahf
push
inc
daa
pusha
jnp
rolb
cs
andl
ret
jnp
jle
adc
test
add
xchg
js
jb
nop
mov
mov
lret
dec
inc
add
cltd
dec
sbb
pusha
test
pop
je
cmp
adc
sub
fs
push
push
mov
sub
adc
mov
sbb
push
xchg
inc
mov
iret
push
add
insl
sti
clc
dec
roll
dec
icebp
add
flds
jmp
inc
push
mov
xchg
out
add
jbe
push
ljmp
mov
into
rcll
lods
xor
jl
shlb
ds
movsl
cmc
mov
addl
add
das
add
cmc
int3
sub
icebp
sbb
pop
jp
ret
add
test
adc
xchg
pop
push
ret
ds
in
aam
or
inc
add
inc
and
or
and
scas
mov
xchg
fisubrs
js
and
lret
jo
jmp
add
jae
xor
push
in
loopne
mov
jae
divb
or
lahf
sti
sahf
cmpsb
xchg
inc
stos
mov
inc
push
test
es
nop
and
dec
push
or
insl
sub
pop
add
add
mov
dec
mov
or
jmp
pop
push
jecxz
fcmovnu
ret
mov
push
or
or
push
sub
dec
icebp
ud2
mov
enter
pop
adc
push
jne
jmp
adc
sub
sbbb
mov
test
push
mov
push
dec
pushf
or
push
mov
and
jmp
mov
dec
push
or
xor
cs
sub
push
test
push
sarb
mov
sub
cmp
mov
loop
fcoml
push
pop
sub
pop
pop
imull
xor
dec
inc
mov
mov
dec
adc
rcr
test
add
test
dec
mov
cmpsb
inc
bound
nop
pop
fnstsw
rcl
mov
push
and
je
dec
es
dec
add
stos
mov
arpl
sub
mov
or
pop
mov
jmp
mov
sub
imul
clc
movl
jmp
int3
imul
fsubrl
arpl
xchg
lahf
flds
jmp
repnz
add
add
cmpsl
or
inc
aaa
jmp
push
mov
pop
inc
and
inc
add
inc
cmpsb
xchg
inc
dec
mov
dec
pop
push
cmc
andb
nop
and
and
mov
fwait
xchg
and
push
and
and
pushf
and
mov
add
add
xchg
add
push
add
sub
in
add
sub
push
lea
sbb
push
inc
loope
mov
and
and
sub
and
jbe
lods
imul
shll
add
jge
enter
fistpl
mov
clc
adc
adc
mov
std
sbb
or
fs
mov
push
cmp
sub
sub
inc
xor
sbb
data16
fisubl
cmp
xor
int3
mov
cwtl
push
or
cmp
adc
inc
inc
outsb
test
add
dec
jnp
sub
arpl
jno
jo
mov
test
mov
mov
test
or
imul
or
les
pop
add
repnz
sub
jp
xlat
pop
cmpsb
inc
nop
shll
or
add
add
add
stc
adc
pop
adc
sbb
orb
xorl
adc
and
cmp
adc
das
enter
dec
jg
mov
cmp
shlb
popa
andl
add
sbb
push
pop
sarb
xor
mov
arpl
cltd
sti
adc
pop
test
push
in
dec
mov
xor
mov
mov
pop
adc
insb
arpl
ret
mov
sub
imul
push
xchg
xchg
add
sahf
add
add
repnz
in
ljmp
xorl
add
subl
hlt
dec
cltd
xchg
push
mov
push
mov
divl
insl
jb
clc
sbb
mov
and
lock
iret
sbb
rol
dec
js
mov
mov
add
insb
cmp
jmp
inc
test
call
stos
aam
stos
bound
ja
dec
cmp
mov
lret
sarl
cmc
dec
pop
xchg
push
sbbb
jle
shl
xchg
and
ret
out
mov
in
lock
xor
push
lea
clc
shlb
add
test
add
stos
in
sarl
stos
imul
push
xchg
imulb
add
imul
sbb
jmp
pop
add
inc
pop
sub
xchg
lods
and
xchg
push
dec
sub
mov
mov
scas
push
add
push
sub
inc
insb
sbb
mov
jle
syscall
sub
cld
ret
pop
pop
loopne
push
add
xor
enter
inc
push
inc
sub
sub
mov
add
leave
and
fnstenv
sub
insl
dec
aas
inc
pop
std
cld
xor
notb
lods
mov
pusha
mov
rcll
pop
loop
or
sub
jns
push
jmp
xchg
pop
push
mov
les
dec
add
jmp
aad
lret
mov
ljmp
loop
shrb
fsubp
mov
movsl
pusha
and
sbb
cmp
iret
arpl
stos
inc
mov
sti
out
sbb
pushf
inc
cmp
dec
ljmp
jmp
xor
push
adc
mov
aam
pop
push
mov
jbe
jle
jle
std
cs
xchg
sbb
outsl
cmp
mov
pusha
adc
jae
sub
punpckhwd
ret
adc
lds
jmp
outsb
mov
add
jae
js
add
shrb
add
stos
shrl
mov
mov
test
mov
cmp
jae
jno
inc
adc
enter
inc
das
repz
push
scas
dec
xchg
scas
shr
push
lock
sub
add
outsl
push
dec
adc
jmp
lret
movl
insb
aas
and
jg
dec
mov
sbb
adc
fiadds
mov
js
push
pusha
and
outsb
jmp
xor
jnp
adc
sbb
data16
stos
sub
xor
and
adc
data16
inc
sub
movsl
pop
mov
or
inc
pop
sbb
lds
test
sub
pusha
mov
js
push
xchg
or
push
sahf
or
insb
pop
dec
jg
xchg
cmp
testl
dec
inc
roll
mov
or
popf
lods
ds
ret
test
adc
adc
cmc
enter
sub
xor
sub
lahf
push
and
and
ret
dec
js
mov
jb
mov
inc
bound
je
and
cs
imul
push
pop
pushf
aaa
push
mov
dec
and
add
sbb
repnz
or
sbb
or
sahf
adc
ficoms
inc
mov
sub
xor
in
jmp
add
rcl
in
aam
push
push
mov
dec
jne
sub
pop
cli
jle
inc
push
incl
test
add
mov
jmp
adc
or
jae
sub
sarb
jp
and
add
sbb
sub
mov
add
lock
jno
xchg
push
cmp
mov
adc
stos
push
into
mov
jbe
cmp
lock
xchg
test
std
jg
dec
cmp
add
orl
ds
ljmp
mov
jle
lods
sahf
dec
xorl
shlb
xlat
xchg
jb
outsl
adc
xchg
pusha
mov
in
mov
stc
xlat
mov
pop
add
pop
inc
sbb
sbb
loopne
cs
add
lret
lods
inc
add
ret
frstor
jmp
movl
shl
mov
adc
dec
loop
xorb
xor
push
lds
repnz
cmp
sbb
adc
inc
or
cmp
cmpsl
sub
loop
test
data16
nop
ret
sbb
lret
xor
or
mov
sub
mov
sub
outsb
wrmsr
test
push
cmp
insb
pop
push
js
xor
subl
repnz
jl
pop
add
adc
out
sub
cmc
inc
xor
xor
in
test
jl
lcall
in
adc
mov
sub
ret
mov
mov
mov
jmp
ret
mov
push
aam
mov
add
gs
push
dec
adc
xor
push
das
adc
or
and
cltd
adc
pop
adc
pop
pop
jecxz
push
sbb
push
sub
mov
xchg
es
mov
fs
mov
sub
addl
jmp
stos
in
mov
iretw
popl
push
fdivl
mov
cmp
jno
scas
dec
loopne
xchg
cltd
inc
add
shlb
pop
push
frstor
jne
xchg
mov
adc
fldenv
jns
fisubl
jno
lods
inc
orb
push
mov
ja
pop
add
or
mov
fstps
mov
jnp
ss
sbb
pop
xchg
jmp
add
add
or
jmp
sbb
jecxz
adc
mov
mov
cmp
out
and
add
or
les
jmp
xchg
adc
mov
adc
mov
jg
push
pop
mov
inc
daa
jne
pop
add
lods
mov
shrb
xchg
daa
inc
sub
cs
ds
pop
add
push
dec
jle
mov
xchg
rorb
sbb
sbb
test
fucompp
jmp
xchg
mov
add
add
loopne
fldenv
mov
stos
jg
clc
rclb
movsb
mov
movsl
in
push
lret
outsb
cmpsb
jo
arpl
rorl
addl
jmp
jbe
sub
fdiv
aas
test
cmpsl
lods
add
jl
xchg
sti
rorb
and
mov
push
fs
adc
sbb
shr
enter
add
dec
jl
scas
andb
push
pop
pop
push
call
std
mov
popa
lea
pop
xchg
mov
pop
leave
cmp
jge
xor
push
lds
jmp
mov
add
sbb
pop
mov
out
adcb
jmp
imul
ds
pop
lock
sub
cmc
fs
or
xchg
add
sbb
xchg
cmp
dec
xchg
jle
incl
imul
sbb
out
sub
daa
jmp
imul
test
sub
xor
ret
dec
push
xor
mov
or
adc
xchg
imul
push
add
dec
and
nop
popl
movsl
adc
jl
sbb
jg
inc
js
or
add
xchg
push
int
lcall
ret
sbb
xlat
push
lds
push
jmp
adc
adc
rcll
sbb
mov
mov
push
cmp
popf
sub
out
xchg
fistps
aas
mov
movsb
adc
and
movsl
push
ljmp
repz
fwait
in
aam
clc
or
pop
cmp
pop
lahf
ljmp
inc
pop
or
inc
sbb
mov
scas
ja
das
inc
out
push
and
inc
out
xor
cmp
xor
cs
sub
mov
rcrb
daa
aad
in
push
push
mov
lds
push
inc
cltd
movsl
ja
ljmp
jb
rorl
dec
push
pop
and
in
pop
xchg
fstl
mov
push
pop
arpl
sbbl
pop
jmp
aaa
addb
mov
cmpsl
sti
pop
fs
mov
mov
inc
in
pop
daa
push
jle
leave
jge
mov
cmpsl
js
pop
test
jb
clc
xchg
pushf
or
pusha
out
je
mov
add
and
lret
pop
iret
shrl
in
pop
inc
jnp
popf
jg
stos
mov
xchg
push
add
sub
or
add
enter
lret
ljmp
dec
addb
es
push
repnz
sub
adc
pop
popa
mov
mov
mov
adc
mov
fwait
jnp
or
xor
sbb
add
mov
ret
xor
or
pop
inc
jmp
fs
je
lock
mov
pop
cmp
je
rolb
jmp
sti
sbb
ret
loopne
and
add
cmpb
lock
push
pop
mov
sbb
adc
pop
mov
pop
cmpsl
adc
add
sub
adc
sub
ficoml
and
fsubrl
inc
push
adcb
mov
dec
shlb
jo
fisubs
cmp
xchg
sbb
push
add
mov
xchg
jge
xchg
push
sub
les
jne
push
into
testb
mov
jp
mov
pop
sbb
and
call
and
mov
mov
ljmp
or
icebp
rcrb
jge
testb
jecxz
cmp
ljmp
pop
or
dec
lock
sti
mov
aaa
mov
enter
jge
das
xor
add
loopne
mov
test
sub
mov
and
pop
xor
fcmovu
and
mov
cmp
ret
jg
iret
pop
enter
sub
hlt
fildl
mov
push
inc
cwtl
in
clts
xor
add
or
add
adc
rclb
fucomp
pop
outsb
mov
push
cmp
pop
mov
dec
and
stos
or
pop
mov
negl
fists
cmc
dec
stos
pop
shl
add
push
pop
mov
xor
xchg
mov
fsubrs
sbb
add
or
add
push
pushf
push
fcoml
mov
jmp
pop
out
repnz
or
pause
faddl
cmc
jno
or
rcrl
mov
jmp
sbb
xchg
and
xchg
gs
adc
and
push
adc
addl
mov
add
xor
push
push
cmp
push
pop
inc
stc
cmc
cmpsb
adc
fsubr
shlb
neg
or
fwait
xor
push
imul
pop
jne
imul
push
sub
dec
data16
fidivrl
push
popf
aam
push
xchg
xor
les
mov
push
aaa
jmp
jle
das
pop
and
mov
das
push
mov
xor
adc
jmp
jl
cli
fmuls
inc
cmp
int3
mov
pop
cmp
fucom
adc
add
and
sub
loop
pop
fmul
push
mov
cmp
and
adc
leave
push
pop
add
mov
mov
cmp
daa
jne
jne
jnp
and
add
push
mov
or
clc
pop
aaa
insb
dec
cmp
stos
adc
xor
mov
and
outsl
leave
fnstsw
mov
and
stc
jmp
jl
dec
sbb
fwait
scas
push
fnsave
int3
test
and
mov
fimull
inc
adcl
xor
cmp
maxps
push
inc
xchg
adc
and
pushf
sbb
xlat
dec
mov
test
enter
mov
mov
inc
jo
adc
sbb
jo,pn
push
pop
sahf
les
enter
adc
js
or
dec
mov
mov
mov
and
out
add
scas
inc
aas
out
adc
hlt
jb
dec
add
popa
adcb
jo
push
sub
rorb
jg
cmp
loope
lods
mov
xorl
std
xchg
cmp
push
pushl
pushf
dec
mov
inc
repnz
and
stc
pop
adc
push
push
scas
inc
push
pop
scas
test
test
dec
mov
mov
push
push
loop
sbb
jmp
push
push
pop
xchg
cmp
push
int3
or
mov
lcall
test
daa
and
sub
orl
or
push
jo
inc
outsl
mov
fistpll
add
jmp
out
pop
pop
out
gs
push
push
xchg
mov
lret
cmp
add
xor
adc
ret
push
xor
push
inc
test
fisubrl
jle
push
hlt
test
lds
ja
loope
jmp
push
sbb
insl
rcll
scas
ds
adc
dec
adc
pushl
in
test
push
aad
js
sub
outsl
shlb
and
in
mov
sarl
mov
pop
lret
insl
mov
jmp
cmp
cmp
push
or
cld
add
sti
dec
add
popa
cld
sahf
and
cs
push
scas
mov
das
std
repnz
and
lock
mov
iret
cmp
fsubs
dec
das
pusha
nop
push
clc
pop
pop
jbe
mov
cmp
mov
inc
pushf
cmp
mov
pop
and
stos
dec
jp
cmp
or
push
sahf
fistps
jnp
pop
mov
cmp
scas
into
inc
dec
loope
inc
jnp
into
pop
adc
inc
jne
sub
iret
lret
cmp
repnz
or
jmp
shlb
jl
lret
dec
dec
mov
clc
mov
pop
stos
js
jmp
add
lidtl
fmuls
cmpb
jg
add
pop
daa
fwait
or
dec
jmp
into
scas
inc
cmpsb
addr16
aaa
lods
ss
cmp
jmp
sub
syscall
les
insl
rorb
ret
cwtl
xor
in
jmp
lahf
mov
jmp
pop
xor
sbb
dec
inc
rorl
pusha
stc
cmp
sbb
call
or
pop
push
ljmp
xchg
movsb
stc
orb
test
loopne
mov
sub
or
and
add
mov
add
inc
pushf
mov
or
fs
imul
fiaddl
jnp
das
data16
and
adcl
jge
stos
push
pusha
mov
xchg
xchg
mov
andb
jl
loope
xchg
sub
push
add
fiaddl
or
ret
or
lods
call
pop
shl
ret
test
mov
mov
xor
pop
insb
pusha
adc
jo
push
adc
jmp
push
push
pop
add
in
sub
mov
add
cmp
stos
add
push
xchg
call
and
and
dec
pop
add
insb
jae
cmc
sbb
pop
pop
sbb
scas
and
adcb
mov
call
mov
std
sbb
jg
add
xchg
jns
push
cmp
sbb
and
test
mov
and
je
xor
adc
pop
pop
fwait
js
jmp
mov
xor
push
inc
mov
pop
sub
mov
es
adc
mov
jmp
and
and
mov
pop
or
int3
call
jmp
jle
cmc
jae
lret
jecxz
and
mov
inc
sub
and
adcb
shll
in
and
push
and
ds
in
lahf
imul
mov
xor
pop
cwtl
inc
ljmp
fldenv
cmpsb
repz
movsb
popf
in
mov
jmp
pop
call
lods
push
sub
adc
pusha
pop
mov
sbb
xchg
and
push
mov
cmovo
sbb
out
mov
scas
or
lea
push
lock
inc
pop
movsb
in
lds
push
lods
jae
add
pop
push
push
sub
push
xchg
add
dec
jge
loop
pop
clc
mov
mov
outsl
int3
faddl
cmpl
sbb
mov
notb
pusha
ljmp
call
push
stos
pop
imul
bound
jns
pusha
inc
sbb
xchg
in
adc
lds
jns
popf
les
aaa
scas
and
pop
enter
lods
cmp
sbb
cmc
ja
sbb
test
dec
out
push
xchg
test
or
insb
lock
into
jmp
scas
or
cli
and
adc
pop
pop
mov
cwtl
inc
lods
in
jne
ss
ret
pusha
inc
mov
xor
sbb
je
push
cmp
cmp
test
pop
out
inc
mov
pop
and
pusha
repz
sbb
jmp
dec
push
cmp
loope
sub
dec
arpl
adc
push
lods
push
or
pop
sbb
jno
adc
stos
push
mov
out
xor
out
pop
jno
xor
fbld
pop
in
test
cmp
mov
pop
adcb
enter
push
mov
cli
lock
pop
mov
cmp
jnp
pusha
add
jne
mov
pop
xchg
push
push
jb
or
jmp
icebp
push
or
add
or
sbb
sub
pop
jnp
jge
jne
xchg
je
ret
cli
icebp
dec
push
jg
pop
xor
icebp
xlat
jnp
aam
leave
dec
jge
jae
jo
xchg
idivl
leave
pop
aas
fisubs
push
push
pop
dec
das
cmp
jo
mov
test
das
stos
add
mov
outsl
xor
push
bound
and
fiaddl
inc
pop
imull
data16
jmp
in
jb
pop
fsts
leave
add
xor
xor
lock
cmp
add
jno
int3
loop
add
cmp
mov
pop
pop
sub
add
call
ljmp
cwtl
lret
mov
or
jecxz
jo
mov
cld
data16
sbb
pop
cli
mov
jmp
jo
adc
dec
pusha
loope
sbb
js
jb
push
or
push
and
dec
jmp
int
cmp
lds
or
mov
jmp
xchg
xchg
adc
rorl
subl
icebp
mov
add
jmp
xchg
les
dec
sti
and
loopne
pop
sub
sbb
inc
lret
add
shr
or
and
dec
loope
jnp
dec
add
out
bound
sbb
pop
mov
push
mov
jno
sbb
iret
jle
testl
aam
mov
sbb
das
bound
add
mov
outsl
mov
xchg
pop
out
adc
clc
lock
or
test
stos
ds
cld
icebp
inc
loop
xchg
inc
jnp
inc
dec
push
adc
sub
cmp
xchg
adc
pop
cmpsl
sbb
mov
push
inc
inc
dec
rcll
pop
daa
jb
lret
sbb
and
and
stc
test
shrb
icebp
ss
xchg
notb
push
add
dec
jmp
jg
popf
ja
and
push
call
leave
xchg
frstor
xchg
sub
and
mov
pop
out
ljmp
inc
fsubr
add
jmp
inc
cmp
jecxz
jmp
int3
pop
jmp
daa
rcl
int
cmpsb
pop
xchg
cmp
subl
inc
xchg
mov
nop
cli
add
sub
push
push
push
data16
cmp
jmp
xor
fildll
add
stc
xor
mov
sub
xorb
outsb
and
jp
mov
dec
inc
cmpsb
pop
add
jle
daa
xlat
sbb
stc
xchg
inc
push
addb
jo
push
mov
rorb
in
adc
inc
mov
roll
aam
lock
sbb
add
push
lret
or
negb
dec
popa
dec
jl,pt
pop
mov
cmpsb
mov
adc
mov
mov
and
stos
sub
cmpsl
outsl
nop
scas
enter
xchg
adc
rcll
xor
out
aam
push
mov
lret
pop
add
or
fldenv
cmpsl
inc
pop
addr16
test
xchg
cmp
das
mov
or
xchg
add
sub
decb
leave
jp
or
mov
and
das
and
les
jg
jns
cmp
insl
push
mov
mov
mov
fcompl
adcl
sti
popf
mov
pop
cs
loop
lods
and
or
in
push
adc
icebp
fisubrs
sub
dec
sub
pop
dec
adc
ljmp
sbb
cmp
dec
stos
lret
pop
jle
adc
adc
mov
pop
pop
mov
loope
popf
popa
ret
push
adc
jne
jmp
scas
lret
fbld
ss
add
adc
xor
xor
inc
pop
cld
orb
hlt
insb
es
jae
or
or
and
or
ja
dec
pop
mov
xchg
push
push
loop
ret
es
repz
loopne
repz
sub
icebp
clc
loop
lods
xor
mov
dec
pop
push
loop
clc
lods
jl
daa
sarb
xor
cs
pop
pop
push
push
push
pop
jmp
mov
dec
nop
push
cpuid
or
pop
inc
faddl
aam
mov
fcmovbe
inc
and
hlt
xchg
jnp
and
jmp
daa
push
inc
jb
arpl
mov
pop
mov
jmp
out
inc
and
pop
jb
push
jmp
sahf
lret
lahf
je
inc
jmp
jmp
inc
cmp
xlat
push
inc
and
xchg
call
dec
aaa
xor
loopne
mov
push
add
or
push
or
pop
mov
inc
pop
stos
mov
fsubrl
and
xchg
pop
sbb
dec
sti
pushl
inc
adc
jmp
mov
subb
hlt
neg
push
testb
inc
and
bound
notl
fsubrp
adc
cmpl
sbb
inc
push
insl
push
sub
mov
arpl
pop
add
mov
sbb
daa
je
push
mov
ss
add
sahf
jb
xchg
or
pushf
mov
add
pop
xor
jmp
in
dec
xor
mov
xor
jno
dec
fisubrl
nop
or
dec
mov
dec
call
data16
sbb
in
sti
xorb
mov
ss
xor
mov
inc
cmp
jg
out
pop
dec
adc
int3
mov
dec
add
pop
ret
jmp
icebp
popf
cmpsl
jno
sub
and
mov
aas
ret
out
cwtl
mov
popa
push
pusha
xor
inc
push
sbb
jl
and
or
stos
loop
xor
popf
fwait
sub
insb
movsb
inc
aad
mov
add
adc
enter
pop
jmp
neg
rorb
mov
rcll
inc
and
jb
xor
div
xor
sbb
mov
icebp
inc
mov
rorb
addr16
fdivrp
cmp
cmc
jmp
adc
mov
xchg
pop
add
out
add
jmp
mov
mov
push
mov
mov
push
cmp
dec
rolb
cwtl
pop
add
cmc
push
in
sub
xor
filds
push
jae
das
gs
dec
daa
addr16
inc
fs
dec
hlt
push
rorl
sub
pop
xor
ret
pmovmskb
pop
cmpsb
std
push
std
cmp
shll
pop
ds
adc
and
loop
and
jmp
in
push
cli
adc
push
mov
sti
xchg
mov
mov
stos
pop
sub
das
inc
jnp
outsl
dec
and
dec
jae
adc
out
adc
push
push
pop
jge
cmpsb
enter
jns
imul
nop
mov
aas
cmpsl
sub
inc
sbb
dec
push
cmc
clc
andl
fdiv
jmp
xlat
or
int3
cmpsl
lods
adc
enter
push
pop
notb
ljmp
daa
xor
cwtl
rclb
sbb
dec
or
seto
loop
fdivl
inc
mov
inc
cmp
push
xor
or
mov
loop
xor
shrl
scas
sub
adc
add
add
or
in
imul
mov
mov
add
ds
and
xor
jmp
daa
or
xchg
shr
jne
pop
jno
in
js
lcall
jmp
jp
out
bound
inc
lcall
pusha
sbb
adc
pop
cld
mov
and
ljmp
jmp
pop
add
cmp
pop
mov
out
sbb
scas
outsb
lock
push
lret
sub
push
pop
sbbl
cmpsl
jno
xchg
xor
fsts
push
mov
and
je
sbb
jp
cmp
aas
add
xor
sub
jnp
pop
jne
pop
pop
lret
pop
xchg
pop
mov
pusha
jae
cmp
pop
jmp
add
insb
jg
sbb
iret
inc
xor
mov
push
pop
repnz
and
dec
mov
cmp
mov
out
imul
insl
jns
pusha
sbb
dec
popf
fisubl
push
xor
lds
push
pop
and
or
mov
mov
cmp
push
movsl
aaa
cwtl
pop
pop
pop
insb
sti
or
int3
lods
push
mov
jecxz
es
cmp
push
push
xor
shlb
movsb
adc
inc
fucompp
or
sti
pushf
roll
xchg
test
xor
sarl
push
pop
test
fcoml
scas
gs
add
inc
scas
in
stos
xchg
jle
jb
inc
pop
enter
pop
jg
mov
pop
pop
shl
test
pushl
sub
jg
push
inc
pop
es
cmp
sbb
fistps
mov
sub
or
xor
pop
inc
jle
push
fidivrl
xor
dec
out
inc
pop
lds
sub
in
scas
stos
out
ret
cmp
add
pushf
xor
dec
cli
rol
jbe
mov
add
pop
sub
test
jnp
test
mov
push
and
bound
pop
inc
or
jmp
dec
push
pop
adc
add
pop
xchg
dec
out
stc
xchg
test
add
and
stc
cmpsb
cmpl
inc
loopne
jae
push
dec
test
call
and
mov
jg
push
pop
push
adc
outsl
aaa
outsb
in
dec
shll
cmpsb
push
icebp
leave
mov
push
push
fisttps
xchg
pop
adc
movsl
aam
pop
push
insb
dec
mov
test
jmp
cld
pop
pop
aad
xchg
mov
push
in
or
jns
push
shl
adc
int3
in
cs
adc
jns
push
rcrb
mov
jns
rcrl
sarb
pop
push
xor
mov
inc
and
inc
sbb
inc
jl
and
nop
mov
jmp
popf
jo
jbe
add
mov
jmp
ret
mov
into
mov
shll
orb
shrl
add
daa
or
ret
push
inc
orb
push
dec
xchg
mov
add
add
inc
inc
or
pusha
push
rcll
xor
mov
ja
dec
add
and
adc
and
or
imull
loopne
add
or
cmp
push
jle
add
mov
stos
add
add
cmc
add
xchg
pop
pop
or
rorb
rcll
adc
xchg
xor
push
jne
and
pop
repnz
xchg
push
mov
push
enter
sbb
xor
add
add
xlat
mov
test
es
cmp
lds
jmp
out
stos
sub
insl
mov
out
icebp
movsb
popa
jmp
fnstenv
frstor
rcl
cmp
jg
inc
pop
mov
je
mov
mov
xchg
in
out
xchg
inc
les
pop
pop
insl
add
add
xchg
test
jmp
xor
js
fisubrl
add
push
mov
shl
add
push
add
sbb
add
insl
push
ffreep
bound
push
out
mov
cmc
call
sbb
push
add
push
mov
mov
stc
pop
push
sub
repz
sti
pop
xchg
push
add
add
inc
mov
movsl
pusha
add
jae
add
mov
lods
push
out
test
sub
outsb
pushf
jo
lock
pcmpgtw
cmp
insl
out
jns
inc
xchg
add
paddw
ds
or
mov
or
adc
mov
xor
cmp
movsl
jbe
pop
cs
shll
pop
lret
xchg
xchg
shr
dec
outsb
pop
outsl
stos
insl
push
add
push
jmp
data16
and
in
mov
fmul
dec
dec
sub
sub
rorl
sub
add
testb
xor
loopne
in
push
test
fwait
pop
cwtl
imul
or
or
inc
ja
jne
outsb
popf
rcll
mov
cmpsl
pop
lcall
in
loop
xchg
cwtl
push
adc
push
or
sub
inc
add
mov
aaa
aad
sbb
jne
loopne
pop
lahf
push
mov
jne
aas
mov
imulb
inc
mov
add
pop
adc
es
add
sbb
or
pop
das
mov
sti
jns
sub
pop
wbinvd
pop
pop
pop
insb
cmpsl
push
int3
jbe
cli
push
dec
push
cmp
sbb
addb
or
jo
cltd
add
out
test
jmp
xchg
rorl
mov
jmp
outsl
fadds
push
repnz
les
and
mov
imul
test
repz
ret
push
pop
mov
sbb
add
adc
add
dec
push
fs
jge
or
jmp
add
inc
data16
shll
sahf
inc
loope
xchg
arpl
lds
mov
adc
pop
icebp
push
out
push
sarl
xchg
imul
lahf
fmull
jo
psadbw
or
jne
cmp
jmp
and
aad
sub
mov
push
adcb
and
jge
lock
outsb
mov
add
ret
mov
pop
cwtl
jo
aas
leave
mov
inc
mov
shll
add
mov
icebp
fwait
sub
push
cwtl
cmp
aaa
iret
mov
push
cmp
neg
add
mov
enter
nop
dec
inc
fiadds
ret
inc
inc
mov
dec
or
push
mov
add
pop
push
mov
lock
cmp
push
and
dec
xor
clc
or
jmp
neg
fsubrl
movsl
insb
repnz
push
enter
and
ret
pop
aam
push
insl
outsl
sub
pop
popa
inc
lahf
cmp
dec
cmp
xchg
sub
ljmp
pop
ret
int
xchg
sarl
add
mov
mov
xchg
popf
pop
mov
fs
pusha
and
call
mov
sbb
mov
mov
pushf
adcb
jno
mov
sbb
mov
sub
xor
mov
pop
xchg
adc
xchg
sub
jmp
scas
popf
push
imul
imul
push
jno
test
pop
dec
lods
vpaddusb
xchg
ljmp
mov
mov
rcll
mov
add
ret
or
mov
mov
fidivl
jnp
out
ss
shr
lahf
mov
add
xor
xchg
sub
mov
jbe
cmp
sbb
push
mov
mov
and
jle
pop
pushf
stc
lahf
movsb
inc
fadds
loopne
out
icebp
addb
xchg
mov
frstor
das
dec
sti
mov
xchg
lods
dec
cmp
fwait
push
add
inc
and
loopne
es
adc
loope
xor
out
add
add
pusha
sahf
fisttps
ds
mov
fmull
dec
push
pop
mov
and
mov
les
cmp
andb
add
or
sahf
out
mov
lret
inc
adc
add
or
cmpl
out
aas
and
cmc
mov
sub
mov
mov
loope
sub
clc
divw
inc
xchg
loopne
popf
sbb
lret
and
dec
loopne
dec
data16
outsl
dec
shll
outsl
inc
mov
js
aad
data16
cltd
lods
mov
jge
add
jp
add
jle
jge
mov
jmp
fincstp
test
shll
jp
cmpsl
xlat
mov
and
scas
jb
pop
sub
pop
inc
cmc
pop
cltd
pop
inc
push
fildll
push
pushf
fnstsw
inc
pop
xor
dec
push
push
push
push
jle
mov
push
repz
pop
mov
cmpsb
int3
mov
mov
sub
jb
adc
push
out
pop
in
jne
jmp
leave
fisubl
cmp
imul
xchg
aad
inc
lahf
mov
sbb
pop
loop
push
jns
shlb
pop
nop
add
sub
pop
dec
loop
dec
imul
dec
and
xchg
inc
mov
lods
ret
and
adc
mov
in
sbb
xchg
in
mov
or
mov
imul
inc
xchg
push
sbb
bnd
in
mov
mov
cld
je
out
jmp
add
and
jno
or
sub
sub
ss
gs
lock
roll
pop
loope
arpl
shr
inc
and
dec
enter
push
mov
sarb
and
into
icebp
jns
lret
push
or
push
pop
cli
lret
push
inc
dec
sub
sahf
xor
pushf
orl
add
push
cmp
mov
sti
loop
shrl
xor
pop
sbb
mov
icebp
sub
sub
or
icebp
imul
jmp
mov
xor
shl
or
insl
push
and
xorb
dec
sub
push
pushf
aam
push
mov
xchg
mov
inc
push
insl
mov
jg
fists
or
daa
sub
jo
cmc
jae
or
out
int
push
fldt
hlt
and
add
inc
and
mov
outsb
xor
mov
cmp
adc
sti
or
push
mov
jae
jns
add
mov
mov
outsl
xor
les
movsb
inc
pop
insb
mov
add
aam
or
push
sub
jne
mov
sub
sub
mov
loopne
sub
xlat
jno
mov
jle
jl
loop
jle
push
jmp
pop
add
or
out
test
sbb
out
insb
dec
jmp
mov
xchg
outsl
inc
dec
sar
adc
jmp
or
inc
and
push
neg
add
popa
jne
mov
in
fisttps
pop
and
mov
nop
push
out
adc
push
push
in
and
stos
in
test
loop
iret
add
repz
jg
and
mov
sbb
out
ds
sbb
mov
xchg
mov
test
loopne
out
pop
sub
sub
xor
aam
cld
pop
add
aam
in
dec
and
mov
xor
mov
cmp
cmp
movsl
iret
cwtl
daa
push
push
es
cmp
xchg
jle
jmp
push
adc
cmp
cmp
sbb
subb
inc
into
cwtl
mov
sbb
shl
sbb
pop
shrb
xchg
movb
jmp
dec
push
inc
ret
mov
fcmovne
sbb
sbb
dec
sbb
mov
mov
adc
ds
cs
sub
imul
pop
insl
in
dec
rcll
aam
dec
cli
popf
dec
sbb
push
pop
add
fcomip
push
or
add
pop
sub
lock
dec
mov
mov
push
push
sub
adc
dec
mov
pop
mov
dec
imul
cltd
movsb
pop
outsb
xchg
pop
adc
repnz
sub
add
gs
add
or
nop
cmp
adc
shr
stc
repnz
adc
scas
jle
daa
hlt
nop
jns
push
sub
mov
fs
or
jmp
notb
mov
pop
xorb
in
push
push
xorl
add
inc
rcll
idivl
cltd
and
or
jmp
jne
int
pop
mov
ret
pop
pop
xor
add
pusha
push
jle
ds
mov
inc
rclb
adc
mov
sti
mov
and
sub
aad
mov
dec
jae
fwait
pop
ljmp
loopne
adc
jbe
adc
repz
xlat
ja
jns
jmp
push
mov
ret
lret
mov
mov
sub
ja
stc
mov
arpl
or
int
pop
dec
jge
mov
jle
push
test
fcmovbe
stos
pop
push
mov
mov
or
adc
dec
out
sahf
scas
and
lds
sbb
jge
add
mov
std
arpl
dec
push
sbbb
mov
mov
pop
jno
test
test
jg
adc
lods
fs
aad
xor
sbb
outsl
aaa
mov
mov
hlt
push
mov
sub
stos
ret
fnstsw
je
push
jmp
mov
jle
or
jne
cltd
pop
pop
outsl
in
sub
push
daa
fyl2x
fdivl
rclb
jp
mov
std
pop
cmc
ret
daa
fnstsw
add
dec
inc
xor
loope
pop
aas
push
shrl
and
hlt
push
repz
loopne
test
push
clc
pop
and
mov
and
or
adc
pop
and
add
icebp
mov
inc
mov
pop
dec
psubq
ret
pop
not
shl
add
xlat
sbb
xlat
pop
xchg
mov
jge
jge
bound
rcll
gs
pop
int
repz
xchg
ljmp
push
jo
loope
loop
loopne
jbe
xchg
jo
ficoms
inc
out
imul
inc
or
sub
les
jo
mov
fimuls
mov
ljmp
inc
inc
xchg
adc
xor
sub
cmp
dec
add
push
xor
pop
fwait
pop
adc
lods
dec
dec
push
dec
daa
xlat
and
add
ljmp
clc
sub
cmp
insb
in
mov
inc
insb
dec
in
dec
int3
loopne
add
pop
jmp
rorb
popa
sbb
push
pop
adc
mov
cmpsb
clc
adc
enter
leave
jp
push
jmp
scas
pop
sbb
outsl
dec
fdecstp
mov
mov
dec
mov
push
icebp
sarb
adc
or
pop
lds
xchg
test
mov
add
ljmp
gs
adc
or
int3
sar
add
rorl
stos
lock
shufps
idivl
leave
add
xchg
xor
sub
and
push
push
ds
int
and
adc
or
pop
xor
outsl
mov
incl
add
sbb
xchg
outsb
sbb
std
push
rcrl
imul
add
sbb
and
aam
adc
push
repnz
pusha
dec
mov
mov
lea
or
ja
divl
pop
pop
inc
loope
dec
or
sub
xor
hlt
sub
out
jecxz
xchg
pop
push
in
fcoms
jmp
cmc
mov
shll
adc
jge
jo
push
and
cmp
mov
int3
out
daa
icebp
inc
mov
aam
mov
subb
add
pop
fcoms
orb
jge
sbb
out
out
sahf
outsb
and
or
adc
aam
shr
lret
imul
inc
push
xchg
aas
leave
xorb
arpl
xor
mov
pop
outsl
push
xchg
rcll
ret
repnz
cld
or
ror
out
call
push
push
enter
movsl
pop
hlt
daa
fcmovnu
sbb
push
jmp
aam
ja
aad
into
push
push
add
cmp
mov
rol
sarl
cmp
out
cmp
pop
push
jmp
bound
idiv
inc
jne
or
adc
mov
jbe
pop
push
dec
arpl
jne
fstps
outsb
push
ss
or
int
ja
xchg
repz
inc
cmp
mov
push
mov
int3
enter
mov
ret
xchg
in
add
adc
and
clc
cmpsl
and
pusha
dec
mov
inc
enter
cs
imul
xlat
jge
add
xor
or
popf
test
and
jmp
pop
and
xor
lods
sbb
push
mov
fists
inc
ret
mov
shl
fxch
push
rcll
je
ss
jl
aas
mov
mov
and
dec
sbb
nop
fisubrs
push
add
lret
cwtl
dec
jmp
sub
ljmp
rorb
leave
addr16
inc
cs
push
repz
or
iret
xor
fmull
jp
insb
lahf
dec
lahf
lea
mov
mov
pop
add
aam
jmp
pop
mov
pusha
sub
mov
jecxz
into
test
mov
out
aad
shll
pop
outsb
cmp
adc
dec
jae
push
cmp
pop
test
inc
mov
pop
sti
xchg
cwtl
add
jb
out
adc
movsl
das
xor
or
mov
mov
cmp
scas
sub
outsl
mov
push
test
into
inc
cltd
mov
cli
ret
shrb
aam
lahf
clc
sbb
pop
sbb
pop
adc
movsb
pop
adc
outsb
mov
sbb
in
pop
pop
pusha
sbb
insb
add
add
lds
push
out
xchg
add
or
into
cmp
mov
lock
xorb
pop
cmp
insl
inc
pop
mov
jle
push
lret
cmp
cmp
js
scas
xchg
dec
cwtl
push
xor
aad
inc
fs
xlat
aas
sbb
ss
cmp
pushf
xor
jge
lods
push
sub
jbe
jl
jmp
mov
loop
adc
loop
or
pop
pop
stc
inc
ret
xchg
mov
jbe
popa
sbb
or
sbb
clc
inc
cmp
inc
shrb
or
ret
inc
cmp
sti
pop
push
push
jns
dec
jns
sub
xor
jne
call
xchg
sub
add
fsubs
sub
inc
sub
pop
xchg
adcb
sbb
ljmp
push
pop
mov
movsl
fs
pop
xchg
adc
imul
in
shlb
dec
sub
add
inc
orl
push
and
aaa
and
cld
cmp
mov
xchg
sti
shrb
add
xchg
push
pop
jo
cli
adcb
jecxz
cmp
dec
and
test
push
push
divb
fstpl
dec
pop
jmp
movsl
dec
mov
jo
ret
test
cmp
mov
and
rol
in
add
test
insl
cmc
ss
dec
xor
dec
pop
inc
add
xor
mov
out
pop
sub
sub
je
dec
pop
rcr
cld
cmpsb
popa
enter
fistps
jge
sbb
bnd
pop
mov
jmp
out
fisubrs
shlb
movl
xchg
negb
push
dec
subl
test
fiadds
repz
stos
test
push
add
cmp
dec
je
add
xbegin
movsb
cmc
out
add
cld
jmp
iret
push
mov
adc
mov
pop
stos
fwait
and
and
mov
add
sbb
cs
sti
jmp
mov
adc
xchg
sbb
int3
or
jbe
pop
inc
pop
mov
cwtl
dec
and
sub
pop
pop
sbb
or
dec
aaa
xlat
fsts
push
push
sti
or
inc
xor
xor
loope
mov
cwtl
or
cmp
jecxz
adc
push
ds
nop
inc
pop
fst
pop
pop
push
pusha
sbb
aas
das
hlt
pusha
and
imul
lds
jmp
mov
loopne
xchg
scas
jecxz
sbb
add
adc
dec
in
test
push
mov
movsb
jbe
sub
fcomi
pop
or
xchg
push
jp
jl
jae
repnz
lods
pop
add
and
divb
lahf
into
icebp
xchg
mov
imul
jb
shl
cmpsl
cld
jo
mov
pop
call
sbb
test
mov
repz
sub
xor
sub
add
xor
aad
dec
lods
xor
and
and
inc
dec
pop
push
push
in
stos
mov
loopne
pop
mov
cs
repnz
cmp
popa
jb
push
adc
pop
xor
out
add
jnp
cmpsl
fimuls
into
js
push
xor
arpl
adc
pushf
adcb
loop
sbb
mov
loopne
sbb
push
add
insb
dec
adc
add
jecxz
sub
out
and
daa
jmp
into
cmp
or
add
mov
lahf
test
pop
cmc
fnstenv
insb
rorl
jle
adc
add
adc
imul
pop
jp
xor
pop
lods
add
xor
and
jg
mov
jmp
pusha
mov
jmp
fimuls
leave
lock
jo
jbe
repnz
jb
xor
out
pop
push
jmp
addr16
movsl
ss
fs
and
jo
out
clc
mov
push
lahf
inc
je
jno
shr
ds
fs
out
add
out
push
add
adc
cmc
pop
clc
test
outsb
jp
and
jmp
or
sub
je
loope
jb
dec
neg
jo
xchg
pop
mov
mov
add
scas
pop
or
je
and
sub
in
ud2
pop
iret
js
xchg
pop
nop
cmp
pop
pop
push
xchg
mov
pop
movsb
mov
dec
scas
and
xorl
add
dec
incb
mov
push
pop
rorb
or
int3
lods
mov
das
push
pop
or
adc
jecxz
dec
adc
or
add
jmp
sbb
or
mov
aad
aas
cltd
mov
or
ss
dec
leave
lea
sbb
sbb
adc
and
cmc
les
or
mov
or
add
clc
push
ret
ret
dec
pop
add
adc
sbb
mov
jnp
aas
imul
int
pop
push
lds
jns
pusha
inc
sbb
mov
jle
mov
jle
pop
getsec
popa
sahf
add
sub
or
sbb
cmp
mov
inc
ret
or
pop
mov
cli
fcmovbe
rcll
in
add
pop
sarl
pop
cmp
stos
lea
xor
ret
xchg
add
jo
push
mov
cld
or
pop
daa
mov
push
stc
loopne
sbb
and
or
cltd
add
dec
cmpb
stos
pop
lcall
sti
push
mov
and
jg
mov
sbb
sbb
test
pminub
icebp
stos
adc
ss
sbb
in
jmp
testb
adc
std
push
lds
mov
jmp
clc
inc
cmp
jmp
outsl
cmc
nop
adc
inc
popa
push
js
shlb
sub
dec
mov
mov
xchg
pop
ljmp
imul
add
inc
mov
sti
push
popf
push
cmp
dec
call
jmp
add
cs
dec
out
cli
ret
jo
mov
pop
jmp
push
mov
xchg
pop
mov
ret
mov
out
std
dec
sub
sub
out
mov
shrb
pop
dec
stc
push
stc
jo
cmp
aaa
icebp
push
and
pop
inc
dec
int
ret
or
imul
adc
mov
ja
jl
jecxz
enter
and
inc
push
movsl
mov
adc
sti
aaa
ret
popa
xchg
inc
arpl
and
js
mov
shl
ljmp
jns
das
pop
jno
sbb
fstpl
out
aam
adcb
ljmp
repnz
and
add
xor
outsl
add
nop
xor
xor
push
xchg
div
les
rclb
pushl
out
jmp
pop
dec
enter
mov
mov
push
push
rol
mov
mov
push
jmp
lds
stc
int3
clc
xor
aaa
mov
xor
loop
out
sub
jmp
xor
xor
aas
ret
sbb
cmp
jne
cmp
mov
xchg
test
ret
sti
jae
in
inc
icebp
adc
cltd
xchg
cmp
or
or
mov
lds
repnz
push
cltd
add
mov
pusha
mov
add
aam
sub
jae
int
xchg
add
shr
inc
ss
les
stos
mov
outsl
mov
pop
or
mov
pop
pop
dec
jne
push
pop
or
or
dec
call
sbb
shll
ds
leave
pushf
ret
mov
mov
lods
inc
lods
xor
pop
repnz
mov
rorl
inc
out
ficompl
pushf
and
xchg
push
adc
not
stc
out
ds
mov
push
aaa
std
inc
lds
ja
lods
add
outsb
add
jbe
pop
or
mov
sub
daa
call
inc
xchg
jne
xchg
shrb
mov
scas
loope
sub
cli
sub
ja
pusha
outsb
adcb
movsb
imul
push
stos
push
es
jns
jmp
test
pop
pushf
or
xor
push
xchg
fsts
std
and
shll
xchg
cli
rolb
shrl
add
cmpb
jmp
push
cmp
add
pop
and
outsl
jo
mov
or
push
pop
push
push
jmp
shrl
dec
push
or
mov
push
mov
neg
cmpsb
ret
pop
les
scas
cmpb
aas
pop
xchg
das
cmp
popa
int3
es
add
push
clc
mov
mov
add
pop
add
push
std
daa
lea
sub
cli
sub
pop
mov
loope
lock
or
jg
in
pop
add
call
inc
and
adc
pop
hlt
fsubrp
push
out
aaa
xor
cmp
adc
add
addl
stos
out
cmpb
hlt
or
icebp
das
mov
inc
out
add
mov
dec
mov
bound
or
pop
or
stc
cli
xor
mov
or
dec
cmp
cmp
scas
sub
lahf
cmp
push
pop
fldenv
wrmsr
cs
rcll
mov
cmpsb
cmpsb
sbb
int
lret
in
mov
inc
into
adc
cli
rcr
inc
dec
xchg
sti
sub
jge
cmp
xlat
xorl
xchg
jbe
cwtl
jbe
and
pop
mov
mov
dec
add
sbb
shl
add
jmp
inc
dec
and
or
aad
add
out
inc
push
mov
mov
stos
stc
dec
sub
mov
mov
lret
test
pop
movsl
icebp
sub
imul
push
ja
cmc
jmp
inc
pop
int
add
mov
icebp
sub
frstor
sti
ja
andb
push
pop
jmp
loope
add
pop
add
pop
jmp
add
add
add
jmp
jp
test
add
xor
lds
iret
ret
mov
push
sub
or
sub
add
mov
add
jns
bound
dec
clc
xor
push
dec
call
imul
mov
jo
repnz
mov
mov
push
jmp
das
icebp
pop
cmp
push
pop
lods
mov
mov
sbb
lods
ret
loop
mov
mov
notb
add
es
dec
add
into
add
jmp
enter
pop
push
fdivrl
pop
cmc
mov
cwtl
inc
add
mov
add
mov
mov
dec
clc
test
push
mov
jmp
xchg
xchg
jp
or
fs
pop
pop
cli
cld
mov
jmp
mov
sahf
imul
out
add
inc
jl
imul
fsubr
int3
loopne
add
ljmp
hlt
cmc
loop
push
out
xchg
call
repnz
jmp
orb
enter
or
sbb
dec
dec
in
test
dec
pop
in
pop
xchg
or
adc
mov
shl
pop
insb
jp
push
out
add
mov
repz
cmc
mov
incl
pusha
pop
push
adc
pop
inc
mov
clc
jbe
inc
filds
inc
pop
pop
test
mov
sub
sub
cmp
or
and
dec
mov
sub
mov
or
lahf
icebp
out
into
je
popf
shlb
fs
outsl
imul
jne
jle
fidivrl
js
call
jecxz
cmp
pop
mov
add
dec
mov
and
sbb
mov
add
sub
insl
cmp
int3
jae
push
subl
loopne
push
add
sbb
ret
push
jmp
mov
aam
adc
in
xchg
and
xor
push
sbbb
pop
jg
xlat
dec
jo
aas
mov
hlt
add
jmp
pop
sub
sub
sub
push
loop
mov
int
adc
or
jmp
push
shll
mov
cs
sbbb
xchg
xor
movsl
mov
pop
add
mov
nop
arpl
out
faddl
mov
out
or
mov
ret
and
test
loop
aam
add
lcall
inc
mov
xor
push
test
add
aas
aaa
test
push
in
jl
rcrb
and
popa
xor
push
lods
andl
sub
dec
in
hlt
push
inc
add
or
pop
and
mov
and
jle
and
push
jmp
mov
sub
sub
xor
iret
mov
or
call
out
mov
jne
adcl
xor
pop
dec
mov
xchg
dec
add
adc
or
hlt
push
pop
sub
jmp
xchg
shr
shlb
xchg
dec
cld
jmp
push
insb
cmpsl
xchg
aad
pop
inc
icebp
or
add
pop
fsts
and
sbb
jno
mul
xchg
xchg
dec
loope
jle
jle
dec
adc
or
aad
mov
push
loop
repnz
out
and
jno
inc
pop
pushf
inc
sti
or
mov
jne
rcrl
in
mov
dec
push
cli
xor
inc
fucompp
pop
call
das
mov
incb
add
mov
and
or
xlat
push
jo
jmp
aad
fwait
cli
pop
xor
fwait
in
imul
add
add
push
jmp
or
add
inc
roll
lret
jmp
fsubl
pop
mov
pop
and
dec
ja
lret
sub
fbstp
adc
cmpl
pop
push
adc
out
in
js
or
mov
gs
inc
movb
cmc
out
shll
push
das
jb
lods
push
sub
cmc
pusha
or
jecxz
mov
push
push
ljmp
lods
push
sub
pop
bnd
adc
pop
or
test
dec
mov
outsl
test
sub
addb
add
push
aam
sbb
sub
pop
cmpb
mov
sbbb
inc
sub
sub
push
dec
add
icebp
mov
popa
and
movb
popa
inc
jp
inc
mov
divb
mov
negl
call
and
xor
sub
insl
xor
inc
inc
jo
orb
pop
mov
jmp
cltd
mov
adc
jnp
and
in
lods
xchg
aad
push
jg
loopne
dec
fsts
add
add
mov
adc
cmp
test
rclb
arpl
shl
aam
sbb
outsl
push
ljmp
xchg
and
je
xchg
push
xchg
jb
movsb
add
sub
pop
push
inc
das
lods
iret
adcb
cld
add
aaa
jge
add
rcrl
mov
or
and
xchg
adc
mov
ja
imull
jmp
mov
and
ljmp
xor
pop
dec
sbb
inc
popa
or
push
mov
iret
daa
pop
jmp
pop
jmp
mov
mov
jb
push
std
pop
ljmp
jne
jecxz
call
call
push
mov
mov
sub
push
jmp
xchg
mov
loop
call
cmp
xor
jmp
add
cli
sub
out
pop
mov
add
lea
add
cltd
push
or
jo
cmpb
pop
cmp
out
xor
pop
pop
int3
mov
xchg
or
push
std
xchg
xor
dec
push
jg
mov
aas
je
jmp
dec
mov
hlt
cmpsl
push
je
gs
mov
cmpsl
imul
enter
jp
dec
adc
rcr
mov
hlt
push
xchg
insl
les
push
fcomps
xchg
add
push
daa
add
aam
ds
lret
sbb
or
cmp
adc
sub
ret
pop
stos
pop
and
xchg
or
outsb
data16
inc
xor
lcall
pop
testl
fstl
ds
lods
jns
loop
rol
adc
jecxz
mov
push
mov
xor
pop
fcomps
jne
jmp
push
testb
leave
idivb
mov
imul
lcall
popf
push
sub
mov
pop
leave
lds
mov
xchg
push
out
pop
daa
sahf
out
daa
outsl
enter
shrl
adc
mov
fsubs
jnp
sahf
pop
cmp
notl
mov
adc
loopne
cld
mov
pop
xchg
mov
imul
jo
stos
xlat
pop
add
popf
dec
insl
jp
dec
adcb
cmp
je
mov
mov
dec
jle
add
shlb
not
cltd
jmp
mov
mov
leave
int
stos
jl
jmp
pop
insb
mov
xchg
nop
ret
mov
xchg
add
jp
not
pop
xchg
mov
mov
jp
and
add
and
or
icebp
pop
dec
push
xchg
cmp
fisubrs
mov
xchg
jge
add
pop
xor
lret
push
or
mov
jg
test
push
sub
adc
xchg
or
lahf
mov
sub
sub
pop
fdivrl
rcrl
loopne
lods
add
aam
xor
lock
or
data16
fsubl
add
lret
cmp
push
xlat
pop
push
test
mov
cwtl
mov
loopne
push
xor
lods
cmpl
ret
das
push
loope
dec
add
jp
stos
pop
add
push
jno
fcom
loopne
daa
jnp
sub
jne
adc
add
stos
fs
lods
adc
jg
in
and
jo
pop
cwtl
add
insl
jmp
in
rol
push
xor
pop
adc
jbe
bound
dec
pop
xchg
push
or
mov
lods
mov
sub
add
in
sbb
mov
pop
push
mov
add
sbb
scas
add
pop
sbb
xor
sub
cs
push
cmp
lret
xchg
aaa
jns
and
das
imul
xor
xor
mov
push
int3
pop
repnz
mov
jg
push
dec
cld
pop
mov
sub
and
inc
shlb
int3
sub
push
and
dec
push
aaa
clc
inc
mov
inc
push
jae
inc
add
or
fsub
adc
adc
mov
xor
push
mov
icebp
aad
ret
sarl
add
int3
xor
cs
xor
inc
mov
cmp
or
cwtl
push
inc
push
lock
add
push
push
fcomip
pop
and
pop
xorl
adc
jmp
mov
aad
and
cmp
xchg
mov
in
add
mov
jecxz
push
and
pop
pop
or
push
pop
mov
test
jecxz
jle
xchg
push
loopne
push
mov
clc
negl
les
mov
push
or
incb
lret
insb
negb
lcall
loopne
lret
fcomip
adc
cmpl
addr16
adc
sbb
and
adc
in
mov
push
lods
call
xor
imul
xor
aas
sbb
pop
and
pop
mov
push
inc
dec
out
xlat
push
das
push
mov
dec
int3
dec
or
cwtl
pop
sub
cli
sbb
jae
dec
cli
cmp
popa
add
rcrl
xor
shlb
in
jp
jns
jne
es
inc
repz
pushf
add
jle
movsl
push
sbb
dec
fisubrl
xor
xorl
push
jo
push
call
in
xor
scas
mov
mov
xor
testl
es
push
and
mov
pop
push
jb
jmp
enter
pop
mov
aad
jge
cmp
gs
fs
pop
and
mov
dec
jg
rcll
xor
xor
inc
outsl
int
add
jmp
ds
das
mov
jmp
add
inc
shlb
cmp
std
movsb
mov
mov
sbb
sbb
inc
sub
sbb
ja
mov
push
sbb
ficoms
push
xor
jmp
ja
push
sbb
hlt
pop
adc
dec
sub
test
xchg
pop
xchg
insb
shll
int
ljmp
ret
in
or
mov
mov
das
sbb
mov
and
das
pop
enter
mov
inc
add
add
or
pop
or
scas
dec
and
sub
fwait
mov
lds
add
pusha
ret
add
mov
mov
sbb
movsb
jp
andl
rcrb
les
inc
mov
pop
mov
sub
cmp
scas
jno
add
push
divb
dec
cmpb
cmp
sub
add
ljmp
sub
dec
mov
in
jmp
mov
pop
mov
adc
test
pop
idivb
adc
mov
pop
adc
mov
out
int3
lods
mov
mov
int3
pop
jmp
mov
xor
test
cmp
lahf
sbb
cmpsb
ret
ds
sti
sub
out
in
sahf
add
scas
push
bound
lock
or
jo
xor
fwait
add
ss
pop
aam
xor
inc
dec
xchg
add
mov
aaa
push
adc
add
fiadds
pop
xchg
clc
dec
mov
cwtl
pop
pop
mov
xchg
pop
inc
jmp
xchg
adc
push
into
hlt
and
fdiv
push
pop
sbb
push
les
mov
jne
push
push
ja
pop
jge
mov
fiaddl
inc
and
xor
mov
add
xchg
sbb
jae
scas
xor
loopne
lahf
jbe
jb
pop
lods
dec
cmp
jbe
shrb
or
shll
push
jmp
test
es
jbe
adc
pop
bound
test
push
cmp
nop
cwtl
xor
sub
jae
jns
out
dec
dec
enter
xchg
xchg
mov
inc
addl
sub
jg
gs
hlt
mov
cmp
mov
sahf
jbe
or
mov
add
add
push
jmp
sub
jmp
fildll
add
push
mov
cmpb
jp
out
mov
and
lret
sbb
push
into
add
repz
cwtl
cs
mov
sub
xchg
fcmovnu
aad
sbb
cmpl
shlb
enter
insb
lcall
jp
sub
push
ljmp
sbb
pop
cmc
inc
adc
jp
pop
negb
jmp
sub
gs
add
push
test
cli
dec
xor
roll
js
test
movsl
or
mov
pop
or
scas
daa
xchg
js
mov
bnd
add
outsb
cs
push
sub
push
mov
and
dec
shll
adc
push
jmp
pop
xor
test
pop
subb
jns
int
pop
or
inc
daa
imul
pop
jl
inc
xor
mov
xchg
cld
xor
push
cltd
adc
jns
adcl
inc
pop
lret
cmpsb
adc
dec
push
idivb
push
fwait
clc
jbe
ret
in
jmp
in
sarb
lea
sbb
lret
orb
jle
push
subb
cmp
pusha
mov
add
jl
cs
aaa
gs
lds
or
and
mov
cmp
xchg
or
rep
fisttps
and
jnp
cwtl
and
xor
add
loope
ret
pop
fnsave
clc
add
push
adc
sbb
jns
loopne
mov
fimull
adc
sub
push
mov
gs
sarl
outsb
sbb
pop
dec
orb
mov
loope
fsubr
lret
push
lock
xchg
inc
jo
lds
and
nop
inc
push
popf
push
repz
pusha
jmp
xor
inc
push
inc
scas
xchg
sbb
cmp
sbb
fiadds
divl
scas
sarl
rol
jmp
bound
test
aas
and
adc
mov
adc
not
sub
and
pop
jg
push
mov
jmp
push
movsb
jmp
js
int
cltd
das
mov
fldcw
ljmp
lahf
sbbb
fiadds
jecxz
pusha
out
ljmp
in
jne
orb
jbe
mov
add
cmp
shrb
pusha
push
push
ljmp
mov
xchg
mov
xchg
mov
pop
xchg
ret
fsubrs
fwait
repnz
lods
aas
add
push
dec
or
orb
popf
pop
jge
or
add
repz
stos
lret
mov
pop
clc
cmp
jbe
icebp
stos
push
jge
stc
movsl
inc
mov
loope
mov
jl
push
scas
sub
sub
aad
aad
mov
pop
pop
push
in
addl
cs
fdivl
mov
enter
push
jmp
cmpsl
lret
outsl
cs
xchg
leave
mov
lods
mov
add
xchg
imul
add
push
xor
call
scas
mov
das
or
jp
ficomps
xor
pop
sub
insb
jb
or
pop
sarl
xor
and
pop
lds
or
dec
cs
adc
lock
lahf
cld
push
shrb
aam
repz
adc
adc
negb
rcrl
mov
movsl
dec
fcompl
inc
jbe
and
and
xchg
cmpsl
cmc
push
sarb
lret
sub
fistpl
jmp
jp
ds
pop
popa
gs
jne
daa
test
mov
and
adc
sub
add
pop
scas
movsl
sub
loop
adc
xchg
adc
mov
icebp
fwait
sti
jecxz
mov
jecxz
or
pop
xlat
dec
je
sbb
leave
ret
inc
ret
add
stos
cmp
std
mov
or
inc
popa
das
xlat
sahf
stos
dec
mov
es
jl
addl
pop
repz
mov
push
add
sub
pop
lret
pop
shl
shrb
mov
mov
lods
fldl
lret
orb
sub
mov
or
jle
test
add
movsl
les
cmpb
cvtps2pd
jbe
stos
add
pop
insb
enter
lds
jmp
pop
inc
mov
jb
pop
pushf
inc
lock
mov
ret
pop
pop
mov
or
insl
icebp
out
mov
pop
mov
cmp
mov
xor
pop
adc
in
or
les
push
mov
icebp
jp
nop
lock
arpl
sub
or
fs
lods
jle
mov
sub
jae
ljmp
pop
mov
dec
fsubrs
adc
and
pop
sbb
adc
jp
jmp
lds
mov
imul
jle
add
fwait
dec
push
cmp
sub
test
jp
pop
xorb
dec
fisttpll
mov
ljmp
pop
or
addb
pop
jb
pop
and
add
pop
xchg
sub
mov
mov
jmp
shl
push
mov
mov
jmp
add
mov
mov
xor
mov
movsb
xor
dec
sti
call
dec
les
pop
jl
jmp
sub
dec
add
daa
or
jns
or
mov
add
lods
push
hlt
int3
xchg
mov
fistps
cltd
xchg
loope
jmp
fwait
inc
mov
dec
sub
cmp
add
adc
sub
out
les
or
cmp
xchg
push
ja
aam
test
push
in
aaa
xchg
mov
sbb
idiv
ds
fdivs
push
pop
push
add
aaa
fs
push
dec
and
iret
sub
jge
mov
mov
je
daa
pop
push
jle
icebp
or
push
jmp
sub
cwtl
add
dec
inc
xchg
js
ret
imul
xchg
lret
or
sbb
jl
and
or
popf
jge
cmp
dec
xchg
addr16
pop
lods
outsl
adc
and
push
inc
mov
rclb
inc
xchg
dec
cmp
lret
xor
push
sahf
jne
xchg
xor
cmp
repnz
push
test
mov
in
outsb
pop
outsl
mov
pushf
lea
mov
arpl
inc
or
mov
ds
out
jo
fwait
xor
push
mov
cmp
mov
jb
cmpsb
in
and
cwtl
push
xorb
hlt
push
call
sbb
dec
pop
add
pop
or
and
push
cwtl
les
test
dec
mov
jp
xchg
xchg
popa
cmp
clc
xor
daa
fidivrl
push
push
mov
aas
mov
cmpsl
daa
shl
push
pushf
iret
lcall
sbb
repz
movsl
cs
jecxz
xchg
fsin
ret
pop
jns
sub
bnd
testl
shll
sub
ret
inc
mov
mov
push
sahf
lcall
pop
mov
imul
inc
mov
test
daa
adc
pop
arpl
or
icebp
jne
xchg
cs
mov
setg
xchg
mov
inc
sub
dec
mov
and
xchg
je
and
adc
daa
ficoms
pop
pop
call
dec
push
mov
or
add
scas
rclb
orb
lods
adc
xchg
add
push
call
xlat
mov
ljmp
dec
lods
sub
iret
dec
mov
iret
add
push
mov
pop
or
aam
scas
or
lods
pop
fisubl
mov
scas
cmp
or
adc
push
sbb
or
jno
jmp
gs
mov
adc
dec
cmp
and
pop
add
sub
clc
xchg
cld
testl
out
ss
adc
jmp
adc
dec
in
pop
dec
push
stos
fisubs
sub
jmp
or
in
cs
lret
mov
pop
testb
push
das
mov
scas
das
and
cmp
dec
movsl
mov
lock
gs
mov
out
inc
push
adc
adc
leave
mov
stc
mov
sbb
push
pop
sub
mov
inc
negl
and
std
xor
loope
roll
ja
sbb
nop
cli
outsb
adc
jmp
mov
and
adc
lock
mov
cmp
dec
mov
adc
test
leave
adc
mov
add
and
or
pop
cmp
or
dec
fwait
dec
idiv
fs
sub
jmp
sub
add
nop
repnz
push
dec
push
mov
and
sbb
ret
sub
sub
ret
ret
fs
mov
cmpsl
sbb
testl
jbe
aas
sarb
fs
sbb
add
add
test
mov
inc
add
dec
xor
or
nop
push
lcall
dec
inc
imul
pop
popa
dec
mov
sub
test
leave
negb
int
pop
lret
test
mov
inc
inc
inc
js
neg
lahf
mov
xor
pop
flds
mov
sbb
neg
add
lock
or
inc
mov
test
sub
insl
das
rcrb
js
and
mov
push
adc
mov
je
and
xchg
cs
mov
xor
pop
roll
xchg
daa
mov
jg
imul
add
leave
sub
in
scas
fnstenv
iret
add
jo
mov
sub
xchg
ljmp
sbb
adc
dec
out
xor
mov
or
mov
cmp
orps
xor
jmp
mov
ret
stc
mov
sub
cltd
or
cmpb
fistpll
sub
jne
mov
insl
jbe
insl
data16
cltd
xchg
cmp
inc
or
es
add
test
shrl
xchg
and
add
repz
or
dec
mov
les
pop
enter
es
inc
cmp
dec
sbb
inc
clc
adc
adc
jmp
push
and
in
adc
push
mov
pop
repz
or
add
fdecstp
in
push
pop
pop
or
std
scas
push
xchg
lret
test
int3
sbbl
jmpw
or
sbb
lods
mov
xor
push
rorl
shrl
andb
ja
sub
mov
mov
ljmp
push
pop
shlb
xchg
shlb
pop
daa
pop
push
call
mov
test
arpl
rcrl
pop
mov
or
push
add
pusha
data16
add
fs
leave
or
dec
or
cld
or
inc
bound
cli
sub
insl
push
mov
adc
shlb
inc
and
inc
arpl
dec
cwtl
or
sbb
mov
dec
mov
ja
adc
jecxz
add
test
lahf
rolb
add
cld
dec
and
sub
xchg
inc
stos
ftst
imul
xor
xchg
add
cmovle
mov
fstl
adc
imul
test
out
jmp
adc
sub
out
push
push
cmp
mov
fwait
dec
sbb
push
mov
or
pop
adc
lahf
fwait
mov
loopne
pop
inc
push
push
inc
pop
hlt
push
daa
push
push
ficompl
cwtl
adc
enter
pop
push
and
pop
jp
sub
in
xchg
test
pop
xor
movsl
call
loopne
dec
leave
dec
or
js
jns
lret
mull
or
daa
enter
and
jnp
add
cmp
sub
jne
fs
shlb
les
dec
lods
lret
push
int3
fisubrs
adc
push
push
es
jb
sub
test
das
lock
push
mov
ret
and
cmpb
xchg
sub
mov
imul
ret
jb
inc
cmp
push
cld
ljmp
add
cmp
and
or
mov
cs
out
cmc
mov
mov
popa
jnp
clc
dec
mov
enter
rorb
int3
sub
mov
pop
ds
push
mov
and
sub
xchg
test
stos
and
and
nop
lret
and
mov
adc
hlt
stos
adc
push
repz
or
in
sub
push
mov
xchg
hlt
mov
push
pop
and
sbb
fwait
mov
add
aad
icebp
xor
cli
aaa
cmp
inc
add
add
add
aas
mov
movsl
in
pop
xchg
andb
mov
mov
add
mov
push
sbbl
sub
loope
inc
adc
adcb
or
cwtl
cmc
xchg
xor
pop
not
pushaw
in
mov
pop
mov
pop
xor
movsb
pop
mov
pusha
repnz
in
sbb
lcall
test
pop
insl
pop
call
pop
lods
adc
test
filds
lcall
mov
mov
mul
or
lcall
into
mov
jne
or
jne
jl
out
jae
mov
scas
jns
lods
mov
je
in
adc
inc
mov
pop
cwtl
pop
or
dec
mov
cmpsb
or
js
popf
dec
pop
push
dec
dec
jmp
push
inc
lea
movsb
mov
es
outsb
mov
fwait
jnp
xchg
ja
mov
icebp
cmp
jmp
mov
push
add
divb
pop
loop
or
ds
and
pop
sbb
pop
in
jl
mov
cmc
fcoms
fadds
fucomip
and
lret
jp
ds
scas
sub
sub
dec
lcall
fdivrs
inc
pop
shrb
mov
and
data16
ret
ret
jmp
outsl
jg
or
and
not
sbbb
test
cmp
hlt
cmp
dec
pop
add
push
or
dec
jmp
push
push
cmp
insl
ret
sarl
sub
jne
xor
cmp
cmp
pop
sub
push
add
inc
cmp
gs
xor
std
mov
and
scas
stos
js
cmpsl
add
stos
jbe
into
mov
das
loop
jge
push
jmp
jg
mov
inc
inc
xor
jne
sub
push
pop
mov
inc
repnz
add
add
mov
sub
or
rcrb
jle
je
cmp
jg
mov
mov
lahf
in
adc
in
push
xor
push
jmp
mov
aam
add
cld
pop
push
and
xor
shrl
mov
mov
sub
push
adc
aad
pop
rcll
js
xchg
add
lahf
pop
mov
push
icebp
pop
imul
out
lret
mov
push
mov
pop
jo
or
jmp
xor
pusha
dec
adc
xchg
int3
and
mov
ficompl
fildll
sub
cwtl
outsb
pop
xchg
xor
pop
cmp
std
shrl
in
xor
inc
test
sbb
mov
lods
fwait
ss
adc
into
ret
sbb
dec
jo
popf
add
das
and
add
mulps
xor
mov
mov
cwtl
leave
push
inc
push
pusha
pop
mov
jle
adc
mov
aam
adc
mov
cmp
insl
int3
lock
sub
pop
test
or
push
out
jno
and
or
cmc
add
cmp
pop
dec
data16
pop
test
jg
mov
add
dec
or
arpl
push
xor
dec
iret
or
in
cmp
xchg
dec
loop
xchg
divl
clc
cmp
jne
adc
hlt
add
xor
ret
negl
inc
and
ficoml
or
add
call
push
mov
sub
add
and
add
movsb
pop
or
cmp
adc
xchg
roll
in
mov
call
mov
ret
add
popf
in
loop
or
push
mov
repnz
nop
mov
lock
loopne
push
mov
mov
push
add
mov
lods
imul
cmpsl
clc
jg
push
icebp
dec
test
jge
stos
or
shlb
push
mov
sub
jmp
or
cmp
fucomp
je
or
or
add
jno
rolb
mov
stos
test
shrb
jns
xchg
test
jecxz
sub
mov
in
dec
dec
shr
dec
daa
mov
pop
fldt
inc
lahf
sub
mov
cmp
sub
repz
or
pop
add
jmp
add
lock
std
lds
jo
jo
notl
mov
and
inc
out
in
or
pop
push
mov
stos
xlat
add
cmpsl
jmp
daa
jb
jle
cmpb
mov
jl
pop
and
iret
push
xsaves
mov
cmp
push
push
pop
pop
and
stc
xchg
and
xor
mov
pusha
xchg
fimull
int
daa
push
bound
std
cli
sbb
push
jb
sub
or
ds
adcl
cmp
sbbl
scas
or
shlb
xchg
add
fucom
popf
test
pop
cmp
adc
pop
mov
push
nop
jo
mov
cwtl
xchg
and
push
inc
xchg
push
cmp
mov
adc
das
insl
inc
js
mov
leave
add
mov
pusha
aas
push
sarb
in
repnz
jno,pt
movsb
fs
mov
and
ss
fnstenv
mov
push
rcll
loopne
add
sbb
xchg
mov
loopne
mov
jge
dec
movsbl
roll
and
je
and
sbbb
push
add
inc
or
sbb
sub
or
pop
ficompl
sbb
in
and
adc
movsl
mov
xlat
xor
or
inc
divb
mov
dec
rorb
or
ljmp
push
adc
dec
test
pop
rclb
push
push
inc
ret
push
sbb
mov
aas
mov
js
pop
out
jo
jne
or
dec
jmp
pushf
daa
xor
stc
pop
test
daa
xor
push
push
and
icebp
and
data16
jb
in
sub
dec
lods
repnz
fucomip
sahf
daa
xor
out
and
mov
cmpsl
pop
ja
std
inc
test
mov
mov
pop
jp
jl
add
pop
das
mov
test
loop
mov
cli
xchg
daa
jmp
push
mov
jae
jne
cwtl
or
shlb
imul
jle
adc
pusha
add
out
mov
mov
add
push
or
rolb
push
add
pop
sub
push
jmp
sti
aad
add
jns
push
jmp
add
sub
rol
xchg
push
pop
xor
jo
ljmp
lahf
cli
repz
or
cmc
pop
or
mov
in
dec
adc
jmp
pop
fs
fldt
call
out
adc
cmpsb
add
and
adc
frstor
jmp
icebp
shll
inc
neg
mov
dec
outsl
addr16
jo
and
inc
rorl
push
push
cmp
adc
push
cmp
aas
addr16
xor
testl
xchg
and
jge
push
push
xchg
inc
xchg
and
adc
shr
stos
aad
mov
pop
or
add
jle
clc
daa
or
js
dec
dec
sub
mov
push
pop
arpl
lock
jbe
dec
sub
jnp
push
call
sbb
jmp
cmp
mov
adc
cs
sbb
jbe
pop
xchg
xchg
loope
shlb
stos
pop
push
push
js
aaa
int3
loope
xor
add
jmp
mov
inc
push
mov
cmp
mov
and
push
push
mov
inc
je
add
std
mov
sbb
clc
and
test
mov
in
nop
xchg
dec
gs
sbb
sub
xchg
outsl
and
jno
mov
pusha
mov
mov
adc
inc
mov
addr16
add
mov
xchg
stc
mov
clc
das
dec
repnz
mov
or
push
jmp
movsl
xorb
mov
and
push
mov
dec
dec
cmc
aas
xor
xchg
enter
push
mov
mov
ljmp
pop
add
cmp
jp
cmc
daa
bnd
xchg
nop
movsl
xor
adc
adc
xor
mov
inc
hlt
jnp
sbbb
sarb
shrl
mov
push
push
pop
call
enter
mov
add
mov
loop
fcomip
push
lods
sub
adc
ljmp
js
pop
ljmp
mov
or
out
insb
add
pop
sahf
jbe
push
call
ds
outsl
add
push
xor
nop
jge
in
rclb
push
add
roll
popa
dec
or
sub
xchg
jbe
mov
clc
add
and
jnp
imul
jae
or
movsb
pop
sub
out
pop
cltd
out
pop
fidivrs
cmp
mov
ss
or
jmp
or
add
inc
adc
scas
ret
out
imul
xor
ret
jl
leave
hlt
adc
lret
jmp
push
sub
sub
cmp
clc
loop
ret
push
lds
jg
sar
jge
jg
push
fwait
in
outsl
push
das
test
and
ljmp
lock
popf
rolb
and
or
pop
lods
movsl
sarl
and
stos
pop
pop
lea
in
mov
incb
ss
push
outsb
push
sub
pop
scas
into
jne
adc
movzwl
lds
xchg
xor
roll
shr
push
or
ja
subb
mov
mov
mov
pop
ds
cs
cmpl
push
sub
push
push
add
loop
js
mov
cmp
mov
cmpsb
or
or
adc
ds
pop
pop
cmp
test
fwait
or
pusha
cmp
xlat
sbb
jecxz
add
jno
stos
ss
ucomiss
adc
in
jmp
inc
push
or
repnz
cmp
add
pop
fsubrs
pop
xor
xor
popf
xor
out
or
pop
mov
jge
inc
pop
xor
mov
push
push
push
add
sbb
or
call
shrl
out
jns
ljmp
loop
inc
sti
adc
dec
inc
pop
add
mov
jp
inc
jae
mov
pop
cmp
pcmpeqw
adcl
fdivrs
xor
cmpsl
push
mov
add
xchg
bound
inc
lds
mov
std
sbb
int3
mov
insb
push
jae
dec
mov
sub
out
sub
and
or
sbb
jle
xchg
add
xor
inc
jae
push
cmpl
nop
cltd
mov
inc
xchg
pop
jns
cmp
lahf
scas
mov
xchg
repnz
inc
bound
add
jne
or
pop
push
push
pop
lahf
aam
push
dec
test
cmp
jmp
pop
jmp
or
cmp
mov
test
pop
jns
jmp
les
jbe
jb
mov
daa
lret
fs
popa
or
flds
mov
cmp
mov
or
jmp
pusha
push
sub
add
push
jae
pop
mov
outsb
daa
push
push
pop
into
lods
or
jmp
push
inc
sbb
sti
adc
ljmp
lods
and
adc
shl
cmp
ret
and
push
repnz
das
icebp
inc
scas
push
pop
push
out
pusha
das
jle
push
or
mov
jp
inc
or
loop
push
push
add
addr16
jae
pop
sbbb
pop
imul
aas
out
add
outsl
push
test
push
mov
adc
or
pop
and
jmp
or
jo
das
hlt
xchg
sub
pop
sub
xchg
sub
add
jbe
cmpsl
jg
loope
jmp
in
daa
ja
out
nop
mov
mov
mov
sub
sahf
imul
inc
das
dec
sub
out
loopew
cs
xchg
or
test
jg
fcomi
mov
push
subl
dec
ret
cmp
lcall
icebp
sub
out
adc
adc
mov
leave
pop
xor
adc
adc
bound
xor
and
cmc
pop
jle
xor
jmp
mov
pop
popa
add
mov
out
daa
cmc
js
xchg
inc
scas
je
inc
sbb
rorl
clc
insl
inc
or
xor
and
sbb
rcll
stos
sub
pusha
insl
mov
nop
inc
and
pop
sub
adc
xchg
not
xor
xchg
xlat
and
fwait
push
adc
or
push
rorb
and
xor
xchg
xchg
or
and
dec
push
int3
movsl
sbb
iret
sbb
jmp
int
and
inc
push
jb
cmp
ljmp
cmp
loopne
and
add
in
iret
mov
loop
test
lea
shr
dec
cmp
mov
inc
ja
sub
dec
add
out
dec
loopne
std
inc
add
and
loope
push
cmp
sub
pop
mov
xchg
or
cmc
adc
and
cmp
inc
lock
out
int
fnstcw
pop
in
sub
pop
rcrb
fldl2t
sub
dec
pop
push
and
into
dec
popf
mov
in
orb
ss
or
nop
sbb
jmp
xchg
dec
lds
or
inc
push
outsb
xor
mov
cs
xor
scas
mov
inc
add
lcall
inc
test
xor
and
add
shlb
scas
aaa
outsb
dec
jb
adc
sub
lock
mov
rep
lock
push
mov
fldl
push
push
pop
xorl
mov
pop
pop
xor
dec
push
jl
int
sub
lcall
fiadds
ljmp
push
shr
add
lret
adc
pop
or
push
movsb
daa
aaa
lcall
adc
aam
push
jg
addr16
div
cltd
loopne
ljmp
mov
jmp
ljmp
pop
push
pop
pop
rorb
dec
jle
pop
out
push
and
pushf
xlat
add
pop
add
and
cmc
adc
rcrb
sti
sub
mov
dec
xor
add
lds
mov
xchg
adc
data16
xor
ja
cmp
push
adc
fwait
mov
and
shll
add
leave
lea
sub
imul
pop
lret
xchg
and
mov
cmp
xchg
pop
or
push
sub
or
mov
sbb
dec
dec
imul
popf
fisubl
pop
ret
stc
push
push
jmp
mov
push
aam
and
pop
or
icebp
dec
sbb
push
sub
jbe
test
and
lods
pushf
sbb
xchg
jne
or
mov
int3
cmp
jmp
cmp
test
jno
cmp
fcoms
add
popf
stc
sti
mov
mov
stc
out
xor
inc
mov
test
shl
cltd
outsl
pushf
push
sub
not
add
mov
dec
in
push
nop
mov
repnz
pop
lahf
js
jmp
mov
ror
add
mov
or
xor
mov
popf
pop
arpl
test
les
scas
add
mov
xchg
mov
movb
mov
xchg
push
bound
jmp
movsl
mov
xchg
push
push
cmp
inc
jmp
inc
xchg
sub
pop
int3
and
lds
xchg
xor
add
xor
push
mov
je
or
outsl
and
inc
in
xor
adc
bound
es
mov
daa
jae
or
jmp
lret
popf
push
pop
inc
rcrl
cmc
mov
or
shlb
ret
mov
nop
mov
lret
cmp
hlt
ret
popl
loope
or
pop
lcall
shr
mov
insb
jmp
pop
lret
xchg
nop
lock
mov
push
add
pop
sub
xor
subb
and
int3
popf
dec
mov
dec
add
cmp
in
sub
or
xchg
add
jmp
mov
js
push
out
rclb
sbb
mov
pop
add
lahf
imul
xchg
pop
inc
sub
popa
sub
hlt
ret
pop
sbb
jge
lret
inc
fdiv
sti
sbb
and
call
ficompl
xor
cli
add
data16
push
jp
mov
sbb
sbb
test
pop
mov
dec
insl
and
mov
inc
sbb
lcall
pop
push
add
sub
sbb
xor
add
xchg
out
push
jmp
push
mov
filds
aas
pop
fwait
push
add
push
addb
std
mov
and
aam
jmp
notl
iret
cmp
push
cld
orb
and
std
xor
inc
lret
mov
ds
rclb
pop
pop
mov
ja
mov
lea
mov
addr16
gs
xchg
add
jo
shr
das
xor
gs
out
push
outsb
pop
cwtl
cmp
idivb
data16
xor
dec
les
and
nop
sub
adc
mov
mov
mov
je
add
rorb
je
pop
shl
in
das
mov
mov
sub
or
pop
das
rol
sub
adc
jns
daa
push
std
sahf
mov
fwait
push
movl
and
bsr
cmpsl
addb
cmp
sbb
bnd
xchg
ret
sarl
and
mov
mov
icebp
pop
sub
fdivrs
aad
jmp
daa
adc
and
mov
dec
stos
fcmovnbe
sbb
cs
jecxz
insb
adc
dec
jno
test
push
cli
pop
lret
push
pop
test
fildll
sub
cmp
dec
lcall
mov
add
mov
divl
xchg
xor
pop
push
sbb
lea
int3
rcl
popf
add
push
inc
push
add
rep
test
or
jae
cmp
inc
or
jnp
xchg
xchg
std
dec
lret
add
pop
add
adc
xor
mov
nop
and
aaa
or
jecxz
fidivrs
adc
and
clc
xor
cmp
lods
cmp
dec
fs
daa
push
or
adc
movsl
add
leave
add
sbb
sbb
adc
push
fldt
fnstsw
adc
cmp
fsts
lods
sti
bound
mov
data16
mov
cmp
test
jmp
or
push
sub
outsb
outsl
pop
les
sahf
in
int3
push
pop
mov
cld
enter
loop
repnz
cmpsl
dec
jo
mov
gs
ret
rcrl
es
add
jno
sub
or
add
pop
jno
jecxz
sub
movsb
cmpsb
ficompl
inc
cld
or
jg
fbstp
es
and
push
sub
xor
push
inc
hlt
test
lds
std
rorl
pop
pusha
dec
lahf
adc
dec
in
sub
pop
push
ret
pop
add
pushf
add
arpl
mov
sbb
test
jmp
push
xchg
xor
jmp
mov
mov
lea
add
or
rclb
hlt
fs
je
sbb
inc
jnp
or
inc
push
add
pop
xor
mov
jle
aaa
psubsw
data16
call
pop
ret
sub
outsl
pop
sbb
ja
or
jp
sbb
and
int
mov
push
inc
rcrb
sbb
rol
dec
pop
adc
and
out
xchg
jne
fs
outsb
lock
or
lods
push
pop
loopne
lret
push
xchg
inc
jle
and
loope
inc
push
xor
lahf
or
fdivl
xchg
jne
or
adc
pop
jmp
adc
lret
dec
faddl
push
jns
cmp
lfs
dec
movsl
mov
cmc
stos
inc
aas
cmp
pop
push
mov
fsubr
roll
pop
push
mov
stos
adc
mov
mov
in
xchg
lahf
jbe
pop
icebp
data16
imul
xchg
repnz
arpl
jns
inc
popa
fdivrl
mov
ficoms
mov
pop
stc
cld
loop,pt
rcrb
and
mov
pop
popf
mov
cmp
ret
out
push
mov
adc
jnp
or
sbb
cld
mov
or
js
cmp
xchg
inc
xchg
dec
popa
jmp
loope
imul
pusha
sbb
jg
xor
xor
or
add
andb
xchg
push
bound
pop
pop
pop
clc
cmp
negl
or
sbb
add
adc
or
jnp
hlt
ss
aas
addb
push
iret
jb
cmpb
or
jg
mov
push
pop
or
push
xchg
int
fdiv
inc
sbb
push
jg
ja
sub
popf
fildll
cmpsb
push
inc
mov
inc
scas
push
jne
and
mov
test
pop
std
mov
scas
push
pop
mov
sub
xor
loopne
ficompl
inc
push
sub
or
icebp
out
movsl
or
cmp
xchg
mov
add
add
xchg
mov
stos
or
dec
inc
iret
add
es
jmp
mov
out
aam
test
sti
cmpsl
adc
adc
xor
push
jg
pop
shl
repz
dec
pop
les
adc
jl
gs
cmp
pop
jns
cwtl
sub
aas
mov
mov
xchg
scas
push
sub
std
pop
stc
jne
pop
push
or
adc
sbb
inc
imul
adc
adc
add
aas
add
add
and
pop
jne
cmp
lods
aaa
sbb
test
in
xchg
mov
xor
das
popa
mov
repnz
sbb
sub
dec
stos
pop
in
clc
jno
adc
not
loop
idivl
or
add
out
js
or
dec
rclb
xchg
leave
xlat
push
push
dec
add
sub
mov
xor
inc
push
dec
add
sbb
push
sub
add
imul
adc
sub
push
mov
fs
xor
mov
sub
pop
adc
ss
jmp
pushf
jnp
out
subl
shrb
dec
cmp
dec
and
ret
movsb
adc
bswap
add
mov
out
push
inc
dec
add
nop
data16
xlat
or
adc
sbbb
movsb
subb
jbe
or
pop
sbb
cld
or
sti
cmc
or
push
mov
sub
sub
xor
mov
mov
js
or
aaa
cmp
incb
cli
pusha
push
push
push
push
mov
mov
jecxz
mov
aad
pop
sub
push
mov
dec
aam
loope
mov
push
and
jl
push
push
cs
in
sbb
mov
xchg
mov
and
xchg
shlb
mov
imul
pop
push
cmp
lret
andb
int3
sub
pop
lahf
out
and
out
cmp
inc
sbb
adc
pop
orb
mov
clc
mov
das
ret
jmp
jnp
fstpl
sub
aaa
add
add
fcompl
lds
ficoms
jno
mov
out
movsl
out
and
and
fs
clc
in
mov
ret
add
mov
inc
xor
dec
outsl
xchg
add
jno
xlat
out
repnz
rcll
add
sbbl
mov
ret
dec
lret
mov
mov
pop
xchg
push
pop
cmp
or
jmp
push
mov
les
sarl
mov
fistps
jne
lods
ret
mov
ret
push
dec
fs
das
push
loop
pop
aam
push
mov
ret
push
iret
enter
push
out
pop
popa
cmpsl
push
stos
shlb
inc
aas
icebp
outsb
mov
arpl
or
addb
push
add
mov
xchg
or
push
daa
jl
fstl
mov
pop
orb
sub
decl
jmp
mov
dec
movsl
in
and
adc
dec
out
add
shl
mov
jecxz
add
mov
and
movsl
test
pop
in
and
xchg
mov
mov
push
cmp
pusha
in
into
movl
sarb
push
or
fwait
push
daa
xor
daa
and
outsb
add
dec
push
mov
dec
lods
inc
mov
jle
mov
lock
mov
test
sbb
jae
xchg
int
sub
aam
sbb
inc
inc
or
repnz
lods
daa
popf
call
inc
bound
insl
adc
sti
xor
mov
mov
push
jmp
das
push
fmuls
push
test
stc
push
push
lods
mov
push
test
mov
cmp
adcl
mov
mov
pmaddwd
call
jmp
mov
pop
das
mov
sahf
out
pushf
push
iret
add
jmp
adc
or
imul
mov
hlt
mov
push
sahf
ret
and
dec
sub
sbb
mov
pop
scas
mov
add
sbb
repz
lods
sahf
out
lea
add
cmp
cmp
or
jne
dec
xchg
push
les
mov
mov
jmp
cwtl
into
rep
mov
sub
roll
adc
mov
or
dec
sub
add
xor
leave
andl
adc
mov
ljmp
test
dec
movsl
or
idivl
ljmp
dec
xchg
repz
and
neg
stc
iret
imul
daa
jmp
ds
call
mov
mov
fbld
sub
cltd
mov
ja
xchg
shll
add
pop
inc
sbb
into
lods
or
or
leave
mov
loopne
lcall
shll
add
inc
dec
roll
leave
mov
or
jle
cmp
imul
ret
xorb
and
ds
push
add
fnstenv
je
jnp
dec
or
and
inc
call
rcr
mov
pop
jbe
or
xlat
ljmp
xor
add
dec
jp
push
loopne
cli
adc
jp
jno
and
adc
mov
and
or
in
inc
add
rolb
fucomp
int3
clc
imul
cmc
dec
aas
add
mov
nop
fmuls
mov
mul
lret
out
push
jmp
jmp
js
add
mov
cvtps2pi
mov
or
ficoml
jmp
push
cmc
jp
stos
add
jmp
sti
nop
fiaddl
lock
cmpxchg
sub
adc
jl
cltd
sbb
push
add
push
jmp
adc
or
aas
mull
mulb
or
clts
jmp
push
push
rclb
add
add
and
outsb
mov
fldl
mov
fisubs
xor
sub
jmp
jecxz
mov
and
or
add
aad
jmp
cmp
mov
jmp
loop
push
push
icebp
pop
sub
sbb
mov
shl
lds
jmp
call
adc
adc
daa
pop
pop
push
movsb
add
mov
rolb
lods
sti
mov
dec
pop
pop
mov
sbb
lock
mov
inc
stos
test
and
cli
clc
pop
mov
adc
pop
inc
dec
in
adc
jns
mov
xchg
lret
cmp
enter
sub
pop
jne
dec
mov
adc
push
mov
rcr
out
sbb
leave
adc
add
out
sub
add
push
push
add
hlt
add
fcoms
clc
lods
jo
mov
cmpsb
xorl
lods
mov
sub
ljmp
je
push
pop
xor
xor
ds
jnp
xchg
das
div
mov
js
mov
andb
or
nop
add
cli
dec
and
testl
nop
push
mov
lcall
mov
lret
lds
cmp
das
loopne
sbb
aaa
ja
loop
lea
neg
xor
cmp
cli
movsb
pusha
test
test
loopne
cli
shlb
mov
pop
inc
pop
add
adc
std
hlt
ret
jmp
lock
cmp
cmc
or
loopne
jmp
push
icebp
xor
or
jg
mov
pushf
lahf
dec
adc
movsb
insl
cs
or
sub
jne
cmp
aad
inc
stos
xchg
mov
cmp
add
test
je
cmpsl
dec
mov
adc
or
sarb
clc
mov
xor
popf
pop
out
enter
inc
sub
sub
adc
in
xchg
pop
fsub
fucom
push
cmp
add
cld
sub
inc
lods
sub
pextrw
sub
xor
faddp
or
cmp
test
add
mov
or
pop
mov
rcrb
push
dec
and
or
daa
and
or
add
xchg
incl
xor
loopne
iret
gs
add
add
add
jmp
cmp
ja
mov
aam
test
icebp
push
dec
stos
movsb
into
mov
add
lret
or
mov
push
inc
jp
push
jno
icebp
add
inc
push
add
pop
push
cli
sub
test
movsb
mov
cmp
inc
test
push
push
jnp
outsb
out
pop
incb
or
daa
inc
push
fbld
loope
sub
cmp
jmp
leave
mov
das
shr
insb
cmc
lcall
mov
pop
sub
jmp
mov
fstps
fstl
sub
dec
push
pop
push
dec
push
imul
repz
adcb
cmc
faddl
icebp
xchg
pusha
in
int3
test
or
les
lods
and
test
adc
pop
jmp
cld
scas
outsl
out
fadd
insb
aaa
jmp
push
shlb
push
gs
orb
adc
stos
sbb
test
cld
jmp
test
inc
xchg
push
jbe
loop
cmp
cmpsb
loope
dec
add
sbb
inc
dec
jl
add
xchg
cmpsb
add
scas
cmp
sbb
ljmp
inc
aas
cs
mov
sub
add
ret
in
std
or
pop
jg
ret
div
push
imul
outsb
imul
mov
sub
sbb
or
pop
pop
js
and
scas
in
xchg
or
mov
push
cmp
out
fsubl
mov
popa
mov
pop
add
scas
pop
out
pop
ja
jno
jl
fildll
les
sub
add
pop
or
mov
jp
push
mov
xor
pop
mov
adc
add
xor
jns
or
inc
mov
pusha
and
add
and
jg
and
cmpsb
jge
stc
pop
cmp
push
incb
cmp
inc
shlb
dec
lret
popa
dec
sub
cmpsb
add
inc
adcl
jmp
sti
fsubrs
loope
mov
dec
sub
sbb
or
jmp
push
add
je
in
push
mov
pop
mov
or
xchg
jg
push
pop
and
or
and
stos
call
and
mov
iret
add
ja
mov
in
out
mov
cmp
rorb
add
push
sub
mov
je
js
mov
inc
pop
fnstcw
mov
incb
test
scas
and
in
mov
jmp
ja
in
mov
xchg
repz
icebp
not
test
rclb
pop
push
cmpl
push
lcall
cs
mov
push
push
loopne
pop
aam
call
outsl
hlt
or
add
mov
jmp
jnp
cmpsl
repnz
jge
leave
jmp
jle
jae
add
push
add
xor
push
rorb
loop
lret
xchg
or
ds
dec
mov
mov
mov
outsl
add
and
jmp
dec
or
or
push
pop
in
jmp
and
lock
fsub
dec
fcomip
xchg
ljmp
or
test
mov
dec
das
inc
dec
jb
add
fs
ret
pop
push
ja
pop
andb
add
inc
and
fs
ret
sub
ja
popf
fsubr
rcrl
clc
fcom
xchg
push
pop
lds
push
rclb
mov
dec
pop
lcall
push
mov
xor
mov
clc
pop
sub
xchg
mov
test
aam
jmp
repnz
jge
pop
push
push
scas
push
dec
sti
in
iret
mov
jecxz
ret
sub
push
pop
add
sbb
mov
mov
imul
or
mov
pop
adc
pop
jnp
jo
sub
push
sbb
add
sbb
cmp
add
add
and
add
jecxz
push
icebp
pop
dec
orl
repnz
lret
sub
push
shr
rol
out
ret
cmp
aam
arpl
lods
mov
sahf
jge
jmp
jp
mov
push
sarl
pop
pop
mov
or
mov
imul
jle,pt
ds
xchg
dec
cli
mov
add
jmp
cmp
inc
idiv
bound
imul
icebp
js
lcall
dec
xchg
mov
xchg
or
push
mov
fincstp
xor
and
fldcw
icebp
cmp
mov
inc
jg
fidivl
push
nop
imul
xchg
push
ret
notl
sbb
push
or
jecxz
dec
add
and
out
fidivl
mov
stos
or
inc
dec
in
mov
int
jno
test
pop
xchg
pop
notl
sbbb
arpl
adc
dec
cmp
les
or
cwtl
add
rorl
lcall
aas
sub
lds
add
faddl
pop
add
jl
adc
pop
sub
insb
imul
add
pop
ret
push
lock
jo
pop
sbb
mov
scas
and
loop
add
lds
ret
lret
or
push
xchg
xor
push
xchg
add
or
cs
rorl
jp
push
inc
pushf
out
dec
xor
loopne
pop
faddp
data16
mov
mov
mov
call
push
out
push
push
mov
lock
xchg
popa
pop
add
push
shrb
rcl
test
or
jecxz
notb
add
mov
pop
mov
and
daa
push
push
add
das
xchg
lock
sbb
sub
mov
idivb
shrb
adc
push
mov
nop
sub
sbb
jmp
iret
push
inc
les
or
jmp
cmc
jnp
or
dec
pop
jg
jae
aas
loopne
rorl
scas
inc
mov
cltd
popf
and
cli
adc
jl
nop
sti
mov
loopne
nop
or
sub
add
cmp
adc
xchg
xchg
add
das
and
jo
add
add
pop
pop
rolb
imul
inc
arpl
dec
and
mov
or
jmp
pop
jmp
rcl
xchg
sbb
mov
movsl
xlat
mov
in
scas
test
ljmp
aam
in
pop
push
dec
ret
mov
jne
std
add
jp
dec
cwtl
popa
addr16
out
fcomps
mov
mov
mov
lods
das
or
enter
sub
add
sbb
ss
addb
push
jp
loopne
mov
jo
adc
add
push
mov
das
push
data16
rcrl
sub
fld
and
jns
repnz
push
xchg
ja
add
es
fiadds
pop
mov
push
jmp
xchg
add
lret
jge
int
icebp
outsb
sub
jnp
inc
insl
pusha
cmp
inc
das
push
adc
imulb
jg
movsb
in
bound
test
cli
push
xchg
scas
push
stc
sbb
or
mov
out
add
pop
xor
pop
pop
mov
fisttps
lods
push
sarb
cld
mov
cld
or
nop
ss
inc
push
jl
loope
jle
and
and
cmp
xchg
sti
nop
inc
inc
push
loopne
sub
ror
jge
cli
dec
sbb
sub
jb
or
jmp
inc
jg
jno
int3
and
daa
ja
loope
xor
cmpb
fsubrl
add
lock
jb
sub
lea
xchg
jg
test
mov
push
inc
inc
mov
xor
mov
testl
mov
mov
jmp
push
dec
inc
pop
outsl
rorl
xchg
jno
dec
pop
add
enter
nop
xor
push
mov
sub
mov
aaa
aaa
add
mov
shlb
jg
pop
repnz
imul
out
ret
add
out
adc
shll
loopne
testl
out
sub
aam
idivb
jmp
test
cmp
add
mov
scas
add
push
mov
fistpl
sub
push
pop
mov
cs
xor
and
dec
gs
pop
sub
mov
add
adc
mov
jp
mov
or
js
testb
jns
rcll
mov
ja
lret
push
hlt
rcrl
loopne
gs
xor
mov
dec
out
int
dec
fiadds
ret
mov
lods
jg
test
cmc
pushf
push
ja
add
xchg
cmp
stos
mov
add
int
add
sbb
inc
cs
pop
in
and
sbb
mov
lahf
je
dec
or
sub
add
mov
push
cs
pop
inc
mov
push
les
ljmp
fs
pop
pusha
lcall
push
add
push
or
and
dec
lock
mov
inc
inc
add
or
inc
pop
push
lock
jle
inc
or
dec
in
fimuls
xlat
mov
test
push
movsb
sbb
dec
push
mov
call
jmp
mov
fsts
push
mov
and
adc
xor
mov
cmc
mov
inc
outsb
inc
leave
jmp
dec
adc
jbe
mov
cltd
hlt
imul
jmp
dec
lret
out
mov
inc
mov
pop
adc
je
mov
mov
mul
stc
int3
lock
sub
frstor
cmpsl
inc
and
stc
out
dec
fstpl
cli
clc
sub
inc
loopne
call
stos
pop
jmp
sarb
dec
push
add
jmp
aad
fs
jg
add
sbb
mov
and
and
pop
inc
mov
add
add
push
pop
sub
or
dec
clc
mov
push
add
pop
and
call
outsb
loopne
lods
pop
add
push
nopl
testl
pop
subl
add
lods
neg
add
lcall
clc
adc
pop
pop
mov
incl
pusha
xor
or
sub
mov
loopne
add
pop
jmp
push
hlt
ret
sbb
popa
push
pop
packssdw
test
or
shrb
add
adc
or
es
add
jge
add
xchg
mov
add
xor
xor
mov
test
xor
pop
mov
popa
dec
sub
movsl
es
out
cltd
add
pop
mov
imul
addb
test
fnsave
mov
sub
mov
and
adcl
adc
cld
scas
dec
add
cltd
mov
xchg
loopne
push
call
mov
sub
call
adc
icebp
jmp
and
mov
cmp
jo
add
push
mov
in
lret
pop
inc
push
push
outsl
iret
cmp
addr16
sbb
jle
movzwl
sti
shll
lods
pop
mov
push
add
push
cmpb
jnp
pmaxub
nop
test
mov
xor
pop
imul
add
cmp
out
add
mov
mov
add
sbb
cmp
mov
lea
xchg
sbb
pop
pop
ret
rclb
sbb
jnp
mov
dec
dec
aad
in
shll
add
stc
mov
or
lods
andl
dec
les
add
mov
add
mov
add
add
sbb
cmp
je
cmp
pop
inc
add
cmp
mov
out
adc
xor
push
cmp
and
mov
push
ja
add
pop
lds
cmovl
jge
adc
cli
pop
fcomps
mov
adc
mov
js
sub
jno
push
mov
arpl
mov
ljmp
push
mov
dec
sbb
cmp
xor
fstps
cltd
mov
in
jo
outsl
xor
inc
and
popf
adc
cs
pop
imul
dec
dec
mov
add
xor
inc
add
daa
xchg
cld
nop
mov
filds
cmp
jne
loop
lods
add
inc
ficompl
add
sbb
add
sub
dec
xlat
outsl
inc
push
int
es
add
cmp
xor
fsubl
clc
xlat
loop
add
sti
cmp
mov
popf
mov
insb
ret
xchg
mov
inc
lret
dec
add
int
mov
bound
adc
imul
push
and
add
jns
in
invd
fisubl
mov
fildll
dec
rorb
int
mov
mov
add
and
xlat
jb
mov
or
negb
add
or
data16
sahf
and
dec
dec
int3
call
mov
xlat
mov
sbb
adc
cmp
lods
cltd
inc
aad
nop
ss
add
test
xor
xor
pusha
gs
xorb
dec
add
mov
or
cmp
add
test
cmpsb
mov
js
insb
inc
add
iret
cmp
test
pop
cli
push
add
or
push
data16
or
mov
adc
je
fs
ret
adcb
aad
mov
xor
jecxz
add
jns
lcall
pop
and
pushf
inc
xor
in
add
movntq
clc
or
imul
inc
repz
inc
cmp
lock
jno
dec
pop
xor
sub
dec
pop
mov
add
lahf
test
mov
addr16
cmp
loop
add
test
add
push
push
cmp
xor
jo
fmul
nop
insb
add
push
dec
add
fbld
dec
aam
mov
les
test
orb
bound
sub
mov
push
push
jns
int3
add
push
clc
in
incl
or
stos
push
add
push
push
int3
popf
stc
push
sub
dec
add
lods
outsb
pop
adcl
xor
fdivrp
adc
sbb
mov
rol
nop
and
add
loopne
scas
addb
xor
and
aad
aam
in
add
daa
adc
shlb
lret
cmpsl
mov
lds
mov
pop
nop
popa
add
dec
inc
test
cmp
inc
mov
lds
fcmovb
sbb
jnp
imul
fs
and
jb
add
cmp
insb
or
lret
fsub
jmp
in
jge
sbb
idiv
mov
xchg
jo
xchg
add
jnp
js
xor
jmp
fnstenv
mov
scas
jp
out
mov
add
popf
push
divb
clc
ret
xor
add
cwtl
hlt
or
push
in
push
shlb
inc
mov
cltd
cmp
dec
adc
and
lock
mov
in
push
std
adc
add
cltd
jne
add
dec
out
jle
push
roll
xchg
mov
sub
add
add
inc
test
push
pop
add
xchg
pushf
mov
stos
jge
ss
movsb
mov
adc
xor
lret
or
add
xlat
xchg
lret
cmpsb
add
outsl
dec
adc
cld
stc
pop
jb
push
mov
nop
or
push
hlt
sbb
xchg
orb
in
jge
pop
aam
add
pop
sbb
add
cwtl
xor
add
test
mov
add
mov
mov
or
and
aam
jo
xchg
fwait
xor
xchg
mov
aaa
cmp
sbb
fldl
test
pop
mov
mov
je
xorl
popf
sbb
popa
outsb
jecxz
pop
jno
xchg
loop
jle
jo
push
test
adc
mov
stos
sub
daa
mov
popa
psllq
dec
popa
inc
fcoms
pop
in
or
and
lods
push
imul
push
sbb
add
pop
out
or
and
jge
mov
test
sub
test
jo
aam
not
add
std
push
xchg
push
inc
out
fwait
pop
push
sub
and
sub
enter
hlt
jg
push
rolb
mov
or
mov
repz
or
or
daa
push
add
std
jae
in
imul
and
int
mov
cmpl
add
dec
mov
aas
fisubrs
dec
push
or
test
sub
mov
mov
or
imul
hlt
jne
fsts
repnz
mov
mov
jg
inc
mov
and
mov
in
inc
sub
ja
add
sbb
arpl
icebp
leave
add
mov
dec
jmp
add
pop
mov
sbb
cs
add
out
push
lret
test
add
pop
xchg
andl
jnp
add
mov
sbb
or
pop
jae
les
dec
cmpsl
jge
sub
push
jne
loopne
aad
andb
or
lcall
or
dec
pusha
cmp
mov
jl
inc
scas
ja
sub
loop
fadd
imul
popa
lds
xchg
jecxz
sar
divl
or
add
or
arpl
mov
add
mulb
jno
ds
xorb
sub
leave
jmp
add
cmp
pop
aam
jecxz
push
stos
sub
sub
aam
popf
add
inc
lods
mov
or
cs
jne
sbb
push
push
movaps
sbb
xchg
iret
test
lock
punpckhdq
test
lahf
arpl
sahf
testl
xchg
cmp
inc
loop
sti
pop
mov
jo
imul
jno
aas
and
cli
fildl
lea
jns
xor
xor
add
mov
or
cli
out
stos
xchg
es
add
in
push
xor
shr
scas
add
add
inc
iret
pop
pop
cmp
add
jae
mov
insb
pusha
scas
enter
and
xchg
in
add
jp
jo
xchg
and
add
das
mov
or
or
mov
adc
arpl
testb
pushf
add
jo
jl
and
add
push
outsl
pushf
movb
adc
cmpsb
ljmp
sbb
jmp
movsl
gs
sarb
mov
ja
cs
mov
xor
adc
or
xchg
adc
or
add
fistpll
rcr
test
movsl
add
inc
cwtl
cmpsb
pop
sub
ret
add
lods
cmp
push
sti
lcall
mov
test
add
in
ret
adcl
test
leave
scas
xor
pop
add
leave
int
lahf
outsb
orb
sub
push
pop
or
cltd
cmc
mov
sub
fisttps
enter
jb
clc
notl
sbb
fdivs
xchg
lahf
inc
test
rolb
sub
jl
adc
dec
rol
pop
add
dec
inc
add
and
add
push
mov
test
mov
mov
xchg
mov
push
nop
jno
mov
add
aas
mov
sahf
aad
add
cmp
aas
ret
mov
push
add
aaa
pop
adc
jno
adc
add
cwtl
aam
xor
rol
xor
pop
mov
scas
outsl
add
dec
or
add
les
add
mov
ljmp
mov
mov
inc
mov
pop
leave
das
inc
mov
or
mov
dec
in
xchg
les
mov
mov
inc
cwtl
inc
add
mov
cmovbe
push
test
add
ds
sbb
jns
add
fs
dec
mov
ds
gs
es
and
sub
cmpsl
sbb
inc
push
add
add
dec
cli
mov
add
add
mov
jmp
add
jmp
fcompl
jne
clc
sbb
inc
or
sbb
bnd
push
mov
cmpsl
pusha
inc
mov
and
mov
adc
iret
sub
add
call
inc
je
inc
fsubrs
lods
fxch
aam
lea
jnp
lods
pop
in
sub
and
inc
inc
and
push
cmpsb
cmp
xor
and
imul
out
adcb
adc
subb
clc
add
nop
std
mov
jle
add
inc
in
fchs
pop
mov
cmc
sub
sub
pushf
subl
mov
call
or
inc
and
incl
or
add
leave
cmpsb
data16
add
test
fisubrs
repz
pop
jmp
out
js
sarb
xchg
add
dec
rcll
add
cld
shld
push
lret
add
scas
add
inc
mov
inc
js
cmp
aam
pop
adc
rorl
mov
cmp
adc
pusha
inc
dec
out
cmp
add
xor
mov
sub
mov
sub
cmp
mov
adc
in
in
int3
add
mov
scas
je
out
bound
dec
fwait
sub
and
insb
add
lcall
push
mov
out
add
negb
jg
pusha
sti
clc
dec
push
xor
add
out
aad
addl
or
adc
mov
lock
xchg
ljmp
int
mov
jmp
in
lret
cld
cmp
mov
xchg
push
scas
fstpl
add
dec
mov
mov
adc
call
add
aad
inc
adc
or
xor
mov
pushl
xchg
dec
dec
fdivrs
mov
add
inc
pop
pop
add
loopne
test
cmp
in
sti
add
je
dec
or
pop
jl
pop
xor
fdivs
out
sbb
in
test
sysret
hlt
sub
mov
adc
jg
mov
inc
add
fstpt
add
mov
scas
jle
push
adc
push
int
out
add
das
jge
out
stos
or
or
push
push
add
mov
add
or
stc
dec
cs
pushf
cmc
add
push
clc
fiaddl
popf
jecxz
ja
mov
sbb
arpl
mov
xor
nop
adc
and
and
mov
add
test
pop
cmp
inc
movsl
dec
mov
sub
push
mov
loop
into
push
stos
ret
mov
mov
push
enter
mov
cmpb
adc
jb
daa
pop
test
nop
dec
dec
sbb
aas
lcall
aam
stc
fwait
testb
dec
jp
push
loop
loope
scas
push
mov
add
inc
fisubrl
call
fstl
adc
aam
adc
clc
xor
mov
adc
pop
fwait
xlat
lcall
in
mov
sub
push
test
or
pop
mov
jle
add
xorb
fmul
pop
push
std
xchg
push
adc
rol
imul
out
dec
pop
add
mov
addr16
stc
adc
movsl
imul
add
fs
adc
mov
popf
add
pop
pop
add
leave
daa
mov
ss
icebp
add
mov
je
adc
jo
into
xchg
mov
es
mov
icebp
nop
and
cmp
sbb
add
mov
pushf
jmp
in
stos
xchg
test
dec
push
add
addr16
daa
inc
push
dec
jbe
or
cmpb
xlat
push
aam
in
mov
sub
jl
sub
mov
add
xchg
incb
fwait
mov
cmp
cmp
movb
pop
cmp
popa
jnp
push
aas
dec
int
aaa
xor
or
gs
es
ss
dec
cmc
inc
cld
add
jmp
jecxz
enter
jae
ds
mov
xchg
jo
movsb
sahf
mov
iret
outsb
cmpsl
add
or
in
lcall
fwait
loope
inc
jns
nop
out
out
inc
shlb
sbb
std
push
push
mov
jne
add
sbb
leave
cmp
mov
mov
push
shr
paddw
movsb
xor
loop,pn
je
pop
hlt
mov
add
mov
sti
stc
add
scas
sbb
lea
add
test
or
dec
insb
add
push
pand
cmp
mov
rolb
xchg
aam
rolb
mov
or
mov
inc
leave
or
xorb
out
and
or
push
aaa
addr16
sbb
push
mov
mov
jl
aas
pop
stc
and
pop
push
in
jns
and
and
adc
jp
add
pop
jmp
xchg
sub
jno
sti
push
fs
cli
and
or
inc
jne
push
std
mov
jecxz
add
jmp
pop
add
cmpsb
insb
pushf
sub
rol
add
and
testb
ljmp
fiaddl
test
daa
rolb
cltd
mov
pop
cli
add
insb
sbb
adc
ror
les
insb
add
add
add
xchg
sti
push
bound
out
xor
mov
dec
add
jno
mov
orl
and
adc
mov
hlt
pop
push
scas
add
sub
pop
inc
xchg
shlb
sbb
divl
jg
and
adc
rorl
and
repnz
pop
push
adc
pop
adc
clc
popa
dec
mov
cs
aas
and
xchg
sbb
xor
jle
or
sbb
push
inc
pop
push
jnp
mov
sub
popf
icebp
add
sbb
inc
mov
sub
xchg
adc
jo
into
xor
test
mov
add
rorl
inc
push
shrb
sub
jge
call
add
add
movsb
jmp
test
cmpsb
and
lods
inc
sub
jmp
mov
cmp
cmp
or
shlb
out
test
or
fistl
outsb
jnp
loop
imul
pop
stos
pop
popa
adc
push
jb
loope
inc
jno
int3
rcr
dec
leave
in
mov
mov
dec
int
pop
adc
xchg
out
jmp
addl
in
push
inc
dec
sbb
push
xchg
add
nop
adc
pop
icebp
shrb
cs
popa
pusha
lds
add
inc
outsl
add
xor
call
pop
ror
leave
adc
fdivrs
int3
sbb
repnz
xchg
mov
and
mov
mov
sub
lcall
daa
movsb
mov
sub
test
inc
call
sub
push
out
xor
mov
pop
subl
push
add
add
js
jmp
or
add
xchg
xchg
add
orb
aaa
and
stos
cmp
or
mov
sahf
add
cmpsb
adc
popf
cmpsl
adc
sub
jmp
lds
cmp
cmpsl
dec
sbb
or
imul
push
call
cmp
adc
lock
push
add
invd
and
pop
sub
jle
cwtl
fs
mov
int3
inc
insl
add
or
inc
mov
andl
mov
mov
push
mov
cwtl
inc
mov
sarl
das
dec
pop
inc
adc
loop
ja
push
cmp
leave
xor
jo
sub
pop
fiadds
out
dec
enter
adc
imul
mov
mov
in
in
fcomps
lret
pop
iret
cs
clc
orb
push
lcall
outsb
sub
call
adc
inc
mov
js
xchg
mov
mov
xchg
enter
test
es
je
es
sbb
adc
arpl
cmp
push
sub
xchg
loop
in
popl
jl
cwtl
stos
test
nop
fsts
test
push
sbb
jmp
sbb
or
adc
aam
dec
aam
in
push
or
inc
pop
and
test
or
ret
mov
and
pusha
mov
adc
hlt
rclb
mov
inc
in
fs
sub
and
aad
pop
scas
mov
lret
sub
jbe
mull
inc
test
or
rclb
push
push
hlt
add
mov
push
cwtl
pushf
push
inc
sub
mov
mov
and
mov
dec
fdivs
xor
repnz
test
bound
test
addl
repnz
pop
sub
mov
push
mov
add
dec
pop
aam
enter
or
movsb
or
mov
push
into
dec
pop
sub
pop
push
sbb
vpmacssww
mov
sub
call
xchg
jge
fsubl
js
mov
jge
add
push
push
cmp
jns
aam
jns
call
xor
jne
push
je
cwtl
ss
test
inc
push
add
cs
push
sbb
jno
rcrb
sbb
jo
js
ds
pop
mov
stos
inc
adcl
loopne
or
add
lds
imul
cwtl
out
hlt
inc
lret
and
cmp
loop
sar
cmp
dec
sar
sub
add
cli
imul
push
xor
shlb
or
popa
dec
insb
or
lds
lods
mov
cmpl
aam
jl
sub
test
mov
outsl
inc
imul
xchg
add
or
xchg
in
lahf
sub
ret
clc
mov
add
outsl
dec
xor
xor
push
cmp
adc
pusha
pop
sbb
add
ds
lahf
inc
cmp
xor
inc
int
adc
inc
push
adc
js
adcb
xor
inc
add
mov
sub
mov
mov
loope
pop
push
add
add
xchg
rolb
rcrl
call
icebp
dec
fs
cmp
sbb
aam
hlt
sbb
lds
enter
enter
dec
sti
adc
jmp
loopne
jp
pop
ret
sbb
inc
insb
fcoml
or
je
jg
test
ret
push
add
addr16
jmp
add
fisubl
add
cmp
movsb
popa
clc
gs
sbbl
pushf
pop
add
push
mov
sbb
outsl
add
or
and
test
cld
jns
add
mov
mov
xor
and
mov
lods
dec
push
xchg
sbb
inc
adc
push
add
push
sub
hlt
cmpsl
inc
pminub
pop
push
pushf
sbb
iret
bnd
adc
push
out
mov
mov
jne
add
int3
lock
inc
ror
insl
dec
xchg
sbb
dec
pop
fwait
inc
push
inc
iret
daa
pop
popf
popf
jp
mov
dec
xor
mov
push
push
fstpl
inc
add
fdivrl
push
push
adc
adc
mov
adc
and
add
fs
add
test
loopne
shrl
sbb
inc
mov
inc
sbb
lret
adc
pop
nop
inc
and
mov
and
push
fcoms
jno
mov
mov
xchg
fs
clc
and
mull
sbb
add
jmp
sbb
fsts
xchg
adc
mov
lcall
das
enter
xor
inc
dec
mov
adc
js
pop
dec
add
dec
int
cltd
mov
loop
fiaddl
mov
stos
arpl
popa
insl
gs
les
lods
jns
add
adc
scas
xchg
or
repz
mov
dec
loopne
or
xor
insb
xor
fnstcw
mov
or
rolb
daa
jmp
repz
lock
dec
adc
dec
sub
xor
mov
movsl
loopne
out
cmp
or
mov
inc
adc
sub
push
fnstcw
stos
mov
ds
xor
lods
xchg
mov
adc
sub
inc
pop
mov
in
stc
cmp
sti
pop
test
dec
int3
jmp
push
and
add
push
stos
jns
addl
lock
mov
push
jo
sub
xchg
cmp
clc
adc
pop
ficompl
lods
mov
sbb
fs
pop
and
inc
inc
cwtl
fs
mov
and
jle
xor
ror
pop
or
insl
cmp
adc
fldl2t
call
rorb
and
mov
pusha
sbb
and
adc
add
xchg
insl
or
xor
sbb
dec
jns
dec
or
sbb
mov
shlb
ljmp
add
pusha
cmc
mov
ret
add
jl
pop
addl
sub
sbb
fs
orl
je
xchg
add
jecxz
inc
test
dec
sub
jnp
and
out
add
test
push
push
pop
xor
and
mov
adc
jl
pop
sub
out
imul
sahf
call
inc
add
sbb
xchg
negl
mov
movsb
add
lea
cld
add
mov
mov
inc
jns
or
in
sbb
clc
mov
add
rclb
adc
xor
mov
add
sub
test
add
ds
lock
gs
inc
cld
les
pop
andb
sbb
add
mov
stc
es
in
bound
in
add
fs
xchg
arpl
lds
aad
push
aaa
sbb
dec
add
mov
sbb
addl
and
or
jle
add
in
or
sub
mov
push
mov
push
arpl
push
cltd
gs
cmc
clc
add
cwtl
jnp
mov
xchg
shrb
sbb
add
adc
pop
mov
lods
mov
cs
and
push
mov
mov
jo
lret
sub
xchg
add
dec
dec
mov
or
incl
mov
add
xor
cmpsb
and
imul
pop
pop
push
pop
sar
pop
outsl
jo
push
frstor
and
int3
rorl
xlat
or
icebp
test
add
aaa
je
daa
nop
hlt
shl
add
push
ss
dec
subb
xor
add
add
and
or
dec
and
xchg
sbb
mov
lds
add
push
sub
movsb
push
jg
in
enter
xchg
lock
push
sub
addr16
push
and
iret
out
add
je
lahf
or
notl
add
jle
mov
cmp
es
add
add
pop
mov
leave
dec
rolb
shlb
int
test
in
insl
clc
loope
rol
divl
adc
jmp
outsb
or
mov
ds
cmp
push
mov
and
xor
mov
push
sub
lret
inc
mov
stc
push
gs
enter
into
iret
adc
pop
mov
icebp
push
aaa
aaa
dec
mov
das
and
rcll
enter
call
xor
push
gs
jbe
add
lods
in
add
jo
sahf
mov
add
push
mov
les
sub
inc
xlat
mov
jb
dec
pop
nop
sbb
ss
push
dec
iret
insb
mov
xor
mov
jmp
dec
add
sub
pop
lds
mov
xor
push
push
inc
imul
pop
test
rclb
jmp
cmp
push
sub
sete
inc
adc
and
push
into
jo
mov
cmp
addl
lock
push
jne
mull
xchg
ja
cmp
mov
pushf
clc
pop
add
cmp
inc
add
call
dec
pushf
adc
hlt
subl
test
dec
sub
mov
sbb
and
movsb
push
sbbb
mov
or
inc
xchg
jecxz
mov
inc
push
mov
inc
push
jae
jo
adcb
pop
pop
clc
pop
repnz
sbb
xchg
xor
push
dec
cmp
add
scas
addr16
scas
push
mov
inc
jbe
mov
jecxz
dec
cmp
call
subl
sub
addr16
sbb
adc
int
out
cmp
vpshufd
mov
in
add
sbb
nop
xchg
mov
inc
test
and
add
and
cld
ja
cmovle
js
jmp
imul
in
cld
adc
mov
loope
lahf
mov
in
dec
add
xchg
clc
pop
sbb
jnp
fs
add
iret
mov
or
scas
fwait
push
push
cld
mov
add
test
add
mov
loop
dec
fiaddl
test
cmp
inc
sbb
gs
jo
inc
lret
pop
fwait
add
mov
and
sbb
jl
pop
stc
fisubrs
idivb
jmp
paddusw
mov
int3
pop
add
ret
pushf
aam
and
rol
or
mov
inc
jae,pn
ret
sub
dec
push
dec
pusha
mov
les
and
rorl
push
ret
sahf
outsl
stc
and
cmpsl
fsub
push
add
add
icebp
add
scas
jb
ss
sub
add
sahf
lcall
andl
mov
and
addb
imul
mov
jle
in
and
add
or
mov
repnz
and
outsb
pushf
sbb
out
cld
cmp
add
push
push
mov
pusha
push
mov
mov
cmp
outsl
insb
or
fisttpll
arpl
push
and
pop
hlt
rcll
mov
xor
je
sbb
pusha
push
jbe
mov
dec
pusha
lods
inc
mov
push
adc
inc
ljmp
sbbb
push
add
xchg
push
cmpsl
add
push
xor
add
cld
rorb
imul
lods
add
repnz
mov
add
push
push
xlat
iret
mov
hlt
xor
cmp
aad
enter
add
push
stos
sbbl
adc
iret
inc
test
mov
rolb
movsl
shll
and
les
cmp
add
xchg
mov
dec
scas
clc
out
bound
or
clc
xchg
stc
jmp
and
sbb
add
ljmp
movb
shll
fisttpll
sarl
mov
xor
push
nop
fisttpl
xchg
add
cmp
repnz
sbb
call
push
adc
gs
push
mov
push
stos
mov
pop
inc
enter
xchg
dec
mov
jns
imul
jge
pop
inc
aaa
int3
fiaddl
sub
lahf
pop
cmp
add
dec
inc
push
push
sbb
mov
addr16
cwtl
iret
push
dec
incb
mov
insb
xorb
arpl
je
adc
xchg
push
ljmp
ret
add
xor
mov
pop
call
testl
repnz
cmp
sub
scas
leave
je
addb
cli
lea
filds
dec
push
les
inc
pop
outsl
jg
mov
loopne
daa
das
pusha
or
and
sub
mov
push
adc
mov
jo
xchg
mov
xchg
xor
scas
push
add
fists
test
mov
xor
add
push
insl
loopne
ds
push
xchg
stc
jg
mov
cld
and
outsl
inc
fsubr
stos
add
and
push
add
notb
inc
add
movsb
mov
xor
stos
pop
mov
jne
cmp
dec
jg
nop
mov
cli
add
xchg
fwait
pop
lock
or
clc
inc
sub
ds
add
inc
cld
test
add
add
and
push
flds
sbbb
loopne
pop
stc
ret
jno
mov
xchg
inc
pop
loop
add
stos
mov
aam
push
or
xchg
out
jle
sbb
push
insl
add
push
and
pusha
xchg
nop
loope
loopne
sbb
and
push
mov
enter
add
jp
sarl
jne
pop
lods
mov
insb
aaa
mov
adc
leave
cmp
add
pop
adc
add
jnp
das
push
cmpsb
jne
ret
xor
decb
mov
sub
leave
sub
popf
iret
push
xchg
mov
repz
sbb
test
lcall
add
in
std
sbb
and
orl
xor
fwait
rorb
addl
and
pop
aam
rclb
repz
popa
add
pop
xor
or
pop
scas
add
sbb
sbb
pop
lcall
call
dec
dec
xlat
shrb
xchg
clc
pop
data16
hlt
xchg
jae
aas
lgs
jb
fidivrl
sbb
enter
sub
bound
sbb
sub
pop
mov
pop
cwtl
add
test
loop
insl
add
jle
ficoms
pop
xor
leave
jns
sub
add
shll
jge
cmp
add
stos
mov
dec
push
outsl
cmp
pop
lds
mov
inc
and
cmp
add
cmp
pop
inc
add
add
in
jbe
sbb
fadds
imul
iret
mov
adc
add
int3
test
addb
stos
sbb
jae
xor
mov
shlb
psraw
repz
lds
pop
add
cmp
rcl
pop
cmp
inc
ss
mov
dec
dec
or
iret
sub
das
mov
pusha
add
inc
testb
std
push
sub
sub
fwait
cltd
adc
mov
add
cmp
clc
cld
cmpsb
mov
and
stos
inc
mov
inc
in
fiaddl
mov
in
faddl
jae
adc
mov
xchg
add
aad
or
bound
xor
insb
shlb
mov
add
sahf
popa
nop
or
ss
add
adc
push
and
in
push
iret
add
int3
mov
leave
in
hlt
adc
add
test
test
test
hlt
pop
and
testb
ret
repz
loopne
fcom
out
dec
mov
mov
or
jmp
mov
lret
aaa
addr16
and
loopne
stos
inc
add
and
add
mov
add
inc
lock
xchg
idivl
js
out
pop
dec
repz
lds
mov
imulb
ret
in
xchg
add
or
or
lds
xor
and
sbb
fdivrp
cltd
nop
add
enter
imul
aad
add
jl
sbb
sub
loopne
add
and
in
ror
mov
add
rol
notl
sbb
adc
push
lds
gs
add
mov
loopne
insl
sti
add
add
out
push
ljmp
in
jl
in
or
sub
add
lock
add
popa
cmc
roll
sti
gs
lcall
pop
pop
ds
std
push
aaa
xchg
orl
shrb
sub
xor
jecxz
orl
or
sbb
jbe
rclb
adc
mov
dec
in
mov
jns
inc
mov
fninit
ficompl
sbb
inc
out
mov
lret
push
adc
push
mov
jecxz
leave
mov
rclb
ljmp
mov
in
loopne
jp
sub
fwait
popa
fcompl
sbb
inc
xchg
xor
cmp
sbb
cmc
popa
fldcw
cmp
js
adc
clc
dec
movsb
shrb
es
or
jnp
push
xor
loop
inc
adc
rorb
and
aaa
add
add
clc
aam
inc
or
inc
lock
adc
mov
js
movsb
mov
mov
lods
mov
mov
inc
xchg
fsubl
jmp
add
rcll
sti
jbe
rcrb
pop
in
dec
add
mulb
mov
dec
xchg
or
sub
orl
ret
jecxz
mov
cmp
and
sbb
push
jl
jb
or
out
insb
or
push
push
sub
popa
push
ds
rcrl
jb
shrb
ljmp
cmp
xchg
addr16
or
add
jp,pt
sub
mov
cmp
xchg
sub
mov
les
loop
popf
mov
shrb
adc
dec
sub
xor
and
adc
mov
jo
sbb
or
lcall
push
and
sbb
cwtl
mov
dec
in
xchg
xchg
and
jmp
ljmp
and
inc
jmp
push
jns
das
or
lcall
test
dec
add
fistl
or
mov
lahf
cmpsl
dec
shrb
push
clc
outsb
sbb
fmuls
sahf
popa
mov
pop
push
ja
inc
sbb
inc
xor
add
add
add
jne
and
jmp
lds
subb
movsl
sub
rorb
or
sahf
mov
enter
push
cmp
out
add
popa
mov
lods
les
adc
and
or
cmp
adc
in
xchg
and
sbb
pop
add
add
mov
sbb
andb
loopne
sub
sub
mov
shlb
jno
push
je
lahf
shlb
cmp
jne
sbb
and
pop
sub
dec
cmc
add
icebp
out
movsb
mov
mov
mov
add
adcb
inc
adcl
lock
add
and
sub
xor
jmp
dec
repnz
adc
push
jg
add
jle
mov
add
ror
adc
inc
iret
mov
pop
jp
out
je
flds
test
in
adc
jmp
adc
sub
xor
adc
dec
or
ror
cmpsb
addb
inc
in
je
sbb
dec
push
in
add
outsl
mov
js
jo
popa
fisttpll
xchg
lods
call
xor
add
pusha
mulb
lret
pop
and
sbb
jg
movsl
jmp
or
jge
je
add
cmpsl
jecxz
push
mov
mov
pusha
dec
pop
push
mulb
shlb
shrl
aaa
inc
aam
dec
push
add
mov
sbb
inc
sbb
and
ds
push
xor
jp
cmc
sbb
sub
adc
inc
mov
mov
inc
xor
fcomps
xchg
je
cwtl
in
aad
lods
movsb
test
cli
insl
xor
pushf
sbbb
pusha
sub
out
mov
adc
or
adc
fsubrl
jge
testb
negl
xor
mov
xor
pop
lcall
sub
add
test
ret
es
les
xor
push
dec
nop
std
inc
pop
add
xchg
popl
add
ret
cwtl
lret
adc
movsl
and
xor
pop
dec
sub
pop
mov
mov
push
inc
sub
roll
pop
dec
mov
popa
mov
and
or
push
inc
mov
das
push
subb
push
dec
ret
inc
subl
fsts
mov
inc
icebp
push
stos
inc
mov
push
cmpsl
mov
call
lahf
jo
fstl
jns
sahf
nop
mov
rclb
dec
sub
imul
or
fcoms
dec
shll
pop
sbb
popa
es
push
mov
ficomps
or
imul
sbb
jnp
and
cmp
inc
fcoml
add
movsb
or
mov
dec
xor
popa
loope
test
test
sub
inc
inc
sub
jg
dec
push
adc
movsb
test
dec
jb
test
and
mov
cs
std
mov
push
dec
xor
sbbl
inc
lahf
test
push
lcall
movsb
add
adc
and
add
mov
adc
jle
adc
cmp
pop
and
jle
ljmp
je
push
mov
inc
jmp
dec
dec
ja
movsb
inc
clc
out
push
jp
pop
inc
rcl
shrl
and
xor
and
sbb
loope
adc
cmp
jbe
push
and
inc
pusha
imul
xorl
test
mov
sbb
les
call
and
inc
xchg
pop
sub
sub
daa
push
add
sbb
ja
dec
cmp
add
jnp
lock
xchg
adc
inc
add
mov
and
sbb
aaa
clc
or
push
lds
pop
inc
loopne
xor
dec
rdmsr
push
sbbl
and
add
jg
xlat
add
mov
mov
inc
cwtl
test
pop
xchg
ret
and
ljmp
push
adc
data16
adc
sbb
push
cld
lea
push
leave
xchg
mov
push
xchg
inc
xor
dec
add
repnz
nop
ds
mov
mov
mov
out
push
rcll
in
cwtl
rcrb
adcl
adc
add
jnp
in
sbb
adc
mov
sub
and
adc
dec
xchg
outsl
cmpb
inc
mov
adc
sub
pusha
adc
dec
testl
sbb
ds
enter
jp
sbb
dec
sbb
add
in
jbe
mov
stc
dec
clc
getsec
inc
repz
dec
repnz
arpl
lock
adc
out
mov
call
nopl
pusha
and
add
aaa
dec
testb
pop
xchg
out
inc
addb
das
mov
mov
std
add
repz
enter
pop
inc
mov
and
loop
je
or
and
popf
sbb
popa
sub
adc
les
sbb
les
adc
icebp
jo
out
adc
out
loope
in
roll
lea
rcrb
cmp
adcl
xchg
pop
inc
ds
aaa
inc
ds
data16
adcb
dec
push
or
cwtl
push
jnp
jge
add
push
mov
js
ljmp
popf
sbb
imul
and
mov
jge
xor
sbb
dec
pop
repnz
dec
out
inc
fs
and
test
xor
hlt
in
inc
push
cmp
cmpb
mov
daa
fs
mov
xlat
mov
jo
test
sbb
dec
icebp
pop
cs
loop
sub
aam
adc
sahf
mov
sub
jle
in
shll
movsb
xchg
cmp
jns
sahf
inc
pusha
fs
in
adc
or
sub
xor
push
hlt
and
pop
xchg
jbe
add
sti
mov
dec
sbb
dec
repnz
fidivs
rcl
out
stc
addb
jnp
and
call
pop
mov
adc
daa
mov
push
pop
and
and
call
pusha
cmp
je
adc
push
push
negb
sub
add
dec
addb
mov
int3
cs
in
dec
les
and
ucomiss
adc
arpl
mov
adc
inc
rolb
rorl
lea
sub
sbb
addb
adc
mov
push
lock
pusha
sbb
xchg
out
popa
jbe
in
test
jmp
sub
mov
xor
sub
jb
out
sub
dec
gs
add
nop
and
jp
in
jb
call
cwtl
xor
sub
add
adc
dec
test
sar
dec
cltd
mov
and
add
inc
sub
hlt
push
in
sub
test
xor
pop
push
mov
or
cmpsl
jns
iret
clc
testl
mov
add
sbb
pusha
fistps
in
xlat
dec
ret
adc
mov
add
dec
or
adc
mov
ret
imul
jno
add
lret
mov
xchg
adc
aaa
lock
clc
addb
add
dec
push
leave
add
jge
loope
in
fadd
inc
xchg
xor
or
ss
loope
mov
imul
dec
and
and
std
cmp
adc
mov
xor
jae
call
movsl
popa
subl
push
inc
dec
and
fcompp
cli
lret
sbb
jl
repnz
xor
in
push
pop
cli
push
mov
inc
xorb
or
pop
add
fsubs
cmp
sbb
sbb
mov
sbb
or
dec
cli
fidivl
sub
repnz
test
loopne
pop
out
xor
adc
shl
cwtl
lods
hlt
or
xor
jp
add
push
in
inc
and
add
push
pop
push
js
adc
nop
daa
adc
and
pop
pop
shlb
sub
das
push
mov
stos
add
dec
sbb
mov
dec
add
vprotw
es
daa
xor
icebp
gs
inc
or
into
jb
dec
add
mov
cmp
int
and
jge
push
dec
lods
aam
mov
cld
testl
data16
mov
add
not
ds
cmp
adc
add
pop
pop
lret
jae
int3
ret
xor
jno
sub
je
pop
mov
add
and
es
mov
push
sbb
pop
lret
jle
push
sti
cltd
jo
add
outsl
outsb
jp
cwtl
cmp
add
xor
mov
cwtl
cmpsl
inc
mov
or
loop
shrb
pop
icebp
mov
int3
cwtl
and
cmp
test
flds
mov
test
add
insl
adc
lock
and
pop
mov
test
lret
xor
and
faddl
into
or
or
cmpb
pop
sub
sbb
add
incb
add
or
add
test
lods
cmpsl
push
dec
inc
sarl
cmpsb
xchg
and
cs
cmp
sub
cmp
jl
push
add
dec
jo
call
cltd
xchg
sbb
mov
andb
imul
in
inc
xchg
xor
push
lods
mov
push
sub
cmp
mov
mov
xor
mov
add
add
push
sarb
jnp,pt
lods
fildl
movsb
sub
mov
inc
call
out
sub
mov
shll
test
cmp
rorb
xchg
mov
mov
stos
xor
pop
and
js
inc
cmp
cmpb
adc
popa
mov
sbb
ret
insl
xchg
inc
les
pop
inc
inc
ret
inc
push
outsl
pop
jo
mov
sub
lcall
sbb
push
inc
cmp
mov
or
and
or
sbb
dec
and
xchg
add
aad
iret
jecxz
or
push
cwtl
sbb
loopne
pop
cli
xchg
xchg
inc
add
int
sahf
js
nop
pop
or
add
aas
fsubrs
mov
addl
imul
adc
mov
add
push
stc
loopne
xchg
sub
pusha
movsb
mov
xorl
sbb
aaa
jle
and
push
daa
clc
sbbl
psllw
cmc
push
gs
fidivs
add
add
cmp
stc
cmpl
loopne
and
int3
sbb
int
test
mov
rcrb
mov
xchg
jo
jg
les
fldcw
add
rcr
cmp
imul
dec
cli
sub
and
pop
mov
xchg
push
sti
cli
popa
push
lock
scas
out
nop
dec
js
xor
mov
rorb
add
cltd
mov
sub
pop
je
icebp
shrl
leave
adc
dec
dec
jo
cmp
sbb
lock
adc
mov
adc
and
push
mov
es
adcb
dec
add
add
add
xlat
cli
add
cmp
sub
lea
mov
mov
lcall
or
pop
outsb
xor
inc
mov
stos
shll
add
xor
inc
jno
sti
notl
cmp
mov
push
insl
add
scas
cli
sub
xchg
and
jl
test
sbb
add
test
lahf
jnp
pop
cmc
pop
scas
mov
dec
sub
icebp
addb
call
push
xchg
test
hlt
lods
mov
xor
dec
aam
xchg
or
movl
test
add
mov
popf
bound
cmpb
adc
loope
sbb
mov
push
add
stc
push
fwait
mov
aam
inc
cld
jno,pn
and
pop
inc
pop
add
in
int
sahf
or
rorb
movsb
pop
dec
jbe
cmp
inc
stc
or
mov
mov
out
lods
xor
pop
adc
jnp
add
iret
push
cmp
mov
into
stos
std
xor
shl
loop
cmp
sub
mul
push
or
insb
xchg
mov
decl
testl
shl
xor
add
sbb
pusha
mov
subl
pop
movsb
mov
cwtl
xor
mov
mov
xchg
in
jle
xlat
addl
ja
mov
icebp
dec
shlb
fstp
pop
dec
push
orl
and
shlb
jns
xor
inc
mov
cmpsb
test
scas
sbb
xorl
fnstenv
inc
sbb
mov
sbb
fdivr
jb
sarl
les
icebp
add
dec
or
arpl
push
dec
or
icebp
adc
lods
cmp
mov
enter
inc
mov
jnp
imull
fisubl
xlat
dec
rcl
ret
xchg
add
adc
fisttpll
mov
es
les
out
ret
or
in
test
cmp
pop
mov
rol
ret
iretw
push
mov
push
pop
sbbl
or
adc
and
fnstcw
loop,pt
and
or
stos
xor
push
and
mov
idivl
shlb
and
mov
jl
aam
fldl
arpl
leave
cmp
mov
add
and
add
cwtl
nop
clc
sti
out
movsb
mov
shll
dec
lahf
cmpsb
xor
pop
dec
sarl
jae
jne
cmpsl
into
sub
dec
insb
or
add
mov
jno
loope
add
mov
mull
stos
fwait
dec
adc
xchg
or
or
sub
std
mov
and
xor
movsb
sub
mov
inc
or
add
in
pop
sub
sahf
aam
daa
or
inc
mov
add
xor
out
and
and
pushf
xchg
inc
cmp
fcoms
adc
and
mov
add
lahf
std
sbb
mul
add
cwtl
cmp
adc
adc
imul
jne
ss
adc
cmp
add
addr16
andl
mov
xor
cltd
add
int3
inc
cmc
rorb
test
das
jno
pop
cmp
jnp
and
pop
cmp
popf
test
inc
add
andl
in
in
pusha
lret
lock
dec
jl
or
jle
test
dec
inc
xor
cvtps2pd
imull
lock
mov
inc
out
add
dec
or
inc
bound
sub
cmp
addr16
jbe
adc
add
sub
outsl
xor
cmp
pop
xchg
out
jp
add
cmpsl
adcl
sbb
aaa
sbb
adc
push
add
mov
shll
push
mov
rclb
call
sbb
jnp
jnp
repnz
mov
bound
push
or
icebp
mov
dec
sbb
xchg
inc
jle
inc
or
test
iret
pop
pop
mov
insb
sub
rcrl
test
pop
call
pushaw
or
inc
inc
sbb
cs
cmp
fdivrl
test
bound
movsl
xor
mov
xlat
mov
leave
sbb
push
fcompl
fldenv
xor
push
cmp
aaa
imul
sbb
xchg
jne
add
popa
adc
or
aad
adc
je
ret
pop
push
shlb
add
or
daa
push
test
or
pusha
add
js
xchg
cmp
aam
ret
rorl
mov
int3
rcl
push
adc
enter
popa
or
and
inc
inc
push
mov
pop
push
sahf
add
sbb
pushl
xor
jl
adc
cmp
mov
out
mov
lods
pop
cmp
je
dec
xlat
mov
enter
cs
adc
loop
fcoms
or
std
lock
popf
mulb
jg
pop
aas
testl
add
fmulp
jae
inc
std
les
jmp
ret
sbb
aas
add
pop
into
in
in
call
addb
sti
ret
int3
repz
dec
shlb
sub
leave
push
fidivl
pusha
lea
sbb
inc
add
mov
filds
mov
loopne
xchg
ljmp
adc
and
call
clts
inc
sbb
mov
push
dec
mov
mov
add
push
cmpb
test
aas
addb
xchg
add
mov
mov
push
into
inc
cmp
and
lea
jb
clc
mov
loopne
ljmp
sbb
pushf
or
add
outsb
repz
clc
in
add
adc
subb
mov
push
pop
or
test
cmp
in
push
push
call
mov
sbb
fsubrs
push
pushl
cmp
push
adc
mov
jmp
mov
mov
aaa
sbb
jnp
shlb
jb
cmp
arpl
mov
inc
mov
dec
jmp
sbb
mov
nop
and
or
addb
add
mov
push
and
in
xchg
jge
lret
adc
and
ret
xor
jmp
enter
std
fcomip
xor
rcrl
push
inc
cmp
pop
pop
jns
dec
pop
addb
push
push
mov
xchg
mov
xor
dec
rorl
sti
xor
push
mov
mov
sub
or
add
sbb
inc
push
ret
cmp
pop
sub
sub
add
jne
add
ret
enter
inc
sbb
add
lods
jle
subb
imul
mov
add
jmp
jmp
xchg
inc
dec
mov
jg
push
pop
sbb
lock
push
mov
xor
test
cmc
add
push
sbb
ret
and
inc
push
ret
int3
xor
test
mov
rolb
and
push
loop
push
xchg
adc
fldl
pop
ret
enter
inc
sbb
push
ret
mov
add
lea
lret
jnp
pusha
adc
or
xor
loop
aad
std
outsl
insb
and
add
pop
int
sbb
in
orb
mov
test
adc
test
mov
pop
call
rolb
sbb
xchg
add
jne
sti
inc
add
inc
mov
inc
xchg
lret
mov
adc
gs
fcompl
in
ud0
scas
inc
jmp
mov
push
pop
getsec
mov
inc
ljmp
or
sbb
pop
xchg
dec
add
repz
fstpl
add
iret
rorl
xor
cltd
cmpsl
or
jnp
mov
fsubp
loopne
xchg
rcll
scas
xor
pusha
add
cmpb
push
roll
gs
jle
xchg
mov
mov
and
jno
push
cmp
xchg
inc
push
or
and
fstpt
arpl
push
or
popf
xchg
es
mov
jge
mov
test
mov
adc
mov
test
mov
push
sbb
xor
sahf
mov
adc
pop
xor
xchg
test
fstps
jmp
or
sbb
jne
les
lods
and
push
sub
mov
and
push
lea
adc
mov
and
loop
mov
push
xor
in
dec
dec
shl
inc
push
ret
pop
hlt
mov
pop
cmpb
orb
push
fldenv
cli
add
dec
repz
inc
sub
pop
and
aas
and
mov
pop
ret
push
mov
inc
or
mov
add
scas
sub
xchg
test
jae
xchg
adc
and
add
mov
pop
push
mov
mov
sub
and
push
hlt
daa
pop
cs
js
mov
jmp
add
lds
or
inc
sbb
aam
add
adc
loop
add
jae
imul
pop
push
ds
fsubs
sbb
push
jne
inc
mov
orl
adc
and
xchg
mov
lcall
subw
or
push
jno
xor
or
jae
movsl
inc
sbb
adc
mov
add
push
adc
adc
and
or
mov
sbb
mov
test
cmp
inc
mov
add
int3
cli
jg
or
mov
xor
inc
pop
cs
mov
sbb
add
das
cli
idivl
xchg
outsb
mov
popa
or
mov
insb
or
or
add
sbb
test
repnz
lods
fildll
push
mov
mov
add
cld
lret
mov
push
cmp
and
add
push
lds
jns
push
in
loope
push
inc
add
pop
pop
or
adcl
or
sbb
add
xchg
loope
xor
sub
mov
movl
fwait
push
or
fsubrs
adc
adc
xchg
movsl
insb
add
cmp
and
roll
aad
jb
add
sbb
xchg
jo
dec
dec
mov
xor
sub
ljmp
lret
cmc
aas
add
mov
stc
movsb
inc
xorb
sbb
outsl
pop
js
pop
int
push
sub
jg
jae
aas
dec
add
into
adcb
popa
nop
pop
es
mov
push
sub
in
pusha
or
dec
push
fdivrl
icebp
cltd
rcrl
pop
adc
and
mov
mov
insl
jno
add
adc
mov
add
imul
jno
shlb
pop
mov
xchg
data16
in
mov
outsl
dec
push
das
push
and
pop
pop
stos
movsb
cmc
imul
test
push
xlat
movsb
jg
into
xor
cmp
push
into
mov
adc
jns
mov
pop
mull
mov
sub
mov
adc
fs
sbb
popl
xor
mov
jmp
ret
std
jmp
lret
or
test
addl
pop
inc
adc
and
stc
jl
cmp
mov
xchg
mov
pop
clc
pop
mov
cld
aam
movb
dec
fcoml
mov
and
push
xor
xor
push
loopne
dec
leave
mov
shlb
xchg
push
and
add
in
outsb
hlt
mov
sub
or
les
sub
jo
sbb
pop
bnd
adcl
adc
adc
add
nop
push
adc
test
insl
xchg
jecxz
adc
pusha
imul
pusha
loope
add
pop
mov
lds
loop
dec
test
lahf
cmp
in
pusha
add
test
in
popa
aam
xor
sub
ret
roll
pop
mov
cmp
loopne
sub
xor
add
adc
sbb
mov
and
add
push
mov
dec
stc
xchg
xchg
enter
jmp
jno
xor
mov
in
test
dec
push
sbb
loop
fs
dec
push
hlt
rorb
cwtl
xchg
add
xor
and
sbb
push
test
sub
mov
adc
jmp
mov
repnz
pop
mov
inc
xor
mov
mov
lcall
pop
movsl
leave
mov
add
push
jecxz
rcl
push
es
sbb
push
sub
and
mov
xor
scas
adcb
les
outsl
mov
mov
push
jno
icebp
rcrl
jp
and
xor
out
mov
and
add
cmp
test
sub
add
int
xchg
fldenv
mov
pop
xor
jmp
test
rcll
mov
jb
popa
push
popa
les
sahf
mov
mov
sti
mov
cltd
cmp
and
add
sbb
or
push
add
sbb
fsubrs
ret
xchg
inc
sub
loop
or
out
mov
cmp
sahf
xlat
or
push
adc
ffreep
or
pop
arpl
add
lods
or
cltd
std
xor
repz
movswl
or
and
sbb
mov
xor
psubsb
mov
adc
lds
xor
cwtl
scas
mov
push
pusha
aas
pop
testb
jmp
inc
out
add
mul
aas
xor
out
xor
cltd
ret
fs
dec
xor
ret
mov
push
add
jmp
sbb
pusha
test
xchg
add
pop
lahf
pusha
adc
das
push
push
iret
dec
test
fsubrs
and
es
cmp
xchg
push
dec
push
sub
pop
inc
or
mov
sbb
cmc
jge
stc
ret
in
xchg
in
pop
sti
and
pop
icebp
repnz
sahf
dec
in
inc
add
mov
pop
jmp
nop
push
divl
insl
dec
sub
pop
dec
and
aam
in
cmp
mov
sahf
inc
mov
adc
xor
and
add
jne
push
lds
aas
add
jg
and
xchg
push
addb
add
add
or
sbb
dec
pop
sub
or
jbe
sbb
xor
and
or
xor
mov
inc
imul
add
pop
xor
inc
add
cmp
cmpsb
or
dec
push
stc
subb
insl
push
les
loop
xor
mov
add
sbb
mov
or
test
mov
add
cmp
adc
mov
add
sbb
and
inc
or
push
jb
fiadds
push
scas
inc
or
shlb
sub
or
pop
fistps
xor
push
add
mov
or
and
add
and
decb
push
add
inc
mov
inc
mov
cmp
sub
je
adc
mov
enter
dec
je
or
and
int3
sub
inc
dec
push
add
mov
mov
pop
shlb
movsb
ss
jbe
xchg
les
adc
popl
cmp
das
or
add
sahf
cmp
clc
sbb
ror
pop
pop
push
mov
xchg
jg
mov
lea
sub
mov
sub
aas
sbb
or
or
lret
pop
add
xchg
test
dec
adc
test
fmul
shrl
out
xchg
pop
fs
inc
mov
pop
ja
mov
inc
adc
mov
cmpl
and
dec
jp
add
scas
ss
scas
call
enter
sub
std
sub
pop
pop
loopne
push
roll
lods
rcl
std
adc
js
add
adc
fs
add
das
add
movsl
or
xor
push
adc
mov
mov
sub
sub
add
sbb
and
dec
cld
adcl
jb
adc
add
rol
mov
test
rclb
out
push
or
pop
pop
mov
add
fisubl
dec
and
or
cwtl
dec
dec
jbe
fstl
test
inc
mov
loopne
xchg
or
aas
jo
pop
add
int3
jne
push
mov
and
mov
adc
std
add
cmovnp
adc
popa
pop
or
movsl
aaa
cwtl
xor
scas
add
or
cwtl
push
mov
jns
mov
int3
les
fs
pop
push
rol
mov
add
or
es
scas
jo
adc
sbb
add
add
jae
hlt
xchg
xchg
bnd
sub
jl
adc
or
add
iret
fmuls
lcall
mov
aad
xor
subl
push
cmp
mov
dec
inc
nop
or
mov
pushf
jb
mov
xor
cmp
dec
xor
mov
sub
dec
inc
push
and
dec
pop
lea
ds
add
xor
push
jmp
decb
pop
mov
adc
std
push
lods
xchg
xchg
push
sbb
and
xchg
daa
jl
fdiv
fcoms
xchg
sbb
and
rorb
mov
mov
dec
mov
mov
xchg
leave
pop
adc
xor
mov
or
or
dec
inc
mov
lods
mov
dec
popa
adc
adc
or
out
add
outsl
data16
pop
les
adc
inc
mov
dec
test
nop
mov
test
sbb
mov
fstl
xchg
jns
sbbb
test
sub
mov
push
pusha
or
mov
popa
pop
pop
mov
add
add
das
cmp
pop
jp
xchg
mov
or
enter
dec
dec
xor
insl
les
pusha
mov
push
mov
pop
add
and
push
add
sub
es
movzwl
add
push
movsb
xlat
add
push
push
mov
pusha
pop
daa
adc
jecxz
test
xchg
pop
xchg
xchg
add
outsb
loop
repnz
into
sbb
jne
ljmp
leave
add
rcrl
jmp
mov
and
jbe
inc
movsb
dec
repnz
popa
or
loopne
enter
adc
loope
pop
dec
pop
pop
mov
push
sub
push
push
and
ds
sub
adc
or
sbb
add
inc
mov
jns
movsl
lds
mov
jmp
inc
mov
jmp
popa
add
mov
mov
push
xchg
or
rcrl
ret
scas
xchg
lock
jmp
and
gs
push
add
dec
scas
lea
inc
icebp
adc
and
or
adc
lret
sbb
inc
nop
adc
xor
add
pusha
lcall
mov
dec
sbb
imul
clc
subw
test
repz
dec
sarb
xchg
rolb
sub
and
dec
mov
mov
add
out
js
mov
add
repz
xor
mov
popa
mov
add
mov
jae
repnz
nop
fnstcw
lcall
pop
test
inc
aam
hlt
dec
push
mov
xor
pusha
cmpsl
bound
fadds
sub
jbe
cmpl
push
and
pop
and
pop
pop
dec
call
leave
xor
insb
je
adc
add
xor
push
cmpsb
sbb
outsb
call
mov
push
enter
pusha
mov
cmc
popa
mov
jmp
loope
clc
add
mov
iret
push
adc
xor
cmc
loopne
movb
movsl
sbb
add
mov
push
sub
mov
into
popf
aaa
fiadds
adc
cmp
nop
sbb
push
mov
fcomi
pop
cwtl
std
or
insl
push
mov
cmpsl
mov
test
and
out
test
dec
mov
push
fisttpl
stc
jle
inc
add
pop
or
xchg
adc
test
xor
pop
add
mov
data16
ljmp
xor
rclb
mov
testb
mov
push
sbb
or
pusha
inc
push
pop
jmp
test
and
mov
jp
sbb
gs
add
cmp
xchg
sub
xchg
test
dec
add
dec
scas
sub
add
cld
lea
pop
repnz
cwtl
mov
out
mov
je
or
cwtl
and
je
sbb
push
pusha
das
stos
mov
or
and
or
icebp
or
pop
pop
pop
sub
movsb
inc
das
mov
sbb
ficoms
or
cmpsl
add
xchg
sti
insb
push
rorl
adc
fnstcw
add
std
sub
xlat
sbb
push
add
in
jnp
add
xor
movsb
ds
ds
pop
add
icebp
add
sbb
push
bound
shr
cmp
rclb
jmp
jg
adc
lcall
hlt
and
inc
fstl
cmpsb
sbb
add
or
dec
mov
jg
xchg
das
mov
fs
add
push
and
and
jmp
les
arpl
xor
push
adc
dec
jle
clc
cmp
jae
mov
jmp
addb
push
xchg
loop
xor
sub
pop
mov
xor
aas
out
mov
ret
xchg
imul
cmc
test
jne
adc
fdivp
lea
cmp
push
xor
pop
add
and
roll
jg
mov
and
add
fcomi
ret
add
add
call
push
mov
push
ret
es
sahf
loopne
lods
sbb
push
bound
lock
push
dec
push
out
insl
shrb
push
push
push
ret
shlb
inc
push
fcmovnu
cli
in
jo
dec
push
andb
mov
add
in
mov
push
test
movl
inc
or
sub
es
adc
push
test
popf
daa
push
add
xor
mov
push
pop
or
inc
push
xchg
xor
mov
or
sub
data16
or
or
hlt
gs
cmp
and
adc
std
lea
ret
mov
add
cld
push
add
call
dec
fiadds
sar
je
pushl
inc
pop
pusha
add
and
pop
mov
call
adc
lcall
ja
cwtl
dec
or
test
push
pop
cmc
add
sbbl
in
ret
shrb
es
es
adc
jno
enter
and
inc
mov
addr16
bound
xor
fnstsw
adc
xor
mov
push
jns
rclb
or
push
adc
push
imul
not
loopne
xor
daa
popf
test
dec
inc
pop
adc
fs
inc
sbb
xchg
adc
add
test
inc
mov
nop
xlat
dec
xchg
addb
xor
fstps
mov
popf
and
dec
shr
cmp
lods
mov
adc
dec
sahf
sub
pusha
xor
mov
pop
jg
dec
mov
dec
and
movl
mov
or
mov
jle
sub
push
sbbl
test
cwtl
pop
dec
mov
cmp
hlt
ffree
popf
mov
adc
stc
call
lods
fidivl
push
stos
lret
add
mov
xlat
or
add
mov
or
push
ljmp
sti
push
or
push
or
xchg
fwait
imul
sbb
inc
push
adc
dec
leave
mov
fisttps
mov
pushf
xchg
rclb
push
mov
lcall
inc
imul
sub
mov
jl
shlb
xchg
dec
sub
push
loop
repnz
jae
add
mov
lea
jns
jne
push
and
int3
adc
mov
push
test
push
cmp
sbb
mov
push
xlat
inc
test
mov
pusha
xchg
addl
mov
jg
push
mov
push
jmp
and
pop
fwait
xchg
pushf
andl
add
adc
test
dec
popa
sbb
xor
movl
test
mov
xor
mov
and
inc
js
inc
and
push
pop
shlb
xlat
xchg
out
mov
sub
addb
cltd
adc
xor
stos
add
push
jl
fsubl
mov
pusha
push
pop
mov
and
mov
sub
add
mov
lea
imul
pop
dec
adc
in
lret
ret
out
xor
movsl
fucomi
push
fadds
and
inc
les
pop
loop
das
sti
push
jnp
fstl
mov
xchg
daa
xor
xchg
and
into
sbb
adc
fldl
cmovg
xchg
push
outsl
add
sbb
xchg
hlt
movsl
pop
rorb
std
push
xchg
cmp
add
ja
push
adc
rorl
sarb
call
hlt
adc
push
xor
sarb
aad
add
data16
xchg
xor
and
adc
ja
arpl
cwtl
pusha
clc
push
xor
movsl
popa
gs
test
add
and
pop
add
jnp
daa
loopne
mov
push
adc
popf
cmp
push
inc
rclb
cmpsl
jmp
jns
andl
add
mov
fs
jge
cmp
and
testb
lea
es
or
and
fadds
sar
lods
mov
pop
dec
mov
push
xor
inc
adc
adc
decb
or
sbbb
adc
test
cmpsl
call
xor
mov
popa
incb
addb
mov
jge
sbb
inc
js
gs
imul
test
popa
adc
cli
push
insb
gs
jae
sub
arpl
jns
jmp
push
push
pushaw
cmc
jb
adc
lahf
insb
pop
jo
mov
xor
sbb
sbb
fsubs
jae
out
push
ds
jns
jne
or
sub
xorb
push
sbb
in
jmp
imul
jo
test
insb
imul
sub
and
push
fbld
and
call
movsb
pcmpgtb
push
push
mov
push
jb
call
cmp
repz
cmp
repnz
mov
or
dec
adc
test
sub
xor
adc
das
mov
mov
ss
daa
and
dec
pop
in
push
push
pop
cmp
gs
mov
and
adc
adc
push
and
leave
imul
ret
xor
xor
xor
xor
inc
pop
mov
mov
call
addb
rcrb
mov
popf
push
pusha
mov
inc
insl
pop
mov
xor
sub
aam
cmpl
or
jge
mov
xchg
mov
push
and
inc
push
and
pop
and
inc
pop
and
add
or
or
or
enter
xor
imul
testl
push
xchg
push
push
sub
cmp
pop
push
inc
pop
cmp
inc
and
sbb
add
sbb
add
repz
jno
mov
loop
pop
add
add
xor
dec
outsl
pusha
adc
xor
and
ret
jmp
arpl
popl
sbb
jne
mov
call
cmp
xchg
mov
pop
and
iret
outsl
push
data16
enter
icebp
xchg
pop
sub
jne
loopne
mov
or
nop
pop
andb
jecxz
add
enter
incl
or
or
sbb
cmp
sbbb
sbb
mov
mov
add
push
sub
dec
mov
and
mov
lret
and
ret
test
dec
jbe
jbe
das
jns
cwtl
iret
mov
adc
lds
sbb
xchg
fistps
and
xchg
mov
xchg
ds
aas
add
mov
mov
sub
enter
and
lret
stos
or
add
or
and
in
and
fstl
adcb
mov
push
out
or
xor
jmp
aas
or
mov
xor
fucomi
adc
add
rcl
add
aaa
mov
inc
dec
or
ret
pop
pop
pop
mov
jmp
sub
out
fsubrs
aam
ja
dec
and
test
and
fs
pop
mov
jmp
xchg
pop
repz
fwait
mov
lods
inc
push
nop
mov
jmp
movsb
jbe
jb
dec
jp
mov
test
xor
ror
add
testl
add
gs
sub
sub
push
push
push
or
sub
dec
or
addr16
mov
pusha
add
xor
add
fadd
ret
or
sbb
pop
pop
mov
cwtl
or
bound
add
lahf
push
sub
inc
sbb
push
mov
xor
pusha
rolb
mov
adc
jl
add
or
sbb
jmp
mov
insb
fwait
clc
push
xchg
add
pusha
cmc
cmpsl
sti
jp
adc
adc
xchg
rolb
jmp
mov
mov
cmp
imul
or
mull
and
xor
stos
and
pmaddwd
or
movl
int
rcrb
xchg
add
ret
imul
or
mov
jmp
mov
mov
add
sbb
test
add
hlt
adc
cltd
push
and
mov
push
adc
mov
movsl
fsubrl
inc
pop
dec
adc
mov
or
cmp
xor
pop
pop
or
and
push
or
add
cmp
and
push
inc
and
pusha
push
aas
sub
pop
jl
outsb
inc
mull
add
inc
movsb
sti
das
add
mov
cmpsb
js
and
mov
push
mov
add
int
jmp
dec
rol
or
xor
mov
sub
push
add
repnz
popa
cmpsb
jp
sbbb
mov
adc
mov
add
rolb
pop
pop
mov
js
xor
ja
popa
cmp
sbb
pop
push
cmc
and
cmpsb
add
fcmovu
pop
xor
ret
test
test
dec
test
mov
scas
lock
add
sbb
mov
fistl
and
sbb
pop
jp
icebp
lahf
add
cmp
mov
aas
pusha
push
xor
pop
popa
and
pushl
repz
clc
push
xchg
icebp
adc
repz
movzbl
dec
add
add
xor
mov
add
stc
jne
xchg
dec
mov
or
xchg
popa
add
ss
add
out
movsb
sbb
out
add
mov
ret
jmp
push
or
mov
icebp
push
rolb
sbb
inc
jbe
mov
aas
enter
push
mov
fmuls
gs
lcall
push
je
mov
cld
mov
nop
ror
add
add
sbb
pusha
push
push
repz
fcomp
mov
pop
aas
popa
dec
push
jo
mov
mov
sub
add
es
rorb
test
add
pop
je
mov
xchg
pusha
outsl
push
rcll
xchg
jge
insb
dec
rcrb
mov
inc
popa
xor
lahf
and
mov
mov
xor
add
add
cmpsl
mov
ljmp
add
repnz
add
pop
push
mov
addl
test
inc
idiv
jne
call
add
shll
adc
sti
add
lock
ljmp
sub
jb
jl
jbe
jae
adc
inc
add
adc
jp
or
jnp
inc
mov
insb
push
mov
hlt
call
pop
shrl
movsb
mov
dec
cs
call
push
jb
mov
mov
in
jne
repnz
das
aas
add
push
xchg
nop
lods
mov
lock
mov
dec
cmp
scas
loope
negl
addb
repz
out
iret
mov
sbb
sub
push
shr
jmp
or
fnsave
pcmpeqw
push
outsb
xlat
adc
sub
xor
aad
loope
lods
add
movsl
jae
out
repnz
fiadds
push
xor
hlt
call
in
repnz
add
and
xchg
push
xor
enter
rclb
or
mov
icebp
mov
and
push
repz
dec
jge
mov
lret
jo
stc
out
push
jne
mov
sbb
stc
repnz
dec
insl
add
mov
rolb
add
test
cli
push
xchg
add
pop
mov
add
jnp
inc
mov
add
mov
mov
enter
cwtl
pop
leave
sahf
fdivl
xor
subl
roll
mov
popf
add
lock
popa
pop
inc
mov
cmp
mov
pop
sub
cmpsb
mov
cltd
pop
or
jno
ja
xchg
lock
cmc
and
or
movsl
cmp
repnz
cmp
push
jne
jecxz
inc
add
pop
push
into
rol
sub
pop
test
pop
orl
xor
push
xor
pop
insb
xor
add
inc
inc
dec
mov
push
mov
loop
cwtl
xor
ret
add
xchg
shr
add
stc
leave
in
xlat
add
lods
xchg
test
test
add
iret
dec
mov
sbb
jge
jp
or
add
dec
fndisi(8087
add
jb
cli
fwait
sub
in
xchg
xchg
lock
cld
inc
dec
imul
cmpsl
lods
int
or
jo
xchg
mov
mov
pop
xchg
insb
mov
and
mov
mov
es
pop
mov
push
hlt
maskmovq
testl
and
aas
and
dec
cmp
dec
mov
jle
xor
rcll
add
pusha
xchg
pop
out
add
pop
fs
mov
out
iret
add
xchg
mov
add
out
clc
xor
sbb
inc
jo
cmpb
cmp
ret
mov
dec
xchg
lods
inc
add
test
js
in
sarb
dec
lea
sub
das
and
inc
dec
adc
jmp
lcall
cmp
sbbl
lods
aam
pop
js
ds
lds
gs
add
adc
daa
es
xorl
rcll
add
cmp
push
inc
jne
out
adc
and
add
mov
int3
xor
sti
sbb
and
call
pop
sub
add
adc
adc
mov
jle
repz
js
pop
loopne
dec
dec
push
and
mov
push
add
bound
enter
daa
dec
fistpl
dec
subb
and
add
arpl
xor
cbtw
mov
xchg
rcll
jmp
daa
adc
push
sbb
pop
mov
sahf
rorb
pop
loop
cmpl
mov
in
aam
imul
and
push
ret
jbe
sbb
push
addb
push
mov
pusha
addb
push
in
xor
shlb
mov
stos
add
lcall
dec
jo
mov
add
jb
negl
or
ja
dec
scas
pop
push
iret
loopne
out
jno
mov
pop
repnz
add
clc
jae
loopne
popa
push
sub
mov
cmp
fs
aam
push
xor
fwait
call
add
dec
xchg
mov
hlt
clc
add
adc
jns
mov
sbb
xor
bound
add
sahf
adc
add
loopne
mov
adc
or
vmread
ja
or
sbb
js
add
push
xchg
add
and
mov
and
jns
or
sbb
les
sti
add
movl
sub
add
jno
iret
push
inc
dec
dec
xor
jns
ror
cwtl
pop
adc
xor
cmp
pop
ficoms
cmp
ss
jno
push
test
dec
andl
sahf
in
add
es
xchg
aas
enter
pop
shl
shrl
and
std
js
push
nop
mov
ds
sbb
loope
ljmp
cmpsl
xor
cli
in
pusha
cmpsb
mov
mov
sbb
add
ss
and
push
outsb
mov
in
rol
or
inc
add
dec
scas
incl
aad
and
xchg
test
out
out
mov
lret
sbbb
test
jae
xchg
out
cwtl
add
ficoms
inc
inc
add
int3
adc
test
jbe
jmp
shrb
popf
cmp
aam
add
sub
pusha
std
mov
cmp
cli
pushf
push
jle
pushf
add
stos
jmp
fisttpl
sub
adc
jo
push
cmc
mov
add
loope
and
add
mov
leave
mov
push
ljmp
dec
mov
jecxz
pop
pop
scas
loopne
lds
and
mov
dec
pop
dec
sub
add
adc
aaa
sbb
and
lahf
pop
jno
in
lea
imul
lods
cli
adc
stos
dec
mov
xor
iret
mov
sub
fucomi
mov
xchg
pop
leave
outsb
and
pop
jecxz
int
fisubrl
sub
test
mov
mov
jecxz
pusha
pop
decl
flds
push
add
mov
in
adc
daa
inc
add
or
es
add
popf
or
pop
mov
nop
sbbb
stc
clc
dec
and
movsl
or
roll
mov
shl
test
stc
imull
adc
add
mov
outsl
inc
and
gs
xor
pop
cs
cwtl
mov
das
fists
inc
add
aas
dec
lahf
add
mov
add
xor
int3
daa
push
add
add
enter
jg
bound
cmp
add
jns
and
inc
cmp
mov
cwtl
add
cmp
mov
das
push
xchg
test
pop
xor
xor
nop
adc
push
pop
jno
cmp
call
inc
repz
rorb
insb
xor
and
add
lcall
mov
test
mov
cmp
movsl
mov
cmp
aam
sbb
xor
adc
dec
cmp
loope
stc
add
xlat
and
cwtl
rclb
mov
cld
sub
pop
repz
dec
fwait
outsl
cmp
push
enter
rolb
popf
adc
mov
mov
lahf
and
ja
jge
add
pop
cmpsl
aas
add
pop
xor
or
push
xchg
xchg
add
mov
test
mov
loopne
xor
mov
add
sbb
sub
add
inc
aas
int
adc
mov
rolb
inc
data16
fneni(8087
mov
dec
icebp
pop
jno
in
and
mov
mov
fdivrl
or
stc
ret
adc
movsb
add
push
orl
cmp
mov
nop
faddl
add
add
dec
or
and
pop
testb
mov
pushf
dec
cmpxchg
jmp
mov
xor
pop
push
mov
ror
sub
jp
xchg
add
jb
inc
cltd
lret
enter
popf
data16
fisttpl
in
out
jns
add
jnp
push
pop
nop
into
div
add
lahf
std
mov
jne
out
jmp
dec
in
add
push
push
repz
push
adc
cmp
in
sub
push
jo
adc
jo
or
jp
sub
dec
pop
mov
subb
lahf
mov
add
hlt
int
pop
sub
fldl
ret
mov
das
clc
inc
add
jmp
adc
sbb
mov
jp
jo
dec
scas
outsl
lock
fiaddl
and
cmp
mov
mov
loopne
push
jns
insb
sub
filds
xchg
lret
hlt
and
add
out
or
jbe
mov
aad
adc
std
and
jb
add
fimull
gs
aas
jbe
int
fldt
jns
idivb
mov
sbb
jo
or
or
subl
aaa
add
ficoml
enter
cwtl
nop
push
pop
cmpl
loope
cli
adc
add
or
fcmovnu
lret
add
pop
mov
push
cmc
aam
decb
add
xchg
and
pop
push
int
and
pop
push
jmp
pop
xchg
fs
in
hlt
inc
sbb
mov
push
inc
adc
fdivp
loop
mov
or
xchg
add
and
out
fcmovnu
add
jae
add
rolb
cmp
mov
cmc
jo
or
adc
jo
push
jo
fwait
add
xor
mov
icebp
mov
jecxz
nop
xorl
jo
out
addb
cmpsl
ds
mov
stos
add
mov
out
pop
idivl
scas
mov
in
mov
aaa
loopne
mov
jns
outsb
stos
add
loop
push
hlt
fwait
add
loopne
pop
in
cltd
jp
add
pop
notl
inc
jb
frstor
inc
imul
es
repnz
test
push
or
adc
add
mov
and
pop
cs
inc
push
aaa
lds
sub
cmp
or
pop
sbb
int3
dec
incl
mov
movsb
icebp
mov
cmp
shl
or
cs
in
and
insb
insl
cmp
call
imul
or
cwtl
in
fidivs
out
inc
pop
mov
out
nop
stos
lea
or
add
roll
adc
lea
add
repnz
insb
or
inc
mov
xchg
ret
out
bound
inc
add
addl
insb
incb
xor
bound
push
clc
cltd
sub
das
pop
sti
pusha
stos
push
fnop
dec
add
cmp
test
rolb
mov
adc
sub
sbb
pop
js
inc
add
jns
push
lock
jp
popf
xchg
pop
add
mull
mov
pop
cltd
cmpsl
inc
xchg
add
sbb
aas
xor
or
stos
jp
loope
dec
sub
std
push
add
push
add
dec
mov
add
sub
inc
int3
mov
add
mov
js
add
fisubs
clc
or
cmc
stc
enter
jge
inc
xor
lods
add
jl
lret
iret
es
es
mov
xchg
mov
rclb
xchg
xchg
test
lahf
jmp
or
mov
pop
js
test
ja
lcall
jnp
dec
add
xchg
push
mov
icebp
lods
shlb
xor
loope
mov
sub
fsub
mov
push
cmpb
flds
adc
rorb
push
cmp
pusha
dec
sarb
ret
outsl
xchg
add
pushf
movsl
add
dec
jbe
pop
nop
cs
and
test
add
or
mov
hlt
mov
insb
cld
add
mov
in
add
scas
dec
mov
movsl
cmp
jo
inc
xor
out
add
inc
aas
or
pusha
leave
sbb
jp
test
cld
in
pusha
push
pop
lock
loopne
std
jmp
rorb
arpl
pusha
and
add
mov
es
dec
test
inc
xlat
nop
mov
push
ficoms
sbb
pop
gs
in
popl
dec
cli
addr16
xchg
mov
mov
cmp
add
hlt
mov
scas
scas
icebp
add
lahf
ss
push
sub
cltd
dec
and
cmpb
and
sub
or
hlt
add
add
fstp
enter
add
shrb
hlt
in
add
das
xor
pop
sub
xor
in
loopne
jo
add
or
add
push
movsb
pop
jp
xor
push
cli
inc
inc
xor
iret
nop
cld
push
and
dec
movsb
lock
testl
je
xchg
data16
xchg
mov
outsb
adc
bswap
sbb
mov
cmpl
jno
sub
xorb
jo
add
push
mov
mov
pop
fs
xor
add
notb
mov
or
push
lcall
add
gs
fildl
mov
mov
push
into
in
mov
add
popf
out
cmp
mov
enter
fwait
push
add
jns
gs
or
add
dec
xchg
mov
push
movsl
ror
in
or
rcrb
pushf
or
sub
xchg
jge
and
loopne
or
sbbb
jl
aas
xor
orb
das
mov
cmp
push
add
and
sub
inc
dec
cmpsl
push
and
rcll
sti
shlb
inc
xchg
sub
xlat
cli
sbb
add
mov
pop
nop
adc
mov
jle
cmp
mov
cmp
jp
add
jnp
jo
jno
and
mov
aam
ss
inc
popf
stos
loopne
add
jecxz
cwtl
lock
or
lds
push
pop
mov
mov
sbb
push
repnz
add
xchg
mov
add
pop
push
add
jg
or
mov
pop
aas
aas
adc
mov
xorb
add
xor
mov
mov
gs
and
cmp
push
mov
fcoml
mov
lods
shlb
mov
fdivrl
and
scas
inc
mov
rol
in
fnstenv
lret
inc
add
dec
jo
shrl
sbb
jmp
xor
lret
mov
aas
cltd
pushf
mov
test
and
jb
add
notl
adc
add
test
mov
lahf
add
xchg
ret
push
push
lock
add
popf
xor
or
inc
jo
jae
enter
add
test
jb,pt
pusha
and
or
fadd
add
rorl
outsl
mov
sarb
adc
gs
xchg
lods
icebp
push
push
repz
xchg
xor
add
jbe
addl
xchg
ret
std
test
js
add
mov
div
fsub
sti
sub
mov
add
or
mov
imul
jle
add
scas
call
jl
inc
rcll
xchg
cmp
out
lods
mov
test
insb
fisttpll
inc
scas
je
add
add
xchg
into
add
sti
mov
test
popf
rcr
mov
push
push
iret
and
cmp
ljmp
pop
xchg
add
ret
pop
mov
lock
stc
fbstp
add
pop
add
cmp
dec
add
add
xor
cmpsb
fildll
add
mov
cwtl
in
popa
and
ljmp
xor
pop
add
int3
sarb
inc
sub
adc
sub
addb
and
or
cmpsb
jno
add
fstps
outsl
mov
cmpsl
mov
pusha
pop
cmpsb
adc
in
stos
shr
xchg
loop
and
or
add
hlt
nop
sub
out
mov
xchg
test
aas
pop
test
add
sbb
pop
or
movsl
rcrb
lret
xchg
add
out
inc
sbb
pop
add
xchg
add
scas
fidivs
push
movsb
add
mov
xor
das
jg
push
in
or
dec
iret
mov
or
shr
icebp
adc
cmc
bts
mov
out
shll
xor
cmp
jge
add
mov
pop
jo
xchg
sahf
int3
hlt
mull
and
cmpsl
leave
ret
inc
or
adc
add
or
in
xchg
mov
les
js
rolb
lret
scas
add
pop
pop
add
jno
scas
mov
andl
imul
push
insb
adc
cld
inc
pop
xchg
sub
mov
add
mov
test
xor
sahf
negl
add
inc
xchg
rcrl
es
or
mov
add
ficomps
addr16
rcl
mov
pop
ds
les
pusha
movsb
aaa
cmp
mov
adc
daa
insl
add
outsl
add
xor
adc
xchg
mov
add
cmp
arpl
and
xchg
pusha
call
sbb
sbb
pushf
lahf
lock
cltd
fs
mov
ds
xchg
ds
push
fisttps
xchg
js
add
mov
repnz
popa
inc
adc
fs
rolb
add
xchg
cs
adc
jg
loop
jae
add
les
sbb
call
adc
add
adc
inc
pop
rcl
add
stc
cmpb
pushf
loop
push
incb
add
rorb
sbb
roll
scas
aas
add
inc
js
add
std
dec
movsb
dec
divl
add
dec
test
jge
in
sub
ret
movsl
or
inc
xorb
lahf
bnd
lcall
add
push
mov
fnstcw
or
push
enter
notl
iret
push
hlt
movsb
or
push
adc
outsl
add
jb
mov
movb
imul
mov
inc
into
push
push
sub
sbb
fnsave
outsb
xchg
jecxz
js
add
ja
leave
or
jbe
mov
xor
mov
ja
pusha
jae
aas
jb
or
and
or
jae
hlt
mov
dec
lods
cmp
pop
pop
inc
adc
out
loopne
push
cmp
push
adc
and
or
add
repnz
jo
icebp
cltd
sar
sbbb
mov
je
lahf
out
xorb
mov
adc
adc
imul
or
cltd
jno
lock
xor
mov
call
mov
xor
add
rcl
push
cmpsb
pop
jo
testl
aaa
adc
out
adc
pusha
cmp
cmpsb
add
xchg
sbb
leave
jbe
jmp
cmp
data16
sub
lods
cmp
incl
inc
ss
add
loopne
shrl
fs
add
mov
or
and
cmpsb
dec
sub
mov
aad
aas
push
dec
mov
leave
mov
imull
std
pop
add
push
mov
add
dec
fiaddl
jg
add
movsl
fldl2t
popa
movsb
lret
and
or
push
fs
popw
mov
test
aas
aam
add
inc
jae
xor
add
insl
stc
ljmp
stos
loopne
pop
mov
sub
pop
test
cld
jo
xchg
adc
arpl
addl
cwtl
nop
outsl
test
dec
sbb
pop
and
adc
adc
insb
inc
xor
jle
xor
pop
cmp
loope
ja
sub
adc
sub
adc
adc
inc
and
and
xchg
adc
push
adc
adc
jecxz
push
inc
pop
xchg
inc
clc
outsb
std
adc
adc
mov
push
and
imul
or
insl
mov
sub
addb
sub
sbb
hlt
cmp
inc
sub
adc
jg
jae
ljmp
les
bound
dec
aam
sbb
mov
push
add
and
fiaddl
pop
mov
add
lock
stos
xchg
cmp
inc
xchg
add
test
lcall
jmp
lahf
hlt
sub
pop
in
add
cmp
lds
jno
or
xor
setb
add
jns
push
repnz
mov
mov
mov
shl
and
and
bound
call
lods
mov
repnz
inc
sub
pop
daa
push
push
jbe
fdivs
aad
pop
mov
stc
ret
addl
mov
mov
cwtl
add
lods
and
leave
cmpsl
bound
mov
mov
jo
jbe
fldl
popa
and
fxtract
ja
jb
out
repnz
push
clc
lea
jg
ror
stos
iret
and
test
pop
mov
dec
je
xchg
sar
add
stc
mov
add
adc
or
pop
add
hlt
ret
mov
shrb
sbb
add
incl
addr16
pop
xor
xchg
mov
inc
sbb
imul
xor
enter
pop
xchg
rolb
leave
jecxz
in
test
out
addb
sbb
mov
inc
negl
adc
into
nop
pop
lock
dec
paddsw
push
add
popa
hlt
sbb
leave
filds
mov
stos
mov
or
enter
push
shrb
push
push
jns
andl
mov
scas
lods
add
mov
sbb
loope
sub
xor
mov
dec
and
das
pop
cmp
push
rcll
daa
adcb
adc
sbb
fdivr
add
in
dec
in
fwait
add
not
cmpl
dec
add
jge
add
inc
jp
js
jae
add
add
loope
add
fmul
jae
inc
fidivl
mov
outsb
push
mov
jo
and
addr16
inc
pop
add
mov
jle
pop
aaa
dec
loopne,pn
nop
test
mov
dec
je
int3
clc
rcrl
sbb
orb
shr
sbb
cwtl
fnstsw
xor
pusha
mov
sub
adc
or
pusha
fs
push
jns
adc
sub
sub
jg
orb
add
xchg
stos
dec
cwtl
or
sub
insb
jle
mov
popa
ss
add
add
jno
and
scas
sub
movsl
cltd
arpl
push
out
cs
insb
testb
push
mov
or
add
inc
subb
popf
jb
add
aad
xlat
xor
add
sbb
mov
ret
pop
add
adc
ja
add
jae
loope
jecxz
or
sbb
mov
sbb
add
fcoml
adc
mov
add
imul
sbb
mul
out
adc
push
push
fidivl
lret
adc
mov
inc
js
mov
inc
mov
cltd
outsb
shll
rorb
std
add
mulb
lret
push
rcrl
das
xor
jne
add
xchg
pusha
movb
adc
test
loope
sub
sarb
cld
dec
push
lds
in
mov
mov
cmp
or
add
xchg
popa
cmp
iret
add
sbb
enter
bound
adcb
adc
cmc
and
and
push
ds
inc
mov
lods
div
push
add
xor
add
popf
jb
or
in
popa
add
cmp
mov
adc
sub
int3
dec
popf
addr16
rorb
jne
pop
popa
sub
or
outsl
les
dec
leave
cltd
mov
adc
pusha
std
xchg
sub
push
adcb
mov
add
or
push
mov
in
mov
add
add
adc
lahf
push
cmpsl
roll
repz
dec
ja
mov
add
or
sub
xchg
hlt
mov
jp
repz
fwait
rorl
hlt
sub
push
lods
cmp
and
mov
inc
add
lret
lcall
mov
xor
push
jge
sbb
xor
inc
jno
push
mov
sub
or
shlb
js
sbb
xchg
dec
loopne
inc
cmp
loopne
jl
divl
add
jne
bound
pop
fwait
mulb
inc
sbb
inc
jp
add
lret
cs
dec
mov
sbb
mov
ljmp
xchg
pop
and
sbbl
stos
test
lret
das
xchg
pop
add
sbb
add
testl
int3
push
dec
pop
mov
sbb
dec
mov
arpl
add
inc
pop
add
pusha
lock
imull
in
jno
push
pop
out
pop
and
lret
add
fsubrs
popa
push
or
andb
mov
iret
movsl
mov
hlt
add
mov
xor
movsb
mov
sbb
mov
inc
add
lock
and
cmp
add
ror
xor
jno
add
loop
adc
add
out
pusha
decl
cmp
dec
adc
mov
mov
out
daa
int
dec
bnd
ret
out
adcb
adc
rorl
add
mov
stos
mov
loopne
pop
dec
adcb
rcrb
xor
add
cmp
daa
jmp
sub
cmp
sarb
arpl
sbb
lahf
pop
daa
sub
jl
or
jae
mov
sbb
pop
sbb
mov
out
mov
jge
add
loop
dec
das
arpl
fadds
xchg
mov
pop
add
rclb
ja
and
mov
jns
adc
pusha
add
and
add
xchg
fisubrl
ja
inc
jle
shr
mov
ds
sahf
pop
lahf
jp
add
andb
xor
je
les
push
mov
inc
das
sbb
push
push
imul
mov
aad
rol
fs
and
xchg
add
es
test
push
mov
mov
xchg
pop
movsb
pusha
pushf
xorb
sub
mull
cmp
push
mov
and
pusha
xchg
fisubrs
adc
add
test
ret
pop
repnz
xor
xor
mov
adc
adc
sahf
xchg
mov
shll
xor
sbb
pop
or
dec
or
adc
std
push
mov
lods
fdivl
pop
int3
pop
dec
push
jb
mov
mov
movsl
inc
popa
int3
sarb
iret
sbb
add
fiaddl
jecxz
adc
push
push
mov
xor
cltd
aad
jne
outsl
lret
out
add
leave
pop
inc
xor
dec
mov
adc
push
call
mov
packssdw
cmp
std
lods
out
ret
fimull
enter
jne
dec
adc
mov
pop
gs
mov
rcrb
jl
add
jmp
aam
mov
into
xchg
jnp
add
xor
shrb
cmp
push
or
pusha
hlt
loop
add
cwtl
imul
pop
popa
pushf
les
in
inc
xchg
push
repz
mov
insl
mov
lret
pop
fldenv
test
add
repz
pop
push
outsl
add
inc
lock
xchg
mov
subb
shll
dec
add
cwtl
test
pop
call
pop
cwtl
cmpb
adc
mov
shrb
pop
inc
push
mov
cmp
mov
add
cmc
inc
cmp
sbbl
loopne
push
adc
add
adc
into
cli
add
jecxz
jbe
lods
test
add
rorl
add
hlt
inc
or
enter
pushf
add
add
inc
insl
pop
mov
xchg
mov
push
loop
gs
adc
add
or
fnstsw
or
loope
inc
mov
aaa
push
out
mov
xor
and
sbb
ret
inc
jl
and
in
lss
add
pop
and
jmp
xor
mov
jo
vmwrite
sub
dec
in
cwtl
lock
cmp
push
inc
sbb
shlb
nop
xchg
add
aaa
into
push
or
std
add
lcall
roll
loope
lea
mov
mov
packuswb
sti
pushf
fcomps
jmp
mov
jbe
loopne
push
cli
add
cmpb
add
push
dec
jg
mov
add
movsb
dec
mov
add
cmp
test
or
out
add
xchg
enter
mov
rorb
xor
repnz
inc
ffree
nop
add
cmc
mov
jo
jmp
sbb
mov
outsb
shll
adc
mov
add
cmp
cmpsl
clc
sbb
sbb
dec
loope
das
add
sub
sbb
mov
iret
fistpl
mov
ds
test
fdivs
dec
mov
dec
mov
jae
jne
addl
adc
mov
push
sahf
lret
cmpsl
push
int3
fdivrs
xchg
popl
push
inc
xchg
leave
cwtl
adc
jecxz
je
lret
add
ss
mov
and
fld
pop
idivb
xlat
jbe
mov
dec
mov
pop
and
push
inc
add
sbb
aas
pusha
fsub
jmp
movups
aam
mov
incl
int3
jmp
vcvtpd2dqy
fimuls
fdivs
addb
test
adc
mov
pop
je
add
fsub
xchg
jno
cli
aaa
jle
add
mov
push
sti
jle
sub
xchg
es
popf
add
inc
add
ud1
sbb
pop
scas
jg
jb
sbb
xchg
addb
dec
daa
cld
mov
push
add
dec
sub
lock
jno
add
cmpb
mov
mov
mov
sub
or
mov
add
subl
das
pop
jb
mov
push
nop
pop
mov
mov
sub
hlt
pusha
lods
fwait
lods
adc
cmove
inc
popa
icebp
jo
mov
cmpsb
add
adc
dec
movsb
data16
lds
in
or
popl
jne
xor
xchg
shrl
negb
push
sbb
lea
mov
pusha
push
les
cmp
xor
int3
sub
jns
xor
in
push
add
clc
ret
jnp
push
push
lock
xchg
fwait
mov
aas
hlt
sub
mov
add
les
sbb
sarb
daa
cli
jne
shlb
inc
sub
adc
mov
ret
cs
jge
sti
xchg
and
mov
pushf
ss
test
xchg
xor
mov
inc
fidivl
ss
addl
cmp
js
stc
xor
pop
sti
jo
faddl
in
test
call
mov
jbe
dec
lock
sbb
cwtl
add
add
outsl
mov
sbb
lock
rcll
icebp
mov
push
or
flds
ja
repnz
sub
push
test
add
jle
and
and
jle
push
ds
jo
mov
cmc
add
xchg
testl
adc
out
sub
mov
lahf
push
addb
xor
testb
mov
dec
sbb
out
fstpt
sbb
in
ss
sub
or
gs
enter
cmp
pop
push
addl
pop
popf
outsl
add
jle
and
jmp
stc
js
int
or
jmp
xchg
dec
scas
add
mov
mov
fstl
popa
and
mov
dec
adc
in
test
mov
add
push
scas
cld
sub
add
sub
mov
and
es
mov
pop
sub
hlt
testb
mov
clc
pusha
mov
or
cli
jl
pop
mov
andl
cmp
rolb
fildl
pop
push
out
hlt
out
cld
jnp
shrb
data16
cwtl
ljmp
sbb
add
mov
sbb
cwtl
rolb
sub
jmp
ss
repz
stos
add
movsl
inc
pop
int
cmp
push
test
cmp
stc
pusha
pusha
lcall
pop
jg
loope
movsl
add
int
imul
fs
add
push
jae
out
sub
out
mov
add
inc
lret
mov
lock
add
sahf
pop
nop
push
cmc
and
loopne
mov
mov
fdivs
adc
add
ljmp
nop
iret
add
sbb
fimull
push
orb
pop
shrb
rcrb
push
or
cmpsb
mov
int3
add
test
aad
xor
add
pop
sahf
add
xchg
fmull
aas
push
adc
mov
xlat
shlb
sub
arpl
add
and
imul
xor
pop
pop
xorb
jbe
add
adc
out
add
outsl
sarb
mov
mov
sub
cmpb
inc
aas
xchg
pop
xor
pop
push
mov
jnp
cld
inc
inc
add
mov
imul
jle
pop
dec
jmp
mov
pop
sbb
add
mov
xchg
cmp
sub
jbe
push
push
xchg
das
adc
rol
sbb
lock
out
ja
or
bswap
mov
xorl
or
mov
mov
repnz
psubb
push
or
in
fstps
jge
dec
inc
pop
add
and
add
xor
stos
xchg
mov
fs
mov
adc
add
jns
shll
jo
inc
add
lcall
and
cmp
repz
in
stos
dec
enter
mov
add
cmc
ret
scas
fsubr
add
out
mov
repnz
inc
or
pushf
in
mov
add
push
mov
pop
mov
in
popf
pop
adc
inc
je
sub
es
add
push
cmp
add
xchg
add
hlt
movl
add
ss
sarl
xchg
movhps
inc
add
pop
ucomiss
ss
enter
enter
lock
ja
add
decl
ret
mov
add
fidivs
add
inc
ret
fucomp
sub
negl
scas
mov
movsb
add
ficoms
pop
insl
mov
sbb
ljmp
xchg
add
inc
cmp
add
addr16
xchg
pop
mov
out
add
mov
dec
inc
shrd
std
jno
push
in
pop
add
stc
mov
mov
sbb
ret
and
pop
sarb
mov
mov
add
std
sahf
mov
and
add
test
mov
add
sti
xor
and
and
xchg
rolb
xor
or
mov
adc
cmpsl
gs
testl
dec
mov
loope
push
pop
addl
test
sub
dec
add
push
arpl
lock
inc
cmp
test
out
jb
add
sub
hlt
pusha
pusha
ljmp
movsb
push
into
popf
cmp
cltd
cmp
sub
mov
shll
push
add
out
int
ljmp
call
test
std
pop
imul
mov
and
jno
push
lds
add
adcb
cmpsl
in
pop
push
cmp
dec
pop
mov
js
add
lcall
jl
add
jp
jl
add
insb
shl
add
mov
push
xor
stc
inc
test
bound
fsubrp
cli
pusha
imul
mov
ja
fisubs
jno
mov
fsubl
inc
jb
adc
add
and
cltd
fdiv
jno
ret
cmp
shr
fmull
in
int3
je
cld
bnd
mov
adc
add
add
mov
cmp
aad
ficompl
sarl
adc
bsf
mov
or
scas
pusha
int
sbbb
sub
pop
dec
xchg
lock
mov
movl
cld
pop
decb
pop
or
mov
and
scas
pcmpgtd
push
push
arpl
hlt
xchg
test
add
les
cld
push
cmpsb
mov
mov
pop
testb
mov
scas
aam
rorl
outsb
incb
mov
mov
test
loope
addr16
mov
lret
mov
fisttpll
sub
andb
addb
mov
loopne
in
add
pop
cmp
add
loope
sahf
add
fidivl
into
mov
les
add
add
mov
clc
mov
push
add
sub
rclb
add
and
fsubrl
add
loop
cwtl
insl
cld
not
cmp
test
mov
add
mov
add
es
lret
iret
push
fld
dec
pop
dec
shl
push
jae
adc
add
scas
jmp
jb
data16
and
add
mov
pop
lcall
inc
insl
movsb
stos
inc
data16
jb
add
imul
dec
jge
or
mov
add
sub
das
test
addr16
pop
cmp
sub
cmpsb
pop
jne
add
dec
mov
pop
ret
mull
js
add
addr16
popa
cmc
and
stos
add
std
ret
pop
test
jmp
in
add
cmc
xor
gs
push
jnp
mov
lds
push
lret
dec
shr
outsl
push
jne
sub
or
mov
or
mov
xor
mov
dec
xchg
sbb
sub
arpl
add
cs
scas
test
push
insl
pop
cltd
addr16
ss
xor
and
sub
mov
sbb
fnstenv
inc
inc
lods
inc
aas
jl
es
cld
add
xor
sar
push
mov
lds
rcll
jno
clc
xor
out
cmp
cmp
lods
insb
ljmp
sbb
mov
sbb
push
jns
add
dec
or
sbb
mov
dec
jae
add
jle
mov
pusha
xor
jbe
mov
in
in
loopne
fldt
inc
movsb
jg
rclb
push
add
pop
mov
mov
add
mov
add
leave
sub
add
pop
mov
lds
mov
sahf
sub
arpl
fiaddl
adc
push
loopne
or
cmp
mov
add
les
fwait
sbb
push
addr16
sbb
je
inc
mov
dec
or
fdivr
aaa
xchg
es
push
dec
insb
sub
xor
add
out
sti
not
and
in
mov
imul
lahf
add
fisubrs
add
push
aad
mov
xchg
add
ljmp
push
shlb
ss
and
movl
pop
adc
sbbb
add
push
out
and
ds
add
xor
cmc
mov
cmp
push
add
lret
pop
add
and
adc
imul
xchg
mov
mov
shlb
add
jle
incb
cmp
les
test
cmpb
clc
out
imul
lfs
xchg
add
cwtl
cli
shlb
negb
ljmp
dec
ret
dec
iret
ljmp
sub
lret
pop
add
push
dec
mov
push
jnp
dec
movsl
fidivrl
add
xchg
insl
mov
add
aam
call
sbb
xchg
loope
add
jp
sub
jmp
nop
rcrl
loop
fidivl
lret
cmp
xchg
nop
add
sarl
inc
jns
cmp
in
and
inc
add
sbb
mov
out
fdivr
pop
aas
and
jo
popa
add
mov
fwait
push
adc
sbbb
ja
mov
mov
add
sub
jae
add
std
sub
push
test
jge
call
inc
test
pop
mov
or
pop
push
add
jle
sbb
ljmp
out
subl
or
inc
sub
add
and
stc
xor
mov
std
add
xor
loop
add
out
iret
mov
clc
sbb
xor
arpl
rcrb
cmp
into
pop
testl
scas
mov
add
ret
add
xor
js
mov
push
adc
xchg
aam
test
xchg
test
enter
cs
cli
out
and
popl
hlt
jp
stos
inc
aaa
ret
add
inc
sbb
add
inc
jae
add
ljmp
mov
int
loop
shr
jo
mov
add
loopne
cmp
jnp
fcomi
das
add
insl
fldl
mul
xlat
decb
sub
std
loopne
mov
test
add
imul
in
iret
add
mov
icebp
mov
pop
jnp
add
das
cmp
nop
add
loope
repz
test
and
push
frstor
pusha
pop
pop
sbb
pop
inc
mov
add
ds
push
push
leave
sbb
jle
inc
ficompl
lock
out
in
mov
xchg
mov
or
adc
add
sub
add
pop
cmp
mov
stc
sub
mov
or
sub
cs
enter
push
ret
add
xchg
sbb
cmp
push
push
sub
repnz
int
xor
add
push
aas
pop
jp
dec
sbb
test
sti
stos
pop
outsb
das
pop
ljmp
gs
movsl
inc
pusha
inc
ret
imul
addr16
jo
xchg
lea
push
pop
mov
in
test
insl
arpl
enter
adc
mov
in
test
mov
add
sub
mov
mov
push
adc
xchg
test
ret
push
gs
sub
mov
or
fcomps
shlb
xchg
xor
rol
dec
mov
pop
shlb
xchg
iret
movsl
add
adc
imul
repnz
cmp
into
sbb
test
mov
ds
dec
scas
sbb
int3
dec
adc
mov
idivl
out
push
loopne
and
jge
dec
add
dec
xchg
cmp
add
and
jne
xor
push
sbb
mov
outsb
cmpb
sbb
and
cmpl
inc
nop
sub
aaa
mov
push
sbb
jle
cli
dec
out
or
out
orb
jp
add
or
testb
lret
pusha
mov
cmp
ds
outsb
push
sub
mov
add
mov
cs
xchg
sub
popf
insb
mov
sbb
call
jle
outsl
mov
mulb
in
sarb
push
out
fstp
mov
add
scas
pop
mov
ss
mov
into
pmulhuw
mov
xlat
add
xor
xchg
pushf
jno
add
sub
addb
mov
xor
loopne
add
pusha
sbb
icebp
dec
mov
shlb
xchg
in
or
pop
hlt
cwtl
sbb
push
adcl
sub
pop
call
jo
mov
adc
mov
add
out
cmp
dec
add
dec
add
pop
loopne
xchg
adc
pusha
jne
mov
pop
lods
sub
dec
lock
insb
add
in
inc
add
pop
pop
movsb
xchg
dec
pusha
cmc
cmc
add
roll
outsl
and
cmp
mov
mov
push
rcl
je
add
or
adc
rclb
clc
dec
lock
add
xor
icebp
push
subl
cmp
enter
mov
or
ja
jb
mov
rcrb
add
or
popf
add
jle
fldcw
imull
or
ljmp
popf
mov
adc
bound
cwtl
aad
adc
insb
push
sahf
mov
push
divb
mov
mov
xor
mov
dec
pop
pop
enter
push
jp
xchg
scas
dec
dec
and
mov
inc
xchg
adc
adc
push
jnp
sbbl
sbb
and
mov
insb
add
lahf
mov
lcall
pop
psubd
clc
add
rorl
imul
aad
dec
fnstenv
or
add
popa
pop
call
nop
cwtl
jnp
push
out
je
in
inc
sbb
addl
pop
sbb
inc
aaa
dec
adc
out
fsubrs
jg
add
add
dec
pop
cmp
push
and
test
les
std
leave
sub
pcmpeqw
mov
outsl
mov
in
xchg
inc
xchg
mov
sbbl
push
lcall
mov
gs
add
iret
and
add
xchg
mov
dec
jno
int
in
test
sub
ljmp
push
jb,pt
pushf
mov
enter
stc
call
pop
adc
mov
or
arpl
aas
bswap
aad
mull
in
push
and
jge
loope
adc
ds
mov
sbb
inc
add
inc
cmpb
or
cli
add
out
jmp
or
sub
rcrl
xchg
cmp
test
test
inc
dec
sub
xor
xor
inc
dec
inc
mov
lret
inc
pop
lret
jbe
add
push
dec
jb
shl
pop
mov
lret
fstl
sbb
cs
inc
aam
pop
adc
sbb
and
or
int
cltd
add
push
push
jne
std
es
dec
adc
mov
outsl
push
mov
push
mov
aaa
es
icebp
jo
add
sbb
sar
dec
pop
dec
pop
inc
aam
jg
push
in
icebp
jmp
push
mov
mov
add
mov
jno
clts
mov
fsubp
push
out
and
in
cs
sub
add
jae
sbb
scas
fiaddl
push
mov
nop
data16
add
and
out
fstpt
out
movsb
lahf
je
cmpsl
pop
add
lods
sbb
add
add
mov
or
clc
pop
add
xchg
popf
xor
cmp
add
adc
adc
push
push
mov
dec
add
nop
loopne
dec
aad
movsl
add
mov
dec
and
sbb
cmpb
loopne
bound
xchg
dec
jnp
jns
mull
xorb
fbld
mov
mov
ja
add
and
ficoms
imul
add
adc
mov
dec
mov
stos
sbb
jne
adc
dec
repz
cmp
add
hlt
cmp
outsl
add
imul
pop
addr16
fmuls
xchg
push
cmp
jae
pusha
jno
add
mov
fimull
add
test
fdivl
adc
into
negb
lcall
out
loop
push
add
cmpsl
adcl
jae
sbbl
mov
jecxz
add
sbb
mov
mov
lock
popa
push
mov
sarl
add
cmp
cmp
inc
adcb
addb
push
scas
inc
xchg
ret
pop
in
mov
out
add
les
and
inc
out
cmp
mov
insb
subb
mov
mov
fadd
leave
jbe
rcrb
les
inc
in
nop
xor
xor
push
mov
jp
push
jge
mov
sti
sbb
add
pusha
pop
mov
fwait
ss
cmp
scas
scas
and
and
dec
jo
cs
pop
fcompl
mov
fbstp
mov
inc
pop
or
push
ds
movsb
cmp
mov
fimuls
mov
lea
push
sbb
clc
insb
add
xchg
insl
fs
popfw
xor
inc
pushf
pop
xor
cld
push
jmp
outsb
pop
sbb
mov
mov
jb
int3
cmp
inc
adc
xchg
lret
incl
add
repnz
and
mov
add
mov
xor
sub
lds
sub
dec
cld
cmp
mov
cli
mov
inc
pop
add
ss
rcll
adc
andl
mov
cmpsl
add
dec
in
add
xlat
hlt
jo
add
jb
jae
and
mov
or
scas
pop
std
add
mov
test
mov
xchg
hlt
pop
mov
push
inc
fadds
lahf
cwtl
in
in
fs
jb
imulb
lods
stc
cmp
dec
or
movb
inc
mov
mov
pop
xchg
gs
and
add
jns
imul
loopne
es
add
subl
mov
in
or
fiadds
fwait
sti
cwtl
xor
lahf
cmp
add
jge
cmp
pop
mov
mov
repnz
shrb
dec
sbb
mov
pop
mov
sar
roll
mov
shrb
jns
lahf
add
xor
and
in
inc
pop
insb
cmp
imul
enter
rolb
inc
shll
jbe
or
mov
or
and
push
add
pop
les
andb
xchg
push
mov
call
out
xlat
sbb
dec
call
adc
add
shr
cmpsl
mov
gs
insl
aaa
xchg
daa
in
jo
inc
add
lock
imul
add
adc
aad
push
cmp
or
loopne
mov
call
inc
lret
mov
loope
jae
pop
add
add
sbb
xchg
out
or
daa
enter
scas
pushf
shll
mov
cmpsb
xor
jl
pop
test
lds
aaa
sub
push
lret
pop
hlt
sub
test
iret
mov
dec
sub
call
mov
les
sarb
iret
loop
adc
or
dec
xchg
and
add
push
out
insl
cmc
shr
push
fiadds
xchg
sub
jo
movsb
mov
mov
out
rolb
sbb
cmpps
add
bound
js
adc
iret
mov
cmpsl
lea
jo
mov
cmp
cmp
es
mov
shlb
dec
and
add
mov
shlb
pop
ja
ss
out
inc
xor
adc
pop
lcall
nop
adc
ds
add
xlat
jge
pop
cld
outsl
add
and
push
rcr
movmskps
out
cmpsl
xor
clc
stc
pusha
stc
mov
or
pop
mov
mov
test
adc
arpl
push
jnp
inc
inc
pushf
enter
loop
or
cmp
ret
pop
int
hlt
andb
pop
pop
mov
js
gs
int
stc
dec
xlat
inc
loope
enter
mov
pop
sti
sub
add
rcll
add
iret
sahf
insl
mov
xchg
lods
or
jne
adc
dec
add
or
push
xchg
and
sahf
aaa
imul
and
add
add
sbb
into
or
pop
cmpb
imul
cmp
push
or
mov
pop
in
sarl
cwtl
loope
mov
adc
sarb
leave
divb
mov
add
dec
push
sub
lods
shl
jnp
daa
cmp
add
push
cmpsb
adc
insl
add
or
mov
add
test
scas
add
add
leave
or
add
cli
aad
xor
mov
lea
lret
add
cmp
xor
jbe
dec
movsl
or
sbb
sbb
nop
sarl
in
add
jl
out
or
sahf
rcrb
rcll
cmc
orl
inc
orb
xchg
jmp
das
test
je
pusha
into
rcl
nop
pop
mov
add
fisubrs
xor
jg
lahf
aas
and
xor
insl
jmp
and
jne
lods
mov
sub
rorb
mov
mov
dec
xor
pop
jns,pn
loope
fisubrl
add
addr16
out
mov
add
jle
mov
push
add
mov
gs
sub
inc
jl
jno
mov
loopne
cmp
add
and
scas
ret
lock
aaa
lahf
add
mov
sub
and
or
jecxz
mov
mov
sahf
add
adc
inc
cmp
xchg
push
addr16
and
pop
dec
add
sbb
xchg
sarb
in
data16
repnz
add
and
cmp
add
pushf
jg
and
dec
add
mov
lea
add
adc
push
jns
loope
ds
addr16
pusha
das
pop
mov
xchg
jae
fwait
int
push
push
pop
mov
clc
dec
add
xchg
and
movb
cli
jns
nopl
adc
adc
or
pop
mov
add
mov
xchg
inc
add
and
adcb
insb
sub
jmp
xchg
xor
dec
in
and
mov
lods
pop
xchg
xchg
out
adc
addl
js
jle
icebp
mov
add
movsb
and
add
cmpsb
movsl
lret
add
test
dec
ja
mov
scas
mov
pusha
push
adc
dec
shrb
or
data16
sub
xor
out
lahf
cltd
xor
xchg
pop
sub
popa
ss
inc
nop
add
lret
sbb
and
xor
test
sahf
cmp
fcompl
iret
mov
jmp
lret
loopne
dec
call
cmc
push
enter
adc
inc
jb
test
xor
pop
push
add
rcrb
cmp
lahf
sbb
insl
and
je
adc
arpl
dec
xor
jns
cmp
rcr
jb
insl
sub
xchg
push
loopne
cmpsl
pop
subb
pushf
jne
mov
add
xchg
adcl
jle
or
cs
xchg
push
cwtl
adc
std
jl
mov
rolb
push
or
dec
sahf
add
mov
nop
daa
add
loope
jp
or
and
shr
pushw
cmp
add
push
or
test
cmp
fadds
movsb
push
dec
mov
adc
neg
cmp
or
lods
sub
jecxz
sbb
mov
pop
in
cmp
popf
insb
add
ja
push
inc
xchg
popf
shll
rclb
pop
jp
orb
out
push
jle
dec
add
push
xor
ret
add
jecxz
inc
dec
daa
mov
cltd
pop
js
adc
push
jl
cmpsl
add
out
bound
jle
add
jl
shrd
cmp
mov
adc
rcrb
add
xor
jno
testl
dec
sub
adc
hlt
xor
lods
mov
je
add
fdivl
popa
push
sbb
add
into
push
inc
or
iretw
scas
add
cwtl
xor
mov
popa
lea
mov
pusha
pop
mov
xchg
push
addb
fstps
jmp
loope
dec
add
pop
xchg
int3
cs
aam
outsl
add
aas
mov
add
je
popf
add
or
leave
cs
test
add
gs
test
hlt
adc
out
mov
xchg
in
or
or
sub
sub
adc
xchg
cmp
lahf
pop
add
jne
cmc
jnp
nop
mov
jg
sbb
pop
call
lods
je
sub
ds
add
clc
in
inc
mov
js
cli
fidivs
cmp
pop
clc
ja
ret
xlat
inc
fnsave
bound
clc
leave
rcrb
mov
les
adc
lods
jb
push
popa
dec
out
fiadds
push
xlat
lret
dec
sti
andb
cmp
add
lahf
andl
push
call
out
fbld
jnp
mov
dec
and
loope
lcall
xchg
fistps
das
dec
shlb
popl
fsubrl
call
xor
cld
cltd
ljmp
mov
sub
sbb
rcr
xchg
je
clc
jmp
push
inc
repz
xchg
rol
in
daa
ljmp
mov
popa
pusha
rcrl
test
add
jp
mov
sub
adc
test
add
mov
sbb
iret
push
add
ds
mov
mov
jae
xchg
dec
add
lahf
inc
cmp
rolb
adc
push
ja
bound
mov
mov
mov
or
pop
jle
les
push
clc
popa
sub
mov
lahf
adc
into
fstpl
add
mov
roll
add
outsb
dec
fnsave
push
mov
and
or
add
push
repz
les
clc
push
pop
mov
mov
nop
dec
movsl
and
jo
inc
loop
add
loopne
xchg
insl
inc
in
movb
ljmp
inc
and
mov
mov
sti
ja
cmp
test
imul
sbb
rcrl
sti
pop
mov
dec
ret
add
mov
dec
push
fidivs
test
cmp
xchg
rclb
movsb
outsl
add
lret
stc
fiadds
cltd
sub
add
out
add
and
into
add
adc
xchg
addr16
or
xchg
lods
int
lahf
and
out
pop
sub
add
sahf
addr16
cmp
add
jge
add
push
rclb
add
push
dec
mov
daa
rcl
jo
sub
scas
mov
out
dec
pop
test
fmull
movsl
pop
sbb
into
hlt
icebp
iret
repnz
je
cld
mov
or
arpl
sub
hlt
rorb
cs
pop
clc
add
add
hlt
mov
pusha
sahf
ret
mulb
jl
add
jne
pusha
sub
adc
mov
mov
shll
mov
add
xor
inc
xchg
sub
add
add
adcb
sbb
add
push
sti
add
cs
add
add
push
mov
in
ja
movsb
add
pusha
jmp
sub
push
add
mov
xor
les
loopne
or
push
fiaddl
cli
or
stos
adc
xchg
add
pop
hlt
enter
pushl
lahf
sbb
xchg
mov
xor
movsb
adc
adc
xchg
dec
sti
push
hlt
sar
sub
add
cmp
stos
lods
push
in
and
sub
scas
jns
fcompl
cld
xchg
sub
mov
and
cli
add
cmp
mov
je
andl
adc
mov
mov
je
pop
inc
nop
cmp
xchg
jae
idivb
add
inc
imul
aas
sbb
mov
loop
scas
jl
fdivl
in
xchg
movsl
dec
pop
push
mov
fs
adcl
sbb
push
lahf
jae
xchg
adc
mov
push
jne
add
mov
cmp
or
in
xchg
test
mov
shll
or
and
popa
lock
sub
dec
clc
out
push
mov
add
and
adc
movsb
sub
hlt
xchg
or
inc
in
call
dec
js
jp
and
dec
push
test
adc
dec
mov
mov
in
insl
ret
add
sub
add
fcom
xchg
cmp
mov
xlat
cwtl
xchg
add
out
xchg
fdivrs
sbb
add
mov
icebp
lret
subl
sbb
imul
ljmp
jns
pushf
jo
add
push
adcl
mov
adc
or
test
imul
stos
mov
lods
add
sub
jge
adc
and
add
imul
test
adc
push
push
in
cmp
push
pop
mov
jae
scas
push
pop
jg
in
inc
mov
addb
ljmp
xchg
nop
je
in
pop
jecxz
sar
bound
push
cld
sbb
cmp
mov
sub
push
pop
sahf
add
inc
movsb
or
fistpll
stos
aas
ss
jo
and
jnp
aad
jle
pop
xchg
mov
pop
xor
add
sub
pop
lods
in
outsl
add
mov
ja
push
cmpsb
cmp
or
popf
sbbb
and
cmc
repnz
rcll
push
sarl
roll
mov
dec
pop
add
cmpsl
sbb
mov
lock
aas
cmpb
cmp
push
imul
push
mov
insl
pop
mov
icebp
cld
cmpsl
sbb
cld
in
add
xchg
roll
ja
icebp
enter
enter
test
aam
add
adc
jnp
aaa
popl
icebp
and
add
mov
cmp
inc
mov
mov
pop
popf
sub
gs
dec
add
mov
adc
add
push
int
jmp
pop
add
sub
fsub
jno
sbb
adc
jnp
mov
inc
inc
gs
mov
cmc
mov
fiaddl
adc
xlat
add
or
js
roll
push
out
insl
add
jmp
repz
inc
jge
sarb
add
xor
push
mov
in
jge
int3
leave
push
in
pop
and
leave
jmp
pop
in
cltd
mov
fsubs
lds
inc
cmp
in
adc
push
and
push
mov
inc
jmp
xor
jecxz
cwtl
or
xor
sbb
out
mov
adc
sub
or
rolb
js
add
cld
test
dec
dec
inc
jl
test
pop
stos
jg
add
jo
cmp
icebp
inc
mov
inc
sarb
mov
or
js
add
and
jo
pop
mov
cmp
lret
pop
inc
mov
fiadds
movb
mov
dec
xchg
lods
cld
jp
nop
ret
iret
xlat
sbb
je
add
aam
shlb
aas
xor
mov
xchg
inc
nop
xlat
mov
pop
cwtl
iret
out
idivl
add
dec
lods
sbb
movsl
push
add
insb
mov
xor
inc
add
outsl
popf
aaa
stos
ss
movsb
add
dec
push
test
sbb
add
unpcklps
inc
xchg
push
sbb
insb
pop
out
and
cmpl
jmp
and
cmc
inc
cs
pusha
into
inc
adc
out
and
push
pusha
mov
andb
adc
jnp
ja
cmp
mov
adcl
lcall
dec
mov
add
add
mov
adc
push
add
inc
daa
lret
sbb
add
insl
in
sub
push
and
push
or
jno
lcall
cmp
or
and
ss
insb
cmp
lcall
inc
add
sub
pop
fbstp
subb
or
or
sar
decl
gs
movsb
out
mov
sub
mov
jo
flds
jmp
dec
lret
das
inc
bound
add
jmp
sub
mov
add
shll
pop
sub
cmp
xor
nop
or
insb
rcl
nop
lock
pop
add
lea
fdivrp
js
jne
adc
and
and
inc
daa
inc
testl
mov
adc
lods
sbbb
roll
fwait
add
addb
sub
jecxz
addl
pop
enter
icebp
xchg
lret
shl
ja
fbld
pop
lcall
call
mov
xor
sub
ret
jns
sub
cmpsl
std
aaa
and
js
cli
pop
cmp
sub
int3
add
or
sbb
aad
shrb
mov
test
stos
in
lret
push
mov
add
cmc
mov
adc
out
inc
dec
mov
or
jmp
xchg
test
jbe
sbb
add
mov
and
jle
cmpsl
subb
popf
add
sbb
div
fadds
xchg
xchg
dec
dec
fiaddl
mov
adcb
lock
pop
xrelease
xchg
fadds
cmp
mov
fdivl
icebp
lds
fnsave
mov
adc
or
dec
sbbb
cli
aam
cmpsb
xor
in
add
insl
into
pop
or
pop
hlt
sbb
sbb
sub
test
push
jb
adc
repnz
cmp
jp
stc
in
call
mov
mov
out
stos
cld
mov
sbb
pusha
dec
mov
xor
pusha
dec
jmp
js
xchg
lcall
aas
fstl
push
add
imul
xchg
push
addb
or
testb
push
cmp
mov
push
jno
stos
pop
jo
mov
add
xchg
das
dec
xor
pushf
add
push
sbb
sub
adc
dec
lret
clc
add
cmpsl
or
add
mov
adc
mov
push
add
add
and
rcr
push
jo
xor
loopne
sub
rcl
out
push
sbb
dec
sbb
mov
jge
xor
or
mov
sbb
jo
mov
add
mov
lock
sarb
add
fwait
iret
movsl
add
outsl
in
mov
lret
mov
push
les
and
mov
push
push
dec
into
ret
fcoms
pop
clc
add
negl
xchg
into
and
outsb
subb
dec
jecxz
sub
sbb
pop
add
and
push
or
inc
pop
roll
ret
pop
mov
add
js
sahf
and
mov
mov
mov
mov
out
pop
add
loopne
std
pop
adcb
mov
add
outsb
add
xor
add
fcompl
testb
bound
lock
rcrl
imul
js
iret
and
jno
mov
xor
dec
mov
add
add
or
clc
xor
subl
inc
mov
in
sti
aad
arpl
daa
ss
jb
dec
stc
mov
das
sub
and
stos
cwtl
testb
xchg
nop
xor
inc
out
inc
loopne
andb
push
js
push
add
pop
in
and
xor
dec
xor
adc
inc
inc
rcr
push
pop
or
push
add
arpl
xchg
mov
jno
add
fildl
add
sar
and
push
test
inc
pop
dec
xor
cli
or
sbb
lea
in
scas
mov
or
lahf
int
push
aam
mov
add
jle
cmpb
movsb
pop
add
ljmp
jmp
in
pop
mov
jo
push
jecxz
jl
movsb
push
int3
aas
jp
sbbb
or
add
and
mov
push
pop
adc
mov
sub
sbb
je
dec
xchg
lock
add
fwait
jge
sub
mov
js
mov
and
add
out
ja
lods
sar
jbe
add
ljmp
repz
cs
and
pop
xlat
andb
call
int
and
inc
mov
adc
rorl
test
mov
add
push
pop
test
add
add
cwtl
outsl
stos
jl
sbb
push
sub
shlb
loope
mov
push
sahf
nop
imul
sbb
xor
jae
outsl
add
xor
call
xchg
sub
cmp
mov
je
push
rcrl
enter
cmp
and
call
and
xor
nop
je
jns
stos
in
adc
pop
dec
add
add
daa
add
sarl
inc
dec
and
enter
hlt
insb
ficompl
movsb
outsl
add
pop
adc
pop
lods
cwtl
add
push
dec
pop
sub
mov
mov
pop
and
add
jbe
add
call
mov
mov
push
add
adc
add
add
sbb
push
loopne
push
xchg
cmp
lock
or
adc
insb
pop
push
add
pop
and
das
test
inc
ror
mov
push
iret
loope
cltd
shl
out
cs
xchg
je
outsb
enter
cltd
fucom
xchg
sub
lea
dec
test
loope
out
in
or
stc
push
lret
nop
es
sbb
fdivl
imul
sti
out
test
push
rolb
les
jle
push
sbbb
mov
scas
insb
mov
inc
inc
adc
fsub
mov
push
cli
into
out
xchg
sub
adc
adc
and
outsb
movsl
in
sahf
pop
mov
jno
test
add
pop
push
loopne
add
or
mov
mov
sti
cmp
adc
mov
movsl
and
cld
shlb
sbb
imul
xchg
mov
mov
in
pop
sub
adc
mov
xlat
mov
insl
push
lcall
xchg
js
mov
add
mov
lock
fsubs
or
clc
aad
stos
out
or
ret
or
bound
pusha
inc
insb
sbb
pop
arpl
adc
and
dec
add
jp
enter
in
jl
cli
pop
add
rolb
xchg
imul
adc
test
xor
add
add
lods
mov
out
mov
add
cld
inc
xchg
fidivl
and
cmpsl
andb
pcmpeqd
fnstenv
xor
cli
stos
push
movsb
cmp
les
jbe
testl
adc
mov
addr16
add
and
mov
sbb
repz
jb
dec
or
jo
cs
mov
dec
ljmp
mov
or
jae
add
jmp
lea
movsb
xchg
stos
out
neg
mov
mov
negb
adc
jno
add
js
jmp
sbb
xor
push
pop
xchg
cmc
std
add
adc
push
adc
aaa
mov
jo
add
or
lock
push
filds
popf
stos
adc
ficoml
mov
pop
pop
sub
and
mov
inc
mov
push
sarb
cmp
int3
pusha
mov
inc
stos
test
dec
clc
inc
add
pushf
andb
mov
add
cltd
push
test
addb
stc
and
push
inc
rclb
dec
sbb
test
sahf
jo
add
inc
call
add
inc
or
cwtl
cmpsb
jge
lahf
ret
sub
roll
xchg
test
adc
adc
push
mov
cltd
out
stos
push
adc
pop
sub
out
jo
and
sahf
cs
sub
adc
pop
dec
push
fdiv
cmpsb
loopne
test
adc
sub
out
and
scas
push
subb
mov
push
add
loope
xchg
jmp
mov
repnz
loope
pop
cld
or
jmp
add
mov
pop
inc
lret
decl
ret
xchg
outsl
stc
lods
cli
lock
xchg
je
sub
inc
mov
loopne
inc
and
add
addl
ljmp
mov
pop
into
icebp
lahf
add
nop
xlat
shlb
sarb
rorl
add
add
js
add
call
add
jb
push
repz
mov
push
das
sbb
sub
les
cld
movsl
add
cmpsl
jg
fdivl
jnp
adc
add
outsl
pop
fistps
mul
repnz
sbb
mov
mov
dec
add
pop
sub
lock
add
dec
in
mov
cli
ficoml
outsb
xor
in
mov
cs
cwtl
and
mov
je
jge
push
and
sti
sbbb
pop
sbb
iret
mov
adc
lods
push
aam
lret
jne
insb
fcos
mov
push
or
fsubs
pop
addb
imul
inc
cmp
shlb
add
and
adc
pop
jl
sub
stc
cmpb
fcmovbe
stos
shlb
add
xchg
jmp
std
enter
add
fbstp
aam
xor
add
or
inc
jle
add
push
inc
fld
mov
out
test
or
lret
add
push
out
push
dec
add
iret
mov
ljmp
sub
subl
lods
arpl
bswap
out
add
cmp
add
mov
outsl
jae
xor
dec
mov
ds
je
push
leave
cltd
jne
mov
add
std
xorb
sbb
add
xchg
repnz
in
je
xchg
nop
fs
sbb
inc
test
ja
jmp
jnp
sub
add
cmp
xlat
or
push
repnz
shlb
jg
aas
shrb
add
cltd
and
lcall
ljmp
lahf
subb
lock
sbb
and
sub
outsb
mov
mov
mov
addb
insl
xchg
inc
cmpsl
add
jne
push
pop
inc
orb
scas
sub
lock
rolb
jle
ss
add
fwait
mov
inc
insl
mov
repnz
sti
jae
mov
mov
pop
addb
lea
and
loop
jbe
push
add
mov
xor
les
and
pop
pop
pop
push
pop
mov
rcrl
xchg
and
or
sbb
and
add
push
pusha
mul
xchg
negl
idivb
insb
iret
arpl
xlat
fsubr
sub
fnstsw
pop
daa
popf
xor
lods
pop
dec
sbb
jl
pop
dec
andl
lea
bound
xchg
ljmp
ficoml
scas
dec
cmpl
loop
popl
xchg
popf
xor
pop
and
inc
leave
lea
stos
sahf
and
lock
push
xor
bound
sub
mov
lret
add
mov
xor
push
inc
rcrb
repnz
incl
xchg
mov
cld
mov
mov
add
fisttpl
adc
ljmp
shll
gs
xlat
test
cmp
add
push
and
mov
mov
ds
jle
cmp
in
nop
xchg
add
fmull
pop
adc
popf
inc
mov
push
and
cmp
in
jmp
xchg
out
pop
and
ja
pop
xchg
mov
movsl
es
jmp
xorb
outsl
decb
add
mov
sbb
and
xor
xchg
add
int
imul
mov
decb
mov
loopne
aam
incl
and
addb
pop
cwtl
clc
sbb
fs
adcb
les
cmp
mov
or
add
subb
rcr
pop
pushf
add
test
inc
cmp
xorb
popa
cmp
ja
mov
outsl
add
or
dec
mov
and
mov
mov
aam
add
add
arpl
in
sarl
cwtl
divl
inc
repz
xor
or
pop
add
lock
mov
int
js
call
mov
fsubrl
les
and
push
mov
fiadds
movsb
adc
lret
pop
int
shlb
loope
je
add
cmp
xlat
insl
dec
in
add
pusha
lds
or
add
dec
fidivrs
insl
mov
add
test
pop
pop
cmpsl
movsb
adc
add
xchg
or
xchg
insb
fstps
and
pop
jmp
in
movb
push
push
xorb
movsl
push
pop
pop
jl
lret
and
mov
jne
sbb
xchg
adc
push
and
jl
cli
repz
shlb
lret
inc
loope,pt
sahf
test
orl
stc
or
xor
imul
das
add
out
loopne
inc
or
push
je
xor
push
dec
pop
sbb
lods
mov
inc
adc
pop
incl
rcrb
inc
xchg
addr16
cmp
dec
mov
cmp
sub
scas
mov
jl
mov
mov
loop
test
cmp
insb
mov
jns
mov
pusha
add
pop
xlat
add
fcmovbe
cmp
aas
or
push
push
jle
and
ret
or
pop
fiadds
sbb
xchg
aad
out
sti
pop
add
or
inc
inc
xchg
add
jne
in
add
xchg
add
lahf
shrl
leave
aad
xor
movsl
arpl
loope
pop
mov
cmp
fadds
nop
lret
cmp
push
xchg
mov
add
aaa
in
mov
popf
addb
inc
lods
mov
inc
push
in
loop
jb
repz
dec
sarb
jp
add
adc
add
cmp
stos
xorl
test
lcall
stos
add
push
mov
sub
mov
clc
xchg
test
cli
or
pop
mov
jmp
movl
push
inc
push
inc
jno
out
andb
and
sbb
mov
dec
scas
fst
add
or
sarb
add
es
out
add
mov
or
add
push
mov
lock
xor
add
sbb
add
pop
andl
cld
jo
outsb
add
lods
les
ret
dec
add
add
scas
addb
out
xor
pop
add
add
test
rol
add
jge,pt
in
enter
cmp
push
stos
dec
loopne
or
sbb
jb
or
jg
rclb
adc
shlb
rcll
xchg
add
push
push
in
aas
aas
xorl
loope
or
push
das
lcall
mov
aaa
mov
cmpsl
movsb
add
inc
add
ds
pop
popa
xchg
int
inc
movsb
insb
push
or
gs
fcompl
adc
xor
rolb
cmp
push
and
sub
pop
insl
add
testb
test
inc
pop
sbb
lret
jne
push
pop
test
or
mov
add
or
xchg
jnp
and
imul
dec
cwtl
subb
pop
nop
xorl
dec
add
ds
adc
add
jle
add
sub
and
inc
jmp
pop
and
inc
rolb
cmpsb
mov
hlt
faddl
sub
jo
add
cmp
mov
neg
mov
mov
mov
cwtl
repnz
sahf
cmp
add
sbb
shr
mov
or
dec
mov
add
xchg
into
pop
aaa
nop
fsubrs
mov
xchg
js
scas
mov
popf
or
xchg
jge
ficoms
push
inc
xor
cmp
dec
add
lock
scas
out
xor
lret
add
cmp
and
test
in
add
xchg
fldcw
mov
add
in
je
push
shlb
mull
add
movsl
das
dec
leave
sub
sub
add
fistpl
aaa
pusha
push
repnz
jmp
sub
sbb
push
ret
add
ret
and
xor
into
add
cmp
mov
lods
cmp
in
sub
xor
add
jne
dec
loop
nop
pmaddwd
andb
outsl
mov
ret
mov
and
sbb
sbb
cwtl
add
inc
into
mov
xchg
mov
adc
hlt
jge
mov
adc
mov
call
cmp
sbb
jno
or
fbld
add
mov
jnp
out
mov
add
pop
stos
inc
jg
jmp
and
iret
bound
test
jl
loop
pushf
loopne
inc
mov
in
popf
faddl
stc
movsl
int
xchg
out
mov
lret
adc
sbb
int3
sub
inc
xchg
mov
mov
xchg
mov
mov
sbb
add
sbb
mov
je
add
mov
and
test
add
pop
or
xor
div
cs
cmc
das
idiv
mov
fbstp
sahf
in
xor
inc
imul
dec
add
push
sub
aas
pop
jg
push
or
and
lock
push
xor
cld
dec
or
popf
xchg
or
stos
in
and
add
inc
xchg
pushf
daa
out
adc
sarl
test
add
call
decl
push
cwtl
push
mov
xchg
pop
das
cmpb
daa
pop
pop
adc
or
cltd
xchg
in
cmp
outsl
mov
dec
jnp
inc
aas
orb
in
push
daa
lret
push
lock
pop
pusha
lret
pop
in
jle
fadd
xchg
pop
test
dec
sub
dec
or
xor
movsb
add
mov
lock
filds
fidivs
lret
add
in
orb
add
cld
xchg
neg
adc
add
mov
push
pop
rorl
adc
cli
in
filds
imul
mov
call
add
aaa
push
insl
pop
adc
call
mov
loopne
out
push
fisubs
push
add
pop
cmp
jmp
repz
flds
insl
add
test
sub
inc
sbb
out
add
jo
mov
jns
hlt
enter
and
cmp
arpl
fs
dec
mov
xchg
cmp
sub
xchg
pusha
sub
sbb
pushf
add
mov
je
jo
das
mov
adc
push
jl
add
and
stos
add
cmp
jo
mov
add
jge
push
or
stc
jg
xorb
or
outsl
mov
mov
sti
xchg
add
int
cmp
push
pop
pop
flds
fstpt
jae
add
pop
adc
cmpb
call
in
dec
jno
leave
cmp
mulb
fdivr
ds
and
popa
ret
add
inc
sbb
xchg
pop
in
add
lods
shl
jp
add
push
pop
sub
xchg
fwait
loopne
cmp
adc
in
mov
leave
in
or
or
xor
mov
add
leave
loope
xchg
pop
mov
cmp
imul
frstor
ja
xorb
push
scas
push
ljmp
and
jge
xchg
cld
popf
and
lret
aad
faddp
clc
jge
jle
fwait
cwtl
js
dec
jo
js
and
add
inc
daa
out
sti
scas
add
pop
sbb
add
andl
icebp
dec
xlat
jns
or
testb
push
add
out
mov
ja
dec
cmc
fldcw
sub
add
je
pop
inc
int3
cmp
add
mov
mov
pushf
test
enter
adc
xchg
pusha
add
cld
call
add
cmp
test
jns
nop
sub
or
fadd
cmp
orb
pop
add
inc
and
pop
test
push
fs
cwtd
movsl
lods
imul
call
push
or
push
adcb
adc
add
push
pop
imul
orb
push
andb
add
mov
cmp
jl
push
dec
adc
mov
lret
lahf
mov
mov
add
iret
push
dec
sbb
cwtl
xor
or
and
mov
cld
add
addr16
add
int3
dec
aas
fiadds
lock
cwtl
push
jae
ds
mov
add
sub
pop
or
add
arpl
lds
inc
insl
imul
xchg
push
imul
jo
xor
repnz
push
pusha
mov
sub
or
xor
pushf
lock
mov
add
ret
jg
sarb
adc
ret
mov
fbld
sbb
sahf
fcomps
adc
mov
insl
popf
pop
je
test
add
pop
rcrb
add
mov
xlat
xor
add
push
int3
cmp
push
add
xchg
stc
int
scas
add
dec
ds
adc
mov
xorl
pop
shlb
into
ljmp
pop
jecxz
mov
cld
lret
icebp
pop
sbbl
lods
xor
push
dec
test
lcall
inc
mov
cmpsb
pop
and
sbb
call
dec
inc
add
mov
dec
sbb
sti
pop
add
jl
xchg
add
iret
lret
add
leave
stos
add
sarb
lret
imul
mov
cltd
and
add
rclb
fldcw
call
xchg
sbbb
arpl
adc
inc
rolb
in
std
xchg
aas
add
and
jnp
mov
mov
rcl
je
lea
mov
jno
xchg
mov
cmp
sub
pop
mov
cmc
lock
mov
xor
pop
lcall
dec
pusha
pop
insl
or
enter
sub
int3
stc
add
push
pop
outsb
test
fistpll
rcr
xchg
lock
inc
dec
int
in
loopne
call
ljmp
and
mov
mov
shll
mov
or
xor
and
into
dec
scas
rclb
movl
and
dec
data16
ds
add
call
inc
mov
adc
cmpsl
mov
out
aas
aam
sub
add
xchg
ret
shl
lock
adc
adc
add
adc
adc
add
in
rcr
popa
sbb
std
nop
push
mov
nop
mov
stc
scas
push
xchg
mov
xor
das
xchg
mov
add
xor
sub
aad
xlat
fdivr
add
stos
in
inc
rcr
out
add
push
ja
inc
enter
mov
scas
js
cld
add
push
test
inc
gs
xchg
jmp
push
icebp
jne
push
dec
mov
jno
movsl
push
add
inc
sub
pushf
clc
sub
pusha
daa
jnp
mov
sub
cmpsl
loope
sbb
out
cmpb
mov
cmc
shll
cvtdq2ps
incb
dec
lock
add
or
push
mov
ret
add
pop
push
pop
dec
add
push
popf
out
sbb
xchg
lods
ljmp
aam
imull
aaa
cwtl
inc
xchg
push
fisttpl
add
ret
mov
and
jb
add
mov
mov
xchg
push
je
lret
add
cltd
push
shr
jle
pop
pop
xchg
repz
cwtl
sub
add
pop
out
sbbb
lods
scas
jae
push
jnp
add
cld
int
mull
xor
add
push
loop
add
mov
les
adc
jg
jmp
enter
pand
dec
mov
xchg
cwtl
xchg
push
dec
inc
pusha
hlt
inc
into
test
mov
cmp
cmp
xchg
jge
lcall
movsb
mov
pop
test
pusha
leave
cld
out
outsl
add
mov
and
add
sbb
or
nop
and
xor
push
sbb
pop
jp
add
mov
mov
fisubrs
ss
add
cmp
test
stc
xchg
test
aad
scas
pop
adc
jns
add
mov
shrb
push
mov
cmc
push
jno
push
xchg
pop
fwait
add
repnz
cld
ds
adc
pop
mov
pop
mov
inc
xchg
add
xor
sub
mov
decb
jne
jecxz
fbld
je
add
add
mov
sub
mov
adc
mov
adc
add
jo,pn
scas
sti
nop
or
js
daa
outsl
fsts
sbb
cmpl
fiadds
out
add
inc
add
or
popf
in
inc
and
mov
movsb
je
add
icebp
sbb
ja
leave
or
test
shll
cltd
movsl
jae
cli
std
mov
or
add
cmp
insl
outsb
lods
adc
lods
insb
xchg
push
add
aad
mov
rcrb
xor
push
fsubl
add
mov
push
js
cmp
dec
pop
scas
mov
out
push
mov
in
scas
fsub
inc
add
add
xchg
add
adc
outsb
sbb
scas
lods
imul
jecxz
movsb
cmp
lret
dec
js
ljmp
scas
and
cmp
call
add
add
add
ja
insl
addr16
mov
cmpsb
es
sbbb
movsb
add
inc
adc
icebp
loop
and
sub
filds
push
lock
mov
out
jnp
adc
les
mull
xor
arpl
mov
int3
add
cmp
push
push
es
add
jb
or
inc
add
subl
add
add
cmp
out
fistl
mov
sbb
ret
cmp
movaps
sub
nop
hlt
xchg
cld
rorl
sbb
lods
inc
sbb
jns
add
imul
das
sub
add
and
push
dec
add
cli
add
add
sub
pop
push
sbbb
add
mov
pop
addb
add
pop
xchg
ljmp
mov
xor
jmp
push
pusha
insb
daa
out
cld
add
and
mov
add
lods
or
push
push
ds
mov
fs
jmp
add
pop
sbb
mov
loop
add
mov
add
dec
out
and
add
es
jp
into
jmp
jmp
add
test
je
add
loopne
xlat
dec
mov
nop
jl
addl
xchg
lahf
mov
sub
mov
push
mov
mov
sti
xchg
or
arpl
or
iret
leave
add
insb
jmp
mov
loopne
push
sub
dec
test
push
jge
add
cmpsl
and
lret
push
add
shlb
in
daa
jmp
je
shll
idivl
imul
sbb
call
popa
cmp
cmpsl
jmp
xchg
loopne
pop
adc
mov
add
call
add
mov
jae
add
add
lahf
sbb
or
sub
xchg
inc
push
pop
inc
data16
loope
mov
pop
or
jnp
add
push
imul
arpl
jo
add
mov
add
mov
mov
add
pusha
adc
test
jge
mov
loopne
mov
rcrb
imull
shrb
and
mov
loop
push
stos
icebp
adc
adc
lret
push
mov
add
cmp
add
mov
ljmp
pop
add
out
arpl
scas
aas
add
mov
jg
cli
mov
add
lea
pop
jnp
pusha
sbb
xor
pop
add
adc
or
cli
add
popa
test
xor
and
loop
lahf
clc
aam
leave
cmp
add
in
outsl
add
add
or
jg
divb
add
rolb
pop
ss
dec
lods
xchg
pop
add
xchg
inc
icebp
sbb
loopne,pt
ret
inc
push
dec
mov
mov
push
clc
out
out
fistpl
jmp
pop
loopne
mov
ja
pop
ret
inc
insb
push
punpckldq
sub
mov
aaa
in
cmpsb
or
xor
lods
add
pop
shl
dec
ja
bound
lds
push
adc
add
jle,pt
loop
cmc
cld
pop
sti
add
sub
xchg
test
and
push
xor
scas
sbb
add
add
shr
in
jb
add
adc
hlt
sub
and
or
pop
inc
ficoms
aam
add
fcmovb
sub
int3
mov
jo
rol
aad
cli
or
push
fisubl
cmp
mov
jmp
dec
fbld
pop
jmp
xchg
js
add
dec
inc
jp
in
aas
jno
push
inc
loop
dec
insl
mov
arpl
mov
pop
mov
pop
cli
add
or
xor
add
xchg
fcompl
int3
fcomps
rolb
addb
jecxz
push
loopne
and
xorl
mov
add
sub
aad
aam
inc
arpl
sub
add
push
add
test
je
enter
stc
mov
mov
lock
in
add
dec
scas
mov
lahf
xchg
add
sbb
in
sti
lock
leave
in
shl
js
scas
pop
and
add
or
sarb
and
pop
add
mov
adc
dec
int3
cli
and
sub
xchg
or
test
js
clc
mov
cmp
pop
dec
push
xchg
nop
push
xchg
sub
lahf
sub
int
push
iret
add
je
cli
movsl
add
sti
mov
add
add
stos
repz
sbb
mov
test
xor
mov
add
mov
inc
jl
fimuls
in
sar
lods
add
sti
sbb
out
xor
sbb
cmp
mov
sub
movsl
cmp
popa
stc
in
stos
pop
push
cli
dec
in
add
mov
add
add
sub
mov
cld
cwtl
imul
push
pusha
sub
mov
sbb
adc
and
js
add
xor
mov
sub
test
xor
sbb
xor
aad
rcr
loopne
or
jo
shlb
sbbb
in
cmp
out
lcall
pop
mov
mov
repnz
cmp
fwait
push
xor
cld
test
jp
add
lds
sar
test
inc
jns
push
adc
push
push
jge
pusha
scas
add
push
mov
jbe
mov
cmc
std
pop
cld
cmp
jb
mov
loopne
stos
int3
mov
jge
add
cltd
xor
mov
pop
rorb
add
adc
xchg
lret
inc
hlt
out
or
loop
or
push
push
pop
push
and
add
mov
mov
jp
rcrb
pop
enter
add
pop
jnp
imul
iret
mov
xchg
rcrb
cmc
push
mov
add
mov
cli
xchg
add
xlat
push
sub
and
add
mov
add
adc
cmpb
or
mov
dec
add
push
pop
scas
pop
xchg
call
jle
adc
xor
cs
aas
sbb
int3
hlt
stos
jp
ja
add
popf
cwtl
adc
fs
mov
sbb
imul
cmpsb
movsb
popa
inc
and
adc
lds
or
les
ss
shrb
shlb
adc
sbb
push
mov
loopne
add
test
add
ss
inc
mov
push
adc
jle
cmp
inc
sub
es
popf
pop
rcrl
dec
sbb
xchg
shlb
arpl
pop
lret
and
push
mov
fldl
cmp
and
fs
push
rolb
jl
lock
jbe
or
dec
xchg
cld
cmp
push
xor
and
add
push
mov
andb
popf
loopne
add
fbld
mov
repz
mov
pusha
push
les
and
jge
mov
sbb
andl
add
out
xchg
add
mov
repnz
lret
ds
inc
xchg
test
imul
add
xor
cmp
push
adcb
inc
pop
add
mov
repnz
pusha
xor
mov
inc
push
lea
push
fwait
mov
push
idivl
xor
pop
inc
cmp
inc
mov
xor
mov
mov
pop
mov
jecxz
stos
subl
std
cmp
xor
lods
push
in
gs
and
mov
xchg
xorl
es
lret
xchg
mov
inc
clc
cli
add
adc
adc
adc
mov
das
dec
xchg
aam
mov
sbbb
inc
fwait
popa
cmp
cmp
mov
repz
fstpt
out
es
push
call
mov
mov
jecxz
mov
jne
mov
sub
cmp
inc
pop
pop
mov
negb
xor
insl
loopne
xchg
add
or
out
jno
filds
inc
fneni(8087
into
push
ss
mov
add
arpl
lock
cld
jmp
dec
push
push
mov
lods
jnp
ljmp
mov
ds
jg
bound
xchg
lret
and
je
inc
mov
cmp
repz
and
pop
cli
mov
mov
or
pop
int3
das
cmp
pop
add
adc
push
jge
scas
jmp
test
ss
add
mov
dec
out
add
pop
add
push
scas
mov
adc
jg
or
or
pop
dec
push
pop
and
mov
and
push
add
dec
cltd
cmp
cmp
xchg
sti
pop
jle
or
mov
cmpsl
add
cli
pop
adc
add
in
mov
int
xor
pop
add
lock
mov
inc
fs
pop
or
scas
hlt
pop
shrb
mov
mov
fsubrs
mov
leave
out
jb
or
and
sbb
out
or
fldt
and
sbb
jle
add
stos
jg
cmp
add
push
testb
mov
test
clc
inc
ljmp
inc
js
cmp
xor
cmp
imul
mov
fiaddl
shl
add
icebp
int3
add
jns
cmp
int
in
ret
push
scas
fmull
es
lock
and
sub
sbb
loopne
mov
sbb
add
mov
inc
add
adc
push
jb
add
clc
sub
scas
out
or
mov
rcrb
add
sub
in
dec
faddl
pop
into
test
loopne
mov
je
ljmp
mov
mov
jecxz
cmpsl
and
mov
lock
hlt
add
clc
pop
mov
push
xor
add
cmp
add
nop
rolb
add
cwtl
inc
fwait
dec
mov
loopne
add
adc
cli
sub
hlt
add
jno
shlb
add
incl
pop
inc
push
mov
inc
cld
outsl
stos
inc
or
jmp
loopne
add
jge
pop
push
add
xor
mov
push
or
movsb
inc
or
sub
mov
push
in
faddl
imul
lret
or
push
pop
push
push
and
shlb
jg
repnz
cmc
and
push
stos
out
scas
pop
lahf
cmp
pop
and
iret
cwtl
xor
sub
jbe
jne
dec
push
cltd
push
clc
outsl
pop
and
mov
mov
adc
or
out
std
inc
mov
adc
pop
add
fmull
add
xor
xor
imul
push
sbb
ja
sub
ret
int3
lcall
les
add
subb
nop
xor
in
sub
inc
in
adcl
rol
fdivrl
push
hlt
add
add
out
push
adc
jno
sub
inc
inc
inc
sub
push
mov
dec
sub
sub
sub
inc
xchg
cmp
fadds
mov
testl
push
lea
inc
cltd
push
push
pop
adc
div
lret
into
jne
int
jmp
mov
add
sub
add
daa
sbb
notl
jp
pop
test
lcall
rolb
mov
cwtl
mov
jle
add
mov
inc
xlat
mov
mov
in
outsb
and
lret
push
dec
mov
mov
xchg
jle
stos
xor
dec
and
jg
add
test
xor
mov
loop
or
stos
sub
movsb
sbb
inc
pushl
sbb
mov
inc
inc
jmp
push
arpl
or
rol
xchg
dec
in
clc
add
ljmp
sub
jmp
jo
pop
insl
push
add
arpl
or
es
mov
lcall
in
mov
add
jo
rclb
inc
call
push
ljmp
pop
es
add
mov
mov
cs
push
scas
or
or
add
xchg
shrb
dec
sub
jae
add
jns
and
jecxz
cmp
push
in
fcompl
test
sub
cmp
cwtl
aad
out
stc
negl
imul
aam
stos
cwtl
or
imul
loop
stos
shlb
mov
inc
cmp
push
mov
cmp
ss
push
insb
adc
nop
decb
fwait
bound
fcomps
js
or
cmp
and
pop
jge
add
mov
lock
sub
xchg
xlat
add
cmpsl
fwait
pusha
cmovo
lock
adc
xorb
pushf
add
mov
push
mov
cltd
add
movsb
jne
inc
subl
add
xlat
push
outsb
pop
into
test
cwtl
shll
pop
mov
mov
shlb
test
pop
add
mulb
xor
jle
inc
add
xor
movsl
or
jl
adc
sarl
push
out
lds
pusha
cs
xchg
bound
cwtl
xchg
or
add
sahf
inc
imul
adc
add
sbbl
popa
imul
push
out
leave
add
adc
and
adc
adc
xchg
rclb
dec
xchg
adc
xchg
push
mov
push
mov
add
mov
push
movsl
cmpb
cmp
hlt
add
ss
and
pop
add
insb
jle
enter
add
sbb
cld
and
add
pop
loop
add
nop
mov
mov
or
mov
imul
dec
sub
enter
pop
arpl
nop
pop
test
xor
outsb
xchg
pop
add
psrlq
mov
mov
sbb
add
enter
push
shll
pusha
mov
add
insb
pusha
nop
adc
test
and
xor
xchg
inc
mov
shrb
scas
rorb
nop
stc
fidivl
jno
add
mov
xchg
cwtl
or
cmp
clc
movsb
jns
xor
inc
or
or
push
cltd
mov
cld
mov
mov
pop
xor
cmpb
mov
leave
outsl
mov
pop
add
cmc
xchg
mov
push
inc
int3
mov
xchg
int
xor
jae
add
xchg
aaa
loope
sbb
push
fwait
mov
sbb
adc
std
sti
nop
popa
adc
orb
cwtl
cmp
dec
add
call
adc
push
inc
pop
cmp
adc
xchg
mov
lods
push
mov
fwait
jecxz
sti
fsubrl
in
nop
sbb
pop
cs
testl
notb
cmpl
mov
test
inc
out
rorb
adc
push
jo
mov
cmc
and
pop
aam
test
dec
lret
add
insl
sub
pop
repnz
mov
mov
push
push
lods
lock
test
jmp
xor
mov
pop
mov
das
ds
pop
into
cmp
push
push
test
cmp
rcrl
idiv
fldenv
mov
xchg
inc
inc
sti
loope
pop
lret
xor
rcrb
sbb
pop
add
or
cmp
lds
mov
mov
outsb
sub
adc
fbld
mov
std
cmp
jnp
push
jg
xchg
xchg
clc
xchg
mov
adc
das
addr16
pop
xchg
aad
mov
or
sbb
add
rolb
lods
or
dec
repnz
fadds
cmp
rcll
add
xlat
outsb
data16
push
inc
inc
jl
nop
cld
inc
das
and
stc
adc
outsl
cmp
xchg
add
push
outsb
inc
sbb
inc
mov
cmp
xchg
movsb
or
cmpb
push
pop
add
ss
push
fstpl
scas
arpl
fincstp
lea
jns
idivb
or
mov
roll
lds
les
add
jo
data16
clc
outsb
mov
inc
sbb
add
mov
mov
mov
mov
inc
jl
dec
sbbb
movsb
sbb
sub
inc
add
pusha
add
sub
testb
std
adc
adc
cltd
mov
bound
jbe
ljmp
cs
in
fs
jecxz
cwtl
push
sub
negl
inc
int
push
add
push
or
adc
push
loopne
movsl
das
and
daa
lahf
or
pop
clc
cltd
and
xor
bound
pop
ljmp
sahf
sub
add
mov
cmp
sub
xor
push
xchg
inc
outsl
outsb
and
inc
jmp
mov
add
add
sbb
mov
sub
cmc
bound
jo
pop
shlb
mov
push
rorb
fstps
popa
repz
scas
call
in
in
push
int3
jns
sbb
sbb
adc
or
mov
pop
pusha
sub
adc
insl
inc
pop
loope
fsubs
xchg
das
mov
ret
sbb
dec
sub
mov
divl
nop
cmp
mov
shlb
add
stos
adc
sbb
les
fucom
add
pusha
test
mov
add
cld
inc
mov
add
jo
mov
test
pop
leave
pop
adc
mov
xor
stos
fistps
ret
hlt
sub
movsb
dec
fsubrs
adc
push
loope
fwait
jg
pop
mov
into
test
xchg
push
add
pop
int3
xor
xor
xchg
into
mov
pop
jecxz
loope
xchg
mov
sbb
scas
js
xor
xchg
fadds
test
icebp
ret
fisttpll
or
push
in
cmp
cmpsl
pusha
shl
out
fistpll
sub
bound
insl
push
adc
inc
mov
sbb
fadds
addb
jg
add
or
cmc
loopne
pop
push
cltd
adc
cld
push
push
jnp
movsl
push
xchg
push
cmpl
lret
lods
jno
push
or
fadds
jecxz
mov
dec
pop
sub
xor
sbb
add
pop
lock
fiaddl
sbb
xlat
sarb
push
ss
not
jnp
adc
adc
shll
add
out
lcall
xchg
stc
in
inc
push
orb
mov
icebp
nop
inc
sarb
faddp
sub
rorl
sbb
or
clc
xlat
xchg
push
mov
insl
out
add
movsb
je
loop
ret
sti
adc
jae
mov
icebp
add
lcall
paddusw
add
lods
and
js
cmp
fnstcw
sarl
pop
leave
mov
or
sbb
xchg
enter
ds
leave
pop
outsl
pop
sbb
into
cmc
cli
out
pop
mov
ror
inc
adc
test
mov
popa
icebp
pushf
add
gs
lock
xchg
pop
pop
int3
orl
ds
push
lds
jnp
sub
cmp
xlat
jle
bound
shlb
enter
push
jecxz
outsb
mov
jae
je
xor
push
pop
cmp
dec
push
stos
add
pushf
loopne
jbe
pusha
pop
pusha
lea
xor
adc
jo
fcomps
pop
testb
cmc
push
mov
lcall
push
mov
arpl
pusha
pop
flds
add
xchg
xchg
ss
and
inc
test
or
jns
mov
mov
xchg
and
sbb
or
movsl
inc
mov
lcall
or
sub
pushf
add
cwtl
negl
adc
mov
cmp
or
xchg
xor
icebp
scas
aaa
mov
dec
cmc
adc
xor
pusha
jecxz
andb
out
scas
aam
iret
jmp
mov
cmp
add
push
add
and
insl
dec
ret
cmp
lds
jae
faddl
mov
pop
dec
xor
lock
mov
pusha
mov
or
std
ja
pushf
pause
jge
add
sub
sbb
lods
movsb
and
ja
add
lds
and
leave
adc
ret
mov
add
add
movsl
popl
rorl
lea
mov
sbb
or
inc
mov
adc
sbb
cmpsl
xorb
or
pop
xchg
prefetchwt1
fists
dec
in
push
inc
stos
cld
push
addr16
roll
dec
shrl
push
mov
xchg
sbb
mov
popf
and
enter
mov
xor
and
jno
mov
lret
add
or
and
jnp
jo
mov
or
or
mov
xorb
pushf
gs
mov
jbe
inc
and
cmpsl
xchg
or
sbb
lahf
push
and
jg
pop
out
adc
cmp
sbb
xor
test
xchg
in
add
inc
jns
es
mov
adc
pop
ja
sub
add
mov
sbbb
add
repz
data16
test
or
sbb
outsl
pop
mov
mov
int
clc
add
mov
push
push
movsb
pop
popaw
fadds
pop
inc
and
movsbl
jno
lods
push
cmp
pop
shll
mov
fs
sub
or
aam
add
cs
lahf
rol
out
test
sti
sub
add
fldt
add
mov
cmc
jl
es
imul
pop
xor
sbb
xchg
and
jns
jae
adc
adc
popf
add
mov
inc
and
movsb
cli
cmp
sbb
shrb
add
int3
rolb
jbe
ds
insb
jns
lret
js
or
enter
sbb
or
cltd
adc
cwtl
sub
ljmp
loop
mov
mov
fwait
add
cmp
jg
clc
shl
xchg
jl
sub
inc
movsl
jb
push
sub
outsb
jmp
xchg
rcrl
in
mov
mov
pop
adc
add
aaa
icebp
inc
push
xchg
jnp
repz
xchg
sarb
dec
cmp
inc
adc
jne
outsb
pop
add
ss
push
outsl
in
mov
adc
scas
lea
out
mov
imul
out
mov
subl
clc
bound
jae
int3
lock
pushf
adc
add
xchg
adc
xchg
pop
shlb
stc
ljmp
imul
adc
aad
cmp
repz
dec
fnstsw
inc
pop
mov
add
add
and
sbb
add
add
lods
and
mov
fldenv
cmp
clc
arpl
xor
int
out
jns
xchg
and
dec
or
loopne
xchg
cmp
cmc
addb
sti
pusha
lock
xor
and
lods
inc
cmpsb
add
pop
mov
dec
pop
dec
sti
mov
or
dec
jne
cltd
push
add
out
sub
inc
push
js
adc
sbb
jp
lods
and
sbb
mov
mov
mov
jo
daa
bts
mov
clc
mov
pop
cmc
xchg
pxor
inc
inc
addb
js
cmp
sub
adc
adcb
scas
andps
scas
mov
mov
or
movsb
orl
hlt
ljmp
mov
shll
adcb
sbb
and
std
aad
dec
rcrb
pop
inc
icebp
adc
repz
repnz
ja
les
mov
cltd
xor
add
jge
call
fmulp
cmp
xor
xchg
int
lock
or
cli
and
mov
add
or
cmpsl
adc
scas
into
test
imul
packuswb
push
pop
jns
lds
dec
cmpsl
enter
imul
enter
popa
push
add
les
cmp
lds
inc
testl
or
aad
adc
ds
pop
sbb
xchg
dec
push
inc
push
notb
ds
mov
and
cmp
cltd
movsb
dec
sub
push
rolb
movsb
and
js
push
xor
add
ja
cmp
enter
and
test
or
shll
mov
pop
mov
add
sahf
sbb
sti
xor
ret
sbb
mov
lret
add
sbb
mov
shll
mov
int
sub
cld
add
xor
sbb
aam
inc
test
xchg
fadds
out
pop
push
xchg
scas
cltd
cltd
pushf
xchg
xor
in
hlt
lcall
add
clts
pop
rolb
test
outsl
mov
sub
out
cmc
or
mov
dec
nop
cld
fcomps
cmp
imul
dec
mov
adc
rcrb
and
es
scas
addr16
subb
out
dec
call
cwtl
lods
and
xchg
or
stos
mov
fnstcw
les
mov
push
sbb
test
push
xchg
test
mov
or
push
iretw
out
dec
mov
int3
add
add
in
test
arpl
or
leave
int3
shll
add
sbb
sub
xorb
pop
push
and
adc
xchg
and
jl
outsl
sti
cmp
addb
das
aam
dec
stos
das
clc
and
out
sbb
or
cmc
add
sbb
test
mov
mov
jp
push
sub
mov
inc
jge
mov
shrb
fnstsw
and
push
cmp
pop
fnstenv
pop
test
bound
add
push
cld
sti
add
push
insl
icebp
scas
adc
adc
sub
push
ret
repnz
sub
into
or
pop
xchg
mov
adc
push
sbb
jne
je
cmp
or
add
stos
add
call
mov
out
hlt
lret
and
dec
out
jp
iret
lcall
dec
add
and
in
pusha
jmp
inc
cmp
jp
test
fildl
je
test
push
dec
and
inc
jb
cmp
adc
cld
sbb
and
add
add
add
lret
add
loop
mov
leave
mov
fs
dec
loopne
jp
jns
sub
stos
inc
pushf
xor
dec
and
inc
fsub
add
test
or
addr16
add
xchg
sahf
insb
add
lret
adc
cs
sti
xchg
sbb
inc
in
or
outsl
daa
mov
inc
inc
mov
hlt
jmp
and
loop
or
mov
mov
push
xor
adc
mov
mov
sbb
scas
pop
or
cmp
mov
nop
rolb
pop
fidivs
jo
out
mov
fs
pop
int3
icebp
cmp
movsl
pop
jp
sbb
cmp
test
inc
adc
add
cmp
and
mov
push
sbb
adcl
lods
or
jbe
psubw
repz
xchg
dec
lods
add
leave
jl
dec
movl
cmp
add
cmc
inc
and
pop
sbb
adc
pop
add
rorl
sbb
pop
sbb
lods
call
rcrl
inc
add
xchg
pop
std
dec
dec
mov
inc
lret
mov
stos
sbb
enterw
add
les
inc
fsubl
loop
add
or
add
repz
xchg
push
xchg
mov
and
push
xchg
hlt
nop
and
mov
xor
mov
lods
sbb
test
sbb
sub
sub
repnz
mov
testl
shr
adc
jo
mov
jmp
jno
adc
fdivrs
mov
pop
add
mov
adc
cmp
or
mov
push
scas
sub
outsl
jae
inc
cmpsl
mov
in
data16
shlb
dec
jne
sbb
mov
mov
out
fs
fidivrl
outsb
sarl
andb
mov
test
xor
addl
and
clc
mov
nop
filds
sbb
out
pop
and
mov
test
or
mov
add
sbb
call
fldenv
xchg
xchg
mov
lods
movsl
in
dec
js
jle
cmp
fmuls
test
sub
or
xchg
jb
adc
mov
pop
int3
or
sub
les
pusha
popf
pop
dec
add
jb
insb
and
jb
cld
lods
add
orl
xor
test
xchg
jp
stc
add
insb
ret
push
sub
gs
int3
cmp
add
xchg
in
adc
shll
push
pusha
mov
test
push
test
adc
xchg
mov
ficoms
cmp
cmp
add
add
xchg
data16
vpshlw
mov
mov
add
js
movsl
cld
cmc
inc
push
into
addr16
ja
sub
or
lret
dec
mov
xchg
mov
into
mov
add
pop
in
data16
and
fwait
mov
xchg
pop
xchg
adc
push
add
bound
xor
push
mov
pop
into
bound
inc
pop
or
cmp
xchg
shlb
inc
mov
adc
adc
cwtl
mov
scas
push
sub
clc
adc
or
xchg
pop
fs
sbb
jecxz
adc
jne
cmpb
push
les
test
pop
lock
pop
ds
mov
add
mov
lods
loope
andb
hlt
ficomps
xchg
aas
jbe
add
rorb
sbb
mov
push
and
jbe
rorl
dec
inc
int3
mov
push
jns
pop
adc
aam
push
jb
adc
jge
enter
adc
pop
in
add
loop
shrb
mov
xor
pop
inc
hlt
sbb
add
push
and
adc
in
test
fs
xchg
pushf
pop
inc
mov
inc
jmp
out
dec
inc
or
fbld
mov
adc
in
mov
jb
sahf
mov
test
add
int
insb
das
fdivs
add
loope
inc
xchg
cmp
xchg
sbb
arpl
mov
lods
mov
mov
inc
jo
repnz
test
clc
test
test
ror
pop
adc
inc
in
out
out
mov
aas
fsub
and
add
in
hlt
push
inc
mov
rolb
cmpsl
ror
mov
popa
xor
gs
mov
cmpsl
push
jbe
inc
rclb
or
mov
sub
mov
push
cltd
or
mov
pushf
add
xor
clc
gs
mov
inc
cmp
ds
es
add
lock
mov
sbb
jg
add
pop
dec
jp
stos
adc
inc
jo
std
daa
or
push
int
add
inc
and
test
mov
icebp
popa
xor
faddl
pop
int
sub
jmp
xor
ret
shlb
popa
jne
fs
test
fnstcw
ja
add
mov
jl
lods
jmp
pop
and
mov
andb
stos
mov
dec
mov
or
test
aam
dec
push
cwtl
lret
ror
mov
jb
sbb
ds
testb
idivl
push
stc
repz
xchg
jl
or
icebp
rol
xchg
clc
shll
sbb
dec
xcrypt-ctr
cmpsl
fidivs
jmp
push
add
fldl
xor
aad
dec
das
lods
orb
push
je
add
pop
xchg
add
mov
lods
mov
xchg
and
out
and
mov
mov
xchg
sahf
movsb
inc
cmp
xchg
repz
mov
pop
addb
adc
mov
mov
mov
jmp
cmpl
add
jae
xchg
loopne,pt
dec
ret
xchg
mov
mov
inc
push
and
jae
pop
lret
mov
push
sbb
inc
test
pop
pusha
lods
mov
push
fstpl
movsb
jp
xchg
and
in
add
leave
or
pop
faddl
fdivs
jl
subl
dec
mov
rcr
test
es
add
cs
sub
lea
sbb
lods
or
jl
mov
or
mov
xchg
mov
mov
hlt
inc
inc
mov
stos
jbe
xchg
clc
fcomi
rcll
rclb
inc
and
cmp
dec
movaps
jb
mov
sub
inc
rcrb
lret
xchg
loopne
daa
andb
push
repnz
std
enter
mov
adc
repz
cmpsb
stos
xor
lods
mov
push
ja
hlt
sti
insb
sar
push
mov
or
adc
xchg
add
stos
push
or
cli
sub
adc
clc
sub
mov
lahf
ljmp
js
push
xchg
dec
daa
movsb
jno
dec
xchg
in
rorl
sahf
shll
lea
sub
mov
jne
cwtl
pop
and
adc
cmp
inc
je
jns
pop
and
jae
std
or
xchg
adc
dec
and
dec
arpl
mov
add
mov
data16
inc
aam
rcrl
inc
mov
sbb
mov
xchg
test
lcall
push
xchg
mov
add
scas
lahf
clc
and
mov
sub
adc
inc
fldl
lret
xchg
sbbb
mov
filds
dec
call
adc
int3
fdiv
popa
and
inc
clc
int
xor
loope
fwait
shlb
insb
repnz
dec
sub
sbb
dec
xchg
cmp
shl
jbe
xchg
mov
fs
arpl
test
stos
cmc
or
xchg
sub
sti
sbb
mov
and
mov
pushf
sub
frndint
inc
je
mov
cmp
mov
aam
or
dec
mov
jnp
or
repz
sbb
adc
out
fs
pushf
xchg
loopne
out
xor
cli
lock
test
movsl
clc
hlt
ret
pop
sbb
scas
gs
cli
js
dec
xor
jl
addr16
add
bound
or
clc
inc
pop
lods
sbb
adc
add
add
cmp
lea
sub
shrl
je
xor
or
or
jg
jecxz
jmp
out
cmp
pop
inc
enter
jge
hlt
push
not
cmpb
jl
sub
xchg
add
sbb
mov
int3
cwtl
jno
in
mov
mov
rorb
movsb
jo
add
pop
dec
jb
sahf
jmp
add
inc
std
repnz
add
scas
ds
adc
mov
rcrl
mov
in
mov
and
lods
push
push
mov
mov
lods
mov
loopne
mov
pusha
cwtl
xor
stos
cmpsb
les
inc
sbb
inc
add
test
add
ja
and
pop
mov
cmp
shl
hlt
and
jecxz
dec
mov
push
int3
loope
sub
or
repz
in
add
mov
jecxz
adc
jmp
sub
int3
inc
jo
aam
and
push
call
loopne
push
mov
pop
scas
rorb
dec
enter
xor
sub
fcom
adc
js
pushf
push
test
int3
add
jae
clc
lods
cmc
inc
fs
hlt
inc
rclb
sbb
lock
mov
adc
inc
adc
sbb
std
add
call
mov
je
movsb
es
in
add
jle
lods
pop
mov
adc
mov
add
inc
mov
repz
popfw
adc
cmpsl
mov
add
mov
ror
jbe
sbbb
test
sbb
or
push
and
inc
and
pusha
xchg
dec
movsb
test
lcall
add
inc
in
push
nop
je
out
cmp
call
into
xor
and
jle
ja
aam
test
or
repz
popf
pop
pusha
adc
subl
in
cmpsb
xchg
adc
mov
or
nop
popa
jle
ja
pop
add
push
cmp
sub
adcb
sub
fdivs
inc
jecxz
ficomps
js
aam
inc
nop
nop
les
test
inc
jns
adc
shrb
sbb
add
sub
pop
pop
jmp
xchg
dec
fwait
sarl
xchg
sbb
add
cmpsb
add
add
call
nop
ljmp
je
adc
nop
test
inc
add
je
movsl
dec
popa
lock
add
xchg
inc
mov
sub
pop
mov
in
cwtl
add
aad
mov
mov
pop
fdivs
xor
jmp
add
adcb
js
jmp
lds
call
leave
bound
sub
rcll
jnp
dec
lock
and
and
ficompl
das
imul
cmp
cmc
hlt
cmp
mov
and
and
adc
lods
mov
add
mov
sbb
roll
adc
testl
movsl
pop
mov
and
jle
cltd
add
rorb
jb
pop
sub
lods
lahf
mov
mov
ret
add
mov
dec
ret
int3
jecxz
fwait
or
loopne
popa
loop
incb
jle
mov
inc
sbb
and
fmuls
or
push
insb
add
dec
movsl
ljmp
cmovnp
jno
sbb
pop
xor
add
loopne
cltd
mov
pop
rcl
push
mov
add
push
xchg
hlt
lods
daa
add
test
jne
jp
add
ja
mov
loopne
inc
nop
mov
cmp
scas
cmp
mov
out
repz
cltd
enter
or
mov
add
repz
jp
in
pop
jo
lds
int3
add
js
ret
add
and
and
mov
mov
lcall
sti
and
pop
rolb
mov
push
mov
adcb
popf
mov
in
in
roll
or
lret
call
cmp
mov
loopne
mov
add
rorl
aaa
add
mov
cld
stos
xor
or
inc
jecxz
sub
inc
push
adc
adc
and
test
xor
icebp
int3
inc
out
cs
inc
fisttpl
inc
mov
test
mov
add
test
inc
fcomps
add
ds
mov
sbb
mov
sbb
add
loop
cwtl
sub
sub
lds
rcl
add
or
jb
sub
fadds
les
sbb
sbb
in
xchg
lods
pusha
ds
or
dec
cmpb
add
dec
nop
xchg
xchg
xchg
cmp
subb
pop
mov
sbb
pop
pop
leave
sti
jo
in
xchg
rorb
imul
and
ja
lret
int3
mov
jnp
pusha
call
or
cmp
cmpsl
leave
add
mov
test
clc
mov
aaa
pop
add
imul
sbb
outsl
add
jmp
xchg
add
sbb
xchg
sti
jae
add
add
mov
insb
ljmp
outsb
ljmp
leave
jo
add
inc
fbstp
ja
pop
or
jmp
loopne
inc
and
mov
add
cmpsl
adc
sub
addb
in
aas
shrl
xor
jno
cmc
shrb
outsb
xor
push
lcall
jnp
cmpl
dec
scas
shlb
mov
lea
mov
xor
inc
in
fldl
mov
mov
push
add
jp
inc
xchg
lock
sti
add
xor
arpl
mov
push
mov
jge
add
insb
gs
rcl
or
shl
add
lods
pushf
outsb
mov
and
mov
mov
pushf
movsb
or
gs
adc
cld
in
je
lods
int
fldl
push
or
lret
shl
adc
add
pop
das
les
aad
sahf
inc
push
sarl
pop
repz
dec
outsl
aad
mov
es
pusha
lods
add
add
andps
popf
adcb
stos
add
push
inc
movsb
xor
push
or
jnp
dec
jnp
add
adc
cmpsb
jecxz
mov
xchg
add
push
ja
mov
pusha
mov
ds
pop
orb
inc
mov
add
push
add
out
mov
or
add
and
sahf
fstps
or
repz
stos
sbb
rorb
das
and
push
add
mov
arpl
cmp
dec
adc
sarb
mov
pop
insb
out
and
fistpll
nop
aaa
pushf
push
in
loopne
add
adc
les
cwtl
lock
in
lock
pop
sub
pop
mov
mov
scas
fistpl
mov
insl
inc
cmp
cmp
aas
sub
test
fisttpl
dec
sti
jns
mov
add
mov
stc
mov
bound
xor
call
cld
jns
icebp
jp
add
mov
lock
arpl
adc
add
sbb
cmp
sarl
loopne
add
sbb
add
cmc
jo
mov
inc
mov
push
out
and
stos
fistps
movb
xchg
push
dec
nop
cmp
and
add
ljmp
push
add
iret
adc
into
adc
push
fwait
adc
call
jns
mov
in
mov
add
mov
cwtl
add
in
pop
and
pop
decl
add
mov
xor
ja
cmpl
inc
jg
mov
rorl
iret
add
fs
xchg
popa
popa
pop
xlat
push
cmpsb
xor
cmovb
mov
scas
scas
das
adc
subl
aam
les
lds
stos
pusha
pop
out
and
or
push
sbb
sbb
sbbb
inc
jno
rorl
ret
xlat
or
js
adc
xor
mov
add
add
call
push
roll
xchg
fwait
mov
xor
aas
and
jnp
cltd
cmp
xor
stc
add
aaa
jp
repnz
jnp
dec
add
movsl
xchg
mov
bound
ret
test
ret
mov
les
dec
and
cmp
inc
test
cmp
stos
addb
test
adc
addb
add
out
insl
mov
das
mov
push
pushf
xchg
xchg
mov
jle
add
or
test
adc
cmp
pushf
or
inc
mov
add
add
push
fld1
test
fbstp
dec
cmp
out
dec
sbbl
add
divb
cs
pop
xor
stos
and
gs
add
xchg
mov
and
push
adc
pop
push
rolb
push
jge
call
mov
stos
outsb
cmpb
push
mov
add
jp
jnp
xchg
xchg
push
xchg
shll
xchg
stos
pop
push
cmp
inc
xchg
sarl
scas
pop
enter
push
add
popf
cmp
xchg
pusha
repnz
sbbl
and
sub
xor
jecxz
ljmp
inc
jnp
out
jg
cmp
shll
cld
add
dec
sbbl
add
imul
rolb
sub
addr16
stc
xchg
pop
ret
add
jp
into
out
punpcklbw
bound
mov
psubsw
inc
lret
iret
push
out
sbb
in
add
imulb
es
dec
add
or
adc
cmp
push
jge
fstpt
add
add
push
and
les
add
in
sub
add
xor
cli
jg
add
in
push
aad
and
lods
or
hlt
icebp
test
add
negb
pusha
jbe
dec
add
and
lods
add
cmp
push
loopne
sub
sbb
js
test
call
rorb
jge
jl
add
push
addr16
pop
ja
and
sbb
loope
sbb
fldpi
pushf
cmpb
insl
testl
orb
push
mov
xchg
cmp
fs
or
jo
mov
cmp
je
imul
inc
fsubrs
and
or
testl
mov
sarb
dec
or
dec
sub
and
cmp
aaa
lret
mov
sarb
mov
add
cs
adc
ret
repz
sbb
test
mov
add
fistl
mov
add
mov
cltd
add
mov
std
cmpsl
sub
loop
addr16
sti
mov
mov
enter
push
mov
js
add
mov
push
adc
out
mov
cmp
jo
push
or
push
mov
sub
push
shll
jg
bound
add
add
out
and
xchg
inc
xchg
add
jg
outsb
mov
mov
pop
add
cmpb
and
shlb
subps
inc
cld
jbe
add
out
jne
cmp
daa
lret
pop
adc
xlat
sbb
push
loope
ret
or
aas
add
xchg
dec
xchg
imul
xor
fsubrl
add
popf
call
test
push
lods
subb
lret
push
add
cmp
pop
icebp
mov
inc
leave
add
mov
push
test
mov
sub
ljmp
dec
das
mov
aaa
inc
fnstsw
and
subb
or
dec
in
sbb
iret
aas
add
mov
xchg
lock
mov
bound
fldl
cld
xor
mov
sarb
add
mov
jo
jno
xchg
lret
les
xor
mov
sbb
fiadds
cld
mov
inc
ret
xchg
pop
xorl
mov
lret
jb
sti
mov
add
fisttpll
add
xor
sub
insl
pop
push
push
xchg
inc
mov
scas
add
pop
push
dec
outsb
popf
pop
sbb
adcb
addb
sub
lret
xchg
xchg
sub
mov
sbb
cwtl
fldenv
add
loope
dec
jno
clc
out
scas
out
sub
test
sahf
add
loopne
push
sub
mov
xchg
add
mov
or
add
pop
xor
ret
pop
mov
and
in
push
test
fsubl
adc
cs
arpl
and
sbb
push
jne
or
cmpsl
lock
add
repz
ss
js
cmpb
scas
push
inc
rorb
push
mov
fmull
jge
mov
outsb
out
cmp
add
xchg
push
cmp
call
rol
aas
xchg
addr16
scas
mov
stc
jmp
shlb
pusha
add
frstpm(287
mov
sbb
pop
push
cmp
add
fstpt
or
adcl
adc
outsb
add
in
incb
clc
cmpb
shlb
jmp
test
add
xchg
push
and
xchg
add
or
push
ret
add
fxch
xchg
mov
cmp
pop
mov
or
pusha
cld
in
sub
cmpsl
fimuls
add
and
loope
cltd
data16
add
loopne
fcmovnbe
push
jl
xchg
gs
fwait
or
mov
into
cmp
test
jne
fimull
add
into
out
push
ja
add
and
pusha
ljmp
xor
ret
cmp
dec
push
loope
mov
rcrl
push
pushf
add
mov
gs
sbb
push
mov
sahf
cld
add
dec
add
fwait
or
lods
std
push
notb
andb
dec
and
fldlg2
push
repnz
mov
and
mov
addb
cmc
pop
mov
lock
jae
add
and
push
jbe
dec
rcrl
mov
pop
xchg
mov
xchg
add
sub
dec
mov
push
mov
daa
mov
movsb
cmp
and
jo
hlt
add
xor
xchg
sub
mov
cmp
xorl
adc
dec
sub
int3
shrl
mov
movsb
push
insb
arpl
pop
push
push
pop
dec
movl
add
fdivs
and
xlat
add
inc
in
mov
lods
dec
push
add
push
je
mov
int3
shlb
add
and
xor
add
mov
sbb
enter
sbb
shll
ds
cmp
data16
and
stc
mov
insb
stos
loopne
lcall
leave
push
fbstp
in
mov
std
test
sub
sbb
mov
es
in
inc
popa
sbb
imul
push
inc
out
lods
xor
add
xor
sub
inc
add
ss
sbb
stos
stc
adc
aas
mov
das
cltd
dec
aas
movsb
gs
dec
lret
lock
clc
filds
mov
and
sbb
jns
or
add
inc
inc
into
dec
or
sbb
scas
cs
and
adc
pushf
add
repz
cmp
add
fwait
jge
and
fdivs
mov
mov
pop
test
ja
xchg
lahf
add
push
dec
adc
and
loopne
push
movnti
or
rolb
ja
add
stos
ss
inc
rcrb
add
lds
mov
and
push
dec
aaa
stc
pop
and
inc
mov
nop
insb
sahf
loopne
in
ficoms
inc
leave
mov
add
jg
ret
cmc
add
std
mov
and
pop
sbb
add
andb
outsb
repz
movl
pop
or
add
arpl
pop
xor
inc
mov
in
jbe
push
xchg
pushf
arpl
inc
jecxz
xor
jae
dec
add
repz
jb
test
lret
mov
jnp
sbb
lods
add
popf
js
sbb
in
add
sbb
sub
add
inc
mov
sbb
icebp
push
push
add
sub
jl
loopne
fsubl
test
mov
add
jp
in
add
enter
je
sbb
cld
pop
test
xor
add
pushf
je
imul
adcb
or
xchg
scas
inc
les
shlb
inc
jl
in
xor
mov
push
lcall
push
stos
cmp
jno
std
out
int
push
rorb
jae
add
sub
push
test
iret
mov
cld
cmp
cmp
pop
xchg
incl
mov
test
adc
add
scas
sbb
xchg
rcrb
les
mov
jmp
jp
jle
outsl
xchg
push
test
es
jl
add
dec
scas
mov
mov
fildl
push
xlat
mov
push
inc
inc
call
pop
add
insb
jecxz
add
sub
outsb
or
jp
addb
outsl
stc
lods
stos
inc
add
mov
dec
jno
jo
jge
jo
jp
push
mov
push
int3
fsubp
cs
jbe
xchg
add
andb
hlt
sbb
add
sub
movsb
push
in
jp
clc
xlat
add
fstl
inc
sbb
add
ret
add
lds
ja
scas
nop
mov
xor
cld
dec
add
mov
aam
add
jo
mov
push
dec
lds
mov
pop
sbb
mov
xor
lock
and
pop
repnz
sbb
enter
jp
out
xchg
add
popa
aam
lret
stos
nop
jl
adc
sbb
outsl
mov
add
jno
inc
push
mov
sub
ljmp
data16
xor
and
fidivl
dec
shll
mov
lahf
add
popa
lret
add
mov
add
orl
out
and
test
fistl
out
jne
adc
pop
add
scas
push
xor
aad
sub
inc
nop
testl
cmp
sub
adc
sar
stos
arpl
add
xchg
fisubrl
test
sbbl
sub
sub
out
mov
cwtl
and
xchg
enter
aam
outsb
dec
mull
mov
ret
les
cwtl
cwtl
incb
sarb
mov
pushf
push
aaa
pusha
adc
je
add
fisubs
test
adc
pop
fldl
add
loopne
loop
xchg
adc
add
stc
shlb
pop
push
call
das
xchg
mov
mov
loope
bound
xchg
add
add
mov
add
cmp
into
push
sub
inc
test
leave
ficoms
pop
out
xor
add
int3
mov
cld
adc
hlt
cmpsb
shl
jae
jb
mov
loope
cmp
xor
add
adc
imull
out
jb
adc
dec
in
mov
mov
pop
loope
movsl
subb
or
xchg
bnd
fisubl
add
mov
sti
mov
negb
leave
add
hlt
adc
or
jle
add
in
pop
in
add
aas
mov
rorb
decb
mov
rcll
xchg
repnz
nop
scas
icebp
out
jmp
pop
push
andb
mov
pop
fs
mov
jg
sub
xchg
add
jge
movsl
pushf
clc
mov
add
addb
popf
cld
or
ror
mov
adc
les
jae
dec
jno
inc
push
mov
rolb
mov
xchg
stc
add
sar
rcrl
mov
test
cmp
or
cmc
idiv
in
shll
cmp
sub
jae
aam
xchg
fldenv
push
lret
or
pop
mov
push
in
icebp
add
fwait
xchg
hlt
mov
ja
add
aaa
es
dec
jmp
inc
add
add
cli
enter
cmp
inc
stc
xchg
add
xor
add
ret
popa
in
scas
fiadds
jmp
mov
push
sub
mov
inc
jp
push
add
xor
mov
loope
or
outsb
mov
pop
push
push
and
mov
lods
xchg
pop
fwait
test
ret
add
cmp
xchg
stc
mov
fists
pop
mov
sbb
and
add
add
adc
fcomip
and
sbb
push
mov
cmp
sub
movsb
das
rolb
push
pop
xchg
xor
outsb
cmc
out
je
inc
roll
repz
xchg
inc
pusha
leave
imul
add
inc
cs
add
scas
js
in
xorb
add
cmp
cmp
dec
lock
scas
lret
inc
jecxz
mov
sahf
aaa
add
out
mov
fmuls
je
mov
pop
test
cmp
stc
faddl
pop
xor
inc
imul
in
add
icebp
rcll
jg
sub
movsb
xchg
add
adc
test
add
cmc
jns
or
xchg
paddb
inc
add
pop
mov
jp
mov
mov
inc
sahf
inc
add
jge
add
rol
fcoml
sub
sub
adc
in
jle
xlat
push
pop
insl
add
inc
fmuls
push
nop
pop
add
ret
ret
out
xchg
push
repz
shll
cmp
outsl
pop
dec
cs
std
push
add
xor
jle
pop
and
add
and
stos
sub
es
or
stc
imul
pop
fdivrp
shlb
out
ret
sub
and
inc
or
mov
ds
sbb
adc
jno
inc
fnstcw
jns
pusha
add
aad
add
jp
dec
sbb
adc
sub
clc
push
cmp
dec
add
mov
add
in
pop
lods
jno
das
and
mov
add
push
dec
cmpsl
out
enter
pop
cmp
push
pop
dec
sub
mov
fistl
cli
int3
hlt
dec
xor
push
adc
jmp
cwtl
out
fs
xchg
xchg
pop
mov
add
aad
pop
ret
std
xchg
jae
popa
sbb
cmp
ret
mov
and
inc
insb
mov
cwtl
lret
shlb
loope
inc
jbe
pusha
jnp
or
and
xchg
push
mov
cli
ficomps
enter
fldl
xlat
lods
push
jb
scas
dec
fmuls
add
xor
rclb
addr16
xchg
out
negb
adc
dec
adc
sbb
add
ja
or
subb
mov
pop
aas
shl
subl
pop
mov
push
xor
sub
out
fdivr
cmp
lods
je
jnp
mov
outsb
cmp
sbb
movsb
test
adc
pusha
pushf
xor
sbb
xlat
insb
dec
xchg
mov
out
jne
cmc
add
popa
aam
push
xchg
test
repnz
push
or
mov
pop
jecxz
andb
repz
push
mov
add
stc
fldcw
js
jbe
add
add
movsl
fisubs
mov
jne
ljmp
mov
mov
or
call
inc
divb
stos
sub
jbe
cmpb
dec
jns
jle
popf
add
pushf
push
mov
cmp
add
sbb
inc
and
add
mov
out
jecxz
jne
lahf
adc
test
add
shll
ret
mov
add
add
aam
sub
popf
inc
jg
dec
cmp
mov
mov
shlb
xor
cmp
mov
jno
out
add
mov
mov
movsb
add
cs
enter
in
imul
cmp
mov
jbe
add
das
int3
add
or
in
mov
push
or
js
mov
add
shrl
arpl
fsubp
add
cmp
int
shr
add
cmp
enter
add
push
jg
or
sbb
cs
mov
push
adc
or
push
lods
adc
add
xor
mov
and
hlt
mov
test
add
fsubr
or
shl
clc
lock
and
test
jge
add
fwait
sbb
es
add
cmp
cmpsb
mov
outsb
scas
movsl
push
inc
frndint
add
sahf
pop
stos
hlt
gs
push
fs
sti
iret
addl
test
pop
sbb
or
in
add
lds
cmc
mov
addb
jno
add
and
push
ret
imul
dec
data16
adc
outsl
jo
mov
xchg
add
adc
inc
sub
add
push
xchg
inc
fs
cltd
mov
or
std
repnz
jbe
bsr
ljmp
enter
lcall
mov
xchg
add
sbb
xchg
inc
jl
inc
mov
add
mov
pop
orb
push
cmp
cltd
push
cmp
add
dec
mov
aad
pop
in
xor
loopne
or
add
stc
mov
rolb
repnz
fs
ret
add
test
into
mov
mov
add
pop
stos
add
inc
dec
push
test
push
mov
loope
ret
push
fstps
jbe
lock
add
add
lods
mov
sbb
fiaddl
enter
and
int
idiv
pcmpgtd
lret
std
sbb
out
jb
out
mov
push
mov
pop
mov
add
scas
inc
filds
adc
iret
int
mov
mov
addl
or
test
add
test
fwait
cmp
push
and
sbb
cmp
out
lcall
and
sbb
fwait
mov
cmpsl
icebp
push
enter
inc
daa
mov
xorb
outsl
jmp
ja
xchg
rorl
leave
stos
jmp
dec
negl
and
add
insb
leave
dec
sbb
push
cmp
lods
mov
aam
xor
add
in
cwtl
pusha
loopne
lock
fs
lcall
jb
jp
jmp
cltd
popa
imul
inc
cld
xor
push
incb
xor
leave
loopne
arpl
or
add
pushf
adc
cmpsl
sbb
mov
add
test
dec
mov
rcr
out
shl
adc
jbe
sbb
shrb
jae
stos
add
addl
add
sbb
add
fs
push
xchg
xor
jbe
mov
inc
jne
and
dec
lds
mov
sub
sbb
iret
push
jmp
mov
adc
lcall
jbe
xlat
rclb
adc
icebp
add
lcall
sub
xchg
cmp
fmul
mov
inc
enter
xor
dec
push
int
mov
jp
add
push
xchg
mov
inc
in
push
xor
loopne
push
loope
rorl
sbb
fimull
outsl
jl
inc
aaa
xchg
lock
les
pusha
fidivs
cmp
or
add
leave
jbe
fldenv
and
hlt
add
push
bound
lcall
jmp
push
cli
mov
lcall
icebp
and
add
subl
lds
sbb
lea
pop
cwtl
js
jns
add
xlat
push
dec
jno
enter
inc
sahf
ds
jae
jg
sub
pushf
pop
pusha
inc
into
or
cltd
xor
inc
das
cwtl
and
add
push
or
mov
jae
pusha
dec
shrb
inc
add
mov
sub
sbb
mov
orb
call
mov
aam
xchg
or
repz
movsl
rclb
rcl
stos
in
out
movd
add
sub
inc
cmp
cmp
rol
cmc
add
sbb
push
add
push
xchg
fwait
sbb
aam
enter
data16
rolb
les
mov
and
or
arpl
pusha
mov
add
cli
mov
push
pop
push
xor
xchg
or
rclb
sbb
or
mov
lods
pop
mov
test
mov
or
push
or
mov
or
lret
add
and
add
jno
cmpsb
mov
adc
stos
in
sbbl
pop
and
mov
add
pop
mov
sbb
roll
push
mov
es
mov
test
dec
ljmp
push
cwtl
in
enter
daa
pop
les
sub
call
lock
dec
gs
push
sub
fs
pusha
xor
cmp
pop
cli
insl
inc
push
punpcklwd
bound
sbbl
cmp
mov
in
jns
lcall
into
add
xor
or
sbb
movsb
cmc
mov
add
test
insb
gs
cmp
sub
mov
loopne
imul
enter
loopne
stc
mov
lret
xchg
nop
insl
gs
es
mov
and
stos
arpl
mov
fiaddl
add
loopne
adc
sbb
add
push
adc
and
jns
inc
dec
decl
pop
cmp
pop
sub
out
cmpb
insl
les
jp
dec
mov
push
mov
js
adc
push
cli
mov
cltd
add
mov
push
pop
push
mov
and
push
jns
add
pop
xor
adc
ljmp
jae
cwtl
cmpsb
je
push
cmp
daa
mov
mov
sbb
or
outsb
ret
nop
js
sbb
aaa
push
ljmp
xor
insb
testl
ljmp
mov
jp
jl
dec
xchg
clc
add
jmp
and
and
pop
or
jne
fwait
int3
add
imul
push
xorl
xorb
mov
fcmovnbe
por
icebp
aaa
mov
jbe
insl
outsb
dec
add
ss
sub
dec
jge
or
popf
decl
sub
sbb
and
dec
xor
cmp
add
ljmp
pop
pop
sub
mov
push
cmp
icebp
lret
shlb
stos
dec
loopne
or
into
xor
pop
cltd
add
or
gs
aaa
pop
inc
xor
push
test
xchg
cs
les
inc
jl
push
push
ret
push
and
xchg
add
push
xchg
xchg
imul
test
jnp
or
or
cmp
pop
test
adc
dec
test
or
adc
cli
push
js
add
cwtl
xchg
mov
les
and
cmc
and
adc
cmp
pushf
mov
insb
ficoml
pop
inc
push
rcll
xor
rcrb
and
xor
add
sub
lock
add
push
xor
add
xchg
scas
add
mov
sbb
jp
mov
stos
jecxz
test
gs
leave
nop
lcall
xchg
in
and
cltd
jnp
dec
test
cmp
out
lds
sbb
mov
sti
add
in
push
jecxz
mov
loopne
adc
xchg
cmp
push
cmc
enter
cmp
clc
sbb
cwtl
add
cld
adc
dec
rclb
and
cmp
data16
loop
sub
lret
jnp
push
xor
lcall
sbb
ljmp
sahf
push
cmp
aam
jne
add
lret
xor
pop
outsl
jb
or
ja
cli
sub
adc
adc
loopne
xlat
jnp
pop
lea
sbb
cmpsl
and
add
mov
dec
mov
jp
pop
outsl
dec
mov
add
outsb
sub
cmpsb
fmull
lret
add
cwtl
dec
jmp
push
lcall
inc
movsb
cmp
aam
js
je
ljmp
sub
aam
cmpsb
enter
cs
jmp
inc
in
or
xchg
push
enter
in
dec
xchg
xor
repnz
lods
mov
addb
xor
add
and
push
add
mov
sarb
es
dec
push
sub
ror
and
add
sti
lcall
fs
lahf
iret
hlt
lahf
mov
and
in
mov
lods
xor
xchg
lret
ffree
nop
jle
inc
cmp
rcrb
add
adc
das
cmp
or
test
or
xchg
loop
les
add
aaa
adc
xor
rcll
cmpsb
loopne
add
sbb
add
test
sub
cwtl
cmp
xor
mov
sti
cmp
jg
push
or
popf
push
jmp
xor
loope
leave
lcall
dec
inc
sbb
lock
cmpsb
insl
inc
xor
inc
out
outsb
into
pop
adc
cli
or
psrld
mov
sarl
lcall
inc
leave
mov
sbbb
cmp
add
xor
jge
xchg
cmp
dec
push
fcoms
movl
bswap
sti
dec
fwait
add
rol
es
xor
mov
lods
icebp
sbbb
add
add
je
mov
cli
sbb
gs
test
enter
push
mov
addr16
addb
xchg
outsl
lods
push
adc
je
out
and
cmp
js
movsl
aas
bound
sbbb
mov
cltd
and
cs
sub
ficoms
mov
mov
add
dec
lods
and
rcl
jl
mov
repnz
add
add
rcr
push
add
add
inc
je
mov
and
push
or
pop
sub
push
sbb
dec
rolb
add
cmp
inc
xchg
xor
cmp
adc
push
xchg
les
add
push
mov
popa
roll
stos
or
xchg
leave
sub
mov
mov
sub
sahf
and
adc
push
mov
jge
add
idivb
dec
sub
and
add
cs
push
jns
jle
add
and
or
dec
mov
pop
nop
cltd
ljmp
movsl
popf
jb
test
sub
arpl
repnz
pop
and
dec
pop
cs
lods
add
or
fldenv
and
cltd
pusha
gs
sbb
imul
ja
add
ss
stc
stos
or
push
jno
out
xchg
mov
adc
lea
lret
xor
sbb
mov
xor
cmc
adcl
leave
in
shll
push
sbb
add
daa
mov
lahf
and
xchg
jg
jnp
pop
cmp
add
sub
pop
xchg
cwtl
pop
inc
mov
fimuls
adc
sbb
pop
notb
ds
mov
add
adc
lods
or
cmp
int3
insb
add
jge
pop
add
js
mov
mov
mov
dec
jbe,pt
jae
and
jo
lahf
enter
daa
nop
jle
jo
xor
add
nop
sub
push
and
adc
sbb
pop
xchg
cltd
xchg
test
jae
into
pop
mov
and
sub
subl
sub
rclb
push
inc
js
cmp
orb
fwait
jns
lcall
jnp
mov
mov
jb
into
clc
insl
sub
push
or
mov
xor
pop
sbb
pop
adc
outsb
or
sahf
outsl
jns
cwtl
sub
scas
nop
lock
mov
jle
sti
xchg
add
and
ljmp
lock
jae
jo
dec
add
data16
cmc
rcll
jecxz
xor
mov
mov
push
and
adc
subb
nop
mov
fldenv
fiaddl
js
mov
pop
xchg
mov
andb
inc
xorl
mov
pushf
ds
and
outsb
fld
fwait
cld
push
or
fdivs
jmp
divb
dec
shll
dec
sub
push
xchg
jo
push
xor
in
inc
jo
mov
movsb
add
push
int
add
std
jecxz
add
inc
jle
out
xor
lock
fcompl
mov
fimull
stc
hlt
das
xchg
dec
xchg
cwtl
sbbb
push
ficoml
clc
lahf
aad
fisttps
push
xor
xor
mov
ret
mov
fs
leave
mov
jg
ljmp
or
incb
test
mov
leave
pushf
cs
je
inc
test
sbbb
shlb
lds
dec
or
mov
mov
daa
and
sarl
rcrl
stc
fcoml
push
lahf
adc
stos
mov
aad
sub
nop
pop
adc
adcb
loop
add
pusha
lock
repnz
adc
add
imul
or
mov
sahf
add
cmc
dec
pop
dec
xlat
sub
mov
xchg
les
sti
dec
adc
mov
fcoms
cmp
addb
pop
push
xchg
mov
and
xor
xchg
mov
adc
sbb
popf
test
sbb
loopne
aam
pop
mov
call
sub
fstl
je
xor
shrl
pop
std
jb
push
adc
mov
mov
xor
mov
std
sahf
js
adc
fisttpll
icebp
cmp
rolb
push
jns
push
sbb
mov
fs
add
add
jecxz
orl
shrl
pop
adc
jg
es
shrb
cld
dec
pusha
lock
add
mov
or
sbb
add
lock
mov
pop
inc
dec
mov
add
dec
xchg
test
mov
add
jp
or
and
pop
mov
aad
pop
sub
fiaddl
pushl
adc
in
push
xchg
leave
add
fistl
insb
xlat
das
add
push
je
aaa
sbb
repz
adc
push
movb
pop
faddl
or
add
std
sbb
rcll
fs
xchg
or
xchg
mov
fsubr
andl
mov
sub
mov
popa
mov
mov
dec
loop
or
int
inc
pop
je
icebp
add
ficompl
push
roll
stc
or
pop
push
mov
roll
xor
das
int
jo
mov
jo
mov
mov
movsl
and
mov
or
sbb
js
outsl
mov
pop
push
and
push
adc
and
and
sub
lret
sbb
and
and
sub
sbb
mov
addb
add
jge
mov
mov
daa
cmp
cwtl
int3
push
add
cli
into
or
movsl
inc
mov
lea
or
and
mov
push
lock
fcmovu
je
hlt
add
leave
aad
loop
add
stos
flds
cld
xor
andb
daa
pop
or
or
xorb
fdivrs
cmp
mov
movsl
xorb
lock
loop
jmp
adc
push
cmpsb
fmull
bound
movsb
adc
sbbb
xchg
subb
test
lea
sbb
fwait
test
scas
call
push
push
ficompl
and
xor
sbb
rclb
std
dec
repnz
inc
ljmp
call
push
inc
in
pusha
stos
and
add
push
adc
push
inc
mov
mov
les
aaa
sub
and
or
fstp
rclb
std
movsb
sub
cmp
in
daa
dec
lods
scas
sahf
add
mov
lret
mov
sbb
jnp
outsl
add
movsl
imul
test
sub
mov
add
mov
mov
mov
fs
add
mov
xchg
orps
lret
push
mov
nop
add
lcall
test
sub
and
mov
pop
adc
mov
addr16
inc
shll
flds
xchg
push
into
cmp
push
loope
aam
outsb
sbb
push
fs
adc
adc
in
add
mov
insb
cmp
popf
mov
xor
gs
jmp
xchg
out
add
nop
lds
or
push
or
push
sbb
xchg
xor
sbb
popf
sarb
mov
aam
test
loop
push
mov
int
aam
in
cmp
jno
sub
mov
and
fcomps
lock
dec
test
or
xchg
sub
aam
fs
or
inc
loop
jb
sti
pop
inc
adc
gs
or
and
pop
or
aaa
cmpsl
mov
or
sub
cmp
or
push
mov
test
xchg
frstor
xor
out
mov
ja
aad
inc
push
ds
pusha
insl
pop
sahf
sbb
mov
mov
stos
cmp
dec
das
shlb
mov
cltd
inc
rorb
cmp
repz
std
das
adc
cmp
and
movq
loopne
inc
arpl
ret
ret
sub
std
pusha
mov
mov
das
test
sbb
inc
xchg
fmull
dec
sbb
jmp
cmp
inc
fldl
or
fldcw
push
rolb
shl
add
push
push
call
dec
icebp
imul
xchg
dec
mov
addb
dec
stos
sub
insb
cli
decb
mov
add
inc
es
enter
xor
push
mov
popf
sti
add
roll
mov
mov
mov
ret
or
fcmovb
mov
lahf
cmpb
outsl
mov
or
and
shrl
adc
into
cmpsl
and
jns
rcr
hlt
cmp
daa
std
call
adc
pop
or
test
sub
add
inc
cmp
mov
pop
inc
xchg
add
push
xor
push
mov
or
loop
adc
aad
lods
mov
jno
push
int3
or
xor
xchg
test
add
push
inc
aam
lret
lahf
out
jmp
pop
add
push
pop
sbb
popf
cmp
aad
lods
dec
cmpsb
in
or
in
and
arpl
sbb
add
mov
orl
push
add
sti
test
in
xchg
or
cmp
ja
push
cmovs
or
push
fisubl
sub
les
mov
mov
mov
inc
or
jo
and
ret
fidivs
sub
pop
fdivl
xchg
and
mov
sti
mov
in
mov
jp
mov
pop
lock
sbb
adc
xor
sbb
pop
mov
lret
xor
lods
sub
and
cmp
cmovnp
mov
aam
add
jl
scas
insl
subb
shll
push
xchg
ret
dec
sbb
pop
orb
daa
push
test
es
aad
cmp
and
add
shl
or
cmpsb
rclb
jecxz
cmp
pop
add
je
cltd
das
xor
cmp
das
adc
add
leave
sub
ret
shll
pusha
sub
js
pop
loopne
mov
rcll
mov
pop
xor
sub
fcmovnb
leave
maxps
add
or
dec
fldenv
xor
jle
sbb
stc
inc
iret
in
xchg
outsb
and
and
mov
lock
mov
in
push
push
sub
mov
dec
pop
stos
rolb
dec
mov
jle
push
xlat
jp
mov
or
push
rclb
jl
push
mov
stc
inc
jns
sbb
dec
xor
fcoml
cs
push
cmp
nop
xchg
xor
loop
imul
lahf
mov
int
pop
cmpsb
xchg
dec
mov
in
jo
mov
cmp
mov
sub
inc
call
lods
sbb
add
jge
in
pop
iret
repnz
js
popa
int3
dec
inc
mov
shlb
shll
cmpsb
sbb
cs
mov
sti
inc
iret
xchg
jp
in
sbb
lods
les
pop
fs
addb
arpl
icebp
mov
dec
adcl
ror
lret
sbb
adc
mov
push
adc
rolb
ds
mov
decl
cli
dec
dec
or
fsubrs
sarb
shl
cmp
mov
out
out
adc
push
push
cmp
outsl
jb
and
sbb
push
sahf
arpl
mov
aas
in
pop
das
je
dec
and
xchg
xchg
outsb
mov
sub
add
push
fisubrs
push
addb
gs
cltd
pop
and
xchg
loope
push
ljmp
add
pop
int
cmpsb
std
out
mov
xchg
lock
sbbb
add
push
test
ret
pop
mov
add
fsubrp
add
out
mov
lcall
mov
adc
and
pop
inc
jo
js
out
and
movsb
sub
push
repnz
inc
fcom
test
add
sub
stos
test
adc
jecxz
sbb
jle
sub
rclb
or
shlb
imul
pop
sub
lock
fs
aam
xchg
and
inc
jl
push
push
out
pop
outsl
pop
mov
dec
push
cmp
pop
repz
fs
je
adc
nop
add
outsb
adcb
mov
mov
push
xlat
add
mov
push
movsb
jo
or
dec
dec
or
and
insb
js
repz
arpl
add
adcl
mov
outsb
int3
push
or
lock
faddl
mov
sbbb
fildll
pusha
int3
data16
cmp
mov
mov
mov
lahf
pop
jl
sub
mov
add
lcall
cmp
mov
and
xchg
push
push
xor
push
imul
xchg
fsubrl
mov
inc
ffree
mov
jno
cltd
and
test
adc
fwait
cmp
xchg
int3
sub
js
cmp
pop
pop
mov
dec
or
sub
mov
pop
daa
loop
loopne
jo,pn
cmp
xlat
lret
aam
in
mov
fidivs
rol
add
fwait
icebp
jne
fidivl
pop
cwtl
xchg
mov
add
std
lret
movsl
inc
pop
push
leave
je
push
cmc
enter
pop
pop
adc
sub
in
sti
pop
pop
add
add
push
add
sub
sub
sti
xor
pop
add
mov
ret
mov
sub
arpl
decb
out
test
adc
out
adc
and
aas
jl
mov
jmp
ffree
or
in
dec
mov
dec
hlt
in
scas
mov
out
cmpsb
dec
fs
jp
mov
cltd
push
clc
and
and
das
add
shlb
pop
jnp
dec
data16
pusha
sbbl
sahf
inc
mov
cmpsb
dec
mulb
mov
add
out
addb
dec
dec
xor
leave
mov
sbb
je
sub
push
add
in
sub
orb
cmpsl
gs
xchg
popa
xchg
jnp
xchg
roll
test
popf
lret
sub
sarl
cmp
notl
push
adc
clc
push
xchg
and
or
push
cmpsb
movsb
das
add
rorb
add
stos
dec
into
addr16
and
sbb
imul
roll
imul
xchg
shlb
pop
cmpsl
shrl
ja
fistpll
out
add
pop
xor
cmp
inc
add
hlt
ffree
fs
or
in
ret
nop
add
cltd
add
cli
lahf
push
pop
pop
pusha
mov
mov
mov
sub
cvttps2pi
dec
cmpsl
outsl
rcl
addps
test
not
rcrb
pop
imul
cmp
ljmp
xor
mov
cltd
push
leave
push
add
xor
fadds
dec
add
sub
scas
mov
loop
aad
scas
sahf
into
add
and
repz
lea
push
or
out
test
rolb
pop
and
dec
xor
aaa
cmp
push
repnz
dec
and
xchg
cs
mov
mov
pop
fsubrl
mov
and
xlat
or
pusha
dec
xor
or
pmuludq
clc
fstpt
jno
add
mov
sub
sub
cltd
test
add
pushw
push
test
push
sbb
or
in
push
test
mov
dec
add
dec
inc
clc
inc
add
mov
and
xor
and
dec
xor
or
pcmpgtb
pop
fdivr
xorb
out
in
inc
sbb
mov
and
or
loopne
iret
mov
adc
shlb
cmp
ljmp
shrl
mov
popw
arpl
jl
or
mov
add
and
and
loop
sub
mov
ror
mov
push
pop
cmp
and
iret
and
add
push
xor
xchg
push
jle
shrl
and
xchg
test
leave
mov
adc
jmp
lret
hlt
sbb
jg
add
lds
xor
jmp
data16
ljmp
rolb
andl
add
or
cld
add
mov
ja
mov
imull
mov
mov
into
rclb
int
mov
push
lret
out
popf
mov
outsb
or
les
lcall
arpl
or
sub
adc
push
lock
ret
add
push
fs
cli
clc
cld
adc
iret
or
sarb
sahf
add
jecxz
imul
xor
lret
lock
iret
jne
sub
inc
xor
push
cmc
mov
inc
jb
jns
mov
mov
add
imul
test
rol
sbb
inc
or
rorb
xor
sub
sarb
andb
test
push
test
cmp
sub
pop
pop
mov
sbb
aam
mov
sbb
sbb
sbb
lcall
or
test
sbb
idivl
addr16
xor
ret
rcrl
sub
add
leave
or
arpl
push
jl
repnz
jmp
pop
or
iret
cmpsl
out
orb
subb
push
and
add
mov
mov
xor
adc
sub
xor
je
out
adc
xor
xchg
xchg
adc
idivb
or
nop
fwait
insl
aaa
mov
lahf
insb
roll
stos
adc
dec
add
or
inc
in
shll
xchg
sub
add
cmpsl
fists
xchg
cmpsb
fimuls
test
ss
xor
pop
aas
es
cli
add
fcmovb
pushf
mov
xchg
push
adc
cmpb
pushf
mov
mov
xchg
inc
aam
sti
lods
inc
xchg
xchg
mov
and
sbb
out
push
shlb
aam
pop
cltd
sbb
scas
aas
mov
mov
mov
fadds
pop
push
and
mov
push
pop
cmpsb
fiaddl
popl
pop
adc
cmc
xchg
add
gs
push
sub
jp
bound
xchg
adc
lds
and
cmp
add
xor
cmpsb
or
pop
or
cmp
pusha
cwtl
call
mov
push
mov
add
mov
add
lret
inc
inc
or
dec
xchg
shl
add
mov
xchg
pusha
les
xor
pop
sbb
inc
and
lods
loopne
push
lods
push
jae
pop
push
movsl
int3
or
pusha
fnstenv
xchg
add
imul
or
sub
movsb
aaa
add
sbb
dec
jge
je
add
test
push
cmp
and
and
daa
push
push
cltd
ret
add
fadds
mov
add
ret
in
outsb
push
mov
movsb
xor
adc
repnz
sar
push
sbb
andb
stc
repnz
mov
aaa
mov
xor
mov
iret
sub
pushf
addr16
mov
test
or
shlb
xchg
lret
xchg
cld
add
in
pop
mov
shlb
push
jo
mov
push
cli
enter
add
xchg
fadds
rol
mov
add
repnz
mov
add
repz
mov
pushf
int3
rclb
dec
pop
scas
mov
movsl
shrb
mov
lock
add
shlb
mov
xor
inc
and
add
cmp
subb
test
testl
ljmp
fnstcw
std
add
daa
mov
or
in
pop
cwtl
and
pushf
mov
sarb
pop
and
jae
pop
ret
stos
sub
and
cltd
dec
dec
lret
cmp
mov
dec
and
test
dec
mov
test
sbb
cli
hlt
and
fcoms
pop
jp
icebp
mov
xor
fisubl
dec
dec
add
sahf
ret
pop
pop
addl
mov
push
inc
inc
subb
aad
mov
clc
mov
fmull
int
sahf
iret
sarb
mov
lock
xor
sub
cmpb
xchg
mov
mov
mov
inc
loopne
addl
jecxz
adc
clc
repnz
xor
dec
test
aam
and
and
std
repnz
jnp
mov
fsubrl
push
pop
mov
or
xor
cmp
cmp
push
add
lods
dec
test
in
rcl
add
int
data16
mov
enter
mov
push
mov
insb
mov
add
xor
unpcklps
lods
sbb
xchg
and
in
xor
cs
movsb
cmp
sbb
and
ret
xchg
mov
or
dec
and
mov
mov
cmp
inc
cmc
mov
or
dec
mov
push
call
add
cs
cmp
add
es
fwait
sub
insb
inc
mov
cmp
gs
xor
push
lcall
sbb
jns
push
pusha
or
arpl
stc
add
mov
pusha
dec
pushf
inc
call
xorb
clc
ret
jne
mov
stos
out
xor
ret
lahf
lret
add
cmp
jo
or
cmp
mov
data16
ss
xor
rcrb
es
cmp
stos
and
add
sbb
and
mov
adc
loopne
inc
mov
add
lret
mov
cld
adc
cmpsb
aaa
add
cld
jns
push
add
mov
add
int3
cmp
xor
add
imul
sub
push
xchg
pop
cmpsl
mov
orb
loopne
popa
mov
mov
enter
add
mov
xchg
movsb
jo
or
pop
or
dec
xor
mov
xchg
cmp
xor
popf
je
mov
popf
add
cwtl
xor
xor
enter
jge
pusha
aas
test
and
js
mov
push
das
xchg
mov
push
and
mov
mov
std
inc
cmpsl
xor
mov
add
or
out
hlt
sbb
xchg
push
and
nop
and
frstor
adc
out
or
cltd
into
inc
and
add
sbb
cmp
cs
and
mov
enter
inc
jno
cmc
mov
inc
cwtl
inc
xchg
div
lret
rcl
inc
enter
repnz
jns
pcmpgtw
outsb
xor
push
adc
mov
addb
xor
jle
lock
mov
test
sub
mov
imul
sub
mov
mov
in
inc
add
movsb
fdivrl
mov
or
mov
incb
int
push
fadd
fdiv
rcrb
lods
add
subl
mov
pushf
stos
pop
mov
cmp
fdiv
pop
inc
aam
jl
shll
je
xor
cmp
in
test
dec
jbe
hlt
mov
xchg
data16
dec
add
inc
mov
jo
mov
repnz
jae
add
push
adc
mov
test
and
jmp
leave
loope
xor
pop
jae
cltd
xor
incb
fstps
roll
cmp
mov
mov
ret
push
pop
adc
sub
pop
mov
jmp
enter
repnz
mov
cmp
sbb
pop
sbb
pop
add
out
ss
mov
imul
nop
fdivl
jae
add
sub
add
sbb
add
add
xchg
cmp
mov
outsl
nop
cld
and
dec
or
int3
leave
insb
sbb
cmp
out
add
push
cmp
in
loopne
jle
add
dec
iret
mov
push
div
leave
icebp
dec
sbb
pop
inc
push
loopne
arpl
lret
jmp
inc
xchg
xchg
mov
xor
sub
in
push
xor
and
es
and
mov
sahf
xchg
call
cmp
mov
test
stc
andb
fwait
cmp
ror
inc
add
push
push
mov
insb
stc
pusha
mov
call
cmpsb
sub
add
stos
js
add
push
lahf
and
gs
sbb
add
ja
imul
aam
int
mov
adc
mov
adc
xor
cmp
in
push
and
inc
enter
and
sbb
pop
aam
call
jns
pop
rolb
push
mov
push
lahf
pop
lret
xchg
dec
sbb
mov
sub
pushf
cmp
push
and
push
das
scas
lds
push
cmp
test
negb
add
adc
push
xor
dec
inc
mov
daa
dec
and
sub
lcall
imul
ljmp
sub
loopne
mov
scas
adc
fisttpl
insl
addb
lahf
mov
mov
pushf
mov
jb
repnz
xor
loopne
mov
push
lret
movsl
dec
inc
mov
addr16
jl
cmp
imul
mov
andb
cwtl
hlt
and
es
andl
or
mov
mov
dec
dec
arpl
les
sbb
lds
mov
addr16
pop
inc
xchg
call
rcrl
icebp
push
test
es
xchg
add
enter
dec
popa
stc
mov
test
jl
mov
aaa
adc
outsl
cwtl
nop
add
sub
push
rclb
test
fildl
push
xor
divb
loop
nop
push
or
sub
inc
push
fs
push
cli
sbbb
add
jp
push
cltd
sub
test
ja
adc
iret
inc
push
std
roll
sti
fwait
or
jg
push
push
add
cwtl
mov
xchg
aad
in
nop
fcompl
adcb
loope
test
xchg
punpckhdq
loopne
fistpl
dec
adcb
jge
xchg
add
jne
mov
lret
pop
lea
pop
fsubr
add
in
idivb
or
mov
sbb
rclb
and
or
aas
inc
add
enter
testb
scas
add
ss
push
push
mov
add
mov
hlt
je
jbe
add
fildl
pusha
loop
das
sbb
and
sbb
mov
jnp
mov
icebp
adc
jbe
pop
mov
mov
add
movsb
aas
add
push
dec
jo
add
mov
popa
ljmp
dec
fld
push
lret
incb
int
mov
adc
ret
push
jg
mov
inc
lret
dec
sub
dec
adc
dec
daa
and
ds
inc
adc
jns
sub
push
mov
add
rorb
lret
push
data16
push
sub
pushf
mov
in
add
dec
push
adc
sub
fistl
sub
js
into
mov
pop
repnz
mov
sahf
out
and
out
in
loopne
fdiv
xorb
ds
xor
aad
inc
cmp
adc
aaa
fistpl
dec
pop
rol
insb
or
scas
popf
addr16
mov
xchg
shr
data16
aaa
enter
cwtl
sub
xlat
mov
icebp
loopne
or
inc
add
or
loopne
jnp
add
mov
mov
pop
int3
mov
push
ret
idivb
in
mov
inc
imul
add
aaa
sbb
push
adc
or
or
clc
jo
inc
mov
arpl
mov
push
cmp
negb
bound
mov
jmp
pop
and
lods
xchg
push
cmc
loope
fisttpl
cmp
mov
ret
xchg
sub
add
data16
sbb
repz
in
inc
add
push
sub
push
push
test
push
inc
movb
inc
cmpsl
loopne
mov
jne
cmp
rcll
in
dec
into
pop
or
push
aam
mov
add
subb
lahf
add
shlb
cwtl
xchg
jp
jno
lcall
mov
cmpsb
mov
cli
or
sub
mov
and
ret
and
aam
pop
and
jl
xor
add
or
mov
ljmp
popf
cmp
leave
add
pop
adc
adc
lret
pop
mov
mov
mov
jns
cmp
mov
add
ret
jo
xchg
push
rcrb
sbb
in
lds
mov
add
out
jecxz
or
add
out
xor
mov
push
js
add
inc
add
add
add
mov
jbe
cmp
mov
push
xchg
jae
nop
and
jecxz
cmpsl
outsl
clc
jns
loopne
cmp
bound
mov
inc
add
loope
lods
jbe
xchg
add
nop
adc
xchg
add
push
add
cmp
add
sub
push
push
lahf
inc
jne
mov
mov
rorb
pop
outsl
jge
adcl
or
xchg
lcall
push
movb
cmp
test
fdivrp
inc
movsb
or
mov
cmp
add
cmpsb
lss
jno
sub
or
sub
fs
add
mov
adc
pop
icebp
jle
call
ljmp
imulb
je
adc
sbb
andb
add
mov
mov
sub
xchg
add
xor
adc
inc
add
mov
dec
add
mov
pop
in
in
sbb
inc
jo
cbtw
adc
cwtl
or
sti
stos
inc
stos
jno
mov
nop
add
outsl
sub
add
jnp
mull
call
movsl
into
imul
loopne
dec
dec
add
adc
add
inc
inc
cli
mov
dec
faddl
stc
adc
jne
scas
das
fcmovnb
inc
bound
test
pop
jnp
cmpsl
cmp
cwtl
roll
mov
ret
es
ficoml
rcrl
inc
sbbb
mov
in
sbb
push
test
mov
enter
cmpsb
xor
pop
frstor
add
xor
testl
pop
mov
sbb
clc
jle
add
pop
add
cmp
in
cmp
mov
mov
jbe
mov
push
pop
add
xchg
repz
push
and
add
pusha
or
inc
bound
cld
incb
push
ds
sbb
stos
rolb
adc
out
mov
nop
inc
mov
dec
add
bound
adc
repz
or
add
jle
push
or
sbb
mov
add
and
loope
adc
add
shll
cmp
sarb
shll
and
xor
push
rolb
ja
or
push
in
mov
jg
cmpsl
mov
push
call
shll
add
outsl
lcall
dec
pop
call
aas
sub
sbb
jne
lods
fsub
jecxz
fsubr
movl
mov
dec
dec
push
mov
push
and
outsb
or
stc
add
cmp
jns
sbb
pop
adc
test
push
test
rorb
mov
sbb
sub
mov
fimuls
mov
inc
pop
movl
xlat
add
mov
movsl
sbb
or
gs
add
xlat
jmp
add
xchg
cmp
test
add
adc
push
stc
rorb
hlt
pop
ret
lods
cmpsb
arpl
add
xor
add
jns
shr
orb
mov
out
xchg
mov
mov
adc
inc
xor
mov
adc
testb
inc
bts
ljmp
cwtl
fs
mov
out
cltd
mov
call
imul
or
dec
shll
test
push
inc
daa
mov
adc
xor
pop
push
rcl
js
je
insb
push
add
stc
andl
icebp
cmp
fisubs
sbb
adc
setae
jae
pop
inc
repnz
adc
adc
movsl
orb
inc
pop
jo
sub
je
pop
adc
jbe
add
mov
in
jg
add
cmpsl
je
xchg
movsb
scas
pusha
pop
and
aam
cmpsb
push
jge
test
mov
cld
add
lcall
pop
andb
mov
ljmp
and
and
loop
sub
mov
mov
cmp
mov
mov
dec
add
mov
mov
call
pusha
je
mov
dec
add
inc
int3
insb
adc
or
shlb
pop
pop
pop
ds
jmp
cmp
mov
or
mov
or
pop
fsubs
add
add
data16
lcall
mov
jb
jns
pushf
and
dec
std
rcll
dec
loop
mov
mov
data16
negb
scas
mov
mov
fdivrp
or
xchg
inc
mov
dec
ret
mov
pop
cmp
xlat
leave
es
sbb
xchg
push
add
pop
jecxz
jmp
cmp
mov
cmpsl
xor
out
xchg
adc
sbbb
insb
outsb
add
add
stos
pop
mov
cmp
flds
fisttpl
push
imulb
out
lret
mov
ja
lcall
icebp
inc
push
mov
sbb
cmp
aad
fs
test
andb
mulb
xchg
cmp
push
cmp
mov
add
mov
inc
mov
lods
xor
push
das
hlt
mov
inc
mov
pop
jns
sbb
daa
cltd
and
fsubl
fs
fs
cmpsb
adc
and
scas
add
fld
test
add
and
inc
in
xchg
add
push
mov
add
aas
add
lods
adc
mov
sbb
in
rcrb
lock
dec
pop
repnz
mov
jg
mov
adc
shlb
mov
pop
lahf
repnz
and
popa
mov
push
lcall
push
test
pop
in
add
aas
movsb
xor
xchg
bound
scas
jns
sub
xor
dec
and
jbe
add
push
popf
aas
clc
xlat
ss
das
out
sbb
inc
push
xor
les
js
out
mov
sub
insl
or
movsl
push
movsb
sbb
cwtl
icebp
scas
enter
add
add
jb
inc
clc
out
mov
std
popf
add
subb
pushf
faddl
jge
fstl
aas
cwtl
cmc
inc
add
add
cmp
and
inc
adc
clc
pop
aas
into
jge
sti
mov
fs
in
popf
add
aas
test
pop
aad
pop
and
mov
fldcw
or
dec
mov
push
and
imul
sub
sbb
mov
adc
add
mov
stos
cmc
mov
enter
mov
inc
cmp
and
cmp
aas
xchg
jne
mov
push
add
adc
xor
minps
pop
test
cmpsl
rclb
out
mov
scas
cmp
pop
mov
int3
pop
add
inc
mov
imul
push
sbb
ret
cmp
mov
mov
xchg
mov
pusha
jb
and
je
sub
xor
or
imul
lds
inc
inc
int3
enter
and
cmp
in
push
leave
jmp
shlb
pop
data16
hlt
cmp
adc
ret
pop
add
xorb
rorl
sbb
and
jge
sarb
fdivrl
das
lock
addl
mov
mov
sbb
xchg
cwtl
ja
mov
mov
jns
jns
sbb
dec
sub
test
test
dec
imul
xor
mov
mov
mov
fsubrl
xchg
aas
mov
shlb
clc
mov
or
pop
scas
dec
stc
adc
and
repz
push
sbb
daa
out
inc
call
or
add
sub
ss
adc
mov
inc
in
les
andl
dec
jl
mov
mov
xchg
in
mov
les
dec
dec
mov
jmp
add
push
je
inc
movsl
aas
adc
inc
popa
cmp
sbb
push
dec
add
jnp
cld
mov
loopne
push
dec
mov
ror
test
sub
mov
adc
roll
sahf
cmp
sub
pop
push
pop
jae
sub
in
mov
addr16
loopne
cmp
xchg
popf
sub
scas
movsl
jo
pop
jmp
movsb
jo
add
enter
cwtl
sub
sub
sbb
mov
jmp
add
rcrl
pop
jecxz
add
or
jne
pop
dec
andl
add
cmpl
ret
and
mov
mov
dec
inc
xchg
jp
or
jbe
cmp
and
mov
test
add
mov
sbb
inc
int3
shl
mov
sub
jmp
cmp
pop
cmp
and
add
and
xor
push
jecxz
mov
jae
popf
lods
pop
mov
sbb
and
jne,pn
mov
dec
mov
cmpsl
mov
adc
add
test
fcmovnb
repnz
negl
imul
test
cmc
stos
repnz
aaa
pushaw
jecxz
or
sub
hlt
and
mov
nop
sbb
mov
jnp
pop
loopne
add
mov
mov
sarb
jge
mov
jmp
mov
loopne
add
jo
jno
or
pop
int
bound
push
imul
add
mov
push
mov
pop
mov
shl
int3
add
push
orl
fucom
inc
shrb
pop
or
pusha
push
icebp
aas
add
popa
mov
and
add
icebp
xor
in
jecxz
repz
or
imul
mov
sub
mov
mov
push
pop
pop
sbb
push
pop
add
add
push
pushl
mov
add
sub
xchg
repnz
icebp
pusha
pop
mov
push
pop
popa
stc
push
cld
inc
push
dec
cli
lods
popa
lea
add
andl
fisubrl
xchg
sahf
out
jb
jae
dec
rcrl
es
in
inc
mov
sbb
add
cmp
rorb
aaa
mov
mov
jg
jnp
xchg
std
loope
pop
ljmp
or
call
pop
fmull
mov
cli
fisubs
xchg
cs
push
stos
xchg
pop
aas
and
sbb
dec
insb
jle
jmp
nop
sbb
clc
push
pop
inc
cmp
mov
inc
clc
jns
sub
pop
pop
clc
lcall
adc
mov
fstps
cmp
cmp
or
push
pop
call
loope
in
into
out
push
js
xchg
push
cmp
jbe
popf
leave
sub
out
fnsave
add
nop
call
cmp
pop
out
faddl
push
push
test
shrl
adc
jno
ficoms
cmp
test
mov
rcll
add
mov
and
negl
mov
ret
sti
push
pop
or
dec
jbe
rcrl
addb
cmp
lods
cmp
sub
loope
mov
mov
dec
push
fstpt
add
mov
and
rcr
cs
imul
int
stc
ret
in
pop
adc
insb
sbb
jo
sti
dec
imul
pop
fnstenv
adc
cmpl
dec
shrb
pop
idivb
aaa
incl
push
leave
lds
sti
cmp
push
dec
pop
mov
sar
jl
cmp
call
imul
pop
mov
test
and
ljmp
rcll
sbb
nop
add
shlb
cmp
addr16
mov
out
dec
outsb
adc
adcl
jns
andb
test
jb
inc
or
inc
sub
cmp
adc
push
popa
jmp
aam
sub
cwtl
aas
add
sbb
repnz
inc
mov
push
add
lret
push
mov
adc
jmp
stc
mov
mov
fucomp
cmpsl
test
lods
lods
push
pop
ficoms
mov
xor
jge
cmp
xor
mov
sbb
icebp
mov
lcall
clc
jmp
sub
movsl
xchg
inc
fldenv
daa
add
mov
pop
mov
lret
pusha
dec
notb
scas
mov
pusha
mov
imul
xchg
push
mov
outsl
add
xlat
xor
std
loopne
loope
decb
lea
mov
push
push
push
xchg
push
xchg
jecxz
pop
testl
insl
imul
nop
push
jae
shlb
outsb
int
inc
adc
mov
inc
push
imul
and
nop
mov
xor
fstpt
loop
je
adc
loop
xor
and
sti
cwtl
add
icebp
and
mov
pop
add
pop
push
fiadds
out
punpckldq
outsl
daa
sub
inc
aas
add
jecxz
out
scas
or
push
pop
ds
push
sub
in
les
popa
sub
addr16
jp
pop
inc
push
or
in
add
test
add
add
or
lock
xchg
outsl
daa
nop
inc
or
push
add
pushf
pop
add
mov
ja
push
stc
or
xchg
add
aad
add
mov
pop
loopne
lea
xor
xor
loopne
add
or
in
xchg
stos
jb
aam
pop
inc
repnz
inc
mov
mov
sub
loope
popw
xor
cmp
xchg
sub
mov
call
jle
pushf
cmp
pop
addb
popa
shlb
pushl
hlt
lods
pop
add
sub
int
insb
ror
test
cli
or
repnz
xor
and
mov
adc
dec
mov
push
sbb
and
int
loopne
pop
pop
pushf
push
xchg
movl
aad
add
es
dec
mov
jo
push
cmp
pop
sub
inc
pushf
and
mov
dec
pop
jnp
pop
inc
in
adc
add
dec
xor
xchg
sub
sub
cmc
popa
push
dec
sarb
jle
add
popf
adc
push
jns
sbb
add
add
pop
sub
add
mov
popa
mov
hlt
add
and
inc
sub
nop
sub
clc
inc
push
push
pop
pop
and
insb
scas
add
mov
jmp
ficompl
lret
mov
mov
out
lods
lods
call
mov
hlt
mov
loopne
jno
push
mov
test
daa
mov
nop
pop
call
shlb
outsl
pushf
dec
gs
jae
js
mov
sarl
jae
mov
dec
ret
outsb
or
fcmovbe
mov
push
scas
fiadds
rorb
aam
add
dec
jle
sbb
scas
imul
repz
and
jb
or
pop
jo
lds
push
and
adcb
xchg
push
aam
movsl
cmc
dec
pushf
pusha
cmp
jmp
fistpll
cmp
or
cli
pop
into
bound
movsb
add
push
popf
fnstenv
rol
add
add
dec
mov
cs
xor
addr16
pop
cmp
dec
push
cwtl
das
cmp
and
push
ret
pop
or
jno
sub
adc
push
cmp
outsb
mov
enter
push
aam
mov
add
fs
andb
test
jge
cmp
pop
cmp
outsb
loopne
push
push
shr
sbb
xor
clc
mov
pop
push
inc
or
sub
sub
and
add
push
jbe
lock
push
leave
push
pop
jle
lcall
dec
xchg
pushf
xor
lock
add
test
loope
pop
scas
repz
adcb
add
les
mov
add
fldenv
and
scas
xlat
jmp
js
loop
sub
rcl
mov
outsb
dec
pop
sbb
xchg
mov
lea
cmp
mov
xlat
sub
add
rorb
sbb
into
mov
rcrb
lcall
add
std
inc
movsb
jge
fildl
insb
out
sub
faddl
adc
adcl
cld
jbe
sbbb
sbb
out
push
mov
and
push
lock
mov
sarb
sub
ss
mov
lret
or
mov
sbb
xchg
jg
sub
add
dec
and
xor
out
mov
mov
movl
insl
jnp
xlat
fsub
sub
jmp
pop
in
xor
xchg
repnz
add
adc
pusha
add
ficoml
fwait
js
dec
cmp
gs
imulb
stc
sti
sbb
jmp
ret
and
enter
out
mov
dec
push
outsb
and
test
xchg
pop
loopne
sub
nop
mov
adcb
adc
fimuls
lods
cmp
mov
and
push
cwtl
mov
popa
jo
xchg
add
add
push
and
mov
clc
xchg
or
cmpsl
call
xchg
cltd
jb
adc
xchg
lds
das
scas
xor
jge
cli
stos
add
mov
out
mov
ds
mov
jno
mov
jl
inc
push
mov
pop
pop
inc
or
add
inc
or
sbb
test
arpl
lea
jmp
stc
or
lahf
insb
inc
cld
adc
sbb
sub
cmp
ret
add
mov
or
fsubs
cmc
and
loopne
aad
push
mov
rolb
add
and
push
mov
or
aaa
stc
or
cld
repz
insb
adc
imul
adc
adcb
mov
mov
xor
add
cmp
int
loopne
or
lock
jo
add
mov
stos
cwtl
pusha
mov
fldl
leave
lds
jns
mov
sub
pop
and
in
mov
fisubrl
mov
rorb
cmpsb
sarl
outsl
dec
pop
es
icebp
fwait
add
dec
ffree
les
mov
bound
leave
jne
shlb
outsb
mov
xor
mov
push
push
dec
call
mov
cmp
jbe
xor
pop
shll
push
js
loop
dec
aaa
pop
je
push
pop
pushf
jg
dec
jb
into
inc
popl
lods
add
dec
sub
adc
mov
aam
sarl
popa
nop
fwait
and
das
mov
push
fiadds
dec
mov
ret
xchg
jne
mov
mov
jl
sbb
adc
loopne
cmpsb
cmpl
data16
in
outsl
mov
and
pop
inc
sbb
xchg
jg
mov
cli
shll
adc
inc
lret
fmuls
or
mov
test
sub
gs
jmp
pop
sub
xor
inc
push
sbb
mov
lret
fstpl
pop
nop
in
cmp
xchg
sub
lds
mov
pop
xor
pushf
adc
sbbb
mov
push
test
and
jle
xchg
pop
mov
cmpsb
outsl
out
addr16
sub
enter
je
sti
imul
adc
or
push
push
jae
stos
xor
imul
addb
mov
pop
xchg
xchg
mov
add
sub
mov
inc
cmp
adc
mov
lods
add
insb
loop
mov
lods
popl
and
pop
jl
fiadds
mov
pop
xchg
das
ss
mov
mov
loopne
sbb
inc
cmp
mov
sbb
arpl
iret
pop
adc
jno
lock
mov
push
negb
ret
shr
mov
fisttps
andb
mov
ret
fnstsw
mov
lahf
mov
or
add
shl
shl
lcall
aaa
pop
mov
dec
dec
leave
push
arpl
push
pop
pusha
call
add
mov
fwait
or
jne
dec
mov
mov
icebp
scas
outsl
in
sbb
mov
xchg
fiadds
in
pusha
sub
out
out
cmpsb
ds
jo
stc
push
lods
filds
int3
mov
inc
test
pop
lock
pop
popf
imul
cmp
mov
or
sbb
lea
fsubrl
xchg
and
push
xor
stc
enter
call
jo
repz
adc
addl
or
mov
fstps
jmp
add
sbb
pop
add
mov
orb
aaa
push
mov
pushf
pop
outsl
or
jo
clc
jns
es
push
inc
mov
or
daa
repz
xor
sub
dec
lods
sbb
and
stos
clc
dec
mov
mov
push
adc
sub
mov
cli
add
lahf
mov
and
orl
lcall
clc
or
cmc
jb
or
aaa
in
lcall
ljmp
inc
je
xor
mov
push
inc
lods
insl
xor
movzwl
insb
je
xor
cmp
mov
loope
mov
xor
jecxz
ficoms
or
push
jb
xchg
add
xor
nop
mov
mov
sti
jmp
pop
or
mov
inc
or
orl
and
mov
push
lret
nop
add
push
lods
cmpsb
out
dec
pop
xchg
add
push
or
push
pushf
mov
test
cmp
sub
sbb
sbb
adc
sbb
ficomps
inc
sbb
gs
jo
add
xchg
xor
lcall
std
and
pop
add
neg
mov
mov
lahf
jnp
adc
testl
and
rcl
sbb
add
mov
cltd
out
mov
outsb
push
mov
or
jp
inc
pop
cld
mov
adc
mov
and
xor
fisubrs
add
hlt
cmp
sub
ss
outsb
adc
cmp
int
cs
aas
jae
sub
mov
jo
cmp
lods
es
xchg
fistpll
xchg
test
and
lods
add
mov
in
dec
push
mov
add
mov
mov
arpl
das
mov
mov
pop
inc
jecxz
cwtl
push
rorb
mov
jo
mov
lcall
mov
or
out
or
test
xor
inc
pop
add
jnp
sub
in
pop
repnz
cwtl
jns
lock
pop
add
fucomp
cmp
push
rolb
mov
or
ljmp
xchg
popf
dec
insl
cli
test
dec
sbb
and
xchg
ja
mov
cmp
mov
pusha
cmc
jmp
pop
js
out
jmp
xchg
call
mov
jns
ret
xor
xchg
pop
inc
or
pop
ds
pop
add
push
push
sbb
push
mov
lea
sub
adc
cwtl
jmp
mov
push
pop
test
jns
jmp
bound
xchg
sub
push
mov
inc
adc
cltd
or
pusha
mov
mov
aas
push
lcall
pop
dec
outsb
cmc
sub
sti
add
xchg
adc
add
or
sbb
or
roll
mov
popa
pop
test
shl
adc
orb
ss
jo
mov
aam
les
push
sbb
jne
adc
out
mov
mov
lock
cwtl
and
jl
sub
cmp
add
outsb
inc
pop
dec
cmpsb
cmp
jno
popa
push
stc
scas
pop
sbb
or
add
mov
shll
or
js
pusha
fbstp
inc
sub
mov
add
mov
sub
repnz
ret
in
jno
repnz
pop
add
adcl
daa
out
pop
add
mov
lcall
sub
mov
mov
mov
loopne
xlat
fiaddl
xchg
insb
jbe
rorl
not
lcall
fcmovnb
pop
xor
fcomp
sbb
cwtl
and
clc
rolb
push
push
push
push
scas
in
and
neg
loopne
pop
sub
add
add
aad
or
adc
pop
push
imul
adc
stc
xchg
aam
out
push
test
pop
scas
push
xchg
js
mov
mov
and
jg
nop
js
ljmp
nop
rcll
mov
nop
outsl
stos
into
sarb
add
inc
mov
add
test
mov
push
fmull
out
or
fisubrl
inc
add
xor
loopne
in
push
jbe
ret
mov
ss
cmp
mov
xor
xchg
pop
or
or
and
jmp
jbe
mov
mov
in
cmp
adc
jg
ja
testb
in
xchg
jne
xchg
faddl
and
dec
sub
mov
add
les
stc
and
test
cwtl
test
in
mov
out
aaa
xor
pop
dec
adc
jo
fwait
sub
add
pop
push
ja
dec
ljmp
fdiv
movsb
pop
lcall
lldt
icebp
scas
enter
inc
xchg
add
pop
mov
jnp
test
pushf
ds
out
cmp
pop
cmp
enter
in
and
xchg
cwtl
or
mov
mov
xor
or
add
xchg
mov
pop
sbb
mov
xchg
adc
add
push
into
dec
adc
add
mov
mov
sti
or
movl
xor
and
sti
or
xor
xor
gs
add
cmpsl
mov
add
or
inc
outsb
pop
sub
mov
lret
pusha
test
xorl
jle
push
das
mov
and
out
push
ja
or
or
das
jns
test
icebp
inc
ret
and
scas
je
js
sbbb
add
cmp
pop
mov
mov
pop
jno,pt
loopne
jae
push
cmp
aam
mov
add
inc
out
push
jae
push
adc
xchg
mov
xor
jmp
insl
dec
rcr
adc
add
push
leave
dec
xorl
out
mov
sbb
mov
lods
sbb
sub
or
fstpt
je
loope
imul
add
pushf
cmp
out
loopne
mov
nop
aad
mov
dec
shll
testb
push
and
sub
scas
fdivl
out
loopne
shll
sbb
push
mov
pop
ja
mov
jns
icebp
cmc
ret
add
pusha
xchg
rorl
add
mov
test
pop
adc
loop
scas
jecxz
aam
out
aam
es
mov
fcoml
mov
repnz
push
aam
daa
lcall
aam
hlt
insl
or
call
rolb
fcomp
xor
and
loop
push
movsl
imul
frstor
es
mov
nop
push
lahf
mov
jmp
push
xchg
jmp
jg
sti
push
mov
icebp
and
mov
in
mov
testb
in
orb
imul
pop
mov
orb
ljmp
jnp
fsts
adc
pusha
xchg
out
dec
jmp
scas
pop
add
and
push
shl
addb
inc
enter
loop
add
add
mov
xchg
pop
out
dec
les
lahf
dec
mov
movsb
sbb
xor
add
jge
adc
push
and
out
pop
push
aas
jge
testl
dec
and
inc
sti
out
fsub
test
nop
push
imul
test
xchg
sub
nop
mov
mul
loopne
adc
push
add
cmpsb
aam
loopne
inc
subl
cmc
xor
pusha
out
leave
or
and
jo
mov
adc
inc
sbb
add
das
movsl
pop
es
mov
inc
testl
int
rolb
into
push
push
add
push
sbb
ret
jnp
jo
mov
mov
rol
loope
sub
mov
add
bswap
add
mov
jnp
push
add
sub
fnsave
cmp
sub
clc
xchg
pusha
dec
adc
mov
jnp
dec
adc
mov
cmpsl
jne
roll
push
dec
daa
inc
mov
adc
lahf
xchg
mov
test
mov
xchg
sar
mov
sbb
push
lcall
inc
adc
loop
clc
ja
mov
or
gs
or
sub
faddl
aad
lds
ret
fildl
push
adc
xchg
sub
pushf
or
dec
movsl
mov
mov
add
cmc
jg
int
push
add
lcall
dec
mov
push
pop
bound
xchg
adc
faddl
outsb
movsb
cltd
pop
mov
dec
mov
pop
adc
pop
loop
add
frstor
shll
mov
test
xor
clc
mov
inc
leave
icebp
push
shrl
xchg
outsl
into
sbb
sbb
enter
pop
add
jmp
orl
movsl
cli
hlt
xor
add
mov
and
mov
mov
mov
into
inc
and
out
cmpsl
adc
pop
sub
mov
sti
cmp
fisubrs
aam
outsb
xchg
xor
shlb
pop
int
sub
outsl
adc
jb
popa
dec
pop
icebp
fs
fsubrs
ljmp
test
fisubs
mov
mov
pop
pop
add
mov
sub
cli
orb
mov
bound
popa
add
sub
shll
sarl
dec
nop
inc
mov
jl
mov
adc
pop
insl
mov
or
addr16
in
mov
lcall
mov
ljmp
dec
mov
icebp
pop
imul
dec
loopne
jae
jo
dec
dec
ret
fsubrl
xor
sbb
stc
and
add
rdpmc
mov
dec
or
add
pushf
mov
and
push
sti
mov
out
loop
jl
adc
pop
stc
xor
mov
xchg
cwtl
inc
adcb
push
jl
shlb
add
dec
cmpsl
jl
dec
hlt
ljmp
cwtl
pop
push
mov
fadds
pop
aad
cltd
inc
jnp
push
sbb
call
dec
push
jl
insb
or
mov
adc
cwtl
or
sub
lods
or
repnz
addb
pop
scas
pop
enter
xchg
fiadds
add
mov
and
adcb
mov
sub
scas
add
jl
pop
in
push
add
cltd
jg
add
mov
test
or
pop
push
cmp
add
cmp
inc
cmovnp
out
jecxz
xor
aas
inc
jnp
lahf
jnp
ljmp
imul
lea
add
pop
pop
mov
adc
or
mov
rol
xor
dec
mov
or
lds
mov
imul
push
sbb
dec
rorb
dec
outsb
pop
add
mov
clc
xchg
addr16
cltd
lock
pop
mov
cmpb
pop
cmp
and
or
out
aaa
pop
mov
stc
dec
call
mov
loope
test
add
or
dec
xchg
sub
jle
sahf
ret
imul
add
data16
inc
mov
hlt
or
dec
aas
loopne
pushf
lds
mov
pop
shlb
aam
call
pushf
repnz
adc
xor
mov
pop
jmp
bound
in
andl
add
jl
ja
mov
push
jmp
int3
cmpsl
mov
dec
ret
popf
outsl
mov
pop
lea
push
cmp
push
loope
cmp
pop
cmpsl
pop
mov
mov
lea
dec
cmpsl
pop
push
mov
ret
jge
xor
mov
sti
pop
int3
pop
cmc
mov
and
es
push
push
pop
pop
dec
pop
push
test
cld
jl
bound
push
add
pop
call
adc
mov
add
pop
push
xor
jo
clc
jp
call
and
es
mov
mov
js
sbbb
stos
sub
clc
and
inc
add
lock
mov
pop
push
xor
push
xchg
or
out
mov
add
fisubs
mov
int
out
and
sbb
addb
mov
add
jno
dec
imul
pop
bound
xchg
add
adc
mov
sub
fwait
jmp
mov
mov
in
imul
outsb
in
add
push
shl
mov
push
push
mov
jns
and
cmp
push
mov
int
ret
imul
xchg
xor
adc
sbb
loop
mov
fmuls
sbb
lahf
shl
jl
dec
loopne
das
inc
mov
mov
xchg
or
pop
test
in
jbe
mov
mov
daa
jns
in
fwait
pop
rolb
adc
xchg
xchg
aam
pop
mov
mov
leave
fs
pop
dec
or
sub
xchg
lods
xlat
mov
push
ja
out
mov
push
adc
mov
sub
xchg
outsl
frstor
pushf
loop
xchg
ret
lods
mov
stos
bound
and
jo
xchg
mov
pusha
out
cmc
sub
cmpsb
popa
or
sbb
imul
bswap
push
ret
addr16
inc
je
mov
mov
and
in
or
push
hlt
adc
fwait
rcll
shrb
repz
enter
push
popf
out
rclb
xor
cli
add
add
ret
imull
sbb
push
pop
mov
ret
sbb
mov
lods
sarl
inc
inc
in
inc
push
jmp
fmull
xor
push
cltd
mov
push
fistps
add
repnz
mov
mov
mov
cmp
sub
movsb
hlt
cltd
adc
adc
inc
loopne
es
daa
jbe
out
gs
adc
jl
add
mov
cmp
inc
inc
ror
inc
sub
lods
enter
movsb
dec
mov
jg
mov
sbb
cmp
dec
pop
mov
mov
xor
mov
sbb
nop
outsb
outsb
add
sbb
mov
mov
into
pop
push
xor
pop
les
mov
adc
add
jg
sub
lahf
cmp
mov
cmp
aas
dec
cli
test
fwait
scas
ror
jle
aaa
dec
mov
push
cltd
das
or
ja
fidivs
or
jno
pop
mov
pop
nop
mov
add
push
out
add
push
rorb
mov
clc
mov
mov
xchg
pusha
or
imul
xchg
push
mov
adc
popa
rcrl
or
xchg
jbe
data16
add
int3
pop
jb
cmp
push
pop
popf
xor
call
stc
inc
mov
bound
lods
fcompl
stos
out
leave
adc
add
jns
inc
mov
adc
jae
push
adc
mov
add
testb
sbb
fwait
jne
mov
push
push
scas
push
and
cmp
adc
dec
out
or
addr16
xor
xchg
das
xchg
jo
in
add
mov
popf
mov
ret
lahf
push
xchg
cld
roll
ret
push
xchg
and
cltd
xchg
into
imul
push
lds
nop
pop
push
push
and
and
shll
pop
xor
dec
xchg
add
jne
cwtl
push
inc
shl
sbb
jns
xor
imul
sbb
inc
aaa
insb
leave
add
pop
lcall
xlat
testl
pop
movsl
repnz
mov
jg
mov
sar
jle
adc
push
dec
mov
movl
das
mull
sub
inc
add
in
dec
jae
add
push
or
dec
dec
add
mov
sti
inc
cs
lods
push
outsl
inc
icebp
lock
dec
push
pop
ret
and
inc
lret
dec
mov
sub
stos
xor
arpl
sbb
subl
pop
jge
mov
add
mov
lret
fdiv
and
sbb
arpl
filds
movsl
pop
cmpsl
repz
mov
jp
mov
push
pop
hlt
pop
dec
dec
inc
add
mov
xchg
xor
aas
sbb
inc
sbb
test
mov
pop
add
test
fisubl
add
cli
das
loope
inc
add
or
into
add
outsb
mov
inc
int3
push
pop
fimull
adc
add
cmp
psraw
scas
lahf
add
push
push
lahf
mov
add
das
dec
pushf
mov
inc
add
std
daa
and
mov
adc
nop
ret
setne
lea
or
push
xchg
and
add
jae
imul
sub
xor
push
add
xor
test
mov
lock
pminub
sub
ficomps
sbb
popf
faddl
or
in
dec
iret
aam
test
cmp
sbb
push
push
inc
xchg
loope
jg
add
add
test
xor
lret
in
btc
nop
in
push
xor
mov
outsl
sbb
cmp
shlb
or
push
xchg
in
and
mov
push
or
add
cmp
movsb
lahf
xlat
outsb
pop
inc
bound
sbb
loopne
jmp
inc
mov
rolb
pusha
pop
jo
or
add
cltd
ret
adc
mov
cli
and
jb
hlt
xor
jbe
add
lret
or
inc
jl
enter
add
xchg
pop
jnp
test
test
push
mov
or
mov
in
add
dec
or
cmpsl
jb
les
jg
inc
inc
jge
add
adc
add
mov
push
sub
add
mov
std
mov
fistl
loope
sbb
add
push
mov
add
rol
ds
hlt
mov
add
add
or
jne
loopne
outsb
fdivr
test
jbe
add
jnp,pn
push
inc
in
xlat
cwtl
testb
data16
adc
lret
inc
jnp
adc
outsb
mov
cltd
add
and
mov
jo
add
fxch
lcall
xor
out
inc
iret
imul
xor
orb
cld
arpl
mov
cltd
add
push
pop
pusha
data16
xor
lock
mov
ljmp
mov
pop
add
sub
jle
add
movsb
jno
dec
and
sub
sub
or
es
std
add
int
and
xor
mov
add
nop
lret
arpl
or
xor
xlat
inc
flds
scas
adc
cmp
mov
movsl
inc
cmpsl
mov
out
jo
ret
cmp
dec
stos
repnz
jns
or
push
pushf
fs
xchg
pop
aaa
ljmp
cwtl
les
xor
aas
setl
imul
mov
shlb
mov
and
scas
ds
faddl
adc
add
mov
inc
pusha
xor
out
ret
fcompl
ret
add
outsl
mov
jnp
sub
cmp
mov
imul
sub
adc
sub
test
mov
pop
jl
dec
mov
lahf
nop
int3
pop
cmpsl
xor
add
xor
fwait
add
add
inc
and
test
popf
lahf
add
aam
outsl
or
add
icebp
pop
in
cmp
test
cmp
shll
jnp
add
mov
aad
pusha
repz
pop
xorb
or
and
iret
add
dec
jne
mov
adc
xchg
xchg
add
adc
loope
fisttpll
outsl
push
pop
xchg
out
pop
add
ficomps
inc
lods
jp
xor
mov
push
ds
push
cmpsl
les
imul
sti
outsl
aaa
add
das
imul
mov
xor
jg
fdivs
add
sub
sarb
iret
or
or
xchg
jecxz
mov
sub
lds
inc
xchg
sub
add
nop
sbb
hlt
lcall
inc
lods
mov
mov
insb
inc
fs
aas
sub
add
mov
test
jae
daa
cmp
or
mov
repnz
fs
clc
and
ret
test
pop
aam
cltd
push
mov
or
sub
push
add
out
addl
lcall
and
aas
insb
out
add
push
imul
rcll
mov
cld
in
call
jns
ret
lods
and
test
sbbb
fs
cmp
add
xorl
insl
push
pop
clc
or
inc
add
rol
out
sti
cs
xor
mov
test
push
sub
jbe
xor
repz
mov
push
sbb
aad
xorl
loop
push
cmp
or
xor
pop
cmp
push
mov
jb
mov
add
rcrb
rcrb
pusha
push
and
and
sub
ljmp
add
aaa
add
shll
dec
xchg
iret
data16
jne
cmp
mov
js
sub
pop
adc
add
repz
pop
inc
fldl
imul
mov
aaa
int3
fistl
or
and
pop
bound
clc
jne
mov
add
and
frstor
push
sbb
add
je
push
xchg
gs
fwait
add
jno
lods
and
fsubrl
and
mov
jp
mov
mov
repnz
into
pop
jmp
mov
and
cmpsl
test
rcrb
and
les
sbb
add
jnp
jae
dec
cmp
adc
es
jne
xchg
aad
adcl
mov
mov
cmp
lods
clc
and
lock
sbb
sahf
mov
addr16
fiadds
adc
repz
ss
mov
pusha
nop
gs
add
lock
add
pop
pop
sbb
andb
fadds
lret
sbbb
adc
cmp
xor
or
jnp
cmp
and
pusha
call
out
add
xor
rcll
push
ljmp
jnp
add
fs
add
lret
adc
aaa
xchg
jmp
add
and
dec
mov
push
add
and
sti
or
clc
push
push
enter
push
add
imul
fsubr
ret
cs
cmc
cltd
jnp
fs
adc
mov
inc
addb
add
mov
add
dec
cli
push
add
mov
push
movb
adc
ss
or
add
sub
jecxz
bound
daa
adcl
inc
sub
sbb
movl
orb
add
and
ds
or
push
aad
rcrl
loop
inc
cmp
cmp
or
or
dec
adcb
mov
je
scas
dec
cmp
jno
shl
das
jo
scas
add
xorl
push
mov
loopne
enter
mov
pop
xchg
and
push
mov
add
addl
sub
mov
push
cmp
push
push
inc
cmp
pop
add
out
neg
sub
mov
sti
enter
aas
add
and
rcr
pop
adc
pop
dec
loope
mov
pusha
aas
mov
pop
test
dec
repnz
sbb
mov
sbb
dec
pop
loopne
popl
cmpsl
ja
or
jmp
pop
sbbl
add
push
push
mov
add
adc
jmp
push
xchg
add
add
loopne
sbb
cmp
nop
arpl
xor
js
addr16
push
aam
jge
psubsb
out
je
cmp
lds
push
fistpll
data16
ds
pop
clc
push
pop
cmp
orb
sbb
popf
ja
out
jno
and
inc
and
xor
cmc
or
jno
stc
cmp
outsl
jle
xchg
pop
mov
jne
xchg
add
mov
jne
mov
add
or
test
in
lret
pop
add
mov
rcll
pop
lds
add
xorl
jne
stos
outsb
xchg
pop
sbb
lahf
js
sub
inc
stos
or
fisttpll
out
push
pop
sub
mov
outsb
rcll
pop
mov
pusha
repnz
mov
sub
add
cmc
int
mov
or
jg
mov
mov
loop
inc
xor
mov
shrb
imul
push
jb
les
addr16
enter
push
pop
cmp
sub
inc
fsubrs
add
sarl
aas
push
lods
repz
add
or
add
gs
dec
adc
fldt
lods
rorb
mov
stos
jp
add
sub
loope
fisubl
add
sbb
adc
jae
add
pushf
mov
movsb
orb
sti
fwait
jo
add
jecxz
xchg
enter
imul
add
mov
add
xlat
mov
or
daa
rcrb
pop
movswl
cmp
jne
push
jle
push
sahf
imul
mov
and
ret
pop
add
dec
push
sarb
add
imul
mov
mov
xor
xchg
or
mov
imul
xor
inc
push
xchg
repnz
xchg
adc
xchg
add
cmpsb
andb
test
mov
add
ja
in
xor
sbb
pop
mov
addr16
inc
movl
push
daa
add
clc
fadds
inc
add
gs
add
loopne
mov
enter
inc
es
popf
mov
adc
fsts
rcll
lahf
stc
inc
or
or
popa
popf
jmp
dec
pusha
lcall
jge
popa
mov
dec
loope
cltd
nop
dec
ss
enter
nop
cmp
popf
inc
add
pop
fsubrl
add
fisubrl
aam
jno
jo
pop
into
xor
cmc
sbb
mov
shl
pop
pop
ffree
sub
pop
iret
iret
filds
adc
mov
add
pop
push
not
jae
sarl
or
push
cld
xlat
shrl
addr16
sub
push
mov
shlb
add
adc
push
aaa
inc
cmp
push
pop
and
and
out
dec
mov
jg
lods
or
fiadds
into
pop
cli
icebp
adc
addl
mull
lock
addr16
mov
mov
mov
ljmp
push
rcrb
xor
or
xor
push
loopne
jp
dec
les
rcrb
and
dec
loope
and
push
pop
push
cltd
adc
adc
cmpsl
inc
adc
mov
sbb
inc
cmpsl
loop
jo
je
dec
test
pusha
dec
adc
iret
loopne
jmp
sub
push
cmpsl
lahf
fists
fdivrl
jmp
stc
sbb
mov
or
push
push
inc
adc
rolb
add
popf
mov
popf
pop
mov
inc
adc
sbb
mov
mov
std
addr16
icebp
mov
cmpsl
and
or
ret
jbe
dec
mov
sar
jo
or
mov
fisubs
xchg
sub
stos
and
add
shlb
jge
outsb
in
imul
push
inc
rcrb
xor
add
mov
or
aam
aam
sub
xchg
add
mov
sub
shrb
int3
and
and
lods
imul
mov
pop
in
inc
mov
out
cmpsb
stc
mov
fadd
cwtl
sub
or
shll
aad
insb
push
leave
and
jnp
fsubrl
and
cmc
sti
sub
cltd
fcomi
add
rorl
inc
sub
pop
and
lds
inc
cmp
mov
insl
stos
push
push
jle
adc
lods
push
ljmp
out
popf
cmp
xchg
adc
daa
add
or
adcb
ljmp
push
daa
lret
leave
push
lcall
push
popa
cmp
add
aad
in
sub
rcr
popa
jne
icebp
and
faddl
or
push
jmp
xchg
pcmpgtb
orb
jle
mov
mov
jns
xchg
pop
dec
clc
xchg
jge
add
add
adc
daa
inc
sti
cmp
out
push
movzwl
pop
call
lcall
pop
pop
sub
sbb
mov
push
es
cmp
sbb
or
jbe
rorb
mov
pop
xorb
pop
jecxz
inc
pusha
lods
pop
cmpb
flds
out
insl
cmp
add
sub
inc
scas
add
sbb
mov
jae
add
push
imul
mov
loopne
repnz
xchg
dec
lds
daa
pop
in
cmpsl
pop
cld
dec
rcrl
mov
outsb
imul
and
mov
pop
xor
and
adc
dec
sub
xor
in
popl
and
or
add
outsl
xor
pop
shlb
jge
or
mov
pusha
fsubrs
orb
mov
inc
test
ds
les
and
mov
js
inc
rolb
cs
pop
mov
dec
mov
jae
data16
pop
fstl
pop
add
push
mov
dec
jle
cltd
nop
cmp
mov
jns
add
adc
adcb
mov
jle
sub
jnp
push
scas
imul
or
adc
xchg
adc
xlat
clc
jae
enter
and
pop
xor
pop
inc
sub
sub
adc
stos
aad
hlt
fcoml
pusha
mov
xor
sub
or
outsl
loope
mov
movsb
push
inc
flds
or
out
cwtl
push
push
cwtl
cld
pushf
adc
cwtl
xor
xlat
cltd
cmc
pop
xor
lea
inc
adc
cwtl
push
stos
lahf
mov
pop
inc
bound
dec
cmpl
push
stc
sub
mov
popa
xchg
add
add
cmpsb
jb
xchg
sub
in
mov
imul
push
adcb
int
loopne
imul
or
or
push
lret
mov
fcompl
addl
jg
stc
add
popf
je
mov
mov
jae
add
pusha
jecxz
jno
mov
adc
adc
fs
cltd
test
call
fwait
lods
adcb
xor
ja
adc
push
add
xchg
mov
add
xchg
cmc
arpl
repz
dec
push
sarb
pop
sbb
sahf
jns
bnd
in
jl
jns
adc
or
aam
loope
and
add
shlb
adc
and
aas
cwtl
and
test
pop
out
aaa
fs
sub
add
test
jecxz
pop
jg
and
or
fcoml
out
inc
sahf
pop
or
mov
and
mov
jl
shrl
add
add
popf
sub
xchg
or
sbb
add
sub
jg
ficoml
push
test
ds
ds
pop
shll
mov
ja
fwait
mov
popf
pop
adc
jne
dec
mov
and
add
xor
lcall
pushf
sti
sbbb
fdivl
add
arpl
sbb
pop
inc
data16
push
mov
mov
and
ds
xchg
mov
mov
push
in
add
add
xchg
ret
negb
das
mov
cmp
and
shlb
in
in
pop
dec
push
or
sbbl
mov
nop
enter
xchg
and
cwtl
ret
dec
es
cmp
adc
mov
nop
jmp
sub
push
ret
sbb
pusha
push
popa
mov
or
pop
mov
sti
jp
add
xchg
pop
inc
mov
psubsb
xor
or
xchg
sbbb
clc
pop
fisttpl
or
jge
xchg
add
test
or
subb
pusha
pop
in
lods
sub
add
cmpsb
adc
outsb
push
sbb
push
imul
call
add
sub
adcb
inc
ss
out
add
lret
push
mov
int3
mov
cmp
popf
cld
push
scas
jno
pop
push
or
cltd
cwtl
sbbl
dec
repz
push
or
fbld
test
scas
shrb
xchg
xor
imul
add
rcrb
sub
adc
bound
lods
loopne
add
or
cmp
inc
push
nop
es
push
pusha
lds
dec
xor
sub
add
adc
mov
inc
add
mov
xchg
inc
add
aad
dec
pop
cmp
lock
mov
add
or
gs
test
and
roll
xchg
test
fsubs
xchg
inc
dec
and
pmaddwd
lea
dec
les
fdivr
push
adc
dec
mov
add
push
jb
dec
mov
lea
outsl
icebp
and
xchg
push
xchg
lods
sbb
inc
int
xor
xchg
push
imul
and
adc
xor
pop
jnp
cli
mov
add
sub
dec
cmpsl
shl
add
inc
pop
cmp
inc
or
nopl
int3
inc
adc
lock
repz
push
aam
test
mov
jle
loope
test
pop
andl
mov
out
cmp
test
sbb
adc
mov
notl
lds
fldt
subb
jp
or
or
roll
mov
push
cmpsb
and
xor
mov
xchg
loopne
ficoml
pop
stos
xor
rorb
js
add
xchg
std
dec
pop
push
iret
xchg
mov
cmpsb
mov
sub
int
xchg
test
inc
inc
out
and
xor
mov
fs
aad
lods
pop
xchg
mov
and
xor
rcr
leave
pop
xor
add
lret
and
push
inc
cmp
add
arpl
mov
jmp
and
test
sbb
jmp
std
out
mov
dec
dec
fldt
ret
clc
push
push
sub
mov
in
and
cmp
mov
int3
fiadds
xlat
loopne
mov
pop
or
int
and
test
mov
dec
mov
outsl
daa
lret
test
push
cld
add
mov
cli
jne
cmp
xchg
lods
lods
mov
dec
pusha
enter
addr16
ret
pop
pusha
or
and
mov
pop
lea
mov
push
push
mov
in
add
or
or
sub
adc
adc
add
add
add
adc
inc
xchg
mov
and
mov
pop
out
cmc
test
mov
xor
ja
push
sbb
test
pushf
mov
push
sbb
out
inc
xor
jns
xlat
das
and
pusha
adc
push
pop
push
or
add
jne
push
xchg
repz
insb
mov
lea
lret
pop
and
cmp
inc
mov
stc
scas
xchg
dec
adc
lea
adc
in
add
sbb
imul
fidivrs
sbb
jbe
xlat
or
scas
out
pusha
pop
imul
cmp
popa
mov
test
push
sti
daa
shlb
jge
add
mov
xchg
fisttpll
lods
je
mov
adc
leave
fldl
push
jecxz
inc
das
es
dec
std
or
xorb
push
dec
jbe
lea
pusha
pushf
push
inc
jge
mov
pop
movsl
mov
sub
or
push
adc
push
fstl
add
gs
outsb
sarb
add
fcmovne
cmpsl
fwait
scas
enter
xchg
xchg
ja
adc
inc
pop
add
rorb
negb
push
pop
addr16
addl
notb
lods
mov
add
lea
xchg
or
loope
pop
and
fisubl
mov
daa
lock
xchg
cld
adc
add
push
repz
jecxz
adc
lds
pusha
je
push
pop
mov
add
mov
mov
sbb
xchg
pop
dec
mov
xor
pop
lahf
adc
adc
out
pop
rcrb
insl
push
popa
mov
cmpl
xor
and
pop
dec
jmp
ss
sub
jp
roll
leave
mov
cmp
je
inc
adc
in
fcoml
dec
push
movl
insl
adc
sti
sub
test
or
push
fistps
lahf
into
mov
adc
or
mov
les
sti
or
jle
hlt
jle
daa
mov
dec
push
and
adcb
fistpl
aam
mov
fwait
std
cwtl
out
cmp
xchg
imul
mov
jg
mov
push
pushf
imul
sbb
sub
scas
icebp
mov
shrb
cltd
mov
loop
jne
cmc
mov
adc
adc
or
mov
adc
dec
jge
es
imul
push
cmp
addr16
or
jle
dec
das
or
mov
lods
push
iret
xchg
idivl
xor
mov
cld
pop
jno
cmpsl
adc
jmp
sbb
add
sbb
pop
enter
inc
cs
adc
movsb
and
nop
inc
stos
fsts
fiadds
fwait
rol
mov
push
nop
sub
mov
test
pop
xor
sti
and
mov
and
outsb
xchg
jg
sbbb
jmp
std
add
pop
jae
or
inc
dec
mov
int
cmp
enter
push
out
xor
nop
inc
adc
das
sub
dec
xchg
insl
int
add
cmp
adc
mov
xlat
sysret
push
push
test
xchg
nop
fwait
call
push
xorb
sub
cld
imul
add
xchg
test
dec
sbb
sub
xor
jne
xchg
cs
cltd
sbb
mov
mov
or
add
fisttpl
adc
in
call
popa
loope
mov
orl
sti
cmp
add
addl
dec
cmpb
sti
dec
loop
shl
adc
mov
dec
out
jp
adc
cltd
clc
ret
out
popa
mov
imul
add
fstl
mov
adc
dec
into
sbb
and
jge
mov
push
in
xchg
sbb
jecxz
sub
gs
inc
out
or
cmp
add
dec
popl
push
dec
or
add
jmp
mov
fbstp
lds
inc
addl
push
push
jl
es
js
inc
add
call
push
les
leave
cltd
mov
inc
sbb
daa
and
add
add
adc
sbb
push
dec
cmp
sub
fstpt
dec
add
cltd
movsb
das
push
inc
add
sbb
mov
push
jbe,pt
bound
dec
nop
or
ss
addr16
jo
push
add
push
inc
or
out
adc
push
dec
test
sbb
ret
rcll
roll
paddd
cs
jmp
sbb
pop
bound
xor
and
sbb
in
cmp
add
pop
int3
cmp
pushf
in
push
inc
andb
or
loopne
add
and
cmpl
mov
push
movb
or
std
out
xchg
idivl
mov
push
push
mov
xor
movzbl
lret
mov
xor
xchg
sbb
mov
inc
ret
add
add
cmp
and
or
add
cmp
mov
rorl
add
test
cmp
iret
and
lret
sbb
push
xchg
adc
mov
jmp
adc
cmpl
fs
imul
lea
arpl
or
or
cmp
xor
test
adc
test
adc
shr
inc
lods
add
mov
cld
xor
adc
mov
mov
add
add
jmp
dec
ret
rcll
add
or
jns
movsb
pop
jns
sbb
sarl
and
es
gs
xchg
add
shr
or
push
adc
push
inc
mov
dec
fwait
notl
add
jmp
or
mov
add
pop
jmp
test
jb
cmp
push
and
add
mov
mov
or
pop
inc
jne
push
repnz
rorb
insb
jmp
sub
xor
or
xchg
add
mov
nop
and
or
push
jne
cmpsb
or
outsl
adc
mov
mov
xor
xchg
jbe
repnz
cmp
sub
xchg
adc
cmp
dec
xchg
stc
mov
or
sub
xchg
mov
mov
mov
ret
and
int
sub
fwait
xor
stc
jmp
mov
add
shlb
or
push
lahf
leave
test
push
sbb
fs
adcb
mov
enter
pop
pop
lock
pop
ret
sbb
xchg
fimuls
jbe
sub
loopne,pn
test
addr16
add
pushf
cmp
fbstp
ret
movsb
or
iret
cmc
sbb
insl
add
ja
add
xchg
cs
or
int
pop
push
xor
xor
push
mov
add
gs
adc
imul
mov
adc
push
inc
adc
adc
mov
outsb
cmpl
out
add
and
add
gs
cmp
out
xor
fbld
xchg
xchg
add
rolb
sti
lds
int3
js
mov
sahf
in
and
outsl
arpl
in
pop
flds
xchg
pop
cli
pop
fwait
xchg
cld
sbb
push
mov
ja
add
aad
int
pushf
push
xchg
cmp
sbb
repnz
cli
jae
inc
aam
mov
push
push
inc
sbb
sub
stos
sub
and
mov
pop
mov
dec
xor
fcmovne
add
inc
mov
mov
and
aad
push
dec
add
mov
pavgb
jge
add
xchg
push
mov
pushf
sub
or
or
add
daa
fstpl
pop
pop
jb
sbb
mov
mov
sub
fiaddl
push
push
outsl
or
or
add
sbb
lahf
add
push
cmpl
lcall
fs
mov
push
fdivrs
jns
mov
mov
add
add
push
cltd
divb
cli
xor
dec
or
and
pop
cltd
or
pop
mov
and
ljmp
fimull
shlb
and
pusha
mov
and
add
mov
outsb
add
adc
xchg
jns
adc
pop
icebp
imul
adc
push
push
or
mov
js
fadd
mov
testb
mov
xor
adc
dec
mov
xchg
icebp
mov
jge
loope
sub
imul
das
add
push
xchg
sbb
mov
xchg
add
jo
nop
xchg
hlt
lock
or
aaa
movsl
ljmp
in
xor
sbbb
stc
pop
sbb
mov
jae
adc
incb
and
nop
xor
cmpsl
inc
pop
fstl
jp
cmp
mov
cltd
insb
testb
and
inc
cltd
test
add
les
dec
inc
add
and
pop
pop
cmp
jb
shl
pop
test
inc
popa
adc
adc
inc
push
add
lea
add
sbb
nop
pushf
repnz
or
xor
cltd
je
data16
lods
lret
inc
pushf
sti
popa
mov
and
mov
movsb
aaa
enter
movaps
dec
jecxz
daa
movsl
cwtl
fsubrl
dec
and
fisttpl
leave
sbb
fadds
rol
sub
js
lahf
arpl
xor
loopne
ds
xor
pushf
lock
push
hlt
add
xor
push
push
mov
nop
xchg
inc
jbe
push
pusha
addl
sbb
sub
push
repnz
mov
test
mov
ljmp
sub
out
or
mov
jb
inc
xchg
inc
xchg
lods
xchg
mov
jae
sbb
adc
jnp
inc
aas
fadds
sub
inc
and
push
dec
xchg
push
xchg
mov
dec
xchg
xchg
or
fildl
lock
or
push
call
fcmove
pop
xor
jl
scas
push
xchg
cmc
pusha
inc
aad
ja
add
push
xor
subb
and
add
push
push
jg
fadds
sbb
out
mov
xchg
push
add
mov
mov
rorl
js
test
fidivrs
andl
shl
jns
xchg
pusha
pop
push
and
adc
pushf
ja,pt
push
cltd
shrl
in
and
adc
mov
sub
add
stos
inc
push
pop
pop
add
add
jb
adc
loopne
push
jns
loope
inc
in
xor
enter
cmp
icebp
ljmp
push
dec
mov
mov
add
incl
test
pop
cmc
int
push
dec
xchg
sub
inc
or
das
sub
mov
aaa
xor
dec
lock
or
scas
sbb
add
and
add
push
dec
sub
js
pop
and
testl
xchg
sub
popf
xchg
loopne
jo
lret
push
sub
data16
adc
negb
add
dec
pop
xor
sbb
or
adc
pop
loop
les
imul
bound
int
hlt
test
cmpl
push
fidivrs
pop
enter
clc
or
add
push
fmuls
into
mov
dec
add
adc
ss
xchg
in
lret
add
push
pop
clc
xchg
mov
jle
push
dec
and
mov
or
shlb
movsb
test
cltd
and
cmc
test
mov
or
mov
add
sbb
or
rcrb
testb
cmp
punpckhbw
jo
rcrl
sahf
and
ljmp
sub
test
popf
testl
jne
fadds
daa
cmc
add
int3
add
fsubs
cs
filds
push
fs
stc
mov
rcrb
cld
pop
lcall
and
push
dec
sar
call
sbb
out
cmp
adcl
fildl
add
pop
adc
es
sbbb
fs
subl
cmc
clc
lea
mov
push
lcall
in
test
add
arpl
add
insl
lahf
inc
push
or
nop
les
es
or
adc
aad
cmpl
adc
outsb
fs
js,pn
stos
add
push
adc
or
xchg
xor
add
push
testb
je
scas
add
cmp
mov
cld
imul
fwait
cmpsb
add
jmp
dec
adc
das
and
loopne
jnp
jns
and
mov
pop
mov
add
inc
sub
inc
cwtl
cmp
sub
lock
les
ljmp
push
or
andb
mull
pop
push
xchg
jmp
mov
in
add
cld
sub
mov
xchg
xor
sti
sub
inc
push
or
sbb
pop
cltd
data16
cmp
sub
imul
jo
sbb
cltd
adc
mov
cmp
pop
fwait
xlat
cmc
add
xchg
adcb
sub
pusha
mov
roll
nop
shlb
or
shlb
pusha
test
jp
xor
incb
div
jo
mov
mov
lds
pop
xchg
mov
push
xchg
push
adc
ror
cmp
orb
scas
ja
sub
push
outsl
jp
cmp
inc
and
adc
mov
or
cs
and
xor
pop
jnp
or
imul
sbb
add
push
fwait
adc
aam
flds
add
sbb
bound
insl
addr16
rcll
out
cmp
sub
cld
lock
out
push
pop
add
sarl
lcall
add
lret
testb
mov
pop
lods
insl
and
sub
sbb
shl
xor
jp
bnd
shlb
orl
test
insb
cmp
arpl
les
mov
xchg
add
pop
cmc
lods
mov
pop
pushf
cmpsb
jg
pusha
rcrb
pop
inc
mov
rorb
sahf
fsubs
jnp
xor
inc
mov
shlb
pop
push
add
aas
sysret
sub
rcrb
jo,pn
jl
and
loopne
push
notb
lock
inc
dec
fsubrl
js
jl
adcb
mov
adc
sub
pop
cltd
insl
negb
add
inc
cltd
cmp
pop
and
dec
mov
in
loopnew
fmull
psraw
int3
or
cwtl
or
push
bound
cmp
cltd
popf
shrd
mov
es
test
mov
mov
sub
lods
popf
add
js
pop
orb
lock
mov
dec
xchg
jmp
addb
inc
dec
movsb
or
test
repnz
jns
imul
int
daa
movsl
mov
adcb
pop
aaa
cmp
jle
xchg
ret
and
push
dec
fdivrl
add
xchg
fsts
push
pop
scas
inc
cmp
pop
mov
push
mov
mov
sbb
cmp
hlt
shll
cli
and
mov
sbb
add
dec
push
rol
test
mov
or
jo
or
dec
lods
iret
sub
mull
push
mov
insb
orb
test
adc
xchg
add
ds
pop
ror
sub
lods
mov
movl
or
fldcw
inc
xor
sbb
movsl
arpl
jno
shr
mov
adc
icebp
mov
mov
pop
in
pop
mov
cmpsl
andb
add
push
mov
orl
or
mov
or
rclb
push
ss
clc
sub
inc
nop
and
cwtl
and
ret
push
mov
mov
pop
clc
movsb
mov
int
or
fadds
mov
scas
add
push
push
adc
pop
dec
loop
xlat
xor
negl
aam
clc
xchg
hlt
mov
cld
sbb
ljmp
mov
sub
jle
add
movb
fwait
mov
or
add
insl
xchg
pusha
aam
scas
pop
fstpt
enter
jmp
jb
mov
out
dec
add
stc
sbb
cmpsb
push
icebp
push
sbb
adc
sub
xor
js
fstl
jp
dec
push
inc
mov
adc
ss
push
mov
les
les
add
inc
jb
sar
imul
mov
pop
out
jb
data16
push
mov
js
inc
xchg
cmp
loopne
push
call
adcb
pusha
cmpsb
fsts
dec
inc
and
mov
das
jle
xchg
adc
push
pusha
nop
fucomp
xorb
pop
jle
fstps
pop
inc
xchg
sub
mov
loop
call
add
push
fimull
bound
loopne
pusha
orl
or
lods
add
sbb
sbb
imul
add
and
mov
push
pusha
adc
mov
xchg
imulb
add
inc
fs
das
andb
add
jge
cs
and
ret
jne
cs
pop
pusha
sbb
sub
or
xchg
clc
add
pop
cld
jge
stos
into
mov
add
fnsave
mov
fdivrs
lds
push
inc
xchg
or
mov
xchg
fmuls
dec
jo
call
outsl
jo
fs
sti
mov
enter
pop
dec
rorb
cmpb
mov
les
inc
sbb
enter
or
add
cmp
push
xor
sub
out
lret
jb
sbb
mov
inc
sub
cld
xor
sbb
or
add
insl
rcr
mov
std
inc
ds
in
fwait
shlb
add
cmpsb
call
push
add
addl
ret
add
lock
add
mov
daa
mov
adc
xor
add
test
xchg
leave
cmp
movsl
fistl
inc
sbb
lcall
mov
sub
push
sbb
cli
js
mov
dec
and
sbb
pop
enter
outsb
fsubrs
dec
xchg
call
rcrb
and
sub
mov
lret
repnz
inc
mov
push
add
mov
call
mov
push
shl
nop
mov
test
into
inc
mov
xor
and
add
inc
mov
loopne
ljmp
add
jne
add
adc
loope
inc
add
dec
test
data16
mov
xchg
and
sub
stc
mov
pop
cmp
sub
mov
sbb
aam
push
xchg
and
mov
cwtl
faddl
imul
arpl
mov
jmp
pushf
pusha
rclb
stos
push
popf
xor
pop
enter
and
adc
roll
cltd
das
insb
add
xchg
mov
ss
mov
fstpl
pop
push
push
jl
xor
sbb
adc
push
inc
mov
movsl
add
imul
or
bound
push
ds
lods
lds
mov
out
inc
jmp
sub
imul
and
insl
fwait
loopne
out
inc
cmp
sbb
jg
mov
clc
mov
add
repnz
nop
sbb
je
pop
or
push
bound
pop
ljmp
mov
mov
mov
mov
ret
enter
sub
jae
movsb
cmpb
clc
repnz
dec
jno
ror
sbb
mov
clc
cwtl
mov
pop
repnz
push
pop
lret
xlat
fidivl
dec
cmp
adc
pop
add
shl
xchg
cwtl
shll
pop
repnz
sub
sbb
ljmp
lret
sarb
add
or
jb
mov
inc
dec
add
push
push
shl
stc
sub
jl
adc
and
fadds
fadd
or
nop
cld
sbb
cmc
mov
add
mov
mov
mov
sbb
lea
cmpl
and
dec
cmpb
pop
test
inc
mov
adc
pushf
xchg
xchg
shl
xor
fs
mov
int
sbb
push
je
push
xor
push
movsb
dec
push
mov
inc
add
push
insb
outsb
add
dec
jl
les
xchg
add
adc
cmpsl
xor
pushf
pop
sub
add
pop
mov
lret
out
shrl
pop
incl
and
rolb
mov
inc
dec
inc
xchg
or
or
mov
test
pop
movups
rorl
xchg
pop
je
push
nop
cld
sbb
and
fwait
mov
adc
stc
into
aas
les
aaa
mov
push
in
pusha
vpand
adc
rclb
add
in
fwait
mov
movsl
cmp
in
pusha
mov
imul
pop
cwtl
add
add
fiadds
es
add
ret
mov
push
xchg
ret
fldcw
lods
fildl
ja
mov
iret
add
fldl
xchg
inc
je
add
sub
push
sbb
mov
rorl
xchg
int3
adc
popf
loopne
stos
and
ret
imull
mov
repnz
sbb
cmp
call
mov
or
inc
mov
sbb
or
mov
add
jo
inc
pop
loope
jl
pushf
or
jge
sbb
call
jecxz
xchg
xlat
das
cmp
clc
pop
out
fs
fwait
add
pop
inc
shll
mov
xor
add
pop
subb
dec
jae
sbb
jne
aad
jo
roll
fdivl
fisttpll
rclb
push
aas
adc
push
enter
add
or
pop
xchg
push
add
dec
adcb
pusha
rcr
lahf
or
xchg
fadds
xor
or
loope
sbb
call
mov
int3
test
and
push
lret
pop
push
push
cmp
in
pop
bound
inc
sbb
popa
pusha
sub
lods
push
js
cli
push
pop
mov
lahf
lock
dec
mov
add
sub
loopne
adc
andb
mov
cwtl
and
pop
js
popf
sbb
stos
test
sub
inc
mov
cwtl
inc
inc
lcall
add
popa
or
inc
jl
adc
test
loop
push
into
ljmp
js
pop
or
xlat
scas
inc
in
pop
adcl
popf
mov
shl
mov
sub
orb
xor
rorb
movsb
out
mov
jle
pusha
test
mov
and
lods
and
ja
insl
xchg
and
xchg
cld
or
dec
adc
mov
cwtl
fs
inc
clc
loop
xor
and
insb
je
adcb
iret
popa
inc
sarb
cmp
cmp
add
or
sub
add
int3
ret
or
adcb
push
dec
add
mov
data16
xor
mov
or
push
xchg
sbb
xchg
push
subl
push
fadd
stos
leave
push
lret
pop
stc
mov
sbb
cltd
shl
arpl
cwtl
and
adcl
sbb
or
sub
orb
inc
adc
add
mov
daa
lock
aam
js
sbb
es
lret
and
add
and
xchg
adc
icebp
das
mov
divl
add
inc
arpl
ret
cmpsl
test
icebp
sub
push
sub
or
or
bound
lock
movb
into
sbb
pop
mov
add
cmc
stos
mov
mov
les
mov
add
dec
dec
add
or
adc
dec
add
xor
movsb
sub
jo
rolb
mov
ficompl
lahf
sti
adc
outsb
add
fs
loopne
push
sub
sub
cmp
mov
add
mov
mov
into
daa
adc
pop
jno
lds
mov
pop
jge
ds
dec
pushf
sbbl
add
mov
stos
mov
cmp
and
push
push
call
add
xchg
ljmp
je
bound
add
popf
test
lods
dec
in
sbb
mov
lea
add
test
pop
add
arpl
icebp
mov
ds
xchg
int
xchg
js
push
shr
or
test
mov
and
mov
or
repz
shll
cmpl
test
mov
aaa
and
or
orl
dec
xchg
add
pop
test
dec
push
pop
xchg
or
or
push
dec
push
enter
cmp
pop
add
les
jp
rolb
scas
out
pop
mov
arpl
dec
call
cmp
rolb
ss
dec
jb
jo
stc
or
sar
xor
movsb
in
xor
test
push
add
test
je
arpl
in
adc
nop
sub
sub
add
mov
movsb
add
xchg
bound
push
sbb
je
and
mov
cmp
mov
subb
dec
loope
lock
outsb
or
divl
inc
mov
add
pop
sbbb
popf
mov
loopne
sbb
sub
xor
push
or
jmp
test
imul
enter
and
aam
bound
cli
jmp
sbb
data16
inc
loopne
clc
or
cmp
sbb
add
mov
das
test
cwtl
add
ret
fidivl
cmp
xor
inc
xor
add
add
mov
xchg
mov
data16
cmp
or
add
cld
adc
and
js
cmp
fiadds
or
fbld
les
das
add
seta
ficompl
nop
or
mov
pop
jmp
int
mov
imul
int3
push
or
and
pop
inc
add
adc
add
mov
pop
sub
mov
sbb
inc
loopne
push
mov
nop
mov
sti
cmp
test
mov
xchg
cmpsl
mov
add
not
pop
ljmp
ret
sar
xor
daa
loope
adc
lds
sub
dec
xchg
and
dec
add
mov
or
fnclex
jo
imul
mov
and
fwait
xchg
adc
dec
fsubl
ja
sbb
and
outsl
jo
mov
pop
bsr
pop
xor
icebp
pushf
sbb
add
dec
inc
pop
mov
adc
inc
sub
add
mov
out
es
outsl
sbb
add
rol
ret
push
hlt
push
mov
icebp
push
scas
gs
and
cmp
cwtl
orb
mov
sbb
xchg
movl
test
stc
bndldx
movsb
pop
out
loopne
fistps
xorb
or
or
mov
clc
int
cmp
sub
cmp
pusha
mov
clc
inc
fs
popa
jo
adc
outsb
mov
daa
das
dec
popf
dec
gs
jns
cmpsl
inc
and
jmp
mov
nop
lods
and
je
shll
pusha
js
xor
repz
push
pop
scas
push
inc
das
pop
adcb
mov
sbb
add
rorl
fidivrs
adc
and
inc
mov
dec
inc
push
hlt
fcompl
pop
inc
lea
mov
push
jno
rorb
mov
pusha
fidivrl
adc
addr16
ret
add
inc
pushf
lahf
jbe
cld
sbbb
daa
sub
idiv
lret
xor
cmpsb
sub
adc
in
ss
xor
inc
fadds
roll
xchg
pop
call
fdivrs
gs
jge
inc
inc
das
or
cmp
push
push
fadd
sbbl
push
or
add
shrb
call
or
popa
add
jp
sbb
push
inc
dec
dec
shll
loopne
pop
push
push
lret
mov
mov
xlat
shll
rclb
pusha
or
add
aaa
xchg
adc
jae
ret
lcall
sbb
xor
push
fnstenv
xchg
gs
inc
adc
xchg
cwtl
xor
xchg
push
mov
outsb
sub
stos
loopne
shrb
push
ss
fcoms
outsb
fsubl
dec
jns
test
sbb
fwait
add
xor
mov
cmp
faddp
cld
mov
inc
mov
mov
jo
pop
lcall
dec
inc
shlb
jl
popa
jl
pop
mov
subl
add
insl
movb
aad
outsb
js
pop
jns
add
jl
sbb
xorb
scas
fwait
jl
hlt
bound
fsubrs
jne
aas
es
cld
dec
adc
pushf
push
adc
cmp
sbbb
pop
mov
lret
fsts
add
shrb
int3
insl
mov
mov
sbbl
call
inc
stc
cmpsb
xchg
xor
dec
sub
and
dec
push
bound
je
inc
inc
or
adc
sbb
inc
sbb
lahf
and
add
sub
mov
in
mov
add
pop
push
das
push
sbb
lcall
iret
subl
les
pusha
insl
daa
out
and
sub
cltd
adc
in
imul
sub
mov
lea
div
call
arpl
cmp
mov
in
or
aam
mov
subb
cltd
push
pop
loopne
in
lds
sub
push
cmp
xchg
cmp
idiv
inc
push
push
ja
dec
ret
push
je
inc
out
adc
cmc
push
je
fmull
popa
hlt
lock
cltd
cwtl
jno
sbb
fnstcw
push
or
add
xchg
add
cmc
mov
icebp
pop
add
repnz
rcrb
stc
sbb
mov
and
dec
cmpsb
push
das
inc
mov
adc
xchg
mov
js,pn
or
test
jo
sahf
sbb
pushf
dec
add
push
fdivs
pop
add
xchg
pop
fsubr
test
sub
mov
int3
addb
cmc
cmp
sub
dec
or
pop
push
test
pop
iret
xchg
test
in
xlat
mov
outsb
lock
call
fimull
popa
inc
fcmovnu
les
shlb
out
push
xor
pop
mov
shl
add
fildl
add
adc
not
xchg
xchg
sbb
xor
in
cli
add
jae
insb
ret
aam
je
fwait
pop
shlb
sub
enter
pop
hlt
sub
das
pop
in
cmp
inc
int
outsl
jl
psrld
in
movsl
cmc
fdivrs
adc
lcall
in
and
push
hlt
mov
inc
imul
add
sarb
add
dec
arpl
inc
jge
mov
cmp
push
sbbb
add
and
dec
dec
test
out
loop
loopne
push
roll
js
add
pop
add
fadds
sarb
sub
jno
sarb
pop
cld
pusha
jae
lcall
test
push
addb
ljmp
and
sbbb
rolb
cli
nop
clc
arpl
mov
dec
add
and
je
dec
sub
fadds
and
bound
add
js
scas
enter
inc
loop
pusha
push
add
sarl
sahf
mov
fcoms
inc
fisttpll
shll
or
inc
aam
insb
shll
rol
test
xor
js
pop
push
repz
fdivs
push
rcr
ja
dec
sbb
pushf
aaa
inc
jo
icebp
mov
push
xchg
subb
xor
subl
es
test
int
mov
cmp
test
push
push
arpl
pop
inc
mov
xchg
sbb
or
xor
scas
jb
add
je
test
and
mov
and
aam
mov
mov
and
jmp
cmpb
pusha
insl
mov
or
add
fucomi
mov
das
ljmp
add
int
mov
adc
add
dec
leave
pusha
and
pusha
inc
inc
adc
packssdw
pushf
ja
jo
mov
shll
jmp
add
jns
mov
adc
rcrb
or
aam
cmpb
subl
add
sub
dec
sbb
cmc
jle
xchg
and
inc
sarb
pop
adcl
add
mov
add
pop
mov
pusha
in
cmp
out
cmove
push
jge
or
push
add
test
sub
jg
dec
loop
out
pop
inc
mov
sub
jbe
lcall
jo
dec
xchg
loop
push
bound
push
bndstx
roll
mov
ds
or
sub
ljmp
bound
xor
adc
mov
or
and
push
push
push
dec
out
mov
clc
lret
add
add
imul
lods
js
testb
and
and
js
int
inc
mov
repz
arpl
xchg
push
pop
lret
lods
pop
and
pop
js
inc
movsb
jg
stc
dec
push
flds
and
inc
mov
adc
mov
das
sub
repnz
adc
push
pop
out
adc
dec
cld
or
stos
mov
repnz
pop
add
rep
movsb
or
mov
aaa
lock
or
hlt
ret
add
mov
push
inc
and
clc
movsb
push
xchg
adc
cltd
and
fbstp
cmp
sub
inc
inc
jg
les
movsb
dec
mov
sbb
fiadds
inc
pop
rolb
movb
fisttpll
adc
xchg
cmp
gs
jae
scas
outsb
daa
lret
pop
add
dec
repz
sub
jecxz
add
adc
outsb
pushf
add
orb
inc
dec
les
xchg
repnz
rorb
add
das
ja
xor
mov
mov
shll
sub
add
scas
mov
das
out
les
add
in
jae
push
inc
and
hlt
out
in
paddusw
adc
dec
jg
push
dec
addb
imul
and
push
inc
fiaddl
pop
loopne
add
mov
push
cld
call
mull
adc
dec
loopne
fstpl
adc
or
les
add
aam
nop
sbbb
mov
inc
push
dec
pop
mov
adc
repnz
add
mov
or
sti
in
and
lret
imul
cld
mov
fdiv
les
mov
int3
jecxz
sbb
nop
lret
mov
inc
rolb
shrd
mov
xor
ret
fs
adc
add
mov
std
das
hlt
in
sbb
popa
dec
dec
mov
int3
fisubl
inc
cmp
cmp
and
sbb
push
sub
cmpb
fimull
jl
jnp
pop
lea
test
or
scas
pusha
loop
xlat
inc
rclb
roll
cmpsl
inc
pop
das
sub
and
adc
mov
adc
call
mov
dec
pushf
pop
add
push
xor
add
fisubl
pusha
cmp
dec
mov
in
jns
imul
push
es
mov
push
sub
rorb
add
in
add
dec
push
roll
into
out
xor
test
test
sub
jmp
cld
aas
imul
and
and
popa
cmpsl
pop
jnp
or
inc
or
clc
daa
lds
cwtl
dec
into
mov
cli
add
sbb
pop
sbb
add
push
loopne
ljmp
js
mov
fldcw
add
popa
rcll
in
inc
adc
push
dec
repnz
cltd
xor
cmp
dec
xchg
orb
dec
sbb
mov
cmpl
push
cmp
outsb
rolb
fdivs
clc
mov
orl
negb
stos
pop
scas
mov
cs
and
gs
xchg
je
rcrb
adc
out
cmp
cmp
pop
push
add
mov
sbb
add
cld
ja
lock
das
and
in
push
cs
mov
popf
inc
pushf
add
push
popf
sbb
jo
mov
mov
sub
jg
adc
fs
mov
push
push
pop
mov
jecxz
es
movsl
out
inc
jle
pop
jge
mov
jl
hlt
imul
mov
nop
subb
mov
pop
loopne
mov
pop
scas
js
in
fs
dec
push
mov
hlt
push
or
ret
imull
rcr
pusha
cs
dec
xchg
dec
mov
push
in
xchg
sahf
loopne
lods
xchg
cltd
fldl2e
mov
pop
movsl
add
fdivs
ds
flds
or
subb
pop
bnd
sub
pop
pop
jp
daa
sub
ljmp
cld
in
pushf
add
push
imul
jnp
inc
dec
sbb
xchg
xor
xchg
call
push
repnz
xor
je
imul
pop
inc
pop
int
sub
les
mov
test
insb
mov
bound
aam
sbbl
out
pop
push
aad
dec
aas
pop
jns
and
mov
pop
add
xchg
sbb
push
int
add
in
ja
cmp
add
jmp
sbb
hlt
mov
add
mov
dec
sbbl
and
pop
inc
movb
sahf
inc
cmpsl
icebp
pop
loop
jno
jne
hlt
or
lock
sbb
mov
push
cwtl
inc
push
or
adc
mov
or
mov
test
lret
adc
and
add
mov
push
inc
fs
pop
scas
mov
ror
das
mov
push
cmp
push
cmpsl
and
test
sub
movsb
cmp
xor
or
add
adc
lahf
aaa
pushf
pop
jo
loopne
arpl
les
xchg
fnstenv
insb
imul
test
scas
mov
add
cmpsb
sub
add
xor
aas
popf
add
pop
ss
mov
xor
inc
or
loopne
cmp
adc
mov
nop
add
mov
aas
sbb
sarl
xchg
xor
xchg
push
sbb
add
lret
test
mov
ljmp
orl
stc
dec
cs
clc
cmpsl
add
pop
lea
xchg
or
je
lods
scas
test
test
xorb
inc
mov
sbb
xchg
or
mov
add
mov
xchg
add
sbb
cmp
adc
clc
sbb
outsb
mov
testb
std
xor
mov
hlt
negl
dec
sahf
add
mov
test
sbb
adc
mov
or
das
inc
mov
jno
testl
jmp
hlt
fdivrp
faddl
and
aas
sub
add
mov
arpl
jbe
aam
cltd
sub
lcall
repz
mov
xchg
xor
movsb
add
and
ffreep
jle
xor
mov
xorl
enter
xor
jmp
sbb
adc
add
adc
clc
scas
sete
mov
es
ds
push
loope
int3
mov
cmp
in
add
call
aam
mov
lcall
pop
push
push
clc
insl
mov
cmp
rorb
out
aaa
scas
jp
data16
mov
add
pop
xor
push
stos
loopne
mov
push
jecxz
or
lock
loop
push
test
scas
nop
pushf
out
pop
jle
mov
cli
mov
jp
fiaddl
fwait
push
das
xchg
sbb
adc
fdivl
iret
sub
jge
int3
scas
nop
int
jb
add
push
cmp
mov
jae
cmp
fsub
push
lret
sbb
lea
add
xchg
sbb
pop
in
sub
mov
push
or
fs
hlt
xchg
cmp
xchg
or
or
aas
roll
and
leave
fsubl
jecxz
das
inc
in
add
shrl
dec
loop
fldlg2
add
push
xchg
not
pop
sbb
into
pop
pop
xchg
les
addb
sbb
fdivs
xchg
mov
add
jo
add
ds
pop
lcall
push
or
test
inc
xchg
add
add
cmp
ljmp
push
push
daa
fcoms
sbb
insl
adc
sbb
or
jbe
sarb
rcll
cmpsb
aas
and
negl
mov
mov
ret
and
dec
add
bound
pop
scas
inc
mov
test
add
mov
sbbl
fs
popa
lods
and
call
mov
in
pop
mov
hlt
add
xor
je
iret
mov
pop
dec
ret
stc
inc
add
inc
sbb
call
sti
ljmp
clc
fsubrl
int3
sub
mov
hlt
add
fadd
dec
dec
mov
add
push
shlb
pushf
or
inc
ret
fs
mov
aas
mov
mov
jl
add
push
fstps
int
ljmp
xchg
pushf
jne
mov
mov
mov
ja
add
jmp
cmp
jl
add
lcall
lret
je
inc
cltd
add
cmp
cmpl
hlt
lret
inc
fists
int3
pop
lahf
xchg
clc
xchg
bound
mov
sbb
xchg
add
insl
pop
or
pop
sbb
and
lods
rorb
jp
mov
pushf
icebp
cmp
cld
push
mov
es
repz
add
push
sbb
adc
mov
xchg
sub
push
je
or
imul
cmp
les
jmp
dec
pcmpgtw
das
ret
test
fcompl
push
add
in
test
mov
mov
bound
mov
ljmp
inc
mov
movsb
aad
pop
push
add
dec
push
stos
jmp
je
dec
adc
les
test
inc
icebp
orl
or
subb
jmp
subb
inc
dec
xor
mov
rorb
or
mov
shl
mov
dec
test
notb
xor
les
repz
add
incl
sbbb
ds
adc
fcoms
sbb
sti
out
inc
inc
mov
add
cmpl
andb
fsts
push
sub
inc
adc
aam
aas
stos
js
mov
jbe
cld
inc
mov
add
or
jns
add
pusha
pop
push
pop
into
inc
loop
dec
add
leave
dec
dec
inc
fcompl
loop
jmp
js
fcomps
jbe
cli
and
rcr
aaa
lods
add
adc
sahf
cmp
push
sub
enter
sub
pop
pop
repnz
les
adc
bound
jo
pop
mov
ret
out
add
aas
xchg
jno
lret
mov
pop
pop
xchg
je
and
outsb
call
add
push
or
sbb
cld
std
mov
divb
mov
push
mov
mov
shrb
jl
jo
mov
sub
roll
addb
loopne
nop
mov
and
mov
movsb
add
mov
mov
stos
pop
lret
testl
nop
ds
ljmp
je
arpl
std
adc
add
xlat
sti
push
rep
cmc
adc
aam
add
mov
cld
adc
ljmp
mov
fstpl
add
sbb
xchg
lret
out
or
fiaddl
pusha
jo
mov
data16
inc
jp
push
mov
sbb
cmp
aam
dec
cs
fsubl
bound
cmpsl
mov
push
in
insb
shl
cmp
sub
outsb
cld
add
cwtl
test
xchg
xchg
sbb
adc
fstpl
jecxz
xorb
inc
dec
xchg
jnp
jo
into
or
pop
adcb
fadds
add
shl
or
mull
inc
mov
add
or
jl
mov
xchg
sbb
and
jns
sub
jl
je
add
sub
push
sbb
or
aam
push
xor
jle
test
add
lds
cltd
pop
scas
add
xchg
mov
cmp
push
mov
sub
cmp
arpl
pop
cmp
inc
add
loopne
push
fisttps
pop
mov
jne
mov
dec
lret
out
in
xchg
out
pusha
inc
lock
cmpsb
cmp
adcl
aas
pop
test
xchg
imul
mov
lods
enter
js
lret
das
int
shll
cs
mov
inc
sbb
bound
inc
addr16
lcall
roll
add
dec
lea
hlt
or
ljmp
adc
int3
and
sarb
cld
shl
bound
rolb
in
add
xchg
jmp
outsb
and
outsl
dec
ds
fwait
push
lods
adc
loope
xor
mov
push
cmp
mov
sti
mov
pop
push
scas
stos
and
sub
insb
pop
repz
aam
call
xor
testl
sub
or
loope
aad
mov
fistpl
mov
jns,pt
push
xor
xor
shrb
addb
pop
pop
mov
push
shlb
ret
flds
bound
add
cmp
inc
mov
dec
xchg
mov
or
in
pop
ljmp
add
imul
inc
hlt
test
or
lret
andl
leave
add
adc
pop
xor
xchg
push
test
mov
sti
jbe
adc
aas
push
dec
mov
adc
pop
push
pop
imul
xchg
add
loope
and
stc
sub
or
cld
dec
xchg
int
loopne
push
inc
enter
iret
hlt
mov
int3
fldcw
push
jae
test
das
push
xchg
bound
mov
inc
movb
rcll
xchg
mov
sub
popf
loop
or
xchg
insl
push
into
inc
mov
jbe
xchg
inc
and
aaa
adc
dec
pop
fbld
cmpsb
dec
das
sub
fadds
fsubl
sahf
arpl
bound
nop
arpl
or
and
adc
mov
mov
add
shl
mov
cmp
lds
xchg
add
dec
ficompl
or
pushf
inc
in
add
jno
inc
cmp
pop
mov
xor
into
add
and
fdivrs
add
jae
ds
cmp
or
cmp
std
movsl
and
xor
fistl
xchg
dec
dec
add
adc
int
sbb
lock
xchg
popa
pusha
outsb
mov
adc
or
cmp
out
jne
add
stc
por
dec
xor
xchg
sub
movsl
jmp
or
mov
cmp
cmpsb
adc
push
cmp
mov
add
sbb
jmp
add
loopne
sbb
fidivrs
lea
outsb
lcall
push
dec
jne
adc
jmp
pushf
inc
dec
lahf
ror
jge
or
and
sub
sbb
xchg
or
mov
das
dec
fs
lahf
pop
mov
jo
mul
add
int
or
in
cwtl
lock
cmp
div
push
shl
dec
xchg
lret
lret
inc
enter
fstl
and
rclb
rcrb
addb
mov
add
dec
imul
inc
out
fisubrs
sbb
pop
jle
mov
or
iret
les
call
call
fcmovbe
jns
pop
push
dec
and
test
xchg
sub
push
dec
push
test
push
xorb
movsb
popf
push
cmp
sub
push
mov
sub
bnd
in
pop
sahf
sbb
addb
pop
je
popf
inc
push
mov
iret
xchg
lods
mov
stos
mov
es
xchg
adc
or
ja
push
push
lcall
inc
xchg
cwtl
xchg
int
sti
imul
lock
mov
mov
scas
xor
cmp
xor
sub
jp
xor
fsubs
adc
mov
cmpsb
or
push
ljmp
xor
arpl
jl
mov
pop
fs
jne
repnz
lcall
jle
loop
sub
jnp
out
insb
fs
xchg
mov
xlat
les
or
jl
cmp
imul
pop
rcll
aam
or
and
add
rclb
push
ds
dec
test
adc
dec
mov
cs
das
and
scas
xor
int
jp
fadds
add
add
mov
popf
push
cmp
hlt
pop
cmpsb
sub
repnz
xchg
aam
and
les
pop
xchg
mov
push
xor
add
dec
pop
ret
in
xor
nop
mov
outsl
xchg
subb
mov
test
je
mov
push
add
cmp
dec
and
and
mov
fsubrl
push
xchg
cli
les
or
jge
jmp
adc
jecxz
mov
and
push
sbb
out
add
pop
repnz
xor
movb
iret
fistpl
cmp
cs
in
or
mov
in
hlt
add
and
inc
movsb
mov
loopne
jne
xor
sahf
add
add
mov
lods
add
push
or
sub
popa
test
shrl
jo
jmp
test
mov
add
stos
mov
hlt
adc
mov
das
push
pop
sbb
pop
sbb
xchg
popf
into
mov
add
shr
add
push
cld
jle
and
xchg
lods
add
lret
add
xchg
shll
jg
pop
movsb
enter
push
cmp
xchg
sahf
mov
mov
and
fnsave
add
mov
sub
ja
es
adc
icebp
clc
aam
sahf
mov
mov
pop
xor
add
outsb
sub
pop
lock
clc
mov
aam
push
add
or
mov
in
mov
adc
and
add
test
or
pusha
scas
mov
xchg
add
rcll
lods
pusha
pop
lcall
idivb
je
cmpsb
add
push
xchg
cmp
rcrb
add
je
stos
dec
dec
mov
fs
jo
mov
icebp
shll
leave
popa
rep
add
sbb
inc
lods
add
subb
sub
jbe
fs
inc
xor
jmp
add
repz
push
aas
adc
and
add
mov
xchg
addb
pop
sub
pop
pusha
out
add
push
mov
add
test
push
cmp
lahf
sbb
add
adc
mov
inc
in
repnz
scas
test
loopne
mov
lret
hlt
cmp
jl
cmp
and
sbb
int
je
stos
push
or
push
addl
addr16
test
mov
call
pusha
les
fsubl
jb
lds
sub
bnd
mov
inc
add
jmp
mov
push
mov
pop
popf
scas
lods
jno
pop
pop
sub
xchg
mov
cld
and
outsl
mov
sbb
push
mov
sub
push
cmp
xor
lods
dec
mov
jo
les
push
pusha
mov
adc
jns
mov
imul
mov
pusha
add
sbb
mov
cmp
fsubrs
add
sahf
adc
in
pusha
push
sbbb
cmp
je
jmp
pushf
shlb
pop
push
lods
add
or
leave
pop
into
lret
sbb
add
repnz
pop
mov
mov
js
xor
xchg
sti
xchg
pop
xchg
call
int3
fwait
ret
loopne
js
add
lds
push
mov
push
pusha
mov
inc
dec
or
clc
add
stc
mov
inc
int3
stos
outsl
push
call
jecxz
add
sbb
insb
cmp
sbb
mov
rorl
movsb
mov
dec
jb
nop
aam
aaa
mov
or
mov
lods
add
mov
lds
mov
out
and
pushf
daa
jle
sbb
test
sbb
and
mov
fs
mov
push
adc
inc
mov
into
mov
sbb
fsubl
rolb
call
or
fsubrl
pushf
and
test
pop
sub
cwtl
scas
rcll
adc
js
jne
shll
dec
out
lods
comiss
lret
hlt
add
ficompl
xchg
lahf
pop
ret
jbe
dec
add
sbb
or
cmp
inc
push
pusha
lret
pop
cmp
js
add
popf
mov
add
hlt
loopne
inc
fildll
ss
sub
loop
jmp
std
add
into
or
push
dec
jmp
and
cmp
jo
mov
and
divb
ficoms
add
inc
mov
or
addr16
lods
pop
adc
jp
mov
dec
enter
pop
loop
fcoms
cmp
mov
mov
dec
jg
stc
test
jo
mov
adc
mov
dec
pushf
inc
roll
mov
xor
push
shrb
add
xchg
adc
stos
nop
mov
bnd
xor
orl
ds
sbb
add
inc
dec
dec
add
cwtl
cltd
mov
push
fs
and
fsubrs
es
dec
movsb
rcr
stc
clc
add
xchg
inc
insl
xchg
cwtl
icebp
lcall
mov
sbb
mov
sbb
push
push
sub
mov
add
add
inc
xchg
sahf
in
add
into
pop
enter
arpl
adc
test
scas
mov
and
add
jbe
lret
mov
cmp
adc
test
mov
dec
or
sbb
add
bound
cmpsb
add
mov
and
add
cmp
mov
add
loopne
push
xor
pop
fs
xchg
shll
pop
push
pop
sbb
lahf
inc
inc
sbb
and
mov
nop
add
jp
adc
out
inc
addl
in
and
add
adc
and
push
out
add
test
jae
pop
pop
icebp
lock
enter
sbb
mov
fs
out
lock
xchg
dec
cs
daa
sti
and
or
push
insb
dec
int3
loopne
lahf
add
add
fwait
scas
or
pop
outsb
jp
xchg
mov
andb
je
ret
or
js
out
ljmp
mov
fsts
inc
mov
mov
je
or
shl
xchg
mov
pop
nop
adc
mov
xchg
adc
hlt
xchg
sarl
cli
jbe
test
inc
mov
arpl
push
push
imul
push
dec
mov
orl
clc
cmp
lock
and
fwait
lods
mov
xorb
pop
dec
jmp
add
sbbb
or
mov
xor
mov
jle
stos
add
imul
int
scas
sbbl
mov
ficompl
add
out
les
pusha
pop
adc
add
cmc
push
lret
xchg
add
pop
test
sbb
push
outsl
jl
inc
jnp
add
sbbb
jle
xor
mov
ja
clc
seta
std
aaa
cli
clc
mov
testl
push
mov
orl
filds
mov
mov
add
in
jge
add
or
inc
movsl
sbbl
sar
sbbl
popa
inc
ds
xlat
add
pop
ret
mov
and
jmp
adc
dec
adc
pop
ja
add
inc
xchg
jmp
mov
rcll
mov
cs
leave
and
loope
mov
lock
sub
test
adc
icebp
lea
lods
mov
hlt
subl
pop
popa
or
pop
in
js
add
imul
test
fs
lcall
mov
test
push
sbb
inc
inc
push
insl
aad
dec
jno
cmp
or
fisubrs
cmpsb
test
arpl
mov
fcmove
add
in
lock
dec
outsb
cmp
push
lds
sbb
mov
push
inc
enter
dec
cmpsb
and
shll
cmc
addr16
f2xm1
xor
std
mov
cwtl
and
add
sbb
push
sti
jno
sbb
aad
adc
stos
jbe
idiv
cwtl
pop
loopne
cmp
inc
pop
aaa
add
add
sub
mov
sub
and
pop
aaa
mov
pop
mov
push
xchg
mov
xor
inc
xor
into
mov
sbb
cmp
stos
or
sbb
xchg
push
push
decl
jl
adc
mov
sbb
fsubp
push
iret
enter
inc
jg
xchg
dec
nop
mov
aam
and
jnp
hlt
or
adc
nop
mov
test
or
stc
and
mov
cmc
xor
bound
mov
packssdw
aas
push
and
add
aam
xor
enter
or
cmp
shll
pop
dec
adc
jne
pop
das
or
pushf
cld
cmc
fstpt
enter
add
sbbb
xlat
xchg
out
rcrl
and
aad
mov
xchg
xchg
jno
push
sub
jp
or
mov
sbb
lret
mov
pop
mov
call
pop
ljmp
inc
bound
mov
insl
add
in
in
lods
nop
pusha
sub
push
mov
cmp
cmp
fdivl
xor
scas
shrb
xlat
popl
mov
leave
loope
call
repnz
inc
inc
mov
adc
in
adc
push
push
pop
movsb
lea
call
or
push
addb
roll
push
lods
push
or
imul
inc
sbbb
inc
dec
push
mov
dec
repnz
imul
sub
jno
fldenv
pop
pop
int3
xor
int3
mov
js
arpl
or
or
pcmpeqd
jo
loopne
pusha
push
aas
js
dec
push
mov
sbb
or
xchg
xchg
adc
shl
cmp
inc
andb
es
mov
push
adc
adc
mov
or
adc
and
les
and
jg
pushf
cwtl
subb
push
jnp
xor
inc
pop
adc
arpl
xor
pop
outsb
mov
mov
push
lahf
sbb
cwtl
adcb
or
test
movsb
mov
cmp
or
mov
cmpsb
mov
push
sahf
scas
add
in
ljmp
pop
mov
enter
add
adc
adc
push
icebp
pusha
popa
imul
repnz
lock
sbb
xchg
jo
ja
or
pop
in
pop
das
inc
inc
add
das
les
jo
in
add
push
scas
je
pop
sub
dec
xchg
mov
inc
pop
add
cmpb
add
push
cld
pop
cmpb
cmp
test
jno
xor
add
fisubrl
cs
and
jg
pop
mov
jo
hlt
ds
pusha
nop
dec
sar
sbbl
bound
ds
mov
add
fs
dec
insb
jmp
mov
cmpsb
test
shrl
stos
fldt
jbe
outsb
jb
enter
push
lcall
add
enter
sbb
jl
fstl
aaa
adc
ss
fwait
push
cli
in
lcall
or
adc
inc
aad
addb
push
cmpsl
mov
push
shl
loopne
xchg
inc
pop
sahf
je
daa
or
cld
js
sub
mov
mov
xchg
fists
mov
pop
mov
pop
cmp
xchg
movsl
orl
add
dec
stos
fwait
movsb
ror
je
pop
cmp
nop
inc
inc
cmp
or
mov
pop
add
out
add
insl
movsl
jl
shlb
push
jmp
repz
fldt
pushf
pop
addb
xor
mov
push
mov
jge
xor
cmpsl
testb
and
xchg
lcall
cmp
jg
daa
pop
jns
nop
fcoms
rorb
cwtl
and
mov
mov
push
aaa
add
mov
orl
ljmp
pop
pop
cli
bndstx
pop
je
imul
frstor
popf
jmp
pushf
mov
add
sahf
orb
xchg
and
lcall
sub
add
ret
mov
dec
fsub
mov
jmp
mov
pusha
add
sbb
mov
adc
pusha
test
repnz
inc
push
mov
mov
andb
and
inc
add
ror
rcll
or
mov
fistpl
decl
lahf
or
cwtl
cmpsl
mov
adc
add
orb
add
sbb
sbb
adcb
mov
and
or
jno
add
cmpsb
pop
adc
sti
addr16
mov
inc
pop
dec
pop
pop
ficoml
jns
mov
repnz
xchg
mov
push
fstpl
jb
xchg
mov
push
fcompl
pop
push
push
shrb
testl
jbe
push
adc
ror
mov
sub
adc
or
push
js
loopne
push
shlb
push
or
lock
jnp
adc
stc
cmpsl
pop
push
loop
std
add
stos
shrl
enter
cmpb
lock
sub
pop
mov
mov
adc
mov
sub
inc
movsb
mov
std
or
mov
jno
pusha
add
popf
pmuludq
or
aad
sti
pop
mov
int
or
stos
mov
sbb
mov
cmpsb
stc
int3
clc
arpl
pusha
xlat
mov
pop
pop
bound
or
or
mov
and
mov
les
push
sub
xchg
fadds
jp
mov
mov
pusha
pushf
xlat
inc
mov
fcom
sub
movsb
repz
pusha
bound
jo
add
mov
push
push
and
sbb
imul
je
loopne
subl
cmpb
js
mov
and
dec
pop
imul
push
data16
inc
repnz
sub
dec
or
outsb
mov
insb
in
pop
ds
jbe
bound
jnp
movsl
push
dec
aam
mov
cmp
xor
aaa
pop
subl
mov
inc
mov
fs
popa
xor
fildl
je
mov
xchg
mov
mov
pop
nop
mov
mov
mov
pop
ljmp
pusha
or
hlt
scas
iret
adc
xchg
add
aas
jae
ret
push
and
dec
les
stos
jb
push
ret
xor
in
xor
sub
out
daa
ss
push
push
and
inc
les
mov
repnz
xor
add
jne
jbe
inc
mov
out
cmc
cmp
int
xrelease
inc
ret
mov
ret
push
out
pop
adc
out
lds
mov
loopne
ljmp
std
inc
fbld
adc
mov
or
das
push
mov
or
stc
lods
fstps
sub
js
pop
in
push
nop
ss
dec
xchg
mov
loop
fcoms
rorl
mov
hlt
pop
jbe
pop
loop
cli
jg
mov
aaa
dec
nop
mov
cmp
mov
add
pop
sar
jns
mov
push
dec
mov
movsb
dec
sbb
xchg
pop
jns
xchg
pop
stc
cmpb
stos
mov
or
xor
test
sbb
in
pop
mov
jmp
dec
lret
ss
and
enter
stos
xchg
int
or
dec
pmaxsw
movl
bound
mov
pop
mov
fs
dec
mov
cmpsl
cld
jg
and
add
aas
lock
push
mov
popa
sti
sbb
cmp
lea
cwtl
and
jne
sbb
sub
sbb
popa
jno
lock
add
sbb
lock
mov
mov
jecxz
popf
stos
cld
aaa
jmp
add
xchg
fisubs
pop
mov
push
out
pusha
scas
dec
scas
mov
std
in
loope
in
push
xchg
add
insl
adc
pushl
call
call
pop
xchg
aam
inc
rolb
xchg
ljmp
push
pusha
push
aad
sub
lret
into
cld
sti
pop
cmc
pop
pop
pop
dec
jmp
or
in
jne
adc
mov
mov
sbb
test
test
in
stos
or
pop
and
push
pop
jmp
hlt
psadbw
and
fdivrl
add
and
fisubrl
lcall
mov
mov
dec
lea
pop
jmp
mov
jno
insb
dec
and
nop
pop
push
lods
mov
add
out
cmp
sbb
scas
divb
push
popa
int3
pop
nop
dec
cltd
lahf
add
pop
aas
iret
mov
test
cmp
movsb
jge
adc
push
push
rcr
sbb
cmp
orb
cmpl
inc
das
repnz
jmp
lock
xchg
add
iret
icebp
and
or
cmp
shr
lods
push
and
dec
rolb
out
ss
sub
push
sub
and
add
sbb
call
sbb
repz
aad
pop
imul
mov
cli
xor
push
cwtl
jbe
lea
add
aam
aam
adc
push
xor
sti
xchg
mov
cmp
jnp
push
or
xor
dec
xchg
add
lahf
mov
out
int3
cmpsl
xor
lea
push
imull
rcl
cli
ja
outsb
mov
push
mov
loop
ss
andb
ret
push
out
mov
imul
jnp
add
xchg
xor
loop
cmpsb
push
push
lret
mov
add
cmc
push
daa
jmp
adcb
int
pop
mov
or
add
xchg
dec
test
fstl
lahf
adc
rcrb
lea
mov
scas
adc
or
in
and
sub
pop
mov
int3
pop
mov
pop
and
mov
loope
in
and
in
or
aaa
xchg
dec
sarl
in
or
or
jge
mov
jnp
jne
mov
lods
jl
push
das
pusha
sub
sbb
fsubrs
adc
or
fdivrl
cmc
dec
pop
inc
add
nop
sub
fiaddl
pop
mov
xchg
lret
mov
jmp
fsubl
and
cmpsl
push
aaa
jae
test
xor
fcomp
or
push
or
add
or
xchg
add
sub
sbb
gs
adc
adc
pop
jmp
clc
mov
fnstcw
orb
or
dec
jne
jae
and
and
mov
lcall
stos
or
sub
fildl
jo
in
mov
cmp
cli
cltd
add
popf
cmp
std
adc
les
lea
test
xchg
push
mov
rolb
sub
cmpsl
cli
inc
popf
jle
ret
or
add
push
ds
add
repz
sbb
lods
push
inc
add
mov
call
out
test
xorl
mov
add
xchg
add
repnz
jno
xor
and
lcall
push
dec
xchg
out
and
push
pop
addb
gs
add
push
inc
out
arpl
jne
or
fs
testl
xchg
std
arpl
roll
pop
or
insl
add
fs
inc
or
in
xor
mov
out
xchg
adc
aam
daa
rclb
mov
push
adc
cmpsl
sub
xor
jmp
int3
aad
and
wbinvd
or
test
pop
mov
jne
sbb
lods
xchg
call
test
jl
lret
sbb
lea
xor
pop
popf
fidivrs
add
bound
in
mov
add
out
mov
add
rorl
out
and
mov
loope
mov
js
es
sbb
pop
andl
test
repz
and
sub
mov
sub
cmp
test
jg
hlt
lcall
mov
lods
push
push
add
sbb
xor
mov
mov
adcb
push
jmp
sub
rclb
add
mov
mov
sbb
in
sub
test
cld
pop
and
push
dec
dec
mov
test
push
dec
mov
add
inc
scas
in
sbb
fs
dec
dec
nop
sub
pushl
lret
or
adc
test
pop
mov
filds
cwtl
inc
divl
add
and
dec
outsl
loopne
inc
cmp
mov
inc
or
or
pop
xchg
sbb
imul
or
add
aad
stos
in
mov
jo
test
xchg
in
cld
adc
jmp
jg
sbb
enter
repnz
dec
jae
inc
inc
add
pop
and
cld
xor
add
pop
xor
dec
ljmp
icebp
arpl
inc
sub
in
and
shll
xor
pop
dec
loop
cli
sub
mov
add
shll
popf
popa
pop
push
xchg
inc
addl
pusha
es
xor
movl
cmp
test
cwtl
jmp
cmp
cld
out
push
fists
pusha
nop
jmp
mov
out
sbb
jge
lock
loope
and
movsl
sub
loopne
mov
or
lea
adc
and
test
incl
mov
icebp
sbb
ror
test
push
repz
or
add
jo
or
addr16
movsl
sar
or
shll
mov
dec
adc
sahf
add
sub
std
cmp
and
in
mov
jae
jmp
stc
jo
mov
lock
add
je
out
cmp
jp
or
xor
rorl
mov
loopne
adc
xchg
aaa
push
cmp
mov
xorl
cmp
arpl
out
lcall
hlt
sbb
and
sub
jmp
enter
fnsave
inc
and
test
or
movsl
pop
rcrb
es
cmp
xor
idivl
jecxz
outsl
pop
or
mov
xchg
or
test
icebp
xor
pushf
lea
aas
jmp
out
sbb
pushf
push
fisttpl
mov
xor
push
addl
and
pop
push
add
aaa
lods
lods
jns
lock
add
pop
mov
adc
jmp
mov
jle
xchg
add
and
into
fidivs
cmp
add
dec
pusha
lods
or
sbb
repz
push
cmp
jmp
pop
add
loop
das
fiadds
jno
cs
rol
sub
push
lds
shlb
add
pop
pop
mov
pop
jge
mov
xchg
sub
out
jae
mov
mov
add
xchg
fs
cmp
popl
inc
mov
or
sub
pop
loop
imul
stos
in
test
xor
loope
adc
or
addl
mov
and
in
sti
inc
jbe
push
xor
inc
insl
add
adc
jns
push
rorl
out
lcall
nop
enter
inc
fsts
loopne
xor
fmul
push
test
pop
stos
mov
add
push
test
or
lcall
enter
xchg
sub
jmp
pop
jns
or
je
pop
xor
jle
mov
jns
mov
mov
adc
cmpsb
sbb
into
inc
push
stos
in
and
mov
fiadds
out
je
movsb
sub
mov
add
xor
rcrb
dec
scas
cli
pop
add
fmuls
int3
mov
xor
ret
dec
outsb
mov
cmp
jns
xchg
addb
sbb
pop
sbb
pop
sbb
inc
nop
hlt
mov
mov
das
xor
mov
dec
xchg
test
nop
cld
paddq
gs
mov
movl
popf
pop
push
xchg
xor
lds
pop
lea
sub
jno
imul
cmpsb
add
inc
xor
jb
add
adc
cmpl
pop
scas
mov
inc
clc
push
xchg
dec
pusha
lods
add
popa
push
adc
insb
or
rorb
mov
sbb
test
enter
dec
in
neg
add
in
mov
mov
or
repz
adcb
and
bound
mov
mov
pop
cmp
jge
mov
and
fimull
mov
push
push
fimull
pusha
subl
adc
loope
push
das
sub
cld
or
mov
enter
dec
sbb
movsl
jne
inc
mov
xchg
popf
add
xor
call
aad
mov
mov
loop
mov
xchg
addl
shlb
mov
mov
test
push
mov
adc
and
negl
xchg
adc
or
xor
movsl
push
push
loop
add
mov
jo
sub
jno
movsb
pusha
mov
aas
jp
sbb
notl
pop
ja
ja
sbb
xchg
loop
cmc
stos
jg
inc
js
jo
fs
outsl
fstps
sbb
jne
insb
dec
jno
and
lds
dec
add
or
dec
pop
insb
mov
jns
jo
sub
push
dec
and
imul
jb
cmp
push
ret
and
mov
mov
dec
je
adc
mov
pop
fstpl
push
sub
sahf
bound
sub
lds
dec
or
into
and
shll
orl
jge
dec
popa
jae
lods
sub
faddl
pop
daa
sahf
push
cmpb
pop
dec
cmp
mov
push
push
and
sbb
cmp
in
and
mov
dec
xchg
xor
adc
pop
std
popa
jecxz
dec
int
sub
subl
dec
xchg
mov
or
sub
je
loope
test
jmp
shll
mov
fldl
mov
popa
xchg
movsl
clc
jne
push
add
and
andb
movsb
push
aad
pop
fsts
lret
arpl
mov
and
adcl
mov
jnp
adc
out
xchg
sbb
ret
sub
jo
or
insl
adc
test
jg
push
movsl
xor
mov
roll
imul
adc
mov
mov
cmp
mov
jmp
sbb
jae
jne
sahf
test
repz
pop
int
pusha
shrb
testb
std
mov
mov
int3
mov
movsl
add
mov
add
shll
xor
lret
pushf
sub
mov
or
adc
or
jo
add
cmp
lock
xchg
lldt
pop
mov
jl
add
and
adc
in
mov
and
add
repnz
jle
test
mov
add
rclb
ja
jmp
cmp
sbb
je
mov
xchg
sub
mov
mov
pop
loopne
jb
xor
fidivs
pop
das
xchg
pusha
lea
sti
or
mov
pop
hlt
outsl
sbb
add
xchg
outsb
dec
add
popl
loopne
xchg
out
add
fildl
add
jecxz
push
lods
sahf
cltd
aam
gs
pop
add
mov
fdivl
psubd
fidivl
sahf
lods
add
dec
test
or
gs
xchg
repnz
add
mul
cli
push
mov
push
push
sahf
insl
pop
add
sarl
fdivr
faddl
insb
add
sbb
rclb
dec
pop
add
push
loope
and
mov
and
add
fstpl
dec
cltd
ret
sbb
cmp
mov
out
push
movsb
loope
add
ljmp
add
in
mov
adc
inc
mov
rorl
ljmp
in
mov
shlb
and
mov
add
push
lods
in
jno
add
hlt
notb
test
cmp
sahf
mov
add
scas
add
sub
cli
popa
pop
stos
lods
pop
add
dec
jge
pop
adc
ds
and
imul
popf
fwait
orb
sbb
or
cmp
inc
dec
adcb
movsl
shlb
mov
testb
sbb
ja
pushl
cltd
xor
mov
add
mov
add
xor
cmp
fwait
call
test
add
pop
mov
mov
addb
add
fmul
add
pop
hlt
xor
sub
rolb
ret
xchg
test
test
pop
pusha
pop
mov
add
jae
notb
in
dec
sbb
push
aad
stos
pop
clc
sub
dec
lret
adc
dec
xorb
cld
push
orb
pop
lods
out
jae
pop
hlt
test
cmpsl
push
clc
ja
aam
andb
jp
movsl
or
jmp
sbb
adc
sbb
pushf
aaa
outsl
add
mov
cmp
adc
sar
jl
mov
cmc
add
cmp
push
mov
sub
inc
mov
pop
mov
add
loope
les
inc
stc
int3
xor
push
nop
adc
mov
xor
stos
pusha
push
in
pop
add
dec
add
in
mov
mov
add
adc
push
mov
aas
ljmp
jecxz
pop
adc
and
inc
leave
pop
ret
rclb
out
push
pop
call
icebp
jp,pt
xchg
pop
add
jbe
adc
out
ljmp
loop
daa
repnz
push
in
cmp
xor
add
cmpb
xchg
imul
and
sbb
call
mov
insl
dec
pop
sub
pop
cmpsb
xor
ltr
fistpll
push
add
ss
stc
hlt
add
mov
mov
push
inc
inc
jnp
sbb
bound
push
jl
pop
add
cli
outsb
mov
aam
add
jnp
es
sub
add
movsb
mov
repz
adc
sub
add
add
cmp
and
loopne
int
cmp
adc
dec
mov
pop
mov
pop
test
xchg
shl
leave
xor
xchg
cmp
ret
dec
int3
cwtl
cmp
xchg
add
sub
movsl
inc
rcrb
pop
lock
inc
repnz
iret
adc
movzwl
mov
aam
mov
dec
pop
sub
inc
iret
sub
sar
orl
adc
and
push
mov
aas
xchg
cmpsb
insl
add
adcb
or
icebp
or
leave
sti
pop
fsubrs
cmpsb
dec
lods
mov
add
rcrb
push
mov
push
push
fcom
mov
faddl
push
mov
andl
mov
imulb
inc
xor
pop
jmp
add
fisttpll
add
push
add
scas
rorb
push
or
xchg
shll
add
cmpb
aam
or
pop
outsl
sti
mov
fldl
inc
push
lea
adc
loope
sti
add
cmpsb
xchg
int3
xor
push
dec
leave
fisttps
pop
fimull
or
mov
xor
int
lock
mov
jno
sbb
pop
repz
inc
add
in
es
lods
inc
pop
andb
sub
or
test
xorb
add
or
fildl
int3
movl
xchg
xchg
fwait
mov
add
mov
jg
scas
shl
sbb
ret
xchg
sti
add
repz
fcoml
rclb
iret
lock
arpl
enter
daa
mov
mov
or
fdivr
or
sub
adc
add
mov
rol
inc
adc
dec
push
inc
add
aam
xchg
lret
pop
testb
mov
xchg
push
inc
sbb
push
pop
and
inc
inc
mov
iret
add
cmc
pop
imul
cmpb
inc
test
add
sub
and
cmc
push
lcall
divb
enter
adc
addr16
cmpsl
scas
add
ja
fidivrs
jbe
add
pop
jb
movsb
ret
jecxz
push
and
jl
mov
aas
add
fisubrl
mov
jl
mov
mov
bound
ds
or
mov
mov
in
jb
jbe
rcll
xchg
adc
imul
aad
or
mov
sbb
sahf
and
mov
add
fs
cmp
std
inc
pop
popf
mov
cltd
jle
mov
xor
mov
push
or
add
xor
xchg
cli
mov
push
or
xor
inc
push
adc
xor
add
lods
mov
imul
pusha
icebp
fs
add
xor
inc
sbb
inc
push
jo
add
mov
mov
pop
dec
fildl
dec
das
xor
jae
cmp
add
add
jl
fisubrl
xchg
add
std
lret
movsb
or
aad
sbb
repnz
lds
jl
xor
xor
inc
in
jb
dec
push
mov
sbb
cmp
add
xor
mov
push
mov
or
lret
add
shl
sub
clc
ja
adc
imul
in
scas
out
loopne
in
mov
adc
mov
adc
sbb
pop
add
pop
push
xor
cvttps2pi
jns
movq
or
mov
sub
and
adc
jnp
mov
stc
inc
sbbl
nop
lret
popa
sub
and
pop
pop
icebp
add
mov
fs
imul
and
dec
adc
lahf
push
adc
cs
jne
push
pop
add
push
pusha
cmp
inc
movsl
add
shrl
push
add
or
loop
orb
xor
in
js
dec
pop
xchg
shr
mov
sahf
movsb
inc
enter
cmp
pop
in
cmp
fidivl
in
mov
xor
cld
aaa
sarb
push
ss
pop
add
add
jns
arpl
adc
pop
js
sub
shrb
cmp
loopne
add
sbb
jp
mov
adc
dec
and
jne
adcb
jno
xor
call
jecxz
dec
jmp
add
lcall
and
pop
mov
inc
loop
jne
or
mov
add
jle
mov
lcall
add
packssdw
std
xor
aam
ret
sub
add
lock
pusha
je
sbb
sub
jns
std
add
cltd
xchg
pop
push
mov
add
ret
cli
mov
or
aad
into
call
loop
pop
or
add
mov
inc
xor
imul
push
out
pop
daa
and
adc
mov
ret
out
inc
cmp
pushl
and
add
xor
sub
prefetchnta
dec
add
daa
dec
out
aad
ret
lret
jae
jb
add
enter
cmp
dec
sarb
mov
bound
lret
push
pop
jno
fcompl
xchg
loopne
sbb
adc
push
bound
or
popa
inc
cwtl
cmp
loop
lea
xchg
cs
mov
add
sbb
jae
mov
pop
int3
cmp
push
or
and
or
pop
pop
cltd
jecxz
adc
mov
jo
mov
daa
cmp
push
scas
dec
cmc
jns
movsl
push
lods
daa
cwtl
jl
xchg
in
out
add
subl
dec
decl
adc
loopne
pop
jne
push
push
sbb
add
arpl
xlat
xchg
clc
mov
add
pop
out
loop
dec
leave
clc
jo,pn
mov
mov
mov
mov
in
popf
idivb
scas
mov
cmp
stos
outsb
mov
xchg
add
sbb
loope
cli
inc
lods
inc
push
and
or
push
xchg
and
rolb
mov
xchg
ret
jb
std
outsb
pop
mov
sbb
jnp
rcrb
sub
add
inc
test
add
sbb
popa
insb
cmp
sub
sbb
cmp
dec
jne
or
out
das
sub
pop
into
sub
fcompl
mov
fists
and
add
insl
pop
mov
pop
testb
mov
lret
cmp
xor
lea
call
dec
xchg
ds
jg
bound
sti
add
sub
fwait
mov
in
and
xchg
out
je
inc
aas
fstps
in
or
cwtl
aad
add
insl
cmpsl
rolb
cmc
cli
sbb
jbe
pop
rcl
adc
add
xchg
mov
pop
clc
mov
test
test
adc
ja
cld
shlb
scas
xchg
mov
dec
in
bnd
pop
dec
push
subb
das
cmp
mov
pop
mov
dec
inc
adcl
inc
cmpsb
in
data16
and
push
inc
bound
pop
lcall
addr16
jecxz
add
mov
test
pop
adc
jle
fcmovne
dec
loopne
lret
dec
fnstcw
mov
stc
sbb
ds
mov
cli
stos
repz
jmp
sti
stc
sub
dec
xchg
notb
inc
push
xor
popf
inc
cmc
popa
test
ds
lret
adc
mov
pop
xor
shll
fisttps
les
mov
not
mov
fwait
pop
add
push
inc
cmpsb
cmc
and
xor
lahf
sbb
fs
add
mov
jb
xchg
rorb
out
mov
in
xchg
add
aam
inc
pop
in
mov
or
imul
pop
dec
add
pop
addr16
in
lret
jno
add
data16
jns
call
sub
bound
rorb
std
pop
or
das
clc
xchg
cmpl
rorb
add
push
fdivs
xor
orb
and
xor
add
adc
subl
mov
or
dec
jge
enter
ret
testb
jge
fists
stc
mov
and
add
or
mov
out
xor
xor
jns
adc
andl
and
push
push
clc
or
mov
dec
pop
loopne
dec
push
outsb
sub
dec
mov
loopne
jo
lcall
popf
and
or
mov
cld
add
leave
jmp
pop
mov
lret
in
lock
mov
pop
test
and
push
or
jne
push
mov
inc
flds
jp
out
dec
jmp
rcrb
inc
cwtl
rcll
dec
adc
jo
das
icebp
xor
cli
and
inc
pop
lea
and
mov
in
movsb
lods
subb
imull
rolb
cli
out
pop
adc
adc
lea
rcrb
xchg
sysexit
sub
shl
cwtl
cmc
push
fbld
loope
outsb
inc
or
inc
jl
jge
das
add
addr16
cmp
test
add
in
xor
sbb
stc
call
movsl
dec
dec
in
inc
jne
or
push
push
dec
or
lods
sub
popa
inc
mov
test
push
outsl
in
mov
inc
add
pop
mov
movsb
fsubrs
jle
jno
push
icebp
rcrl
mov
jns
lods
out
dec
nop
loop
es
add
fcomp
cmpsb
push
push
pop
pusha
sbb
sub
push
and
jne
dec
fistl
fsubl
stos
push
movsb
dec
or
pop
nop
adc
sti
out
repz
sbb
jl
filds
dec
roll
cmp
notb
push
add
iret
jb
add
xor
pop
pop
ja
les
push
sub
xchg
in
sarl
pop
lret
icebp
js
mov
or
xchg
pusha
icebp
cmp
mov
mov
add
or
lret
mov
loopne
fbstp
jbe
loopne
notl
pop
push
test
int3
movsl
and
lea
arpl
cmp
sbb
add
movzwl
rolb
lahf
into
sbb
xchg
jne
add
mov
mov
mov
inc
inc
rol
aas
in
pop
xchg
imul
lock
add
mov
imul
out
cmpb
out
dec
testb
and
frstor
int
pop
or
das
dec
pop
jg
add
rclb
or
js
stc
mov
inc
js
sbb
ds
data16
mov
mov
add
xchg
fs
xor
jmp
dec
imul
mov
scas
in
cmp
adc
repnz
xchg
out
mov
xor
xor
mov
xchg
leave
mov
pop
mov
sbb
int
movsb
mov
pop
sub
sbb
gs
add
out
jb
sub
adc
add
hlt
dec
popa
push
in
add
sub
mov
test
pusha
out
repz
pop
push
gs
pushf
adc
in
lods
les
rolb
pop
adc
push
repnz
push
pop
push
mov
dec
adc
cld
stc
mov
pop
jle
xor
pop
mov
fyl2x
aas
mov
mov
in
popa
jp
movsl
xor
xor
std
popa
out
nop
push
pusha
aaa
int3
inc
jge
jle
cltd
fstl
imul
or
ficoml
jg
pop
loop
ror
daa
test
popa
popf
faddl
mov
decl
call
pop
jno
in
mov
and
jo
popf
xor
jnp
das
arpl
add
add
or
outsb
ja
pop
int
xchg
mov
add
dec
mov
or
mov
scas
test
inc
push
mov
leave
loope
add
xchg
adc
and
shl
insb
lods
aaa
xchg
add
mov
shlb
cmp
inc
inc
add
das
mov
dec
adc
jnp
lock
jns
rorl
push
sub
jo
add
aas
pop
aas
popf
cmpsl
pop
jns
mov
mov
xor
mov
add
mov
adc
jno
or
sub
stos
xor
mov
es
mov
stos
outsb
mov
filds
cmp
add
leave
pop
mov
aam
pop
or
inc
fwait
movups
pop
dec
test
pop
roll
jg
ret
repz
xor
ja
pop
pop
outsb
jb
xor
push
sub
or
push
and
enter
mov
sbbl
pop
stos
lds
mov
data16
mul
lods
push
popa
or
out
mov
ds
mov
jle
push
arpl
sbb
cmpsb
fidivrs
push
dec
daa
aaa
lmsw
xchg
and
mov
std
or
dec
popf
sbb
and
mov
sahf
xchg
push
jne
enter
int
ja
sbb
fmuls
std
repz
push
dec
popa
pop
xchg
andb
sbb
mov
fnsave
sahf
add
cmp
add
jb
bound
jno
jle
cmp
or
dec
int
popa
les
pushf
inc
jb
aaa
cltd
cmp
add
cmp
rcr
mov
outsb
inc
cmp
cmp
icebp
add
stos
push
fnsave
cmp
or
fs
stc
lret
push
dec
xor
cmpl
or
xchg
push
cmp
nop
bound
icebp
addr16
sub
mov
or
lods
push
pop
mov
xchg
mov
pop
pop
ja
test
push
mov
adc
popa
stc
pop
imul
out
jecxz
inc
mov
sub
repnz
adc
data16
xor
jns
mov
adc
mov
mov
loop
xchg
inc
std
cli
ss
pop
jmp
mov
imul
mov
or
test
jne
pusha
mov
pushf
out
daa
xchg
xchg
cs
pop
pop
inc
and
pop
add
insl
scas
mov
mov
mov
pusha
fs
imul
push
lds
rolb
jb
shll
mov
aad
push
sub
add
gs
shll
cs
nop
cmpsb
mov
sbb
or
sub
nop
lahf
imulb
test
xor
sti
jp
mov
pusha
pusha
mov
rol
add
xchg
sub
mov
adc
add
jbe
dec
mov
push
iret
rcl
mov
sbb
fwait
pop
jbe
bound
mov
rcrb
xor
push
insl
add
cmp
mov
inc
mov
cmp
sbb
adc
mov
mov
mov
cmp
push
out
loopne
cmp
add
stos
repz
aam
push
std
fsts
gs
adc
inc
loopne
mov
mov
adc
fisttpl
mov
adc
push
mov
jb
jno
mov
add
push
dec
sti
inc
dec
cld
int
inc
cli
loope
imul
adc
sub
sahf
and
negl
sub
add
mov
and
and
xor
pusha
out
js
add
ss
jg
jo
popa
test
fisttpll
pop
stos
shll
push
add
dec
scas
cmp
dec
sub
xor
ret
add
add
sbb
std
inc
test
add
sub
sbbl
test
dec
or
pop
int3
or
cmp
mov
pop
dec
sub
fisubs
adc
sub
cld
rcl
sub
mov
add
stc
dec
out
jbe
or
jno
add
je
flds
das
cmp
mov
or
je
popa
mov
clc
jno
and
inc
sbb
std
call
jge
cld
push
pop
aas
add
jb
cmpsl
call
mov
cwtl
mov
andl
mov
mov
scas
insb
bound
sub
xlat
js
sub
mov
das
movsb
push
mov
leave
add
jnp
scas
add
pop
adc
lret
jg
sbb
outsl
cltd
pop
lea
sbb
lea
add
and
xchg
or
movsl
sbb
xor
ja
test
jbe
in
shll
sub
das
xchg
test
pop
and
sbb
add
or
sti
int3
jb
aas
add
loope
mov
outsl
push
add
xor
cmp
mov
fsub
dec
inc
outsl
mov
enter
imul
in
and
data16
pusha
and
loope
and
addl
sub
inc
sbb
jae
dec
push
dec
out
shlb
pop
add
and
lods
xchg
lods
fmul
jae
sub
je
adc
pop
cmp
repz
or
add
jg
push
movsl
fld
add
push
stc
pop
adc
mov
mov
jmp
mov
div
ljmp
popf
dec
push
add
inc
and
imul
pop
jg
popf
inc
adc
or
jmp
test
in
add
mov
and
out
iret
pusha
outsl
mov
pushf
mov
add
mov
daa
std
icebp
xchg
add
push
or
imul
jmp
outsb
imul
call
pusha
cwtl
xchg
jge
popf
push
and
orb
hlt
sub
rorb
aam
daa
dec
out
jle
jbe
mov
aas
dec
push
out
dec
lcall
clc
dec
lock
xor
jmp
lret
cmp
jae
push
pop
scas
pusha
mov
imul
popa
add
out
push
pusha
jp
adc
mov
inc
pop
jge
mov
pop
push
icebp
xchg
add
adc
daa
pop
xorl
cmp
imul
sahf
dec
in
inc
cmp
pusha
mov
mov
popa
xchg
lcall
push
jb
in
clc
insb
test
es
pusha
jecxz
mov
inc
popa
movsl
xchg
inc
sbb
xchg
cmp
dec
adc
or
xchg
inc
lahf
enter
stos
cmpsl
repz
test
sarb
add
pushf
sub
pop
idivb
repz
rorl
mov
jmp
ss
jne
cmp
js
fldcw
add
push
dec
jo
pop
mov
popf
sbb
cli
test
sbb
aam
sbb
mov
test
call
test
mov
js
jge
arpl
xor
jno
jnp
or
jecxz
dec
stos
es
or
adc
mov
fwait
push
hlt
add
dec
cmpsb
dec
pop
and
jmp
jp
sub
xor
push
inc
jmp
xor
fdivrp
cli
cmp
sub
jle
hlt
or
sbb
sub
js
mov
or
push
sub
cmc
push
flds
pop
bswap
das
xchg
fistps
mov
jno
mov
cltd
es
inc
push
xlat
jo
dec
push
addr16
aaa
insb
lret
mov
icebp
dec
push
adc
imul
hlt
dec
dec
or
les
dec
imul
inc
bound
xor
in
js
add
stc
je
ja
pop
pop
push
outsb
inc
add
or
jmp
leave
add
loope
stc
outsb
ret
je
jno
or
push
mov
rcll
cmp
js
data16
fcomi
adcb
mov
add
lea
add
testl
sub
mov
shrl
aas
lret
pushf
cmp
or
insl
push
xor
icebp
sbb
mov
xor
fldl
test
jp
int
in
pushf
add
xor
call
test
jp
add
xchg
push
push
mov
imul
daa
xchg
mov
shrb
int3
pop
mov
nop
test
js
sub
into
enter
test
sahf
pop
rol
sub
inc
lea
pop
mov
repz
shll
sbb
notb
aad
mov
mov
frstpm(287
test
andl
sbb
pop
orb
xchg
leave
ljmp
jp
adc
ljmp
and
add
jo
scas
imul
xor
push
clc
add
cld
scas
and
sbb
pop
xchg
mov
mov
shl
adc
mov
fs
xchg
push
cli
mov
jne
push
hlt
shlb
jbe
inc
std
sti
cmpsb
and
subb
mov
add
popf
adc
arpl
xchg
push
or
rcll
and
in
dec
add
ja
fcompl
push
jmp
lahf
fldenv
nop
adcl
movntq
test
mov
jns
test
pop
ds
push
pop
jmp
or
and
aad
push
and
ret
xchg
popa
aad
mov
push
and
leave
xchg
sub
mov
add
jbe
xchg
popa
cld
cmp
sub
fs
add
sub
arpl
xor
dec
add
dec
xchg
cltd
push
mov
es
mov
repz
mov
sbb
cmp
mov
scas
mov
fs
or
xchg
add
pop
mov
shll
test
js
js
mov
fcoml
sub
mov
mov
mov
mov
push
xor
and
fadds
xchg
fidivrs
pop
mov
dec
mov
andb
push
inc
adc
fistpl
cld
movsb
and
pop
int
scas
mov
stos
add
jmp
aas
outsb
add
sbb
lcall
popf
sub
lods
jns
xchg
pop
cmc
push
dec
fidivs
and
pop
cmp
pop
add
jns
js
mov
inc
add
imulb
icebp
clc
dec
jg
cmp
imul
mov
push
test
sub
mov
subb
pop
fs
hlt
addb
cmp
rcll
inc
cltd
pop
into
js
lods
push
outsb
push
lcall
in
jmp
xor
or
inc
stos
push
cld
shll
xchg
lea
aam
push
test
xchg
cmp
sti
int3
fs
daa
cld
push
nop
mov
sub
es
repz
add
pushf
in
aas
stc
std
call
adc
jne
pop
aaa
loop
adc
inc
push
mov
pop
add
xor
es
sbb
and
lcall
in
sti
leave
jnp
adcl
and
dec
xlat
enter
add
inc
nop
mov
cld
inc
or
cwtl
subb
adc
aaa
pusha
jbe
js
lahf
outsl
ds
fldenv
vpavgb
push
popf
sbb
xchg
int
inc
mov
lcall
add
aas
xchg
int
fs
and
mov
testb
adc
push
jge
sub
xchg
inc
in
mov
popa
jo
inc
pop
in
test
daa
add
sbb
jne
inc
and
repnz
adc
jo
add
cmp
add
arpl
add
xor
icebp
jg
sub
int3
sbb
push
fstpt
test
jp
inc
outsl
jo
push
or
popf
pop
xor
pop
popf
or
ja
cmc
xchg
mov
lock
add
movsl
mov
jecxz
xor
roll
popf
cltd
jp
stos
mov
and
xchg
pusha
jle
les
push
mov
out
or
and
pop
xchg
stos
lea
lret
dec
addr16
out
or
push
leavew
daa
loope
dec
iret
mov
repnz
xor
add
push
cmp
out
and
clc
cmp
mov
jle
add
imul
out
jecxz
mov
push
rclb
dec
cmc
cmpb
mov
popf
in
mov
cs
xchg
jno
test
fimull
es
xlat
or
add
mov
cld
sub
inc
lahf
mov
mov
cld
xor
and
lcall
jo
push
jbe
and
dec
rcrb
mov
pop
inc
fdivrl
test
jae
push
mov
xchg
int
shlb
lret
in
mov
push
pop
inc
pop
pop
pop
jne
mov
mov
orb
cli
sub
lods
dec
xor
pop
mov
pusha
jo
mov
sti
popa
cmp
daa
inc
or
sbb
add
pop
inc
adc
push
and
in
dec
into
shrb
pop
and
js
add
sar
cmpsb
inc
dec
add
aad
or
fisubrl
push
mov
and
mov
jmp
es
lock
push
add
pop
jbe
push
jp
sub
in
lea
mov
daa
into
cmc
xor
sub
outsb
fildl
adc
add
mov
pop
pusha
dec
sub
push
xchg
push
lcall
faddl
stos
mov
loope
adc
sub
imul
rclb
testl
jmp
jg
pop
in
sub
nop
loopne
popa
pop
mov
inc
adc
add
sbb
cwtl
pop
add
dec
into
jl
mov
mov
nop
pop
fiadds
mov
adc
iret
inc
pop
inc
mov
incl
inc
push
jnp
and
xor
pop
lock
popf
ja
cld
adc
repz
push
xor
add
std
xor
or
lds
pusha
inc
sbb
or
in
sbbl
adc
stos
outsl
cltd
and
aam
jmp
pushf
or
mov
lods
jne
daa
incb
jne
mov
pop
cmp
jle
push
pop
test
cmpsb
test
xchg
out
nop
mov
and
mov
test
repz
mov
lock
popa
outsl
pusha
cld
jle
push
and
lods
and
jge
js
adc
addr16
out
inc
add
ja
xor
mov
dec
xchg
mov
pop
lea
cwtl
jb
dec
xchg
testb
xchg
mov
aaa
pop
push
or
sbb
insl
add
pusha
jmp
sarw
push
insl
pusha
xor
inc
popa
pop
jb
icebp
adc
push
dec
pusha
mov
ror
inc
cmp
or
add
adcb
pop
push
add
pop
outsb
add
mov
mov
mov
inc
add
adc
pop
mov
push
jp
pop
mov
dec
dec
iret
push
jg
lret
clc
xchg
xchg
outsb
ljmp
add
mov
out
test
jno
pop
out
jae
nop
fisubl
and
add
or
cli
add
jmp
add
lods
movsl
mov
arpl
in
sub
outsb
bound
and
push
cltd
adc
mov
fmul
pushf
das
int
das
sub
mov
aad
adc
cmp
pop
mov
pop
rcr
push
push
or
pop
scas
fs
mov
dec
test
sub
js
cmp
sub
inc
fsubl
jl
mov
loopne
mov
cmp
mov
push
sbb
pusha
addr16
and
inc
lahf
inc
fisubs
dec
push
mov
push
incl
divl
movsb
enter
daa
sub
push
les
jge
and
jae
adc
pop
popa
add
mov
mov
pop
outsb
push
mov
jnp
jnp
int3
pop
test
pusha
adcb
and
add
cmp
and
ret
cli
lahf
xchg
mov
pavgw
int
mov
cmp
testb
dec
ljmp
lea
and
mov
mov
call
sti
outsb
inc
jae
xchg
ljmp
inc
les
jnp
add
pop
jmp
je
test
and
and
mov
mov
out
jne
mov
cmp
imul
mov
mov
mov
dec
aaa
adc
es
mov
push
pop
loopne
mov
pop
lods
pop
ficoms
push
add
jb
cmc
lds
xchg
pop
mov
dec
add
es
dec
jnp
stc
xchg
fnstenv
je
jmp
jmp
clc
mov
mov
sub
inc
std
pop
or
cwtl
imul
fwait
rcl
aam
aam
bound
add
mov
add
and
or
adc
adc
mov
sub
call
xchg
adcb
add
pop
je
imul
leave
sub
adc
cmp
and
jge
pop
jle
push
and
js
mov
nop
testb
jnp
icebp
push
popf
mov
jb
cmp
and
add
inc
lods
jb
insl
in
and
sbb
xor
pop
popa
mov
dec
add
repz
inc
cmc
mov
jne
cmp
sti
jecxz
cmc
std
dec
mov
mov
testb
and
loop
sarl
mov
sub
das
roll
mov
stos
repnz
add
push
pop
pop
mov
hlt
add
inc
pop
pop
and
adc
fldenv
call
pop
test
xchg
push
scas
xor
mov
add
pop
aad
pop
xchg
inc
cmp
shrb
mov
addr16
ja
mov
rcrl
add
scas
lock
je
popa
mov
push
fwait
jecxz
mov
fdivrs
fisttps
jbe
ficomps
dec
mov
push
add
divb
adc
xchg
fcompl
mov
mov
cli
push
pop
pusha
rcl
sub
add
adc
outsb
pop
sub
aas
jb
dec
ror
mov
int3
sub
out
test
mov
mov
adc
outsb
sbb
cmp
cmpsb
or
jl
pop
push
std
fnstcw
xor
xchg
and
stc
or
cltd
sbb
aas
sbb
xlat
arpl
xchg
insb
and
clc
mov
or
nop
or
jae
js
jae
add
push
mov
mov
lods
jo
xchg
aam
lret
add
loope
jge
rolb
mov
fadds
xor
sbb
popf
mov
lds
and
xor
lods
add
cmpsb
mov
fwait
pusha
xchg
jno
adc
incl
and
repnz
xchg
push
sub
pop
sti
bound
fcomps
push
push
xor
push
push
fbstp
add
xchg
sub
sar
or
les
pop
pop
aam
push
pop
or
inc
inc
and
lods
mov
dec
pop
stos
fwait
popf
shlb
test
mov
and
adc
add
out
xor
mov
dec
lods
fsub
dec
stc
fstpl
das
pusha
mov
js
andb
push
sub
cmpb
stc
add
xor
sti
xchg
cltd
fs
add
shlb
popf
loopne
sub
mov
xor
enter
rcll
jmp
push
bound
cld
fbld
sarb
and
xacquire
pusha
push
bound
imul
xor
jmp
cmp
push
test
fnstsw
adc
sar
xor
jmp
dec
or
cmpsb
xor
mov
je
leave
lahf
fadds
xchg
mov
shl
add
xchg
aas
ljmp
idiv
repnz
sbb
mov
subl
movsl
dec
mov
and
fwait
sbb
fnsave
cmpsl
idivb
mov
test
mov
jp
ss
mov
cmc
sub
and
dec
movsb
sub
add
std
pop
add
mov
shrb
movsl
or
fdivrs
or
jne
xor
mov
daa
add
pmaddwd
adc
test
gs
out
or
xchg
nop
jg
mov
cmc
lahf
int
in
arpl
push
add
jbe
dec
adc
mov
repnz
pop
push
les
or
popf
add
xchg
mov
push
xchg
aam
icebp
cltd
lods
jne
mov
dec
xor
imul
add
dec
jns
add
popf
sbb
sub
lcall
fwait
jne
gs
push
incb
lods
ds
std
jb
xor
lock
adc
pop
and
cmp
ror
ljmp
xchg
adc
stc
insb
test
add
sahf
incb
arpl
orb
cld
pusha
mov
jle
jb
mov
pop
lret
push
mov
adc
sbbb
pop
add
mov
sub
hlt
push
jl
dec
jl
adc
mov
mov
jecxz
pop
or
or
hlt
xchg
push
cmc
rorb
sarb
and
adc
mov
popa
push
lahf
jnp
lods
f2xm1
inc
pop
inc
mov
add
mov
addr16
nop
addr16
ja
cmp
js
pop
sub
fistpll
enter
jmp
xchg
mov
shr
js
mov
inc
aas
and
push
pop
jecxz
xor
out
rolb
jno
mov
test
add
jg
cmp
cmp
popf
add
fisttpll
cmpb
and
cwtl
mov
popa
jp
jmp
add
outsl
fdivl
adc
das
adc
outsb
xor
icebp
adc
push
push
loop
dec
mov
test
push
nop
mov
and
add
mov
xchg
arpl
or
cmp
cs
pop
cli
xor
scas
movsb
test
xlat
lock
mov
out
mov
pop
loop
test
lcallw
fimull
and
inc
sbb
testb
into
sbb
dec
adc
mov
repz
xchg
inc
int3
cmp
add
test
flds
imul
testl
aas
mov
push
out
jmp
xchg
adc
mov
inc
push
nop
call
cli
stos
stos
cwtl
and
xchg
pop
pop
mov
js
dec
nop
fildl
das
mov
sbb
out
jecxz
in
push
repnz
aaa
shrb
and
mov
dec
inc
into
inc
push
out
lods
add
mov
das
pop
mov
mov
aam
push
push
in
data16
in
cwtl
fistpl
repnz
dec
in
mov
pop
popa
pop
pop
xor
ds
rorl
push
les
mov
push
push
aas
adc
stos
mov
pop
or
xlat
add
outsb
mov
xor
dec
dec
mov
sub
add
hlt
or
or
movsl
push
dec
push
fs
pop
cmp
xchg
push
dec
and
sub
push
and
add
int
and
push
adc
js
popa
aaa
add
push
inc
mov
mov
dec
lcall
cmp
cmp
and
mov
xorl
push
ja
mov
sub
in
and
cmpsl
in
fadds
cmp
and
xor
jle
inc
insb
sub
mov
test
out
sub
sbb
sub
mov
out
add
cld
adc
call
or
outsb
mov
aaa
sub
pop
add
push
xor
mov
in
inc
xchg
jae
add
call
jae
add
mov
mov
add
repz
daa
mov
popa
sub
addb
mov
cld
and
xor
aaa
push
xchg
sbb
sti
and
stos
and
insl
sub
pop
nop
xlat
xor
add
cvtpi2ps
sbb
int
mov
pop
xchg
ret
mov
loope
aas
lret
cmp
dec
mov
loope
mov
dec
out
lret
in
mov
test
loopne
inc
push
add
mov
mov
je
push
dec
jo,pn
jge
pop
push
pop
cmpb
add
jge
mov
add
dec
xchg
call
or
add
sbb
fmul
adc
xor
or
xor
cmp
push
xor
xchg
push
pop
pop
rclb
adc
popf
jne
xor
inc
test
jp
add
push
cmc
xor
inc
outsl
pop
pop
push
cmp
int
and
cli
and
mov
cmpsl
in
xchg
mov
xor
loopne
mov
popf
fisttpl
jno
enter
divb
addb
popa
aam
outsl
mov
dec
aam
mov
dec
mov
andb
lods
fisubs
jecxz
pop
dec
dec
decl
js
nop
sub
push
insl
or
push
or
fcmovnu
js
iret
or
inc
or
dec
pop
and
jp
adcb
sub
ret
xorl
aam
in
inc
in
leave
add
mov
or
add
xchg
aas
ja
mov
and
add
ret
ss
test
and
imul
sub
movsb
out
call
ss
or
jae
popf
adc
jo
loope
mov
hlt
sti
inc
je
mov
cmp
push
outsl
and
pop
faddl
cmp
sarb
or
and
pop
push
fcmovbe
dec
mov
mov
add
loopne
sub
mov
and
or
and
or
nop
in
jmp
out
mov
mov
push
lock
push
jo
adc
pop
mov
mov
notl
pushf
out
out
hlt
jmp
cmpsl
mov
pop
xchg
shll
and
cld
mov
or
loop
pop
pop
inc
push
or
lea
mov
cmc
xchg
push
mov
xchg
stc
shrb
adc
in
test
xchg
xchg
popa
mulb
arpl
pop
xor
add
int
ja
mov
leave
and
pop
mov
sbb
outsl
pop
negb
lods
mov
pop
adc
xchg
nop
hlt
mov
pop
adc
test
dec
sbb
fdivr
xchg
test
test
push
test
icebp
cmpsl
rcrb
sbb
pop
jns
andl
fdivs
pop
add
test
jnp
add
mov
add
lea
and
inc
icebp
sub
pushf
inc
mov
jno
bound
test
mov
dec
pusha
aaa
lea
push
loopne
addl
daa
adc
or
mov
or
mov
xchg
inc
cwtl
fs
and
mov
mov
cmp
movsl
add
pop
divl
jl
adc
or
inc
mov
dec
mov
mov
ljmp
mov
push
insl
push
add
inc
push
inc
rcrb
push
loopne
aad
mov
mov
fdiv
jge
add
fildll
daa
xchg
rcll
lcall
mov
adc
ja
and
xchg
sbb
cmp
popa
xchg
daa
or
and
pop
mov
mov
push
add
outsb
je
jge
loop
sub
shrb
aam
cs
cmp
push
dec
mov
xor
and
jp
pop
mov
adc
inc
fildl
add
out
loopne
fiaddl
dec
imul
dec
jge
sti
mov
loopne
or
push
pop
hlt
pop
insl
mov
bound
aaa
or
stc
movsl
dec
arpl
mov
dec
lock
ret
pop
pop
xchg
jo
cmp
adc
add
xchg
filds
pop
sbb
jo
xchg
dec
push
inc
icebp
call
jge
adc
daa
xor
and
out
out
loopne
and
cmp
dec
and
rcrb
jg
pop
iret
orb
fcos
loope
push
loope
fadd
pushf
decb
sbb
pop
mov
pop
or
sub
and
icebp
adc
pop
inc
xor
push
stc
in
in
addr16
mov
add
aaa
dec
call
and
js
popf
mov
cmp
cli
ret
bound
xor
test
inc
dec
int
outsb
outsb
xor
push
hlt
add
jmp
ss
mov
loopne
pushf
cmp
rcrb
push
push
sbb
pop
popa
nop
test
cmp
xchg
sub
lahf
push
stos
cltd
stos
outsb
fxch
sub
jmp
daa
mov
lock
repz
test
mov
push
inc
sbb
xchg
add
push
sub
dec
jmp
lds
mov
or
in
pop
sbb
fcompl
adc
sbb
ret
inc
pop
add
lods
daa
loope
rcl
and
xchg
or
aaa
cmp
imul
pop
or
orb
add
lahf
les
outsb
call
cmpb
and
xchg
push
cmp
inc
jmp
mov
in
fidivs
lea
stos
mov
rcll
out
mov
in
insb
lods
dec
movsb
jae
mov
xchg
jne
xlat
mov
push
pop
pusha
enter
push
aaa
dec
jge
icebp
dec
add
rorb
add
test
dec
mov
jp
repnz
push
xor
cmpl
or
flds
lods
repnz
push
subl
dec
stc
mov
rcrb
in
imul
dec
aas
shlb
mov
testl
aam
adc
enter
jns
pavgb
or
repnz
in
push
notb
into
ljmp
lret
xchg
pop
jmp
mov
xchg
pop
add
or
outsl
loopne
fistps
popf
mov
or
mov
or
lea
jle
jg
loop
and
stos
cmpb
xor
lcall
add
adc
out
or
loopne
push
or
stc
xchg
push
mov
pop
fisubrs
add
inc
fwait
cmpsb
inc
inc
in
lret
jmp
clc
push
fs
xchg
in
daa
addb
jmp
add
xor
aam
outsl
bound
imul
sbb
test
sarb
mov
orl
stos
xchg
outsl
roll
push
jp
sbb
insl
cwtl
sub
imul
int3
insl
cmpb
push
icebp
int
fs
ja
ror
push
mov
cmp
xor
mov
repz
rcrb
addr16
popa
cli
xor
lahf
jmp
enter
adc
inc
fwait
jp
testb
jne
sub
daa
xchg
movsb
fildl
push
push
loope
pop
data16
stos
ficompl
jo
push
pop
stos
or
jbe
bound
cmp
add
loope
sub
aam
sbbb
or
rcl
or
imul
pop
add
hlt
inc
push
stos
pop
xchg
sti
cmp
xor
imul
pop
js
repnz
hlt
int
add
adc
pusha
inc
pop
mov
jl
ljmp
sbb
out
push
dec
cmp
dec
shlb
insl
lcall
add
fcompl
test
mov
xchg
or
push
push
das
push
push
jns
outsl
push
mov
jbe
inc
sbb
mov
loope
cs
test
xlat
jmp
icebp
add
fidivs
andb
xchg
out
and
dec
pop
aaa
adc
movsb
cmpsl
add
push
cli
fdivrs
push
jae
xchg
xchg
loope
pop
loope
outsl
aas
sbb
gs
and
sbb
push
pop
fcmovb
xor
jp
add
sbb
sub
sahf
add
sbb
dec
hlt
test
or
xor
jl
adc
or
pop
push
xor
add
mov
xchg
cmpsb
faddl
aaa
divl
test
pop
adc
sbb
mov
mov
scas
mov
mov
cltd
mov
jb
or
leave
mov
or
add
jo
pop
pop
hlt
add
mov
dec
lods
adcb
mov
inc
test
sub
push
mov
xor
cmpsb
adc
jae
lods
rcl
mov
fs
xor
fnstsw
call
xchg
cmc
xor
xchg
test
mov
idivb
mov
sub
add
and
pop
out
adc
push
mov
stc
test
inc
add
mov
sbb
push
leave
std
cmp
dec
hlt
jmp
mov
mov
inc
mov
out
and
jge
or
xchg
push
adc
mov
jo
adc
xor
fsub
movsl
rcr
lods
stos
insb
iret
add
lods
mov
sub
pop
and
or
dec
adc
fiadds
cld
fmul
jmp
push
inc
test
xor
jge
fiaddl
jnp
jnp
rcrb
test
sub
push
andl
popl
into
cmpsb
fmuls
or
out
inc
or
fistl
dec
into
mov
inc
cld
mov
imul
imulb
jo
jno
fnstsw
cmpsb
push
ja
scas
fsubrl
adc
push
inc
and
xchg
out
adc
test
xchg
dec
adc
or
add
lret
mov
cmp
out
jo
adc
and
in
es
cltd
and
xchg
add
jmp
inc
add
adc
adc
mov
ret
out
or
fdivl
mov
cmp
int
pop
push
or
daa
rorl
or
inc
mov
sbb
xchg
and
adc
mov
clc
jmp
lock
xchg
or
dec
push
inc
stos
adc
fildl
push
inc
loope
das
dec
xlat
adc
or
roll
push
xchg
dec
lea
into
and
ret
call
cltd
add
pop
repnz
das
popa
xchg
jnp
add
mov
push
push
bound
icebp
stc
mov
dec
stos
mov
in
and
add
add
fisubrs
aam
push
or
daa
int
ret
pop
pop
addr16
inc
dec
xchg
mov
daa
jle
fimuls
int
arpl
loopne
xchg
mov
or
cs
out
sbb
add
imul
dec
scas
xchg
mov
xorl
sbb
mov
mov
add
leave
in
aad
data16
xchg
pop
lea
stos
cmc
push
push
in
mov
jge
fldt
mov
mov
mov
jne
fcmove
xorb
lcall
xchg
pop
in
pusha
push
xchg
rclb
push
in
aaa
leave
jno
out
jne
jbe
dec
stc
outsb
jp
xchg
shlb
push
jns
les
fld
or
mov
xor
xchg
push
xchg
insl
cltd
inc
test
mov
movsb
push
adc
popa
repz
mov
add
jle
loope
add
inc
pop
das
sub
rolb
flds
add
test
ret
add
xor
dec
ja
lock
or
add
sbb
and
out
push
pop
pop
jle
xor
add
fisttpll
cmpsl
int
sbb
xchg
loopne
mov
repz
xchg
or
jno
bound
add
xchg
xlat
push
int3
mov
cmp
or
out
loopne
dec
addr16
dec
pop
xchg
clc
inc
sbbb
mov
dec
pushf
stc
mov
or
sbb
fcoms
div
add
jg
pop
inc
xor
or
push
gs
add
pop
and
push
mov
sbb
push
and
push
jg
mov
jecxz
add
imul
sbb
jne
out
adc
inc
mov
inc
lea
or
out
and
jmp
add
movntps
mov
add
sahf
movsl
rol
pop
push
push
bound
imul
ljmp
shll
add
mov
inc
and
sbb
popl
out
and
pop
xor
test
repz
stos
cmpsb
addl
divl
lcall
iret
jge,pn
jae
add
cmp
pop
mov
or
inc
and
fs
add
daa
dec
jp
pop
lret
mov
cltd
add
ficomps
je
stos
push
add
dec
xchg
pop
mov
pop
xchg
xchg
xchg
dec
sub
jbe
in
dec
adc
imul
jns
cmc
sub
adc
jnp
add
cmp
aaa
and
call
push
int3
sbb
aad
stos
and
adc
jge
pop
call
in
jne
daa
sub
js
and
movsl
pop
sub
mov
jno
imul
xor
bound
mov
mov
icebp
push
sbb
loope
adc
cmpb
cmc
faddl
or
jl
push
xchg
out
loop
je
and
imul
rorb
inc
bound
movl
push
dec
push
lea
cmp
rclb
lock
adc
push
bound
push
rorb
push
pop
aaa
adc
das
fdivrs
or
or
out
push
or
call
jno
jo
jnp
pop
cld
out
mov
dec
mov
jns
push
lret
pushf
jno
pusha
xchg
or
push
popf
mov
xchg
sbb
dec
stc
mov
sub
push
out
movsb
jle
aas
adcb
or
mov
stc
jmp
imul
add
sbb
faddp
push
or
loop
and
mov
add
xchg
hlt
and
daa
mov
add
fistps
mov
pusha
fs
cmp
xchg
icebp
out
sbb
add
or
adc
mov
cmpsl
sbbb
mov
cmp
sbb
mov
aad
add
orl
add
int3
mov
fisttpl
xchg
lahf
repz
jne
int3
leave
jno
ret
dec
pop
arpl
call
push
push
loop
mov
imull
and
dec
fmul
faddl
cmp
pop
xlat
sahf
jg
shrl
jnp
movsb
and
dec
imul
subl
mov
arpl
sarb
cmp
lahf
mov
ret
push
cmp
xchg
jno
adc
add
sbb
cli
cmp
xorb
fsub
cmpsb
add
ret
mov
mov
leave
push
dec
cmp
sbbb
pop
sbb
xchg
cmc
add
push
ja
pop
jmp
xchg
repnz
adc
cmp
lea
hlt
xlat
lret
popa
rorl
jbe
cmp
cmp
or
mov
movsl
adc
cmpsb
add
jb
sbb
mov
loopne
or
testl
and
dec
add
mov
loopne
popf
notl
dec
xchg
fwait
mov
test
mov
call
add
lds
ljmp
aad
push
pushf
sbbb
fists
adc
cmp
test
imul
add
add
push
popf
push
mov
sub
xor
lret
cld
pop
ljmp
or
pop
inc
shl
out
sbb
das
je
pop
jne
loope
rcrb
ret
movsl
jmp
jae
stc
sub
sbbb
rcll
pop
outsb
aas
js
inc
push
orl
dec
fdivrl
dec
cli
cwtl
mov
mov
lds
lods
in
lret
jno
inc
scas
adc
out
add
mov
jecxz
mov
jno
adc
xchg
xor
es
mov
jmp
pop
cli
ret
pop
jge
loop
or
mov
fwait
dec
cmpsl
and
arpl
addr16
movsb
nop
negb
jecxz
clc
insb
icebp
repz
push
lcall
inc
outsb
adc
or
mov
movsb
mov
pop
pop
lds
push
mov
les
and
pop
xor
or
mov
mov
cli
inc
sub
mov
dec
sbb
jae
fwait
movsb
cwtl
sahf
mov
popf
or
aam
or
aas
inc
enter
add
and
enter
imul
hlt
and
add
mov
xor
pop
je
xchg
ret
and
sbb
in
call
sub
push
push
lret
mov
sbb
outsl
or
sub
or
idivl
add
cmc
in
jb
mov
cmpsb
add
sti
mov
lock
pop
roll
push
xor
ret
test
cmp
mov
sub
mov
movsb
and
adc
xchg
imul
sbb
lods
cmp
cld
andb
jmp
scas
inc
push
pop
iret
not
xchg
xchg
dec
xor
jbe
push
stc
push
dec
inc
sahf
or
mov
or
push
push
mov
aas
adc
les
or
sub
fmuls
mov
mov
movsb
cmp
test
lock
pop
mov
cmp
fidivl
sar
mov
int3
mov
and
xchg
nop
pop
sub
stos
jl
xor
lods
iret
add
sbb
lea
xor
outsb
push
push
pop
sbb
lret
call
add
cmc
or
add
jmp
adc
in
inc
cmp
pusha
mov
push
popa
mov
xor
add
push
jg
pop
out
jmp
imul
xor
sti
pop
mov
push
test
in
out
lea
clc
add
jecxz
mov
pop
es
and
fildll
lcall
insb
popf
push
lahf
mov
cmp
fnstcw
shll
mov
fisttpl
sbb
test
dec
dec
xor
jmp
loop
adc
sbb
mov
popa
inc
int
cs
mov
jl
add
ljmp
call
jmp
mov
notl
sbb
es
jnp
inc
jbe
jecxz
out
iret
clc
mov
add
and
leave
daa
add
inc
ficompl
push
das
push
outsb
xor
sbbb
popf
add
sbb
loope
cmc
and
push
fstpt
or
mov
stos
cmpsb
int3
movsb
cmpsb
push
or
adc
push
adc
pop
in
jnp
std
das
test
add
sahf
dec
push
mov
cld
out
outsb
les
and
enter
mov
jno
mov
sub
cmp
dec
and
stc
aad
fsubs
popa
sub
dec
clc
outsb
jecxz
adc
fisttpll
pop
lock
sti
xor
sbb
dec
jmp
and
sub
bound
mov
pusha
xor
cmp
pop
fiadds
fildll
fldl
outsl
push
add
sbb
push
cld
push
mov
pop
jmp
mov
call
iret
xchg
jg
daa
cli
mov
xchg
add
es
fistps
adc
adc
pop
je
push
add
and
insl
push
mov
dec
jge
lods
add
outsb
je
gs
test
and
in
and
dec
add
out
jl
and
add
ficomps
push
mov
dec
popf
and
xor
or
lcall
gs
pushf
and
sub
mov
jns
add
das
jns
push
inc
clc
adc
nop
outsl
addl
mov
popf
fstps
cmc
in
cmp
pop
push
inc
jbe
fcoml
ja
movsl
scas
mov
pop
pop
std
inc
stos
call
enter
add
insl
dec
sub
and
lods
add
clc
mov
xor
mov
pop
fbld
psubd
push
fadd
mov
adcb
dec
mov
icebp
mov
scas
sarb
xchg
xchg
jne
mov
jno
adc
add
sub
lahf
push
outsl
or
mov
cwtl
js
int3
xchg
jno
and
and
pusha
clc
pop
xchg
jne
or
sbb
popf
enter
lret
bound
int
clc
jmp
or
movsb
int3
pop
mov
and
xchg
xor
push
cld
stc
les
inc
jbe
sarb
pushf
adc
mov
push
shll
jmp
outsl
cmp
push
or
add
mov
adc
faddl
push
ss
outsl
adcl
std
ljmp
xchg
sub
mov
sarl
xchg
mov
lods
xor
mov
jecxz
xchg
or
lock
nop
xorl
mov
mov
mov
adc
dec
add
imul
loopne
adc
inc
add
xorl
mov
out
repz
xlat
jge
in
and
xchg
stos
sbb
push
nop
jb
inc
push
xchg
mov
sbbl
cmp
add
xchg
inc
xor
xor
mov
add
cmpsb
push
jecxz
dec
lods
test
in
das
mov
sti
add
nop
dec
call
scas
xor
mov
sub
inc
xor
ret
or
in
add
sbb
std
and
mov
je
faddl
sbb
cwtl
mov
lret
test
hlt
pop
xchg
sbbb
lea
push
fiadds
pop
lret
mov
pop
mov
sub
rcl
sub
jne
pop
mov
cld
je,pn
lcall
and
lahf
and
pop
lock
adc
and
repnz
fcoml
leave
sbb
movsl
adc
add
mov
outsl
pop
das
imul
sbb
cli
loop
int
mov
jbe
push
xor
lcall
lret
ss
imul
jl
mov
inc
dec
fldl
add
cld
add
andb
jb
cli
xchg
sti
inc
pop
sbb
and
cmpsl
clc
and
out
xchg
loope
popf
int
push
add
pop
out
hlt
or
dec
inc
test
out
loopne
int
or
call
add
jecxz
dec
movq
sbb
add
lds
cmp
jg
sbb
mov
push
or
bnd
or
push
pop
sbb
enter
push
push
push
jno
insb
pop
add
sbb
add
mov
add
add
int3
sbb
dec
push
enter
scas
repnz
ljmp
jmp
repz
sbb
sarl
ficoms
out
mov
sbb
ja
sbb
push
loop
add
cmp
xor
inc
je
push
fs
dec
sarb
aad
movl
xor
sbb
pop
inc
shlb
push
push
pusha
sub
movsl
xchg
mov
jmp
andb
jno
int3
push
xchg
mov
stos
jge
subl
jge
out
sub
adc
fsubs
jne
int
add
pop
outsb
and
add
or
inc
jge
inc
mov
inc
jae
add
add
cmc
call
xlat
cwtl
vaddsubps
push
jo
mov
shlb
or
dec
addr16
aas
mov
cmp
mov
or
xor
rcll
xchg
bound
hlt
xchg
std
mov
and
pop
sub
stc
mov
mov
sub
add
jl
inc
add
stc
subb
pop
xchg
sbb
push
ret
loopne
adc
icebp
cmpsl
sbb
pop
insl
pop
push
xor
ja
inc
jg
add
sub
add
jbe
scas
xor
pop
ja
add
add
xchg
inc
pop
push
fwait
push
shr
push
addb
cmp
and
adc
test
leave
mov
jl
imul
iret
popf
cmpb
push
das
int3
inc
xchg
bound
push
inc
jo
mov
movsb
mov
jecxz
inc
out
divl
pusha
mov
lahf
add
or
mov
cmp
in
sbb
inc
lret
fldl
jns
shrl
add
mov
mov
pop
pop
mov
and
jle
pop
xchg
into
pop
popf
in
or
xchg
xchg
mov
inc
xchg
and
fwait
loope
lods
mov
xchg
aam
leave
and
shll
leave
inc
add
mov
push
mov
sub
push
add
push
movsb
pop
add
xlat
and
pop
out
mov
xchg
mov
jl
clc
pop
lods
xchg
push
dec
fldl
inc
hlt
add
xlat
jnp
inc
ss
pop
lret
icebp
lds
cmp
mov
mov
std
xchg
or
clc
clc
sbb
dec
lea
cli
cmp
loop
testl
sub
daa
call
add
mov
out
loopne
adc
jo
or
cmpsb
inc
nop
pop
mov
or
into
adc
mov
daa
movsb
bound
jne
fldl
test
ss
mov
jmp
daa
daa
sub
nop
jle
faddl
jp
push
push
xor
loope
das
loop
daa
pop
jg
mov
pop
nop
sub
pusha
in
lss
inc
popa
push
ljmp
add
push
cmpsl
cmp
xchg
lods
and
push
sbb
xchg
xor
jmp
mov
jo
dec
sbb
pop
and
loopne
inc
mov
fsubl
pop
jl
inc
jmp
jg
and
sbb
je
mov
and
add
push
xor
out
or
jbe
bound
faddp
and
fwait
cld
mov
popf
das
xor
push
sbb
sub
in
mov
xor
loope
ljmp
jne
je
inc
and
fldl
inc
popa
pop
inc
inc
mov
adcl
outsl
inc
loope
mov
xchg
add
aam
xchg
mov
mov
sub
xor
pop
sahf
add
mov
cmpsb
add
jae
rclb
sub
mov
xchg
jns
inc
jne
sahf
cmp
test
adc
mov
jb
iret
and
aam
popf
movsb
enter
clc
and
xor
imul
adc
jno
add
aas
push
clc
and
arpl
cmp
popa
cmc
mov
call
or
ret
cli
mov
daa
mov
lret
cmc
inc
scas
jg
xchg
dec
stos
jo
test
xchg
pop
daa
inc
popf
ss
cmp
add
dec
mov
xor
xor
xchg
pop
xorl
in
sub
imul
sahf
add
mov
lock
sub
dec
aam
ds
lods
ss
mov
fwait
jbe
sub
pop
xor
add
leave
mov
and
pop
rcrb
fwait
xlat
js
leave
push
or
push
xchg
and
sub
cmp
sti
lret
sbbl
insl
dec
movsl
repz
pop
imul
mov
lret
or
cld
cmc
sbb
sub
insl
pop
lods
sbb
jnp
sbb
and
insl
mov
mov
fs
ret
fcoml
lret
adc
andl
shl
daa
test
pusha
icebp
lahf
outsb
add
rorb
mov
sbb
imul
add
jp
xchg
push
inc
mov
add
mov
push
ficoms
out
stos
dec
or
hlt
cltd
cld
xchg
call
xchg
jmp
jl
push
leave
jnp
jmp
loope
dec
lret
ja
dec
sub
mov
jo
lret
dec
icebp
and
fld
adcl
shr
cmpsb
test
nop
add
popf
cld
pop
loopne
and
xchg
push
mov
ds
jnp
and
das
cld
rorb
cmp
xchg
jne
xchg
sub
mov
xorb
and
shrb
lods
cmp
cmp
test
push
jb
jb
imul
sbb
loopne
lock
push
aad
and
shrl
push
inc
mov
mov
xor
lds
push
push
add
out
xchg
popw
add
je
pop
daa
mov
mov
push
add
test
push
inc
push
out
dec
add
sahf
int3
cmp
pushl
adc
outsb
movsb
daa
cltd
push
sbb
movsl
loope
or
add
inc
push
push
xchg
pop
pop
jno
cs
cld
xor
mov
add
dec
and
add
mov
inc
xor
pop
dec
int3
adc
das
inc
push
mov
pop
push
cmpsb
push
dec
cld
cmpsb
shrl
push
scas
adc
insl
xchg
sti
lea
adc
jae
icebp
add
add
or
int
shll
or
fbld
add
or
and
push
fucomp
jecxz
cld
ljmp
mov
out
je
sub
push
cmp
or
cmc
inc
xchg
rclb
mov
sbb
and
inc
not
or
leave
xchg
adc
mov
orb
adc
arpl
cwtl
enter
pop
jbe
fwait
push
shl
cmp
inc
and
or
mov
mov
jmp
cmp
pusha
loopne
mov
adc
or
imull
pop
lcall
xchg
or
mov
push
push
mov
xchg
sub
sbb
mov
push
rcll
mov
pop
xor
pop
pusha
call
orb
pop
pop
pop
in
add
mov
adc
cmpsb
test
pop
add
rolb
add
lcall
or
push
push
pop
insb
pop
in
stc
loop
push
xor
dec
sub
xchg
sub
cwtl
or
fwait
cmp
jo
sbb
mov
ljmp
push
mov
pop
push
dec
int
in
or
sahf
add
pusha
clc
cmp
mov
mov
daa
dec
out
out
fisubrs
test
jo
mov
mov
jl
push
mov
lods
sets
dec
xchg
mov
mov
cmp
mov
out
jno
jns
clc
loop
pushf
pop
out
mov
mov
pusha
in
mov
jo
test
or
icebp
pop
pusha
jg
clc
mov
ljmp
test
and
sbb
xchg
std
out
pop
daa
aad
fisubrs
jo
popf
lcall
ficoml
inc
out
xor
add
int
xchg
addb
in
push
dec
cmp
inc
test
add
push
adc
dec
pop
adc
stc
gs
push
aas
lea
add
cmp
lahf
mov
dec
hlt
sti
dec
add
mov
push
pop
stc
pop
sbb
pop
or
ret
adc
imul
rolb
bound
dec
push
scas
xor
fidivrl
bound
cmp
inc
mov
xor
or
add
int
into
pusha
pushf
lock
aam
sub
gs
jl
fdivrs
push
xchg
lea
ss
inc
mov
and
push
xchg
xor
push
add
xchg
and
leave
sbb
mov
sbb
mov
jne
mov
push
orb
cld
mov
sub
jnp
test
or
xchg
push
pushf
xchg
mov
and
cmpsl
xchg
addr16
popl
pop
and
sbb
add
or
jg
test
fldl
gs
sbb
sub
testb
xchg
cwtl
add
orb
mov
xchg
pusha
push
cli
pop
cmovnp
std
pop
dec
stos
mov
pop
cwtl
jge
outsl
movsl
imul
stc
movsb
bound
in
test
jge
ljmp
mov
cmp
adc
adc
cmp
out
orb
fwait
dec
add
mov
out
mov
or
mov
or
fwait
cmp
insb
adc
hlt
js
mov
gs
or
xor
pop
mov
lahf
xchg
add
sahf
cmp
dec
cmpsb
loope
cmp
mov
imul
cltd
or
or
sti
sub
xchg
xchg
fildll
addr16
inc
lea
enter
push
stos
in
sbb
das
js
inc
add
mov
je
adc
int3
pcmpgtd
mov
sub
adc
std
fs
mov
popa
add
cwtl
shrl
addr16
pop
push
pusha
dec
jne
inc
push
ja
sar
nop
and
test
xor
cmp
sbb
icebp
nop
pop
add
ret
sub
daa
cltd
fmul
into
and
add
jne
dec
add
pusha
adc
cwtl
inc
add
call
sub
sti
mov
xor
jnp
push
pop
jp
out
mov
sbb
shlb
inc
sbb
mov
int
cmp
je
add
popf
ljmp
bound
add
mov
scas
idivb
xor
jbe
mov
aaa
sub
mov
lods
out
add
push
push
ljmp
les
inc
adc
add
inc
push
add
jo
push
and
sbb
icebp
loop
sbb
inc
rclb
push
lahf
or
pmullw
js
jecxz
cs
sub
xchg
jle
adc
fisttpll
jo
push
sbbl
stos
lds
das
outsb
add
lock
pop
sub
cmp
inc
les
shl
pop
outsb
jge
dec
xchg
add
and
pop
add
dec
adcl
addr16
pusha
outsl
lods
dec
sub
xor
xor
and
or
ret
repz
repnz
mov
jg
add
sbb
shrl
insl
add
and
testb
mov
popa
out
xchg
int3
test
movl
out
leave
inc
adcl
mov
mov
xchg
in
and
in
popa
mov
inc
in
jnp
ret
xor
add
in
dec
dec
mov
movsb
adc
and
push
hlt
scas
mov
daa
push
mov
ja
in
sub
out
add
hlt
rorb
cmp
aam
pop
dec
ret
add
out
and
lcall
add
inc
mov
pop
adcb
bound
lahf
ss
inc
mov
add
das
add
enter
or
pop
mov
jmp
push
ja
daa
inc
movsb
rolb
jne
add
fwait
mov
push
inc
lcall
adc
mov
add
dec
xchg
call
scas
sti
ss
shl
xor
pop
add
mov
and
adc
pop
sbb
int
pop
in
fstl
jns
xchg
jle
adc
add
incb
in
rclb
or
cmp
repz
sbb
in
test
hlt
or
test
or
inc
xor
and
adc
mov
pop
dec
cli
push
mov
mov
negl
test
inc
xchg
pop
jne
push
shrl
add
jb
xchg
mov
add
cld
aaa
shrb
ja
add
filds
fsubl
xchg
test
das
mov
or
add
out
sub
add
aad
pop
movsl
les
xor
xor
add
add
loopw
cmp
lods
daa
push
int3
stc
add
sti
push
pop
jmp
add
push
add
and
jo
aas
cmpsb
mov
mov
dec
inc
mov
pushw
inc
jl,pt
add
xor
ret
jmp
mov
cmp
testl
test
das
call
rolb
pushf
sub
cmpsl
ja
filds
pop
cwtl
sub
mov
jg
add
xchg
div
mov
fadds
scas
cmp
add
push
mov
sbb
push
call
cwtl
mov
inc
mov
add
ja
cmpsl
adc
in
pop
or
rol
dec
aam
add
add
xor
loopne
sbb
push
or
cmp
jmp
lods
mov
pop
out
pop
enter
add
es
dec
xor
cld
divl
rorb
jp
xor
loopne
push
add
shll
in
jg
add
out
mov
pop
nop
outsl
fsubs
orb
adc
inc
movsb
or
cld
cmp
xor
loopne
mov
xchg
cltd
mov
or
jne
rclb
pusha
cli
lea
into
cmp
fsubl
sbb
pushf
fisubrl
pop
repnz
or
pop
mov
cs
jecxz
mov
int3
pop
and
test
xor
mov
subl
mov
addl
sub
loop
xorb
mov
mov
add
cld
not
add
fwait
sbb
movb
les
jns
add
insl
mov
nop
andb
popl
sub
loope
dec
shl
insb
mov
scas
mov
mov
out
push
aam
push
adc
lea
lcall
jp
and
jno
sti
pop
xchg
stc
das
addr16
jae
inc
xchg
adc
sub
xchg
arpl
into
cmp
daa
insb
push
push
xlat
push
nop
test
ds
dec
outsl
and
fsubl
shll
out
push
rorb
mov
mov
int3
sbb
pop
xchg
testb
lret
dec
xchg
add
sbb
dec
fwait
jmp
inc
ljmp
popf
sbb
pop
pop
pop
or
and
orl
loop
fcoms
rcl
repz
sub
sbb
add
pop
int3
pop
pusha
shll
divl
lcall
mov
adc
dec
andb
xorb
sub
pop
pop
dec
scas
movsl
popf
xor
push
popa
adc
pop
sub
add
mov
jl
xor
inc
sbb
loopne
dec
rorb
sbb
mov
ret
les
out
or
pop
add
add
lock
out
faddl
sub
cmpsl
in
dec
dec
add
lahf
mov
jle
and
fprem1
inc
adc
je
sbb
out
cmp
and
andb
adc
pusha
pop
loopne
add
mov
loopne
jbe
add
and
add
push
outsl
rcll
mov
jnp,pt
sub
jmp
pop
mov
neg
sub
stos
inc
xchg
inc
subb
adc
popa
add
das
mov
push
jno
sarb
add
push
inc
scas
lret
cmp
dec
dec
add
and
pop
mov
bnd
push
pop
aas
repnz
mov
xlat
sbb
lods
or
bound
call
cmc
orb
jo
in
pop
mov
js
add
push
sbb
shlb
mov
add
out
stos
add
dec
jg
lock
inc
push
sarl
aas
cmp
add
xchg
jl
out
sbb
scas
adcb
xor
add
lcall
mov
pop
stos
and
cmp
fs
jle
mov
adc
mov
dec
add
fstpl
add
jnp
mov
push
popf
aam
dec
xlat
iret
inc
mov
stos
or
push
jo
sub
pop
xorb
ja
cmpsl
ja
loopne
imul
inc
xchg
push
fwait
call
inc
xor
dec
sbb
mov
lret
jnp
xlat
pop
xor
andl
jmp
loopne
popa
insb
movq
xor
fistl
fs
push
adc
add
push
mov
add
mov
adc
notl
add
or
scas
sti
nop
mov
inc
xchg
int
hlt
cmpsb
jo
lret
std
add
mov
xlat
unpcklps
sbb
xor
xor
push
adc
rorl
adc
xadd
push
xor
jecxz
mov
test
mov
test
rcr
xor
add
push
inc
pop
sbb
into
mov
lods
lock
sbb
cli
das
jo
cmp
sbb
mov
in
pop
add
inc
cmpsl
fmuls
lcallw
cs
push
xchg
fbstp
jg
scas
cmpsl
or
and
and
jecxz
sbb
mov
and
test
out
pop
xchg
testl
dec
xchg
loopne
add
outsl
adc
dec
sbb
xchg
jl
xchg
data16
shll
adcb
inc
and
dec
leave
sbb
das
push
into
gs
inc
stc
in
mov
xor
inc
mov
subl
pop
mov
sbb
jecxz
ret
in
fldpi
inc
push
xchg
dec
pop
out
push
jb
cmp
sbb
add
add
xor
fiadds
add
pop
sbb
jnp
and
pop
push
mov
pop
inc
popl
cmc
mov
je
sti
mov
xchg
inc
pop
scas
mov
ret
ret
lahf
stc
lock
mov
add
out
ret
pushf
mov
mov
inc
jl
je,pn
cmpsl
add
movsl
arpl
daa
testl
outsb
sarl
fsubrs
add
jecxz
pop
mov
lea
dec
mov
aaa
push
pop
mov
add
test
mov
je
loopne
and
pushf
aaa
cltd
jne
add
sub
jmp
add
mov
xor
xor
shlb
and
js
cmp
pushf
stos
repnz
sub
jg
xchg
idiv
repnz
shl
push
test
mov
mov
mov
stos
adc
mov
and
mov
and
movsb
dec
add
jae
mov
mov
jb
pop
mov
ljmp
popf
scas
mov
fsubs
xor
push
loop
push
and
pop
repnz
mov
mov
std
and
or
dec
or
ret
test
inc
adc
mov
rcrl
test
in
fsub
xchg
adc
add
mov
or
insl
push
jo
add
adc
cs
das
and
pop
dec
add
inc
sbb
popa
nop
xchg
aaa
dec
add
sub
mov
mov
pop
lds
mov
and
dec
jle
popf
pop
fcom
push
outsl
outsb
inc
add
mov
nop
es
xchg
jnp
movsl
int
inc
or
iret
dec
test
dec
mov
add
out
add
push
hlt
out
xor
pusha
popa
mov
mov
jecxz
inc
out
rolb
xchg
out
hlt
jle,pt
push
pop
inc
insl
add
and
adc
loope
push
popf
lock
jmp
fcoml
pop
nop
in
addr16
mov
push
inc
pop
leave
pop
xchg
inc
adc
out
xchg
xchg
popf
in
aad
nop
nop
insb
aam
rolb
gs
sbb
lahf
outsl
ffree
pop
imul
mov
xchg
sub
and
jg
mov
and
mov
adc
adc
or
mov
incb
testl
mov
mov
and
adc
mov
repz
call
daa
inc
push
mov
jmp
xor
aam
ret
das
and
insb
popf
pop
fisttpll
inc
sub
push
xchg
mov
sbb
dec
mov
pop
test
fs
stc
insl
cmpb
or
sub
mov
push
sbb
leave
mov
inc
jmp
mov
xor
les
nop
enter
pop
test
jl
stc
std
sbbb
test
xchg
cmc
or
add
adc
addr16
clc
jb
sub
fiadds
iret
lcall
or
push
sti
jmp
lret
test
pop
rclb
imul
and
mov
cs
mov
loopne
xchg
adc
out
add
test
idivl
outsb
daa
xlat
xchg
push
pusha
push
lret
int
dec
pop
repnz
jmp
out
nop
cmp
sub
setge
cmp
jmp
leave
mov
mov
or
pop
out
fcmovu
lret
adc
mov
sub
std
adc
mov
scas
cs
enter
sub
mov
and
lea
dec
xor
or
test
sbb
or
insb
jge
daa
jne
pop
insl
jp
sbb
xor
das
push
stc
mov
dec
jmp
add
popf
cmp
fwait
mov
cmpsl
push
push
and
xchg
fimuls
mov
jae
bound
mov
mov
mov
add
outsl
sti
enter
loopne
dec
lods
mov
jb
mov
xor
arpl
mov
jp
mov
inc
ljmp
push
pusha
mov
sub
cmpsb
add
sub
lea
cwtl
adc
cmp
or
bound
adc
xlat
pop
in
dec
add
mov
aad
addr16
and
ficoms
mov
adc
inc
or
mov
mov
dec
mov
dec
lods
test
mov
inc
add
sbb
push
mov
sub
sbbb
dec
sbb
jecxz
daa
push
jae
lds
xchg
pop
pop
xchg
call
movsl
jbe
add
pop
das
sbb
adc
and
inc
jp
stos
cmpsb
sti
movsb
pushf
mov
test
add
out
out
or
add
lret
dec
shrl
popf
fldcw
cld
ds
popf
iret
ljmp
xchg
fstl
sbb
loopne
xor
out
or
je
fistpll
fwait
add
add
push
negb
mov
outsb
add
lds
nop
jno
bound
mov
aam
adc
out
mov
ret
xchg
movsb
mov
or
pop
loope
pop
mov
xor
loopne
data16
orb
scas
cmc
cld
pop
daa
je
fdivrl
add
arpl
mov
test
loop
lea
cmpsb
jg
cmc
pushw
stos
add
jl
cmpsb
add
or
jp
cmpl
lea
sbb
test
or
cmpsl
rolb
sar
sub
mov
mov
ss
in
icebp
les
loopne
loop
adc
sbb
lods
xchg
stos
pop
scas
fdivp
mov
xor
mov
push
popf
push
or
and
nop
add
shrl
orb
bound
jae
clc
dec
out
arpl
add
stos
in
xchg
mov
mov
mov
dec
mov
in
loopne
ret
add
loop
jle
lods
pusha
sub
xchg
jne
out
or
push
cmpsl
mov
cs
daa
xchg
add
adc
pop
cli
mov
sbb
jnp
push
mov
and
cmc
and
sbb
adc
push
mov
cmc
out
mov
xor
add
repz
int
push
jo
aam
stos
outsb
add
dec
shll
sbb
sub
jb
idivl
jbe
cmp
into
scas
iret
sub
mov
jle
aaa
and
insb
lahf
jae
daa
mov
fcomip
sarl
push
mov
mov
pop
pop
mov
push
mov
jecxz
pop
sarl
cs
loopne
and
scas
ret
test
or
add
mov
and
dec
add
mov
in
pop
jbe
or
mov
add
adc
cmp
xorb
cld
pop
jmp
jnp
fbld
sarl
stc
add
xor
push
fistpll
aam
and
incb
test
xchg
dec
lret
mov
or
xor
aad
popa
in
push
out
fwait
pop
lea
sub
leave
out
mov
add
pop
pop
mov
push
mov
add
imul
testl
adc
lods
daa
movsb
out
movsb
out
test
test
and
add
cld
je
inc
adc
pop
test
adc
sub
out
mov
jp
fisttps
data16
aaa
lahf
add
sti
jg
scas
test
dec
mov
imul
mov
popf
les
in
insl
mov
add
imul
lahf
mov
cwtl
das
push
lods
lock
das
pop
clc
bound
dec
mov
mov
pop
out
add
fistpll
sub
or
int
scas
insl
xchg
cmp
mov
xor
jp
nop
mov
int3
sarl
loope
imul
cmpb
imul
push
cmpsl
adcb
sbb
mov
lock
adc
in
mov
pop
sbb
stc
out
sub
jp
add
sbb
ret
xor
cmp
adc
test
mov
add
cmpl
test
test
jmp
or
test
and
dec
inc
dec
movsl
sub
repz
adc
add
or
rol
and
or
or
adc
adc
jecxz
or
inc
push
mov
adc
ret
xor
fdivr
and
jne
mov
push
sti
fisubl
orb
pop
fdivrl
xor
mov
add
jnp
add
loope
mov
inc
jg
sbb
arpl
pop
sub
imul
pop
cmpsb
and
mov
pop
movsl
or
in
dec
mov
xchg
push
add
mov
int3
in
js
in
lahf
leave
in
lock
mov
shl
pop
popf
std
and
inc
and
add
dec
jle
in
cmp
cmp
mov
sbb
add
pop
icebp
add
cmp
add
and
std
sarb
mov
imul
sub
sti
jecxz
add
call
sbb
xchg
add
insl
add
fnstcw
js
ljmp
insb
test
shll
adc
test
or
mov
loop
fs
or
nop
jb
add
cmp
sub
xchg
mov
jne
inc
pop
pop
pop
shrb
loopne
add
cwtl
call
in
adc
pop
xchg
div
pop
add
je
cli
cmc
outsb
add
mov
iret
cmpsb
xchg
add
mov
ljmp
repnz
jns
add
mov
mov
leave
xor
pop
or
loope
je
sbb
and
jns
push
adc
push
inc
shll
pop
dec
repnz
mov
in
sub
xor
xchg
add
adc
fcmovbe
mov
push
cltd
bound
mov
cli
mov
cmp
pusha
push
add
nop
lret
mov
pusha
push
xor
xor
add
and
rolb
imul
insl
cmp
movsb
scas
pop
sti
in
decl
mov
xor
or
xorb
mov
or
aas
mov
or
add
adc
or
rcrb
pusha
xchg
sub
dec
push
test
xchg
pop
mov
cltd
loopne
sbb
movsl
adc
add
repnz
xchg
pop
call
rorb
mov
sbb
js
mov
pop
ds
out
xchg
orb
lret
dec
cmpb
lods
or
fldl
ljmp
je
movsl
adc
loope
dec
scas
dec
pushf
mov
push
jae
mov
scas
stos
xchg
outsb
pop
addr16
lcall
xchg
clc
rep
pop
push
clc
fidivrs
loop
push
add
and
repnz
popf
mov
push
daa
imul
add
inc
lods
mov
jmp
insb
add
mov
out
push
sbb
das
inc
imul
pop
add
mov
aam
dec
pop
das
jge
lock
adc
mov
add
leave
gs
adc
fstpt
xor
inc
dec
push
hlt
push
repz
sub
mov
ljmp
mov
cmp
push
add
cmp
cmp
and
nop
xlat
jge
js
add
or
out
lahf
jl
lahf
adc
scas
sbb
push
shlb
out
mov
sub
xchg
outsb
mov
sbb
xchg
enter
lock
lds
aas
cwtl
cmp
cmp
sub
mov
cwtl
les
lret
add
shlb
out
push
jl
cmpsb
fsubl
xor
mov
call
arpl
push
or
cs
add
aas
cmp
add
sub
mov
iret
or
rolb
or
add
fs
pop
sbb
dec
bound
and
mov
push
push
repz
jecxz
or
addr16
idiv
jl
adc
ljmp
jle
pop
das
or
cmpsl
mov
cmp
xchg
pop
and
decl
jl
fwait
add
ret
call
and
js
or
sbb
push
dec
jle
add
movsl
cmpb
dec
in
add
imul
addr16
add
push
pop
cmpb
jge
sbb
adc
daa
add
shrb
or
push
repz
arpl
das
rcll
jnp
jbe
pusha
xchg
pop
outsb
mov
or
bound
lods
test
sbbl
popa
hlt
in
mov
inc
orb
lcall
or
pop
insb
stos
push
cmp
loopne
jp
inc
in
dec
rorl
push
sbb
or
mov
rcr
dec
cli
inc
jne
pop
sbb
jo
mov
inc
fistpll
iret
inc
xchg
stos
sarb
cmp
mov
add
hlt
add
sub
clc
rclb
dec
xchg
or
dec
sub
or
push
and
sarl
cs
or
pop
fstpl
aas
mov
test
mov
inc
jnp
cmp
loopne
mov
inc
js
sbb
ja
shlb
jne
add
jnp
jns
push
push
imul
in
jge
jae
mov
daa
dec
mull
cli
or
rcrb
jge
add
mov
imul
adc
lahf
pop
mov
ret
iret
or
adc
pop
ljmp
js
xor
xor
sbb
and
fbld
sbb
inc
mov
pushw
loope
popl
int
test
jb
sti
test
add
jl
sub
aas
jne
clc
lea
or
push
inc
dec
xchg
mov
es
lahf
adc
jl
aad
mov
gs
inc
ret
int3
scas
add
jb
push
insb
and
mov
int3
sbb
jbe
call
and
loope
lods
sahf
ljmp
shlb
xchg
aad
aaa
add
mov
inc
mov
cmpsl
rclb
push
lods
cmc
inc
jl,pt
add
mov
add
ljmp
js
cld
add
sub
mov
into
dec
xchg
in
test
jg
xor
add
cmc
cmp
add
or
push
sbb
cmp
dec
dec
and
sbb
sub
shlb
inc
clc
push
push
ret
inc
push
mov
ss
add
cmp
test
add
push
and
sub
jo
repnz
adc
xor
dec
inc
aas
adc
fmuls
xlat
add
enter
repz
scas
jmp
add
cmp
dec
fsubr
push
sbb
clc
jp
mov
jg
les
add
pop
dec
mov
push
xchg
add
das
pusha
pushf
fisubrl
fldenv
mov
or
nop
ss
pusha
sbb
es
pop
mov
ljmp
add
inc
add
shlb
insl
pop
push
jge
dec
rclb
dec
lahf
jle
and
in
sbb
mov
clc
jnp
ja
cwtl
incb
nop
test
push
mov
mov
pop
and
add
xor
incl
fwait
xchg
les
adc
lock
cld
add
js
mov
jb
dec
call
pusha
mov
mov
pop
inc
enter
repnz
lods
or
scas
testl
xor
addl
sbb
sub
push
jne
pop
dec
shr
jno
pop
or
test
sti
and
lcall
ds
sbb
jo
xchg
jb
pushf
sub
add
iret
test
insb
fisttpll
imul
cmp
adc
jne
out
dec
sbb
movsb
add
sbb
pop
add
ret
cmp
mov
xchg
psubusw
add
add
xor
icebp
loop
sbb
adc
add
fimull
insb
inc
dec
jp
mov
ret
xlat
arpl
sub
repnz
mov
in
push
cmpsb
add
sub
shrb
lret
push
out
fisttps
jno
cli
outsl
in
sbb
aas
pushf
jg
sbb
jge
add
imul
cmp
popa
loopne
inc
add
cmp
push
adc
and
add
xor
je
aam
andb
dec
imull
dec
daa
mov
stos
inc
xchg
adc
pop
mov
shl
call
push
lods
lahf
out
loop
and
std
add
mov
jg
call
push
insl
and
push
cs
dec
sbb
sti
lret
mov
pop
push
xor
push
mov
mov
dec
popl
dec
jo
or
jmp
pop
gs
divps
cmp
add
jle
daa
push
mov
das
add
in
mov
push
iret
cld
pop
mov
data16
push
adc
add
add
shr
xchg
fadds
dec
push
mov
push
sbb
adc
push
int
js
outsb
clc
pop
jb
add
sbb
fnstcw
insl
lea
aad
add
shlb
sbb
lea
pop
jge
test
xlat
dec
mov
movl
ret
leave
loope
push
pop
cs
jbe
xchg
inc
sub
divl
cld
shr
hlt
adc
mov
add
mov
shll
shlb
inc
cmpxchg
out
and
sbb
cltd
mov
fisubs
add
jmp
sbb
mov
inc
popf
int
jmp
and
mov
dec
aam
dec
cmp
out
int3
push
aas
insb
xchg
pop
imul
fdivrs
jb
jne
setno
addl
push
sbb
dec
mov
rcr
and
pop
xlat
and
ret
sub
jmp
sbb
lcall
fildl
pop
pop
add
pop
push
lods
addr16
or
pop
inc
icebp
sub
adc
sbb
fcmovne
or
and
sub
dec
add
stos
pusha
dec
loope
cmp
int
push
add
inc
enter
dec
sub
popf
sub
nop
es
push
add
rclb
sub
push
mov
add
call
subb
xor
lret
test
cmp
hlt
in
push
pop
add
xor
push
js
pop
pop
cmp
add
or
loope
rcrl
call
mov
sti
push
inc
cmp
push
pop
xlat
xchg
and
shlb
jnp
sbb
add
sti
pop
test
or
loope
dec
sub
sub
ljmp
dec
push
stc
xor
push
lea
rorb
lret
mov
icebp
jno
sbb
cmp
fs
sar
loopne
push
leave
add
mov
pop
test
pop
dec
bound
cmpsb
pop
hlt
jo
aad
cltd
and
push
push
into
aas
jmp
fiadds
lret
push
loopne
stos
mov
push
in
inc
rorl
add
sbb
cmpsb
cmp
sbb
inc
outsl
mov
les
jo
jmp
sub
test
shr
push
sub
mov
ja
leave
sahf
xchg
add
push
push
stc
and
sbb
adc
rorb
aas
mulb
mov
outsb
jge
and
popf
mov
xchg
pop
push
test
or
dec
pop
add
loop
jo
mov
je
cs
jne
mov
lods
je
xchg
adc
insl
fidivrl
mov
or
adc
and
fimull
cmp
fbstp
inc
xchg
and
insb
shrl
pop
or
imul
out
ljmp
sbb
hlt
aam
mov
test
pop
xchg
adc
push
stos
inc
and
xchg
adcb
cmp
sbb
aas
fst
mov
or
and
outsb
hlt
nop
rsqrtps
cmp
or
mov
int3
xor
mov
ljmp
mov
push
xchg
add
inc
icebp
popa
mov
cld
fistpl
rol
leave
push
push
cmp
xor
out
test
stc
inc
sbb
or
add
enter
nop
xchg
xchg
jne
push
dec
add
dec
fisttpll
sub
jl
xor
sbb
sbb
push
cmp
outsb
sbbb
sub
ja
inc
lock
outsb
push
push
inc
outsb
mov
icebp
jbe
sbb
enter
lods
push
xor
sbb
lea
add
or
cmc
jmp
test
or
push
shrb
mov
and
add
data16
dec
jl
add
push
xor
ds
xchg
inc
or
loope
add
rol
sbb
lock
movsl
and
xchg
or
imul
or
loop
xchg
dec
inc
mov
psrlq
adc
mov
jns
add
popf
sahf
inc
xchg
xchg
xor
xchg
cmp
and
xchg
and
mov
out
in
add
out
jbe
dec
jo
jnp
jne
inc
aaa
insl
sbb
aam
test
xor
aas
fcomps
inc
and
aas
xorb
jnp
push
mov
dec
mov
arpl
lcall
push
ljmp
aaa
outsb
xchg
sbb
mov
push
aas
loopne
jp
xor
mov
test
fdivl
mov
iret
cmp
mov
sub
mov
mov
add
mov
sahf
adcl
jo
push
movswl
movb
testl
or
lods
jbe
sahf
adc
mov
lods
jae
adc
in
adc
add
or
sub
mov
inc
xor
and
push
cwtl
xchg
hlt
movl
mov
xchg
std
int3
or
and
push
add
sbb
rcll
and
mov
repnz
and
push
adc
pop
add
loop
mov
test
add
push
xchg
jno
arpl
add
rcrl
nop
enter
call
push
mov
cmp
push
aaa
loopne,pt
in
push
add
adc
push
dec
testb
movl
cmp
fists
and
sub
mov
ficoms
outsl
mov
pop
cmpsb
repnz
sub
pop
lock
pop
out
cmp
mov
xlat
xor
sub
inc
clc
loop
rcrl
mov
sub
test
add
les
inc
lahf
jae
icebp
bound
jo
sbb
mov
aad
cmp
xchg
fcoml
push
inc
and
movsl
sub
push
shlb
lock
mov
pusha
shll
mov
clc
xchg
xor
loop
rcrb
add
sbb
jecxz
mov
inc
pushf
mov
dec
sahf
ljmp
add
adc
in
sbb
push
lret
adc
aam
or
adc
adc
cmc
sbb
push
incb
loope
ljmp
xchg
lret
add
mov
lea
cmp
mov
nop
cwtl
add
jmp
and
les
cmp
shl
sbb
cmpsb
inc
xchg
adc
ja
add
mov
sbb
xchg
nop
loopne
ret
test
push
loope
pop
shlb
add
dec
dec
xchg
push
xor
js
sbb
sub
loopne
mov
or
ljmp
adc
mov
push
mov
stc
mov
int3
outsb
fsubrs
push
pop
mov
test
pop
push
inc
push
cwtl
dec
mov
shrb
push
dec
jnp
sbb
sbb
jbe
mov
or
xor
popa
fucompp
jbe
shlb
fwait
pop
insb
inc
push
jp
pusha
daa
xlat
sub
pop
add
mov
push
ss
loop
test
add
xchg
sub
cmp
xchg
sbb
mov
adc
rclb
push
or
pop
inc
mov
pop
add
jle
add
jp
lea
add
mov
aam
xor
rcll
repnz
push
rcll
add
inc
cli
adc
les
xor
sbb
add
or
in
sahf
xchg
jecxz
push
aam
or
xchg
sub
je
mov
dec
addb
or
or
or
fistpl
pop
ds
and
xor
outsb
adc
mov
and
adc
mov
adc
in
mov
addb
add
push
adc
cmp
jne
aaa
out
mov
mov
repnz
lea
and
add
adc
iret
add
adc
lods
xlat
xchg
popf
loopne
xor
adc
push
lock
mov
mov
mov
pop
jne
js
dec
xlat
add
xchg
test
rcrb
add
outsl
xchg
pusha
pop
arpl
mov
dec
add
jae
mov
adc
insb
fidivrl
mov
fs
jge
leave
mov
and
sbb
xorb
push
leave
movb
lcall
lods
in
dec
add
movb
loope
out
enter
fsts
fldt
loopne
out
sbb
mov
in
or
adc
and
les
jo
sbb
shlb
or
push
adc
adc
jns
movsb
add
jmp
js
or
dec
xchg
mov
cli
fmul
sub
mov
adc
cmp
pop
mov
add
jl
rcrb
inc
in
xchg
jmp
mov
bound
push
stos
rolb
pop
or
das
mov
cmp
sbb
adc
test
mov
pusha
push
int3
adc
push
test
dec
mov
xorl
mov
outsl
sahf
and
imul
loope
add
leave
and
adc
enter
std
cmp
lds
sbb
jge
pop
adc
or
cld
outsb
push
cli
aam
push
bound
test
and
into
xor
or
push
xor
and
negb
lret
scas
mov
add
ret
shlb
rolb
incl
dec
popa
push
lcall
jl
shrl
bound
repnz
cwtl
loop
xor
stos
add
lds
xlat
dec
push
loopne
rclb
or
mov
xorb
mov
outsl
xor
adc
jge
adc
aad
adc
mov
pop
cmp
cwtl
inc
and
inc
inc
lret
cmpsl
xchg
jae
sarb
inc
push
xor
and
lock
mov
push
adcb
add
mov
inc
or
std
rclb
and
fcoml
inc
dec
sarb
inc
rclb
sbb
jge
adc
paddusb
and
roll
mov
fsubrs
and
adc
loop
mov
or
lds
adc
test
fdivrl
push
stos
sar
jge
mov
add
mov
mov
sub
add
push
inc
aam
daa
xchg
push
add
mov
mov
les
fwait
sbb
sahf
lods
jecxz
icebp
pop
and
test
fcmovb
mov
sub
cmp
pop
inc
sti
js
pushf
out
cmpb
mov
mov
push
lret
dec
addl
out
xor
lds
repz
cwtl
call
dec
and
add
in
mov
sbb
rcpps
cmp
xor
dec
nop
dec
add
mov
shl
lods
aam
in
sbb
mov
into
movsb
add
mov
faddl
shrb
add
dec
sbb
add
jo
push
movl
xor
xchg
insl
sti
mov
and
cmp
dec
ds
add
inc
jge
adc
rolb
mov
and
icebp
cmp
xchg
jle
aam
or
or
es
add
dec
std
mov
fidivrl
enter
stos
scas
xchg
pop
int
add
xor
mov
lock
jle
dec
push
fistpl
add
jp
mov
mov
push
aam
rcrb
xchg
fisttps
push
pop
mov
fimuls
pop
test
add
arpl
shlb
and
push
mov
loopne
lret
and
fucomp
inc
jp
fldenv
cld
ljmp
inc
cli
js
mov
mov
add
mov
jg
xchg
fmull
scas
cmp
sub
push
jle
aas
out
mov
sbb
jecxz
mov
xchg
sbb
mov
pop
adc
inc
jg
loopne
mov
add
jge
xchg
inc
sbbl
sbb
mov
popf
dec
nop
pusha
pop
testb
cltd
cmp
mov
bound
es
int3
arpl
xor
add
push
faddl
pusha
jecxz
add
sbb
lock
addr16
nop
cmp
sub
out
and
cwtl
push
dec
out
xchg
add
pusha
imulb
rolb
inc
loopne
adc
popa
add
push
shlb
mov
cmp
loop
push
adc
test
add
xchg
jl
cld
add
mov
add
pop
mov
inc
sub
xchg
cmp
pusha
adc
daa
lcall
add
xor
and
lcall
repz
jb
and
xchg
scas
into
xor
mov
and
leave
adc
add
pop
cwtl
insl
aas
mov
ljmp
into
rcrl
pop
arpl
pop
push
push
mov
add
jl
push
mov
adc
and
adc
and
inc
cmp
clc
push
mov
sbb
and
push
sbb
repnz
sub
add
inc
mov
inc
pop
fadd
into
mov
lock
pop
adc
mov
roll
mov
aad
scas
inc
nop
add
mov
in
add
ror
and
inc
add
add
push
hlt
pop
or
and
movsb
out
push
fbld
adcl
add
push
movl
mov
push
add
call
adc
jl
adc
sub
inc
cmp
inc
add
inc
push
ret
push
test
jmp
xor
jns
cmp
in
dec
popa
sub
fiadds
les
add
mov
sbb
je
cli
pop
dec
fcomip
ret
dec
mov
add
jae
sub
out
cltd
push
lret
sub
insb
jp
add
sbb
mov
push
xor
fsubs
insl
mov
cmp
xchg
xchg
gs
sbb
lahf
inc
fadds
in
mov
arpl
xor
sub
mov
sti
das
adc
test
or
lods
add
add
pop
jne
movsb
xor
popl
cmp
repnz
cld
cmp
inc
cmp
arpl
cmpsl
dec
pusha
push
adc
push
adc
sbb
scas
in
push
mov
xor
xor
outsb
add
or
sub
sbb
repz
daa
adc
rolb
push
add
lock
xchg
xchg
jg
adc
loope
mov
dec
arpl
out
pushf
icebp
push
cmp
loopne
inc
lods
mov
fbld
aas
or
lock
push
mov
xor
push
add
xlat
push
repz
mov
pop
pop
or
pop
push
cld
sub
sub
cmp
push
fsubs
pop
push
jg
or
in
shlb
mov
movsl
and
cs
imul
outsb
and
cmp
addb
int
jl
fcoml
and
xchg
add
insl
dec
mov
cs
cld
movsb
lret
in
lods
xor
aad
test
out
mov
cmp
insl
inc
fdivr
das
xchg
add
and
call
pusha
add
inc
sbb
jnp
jl
mov
push
lock
add
xchg
std
sbb
cwtl
adc
out
mov
or
rorb
jmp
sub
ss
in
jno
or
repz
and
dec
xchg
adc
inc
outsl
out
mov
push
and
add
data16
es
add
push
cmp
and
cmp
mov
mov
and
and
push
and
cmpsl
pop
roll
adc
add
daa
push
add
stos
fiadds
scas
insl
cli
inc
cld
and
sub
cs
mov
jmp
dec
mov
fadds
xor
lock
or
rcll
int3
lods
xor
dec
xor
addb
dec
or
inc
out
roll
add
cmp
push
inc
add
call
notl
sbb
adc
dec
xorb
add
push
fs
ud2
sub
xor
imul
mov
jmp
mov
adc
add
add
xchg
rclb
pop
into
in
lock
or
roll
or
enter
add
or
es
add
jnp
add
insl
or
sub
pop
adc
xor
sbb
leave
movsl
in
repnz
pop
push
cmpps
cmp
mov
lock
cmp
cmp
gs
sbb
and
mov
fldcw
sarb
loopne
dec
je
adc
add
sbb
cmp
mov
sub
or
push
test
pop
punpcklwd
pop
mov
or
add
cmp
and
mov
push
adc
sbb
push
mov
mov
cmc
jp
add
aas
xor
jo
pusha
lods
and
xchg
mov
loopne
jecxz
scas
cltd
and
jp
inc
insl
push
inc
and
cmpsb
cld
mov
rorb
sbb
enter
leave
mov
in
inc
fldlg2
add
in
ljmp
add
push
addb
dec
mov
mov
vpunpckldq
add
pop
adc
cmp
insb
add
push
int
add
stos
jg
scas
sub
ja
dec
sbb
mov
ffree
push
cmp
dec
in
add
mov
push
add
push
call
xor
fs
push
mov
mov
pop
mov
mov
push
xor
push
mov
test
add
push
mov
pop
shll
push
daa
sbb
shrl
add
push
mov
pop
or
fnsave
int3
push
int
popa
in
scas
pop
into
rolb
xchg
mov
je
jnp
in
adc
aaa
mov
push
xchg
add
xchg
add
por
cltd
inc
push
repnz
ss
add
push
cli
outsb
es
inc
mov
mov
fadds
and
adc
sub
mov
add
test
xchg
dec
and
dec
xchg
js
inc
add
mov
and
jle
or
fucomip
or
inc
add
stc
sub
add
nop
and
add
movsb
fldl
cmp
cwtl
insl
imul
add
jno
push
rcll
add
int3
xor
enter
add
imulb
pusha
mov
cwtl
hlt
add
or
dec
mov
sarl
mov
in
test
inc
pop
mov
clc
out
rolb
jne
je
sbb
loopne
pop
lea
mov
test
add
jns
cltd
push
addl
popa
push
dec
mov
sarl
cli
mov
and
pusha
ret
cmp
pop
push
aad
jo
mov
inc
add
push
jne
adc
push
les
fiadds
shl
fsubs
insb
sbb
call
adcb
and
or
push
add
xor
in
sub
xchg
add
bound
push
js
call
xorb
test
andl
sarb
mov
adc
xor
cmp
fdivrs
shll
int3
scas
hlt
jne
add
dec
sbb
leave
push
fcompl
or
out
mov
sub
xor
inc
test
outsb
mov
cmp
mov
loop
dec
add
dec
inc
add
aas
cli
adc
pusha
lds
sbb
pop
and
add
orl
push
ljmp
sbb
or
roll
sub
shrb
aad
cld
loop
sbb
mov
pop
xchg
push
les
and
add
test
push
cmp
jg
mov
dec
mov
mov
cli
add
lods
das
cmc
jo
sub
cwtl
ja
orl
mov
lahf
ss
into
jmp
aas
scas
mov
pop
ret
add
stc
fdivs
mov
add
in
cwtl
or
lods
mov
imul
cmpb
int3
xchg
pop
add
int
loope
test
adc
mov
aaa
inc
add
push
cmp
call
mov
mov
mov
aad
add
out
or
mov
jl
push
add
out
inc
push
jb
mov
mov
addb
in
movsb
sub
shrl
inc
cmp
add
lods
mov
xor
push
and
pop
sub
loop
out
mov
pop
xor
lock
push
lcall
and
loopne
out
movsb
add
jno
loope
add
negl
les
daa
mov
inc
pop
out
aad
sub
add
xchg
and
insb
mov
sub
pop
push
pushf
add
test
roll
ss
and
pop
out
test
or
push
sarb
lock
mov
sbbl
pop
les
cmp
call
jecxz
push
add
and
dec
mov
push
int3
mov
sbb
jle,pt
mov
add
xchg
out
nop
push
push
mov
add
test
sbb
dec
orl
scas
cwtl
sub
sub
pop
aas
icebp
add
dec
popf
jno
and
mov
imul
and
dec
mov
sbb
add
stc
mov
rcrl
lock
out
push
pop
lods
add
addb
add
push
adc
out
add
sbb
ljmp
mov
jle
xlat
xor
mov
lea
mov
pusha
nop
aas
outsb
add
jbe
cmp
inc
xor
andb
out
mov
flds
jb
sub
testb
hlt
or
insl
dec
mov
pop
cmp
std
or
roll
out
push
sbb
and
xor
dec
add
adc
fwait
insb
hlt
mov
and
adc
nop
loop
jg
add
in
inc
sbb
iret
test
jno
xchg
lds
push
mov
add
in
clc
cmp
inc
shr
add
push
aam
loopne
pop
or
add
lret
mov
shll
mov
nop
xrelease
adc
or
roll
sub
inc
in
loop
iret
push
mov
pusha
aam
aas
out
es
cwtl
aaa
lret
movsb
add
xor
nop
and
pop
adc
and
mov
in
frstor
aaa
cmp
push
push
lock
out
fildll
incl
js
insb
add
push
xchg
lds
mov
lods
add
or
mov
ljmp
pop
shlb
repz
sbb
cmp
push
outsl
push
addl
push
sbb
push
xlat
pop
or
call
or
push
fcoml
pusha
or
loope
pop
add
dec
fstpl
add
lcall
cmp
pop
in
pusha
mov
xor
cld
movsl
mov
stos
push
repz
insb
es
xchg
insl
pop
cmp
add
dec
pop
testb
es
or
sbb
xor
mov
and
pop
and
and
das
out
pop
pusha
push
rolb
or
push
xor
dec
out
fisubl
inc
or
adc
je
and
ds
andl
inc
mov
add
int3
jle
add
sub
stos
mov
ss
sahf
and
adc
cmp
dec
mov
bound
add
add
repz
jl
mov
repnz
stc
add
ret
icebp
fmull
nop
pop
cmp
movsl
xchg
test
lods
lret
nop
dec
in
loopne
push
rol
bound
inc
add
out
ja
xor
popa
mov
mov
sub
push
mov
scas
dec
mov
add
add
test
scas
add
rcrl
add
xchg
or
es
add
mov
outsl
lcall
xor
jg
gs
das
pop
roll
shlb
add
out
pusha
cmp
test
push
int3
cli
xor
mov
cmp
inc
pop
test
jns
mov
pop
testb
and
mov
add
jne
test
add
lahf
cwtl
or
add
fimuls
sub
push
sub
adc
add
decl
or
sub
stos
cmpb
clc
ret
mov
add
test
xlat
outsl
add
ljmp
and
pusha
push
pushf
mov
push
arpl
inc
addr16
roll
pop
shr
lods
push
inc
add
sbb
add
add
lret
addl
test
inc
in
or
push
mov
inc
aam
dec
jecxz
mov
pushf
mov
mov
cld
dec
inc
add
lods
leave
and
mov
cwtl
cmp
add
inc
out
mov
sahf
ja
test
mov
pop
movsl
sbb
cltd
rclb
add
dec
xor
mov
loopne
add
fidivrl
sbb
and
inc
les
jb
pop
fnstcw
push
daa
sbb
cmp
cmp
pop
mov
jle
jb
pop
cmpsb
mov
mov
mov
faddl
mov
es
loopne
dec
or
sarl
xor
scas
fldt
add
pop
fstpl
mov
cmc
popf
inc
and
dec
int3
fbstp
ljmp
loopne
add
js
lahf
or
and
fsubl
shrb
add
jns
pop
mov
adc
repz
andb
xor
dec
imul
scas
sub
mov
mov
test
add
in
divb
dec
adc
jno
xchg
inc
test
data16
lds
add
subb
or
icebp
xor
sub
jle
fimuls
cli
xchg
fiaddl
xor
mov
add
insb
lods
fwait
xor
mov
adc
push
add
adc
aaa
jo
fwait
roll
icebp
cmc
cwtl
and
adc
sbb
leave
testl
mov
add
sahf
xchg
imul
adc
out
jb
and
or
add
out
add
jno
popa
add
mov
or
sahf
adc
mov
mov
imul
movsl
pop
mov
add
das
sarb
add
loop
popf
xchg
shll
and
ret
fmuls
fistl
shl
nop
mov
outsl
enter
fmull
stc
pop
aam
xchg
push
sub
jp
popf
roll
dec
push
es
in
adc
add
movsl
aam
ficompl
sub
roll
add
mov
add
sbb
outsl
pop
lds
inc
test
or
cmp
mov
or
sbb
jecxz
mov
push
push
bound
rol
addr16
jns
adc
mov
repnz
les
dec
sahf
bound
lret
mov
cmp
das
xchg
pop
push
push
mov
repnz
sahf
into
mov
out
sbb
sete
adc
mov
jp
xchg
outsl
dec
xor
hlt
mov
int3
add
inc
leave
jb
insb
lds
cmpsb
jmp
and
ret
cld
inc
add
popf
jbe
xorb
ja
imul
pop
sub
jb
or
and
push
rolb
dec
call
cmpl
xor
mov
adc
setb
pop
add
pop
jbe
inc
mov
mov
add
mov
pusha
ret
mov
jno
inc
push
add
js
lahf
jl
jmp
and
mov
inc
mov
xchg
sbb
cwtl
hlt
sbb
add
inc
mov
iret
das
or
adc
dec
imul
pop
addl
mov
scas
xor
ljmp
jb
ret
fsts
cwtl
fisubl
add
mov
mov
mov
and
out
sbb
mov
shlb
imul
mov
call
adc
in
cld
mov
dec
lret
roll
mov
shrl
lret
pusha
mov
out
dec
lret
incl
mov
mov
hlt
outsb
fisttpll
call
scas
inc
add
dec
pop
lds
cmc
je
rcll
mov
dec
sbb
cmpsl
add
adc
sbb
cs
push
xor
mov
lret
fucomi
add
push
mov
pop
mov
cmc
faddl
iret
rolb
jecxz
mov
inc
add
in
cmpsl
cltd
xchg
mov
shlb
or
out
addl
out
mov
loopne
hlt
inc
add
cmp
test
shlb
or
push
or
cld
adc
and
push
push
cmp
shrb
ror
jge
add
xchg
clc
sbb
inc
jns
test
or
add
adc
mov
and
inc
cmp
xor
pop
aam
push
cld
lods
je
or
sbb
pusha
enter
mov
loopne
movsl
incl
pop
xor
add
add
add
mov
inc
mov
and
aaa
testl
lcall
addb
pop
aam
mov
add
orb
mov
ss
clc
adc
andb
enter
pusha
inc
mov
movl
xor
cmp
out
dec
out
scas
loop
imul
daa
push
pop
jno
inc
in
pop
pop
jg
pusha
fucomip
dec
sub
insb
sbb
push
scas
add
jmp
add
sbb
data16
push
dec
add
outsb
mov
dec
add
push
add
bound
in
add
loopne
test
pushl
imul
and
jb
hlt
gs
xor
lds
sbb
pop
dec
les
add
test
mov
mov
lods
popf
sbb
lahf
xor
sarb
addr16
sbbb
mov
ds
adc
mov
mov
jne
add
cmpsl
ss
nop
mov
pop
call
in
cwtl
rolb
or
int3
or
pop
movsl
inc
pop
scas
shlb
mov
add
jmp
std
jl
rol
aam
fistps
add
daa
scas
pop
pop
inc
push
mov
test
movb
push
mov
mulb
mov
movsb
mov
orb
cltd
adc
pop
or
add
jae
leave
cmpsb
lods
cmpsl
in
push
stos
add
xchg
dec
sbb
cmp
out
adc
inc
add
imul
sahf
mov
adc
dec
adc
pop
test
adc
scas
pushf
push
pmulhuw
les
repz
cmp
xor
divl
xor
mov
add
add
add
jbe
aas
dec
add
imul
loop
push
shlb
xchg
jb
pop
cmp
mov
sarb
test
mov
scas
xor
sarb
clts
mov
add
shr
xchg
cmp
xor
add
in
outsb
leave
xor
mov
imul
sub
mov
in
xor
inc
push
ljmp
repz
pop
lret
cmp
iret
jg
fstpt
testb
insb
fistps
cmp
scas
fnstsw
into
outsb
add
xchg
xchg
jge
mov
enter
add
cli
shl
sub
je
add
pop
nop
shll
test
divl
loopne
aad
hlt
ror
sub
pop
cltd
jb
xor
into
pop
insb
mov
movsl
mov
inc
aas
xchg
js,pn
add
fwait
mov
aaa
cwtl
shr
aad
or
clc
add
scas
arpl
loopne
mov
stos
inc
pop
adc
mov
mov
mov
push
mov
pushf
add
fwait
aas
test
scas
sub
sti
loopne
mov
mov
rcrb
orb
dec
cmp
std
mov
aas
enter
push
mov
aas
sbb
mov
add
cwtl
sub
stc
dec
jnp
mov
push
jl
std
orb
pop
into
cmp
or
xor
push
xor
pusha
add
push
repz
scas
js
jno
dec
icebp
and
pop
and
notb
sbb
scas
add
iret
cli
cmp
jp
lret
fldl
dec
stos
xchg
out
sahf
adc
jmp
add
test
mov
add
xchg
jo
push
adc
mov
pop
dec
mov
mov
jge
xchg
or
push
jbe
push
mov
popa
mov
adc
inc
aam
add
pop
je
cld
xchg
pop
daa
add
sbbl
cld
stc
add
pop
shl
inc
add
pop
pop
ss
and
pop
orb
adc
adc
xchg
jg
add
or
flds
push
mov
inc
jg
add
clc
cmpsb
pop
inc
or
sub
mov
add
or
add
imul
dec
ja
sbb
cmpsb
insl
inc
lret
lods
aad
xor
into
mov
pop
lret
cmp
mov
jecxz
aas
pop
add
mov
mov
lods
insb
and
pop
icebp
or
push
inc
filds
dec
pop
inc
add
adcl
inc
es
mull
and
rolb
inc
movsb
add
sbb
lret
xchg
mov
jl
xchg
jge
outsb
add
add
sbb
mov
and
add
aaa
sub
add
imul
cmpsl
sbb
pop
iret
mov
test
push
mov
cmc
xchg
xorb
add
in
inc
out
sbb
lret
add
inc
dec
inc
add
jmp
pop
enter
mov
subb
mov
movsl
aas
adc
adc
jae
push
inc
loop
pop
fisttps
jp
clc
mov
ror
xchg
repnz
mov
mov
add
sub
mov
fdivrl
add
fldl
icebp
add
jb
dec
jge
add
lock
mov
add
not
les
add
or
inc
sbb
dec
pushf
sbb
scas
push
sbb
out
repz
mov
pushf
cmp
jge
adc
adcb
enter
push
and
je
sub
push
add
add
dec
sbb
lret
andps
in
xchg
scas
xchg
add
cmpsl
cmpsb
lret
dec
pop
push
push
xchg
cmp
arpl
push
jecxz
cmp
out
mov
je
sub
test
add
add
es
cmp
sub
sbb
add
pop
pop
push
adc
or
jge
stos
pop
jl
cmp
movsb
dec
or
das
and
fldt
jno
mov
or
scas
mov
jmp
cmp
xor
ss
in
icebp
jae
bswap
add
shlb
push
loop
add
loopne
mov
cmp
cmpb
flds
daa
push
lock
add
mov
movsl
setae
aaa
out
aam
mov
add
imul
cmpsb
jb
sub
add
sbb
jne
out
subl
jge
inc
sub
xor
add
or
push
aas
sub
add
add
and
subl
sbb
jb
fidivrs
sbb
or
cmp
push
daa
int
insl
rcrb
fs
test
test
and
add
sub
sub
int
sbb
add
adc
adc
pop
jl
adc
dec
xchg
mov
loope
pop
push
sarl
sbb
push
enter
movsb
jo
mov
iret
arpl
or
mov
pop
hlt
cmc
pop
push
jle
icebp
or
add
add
out
xchg
dec
xchg
ja
adc
mov
inc
mov
mov
adc
lret
stos
mov
xorb
sub
adc
pop
inc
gs
cmpb
xchg
adc
bound
test
mov
mov
lods
testl
sbb
fiadds
popf
es
inc
sub
pop
inc
rol
pavgb
std
dec
loopne
gs
filds
inc
dec
xor
in
pop
or
xor
in
cmpl
in
mov
lods
shl
pop
jne
push
fs
push
push
or
or
add
mov
or
push
lds
push
inc
fcomi
imul
pop
adc
xchg
and
bnd
ficoms
popf
inc
dec
cmp
pop
cwtl
mov
fadds
push
addb
hlt
push
mov
and
je
push
cmp
into
or
pop
in
add
or
cmp
dec
scas
sbb
leave
jnp
or
cltd
mov
addl
or
rcr
sub
test
sub
lock
fsubrs
sub
test
nop
jae
pushl
shr
call
dec
repz
xchg
dec
push
add
pop
jp
jge
push
mov
xor
repz
sti
add
jmp
das
sub
mov
cwtl
roll
or
inc
adc
ret
add
hlt
outsb
mov
add
fadds
add
jns
gs
enter
add
pop
sbb
mov
lret
outsb
orb
cmp
mov
and
sahf
inc
int3
orb
mov
dec
movsl
hlt
sti
fwait
adc
and
add
mov
xor
lahf
and
inc
popa
ficoms
call
nop
dec
fiaddl
mov
xor
and
fcmovnbe
outsl
scas
and
push
jne
test
xchg
dec
lcall
repz
pusha
sbbl
push
mov
cwtl
mov
sbb
lock
xchg
mov
xchg
inc
mov
add
lods
int
test
pop
adc
jl
dec
nop
add
cmp
inc
dec
push
js
cltd
or
cmp
push
xchg
sahf
adc
jb
sub
add
mov
fwait
adc
mov
add
mov
cmpb
dec
out
cmpsl
or
mov
sti
push
pop
pop
sahf
ja
sysret
in
pushf
add
push
and
mov
add
add
mov
add
jge
lahf
cmp
daa
les
xor
mov
stos
sub
mov
scas
dec
das
sbb
arpl
pop
mov
repnz
cmp
imul
lahf
inc
je
add
out
frstor
shr
xchg
sbb
xlat
push
leave
or
out
outsl
bound
int3
cli
int3
or
clc
cltd
xchg
add
or
pop
lock
imul
inc
lret
fildl
mov
jg
dec
add
dec
mov
mov
pop
adc
fiadds
jl
push
call
push
adc
add
jnp
rolb
movsl
in
adc
mov
add
sbb
hlt
int
add
hlt
xor
cltd
mov
xor
jge
adc
inc
call
roll
adc
sbb
insl
pop
mov
fldenv
icebp
xchg
pop
add
clc
lret
insb
add
push
addr16
je
aaa
inc
dec
ret
dec
int
repz
mov
mov
mov
lcall
es
rolb
mov
xor
jno
fwait
add
lcall
xchg
orb
outsl
dec
mov
xchg
xchg
add
and
adc
add
xor
flds
and
int
add
lcall
cs
and
add
aas
test
sarb
into
fnstcw
mov
add
daa
arpl
xor
add
push
mov
pop
shl
add
aaa
or
pop
push
push
fdivs
imulb
scas
dec
add
sub
and
mov
lret
push
xchg
mov
mov
inc
movsb
mov
jnp
push
xchg
addb
mov
inc
xlat
cmp
enter
mov
adc
xacquire
aam
out
lods
movsb
inc
inc
inc
les
jae
or
das
add
xor
ds
rolb
jbe
ret
jg
rclb
mov
int3
dec
adc
push
inc
mov
and
jns
inc
add
jecxz
jns
dec
les
adc
add
add
add
dec
add
imul
in
mov
push
jne
repnz
fs
imulb
shrl
fadds
enter
stos
mov
cmp
xor
mov
pop
bound
add
jo
jle
ja
std
add
mov
push
rorl
cld
sbb
add
push
push
sbb
adc
sahf
ret
push
adcl
lock
repnz
addb
cmp
fsubrs
test
roll
pop
jno
or
xchg
lds
push
divb
or
or
jns
xor
leave
fisttps
xchg
and
test
adc
cmpl
movsl
daa
or
or
push
inc
imul
jbe,pt
add
lds
lcall
mov
imul
jl
inc
fdivrs
mov
addr16
int
daa
cmp
cwtl
or
fsubr
movsb
or
out
dec
je
cmp
or
loop
push
outsl
clc
repz
xchg
add
sbbl
jle
stc
mov
fldl
add
scas
xchg
add
cmpsb
pop
jg
pushf
in
lock
mov
pop
ss
pop
inc
cs
addb
shlb
loop
adc
aad
mov
int3
adc
popf
clc
mov
push
xor
roll
aas
and
rcrb
dec
mov
stc
add
xchg
and
mov
aas
adc
daa
sarb
into
sbb
adc
cmp
mov
mov
jl
pop
sbb
movsb
mov
pop
std
xchg
inc
cmp
add
subl
adc
dec
repnz
dec
test
cmp
cs
or
mov
fs
lods
sarb
cld
out
pop
xchg
mov
aam
je
dec
lcall
mov
and
cmp
push
stos
mov
xor
adc
sbb
jne
jmp
mov
dec
mov
mov
repz
pop
fcoms
dec
add
das
or
dec
repnz
dec
push
andb
roll
push
inc
mov
push
xor
sbb
ds
cwtl
mov
enter
adc
negl
mov
cmp
stc
sbb
mov
mov
fs
sbbl
mov
jg
stos
push
cmc
mov
add
stc
test
jmp
sahf
das
add
icebp
push
mov
pop
mov
bnd
stc
cmp
rol
into
mov
mov
int
jg
cmc
ds
repz
sub
jns
lret
sti
loop
cmp
popf
xor
add
imul
jns
hlt
add
xchg
test
mov
add
add
xchg
xor
inc
in
fsubp
xor
test
add
loopne
pop
ljmp
outsb
test
xlat
sbb
mov
lret
pop
icebp
jb
mov
test
sub
shll
cltd
fisubl
js
add
lret
xchg
iret
xor
mov
enter
sbb
aas
addr16
stos
ficompl
add
cmp
adc
push
int
jb
mov
xor
nop
cmp
push
add
stc
addr16
and
orb
lret
mov
aam
jg
std
xchg
aad
frstor
adc
pop
add
clc
idivl
sub
shrl
sub
imul
das
lea
sbb
sub
mov
sbb
push
cwtl
xorb
pusha
lret
lds
in
dec
mov
idivb
add
inc
mov
jns
inc
add
std
repnz
xchg
mov
add
call
lahf
fwait
jmp
jno
aam
push
xadd
or
test
cli
out
mov
mov
arpl
clc
pop
xchg
mov
cld
fldenv
push
scas
cmpsl
add
sub
jbe
xchg
dec
addr16
add
sub
adc
cmp
sbb
add
scas
in
paddsb
sub
lret
data16
add
push
lods
mov
pusha
loopne
jne
and
sti
mov
nop
mov
push
jge
pushl
dec
inc
xchg
je
cmp
and
add
adc
dec
leave
shl
rcl
movsb
adc
fs
add
sub
xor
jle
testb
mov
jne
add
mull
add
lahf
arpl
fcoms
mov
aas
punpcklbw
sub
or
cltd
aas
shlb
add
pop
arpl
push
aaa
xor
addb
xchg
mov
lahf
mov
xlat
add
add
repz
dec
add
mov
mov
sub
and
or
mov
dec
and
out
adc
iret
add
add
in
rol
rcr
add
sub
sbb
cmp
lret
adc
or
add
aam
hlt
fsts
out
add
or
es
sub
sub
adc
insb
push
mov
pop
inc
movsb
pop
ljmp
out
mov
cmp
push
pop
mov
sbb
adc
add
cmp
arpl
stc
add
jo
xor
out
add
sbb
jge
adc
add
repnz
test
and
test
outsb
iret
pop
dec
lret
add
das
mov
add
cmp
sbbl
mov
rep
shl
push
push
nop
lods
repnz
fcmovne
push
push
pop
iret
sub
test
xor
fdivrs
js
int
cmp
sbb
mov
xchg
clc
add
aam
dec
pop
pop
loopne
jge
adcb
hlt
add
addr16
imul
sbb
fstps
mov
mov
pusha
ja
cld
push
or
loope
xchg
add
add
push
mov
add
xlat
pusha
and
adc
notb
ja
mov
pop
int3
mov
popf
sahf
inc
call
jae
mov
or
push
andl
push
loopne
or
pop
or
and
dec
idivl
cmpl
cmp
adcb
or
cwtl
push
add
jge
popl
cmp
imul
stos
xchg
sahf
jle
out
bound
orb
es
dec
jl
jbe
popa
mov
js
adc
pop
stc
add
xchg
shr
push
movsl
add
scas
xchg
adc
aam
add
stc
idivb
push
xchg
lcall
mov
sbb
pop
aad
loopne
cmp
cmp
clc
mov
addr16
add
pop
adc
loope
cmp
fidivs
pushf
sbb
popa
pop
pusha
inc
pop
out
add
adc
mov
scas
pop
jp
pop
rolb
add
push
mov
push
push
push
ret
enter
rcll
mov
loop
add
mov
sbb
sti
fstpt
inc
repnz
cmpsl
psubb
sbb
dec
add
mov
mov
xor
or
dec
das
adc
sub
and
mov
add
gs
in
stos
dec
lcall
icebp
add
pop
jno
loope
add
mov
lock
mov
xor
data16
lds
sub
sbb
test
jae
adc
mov
push
mov
sbb
adc
negb
je
mov
jo
pushl
inc
add
push
shrb
add
add
lods
inc
es
mov
add
pop
enter
and
int
cmpsb
inc
mov
add
les
add
xchg
aaa
xor
ja
ficomps
aad
aam
adc
pusha
subl
add
xchg
lahf
mov
call
cmp
shlb
jecxz
subb
or
out
or
leave
add
pop
fdivl
mov
push
add
jle
xchg
add
or
xchg
xor
arpl
pop
and
add
xchg
pop
pop
jmp
add
cmp
add
and
push
dec
cmp
int3
imul
call
add
popa
xchg
test
ret
ret
push
das
and
jb
int3
imull
push
cmp
shl
push
shr
mov
and
mov
jg
xchg
pop
loop,pt
cmp
cmp
xchg
enter
add
or
cwtl
dec
pop
push
nop
add
mov
add
mov
pop
cmp
pushf
loop
jae
fdivl
push
lahf
orb
pop
xchg
jmp
lods
and
inc
push
lock
jne
inc
mov
pusha
xlat
lea
add
popf
sbbl
aaa
inc
xadd
in
mov
xor
add
ss
ror
test
xchg
mov
pop
scas
mov
int
int3
out
mov
add
or
es
insb
aam
pusha
and
popa
xorl
out
ret
test
imul
or
add
rolb
jnp
xchg
sbb
jle
jo
cmp
cld
es
std
mov
push
or
pop
imul
inc
xchg
jne
pusha
xor
fidivrs
stos
roll
jns
xor
xor
push
movsb
frstor
lds
repz
or
sbbl
aaa
mov
push
inc
jnp
out
cmpl
fdivs
pusha
jl
lods
into
and
fimuls
add
xchg
add
es
xchg
dec
add
ret
mov
jmp
pop
repz
daa
add
ss
pop
xchg
pop
add
adc
mov
in
in
add
add
inc
sub
rolb
nop
pop
inc
ret
loopne
or
xor
popa
xchg
pop
add
adc
imul
nop
sbb
outsl
or
ret
add
xor
adc
frstor
cld
mov
dec
stos
je
add
pop
cli
inc
xor
arpl
dec
jns
sbb
pop
mov
outsb
add
insl
xchg
mov
xor
sbb
cld
push
fiadds
cmp
aam
xchg
scas
sti
mov
add
dec
mov
pusha
pushf
mov
dec
insb
add
adc
rolb
mov
aaa
or
aad
clc
cmpl
mov
mov
push
add
add
mov
jae
scas
mov
cmpsb
mov
xor
int
in
xchg
cmp
jns
icebp
addl
jl
inc
mov
sub
add
nopl
add
jb
sbb
xor
push
sbb
iret
push
sbb
add
jae
adc
mov
fimuls
push
call
loop
mov
inc
repnz
outsl
xchg
add
fstpl
js
cmp
add
leave
add
push
add
lea
inc
cmpsb
lret
fstpt
sbb
pop
nop
add
es
jmp
les
xor
addb
add
imul
repz
adc
dec
cmp
jmp
jno
lcall
es
dec
ret
add
mov
loop
cli
xchg
add
sbb
addl
lea
fimuls
insb
sbb
aam
jg
pop
rcpps
adc
sub
and
je
sbb
mov
xor
lock
push
adc
das
xor
pop
jnp
jle
iret
ficoml
shlb
notl
mov
cli
mov
cmp
dec
cmpsb
push
nop
jmp
mov
mov
add
rolb
or
cs
shrl
dec
fistl
or
mov
icebp
faddl
daa
push
pop
fldl
pop
int3
ljmp
sbb
fcomp
mov
sbb
mov
cmp
incl
ror
inc
sbb
sbb
add
cmpsb
rcrb
sbb
adc
inc
clc
bound
and
andl
jo
sub
mov
sbb
push
cli
or
imul
in
stc
add
faddl
in
or
shll
and
mov
std
pop
jp
cmp
clc
xchg
or
adc
jno
mov
inc
add
stos
add
push
repz
sbb
add
mov
dec
sbb
and
cmpb
xlat
mov
fisttpl
ja
sbb
loopne
mov
add
loop
jne
iret
ret
pusha
add
into
add
lret
cmpsl
cwtd
stos
xchg
adc
scas
movsb
cmp
in
xor
pop
sub
out
roll
ljmp
or
mull
mov
cmp
mov
add
cmc
repnz
lcall
lea
or
jae
add
insl
dec
popf
and
lods
sbb
sbb
subb
ret
push
cwtl
jnp
pop
mov
or
mov
hlt
mov
xor
sbb
mov
pop
sbb
mov
xchg
scas
push
inc
or
add
dec
push
pop
and
adc
and
out
push
sbb
sub
clc
lods
xor
icebp
rorb
les
mov
stos
xchg
lahf
add
inc
aas
ret
adc
pause
and
inc
sbb
or
inc
in
adc
xchg
adc
lock
add
ror
aas
imulw
shrb
mov
jae
loop
pop
rcl
adc
sub
lret
pop
mov
adc
test
iret
jp
sbb
popa
pushf
sbb
mov
outsb
cwtl
pusha
aaa
mov
adcb
aaa
fiadds
rclb
pop
mov
jg
push
stos
sub
xchg
add
jmp
push
sti
popl
js
sbb
dec
jo
push
jecxz
push
mov
lock
fdivp
add
dec
cs
sub
loope
js
enter
lock
add
pop
arpl
dec
jge
popa
imul
lock
jns
shrb
ljmp
xchg
in
in
xor
arpl
inc
ljmp
sbb
jo
les
leave
enter
pusha
jle
gs
hlt
sub
ds
pop
push
movsb
push
test
test
and
adcb
test
into
cld
iret
xchg
cmp
sbbb
xchg
mov
outsb
sarb
push
fsubrl
dec
add
lds
mov
nop
idivb
xor
mov
lock
dec
lods
jo
and
push
lahf
pushf
movlhps
fimull
push
cmpsl
xor
ja
mov
in
js
fcompl
outsl
or
xor
sub
andl
and
cld
ds
in
movsb
fnsave
sbb
mov
adc
push
fcomps
push
leave
inc
xchg
flds
call
repnz
cmp
shrb
jnp
arpl
or
mov
sub
popl
inc
mov
fidivl
mov
setns
dec
inc
and
clc
xor
mov
pop
push
lcall
push
mov
push
add
adc
or
and
or
int3
je
stc
movd
js
icebp
in
sub
arpl
das
sbb
push
dec
stos
imul
fsubl
out
mov
xor
sub
or
mov
add
xchg
loop
push
call
outsl
or
add
inc
jmp
scas
mov
icebp
xchg
pop
push
or
mov
dec
push
mov
lret
pop
adc
shlb
test
pop
pop
push
xor
sbb
filds
pop
mov
xor
jg
mov
test
orb
xor
in
xor
push
add
or
shrl
add
jecxz
movsl
add
jns
dec
mov
adc
mov
popa
inc
jle
test
add
mov
add
xor
xor
sahf
out
pop
fldcw
pop
cmpsb
mov
jno
sub
ds
cmpsb
fs
dec
mov
enter
add
inc
rolb
mov
lds
or
push
std
cmp
jg
leave
add
mov
jecxz
repnz
xchg
ficompl
popa
lcall
push
dec
cmp
stos
flds
mov
mov
loopne
xchg
out
clc
push
fstpt
and
rclb
inc
pop
call
sbb
sub
stc
push
mov
popa
mov
or
call
test
cld
adc
add
rol
cmpsl
sub
push
wbinvd
inc
adc
mov
fiadds
int3
pop
cmp
inc
push
mov
aam
xchg
pop
jo
add
fwait
mov
add
fdivrl
xor
mov
add
lret
push
and
mov
rolb
push
mov
aam
outsl
sub
add
mov
cmp
mov
adc
sbb
test
pop
pop
push
mov
mov
add
sbb
data16
rolb
mov
cmpb
dec
cmp
add
roll
clc
inc
rorb
aad
mov
addr16
add
ret
sbb
sub
cwtl
push
insb
xlat
add
xorl
fcmovu
lret
push
and
in
mov
sarl
pushf
mov
sbbl
sbb
inc
add
inc
mov
add
push
or
sarb
push
add
cmp
mov
add
jnp
stos
adc
add
push
pop
lods
inc
sbb
or
mov
dec
push
daa
outsl
add
mov
in
psllw
iret
add
push
add
add
inc
stos
jbe
or
in
mov
push
mov
dec
ret
in
mov
std
pop
dec
inc
xchg
fbld
adc
sub
out
push
mov
inc
icebp
sbb
add
jle
int3
push
adc
sbb
add
inc
cmpsl
push
popf
ficomps
adc
insl
out
dec
xchg
pop
js
add
add
mov
pop
add
jp
pop
cmpl
cmp
inc
add
lods
sti
add
mov
mov
mov
and
sub
jge
pop
cmp
jecxz
fistl
adc
add
inc
push
dec
das
shrb
lds
movsb
jl
andl
sbb
fwait
in
wrmsr
loope
add
dec
aas
shll
mov
stc
xor
stos
sbb
scas
xor
and
pop
dec
icebp
add
push
sahf
mov
pushf
sbb
in
test
std
push
stos
add
inc
mov
sbb
and
enter
popf
loope
xor
push
fiaddl
cmpsb
fists
pop
and
adc
ret
lea
pop
push
add
and
push
mov
add
or
pop
pop
mov
pop
mov
add
jb
cmp
subb
cmc
mov
js
cmpsl
add
pusha
mov
pusha
jg
in
mov
subl
pop
or
mov
cli
sub
mov
push
lcall
es
scas
imul
lds
fstl
and
mov
xchg
jo
leave
aas
push
jo
xor
rolb
sbb
inc
int3
clc
in
mov
jnp
sti
add
in
adc
stos
sbb
in
lahf
int
xchg
jecxz
into
outsl
lret
loopw
test
js
add
pushf
btc
icebp
add
test
pop
add
jl
mov
stos
pop
pusha
inc
pushf
add
mov
push
les
daa
out
sbb
or
inc
or
push
fists
js
outsb
cmp
fucomip
inc
loopne
mov
and
cwtl
pop
push
add
ret
les
add
dec
insb
pop
ljmp
rcll
int3
dec
mov
jae
jg
mov
test
sub
adc
rolb
jl
jge
aad
sarb
or
outsb
dec
lock
les
jp
cli
push
add
or
inc
mov
add
and
in
xor
repz
sarb
dec
push
sub
imul
sahf
pop
test
add
popf
jo
in
add
jb
push
jae
push
add
jg
jecxz
fcom
xor
leave
in
filds
add
bound
cmp
popa
xor
add
dec
mov
pop
add
ret
out
ds
mov
or
add
pop
mov
fsts
adc
xor
adc
in
push
push
dec
inc
int3
adc
and
aaa
adc
sub
dec
sub
icebp
inc
add
fsub
hlt
mov
add
ror
sahf
lret
or
add
or
dec
inc
pusha
add
push
loop
dec
pop
push
out
inc
js
lods
add
xchg
inc
add
or
sbb
push
add
scas
fmul
jle
add
sbb
loope
sbb
xchg
pop
adc
and
cmp
push
imul
rorb
mov
push
add
or
add
nop
jmp
dec
add
int
into
sti
jecxz
add
fdivrp
sbb
xor
mov
repz
call
xor
add
xchg
int3
inc
mov
pushf
add
sbbb
das
push
or
enter
or
mov
out
add
test
fs
xchg
dec
pop
divb
cmp
xor
enter
add
ret
xchg
jae
xor
cld
lret
lret
mov
inc
fs
pop
dec
lds
jl
mov
cmp
and
insb
sub
or
orl
xchg
jae
shrb
mov
dec
add
fwait
inc
and
data16
add
bound
or
cmp
add
mov
pop
cmp
push
mov
add
data16
pushl
fcmovb
add
mov
add
mov
pop
sub
pop
aam
cmpsl
mov
add
psubq
loope
test
add
or
cmp
iret
stos
push
icebp
aaa
into
shrb
out
stc
add
fcoml
jns
add
mov
pop
mov
iret
sub
mov
inc
dec
icebp
jmp
cwtl
lahf
loope
test
add
push
or
fdivp
iret
xchg
cmp
scas
icebp
adc
jnp
movsb
loope
push
cs
sahf
add
jecxz
mov
xor
add
stos
imull
ljmp
int3
loopne
inc
cmp
and
sbb
pop
pusha
inc
rorb
mov
test
les
mov
fmul
ljmp
or
add
pop
cli
addr16
pop
add
jbe
shrb
inc
out
testl
scas
ret
data16
lcall
push
add
in
repnz
xchg
jae
and
cmp
roll
stc
aaa
cmovg
xor
addb
mov
lret
pushf
scas
adc
andb
pop
dec
loop
mov
jp
xchg
cmp
test
hlt
in
or
or
xchg
movsb
addb
add
ret
xchg
mov
je
mov
pop
mov
outsl
mov
jae
add
xchg
ret
mov
es
in
add
les
scas
xor
inc
jno
add
push
test
cmpl
xchg
fdivl
lret
lea
pusha
adcb
xor
mov
inc
inc
dec
dec
mov
xor
mov
lea
or
leave
nop
mov
or
sarl
lds
clc
lock
add
popa
sub
mov
call
xchg
sub
je
cli
or
dec
movsb
and
jae
mov
sub
cmpb
inc
jg
insl
mov
adc
js
inc
sbb
jg
dec
vcvtudq2pd
rcl
mov
lret
movsb
icebp
pop
sub
mov
jl
and
push
mov
add
mov
test
cmp
clc
push
add
in
push
bound
or
fs
ljmp
add
not
add
aam
add
and
adc
add
add
push
sbb
adc
fmuls
push
adc
jle
mov
sbbl
jle
cmp
sahf
gs
lods
jne
loopne
cmp
sbb
adc
clc
ret
adc
add
jl
jo
cltd
ss
or
inc
push
add
mov
adc
nop
xchg
sarb
dec
add
sub
push
outsb
mov
rolb
dec
jae
loope
inc
dec
cmp
mov
clc
div
add
addb
mov
mov
mov
fs
jge
mov
xchg
or
movsl
add
rclb
push
and
cltd
leave
mov
mov
stos
mov
out
mov
ljmp
cmp
arpl
inc
lret
mov
mov
loope
in
mov
insl
xlat
fsubs
add
inc
int3
fistpll
daa
add
mov
scas
mov
ja
add
les
repnz
or
sti
test
pop
ds
jmp
loope
cmpsl
xchg
in
outsb
shr
orb
sub
stos
jmp
cmp
add
mov
dec
sub
mov
push
xor
insb
add
cmp
inc
cs
js
add
jae
inc
pop
cmp
mov
mov
bound
cwtl
push
loop
add
movsl
push
push
xor
adc
mov
mov
cmp
lret
push
ja
ficoms
ds
jbe
pusha
push
das
add
cltd
mov
les
dec
or
push
adc
repz
inc
mov
mov
jg
add
in
ror
pop
cld
daa
scas
add
and
movzwl
jnp
inc
add
loope
lret
jae
add
outsb
xor
movsl
push
jle
add
jp
sbb
nop
test
outsl
roll
loopne
ljmp
push
sbb
jae,pt
and
xorb
cmp
cli
cmp
push
adc
nop
add
ja
cmpb
rolb
dec
xchg
push
mov
add
lahf
sbb
inc
push
int
mov
cmp
mov
loope
sbb
movsb
pop
hlt
adc
inc
push
xchg
fistps
leave
mov
push
loopne
test
insl
stos
mov
jbe
sbb
xor
and
ja
popl
iret
push
lcall
xchg
out
iret
xchg
push
mov
xor
mov
fucomp
mov
movsb
adcl
or
sub
fdivs
call
mov
lcall
inc
pop
cmpsl
add
jnp
movsb
mov
and
dec
rol
add
xchg
dec
lahf
add
mov
jp
lcall
sbb
add
mov
das
pop
test
and
outsl
add
ljmp
add
xlat
loop
sti
dec
repz
mov
adc
sub
adc
clc
filds
mov
repnz
nop
or
xor
adc
and
mov
leave
insl
push
test
xchg
cmpb
mov
les
add
aam
lret
je
push
aas
inc
pop
loopne
fmull
mov
xchg
jle
lret
jnp
cmp
inc
cmpsl
test
stc
pop
add
aaa
js
mulb
loope
push
sar
jg
andb
jge
cmp
dec
cmc
lock
sub
pop
test
add
outsb
cld
jbe
pusha
sbb
add
inc
push
mov
sti
add
mov
xor
mov
cs
dec
push
sahf
xor
imul
insb
push
add
out
and
pop
cmp
dec
aas
test
ret
mov
inc
movsl
nop
xchg
cli
add
insl
mov
add
jecxz
sahf
fisubrl
into
add
inc
jbe
push
dec
rorl
pushf
mov
xchg
sub
adc
mov
adc
aas
popf
int3
dec
nopl
cmpb
inc
xor
out
ja
pop
or
jmp
je
adc
sub
sbbb
lret
jno
adc
jnp
push
lcall
testb
loopne
or
sbb
bnd
pushf
pushf
cmp
daa
incl
jno
mov
roll
fst
and
mov
pop
xchg
fwait
push
jge
add
shll
call
xor
adc
push
hlt
enter
inc
adc
mov
and
out
call
mov
push
mov
sub
mov
ss
test
ds
ljmp
add
and
es
adc
add
rclb
sbb
and
mov
mov
test
je
jbe
stos
xchg
or
test
xor
adc
insl
cld
into
out
push
in
cld
ret
jle
push
or
adc
mov
or
jmp
rclb
xchg
outsl
pusha
xorb
dec
cmp
scas
mov
xorb
rolb
pop
sub
adc
or
mov
add
pusha
scas
or
inc
cmp
or
mov
out
je
iret
dec
push
add
popf
jo
loopne
and
inc
cmp
pop
xchg
jg
jns
mov
seto
add
xor
cmc
daa
imul
push
add
fistpl
lods
mov
add
cmp
and
loopne
out
add
scas
mov
inc
test
pop
lahf
sub
xor
or
in
push
add
mov
shlb
inc
and
testb
fmuls
int3
push
aas
xor
sbb
xchg
lds
adcb
and
lret
ret
movsl
imul
xchg
sub
jns
inc
dec
cmc
mov
push
ss
lods
add
ds
or
adc
mulb
mov
clc
adc
adc
dec
xor
lock
pop
cmc
inc
out
jnp
test
mov
sub
jnp
ljmp
xor
inc
add
push
pop
add
adc
mov
imul
fisttpll
inc
xor
enter
iret
pop
inc
test
arpl
fstl
xchg
outsl
cmp
mov
in
add
std
xlat
add
add
xchg
leave
or
jb
add
ss
inc
enter
sbb
adc
mov
scas
adc
add
xchg
mov
and
test
lds
pusha
lods
rcll
dec
jne
jp
mov
nop
addb
adc
insb
data16
fmulp
loopne
ds
add
mov
cmpsl
mov
add
ficomps
dec
add
xor
in
add
fcompl
outsb
aam
push
mov
adc
jnp
mov
push
in
lods
dec
push
mov
and
add
push
test
mov
mov
into
js
pop
or
jmp
jo
ret
pop
mov
jecxz
mov
ljmp
cwtl
xor
lock
sahf
sub
push
mov
test
movsl
sbb
nop
lods
ss
rol
adc
sub
push
jb
cmpsb
inc
stos
fsubrs
hlt
fisubs
add
sub
mov
sub
jge
int
adc
push
pop
xchg
mov
aam
add
or
sub
dec
add
cmpsb
in
cmp
cmp
setns
jmp
and
mov
mov
mov
push
mov
fistl
lea
inc
and
rclb
mov
dec
xor
mov
inc
mov
inc
lret
or
jmp
mov
add
fcmovne
jo
pop
fcom
adc
int3
add
bound
sbb
cmpsl
hlt
pop
cmp
mov
and
pop
ror
ljmp
jl
bound
and
add
js
sub
mov
inc
cs
test
jge
in
in
pop
out
fnstenv
in
add
push
sub
mov
inc
into
loopne
cmp
xlat
jge
and
add
lret
iret
pop
sbb
xchg
mov
cmp
shlb
outsl
add
popf
add
int3
leave
mov
xor
rclb
add
outsb
repnz
inc
test
add
repz
and
out
mov
sub
push
mov
add
and
sbb
les
add
getsec
aas
int3
lock
adc
enter
or
xor
mov
pusha
arpl
lret
fstpt
push
daa
push
jle
pop
cmpsb
scas
add
lods
mov
jne
cwtl
in
mov
sbb
jmp
fsubs
mov
and
push
fcmove
and
xor
add
xchg
stos
in
paddusw
push
cltd
cmp
stos
bound
and
loop
dec
mov
insl
jbe
repz
cmp
in
push
sub
add
out
lds
sahf
inc
add
pop
or
ds
xor
sar
repz
lcall
or
mov
dec
add
lea
or
add
arpl
stos
adc
push
loop
adc
push
dec
in
cmpsl
pop
add
jne
gs
adc
out
push
int
sub
mov
daa
adc
and
add
pop
ljmp
cmp
dec
and
or
test
pusha
inc
es
jne
add
mov
adc
imul
js
sbb
inc
cmp
iret
into
nop
ss
in
es
add
leave
stc
data16
push
mov
popf
in
add
out
push
out
jne
call
cmp
or
adc
dec
aas
shlb
add
arpl
add
adc
idivb
lcall
push
xchg
movsl
aad
rcrb
cmp
adc
test
sbb
inc
push
insb
add
or
xor
and
in
negb
push
loop
movb
sti
add
sbb
ret
lock
push
adc
adc
call
pusha
or
xchg
test
sub
mov
movb
push
ret
outsl
imul
or
or
jle
xchg
jmp
lock
pop
add
or
aas
mov
jmp
fadd
pop
adc
stos
bound
pusha
inc
mov
mov
rcrl
add
mov
loop
pop
inc
jle
add
xchg
les
mov
push
add
cld
rol
nop
cmp
cmpb
aad
ret
push
ret
xchg
xor
jp
sub
push
ljmp
movsl
add
imul
sub
mov
ret
or
xor
lods
icebp
fiaddl
dec
adc
repz
cwtl
pushf
call
clc
lcall
sbbl
inc
movsb
test
pushf
inc
cmp
daa
inc
hlt
enter
add
mov
add
inc
or
push
pop
cld
jbe
sbb
addl
loope
and
stc
ror
out
mov
add
adc
in
sbb
push
pop
pusha
push
xchg
and
xor
cld
add
jnp
loop
ret
cwtl
sti
rolb
xchg
cmp
xor
push
in
xchg
pop
add
stos
sti
lcall
jns
popf
add
std
dec
pop
rclb
or
adc
cmp
add
sti
adc
jp
mov
ret
xchg
pop
popf
out
test
add
cmp
lret
cld
loopne
faddl
mov
add
xlat
push
ja
aam
int3
add
and
add
call
aaa
icebp
arpl
jo
add
jl
ret
lock
into
out
xchg
insl
fwait
cwtl
aam
adc
inc
sahf
sub
sbb
in
inc
das
jns
mov
sub
pushf
add
rolb
pusha
sbb
adc
test
mov
or
add
repz
jne
lock
jo
add
fcoml
jbe
pop
pop
sub
pushf
leave
repz
jecxz
add
cwtl
cmc
add
dec
xorb
cli
mov
dec
test
xor
faddl
mov
test
add
inc
adc
int3
cs
lea
repnz
add
push
cmpsl
push
mov
cld
in
cmp
inc
je
clc
out
pusha
sbb
pop
mov
les
mov
testl
repnz
mov
in
insl
ljmp
jl
push
mov
fsubrs
jo
roll
lods
sbb
nop
inc
or
adc
add
jmp
lahf
sbb
xchg
jle
shlb
xor
add
aaa
cmp
xchg
add
adc
add
rcl
xor
xchg
mov
mov
js
mov
nop
test
shrb
or
xchg
in
rorl
push
data16
stos
adc
pop
add
fdivrl
or
dec
nop
xchg
pushf
or
pop
push
fstpl
lcall
arpl
push
mov
cmpsb
loopne
jg
adc
in
sub
mov
nop
sub
adc
fldl
jo
dec
test
jns
cmp
lds
in
add
std
ss
mov
dec
fs
cmpsb
xor
sbb
sbb
testl
push
xor
cmp
fistps
and
and
movsb
mov
inc
push
dec
adc
sbb
bound
dec
jmp
push
sbb
mov
dec
add
xchg
lods
mov
les
stos
mov
sbbb
mov
in
mov
or
rep
aaa
mov
add
mov
fwait
add
jno
out
enter
add
inc
popa
pop
je,pt
orb
inc
dec
dec
fadds
sub
push
in
mov
and
cltd
subb
xchg
add
dec
push
aaa
out
add
jecxz
repnz
dec
in
fwait
xchg
cmp
inc
jo
jmp
lods
xor
pop
cmp
xchg
mov
and
test
dec
rol
repz
or
sbb
or
cwtl
pop
jb
or
arpl
and
xor
jne
sbb
stos
lahf
fildl
and
out
aam
or
add
mov
imul
mov
sbb
inc
in
pop
aam
xlat
cmp
stc
orl
or
and
add
dec
mov
or
ficompl
cli
pop
mov
mov
pop
loop
rolb
sub
add
dec
fdivrs
cmp
lods
cmp
pop
add
or
pop
xor
mov
ss
mov
addb
add
inc
sbb
test
and
roll
fmull
mov
add
sbb
mov
incb
subl
xor
outsb
and
ja
inc
outsl
out
hlt
popa
and
sbb
fidivs
xor
loopne
jae
sbbb
cmc
adc
dec
je
jmp
add
sub
cmp
loopne
add
push
pop
gs
rcl
sbb
es
arpl
enter
add
lret
in
sub
into
loopne
cmp
rolb
pop
shll
jl
aaa
cmp
xchg
lods
bound
pop
mov
sahf
std
pop
jbe
mov
stos
add
add
push
lds
scas
add
outsb
mov
jne
push
sbb
cmp
dec
dec
jae
pop
divb
insb
jge
cmc
test
call
and
add
cmpsl
popf
fildl
and
sub
ss
add
add
sub
xor
push
xchg
push
fsubs
pusha
in
pusha
mov
push
xchg
test
or
enter
add
add
push
mov
mov
or
insb
push
sub
add
iret
mov
js
push
xor
add
inc
loopne
push
scas
scas
xchg
cs
or
and
add
aaa
mov
mov
jo
pop
mov
push
push
pushf
nop
or
aad
sub
jg
cmp
sbb
add
cli
dec
sbb
xor
fdivrp
add
mov
or
mov
add
sub
xchg
sbb
mov
add
in
sbb
test
lret
pop
movsl
cltd
call
xlat
cmp
rorb
sbb
pop
mov
and
inc
and
xchg
cmp
insb
xor
xchg
repnz
jg
sub
mov
mov
xchg
sbb
xor
xchg
inc
dec
shrl
add
loopne
shrb
cmpsl
pop
repz
jecxz
int
cmpl
push
or
sub
mov
test
sub
out
push
repz
sahf
cmp
mov
mov
xorl
add
out
rcrl
sub
popa
imul
leave
jnp
icebp
in
mov
test
inc
adcb
add
rolb
sub
cwtl
push
add
xchg
pushf
test
cmp
mov
jb
add
push
ja
rolb
or
and
mov
cmpsb
adc
addl
and
dec
sbb
int3
jae
mov
push
iret
pop
stos
in
rorb
lods
add
jl
dec
loopne
in
fcomps
sub
rorb
fnstenv
mov
sbb
xchg
adc
dec
mov
or
add
adc
sub
adc
shrb
rcl
and
inc
cmp
xor
mov
jo
cmp
and
mov
sti
call
int
sub
push
push
mov
cli
ds
cmp
jmp
cmp
fadds
lods
loopne
add
xchg
jge
jnp
dec
dec
add
arpl
fmull
xchg
rcrl
jns
in
in
cli
sbb
not
jge
xchg
adc
rolb
andb
add
fisubs
fadds
pop
pop
pop
das
arpl
push
inc
lock
pop
jb
xchg
lods
aam
into
dec
dec
cmp
xchg
in
test
and
or
or
sarl
pop
push
sbb
test
sub
jp
movsb
in
in
shll
xor
cmp
mov
xorb
decb
xchg
mov
sub
push
adc
daa
into
push
mov
js
or
xchg
dec
std
enter
roll
push
dec
lcall
dec
jnp
and
xor
scas
xchg
sbb
xchg
out
xor
adc
cmp
add
push
add
nop
mov
sbb
add
test
adc
stos
add
xchg
les
add
insl
cmp
pusha
mov
pop
pusha
loope
mov
jne
or
mov
or
mov
inc
test
cmp
fcomi
cld
mov
mov
or
cmpsl
and
rol
test
pop
sbbl
mov
inc
adc
out
mov
int
dec
mov
sahf
lods
pop
add
push
negb
cltd
jbe
add
movsl
in
jle
mov
cli
dec
int3
test
and
mov
and
inc
shll
sub
loope
push
add
mov
fiadds
cmp
jae
ret
add
scas
je
mov
jae
cwtl
jg
sti
shl
out
or
cmpsl
lret
jecxz
repnz
stos
dec
jle
in
lahf
insl
fiadds
and
mov
sbb
cmp
xchg
add
xor
sar
pusha
pusha
sub
adc
push
jo
andl
test
xorb
sub
cmpsb
lret
or
add
cmp
shlb
xchg
or
xor
pushf
test
jp
lret
push
sub
and
xchg
mov
jp
adc
pushf
pusha
jns
mov
mov
push
loopne
ds
mov
fs
push
mov
mov
and
add
push
push
les
jp
dec
loopne
sti
sahf
je
add
ret
xor
ds
adc
ja
xor
int3
jg
loopne
hlt
mov
loope
ljmp
jne
outsl
add
imul
jo
sti
jecxz
loope
add
mov
jae
pop
rclb
cmc
rolb
clc
cmp
push
fdivrs
cmp
shrl
xor
or
and
add
and
add
mov
arpl
cmp
fnsave
xchg
rcrb
dec
dec
or
aaa
ret
xchg
jle
iret
xor
aad
pop
sub
add
movsb
test
gs
add
std
push
cmp
pusha
xchg
scas
cmpsb
add
push
and
and
roll
prefetch
xchg
loopne
dec
push
push
add
mov
cwtl
inc
cld
scas
add
ud0
add
dec
sti
repz
fs
pusha
dec
sub
stos
mov
adc
addr16
and
movb
add
fs
mov
xor
mov
rolb
push
sub
sbb
xchg
add
aad
mov
int
add
xchg
lods
jns
mov
es
add
mov
lret
adc
push
cmp
dec
incb
xchg
push
sbb
and
fadds
mov
ja
inc
mov
add
imul
cld
xor
lods
into
add
outsl
scas
out
pop
inc
mov
adc
jge
add
mov
pop
add
rol
jmp
push
adc
pop
movl
push
fstpl
push
iret
in
subl
mov
pop
repnz
pop
sbbb
movlhps
bound
add
jbe
data16
mov
add
js
adc
or
xchg
adc
pop
aas
jl
sti
loop
fiadds
movb
popa
scas
sub
fdiv
clc
cli
mov
jne
xchg
dec
shl
loope
pop
cld
jmp
add
imul
rolb
jns
jg
add
ljmp
sbb
loop
popa
add
push
mov
js
add
jp
xchg
ret
mov
int
stos
mov
lock
call
xchg
mov
mov
or
dec
out
stos
into
loopne
xchg
fstps
jp
mov
mov
xor
lock
subb
cmp
fisubrs
call
in
pop
sbb
int3
add
rcll
subl
pop
mov
test
inc
mov
jecxz
nop
andb
or
or
dec
adcb
adc
and
icebp
sbbl
mov
adc
add
cmp
scas
inc
fwait
nop
jp
push
mov
loope
stos
xor
mov
mov
aad
add
lret
test
sbb
xchg
out
xor
mov
pop
pop
xchg
iret
iret
cmp
inc
push
inc
cltd
js
jo
test
popl
nop
loopne
push
adc
push
gs
inc
rol
pop
fnsave
ljmp
adc
and
stc
fsubrs
adc
sbbl
faddl
fdivl
add
xchg
push
cmc
and
lods
mov
scas
fsubrs
push
jge
clc
add
pop
mov
fnop
daa
lock
mov
fidivrs
shrb
xchg
rolb
rorl
mov
rol
or
bswap
popa
push
cwtl
xorl
add
das
jle
jl
pop
or
xchg
imul
sbb
adc
sub
cmp
and
inc
pop
je
add
int3
dec
jno
add
add
lret
add
pop
orl
stos
or
popa
arpl
mov
fdivr
jmp
loopne
mov
xchg
insl
cs
jbe
sbb
and
sub
add
dec
sbb
aaa
jb
js
mov
jge
test
add
mov
ret
shll
and
sbb
insl
push
mulb
xchg
sarb
mov
dec
xorb
inc
xor
dec
test
call
inc
pop
cmp
adc
insl
es
or
jno
ljmp
add
inc
loopne
arpl
mov
leave
add
int3
adc
sub
inc
add
xchg
sarb
jg
rolb
loopne
sbb
push
mov
mov
sbb
aas
cld
sar
shrb
dec
leave
push
adc
add
xchg
push
pop
aam
and
add
cmp
lret
fiadds
bound
outsb
loope
sub
lods
dec
sbb
cmpsl
add
add
push
push
xor
mov
lock
mov
mov
or
push
cmp
xchg
lret
dec
add
stc
ss
rcrb
push
add
adc
pop
jne
sbb
mov
sbb
out
jns
les
sub
inc
xlat
lods
ret
jnp
mov
js
cmpsl
add
addl
out
and
iret
fnstsw
and
mov
inc
add
xor
dec
adcb
sub
add
mov
loop
je
cmp
add
cmp
dec
pop
fdivrp
add
js
jmp
xchg
fwait
sbb
or
testb
xor
iret
das
push
in
sti
daa
mov
scas
ds
push
shl
sbb
call
and
dec
jmp
adc
pusha
mov
cmpsl
adc
pop
add
cmp
xchg
es
cmp
arpl
movsb
cmp
sub
ret
mov
out
xchg
std
inc
fcoml
xchg
sarb
mov
fnstenv
cmp
mov
cmp
pop
dec
je
iret
clc
xchg
cmp
and
push
jbe
jmp
adc
and
mov
stc
jno
fstp
andb
lret
rcl
pop
testb
ret
sub
add
cld
mov
jl
sub
and
add
jmp
inc
push
ficoml
inc
sbb
cwtl
sbb
push
and
mov
and
dec
nop
into
or
fistpl
out
dec
and
add
inc
in
pushf
and
inc
pop
add
adc
mov
popa
cmpsb
push
sbb
dec
pop
cmp
aaa
lods
cmp
fidivrs
hlt
add
cld
mov
sub
popa
cmp
mov
push
out
fcmovne
pusha
std
rolb
adc
aaa
imul
lcall
filds
cmovp
mov
mov
aaa
out
xorl
adc
mov
mov
rolb
add
xchg
test
sbb
or
sbb
int3
add
cmpsl
pop
add
xchg
push
and
in
int3
sbb
rclb
jbe
sbb
mov
sbb
mov
rolb
ficoms
mov
sahf
std
cld
sub
add
jnp
stos
lret
xchg
shlb
pop
dec
movsl
add
push
inc
cmp
inc
pop
fimuls
and
loope
sub
add
ja
scas
mov
sub
dec
sub
xchg
and
cmpsl
fiaddl
xchg
lret
aaa
mov
test
dec
fistpl
xor
sti
cs
push
int3
inc
adc
push
jb
test
in
addl
mov
or
push
mov
mov
dec
stc
inc
add
aam
ja
cli
lds
das
xor
cwtl
andl
daa
enter
sbb
pop
adc
lock
sub
hlt
jne
dec
push
mov
adcl
or
shlb
jae
sbb
sahf
icebp
pop
cmc
add
and
or
push
xchg
or
cmpsb
jmp
addb
mov
add
out
jne
xchg
call
mov
add
stos
icebp
loop
das
jle
push
sti
cld
inc
in
mov
pop
ret
popa
movb
cmpsl
xchg
mov
mov
inc
mov
pop
or
je
enter
cmp
pop
inc
loopne,pn
add
xchg
mov
sbb
xor
mov
movsl
push
and
das
pop
iret
fninit
inc
mov
fiadds
sbb
aaa
sub
pop
xchg
jno
cld
jae
jl
or
cwtl
into
fsubrl
idivl
lret
sub
push
inc
les
sub
jmp
dec
cmpsl
out
sbb
fbld
incb
int3
push
xchg
or
add
aad
jno
adc
in
push
sbb
lcall
scas
add
sub
or
mov
sub
enter
mov
jle
or
or
add
addr16
mov
or
cmpb
int3
jnp
mov
cmp
mov
pop
mov
inc
repz
or
push
add
xor
outsl
fnsave
test
mov
cmp
pop
sbb
adc
sub
add
fldcw
cmc
xor
or
and
xor
sahf
inc
and
mov
frstpm(287
into
rcrl
icebp
mov
or
mov
or
subl
rcr
loopne
and
je
adc
fcmovb
rdmsr
mov
xor
dec
cmp
fcom
xchg
mov
jns
sbb
add
cmp
and
subb
and
cs
fs
faddl
insb
inc
jo
adc
adc
inc
push
inc
mov
or
std
hlt
mov
pushf
and
inc
push
and
fwait
in
dec
js
cmp
or
and
add
xchg
das
cmp
xor
and
stc
or
mov
mov
cmp
sarl
adc
jb
and
lret
push
orb
arpl
fistl
fstpl
or
icebp
test
test
leave
sti
loop
test
mov
pop
and
push
in
dec
and
lret
push
aam
orl
pop
or
inc
sti
jp
add
test
fmul
cmp
ljmp
sbb
aaa
inc
add
cmpsb
std
mov
pushf
lret
jnp
test
enter
repz
dec
add
pop
jnp
xor
xchg
xor
push
fwait
pop
push
stc
push
push
test
xchg
lods
pushf
sti
in
pusha
xor
js
jecxz
add
test
mov
in
pusha
mov
add
cmp
jg
pop
jnp
add
clc
xchg
fwait
sub
sbb
xchg
fiadds
push
mov
int3
push
mov
push
pop
std
lock
popa
xchg
bound
icebp
xchg
fimull
add
xlat
inc
sub
or
lret
test
loopne
or
adc
dec
mov
je
cmp
call
dec
loop
adc
jmp
and
mov
xchg
sbb
inc
clc
push
xor
inc
add
mov
mov
in
inc
pop
inc
in
xchg
outsl
loopne
andl
call
dec
mov
stc
inc
mov
pushf
in
leave
cmc
mov
cmp
shlb
clc
dec
cmp
je
xor
pop
sub
repnz
sub
popa
mov
xor
insb
adc
dec
push
out
pop
or
adc
nop
inc
pop
dec
repz
clc
jb
inc
aam
push
rcrb
mov
adc
dec
xchg
cmp
xchg
pop
mov
xor
xor
xchg
into
repz
mov
push
fdivl
push
and
call
sti
push
fsubs
mov
inc
add
xchg
test
add
jge
fwait
add
fbstp
xchg
les
shll
or
enter
inc
fistl
imul
cmpsl
push
or
adc
leave
daa
adc
adc
xchg
stos
or
adc
mov
pop
sbb
loope
mov
dec
arpl
pop
inc
in
sbbl
outsl
stos
adc
xchg
sbb
push
push
loopne
adc
sub
mov
dec
int
sbb
imul
pusha
mov
add
scas
dec
jns
gs
pop
inc
out
in
aas
jmp
pusha
mov
test
mov
adc
insl
in
movsl
xchg
cld
xchg
mov
lcall
cmp
call
mov
rorb
inc
subl
jae
push
popa
cmp
out
add
xchg
dec
or
int3
xor
lock
test
cmp
mov
popf
push
lahf
xchg
add
push
pop
inc
push
ret
pusha
mov
call
inc
arpl
ret
in
push
or
or
sbb
lcall
pop
jns
mov
fwait
and
push
add
scas
loope
inc
add
in
jge
int3
jno
insb
or
push
jl
pop
adc
ret
daa
pop
add
push
add
rcrb
jns
cmpsl
js
and
mov
mov
or
sti
xor
and
mov
leave
cmpsl
mov
adc
lcall
push
add
and
in
push
mov
scas
add
add
fs
add
nop
int
fcom
cld
push
inc
push
and
add
add
push
dec
stc
add
dec
add
outsb
into
test
mov
loop
push
push
pop
es
shrl
add
ret
xchg
sub
lea
sarl
dec
jno
adc
xor
hlt
stos
xchg
add
push
imul
push
rclb
cmp
adc
and
push
ds
imul
mov
and
pusha
arpl
popa
xchg
inc
add
neg
iret
inc
dec
ljmp
xchg
nop
pop
lea
mov
frstor
mov
adc
inc
sbb
mov
andb
test
in
xchg
add
loop
pusha
add
xchg
push
inc
in
inc
and
and
les
xor
orb
mov
push
and
jmp
sbb
dec
std
inc
aad
mov
into
or
mov
mov
dec
cld
cli
cltd
add
fwait
sub
leave
and
mov
cmp
movsb
mov
hlt
pop
cld
mov
push
lock
mov
add
pop
pop
mov
inc
lcall
sbb
movsb
adc
jmp
jae
add
xor
test
jmp
push
inc
xor
mov
pusha
shl
jbe
add
xchg
mov
test
jno
jb
pop
fildl
rcl
push
fcompl
jge
repz
cwtl
jecxz
cs
add
int
push
or
and
cmp
xor
cmp
adc
lcall
andl
cmc
sarb
and
sbb
add
jge
xlat
dec
flds
push
pop
sarb
adc
fildl
mov
push
pusha
pusha
iret
dec
adc
jb
int3
pop
and
add
pushf
add
add
mov
dec
jb
pop
js
sub
inc
cmp
sbb
xchg
andl
idivl
cmc
mov
cmpsl
ficomps
mov
sub
cwtl
xchg
jg
or
out
call
clc
and
mov
minps
mov
scas
inc
out
mov
xchg
mov
and
test
cmc
ljmp
xchg
cmpl
clc
adcb
adc
and
or
mov
jge
sub
js
pop
sahf
dec
mov
xchg
clc
or
inc
adc
call
cld
jbe
fsubrs
cmpsl
sbb
push
stc
lret
daa
adc
out
xchg
addl
xor
cs
mov
add
call
adc
mov
shr
in
das
jne
jnp
add
xor
xchg
jo
dec
lahf
add
push
out
or
push
sbb
dec
fisttpll
add
inc
hlt
je
icebp
or
pusha
repnz
xchg
push
add
dec
mov
pshufw
cmpb
sbb
lods
aad
fstpt
cmpl
add
hlt
jo
xor
pop
add
scas
sar
cld
cmp
ret
mov
shlb
in
xor
or
add
adc
imul
loop
jge
jl
sbb
xchg
sub
push
add
mov
xor
add
and
jae
bound
mov
dec
scas
mov
mov
adc
aam
out
std
pop
inc
dec
sub
adc
push
out
or
sbb
adc
je
adc
mov
stc
inc
in
inc
add
gs
faddl
cmp
and
and
inc
fcomps
imul
mov
push
push
and
test
outsl
mov
in
mov
mov
ret
enter
out
adc
add
xor
cli
or
int
xchg
ficoms
in
rclb
cmovp
daa
lret
add
mov
inc
insl
mov
clc
add
faddl
dec
or
clc
mov
sti
lods
sbb
and
mov
jl
mov
or
xchg
dec
aam
and
cwtl
and
jge
inc
jo
add
mov
push
insl
add
cmp
mov
and
mov
addr16
loopne
mov
shrb
dec
int
jbe
mov
jns
push
lea
call
ret
enter
add
ret
push
mov
lods
nop
rol
scas
hlt
add
cmp
insb
out
in
add
cmpsl
and
add
mov
xchg
dec
xchg
push
clc
aad
ret
add
out
mov
dec
adc
cmp
pop
push
popa
filds
sahf
imul
lcall
std
shll
jmp
shrb
aad
leave
in
xor
test
adc
nop
popl
jp
outsl
jbe
xchg
mov
add
xlat
or
or
in
lea
add
in
test
jne
fs
popf
stos
xchg
mov
cltd
xchg
cmovae
push
xchg
mov
lret
add
out
into
fs
shlb
lret
or
mov
add
push
orb
cld
and
fcmovb
int3
mov
lds
sbb
add
addr16
scas
int3
or
add
and
shll
add
sahf
add
inc
add
cmc
rcrb
or
or
shll
adc
fwait
je
cmp
jg
popa
xor
fldt
ds
cmp
mov
loope
adc
je
mov
pop
push
add
mov
mov
popa
add
fnsave
add
sbb
imul
mov
pusha
cld
push
hlt
or
nop
addl
daa
pcmpgtw
pop
adc
inc
and
add
mov
add
sarl
inc
adc
and
mov
aaa
or
sahf
add
mov
pop
insb
mov
pop
cs
loopne
rcr
jp
add
jo
aaa
out
pusha
andl
add
or
xchg
dec
jl
push
es
sbb
dec
stc
pop
sub
movsl
add
push
adc
push
xchg
or
add
fsts
add
into
xchg
ja
cmp
cmp
push
rdmsr
ret
xor
pop
mov
insl
jle
add
or
jmp
or
out
fadds
mov
add
lret
outsl
push
mov
cmp
push
loopne
inc
stos
add
int3
pusha
pop
push
push
xchg
subl
mov
jmp
psubw
mov
and
mov
add
sub
adc
out
pop
mov
cmp
pop
mov
xchg
lret
add
push
aaa
cmp
add
movhps
jg
push
push
ret
xchg
inc
loopne
bound
adc
int
movsb
leave
pop
xchg
inc
filds
xor
mov
cmp
xchg
aam
and
arpl
hlt
push
fs
xchg
add
and
add
xchg
outsl
jmp
aad
or
subl
add
add
or
sahf
push
dec
shl
mov
mov
cmp
test
mov
enter
mov
hlt
loop
inc
cmp
add
cli
out
add
adc
lock
popa
mov
add
jno
push
add
inc
mov
jge
sbbl
xchg
inc
scas
jns
xchg
mov
fisttpl
dec
lahf
aad
cmp
mov
clc
mov
cmc
adc
lock
add
add
shlb
jbe
sub
lcall
add
jae
xlat
pop
jo
fs
push
dec
push
rcll
xchg
add
cmc
inc
mov
insl
movb
mov
jge
add
aad
push
mov
sbb
pop
ret
dec
jnp
or
xlat
lock
fstpt
sub
loopnew
jns
jb
aas
stos
out
ss
imul
add
cmp
arpl
addr16
add
xlat
jnp
mov
add
dec
into
fsub
ret
adc
pop
inc
verw
out
xchg
int
pop
aas
sub
jge
add
out
sub
iret
cs
add
pop
jae
in
cmp
pop
popa
stc
xor
inc
rclb
jbe
xorb
jle
push
dec
shrl
cbtw
push
inc
sti
fmull
pop
add
jge
stc
sub
stos
mov
add
push
addr16
out
test
lret
xor
jnp
mov
sarb
add
sar
jmp
sub
inc
test
add
adc
jmp
cmpb
add
out
sbb
lea
in
fwait
daa
jb
push
inc
dec
lcall
stos
pop
add
adc
add
negb
push
cmpsb
add
js
jb
clc
xor
sub
popf
mov
fdivr
test
jle
adc
adc
movsl
cli
adc
jecxz
call
loope
pop
inc
push
cwtl
aad
add
fcmove
adc
test
mov
in
cmp
hlt
add
dec
and
add
je
xchg
and
imul
inc
ja
add
jecxz
inc
push
jle
pushf
dec
xchg
lahf
ret
imul
add
sub
int3
jbe
add
int
cli
sahf
dec
add
popa
jmp
push
add
loopne
add
adc
icebp
sbb
add
lahf
rclb
inc
mov
test
cld
adcb
add
out
sbb
mov
mov
add
addr16
cmp
mov
and
cmpb
ljmp
lahf
jg
lcall
mov
mov
add
sbb
xchg
adc
push
mov
and
fiadds
push
cmc
sub
jecxz
popf
or
in
and
loopne
les
add
cs
xchg
lcall
cmp
icebp
xorl
cld
loop
add
fs
inc
or
repz
enter
call
int
mov
jle
js
pop
icebp
or
fldz
pop
add
adc
outsb
jl
add
cmp
add
push
out
lahf
sub
add
xor
lret
jecxz
inc
insb
or
fcmovnu
mov
adc
xchg
mov
add
xorl
jo
add
dec
loope
add
inc
out
jo
out
loop
dec
shrb
add
cmpsl
jmp
fidivs
add
dec
or
cmpb
arpl
cmp
mov
add
adc
and
in
xor
adc
inc
and
mov
pop
pop
and
ljmp
gs
xchg
inc
das
hlt
pop
add
lods
roll
out
addb
sub
inc
mov
and
sub
mov
push
insb
lea
or
fldl
popa
in
add
xor
ljmp
andb
xchg
add
or
lock
pop
sbb
push
cmp
insb
jl
aas
pop
sbb
psubw
adcl
leave
add
pop
xor
das
aad
pop
and
mov
sub
xor
xorb
dec
js
insb
movsb
lods
lcall
cltd
les
call
imul
xor
clc
lsl
sub
fbstp
clc
lcall
cwtl
stos
lods
pop
push
mov
add
enter
loope
and
and
cmp
mov
out
add
daa
inc
je
jg
inc
fsubp
outsb
jb
inc
lea
sti
out
cld
sbb
add
inc
cli
outsl
xorb
cmp
add
cmp
fstps
cmp
cld
or
xor
add
and
add
adc
jle
add
nop
push
or
dec
rorb
into
pop
mov
mov
out
add
nop
popa
xchg
cmp
test
mov
add
xor
outsb
fcoml
inc
or
xor
add
pop
outsl
add
jns
into
dec
jle
pop
mov
add
nop
push
push
mov
add
mov
repz
les
leave
out
flds
pop
add
mov
mov
dec
movsl
add
or
push
sbb
mov
sub
add
pop
mov
dec
or
cwtl
adc
rolb
push
mov
add
rcrb
pop
pop
jl
out
inc
in
mov
add
or
pop
xchg
nop
add
mov
xchg
jbe
jg
mulb
xor
icebp
push
rcll
dec
add
push
or
call
stc
pop
leave
add
addb
loope
xor
das
cmp
lods
mov
add
bswap
fcompp
cmpsl
call
test
mov
and
outsl
mov
mov
cmp
xor
jmp
dec
in
pop
faddl
data16
ret
xchg
and
setge
subb
repnz
rolb
in
test
iret
js
addr16
xor
cmc
sbb
cld
shlb
mov
arpl
lock
lods
add
dec
lret
mov
adc
imul
and
push
fistpll
add
add
pop
jns
fcomps
dec
mov
jp
xchg
push
push
mov
and
imul
jnp
icebp
push
and
shlb
push
cwtl
sbb
cmp
mov
mov
cld
popf
syscall
xchg
xor
rclb
loop
pop
push
into
xor
cmpb
insw
add
adc
es
test
lcall
add
aas
mov
fwait
ret
add
leave
pop
pop
add
xchg
aaa
add
inc
cs
stos
insl
bnd
js
add
sub
cmp
jno
out
dec
add
lret
cmpsl
movsl
rolb
cwtl
mov
push
arpl
xor
add
add
or
mov
push
dec
push
mov
inc
nop
pusha
in
sbb
in
pop
rol
adc
adc
andb
sbb
xor
arpl
jae
int3
pop
jp
jmp
xor
sbb
push
aam
lahf
mov
popa
icebp
jmp
orb
pushf
flds
add
sub
cld
rorb
dec
ljmp
push
jmp
or
sbb
mov
add
sbb
pop
mov
xorb
pop
cmp
ret
hlt
mov
add
aam
add
lret
flds
nop
pop
add
push
mov
add
cmpsl
je
push
add
mov
xorb
loopne
add
xor
xchg
add
js
repnz
ret
mov
testl
pop
rolb
sbbl
inc
add
ret
cmpsl
lret
ds
jbe
xor
jo
xchg
test
or
add
mov
mov
jmp
in
add
clc
mov
add
lods
ret
imul
in
fldl
repnz
cmpsl
popf
mov
test
or
add
sub
cmp
mov
movsb
cwtl
mov
in
and
cwtl
add
in
fadd
mov
out
pusha
hlt
out
scas
or
add
lahf
adc
push
add
incb
mov
dec
cmp
mov
push
dec
js
mov
and
dec
mov
push
and
add
sub
pop
daa
mov
push
inc
pusha
push
in
pusha
xorl
push
ud2
les
cwtl
rolb
pop
mov
sbb
mov
outsl
xor
push
or
repz
jne
xor
jl
flds
imul
dec
scas
adc
push
shrl
mov
dec
add
sti
ja
pusha
andb
inc
add
cmp
jp
mov
cmp
and
fiadds
mov
fs
in
mov
inc
sub
push
dec
and
pop
ds
cmp
xchg
push
cmp
or
out
jmp
xor
addr16
rcrb
incl
loopne
jl
stos
xorb
inc
cmpsb
adc
cmp
push
xor
mov
xorl
out
daa
mov
xor
sub
mov
cmp
xor
jmp
sub
xor
cmp
mov
jo
lret
je
add
int3
dec
arpl
dec
cmp
or
incl
mov
dec
xor
pop
jnp
add
mov
lcall
mov
lods
addr16
jb
popl
rol
out
jle
cmp
add
push
pop
loop
cmpb
push
or
and
mov
aad
dec
in
in
push
int3
stc
add
cmp
les
add
fwait
inc
mov
dec
add
stos
sbb
push
pop
sub
inc
popl
mov
mov
mov
xchg
or
psubd
add
inc
sbb
fiadds
jp
add
leave
out
xchg
cwtl
xor
fldt
mov
sub
aam
add
mov
dec
fcoms
nop
lret
sbb
inc
add
jge
push
inc
push
shl
push
in
lea
xchg
jnp
sbb
xor
faddl
les
int
jo
add
leave
dec
push
add
pop
push
jb
cmpsl
pop
add
daa
mov
push
pop
outsl
xchg
sbb
data16
out
scas
cwtl
test
mov
and
fimuls
unpcklps
or
mov
add
add
dec
jl
sub
add
scas
lret
popa
outsl
nop
add
int
jbe
cmc
lea
push
sub
lret
dec
inc
xor
popa
sub
mov
js
xchg
add
cs
leave
fildl
cmp
mov
fwait
cmp
hlt
in
cld
add
sbb
push
adc
les
sub
jae
shr
add
cmp
cmp
loop
pusha
cmp
into
adc
hlt
and
stos
push
repnz
ret
mov
push
outsb
mov
cmovbe
jecxz
dec
add
pusha
mov
ret
fsubl
sbb
movsl
fsubrs
sub
pop
dec
out
add
ret
in
pop
aad
mov
mov
cli
mov
dec
lds
icebp
std
sti
pop
aaa
ss
test
adc
nop
repnz
nop
pusha
add
iret
int3
out
dec
add
add
mov
out
push
and
aaa
and
lahf
push
ret
xchg
add
loope
in
jmp
jp
add
sub
push
jne
addr16
sbbb
add
cmp
fwait
push
in
dec
xchg
push
add
mov
roll
add
hlt
fmull
loopne
or
inc
scas
mov
sbb
push
gs
sahf
int
or
fsubl
mov
xor
mov
scas
cld
add
sbbl
jb
mov
xchg
movl
push
pop
add
dec
js
dec
mov
sbb
mov
aaa
pop
push
out
jg
dec
dec
inc
add
mov
dec
out
fwait
cwtl
add
insl
sahf
or
jge
mov
es
xchg
xchg
sub
adc
mov
cmp
gs
setnp
cmp
inc
xor
movsb
cltd
add
pushf
jne
pop
lahf
cmp
fs
xchg
pop
sub
cmpsb
push
sbb
lret
add
outsl
xchg
push
mov
push
xchg
add
xor
jmp
popa
sbb
xor
pop
adc
inc
paddd
add
inc
rep
fs
outsb
jg
add
insb
aas
cs
loope
add
retw
xor
nop
in
mov
fs
cmpsl
test
stc
xchg
loope,pt
in
fisubl
lds
push
adc
xchg
fildll
cmp
add
xchg
fiadds
inc
cmpsb
add
jl
dec
setbe
gs
or
pop
in
jge
into
test
add
sub
addb
inc
loope
push
fstl
cltd
clc
imul
movsw
ret
mov
pop
inc
inc
cmpsb
mov
add
addl
dec
xor
dec
insb
sbb
xchg
dec
daa
inc
clc
sub
add
cmp
add
and
setle
rol
in
xchg
hlt
add
lcall
nop
cmp
lock
xor
push
imul
push
dec
dec
daa
add
jmp
lahf
clc
cmp
sub
add
daa
dec
add
pmullw
inc
outsb
cmp
fsts
movsb
add
add
cmp
popf
inc
mov
push
movsbl
sbb
sub
push
ja
out
adc
cmp
sbb
out
sbbl
fucomp
popa
lahf
add
pop
fsub
ret
mov
sarb
add
push
js
add
or
push
cltd
test
lock
add
ljmp
mov
das
arpl
out
pusha
sbb
jns
push
ds
hlt
push
popf
push
enter
cmp
mov
jle
mov
add
int3
loop
mov
loopne
inc
fwait
xor
xor
cli
stos
imul
mov
pop
les
cmp
insb
mov
je
add
sub
or
pop
push
in
inc
add
lods
out
insl
push
sbb
mov
ss
repz
outsl
ja
fwait
hlt
aad
add
xor
xor
cmp
pop
sbb
dec
cmp
pop
adc
and
aad
add
pop
inc
sub
repnz
out
mov
add
pop
dec
test
clc
and
xchg
or
inc
sub
sbb
faddp
push
fisttps
shlb
pop
xchg
and
mov
jmp
pop
pop
sub
xor
fs
mov
pop
adc
out
insl
xchg
sub
cmpb
jns
es
add
fwait
push
je
add
fsts
sub
pop
jbe
sbb
enter
add
push
mov
shll
nop
add
push
test
lods
mov
lds
push
sub
cmpsb
sub
push
add
push
inc
pushf
add
pop
call
add
popa
and
fs
add
subl
mov
or
es
sbb
mov
xchg
rorl
inc
loope
popa
cmp
and
pusha
addb
sbb
fistpll
xchg
add
mov
mov
hlt
push
add
in
add
push
sub
gs
hlt
pop
xor
pop
mov
pop
out
cmp
loopne
rclb
shlb
xor
insl
add
cli
cmp
mov
sbb
dec
or
mov
out
cli
push
add
test
lcall
out
cmp
arpl
push
cmp
xchg
xor
test
out
sub
or
xchg
leave
mov
adc
add
mov
fldenv
cli
repnz
insb
andnps
and
add
ficompl
mov
icebp
ret
mov
test
mov
inc
adc
aam
add
roll
pop
outsl
dec
mov
into
rol
leave
imul
out
add
in
cmpsl
out
and
pop
cli
push
pop
mov
fisttps
lods
inc
fcmovb
in
dec
setle
mov
iret
nop
repz
push
stc
js
sbb
arpl
js
add
lret
mov
aam
add
push
lods
cmp
or
daa
inc
outsl
mov
and
add
rolb
mov
adc
dec
cmc
sub
xchg
mov
es
pcmpgtw
insl
fstpt
sub
xor
sbb
insb
fnstenv
xchg
add
ret
inc
sub
jge
cmp
call
xor
scas
stc
rclb
add
aad
mov
add
repz
mov
divb
lcall
sbb
jl
mov
cmp
xchg
mov
bound
add
out
adc
push
movsl
fs
jno
pop
jge
xchg
pop
clc
inc
les
add
hlt
je
mov
test
xchg
aam
rolb
test
mov
mov
lcall
jp
add
mov
fisubs
fisttps
test
inc
xor
add
cmp
aad
les
xor
movsl
push
push
fstp
data16
inc
add
mov
xlat
sbb
imul
jl
push
mov
mov
push
jae
add
cmpsb
cmpsl
mov
pop
mov
sar
xchg
jbe
sub
aas
movsb
shr
ret
xchg
add
ror
data16
fs
push
adc
incl
mov
pop
pop
mov
ja
ljmp
pop
or
cs
out
cmpsb
add
mov
jmp
inc
dec
ds
sbb
sahf
add
push
fmull
movsl
dec
xchg
ljmp
add
mov
push
daa
ja
fld
xor
pop
dec
fsubrs
mov
fbld
add
xchg
push
sbb
test
mov
add
add
test
or
int3
andb
subb
outsb
add
lds
inc
mov
xor
lock
mov
mov
test
into
add
and
mov
repnz
or
rclb
lock
pop
jae
ret
mov
cld
sbb
or
inc
aaa
adc
jnp
add
movsb
mov
sbb
add
ljmp
add
inc
in
add
push
dec
xchg
push
cmp
dec
insb
nop
jne
cli
iret
cs
outsl
dec
jae
mov
lcall
and
mov
add
enter
xchg
jne
ret
lock
dec
and
jnp
add
aam
out
add
dec
lahf
add
pop
add
movsb
and
sbb
jmp
popf
cmp
pusha
push
loop
in
sti
push
mov
and
icebp
add
mov
xchg
aas
or
push
fwait
sbb
inc
add
pop
aas
pop
inc
sub
loope
mov
add
je
push
out
xchg
inc
jno
dec
mov
add
repz
movsb
push
add
pop
sbb
or
loop
xchg
add
jnp
addr16
rcrb
dec
or
pop
lock
das
jae
loop
test
rorb
cmc
addb
sahf
stos
push
dec
pusha
scas
mov
and
je
sub
cld
pop
inc
add
addb
dec
pop
loopne
sub
pop
sahf
and
mov
lea
into
sub
cmp
stos
mov
inc
repnz
movsl
mov
js
das
mov
into
mov
es
paddb
enter
inc
mov
mov
adc
jg
push
stos
loop
nop
pop
push
imul
sbb
add
aam
sti
insb
dec
mov
fimuls
mov
and
mov
xor
push
and
inc
inc
xchg
jns
fcomps
int3
pusha
push
aad
pop
add
insl
loopne
adc
push
push
pop
lret
mov
add
add
lahf
add
mov
add
jp
fs
loopne
push
inc
div
jp
add
push
in
mov
popl
push
pusha
and
and
lods
add
or
shrl
jne
mov
sub
sbb
push
jb
mov
or
or
sub
in
aam
jne
and
test
jge
pusha
rcll
pop
jecxz
xlat
outsl
ret
bound
les
inc
adc
or
fstl
jns
into
in
and
loop
lds
sub
das
xchg
call
add
xchg
push
lods
add
ss
shl
jecxz
jnp
add
imul
adc
pop
cmp
movsb
inc
xchg
push
fs
and
dec
sbb
xchg
xchg
fisttps
mov
pop
faddp
inc
bnd
and
sbb
mov
xor
or
sub
pop
and
jmp
push
iret
call
imul
inc
adcl
lret
pop
cmc
push
into
jp
test
ss
fldl
add
pop
cmp
pop
jnp
and
and
stos
aas
flds
ds
insb
add
pushf
cmp
add
lock
bound
out
pop
adcl
lods
rcr
mov
dec
je
into
decb
pop
call
and
pop
mov
push
pop
and
push
and
cmp
insb
pop
cmpb
outsl
add
or
cmp
imulb
lock
loopne
jmp
cmp
pop
fcompl
push
pop
testb
push
lret
jnp
movb
outsb
call
add
push
clc
sbb
and
sub
add
xor
and
xor
xor
pushf
out
mov
fstpl
fcomip
test
data16
add
add
jmp
inc
mov
add
or
repz
push
jae
ss
leave
add
ret
mov
icebp
sbb
orl
inc
rcrl
rcr
loopne
add
sbb
and
shlb
and
xor
and
add
hlt
dec
arpl
stc
pop
sbb
dec
call
sub
or
add
sbb
pop
jmp
mov
sub
addl
divb
push
mov
jge
pop
mov
loop
mov
jge
loopne
or
mov
add
xlat
cltd
cld
mov
dec
ffree
mov
lock
ds
inc
push
cmp
sahf
cwtl
add
jecxz
ja
sbb
and
sbb
lcall
and
punpckhbw
fsubrs
stc
jae
add
les
aaa
inc
cmpb
pop
out
popa
mov
inc
mov
loopne
incl
movsl
mov
xchg
pop
enter
pop
push
add
lret
test
inc
mov
inc
xor
inc
push
rolb
xchg
or
pop
mov
lret
inc
inc
lods
test
test
jnp
shrb
add
movsb
int
pop
lcall
out
inc
mov
jg
aas
fmul
test
loope
xchg
cmpb
dec
out
pop
sub
ficompl
arpl
dec
mov
or
sub
cmc
inc
add
ja
movsb
or
xor
add
sbb
or
dec
xor
jno
add
jle
or
cmpl
ja
cvtdq2ps
jmp
popf
ja
add
aad
fcompl
cs
xchg
add
inc
daa
jnp
mov
scas
jge
clc
or
or
test
fs
hlt
xchg
insb
test
jnp
int3
inc
es
sbb
andl
lcall
jg
add
add
cmp
add
clc
xor
inc
ss
ds
loop
sbb
xchg
out
push
movsl
jbe
inc
lret
mov
add
aas
push
cmp
rolb
mov
sbb
inc
push
ja
xchg
add
fs
or
mov
mov
add
out
hlt
add
mov
pop
add
sub
inc
bound
inc
push
inc
add
aas
and
cmpsl
repz
in
ret
push
sub
dec
add
ret
dec
loopne
cmp
lods
fwait
mov
mov
loopne
xchg
rolb
out
test
movl
icebp
mov
push
js
adc
mov
add
jg
ljmp
add
sbb
mov
mov
ja
in
sarb
xor
mov
sub
pop
das
push
add
outsb
out
std
push
popa
sbb
cmp
mov
stos
cmpl
add
es
out
pop
sub
cmc
jle
xchg
sbb
adc
int3
jp
loopne
mov
inc
add
push
add
or
push
xchg
cmpsl
mov
add
ds
icebp
mov
xor
jmp
out
mov
xor
xchg
scas
add
mov
mov
xor
repz
daa
enter
int
xlat
stos
dec
ja
stos
pop
mov
vpmulhuw
sbb
or
add
add
into
incl
fsubl
loop
adc
rclb
cmp
adc
pop
push
sbb
lret
stos
ret
add
mov
mov
cmp
dec
packsswb
mov
adc
xchg
push
dec
mov
mov
mov
aaa
add
out
ds
sbb
int
mov
add
xchg
cmp
or
dec
adc
push
aam
push
jno
adc
stos
jmp
add
cltd
pop
mov
and
pop
or
out
movsl
and
std
cli
daa
add
fs
add
notl
xlat
mov
or
js
add
pop
mov
sahf
cmpsl
popa
xchg
add
xchg
cld
xor
add
sub
dec
in
repnz
movsb
add
jb
or
add
aas
daa
push
arpl
dec
push
xchg
pusha
inc
ljmp
fmul
xor
push
inc
add
jnp
jecxz
ja
adcl
rcrb
xchg
and
popa
dec
cli
mov
push
adc
addl
jle
mov
aaa
jae
add
scas
mov
int3
cmc
cmp
ret
xchg
add
xlat
and
cs
mov
adc
and
inc
sbb
push
leave
lret
es
inc
ret
nop
lock
pop
push
sub
insl
xchg
add
stc
inc
negl
std
add
repnz
sub
je
xor
push
adc
cmp
add
daa
lods
repz
adc
inc
das
mul
sub
add
je
sbb
std
or
mov
jmp
mov
mov
cld
bound
sbb
fidivrs
lds
movsb
pusha
pop
add
cwtl
or
pop
push
add
add
stos
mov
imul
cltd
andb
xchg
jp
rorb
cs
xchg
out
add
icebp
mov
pusha
dec
mov
ss
stos
xor
filds
adc
xor
jns
es
mov
pop
sbb
call
and
add
jne
and
repz
xor
sub
push
fs
ret
cltd
or
cmp
cs
in
add
movb
add
adc
push
je
add
xor
push
rcrl
fcmovb
call
mov
int3
xorb
cmc
dec
mov
xor
scas
pop
sbb
dec
in
push
cld
scas
dec
jge
xchg
mov
mov
mov
call
flds
in
adc
inc
movsb
mov
jecxz
xlat
outsl
add
or
xchg
insl
jb
cmp
or
add
cmc
add
leave
test
test
in
cmp
movntq
and
xchg
sbb
jge
sub
and
dec
hlt
add
or
pushf
and
ljmp
pop
out
dec
cmp
mov
cld
js
incl
imul
iret
inc
adc
cmc
adc
mov
repz
out
cmp
test
sub
cwtl
push
add
filds
add
mov
mov
mov
in
and
sub
cmpl
je
xchg
mov
or
cmp
add
daa
jecxz
in
pop
add
xor
and
inc
aas
inc
repnz
jle
add
add
hlt
ret
xchg
xor
inc
pop
dec
pop
mov
psubusw
adc
push
ja
scas
add
mov
sub
add
xor
fwait
push
filds
cmp
iret
faddl
pusha
popa
nop
loope
add
aad
ljmp
pop
rorb
popa
jae
loope
rcrl
xchg
push
cmp
lods
inc
pop
jnp
out
rclb
lock
sbb
inc
movb
mov
xchg
or
mov
ss
adc
sbb
jbe
clc
xor
and
sbb
or
in
pop
cli
fldlg2
push
add
daa
xor
aad
mov
movsl
repz
sub
xor
enter
and
stos
in
mov
jl
add
insb
and
lahf
pop
cmp
adc
pop
js
fisttps
gs
push
mov
das
mov
clc
lret
repz
daa
pop
xor
neg
cmpsl
add
out
dec
imul
or
push
xor
lods
sub
mov
push
sub
loope
pushf
pop
pop
daa
lret
orb
pop
cwtl
add
in
push
jnp
aaa
sbb
verr
js
enter
into
call
jle
add
lret
push
add
stc
dec
andb
mov
mov
fsubs
movq
jb
mov
fnstsw
ljmp
push
xadd
add
mov
mov
les
enter
aad
movsb
pop
sarb
into
mov
add
mov
cli
dec
clc
addb
and
sub
add
pop
enter
push
mov
call
fstpt
out
cmp
lret
stos
pusha
test
adc
xor
add
ss
pop
pop
and
imul
xchg
add
cmpsl
xchg
lret
pop
mov
mov
jo
bound
ds
or
repz
call
sub
dec
push
dec
pop
add
inc
addl
jle
xchg
dec
push
aaa
jo
or
dec
dec
sbb
add
repnz
imul
fildl
or
les
pop
mov
pop
subb
dec
clc
add
int
push
jge
mov
jecxz
idivb
outsl
and
mov
popa
mov
sti
pop
mov
xor
out
pop
adc
mov
add
ret
xor
or
sbb
cmp
mov
loopne
adc
mov
xor
and
cmp
pop
inc
jg
xor
pop
mov
xchg
add
ja
push
add
pushf
dec
movl
mov
mov
mov
andl
add
orl
hlt
jno
call
cs
ret
jecxz
popf
fmuls
out
pop
jo
mov
adc
inc
mov
add
sub
inc
dec
xchg
pop
fs
out
out
and
add
cmp
sbb
repz
ret
push
movsl
repnz
add
hlt
dec
or
pop
in
add
pop
cmp
add
mov
outsb
nop
pushf
add
mov
iret
loope
fsubs
loopne
jl
movsl
or
repnz
fstl
ja
popf
sbb
xchg
loop
jns
fs
cwtl
divb
add
mov
shll
out
inc
mov
sbb
fsubrl
in
or
mov
vmread
xchg
dec
push
jae
sbb
movsl
cwtl
ret
out
adc
pop
popf
loope
jl
xorb
mov
mov
add
dec
or
push
add
or
fdivrp
movsb
out
push
add
in
jl
push
nop
adc
xor
dec
cmp
sub
fadd
pop
add
mov
loopne
repnz
mov
data16
test
jge
jb
insb
ficompl
sub
add
lods
mov
add
test
incl
popa
mov
loop
add
inc
cmpsb
bound
stc
or
jo
std
sbb
dec
mov
xor
ja
cmp
addb
out
loopne
add
and
outsb
mov
mov
add
loope
add
lcall
jo
xchg
lock
push
jecxz
popf
inc
adc
lret
push
add
dec
test
sub
aas
dec
lods
xor
inc
test
push
push
lcall
out
add
jae
notb
sub
in
movsl
fwait
popa
jno
fadd
or
and
cwtl
pop
loopne
add
cmc
inc
add
js
xchg
push
cwtl
push
add
pmullw
xor
lret
adc
stos
into
hlt
xchg
je
add
enter
mov
stos
aam
lret
hlt
movsl
sub
add
xchg
pop
lret
dec
fsubs
jnp
sub
and
xlat
sbb
inc
js
out
aas
cmp
popf
aad
or
mov
imul
and
rcrb
dec
dec
movsb
ficoms
negl
or
mov
dec
add
imul
insl
push
inc
add
loop
pop
into
shll
adc
cmp
add
dec
icebp
add
inc
lods
sub
out
mov
cltd
fistl
cwtl
in
and
jl
add
cmpsl
sbb
mov
fidivrs
negb
dec
pop
js
lds
pop
scas
loope
inc
add
add
outsl
mov
lock
mov
dec
shl
jb
dec
aas
jo
push
inc
cli
rcrl
adc
sub
xchg
add
aaa
and
popa
add
add
mov
add
push
in
mov
pushf
daa
and
adc
pop
js
gs
pusha
cmp
fs
js
xchg
in
jmp
mov
xlat
lcall
mov
inc
pop
movsl
test
adc
scas
shll
mov
adc
xor
sahf
lcall
int3
inc
sbb
pop
into
xchg
cli
sbb
xor
call
push
ret
outsl
sbb
mov
lret
add
lea
push
cwtl
mul
push
filds
xchg
ficoml
add
es
mov
cs
shll
cli
stc
arpl
push
test
push
pop
pushf
inc
fs
gs
in
rolb
jns
cmpsl
fiadds
pop
xchg
dec
pop
dec
or
sahf
arpl
add
add
push
bound
fwait
add
popf
add
push
lahf
fbstp
repnz
les
lcall
outsb
sbbl
cltd
ret
xor
jp
inc
sub
add
add
stos
dec
cmp
loope
lret
push
cld
inc
sbb
jle
jo
pop
xor
add
dec
lds
std
pop
jbe
jg
xor
inc
jo
jne
pop
sbb
pop
negl
adc
jle
popa
mov
add
into
sbb
adc
sahf
adc
flds
mov
aam
lret
nop
add
je
jmp
bound
repz
jnp
mov
add
cmp
sarb
ja
repnz
stc
add
lahf
sub
enter
in
add
lods
jge
fs
lret
cmp
sub
sahf
jg
dec
jge
add
ret
idivl
std
and
orl
cmp
out
add
int
push
ret
xor
jmp
out
xchg
clc
dec
push
mov
test
or
xchg
and
call
mov
sbb
je
push
add
addr16
mov
add
ret
bswap
stos
cli
add
cld
and
xor
lahf
add
jecxz
dec
cmp
push
lods
inc
bndldx
fstpl
into
ret
rcrl
mov
adc
sbb
loopne
pop
and
push
xor
cmpb
fadds
int
lods
roll
insb
add
add
pop
adc
add
test
addl
add
cmpsl
mov
mov
repnz
outsb
and
add
or
sub
dec
cmp
dec
pop
dec
test
mov
xor
pop
or
cld
clc
add
mov
pop
mov
add
scas
enter
loope
and
jg
lahf
aaa
add
ss
sbb
mov
xor
add
sar
or
sahf
pusha
add
xchg
addb
or
add
ret
repz
pop
mov
nop
xchg
mov
add
in
and
jle
jl
add
js
jno
add
jmp
stos
mov
aam
mov
les
movsl
xor
sarl
les
add
pop
in
push
xchg
clc
adc
mov
imul
pop
add
lcall
ret
shl
pop
outsl
ljmp
pop
add
pop
aam
push
lock
add
push
movsb
call
pushf
xchg
or
imul
jb
test
mov
and
fcmovne
insb
add
push
jne
roll
popa
mov
add
push
mov
movsl
sti
mov
ror
add
loop
lds
bound
mov
mov
leave
sbb
fidivl
outsl
in
fists
add
push
inc
std
pop
arpl
out
push
mov
packuswb
pop
lds
div
jae
inc
pop
in
sbb
mov
push
xor
fsin
std
add
jecxz
jns
or
mov
out
dec
push
dec
repz
xchg
ljmp
cli
cmp
sahf
add
test
and
aad
mov
insl
pop
sbb
arpl
add
jne
fmuls
sahf
add
rorl
les
int
add
inc
inc
xor
out
jno
push
dec
add
cmc
stos
xchg
jl
and
push
or
sbb
dec
add
ja
addl
mov
xor
int3
add
cmpsl
in
add
ret
mov
add
gs
sti
push
pop
add
sbbb
mov
pop
stos
adc
aaa
add
mov
inc
mov
leave
sbb
pop
sahf
add
mov
xchg
popf
xor
xchg
lods
fbstp
sub
and
dec
insb
addr16
inc
lea
enter
push
icebp
cs
sub
int
lock
xchg
cmp
mov
rolb
fbstp
pop
aas
into
adc
insl
push
ja
in
pop
add
aam
mov
in
daa
shl
push
xchg
sti
repnz
cmp
add
imul
addr16
xchg
lods
adc
xchg
icebp
shlb
testl
addl
add
sub
mov
in
fldl
cmc
addb
add
test
stos
jp
or
pop
stc
addb
dec
repnz
mov
adc
mov
inc
jb
add
sbb
dec
add
rorb
std
or
jle
sub
addl
xchg
add
mov
xchg
push
jno
add
adc
cmp
sbb
inc
fisttps
test
dec
out
repnz
xchg
and
hlt
les
jne
lea
add
lds
xchg
pop
icebp
push
scas
adc
addb
jb
int3
xchg
jle
dec
loop
nop
fst
and
xor
cmpl
pushf
mov
decb
xchg
pop
add
movsl
das
pop
add
dec
jmp
movsb
or
inc
lea
push
add
lret
xchg
adc
xchg
xchg
inc
add
orps
mov
es
add
sub
das
lods
cmpsb
add
add
roll
loope
cmc
jle
orb
lods
add
insl
roll
or
pop
lret
ja
add
inc
add
imul
fcoml
pusha
cmp
inc
add
nop
push
aad
mov
nop
add
sbbl
rol
aaa
mov
and
pop
or
xchg
mov
or
sub
out
push
push
add
mov
sub
add
inc
ret
in
lea
xor
or
mov
and
pop
and
push
or
xchg
adc
sbb
adc
test
add
fmul
ja
sub
pop
adc
pop
add
pop
sahf
ret
nop
dec
dec
icebp
sbbb
pushf
add
cmpsb
out
ret
loopne
add
jne
ljmp
xchg
rorb
jae
daa
xor
xor
mov
mov
add
push
mov
cmpb
inc
add
pop
rcrl
mov
push
mov
pop
std
mov
hlt
mov
jnp
leave
mov
sbb
jae
ja
or
addr16
add
sub
mov
das
mov
jne
shrl
or
inc
jmp
add
mov
dec
out
movsb
loopne
xor
pop
add
fwait
jnp
negb
sub
mov
rcll
outsl
insl
jmp
sub
pop
cmp
dec
negb
add
sub
ret
aaa
push
ljmp
mov
inc
into
jno,pt
jo
fs
or
or
jno
sbb
xchg
fs
in
arpl
dec
sahf
xchg
push
insl
mov
rorb
std
test
repnz
dec
xlat
es
cmp
add
jecxz
mov
and
mov
add
shll
ret
pop
pop
popl
shrl
popf
pusha
add
sbb
lret
imul
xchg
out
fisttpll
addb
shr
lret
pop
ret
or
jl
mov
inc
xlat
lock
enter
idiv
sbb
or
push
iret
pop
mov
addr16
xchg
lock
mov
fiaddl
xor
leave
dec
add
aam
out
pusha
push
sub
js
enter
add
in
add
dec
fcompl
add
add
xchg
ds
or
add
sbb
lahf
lahf
xadd
ficompl
jns
lock
js
xchg
clc
add
pop
or
cmc
in
sub
add
test
and
add
jp
lcall
xor
je
push
in
mov
xchg
leave
inc
pusha
fidivrs
shrb
mov
adc
test
jle
add
sbb
je
fs
sbb
push
dec
test
add
add
and
dec
pusha
insb
xor
add
fcompl
mov
clc
push
add
fcoms
es
fiaddl
push
jge
std
jecxz
and
sbb
cmp
cmpsb
repz
add
mov
stos
push
pop
add
insl
out
sbb
mov
hlt
add
cmpl
loopne
pop
adc
test
and
add
xor
xor
inc
mov
pop
rclb
ret
dec
or
fs
jle
sub
add
xchg
cs
or
stc
add
mov
mov
inc
lcall
mov
add
subl
inc
add
add
lods
or
add
pop
dec
fisttpll
jp
mov
ds
or
lret
or
add
pop
push
pop
aas
cltd
push
cmp
nop
cwtl
add
mov
cmp
dec
imul
ljmp
lea
fistl
popa
pop
fcomp
pop
out
add
enter
add
xor
pushf
and
adc
bound
aaa
jmp
jg
cpuid
xchg
cs
pop
pop
cmpsb
mov
jne
lds
out
popa
jg
add
push
add
cwtl
or
iret
sarl
add
push
sbb
repz
out
mov
cwtl
movsl
mov
mov
ljmp
pop
jno
mov
aas
pop
ja
add
add
pop
mov
js
aad
adc
cmp
test
int3
je
mul
fcoms
adc
and
std
inc
add
daa
dec
add
dec
jno
jbe
int3
leave
hlt
adc
sub
push
push
xchg
push
add
jns
jne
and
add
mov
cmc
pop
ja
push
sbb
decb
xchg
add
bound
add
jge
lret
or
fisttpll
dec
scas
add
mov
mov
and
imul
inc
xorb
mov
imul
add
xchg
filds
add
ss
adc
push
xor
mov
add
imul
push
or
sub
pusha
add
stc
pop
pop
push
rcrb
fsubrl
mov
jle
sahf
jo
push
add
cld
adc
repnz
add
call
mov
or
loop
insl
gs
dec
jmp
leave
stos
in
pop
add
cmp
cmp
repz
add
enter
xor
push
and
js
inc
fnstsw
loop
sub
cmp
aam
loop
adc
stos
mov
push
adc
jge
add
pusha
jo
mov
dec
pop
es
and
idivb
jbe
add
xor
jp
pop
dec
dec
fldl
add
adc
mov
add
xchg
and
popf
in
sub
stos
inc
add
lods
cld
add
adc
sbb
sub
int
leave
orb
cmp
cli
cmp
aam
pop
xchg
subl
in
lock
pop
fnsave
add
or
loope
notl
mov
push
add
inc
sub
mov
add
inc
mov
adc
xchg
cmp
or
gs
test
sub
inc
adc
or
test
rorb
add
xor
fsubs
pusha
and
outsb
jg
add
into
out
cld
pop
aam
shll
cmp
add
dec
cltd
popa
push
lea
or
subb
xor
daa
loop
inc
mov
lret
add
es
leave
push
dec
push
pop
adc
insb
mov
add
ljmp
add
cltd
pop
cli
cmp
div
xchg
and
mov
jp
push
inc
daa
lods
or
mov
mov
aas
pop
addb
and
mov
in
lret
sub
add
popf
mov
jmp
cmp
gs
aas
xchg
pop
mov
mov
inc
bound
jle
les
xchg
test
cli
loopne
or
test
cld
jl
pushf
scas
add
call
xor
out
lea
vmread
add
test
ja
rol
test
into
in
test
pop
aad
xchg
jmp
call
xor
add
jp
test
add
add
les
xchg
xlat
jmp
fwait
add
and
lret
ret
jl
js
fsqrt
in
mov
pop
add
lret
inc
or
adc
leave
into
add
imul
aad
lahf
sbb
test
mov
or
sbb
aaa
and
cmp
stos
dec
mov
arpl
jae
mov
nopl
imul
dec
add
dec
mov
add
sub
sub
dec
loopne
rcll
das
add
or
cmp
inc
mov
sub
ret
add
add
lret
mov
js
jnp
leave
adc
mov
jg
sbb
cmp
inc
push
cmp
push
frstor
jp
popf
addb
add
leave
push
pop
sahf
test
lods
and
and
xlat
jp
xchg
xchg
enter
addl
cmp
push
or
jmp
push
ret
xchg
outsb
arpl
or
dec
test
imul
dec
adc
roll
ficompl
sub
inc
rclb
xchg
sub
out
add
cltd
insl
ljmp
mov
xor
aad
and
dec
les
addr16
inc
cmp
inc
movsl
add
pushf
incl
push
mov
cld
pop
jae
sub
cmp
test
adc
add
sub
xor
and
xlat
xchg
add
cmp
test
daa
je
adc
rolb
xchg
sti
push
mov
and
sub
faddl
jae
add
sbb
int
push
dec
repz
rorb
add
movb
adc
sbb
jb
add
pop
out
cmc
jb
add
cs
in
sub
xchg
ret
scas
jle
aad
and
mov
push
add
repz
loopne
xchg
adc
push
push
rorb
pop
outsb
popa
ja
add
mov
testl
pop
xor
sub
mov
mov
xchg
addr16
pop
mov
aad
push
lds
add
cmp
xchg
out
pop
jmp
add
sub
or
mov
mov
mov
outsb
cwtl
mov
pop
pop
mov
add
sub
in
cmp
xor
dec
push
mov
in
mov
ret
cmpb
ljmp
loopne
adc
je
jmp
inc
cmp
xchg
sub
divl
inc
dec
mov
add
stc
and
enter
add
mov
loopne
mov
inc
add
fs
sysret
push
daa
mov
or
inc
add
inc
nop
std
mov
ss
stc
push
and
dec
lods
les
loop
shl
add
outsb
in
xor
test
insb
sub
jns
enter
add
es
test
addb
dec
popa
and
incb
sahf
inc
inc
movsb
ljmp
xor
rcrl
adc
fsts
andb
aad
fisttps
pop
sbb
mov
pop
pop
xchg
mov
xor
test
and
hlt
mov
rcl
pop
int3
pop
sub
push
jb
add
fsubl
add
sbb
pushf
enter
add
out
mov
xor
bound
add
inc
add
dec
lock
sub
add
mov
sbb
fdivl
jo
push
aas
out
push
mov
cmpsl
add
xor
and
das
or
add
push
mov
movsb
add
rcrl
xchg
mov
inc
int
mov
push
push
call
fidivrl
ljmp
sbb
pusha
shlb
loop
or
and
in
inc
inc
add
int3
mov
mov
sbbb
jge
outsl
add
adc
xchg
test
mov
or
mov
cld
or
pop
push
xchg
dec
fisttpll
js
loope
shll
xor
paddsb
push
xor
xor
into
add
ss
cld
jmp
fdivl
fildl
xchg
fs
imul
sub
out
rolb
aad
shlb
mov
roll
gs
mov
in
and
arpl
jbe
mov
out
cmpsl
mov
sarb
into
jmp
in
nop
sub
icebp
iret
add
adc
aam
mov
lret
xchg
mov
push
rcrb
nop
inc
push
add
or
add
mov
call
arpl
sub
jge
cmp
mov
or
mov
mov
mov
loopne
pop
jns
int
aad
andb
stos
jb
jbe
cmpsb
lcall
and
lret
aas
mov
int
mov
bnd
and
mulb
rolb
push
dec
dec
xchg
call
movsl
lret
in
inc
add
mov
das
mov
cs
jle
xchg
and
rclb
sbb
leave
aaa
popl
cmp
sti
cmp
xorb
mov
outsb
shr
mov
lock
icebp
pop
jnp
add
imul
mov
nop
xor
adc
fmuls
mov
into
pop
lcall
cmc
scas
fildl
adc
push
ds
mov
shl
fiadds
ret
mov
loop
lcall
rcrl
pop
test
aad
shl
fimull
jle
jge
sbb
xchg
jno
sub
adc
shr
in
mov
push
loope
push
mov
jl
repz
add
push
fcomps
pushw
adc
jl
add
pop
mov
add
xchg
cwtl
xor
setns
shlb
mov
or
jge
mov
clc
add
or
incb
cmp
pop
mov
push
movsb
mov
je
pextrw
sub
popf
cmpsl
xchg
sbb
ret
lock
sub
cli
fstl
add
lret
push
ss
jae
aam
rorb
pop
mov
fadds
jg
pop
mov
push
add
insl
cwtl
inc
andb
add
mov
stc
pop
cmpsb
mov
add
xchg
je
add
dec
fstl
fcmovu
sbb
pop
push
int3
insb
xchg
into
outsb
js
jmp
add
or
punpcklwd
decl
inc
sbbb
mov
addr16
mov
jno
jle
adc
xchg
xor
cmp
test
ret
add
imul
add
out
sbb
mov
stos
add
scas
mov
sub
pop
add
adc
lahf
inc
hlt
inc
test
ja
sub
xchg
cmp
out
add
je
std
add
cmp
sbb
xor
push
dec
mov
mov
out
fwait
add
jnp
aaa
add
inc
add
rcll
enter
cld
fs
inc
shlb
mov
push
add
enter
imul
and
add
int3
fstpl
test
add
imul
xlat
mov
stos
lock
pop
call
rolb
jp
adc
pop
dec
dec
xchg
pusha
pop
out
lret
movsb
push
sbb
leave
sbb
xchg
xchg
fimuls
add
into
subb
aas
data16
adc
dec
loop
push
or
das
add
int3
idivb
add
aam
outsb
cwtl
sbb
test
push
pusha
xchg
pop
jb
mov
dec
push
str
out
xor
add
xor
pop
cmpsl
sar
sub
and
add
clc
dec
dec
jae
lods
sahf
push
mov
xchg
push
cmp
and
jecxz
test
add
in
add
notb
arpl
add
sbb
or
add
out
push
out
adc
gs
cmp
and
movsb
cmovb
push
mov
mov
jmp
add
sub
and
add
movsb
add
push
stos
lcall
push
rorl
inc
cmp
mov
imul
inc
sarl
daa
xchg
data16
cmp
jb
jbe
lcall
test
or
ret
lea
lods
or
arpl
cmpsb
inc
ds
add
mov
js
rcrl
out
sbb
rolb
push
mov
cmpsl
add
mov
xor
lock
add
gs
mov
jge
add
shl
pop
lds
std
mov
fstps
push
pop
orl
sbb
sub
pusha
scas
adc
loope
cmc
jge
stos
add
inc
dec
add
mov
push
icebp
push
loopne
lcall
fildl
xchg
cmp
xor
xor
adc
call
jae
outsb
notb
inc
add
in
imul
add
or
aam
and
ss
fdivs
cltd
dec
hlt
dec
add
out
arpl
add
mov
jp
andl
push
lcall
in
sbb
add
pop
cmp
add
and
mov
add
imul
add
dec
test
push
jne
lds
ficoms
das
inc
add
lods
xor
push
aad
aaa
push
and
mov
add
jmp
pop
cli
jle
test
sub
mov
cmp
push
subb
push
add
cmp
sbb
sbb
imul
mov
icebp
mov
add
pop
movsl
test
mov
sbb
lds
mov
mov
and
sub
dec
data16
dec
mov
mov
mov
adc
les
add
mov
insl
add
jo
gs
jbe
cwtl
dec
cmp
pusha
sbb
lods
cmp
xchg
mov
in
dec
adc
ret
outsb
add
xchg
repnz
mov
outsl
mov
fisubs
loopne
add
pop
mov
inc
adc
lcall
dec
or
add
and
orb
shll
add
ret
into
mov
add
xor
mov
aad
mov
xchg
in
sahf
scas
shl
aaa
movb
mov
mov
jg
push
inc
scas
scas
insl
add
shlb
add
sub
dec
xchg
aam
add
test
ret
add
loopne
push
add
add
mov
add
les
sub
xor
ss
scas
pop
dec
add
fidivl
xchg
add
and
mov
mov
fldcw
inc
ret
addl
imul
out
cwtl
mov
sub
cmp
add
ljmp
add
ret
or
xchg
mov
push
stos
add
adc
mov
sbb
push
pop
mov
mov
test
outsl
incl
lcall
in
fwait
jo
sbb
je
sahf
sub
cwtl
and
test
pop
es
jge
mov
mov
enter
and
rolb
nop
mov
sub
add
sti
dec
pop
jns
aas
enter
mov
popf
mov
out
add
xchg
push
daa
add
dec
xorb
es
loope
and
and
les
hlt
jae
pop
push
xor
and
fnstenv
in
mov
pop
pushf
add
or
stos
xor
add
sbbb
ret
fldl
shrb
cmp
pop
subb
jnp
das
add
sbb
bound
push
ficompl
loopne
pop
fildll
out
shrb
mov
fs
sbb
push
pop
std
add
mov
movsbl
les
xorb
je
add
ja
mov
add
jmp
loopne
push
xchg
lock
inc
adc
mov
nop
dec
aaa
cmp
jle
dec
cmp
push
gs
mov
mov
adc
imull
fucom
repz
stos
hlt
sub
adc
call
mov
loopne
call
sbb
mov
add
das
movsb
movsb
mov
cmp
dec
popf
and
stc
addl
aas
mov
dec
add
xorb
pop
or
push
lahf
fiadds
mov
inc
add
orb
pop
inc
call
xor
pop
cmovb
xlat
popa
add
adc
or
stos
cmc
fstpl
and
scas
xchg
push
daa
mov
addr16
push
jbe
add
mov
inc
stos
xor
movsl
sub
push
outsl
mov
shlb
mov
sub
xor
ljmp
inc
loope
fadds
cmpsl
and
and
xchg
and
daa
movsb
lret
dec
xchg
adc
fbld
mov
addl
shlb
and
add
add
dec
mov
add
mov
andb
cs
mov
add
aam
scas
add
rcrl
adcb
add
loop
or
and
and
mov
inc
add
es
ror
jo
mov
cmp
xlat
sbb
es
outsb
pop
clc
inc
jmp
es
inc
repz
iret
in
fiaddl
mov
bound
movsl
sub
jbe
andb
sahf
jns
add
cwtl
insb
aam
std
cmpsl
inc
add
pop
cmp
pop
clc
and
mov
xchg
jg
loopne
cmpsl
sbb
jl
sar
mov
test
ret
inc
pop
xchg
push
add
cs
fiadds
lock
add
int3
sub
inc
insb
mov
jne
jnp
repnz
adc
sbb
addb
mov
sbb
incl
adc
in
movsb
add
loope
insb
add
mov
add
xor
jmp
lods
testl
dec
and
sarb
sti
sbb
jmp
add
nop
inc
pop
mov
sarl
pushf
xchg
enter
mov
xchg
loop
mov
ss
mov
lret
mov
or
fadds
sbb
lcall
mov
ss
jbe
xor
mov
jnp
fildl
adc
dec
adc
scas
popl
cmp
ss
lret
mov
or
or
and
add
adc
mov
out
push
hlt
out
test
cmc
lret
inc
xor
mov
xchg
aaa
mov
jmp
sub
adc
mov
and
out
add
outsl
fs
shlb
add
push
lcall
or
push
jge
rolb
jp
stc
int
cmp
adc
movsb
adc
aaa
jl
xor
push
shrb
cmp
xor
out
dec
dec
out
adc
or
idiv
shll
clc
imul
pop
sbb
lods
cmova
push
cld
cmpsl
pop
dec
rcr
push
pop
add
mov
js
std
enter
add
rolb
add
dec
and
push
daa
addl
jg
cwtl
iret
pop
fisttpll
jl
pushf
dec
aam
mov
add
jecxz
and
pop
add
stc
xor
cmp
pusha
add
or
add
and
outsb
xchg
popf
cmpsl
stos
xor
movsb
add
shl
and
dec
addr16
fstpt
jge
pminsw
push
pusha
je
cmp
jle
inc
movsb
sub
lahf
movsl
enter
add
mov
mov
pop
testl
mov
test
in
fcomps
roll
sbb
in
jb
push
arpl
xchg
je
xor
js,pt
sti
mov
dec
outsl
dec
adc
sbb
fbstp
cmp
dec
mov
dec
cmc
test
daa
stos
out
and
pxor
outsb
add
cmp
lea
mov
inc
mov
pop
aad
sbb
push
mov
pop
imul
pusha
loopne
add
test
jmp
loop
add
cmpsl
shlb
popa
push
lock
xor
out
push
cmp
jo
stos
loope
rorl
push
jb
xor
cwtl
aas
jnp
add
enter
cltd
sbb
andb
push
divb
jmp
mov
jl
add
mov
mov
inc
popl
jl
aaa
lahf
sub
inc
xor
and
xchg
xchg
ja
icebp
pop
jge
test
push
adc
mov
in
and
or
nop
mov
xor
adc
in
push
xchg
das
in
add
mov
loopne
xor
sbb
js
mov
xor
mov
aaa
and
sub
push
or
movsb
and
mov
pop
xchg
pop
scas
sbb
jo
jae
cmp
mov
subb
add
jmp
cmp
rolb
add
or
dec
mov
out
cmp
call
xor
sarb
subb
add
das
push
fwait
add
call
push
ror
cmpsb
arpl
jmp
aas
jae
add
mov
int3
push
out
in
jns
repz
push
and
cmp
call
sbb
add
mov
xchg
movsl
aas
fcomps
fsubs
sar
enter
movsw
out
sbb
push
push
mov
inc
inc
pusha
lods
outsb
aaa
jne
add
dec
and
in
pop
cmp
es
mov
jge
int3
in
cs
mov
popf
inc
test
pop
mov
pop
repnz
inc
rcll
divl
dec
mov
add
cmovs
xchg
sub
and
add
ret
fldenv
mov
js
mov
leave
push
sbb
insl
loope
push
cld
test
push
cmp
xlat
std
aas
add
data16
pop
add
push
mov
add
hlt
xlat
cmp
outsb
dec
aad
push
pop
in
add
mov
jmp
add
sub
xchg
pop
int3
rolb
mov
fwait
jecxz
gs
cltd
daa
fs
adc
rcrl
mulb
lcall
dec
mov
nop
sbb
cs
pusha
sub
notb
aad
rorb
ljmp
cmpsb
add
pushf
mov
jmp
add
fucomi
add
mov
sub
mov
jle
mov
vunpcklpd
lcall
jbe
inc
out
xor
xchg
pusha
mov
add
jp
cmp
fistpll
std
pop
lahf
inc
mov
add
imul
ja
add
je
leave
mov
andb
xor
mov
jge
out
or
mov
add
adc
fsubr
dec
call
stos
mov
add
jle
adc
cmp
xchg
push
mov
mov
sahf
sbb
or
cmp
xor
lods
mov
out
add
pusha
add
inc
add
pop
cltd
out
add
imul
xchg
lock
xchg
mov
add
cltd
jae
pop
mov
rcrb
adc
mov
add
push
push
inc
rcll
add
stos
jnp
add
or
or
and
rcrl
add
insl
call
push
lcall
ret
add
push
aas
mov
jmp
out
ljmp
fidivs
add
das
mov
add
sahf
divb
mov
call
movl
sub
xorb
fs
repnz
pop
mov
ja
adc
enter
shlb
jne
cmp
add
xchg
xor
std
cmpl
pop
rcll
adc
imul
leave
push
mov
add
mov
jbe
add
loope
nopl
sub
mov
add
js
add
bound
cmp
xor
add
jg
repz
push
add
or
pop
sahf
enter
lock
pop
inc
or
lods
or
add
jb
mov
frstor
jge
pop
mov
addl
hlt
test
add
sub
add
icebp
addr16
scas
dec
pop
push
xchg
mov
adc
add
push
xchg
addr16
arpl
popa
jo
mov
movsb
mov
scas
dec
add
test
jmp
jae
hlt
jne
sub
les
push
dec
push
pushf
stos
jo
loop
stc
push
xchg
jbe
sti
mov
cmpb
adc
jmp
mov
sub
jne
test
popf
test
das
or
add
dec
call
int3
sbbb
out
xor
xchg
mov
inc
push
and
add
jb
sub
mov
inc
stc
pop
orl
add
rcr
cld
dec
call
adc
sbb
stos
xchg
icebp
sbb
inc
fcom
mov
xchg
jo
jbe
pop
add
xorl
adc
add
pop
xchg
popa
inc
mov
adc
js
sahf
push
sub
fs
jns
testb
out
mov
pop
or
movsb
jl
lods
mov
lahf
mov
mov
inc
or
pop
jns
pusha
add
dec
push
xchg
mov
or
push
and
add
scas
cwtl
mov
mov
in
cmp
sub
add
ret
cmp
popf
or
pushf
cs
lret
xchg
add
push
jl
adc
xor
ljmp
add
std
bound
xor
les
sti
popf
add
pop
sub
or
add
push
dec
imull
in
add
arpl
pop
loopne
adc
outsl
ss
andl
add
movsl
lea
add
mov
jle
lods
pop
cmp
cli
inc
or
cmp
orb
xchg
pop
add
push
pop
stos
pop
inc
enter
cmp
xchg
scas
add
insb
jno
rcll
fwait
ljmp
add
test
push
add
jmp
call
rolb
pop
mov
inc
add
xor
nop
add
adc
insl
mov
add
cs
subb
scas
jbe
add
or
xor
repz
imul
xchg
call
test
adcb
xor
add
inc
add
lcall
scas
mov
fiadds
add
dec
mov
lahf
fldl
sbb
lret
sub
jg
mov
inc
mov
imull
mov
push
pop
xor
cli
loopne
movb
cmpsb
adc
cmp
push
into
mov
es
inc
push
sbb
lods
mov
pop
add
aas
clc
js
fstl
dec
out
je
movsb
cmp
inc
rclb
mov
and
in
xor
mov
inc
lcall
adc
loopne
je
add
in
adc
test
lea
rcrb
pop
jg
add
mov
insb
sbb
xor
xchg
cmpsb
add
iret
mov
sbbb
push
out
xchg
pusha
add
fidivrs
jmp
xor
push
jns
jmp
xchg
push
clc
pop
cli
xor
js
xor
xchg
push
ja
daa
cmpsb
mov
inc
xchg
out
add
call
add
push
or
lods
sbb
scas
mov
add
or
shll
in
pop
or
sub
dec
les
iret
mov
mov
jp
sbb
pop
mov
inc
js
test
mov
aas
dec
mov
add
mov
int3
inc
call
jnp
inc
push
iret
bnd
dec
xchg
shrb
aam
or
mov
add
rcll
nop
xor
popa
std
leave
add
cmp
lods
call
jmp
fucomip
mov
add
add
push
xchg
dec
jmp
loopne
addps
mov
mov
mov
cmp
push
rorb
loop
add
push
inc
in
movsb
pushf
seto
cmp
add
pop
pop
cmp
dec
nop
xchg
sbb
pushf
add
lea
add
int
outsb
xor
sbb
xchg
sub
xor
ljmp
mov
popf
xor
push
pop
inc
sbb
loopne
ds
repnz
cmp
pop
pop
hlt
aam
addr16
inc
adc
fcompl
xor
lret
cmp
jo
add
push
add
movsl
or
popa
es
push
cmp
inc
add
jnp
cwtl
test
inc
lea
add
loop
jb
mov
nop
fcom
sub
add
push
aad
push
adc
lret
mov
or
popa
dec
insl
fdivrl
roll
and
dec
or
test
mov
scas
iret
out
ss
in
lret
insl
pop
pop
sbb
clc
lahf
pushl
dec
aaa
sub
lea
or
sbb
jmp
push
adc
sub
mov
mov
adcl
rol
sbb
mov
mov
lahf
mov
push
out
das
call
xchg
dec
add
mov
js
insl
jle
add
inc
add
bnd
add
xchg
xchg
mov
push
xor
or
push
pop
shlb
push
nop
nop
add
lods
mov
xor
int3
add
push
insb
and
sub
adc
data16
adcb
add
mov
leave
insl
les
daa
jge
adc
adc
xor
push
adc
push
adc
xor
add
gs
add
mov
stos
pusha
subb
add
imulb
outsl
cmp
popa
ret
xor
clc
adc
push
push
mov
add
xchg
add
sbb
add
clc
adc
add
int3
mov
cmc
shlb
dec
or
cltd
inc
lods
mov
scas
mov
movb
ds
aaa
push
loop
inc
pop
jmp
add
into
pop
lock
xor
inc
js
or
negb
add
xor
mov
mov
js
mov
jbe
and
leave
mov
movsb
stos
sub
add
fwait
push
cmpsb
addl
loopne
sti
jmp
ljmp
loopne
popl
xchg
es
lahf
ljmp
adc
mov
add
addr16
sub
arpl
movsl
sub
xor
fadds
fiaddl
pop
sub
ja
push
es
add
cld
lds
fdivl
jbe
add
inc
test
sbb
mov
pop
sub
loope
and
insl
lret
imul
sahf
dec
inc
lea
add
sub
add
sbb
aaa
sub
xor
sub
addl
sub
and
and
pop
outsl
icebp
and
jae
push
inc
orl
xor
dec
les
push
adc
jnp
add
lods
gs
fmuls
add
rcrl
inc
sbb
shl
jp
add
jmp
add
add
sbb
add
xor
push
jp
push
inc
test
inc
cs
mov
cmp
sbb
inc
mov
mov
insb
mov
push
sub
fdivrl
sub
pop
mov
jmp
ret
dec
in
data16
inc
mov
lock
pusha
aas
sub
add
inc
ret
jecxz
out
mov
and
shlb
call
stos
pop
insl
dec
les
incl
lock
clc
nop
outsb
add
shrb
into
dec
aam
punpcklbw
sbb
mov
add
mov
jmp
test
sarl
xor
mov
xor
jo
sub
inc
cmp
popa
icebp
andb
mov
dec
aad
std
jo
mov
lods
add
xor
pop
cmp
in
cmpsb
xlat
ret
add
sub
add
cld
push
mov
xlat
xor
pushf
sub
mov
mov
adcb
fwait
cmp
xor
sub
loopne
cmpb
arpl
das
pusha
pop
push
imul
imul
rcrl
add
fidivs
mov
add
dec
mov
cmpb
add
shl
sub
repnz
add
ss
bound
lods
movsl
nop
push
xchg
sarb
ret
pop
lahf
popf
loopne
sbbl
or
add
add
rcrb
and
repnz
sbb
jbe
cli
and
ret
cmp
jo
dec
adc
pop
push
or
push
out
dec
jmp
popa
inc
and
and
push
mov
iret
sbbl
sub
outsb
jb
sbb
inc
sti
sub
into
jmp
sub
or
jge
jne
xchg
add
inc
scas
notl
xchg
hlt
das
or
pop
pop
rcll
add
mov
lahf
jmp
mov
mov
mov
cld
mov
jecxz
ret
les
aas
xor
pop
and
loope
inc
add
mov
cmp
pop
add
pop
negl
fadds
xchg
loope
inc
adc
outsl
xor
stc
pushf
adc
push
icebp
cmp
scas
or
ffree
and
lock
and
dec
pop
jl
ss
add
stos
mov
pop
push
ret
sub
add
add
test
jae
xchg
push
mov
add
sub
add
mov
pop
xchg
xlat
into
push
jb
pusha
lods
sub
insl
mov
adc
aaa
imul
add
das
outsb
fisubl
dec
mov
daa
xchg
add
in
lret
insl
sub
fisttpll
ret
mov
mov
add
sbbb
jge
popa
mov
xchg
nop
and
cmp
cmp
loop
lock
add
jge
arpl
imul
shlb
fs
cmp
sub
push
push
mov
push
and
in
jmp
pop
pop
test
cmpsl
dec
movsb
pusha
adc
clc
sbb
sbb
clc
loope
fnstenv
jmp
sub
leave
imulw
sbb
lret
lret
pop
inc
push
popf
mov
inc
imul
repz
pop
jne
add
jmp
nop
negb
jb
add
lea
lcall
aam
cwtl
fcmovu
andb
nop
cmp
fs
inc
push
push
mov
rcr
add
iret
popf
cmp
jl
add
pop
and
sbb
xor
push
add
mov
pop
mov
test
cmpsl
mov
add
lods
cli
je
sub
or
in
push
inc
enter
out
imul
add
sbb
out
pop
jl
ja
cmp
pop
call
cmp
lret
data16
cmpsb
je
cwtl
jnp
push
aaa
mov
jge
repz
cmp
int3
inc
cmp
pusha
test
push
push
xchg
insl
and
add
pusha
sbb
cmpb
inc
sbbb
or
push
xor
xor
pop
xor
xchg
add
xchg
xchg
dec
or
fstl
adc
inc
add
ret
add
push
loopne
sub
pop
leave
sti
or
jmp
pop
add
movsb
cmp
repnz
mov
push
cmp
popa
jle
cmp
or
push
sub
mov
xchg
in
in
shrb
add
fadd
mov
lods
adc
add
scas
xchg
movsb
and
mov
jl
cmpsb
mov
out
fsubr
pop
add
stc
mov
and
iret
ret
out
xchg
nop
dec
pop
push
push
pusha
adc
mov
subl
mov
push
or
mov
ds
dec
daa
movsb
push
add
sbb
aaa
ret
add
xchg
call
cwtl
jbe
adcl
pop
repz
xchg
add
stc
adc
add
jns
adc
rorb
adc
add
sbb
ffree
pop
enter
sub
int3
jo
andb
aad
sbb
rolb
pop
pop
cmp
and
pop
js
xchg
and
or
leave
and
inc
fiadds
or
add
mov
lret
sbb
sti
pop
jg
subl
push
pop
daa
push
out
push
pusha
shrl
into
pop
ljmp
dec
push
movsb
roll
shll
add
mov
iret
mov
inc
and
aad
pop
jns
int3
fdecstp
mov
add
sti
fsubl
bound
jae
out
jns
add
cwtl
xchg
dec
or
ret
sub
xor
stos
mov
sti
cmp
sbb
insb
push
pop
out
xor
cmp
pop
dec
add
sar
rol
sti
les
in
bswap
jns
std
mov
movsb
add
loope
mov
add
adc
xor
out
pop
mov
jnp
dec
data16
jb
jmp
es
aad
in
xchg
and
in
sbb
incb
jo
push
xchg
les
subb
je
call
push
xchg
mov
and
inc
aad
test
add
adc
sbb
add
mov
cmpsl
lea
pushf
hlt
cltd
pop
dec
fstp
push
lahf
mov
inc
addr16
ja
mov
stos
sub
addb
or
test
and
imul
push
add
sub
and
lret
fcompl
mov
icebp
push
push
lcall
jb
mov
adc
lea
enter
push
imulb
jbe
popa
rol
lret
push
icebp
pop
mov
jp
or
inc
add
cli
test
or
fiadds
add
ret
push
sahf
push
pop
or
fnsave
lods
sbb
in
hlt
outsl
push
jb
and
xor
stos
iret
add
repz
fidivrs
xor
jae
call
popa
das
loopne
inc
jg
add
pop
rorb
lock
mov
cmp
inc
mov
adc
mov
mov
pusha
loope
sbb
into
lea
inc
xchg
jp
push
imul
pusha
arpl
loope
lock
push
icebp
shll
add
or
incl
add
into
test
add
pop
add
movsb
add
pusha
cmp
mov
jo
mov
xor
lcall
mov
cli
ror
xorb
lea
popa
push
and
scas
cmp
and
in
outsl
sbb
add
push
pop
mov
sub
mov
aaa
stc
add
insl
lock
cmpl
jecxz
rolb
ljmp
sbb
in
and
adc
aad
mov
movsb
incl
sarb
adc
das
add
fidivrs
xchg
pop
lods
mov
jl
or
mov
rorb
nop
jg
mov
int
mov
cmp
les
test
or
imul
adc
sub
cmp
ljmp
dec
fwait
mov
push
push
xlat
jae
add
mov
add
push
pop
xor
stc
fwait
jns
push
adc
cmp
cmp
cld
pop
sbb
cwtl
dec
push
jb
mov
or
rorb
notw
add
icebp
inc
movsl
pop
sub
rcrb
ja
adcb
sbb
sbb
rorl
fadds
add
lods
and
xlat
xor
xor
push
sub
add
inc
xchg
push
out
cmp
jnp
mov
test
aaa
jo
orl
filds
dec
mov
cwtl
xchg
mov
lahf
je
add
and
incl
aam
fstpt
data16
test
push
or
add
add
add
hlt
out
xchg
and
pop
jge
pop
sub
icebp
mov
test
test
pop
add
orl
out
pop
mov
cpuid
int3
test
sub
and
add
xlat
in
add
dec
mov
fcoml
mov
int3
sub
and
roll
pop
call
cmp
call
sub
fnstenv
and
push
jmp
pop
xor
mov
push
or
shr
and
add
dec
cbtw
add
xchg
fstpt
dec
ss
inc
fadds
push
jo
repnz
stc
push
fbstp
pop
push
je
js
jbe
jbe
jo
pop
outsb
add
gs
mov
adc
insl
add
ja
pop
mov
xor
je
add
jno
popl
aaa
push
mov
les
ss
mov
jbe
add
pop
es
popa
out
outsl
add
filds
in
or
jmp
loopne
aad
repnz
inc
push
nop
jnp
push
mov
aam
sahf
push
popa
shrl
or
repz
test
adc
lcall
mov
mov
add
dec
and
lret
xor
add
aad
xchg
sti
in
sbb
lret
mov
add
pop
int
cmp
outsb
mov
sti
pop
out
in
pop
add
shll
add
mov
push
repz
mov
rclb
notb
push
add
outsl
add
add
les
jecxz
js
fiaddl
sbb
xor
add
mov
rolb
or
into
mov
test
jno
push
dec
pop
inc
lods
xchg
or
inc
xchg
jnp
xchg
faddl
test
clc
push
pop
aas
add
iret
cld
test
pusha
cli
push
fwait
rorb
es
sub
add
jbe
repnz
sbb
les
out
cmp
rclb
leave
pushl
dec
loopne
add
ja
sub
inc
add
xor
jl
inc
pusha
ror
jnp
xchg
adc
insb
popa
mov
dec
imul
xor
lea
or
shlb
icebp
and
test
pop
subb
aas
outsl
add
dec
add
xchg
orb
mulb
pop
mov
and
add
jecxz
push
mull
bound
data16
or
or
cltd
lock
cld
and
hlt
add
add
sarb
add
sarl
iret
mov
std
or
sub
inc
loopne
xchg
aas
or
xchg
sub
rcrb
lods
loop
addr16
jno
outsb
jg
push
cmp
outsl
mov
or
int3
sarb
pushf
mov
push
test
movsb
push
sahf
and
test
call
stc
hlt
jnp
adc
sbb
and
add
adc
cmp
les
stc
add
or
xchg
add
and
fwait
add
and
daa
test
mov
adc
loop
jb
or
mov
scas
xor
cmp
movl
and
xchg
in
sub
xor
sbb
addb
cmp
mov
pop
dec
xor
adc
mov
mov
mov
dec
lret
xor
fs
sub
or
into
cmpsl
jge
ret
nop
movsb
out
add
cwtl
mov
xchg
aam
mov
leave
add
mov
and
mov
add
or
loopne
add
nop
mov
into
xor
je
add
arpl
incb
insb
dec
roll
xor
mov
rorb
and
adc
add
stc
pop
mov
mov
adc
lock
out
push
imulb
les
and
pop
icebp
xchg
scas
xor
aad
inc
js
add
sbb
sub
push
hlt
add
cmp
call
mov
mov
stc
sbb
adc
cld
jbe
movsb
call
aas
and
mulb
add
cmpsb
cmp
mov
jbe
dec
mov
jne
push
adc
pop
pop
xorb
add
leave
lock
sbb
sbb
xor
jl
sub
jo
xor
xlat
pop
fildll
scas
aas
addr16
add
cmp
incl
stos
adc
nop
mov
inc
add
rcr
pusha
adc
add
jns
add
test
sub
xchg
icebp
sub
sub
inc
rcr
lcall
cmpsb
dec
mov
andb
add
into
lea
cmpsb
sbb
scas
xchg
xor
add
je
out
imul
pop
xor
xorl
outsb
add
bnd
movsl
out
icebp
add
pop
clc
ja
add
outsb
xor
cmp
les
jne
and
fldt
xchg
jae
movb
pop
div
push
int3
sbb
scas
jae
stos
jge
mov
inc
in
fisubrl
subb
xchg
add
cwtl
and
dec
and
sbb
cmp
mov
jl
pop
into
cmp
or
push
or
ss
icebp
mov
add
mov
add
test
add
std
add
mov
mov
sbb
repnz
or
aam
je
pop
xchg
sbb
add
in
or
mov
mov
xor
fdivrl
or
cmp
sbb
js
mov
imul
mov
mov
movsl
cmpsl
cwtl
jbe
add
jbe
out
xor
fiaddl
repz
enter
test
jle
inc
adc
fdivl
add
inc
add
ja
sahf
mov
repz
aam
sbb
fbld
mov
insb
mov
inc
mov
pop
push
mov
lret
mov
xor
lcall
and
add
or
add
mov
popa
ret
fmul
mov
adc
fcoml
cmc
jmp
xor
mov
jne
sahf
add
icebp
jbe
jp
mov
lods
loop
mov
cwtl
push
ret
jo
cmpl
mov
cmc
and
call
mov
pop
pop
add
dec
adc
pusha
leave
in
rcrb
or
adc
fwait
in
scas
add
bound
test
inc
jg
jmp
add
and
iret
inc
dec
push
or
push
loopne
jns
lods
enter
cltd
add
and
jb
adc
mov
xchg
adc
scas
mov
repnz
add
add
push
addb
xchg
scas
sub
hlt
stos
jl
scas
insb
or
add
cmp
cmp
xchg
xchg
stos
or
shrl
add
dec
and
sbb
push
inc
cwtl
hlt
sub
add
shlb
jns
arpl
pop
nop
inc
dec
cld
push
rcrl
out
ljmp
repz
mov
les
sbbl
mov
cmpsl
roll
lods
std
cmp
add
scas
cmpsb
mov
add
sarb
lcall
pop
xchg
sbb
lock
inc
pushf
scas
mov
sbb
leave
popa
push
clc
mov
add
insl
nop
insb
clc
add
mov
dec
jne
pop
arpl
push
push
lcall
dec
sbb
push
pop
cmp
dec
in
outsl
xchg
nop
dec
add
clc
push
pop
outsb
pop
add
dec
push
xor
das
jge
fiaddl
clc
mov
and
adc
add
mov
jp
add
icebp
push
fadds
xchg
add
int
pop
lods
scas
rolb
mov
dec
and
popa
add
push
out
dec
inc
xor
jae
dec
or
mov
mov
add
scas
in
push
cltd
pop
jne
push
dec
dec
rol
bound
push
dec
das
les
adc
pavgb
push
xor
call
push
mov
arpl
add
sarb
pop
cmc
jnp
pop
xor
cwtl
lock
ja
jb
insl
test
pop
cmp
push
and
sub
cmp
mov
setb
mov
xor
add
mov
pop
sbb
sub
inc
stc
mov
xchg
dec
add
inc
cwtl
lcall
push
lret
dec
sbb
pushf
sub
add
jb
pop
or
and
sub
add
pusha
sti
push
decl
cmpl
je
fbld
ret
push
out
sar
cmp
pusha
push
call
fiadds
adc
aaa
fiaddl
outsl
nop
xlat
sti
push
pop
add
inc
clc
cmc
je
dec
faddp
pusha
xorb
jns
cmp
cld
out
inc
xchg
mov
test
dec
push
or
mov
out
jno
test
inc
into
pop
jecxz
add
and
in
push
mov
repnz
push
inc
cmp
mov
xchg
mov
ret
push
or
inc
xchg
pushf
xor
rcrl
mov
and
jge
push
addr16
jo
add
mov
lcall
or
clc
cwtl
pop
roll
pop
and
add
sub
add
mov
movsl
inc
pop
xor
ret
enter
xchg
ficoms
mov
pop
imul
xchg
addl
test
add
sbb
lock
jmp
mov
adc
and
add
add
les
pop
stos
jb
out
sbb
sub
sahf
je
fsub
jno
jl
jae
out
adc
xchg
je
testl
cmc
inc
int3
rol
lret
pop
ret
test
sub
add
add
push
jg
nop
call
lock
or
call
shrb
or
movsb
jns
sbb
mov
add
sbb
mulb
push
adc
insl
or
movsl
sub
add
dec
push
in
add
es
cld
ds
scas
pop
nop
inc
xchg
inc
mov
jp
jg
pusha
jno
and
adc
aas
or
in
ret
or
jo
inc
push
les
add
sub
pavgb
mov
stc
jecxz
imul
shrb
mov
pusha
bound
push
push
dec
loopne
xor
sti
or
callw
es
fcomps
jb
mov
sti
xchg
and
mov
adc
fsubrl
push
ds
push
insb
lock
decl
insl
push
js
push
push
cs
pusha
adc
test
inc
pop
cmpsl
cmp
rol
fsubp
mov
inc
mov
popa
pushf
jl
imull
es
mov
in
sbb
divl
lcall
xchg
inc
push
addb
addb
xor
add
and
jge
xchg
dec
int
sub
inc
push
faddl
lods
mov
pop
sub
ljmp
filds
mov
pop
add
cmpsb
mov
add
jle
lock
nop
add
push
popl
cmpl
add
rcl
inc
in
nop
js
fsubr
les
les
rclb
je
int3
add
pop
test
sbbl
data16
adc
jp
jle
pop
loop
lock
sti
cvtdq2ps
lds
pop
leave
cmp
subl
les
call
cld
add
push
push
push
add
and
xchg
ds
or
and
enter
jnp
or
cmp
mov
insb
orb
scas
pop
rcr
add
sbb
add
inc
mov
pop
add
enter
cwtl
or
and
and
cmp
repnz
add
or
out
xchg
pop
cmc
push
add
popa
cltd
and
and
call
outsb
lcall
out
lock
frstor
adc
sub
arpl
outsl
pop
lods
jle
add
mov
xchg
sbb
and
leave
out
sbb
sahf
out
nop
test
shlb
or
stos
xor
lcall
or
add
test
jnp
call
jge
faddp
or
pop
insb
and
mov
dec
into
add
shrl
mov
xor
or
add
add
outsl
push
jmp
xorb
or
sti
inc
dec
push
add
in
je
insb
adc
out
sub
or
push
pop
cli
cltd
push
sbb
inc
mov
test
xor
aaa
add
jg
inc
sub
cld
push
in
aas
gs
pusha
pop
xlat
cmpsl
dec
aam
xor
popa
sbb
repnz
sbb
or
jmp
pop
dec
push
mov
ja
aam
lcall
sub
sbb
insb
outsl
jg
xor
mov
sbb
or
stos
pop
add
xlat
sbb
data16
inc
iret
fldenv
add
and
pop
rcrb
js
and
out
outsb
repnz
xchg
aam
add
pop
push
sub
js
mov
mov
mov
hlt
adc
pop
add
out
push
out
jno
mov
mov
loop
xchg
out
xchg
mov
sarb
clc
push
dec
fcmovnbe
mov
mov
scas
jecxz
js
aam
and
shlb
jo
and
orb
dec
push
mov
es
pop
nop
add
and
clc
int3
add
rcr
push
sub
pop
jns
daa
add
xor
adc
add
pop
pusha
stc
pop
or
ja
repnz
add
sub
xlat
mov
js
enter
pushl
xchg
jle
int3
ret
pusha
xorl
into
lret
push
out
ja
fiaddl
cwtl
xor
outsb
adc
xchg
mov
or
jg
sub
loope
test
inc
xchg
hlt
mov
shll
xor
add
stos
lods
rcrl
xchg
fnstsw
mov
fs
lds
or
das
test
mov
mov
mov
sub
xchg
jno
add
daa
lret
pop
sub
incl
dec
push
in
push
roll
or
fdivs
add
jno
push
into
push
xchg
fisttpl
sbb
xor
fcoms
xchg
in
xor
push
mov
fstpl
repnz
ljmp
mov
fsubl
fstp
add
add
add
push
and
pop
ret
jo
popa
add
bound
pop
dec
sar
sbb
enter
leave
rolb
mov
pop
xorb
loope
mov
mov
add
xlat
je
or
fldl
add
dec
add
pop
or
rclb
add
pop
cwtl
push
clc
and
dec
or
add
jne
rclb
add
mov
mov
push
mov
lock
xchg
sti
or
stc
fucomp
sbb
or
push
mov
sub
daa
mov
insb
add
sar
sub
test
insb
or
movsb
or
add
ret
xchg
sbb
pop
or
shll
test
repnz
imul
lods
add
inc
push
xchg
xchg
cmp
xor
push
push
lock
and
pop
lret
stos
stc
or
out
enter
fs
sbb
add
cld
jns
add
movsl
mov
lods
dec
fwait
pusha
mov
and
mov
jle
pop
in
ret
imull
lahf
aad
lea
nop
adc
aam
dec
pop
push
mov
test
enter
add
dec
fs
mov
and
std
pop
or
fdivrl
out
jle
mov
or
add
pop
and
lds
fdivl
mov
icebp
mov
subl
dec
pop
add
mov
and
sbb
sbb
rcrb
inc
iret
aaa
sbb
outsl
mov
mov
mov
xcrypt-cfb
cmpsl
es
inc
lock
or
test
dec
es
cmpsb
and
les
sbb
add
ffree
jbe
sub
push
xor
sti
stos
in
test
lcall
dec
in
or
je
mov
dec
aam
cmpl
dec
jmp
dec
push
lock
mov
leave
mov
sub
sbb
outsl
fdiv
mov
je
sbb
inc
loopne
test
subb
lcall
inc
enter
inc
cmp
dec
cmp
lock
jb
nop
arpl
pop
shrb
je
movsl
shr
mov
adc
lsl
filds
mov
iret
and
loop
repz
pop
xchg
mov
add
fidivs
sub
xor
pop
add
dec
add
aas
mov
pop
lret
loopne
xchg
mov
mov
ds
pop
inc
dec
inc
sahf
loopne
jbe
aas
je
jge
add
or
data16
jl
pusha
and
dec
add
mov
fildll
int3
pop
scas
sbb
outsl
add
test
movsl
push
lret
arpl
lret
push
push
mov
clc
xchg
add
inc
and
js
cmpsb
cmc
add
xor
jne
insl
inc
jno
setnp
xor
repnz
and
aaa
cmpsl
cmp
in
daa
loope
in
test
lock
push
subl
jmp
je
dec
adcb
cwtl
inc
test
and
and
adc
or
inc
in
test
mov
scas
fists
in
adc
jle
test
or
test
xchg
xchg
cmp
and
mov
cld
adc
mov
xor
shlb
add
adc
popf
cli
lea
loop
or
dec
std
inc
add
and
out
jo
dec
jb
sbb
mov
xchg
mov
jmp
lret
inc
xchg
arpl
loop
pop
cmp
adcl
rcrl
sarb
add
inc
cli
sahf
fisubs
cwtl
add
enter
sbb
cmp
mov
pop
movsb
sub
add
mov
jne
push
add
shl
add
andl
in
lods
add
insl
add
pop
bound
cwtl
and
jle
add
notl
add
mov
push
mov
dec
add
pop
push
je
add
and
mov
pop
xor
fwait
mov
push
xor
jp
out
sub
sbb
mov
or
les
adc
in
mov
push
cmc
add
cli
popf
mov
push
mov
mov
push
sbb
shlb
sub
cmp
and
sti
dec
test
pusha
int
shlb
add
push
dec
test
adc
add
fsin
or
sbb
iret
data16
aas
cmpsb
xor
daa
pop
pop
xchg
inc
sbb
loope
sub
shlb
push
mov
out
sub
push
pop
movsl
scas
xchg
or
push
rolb
xorl
dec
jge
dec
nop
and
into
outsb
xor
or
add
scas
xor
sbb
addr16
std
fs
hlt
jecxz
add
push
push
mov
aam
stos
lock
or
sbb
push
mov
xor
in
jo
fcom
sbb
xor
pop
inc
pop
cmp
add
outsl
pop
mov
and
sbb
fldl
call
pop
jne
scas
inc
rcrb
add
pextrw
data16
je
inc
push
jmp
clc
cwtl
pop
jo
push
popf
adcb
mov
add
lods
mov
subb
and
ja
adcb
popa
mov
cwtl
jae
cmpsl
and
dec
ljmp
imulb
mov
add
es
pop
gs
pop
lock
and
andps
jl
int
or
and
enterw
mov
inc
lods
mov
push
add
in
and
add
aaa
daa
fmull
rorl
movsl
imul
push
bound
xchg
mov
cli
into
imul
pushf
test
lea
inc
ss
mov
nop
cld
push
jno
add
dec
mov
add
jns
sbb
mov
insl
add
popf
add
into
jo
hlt
lea
int3
xor
mov
loopne
jno
sbb
sbb
addb
aaa
adc
loop
push
add
mov
sub
in
pop
push
loopne
out
add
mov
or
popf
add
int3
sbb
or
sbb
cmp
mov
inc
or
test
xchg
or
insb
xchg
into
outsl
cwtl
inc
jp
push
mov
adcb
add
leave
cmc
adc
es
in
ds
jle
push
popa
lret
movsb
enter
je
in
pushf
addb
icebp
inc
aam
and
fstps
test
add
jae
adcb
int3
xchg
jno
jbe
mov
movq
out
in
aam
adc
mov
push
sbb
insb
scas
test
or
into
adc
add
mov
in
les
adcl
rcrb
pop
or
pop
insl
ljmp
push
sbb
int3
shlb
add
push
and
adc
out
stos
ss
xlat
ror
pop
pop
lods
dec
cmp
outsl
or
repz
mov
jne
mov
ret
cmp
adcb
xor
sti
outsb
add
movsb
loope
or
mov
loopne
or
aam
sub
add
mov
xchg
pop
adc
ret
add
xor
scas
pop
lea
mov
sbbl
stos
sahf
or
sbb
in
shl
nop
hlt
inc
rolb
cmp
pop
repz
les
cld
add
inc
pop
filds
adc
pop
test
test
dec
dec
xor
cmpsl
xchg
js
mov
out
sbb
pop
popa
dec
mov
ds
sbb
jnp
in
push
add
mov
push
push
lods
mov
push
xor
or
add
fcomps
gs
push
cld
and
dec
push
test
fs
es
clc
sbb
daa
das
jne
xchg
add
sub
subb
jg
stos
mov
sbb
push
jp
lds
aad
sahf
adc
inc
push
mov
lds
mov
xchg
sub
mov
fists
jae
outsb
addb
pushf
dec
sub
mov
mov
xchg
mov
push
in
sbb
xor
stc
lods
add
pushf
add
shl
enter
dec
sbb
and
lods
inc
aam
dec
add
add
add
std
cmp
mov
and
and
loopne
fistpll
mov
and
add
scas
mov
pop
cli
mov
pop
out
testl
dec
scas
jne
add
pop
adcb
or
ret
lret
xor
push
jg
leave
or
add
inc
cltd
stos
sti
mov
xchg
popf
loope
inc
cmp
aas
dec
jbe
inc
mov
sbb
cwtl
and
cmc
cmp
add
lock
jne
rcrb
jo
lret
test
prefetchnta
push
add
jge
cltd
add
add
das
mov
cmp
jmp
add
xlat
aad
imul
add
sbb
fs
loope
gs
outsb
add
test
xchg
inc
sbb
xchg
pop
xor
lock
jae
add
test
inc
mov
outsl
dec
and
clc
mov
fcomip
gs
jmp
mov
lret
rcrb
add
lds
pop
dec
jg
xor
cld
hlt
cmp
cmp
cmp
adc
pusha
in
mov
mov
aad
cmpsb
pop
pop
call
inc
icebp
jecxz
dec
add
xorl
imul
popl
xor
cmp
jle
mov
xchg
push
cmp
idivb
sbb
hlt
cld
sub
mov
sbb
sahf
mov
cmp
add
push
sarl
in
cmp
or
dec
test
ret
add
mov
lcall
mov
pop
imul
test
or
shll
sbb
in
std
fldl
or
cli
or
mov
pop
gs
insb
clc
scas
add
outsb
pop
jge
jl
shlb
push
mov
or
and
mov
cmp
or
add
mov
arpl
test
fdivrl
cli
or
xchg
arpl
outsb
or
filds
pusha
add
lcall
pusha
je
pop
inc
dec
mov
scas
sahf
dec
pop
jb
push
aad
push
pop
push
sti
add
aam
jne
push
mov
gs
imul
push
aaa
enter
cs
icebp
fninit
push
xchg
add
lods
mov
and
xchg
mov
pop
push
data16
jns
cmp
xor
cltd
mov
cmp
daa
xchg
cmp
lock
inc
inc
cmp
in
orb
sbb
pop
in
xor
fmul
ret
fisttpll
jge
lcall
ret
insb
mov
pusha
rclb
sub
add
test
fsubrs
test
out
xchg
jne
imul
add
add
push
push
sbb
ja
out
ret
pop
mov
lds
dec
scas
subb
leave
subb
add
repz
movsb
dec
aas
in
andb
xchg
push
es
add
popa
in
imul
sbb
insl
mov
cmp
add
shl
cmpsb
enter
lret
xchg
push
xor
jp
add
popf
fiadds
ret
and
lock
popa
rcrb
das
pop
pop
into
cmp
dec
test
call
sub
add
and
outsl
arpl
mov
add
xchg
mov
xchg
insb
pop
pop
popf
adc
outsl
jnp
pop
popa
aaa
in
stos
aas
mov
xchg
orl
inc
xchg
fbld
rolb
aam
ljmp
pop
aas
or
add
adc
fnstcw
mov
adc
ficomps
fadds
movsl
clc
sbb
jmp
dec
inc
add
mov
pop
shrb
in
mov
push
inc
pop
sbb
lcall
clc
dec
cs
lock
lea
add
push
ret
sub
xor
push
idivb
and
and
enter
mov
jns
cmp
and
cmp
mulb
fwait
add
or
roll
imul
stc
dec
mov
sub
adc
fldl2t
xchg
pop
push
mov
and
ror
aas
xor
stos
jmp
in
rcrb
mov
add
cmp
iret
jno
cld
lea
cmp
clc
mov
shlb
test
mov
add
push
scas
add
dec
mov
push
xlat
mov
pop
test
sub
jg
scas
xchg
add
sbb
xor
add
rorl
movsb
repnz
unpcklps
pop
movsl
add
hlt
fdivr
dec
lcall
pop
jl
popf
add
popa
pop
mov
xchg
aam
add
mov
test
add
fs
into
mov
les
cmp
sbb
cli
sti
dec
fiadds
cmp
adc
jg
pop
mov
and
aam
mov
sub
xchg
and
mov
sub
jle
adc
xorl
add
add
cwtl
popf
add
bound
insl
movsb
call
enter
or
bnd
add
inc
mov
jns
cmp
pop
sbb
adc
add
stos
pusha
pop
add
idiv
dec
out
or
xchg
jb
lahf
lcall
or
ljmp
xor
pusha
xchg
cmp
mov
aaa
mov
cld
inc
or
mov
cli
mov
mov
je
xchg
lods
jg
mov
cwtl
and
jmp
xchg
lds
in
cmp
aam
ret
cwtl
jae
sbb
cmp
jle
fs
adc
xorb
jmp
sbb
dec
add
cmp
xor
jl
xor
or
inc
movsb
test
sub
ficomps
out
sbb
inc
add
adc
mov
fildl
or
fsubs
loope
movsb
cmp
inc
arpl
mov
or
test
or
fdivr
push
adc
jbe
pop
repnz
push
mov
in
jno
add
nop
repz
mov
mov
movsb
cmc
and
mov
adc
add
or
add
dec
outsl
sbb
cmpsl
dec
push
dec
cmc
pop
and
mov
loopne
jl
fldcw
pop
xchg
jl
iret
pop
cmpb
sbb
cltd
add
lock
and
or
pop
sub
xor
add
int
jge
std
push
xchg
sbb
loopne
test
pop
scas
dec
es
adc
ret
adc
sarb
out
popf
adc
push
pop
sub
pop
sub
in
mov
loopne
lock
imul
cld
inc
and
loopne
add
cmpsl
xlat
jmp
pop
xor
addb
scas
pop
loopne
xlat
incl
mov
lods
rolb
xchg
cmc
jmp
pop
bts
xchg
jge
and
fimull
xchg
into
xlat
xchg
mov
outsb
push
jbe
push
mov
mov
js
jg
xchg
adc
pop
jecxz
dec
jp
sbb
mov
add
cmp
inc
sub
jle
jle
add
xor
sarl
add
sub
and
xchg
inc
ljmp
addl
mov
sbb
loopne
mov
add
xchg
mov
sub
fmull
imul
ret
idivl
dec
fdivrl
add
mov
mov
pop
add
stc
add
push
out
test
faddl
or
scas
xor
loopw
push
cltd
xor
iret
nop
insb
jb
pop
sub
movsb
push
add
and
pushf
mov
adc
pop
int
or
shl
es
addb
orb
call
xchg
sbb
push
jg
dec
cmpl
clc
mov
mov
sarb
xor
add
xor
lret
pop
xchg
xchg
add
jmp
jmp
and
push
cmpsl
incb
sbb
sbb
je
clc
adcb
aad
adcb
jno
cmp
lret
xor
mov
mov
xchg
lods
pop
in
mov
lds
mov
cs
das
cmc
fidivrl
nop
filds
enter
int
mov
add
test
inc
lahf
ret
add
mov
mov
cmpsl
cmp
xor
std
fcoms
adc
fisubl
sub
sbbl
add
dec
xor
int
mov
inc
imul
xchg
sbb
test
pop
or
scas
cmp
std
mov
inc
sub
push
loop
cmp
or
sub
adcb
add
xlat
jbe
and
xorb
mov
cmpsb
test
dec
gs
mov
test
mov
js
add
sbb
fiadds
lahf
inc
lret
pop
ret
pop
add
jb
mov
pop
add
mov
add
insl
jl
pop
xchg
pop
sub
inc
jg
add
mov
push
mov
fadd
mov
repz
daa
xchg
inc
roll
and
outsl
rclb
aas
or
xchg
cltd
mov
hlt
or
fldt
in
or
fidivl
iret
rolb
or
fucomi
cmpb
inc
clc
sbb
lds
rorb
inc
inc
lods
mov
test
add
push
jl
fsubr
in
add
stos
in
sub
aaa
mov
adc
dec
scas
les
cltd
pusha
xor
bound
pop
fsincos
lea
dec
cmpsl
sbb
out
enter
jnp
jge
pop
xchg
mov
gs
mov
sbb
adc
xor
sarl
mov
mov
sub
cli
add
imul
mov
mov
ret
and
in
loop
fcoms
out
rcrl
int3
roll
pop
clc
push
loopne
cmp
jnp
add
into
les
mov
aas
jne
insl
outsl
and
add
fs
jb
sbb
addr16
repz
mov
add
cmp
or
dec
sub
cmp
das
das
inc
loopne
shl
nop
inc
in
sbb
jl
cmpb
cmp
pop
mov
addr16
add
sub
loopne
cmc
push
sbb
je
mov
add
je
adc
add
sub
push
pop
and
inc
addb
cmc
add
pop
add
add
and
lds
pop
inc
jge
pushf
std
add
rclb
jbe
add
out
ret
pop
fwait
sbb
add
mov
cmp
add
add
std
das
jmp
xchg
cmp
push
scas
mov
adc
adc
cmp
ret
pop
xor
inc
or
xor
cli
hlt
add
lcall
add
cs
fucomp
lret
in
sti
push
scas
add
cmp
mov
icebp
push
or
jne
add
add
out
incb
adc
jl
xlat
scas
les
decl
xor
xchg
pop
call
inc
imul
push
cmp
pusha
or
xchg
and
cli
mov
out
out
inc
out
lock
jbe
mov
cmpsl
add
xor
mov
mov
xchg
lcall
add
stc
loop
out
cld
scas
mov
xor
jb
lds
cmp
testl
int3
or
xchg
sbb
rolb
dec
mov
add
das
sbb
ret
xchg
popf
add
sbb
jnp
inc
pop
or
dec
in
js
add
sbb
mov
cmp
cmp
in
sub
mov
add
nop
jns
js
add
adc
sbb
fdivr
push
aaa
test
loop
xor
lret
sbb
add
mov
movsb
ret
lock
out
or
aas
lods
xor
int3
notb
sbbb
mov
or
sbb
cltd
pusha
xchg
fisttpll
sbbb
addr16
adc
sub
lods
cld
clc
add
jmp
sbb
in
jae
add
jns
dec
mov
movsb
fmul
add
sub
aam
add
xchg
mov
jnp
es
repnz
sbb
int
das
jnp
add
loope
outsb
push
roll
add
addb
sub
push
sti
add
int
mov
or
or
adcl
std
pusha
pushf
sub
xlat
loopne
addr16
jno
aam
push
push
or
xchg
mov
mov
xchg
clc
pop
xchg
push
add
pop
xor
fmuls
filds
inc
jle
ljmp
orb
xchg
loopne
mov
adcb
sub
dec
pop
ficoml
mov
pop
aas
pop
gs
push
and
outsb
add
adc
pop
mov
test
ljmp
cmp
mov
cmp
jg
hlt
add
fcoms
mov
imul
inc
xor
call
cmc
sti
ljmp
mov
imul
jne
mov
out
mov
bound
bswap
mov
and
imul
cmp
mov
fsubr
or
js
add
rorl
cli
or
mov
sub
pop
and
scas
xor
jecxz
xchg
dec
nop
out
pop
push
inc
movsb
dec
xorb
outsl
mov
push
xchg
out
xor
cmpsl
jle
add
mov
ret
hlt
fbstp
insl
sbbb
mov
adc
int3
loop
clc
dec
mov
add
lds
add
cmpsl
imul
xchg
xchg
mov
repnz
add
nop
loopne
add
mov
loopne
sbbl
mov
add
xor
add
cltd
pop
pop
loop
sbb
pop
je
lret
sbb
test
loopne
test
insb
inc
lods
inc
add
mov
mov
icebp
in
push
inc
loopne
rclb
add
loopne
fmull
sbb
leave
add
jmp
je
in
cmp
and
loopne
xchg
add
mov
repnz
lock
lods
jno
add
movsb
enter
or
xor
or
clc
out
repz
add
pop
aam
pusha
mov
stc
add
fwait
mov
fisubrl
mov
or
mov
inc
sub
pop
pop
jns
mov
aaa
sub
push
add
dec
movsb
mov
loope
scas
push
mov
mov
incb
and
push
sbb
int
orb
mov
mov
in
cld
pop
ds
sub
cmpsb
jmp
imul
adc
js
cmp
fiaddl
mov
fistpll
xchg
adc
call
push
mov
outsl
rolb
xor
mov
push
outsl
in
pop
pop
ret
popa
jo
cli
stc
cmc
add
adc
out
pop
cmpsb
jo
add
imul
repz
testb
add
rcrl
and
stc
dec
or
es
outsb
jno
add
inc
ljmp
gs
sub
hlt
add
sbb
inc
lret
push
ds
cmp
ret
incl
mov
add
inc
in
or
push
enter
push
ret
jae
and
ret
mov
add
ret
in
rcrl
jno
rcrb
ror
jmp
mov
xchg
cld
lea
xor
rcrl
scas
addb
lret
pop
outsb
push
sar
aas
inc
hlt
fsubp
or
sub
push
dec
fldl
inc
adc
or
loopne
push
out
ss
push
sub
inc
f2xm1
adc
cmc
mov
jne
insb
loope
test
std
int
jp
add
sbb
mov
gs
fcompl
int3
add
jne
sub
aam
scas
lahf
pop
cld
pushl
cmpsb
cs
outsl
out
stc
mov
push
idiv
shlb
pushf
jo
ret
push
mov
pop
jne
pop
adc
add
lret
mov
fucom
and
mov
fsub
mov
jno
pop
std
js
mov
sub
add
mov
mov
push
xlat
pop
sbb
mov
cmp
and
or
insl
cmp
imul
push
push
mov
cwtl
inc
jp
imul
into
mov
test
sub
scas
mov
sti
xor
add
xchg
fnop
xor
mov
lret
add
andb
mov
add
push
jmp
add
mov
adc
ret
ja
jne
mov
fstl
mov
call
test
cs
iret
and
in
pop
push
xchg
and
xor
pop
mov
add
pop
pushf
jns
mov
pop
leave
jle
push
es
sbbl
jnp
or
add
bt
test
in
aad
nop
jb
mov
inc
pop
add
rorl
add
jmp
adc
add
lds
ljmp
push
daa
inc
push
push
mov
ds
add
or
and
outsl
jmp
insb
int
xor
add
clc
mov
addr16
push
fadds
sbb
mov
adc
sub
or
sbb
xorb
pushf
andb
idivb
mov
jo
js
and
pop
mov
idivl
roll
fistpll
popl
xchg
push
push
cwtl
pop
jle
fs
out
int3
pop
and
loopne
sbb
gs
add
call
mov
xor
movsb
add
pop
test
pop
sarb
dec
mov
mov
mov
pusha
movsb
xor
mov
repnz
pusha
dec
dec
loope
inc
push
add
and
loopne
cmp
roll
add
xor
dec
int
add
cmp
loop
mov
push
xchg
testb
test
pop
adcb
xchg
testl
jne
rclb
push
push
aas
mov
xchg
in
sarl
mov
fnstcw
clc
lahf
loopne
adc
daa
adcb
cs
adc
out
repz
jmp
aad
sbb
pusha
push
repz
pop
inc
add
addb
test
stc
jo
jno
popa
fiadds
fdivs
lahf
scas
nop
clc
or
add
cld
add
mov
adc
mov
bound
not
add
adc
fs
aaa
xor
pop
and
shll
mov
jmp
int3
pusha
sub
mov
dec
mov
movsb
pusha
jno
adc
jnp
jmp
adc
into
sub
popf
idivb
push
cmp
insl
loopnew
ret
lcall
push
mov
inc
cmp
sti
add
and
add
xor
clc
inc
in
xchg
hlt
add
pusha
adc
jbe
aas
cwtl
jo
test
fcmovb
lods
orb
shr
orl
in
lea
push
mov
lahf
enter
fldenv
fcom
sahf
add
out
xchg
xor
xchg
rolb
mov
pop
and
cmp
add
cmpsl
push
mov
test
add
xor
out
mov
xchg
sbb
xchg
shrb
adc
scas
or
xor
popf
stos
nop
mov
cmp
add
cwtl
punpckldq
inc
pop
fisttps
jnp
js
repnz
add
pcmpeqw
add
add
or
mov
dec
jge
pop
add
mov
mov
js
pop
cwtl
sub
pop
scas
xchg
or
push
inc
addr16
outsb
fs
add
std
xchg
int
mov
push
add
pusha
loop
dec
add
das
xor
jno
je
out
xor
es
add
mov
stos
jne
xchg
adc
xchg
in
and
add
repz
or
les
cmp
cmpsl
mov
neg
inc
jle
xor
mov
inc
iret
std
fisubl
xorb
stos
mov
mov
add
mov
or
cmp
es
js
add
jge
out
cmp
test
fs
and
out
pop
test
mov
fnstsw
ret
mov
mov
fwait
pop
mov
and
xchg
cmpsb
fld
add
fdivrs
inc
jnp
inc
mov
sbb
je
inc
scas
imul
push
inc
inc
andb
mov
push
add
cmp
dec
push
shl
movsl
movl
and
lock
aaa
lea
xchg
pushaw
popf
ficoml
mov
sahf
cmpsb
lahf
inc
add
lds
mov
repnz
mov
call
cmp
mov
pop
xlat
fwait
jecxz
in
xchg
fiaddl
add
push
inc
movsl
xchg
cwtl
nop
xchg
out
add
popa
outsb
ret
add
cmc
movsl
inc
xchg
loope
add
inc
push
lock
push
add
nop
xor
push
add
pop
xor
lods
mov
mov
into
subb
in
in
imul
mov
sbb
roll
pop
push
movsl
xchg
lods
pusha
out
xchg
in
add
xorb
mov
add
into
xor
lret
fadds
shl
and
or
add
out
adc
jne
test
insb
lock
scas
push
mov
sbb
xor
mov
ret
imul
cmp
xchg
add
shrl
lret
adc
or
loope
call
in
add
mov
clc
or
testb
outsb
clc
dec
cmpsb
adc
lcall
mov
movsl
cmc
lea
and
in
mov
jbe
daa
dec
sbb
pop
xchg
mov
out
ds
pop
mov
cli
inc
add
jmp
add
and
scas
es
inc
sub
inc
xor
cmpsl
jl
xlat
incl
sbb
mov
add
pop
adcl
add
jle
add
ja
jns
nop
js
push
adcb
std
inc
mov
add
adc
int
xor
mov
test
fistpll
repnz
add
adc
push
mov
add
pushf
inc
mov
add
xchg
cmp
add
mov
sbb
int
or
into
add
addr16
ljmp
lods
inc
shll
aaa
mov
inc
push
add
outsl
pusha
pop
dec
sub
mov
cmp
sub
mov
repz
add
test
mov
dec
mov
push
pusha
jmp
adc
xchg
adc
loope
movsb
sbb
mov
pop
jno
xorb
mov
jne
add
jno
adc
ret
add
xchg
push
jne
sbb
pop
and
out
sbb
sbb
sub
aas
cmpsl
aam
leave
inc
sti
add
fiaddl
dec
fcoms
add
mov
cmc
aas
loopne
cld
or
test
addb
leave
xchg
decl
mov
or
loop
jnp
jne
push
test
or
sub
imul
std
fcoml
mov
ret
and
xchg
jo
and
push
mov
push
push
ficoml
ret
and
addb
dec
in
das
sbb
aaa
ja
mov
inc
movsb
add
cmp
stos
add
mov
ss
loop
int3
jl
pop
shll
test
xchg
jnp
ja
xchg
enter
cmp
or
mov
fnstcw
pop
rorb
jae
add
das
or
or
mov
punpcklwd
fsubrp
fidivrl
or
push
arpl
call
leave
mov
mov
add
sub
or
add
and
push
adc
add
mov
leave
add
push
and
movsl
ffreep
mov
pusha
add
fwait
push
xchg
sahf
adc
pop
imul
rclb
add
cli
push
dec
xchg
sub
mov
das
icebp
loopne
sahf
mov
push
and
sar
and
lcall
xchg
in
js
lods
out
pop
or
insl
jge
sub
adc
daa
push
loopne
lcall
cmp
shlb
out
mov
mov
cmp
jmp
out
sahf
mov
jl
add
in
pop
mov
cld
xchg
fiadds
mov
xchg
add
add
pop
inc
inc
pop
bt
dec
sti
clc
lock
sub
push
push
add
stc
scas
mov
arpl
aam
push
push
lret
icebp
fwait
dec
sub
or
fimuls
mov
mov
lods
sub
or
test
and
xchg
push
and
push
shll
mov
enter
jle
sbbb
mov
pop
adc
xlat
outsb
shrl
mov
cmp
xorl
add
cmpsb
mov
push
adc
subb
push
pop
jae
inc
or
adcb
lock
push
cmp
add
xchg
xchg
adc
shlb
lcall
xor
rcrl
mov
adc
lret
and
in
mov
ja
popa
ret
cwtl
or
add
mov
fadds
sub
cmp
cs
fldln2
add
cwtl
mov
aas
xor
lods
movsb
mov
stos
adc
sti
test
add
add
lds
adc
arpl
pusha
adc
push
inc
xchg
in
and
les
lea
adc
push
inc
mov
ja
mov
xlat
xchg
and
es
xor
imul
jmp
in
add
mov
fldcw
fnstcw
or
mov
xor
aam
cmp
stc
aam
pop
add
xchg
je
scas
inc
inc
es
outsl
adc
loopne
clc
add
push
jno
jne
or
icebp
in
add
and
xor
inc
add
cmp
lahf
pop
fnsave
lods
lods
notb
add
call
pop
pop
and
push
call
add
xor
lock
mov
sbb
lret
stos
sub
xchg
add
inc
pop
int
aaa
cmp
sbb
ds
in
test
mov
inc
inc
repz
dec
cld
pop
dec
xchg
mov
jo
or
push
jmp
xchg
xorb
rolb
addr16
pop
les
pusha
xchg
pop
xorl
imul
cmc
not
cmpsl
add
cmp
sbb
mov
lds
xchg
sbb
dec
push
ds
mov
push
shlb
xlat
test
sbb
add
imul
mov
dec
outsl
push
dec
fiadds
dec
fidivl
jne
jno
add
popa
imul
inc
js
adc
mov
push
mov
pusha
je
push
jo,pn
cmpsl
cmpsb
xchg
adc
inc
mov
clc
lret
adc
movsb
dec
add
mul
push
add
mov
sbb
xor
add
cmp
add
jmp
push
fstl
sbb
add
std
mov
shl
jno
orl
sahf
add
lret
xlat
add
jl
test
mov
loope
add
insb
lcall
sahf
jno
cli
inc
mov
ds
and
push
cmp
aam
sbbb
stc
dec
add
add
popf
sbb
test
add
jb
andb
mov
add
push
add
cmpb
shlb
sbbl
filds
scas
out
jmp
xchg
cmovo
jbe
imul
add
and
or
fwait
in
add
dec
jo
xor
nop
inc
pop
leave
mov
outsb
jb
and
push
xchg
inc
sbb
clc
roll
cmp
push
jbe
mov
and
and
or
ret
lock
fnstenv
enter
mov
icebp
ret
loop
xor
inc
out
filds
ror
inc
and
ss
add
sub
popa
add
fmuls
mov
rcrl
aam
in
add
pushf
maxps
adc
add
cld
shll
popa
adc
repnz
movsb
push
dec
aas
xchg
inc
stc
popf
add
cltd
mov
add
cmp
mov
push
in
int
and
add
mov
inc
mov
test
add
push
out
sbb
testl
fists
add
rcrb
and
aas
cmpsl
popf
sub
or
lcall
push
sub
add
jbe
push
shll
jnp
cld
jge
lods
push
mov
or
pop
add
movsb
popf
inc
jmp
pop
inc
clc
mov
inc
insb
push
adc
out
inc
xchg
push
mov
dec
cltd
xor
cmp
inc
jo
xor
data16
push
test
add
xchg
add
jbe
test
push
sti
xor
cmp
pop
push
jns
add
mov
pop
cmpsl
scas
aas
sub
pop
pop
mov
or
jo
add
push
xor
add
clc
add
scas
rolb
mov
int3
lock
add
pop
add
cmc
xor
inc
add
mov
xchg
pop
leave
push
sahf
add
hlt
addb
fstpl
sub
push
or
loopne
fwait
pop
insl
dec
jge
adc
cmc
xor
xlat
add
into
adc
sub
test
enter
mov
push
sbb
nop
push
push
test
dec
test
or
xchg
sbb
movsb
aas
movsb
mov
stc
xorb
lret
out
std
sub
pop
mov
lret
fadds
add
daa
addb
das
add
pushf
cld
jno
add
sub
jecxz
rolb
shrl
add
inc
sub
xorb
mov
test
inc
inc
push
or
add
dec
cmp
xchg
iret
adc
add
pop
les
in
mov
insb
es
add
xor
popf
clc
icebp
push
adc
dec
mov
adc
dec
jb
jge
or
mov
fldl
mov
rcrb
es
add
rol
jg
push
movsl
pop
outsl
cmp
add
sbb
out
add
maskmovq
mull
into
loopne
dec
fldl
mov
sbb
repnz
and
mov
mov
mov
pop
and
mov
rcll
mov
ljmp
jmp
iret
jno
push
pushf
add
ret
add
push
mov
adc
iret
sbb
push
enter
mov
or
push
sub
mov
pop
enter
clc
inc
add
sub
jg
aam
stos
push
jae
mov
or
test
fdivl
xor
cmp
dec
xor
mov
pop
add
sub
cwtl
add
inc
lods
jnp
shl
add
bound
into
add
mov
adcl
cmp
push
mov
call
ds
lds
rol
cmp
sbb
mov
lds
jb
add
push
ljmp
rcrl
pop
repnz
mov
jp
cltd
jl
cmp
pop
add
test
mov
stos
nop
inc
sub
mov
pusha
pop
jp
clc
inc
dec
iret
addr16
mov
push
subb
mov
sub
add
dec
mov
pushf
add
cld
cmp
or
imul
test
mov
sbb
andb
adcl
cmpxchg
in
xor
mov
das
adc
loopne
hlt
push
fdivs
or
and
stos
rolb
ss
loopne
rorl
mov
adc
sbb
mov
push
int3
inc
inc
xor
loopne
pusha
leave
mov
and
or
pushf
in
inc
ss
mov
push
and
add
mov
icebp
push
roll
sbb
mov
add
dec
mov
sub
or
adc
ds
add
dec
lahf
and
cmp
inc
dec
pusha
xchg
lds
cs
popl
pop
add
mov
and
xchg
call
jb
jmp
pop
iret
call
out
mov
lock
cmp
fistpl
add
xor
jl
mov
add
jbe
adc
xchg
or
jp
iret
or
sti
mov
add
leave
lea
std
cmp
adc
roll
add
xlat
or
adc
cmp
pusha
adc
or
ret
mov
and
mov
pop
bound
and
out
stc
dec
or
loop
mov
fnsave
sub
movsb
fsubl
or
pusha
aad
mov
lret
mov
push
mov
mov
pusha
imul
cmp
and
add
test
fiadds
cld
aad
mov
add
add
push
mov
es
add
sub
push
dec
mov
mov
divb
jl
testl
xor
adc
jo
test
cmovge
inc
or
loopne
testb
arpl
scas
fs
loop
xlat
fwait
imul
inc
cmp
loope
int
sub
mov
orb
mov
and
add
xlat
int
dec
mov
pusha
and
pushf
aam
push
sbb
inc
jl
enter
mov
dec
inc
loope
std
addr16
repnz
cmp
mov
stc
ljmp
pop
loopne
and
ficompl
mov
jnp
xor
adc
xchg
mov
inc
rorl
sub
xor
jne
test
adc
in
push
add
popa
sbb
add
loope
add
pop
mov
push
add
fbld
ficomps
fcompl
mov
popf
enter
fnstcw
jecxz
dec
pop
orl
mov
lgdtl
inc
lock
out
rclb
pop
ds
jl
roll
outsb
in
ljmp
stos
push
add
sti
cmp
sub
inc
in
and
and
adc
adc
jb
or
aam
or
mov
loopne
add
pushf
and
and
mov
mov
in
and
pop
call
shrl
push
or
add
mov
aas
jae
mov
push
add
jp
sbb
lahf
pop
and
jl
sub
and
dec
jmp
shlb
pop
mov
ret
pusha
and
mov
sub
cmp
mov
ljmp
mov
mov
add
mov
outsl
jl
sbb
sub
loopne
dec
jle
push
cli
lahf
push
mov
dec
add
sub
pop
les
mov
and
sahf
push
orb
xlat
leave
jne
add
push
aad
in
in
aam
inc
shlb
call
xchg
inc
adc
es
adc
test
mov
push
cmp
nop
add
inc
mov
add
int
out
push
cwtl
pop
ljmp
fs
jecxz
jno
dec
mov
pop
jmp
stos
jae
inc
pop
xchg
xlat
xor
ss
jp
enter
add
and
icebp
xchg
add
arpl
roll
dec
adc
push
in
imul
add
inc
das
leave
add
aas
xchg
add
into
push
aam
mov
jecxz
add
lcall
push
xchg
pop
or
sbb
arpl
adcb
adc
stc
int
loop
sub
adc
pop
sbb
or
outsb
add
movsl
push
mov
push
jno
jp
ret
popf
dec
daa
enter
mov
cmp
inc
cmp
leave
dec
icebp
add
mov
repz
jae
push
xchg
add
lret
push
roll
mov
mov
addl
cmpsb
test
hlt
data16
add
cwtl
js
inc
jle
sub
push
outsb
pop
push
add
push
leave
or
andb
dec
test
or
stc
enter
push
jg
and
cmp
push
inc
mov
movsl
pop
dec
xorb
lahf
mov
subb
sub
jae
add
into
shrl
mov
inc
and
and
shrb
cmp
push
fadds
aad
sar
popa
pop
mov
jge
pusha
adc
lahf
outsl
movsl
add
inc
or
popf
rorb
mov
scas
mov
pop
cltd
cmp
push
add
jb
addb
xor
lds
dec
shlb
or
xor
call
cmp
push
dec
mov
adc
and
arpl
add
inc
clc
dec
loop
mov
mov
stos
lods
xchg
rorl
mov
xchg
adc
test
mov
leave
cwtl
mov
mov
mov
add
xor
cmovns
mov
or
xchg
hlt
mov
or
pop
jmp
imul
in
pop
adcl
rcrl
inc
add
adc
or
adc
fists
jg
dec
push
insb
xor
cli
outsl
push
rorb
stc
inc
jp
add
xchg
jecxz
mov
std
cli
addr16
lods
lods
push
test
pop
dec
pop
xor
insb
rclb
push
mov
pusha
add
fnstcw
sub
or
xorb
jl
mov
jnp
and
sbb
add
mov
test
xchg
outsl
jo
mov
adc
xor
fadds
lahf
mov
in
cmc
arpl
mov
je
iret
ljmp
mov
pop
mov
pop
rclb
mov
add
mov
cmp
in
add
jno
cs
jbe
add
repnz
adc
lea
in
add
pop
add
sub
mov
xchg
andb
jbe
add
lcall
mov
int3
mov
add
icebp
outsl
inc
add
lock
add
insb
cmpb
dec
cli
mov
sub
jne
pop
push
in
jg
mov
outsb
add
test
sbb
jle
dec
cmp
enter
fists
mov
pushw
push
mov
push
pusha
xchg
jo
inc
fs
leave
pop
xlat
push
pusha
mov
mov
paddsb
push
scas
inc
or
dec
inc
add
fdivl
xor
ja
add
pop
fisttpll
dec
rcrb
push
and
jae
ljmp
or
add
lcall
push
fildl
add
mov
mov
shrb
and
mov
dec
sub
add
mov
sbb
scas
jecxz
lcall
push
sub
test
mov
loop
add
daa
xor
or
clc
sti
mov
sahf
mov
imul
leave
pop
add
and
cmp
sub
sbb
xor
xor
cmc
pushf
movsl
xchg
mov
aam
cmpsb
ds
sahf
and
xor
add
inc
mov
cmpsb
les
cmp
add
sbb
pusha
shll
ret
cwtl
sbbb
dec
mov
test
leave
sub
sbb
jb
xchg
or
jp
pop
mov
adc
pop
jb
add
cmc
loop
xchg
dec
hlt
inc
or
jle
jecxz
pusha
dec
push
sub
adc
lret
test
or
mov
dec
push
sub
dec
and
inc
and
adc
popa
or
add
popf
inc
cltd
pop
out
cmp
divl
stc
pop
aaa
shl
fdiv
nop
pushf
add
stos
ja
dec
shlb
add
lds
das
clc
add
jne
in
pushl
jle
cmc
call
rcll
outsb
repz
sub
push
subb
dec
out
icebp
mov
out
add
sub
jl
push
push
dec
xor
push
jae
pop
addb
outsl
es
and
pusha
push
and
xchg
xor
repnz
aaa
pop
mov
cmp
inc
sub
rolb
mov
stos
cltd
xchg
dec
into
mov
sub
cs
lahf
add
pusha
lods
add
add
inc
sub
sub
or
and
imul
add
adc
sub
pop
enter
or
add
lea
jns
inc
test
mov
das
inc
stc
mov
nop
je
pop
test
rclb
lods
jo
jb
aam
mov
pop
pop
sbb
sti
testl
int3
sbb
add
or
rol
pop
and
loopne
xor
negb
sbb
or
add
pop
je
add
cmp
cltd
push
inc
mov
cmp
add
adc
enter
cmp
sti
mov
cmp
inc
test
sbb
dec
add
test
popf
sub
sub
sub
pop
adc
xchg
fsubr
add
xchg
push
mov
mov
sub
add
lods
xor
jb
ror
lods
add
je
xor
push
lea
cld
adc
pop
clc
ret
shlb
cwtl
rolb
lcall
add
lock
cmp
sub
enter
cs
call
lods
pop
jmp
xor
mov
rol
sub
inc
pop
hlt
push
mov
xchg
mov
out
inc
clc
xchg
cmp
xor
enter
add
push
mov
add
out
jbe
add
mov
push
mov
add
in
xchg
leave
dec
iret
fisttpl
pop
add
mov
xchg
jmp
pop
add
cmpl
cmp
sbb
xor
push
je
popa
scas
sbb
and
cmpb
pop
je
frstor
out
inc
mov
sub
daa
in
and
mov
inc
and
adc
negl
cmpsb
ret
xchg
loop
push
cmpsl
lcall
or
jg
xchg
mov
pop
rolb
or
fadds
inc
lock
sti
inc
cs
add
dec
jns
icebp
cmp
xor
clc
mov
mov
clc
and
push
vpsubb
mov
rorb
int
push
mov
mov
pop
mov
or
and
add
inc
adc
addb
shlb
cs
loopne
add
test
xor
or
loopne
xor
mov
js
add
mov
add
pop
mov
dec
sbb
nop
add
xor
mov
data16
sub
popf
pop
sbb
xchg
js
sbb
fsubrl
mov
jp
loope
hlt
add
sub
add
repz
jge
jbe
pop
add
and
dec
and
add
add
adc
fcomp
cmp
cmp
push
mov
xchg
hlt
adc
or
add
push
inc
mov
cmpsb
fadds
rolb
add
lcall
jno
jns
inc
adcl
out
mov
scas
pushf
rcrb
add
popf
cmc
sub
dec
xchg
mov
mov
cs
jae
add
pop
add
in
pop
push
xchg
mov
adc
loope
add
stos
ror
pusha
lret
ja
add
lods
pop
je
mov
add
dec
pop
xor
sub
xor
jne
pusha
enter
add
jecxz
push
sbb
cmp
add
cld
lret
mov
addb
ljmp
pop
add
push
gs
ret
xchg
jg
rcrl
shll
push
add
pop
and
rolb
mov
stos
pop
and
push
pop
scas
xchg
fidivrl
add
mov
sbb
leave
mov
es
stos
add
xor
adc
out
sbb
cmp
hlt
xchg
sbb
add
adc
mov
or
rorl
aam
fadds
cld
mov
pop
rcll
or
xchg
cmpsb
sbb
cwtl
test
lret
add
xor
imul
int3
enter
outsb
xor
popa
cli
cld
imul
jo
jle
add
out
cmp
and
in
add
cmp
mov
shll
push
add
adc
rol
mov
js
add
jns
pop
es
loop
nop
inc
int3
jl
fs
cmp
mov
sub
xchg
xchg
add
dec
pusha
scas
adc
popf
xchg
cmp
stc
sub
rorl
push
shlb
xchg
xor
pop
adc
pop
movb
pusha
push
out
and
jmp
cmp
or
leave
ja
sti
addb
push
xchg
jle
sbb
mov
adc
xchg
and
add
mov
add
push
or
mov
add
pop
xor
iret
push
pusha
mov
mov
mov
push
add
add
inc
es
ss
in
sbb
add
loope
mov
fucomp
and
add
scas
cli
imul
push
xor
cmp
add
inc
jl
repnz
jbe
cs
add
test
adc
sarl
sahf
add
test
loop
pusha
push
cmp
add
ret
shlb
adc
mov
lea
mov
xchg
push
inc
aaa
sbb
pop
imul
shrb
in
adc
add
sbb
sbb
adc
sbb
lock
push
out
fstpt
test
icebp
loope
pop
movl
jmp
test
aas
and
adc
std
pop
pop
xor
call
ss
cld
test
adc
lods
sahf
js
rcl
mov
dec
imul
push
push
mov
pop
repz
mov
cmp
mov
add
and
add
pop
js
lret
cli
cs
add
ret
prefetcht1
mov
mov
push
adc
shlb
jb
adc
pop
push
sbb
sbb
or
mov
adc
add
addb
mov
cmpsb
fisubs
mulb
inc
push
jo
xor
lea
lahf
ficompl
enter
jle
jae
xchg
out
shlb
push
jbe
and
mov
mov
xchg
ljmp
clc
shll
xorb
fiaddl
add
nop
fsubs
push
jl
add
push
cmpsb
mov
adc
lock
shrd
ret
xor
or
loopne
dec
add
fsubl
dec
push
lret
add
push
and
jl
xchg
cwtl
stc
stos
cmp
clc
push
push
push
inc
rorl
cli
cmpl
rcrb
or
add
lea
mov
aas
inc
sahf
push
adc
xchg
loop
int3
inc
nop
jmp
lret
test
fldt
clc
add
jl
stc
lds
push
pusha
ss
ret
pop
xchg
add
cs
cmpsb
jecxz
push
or
dec
int3
pop
bound
mov
fs
inc
cwtl
mov
jp
sbb
sbbl
popf
push
fimuls
leave
and
and
xchg
or
pop
push
arpl
xchg
bound
cmp
mov
xchg
clc
sbb
lcall
fdiv
sbbl
or
subb
in
and
mov
lahf
fidivs
mov
into
add
and
mov
add
call
xlat
inc
inc
or
dec
mov
jmp
pop
adc
add
sahf
pusha
cwtl
mov
outsl
je
sti
mov
xchg
cmc
xor
and
mov
imul
add
ss
mov
xlat
mov
xor
or
inc
jae
iret
imul
add
mov
xor
mov
test
dec
jo
sub
add
pop
mov
push
hlt
add
add
sub
push
stos
mov
mov
mov
je
mov
add
jge
mov
fsubrs
adc
dec
add
jbe
outsl
sbb
jecxz
pop
orl
leave
mov
pushf
mov
xchg
or
push
fldl
dec
mov
dec
add
pop
push
mov
inc
fidivrs
sahf
adc
dec
lods
mov
inc
jmp
cmp
ficomps
push
loop
push
add
cmpsb
and
adc
test
aam
push
mov
fidivrl
dec
jnp
xchg
pusha
stos
xorb
pop
fdivrs
dec
cmp
xchg
cmpb
jmp
xor
in
jnp
popa
stos
lahf
cwtl
add
inc
enter
pop
int3
mov
pop
jl
pop
and
mov
add
rcl
xchg
imul
out
add
test
loop
movsl
jns
sarl
and
inc
mov
xchg
cmp
rclb
dec
dec
xchg
pop
add
loop
xchg
pushf
popa
sub
mov
cmpsl
lahf
xor
xor
repz
inc
cmp
rclb
add
mov
pushf
ljmp
push
iret
adc
add
mov
loop
sbb
das
mov
faddp
cmc
iret
mov
and
lods
movsb
adc
adc
and
into
add
mov
test
aad
xlat
push
mov
das
aas
pop
outsl
sbb
pushl
leave
jecxz
pop
addl
shl
fwait
add
or
mov
into
adc
scas
ss
sbb
inc
sbb
xor
sbb
les
cs
jge
nop
sub
bound
push
icebp
clc
add
shlb
xlat
aaa
pop
faddl
orb
into
add
cmp
mov
aad
dec
in
les
jnp
ljmp
jae
dec
fs
insl
jge
add
add
out
mov
sbb
or
notl
in
icebp
js
add
pop
stc
pop
push
in
pop
adc
mov
fs
or
dec
insl
cmpsl
fcmovu
flds
jp
pop
aas
xor
mov
pop
in
iret
addb
faddl
mov
loopne
frstor
push
incl
pop
out
movsb
ret
lods
add
dec
rclb
add
adc
rclb
mov
movsb
in
outsl
add
imul
cld
jmp
lahf
pop
or
test
and
iret
mov
fldl
fcomp
mulb
jne
jnp
add
lds
pop
pop
mov
cmp
xor
push
add
shld
in
mov
sub
adc
xchg
mov
xchg
adc
lods
fwait
loopne
pop
jae
out
add
into
or
out
mov
incl
push
adc
xchg
loope
add
hlt
dec
or
push
push
leave
mov
add
xlat
xor
sub
push
and
pop
cmpsl
sbbl
sbb
add
mov
pushw
jno
in
jmp
xlat
push
loopw
aaa
ds
xor
mov
int
into
or
xor
nop
inc
add
adc
rolb
lea
loopne
rcll
pop
mov
mov
lock
mov
push
andb
lahf
cs
add
lea
jmp
mov
in
xor
cmp
cltd
mov
lret
sti
add
mov
scas
es
cmpsb
add
mov
andb
cld
sub
pushf
adc
add
sbb
cli
sbb
add
pop
stc
in
push
icebp
inc
pop
or
and
push
bound
cmp
frstor
lret
clc
stos
add
sbb
mov
xchg
mov
movsb
push
lea
fstpt
xor
mov
repz
lods
push
jae
push
jg
cltd
in
or
shlb
push
cmp
popl
scas
jbe
fwait
jmp
orl
mov
sbb
adc
subb
fs
add
fld
lcall
mov
xor
or
fucomi
inc
addl
add
bound
sub
push
pop
sbb
xchg
cmp
fiaddl
rcrl
cmp
jb
mov
jo
mov
add
xor
jbe
call
add
xchg
sub
cli
mov
hlt
jnp
add
std
cwtl
mov
je
adc
in
test
ret
add
outsl
mov
int3
or
shll
and
fs
call
push
aam
push
add
hlt
and
push
out
xor
add
es
je
add
mov
movl
xchg
sub
les
jo
lcall
stc
movb
xor
enter
lds
add
add
fmull
fidivl
outsl
shll
xchg
pop
or
or
xchg
rcll
repz
rolb
fidivl
pop
cmp
jecxz
pop
sarb
push
sbb
cmp
fadds
or
push
cmp
push
or
rorl
ret
and
or
xor
push
not
jg
add
mov
or
mov
add
push
pop
lock
sbb
shll
mov
int
clc
test
cmp
addb
enter
je
mov
push
leave
call
sbb
add
rol
jg
mov
cmp
sbb
sub
fsubl
inc
sahf
xlat
mov
lods
cmpb
in
ljmp
cmpsl
mov
or
aaa
mov
leave
sbb
pop
loope
lahf
fs
push
shr
inc
outsb
adc
call
iret
insb
cmp
jp
cmp
dec
das
sbb
cltd
jo
push
popl
xchg
popf
lcall
nop
add
mov
or
bound
das
push
lret
dec
and
pop
popf
jo
call
sub
aas
xchg
dec
sub
out
push
mov
push
bound
call
in
xor
pusha
pop
adc
out
lock
sub
sarb
out
out
nop
add
cwtl
fidivs
lock
add
ret
dec
xor
add
clc
sbb
push
add
add
pop
mov
hlt
les
aam
dec
pusha
je
repnz
cli
das
mov
popa
cmp
ds
mov
je
jecxz
or
outsl
push
les
mov
mov
push
rcrl
cmpsl
cltd
sbb
in
jecxz
xchg
cvtps2pd
mov
dec
insb
shll
mov
inc
shrl
jp
cmp
fwait
loopne
jb
sub
pop
icebp
mov
pop
pop
sbb
fisttpll
jecxz
decl
gs
jge
add
add
in
and
jp
aaa
cmp
jge
sub
nop
add
add
and
sbb
mov
mov
mov
loopne
add
in
and
pop
add
leave
jnp
test
pop
mov
cmp
adc
popa
and
sti
cmp
jle
inc
test
sub
aaa
adc
add
aas
add
add
jmp
addl
mov
add
pop
mov
push
es
fwait
xchg
jg
sub
push
pop
repnz
stos
pusha
cwtl
sarl
xchg
pop
js
xadd
push
jb
ret
add
push
mov
inc
or
push
ljmp
les
shlb
jle
shrb
xor
call
shl
add
mov
js
xchg
lock
outsl
and
or
push
inc
inc
push
add
push
ja
rcr
dec
add
sub
adc
cmp
mov
inc
cwtl
add
es
push
insl
clc
mov
mov
cmp
mov
outsl
pusha
lcall
and
mov
add
or
in
in
push
dec
out
popf
fwait
loop
add
adc
push
add
push
sahf
pusha
add
out
cmp
pop
add
das
clc
stc
mov
lock
mov
or
pop
cwtl
cmp
add
mov
loope
add
add
sub
call
call
std
aam
cmp
dec
add
loop
jg
incl
imul
mov
xor
pop
lret
fnstsw
mov
test
shl
adc
adc
inc
cmp
xchg
add
mov
icebp
lahf
cmpsb
mov
sub
add
aam
mov
and
loop
rolb
add
clc
mov
jp
add
cmp
repz
xchg
add
cld
mov
xor
dec
inc
fwait
shrl
lods
lods
xor
sbb
pushl
push
jle
out
aam
push
adc
inc
bound
add
and
rolb
fimuls
out
pop
pop
mov
adc
push
add
pop
push
scas
enter
sarl
sbb
add
add
insb
push
stos
andb
and
je
dec
dec
push
repnz
mov
aas
mov
jg
add
inc
loop
lret
inc
push
adc
mov
add
or
jp
mov
dec
inc
cmp
incb
into
icebp
cmp
sbb
test
test
adc
xor
inc
xor
ds
repnz
cmpsb
ljmp
xor
enter
inc
mov
leave
jg
lcall
and
cmp
filds
cmp
sbb
cmp
inc
sub
in
ss
fdivl
add
std
loop
addb
pop
and
mov
adcl
in
shlb
jl
pop
xchg
xor
lret
dec
or
adc
and
cmp
cld
mov
in
cmpsl
sbbb
mov
cmp
inc
fstpl
popf
adc
imulb
test
flds
mov
inc
xchg
fwait
mov
jae
dec
in
cmp
sbb
cmp
jmp
dec
roll
push
cltd
clc
jns
push
ret
lret
dec
outsl
xchg
in
pop
adc
mov
mov
mov
imul
and
sub
addr16
clc
cld
rolb
out
mov
mov
cmp
add
jae
push
fadds
sub
cmpsl
popl
mov
xchg
scas
xor
sub
pop
cltd
mov
jnp
divb
add
adc
add
shl
popa
repnz
push
xor
in
pop
pop
jl
xor
jo
dec
jp
add
lretw
xchg
jl
add
jge
sub
mov
std
jae
addb
lea
mov
xchg
jb
arpl
mov
xlat
push
sub
push
sub
add
jne
sbb
lret
imul
in
mov
xchg
std
sbb
add
fsubrl
in
mov
add
sbb
add
adc
mov
arpl
sub
add
xchg
dec
add
and
xor
pop
leave
mov
addr16
cmpsl
dec
add
lret
add
xlat
ror
popa
push
cli
xor
inc
out
movsb
or
dec
add
xchg
loopne
inc
or
adc
es
sbb
std
cmpb
jg
add
ljmp
testb
xlat
add
and
lock
jl
mov
mov
cmp
aad
dec
add
sahf
mov
jb
arpl
imul
or
iret
ret
in
nopl
push
jns
enter
push
mov
add
stos
add
out
rclb
scas
push
stos
jbe
hlt
pushf
add
jnp
jnp
nop
incb
in
push
mov
lea
fxch
add
aad
lcall
jo
lds
add
orb
dec
add
js
pop
add
stos
rorl
into
mov
pop
icebp
xor
inc
sub
pusha
add
mov
xchg
add
lods
fsubrl
aaa
aad
mov
jns
add
cmp
sub
jbe
sbbl
xor
push
adc
add
sbb
test
roll
lcall
adc
fildl
mov
dec
in
sbb
jo
mov
add
push
imul
idiv
add
or
outsl
call
gs
xor
lea
in
cmc
in
cmp
mov
outsb
add
dec
xchg
pushf
divb
inc
repz
out
sub
sbb
inc
vunpckhps
pop
sub
pop
sbb
add
jle
cld
pop
icebp
add
jno
popa
fwait
lret
fdivp
cmc
lock
add
push
xchg
shrl
or
test
xor
pop
scas
inc
xchg
loop
cmpsl
add
aad
xchg
xor
mov
add
add
inc
testb
mov
in
adc
fnstcw
mov
int
add
addr16
aaa
fs
or
dec
mov
pop
lret
mov
push
dec
and
xchg
and
cmc
sbb
jmp
andb
xchg
add
rcr
dec
add
popa
das
aaa
scas
loope
add
rorl
add
clc
or
add
mov
push
inc
sti
dec
es
ja
cmp
jp
add
jne
pop
add
out
insb
mov
dec
mov
fpatan
adc
add
call
lret
sti
adcb
rorb
push
stc
sub
pop
sub
xchg
push
push
cmp
push
sbb
shll
cmp
aam
repnz
rol
xchg
call
inc
sub
and
sub
or
mov
les
stos
lret
sub
push
xlat
sub
inc
cld
aaa
loope
bnd
jo
cld
adc
add
fdiv
and
pop
and
mov
add
rcll
push
fcoms
jae
xchg
xor
mov
enter
cmp
inc
cmpsb
cmpsl
punpckhbw
aam
pop
mov
add
les
sahf
push
jno
adc
cmp
xchg
mov
cmp
lret
xchg
pop
inc
addr16
pusha
into
sbb
je
pusha
rcll
sbbb
push
mov
jecxz
orl
dec
std
mull
mov
add
mov
lea
and
push
lret
sub
cmp
test
pop
add
std
es
stc
les
push
and
inc
add
pushf
and
pop
dec
sub
hlt
es
mov
jae
pop
sub
add
ja
xor
inc
jns
sub
nopl
dec
xor
int3
pop
add
adc
loope
loopne
xor
and
cmc
add
rcr
adc
fwait
add
daa
add
pop
icebp
pop
cmp
inc
xor
mov
js
rcr
mov
inc
mov
jns
pop
das
mov
cmp
leave
cld
mov
mov
lret
arpl
fstl
xlat
inc
cmp
xor
inc
lret
and
cmc
rcl
add
mov
inc
xchg
add
push
js
jb
mov
add
xchg
cmp
test
pop
pop
add
push
mov
repz
jae
insl
xlat
add
cli
sbbb
cld
add
mov
add
lret
dec
fs
loopne
sub
insl
test
pusha
ds
hlt
je
bsf
adc
inc
and
and
add
add
ucomiss
jg
pop
xor
adc
rolb
lods
jb
push
cmp
xor
sbb
mov
dec
jl
mov
push
adc
and
lret
pusha
mov
or
jbe
add
push
roll
cs
pusha
fwait
out
xchg
cmpsl
cmc
and
in
inc
int3
sti
adc
and
lcall
out
and
inc
xor
sub
inc
mov
add
jb
jne
jno
add
xchg
adc
sub
add
cmpsb
inc
fldenv
xabort
cli
add
daa
les
mov
xor
lahf
andl
gs
scas
nop
mov
ret
in
repnz
fistpll
in
movl
mov
and
sub
out
fdivrp
aas
dec
sar
adc
ud2
test
clc
add
loop
bound
lea
rolb
jae
lret
stos
outsb
xorb
ret
pop
loopne
sbb
push
rolb
jl
ret
out
cmp
pop
enter
je
add
dec
push
cmp
jnp
adc
repz
fildl
das
jmp
addr16
inc
mov
fldl
fwait
add
movsb
lods
lock
add
sbb
lods
ds
push
adc
push
pop
xor
add
pop
jmp
lahf
or
outsl
lods
push
push
rol
mov
add
jl
movsl
add
inc
pusha
push
js
test
fdivrs
leave
pop
incb
mov
dec
pop
jno
out
js
add
scas
das
add
jecxz
push
inc
test
mov
xchg
push
fcmovnu
in
add
jbe
add
pushf
mov
fnstcw
cmp
les
xchg
mov
loopne
mov
adc
inc
ret
mov
add
aad
sub
testb
or
jns
flds
jecxz
les
pop
movsl
sbb
lret
aam
fsubrs
sub
dec
rorl
push
push
mov
sbb
movsb
sub
push
push
push
loop
cwtl
out
cmpsb
pop
roll
arpl
in
pusha
add
inc
sub
sbb
push
jmp
loop
cmp
xlat
subb
push
add
mov
into
add
stos
hlt
xchg
mov
lcall
adc
cmp
aad
cmc
add
or
mov
outsl
pop
push
data16
pusha
mov
and
pop
pop
arpl
add
jo
ss
popf
add
clc
std
xor
andb
aad
jp
inc
xchg
pop
fstl
es
fstpt
pushf
movsl
jmp
and
dec
mov
and
add
jmp
mov
outsb
jecxz
pop
sbb
and
call
pop
inc
fsts
hlt
mov
popaw
lods
lock
lret
adc
incl
das
movsb
jle
rcl
call
ret
add
jne
nop
bound
cli
sub
bound
add
outsb
or
inc
test
je
jmp
cs
pop
fsubs
jne
cmpsl
lret
inc
aas
and
jo
adc
and
push
mov
push
nop
lea
add
imul
in
add
sub
call
orl
push
dec
jg
pusha
dec
daa
inc
add
pop
jno
ret
cld
push
outsb
dec
cmp
jg
xchg
adc
pop
in
les
in
bound
add
scas
dec
pop
jno
jno
add
jne
cmp
lods
cmp
repz
fstl
cmp
nop
mov
xchg
test
popf
hlt
sbb
fstl
pop
sub
and
shlb
repz
push
hlt
jns
push
or
leave
call
inc
xor
sbb
iret
sub
mov
scas
psubsb
inc
loopne
pop
sbb
jle
and
lahf
mov
push
jnp
mov
or
pop
sbb
dec
daa
outsb
jns
sub
add
sbb
cmp
add
sub
lea
je
add
dec
mov
mov
or
push
fdivrl
rolb
dec
and
dec
ljmp
mov
cmp
stos
cld
loopne
add
sub
ljmp
add
mov
pop
arpl
pop
lahf
cmpsl
ja
jo
stos
adc
push
pusha
scas
xorl
and
push
lret
movsb
pusha
pop
pop
sub
ja
add
inc
rolb
jno
inc
mov
jle
rorb
pop
and
clc
sub
jae
and
aad
jb
es
call
add
or
clc
test
xchg
mov
dec
pop
jbe
push
pop
xor
fsubr
lock
fs
sbb
inc
ljmp
and
lret
sbb
pusha
or
outsl
cmp
pand
cld
pop
mov
mov
sub
in
clc
lahf
xor
add
cmp
inc
cmp
push
jg
mov
xor
ret
or
mov
adc
pusha
scas
mov
xor
fbstp
adc
mov
cmp
add
mov
ret
mov
add
sti
hlt
add
and
ja
fadds
or
mov
sbb
pop
add
out
inc
loope
icebp
fistpll
dec
popa
popf
push
test
add
push
ss
add
adc
inc
xchg
repz
lea
pop
xchg
and
add
lcall
sub
out
add
test
fisttpl
jo
or
and
cmpl
xchg
bound
push
push
mov
in
cmpsl
xor
add
jge
rclb
push
hlt
rcl
sbb
jns
sub
ds
sub
dec
test
mov
or
and
add
dec
inc
ret
insb
adcb
sub
push
inc
cwtl
and
or
cmp
add
lret
das
pop
decb
nop
xchg
jmp
add
mov
adcl
add
pop
movsl
mov
xchg
add
mov
add
xchg
xor
cmp
push
sub
les
jb
sub
pop
rorb
mov
xchg
inc
add
fstpl
jmp
xchg
add
mov
or
push
int
mov
leave
push
sti
inc
out
sub
or
push
jecxz
pop
roll
mov
stos
insl
add
mov
callw
or
mov
mov
mov
or
push
adc
data16
xchg
mov
cs
adc
add
sub
add
jge
push
leave
jno
roll
mov
aas
adc
add
and
test
lock
pop
out
inc
inc
repnz
add
inc
loop
rcrl
test
icebp
outsb
ror
jbe
push
arpl
aas
repz
sbb
clc
dec
sbb
xchg
jnp,pt
adc
lods
fiadds
dec
and
lods
xchg
add
jno
push
js
sbb
adc
mov
call
fwait
stos
mov
out
jae
sbb
xorl
mov
mov
add
test
loop
arpl
pop
sbb
aas
rcrb
mov
sbb
sbb
add
testl
pop
xor
adcl
mov
loopne
sbb
pop
and
pop
xchg
les
add
or
pop
inc
push
movsl
sub
add
cmp
dec
add
daa
fcomip
sbb
jae
sbb
xchg
incl
xor
mov
sub
iret
leave
test
add
mov
or
hlt
ds
fimuls
daa
and
add
movsb
bound
and
lods
sbb
sbb
fldl
xor
mov
dec
adc
roll
lds
shlb
cmp
add
xor
dec
int
cs
ficompl
scas
add
ljmp
dec
int
sub
adc
xchg
dec
cmp
pop
and
push
sub
adc
xor
leave
pop
add
cld
dec
xlat
pop
ss
leave
pop
test
add
dec
jp
add
mov
std
loop
andl
push
lcall
fldl
mov
pop
out
add
lea
add
fdivrl
dec
lods
sub
inc
in
adc
sub
test
mov
mov
xchg
add
xchg
jl
add
pop
in
push
loop
push
pop
jb
dec
add
cwtl
mov
and
orb
pushf
sub
and
fcomps
lock
hlt
mov
mov
push
imul
push
xor
jp
sbb
inc
stos
rcl
pop
cmp
jne
add
fsub
lcall
in
mov
ss
ljmp
mov
or
xor
testl
mov
xchg
rcr
xor
out
push
cmpsb
js
push
lcall
sub
bnd
out
mov
xchg
lock
inc
push
outsb
jle
pop
mov
mov
pop
add
cmp
or
nop
ss
jnp
jae
xchg
cmp
add
lahf
add
add
or
jne
sbb
push
insb
add
push
fld
fs
jmp
sub
pop
dec
add
jp
daa
ret
fsubs
iret
icebp
fbld
xchg
adc
adc
stos
mov
lds
lock
call
in
pusha
fstpl
mov
imul
sahf
aaa
mov
test
sbb
push
cmpb
jae
add
ficompl
shrb
sar
mov
imull
in
add
jnp
ret
shlb
inc
xchg
or
mov
add
lock
add
pop
lahf
adcb
cli
cpuid
adc
mov
sub
adc
xchg
jmp
bound
add
and
xorb
adcl
add
push
pop
insb
cmp
push
pop
fs
add
add
repnz
fimull
leave
and
push
addl
stos
mov
and
pop
sbb
add
ret
add
hlt
mov
ljmp
add
lds
sub
dec
or
add
lret
test
xchg
inc
rclb
xlat
testb
fldt
sbb
mov
sub
add
bound
mov
or
cmp
roll
iret
mov
arpl
mov
loopne
fistps
mov
add
ja
jle
mov
add
stc
daa
aaa
add
movsb
mov
incb
or
jge
mov
xchg
xor
movsb
xlat
cli
or
xor
add
and
push
push
fimuls
xchg
outsb
fnsave
cld
xor
fldl
orl
add
mov
push
dec
adc
call
fimull
insb
pop
addb
lods
leave
lea
push
fwait
xor
mov
popf
stos
pop
ja
xor
and
fdivs
jo
mov
adc
stos
inc
xchg
cwtl
xchg
in
add
mov
lret
ret
mov
adc
add
xor
inc
pop
insl
xchg
testl
lods
and
adc
add
fsubl
pop
cmp
cmp
add
fwait
add
aam
addr16
add
xchg
add
or
push
push
and
fiaddl
mov
psrlw
nop
add
movsl
adc
pop
and
xchg
sub
inc
or
jmp
inc
adcb
xor
test
int
mov
xchg
shll
xor
jae
xchg
sub
lods
cmp
xorb
into
add
dec
inc
lock
mov
aam
or
adc
mov
add
push
sub
aam
sahf
xor
cmp
repnz
cli
inc
cmc
add
push
add
into
popa
jno
sub
adc
test
adc
loop
pop
mov
adcb
movsb
add
sahf
test
stos
jg
add
xor
add
sbb
frstor
mov
push
loopne
jae
mov
and
gs
add
movsl
pop
mov
loop
int3
lods
daa
or
add
leave
outsb
xchg
out
add
das
dec
jmp
jno
adc
add
insl
pop
sbb
loopne
add
mov
or
out
xchg
add
sbb
and
rsqrtps
rcll
xchg
shll
not
or
inc
pop
add
cld
push
out
add
mov
imul
add
cltd
mov
jnp
add
insl
nop
in
mov
pop
jl
mov
mov
add
pop
popf
pusha
pusha
xor
sbb
and
add
roll
cli
mov
pop
lahf
shrb
dec
mov
or
orb
dec
cltd
or
mov
nop
cmp
sub
mov
mov
mov
fisubl
inc
add
notb
add
jmp
cmc
jl
xor
out
adc
xor
fs
loope
mov
sub
jl
maxps
push
lock
pop
add
adc
rcll
arpl
inc
mov
adc
dec
je
daa
pop
inc
fstps
rsqrtps
jmp
mov
cli
add
cmp
ss
add
mov
bound
add
out
dec
sub
dec
xchg
aam
pusha
mov
add
int
aaa
add
sahf
pop
ja
repnz
mov
data16
mov
push
mov
sub
push
sahf
rolb
in
xchg
dec
jmp
pushf
cmp
and
inc
push
push
mov
add
dec
jg
out
mov
in
fldl
inc
and
test
push
sub
push
xchg
adc
add
adc
jle
arpl
adc
xor
outsl
sbb
push
add
js
adc
or
pusha
cmp
mov
clc
jnp
mov
je
add
or
sti
mov
add
dec
mov
mov
decb
int3
add
loope
cwtl
cmp
pop
push
lock
push
adc
jle
xor
cmpsb
in
les
gs
repnz
xchg
shrb
jno
icebp
loope
sub
shlb
fsubs
popf
sbb
mov
cwtl
jae
cmp
mov
xlat
or
adc
pmuludq
push
das
orb
lock
inc
sbb
insb
ret
pushf
adc
mov
sub
xor
xchg
jo
repz
jle
mov
cwtl
inc
in
add
xacquire
sbb
lcall
sub
adc
loopne
lods
sub
mov
add
jmp
loope
jae
in
pop
ret
jp
add
imul
push
je
ret
addr16
lret
mov
sbb
in
jo
mov
lret
fildll
inc
xchg
enter
cmp
cmc
sub
sbb
add
loope
sub
cwtl
popa
add
lds
in
push
add
and
cmpsl
pop
adc
imul
mov
mov
mov
mov
enter
and
and
mov
arpl
xchg
sbb
addl
hlt
aam
add
ret
mov
cmp
aas
mov
out
jb
stos
mov
je
pcmpeqd
daa
mov
inc
or
push
add
or
std
in
pop
addb
enter
adc
insb
and
mov
add
push
dec
add
test
pusha
jb
push
cmp
adc
cld
add
sahf
pop
cmp
lcall
lea
aaa
ret
add
pop
inc
xor
add
ror
and
add
icebp
imul
fnstenv
mov
test
add
lock
add
xor
imul
add
sub
filds
lods
repnz
sub
das
cmc
mov
adc
shlb
aas
inc
rcrl
loopne
mov
dec
xchg
into
outsb
sbb
pop
stos
std
push
enter
push
scas
xorb
sbb
and
incl
mov
sub
loope
popa
inc
push
aaa
lods
inc
push
pop
inc
pop
or
and
push
add
mov
cs
mov
push
cld
decb
add
mov
sub
inc
add
les
scas
push
inc
lods
mov
lds
fsubrl
dec
aaa
dec
add
aam
test
in
cmpb
sbb
mov
sbb
lock
ret
add
ja
adc
and
pop
xlat
inc
mov
hlt
add
bound
mov
fistpll
out
add
iret
add
in
dec
lock
testl
jo
rcll
add
ds
sub
movsl
sbb
cmp
push
mov
scas
fwait
aaa
add
cmp
jecxz
cltd
popf
loopne
mov
add
jp
insl
add
shrb
add
cmpsl
scas
or
cmc
inc
inc
lahf
leave
jge
mov
add
loopne
sbbb
dec
in
aam
mul
xor
mov
inc
sbb
rorb
mov
add
xor
pusha
imul
dec
rorb
cmp
jg
test
add
andl
shlb
add
test
xchg
out
or
roll
jp
roll
call
mov
mov
xor
stc
sbb
in
cmp
cmp
xor
add
mov
push
pop
in
insl
enter
lods
xchg
aam
das
adc
add
shll
pop
adc
add
inc
push
jecxz
xchg
std
adc
jb
add
inc
pop
inc
loopne
add
sub
or
aas
mov
lds
sub
add
add
clc
stc
out
jns
ss
loop
scas
addr16
pop
jb
sub
roll
mov
addb
mov
bndstx
jmp
mov
fucomip
inc
fmull
jns
jl
and
or
std
shrb
pop
sbb
pop
fimuls
imul
andb
cmp
cmp
lret
xor
rol
cwtl
pop
js
cltd
pusha
int3
fadds
xchg
jb
leave
pusha
lds
movsl
pop
clc
cmc
rol
push
adc
gs
addb
cmc
sub
aad
or
sub
mov
xchg
mov
add
test
jg
pusha
lods
push
jp
pop
jbe
add
add
dec
cmpsb
adc
xor
lret
xchg
addb
lcall
mov
andl
nop
jne
sub
add
xchg
inc
lret
rorb
add
mov
mov
xchg
sub
nop
add
iret
cwtl
push
inc
add
mov
xchg
jge
jae
add
cs
dec
stos
inc
push
add
pop
mov
jae
cmp
cmc
scas
mov
adc
jmp
pop
jmp
rorb
add
cltd
sub
and
add
rcll
rcrl
fdivl
inc
mov
mov
or
dec
mov
dec
sub
push
dec
xor
sub
sub
je
out
pushf
pop
adc
jo
dec
jns
add
add
insl
add
mov
es
and
hlt
add
pop
cld
rolb
addr16
adc
ds
fldl
in
outsb
das
cwtl
push
shlb
cmp
add
insl
push
stos
add
inc
mov
int3
shlb
jae
fldcw
cmp
mov
jo
or
in
in
pusha
mov
add
xor
inc
out
pop
xchg
and
lods
jge
adc
fcompl
pop
mov
mov
push
sti
sub
sub
inc
mov
push
push
mov
sbb
add
es
jg
loop
xorl
mov
rclb
xor
int
cmp
and
mov
xchg
rcrb
xor
out
xchg
add
mov
jmp
mov
cs
jnp
test
sbb
sbb
incb
nop
cwtl
jge
lock
adc
les
pop
or
lahf
loope
push
inc
repnz
lock
push
fistps
pop
mov
fldl
lock
or
pushf
dec
daa
inc
mov
nop
out
lea
dec
mov
adc
dec
jmp
mov
bound
nop
ret
adc
cmp
adc
les
fistpl
movsb
mov
mov
adc
add
add
call
cmpsl
pop
in
call
nop
je
jle
push
sbb
lahf
mov
aad
xor
ret
fildll
pop
add
jnp
das
add
in
scas
xchg
cmpsl
sbb
sub
imul
adc
xor
cmpsb
add
mov
pop
test
add
jae
cli
xchg
and
cwtl
incl
fwait
das
adc
jecxz
add
cmp
cmp
adcb
pop
sbb
fdivrs
test
sbb
mov
mov
xchg
add
add
aaa
push
push
sub
xlat
rolb
loopne
cmp
mov
aad
mov
adc
in
inc
and
add
mov
inc
add
lods
sub
adc
push
ss
xchg
ja
inc
add
int
stos
cmp
movsl
add
outsb
xchg
jmp
and
mov
adc
popf
gs
in
xchg
mov
sub
cld
add
sti
pop
lds
fimull
cmpsl
lahf
adc
cmpsb
dec
arpl
cld
lea
lods
mov
jae
leave
js
pop
mov
clc
repz
in
add
push
rorl
sbb
hlt
ret
add
inc
xchg
insb
mov
mov
inc
fcompl
add
mov
xlat
lock
or
and
cmp
cmp
aam
rorb
mov
mov
or
aaa
dec
in
cmp
sub
in
jne
jo
add
pushf
cmp
mov
cmpsl
insb
pop
ljmp
adc
adc
cmp
dec
push
lock
xor
jae
hlt
out
push
ficoms
rclb
jno
loopne
addl
data16
mov
jp
add
adc
stc
and
sub
mov
add
dec
call
lods
push
mov
fldl
stc
jne
icebp
cmp
jns
cwtl
pop
mov
rol
push
xor
add
pop
mov
dec
aad
push
mov
jmp
mov
push
aam
dec
mov
je
xchg
aas
adc
mov
movl
push
jecxz,pn
in
pusha
sbb
scas
mov
xchg
xor
add
stos
inc
xlat
mov
leave
jns
ljmp
es
or
aad
call
pop
rcrb
xor
adc
mov
lock
xchg
ss
push
int3
loope
das
add
fidivrl
test
dec
xor
repnz
ljmp
fildl
scas
mov
sub
ret
or
pop
sub
sbbb
inc
rcrb
movsl
das
rorb
cld
leave
push
pop
add
int
mov
jmp
in
xchg
and
push
out
sub
mov
das
or
inc
js
cmp
add
cmp
shl
fdivs
dec
sbb
into
fnstenv
xor
rclb
cltd
or
hlt
into
xchg
mov
sbb
daa
out
inc
and
add
test
and
fiaddl
int
mov
pusha
and
add
ja
mov
in
add
sub
data16
es
andb
add
inc
call
jl
add
mov
test
cwtl
add
sub
or
rorl
inc
inc
loopne
cmp
add
push
cltd
adc
add
mov
and
pop
cmp
addb
cmp
sbb
sti
imul
aaa
inc
add
xchg
fs
gs
loope
xchg
stos
movsb
adc
rcrl
call
jb
ljmp
xor
ret
and
inc
lret
sub
in
lcall
inc
mov
mov
shlb
xorb
mov
imul
sub
mov
aaa
xchg
cwtl
das
mov
decb
orb
add
cmp
dec
push
cmovge
add
or
fiaddl
xor
mov
pop
push
pop
movsb
sbb
jo
adc
pop
push
jecxz
or
or
add
push
xchg
and
into
test
jle
sub
testl
sbb
in
out
test
mov
add
test
pop
pop
lret
inc
cmp
sub
add
aas
mov
add
mov
in
mov
add
or
push
adc
and
push
push
add
xor
sub
mov
movsb
cmp
or
xlat
orb
inc
push
pop
loopne
lret
push
xchg
adc
mov
adc
mov
cmpsl
add
jo
mulb
add
in
dec
int
or
and
stos
pop
out
pop
fimull
mov
add
jo
stos
and
pop
adc
insl
in
jo
into
add
push
push
loopne
add
das
test
sub
call
rcrb
popf
cmp
add
shlb
je
test
rcll
loopne
xchg
popa
aam
fcmovb
dec
sub
add
mov
cmp
add
mov
aad
dec
sti
cmpsl
hlt
sub
ja
inc
into
aaa
sbb
inc
into
loop
push
dec
fldcw
add
cmp
cmpsb
movb
adc
or
jmp
cld
add
loop
dec
jle
cli
into
add
jl
movsb
sub
xlat
mov
cmp
cmp
mov
pop
int
loop
inc
add
sbb
sbb
fldt
cmp
dec
lret
pop
sbb
aam
add
out
jnp
loope
popf
add
mov
xor
mov
hlt
arpl
sbb
mov
add
lea
subl
leave
or
lods
std
ljmp
and
ds
pop
pop
pop
popa
pop
jge
mov
inc
sbb
add
jnp
sbb
pop
pop
push
clc
mov
push
cmp
fidivrs
pop
sbb
cmp
xor
xchg
sbb
sbb
scas
popf
add
bound
xor
jl
push
leave
test
jns
add
aad
mov
cwtl
push
or
sbb
subb
add
or
loopne
or
jecxz
imul
push
lcall
sbb
jae
rclb
xlat
push
add
loope
sbb
out
loopne
test
shrl
pop
and
inc
fsubrs
je
xchg
jno
js
lock
push
andb
dec
std
sub
lea
test
pusha
push
xchg
lock
cs
pop
cmp
nop
imul
je
icebp
stc
movsb
clc
pop
js,pt
sub
mov
jb
adc
inc
dec
ljmp
cmp
add
jne
add
out
int
fistl
pop
lds
in
xlat
scas
aam
addr16
add
enter
pop
add
insl
add
and
icebp
les
add
xor
mov
roll
add
mov
std
jns
movsl
pop
cmp
adc
test
call
push
cmp
ret
pop
aas
mov
and
sarb
imul
lret
push
fdivrs
roll
insb
dec
sbbl
inc
add
mov
or
mov
leave
jns
xor
add
fldl
icebp
andb
aad
xchg
dec
in
mov
jle
pop
jecxz
sbb
dec
cmp
fdivr
aaa
jp
add
push
add
pop
aad
cmp
inc
add
adc
ret
xchg
and
rclb
lea
popf
fsin
inc
clc
jp
jb
cli
rclb
cltd
xchg
dec
sub
pop
sub
aaa
jb
mov
pop
jl
imul
jnp
pushf
lods
add
push
adc
fs
and
inc
pop
jbe
add
sub
lods
dec
rol
roll
clc
add
sbb
in
add
mov
pop
add
pop
divl
pop
push
inc
jecxz
add
stos
mov
js
outsb
pusha
push
call
out
stc
clc
ljmp
add
dec
pop
cmp
mov
mov
or
add
xlat
push
sbb
es
sti
in
push
pop
add
or
test
cmp
dec
jg
ret
repz
icebp
mov
in
mov
dec
cwtl
aad
test
fildl
push
scas
call
data16
add
insb
fcoms
mov
jae
cmp
movsl
jnp
into
in
or
pop
dec
fcoml
add
rclb
sbb
in
scas
jbe
sub
or
call
test
push
lods
push
add
xchg
lahf
lret
dec
sub
xor
xor
pop
scas
or
dec
push
add
repnz
mov
add
adcb
add
ljmp
pop
dec
pop
aad
pop
je
out
add
loopne
jo
jno
add
jecxz
es
mov
add
adc
push
xchg
lds
addl
mov
les
inc
xchg
std
add
pop
and
push
and
adc
imul
nop
pop
test
addr16
adc
adc
mov
imulb
nop
pushf
rcll
or
imul
mov
sub
pop
dec
loope
lock
and
and
adcl
inc
xlat
xor
loopne
repnz
add
xchg
je
out
sysenter
inc
ret
dec
and
add
idivl
mov
add
mov
repz
repnz
mov
mov
ret
test
hlt
dec
and
add
and
int3
scas
mov
pop
js
xor
nop
pop
xchg
add
mov
inc
repz
mov
imulb
sbb
pop
cmpsb
push
sub
dec
popf
sbb
inc
inc
cmp
add
add
sbb
cmp
add
fldt
mov
loop
aaa
mov
push
dec
rol
xor
sbb
xor
adc
push
pop
ja
mov
mov
sub
push
push
or
jo
les
or
xchg
test
add
pop
add
shr
pop
mov
nop
pop
or
loopne
loope
cmp
pop
lods
fildl
sbb
push
xchg
pop
sti
cmp
and
es
imul
cld
test
mov
jp
add
cli
jbe
cmp
mov
aad
loopne
xlat
add
pop
daa
aas
cmp
pop
xor
fnstcw
imul
cli
out
jne
sbb
sub
sbbb
dec
mov
ljmp
add
xchg
mov
pop
jge
cmp
addr16
pusha
or
cmpsb
and
scas
or
sbbb
cwtl
jl
test
mov
int
out
movsl
shll
add
mov
xor
inc
sbb
xchg
add
pop
inc
or
dec
adc
je
testb
pop
sar
push
fnstsw
int3
xor
xchg
pop
repnz
inc
aam
leave
sbb
dec
stos
clc
sbb
and
in
sub
aas
xlat
sbb
xor
leave
ret
cmp
sbb
nop
dec
inc
rclb
dec
jge
jne
add
add
scas
shl
testb
xchg
cmp
jae
cmovno
sbb
jl
mov
jo
pop
out
loopne
mov
cmpsb
movsb
add
stc
jle
push
clc
xor
lahf
or
inc
dec
in
call
mov
aam
lods
add
dec
scas
mov
and
test
adc
add
push
inc
je
sbbb
jnp
or
dec
push
sub
mov
ljmp
mov
xchg
mov
bound
pop
add
das
jnp
add
adc
jbe
pop
pop
addb
xor
xchg
lret
dec
xchg
lock
add
cltd
xchg
popa
nop
aam
push
fstps
mov
fidivrl
movups
push
inc
rol
int
add
cmp
xchg
lds
das
dec
ss
add
les
push
ret
mull
add
into
mov
jb
xchg
mov
aaa
lcallw
cmp
cmc
cs
lock
adc
mov
test
nop
adc
cmp
int
mov
jecxz
cmp
xchg
out
cmp
into
mov
jnp
pop
rcrb
ds
jb
rolb
in
lods
jge
xchg
add
sbb
das
pop
adc
aam
sbb
mov
out
cmc
addr16
mov
add
ds
dec
lods
pusha
adc
scas
jo
adc
jmp
jb
pop
jae
test
adc
cli
testb
mov
nop
or
push
push
cld
call
jl
data16
mov
scas
mov
test
sarl
pusha
imul
add
sub
daa
xchg
push
in
jnp
jb
cli
pop
ss
or
or
pop
sbb
sub
dec
inc
pop
add
push
add
fnstsw
add
int3
and
add
push
add
call
outsb
mov
rclb
mov
ffreep
mov
jo
adc
loop
sbb
rolb
mov
adc
or
stos
lret
mov
jecxz
sbb
inc
rol
outsb
iret
lds
xchg
out
or
or
jb
mov
add
repz
pop
add
jl
repnz
stc
add
or
sub
lock
sarb
and
arpl
mov
inc
add
inc
addl
push
or
pop
clc
mov
pushl
add
iret
cmc
add
and
mov
clc
push
stos
out
push
cmp
jns
and
mov
int3
add
and
push
imul
and
pop
xchg
sub
int
push
push
add
fs
or
adc
or
xchg
cmpsl
je
sub
loope
xchg
mov
ljmp
clc
cs
out
repnz
push
inc
and
lods
mov
add
stos
int3
popf
add
push
push
adc
adc
testl
inc
mov
js
cmp
or
fiaddl
sub
sub
dec
loop
or
sbb
mov
add
mov
sub
push
scas
mov
xor
jb
fcmovnb
add
call
sti
addr16
add
and
sub
pop
sub
push
sub
cmpb
dec
or
cwtl
sbb
dec
cli
imul
xchg
sub
xorb
push
add
add
cmp
add
adc
sbb
inc
add
pusha
fs
das
add
and
insb
add
jmp
jmp
add
clc
rcrb
adc
pop
imul
add
cltd
mov
jl
sub
ljmp
jno
add
aam
cmpb
mov
sbb
rep
add
push
lcall
pusha
sub
dec
jmp
cld
jo
xor
ficoml
jecxz
fcompl
inc
pop
add
mov
mov
data16
sbb
les
add
xor
cld
push
add
outsb
inc
dec
mov
dec
cmp
xchg
divl
sbb
inc
mov
ja
stos
jae
jg
add
cwtl
jl
loopne
sbb
xchg
pop
xor
cmp
aaa
pop
mov
or
pop
mov
add
cltd
mov
fmulp
hlt
sbb
stos
mov
lcall
pop
in
pop
xor
add
lds
fadd
jge
add
stc
xor
pop
ret
insb
adcl
test
inc
mov
test
jno
mov
jb
add
mov
aas
add
es
lock
in
pusha
cwtl
lret
cmpsb
int
mov
sbb
pop
je
pop
movsl
pop
cmp
push
enter
addr16
clc
jmp
out
mov
loopne
pusha
sbbl
mov
add
inc
loopne
inc
push
jno
adc
ds
mov
lret
sarb
push
out
fldl
push
add
jbe
or
loope
sbb
and
inc
mov
add
pop
adc
or
mov
into
inc
sub
or
mov
xorl
cmp
dec
daa
repnz
add
or
bound
sub
aam
lcall
cmpsb
fistpl
shlb
xor
addb
jl
add
cmc
hlt
lret
ffreep
add
cmp
add
movsb
adc
inc
mov
and
and
mov
loopne
shrl
cwtl
dec
add
push
inc
pop
cli
cwtl
test
in
add
pop
push
mov
add
sahf
orb
loop
cld
sbb
mov
dec
call
mov
mov
dec
jns
add
lret
mov
adc
loopne
push
loope
and
iret
xor
cs
insb
mov
pop
push
jo
add
ret
fdivr
cmp
xor
add
mov
rolb
movsl
add
ljmp
dec
sub
add
rcr
jge
fdivl
in
lret
xor
mov
inc
cmpsl
pop
pushf
fmulp
out
popa
fs
andb
fistl
rolb
push
jb
and
adc
add
dec
mov
jmp
xor
aas
mov
add
dec
aam
fdivl
xchg
and
push
push
push
jns
pop
add
dec
les
inc
nop
pop
push
mov
adcb
add
mov
pop
mov
jg
pop
clc
lods
cmp
add
mov
xchg
movsb
xor
add
pop
mov
int3
pop
push
sub
fisubs
insb
cmp
dec
cld
insb
add
jmp
jg
pusha
adc
fildl
sub
bound
xchg
mov
sbb
inc
int3
popf
xor
add
push
adc
test
testb
add
jo
hlt
mov
pop
add
push
movsl
flds
jae
icebp
aaa
push
incb
xchg
test
scas
repnz
add
and
les
mov
shrb
mov
into
push
xchg
shl
incl
jecxz
inc
clc
imul
jo
mov
lods
add
inc
lods
mov
fs
adc
pusha
enter
cmc
loopne
adc
xor
popf
jl
xor
sub
cmpsb
ss
xor
add
inc
enter
xor
add
or
fwait
add
jne
jno
sahf
mov
lds
xchg
add
test
jl
jmp
iret
sar
add
movhps
pusha
js
pop
inc
jmp
jl
loop
es
and
bound
sahf
into
xor
mov
adcl
lds
lods
sbb
push
cmp
cld
add
pop
movsl
mov
inc
add
mov
out
add
mov
sbb
aas
jb
addb
aad
xor
cmp
cmp
add
and
xchg
popf
add
cmp
mov
rorb
add
cmpsl
popa
lods
add
dec
or
fcoml
dec
out
movsb
add
sub
aam
mov
jecxz
inc
enter
mov
mov
notl
fwait
sahf
iret
fmuls
rdtsc
cwtl
and
das
add
int
inc
add
or
xchg
add
in
jns
add
mov
jae
dec
je
and
fwait
dec
mov
dec
mov
inc
jmp
add
insl
or
add
add
cmp
push
xchg
outsb
clc
pop
mov
ret
xorl
mov
sub
push
and
out
lds
jae
adc
mov
insb
paddq
and
mov
pop
in
cmc
add
test
movsb
fiaddl
int3
out
xchg
enter
pushf
mov
or
mov
inc
inc
push
out
and
lahf
jl
addb
xor
jns
xchg
mov
loope
xorb
out
repnz
jnp
xchg
cltd
pushf
add
dec
repz
je
add
mov
sub
add
xor
add
inc
add
out
push
pop
cld
sbb
jg
hlt
mov
notl
add
frstor
cwtl
jb
mov
add
inc
pushf
movsb
sbb
enter
cwtl
add
push
mov
fsubs
mov
sbb
stc
add
lret
cs
das
incl
sbb
je
pop
mov
jb
mov
lahf
mov
jne
mov
mov
and
push
nop
clc
add
cmc
ret
xor
stc
pop
xor
lret
xor
add
jle
adc
pop
popf
andl
or
add
aaa
sbb
mov
outsl
mov
sbb
repnz
xor
push
in
push
push
das
dec
inc
add
inc
movsb
pop
andb
lret
loope
mov
mov
adcb
add
dec
sub
and
rolb
dec
inc
add
rcrb
adc
shl
jae
adc
insl
mov
enter
mov
xchg
aaa
inc
dec
cmc
cmovns
adc
mov
in
data16
add
test
jle
mov
push
es
add
push
cmp
or
and
mov
sub
push
jno
bnd
loopne
les
ja
push
fdivr
mov
add
icebp
sub
and
xor
pusha
mov
add
filds
sub
ret
call
mov
daa
mov
leave
pop
fwait
jl
xchg
shlb
cmpsb
add
pop
inc
dec
jb
adc
ja
add
insb
adc
push
xchg
jg
dec
jnp
inc
and
repz
mov
add
sub
fdivrp
jns
cmpsl
jo
fists
push
add
sbbb
sahf
adc
pop
xor
rolb
xor
sub
stc
mov
add
movsb
jecxz
sahf
cmp
rdmsr
out
leave
loopne
add
jg
xchg
or
lea
fdivs
cmpb
bound
pusha
push
mov
jae
add
sbb
and
div
jp
mov
and
and
or
mov
jg
push
je
lea
das
adc
pusha
or
jbe
add
ja
xor
xchg
enter
add
xor
and
xor
call
xchg
add
shrl
add
cwtl
lret
mov
clc
add
push
enter
std
add
pop
pop
notb
aaa
sbb
push
jmp
pop
testl
repnz
lahf
cmp
adc
jns
xchg
outsb
les
ret
push
add
xorps
mov
pusha
cmp
stos
lret
out
dec
add
gs
mov
inc
push
enter
fsubrl
test
cwtl
pop
rolb
nop
enter
cmpsl
mov
fisttpl
loop
sbb
add
incb
aas
push
into
push
jb,pn
cmp
or
bound
adc
xchg
lret
daa
sub
dec
xor
dec
xchg
in
sub
call
inc
inc
movsb
shrb
mov
mov
ffreep
daa
pop
mov
sbb
pop
push
xor
rolb
jo
mov
pop
mov
cmp
popa
js
outsb
scas
repnz
orl
pushf
pop
jno
icebp
ret
das
mov
or
cmp
xorb
add
subl
ss
andb
pop
sbb
mov
aam
jo
divb
rol
add
add
cmpl
mov
cmp
dec
sbb
movb
pop
shlb
gs
push
sbb
mov
dec
sbb
mov
add
cmp
js
mov
mov
sti
repz
scas
lods
sbb
orl
sub
ss
test
add
adc
jnp
cmc
inc
rol
add
sbb
pop
mov
add
xor
mov
in
and
cmpsl
cli
dec
movsl
inc
test
notl
jmp
mulb
arpl
push
stc
jl
jbe
decb
inc
stos
jne
dec
out
inc
add
fldenv
leave
push
pop
scas
fwait
add
in
cmp
cmp
xchg
add
push
and
sub
daa
mov
sbb
xchg
add
pop
enter
imul
inc
loopne
dec
lock
loopne
and
add
pop
pop
sbb
inc
jbe
sbb
and
test
ret
sub
pusha
cmpsl
xor
sbb
dec
cmc
push
dec
pop
xlat
jecxz
mov
jge
divb
roll
dec
and
jae
sbb
mov
pop
mov
enter
pushf
lcall
cmp
sub
shrl
lock
add
data16
inc
repnz
flds
add
cwtl
dec
sbb
dec
ret
and
mov
aas
outsl
or
mov
das
add
pop
cmp
adc
cmp
testl
or
ja
cmp
pop
out
add
or
in
add
aam
jb
rcrl
xchg
aad
in
shl
add
push
hlt
xor
sub
lcall
sbb
mov
xorl
iret
loope
cmp
dec
fldt
lds
xor
xchg
sbb
dec
iret
into
mov
xor
inc
add
arpl
test
inc
xchg
lret
sahf
sub
hlt
popf
testl
leave
addl
mov
dec
les
in
out
adc
rorb
xor
js
mov
dec
push
lret
dec
cmpsb
stos
jp
add
add
pop
mov
push
jae
and
add
dec
ja
sbb
aad
jo
or
jno
jmp
insl
adc
xadd
mov
repz
daa
xchg
mov
add
mov
int3
xchg
leave
mov
add
add
cmp
test
movsb
movl
test
data16
add
mov
jns
mov
out
std
jae
sarl
and
add
and
sub
mov
jge
mov
ja
daa
jmp
and
mov
add
or
ret
and
xchg
add
xchg
sbbb
inc
inc
stos
outsl
sbb
fucom
divb
add
incl
clc
stos
movsl
lahf
dec
push
mov
jo
sbb
cld
xchg
add
negb
mov
mov
add
out
repnz
add
dec
push
push
add
lods
ror
jl
cwtl
lahf
fsubl
jle
das
add
sti
add
shrl
inc
jmp
add
mov
add
sbb
addl
or
insb
pop
rclb
add
out
shlb
add
imul
jb
or
add
add
mov
cmp
ds
addb
int3
mov
mov
xchg
mov
pop
mov
push
fcoms
dec
xor
sti
push
stos
jo
add
and
cli
imul
cltd
cwtl
push
popa
mov
daa
mov
mov
jnp
out
enter
mov
jmp
push
subl
sbb
stos
add
mov
sbb
cmp
add
xchg
adc
cwtl
in
and
pop
loopne
inc
imul
aas
call
jnp
inc
movsb
add
cmc
pop
dec
pop
mov
mov
or
cwtl
fs
out
ss
mov
mov
xorb
jmp
ficompl
add
sub
lret
add
pop
mov
mov
add
cmp
cmp
xchg
adc
add
mov
xchg
add
fcomi
rcll
mov
mov
push
add
pop
and
loop
fwait
add
inc
and
push
pop
pop
mov
jae
add
jbe
add
mov
jo
clc
jge
jp
inc
cmpsb
fcoms
adc
les
fwait
pop
in
push
jp
jns
shlb
out
pop
out
xor
push
jnp,pt
mov
aad
aaa
inc
xor
push
jp
xlat
xchg
nop
pop
add
push
xchg
mov
push
xor
mov
adc
xor
mov
dec
add
gs
adc
and
cmp
dec
ficoml
add
ss
mov
xchg
cmp
cmp
xchg
push
add
test
jecxz
mov
add
ja
rclb
push
add
loop
out
inc
mov
push
clc
jle
sub
push
cmp
mov
shlb
xchg
out
jl
xchg
and
js
add
loopne
jle
fnstsw
lock
test
insl
or
shr
mov
or
fcoms
mov
push
add
daa
xor
push
dec
sahf
and
arpl
ss
mov
rorb
and
push
adc
add
mov
out
add
inc
xor
mov
adc
or
mov
mov
sub
and
shl
in
add
rcll
jp
cmpb
pop
nop
mov
mov
cwtl
repz
add
lock
xchg
sub
add
mov
xchg
add
stos
out
fbld
pop
das
or
sbb
dec
lods
lret
std
adc
stos
out
xor
mov
cmc
add
ds
add
pop
in
or
sti
and
fildl
out
cmp
cmpb
loopne
push
mov
mov
push
test
in
adc
adc
pop
repz
lret
push
mov
dec
cmp
cwtd
cmpsb
lahf
push
sahf
add
jbe
jge
int
xor
out
add
addr16
xchg
pop
iret
jns
cli
lock
xchg
fidivs
pop
je
rol
add
mov
and
dec
inc
sahf
push
fwait
lret
cld
dec
push
std
sbb
xchg
push
sbb
jae
cmp
push
mov
xor
inc
iret
cmpsl
popa
dec
shlb
mov
add
and
dec
outsl
lahf
add
mov
dec
cwtl
loopne
popa
add
jl
subb
out
adc
adc
jmp
adc
mov
fsubl
xor
mov
push
call
jl
add
rcrb
dec
pop
add
mov
inc
mov
inc
add
jo
shrl
aad
jg
or
xor
test
popl
call
dec
or
sbb
andb
adc
inc
sarl
add
or
ja
inc
mov
adc
imul
push
popa
mov
lea
mov
sbb
jmp
ljmp
subps
hlt
andb
nop
sbb
std
dec
xor
pop
stos
push
je
mov
cmc
add
clc
or
jg
add
sbb
adc
or
sub
or
jmp
push
out
pushf
pop
sub
mov
loop
add
xor
sbb
pop
cmp
pop
adc
mov
xchg
int3
xchg
ljmp
fwait
jno
sbb
scas
mov
stc
dec
mov
sbb
mov
mov
push
cmp
negl
out
pop
fiadds
stos
push
jbe
add
notl
mov
xchg
rcrl
cld
inc
sbb
sub
daa
pop
xlat
pop
pop
and
stc
push
push
enter
js
cltd
inc
mov
adc
fwait
mov
or
in
push
subb
shll
sbb
add
or
add
pop
cmp
cld
int
cltd
jle
and
and
shr
lock
sbb
push
add
mov
cmc
cmp
or
test
nop
jno
pushf
dec
sbb
or
add
insl
aad
mov
sarb
popf
cs
hlt
inc
add
sub
add
hlt
sbb
inc
gs
dec
sarb
or
fucomp
and
and
jmp
xchg
add
mov
xchg
and
push
rep
outsb
jge
add
aam
mov
sahf
add
jbe
dec
mov
add
into
push
fbld
inc
adc
inc
dec
pop
mov
push
aam
sahf
lods
stc
loope
add
scas
inc
dec
ss
rcl
int3
cwtl
xchg
push
jae
stos
dec
jns
inc
call
xor
adcb
ljmp
sub
pop
and
add
loope
in
aad
sub
shll
loope
xor
adc
add
adc
aaa
jb
add
ucomiss
mov
xchg
sbb
push
mov
notl
je
add
imul
add
es
js
mov
mov
and
dec
and
fdivl
stc
xchg
or
and
jno
sarl
xchg
imulb
push
popf
pop
imul
stos
cmpsl
inc
bound
divl
or
add
in
cmp
add
dec
mov
or
jmp
pop
fstl
popa
jecxz
push
add
rcr
not
mov
jbe
sub
jle
popa
pop
mov
xor
test
call
stc
adc
add
adc
jns
mov
xlat
or
aam
xor
xchg
jg
orl
push
cltd
mov
add
push
call
jl
shll
test
dec
sub
inc
sub
mov
ds
jg
jle
pop
lods
js
ficompl
lcall
jbe
pop
inc
test
sbbl
shr
add
out
push
mov
add
mov
insb
test
cs
cmp
inc
xor
xchg
ja
add
mov
ss
xchg
js
or
loop
push
and
push
test
clc
add
push
ds
push
push
jae
rcll
cwtl
aam
repnz
cmp
jno
pop
dec
jb
pop
inc
push
or
aaa
fcoms
loopne
and
dec
adc
add
pop
movsl
popa
inc
jmp
add
lahf
add
fiaddl
cmc
and
jbe
ret
push
stc
dec
xchg
aad
sahf
je
lock
push
cmc
in
movsb
jle
add
cld
xor
clc
cmp
xchg
cmpb
and
into
inc
pop
cmpsl
add
daa
pop
arpl
sbb
xchg
call
cmp
jmp
mov
out
xchg
xchg
xchg
leave
jge
add
out
dec
adc
mov
add
std
fistpll
cmp
subb
or
enter
cwtl
pop
fxch
push
and
cld
pusha
xchg
xor
add
mov
xchg
pop
out
cmp
push
adc
mov
push
ror
ss
adc
add
mov
pop
jb
add
xchg
inc
mov
pop
add
popf
mov
xor
and
xchg
inc
fmul
push
jg
in
mov
push
xor
jno
rclb
pop
test
lret
sub
pop
daa
or
push
scas
fbld
xchg
sub
sbb
ss
sub
fsubrl
mov
inc
int
pop
shrl
pop
adc
xlat
outsl
mov
leave
out
xor
and
cltd
jbe
dec
pop
or
sbb
adc
ret
aas
adc
add
jb
rolb
repnz
or
mov
test
les
jb
nop
inc
xchg
outsb
add
and
shrb
rolb
scas
mov
add
pop
sub
sbb
lret
stos
jge
rolb
repnz
add
popa
shll
mov
sti
pop
lahf
daa
imul
cmp
add
outsl
mov
add
out
cmp
sub
in
push
add
push
inc
sub
add
iret
push
pusha
les
push
je
icebp
in
pusha
mov
add
jp
mov
call
pop
add
addb
test
cltd
out
add
pop
or
add
dec
cmp
pop
inc
popf
addr16
jno
in
int3
mov
jmp
ja
std
push
aam
mov
daa
rcr
or
je,pn
ret
aaa
push
mov
pusha
inc
movlps
add
push
push
movsl
repnz
xor
push
lret
aad
cmp
fisubrs
mov
adc
dec
cli
jo
or
testl
in
inc
out
jo
add
xor
sarl
mov
dec
adc
rcrl
push
pop
xchg
sub
sbb
enter
push
jnp
mov
mov
jns
xor
xchg
js
add
addr16
dec
lret
push
loope
and
ja
sub
and
add
scas
sbb
aam
mov
shlb
lods
add
sbb
ror
sub
add
enter
jp
push
add
pop
aaa
push
xor
in
adcb
pop
xchg
pop
lret
add
xlat
xor
mov
push
adc
shll
push
mov
in
call
xor
or
pop
pusha
or
mov
sbb
cmp
and
ds
push
cmp
fs
mov
add
aaa
jb
mulb
bound
ds
inc
lea
addr16
jle
nop
jo
xchg
ja
scas
dec
cmpl
and
and
mov
xchg
adc
aaa
hlt
pusha
cltd
xor
push
lock
gs
add
cmp
enter
xchg
lret
pop
scas
add
add
pop
pusha
cmp
rcll
insb
push
mul
pusha
cmp
movsl
ret
cwtl
and
mov
mov
nop
shll
sbb
push
pusha
adc
xorl
movsl
mov
sub
cli
or
mov
cltd
outsl
lcall
mov
xchg
out
xchg
or
mov
mov
sbb
das
push
repz
and
pop
pop
add
ret
cwtl
and
lock
and
jbe
sbb
shl
shlb
lret
fidivrl
inc
sbb
rorb
out
pop
inc
mov
push
add
push
cltd
adc
imul
in
xchg
sbb
mov
sub
mov
and
into
incl
not
imul
jl
movups
pop
lods
mov
adc
xor
divb
or
je
add
mov
cmc
inc
xor
rolb
push
dec
inc
les
mov
cld
sti
ret
push
ljmp
sub
aam
adc
inc
mov
sbb
imul
add
sbbb
push
mov
cwtl
push
xchg
cmpsb
stos
inc
adc
add
xorl
fmull
lods
or
fwait
add
cltd
cmpsl
data16
adc
popa
push
roll
out
push
lds
and
add
pop
push
stos
xchg
out
sub
imul
add
and
subb
add
or
sub
and
rcrl
mov
inc
fisttps
les
sub
fdivs
cwtl
int3
mov
mov
push
stos
into
shrb
je
add
cmp
push
inc
scas
movsl
add
imul
outsb
scas
nop
fs
adc
lds
loope
jecxz
add
std
pop
mov
lock
xchg
add
lods
dec
and
add
xchg
in
pusha
jmp
sbb
xor
hlt
mov
add
adc
cwtl
out
inc
test
and
add
movsl
push
rclb
adc
or
aad
or
mov
test
fbstp
xchg
push
cmp
cmpb
add
adc
ja
fsubs
sbb
cmc
je
xor
add
jno
in
les
pop
mov
add
push
xchg
jmp
add
xor
add
and
push
pop
jg
inc
push
push
dec
movsb
and
cmpsl
xor
mov
mov
hlt
cld
andl
daa
pop
fiadds
sbb
stos
icebp
in
std
jo
add
xchg
pusha
xor
add
imul
cmp
or
and
lods
add
popa
mov
mov
mov
cmp
stos
scas
add
in
jbe
mov
or
mov
ss
inc
pop
push
and
or
leave
subb
cwtl
add
add
add
inc
iret
lret
fcoms
mov
fsubrl
or
mov
or
cmp
ret
subl
add
movsl
xor
testb
popa
add
xlat
addr16
cmp
cmpb
inc
jnp
subb
dec
mov
add
inc
rorb
add
xorl
add
pop
pop
rolb
dec
xchg
mov
pop
popf
std
arpl
or
mov
add
add
pop
and
daa
cmp
add
mov
test
pop
rorl
push
aaa
adc
pop
lret
add
sbb
js
mov
sub
pop
loop
xchg
cld
sbb
xchg
das
sub
push
sbb
dec
repz
xor
dec
or
lock
cmp
data16
and
clc
and
pop
jge
hlt
push
mov
dec
mov
jle
adc
sbb
and
sub
ljmp
rorl
mov
adcl
mov
mov
outsb
add
pop
loop
push
sbb
call
sbb
jne
clc
xor
adc
loop
sbb
add
adc
cmp
adc
ljmp
loop
or
xor
mov
lea
cmc
inc
xchg
stc
sub
sbb
enter
sub
and
nop
leave
popa
jbe
or
or
movsb
jmp
dec
add
fdivp
push
sahf
lds
adc
jo
add
inc
xorb
sbb
scas
loop
lock
push
sbb
dec
add
cld
lods
fidivrs
clc
inc
cs
loope
sub
add
sub
cmpsl
and
add
insl
mov
mov
jmp
mov
dec
les
cmp
sbb
inc
cmp
setno
stos
xchg
adc
cmpsb
add
enter
fldcw
adc
push
or
rcl
mov
sub
cmpl
fwait
add
cmp
scas
mulb
jl
ja
adc
mov
sub
add
repnz
shrb
pop
mov
xchg
sub
jne
pop
or
vmptrld
pusha
add
loope
cmp
mov
dec
out
mov
test
push
mov
ss
add
mov
outsb
xchg
nop
jne
lods
adc
fbld
jl
test
pop
mov
lods
test
popa
insl
add
xor
imul
sub
or
xchg
shlb
mov
jmp
shll
stc
call
add
add
adc
decb
mov
pusha
cmp
sbb
xchg
mov
scas
rorb
pop
mov
xchg
jb
push
jbe
dec
mov
cli
push
loope
xor
test
mov
orb
mov
add
push
rolb
es
mov
dec
xor
mov
nop
repnz
int3
aas
adc
inc
in
sarb
jmp
and
add
popf
in
insb
add
sub
inc
pop
xchg
pop
lods
in
and
jb
dec
dec
add
es
les
ret
cmp
inc
push
inc
xchg
add
je
pushf
mov
fistl
scas
enter
pop
add
or
lock
stos
ljmp
cmp
sti
insb
pop
incl
imul
add
iret
add
pop
lret
dec
lret
cwtl
add
mov
add
gs
add
call
and
xor
int3
jae
add
cmp
andl
call
insl
push
clc
jno
pop
leave
push
out
ffree
and
lods
cmp
jmp
testl
cmp
aaa
push
fimuls
xor
sbb
push
leave
push
lods
in
outsl
and
xor
aam
xchg
add
popf
mov
xor
cmp
jne
scas
sti
imull
pop
mov
xchg
or
cmpsl
mov
fldl
cmp
les
ljmp
test
xor
add
add
lods
dec
stos
les
fsts
xchg
pop
inc
and
push
add
out
sbb
add
push
jne
adc
ret
mov
add
jp
jl
sbb
xor
or
dec
das
jns
jbe
push
jmp
pop
jno
jge
lahf
arpl
mov
mov
mov
mov
call
inc
jae
mov
jne
in
add
rolb
ret
rcrl
decb
hlt
negl
mov
inc
pop
cmpsb
shrb
mov
add
push
sub
xchg
mov
mov
pop
aas
jno
ret
fst
xor
lahf
xchg
testb
pop
push
mov
sbb
dec
add
lret
inc
in
lcall
sub
cmp
mov
jb
sbb
inc
out
mov
jbe
je
pop
jns
add
je
cmp
ljmp
add
sub
add
inc
into
adc
mov
pusha
sbb
pusha
cltd
push
add
stc
leave
add
pop
rclb
sub
push
or
push
cmp
fisubl
push
inc
mov
or
js
jae
sti
inc
push
adcl
fcmovnb
add
cmp
loope
adc
mov
call
in
loopne
mov
rcrb
lea
rolb
inc
add
add
dec
loopne
push
push
sbb
loopne
dec
jle
jmp
pop
add
dec
jl
scas
mov
imul
test
push
scas
ret
lret
in
loop
mov
pusha
mov
fsub
mov
inc
jbe
mov
out
sti
shlb
mov
std
xor
adc
adc
cmp
addb
inc
sbb
sti
cmp
dec
rcl
dec
adc
pop
mov
push
ds
imul
ret
andb
adc
jns
mov
les
int
inc
lret
ret
pusha
mov
adc
inc
pushw
or
and
test
mov
pop
pusha
getsec
add
mov
jnp
lcall
add
inc
xchg
cmp
jbe
dec
outsb
aaa
or
jg
inc
add
sar
loope
addr16
jmp
mov
bound
inc
jmp
int
xor
add
mov
dec
inc
jecxz
subb
subl
sub
jl
add
andl
add
cmp
shl
jecxz
inc
jl
jp
mov
jnp
add
into
xor
jo
rcrb
adc
inc
xchg
nop
push
test
fwait
xor
or
imulb
pop
sbb
adc
dec
adc
popf
cmp
mov
sti
jnp
pcmpeqd
pop
add
push
cwtl
adc
xchg
jo
bound
xor
lds
pop
add
add
xor
pop
cmp
enter
out
push
pusha
push
mov
popf
adc
dec
mov
cltd
cmc
out
mov
lock
xor
mov
lcall
and
jge
add
xor
xchg
ja
stos
in
pop
stc
js
aad
mov
add
xor
sbb
inc
sbb
roll
add
push
and
pop
add
lahf
push
adc
inc
adc
cld
or
mov
mov
test
fldlg2
add
push
xchg
push
add
popa
fcomps
cmp
std
pusha
cmp
ficomps
mov
xor
push
lea
imul
icebp
add
lock
data16
int
aam
or
dec
in
mov
jno
jo
loopne
mov
andb
loopne
pusha
fildl
mov
das
and
xchg
dec
out
testb
dec
add
adc
pusha
js
in
stos
add
clc
and
pop
add
add
loope
sbb
inc
ljmp
pushf
cwtl
cmp
add
les
inc
add
xchg
inc
mov
scas
orb
mov
adc
data16
fcoms
add
sub
in
sti
popl
cmp
ret
sub
adc
fbld
out
std
dec
nop
dec
test
mov
dec
and
and
nop
mov
mov
mov
out
sub
call
jge
and
and
pop
lock
add
pop
stos
dec
add
jmp
or
sub
xor
add
xor
push
fimull
and
mov
fldcw
xlat
push
nop
add
rolb
add
and
popa
xor
lods
sbb
add
inc
dec
or
push
roll
xor
aam
xor
add
mov
inc
jecxz
fwait
das
adc
push
and
ret
fiadds
pop
mov
fidivrl
clc
jmp
pusha
or
add
push
cwtl
loopne
dec
ja
lods
mov
orb
adc
and
add
mov
pop
fcoms
xor
push
es
pop
and
sti
or
inc
aam
or
aaa
rdmsr
jb
in
push
pusha
mov
add
sub
pop
sbb
je
sbb
adc
rolb
enter
sub
int3
sbb
rolb
jno
mov
mov
arpl
add
cmc
inc
out
mov
add
fwait
enter
lret
jnp
xlat
dec
push
mov
stos
mov
out
add
aad
xchg
loope
scas
inc
pusha
iret
loopne
dec
incb
jle
in
push
cmp
xor
addr16
add
ds
insl
or
iret
roll
pusha
push
dec
aas
std
daa
popf
rol
push
test
inc
scas
push
push
orb
sbb
or
fmull
sub
ljmp
cmp
lods
aam
or
jmp
xorb
xchg
pusha
loop
cld
jne
leave
inc
ljmp
fnsave
dec
add
push
sub
push
scas
pop
dec
nop
push
sbb
add
gs
loope
fidivs
and
mulb
subl
dec
add
add
xor
mov
aam
mov
xor
ja
add
push
les
or
add
hlt
xchg
mov
pop
out
jnp
das
jl
mov
push
fisubrl
stos
rolb
push
leave
pop
adcl
ret
das
pop
mov
mov
jb
dec
aas
decl
cmp
nop
test
insb
add
jbe
mov
cmp
aad
or
subl
inc
in
les
add
sbb
adc
dec
add
adc
cmp
repnz
xchg
and
cmp
xor
inc
les
xchg
mov
cmpsb
push
scas
inc
mov
sub
and
xchg
add
jl
divl
dec
sbb
outsl
pop
repz
pop
sbb
push
and
and
mov
add
push
movsb
lret
xor
sub
repnz
cwtl
in
push
dec
loope
subb
fwait
int
js
mov
adc
cmc
hlt
lcall
or
mov
push
add
xor
add
push
sarb
lahf
lret
push
insb
pop
fdivp
int3
xchg
push
mov
xor
xor
negb
repnz
push
or
mov
inc
mov
pop
divl
fsubrs
das
in
and
sub
adc
xchg
ficoml
jge
add
adc
inc
sbb
inc
subb
ffree
mov
shl
popl
in
inc
xor
xor
subb
mov
sbb
cmpsb
cmp
add
mov
testl
testb
rcrl
fs
aas
cld
sbb
add
pop
sti
cmp
loopne
stos
lds
mov
add
inc
inc
mov
cld
cwtl
adc
ljmp
xor
sbb
cmp
sub
xor
in
jb
lea
mov
ds
das
jne
add
mov
cmp
pop
leave
movsb
add
or
cwtl
cld
jp
pop
in
lahf
xchg
cmp
add
ljmp
add
dec
jge
sbb
dec
shlb
sbb
adcb
push
xchg
sti
shl
fisttpll
push
add
adc
add
bound
jl
push
mov
cwtl
popf
shll
xor
hlt
and
leave
pop
cmp
outsb
add
cmpsl
add
pop
fmuls
call
into
add
cmpsl
cmp
pop
test
imul
sbbb
mov
addr16
inc
add
cmp
pop
pop
pop
add
and
repnz
cmpsl
sbb
clc
andb
fimull
in
loop
add
hlt
adc
mov
and
add
and
jnp
add
pop
sbb
cmp
xor
punpcklwd
push
gs
and
out
cmp
mov
ror
cmp
nop
ret
cmp
mov
mov
mov
pop
incb
movsb
popl
add
or
fcoml
pop
dec
sub
popf
pop
sahf
sub
xchg
iret
popa
jle
jg
add
push
inc
sarl
lret
xor
xor
es
xor
repnz
movsb
add
out
out
push
outsb
adc
add
cmpsl
fidivrl
fcompl
or
ja
xchg
adc
inc
ss
test
add
ret
push
rolb
test
andl
stos
dec
mov
popl
dec
push
pop
inc
xor
xor
sahf
cmp
test
or
cmpb
shl
inc
lock
lock
jbe
sti
pusha
int3
test
adc
mov
jb
add
bnd
push
add
mov
sbb
lds
leave
arpl
lods
dec
or
cmpl
aam
add
mov
dec
mov
pop
sarl
jnp
es
sbb
or
mov
pop
test
cmp
filds
inc
es
mov
shl
popa
pusha
scas
dec
cwtl
mov
mov
sub
aaa
faddl
jg
sti
jmp
dec
add
sbb
adc
xor
lock
add
cltd
sub
pop
add
shll
lret
lcall
mov
fstpl
out
adc
sub
imul
mov
fcmovnu
adc
jecxz
add
and
cmc
push
add
lock
mov
setle
rol
mov
and
mov
adc
jecxz
sbb
nop
in
pop
ljmp
xor
out
add
addr16
aam
addb
add
sbb
iret
jno
icebp
and
sub
fstl
cmp
jge
adc
aam
popa
xchg
push
or
jg
push
sbb
fstpt
dec
cmpl
int
loopne
movsl
push
or
inc
cmp
add
popf
add
pop
adc
sbb
sub
jmp
movl
or
sbb
mov
pusha
ret
push
mov
jo
nop
dec
pop
sahf
add
xor
in
cmp
popa
loope
mov
das
pop
ja
andl
enter
add
inc
test
sub
arpl
push
dec
add
jno
sbb
sti
add
pop
ljmp
leave
lods
rclb
andb
mov
pusha
pop
add
xchg
das
add
mov
inc
pop
in
inc
add
neg
and
pop
js
add
push
insb
icebp
jnp
add
lds
or
in
sahf
add
ja
enter
push
pop
cwtl
out
repz
call
stc
pop
sbb
andb
mov
shrb
or
pushf
add
and
clc
dec
xor
jns
mov
add
mov
xchg
push
mov
add
pop
inc
xchg
fdivrp
add
add
aaa
popa
ja
push
mov
mov
adc
mov
mov
pusha
add
and
test
fmul
mov
push
pop
mov
pusha
jbe
gs
je
inc
movsb
cld
leave
xchg
lock
mov
jmp
cmpb
jno
nop
jnp
dec
pop
repz
xchg
movsb
fsubr
mov
testb
inc
xchg
divl
or
scas
sti
add
lea
add
push
and
xor
add
repnz
sub
jp
mov
adc
xor
sbb
mov
mov
popf
mov
iret
adc
and
nop
xor
fildl
pop
and
dec
dec
cmp
add
adc
add
rolb
add
sub
les
cltd
push
add
inc
insl
jmp
pop
sbbl
add
enter
sub
inc
sub
pusha
sbb
idiv
xchg
pusha
inc
fsubrs
insb
mov
enter
or
push
mov
sub
mov
js
mov
hlt
mov
fstpt
add
dec
push
fistps
mov
adc
inc
lock
push
in
cwtl
adc
inc
pop
mov
push
add
inc
jbe
jno
inc
movsb
sbb
nop
cmpsb
gs
cwtl
inc
add
fwait
mov
inc
mov
mov
xor
fdivs
xor
mull
cmp
add
push
lcall
arpl
xor
ret
sbb
xor
mov
test
add
aas
ficoml
int3
mov
add
push
mov
ds
je
push
ret
adc
mov
add
push
test
mov
mov
cmp
cld
jmp
mov
add
pop
les
mov
jl
inc
arpl
lahf
leave
add
inc
sbb
imul
pop
cmpsl
popa
mov
mov
xor
sbb
inc
loope
rcr
add
pop
xchg
jns
fwait
add
movsl
jge
and
test
add
out
mov
add
out
fcoms
and
add
scas
loopne
push
sub
push
das
xor
scas
xchg
and
adc
mov
pop
pop
js
dec
xchg
aam
pop
push
push
add
cmp
xchg
push
and
sbb
out
add
ja
imul
cmp
nop
add
fdivrp
cmpsb
clts
in
stos
andb
add
fdivs
adc
add
pop
ja
js
sbb
data16
and
leave
xchg
inc
sbb
sub
add
imul
pusha
sarb
call
or
popf
and
inc
xchg
repnz
cmp
jecxz
lock
mov
leave
cli
es
push
fdivrl
xor
lock
es
orl
es
jecxz
lret
add
sub
fsts
adcl
in
adc
inc
mov
imul
dec
in
jnp
lahf
lock
add
je
sub
xor
sub
push
mov
xchg
dec
mov
out
add
pop
idivl
aaa
cwtl
xor
jge
imul
fstpt
bound
pop
add
push
test
sbb
andb
fiadds
sbb
mov
xor
ss
pop
outsl
add
popa
ret
add
sbb
push
rolb
jo
ljmp
das
dec
or
adc
dec
dec
add
test
cmpsb
cmp
mov
shll
and
fiadds
and
and
lds
cwtl
loope
data16
add
cld
sub
int3
mov
pop
xchg
and
in
jo
inc
mov
or
and
jg
cmpsb
pop
in
add
and
insl
cmp
cmp
out
add
shll
or
dec
xchg
push
sbb
push
cmpsl
ret
inc
adc
lahf
aam
nop
inc
add
mov
mov
test
or
fdivl
mov
mov
add
or
add
sub
cli
orb
add
popa
fbstp
push
mov
cwtl
sbb
jl
push
mov
jbe
xor
stos
movsb
cli
call
pushf
or
or
dec
cmp
mov
add
cmp
add
dec
inc
fidivl
jge
or
sbb
pop
add
movb
cmp
push
lds
testl
jecxz
out
mov
xchg
orb
cmp
inc
lcall
cs
loopne
nop
test
enter
add
dec
jecxz
mov
sbb
ror
inc
lea
ljmp
inc
xchg
mov
sahf
ds
dec
rcrb
inc
dec
repnz
add
add
xor
insl
xlat
fcmovnu
movsb
fadds
jmp
loopne
add
das
cmp
mov
lea
call
add
call
sbb
mov
scas
add
or
inc
nop
push
xor
and
sahf
mov
lods
dec
loope
push
dec
add
loopne
add
loopw
push
mov
ljmp
jno
aad
sbb
lret
scas
xorl
fmuls
adc
add
mov
mov
cli
dec
mov
sbb
loopne
andl
dec
xchg
imul
jg
pop
stc
and
mov
insl
mov
add
adc
sub
mov
pop
fldcw
xor
add
js
push
pop
inc
lods
adc
pop
add
push
addr16
pop
fsubs
push
mov
mov
sahf
ljmp
add
and
lods
nop
je
leave
push
test
mov
push
iret
mov
jae
inc
add
xlat
sub
mov
push
cld
xchg
nop
cmp
pop
lds
jp
popl
pop
hlt
xor
shlb
dec
je
add
out
adc
push
jb
sub
enter
mov
in
out
es
add
mov
inc
subl
ret
sbb
xor
mov
jnp
add
cli
or
leave
sbb
sahf
test
adc
clc
pusha
adcb
out
add
rcrb
aad
add
or
cmp
sbb
sbb
mov
push
lcall
push
add
push
insb
incb
ss
arpl
cwtl
xor
mov
loopne
jnp
enter
jbe
sbb
test
add
inc
test
jmp
into
imul
xor
mov
icebp
lahf
test
loop
lods
push
iret
or
nop
cmpsl
add
xlat
test
pop
test
repnz
stos
mov
add
xlat
push
stos
faddl
je
adc
iret
sub
or
enter
lods
ljmp
cmp
cmp
adc
clc
pop
push
mov
push
sub
mov
hlt
out
inc
imul
test
ret
and
mov
fs
jo
mov
add
sub
xor
jo
dec
movsl
mov
add
dec
inc
mov
neg
xor
in
xor
into
push
mov
push
leave
mov
lock
lock
pop
divl
outsb
dec
xchg
pop
movb
sub
push
push
das
nop
sub
and
int
rcrb
outsb
aam
push
clc
or
ss
push
xchg
sub
inc
sbb
cltd
call
push
mov
ljmp
mov
mov
fstl
xor
jae
cwtl
pop
or
aam
rolb
add
adc
cld
mov
add
xchg
test
imul
xor
and
loop
ljmp
push
in
mov
xchg
add
xor
dec
in
jno
ret
cwtl
xchg
add
sub
sti
or
imul
push
push
lods
std
stos
pop
iret
jmp
add
add
and
je,pn
adc
loopne
test
mov
icebp
add
lods
inc
add
pop
js
pop
mov
aam
mov
jmp
mov
mov
inc
lret
in
xor
xor
pop
sarb
lret
pusha
hlt
xchg
fwait
add
jo
repnz
ret
sub
inc
mov
orl
subb
ret
add
in
cmpsb
imul
fidivrs
hlt
add
pop
dec
lods
inc
adc
xor
rcrb
shll
xor
orb
lock
mov
scas
loopne
add
mov
push
push
fmul
add
mov
aad
inc
aas
add
lret
icebp
arpl
pop
push
enter
cmpl
mov
or
pusha
mov
sub
add
inc
shrb
mov
dec
addr16
lret
sbb
add
fxch
and
adc
dec
jmp
jo
add
loopne
daa
jbe
push
jnp
add
pop
lock
mov
mov
dec
cmp
sub
add
pusha
mov
inc
rclb
jno
sbb
fsts
cld
and
orb
or
movsb
xchg
and
out
es
stos
js
std
sbbb
cmp
test
dec
add
je
in
jmp
add
adc
jno
mov
pop
add
pop
fs
lock
add
loope
sub
in
es
mov
sbb
ljmp
sbb
popa
and
mov
mov
xor
sub
add
push
out
adc
js
push
rcrb
add
mov
push
add
js
pop
call
jnp
cld
inc
cmp
mov
sti
andb
jae
jns
in
push
std
xchg
xchg
add
movl
lods
ja
jns
hlt
fsubr
adc
repnz
cmpb
test
xor
je
call
popf
sahf
pop
lock
pop
js
xor
insb
cmp
push
sub
sbb
add
jg
xchg
loope
fcmovnbe
rcrb
add
sbb
pop
imul
in
jno
or
mov
cmp
adc
and
cmp
or
push
mov
movsl
add
adc
add
cmp
out
add
cmp
cmp
push
inc
mov
fs
je
in
jbe
call
push
push
jae
add
xor
enter
shlb
sbb
fldt
nop
push
into
add
stos
cld
push
enter
xchg
out
pusha
rep
add
sbb
popa
push
hlt
mov
add
mov
inc
imul
xchg
mov
ret
xor
jno
cmp
nop
rclb
sbb
nop
push
inc
stos
cmp
scas
xchg
dec
mov
cmpb
cmp
stc
ja
mov
hlt
add
cs
ret
test
inc
add
push
mov
fsubrl
andb
or
push
call
or
fildl
xchg
add
sbb
adc
adc
jns
icebp
pop
ds
lods
add
sbb
mov
outsb
mov
aaa
in
xor
cmpsb
outsl
icebp
add
inc
adc
lahf
in
or
cmp
mov
adc
or
push
jp
idivl
add
xchg
inc
jmp
lock
int
adc
inc
out
push
push
mov
addl
pop
fbld
lcall
adc
lods
xor
and
cmp
es
mov
cmp
add
jbe
push
lcall
xchg
cwtl
push
inc
pushf
push
cli
cmp
cli
mov
imul
mov
or
push
add
dec
xchg
lods
adc
mov
mov
push
mov
cmp
dec
jbe
ds
das
xor
test
mov
out
add
les
push
sbb
mov
lcall
jmp
fiadds
lods
mov
loopne
outsb
cmp
pop
pop
mov
das
ds
mov
and
mov
add
subb
mov
icebp
dec
mov
and
or
xor
sbb
pop
xchg
cmp
cwtl
xor
add
adc
push
test
cmp
cli
or
lods
movsb
add
xor
adc
adc
pop
pop
jmp
adc
push
add
repnz
pop
loop
push
aaa
subl
and
adc
add
mov
lock
add
sarb
loop
aas
pop
stos
add
fsubl
daa
mov
push
mov
mov
push
je
add
cld
cmp
pop
rcrb
mov
sub
jne
add
mov
sbb
add
mov
and
push
add
xor
ds
movl
ret
sbb
jns
xorb
push
filds
imul
and
cmp
add
cmp
mov
loop
loope
loope
pop
stos
rorl
lds
pop
push
cld
and
bnd
cmpsb
xchg
enter
call
jo
xor
ljmp
outsl
sbb
sbb
sbb
sbb
sbbl
fisttpll
nop
cltd
leave
pop
les
jecxz
in
adc
adc
or
push
call
pop
je
loope
dec
mov
loopne
stos
shrb
jge
mov
ja
jg
loopne
fistps
ret
add
scas
hlt
add
scas
pushf
inc
incl
test
mov
jne
push
addl
fldcw
iret
pop
pop
jl
add
popf
dec
out
cwtl
jg
jae,pt
add
sbb
rcrl
dec
iret
or
test
add
sub
sub
inc
mov
jl
je
lods
nop
pop
fstps
inc
mov
dec
sub
pop
rcrb
push
shlb
xchg
mov
aam
aad
pop
or
dec
and
add
jp
jno
test
and
xorb
xchg
cmp
mov
cmp
push
es
mov
cmp
mov
popa
sti
psubsb
push
pusha
and
sub
cmpl
add
cs
push
sbb
jg
inc
jb
imul
sbb
cmpl
shlb
xor
sub
jo
imul
mov
ss
rorb
mov
add
es
mov
cs
and
xorb
andl
add
cmc
das
rcrl
sbb
mov
dec
popa
ret
adcb
mov
in
mov
movsb
pop
shlb
data16
out
stos
mov
or
ljmp
mov
adcb
sub
jns
add
jmp
xchg
int
clc
add
in
andl
adcb
nop
pusha
pop
dec
sub
inc
shll
add
sub
adc
add
mov
loopne
into
push
subb
jle
sub
adc
outsl
mov
add
pop
pushf
call
jo
fwait
adc
out
roll
mov
cmpl
cli
repz
jl
sbb
and
and
clc
sbb
pop
stos
fildll
push
and
repz
cltd
cmp
mov
test
leave
sub
clc
roll
jae
xor
fdivrl
test
adc
out
lods
ja
scas
push
push
jnp
lret
fsubr
add
inc
cmp
dec
xor
mov
and
outsb
jbe
fwait
push
rclb
jne
inc
add
add
pop
outsl
sbb
mov
add
add
pop
push
nop
call
push
cwtl
divl
add
push
xor
dec
xor
adc
or
scas
xchg
rolb
jg
fs
push
std
mov
inc
mov
sti
push
lods
rcll
add
sahf
cmc
andl
lret
addr16
adc
mov
mov
adc
mov
xchg
sbb
flds
bound
push
add
clc
outsb
mov
or
sub
inc
shlb
test
mov
inc
aam
or
js
lea
nop
fldl
jge
cmpsl
aad
add
cwtl
fldenv
imul
imul
nop
pop
mov
pusha
xchg
loop
rcrb
sub
pop
js
inc
mov
loope
cmpsb
xor
mov
orl
mov
add
bound
pop
lcall
push
orb
add
arpl
mov
cwtl
loopne
xor
pop
add
jno
mov
fsub
add
mov
test
add
ret
repz
rcrb
dec
cmpb
pop
add
rorl
xchg
cmp
add
out
divb
je
or
and
jb
pop
mov
nop
enter
cmp
mov
nop
xchg
insb
sub
sarl
xor
jle
pop
lret
inc
repz
test
push
xorl
fisubrl
pop
add
jo
clc
fs
cli
movsb
je
mov
or
hlt
aam
xorb
adc
ja
in
jne
and
dec
stos
fistpll
cmp
add
das
into
pop
mov
das
outsl
mov
fs
mov
xchg
push
pusha
movsb
dec
jne
add
jns
popf
dec
negb
mov
out
jle
add
push
xchg
jecxz
enter
add
mov
add
jns
lods
cmc
pop
jne
pop
sar
loopne
pop
cmp
insb
or
test
lods
cmp
xchg
mov
push
imul
jo
aam
cmpsl
push
pop
mov
dec
or
jae
or
jb
sbb
cld
push
and
adc
int
add
sbb
fdivrl
mov
cmp
mov
mov
add
jae
mov
popl
push
mov
loopne
and
push
or
mov
push
fmuls
call
out
lahf
pop
xchg
cmp
leave
lock
dec
fdivrs
push
or
add
loopne
xchg
sbb
add
adc
sbb
scas
fs
push
loope
xchg
loopne
iret
sub
pop
add
pop
jl
pop
mov
lock
out
jns
mov
add
mov
ja
in
xchg
jb
cld
pop
add
rol
sub
dec
popf
lret
dec
addb
shr
sbb
add
mov
add
sub
test
or
mov
xchg
insl
adc
mov
adc
es
mov
add
hlt
je
cmp
cmp
add
std
enter
dec
ja
pop
mov
ror
or
jg
dec
sbb
xchg
adc
mov
stc
adc
pop
and
dec
andb
and
sarb
mov
cmp
push
sub
and
jno
xor
and
out
imul
sub
sbb
push
sbb
das
sub
add
in
xchg
xchg
sub
and
xchg
shrb
adc
loope
sbb
jl
repz
scas
out
or
inc
pop
fwait
adc
data16
mov
hlt
adc
inc
pop
push
int
insl
stos
push
push
or
mov
or
mov
cli
divl
mov
add
dec
js
and
lret
add
outsb
sub
add
stos
or
mov
bound
loop
adc
add
xor
sbb
xor
xor
xchg
hlt
inc
dec
add
add
arpl
mov
pop
mov
inc
push
push
hlt
fmuls
add
jg
imul
fcompl
and
imul
aas
adc
push
add
data16
loopne
add
loope
push
add
push
mov
icebp
leave
ss
add
je
sub
pop
add
adc
inc
fcoml
into
rorl
pop
inc
fdivrs
adc
push
pop
jge
mov
mov
insb
xchg
fmull
cld
push
aad
mov
pop
js
adc
arpl
cmp
sahf
pusha
ret
imul
cmp
nop
or
mov
or
push
fsubs
pop
xor
mov
push
cmpsl
ror
or
fwait
mov
pop
fmuls
data16
mov
push
je
mov
or
out
movsb
shr
jns
fdivl
sub
sub
mov
mov
mov
xor
add
xchg
pop
and
cmpsb
xchg
and
push
clc
add
mov
shr
loope
call
sahf
cmp
sub
or
adc
js
movsl
pop
dec
je
add
xchg
sub
xlat
dec
add
jnp
leave
fsubl
in
xchg
data16
or
pusha
imul
add
pop
lcall
pop
cmpsl
adc
cltd
add
and
jb
lods
add
test
movsl
sti
pop
and
rolb
mov
jbe
fyl2xp1
sub
add
xchg
inc
jns
test
outsl
cmp
lods
clc
jo
sub
dec
pop
and
cmp
sub
and
adc
or
and
loopne
inc
inc
cmp
dec
mov
fisubs
pop
std
and
in
dec
mov
push
and
jmp
mov
mov
mov
sbb
test
dec
cmc
inc
cld
lea
cwtl
or
add
into
fmull
in
popl
popf
int
dec
pop
mov
cld
out
inc
shlb
iret
add
les
add
movsb
pop
mov
xchg
and
add
in
clc
add
lcall
movntq
sar
pusha
pop
mov
in
lods
loopne
mov
loopne
pop
add
mov
add
push
mov
insl
loopne
data16
mov
cmp
lock
mov
sbb
add
test
xor
adc
data16
cmp
add
mov
xor
int
jmp
adc
inc
test
xorps
mov
nop
cwtl
cmpsb
add
pop
push
push
push
push
lea
add
mov
pop
out
or
ret
and
rcl
std
lds
scas
mov
outsl
fldt
cmp
jno
push
xor
push
xchg
shll
mov
push
shlb
cmpsl
test
ljmp
mov
lods
orb
dec
sbb
jecxz
subb
insl
mov
add
pop
adc
add
in
seta
roll
jle
mov
loope
fldenv
aas
pop
daa
add
sti
popa
jmp
inc
mov
into
stos
call
cmpb
and
jge
push
mov
rol
pop
lret
add
cmp
loopne,pn
lret
sbb
das
dec
adcb
dec
fsubrl
inc
add
aas
push
fucomp
lret
fadds
mov
mov
jno
shl
pop
cld
sbb
jb
in
pop
mov
cmp
pushf
int
cmpsl
sub
rcll
pop
iret
mov
dec
movsb
mov
jle
outsb
rorl
add
mov
pop
cmpb
lods
pop
xchg
sub
xchg
mov
hlt
mov
and
stos
add
popf
add
sahf
ja
dec
je
add
addr16
sub
pop
in
fadds
push
add
push
and
int3
mov
add
test
pop
push
rorb
xchg
movsb
test
push
add
lock
leave
clc
enter
pop
lea
shl
in
rcll
add
mov
add
pop
inc
cld
pop
inc
pop
xchg
push
sbb
sarb
push
ret
mov
in
icebp
scas
ja
and
cld
mov
jb
cltd
jecxz
call
xor
jp
add
lret
stc
int
enter
xchg
rorb
add
ret
popa
xchg
mov
pop
daa
sub
add
out
fisttpll
aas
rcrb
push
int3
leave
xorb
dec
push
add
push
orb
push
sub
xchg
jns,pn
pop
add
cmp
xor
mov
push
push
mov
dec
jle
out
jb
add
xacquire
mov
aas
es
aad
cmp
pop
xor
sahf
cmp
fxam
aaa
pop
test
cmc
ret
sbb
xchg
or
jne
insb
dec
enter
adc
adc
pop
mov
add
xor
loopne
xlat
pop
cmp
adcb
sub
call
ljmp
cwtl
add
insb
movb
lahf
sub
inc
add
mov
lcall
cli
rcrb
cwtl
sbb
dec
rcrl
ret
or
decl
in
add
add
movsb
into
dec
mov
push
xchg
xchg
leave
rolb
rolb
and
add
rcrb
dec
cmp
fisubl
pop
cltd
mov
xor
lret
js
xchg
bound
in
jns
sbb
nop
xor
cmpsl
push
cmp
cs
push
rcrb
ja
adc
imul
divl
ljmp
cmp
in
mov
fcomps
orb
push
sbb
mov
fadds
popf
jle
in
outsb
cmpsb
jge
cmp
xor
mov
pop
lds
ret
into
mov
jb
or
ds
ret
jne
xor
hlt
pusha
inc
ss
cmp
push
add
and
mov
dec
aad
lods
or
bound
add
jno
cmp
sub
dec
adc
ljmp
push
mov
and
in
test
ficomps
add
sbb
fldl
shrb
push
push
dec
lods
ret
push
dec
insb
mov
fadds
cmp
jbe
push
in
insl
dec
add
add
jb
dec
mov
push
std
jge
mov
hlt
xlat
sbb
scas
cmp
jmp
jecxz
or
xchg
loopne
std
push
pop
jo
in
add
adc
add
out
jl
add
mov
push
cmp
mov
lea
inc
add
jb
jl
push
add
mov
jno
mov
xchg
sti
fdivl
imul
add
shlb
add
xchg
sbb
outsl
loop
pusha
loope
imul
lods
and
int3
push
and
add
bound
jno
push
jmp
jle
addr16
decb
adc
sbb
and
test
mov
jbe
push
sub
push
add
ror
jae
add
out
shrl
out
add
daa
push
rorb
push
fbld
mov
ds
ret
rorl
cmp
push
add
cs
jp
rorb
jb
insb
das
cmpsl
adc
jno
cmp
addb
inc
stos
push
pop
lahf
add
lods
push
dec
jo
loopne
mov
cmpsl
jno
sub
fiaddl
or
imul
test
loopne
loope
mov
sub
repnz
push
mov
mov
addr16
mov
xor
pop
rolb
fistpll
idiv
lock
in
sbb
sbbl
add
clc
les
add
ret
ja
mov
jae
add
sub
push
rorb
xchg
andl
mov
iret
push
mov
aas
loope
rorb
mov
cwtl
push
xor
sahf
sbb
adc
in
push
add
add
push
ds
out
jnp
xchg
aad
or
imul
gs
fldl
adc
mov
fistpl
pusha
outsb
lret
adc
addr16
fs
imulb
cmp
addb
ret
lret
sub
hlt
sti
cmp
call
mov
in
add
pop
out
pop
pop
iret
lcall
ss
ret
js
orl
cmp
add
popf
dec
pop
sti
enter
pop
mov
xchg
cmp
imul
add
lahf
add
pop
shll
jo
add
addr16
repnz
pop
pop
xchg
lret
xchg
lock
cmp
ds
xor
adc
mov
lcall
stc
mov
jl
mov
rorl
pushf
adc
add
xor
add
mov
es
out
cmc
add
pop
popa
add
mov
stos
lods
imul
add
jmp
jno
inc
mov
mov
xchg
add
jmp
pop
jae
adc
or
mov
mov
sub
sbb
adc
ret
mov
rclb
sti
lods
cvttps2pi
popf
pop
and
out
sbb
and
pop
ret
jecxz
outsb
mov
rcr
jno
dec
hlt
repz
scas
out
dec
les
adc
jg
xorl
out
sahf
sbb
rcrb
clc
jg
rolb
imul
nop
movsl
jle
outsb
mov
add
loop
sub
fcoms
incl
xchg
xchg
add
xlat
repnz
mov
inc
inc
xchg
push
pusha
mov
pop
xor
int
shr
in
xchg
popl
scas
es
pusha
inc
in
test
rol
iret
loopne
pop
data16
iret
fbstp
xchg
mov
js
fsubrs
nop
test
ret
in
jle
add
nop
sub
jns
add
cltd
cmp
imul
out
pop
out
scas
add
das
jb
add
add
xor
aas
ss
inc
pop
testb
push
loopne
js
cmp
add
aaa
fs
pop
nop
xor
inc
push
add
adc
cmp
sbbl
xchg
enter
add
iret
add
rorb
scas
pop
dec
jp
xlat
xor
inc
call
pop
add
push
cmp
sbb
inc
adcl
mov
imul
jl
add
fldenv
out
roll
andl
mov
mov
iret
sbb
imul
adc
cwtl
add
jle
pop
dec
int
adc
jns
in
and
call
add
xor
dec
lea
into
dec
jo
mov
and
or
and
inc
xchg
add
testl
jl
adc
add
rclb
xchg
pop
pop
pop
add
dec
inc
pop
fnstcw
adc
mov
int
rolb
add
sbb
and
ljmp
dec
out
repz
pop
in
inc
nop
enter
or
jno
and
es
adc
push
movsl
scas
add
repz
dec
xor
test
lret
cmc
cwtl
adc
testb
ss
mov
aas
xor
test
ret
movl
add
stc
fldt
add
cmc
std
sbb
pop
pusha
lock
push
pop
adc
cmpsl
push
sbb
fxam
insb
sub
xchg
and
pop
mov
inc
pop
jb
push
add
push
push
shl
in
fcoml
cmp
mov
dec
ficoms
mov
mov
enter
adc
add
cmp
inc
cmp
sarb
les
add
fildl
pop
add
fs
adc
add
jnp
add
cmpsb
jp
sbb
and
test
or
filds
pop
mov
push
outsb
sbb
dec
pop
loope
sarl
out
popl
mov
lcall
dec
pop
push
fs
fs
add
ret
out
dec
jl
push
mov
mov
pop
or
push
mov
add
inc
mov
leave
add
cmc
and
jge
pop
fdivl
xorl
add
mov
jns
lock
or
inc
add
adc
addb
test
sbb
add
stc
cli
aaa
dec
push
movsl
sub
xlat
add
mov
xor
add
mov
in
pop
sub
jo
sbb
pop
mov
adc
mov
xor
dec
inc
aam
cmpb
test
inc
push
insb
mov
rcrw
mov
mov
gs
test
xchg
in
addr16
cmpsl
mov
arpl
dec
popa
mov
add
iret
add
mov
bound
push
xor
sub
and
xchg
test
imul
dec
ficoms
pop
sbb
jbe
sbb
dec
mull
xchg
ljmp
push
jne
inc
das
and
or
stos
ret
mov
lahf
xor
and
scas
push
xchg
in
inc
add
dec
shlb
cli
push
aam
xor
cmp
cld
je
mov
add
out
mov
daa
jae
inc
fadd
mov
dec
lods
mov
in
dec
sbb
enter
add
mov
shll
adc
or
pop
mov
cmp
addb
rcl
mov
mov
inc
add
inc
or
mov
rcrb
outsl
add
push
dec
jg
sub
ret
mull
lea
clc
aam
das
subb
inc
xchg
xchg
push
ss
mov
insb
mov
dec
es
push
add
into
add
test
add
loop
sbb
or
call
cmp
dec
cld
or
inc
clc
mul
lock
insl
add
cmp
push
dec
jge
arpl
test
sub
push
inc
add
mov
sub
pushf
jg
test
enter
icebp
or
addl
cmp
test
cwtl
push
ja
add
xlat
es
pusha
inc
lret
les
add
divl
rcl
les
cmp
lock
mov
pop
pop
xchg
pop
xor
lock
leave
mov
add
movsb
add
rolb
stos
fcomps
pop
xor
add
or
cmp
clc
cmp
mov
jl
jbe
jnp
xchg
mov
mov
add
hlt
cld
cmp
rolb
add
jne
aam
test
out
pop
mov
dec
mov
dec
clc
imul
sbb
cwtl
or
fwait
shlb
or
push
add
ss
xor
add
xchg
cs
add
push
shll
pop
add
add
scas
lods
inc
leave
out
add
stos
sahf
sbb
ret
inc
aam
rclb
or
add
aas
mov
push
xor
push
add
sub
fcoms
pusha
xor
daa
sti
jo
xor
stos
xchg
add
mov
jge
test
shlb
shlb
call
lea
adc
add
popa
jns
add
call
add
adc
insl
push
lcall
inc
imul
dec
adc
and
add
insl
lock
sub
fs
daa
subb
testb
and
pop
es
jmp
ffree
les
shlb
into
icebp
mov
adc
subb
add
and
sbb
jae
cmp
test
sbb
dec
cli
fcomps
mov
inc
or
lcall
call
js
test
divl
pop
or
mov
push
and
out
mov
lahf
stc
loopne
xorl
dec
add
lea
stc
lods
push
mov
out
iret
in
fld
and
mov
add
dec
mov
out
imul
xchg
jne
cmp
sbb
mov
nop
push
jl
pop
add
les
mov
pop
loop
cld
sbb
add
adc
or
add
xor
ds
movsl
add
mov
pusha
mov
neg
daa
arpl
inc
in
add
add
int
adcb
cli
add
pop
sbb
add
push
inc
inc
xor
les
pushf
jmp
lahf
inc
arpl
dec
rep
bound
outsb
addb
add
jns
push
xchg
sahf
jecxz
and
int
mov
sub
mov
mov
in
cmp
add
lret
add
adc
leave
jp
fs
inc
cmpsb
xchg
stos
mov
pop
mov
imul
addr16
add
adc
js
fbld
mov
inc
mov
mov
gs
jo
les
lahf
xchg
and
insb
test
pop
gs
mov
ret
scas
sub
lds
mov
popa
xchg
add
mov
sub
or
mov
hlt
cmp
filds
outsb
test
loope
mov
stc
add
cmp
jecxz
sub
test
addb
loope
add
sub
test
add
pop
mov
lods
sbb
fiadds
pop
pop
inc
stos
jno
jge
add
stc
into
in
dec
jecxz
ret
xchg
pop
les
mov
aam
cltd
loopne
sub
inc
push
xchg
and
cwtl
xchg
push
xchg
popf
sbb
daa
pop
idivl
mov
add
test
add
rcll
mov
add
mov
add
pop
inc
and
popf
xor
xchg
and
pusha
inc
ret
test
aad
jg
and
in
add
bnd
rcrb
jo
pop
pusha
jp
xor
repz
xchg
push
call
es
dec
and
enter
fadd
movsb
ret
jl
add
mov
in
push
add
fldl
loop
stos
aaa
mov
push
dec
jecxz
sbb
add
addr16
adc
push
loopne
in
cs
add
push
addr16
xchg
cmp
loop
gs
fstps
jbe
pop
add
ss
lahf
push
cmc
xchg
lds
add
sarb
inc
or
cmp
inc
jae
loope
add
iret
loopne
pop
xor
sbb
insl
inc
insb
ja
rorl
inc
cmp
push
add
sbb
roll
ja
add
pusha
test
inc
add
fldenv
mov
mov
cmp
xchg
or
sbb
lds
lahf
jmp
mov
add
cmp
or
sub
popa
enter
lock
jecxz
add
hlt
inc
notb
fildl
lods
out
gs
cltd
pusha
xor
add
imul
add
push
add
ret
call
iret
cld
ss
and
inc
mov
mov
sti
add
cmp
and
nop
or
cwtl
scas
add
data16
inc
pusha
pop
mov
pop
cli
lret
in
and
popf
lock
arpl
add
bound
addr16
inc
add
imul
mov
mov
jecxz
faddl
movl
or
mov
or
ljmp
fs
sbb
add
fbstp
push
pop
cs
jns
pusha
or
ja
or
js
mov
pop
and
rcl
or
mov
or
iret
scas
icebp
and
addb
cli
xorl
add
adc
adc
inc
repz
add
movsl
test
and
rcrl
adc
pusha
pop
mov
into
mov
lahf
hlt
push
cmp
mov
dec
ss
xor
addr16
mov
jg
or
ja
jecxz
stos
aas
jne
add
pop
mov
test
mov
add
pop
scas
aad
and
add
or
mov
decb
hlt
sub
push
or
jne
aam
stos
or
xchg
lahf
call
push
or
and
xor
outsb
jmp
out
popl
push
add
xchg
out
hlt
and
fdiv
bnd
xor
lahf
and
mov
js
lret
pop
cmp
ds
add
loope
add
xor
sbb
inc
out
mov
sub
cmp
inc
fs
and
sti
add
icebp
ljmp
bsr
adc
adc
popa
lods
add
aas
mov
pusha
aaa
loop
mov
lcall
add
sub
mov
out
mov
push
inc
mov
add
xchg
ds
sub
mov
fistpl
rcrl
add
pop
inc
mov
add
or
cmpsb
push
in
sbb
add
fs
aas
lock
outsl
ret
cmp
xchg
push
inc
rorb
or
imul
or
int3
rclb
pop
sub
mov
xor
les
in
xchg
call
test
mov
add
aaa
jmp
cwtl
and
cli
dec
add
mov
ljmp
popa
rcrb
gs
cs
mov
aam
add
jbe
dec
or
out
dec
out
add
or
mov
gs
notb
cld
add
out
inc
test
out
in
or
movsb
jp
sub
or
sbb
mov
movups
push
xchg
lcall
cld
sub
cmp
lock
cmpsl
adc
pusha
ds
pop
add
and
cwtl
inc
jo
mov
and
add
xchg
cld
and
ljmp
add
lock
push
cmpsb
mov
adc
xor
addb
mov
fiadds
iret
push
adc
xchg
jbe
jmp
adcl
add
sbb
dec
inc
lahf
cli
popa
mov
and
lds
sub
iret
sti
inc
mov
add
and
int
cwtl
sub
jnp
cmpsb
push
rolb
ror
inc
movsl
popf
or
lret
orb
adc
into
inc
movsb
in
fcmovnb
add
out
arpl
mov
and
push
cwtl
in
add
mov
mov
loop
cmp
add
mov
xchg
add
ss
add
mov
push
lods
jle
and
sbb
or
add
and
add
scas
jg,pn
pushf
in
shlb
inc
imul
stos
ret
jmp
int3
lock
sub
xchg
inc
data16
add
fisubl
push
hlt
pop
add
push
icebp
aaa
ja
movaps
lods
pusha
cmp
cmp
ror
stc
aam
jno
andb
incb
xchg
pusha
or
call
add
ja
popf
scas
jg
mov
or
jb
mov
mov
cmp
add
les
jmp
mov
add
mov
dec
es
imul
pop
das
repnz
and
add
xchg
add
xchg
dec
mov
mov
xlat
xchg
lret
iret
or
out
xor
dec
lret
add
outsb
in
cmpb
xlat
daa
imul
mov
cltd
pushf
add
xchg
xchg
repnz
je
jl
les
enter
mov
sbb
add
and
cwtl
add
lock
inc
adc
pop
in
jg
ds
add
pop
jo
icebp
ret
js
pop
jne
and
sbbb
add
mov
rcr
pop
lock
addr16
cs
adc
fadds
sar
and
test
orb
push
cmp
mov
icebp
ds
add
or
sbb
femms
test
sub
repz
xor
pop
add
cmp
mov
mov
push
insl
nop
xor
sbb
test
sub
xor
cld
jecxz
sbb
loopne
pusha
ret
les
add
out
add
into
aas
cmpsl
dec
sbb
add
into
pusha
or
roll
inc
mov
cmpsl
push
push
sti
push
inc
in
sarb
loope
mov
adc
pop
or
outsl
dec
pushf
ljmp
xchg
call
fldl
add
jg
pop
icebp
enter
add
lods
andl
je
clc
out
enter
cmp
push
dec
pop
jno
add
fsubs
pop
jnp
and
rcrl
sbb
jo
add
into
pop
xlat
fucomip
xor
add
pop
adc
sub
mov
xchg
jo
addr16
arpl
idivl
add
frstor
inc
cmp
idivb
or
mov
add
repnz
mov
sub
push
add
add
cmp
sarb
out
out
fwait
pop
cmp
cwtl
cmp
mov
jp
pop
fdivs
adc
repnz
mov
out
or
les
inc
pushf
add
sbb
add
in
shr
and
sub
mov
or
and
outsb
testb
scas
or
dec
mov
aam
mov
add
push
in
ljmp
jge
cwtl
incl
loopne
mov
icebp
and
repnz
push
sub
dec
push
out
sbb
sbb
add
pop
cwtl
push
and
into
pop
dec
rorl
rcl
jne
push
jbe
jl
lods
dec
fs
mov
xorl
or
push
push
insb
mov
xchg
adc
inc
gs
mov
pusha
in
sarl
sub
rolb
cmpsl
scas
ficomps
in
mov
mov
or
fsubr
inc
dec
enter
and
mov
adc
dec
add
sbb
add
in
sub
repnz
mov
in
xchg
cmc
xor
inc
sub
mov
and
mov
leave
loop
mov
add
aaa
enter
push
add
jecxz
xchg
add
ja
add
pop
divb
test
pop
jmp
fs
insb
imul
addb
sbb
adc
jnp
push
popl
sbb
daa
shll
repz
push
add
fcompl
or
mov
loope
xchg
dec
add
js
das
jg
iret
add
idivb
rorb
cmc
cmp
sub
mov
sbb
daa
add
mov
jecxz
adc
mov
jnp
add
mov
jo
lea
xor
scas
jne
pusha
dec
and
sub
jo
mov
inc
and
dec
in
add
add
xchg
mov
pop
push
pop
decl
loopne
dec
aam
add
xchg
adc
add
inc
add
sub
add
inc
pushf
dec
jno
pop
scas
adc
arpl
add
fistpll
push
pop
mov
xchg
jns
es
scas
add
outsb
sub
test
xchg
pop
cmpb
adc
add
cmp
popa
jae
sbb
inc
and
inc
fwait
pop
leave
pop
repz
adc
shl
add
shll
enter
mov
xor
xor
arpl
mov
add
cmpsb
xchg
addb
in
inc
icebp
add
cmp
negb
xchg
push
les
cmp
xchg
push
add
fimull
repnz
add
clc
mov
notb
and
mov
xchg
testl
dec
loop
add
inc
hlt
jno
insb
mov
sbb
inc
dec
add
xchg
pop
xor
pusha
sub
cmpb
es
stc
xor
pop
mov
popa
int3
sub
jns
add
mov
insb
dec
xchg
pop
sarb
wrmsr
push
orl
mov
addr16
mov
sbb
push
xchg
lods
jge
add
and
into
push
and
paddb
dec
xchg
loopne
inc
ror
pusha
js,pt
add
inc
nop
popa
mov
push
inc
push
les
adc
popa
iret
adc
mov
pop
mov
adc
inc
xor
les
or
push
or
loopne
cmp
adcb
push
pop
mov
xor
push
std
add
dec
adc
pop
or
andb
cltd
out
adc
adcl
popa
cwtl
fldt
sbb
add
jle
add
xchg
jecxz
sti
std
mov
mov
cltd
inc
push
les
jp
mov
sub
add
or
xorl
das
add
cmp
rcrb
sub
push
cmp
cmp
aaa
add
cmp
sub
pushf
cmp
xchg
ss
add
xor
data16
pop
cmp
cwtl
push
test
adc
add
xchg
cmp
mov
push
mov
mov
enter
push
adc
adc
adc
mov
and
mov
mov
fiaddl
inc
lock
test
ss
mov
fldl
adc
and
or
sbb
and
pop
test
in
test
dec
mov
fadds
scas
mov
mov
mov
aas
cld
popa
push
mov
pop
inc
imul
or
aad
xorb
add
fmul
call
jle
add
mov
cmp
mov
inc
lcall
jne
and
push
jl
adc
or
fwait
jmp
jne
add
out
cmp
pusha
dec
jae
dec
cmp
pop
xor
add
cmc
sub
xchg
add
dec
push
lods
pop
movsb
add
cmp
repnz
add
cli
in
call
jmp
ficoms
xorl
cld
in
mov
jmp
jge
gs
add
es
arpl
lret
call
iret
test
cmp
and
cmp
cld
fwait
push
mov
pop
jnp
add
loopne
add
pop
mov
or
outsl
sbbl
cmp
test
dec
imul
inc
mov
and
imul
in
xchg
push
push
ljmp
loopne
imulb
mov
lods
popa
scas
push
and
mov
mov
shlb
dec
popf
sbb
cmp
xchg
add
mov
add
les
dec
vmread
aam
leave
in
mov
push
jo
lret
add
cmp
dec
or
enter
sbb
rcl
xor
ds
gs
add
iret
lock
hlt
pop
add
xor
adc
push
jp
mov
add
push
ret
mov
out
insl
rolb
data16
jge
gs
adc
and
sbbl
out
shl
push
add
data16
sti
add
pop
cli
int
sub
xor
mov
push
push
add
mov
add
sub
lcall
outsl
mov
mov
sbb
sub
add
mov
adc
ja
loop
out
add
and
xor
in
push
rorl
pop
dec
lahf
add
pop
sahf
icebp
in
out
aas
inc
mov
xor
pop
sbbb
jae
adcb
movsb
sahf
add
lds
les
xchg
add
sbb
adc
mov
stos
lea
inc
add
cmp
outsl
aas
repz
jns
push
mov
addl
jmp
lea
lahf
cmp
insl
pop
jo
iret
imull
dec
adc
shrb
add
out
aas
jo
mov
aaa
pop
pop
jl
into
xchg
mov
pop
loop
cld
mov
cmpsl
and
pop
xchg
add
mov
nop
jecxz
cwtl
lahf
imul
jp
ret
pop
daa
in
les
paddd
iret
cwtl
or
adc
fs
pusha
lcall
pop
fbld
jle
in
add
rcrb
jg
add
jmp
negb
xor
loopne
outsl
sbb
xor
lods
add
decl
add
lret
or
mov
push
dec
sbb
pop
mov
push
jge
loopne
inc
out
andb
pop
cmpsl
nop
loop
jge
jo
add
jl
and
push
xchg
repz
mov
nop
in
sbb
jnp
int3
add
movsb
inc
jge
mov
xchg
pop
jne
daa
clc
in
lods
add
pop
lcall
mov
iret
insl
or
sub
push
xchg
jp
mov
sti
inc
fmuls
call
stos
mov
push
loop
add
movsb
jno
add
mov
xchg
add
fwait
dec
sub
bound
sbb
jle
adc
dec
cmp
and
sbb
mov
imul
outsb
add
dec
push
test
scas
mov
adc
pop
jb
subb
pop
mul
add
scas
add
inc
in
add
scas
dec
cmc
fmul
xor
dec
mov
sub
jns
loopne
add
push
jle
rcl
add
adc
fcoms
aas
rcll
sbbl
mov
test
sbb
xchg
xor
add
dec
out
fldenv
adc
bound
inc
into
cmpsl
rorl
ret
add
or
jae
mov
shl
ds
pop
sahf
add
movsl
pusha
sbb
xor
ss
sbb
adc
mov
cmp
nop
ror
cmp
insl
xor
add
xor
fsts
xchg
inc
pusha
inc
add
jae
inc
jg
sbb
out
fldenv
push
cmp
sahf
or
inc
jno
mov
dec
pop
sub
andl
pushf
push
add
jl
out
sbb
add
fmul
push
jns
push
mov
mov
sarl
ds
test
inc
push
fdivr
and
ret
jbe
add
cmp
js
add
cmpsb
popa
repnz
push
push
add
jbe
pop
pushf
shlb
push
cmp
dec
imul
push
jo
xchg
pop
inc
sbb
aaa
add
push
mov
pop
jg
sub
pop
mov
add
dec
inc
cmp
pop
repz
and
mov
xor
add
sbb
fldl
jg
call
in
sub
jecxz
sub
rclb
add
and
jne
fisttps
add
xor
pop
aas
jg
add
mov
das
jmp
faddl
jge
je
out
clc
cmpl
fildl
fldl
stos
or
ja
pop
sbb
fcoml
mov
addb
jp
das
cmc
lock
nop
push
into
jo
xchg
in
aad
jmp
sub
leave
dec
add
stos
mov
cs
loopne
mov
js
sbb
dec
hlt
xchg
add
inc
ljmp
xor
pop
jo
lcall
repz
in
les
or
mov
sbb
adc
aas
subl
sbb
mov
divb
mov
jae
add
cli
nop
sbb
xor
push
mov
sbb
lods
pop
dec
xorb
add
cmc
xor
in
mov
and
push
mov
out
cltd
ds
add
cmp
subb
nop
add
jg
and
sbb
xor
inc
and
pushf
pop
lea
dec
push
fwait
pop
pusha
sbb
scas
add
subl
add
pop
push
fcoms
out
lcall
lock
ret
inc
fcomip
cmp
dec
cmpsb
in
aad
xchg
aam
sbb
mov
pop
scas
pop
jl
cwtl
call
aad
add
adc
pop
jg
push
inc
add
dec
inc
or
sbb
fidivrs
xorb
jo
push
test
sub
add
xor
lds
rcrl
mov
sbb
and
pop
shrl
xchg
rol
scas
xor
dec
pop
sub
add
fcompl
and
jg
jecxz
and
jl
cli
mov
sahf
mov
add
jp
push
fcoms
xchg
hlt
add
int
cmpb
add
mov
cmp
in
icebp
lcall
or
je
add
mov
cmpsb
les
pop
push
scas
jg
jecxz
sar
popa
aaa
dec
in
pop
pop
test
push
stos
push
ficomps
add
inc
mov
testb
repz
mov
pop
adc
cwtl
inc
xor
ret
add
xchg
pop
add
push
add
sub
cmpsl
add
sahf
dec
pusha
sbb
roll
pusha
popa
jae
mov
push
xor
repnz
not
add
add
stc
pusha
loope
into
outsl
cmp
sub
mov
adc
add
xor
or
xor
add
jmp
mov
add
dec
fiaddl
int3
push
movsb
push
adc
sub
inc
adc
or
repz
flds
and
add
jmp
and
arpl
int3
push
xchg
adc
test
push
mov
push
xor
dec
imul
xchg
lods
insl
bnd
jns
ficoms
push
loop
cld
add
jp
aaa
xor
xchg
lldt
cmp
xchg
out
jnp
add
filds
stos
add
sarb
repnz
fdivr
xor
pop
add
stos
je
cld
leave
xor
mov
pop
push
icebp
xchg
les
or
lea
loope
xchg
or
jbe
add
mov
xchg
inc
mov
push
xchg
xor
pop
or
jge
std
cwtl
pop
xor
mov
sbb
xchg
jne
adc
dec
int3
pop
pop
movsb
and
mov
push
pop
pusha
mov
mov
jge
aam
xchg
and
mov
sbb
push
pop
jnp
movsl
jecxz
and
jl
add
sarl
sbb
or
les
add
jg
fwait
push
dec
push
add
xor
daa
test
pushf
sahf
add
or
or
addl
pop
subb
push
add
push
mov
inc
add
int
and
lock
ja
mov
sub
mov
add
sti
bound
pop
enter
inc
movsb
and
daa
jne
xorb
pop
js
add
fwait
add
jns
adc
cmpsl
stos
xor
push
lds
or
mov
inc
lods
push
mov
or
sbb
js
or
dec
add
call
mov
add
push
das
mov
mov
add
ja
add
xor
jecxz
iret
push
push
clc
jg
inc
adcb
or
pop
xchg
xchg
push
scas
and
and
push
cmp
iret
pushf
mov
xchg
scas
dec
inc
lcall
xor
loope
movsl
or
add
dec
stos
mov
jb
cmpsl
inc
mov
mov
lea
xchg
ds
adc
sahf
cli
xchg
dec
xor
stos
testb
inc
fidivrs
cmp
add
imul
jnp
cwtl
mov
incl
cmp
adc
mov
cmp
jg
jae
add
or
mov
mov
inc
mov
push
cwtl
pop
mov
mov
inc
sub
xor
jle
or
ljmp
cmp
pop
insb
jnp
leave
add
sahf
xchg
sbb
insb
add
adc
or
lret
cwtl
mov
add
adc
test
xorl
sub
add
jmp
cwtl
mov
in
add
pop
inc
cmc
insb
adc
pop
push
and
test
les
lcall
inc
mov
mov
js
add
lods
jl
xchg
out
add
subl
adc
fisttpll
mov
sbb
ficoms
xchg
sub
nop
dec
leave
out
addl
or
dec
xor
aad
test
mov
stos
add
loop
hlt
xchg
dec
xor
add
lret
xchg
or
and
sub
add
xchg
jne
mov
or
test
dec
mov
sbb
add
adc
dec
lods
add
mov
add
cmp
loopne
jp
xor
jo
inc
fiadds
xchg
pop
push
pusha
pop
sahf
sub
push
test
add
cmp
cmp
push
xchg
dec
xor
and
pop
xlat
push
jecxz
xor
cmp
test
push
scas
cmc
sub
dec
in
stc
imul
hlt
cmp
sbb
push
fisttps
mov
int
adc
add
cwtl
hlt
cmpsl
lcall
popf
xor
pop
xchg
jns
pop
add
roll
das
sub
cmp
xchg
fadds
popf
or
and
push
mov
test
sbb
add
call
push
push
cmpsb
stc
loop
add
dec
sbb
or
loop
stc
xor
push
add
out
aad
sbbb
and
push
or
and
mov
popf
inc
rclb
push
pop
add
push
nop
mov
xor
andl
pusha
test
lods
push
jns
testl
mov
add
imul
sub
inc
imul
inc
xchg
lret
mov
cmp
cmpsb
hlt
fnstsw
sarb
pop
les
or
fisubrl
jp
ds
aam
ja
icebp
lcall
add
clc
and
add
jge
pop
lahf
pusha
dec
jb
sbb
ret
pop
or
xchg
inc
in
js
add
pusha
movsb
or
mov
in
sub
ja
roll
add
push
xor
push
xchg
xchg
mov
cmp
stc
cmp
bound
xchg
out
cld
in
push
cmp
xlat
sarb
in
in
sbb
inc
fstpt
mov
leave
mov
or
je
and
jb
or
aam
xor
mov
sbb
testb
add
adc
add
cltd
dec
aaa
cmp
lods
mov
jo
xchg
mov
push
cwtl
mov
outsl
add
fldcw
inc
xchg
or
adc
add
mov
push
xlat
pop
push
in
pop
xor
xchg
cmpb
push
and
fnstcw
sbb
pop
cwtl
shlb
cs
add
lret
jg
cli
mov
andl
push
out
push
sbb
leave
push
mov
add
adc
push
je
daa
sub
xchg
loope
jmp
dec
incb
out
aas
cmp
fwait
push
sub
cmc
jg
rcrl
divb
outsb
inc
push
mov
pop
hlt
mov
cmp
arpl
das
xchg
insb
lret
xor
clc
movb
pop
into
mov
adc
dec
cld
add
loopne
int
and
nop
sti
dec
add
pushf
push
push
or
inc
mov
ja
add
and
icebp
cmp
xchg
adc
push
es
cmp
mov
sbb
loopne
sti
cs
add
mov
cwtl
cmc
lock
mov
add
adc
mov
xchg
mov
mov
mov
xor
pushf
xchg
push
add
test
faddl
jno
dec
mov
ljmp
jg
jns
shr
rcrb
add
bnd
xor
cmp
mov
pop
add
mov
in
pop
xchg
paddd
pop
xor
pop
jge
inc
test
jo
and
mov
push
inc
inc
imul
add
daa
lea
cmp
stos
rcll
mov
push
mov
divl
pop
mov
xchg
xor
aam
mov
rcll
inc
inc
xor
popf
jb
xchg
pop
add
int3
cmp
repz
add
xor
or
dec
insb
jecxz
pop
sbb
and
es
push
test
add
xchg
andb
and
dec
jmp
jl
add
adc
cmpsb
sti
xor
jno
aad
enter
xor
movsb
add
js
lret
lock
sub
cmp
add
cli
push
mov
add
mov
push
js
pushf
jmp
mov
pop
pop
icebp
sbb
jl
mov
mov
test
rcrb
pusha
sbb
inc
ss
xor
aaa
add
mov
mov
xor
insb
or
xchg
inc
add
in
pop
es
add
movsb
or
lods
mov
adc
stc
pop
jp
cld
jg
adc
loop
cmp
out
mov
lea
jge
pop
rolb
xchg
repz
push
sbb
xchg
and
jmp
icebp
movsb
add
xchg
test
aad
add
adc
cmp
mov
nop
cmp
cmp
xchg
cld
sub
pop
xchg
add
mov
adc
mov
cmp
pushf
mov
cs
add
mov
pop
mov
lock
sbb
add
jnp
adc
xchg
aas
aad
sbb
xlat
add
and
sbbl
lret
jnp
mov
jl
cmp
sbb
xor
sbb
pop
or
pop
push
data16
add
mov
mov
stos
lds
add
add
mov
push
add
movsl
lods
mov
cmp
and
adc
into
ljmp
lcall
out
mov
xchg
pusha
or
lcall
cli
inc
jecxz
jge
lret
sbb
dec
jns
add
leave
cmp
xor
push
pusha
pop
repnz
add
mov
push
xor
out
jno
cli
ret
rorb
sbb
add
xchg
pushf
cmpsb
xchg
adc
insb
add
mov
nop
movsb
dec
lock
inc
mov
and
enter
or
add
adc
jl
and
aam
xor
push
jle
dec
test
add
je
inc
sbb
iret
mov
mov
and
test
pop
je
ja
nop
shl
add
mov
cmp
scas
pop
nop
push
push
mov
pop
push
push
mov
testl
xorb
in
jb
fildl
loopne
imul
adc
addr16
icebp
pop
ljmp
mov
pusha
add
cmp
add
cmp
lcall
and
sub
pop
insl
ss
xlat
pop
mov
mov
loopne
call
insb
or
or
mov
push
xchg
mov
aaa
pop
loop
andl
and
mov
popf
dec
enter
mov
mov
push
sub
push
fstl
dec
pop
icebp
mov
mov
mov
imul
inc
clc
cmpb
jnp
je
sbb
test
mov
aas
outsl
cli
sbb
dec
push
sbbb
add
stos
shr
imul
push
call
or
push
jns
clc
inc
xchg
lret
xchg
jb
dec
xchg
pop
jmp
push
add
xor
test
js
xchg
dec
and
enter
sub
popa
andb
add
in
push
int3
inc
or
or
sub
xchg
lds
imul
in
repz
mov
push
shlb
sub
adc
lods
inc
test
add
scas
jp
aaa
cmp
notb
cmp
bound
pop
pop
lahf
xchg
adc
iret
jl
add
mov
in
out
pop
lret
es
adc
adc
pop
pop
je
hlt
sub
xor
addr16
and
fsubr
add
xchg
fidivrl
cmp
xor
sub
mov
mov
add
push
movsb
or
jno
push
iret
dec
enter
adc
ja
lcall
test
rorb
inc
imul
addb
sbb
lds
sub
xchg
add
repz
add
dec
mov
xor
stc
add
mov
push
add
dec
cmp
mov
and
pop
iret
inc
cs
mov
icebp
fs
mov
jns
enter
push
hlt
add
sbb
pop
push
mov
mov
mov
fadd
nop
shrb
pop
int
xchg
sbb
cmp
andl
lea
inc
leave
pop
aas
cs
ret
pop
call
mov
adc
int3
sbb
loop
push
mov
cmp
adc
add
inc
sbb
aam
lgdtl
dec
test
aas
add
fisubs
mov
mov
push
mov
sub
xchg
mov
sarl
add
arpl
push
dec
movsw
xchg
push
pop
add
add
cmpsl
add
fadd
ljmp
and
jbe
inc
add
mov
inc
cmpsb
pop
pop
sub
je
aad
lcall
push
pop
and
mov
fcompl
pop
add
lret
sbb
call
jl
dec
xchg
es
push
in
mov
sbb
push
jae
hlt
push
dec
sbb
jge
adc
add
and
popa
add
mov
mov
addb
cwtl
dec
test
inc
add
cs
or
pop
mov
andl
ret
inc
xchg
add
mov
inc
xor
iret
push
lret
shlb
add
xor
push
jl
mov
lds
shlb
mov
negl
ret
shrb
pop
push
push
sub
inc
lods
mov
shl
cmp
mov
fmuls
jns
mov
sbb
ret
test
jnp
divb
repnz
fnstsw
or
or
mov
or
add
cmp
test
sti
pop
ret
mov
inc
insb
jmp
add
test
xchg
push
or
jle
adcl
mov
int3
pop
inc
add
imul
xor
mov
mov
roll
pusha
leave
push
add
imul
jl
xlat
or
insb
push
and
mov
mov
xchg
lods
add
dec
dec
insl
add
les
cmpb
repnz
popf
call
xor
stos
add
xor
jne,pt
add
adc
cmp
scas
roll
out
xor
mov
cmp
mov
and
add
les
dec
je
mov
xchg
pop
adc
es
push
fwait
mov
pop
jle
cmp
enter
xor
jmp
cmp
push
add
push
mov
mov
jle
push
jne
add
imul
push
push
jmp
ret
ljmp
jle
lret
imul
fidivrs
and
fwait
test
xor
sbbb
rorl
add
push
add
dec
iret
cmp
pop
testb
pop
and
test
cmp
shrb
arpl
std
popf
push
loopne
mov
push
sahf
sub
mov
inc
xor
repz
test
int3
add
mov
das
cld
int3
xchg
xchg
arpl
push
dec
jge
sbb
push
mov
movsb
test
add
sbb
lahf
inc
adcb
aad
hlt
inc
add
mov
cmp
add
inc
adc
and
imul
fs
repnz
sub
add
jecxz
and
mov
pop
add
mov
aas
cwtl
loopne
lcall
add
es
adc
add
or
lock
pop
in
mov
jb
lods
and
push
data16
repnz
mov
add
lret
cld
pusha
js
add
aam
sub
call
xor
add
add
pusha
jnp
sbb
push
or
or
ljmp
hlt
lahf
xchg
jae
push
inc
sahf
frstor
adcb
js
fwait
jo
add
add
jae
jl
stc
pop
pop
pop
mov
loop
xchg
hlt
daa
pop
gs
add
cmp
push
rclb
sarb
add
outsb
mov
pop
in
xchg
je
ljmp
push
add
mov
iret
cmp
out
add
xor
add
or
mov
shl
adcl
push
push
enter
adc
jnp
sbb
mov
or
mov
lods
je
xor
adc
xor
pop
cmpsb
out
test
add
aad
inc
sarl
dec
add
addr16
orb
fimull
into
add
or
xor
inc
jae
pop
xor
lret
cmp
je
jne
rcr
loopne
pmovmskb
stos
jno
add
push
rolb
add
push
xor
pop
add
cmpsl
mov
add
lock
mov
test
jb
add
ja
pop
add
scas
xor
nop
lock
movsl
rcrl
cld
mov
adc
mov
jb
push
or
rclb
outsl
jp
aaa
cmpsl
rol
test
push
jmp
scas
pop
dec
cmp
jno
mov
shlb
int3
fildl
cmc
mov
orb
sbb
cmp
nop
push
jae
js
adc
in
test
mov
scas
sub
in
ljmp
setae
sbb
das
shlb
adc
sar
xchg
pop
cmc
add
js
aad
filds
int
xor
dec
and
add
jnp
fs
fcmove
lea
fcompl
push
lock
iret
sahf
call
add
sbb
xchg
bound
jno
push
movsb
mov
or
cmp
xchg
jmp
pop
ret
xchg
std
xor
xchg
add
fwait
ret
pop
jb
add
scas
sub
xchg
adc
lds
inc
fisttpl
and
gs
idivb
aad
adc
mov
xor
test
jl
cli
not
data16
add
or
mov
mov
and
loopne
data16
dec
mov
js
sub
inc
pushf
addr16
pop
pop
xchg
sub
mov
mov
aaa
in
rorl
push
int3
xchg
sub
cmp
sbb
adc
shlb
bound
mov
outsl
lds
or
mov
nop
cmp
push
rcrl
mov
sbb
bound
lods
mov
mov
sub
sbbb
cltd
outsb
xchg
adc
push
add
adc
inc
sub
jmp
cmp
js
sbb
test
mov
and
out
add
ja
nop
sbb
inc
add
mov
and
test
mov
cmpl
sbb
les
adc
data16
lods
or
repnz
inc
or
sub
pushf
fs
rorb
sub
jg
mov
pop
xchg
add
dec
scas
popa
mov
mov
ret
insl
mov
imul
les
jo
inc
hlt
pop
xor
mov
shll
pop
sbb
into
lea
add
mov
sub
incb
add
push
aam
loopne
cmc
in
pop
inc
adc
lods
pop
adc
in
loopne
sbb
jns
inc
jle
repz
out
mov
sbb
push
in
mov
mov
call
subb
xchg
lahf
mov
repnz
push
dec
pushf
cmp
jno
pop
xchg
popf
sub
stos
adc
bound
fwait
or
out
xlat
xorl
scas
in
inc
jmp
dec
shl
mov
mov
mov
test
pop
add
mov
pop
je
inc
or
xor
xchg
push
mov
cmp
or
js
testb
ror
jp
cmp
sbb
sbb
add
lret
movups
sub
ljmp
repnz
jno
hlt
lcall
push
xchg
add
cmp
lahf
pop
inc
ja
pop
cmpsl
mov
adc
add
repz
xchg
xchg
popa
mov
inc
mov
repnz
insb
ret
push
dec
fidivs
and
push
sub
cmpsb
mov
inc
push
call
hlt
pop
push
test
movsl
sti
dec
adc
mov
roll
scas
das
add
sti
in
push
cltd
add
push
fwait
call
jb
pop
xor
es
sbb
shl
mov
mov
clc
push
mov
xor
out
cmpsl
pop
je
mov
notb
loopne
and
and
fnstsw
add
mov
add
pop
adc
adc
mov
sbb
sub
pop
lcall
cli
scas
jne
daa
les
xchg
bound
add
lods
je
mov
xor
or
pop
and
les
aam
lods
jae
call
jg
mull
inc
xor
je
mov
jmp
add
cmp
push
fdiv
adc
lcall
push
sbb
into
and
add
adc
xor
inc
add
push
insb
cmpb
popw
incl
sbb
add
lcall
cwtl
test
hlt
push
aas
and
mov
mov
packuswb
pushf
dec
leave
lods
test
add
je
jnp
add
aaa
or
mov
add
adcl
sbb
push
mov
jge
fistpll
jmp
add
jp
pop
cmp
and
in
movsl
pop
sub
add
test
cmp
mov
inc
adc
mov
test
in
cli
add
dec
pop
inc
dec
inc
dec
add
jbe
dec
in
add
in
fldl
push
add
inc
cmp
fadds
mov
xor
xor
test
push
subb
sub
test
sbb
inc
inc
mov
std
xor
out
and
inc
gs
add
pop
push
lret
pop
and
sbbl
pop
cmp
sbb
dec
jno
rcll
push
hlt
add
iret
cmpsb
mov
pusha
dec
js
je
jo
lcall
out
leave
aaa
idivl
and
arpl
cmp
cltd
xor
add
mov
jae
push
cwtl
jge
in
or
or
or
mov
aas
mov
mov
xlat
fwait
mov
js
in
pop
dec
les
fnsave
cmp
push
mov
mov
cmp
xchg
sbbl
inc
jbe
dec
mov
int3
add
jge
sbbb
enter
add
xor
pop
mov
data16
fnop
push
sahf
cs
stc
cmp
mov
orb
or
lret
out
cld
adc
or
jp
imul
add
or
daa
inc
pop
jmp
jecxz
cmp
dec
pop
push
mov
loope
mov
add
mov
and
jo
inc
xor
into
in
pop
out
std
shrb
pop
jle
push
or
js
int
mov
loopne
push
int3
mov
shlb
mov
dec
hlt
add
pop
imul
out
enter
push
mov
pop
in
lock
roll
das
jnp
xor
jbe
sbbb
cld
test
data16
ljmp
ret
jns
add
push
mov
dec
mov
dec
js
sub
int
adc
ucomiss
fcmovb
xchg
and
sbb
pop
dec
pop
mov
push
adc
and
add
cmp
sbb
add
aas
xchg
gs
icebp
popa
fcoml
jle
push
push
clc
add
mov
leave
sti
push
loopne
out
pop
scas
sub
loopne
daa
push
or
addr16
fdivrs
sub
pop
subl
xor
in
adc
mov
shrb
sbb
sbb
mov
xchg
std
loop
clc
sub
push
xchg
add
xor
xchg
add
js
and
add
sahf
mov
xor
push
rcrl
cmp
ficompl
sub
test
lahf
outsl
shrb
mov
lods
or
dec
test
pop
adc
lock
adc
stc
inc
fsubl
mov
or
pusha
int
push
mov
cmp
mov
pop
fs
je
cmp
mov
dec
sbb
addb
shrb
subl
push
jl
xchg
and
jno
shrd
leave
insb
popf
inc
pop
rcrl
lcall
dec
mov
pop
mov
rolb
aam
inc
mov
mov
fmuls
shll
js
sub
mov
jae
popa
je
or
int
cwtl
push
sub
add
jmp
decb
push
push
adc
push
add
in
scas
mov
out
push
pusha
mov
stc
xor
test
cmpsl
loop
pop
add
mov
add
sahf
and
jp
pop
push
lock
xchg
pusha
xor
ja
mov
shr
cmp
cwtl
add
mov
push
xorl
jae
out
add
inc
xchg
add
ret
add
lock
lahf
popf
outsb
inc
add
stos
add
push
aas
iret
dec
rclb
repnz
popa
sahf
repz
add
add
sbb
xor
rorl
sbb
xor
xor
dec
test
movsb
cmp
push
mov
sti
pop
scas
add
inc
fistps
lea
lds
mov
or
mov
mov
nop
jb
popa
adc
xchg
mov
mov
gs
into
test
imul
push
add
sbb
add
mov
jmp
mov
dec
cmp
xorb
shll
mov
mov
into
and
jge
push
std
faddl
ror
jno
add
repnz
sub
cmp
fwait
cmp
rolb
add
jb,pt
xchg
scas
aaa
pop
or
cmp
cwtl
add
cmpl
add
inc
loopne
clc
icebp
jbe
mov
add
and
rcrl
sbb
fbstp
insb
addb
xor
stos
pop
pop
aam
shl
out
xchg
icebp
add
add
ja
cmp
cs
push
fwait
add
pop
rcrb
sub
je
and
mov
add
rolb
pop
cltd
add
aaa
cmp
andl
dec
cmp
push
add
push
sbb
jo
std
add
and
pop
int3
add
and
inc
sarl
in
adc
cmpsb
inc
cmp
pop
js
fwait
pop
in
xor
ljmp
jb
xor
adcl
ja
pop
sbb
mov
add
inc
push
fisubrl
inc
mov
push
nop
dec
add
pop
xchg
imul
ds
cmpsb
xchg
bound
repnz
rolb
mov
and
push
sub
inc
add
inc
dec
lea
hlt
adc
or
mov
pop
les
hlt
daa
xor
loopne
loop
mov
cmp
add
mov
cmp
out
movsb
jg
sub
add
fwait
leave
push
dec
mov
or
loopne
sbb
push
sbb
pusha
push
stos
add
js
out
aas
je
add
es
pop
xchg
adc
roll
cmpsl
add
cmp
sbb
pop
in
test
popf
call
jg
imul
mov
inc
dec
dec
mov
sarb
add
jns
orl
lods
xor
mov
jg
add
mov
roll
sub
pop
lods
dec
xor
mov
loopne
leave
xchg
add
lret
xor
jecxz
or
inc
jg
add
data16
mov
lret
add
fdivp
mov
cmc
add
loop
xor
inc
testb
sti
bnd
rolb
int3
push
mov
push
ret
xlat
ss
xchg
add
out
fwait
add
dec
sti
add
inc
xchg
jmp
insl
sub
outsl
pushf
inc
sub
andb
push
out
cli
rorb
icebp
xor
add
ds
bound
and
leave
hlt
les
add
or
mov
jno
add
xor
mov
add
dec
or
add
leave
adc
loope
adc
cwtl
push
sub
add
mov
popa
push
pop
adc
dec
mov
mov
inc
xchg
xor
enter
hlt
ds
int
lds
repz
pop
push
inc
push
es
add
loope
hlt
inc
push
and
jge
add
sub
add
pop
push
mov
shlb
clc
roll
and
test
orl
xchg
out
rol
and
stos
add
adc
xor
adc
adc
mov
into
add
xchg
pop
mov
inc
popf
sub
push
xchg
jp
add
roll
pop
gs
ljmp
mov
pop
pop
xchg
stos
sbb
ficoml
push
sbb
sbb
clc
sahf
clc
addl
ret
mov
cli
lods
inc
pop
mov
cmpsb
add
push
add
outsl
mov
push
push
or
jbe
ja
outsl
sbb
enter
mov
leave
dec
lret
jbe
cmp
in
or
cltd
cmp
adc
push
cs
add
aaa
cmc
push
push
push
vpand
xchg
xchg
push
inc
pushl
stc
lock
enter
fdivrl
add
nop
les
jns
movsb
add
lahf
rclb
jp
add
inc
clc
mov
fidivl
xchg
cmp
xor
xchg
adc
xor
add
repz
mov
xchg
xchg
push
inc
add
ss
sbb
das
xlat
loopne
jno
ret
dec
jg
inc
jae
mov
inc
movsl
cli
ret
int3
add
mov
cld
ror
sub
gs
jnp
add
loop
xchg
dec
aas
cmpsb
test
leave
mov
in
lods
test
add
out
ja
outsb
add
mov
add
addl
add
in
mov
jno
mov
aad
dec
or
mov
push
xchg
xor
call
test
mov
data16
das
scas
adcb
dec
idiv
mov
mov
lret
inc
test
adc
aad
jb
xor
movsb
sahf
xchg
push
loopne
or
test
add
cmpsl
or
fsts
sub
out
pushf
call
sbb
sarb
pop
add
push
mov
dec
popa
dec
add
or
or
std
adc
es
jns
sti
outsl
sbb
fwait
addr16
mov
add
and
add
lock
pop
push
or
cld
mov
insl
sbb
cmp
add
fwait
inc
test
adc
and
les
jle
inc
mov
dec
dec
add
test
outsl
sbb
add
mov
enter
lods
pop
bound
sbbb
cmpsl
pushf
aam
adcb
jae
add
rcll
jns
add
and
or
sahf
sub
inc
add
jb
fiadds
pusha
pop
and
jmp
pop
sysret
sub
sbb
add
shll
enter
icebp
adc
push
int
test
jecxz
fimuls
lock
scas
xor
ss
das
xchg
les
cli
sub
in
jmp
mov
fmulp
shll
test
scas
add
sbb
add
push
repz
mull
and
cmovle
hlt
scas
pusha
bound
call
cld
lcall
rcll
and
out
das
rolb
andb
out
inc
push
js
push
pop
push
sub
int3
jp
push
cwtl
cmpb
xchg
inc
add
jge
adc
movsb
sub
imul
xchg
loopne
mov
popa
cmp
add
in
lret
inc
xchg
sbb
mov
subb
push
adc
xor
es
pop
into
jg
inc
out
fbld
or
cs
jecxz
add
adc
test
mov
psubd
xchg
shll
orl
cmpsl
dec
push
pusha
loop
imul
sarb
imul
lea
and
jg
jmp
or
ds
into
dec
mov
inc
out
in
fdivs
add
add
dec
cmc
sbb
ss
lods
inc
lcall
sbb
int3
repnz
in
sub
lods
pop
jge
or
xchg
mov
xchg
pusha
movb
add
dec
or
fldl
mov
loopne
adc
dec
add
sahf
pop
shll
sub
jno
push
adc
jo
adc
sbb
es
mov
fmull
lret
imul
arpl
sbb
mov
and
xchg
movsl
jge
bound
enter
rcr
in
add
std
aaa
sbb
adc
mov
lcall
mov
aad
jle
add
jp
andb
faddl
jle
test
ja
lods
add
fwait
jbe
adc
stos
add
std
lret
mov
pop
and
sti
add
pop
mov
mov
in
add
mov
mov
iret
mov
clc
mov
jmp
mov
addr16
out
push
int3
adc
aas
xchg
fdivrs
push
mov
add
jl
dec
call
nop
movsb
testb
lods
mov
push
mov
bswap
jecxz
sbb
jge
push
mov
adc
lea
xchg
xchg
cmpb
loope
cmp
insl
mov
arpl
insb
fsubs
test
imul
add
arpl
cmp
dec
cmp
imul
adc
mov
sub
gs
push
add
ja
mov
pop
push
lock
sub
push
or
divb
mov
jl
mov
aaa
inc
jmp
sub
in
cltd
jp
add
loop
std
cmp
shll
sbb
inc
ljmp
daa
push
add
add
pop
movnti
push
jmp
jbe
jg
inc
adc
jno
add
mov
clc
inc
clc
imul
pusha
mov
mov
pop
scas
push
cmp
or
add
jmp
jp
sarb
xchg
lcall
fcompl
icebp
push
scas
xchg
mov
pusha
mov
jne
dec
stc
aam
and
sub
lods
sarb
sarb
add
gs
mov
inc
dec
add
nop
mov
faddl
call
addr16
jns
stos
in
std
add
cmpsl
cmp
in
adc
test
sahf
dec
inc
mov
push
or
or
push
js
enter
sbb
jp
rcpps
fiadds
add
pop
xor
mov
add
rorl
inc
pop
pop
adc
jns
add
xor
pusha
popa
rcrb
adc
mov
cmpl
cwtl
lock
sub
movsb
mov
sub
sub
jae
add
in
cmpsb
and
adcb
fld
xor
pusha
mov
mov
mov
pop
movsb
xchg
loope
pop
mov
add
add
add
ljmp
mov
in
dec
mov
xor
mov
mov
xchg
push
inc
rclb
das
sbb
data16
mov
mov
iret
in
mov
shll
inc
or
and
add
mov
inc
lods
stc
arpl
sarb
lahf
shlb
adc
cmp
dec
lret
pusha
sahf
ljmp
jge
aam
jnp
popa
sub
xchg
push
jo
out
add
and
jp
shll
push
cmpl
cs
loop
lret
add
xchg
ret
push
in
sub
sub
dec
mov
loopne
inc
test
mov
sub
sub
ja
cli
adcb
push
or
pusha
mov
cmpsb
shrl
dec
add
arpl
shlb
rclb
in
add
adc
lods
mov
mov
and
jmp
mov
popa
andb
push
add
and
push
sub
and
xchg
add
hlt
jo
jmp
std
add
pop
push
adc
iret
jnp
jo
lret
pop
inc
add
xlat
sti
push
ss
int3
daa
scas
and
mov
push
clc
mov
pop
in
xchg
mov
aas
test
add
pop
and
add
jnp
mov
push
mov
add
and
addl
ljmp
mov
xchg
or
andb
push
pop
lods
in
imul
add
sub
movsl
aam
sub
adc
pop
into
fsubr
mov
and
inc
and
mov
mov
sti
cmpb
add
push
pop
insl
sbb
add
add
subb
call
int3
add
and
pop
flds
push
push
or
push
cmp
push
test
sub
andb
ljmp
cmp
leave
push
pop
pushf
dec
insl
cwtl
sub
mov
shl
pusha
cmc
stos
nop
stos
xor
push
dec
cli
loop
std
aad
fisubs
mov
add
gs
dec
sub
ret
push
imul
add
das
and
fbld
mov
popf
mov
stos
inc
cltd
xchg
fcoms
sbb
cmpsl
lods
enter
nop
pop
adcb
xchg
rorb
inc
add
out
add
sbb
in
leave
popa
add
jae
in
or
add
xchg
shl
xchg
inc
call
pop
shr
add
cmc
xchg
rclb
icebp
adc
inc
add
stos
add
cmp
hlt
mov
or
cld
push
das
sub
or
js
subb
mov
lret
xchg
mov
cmp
pop
mov
xchg
inc
cmpsb
inc
repz
jnp
push
cwtl
repnz
and
inc
push
test
ss
into
add
mov
mov
cwtl
aad
ljmp
xchg
fdivrl
jmp
add
sbb
jae
jno
push
je
cld
pmovmskb
inc
pushf
ja
jno
sub
jns
adc
sahf
add
jo
xor
fisttpl
lock
imul
repz
add
clc
or
scas
add
or
and
add
stos
aad
addb
iret
add
mov
push
pop
and
pop
jb
add
push
and
mov
add
push
add
loop
lahf
push
sub
dec
xor
in
into
jp
ja
pusha
out
cld
sahf
pop
or
stos
push
shrb
lcall
pop
xchg
mull
push
rolb
aaa
loopne
inc
sbb
and
or
push
xor
adc
jp
ja
adc
add
xchg
xor
clc
sarb
inc
mov
push
add
push
and
jecxz
add
jle
push
or
int3
lret
out
adcb
xchg
popa
cli
psubusb
xor
sub
cmp
gs
stos
push
nop
lea
push
dec
mov
sarb
int
repz
out
lds
paddusw
sbb
inc
cmpsb
mov
add
mov
movsl
lock
or
jl
aas
dec
or
in
push
testb
jno
and
pop
xor
pop
mov
cltd
add
sbb
je
std
test
cmp
cmp
test
test
adc
add
leave
xchg
aad
das
out
or
daa
rorb
add
lock
mov
and
mov
fcomip
pop
add
inc
adc
loop
mov
add
mov
test
sarl
loope
mov
add
lds
pop
js
scas
add
add
pop
lret
pop
jne
add
in
push
mov
xor
popf
imulb
xlat
jae
jge
add
jl
lea
add
mov
and
stos
loop
push
mov
lock
int
cmp
adc
mov
sbb
adc
stc
push
jb
sub
mov
aas
orb
push
mov
aaa
les
js
pop
fwait
pop
stc
sub
fs
push
repnz
ret
jl
add
sbb
mov
mov
jnp
xor
inc
call
add
sbb
out
sahf
sbb
add
add
xchg
and
gs
int3
ljmp
bound
mov
dec
add
mov
add
sub
inc
jl
enter
and
lret
sahf
add
sbb
pop
dec
sbb
sub
lret
pop
and
movsb
add
inc
cmpb
jle
mov
int3
xchg
clc
add
not
lret
loopne
pop
sub
adc
insl
dec
les
clc
add
aad
xor
pop
lods
cld
add
popa
adc
push
mov
fimuls
mov
xchg
psadbw
dec
andb
dec
cwtl
pop
iret
add
aam
xchg
mov
pop
cmp
add
jbe
cmp
dec
sub
pop
add
out
fcompl
dec
fs
xchg
dec
jbe
dec
sbb
push
xchg
jle
push
xchg
xor
mov
pop
xchg
mov
fidivrs
dec
push
xor
sbb
or
xchg
fs
jno
lock
and
xchg
adc
iret
fstpl
mov
and
out
or
sub
add
mov
pop
and
mov
add
jbe
cmp
mov
jl
xchg
ficompl
leave
add
or
sub
and
test
push
sbb
jne
cmp
adc
add
xchg
leave
mov
jno
rol
sbb
test
sub
or
add
mov
inc
or
cltd
push
cmp
test
jmp
xor
cmp
xchg
lret
sbb
inc
lea
add
dec
in
jbe
adc
hlt
push
push
add
pop
jb
add
push
xor
pusha
andb
rcl
lret
pop
das
ss
mov
jae
into
clc
addb
mov
mov
ljmp
jle
int3
xchg
inc
and
iret
inc
cmp
mov
mov
xor
inc
and
inc
nop
cmp
sbb
pop
fsubl
popa
inc
inc
add
or
cmp
push
xchg
dec
sub
inc
xchg
int3
add
cmpsb
xor
xor
call
and
fiaddl
inc
dec
push
and
pop
aas
lret
fwait
cmp
dec
xor
imul
icebp
add
fisttps
imul
push
cltd
xlat
insl
movsb
jge
adc
mov
test
rolb
lret
test
add
insl
mov
cli
pop
sub
add
scas
add
lcall
insl
xchg
pop
push
add
fisubrs
pop
dec
pop
add
popf
repz
mov
sbb
pusha
adc
xchg
jae
les
pusha
pop
std
inc
lods
orb
repnz
push
lds
pusha
test
adc
mov
inc
xchg
adc
inc
sbb
pop
mov
xlat
cmc
add
sbb
add
imul
xchg
mov
and
xchg
popa
add
xchg
and
cmp
push
testl
xchg
lods
mov
inc
jmp
sub
add
dec
movsb
pop
add
dec
xor
ds
add
mov
and
pop
loopne
mov
xor
test
std
jecxz
hlt
icebp
jmp
adc
les
sbb
sarb
inc
movsb
aad
add
xor
call
cmp
inc
add
ret
add
jb
add
fsubl
sub
les
jno
jmp
es
fsub
in
xchg
add
ror
loope
sbb
lock
xchg
add
mov
add
mov
mov
mov
cmp
cmp
add
cmpsl
and
punpckhbw
fld
mov
add
inc
mov
cmp
repnz
adc
add
outsb
pop
out
mov
fsubrl
clc
jne
pop
pop
mov
jns
pop
stc
push
inc
xlat
rclb
stos
add
xchg
or
out
or
lods
push
or
dec
pop
pop
js
sbb
inc
xor
sbb
mov
sahf
push
dec
fadds
mov
aam
sbb
xor
loopne
dec
xor
push
ret
clc
add
push
nop
jmp
jo
outsl
cmpsl
loopne
pop
add
cs
add
out
movsl
sbb
add
adc
insb
pop
loop
das
cmp
pop
orl
xor
dec
aam
jge
dec
aas
jno
push
dec
dec
inc
mov
outsl
cwtl
jo
lds
or
loopne
aaa
mov
dec
mov
jl
jmp
fcomi
push
add
in
or
jmp
nop
stc
add
xor
pop
mov
sub
insl
pop
ret
aad
cltd
sub
add
lods
inc
dec
mov
mov
add
mov
negb
inc
cmp
outsl
cs
inc
popf
xor
bts
lret
and
inc
push
fsubr
add
test
mov
in
add
iret
jg
and
pusha
rolb
fidivrs
inc
fnsave
pusha
subl
add
mov
sbb
jns
pop
mov
push
hlt
iret
fsubr
andb
cli
xchg
movsl
or
popa
xchg
push
shrb
add
es
push
push
cmp
inc
mov
in
or
mov
add
inc
adc
xor
jg
add
cltd
fs
add
test
xchg
es
pop
mov
adc
pop
jp
mov
popf
pop
and
cmpsb
cmp
pushf
loopne
xchg
mov
dec
and
mov
sub
xchg
iret
fadds
hlt
jmp
and
scas
mov
cmp
xchg
fsubs
push
mov
push
pop
bound
inc
mov
lods
add
lods
addb
out
add
sbb
jne
sbb
lcall
leave
add
pop
xchg
push
in
stc
aas
add
add
leave
inc
adc
mulb
xchg
icebp
sbb
insl
mov
jle
xor
imul
ljmp
mov
add
pop
movsl
into
or
jo
repz
add
lea
lret
add
stc
movsl
mov
add
loopne
xchg
sub
mov
push
pusha
ret
xor
lahf
call
imul
inc
paddsb
mov
xor
cmp
xchg
jnp
push
cmpsb
mov
or
repnz
sub
inc
xchg
add
pop
jge
add
xchg
adcb
xor
add
push
rol
mov
mov
add
in
mov
sbb
and
dec
lahf
add
inc
add
inc
push
sahf
repz
and
daa
andb
insl
cmp
fbld
jb
sbb
fwait
rclb
sub
dec
jbe
add
sbb
add
pop
cli
sub
xchg
das
shlb
lea
fcomip
add
push
jb
pusha
mov
pop
negl
inc
dec
ret
test
stos
fmuls
testb
push
add
jecxz
adcb
mov
testb
sbb
add
push
insb
push
aas
mov
sbb
add
mov
pop
add
ss
nop
jg
addb
movsl
cmpsl
mov
add
cwtl
jp
jmp
lds
sbb
in
jecxz
xchg
jo
and
cmpl
adc
xor
ljmp
sub
out
repnz
pop
xlat
in
add
das
insl
adc
lahf
dec
xor
xor
jge
push
test
add
call
mov
add
inc
in
push
lcall
mov
adc
pop
insl
or
mov
adc
loope
add
mov
push
xchg
sbb
addb
mov
and
rorb
iret
add
call
or
lret
push
mov
rorl
inc
push
lahf
cmp
rcr
outsb
loopne
leave
mov
adc
xor
loopne
popf
cwtl
add
xrelease
push
xor
push
sub
cld
cmpsb
add
push
in
jp
add
mov
repnz
inc
xor
cltd
outsb
pop
pop
sti
mov
push
pop
mov
inc
and
mov
pop
jecxz
sub
dec
adc
out
scas
cs
add
lods
repz
arpl
test
stc
pop
dec
add
insb
into
aam
daa
sarb
xchg
sbb
enter
icebp
sub
cmp
in
cmpsb
sub
xchg
inc
rcrb
popf
add
sbbb
shrb
add
cmp
clc
js
cmp
xchg
mov
pop
les
orl
es
pop
hlt
mov
sbb
xchg
sub
jl
scas
adcb
pop
ret
shll
sbb
imul
push
mov
popa
fcomps
inc
loopne
and
jecxz,pn
adc
popf
adc
es
mov
loopne
and
push
adc
mov
movsl
push
or
shll
sub
inc
rclb
pop
aam
movsb
rcrl
mov
push
jg
cmpsb
and
fadd
and
push
pop
mov
fwait
hlt
pop
mov
stc
mov
push
add
test
sbb
mov
lods
mov
shrl
call
dec
clc
lock
sbb
dec
lds
pop
aas
stos
and
fdivs
add
call
cmc
mov
pop
sub
or
cltd
mov
lea
mov
in
jge
adc
aad
add
cwtl
jo
cmp
call
sbb
mov
test
repnz
add
push
xor
fsubrl
jecxz
shrb
dec
xchg
in
enter
sti
test
sbb
pop
enter
je
fbstp
ror
out
add
test
add
in
inc
movsb
jge,pt
mov
sbb
hlt
inc
in
add
iret
sub
xchg
lods
in
movsl
add
inc
das
and
jle
inc
stos
sarl
or
pop
sub
fs
shlb
stc
mov
xor
add
inc
lea
mov
adc
dec
sub
fwait
mov
pop
ljmp
enter
sub
xchg
in
jo
dec
dec
ss
pop
jo
xor
insb
scas
testb
cmc
pop
push
pop
dec
mov
mov
test
and
ja
push
push
inc
mov
aas
adc
lret
adc
pop
sub
shr
jns
repz
hlt
aaa
xchg
cwtl
daa
xor
sti
dec
mov
inc
fmull
and
mov
mov
addl
mov
jl
add
insl
cmpb
cli
fildl
adc
xor
xchg
push
jb
cmp
sbb
or
pop
add
aam
push
cmp
mov
cwtl
sbb
xchg
adc
pop
jge
mov
mov
dec
in
sub
push
adc
cld
pop
add
jo
cmp
xchg
popf
std
hlt
scas
add
cmp
add
ret
push
mov
fistpl
cmpsb
pop
mov
jge
pop
fnstcw
out
pop
jnp
negb
popf
inc
scas
xchg
test
add
mov
add
mov
lret
sbb
mov
pusha
int
cmc
ss
push
or
lods
add
add
mov
xor
enter
sahf
rcrl
xchg
popf
add
stos
aad
stos
das
sbb
pop
mov
add
ss
or
stos
ret
mov
add
jbe
add
and
add
cs
add
dec
aas
rcll
pop
xchg
pop
pop
rol
adc
lret
pop
dec
pusha
mov
lods
scas
arpl
cmpb
vmovaps
mov
and
or
sbb
lahf
push
add
sub
ds
mov
mov
sbb
mov
repz
rclb
mov
adc
sbb
or
popf
andb
jb
das
push
sbb
ja
aaa
popf
adc
adc
pop
sbb
vmovaps
mov
add
mov
mov
sub
add
and
sti
mov
scas
push
cmp
shlb
fdivl
adc
xor
andl
pop
add
arpl
or
mov
add
clc
mov
add
push
out
hlt
and
test
push
into
pop
xor
stos
or
and
xchg
sti
loope
rol
add
push
pop
sub
outsl
lret
xchg
mov
test
andb
lret
cmp
mov
shrl
xchg
addl
shll
loopne
loopne
cmpb
shr
add
idivl
dec
cmp
xor
das
test
inc
test
int
xchg
mov
loop
mov
pop
cwtl
sbb
pop
sub
imul
sbb
or
addr16
andb
xchg
mov
mov
add
arpl
cmc
sbbb
outsl
ret
movsb
sbb
xor
push
add
daa
sub
inc
popa
sub
pop
shll
in
sbb
dec
jnp
and
fwait
or
add
jno
pop
popf
dec
sbb
xor
fistl
xor
aas
and
xchg
sub
pop
enter
and
cmp
xchg
adc
push
mov
adcb
and
fwait
dec
add
idivb
repz
adc
int3
mov
xor
out
add
scas
sbb
inc
into
mov
and
inc
sub
add
jae
pop
and
xchg
or
or
dec
jne
push
add
inc
dec
fsubs
mov
mov
add
adc
out
and
movb
imul
or
ds
add
sub
out
add
pop
xchg
mov
mov
push
enter
add
ds
out
sbbl
push
push
xchg
jbe
pusha
add
loop
push
cmp
rolb
xchg
xor
jnp
inc
or
add
daa
xchg
inc
cld
sub
lods
add
popa
mov
out
test
push
imul
ret
xor
int3
es
scas
loop
add
dec
push
dec
sar
movsb
add
fldl
xor
sub
add
mov
pop
ffreep
add
movsb
das
and
and
jns
xor
xorl
xor
nop
or
mov
dec
jmp
adc
fwait
arpl
pop
xchg
sbb
nop
mov
outsb
inc
mov
pop
subps
or
mov
jae
add
mov
pop
mov
and
aas
cmp
daa
mov
pop
add
or
add
xchg
sub
or
add
pop
lahf
lock
faddl
in
push
or
sbb
stos
xor
in
aam
sub
sbb
dec
popf
add
add
jne
xlat
loopne
outsb
xchg
add
movsb
rorb
pop
pusha
mov
lods
jle
sbb
add
jbe
and
hlt
xchg
add
cli
cwtl
push
outsb
jnp
ret
mov
int3
mov
sub
sbb
popf
xchg
fadd
mov
xor
add
adc
dec
notb
aad
cmp
or
sbb
xchg
inc
fsubs
scas
and
shl
imul
subb
imull
js
add
xchg
ficoms
push
xor
pop
jle
add
stos
pop
xor
les
push
cs
cwtl
insl
sbb
idiv
jl
mov
cmp
popa
shr
movl
out
sbb
cmc
test
outsb
add
mov
fwait
xor
sub
push
xor
mov
dec
insl
pop
gs
and
andb
mov
xor
sbb
mov
aas
cmp
testl
popa
mov
mov
stc
cs
test
push
push
add
cmpsl
xchg
cmp
cld
pushl
add
repnz
add
int3
mov
add
in
push
movsl
icebp
imul
ljmp
sbb
mov
data16
dec
orb
pop
mov
push
rcr
ret
outsb
mov
add
and
sbb
mov
movsl
jge
lock
mov
xchg
mov
jmp
xor
in
or
mov
push
in
add
push
pusha
ljmp
add
dec
add
jae
mov
daa
rolb
loop
stos
sete
call
mov
cli
mov
movsl
test
cmp
sub
icebp
call
push
jbe
mov
mov
add
rcr
push
loopne
ret
addl
sarl
add
dec
xor
xor
add
sbb
add
hlt
or
cli
xor
pop
pusha
add
test
mov
icebp
inc
insb
mov
xor
idivl
addr16
jno
push
mov
mov
pop
dec
pop
std
popw
lret
adc
add
fnstenv
pop
xchg
outsb
lock
dec
push
add
cmpsl
xchg
jnp
xchg
inc
xor
es
loope
pop
rorb
adc
rolb
ret
mov
les
lock
cmp
ds
loope
mov
add
shll
xor
lea
test
or
push
js
xorb
sbb
lods
jo
and
add
xor
add
std
stc
sbb
mov
cmp
cmp
sub
xlat
pop
ds
xchg
loopne
add
push
fmuls
and
dec
test
or
xchg
add
aas
push
push
xchg
iret
sbb
dec
shlb
sub
pop
call
xor
mov
add
push
add
jo
push
pushf
xchg
rolb
cmp
cmp
cmpsl
adc
lahf
call
test
push
ss
fmull
aad
or
push
lret
add
inc
shll
mov
and
add
mov
popf
loope
aad
add
leave
pusha
clc
add
cmp
add
fs
xor
or
fmuls
add
fninit
sub
inc
or
adc
push
adc
xchg
outsl
and
cmp
jb
in
dec
ret
sbb
xor
orb
add
xlat
xor
mov
aam
imul
add
cmp
fstpl
add
dec
mov
add
fidivrl
or
or
int3
mov
sbb
in
add
daa
push
sbb
pop
mov
add
cmp
test
popf
pop
gs
inc
add
xchg
add
pushf
or
in
add
inc
mov
add
js
mov
xor
fidivrl
xchg
stos
mov
add
stos
repnz
out
and
addl
out
push
test
inc
xchg
or
sbb
adc
mov
pop
jb
cwtl
stos
add
hlt
mov
cltd
mov
str
test
enter
stc
scas
sbb
lret
movsl
adc
test
cmp
or
jge
test
push
rcrl
rdmsr
pop
push
lods
scas
loopne
pop
xchg
add
jne
and
bound
mov
das
and
mov
stc
or
jge
sbb
aad
adc
cmp
cld
cmp
dec
mov
add
pusha
sub
insb
push
or
stos
add
mov
lods
cmp
mov
xlat
jp
add
push
mov
leave
inc
sbb
push
mov
cmp
test
mov
incl
rcrb
es
ss
add
aas
int3
in
test
in
mov
idivl
xor
dec
add
mov
ds
incb
cmpsl
xchg
and
sub
cmp
sti
jne
idivl
and
add
cs
lahf
cmpsb
xchg
test
in
orb
mov
iret
inc
data16
cltd
mov
punpcklwd
or
aaa
das
push
es
shrb
add
xor
and
int3
sbb
popa
sub
add
dec
cmp
xor
addr16
jo
fiadds
pop
add
rorl
mov
add
sbb
fimuls
ljmp
sub
lret
inc
sti
imul
cmc
xor
shlb
jmp
sub
dec
mov
inc
fiadds
out
test
or
push
into
xor
hlt
add
testl
dec
mov
add
nop
and
ret
mov
cwtl
sub
jle
xchg
and
cs
es
in
cmc
and
std
dec
add
les
mov
call
ljmp
stc
cmp
fildl
inc
lods
mov
xor
out
add
dec
aaa
fstpt
mov
add
add
inc
daa
xchg
mov
cmpsl
or
xor
push
add
inc
dec
loopne
pop
push
mov
add
cmpsl
pushf
pushf
add
leave
dec
mov
add
xor
xchg
jge
dec
mov
adc
xchg
pop
push
rolb
or
shll
mov
inc
add
sahf
add
jg
push
pop
cli
insb
mov
add
push
pushf
sub
nop
loopne
adc
fcomps
pop
mov
pop
pop
push
xlat
add
add
scas
jno
cmp
js
pushf
bound
lret
in
aas
addb
hlt
adc
add
add
add
es
add
je
aaa
cmp
aad
sbb
or
push
roll
mov
sbb
mov
cmp
iret
cmovle
insb
je
adc
js
clc
push
loope
push
sub
jb
pop
insb
les
xor
movsl
lret
int3
mov
add
adc
inc
xor
ljmp
and
add
daa
mov
pop
mov
adc
dec
add
int3
pusha
jb
jle
and
movl
add
mov
xchg
cmp
and
test
lock
add
outsl
or
cbtw
cmp
cltd
jne
bound
cmp
nop
mov
xchg
cmpsl
xor
repnz
lret
in
push
jno
adc
xor
sbb
sbb
lods
pop
arpl
or
mulb
or
add
scas
add
add
xchg
dec
mov
cmp
mov
aas
dec
add
push
jmp
or
incl
je
cmp
adc
mov
mov
popa
add
sub
jmp
jae
shll
pusha
out
cmp
pop
pop
mov
mov
mov
fldt
dec
ss
add
jmp
inc
in
fdivrl
sarb
pop
add
lods
pop
and
in
mov
fsts
nopl
mov
daa
test
movsb
scas
lcall
ss
clc
es
push
add
pop
loopne
scas
xchg
popl
push
iret
sarl
jg
dec
dec
cmp
sahf
xchg
mov
sbb
xor
pop
xor
add
dec
mov
test
pop
mov
in
or
je
pop
cmp
xchg
pushf
jmp
cmp
add
jnp
sub
bound
dec
jmp
popa
mov
pop
xor
dec
shlb
test
ja
mov
or
fwait
mov
and
adc
andb
out
xchg
loopne
xor
pop
push
pop
aad
add
in
fcomps
fcmovnu
add
pushf
mov
add
or
cmp
pop
push
push
out
sub
add
or
push
pushw
imul
mov
xor
insl
cwtl
jecxz
pop
dec
test
adc
add
in
cmp
sub
cmp
sarl
clc
hlt
fdivrp
jmp
in
pop
gs
out
adc
jmp
ret
lock
cld
sub
subb
addl
or
movsb
sbb
mov
cmp
sarb
arpl
out
notb
xchg
aam
xor
sub
outsl
das
adc
add
sub
inc
cs
xor
xchg
xchg
hlt
xor
push
shll
lea
cmp
xor
dec
adc
hlt
push
add
addr16
add
mov
enter
sub
add
mov
fmull
add
shll
aad
dec
and
mov
pushl
inc
arpl
mov
jp
mov
add
inc
les
adc
add
pop
fcos
add
push
and
xchg
sbb
adc
xchg
add
aad
into
adc
xchg
add
aam
nop
mov
mov
xchg
add
mov
sbb
das
mov
stos
ds
adc
add
or
inc
add
xchg
add
aas
movsb
and
inc
fdivrs
cld
sub
push
stos
add
pop
pop
ja
sbb
outsb
mov
add
movsl
adcb
rcrb
leave
testb
mov
push
inc
test
adc
dec
push
xchg
mov
stc
jbe
shll
inc
adc
ret
xlat
out
leave
pop
repnz
pop
in
push
adc
jecxz
push
cmp
into
push
mov
adc
and
add
push
roll
push
dec
cld
push
jecxz
cmp
add
mov
and
add
add
pop
mov
push
cwtl
pop
bound
push
scas
int3
rep
sahf
xchg
inc
pop
inc
lea
in
jnp
inc
lds
xchg
call
add
jb
mov
xlat
mov
push
jns
je
nop
in
pop
pusha
icebp
fdivr
loope
scas
add
or
inc
adc
test
dec
jne
mov
sti
add
push
neg
lods
clc
fidivs
add
jmp
sbb
add
mov
jbe
loopne
sub
cmp
dec
inc
shrb
or
icebp
sub
lret
clc
ret
inc
pop
mov
cwtl
cs
in
mov
add
je
xchg
pop
outsl
andb
rol
jmp
xchg
lods
iret
fsubr
inc
pop
add
mov
pop
fwait
pop
add
bound
fcoml
add
stc
sbbl
cmp
mov
add
icebp
jp
fisubrl
push
lahf
add
out
sub
pop
dec
cs
jg
add
jae
sub
imul
add
sub
inc
jp
add
push
leave
shrb
sbb
or
add
xor
add
or
outsb
loop
push
jo
jecxz
cwtl
mov
pusha
mov
nop
int
pop
jb
jns
add
adc
loopne
jno
inc
leave
out
fucomp
add
daa
push
xchg
test
xlat
loopne
cmpb
pop
sub
and
pop
dec
add
mov
daa
sahf
xor
in
cmp
loope
sbb
add
movsb
jl
lock
and
cmc
xchg
sbb
rolb
sub
repnz
jecxz
cmp
jns
pop
mov
rol
in
add
and
mov
mov
inc
xor
sub
or
sbb
ss
pusha
jle
add
mov
dec
addr16
xchg
inc
test
sahf
mov
and
sub
push
and
inc
add
jle
mov
mov
mov
sub
jl
sahf
test
xchg
enter
loope
pop
and
pop
add
jo
lcall
xchg
sub
xchg
adc
xor
lods
dec
push
mov
outsl
pop
pop
cltd
lds
jns
repnz
ja
dec
pop
lahf
cli
addl
xchg
mov
in
lock
add
stos
xchg
popa
arpl
add
sbb
inc
or
gs
push
xor
pusha
mov
and
mov
dec
js
fstpl
inc
cmpsb
sub
mov
jo
ja
popl
mov
fadd
fwait
adc
in
push
aam
dec
push
data16
movsb
fcomip
fiadds
jae
dec
roll
add
inc
gs
push
mov
ljmp
setb
xchg
add
loop
aas
out
mov
add
movsb
mov
frstor
sub
and
out
fcomps
adcl
scas
push
fstl
xlat
outsb
mov
lock
inc
inc
mov
xchg
add
daa
sub
jge
sbb
sbb
rorl
ret
add
ja
dec
pop
xchg
add
xchg
dec
outsl
add
rcrb
loop
in
push
push
push
out
mov
sti
shl
sahf
dec
jmp
inc
aad
cmp
unpcklps
lea
add
rcrb
adc
stos
adc
sbb
or
test
out
test
test
mov
add
mov
dec
xchg
nop
in
daa
test
arpl
cwtl
subb
add
hlt
in
in
adc
and
or
add
push
dec
jno
mov
add
les
rclb
xchg
add
add
mov
cmp
les
cmp
hlt
dec
insl
add
cmp
lret
dec
pop
push
sbb
dec
mov
mov
adc
or
inc
test
test
or
dec
je
das
pop
mov
mov
cwtl
in
pop
xchg
and
add
test
clc
add
sub
add
leave
push
fiaddl
inc
pop
push
jae
or
addl
lock
or
pusha
lret
movsb
mov
dec
jb
pop
add
xchg
push
inc
or
pop
and
movsl
int
fmulp
out
and
xchg
pusha
and
adc
int3
inc
cmp
sub
dec
xchg
add
push
add
pop
xor
shlb
add
jl
sti
ret
pop
add
push
pop
jmp
mov
pop
add
and
rolb
js
fwait
shlb
push
test
mov
and
aad
shll
test
xchg
xchg
jno
add
sti
push
and
ljmp
cwtl
pop
add
jl
xchg
ja
cld
loopne
ret
test
add
and
add
ljmp
sub
in
lods
pusha
aaa
jo
lret
cltd
add
xlat
adc
shlb
cmp
and
push
sahf
add
cmp
pop
add
out
add
repz
jp
arpl
lcall
add
sbb
scas
ja
add
xchg
inc
daa
add
fwait
xor
and
add
lahf
mov
repnz
adc
fisubrs
dec
pop
add
dec
js
xchg
out
add
push
xchg
jp
add
pop
inc
pop
and
dec
add
pusha
push
and
lret
xor
je
in
shl
incb
out
push
mov
mov
add
xchg
imul
in
lods
mov
xchg
mov
shrl
push
cwtl
dec
jle
sbb
cmp
inc
sub
sbb
xchg
jmp
ljmp
ret
das
cmp
push
pop
insb
mov
add
into
sbb
adc
sub
xchg
inc
push
cmp
xor
xor
gs
mov
shl
cmpsb
pop
add
rep
in
mov
aad
cmp
xchg
add
iret
shlb
cmp
push
mov
rol
sbb
roll
jle
push
inc
dec
mov
xlat
xchg
cmp
jb
xchg
push
add
icebp
cs
fisubs
pop
xor
pushf
pop
outsb
nop
mov
int
pop
cltd
mov
lock
cs
sbb
lock
jmp
adcb
insb
or
insb
add
movsl
adcb
fadds
cmp
faddl
negl
add
fstps
pushf
cmp
aad
adc
sub
shll
bound
int3
sbb
add
inc
std
outsl
mov
aam
mov
out
test
jecxz
sbb
xlat
mul
adc
cli
roll
int
or
cmc
cmp
xor
cmp
cld
add
loop
mov
cmpsl
fs
inc
sbb
sbb
push
lret
pusha
int3
mov
cli
xor
cwtl
pop
sub
je
push
in
imul
and
inc
pop
and
lcall
and
sbb
int3
mov
add
and
call
or
imul
roll
leave
out
incl
push
addr16
testb
add
test
mov
mov
xchg
xchg
or
mov
add
icebp
or
add
push
popl
in
mov
nop
and
mov
mov
sub
shlb
pop
pop
mov
orb
or
inc
cmp
sbb
clc
fs
lret
adc
mov
push
sahf
cmp
arpl
adc
push
test
dec
fidivrs
cmp
sub
mov
mov
and
or
pop
sbb
dec
mov
xor
hlt
fildll
mov
jp
sub
mov
inc
pusha
xor
loopne
loop
sub
push
fucomip
adc
sbb
dec
jo
pop
dec
xchg
fldl
mov
popa
loopnew
js
ss
daa
inc
jp
sbb
pop
gs
cld
xor
adc
pop
add
sahf
iret
push
add
jl
cmp
loope
push
xorb
or
lahf
mov
pop
fwait
mov
popf
add
cmc
and
adc
push
dec
movsl
add
mov
daa
out
xchg
and
inc
in
dec
aam
test
add
inc
cmp
cmpb
dec
movsb
movsb
or
adc
enter
idivl
popf
leave
dec
cmpl
sub
int3
jl
dec
xchg
xchg
pusha
mov
lods
jnp
or
xchg
dec
in
push
daa
aam
adc
cmp
fstpl
jg
test
sub
mov
rcl
inc
lcall
cmpsb
mov
stc
lret
cmc
sbb
jmp
fmuls
shlb
xchg
in
or
daa
popa
inc
mov
fcomp
sub
rorl
add
sbb
shll
or
sbb
add
inc
push
adc
fisttps
cmpl
mov
xchg
enter
pop
dec
fs
push
inc
jnp
rorb
rolb
mov
repnz
mov
add
fwait
mov
hlt
and
jmp
js
movsb
test
add
loop
add
adc
and
aaa
xchg
mov
sub
dec
push
and
test
clc
pop
inc
add
int
xchg
int3
rclb
data16
das
stos
dec
mov
adc
stc
test
pop
or
inc
iret
push
fsubrl
mov
dec
fadds
or
adc
cmp
inc
jbe
movq
fcmovne
jne
popa
jnp
mov
fstl
mov
add
inc
mov
mov
stc
dec
pop
in
jno
addl
fnstcw
aam
shrl
mov
add
add
mov
enter
xchg
notl
dec
sarl
in
outsl
sub
shrb
les
or
dec
inc
adc
sbb
aaa
mov
add
sarl
jbe
adc
lds
cmc
je
add
cmpsl
pop
xor
rclb
add
or
inc
xor
rcrl
or
movsl
cmp
pusha
xchg
adc
sub
shlb
inc
add
cs
or
xorb
xchg
pop
inc
xlat
clc
and
inc
push
hlt
call
push
repnz
xchg
es
popa
lret
inc
and
fs
push
and
or
mov
jnp
pusha
mov
add
add
add
iret
ja
int
pop
pop
aas
popa
out
mov
mulb
popl
fisttpll
pop
inc
inc
insb
add
adc
call
push
fwait
mov
mov
sub
dec
inc
push
and
mov
mov
nopl
xchg
jbe
push
mov
pop
push
xor
jg
ret
sbb
shlb
add
loopne
leave
cmp
xor
dec
test
sbbb
int3
movsl
shll
lcall
lret
xchg
jnp
xchg
out
dec
add
mov
bound
and
add
mov
std
push
jmp
xlat
into
pop
xor
dec
adc
pop
cmp
xor
popf
xor
mov
and
test
jecxz
push
adc
add
jbe
stos
cli
negb
xlat
push
sub
dec
push
dec
shll
and
xor
mov
pusha
in
scas
jl
push
repz
mov
out
or
push
je
pop
push
add
movsb
add
mov
dec
add
lds
ljmp
dec
nop
cmp
movsb
cwtl
or
dec
fidivs
sub
out
ret
mov
fisttps
cmp
mov
cmp
jne
mov
mov
cmpsb
popl
fsub
pop
rcll
aaa
inc
leave
bts
mov
and
icebp
std
mov
cwtl
lret
add
jg
mov
in
add
roll
jb
fidivrs
mov
mov
push
xorb
inc
dec
xor
push
push
mov
sub
sub
dec
xor
jno
lea
jbe
shlb
and
sbb
jo
lds
add
inc
pop
popa
push
daa
and
inc
sahf
dec
xchg
pusha
add
xchg
jg
call
pop
aam
cmp
adc
cmp
movl
loopne
inc
fisubrl
pop
leave
push
imul
imul
fmuls
jae
sub
adcl
lock
dec
xor
pop
bound
push
dec
mov
lret
ja
dec
pop
int3
insb
rolb
push
dec
push
sbb
fadds
loopne
adc
inc
jl
pusha
sbb
sti
add
cli
push
or
add
fcompl
imul
in
mov
aad
lods
add
xchg
daa
add
fbld
aam
ret
xchg
rcl
into
jo
cld
sbb
aaa
mov
lea
xor
and
rcr
add
fidivs
sub
inc
scas
jle
rcll
outsb
repnz
dec
movsb
or
std
mov
sbb
rclb
adc
push
rclb
loope
mov
mov
pop
add
dec
mov
jge
or
sbb
sub
dec
add
jo
out
dec
add
int3
push
sub
cltd
adc
mov
cmpb
mov
lahf
mov
lahf
mov
es
fsubr
xchg
add
and
push
mov
rcrb
cmp
aad
lret
adc
add
int3
jae
pop
pushf
mov
stos
std
ljmp
out
jns
sub
push
xchg
or
pop
ret
lret
mov
jae
roll
repnz
loopne
ret
test
out
push
sbb
imull
mov
js
sbb
or
lods
cmp
sbb
mov
inc
sub
es
cmp
cmp
inc
lock
daa
push
mov
fcoms
faddp
cmp
inc
jnp
cmp
insb
or
data16
fimuls
push
jns
dec
enter
call
cmp
in
sbb
add
jae
pusha
mov
outsl
inc
mov
pop
lock
sub
out
push
add
rcr
push
test
lock
jb
int3
enter
aam
sbb
test
xchg
push
adc
cltd
aam
mov
jg
aas
mov
mov
dec
push
jne
or
data16
mov
jle
inc
mov
fmull
loopne
xorb
pusha
adc
lock
int3
repz
scas
icebp
addb
in
cmp
or
lds
sbb
clc
dec
nop
xor
add
jmp
loope
out
push
in
in
ret
sti
and
jl
cmp
mov
adc
mov
and
inc
jns
xchg
sub
test
mov
je
cwtl
in
mov
jecxz
jno
and
cmc
inc
cltd
je
int3
fs
inc
jl
daa
add
mov
inc
jl
sbb
sub
cwtl
mov
mov
ja
fwait
inc
rolb
push
lcall
ja
xor
jp
add
addr16
es
loopne
sub
dec
pusha
rcl
sbb
fsubrs
insb
popa
push
and
pushf
test
testl
sub
stc
adc
sbb
cmp
mov
add
imul
sub
loopne
lock
or
push
pop
es
cmp
inc
jge
adcb
jbe
pop
lods
dec
and
jne
loope
sbb
adc
inc
mov
sbb
add
mov
loop
sbb
nop
daa
call
jne
mov
pop
in
fisttpll
pop
inc
adc
jb
imul
add
pop
js
xchg
sbb
push
movb
mov
mov
inc
adc
fbstp
out
push
inc
xor
mov
lock
mov
aad
push
push
and
push
sahf
push
and
jbe
fcoml
loopne
in
pop
popw
push
add
or
into
pop
cmc
faddl
mov
jno
lods
mov
cld
rclb
loopne
enter
imul
or
lret
cwtl
dec
les
cmpsl
loopne
negl
jnp
aam
pop
pop
test
and
xor
jne
les
mov
adc
pop
and
jp
xor
mov
nop
add
rcrb
leave
sbb
push
pop
enter
pop
add
xchg
inc
jne
add
and
iret
dec
xor
push
or
repz
enter
hlt
add
mov
cltd
and
fdivrl
adcb
mov
cmp
jle
or
cli
sbb
insl
shrb
arpl
adc
push
add
jmp
test
pop
out
pop
xchg
movsl
pop
jo
xor
fcompl
roll
xor
mov
jl
fs
fisubrs
mov
call
push
push
dec
leave
sub
imul
lock
cmp
jp
or
cwtl
jl
pop
mov
mov
push
fstl
mov
lods
dec
loope
in
dec
iret
int
jns
and
lock
fstpl
pop
mov
imulb
jo
subb
stos
add
cmp
push
push
mov
dec
adc
int
cmc
push
pop
pop
pop
gs
enter
out
mov
ret
sub
pop
or
sahf
add
mov
leave
rol
jp
add
jg
shr
int
adc
pop
mulb
sbb
imul
pmaddwd
pop
loope
test
fstl
jl
or
ds
nop
inc
pop
pop
mov
pusha
mov
outsb
xchg
push
push
insb
cmpsl
pop
fldt
popa
jp
filds
mov
push
cmpb
sub
jbe
leave
adc
push
pushf
out
call
or
and
push
pop
mov
cli
mov
icebp
pop
filds
mov
in
add
push
sub
inc
or
add
aad
repnz
xor
mov
sub
sbb
cmp
push
movb
or
mov
mov
dec
test
inc
enter
psrld
out
loopne
jno
xchg
rcrl
and
adcl
in
pop
movsl
iret
add
xchg
loopne
shll
sahf
mov
mov
call
orl
stos
push
enter
or
xor
nop
ror
sbb
inc
mov
testl
adc
pop
lock
cld
sub
xchg
enter
repnz
aam
mov
sub
in
mov
std
dec
ret
bswap
pop
and
xor
loopne
dec
add
pop
inc
push
mov
add
lret
dec
aam
imul
or
mov
hlt
jns
test
jbe
lcall
nop
mov
pop
fisubrl
add
and
add
mov
dec
sbb
and
inc
xchg
dec
or
fsub
in
inc
ret
push
pop
and
popa
pop
insb
sbbb
sbb
mov
jne
or
fcomps
dec
mov
insb
lahf
in
pop
sahf
int3
mov
mov
xchg
movsb
arpl
or
pushf
cmp
testl
inc
fcomp
dec
inc
insl
push
jecxz
cmp
or
cwtl
pop
lea
test
adc
int
cwtl
jmp
mov
daa
and
shl
jb
lock
dec
stos
mov
cmp
mov
dec
adc
ficomps
nop
les
jne
shlb
sbb
lret
inc
sbbb
test
addr16
jp
les
loopne
xor
pop
test
jnp
incb
cmp
and
lahf
sahf
lods
inc
dec
and
les
lock
pop
mov
push
xchg
cwtl
mov
xchg
testb
bound
xchg
mov
xor
xor
and
divl
cltd
insb
dec
movsl
in
jno
add
fs
ds
and
call
jbe
jns
aas
das
mov
fimuls
lret
sarb
add
insl
pop
clc
outsb
loopne
jbe
addr16
add
sub
iret
adc
rcrb
push
and
and
lock
hlt
je
inc
add
cmp
add
mov
pop
popa
insb
hlt
inc
sub
movsl
or
add
dec
int
pop
push
cmp
sub
pop
or
mov
xchg
adc
dec
das
movsb
lods
test
je
cmp
andb
femms
add
dec
ficompl
repz
popf
gs
push
negb
lea
push
leave
pop
cmpsb
and
jnp
loopne
hlt
or
jb
add
in
add
out
jne
or
add
add
pop
dec
outsl
out
and
pop
frstpm(287
mov
mov
pop
push
and
into
clc
mov
add
lods
jl
add
fisubrs
insl
xchg
mov
add
rcl
mov
mov
fwait
add
iret
leave
or
fbstp
daa
addl
fnsave
push
cmp
pusha
sbb
mov
subb
fisubrl
inc
jbe
or
rcrb
push
add
mov
rclb
lods
nop
mov
cld
xchg
enter
loopne
push
xchg
outsb
pusha
pop
dec
in
adc
cmc
in
ss
cli
pop
or
mov
and
dec
test
das
pusha
cmc
mov
mov
shrb
jmp
mov
sti
sbb
daa
mov
femms
push
and
loope
fs
add
inc
inc
add
mov
std
add
aad
lock
loopne
jle
sub
pop
movsl
int3
ljmp
xchg
jbe
in
paddd
add
push
inc
lods
pop
iret
fidivs
sub
dec
xchg
push
test
and
or
in
cmp
mov
mov
decb
dec
add
mulb
imul
movsb
or
dec
int
inc
pusha
idivl
xchg
or
mov
arpl
xor
cmp
add
push
mov
xor
arpl
push
into
mov
push
or
shll
call
daa
pop
mov
js
je
pop
dec
adcl
cmpsb
dec
xor
stos
adc
pop
jp
xor
stos
and
cmp
out
rolb
daa
add
mov
inc
adc
add
je
clc
inc
jge
incb
add
pop
jno
xchg
inc
push
xorl
insl
mov
cmpsb
add
sbb
sbb
adc
xchg
inc
setae
fadd
lock
dec
mov
add
dec
pop
xor
mov
daa
repz
jnp
test
dec
mov
movsb
js
popa
test
pushf
mov
cltd
pop
sbb
jno
js
xchg
pop
jnp
ja
pop
dec
add
jne
sbb
mov
cli
push
test
xor
mov
pop
int3
aad
mov
cmp
test
add
add
or
lock
movsb
sub
adc
mov
xchg
lcall
scas
addl
out
in
add
pop
adcl
adc
in
dec
insb
cwtl
add
pushf
inc
xchg
pop
and
sbb
dec
pusha
jae
sbb
pop
inc
movsb
loop
fildl
add
mov
iret
cmp
xor
or
dec
inc
adc
xor
fs
hlt
inc
cmp
xor
add
xor
fidivl
jno
das
sub
outsb
add
inc
ljmp
mov
in
add
or
jb
add
sub
add
fstl
pop
outsb
test
dec
dec
ret
jl
aam
xor
and
add
dec
in
xchg
stc
cmp
push
lahf
rorl
int3
in
loop
ja
dec
fcompl
mov
cwtl
adc
enter
sahf
call
xchg
enter
lods
fcmove
sub
pop
into
out
pop
add
cld
divl
test
repnz
sub
insb
sbb
lods
xchg
xchg
leave
pop
loopne
or
pop
add
shrb
mov
lds
add
cmp
fcom
push
adc
sbb
cwtl
movsb
mov
ret
push
jae
mov
cmc
pop
rcll
pop
push
sahf
xlat
mov
push
cmpsl
cmp
push
outsb
stos
rcll
stos
add
mov
or
sbbb
sbb
jb
add
and
int3
mov
mov
push
push
jg
rolb
push
and
push
pop
bound
rorb
ficoms
jnp
fcompl
subb
popa
jecxz
pop
sarb
and
shrb
aas
sub
mov
cmp
stos
flds
add
sbb
cli
jge
push
and
xchg
add
dec
call
clc
iret
xor
cli
jnp
rcrl
test
enter
int3
out
add
mov
in
nop
mov
shlb
xor
sub
push
xchg
movsb
shlb
les
repnz
xchg
mov
dec
push
and
or
lods
mov
rorb
inc
xor
rorl
and
fiadds
scas
daa
mov
ja
sub
sbb
pop
imul
pop
mov
add
mov
rcl
fiaddl
fmull
adc
adc
sti
jae
mov
push
das
mov
push
outsb
out
loope
loopne
xchg
sub
and
iret
adc
test
loope
mov
test
mov
leave
aas
roll
and
add
jbe
fwait
push
insb
jno
rcr
cmpsl
popa
fsubr
cs
mov
add
sub
mov
add
orb
out
lcall
or
rorb
out
cmc
push
sub
pop
ljmp
xor
push
mov
mov
xchg
dec
adc
mov
xor
loop
add
ja
fcoms
cmp
movsl
iret
add
cli
dec
mov
adc
les
decl
xchg
sbb
cmp
arpl
addb
cs
cltd
add
mov
fmuls
cmpsb
add
arpl
je
in
lret
sbb
imul
nop
xchg
push
or
push
dec
ljmp
or
or
popf
pop
pusha
xchg
imul
mov
pop
in
xor
fidivs
int
pop
pop
and
sti
cmp
add
cmp
jecxz
shr
xchg
aam
and
ljmp
roll
jns
add
push
lock
add
jg
sarb
cmp
mov
push
test
jg
add
lcall
xchg
movsb
das
adc
hlt
pop
ja
sbb
xchg
mov
jg
add
jb
adc
xchg
xchg
mov
mov
nop
xor
inc
pop
cmc
ret
test
push
sub
daa
fs
inc
add
ficompl
mov
addr16
sub
loope
add
iret
sbb
leave
es
or
in
dec
cmc
lret
cwtl
nop
or
xor
push
shl
push
loopne
cmc
fucom
or
out
ja
mov
xchg
mov
mov
jl
hlt
rcrb
fisubrs
sub
bound
push
sub
les
adc
sub
ss
inc
xchg
out
stos
xor
add
sahf
test
or
pop
dec
loopne
add
mov
mov
psrlq
ret
jle
dec
in
andb
pop
outsl
inc
mov
je
fs
add
sub
ret
push
add
es
adc
dec
nop
fadd
insl
pop
arpl
jno
add
push
gs
mov
inc
jns
ja
popf
dec
ror
lods
sbb
sbb
xchg
mov
or
popf
subb
cmp
mov
sahf
and
je
cltd
xchg
and
add
icebp
andl
nop
lock
mov
stc
icebp
push
mov
insl
add
lds
sbbb
out
dec
cmpb
mov
loope
imul
pop
out
rcll
dec
out
sbb
loope
mov
sti
scas
add
in
fstl
cwtl
test
sub
dec
test
test
adc
cmp
pop
fs
mov
lods
xchg
inc
repnz
pop
loope
lret
and
inc
mov
cmp
add
jo
pop
add
jns
shl
ds
mov
sub
add
mov
xor
cltd
push
mov
adcb
fstpl
sbb
cmc
sub
add
mull
pop
flds
cli
push
add
xchg
data16
adc
clc
jbe
movsb
lock
adc
sbb
jmp
mov
inc
xor
push
test
sbb
int
stc
in
loopne
pop
les
xchg
out
dec
xor
orl
pop
into
push
mov
test
xchg
lea
mov
xlat
add
adc
cmp
and
daa
jo
push
or
or
dec
pop
sbb
aaa
dec
mov
cld
imulb
lock
leave
and
fstl
fs
out
ficompl
dec
mov
jecxz
dec
pusha
or
es
xchg
sub
enter
faddl
and
and
add
jo
sbb
mov
addb
pop
lahf
leave
mov
xorb
add
movl
lock
dec
nop
sub
add
rcll
rolb
scas
sti
aam
bound
testl
mov
add
adc
or
mov
cld
pop
push
jo
int3
hlt
mov
ret
repz
adc
cmp
icebp
add
nop
lock
in
dec
add
lea
insl
push
inc
sub
enter
and
adc
cmpb
rorb
mov
adc
push
fists
jns
jp
fbld
hlt
push
adc
jb
dec
int3
sub
pop
jne
xchg
xorl
mov
iret
jb
or
imul
rolb
sub
lods
pusha
pop
ljmp
shl
rolb
cld
hlt
imul
pop
insl
or
mov
dec
rolb
fstl
inc
push
xor
mov
mov
and
mov
push
lret
dec
jns
add
sub
roll
sbb
cwtl
xchg
jp
and
lcall
fistps
mov
add
xchg
or
dec
and
aas
and
je
lods
idivb
fwait
cmp
or
rolb
xor
pop
xchg
cltd
ret
test
mov
mov
xchg
clc
mov
jns
mov
xor
adc
jnp
add
shrb
rolb
in
push
rcl
adc
pop
add
test
mov
gs
cld
add
cmpsb
loope
inc
adc
dec
rcll
nop
scas
in
xor
jge
add
orb
cmp
add
outsb
fstpl
jbe
dec
mov
cwtl
cmp
push
bnd
sub
test
sbb
pusha
xchg
and
cmp
clc
add
idivl
add
fadds
rcll
imul
xchg
out
pop
lcall
inc
popa
add
lret
pop
dec
mov
pushf
pop
sub
popf
faddl
xchg
pop
jle
add
sub
push
pop
push
imul
es
ror
and
stos
popf
add
imul
push
xchg
enter
mov
in
sub
imul
cwtl
pop
popf
outsb
add
lahf
or
add
and
add
mov
ds
xchg
inc
cwtl
sbb
aam
dec
rclb
jecxz
ficomps
stc
bound
adc
cmp
xchg
adc
cmc
daa
call
xor
xor
mov
add
roll
and
sbb
dec
dec
sub
pusha
inc
sbb
addr16
add
sub
xor
add
xchg
adc
mov
fimuls
cmp
mov
stc
push
jge
push
add
jbe
icebp
cmpsl
rcrb
xchg
stos
mov
sbb
mov
pusha
dec
aam
loop
add
lcall
dec
dec
cwtl
cmpl
dec
cltd
inc
and
sahf
add
inc
movsb
inc
sbb
stos
jne
push
add
jle
mov
add
cwtl
clc
mov
cld
cmp
cmp
mov
jmp
jl
sub
pusha
inc
dec
stos
xor
repnz
leave
push
pusha
add
cmp
inc
pusha
add
or
adc
shl
popa
pop
enter
aas
scas
fsubs
iret
push
mov
cmp
and
stc
add
js
jg
or
cld
sub
in
mov
cs
dec
add
fadds
add
sub
in
mov
xor
push
pop
inc
mov
in
dec
and
sbb
sbb
ljmp
repz
mov
adc
pushf
and
clc
jp
jo
int
ret
test
in
sub
push
test
inc
lods
sub
cmpb
mov
or
cwtl
jo
in
or
add
pop
and
jmp
add
je
in
pop
sbb
pop
pop
and
xor
xchg
mov
ds
sbb
out
add
fwait
pop
enter
jge
or
js
pop
push
mov
push
inc
jo
inc
dec
jecxz
mov
mov
add
loop
add
jbe
shlb
sbb
and
pop
mov
and
pop
inc
shll
sbb
lods
roll
xchg
cmpl
cmp
mov
leave
shlb
pop
pop
xchg
cltd
pop
mov
mov
sub
push
std
in
clc
adc
lret
and
sti
or
daa
mov
push
out
add
jl
enter
push
sub
sub
add
jns
add
les
hlt
andb
mov
mov
sahf
fisttpl
outsl
leave
xchg
nop
lods
nop
xchg
fldcw
cmp
andb
xchg
sub
cli
stc
or
dec
or
ds
aas
or
and
dec
lret
aaa
inc
out
fiadds
dec
push
pop
xadd
adc
shlb
mov
or
stc
sbb
cmc
xchg
mov
out
sbb
in
push
pop
xchg
add
pop
shlb
pop
dec
add
xlat
or
mov
and
xchg
push
jo
xchg
sbb
pop
push
or
add
out
pusha
mov
xorb
fisubs
rorb
add
push
jb
ljmp
dec
mov
pop
testl
jo
imul
mov
inc
pop
idivb
dec
xchg
movsb
sarb
mov
popf
negb
jle
pop
outsb
in
adc
js
lods
pop
pop
jmp
add
pop
or
repnz
add
push
mov
orl
leave
data16
clc
cmp
cmpsl
inc
pop
cwtl
movsl
xchg
jmp
push
addr16
adc
mov
and
mov
popf
sarl
int3
mov
jnp
imul
div
jge
mov
jne
push
stos
fwait
mov
mov
aas
inc
test
and
cmpb
ficoms
mov
mov
shll
rcrl
cmp
orb
shlb
loopne
aaa
adc
stos
jae
mov
jno
in
shl
dec
fidivs
mov
jnp
nop
jo
sub
add
xor
dec
aad
cmp
mov
xlat
test
jns
int3
mov
and
hlt
cwtl
lock
aam
add
mov
jmp
mov
sahf
jp
divb
popa
xor
adc
lcall
lahf
popa
mov
es
clc
adc
jns
push
int3
clc
cmp
ss
mov
sbb
xor
pop
les
inc
mov
push
jbe
rorb
or
add
add
ficoms
sub
movsb
rolb
dec
push
add
inc
movsl
dec
sbb
mov
sbb
lret
jp
mov
jl
pop
sbb
dec
rcrl
repz
xor
ss
fs
mov
stc
hlt
rcrb
lea
clc
inc
ja
or
push
lea
stos
lahf
lret
test
shrb
jae
fadd
push
jg
mov
out
cltd
popa
out
and
xchg
cmpsb
pop
fisubrl
and
xor
add
jne
lock
push
aam
outsb
dec
fidivrs
push
dec
xchg
jp
sti
and
div
cmp
fbld
xor
subb
into
faddl
xor
inc
subl
add
cld
push
dec
fisubrl
lahf
pop
jns
inc
xor
cmp
xor
int
xchg
xchg
in
cmp
lds
add
sbb
or
push
cmc
mov
adc
add
dec
cmp
jnp
adc
mov
mov
fsubrl
pusha
aam
cs
jns
pop
and
add
std
ja
jno
and
and
pop
cmpsl
hlt
pop
or
xor
popa
jle
loopne
add
bound
aad
gs
mov
adc
sahf
aaa
add
sub
fsts
les
adc
xor
rclb
add
mov
ja
cwtl
add
push
xchg
adc
ret
lods
fs
cmp
insl
sbb
mov
push
movl
pop
push
mov
sbb
dec
jo
call
in
and
mov
or
pop
add
clc
jl
push
xchg
pop
pop
jb
add
insb
test
nop
sbb
or
adc
pop
fs
in
rcr
jnp
sub
scas
test
xor
cmp
push
jb
fwait
inc
mov
mov
outsb
jmp
adc
arpl
add
mov
sbb
mov
stc
shl
and
lahf
dec
ror
and
xchg
add
mov
mov
nop
sbbb
sub
xchg
sbb
movsl
scas
je
test
out
push
push
fs
pop
int3
imul
loop
inc
add
roll
xchg
aam
testl
orb
orb
push
mov
enter
insl
pop
aaa
mov
roll
xorl
add
and
rolb
test
pop
insl
jo
je
mov
sbb
push
sub
cmp
push
out
pop
mov
nop
adc
or
pop
cli
xchg
in
sub
lahf
sbb
jl
ja
cmpsl
enter
fstl
cmpsl
push
xchg
mov
or
mov
mov
cmpsb
ret
xchg
in
jecxz
add
aam
cltd
cmp
jb
out
mov
inc
hlt
add
push
scas
fs
mov
incl
sbb
mov
push
pop
cmpsb
mov
test
bnd
out
mov
push
adc
and
rorb
call
scas
fs
icebp
test
mov
subb
xor
or
or
insb
outsl
or
mov
xchg
lods
stos
cwtl
add
lcall
add
std
int
insb
jbe
cmp
cmpsb
sub
add
mov
jmp
pop
push
add
lldt
xor
adc
inc
sub
into
jl
cmpl
mov
leave
sub
inc
movsb
ljmp
mov
popa
cs
out
pop
adc
iret
lock
test
clc
mov
push
test
cld
mov
jp
lds
nop
test
mov
icebp
push
pop
mov
shl
add
call
pop
bound
cwtl
notb
fisubl
lahf
and
jnp
rcl
inc
loope
clc
lret
cmpsb
in
pop
stos
push
push
inc
fs
cld
orb
outsb
mov
add
lahf
ret
dec
cmpsb
jl
ret
fldenv
mov
dec
pop
lret
mov
movsl
sbb
lock
jnp
and
inc
je
fisttpll
repnz
adc
xchg
pop
pushf
sahf
add
movb
add
inc
mov
jo
fsubr
rclb
cmp
sub
dec
adc
push
and
add
sbb
xlat
icebp
sahf
int
out
dec
mov
add
xor
cwtl
add
inc
cmpsl
and
mov
pop
fsubrs
push
push
subb
dec
test
faddl
xchg
fldl
movsb
ss
push
es
lahf
rclb
xchg
out
inc
mov
cld
loope
mov
cmp
sbb
int3
pushf
dec
shrl
push
popf
mov
mov
ss
cld
push
adc
xchg
and
lods
pop
pop
add
rcrb
roll
and
rcl
or
cmp
mov
adc
mov
lds
sbb
jge
add
aam
aam
xchg
mov
xchg
into
mov
sub
dec
push
pusha
mov
jecxz
or
faddl
mov
in
or
sub
xchg
mov
nop
pop
jne
lock
mov
jp
add
cs
leave
push
int
push
pop
dec
out
fs
sbbb
add
pushf
int3
cmp
popa
nop
mov
mov
pop
add
mov
pop
mov
pop
jns
and
mov
push
push
test
jle
out
leave
ror
and
leave
dec
push
insl
mov
jne
ss
mov
adc
and
test
lret
adc
inc
jmp
add
inc
clc
xchg
iret
roll
jno
jo
push
scas
ja
add
sub
bound
push
sub
jg
xchg
cmp
dec
adc
into
sbb
mov
insb
add
bound
push
push
insl
test
or
cltd
ret
les
testl
xor
sub
dec
rcr
sbb
cmpb
nop
push
inc
adc
imul
int3
daa
test
xchg
andb
add
xor
stos
mov
and
xchg
sub
sbb
clc
push
xor
movsb
add
or
loope
js
rorb
sbb
dec
andb
jp,pn
cmp
ret
jmp
jnp
nop
dec
pop
add
mov
enter
pop
sub
add
les
xchg
mov
push
cmc
cld
or
sbb
push
addr16
or
nop
adc
cwtl
mov
jno
add
push
sub
mov
movsl
add
insl
push
cmp
xchg
cwtl
sub
add
out
fmuls
cmp
add
repz
arpl
rcll
cmc
movsb
addr16
xchg
aad
mov
xchg
loop
add
loope
pusha
les
cmp
out
addb
and
fnstsw
test
enter
add
dec
lock
xor
push
movntps
enter
jns
pop
xor
into
in
cmpsl
and
shlb
fstl
sub
pop
fcoms
incb
add
js
dec
adc
insb
adc
leave
xor
ss
sub
mov
pcmpgtb
add
stos
inc
out
pop
test
fs
daa
shlb
lea
adc
push
xor
jmp
movsl
jge
jae
cmp
mov
cmp
pop
outsb
call
ss
jno
add
cmpsl
lods
out
ficoms
and
add
repnz
je
add
mov
add
or
add
or
mov
cwtl
adc
jle
sbb
adc
sub
in
daa
movsb
sub
pop
cwtl
in
lret
push
xorb
insb
jb
add
pop
add
fstl
add
loope
mov
outsb
and
add
add
scas
testb
or
out
and
dec
mov
cmc
or
pop
out
mov
call
sub
dec
mov
or
and
in
in
add
cli
in
in
add
pop
cbtw
pop
mov
ror
mov
jmp
imulb
test
mov
fbstp
add
and
cwtl
test
rolb
std
int3
mov
dec
out
out
pop
or
call
imul
pop
jg
sub
add
test
outsb
and
xchg
mov
jle
insl
mov
movsl
clc
in
pop
mov
ret
lret
pop
leave
and
xor
movsb
fstl
pop
mov
pushf
add
and
pushf
mov
add
and
hlt
insb
out
pop
je
dec
outsb
sub
and
popa
rcl
push
and
stc
imul
in
xor
push
mov
mov
and
hlt
les
test
dec
sahf
cmp
adc
add
loope
or
mov
adc
push
push
outsb
in
add
mov
cli
dec
lock
pop
cmc
mov
dec
adc
adc
test
jae
cmp
div
and
jns
mov
sub
mov
cmp
sbb
mov
pop
stc
leave
arpl
nop
adc
add
loope
test
and
sub
add
hlt
xor
pop
xor
mov
inc
bound
out
add
outsl
push
sub
loope
filds
add
add
xchg
mov
adc
xchg
cmp
and
pop
push
mov
mov
cmp
add
inc
xchg
dec
add
mov
mov
push
cmpl
or
imul
mov
add
stos
xchg
add
test
out
adc
in
and
inc
add
jb
or
dec
mov
and
loopne
shlb
fxtract
push
loopne
cmp
and
or
xchg
add
mov
add
or
add
int3
clc
call
pop
dec
testl
inc
gs
insl
dec
outsb
loop
sbb
dec
sbb
add
inc
or
push
add
in
mov
jmp
enter
sbb
clc
and
mov
pusha
stos
add
push
imull
pop
lahf
icebp
cmpsl
mov
pop
mov
std
add
insb
push
add
fdivl
js
setae
pop
insl
popa
rcrl
dec
leave
js
xor
push
adc
shlb
jmp
ret
adc
in
repnz
add
inc
and
nop
sti
add
mov
lods
add
clc
bound
and
hlt
xchg
cmp
repz
es
les
inc
cmp
fcoml
sbb
sub
aaa
inc
sbb
mov
loopne
mov
rolb
lcall
rolb
cmp
fstp
xchg
inc
sub
add
mov
inc
iret
lock
mov
mov
addr16
stos
test
and
adc
stos
cmp
adc
sbb
add
add
push
arpl
or
mov
xlat
cmp
addb
lahf
rolb
rolb
repnz
xchg
scas
sbbb
pop
add
jl
imul
hlt
cmp
adcb
inc
push
add
in
jge
aas
mov
ret
pop
daa
in
add
cli
push
scas
arpl
xchg
or
or
sbb
lcall
cwtl
xchg
into
push
movsb
aam
sub
fimuls
pop
inc
lea
stos
inc
xchg
cmc
daa
outsl
and
xor
xor
xor
int3
xor
mov
adc
add
jg
pop
dec
sbb
or
test
icebp
call
add
lret
xor
fiadds
test
xchg
dec
popa
rcll
loopne
sub
loope
or
fs
and
insl
int3
xor
and
add
or
add
push
je
arpl
cmc
int3
and
pop
bound
adc
pop
js
int3
inc
sub
adc
xchg
popa
push
ret
xor
add
adc
les
sub
mov
jecxz
mov
cli
jge
je
lock
sbb
cmpsl
pop
push
inc
pop
mov
sub
inc
lods
adc
lock
loope
add
lock
mov
push
push
movsb
xchg
push
leave
mov
push
insl
mov
call
in
add
popf
shr
insb
inc
popf
and
and
sahf
xchg
rcr
cld
add
sub
popa
pop
pushf
das
lock
sbb
or
dec
mov
popa
fsubrl
mov
push
addb
adc
pop
add
jl
mov
jp
adc
mov
movsl
and
push
push
sub
lret
ljmp
jnp
bound
sub
sti
and
cwtl
jl
push
dec
add
adc
mov
roll
dec
mov
shrl
jno
es
fstl
adc
jb
add
ret
push
xchg
out
add
jp
data16
negb
adc
mov
push
mov
and
push
std
orl
and
repnz
fcompl
jle
pop
and
jp
cmc
push
dec
ret
adc
hlt
xlat
test
cmp
sti
clc
addl
out
pop
pop
sbb
loop
inc
xlat
icebp
scas
out
dec
and
lea
loope
addr16
cmpsb
add
pop
mov
add
jmp
ljmp
cmpsb
mov
and
add
mov
lret
jo
push
mov
inc
sub
mov
stc
xchg
xchg
pop
sbb
add
sbb
rclb
adc
add
popa
daa
jo
push
xchg
push
inc
iret
and
sbb
xchg
and
pop
stos
inc
nop
add
lret
shll
sti
or
inc
fsubs
dec
int
add
push
inc
jge
ds
add
sbb
fstpl
clc
pop
arpl
jno
pop
sbb
pop
mov
cmp
xchg
dec
dec
push
insb
jl
out
rcll
push
repnz
dec
pop
inc
add
dec
mov
and
int3
nop
sbb
lods
clc
sahf
inc
adc
push
imul
lcall
pop
cmp
test
jecxz
sub
shrl
add
sub
aam
fsubrl
out
je
das
add
mov
repnz
add
add
add
mov
mov
int3
add
popa
mov
addl
mov
fnstsw
mov
pushf
add
dec
cmp
xchg
ss
lcall
into
cmp
inc
ret
add
inc
out
add
adc
push
inc
cwtl
cmpsl
cmp
cltd
mov
and
movsl
adc
pop
xchg
xchg
push
and
jp
lret
inc
sbb
aas
xchg
sbb
leave
mov
fadds
test
jmp
fs
leave
jnp
nop
inc
fsubp
clc
rolb
mov
jne
test
cmp
add
jb,pt
dec
mov
ljmp
xor
popa
jmp
xlat
test
pusha
sarb
stos
jp
push
hlt
sub
mov
into
sti
out
sub
pop
add
mov
jbe
jecxz
pop
test
add
cld
insl
scas
rclb
add
shrb
adc
dec
adc
pop
nop
fs
add
cmp
sbb
add
cli
jnp
adc
icebp
out
iret
enter
add
mov
pop
pop
ret
jl
mov
pop
inc
aas
mov
pop
add
xchg
cld
stc
aam
negl
xchg
add
movsbl
pop
out
bnd
fiadds
inc
cld
or
and
mov
add
es
stos
xchg
ret
jo
aad
push
cs
and
mov
adc
in
in
mov
add
lahf
int
cmp
insb
daa
or
roll
cmpsl
clc
jg
mov
lahf
sub
lods
aam
nop
xchg
xchg
insl
jp
and
stc
sub
add
in
mov
jmp
jo
in
mul
adc
or
sbb
xchg
loopne
lcall
inc
cmp
pop
and
outsb
into
mov
and
fildl
stos
push
lods
scas
js
pusha
push
xlat
dec
insl
loop
add
jae
pop
pop
enter
mov
pushf
insb
cld
enter
adc
adc
fcomi
imul
mov
insb
xchg
dec
jle
gs
push
mov
sub
clc
add
nop
scas
psrld
jae
clc
and
inc
sbb
bound
nop
or
mov
inc
loope,pt
dec
and
repz
xor
enter
movsl
aam
or
dec
push
push
aam
test
push
push
int
lods
les
jo
fidivl
lcall
jo
rorb
inc
sti
test
inc
sub
loopne
xchg
mov
pop
insb
add
fmull
daa
lret
sbb
dec
lods
sub
adc
call
mov
push
cld
rorl
add
jb
pop
adc
addl
jo
add
add
pop
cli
shlb
mov
dec
addl
loop
jg
and
sarb
es
adc
std
mov
nop
sbb
insl
jns
hlt
mov
aam
adc
aam
or
insb
pop
add
adc
or
fildll
pop
hlt
add
mov
and
ret
repz
std
pop
mov
push
add
sbb
test
add
rcr
popa
loope
in
call
and
jb
lret
adc
js
xchg
add
divb
test
or
pop
xor
mov
xor
pop
dec
adc
pop
cmpsb
add
fcomps
cmp
xchg
dec
mov
or
push
leave
movsb
pop
or
imul
scas
add
aas
stc
mov
pop
adc
nop
pop
pop
push
lods
add
rcrl
lahf
leave
mov
js
dec
aad
rcr
or
xchg
outsb
or
adc
ja
je
cmpb
imul
xor
add
movsb
push
fimuls
mov
outsb
fldenv
arpl
call
xor
push
fnstsw
add
sbb
shll
inc
sahf
push
js
cmpsb
call
les
pop
jecxz
outsl
mov
xchg
insl
cs
adc
xchg
imul
movntps
mov
cld
in
jg
push
les
adc
nop
mov
lock
add
mov
or
or
fcomi
adc
call
jle
sbb
js
add
pop
fs
push
mov
or
shr
or
test
jmp
sub
cld
arpl
jnp
mov
add
sarb
enter
or
push
testl
popf
fimuls
std
in
rolb
pop
dec
xchg
and
xor
sbb
push
cmp
sub
jecxz
mov
out
ja
fwait
or
pop
arpl
mov
cmpb
lock
add
out
cmc
iret
lcall
mov
hlt
rorb
jne
push
dec
int3
sub
add
or
clc
dec
int3
sub
cmp
rcr
jo
inc
add
dec
mov
daa
add
push
enter
mov
push
adc
not
and
lock
mov
rorl
mov
xor
aas
add
push
fstpl
mov
inc
pop
adc
je
inc
or
es
inc
js
sub
dec
pop
cmp
jge
xchg
pop
iret
and
and
push
clc
data16
cmp
in
push
add
das
fdivrp
rorb
add
sbb
xor
push
mov
in
jo
lret
xor
add
daa
sbb
jnp
mov
push
push
mov
push
xchg
lock
inc
push
pusha
fadds
imul
mov
sub
repz
pushf
xor
add
pop
mov
add
push
pop
sti
jno
dec
dec
add
imul
inc
cld
pop
mull
jge
dec
and
mov
ret
xor
cmp
ficoms
sub
adc
and
pushf
add
mov
jne
add
push
sbb
mov
adc
mov
out
mov
sarb
add
call
add
push
pop
jecxz
or
sbb
pop
pop
mov
pop
in
add
outsb
push
cmp
sbb
ja
cwtl
lock
clc
xorb
ret
test
xor
and
dec
or
inc
pusha
mov
or
or
cmp
adc
ret
repz
dec
lock
sysenter
insl
es
adc
in
mov
jl
sub
sub
mov
jae
mov
call
or
inc
lds
push
sbb
sahf
sub
fadds
add
push
mov
or
adc
jbe
sbb
mul
cmp
scas
cs
in
push
fsubr
xchg
add
cltd
dec
lret
dec
inc
mov
sbbl
andl
scas
adc
jns
pusha
adc
bound
sbb
jmp
dec
cltd
xorl
sbb
sarl
loopne
or
stos
mov
dec
or
out
push
cmp
xor
rclb
movsl
sub
arpl
or
sub
inc
rolb
mov
push
adc
xlat
mov
and
mov
sub
jnp
add
sub
sbbb
popa
movsb
xchg
pusha
pushf
call
dec
enter
mov
movsb
add
cmpsl
adc
movsb
pop
imul
add
cmp
add
int3
rorl
push
and
addl
push
shlb
icebp
or
inc
aad
adcb
xchg
add
mov
filds
mov
sub
jecxz
cmp
xchg
xchg
add
jns
and
xorb
hlt
mov
push
push
xor
aaa
clc
add
xorl
mov
push
pop
mov
sbb
popa
in
nop
enter
cli
fs
jp
xor
xor
cltd
outsl
movsl
nop
test
inc
enter
cmp
mov
leave
js
setp
stc
add
add
loop
inc
fistpll
sbb
in
add
xlat
and
sti
push
push
in
repz
mov
pusha
ljmp
jne
xor
and
incb
shrb
fwait
ret
imul
push
adc
fcomps
xchg
cmp
xorl
xchg
mov
aam
imul
aas
push
je
out
xor
adcl
out
sub
movups
sbbb
mov
mov
sbb
outsb
push
add
imul
into
add
sbb
lea
loopne
loope
mov
movsl
aaa
mov
xchg
mov
mov
out
lret
mov
sub
cmpsb
hlt
add
test
add
test
cmp
dec
jg
inc
and
mov
push
pop
cltd
test
mov
testl
lods
bnd
add
adc
bound
dec
ja
and
out
or
and
mov
pop
fdivs
scas
popa
inc
sbb
lcall
add
and
adc
fdivr
pusha
adc
dec
add
cmp
push
or
lcall
xor
or
insl
sbb
sti
adc
cmpb
aas
lret
jo
jmp
mov
add
push
lret
out
push
add
outsb
jae
xor
inc
lock
sbb
cmp
test
push
add
orl
lret
pop
lea
mov
sbb
xchg
push
sbb
cltd
push
sub
or
or
sbb
movsl
pop
hlt
adc
cmp
cli
adc
fwait
and
add
filds
pushf
mov
sbb
stc
adc
jecxz
in
pop
mov
jl
xchg
shr
arpl
testb
sbb
and
inc
add
imul
push
jo
add
nop
sbb
or
andb
mov
pop
fldcw
rolb
int
loope
aas
lea
sahf
cmp
andb
ret
adc
adc
add
mov
inc
push
dec
push
stc
movsb
add
icebp
call
dec
stc
push
and
add
cmp
push
loope
push
sbb
ret
in
push
jne
cmp
inc
mov
push
adc
addb
mov
sub
sbb
arpl
mov
inc
stc
enter
shlb
inc
jp
scas
roll
xchg
fcomp
test
andl
mov
inc
imul
cltd
bound
add
fwait
cmpsl
dec
inc
nop
pusha
out
fbld
pop
loope
pop
add
sub
push
jae
jbe
mov
add
sub
inc
xchg
or
adc
add
iret
rcll
addr16
scas
test
sub
sub
mov
lods
jmp
sbb
fidivl
out
cltd
xor
loopne
inc
or
cmc
add
sub
fstpt
flds
out
shrl
xchg
cltd
adc
or
aam
cltd
jle
out
jl
std
mov
push
shlb
pushf
push
inc
cmp
iret
inc
arpl
cwtl
hlt
sub
subb
jle
inc
dec
mov
ss
jnp
sbb
add
pop
insb
inc
inc
jmp
sub
nop
xchg
xchg
popa
cmpsl
or
xor
fmul
mov
mov
push
test
sbb
fisttpll
pushf
mov
sbbl
test
cmp
xor
adc
aas
inc
xchg
test
loopne
and
xchg
je
in
xchg
sbb
test
ret
in
add
fistps
inc
daa
pop
aaa
mov
int3
dec
and
leave
roll
sub
imul
add
stc
inc
cmp
cltd
cmp
repz
mov
nop
mov
adc
sahf
cmp
jb
imul
mov
rcll
add
inc
or
add
in
cmp
mov
mov
out
mov
pop
test
adc
or
dec
or
inc
xchg
pushf
cmc
adcb
fistpl
sbb
arpl
movsl
push
lods
dec
dec
sub
or
mov
lahf
cmp
jmp
add
repnz
lahf
adc
movsb
pushf
and
xchg
add
movsl
and
scas
push
or
cmp
leave
and
or
push
cwtl
pop
loopne
adcb
and
add
push
inc
jmp
test
push
addr16
add
xor
ror
xor
stos
test
pop
pop
aaa
adc
andb
shl
addr16
fdivrl
add
out
dec
rorl
clc
pop
inc
add
dec
jne
add
push
mov
inc
shrb
cmpsl
jp
pop
cli
rcrl
add
pop
cs
jl
add
jmp
jecxz
ror
insb
in
jle
lret
je
out
mov
adc
imul
pop
fadd
fstps
dec
inc
sub
add
push
jle
mov
sbb
aad
sub
mov
dec
test
flds
cwtl
adc
sbb
out
cli
push
adc
shlb
enter
rcll
movlps
dec
sub
sub
cmp
call
jns
inc
popa
cmpsb
ljmp
es
loop
xchg
scas
add
sbb
fs
ljmp
iret
arpl
inc
push
icebp
or
pop
xchg
dec
mov
cmpl
xor
loope
in
lret
dec
adc
fs
sbb
iret
imul
xchg
add
mov
mov
enter
imul
movsl
mov
and
cmp
push
js
and
xlat
jmp
fidivl
outsb
sbb
shlb
sub
push
add
mov
cwtl
movsl
ficoms
mov
xorl
xchg
int3
insb
adc
std
loopnew
stos
xor
or
testb
rolb
int
cmpsb
mov
adc
cmp
and
add
inc
xchg
out
sub
decb
xor
sub
push
push
and
mov
sbbl
or
out
push
loopne
xchg
mov
mov
adc
lea
cwtl
inc
jo
add
mov
jns
shrb
in
popf
jp
inc
pushf
lock
and
xchg
push
inc
mov
pop
mov
fsubl
mov
xor
leave
xlat
inc
dec
push
mov
call
push
add
out
and
inc
cmp
sbb
ss
pop
lcall
insl
pop
out
xor
in
xchg
xchg
sahf
aam
dec
adc
dec
enter
cli
xor
mov
ljmp
out
add
dec
add
push
insb
push
mov
or
xchg
jmp
sbb
les
sub
loope
or
aaa
push
add
ds
pop
mov
mov
xor
out
dec
inc
cmp
lcall
cmpsl
xchg
dec
mov
subb
outsl
loopne
movb
sub
mov
xor
and
fwait
hlt
push
sub
mov
ret
nop
pop
mov
clc
ret
mov
inc
pop
push
pop
jmp
sub
cmpb
and
dec
cmc
cwtl
and
inc
jg
adcl
je
and
popf
punpcklwd
int3
out
cmp
lds
cmp
adc
sbb
dec
push
sahf
mov
in
sarb
or
sbb
cltd
pusha
loop
mov
in
inc
js
add
sub
out
sarb
and
and
jl
stos
add
out
mov
adc
je
and
sbb
inc
mov
xor
jbe
cltd
or
pop
lahf
jne
mov
subb
add
stc
sbb
addb
inc
dec
lcall
shlb
nop
mov
jno
scas
adc
lahf
nop
xchg
inc
sbb
or
xchg
test
push
xlat
add
iret
andb
shlb
sahf
mov
fcomps
push
add
mov
jbe
andl
clc
dec
loopne
cltd
fmulp
out
add
insb
std
mov
mov
loop
dec
fistpll
sbb
adc
mov
xchg
dec
cs
or
ror
sub
ja
push
cmpsb
pop
cmp
sub
call
add
cmp
or
test
push
es
add
add
inc
xchg
das
repz
fsubl
fdivs
insb
inc
jmp
inc
pop
sbb
inc
pop
mov
popf
add
pop
in
test
lea
loope
xor
mov
ds
xor
fwait
adc
cwtl
repz
add
jae
or
out
and
or
sub
loope
pop
sti
pop
and
inc
mov
imul
add
rcr
adcl
cmpsb
adc
sbb
je
enter
pop
push
or
les
add
nop
inc
mov
mov
adc
fwait
dec
popf
add
pop
loop
pop
xchg
pusha
fists
ljmp
in
sub
adc
lret
push
add
filds
push
mov
cmp
add
push
popa
mov
rcrb
inc
int3
mov
andb
adc
flds
jno
add
mov
inc
loope
inc
dec
dec
jo
clc
or
adc
loopne
pop
xor
arpl
add
push
xor
frstor
sti
xchg
pushf
cmpl
loope,pt
rcrl
dec
add
jl
loop
adc
xchg
ds
sbb
mov
mov
aaa
out
leave
adc
push
mov
in
cmp
or
test
out
cmp
mov
xor
sbb
lods
pop
sbbb
addb
lret
and
mov
mov
popf
cmp
ljmp
cli
xchg
xchg
loop
jmp
and
mov
out
push
cmp
mov
inc
inc
fldcw
xchg
imul
popf
inc
stos
aad
inc
lcall
int3
sbb
and
nop
mov
dec
push
adc
or
neg
imul
add
push
pop
push
std
mov
cmp
imul
and
sahf
sub
sub
add
sbb
jmp
mov
xchg
out
push
or
call
mov
pop
int
xor
add
fidivs
inc
or
icebp
pop
addb
cmp
adc
and
add
ret
and
xor
jecxz
sbb
mov
lea
daa
xchg
add
stos
aam
test
cmp
fxch
in
jnp
icebp
std
add
inc
xchg
and
jae
pushf
repnz
test
fcoml
and
mov
mov
test
out
or
lahf
cltd
xchg
test
cmpsl
cmp
add
nop
enter
inc
sbb
pop
cwtl
test
mov
int3
add
push
fs
test
sbb
mov
cmpb
add
xchg
lahf
daa
aas
orb
add
dec
push
xchg
add
jecxz
push
and
mov
or
push
cmp
add
or
push
test
and
or
xchg
or
imul
mov
mov
iret
sbb
xchg
repz
mov
test
sub
xchg
add
xchg
es
ljmp
dec
cltd
pop
xchg
inc
push
vpmacsdqh
mov
and
clc
pop
add
jo
mov
or
repnz
and
cld
xchg
adc
fsubrl
or
out
cltd
fs
mov
push
fsubs
mov
sbbl
sub
loope
add
push
decb
adc
lret
mov
mov
clc
xchg
push
ljmp
hlt
dec
add
call
mov
pop
lock
sahf
inc
sbb
xchg
add
lds
shlb
sbbb
adc
inc
icebp
mov
mov
xchg
sub
lcall
fnsave
jmp
fbld
mov
fidivl
ret
inc
or
mov
je
outsb
adc
inc
cli
insb
fucomp
fdivrl
sbb
push
xchg
add
std
rolb
push
add
ffreep
ret
lahf
push
add
and
es
dec
movsb
add
lahf
inc
push
add
inc
out
rolb
add
dec
repz
pop
stos
add
or
or
movsl
pop
cmp
in
push
sbb
xchg
loop
jae
sbb
sbb
outsl
adc
rolb
add
inc
jl
movsl
iret
lret
and
mov
xor
pop
lods
sub
imul
dec
in
xorl
inc
push
or
or
add
pop
inc
stc
push
lock
add
lea
pop
ja
loop
mov
mov
in
cmp
mov
sbb
and
ja
addb
or
das
xchg
jne
sub
add
cmp
dec
add
aas
or
test
cmp
cld
add
loopne
adc
xchg
inc
and
add
gs
popf
cmp
mov
xchg
pop
push
jmp
test
pop
mov
push
lahf
add
stos
or
xchg
add
lret
andl
lds
jb
cwtl
inc
sbb
add
mov
cmc
and
cld
pop
inc
rolb
sbbb
leave
sub
xchg
cmp
xchg
addl
pusha
das
pusha
push
and
test
sub
pop
dec
cli
pop
sbb
or
mov
inc
adc
adc
in
flds
mov
popf
push
ljmp
sbb
cmp
orb
hlt
ds
popa
add
ret
cmpsl
or
sti
aas
xor
jno
ljmp
dec
orb
pop
clc
ja
divb
frstor
xor
add
lods
push
add
out
dec
xor
rcr
addb
jbe
sbb
lahf
lods
pop
fs
enter
mov
out
lods
push
add
xor
lret
sbb
int3
push
das
jae
and
add
js
cltd
dec
lcall
mov
pop
notb
mov
xchg
dec
adc
dec
adc
adc
xor
ret
jle
push
add
int
aam
push
cld
sbb
test
or
jo
jnp
subl
or
adc
add
and
jp
add
outsb
mov
sbb
orl
test
mov
pop
aam
icebp
mov
adc
add
sbb
lods
jnp
idivb
cmp
or
push
mov
loopne
sbb
add
test
pop
add
in
or
push
ss
ficompl
and
inc
add
pop
fildll
faddl
add
add
enter
xchg
pop
jo
stos
cltd
ret
mov
inc
or
mov
push
sbb
add
cmc
and
divb
xchg
add
dec
icebp
fsubrs
hlt
add
rcr
xor
std
int3
sbb
jmp
rorb
cmp
sarb
sub
add
jns
mov
ret
add
lds
add
int
push
add
add
add
sbb
lock
js
sahf
push
jg
add
adc
and
repnz
bound
mov
cli
cmp
xchg
and
ret
add
jb
push
mov
enter
rclb
add
testl
dec
sub
inc
clc
mov
addl
fdivrs
loope
add
jg
insl
cmp
push
or
dec
mov
jmp
ljmp
xchg
popf
sub
mov
es
inc
fsub
in
stos
lock
xor
xchg
add
jl
pop
mov
daa
add
xlat
outsl
aad
fwait
push
jnp
mov
inc
in
es
lea
jns
mov
cli
movb
mov
push
and
inc
clc
dec
push
arpl
or
cmc
and
ljmp
enter
mov
xchg
lcall
mov
pop
mov
lock
inc
sub
and
into
faddl
rol
xor
jbe
push
ret
mov
inc
and
imul
xchg
pop
mov
add
mov
js
aam
stc
nop
add
mov
jg
cmp
and
outsl
lahf
cmp
out
and
pop
dec
fcomps
in
add
divb
add
add
dec
stos
mov
dec
leave
loopne
scas
mov
subb
jb
pop
hlt
xchg
mov
enter
rolb
es
add
outsl
mov
mov
flds
adcb
inc
jne
sbb
push
mov
pop
push
popl
shlb
test
pop
mov
pop
xchg
pop
push
aam
test
mov
subb
and
add
repz
inc
sbb
movsb
in
add
mov
mov
add
in
cs
cmp
jnp
pop
jle
fdivrl
jp
aas
in
int3
mov
lods
or
testb
jns
adc
jb
dec
add
stos
cwtl
scas
movsl
or
add
repz
mov
es
push
xchg
clc
cwtl
sbbb
mov
pop
faddl
fidivs
sahf
add
sti
stos
les
gs
inc
pop
dec
add
add
mov
stos
loopne
add
inc
jns
pop
mov
xor
popf
and
ja
imul
or
add
inc
jne
xchg
fnstenv
arpl
sbbl
inc
pop
addl
bound
pop
add
int3
std
dec
inc
cmpsl
ret
insb
add
mov
clc
stc
add
mulb
cmp
in
mov
dec
cmp
jae
add
mov
dec
addb
xor
icebp
imul
mov
pop
shlb
mov
adc
lahf
sti
enter
cld
mov
adc
add
jl
int
addr16
jno
popf
dec
mov
or
lret
ja
push
mov
incb
fdiv
push
sahf
dec
adc
fsub
sbbl
test
add
xchg
jmp
and
xchg
je
pushf
inc
bts
popa
and
add
mov
cmp
stc
jle
mov
adc
iret
sbb
popf
int3
add
mov
loope
fwait
sahf
mov
jge
popa
jo
add
mov
mov
ficompl
dec
lcall
adcb
pop
cmpsl
pop
std
add
pop
sbb
sbb
fidivl
add
lds
sub
dec
inc
loopne
inc
mov
popa
push
cmpsb
mov
xor
out
scas
add
cmp
push
daa
cwtl
cmpsl
in
or
movsl
orb
adcb
adc
shlb
repnz
pop
pop
ljmp
pop
inc
orb
cli
dec
push
lock
xorb
outsl
and
add
add
std
mov
andl
hlt
out
outsl
add
cmp
repz
out
sub
mov
lahf
inc
std
pop
xchg
add
sarb
jmp
js
add
loopne
adc
add
mov
bound
add
mov
push
add
fimuls
dec
xchg
rclb
lahf
test
dec
repnz
pop
xor
mov
rcrb
rol
mov
sti
les
jg
in
rorb
or
loopne
mov
into
add
adc
test
add
jno
repnz
sbb
adc
fadds
add
and
shl
pusha
sbb
add
lcall
mov
add
nop
rorb
push
cwtl
in
mov
inc
stc
imul
inc
dec
pop
push
in
mov
inc
cld
outsb
add
pop
ljmp
and
fsub
mov
mov
add
stos
popa
inc
add
mov
lcall
xchg
rorl
ja
add
aaa
int
add
lcall
xchg
add
sbbb
test
rcrb
roll
add
mov
mov
mov
push
out
xchg
lods
adc
and
mov
aaa
pushf
stos
in
add
sub
xchg
add
rcrl
mov
inc
add
inc
fxch
add
inc
js,pt
cpuid
add
jge
pushf
add
push
sahf
jmp
mov
xor
iret
push
nop
in
add
fstps
test
add
add
adc
and
add
mov
arpl
jb
adc
pop
popa
sub
mov
jl
or
add
and
pop
ljmp
je
add
jmp
push
and
ds
or
ret
mov
sbb
mov
mov
jg
add
faddl
add
push
out
add
mov
stc
cmp
pop
add
mov
mov
and
adc
pop
cmpsl
loop
add
into
flds
inc
and
aas
mov
pop
push
add
fisubrl
movlps
mov
pop
pop
jecxz
adc
adc
xor
repz
jns
add
cld
pop
dec
jg
shll
sbb
push
push
add
add
stos
and
jo,pn
pop
icebp
outsb
mov
lock
pop
xor
fcomps
lods
dec
xchg
add
jge
sbb
rcr
inc
lods
add
push
and
mov
sub
clc
and
test
mov
mov
jnp,pn
push
add
add
add
movsl
or
push
lock
cltd
pop
push
inc
fadd
cmp
jl
push
call
jb
sbb
push
pop
and
jmp
xlat
adc
ja
stos
jp
pop
push
pop
sbb
out
jb
andb
in
push
xor
fidivs
aad
jg
enter
push
jge
hlt
stos
add
movsw
cmp
pop
xor
dec
adc
mov
and
lea
jl
add
cmp
in
mov
sbb
scas
inc
push
test
mov
pop
iret
jle
cmp
dec
sub
lock
xor
xor
add
and
les
cmp
rolb
dec
filds
sub
inc
xchg
int
xchg
in
cmp
push
inc
sbb
fwait
add
scas
or
jl
and
call
stos
mov
push
repnz
and
sbb
mov
lret
stos
faddl
out
xor
add
jmp
in
cmp
and
dec
push
lods
clc
pop
add
bound
and
ljmp
jmp
mov
push
das
mov
add
fdivrs
inc
or
xor
or
xchg
es
cli
das
mov
and
pop
jp
xor
out
push
repnz
sub
rorb
inc
loop
add
add
push
jbe
mov
and
mov
adc
stos
lret
sbb
or
sti
ds
pop
jmp
rcrb
jg
mov
das
outsb
push
and
mov
add
fbld
daa
cld
sbb
cmp
in
add
dec
xchg
in
and
or
jp
ret
cmp
add
ret
sbb
mov
inc
push
sbb
aam
pop
rcrb
cltd
mul
loop
sbb
test
loope
gs
add
pop
add
xchg
sbb
push
fildl
push
mov
jg
insb
cmpsb
inc
push
xor
lds
xor
sub
sbb
push
jmp
mov
sbb
aad
cmp
push
fmul
push
jae
je
jb
mov
in
pop
aas
dec
dec
add
mov
jns
scas
dec
cmp
cmp
das
ret
ljmp
inc
inc
push
mov
xor
cmp
sbb
push
jbe
add
mov
and
mov
push
mov
cmp
insb
dec
push
shr
xor
movsb
cwtl
or
xor
lds
in
inc
mov
out
sbb
cmp
sbb
sbb
jle
sbb
pop
movsb
sub
jmp
stos
mov
jge
es
and
add
add
icebp
push
add
add
loopne
mov
pop
push
sbb
inc
adc
adc
xor
inc
sub
sub
add
push
test
cmp
imul
mov
insb
mov
pop
add
mov
jne
cmp
mov
pop
sbb
sbb
add
negl
popl
fists
fildl
orl
test
jmp
ja
and
int
sbb
ljmp
or
adc
cmp
jle
roll
ret
mov
add
mov
adc
mov
sub
pusha
orb
or
dec
pop
test
push
clc
sbb
sbb
xchg
popa
dec
int3
inc
sbb
and
pop
jle
push
mov
mov
jns
add
sub
popa
pop
xor
jmp
jg
and
and
arpl
sbb
mov
dec
lds
cmp
shl
or
add
addr16
insl
pop
jge
fs
adc
xor
inc
dec
xchg
add
adcl
dec
mov
shlb
add
mov
add
dec
add
shll
lea
push
jo
or
push
shlb
test
and
inc
mov
add
push
repz
dec
pop
pop
add
int3
xchg
mov
out
sub
adc
jecxz
popa
dec
push
mov
iret
fldcw
push
and
adc
add
sbb
push
xor
and
adc
add
sbb
sub
add
mov
mov
sbbl
xchg
roll
pop
lock
sub
sub
pusha
aad
fiaddl
pop
test
ret
and
dec
fcompl
cld
pop
std
add
orb
mov
or
js
or
add
hlt
mov
jmp
jae
outsb
push
loopne
add
es
add
nop
xor
cmp
mov
add
xor
push
add
aas
mov
es
add
insb
stos
jg
dec
dec
sbb
and
out
dec
add
inc
ss
add
mov
push
or
sahf
mov
or
shlb
jmp
nop
inc
pop
add
push
pop
dec
adc
inc
cmp
ljmp
lret
ret
arpl
adcl
fisttpl
jno
cmp
movl
clc
fcomps
add
mov
and
mov
out
and
pop
sbb
cmp
or
movsl
adc
and
aaa
sbb
or
movsb
jecxz
js
aaa
lods
ja
icebp
out
ffree
sbbb
sub
popl
jnp
xor
push
adcb
pop
fimuls
or
fstp
dec
sub
mov
push
mov
push
sarb
jge
ds
aas
gs
bound
enter
in
sub
jb
sbb
adc
add
cs
rclb
stos
dec
ss
add
dec
loopne
mov
cs
aam
out
repz
enter
sbb
or
cmp
insb
ss
add
loop
mov
psubsb
inc
out
sub
add
loopne
rolb
les
add
pop
and
loopne
jb
add
in
and
dec
ret
fwait
cld
out
sub
push
negb
add
test
xchg
add
popa
xor
mov
shl
fwait
bswap
ret
out
push
push
add
mov
push
jb
sti
or
dec
jae
jo
or
shl
add
jmp
int
popa
test
jne
aas
inc
gs
xor
push
jmp
pop
lahf
scas
adc
loopne
sbb
mov
cmp
movsb
or
dec
shl
fisttps
jno
jbe
sbb
shrl
scas
cltd
add
out
jmp
dec
xor
cmp
pop
mov
in
or
push
pop
sarb
pop
aas
testl
push
mov
xchg
add
out
fstps
dec
or
xor
push
ss
fnstsw
sbb
sub
add
mov
aas
fwait
loopne
in
add
sti
mov
les
add
pop
xchg
pop
mov
cmp
inc
stos
fstpt
xchg
sub
sub
mov
ja
pop
aas
int
js
mov
loope
mov
loopne
lcall
lods
add
test
adc
add
fincstp
xor
push
into
fildll
sbb
jae
mov
add
adc
cmp
mov
icebp
add
cli
xor
sbb
add
rol
bound
pop
push
xchg
xchg
insb
fbld
xor
lret
adc
mov
out
dec
scas
jo
dec
pop
push
push
outsl
cmpsl
pop
xor
inc
jnp
inc
rorb
or
mov
cltd
xacquire
pop
mov
popf
xor
pop
add
cli
ss
jae
lock
movsl
jo
pop
gs
or
nop
add
mov
test
fdivs
xorl
outsl
jmp
lock
inc
and
or
repz
dec
jge
cmp
lea
jmp
add
dec
das
pushf
frstor
add
and
mov
andb
pop
add
pop
xchg
aam
cmp
sub
rorb
xchg
inc
loope
roll
sub
cltd
and
fisttps
push
add
xor
es
cmpsb
pusha
add
inc
into
push
ret
jmp
lea
icebp
cmp
cwtl
sbbb
mov
jmp
dec
or
idivl
jge
into
enter
out
inc
shll
fwait
lcall
xchg
jge
push
add
xchg
loop
inc
das
outsb
jmp
adc
add
popa
push
in
enter
pop
stos
leave
out
inc
mov
jne
roll
popf
cmpsl
fcomip
hlt
inc
mov
add
xchg
mov
add
push
ds
call
int
int3
cmc
sbb
mov
es
push
rolb
fs
rcrb
add
inc
jbe
cmp
add
jnp
mov
cwtl
in
mov
fstpl
add
addr16
xchg
sbb
mov
add
je
fisttps
les
add
inc
pop
push
jno
sbb
xor
mov
push
cmp
add
scas
sbb
mov
mov
nop
les
pop
dec
gs
or
and
dec
arpl
nop
mov
fdivr
jmp
add
shrb
repz
sbb
add
push
and
add
mov
aas
or
adc
jae
ja
rolb
lods
push
pop
jae
loope
mov
or
fisubs
jl
jge
pop
jle
add
fcmove
jmp
es
pusha
jns
push
pop
data16
aas
out
xchg
mov
loopne
add
or
add
jne
int3
fsubrl
mov
fld
inc
add
repnz
push
mov
mov
sub
andb
rorb
dec
jne
add
arpl
xor
je
pop
add
cmp
xor
adc
dec
push
faddl
pop
les
out
cmp
mov
or
pushf
shll
test
add
lods
notl
enter
mov
pushf
lods
xor
dec
arpl
cmp
sti
add
jg
push
dec
add
cwtl
pop
pushf
ret
stos
iret
test
mov
mov
adc
repz
jae
pop
hlt
in
mov
fldl
test
add
pop
call
adcl
out
lods
dec
add
lret
fcomps
mov
push
push
mov
pop
clc
xchg
dec
add
mov
jp
mov
add
in
aaa
add
add
cs
mov
data16
sahf
repnz
inc
cwtl
aas
testb
cmp
inc
dec
insl
addl
add
iret
cmp
test
or
cld
test
mov
add
push
lea
add
cmpsl
and
int
das
push
adc
sbb
scas
stc
add
pop
xor
or
or
pop
cwtl
push
pop
sar
add
push
and
pop
xchg
aaa
in
jl
fwait
xor
cld
es
fdivrp
jle
push
int3
or
ret
shrb
add
fadds
sbb
push
lock
leave
aad
imul
aas
in
nop
mov
ss
add
idiv
pop
pop
scas
fs
add
pop
ret
or
sbb
xchg
roll
add
mov
or
cmp
jl
fbstp
aam
pusha
cmpsb
lods
test
or
dec
or
add
push
add
das
ja
fisubl
add
repnz
std
push
lods
in
enter
dec
and
xchg
add
in
icebp
cmp
and
adc
pop
dec
adc
in
cmc
notl
inc
mov
pop
clc
popa
jge
sub
decb
sub
sahf
xchg
add
pop
pop
lret
mov
int
insl
imul
pop
pusha
fildll
jae
push
and
inc
inc
repnz
lods
dec
nop
inc
add
jle
dec
rcr
jge
jl
pop
pop
xchg
mov
dec
lea
loopne
cmc
and
das
fadd
and
adc
enter
or
pop
dec
ret
inc
sub
popf
add
decl
mov
imul
cwtl
jnp
fwait
dec
jns
add
push
jle
stos
mov
imul
sbb
fs
mov
lcall
mov
xchg
xchg
mov
sti
pop
stos
adc
mov
add
add
add
mov
dec
dec
jno
jae
outsl
add
gs
pop
iret
adc
xor
jo
mov
stos
cmp
dec
mov
les
sti
and
sub
rorb
jnp
popa
test
pop
insb
gs
sbb
pushf
push
loope
jg
ljmp
mov
pop
add
mov
add
inc
xor
enter
add
adc
andb
imul
outsl
enter
mov
push
push
dec
or
imulb
loopne
mov
pop
mov
scas
sub
out
mov
push
sbb
popa
mov
movsl
je
adc
andl
push
rorb
add
sbb
push
repnz
ret
jp
or
sub
outsl
in
jle
inc
imul
inc
mov
adc
xchg
lret
fs
add
sub
rcl
add
pop
stos
jge
data16
mov
out
or
xor
imul
add
test
cwtl
addr16
add
loop
jg
leave
cmp
add
push
dec
pop
shll
shlb
push
mov
inc
push
outsl
sbb
push
xchg
xor
pop
adc
int3
dec
push
insb
jecxz
add
ficoms
jg
add
sarb
adc
daa
inc
cmp
subb
xor
xchg
cmp
and
addr16
jmp
dec
lahf
rorl
sub
adc
add
and
jg
inc
and
loop
icebp
shrl
sbb
or
push
xchg
shlb
mov
rclb
cmp
push
loope
les
jbe
fsubs
sbb
mov
add
aas
nop
test
push
dec
icebp
xor
sbb
add
xchg
jb
sub
ret
fiadds
inc
movb
lcall
notb
loop
ja
push
lock
pusha
cmc
pop
mov
lods
jb
xchg
jo
push
add
into
cmp
sub
daa
xor
inc
sbb
cli
xchg
inc
xor
push
add
imul
sbb
cwtl
lret
rcrb
ret
mov
jmp
inc
out
lret
fld1
lock
jb
movsl
div
sub
inc
inc
je
mov
inc
in
movl
and
pop
mov
iret
sub
leave
xlat
and
jnp
and
das
mov
shl
divl
cmp
dec
popf
and
adc
imul
push
jno
add
pop
xchg
xor
scas
push
adc
in
mov
jbe
inc
int3
or
and
std
mov
mov
xchg
and
add
mov
fisttpll
loop
or
or
push
leave
pop
loop
add
hlt
cmc
xor
pop
lret
add
mov
push
sbb
sub
mov
jnp
movupd
out
and
adc
add
int
in
cld
ja
sub
or
pop
imul
add
pop
shr
pop
mov
add
dec
mov
les
lods
movb
add
dec
fldl
cmpsl
and
and
jle
icebp
pushf
adc
adc
and
push
push
sub
in
add
test
stos
push
outsl
insl
fs
rol
ja
loope
das
ss
mov
jae
add
or
xchg
push
pop
leave
xor
enter
sti
dec
ficoms
add
xchg
jne
aas
stos
add
sysret
sub
in
add
sub
imul
fsubs
into
cmc
rolb
clc
shr
add
js
push
hlt
lret
adc
lcall
mov
addb
add
test
xor
push
imul
fcmovb
mov
inc
pop
cmp
std
sbb
jb
jae
mov
inc
jnp
push
or
mov
add
dec
cmp
js
addb
jne
fnstcw
mov
xchg
dec
dec
icebp
or
in
push
add
nop
cmp
xor
mov
loopne
fwait
mov
xlat
add
mov
loopne
clc
out
add
xchg
jmp
std
orb
xlat
cmp
add
dec
loopne
inc
sub
add
outsb
cmp
aas
xchg
and
fcomps
add
sub
xor
and
addr16
outsb
adc
add
push
imul
inc
mov
adc
je
shlb
mov
xchg
sbb
sarb
push
dec
aaa
jp
add
jb
cmp
sbb
mov
out
aad
clc
mov
pop
pusha
sub
adc
and
lret
xor
add
movsl
testb
ljmp
gs
mov
sub
les
cld
cmp
test
insw
popf
dec
adc
xchg
add
and
jns
add
lods
mov
inc
inc
cmp
sti
inc
add
xor
mov
and
movsl
rclb
test
add
mov
or
loopne
add
insl
cmp
addb
mov
pusha
pop
sub
cli
jge
rcrl
sarb
data16
in
loopne
sub
sub
jno
in
fsubl
rol
inc
jp
fdivrp
push
in
cltd
sub
xor
sbb
and
ds
andl
jmp
inc
mov
and
subb
es
lret
clc
addr16
enter
test
stos
stc
add
pop
pop
jae
push
mov
ds
in
mov
std
adc
sbb
dec
mov
outsl
fidivrs
sbb
mov
mov
adc
cmp
test
ljmp
das
sbb
ret
lret
add
sbb
push
fiaddl
cli
sub
mov
jecxz
mov
cld
adc
jns
mov
fimuls
and
inc
add
mov
arpl
sub
int3
jno
subb
fiadds
dec
lock
push
inc
mov
lock
mov
pop
js
mov
outsb
inc
or
add
pop
mov
xchg
and
pop
shlw
mov
lret
or
add
and
sub
adc
in
fistl
add
sub
insb
add
dec
mov
or
cmp
pop
aaa
pop
mov
mov
push
mov
dec
lea
icebp
mov
in
les
push
popf
ss
xor
insb
add
pop
sbb
std
add
push
sbb
adc
sub
add
loope
in
mov
sahf
pop
push
add
xor
jns
push
mov
pusha
jmp
sub
or
and
and
dec
mov
jae
enter
xor
and
sub
test
mov
nop
into
dec
cli
add
insb
mov
cld
scas
xchg
mov
out
sub
push
enter
adc
ds
pop
enter
shll
fisttpll
add
push
inc
lea
jp
jg
jmp
imul
aas
cs
xor
xchg
imul
cmpsl
test
out
stos
cmp
pop
pop
addl
aad
dec
xchg
add
out
mov
pop
and
push
outsb
xor
mov
dec
adc
or
push
add
popa
imul
jmp
sbb
inc
mov
popf
jg
divb
mov
pmuludq
and
rcl
or
cmp
add
stos
add
test
shlb
cmp
mov
lcall
sbb
mov
dec
dec
test
adc
or
test
inc
add
ja
in
inc
movsb
add
xor
popa
punpcklbw
pushf
add
dec
mov
add
int
insb
add
pop
cld
maskmovq
negl
cmp
stc
movsb
add
inc
rorb
xor
mov
jmp
sbb
dec
or
popf
sbb
inc
je
jg
add
stos
inc
add
shll
inc
sbb
imul
add
pop
lret
mov
xchg
inc
and
mov
imul
push
pusha
sbb
jmp
add
mov
nop
mov
add
adc
shlb
add
pop
das
or
mov
xor
int3
inc
and
pop
inc
ror
push
or
mov
in
leave
fcomp
subps
daa
xor
add
ljmp
add
xor
cmp
xchg
lock
add
push
sbb
pop
call
fwait
cmp
xor
rorl
insl
xchg
dec
icebp
add
xchg
out
xchg
call
add
loop
add
mov
inc
sbb
and
ret
notb
adc
mov
clc
mov
sub
int3
shrb
int3
pop
in
pop
daa
add
cmpsl
aam
jns
push
cli
jmp
xor
push
rclb
filds
in
lcall
lret
adcb
les
add
fadds
mov
add
dec
mov
jle
push
inc
mov
lcall
cmp
icebp
xchg
sbb
jbe
mov
sbb
add
in
mov
icebp
mov
sbb
bound
cld
mov
pop
mov
out
mov
iret
xor
loop
ret
movsl
fisubs
cmc
add
mov
add
scas
mov
out
pop
js
add
cmp
bound
push
xor
push
aad
shlb
add
mov
sti
add
nop
stos
fadds
stc
es
xor
inc
lock
cltd
ret
aam
and
add
out
mov
jecxz
test
push
xchg
popf
arpl
addb
ja
and
cmp
stos
daa
mov
sbb
xor
adc
cs
cmp
int3
jg
cmp
xor
ljmp
subb
mov
sub
aad
andb
cmpsb
sahf
jo
mov
xchg
or
sti
or
into
mov
test
add
sti
cmpsl
fstps
cmp
push
in
mov
insl
ret
or
or
loop
add
lea
push
dec
mov
mov
clc
jmp
sub
imul
xchg
pushf
movsb
mov
cwtl
add
add
mov
out
das
clc
insb
add
and
mov
add
in
imul
or
and
popf
xchg
add
xor
shll
mov
adc
clc
pop
or
in
imull
pop
sbb
add
mov
sub
dec
test
inc
popa
cmp
jb
cmp
push
pop
pop
add
or
mov
mov
pusha
xchg
dec
aas
pop
iret
pop
add
sbb
pop
in
sub
add
mov
test
xchg
pusha
cmp
jns
jecxz
xchg
and
dec
mov
sbb
test
in
ficomps
sub
push
jl
pop
xor
and
lock
popa
jl
pusha
add
stos
sahf
test
mov
push
repz
sbbb
or
icebp
inc
sarl
shlb
adc
mov
pop
leave
or
repnz
cmpsl
lock
jb
scas
scas
mov
dec
in
inc
xor
adc
ret
jmp
xchg
scas
jle
sub
shlb
test
lods
pop
mov
das
or
mov
add
jbe
pushf
add
pop
xor
add
ljmp
clc
sti
jo
fidivrl
add
dec
add
orb
cltd
push
xchg
jns
int
and
pusha
fs
add
add
cmp
decb
icebp
sub
add
pop
rolb
hlt
fwait
cmp
mov
loopne
andl
jmp
cmpb
lock
mov
adc
lods
cld
pop
test
out
and
fisubrs
jb
faddl
test
mov
xchg
add
rcrl
sub
mov
xchg
aam
jnp
loopne
int3
je
mov
pop
js
out
add
add
mov
xor
int3
fistpll
sub
loopne
or
sub
cmp
movsl
sbb
test
ret
cmp
jnp
sti
add
mov
hlt
mov
add
insl
adc
cmp
add
sbb
add
inc
dec
imul
into
lcall
add
and
popa
pop
fs
adc
cmp
and
pop
pop
inc
insb
add
mov
je
mov
jl
add
pop
push
dec
mov
cmovg
pop
or
clc
add
xchg
mov
sbb
mov
mov
es
or
mov
seto
pop
sarb
scas
xchg
dec
mov
xchg
xchg
lds
mov
shll
add
mov
inc
add
hlt
pop
ljmp
jmp
nop
xor
inc
sub
into
mov
das
xor
mov
lock
outsl
rcr
mov
out
or
add
mov
mov
cmp
adc
scas
cltd
cli
xor
pop
mov
push
int
and
gs
push
add
or
subl
enter
lret
jo
xchg
cmp
inc
movups
push
adc
jno
add
in
mov
aam
cmp
imul
movl
fistps
loop
fcomps
out
sub
subb
jmp
stc
mov
mov
nop
jp
jns
loop
add
jb
mov
push
aas
mov
and
fmull
cltd
mov
xchg
cmp
cmp
pop
xchg
jns
mov
cmpl
lds
sbb
jae
push
mov
mov
rcrb
and
and
movsb
popf
leave
or
movl
addb
repnz
adc
jno
pop
int3
loopne
lock
sbb
and
add
inc
movsl
sbb
inc
lea
notb
das
mov
gs
mov
mov
cmc
adc
dec
add
jl
js
add
mul
push
add
lcall
call
sub
dec
adc
movsb
add
sbb
or
sarb
adc
pusha
push
lods
add
adc
cltd
out
jle
mov
mov
cmp
mov
cmp
sbb
test
mov
or
dec
xor
mov
scas
sub
xchg
loopne
or
xchg
call
cs
push
movsb
fisubrs
jl
fdivr
in
dec
ret
pop
es
sarl
add
sub
test
add
call
jge
add
inc
xor
pop
jno
imul
push
sub
xchg
call
adc
outsb
ds
inc
shlb
cltd
inc
add
inc
cmp
adc
add
add
xchg
pop
pop
push
fcomi
mov
rolb
pusha
or
insb
adc
popa
dec
cs
mov
andl
mov
xchg
cmp
movsb
add
or
sbb
pop
jnp
mov
sub
dec
dec
ja
push
sbb
outsb
sub
jmp
xor
lock
es
jle
add
in
outsl
rcr
movl
aad
mov
jnp
xchg
daa
mov
adcb
loopne
stos
lock
fstpl
fwait
shll
add
out
divb
lea
cmp
dec
xchg
lea
rcrl
sbb
mov
sub
mov
sub
aaa
xchg
jbe
and
je
jecxz
jle
xor
mov
pop
inc
push
dec
xchg
or
or
testb
mov
das
jg
mov
add
and
or
xor
into
mov
xor
xchg
popf
loopne
push
cmp
add
sbb
sahf
push
hlt
lret
stos
dec
mov
aam
mov
push
or
mov
loopne
and
push
jg
jo
lcall
pushf
cli
and
pusha
jge
inc
imul
movntq
scas
fidivs
sbb
pushf
filds
loop
mov
mov
xor
lret
mov
push
repnz
mov
pop
push
pop
loope
and
xor
gs
decl
xlat
add
cmp
mov
out
into
mov
setp
sti
mov
push
adc
sbb
dec
and
sbb
je
inc
inc
lsl
fs
imul
mov
pop
sub
xchg
aaa
add
inc
mov
std
popa
out
cld
js
lret
scas
clc
les
adc
filds
movsl
sbb
or
dec
pop
add
daa
add
loope
mov
icebp
jbe
add
lret
sub
push
js
sbb
xlat
mov
inc
add
lods
data16
xor
mov
push
pusha
or
in
xor
xor
pop
scas
mov
fs
pop
mov
or
sbb
pop
jnp
sbb
fisttpll
fimull
mov
adc
mov
pop
mov
xor
add
bound
loope
pop
mov
adc
push
sbb
push
cmpsb
sub
jl,pn
scas
add
in
sarb
dec
repz
cmp
cli
jp
pop
test
aas
mov
adc
mov
or
jo
xor
and
mov
js
mov
call
dec
loopne
mov
push
cmp
mov
cmp
xchg
xor
inc
push
loopne
jns
add
jo
nop
push
add
loopne
insb
add
and
inc
cmp
sub
imul
out
in
pop
add
add
push
add
aaa
ss
ljmp
insb
xchg
data16
fwait
push
arpl
rclb
inc
pop
mov
inc
popa
jbe
mov
or
dec
idiv
add
addb
mov
fdivl
hlt
addl
dec
daa
dec
loopne
cs
pop
rcrb
jg
lock
inc
add
push
mov
add
enter
or
and
add
stc
ret
pop
mov
mov
pop
or
pusha
int3
out
mov
lock
cmpsb
or
xor
add
or
or
sub
sbb
adc
add
inc
mov
jb
and
add
inc
mov
xor
dec
push
and
sub
subb
mov
mov
or
jmp
aam
cli
inc
push
cmp
sarl
or
push
loopne
mov
scas
pop
xchg
cli
sub
repnz
outsl
inc
mov
push
cmp
lahf
test
ds
adc
icebp
dec
and
mov
xchg
mov
rcl
add
dec
enter
out
jg
add
xchg
add
test
jns
aam
add
add
inc
enter
jmp
xchg
mov
and
mov
aam
je
test
mov
mov
fistpl
pop
sub
add
std
and
dec
push
xor
fdivr
cwtl
and
inc
mov
pop
sbb
pop
popf
mov
int
push
cmp
addl
les
shlb
dec
add
test
xchg
sbb
aam
inc
add
shr
sarl
adc
or
cmp
andb
xor
aam
in
add
lods
push
mov
push
sbb
lds
sub
mov
ljmp
mov
test
or
or
push
mov
xchg
popa
inc
out
and
mov
stos
dec
iret
shll
adc
lds
dec
outsb
testl
add
ljmp
test
xchg
mov
adc
add
cmp
clc
push
sub
mov
add
push
and
pop
fdivrs
add
gs
sub
pop
in
sti
pop
jl
jo
in
or
dec
sahf
adc
add
cmp
into
add
mov
push
jmp
mov
popf
sbb
shlb
cmc
stos
pop
call
es
mov
in
lds
rcrb
testl
adc
mov
mov
pusha
add
add
shll
jmp
mov
pop
xor
push
push
outsl
lock
test
add
ds
mov
mov
or
aas
sbb
pop
push
jle
add
xchg
ds
ljmp
int3
cmc
aam
adc
shlb
add
mov
mov
pop
push
cmp
mov
inc
test
out
jge
add
sub
adc
adc
arpl
adc
inc
roll
fimull
cmp
mov
add
push
lret
and
loopne
dec
imul
sbb
in
mov
sub
push
inc
pop
aas
cld
aaa
add
andl
lcall
es
inc
popf
dec
aad
faddl
roll
in
adc
pop
xchg
pop
lods
and
and
adc
sbb
sahf
cmpsl
pop
loopne
add
pcmpeqd
xor
mov
jle
push
add
push
jno
movl
and
dec
push
pop
adc
ffreep
in
jle
cmp
mov
jl
fcoml
les
pop
cmpsb
das
aam
cmpb
push
dec
add
loopne
out
add
sbb
dec
sarl
jnp
add
or
or
pop
add
xchg
lea
fldt
mov
add
outsl
aas
testl
ljmp
mov
icebp
aas
std
punpckhdq
ljmp
inc
xchg
mov
pop
sarl
lods
aam
add
insb
pop
cmpsl
sub
sbb
add
or
xor
ret
xchg
mov
add
jns
fldl
scas
xor
sahf
shlb
sub
xor
pop
into
mov
pop
or
test
inc
dec
sti
mov
xor
pop
pop
rolb
filds
rorl
jl
in
cmp
jo
adc
out
jnp
in
adc
cli
pop
aas
add
adc
push
in
sbb
and
xchg
xor
sbb
mov
movsl
fisubs
add
sarb
call
adc
ret
pop
das
xor
add
cmp
jge
lea
inc
in
mov
test
jbe
add
popa
adc
add
add
ljmp
adcb
xchg
pop
add
popf
add
insb
loope
aas
xor
dec
add
sub
mov
adc
out
xor
cmp
jbe
mov
imul
arpl
pop
push
cltd
gs
jg
mov
imul
add
sub
adc
andl
imulb
shll
jmp
sti
mov
lods
subb
add
xchg
das
add
test
dec
jne
pop
or
in
andl
sub
out
mov
add
icebp
fsubl
in
pusha
sub
divb
jbe
jo
pop
add
jle
ret
xchg
xchg
add
xor
pop
pop
xor
xchg
testb
loop
mov
add
imul
data16
mov
imul
lret
orl
xor
stos
xchg
jl
xlat
sub
into
cmp
lcall
popf
pop
pushl
ret
xchg
pop
push
xchg
pop
cmc
mov
into
mov
ret
not
and
xlat
fsubrl
and
cmp
inc
or
dec
inc
out
and
insl
add
jae
dec
call
dec
add
dec
mov
shll
mov
popl
jmp
xchg
push
das
add
les
xchg
lret
cwtl
out
cpuid
pop
and
jae
add
bound
mov
ljmp
sbb
je
mov
aad
sarb
pop
mov
jbe
xchg
or
and
mov
cmp
inc
lgs
jo
cmpsl
push
push
cmp
std
scas
xchg
xor
bound
mov
adc
xchg
std
pusha
xchg
loopne
jns
roll
es
push
push
mov
cmp
mov
movsb
add
jmp
xor
jb
or
lret
lods
add
push
int
ja
mov
adc
add
inc
lret
insl
jnp
aam
mov
push
dec
xchg
xchg
add
andb
sbb
pop
push
mov
add
or
add
sub
lret
add
icebp
mov
mov
mov
adc
scas
sub
cmp
insl
jno
sar
add
arpl
in
jmp
push
xchg
imul
cmp
sbb
cmp
xor
dec
aas
mov
mov
xchg
pop
mov
add
andl
imul
lcall
ficoms
loope
stc
and
pop
mov
inc
adc
add
xchg
test
pop
mov
adc
mov
dec
lahf
adc
filds
subb
popa
add
mov
xchg
and
add
movsl
xchg
push
sub
push
cs
movl
push
stos
or
sbb
pop
nop
subb
shlb
popa
es
roll
pop
lds
pop
shrl
push
add
pushf
aaa
sub
add
leave
xchg
mov
mov
adc
fsubrl
push
jl
mov
fists
outsl
fnstsw
pop
add
subb
add
mov
jle
int
add
dec
xchg
jmp
lods
sbb
aad
pop
add
sbb
sbb
mov
sbb
dec
ror
aaa
xorl
add
add
imul
icebp
fistpll
mov
cltd
or
sub
subb
xor
xor
das
gs
pop
lahf
add
andb
leave
outsb
mov
sbbl
subb
adcl
out
adcb
jg
in
add
cs
sbb
clc
mov
imul
pop
fwait
dec
inc
es
je
arpl
jge
loope
sub
movsl
imul
vpmulhw
hlt
sarb
loop
je
cld
enter
mov
imul
pop
jbe
icebp
shll
lods
xchg
out
add
data16
xor
sbb
fidivrl
ja
add
mov
jbe
test
lods
mov
xchg
dec
arpl
mov
push
out
stc
pop
test
and
add
add
add
dec
add
rcll
mov
pop
es
add
icebp
xorb
push
dec
mov
mov
cwtl
or
out
jle
andl
add
test
mov
inc
movl
jp
pop
dec
and
add
fisttpl
jb
loope
popf
and
fdivrs
repnz
pop
xchg
rcrb
sbb
jg
add
fadd
xor
repz
sub
stos
rcrl
cmp
fistl
das
add
in
in
ret
inc
dec
add
sbb
adc
push
stc
push
lock
mov
cmp
mov
pop
add
mov
lret
xchg
push
sub
cmpsb
jo
push
xor
pusha
add
adc
int3
jno
xchg
outsl
add
pusha
mov
add
mov
jo
add
pop
jmp
pop
std
das
inc
adc
ss
add
stos
adcl
inc
loop
sti
add
mov
rolb
ds
fwait
dec
out
inc
loope
add
arpl
add
aaa
test
cmp
or
and
push
popl
jle
add
idivb
sbb
adcb
lds
addr16
enter
mov
pop
cmp
pop
outsl
repz
push
lea
pusha
gs
int3
add
ja
movsb
push
mov
outsl
mov
lcall
shlb
fs
movsb
xchg
adc
fdivrl
push
scas
adc
lock
sbb
mov
arpl
mov
push
xor
pop
fldcw
add
add
movsl
pop
push
sbb
mov
add
dec
in
pop
insb
sbb
inc
cmp
or
push
sub
scas
outsb
lahf
scas
sbbb
mov
es
movb
ja
jne
cmp
jecxz
idivl
cwtl
mov
rolb
cmp
fs
ret
loop
mov
jmp
scas
fs
inc
jbe
add
sbbb
lahf
jno
es
inc
enter
movhps
ss
add
add
aaa
pop
pop
cwtl
addl
mov
ret
inc
push
pop
fldl
orl
and
push
xorb
ss
nop
and
addb
imul
in
aam
mov
xor
dec
adc
addr16
cmp
mov
add
fdivl
add
cld
movsl
inc
jmp
mov
inc
ret
xchg
outsb
mov
lds
inc
scas
push
xor
mov
dec
mov
pusha
fisubl
dec
pop
hlt
cwtl
adc
add
cmc
movsl
pop
jecxz
mov
jo
push
daa
loopne
add
in
add
push
add
loopne
out
addb
icebp
idivb
test
adc
pop
out
stc
add
mov
add
xchg
mov
pushw
and
dec
push
lods
pop
cmp
popa
xor
jecxz
fadd
adc
mov
orb
int
xchg
inc
pop
pop
or
add
xchg
jae
or
dec
xchg
add
adc
xchg
sbb
jl
sub
movsb
int3
push
dec
push
pop
stos
fwait
add
fcomps
mov
outsb
leavew
cmp
dec
popf
mov
mov
int3
das
push
cmp
pop
add
push
adc
sbbb
pop
pop
flds
cmp
adcl
push
pop
test
mov
repnz
sbb
into
fbstp
rolb
frstor
lods
cli
arpl
adc
adc
mov
mov
adc
shrb
jmp
les
insl
sub
ret
cmp
push
add
sub
adc
or
mov
lahf
insl
add
sbb
and
cltd
add
inc
aaa
dec
jge
add
xchg
add
insl
pusha
movsb
stc
or
imul
stos
cmp
xchg
mov
sbb
iret
test
mov
inc
mov
daa
add
jge
adc
stc
and
mov
inc
add
insl
fistpll
cmp
repnz
jno
jg
jns
mov
mov
fdivs
mov
inc
test
pop
lcall
cmp
gs
or
hlt
aam
xchg
mov
add
push
repnz
retw
pop
lcall
add
push
aad
or
xchg
inc
add
pop
xor
xchg
test
cmpsl
aam
dec
cmp
xchg
sar
sub
and
add
adc
jno
aam
xor
hlt
add
mov
jb
add
mov
mov
call
scas
push
cmp
sub
xor
fbld
jns
add
loopne
jp
dec
je
add
sub
andb
in
std
icebp
repnz
imul
lock
dec
and
push
xor
add
xchg
add
sbb
push
xchg
arpl
clc
jnp
bound
loope
lcall
add
inc
jb
cmp
movsb
enter
jle
cwtl
jo
push
stos
iret
xchg
add
dec
out
xchg
gs
inc
mov
push
xchg
ficoml
add
in
jmp
add
rorl
jge
and
sbb
jbe
mov
jne
cltd
fisttpll
pop
add
push
lret
or
das
add
add
test
lea
lods
add
and
in
sub
outsl
enter
mov
mov
and
xchg
lret
adc
je
push
push
dec
sbb
outsb
xchg
push
inc
cmp
mov
out
aas
add
das
lcall
cmp
divb
imul
adc
push
cwtl
pusha
add
lds
and
test
mov
cltd
sahf
xor
insb
outsl
test
enter
cld
out
add
cmp
ja
pop
xchg
or
push
in
and
add
jmp
scas
pop
out
add
push
pop
push
mov
testl
adc
ss
push
test
mov
data16
mov
lahf
imul
sub
filds
aas
les
lods
adc
inc
mov
jbe
cmp
add
das
sahf
adc
mov
test
mov
adc
xchg
cwtl
loopne
pusha
inc
push
add
and
cmpsl
lret
lods
int3
in
fs
cmp
sbb
shlb
test
inc
repnz
addb
add
mov
xchg
call
xor
add
fldcw
sub
xchg
xchg
jno
push
add
jp
dec
sbb
cwtl
insb
roll
push
xchg
pusha
popf
cmp
xor
cld
dec
test
pop
dec
pushl
mov
sub
pop
add
test
jne
loope
loop
cli
scas
inc
leave
or
jl
stos
clc
xorb
jmp
inc
lock
in
aam
leave
in
hlt
mov
push
push
dec
mov
adc
leave
gs
xchg
add
xchg
add
rcrl
pop
add
mov
xchg
ss
fldl
mov
and
add
in
jbe
inc
lret
mov
loop
shll
outsb
fcomp
ds
insl
inc
push
xlat
add
loopne
jns
cld
add
push
jl
sub
xor
and
push
mov
or
dec
cmp
xor
mov
cli
push
std
dec
loope
addl
jmp
mov
jns
aam
sahf
mov
int
jae
adc
dec
adc
loopne
xor
add
or
vmovhpd
mov
mov
inc
movl
call
sbb
add
faddp
pop
outsl
mov
cwtl
mov
aaa
je
fs
aam
shlb
roll
or
add
sub
xor
mov
add
test
and
xor
pusha
or
sub
adc
loopne
in
sub
stos
add
add
jle
inc
pop
add
xor
insb
add
adc
cmp
pop
mov
outsl
and
jbe
ja
daa
sub
cwtl
leave
rolb
or
and
xchg
add
std
fwait
iret
sbb
in
enter
popa
jge
jl
test
clc
mov
testl
xchg
roll
cmp
push
sub
cld
je
add
or
mov
lret
jmp
jb
add
fdivs
add
out
cli
addb
cmp
icebp
adc
movsb
add
imul
loope
pop
sub
mov
sbb
nop
aaa
shrb
adc
push
fcmovb
ljmp
cmpsl
fidivs
or
mov
lock
push
add
pusha
dec
mov
push
push
sahf
dec
cmp
out
clc
pop
pop
rolb
nop
mov
call
in
add
pop
jnp
roll
ljmp
or
add
add
fwait
lock
pop
outsb
in
enter
enter
xchg
stos
pop
inc
addl
cmp
pusha
sbb
pop
add
test
push
mov
dec
mov
xchg
jnp
add
clc
inc
and
cmp
jae
popa
jns
push
pop
out
jle
lret
shll
fadds
arpl
and
dec
cmpsl
aas
mov
add
das
cmc
jp
pusha
lret
add
and
test
push
clc
daa
sbb
add
dec
push
loopne
add
popf
push
push
and
mov
mov
std
aad
cwtl
sub
push
or
out
add
shll
js
fimuls
pop
loope
cmp
add
mov
stos
aad
jmp
setle
pusha
addr16
lock
add
xor
add
lods
icebp
mov
mov
lods
cmp
sub
mov
add
mov
std
xchg
nop
cld
clc
frstor
jle
cli
rorb
adc
test
inc
call
pop
add
jmp
and
push
xlat
fiaddl
mov
nop
cltd
lods
cmp
fldl
bound
pop
mov
pop
movsl
mov
sti
inc
fdivs
and
mov
hlt
add
jne,pn
jp
add
movzbl
ret
add
pop
add
mov
or
lcall
inc
inc
cwtl
popa
lcall
pop
jl
cmp
add
and
or
mov
push
and
inc
jmp
ds
cmc
add
fwait
add
lods
jge
add
jne
incb
gs
lea
jb
nop
push
jg
add
cltd
loop
add
test
jns
adc
test
ja
sti
test
add
sarl
jnp
jno
orb
sub
cmp
pop
jb
inc
inc
insb
andb
xor
or
movl
push
pop
pop
cmp
add
loop
std
jo
jnp
cmp
xorb
popa
aam
dec
lret
ret
test
inc
enter
add
adc
pop
jne
jp
add
pusha
clc
movsl
cmp
mov
ja
stos
push
dec
sbb
ja
and
cld
inc
icebp
loope
add
cltd
and
pusha
sbb
fdivs
dec
push
cmp
add
cli
pop
add
push
adc
mov
mov
add
out
jns
sbb
lret
pushf
push
and
mov
jne
leave
filds
add
lcall
or
push
shlb
add
pop
inc
test
sarb
stos
rorb
dec
aaa
inc
ja
inc
sub
repnz
add
xlat
js
add
popa
sbb
gs
dec
mov
mov
xor
add
cli
rolb
ds
mov
add
dec
nop
shl
cmp
jae
push
sub
movl
cmpb
pop
test
push
add
cld
mov
test
sub
mov
in
das
adc
outsl
jb
in
dec
sub
pop
mov
pushf
xchg
cmp
repnz
dec
cmp
lds
add
sbb
jne
cmp
cltd
pop
ret
mov
mov
out
cmp
xor
loop
aas
lahf
bound
enter
and
pop
les
and
test
repnz
push
in
jmp
push
outsl
push
sbb
or
ret
pushl
mov
clc
fidivrl
or
andb
sub
xlat
push
mov
cmp
mov
ret
repz
je
sti
std
aam
fdivrp
xor
cmp
fnstsw
outsl
mov
ss
sub
add
mov
in
fildll
pop
lsl
fimuls
in
add
cmp
or
jae
inc
push
mov
jno
ds
jl
out
add
sbb
out
add
jbe
dec
mov
mov
sti
dec
in
add
hlt
jl,pt
add
or
roll
out
push
notb
sub
andl
shr
push
and
into
lods
nop
mov
jle
cmp
inc
push
jbe
add
or
jo
adc
cld
sbb
lahf
mov
sub
in
dec
js
lock
pop
sahf
add
pop
cwtl
xchg
xchg
add
faddl
and
mov
test
fldcw
mov
adc
and
fimuls
push
mov
in
add
or
mov
fidivrl
fs
fstpl
call
sahf
mov
jmp
pop
aas
push
pusha
clc
bound
in
ss
xchg
nop
icebp
into
xchg
sti
add
push
fsubl
mov
pusha
pop
sbb
or
inc
sti
clc
in
add
inc
sub
mov
cs
pop
les
sbb
jno
inc
cmp
cltd
dec
sub
enter
scas
aaa
add
dec
pop
cmp
sbb
jl
pop
ljmp
in
or
out
sub
mov
add
cmp
ror
pusha
mov
inc
add
inc
pop
outsl
xor
std
adc
and
add
adc
shlb
pop
jbe
repz
add
stc
aaa
hlt
enter
pop
pop
pop
xor
pop
pusha
loop
into
pop
nop
sbb
fsts
repnz
push
lahf
std
out
adc
add
scas
in
dec
fs
or
and
xor
add
sub
mov
cs
and
cmp
imul
and
lret
test
sbb
push
jl
lret
out
jmp
dec
insb
push
shl
hlt
cmpsb
lcall
pop
nop
mov
add
and
scas
pop
cmpsb
jnp
add
cmp
xchg
mov
cmc
dec
sub
clc
filds
ret
movsl
mov
and
dec
xchg
push
and
out
cmp
cmp
jmp
mov
rcpps
movsl
push
mov
filds
out
mov
loope
outsb
xlat
cmp
lods
add
jmp
and
clc
sub
roll
rolb
jno
daa
pusha
aam
xchg
add
mov
jl
or
sub
es
add
sahf
xchg
test
inc
add
ljmp
mov
xchg
add
inc
cmc
loopne
dec
xchg
hlt
and
pop
pusha
cmp
fnstenv
jl
in
mov
sub
or
add
bound
add
mov
add
sub
jns
dec
xor
inc
pop
push
xchg
xchg
and
or
mov
out
sar
jo
imulb
add
loope
insl
jbe
dec
cmp
pop
push
inc
mov
jmp
pushf
out
enter
xchg
push
jp
push
add
mov
pusha
aad
lods
mov
inc
push
pusha
fmuls
xorb
sti
cmp
popl
push
cmp
scas
andb
fsts
fisubrs
sahf
popf
pushf
pop
ds
and
xor
cld
mov
iret
pop
sbb
stos
movsl
cmp
dec
xor
lock
leave
jmp
add
or
insb
push
sbb
add
cmp
pop
arpl
xor
mov
cs
fldenv
into
cld
adc
jg
adc
add
mov
push
ljmp
xorb
cld
scas
fst
add
inc
pop
dec
cli
and
xlat
lret
out
cmpsl
inc
bound
lds
push
push
push
mov
pop
lods
pushf
shl
repz
add
mov
sbb
test
push
jb
filds
stos
mov
sbbb
dec
ret
dec
mov
xor
push
sbb
outsl
pop
call
cmp
xor
xlat
pushf
pop
xchg
sbbb
stos
and
repnz
mov
and
fwait
pop
pop
xchg
push
fstl
push
loopne
ja
orl
mov
test
push
mov
dec
add
xchg
xchg
outsb
in
pop
xor
into
movsl
loopne
cwtl
and
popf
and
cmp
out
add
dec
into
ljmp
mov
scas
xchg
jns
inc
or
arpl
add
scas
das
jg
int3
add
stos
push
or
xchg
stos
add
pop
aaa
fsubs
sahf
push
js
xchg
in
add
bound
subl
mov
pop
add
cmp
ret
lock
sub
add
add
sub
mov
jecxz
sbb
adc
popa
andb
sbb
fs
sbb
std
ss
insb
sbb
dec
cs
repz
dec
stos
dec
add
push
sbb
mov
arpl
dec
jns
add
xchg
ljmp
mov
push
add
jp
mov
mov
hlt
push
xor
clc
xor
push
sbb
bound
push
sbb
dec
inc
or
push
enter
add
cld
mov
push
push
lret
xor
xor
testb
push
inc
movsb
loopne
ds
dec
fiadds
dec
mov
or
cli
adcb
xchg
or
mov
sub
mov
sub
sarb
jae
lds
in
add
int
pop
mov
or
adc
add
int3
sbb
mov
dec
push
add
andb
xchg
or
sub
pop
sub
xchg
and
rcll
add
sub
clc
pop
or
mov
cmp
add
ret
aad
decb
in
jl
mov
cmp
xchg
add
in
testb
cmc
arpl
pop
lret
adc
js
add
or
push
std
neg
and
scas
xchg
vpperm
test
andb
cld
mov
shl
std
lcall
pop
sub
lret
or
sub
mov
pop
push
mov
pop
ljmp
dec
pop
jecxz
adc
add
dec
jne
clc
add
jge
xor
ja
pop
sbbb
and
sub
into
and
imul
pop
dec
inc
outsl
stc
cmp
inc
add
sahf
ljmp
cs
pop
xlat
ret
out
push
push
add
inc
mov
or
pop
scas
push
push
jo
enter
test
inc
adc
pop
fnsave
and
add
loope
jmp
cli
arpl
adc
lcall
aam
test
fnstenv
shlb
popa
xchg
test
add
push
cmp
pop
mov
loopne
test
mov
mov
jge
pop
sbb
sti
adc
xor
sub
push
fildll
int
addr16
lea
mov
test
fbld
add
lahf
popf
add
adc
lea
pop
clc
sbb
out
add
mov
xchg
in
xchg
add
pop
std
pushf
fdivp
push
sub
mov
and
inc
inc
aaa
test
ja
push
fcoml
dec
and
and
adc
sbb
outsl
push
cmp
mov
repnz
or
nop
out
add
adcb
repnz
inc
inc
pop
add
outsl
mov
pusha
loop
popf
clc
mov
rorb
add
dec
loopne
in
dec
jnp
out
lds
inc
xor
cmp
xchg
mov
inc
sub
push
insb
adc
dec
add
mov
adc
jge
jae
mov
fisttpl
les
mov
mov
fldcw
dec
mov
pusha
sbb
popa
add
movsb
push
les
push
sbb
out
cmp
jne
fisubs
push
jecxz
pop
lods
add
lods
xchg
cmp
shl
xchg
pop
ss
out
nop
sbb
mov
insb
mov
mov
iret
xor
fs
pop
mov
add
push
add
jecxz
scas
add
mov
into
scas
adc
add
stc
xchg
movsl
gs
pusha
cmpsl
push
je
outsb
xor
and
cmovp
imulb
pop
or
push
loopne
add
es
jne
add
popa
mov
fisttpl
ljmp
dec
lock
sub
les
add
stos
xchg
pushf
add
or
shr
and
cmp
stos
call
sahf
add
jl
iret
add
rolb
cltd
cwtl
out
flds
xor
push
andl
ds
add
insl
add
or
sbb
rcr
inc
insb
inc
add
test
dec
mov
ljmp
or
imul
push
jnp
or
mov
mov
jb
mov
push
pop
mov
pop
enter
lock
sub
repz
mov
lret
stos
adc
test
cmc
mov
mov
lds
jmp
adc
mov
notl
push
dec
leave
or
enter
pop
fnsave
clc
mov
loopne
add
adc
aam
xor
add
pop
sbb
clc
inc
leave
sbb
push
enter
jge
or
push
add
push
lods
jecxz
out
clc
call
clc
add
es
jle
jge
push
pop
addr16
out
or
add
push
out
sbb
add
jmp
jecxz
xchg
push
jle
add
lds
add
subl
pop
add
outsl
fistps
inc
pop
stos
fdivrs
and
sbb
leave
dec
xchg
jne
adc
pop
call
xor
lret
sub
xor
lret
or
add
mov
lods
add
and
fisubrs
push
inc
pop
add
into
cmpsb
or
pop
jg
push
loop
push
jne
mov
mov
out
add
adc
jns
jo
inc
sub
add
push
or
sti
test
dec
mov
imul
imul
out
rclb
inc
testb
call
aad
cwtl
push
pop
mov
mov
mov
lret
xchg
mov
pop
fistpl
add
loopne
fadd
shl
push
sarl
inc
scas
sbb
inc
and
cmc
sub
test
lods
and
jg
add
xchg
shlb
push
add
and
xor
dec
fwait
push
icebp
jo
add
mov
ljmp
stos
mov
lds
andl
imul
cld
and
adc
push
mov
adc
sbb
add
mov
xor
ret
inc
sbb
add
popf
dec
imul
add
pusha
mov
jg
das
mov
xchg
jl
mov
mov
mov
cmp
jg
cwtl
inc
add
fisubl
pop
xor
add
lock
gs
jle
or
subb
inc
andl
add
lds
add
and
xor
add
add
or
div
add
jecxz
rolb
or
pop
jns
xor
dec
xor
les
adc
stos
dec
stc
inc
es
xchg
cwtl
add
jne
fidivl
out
mov
aaa
add
and
sub
mov
cmpsl
pusha
arpl
in
dec
or
sub
pusha
mov
add
inc
push
jp
sbb
inc
enter
in
imul
xchg
sarl
dec
hlt
push
xchg
mov
lds
or
fisubl
add
cmp
fs
clc
fcomip
leave
jns
cmp
std
or
rorl
jnp
cmpsb
sub
jmp
mov
add
sti
xchg
xor
iret
add
pop
sub
loopne
mov
es
dec
scas
mov
add
dec
fsubr
xchg
mov
jae
cmp
cmp
mov
cmp
push
repnz
xor
xor
popa
cmp
jmp
cmc
xchg
pop
loope
push
pushf
or
into
icebp
inc
add
sti
pop
sbb
rolb
js
or
xlat
sbb
pop
pop
addb
add
and
inc
dec
insb
dec
push
dec
in
hlt
fmuls
rcrl
adc
jo
xchg
test
dec
add
add
sarl
jbe
out
inc
fnsave
mov
stos
xchg
cmpsl
add
sub
jmp
mov
leave
push
dec
mov
cmp
arpl
int
out
hlt
aam
fwait
add
dec
lods
mov
mov
jno
fucom
mov
mov
fs
inc
xor
xchg
lret
test
mov
xchg
jle
add
push
loope
mov
paddsw
daa
sbb
pop
or
add
jmp
jne
or
clc
gs
bound
insl
out
cwtl
rorb
not
aaa
rcrb
pop
popf
shll
repnz
pcmpeqw
xlat
mov
lret
add
inc
pop
ret
addps
cmp
push
dec
pop
jle
bound
fmuls
adc
imul
add
cmp
and
push
test
test
enter
popf
lds
iret
fstpl
xor
int3
inc
jb
test
jae
es
mov
ret
mov
push
add
push
cmc
ljmp
adc
xor
mov
sarl
out
add
mov
inc
mov
sbb
mov
cld
dec
add
adc
popa
inc
sbb
sbbb
cmpsb
push
pusha
je
add
jne
fiadds
mov
cmp
pop
subb
pusha
movsl
dec
jno
outsb
pop
xchg
cmpsb
push
insb
inc
test
lds
into
jg
sbbb
hlt
mov
imul
cmp
scas
fsubrs
pop
ror
jae
sbb
add
dec
adc
pop
and
jno
jg
cmp
rolb
inc
cmpsb
and
jmp
repnz
xor
add
adc
scas
jp
pop
movb
push
test
mov
popl
mov
movsb
or
in
sbb
fs
inc
inc
in
push
and
xchg
ja
add
lahf
out
cmp
cli
btr
add
dec
push
push
lds
xor
add
push
jo
inc
adc
movb
repnz
mov
sub
faddl
cmp
mov
push
jge
or
inc
add
loopne
xchg
add
daa
push
in
sub
aad
in
das
mov
cmpsl
repnz
push
jmp
push
mov
xor
add
mov
sbb
cmp
jge
push
xor
or
shlb
f2xm1
add
rcrl
adc
push
movb
arpl
add
cmp
add
push
mov
push
mov
scas
jns
andl
xchg
add
es
add
fistl
add
cmp
inc
jmp
popa
std
xchg
jb
pusha
inc
and
add
pop
jae
jecxz
inc
in
add
xor
push
pop
mov
loopne
mov
addl
and
daa
xchg
cmc
mov
ficomps
push
xor
add
sti
lea
andl
dec
pop
sub
jle
mov
testl
or
or
inc
and
jno
das
in
jb
insl
fisubs
jbe
aam
jp
pop
push
popa
int
fcoml
pop
and
xor
and
pop
inc
bound
mov
mov
fmull
mov
data16
add
in
add
test
jmp
add
data16
pop
lods
sbb
and
xor
jnp
andb
cmp
rcll
inc
cmp
cltd
jl
and
mov
mov
add
adc
movsl
enter
pop
push
pop
cmp
jo
rol
inc
add
dec
push
dec
leave
xor
cmc
add
xchg
test
fmul
jge
sbb
add
mov
pop
cs
xor
and
enter
stos
add
add
dec
add
sbb
imul
fiaddl
and
add
call
das
mov
cs
sbb
loopne
js
add
mov
add
lcall
add
call
in
in
push
xor
dec
cmc
dec
mov
cmp
orb
add
add
and
mov
mov
and
pop
sbb
add
xchg
adc
xor
sbbl
mov
mov
ret
aaa
shll
dec
pop
insl
inc
add
lock
pop
pusha
dec
lret
cmpsl
jp
mov
inc
push
imul
dec
pop
push
out
test
adc
mov
lock
cltd
push
mov
push
push
out
dec
mov
or
xchg
mov
xor
lahf
stos
mov
leave
sbb
push
push
rol
sub
or
jle
add
in
mov
or
mov
ret
lods
stos
mov
call
xchg
mov
shrb
popa
addb
in
imul
and
jae
icebp
jns
popa
jb
mov
ja
je
stos
enter
lret
and
sahf
inc
mov
cli
cmp
add
inc
add
inc
mov
and
hlt
nop
test
mov
dec
or
orb
loope
mov
roll
popf
xchg
jne
xchg
out
cmp
popa
sub
add
and
shlb
aas
add
fldl
jnp
hlt
ret
fxtract
sti
clc
addr16
or
push
add
jae
xchg
pop
add
sbb
and
jle
pop
bound
pop
add
sbb
pop
cmp
imul
pop
icebp
mov
push
jp
jbe
sbb
adc
out
mov
and
inc
inc
sub
jg
inc
ja
mov
dec
cmp
add
movsl
lods
out
mov
incb
xor
icebp
pop
in
push
ja
js
lret
jmp
cld
movsb
or
sbb
inc
mov
enter
jno
xor
adc
imul
dec
aad
std
cmp
test
mov
sub
das
adc
inc
xchg
add
xor
cmp
adcl
or
popa
adc
adc
jb
xor
or
lret
inc
dec
insb
cmpsb
and
sarb
or
add
in
arpl
stc
paddw
rol
clc
lods
ret
add
test
pop
adc
mov
pushf
and
fdivr
pop
pop
jno
adcl
mov
stc
cmp
and
loopne
pop
mov
mov
add
fldl
add
inc
mov
or
rolb
push
out
pop
aam
or
xchg
out
xchg
mov
cli
loope
sarb
pop
mov
inc
sbb
inc
in
push
add
rclb
push
cmp
sub
mov
mov
hlt
xor
int
push
in
add
xchg
mov
or
xchg
leave
add
jmp
push
xchg
mov
mov
xchg
mov
and
subb
jne
add
jbe
add
inc
js
ds
int
xorl
mov
dec
rorb
jmp
lods
add
and
xchg
dec
popf
insl
inc
xchg
pushl
or
fisubrs
movsl
add
xor
lea
adc
sub
mov
add
lock
shrl
fs
push
add
cmpsb
jg
enterw
pop
orl
fcompl
pop
jns
pushf
or
test
fdivrs
sbb
orb
sub
aaa
in
aas
stos
repnz
int3
mov
les
hlt
and
or
stc
dec
xchg
add
outsl
push
lea
scas
ret
in
mov
loopne
enter
pop
sbb
fstpl
add
or
das
lahf
add
loop
into
jge
inc
test
lret
mov
sti
mov
call
sub
int3
xchg
inc
pop
lock
add
cmpsl
inc
sbb
add
lock
inc
ret
mov
mov
sub
add
inc
repz
cmc
pop
mov
adc
xchg
or
lock
cmp
sub
addb
aad
dec
int
icebp
push
sar
dec
add
cmc
or
mov
lea
xchg
cltd
pop
dec
ja
sbb
popl
rorb
pop
out
mov
daa
jb,pt
test
shl
sbbl
dec
xor
add
aas
xor
mov
jmp
fwait
cmpsb
xchg
mov
add
mov
pop
and
mov
add
shlb
lea
leave
sbbl
jo
nopl
cmp
addr16
add
imul
add
scas
inc
pop
pop
sarl
add
xchg
int
xor
mov
push
in
xchg
lock
aas
outsb
mov
pop
mov
pop
sbb
add
push
ret
cmp
add
not
mov
addr16
mov
movsb
mov
sub
push
sub
inc
rorb
inc
stc
dec
jnp
cmp
les
jo
dec
loopne
jne
cld
xchg
adc
clc
test
lret
jno
mov
sub
aas
or
cmpb
add
cld
jbe
mov
int
add
mov
and
int3
fcmovb
xchg
mov
popa
mov
stc
xlat
jne
pusha
sbb
testb
or
rorl
sbb
sbb
jb
js
aad
add
sbb
add
jmp
jno
add
aas
mov
add
and
hlt
add
mov
pop
dec
movsl
subb
mov
pop
inc
add
dec
in
adc
and
push
ss
imulb
add
cmpsl
sbb
inc
call
mov
push
xorl
push
scas
dec
mov
icebp
fwait
dec
rcr
pusha
cs
mov
jno
dec
xchg
xlat
loopne
sub
xor
fdivrs
add
aad
or
lret
int3
xlat
fstl
add
xchg
push
adcl
sti
sub
mov
aas
xor
leave
std
pop
xchg
imul
ffreep
push
xor
add
jl,pn
int3
add
dec
xchg
mov
int3
dec
mov
push
pop
cwtl
xor
lods
add
cmp
outsb
adc
sub
int
pushf
and
das
inc
pop
icebp
bound
xor
loope
and
lods
xorl
std
add
add
push
xchg
adc
cld
pop
mov
in
andb
sub
aas
pop
decl
mov
pop
add
in
xchg
fsubrs
mov
aas
mov
pop
cwtl
lds
jae
fdivr
jecxz
add
testl
in
sub
jp
fisttpll
sbb
pop
push
mov
sbb
inc
add
ds
shlb
jne
add
xchg
xlat
popf
fnstsw
lea
hlt
mov
jp
mov
out
stc
dec
jnp
add
pop
xor
sahf
push
add
inc
jl
ficomps
mov
pop
add
pop
mov
daa
cmp
add
rcrb
dec
xchg
fs
sarb
sbb
dec
xchg
pop
es
rcr
push
insb
and
or
in
divb
jl
add
insl
cld
xchg
pop
jb
add
cmp
movsl
xor
mov
jb
add
fwait
out
sbb
outsl
add
in
pop
push
adc
rolb
sti
pop
xchg
je
mov
lds
call
xor
sahf
mov
or
fs
fdivrl
mov
aam
push
lock
fsubrl
aam
pop
stc
sarb
adc
mov
push
xchg
pop
pop
cld
lods
nop
jo
dec
add
or
add
xchg
and
push
xchg
insl
out
mov
add
xchg
push
push
xchg
rcr
add
sub
out
mov
and
fstpl
add
and
and
add
test
add
fisttpll
int
fildl
test
or
aaa
loop
sbb
jg
ss
test
push
movl
sub
add
mov
adc
mov
aad
jb
and
je
add
mov
vpshufhw
cmpsl
lahf
xchg
jbe
das
ret
shll
add
in
loopne
add
clc
push
jl
sbb
jns
andb
pop
add
pop
mov
pop
add
cmp
test
cmp
sti
jge
pusha
sbb
and
xlat
call
imul
add
xchg
sub
das
movl
cmp
inc
repz
je
or
dec
sub
pop
cwtl
in
dec
mov
outsb
xchg
test
cld
or
jge
add
enter
orb
rolb
pop
mov
fs
jno
mov
and
dec
inc
pop
fs
add
mov
loope
jb
repnz
and
sbb
xor
andb
fisubrs
cmp
mov
outsb
imul
xorb
cmp
push
push
mov
pushf
mov
lods
pusha
pop
fwait
sub
xor
xchg
mov
dec
jp
jge
jg
out
movsl
loopne
inc
add
fs
scas
movsb
jecxz
push
frstor
adc
fcoms
xlat
fldt
cmp
cmpsl
adc
insb
in
loopne
mov
vmread
repz
in
add
push
loope
inc
mov
add
negl
add
jns
sbb
out
cmp
lahf
test
inc
fwait
push
mov
cmp
std
add
dec
fs
movsb
mov
rcll
xchg
bound
jmp
or
xchg
fwait
sub
mov
jo
je
mov
adc
xchg
mov
arpl
mov
icebp
pop
push
cld
mov
inc
inc
sub
push
xchg
mov
add
imul
mull
faddl
int
jmp
xchg
mov
daa
in
pop
sarl
ja
add
jl
fmull
mov
xlat
fidivrs
aad
sti
add
aam
mov
xchg
mov
lret
adc
es
pushf
sub
ljmp
dec
mov
test
and
pusha
add
test
add
jns
filds
xorl
and
sbb
jo
insb
sub
rol
inc
mov
add
xchg
out
dec
gs
mov
pop
test
or
push
adc
mov
inc
add
push
leave
ret
mov
scas
js
pusha
out
mov
add
ja
push
or
mov
lock
cmpsb
add
push
insb
cmp
test
test
pusha
xchg
pop
pop
sbb
shl
adc
stos
cmp
xor
test
xchg
xchg
loope
lahf
inc
mov
or
dec
pop
nop
fldcw
insl
cltd
add
and
cmp
mov
aam
add
je
cld
test
xor
xor
inc
clc
sarl
movsb
mov
stos
mov
cli
xchg
pop
mov
jo
lea
push
mov
add
dec
in
add
mov
sahf
fsubr
pusha
mov
jns
add
add
nop
dec
cmp
fcompl
mov
adc
js
int3
pop
add
pop
sub
dec
add
xor
jnp
ss
sbb
mov
dec
jo
call
test
andb
shlb
add
in
jg
out
sub
add
orl
xchg
fdivl
icebp
call
nop
outsl
add
lcall
lahf
or
mov
adc
mov
sbb
add
into
xor
inc
cmp
rol
test
inc
mov
inc
mov
andl
aas
push
sub
leave
out
sbbb
out
in
mov
js
test
pop
outsb
add
xchg
xlat
gs
mov
pop
cmp
dec
dec
pop
mov
lcall
les
ljmp
call
cs
in
mov
and
sbb
test
cltd
xor
cmpsl
insl
dec
push
xchg
add
sub
push
pushf
mov
adc
xchg
or
jp
add
nop
stos
add
inc
or
or
fdivl
jno
hlt
enter
jmp
xor
nop
pusha
jb
fstl
mov
jb
push
add
dec
in
mov
shlb
mov
outsb
flds
cmpsb
movsb
arpl
lahf
aad
mov
shlb
in
xchg
mull
sub
cmp
sbb
repz
push
push
test
mov
mov
cmp
sub
pop
fcmovnb
mov
sbb
and
adc
push
or
pop
add
sub
mov
pop
loope
ret
negl
and
mov
and
ret
stos
pusha
mov
pop
push
xchg
int3
sub
fdivs
jns
cmp
js
add
pusha
add
rolb
add
xchg
int
mov
jmp
sbb
clc
push
pop
jbe
lahf
inc
je
lds
dec
add
call
hlt
add
dec
push
mov
in
sarb
pop
push
push
push
mov
add
or
frstor
fucomip
or
test
inc
mov
add
sbb
les
dec
cmp
ret
loope
roll
jb
sub
clc
mov
movsb
inc
or
sub
push
mov
sbbl
mov
aam
sub
adc
push
rolb
lea
xor
push
and
dec
dec
jo
cmp
mov
add
cmp
xorb
hlt
xor
ret
hlt
aaa
lock
dec
jge
or
jge
add
out
dec
subl
ret
clc
sbb
lahf
sub
mov
cmpsl
adc
mov
mov
sub
mov
mov
push
loopne
mov
add
push
scas
sbb
add
xchg
stos
mov
call
loop
dec
ljmp
lahf
push
movsl
push
mov
mov
mov
rol
paddq
fs
popf
loopne
adc
mov
jo,pn
or
mov
cmpsl
std
jp
mov
popf
or
or
xor
mov
flds
shll
sahf
cltd
mov
sbb
mov
sahf
xchg
lods
outsl
sbb
jne
mov
js
testl
ret
cmp
pop
jmp
lock
sbb
cli
add
inc
mov
aad
and
xchg
fwait
in
or
enter
pop
rcrl
dec
sbb
imul
inc
push
rcrl
in
lock
pop
pop
inc
add
dec
xchg
xchg
aad
mov
mov
lods
cmp
jl
test
sub
and
sbb
xchg
adc
jbe
add
push
xchg
and
mov
add
xchg
push
cmp
push
add
xor
dec
add
cmc
rcrb
xor
gs
out
cmp
add
xchg
xchg
lea
xor
cmpsl
mov
inc
or
inc
dec
rcl
or
outsl
das
sbb
fnstenv
add
cwtl
add
adc
out
dec
dec
sub
sti
add
sub
inc
push
add
lret
jb
or
inc
adc
aas
jecxz
mov
add
add
out
je
xor
add
jnp
scas
aad
out
mov
dec
add
cmp
xchg
pop
popf
insb
jecxz
xor
cmc
lds
shl
mov
add
push
test
sbb
out
enter
insl
leave
push
or
add
js
pop
xchg
loopne
rol
pushf
cli
sbb
add
shrl
push
jge
popf
ror
shl
rclb
adc
fwait
testl
mov
ret
popa
jle
add
fcomp
fiaddl
popf
js
xchg
or
mov
sahf
fs
imul
sbbb
cwtl
add
mov
mov
add
jne
xor
push
xor
mov
add
pop
ss
mov
mov
and
pop
pushf
sti
or
adc
add
inc
movsb
sbb
pop
clc
icebp
mov
fadd
pop
xor
je
ljmp
add
imul
add
add
lods
fwait
push
lock
loop
sub
mov
or
pop
repz
push
add
les
mov
xor
fwait
sbb
das
push
mov
je
sbb
add
lea
test
add
cmpsl
mov
pop
or
in
mov
jae
pusha
test
mov
out
pop
mov
clc
push
cmp
js
test
iret
in
subb
out
add
add
pop
orb
mov
call
and
fdivrs
sbb
inc
loopne
loopne
xchg
bound
aas
jae
and
xor
call
mov
mov
sbb
push
inc
add
icebp
or
in
and
dec
pop
rcrb
mov
pop
outsb
push
cmp
enter
push
push
mov
cmpsl
add
incb
mov
fildl
inc
icebp
jl
dec
cltd
adc
jle
leave
xor
sbb
aaa
aam
dec
inc
adc
fwait
idivb
mulb
stos
push
add
xor
mov
outsl
int3
add
mov
push
add
pushf
pop
and
dec
in
rorl
lods
pop
hlt
adc
aas
cmp
add
pop
cwtl
or
and
lret
jp
daa
sbb
pop
adc
jo
add
jp
divl
dec
jbe
les
jg
add
rep
lock
pusha
push
and
pop
fwait
sarl
mov
xlat
cli
dec
xchg
mov
cmpsb
push
lds
push
or
and
insl
out
or
cmp
mov
jno
push
pusha
push
js
jmp
push
sub
addb
shrb
adc
mov
jp
or
ret
and
mov
mov
mov
icebp
and
aas
sub
mov
xor
into
add
push
pop
in
call
add
push
test
mov
insb
cli
dec
pop
fwait
arpl
mov
add
mov
pop
int
add
loop
sub
into
jb
aas
cmp
lea
lods
iret
inc
inc
pop
fsubs
xchg
add
adc
add
loope
dec
add
scas
les
ljmp
in
add
jle
sahf
add
ljmp
das
add
sahf
mov
inc
mov
xchg
negl
imul
push
aas
sbb
xchg
enter
xor
lahf
push
sti
pop
aad
adc
insb
mov
mov
je
sbb
dec
xchg
adc
in
inc
lret
xchg
push
stc
mov
or
and
pop
cld
inc
mov
sahf
shrl
sbb
push
xor
mov
mov
inc
bound
nop
mov
pusha
fiaddl
and
inc
pushf
add
inc
mov
jbe
adc
mov
pop
xchg
fimuls
pusha
out
ret
pop
add
mov
mov
add
jo
das
out
je
add
in
lock
int3
incb
xor
adc
mov
bound
dec
pop
imul
cmpl
jns
sbb
adc
sub
leave
dec
and
out
fsubs
push
xchg
add
mov
add
aaa
aad
cs
scas
cmp
ret
xor
cwtl
add
push
and
pop
das
fsubrs
jb
or
and
mov
pop
repz
push
ffree
adc
fsubrp
cmpsb
add
inc
das
lahf
push
fstl
fucomip
add
pop
test
sarl
lahf
pop
jne
cmp
add
cwtl
pop
xchg
fmull
and
mov
lret
shlb
hlt
sub
fucom
iret
stos
nop
add
jmp
xchg
inc
pop
out
inc
int
out
mov
inc
sub
dec
add
add
fildl
ja
fdivrs
add
sahf
imul
aas
cmp
xor
subb
or
xor
ljmp
in
mov
pop
scas
push
add
xor
ret
add
hlt
les
sub
ss
add
xchg
dec
jne
pusha
mov
in
pusha
leave
in
int3
adc
mov
ret
adc
clc
xchg
add
xchg
insb
call
xor
and
call
push
loop
shlb
mov
stos
notl
jno
or
shlb
iret
push
sub
jp
sbb
and
mov
mov
push
mov
cwtl
pop
add
dec
in
or
add
hlt
xchg
and
pop
add
test
int
push
pop
jle
cs
call
jns
xchg
xorb
cmpsb
cli
lcall
ds
into
lock
out
int3
loope
lock
or
cmp
add
out
outsb
gs
mov
out
xor
lods
cli
pop
push
add
jge
testl
std
aad
adc
add
cwtl
mov
jbe
inc
cmp
sarb
add
or
test
jg
aad
out
jl
cmpsl
cli
shlb
jae
mov
aam
lods
and
repnz
jno
jae
mov
jns
mov
xchg
add
aad
ret
inc
xchg
and
dec
fstl
or
add
fcompl
shl
stc
cltd
jae
cld
jae
pop
push
add
adc
lcall
sbb
ret
inc
ja
mov
mov
cmp
sbb
cmpb
dec
add
ficoml
add
pop
jle
out
fisubs
stos
or
mov
stos
mov
xor
xchg
or
ss
rclb
or
shll
mov
sbb
lahf
pop
jno
jbe
add
cmp
cmp
add
mov
add
cmc
in
add
test
inc
push
bound
cmp
mov
pop
addb
lret
push
or
and
xchg
out
pop
cmpsl
and
mov
cmp
or
leave
push
inc
sub
cli
xor
xchg
cs
and
inc
fs
push
ret
out
dec
xchg
test
movb
sub
cmova
adc
mov
ljmp
add
mov
jmp
js
das
sbb
sbb
loope
or
rorb
inc
add
fistps
push
pop
push
mov
pop
ret
outsl
test
xor
pop
lret
pop
test
sub
imulb
add
xchg
fldt
pop
cmp
jo
lret
popf
loope
int
nop
loop
push
cs
pop
shrb
xchg
mov
aam
out
adc
lock
daa
dec
pusha
adc
cmp
xchg
sbb
add
rcl
movsb
decb
ds
push
xchg
nop
or
pop
repnz
outsl
jbe
and
testl
push
mov
dec
xor
lods
shrb
ss
add
fildll
inc
repnz
add
iret
addr16
xrelease
and
lret
incb
pusha
call
test
mov
dec
jle
add
aam
lds
test
mov
mov
addr16
add
adc
mov
test
sub
push
dec
lea
add
mov
sub
or
jge
dec
adc
xchg
into
pop
loopne
adc
add
dec
sub
leave
add
sub
popf
adc
sub
bound
mov
push
aaa
scas
stc
and
popf
pop
or
push
mov
inc
jb
add
pop
decb
dec
add
sbb
js
cli
in
loopne
adc
sti
out
jns
xlat
pusha
lea
addl
mov
sub
push
ja
xor
cld
jo
mov
je
xchg
add
add
js
pop
push
loopne
and
icebp
push
rcrb
adc
sub
cmpl
xor
add
insl
js
pusha
pop
dec
ja
rcll
jbe
loope
sbb
cmp
insl
mov
cmpsl
and
sub
fldt
mov
xor
add
cli
into
jge
roll
inc
loop
sub
jmp
push
xor
ja
gs
out
repz
xchg
lahf
push
jmp
sbb
hlt
cmp
push
inc
sub
add
iret
out
sbb
sbb
jle
xor
pop
add
call
aad
cltd
mov
push
arpl
fists
push
add
mov
add
jmp
and
je
push
ret
mov
sub
jmp
addb
decb
icebp
fidivl
xor
sub
fdivs
adc
pop
movsb
cmp
fistpl
orb
loope
jnp
push
out
test
stos
add
popf
jae
mov
xor
xchg
les
incb
add
ja
push
pop
push
popa
push
inc
sbb
cmp
popf
scas
je
push
lahf
or
dec
fildl
sub
cmp
lods
aaa
and
xchg
aas
add
mov
inc
mov
jb
jl
mov
xchg
xor
lret
test
sbb
pop
fsubs
add
xchg
lcall
enter
sub
sub
sahf
call
in
sbb
pop
int3
mov
sub
xchg
negb
dec
stc
mov
or
and
popf
pop
dec
fmuls
scas
mov
xchg
xor
mov
add
add
roll
andl
adc
cmp
sbb
inc
xchg
xchg
lcall
mov
push
loope
and
jne
or
jge
xchg
dec
sbb
jecxz
insb
loopne
ret
add
dec
xor
add
add
je
into
dec
xor
sbb
dec
repz
mov
and
jae
mov
negl
add
not
cld
mov
aam
push
ffree
adc
shlb
test
sbb
xchg
lea
ret
add
lock
cmpsb
shlb
pusha
cmp
enter
jbe
add
mov
add
pop
mov
cmp
int
sbb
push
scas
pop
ds
cmp
xor
sbb
cmp
pop
add
popa
test
fadds
push
or
fcoml
add
add
cli
cld
jl
pcmpeqb
jae
adcb
cwtl
push
dec
sbb
push
dec
add
xor
clc
push
inc
add
xchg
sarl
cmp
inc
mov
mov
mov
ds
xor
rclb
inc
lods
adc
sub
jle
lcall
push
stos
mov
pop
add
test
fists
sub
mov
jnp
and
movsb
add
pop
xchg
mov
rol
cld
dec
adc
ret
or
sub
or
mov
popa
xchg
rolb
mov
add
xchg
mov
add
sub
push
add
push
push
lock
mov
test
add
mov
push
lret
add
cmp
xor
cmp
dec
push
ret
int3
sub
lahf
jne
add
pop
add
dec
ja
imul
movsb
es
filds
dec
lods
mov
mov
add
das
sbb
push
lock
adc
push
clc
pop
out
xor
dec
and
test
cmp
fnstenv
add
inc
xchg
sar
std
and
add
test
add
push
sub
scas
jecxz
or
cmovns
add
or
mulb
add
int
push
xor
filds
mov
xor
hlt
addr16
inc
jno
mov
fiadds
stos
lds
add
or
push
dec
shlb
jmp
or
inc
jecxz
arpl
loop
addl
ret
andb
cmp
pop
inc
add
or
jg
popf
jo
cmp
and
pop
fidivl
lret
dec
fsubr
mov
fcompl
add
mov
add
cmp
testb
add
jp
mov
out
pusha
push
test
sbbb
scas
and
mov
mov
and
add
sbb
push
jnp
movsl
add
mov
cmp
or
loopne
jb
dec
add
ret
clc
icebp
test
cmpsb
dec
push
fs
add
shlb
xor
movsl
add
pusha
enter
or
pop
cmp
adc
inc
mov
scas
add
xchg
and
pop
add
dec
ucomiss
ss
push
hlt
stos
add
sbb
repz
push
adc
jbe
or
jle
add
sub
mov
pusha
mov
mov
insb
jge
pop
mov
mov
sub
data16
mov
mov
xchg
dec
cmp
pop
adc
xchg
push
neg
adc
mov
sbb
add
pop
mov
jno
jnp
test
clc
cmc
pop
ret
dec
add
mov
pop
cmp
jae
pusha
popf
xor
xchg
inc
mov
add
repz
enter
push
pop
mov
sbb
add
in
insl
mov
mov
xchg
add
ja
xor
xor
lret
mov
loopne
inc
mov
cmp
ljmp
addr16
adc
jb
add
int
orb
add
jle
mov
mov
pop
aas
pusha
lods
xchg
add
into
push
push
and
add
dec
sarl
xchg
add
add
xchg
rol
xchg
inc
add
pop
ret
or
jmp
and
adc
jns
iret
nop
sub
cli
cmp
les
data16
in
je
dec
inc
dec
and
out
add
or
ds
push
add
nop
out
add
cmp
or
idivl
pop
pop
fsubl
stos
out
cmc
jl
out
add
add
pop
aad
repnz
dec
pop
xorb
jmp
add
xlat
lret
cmc
inc
mov
jl
imul
data16
les
fimull
mov
stc
daa
sahf
cltd
shlb
cmc
mov
test
push
or
cwtl
and
fistps
or
xchg
jo
push
imul
jl
arpl
dec
adc
iret
loopne
or
in
ret
test
add
andb
test
xchg
sub
adc
fldl
xchg
sub
jne
std
daa
xor
popf
xor
lock
add
sbb
dec
jmp
sar
leave
testl
add
aas
pop
js
out
mov
shll
addb
outsb
je
idivl
shrb
incl
add
mov
push
xchg
pusha
fildll
add
bound
pop
xchg
aam
and
dec
pop
movsb
inc
scas
lds
repnz
adc
add
jmp
lea
mov
stos
jb
lret
dec
bound
gs
dec
add
push
shrb
leave
inc
pusha
testl
pop
aam
push
test
fidivl
dec
icebp
mov
in
mov
cmp
sub
imul
or
mov
les
scas
int3
sahf
mov
jg
xor
test
addb
inc
notb
add
mov
sbb
mov
mov
lock
clc
add
divl
cmpsb
xor
pop
rolb
out
add
mov
mull
jp
ljmp
sahf
shrl
or
es
xchg
cs
push
ret
mov
cmpsb
insl
adc
lods
xchg
add
cltd
sbb
rolb
inc
or
pop
adc
sti
sub
je
jno
cmpsl
daa
test
int
push
sub
dec
lods
dec
jbe
out
push
loope
xchg
xchg
add
mov
jno
paddd
insl
aas
int
leave
add
outsb
inc
adc
add
lret
and
add
aam
fldenv
add
cmp
pusha
shlb
inc
add
inc
or
lds
addl
enter
repz
pusha
in
sti
cmpl
ljmp
icebp
fadds
cmp
setae
push
arpl
add
andl
cmp
xor
sbb
cltd
cmp
push
mov
mov
cmp
andb
aaa
inc
xor
lods
jno
jo
jne
loope
jmp
insb
and
out
jbe
out
cli
ret
pop
xor
xchg
movsb
inc
sbb
mov
mov
fs
out
and
xchg
pushf
add
stc
add
nop
fs
or
xchg
or
loop
jmp
shlb
add
add
or
sahf
pop
shll
aas
add
shll
jp
or
pop
imul
cld
and
add
push
sub
or
loope
sahf
mov
rolb
in
adc
pop
add
and
and
cwtl
sbb
xchg
gs
or
xchg
adc
sbb
push
adc
call
xchg
test
int3
std
js
xor
lods
movsl
shlb
or
and
or
aam
out
pop
adc
test
xor
outsb
sub
sbb
lods
cmp
test
and
cmpb
cmp
cmp
add
fcomp
pop
mov
ds
cmp
cmp
enter
pop
or
mov
out
fchs
out
sbb
xchg
mov
adc
pusha
in
mov
in
pop
aam
add
or
push
shrl
cmp
add
push
xor
movsl
insl
imul
add
sti
mov
add
insb
jo
add
cld
xorb
inc
pop
mul
leave
nop
int
pop
faddl
mov
pop
bound
hlt
fldenv
nop
inc
add
ror
sub
je
ret
mov
in
roll
fstl
pop
cld
add
add
ss
gs
shl
fs
mov
add
xlat
ret
pop
cwtl
mov
add
lods
jp
add
nop
sbb
bound
iret
add
xor
cmp
or
cmc
inc
adcb
loope
mov
call
and
jecxz
arpl
cwtl
imul
je
insb
add
ret
xchg
das
push
hlt
pop
add
mov
loopne
push
or
mov
jecxz
nop
add
lea
sub
loopne
jl
sbb
rep
add
add
shlb
jne
adcl
adc
add
lahf
push
pop
add
sbb
xor
xchg
mov
jb
pop
xor
dec
mov
fcomps
lahf
daa
xchg
mul
cltd
inc
mov
jns
add
or
adc
sub
insl
in
pushf
add
cmpsb
js
xchg
enter
sub
shrb
dec
jne
pop
xor
loopne
sbb
add
mov
jle
cwtl
inc
add
loope
mov
aam
cmp
sub
leave
daa
xchg
aam
nop
add
lds
add
inc
outsb
cmp
adc
in
add
ret
inc
mov
lea
mov
pop
dec
stos
push
and
sbb
inc
xchg
sbbl
add
dec
jns
jno
push
inc
shll
out
add
mov
loopne
inc
add
jp
imul
push
scas
sbb
in
bound
popf
jne
ds
sub
xchg
pop
lret
sub
sub
movsl
add
xor
add
aas
xor
jl
cmp
push
nop
adc
xchg
sbb
jmp
sbb
imul
stc
enter
lods
mov
add
xchg
push
sahf
pop
add
sbb
aam
pushf
xor
pop
dec
jae
jecxz
cmp
lahf
call
imul
stos
sahf
loopne
add
in
sbb
cli
mov
and
push
out
jno
jo
fwait
and
add
adc
lret
in
shlb
sub
mov
les
or
xor
add
jne
pop
inc
cwtl
cmp
xor
stos
fiaddl
std
ret
jmp
adc
jns
andb
sbb
xor
ljmp
add
xchg
jg
dec
jb
add
mov
mov
add
movsb
dec
or
test
add
int3
mov
inc
dec
out
rcl
dec
add
pop
call
ret
push
xor
inc
rorb
mov
repz
cmpsb
pop
cltd
gs
add
add
mov
add
or
jle
xchg
mov
ret
addr16
fstpl
je
sub
iret
mov
mov
push
testl
cld
pop
jg
dec
add
cmp
int
lods
sub
jns
xchg
lds
jne
mov
mov
ret
pushf
pop
lock
add
mov
nop
test
push
jle
in
pop
inc
adc
pop
inc
mov
mulb
imul
jbe
stc
add
mov
les
add
cs
ds
fdivl
movb
jp
cmp
test
aam
je
pop
and
cmp
fld
loop
and
nop
imul
sub
and
sahf
pop
jbe
and
push
std
inc
call
jp,pn
add
lock
in
push
bt
inc
cmp
fbstp
test
add
inc
mov
inc
add
out
jae
sbb
add
lock
add
mov
pop
jae
push
add
mov
xchg
pop
dec
add
fs
shrb
iret
xor
sbb
jmp
and
mov
sbb
outsl
iret
inc
out
and
add
imul
or
cmpsb
cmp
sub
outsl
push
dec
add
and
test
sbb
dec
bound
add
add
shrb
pop
sahf
inc
es
add
mov
xchg
xchg
jne
in
add
mov
jg
push
rcll
jl
sub
pop
sub
fsubs
mov
movsl
loopne
adc
pop
test
push
fs
sbb
add
pop
adc
add
outsl
jmp
xchg
xor
jae
or
jmpw
loope
dec
add
test
xor
add
dec
testl
out
jo
xor
mov
add
cmpb
cmp
sub
outsl
pop
push
add
ret
enter
and
or
or
insb
add
mov
in
xchg
jb
cmpb
adcb
mov
loope
out
loopne
jmp
sub
or
or
cmp
sub
sbb
pop
test
sub
push
sub
out
loopne
dec
sbb
cltd
iret
lock
call
cwtl
sub
sahf
insb
cwtl
stos
test
pop
test
popa
stos
hlt
jg
sbb
rorl
mov
add
jle
andb
lock
cld
add
fists
movl
popf
sbb
lock
inc
mov
rol
imul
and
jb
adc
mov
and
or
lods
inc
add
mov
test
nop
clc
pop
add
or
add
fmuls
xchg
fisttpl
add
in
xchg
fwait
loopne
int3
adc
and
dec
pop
test
stc
add
in
push
cmpsb
sbb
loop
dec
or
imul
add
push
lret
cwtl
jb
add
icebp
shl
dec
les
pusha
or
add
mov
jae
out
ffree
jo
or
cmp
or
mov
sbb
inc
add
or
inc
clc
mov
lock
push
les
xor
div
mov
dec
addb
inc
pop
mov
sub
scas
add
jb
in
das
mov
xor
adc
lahf
add
mov
clc
mov
aaa
jne
add
dec
jae
popf
aas
adc
add
mov
push
shlb
pop
dec
mov
add
and
jb
add
nop
inc
das
lret
dec
sbb
jl
pop
test
push
mov
add
or
gs
movsb
sub
call
loope
pop
jge
add
subb
outsb
hlt
stc
mov
add
dec
test
push
repz
subb
add
adc
cld
andl
fs
ret
dec
jmp
push
imul
mov
filds
jmp
push
js
mov
popa
imulb
je
es
mov
add
adc
in
push
adc
jmp
stos
add
dec
mov
cmc
test
icebp
aam
mov
fs
sti
xor
maskmovq
divl
icebp
sahf
js
mov
push
and
test
inc
std
mov
stc
ds
hlt
insl
cmpsb
sub
push
js
cmp
xor
or
fisubs
jbe
mov
pop
rcrb
push
jns
adc
lods
mov
scas
inc
sub
outsb
xchg
cmpsl
int
mov
int3
lea
mov
push
dec
and
add
movsb
pop
mov
sub
jnp
add
adc
and
ret
add
mov
shll
ljmp
test
cmp
and
pop
adc
pop
adc
into
outsl
les
and
or
and
pop
jmp
orb
or
adc
addb
add
test
lock
cli
add
xchg
and
arpl
xchg
loopne
lea
pop
xor
jae
fmuls
negl
jb
pop
out
shrl
dec
sbb
ljmp
add
adc
jne
scas
xor
push
lods
jo
pop
shlb
lock
sbb
icebp
add
pop
das
in
fnstcw
and
les
cmp
lcall
xchg
lahf
add
inc
sbb
mov
gs
jnp
xchg
fdiv
xchg
add
mov
adc
cwtl
add
push
das
pop
jns
push
gs
sub
cmpl
xchg
je
mov
pop
out
fwait
and
mov
fstpt
add
jle
and
mov
nop
pop
pop
push
lahf
cmc
push
cmp
adc
inc
jle
fldl
pop
jb
xchg
jl
xchg
add
sarb
test
ja
add
and
leave
jg
hlt
out
fsubs
gs
mov
sub
ja
sbb
jmp
sub
or
lock
xchg
add
sbb
mov
fwait
dec
xchg
sti
mov
pop
stos
or
test
and
push
push
push
add
fadds
add
les
cli
sbb
icebp
xchg
out
dec
mov
pop
repnz
mov
add
or
lret
jno
add
pop
add
add
and
add
dec
dec
add
xchg
out
data16
insb
push
and
push
cld
sbb
ljmp
pop
adc
mov
sete
and
les
push
js
jl
pop
pop
and
jg
cmpsb
fisubrl
and
push
push
movb
mov
add
outsb
add
dec
sbbb
lret
push
or
cmp
inc
sbbb
push
sbb
enter
in
sbb
jne
mov
or
jno
mov
imul
cmp
xchg
enter
jnp
add
rcrl
xchg
sahf
mov
push
adc
and
sub
rcll
adc
mov
jl
and
js
call
packsswb
and
push
add
jge
insb
mov
arpl
mov
sub
add
jmp
mov
mov
push
xor
shll
cmovl
loop
add
cltd
ds
sbb
pop
shrb
pop
cmp
or
add
std
inc
add
sub
add
sbb
cltd
dec
sub
pop
pop
arpl
sub
stos
incl
aaa
mov
jns
test
cmp
pop
cmp
xchg
or
pop
and
addr16
into
fs
pop
add
pop
shlb
shr
mov
mov
jmp
add
cmpsl
jp
cld
mov
xchg
mov
mov
outsl
ljmp
add
lret
mov
add
dec
push
mov
jl
cld
jo
jb
xor
mov
aas
add
or
mov
add
pop
add
xchg
or
push
push
add
fcom
pop
push
cmp
add
pop
sub
dec
inc
jns
push
xor
je
add
sub
mov
shrl
fsubrs
adc
xor
dec
clc
push
ret
out
add
jne
hlt
xlat
jp
sti
jp
add
add
add
gs
push
loopne
clc
jns
add
stos
mov
ja
pushf
mov
jae
add
cmp
ljmp
or
sub
repnz
jecxz
repz
and
pop
mov
incb
pop
outsb
jbe
int
or
pop
mov
push
sarb
jp
mov
insl
xchg
adc
aam
mov
repz
in
or
inc
xchg
adcb
shlb
dec
arpl
push
out
repnz
push
das
mov
jmp
dec
add
stos
mov
inc
test
add
xchg
sub
fsubs
adcb
in
mov
push
repnz
mov
sub
mov
leave
xchg
mov
xor
inc
ljmp
pop
ret
rolb
movsl
dec
xor
scas
cmp
or
jbe
sahf
jno
cmp
std
add
push
mov
mov
jg
jbe
mov
push
xor
out
lock
mov
pop
testb
xchg
push
ja
dec
xorb
jns
je
pop
add
lcall
nop
jle
out
push
jl
inc
xchg
add
adc
and
push
mov
outsl
mov
add
push
aam
xor
rol
add
mov
sarl
jno
add
ljmp
insl
cld
popa
inc
fabs
adc
setne
cmpsl
inc
rclb
and
sbb
add
mov
xlat
pop
jecxz
fs
xor
push
fidivrs
push
out
test
loop
int
push
fnstenv
fimuls
insb
andl
mov
inc
cmc
in
pop
aas
sbb
das
stos
or
mov
add
repnz
cwtl
sti
aas
and
jns
add
lcall
mov
jnp
loopne
add
mov
add
dec
dec
add
nop
mov
pop
test
jmp
clc
mov
jecxz
lods
test
or
mov
sbb
js
xor
xchg
cmp
adcl
int3
or
test
dec
loopne
popl
cltd
lds
shl
push
sbb
cld
cmpb
add
adc
dec
xchg
push
inc
jp
std
jbe
inc
in
add
lret
test
shll
clc
bound
pop
xchg
out
xchg
les
pop
repz
loopne
mov
int
cmp
out
cmc
mov
jb
sbb
imul
lods
icebp
dec
cmp
nop
jp
not
dec
test
add
lret
mov
gs
call
std
test
arpl
push
mov
adc
pop
add
dec
add
mov
xchg
add
cmp
add
pushl
sahf
dec
rcll
cmc
ja
imul
jo
jl
jno
cmp
add
lahf
jbe
test
inc
addr16
add
pusha
and
pop
jge
sub
shll
xor
adc
mov
mov
xchg
test
jmp
add
jns
xor
test
ljmp
xlat
out
xor
fadds
add
jl
fprem
idiv
hlt
xor
fistl
mov
dec
sub
lret
and
pop
cltd
add
cmp
aaa
ljmp
mov
inc
fiaddl
add
je
xchg
mov
push
cmc
fadd
outsb
fcomip
and
cld
sbb
add
lret
leave
fwait
rclb
sahf
add
jnp
xchg
mov
jl
stos
push
or
add
xor
out
dec
push
adc
mov
mov
cmp
xchg
xchg
ss
push
rorb
pusha
test
testl
push
cs
sti
cmp
icebp
cmc
jno
stos
adc
and
lret
add
xchg
sbb
inc
cwtl
pusha
add
ficoms
xchg
add
adc
out
shll
and
push
jnp
popf
jnp
cmp
shll
jl
mov
rclb
jo
movsb
imul
xchg
hlt
pop
lds
leave
inc
pop
rorb
push
int
mov
sub
aaa
scas
xchg
ret
nop
add
sub
cmpl
nop
jmp
insb
add
jae
int
aam
arpl
inc
inc
mov
repz
rcrb
fimull
arpl
movsb
fists
cwtl
xlat
xor
test
mov
in
add
ss
inc
rolb
push
xchg
ljmp
pop
add
jnp
arpl
add
pushf
ret
pop
push
insl
cmove
cmp
add
cmp
sbb
std
jne
sbb
in
adc
ss
ret
scas
iret
push
dec
out
in
add
mov
push
shrl
and
bound
inc
dec
mov
incb
xor
vpsrad
pop
dec
and
push
mov
push
int3
int
pop
idivb
pushf
add
fistpll
jbe
jbe
add
xchg
insb
lahf
pop
jg
add
xchg
xchg
pop
adc
push
pusha
jno
movsb
popf
dec
out
add
fidivl
loop
add
sbb
iret
dec
pop
push
add
cwtl
popl
push
cmp
out
test
cmpsl
sbb
mov
push
and
lcall
sub
dec
push
outsl
inc
sub
gs
imul
mov
add
in
sarb
addr16
hlt
add
add
nop
or
and
add
add
pop
jnp
rol
and
repz
add
xlat
mov
mov
lcall
call
xor
and
xor
push
out
add
loopne
in
pop
mov
pop
lea
add
mov
in
xchg
fiadds
mov
shll
xlat
sahf
mov
cmc
sbb
imul
jns
add
lea
sub
xor
orl
mov
hlt
push
test
shrb
aaa
lods
stc
add
rcl
mov
mov
and
es
or
rcrb
push
in
xor
pushf
bound
push
mov
mov
insb
daa
shll
icebp
out
xchg
inc
addb
sbb
es
push
sub
mov
cwtl
sbb
and
icebp
lret
dec
add
add
notl
pop
adc
add
mov
gs
and
pusha
jo
stos
or
fadds
in
clc
inc
push
or
jns
mov
or
rcrb
sahf
lds
sbb
add
push
call
out
lods
repnz
sbb
mov
inc
rol
adc
insl
sarb
push
loopne
push
push
decb
mov
mov
daa
push
pop
jmp
jl
roll
pop
lds
jl
sub
cmp
and
xlat
or
dec
pushf
cli
adc
xchg
mov
stos
add
mov
sub
addl
push
sbb
sbb
xchg
dec
rclb
xor
das
cltd
or
jl
push
add
add
stos
out
cltd
sub
bound
cld
or
and
test
inc
ja
or
dec
cmp
xchg
mov
and
jmp
add
cs
sti
add
adc
jp
mov
mov
add
or
xchg
adc
mov
cvtps2pi
jmp
shlb
xchg
sti
adc
or
push
dec
pop
add
ss
sbb
aas
mov
add
cmpsl
push
negb
stc
or
xchg
jl
scas
sbb
xor
ds
cmp
add
inc
jbe
push
mov
aas
out
sahf
sub
in
shr
dec
mov
or
mov
add
xchg
add
pushf
lahf
mov
cmp
stos
xor
sbb
cwtl
jecxz
push
rolb
outsl
push
subl
jb
and
outsl
push
in
jmp
add
insl
pop
les
enter
and
shrb
scas
cmp
dec
or
pusha
pop
mulb
add
adc
out
rorb
cmc
cmpsl
add
repnz
jb
sub
addb
add
daa
sub
addr16
mov
ljmp
cmp
jge
adc
dec
push
xchg
and
push
cs
sbb
ret
gs
mov
add
mov
inc
dec
xlat
cmp
add
das
fdiv
mov
add
repnz
add
jnp
scas
js
inc
cmp
testl
dec
add
xchg
cmpsb
popa
data16
xchg
add
pop
stc
add
enter
inc
rclb
inc
mov
xor
mov
inc
add
sbb
cmp
cwtl
dec
rcll
dec
add
pop
test
mov
sub
xorb
xor
adc
lods
addr16
sbb
ret
add
ja
xchg
addb
mov
mov
sub
ja
jg
add
pop
or
add
gs
jp
ss
add
mov
popf
clc
xor
bound
mulb
sbb
jmp
sbb
ss
jl
test
enter
xchg
pop
test
sbb
pop
lock
jecxz
mov
or
mov
leave
add
stc
jp
rolb
cmp
add
fsincos
movsl
mov
pop
cmp
dec
sarb
and
mov
xchg
int3
xor
or
pop
pusha
mov
out
cwtl
std
pop
push
add
sub
or
mov
scas
mov
dec
inc
xor
fwait
popa
add
push
xchg
leave
call
ret
and
add
pop
lcall
sbb
adc
add
and
mov
ljmp
scas
add
femms
xor
rcll
in
mov
ss
pop
mov
add
dec
xchg
add
cmp
lods
mov
lds
jp
add
aad
xor
sub
sbb
dec
push
push
rcl
inc
mov
dec
gs
xchg
in
fwait
dec
xlat
repz
add
pop
sub
jae
xchg
add
jp
inc
loopne
xor
movsb
fildl
in
shrb
jae
fcomps
pop
dec
inc
jl
sbb
jmp
mov
movsb
sbb
push
mov
stc
jns
imul
sbb
xchg
mov
into
insb
pop
cmp
test
dec
vpsllw
daa
add
out
imul
ret
xchg
add
nop
movsl
xchg
iret
add
jns
loopne
dec
inc
insb
sbb
out
movsb
sbb
pusha
push
cmpsl
pop
or
sub
dec
test
stos
pop
push
test
bound
sbb
cmpsb
xlat
adc
and
push
paddw
mov
popf
xchg
mov
xlat
adc
rep
xchg
mov
add
cwtl
orb
stos
sti
repnz
jno
es
jp
xchg
int3
loop
dec
pop
add
test
out
or
adc
sub
add
mov
ja
test
jnp
sub
cmp
add
xor
inc
adc
cmp
shl
test
shr
dec
movsb
adc
std
pop
jmp
jge
mov
mov
in
mov
cmpsl
addb
add
repnz
sub
loope
dec
jnp
enter
lods
add
and
push
dec
mov
imul
ljmp
sbb
lods
ret
sbb
xor
xor
dec
cmp
and
dec
mov
pop
popa
or
lahf
ds
jns
and
lret
xchg
inc
std
mov
stc
pop
dec
cmc
rol
push
aas
mov
push
add
out
add
push
pop
movsb
inc
push
pop
jge
add
mov
insb
add
mov
adc
aad
cld
mov
xchg
imul
mov
ja
je
lods
inc
add
sub
sub
xor
or
testb
add
or
jmp
push
xlat
mov
add
lcall
xchg
jp
lret
dec
sbb
clc
ds
inc
mov
jnp
icebp
add
cwtl
sbb
xchg
pop
out
add
shl
rorb
lods
or
mov
or
popf
add
sub
out
pop
enter
mov
adc
fs
sti
inc
jbe
adc
mov
xor
mov
aaa
push
addr16
or
aam
in
pop
mov
out
scas
cmp
ficompl
ret
fwait
add
int3
mov
mov
xorb
add
aam
jne
xlat
xorb
out
push
adc
and
daa
cwtl
dec
and
outsl
push
sbb
shrb
mulb
adc
cmpl
repnz
cmp
out
insl
mov
mov
add
sahf
mov
jecxz
ds
shll
push
sbb
jno
aas
out
add
and
insl
dec
insb
loop,pn
add
xor
jge
pop
jp
lret
or
aad
shlb
les
out
fildl
lds
mov
add
inc
cwtl
or
aad
push
cli
mov
orb
xchg
leave
stos
add
scas
jmp
dec
push
and
xchg
iret
cli
xor
xchg
inc
mov
xlat
fxch
addr16
pop
stos
adcl
mov
sub
fiaddl
sbb
xchg
cmp
faddl
pusha
rol
es
adc
pop
mov
dec
popf
and
cli
inc
addl
sti
pop
pop
xchg
dec
or
mov
gs
push
add
stos
mov
sbb
mov
imul
inc
add
stos
mov
xor
dec
stc
pop
add
xchg
mov
imul
popa
icebp
xchg
shrb
ret
pop
cmp
out
jnp,pt
add
rcrb
push
ret
inc
std
sbb
or
xchg
lock
orb
mov
add
outsl
shlb
sub
gs
sarb
mov
adc
test
mov
cli
sub
leave
aam
dec
dec
iret
shr
pop
scas
push
xor
mov
mov
sbb
mov
or
adc
scas
repz
lret
add
sub
add
adc
push
inc
cmp
sub
cmp
jmp
mov
xchg
lea
insl
loope
les
test
dec
rolb
test
add
jb
jnp
push
xor
sbb
or
into
fldcw
push
sbb
or
add
ljmp
jl,pn
adc
pop
dec
aas
xchg
push
orb
add
cs
add
pop
out
push
inc
cmp
pusha
hlt
xchg
sbb
inc
mov
shlb
cmp
pop
pop
push
add
mov
lea
add
adc
xor
ffreep
out
fiadds
mov
sahf
sub
test
xchg
and
loope
add
int
fs
jne
loopne
add
outsl
jp
or
add
shll
add
mov
jmp
leave
rorl
orl
sbb
aas
test
shll
inc
mov
cmp
into
xchg
std
add
add
jae
push
leave
stc
add
add
test
mov
xchg
dec
jg
mov
std
pusha
cld
jge
xchg
lea
inc
add
cmpsl
cmp
rolb
lcall
pop
pusha
jno
xor
add
aad
repz
mov
scas
mov
or
add
enter
mov
pop
mov
rcr
add
sub
and
arpl
pusha
xor
ljmp
sbb
roll
aas
mov
xchg
adc
cli
xor
push
das
in
imul
loopne
add
clc
fwait
lea
rcrb
idivb
add
leave
jno
add
mov
mov
add
rcll
test
nop
loopne
insb
add
add
jae
or
and
mov
int3
pop
mov
or
lds
add
push
push
mov
xor
adc
jnp
hlt
mov
add
insb
xor
mov
xor
or
cmp
and
fstpl
inc
aad
cmp
lock
fsts
push
ficomps
or
leave
sbb
jecxz
adc
pop
lea
call
sbbb
into
mov
call
enter
loopne
xchg
adc
lea
push
negb
jp
shlb
add
aam
test
pop
add
add
notl
xor
add
lret
fimuls
or
fsubs
sub
add
mov
aas
mov
cld
mov
inc
jge
push
add
mov
jl
out
xchg
out
jne
ja
lods
lcall
lahf
xchg
sti
cmpsb
roll
adc
mov
and
add
lret
leave
mov
popa
push
in
std
test
mov
jecxz
add
push
push
sub
outsl
mov
dec
jbe
loopne
cmp
add
xchg
jno
xchg
popa
and
ret
sub
sarl
fcmovnu
cmp
lods
add
pop
loope
sub
xor
mov
pop
xlat
pop
dec
lcall
xorb
leave
mov
js
outsb
add
test
add
xchg
loopne
lds
pop
and
in
push
loop
cld
sub
lcall
add
sahf
pop
adc
mov
mov
inc
mov
push
add
mov
clc
add
addb
push
cmpl
xchg
insb
sbb
mov
jae
pop
sbb
mov
fdivs
xor
inc
and
add
push
stc
add
call
stos
mov
xor
push
lods
jb
aad
push
cmp
add
js
ja
add
xor
data16
fs
lds
adc
push
or
repnz
sub
clc
push
out
add
jns
xchg
into
fistpl
filds
xchg
loopne
or
imul
and
push
and
xchg
ljmp
dec
cmp
add
lret
testl
ret
mov
add
sbb
lret
push
inc
inc
dec
sub
mov
fstpt
mov
or
add
inc
pushl
repnz
pop
lahf
push
cmc
mov
cs
xor
xchg
xlat
or
add
scas
mov
cmp
xor
cmp
subb
dec
jecxz
pop
inc
les
add
xor
fdivs
inc
or
fs
addr16
cltd
and
cmp
sub
fstpl
or
mov
sbb
sub
clc
je
or
cli
and
xchg
mov
inc
into
dec
push
arpl
add
or
inc
pop
sbb
xchg
scas
outsb
add
push
xor
lret
in
int3
xor
pop
inc
cwtl
add
aad
jmp
outsb
add
pop
sub
dec
lahf
loopne
add
jmp
and
roll
pusha
popl
adc
insb
dec
repz
xor
jo
add
dec
xchg
out
aad
out
inc
fildl
hlt
add
mov
or
xchg
imul
mov
jne
add
aam
dec
add
mov
fs
int3
sbb
lret
repz
inc
dec
cmp
add
xchg
aam
dec
jl
adcl
jae
and
mov
mov
outsl
je
sbbb
fldcw
ret
xchg
inc
xor
and
inc
jmp
pop
push
rorl
ret
mov
ss
cltd
sub
jno
sbb
jbe
xchg
push
xchg
push
movsl
mov
jecxz
add
loop
fiadds
test
mov
leave
inc
cmp
mov
incb
mov
and
or
andl
les
xor
sub
add
or
ss
in
mov
cli
fisubrl
mov
xchg
loop
in
push
add
xor
push
aam
add
or
pop
popf
add
xor
push
or
mov
sbb
rdtsc
sbb
xor
sbb
ljmp
adc
mov
in
add
sbb
dec
dec
arpl
fnstsw
pusha
add
inc
add
jae
bound
addl
int
xchg
cs
jp
inc
jns
add
scas
push
les
fstpl
arpl
sub
jo
sub
xor
add
mov
pop
add
popa
ret
mov
inc
scas
rcrb
aas
mov
push
stc
cmovbe
idiv
aad
das
mov
mov
clc
fs
aas
hlt
jo
enter
sub
push
mov
mov
out
cmp
add
or
icebp
clc
pop
add
pop
ljmp
xor
cli
mov
jae
sub
xor
inc
sub
cmp
adc
add
pop
fldl
inc
xchg
mov
cmp
inc
jns
mov
imul
mov
xor
sbb
add
add
aam
test
sub
jmp
xchg
pop
sbb
lret
imul
fidivrs
add
adcl
in
jno
sahf
and
add
mov
addr16
xchg
cmpsl
add
stos
adc
idivb
sbb
movsl
inc
xchg
js
add
sahf
or
push
sbb
xor
in
mov
xchg
jmp
jg
addl
clc
stos
insb
scas
mov
inc
xor
popa
test
lock
xor
mov
adc
insb
mov
fsubl
inc
mov
inc
xor
sbb
adc
add
insl
cwtl
ret
pusha
jae
add
dec
lcall
push
xchg
ficoml
repz
cmc
clc
jle
cmpsl
mov
sub
mov
aad
sti
leave
daa
add
sbb
int3
mov
fldcw
sub
sub
bswap
mov
cmp
mov
jo
add
sub
adc
mov
push
inc
pusha
ljmp
cmp
xchg
inc
inc
add
inc
test
and
add
xor
add
push
cmp
loop
cmp
inc
sub
outsl
cmp
mov
mov
hlt
loope
and
loop
add
cli
test
xlat
sbb
xchg
loopne
mov
xor
mov
add
dec
test
es
out
sbb
add
mov
jo
cwtl
cmp
lock
or
dec
cmpsb
and
dec
push
stos
and
adc
mov
pop
pop
and
clc
sbb
cmp
pop
push
dec
sbb
and
lret
mov
pop
mov
aad
mov
xor
fildl
sbb
lret
stos
inc
mov
inc
xor
nop
rorb
xor
fdivr
add
pop
or
and
and
jbe
sahf
adc
sbb
aam
pop
add
jnp
sub
loop
cld
subb
inc
loopne
jg
mov
movsb
sahf
dec
movb
jb
jecxz
in
popa
pop
pop
adc
out
mov
popf
xchg
paddsb
fisubl
dec
inc
int3
push
rcl
addb
lock
add
lea
and
or
sub
shll
mov
imul
add
dec
in
lods
xor
adc
pop
outsl
sbb
add
dec
or
add
leave
xchg
add
mov
jo
add
push
push
xchg
mov
dec
test
stos
in
add
mov
clc
addb
pop
xchg
cli
inc
add
jb
xchg
and
mov
xchg
insl
mov
mov
mov
jns
lea
mov
add
loope
bound
xchg
ret
int
jbe
lock
sbb
or
les
cmpb
mov
ds
mov
xorl
addr16
pop
in
rcrb
es
adc
and
or
insl
add
jp
and
pop
xchg
jo
sbb
ljmp
mov
add
lret
hlt
das
jae
add
lock
xor
mov
pop
pop
flds
jmp
nop
lock
mov
adc
push
push
sahf
xchg
add
sub
pop
js
imul
add
xchg
and
dec
or
sbb
mov
add
cmp
add
orl
dec
adcl
add
mov
mov
add
rorb
add
jg
jnp
cmp
stos
arpl
dec
hlt
loopne
jae
pusha
adc
es
add
lds
je
cmp
mov
pushf
push
jl
jne
sbb
aad
add
or
vfrczpd
jl
mov
mov
jo
add
std
xchg
rcl
ficomps
xor
jns
adc
pop
inc
fstps
scas
dec
mov
xor
ds
jp
jecxz
stos
mov
test
lret
sub
add
std
subl
push
subb
xchg
bound
sbb
pop
ja
scas
cmp
sbb
call
test
jb
adc
or
add
addr16
mov
loop
jne
fadds
loopne
das
add
int
mov
push
leave
stos
pop
pop
loope
daa
mov
aad
ja
std
scas
cmpsl
adc
mov
dec
cmp
daa
sub
push
aam
pushf
test
in
add
andb
rolb
adc
xlat
add
mov
dec
inc
lcall
adc
push
pop
adc
testb
dec
add
stc
cmp
loopne
cmp
lds
or
add
and
sbb
add
xchg
mov
add
enter
std
jge
xchg
mov
sub
out
add
adc
inc
imul
jb
jle
and
mov
in
andb
test
inc
lea
inc
out
call
filds
pop
adc
movq
sti
pop
or
insl
or
icebp
mov
or
popa
out
out
ret
insb
add
pop
lret
push
or
ret
addl
mov
cmp
daa
fcmove
add
sub
mov
jno
cltd
lods
test
pop
fcmovu
xchg
rolb
jle
push
sub
mov
or
fsts
mov
mov
cld
lds
mov
in
je
pop
roll
mov
add
pop
das
inc
xor
mov
fs
pop
dec
adc
inc
test
mov
jp,pn
out
pop
add
push
fwait
or
add
xchg
jne
sbb
push
in
pop
pop
fs
test
out
mov
bound
stc
jbe
add
imul
jo,pn
adc
scas
mov
add
mov
ss
add
add
sarb
mov
addl
jge
fstpl
ret
add
lock
js
rcll
and
shll
or
aad
test
aas
out
mov
inc
shlb
dec
xor
aaa
sub
inc
jg
sub
dec
movl
mov
dec
sarb
push
xchg
add
dec
mov
int
dec
rcll
ja
daa
xchg
cwtl
mov
and
aad
sbb
negl
adc
xchg
jno
add
mov
mov
adc
pop
adc
in
filds
pusha
int3
add
in
mov
jge
lods
cwtl
adc
fimull
lods
push
add
jecxz
add
mov
and
aaa
lea
add
rorb
or
cmp
pop
or
lahf
in
test
ljmp
jo
fwait
repnz
mov
mov
adc
add
stos
shrl
cltd
jns
or
mov
rclb
jbe
cmp
push
subl
fcoms
inc
add
jne
xchg
xchg
jl
in
in
jns
adc
push
aad
lahf
aam
lock
stc
mov
in
addr16
push
loopne
adc
xchg
inc
add
cli
and
mov
add
imul
into
add
mov
lock
outsl
les
rcrl
inc
mov
mov
out
ret
pop
mov
rcrb
and
sbbb
push
mov
pop
iret
add
and
sub
pop
je
cmpsl
add
push
test
mov
add
jge
es
stc
popf
push
cmp
nop
mov
test
data16
and
mov
or
aam
int
testb
jae
lahf
inc
je
adc
insl
rol
or
push
adc
pop
pop
inc
roll
jp
add
jno
mov
dec
xor
fsts
in
call
cmpsb
add
sbb
or
pop
lds
iret
nop
inc
mov
mov
pop
loope
cwtl
rolb
adc
mov
dec
ja
roll
add
pop
push
sbb
cmc
das
out
call
stos
add
lods
push
sbb
adc
mov
loope
ds
pushf
lods
mov
xor
mov
rolb
mov
out
and
aaa
jno
cmpsl
mov
mov
cmp
mov
insl
rol
mov
push
mov
outsb
pop
add
es
add
insb
ffreep
push
pop
adc
mov
pop
mov
jp
cmp
pop
subb
adc
arpl
push
mov
add
insl
pop
inc
in
pop
and
ja
and
adc
push
and
inc
push
scas
aaa
add
jle
xchg
mov
push
jne
add
jge
fisubs
mulps
xchg
mov
jecxz
xor
frstor
pop
sub
dec
ljmp
dec
ds
adc
sub
cs
cmpsl
pop
mov
test
inc
add
xchg
push
inc
fiaddl
or
es
mov
add
xchg
js
adc
dec
add
xlat
and
pop
test
jns
push
icebp
add
add
add
sbb
pop
add
movsl
and
sub
sub
cli
fdivrs
push
stos
fs
xchg
lock
inc
push
out
addr16
js
aas
pusha
or
add
mov
jg
xchg
add
xor
pop
repnz
add
sti
sarl
aad
out
push
adc
mov
inc
fs
lods
pop
cmp
push
mov
and
jne
dec
out
pop
inc
pop
mov
sub
add
jl
adc
into
jnp
lock
push
and
imul
xlat
stc
and
addb
lahf
or
ficomps
cmp
repnz
insb
xor
mov
push
lret
out
jne
cli
aas
filds
add
xlat
dec
jbe
rolb
enter
inc
adcb
mov
lods
xlat
add
jb
or
fs
sbb
sahf
test
and
ja
rcrb
pop
jp
cmp
mov
cs
adcb
ret
sub
daa
in
jns
push
dec
and
ss
test
int3
mov
add
fstpl
add
mov
inc
loope
lahf
cmp
sbb
cmpsl
adc
jle
lods
or
adc
mov
or
icebp
jno
sbb
fsts
aas
mov
sar
jg
ret
add
ret
add
in
and
inc
add
cmp
pop
and
aad
add
out
in
sub
outsl
add
ljmp
nop
jno
lock
push
cmpsl
inc
sahf
lds
add
test
push
imul
pop
cmp
sti
popf
mov
mov
add
add
nop
cmp
mov
pop
cmp
push
jne
pop
lret
mov
add
pushf
jae
fst
add
repz
add
pop
xor
pop
sub
jb
sbb
adc
dec
incb
xorb
add
and
adc
cwtl
xlat
add
fsub
or
cmpb
mov
add
and
xchg
lret
dec
shr
mov
xor
lea
add
add
pusha
addr16
add
or
add
rcl
movsb
pop
mov
loopne
dec
mov
add
mov
push
mov
rcrb
push
ds
add
jb
pushl
int
sub
mov
push
pop
and
fsubrs
shrb
test
orb
es
add
idivl
cmpsb
pop
fcompl
clc
sahf
add
ds
jmp
cmp
nop
xchg
movlps
sub
and
and
and
in
gs
sbb
jb
mov
or
shrl
call
pop
ja
push
imul
xchg
cmp
inc
or
hlt
add
xchg
lock
mov
dec
rcrb
pushf
mov
daa
addb
pop
cmp
pop
add
js
out
lds
repz
add
dec
stos
pusha
xchg
sbb
mov
jl
addl
dec
mov
dec
pop
out
add
and
clc
jno
sbb
or
push
add
mov
cmp
js
cmp
and
add
inc
dec
inc
sbb
lods
xchg
aam
pop
add
mov
mov
pop
jle
loop
aas
adc
nop
sbb
hlt
sub
xchg
es
jo
mov
add
inc
dec
shll
sub
xor
jecxz
push
mov
cmp
and
xchg
xchg
std
add
xchg
jmp
and
or
push
dec
cwtl
loopne
mov
jo
mov
or
cmp
add
inc
iret
fstp
mov
int
mov
or
mov
dec
xor
mov
rcrl
jmp
xlat
leave
sbb
sbb
cld
dec
out
es
pop
pop
push
ret
inc
jle
cmp
add
dec
fnstsw
pushf
jo
add
xchg
fadds
sub
pop
fidivrs
jnp
movsb
test
and
push
sbb
add
pop
popf
mov
add
adc
cmp
or
mov
test
push
addb
das
push
inc
adc
push
sti
jl
add
dec
mov
stc
fimuls
xlat
mov
jle
add
adc
jle
push
into
and
inc
xor
insb
nop
jnp
and
int
or
mov
jno
stc
add
test
pop
movsb
xlat
xchg
mov
add
add
mov
dec
pushl
xchg
cltd
jbe
and
adc
popf
or
or
mov
cmp
outsb
cmpsb
pop
cmpl
lret
daa
insb
fldt
add
arpl
cwtl
jno
push
and
mov
pop
into
hlt
in
cld
mov
pop
add
xor
pusha
pop
sub
and
jg
cmp
push
add
add
arpl
int3
mov
ffree
daa
sub
lret
add
pop
lahf
mov
pop
in
nop
and
pop
jns
pop
pop
add
fwait
mov
xchg
mov
xchg
cmpsb
jo
jmp
mov
inc
or
mov
and
dec
jb
pusha
test
xchg
addl
mov
adc
decb
add
sub
or
add
pusha
call
or
fiadds
pusha
pop
add
xchg
loopne
mov
mov
pop
jmp
idivb
cmpsl
idiv
hlt
out
punpckhdq
icebp
jp
divb
call
sub
mov
add
lea
add
sbbb
dec
popf
nop
incl
stos
shrl
hlt
rol
add
jo
int3
mov
enter
push
jle
cmp
add
xchg
sub
ljmp
push
pop
shll
dec
sbb
sbb
lods
call
adc
sbb
or
mov
add
cmp
roll
je
dec
mov
sbb
pushf
add
leave
xor
jge
mov
aad
hlt
ljmp
fwait
jge
adc
push
mov
add
sahf
enter
add
aam
std
or
loopne
js
add
and
test
pop
adc
cmpsl
dec
adc
add
bound
dec
cli
or
mov
je
insl
daa
cmp
sbb
sbb
stos
pop
dec
idivl
xchg
pop
repnz
popl
xor
cmc
gs
jns
or
loope
sbbl
lea
dec
pop
xchg
or
mov
cmp
lds
insl
ret
push
mov
shr
cli
mov
dec
test
imul
inc
xor
push
sub
mov
xchg
or
sbb
sahf
nop
inc
testl
add
cmp
jnp
outsb
dec
add
inc
cmp
call
mov
push
add
dec
mov
pop
push
sbb
add
sub
aam
pusha
jmp
xchg
jo
jge
mov
lods
cmp
cmp
int3
aam
add
add
cli
sub
jmp
dec
jo
sbb
push
mov
push
inc
push
xor
movsl
int3
dec
gs
outsb
jg
add
pop
mov
pushf
cmp
roll
inc
inc
push
add
cli
jle
push
cmp
test
mov
mov
ret
sahf
jmp
xchg
xor
mov
test
in
and
das
add
data16
add
lea
xchg
jne
add
mov
or
mov
lahf
cmpb
movb
push
mov
add
sbb
add
shlb
inc
push
fadds
xchg
int3
sub
rcrl
add
sbb
test
repnz
bound
loopne
je
ljmp
adc
lods
repnz
mov
call
jle
sbbb
jbe
dec
add
pop
add
test
lock
add
push
aam
or
add
dec
mov
inc
or
mov
jo
rorl
testl
add
decl
stc
stos
xchg
add
xor
idivl
pop
sub
pushf
jns
and
mov
flds
push
loopne
lret
dec
xor
mov
movsb
sahf
xchg
xchg
imul
ficomps
enter
rol
cmpsl
and
add
push
push
add
cmp
inc
push
xchg
sarb
add
add
push
andb
or
lds
in
fmull
or
loopne
dec
adc
push
stc
lods
mov
adc
ud0
xor
xchg
in
jle
mov
add
out
add
add
loopne
or
sub
ja
mov
js
pop
sub
mov
neg
les
out
shrb
enter
test
add
cld
xchg
incl
leave
xchg
scas
pop
sub
mov
out
push
shr
pop
add
adc
nop
mov
addr16
rorl
adc
aad
dec
jl
add
fcmovnbe
mov
mov
sub
sbb
add
outsb
cwtl
mov
mov
nop
out
flds
push
sbb
sahf
xorb
sub
scas
jg
dec
xchg
pop
loope
mov
sahf
int
clc
mov
dec
jae
jo
or
lcall
xor
or
sbb
xchg
push
fimuls
push
mov
pop
add
jnp
pop
int
or
add
stos
mov
cmc
mov
popa
sbb
leave
mov
mov
roll
lcall
add
dec
fisttpl
pusha
scas
dec
sub
adc
adcb
arpl
scas
xor
lods
in
xor
test
push
or
sub
pop
out
call
push
hlt
sbb
add
push
lods
out
add
ret
add
movsl
sti
testl
push
into
out
aaa
or
mov
cli
push
adc
or
outsl
dec
je
iret
cli
pop
jae
inc
cmp
and
imul
add
fists
movsl
mov
sub
idiv
popa
add
sbb
sbb
imul
add
ret
add
sbb
hlt
jp
ljmp
or
dec
out
sbb
rorb
int
push
pop
lods
loope
aas
enter
test
sbb
pop
jmp
cmp
and
add
dec
mov
fstpt
data16
leave
test
jmp
and
or
add
out
bound
cli
sub
pop
gs
push
aam
cmovne
inc
mov
hlt
lds
sub
mov
add
loop
imulb
add
dec
and
fiaddl
adc
xchg
cmpsl
add
jb
popl
dec
add
and
mov
xor
mov
fiadds
fisubrl
loopne
popl
repnz
outsl
jno
and
add
mov
int3
add
mov
in
out
sub
insl
cmp
ja
daa
add
jae
addr16
sbb
add
outsb
mov
cmp
test
inc
ror
lock
adc
pop
fsts
xchg
pop
add
inc
rcr
mov
cmpsb
cmovnp
icebp
pop
dec
pop
mov
ds
mov
in
in
pop
push
add
packssdw
stos
add
mov
loope
stc
mov
xor
insl
mov
xchg
sub
in
add
add
aam
popf
cmp
insl
add
sbb
xor
ljmp
add
fimuls
arpl
dec
and
jns
cltd
testb
dec
in
call
fadds
loope
add
push
mov
ds
jmp
or
push
inc
out
aas
pop
je
inc
outsb
cwtl
add
fmull
test
dec
pop
mov
cmp
or
xorb
test
jbe
xor
mov
pop
arpl
xor
dec
cli
or
jmp
sbb
push
mov
bound
test
add
mov
sub
or
ret
shrb
inc
out
and
lock
add
lods
clc
mov
movsb
adc
xchg
mov
push
mov
add
jle
push
sub
movsb
shrl
lea
repz
pushf
out
cld
xchg
testb
inc
or
xchg
xor
mov
push
mull
xchg
ffreep
pop
es
fmulp
add
outsb
lods
mov
mov
mov
or
ja
or
cld
cmp
mov
mov
aam
inc
aaa
lods
leave
pop
jbe
cmp
cmpsb
adcl
lds
scas
add
add
data16
mov
enter
jb
call
push
sbb
in
add
stos
cli
jbe
pop
lret
out
jl
add
mov
or
repz
imul
inc
arpl
add
stos
gs
rorl
cmp
addb
xchg
add
addr16
in
mov
test
movsl
sar
and
mov
bound
lods
shrb
add
inc
mov
insl
test
inc
es
daa
mov
ret
cmpl
arpl
sub
sub
push
mov
pushw
in
fistpll
jbe
cmp
add
add
jae
pop
add
nop
inc
mov
movsb
add
mov
dec
rolb
dec
into
push
add
lods
movsl
xchg
lods
rcl
cmp
add
cli
imul
xchg
mov
int3
test
xchg
add
ds
mov
push
push
lods
imull
dec
jp
cltd
shll
repnz
je
add
fisttps
add
dec
mul
lds
mov
mov
xchg
incb
loopne
scas
and
cwtl
sti
add
xchg
or
movsb
adc
negl
cs
or
or
and
nop
xor
stos
aam
mov
mov
ret
xchg
aas
inc
sarb
stc
inc
add
lahf
leave
xchg
in
mov
int3
inc
icebp
xchg
testl
jl
mov
pushf
and
dec
jb
push
push
push
stos
filds
xchg
adc
aaa
pop
jo
adc
test
pushf
mov
xchg
pop
xchg
lock
xchg
sbb
test
dec
fldl
or
movsb
inc
cmp
or
cmp
add
fnstcw
jae
xchg
jmp
int
jge
adc
ds
inc
mov
out
xchg
and
inc
push
add
testb
cs
jg
adc
lcall
rcrb
push
cwtl
xchg
rolb
adc
sbb
jg
ficomps
or
lcall
pusha
pop
lahf
pop
add
scas
xchg
inc
in
sbbl
mov
add
cli
cmc
ja
lret
add
sub
sbb
sub
aas
mov
add
orb
add
outsb
out
sbb
pop
jo
push
add
gs
push
aam
jmp
lret
dec
fadds
xor
inc
lock
and
pop
out
push
push
int
xchg
mull
jb
rolb
mov
add
push
and
mov
adc
cmp
iret
and
adc
aad
ret
mov
mov
mov
dec
jp
inc
in
xchg
add
sbb
push
push
loop
xchg
xchg
push
add
aad
imul
cs
popa
repnz
cmovge
mov
push
ror
cs
pop
add
add
out
adc
fisttps
shrb
cmp
or
sub
pop
push
mov
inc
pop
fwait
shr
pop
add
mov
lods
add
jnp
add
fnstenv
div
xorl
adc
pop
stos
rolb
out
add
lock
fldenv
cld
adc
and
aam
outsb
add
shld
or
jg
lea
std
sub
subb
imul
add
mov
repz
clc
dec
ss
popa
mov
ljmp
mov
add
sub
sbb
inc
str
mov
and
push
cli
or
sar
sub
pop
add
pop
add
daa
mov
or
jnp
sbb
add
mov
sub
mov
jg
jne
cs
daa
fcomp
ljmp
pop
xchg
rcll
popa
jp
pop
jno
movsb
stos
test
dec
add
xchg
insl
dec
pop
or
hlt
cmp
test
lahf
cmp
shrl
sub
fiaddl
adc
aaa
push
sbb
ret
cmpb
hlt
pop
cmp
xchg
test
insl
mov
pop
rolb
imul
repz
jl
add
lock
sbb
add
out
mov
leave
roll
cmp
or
dec
test
loope
pop
cmpsb
ret
fstps
add
test
jne
in
cmp
mov
mov
int
clc
mov
js
push
push
mov
cld
sub
and
sahf
inc
inc
sbb
stc
inc
dec
or
and
aaa
js
push
cli
call
loop
int
pop
dec
jmp
les
addb
add
into
ss
mov
add
stos
mov
xchg
add
icebp
jno
shlb
ss
shlb
xchg
orl
dec
inc
push
mov
test
daa
push
rorl
repz
add
xchg
jno
or
test
out
daa
bound
inc
mov
roll
mov
sbb
mov
ja
fcompl
cmp
sub
xor
jo
push
popa
sti
fisubrl
mov
add
xorl
jp
xchg
call
jns
pop
pop
lahf
inc
sbb
dec
pop
out
testl
mov
dec
scas
dec
insl
jg
adcl
sahf
sub
lret
dec
mov
sbb
out
pop
add
stos
inc
push
xor
pop
incb
dec
popf
bound
in
in
sti
adc
sub
int3
enter
stos
leave
pop
fucom
add
push
mov
in
inc
add
jbe
bound
aaa
mov
jg
jmp
lcall
adc
subb
cltd
jnp
sahf
sti
test
gs
inc
ret
xchg
jne
pop
adc
push
daa
loope
pop
cli
orl
enter
add
inc
imul
cmp
or
pop
mov
lods
ret
repnz
mov
push
lock
cltd
and
pop
add
xchg
mov
mov
aaa
ss
fcompl
adc
mov
sub
and
daa
testl
dec
insb
std
add
repz
push
cmc
pop
mov
xchg
lret
sbb
jno
or
mov
gs
and
pop
movsb
cmp
dec
rsqrtps
clc
adc
sbb
xchg
ss
add
stos
ljmp
add
in
inc
stos
xchg
fnstsw
lahf
shlb
add
mov
lret
pop
cmp
iret
sub
mov
pushf
add
sar
ret
pop
mov
sbb
add
jae
outsb
jnp
add
adc
hlt
adc
repnz
and
push
mov
jb
cmp
adc
push
mov
repz
popf
xor
inc
or
filds
lea
lret
add
xor
in
lods
add
xor
push
inc
push
add
cmp
mov
sub
bound
int3
ljmp
shrb
jo
xchg
xor
loopne
adc
adc
insl
fs
pop
adc
pop
imul
jl
sar
mov
or
daa
js
add
insb
popf
dec
pusha
fiaddl
stos
testb
and
and
mov
je
test
out
pop
decb
jge
mov
cmp
repz
push
mov
sbb
push
add
sub
xor
mov
pop
dec
mov
ds
icebp
nop
mov
sub
outsb
std
xor
bound
adc
jp
fadds
call
je
adc
aam
les
adc
add
xchg
dec
imul
jl
sahf
test
sbbl
dec
add
mov
jno
int3
lds
jecxz
sub
sbb
flds
cmc
jl
inc
call
sbb
mov
shlb
shrl
cmp
jb
push
test
mov
daa
loope
insb
cwtl
inc
stos
movl
push
xchg
or
jns
rcrb
jl
add
repnz
les
sbb
pminsw
dec
fldcw
sub
adc
gs
push
in
mov
adc
mov
pusha
mov
sbb
add
fildl
xchg
push
sbb
jbe
or
shrb
mov
sahf
out
clc
mov
xchg
aad
sub
pop
jmp
rclb
mov
jb
xchg
shlb
mov
add
cltd
jbe
add
insl
lods
enter
pop
jns
call
sub
inc
adcl
xchg
nop
iret
lcall
adc
add
stos
std
shrb
or
jecxz
inc
xor
pushf
add
sub
sub
add
jo
and
add
mov
popf
ret
push
arpl
jb
push
and
es
mov
pusha
out
pop
mov
in
subb
xchg
add
and
cwtl
negb
mov
add
xor
xlat
nop
push
les
xchg
and
sub
mov
pop
sub
cmc
cltd
jns
daa
pusha
mov
pop
clc
test
mov
mov
xor
mov
sub
inc
movb
add
xchg
mov
and
fadds
enter
nop
lock
pop
lea
adc
xor
ret
negl
or
add
daa
das
addl
sub
fcoml
add
cld
and
mov
sbb
or
or
insl
in
inc
jle
jge
aam
mov
dec
ficoml
and
cmp
sub
mov
lods
stos
addb
mov
loop
pop
add
inc
in
lds
bnd
add
cmp
in
xor
dec
in
and
dec
push
xchg
pop
stos
pop
jecxz
xor
aas
lods
mov
xchg
push
add
sub
leave
xor
xchg
std
adc
lods
push
inc
add
loope
orl
jl
add
repz
or
sub
mov
cmp
sbb
pop
push
dec
jne
in
pop
adc
cmp
jle
xchg
jo
add
mov
cli
or
inc
xorl
insl
out
ror
push
adc
jnp
hlt
and
scas
adc
fildl
scas
xorb
xchg
xchg
out
cs
popa
adc
add
mov
mov
add
cmp
add
das
repnz
stc
adc
inc
arpl
sub
int3
adc
pusha
stos
out
and
adc
pusha
lock
daa
mov
add
cli
add
inc
add
cmp
cwtl
sub
mov
jp
cmp
sbb
sti
add
or
add
mov
inc
sbb
jnp
sub
xor
rcrb
xchg
mov
ds
rcll
addr16
add
jb
movsb
rolb
add
ljmp
sub
jle
jecxz
xor
mov
int3
fldt
lcall
and
movb
pop
cmc
mul
xor
jbe
pop
jmp
lret
inc
jp
add
pop
lods
lea
iret
lsl
mov
je
inc
adc
jmp
jnp
int
push
cs
dec
add
loope
lret
test
push
xorb
popl
dec
mov
pop
rorl
or
add
adc
add
inc
jmp
scas
aas
mull
push
out
jbe
jb
or
das
in
mov
clc
fnstcw
daa
int3
repnz
enter
push
add
int
scas
test
aam
imul
inc
sbb
add
lods
dec
dec
icebp
xor
dec
call
inc
addl
or
dec
imul
cmp
addl
adcb
cmp
mov
push
aad
in
out
and
popf
cmp
incl
adc
mov
inc
or
jecxz
sub
dec
insl
push
xor
xor
add
femms
push
test
add
lret
call
push
bound
arpl
addb
add
xor
icebp
rdmsr
xor
fadds
xchg
xadd
xchg
mov
fdivrs
or
enter
add
jnp
xchg
scas
daa
jmp
clc
dec
jle
pop
add
lret
bound
lahf
xchg
testb
addb
pcmpeqd
xchg
or
hlt
jmp
xorb
lret
mov
cmp
mov
xor
mov
dec
xor
add
stc
stos
loope
cmp
lock
jge
mov
add
in
lock
imul
mov
add
xchg
ss
pusha
cmp
add
add
mov
push
aas
mov
sub
fcmovnu
xlat
or
fldl
test
dec
out
add
cmp
lret
fimuls
test
and
test
mov
pop
push
push
in
fcoms
cmc
jge
insb
fdivrp
aas
lock
ss
sub
dec
pop
lret
xchg
adc
sub
popa
mov
xchg
push
std
push
aas
es
repnz
cmc
outsb
pop
lods
sub
stos
sub
mov
shll
sub
cld
enter
aam
fcoml
xchg
push
lahf
pop
sbb
fmuls
add
adc
mov
add
adc
loop
movsl
sbb
mov
ret
push
sub
fnstsw
and
jo
add
inc
cmp
mov
in
push
divb
add
repnz
add
mov
mov
sbb
mov
aas
mov
scas
add
inc
or
or
xor
int
mov
add
aas
push
xchg
cmpsl
or
loopne
mov
call
adc
adc
jl
lods
sub
inc
test
or
aad
aas
push
pop
test
pop
loopne
cmp
adc
and
fwait
stos
mov
aam
iret
mov
add
imul
lcall
sub
dec
cmp
in
sbb
icebp
cli
gs
test
ficomps
xor
pop
push
cmp
jnp
xchg
enter
lahf
mov
and
add
xor
add
add
addr16
test
daa
xlat
mov
leave
cltd
add
shl
push
aas
xchg
mov
jne
push
sahf
test
ds
add
adc
inc
and
cmp
and
loop
add
inc
pushf
popa
add
inc
insl
dec
lcall
xchg
xor
stos
xchg
scas
adc
cmpsb
call
aaa
mov
cmp
ljmp
leave
sub
add
cmpsl
mov
dec
xchg
faddl
filds
int3
mov
test
testb
mov
shll
push
mov
mov
out
add
int3
into
jp
sub
cmc
repz
es
aad
add
cmp
shlb
push
sbb
add
std
push
cs
dec
out
mov
add
push
jp
add
aam
cwtl
mov
add
add
data16
push
mov
or
xchg
adc
lahf
xor
dec
inc
inc
adc
xchg
clc
add
jg
add
ds
push
mov
lsl
pop
or
push
sahf
mov
std
jb
lods
pop
dec
aam
add
and
mov
xor
mov
rclb
add
mov
data16
adc
cmp
mov
add
call
sar
add
lcall
dec
test
add
repnz
mov
lds
mov
in
add
inc
pop
sti
repnz
pop
add
sbb
in
dec
xchg
fs
loopne
and
add
clc
add
test
fcom
pusha
sbb
outsb
dec
sub
stos
mov
sbb
pop
mov
pop
out
outsb
icebp
and
add
in
sar
dec
jnp
ds
sbbb
or
pop
loopne
sub
scas
js
cmp
into
add
jae
test
imul
repnz
cmpsb
stc
xor
or
inc
mov
add
xchg
push
cmp
xor
xor
test
xchg
stos
mov
pop
or
stc
test
adc
mov
or
pop
les
mov
mov
cmpsl
cli
xor
pop
jecxz
xorl
decb
pop
cmp
lea
fldenv
movsl
in
add
lcall
push
and
sbb
cmpb
jbe
mov
flds
movsb
insb
lock
fimuls
inc
jo
xchg
push
jno
cmp
fldl
push
inc
mov
mov
jae
mov
xchg
ljmp
hlt
jl
mov
xor
mov
fwait
dec
lcall
insb
incb
jo
lret
and
cli
in
xchg
bound
outsl
fdivs
add
lds
mov
lret
pop
mov
loop
orb
lret
mov
lods
stos
and
push
pop
cmp
xchg
xorl
adc
popa
jae
add
icebp
dec
inc
fcompl
push
mov
add
inc
inc
and
xor
push
mov
es
and
ds
dec
fisttpl
mov
mov
xchg
cmpsl
sbb
mov
sub
rorl
xchg
punpcklbw
dec
add
sub
xchg
or
scas
and
mov
pop
mov
sahf
push
lret
pop
push
jo
adc
les
push
adc
sub
add
add
daa
cs
bound
add
pop
cltd
xchg
dec
pop
mov
and
fbld
cs
repnz
push
call
and
fldcw
je
test
shrb
arpl
orb
js
xor
rolb
test
cmp
es
lret
jecxz
pop
xor
inc
loop
nop
sarl
test
or
add
movsl
jp
add
lcall
push
or
popa
pop
daa
pop
adcl
mov
ds
test
arpl
mov
pop
sub
lods
xchg
shr
xchg
pop
jo
ds
loope
repz
icebp
inc
add
das
mov
add
push
shll
arpl
cmp
pop
ds
shll
sbbl
mov
out
add
push
int
or
xchg
rclb
push
inc
xor
repnz
pop
add
std
cmp
and
jns
in
or
mov
lock
add
xor
movl
jo
mov
push
sub
mov
add
mov
mov
inc
sahf
cmpxchg
addr16
mov
xchg
dec
testb
ljmp
add
adc
or
aas
pop
aam
fdivs
or
pop
fistpl
ffree
outsl
xor
push
fmull
in
in
xor
add
lret
jae
movsl
cmp
lods
data16
sub
fistl
xor
push
inc
cltd
sbbb
je
cli
push
call
icebp
xchg
jle
jmp
push
cld
in
mov
mov
shrb
xor
add
dec
pop
jns
pop
fmull
pop
imulb
lods
ss
and
in
adc
push
fnsave
push
adc
and
imulb
mov
push
add
arpl
jne
jl
clc
mov
add
cmp
adc
push
add
fidivs
out
cmp
sbb
movsb
ret
filds
repnz
add
and
jecxz
and
pop
les
jg
pop
add
mov
add
add
test
icebp
add
test
sbb
rorl
xchg
push
mov
fnsave
xlat
fsub
sub
test
aam
pop
mov
adc
shlb
fdivrl
stc
sbb
leave
mov
subl
or
add
loop
xchg
cmpsl
popf
imul
add
or
movsb
clc
push
sub
repnz
adc
fsubl
pop
fadds
pop
pop
daa
sub
add
roll
icebp
sbb
stos
xchg
mov
push
xor
add
sub
pop
add
sub
push
sub
mov
pop
mov
je
add
xor
lret
rolb
cmpsl
adc
ljmp
xchg
mov
adc
jne
lret
cmp
push
or
pop
cs
push
data16
or
and
fs
cli
movsb
lock
sbb
xchg
loope
shrl
jns
and
push
les
jle
dec
add
sub
es
or
jb
jmp
test
jns
and
loopne
sbb
xor
add
outsb
mov
inc
push
add
stos
sbb
mov
xor
scas
adc
or
mov
enter
hlt
pop
sub
fadd
push
xor
hlt
mov
push
pop
add
dec
push
mov
movsl
popf
pusha
cmp
xor
push
push
add
shll
sub
add
mov
pop
add
push
int3
and
fcomps
and
and
sub
jg
add
ret
jge
loopne
add
shll
popa
loope
sarl
jno
and
add
mov
test
sarl
mov
jb
mov
inc
int
add
xor
inc
jnp
add
rcl
lock
repnz
popf
mov
pop
test
cli
add
mov
pop
add
add
rolb
and
js
mov
xchg
repz
xchg
add
jbe
outsb
mov
shrb
daa
pop
sbb
inc
ret
loop
xchg
mov
fwait
inc
pop
sbb
repnz
test
add
xor
and
into
pusha
cmc
dec
pop
add
lods
js
sahf
nop
xchg
fwait
inc
xchg
stos
lock
jp
repz
pop
sbbb
mov
das
rclb
xor
in
push
pushf
inc
mov
sub
in
jl
xor
pop
fldcw
sbb
dec
dec
inc
add
aam
push
and
addb
sub
test
jb
push
ss
push
add
pop
or
pop
add
pusha
adc
cli
pop
inc
inc
movsb
andl
lods
jmp
adc
push
loope
test
adc
cli
add
shrl
adc
adc
and
xor
cmp
jb
jns
std
xchg
aad
arpl
lods
call
insl
popf
inc
icebp
add
jmp
push
adc
add
dec
cmp
testl
mov
adc
xchg
push
push
int3
adc
popa
test
adc
xchg
vmread
or
or
lock
repz
or
cli
or
inc
or
cmc
or
add
popf
sbb
std
adc
xor
pop
rcll
clc
and
adc
and
adc
sti
cltd
sbb
fistl
inc
cmp
adc
xor
xor
int3
inc
xchg
adc
loopne
rcr
and
cld
pop
stc
pop
pop
push
push
bound
jo
notb
push
mov
test
inc
dec
adc
adc
sbb
xor
pop
and
dec
add
and
popa
call
mov
xor
xchg
cmp
bound
add
outsl
pop
and
xor
or
mov
jns
xorb
or
dec
fsubrl
ror
std
cltd
pop
adc
or
loopne
cmc
rol
and
adc
pop
mov
xchg
loopne
cmp
insb
pop
sbb
fnstenv
decl
adc
pusha
mov
add
inc
sbb
jmp
mov
push
mov
dec
xor
mov
cltd
and
jae
xchg
sbb
andl
mov
sbb
push
pop
or
test
inc
pop
int3
adc
push
mov
stc
bswap
out
or
and
iret
icebp
xchg
dec
xor
cmpsb
sbb
jbe
jnp
xchg
loop
popf
js
data16
rolb
aad
pop
xchg
jne
imull
xor
adc
adc
cmp
mov
out
adc
clc
push
inc
nop
loope
xchg
test
mov
sub
sbb
mov
pop
into
xor
test
jmp
rolb
adc
push
sbb
adc
add
xchg
jno
pop
adc
cld
push
cmpsl
pusha
arpl
out
je
mov
mov
popf
sbb
ret
or
test
cmp
sub
xor
rorl
xor
sub
xor
add
push
pushf
lods
or
stc
test
push
adc
and
xchg
sbb
pop
or
push
xor
mov
mov
sub
ret
pop
shll
mov
and
cli
fldl
fsubrs
popf
pop
adc
mov
cwtl
xchg
inc
fcmovb
aam
js
inc
xor
cmpb
inc
test
push
adc
inc
and
test
adc
js
inc
data16
mov
inc
test
movsb
sbbb
mov
sub
dec
in
js
sub
jbe
adc
push
mov
jo
dec
fmuls
flds
jge
cmp
xchg
fs
inc
inc
fimuls
push
and
mov
inc
cwtl
inc
filds
cmp
std
and
js
xor
push
mov
add
push
pusha
inc
fistpll
mov
pop
pop
jo
xchg
inc
clc
movsl
xchg
xchg
pusha
adc
mov
rclb
and
rolb
add
js
xor
and
mov
dec
jo
sbb
adc
cmpsb
loopne
sub
rcrb
pusha
insb
fildl
inc
push
push
pusha
and
mov
rolb
push
andb
clc
mov
ret
cmp
test
lods
adc
inc
orl
rolb
cmpsb
jno
add
adc
mov
je
sbb
cmp
xadd
and
ds
ds
or
or
popf
mov
sbb
frstor
mov
and
ret
mov
mov
sbb
cmpsl
dec
aas
rcl
push
adc
and
cmpsb
int3
mov
popa
mov
push
or
push
push
ret
sbb
push
insb
movsb
cltd
js
mull
xor
mov
mov
aad
mov
mov
dec
mov
and
sub
sub
mov
test
enter
fldl
lods
or
jns
data16
or
cmp
nop
subb
mov
dec
addl
icebp
dec
andl
bound
rcr
loopne
fs
xchg
pop
jle
lock
or
push
stos
push
fisttps
lock
pusha
data16
mov
sbb
insl
les
add
sub
sbb
xor
aad
loopne
lret
add
mov
pusha
popf
xor
cltd
pop
inc
repnz
fs
xlat
mov
xorb
dec
ja
inc
mov
xor
aam
push
stc
std
pop
adc
ss
pop
cmp
add
dec
movsl
mov
sti
popf
mov
xor
push
dec
xor
test
xchg
xchg
movsbl
imul
aad
xchg
or
add
dec
into
add
jne
pop
int3
or
pop
inc
pop
fs
mov
cmp
hlt
out
push
mov
xchg
adc
jae
lahf
lret
xchg
add
mov
xor
jge
add
add
xchg
stc
dec
loop
test
xor
add
xorl
xor
sbb
and
repz
xchg
or
jb
jmp
das
or
sub
mov
clc
pop
add
mov
xor
mov
cmc
int
addr16
pop
jae
fs
add
aaa
cmpsb
int3
add
sbb
jg
add
inc
out
ficoml
jmp
add
stos
stos
xchg
and
xlat
mov
lcall
dec
add
xor
iret
mov
mov
jle
add
adc
pop
and
iret
fucom
loopne
push
loop
jno
add
insb
cmp
add
cmp
fwait
pop
pusha
add
mov
pop
mov
scas
xor
add
out
inc
add
add
in
std
push
sti
dec
inc
addr16
add
add
mov
jne
add
mov
add
clc
xor
and
push
and
int3
pop
adc
or
add
arpl
stos
fwait
sbb
pushf
xor
inc
insb
or
pop
mov
and
push
ret
push
jecxz
inc
jl
add
stos
in
lret
aas
adc
sahf
jbe
pop
lods
sbb
jmp
adcb
jne
add
dec
insb
lods
add
xchg
mov
nop
sahf
xchg
ret
scas
call
mov
inc
fwait
jnp
pop
add
xlat
or
lcall
clc
imul
rolb
jno
addb
iret
loopne
add
lods
inc
add
or
adcb
data16
pop
dec
add
sub
or
fisttps
sbb
mov
data16
bound
add
cmc
adc
repnz
aaa
add
lds
roll
mov
leave
add
fiadds
fnstcw
cmp
lds
jecxz
mov
sbbb
popf
cli
adc
call
mov
xor
mov
add
jmp
rcrb
or
dec
jb
insl
mov
sbb
cmp
mov
add
out
and
and
xchg
add
andl
mov
mov
jge
ja
lods
add
cmpsb
in
and
test
add
dec
sbb
fildl
xor
xchg
dec
xor
arpl
imul
jns
rolb
leave
or
jnp
iret
adc
dec
xor
imul
add
in
cs
sub
add
xor
idiv
pop
add
pop
jge
mov
cmp
inc
test
push
rolb
xor
add
cmpsl
out
pop
and
pop
cmc
add
fmul
out
jg
mov
xchg
push
add
addb
push
nop
jmp
xor
insl
dec
mov
dec
jp
incb
xchg
enter
lods
mov
int
in
jp
nop
cli
push
jmp
inc
sbb
mov
stc
mov
lret
int
mov
daa
mov
mov
gs
sub
cmp
pusha
mov
shl
xchg
std
fiaddl
cmp
popa
push
fmuls
test
out
xchg
mov
xchg
rclb
add
cmc
rolb
push
add
xor
add
pusha
movsb
inc
es
jp
mov
stos
mov
xchg
push
sub
dec
sbb
cmp
mov
xchg
nop
cmp
cli
mov
and
fdecstp
bound
add
stc
hlt
mov
xchg
push
jne
mov
xor
sahf
push
push
add
xchg
loop
add
jp
std
clc
fadd
push
dec
loopne
add
xor
lods
adc
movsb
cmp
add
ds
jne
cmpsl
mov
out
int
popl
push
shrl
add
in
add
xor
mov
sbb
mov
inc
scas
add
add
aaa
add
pop
pop
push
and
lea
test
shrb
inc
push
add
test
inc
clc
rolb
jl
dec
mov
jo
xchg
imul
test
loopne
jg
lret
out
scas
add
imul
jecxz
cwtl
jns
das
je
cld
lea
sub
lds
fidivrl
mov
out
jmp
mov
fisubrs
xchg
cmc
dec
add
or
insl
jecxz
ljmp
cmp
inc
ret
xchg
xchg
sbbb
cld
scas
jb
sbb
loop
push
fidivs
movsl
cmp
cld
or
sbb
jb
add
loop
fiadds
xchg
stos
jbe
lock
cs
add
xor
sbb
rol
add
mov
add
iret
hlt
fnstsw
mov
in
rorb
sub
cmc
into
xor
sbb
ret
lock
mov
sbb
jle
mov
mov
jno
xor
push
loopne
cmp
push
jbe
lock
add
jg
pop
cmp
psubsb
push
jnp
setae
xor
jo
and
mov
and
addr16
pop
inc
fisubrs
leave
mov
mov
mov
out
fadds
add
sub
pop
add
add
loope
sub
xchg
ret
addl
inc
mov
dec
insl
pop
imul
test
in
cwtl
imul
mov
cmp
jo
es
pop
mov
cmpsl
adc
xor
dec
mov
in
xchg
loopne
stos
nop
cmp
std
into
int
shlb
aad
jb
and
add
testb
push
or
clc
fs
add
or
add
push
add
jle
xchg
mov
add
rcl
test
inc
pop
into
add
push
stos
add
mov
add
ret
mov
jns
repz
repnz
add
in
incl
andw
fsub
js
mov
lret
pop
add
jno
mov
add
ljmp
jl
js
cmpsl
push
adc
add
sub
out
xor
add
mov
out
pop
cmp
add
mov
add
inc
vpcmpgtw
add
pop
shr
sbb
add
pop
sahf
add
and
add
dec
inc
mov
notb
clc
cmp
in
std
jns
adc
arpl
mov
test
lret
mov
pop
repz
dec
mov
addr16
jmp
cs
add
rcll
and
nop
lea
jb
pop
xor
add
fldenv
add
mov
mov
sbb
hlt
adc
add
cmpsl
aas
stc
mov
pop
sbb
insl
jmp
sbb
lods
ror
aas
inc
rorl
test
pop
aam
jae
hlt
cltd
or
aas
push
int3
cmp
lock
jle
sbb
sbb
flds
sub
ja
push
push
adc
and
jecxz
add
cmp
mov
sbb
arpl
and
mov
push
and
sbb
mov
stos
mov
and
ds
add
jecxz
push
jae
jl
sbb
mov
add
pop
xor
mov
mov
jge
and
clc
lds
pop
xor
sbb
add
mov
sti
pop
sahf
js
insl
inc
mov
int3
rorl
iret
mov
pop
pusha
add
mov
add
aas
fcmove
push
roll
jne
loope
das
cmc
in
add
loop
shll
mov
repnz
movsl
add
dec
insl
sub
je
and
inc
add
pop
add
or
sub
add
cmp
mov
ret
gs
add
fstps
mov
jp
cwtl
in
pop
out
ja
dec
mov
and
and
jp
scas
pop
std
insb
movsl
add
ss
stc
sbb
pop
mov
in
sub
fisubs
and
push
imul
into
pusha
outsb
xor
arpl
push
jae
mov
add
mov
jecxz
adc
add
fs
push
pop
xchg
add
jle
mov
clc
cmpsl
add
and
imul
idivb
jl
dec
or
test
adc
add
in
sbb
movsl
sub
cmp
scas
add
inc
ret
jns
sarl
sub
mov
sbb
and
cmpsb
mov
pop
mov
int3
call
sub
jmp
jo
mov
mov
clc
sbb
pop
adc
or
sub
or
insl
nop
mov
jg
loopne
loop
pop
test
push
aas
push
dec
push
mov
in
lcall
movsb
xor
test
jne
pop
int
xchg
stc
add
sbb
data16
pop
add
mov
stc
sbb
adcl
js
add
fs
fcomi
leave
aam
sub
push
add
lret
vucomiss
imul
xchg
out
sbb
pushf
adc
hlt
mov
in
mov
push
pop
pop
sarl
mov
mov
push
xchg
ja
mov
mov
ret
mov
jno
loopne
add
bound
add
leave
sti
add
loopne
xchg
jno
push
roll
cmp
hlt
or
dec
cmp
cmp
add
sbb
mov
dec
inc
enter
loope
rol
xor
or
movsb
mov
jo
test
sub
in
adc
inc
pushf
stos
add
nop
add
pop
loope
jbe
iret
sarl
fsubrs
sbb
fistpl
icebp
rclb
add
shrb
jo
xor
and
push
dec
cmp
add
lahf
popl
divb
push
call
loope
repnz
aaa
inc
aas
push
insl
dec
aad
pusha
cli
repnz
or
ljmp
mov
add
lcall
add
jno
or
jg
jbe
add
mov
test
out
xchg
lret
push
xchg
add
jecxz
leave
add
add
dec
or
mov
in
addr16
mov
jp
push
ja
sbb
cs
adc
add
pop
adc
xor
add
cmpl
sub
das
jle
mov
dec
lock
add
sbb
push
inc
scas
lret
lahf
loopne
les
pop
je
or
repnz
push
fsts
push
icebp
subb
lea
sbb
movsl
inc
xor
rol
and
enter
mov
lret
xlat
ja
mov
pusha
std
xorb
add
lods
and
bound
dec
fstpl
fadds
std
cld
mov
mov
add
and
mov
push
bound
ss
xor
je
aad
pop
mov
inc
add
test
mov
mov
add
jmp
cs
add
push
mov
cmp
dec
sahf
xchg
cld
add
arpl
into
lret
cmpl
pop
lock
sbb
adc
fisubs
pop
sub
push
add
psubb
add
mov
inc
insl
lcall
cmpsl
inc
stos
test
add
leave
cwtl
out
sub
mov
inc
test
dec
je
mov
and
out
add
fcomi
loope
or
rolb
xchg
mov
ja
add
inc
enter
inc
cmpsb
mov
movsb
xor
pop
add
adc
fisttpll
lret
pop
add
xchg
xchg
jae
repnz
inc
add
mov
mov
mov
push
dec
fisubl
jl
jo
jno
add
xchg
adc
mov
add
xlat
push
pop
adc
shl
test
cmp
xor
cmp
adc
push
ret
out
insl
loopne
push
add
mov
pop
and
rcl
add
into
jno
add
mov
or
icebp
xor
loope
mov
int
jp
lea
xchg
add
push
push
mov
shrl
push
mov
add
inc
fsubp
inc
add
arpl
mov
ja
jo
cld
mov
add
lods
sbb
test
and
mov
and
fs
add
lret
jne
lcall
mov
hlt
dec
pop
xchg
and
dec
push
mov
jecxz
popa
xor
fmuls
xor
call
fcoml
cltd
iret
bndldx
lret
pop
stos
lods
pop
jp
loop
dec
add
call
or
add
outsl
add
movsl
loopne
lods
insb
ljmp
xor
cmp
dec
cmpsb
addb
dec
sub
repz
sub
insl
and
rcrl
mov
add
mov
xlat
pop
ret
scas
mov
movsl
mov
add
sbb
pop
add
repz
inc
add
dec
mov
mov
push
inc
jb
jle
xchg
mov
imul
fld
fdivrs
lret
or
sub
jnp
rolb
xchg
pop
mov
xchg
jp
or
ljmp
rcrb
pop
pusha
xchg
sbb
push
cmp
add
dec
movsb
cli
repz
jmp
es
mov
push
fdiv
or
sbb
test
add
mov
pusha
in
movsl
lods
mov
fwait
sbb
cmp
lahf
sbb
jae
stos
adc
les
in
add
add
mov
sub
mov
lock
mov
add
std
jmp
add
add
mov
push
notb
jge
lods
gs
mov
add
add
sbb
xlat
into
mov
mov
pushl
sub
add
jge
and
inc
and
add
insl
sbb
add
ljmpw
int
push
bound
popf
jmp
adc
inc
dec
xchg
mov
adc
jl
dec
sbb
add
fists
mov
sub
rolb
add
push
xor
adc
mov
mov
push
add
dec
sub
loopne
add
jo
leave
add
xorl
cwtl
fildl
nop
dec
rolb
inc
fldenv
lret
mov
xor
imul
fdiv
testb
xlat
shrl
inc
bnd
out
sarl
push
jno
add
or
fadds
cmp
arpl
repnz
insb
pop
xor
or
fs
mov
shl
pop
add
push
xor
faddl
pop
pop
sub
cmp
lock
cmpsl
mov
sbb
pop
sub
cwtl
add
repz
push
cmp
fdivrs
pop
popf
xchg
out
push
sub
add
je
outsl
add
mov
scas
aas
imul
loope
push
in
xor
arpl
sbb
gs
std
fstl
lods
call
cmpsl
mov
cmpl
clc
dec
icebp
stos
xor
mov
lcall
push
mov
mov
cld
stos
lret
push
lods
or
jl
sbb
ds
push
add
icebp
cmpsl
movsl
shll
lahf
test
ret
pop
and
daa
cli
insb
adc
das
sarl
fadds
cltd
sbb
test
mov
jb
sbb
xchg
mov
ljmp
jmp
push
cwtl
and
jns
cmc
add
in
jno
cmp
cmp
and
nop
add
xchg
fsub
add
stc
add
pop
push
lock
mov
mov
clc
in
add
gs
add
cmp
dec
cmp
push
mov
mov
les
lock
push
popa
add
sbb
sahf
sub
pop
lret
loope
lock
xchg
add
add
fcomps
mov
dec
mov
add
push
stos
xor
sbb
add
xchg
arpl
and
ja
push
ja
pop
inc
loopne
cmp
in
add
mov
or
dec
sub
jl
add
push
push
jle
test
adc
cld
mov
call
push
add
push
mov
push
movsl
out
add
pop
cmpsb
dec
fcmovu
cltd
int3
mov
cmp
push
and
dec
push
lods
les
xchg
insb
and
mov
push
mov
inc
in
dec
sbb
add
insb
in
pop
sbb
imul
or
movsl
jmp
push
fimull
shrl
dec
cmpsl
lret
inc
or
js
mov
arpl
jo
leave
lea
test
std
nop
fwait
add
push
imul
lret
jns
jne
lods
loop
add
hlt
mov
andl
mov
mov
or
and
xor
pop
imull
mov
sahf
mov
dec
and
jecxz
add
into
lcall
stos
iret
adc
das
cli
paddusb
jae
leave
ret
repnz
scas
lea
pop
push
add
and
pop
sahf
jp
jl
out
lret
cwtl
add
add
test
call
push
in
adc
negl
add
shl
inc
iret
pop
adc
xor
add
or
movsb
or
xchg
and
mov
int
inc
nop
mov
mov
mov
out
add
ds
sahf
dec
pop
lahf
pop
fimull
jbe
pop
std
lret
sbb
pushl
rcrb
sub
pop
fdivp
clc
arpl
sbb
lret
mov
add
xor
add
pop
xchg
add
inc
hlt
sub
fists
shlb
jle
add
and
ret
ljmp
stc
pop
jp
jbe
add
test
jns
ja
stos
mov
pop
push
or
cmpsb
xchg
add
add
test
and
cmc
incb
adc
enter
xor
pop
mov
cmp
test
int3
push
mov
rorb
dec
loope
xor
das
dec
out
enter
add
test
filds
ja
stos
mov
out
jle
add
add
pop
add
jge
add
iret
fdivrl
mov
add
cmp
dec
mov
add
xchg
push
xor
pop
xor
test
cmpsl
andb
out
out
sahf
insb
stos
shlb
adc
jnp
lea
pop
andl
nop
inc
mov
or
push
lret
inc
fcoml
add
data16
pop
aaa
xor
cmp
push
pop
in
pop
lahf
icebp
mov
cmc
jl
add
movsl
cld
imul
sub
in
inc
fmull
add
lock
and
add
rcrb
adc
cs
stc
ja
insl
sub
data16
pop
rorl
js
xchg
cld
ret
adc
sub
into
add
lock
sbb
jecxz
xor
push
xchg
mov
test
push
xchg
pusha
mov
add
sahf
mov
xor
lods
movsb
fnstcw
fiaddl
fs
fidivs
and
pop
add
pop
movl
cmp
hlt
pop
insb
imul
inc
lret
int
fs
jmp
jecxz
outsb
mov
adc
and
push
dec
xchg
ja
imul
sbb
icebp
pop
enter
stos
xchg
inc
aam
mov
sbb
pop
xchg
mov
pop
adc
sahf
into
sub
push
data16
sbb
popa
or
jge
add
adc
cltd
adc
pusha
addl
rcll
sbb
sbb
outsl
sarb
jp
add
stc
enter
hlt
adc
setno
xadd
add
xchg
lds
data16
lods
jg
add
fcmovnb
mov
js
jo
add
jmp
cs
stos
add
daa
mov
mov
add
movsl
mov
loop
mov
pop
add
lods
fdivr
add
ret
data16
pop
pop
repnz
sbb
mov
cld
insl
out
sti
xchg
lcall
subb
movsb
mov
mov
xor
cmp
dec
popf
lret
inc
pop
xchg
pusha
call
rclb
add
dec
shlb
xchg
dec
push
adc
cmp
or
mov
in
incb
inc
adc
loopne
sbb
je
dec
add
xchg
pusha
adc
cmpsb
cltd
jl
test
mov
jo
xchg
roll
cmpsl
mov
sbb
sahf
repz
dec
aas
pop
movntps
sbbb
jge
mov
add
rorb
out
jne
add
xchg
mov
xor
rclb
aam
incb
test
push
imul
add
push
xor
mov
inc
cmp
mov
insl
and
and
sub
pop
add
mov
inc
and
sbb
push
jo
add
out
inc
jecxz
imul
in
add
cmpsl
dec
mov
cmpsb
push
mov
mov
loopne
mov
add
in
cmc
fiadds
sbb
jge
insb
movsb
or
mov
add
call
mov
dec
mov
testb
aaa
xchg
call
hlt
mov
sbb
loop
ljmp
pop
ss
push
dec
iret
je
sbb
and
orb
in
adc
xor
dec
adc
xor
mov
jno
add
fcmovnb
sub
xlat
sub
mov
test
fidivs
nop
push
jb
cmp
sbb
adc
push
adc
mov
mov
int3
and
lcall
dec
mov
xchg
aas
add
push
test
and
outsb
xchg
or
and
and
and
push
cmp
insb
cld
pop
and
add
push
inc
insb
negb
xor
or
loop
mov
int
outsl
lret
enter
ret
dec
mov
outsb
inc
mov
pop
pop
inc
cwtl
sbb
add
call
hlt
lahf
leave
dec
jno
sbb
in
cmpsb
jo
push
pushl
pop
jae
and
insl
inc
jl
movsb
loop
cmpsl
enter
xchg
ficomps
and
xor
out
add
loopne
jbe
xchg
mov
pop
out
mov
gs
mov
sbbl
xor
sbb
shlb
lock
call
and
dec
insl
inc
dec
dec
shrl
push
hlt
aam
adc
jl
add
out
outsl
mov
arpl
or
mov
nop
add
scas
adc
xor
aad
daa
pop
and
or
clc
rorl
adc
aaa
push
js
ret
push
and
repz
add
andl
mov
lds
and
leave
cli
mov
cs
add
xchg
sub
mov
rolb
mov
xchg
stc
push
enter
push
ds
out
gs
sbb
sbb
shlb
sub
outsb
je
ds
pop
lahf
gs
andl
pop
fists
int
cs
mov
inc
mov
dec
nop
imul
sub
lods
or
jns
sbbb
sub
popa
sub
imul
add
fimull
cmp
addr16
clc
data16
das
add
jnp
inc
sbb
cmpsl
leave
and
scas
mov
jae
aaa
out
pop
ror
rolb
dec
or
inc
cmp
outsb
popa
insb
call
fnstenv
add
jle
cwtl
xchg
mov
mov
pusha
scas
mov
push
xor
popa
nop
negb
in
mov
es
ljmp
data16
int3
in
add
scas
cld
loopne
shr
or
xor
pop
andb
or
sbb
out
ret
in
pusha
add
stos
add
lea
jbe
pop
add
sub
int
lock
pop
sub
inc
xchg
jno
stos
add
mov
ret
lock
sbb
pushf
sbb
lret
xchg
mov
sub
add
leave
mov
adc
scas
add
rclb
add
negl
push
and
mov
cmp
cmp
add
ds
aad
mov
pop
jl
stos
xor
xor
mov
pushl
jge
add
stc
add
mov
rcll
aam
lea
fsubrl
es
mov
loopne
dec
fwait
inc
xor
mulb
sahf
addb
ret
iret
add
mov
lock
add
mov
dec
movsb
daa
nop
inc
add
xor
adc
sahf
sub
xchg
pop
fs
adc
das
inc
aas
into
nop
push
scas
shrb
add
stos
push
lret
loopne
fcom
dec
adc
cmp
in
das
sub
add
jne
clc
mov
shrb
inc
sbbl
enter
addb
clc
sub
int3
dec
mov
add
gs
in
clc
push
jns
xchg
pop
cwtl
sbb
pop
add
out
add
add
lock
fsubl
data16
fstpt
insb
js
int
pusha
xor
push
add
enter
lods
orl
mov
stc
psubw
mul
or
mov
sub
jne
mov
lds
inc
mov
clc
scas
imul
xor
add
or
scas
jmp
xchg
jae
adc
ds
or
mov
xor
mov
mov
and
xchg
cmp
add
or
stc
pop
cmp
fsubrl
add
or
out
call
inc
lret
fistps
inc
dec
and
add
pusha
inc
sub
pushl
mov
sbb
les
pop
inc
lret
fs
jg
add
sbb
stc
push
mov
xor
sbb
repnz
pusha
incl
aaa
lea
pop
pusha
push
mov
push
add
jno
mov
rorb
lret
lods
push
adcb
fs
cwtl
xchg
mov
inc
add
ss
or
sub
inc
push
sbb
xlat
call
gs
lods
xchg
pusha
sub
addr16
loopne
add
out
pop
or
mov
sbb
add
mov
push
lock
int
fadds
push
xchg
or
movsl
sbb
inc
jns
dec
inc
push
decb
add
pop
and
ficompl
shl
dec
mov
push
out
movsl
add
ss
leave
lret
in
flds
sti
fldl
inc
pusha
hlt
mov
pusha
out
sbb
filds
or
xor
in
pop
pop
sub
push
jb
or
cmp
adc
jo
mov
lret
dec
leave
call
popa
ret
ja
pusha
stos
push
cs
jbe
xor
or
push
adc
pop
iret
sub
dec
bnd
addr16
fadds
jmp
adc
inc
mov
jb
test
push
adc
jmp
mov
lock
sbb
adc
mov
mov
ret
jo
or
or
xor
xor
bound
push
andb
sbb
pop
ljmp
leave
call
sbb
xor
cmp
test
sbb
cmpb
addr16
xchg
nop
pop
dec
jbe
dec
dec
cmp
xchg
mov
cmp
arpl
jne
add
lock
mov
cmpsl
mov
jne
lret
sub
sub
sub
pop
iret
pop
out
mov
aam
xchg
xchg
nop
fildl
inc
jg
and
rcrb
call
std
fldl
push
test
add
jne
sbb
loope
out
push
lds
sbbb
jno
push
int3
fisubrl
loope
adc
fidivs
mov
jne
push
mov
outsl
cmp
push
inc
cmpsl
sbb
mov
popa
cli
divl
sti
scas
pop
into
or
call
leave
imul
les
scas
or
call
cmp
and
nop
cltd
add
xchg
pop
rcrb
ja
in
cmp
fs
fidivs
cmp
push
jae
add
movsb
push
in
mov
adc
or
mov
mov
pop
mov
mov
mov
or
or
scas
call
sbb
xchg
mov
dec
lea
fldcw
and
arpl
push
xor
stc
int3
or
loopne
pop
cmp
lds
add
dec
lret
sbb
jmp
loop
arpl
add
lahf
fidivrs
or
or
sub
xchg
inc
or
jno
lock
mov
rorl
cltd
add
jecxz
rcr
rolb
lea
or
mov
int3
jp
or
lcall
xor
add
jne
data16
lods
jmp
push
add
adc
add
pop
in
aam
mov
lret
int3
jbe
mov
pusha
fld
popf
jp
dec
inc
inc
dec
adc
subb
xlat
cmpsb
aaa
fbld
je
push
call
dec
dec
mov
fsts
idivb
icebp
sbb
and
cmpsl
add
jg
add
sti
fdivrl
fsubs
push
jb
jge
sarb
dec
inc
sbb
add
fs
pusha
cltd
and
iret
mulps
mov
jae
add
mov
inc
lds
pop
jmp
mov
and
inc
scas
loopne
and
inc
add
sahf
xchg
mov
sub
adc
push
mov
test
xchg
fisttpll
outsb
fwait
bound
or
adc
mov
pop
imul
sti
xorb
call
sbb
dec
dec
cmp
sbb
pop
inc
xchg
mov
js
and
push
inc
jno
roll
pop
repz
inc
inc
or
inc
add
fadds
das
scas
xlat
fbstp
in
addl
shlb
lock
pop
inc
mov
add
cmc
pushf
pop
mov
jge
sbbb
cmp
es
mov
jb
rcrb
jl
add
add
pop
add
std
jge
lret
jle
ljmp
pusha
loope
add
inc
cmp
pop
mov
mov
lret
call
pop
push
xor
repnz
adc
sub
in
mov
mov
into
icebp
jl
fsubrl
and
ret
inc
or
pop
adc
push
fdivrl
add
pop
shlb
pop
nop
inc
pop
cltd
cli
loop
popa
ror
and
xchg
outsl
pop
lods
jg
popf
add
push
push
sbb
push
and
push
cltd
push
inc
push
cwtl
rcrb
or
adc
in
inc
mov
mov
subl
add
repz
sub
mov
add
pop
stos
lods
sbb
loopne
shlb
inc
enter
les
lods
repz
fcoms
add
popa
in
pop
inc
stos
push
jle
in
mov
pop
lods
push
je
push
xchg
sbb
jecxz
add
add
loopne
add
push
jno
popa
or
add
imul
cwtl
mov
sub
mov
nop
inc
out
mov
test
inc
and
or
xchg
in
stos
out
mov
xor
cmp
add
ljmp
fsubrl
cmpsl
jb
push
movsb
out
or
xchg
or
and
outsb
cmp
and
add
add
or
popa
push
cmp
adcb
add
pop
add
lret
punpckldq
pop
mov
add
insl
lds
fimull
pusha
mov
idivl
mov
dec
inc
enter
bound
pop
subb
sub
ljmp
xor
and
sbb
jbe
cs
lcall
or
aad
or
pop
or
inc
nop
inc
mov
jne
out
add
push
lahf
add
iret
adc
js
jp
add
xor
imul
push
les
cmp
out
jge
pop
ljmp
or
add
nop
gs
add
scas
faddl
mov
in
enter
into
scas
pop
addb
loopne
push
sub
xchg
pop
jae
mov
mov
dec
sub
add
movsb
pusha
push
mov
adc
mov
mov
xchg
cmpsb
adc
aad
jge
fists
inc
sbb
jl
pop
pop
outsl
add
insl
fisubrl
push
or
push
or
inc
add
pop
lods
inc
int
orl
push
push
cmp
or
jl
mov
sbb
and
jl,pn
lock
mov
xor
outsb
adc
and
mov
rolb
xlat
scas
push
add
and
pop
add
addb
and
and
lock
aas
mov
xchg
sub
lret
sub
jb
jne
add
fsubl
dec
aam
push
mov
pusha
xor
lods
fwait
addb
jmp
in
imul
or
fsubr
pop
cmp
notb
aaa
jne
shlb
push
xor
sahf
call
and
lods
ret
mov
or
xchg
test
sub
mov
and
fsubl
loop
push
dec
push
jl
xchg
push
dec
add
popa
cmpsb
out
test
cmp
loope
mov
fadds
fdivrl
add
sarb
and
jbe
imul
jae
out
pop
and
mov
sub
jns
lcall
fwait
imul
sub
push
or
es
push
jno
and
fsubrs
and
add
fistpll
loopne
subb
pop
enter
jg
pop
add
xchg
pop
aam
xchg
les
add
sbb
jbe
jnp
add
and
insl
pushf
setg
mov
push
add
add
adc
les
add
in
adc
mov
and
arpl
or
push
jmp
dec
inc
push
mov
add
cmp
mov
jbe
je
or
punpckhbw
mov
in
fisttpl
aam
shl
and
popf
out
sub
imul
cltd
gs
xor
lcall
xchg
adc
push
jne
pop
mov
pop
push
lahf
jnp
mov
jns
sti
inc
dec
cmp
out
add
mov
sbb
pop
pop
add
out
push
jno
arpl
mov
add
mov
add
filds
cmc
shlb
add
inc
aad
mov
jns
xor
insl
pusha
cmc
jo
xchg
push
cmp
mov
pusha
xchg
cwtl
adc
fwait
cmp
test
in
add
repnz
data16
iret
add
pop
cmp
xchg
das
mov
sbb
lret
inc
in
out
pop
je
cmp
push
divb
add
push
add
sahf
jle
hlt
out
xchg
loop
cmp
scas
ret
add
cli
xlat
xor
push
aas
pushl
inc
jmp
outsl
add
jg
pop
add
jo
and
add
jl
mov
inc
and
inc
xchg
in
jno
pop
fsts
mov
out
mov
mov
lret
xchg
or
andl
sbb
mov
ljmp
adc
and
outsb
stos
or
fadds
fmulp
inc
test
ja
imul
in
jns
lcall
faddp
mov
add
movsb
or
dec
clc
fistps
cli
jl
clc
addl
add
cltd
and
jle
add
lahf
cmpsb
out
xchg
daa
mov
repnz
dec
outsb
adc
and
aam
ljmp
cmc
sarb
in
ret
mov
pop
push
jp
push
xor
add
jo
loope
int3
inc
add
divb
adc
cwtl
jb
add
rolb
push
mov
imull
das
push
incb
addb
or
jg
rorl
add
dec
mov
mov
adc
sbb
push
sbb
xor
je
icebp
sbb
mov
popa
jb
movsl
add
jmp
mov
frstor
lahf
addl
xchg
mov
mov
adc
out
addb
xchg
add
dec
roll
add
imul
fldenv
das
loope
addb
sbb
insl
cvtdq2ps
sub
adc
push
cltd
add
inc
mov
push
int
mov
adc
orl
mov
sbb
movsb
and
push
mov
add
jecxz
imul
movsl
hlt
lods
dec
add
xor
fbld
push
add
push
lods
stos
in
jg
mov
jne
jecxz
inc
xchg
pop
xchg
xlat
xchg
add
lret
or
adc
shlb
add
mov
lret
sub
pop
or
dec
xor
imul
or
ss
add
call
fidivl
pusha
add
dec
fldl2e
or
loop
std
in
ficomps
add
add
mov
call
sbb
out
mov
pop
and
cwtl
mov
jne
and
adc
push
movsl
jmp
xchg
push
push
mov
pop
pop
fcmovbe
test
stos
out
cmp
add
pusha
loopne
add
sti
rcl
xchg
pop
cmpsb
push
lock
sub
cmc
andl
xchg
les
mov
pop
push
mov
sub
rcll
jge
jne
in
or
pop
fisttps
jbe
into
in
pop
iret
cmp
ficoms
add
mov
cmp
mov
stos
loopne
popa
movsb
subb
addb
jmp
mov
add
js
out
out
std
add
icebp
mov
mov
sub
xchg
pop
mov
aaa
or
imul
lds
mov
add
cmpsl
mov
icebp
cs
lahf
add
xchg
scas
in
roll
stc
or
in
adc
xlat
mov
xchg
movsb
add
dec
dec
stc
or
add
mov
adc
mov
pop
fiaddl
les
fisttps
cli
inc
jmp
ret
adc
jne
add
aas
testl
lods
es
xchg
cs
dec
ljmp
add
mov
loopne
mov
pop
xchg
stc
add
adc
mov
stos
js
cwtl
daa
popa
xchg
add
cmp
into
mov
in
push
loop
xor
daa
add
xchg
xchg
inc
popa
sub
pop
inc
aad
cmpb
mov
cbtw
ja
mov
push
adcb
add
add
lods
dec
mov
in
xchg
rolb
adc
repnz
js
add
ja
cli
mov
sahf
mov
ss
or
loope
pop
push
inc
jmp
mov
cmp
add
dec
adc
sbb
sbb
lahf
adc
in
inc
add
mov
add
adc
stos
fcomip
and
add
sub
dec
push
in
sbb
outsl
xor
fsts
add
loopne
push
add
insl
or
cmp
repnz
lock
ja
add
adc
imul
test
fildll
mov
lret
gs
jnp
add
enter
mov
push
adc
lcall
loopne
pop
mov
jl
pusha
add
movsw
dec
mov
fiaddl
push
insl
lock
push
push
in
and
xchg
std
xor
add
jne
cmp
mov
gs
xchg
shr
xor
lea
adc
sub
int3
add
je
push
jecxz
push
pop
add
sbb
mov
pop
orl
es
add
in
test
mov
mov
test
data16
fdivrp
mov
lock
dec
cmp
and
shrl
add
or
mov
int
sub
push
dec
jne
add
sub
and
mov
add
pop
jle
in
pop
jae
add
xchg
sti
push
test
les
inc
mov
fidivrs
cmpsb
pop
sbb
pop
cltd
jmp
std
pop
test
dec
aas
add
out
sbbb
mov
and
jge
aad
push
cmpl
jp
inc
cmp
movl
loope
lods
and
dec
in
fwait
daa
fdivs
inc
xchg
orb
out
jl
test
cs
adc
pop
insl
add
outsb
sub
pop
stos
scas
rolb
lds
push
jmp
mov
push
rcrl
sbb
mov
rcpps
fst
add
mov
inc
in
stos
leave
jbe
add
xor
xlat
mov
cmp
push
xchg
addb
add
xor
loope
mov
lods
xor
mov
add
xchg
sbb
es
or
mov
sub
push
in
into
clc
mov
lahf
jle
cmp
xorb
adc
out
add
dec
insb
mov
imul
gs
data16
nop
pusha
ljmp
xchg
repz
and
add
cli
popf
cwtl
mov
stos
cmp
daa
cmp
divb
rolb
mov
add
mov
xchg
jge
or
sbb
add
test
or
movsl
fmull
loopne
or
add
out
jo
mov
pop
sub
mov
jb
add
pop
mov
loop
xchg
xchg
mov
mov
js
ja
add
cltd
fidivrs
aas
lret
dec
mov
or
sahf
pop
dec
and
push
aam
jmp
insb
add
lock
pop
cmp
adc
add
andl
out
std
out
jae
cmpsb
xchg
add
test
dec
mov
out
nop
xchg
pop
jmp
add
arpl
hlt
push
mov
add
and
add
xor
or
dec
pop
cmp
inc
lods
fcom
jg
add
mov
mov
sub
mov
add
and
lea
pop
add
inc
mov
arpl
dec
pop
lods
pushf
fimuls
xor
add
push
stc
cmpb
lods
aam
fnstcw
out
cmp
inc
sti
stc
inc
xchg
fld
imul
add
jge
xor
mov
add
mov
pop
lret
and
mov
push
pop
call
rorl
loope
pop
sbb
movsl
add
cltd
and
pop
inc
push
inc
fadds
das
adc
dec
ret
jns
jge
clc
imul
jbe
add
jge
ds
adc
fldl
test
insl
sbb
cli
xchg
fwait
stos
pop
pushf
and
dec
cs
lret
test
mov
xchg
lret
mov
repnz
sbb
xlat
jge
dec
mov
pop
or
push
xchg
xchg
aam
or
dec
das
dec
out
add
faddl
xor
stc
ds
cmpl
fdivs
in
cmc
pop
cmp
add
mov
in
push
mov
les
stc
dec
cwtl
fsts
mov
add
loope
adc
sub
dec
pop
lods
xchg
in
add
or
movsl
icebp
add
iret
scas
in
test
cs
pop
push
pop
imul
lahf
push
icebp
mov
int
and
mov
xchg
lods
and
lret
add
sub
out
nop
aaa
add
enter
dec
dec
pop
fmull
vpcmpeqd
or
sbb
inc
lcall
rcrb
mov
cli
ds
cmp
add
xor
pop
repnz
mov
pop
jp
clc
pop
ret
shr
add
inc
push
aam
adc
mov
add
fisttps
cmp
rorb
pop
xor
pop
adc
xchg
mov
pop
ja
sahf
popa
push
jecxz
xorl
and
movsb
and
mov
movsb
push
push
dec
push
mov
in
jno
mov
sub
xchg
into
pop
test
xchg
lahf
aaa
mov
pop
addl
in
pusha
and
add
movsb
mov
mov
sbb
mov
add
into
les
mov
push
jne
mov
or
push
cmp
adc
test
add
iret
icebp
inc
xlat
loopne
int3
push
or
je
add
push
jnp
mov
xchg
and
xchg
mov
test
pop
mov
sahf
add
fs
sbb
adc
sti
fisubrl
add
je
fidivrs
cmc
sbb
push
shrl
rdmsr
js
mov
and
add
mov
cmpsb
and
subb
sbb
enter
aaa
and
mov
xchg
stc
scas
loopne
jg
add
dec
add
es
pop
fadd
shll
add
out
mov
push
push
in
or
ja
xchg
cs
lcall
arpl
mov
inc
adc
add
lods
inc
push
mov
daa
xor
sub
into
add
mov
push
js
popa
dec
jbe
out
xor
push
aas
push
cmpsb
popf
in
fstpl
fs
cmp
call
inc
dec
sub
add
andl
in
push
pop
sbb
mov
add
cmpsb
shrb
jbe
add
add
mov
or
cmp
mov
jl
pop
push
sbb
dec
push
adc
hlt
push
fldcw
push
and
xor
or
sbb
fadds
aad
sahf
nop
jns
push
xorb
shlb
mov
xor
mov
add
cwtl
inc
inc
dec
and
ljmp
add
rcrl
add
pop
adc
add
fdivp
icebp
pop
xor
xor
adc
cld
jle
pop
sbb
pop
sub
add
andl
mov
aas
les
xorl
mov
push
leave
lret
push
push
jl
out
add
les
jg
xchg
add
fs
sbb
repnz
xchg
dec
fwait
sbbb
cmpsb
pop
stos
xchg
xchg
int3
sub
test
imul
shlb
in
in
daa
aam
adc
addr16
and
add
fbstp
adc
cwtl
mov
addr16
or
sete
mov
and
sbb
adc
add
sahf
in
bound
xor
mov
adc
push
push
push
pop
and
or
femms
out
or
add
add
add
sbbl
add
jge
stos
inc
sub
bound
int3
mov
cs
lock
cmova
aas
mov
add
mov
xchg
ljmp
sbb
pop
xchg
jge
repnz
add
sbb
ret
jl
movsb
inc
jmp
inc
mov
insb
pop
jle
cmp
push
xor
fwait
mov
mov
insl
nop
sbb
loopne
ds
add
scas
push
adc
xor
add
jge
into
mov
jb
out
push
cs
lcall
loopne
test
icebp
rorl
aas
sub
enter
xor
push
jle
rcrb
mov
add
fadd
and
addr16
mov
lock
ss
mov
add
or
add
insl
push
mov
subl
cs
cmp
dec
adc
mov
add
pop
ljmp
jg
mov
cmpsl
pop
adc
incl
adc
mov
repz
mov
pop
push
cmp
rorb
xlat
pop
push
jp
in
dec
mov
cmp
add
aad
add
push
call
test
jle
mov
leave
cmp
out
rolb
sbb
add
jo
rol
dec
xor
xor
jg
add
jl
movsb
mov
adc
loopne
add
or
mov
pushf
jmp
call
cli
in
sub
sbb
inc
cmpb
int
cmp
mov
cwtl
pop
cltd
jl
xchg
jae
add
pop
adc
cmova
cmp
add
jge
or
jecxz
bound
push
add
pop
push
pop
xchg
lods
into
add
iret
sub
leave
shrl
xchg
decl
fsubs
pushf
sbb
nop
nopl
push
add
imul
iret
leave
add
mov
mov
inc
ljmp
push
jb
xchg
loop
pop
mov
out
lcall
add
pop
stos
xor
dec
mov
enter
test
leave
inc
scas
mov
je
push
pop
shrl
push
adc
cmp
out
into
mov
sahf
cmpsb
jg
pusha
das
jae
inc
stos
add
xor
add
jnp
pop
add
lock
dec
fwait
testl
mov
xor
push
pop
out
fnstsw
push
fsubrs
lds
push
rorl
pop
xor
or
andb
and
cltd
and
fldl
pop
idiv
lret
hlt
gs
stos
loope
adc
inc
adc
or
ljmp
and
dec
aas
jg
jnp
in
inc
js
jmp
xchg
rorb
lret
pop
jbe
icebp
loope
push
xor
mov
add
adc
xchg
mov
mov
cmp
add
adc
add
and
lock
mov
fldz
add
cmp
rcrl
cmp
std
icebp
in
orl
mov
push
xor
push
lret
xor
cmp
cmp
decb
jp
and
pop
and
pop
dec
imul
add
adcb
push
insb
jecxz
jo
push
rcll
pushf
mov
mov
cmpsb
pop
mov
mov
das
pop
movsb
gs
arpl
lret
pushf
pop
and
jmp
push
imul
sbb
cs
cli
xor
sbb
and
jbe
mov
mov
arpl
push
cmp
jb
or
movsb
add
out
inc
xor
jbe
add
imul
add
xchg
popl
leave
add
outsb
xlat
lods
ss
push
es
inc
add
out
mov
or
testl
add
mov
pushf
sub
mov
test
stc
inc
mov
rcrb
mov
out
add
dec
fs
hlt
xor
js
xchg
mov
into
jne
xor
dec
repnz
push
pop
outsb
adc
daa
push
dec
push
xor
push
push
mov
cltd
add
xor
stc
imul
push
and
or
push
add
jnp
insb
outsb
lods
pop
nop
add
popaw
lea
mov
cmp
sbb
shlb
inc
cmp
add
mov
cmp
cli
push
sbb
call
ljmp
ret
lcall
sbb
push
in
adc
add
xchg
or
push
orl
push
orb
ljmp
or
push
push
add
fimull
daa
inc
cmp
lcall
dec
lahf
xchg
dec
cmp
inc
andb
shlb
adc
sbbb
or
sub
jns
add
into
fisubl
arpl
lahf
jne
pop
call
inc
mov
cwtl
adc
add
xor
movsb
jle
add
cmpsl
pop
mov
arpl
push
add
add
add
jle
cmpsl
es
scas
lock
cmpsb
inc
jg
clc
mov
bound
dec
push
nop
add
add
pop
mov
or
test
sbb
je
cli
imul
mov
dec
lret
pop
sti
jbe
or
adcb
push
fiadds
add
dec
mov
add
push
cmp
or
add
fstpl
xchg
lds
pop
mov
ret
add
inc
adc
add
push
aas
push
sbb
mov
adc
popf
xor
loopne
sti
andl
cs
xor
ja
add
iret
sub
push
movsl
add
mov
lret
cld
mov
jle
cmc
ds
leave
add
std
push
push
dec
mov
cli
fwait
in
sarl
jmp
mov
mov
mov
xchg
xchg
int3
xor
jnp
sbb
pushl
and
push
in
adc
cmc
loopne
jnp
jg
fadds
mov
sub
mov
cmp
pop
sbbb
mov
pop
push
les
or
js
add
and
add
movsl
fcoml
gs
push
rclb
std
lods
xchg
add
or
sub
or
mov
push
sbb
rol
cmp
mov
mov
add
push
addr16
add
inc
and
ljmp
hlt
cmp
cmp
arpl
adc
in
gs
add
mov
mov
jge,pn
scas
xchg
in
add
rcrl
ret
or
ljmp
add
rol
inc
xlat
cmp
push
addr16
jmp
pop
xor
out
sbb
stc
outsb
lret
or
dec
push
pop
add
inc
lock
test
rolb
add
mov
cmp
push
cmp
pop
xor
or
add
insb
cwtl
icebp
pushf
ror
outsl
mov
ret
cmp
mov
hlt
test
out
jg
xor
push
cli
sub
xchg
add
add
pushf
pop
lds
shll
xchg
or
pop
sbb
pushf
mov
clc
mov
and
xor
lods
gs
mov
push
cmp
lock
or
cmp
xchg
in
mov
inc
add
jbe
aaa
sbb
push
dec
faddp
pop
inc
add
lock
sbb
imul
and
cmp
inc
xor
hlt
jb
add
and
push
frstor
jnp
add
lods
jecxz
push
jae
sbb
fisubrs
mov
mov
jle
mov
pop
pop
pusha
jb
xchg
xchg
push
mov
lcall
jecxz
inc
add
aam
push
cmp
lret
lods
add
fdiv
inc
pushf
add
xlat
fadd
jecxz
push
add
adc
lret
jbe
add
push
mov
push
pop
push
hlt
rcr
xchg
pusha
mov
dec
mov
dec
out
cmp
cltd
jbe
out
int
jno
mulb
fcomps
and
sub
sbb
jbe,pn
test
fcoml
pop
icebp
mov
test
pop
aad
sbb
repz
imull
pop
fadds
push
fs
add
xchg
pusha
add
push
jbe
push
into
jl
push
xor
sub
scas
into
repnz
push
loopnew
hlt
lods
pop
inc
add
xchg
ret
jne
inc
leave
mov
adc
mov
add
push
dec
pop
mov
out
add
push
inc
dec
mov
loope
js
loop
mov
out
idivb
sbb
cmp
push
loop
popf
pop
and
add
aaa
xor
fdivs
inc
in
or
mov
xchg
add
in
pop
push
push
add
mov
sub
push
add
pop
fs
jno
dec
cmp
in
jle
jo
pop
mov
add
imul
and
add
push
test
outsl
jbe
mov
cld
dec
cmp
nop
lods
iret
add
mov
mov
jp
call
stc
leave
movsb
pusha
add
pop
xlat
or
cmpsl
lcall
xchg
dec
and
and
fiadds
shl
inc
mov
cmpsb
add
pusha
mov
push
lea
mov
mov
aam
sub
in
pop
push
std
sub
mov
cmp
ds
push
in
push
int3
out
or
add
mov
scas
push
push
fiadds
jp
inc
cli
test
mov
hlt
int3
pop
jb
imul
pop
mov
add
stos
mov
dec
gs
jecxz
dec
or
add
sbb
mov
add
test
dec
sbb
lds
mov
add
sub
jp
inc
repnz
icebp
cmp
add
loop
je
mov
sub
andl
or
mov
lahf
sahf
or
add
je
outsb
xchg
and
test
jmp
sub
bound
add
inc
pop
add
and
mov
sbb
cli
add
push
xor
mov
lds
xchg
jb
flds
add
pop
int
mov
dec
mov
movsb
add
out
testb
ret
push
pop
jmp
xchg
je
fiadds
into
out
sbb
mov
add
mov
loop
clc
xchg
add
repz
mov
push
rol
mov
mov
lahf
mov
and
cmp
push
add
or
add
and
cmp
addl
lods
lock
mov
jmp
fs
mov
add
add
and
mov
mov
pusha
mov
jb
test
lock
sub
cwtl
pop
add
cmp
cld
xchg
push
mov
scas
fmuls
fisubrl
jmp
jnp
add
stos
dec
les
mov
out
loopne
or
and
add
push
jnp
add
mov
imul
add
sti
ret
loopne
out
movsl
add
mov
imull
jp
sbb
mov
add
add
mov
popf
pop
dec
mov
sti
mov
add
fsubrs
jmp
mov
add
inc
adc
sbb
add
cld
popf
lods
cmp
add
out
mov
in
mov
adc
adc
mov
adc
jle
lea
or
stc
fiaddl
or
xchg
adc
sbb
cmp
scas
gs
xor
leave
int3
add
or
dec
xchg
xchg
add
dec
aaa
add
fnstsw
ja
add
xor
das
cmp
addl
rcrb
cmp
addb
xchg
into
pop
lea
mov
add
mov
jbe
push
dec
andb
das
pop
xor
ret
push
dec
cmp
enter
mov
lcall
mov
ficoml
int3
mov
and
ret
scas
dec
jnp
out
xlat
mov
add
or
inc
aaa
es
shl
ja
jb
cmp
imul
movsl
xor
mov
or
mov
addb
imul
jne
bnd
ljmp
or
loope
rorb
xlat
cmp
xor
mov
add
xor
mov
push
ds
push
fadds
xor
push
add
and
cmp
add
ud2
ret
mov
std
add
cld
mov
mov
out
pop
ss
jmp
ret
fs
int3
out
hlt
xlat
add
stc
in
pop
push
jae
clc
int
shll
lcall
add
add
cmp
cmp
add
inc
scas
cwtl
sqrtps
inc
inc
and
loopne
in
add
sbb
add
mov
add
jb
mov
iret
es
push
sub
enter
shrb
test
enter
add
std
mov
icebp
adc
gs
int3
nop
fnsave
popf
jae
shlb
add
or
aad
mov
addr16
lds
jae
movsb
fsts
cs
lcall
pop
push
xor
sbb
movsl
mov
call
insl
clc
popf
cmpsb
adc
mov
sub
mov
addr16
arpl
cmc
loope
out
xchg
ljmp
xlat
addl
shr
push
mov
or
repz
add
fcoms
jne
dec
test
fnsave
xchg
adc
jno
add
inc
mov
push
addl
in
sub
sbb
std
loopne
add
adc
cmc
movsl
xor
mov
add
add
dec
sahf
xchg
bound
cld
add
xor
lret
mov
loope,pt
xchg
imul
icebp
stc
jp
pop
out
insl
add
add
or
mov
pop
lods
sub
add
inc
jbe
mov
pop
pcmpgtb
mov
insl
inc
pop
inc
xchg
xor
lahf
ja
scas
mov
pop
push
cmpsb
push
add
test
rorb
xchg
dec
scas
pop
xor
test
frstor
ss
mov
jmp
addr16
pop
sbb
cmp
subb
and
add
stc
mov
add
jne
stos
movsb
test
mov
and
inc
xlat
lea
pop
mov
icebp
mov
lock
enter
push
inc
dec
mov
and
sbb
out
adc
hlt
sbb
test
sub
cmpsb
add
sub
ret
jp
subps
js
dec
mov
add
lcall
inc
xor
aam
mov
add
jb
rcll
imul
into
adc
or
add
mov
add
movsb
push
push
inc
loope
mov
or
xor
add
add
mov
mov
cmp
and
jo
sbbb
dec
nop
enter
jle
hlt
adc
or
data16
rolb
mov
inc
and
mov
in
dec
fwait
inc
aas
insl
or
inc
pusha
mov
add
negl
pushw
pop
xchg
and
dec
sbb
mov
inc
inc
sbb
add
dec
sbb
out
lds
stc
mov
and
jbe
call
or
cwtl
lahf
push
push
adc
add
in
js
loope
dec
dec
lea
add
into
jb
cmp
ja
mov
aas
sub
lods
xchg
pop
cmc
cmp
add
hlt
xor
push
enter
ja
scas
mov
jmp
jle
pop
push
shll
movsb
add
add
xor
or
add
jmp
in
mov
lcall
in
mov
in
stos
lock
jbe
add
mov
pop
jo
mov
fwait
mov
mov
into
pop
js
shlb
test
xchg
xor
push
sbb
fsubrl
mov
decl
sbb
cli
outsl
in
jbe
into
pushl
or
testl
repz
adc
das
jo
jecxz
pop
or
andb
cvtpi2ps
pushf
push
xchg
sarb
xor
in
insb
dec
mov
add
push
adc
xchg
and
adc
or
lods
add
js
push
push
sbb
sti
push
jp
enter
and
push
mov
ret
and
pop
push
call
xor
or
pop
ja,pt
add
loopne
stos
fmull
and
aaa
rcll
lods
cld
gs
ljmp
jns
add
daa
add
cmpsl
pop
add
nop
mov
sub
add
cmp
pop
or
testb
sbb
add
pop
ljmp
pop
call
pop
sbb
jbe
addb
icebp
test
sub
lds
sti
aas
ds
add
mov
ja
cli
push
jg
ljmp
les
add
jg
add
cmpsb
rolb
adc
add
adc
outsb
or
stc
aaa
and
dec
xor
add
push
rolb
dec
xchg
lock
mov
push
minps
pop
inc
xchg
out
mov
pop
sarb
call
ret
push
leave
sarl
ds
into
xorb
test
data16
addb
leave
pop
aam
xchg
test
add
add
es
aaa
or
fisubs
gs
pcmpeqw
xchg
push
bound
inc
xorl
in
addr16
ss
sbb
xchg
push
xchg
pop
lock
mov
adc
addr16
xchg
out
cmc
clc
inc
and
mov
dec
lds
divps
jb
mov
add
mov
pop
adc
cmpsl
add
rcrb
sbb
cmpsb
and
sub
out
dec
in
push
fists
inc
sub
shl
cwtl
loop
jo
inc
out
int
push
xchg
add
out
sbbb
pop
dec
cmovs
pop
dec
mov
dec
adc
lock
xchg
xchg
and
rcr
loopne
or
mov
sub
int3
jle
int3
xor
jnp
xchg
cli
sti
cmp
andb
popa
mov
mov
cmc
mov
mov
fwait
pop
xorb
pop
and
cmpl
in
dec
mov
xchg
outsl
aaa
add
fs
push
sub
outsb
divb
adc
add
pushf
ret
decb
rcr
test
arpl
ret
add
pusha
shlb
pop
cmp
test
clc
pop
jo
es
add
add
mov
cmpsl
faddl
sbb
sti
std
fsub
bound
cmc
push
shlb
imul
sti
and
pusha
pop
xor
or
stc
insl
pop
cmp
mov
je
inc
xor
hlt
cs
jle
mov
adc
and
mov
adc
add
scas
bound
iret
dec
loopne
push
xor
and
loopne
mov
jmp
testl
js
dec
cmp
sub
fwait
pusha
out
sub
jl
out
mov
xchg
stc
scas
imul
push
adc
push
jo
mov
hlt
mov
es
push
insb
mov
dec
shrb
fnstsw
sahf
pop
nop
sbb
mov
test
add
xchg
push
xchg
jae,pt
xchg
loope
fistps
add
add
sub
stos
add
repz
outsl
in
sbb
rolb
lock
xchg
jl
lods
xor
jbe
mov
add
cmpb
and
sbb
adc
cmp
pushf
testb
je
add
or
fs
xor
or
test
add
cmp
and
cmp
mov
mov
sub
movsb
or
aam
sub
adc
cmp
inc
idivb
lahf
mov
aaa
push
pop
push
loopne
jne
aam
add
adc
add
fwait
xor
mov
pop
jl
lds
inc
xchg
inc
cmp
pop
mov
adc
ja
or
xchg
add
ljmp
mov
mov
sub
add
xchg
or
mov
add
lods
loope
adc
cli
fiadds
cmp
sub
lods
jne
pop
inc
bound
imul
pop
scas
lods
js
mov
jl
popf
inc
je
mov
mov
push
adc
add
sbb
into
call
or
mov
adc
sbb
les
sbb
push
repz
push
pop
xor
dec
clc
mov
add
inc
testb
jecxz
rcrl
jmp
lahf
sbb
dec
imul
daa
push
and
mov
push
fmuls
fs
sahf
jl
xor
push
sub
cmp
mov
pop
es
andl
sbb
bound
test
shl
test
mov
lock
out
mov
pushf
loop
cmpsl
cmc
cld
inc
nop
mov
orb
pushf
or
mov
xchg
pusha
fwait
and
sbb
xchg
or
inc
push
jge
cmp
scas
test
xor
mov
cltd
cmp
iret
add
out
aaa
cmp
lds
cmpsb
lcall
or
shl
mov
call
leave
sbb
sub
data16
dec
add
fidivrs
int
jecxz
dec
add
imul
inc
insb
inc
and
jne
loop
or
jnp
jp
roll
popa
or
sub
adc
adcl
push
jne
adc
pop
add
xor
and
or
aam
sti
popa
xor
or
jp
xchg
push
cmp
jae
ret
scas
int3
inc
loopne
xor
mov
cmp
into
in
arpl
xchg
add
or
fistpll
or
adc
in
jno
add
jmp
daa
ret
jecxz
nop
pusha
sub
mov
adcl
xor
and
cltd
aas
rcrb
and
inc
pmaddwd
cmpsl
cmpb
lret
add
xor
sub
cmp
bound
stc
iret
pop
cmpsl
jle
fwait
push
mov
xor
adc
sbb
addb
fiadds
clc
pushf
out
cmpsb
add
popl
mov
pop
aaa
mov
inc
xor
addr16
or
or
jge
sub
lods
xchg
push
add
out
and
ret
mov
adc
mov
adcl
and
sahf
dec
repz
inc
test
xchg
push
push
sbb
ret
xor
inc
adc
xor
adc
inc
sbb
je
int3
inc
xor
xchg
mov
nop
sub
bound
rolb
jbe
pusha
call
push
out
or
js
and
imul
push
or
jbe
push
or
lcall
mull
add
orps
jns
inc
add
mov
sub
clc
mov
je
out
je
or
pop
into
push
repz
sbb
int3
add
jl
mov
xchg
mov
loope
pop
jo
cmp
in
and
pop
addb
inc
push
call
add
mov
loopne
stos
push
cli
dec
dec
out
aam
enter
sub
push
sub
adc
popa
cltd
lahf
mov
outsl
adc
popf
je
xchg
scas
aaa
stos
movsb
xor
pushf
inc
dec
add
js
sub
or
loop
cmp
pop
push
movsl
adcb
sbb
test
bound
push
and
pop
loope
imul
jge
xchg
push
ljmp
inc
int
mov
sbbb
mov
add
adc
mov
js
and
out
loope
orb
adcb
push
aaa
ret
add
mov
inc
dec
and
lcall
mov
dec
cmp
pop
sti
or
lea
xor
imul
sbb
incl
jnp
pop
cmp
xlat
xor
rorb
pop
pushf
xor
sbb
clc
jno
lds
aad
push
pop
sbb
sarl
imul
add
cli
add
or
cld
shlb
jecxz
pop
inc
sbb
pop
clc
ror
aaa
bound
cmp
add
inc
push
jae
xor
inc
popa
pushf
hlt
or
sbb
jno
add
cld
rcrl
push
lods
cmc
loopne
pop
cwtl
icebp
mul
cmc
adc
into
inc
add
imul
ds
push
scas
mov
out
xor
or
cld
nop
pusha
xchg
lret
adc
cmp
addb
jo
das
scas
sub
sbb
push
xchg
imul
sub
sbb
jg
inc
popa
clc
mov
sbb
hlt
rorb
xchg
adc
inc
dec
cmpsl
add
in
jp
xor
xchg
mov
test
mov
popl
sub
rolb
in
and
imull
fcom
in
notb
movsb
rclb
rcrl
cmc
dec
sarb
push
mov
add
bound
dec
cs
sarl
gs
xor
pusha
dec
and
add
imul
jae
scas
mov
dec
lock
sbb
push
inc
xor
push
lods
dec
mov
cwtl
sub
popa
fcoms
test
push
cmp
xor
mov
xchg
shll
cwtl
sbb
pushf
jmp
dec
inc
xor
pop
pop
dec
add
push
jge
fiadds
or
std
das
add
push
or
sbb
adc
stos
mov
hlt
xor
lea
enter
dec
pop
xor
sbb
ds
push
mull
syscall
push
or
pop
repnz
mov
ret
cmpsl
cmc
mov
add
loop
cmc
dec
or
push
and
and
movsb
loopne
in
xchg
inc
mov
inc
movsl
sbb
cltd
xor
sbb
jge
and
inc
mov
xor
and
aad
pusha
mov
xchg
sbb
rolb
mov
cmp
and
dec
and
stos
loopne
sub
jo
rolb
cmp
dec
sub
stos
pop
add
push
addb
jbe,pt
and
pop
adc
xchg
inc
push
or
in
or
push
shrb
sbb
adc
shrl
stc
ret
clc
imul
shlb
mov
movsb
shrb
pop
mov
or
cmp
mov
xor
jge
mov
ljmp
sbb
punpcklbw
or
and
mov
sbbb
popl
mov
pusha
or
out
std
jb
fcoms
pusha
rorl
mov
pop
divl
sar
aaa
sarb
pusha
pop
leave
es
mov
adc
xor
das
pusha
fcom
scas
adc
sub
pushf
push
mov
sub
push
incl
xor
fldt
mov
shlb
xor
test
popa
mov
jl
notb
rorl
shlb
negl
sub
inc
cmpsb
cmpsl
enter
fcomp
mov
adc
test
xor
insb
aam
test
out
js
adc
out
js
or
cmpsl
mov
mov
pop
and
rcrb
xor
pop
pushf
dec
shlb
test
xor
shll
dec
lock
lock
popa
push
xor
push
popl
sub
lock
fwait
lret
pop
ljmp
xor
sar
insb
adc
loop
inc
pusha
subl
fadd
xorb
lea
sbb
pop
pusha
jns
sub
sbb
popf
stos
pusha
addr16
xchg
les
mov
push
fiaddl
js
cmp
add
or
rolb
in
jmp
idivl
xor
add
ljmp
add
push
cmp
popa
adcb
xchg
push
lock
dec
hlt
bound
pop
mov
inc
pusha
shrb
bound
popa
popl
jo
push
pushaw
shll
mov
popa
pusha
addr16
fdivrs
jns
inc
addr16
popf
icebp
mov
xor
xor
cld
add
push
or
popa
clc
aaa
xor
dec
in
adc
nop
jmp
inc
addr16
push
fcoml
int3
lcall
loopne
xchg
out
lds
gs
pusha
lock
inc
lock
pop
cmp
xchg
andb
push
xor
push
adc
adc
mov
ljmp
and
or
xchg
adc
mov
or
mov
sub
pusha
inc
lret
punpcklbw
adc
mov
lret
xchg
test
rcll
mov
sbb
lret
mov
shl
xor
addr16
mov
loopne
adc
daa
lds
and
insb
pusha
mov
sub
and
loopne
mov
cmpsb
mov
ds
fsubs
cs
pusha
pop
loopne
cs
or
cli
dec
mov
in
cmpsl
das
cmp
loopne
pusha
ret
mov
pusha
push
push
cmp
sub
clc
data16
rcll
jo
cs
mov
pusha
das
pop
es
sbb
popa
inc
sub
pusha
subb
ds
sub
clc
xchg
andb
and
mov
loopne
pusha
rcrl
das
pop
jge
out
cmp
or
sub
adc
dec
subb
sub
adc
xchg
int
sbb
mov
clc
je
cmp
xchg
das
popl
mov
bound
adc
xchg
lock
ja
and
loopne
popl
adc
mov
scas
dec
bound
popa
inc
nop
mov
or
push
and
xchg
pusha
ret
mov
add
sub
aad
fstpl
add
popf
ds
xor
xchg
pop
pusha
add
sub
inc
and
or
rorb
sbb
inc
xchg
rorb
cld
rorl
stc
mov
xchg
ds
cld
dec
push
push
pusha
loopne
insl
sub
xchg
ffreep
mov
dec
and
xchg
jg,pt
jno
inc
rcll
test
ror
push
fsubs
pop
pusha
add
dec
dec
sub
rcrl
pop
imul
xchg
lods
pusha
adcl
sub
jmp
out
loopne
popl
les
xchg
xchg
lock
bound
and
iret
aaa
xor
adc
adc
jg
fs
imul
xlat
stos
jbe
mov
mov
adcb
out
xchg
and
adc
pop
adc
enter
fsubrl
hlt
popl
adc
jp
mov
sub
loope
cmp
in
or
test
xchg
add
jnp
js
cmp
pop
add
shrl
inc
mov
sbb
mov
pop
pusha
add
or
inc
loopne
jl
or
cwtl
xchg
repz
inc
pushf
and
rcl
imul
pusha
push
repnz
xchg
sub
pusha
pusha
outsl
add
push
lahf
sbbl
loopne
pop
out
into
lds
sbb
adc
mov
clc
movsl
xor
insl
inc
nop
inc
pusha
orl
fmul
fcoms
mov
jo
push
sbb
mov
pusha
pop
pop
js
push
nop
mov
xor
inc
sbb
sti
xor
push
popf
rolb
push
and
sbbb
push
out
or
xor
xor
mov
popa
fs
adc
fwait
adcb
mov
js
cmp
mov
scas
adc
insb
loop
les
lods
stc
jl
or
mov
adc
testb
jle
in
or
mov
int
clc
inc
out
jg
sub
repz
mov
popa
or
imul
nop
insl
sti
loop,pt
sub
jecxz
or
jno
and
addr16
jle
lods
sbb
rorb
nop
push
adc
bound
in
push
or
xor
sbb
and
jl
or
inc
dec
arpl
cmpsb
sbb
mov
out
repz
jnp
popa
dec
scas
fdiv
lret
cmp
lods
test
xor
lock
pop
inc
in
test
je,pt
and
xchg
je,pt
adc
popa
adc
inc
nop
test
sub
xchg
fcoms
dec
orl
adcb
cmp
dec
inc
mov
or
inc
inc
insb
sbb
cmp
js
xor
sbb
loopne
mov
xor
sbb
int
pop
push
dec
push
sbb
std
nop
loopne
xor
or
xor
xor
pop
add
inc
nop
dec
pop
jl
cmp
rol
lods
inc
pop
roll
mov
xor
jbe
clc
insl
xchg
cmpb
sbb
imul
out
movsl
xchg
lock
jp
gs
or
mov
mov
loopne
movsb
mov
inc
test
pushf
inc
sub
lods
icebp
pop
sbb
mov
loopne
icebp
push
lea
sbb
sbb
addr16
je
mov
int
stc
jae
sub
inc
popa
sub
notl
xchg
orw
add
ds
pop
mov
rorl
jno
stos
xor
or
pop
jae
popa
lea
cmp
in
mov
push
adc
pusha
push
das
stos
cmc
test
sub
xchg
dec
or
cmp
icebp
stc
nop
popa
mov
fadds
popa
lods
mov
xchg
dec
dec
lea
lock
mov
lock
lock
in
xor
arpl
int
ds
mov
clc
pusha
add
jne
lea
pop
xchg
or
lret
xor
clc
xlat
lret
xor
adc
push
pop
into
jno
and
add
pop
std
js
or
cmp
shr
adc
mov
movhlps
popa
sub
sub
push
dec
mov
mov
or
xor
sub
xchg
pusha
mov
fmuls
popf
dec
or
addb
mov
lds
mov
out
and
and
test
pop
jle
xor
mov
pusha
jle
adc
mov
adc
mov
or
xchg
or
xor
mov
pusha
or
popf
add
hlt
adc
insb
pusha
jns
cmpsb
push
jl
xchg
pusha
loopne
cmp
icebp
mov
inc
sbb
cmp
pusha
or
mov
mov
call
popa
adc
mov
pop
push
mov
sbb
cmp
shrb
pop
shlb
push
popa
subb
push
jne
pusha
loopne
and
roll
or
out
or
and
mov
add
enter
dec
mov
cld
sub
xchg
lea
roll
movsl
cmpsl
rolb
popa
mov
xchg
bound
pusha
sarb
loopne
and
in
aaa
xor
add
test
pushl
or
push
rcrb
xor
mov
stos
jl
or
jno
and
sub
cmpsl
inc
add
cli
or
icebp
loopne
mov
or
popa
jmp
scas
ficompl
inc
and
jl
cmp
rol
and
loopne
imul
inc
or
adc
dec
das
xchg
inc
ds
rcrb
pop
movsb
adc
adc
lock
and
and
inc
or
mov
pusha
mov
xor
cmp
stc
pop
xor
adc
pusha
insb
pop
xor
test
add
and
aas
mov
dec
in
xor
push
mov
cld
fisubrs
call
loop
cmp
add
xor
add
mov
push
jmp
push
add
jbe
dec
ljmp
push
adc
cmpsb
inc
and
inc
mov
push
pop
push
xchg
adc
xor
push
inc
inc
cli
popa
mov
ss
movsl
rcll
loopne
xor
pusha
shlb
dec
dec
rorb
scas
pusha
sbb
insb
add
dec
jl
cmp
or
xor
js
mov
push
subb
js
hlt
add
clc
faddl
bound
push
push
or
inc
shlb
add
cmpb
ds
cmp
xor
dec
sarb
aad
pusha
or
clc
and
adc
sbb
adc
lock
pop
aad
pusha
loop
xor
dec
popa
js
pusha
or
add
cwtl
push
aam
ret
sub
sub
int
mov
rolb
xor
sbb
and
ds
sub
pusha
jecxz
fcom
incb
stos
add
idivl
xor
nop
adc
loope
cmp
aas
add
sub
daa
add
sarb
add
or
mov
clc
push
out
adc
test
sti
mov
jl
or
js
mov
mov
adc
and
adc
pop
shl
cmp
in
fildl
js
prefetchwt1
xor
mov
lcall
push
mov
push
in
sbb
clc
jns
or
in
or
fs
xor
pop
pusha
inc
cwtl
addb
mov
aad
in
pop
ja
cmp
mov
pusha
xor
jne
mov
mov
add
and
pop
mov
aaa
inc
push
add
add
and
xor
xor
popa
mov
pop
cmp
sbb
cmp
sbb
add
dec
mov
in
push
rcll
pop
push
mov
xor
and
nop
enter
inc
pusha
pop
jno
gs
lea
add
cwtl
jae
cs
adc
insb
sbb
adc
movsl
push
mov
cltd
and
adc
adc
shlb
mov
push
inc
push
xor
pop
xlat
xchg
rcll
sbb
call
sahf
popl
adc
js
and
inc
and
jno
les
pushf
jl
sbb
mov
cmc
mov
orl
mov
xchg
mov
xchg
test
scas
xor
pop
lret
or
and
xor
popa
jne
pop
add
std
and
inc
xchg
mov
call
xorb
dec
rolb
or
nop
inc
xchg
test
and
inc
inc
lods
shrb
add
pop
jecxz
xor
or
or
or
clc
xchg
ds
mov
or
add
jns
add
sahf
fsub
jo
arpl
and
add
add
xor
divl
addr16
mulb
dec
inc
jg
adc
std
push
ja
in
cmovbe
mov
and
sub
sub
or
and
test
cmpsb
mov
movsl
cmp
sbb
add
movsb
lahf
in
jl
mov
xchg
ret
xor
inc
std
jmp
andb
mov
cmp
and
jmp
or
pop
jae
bound
pop
add
ss
rcll
and
or
add
push
mov
je
add
divl
and
xor
aas
xor
jge
jp
js
lahf
xchg
mov
loop
add
out
sub
jg
add
movsb
pop
test
add
cmp
push
loopne
stc
loop
xor
jecxz
shlb
int3
cmp
xchg
test
scas
or
jno
xchg
xor
int
pop
xchg
and
nop
imul
sbb
dec
or
xchg
and
pop
enter
movsb
flds
mov
movsl
filds
jnp
shlb
lahf
aas
and
xor
ret
cld
rolb
inc
sub
enter
mov
dec
sar
cmp
inc
pop
xchg
scas
xchg
aas
loopne
cmp
inc
xchg
lret
jge
push
test
xor
push
lcall
mov
aad
sahf
adc
divb
jecxz
test
ret
shlb
inc
loop
jmp
loopne
mov
xchg
add
mov
adc
hlt
sbb
inc
dec
dec
cmp
adc
enter
xchg
add
inc
lcall
shll
or
repnz
popf
mov
sbb
mov
sbb
push
or
mov
jae
cmp
sub
out
call
insl
mov
lcall
int3
mov
ret
mov
dec
and
test
rolb
push
ljmp
or
inc
adc
call
daa
sbb
mov
fsubl
cwtl
adc
aaa
dec
add
cmp
mov
ja
addr16
aad
cld
mov
mov
jno
hlt
push
jle
aaa
mov
sbb
inc
pop
in
pop
mov
arpl
push
mov
mov
mov
inc
lahf
out
push
aas
cmp
icebp
jle
mov
rorb
divb
rorl
fidivl
or
sub
mov
enter
js
fmuls
cmpb
rcrl
shll
mov
mov
mov
add
cmp
popf
lahf
adc
cmc
mov
jno
mov
outsl
sub
jo
cmovle
or
jge
jecxz
adc
mov
in
loope
jp
addl
ds
sti
rolb
stc
push
test
xchg
dec
insb
sbbl
icebp
add
ficoml
add
cmp
and
xor
add
mov
repnz
sub
mov
jg
mov
add
or
jae
adc
shr
add
nop
imul
in
movsl
test
out
repnz
inc
and
dec
test
subb
xor
je
add
mov
insb
pushf
lahf
xor
leave
mov
mov
outsl
orl
subb
or
or
adc
cmpsb
lcall
dec
fisubl
sbb
adc
fdiv
mov
cmp
call
or
dec
std
adc
mov
or
and
cmp
sbb
mov
ljmp
push
leave
hlt
pop
fadds
lods
xor
inc
stc
or
cmp
mov
mov
add
ds
je
and
mov
jmp
inc
and
add
cmp
xchg
and
ss
adc
jo
pop
mov
fmul
shl
adc
inc
xor
repnz
inc
arpl
shll
fimull
adc
orb
fmull
or
xor
xchg
ds
xchg
addb
and
rolb
push
or
xor
mov
dec
dec
inc
lock
dec
inc
mov
jo
mov
nop
sbbl
inc
sbb
xchg
xor
fadd
xorb
mov
dec
paddusb
pop
imul
in
mov
push
or
add
or
pusha
sbb
jns
mov
add
cmc
jo
pusha
sbb
push
addr16
push
cmpsb
loopne
or
inc
cmp
lret
xor
ljmp
fbstp
or
cmpsl
jmp
mov
sub
aad
adc
aas
add
divb
pushf
lds
dec
movsb
xor
cmc
div
add
dec
and
mov
and
test
or
mov
adc
loop
mov
fcmovbe
and
rcrl
cld
add
pop
inc
mov
lods
pop
mov
jg
jae
cs
dec
push
push
add
mov
scas
mov
pop
add
pop
and
shrb
cmp
ja
add
mov
jne
lock
in
mov
dec
mov
insl
add
push
push
lods
dec
mov
ds
inc
add
inc
enter
pusha
mov
and
and
inc
xor
pop
xor
push
out
dec
add
pop
idivl
pop
adc
mov
jo
je
xchg
rcr
push
into
mov
inc
mov
push
das
pusha
test
xor
iret
or
inc
pop
mov
xor
cwtl
shlb
xchg
movsb
insb
pop
cmpsb
lock
add
mov
xchg
jecxz
inc
sbb
lfs
pop
xor
loopne
add
and
dec
imul
cmpsl
xbegin
call
int3
jp
pop
loop
sarb
xor
pop
jno
or
into
std
mov
cmp
pop
mov
mov
xchg
iret
mov
nop
fstpl
push
add
push
add
sbb
adc
add
notb
add
cmp
aaa
cmpsl
loope
sub
xchg
dec
lretw
push
arpl
add
stos
pop
push
xor
mov
pop
and
jbe
adc
add
sbb
adc
pop
shr
fldenv
pusha
decl
jmp
aas
test
jo,pt
or
sub
or
test
loopne
test
out
or
push
fcoml
dec
mov
lock
pop
xor
add
mov
in
add
or
icebp
cwtl
mov
jle
cmp
mov
and
addl
mov
jb
dec
aas
sbb
cld
out
jbe
xchg
xchg
mov
push
mov
add
out
add
sub
sbb
add
ljmp
imul
adc
dec
pusha
cmp
les
mov
mov
add
jge
aas
fadd
leave
mov
subb
in
fbstp
add
cmp
mov
idiv
xor
call
jno
add
xor
in
data16
xlat
rorl
or
mov
subps
adc
daa
push
xchg
stos
sbb
pusha
pop
fbstp
jno
jge
outsb
add
mov
sbb
jb
jns
inc
sub
dec
add
mov
loopne
pusha
jo
iret
mov
js
mov
arpl
aad
fucompp
repnz
pop
out
orl
shlb
sub
inc
fsubrl
jecxz
pop
push
sti
add
mov
pop
insb
dec
shrb
jnp
orl
aam
xchg
insl
insb
xor
add
lea
lret
js
stos
xchg
movb
mov
lret
clc
mov
add
or
sbb
mov
into
pop
movsl
and
lock
roll
xor
loopne
sub
sarl
mov
xor
movsl
sbb
adc
fstpl
inc
out
filds
push
jno
in
inc
mov
in
pop
mov
sub
mov
push
pusha
cmpb
or
cmpsl
stc
pop
inc
repnz
orb
mov
lahf
call
push
or
xchg
cli
pop
mov
arpl
adc
cld
ret
mov
ds
clc
jb
pop
add
cli
dec
add
sbb
mov
testb
js
adc
adc
mov
lahf
test
xorb
xchg
xchg
decb
lahf
push
pushf
and
jae
adc
xor
and
push
pushf
add
adc
push
jb
xchg
add
xchg
cltd
xlat
jo
push
add
dec
ret
ljmp
adcb
sub
adc
dec
cld
add
add
dec
cmp
sub
icebp
stos
out
popa
pop
xor
fidivrs
mov
jmp
add
rcl
out
pop
inc
in
mov
mov
lret
add
pop
adc
cli
jne
roll
scas
in
nop
adc
xchg
shl
jle
pop
je
adc
pop
jl
in
std
xchg
out
pop
sub
xor
pop
ss
push
mov
sahf
jb
add
cmpsb
imul
cmp
mov
push
mov
jle
nopl
add
or
cmpsb
mov
loop
int
pop
xchg
adc
es
xchg
popa
add
addl
std
push
pop
out
dec
ret
and
adc
lret
add
jl
pop
stc
push
add
cmp
nop
add
inc
xchg
inc
or
or
mov
jo
mov
push
data16
mov
addr16
mov
ss
shrl
sbb
pop
mov
cmp
and
push
shlb
cwtl
adc
add
mov
enter
mov
add
mov
push
mov
fdivrl
testl
jo
inc
fidivl
add
call
jecxz
aad
movsl
add
daa
mov
pop
fnstcw
xchg
add
dec
add
mov
sti
addb
sub
cwtl
dec
adc
mov
lcall
inc
pushf
inc
stc
iret
fwait
rol
add
in
ja
xor
xor
aas
and
stc
push
and
outsb
adc
out
adc
xchg
int
push
fbstp
or
jle
add
inc
shlb
aam
add
pinsrw
out
xor
add
outsl
sbb
push
mul
mov
int
adc
push
add
cld
jp
or
cmpsb
leave
pop
add
enter
movsl
add
fucom
jl
adc
add
or
mov
aas
test
add
arpl
sbb
add
leave
dec
push
rcrb
add
in
bound
pop
add
mov
ret
lret
or
xchg
cmp
lret
add
push
mov
les
add
movsb
rcrb
roll
sbb
mov
test
jl
lods
std
lea
testl
arpl
inc
ret
mov
push
mov
add
sbb
dec
xorl
outsb
ret
dec
in
xor
push
mov
iret
jmp
adc
cmp
and
mov
push
or
push
pop
test
iret
scas
dec
sbb
add
lret
xor
pop
testl
stos
stos
mov
add
and
mov
faddl
inc
mov
add
cmp
imul
add
in
cmp
ret
loope
xor
add
cmpsl
lds
xchg
sbb
adc
adc
arpl
cmp
xor
inc
jae
dec
add
shrb
add
or
lea
mov
movb
hlt
sub
out
jge
out
and
xchg
adc
in
cmp
sti
addb
movnti
sbb
sahf
add
dec
dec
shlb
push
addl
cmc
shlb
mov
lods
lcall
add
mov
lds
jp
pop
add
cld
inc
dec
inc
ja
nop
sbb
dec
mov
add
mov
sub
cmp
movsb
sub
push
fs
pop
int3
mov
jo
sub
fcoms
test
sbb
loopne
ss
push
fists
xor
add
fisubl
add
call
ret
pusha
add
or
jmp
adc
jns
testb
mov
nop
xorb
loope
or
dec
add
loopne
cmpsb
dec
push
rcr
test
shrl
xor
pop
mov
pop
pushf
xchg
dec
rorl
add
or
movsl
imul
mov
xor
add
add
or
scas
bound
xor
mov
mov
cmpsb
mov
gs
add
cmp
loopne
push
or
or
dec
xchg
jbe
or
std
adc
sbb
and
xchg
movsl
arpl
push
sub
push
imul
add
ret
sbb
ja
add
rorl
rcr
mov
sbb
insb
add
and
ss
dec
cld
inc
and
rcrl
add
rcl
add
popa
lret
ret
and
add
xchg
push
mov
mov
pop
jbe
les
lea
mov
and
int3
xchg
movl
inc
sbbb
or
mov
sbb
cli
adc
mov
inc
and
cmp
push
mov
mov
fldl
pcmpeqb
sbb
cmc
movsl
ret
out
add
cmp
push
mov
xor
xchg
mov
xor
jmp
mov
lret
inc
push
add
int
adc
call
or
scas
mov
sbb
inc
int
add
inc
or
xlat
and
out
mov
jl
loope
mov
push
jo
jae
mov
mov
enter
jge
push
xchg
fmull
sahf
arpl
lcall
fs
jp
push
push
jo
pusha
add
std
movsb
rorl
and
jecxz
repnz
or
add
movsl
test
shlb
sbb
add
ret
and
jae
enter
ljmp
push
movsb
test
xor
mov
inc
jmp
cmpsl
xor
jno
jbe
fcoml
pop
add
lret
jnp
mov
popa
imul
out
mov
push
add
jle
incb
fwait
cmp
daa
cld
mov
add
enter
add
cmpsl
xor
and
pop
insl
dec
mov
add
xor
mov
add
jmp
loopne
jnp
fwait
mov
mov
push
nop
pop
or
jns
mov
rcrl
push
cmp
fcompl
xchg
add
mov
and
pop
test
pushf
add
shrb
mov
movl
int
in
imul
roll
cmp
push
inc
hlt
test
loopne
jecxz
lcall
popa
fidivl
and
pop
dec
jge
rcl
out
imull
inc
xor
cld
pop
fnstsw
je
xchg
or
cltd
out
add
popa
push
push
add
cmp
add
mov
nop
or
xchg
mov
add
loop
mov
push
outsb
shrl
inc
in
clc
mov
add
add
mov
outsb
jecxz
pop
sub
out
jno
xor
mov
add
and
push
add
xchg
fsubr
repnz
cmp
out
xchg
movntq
mov
inc
add
sti
add
pop
lods
push
add
popf
xor
xchg
daa
js
jge
loopne
add
mov
fisubrl
mov
add
sbb
add
nopl
add
cmpb
sub
dec
xchg
and
sub
inc
jle
jg
xchg
cmc
push
or
push
cld
inc
add
inc
fwait
cwtl
add
and
xchg
push
and
outsl
lock
mov
pop
in
in
sbb
adc
inc
xchg
push
es
sub
mov
enter
xbegin
pop
cltd
jp
add
sbb
test
xchg
xchg
add
xchg
mov
mov
xor
cmp
aas
mov
add
fst
inc
outsb
sbb
pop
pop
dec
xor
movsl
stos
add
sub
insl
and
cmp
into
push
mov
push
rorl
aad
scas
pop
add
or
fildl
xchg
and
addr16
jge
les
push
dec
out
fwait
test
push
fidivrs
or
sub
add
or
scas
cwtl
mov
push
jb
ror
addb
push
roll
add
push
xchg
pop
aam
fcmovu
pushf
cld
add
icebp
popa
or
jb
xchg
dec
loopne
push
in
cmp
push
mov
inc
inc
js
pop
jg
dec
xor
insl
in
dec
add
adc
cmp
add
out
imul
and
fcomps
add
dec
fs
cmpsl
movsb
gs
mov
jb
rorl
or
pop
dec
add
les
test
mov
mov
fists
mov
sub
jl
outsl
cmp
xchg
add
mov
stos
in
test
adc
in
xor
add
cmpsb
xor
pop
loopne
mov
insb
sbb
push
push
dec
test
punpckhdq
or
pop
les
add
cmp
gs
push
xor
enter
lret
popa
inc
adc
sbb
lods
outsl
cmp
mov
cmp
data16
mov
mov
cmp
in
outsl
jne
jl
out
push
loopne
cmp
in
jne
add
js
add
xchg
fldl
inc
adc
aas
daa
xchg
imul
call
fs
mov
out
jns
sbb
xlat
cmp
xchg
lods
inc
fadds
push
rcrb
fisttps
jns
lcall
addr16
add
xor
jg
add
push
push
ds
nop
int3
inc
add
mov
ja
jo
jns
shlb
out
xchg
sbb
and
sbb
rorb
in
lret
pusha
aad
add
or
jge
push
orl
push
jno
mov
in
push
movsl
mov
in
and
add
sub
out
pop
lret
add
sub
add
lock
in
cmc
mov
xchg
lahf
jle
add
insb
mulb
into
sti
cwtl
out
adcl
add
cmp
and
out
lahf
add
pop
mov
mov
ss
subb
jmp
lahf
cmp
sub
fistl
movsl
loope
addb
addl
lds
int
adc
sbb
icebp
push
push
or
add
push
in
mov
mov
insb
cltd
inc
mov
pop
pop
push
push
testb
shr
ret
fsubrs
dec
sub
add
lock
dec
icebp
push
int3
ss
or
xchg
popf
jp
out
pop
add
pop
mov
pusha
pop
xchg
mov
lods
fiadds
js
aas
adc
orb
aad
shrb
add
cmp
fmul
mov
lock
push
cld
jae
sub
jns
aam
mov
scas
js
push
out
dec
add
jmp
and
in
or
jge
rclb
ror
mov
mov
fadds
sub
adc
repz
imul
add
je
call
mov
call
adc
js
cld
xchg
insb
sub
or
add
pop
outsl
inc
mov
sbb
push
mov
scas
pusha
je
movsb
sub
rorl
add
aam
decl
mov
add
cs
cli
and
cmp
push
adc
adc
fsubrl
xchg
and
xor
pop
xor
adc
stos
or
sbb
cmpsl
outsb
jae
cmp
icebp
sbb
jbe
sub
sub
add
or
sbb
add
rcl
roll
ja
in
push
jp
cmp
or
mov
xchg
xor
sub
dec
jp
xor
sbb
mov
repnz
xchg
mov
lods
inc
loopne
fwait
mov
test
in
inc
mov
fdivrl
add
sbb
loopne
cli
flds
pop
mov
sub
rcrb
add
rorl
push
mov
fdivrl
xchg
jp
sub
les
add
lds
sahf
add
xor
mov
in
shll
inc
or
fidivrs
nop
jecxz
push
fmuls
push
insb
stc
pop
push
push
aas
sbbl
je
arpl
push
insl
out
cwtl
int
mov
or
inc
xor
aam
daa
lods
or
pop
andl
clc
adc
lods
in
add
push
rorb
inc
or
inc
in
add
in
and
fs
add
fdivs
inc
push
adcl
in
lods
shll
pop
cld
pop
adc
mov
cwtl
lret
rclb
mov
mov
out
outsb
jnp
add
mov
pop
add
inc
popa
xchg
enter
pop
imul
loopne
add
insl
pop
in
jbe
fisubrs
xor
add
out
xor
je
lds
daa
push
sub
cli
sbb
mov
aaa
xor
cmc
and
xlat
add
subb
jg
push
xchg
not
cmp
fsts
jecxz
cmpsl
dec
cld
or
fiadds
jo
addb
cs
popf
dec
mov
loopne
pop
or
push
dec
add
cmc
or
xchg
rol
imul
add
inc
inc
cmp
mov
pusha
aas
fdivl
cmpsl
insl
sbb
and
dec
addb
inc
sbb
xor
aas
fbstp
cld
test
sbbb
jp
xchg
dec
xchg
push
add
sbb
add
jmp
popf
and
sub
cltd
or
sti
cwtl
fadds
and
xchg
addb
xor
movsb
xchg
sub
mov
sbb
mov
mov
ja
inc
les
inc
or
mov
jnp
sbb
daa
jge
adc
or
test
or
mov
mov
mov
dec
inc
or
adc
mov
mov
xor
push
add
pop
inc
add
mov
adc
ss
repz
cmp
mov
shlb
daa
clc
push
pop
popa
mov
xor
mov
push
jb
rorb
outsl
lea
das
filds
movsl
mov
cli
push
sub
inc
out
inc
xor
lods
xor
sbb
lret
xchg
mov
out
and
sti
inc
mov
adc
je
daa
lahf
dec
and
incb
add
leave
push
add
ret
push
insb
dec
inc
add
jae
icebp
and
test
loopne
les
imul
shll
adc
lea
cmp
and
push
cmp
in
add
add
scas
add
addl
jg
inc
add
xchg
scas
fiadds
dec
mov
sahf
mov
testb
xchg
aas
mov
xor
mov
inc
or
in
mov
and
add
sti
mov
out
add
or
jb
add
sahf
leave
jnp
je
imul
mov
push
jp
call
mov
sub
adc
xchg
mov
ret
cmpsb
jg
sub
das
inc
out
mov
adc
push
xlat
cmp
and
adc
sbb
leave
sbbb
add
das
or
std
mov
xchg
movsl
in
ljmp
pop
dec
cli
in
pushf
ja
std
repnz
adcl
jo
cmpsb
cmp
push
add
mov
add
pushf
xchg
cmpsl
aam
enter
sti
add
je
pop
ficoml
ret
rorl
jae
call
xor
mov
xor
mov
push
cltd
add
es
jg
aad
out
add
aas
or
testl
mov
ret
sub
jne
lea
movsb
fs
es
xor
imul
jne
dec
repnz
add
pop
lret
insb
push
mov
lahf
sar
ja
add
jmp
jmp
icebp
out
imul
jns
into
inc
sub
insl
fcompl
ja
xor
rorb
mov
rcll
imul
movsb
imul
cmovle
addr16
insl
outsl
shlb
in
sbb
les
push
xchg
sbb
mov
cltd
loopne
add
jmp
imul
ret
int3
add
sbb
adc
push
in
std
insl
add
repz
add
out
cltd
mov
push
cmp
aam
push
sub
clc
pop
insl
in
add
xchg
inc
sub
repz
adc
in
add
mov
adc
add
das
fmull
loope
pop
add
inc
mov
jmp
outsl
add
or
aam
adc
inc
mov
cmp
xchg
push
lods
mov
dec
add
insl
inc
adc
std
je
testb
out
xchg
lahf
in
mov
cwtl
clc
jle
sar
mov
rolb
cmp
push
in
xchg
leave
add
aaa
cli
inc
push
mov
xor
movsl
add
lcall
nop
bound
rclb
lods
aam
mov
inc
or
push
int
and
cmpb
nop
xor
enter
add
icebp
push
mov
aam
inc
fisubl
pusha
mov
jo
jbe
add
rcrl
sbbl
add
in
sbb
or
and
push
dec
loopne
lahf
push
daa
add
int
cld
rclb
add
inc
sub
add
add
pcmpgtb
xchg
stos
cmpsb
dec
dec
mov
sub
pop
xor
in
pop
loopne
sub
cs
mov
stos
push
push
xor
sbb
inc
mov
jae
cmp
push
pop
scas
aaa
call
in
ja
sbb
pop
pusha
add
jnp
ffreep
cmp
and
or
rolb
ret
xor
and
pop
pmaddwd
pop
and
mov
sarb
shrb
int
dec
pop
add
pop
sub
aas
movsb
add
add
inc
arpl
jnp
add
cmpsb
jno
sub
mov
jno
xchg
pusha
pop
das
dec
sub
mov
inc
dec
mov
loope
and
scas
ret
xchg
dec
js
add
fisubrs
lods
out
and
xor
xor
imull
add
cmp
sti
ret
shlb
pop
add
les
rcrb
cld
jmp
pop
pusha
mov
cltd
popa
xor
fisubs
sub
lock
xlat
cltd
sub
add
mov
inc
inc
pusha
mov
fs
fdivr
hlt
jne
dec
or
xchg
dec
daa
push
xchg
pop
sar
xchg
sbb
cli
pusha
xor
mov
sub
fwait
sbb
sub
lock
push
and
fs
daa
loope
cmpsb
out
fcompl
fsub
mov
mov
sbb
testl
test
fxsave
jg
jnp
sub
fs
ja
and
adc
push
clc
jns
add
inc
stos
dec
add
std
push
push
adc
pop
rolb
stc
jle
popa
sbb
movsl
push
mov
shrb
ret
xlat
aaa
out
jnp
sahf
sbb
pop
xchg
jbe
mov
or
rorl
in
mov
add
ds
mov
inc
test
adc
add
ja
jns
movsl
jnp
xor
add
fdivl
add
icebp
int
divb
cmpsb
add
aaa
and
in
das
push
mov
and
adc
lret
pusha
mov
mov
adc
dec
stc
cld
bound
out
cmp
sbb
dec
inc
pop
pop
add
out
rclb
cwtl
add
pusha
sub
fistl
mov
orl
test
adc
fsts
cmp
daa
xchg
sbb
dec
add
shll
push
ss
int3
scas
xchg
and
jae
add
push
orl
mov
xor
fdivrs
inc
mov
xchg
rclb
add
lret
xchg
dec
cld
cmpsb
shrb
push
sbb
push
jmp
pop
jecxz
xchg
and
push
stos
cwtl
add
jle
mov
add
add
xor
sbb
mov
push
jge
add
mov
std
adc
ja
push
pop
xchg
add
rolb
add
xorl
push
pop
add
jo
rorl
xchg
movsb
push
lods
add
jmp
and
cmp
sti
rcrb
push
xchg
add
add
adc
lcall
test
imul
loopne
inc
cmpb
sbb
faddl
xor
lret
loopne
loopne
fmuls
bound
mov
mov
ret
xor
ret
test
jb
pushf
xor
dec
leave
mov
sbb
outsl
loope
bound
push
cli
cmp
das
mov
jl
push
in
jne
mov
sbb
decl
sahf
and
sbbb
jae
add
or
icebp
loopne
mov
sub
add
jno
sbb
sarb
rolb
pop
mov
std
dec
mull
test
adc
imul
xor
sbb
mov
into
cltd
ljmp
add
jo
sbb
mov
add
dec
filds
xchg
mulb
fs
out
insb
sub
in
lds
js
sbb
pop
mov
dec
fdivrs
add
scas
add
and
js
cmp
cwtl
pop
pop
leave
test
jmp
inc
js
stc
mov
mov
push
in
out
and
jl
sub
pop
add
scas
fnstsw
mov
pop
xor
int
adc
push
mov
das
mov
or
movsb
add
out
sbb
or
dec
shll
add
and
mov
ds
add
cmpsl
add
sarl
lahf
mov
cmp
inc
into
out
xor
int
lcall
push
nop
or
add
adc
and
inc
fsubs
arpl
add
ret
jbe
xchg
add
pop
repz
mov
hlt
mov
jae
xor
pop
adc
mov
and
adc
repz
fidivs
lods
add
mov
pop
inc
or
out
cmp
les
orl
testl
or
mov
cmp
sub
mov
xor
jae
cmpsb
jne
add
sbb
cmp
ret
inc
push
mov
add
scas
dec
shll
nop
imul
cmc
add
les
hlt
inc
dec
shrl
fisubrl
xchg
jbe
pop
adc
sub
sahf
sti
addb
pop
and
add
clc
and
push
sub
or
jo
das
nop
xchg
add
dec
or
rorb
push
mov
xor
or
xchg
or
inc
pop
sbb
lock
sti
jmp
mov
pop
mov
adc
dec
in
ljmp
int
cltd
adc
es
jo
xor
and
cli
je
popl
push
jmp
sbb
xor
outsb
xchg
data16
loope
add
daa
dec
je
decb
add
stos
lods
aas
add
cltd
mov
fcoms
push
sub
jl
outsl
xor
orl
or
push
test
out
out
rclb
mov
cmp
cmc
add
push
inc
sbbb
cmp
std
lret
out
sbb
dec
mov
mov
cwtl
xor
xchg
clc
sbb
add
jl
add
add
and
pop
add
loopne
add
jae
aad
ret
add
push
mov
pusha
add
out
loop
or
and
loopne
mov
popa
into
push
xchg
fimull
adc
sub
adc
es
xchg
push
into
pop
cld
add
add
shrb
ss
jl
jns
loopne
mov
xor
push
xor
arpl
mov
outsl
pop
inc
loop
push
mov
jge
push
mov
cld
mov
loopne
or
cmp
add
push
xor
fnstsw
sub
mov
sbb
test
pop
pop
inc
add
fcmovnu
popf
scas
bound
mov
sub
jnp
add
stc
mov
pop
andb
push
test
movsl
sbbb
ret
add
inc
pop
pop
or
add
mov
inc
outsl
mov
mov
pop
jecxz
push
add
xchg
inc
sbb
add
mov
mov
shlb
movsl
rcll
xchg
sbb
clc
sub
mov
and
pushw
pop
xor
add
fwait
stos
fcomp
and
add
xchg
dec
inc
mov
adc
or
mov
xchg
subb
repnz
cmp
inc
mov
test
sahf
lods
pusha
aaa
push
sbb
add
neg
push
pop
lcall
out
ja
push
cmpsl
pop
andb
pop
pop
add
jb
dec
add
inc
mov
addl
test
dec
and
push
add
imul
bnd
pop
dec
pop
add
push
adc
psllw
jnp
lahf
mov
scas
adc
jl
cmp
movsb
mov
gs
call
xor
cmp
mov
or
fstl
fsub
nop
jno
add
xlat
or
xor
inc
pop
mov
add
cltd
fs
cmp
pop
inc
mov
add
mov
mov
xor
or
add
in
in
loope
xchg
add
dec
ss
jmp
movsb
or
rol
popa
cmp
push
scas
out
xchg
ficompl
cmp
lods
fcmovnb
loop
xor
dec
push
and
inc
repnz
mov
inc
sahf
daa
add
ficompl
push
push
add
out
or
fmuls
push
imulb
jb
js
xchg
nop
adc
jp
popa
sbb
cmp
stos
xor
ficomps
aaa
jg
mov
cmp
clc
or
cmp
lea
xchg
cmp
call
mov
add
ja
add
sbb
mov
orl
push
aad
lods
push
jg
push
or
inc
nop
in
jge
je
mov
dec
loopne
rorb
jbe
pop
push
test
ret
sarb
xchg
data16
nop
flds
ss
mov
mov
xor
cli
test
xlat
dec
cmp
xor
or
mov
lea
in
pop
mov
adc
add
push
and
dec
jl
add
adc
in
out
mov
add
imul
loop
dec
dec
movb
loopne
outsl
xor
inc
sbb
add
outsl
jns
add
pushf
mov
lret
aaa
leave
adc
or
fidivrl
nop
dec
data16
add
inc
and
add
lcall
add
loop
push
add
mov
in
das
flds
or
pop
mov
add
cmp
push
jae
dec
pop
add
xchg
and
lods
jle
or
adc
push
psrad
xor
xor
add
push
lret
pop
lods
jp
add
xchg
mov
xchg
add
or
mov
call
shlb
mov
subb
or
push
mov
cwtl
and
adc
push
or
pop
jb
pop
and
mov
pop
push
cs
dec
fwait
nop
clc
pop
or
ss
xchg
cltd
or
cmp
push
xor
or
add
cld
push
sbb
ficoml
or
inc
pop
test
pop
fistps
andb
int3
jge
jle
and
rcll
xchg
lahf
add
jnp
stc
imul
rcr
push
rolb
cmp
mov
aas
dec
push
je
inc
mov
out
and
in
call
inc
inc
add
cmpsb
pop
cmp
adc
ljmp
test
xor
shlb
fnstenv
sub
hlt
xor
icebp
push
bound
add
cs
cld
or
jge
mov
cmp
mov
movsb
xchg
scas
nop
lock
into
add
pusha
xchg
addl
shl
aad
sub
adc
pop
jns
sub
aaa
dec
and
mov
sbb
cltd
loope
movsl
jae
out
and
mov
inc
inc
orb
or
inc
sbb
mov
add
push
lods
stc
xchg
and
mov
cmp
push
out
fbld
js
push
or
adc
pop
add
test
mov
adc
add
adc
lahf
ds
add
mov
int
imul
and
loopne
sub
cmp
leave
test
push
add
mov
mov
ja
or
mov
popa
ja
inc
loop
sub
loopne
mov
sbb
fildl
jo
push
les
popf
stos
pop
or
add
cmp
hlt
mov
add
pop
mov
add
xor
cmp
cltd
das
int3
mov
nop
xor
js
mov
push
in
xchg
sub
loopne
add
fadds
add
es
stos
std
cmp
int3
divl
mov
imulb
add
pushf
in
add
sbb
add
mov
pop
add
rcr
aas
xorl
push
popf
incl
stc
addb
mov
inc
popf
mov
lods
sub
mov
mov
stc
jb
cmp
pushf
inc
add
mov
incl
xor
aas
addb
ret
pusha
int3
adc
movsb
add
cmp
and
push
dec
in
mov
add
sti
call
push
imul
rcrb
mov
aas
cmpsb
mov
push
push
fs
fwait
int
das
arpl
enter
add
push
cld
out
mov
shll
add
add
enter
cmpsb
xchg
imul
loopne
jecxz
add
sbb
loop
cs
sti
add
inc
aad
add
add
lcall
mov
hlt
mov
das
stos
aad
or
into
fcmovbe
lcall
sbb
roll
fmul
cmp
add
and
inc
cmpsb
add
xor
aaa
hlt
xchg
push
add
cli
sbb
inc
arpl
jae
xlat
push
popf
aaa
push
arpl
pop
add
lds
hlt
sbb
scas
int
lret
jbe
add
daa
xchg
adc
inc
faddp
dec
int3
xor
pop
mov
add
enter
jno
ja
fiaddl
mov
pop
sbb
cmp
pop
in
js
lea
add
jae
stc
dec
wrmsr
cmp
fadds
adc
data16
out
ret
stc
in
lods
aam
add
fstpl
add
test
shll
into
aam
pushf
and
stc
pop
push
movsb
jne
inc
mov
mov
jge
mov
dec
aaa
scas
pop
pushw
jb
mov
fdivp
dec
sbb
fwait
jp
sub
cmpsb
mov
add
sub
push
xchg
add
int
jp
jle
in
add
cmp
rolb
sbb
xchg
lock
sahf
jno
add
jle
or
ds
imul
ficompl
jb
add
pop
aam
add
insb
leave
je
or
pusha
push
mov
xor
add
push
jnp
pop
cmp
inc
add
fwait
lods
jne
xchg
jno
ljmp
xchg
out
sub
fsubl
or
clc
sbb
fildl
lret
stos
or
bound
pusha
or
sub
push
andps
clc
jb
inc
orb
jns
cmp
rcl
ja
jae
and
mov
mov
sub
js
cs
mov
arpl
shll
cmp
mov
loop
pop
ss
inc
fldt
mov
invd
ret
ror
sub
or
popf
add
pop
pop
push
lods
ljmp
fiaddl
pop
xchg
ds
sub
cmc
jp
sub
cmp
jb
das
jle
idivl
pop
addl
insl
add
scas
mov
mov
outsl
stos
js
repnz
mov
rcr
xor
add
adc
push
les
rorb
cmp
mov
adc
das
loopne
aam
push
lods
mov
xchg
leave
push
cmpb
mov
add
cli
push
in
rolb
call
add
xor
nop
cltd
inc
mov
pusha
popf
and
add
jge
sub
shlb
rep
or
imul
sahf
cmp
add
scas
ja,pt
xor
bound
dec
or
aam
cmc
lods
adc
jo
lcall
sub
cltd
mov
xor
or
add
adc
test
pop
aas
clc
push
ss
js
jge
sbb
das
popf
push
ret
stos
mov
add
add
dec
add
orb
xchg
outsb
les
push
ret
rorb
in
out
cmp
cmp
cmc
frstor
xor
add
jg
inc
pop
mov
in
idivl
jecxz
or
and
pop
nop
pop
xchg
ret
call
dec
fisubrs
xchg
pop
cmpsb
loopne
jmp
dec
jge
fs
jo
pusha
pop
outsl
icebp
jae
mov
jge
add
mov
sbb
mov
pusha
fimull
and
jns
cmpsb
std
pop
xor
insl
adc
arpl
jns
cmp
add
fisubrl
inc
mov
stc
jbe
add
shr
clc
loop
push
imul
xor
sbb
inc
es
scas
negb
stos
sbb
jb
push
pop
aaa
les
or
test
lahf
add
fstps
add
addb
and
add
popa
call
push
pusha
mov
add
pop
cmc
cld
jne
cmp
push
icebp
dec
mov
mov
push
mov
pop
mov
arpl
ljmp
cltd
sarl
pop
mov
test
fcmovne
jno
cmp
xor
loop,pt
cwtl
xchg
in
dec
leave
and
or
js
dec
and
cmpsl
and
adc
jmp
xor
add
les
xor
mov
test
push
push
in
cmc
cmp
sahf
xorb
sbb
lret
scas
add
movsb
mov
gs
jmp
ret
jns
iret
add
push
add
shrb
loopne
std
arpl
stos
add
mov
testb
ret
pop
out
sbb
ss
xchg
add
call
sbb
leave
add
roll
inc
push
addr16
add
sub
loopne
aam
pop
add
sub
jle
push
loop
cmpsl
cmpl
arpl
and
int3
jg
cmp
add
push
push
dec
sbb
adc
int
scas
pop
add
stos
add
adc
xchg
rcl
add
pop
rcrb
jbe
xchg
pop
adc
pop
les
arpl
in
out
push
push
ficomps
faddl
and
xchg
addr16
jno
rolb
push
lret
add
test
cmp
and
push
pushf
mov
lea
js
inc
decb
adc
add
cmpl
xchg
cmp
sub
push
mov
addl
andb
add
js
mov
pusha
sbb
mov
jns
shl
pop
les
clc
popa
adc
cld
out
cwtl
pop
in
add
push
mov
xor
sbb
or
jge
mov
cmpsl
in
pop
test
mov
stc
inc
pop
dec
add
sbb
mulb
pop
mov
xchg
sbb
bound
mov
arpl
int3
add
xor
push
dec
inc
movsl
fildl
ja
cwtl
push
mov
repz
or
addr16
push
xor
inc
inc
xchg
add
int3
stos
xor
pushf
pop
rorb
xor
jmp
sbb
mov
add
dec
notl
pop
and
lea
cmp
jg
xchg
xchg
and
es
add
stos
jg
loopne
lock
loope
fisttpl
nop
push
clc
cmp
push
sahf
sbb
xor
lret
fisubrl
sbb
inc
lods
je
jo
xchg
xchg
mov
rolb
or
jmp
cmp
movsb
dec
and
fmul
pop
sbb
gs
stos
andb
je
dec
or
pop
push
mull
sbb
mov
rorb
xor
js
lret
or
and
jmp
sub
mov
mov
lock
add
arpl
gs
mov
stc
dec
push
mov
insb
unpcklps
mov
fsubs
mov
pop
pop
dec
xor
outsl
call
jnp
pop
add
imul
xor
and
inc
sub
inc
jb
cmp
out
test
dec
add
inc
sbb
jo
call
dec
adc
data16
dec
fs
insb
stc
bound
test
and
movsb
cltd
ret
adc
movsb
add
mov
bound
mov
pop
mov
inc
sub
fdiv
pop
in
add
outsb
add
ret
add
std
mov
inc
fistl
add
push
mov
jl
inc
add
jae
jnp
inc
das
mov
jmp
add
jg
mov
add
pop
sub
insb
sub
lds
or
mov
pop
or
xor
add
xchg
add
mov
call
popa
cli
xor
mov
ljmp
and
mov
jns
mov
stc
add
popl
inc
sbb
add
fldl
iret
cmpsb
add
jl
mov
jae
push
xchg
stc
add
push
xor
pop
cwtl
lret
jns
xchg
test
fcmovne
mov
ds
and
inc
fs
hlt
out
lea
lock
loopne
test
negb
xchg
mov
inc
insb
sbb
cmp
dec
cmpsb
fisttpl
sbb
mov
gs
cmpsb
test
fisubs
enter
adc
aam
and
add
dec
xor
mov
xchg
xlat
es
or
or
fmull
fs
xchg
and
pop
adc
in
btcl
lods
xchg
pusha
dec
ds
fiaddl
bound
fnstenv
dec
popa
mov
add
and
adc
pop
mov
xor
pinsrw
mov
in
push
mov
mov
fcompl
pushf
dec
in
mov
jno
mov
push
gs
outsb
mov
cwtl
cmpsl
mov
inc
cmp
mov
shll
bound
mov
dec
jmp
mov
cwtl
mov
fcompl
enter
fwait
inc
push
jns
sbb
mov
sub
fiadds
xor
icebp
test
mov
add
inc
nop
and
cmp
pop
adc
arpl
mov
lock
ds
adc
fnstsw
cmp
nop
cmp
cltd
in
sbbb
clc
mov
subl
pop
fdiv
mov
cltd
adc
sbb
add
hlt
sarb
pop
mov
rcrb
mov
in
inc
int3
or
xor
push
mov
cli
je
add
cmp
dec
ds
xor
add
loopne
and
fs
iret
cli
dec
sbb
mov
popa
mov
mov
mov
add
test
add
pop
lret
dec
xchg
ret
add
cltd
or
mov
popa
lock
ja
add
mov
orl
xchg
pop
pusha
xorb
jmp
mov
xchg
sbb
in
ljmp
sbb
pop
icebp
add
nop
fs
les
ss
and
mov
adc
jg
inc
xchg
jbe
lahf
insb
into
das
test
dec
xor
hlt
and
hlt
cli
fildl
push
xchg
jg
imul
decl
fcom
ds
int
movsl
push
je
xchg
add
mov
test
mov
inc
add
xchg
cs
sbb
sti
sbb
pop
jns
js
pusha
jg
dec
or
or
out
add
mov
ljmp
popf
jb
add
add
aam
and
cwtl
andl
add
pusha
cmp
sbb
add
dec
mov
hlt
mov
cmp
push
mov
pop
stos
pusha
mov
adc
jnp
int3
xchg
fmull
add
mov
cwtl
lock
sbb
lods
add
dec
or
cmp
arpl
and
sbb
add
imulb
gs
inc
jno
sub
aaa
lock
xchg
shl
inc
jmp
add
fisubs
mov
lahf
sbb
jmp
cli
adc
or
pop
add
enter
mov
mov
inc
jb
pushf
xor
or
xor
pop
mov
dec
xor
add
or
add
mov
mov
ret
add
movsl
shrb
fisttps
mov
mov
scas
outsb
push
mov
pop
or
lahf
orl
add
sub
cmp
cmpsb
mov
xchg
icebp
shl
add
sub
jg
dec
cwtl
adc
dec
push
xlat
add
mov
cmp
insb
mov
inc
stos
mov
adc
inc
push
sub
jbe
and
sti
xor
cmp
sub
cmpsl
lahf
repnz
dec
fisubs
mov
sub
add
arpl
daa
frstor
imul
pusha
sub
call
orb
outsb
in
add
mov
ret
sub
shrb
add
cmp
adc
push
xchg
cmp
cld
xor
dec
imul
cmp
inc
xor
cmpl
pushf
pop
in
ja
cwtl
mov
adc
pop
lods
jns
in
icebp
mov
fnstsw
inc
inc
add
mov
fs
add
outsb
xor
inc
repz
add
push
nop
lock
test
in
pop
fwait
enter
adc
xchg
mov
enter
or
mov
pop
cmpsl
add
and
loope
call
jb
add
cs
mov
inc
add
or
sbb
inc
decl
xor
mov
hlt
xchg
sbb
mov
lret
mov
or
lcall
ret
push
js
cmp
lds
stc
mov
shr
fisubrl
adc
mov
test
xchg
sahf
add
inc
addr16
rcrb
mov
loopne
xor
flds
add
mov
loopne
adc
sub
mov
xchg
imul
add
nop
push
mov
mov
jno
mov
push
adc
adc
pop
xor
or
dec
addr16
cmpsl
mov
adc
lret
sub
notb
and
sub
mov
xchg
xor
ds
imul
inc
push
add
adc
and
sbb
add
add
mov
fcompl
and
mov
jecxz
pop
mov
mov
add
or
xchg
add
into
movsb
fsubl
fs
xor
adc
movsb
and
push
das
ljmp
orl
inc
je
lock
adc
mov
adc
insb
andb
loopne
fadds
inc
punpckhdq
and
les
pop
jnp
test
inc
fidivrs
shrb
andb
or
daa
xchg
push
adc
add
es
and
into
mov
scas
add
hlt
push
pop
lock
push
arpl
pop
es
pop
jnp
stos
add
sbb
xchg
pop
es
cli
push
scas
call
ljmp
repz
or
fwait
adc
into
lock
pop
pusha
dec
hlt
rcrl
sub
call
add
dec
popa
inc
mov
sub
lret
push
mov
pop
cmp
sbb
or
jnp
ret
lock
addb
add
addb
test
add
rcll
sub
shrl
jno
or
rorb
shlb
mov
repnz
add
sbb
outsb
xor
push
and
inc
insl
in
xchg
dec
adc
addb
dec
xchg
gs
pop
add
dec
icebp
cli
jge
stc
aad
aam
cmp
test
enter
test
shl
repnz
and
jmp
add
mov
fmuls
push
mov
fildl
stos
xchg
sbbb
imul
add
jbe
orb
pop
mov
loop
icebp
jp
push
xchg
ret
adc
or
testl
mov
mov
sub
xchg
mov
sbb
inc
cli
scas
mov
push
jo
jle
xchg
xchg
adc
out
and
das
icebp
xchg
dec
clc
into
imul
int3
xor
rclb
lret
xor
loopne
jmp
sub
test
popa
and
cmp
xchg
frstor
fdivrs
mov
mov
add
rorl
popa
mov
add
movsb
add
add
sub
and
and
inc
insb
add
jne
sbb
mov
faddl
fcoms
or
pop
pop
dec
je
adc
stos
mov
popa
pop
andl
pop
fs
outsl
sar
lret
movsl
xor
pop
add
jl
add
push
repz
dec
cmpsl
mov
mov
jmp
xchg
jbe
lret
jo
or
call
push
inc
fsubl
add
shlb
pop
rclb
or
mov
sbb
inc
add
aam
addb
imul
sub
call
roll
xchg
sti
sahf
xchg
lret
or
mov
lcall
xor
mov
js
aam
popa
sbb
rclb
pop
fimull
dec
subb
in
fadds
ds
xchg
cmpsb
sub
xchg
mov
add
sahf
or
add
pusha
inc
cmc
pop
mov
fldcw
scas
nop
xor
add
outsl
aaa
jp
loope
jns
es
in
lds
out
pop
sti
lds
scas
add
imul
nop
xchg
sub
and
stc
test
call
nop
mov
movsb
inc
call
mov
cld
fisttpll
jge
fldcw
aas
xor
out
popf
add
jmp
add
aad
out
cmp
in
or
icebp
xor
adc
stos
pop
daa
cmp
xor
cmp
sbb
pop
nop
cli
into
cmp
push
jecxz
out
inc
add
push
in
pushf
pop
add
hlt
push
dec
clc
mov
dec
cmpb
outsl
hlt
adc
jo
mov
lahf
cmp
mov
dec
xor
push
or
adc
mov
sbb
cltd
xchg
jb
aad
jmp
push
lock
sbb
jno
es
ret
popa
mov
fsubrs
dec
ficoms
cmp
frstor
jo
faddl
mov
xorl
imul
insl
out
dec
add
imul
or
jge
cmpsb
pop
leave
repz
pop
cmp
js
int3
sbb
adc
cwtl
jmp
loopne
popf
stos
fwait
add
nop
test
jae
ja
js
aad
jmp
das
addl
inc
xchg
ja
orl
xchg
adc
enter
xchg
adc
xor
cmpsl
mov
pop
adc
dec
add
lret
xchg
add
adc
push
lahf
xchg
sub
out
leave
test
repz
sbb
arpl
sbb
shlb
stos
cld
call
std
ja
mov
push
sub
lret
jb
call
or
mov
lods
sahf
lock
dec
shlb
jl
test
push
adc
pop
inc
dec
or
dec
adc
nop
pushf
push
adc
pop
dec
sbb
fimull
testb
aam
dec
in
enter
xor
jns
pop
jbe
sbb
mov
adc
xor
dec
pop
sti
lods
adc
dec
lods
jp
clc
or
ret
lret
mov
add
test
mov
pop
adc
in
lcall
inc
cwtl
cmp
sahf
lock
lods
movlps
sub
cmc
stc
ficompl
dec
adc
mov
lahf
stos
jns
dec
fdivrs
lret
icebp
push
xor
push
mov
mov
ds
popa
inc
and
je
push
fstl
js
sbb
sbb
push
fldenv
xchg
out
loop
gs
sbb
dec
hlt
loopne
add
xchg
sahf
push
test
test
out
addb
add
jo
inc
mov
sub
fcompl
int3
mov
inc
cli
cmp
pop
sbb
repz
adc
add
mov
loope
das
jbe
adc
movsb
jmp
xchg
add
and
popa
movsl
shll
jp
pushf
and
and
notb
test
xchg
dec
test
sbb
pusha
rolb
ret
or
dec
bound
cmp
mov
mov
add
fcoml
stc
cwtl
fs
pop
adc
add
push
test
dec
mov
mov
fistl
dec
mov
ret
adc
pushf
fs
out
lret
dec
add
mov
pop
aas
pushf
and
stos
cmp
repz
add
outsb
sbb
dec
add
inc
cmp
cli
cmpsb
and
dec
pop
nop
or
js
cmp
int
mov
add
loopne
pop
mov
js
cli
dec
ret
mov
dec
subb
pop
int3
nop
pusha
pop
mov
movsb
mov
pop
push
add
pop
add
aad
mov
adc
clc
daa
or
shlb
lock
dec
jb
pop
orb
lret
lcall
mov
jae
or
xor
les
add
jge
sub
pop
push
add
dec
xor
ss
and
enter
lea
jl
jno
mov
movsb
mov
fdivp
lcall
sti
jp
insl
or
or
shr
push
mov
add
jg
mov
in
lock
jle
int3
xor
add
adc
inc
add
xchg
mov
rolb
xchg
daa
cmc
adc
in
dec
mov
mov
mov
addb
popa
mov
dec
imul
push
mov
pushf
leave
icebp
mov
and
je
in
cmp
pop
push
add
shl
xchg
sbb
dec
mov
add
pop
push
outsl
es
mov
js
add
xor
adc
test
and
add
or
jb
add
inc
jmp
sbb
push
add
sbb
add
iret
cwtl
insb
cmp
loope
mov
xchg
pop
movsb
and
sub
xchg
sub
xchg
xchg
sbbl
hlt
int3
pop
pop
or
add
aam
in
or
mov
adcb
dec
cmovo
popf
aaa
adcl
pusha
ficompl
and
punpckhwd
test
push
and
popf
mov
inc
ret
and
or
add
ja
cmp
add
inc
or
push
dec
add
adc
bound
mov
or
in
in
push
add
inc
or
add
dec
pop
fs
add
inc
add
lods
lods
pusha
cmpb
xchg
and
cwtl
ret
cmpb
pushf
cmpsb
pop
addl
pop
pop
inc
adc
mov
xor
mov
loope
and
lea
xor
add
scas
shrb
mov
push
adc
subb
pusha
inc
or
cmc
bound
push
pop
jae
pop
cmp
adc
loopne
movsb
xchg
hlt
addr16
mov
xchg
sbb
bound
scas
icebp
popf
ret
pop
movsl
rolb
rcr
mov
cmp
in
orb
dec
mov
fsubr
xorb
ljmp
mov
sbb
data16
mov
int
and
cmpsb
out
sbb
pop
and
in
mov
hlt
lea
and
xor
add
imul
and
jge
cmp
inc
jl
xchg
cli
add
add
cwtl
in
cmp
mov
daa
cmpsb
add
outsl
mov
lock
push
adc
dec
outsl
push
mov
push
cmp
xor
inc
push
std
or
repz
int
add
mov
nop
call
dec
or
call
movsl
mov
xorl
mov
mov
sarb
outsb
mov
popa
pop
xchg
push
test
rol
sbb
mov
cmp
lahf
cmp
scas
jne
dec
imul
cmp
stc
in
out
inc
sub
xor
xor
andl
add
sbb
pop
lcall
sbb
add
fsubs
jbe
out
clc
popa
cmpsl
lods
fdivrl
add
sbb
idivb
xchg
push
jno
stos
pop
pop
or
adc
add
fst
mov
cltd
and
loope
nop
and
cmp
xchg
rcrb
push
sub
cmp
jae
cmpl
out
nop
dec
into
subl
mov
sub
in
gs
cmpb
fsubl
sbb
add
loope
loopne
jb
pop
test
jo
sbb
pushf
jno
push
fs
add
loopne
jne
push
sub
enter
push
les
add
push
sub
in
int3
jo
or
fs
in
into
xor
popf
xchg
inc
js
aaa
or
mov
loope
aas
mov
jno
add
mov
cwtl
and
xchg
dec
stc
and
mov
rolb
rolb
cmp
cltd
repnz
fsts
subl
js
jecxz
and
and
pop
jo
mov
arpl
adc
push
jno
jae
jno
das
bound
add
cmc
es
hlt
sub
add
xchg
push
dec
xchg
cmp
mov
sub
pop
jns
fisubs
aam
jne
xchg
ror
test
sub
xor
scas
inc
adc
int3
mov
lea
push
xchg
loopne
mov
mov
and
lds
add
jbe
jg
repnz
mov
push
adc
ret
scas
and
lret
add
mov
fisubl
jns
nop
test
xchg
add
mov
outsb
in
add
out
mov
mov
dec
in
xor
add
sbb
add
xchg
shlb
adc
pop
and
lcall
es
inc
jg
sub
test
cwtl
add
out
fadd
inc
call
mov
push
dec
int
add
pop
pop
and
mov
popa
xchg
fsubr
loop
lret
add
jns
or
mov
cmp
out
ja
addr16
pop
sbb
scas
aaa
pushf
aam
pop
or
cltd
add
inc
inc
addr16
hlt
add
mov
outsl
ret
sbb
daa
adc
pusha
add
ret
jne
js
fisubrl
adc
and
imul
ret
call
jns
add
mov
mov
pop
in
xor
mov
add
ss
test
ljmp
int3
inc
iret
stos
cmp
sbb
mov
int
and
xor
sub
push
cmp
stos
fcoml
scas
test
adc
add
or
out
dec
js
and
sub
sti
shlb
and
andb
xor
or
cltd
leave
lods
push
adc
jnp
rcrl
inc
adc
push
add
xor
icebp
ret
mov
sub
xor
pusha
clc
xchg
adc
add
jl
stos
push
cmp
sbb
dec
outsb
dec
jo
pop
push
dec
push
adc
jb
pop
push
int
or
arpl
rorl
xor
shlb
sub
add
pop
and
repnz
ss
cltd
fisttpl
fwait
sti
adc
bound
or
cmpb
outsl
fs
inc
leave
add
add
incl
dec
add
push
or
add
adc
inc
and
pusha
add
add
adc
sbbl
or
jmp
fistl
fldcw
adc
sub
add
pop
xchg
mov
pop
mov
shlb
jg
xor
sbb
pop
pop
sbb
lahf
lods
addr16
nop
adc
test
push
bound
js
mov
nop
dec
clc
ret
aam
mov
outsl
adc
aam
and
mov
data16
lea
inc
dec
in
jo
add
inc
out
inc
push
stos
mov
and
xor
xchg
dec
push
push
add
push
pop
dec
add
movlhps
das
cmpsb
orb
movb
dec
inc
jno
pminub
rolb
mov
adc
inc
mov
lret
pop
adc
iret
leave
pop
mov
pop
fs
or
rolb
xor
lret
pop
inc
packsswb
and
mov
cmp
popf
inc
mov
mov
or
loope
cmpb
mov
mov
add
xor
scas
pop
bound
mov
pusha
clc
jae
inc
pop
mov
and
stos
and
lds
dec
xor
cmpsb
pop
adc
fcoml
pop
dec
jo
xchg
insb
inc
leave
mov
aas
add
imul
fildl
dec
mov
aam
xor
push
sub
pop
cmp
out
sahf
push
mov
add
and
cmpsb
sub
rclb
jge
jb
insb
adc
xchg
les
dec
push
cmp
lods
xchg
add
mov
arpl
in
mov
stos
arpl
xor
pop
pusha
out
hlt
mov
cmp
test
daa
dec
push
sub
push
xchg
and
fincstp
add
cmp
jb
loopne
mov
hlt
cmpsb
push
adc
shrl
add
mov
mov
aad
sub
pop
xorb
mov
dec
mov
adc
add
clc
out
subb
pop
push
xor
sub
inc
adc
xor
inc
hlt
dec
mov
loope
lods
push
imul
add
adc
push
and
xchg
in
pop
or
xlat
xchg
je
mov
fists
push
popa
mov
dec
ss
add
scas
dec
dec
es
sub
cmp
repz
xor
testl
out
cmpsl
or
gs
shlb
je
and
inc
mov
pop
mov
sub
out
inc
push
adc
inc
adc
and
imul
adc
pop
mov
add
push
nop
dec
movsl
mov
mov
xchg
outsl
arpl
aas
push
mov
js
pop
cmp
push
adc
sarb
add
ja
daa
push
push
faddl
cmc
daa
sbb
push
and
repnz
cmpsl
cmpsb
scas
mov
sbb
pop
add
rorb
dec
lds
adc
les
mov
sub
lds
mov
cmp
adc
pop
push
add
and
mov
mov
ret
jmp
rclb
push
push
adc
add
cmp
mov
pusha
pop
lcall
addb
nop
test
or
mov
stc
pop
cmpsl
add
repz
scas
xchg
js
ljmp
add
cmp
mov
add
mov
sub
repnz
push
mov
push
or
jg
mov
add
xchg
xor
mulb
xorb
mov
test
adc
or
cmc
mov
lret
insb
ds
add
mov
xchg
ljmp
cs
add
out
je
sub
mov
nop
rclb
dec
and
imul
add
enter
and
mov
jne
js
dec
cmp
enter
scas
xor
cmp
add
shr
shlb
incl
inc
push
lahf
popa
cwtl
pop
loop
push
int3
dec
add
add
mov
nop
xchg
xor
add
rcrl
test
cmp
sbb
jno
mov
push
shl
testl
jo
loope
push
pop
inc
and
sbb
and
fwait
add
cmp
inc
mov
loope
js
fildll
frstor
daa
adc
add
aaa
adc
movsb
mov
or
arpl
xchg
les
inc
mov
push
xchg
inc
cmpsl
pusha
pop
xor
sub
add
sbb
pop
and
aas
fnsave
lock
gs
lds
mov
sti
adc
lahf
adc
cmpsb
js
mov
cmp
movsl
test
sbb
cmc
out
inc
pop
scas
or
sar
add
je
data16
in
dec
comiss
and
inc
fsubrs
insl
add
adc
mov
mov
push
xchg
push
adcb
orl
add
sbb
add
pop
leave
push
inc
or
adc
push
les
cmpsb
add
jge
jbe
jns
add
inc
loopne
xchg
movsb
mov
ret
mov
cwtl
mov
mov
cmp
inc
pop
jge
sub
add
fldenv
into
mov
call
fstpl
lods
mov
add
xlat
pop
clc
mov
add
sbb
into
push
pop
repnz
and
stc
xsha1
cmpsb
dec
inc
xor
xorb
sbb
lahf
loopne
into
les
filds
fwait
mov
daa
sbb
inc
add
iret
push
movsb
pop
fisubrs
scas
sbb
loopne
insb
mov
les
jg
pop
cli
scas
or
in
pushf
pop
arpl
sub
push
aas
mov
xchg
fs
sub
ss
or
mov
inc
mov
cltd
add
xor
jnp
in
mov
lock
loop
mov
add
daa
sbb
add
in
jo
jo
add
dec
xchg
testb
dec
pop
mov
inc
push
push
mov
shr
arpl
xchg
fadds
mov
add
dec
lret
adc
arpl
and
loopne
stos
repz
push
cs
push
js
add
add
or
xchg
punpcklbw
xchg
inc
rolb
jp
rcrl
in
dec
negb
mov
shlb
mov
or
jo
dec
scas
mov
cmp
or
lea
and
adc
notl
jb
add
lahf
mov
inc
xor
cmp
ds
adc
pop
mov
fwait
lea
pop
mov
adc
rorl
mov
push
sbb
cs
adc
call
ds
mov
insl
push
and
iret
leave
inc
push
stos
cmp
testb
scas
dec
outsb
inc
or
and
cmp
add
stos
pop
aad
rol
push
add
into
dec
push
lea
lahf
add
jmp
loope
scas
add
inc
negl
ljmp
in
clc
sbb
and
arpl
mov
push
das
lahf
movl
insl
js
fisttps
jno
add
es
nop
or
mov
mov
sbbl
lods
cmpb
fnsave
lock
negb
and
fdivs
dec
arpl
or
popa
adc
sbb
pop
pop
call
pusha
cwtl
fildl
lods
ljmp
pop
xchg
pop
jbe
xchg
orl
mov
push
popa
int
xor
sub
add
scas
divl
lret
dec
hlt
cld
test
pusha
mov
cli
mov
mov
std
mov
inc
popa
push
or
pop
sub
mov
push
out
push
add
and
push
jmp
mov
push
cwtl
mov
mov
xorl
sbb
adc
add
arpl
dec
aad
cli
pop
and
bound
ds
int3
lea
call
add
mov
xchg
mov
sbb
cmp
fnstsw
jp
mov
add
jno
adc
mov
adc
sbb
dec
int
gs
hlt
push
sahf
mov
adcl
inc
add
mov
and
cmpb
movsl
cmpsb
cld
push
icebp
test
dec
addl
add
fcompl
repnz
popa
in
cmp
inc
sbb
add
jae
push
lods
fwait
push
aaa
and
in
test
dec
hlt
add
ret
xchg
fdivrl
add
mov
into
out
sbb
popf
nop
push
movsb
hlt
add
lods
and
xchg
jbe
mov
icebp
lds
push
nop
xorb
into
jg
cld
dec
pop
sarl
xor
sbb
faddl
mov
ds
mov
or
xchg
enter
push
dec
shlb
dec
hlt
mov
int3
dec
add
cltd
or
cmp
cld
add
movsl
cmp
push
ds
dec
adc
fstl
ss
pop
subps
shrb
cld
or
push
gs
test
loop
fcomps
cmp
and
pop
scas
mov
mov
sahf
ss
jg
xor
adc
mov
mov
add
sub
cmp
push
dec
inc
mov
clc
add
insl
sbb
fwait
sbb
xchg
mov
mov
xor
inc
popa
mov
sahf
add
mov
clc
inc
dec
lds
xchg
fcomip
jg
ret
mov
pusha
add
or
and
lret
sub
sbb
push
aaa
add
push
push
jl
iret
add
repz
lods
mov
clc
cmp
stc
mov
sbb
arpl
xchg
pushf
add
les
xchg
cmp
push
pop
mov
out
jge
sahf
ljmp
bound
xor
add
inc
insl
lods
xchg
add
xor
lea
and
stos
mov
xchg
fwait
add
cmpl
mov
test
jmp
mov
push
fnstsw
and
jb
sbb
shl
add
pop
sub
mov
cmp
add
lods
and
pop
cmpsb
pop
add
and
mov
js
fs
inc
adc
xchg
nop
mov
stos
cmp
insl
sbb
add
sbb
push
inc
sub
cmp
cmp
arpl
aam
insl
push
push
sub
add
dec
call
push
outsl
mov
inc
xor
push
jns
fisttpll
imul
in
int
xor
rcrl
outsb
cmpsb
sub
add
lods
clc
std
push
mov
insb
and
fcoml
sub
push
arpl
push
jp
add
sahf
add
mull
mov
loopne
out
add
loopne
ret
sahf
aam
push
in
jbe
repnz
daa
cmp
adc
dec
and
inc
lock
dec
mov
add
sti
mov
pop
dec
xchg
int
ja
lock
push
xchg
sbb
insb
dec
in
inc
push
daa
adc
mov
mov
sbb
call
mov
xor
push
jmp
push
dec
inc
sub
popf
les
dec
cmp
fs
xlat
rclb
push
js
sub
jge
sub
sbb
sub
repnz
hlt
je
push
loopne
and
or
leave
pop
add
roll
adc
pusha
pushf
and
pop
in
aam
adc
add
movsb
call
xchg
sar
or
dec
sbb
rclb
add
mov
push
loop
and
movsb
push
aas
pop
inc
inc
jmp
call
dec
mov
cwtl
les
or
add
cmp
filds
xor
mov
cmpsl
add
aas
in
arpl
push
lret
dec
jmp
aaa
adc
je
xchg
jmp
notb
jb
and
mov
cmc
add
lcall
mov
push
mov
or
add
addb
sub
inc
mov
lods
lock
mov
in
in
xchg
clc
add
add
notl
xchg
lea
nop
add
scas
fcomps
adc
sbb
and
outsb
in
push
cmpb
pop
add
mov
dec
pop
das
roll
dec
ret
push
sbb
add
mov
cmp
push
xor
fs
push
je
enter
or
mov
add
cmp
into
sbb
fldcw
dec
outsl
mov
ss
sar
call
xorb
add
cmpsb
scas
popf
jecxz
mov
mov
mov
int3
sub
ret
in
mov
sbb
and
pop
mov
std
jp
inc
data16
pop
and
add
push
cmp
flds
and
movsl
xchg
ljmp
into
cli
push
imul
inc
lods
add
es
nop
sbb
fadds
xchg
sti
add
push
stos
or
jns
iret
sbb
lods
movl
clc
pusha
adcl
sahf
pushf
inc
xchg
pusha
stc
mov
add
add
xchg
aam
push
mov
mov
fcompl
inc
add
idivb
call
fsubl
sub
dec
cmp
aam
xchg
mov
adc
cltd
or
stos
cmp
pushf
inc
call
sbb
test
pop
lret
mov
ret
cmpsb
or
cltd
cs
pop
sub
xchg
nop
inc
enter
sbb
pusha
xchg
mov
inc
jp
or
mov
outsl
lods
mov
and
fidivs
mov
mov
sbb
popf
xor
dec
mov
rol
xor
add
insb
into
loopne
adc
movsl
sahf
mul
stos
push
arpl
add
xchg
adc
sub
jnp
add
add
leave
lock
or
mov
mov
dec
loop
mov
jmp
data16
test
push
addr16
push
in
xor
imul
imul
add
mov
fistps
inc
data16
jbe
rclb
dec
or
mov
addr16
sub
and
js
xor
jne
and
add
lahf
jg
mov
pop
ds
jb
daa
mov
aas
fidivrs
add
cmp
lds
test
mov
sub
std
cwtl
negl
inc
inc
mov
add
jmp
inc
add
outsb
out
repnz
sub
add
mov
cltd
scas
bound
sub
push
loop
add
out
sti
jbe
sti
add
popf
movsb
xor
sbb
sahf
jg
adc
xor
push
shrl
lods
pop
add
jle
mov
add
inc
push
pushf
and
add
cli
sbb
divb
cltd
enter
mov
outsl
mov
shll
adc
add
into
les
div
clc
adc
in
inc
lds
roll
adcl
and
xor
cltd
jmp
mov
adc
pop
in
and
mov
adc
push
inc
js
pop
push
and
add
mov
gs
jns
int3
sti
lret
adc
enter
or
add
cld
shl
inc
cmpsl
jns
sbb
jbe
lds
pop
imul
push
int3
mov
sbb
test
push
add
add
fwait
push
jle
pop
push
lret
mov
add
test
and
add
dec
lcall
es
rcl
mov
push
xor
push
add
inc
addr16
push
mov
xor
push
adc
jp
fs
ds
rcrl
call
enter
cld
loopne
or
pop
scas
stc
adc
push
daa
inc
fadds
out
ja
push
stos
pop
jle
dec
or
popa
xor
adc
push
add
sarb
cmp
push
pop
jnp
adc
lret
in
fisubl
cmpb
xchg
aam
into
idiv
test
enter
sbbb
out
pop
lods
jb
add
aad
inc
jnp
mov
sbb
orl
dec
cmpb
sub
sbb
jb
loopne
jne
movsl
sarb
lret
push
les
sub
je
add
cmpb
test
insl
rclb
test
imul
addr16
dec
and
sub
push
xchg
or
movsb
andl
jno
dec
inc
mov
push
sub
dec
cwtl
mov
ret
cltd
jb
fmul
xor
pop
fmuls
lea
inc
cmp
and
mov
in
pushf
push
add
dec
pushf
addb
stc
adc
cmp
push
popa
jo
jl
mov
in
outsl
mov
ss
std
xor
and
add
dec
outsl
sub
loopne
push
add
test
lods
adc
mov
lock
js
stc
mov
imul
ret
xor
add
add
add
pushl
add
test
sbb
pop
pop
cmp
cmp
leave
add
push
cld
movsb
or
pop
inc
pushf
jb
push
into
in
sti
test
push
mov
push
or
sub
or
in
and
les
add
movb
mov
ds
repnz
test
push
push
out
call
fnstenv
imul
inc
clc
sub
inc
inc
adc
lds
outsb
std
shl
sbb
dec
jae
and
fwait
push
subb
jmp
push
adcl
push
test
arpl
ret
inc
outsb
adc
movd
jo
or
nop
xor
adc
adc
add
rcr
xor
adc
repz
cs
inc
movsb
scas
js
push
ja
add
mov
or
in
mov
xchg
ret
mov
mov
das
inc
inc
sarb
fwait
lods
or
lds
pop
inc
and
fdivl
fisttpll
pushf
loopne
out
push
cli
push
xor
sub
outsb
cmp
mov
add
shl
mov
dec
jbe
pop
aaa
and
test
cli
popf
fdivl
dec
cmp
push
cmc
fistpll
pop
sub
shlb
roll
test
xchg
aaa
adc
mov
fwait
std
andb
cmp
dec
shlb
or
fisubs
orb
pop
pop
inc
add
fwait
lret
lods
lahf
loopne
int3
test
add
addl
test
lret
hlt
jmp
int
fdivr
cmpb
mov
mov
cmc
jl
mov
ss
mov
lcall
cwtl
into
add
pop
ret
imul
push
adc
and
arpl
sub
mov
add
dec
ss
adc
mov
sub
or
repz
cmp
hlt
enter
into
lods
mov
nop
and
cmp
xchg
test
xorl
lahf
lea
shll
test
jae
add
jle
add
pushf
pop
sahf
and
and
dec
mov
mov
enter
test
dec
daa
jne
in
inc
dec
mov
xor
clc
add
mov
pushf
nop
mov
sub
enter
sbb
hlt
movsb
jns
or
jno
fildl
mov
push
cwtl
aam
in
lret
fidivl
movsl
adc
mov
sub
mov
cmp
fnstenv
add
pop
les
or
fsubrl
mov
sarb
xor
jge
push
push
out
shll
stc
std
cmp
dec
mov
jnp
adc
ljmp
outsl
imul
sahf
sub
mov
mov
jg
or
andb
outsl
inc
stos
add
push
adc
mov
cli
jl
sbb
test
cmp
pusha
cld
roll
aaa
cmpb
repnz
cmp
scas
adc
jno
adc
mov
call
lret
data16
sbb
test
push
pop
add
push
mov
jb
in
roll
xor
fidivrs
cltd
icebp
inc
jne
les
cs
xchg
in
add
xor
inc
cmpsl
mov
gs
pusha
inc
shlb
sub
nop
pushf
data16
int3
popa
pop
lock
mov
mov
xchg
sahf
cld
loop
add
pop
adc
call
icebp
fs
adc
add
scas
stos
xchg
jl
repz
fcmovu
das
adc
pop
xchg
and
int3
cmp
mov
pop
je
add
pusha
bound
add
xchg
lcall
sbb
lret
std
push
int3
mov
and
addl
xor
inc
sub
int3
hlt
rorl
in
add
xchg
mov
mov
sbb
push
add
lock
test
add
movsl
push
jae
ja
bound
pushf
cmpb
xchg
call
cmpsl
shrl
and
std
clc
ja
pusha
xor
movsb
mov
insb
adc
in
and
cli
lods
and
cmp
andl
lret
dec
cmp
repnz
clc
and
cmpsb
and
cmp
cltd
xor
add
jnp
dec
mov
add
jg
and
movsb
int3
je
and
cwtl
test
clc
add
inc
les
nop
inc
xor
repz
in
aam
sub
or
int
adc
pop
mov
inc
cmp
ja
imul
sub
test
lds
or
rcl
sbb
push
jge
fdivs
adc
push
xchg
or
inc
jmp
mov
popf
pop
iret
jle
push
movsb
add
cmpsl
add
cmp
out
mov
sub
push
rorl
mov
call
push
sbb
jl
mov
cltd
push
cwtl
addb
out
push
add
iret
call
push
push
popaw
hlt
repz
inc
adc
mov
xor
jns
dec
inc
pusha
jbe
movsl
sti
rorb
pop
fcmovnbe
and
and
sub
push
loope
or
jb
mov
xor
adc
or
lret
jb
mov
jecxz
adc
push
pushf
push
test
lret
sub
pop
test
cwtl
dec
mov
inc
jb
sbb
adcb
mov
or
push
test
push
movntq
or
rclb
inc
inc
movsb
outsl
sbb
pusha
jae
add
adc
push
inc
ljmp
test
xor
or
test
adc
inc
mov
adc
movsb
dec
stos
inc
or
xor
jnp
mov
pusha
movl
push
ljmp
test
sbb
std
adc
ret
xchg
xor
xchg
jmp
sub
nop
dec
mov
data16
inc
push
adc
cld
scas
popf
lods
add
pop
mov
ret
in
dec
lds
fiaddl
fmuls
adc
xchg
add
push
cmpsl
add
fisttpl
repz
shll
sub
cmp
xor
fld
add
cmpsl
sbb
inc
cmp
mov
mov
or
shl
aad
push
adc
aam
inc
int3
and
stc
js
and
jp
or
and
lret
ja
clc
inc
jbe
fsubrs
jle
cmp
adc
mov
xor
add
jg
test
cmp
mov
jmp
cmp
fs
aaa
cltd
pop
or
push
or
mov
popl
or
sub
hlt
cmp
mov
jl
mov
into
rclb
sub
inc
pop
mov
mov
sub
add
pushf
cmpb
add
pop
out
xor
cmp
loop
mov
test
and
test
xchg
pop
mov
inc
xchg
sbb
shll
and
int3
push
mov
cwtl
inc
or
leave
push
imul
scas
sub
popf
jns,pn
sub
xor
shrb
push
hlt
sub
cwtl
jno
add
addb
cmp
mov
pop
push
add
aas
or
mov
or
sub
cld
mov
mov
and
divb
lock
das
mov
xor
adc
push
or
dec
outsb
sub
adcl
decl
out
jns
lcall
or
dec
mov
push
xor
fsubrs
jge
in
push
add
inc
jo
mov
pop
lds
pop
xor
add
cli
hlt
rorb
sbb
inc
or
jmp
lret
and
mov
xor
pop
out
ret
loopne
ljmp
pop
outsb
push
add
incb
xchg
inc
cmp
xchg
add
call
mov
imul
sbb
fucomip
in
fcompl
into
mov
sbb
fiadds
jecxz
out
jae
sbb
enter
or
js
sbb
clc
xor
xor
inc
fldcw
hlt
rcll
sub
aas
xorb
sub
jl
mov
pusha
cli
mov
or
fiadds
xchg
rclb
dec
add
or
mov
jae
xor
ret
jle
popa
shl
push
xor
insb
jl
sub
xchg
adc
shll
cmp
popl
fwait
jb
cmp
jle
stos
xorb
cmp
incb
sub
sub
xchg
add
mov
std
add
xchg
sti
rolb
pop
outsl
cld
mov
fs
jae
hlt
andb
data16
call
fdivr
lea
repz
cltd
sbb
or
add
fdivrs
xchg
add
mov
in
mov
pop
xchg
or
out
adc
into
movsl
xchg
dec
jmp
and
addb
sub
mov
mov
ret
inc
inc
adc
jle
call
nop
mov
rolb
dec
iret
or
mov
sbb
push
mov
push
outsl
sbb
lock
xchg
add
inc
mov
sti
add
sub
lods
jae
pop
mov
addb
shrb
mov
add
stc
mov
int
pop
mov
inc
pushw
inc
shrl
cmp
nop
testl
ret
push
inc
sbb
sahf
and
clc
jmp
push
test
sti
xchg
cmp
push
js
mov
xor
cwtl
sbb
fwait
xor
add
das
rorl
fisttps
sahf
mov
mov
repz
loop
adc
or
or
int3
lods
adc
rorb
scas
ja
shll
add
scas
jle
xchg
pop
jne
cltd
int3
pushf
std
add
mov
xchg
cmp
insb
clc
jp
sub
insb
push
ja
lods
and
cmpsl
aaa
or
orb
outsb
nop
push
adc
pop
mov
add
repnz
inc
popf
fxtract
sbb
pop
std
fisubs
call
cld
adc
lahf
or
xchg
outsb
push
mov
roll
push
add
sub
cmp
repz
inc
push
adc
mov
mov
sti
cmp
xchg
fs
push
adc
aam
and
jl
int3
mov
push
test
icebp
mov
insl
lods
mov
mov
add
sbb
call
adc
test
mov
dec
cmp
aas
xchg
aam
sub
add
sub
jb
add
les
sbb
push
ds
mov
sar
test
outsl
das
cmp
sub
push
mov
cmpsb
add
rclb
jp
sbb
and
rclb
dec
mov
adc
or
push
lods
das
xor
push
shlb
rorl
stos
jb
lock
repz
js
test
inc
mov
mov
sbb
jbe
clc
subps
ret
inc
orb
jle
push
mov
add
andb
aad
pusha
pop
loopne
sbb
mov
pop
dec
int3
add
xchg
adc
sub
mov
adc
add
inc
xchg
add
push
icebp
pop
dec
adc
aam
insb
push
jmp
and
xor
andb
jo
fucom
sbb
adc
lahf
mov
mov
call
cmp
popa
enter
call
cs
daa
rorb
call
sarl
repz
jle
dec
leave
lcall
adc
xchg
push
and
sub
outsl
aam
push
add
test
pop
adc
and
mov
lods
jmp
push
jns
roll
push
add
mov
ljmp
or
sub
adc
addb
call
inc
mov
bound
mov
jp
iret
gs
inc
xchg
in
lcall
pushf
push
sub
mov
addr16
xor
cmp
in
cmp
fmuls
pusha
cbtw
ja
cmp
and
into
cmpsl
test
adc
fsubrs
sbb
sahf
xchg
xchg
push
lods
mov
mov
push
arpl
inc
jmp
pusha
cli
mov
test
jecxz
add
clc
sbb
pop
jb
cwtl
dec
add
in
or
inc
or
sbbb
loopne
push
push
sbb
inc
ficoml
add
and
xor
sbbl
addr16
inc
rorb
pop
mov
xchg
hlt
mov
ret
mov
pop
xchg
sbb
enter
enter
and
pop
cmp
adc
jb
icebp
nop
adc
test
fcomps
sub
clc
insl
add
outsl
shlb
xchg
in
and
adc
lea
test
test
and
adc
push
jae
push
push
push
xchg
adc
cmp
pop
xchg
lahf
test
sub
push
cld
inc
pop
adc
andb
add
inc
push
jl
or
fistl
dec
pop
idivb
cmp
lock
pop
lret
data16
add
in
dec
je
push
lods
jmp
jge
adc
scas
dec
push
in
ja
es
dec
pushf
scas
stc
add
and
or
rorb
mov
push
and
lcall
lret
mov
mov
jl
jl
popf
or
add
sbb
daa
dec
lods
push
jo
jge
adc
repz
xor
dec
mov
lcall
rcrl
mov
mov
xchg
add
and
jl
add
popa
rclb
repz
stc
jle
or
inc
pushf
and
daa
sahf
test
cwtl
push
nop
jmp
movups
dec
enter
jmp
xchg
sub
daa
ds
les
js
dec
clc
mov
aam
xor
push
mov
inc
loopne
mov
movsb
mov
and
das
push
add
sbb
pop
insl
jo
fildl
xor
and
iret
adc
xor
fwait
push
jbe
jae
jge
add
add
in
jmp
add
sbb
out
leave
in
sar
js
mov
xchg
mov
shll
lret
dec
and
sbb
pop
xchg
jae
add
jmp
std
add
push
es
mov
adc
cmp
cld
subb
in
inc
jp
notl
je
xor
push
jno
add
dec
add
jle
mov
pop
andl
icebp
xor
fadd
mov
cmp
pop
mov
imul
push
stc
cmp
frstor
mov
fwait
call
add
pushf
and
xor
or
adc
test
mov
aaa
leave
xchg
nop
nop
sub
add
mov
dec
lods
out
call
std
jp
push
inc
inc
jne
cwtl
adc
cs
sahf
xor
insb
mov
xor
jne
fs
movsl
xchg
adc
lds
jl
sbb
outsb
mov
faddl
daa
aad
aam
cmc
and
enter
push
inc
cmpsb
mov
adc
test
dec
pushf
imul
add
in
and
add
call
lret
cmp
adc
pop
jge
push
sbb
add
inc
cmpsl
xor
nop
mov
adc
cwtl
jmp
andb
in
jmp
sbb
pop
aas
cmpsb
add
jle
push
movsl
pop
xchg
rcrb
adc
clc
pop
sti
jno
movsl
push
aaa
inc
xor
xor
clc
aas
and
mov
cmp
shlb
cmp
or
cltd
sub
stc
lcall
clc
push
out
adc
sub
adc
insb
add
xchg
aaa
decl
jmp
pop
popf
xor
sub
mov
push
fwait
clc
pop
imul
cwtl
jg
call
scas
pushf
inc
enter
push
xor
dec
enter
lock
into
or
rcr
and
repnz
cmc
in
mov
add
stos
or
add
adc
xchg
sub
fnstenv
int
inc
scas
adc
enter
inc
adc
loopne
lcall
aam
mov
add
inc
rcl
jns
sub
and
orps
add
loop
jo
pop
out
add
fdiv
sbb
push
push
mov
or
cmc
and
or
push
insb
clc
clc
jl
fmuls
adc
xchg
push
call
test
mov
loop
cmpsl
mov
mov
mov
xchg
add
or
ret
sbb
jbe
sbb
cmpsb
cld
adc
sbb
test
leave
les
sbb
or
inc
inc
pop
repz
and
enter
sub
ljmp
mov
push
cmp
pushf
clc
and
in
pop
icebp
insl
pop
push
jl
mov
clc
stos
nop
pop
test
push
je
fsubs
sub
dec
add
mov
inc
aaa
inc
lock
in
push
inc
pusha
out
popa
cmp
adc
inc
ss
and
add
sub
ljmp
xor
dec
or
cmp
mov
or
mov
push
jo
leave
pusha
mov
and
dec
mov
scas
popf
std
sbb
lods
jl
push
or
movsb
inc
orb
dec
jae
add
nop
jecxz
pop
out
adc
inc
dec
outsb
std
addr16
outsl
add
or
repnz
test
ja
add
lcall
jge
sub
stos
jae
mov
xor
dec
loopne
cmc
fadds
hlt
enter
push
lods
push
popa
subb
imul
mov
imul
jb
jno
adc
jl
xlat
outsl
or
ljmp
dec
out
jmp
or
jp
lock
cmp
aad
adc
mov
gs
cmp
fdivl
stc
sbb
nop
repz
fcmovb
jo
leave
add
pop
insl
test
shl
mov
test
push
ficompl
fldl
mov
and
push
or
lcall
pop
outsb
fcmovbe
pop
add
mov
push
bound
and
addb
push
sub
jge
add
lods
mov
add
test
xor
add
or
add
cld
outsl
iret
jb
in
add
outsb
lods
and
add
xchg
or
loopne
add
lods
sti
mov
outsb
mov
test
das
stos
cmp
push
inc
mov
jnp
test
adc
or
push
jle
in
dec
jp
cmpsb
rolb
mov
adcb
pop
pop
pop
popf
add
subb
outsb
cltd
or
adc
in
lods
inc
xor
inc
pop
xor
mov
add
inc
lret
push
mov
cltd
test
sbb
addb
repnz
cmp
sub
mov
repnz
adc
push
leave
inc
js
jo
xor
imul
push
bound
repz
xchg
xchg
dec
mov
fisubs
lock
aas
mov
cmc
pop
sub
lret
pop
pop
mov
jecxz
xchg
lods
sbb
pop
add
sub
dec
push
cmovo
xor
dec
cmp
push
bound
adc
test
sbb
push
pop
push
out
filds
inc
cmp
loope
lcall
aam
add
mov
pop
outsl
decb
ja
mul
push
fstps
xor
xchg
sub
and
mov
mov
pushf
shrl
out
shlb
addr16
aad
mov
sub
rorl
lret
jecxz
fisttps
or
adc
sar
insl
in
or
sub
insb
mov
mov
lock
icebp
push
enter
sub
test
in
arpl
jae
out
repz
loopne
stos
inc
or
testb
cmpsb
jmp
jecxz
inc
or
das
aaa
sub
cmp
stos
notb
imul
fsubr
mov
mov
inc
pop
std
lret
out
add
lods
dec
or
fst
fldlg2
cmp
in
cmpsl
add
xorb
and
jb
and
cwtl
loope
jmp
add
mov
arpl
popa
jle
lret
dec
cmp
jo
cltd
xor
jp
mov
add
cmp
and
jecxz
or
in
shlb
add
xor
push
pop
test
and
cmp
outsl
outsb
inc
add
xchg
bound
shll
cltd
daa
or
in
add
sub
xor
lret
fcomi
lods
loop
push
nop
xchg
adc
rcr
and
xor
testb
cmc
add
adc
or
pop
add
sti
adc
inc
dec
fadds
push
mov
sbb
mov
cld
add
adc
sub
nop
jo
cmp
shl
ret
jns
iret
hlt
filds
scas
add
mov
mov
add
dec
test
pop
repnz
out
pop
imul
popa
mov
add
fcmovbe
inc
push
fs
insb
mov
push
cmp
mov
cmp
mov
data16
jle
pop
or
addr16
dec
rorb
repz
jno
pusha
push
xor
in
rorb
jp
rolb
mov
cmp
cs
push
xor
imul
push
xor
mov
mov
adc
lret
add
mov
push
jge
mov
fidivrl
sbbl
inc
cld
xor
jmp
sbb
sbb
pop
decl
dec
adc
dec
or
out
pop
loopne
inc
xor
dec
push
int3
insb
lods
adc
rorb
shll
jo
test
jb
push
inc
dec
cmc
push
adc
aaa
loope
pop
mov
loopne
add
or
pop
sub
push
add
into
sbb
mov
pop
ret
add
sub
inc
popf
nop
cmp
in
dec
add
xchg
pop
push
cmc
add
insb
xchg
dec
inc
push
loopne
pop
add
insb
aaa
push
aad
test
sti
xor
pop
pusha
cmpsl
fs
or
adc
wbinvd
es
insb
add
daa
dec
bound
out
movsl
mov
shl
rolb
pop
mul
add
sub
xor
push
mov
loope
addr16
add
add
xchg
adc
mov
or
push
mov
xor
pop
push
loopne
psubw
mov
pusha
ss
and
xchg
add
pop
sub
cli
adc
push
cs
fisubl
xor
or
flds
nop
mov
sub
push
sbb
popf
repz
mov
clc
outsl
push
add
jns
push
cmp
pop
inc
or
sbb
push
clc
imul
movsl
in
sub
mov
add
es
pop
xor
adc
roll
mov
pop
pop
jne
dec
push
sub
jecxz
das
jnp
loope
es
cmp
out
iret
and
into
repnz
cmp
hlt
movsl
test
ja
cmp
jno
dec
mov
pusha
rorb
out
or
testb
and
dec
add
cmp
lret
sbb
jge
add
cmp
add
testb
sbbb
adc
hlt
and
icebp
dec
ja
outsb
inc
dec
pop
and
pop
adc
cmp
movsb
and
dec
xor
btrl
cmc
fildll
jp
insb
sbb
stc
sbb
faddl
jle
pop
ljmp
mov
mov
nop
int3
outsb
stc
pop
jle
aam
pusha
rcr
jecxz
sbb
jo
adc
mov
sub
add
sbb
push
sti
cmpsl
mov
fdivl
cli
jo
outsb
sbb
enter
xchg
mov
mov
adc
sub
pop
add
mov
inc
into
pop
or
jge
xchg
cwtl
in
pop
pop
add
pop
adc
add
sarb
dec
std
jns
je
dec
push
orb
mov
cmp
inc
and
sbb
imul
cmc
dec
sbbb
push
push
mov
xchg
arpl
movsb
jae
add
push
and
adc
les
push
sub
mov
dec
popa
in
pop
jns
imul
add
clc
outsb
adc
ret
add
icebp
cmp
mov
sar
xchg
test
shll
int3
sub
out
adc
cwtl
add
jne
stc
or
imul
and
out
push
or
add
add
cmp
orl
andb
inc
cwtl
jmp
add
mov
jnp
imul
mov
push
int3
push
push
aaa
mov
rolb
lods
push
loopne
scas
out
jno
add
and
dec
repnz
add
xchg
in
in
dec
mov
add
sub
leave
add
pop
icebp
or
les
lods
xor
add
pop
dec
imul
roll
pop
call
fisubs
add
jne
test
dec
xchg
fs
mov
insb
arpl
push
xor
dec
icebp
lcall
xor
xchg
and
fcoml
or
lea
mov
xor
add
mov
mov
jecxz
test
jge
aad
subb
push
rcrl
pop
inc
add
hlt
mov
imul
inc
fucomi
cmp
xlat
cmp
mov
add
mov
repnz
pop
ret
outsb
in
clc
mov
xchg
dec
cmp
ds
mov
xchg
inc
cmp
mov
fldl
sbb
shr
sub
inc
std
nop
sbb
inc
pusha
add
add
lret
rcrl
mov
movb
repz
jb
adc
lsl
inc
adc
fdivr
loope
push
shll
jo
repz
add
mov
add
leave
push
lret
arpl
je
push
or
imul
cltd
sub
int3
dec
stos
mov
js
je
mov
cmp
cmp
and
add
jg
dec
add
ret
cltd
adcb
xchg
add
into
mov
jbe
add
cltd
fldln2
add
sub
fmull
mov
test
pop
mov
or
and
push
loopne
movsb
add
mov
test
pop
sbb
xchg
leave
in
xor
arpl
jecxz
and
repnz
nop
lods
rorb
jno
sub
mov
jb
jo
xor
dec
inc
sbb
or
testl
xchg
inc
cmc
fs
or
or
dec
ret
cmp
cs
sub
les
lret
mov
cmp
cltd
add
jp,pt
in
cmp
mov
insl
je
lock
xchg
nop
inc
push
push
mov
xor
push
jns
or
lcall
in
and
add
arpl
dec
and
dec
pop
cmp
imul
es
cltd
sbb
mov
aas
shll
cmp
lock
add
sbb
movsl
fwait
and
pop
add
pop
out
dec
scas
lcall
xor
mov
leave
repz
insl
fdivr
test
inc
arpl
mov
mov
push
inc
pop
mov
mov
lods
scas
mov
cmp
mov
push
arpl
jl
sbbl
add
jno
sub
hlt
mov
cli
test
lods
xor
xor
adc
push
jmp
dec
loope
push
mov
int
mov
push
mov
notb
cltd
aam
adc
bound
fs
aaa
lcall
hlt
dec
aad
xor
test
add
in
push
popa
sub
cmpsl
add
mov
rclb
jne
cmc
push
or
inc
call
xorb
imul
rcll
inc
lods
ja
push
jle
xchg
pop
movsl
stos
sub
or
fistpl
cwtl
jne
xchg
pusha
sbb
mov
in
faddl
dec
jle
mov
pop
mov
pop
ljmp
in
cmp
pusha
mov
imul
aam
cltd
or
sarl
lock
cld
cmp
mov
dec
inc
stos
inc
orb
xchg
int
or
or
cmp
sub
testb
les
xor
repnz
popa
dec
outsl
rolb
dec
jmp
insl
leave
xor
pop
mov
lahf
add
mov
rcrl
shrb
inc
sub
xor
dec
ss
dec
inc
lock
sbb
fsubs
fs
and
lock
fisubrs
push
adc
nop
add
insb
movl
imul
pop
or
insb
jge
mov
loopne
push
push
sub
sub
add
add
mov
push
pop
fs
sub
nop
sbb
lret
sbb
test
add
bound
pop
es
loop
fimull
and
add
lahf
inc
movsb
aad
fiadds
imul
push
cs
jmp
sbb
pop
xchg
lcall
adc
inc
out
mov
lock
xchg
repnz
push
icebp
scas
mov
lods
popa
std
mov
add
nop
xor
ret
ja
inc
xchg
jo
dec
insl
out
xor
enter
sub
add
push
or
add
negb
sbb
pop
pop
pop
sbb
xor
clc
lahf
and
popfw
sbb
ja
repz
ljmp
pop
mov
and
or
cmp
push
mov
hlt
mov
cli
add
mov
sbb
adc
pushf
cltd
inc
mov
pop
add
push
dec
pusha
nop
les
mov
sbb
mov
add
cmpsl
imul
adc
add
je
ret
mov
pop
daa
add
pop
call
popl
aam
out
mov
sub
out
adc
cmp
xor
loop
loopne
jns
iret
in
int
mov
add
push
aam
int3
loopne
jno
dec
cmp
jmp
gs
push
mov
imul
and
add
mov
test
cmc
std
inc
test
mov
cltd
iret
or
fwait
lods
inc
sahf
mov
ret
jno
call
push
ds
xchg
and
pop
mull
dec
add
mov
jne
daa
push
enter
out
xchg
into
xchg
movsb
add
adc
adc
xor
sub
out
enter
mov
xchg
test
adc
xor
and
lods
add
lods
mov
aad
int3
ret
pop
adc
stos
push
rorb
or
sbb
aad
jne
adc
movsl
pop
imul
push
and
sahf
add
jns
test
pushf
jecxz
into
mov
stos
adc
add
sbb
sub
push
adc
addl
mov
xchg
or
and
pop
xchg
aaa
ret
mov
xchg
push
imul
xchg
outsl
popa
xchg
in
mov
mov
repnz
sub
andl
and
shll
add
mov
xchg
add
ds
lds
or
sbb
add
or
roll
daa
insl
aaa
imul
mov
add
add
cltd
call
lcall
sbb
adc
repnz
orl
sbbb
xor
sub
push
gs
subb
dec
jp
cwtl
adc
popa
pop
dec
add
cmp
scas
push
loopne
mov
addb
xchg
or
loope
popf
ret
xor
sub
mov
lahf
adc
mov
pop
idiv
cmpsl
fsubs
sub
jns
out
mov
sti
negb
jbe
pop
push
mov
push
or
mov
loop
fdivr
js
fidivrs
xchg
adc
stos
inc
fs
test
xchg
cli
adc
movsl
stc
das
popl
sahf
incl
loop
lock
xor
pusha
ficoms
add
or
loopne
lock
pusha
xor
cmpl
xor
mov
inc
scas
test
sub
mov
dec
sarl
dec
fadd
scas
test
outsb
aas
cld
inc
add
in
sub
in
loope
adc
in
jmp
fsubs
orb
pop
nop
clc
cmp
xchg
sbb
add
xor
cmp
in
mov
pop
lcall
add
push
insl
inc
jl
stc
add
xor
loopne
add
xor
out
and
fs
sahf
mov
adc
cli
cmp
adc
xor
les
push
cmpsb
or
jb
test
mov
push
hlt
inc
pop
xchg
pop
pop
popa
fidivs
shl
nop
mov
fnsave
pop
xchg
inc
inc
sub
inc
pushf
mov
sub
jno
cmp
subb
push
in
mov
or
sahf
xor
test
xchg
add
xchg
inc
or
shlb
add
pop
adc
add
mov
pop
insl
cmp
or
add
xorl
daa
rcr
cmp
add
dec
rcll
lea
inc
cmpsl
and
nop
mov
mov
add
imul
inc
clc
add
daa
icebp
sbb
xor
mov
iret
mov
push
push
fcomps
pop
jmp
fildl
je
or
mov
sbb
pop
ret
cltd
xor
dec
daa
jae
dec
sub
je
adc
aaa
pop
add
jno
mov
inc
xchg
shll
push
cmp
sub
les
add
sarl
arpl
add
cmpsl
pop
sahf
dec
mov
aam
cltd
jno
repz
dec
cmp
adc
in
rclb
pop
push
jno
and
les
cmp
or
add
push
or
mov
push
adc
sbb
call
add
movsl
stos
cld
int
int3
bnd
push
imul
cmp
jae
mov
stc
dec
lods
fadds
sub
loopne
aam
and
ret
shll
mov
leave
add
jg
jae
roll
add
sti
pop
inc
jo
and
pop
pop
test
int
inc
cmp
cmp
inc
sbbb
push
add
pop
xor
cwtl
rol
pop
je
add
notl
in
rclb
jno
inc
add
or
mov
pop
lcall
stos
out
pusha
push
mov
dec
subb
pop
jno
lret
xor
repz
add
mov
int3
loope
dec
lock
xor
and
inc
cmc
add
cmp
adc
mov
ss
add
add
pop
mov
xor
or
in
jle
sub
enter
leave
int3
mov
and
jne
test
sub
mov
in
jmp
push
pop
sar
push
mov
jno
aaa
jl
mov
and
add
cli
mov
and
sbb
sub
mov
inc
clc
jb
es
sub
or
mov
add
mov
mov
cwtl
mull
add
mov
cmc
mov
sub
xchg
movsl
jns
add
dec
inc
mov
add
clc
mov
mov
cltd
lcall
int
dec
daa
dec
push
loop
lcall
add
data16
inc
mov
cmpsb
mov
leave
ja
sbb
je
xor
jmp
adc
push
sub
push
clc
inc
xor
mov
jb
add
lea
jp
dec
jmp
mov
sbb
pusha
dec
cmp
xchg
inc
loopne
jno
sbb
xchg
repz
push
fwait
into
xchg
cli
add
pop
sti
and
xor
dec
loope
outsb
pusha
xchg
jo
and
sarb
cs
add
or
cmc
aad
sub
cwtl
mov
adc
mov
mov
lcall
mov
pop
inc
sbb
push
jnp
adcb
add
idivb
jae
popf
pop
add
pop
sarb
sbb
push
adc
adc
out
add
in
pop
jno
sarb
xor
xchg
xchg
add
bound
push
xlat
ljmp
jae
sbb
sbb
cli
dec
mov
es
mov
cltd
push
inc
fwait
ror
outsl
xchg
mov
cmc
add
dec
mov
xor
shlb
xchg
cld
mov
dec
les
mov
add
xchg
nop
push
add
pop
push
mov
mov
xor
stos
mov
push
pusha
cld
sbb
or
add
repnz
and
pop
jl
push
pop
mov
fnsave
adcb
and
jl
movsb
int3
int3
pop
add
push
sbb
or
les
jo
add
pop
rcrb
into
scas
pushf
in
mov
or
mov
sbb
ret
test
fiadds
xor
pop
sub
ror
stos
sbb
jecxz
inc
adc
add
push
push
imul
sub
lock
out
imul
jp
arpl
xchg
lret
xor
inc
jno
add
mov
xor
mov
test
mov
mov
test
cmc
loopne
lds
je
out
movsb
aam
das
mov
loopne
inc
roll
adc
dec
ret
xor
es
imul
jg
es
xor
testl
add
lahf
enter
xor
jmp
add
fwait
ja
add
push
gs
je
push
sbb
in
cmp
popa
add
add
or
les
xor
and
nop
adc
and
in
loopne
cmpsl
add
shlb
xchg
hlt
xor
add
fldcw
jno
call
cld
mov
leave
or
mov
or
xchg
aam
push
sub
push
clc
and
xchg
mov
in
or
xchg
adcl
lret
rcl
cli
adc
pop
sub
jb
push
sbb
out
faddl
or
lds
int3
sub
mov
dec
hlt
pushf
mov
sub
cmp
or
mov
cwtl
add
cld
call
insb
gs
xchg
mov
test
mov
add
aam
mull
xchg
dec
sub
shl
test
mov
rolb
in
inc
es
int3
add
lea
add
add
inc
pop
push
sbb
xor
lret
pop
add
mov
lock
test
sub
cli
pop
das
mov
mov
out
repz
xor
mov
add
addr16
ror
cmp
add
or
fnstenv
sub
xchg
in
and
out
mov
sbb
mov
nop
push
mov
or
jb
add
add
add
push
push
xchg
sbb
leave
jb
or
ja
lret
sub
xlat
pop
mov
pop
aas
jnp
pop
gs
shll
mov
das
ja
sbb
shrb
or
setne
and
pop
icebp
and
or
nop
push
mov
add
add
cmc
leave
les
mov
pop
cmp
adc
cmpsb
sub
adc
aaa
and
in
xor
add
xor
jae
test
je
insl
and
ljmp
xchg
add
pop
or
pushf
mov
les
mov
push
shll
jmp
call
push
outsl
mov
add
dec
out
push
sarl
cmp
xchg
fisubrs
push
mov
pop
loopne
cmp
add
addr16
sahf
mov
push
dec
cmp
sbb
imul
in
jae
subl
divb
dec
js
jp
add
inc
mov
sub
pushf
insl
loope
fmull
jnp
cmp
or
or
ljmp
out
add
and
jp
data16
pop
jns
into
jb
add
add
jl
sub
pusha
cmpsl
xchg
add
cltd
xor
xor
or
pop
add
add
outsl
mov
js
push
inc
or
dec
cmp
mov
pop
scas
int
mov
add
push
inc
inc
adc
jb
lds
mov
insl
sub
xor
adc
mov
ret
cmpsb
mov
or
inc
in
inc
and
mov
repnz
ret
cwtl
push
add
addl
es
dec
add
or
jmp
out
sarb
adc
sub
popf
push
sbb
insb
mov
inc
divps
repz
or
insb
mov
rclb
lea
arpl
push
shlb
pop
mov
call
mov
in
repz
adc
lea
rcl
loope
and
or
scas
adc
pop
or
pop
pavgw
lea
dec
cwtl
add
and
cmc
lods
pusha
add
fisttps
pop
cmpb
mov
shlb
mov
mov
test
mov
int3
pusha
rcrb
push
call
testl
cmp
mov
push
jae
push
xchg
in
sbb
push
cltd
loop
fadds
sbb
add
mov
push
push
dec
insb
mov
pop
sub
or
insl
pusha
in
call
psraw
xchg
fsubs
push
data16
out
xor
dec
ljmp
push
mov
les
inc
xchg
sub
mov
lods
pop
or
or
movsl
xor
sub
insb
jae
inc
push
inc
ret
ret
int
mov
dec
jns
adcb
stc
cmp
cmpsb
jo
mov
inc
inc
insb
push
mov
mov
and
push
subps
fidivs
stos
mov
or
inc
dec
flds
pop
mov
inc
je
mov
test
mov
add
add
mov
dec
push
dec
and
add
bound
cmc
xchg
add
sub
int3
rcrl
add
test
sbb
shrb
or
sbb
mov
rcrb
push
lcall
push
dec
sbb
aad
outsb
adc
inc
cs
cwtl
cmc
mov
pop
shrb
loopne
sub
fldl
test
push
aaa
sub
lret
inc
fs
addr16
mov
mov
cmc
add
repz
xor
loope
imul
mov
or
inc
or
and
push
fstps
push
ljmp
add
push
xor
fnstsw
mov
fmuls
notb
adc
or
or
sub
xchg
ds
in
inc
dec
les
add
test
shlb
and
mov
cld
ds
pushf
inc
xchg
sub
ss
jo
jbe
xor
repnz
adc
shrb
xchg
add
insb
mov
out
repnz
and
adc
or
ljmp
mov
cmpb
adc
rclb
xor
and
or
sbbb
in
sbb
add
insl
das
shll
sbb
loopne
cmc
pop
mov
hlt
or
rcr
sti
xor
push
cmpsb
call
daa
pop
fcmovb
xchg
add
lea
shlb
sbb
add
adc
rorb
lock
cmpsl
adc
and
mov
add
cmc
mov
mov
mov
in
lods
dec
cmp
popf
sbb
addr16
xor
sbb
lcall
and
enter
stos
xor
xor
stc
mov
mov
in
xchg
adc
jge
rol
in
mulb
xchg
inc
xchg
jbe
mov
cmp
pushf
add
or
jp
or
cmp
loope
cmp
insl
les
lcall
jmp
fstl
xchg
push
adc
xlat
mov
pusha
mov
pop
in
inc
cmp
cmp
mov
add
dec
push
int3
mov
mov
mov
rol
sbb
add
mov
mov
in
enter
cmpsl
aas
or
sbb
dec
add
inc
sahf
pop
out
fmuls
mul
mov
mov
movsb
shl
and
and
stc
dec
add
sbb
lds
and
mov
aam
sub
adc
addb
sub
insl
mov
mov
push
mov
add
add
ljmp
jle
das
sbb
inc
xchg
out
add
jo
sbb
sub
xchg
adc
div
jl
shlb
or
inc
push
xchg
call
iret
idiv
sbbb
xlat
xchg
mov
arpl
or
imul
add
mov
movsl
cmp
ret
mov
sbb
push
fdivp
aaa
inc
jmp
iret
dec
pop
nop
sub
movsl
jb
mov
call
mov
adc
add
stos
rorb
aas
add
xor
les
mov
frstor
das
add
jae
xchg
aas
sbb
movsl
insb
lds
adc
xchg
insl
or
cld
dec
cmp
and
add
and
jmp
cmp
jmp
inc
aad
mov
sti
iret
jmp
mov
jmp
mov
or
xor
add
cmpb
rclb
mov
dec
or
mov
out
inc
push
ljmp
dec
dec
popf
inc
shll
xchg
loopne
jbe
add
pop
lock
lods
pusha
jl
mov
fistps
and
cmp
add
add
jmp
jne
push
add
ret
or
and
lock
mov
test
add
or
ret
inc
ficoml
cmp
sarb
aam
add
sti
outsl
jbe
or
mov
jl
mov
cmp
faddl
push
mov
es
rcrb
loop
mov
sbb
add
mov
jbe
dec
xchg
pop
and
call
mov
rorl
mov
jecxz
xchg
or
push
mov
ffreep
lock
push
dec
cltd
in
pop
mov
jno
mov
push
dec
xor
xchg
shrl
lock
outsl
mov
cmp
add
push
dec
mov
es
xorb
idivb
dec
and
fmull
test
cmp
xchg
lds
popa
es
or
notb
mov
cmp
mov
xchg
imul
int3
and
pop
sbb
push
sub
ret
jnp
mov
pushf
aam
inc
or
and
rcr
add
mov
xchg
add
pop
es
xor
mov
or
lcall
arpl
sbb
add
rcrl
adc
aad
or
std
dec
mov
add
icebp
dec
mov
adc
mov
roll
and
fwait
sbb
and
clc
adc
push
cmp
rclb
test
mov
cmpsb
sbb
pop
ret
push
sub
test
or
dec
pop
mov
imulb
dec
inc
mov
enter
or
add
nop
das
bound
mov
sbb
cmp
and
sub
cltd
aas
mov
sahf
push
cmpsl
sub
jo
jae
lret
pop
aas
mov
dec
mov
add
adc
imul
cmp
jnp
mulb
xor
mov
mov
add
inc
adc
inc
insl
mov
std
das
sbb
xchg
mul
add
cmp
test
incb
lods
xor
jb
add
insl
enter
pop
ja
andb
adc
adc
inc
jno
xsaveopt
mov
outsb
jp
push
ljmp
push
push
popf
mov
stos
xor
mov
mov
dec
add
xlat
inc
loop
and
push
into
mov
add
pop
mov
insb
pop
add
mov
push
lods
rolb
loope
dec
jnp
jle
insb
cli
imul
sbb
in
xor
fdiv
inc
ss
add
dec
sahf
bound
add
jb
sbb
mov
jmp
dec
fiadds
cli
into
add
loopne
mov
cmp
push
leave
mov
inc
add
inc
sarb
pop
cmpl
add
aad
jne
repz
or
jno
mov
ret
pusha
dec
inc
cmp
push
loope
jmp
aad
cmp
sbb
xchg
mov
cmp
imul
fadds
lds
add
jne
call
sbb
pop
pusha
test
shr
add
jl
add
mov
mov
test
or
nop
add
pop
push
sbb
cmp
mov
push
inc
add
mov
es
enter
loopne
cmp
fsubl
inc
cmc
add
mov
int3
xchg
add
rorb
rolb
and
cmp
pop
pop
add
ss
sub
popa
mov
add
jmp
xor
add
jl
mov
or
adc
sti
shll
add
push
mov
scas
mulb
adc
lock
cmp
xchg
push
fs
sbb
jno
mov
divl
mov
jno
sbb
add
xchg
add
lock
or
mov
enter
repz
cmp
je
cld
add
loopne
test
or
or
js
ret
addb
fdiv
pop
push
mov
push
jb
or
xchg
adc
mov
jnp
cmc
outsb
out
sbb
js
shlb
sbb
push
push
add
jmp
pop
insb
mov
xor
test
ficoml
jo
sbb
push
jle
mov
das
aam
mov
jno
ret
sub
push
add
call
mov
jbe
movsb
das
inc
rolb
xor
mov
lds
test
ret
xchg
out
dec
je
xorb
xorl
sbb
shl
or
orb
inc
xchg
gs
lret
daa
div
adc
add
daa
std
inc
aas
lods
sub
jno
out
adc
dec
sub
in
ret
popa
or
mov
jo
jno
stc
mov
rcr
addb
cld
pusha
sbb
push
xchg
cmpsl
push
or
je
jmp
lds
sbb
jmp
xchg
ret
xchg
sysexit
aaa
pop
lret
add
lods
dec
cmp
add
enter
mov
outsb
xchg
add
dec
mov
pop
mov
or
sub
insl
ljmp
cmpsl
push
shlb
test
mov
sbb
jmp
insb
nop
xor
xchg
dec
cld
sarb
jmp
ds
int3
and
sub
push
pop
inc
in
jns
sub
mov
push
idiv
popl
mov
pop
aad
or
xor
mov
add
out
jnp
xor
jae
xor
dec
push
sbb
cmpsb
ds
pusha
inc
jo
push
in
jae
les
bound
push
jo
mov
push
mov
and
xor
pusha
and
stc
test
bound
mov
fs
push
int3
xchg
hlt
sbb
lock
movsb
loopne
test
lcall
dec
call
jmp
xchg
das
cwtl
fdivl
add
xchg
insl
mov
lret
add
jns
pop
dec
pop
je
xchg
rorl
inc
mov
test
inc
adc
jo
add
int3
ljmp
pop
and
sbb
jne
inc
jns
adc
lea
lret
xor
and
out
dec
lahf
mov
jo
mov
loopne
pusha
mov
jge
add
das
ret
adc
and
jae
inc
jp
dec
test
fadd
mov
cmp
jmp
lahf
inc
sbb
mov
dec
cmp
cmp
ljmp
jl
mov
imul
mov
sbb
and
dec
cmpsb
add
or
or
dec
xchg
pop
hlt
in
add
das
push
add
js
push
push
or
push
mov
movsb
push
incb
push
mov
push
lcall
ljmp
adc
push
xchg
pop
mov
adc
xor
sub
out
lret
xchg
ret
pop
or
sbbb
cld
and
sbb
add
pop
add
sub
adc
mov
adc
mov
negb
sub
mov
mov
ret
add
cmp
mov
xchg
lds
xor
sub
repz
bound
inc
mov
test
mov
lods
and
movsl
or
in
shlb
aad
jmp
mov
jae
out
bound
add
mov
or
xchg
loopne
push
inc
cli
ljmp
push
in
add
mov
aad
imul
js
add
nop
or
mov
enter
mov
xor
xor
adc
mov
mov
aad
imul
cli
sub
or
inc
add
mull
cwtl
add
or
call
lock
pop
out
pop
repnz
mov
es
shlb
add
lods
push
or
imul
add
addr16
push
fldl
adc
in
xchg
push
hlt
cmp
mov
in
call
xor
pop
mov
movsb
pop
cmp
and
fadds
hlt
push
and
pusha
lds
out
jecxz
dec
cmp
arpl
testb
mov
add
test
xor
fwait
xorl
lcall
jmp
add
cmp
lret
mov
adc
mov
and
dec
sub
mov
inc
push
mov
ret
call
fidivrs
icebp
and
jno
ror
xor
lds
sub
js
add
xor
lock
mov
push
pop
subl
xor
lahf
inc
ficoms
adc
push
ficoms
mov
push
mov
xchg
mov
mov
add
jmp
ret
push
enter
aas
enter
idivl
pop
cmp
cmp
in
sti
sahf
or
push
lock
xchg
cmp
xchg
xor
out
into
and
iret
pop
mov
cmp
les
fimull
in
mov
lret
jmp
inc
mov
sbb
mov
or
or
inc
ljmp
leave
mov
ret
add
loop
xor
lea
outsb
pandn
cwtl
pop
mov
sbb
in
push
jecxz
sub
inc
jbe
dec
sahf
push
or
add
jle
adc
les
fwait
xor
or
and
orb
cmp
icebp
arpl
pop
or
dec
pop
push
cmp
ds
mov
pop
enter
call
adc
jns
xchg
clc
mov
mov
add
adc
out
popf
fucomi
out
leave
adc
cmp
inc
mov
lret
lds
push
pop
fmul
pop
test
push
lcall
pop
mov
repz
mov
add
hlt
movsb
nop
xchg
adc
dec
fdivrs
push
sbb
dec
mov
and
push
mov
mov
lods
insl
add
sub
adc
xchg
mov
enter
pushf
movsb
rolb
mov
xchg
dec
or
and
xor
xchg
inc
sbb
sahf
iret
inc
add
and
dec
test
add
aam
cld
je
pop
mov
add
rolb
jecxz
cwtl
ret
jb
pop
pop
push
sub
mov
loope
xor
sbb
rorb
lcall
mov
out
dec
xor
ret
aam
popf
stc
mov
sub
add
mov
adc
shl
inc
jns
lock
xor
cs
xchg
xchg
add
mov
add
adc
or
adc
dec
jo
sub
dec
sub
add
negl
ficompl
imul
inc
jp
add
or
inc
test
in
add
mov
ss
mov
or
xchg
push
mov
add
shr
xor
aas
in
test
mov
push
inc
add
sbb
add
pop
adc
push
and
or
shll
and
inc
test
flds
pop
cs
and
dec
xor
xlat
add
in
ss
push
mov
les
mov
mov
int
loop
rcl
xor
out
enter
popl
push
mov
inc
xchg
jmp
and
push
jmp
pop
add
mov
clc
test
mov
les
fnstenv
cwtl
lock
sub
mov
fdiv
cmp
arpl
and
add
xorb
leave
xchg
inc
add
push
cmpsl
jp
mov
cmp
xchg
clc
cmp
test
in
sub
add
xor
add
test
lods
mov
inc
mov
lcall
adc
ds
shrb
addl
lock
cli
xcrypt-ofb
cmpsl
out
adc
and
das
lret
nop
mov
cmp
add
rcrb
add
add
or
mov
outsb
or
js
add
xchg
mov
mov
and
mov
jle
rol
mov
or
pop
sub
or
movsb
orb
lds
push
enter
mov
push
arpl
inc
add
cmp
adc
lds
mov
sub
mov
adc
repnz
addb
cmc
fisttpl
add
mov
mov
push
mov
ds
rol
addr16
mov
das
adc
jns
add
push
jno
fwait
mov
pop
jecxz
sbb
xchg
lds
inc
dec
mov
leave
andb
and
cmp
sub
sar
add
adc
mov
xor
sub
nop
or
add
and
es
jp
sbb
test
mov
js
subb
es
pop
mov
fistl
add
scas
cmp
fcoms
fiaddl
xchg
sbb
sub
dec
dec
mov
add
in
jg
hlt
js
add
les
pop
sbb
sarl
or
aaa
ret
push
mov
cmp
push
mov
pop
sub
xor
call
and
cmp
out
clc
jne
mov
xor
test
push
mov
nop
mov
sbb
add
pop
push
inc
dec
xchg
jb
add
adc
fisttps
and
add
sbb
mov
pop
mov
iret
mov
push
je
ja
add
fidivrs
cmp
jne
push
or
lds
add
mov
add
movsl
loopne
jbe
ret
aas
and
sub
sbb
xor
pushf
lret
inc
mov
adc
push
fldl
hlt
and
cwtl
pushf
add
ret
stos
xor
or
pop
mov
add
and
adc
xchg
xchg
nop
rorb
push
push
lcall
sbb
sub
imul
bswap
mov
lock
lods
push
dec
adc
ds
fbld
pop
mov
cmp
ljmp
fidivrs
jno
pop
dec
imul
mov
adc
mov
cmpsl
nop
mov
jno
movsb
jae
shld
xor
xor
fdivs
cmp
test
cmp
movsb
jno
addr16
pop
push
push
les
dec
xlat
int3
je
mov
xchg
scas
inc
dec
xchg
cltd
aas
inc
inc
sub
xor
push
xchg
sahf
or
push
rorb
lea
dec
cmp
xchg
or
cld
add
clc
add
push
mov
cld
sub
rcrb
dec
add
push
dec
insb
ret
push
mov
daa
adc
cli
and
ret
cmp
pop
sahf
lcall
stc
sub
neg
xchg
mov
mov
lret
fiadds
das
add
add
pop
inc
mov
mov
and
push
insb
mov
inc
mov
cli
mov
inc
cltd
sub
mov
fisubl
pusha
push
mov
test
aam
lea
mov
adc
out
ljmp
ss
or
xchg
inc
xor
fsubrl
ljmp
dec
pusha
bnd
ret
sbb
clc
push
testb
pusha
pop
mov
xchg
lea
int
dec
scas
fsubrp
or
out
loopne
mov
enter
add
lods
mov
imul
movsl
outsl
je
add
ljmp
les
in
rolb
or
inc
add
add
jnp
je
cmpsl
add
in
jo
std
adcb
mov
lods
add
shlb
test
clc
or
xchg
cwtl
call
adc
insl
xor
and
sbb
jo
loopne
jge
add
dec
xchg
adc
inc
lock
push
push
dec
test
leave
cmp
add
je
fidivrs
jb
sarl
neg
popf
shr
cs
ds
insl
mov
aam
mov
or
testl
les
and
arpl
sub
sbb
sbb
inc
scas
repz
loopne
mov
dec
dec
xor
dec
pop
sub
add
out
sbb
cmp
xchg
xor
cmp
fiadds
sbbb
in
or
inc
nop
cmp
pop
pop
jb
sub
xchg
mov
dec
pop
cmp
and
aas
and
sbb
clc
mov
adc
jl
pusha
push
mov
push
call
es
cs
test
movsb
xlat
pop
pop
repz
add
fildl
call
mov
dec
data16
ss
sbb
dec
les
fimuls
mov
push
inc
xchg
hlt
push
sub
sbb
jb
in
inc
fsts
movsb
cli
mov
mov
dec
fs
or
jmp
cmp
mov
loopne
inc
cmpsl
add
dec
movsl
mov
aam
bound
lock
popa
dec
or
ds
scas
adc
push
pop
xor
inc
dec
adc
sub
dec
hlt
mov
push
add
mov
idivl
lea
sub
add
and
pop
rolb
je
js
add
insb
xchg
and
daa
mov
int3
xchg
add
cmc
ret
sbb
mov
push
lcall
enter
out
rorb
aam
add
add
mov
std
loope
add
scas
js
sbb
pop
cmp
out
lret
mov
inc
push
cwtl
sbb
and
sub
jbe
jecxz
adcb
jae
and
stos
push
add
mov
pop
jmp
adc
dec
popa
pusha
lods
mov
shrb
sbb
rolb
adc
mov
mov
xor
dec
andb
jmp
dec
add
push
jecxz
int
js
insb
ret
mov
add
out
and
inc
mov
stc
mov
dec
nopl
mov
mov
into
loop
and
lret
ds
adc
add
and
mov
dec
pusha
cmpsb
rol
cmp
inc
push
push
call
mov
movhps
xchg
inc
pop
data16
sbb
adc
push
fwait
ds
dec
outsb
lds
xor
lahf
shll
jb
mov
xchg
sub
clc
sti
data16
mov
aad
cwtl
or
lods
or
ret
mov
andb
fucom
je
stc
cli
in
pop
cmp
loop
roll
hlt
jnp
movsl
mov
cmpsb
push
cwtl
add
or
roll
arpl
and
mov
jl
iret
sbb
jns
dec
es
outsb
aas
or
adc
daa
int
in
cmp
xor
leave
and
add
mov
xorb
push
mov
push
dec
dec
test
movsl
xchg
add
or
hlt
add
push
dec
xor
leave
fidivrs
jmp
fiaddl
mov
sbb
sub
xchg
aaa
shlb
stc
add
fsubl
add
imul
mov
enter
sbb
jbe
inc
adc
andl
movb
cltd
jmp
add
dec
test
enter
add
shl
rcll
push
addr16
add
xor
push
sahf
dec
out
mov
jno
cmpb
dec
popa
xlat
sbbb
lahf
test
dec
jb
adc
push
test
arpl
mov
adc
lock
add
dec
xchg
mul
popl
mov
insb
pop
xchg
xor
mov
jae
test
sbb
xor
insl
mov
mov
or
je
add
push
xchg
mov
mov
lock
lds
adc
icebp
testl
js
icebp
or
fs
fcmovbe
hlt
jbe
push
lret
cmpsl
mov
and
dec
add
sub
dec
mov
pop
dec
jmp
and
jo
add
das
rcll
adc
inc
mov
cli
dec
add
jl
xor
cwtl
add
jns
insl
xchg
cmp
adc
div
or
enter
adc
sbb
mov
or
data16
or
mov
and
push
jno
mov
inc
leave
cmp
pop
fs
pop
mov
add
sbb
adc
jo
fsubr
sub
jge
sahf
jns
or
cmp
fstps
div
push
sub
cwtl
mov
adc
xchg
nop
or
dec
lahf
push
data16
arpl
fsubl
inc
inc
push
jb
add
addr16
faddl
mov
push
or
pop
push
cmp
jne
inc
lea
shrl
push
cld
adc
dec
mov
add
sbb
push
pop
into
jns
or
xor
mov
cmp
rorl
mov
or
ljmp
pop
nop
imul
std
pop
dec
adc
dec
je
roll
sub
mov
jmp
push
les
hlt
xor
mov
add
inc
sbb
add
xchg
mov
jmp
mov
test
pop
js
lock
ror
push
dec
sbb
adcl
and
mov
mov
aad
rclb
dec
mov
sbb
inc
sub
test
push
stos
or
fimuls
add
push
hlt
and
push
push
stos
subb
mov
xchg
mov
or
inc
imul
sub
cmp
shlb
dec
mov
jnp
xchg
cltd
sbb
lds
js
sub
rorl
adc
je
and
inc
add
lock
movsl
ret
loop
inc
sbb
add
sahf
cmpsl
add
mov
add
xchg
add
shlb
mov
push
inc
enter
iret
pop
test
pusha
leave
mov
mov
cld
ret
test
pop
inc
sbb
add
add
aas
mov
mov
loopne
cmp
xchg
add
xchg
stos
mov
add
pop
mov
xchg
mov
inc
mov
inc
pop
sbb
jl
fwait
xor
sub
mov
lods
xchg
orb
sub
add
arpl
add
jecxz
xchg
in
dec
inc
rorb
jmp
cmp
lods
insl
es
sahf
loope
mov
enter
std
jbe
jo
in
lods
sbb
jno
ds
jae
adc
movsl
or
pop
and
or
cltd
dec
out
sub
dec
mov
xchg
and
pop
add
push
lret
mov
dec
pop
xchg
fisubl
shll
xor
and
sbb
ret
cmp
pop
test
add
cltd
fdivs
and
cmpsl
call
and
das
mov
add
in
mov
jns
sbb
add
call
subb
lret
dec
data16
insb
mov
xor
mov
dec
je
pusha
add
popa
xchg
repz
and
xor
ss
jo
stc
inc
or
mov
shrb
pushf
inc
pop
mov
mov
mov
add
dec
popa
xchg
out
les
cmp
xor
add
das
pop
push
or
sbb
jo
lock
adc
imul
xchg
fucom
rclb
add
jbe
rolb
mul
cmp
scas
gs
and
cmp
in
cwtl
cmp
stos
add
xchg
hlt
push
sbb
cltd
jae
add
jl
add
lods
jmp
fbld
mov
repnz
inc
dec
in
dec
push
int3
mov
imul
mov
push
lods
pop
sbb
aaa
jne
pop
in
cli
pop
sbb
push
inc
push
dec
shlb
aam
mov
xchg
push
cmp
jo
push
rolb
sbb
out
int
and
sub
dec
lods
xchg
or
fiadds
orb
xchg
out
cmp
loopne
in
or
nop
daa
mov
addb
movsl
adcl
insb
push
out
outsl
out
jb
es
pusha
lret
ret
in
sub
and
out
in
les
lods
xchg
arpl
jb
addb
jg
adc
add
into
pop
add
sbb
sahf
enter
dec
daa
mov
inc
cli
dec
iret
xorb
fcompl
bound
xor
insb
mov
inc
inc
flds
andl
lods
cmp
out
mov
stc
fldt
inc
ret
jbe
inc
mov
cwtl
test
inc
pop
dec
push
in
mov
dec
add
inc
mov
adc
daa
jl
ret
pusha
int3
jge
adc
iret
jmp
cld
adc
and
out
addb
cmp
pop
dec
cmp
sbb
mov
cmp
and
pop
dec
mov
jl
mov
pusha
testl
mov
adc
add
xor
rclb
pop
adc
movsb
rorb
ss
icebp
jge
shll
pop
add
mov
pushf
cs
repz
test
xor
pop
aas
fs
fadd
pop
test
add
add
test
les
jo
push
xor
jae
xchg
or
pop
cli
inc
adc
dec
or
add
cmp
lret
mov
loope
xor
aaa
push
pop
sub
mov
pop
pop
call
icebp
lret
xchg
rcrl
pop
xchg
inc
push
and
jnp
jo
push
xor
push
fldl
or
push
imul
sub
pop
pop
enter
add
in
daa
nop
pop
sub
jno
jbe
add
das
mov
mov
aas
addr16
sub
and
cmpsl
les
orps
dec
fs
inc
cmp
ljmp
inc
jl
xchg
mov
icebp
push
pop
mov
sub
aad
sub
mov
pop
lcall
dec
xor
jg
push
data16
pop
pop
or
xor
mov
mov
pop
mov
jmp
test
clts
xchg
filds
jg
xchg
lret
movsl
mov
cld
xchg
loopne
stos
mov
inc
and
inc
mov
cmp
sub
mov
or
add
dec
aad
fs
shlb
cs
pop
scas
push
add
mov
xchg
insb
in
sbb
and
lea
jge
rol
std
pusha
lret
xchg
add
mov
pop
scas
inc
mov
and
pop
ljmp
lea
add
adc
and
xchg
les
mov
dec
and
or
inc
int3
or
jae
hlt
push
add
rol
loope
rorl
jo
cs
xchg
mov
adc
scas
pop
iret
push
and
shlb
movsb
mov
dec
or
dec
lret
clc
hlt
add
lods
add
add
mov
aam
outsb
mov
mov
sbb
stc
jo
in
dec
cs
add
push
mov
or
nop
add
pop
stos
inc
inc
loopne
mov
rorl
dec
xchg
nop
shll
lock
or
cmp
sti
adc
xorb
in
push
mov
xlat
mov
xor
stc
sti
outsb
psubb
das
fucom
les
les
mov
shl
insb
add
adc
jle
or
adc
mov
add
repnz
js
add
and
mov
inc
aam
xchg
mov
int
loop
sarb
test
add
mov
sbb
nop
sub
push
mov
pusha
fs
and
imul
call
cmp
out
mov
sbb
lods
push
popf
xchg
nop
xchg
into
mov
in
pop
mov
mov
xorb
sub
and
mov
or
xor
popa
xchg
call
mov
js
xchg
push
and
xor
add
fimuls
inc
cmp
jmp
push
aad
push
inc
fs
roll
les
mov
sbb
push
loopne
add
xor
mov
add
push
xchg
not
lret
inc
ja
xor
je
cmc
sub
mov
es
add
pop
jg
pop
imul
fstl
pop
loopne
mov
dec
lret
jb
cmpb
repz
xlat
call
push
popl
lods
add
jno
jmp
cmp
add
sbb
insl
xchg
sbb
adc
jecxz
mov
and
rcrb
dec
out
dec
mov
xor
add
push
mov
in
cmp
push
fidivs
sahf
mov
cli
gs
sub
sub
outsb
leave
test
xor
cli
push
bound
add
push
sub
addr16
rcll
stos
mov
add
mov
inc
popf
and
sbbl
mov
sub
add
rorb
or
jmp
ret
popa
aam
mov
clc
movsb
movsb
pop
test
jns
int
cld
je
dec
mov
out
ret
add
out
clc
nop
mov
adc
repnz
push
and
out
add
sub
jb
cmp
add
mov
popf
pusha
and
sbb
dec
cmp
xor
adcb
dec
rol
sbb
inc
scas
dec
pop
pop
fwait
mov
fbld
mov
in
leave
sbb
flds
or
cs
or
in
and
jo
cmp
in
add
fdiv
cmp
mov
hlt
and
aas
cmpsb
scas
jns
aad
xor
loopne
test
mov
stc
jl
adc
aaa
xor
js
jmp
mov
adc
les
cmp
and
lock
mov
cmp
xor
pusha
mov
pop
daa
jno
fcomi
pop
lcall
mov
xchg
dec
push
add
jmp
and
jbe
imul
lods
add
int
pop
mov
cmp
popa
popa
movsb
push
bound
call
and
jp
add
push
mov
or
mov
ljmp
add
mov
sub
add
cld
mov
jb
iret
mov
dec
mov
testb
or
ljmp
xor
or
mov
adc
adc
adc
outsb
or
repnz
popa
int
cli
push
inc
dec
mov
addb
sub
rcrl
push
dec
cmp
test
clc
dec
pop
sbb
mov
xchg
mov
add
popf
inc
call
sbb
nop
add
jns
or
scas
dec
popa
pop
inc
stc
lock
addb
rcrb
add
lods
dec
cmp
test
mov
mov
call
xor
dec
xor
mov
pop
pop
test
rcll
sbb
inc
sbb
sbb
les
mov
idiv
push
sub
pop
add
into
pop
lret
movsl
xchg
out
out
jle
notl
mov
neg
push
pop
js
add
jae
aas
stos
jle
add
ret
adc
add
xchg
add
test
adc
add
mov
and
jmp
out
nop
nop
mov
dec
aam
loopne
fs
or
sahf
xchg
xchg
and
or
sub
mov
adc
add
and
pushf
ret
mov
in
test
repnz
jae
fcmovnb
fwait
sbb
push
push
and
mov
mov
icebp
cli
mov
mov
in
mov
outsl
fnstcw
outsb
pop
push
push
rorl
fsubrl
arpl
xchg
inc
jb
mov
xchg
add
or
mov
dec
repz
mov
sub
push
or
repnz
push
xchg
jbe
jae
inc
jmp
sub
aad
scas
ds
adc
imul
xchg
rcrl
add
dec
clc
xor
add
shrb
add
adc
add
add
add
lods
mov
or
inc
insb
nop
inc
mov
es
xchg
out
add
icebp
iret
adc
es
imul
repz
xchg
jno
aaa
cs
adc
mov
sub
and
mov
lret
push
sbb
mov
xchg
testb
jmp
mov
or
dec
and
adc
jae
add
or
add
in
mov
dec
xor
mov
dec
jb
roll
lahf
xchg
push
adc
push
push
pop
adc
arpl
test
cmp
fimuls
jnp
mov
es
pop
stos
dec
jo
push
add
push
shrb
add
pop
aaa
gs
shll
inc
add
lods
xchg
pop
add
jns
iret
fcoml
lock
xor
cmp
fs
mov
es
cmp
fsubp
cmp
pop
jp
jo
mul
call
inc
sub
sar
rcrl
or
test
shrb
mov
xor
mov
inc
and
sbb
add
pop
or
addr16
iret
rolb
mov
add
cmp
test
sub
enter
ror
cmp
mov
adcl
gs
jle
jnp
add
shl
add
inc
pop
je
faddl
js
cli
jb
push
push
les
shl
clc
sub
test
mov
in
adc
add
clc
test
bswap
in
mov
cmp
enter
loop
adc
ja
out
call
and
dec
flds
sub
popl
ficomps
mov
popa
pop
mov
jb
fwait
icebp
xlat
rolb
jae
cld
push
mov
jp
jecxz
jno
xchg
cwtl
add
push
daa
loopne
shrb
andl
and
loop
add
jl
inc
leave
sbb
push
and
dec
add
imul
sti
scas
add
fnstcw
add
or
add
xor
jp
fldl
jge
sysenter
outsb
test
or
sbb
add
leave
sub
pusha
call
cmp
insb
jle
dec
sbb
xchg
sbb
dec
imul
or
adc
loop
mov
xor
jns
pcmpeqb
dec
fs
add
sub
je
sti
add
and
scas
cld
addb
sbb
pop
and
scas
sub
add
or
push
pop
popf
enter
xchg
je
and
jg
xor
cmp
out
bound
test
leave
repnz
xchg
ja
outsl
outsb
pop
rcr
add
inc
ds
pop
fstps
xchg
adc
dec
cmp
add
xor
int3
mov
and
push
repz
sub
add
xor
icebp
mov
mov
push
add
sbb
les
call
cld
adc
mov
jge
mov
out
jbe
lock
pop
adc
push
bound
stos
ljmp
mov
movsl
loopne
and
add
jb
push
ss
add
mov
mov
inc
add
lret
inc
mov
aas
jo
and
loopne
jno
xor
notb
mov
or
jo
push
sar
xchg
fs
xor
stos
es
pop
mov
int
out
notl
jo
out
das
fisubl
add
mov
push
iret
add
sub
jns
ss
add
or
sub
dec
cmp
inc
xorb
call
add
and
add
int3
xchg
shlb
ljmp
fsubr
pop
hlt
mov
rcl
idiv
or
pop
pop
and
sarb
add
sbb
pop
adc
loopne
das
loopne
add
sbb
cmc
dec
cmpsl
je
and
out
pop
imul
add
inc
mov
rolb
test
clc
loope
inc
add
into
jmp
testb
dec
sbb
jle
jp
aas
dec
push
add
outsl
mov
lock
and
and
mov
out
pop
jmp
mov
je
push
rcrl
jge
jo
mov
loop
mov
push
cmp
inc
sub
in
cmpb
sub
mov
push
fdivrs
ljmp
add
call
or
sarl
fwait
popa
shrb
or
mov
mov
lar
sbb
cmp
and
push
sub
into
jl
xor
lret
std
out
dec
pop
xor
push
loop
adc
jl
add
ljmp
add
mov
and
inc
push
xor
imul
stos
push
add
hlt
ret
std
sbb
inc
push
pop
test
cmpsl
scas
loop
das
add
jl
mov
push
cli
xchg
loopne
clc
pop
add
mov
ret
push
cmp
fisubs
and
addr16
inc
jp
sbb
fs
aad
jnp
xchg
mov
scas
in
mull
fs
enter
or
popa
push
cmpsl
movsl
pop
inc
inc
nop
add
mov
pop
loope
cltd
mov
cmp
into
push
out
add
cmc
in
add
test
pusha
jle
add
jnp
imul
and
sbb
fimuls
add
hlt
lahf
mov
push
push
fildll
fnsave
fsubs
or
push
dec
int3
add
fisttpl
xorb
rorl
lret
stc
push
btr
scas
jmp
divl
mov
add
int
outsl
lcall
xor
mov
mov
add
pop
push
xor
xchg
les
or
inc
mov
pusha
push
dec
pop
add
stos
pop
mov
cli
in
add
cmp
cmpsb
add
fisttpll
mov
add
int3
push
adc
pop
or
inc
mov
roll
dec
sbb
push
and
jae
add
popf
addr16
inc
xchg
or
fs
xchg
pusha
cmp
js
jne
add
outsb
xor
sub
add
adc
dec
in
pop
mov
je
xchg
fdivr
mov
dec
or
insl
add
lds
rolb
jp
xor
pop
xor
mov
xchg
out
push
add
push
fistpll
enter
cmpsb
jg
test
in
sbb
stos
fcomps
inc
je
mov
pushf
add
sbb
clc
add
push
inc
and
add
sahf
iret
push
outsb
add
xchg
xchg
pop
aaa
or
mov
pop
add
dec
or
add
jmp
out
add
ret
in
pop
dec
inc
jae
push
stos
pop
rcl
loopne
enter
add
popf
sub
mov
addw
push
sbb
add
jne
sub
lcall
inc
pand
sbb
push
cmp
sub
jbe
mov
xor
lahf
les
sbb
mov
inc
add
mov
push
push
sub
push
cwtl
ljmp
pusha
push
mov
inc
push
pop
sarb
inc
dec
scas
inc
add
pop
pop
notb
cmp
add
shlb
jmp
mov
dec
ret
sbb
icebp
out
or
add
fstl
push
pop
cmp
jns
bnd
pop
aam
push
rcl
data16
push
cmp
lcall
subb
sub
pusha
mov
xchg
in
xor
xchg
mov
sbb
les
and
add
xchg
add
and
lret
sahf
cmp
sti
add
inc
add
jp
pop
in
and
test
mov
sub
sbb
cmpsb
and
add
cmp
hlt
bound
ja
call
gs
jb
and
mov
or
in
add
xor
cld
add
push
and
push
cmp
lea
daa
lret
jp
add
aas
fcmovnb
add
mov
xor
clc
lea
nop
bound
mov
add
sbb
sub
rcrl
mov
outsb
scas
pop
adc
rclb
inc
and
fdivl
jne
add
mov
sbb
xor
popa
adc
dec
and
inc
add
imul
dec
jp
add
cmpsl
fmuls
scas
cmp
sbb
pop
aaa
mov
xor
lcall
inc
std
dec
fstpt
pop
addl
sub
add
nop
xchg
daa
popa
iret
adcb
or
push
mov
fisubrs
adcb
pop
stc
inc
int
or
mov
adcl
xchg
push
mov
sub
cmp
sahf
jno
or
in
and
cs
fmuls
sub
fs
cmpb
mov
les
sar
nop
addb
push
jl
incl
jge
sbb
xchg
jbe
push
xchg
ret
les
ret
jne
add
mov
xchg
jl
test
add
jle
sub
aad
push
stos
push
and
jp
pop
shrb
push
sbb
out
cmp
add
outsl
ss
clc
pop
add
xor
push
sahf
push
insl
sbb
repnz
or
cmpsl
and
clc
loop
sbb
test
in
call
lcall
adc
in
inc
mov
xchg
push
mov
push
sub
addr16
push
repz
std
iret
pop
jl
repnz
xorb
int
fldcw
and
imull
add
jo
addb
pop
inc
add
sbb
notl
cli
enter
lods
inc
mov
cmpl
jmp
cmpb
rclb
mov
mov
add
stos
adc
fld1
nop
push
les
cmpsl
xor
pusha
iret
sahf
lock
subl
add
fdivs
xchg
add
mov
push
in
pop
lods
ret
jb
fildl
mov
popa
add
rcl
sbbl
enter
inc
add
movsl
and
shll
push
outsl
add
lret
mov
gs
mov
or
push
popa
ss
sbb
jmp
pop
notb
ret
enter
std
daa
jmp
std
add
rorl
dec
nop
add
and
add
add
dec
neg
pop
out
dec
mov
cmc
xor
roll
xor
clc
add
dec
iret
rcrl
shr
shlb
fs
clc
xchg
add
inc
sbb
jmp
sahf
in
outsl
add
es
leave
push
rcrb
hlt
incb
shrl
dec
pop
ja
rcrl
in
testb
insb
and
mov
cmp
cs
and
int3
mov
xor
popf
pop
push
cwtl
jmp
and
inc
in
ret
cwtl
xor
or
and
mov
add
cli
pop
push
js
sbb
mov
arpl
stos
xchg
inc
popa
test
or
and
sub
pop
lock
jge
testb
and
add
pusha
sub
mov
xlat
dec
loop
add
das
sbb
nop
dec
fisubs
mov
jno
imul
outsb
add
bound
push
add
mov
ja
add
inc
mov
pop
rolb
adc
sbb
xchg
lock
add
lds
scas
mov
dec
cmpsb
lock
adc
shlb
ret
mov
les
pop
pushf
inc
sbb
adc
sbb
inc
cwtl
dec
adc
test
add
addr16
ja
add
lcall
cmp
inc
pop
xchg
sbb
into
sbb
ja
sub
imul
or
shl
add
jge
fisubs
dec
pop
pop
mov
push
popa
mov
adc
das
sahf
jp
adc
add
pop
inc
mov
shll
mov
loop
add
movsl
push
push
sub
insb
mov
pusha
stc
cmpsl
mov
in
lock
mov
xor
add
rcl
sbbb
pushf
pop
mov
push
sbb
leave
push
pop
pushf
ljmp
sub
movsb
sub
aas
jo
mov
adc
add
or
xor
add
jmp
add
mov
push
inc
jl
and
lcall
fstps
sbb
fmul
add
andl
add
das
push
cmp
or
adc
scas
cmc
clc
add
or
out
fildl
js
fldcw
test
add
and
test
loop
cmp
sbb
mov
cmp
add
fwait
mov
lahf
add
add
fcmovu
lret
add
or
arpl
jae
add
adc
add
bound
mov
xchg
es
add
add
push
popf
outsl
les
inc
jo
cli
cmp
xor
sub
sbb
mov
andb
pop
cmp
or
popa
jno
pusha
loop
push
shrb
and
insl
and
fcmovne
and
xchg
add
dec
or
jb
mov
add
mov
shll
sub
mov
mov
add
fs
out
add
sub
pop
mov
cld
add
movsb
xor
jmp
in
add
out
test
das
test
stos
jae,pt
mov
aaa
lea
clc
xor
mov
mov
and
mov
jl
loopne
rolb
inc
xor
mov
fistl
sbb
sar
mov
add
xor
add
push
ds
loope
cli
rorb
pop
fisubrl
mov
pop
sub
bound
xchg
cmp
imul
clc
andb
lret
dec
add
push
in
or
ret
mov
or
sti
loop
andb
push
pop
mov
pop
popf
push
jg
cwtl
jns
add
or
dec
outsb
mov
popf
loope
mov
mov
dec
and
sarl
cmp
push
jnp
sub
jcxz
or
lds
add
mov
adc
test
repz
cwtl
int
inc
or
addr16
pop
add
cmp
add
fdivrs
inc
lds
pop
jecxz
jae
out
cmc
add
ja
mov
lret
pop
mov
cmp
push
icebp
or
or
xchg
add
cli
aaa
or
push
jg
int3
jmp
sbb
out
push
xchg
sub
out
add
inc
jl
mov
add
jg
add
xchg
add
jo
out
add
fldt
sub
sar
pop
pusha
pop
ret
jno
test
in
lods
mov
roll
movsb
jle
mov
call
mov
push
fcmovu
gs
push
fdivrp
mov
sub
ljmp
add
or
and
cs
vaddps
lret
inc
pop
aaa
and
insl
xchg
add
and
push
ds
pop
mov
mov
pop
inc
push
inc
sbb
bnd
shlb
cltd
cmp
fwait
push
cmp
jo
insb
xchg
xor
cmp
mov
and
test
add
or
or
sbb
add
or
or
in
dec
jne
clc
lea
lock
dec
pop
into
sti
inc
fildl
add
jp
ss
insb
add
repz
sbb
call
xchg
cmc
mov
stos
gs
jbe
ret
jb
push
jmp
add
xor
icebp
add
jae
imul
inc
imul
clc
aaa
mov
stos
or
add
inc
in
insl
pop
push
jmp
jae
ds
or
inc
sbb
adc
push
mov
add
dec
stc
sub
pop
adc
adc
jnp
es
inc
scas
mov
out
add
scas
cmp
repz
in
add
mov
out
flds
cmpb
push
cmovl
pushf
pcmpgtd
std
pop
mov
hlt
mov
jmp
or
jecxz
sub
addl
testl
adc
fldenv
loope
out
sub
fbstp
lahf
and
add
repnz
and
mov
jne
jne
sbb
call
rol
in
into
mov
xchg
push
addb
addr16
sbbb
in
scas
and
cmp
pop
add
pop
loope
sub
and
add
jmp
add
roll
mov
sarl
xlat
and
sub
and
mov
jbe
inc
ret
add
xchg
xor
cmp
mov
jecxz
push
adc
xlat
fiaddl
lods
insb
mov
ds
fdiv
xchg
sub
xor
outsb
stos
pop
push
or
mov
mov
cmpsb
out
data16
sbb
push
jp
jmp
aas
mov
add
jnp
fildl
shrb
sbb
mov
sub
cs
call
mov
cs
and
sbbl
add
jae
jp
inc
add
inc
and
fdivs
pusha
sub
xchg
mov
mov
aaa
jae
add
mov
iret
fidivl
push
dec
jo
push
aad
push
cmc
orl
inc
clc
dec
add
inc
add
test
mov
add
jo
daa
lret
jmp
xor
cmp
jb
aaa
andb
and
push
scas
push
lods
mov
or
xchg
pop
insl
adc
mov
inc
repz
ret
push
cmpb
or
popf
push
push
jae
pushf
shll
stos
pop
add
sbb
jl
add
adc
xor
xor
and
or
jnp
sbb
add
movsb
jbe
lea
add
shlb
push
add
add
test
lea
data16
test
add
pop
fcompl
xor
shll
mov
xor
sub
je
add
sub
push
xchg
mov
outsl
mov
ds
jnp
fadds
add
lods
cmpsl
lods
loope
add
add
mov
xor
or
push
xchg
outsl
add
sbb
gs
hlt
add
and
lret
int
in
add
inc
orl
sub
icebp
adcb
cmp
jmp
lea
testl
or
mov
call
add
and
cli
pop
cwtl
cmp
mov
gs
or
mov
and
fildll
pushf
lods
testb
aam
push
push
xlat
mov
call
jge
add
add
mov
frstor
loope
repz
push
push
sub
add
dec
fistps
add
pop
rcl
add
inc
outsl
daa
mov
add
inc
fiadds
inc
push
in
hlt
mov
ds
divl
xchg
out
ja
rcl
jl
and
ret
lcall
mov
mov
sub
filds
stc
inc
test
add
insl
nop
inc
jl
add
mov
mov
fwait
sub
mov
lods
cmp
mov
lret
jmp
lds
inc
and
enter
int
cwtl
lock
gs
shr
inc
push
cwtl
adc
in
push
bound
sahf
rorl
add
andb
data16
cld
dec
add
dec
je
cmp
push
stos
mov
dec
push
sahf
sti
shll
adc
aad
jecxz
pop
push
adc
mov
daa
movsl
nop
jecxz
or
add
cltd
mov
ret
divb
cmp
dec
mov
or
cmp
push
mov
jmp
xchg
inc
fwait
add
lock
mov
and
add
pop
test
or
add
fsubrp
iret
and
add
xorb
fnstsw
icebp
mov
lahf
fdivrs
dec
xchg
int3
and
adc
fadds
xchg
ljmp
loopne
lock
out
aad
daa
pop
data16
jbe
cmc
add
dec
adc
mov
leave
je
js
test
pusha
sub
cmp
ret
stc
pop
sbb
push
mov
and
movsl
aas
jg
fadds
mov
loopne
xlat
pop
sbb
popf
adc
push
fwait
sbb
loop
push
xor
add
ljmp
aam
xchg
or
jl
push
ljmp
movsl
mov
stos
cmp
push
test
inc
lods
test
xor
xor
int3
pop
int
loopne
pop
add
shrl
xor
mov
cmp
or
jb
sahf
mov
int
mov
xor
or
mov
shlb
inc
cmp
mov
std
lea
stos
push
out
rol
push
ret
add
cld
add
scas
xor
gs
sub
orl
inc
mov
arpl
adc
mov
test
xor
out
lret
push
lods
das
mov
adc
inc
jne
inc
sarl
inc
dec
and
and
aaa
and
inc
adc
push
cmp
inc
inc
inc
shll
jns
adcb
and
and
adc
pop
or
jns
dec
stc
add
pushf
add
add
cmp
popf
sub
add
or
jns
pop
les
push
pop
push
or
out
scas
sub
mov
mov
fildl
add
repz
lods
out
inc
dec
fwait
dec
pusha
push
mov
xchg
mov
in
pop
into
sti
scas
mov
je
test
inc
mov
inc
adc
inc
lock
mulb
rcrb
add
loop
fidivs
adc
idiv
stos
add
ljmp
push
add
mov
mov
out
push
xor
push
inc
pusha
xor
adc
fstpl
sub
jno
int3
xor
jge
outsb
lods
mov
in
or
and
pusha
aas
dec
out
cmp
jp
add
inc
popa
sbb
mov
mov
pop
and
add
pop
mov
mov
ficoml
frstor
lret
add
xor
clc
scas
jno
push
es
lea
xorb
call
roll
dec
rolb
push
xor
pop
sub
push
fsubp
inc
pop
add
pop
int
les
and
clc
popf
iret
or
enter
inc
mov
enter
cmp
and
mov
in
jo
mov
jae
or
push
pop
xchg
and
out
adc
pop
mov
dec
je
add
push
jmp
adc
out
mov
xchg
mov
add
xor
cmp
cld
movsl
andb
clc
fidivrl
xor
sub
lock
add
inc
jmp
mov
push
mov
jle
aam
in
fcomps
cld
pop
or
jo
outsl
xorl
iret
inc
test
push
mov
mov
xchg
adc
test
fidivrs
or
fwait
shl
push
dec
cmpsb
sub
pop
push
lds
or
fs
add
mov
mov
jb
pop
mov
push
pop
cmc
js
add
fistps
add
dec
aad
pop
jbe
inc
pop
aam
lds
andb
mov
sbb
xor
inc
insb
sub
ret
stos
test
pop
and
add
test
roll
cmp
xchg
jecxz
push
add
out
fwait
add
adc
roll
jnp
icebp
mov
mov
ja
jle
add
xchg
fisubl
sbb
jge
mov
and
movsl
add
out
pop
push
add
hlt
daa
rcrb
mov
lds
lcall
jle
add
in
xorb
mov
subl
mov
stc
cltd
dec
loopne
dec
push
jo
orl
sbb
add
stos
or
in
lahf
add
cmpsl
nop
sub
push
int3
std
aam
sbb
icebp
sbb
xchg
lret
scas
loopew
xchg
push
div
movsl
add
int
mov
mov
or
sub
add
mov
add
add
shl
mov
cmpsb
jae
adc
push
add
sub
lret
clc
jge
shl
dec
sbb
mov
shll
jg
add
cmp
pusha
cmp
cmp
lods
ja
aas
push
dec
push
fsubs
push
daa
and
cmc
cmp
dec
pop
mov
ret
inc
dec
cli
pop
sub
shlb
adc
cld
mov
add
dec
xchg
in
cmp
xchg
push
pop
mov
add
popa
add
cmc
rcrl
push
mov
incb
cwtl
pop
or
adc
push
xchg
and
ret
fadds
fcomps
jecxz
bound
add
or
sbb
daa
mov
sbb
nop
in
leave
adc
cltd
call
or
jl
inc
sbb
dec
push
enter
add
sub
dec
jns
or
addl
sub
dec
outsl
add
pop
daa
sub
das
hlt
adc
xlat
subb
loope
and
cmp
add
rcl
movl
inc
sbb
add
out
sarb
fdivl
cwtl
adc
lret
jg
shll
sbb
add
inc
mov
add
loope
dec
imul
add
mov
push
adc
mov
icebp
out
imul
stos
ss
out
xor
ja
sbb
lock
scas
sbb
mov
pushf
sub
add
cmpsb
popa
test
xchg
push
loope
xlat
pop
jbe
stc
adc
pop
and
loop
mov
push
scas
mov
jo
sbb
lods
adcl
push
jmp
xchg
adc
insb
add
or
test
jecxz
sbb
rol
ds
pop
sub
andb
shr
jle
add
addr16
jp
xchg
or
add
jge
lds
inc
mov
test
xchg
insb
push
mov
dec
scas
call
or
dec
add
aas
add
push
cld
hlt
inc
add
or
comiss
inc
out
mov
loopne
add
push
sub
scas
mov
dec
inc
aad
cmp
jns
or
ss
add
jmp
in
xor
data16
add
fdivrl
cltd
fwait
adc
cmpsl
cmp
add
push
inc
add
shlw
fwait
sub
in
movsb
push
sub
add
xchg
xor
stc
jecxz
lcall
inc
repz
int
ds
xchg
orb
stos
and
or
imul
or
call
lret
and
sti
and
mov
jmp
sbb
es
or
jg
sti
inc
fiadds
add
arpl
imul
cmp
add
jbe
dec
outsl
movsb
dec
xchg
loopne
xchg
jno,pt
sti
aaa
mov
xchg
xor
add
stos
jecxz
pop
fs
pop
mov
loope
xchg
lcall
ljmp
insb
mov
scas
pop
jecxz
push
add
inc
dec
test
and
lea
pop
xor
push
repz
ret
cmp
inc
loopne
or
adc
jbe
and
jecxz
jne
mov
call
push
test
sbb
test
adc
dec
pop
movl
or
dec
dec
mov
test
lock
scas
sbb
decb
ds
cwtl
outsl
std
stos
cmp
jb
cld
adc
test
in
sub
jge
divl
cmp
dec
lods
sbb
clc
lock
push
and
lcall
add
addb
push
push
outsb
xchg
mov
add
aaa
negl
push
movsb
jbe
add
mov
add
adc
add
test
inc
lods
call
push
xchg
cli
cmpsl
xchg
inc
cmpb
negb
dec
lods
pop
add
xchg
cmp
add
inc
dec
add
or
imul
inc
test
clc
ja
sbb
push
sub
pop
aas
mov
add
xchg
pop
lret
and
rcr
push
inc
loope
popa
and
cmp
fwait
or
mov
lahf
push
lds
lock
mov
or
ljmp
mov
sbb
jbe
je
push
add
fisttpl
out
movsl
std
sahf
xchg
push
jne
and
push
push
lds
push
mov
mov
jle
mov
dec
mov
adc
add
insl
inc
repnz
nop
mov
jg
nop
add
pop
push
mov
add
rclb
mov
mov
jle
fstps
xchg
add
mov
pushf
push
mov
sub
sub
dec
jmp
inc
add
daa
sarl
jnp
jnp
nop
mov
xor
rcl
sub
popa
mov
add
mov
mov
inc
rolb
fsubrs
jmp
mov
xor
sbb
mov
ljmp
and
lock
add
outsb
xor
call
notb
inc
ja
cmp
mov
mov
jno
add
repz
pop
cmpb
cmpb
jb
pop
fmuls
and
mov
jne
fsubrl
dec
cmp
loop
leave
aam
aad
sbbb
cmp
lods
pop
shlb
and
dec
shrb
in
or
les
cwtl
mov
cmp
lods
or
mov
push
orb
add
mov
pop
das
push
add
mov
mov
add
icebp
shlb
inc
pop
sub
aas
add
pop
dec
das
mov
add
cmp
clc
xlat
mov
pusha
lds
hlt
pop
cmpb
fisubrl
jno
popf
push
add
dec
jmp
pop
cmpb
pop
mov
dec
das
insl
mov
mov
or
lcall
fcoml
pop
dec
fisubl
enter
xchg
imul
add
jge
push
add
enter
pop
adc
jmp
add
sahf
push
movsl
stc
lret
aad
add
jb
push
mov
sub
add
or
loop
xchg
stos
add
xchg
int3
outsl
mov
xor
out
fisttpll
cmp
cmp
addb
testl
cmpsb
adc
dec
sub
mov
push
add
rcll
lods
cmp
pop
xor
nop
sub
popf
pop
add
es
fldcw
mov
jb
sub
test
inc
add
cmp
add
adc
adcl
add
add
test
das
xchg
fmul
loopne
push
xchg
loope,pn
js
fldl
or
mov
cli
lea
dec
pop
push
in
push
popf
and
addl
and
push
movsb
push
push
sahf
pushf
mov
sub
cld
stos
inc
add
pop
and
add
or
shr
push
lret
add
leave
pop
jmp
or
in
movhlps
mov
jg
add
jb
loop
mov
mov
push
cmp
out
or
xchg
sbb
mov
xchg
xor
mov
sub
flds
data16
mov
cmc
popa
or
roll
aaa
lea
fwait
insb
jl
add
daa
fidivl
dec
or
clc
pop
loop
add
jge
cli
movsl
shl
js
add
adc
ret
fists
and
out
enter
leave
or
xor
movsl
xor
loopne
shl
test
shlb
add
mov
push
mov
cmp
mov
sarl
add
pop
add
loope
dec
adc
pop
or
sub
ret
add
cmpsb
xchg
mov
xchg
xor
xchg
lretw
lock
add
rol
pushf
loopne
inc
jge
cld
lods
fiaddl
fcoml
fisttpll
outsl
cmp
mov
test
dec
cmp
push
insb
add
out
shll
out
jbe
and
mov
sar
add
jmp
or
adc
fmuls
and
mov
jne
sub
lret
sarl
fisubl
push
aam
testl
and
inc
sbb
mov
push
dec
pop
shll
ss
mov
je
hlt
jge
cmc
or
mov
outsl
add
mov
cmp
add
aam
jge
pop
cmc
add
sub
in
sti
dec
xchg
iret
les
movsb
pop
push
not
sti
add
mov
addb
push
push
sub
inc
mov
mov
or
daa
int3
add
out
sub
incb
jns
or
cld
aas
jne
pop
cmc
push
mov
mov
inc
repz
add
rolb
pop
andb
lahf
or
add
push
std
add
push
add
mov
fbld
test
shll
jp
add
pop
loopne
or
jae
imul
arpl
push
cwtl
rol
or
cmpl
xor
or
addr16
dec
cli
add
mov
ljmp
or
jl
push
push
int3
mov
mov
push
pop
les
in
add
mov
lods
jae
add
and
fbld
out
push
outsb
ret
add
int
or
jmp
inc
inc
lds
xchg
xchg
adcl
dec
movsb
inc
and
mov
repz
add
stos
pop
jecxz
ljmp
dec
into
mov
fucomip
push
xchg
fdivl
cmp
shlb
sarl
jo
add
cmp
push
add
fs
mov
jecxz
pop
sub
out
addr16
cld
add
and
es
dec
rclb
add
cli
cmp
fwait
or
xor
jl
shrl
and
push
jbe
mov
iret
shlb
ljmp
sub
and
ds
aam
into
sti
add
jns
dec
arpl
in
dec
cli
bound
add
outsl
xlat
imul
cmp
cmp
xor
fst
add
xchg
in
dec
cmpsb
test
mov
jb
add
je
sbb
add
jne
xchg
xorl
add
leave
das
push
mov
js
adc
mov
or
push
out
cwtl
sbb
sub
mov
jbe
ds
lock
ret
js
add
or
loope,pt
mov
aas
pop
fstps
inc
mull
int
enter
and
rclb
jmp
jle
add
jl
imul
movl
test
and
enter
stos
in
xchg
add
pop
pop
push
add
push
mov
add
fs
lock
cmp
jo
pop
out
xchg
lds
adc
mov
in
test
add
fcompl
mov
and
mov
pop
mov
cmp
xor
mov
jge
mov
add
into
and
sbb
fwait
pop
jle
inc
sbb
mov
jecxz
and
cmp
dec
mov
mov
call
ds
and
enter
dec
adc
add
xchg
mov
outsl
cmpsb
push
dec
gs
popf
out
jns
out
cmp
push
mov
mov
cmp
aas
add
mov
jb
add
mov
int
add
and
stos
xor
xchg
rcl
dec
inc
mov
xchg
add
add
xor
mov
cs
arpl
and
repz
aam
add
out
jecxz
shll
sbb
push
pop
jge
stos
outsl
mov
adc
mov
cmc
mov
add
orl
decb
add
adc
mov
inc
pusha
inc
leave
add
cmp
scas
pop
lea
sub
loopne
add
mov
sub
adc
fdivr
dec
jmp
fiadds
iret
sti
mov
stos
pop
in
gs
aaa
out
jae
imul
nop
jl
cmp
add
lret
ljmp
aas
sbb
add
adcb
xor
out
pop
orb
in
lret
and
test
adc
adc
lret
or
inc
popf
adc
sub
stc
xor
and
lods
add
ljmp
gs
div
dec
add
push
out
mov
dec
flds
mov
push
xlat
or
insb
add
fildl
mov
out
add
inc
or
lock
adc
add
movsl
roll
out
sahf
insl
sbb
mov
cmp
inc
cmp
iret
test
dec
mov
push
fnstenv
dec
inc
cli
sbb
add
loopne
loope
mov
ret
dec
sub
add
sar
ret
pop
testb
xchg
movsb
sbb
nop
cmp
popf
add
inc
push
sub
push
test
sbb
rcl
into
add
and
data16
jp
push
or
sub
add
imul
outsb
jg
inc
jmp
popa
add
jmp
dec
loop
sahf
shr
inc
dec
shld
loopne
adc
and
mov
fcmovu
inc
stos
ss
pop
notb
xor
dec
dec
jo
adc
dec
add
lea
mov
arpl
jecxz
call
or
mov
add
fs
adc
repnz
pop
aas
sbb
jnp
fldl
arpl
xor
push
and
fsubrp
or
xorb
adc
cmp
iret
push
and
mov
mov
mov
add
icebp
repnz
scas
test
testl
scas
and
pop
pusha
pop
xor
and
cmp
pop
jns
dec
jnp
jb
add
inc
mov
adc
add
xchg
cmpsl
sbb
add
out
jmp
bound
sub
xor
adc
cmp
jp
add
aas
loopne
add
add
cmp
mov
pop
adc
shr
inc
adc
movsl
cli
push
das
ret
jle
lahf
sub
outsl
mov
dec
inc
fsubs
push
incb
ret
add
fs
push
xchg
xchg
push
push
lahf
sbb
scas
inc
or
mov
xchg
add
cmp
xorb
adc
negb
dec
lods
mov
jmp
or
cmpsb
pop
cmp
enter
push
loop
and
add
data16
lahf
sti
sub
jne
pop
inc
test
sub
ja
aas
imul
add
shr
jecxz
cs
add
mov
sbb
test
mov
jno
add
xor
xchg
mov
add
icebp
lods
jns
push
and
fisttpl
in
fld
add
aaa
jbe
adc
xor
add
sbb
sub
pushf
std
adc
pop
add
fildl
ljmp
cmp
andl
mov
sbb
inc
adc
aam
jnp
in
cmovns
push
sti
push
rol
mov
leave
loop
sbb
push
mov
xor
cmp
jle
cmp
or
or
arpl
jb
aam
push
sar
pusha
cmp
add
jg
add
cmpsl
cli
sahf
cwtl
test
xor
mov
inc
xor
xchg
adc
cltd
cld
add
mov
inc
dec
or
add
push
fwait
jecxz
enter
add
mov
ret
in
jle
push
add
push
xor
mov
sbb
fnsave
loope
add
arpl
mov
ds
sbb
inc
movsb
clc
shrl
xor
xchg
repz
adc
call
subb
pop
add
rcrl
shrb
mov
lea
mov
sarb
sbb
pop
pop
pop
add
std
pusha
outsl
xchg
shrb
add
mov
add
lldt
mov
shll
sbb
les
mov
out
dec
clc
rcll
add
sub
stos
cmp
adcl
cmpsb
popa
test
push
pop
sbb
xchg
cli
lock
std
idivl
add
jl
or
ficompl
testb
mov
andl
sbb
iret
cmp
fcomps
call
xchg
and
mov
imul
inc
pop
rorb
mov
mov
movsl
inc
add
push
iret
enter
add
fcoml
lods
add
mov
popf
add
out
icebp
add
adc
iret
movups
mov
aas
push
jg
stos
add
andb
pop
mov
dec
mov
mov
sti
incb
mov
adc
add
mov
xor
fdivrp
xchg
add
aas
fs
pop
add
sbb
outsl
cmp
out
ljmp
out
dec
popa
push
in
mov
jp
rcrl
pop
outsb
shll
insb
add
xchg
call
hlt
lcall
ljmp
push
aas
cmpsb
int3
mov
movb
cltd
xlat
pushf
cli
aaa
push
notb
or
inc
nop
lret
hlt
cbtw
outsb
out
push
bound
xorb
jge
adcl
mov
add
cmp
mov
cmc
hlt
loope
data16
push
or
into
cltd
lods
adc
lret
push
add
sub
or
out
xchg
lods
dec
push
push
cmp
mov
iret
jne
test
inc
add
inc
outsb
gs
add
mov
mov
push
sbb
in
mov
mov
add
aad
dec
cwtl
fadds
xor
jmp
dec
ds
jl
add
adc
dec
mull
push
dec
mov
cmp
clc
xor
add
clc
call
in
xchg
and
push
xor
test
or
loop
add
es
add
clc
data16
testl
out
cwtl
imul
mov
xor
and
push
aaa
sbbb
rcrb
mov
faddl
mov
jnp
sbb
mov
cmp
push
jl
fs
lods
inc
aas
addl
sbb
jge
in
pop
push
pop
leave
pop
add
dec
stos
shll
sbb
xchg
mov
sbb
cmc
inc
das
repnz
push
loope
jge
data16
jnp
xchg
fisttps
mov
aam
testb
out
mov
jge
or
movsl
add
sbb
mov
inc
mov
lcall
lret
sub
mov
fadds
in
mov
xchg
dec
arpl
add
out
xor
imul
stc
mov
cwtl
lahf
cmpsl
cmp
js
pusha
add
xor
daa
fldl
cmc
pop
add
cmp
add
ret
fists
adc
add
xorl
sub
push
test
sub
icebp
xchg
insl
int
adc
cltd
adc
mov
enter
add
dec
andb
out
addb
mov
xor
test
shll
add
jno
mov
cmp
pop
adc
insb
rcrb
arpl
jp
dec
adc
mov
or
add
cli
push
add
jp
clc
add
in
add
lret
inc
comiss
data16
push
clc
sbbl
aas
dec
xchg
mov
push
dec
adc
test
kmovb
cli
pop
shlb
ja
inc
add
add
enter
pop
and
out
push
fsubr
jle
les
sarl
mov
mov
dec
rorb
pop
and
jno
test
inc
mov
add
mov
loope
dec
nop
sarl
add
push
pusha
in
cs
dec
inc
cmpb
popf
sahf
les
pop
dec
stc
rol
loop
add
test
dec
xor
test
aad
orw
pop
jp
sbb
and
cld
mov
and
sub
rcr
stos
movsl
lods
lock
mov
mov
add
rcrl
call
imul
inc
ljmp
mov
pop
add
lahf
stc
ss
mov
ret
jle
add
jmp
mov
les
in
jmp
add
adc
fcom
ds
add
push
adcl
add
jae
lahf
or
add
pop
cmp
cld
pop
js
add
jbe
andl
pop
mov
add
fisubrl
scas
test
dec
inc
inc
xor
jl
mov
mov
loopne
mov
add
add
outsl
adc
icebp
clc
mov
add
fldt
push
jl
jp
inc
add
arpl
outsl
mov
out
mov
add
sub
add
and
mov
mov
push
mov
clc
mov
sbb
in
or
mov
pop
mov
dec
cmp
mov
and
test
pop
pop
leave
movsl
sbb
mov
pop
add
inc
shlb
sahf
jne
inc
mov
add
pusha
sub
or
adc
stos
iret
pop
dec
clc
add
mov
add
cltd
incb
xor
out
aad
add
ja
dec
inc
in
pop
add
stc
or
fsub
lahf
and
add
std
mov
xchg
push
inc
lahf
mov
add
xor
push
xchg
ss
jmp
cmpsb
aas
add
in
push
lock
gs
pusha
push
mov
test
push
inc
adc
ds
call
sub
adcl
pop
or
movsb
add
adc
xor
outsl
add
in
pop
lds
mov
int3
sub
sbb
add
rcr
mov
out
cwtl
adc
add
jns
lcall
mov
ds
fcmovnu
or
insb
adc
mov
add
or
dec
add
stos
test
sub
out
sub
mov
sbb
add
mov
fsubr
push
adc
mov
hlt
xchg
sub
mov
jmp
adc
xlat
hlt
pop
dec
add
xchg
ljmp
hlt
jecxz
sbb
sub
stos
enter
sbb
lret
push
fistps
push
dec
mov
pop
test
add
xchg
clc
cli
ret
test
in
imul
mov
mov
nop
fmuls
dec
imul
mov
or
jbe
xchg
mov
sahf
add
into
loope
push
inc
pop
mov
jb
mov
add
xchg
jae
fcoml
pop
clc
mov
lcall
ficoms
push
jae
push
add
std
loop
sub
mov
int
jl
add
movsb
mov
sahf
mov
icebp
lock
sbb
lods
fsubrl
dec
int3
jle
push
or
mov
hlt
rcrb
int
add
cmp
push
xor
frstor
cwtl
inc
and
cmpl
shlb
xor
adc
add
data16
add
out
adc
push
sbb
add
std
rclb
ja
or
stos
add
push
shr
in
push
test
jg
add
pop
mov
sbb
add
sbb
lods
movsl
testb
sub
gs
jmp
xchg
mov
xor
lods
inc
mov
pop
repnz
inc
xchg
mov
sub
inc
sar
in
lret
add
or
jne
int
xchg
mov
push
aaa
inc
xor
cmp
iret
ror
adc
stc
or
loopne
aad
dec
addr16
mov
insb
mov
call
add
mov
cmp
dec
lds
frstor
xchg
test
lahf
icebp
xor
jo
add
pop
jae
rcll
push
outsb
jnp
pop
pusha
cmpsl
sub
push
add
cmp
mov
ljmp
lods
dec
and
add
mov
or
adc
mov
jecxz
fisubs
repz
push
cli
add
jns
xor
or
mov
xchg
cld
in
in
mov
add
fisttpl
mov
movsb
pop
add
sub
xor
lahf
or
repz
xor
sbb
mov
mov
faddl
xchg
mov
popa
mov
enter
mov
add
inc
push
movsl
xchg
sub
inc
pusha
adcl
mov
add
test
mov
movsb
and
or
iret
pop
add
insl
ja
xchg
sbb
cld
lret
add
jb
shl
mov
rolb
add
fcmovb
push
mov
clc
in
dec
add
fistpll
dec
add
in
mov
bndldx
jmp
loopne
mov
pop
and
lds
cmp
out
adcb
ret
fstl
shl
inc
sbb
lcall
shr
sbb
daa
mov
dec
mov
adc
cmpl
stos
and
add
pop
cmpsl
push
or
aad
xchg
in
xchg
jno
add
int
and
in
sbb
sub
inc
inc
cmp
aas
and
fimuls
sbb
sbb
xlat
sbb
mov
mov
and
push
push
shlb
inc
mov
lea
inc
les
mov
inc
push
subl
add
lea
lahf
cmp
out
dec
mov
xchg
adc
dec
mov
ja
sub
add
mov
xor
mov
adc
arpl
xor
fildl
pop
mov
lret
les
cld
xchg
push
int3
test
push
hlt
dec
loopne
not
cmc
dec
adc
fcmovb
clc
add
xchg
lods
add
outsb
fmul
call
movsl
adcb
gs
loopne
out
adc
or
inc
aam
sahf
test
popa
cwtl
adc
push
add
and
imul
lock
pop
pushf
les
dec
pop
loopne
and
push
mov
mov
mov
in
cld
push
loop
testl
sub
jl
add
add
jne
shl
in
lock
push
insl
pop
or
add
pop
rolb
fisubs
test
add
mov
clc
sbb
or
psubd
dec
inc
jmp
pop
gs
push
cmp
test
aad
and
popa
xor
outsl
push
das
int3
rolb
and
ret
add
movsb
sti
lock
jle
rolb
enter
mov
jg
scas
cs
ljmp
mov
xchg
add
add
sbb
pop
mov
jns,pn
push
dec
mov
mov
mov
add
fstpt
add
pop
ss
mov
xchg
mov
orb
call
xchg
sbb
dec
inc
fldl
negl
std
add
andb
jecxz
rol
jl
aaa
add
sahf
mov
sbb
push
add
hlt
and
dec
add
or
or
mov
loopne
mov
or
push
mov
adc
leave
lahf
das
and
jae
filds
in
or
push
mov
hlt
xor
int3
adc
ret
dec
leave
mov
dec
xchg
jecxz
push
add
jae
pop
in
mov
adc
aaa
xchg
pop
test
cmp
add
inc
sbb
repnz
add
jmp
xchg
cmp
in
int
mov
jge
aas
gs
push
call
ljmp
mov
popf
cli
fadds
xor
inc
push
in
add
mov
xchg
fmuls
pusha
adc
pop
je
mov
ja
push
jle
add
out
jge
or
or
add
add
pop
dec
push
imul
add
or
xchg
je
sub
inc
dec
add
jns
cmc
leave
stos
fnsave
jb
jo
add
xchg
dec
addr16
add
ret
ret
push
in
sub
add
adc
or
test
xor
or
ret
pushf
pusha
sub
and
fistpll
dec
dec
fadds
subl
add
mov
cld
subb
jnp
cli
mov
pop
push
push
mov
adc
inc
cmc
push
sbb
js
loope
sub
sarb
test
mov
xor
mov
fiadds
ret
xchg
inc
add
adc
popf
cmpsb
lock
jb
mov
cmp
das
pop
mov
lock
pusha
add
inc
sahf
add
ds
loopne
mov
jmp
xchg
lods
add
nop
or
mov
repnz
cs
adc
adc
mov
stc
pushf
fsubrl
jnp
inc
push
test
mov
pusha
push
rolb
or
addb
xchg
mov
inc
cmp
lahf
push
popf
mov
cmp
lcall
adc
xchg
faddl
cmc
pop
cs
add
dec
sbb
pop
movq
push
dec
pop
nop
lds
rcrl
shrl
mov
jmp
xor
daa
jb
jno
adc
pop
push
cmc
inc
and
push
xchg
xor
idivl
pop
jg
outsb
sbb
cwtl
add
mov
pop
aam
std
sbb
jo
push
popf
push
jl
jp
pop
push
add
loopne
adc
add
inc
cld
jno
dec
addb
test
push
lahf
pop
les
add
loopne
lds
movsb
lret
cmpsl
jmp
add
mov
fdivs
pop
out
pop
or
or
repz
or
stos
cltd
push
sbb
xchg
fcomps
add
daa
enter
andl
cmp
ljmp
mov
xchg
xor
popa
movsb
out
jae
shlb
pop
mov
and
in
xchg
add
and
pop
repz
xor
sbb
daa
add
cwtl
or
add
andb
mov
jnp
incb
out
mov
test
js
insl
mov
adc
out
add
push
rcrl
andb
mov
test
mov
cmp
push
rolb
shr
cmp
bswap
cmpsb
inc
or
and
xchg
addr16
mov
jl
aam
sahf
sub
mov
and
sbb
add
lock
push
fidivl
xor
rcll
cli
sarl
push
dec
imul
and
shl
cmp
cmpb
adc
lahf
mov
push
mov
in
fmuls
fdiv
out
cltd
cwtl
inc
jb
sbb
pusha
push
fs
inc
xor
dec
outsl
scas
pop
adc
iret
cwtl
jge
mov
lcall
jle
faddl
mov
cmp
div
std
inc
adc
and
mov
repz
adc
cmpsb
xchg
clc
lcall
add
cmova
or
push
adcb
rcrl
dec
mov
jae
xchg
shlb
push
add
sbb
add
dec
jp
jmp
jg
push
lret
push
jnp
iret
push
loope
es
cmp
xor
sbb
xchg
or
xor
lock
lcall
add
pusha
hlt
and
jle
or
jmp
dec
push
xor
or
adc
pop
add
mov
or
and
sbbb
pop
sti
jge
pop
mov
or
mov
cld
sub
cmp
inc
add
nop
inc
inc
roll
aas
push
pushf
call
push
shll
pop
xor
add
push
xlat
push
sbb
ret
and
push
inc
popa
adc
icebp
sub
push
sbb
add
iret
stos
or
cmpl
packsswb
push
inc
pop
hlt
mov
or
or
xchg
testb
filds
mov
cmp
into
jbe
btr
mov
jmp
jle
jb
dec
xor
decl
pushw
test
filds
inc
lods
or
or
jge
xchg
aam
add
add
cmpsl
movl
fildll
pop
adc
add
inc
jo
and
scas
mov
pop
nop
and
jmp
and
shl
inc
icebp
fildll
daa
pop
pop
mov
in
jl
inc
leave
add
cmp
add
xor
add
dec
cmp
add
adc
ret
xor
inc
sahf
mov
cmp
mov
and
add
cmp
lret
mov
jl
inc
in
add
jae
rcrb
add
cmp
xchg
and
and
mov
pop
cmp
add
cld
xchg
xchg
pop
xorb
push
loopne
jo
fwait
add
mov
adc
add
pop
jmp
sahf
popa
in
and
add
rorl
add
imul
inc
fiaddl
sti
pop
mov
imul
shll
cmpsl
addl
xchg
mov
sbb
lret
dec
add
push
pop
xchg
std
loope
roll
mov
add
incb
insl
pop
mov
out
add
xchg
imul
out
daa
mov
xchg
sbb
or
arpl
lahf
fisttpl
add
push
testl
sbb
cmpsl
loopne
jns
shl
pusha
pop
adc
push
cmp
xor
xchg
mov
push
mov
sub
outsl
ret
pop
iret
call
jle
and
or
cld
sahf
mov
jnp
add
jg
push
lods
stos
add
xchg
ds
inc
sti
inc
cmc
push
repnz
test
cltd
imul
cmpsl
cmpb
jo
shr
leave
ss
add
inc
xor
add
cmpsb
scas
int3
jge
in
xchg
xchg
sbb
mov
jo
stos
mov
push
xchg
fsubl
jns
xor
shll
daa
mov
dec
or
inc
add
pop
jb
add
jbe
xchg
imulb
nop
xor
pop
gs
mov
cmpsb
mov
inc
cld
push
inc
into
xchg
rolb
ss
data16
push
and
add
inc
out
enter
and
gs
data16
adc
mov
jae
das
mov
add
in
or
sbb
pop
iret
push
pop
call
fsubs
mov
out
mov
add
mov
bswap
aaa
xchg
out
inc
fcoms
jbe
push
cmpsb
test
es
pushl
inc
sti
in
ljmp
fmuls
ret
dec
push
loopne
subb
lods
add
mov
outsl
not
sub
add
jmp
jge
jge
or
or
add
add
mov
in
xchg
pop
xchg
mov
xchg
clc
lds
mov
and
add
sbb
repz
popa
add
push
xchg
adc
mov
fsub
orb
ljmp
mov
pop
cmp
jae
pop
divl
jb
mov
add
sbb
add
icebp
dec
fwait
sti
in
mov
lret
cmpl
xchg
inc
nop
mov
push
mov
dec
cli
push
pop
or
mov
pop
test
xor
fmul
gs
popf
cmp
and
xchg
rcr
add
sub
add
mov
orb
test
or
push
add
jmp
push
or
cmovae
loopne
push
pop
movups
and
movsl
loope
dec
test
in
cmp
inc
mov
xor
mov
std
dec
dec
mov
sbb
mov
dec
sbb
dec
add
pusha
je
lcall
inc
cmp
scas
fisttpll
inc
insb
minps
ficoms
cmpl
add
ja
add
jle
into
popa
mov
add
aaa
aam
jb
add
xor
les
rclb
mov
add
mov
or
in
dec
inc
es
jne
mov
and
add
jns
mov
jb
mov
add
lock
das
add
lcall
pusha
xchg
or
aaa
in
jge
mov
or
sub
pop
mov
push
dec
cmpsl
sbb
xchg
mov
xchg
movsl
sti
imul
movsb
sub
mov
xchg
xor
inc
je
xor
and
divl
adc
test
in
jle
pop
les
jl
push
scas
sub
add
cmpb
xchg
nop
mov
pusha
lea
push
add
stos
xlat
fnsave
ds
repz
mov
aam
repnz
mov
pop
xor
add
aad
push
shr
pop
and
jge
add
lcall
ret
add
stos
mov
sub
shrb
popa
cmp
aad
fs
inc
fisttpll
mov
cmp
sbb
lret
inc
sbb
rclb
stc
sub
nop
repnz
inc
adc
add
cmp
leave
sub
lret
out
add
inc
sub
sbb
push
add
mov
sbb
lods
adc
sahf
std
inc
pusha
cmpsb
jns
add
xchg
dec
sarb
clc
int
scas
jbe
dec
xor
add
ljmp
push
or
sub
fwait
add
cmp
xchg
adc
pop
xor
jne
hlt
fdivrs
divb
sbb
sbb
sbb
or
cli
cmp
test
push
dec
sbb
mov
orb
sbb
jmp
popl
pop
aad
sbb
orb
push
push
in
add
push
fsubs
out
mov
pop
in
das
test
xchg
pop
cmpb
scas
sub
add
lret
int
sbb
add
pop
fadds
loopne
ficoms
add
frstor
popl
addr16
out
mov
xchg
lcall
mov
call
sbb
mov
add
fs
test
jp
add
push
popl
das
cs
and
push
add
mov
bound
xchg
and
sbb
add
jnp
and
sahf
dec
xchg
add
outsl
jne
movsl
into
mulb
mov
inc
repnz
mov
jns
pop
lea
adcl
sub
inc
movsl
fiadds
lret
xchg
pop
jb
sub
jecxz
mov
jmp
add
mov
push
xor
adc
add
lds
stc
pop
lods
scas
add
lret
xchg
dec
and
lock
jo
in
inc
pop
adc
mov
pop
aaa
cmp
insl
lock
push
test
leave
pop
add
stc
and
call
pusha
push
pop
shrl
ss
mov
sub
js
cli
inc
mov
loopne
ret
test
sub
stc
mov
xorl
scas
push
and
add
call
sbb
mov
jnp
mov
das
add
push
sahf
pusha
in
ja
loope
bnd
pop
decl
cld
xchg
shlb
lock
cmp
push
pop
or
test
inc
and
hlt
jmp
jp
mov
cmp
add
sub
movsb
push
scas
cs
push
fnstcw
outsl
rcll
mov
add
sub
popf
addr16
inc
and
js
inc
and
mov
add
xchg
mov
imul
mov
ljmp
inc
fcom
sub
rcr
and
dec
repnz
push
ds
add
lret
rorl
or
out
inc
inc
sbb
gs
ljmp
mov
sbbb
add
inc
aad
xchg
frstor
xlat
pop
add
jb
addr16
mov
add
push
scas
add
cmp
mov
add
inc
xchg
xor
add
stos
xchg
daa
dec
in
pop
pushf
faddp
mov
adc
jl
out
add
cmp
fs
aad
fisubrs
hlt
orb
adc
mov
add
insb
pop
xor
push
xchg
adc
add
xchg
or
mov
push
ret
int3
arpl
xchg
pop
inc
lock
adc
movsb
in
inc
push
add
movsl
push
mov
rcrl
sub
out
cmp
scas
or
adc
xor
cli
cmp
xchg
andl
lock
push
add
jo
lret
lret
and
filds
adc
mov
test
ret
les
adc
cmc
xor
nop
dec
add
mov
shrb
add
mov
pusha
jns
sbb
mov
dec
mov
call
jno
xor
addl
sbb
dec
and
adc
pop
push
push
xor
jae
orl
pop
pop
jg
jnp
and
and
out
enter
add
nop
or
pop
sub
aad
fsubr
sub
pop
push
jbe
push
sbb
repnz
push
pop
call
sahf
mov
pushf
and
xchg
shrb
icebp
add
loopne
repz
mov
push
repz
push
mov
iret
mov
or
mov
jae
outsl
push
push
sbbb
add
popa
push
lret
push
jnp
and
call
ret
test
adcb
dec
add
aaa
xlat
add
push
add
push
sub
idivb
inc
stos
ja
sbbl
shll
cmpsl
lahf
mov
inc
fmuls
pop
popa
mov
xchg
mov
mov
adcb
nop
push
jae
arpl
mov
mov
daa
mov
int3
cli
aam
push
dec
sbb
rolb
jge
add
clc
addl
jae
push
add
dec
pop
fcompl
cmp
cmpsb
sbb
push
mov
mov
and
sbb
xchg
jne
ret
in
shlb
adc
xor
jl
or
mov
or
sbb
pushf
orl
push
mov
int3
test
repnz
adc
sub
incb
jo
sahf
imul
popf
cmpb
shrb
add
xchg
inc
add
lods
pop
fisttpl
je
add
test
movsl
add
fs
adc
push
xor
sahf
add
fcmovb
pop
or
mov
outsl
hlt
jae
scas
imul
add
push
mov
clc
outsl
sbb
add
jne
sub
add
fisubrl
xchg
jb
add
call
daa
add
insb
sub
ret
shrb
mov
cmc
movsl
loopne
add
inc
pop
or
aas
andb
imul
mov
imul
xor
roll
or
jp
xor
pushf
sbb
fnsave
loopne
imul
push
clc
cmc
sbb
lock
add
subl
jbe
cwtl
pop
jne
nop
pop
push
push
lods
shl
add
jnp
pop
cmp
add
cmp
je
js
jge
pop
or
jp
mov
xor
sbb
arpl
xchg
sbb
in
ret
add
dec
dec
loop
mov
sbb
mov
sub
divb
add
ret
mov
imul
stc
add
lock
testl
ja
lret
movsb
add
ret
add
addb
xchg
lahf
je
adc
ljmp
xor
xchg
ret
adc
fidivrs
lret
pop
stos
pop
sbb
aam
adc
dec
push
cld
lock
pusha
cs
inc
jl
fnstenv
add
sarb
sbb
out
and
adc
fisubs
jp
fwait
inc
cmpsl
and
jae
shlb
call
and
lock
or
or
sarb
in
mov
inc
or
arpl
push
sub
push
mov
add
and
push
mov
and
leave
movsb
xor
inc
mov
jge
movsl
subl
das
sub
adc
xor
sub
inc
mov
mov
add
pop
data16
lods
and
sub
addr16
das
fidivrs
loope
push
pushf
roll
xor
inc
add
nop
and
add
xchg
ret
insb
sub
in
or
popf
movsl
rclb
roll
ret
out
out
adcl
sub
add
lods
movb
jl
adc
lret
mov
xor
mov
jmp
imul
jg
add
xchg
in
push
cmpsb
js
cmpsl
aas
pop
lock
pause
adc
cmp
add
stc
mov
fisubrs
inc
pop
imul
push
cmovne
and
adc
sarl
mov
inc
repnz
sbb
andb
xor
add
add
iret
add
popa
lret
adc
push
mov
mov
or
int
cmp
dec
test
adc
insb
and
cmp
sub
cli
jecxz
inc
adc
aas
adc
xchg
xchg
les
lods
push
add
xor
sbb
sbb
sub
add
inc
sub
lcall
sub
mov
xchg
ret
test
dec
push
xchg
je
or
loope
and
roll
sub
or
pop
inc
lods
sbbl
and
das
test
push
and
loope
lcall
loopne
js
inc
dec
fdivrs
dec
sub
add
mov
xchg
les
jmp
mov
lcall
mov
lock
push
xchg
and
cs
in
imul
or
and
pop
jg
or
push
cltd
enter
cmc
push
daa
ja
lret
add
dec
add
mov
nop
mov
inc
xchg
push
decb
jae
sbb
test
mov
or
inc
add
addr16
xchg
xchg
jb
sbb
mov
fiaddl
cmp
cmp
imul
push
js
xchg
ljmp
scas
jmp
insl
out
andb
pop
incb
dec
scas
sub
stc
pop
inc
xor
orl
xchg
cwtl
andl
push
out
lea
and
sbb
adcb
jecxz
sbb
shl
popf
sbb
push
and
xor
jle
jae
subb
push
lret
xor
mov
mov
or
cs
test
add
daa
in
ffree
outsl
xchg
int3
or
xor
jg
lahf
cs
rolb
push
mov
cmp
out
adc
adc
sbb
in
add
jbe
cmp
jmp
dec
es
push
mov
rol
hlt
je
xchg
dec
xchg
add
jnp
xorb
call
dec
daa
pop
fisttps
mov
add
cwtl
xor
xchg
xor
das
pusha
sub
adc
add
loopne
in
inc
adc
fiaddl
lods
mov
lock
add
jecxz
adc
or
xlat
and
nop
jno
and
add
sbb
popl
or
je
jmp
cmp
add
jns
aad
fistpl
add
movsl
mov
fs
out
add
add
loop
ja
add
sbb
mov
scas
jg
mov
mov
add
sbb
adc
push
les
test
arpl
lcall
jmp
ja
sbb
ds
add
dec
or
add
dec
fs
sbb
shrl
or
fadds
movsb
shlb
sbb
add
sub
mov
imul
ss
js
movb
xor
imul
test
push
mov
lds
dec
mov
mov
in
xchg
sub
push
std
stos
mov
pop
sbb
pushf
and
add
xor
mov
push
add
mov
add
jl
sub
je
arpl
shrl
jl
addb
rolb
mov
sbb
and
jecxz
dec
movsb
mov
mov
fbstp
and
je
lock
shl
pusha
aam
mov
fadd
aam
in
cs
pop
test
cmp
lcall
imul
jg
or
jmp
ret
sub
adc
mov
enter
loop
sbb
adc
xor
pusha
mov
and
movsb
push
xor
cmc
cmp
jns
mov
imul
fs
test
lret
cmp
and
fstps
enter
insb
pop
subl
flds
bnd
and
enter
or
shrb
je
lcall
orb
shrl
popa
aad
inc
lods
sub
mov
adc
in
enter
xor
add
or
cmp
mov
push
add
call
and
jbe
dec
icebp
mov
testl
into
shrl
inc
add
int
jl
mov
and
inc
enter
adc
sub
es
pop
add
cmpsb
cwtl
rcrl
or
loop
test
jo
push
loopne
or
addr16
add
push
xchg
lock
div
hlt
icebp
push
jge
inc
mov
js
mov
dec
inc
sbb
adc
and
xor
and
imul
sbb
pop
daa
xchg
jno
dec
clc
add
xlat
jge
int3
sub
nop
lea
cmpb
adc
pop
dec
push
pop
and
jbe
jb
clc
xchg
or
in
lahf
push
push
dec
push
push
ret
sbb
cltd
nop
sub
dec
nop
clc
push
xchg
lods
add
insl
movsl
adc
add
nop
stos
fcompl
hlt
push
mov
cmpsl
xchg
sub
dec
scas
or
xchg
fmull
cmp
outsl
add
jns
sti
cltd
out
adc
jb
jge
xchg
jmp
loope
aas
cmc
add
mov
mov
lret
mov
xchg
inc
bnd
pop
sbb
adc
imul
cmp
adc
and
lcall
cmp
cmpb
and
dec
sbb
adc
dec
aad
lret
mov
ret
pop
mov
imul
sbb
sbb
roll
sbb
nop
mov
dec
cmpsl
or
cmpsb
mov
push
push
xchg
jecxz
xor
faddl
fmulp
pop
insl
sub
lahf
les
scas
xchg
xchg
adc
add
push
adc
mov
mov
and
sub
fabs
add
or
and
adc
sub
cmpsb
cld
test
inc
sub
and
add
into
mov
inc
enter
xchg
add
jnp
mov
mov
fstl
test
loope
test
push
fcomi
sbb
mov
imul
pop
jb
daa
mov
add
jo
or
lahf
add
and
xor
mov
insb
sbb
inc
cmp
sbb
add
adc
dec
mov
or
mov
rcrl
or
add
imull
insb
push
out
loopne
fs
mov
cltd
inc
mov
std
xor
jmp
add
mov
lds
test
or
daa
sbb
ret
in
add
mov
jecxz
xchg
repz
fstps
xor
in
add
ds
inc
and
fists
lock
add
ljmp
mov
sti
rcr
xor
cltd
inc
or
andl
outsl
sti
bound
aaa
jl
sbb
aad
loope
push
adc
cmp
xor
imul
sub
neg
data16
in
xor
jo
xor
xchg
test
cltd
mov
or
fsubrl
sbb
imul
or
sahf
and
shrl
push
add
jg
sahf
add
dec
cs
mov
shrl
mov
xor
stos
mov
jecxz
xor
xorb
arpl
iret
fmull
dec
arpl
xchg
dec
xchg
enter
cwtl
xchg
int
movsl
cs
push
mov
popl
scas
add
cmc
lcall
xchg
loope
jbe
or
add
inc
movsl
push
adc
call
mov
cmp
rorl
push
mov
je
add
dec
push
in
add
inc
pop
js
adc
inc
bound
into
lret
cltd
add
icebp
jns
jb
mov
dec
mov
pop
ds
imul
or
jo
orl
stos
push
jge
add
out
clc
adcb
movsb
repz
sub
mov
inc
mov
fidivrl
pop
lahf
mov
movsb
int3
cmp
push
subb
pop
sub
jle
and
test
jp
add
mov
outsl
cmp
push
jbe
les
push
lock
mov
add
jmp
loopne
ja
sbb
add
mov
mov
jo
xchg
scas
jg
add
outsb
xchg
adc
xchg
jae
xchg
in
fcomi
inc
fwait
pop
jne
arpl
mov
into
mov
add
xor
push
leave
ds
adc
out
test
pop
rcr
addb
or
filds
pop
jno
cmp
adc
adc
es
mov
or
sbb
sbb
add
movsb
cmp
ret
add
scas
popw
sub
in
lods
mul
add
sub
jae
mov
add
js
add
pop
adc
dec
insb
xor
enter
and
out
popa
test
jge
add
cmp
sub
aam
out
pop
cmp
ret
outsb
jae
push
adc
es
push
clc
pop
fistpll
jne
or
clc
fldl
push
dec
ror
bound
addb
pop
and
jge
js
add
in
xor
lds
insb
outsb
mov
pushf
aad
add
push
or
iret
inc
scas
test
sbb
dec
stos
or
add
call
dec
js
sbb
or
cmpsb
dec
cwtl
and
xor
adc
xchg
pop
lahf
sub
leave
sbb
add
and
add
cmpsb
add
xchg
add
fmul
lret
pop
jno
add
sub
lea
jg
dec
add
pusha
subl
jle
mov
push
cmp
loope
daa
or
push
mov
xchg
add
adc
push
sbb
xchg
adc
mov
jb
addr16
nop
add
movsb
add
push
and
bound
cmpsb
adc
test
mov
loop
imul
daa
jae
dec
add
in
xor
add
mov
jg
jecxz
push
loopne
js
pusha
and
mov
outsb
jge
or
cmp
add
xchg
push
in
or
pop
mov
shlb
cmp
sbb
outsl
popa
adc
xor
pop
push
cmpsl
ss
add
cmp
add
notb
jne
hlt
add
mov
hlt
mov
pop
enter
add
fsubr
xchg
sbb
clc
add
lea
inc
pop
add
sbb
mov
je
dec
fldcw
movsb
pop
fadds
jno,pn
sub
mov
call
mov
popa
jne
repnz
push
xchg
and
inc
pusha
mov
repz
push
jo
inc
imul
add
xlat
lcall
push
rclb
fldl
pop
daa
jmp
les
or
mov
adc
test
decb
shlb
push
jae
mov
arpl
adc
in
movsb
add
cmpsb
xor
inc
cmp
aad
cwtl
mov
fs
pop
outsb
enter
add
fdivs
popf
fldl
jb
push
add
xchg
add
sub
lret
cs
mov
cwtl
add
dec
pop
and
mov
push
insb
xchg
adc
sbb
push
add
or
repnz
leave
ljmp
xchg
adc
or
imul
nop
and
mov
jo
xchg
inc
cmpb
test
add
and
mov
insb
in
lret
or
push
jge
jmp
decb
in
sub
push
and
cld
cmp
ror
in
jmp
xchg
inc
iret
or
sub
scas
cli
pop
add
ss
cmp
mul
cltd
mov
fadds
jg
hlt
pop
nop
sbbb
add
movsl
mov
test
push
push
sbb
rorb
or
les
push
test
mov
inc
add
sub
in
or
mov
xchg
aas
add
loop
mov
enter
push
add
insb
cs
aad
loopne
jg
add
lds
sbb
and
cmpsl
inc
dec
das
rolb
cwtl
mov
inc
imul
rcl
mov
or
fsubrl
mov
lds
shl
cld
push
into
fs
xchg
and
or
cmpb
rcll
cmp
sub
xchg
add
outsl
inc
mov
leave
lods
rolb
cld
mov
pop
sub
add
mov
mov
lret
pop
das
mov
pop
add
stos
fs
loop
adc
push
push
add
dec
mov
imul
dec
sub
cmpsl
xor
adc
ja
mov
cmp
add
in
or
dec
fistpll
add
ds
loope
mov
jae
xchg
arpl
add
fwait
mov
sbb
jecxz
lcall
add
and
add
sub
sbb
aaa
mov
sbb
pop
jo
popf
stos
call
test
cmp
mov
cmp
adc
xor
adc
cwtl
sub
adc
mov
dec
lods
inc
int3
inc
add
cmp
arpl
insb
add
repz
divl
scas
sbb
jae
push
cmp
cmp
jbe
icebp
xor
mov
in
add
cld
lods
adc
shll
iret
add
popf
fidivrs
leave
xor
dec
aad
cld
jp
les
fdivr
ficompl
inc
mov
inc
fstps
xor
insb
push
mulb
cwtl
loopne
shll
mov
scas
enter
lds
cli
shlb
shrd
adc
xchg
jmp
stc
iret
rorb
dec
mov
clc
add
bound
xor
add
add
int
mov
sti
arpl
add
addb
dec
add
mov
jb
test
mov
bndldx
mov
orb
movsb
aas
pop
jns
nop
inc
aas
inc
scas
sbbl
jbe
cs
iret
enter
int
mov
sbb
sbb
mov
sub
add
xchg
lods
xchg
out
jp
add
gs
inc
ds
sbb
add
add
xchg
mov
test
push
negb
or
jo
mov
push
add
push
or
bound
push
mov
dec
mov
xchg
popa
cmp
outsl
js
dec
shrb
bound
push
iret
and
lods
xor
jb
or
or
inc
subb
stos
outsl
cmp
jle
mov
mov
push
pop
rcrb
mov
and
or
scas
test
add
cli
ss
add
std
inc
mov
aam
pusha
cld
mov
pusha
cmp
xor
pop
dec
xor
xchg
mov
lret
add
jns
nop
inc
adc
lods
dec
fmuls
push
jnp
ds
pop
cmp
ret
movsl
push
xor
push
add
out
out
and
shr
add
iret
lea
cltd
pop
mov
add
inc
js
insl
fisubs
and
sbb
mov
jge
jecxz
xor
mov
or
jmp
cmp
repnz
inc
leave
add
or
ja
mov
add
mull
adc
push
pop
loopne
mov
mov
jbe
add
pop
jle
xor
mov
subl
loopne
in
add
loopne
xor
iretw
add
xchg
fcoml
sbb
inc
push
daa
imul
sbb
repz
xchg
push
inc
scas
lret
mov
add
mov
jg
add
jle
test
gs
ja
pop
dec
lret
xchg
aas
pop
add
sbb
into
insl
outsb
adc
inc
cmp
cmpl
push
mov
shrl
ret
mov
mov
cmpsl
sub
xor
sbb
prefetchnta
jecxz
pop
outsb
mov
pop
mov
mov
nop
js
dec
rcr
xchg
insb
adc
inc
cs
pusha
rorb
mov
add
lret
lea
mov
in
dec
push
and
push
cmp
sub
cltd
es
add
outsb
jg
mov
in
push
adc
pop
stos
movsb
add
xor
or
dec
pop
pop
sbb
xchg
mov
mov
nop
mov
xor
push
punpcklbw
push
in
addl
loope
ljmp
dec
adc
hlt
add
inc
fsin
xor
inc
xor
loopne
test
adc
incb
or
push
fnstcw
inc
xchg
mov
push
jmp
pop
in
xchg
dec
mov
bound
add
and
hlt
outsb
test
in
cmp
cli
imul
and
push
lret
inc
or
adc
xor
in
push
add
or
int
jl
inc
mov
mov
sarl
mov
xchg
insb
xor
jns
ja
xchg
sub
fsubl
arpl
lock
mov
push
or
dec
jbe
sbb
inc
dec
ret
rolb
cmp
in
leave
adc
and
scas
fcmovnbe
jbe
pop
mov
in
push
mov
add
and
clc
in
push
ljmp
pop
inc
fdivrl
ficoml
iret
inc
ret
sbb
mov
xor
cmpb
fwait
cld
lds
add
sub
cltd
cwtl
das
inc
push
nop
adc
mov
ja
jne
add
mov
add
fsubrs
lock
mov
in
push
xchg
stc
adc
cmpsl
hlt
filds
jp
jns
or
and
pop
cmp
imul
sub
and
stc
fwait
in
movsb
sbbb
inc
sbb
movsb
adc
sbb
pop
add
xchg
push
lods
repnz
mov
push
mov
dec
sub
cli
cs
and
xchg
dec
dec
add
jle
cmp
lcall
mov
cs
adc
cmp
pop
or
cmp
adc
repz
negb
jmp
inc
jge
out
shlb
subb
cmp
das
sbbb
or
in
mov
loopne
push
pop
icebp
popf
push
and
cmp
pop
inc
adc
mov
pop
fstl
jecxz
inc
pop
and
add
fbld
neg
push
adc
pusha
stc
jp
je
sbb
pushf
jge
adc
dec
add
gs
test
lret
jae
clc
cmp
push
xor
cmp
pop
int3
sub
and
add
aad
mov
sbb
add
insl
mov
dec
cli
out
add
jle
imul
mov
sub
cmc
xchg
adc
inc
jecxz
mov
vmovaps
cmp
sbb
sub
sub
or
loopne
shlb
adc
pushf
repnz
ljmp
push
clc
xchg
xchg
pusha
pop
or
pop
in
mov
pop
mov
xchg
add
jnp
imul
sbb
jns
or
sbb
pusha
aas
jns
test
lret
je
rclb
jg
adc
les
pop
insb
add
push
xor
stc
lds
pop
aam
xor
arpl
scas
inc
mov
xchg
int
rolb
loope
push
cli
inc
pop
pusha
leave
dec
andl
adc
add
adc
sbb
out
mov
insl
sbb
and
xchg
imul
push
mov
cmp
mov
aaa
mov
push
test
pop
cmp
int3
jbe
xor
and
mov
clc
mov
dec
imul
push
ret
cmp
jbe
xor
add
xor
fnstcw
push
dec
add
jno
leave
adc
push
adc
arpl
jns
mov
data16
lret
push
fsubl
aam
push
fwait
add
push
repz
sbb
loop
sti
add
in
mov
xor
cmp
add
stc
repz
sarb
fstps
push
jae
loopne
xchg
fsubs
add
mov
loopne
pusha
mov
xor
push
arpl
xchg
cmp
aaa
decb
fs
dec
stc
mov
add
call
dec
sti
test
sbb
add
loop
addl
mov
cmp
cmpsl
xor
in
clc
sub
lods
add
repz
imul
push
push
pop
rorb
repz
shll
fcmovnbe
and
into
sbb
movsb
mov
add
sti
inc
xor
popf
add
rcrl
mov
insl
das
sti
clc
jae
and
xchg
sbbl
mov
fcmovb
push
mov
data16
sbb
lret
in
adc
sbb
test
aaa
js
rolb
add
mov
ret
mov
nop
and
hlt
jp
mov
mov
ret
sub
rolb
push
cmp
aam
rclb
push
pop
cwtl
add
les
pusha
pushf
jnp
loopne
and
push
xchg
lods
add
notb
lea
or
inc
out
or
popf
aam
das
rcll
cld
mov
addb
sub
mov
movsl
dec
repz
xchg
add
add
push
lods
out
loop
adc
shrb
ret
shlb
add
js
xchg
in
inc
test
imul
inc
repnz
outsb
ljmp
cs
mov
push
mov
pushf
int
enter
jge
filds
push
add
into
xchg
adc
mov
pop
lock
cmpsb
adc
loop
dec
pop
adc
shlb
push
adc
inc
jecxz
iret
xchg
mov
js
in
cmp
nop
sub
fildl
es
ret
inc
lds
not
cmp
or
xchg
mov
loopne
ret
push
cmp
and
adc
inc
jg
jl
mov
lods
inc
andb
cmp
in
cmpsl
iret
add
cmp
out
mov
sub
mov
cmp
or
mov
aad
lock
mov
dec
mov
add
xor
mov
jbe
loopne
iret
mov
push
jge
ljmp
pop
xchg
mov
add
leave
js
daa
jmp
mov
xor
loope
and
push
xchg
sbb
xchg
sahf
imul
rorl
pop
in
cmp
sbb
mov
add
jne
cltd
in
and
pop
sbb
sbb
push
int3
cmp
nop
xor
lods
jl
and
and
fsubl
sbb
inc
jecxz
dec
push
dec
push
out
add
inc
dec
clc
mov
mov
lret
push
xchg
decb
sbb
dec
pusha
mov
sbb
xlat
jno
sbb
jns
test
xchg
jge
repnz
out
jle
adc
add
jl
ss
imul
mov
xchg
sarb
cmp
andb
mov
dec
jl
inc
mov
rcrb
loopne
pop
cmpsb
loopne
in
movsb
loopne
addb
jb
jmp
call
addr16
adc
adc
iret
add
icebp
mov
test
jp
in
add
mov
cmc
push
lock
push
clc
dec
and
dec
pop
push
xor
dec
and
xor
pop
add
mov
cwtl
or
dec
adcb
sti
inc
mov
cwtl
add
cs
ds
add
imul
add
fmuls
jp
mov
dec
jns
fisubs
xor
add
inc
addr16
outsl
clc
lock
or
or
cmp
push
sbbb
loop
ror
adc
mov
mov
add
cltd
stc
adc
pop
mov
or
fiadds
or
aam
cmp
les
jns
add
mov
mov
stos
test
shlb
mov
jp
sbbb
mov
mov
xchg
pop
or
adc
mov
cli
xchg
dec
hlt
aam
enter
pushf
inc
adc
xchg
push
sub
mov
inc
movsb
rcll
push
wrmsr
or
jmp
out
cli
sbb
insl
jb
mov
add
cld
ret
cltd
lods
mov
dec
sub
or
jp
add
js
ret
xor
daa
jp
and
dec
cwtl
jbe
push
inc
lret
or
or
push
cmp
cmp
lea
and
ja
add
mov
add
push
icebp
add
lret
cmp
pop
dec
add
sbb
dec
adc
loopne
mov
shl
xchg
add
sub
int3
sub
mov
hlt
xchg
or
repnz
xor
addb
add
and
xchg
into
repz
add
popa
dec
enter
testb
sub
lds
int3
add
or
test
ds
bound
push
sub
jp
test
in
mov
pop
lea
ret
stos
and
jle
sbb
xor
xor
loope
shrb
adc
dec
iret
add
mov
aam
fucomip
mov
ud1
mov
sub
out
scas
adc
pusha
inc
mov
icebp
test
pop
or
clc
ret
mov
es
test
incb
xchg
push
pop
fisttps
xlat
in
repnz
andl
in
ljmp
cmp
test
mov
mov
jo
xchg
push
int3
call
incl
or
sbb
subb
xchg
aaa
push
pop
adc
sub
add
ds
or
aaa
gs
add
js
inc
jl
not
add
and
add
jae
hlt
pop
ljmp
mov
inc
sub
shrb
xchg
out
pop
dec
daa
lret
xlat
add
fdivr
lods
add
push
testb
push
and
add
loopne
and
mov
xchg
mov
divb
mov
stos
dec
push
stos
push
dec
hlt
and
mov
or
sub
add
jb
and
loopne
repnz
js
xchg
add
push
sbb
jecxz
lret
out
cmp
sbbb
xor
test
mov
cmp
cmpb
and
add
movsb
mov
cmc
mov
push
lock
subb
add
movsb
push
xchg
outsl
push
push
xor
cmpb
sbb
call
rcr
cltd
lods
adc
mov
nop
cmc
jbe
and
testb
sub
insl
out
call
pop
sub
xchg
mov
nop
ljmp
add
pop
dec
enter
pop
nop
sbb
xor
out
orl
in
mov
into
add
or
mov
push
xchg
cwtl
add
pop
jmp
lods
cld
add
mov
sarb
nop
or
or
jmp
call
pop
fwait
pshufw
push
lods
loopne
jle
imul
xchg
in
iret
dec
inc
mov
push
push
insb
int3
mov
and
dec
orl
aad
push
mov
mov
xor
add
mov
xchg
mov
aas
pop
inc
rolb
nop
in
out
jns
add
xlat
lahf
leave
out
movsl
out
inc
push
jo
lock
mov
int
out
xor
and
cs
add
jge
mov
cmc
dec
xor
lods
mov
js
adc
jo
jecxz
fwait
jb
mov
into
add
sar
cmp
add
push
push
push
flds
pop
sbb
pop
add
shrl
shld
mov
push
push
mov
sarb
loopne
fwait
push
add
movb
daa
lcall
popf
sub
nop
out
push
es
aas
divl
inc
jl
dec
jge
inc
pushf
mov
add
push
out
dec
nop
in
loop
outsl
mov
push
inc
sub
mov
push
int3
int
or
pusha
add
rclb
push
mov
xchg
cmp
repz
fadds
mov
lahf
mov
xor
pop
cltd
xor
mov
or
inc
xchg
add
mov
ja
adc
mov
fs
inc
pop
mov
ret
sub
sarb
inc
mov
jo
jbe
loopne
xchg
add
jo
mov
mulb
xor
out
pop
add
dec
gs
lods
add
out
icebp
sbb
add
rcr
ljmp
cs
push
add
dec
xor
pop
nop
adc
xor
adc
popf
fsubl
movsb
bound
dec
movsb
push
and
push
leave
sub
icebp
add
mov
cwtl
pop
inc
fnsave
xor
bound
or
movsb
es
xchg
cmp
inc
stos
stos
xchg
outsb
adc
xchg
les
sbb
jge
nop
pop
adc
jns
adc
mov
enter
xorb
adc
stos
fidivrs
cld
or
mov
mov
or
push
jbe
adc
mov
add
out
jae
jmp
mov
mov
inc
pusha
jb
in
movsb
je
sbb
inc
push
cmc
call
test
sbb
mov
bound
mov
lret
enter
popf
dec
cmpsl
movsl
aam
push
or
loop
clc
add
mov
push
mov
add
add
fists
mov
into
mov
cmpsl
sti
or
lcall
mulb
cmc
inc
cmp
jno
inc
dec
movsb
pop
mov
jg
faddl
mov
xor
add
cli
aad
push
decl
dec
xchg
cmp
ljmp
mov
mov
lds
lock
leave
clc
hlt
dec
test
rcrl
rorb
xor
out
sbb
add
aaa
cwtl
imul
cmp
cmp
xchg
mov
adc
notl
xchg
popa
xor
rcrb
sub
or
push
jecxz
adc
sbb
push
es
pop
mov
sub
xlat
xchg
add
test
pop
push
int3
in
lsl
repz
and
imul
push
mov
xlat
data16
insb
jo
add
jle
add
addr16
jnp
fadd
sub
push
mov
dec
inc
pushf
fistpl
adc
pop
push
xchg
dec
cmpsb
mov
add
lret
repnz
in
xor
aaa
or
and
into
cltd
movl
cmpsl
lods
cmp
add
sbb
cld
scas
addb
fsubrl
loope
das
aaa
push
leave
sub
mov
dec
add
lcall
lock
ret
rorb
xor
jecxz
outsb
imul
sbb
addr16
adc
fs
je
adcl
jp
adc
iret
dec
sbb
cmp
add
dec
and
inc
adc
sbb
sti
and
andb
mov
popf
sbb
stos
insl
cmpsb
add
and
test
in
imul
into
mov
repz
testb
fcomps
add
mov
xchg
jge
and
cmp
jbe
add
loopne
jg
in
push
mov
jp
ds
dec
imul
aas
dec
cwtl
sarl
inc
add
lea
mov
xchg
push
sarb
loopne
add
call
xchg
and
shll
imul
pop
jne
or
mov
lds
lret
faddl
pop
push
mov
imul
sbb
scas
xchg
mov
shlb
jl
jp
xor
mov
cmp
pop
loope
nop
or
or
movsb
ja
outsl
test
mov
call
nop
add
xor
xchg
daa
fcompl
adc
lods
mov
add
aam
dec
add
jno
mov
test
jmp
call
insb
fpatan
daa
push
inc
adc
lock
xor
mov
mov
sarl
in
mov
xor
test
xchg
ljmp
jae
mov
stc
pushf
cmp
lea
add
std
push
sub
pop
cmp
daa
mov
ret
cmp
dec
mov
mov
test
subb
xchg
inc
xchg
xor
cmp
lock
shrb
add
lods
int
or
add
scas
test
sbb
pop
mov
mov
mov
sbbb
imul
cmp
int
fldl
dec
lods
data16
push
arpl
add
push
cwtl
xchg
or
sbb
popf
mov
cmpsl
push
sub
dec
mov
push
mov
nop
pop
cmp
sub
jmp
aas
add
xchg
mov
and
adc
push
and
add
xchg
ss
jno
or
add
inc
scas
cmpsl
sarl
cmp
ljmp
scas
pop
xchg
or
sbb
hlt
imul
add
and
pop
add
cmp
movl
mov
mov
rolb
or
inc
test
xlat
xor
enter
push
rcrb
and
add
mov
testl
mov
adc
js
sub
mov
cmp
xchg
jo
push
shl
je
out
sub
mov
lret
lock
add
stos
xchg
loopne
jp
jmp
xchg
mov
mov
std
in
cmp
lock
int3
iret
rcr
scas
jg
ds
or
js
jns
fisttpll
movsb
push
mov
jecxz
jg
sti
push
add
dec
repz
pusha
sub
add
mov
orb
pop
cmpsb
incl
add
jp
pop
mov
ret
mov
jns
sbb
andb
push
inc
cmp
sbb
test
push
add
cmp
xchg
shlb
inc
add
pop
sub
cmpl
jbe
push
scas
mov
insl
dec
jp
push
dec
push
mov
jne
xchg
xchg
enter
xlat
lods
xchg
mov
leave
out
adc
add
sbb
inc
mov
xchg
les
cmpsl
popf
push
inc
adc
lcall
aad
xor
test
push
xchg
sbb
loop
testb
mov
mov
inc
jmp
outsb
adc
pop
add
pop
mov
lods
adc
and
add
aas
push
lods
add
pusha
mov
fidivs
mov
rorb
mov
mov
jecxz
add
into
aaa
pusha
and
mov
fimuls
aas
loopne
pushf
push
imul
mov
add
lds
jb
push
pop
dec
bound
inc
lret
incb
test
push
out
pop
jp
pusha
mov
pop
mov
scas
cmc
cmp
and
js
push
dec
daa
in
add
data16
sub
and
lcall
daa
xchg
inc
cmp
pusha
repz
pop
pop
addl
mov
xor
inc
pop
lret
sbb
into
int
mov
bound
push
cmp
cmp
add
inc
notl
aam
movsb
xchg
cmp
and
and
div
inc
aad
out
sbb
outsb
insb
and
shlb
sub
cli
or
lret
in
pusha
scas
jmp
mov
sbbb
add
jns
shl
xchg
out
jbe
adc
mov
or
insl
rclb
jo
mov
pusha
jbe
xor
and
and
shlb
add
sub
jne
add
insb
add
jecxz
xchg
jg
hlt
movl
shlb
and
cmp
jecxz
xor
pop
mov
pusha
xor
and
dec
sbb
andb
fidivrl
sub
adc
fistpll
test
addl
sub
add
sub
adc
inc
adc
push
inc
insl
sahf
add
aam
nop
test
pusha
inc
cltd
cmpsl
inc
mov
scas
mov
jecxz
mov
jno
mov
lret
aad
dec
rcrb
cli
scas
ret
jl
pusha
loope
iret
mov
rol
ja
mov
movsb
add
adc
cmp
lods
in
mov
fisubl
int3
add
xchg
icebp
pop
insb
inc
fadd
cmp
movlps
inc
gs
mov
scas
add
cmpsb
inc
aam
mov
lea
je
lock
jle
andl
int
dec
xlat
fwait
add
pop
push
add
sahf
and
inc
add
dec
mov
cmovle
push
or
mov
pop
add
icebp
int3
frstor
int
ss
sub
movsb
mov
and
out
push
adc
or
ficomps
arpl
add
clc
ret
push
xchg
and
mov
or
dec
xchg
or
dec
sub
sbbb
jp
out
pop
call
pop
adc
in
rclb
adc
ss
in
dec
add
mov
mov
inc
dec
insb
xor
test
adc
sbb
lock
jmp
push
dec
add
stos
int3
and
cmp
xchg
cmpsb
mov
pusha
dec
rorl
sub
pop
fidivrl
add
xor
pusha
sbb
xor
inc
outsb
test
ror
enter
adc
jo
nop
int3
out
xor
loopne
sbb
cwtl
in
jle
mov
shll
push
fs
jo
sbb
sahf
xchg
lahf
add
sub
mov
loopne
adc
pushf
ss
loope
insb
pop
loop
jmp
xlat
testb
inc
and
cmpl
jo
mov
test
cmp
mov
or
pop
sbb
jg
out
invlpg
ljmp
pop
shrb
mov
or
lret
mov
pop
inc
mov
rcl
ret
jno
cmp
mov
divl
jl
xor
or
aam
and
push
mov
or
jmp
mov
dec
aad
mov
es
inc
or
mov
mov
daa
out
pop
jmp
insl
sbb
outsl
add
xchg
es
imul
xor
lds
add
add
sti
lea
call
add
push
int3
rcl
es
aaa
add
not
pushf
pop
insl
fcoml
int
sub
hlt
adc
addb
lock
add
pusha
push
mov
popa
push
pop
add
pop
xor
ds
jle
roll
jl
pop
and
xchg
push
rcll
int3
cmp
ja
andl
push
cmp
adc
loopne
daa
push
or
nop
mov
iret
xor
int
clc
xorl
push
fnstcw
dec
sub
jle
mov
ljmp
pop
lock
popa
inc
movsb
enter
jecxz
add
mov
pop
cmc
and
sub
pushf
or
lahf
mov
mov
rcl
xor
jo
sub
xchg
in
push
push
sbb
ja
mov
mov
loopne
sbb
lahf
pop
ror
mov
imul
push
add
stos
loopne
mov
jo
clc
add
adc
les
andl
sub
dec
xchg
cmp
mov
mov
int3
lret
gs
jg
dec
roll
lahf
inc
scas
fbld
mov
jne
mov
in
xchg
dec
add
cmp
dec
jns
cmp
fsubs
dec
int
adc
icebp
pop
xor
adc
mov
sbb
xchg
out
push
adc
rol
ss
mov
lods
in
or
je
mov
mov
lods
gs
sbb
push
lcall
or
insl
xlat
xor
test
and
inc
pop
and
fimuls
cwtl
pop
dec
mov
adc
add
test
inc
inc
pusha
add
push
mov
icebp
push
jns
pop
push
fiadds
mov
ret
mov
jg
pop
mov
lods
repz
xchg
push
orb
insl
push
or
mov
lcall
add
adc
add
shl
cmp
aam
lret
out
xor
jl,pt
sub
cmp
pusha
mov
flds
test
mov
popf
in
pop
push
daa
mov
push
cli
leave
add
roll
push
pop
sub
adc
mov
xchg
cmp
mov
lea
lret
push
scas
xor
pop
daa
push
push
cmp
add
loope
mov
add
sbb
in
loopne
adc
shll
mov
mov
cmp
jge
out
or
dec
cmp
jmp
adc
inc
imul
ret
mov
xlat
mov
ljmp
scas
inc
push
lock
pop
sub
sbb
movsb
sub
mov
jns
or
dec
mov
xlat
lea
rcr
out
add
cs
cwtl
lcall
out
shll
add
adc
xor
push
mov
and
add
add
cmpsb
cmp
add
hlt
notl
or
cmpsl
loopne
movsb
icebp
popa
stos
test
imul
stc
cmp
enter
dec
fistpl
test
repnz
cmp
nop
pusha
out
jo
add
fadds
jp
sbb
xchg
push
iret
jbe
add
jle
jo
and
or
pop
push
pop
sbb
or
dec
add
lock
dec
es
sahf
xorb
adc
xchg
stos
ljmp
subl
sub
sub
in
push
xchg
add
subl
mov
aam
sub
dec
imul
das
clc
xchg
test
jmp
mov
jp
mov
pop
ja
mov
stc
push
jmp
or
lods
loopne
cmp
add
test
push
jns
xchg
dec
nop
pop
add
nop
pop
icebp
gs
movups
lock
rolb
sub
mov
call
je
aad
lods
xchg
or
pop
pusha
fadds
cmp
es
push
xchg
sbb
cwtl
test
mov
push
pop
add
push
adc
call
mov
add
aam
mov
xchg
add
and
add
add
push
cmp
jmp
addb
rcrb
pop
mov
lods
clc
ret
xchg
cmp
jle
sub
add
je
xor
fisubl
in
add
int
push
sbbb
popf
mov
mov
pop
jo
insb
and
push
scas
repz
call
push
pop
rcl
out
repz
xchg
clc
sub
cmp
fwait
and
sub
not
test
jmp
xchg
jp,pn
mov
iret
subb
icebp
dec
loopne
test
or
pop
jae
clc
icebp
out
jl
mov
mov
sbb
sbbb
ret
addb
clc
mov
add
xor
out
int
int3
dec
frstor
push
mov
fld
data16
mov
lcall
cmpsb
lea
shlb
jl
mov
cmp
mov
inc
add
inc
inc
std
push
mov
add
jno
mov
repnz
add
arpl
lods
repnz
inc
movsb
iret
lea
loopne
inc
test
lret
dec
js
in
xchg
or
pop
inc
cltd
sub
xor
repz
add
or
and
push
shlb
pop
add
test
and
imul
xor
push
add
repnz
hlt
add
jbe
xchg
mov
add
outsb
jnp
test
test
adc
add
push
xchg
les
adc
inc
in
fisttpl
repnz
jg
xor
push
sbb
into
adcb
xlat
push
loopne
fsubrl
andb
movsb
mov
inc
sbb
pop
pop
cmp
shrl
into
outsl
pop
rolb
lods
loope
cmpsb
mov
fstl
pop
insb
dec
pushf
inc
cmp
xchg
je
push
sbb
addr16
or
mov
sbb
aaa
pop
incl
dec
aad
or
add
movsl
mov
test
icebp
icebp
pop
lock
pop
adc
mov
test
add
shlb
inc
outsb
addb
aad
sub
or
or
popf
les
mov
aaa
das
cwtl
add
nop
pop
or
sahf
adc
enter
rcrl
pusha
inc
je
mov
cld
loopne
adc
test
in
push
mov
lock
add
lcall
loop
dec
mov
jg
outsb
inc
orl
adcl
pop
mov
aam
sub
in
jge
add
xchg
call
add
adcl
scas
pusha
push
roll
xchg
push
sbb
cmp
xor
xchg
sbb
push
cltd
nop
setbe
add
push
mov
add
fstl
enter
adc
js
or
je
rolb
cmp
mov
repnz
cmp
shrl
clc
faddl
xlat
sbb
jns
flds
rorl
cltd
fiaddl
xchg
adcb
mov
jmp
jb
sbb
repz
inc
gs
mov
ds
repnz
loopne
enter
nop
or
dec
add
notl
nop
xchg
and
in
cwtl
movsb
stos
cltd
add
popf
out
pop
repnz
int
ja
adc
dec
or
addr16
in
push
mov
mov
neg
not
inc
cli
push
das
andb
jg
sti
je
test
int3
iret
loopne
into
add
mov
xlat
or
insb
ds
rorl
push
mov
add
repz
lock
adc
stc
jle
es
or
cmp
mov
add
aam
scas
repnz
loop
add
sub
xchg
mov
mov
or
or
aam
enter
mov
and
negb
mov
ficoms
and
add
jge
pusha
mov
inc
loopne
mov
mov
mov
xor
lods
idiv
cmp
add
gs
hlt
pop
jno
das
dec
sarl
faddl
and
add
stc
jo
iret
add
insl
std
scas
loope
or
sbb
add
mov
inc
xorb
mov
mov
pop
jb
lods
aaa
daa
or
je
in
lds
adc
jecxz
cmc
aam
dec
mov
loopne
fs
dec
and
mov
repz
shrb
or
or
int
mov
pop
lahf
cmp
fsubs
lret
adc
xor
gs
fnsave
ret
and
mov
das
jne
scas
xchg
cmpl
add
push
push
xlat
in
mov
addb
and
daa
pop
xchg
inc
jbe
inc
mov
mov
cmp
addb
dec
inc
sbb
push
aam
in
movsb
mov
add
mov
dec
xor
inc
xor
add
and
ret
or
mov
add
push
or
rcl
frstor
adc
stc
add
cs
xchg
adc
daa
gs
arpl
scas
push
cmp
mov
add
rolb
nop
push
dec
cmp
xor
add
in
cmc
jl
inc
fcmovnb
cmpsb
mov
add
daa
jp
add
hlt
mov
fdivrl
xlat
add
and
scas
call
js
pop
enter
ja
cmp
lods
clc
dec
pop
dec
js
loope
xor
faddl
movsb
xorb
add
xlat
repz
inc
je
mov
add
movsl
test
add
out
jbe
dec
cwtl
in
push
cmpsl
adcb
add
jle
leave
push
push
mov
stc
not
or
in
outsb
ret
jbe
and
or
icebp
pop
cwtl
loopne
lock
inc
jno
pusha
fsubrs
dec
icebp
add
aad
or
stc
sar
jnp
loope
jbe
xchg
dec
xchg
adc
je
dec
add
add
dec
add
push
lods
stc
push
loopne
in
sub
add
test
jecxz
icebp
nop
imul
cmp
pop
pushf
push
or
loope
cmp
ljmp
inc
mov
hlt
add
xchg
pop
inc
pop
je
pop
mov
xchg
inc
pop
add
xor
adcb
add
adc
inc
int3
nop
xchg
pop
and
inc
cltd
push
xchg
mov
nop
dec
stos
sub
hlt
adc
and
add
pop
loope
inc
lods
icebp
push
iret
or
xor
jmp
insl
into
popa
sti
mov
pop
xchg
in
add
cli
out
loope
roll
xchg
or
xor
sti
jae
aaa
cmp
cmpb
lock
fs
pop
push
mov
and
int
lds
add
insb
add
or
ja
rol
pop
enter
sahf
add
mov
add
roll
adc
adc
dec
mov
pop
add
lret
add
mov
inc
xchg
push
mov
dec
mov
mov
add
ja
lret
inc
push
or
cld
mov
jg
inc
add
popa
adc
xor
inc
push
mov
das
arpl
sahf
mov
test
adc
jg
movsl
xor
mov
xor
pop
push
mov
add
inc
and
jns
adc
sub
push
lods
sub
inc
in
ja
adc
mov
cmp
sarl
lret
or
les
popf
or
adc
loope
int3
rcrb
movsb
inc
test
mov
pop
dec
les
and
ja
fmull
and
movsb
and
icebp
js
pop
pop
pop
enter
jne
push
ret
mov
mov
sbb
pushf
pop
sub
lods
mov
mov
nop
ljmp
cs
fcompl
push
dec
mov
call
mov
xor
movsb
inc
xchg
fucomip
add
jle
fistpl
pop
inc
in
and
xlat
gs
jno
add
sub
mov
iret
push
loopne
inc
xchg
jns
add
hlt
cli
push
adc
mov
ret
icebp
loopne
add
mov
orb
repz
pop
and
mov
mov
cmp
push
loop
das
ljmp
int3
jmp
cmpsl
mov
jp
pop
loopne
jmp
scas
push
sub
add
add
push
fsubrs
add
scas
cmpsb
popa
int3
testb
add
sub
cmpb
leave
inc
fcoml
add
unpcklps
jmp
rorl
sahf
inc
fs
pop
mov
fdivrl
and
movsb
nop
push
push
add
push
out
cmpsb
adc
stc
and
mov
inc
popa
repnz
and
sub
push
movsb
fbld
lret
je
push
movl
mov
pop
and
enter
add
mov
add
cmp
add
sbb
push
mov
adc
sub
mov
inc
mov
rolb
adc
add
scas
add
push
mov
popf
inc
adc
mov
add
mov
call
inc
aad
push
cs
push
add
stos
dec
addl
data16
shr
adc
rcll
add
aas
and
cmp
call
jnp
adc
jo
push
scas
mov
mov
jecxz
add
mov
xor
add
sub
jge
mov
add
push
push
cmp
xor
mov
add
xchg
in
jmp
data16
jbe
dec
mov
mov
lock
ror
dec
push
and
fildl
add
jp
icebp
popf
mov
xchg
enter
cmc
jl
mov
mov
mov
mov
and
roll
mov
rolb
dec
and
mov
cmpsb
add
aaa
fmul
or
or
cmp
fcoms
sbb
or
movsb
xchg
cmp
cld
subl
aad
nop
loopne
lock
mov
subl
dec
cmc
add
jbe
dec
pusha
push
pop
adc
cwtl
inc
out
andb
cltd
and
rcll
ffreep
dec
xor
dec
dec
jle
nop
pusha
enter
and
inc
jg
nop
mov
xchg
mov
fimull
and
add
add
jle
xchg
adc
jne
cwtl
inc
daa
test
xchg
cmp
mov
push
mov
movsb
das
movsl
add
adc
roll
xchg
push
lock
xchg
mov
add
fwait
pop
shlb
loopne
pop
fs
loope
imul
cmpsb
mov
addb
jge
popa
imul
ficomps
mov
add
mov
jne
in
aad
xchg
sar
ret
sub
out
enter
jo
insb
mov
and
mov
xchg
mov
daa
inc
jbe
dec
cmpsb
scas
jae
add
cltd
shl
jge
push
sub
adcb
subb
sub
inc
pusha
add
inc
push
std
mulb
loopne
sub
and
xchg
loopne
push
jae
aad
test
movsb
adc
sbbl
sub
aaa
or
mov
rorl
sbb
addb
add
imul
lahf
loopne
daa
sbb
add
test
and
dec
or
cmp
sub
test
mov
lea
fcomip
and
iret
cmp
sarb
cmp
mov
and
icebp
dec
scas
shr
push
cmpb
mov
add
xchg
xchg
jno
pop
mov
lahf
jl
pop
pop
dec
xor
outsb
add
jno
mov
insw
inc
pop
inc
dec
xlat
push
iret
xchg
mov
test
and
rolb
adc
xchg
dec
sub
push
add
mov
cmp
or
inc
inc
pop
nop
test
lret
rcll
lock
movsb
push
jo
pop
push
mov
xchg
push
loope
xor
mov
add
into
jbe
sti
pop
imul
test
aad
mov
into
sub
cmp
inc
test
sub
hlt
fmull
enter
or
sub
mov
dec
mov
and
cmp
adc
mov
mov
xchg
jb
addps
push
cwtl
ret
loop
adc
add
sbb
in
or
dec
sbb
sbb
andb
mov
mov
add
es
dec
sbb
imul
xchg
adc
cmp
movsl
test
int3
xchg
cmp
sti
dec
sbb
mov
ret
add
mov
add
adc
movsb
add
iret
xor
loopne
in
pop
pop
pop
roll
sub
jmp
push
mov
rcr
dec
add
sbb
test
sub
mov
movsl
test
mov
xlat
cli
cmp
xor
rclb
mov
dec
stos
adc
pusha
pop
adc
lods
mov
sbb
sahf
and
mov
sbb
lahf
inc
inc
inc
sub
adcb
gs
sbb
sbbb
cwtl
inc
add
loope
jg
mov
mov
inc
aaa
pusha
jl
sub
insb
add
push
std
xor
inc
daa
push
pop
sbb
dec
mov
xchg
out
and
repz
shl
mov
test
out
sbbb
in
push
xchg
push
cmc
xchg
pop
push
es
test
inc
mov
add
inc
jecxz
cmpsb
das
and
cli
ljmp
scas
test
inc
test
mov
add
push
movsb
aam
shll
cmc
push
pop
repnz
stos
mov
jle
pop
add
sbbl
mov
cmp
cmpb
jp
insb
fbstp
jl
push
or
xchg
cld
hlt
addr16
xor
inc
and
add
mov
cmp
loop
add
jl
push
bound
add
nop
stc
decb
push
imul
push
lahf
dec
cmc
aas
sbb
jmp
sbb
xlat
mov
int
push
push
das
shlb
lea
add
dec
inc
lahf
sarb
xor
cmp
xchg
jl,pt
sbbl
sub
push
add
cmp
adc
adcb
sub
ja
pop
hlt
jno
ret
popa
or
mov
or
jns
sbb
mov
xor
or
dec
popf
push
add
lods
dec
inc
pop
std
or
cmp
pop
pop
mov
add
dec
jns
or
jmp
movsb
pop
nop
test
mulb
leave
inc
in
daa
mov
pushf
sub
xchg
mov
inc
test
cld
or
cli
aaa
pop
sub
jo
lds
out
add
arpl
repnz
lea
cltd
xchg
sbb
repnz
lcall
enter
add
mov
or
cmp
xchg
imul
add
sbb
xor
fs
movsb
and
add
add
movsb
mov
jecxz
dec
fsts
js
pop
scas
sbb
rclb
rep
out
mov
orb
pop
add
cmp
sub
lret
dec
aaa
daa
hlt
data16
jg
clc
sbb
out
adc
sub
flds
add
inc
pop
add
xor
out
fildll
add
inc
aam
loop
inc
pop
push
pop
cmp
in
mov
rcrb
and
xor
into
xor
cld
cld
inc
out
fdivr
mov
pop
aas
push
sub
insl
mov
imul
mov
sub
push
cmp
cmp
inc
insl
sub
push
mov
test
push
aaa
inc
inc
fcom
xchg
push
lods
cmp
dec
fs
adc
pop
repz
and
pop
lea
and
mov
cmovo
scas
pop
mov
and
imul
sub
cld
mov
test
adc
sub
lods
aad
jle
pusha
clc
add
nop
add
movsl
add
pop
leave
shlb
outsb
add
daa
outsl
mov
xor
or
push
leave
in
ret
xchg
mov
jno,pn
add
les
push
loopne
out
adc
popl
daa
mov
lods
add
mov
xchg
dec
loopne
test
scas
enter
hlt
leave
das
pop
int3
add
les
mov
andl
ds
mov
pop
push
pop
xchg
test
jbe
add
sbb
cltd
push
add
cmp
add
and
jecxz
add
sbb
mov
pop
cmp
or
inc
push
add
mov
and
fisubs
mov
cmp
add
xor
jmp
enter
nop
lods
and
in
cli
scas
pusha
and
test
add
clc
mov
rcl
outsb
push
mov
inc
mov
outsb
xchg
dec
int
pop
or
adc
mov
xchg
out
and
and
mov
fdivrs
push
dec
pop
xor
sbb
das
repz
mov
dec
xlat
in
movsb
jo
pop
icebp
enter
inc
addb
fdivrs
mov
pop
sbb
mov
mov
pop
popf
and
test
add
jecxz
pop
inc
aad
lret
inc
adc
sub
add
xor
mov
add
negb
add
inc
cwtl
hlt
sarl
out
xchg
jno
xor
test
pop
pop
mov
jmp
rol
sub
outsb
add
jnp
es
and
leave
and
dec
in
stos
add
jne
jns
xchg
les
leave
dec
cmp
add
adc
je
loopne
add
cmc
out
pop
push
jns
and
scas
cmp
insl
add
lods
psrlw
sbb
pop
adc
cmp
push
and
repnz
shrl
add
inc
pop
mov
mov
mov
jno
popa
pop
jnp
jns
test
and
jecxz
bswap
fstpl
stos
push
jns
mov
in
add
adcl
sub
movsl
pop
dec
pop
rclb
jge
bound
andb
rolb
push
xchg
es
adc
outsl
xchg
movsb
mov
iret
pop
jnp
add
jp
and
scas
fsubr
add
jns
push
imul
add
lret
or
roll
mov
pop
lret
daa
dec
std
hlt
add
test
sub
push
dec
lock
loop
add
add
xchg
ret
dec
mov
push
fdivs
xlat
stc
dec
dec
js
and
movsb
push
sub
mov
xor
mov
dec
pop
fs
enter
sbb
push
stos
testb
in
jb
cmp
stos
lods
sarl
adcl
aam
pop
add
les
outsb
sub
push
add
fld
sbb
repz
addl
sarb
sub
push
dec
mov
and
dec
inc
adc
push
hlt
mov
jnp
mov
xchg
or
add
or
push
push
cwtl
mov
jecxz
add
or
push
bound
test
inc
and
and
loope
mov
xchg
cmpsl
cmp
add
jge
lods
sub
sub
insl
push
call
xor
mov
xorb
repz
ret
in
insb
lret
push
lods
inc
push
adc
clc
enter
test
mov
add
pop
pushf
sbb
add
insb
pop
xor
lods
call
jmp
out
adc
add
push
xchg
sub
mov
and
test
fldenv
aas
lock
add
aaa
in
add
mov
add
adc
rcl
xor
inc
add
add
inc
repnz
cmp
cmpsb
xor
inc
lcall
adc
add
mov
aam
lea
stos
inc
inc
or
add
push
ljmp
and
add
mov
dec
add
arpl
and
cmp
adc
mov
and
add
es
mov
sbb
add
mov
jno
mov
out
test
push
rorb
xchg
sub
cmp
pop
pop
adc
cli
mov
add
inc
mov
pop
stos
mov
int
dec
fildl
add
fnstcw
sub
xlat
pop
push
lcall
outsb
test
lods
into
jg
popa
adc
jmp
js
push
mov
pop
cmp
add
add
daa
test
fiadds
push
dec
notb
inc
test
rcrb
cmp
vpsubsw
clc
adc
lods
ror
loope
push
cmp
mov
add
xchg
aad
inc
stos
add
pop
jo
sbb
mov
or
pop
popa
mov
rorl
cmp
inc
jns
pop
and
jb
int
xor
xchg
mov
sbb
and
add
cltd
mov
data16
in
gs
push
orl
add
push
xchg
sub
add
js
push
sub
or
loopne
nop
jo
push
data16
mov
push
loop
test
push
dec
pop
and
fwait
movsb
cmp
or
and
fldenv
mov
inc
add
mov
test
jns
ja
cmp
add
das
cmpsb
or
mov
jg
mov
xor
mov
fcmovnu
fwait
add
and
cmpsl
sarb
sub
mov
jo
stos
dec
inc
mov
fcomp
les
xchg
in
sbb
mov
js
aad
adc
imull
add
add
imul
mov
movsb
xchg
add
add
add
les
into
enter
and
call
rolb
push
lds
push
sahf
test
repz
mov
mov
add
aas
sbb
mov
adc
cmpsb
or
fiaddl
xchg
rolb
push
pop
xlat
imulb
add
and
pop
xchg
sub
add
scas
insl
or
into
inc
icebp
sbb
cltd
call
int
sub
cmp
lret
or
and
add
ret
les
ds
loope
xlat
psllw
xchg
xchg
bound
adc
add
adc
int
test
jp
dec
aaa
jl
loop
fildl
add
dec
push
jle
push
pop
nop
pop
xchg
sub
imul
repnz
ret
jg
loope
jp
aas
dec
mov
cld
rolb
es
add
test
out
inc
scas
cmp
and
fisubrs
mov
into
jp
push
cltd
lret
loopne
sub
and
scas
and
xor
adc
dec
pop
add
clc
test
sbb
popa
xchg
fdivrl
and
rcr
add
ds
cltd
mov
es
ret
aas
xorl
pop
lds
shll
cmp
inc
arpl
add
les
push
jecxz
add
test
sbbb
leave
xchg
pop
ficompl
push
xor
cld
mov
int
adc
lock
hlt
test
pop
sbb
add
inc
aam
adc
inc
pop
cmp
mov
cmp
nop
add
sub
add
push
pop
lahf
dec
js
shlb
and
clc
add
shll
xchg
sbb
adc
shl
jns
push
push
lock
mov
dec
test
shrb
add
push
mov
add
sbb
popf
mov
fs
les
mov
add
aas
std
add
sub
int3
insb
lcall
fnsave
pop
ret
movsb
sub
leave
inc
jg
les
push
mov
jbe
xchg
inc
movsl
test
imul
pusha
pop
add
cmp
out
fsubrl
or
sub
cmp
rolb
add
jne
xlat
ljmp
int3
mov
add
int
mov
cwtl
mov
sub
pop
lcall
cli
inc
mov
adc
sub
push
sbb
sbb
dec
andl
inc
mov
add
ja
jg
jmp
std
or
lods
fmuls
loopne
call
add
aad
scas
xchg
push
mov
nop
insl
xor
cmp
cmp
and
in
cmp
pusha
fsubs
mov
mov
xchg
mov
xchg
aaa
rclb
add
pop
fisubl
popa
sub
inc
sub
push
int3
aam
mulb
dec
int
add
cld
jmp
adc
rolb
dec
sbb
test
jb
je
push
pop
nop
xchg
or
aam
xchg
or
sbb
push
add
loope,pn
movsb
sub
cmp
or
mov
movb
lahf
jmp
xor
in
pop
clc
add
adcl
xlat
in
mov
cmp
sbb
out
aam
push
or
test
hlt
dec
imul
in
cmp
mov
add
push
cmp
scas
inc
out
icebp
lock
add
adc
cmpsb
dec
lds
movsb
and
add
test
rcrb
lret
loopne
repz
and
mov
mov
iret
das
add
nop
mov
cmp
popa
sub
cmp
subb
cmp
mov
add
inc
lcall
add
ss
mov
lock
icebp
add
ret
lret
push
pop
jbe
sti
mov
cmp
push
or
add
stos
mov
add
add
cwtl
xorb
cltd
lock
aas
insb
fwait
xchg
rclb
jne
jnp
test
jno
mov
es
mov
popa
pop
inc
xor
lcall
sbb
stos
and
aaa
in
jg
insb
sub
hlt
add
or
shll
rclb
jae
add
into
imul
lcall
mov
cld
jae
adc
pop
clc
clc
sub
mov
lds
daa
jo
add
xor
imul
inc
int3
cmp
sti
pusha
add
push
dec
add
push
dec
add
dec
