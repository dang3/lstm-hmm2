mov
add
pop
pop
add
add
add
add
inc
add
add
adc
add
add
add
add
adc
add
imul
add
pusha
or
cmp
add
lock
add
orb
pusha
mov
add
or
sbb
add
jns
outsb
imul
push
or
add
add
add
add
add
add
add
imul
add
add
add
add
and
add
add
pusha
add
lock
add
add
add
mov
add
add
add
add
lock
add
add
add
add
add
add
add
sub
add
clc
add
adcb
add
cmp
add
add
add
inc
outsl
insl
add
add
add
add
pop
add
addb
add
addb
addb
add
test
add
rolb
add
add
add
inc
outsl
insl
add
add
add
add
jo
add
push
or
call
add
add
or
add
add
add
add
cwtl
add
add
sbb
add
add
add
or
add
add
add
add
rolb
add
or
test
add
ja
or
add
add
add
add
call
sub
add
add
add
pop
push
cmp
add
add
add
add
add
add
add
add
push
cmp
insl
add
add
add
add
sub
add
mov
add
add
xor
outsl
insl
add
add
add
add
push
add
addb
add
xor
outsl
insl
add
add
add
add
push
popa
or
mov
add
or
dec
add
dec
add
dec
add
dec
add
add
add
add
add
and
or
add
add
call
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
loopne
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
outsb
add
add
je
imul
and
dec
add
outsb
add
add
jb
and
push
add
outsl
add
imul
and
dec
add
jae
je
popa
add
add
jb
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
add
add
add
add
xor
xor
sub
add
add
add
push
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
push
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
push
add
add
add
pop
add
add
pusha
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
outsl
add
outsb
add
arpl
je
imul
and
dec
add
outsb
add
add
jb
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
sub
add
and
add
inc
add
add
add
add
add
addb
add
rol
incl
add
addb
add
addb
add
add
incl
add
incl
add
add
and
and
inc
push
push
add
inc
add
add
add
add
add
inc
add
data16
add
add
add
add
and
push
addr16
inc
add
add
add
and
addr16
add
add
add
and
push
xor
push
ja
pop
jbe
add
add
adc
add
ja
push
jbe
add
add
push
inc
and
and
ja
push
jbe
add
add
and
es
data16
add
add
inc
add
or
and
ja
addr16
add
add
add
add
ja
add
add
add
cltd
add
ja
ja
add
add
add
add
add
add
add
ja
add
add
dec
cltd
cltd
cltd
add
ja
cltd
cltd
cltd
cltd
stos
inc
addr16
cltd
nop
or
add
add
add
add
stos
stos
mov
add
add
cltd
add
cltd
add
stos
stos
stos
mov
inc
add
add
dec
nop
add
mov
add
add
add
xor
adc
add
cltd
cltd
cltd
add
mov
adc
add
add
cltd
nop
add
mov
add
add
add
dec
cltd
add
add
stos
push
stos
mov
add
add
add
inc
dec
stos
stos
stos
add
add
clc
add
clc
add
clc
add
jg
add
aas
lock
pop
rolb
pop
rolb
pop
rolb
pop
mov
cmpb
cmp
add
clc
add
repz
add
ret
clc
pusha
add
clc
pusha
add
clc
and
add
add
add
add
ud0
add
incb
aas
jmp
add
add
inc
or
add
add
jb
or
add
add
add
add
adc
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
or
add
imul
out
imul
add
adc
and
cs
or
add
add
cmp
or
add
add
dec
insb
or
add
add
popa
insb
or
add
add
jno
or
add
add
jg
or
add
add
nop
insb
or
add
add
pushf
insb
or
add
add
lods
insb
or
add
add
mov
add
add
insb
or
add
add
fldcw
add
add
jmp
or
add
add
cli
insb
or
add
add
adc
add
add
add
insl
or
add
add
cmp
or
add
add
dec
insl
or
add
or
in
or
adc
add
imul
add
or
or
add
imul
adc
add
imul
sbb
add
or
and
add
or
sub
add
or
xor
add
or
cmp
add
or
inc
imul
add
or
dec
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
js
or
shrl
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
push
dec
dec
dec
cs
dec
dec
add
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
push
dec
inc
dec
xor
cs
dec
dec
add
inc
xor
cs
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
dec
inc
push
dec
xor
cs
dec
dec
add
inc
dec
dec
xor
cs
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
inc
push
push
pop
cs
dec
dec
add
dec
inc
dec
xor
cs
dec
dec
nop
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
insb
jae
gs
popa
insb
jne
add
add
addr16
gs
popa
insb
jne
inc
js
add
add
jb
jo
outsb
inc
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
jb
popa
insb
imul
arpl
add
gs
je
push
imul
inc
add
add
gs
add
dec
insb
gs
popa
jbe
push
outsl
push
je
gs
insl
add
add
je
jb
outsl
jb
outsb
outsw
add
add
popa
addr16
imul
dec
arpl
push
imul
push
dec
outsl
je
data16
arpl
inc
add
add
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
inc
dec
inc
gs
jb
outsl
jb
gs
inc
add
add
inc
inc
insb
gs
outsb
jne
add
add
and
add
push
adc
add
lock
xchg
pop
call
add
add
in
pop
nop
nop
nop
nop
lea
mov
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movl
mov
mov
sub
mov
add
lea
add
mov
mov
pusha
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
popa
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
add
push
pushl
push
push
call
mov
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
mov
adc
push
add
or
inc
cmp
add
or
ret
mov
add
adc
mov
cmpl
adc
or
push
and
rolb
add
call
enter
add
shl
or
dec
mov
jne
pop
sbb
add
mov
xor
fildl
or
sub
in
ljmp
jb
sub
or
add
adc
out
xor
inc
out
clc
dec
jne
pop
mov
bound
jp
mov
ret
pop
addr16
cs
ret
push
movzwl
mov
or
movl
jae
mov
mov
sbb
sarb
cli
sar
add
cmp
sbb
lahf
adc
loope
jno
data16
jb
jmp
inc
sub
sahf
clc
fistl
scas
mov
or
int3
shr
sahf
ret
inc
test
ds
add
in
push
push
jbe
jge
sub
jle
mov
xorb
int3
or
xor
aas
std
add
int3
dec
cld
sbb
pop
ret
add
shl
pop
pop
or
sub
cmp
jbe
mov
xchg
inc
cmp
mov
notl
jle
push
lret
inc
pop
or
call
mov
push
or
inc
cmp
jl
adc
leave
popa
fcomi
xor
inc
xchg
outsb
enter
test
or
jo
xchg
mov
push
pop
mov
sar
sub
les
jne
mov
shr
sbb
loopne
add
jbe
aaa
call
or
cmp
sti
inc
inc
shr
sbb
sbb
jbe
pop
mov
xor
adc
mov
test
push
sbbb
icebp
call
es
sub
push
lea
pop
call
cmp
icebp
xor
push
jne
lret
and
mov
lahf
and
add
push
clc
mov
inc
adc
sub
jl
cmp
or
orb
enter
mov
sbb
leave
cltd
dec
hlt
nop
push
call
movsb
data16
orl
push
in
inc
lock
shl
add
xor
dec
dec
into
cmp
cmp
push
adc
fdivl
push
sbb
mov
xorl
fcompl
rep
adc
retw
jne
inc
add
cli
cld
inc
mov
add
xchg
pop
mov
and
mov
adc
hlt
test
fwait
ret
push
les
mov
jbe
sbb
test
movsl
mov
sub
inc
add
movsl
inc
pushf
mov
add
and
leave
push
adc
jge
push
gs
push
jmp
and
or
cmp
or
movsl
sbb
into
pusha
or
divb
pusha
clc
lcall
push
sbb
push
insb
out
add
mov
fsub
mov
iret
push
sbb
push
repnz
scas
adc
add
test
cmp
sbb
sub
sahf
das
mov
inc
dec
inc
xchg
add
rorl
call
pop
cmp
je
sub
incl
setge
sub
clc
lea
xchg
hlt
shll
add
decl
mov
jmp
mov
inc
xor
xchg
jmp
sub
mov
lock
jne
leave
adc
push
mov
cmp
insl
sbb
fldl
test
fwait
push
aad
cltd
jle
mov
or
jmp
lock
in
rorl
sub
mov
xor
or
call
add
mov
add
sub
jp
dec
push
andl
sub
leave
loop
and
sti
dec
repnz
popa
mov
sub
pop
jge
dec
push
in
sub
pop
dec
pop
add
pop
jo
jmp
add
ret
psubq
ds
add
and
inc
adc
imul
nop
leave
dec
xor
dec
cmpb
cmp
sbb
rcl
inc
test
mov
addb
inc
adc
rolb
jle
cmp
icebp
icebp
iret
rorb
nop
stos
mov
shrb
int3
pop
outsb
sbb
movsb
jne
cmpl
lock
adc
jb
mov
orb
shl
dec
add
les
xchg
sbb
push
cs
sub
jb
xor
mov
mov
negb
rcll
rcrl
dec
jne
cmp
jne
dec
sbb
cmp
add
sub
add
popa
jecxz
iret
push
pushf
dec
sbb
jecxz
lcall
inc
mov
sub
mov
cmp
dec
mul
sbb
inc
outsb
addb
xchg
rolb
add
les
xor
add
add
dec
add
mov
add
pop
add
and
jns
add
add
add
add
mov
js
mov
cmp
sub
xchg
stos
out
les
mov
mov
cmp
fidivs
dec
sub
push
dec
and
xchg
lahf
jmp
outsl
xor
sbb
icebp
and
push
stos
movsl
test
mov
adc
adc
divb
enter
aam
xor
nop
mov
int
cmp
adc
jecxz
testb
aad
in
sahf
addr16
pop
cmpb
sbb
fdivl
push
mov
scas
mov
or
jae
dec
arpl
pop
lock
mov
jnp
sbb
jp
flds
jecxz
add
addr16
insl
ljmp
jecxz
test
jle
inc
mov
scas
jns
jg
leave
out
test
xchg
into
adc
out
ljmp
or
mov
inc
test
jl
lock
mov
sub
push
add
mov
out
out
stc
std
stos
sub
out
insl
xlat
nop
push
decl
or
add
dec
jne
dec
inc
xchg
mov
cmp
or
fnstenv
daa
xchg
xorl
popa
and
testl
inc
sub
call
xor
mov
push
inc
sub
mov
fstpt
push
clc
ja
mov
aam
cli
jo
dec
mov
sbb
inc
int
push
aam
pop
ss
outsl
out
mov
add
push
or
data16
and
pushf
scas
icebp
pop
lea
add
fcom
daa
push
sub
jae
mov
test
mov
dec
sbb
mov
jb
lods
in
mov
jmp
pusha
incl
arpl
jg
xchg
pop
lret
icebp
call
out
xchg
inc
int
scas
js
jo
ljmp
pusha
xchg
jbe
lahf
pop
mov
fstpt
sbb
scas
popa
fcmovu
jge
add
cmp
ds
test
push
fiaddl
sbb
inc
scas
adc
adc
inc
repz
ljmp
sbb
cmp
ja
push
sub
aam
pop
dec
and
dec
ds
rcll
push
or
push
mov
xchg
jg
out
sahf
jp
xchg
push
and
movsb
mov
mov
add
mov
clc
repnz
lods
vpmullw
mov
scas
sub
add
cmp
ss
mov
and
cmp
and
arpl
or
jge
imul
xor
ror
sub
pop
je
sbb
repnz
aaa
jle
testb
jp
bound
mov
lock
lea
or
xlat
mov
adc
out
lret
stos
mov
inc
sti
mov
pushf
insl
push
sub
lds
mov
push
ljmp
mov
dec
pop
cltd
icebp
xor
aad
ds
imul
loop
lahf
push
stc
sti
mov
lods
fs
cmp
mov
pop
jns
pop
pop
mov
push
loopne
sub
bound
ljmp
or
arpl
aas
insl
xchg
sti
hlt
negb
adcl
push
push
mov
jl
insb
sbb
or
lcall
arpl
test
mov
fadds
mov
dec
addr16
xchg
repz
xchg
add
mov
mov
cmp
xlat
and
stos
in
jl
jmp
inc
dec
shll
inc
jnp
and
insb
negb
add
adc
sbb
inc
sbb
jecxz
adc
jae
lret
cmc
ja
sub
in
mov
stos
out
mov
lea
jb
movsb
pop
mov
jnp
repz
fcompp
push
mov
and
xchg
mov
mov
lret
lea
jmp
push
add
call
call
or
mov
cs
aad
adc
rcrl
dec
repnz
out
or
dec
and
push
sbb
pop
inc
mov
int3
fistl
lret
and
cwtl
test
mov
test
addr16
push
notb
adc
xchg
imul
pop
test
stc
add
insl
mov
sub
sub
jns
push
in
xchg
adc
pop
fidivrs
mov
or
fstps
cltd
test
adc
jnp
xlat
loope
in
inc
shll
pushf
ss
call
insl
xchg
fs
dec
xor
mov
and
mov
push
and
movsl
xchg
xor
pop
test
mov
push
mov
in
pushf
insl
pop
mov
fbld
popa
push
cmp
add
cli
test
jp
lea
jbe
fnop
push
xchg
out
scas
push
adc
pop
lods
add
neg
loopne
sbb
jg
mov
adc
sti
adc
jge
icebp
pop
iret
mov
in
dec
lea
jae
inc
subl
and
push
rorl
shll
inc
lods
push
fmul
nop
adcl
outsl
jno
add
pusha
push
loop
sbb
icebp
in
je
inc
and
daa
pop
cmpsl
hlt
push
dec
jp
jmp
mov
cli
mov
jl
push
sbb
cs
addr16
adc
pop
ret
xchg
push
inc
jge
icebp
mov
mov
inc
xor
fsubrl
mov
and
repnz
in
jle
mov
mov
insl
arpl
pushf
test
cmp
pop
dec
imul
and
notl
sbb
fiadds
cmp
sarl
mov
add
fsubrl
in
xor
jne
xor
sub
faddl
flds
or
ret
and
movsl
jmp
push
mov
imul
sbb
mov
dec
mov
push
addb
test
xchg
mov
dec
lods
inc
sbb
mov
test
fisttps
aaa
roll
repnz
ja
add
adc
aad
push
jno
xor
lods
mull
jg
mov
xchg
outsl
inc
push
push
lds
por
in
xor
mov
mov
test
shrl
adc
lret
mov
stos
andb
mov
mov
repz
hlt
pop
cmp
mov
add
jbe
aad
cli
sbb
xor
push
pop
jbe
sbb
mov
sub
loop
xchg
arpl
enter
cmp
xor
int3
xlat
test
xchg
pop
push
mov
arpl
or
pop
outsl
pop
mov
outsl
es
repz
xor
sub
je
inc
cli
mov
mov
dec
mov
lcall
and
insb
jnp
cmp
xchg
sti
loope
js
out
stc
dec
xchg
std
mov
int
adc
ret
mov
fdivrp
es
adc
cltd
mov
int
inc
mov
sub
inc
loop
push
mov
repz
sahf
jmp
pop
inc
and
adc
mov
or
xchg
out
xor
cmp
gs
fidivrs
repz
pusha
mov
mov
inc
mov
in
arpl
lret
ja
push
dec
negl
jg
sub
in
adc
repz
sub
xchg
out
dec
inc
pop
call
mov
jle
pusha
hlt
or
es
or
adc
add
data16
lea
push
sub
rclb
dec
testl
or
xchg
add
popa
mov
aam
cmp
and
loop
dec
cmc
xor
xchg
xor
mov
std
daa
pop
inc
or
mov
mov
data16
mov
push
lock
mov
adc
mov
xor
nop
push
push
fsts
or
lea
lret
loop
outsl
shl
sub
mov
shrb
imul
add
jno
dec
xchg
ljmp
xor
in
pop
add
sub
ror
in
mov
pop
adc
outsl
sub
pushf
pop
cmp
cltd
rcr
shr
sbb
jl
lock
orb
dec
jno
add
out
and
arpl
fistps
cli
ss
mov
adc
punpcklbw
jbe
jmp
imulb
out
fisubrs
cli
sbb
repnz
sbb
ljmp
inc
in
mov
ficomps
push
cmp
cmp
jae
add
and
ret
inc
insb
insl
mov
test
dec
loope
lds
mov
mov
ss
jge
adc
or
xorb
add
push
mov
test
imul
sbb
test
stos
mov
push
add
jbe
or
sub
pop
add
jl
push
push
imul
loopne
fimuls
test
mov
and
add
aam
daa
and
mov
daa
ficoml
aaa
sbb
clc
pop
jno
pop
fistl
mov
in
int
mov
leave
push
sub
sbb
inc
push
or
cld
mov
subb
push
dec
push
movsb
shr
dec
stos
fldt
or
cmp
movsb
xor
jmp
and
adc
jae
std
push
arpl
mov
add
xchg
aas
xchg
mov
push
and
stc
lea
xchg
jmp
pop
cbtw
imul
dec
mov
mov
popf
push
push
ljmp
add
sub
fistpll
repnz
or
test
pop
ljmp
cmp
mov
test
mov
or
pushf
insl
cwtl
sbb
mov
dec
pop
sbb
pop
fstps
sbb
adc
jl
rcrl
daa
or
xchg
sub
rorl
stos
add
out
pop
data16
lcall
jl
aam
js
push
jge
jb
push
dec
ret
dec
sti
lods
insl
xlat
negb
fnstenv
sub
leave
adc
dec
jno
pushf
icebp
dec
pop
rol
aam
and
ds
imul
and
cmp
std
aad
and
jecxz
sbb
notl
dec
movb
pop
mov
pop
not
daa
sbb
pushf
xor
insl
inc
pop
subl
arpl
js
adc
test
fmul
inc
xor
stos
stc
data16
mov
sub
faddl
mov
cwtl
cli
jb
ds
test
hlt
aad
int
movb
xor
dec
dec
sub
push
jbe
negl
dec
lds
addr16
xchg
sub
mov
cmp
leave
pop
cmpsb
out
xor
jbe
test
sbb
add
inc
or
lds
aas
xchg
push
rcrl
push
mov
bound
inc
and
mov
cltd
xor
gs
sar
int3
into
push
movsl
push
scas
movsb
sbb
xchg
inc
jne
mov
dec
and
fs
or
jmp
cmp
enter
sub
cwtl
gs
in
insb
adc
sub
push
ret
cli
mov
dec
shll
popf
jmp
testb
fsub
sbb
cmp
mov
lret
lcall
into
inc
jl
cmp
mov
and
mov
sub
stc
out
push
cmp
mov
pusha
sub
cmc
sahf
aam
add
mov
fdivs
rcrl
leave
mov
in
imul
mov
mov
incl
stc
shl
les
popa
xchg
lahf
mov
stos
rorb
push
pop
cld
or
pop
pop
pop
das
jmp
cmp
pop
inc
xchg
sbb
out
mov
inc
push
pop
popf
mov
lret
mov
pop
pop
iret
xchg
push
cld
iret
cli
mov
divl
xor
xor
mov
push
inc
fs
dec
cmc
loope
adc
and
and
push
dec
fldenv
fbld
xchg
dec
or
jg
lods
add
in
pop
or
mov
shl
push
pop
sub
pop
push
mov
arpl
xor
int
stc
sbb
roll
sbbb
jle
inc
lds
mov
inc
mov
aad
or
loopne
popl
or
int3
dec
mov
rcrl
and
jae
xor
xchg
xor
jp
cmp
pop
push
inc
icebp
and
mov
xor
and
vmovntps
sbb
jecxz
xchg
dec
cmp
in
testl
repnz
or
arpl
mov
aam
fsubrs
push
xchg
jns
jge
and
std
adc
adc
sbb
cltd
bswap
xchg
adc
cs
push
insl
faddl
in
push
das
pusha
cli
popf
bound
inc
int3
cmpsl
xor
fs
push
mov
push
andl
fucom
push
xchg
xchg
inc
push
sub
add
cmp
sbb
fistpll
orl
in
cmc
dec
addl
stc
insl
push
push
and
jle
sbb
xchg
aam
inc
cli
mov
rcr
sub
sub
repz
pop
lcall
jecxz
sahf
fnstsw
push
mov
aam
add
add
pushf
es
ret
fistpl
fstl
jmp
or
imul
jg
inc
hlt
mov
sub
xlat
inc
cltd
cli
add
jns
sub
cld
cs
ss
call
insb
test
mov
mov
xor
fptan
xchg
adc
xor
or
xlat
repz
pop
cmp
in
int
pop
inc
ljmp
mov
stos
rolb
jp
push
xchg
ffree
mov
std
fsubrs
xchg
dec
cld
xchg
js
xor
fists
cld
or
add
mov
sub
sahf
lret
pop
jl
lods
pop
mov
sahf
sub
imul
fidivs
lock
push
sub
push
pop
inc
mov
mov
aas
sub
mov
mov
lods
and
cwtl
push
idivb
ret
gs
push
popa
push
sarb
pop
aaa
sbb
jecxz
gs
test
adc
es
das
sub
add
adc
into
mov
mov
into
pop
pusha
adc
inc
dec
dec
call
fldt
jnp
scas
push
mov
sbb
lock
pop
in
push
inc
insb
mov
movsl
add
xchg
sub
arpl
das
adc
mov
fwait
push
test
xor
push
and
test
xor
and
jge
inc
icebp
fwait
xchg
add
stos
adc
js
test
scas
lcall
mov
ss
or
dec
or
rol
aam
adc
dec
cld
pop
arpl
iret
cmc
xchg
cmc
std
cmp
in
int3
and
jmp
out
lods
or
cmp
test
jl
adc
xlat
pop
jmp
xchg
in
xor
out
outsb
xchg
adc
jge
dec
adc
mov
adc
mov
stos
pop
ret
rcrl
lods
stc
in
xchg
mov
jae
pop
mov
ret
idivl
lret
mov
or
stc
mov
sub
in
gs
lock
push
mov
sub
aam
pop
lock
pushf
scas
icebp
pusha
rorl
xchg
mov
push
sbb
or
sti
std
push
les
or
add
dec
stc
ljmp
pop
add
sbb
xor
jl
mov
sti
leave
nop
jo
popa
jmp
arpl
mov
mov
pushf
mov
jnp
mov
mov
es
sbb
jo
aam
dec
sub
insb
sbb
out
add
mov
xchg
mov
popf
insb
mov
mov
jnp
dec
mov
icebp
push
lret
mov
cmc
dec
jl
sahf
push
addr16
and
jb
pop
pop
cmp
call
aas
aad
divl
outsl
jb
scas
jb
int
mov
push
pop
and
inc
daa
mov
pop
mov
inc
ficomps
adc
xchg
test
sbb
inc
xor
lea
dec
adc
sbb
xchg
shlb
pop
cmp
mov
shlb
ja
movd
and
aad
inc
rclb
jnp
mov
pop
mov
rorl
jno
in
stos
iret
jp
int
mov
sub
aam
mov
out
out
nop
xchg
fsubrs
mov
xchg
sub
xchg
std
xlat
testb
adc
fists
daa
leave
and
and
test
lret
hlt
in
xor
xchg
add
xor
pop
das
and
cmp
sarb
push
es
xchg
adc
cmp
popa
mov
mov
jge
lahf
ss
lahf
iret
xchg
test
into
jae
sbb
repz
sti
and
inc
inc
jl
mov
push
mov
jg
lret
pop
adc
gs
movsb
int
jno
adcl
jmp
sbb
outsb
mov
inc
mov
scas
adc
and
rcrb
and
sub
lahf
mov
push
mov
mov
loopne
add
pop
imul
push
stos
push
push
repz
iret
stc
in
sub
leave
xor
adc
xor
xchg
pop
jae
stc
bound
jb
xchg
add
ret
leave
inc
cmc
mov
mov
inc
push
dec
mov
mov
or
fdivrl
push
je
shl
int3
inc
test
jns
int3
rcrl
pop
push
test
push
sub
cmp
pop
mov
jb
movsl
xchg
pusha
into
mov
jnp
arpl
lahf
pusha
shll
fiadds
nop
adc
push
xchg
dec
movsb
push
push
shll
leave
xlat
jg
imul
stos
or
dec
pop
push
jbe
mov
add
ffree
push
cs
test
inc
xor
jecxz
andl
pushf
dec
addl
loop
sub
mov
decl
adc
notb
lahf
fiadds
aam
pop
add
cld
and
jns
insb
rcr
lea
leave
sub
adc
std
test
lret
xchg
inc
fdivl
aaa
insb
inc
push
mov
lods
xchg
mov
in
adc
out
pop
adc
jge
pop
mov
xor
imul
push
add
adc
adc
pop
sbb
mov
mov
add
dec
pop
repz
shlb
xchg
xchg
push
fsubrs
dec
shlb
sbb
arpl
dec
push
xchg
notl
insl
rol
les
sbb
insb
aaa
lret
pop
not
in
repz
gs
cmp
pop
jmp
popf
push
cs
pop
imul
cmc
sub
int3
fisttpll
mov
or
orl
xor
inc
lret
imul
fsubr
jno
cs
push
push
dec
jmp
ja
mov
xchg
je
add
scas
insl
out
and
adcl
cmp
enter
test
mov
jbe
pop
repz
mov
cmp
bswap
int3
fists
and
out
mov
loop,pt
out
push
les
inc
xchg
sbbb
enter
push
stc
add
test
jp
cwtl
bound
push
jecxz
std
lods
mov
jns
lsl
sbb
cmpsb
and
lahf
in
lret
add
push
xor
orb
fidivrs
popf
or
or
pop
and
in
cltd
pop
idiv
mov
ljmp
add
movsl
ret
jl
push
sub
mov
call
icebp
sub
insl
cmp
jecxz
and
push
xchg
mov
jbe
es
cmp
push
adc
out
adc
pop
loopne
pop
jno
fcmovnbe
lock
cwtl
and
pop
push
and
dec
lods
cmp
mov
mov
sahf
dec
dec
in
mov
fcomip
pop
ret
clc
data16
mov
lret
xchg
mov
dec
xchg
jae
add
das
dec
sti
jnp
inc
mov
call
lea
or
fimull
nop
dec
and
mov
or
xchg
dec
das
sub
nop
mov
push
inc
mov
inc
movsb
out
popf
push
ss
in
jecxz
cltd
das
jbe
mov
shlb
mov
scas
cmp
xchg
out
push
cmpl
xor
mov
inc
xchg
ds
dec
pushf
adc
xor
pushf
dec
or
pop
dec
sub
in
gs
and
lock
xchg
sahf
sbb
jnp
xor
or
aaa
adc
and
decb
mov
jl
xchg
test
rcr
outsb
jmp
jl
or
fsubs
sub
notl
inc
icebp
lods
icebp
ja
jnp
sarl
je
or
push
pop
out
imul
gs
jne
rol
pop
jb
inc
mov
add
aam
wbinvd
pusha
leave
and
shlb
mov
and
adc
test
lahf
xchg
shrl
push
ja
imul
shrl
shrl
popa
dec
adc
sub
ljmp
sub
mov
lret
scas
out
in
pop
ss
mov
cs
je
daa
sbb
xchg
call
cltd
sbb
sub
fisttpll
lret
dec
ljmp
sbb
nop
orb
lcall
xchg
cs
cli
loope
pop
jmp
push
and
repz
data16
orl
push
in
sbb
aam
cltd
jg
mov
das
push
repz
lcall
add
imul
or
or
out
mov
cmp
cltd
xchg
push
pop
add
or
push
xor
ja
xchg
in
mul
push
mov
aam
lea
pop
inc
test
pop
dec
and
mov
out
cmp
scas
sbb
orb
aad
push
and
incb
xchg
push
xor
shlb
inc
xchg
pop
cwtl
lods
testb
call
mov
mov
push
jge
adc
xchg
sahf
sbb
mov
cmpsb
cmp
sahf
cmp
mov
mov
push
push
pop
jnp
pop
cmp
xor
lret
inc
mov
icebp
xor
mov
sub
out
jg
loope
cmp
dec
mov
aaa
mov
fdivs
mov
mull
pop
pop
pop
lock
lds
mov
cwtl
jb
cli
dec
mov
subl
lods
stos
mov
dec
pop
mov
pop
jns
gs
roll
sahf
cmp
xchg
mov
daa
xor
leave
mov
mov
movsb
adc
dec
xor
into
mov
pushw
lods
cmpsb
and
push
fdecstp
jnp
mov
add
jae
imul
or
mov
stc
sbb
fcmovbe
movsl
mov
es
loope
ljmp
jo
xor
popa
dec
add
or
mov
xor
sbb
icebp
pop
sarb
test
out
fmull
cmc
aam
pop
out
test
xchg
sub
icebp
aas
add
pop
dec
add
cmp
push
mov
ljmp
xor
xor
loope,pt
push
or
push
jbe
ret
push
xchg
out
cmpsb
pop
out
ret
sbb
inc
test
arpl
cmpsl
leave
mov
int
repz
jle
add
loop
push
and
sbb
fcmovnu
dec
dec
fadds
mov
adc
cld
arpl
fdivrl
push
movl
jns
dec
mov
xchg
dec
out
lret
loop
pop
push
lock
adc
fisubl
and
mov
mov
out
pop
rcrb
mov
sbb
stos
jne
orl
lods
sub
cmp
mov
sti
or
xor
sbb
rep
leave
and
aad
mov
mov
jmp
xor
jl
cltd
pop
es
out
sbb
jl
push
insb
xchg
ret
xchg
mov
pop
lods
push
push
cmp
dec
lahf
loop
mov
jp
les
das
clc
sahf
push
arpl
inc
cmpb
loop
icebp
ja
cmp
enter
iret
nop
bnd
gs
clc
ja
and
ss
pop
inc
js
mov
repnz
je
gs
fsts
shrl
inc
mov
xchg
adc
shr
add
jp
adc
std
fdivl
fcomi
mov
int3
jmp
pop
xor
sbb
pop
mov
ret
inc
jb
or
mov
mov
dec
popa
js
adc
xchg
adc
test
aad
clc
in
popf
push
xor
push
jecxz
mov
xorl
addr16
and
pop
push
xor
fimuls
pop
loop
sar
jns
push
mov
pop
xchg
sub
pop
pop
test
cmpsl
xchg
ret
mov
push
xchg
adc
cmovo
imul
cltd
cmp
loope
xchg
adc
mov
sbb
imul
mov
mov
in
xlat
sub
in
xchg
or
adc
rorl
lods
or
mov
jle
pop
add
mov
xchg
out
xchg
cmpb
add
add
aaa
mov
imul
mov
add
dec
into
ficoml
mov
scas
push
jp
xor
xchg
adc
test
cmpsl
pop
jne
jl
je
add
xchg
lahf
jecxz
adc
leave
out
inc
sub
lret
outsl
subl
in
mov
cmp
dec
sbb
int3
jns
outsb
xor
mov
aaa
movsl
xor
mov
pop
push
pop
push
ficomps
in
nop
lds
ficompl
inc
sub
aam
dec
mov
aas
in
mov
lret
jle
pop
mov
out
int
mov
cmc
xchg
adc
sbb
aam
mov
loop
add
cs
mov
xchg
test
insl
adc
fs
jnp
jb
push
sub
cmp
addr16
lods
mov
subb
mov
cwtl
jae
loopew
jnp
xchg
js
fdivs
and
mov
pop
push
out
push
lods
xchg
mov
call
std
in
mov
addr16
out
xchg
xchg
not
pop
cwtl
imul
repz
add
add
icebp
push
push
cmp
call
and
jmp
dec
fmull
cwtl
arpl
add
lods
lds
mov
repnz
xchg
jne
xor
push
xlat
daa
adc
mov
cmp
pop
cmp
cmp
dec
xor
mov
popf
cmpsb
jbe
sahf
ss
sub
xor
pop
sbb
subb
push
jae
testl
sbb
cld
jmp
and
adc
repnz
sbb
pop
and
mov
cs
push
filds
mov
rolb
cmp
fadd
lcall
orb
pusha
ss
das
dec
scas
mov
xchg
enter
fcmovb
xor
pop
xor
sti
cmp
sbb
pop
pop
inc
imul
sub
mov
ds
cs
push
xor
dec
repnz
bound
mov
imul
sub
clc
push
cmp
jns
rcll
jp
cli
or
or
out
add
ss
cltd
and
xchg
test
sub
adc
je
add
mov
mov
and
dec
pop
jecxz
out
pushf
arpl
div
shlb
xor
sarb
stc
xor
and
adc
cmp
loop
add
scas
mul
sbb
fs
lahf
jg
les
rorl
jnp
lahf
icebp
mov
fldcw
addb
lret
adc
lock
outsb
icebp
mov
mov
sbb
push
jmp
sbb
pop
sub
sarb
dec
imul
sbb
jl
jl
xor
lret
xor
or
adc
xor
shrl
inc
mov
sub
rorl
inc
jns
adc
mov
lea
pop
sbb
mov
fcoms
push
test
cmp
cmc
fisubl
ret
fcomi
dec
dec
cltd
dec
int3
jecxz
ljmp
sbb
and
bnd
es
mov
lock
cs
push
add
jge
xchg
dec
push
add
adc
jbe
ror
mov
nop
push
out
aaa
sub
pushf
mov
add
mov
mov
push
or
and
or
sub
fs
jg
ror
jmp
dec
add
cmp
jno
jle
xchg
mov
imul
rcl
punpcklwd
push
xchg
lock
cmc
and
mov
dec
ja
fs
push
sbbl
mov
call
rcrl
clc
enter
cmp
out
xor
pop
sahf
cmp
inc
mov
mov
push
inc
add
xchg
rcrl
rcr
sub
and
xor
cmp
mov
dec
arpl
cmc
push
call
xchg
pop
mov
into
or
xchg
adc
adc
adc
jle
or
xchg
cwtl
xadd
push
ret
xchg
test
sbb
negb
outsb
sbb
xor
pop
sbb
sub
pushf
pop
roll
cmp
xor
xor
xchg
adc
pop
fwait
pop
arpl
xor
cld
and
in
cmp
test
sbb
cmp
fildl
cmpsb
jg
stc
or
add
aad
ja
pusha
ret
jb
add
push
ja
cmpsl
xor
adc
push
js
cmp
data16
iret
sub
les
jae
sub
daa
pop
or
ret
add
add
rorl
ljmp
inc
imul
inc
mov
pop
xorl
stos
pop
leave
aas
mov
add
mov
push
shlb
sbb
lds
push
pop
xor
fistps
mov
jle
sub
out
lods
mov
clc
xorl
into
sub
dec
cwtl
xchg
fcoms
aad
sarl
mov
cmp
bound
xchg
push
out
jbe
std
jg
pop
sub
cmp
pop
pop
add
popaw
inc
cmp
loope
cmp
xchg
popf
jp
loope
ds
cmp
mov
adc
sti
adc
mov
push
jns
push
imul
insb
repz
dec
loope
sbb
push
jo
and
mov
adc
xchg
movsl
scas
enter
pop
add
add
mov
ss
pop
aam
pop
into
pop
in
jnp
cs
sub
xlat
in
push
xor
les
cmp
sub
aam
test
mov
das
pop
push
mov
sbb
pop
xchg
xor
cmp
jecxz
mov
outsb
adc
jae
xor
dec
xor
mov
push
xlat
xor
jp
push
xor
pop
xchg
int3
cld
cmp
ss
je
xor
ljmp
mov
into
mov
loope
sarb
std
inc
je
jecxz
out
shrb
mov
andb
sub
test
dec
mov
loopne
pusha
sbb
testb
ret
sbb
nop
fidivl
cmp
and
mov
xor
dec
xchg
ja
in
mov
outsl
adc
and
mov
xor
adc
push
xchg
scas
or
mov
cmc
mov
ret
ds
out
out
out
push
mov
pop
test
fsubp
push
dec
jne
lahf
pop
pop
insb
dec
mov
out
ret
pusha
or
iret
into
mov
aam
pop
stc
lods
idivb
mov
cmp
push
repnz
sub
push
jg
sbb
jno
cs
xchg
adc
jmp
les
push
mov
pop
mov
inc
jl
movsl
inc
xchg
movsb
notl
pop
sub
inc
pop
jg
adc
test
xor
popf
dec
int3
add
aad
xchg
arpl
jg
jbe
xchg
das
aad
mov
imul
sarb
jb
pop
test
fstpt
rorb
cli
ds
jecxz
adc
in
sub
into
outsb
push
stos
adc
sti
xchg
ljmp
cmp
icebp
or
xor
test
add
push
arpl
pop
cmp
mov
fidivrs
sbb
jmp
stos
sbb
jb
fisttpl
scas
movb
ljmp
jo
sbb
mov
adc
cmp
je
nop
lret
jecxz
leave
fstpl
sub
adc
mov
cmp
std
sub
cmp
out
lret
mov
mov
sub
mov
pop
cmp
int3
test
clc
mov
xchg
inc
adc
ficompl
sbb
insb
repnz
clc
outsl
data16
jnp
stc
lds
or
jno
scas
les
add
sub
repnz
stos
rcll
mov
and
dec
xor
stos
es
mov
rorb
cmp
nop
pop
jecxz
mov
std
xor
sbb
psubsb
add
in
aas
cs
lds
cltd
fisttpll
incb
les
push
fldcw
scas
push
sbb
int3
vminsd
enter
adc
cmp
xor
stos
lahf
inc
sahf
int
stos
adc
jecxz
add
dec
fwait
les
dec
test
int
cmp
daa
sub
lcall
push
pop
in
in
out
icebp
imul
mov
or
lock
jae
gs
dec
and
sbb
sub
fimull
neg
xor
sbb
lock
sub
pusha
sbb
mov
arpl
out
inc
loopne
mov
mov
aas
adcb
lret
imul
hlt
jmp
lret
jae
lret
es
out
jae
jle
xor
add
ret
push
add
dec
inc
adc
push
popf
push
adc
pushf
mov
mov
jmp
add
ds
xchg
outsl
push
xchg
dec
cmp
adc
or
repz
or
pop
movsl
jb
inc
fcmovb
dec
test
push
in
outsl
xchg
test
imul
cmp
loope
xlat
scas
xlat
stc
jno
mov
jge
push
inc
std
dec
and
rolb
fsub
pop
jl
popf
ja
jp
out
int
xchg
sub
lret
mov
mov
jno
pop
cmp
xchg
andl
lcall
push
icebp
xor
adc
xchg
sarb
pop
jbe
leave
or
sbb
ljmp
mov
sarl
xlat
addr16
and
xchg
stos
xor
add
xchg
cmpsb
inc
ret
mov
jg
dec
jmp
jnp
out
dec
mov
inc
and
mov
inc
loop
xchg
adc
push
mov
jl
and
jge
mov
test
pop
testb
mov
hlt
mov
dec
mov
notl
movsl
mov
popa
jo
sbb
xor
push
fistpll
sub
rdpmc
jp
insl
jmp
push
out
lds
into
mov
pop
ret
xor
scas
sub
dec
mov
lods
ljmp
push
pop
scas
in
xchg
pop
outsb
mov
movsb
adc
jb
lock
insb
sbb
mov
mov
maxps
decb
inc
mov
xor
imul
insb
mov
mov
sbb
lds
test
fildll
jecxz
movsb
xchg
jo
push
xchg
fdivl
adc
mov
mov
notl
shl
out
push
xchg
ljmp
cmp
mov
iret
out
aam
cmp
and
sbb
aam
out
popl
jge
int3
dec
cli
jb
cmp
pop
add
mov
mov
mov
insb
add
cs
adc
jnp
jae
and
add
ret
repz
jecxz
test
lds
pop
pinsrw
sbbb
sar
rcr
lahf
rolb
pop
or
adc
insb
jmp
jl
test
outsl
aad
cmp
hlt
imul
mov
cmp
out
sbbb
imull
testb
popa
cmp
mov
fbld
dec
add
aad
out
fwait
xchg
and
xchg
sahf
arpl
scas
scas
or
rcll
stos
ret
out
mov
pushf
sub
test
jp
lret
loopne
fdivrp
movsb
data16
punpckldq
arpl
shrb
pop
jmp
outsl
fcoms
pop
and
fcoms
cmp
jae
fldenv
xchg
cmp
jl
int3
test
mov
mov
cmp
mov
fimull
sti
push
lds
and
xor
lea
jg
cmp
mov
jp
lahf
dec
push
into
in
mov
push
popa
push
cmp
loopne
push
add
aas
push
sbb
sub
jge
lea
stos
mov
xor
adc
fldt
loop
hlt
cwtl
mov
cmp
orl
int3
fs
pop
sti
dec
sbb
movsl
sbb
mov
lcall
push
ret
imulb
rcl
xchg
sub
scas
pop
sbb
jle
test
dec
add
cwtl
push
popa
je
add
pop
jmp
push
xchg
xor
fwait
out
pop
mov
scas
movsl
xchg
sbb
test
ficompl
cli
jne
subl
mov
mov
mov
daa
jo
push
inc
stc
inc
xchg
sbb
and
adc
rolb
push
fs
insl
lock
stos
lret
push
jecxz
and
cmp
or
dec
mov
ret
cmp
jno
lock
fadds
scas
into
adc
sub
fnstsw
cmp
adc
rorb
push
xchg
jno
cmp
mov
imul
pushf
jno
jge
jne
es
cwtl
mov
add
mov
mov
jb
jb
mov
inc
adc
mov
add
dec
sub
inc
mov
cmp
xchg
cmp
in
fwait
roll
pop
sbb
pop
mov
fwait
add
jbe
out
inc
and
int
int3
add
not
insl
adc
dec
jl
mov
fldl
mov
shl
adc
popa
xor
int
jg
sub
testl
repnz
xchg
mov
stos
lea
pop
push
je
std
cmpsb
push
aam
jno
cld
inc
xor
movsb
xchg
xchg
push
stos
je
lcall
lcall
sub
loopne
jge
jl
xor
mov
inc
lret
fcmovb
and
mov
nop
aad
inc
jmp
xor
mul
push
int
fsts
inc
test
sti
sbb
pop
mov
or
rcl
mov
shr
sbb
sub
inc
jmp
adc
outsl
fimuls
inc
insl
jecxz
fstps
imul
lock
mov
jge
mov
cli
inc
cwtl
mov
mov
pusha
adc
inc
pusha
testb
mov
jbe
addl
cmp
gs
mov
ret
xor
mov
loop
bound
or
and
nop
inc
cmc
pop
fnstsw
pop
adc
div
je
dec
xchg
adc
ffree
inc
in
mov
and
ss
testb
ret
add
rorb
lret
jecxz
nop
scas
mov
pop
scas
adc
scas
aas
or
sub
int
xchg
daa
cmp
mov
aad
or
aad
fisubrs
std
imul
push
mov
fidivrs
addr16
and
inc
mov
xchg
jno
mov
push
lock
imul
jnp
push
dec
inc
or
sti
cmp
inc
push
pop
repz
push
int3
fld
or
inc
mov
adc
dec
push
jge
cmpsb
and
inc
push
add
loop
cmp
stc
mov
xchg
das
es
test
out
inc
dec
sbb
xchg
aam
xchg
jmp
js
pop
dec
sub
pop
jmp
pop
mov
not
inc
dec
int3
test
fmul
add
scas
pop
mov
icebp
mov
data16
lea
fdivrl
lcall
mov
fsubl
hlt
sbb
fildl
lret
or
shr
jle
push
mov
fucomi
cli
sbb
movsl
and
add
outsl
scas
or
add
shlb
jecxz
mov
lret
lret
insb
push
insl
xor
ret
and
das
repz
shll
fwait
dec
scas
int
fists
popa
mov
je
test
jnp
loopne
aam
xor
fwait
movsb
sub
fstps
adc
inc
or
sub
mov
or
xor
push
rcrl
cmp
je
sbbl
mov
js
cmp
or
test
js
cltd
pushf
or
ret
pop
mov
rcll
adc
fcomip
hlt
lods
aas
or
aad
fsubrl
lds
jns,pt
stc
enter
lea
xchg
insl
iret
push
jmp
stos
jle
mov
push
sbb
enter
pop
insb
pusha
pop
outsb
sbb
add
cmp
mov
test
lret
adcb
mov
iret
pusha
or
jmp
scas
cmc
push
mov
pop
out
movsl
scas
add
in
xchg
fbstp
and
fisubrl
adc
push
icebp
mov
dec
cmp
xchg
sahf
and
fbld
or
pop
cmp
xchg
pop
out
pop
loope
push
mov
xor
lods
test
addr16
cmpl
sub
outsl
mov
xchg
divl
cmp
adc
sahf
ret
arpl
mov
idivl
mov
mov
cmp
or
fcoms
add
sub
mov
and
call
adc
fs
daa
jmp
add
or
mov
sbb
xchg
bound
inc
fisttpl
jmp
jne
sub
xchg
jp
lret
in
aam
int3
sbb
sub
jg
or
test
sahf
mov
imul
sbbl
or
lret
sbb
out
mov
mov
jae
mov
or
pop
add
sbb
rcll
mov
mov
push
negl
lahf
xchg
jmp
xlat
es
pop
insl
pushf
mull
loopne
push
lock
fdivr
pop
or
icebp
sbb
jno
ffree
ret
or
dec
mov
int
adc
push
jmp
mov
int3
stos
sub
xorl
sahf
sbb
pushl
inc
lock
inc
roll
xchg
jns
lods
es
jno
push
test
or
data16
scas
push
mov
push
push
or
push
mov
adc
push
shlb
pusha
hlt
and
mov
cmp
jbe
and
ljmp
js
enter
xchg
mov
sub
push
xor
or
repnz
clc
inc
mov
in
sahf
nop
fwait
test
jns
ljmp
jecxz
xchg
and
push
nop
ror
mov
ljmp
xchg
lock
les
or
pop
push
imul
pop
cmpl
add
incb
inc
imul
add
fsts
aad
and
fwait
inc
push
mov
jo
push
dec
andb
mov
sub
jmp
andb
pop
popa
or
fimuls
sahf
adcb
pop
inc
mov
jb
push
jl
lock
fldt
jge
pop
inc
and
iret
mov
and
int
lcall
cld
pushf
mov
sub
xchg
je
sbb
arpl
popf
pop
out
pop
roll
adc
dec
ljmp
add
aaa
outsb
push
les
jle
rorb
jo
push
rcrb
push
outsl
movsb
xchg
cmc
push
test
out
ljmp
dec
and
adc
outsb
ret
mov
add
stos
aam
stos
jne
jmp
je
jnp
mov
inc
movsl
inc
mov
jp
and
sbb
dec
dec
icebp
mov
mov
inc
out
or
pop
sti
shrb
js
push
inc
inc
aam
inc
sbb
xor
fcmovne
push
jle
push
sbb
jae
addl
jmp
or
movsl
flds
in
sub
test
jl
jae
adc
in
pop
add
in
pop
jne
cmp
adc
in
int3
mov
stos
call
push
dec
test
mov
adcb
ljmp
fbstp
jo
loop
int
or
mov
sbb
inc
lcall
mov
fcmovb
negl
mov
pop
pop
nop
repz
rcrb
pusha
std
jnp
dec
sbb
jl
punpckldq
aad
push
pop
adc
or
sbb
xchg
negl
cmp
loope
gs
dec
cs
lock
jo
aam
das
test
stos
and
jnp
dec
pop
mov
lock
int3
lret
pushf
push
xchg
sbb
mov
xchg
xchg
mov
sti
call
add
out
std
xchg
mov
rclb
out
inc
or
popf
mov
and
xchg
sub
xchg
pop
stc
rcrb
mov
push
and
leave
fistl
dec
ret
adc
sbb
sbb
ret
int
lea
loopne
mov
repnz
add
call
pop
xor
sti
dec
push
or
jae
inc
loope
gs
das
cmp
inc
scas
sbb
sbbb
xor
nop
cmp
daa
dec
mov
fdivrp
cmp
fwait
dec
push
adc
imul
add
xchg
cwtl
cmp
in
pop
mov
leave
aam
pop
pop
jge
jo
jecxz
xor
adc
sbb
pop
bnd
add
cmpsb
insl
iret
and
push
sbb
dec
aad
push
pop
enter
sub
sub
cli
push
mov
daa
xchg
jb
inc
mov
in
pop
sbb
jbe
pop
xor
mov
xchg
lahf
add
push
lcall
mov
jb
stos
inc
pop
mov
in
mov
repnz
push
pop
adc
outsl
pop
jecxz
lock
dec
sar
sbb
inc
push
pop
adc
push
inc
popf
les
aas
repz
in
xor
jp
es
lods
adc
repnz
cmp
dec
dec
mov
pop
popf
mov
stos
shl
test
shrb
dec
out
or
repz
faddl
int3
sbb
dec
adc
int
sub
cmp
dec
xor
mov
add
scas
aas
push
cmp
add
in
mov
dec
add
mov
fiaddl
fwait
cmp
iret
push
push
jns
or
mov
push
fmull
add
push
scas
xchg
pusha
subl
push
subb
addr16
push
iret
add
and
cwtl
test
pop
aaa
push
xor
cmp
scas
jns
cmpsl
inc
test
push
lods
imul
addr16
mov
les
add
std
xor
xchg
xchg
xchg
test
push
mov
pop
daa
scas
xchg
push
sub
repnz
sub
sbb
pop
mov
cwtl
inc
into
imul
mov
push
push
mov
iret
pop
daa
loope
or
out
sar
xlat
xlat
add
mov
sbb
mov
jnp
mov
lcall
mov
mov
mov
out
ljmp
mov
push
imul
jg
sub
lahf
push
mov
adc
test
shr
sub
pop
mov
pushf
sub
or
pmulhw
adc
loopne
enter
shr
jo
adc
cltd
jl
stos
xor
je
pop
pop
dec
sbb
pop
mov
dec
mov
lret
add
loope
cmp
cmp
add
cmp
insb
and
jbe
je
leave
ljmp
rolb
adc
mov
push
cmp
jg
divb
inc
push
mov
aas
xchg
dec
cltd
mov
stc
dec
push
xchg
into
sar
push
pop
cmp
xchg
subl
sbb
aad
loopne
aam
jnp
repz
or
les
mov
lea
jge
fsubrl
dec
mov
sub
and
push
cmpl
push
pop
inc
inc
push
inc
pusha
xor
and
sbb
cmp
aam
mov
movsb
sbb
sub
adc
mov
call
jns
test
push
or
pop
push
dec
imul
leave
lea
imul
test
sti
sbb
les
and
dec
push
cmpsl
mov
leave
into
inc
mov
sti
adc
rcrb
xor
pop
fwait
shll
cmp
fcompl
cwtl
dec
mov
mov
in
in
mov
aas
adc
push
je
lret
dec
xchg
sbb
les
js
push
jo
and
mov
xor
repz
loope
imul
repz
inc
lret
dec
aad
shl
push
icebp
cmp
fmul
pop
fstp
scas
icebp
clc
mov
jle
repnz
std
push
test
xor
lcall
popf
xor
and
xchg
push
or
pop
iret
mov
jnp
xchg
push
cmc
xor
scas
xchg
xor
pop
iret
mov
in
imul
scas
repz
sbbb
loope
js
xlat
shll
fidivrl
inc
arpl
lea
mov
mov
dec
pop
inc
xchg
test
repz
xor
lods
mov
insb
stos
jp
or
into
sbb
and
scas
dec
or
pop
rolb
mov
jo
mov
ds
cs
adc
out
or
outsb
xor
push
je
notb
sub
jb
out
push
xchg
divb
add
xor
cmpsb
inc
cmp
ljmp
adc
out
pop
adc
nop
or
inc
xchg
xchg
addl
std
dec
jg
pusha
cmpsl
mov
popa
cwtl
xor
cmp
adc
sbb
cmpsb
push
cmpsl
cmp
mov
in
adc
push
xchg
add
sbb
push
sub
mov
mov
lods
lock
pushl
cmpsl
pop
jl
std
cli
test
cmp
push
jae
jo
fsubl
push
hlt
sbb
xchg
xor
lock
xor
mov
and
jnp
xchg
repnz
jb
incb
cmp
andl
pop
xor
nop
jmp
mov
inc
push
push
jl
js
test
xor
repnz
mov
pop
xor
cli
push
in
xchg
leave
imul
js
adc
mov
inc
or
xor
mov
mov
and
pusha
leave
fbld
test
pop
xchg
mov
pusha
test
flds
popf
mov
jae
cld
aad
sbb
sub
pop
pop
cmp
cltd
insb
mov
jmp
mov
insb
aad
sub
adc
pop
call
jg
mov
pop
ret
enter
pushf
mov
xchg
mov
sub
xorb
fidivs
lret
pop
inc
pop
test
clc
out
jle
or
sub
pop
and
jno
xchg
cmpsb
mov
push
pop
mov
out
xchg
mov
test
lcall
loope
pop
std
mov
idivb
xlat
jo
adc
daa
ljmp
add
add
cmp
mov
cltd
cmpsb
xchg
push
inc
aas
mov
add
imul
mov
out
dec
push
nop
lea
adc
leave
in
out
movzbl
leave
pushf
sbb
and
mov
in
repz
push
jbe
add
lcall
inc
jns
push
repnz
fucom
ss
push
xchg
fidivrs
testb
pop
nop
jns
aas
push
out
into
int
xchg
mov
loopne
nop
ret
mov
xchg
stos
cmp
in
imul
lods
inc
sub
inc
cmp
inc
cmp
jbe
aaa
sbb
push
out
pop
inc
xlat
push
mov
pop
ss
mov
and
rcrl
fadds
fadd
pop
std
mov
mov
dec
out
xor
adc
cltd
cltd
xlat
mov
cs
ljmp
stos
iret
aas
xchg
pop
inc
dec
aas
mov
pop
in
cmp
jo
and
pop
inc
adc
repnz
or
push
inc
cmp
dec
dec
cmp
pusha
cli
ja
xchg
mov
jg
xchg
pushf
xchg
sbb
shll
insb
push
aam
mov
test
mov
repnz
in
mov
daa
pop
mov
leave
inc
xchg
mov
pop
sub
cld
jb
cs
xor
mov
insl
pop
adc
jo
xor
pop
fimuls
add
or
into
add
clc
sub
jecxz
xlat
pop
mov
fcomp
mov
cld
mov
int
ret
popa
xor
out
dec
push
push
xchg
sbb
les
aam
outsb
xchg
xchg
sub
arpl
mov
pop
push
xlat
rorl
fdivs
or
pop
mov
imul
mov
and
mov
stos
mov
je
lock
je
sbb
xchg
inc
rcr
or
and
or
aaa
cld
jne
shlb
add
inc
inc
inc
cmp
loop
lcall
jle
dec
xchg
pop
cmpsl
adc
in
add
lods
sbb
and
ljmp
out
aaa
lahf
adc
and
pushf
into
out
push
loopne
je
pop
nop
adc
dec
push
shll
fisttpl
shrb
pop
insl
xor
and
and
movsb
sub
insb
data16
iret
movq
cs
psubw
scas
jl
test
push
cmp
pop
lea
dec
inc
xchg
in
test
push
push
xchg
decl
hlt
stos
aaa
and
cmpsl
adc
and
add
xor
aad
add
test
or
add
adc
push
dec
sbb
adc
xchg
int3
cmpsl
cwtl
imul
adc
or
cli
nop
lcall
stos
xchg
pop
movsl
add
adc
sti
mov
bound
fstpl
dec
ljmp
sub
jge
and
mov
xchg
stos
lds
dec
lods
out
mov
mov
inc
jnp
in
push
inc
pop
push
add
jne
push
sub
aam
sbb
add
cmpl
imul
add
pop
outsb
in
pop
shrb
push
adc
test
aad
leave
lcall
mov
sbb
push
and
jo
rolb
mov
into
adc
test
and
xchg
mov
xchg
fwait
popa
sbb
jns
inc
fnstenv
or
dec
in
sbb
outsl
xlat
cmpsl
cmpsb
shll
add
adc
imul
scas
das
adc
push
loopne
aaa
cmp
sarb
xor
xor
mov
lea
repnz
jp
ds
push
insl
nop
arpl
or
ja
push
push
push
xlat
pop
testb
loopne
sub
or
fnstsw
jmp
mov
fbld
jne
fsubrs
in
ds
movsl
imul
icebp
pop
mov
scas
or
mov
repnz
jg
cltd
inc
icebp
enter
add
arpl
cwtl
push
mov
adc
push
inc
cmp
mov
aad
xchg
nop
fisttpl
es
xchg
popf
mov
xor
icebp
pop
pop
insl
and
xchg
adc
dec
in
jnp
cltd
loope
cwtl
lret
sub
fyl2x
ret
jbe
aad
and
jo
xchg
pop
popa
ljmp
mov
push
cmp
cmp
popa
mulb
lds
add
clc
or
mov
pusha
loope
enter
sbb
clc
pop
pop
ret
loopne
inc
mov
sbb
std
sbb
and
pusha
sbb
cwtl
mov
push
and
push
ss
shlb
jge
lock
addb
loope
add
or
loope
mov
jg
jl
test
inc
mov
ret
push
test
std
cmp
and
ficomps
int3
pop
adc
lret
sti
jecxz
outsb
into
aas
sbb
aam
sbb
pop
insl
and
call
leave
sub
sub
inc
repnz
adc
stos
in
pop
repz
push
outsb
test
or
int3
cmp
pop
push
jno
cld
cmp
sub
lea
lods
rorb
jno
adc
push
mov
fs
xor
push
stos
sbb
fwait
ret
inc
mov
inc
dec
ljmp
cld
adc
xchg
sbb
push
sarl
or
aam
push
jle
fiadds
std
insb
jae
mov
orl
cltd
outsl
dec
jae
ljmp
xchg
divl
enter
inc
std
sbb
fwait
jb
inc
inc
fdivrs
fidivl
in
jne
imul
mov
sbb
mov
push
push
negl
fistpll
shrl
jo
dec
imul
xor
and
xor
mov
inc
pushf
pop
lds
out
pop
sti
mov
lcall
int3
jmp
fimuls
mov
lret
jae
repnz
das
adc
inc
inc
inc
imul
fnstsw
sub
mov
mov
outsb
les
mov
rclb
fucomp
add
and
loop
push
jae
sub
out
adc
gs
mov
pop
and
outsb
cmp
inc
fwait
test
mov
mov
pop
out
in
push
mov
jg
xor
pushf
in
ljmp
fstpt
pop
push
loope
out
leave
out
pop
test
adc
loopne
lahf
das
push
cmp
pop
bound
cmc
popa
insb
jo
cld
mov
daa
jb
sbb
inc
or
pop
jge
dec
adc
pop
scas
pop
mov
add
sti
bound
mov
jmp
sub
cmp
adc
pusha
aas
xlat
in
xchg
scas
lcall
sbb
std
lahf
and
out
popa
pop
stc
jmp
jno
cmpsl
cmp
inc
sub
lcall
xor
mov
sahf
out
jbe
pop
lock
adc
sbb
cs
pop
sub
sbb
sub
mov
call
xor
popf
jg
testl
call
inc
cmp
sahf
mov
int
jmp
inc
test
jns
jbe
out
mov
sub
aaa
mov
in
iret
or
adc
cs
repz
xor
mov
cmpsl
cmp
mov
testl
jge
in
loopne
aas
sbb
mov
push
sub
push
mov
adc
mov
cmp
aad
cmpl
outsb
add
xor
movsb
fimuls
pop
cli
sbb
movsl
popa
cmp
sti
push
push
push
ss
push
stc
cs
lods
sub
filds
adc
xchg
lods
rcll
cmp
fsubrl
imul
mov
push
jmp
cmp
and
lret
mov
cmp
mov
pop
or
mov
dec
push
pop
fwait
mov
pop
call
add
pop
xor
daa
jno
jne
inc
xor
sub
popa
insl
loope
push
xchg
cmp
in
cmp
sahf
push
mov
and
loope
sub
mov
add
addr16
test
adc
pop
mov
inc
xchg
adcl
inc
out
into
pop
and
mov
xchg
out
fmuls
out
inc
xchg
loope
imul
inc
lahf
mov
in
notl
mov
outsl
lods
sbb
mov
xor
clc
pop
mov
xchg
cmp
mov
clc
sarl
lret
add
mov
cmp
mov
mov
in
xchg
push
dec
fs
testl
sahf
je
int3
dec
mov
in
sub
cwtl
fistps
fcomps
mov
fs
fcmovnb
popl
incb
sahf
dec
stc
xchg
lea
bound
ficompl
call
add
jecxz
push
inc
popa
dec
dec
rorl
jo
test
adc
out
dec
in
sar
sbb
pusha
jmp
cmp
fwait
pop
xor
rorl
inc
outsb
sbb
int
jo
and
das
lcall
out
pop
jnp
pop
aaa
iret
out
xchg
jge
out
ds
lods
add
aaa
sbb
xor
imul
fsincos
mov
ja
cmp
or
mov
fwait
push
inc
adc
jl
pop
addr16
js
pusha
adc
xor
sub
bound
gs
mov
push
dec
push
sbb
xchg
js
mov
push
mov
into
cmp
dec
mov
mov
out
adc
xchg
int3
cmpsb
lods
stos
jne
sbb
lcall
xlat
lea
movsl
ficoml
adc
ljmp
rcrl
sbb
adc
popf
mov
popf
fimuls
mov
daa
cmp
push
mov
lods
test
imul
dec
push
xor
mov
jecxz
fs
sti
pushf
adc
pusha
pusha
jl
bound
je
sub
into
jnp
ret
test
pop
mov
mov
imul
xchg
roll
lret
inc
xor
push
jb
jb
xor
mov
inc
outsl
sbb
pop
inc
cmpsb
dec
push
dec
push
cmp
stos
in
or
push
jnp
add
hlt
fiaddl
or
enter
jecxz
and
jnp
adc
or
lds
inc
pushf
cmp
jg
jne
cmp
negl
sub
push
fisubrl
or
std
dec
pop
add
push
sbb
push
add
or
daa
xchg
mov
fists
jno
adc
stos
lret
test
adc
mov
jge
push
daa
ja
lahf
mov
sbb
and
xchg
cli
push
lea
sbb
xor
adc
jns
xorl
push
or
mov
lea
sbb
xchg
ljmp
mov
xchg
push
sbb
lock
in
pop
cli
leave
xchg
fnsave
movsbl
jnp
gs
jno
cmpsb
or
mov
xor
arpl
push
add
inc
int3
mov
out
gs
and
add
pop
pusha
sarb
xchg
je
popa
and
inc
nop
addr16
push
dec
xchg
cmp
jbe
into
adc
stos
push
or
bound
sbb
lea
je
inc
mov
ret
push
ss
and
sub
sub
jb
sbb
push
loopne
and
lahf
xlat
push
test
pop
shll
pop
sti
or
mov
lahf
adc
stc
jae
sbb
in
aaa
ret
jb
jns
pusha
fisubrs
sbb
jp
mov
adc
or
dec
icebp
push
mov
xor
ss
data16
out
adc
mov
insb
ds
icebp
out
imul
subb
add
xor
pushf
and
out
arpl
test
in
cmp
cmp
test
in
in
arpl
inc
mov
and
dec
sbb
fildl
lea
mov
xor
ss
out
stc
shll
in
jmp
xor
cltd
adcb
push
cs
fisubrl
dec
mov
sub
xchg
jb
int3
xchg
cmpsb
jg
mov
or
cmp
adc
dec
mov
push
repz
iret
cs
stos
sahf
pop
push
sub
ja
sub
js
mov
cmp
and
xchg
out
push
fcomi
cli
sub
jge
es
repz
dec
pop
xlat
int3
pop
mov
inc
mov
icebp
pop
sbbb
xor
dec
fstpt
popa
push
mov
or
cmp
inc
inc
gs
stos
xor
or
cmpsl
jnp
in
out
in
jmp
push
aad
dec
mov
outsl
test
imul
addb
mov
out
icebp
mov
mov
cmpb
mov
sbb
mov
mov
pop
pop
pop
sbb
mov
hlt
aam
pop
inc
mov
lahf
mov
mov
sbb
mov
outsl
dec
jno
add
add
mov
push
notrack
cmp
into
mov
fdivs
inc
xor
jnp
mov
subb
dec
mov
jno
fidivs
sbb
adc
ficomps
aas
mov
add
insl
mov
lods
dec
and
cmp
icebp
leave
std
push
out
fcoms
cld
popa
lret
cmp
std
mov
push
xchg
test
and
cmpsb
aad
add
aaa
hlt
inc
inc
stos
adc
ds
into
sub
adc
loop
js
xor
pop
xchg
pushf
xor
fwait
dec
dec
inc
mov
lcall
fisttpl
cld
mov
les
cmp
xor
dec
pop
xchg
mov
pxor
test
out
lahf
into
icebp
push
mov
push
jmp
pop
adc
inc
call
xchg
call
popa
push
sbbb
in
insl
pop
push
ret
cli
pop
je
push
movsl
fidivl
or
push
pop
into
push
notl
rolb
repz
mov
cmp
sub
jmp
and
push
pop
mov
lea
push
lock
inc
push
jns
dec
cmc
fisubrl
xorl
dec
jl
inc
out
insb
jb
fldcw
xor
cs
inc
cmp
mov
rcl
xchg
jmp
ja
andb
inc
pop
aad
ja
sti
imul
lcall
ja
and
push
lahf
das
popa
idivb
jle
mov
nop
xor
mov
das
jno
jo
dec
pusha
and
adc
in
data16
subb
jbe
outsb
out
lret
mov
xchg
inc
xor
xchg
cwtl
mov
int3
inc
repz
push
dec
mov
pop
pop
cli
jecxz
inc
shr
inc
sub
push
std
adc
out
fs
add
inc
pop
mov
lods
cmpsb
add
repz
cmp
xchg
inc
cmp
pop
dec
xchg
adc
jle
popf
sahf
fldenv
sub
adc
push
push
adc
stos
addr16
jns
push
aas
inc
xchg
pop
enter
gs
adcl
scas
div
js
adcl
mov
fsubs
je
inc
fsubr
insb
xor
inc
pop
xchg
adc
pop
pop
out
inc
loope
testb
clc
cmc
mov
mov
cmpsb
aam
pop
ds
in
test
shll
add
rorl
sub
repz
enter
pop
mov
fnstenv
jge
dec
push
arpl
lods
pop
shll
in
jne
into
pusha
in
inc
mov
adc
push
jno
inc
cli
fbstp
xchg
adc
pop
lods
inc
rep
mov
popf
inc
cmp
lods
pop
xor
dec
pop
notb
sahf
pop
push
jmp
xchg
in
xchg
testb
insl
loopne
inc
fsubrs
pop
sbb
inc
inc
inc
mov
daa
test
rcll
jno
jae
mov
jg
repnz
shlb
clc
addl
outsl
stc
sahf
add
push
pop
das
arpl
jecxz
add
in
or
in
push
mulb
cmp
jne
dec
and
adc
mov
xchg
popf
cltd
push
sub
inc
inc
subps
xchg
enter
cld
fdivrs
neg
mov
jmp
mov
cld
pop
add
push
xlat
mov
xchg
and
push
imul
mov
add
adc
mov
pushf
shlb
add
sub
inc
mov
mov
lods
inc
mov
and
and
sbb
ret
mov
jp
mov
cld
push
aaa
sbbb
imul
sbbb
xor
mov
jb
decb
push
inc
mov
scas
cmp
cld
mov
dec
sub
sub
in
mov
xchg
test
sbb
rcr
jl
fisubl
mov
mov
lret
inc
sti
movsl
out
cli
les
cmp
inc
imul
mov
fistl
stos
and
sbb
dec
aam
icebp
outsb
mov
mov
scas
mov
mov
dec
xchg
add
pop
sub
push
das
push
xchg
idivb
fwait
jl
test
maskmovq
notl
jnp
sbb
inc
dec
je
lods
and
movsb
cli
repz
mov
nop
roll
push
jbe
mov
repnz
inc
imul
pop
cmp
mov
stos
dec
enter
mov
xor
add
ljmp
xchg
mov
inc
lcall
ss
inc
scas
mov
mov
mov
dec
adc
mov
pusha
dec
cwtl
clc
ja
jae
mov
ljmp
ljmp
fwait
mov
dec
inc
cmp
dec
mov
out
dec
cmpsb
or
mov
mov
loope
jne
leave
pop
out
sbb
push
rcrl
xchg
add
sbb
cmp
or
inc
jl
loop
jo
inc
clc
js
push
push
lret
jmp
jo
dec
or
fcoml
sub
cmp
js
push
sub
sub
dec
or
das
pusha
cwtl
xchg
pop
inc
les
test
jbe
int
inc
sahf
aas
sti
mov
out
imulb
fxch
and
fidivl
lahf
inc
ficomps
sbb
aaa
sbb
mov
popf
xchg
repz
jg
sbb
jns
xchg
je
ds
and
fucomip
mov
nop
mov
mov
sar
xchg
mov
sub
and
push
push
jmp
cmp
call
int
sbb
repz
incl
clc
pushf
adc
pop
insl
inc
enter
xor
inc
hlt
fadds
push
jo
add
xchg
subb
adc
ja
std
xor
cmpsl
mov
pop
mov
push
leave
xchg
enter
in
inc
mov
fisubl
sahf
fistpll
adc
mov
lar
ds
test
mov
mov
sbb
popa
dec
inc
loopne
stc
dec
or
jo,pt
jae
push
cmp
fucomip
add
cmp
jmp
subb
test
push
mov
mov
je
xchg
and
xor
xchg
lods
mov
dec
jns
mul
and
inc
cli
mov
push
dec
hlt
xor
filds
pusha
daa
mov
into
loop
insl
pop
or
jp
ret
cmp
leave
sbb
inc
dec
xor
or
out
mov
sbb
xchg
insb
adc
push
rorl
xor
ds
push
push
pop
mov
clc
lret
orb
sar
sub
pop
sub
dec
mov
dec
add
mov
repnz
pop
jge
mov
push
pop
movsl
sbb
lret
loope
mov
xchg
ds
dec
mov
lods
cltd
lret
xchg
cli
mov
adc
loope
stc
es
add
push
insb
cmp
jmp
fnstcw
fistl
xchg
mov
lret
adc
lahf
xlat
lcall
dec
rclb
push
mov
xor
popf
stos
test
jne
stc
cmp
stos
mov
and
sti
xchg
sbb
out
mov
inc
pusha
ds
xchg
es
sub
pop
push
jno
mov
out
aaa
lret
inc
scas
xor
in
xchg
flds
jnp
shr
imul
mov
inc
cmc
sbb
idivl
mov
fimull
les
sahf
sbb
out
adc
ret
movsl
int3
das
enter
fbstp
push
push
iret
pop
mov
fld
or
ror
imul
and
mov
jle
jg
insl
pop
mov
dec
sbb
and
cmp
add
cmp
in
lock
sti
std
insl
jle
pop
lds
pushf
loopne
movsl
fldcw
orb
jg
gs
roll
pop
push
popa
out
sub
cltd
in
sbb
pop
sub
out
cmp
je
popf
repz
scas
stc
mov
mov
xlat
clc
hlt
fwait
mov
push
fimuls
stos
xor
xor
into
loop
adc
movsb
lret
mov
push
lea
nop
ja
mov
mov
add
pop
adc
iret
xor
fnstcw
xchg
mov
loopne
pop
pop
inc
lret
fadd
loop
lret
shlb
sbb
neg
shlb
add
icebp
push
mov
ja
xchg
ret
push
xor
pop
repnz
push
nop
inc
jg
mov
xchg
mov
icebp
in
jno
mov
or
insb
loopne,pn
xchg
inc
int3
nop
jnp
pop
outsb
es
mov
imul
lret
sub
lods
push
jecxz
mov
and
jge
mov
clc
lods
xchg
push
je
out
cltd
aad
mov
cmpsl
xchg
adc
fidivrs
mov
loope
mov
jae
adcb
push
and
in
mov
jle
dec
int3
cmp
xlat
leave
mov
outsb
fmuls
and
mov
xor
adc
jae
jo
xor
faddp
push
je
mov
fsubl
cld
push
cmp
xchg
arpl
xor
mov
mov
pop
lcall
test
xchg
mov
data16
mov
fwait
push
or
inc
lods
test
popf
or
xlat
add
repz
les
ss
std
mov
jb
mov
fcompl
or
ret
inc
iret
enter
arpl
hlt
mov
inc
and
aas
out
jle
mov
bound
data16
jecxz
out
push
dec
jp
jnp
cwtl
dec
add
or
jnp
pop
pop
mov
cmpsb
mov
sbb
xchg
ret
mov
out
shll
out
pop
iret
fiadds
cmp
and
shlb
lock
sub
fistl
daa
int
hlt
ret
movl
enter
push
or
pusha
lcall
mov
fwait
jb
dec
and
ds
mov
xor
push
xchg
sbb
inc
lds
or
adc
fbld
dec
pop
lret
dec
mov
inc
scas
call
xor
adc
fisttps
adc
mov
jle
jo
dec
lods
ret
mov
into
aaa
jno
js
hlt
mov
jns
jae
jno
push
imul
rcl
pop
add
pop
or
mov
dec
push
xchg
fidivs
shrl
andl
je
cmpsb
mov
push
sahf
mov
dec
push
repz
mov
push
enter
hlt
sub
cmp
and
jbe
mov
inc
test
cmp
push
sbb
test
push
inc
cmpsl
inc
cmpsl
jg
mov
mov
cmpsb
inc
stos
fstp
add
gs
div
cld
shll
cmp
add
dec
cmpsb
jbe
je
cmpsb
lock
jae
sub
mov
out
in
pop
lcall
sub
lods
aaa
pop
fsubrl
stos
push
shrl
and
mov
xchg
mov
mov
in
lds
mov
in
or
pop
in
les
pop
jmp
imul
mov
mov
inc
push
aam
xchg
stos
xchg
and
in
mov
test
sub
leave
jns
decb
jg
sahf
pop
or
jecxz
jg
jnp
sub
imul
cmp
inc
and
xor
test
jp
inc
cli
xchg
mov
lea
pop
push
or
xchg
sbb
sbb
pop
xchg
sbb
clc
gs
popf
shll
adc
lret
test
stos
cmp
push
mov
shll
js
xchg
hlt
js
mov
lods
in
push
cwtl
jnp
adc
aas
sbb
aaa
mov
adc
and
dec
rcrl
std
les
out
das
pop
mov
mov
in
repnz
xchg
out
les
sub
mov
fsubs
push
nop
and
xor
les
cli
cmc
insl
gs
fnstenv
inc
mov
int3
pop
push
lret
out
adc
aaa
test
fbstp
icebp
movsb
in
adc
add
aam
addb
jne
push
ffreep
je
bound
pop
jo
push
add
out
daa
mov
mov
std
fcomps
inc
adc
push
pusha
lock
adc
dec
subl
mov
mov
test
jne
cltd
pusha
push
or
inc
rorb
icebp
or
cmp
loop
add
jnp
fimull
lods
mov
cmpsb
shrl
sar
xor
fcom
movsb
xor
sub
adc
pop
stc
mov
jl
cmp
sahf
in
iret
cltd
shl
incl
movsb
popf
lock
mov
fcmovb
scas
jl
repnz
jns
jmp
loop
mov
adc
mov
notl
xchg
jbe
icebp
xor
bound
ss
cmpsb
sbb
adc
xchg
cmp
or
rclb
fldt
incb
mov
in
sbb
fistpll
adcb
int
cmpb
xchg
and
xchg
jb
jge
sbb
aam
or
sub
ss
test
in
pop
scas
shll
leave
xchg
outsb
mov
popf
stos
mov
cmp
popf
cli
inc
ret
cmpsl
outsb
sbb
mov
lods
xchg
push
mov
mov
ret
lret
jle
push
repnz
insb
add
xchg
test
subb
dec
xor
test
out
add
loopne
mov
insl
jno
dec
mov
push
inc
mov
rcrb
xor
addb
iret
ds
cld
cmp
outsb
xchg
pop
stos
xor
dec
mov
or
fdivrs
xor
hlt
insb
stc
pusha
cmp
mov
in
jp
fldpi
cltd
xchg
inc
ss
xchg
leave
pop
ficoms
xor
mov
testb
ljmp
sub
jbe
cmp
mov
pop
pushf
popf
sti
xor
jno
xor
xchg
dec
xchg
and
jne
xchg
mov
outsl
xchg
mov
jae
out
or
xchg
cmp
shrl
xor
repnz
or
outsb
jge
and
aaa
mov
add
cmp
in
cltd
in
sub
push
or
loopne
and
xchg
lods
xor
mov
fneni(8087
mov
push
mov
mov
add
out
push
je
pop
mov
lea
pop
lock
outsl
cmp
hlt
outsl
xchg
sbb
sbb
lahf
mov
jl
out
cmpb
xor
mov
pop
pop
push
mov
mov
inc
cmp
aad
push
ret
cwtl
xchg
sub
rcll
sub
xor
inc
mov
mov
out
xchg
adc
and
mov
aaa
gs
nop
in
pop
mov
pop
sti
cmp
popf
jp
cmpsb
mov
push
cld
xchg
xchg
jae
mov
mov
inc
jo
sahf
sahf
xor
int
fwait
or
cmc
push
adc
dec
push
rcrb
xchg
fs
add
xor
testb
pop
popa
stos
mov
dec
inc
add
fistl
xlat
mov
add
xor
test
adc
xchg
mov
pop
lods
int
inc
arpl
pop
mov
mov
fwait
insl
leave
push
retw
mov
js
ja
int3
out
mov
lock
out
sarb
mov
mov
lods
mov
mov
and
stos
add
xchg
xor
lcall
arpl
or
lea
mov
push
stc
cmp
jmp
test
cs
push
fdivr
adc
fistpll
push
sbb
insl
cmp
mov
and
xlat
pop
stos
test
xchg
addb
and
jnp
sbb
fcom
stc
jnp
sub
sbb
stos
cmp
cmp
inc
movsb
lock
or
or
xchg
scas
adc
popf
xchg
mov
xchg
je
ljmp
pop
inc
xchg
jne
pop
loop
mov
fidivl
movsb
mov
inc
test
rcrb
push
aaa
cmpsb
sbb
gs
movsb
inc
shll
ret
cld
mov
test
mov
jg
icebp
ret
add
mov
mov
sbb
jbe
dec
pop
pusha
fistl
lods
lret
pusha
and
ss
fldt
stos
xchg
loope
jno
loope
inc
repz
aam
jb
add
loop
jg
and
cmp
pop
mov
mov
dec
lock
or
js
andl
lahf
sbb
push
invd
add
leave
cwtl
jg
cltd
sbb
push
sbb
xor
mov
ja
adc
push
jg
or
lcall
int3
cltd
pop
xchg
xorb
pop
push
mov
aaa
lock
sbb
ret
ljmp
push
push
mov
push
dec
mov
mov
cmovp
inc
sub
insl
stc
xchg
cwtl
lds
lahf
mov
add
pop
mov
mov
xchg
push
imul
jmp
xorb
jbe
filds
les
or
jge
jmp
push
cmp
dec
xchg
stos
pop
add
ret
or
sar
mov
movsl
filds
xchg
jmp
test
mov
clc
mull
xchg
bts
vpaddusb
ret
push
jle
mov
mov
mov
adc
es
fs
sbb
sbb
mov
cs
js
lods
popf
cmp
jb
repnz
inc
mov
xor
out
sub
jb
inc
cmp
fidivrs
add
push
jl
push
xor
push
xchg
insl
bound
fwait
jmp
mov
xor
insb
pushl
pop
lds
pop
push
scas
jp
cmp
test
cmp
jnp
pop
xchg
adc
and
jno
test
pop
pop
loop
out
cmp
cs
xor
mull
rclb
orb
push
ds
jb
inc
jns
adc
fstp
fwait
rcrl
mov
xchg
xchg
into
pop
or
cwtl
std
dec
jp
cmp
rcll
mov
aas
adc
pop
mov
cmp
inc
iret
outsl
and
leave
or
or
subl
mov
lods
cli
sbb
sub
imul
and
add
dec
or
scas
sub
pop
mov
lods
mov
jmp
cwtl
outsb
shll
fs
mov
lods
xchg
andb
inc
push
or
inc
sub
pop
cmpsl
nop
negl
movsl
sub
imul
aas
or
mov
mov
pop
sbb
loopne
sub
test
cmp
sub
add
shr
cmp
aaa
add
shll
insl
push
mov
sbbb
cmp
cmp
test
xchg
loop
and
lahf
mov
shrl
dec
fadds
cmc
inc
int3
in
scas
pop
mov
repz
fnsave
mov
dec
dec
or
fildll
imul
mov
sbb
js
outsb
pop
fcoms
les
jp
pop
in
xor
and
and
mov
pop
repz
es
leave
js,pt
pop
imul
sbb
adc
arpl
cmpsl
test
and
mov
mov
hlt
insb
popa
and
pop
lcall
sub
dec
test
ss
jo
roll
push
ficoms
cmpsl
sub
in
mov
js
xchg
clc
gs
mov
push
jmp
cld
pop
dec
push
in
xchg
stos
loop
or
cmp
daa
inc
insb
mov
test
stos
jne
push
sub
lcall
jge
xchg
push
xchg
movsl
pop
dec
jo
adc
and
add
hlt
mov
xor
scas
test
insl
or
lret
cwtl
push
stc
pop
xchg
sahf
cmp
sti
inc
mov
mov
push
xchg
and
imul
aaa
mov
jne
aaa
sub
inc
insl
aaa
mov
jb
out
xchg
call
push
sub
xchg
jnp
ja
movsl
lcall
cld
in
ss
push
je
mov
xor
jae
adc
stc
mov
inc
add
sarl
jne
out
add
gs
in
popf
jle
pushl
mov
daa
push
xchg
mov
aad
push
cmp
dec
jg
jmp
jne
dec
xor
jp
xor
jmp
mov
sub
jns
mov
lds
cmp
ret
and
mov
inc
shl
sbb
aad
adc
adc
mov
jno
lret
add
test
scas
mov
xchg
je
movsl
mov
adc
mov
call
mov
mov
push
shll
dec
pop
lret
xchg
aam
xchg
cmp
mov
lea
data16
stc
adc
test
imul
repz
in
mov
notl
leave
jg
mov
addl
mov
repnz
stos
adc
in
lret
xor
test
fdivrp
incl
shlb
movsl
cwtl
ret
lcall
xchg
mov
lea
xchg
xor
ljmp
mov
or
enter
je
leave
insb
pop
sbb
mov
mov
aad
dec
mov
xchg
mov
divb
xlat
movsl
dec
sahf
mov
outsb
sub
mov
pop
into
push
into
shll
aad
pop
in
push
inc
push
insl
nop
in
add
sub
lods
in
std
mov
stc
lods
das
jle
push
jbe
push
popa
mov
out
aad
pushf
push
aaa
out
pop
mov
cs
scas
out
int3
dec
call
pop
or
loope
push
xor
mov
and
fmul
mov
fildl
fsubr
movsl
dec
pop
mov
pusha
ds
rcll
les
sub
fsqrt
ret
jge
stos
lahf
or
dec
or
imul
inc
inc
push
xchg
into
nop
mov
xor
std
outsl
mov
test
in
imul
mov
aam
cmp
subb
test
jl
lahf
push
sbb
out
aaa
xor
lods
jae
jae
or
mov
insb
addr16
dec
jns
mov
js
or
test
jne
mov
outsb
sub
and
subb
pop
int
xor
dec
fs
xor
adc
push
inc
mov
pushl
cmp
dec
mov
dec
stos
lods
insb
add
jae
sbb
xor
ljmp
dec
mov
push
xchg
inc
push
lahf
je
fnstcw
mov
pop
sbb
aas
fcomps
mov
push
push
push
hlt
add
pop
fsubs
pop
fistps
test
das
sbb
add
inc
dec
pop
fcomps
insb
loope
pop
ljmp
lret
in
xchg
jle
jmp
stc
out
xor
sbb
mov
in
stos
rcrl
jmp
repz
icebp
add
sbb
gs
int
dec
ja
into
pushf
dec
icebp
pop
leave
cmpsl
fildll
push
clc
out
add
and
and
inc
loope
mov
and
aad
ss
pop
into
pop
sub
jg
fwait
jbe
popf
xor
je
or
insb
mov
outsb
adc
mov
stmxcsr
xchg
push
pop
fdivr
mov
iret
mov
inc
jge
addr16
stos
cmp
adc
orl
fwait
cmc
jmp
popa
sarl
in
adc
and
int
movsl
pop
outsb
xchg
push
xor
cmp
and
clc
mov
in
pop
das
scas
xchg
stos
popa
ja
jecxz
pop
mov
sub
cmc
out
lods
dec
mov
and
call
pop
cli
das
cmpsb
jnp
jg
andb
rcll
sub
ficoml
adc
xchg
shlb
add
rcr
lock
dec
clc
mov
and
aas
out
ret
pop
dec
pop
and
and
cwtl
pop
in
xchg
cmp
mov
xor
imul
aam
mov
cmpsb
inc
cltd
js
jg
outsb
or
cmp
mov
mov
mov
jmp
mov
call
out
in
es
and
mov
nop
lods
scas
lods
jge
add
mull
cwtl
mov
cmp
out
xor
ss
xor
mov
clc
test
mov
test
pop
mov
push
cmp
pop
mov
nop
xchg
adc
icebp
mov
mov
imulb
fdivrs
movb
dec
loopne
or
iret
or
cld
stc
xor
test
fcomps
pop
fsubs
imul
sbb
pop
cmp
push
loop
mov
std
mov
add
clc
mov
imul
xchg
xchg
lret
rol
xor
sub
sub
sub
fcoml
clc
dec
jp
lcall
or
lahf
js
hlt
rol
xor
idivb
xchg
cmp
jae
iret
and
mov
push
and
cltd
out
xchg
in
xrelease
loope
repnz
xchg
add
loope
data16
js
add
out
lds
mov
and
jbe
mov
fwait
mov
fcoml
test
jge
add
push
popf
sbb
call
jae
addr16
in
xchg
sub
mov
xchg
nop
in
sub
movsb
clc
mov
adc
loopne
jns
dec
pop
nop
or
adc
adc
mov
inc
popfw
inc
lds
jmp
add
mov
jo
sarl
jp
movsl
mov
pop
das
xchg
cmpsl
aaa
dec
jg
in
mov
jno
jecxz
jo
pop
dec
adc
sti
dec
dec
push
jle
cltd
push
sub
rcrl
sbb
push
or
fiadds
pop
subb
dec
movsb
pop
test
or
mov
or
add
jbe
loop
in
inc
popa
sbb
push
icebp
lret
and
iret
nop
push
jo
dec
and
mov
lret
mov
nop
leave
mov
sub
jecxz
adc
mov
lret
inc
jne
shr
xor
pop
mov
jl
test
xchg
inc
faddl
outsl
js
xor
filds
push
cld
out
dec
jae
push
xchg
insb
pop
dec
out
out
mov
mov
dec
cmp
mov
adc
inc
mov
pushf
xorl
stos
pop
incl
mov
xor
faddl
shlb
mov
hlt
jg
xor
push
cmp
ss
hlt
add
inc
jno
dec
lcall
addr16
fnsave
or
stos
jle
les
cmpb
sub
push
pop
jge
outsl
dec
std
fdiv
gs
aad
mov
sbb
rcl
mov
sbb
out
test
out
or
cmp
sbb
fdiv
cmp
dec
pop
rorb
into
cmp
clc
add
xor
shl
jnp
push
shl
shlb
or
lods
ror
int3
fisubrl
push
mov
xchg
push
loope
sub
mov
sbb
lods
lea
dec
shl
inc
or
mov
cli
pop
imul
or
cmc
mov
data16
inc
mov
add
orb
add
inc
mov
outsl
daa
popa
imul
jnp
fsubl
pop
jno
ret
aas
add
test
mov
in
pop
dec
test
mov
mov
jnp
stos
inc
push
clc
dec
mov
adc
push
jae
push
xchg
test
jns
js
mov
pushf
jge
adc
das
inc
fiadds
pop
outsb
fcomi
loop
push
add
jnp
pop
fnsave
jmp
mov
inc
daa
out
loop
movsl
fwait
or
xchg
adc
push
loop
in
push
pop
adc
push
int
adc
daa
lea
pusha
mov
xchg
jns
inc
movsb
int3
push
add
aas
iret
stc
test
out
or
dec
jl
mov
push
push
inc
test
stos
enter
jo
push
sbb
add
std
aad
repnz
adc
fcoml
iret
dec
xor
inc
adc
mov
mov
cli
stc
mov
mov
in
cmpsb
stos
stos
cltd
push
aad
mov
mov
adc
pop
mov
sbbl
adc
aam
inc
fsts
xor
xor
mov
cmp
addb
pop
inc
xor
imul
mov
mov
shrb
sub
jnp
fcmovnu
cmp
sbb
xor
addb
and
sub
loop
sub
cld
push
mov
push
fistps
adc
mov
ds
or
inc
adc
stc
psubb
cmp
out
sbb
inc
push
ljmp
rorl
fdiv
int
lahf
ljmp
out
leave
pop
das
cmovne
pop
aaa
xchg
jnp
cmc
movsb
fstps
pushf
aaa
xor
adc
lahf
faddl
insl
xchg
aaa
jge
push
jb
xchg
mov
hlt
jge
scas
xorb
mov
cmp
mov
sub
adc
sub
and
out
data16
loope
jecxz
incl
inc
test
pop
int
or
dec
std
in
adc
movsl
cmc
fisttpl
je
jno
dec
loopne
cmp
nop
adc
inc
rclb
inc
mov
sub
repz
in
pusha
pop
je
mov
into
out
jnp
aam
mov
out
ffree
lret
js
xchg
sub
addr16
adc
leave
dec
pusha
mov
mov
mov
hlt
mov
or
fstp
jne
int
push
in
jle
inc
loope
push
aam
movsl
cmp
xor
ljmp
xchg
sbb
mov
imul
mov
jbe,pn
mov
pop
insl
inc
repnz
in
mov
sbb
jle
shl
xchg
movsl
mov
into
or
negl
mov
sbb
push
or
inc
sbb
sub
insl
fdivl
inc
ds
scas
outsb
shlb
mov
int
xchg
inc
inc
mov
test
lcall
adc
adc
test
sbb
sbb
repnz
mov
lea
and
out
push
fs
ljmp
push
int3
imul
pop
mov
push
xchg
div
ss
in
stos
mov
in
repnz
in
frstor
mov
scas
pop
leave
push
mulb
mov
sbb
and
ss
adc
xchg
jbe
pushf
mov
mov
inc
les
in
scas
shlb
stos
loop
lret
jae
jae
rolb
stos
fidivs
out
jb
jle
xor
sub
ja
mov
sub
stos
adc
jns
lret
cld
mov
cmp
add
jne
icebp
jne
xor
adc
stos
fwait
rolb
cld
sub
sub
sbb
int
mov
mov
inc
lods
mov
movsl
jmp
add
adc
mov
pop
or
sbb
cmp
imul
push
icebp
dec
stos
out
movsb
pop
mov
std
push
push
out
mov
mov
mov
pop
int3
out
jno
pop
and
in
test
mov
or
jge
jno
add
loopne
pop
sbb
dec
fsub
add
cmp
into
mov
mov
enter
push
mov
cli
mov
jl
xchg
insl
aas
jno
mov
pop
cmpsl
xchg
adc
loop
inc
stos
jns
mov
pop
fwait
mov
sub
mov
pop
pinsrw
or
mov
jbe
insb
idiv
add
mov
sbb
mov
mov
int
xor
lods
add
sub
imul
cld
jmp
les
adc
sbb
adc
std
in
pop
test
div
aad
and
rorl
cltd
ja
rorb
inc
jg
outsb
add
cmpl
fidivl
pop
outsl
and
mov
ret
cmp
sahf
insb
pop
mov
cmp
std
in
pop
pop
std
push
xchg
push
js
push
push
lock
and
inc
fistpl
fstpl
xchg
xchg
push
mov
cmp
loopne
sub
adc
adc
dec
jecxz
dec
cmpsl
push
mov
xor
repnz
ja
push
cltd
push
daa
test
pop
rcr
scas
pop
pop
imull
sub
sbb
xchg
or
movsl
push
out
scas
sti
popf
pop
and
pop
push
scas
mov
xchg
pop
xchg
ljmp
int
xor
xchg
xor
imulb
loope
out
out
aam
ljmp
xor
xchg
cmpsl
int
mov
mov
cltd
dec
std
cwtl
lret
mov
sbb
scas
add
adc
mov
cmpsb
push
in
movb
scas
push
pop
mov
sbb
clc
sub
xor
cli
cmp
pop
enter
mov
pop
sbb
fcomps
mov
shr
std
jge
les
xchg
je
sub
sbbl
insb
or
out
inc
mov
in
push
out
in
daa
into
add
jg
or
jae
insb
fstpl
call
cmpsl
fistpll
lds
repz
add
xchg
push
xchg
testb
mov
sub
dec
insb
xorb
fcmovu
inc
sbb
xchg
popa
je
inc
arpl
fbstp
jbe
ds
mov
dec
or
xor
mov
push
inc
pop
aad
and
pop
or
xchg
sub
divl
fs
pop
cli
dec
inc
mov
mov
add
ds
pop
fidivs
push
xor
jnp
fldl2t
adcl
xlat
dec
adc
ljmp
sbb
daa
fmull
inc
jmp
hlt
mov
jg
inc
push
repz
xchg
cmpsl
test
sahf
daa
stc
xorb
daa
repz
sbb
fisttps
stos
xchg
in
fwait
in
int
das
ret
sbb
pop
mov
fcmovb
pop
inc
push
push
jecxz
mov
inc
scas
pop
adc
aaa
and
push
fistpl
fsubs
inc
cld
pop
and
cmpl
movsb
cld
fmul
adc
insb
test
jecxz
jnp
inc
mov
addb
cmpsl
xor
sub
mov
inc
daa
sbb
js
add
jecxz
jecxz
mov
sarb
es
xor
rcll
and
sbb
shr
negb
mov
loopne
int
fldl
in
mov
inc
bound
repnz
jge
addr16
xlat
mov
sti
fisubrl
pop
push
jb
popf
inc
xor
or
add
mov
sahf
pop
iret
mov
scas
push
and
xor
in
int3
xor
addr16
and
lods
xchg
jge
and
ret
rcrb
pop
push
and
and
repnz
fcompl
or
nop
xchg
inc
int
mov
xchg
icebp
call
cmp
xchg
and
adc
cld
aas
mov
mov
add
fs
jg
repnz
dec
and
es
mov
xor
in
xor
pop
jbe
frstor
inc
push
les
sub
add
mov
inc
adc
gs
mov
sbb
inc
cmp
xchg
clc
push
or
enter
sahf
data16
sti
add
push
ljmp
mov
cmpsl
roll
pop
inc
mov
cmp
jne
imul
push
and
push
das
and
stc
inc
bound
shl
ljmp
scas
dec
inc
dec
push
adc
ss
or
std
or
neg
mov
mov
sub
icebp
insl
adc
mov
daa
repz
nop
hlt
enter
scas
and
daa
test
mov
or
dec
cmpsb
sahf
out
daa
call
jns
push
mov
int3
jmp
or
idivb
fbld
shlb
jg
std
loope
mull
adc
nop
ret
fldcw
and
testl
fsubl
stos
xchg
push
cs
iret
cmp
dec
test
dec
jnp
rcr
or
in
orl
mull
into
outsb
mov
pop
fisubrs
jae
add
jb
in
xchg
push
mov
adc
sbb
shr
mov
addb
ljmp
jecxz
jo
lret
jp
sub
xor
jg
pop
adc
mov
mov
xor
or
jge
scas
push
push
aam
mov
push
mov
sbb
jp
lret
pop
sbb
cltd
ljmp
push
mov
jle
pop
cmpl
adc
pop
dec
fcoms
leave
adc
mov
pop
add
or
inc
out
push
push
leave
stos
scas
sub
ss
pop
cmpsl
repz
mov
loope
outsl
add
lock
mov
bound
mov
popf
pop
jl
stc
pop
in
stc
leave
push
push
adc
es
xor
xor
and
xor
mov
lds
mov
or
scas
add
xchg
dec
push
lea
adc
dec
popf
mov
mov
xchg
stc
out
inc
test
sbbb
repnz
sbb
int
push
faddl
in
call
cli
mov
jmp
sbb
out
pop
addr16
mov
imul
cmp
dec
dec
test
loop
popa
mov
fwait
jnp
fwait
js
test
arpl
mov
jno
jle
sbb
push
add
jbe
scas
xchg
mov
insl
mov
cmp
mov
and
jns
pusha
test
mov
pop
mov
inc
mov
mov
mov
stc
mov
mov
xchg
mov
dec
lahf
dec
popa
dec
lahf
popa
adc
or
push
jne
in
in
mov
sbb
nop
test
popa
scas
mov
xlat
sub
popa
aam
mul
mov
dec
sbb
pop
arpl
sbb
popa
jp
sub
decl
push
fwait
bound
popa
mov
iret
in
lock
push
mov
adc
mov
test
insl
push
push
lcall
cld
mov
mov
jb
into
mov
imull
fwait
cmp
sbb
les
or
and
fnstenv
or
pushf
rorl
lret
sbb
and
sub
loope
xor
jmp
jle
mov
or
test
in
test
fs
lret
or
enter
pop
dec
mov
pop
mov
pop
xchg
fwait
divl
jbe
mov
jl
and
pop
hlt
push
cmp
mov
adc
fwait
scas
mov
xchg
xchg
inc
mov
xchg
in
fs
push
outsl
pop
and
notl
sbb
jnp
lret
or
bound
mov
scas
imul
popf
fsubr
push
or
inc
and
pusha
subb
jnp
inc
lret
jbe
ds
add
mov
mov
insl
sub
mov
popa
mov
or
orl
mov
rcrb
out
popf
jbe
or
call
jnp
xor
int3
ret
mov
xor
sub
cmp
inc
mov
and
pop
dec
loope
cmc
scas
xor
sti
popf
cmc
mov
pop
popa
je
repnz
mov
test
out
repz
add
inc
xchg
les
cld
rcr
fiaddl
dec
jbe
repz
ret
and
push
inc
cwtl
popf
sub
and
or
jle
mov
aaa
xchg
repnz
xchg
push
es
mov
imul
lods
outsl
xor
cmc
add
nop
imul
cld
xor
out
addl
or
sti
fdivrs
cmp
cs
int3
in
push
and
lret
and
cltd
xchg
jmp
aas
js
and
pop
jo
xchg
and
lret
out
arpl
in
movsl
sbb
dec
cmpsl
dec
jmp
cwtl
daa
sbb
hlt
movsb
dec
orb
out
xor
aad
out
js
push
stos
xchg
aaa
mov
out
bound
imulb
jae
cmp
cmp
jb
mov
mov
test
xchg
mulb
loope
or
sub
cwtl
scas
ja
adc
cmp
sarl
sub
mov
call
adc
icebp
cmpsb
fcmovb
gs
mov
sub
ljmp
rcll
dec
ret
lods
andl
mov
stos
in
ficompl
inc
daa
adc
mov
std
cmpsb
nop
jmp
out
push
bound
mov
loope
lcall
cmpsb
cmp
popf
push
mov
outsb
mov
mov
mov
jg
ret
lcall
sbb
repnz
pop
cwtl
mov
jne
mov
popf
cmpsl
bound
sbb
pop
ja
adc
ret
insl
rol
jo
scas
lret
loop
test
icebp
leave
push
pop
fmul
jno
add
test
popaw
lcall
out
sub
jnp
aad
add
leave
cwtl
in
int3
sub
pop
aad
clc
mov
cwtl
jnp
mov
fsubs
mov
popa
loop
int
and
fsts
ss
insl
xchg
subl
mov
dec
insb
fsubrl
shll
pop
and
sub
bound
ds
pop
push
pop
mov
dec
lcall
in
int
xchg
mov
mov
cmc
mov
mov
call
cmpb
push
push
lret
cmpsl
and
into
push
sbb
fwait
test
loope
mov
sti
mov
push
loop
xor
mov
or
cmpb
push
push
xchg
je
dec
sbb
dec
ja
in
je
cmp
adc
icebp
hlt
mov
xchg
push
push
dec
call
mov
sub
or
adc
xor
mov
subl
cmpsl
shll
shl
push
gs
inc
cmp
addl
cmpsl
lods
sub
pushf
cmpsb
xlat
xlat
jle
mov
clc
cmp
inc
xor
add
lahf
movsb
pop
je
mov
dec
mov
das
sahf
mov
and
mov
movl
add
xor
js
ficoms
and
pop
jne
mov
out
xchg
adc
lcall
adc
xorl
rclb
xor
cmp
adc
inc
push
in
lret
outsb
adc
push
and
jb
icebp
insb
xor
scas
popf
mov
jne
jmp
popa
jo
xor
fisubrl
and
popf
adc
adc
cwtl
mov
mov
ja
pop
jle
cld
out
jecxz
xor
aam
push
loope
xchg
cmc
not
xchg
xor
push
push
pop
inc
out
add
jo
stc
outsb
dec
xchg
mov
movsl
imul
jecxz
mov
mull
adc
shrl
nop
jbe
imul
sahf
xor
dec
pusha
clc
xor
add
stc
int
icebp
std
fists
push
jmp
inc
push
push
jp
dec
fldenv
inc
mov
movsb
sbbb
xchg
and
outsl
scas
dec
mov
mov
rolb
test
leave
ja
addr16
popf
or
movsl
jns
or
aaa
sub
sti
enter
mov
out
sub
dec
or
pop
cmpsl
jnp
sti
mov
fucomip
divb
pop
mov
xchg
push
xchg
call
outsl
jp
iret
xchg
and
cld
xchg
test
sbb
mov
iret
ja
neg
das
imul
inc
cltd
enter
loope
aas
sarl
movb
imul
lods
jp
pop
in
out
out
fwait
clc
aas
mov
cmp
xor
shlb
dec
fs
cmp
clc
push
jp
aam
nop
shlb
rcrl
ret
prefetch
or
stos
shrb
ss
xlat
fisubl
call
push
test
inc
lods
dec
lods
jmp
int3
mov
push
cmp
inc
jmp
mov
jne
adc
shll
pop
popf
sub
jl
fbstp
jne
jns
repz
jge
pop
sbb
loop
mov
add
push
pop
push
adc
xchg
sbb
aas
and
mov
jle
insb
jne
imul
push
inc
pop
lods
jge
add
fildll
loopne
je
cwtl
inc
jae
jp
lea
and
pop
push
mov
es
mov
leave
outsb
pusha
sbbl
out
mov
xchg
dec
cmp
pop
pop
ret
cltd
push
xchg
scas
loope
fsubs
sbb
jnp
mov
outsl
mov
cmp
cli
sub
enter
jo
pop
jns
jbe
push
scas
rcrl
xor
jmp
repnz
lods
cmp
roll
movsb
imul
imul
jne
mov
lods
lods
lock
and
mov
jl
push
sbb
or
xor
sbb
dec
dec
out
adc
mov
adc
jmp
cld
nop
jb
mov
aaa
repnz
shlb
add
pop
jne
cmp
jno
mov
dec
shlb
leave
dec
addr16
xor
cmp
sub
ret
js
add
adc
dec
mov
cli
cmpsb
and
sub
or
pusha
repz
icebp
pop
lret
adc
cmp
call
mov
jo
inc
dec
out
addr16
ror
stos
push
repnz
mov
or
imul
aad
mov
adc
cmp
xchg
icebp
cmpsl
shrl
inc
fdivp
pop
jecxz
mov
pop
or
or
fdivs
or
pop
jge
aam
jo
lcall
mov
push
shlb
pop
sahf
lea
lods
loopne
bound
cmp
icebp
push
scas
mov
das
xchg
fwait
daa
push
ss
lahf
push
leave
cmp
sub
push
or
das
mov
decl
xchg
sbb
sti
sub
mov
sbb
outsb
mov
pop
popa
inc
scas
dec
jo
pop
jns
pop
or
dec
and
insl
or
jne
add
mov
xchg
mov
inc
xchg
aad
scas
ljmp
mov
push
jge
cltd
add
imull
pop
mov
leave
adc
jp
stc
sbb
push
lds
es
mov
gs
je
rolb
cmp
xchg
push
and
ret
orl
jecxz
xchg
out
outsl
dec
jp
push
imul
test
in
and
outsl
inc
das
fsubs
xchg
add
in
or
pop
xor
xorl
jo
sbb
mov
inc
adc
fistpl
cltd
add
movsb
cmp
test
out
push
roll
sub
into
les
cli
lahf
shl
loop
lds
sub
insl
inc
popa
jle
rcll
inc
ret
dec
mov
inc
mov
cmp
in
xchg
cmp
gs
shl
jo
mov
mov
cmp
push
fucomi
fidivs
test
xor
stos
movsl
sub
jl
jns
loop
int3
ret
shlb
or
jmp
xchg
lret
sbb
fcompl
mov
es
dec
mov
stos
lahf
xchg
ljmp
fs
mov
mov
out
push
shlb
dec
adc
push
imul
sbbl
jbe
or
rorb
add
jmp
fildl
xor
sbb
push
dec
jecxz
jecxz
add
cli
inc
mov
into
aaa
js
and
sahf
inc
sbb
add
add
xchg
add
jae
repnz
xchg
jp
inc
test
cltd
fsts
mov
and
pop
std
inc
and
lahf
xor
add
pop
mov
jmp
mov
dec
push
sub
sub
lods
and
mov
testl
lcall
shll
push
ljmp
ficoml
shlb
mov
mov
jecxz
stos
or
and
jecxz
adc
sti
inc
pushf
sub
or
outsl
push
mov
add
or
add
and
or
fs
xchg
fwait
jns
or
xor
fistpll
add
rol
add
fistps
mov
iret
nop
scas
out
ret
aam
in
ret
shr
cwtl
iret
test
cwtl
jmp
mulb
lea
or
test
subb
repnz
outsb
xor
sti
clc
addr16
ds
lods
popa
cmp
imul
lock
and
insb
test
xchg
ret
or
out
xchg
adc
inc
addr16
aas
and
dec
push
and
ja
jb
bndldx
faddl
xchg
pop
jge
lret
lcall
pop
fwait
test
xor
test
push
test
insl
pop
pop
inc
jb
cmc
lock
int
repnz
popf
pop
mov
fdivrs
adc
jp
lcall
std
mov
or
push
roll
cwtl
test
repnz
bnd
add
mov
iret
jg
xchg
mov
dec
mov
and
jl
xchg
cld
sbbb
int3
cmp
lret
out
add
inc
cwtl
xlat
scas
pop
scas
cli
and
pop
subb
pop
enter
xor
bound
adc
addr16
jo
ret
xor
std
repz
imul
cmp
xlat
insl
sti
nop
dec
in
pop
jnp
sub
call
cltd
imul
hlt
call
xor
jmp
cmpsb
mov
dec
in
xchg
repz
mov
and
jecxz
bound
out
push
rcrl
lea
jns
bound
test
mov
sub
mov
nop
adc
repz
pop
test
sub
and
or
mov
fidivrs
outsb
jp
inc
fwait
sbb
push
or
mov
dec
add
xsavec
adc
cmc
mov
pushf
sub
mov
inc
xchg
push
aaa
and
cltd
jns,pt
into
add
out
fldenv
dec
xor
push
filds
mov
add
in
pop
je
mov
xlat
es
std
aaa
sub
test
aad
lea
imul
xor
cmp
cmc
mov
cmp
and
inc
cltd
pop
cmpsl
cmpsl
mov
xor
push
xlat
mov
lret
sbb
lret
mov
cltd
setp
push
orl
push
sub
jge
push
inc
mov
cmpsl
rcl
add
add
add
das
pusha
sub
cmc
lahf
jo
enter
outsl
add
ret
test
jecxz
lcall
add
test
mov
push
into
mov
push
and
xor
pushf
jmp
sahf
out
xchg
decl
popa
out
mov
fsubrl
loope
xchg
mov
scas
mov
pop
pop
push
dec
enter
popa
inc
inc
in
in
mov
aad
cmc
aas
xor
mov
dec
hlt
in
shll
popf
pop
adc
xchg
rorb
xor
jl
push
pop
mov
mov
les
jmp
movsb
loopne
rcrb
ret
int
sti
mov
sbb
sbb
lcall
adc
cmp
test
mov
ljmp
xchg
jmp
loopne
mov
xchg
lret
fbld
pop
push
stos
dec
mov
dec
insl
icebp
pop
fidivrl
test
push
repz
cli
mov
jmp
ja
popf
ds
pusha
jp
lods
push
push
cs
cmp
scas
push
xchg
cltd
jo
sarl
scas
pop
rcll
dec
cwtl
push
xchg
rcrl
decb
daa
mov
push
mov
push
mov
cmp
mov
lock
xchg
dec
pop
adcb
out
insl
adc
sarl
jmp
pushf
jb
dec
push
iret
mov
pop
cmp
lods
xor
cli
mov
imulb
lcall
xchg
jp
cli
and
sub
nop
incl
in
jmp
jle
mov
inc
adc
pop
nop
add
outsl
and
mov
shrb
pop
mov
jg
cmpsb
jns
xlat
rcrl
mov
js
inc
out
stc
xchg
arpl
cmp
pop
cmc
or
leave
xchg
sti
rclb
xor
push
jno
adc
pop
mov
es
adc
cld
sbb
mov
jbe
mov
ja
lcall
fbld
mov
add
rcrl
dec
xchg
in
mov
add
xchg
mov
pop
stc
and
outsl
xor
mov
mov
adc
jecxz
xor
btc
popa
adc
mov
aas
or
in
shll
test
sub
fwait
dec
jge
lcall
mov
loop
inc
jge
push
cmpsb
test
fdivrs
hlt
cmpsb
inc
push
les
mull
loop
iret
lret
add
data16
out
iret
cmpl
rep
push
nop
mov
inc
pop
mov
sbb
insb
imul
dec
lret
inc
lcall
jecxz
jb
jl
mov
cmp
sti
fisubl
aaa
leave
fistps
cmp
xchg
imul
cmpsb
xadd
xchg
cld
flds
ret
add
fiadds
fldln2
pop
add
in
adc
or
shll
cmp
xchg
push
inc
mov
clc
outsl
mov
sbb
lea
es
or
and
xlat
xchg
pop
xor
inc
mov
ret
jmp
mov
test
xchg
imul
out
pop
outsb
das
lcall
add
aas
test
cmpsl
jb
lahf
inc
icebp
loop
roll
repz
filds
leave
push
cmp
loope
mov
mov
sub
outsb
ljmp
dec
pop
scas
test
jge
pop
push
out
mov
cltd
outsl
or
gs
sbb
pop
repz
insb
push
lods
aad
lret
or
movsb
jg
xor
sub
imul
inc
sub
xor
pop
dec
loopne
sbb
dec
push
inc
pop
sahf
and
mov
jl
sub
enter
or
pop
dec
ret
clc
cmpb
inc
js
imul
orl
dec
mov
loopne
mov
mov
cmp
or
sbb
xchg
ret
mov
fdivrl
adc
xchg
lea
cld
or
sub
insb
inc
leave
jle
mov
inc
sub
mov
or
xor
loopne
aam
leave
popf
jb
rcr
cltd
add
mov
cmp
outsb
mov
mov
xchg
lret
and
sub
xor
pop
scas
in
ss
orb
icebp
daa
lock
loope
jne
push
push
cltd
int
dec
inc
popf
cmpl
ret
lods
sbb
sub
mov
dec
in
lcall
push
sbb
pop
cmpsl
cli
mov
cmp
insl
jp
in
sub
mov
and
fwait
cmc
shrl
ss
mov
aad
inc
or
xchg
mov
aaa
mov
mov
xchg
es
daa
or
pop
fs
dec
mov
cld
mov
hlt
bound
es
xchg
insl
ret
and
sbb
dec
pop
out
push
add
xchg
mov
pop
push
add
leave
in
stos
xchg
movsl
aad
and
and
mov
bound
shll
mov
mov
mov
cmp
xchg
mov
pushf
and
mov
cmp
in
in
inc
out
mov
sbb
icebp
add
sbb
fnstcw
cmp
xchg
cli
divb
andb
mov
mov
pop
ljmp
jno
scas
mov
mov
addr16
lods
sbb
or
push
cs
data16
dec
icebp
sub
adc
mov
daa
incw
repnz
and
jbe
leave
into
dec
add
imul
sbb
popf
ss
mov
mov
aas
xor
mov
mov
pop
or
xor
adcb
pushf
xchg
fmuls
mov
xor
dec
pop
push
adc
repz
cmpsb
shlb
in
pop
popa
stc
mov
fildll
imul
xchg
inc
xchg
jl
mov
test
pop
pop
jmp
int3
ljmp
jnp
mov
lcall
cmp
xorb
mov
or
nop
push
inc
or
insl
mov
mov
mov
xchg
mov
add
pop
out
adc
inc
popf
push
cld
jne
xor
pop
xor
jmp
dec
xlat
fwait
mov
rsm
adc
push
pop
xchg
call
ss
inc
mov
mov
xchg
push
lret
cld
scas
inc
mov
xchg
insl
add
push
dec
ret
add
loop
dec
and
mov
loope
xchg
adc
add
and
push
into
pop
lds
mov
lret
repnz
hlt
xor
or
xchg
pop
cmp
clc
pop
mov
mov
cmp
out
arpl
movsb
pop
jnp
add
dec
adc
inc
orl
xor
jb
cmp
ret
pop
test
push
cmp
cmp
mov
inc
dec
dec
xor
adc
aad
mov
add
roll
dec
cmp
mov
cmc
xchg
nop
mov
jae
sub
xchg
push
adc
jl
stos
push
adc
sbb
xor
loopne
push
xor
enter
xor
push
jmp
lret
data16
sbb
adc
cmp
and
arpl
sub
fistps
jns
and
dec
jp
jle
mov
xchg
out
or
cmpsb
push
sbb
fs
jns
mov
das
or
mov
sti
jno
clc
jmp
add
mov
test
dec
add
cld
dec
and
rclb
int
shl
adc
sbb
add
mov
inc
jb
cmpsl
inc
add
xchg
mov
or
cmpsl
and
adc
mov
mov
stos
xor
mov
lret
and
out
popf
inc
push
jb
sub
out
ljmp
mov
pushf
divl
mov
adc
cwtl
pop
inc
fst
cld
ret
xchg
push
scas
lods
shll
mov
sub
ret
notl
adc
inc
outsb
jecxz
pop
xlat
add
call
frstor
and
mov
mov
add
sbbl
out
sbb
sbb
pop
jecxz
cmpsl
inc
mov
ljmp
cmc
mov
add
mov
cmc
data16
mov
mov
stos
shll
ret
xchg
lds
cli
pop
pusha
addr16
outsb
or
insl
fwait
push
dec
cmp
stc
push
add
call
int
jnp
sbb
mov
sbb
sbb
xchg
jmp
nop
xchg
movsl
jnp
mov
pop
and
lret
jge
popa
stos
xor
mov
jg
enter
push
iret
sbb
aad
aas
out
push
and
fwait
adc
sub
call
dec
xchg
lret
adc
pop
mov
dec
cltd
add
outsb
adc
shll
xor
sbb
ljmp
aam
or
dec
outsl
adc
fstps
xchg
dec
icebp
loope
insl
xlat
fcomps
jb
cmp
std
sbb
ret
int3
add
aam
and
or
icebp
negl
cld
loopne
mov
pop
test
mov
adc
rorl
pop
fcomps
lock
in
push
ja
test
test
xor
and
lods
dec
xor
aas
sub
cmp
loope
test
mov
mov
lret
push
cld
push
popf
in
dec
cmc
test
push
push
mov
pop
repnz
and
mov
dec
sbb
xlat
mov
or
xor
iret
test
mov
inc
or
aas
mov
mov
push
aad
cmovnp
fimull
cmp
cmp
xchg
loopne
test
xchg
cmp
or
mov
lret
arpl
imul
sbb
add
and
bound
ficompl
cs
lea
nop
std
sub
jecxz
clc
xchg
inc
jns
outsl
xchg
push
cmpsl
scas
or
xchg
popa
repz
cmp
fldt
jg
test
sub
lock
mov
gs
sbb
leave
mov
mov
in
rcrb
adc
loop
or
test
lahf
pop
fistpl
cltd
aam
and
xor
mov
ss
lret
aad
sub
jge
loopne
and
jp
sub
mov
dec
les
or
xchg
jae
sub
fistpll
shlb
dec
subl
test
fcomi
shrl
icebp
pop
inc
fst
fmull
fnstenv
inc
shll
mov
xchg
ret
mov
adc
xchg
jae
and
rol
fwait
jg
mov
and
jge
or
daa
insb
fisubs
mov
inc
jge
cmp
mov
jmp
imul
and
dec
jp
shlb
or
mov
jmp
mov
inc
dec
dec
jo
push
mov
hlt
xchg
outsb
jno
push
fdivrl
jle
pushf
cwtl
out
fidivs
jecxz
adc
sbb
sbb
int3
cld
sub
ljmp
fdivrs
int
pop
insb
jmp
test
adc
jp
dec
shlb
ret
and
aad
push
xor
adc
rclb
dec
cmpsb
inc
jmp
leave
fstl
push
pop
sbbl
movsb
leave
loop
out
into
insb
pop
pop
pop
or
xlat
mov
into
or
inc
xchg
clc
and
inc
xchg
pop
push
fisttpl
sub
jnp
scas
push
lods
mov
sbb
ljmp
loope
test
pop
push
xchg
repz
pop
not
mov
daa
mov
inc
ret
add
mov
mov
sub
ffreep
je
dec
insl
sub
jmp
add
scas
testl
jae
jecxz
dec
add
add
out
jg
sbb
push
outsl
jecxz
mov
pop
cmp
pop
test
lahf
push
in
mov
pop
sti
out
sub
sub
lcall
jle,pn
mov
mov
test
enter
pop
fistps
mov
dec
inc
popf
add
fisttps
pop
cmp
fwait
loope
pop
movsb
stos
fdivr
sbb
scas
pop
inc
int
iret
xchg
adc
scas
mov
into
or
sbb
mov
jmp
je
mov
xor
test
loop
xchg
aaa
in
fs
movsb
sarl
inc
adc
inc
jo
add
inc
push
or
insl
test
add
sahf
xor
arpl
gs
mov
hlt
idivb
sti
add
push
jns
jl
aas
data16
shlb
repnz
push
in
es
push
or
xchg
and
xchg
lds
outsl
mov
outsl
xchg
add
call
out
pushf
insb
les
push
ljmp
cmpsl
jle
xchg
mov
xchg
cmc
cmc
and
in
xchg
pop
mov
flds
add
sub
test
imul
sbb
mov
test
jp
sbb
xchg
les
cmpsb
insl
in
clc
mov
pop
mov
rcrb
cwtl
movsb
movb
adc
sub
cmp
out
decl
xlat
ss
ds
cld
lds
repnz
sbb
push
mov
pop
aas
movsb
lret
inc
xchg
fisubrl
jb
mov
jb
xchg
in
and
int
sbb
push
dec
inc
push
cmp
or
adc
jl
lods
mov
or
jne
jl
test
mov
dec
hlt
test
inc
nop
inc
popa
xor
inc
adc
sub
pop
pop
pop
cmp
mov
and
dec
or
jmp
clc
cmp
sbb
adc
loopne
jmp
mov
imulb
cmp
sub
fs
xor
jg
enter
arpl
mov
mov
aaa
mov
push
cmc
sub
outsl
aas
arpl
cltd
mov
dec
xor
and
dec
add
push
shlb
cli
jl
jnp
das
dec
jb
sub
fwait
pop
push
mov
js
jecxz
mov
outsl
xorl
scas
in
push
fistps
push
sub
xor
pop
jne
pop
hlt
ret
nop
mov
lret
scas
aaa
imul
sar
mov
sbb
and
inc
loop
cmpsb
xchg
stc
mov
out
push
daa
sbb
cli
mov
test
push
sub
pop
cmp
in
ss
pop
lretw
aaa
sarl
ss
and
or
sbb
lret
cmp
xchg
daa
jecxz
jne
push
out
lock
clc
mov
adc
pop
xchg
lods
xchg
fwait
cmp
andl
or
adc
pop
sub
ds
dec
cmp
data16
xchg
pop
or
mov
pop
aad
test
xor
adc
or
and
jnp
add
inc
pop
orb
sbb
cltd
sbb
aad
dec
jp
imulb
pop
aaa
subl
jnp
repz
push
jo
je
mov
cltd
mov
dec
push
jnp
xor
mov
inc
push
sub
incb
cmp
dec
out
adc
jp
shlb
nop
add
xchg
cmp
fcoms
ret
fsubl
cmp
imul
les
hlt
dec
lret
adc
jl
and
out
add
cmc
subb
inc
mov
dec
imul
aas
rorl
fs
add
mov
cmpsl
inc
cli
dec
daa
bound
lods
neg
pop
jg
pop
in
and
lds
shlb
dec
pop
sbb
xor
gs
test
inc
inc
movsl
mov
and
inc
js
mov
cwtl
mov
jmp
hlt
lret
fcmovnu
loope
mov
test
daa
push
xchg
jb
adc
or
popa
lcall
and
push
jge
outsb
call
or
daa
or
jl
ja
and
xchg
dec
inc
xor
xor
into
imul
int3
punpckhdq
and
push
ss
ljmp
mov
call
jnp
idivb
jecxz
aad
fidivrs
stc
cli
repnz
popl
cmp
ss
stos
sbb
inc
mov
out
cmpsl
add
in
pop
gs
xorl
xorl
lods
ds
jns
cwtl
pop
jns
rcrb
dec
pop
js
sbb
jb
mov
ja
sbb
sbb
stc
jecxz
ret
adc
dec
outsl
aas
jge
xchg
jno
jnp
loopne
scas
sub
or
jmp
xlat
roll
push
inc
call
sarb
or
cmpsl
outsl
adc
int
fidivs
scas
cmp
test
adc
jle
inc
insl
insb
icebp
negl
ret
les
xchg
dec
sarl
sahf
sub
out
inc
sub
mov
sbb
jmp
ja
add
loope
and
cmpsl
cmp
xchg
bound
cmp
pop
addb
or
das
dec
jmp
in
sub
add
push
out
test
inc
mov
cmp
cmc
inc
lahf
sarb
mov
mov
push
cmp
cmpsl
jecxz
div
inc
movsb
or
pop
adc
add
mov
fimull
push
dec
cmpxchg
adc
fisubs
push
mov
insl
pop
xchg
push
inc
jo
iret
cmp
xchg
jecxz
add
jle
or
or
enter
and
dec
mov
pop
jl
ss
into
mov
dec
jmp
push
mov
cmp
jo
cmp
add
xor
dec
pop
daa
out
gs
test
or
sarl
cmp
jp
dec
add
div
lods
fiadds
add
mov
sub
push
shlb
push
sahf
hlt
push
mov
data16
jo
icebp
push
jle
pusha
jmp
push
xlat
shlb
hlt
xchg
clc
fdivrs
mov
jns
jno
js
and
xor
hlt
lods
insl
in
mov
subb
jne
add
push
testb
mov
sarl
xor
add
xor
sbb
jl
inc
dec
xchg
inc
mov
mov
mov
xor
lock
test
pop
iret
mov
out
popf
aas
test
mov
shll
scas
cltd
push
or
stc
sub
dec
loope,pn
and
push
dec
add
mul
stos
sub
push
mov
xor
cmpsl
xor
repz
xor
imul
dec
iret
mov
jle
stos
push
jle
test
fnsave
and
cmc
cmp
xchg
mov
insl
pop
pop
arpl
xor
into
fbstp
aas
mulb
mov
cmp
add
lds
jge
adc
jle
xchg
int3
pop
add
je
jns
jmp
pop
out
or
jle
adc
cmc
xchg
mov
hlt
mov
jne
cmpsl
sbb
js
shr
push
daa
sub
jbe
fistl
push
in
ds
inc
adc
data16
cmp
pop
aad
push
or
imul
cld
arpl
sub
lods
jecxz
xchg
lret
mov
xor
enter
adcl
pushf
imul
fisttpl
inc
push
fimuls
in
xchg
test
fwait
outsl
dec
or
adc
imul
fcompl
in
or
movl
adc
and
das
daa
shlb
mov
enter
outsb
jmp
mov
notb
mov
ljmp
or
je
loop
jecxz
outsl
and
fwait
lahf
mov
fiadds
push
dec
cmp
push
jo
hlt
xchg
daa
cmpsl
jnp
loope
jbe
rorl
lahf
enter
out
rcll
mov
or
xor
repnz
dec
imul
mov
in
insb
cmpsl
stos
adc
cmp
mov
dec
jb
sbb
popf
mov
pop
inc
test
jo
push
rcr
aaa
or
mov
sbb
sub
add
mov
pop
js
test
jmp
mov
jnp
xor
sub
jle
inc
test
xchg
fucomp
and
aam
aam
mov
loope
add
xchg
insb
mov
dec
lea
clc
ja
arpl
mov
sti
pusha
cmp
add
cmpsb
mov
add
movsb
aad
xchg
sub
popf
lds
imull
test
iret
and
adc
arpl
xchg
xchg
mov
jo
mov
imul
in
nop
mov
lret
arpl
lahf
mov
pusha
repz
jle
in
and
mov
lcall
jo
aam
mov
popfw
ret
lock
xchg
and
jecxz
int
mov
int3
sar
ds
jge
cmp
sahf
cwtl
xor
pop
ds
int3
sub
test
fimull
fildll
sbb
int
dec
mov
inc
adc
add
aaa
aas
icebp
jae
loop
jnp
xchg
xchg
int3
sbb
mov
jne
movsl
ja
fnstcw
cld
ds
std
xchg
inc
mov
cld
int
arpl
aas
adc
xchg
fnsave
jbe
fs
and
dec
aaa
pusha
mov
clc
aaa
mov
jns
out
and
cmp
jle
into
cmc
out
lock
mov
iret
xor
mov
ljmp
push
and
dec
push
data16
subb
test
imul
cwtl
in
pop
inc
inc
std
mov
push
aam
xchg
ja
push
lea
repz
int
dec
jbe
ret
lea
imul
and
cmpsb
outsl
ljmp
push
jnp
fisttps
scas
mov
popf
lods
stos
xchg
jns
inc
mov
pop
mov
sbb
adc
xchg
push
int3
pop
movsl
test
aaa
das
sbb
jge
popf
ja
mov
lock
pop
cwtl
mov
pop
mov
dec
push
and
cmp
pop
push
inc
add
xchg
cmp
sbb
test
jp
xor
dec
enter
loop
mov
cmpsl
cld
fmull
mov
mov
xchg
inc
mov
sbb
rorb
dec
jmp
js
push
mov
loop
popa
jl
int3
adc
mov
fists
outsl
cli
push
sbb
push
rcl
mov
outsl
cmc
adc
cmp
push
aad
loopne
std
mov
mov
iret
dec
jb
daa
sub
fimuls
xor
div
es
jmp
sub
inc
test
xchg
scas
push
js
jge
mov
loopne
sbb
pop
push
pop
test
jg
sub
into
cmp
jne
xor
xchg
cmp
sar
adc
std
adc
and
xchg
pop
mov
add
jl
mov
add
shrl
mov
push
idivl
es
and
rcl
jl
dec
adc
adc
cmp
mov
into
in
popf
out
bound
clc
outsb
jecxz
hlt
adc
nop
pop
xor
mov
pop
jns
dec
inc
loopne
push
jmp
jae
pusha
mov
lea
enter
imul
mov
dec
movsb
cmp
xlat
test
xchg
push
out
scas
sub
mov
cld
sub
outsl
jne
sub
es
cs
and
add
subl
xchg
sbb
mov
adc
clc
or
shl
hlt
xchg
mov
xor
cmp
inc
in
sbb
mov
sbb
je
mov
leave
cmpsb
push
jp
iret
sub
fldenv
mov
pop
sub
mov
sbb
and
or
xchg
outsl
insb
daa
hlt
scas
inc
mov
addr16
ljmp
mov
and
sarb
call
pop
adc
call
lret
push
mov
push
outsl
js
leave
loope
inc
cmpsb
paddw
out
mov
aas
leave
mov
cmc
dec
movb
movsb
fmul
pushf
inc
sub
pop
push
or
mov
lret
cmp
and
icebp
les
test
pop
mov
lock
xchg
dec
jb
idivb
pop
adc
mov
xor
fbstp
or
shr
dec
test
aad
or
add
pop
out
in
fildll
and
sarl
outsb
dec
jge
jo
rorb
ffreep
sbb
push
inc
mov
scas
mov
imul
into
rorl
ret
imul
addr16
cmp
insb
subb
mov
sbb
cli
aas
outsb
loop
inc
pushf
loopne
fwait
sub
es
in
loope
imul
pop
clc
push
lcall
ss
les
call
jl
ss
xchg
adc
ss
int
cli
mov
push
icebp
xor
and
cmp
mov
lahf
dec
jbe
inc
in
into
jne
ss
pop
add
xor
push
and
outsb
and
and
std
sub
jmp
pop
push
inc
jl
ror
mov
out
dec
movsl
test
out
adc
pop
and
sub
cs
test
pusha
push
rcrb
xor
or
popf
jne
repnz
jecxz
repnz
xchg
lahf
ljmp
xchg
pop
test
loopne
imul
cmp
int3
popa
add
clc
lock
mov
shrb
pop
dec
cwtl
cmpl
sbb
jp
adc
add
lcall
incb
or
clc
mov
je
sahf
pop
cmp
push
xchg
fs
mov
jle
pop
cmp
jnp
jmp
xor
pop
dec
pop
or
dec
sub
adc
rorb
jae
insl
sbb
icebp
dec
insl
xor
rcrb
insb
jecxz
ret
cmc
xor
mov
add
push
sarb
mov
imul
sub
mov
lods
mov
cmp
cwtl
mov
and
lods
es
add
or
dec
repz
mov
jg
mov
lcall
stos
loopne
insb
or
pop
enter
daa
and
rcrb
xlat
sbb
clc
cmp
test
cwtl
adc
icebp
mov
ss
inc
into
pop
bound
hlt
imul
ja
pop
int
cmpsl
jnp
jmp
sbb
rcll
cld
cs
mov
mov
int
ss
fimuls
cwtl
add
inc
imulb
adc
cmp
pop
cmp
cli
lcall
cmp
jmp
scas
mov
iret
cmp
mov
cmpsl
outsl
dec
jl
arpl
mov
test
std
mov
jp
lods
je
aas
jnp
sub
adc
jb
cmpsb
pop
hlt
out
icebp
outsl
or
and
mov
push
into
enter
stos
fldenv
jp
add
out
xor
pcmpeqw
pop
rcrb
fisubrl
and
leave
and
jne
and
daa
cmpsl
adc
stc
rolb
ret
mov
stos
stc
cmpb
cmp
lret
stos
jecxz
jnp
pop
add
popf
mov
mov
cmp
test
and
andb
inc
xor
and
mov
inc
push
add
and
mov
imul
es
outsb
or
scas
jl
outsb
mov
leave
test
or
adc
test
icebp
cmp
bound
clc
clc
outsl
push
xchg
add
mov
cli
mov
shll
jp
mov
ret
and
daa
lea
sbb
mov
fwait
inc
push
lods
fwait
nop
negb
movsb
add
flds
push
and
adc
or
insb
and
mov
pop
xor
icebp
in
shlb
cltd
in
fucomp
jp
xor
add
or
mov
adc
aaa
inc
out
inc
imul
jge
jl
pop
jp
sub
mov
or
push
or
jp
scas
hlt
push
mov
mov
dec
in
jg
cmp
sub
fs
in
ret
lods
sbb
mov
cmp
add
dec
sbb
xor
sbb
stos
imul
icebp
negb
xor
xchg
aam
add
xchg
ret
fadd
stos
xchg
add
lods
and
and
push
cwtl
mov
push
pop
outsl
ret
stos
clc
lea
or
fdivrl
fs
inc
sub
xor
lahf
mov
xchg
xor
int
je
loopne
mov
and
int
daa
mov
outsl
push
adc
and
sbb
sbb
imul
sub
daa
ret
sub
adc
mov
arpl
or
lret
add
pop
sbb
repz
je
cli
aaa
icebp
jmp
insl
sub
cmpsb
adc
pop
mov
inc
pop
fxch
out
mov
push
inc
xchg
pop
mov
pusha
imul
mov
pop
insl
shll
pop
ret
lods
mov
jge
andb
mov
popa
faddl
mov
push
jbe
das
aas
cmp
jns
and
sbb
stc
fidivs
sbb
xchg
aas
pop
shll
xchg
lods
testl
jl
jae
adc
adc
int3
pop
std
push
cltd
sahf
js
insb
jmp
imul
pusha
lock
lret
sbb
cmc
inc
xchg
or
dec
cmc
cs
lea
ret
lods
stc
std
sbb
mov
jne
xchg
cmp
adc
lcall
lds
outsl
ljmp
jne
push
data16
jae
pop
decb
xchg
add
sti
sub
cmp
mov
sahf
aaa
and
and
and
mov
cmp
inc
and
clc
cmp
aaa
in
push
out
mov
bound
jo
nop
mov
mov
pop
mov
imul
test
or
mov
les
dec
call
clts
jp
xchg
out
push
add
cmp
scas
adc
add
adc
call
mov
xchg
push
push
rorb
xchg
pop
flds
in
fisttpl
jge
call
shll
popf
cs
dec
sub
sbb
mov
rcll
stos
mov
cmp
aad
cmp
sub
mov
imul
cmp
push
pop
cmp
rcll
cld
jmp
adc
cmc
ljmp
js
cli
sub
push
clc
mov
and
ret
repnz
xchg
inc
lock
ja
test
push
mov
xchg
pushf
ja
cmp
out
jcxz
xchg
or
sbb
and
in
test
mov
mov
fldenv
jmp
jno
push
mov
sub
mov
mulb
cmpsl
cmpsl
jne
hlt
mov
cmp
inc
push
fxch
xor
movsl
das
sub
xchg
rorb
mov
fidivl
je
push
clc
insb
jp
fsts
xchg
stos
pop
insl
adc
and
sub
mov
lcall
gs
in
mul
or
add
nop
scas
imul
xchg
adc
mov
push
aas
pop
xor
inc
loope
mov
mov
xchg
loop
cmp
inc
xor
sbb
jle
imul
mov
sbb
xorps
mov
push
xchg
decb
das
negl
popf
adc
inc
cmp
push
and
stos
loopne
sbb
jecxz
inc
xchg
pop
xchg
mov
cltd
movsb
out
mov
cs
push
and
pop
out
lods
cli
mov
adc
mov
jl
js
cmpsl
cmp
icebp
mov
push
sbb
out
and
mov
inc
sbb
adc
and
in
mov
sbb
std
scas
mov
rcrl
adc
pop
and
int
scas
push
mov
xorb
sbb
sub
add
lcall
pop
mov
dec
adc
icebp
mov
push
push
sub
cwtl
jbe
lods
push
mov
cltd
xchg
cmc
push
cmp
cmc
push
xor
push
lods
mov
and
sbb
loope
subb
fidivl
fnstenv
ret
adc
loopne
add
dec
add
inc
imul
cmp
adc
mov
pop
sub
xchg
ss
add
mov
lret
in
xchg
lds
mov
and
call
and
mov
jle
sbb
jl
repz
loope
mov
fwait
pop
push
lods
push
movsl
fwait
sub
mov
add
movsb
inc
nop
pop
daa
push
aaa
jnp
outsb
add
sub
mov
mov
test
std
inc
fists
and
xor
dec
jo
ret
fidivrl
push
out
fcomps
jb
in
loop
dec
adc
push
lods
xchg
cld
daa
xor
jo
rcll
ret
roll
push
xor
mov
mov
fldenv
jbe
and
xchg
xlat
or
inc
xor
push
adcb
sub
aas
mov
jmp
outsb
cmp
mov
or
popf
adc
adc
fxch
data16
mov
nop
andb
add
fs
inc
push
gs
cmpl
push
mov
je
or
sbb
mov
fs
loope
inc
js
jge
adc
or
mov
test
imul
sub
in
out
pop
xor
test
mov
add
push
cmp
std
xchg
jns
aam
fwait
pop
repnz
dec
aam
jbe
jne
in
arpl
pop
aas
sbb
daa
lahf
cli
or
in
sub
cmp
pop
push
mov
fwait
ds
cwtl
xchg
into
jb
pop
xchg
jbe
dec
xchg
test
rorl
mov
insb
dec
clc
sti
xor
inc
out
call
push
shlb
pop
sub
add
outsl
push
mov
dec
jle
cmpsb
or
dec
pop
lea
add
lods
outsb
inc
mov
mov
shl
jo
nop
cmp
shrl
pop
pop
cmp
sbb
aas
cltd
imul
jp
dec
jp
mov
xchg
push
sub
fsub
loop
dec
int3
lret
dec
rorb
mov
pop
loop
jg
out
hlt
xor
pop
mov
pop
or
and
fs
sub
mov
sbb
std
pop
cmp
insl
daa
xchg
mov
push
ret
and
subb
mov
add
test
jge
xchg
pop
fldt
jg
sbb
mov
add
xchg
cwtl
xor
cmp
mov
pop
out
jb
insb
cmpsb
loope
lret
les
rolb
int3
stos
mov
inc
mov
or
and
jnp
repz
mov
push
std
data16
addl
mov
adc
divl
lds
rorb
rcrl
out
adcl
ror
aaa
add
push
mov
xlat
xor
test
les
xlat
dec
xlat
xchg
mov
sbb
jne
pop
inc
into
adc
cmp
lcall
mov
or
repnz
jae
mov
out
jns
sbb
xor
push
mov
movl
or
cmp
stc
and
sti
inc
mov
and
ja
ret
sbb
sub
jne
xchg
and
cmp
rcr
test
jbe
jae
inc
outsb
imul
xlat
hlt
sub
in
lahf
cmp
adc
adc
mov
inc
popa
push
sahf
aas
shrl
fidivrs
stos
ret
imul
clc
hlt
jno
cld
lock
add
or
mov
mov
repnz
subb
jns
stc
pushf
or
iret
dec
pop
aam
sbb
mov
mov
jbe
aam
adc
mov
xchg
in
int
js
inc
fnsave
lret
ljmp
cmp
lret
ds
add
and
dec
jecxz
sbb
and
or
mov
pop
enter
inc
imulb
mov
decl
add
cltd
mov
movsl
pop
jmp
xor
sti
fldenv
cs
pop
call
and
push
lahf
dec
cli
push
les
mov
fsub
popf
nop
insb
sbb
xchg
dec
lea
cmp
icebp
stc
sbb
and
imul
and
push
outsl
insb
dec
sbb
and
sub
bound
icebp
or
inc
loop
cli
iret
fidivrs
rcll
push
in
and
outsl
mov
mov
daa
aad
cmp
cmpsb
xor
pop
mul
add
shll
stc
inc
enter
mov
jnp
push
and
pusha
xchg
xor
mov
outsl
dec
test
mov
mov
push
lret
ja
psubusb
push
fistl
lock
outsb
lods
leave
lahf
add
mov
loopne
add
push
addr16
mov
push
push
addl
xor
mov
out
in
push
jl
jo
adc
das
jnp
je
inc
xchg
insb
xchg
fdivrl
cmp
lret
push
rorb
lods
pop
iret
xchg
out
pop
daa
and
movsb
pop
xlat
notl
dec
fistps
and
fsubrs
pop
mov
sub
jg
repnz
incl
xor
out
or
or
push
je
neg
jb
nop
test
cltd
arpl
mov
adc
pop
cmp
aas
inc
xor
pop
ss
pusha
push
pop
mov
data16
test
sti
je
xchg
out
in
xor
and
icebp
and
mov
sbbl
jg
in
push
imul
add
clc
jbe
sbb
mov
inc
mov
xchg
pushl
pop
cmp
push
pop
shlb
xchg
inc
mov
enter
outsb
jg
aad
clc
mov
adc
sahf
and
je
ljmp
cmp
push
test
ljmp
std
xchg
xchg
andl
add
rol
dec
push
sbb
fwait
movl
insl
dec
mov
bound
inc
inc
ljmp
mov
pop
push
orl
or
cmp
inc
lock
inc
lds
je
fimuls
movaps
fidivs
lock
inc
js
pop
xchg
push
adc
stc
leave
adc
movsl
int3
dec
pop
fisubl
in
js
shll
int3
mov
xlat
cmpsl
mov
lea
push
mov
jo
rcrb
xchg
rcll
sti
jne
stos
cs
sti
jbe
pusha
rcll
insl
push
adc
push
mov
jecxz
pop
jns
push
imul
push
add
jl
sbb
dec
data16
sbb
sbb
pop
mov
popf
enter
push
sub
dec
adc
repnz
add
into
and
shl
pusha
or
adc
lcall
sahf
xchg
push
sbb
sbbl
sub
sar
lods
clc
aaa
push
cld
outsl
lret
sti
add
adc
fists
and
cmp
add
je
inc
push
fcoml
mov
loopne
add
rclb
js
test
push
and
call
inc
mov
jg
stos
pop
out
out
xor
lret
loopne
mov
jae
std
pop
out
sbb
std
sbb
lods
test
pop
cmpsb
inc
xchg
adc
sti
lahf
ficoml
lcall
popf
pop
sub
jns
mov
dec
sahf
xor
mov
aaa
cs
leave
adc
or
scas
pop
sbb
push
sbb
repz
lods
mov
pop
iret
adc
push
pop
push
lret
sti
aad
mov
jl
gs
insl
mov
add
sarl
xor
imul
jg
rolb
incl
sub
in
repz
inc
mov
aam
rcrb
pop
je
movsl
dec
cs
pop
dec
pushf
in
mov
xchg
xor
cld
cmp
sbb
add
jle
sub
rcr
xchg
jp
sub
testb
lods
inc
mov
sti
mov
add
sahf
push
fidivs
scas
cmc
sbb
push
adc
push
repnz
pop
in
repz
pushf
add
jge
lret
enter
and
sahf
add
push
dec
jb
out
int3
xor
loope
stc
adc
adc
lcall
mov
mov
pop
ljmp
sahf
pop
sbb
out
rolb
popf
into
sbb
inc
jmp
sub
cmpsl
jns
mov
or
mov
aam
cmp
adcb
xlat
aas
imul
int3
outsl
jb
inc
cld
push
cmp
ja
dec
mov
push
test
mov
sub
sub
jnp
jbe
hlt
add
sbb
outsl
jmp
imul
jmp
aad
inc
cmpl
arpl
jne
jmp
mov
out
test
xchg
adc
mov
mov
out
imul
mov
jb
pop
or
dec
pop
fbstp
andb
sbb
inc
sub
dec
jns
pop
push
sbb
mov
lods
jmp
dec
hlt
jbe
cmc
mov
push
mov
iret
das
loope
pop
stos
and
mov
pop
sub
cmp
sbb
cwtl
fs
cmc
mov
adc
loopne
mov
inc
cli
and
pop
fwait
testb
jne
mov
mov
sub
dec
and
push
and
push
out
movsb
mov
enter
jae
cmpsl
loop
inc
mov
push
xor
push
jb
mov
fnstenv
cmp
mov
in
sub
push
cmpsb
push
daa
dec
sub
jnp
jle
pop
cmp
stos
int3
xchg
fwait
jge
mov
push
dec
xchg
xlat
jbe
movb
and
cmp
mov
or
dec
jmp
ret
push
repnz
arpl
xchg
adc
cmp
rclb
xor
mov
mov
iret
adc
xorb
jge
mov
xor
lret
cmp
leave
or
jb
ror
jae
ficompl
push
mov
aaa
bound
mov
xchg
aam
mov
mov
dec
iret
inc
pushf
shrb
or
xchg
add
mov
popa
lahf
jmp
inc
in
xor
popf
jne
inc
repz
enter
ret
stos
test
or
push
sti
nop
sub
push
les
in
aad
sbb
leave
inc
jge
and
subb
adc
pop
fnsave
xor
xchg
inc
adc
clc
cmp
lods
xor
outsl
pop
xor
fcmovne
push
divb
adc
mov
mov
adcl
leave
fisttps
push
loop
xor
bound
aad
inc
mov
int
push
push
and
out
or
mov
mov
push
dec
cmc
add
idivb
stos
inc
sub
adc
mov
push
inc
cld
or
adc
xchg
mov
shll
mov
mov
mov
xlat
orl
icebp
ret
and
xchg
test
push
lods
xor
xor
popf
pop
mov
add
jmp
add
pop
xor
int
ljmp
cltd
cmovb
cld
dec
divb
cmp
push
dec
or
cmp
cmp
cmc
ficompl
pop
xchg
and
orl
into
out
std
iret
jg
sub
mov
enter
test
cld
xor
mov
add
xor
lret
cld
movsbl
loopne
into
sbb
jp
lds
dec
das
mov
add
fs
ret
shlb
shll
dec
mov
in
inc
push
mov
adc
add
dec
das
mov
xchg
mov
in
imul
mov
dec
bnd
mov
pop
out
bound
lret
lret
pop
inc
mov
jge
jnp
movsb
mov
lds
rcr
adc
mov
insb
xchg
xor
fidivs
add
jb
xor
jecxz
sbb
loopne
mov
lahf
push
mov
push
add
popa
bnd
jecxz
push
cmp
add
xchg
in
add
pop
aaa
sbb
sbb
test
das
lcall
add
lahf
push
mov
or
lods
xchg
bswap
jle
imulb
mov
adc
inc
in
loop
fsts
jnp
test
cwtl
out
int3
jge
sbb
add
xchg
xchg
fwait
bound
push
or
lods
cmc
dec
cmp
mov
lcall
jae
sbb
out
mov
push
int
xchg
pop
jle
jl
mov
subb
pop
mov
dec
pop
testb
sbb
adc
dec
sti
shlb
sub
pushf
cwtl
sub
fsqrt
das
add
ljmp
in
stos
mov
or
insb
mov
inc
movsb
idivb
fs
inc
push
pop
aad
pop
in
and
pop
fcompl
rorb
jl
imul
out
inc
stc
and
ds
stc
jle
cmpsl
xorb
neg
jecxz
fsubr
mov
push
sbb
push
icebp
pusha
pop
lea
stc
and
jo
aas
sub
mov
or
sub
dec
push
lods
jno
rcr
cmp
stos
or
or
xchg
sbb
loopne
subl
lret
int
inc
mov
notb
fiadds
adc
movaps
dec
adc
in
mov
lret
cmc
jle
sbb
push
xor
jbe
and
push
nop
lcall
stc
sarl
jne
push
scas
shl
ret
int
popf
ja
enter
sbb
jecxz
sub
addr16
out
int
les
adc
ficoms
mov
fmuls
cmp
loope
lahf
add
push
adc
mov
lcall
dec
test
test
stos
cwtl
in
adc
cmpb
mov
xor
nop
xchg
xchg
xor
or
push
xchg
inc
jg
lds
inc
add
add
mov
loop
jle
or
cmp
push
push
in
into
js
imulb
cmpsb
mov
ficoms
xchg
push
jecxz
xchg
or
aad
mov
mov
cwtl
stos
push
push
push
cmpsl
pop
jle
sahf
inc
ja
and
ss
mov
mov
cmp
xor
mov
repnz
cmc
sbb
or
aaa
mov
leave
faddl
rcrl
or
aaa
adc
xorl
jg
mov
loope
cmpsl
dec
sbb
lret
sahf
lahf
or
vucomisd
add
inc
xchg
xor
insb
mov
in
es
cmpsl
add
in
out
adc
jmp
push
lcall
adc
in
and
mov
clc
mov
lret
mov
cmp
adcl
les
xchg
xchg
push
clc
sbb
xor
xchg
jne
adc
mov
pop
pop
sub
lahf
ljmp
in
in
pop
pushf
sbb
ret
push
leave
lock
and
push
sub
push
test
dec
or
push
insl
jle
std
sub
pop
sbb
and
or
aad
mov
inc
jle
adc
push
push
mov
push
aam
cmp
popf
dec
cmpsl
les
adc
fsts
or
or
pop
adc
pop
test
sti
mov
subl
push
xor
or
pushf
fildll
in
or
stos
pop
out
daa
lret
xlat
cwtl
lret
popa
lods
pop
aas
and
inc
outsb
shll
ret
jbe
test
jp
sbb
cli
insl
jmp
loopne
leave
fwait
add
loop
sbb
sbbb
inc
sbb
xor
or
xor
leave
push
adc
call
hlt
sub
jge
jp
adcl
popf
dec
push
es
insl
xchg
popa
jle
insb
push
or
jo
add
repnz
inc
jns
iret
cltd
cld
mov
popa
push
mov
stos
aaa
jle
imul
outsl
and
adc
sbb
inc
inc
cmp
push
mov
stos
jge
mov
and
lods
and
inc
or
push
mov
mov
call
addb
add
sbb
mov
in
cmpsb
add
sbb
arpl
mov
jl
shll
das
pop
in
dec
jecxz
jge
adc
jmp
mov
mov
in
xor
imul
xchg
test
mov
addl
pop
add
xchg
pop
mov
xor
adc
cmpb
ret
lret
push
shlb
movb
fldln2
xor
dec
aad
in
xchg
mov
sbb
mov
or
cmpsb
test
xchg
xor
ds
out
mov
xchg
ds
cmp
inc
into
inc
adc
mov
mov
adc
adc
jle
ret
fwait
outsb
push
or
mov
hlt
mov
pop
xor
mov
jns
std
xor
add
js
loope
test
sbb
xor
or
add
adc
in
pop
inc
fldenv
fiaddl
je
inc
sub
popa
popa
cwtl
xor
daa
mov
cmpsl
imul
pop
aas
pop
in
and
shl
pop
jle
clc
sub
mov
mov
ss
cltd
cmp
std
adc
xor
lret
int
lods
lret
dec
dec
mov
ret
adc
sbb
shrl
push
cmp
mov
roll
out
xor
jnp
pop
loop
pusha
icebp
jno
sbb
adc
sbb
fs
lods
xchg
add
add
pop
xor
stos
lods
int
jl
and
sub
cmp
lret
jnp
or
insl
pop
or
repz
jle
mov
insl
je
pop
dec
adc
fdiv
out
pusha
sub
jmp
fstpl
push
into
imul
fiaddl
inc
loopne
mov
cltd
in
ja
outsl
stos
inc
loopne
xchg
mov
push
aas
lret
je
mov
mov
js
ja
leave
ljmp
fsubs
jmp
or
dec
inc
xchg
jle
push
adc
sub
add
mov
mov
jbe
insb
xchg
cmp
inc
leave
jg
in
scas
mov
cmp
pop
jne
or
aaa
bound
pop
divl
dec
les
push
jbe
leave
pop
int3
cmp
in
xchg
data16
aas
adc
jecxz
jbe
arpl
mov
rcrb
and
push
fcoml
fstpt
call
pop
xchg
inc
sub
pop
mov
pushf
aam
jg
lea
popf
cmp
shlb
mov
add
fisubrl
xchg
xor
push
test
dec
sub
mov
rolb
and
inc
dec
or
outsb
out
push
pop
adc
mov
xor
cld
test
movsl
jnp
push
mov
mov
cmp
and
add
lods
xchg
or
jp
out
jne
cltd
cmp
jmp
or
ds
mov
mov
inc
sbb
and
data16
xor
dec
pop
jp
in
and
sub
sub
ficoml
xchg
push
or
pop
aaa
jbe
popa
stos
std
ret
decl
hlt
jg
push
mov
in
in
push
xor
lock
outsl
ss
lahf
addr16
mov
add
inc
enter
cmp
jge
out
push
xchg
cmpsb
pop
push
leave
push
gs
add
add
daa
jne
call
or
adc
xchg
insl
scas
push
jo
adc
pusha
lret
sbb
out
lcall
ja
xlat
push
imul
lahf
adc
xchg
mov
out
shlb
sbb
cmp
add
xlat
add
fwait
les
or
es
mov
and
shlb
enter
repz
stc
jbe
iret
mov
int3
int
push
and
pop
adc
add
lds
and
lret
mov
mov
ud0
pop
fldenv
cs
cld
dec
and
test
repz
adc
loop
lods
testb
pop
add
mov
mov
andb
test
addr16
loope
lcall
lret
lods
mov
mov
stos
xchg
sahf
scas
mov
pop
dec
add
ja
cwtl
jnp
cmp
leave
pusha
or
bound
int3
add
shlb
test
addr16
add
cmpsl
rcr
adc
stos
add
add
int3
adc
push
xor
sbb
push
mov
pop
jne
sub
sbb
pop
sbb
mov
andl
int
adcl
lret
pop
mov
fdivr
dec
push
loope
loopne
push
push
cmc
adc
loopne
ljmp
not
rcll
cld
insb
push
xor
jle
jecxz
data16
gs
xchg
popa
or
dec
xchg
testb
sub
push
lds
icebp
pop
add
pop
fwait
push
sub
xor
rclb
mov
testl
inc
out
or
in
pop
mov
in
or
lea
mov
push
xor
stc
int3
pushf
sub
sbb
lods
pop
repnz
dec
jne
jg
out
ss
xor
adc
xchg
xchg
or
loope
aas
in
dec
mov
ret
dec
push
mov
js
addr16
inc
and
lea
fsubs
inc
push
popf
inc
bound
add
jg
mov
dec
cwtl
imul
push
cltd
pop
shl
or
dec
add
test
les
lahf
sbb
arpl
cmp
sbb
mov
stos
jo
shl
jmp
repnz
cltd
or
inc
push
insb
cld
fistpl
push
cmp
jno
shrl
cs
dec
iret
cli
cmp
add
lahf
test
cwtl
jae
mov
pop
addr16
movsb
push
mov
push
icebp
out
outsl
int3
mov
jg
arpl
and
xchg
mov
dec
jnp
sbb
push
jmp
push
xchg
dec
inc
push
dec
jmp
out
mov
push
ja
xchg
cmp
sub
jle
or
das
shrl
cld
mov
sbb
push
addl
sbb
jbe
pop
enter
push
icebp
std
jbe
push
dec
fdivrl
mov
jl
jo
push
fstps
repnz
sbb
nop
stos
loop
and
jne
jns
inc
psadbw
mov
jne
push
sbb
in
mov
push
arpl
sti
sbb
mov
int3
or
and
cld
inc
loopne
fucomp
xchg
pop
mov
and
mov
add
fisubs
cmp
push
cmp
inc
jb
nop
push
dec
ret
loope
cltd
mov
push
mov
xor
in
ficoml
lock
adcl
iret
enter
mov
mov
call
lock
jo
int3
fisubrs
test
int
add
scas
int3
hlt
fmull
cmpsl
dec
inc
jae
mov
add
or
stc
lret
data16
mov
sbb
movsl
and
je
movsl
loopne
jne
movsb
sbb
repnz
dec
sub
les
stc
sti
outsl
test
pop
xchg
lds
push
mov
aam
pop
into
out
out
pop
adc
int
push
cwtl
sar
adc
je
pop
aaa
push
or
jo
shl
dec
pop
scas
pusha
in
xchg
fdiv
sbb
pop
and
aam
jl
or
pop
into
sbb
fcmovbe
fsub
call
and
movsl
xchg
mov
add
add
mov
ljmp
mov
scas
adc
fidivrs
mov
sbb
mov
out
dec
lret
push
jns
push
add
lret
jnp
push
or
cli
icebp
sarb
xlat
hlt
fisubrs
jbe
je
inc
cmc
leave
roll
mov
pop
xor
or
rcrl
loop
xchg
roll
mov
out
cmp
cli
test
mov
mov
fs
data16
test
test
loop
sbb
movb
icebp
in
repz
lahf
test
adc
mov
fcompl
stc
cmp
dec
jne
cld
jne
fdivp
arpl
jnp
sbb
sub
jp
adc
sbb
adc
orb
pop
out
mov
ds
das
pushf
pop
arpl
add
lret
mov
fsubrl
arpl
lret
dec
in
jp
mov
lahf
jbe
fxch
pushf
leave
xchg
mov
nop
cs
test
or
ret
loop
xor
jmpw
popf
mov
xchg
or
cwtl
mov
xchg
jl
sub
mov
xor
loopne
push
adc
adc
and
jmp
pop
adc
je
dec
loope
push
mov
sbb
pusha
movsb
add
add
jbe
fwait
pop
fwait
dec
loopne
mov
imul
pop
outsl
repz
cs
lret
popf
fistl
mov
mov
fnsave
les
test
leave
cmp
mov
imul
iret
aas
fadd
or
in
push
call
jg
ss
inc
push
sub
mov
push
outsl
rorl
fcoml
lcall
inc
xor
dec
jo
mov
pop
outsl
jle
in
sub
jp
fucompp
scas
push
sbbb
push
ja
stos
cld
test
pop
add
mov
loopne
aaa
sub
mov
adc
outsl
adc
fstpl
roll
cltd
fucom
enter
sub
int3
xor
xor
xchg
mov
or
out
inc
ret
push
fidivs
pop
nop
push
ror
adc
pop
sbb
pop
mov
mov
adc
cwtl
divb
les
stc
lods
sti
inc
test
negl
inc
xchg
cmp
mov
daa
push
xchg
aam
sbb
and
xchg
jmp
mov
aad
xor
xchg
push
notl
mov
cmp
cmp
mov
xchg
sarl
cwtl
xor
fnstsw
test
test
mov
cmp
dec
imul
mov
stc
or
fcmovnu
or
shll
movsb
push
pop
cmp
push
repz
pop
pop
repz
sbb
in
ljmp
roll
call
push
add
je,pn
shrb
neg
sub
psrld
outsb
test
xor
mov
sub
xchg
dec
cli
imul
decb
rcr
inc
mov
popf
jmp
in
dec
sbbl
jecxz
xchg
sbb
jmp
mov
aaa
and
mov
mov
adc
jge
push
push
sarb
movsl
out
jne
shrl
inc
fsubs
bound
push
mov
mov
push
mov
adc
mov
out
mov
test
xor
or
pop
jno
add
out
sub
pop
loope
ja
sub
aad
jmp
in
xor
xchg
pop
shll
jmp
dec
inc
scas
push
arpl
orb
icebp
in
xchg
inc
add
and
fisttpll
vmulss
test
lds
xchg
mov
xchg
pop
lods
mov
push
dec
inc
jl
pop
xchg
jg
lea
notl
dec
sub
inc
cld
add
out
test
scas
clc
pop
pop
fnstsw
push
inc
or
fisubs
xor
test
imul
arpl
xchg
push
push
lret
adc
jmp
pop
andl
or
fildl
pop
push
jno
into
clc
ds
popf
aad
out
pop
mov
ret
inc
jae
jb
dec
sub
pushl
mov
add
xor
xor
fstpt
cmc
inc
ja
mov
mov
mov
mov
into
and
fs
jl
daa
rcll
dec
dec
data16
pop
inc
sbbl
pop
into
add
shrl
push
rorl
fistpl
hlt
popf
testb
cvtdq2ps
in
cmp
pop
mov
xchg
sub
mov
int
rol
ret
push
jg
insb
int
dec
test
and
or
jmp
xchg
sub
dec
jg
inc
rorl
icebp
out
mov
xor
push
stos
shll
mov
jae
or
addl
jle
mov
ljmp
aas
push
inc
and
in
jno
or
test
dec
mov
add
sbb
push
push
mov
push
stc
gs
jae
adc
lods
arpl
or
mov
pop
lea
adc
fwait
out
daa
mov
rorb
xor
mov
jmp
jbe
xor
jmp
loop
mov
push
pop
mul
stos
sti
dec
xchg
push
lahf
or
sbb
loope
adc
cwtl
jae
sarb
mov
cmc
fistpl
int3
pop
shlb
xor
sbb
xchg
cmpsl
out
xor
xchg
lcall
scas
pop
fidivs
lock
push
sbb
mov
push
sub
add
out
xor
mov
cmpsb
movsb
add
inc
sbb
adc
xchg
or
mov
bound
rorb
insl
push
mov
fisubrs
out
mov
cmp
mov
jb
mov
sbb
fmuls
xor
cwtl
ss
push
inc
cmp
lret
fs
xor
jmp
shrl
loope
hlt
add
or
sbb
lret
mov
add
cld
sbb
jne
stc
sbb
aad
dec
adc
push
bound
and
mov
out
mov
fdivl
jge
cli
and
inc
mov
fsqrt
dec
adc
mov
dec
sub
xchg
push
fmuls
jp
lds
subb
sub
and
std
and
pop
mov
cmp
sti
mov
inc
jp
xor
movsl
pop
cld
cmp
sub
dec
sbb
and
aam
int3
in
fsubl
mov
inc
jae
add
or
filds
lds
sbb
xor
jbe
cltd
fcoml
bound
movswl
xor
sbb
sub
dec
pop
fdivrl
rcr
movsb
push
nop
imul
subb
ret
xchg
fcomip
add
xor
dec
adc
into
int
jp
loop
jb
cltd
stc
cmpsb
xor
add
mov
adc
cmp
jge
pop
lds
sar
sub
mov
dec
sbb
icebp
dec
lret
sahf
std
shll
or
lahf
fidivrl
pop
inc
mov
ret
push
shrl
push
in
push
rolb
aam
add
xchg
adc
push
lcall
into
test
int3
cli
or
xchg
sbbl
pop
push
xrelease
sub
jo
jne
lods
int3
sub
mov
mov
in
add
in
out
leave
cld
xor
daa
cltd
cwtl
sbb
dec
and
jae
jnp
outsb
sti
icebp
xor
movsb
lods
push
xlat
mov
ret
loope
iret
add
or
sahf
xchg
xor
cmp
or
testb
mov
out
ret
loop
mov
xchg
int
fiadds
cmp
addb
imul
mov
mov
cmp
sbb
sbb
jne
insl
push
testb
add
cmpsb
xor
add
dec
mov
ficoms
mov
iret
lret
dec
fmull
cmp
mov
cmp
inc
pop
jge
mov
lock
hlt
sbb
inc
dec
outsb
outsl
repnz
jo
inc
in
pushl
sbb
push
push
mull
fdiv
or
xor
divb
aad
lods
loope
sbb
je
stos
jmp
dec
aas
mov
notl
jne
repz
je
lahf
mov
mov
dec
mov
loopne
or
jbe
loop
sbb
loope
int
ja
mov
ds
mov
jb
mov
jge
pop
mov
mov
mov
dec
adc
test
xlat
repnz
xor
or
push
or
addr16
xor
es
jne
cmp
xchg
movsl
or
or
ret
test
rcrl
add
sbb
and
call
daa
cmp
xchg
dec
xor
cmp
out
mov
insb
js
stos
pop
or
addr16
cmp
sub
xchg
adc
mov
jns
mov
mov
inc
cmp
xchg
das
lret
js
cld
neg
inc
bound
mov
sub
lock
xchg
cmc
inc
shll
bound
mov
mov
jecxz
jg
or
lret
lds
mov
mov
and
push
imul
dec
dec
jp
xchg
jne
in
out
mov
xchg
and
pusha
std
sub
call
js
sub
adc
lea
shll
adc
adc
jmp
scas
or
aaa
pushl
cmp
sub
testb
enter
jecxz
jae
xlat
sbb
mov
or
ja
xchg
ja
fisubrl
or
push
movsl
rcll
jl
or
xchg
sbb
sub
loopne
sbb
nop
xchg
mov
pop
loopne
jl
sti
mov
out
fnstsw
pop
jae
rolb
dec
outsl
fdivs
dec
and
jge
rorb
xlat
insl
jae
jns
dec
push
pop
addr16
lahf
into
lcall
pop
cmp
xchg
fadds
xor
adc
ds
push
lcall
arpl
cmpsl
xchg
xor
aad
mov
mov
out
ds
cwtl
jne
adc
rol
jl
out
loop
mov
testb
pop
cmpl
inc
inc
out
jbe
push
imul
add
repz
jecxz
hlt
fs
test
test
and
jecxz
add
sbb
sarl
aam
test
rcrb
cld
cmp
mov
pop
bound
push
mov
cmp
xchg
xlat
push
daa
mov
lret
add
adc
jecxz
test
lea
in
or
aad
fimull
insb
add
cli
inc
lahf
nop
mov
ljmp
adc
imul
and
pusha
mov
stc
das
xchg
pop
int
outsl
jg
jbe
inc
push
inc
lock
subb
cmpsb
adc
mov
or
or
fs
mov
jl
icebp
f2xm1
or
movsl
insl
ss
je
loope
ret
adc
mov
sarw
inc
and
jl
into
mov
sbb
ds
jae
dec
stc
mov
jo
push
inc
in
or
inc
test
mov
add
jmp
cld
mov
jo
lods
dec
push
sub
cmp
pop
and
dec
in
shlb
pop
mov
ror
negb
icebp
dec
xorb
loopne
fwait
xor
push
arpl
in
and
std
in
inc
iret
bnd
jl
in
cmc
dec
enter
fcmovne
ljmp
sbb
xchg
in
jp
inc
lods
mov
pushf
push
sbb
sbb
std
nop
addl
popf
out
mov
lcall
dec
cmp
test
movl
fists
out
adc
mov
and
mov
jb
dec
push
push
mov
dec
sbb
mov
test
sahf
mov
dec
push
ds
pop
pop
cltd
rcrb
sti
scas
repz
ret
stc
mov
ja
adc
mov
push
sahf
xor
dec
addr16
sbbb
xacquire
hlt
mov
xchg
fld
mov
jmp
and
cli
shlb
and
xchg
orb
fwait
pop
insl
lahf
stc
add
sbb
jl
jg
adc
mov
lea
pop
mov
aas
arpl
push
xchg
pop
jo
movq
xchg
or
fdivs
stc
fimull
jle
cmpsb
and
les
sbb
and
stos
idivl
jle
bound
or
faddl
sub
cli
pop
arpl
mov
add
in
push
jno
mov
dec
and
test
cli
xlat
pop
fwait
mov
mov
orb
out
mov
clc
mov
xor
and
arpl
in
shlb
lock
mov
data16
mov
sbb
aad
pop
shlb
iret
jb
sub
inc
jge
dec
jb
adc
mov
add
cld
out
in
dec
cmp
fs
cmp
shlb
sub
mov
dec
pop
adc
sar
sub
mov
mov
sbbb
add
or
vdivss
jecxz
cmpb
popa
daa
scas
stos
loopne
jmp
jg
xchg
xchg
adc
adc
daa
push
aad
push
adc
leave
mov
lock
lea
pop
and
sbb
and
rorb
stos
pop
sbb
sub
fwait
test
ror
mov
shrl
enter
shll
test
popl
push
out
cmpsb
jo
stc
lret
sbb
mov
ror
dec
cltd
insl
jmp
adc
sti
and
inc
pop
mov
xchg
dec
movsl
mov
xor
jb
cmp
cmp
call
fdivrl
mov
push
adc
lret
xchg
jmp
jne
das
push
sbb
or
je
inc
jp
cmp
insl
xchg
pop
jns
stc
cli
adc
ficoml
xchg
sbb
pop
or
in
adcl
aad
shrb
cmpl
jp
icebp
ljmp
add
insb
sbb
mov
sbb
pop
mov
mov
jae
daa
mov
movsb
jne
jl
out
add
adc
outsb
push
data16
cmp
mov
mov
pop
and
fneni(8087
insl
jo
arpl
mov
scas
push
sbb
mov
or
mov
std
and
iret
mov
pop
out
mull
adc
pop
lock
mov
fmull
test
xchg
and
pop
jo
add
inc
movsb
xchg
jge
cmp
std
jle
insl
pop
ret
out
fdivs
clts
push
jecxz
mov
out
cmp
out
shrl
stc
fcomp
aad
les
out
test
insl
rol
mov
adc
adc
aaa
cmpb
xlat
je
rcl
xchg
sub
mov
add
nop
dec
dec
or
xchg
push
jge
push
int3
jmp
imul
xor
xchg
movb
lods
jle
sbb
in
int3
ljmp
flds
cmp
std
out
inc
mov
lcall
subb
push
out
cmpsb
dec
push
pop
ret
loopne
adc
fs
cmpsl
sub
adc
mov
bswap
scas
int
jge
das
mov
mov
xchg
mov
dec
cmc
pop
mov
xchg
out
in
pop
mov
mov
or
jo
imul
outsl
sub
mov
mov
daa
add
mov
mov
lret
in
mov
ss
mov
ret
and
aad
sti
or
pop
mov
test
dec
loop
ficoml
mov
sbb
mov
lret
add
or
sub
idivl
cmc
in
rclb
cmpsb
repnz
fdivs
aam
test
imul
cmp
add
das
cmp
daa
mov
insb
xchg
xchg
pop
fcmovne
xchg
xchg
push
inc
jb
negl
push
pushf
sub
faddl
adc
jnp
mov
stos
inc
test
jl
dec
test
xor
xor
dec
and
xchg
push
shlb
mov
xchg
popa
das
jl
or
mov
xchg
inc
rcl
xchg
hlt
stc
ret
or
mov
movd
pop
leave
dec
add
sti
pcmpeqb
push
incb
imul
jle
js
mov
movsb
mov
clc
mov
xlat
loope
cmp
and
pushf
out
sub
pop
in
add
push
stos
mov
bound
fdivr
pop
movsb
sahf
and
mov
icebp
ss
adc
fadds
push
dec
out
loop
mov
les
ss
or
insb
adc
je
sub
inc
adc
adc
push
std
into
push
xchg
mov
lahf
fwait
or
mov
fstps
in
inc
and
xchg
cld
and
pop
insl
pop
lods
cmp
lahf
pusha
ja
bound
push
addr16
push
mov
fidivrs
pop
adc
jbe
cmp
push
outsb
cmc
test
push
sbb
lahf
mov
sbb
xchg
mov
popa
push
repz
cli
jbe
aaa
pop
mov
pop
pop
cmpsb
sub
mov
inc
test
cmp
cmp
push
test
cwtl
xchg
sbb
pop
inc
je
pop
xchg
filds
enter
pusha
cmp
adc
mov
mov
std
enter
push
incb
adc
add
pop
xchg
mov
adcl
xchg
push
pop
cld
sub
sbb
repnz
cld
in
add
or
jle
inc
inc
jbe
push
lods
push
xor
jns
mov
jmp
std
dec
pop
dec
out
das
and
std
cmpb
mov
iret
xchg
xor
xchg
insl
push
push
add
das
inc
mov
shrl
sub
es
jg
push
xor
fcoms
xchg
mov
iret
push
gs
lods
dec
scas
lret
das
ja
xor
push
pop
sub
inc
or
dec
iret
outsl
int
and
sbb
insb
in
pop
shr
and
test
test
xorb
mov
jns
aaa
std
bound
sbb
nop
push
inc
lcall
scas
sti
pop
sub
jne
fmull
fstl
fildll
and
mov
and
aaa
stos
outsl
test
mov
mov
xor
imul
pop
push
fbld
push
mov
mov
inc
mov
imul
movb
stos
or
cmc
std
dec
mov
rolb
fwait
cmp
cmp
xchg
add
jg
insl
or
fisubs
sub
jae
jno
pop
jecxz
hlt
cs
in
enter
pop
popa
xchg
push
test
cmp
mov
dec
mov
rolb
inc
push
cmpl
in
test
cmp
sub
dec
push
and
push
sub
lret
dec
mov
jl
aaa
jb
movsl
out
dec
xchg
test
in
daa
adc
inc
mov
imul
or
arpl
into
dec
xrelease
lods
add
stos
fdiv
pop
enter
lea
sub
push
test
lock
cmpsb
adc
hlt
sbb
mov
xchg
mov
mov
lds
cli
mov
dec
jae
mov
jno
dec
push
stc
stc
jg
xor
aas
int3
imul
into
push
and
xchg
je
sti
cmc
test
dec
lock
lods
add
push
outsb
fcompl
cs
ficompl
mov
out
sub
jns
cmp
jge
pop
or
lods
mov
sub
mov
mov
lds
stos
jmp
lods
dec
or
cli
aaa
mov
jmp
enter
sub
pop
inc
fisubrs
jge
cli
stc
jno
mov
xor
mov
mov
xor
aas
dec
jl
sbb
insl
insb
sbb
es
lret
cmpsb
movsl
sub
mov
jno
push
pop
pusha
ljmp
pop
sub
jns
ds
repz
jns
scas
and
mov
add
mov
push
mov
pop
add
into
outsb
lret
aad
push
ret
cmp
mov
dec
scas
cmp
dec
xor
shl
movsb
jl
add
jnp
pop
sbb
dec
mov
lds
cmpsl
in
orb
cmp
xchg
dec
out
in
mov
data16
test
cli
icebp
adc
dec
jo
jp
and
mov
outsl
int
repnz
push
fistpll
xchg
xor
mov
push
lds
and
xchg
out
mov
inc
sbb
enter
push
std
lds
pushf
repz
push
out
addr16
lret
dec
shlb
and
movsb
sbb
ret
mov
adc
add
cmp
mov
stos
lods
pop
mov
test
lcall
pop
cmp
xor
mov
pop
jecxz
mov
into
mov
data16
out
dec
popa
mov
leave
out
sti
test
rcrb
imul
jae
adc
dec
lods
mov
mov
nop
push
jmp
and
mov
lahf
lahf
fisubrl
out
stos
sbb
iret
data16
aas
pop
sahf
xor
out
adc
notl
mov
push
ds
xchg
sbb
daa
dec
repnz
sbb
cmp
leave
subb
mov
adc
jge
jmp
push
mov
pusha
sub
das
std
shll
mov
xchg
out
mov
xchg
dec
cmp
mov
push
or
test
and
mov
cmp
pop
mov
dec
pusha
pusha
push
mov
adc
dec
je
inc
and
pusha
outsl
add
in
clc
insb
loop
add
icebp
cs
pop
mov
lahf
lret
add
test
aam
add
outsl
push
mov
and
add
lret
pop
aaa
add
push
pop
leave
das
inc
fdivrl
xor
xchg
sub
inc
ja
jne
sbb
scas
ret
loop
push
xchg
sub
xor
dec
inc
jp
pop
push
pop
hlt
data16
or
outsb
or
push
scas
leave
cs
xor
std
addr16
push
sub
test
les
mov
adc
dec
mov
leave
faddl
lock
dec
cmovl
or
or
push
sbb
jl
adc
mov
sbb
lret
aas
lds
mov
add
xor
stos
mov
int
fwait
aam
testl
mov
jnp
xor
lea
les
adc
and
xchg
push
frstor
mov
jo
out
hlt
into
gs
or
negb
cmp
push
inc
dec
andl
inc
je
fmull
aas
repz
xor
dec
ss
cld
xor
sub
jl
lock
lods
mov
dec
cmpl
xchg
dec
ficomps
cs
pop
sahf
pop
mov
popf
arpl
lock
sarl
imul
orl
push
dec
ja
mov
out
add
xor
fidivrl
inc
xor
dec
subb
mov
adcb
sbb
mov
repz
imul
hlt
xlat
incb
jae
test
test
test
out
cmp
sti
sbb
outsb
add
bound
dec
call
add
mov
inc
xor
adc
lods
movsb
cli
movsb
sar
cmp
cmpsb
jl
ljmp
xor
and
repnz
inc
lods
adc
push
xchg
shrl
cmc
ret
movsl
inc
clc
push
inc
cmp
mov
jg
xlat
sbb
sbb
xchg
pop
xlat
or
pop
je
push
clc
cld
pop
mov
or
fistl
fmulp
movsb
push
mov
or
jb
int
jl
push
std
jbe
imull
sub
jmp
and
iret
mov
and
inc
push
popa
into
sub
pop
orb
cmp
sbb
inc
cmp
push
xchg
test
lahf
subb
daa
js
enter
nop
ret
dec
jecxz
sbb
pop
xor
sbbb
inc
and
ss
xor
push
inc
hlt
dec
mov
or
lds
push
addr16
adc
lahf
adc
hlt
dec
jecxz
ret
xlat
rorl
je
mov
inc
stos
test
nop
push
imul
inc
push
int
movsb
inc
test
mov
and
jbe
mov
xor
cmp
clc
pop
rorb
pop
or
cld
mov
dec
sarb
mov
dec
out
aam
or
push
xor
sbb
dec
cmp
in
add
mov
add
jmp
imul
shll
inc
cwtl
out
ja
mov
loopne
inc
xlat
pop
lods
sub
fldcw
scas
sbb
jl
lret
jle
mov
add
ret
sbb
add
lods
fldl
sub
clc
fildll
ss
jb
mov
xor
ret
stc
mov
lock
test
inc
push
mov
cmp
out
daa
nop
ss
aaa
cmpsb
pop
into
in
pop
rcrl
push
mov
sbb
sbbb
mov
cmp
adc
cmp
ret
xor
cmpsl
pop
dec
int
jge
pop
jb
jae
or
xchg
iret
push
xchg
mov
in
mov
or
cwtl
gs
loope
mov
jbe
cmpsb
adc
cmpsb
cmp
push
xor
test
or
push
sub
push
hlt
xchg
sbb
push
fcoml
fwait
mov
pmullw
add
arpl
xchg
out
jecxz
es
mov
in
add
adc
ljmp
leave
fnstcw
scas
dec
lods
add
sarl
jne
adc
fdivrl
jns
in
push
sub
stos
ret
inc
mov
ja
sbb
icebp
test
rcrl
sub
loop
mov
xor
aad
mov
jecxz
xlat
loop
or
dec
dec
mov
and
rolb
push
nop
mov
pop
lods
cmpsb
es
outsb
lea
mov
pop
bound
into
mov
leave
push
and
fcom
out
out
pop
sarb
jmp
in
in
in
adc
mov
cmp
sbb
add
dec
adc
das
lcall
jl
jge
iret
cli
nop
pop
std
push
lods
int
shll
fbld
pushf
mov
cmp
cmc
mov
call
jp
jecxz
ss
stc
cmp
dec
iret
xchg
sbb
stc
add
int3
jo,pt
jnp
jp
or
push
cmp
or
sbb
mov
out
or
xorl
jne
pop
test
fdivr
mul
popf
mov
push
out
test
and
int3
or
jnp
jb
outsb
mov
mov
les
lods
adc
adc
js
inc
ret
pop
movsl
addr16
jg
xchg
pushf
fnstenv
push
lds
fisttpl
aam
cmpsb
insl
stos
out
xchg
fisubs
and
mov
sub
jnp
lret
enter
fisttpl
jae
outsb
pop
insb
mov
fnstcw
xor
pop
fcomp
mov
cmp
push
sub
cmp
adc
mov
out
xchg
add
mov
sar
loope
sti
mov
cmp
pop
roll
cmp
int
xchg
push
filds
enter
sti
imul
xchg
in
ja
addr16
pop
fcomps
cmp
pop
push
cmp
sub
ljmp
daa
sub
sbb
test
push
push
fs
inc
xchg
jecxz
push
insb
inc
lea
filds
or
cmp
or
stos
jecxz
xchg
test
fucomip
xor
xor
clc
lds
mov
mov
mov
int
xchg
jl
sahf
xorb
insb
mov
js
dec
pop
pop
dec
inc
xor
or
cmpb
icebp
sbb
loop
push
and
pop
loop
push
mov
std
pushf
mov
inc
adc
inc
out
out
fs
aad
test
and
mov
outsb
pop
and
inc
mov
and
dec
ljmp
pop
add
cs
xchg
nop
mov
dec
mov
out
mov
gs
push
add
jle
jl
push
mov
inc
lcall
inc
popa
inc
iret
fwait
iret
in
or
jl
push
mov
daa
loope
push
mov
lcall
pop
mov
or
scas
cmp
out
les
xchg
push
mov
scas
loopne
daa
add
movsl
lret
aaa
sub
outsl
or
sbb
xchg
ret
jmp
xchg
mov
jno
cltd
sbb
nop
mov
sarb
xorl
mov
fucomi
xchg
mov
nop
rorb
jl
mov
push
mov
mov
xor
mov
repz
push
mov
and
jle
cmp
repz
mov
push
mov
sbb
lcall
fisttps
jbe
fsts
mov
jae
mov
jl
and
cmp
sbb
xor
cwtl
shll
ss
lahf
orl
roll
nop
fsubrs
or
scas
dec
stc
sub
or
mov
add
pop
mov
push
jo
loop
out
push
cmp
insl
mov
rcll
dec
in
andb
ljmp
xor
aaa
repz
dec
sar
sbb
lret
jne
push
loop
popf
and
hlt
negl
add
mov
xlat
push
je
fwait
or
mov
sbb
fimuls
fdivr
jns
push
xor
inc
push
jae
jp,pt
dec
insl
cmp
lods
dec
cmpsl
jne
test
jge
adc
rolb
jne
mov
shrb
loopne
sub
sub
push
lcall
lret
adc
repz
xor
loope
fadds
dec
fldcw
inc
pusha
test
movsb
inc
lret
insb
cmpsb
jns
loope
mov
push
and
jmp
or
sti
rorb
mov
and
push
cltd
inc
xchg
and
ja
or
dec
out
out
movsb
xchg
fcoml
test
aam
push
lods
xchg
add
dec
xlat
ret
pushl
lahf
lcall
sbb
fs
mov
sbb
aas
mov
sub
fisttpl
inc
lcall
mov
bound
pop
and
add
cs
enter
xchg
idivl
jae
pop
jmp
dec
cmp
clc
pop
pop
or
mov
addr16
leave
cmp
movsl
adc
mov
out
xchg
adc
mov
pop
push
out
mov
adc
out
mov
push
push
dec
sti
jge
push
sbb
dec
decl
push
pop
mov
mov
push
cmpsl
mov
xor
adc
in
mov
loope
pusha
jbe
inc
xor
sbb
or
repz
and
js
lahf
shr
popa
sub
push
fwait
add
mov
sub
loop
orb
cmc
mov
jns
sar
shll
xchg
mov
lret
sbb
shrb
neg
and
arpl
in
mov
xchg
mov
sbb
adc
inc
rcl
jg
arpl
cmp
mov
push
aas
call
pusha
push
mov
or
dec
and
add
fwait
pop
sub
sub
dec
push
lds
dec
gs
ljmp
shrl
push
int
xchg
and
mov
ret
leave
jecxz
rorb
add
sbb
shrb
cmc
out
xchg
rclb
clc
gs
dec
inc
dec
dec
notb
test
mov
aaa
pushl
xor
aaa
jmp
mov
cltd
sarl
movsb
loope
shlb
jecxz
ffreep
mov
ljmp
jnp
or
sarl
jp
mov
sahf
xchg
pusha
xchg
aaa
jge
inc
arpl
pop
outsl
andl
cmpsl
repnz
dec
arpl
mov
xor
adc
xchg
adc
add
sub
pop
push
fisubs
jne
dec
lret
pop
aam
aaa
fs
sarb
cmp
lahf
lods
jbe
sub
call
xor
stos
xchg
test
data16
inc
inc
fcomps
shlb
test
movsl
xor
shrl
sbb
cmp
clc
pop
rclb
test
jp
loopne
fucomi
inc
inc
sbb
push
scas
and
xor
adc
xorl
mov
mov
fldt
fucomp
pop
cmp
mov
sub
cmpsb
mov
fisubs
test
imul
mov
pop
mov
test
pop
sub
test
popa
data16
xor
mov
inc
push
add
push
daa
lret
and
scas
sbb
lret
call
inc
sti
sbb
stos
outsl
mov
fistpl
cwtl
cmpsl
sbb
or
std
pop
or
sbb
and
xchg
nop
jmp
mov
push
aas
aam
addb
or
roll
adc
int
xor
movsl
cmp
mov
or
scas
flds
popf
cmp
jb
cmp
repz
pop
fsubrl
inc
fistps
test
sbb
mov
and
jecxz
xchg
jge
fwait
hlt
add
daa
test
mov
pushf
jbe
dec
adc
jne
cwtl
push
fildl
out
les
rcll
das
fs
addr16
sub
xchg
pop
cmpsl
loop
data16
cmpl
int
icebp
stos
and
add
adcl
sarl
dec
jmp
popa
imul
cmpsl
rcrb
hlt
in
repz
lods
adc
push
and
mov
sbb
pop
scas
xor
push
xchg
adcl
loop
pushf
dec
cmp
or
inc
mov
pop
dec
jl
in
mov
sbb
out
dec
sbb
xor
test
das
mov
or
sahf
mov
inc
mov
dec
sbb
or
lock
and
repz
out
pusha
lds
roll
sbb
inc
dec
mov
outsl
mov
imul
leave
jmp
adc
popl
add
mov
inc
mov
loop
out
push
xchg
adc
push
xchg
inc
mov
adc
notl
xlat
sbb
fsubl
jns
stc
aaa
sbb
sbb
jg
lcall
add
xchg
add
imul
pop
movsb
add
push
jbe
pop
jge
out
add
pop
popf
add
mov
lds
jg
mov
aaa
xor
lods
es
in
incl
sub
insl
pop
mov
subl
sub
out
mov
xchg
pushf
jl
push
mov
nop
dec
outsl
icebp
jl
or
ds
mov
loop
lods
out
jmp
add
xor
test
add
cmpsb
ljmp
lea
repnz
out
xchg
fnsave
idivl
xor
adc
add
imul
mov
cmp
loop
dec
pop
jo
not
jmp
pop
cltd
dec
gs
pop
lahf
ret
cmp
adc
mov
jp
mov
cs
adc
or
mov
les
cmpsl
lods
mov
sahf
popf
fwait
xchg
mov
push
mov
call
cmp
or
sahf
xor
mov
and
push
inc
lret
pop
call
ret
jbe
push
mov
outsl
jb
jb
pop
pop
add
ljmp
test
xor
js
iret
test
rcrl
scas
movsl
pop
cld
and
incb
fdivrp
jge
jmp
in
mulb
and
push
cltd
iret
incb
pop
pushf
dec
cmc
sbb
adc
fdivrs
rclb
fisubl
js
ja
popf
lods
das
pushl
mov
rolb
inc
adcb
xor
inc
jne
test
test
loope
xchg
pushf
mov
movsl
pop
dec
and
pop
insb
or
dec
mov
loope
cli
and
add
dec
xchg
test
jb
popf
xchg
xchg
pop
sar
dec
fidivrl
adc
cmp
idivb
test
filds
cmp
adc
out
mov
dec
pushf
xor
sbb
lods
mov
xchg
push
cmp
js
test
testb
popl
jno
pop
mov
sbb
mov
adc
mov
addr16
test
stos
inc
fnstsw
sbb
and
data16
mov
xchg
jle
test
mov
inc
push
or
push
push
sbb
cmpsb
inc
mov
loop
dec
sbb
ljmp
xchg
xchg
xor
outsl
adc
xchg
inc
mov
xor
sub
dec
fisttpl
pop
lods
adc
lahf
push
mov
jle
dec
nop
lea
daa
or
and
pop
jae
xor
jmp
xor
ret
inc
pop
or
sub
inc
xchg
push
pop
addr16
or
icebp
rclb
push
cmp
and
cmp
iret
filds
and
mov
paddsb
sbb
jecxz
push
movsl
jbe
out
rolb
outsb
stos
imul
sub
std
adc
and
int3
inc
jle
movsb
add
push
lea
sbb
mov
stos
adc
repnz
cmp
add
je
push
mov
out
jb
outsl
js
cmpsb
inc
andb
outsb
mov
xlat
inc
sti
outsb
fadds
jno
inc
andb
cmp
mov
div
mov
pop
outsb
pushf
loop
pop
jb
xchg
fisubrl
adc
lock
es
aaa
es
shrl
sub
or
sbb
mov
jmp
dec
sbb
jp
daa
pop
ljmp
adc
movsl
popa
sub
mov
orb
stc
mov
inc
cld
inc
stos
bound
mov
adc
pop
sub
inc
push
xchg
adc
push
jb
imul
cmp
fidivrs
pop
and
shrl
dec
arpl
xchg
scas
out
sub
pop
into
ljmp
out
aaa
pop
cmp
mov
xchg
fsubs
adc
sahf
out
pop
cmp
rclb
adc
adc
mov
leave
aad
je
mov
adc
jne
mov
div
cld
in
mov
sbb
gs
ss
cmc
or
fwait
call
js
rolb
inc
aam
pop
sub
sub
rcll
sub
cmp
sub
push
cmp
popf
decb
sbb
andb
pop
es
hlt
lock
sbb
mov
int
aam
pop
negl
call
mov
std
mov
or
add
jmp
loope
loope
or
dec
sbb
pop
push
out
ret
outsl
pop
setns
adc
push
aad
std
cwtl
push
xchg
xor
add
jge
inc
mov
je
jp
mov
in
push
stos
mov
mov
adc
arpl
test
clc
jg
cmpsl
xor
js
int
lds
icebp
xchg
in
pop
adcb
sub
test
cmp
rolb
lea
mov
adc
push
xchg
shlb
xor
add
sbb
js
fldcw
mov
xchg
mov
and
cmpsb
out
sub
out
inc
mov
popf
mov
sbb
push
mov
rdmsr
mov
mov
xchg
xchg
in
mov
in
mov
fildl
fdivl
xor
in
test
xchg
pop
sahf
push
xlat
mov
inc
pushf
sti
fisttpl
std
cmp
jmp
adc
mov
cmc
inc
cmp
sub
sub
dec
call
lcall
adc
pop
dec
fisttpl
cmp
fdivs
dec
dec
mov
inc
pop
jmp
mov
out
mov
imul
repz
xchg
dec
and
outsl
frstor
int
cmp
outsb
nop
jg
sbb
pop
cld
daa
sbb
jg
adc
xchg
and
xchg
je
lea
lea
inc
sub
and
dec
mov
andl
sub
mov
nop
push
sbb
inc
jmp
inc
fnstenv
arpl
adc
mov
daa
pop
and
mov
cmp
pop
sbb
add
popa
mov
insl
cld
decl
xor
xchg
cmp
out
xor
jne
push
mov
jb
leave
repz
and
nop
adc
cmpsb
rcll
jb,pn
icebp
in
ficomps
mov
mov
call
repnz
stos
das
scas
mov
mov
mov
cs
mov
sub
cmpsb
ja
pop
jo
adc
sbb
cmp
mov
movsb
insl
les
lahf
mov
orb
add
leave
add
mov
dec
adc
daa
int
xor
gs
lods
jp
insl
push
call
dec
pop
mov
mov
repnz
and
std
adc
adc
sbb
std
cmpsb
cmpsl
sar
push
out
push
test
jmp
mov
int
lea
mov
sahf
ds
inc
jmp
cmp
dec
or
cli
mov
sbb
pop
cmp
and
shrl
cltd
adc
sbb
pop
xor
adc
rcrb
jne
jge
xchg
push
or
cltd
imul
in
inc
mov
adc
aad
add
test
lock
sahf
inc
popl
cmp
mov
dec
mov
or
in
fwait
pop
inc
clc
jns
mov
jns
es
add
shrb
ret
xor
mov
or
data16
ds
cmp
adc
cli
adc
aam
jmp
dec
xlat
add
popf
add
imul
sub
dec
pop
gs
movsl
cmpsl
pop
in
xor
outsb
jle
add
jnp
xor
mov
and
setnp
bound
xchg
lock
iret
push
jnp
lret
adc
call
std
loopne
push
push
add
pop
jg
push
add
dec
int
push
iret
sub
jae
sbb
fcompl
cs
xchg
data16
sub
test
sub
ja
int3
mov
sbb
adc
movsl
into
jns
ss
or
adcb
adc
gs
push
inc
das
xchg
add
stos
mov
mov
fptan
xchg
stos
sbb
push
repnz
ret
int
in
aaa
stos
pop
cmp
in
xchg
push
add
out
xor
sbb
repnz
popf
mov
and
dec
fldcw
xor
jle
out
push
insb
sbb
xor
cmp
lods
int3
mov
enter
mov
test
imul
push
movzbl
push
mov
jge
mov
out
sbb
jbe
js
loopne
outsl
fs
loop
xchg
jg
hlt
rclb
es
jmp
repnz
sti
jnp
fistpll
lods
mov
sub
sbb
or
addb
dec
xchg
sbb
adc
sbb
xor
out
mov
fwait
imull
add
bound
jmp
xor
loop
and
mov
push
fiadds
cmp
call
pop
loopne
dec
push
mov
in
pop
popf
mov
sti
jge
cmp
sarl
pushf
jg
mov
push
cmc
in
hlt
clc
std
ret
pop
mov
in
sbb
into
pop
test
mov
lret
mov
fsubl
mov
push
sbb
in
hlt
sbb
ja
pop
rcrl
sub
scas
mov
inc
xor
add
xchg
scas
notl
test
and
sti
out
in
push
adc
pop
rcrb
mov
mov
add
int3
pop
out
fwait
mov
dec
inc
add
mov
sbb
out
das
jg
cmp
cmp
and
fistl
out
sahf
xor
xchg
or
leave
ss
shll
inc
inc
rcll
cmc
stos
ss
mov
push
mul
int3
mov
and
or
gs
mov
or
out
test
jle
pop
sub
jle
nop
push
inc
into
pop
ds
pop
mov
ds
sbb
lret
mov
or
push
mov
xchg
mov
mov
dec
fists
idiv
ljmp
adc
test
dec
inc
int
cltd
popf
movsl
jg
rcrb
push
xor
test
xchg
or
cmc
and
mov
adc
adc
jae
les
lret
iret
rorb
pop
aaa
adc
dec
jnp
push
add
lahf
push
mov
subl
xor
sarb
inc
sub
bound
in
mov
aad
dec
adc
dec
sub
sub
rcrb
ljmp
mov
clc
scas
and
cltd
clc
adc
incl
jp
xchg
lret
leave
enter
aas
rclb
and
xor
fldln2
jl
lret
or
xchg
mov
and
int
jb
testl
inc
mov
push
testb
lods
lret
dec
aas
clc
mov
loope
push
lods
into
pop
dec
shlb
clc
sub
pop
add
mov
jg
es
inc
mov
lods
push
xchg
mov
inc
sbb
inc
and
add
sar
fldcw
mov
ret
push
enter
in
mov
leave
pop
in
repz
mov
or
aaa
dec
adc
add
xor
rorb
stos
fnstcw
xchg
xor
movsb
dec
mov
jno
sub
mov
xchg
mov
adc
push
sub
int3
sbb
subl
fldcw
sbb
frstor
xchg
stos
cmc
ret
inc
inc
dec
shlb
rclb
push
and
add
enter
imul
sbb
jle
and
in
lahf
lods
cld
lods
push
aaa
xchg
jns
cmp
arpl
pop
cmp
repnz
xor
loop
sub
movsl
insb
mov
dec
sub
xor
stc
sub
sbb
xchg
insl
mov
cmp
push
cmp
add
fisttpl
sbbb
cwtl
idivl
dec
imulb
test
xor
sbb
out
sub
jne
pop
out
cmpsl
faddl
or
xchg
lods
shl
mov
aad
pop
adc
std
mov
cmp
cmc
jle
adc
mov
cli
aas
cmc
loope
mov
push
cli
imull
dec
push
aam
cmp
inc
rcrb
in
push
sti
mov
pop
adc
push
test
and
cwtl
popf
nop
dec
jmp
das
mov
mov
sbb
shll
aad
and
xchg
mov
sub
enter
xor
lret
add
sbb
push
sbb
push
aad
aas
repz
loop
sbb
jmp
jl
sbb
inc
push
scas
add
push
repz
aad
je
mov
mov
test
mov
mov
sub
in
dec
pop
xor
hlt
sbb
popf
rcll
dec
pop
lcall
push
ss
data16
inc
sti
jp
add
repz
fisttpll
dec
cwtl
sarl
int3
sbbb
mov
cld
in
dec
sbb
cltd
shrb
addb
xor
test
adc
leave
pop
test
push
jns
cmc
repz
jp
xor
push
movsb
lds
dec
mov
outsb
jmp
mov
push
shll
inc
out
repz
jp
adc
push
pop
add
lods
cwtl
mov
sub
nop
fwait
inc
popa
xor
xchg
out
subb
mov
cmp
push
or
mov
pop
jle
clc
add
cmpsl
mov
push
push
mov
test
xor
or
aam
fisubl
add
adc
mov
sub
movsb
mov
adc
das
or
addb
pop
push
add
and
dec
or
mov
adc
ficomps
arpl
cltd
ret
aas
movsb
sbb
push
pop
pop
sbb
xlat
xor
int
add
xchg
mov
adc
in
mov
dec
pop
fadds
mov
sbb
push
mov
inc
iret
sub
xor
ss
out
aas
cmc
add
push
and
sub
fs
and
mov
push
andl
fnstsw
mov
or
push
or
jae
pushf
xchg
dec
shr
inc
push
arpl
and
jns
fcmovu
out
mov
mov
or
mov
dec
xchg
into
push
mov
jns
enter
test
out
scas
aam
or
push
pop
and
xchg
cli
iret
lret
out
jo
test
sbb
sub
hlt
in
push
test
shl
cmpsb
daa
ret
cmpsl
ljmp
shl
fldenv
mov
push
mov
testl
sbb
or
repnz
push
dec
push
xor
adc
dec
repnz
push
iret
in
push
aam
mov
cwtl
adc
outsb
cld
dec
cltd
push
out
push
and
std
mov
and
mov
mov
ds
jae
jmp
jo
adc
in
in
sub
ret
cmc
fwait
es
xchg
aam
rclb
cmp
idivl
stos
mov
cmp
fbstp
outsl
sbb
or
addr16
shl
or
lock
stos
mov
bound
ljmp
sahf
aaa
xchg
imul
in
xchg
dec
shl
iret
push
sahf
mov
jg
mov
cmp
push
das
pop
push
pop
dec
pop
jge
subl
inc
cmp
sti
not
fst
outsb
mov
aaa
in
mov
or
shrb
push
packssdw
xor
outsl
dec
dec
push
sarl
cmp
jno
sti
or
ja
sbb
mov
out
dec
rcrl
jmp
xchg
stos
gs
stos
inc
mov
lahf
js
adc
inc
test
jae
rcl
sbb
push
cmpsb
xor
out
pop
dec
sbb
int
cmp
xor
cmp
adc
rcll
adc
cmc
and
fwait
out
or
cwtl
add
pop
mov
test
jns
push
jo
lea
fldcw
dec
ficompl
imul
adc
inc
inc
stos
ret
inc
out
dec
imulb
fcomps
aaa
jecxz
rcrb
pmaddwd
push
mov
cld
pop
push
dec
add
mov
mov
imul
rcll
test
cld
add
mov
aas
aaa
mov
add
sub
lret
ss
loop
lock
sub
out
xor
lret
inc
mov
add
xchg
push
ror
es
loopne
add
jb
mov
xlat
rolb
lcall
inc
pop
insl
and
cs
sub
popf
aaa
mov
ss
jle
andl
push
sbb
outsb
inc
inc
iret
mov
sbb
stos
mov
cmp
addr16
sbb
outsl
sub
shrb
scas
test
add
push
cwtl
or
lds
sbb
mov
adc
adc
mov
sub
mov
xor
mov
or
pop
sbb
in
xor
clc
in
mov
mov
mov
lcall
ror
test
jb
mov
scas
or
in
in
and
inc
and
inc
cmp
iret
and
in
xor
sahf
push
outsl
fcmovnb
scas
std
jb
arpl
jecxz
xor
gs
ret
push
add
cld
cmp
sbb
xor
arpl
pop
ss
cmp
pushf
mov
jo
sahf
fstps
popa
jg
arpl
push
orb
xchg
add
mov
push
xchg
imul
imull
mov
sbb
imul
pop
enter
and
dec
idivl
xchg
cmp
or
sbb
push
cmp
cs
jo
dec
and
je
adc
mull
in
dec
xor
pusha
in
mov
les
jg
or
and
and
mov
addr16
cli
pop
out
push
mov
ficoms
dec
sub
hlt
add
imul
or
js
and
fwait
jle
sahf
insb
add
int3
ljmp
insb
ret
xchg
mov
xor
sbb
dec
pop
icebp
adc
sar
sahf
fisubrl
test
loope
and
add
arpl
fs
cmpsl
pop
orb
insl
pop
pop
dec
popf
xor
inc
cmp
jno
ret
aas
out
loopne
xchg
int3
shrb
mov
lret
push
sbb
push
leave
lea
push
mov
or
push
loope
push
mov
pop
or
fnstsw
in
jp
cmpsl
mov
inc
stos
in
fmulp
xchg
mov
insb
aad
lods
lods
sub
lods
sub
sub
mov
mov
cmpsb
es
arpl
scas
xor
inc
sbb
imul
clc
aas
cmpb
xor
mov
push
data16
xor
lds
mov
or
and
mov
iret
push
lock
cs
mov
and
aad
add
rcrb
adc
add
push
mov
aad
mov
pop
out
add
mov
hlt
ljmp
xchg
xchg
leave
js
xor
inc
lods
add
adc
bound
insl
mov
jns
roll
adc
adc
lret
mov
jne
xchg
add
aam
jbe
lcall
jge
in
xchg
je
fs
sahf
inc
xchg
out
icebp
out
or
cltd
out
adc
std
xchg
fidivs
jge
mov
shl
sub
jmp
adc
xor
xchg
sub
and
call
mov
subb
enter
inc
pop
jns
adc
in
imulb
mov
subl
out
mov
leave
dec
bound
jecxz
pop
cmp
add
mov
push
lods
addr16
out
fstps
mov
jb
hlt
or
pop
adc
push
shrb
mov
aas
ljmp
pop
cmp
mov
add
mov
push
into
test
mov
mov
clc
pop
das
shrb
inc
imul
mov
imul
pop
loop
pop
mull
sub
out
clc
ljmp
popf
jge
cmp
mov
cmpsb
mov
mov
adc
dec
push
scas
sub
popa
nop
jg
inc
fsubr
int
dec
test
fildl
mov
test
addr16
xchg
mov
rcrl
cmp
into
or
aad
jo
addr16
mov
fistpll
lods
fldt
dec
mov
shlb
ja
test
xchg
fwait
in
push
push
pusha
cmp
in
xor
rcl
xchg
xchg
inc
int
insw
and
rcrb
mov
cmp
je
out
imul
cmpsl
inc
mov
mov
jg
sbb
push
jns
cmpsl
fistps
or
inc
add
dec
into
js
nop
sub
sbb
in
sub
push
aad
sub
jbe
je
pop
popf
out
xor
inc
mov
adc
xchg
loopne
shrl
lret
push
adc
fwait
adc
out
sbb
jmp
mov
pushf
xchg
sub
es
pop
mov
cmpl
mov
xor
test
cmp
rcrl
repnz
testb
outsl
dec
or
scas
popa
mov
inc
addb
jg
inc
or
nop
xchg
loop
or
dec
lcall
mov
mov
jno
jg
fs
or
loope
test
cmp
test
popa
dec
cmpsb
popf
cwtl
into
inc
iret
xlat
in
orl
ds
sbb
add
faddl
mov
mov
adc
dec
mov
je
sbb
mov
pusha
cwtl
xchg
gs
mov
pop
adcl
or
fsubrs
gs
ds
add
or
out
ret
push
cmp
in
mov
lahf
scas
ret
jmp
out
mov
std
pop
mov
ljmp
mov
dec
adc
dec
std
xchg
xor
jnp,pt
xor
push
lods
cmpsl
les
lea
out
mov
xchg
mov
test
fists
xor
loop
xchg
push
loope
outsl
xchg
gs
xchg
pop
xor
inc
pop
push
daa
pop
inc
mov
push
cld
or
xlat
pop
inc
dec
inc
cwtl
cltd
dec
sbb
dec
and
shlb
push
dec
xor
insl
add
out
inc
dec
jnp
xchg
in
fwait
out
dec
xor
in
sub
repz
add
xchg
pop
or
lcall
pop
and
jle
addl
sbb
loope
mov
cmp
inc
fcompl
sbb
xchg
push
loope
xchg
icebp
fbld
insb
dec
mov
push
xorl
or
cmp
jp
pop
imul
dec
adc
jns
cmp
add
xor
inc
mov
scas
loope
or
mov
in
or
lcall
rol
outsb
movq
insb
mov
push
push
add
sahf
mov
hlt
add
xchg
es
mov
popf
fsubs
xlat
xchg
mov
sub
mov
jnp
adc
cmpl
divl
push
or
das
aam
jle
lock
movsl
push
push
arpl
mov
div
xchg
adc
sub
rclb
xchg
pushf
push
push
push
ss
inc
cmpsl
sbb
cwtl
imull
popa
lock
xchg
jge
xchg
movsl
data16
jg
js
or
scas
pop
dec
sub
ja,pt
rolb
enter
mov
lods
sahf
adc
sub
insb
push
outsl
jae
push
clc
sarb
aas
lea
cmp
inc
mov
fs
int
mov
popf
popf
sub
aad
orl
mov
inc
sub
rolb
std
inc
jbe
rdpmc
and
mov
test
hlt
cmp
ror
ss
cmc
clc
iret
dec
mov
mov
rol
gs
lods
sbb
xchg
imul
push
or
jp
mov
sbb
inc
or
xorl
inc
hlt
cmp
mov
push
mov
mov
outsb
sbb
mov
pop
cs
sub
cmc
xor
scas
xorb
es
pop
in
test
jp
lcall
cwtl
loopne
lret
mov
mov
ret
cmpsl
jmp
pusha
push
cld
adc
sbb
arpl
push
mov
cs
fwait
adc
or
mul
loope
sub
cmp
movsl
cmpb
jb
xchg
lcall
fcompl
mov
ja
mov
sbb
and
out
pop
rclb
and
in
addb
sub
inc
adc
out
sbb
or
ficompl
mov
imul
xor
adc
push
or
mov
test
daa
shl
shrl
lret
je
iret
cmp
push
addb
jge
psrlw
jns
or
jmp
xlat
xor
xchg
dec
inc
mov
sub
sub
hlt
lea
in
shll
repnz
out
inc
testb
fidivl
mov
cs
pop
mov
and
add
testb
xor
inc
and
xor
adc
add
push
addr16
shl
addr16
adc
jb
in
js
xor
int
mov
scas
xchg
pop
call
dec
pop
cmp
lcall
sti
out
push
mov
in
lock
dec
test
dec
pop
sub
cwtl
lods
incb
insl
push
mov
mov
xchg
movsl
ret
idivb
out
ja
je
cmp
cmp
cli
adc
loopne
mov
cmpb
xlat
aam
sbb
gs
xchg
inc
mov
push
addl
pop
pop
ret
dec
xchg
lock
ret
pop
push
das
lods
int3
adc
dec
lret
in
fmull
inc
adc
ficompl
aaa
or
pop
pusha
shr
fidivl
jno
dec
dec
cmp
adc
mov
outsb
pop
mov
daa
push
popf
mov
xchg
decb
cltd
xchg
or
cltd
imul
leave
int
sub
inc
fnsave
xorl
fsub
mov
dec
jns
rol
inc
xor
loope
sti
mov
enter
into
push
dec
jne
ret
aad
mov
push
outsb
cmp
pop
and
or
mov
lds
add
stos
pusha
out
ja
sub
add
adc
xchg
dec
pop
mov
add
ficoml
sbb
ss
loop
daa
mov
pop
sub
cli
adc
loopew
and
ljmp
ljmp
sar
call
dec
imul
bound
dec
mov
dec
repnz
andb
mov
sbb
out
mov
aam
and
lcall
pop
mov
test
push
xchg
xchg
mov
sbb
mov
mov
lcall
test
add
sahf
or
and
xorl
outsb
call
pushf
icebp
push
mov
pop
ja
clc
dec
cli
jno
adc
rol
pop
inc
lock
lcall
cmp
loopne
les
push
stos
mov
cmp
and
rorb
scas
adc
jecxz
adc
dec
dec
enter
cmpl
jns
mov
fcmovnu
and
mov
js
push
loopne
mov
jo
nop
xchg
or
sbb
and
les
dec
test
scas
lods
mov
ret
jge
imul
aam
mov
inc
shl
fbstp
xchg
icebp
dec
push
into
test
xchg
add
fimuls
dec
jmp
and
stc
inc
scas
mov
dec
or
mov
loope
jno
jecxz,pt
scas
loop
out
cmp
add
lock
pop
cltd
int
ja
pop
popf
loop
jmp
and
int3
jae
xor
adc
or
aam
jnp
push
push
xchg
stos
hlt
movsb
stos
xchg
cwtl
mov
mov
cmpsl
dec
sbb
aaa
je
and
out
lods
imul
jmp
jnp
adc
ficoml
adc
cmpsl
shlb
sbbl
mov
outsl
mov
test
inc
mov
testb
push
repz
sahf
out
imul
mov
add
cmp
push
cltd
int3
jge
or
aam
jbe
xchg
scas
add
lret
bound
mov
jne
std
or
stc
mov
repnz
or
xchg
xor
xchg
mov
arpl
mov
cltd
pop
push
add
int
pop
ljmp
js
dec
repnz
fstpl
push
enter
rcrb
sbb
fadds
shrl
push
and
pusha
mov
psllq
loope
xchg
mov
sub
xchg
jae
lods
insl
in
mov
mov
loopne
mov
xchg
out
and
test
xor
sbb
mov
inc
ror
ret
or
add
push
jmp
in
aas
mov
and
lret
jae
repz
test
or
jno
sbb
out
push
xchg
sub
jo
mov
xchg
iret
mov
ds
fnstcw
pop
push
es
cmpsb
jmp
lods
arpl
out
lods
mov
outsl
cmp
xorb
stos
jnp
sbb
in
fimull
cltd
call
fwait
mov
decb
outsb
jae
cmpsb
dec
sbb
iret
dec
clc
js
clc
xorl
imul
pop
loopne
mov
mov
or
lret
mov
out
ss
lods
pop
jmp
mov
push
xor
iret
or
out
jle
add
mov
pop
in
cwtl
int
mov
or
adc
ret
jge
xor
pop
jb
mov
mov
cmp
nop
mov
lahf
xchg
cmp
cmp
daa
jmp
leave
cmpl
mov
aad
lods
scas
aad
adc
negb
inc
out
inc
and
push
dec
mov
rcrb
sub
loope
je
or
push
push
pushl
fwait
and
cmp
sahf
sbb
cmp
lods
mov
negb
add
or
nop
rolb
shlb
adc
testb
jg
and
in
leave
sbb
cmp
es
hlt
xor
jmp
dec
mov
rcrb
xlat
loope
test
mov
jae
out
shrb
add
dec
hlt
push
testl
xor
pop
inc
loopew
cmp
cmp
negl
sarb
and
mov
sti
jmp
mov
in
push
pop
divb
icebp
and
lods
addl
add
out
fldcw
idivb
mov
mov
mov
loopne
mov
add
and
sbb
mov
and
lret
clc
xchg
in
or
cmc
ret
test
push
shrb
push
mov
loope
sbb
movsb
repz
push
and
and
add
out
or
arpl
in
popf
xchg
cld
add
sbb
test
push
mov
mov
mov
fs
xchg
mov
mov
push
in
std
push
lahf
or
xor
pushf
xor
dec
daa
daa
data16
leave
push
dec
addr16
xchg
mov
imul
ja
push
adc
sub
push
mov
sub
xchg
mov
mov
pop
pop
push
mov
pop
popa
push
inc
loop
jecxz
call
xchg
sbb
mov
push
hlt
inc
jnp
arpl
cmp
fdivrs
adc
stos
imul
dec
pushf
fneni(8087
rcll
pop
sarb
sahf
mov
loop
sbb
push
inc
push
lock
mov
cmp
test
pop
lahf
leave
aam
in
jmp
fsubrs
cmp
xchg
add
mov
push
idiv
in
sbb
inc
lock
daa
movsw
mov
popa
lock
mov
mov
lret
incl
stos
cmp
adc
rcrb
cs
xor
push
filds
insl
outsl
sub
add
fadd
cmp
dec
cltd
sahf
lahf
das
sub
and
xchg
mov
push
and
jne
out
or
sbb
fbstp
mov
outsl
loopne
jmp
inc
out
adc
cs
and
jp
outsb
out
or
loope
bound
jne
pop
sbb
std
nop
pop
out
mov
dec
mov
iret
add
xchg
scas
in
jmp
jb
xlat
out
inc
test
push
xchg
mov
jo
dec
cmpsl
cmp
jb
dec
cli
xchg
jmp
fistpl
leave
in
xchg
or
fidivrl
dec
inc
mov
shll
pop
dec
mov
int3
jl
xor
pop
incl
xchg
jb
lcall
or
pop
out
mov
inc
movb
rclb
push
sahf
subb
dec
push
jno
jl
fdivrs
jle
fwait
dec
mov
test
ljmp
aas
mov
sbb
mov
dec
jle
movsl
mov
jle
or
popf
push
es
xchg
into
push
xlat
mov
adc
dec
shrb
mov
stos
ljmp
inc
cld
xchg
jmp
pop
xchg
in
add
xchg
mov
adc
hlt
test
push
mov
stc
pop
dec
add
les
jg
or
pop
sbb
cmp
iret
xchg
lcall
into
push
lcall
xchg
mov
ljmp
imul
jl
cltd
jbe
out
iret
mov
mov
ljmp
xchg
stos
mov
xlat
pop
rcrb
shl
push
outsb
push
pop
lock
or
inc
cmpsl
cmp
int
jecxz
add
pop
xlat
dec
bound
dec
dec
xchg
add
xor
sub
orl
out
jmp
aam
mov
jecxz
push
lds
xor
sub
stos
insl
add
div
cmpsl
dec
inc
dec
add
pop
pop
push
or
pop
mov
loopne
daa
add
xor
arpl
cs
or
cmp
mov
repnz
test
pop
adc
es
mov
sbb
push
test
pop
jbe
lods
rorb
cmp
pop
add
cltd
mov
icebp
mov
jecxz
pop
jl
dec
sbb
mov
cmpsl
add
mov
into
les
mov
flds
aad
or
jbe
lcall
mov
jno
sub
outsb
inc
notb
popw
das
jae
loop
addl
int
sbb
aad
mov
leave
js
fdivr
sbb
icebp
shl
imul
shlb
dec
popl
mov
sahf
gs
cs
ret
fimull
je
dec
sub
leave
jecxz
push
xchg
inc
sbb
sbbb
out
ljmp
nop
xchg
mov
jp
xchg
and
loop
lods
pushf
and
arpl
fwait
pop
sbb
jg
push
fisubs
cmp
mov
je
scas
bound
cmpsl
sbb
leave
int3
and
loop
adc
ret
lock
out
dec
movsb
xor
lea
das
test
jle
into
push
dec
arpl
push
xor
cltd
inc
shrl
frstpm(287
repnz
adc
mov
jo
mov
mov
xor
xor
sub
call
mov
inc
gs
mov
xor
scas
push
inc
adc
pusha
dec
push
jmp
pop
mov
mov
ja
test
ret
lret
push
in
sub
les
cld
nop
adc
jmp
and
cmp
stos
xchg
push
mov
call
cs
xor
scas
mov
mull
lret
inc
je
mov
out
jmp
ret
xchg
out
jmp
xor
das
scas
ljmp
daa
sub
test
mov
jne
cmpsl
mov
pop
sub
xor
mov
and
push
pop
out
daa
push
mov
int3
imul
jge
pop
xchg
add
std
push
hlt
lds
adc
inc
mov
pusha
pop
int3
cwtl
pop
es
push
pop
pop
xchg
sub
js
jno
add
test
roll
cmpsl
lret
lret
dec
daa
aam
dec
jge
movsl
xor
das
xchg
in
lcall
les
xchg
adc
and
mov
jns
stc
lret
adc
inc
xchg
fstpt
ffreep
stos
jge
std
jnp
inc
outsb
repnz
pop
xor
lret
fnsave
mov
loope
dec
push
out
cli
stos
jl
push
add
cltd
push
lock
shll
add
xchg
xchg
xchg
and
xchg
and
cmpsb
jp
leave
xchg
xchg
fmul
mov
mov
xor
cmp
lahf
ds
add
sbbb
rcrl
pop
outsl
stc
push
cmp
and
pushf
mov
mov
daa
cmp
icebp
mov
int3
shrb
test
mov
fdivrl
rcrl
lret
lds
stos
adc
mov
dec
inc
pushf
push
add
scas
lods
cmp
data16
jl
jb
cmc
or
cwtl
inc
xchg
cmp
pop
loop
xor
cmpsl
sti
sub
ja
cmp
cmp
loope
movsb
inc
cmpsb
lds
xchg
ret
adc
leave
fs
inc
jo
mov
inc
cmp
or
scas
popa
mov
push
xchg
ror
dec
adc
mov
mov
mov
ret
idivb
mov
incl
add
in
mov
pop
nop
outsb
xchg
cmpsl
pusha
mov
pusha
cmp
hlt
and
xchg
ss
pop
ret
test
int
jmp
scas
xchg
sbb
push
inc
insb
mov
mov
jge
repnz
js
and
jae
xchg
mov
sub
int3
dec
mov
xor
outsb
mov
test
stos
mov
jmp
dec
adc
lods
pop
pop
lods
stc
mov
sbb
and
xor
orl
or
sbb
inc
into
adcb
outsb
mov
cs
hlt
inc
pop
mov
mov
lea
xor
cmp
push
cmc
cmpsb
push
fistps
push
mov
pop
xor
inc
sub
repz
dec
nop
and
adc
das
push
fcompl
or
ljmp
arpl
mov
jb
push
or
sbb
inc
mov
mov
cmpsb
sbb
push
pop
jg
fwait
jmp
jp
call
cmp
nop
pop
pop
ja
jle
add
test
std
pop
lretw
xlat
jp
mov
mov
popf
mov
mov
fistl
out
lods
mov
and
in
cmp
stc
mov
mov
or
stos
stc
dec
mov
adc
jl
jo
idivl
jmp
and
iret
lcall
or
dec
sub
sub
std
jb
imul
sbb
fists
sub
cld
js
mov
fwait
push
sub
cltd
push
mov
inc
xchg
sbb
push
dec
or
cmp
cmp
scas
lret
pusha
cmp
push
fsubr
cwtl
mov
sbb
js
aaa
cld
out
ficomps
dec
scas
xor
packuswb
cmp
sbb
adc
lock
std
inc
fiaddl
sub
sbb
and
adcb
add
push
fsubr
xor
fidivs
shrb
adc
arpl
and
pop
mov
xchg
loopne
add
repnz
movsl
enter
jb
and
stc
loop
fwait
mov
repnz
sub
test
mov
cmp
cld
jno
cmp
mov
jno
cwtl
push
neg
neg
mov
dec
push
xor
aaa
gs
popf
pop
loopne
fidivl
mov
aad
sub
jg
leave
adc
cmpsl
mov
fsubl
mov
dec
mov
in
pop
jno
pop
pop
in
pop
inc
pop
inc
aad
lea
jb
add
gs
js
ret
jmp
imul
aas
aam
sti
push
js
lret
sbb
cmp
cmp
in
and
and
adc
fildl
data16
xchg
cmp
sub
sbb
xor
notl
jecxz
in
and
clc
vdbpsadbw
cmpsl
inc
cmp
push
cmpsl
repnz
test
stos
fsts
scas
and
xor
cmp
or
mov
aas
cmp
pusha
inc
pusha
sarb
in
mov
cmpl
xlat
cmc
imul
int
cltd
mov
inc
rcr
pushf
rol
cmc
repz
out
cwtl
rol
add
sbb
daa
rorl
jnp
into
push
jl
adc
mov
call
pop
mov
scas
sub
cmp
cli
stc
mov
mov
in
or
lods
in
outsb
ret
mov
mov
push
enter
in
es
into
imul
or
push
scas
test
add
aaa
fwait
pop
lret
jne
jecxz
mov
mov
mov
or
jecxz
pop
test
sbb
jmp
and
sbb
dec
mov
sub
sub
push
fwait
jl
addr16
arpl
inc
cmpsl
push
push
inc
mov
xchg
repnz
jns
push
pop
inc
aas
push
inc
gs
mov
push
push
rcrl
sub
inc
cmp
cli
push
mov
jp
xor
stc
and
cmp
xchg
mov
js
icebp
push
ficompl
and
cmpsb
mov
insb
cld
ror
xchg
dec
pop
scas
fs
cmp
nopl
mov
ljmp
cwtl
jbe
test
clc
das
push
mov
mov
inc
pop
inc
in
fldcw
out
cmpsl
jo
jge
gs
push
cltd
fs
enter
and
ds
jo
sub
jae
push
sub
add
je
pusha
jmp
jns
sbb
insl
aas
push
xchg
lock
test
dec
out
cmp
notb
push
push
and
call
xor
lods
lret
stc
cmp
gs
jno
cmpsl
xor
jnp
lock
jbe
mov
call
pop
mov
cmp
cmpsl
jno
sub
jmp
jle
insb
fwait
cld
pop
xchg
add
test
push
inc
aam
ljmp
popa
fdivl
dec
adc
jp
cmp
cmp
mov
mov
imul
xor
loope
outsb
out
mov
js
push
int3
sbb
inc
mov
cwtl
push
xchg
repnz
rorl
xchg
xchg
xchg
jp
loopne
pop
les
nop
lods
pop
mov
out
ja
mov
xchg
or
push
jne
jmp
mov
or
imul
fstpt
addr16
push
fwait
mov
xchg
mov
sub
outsb
xor
push
pop
mov
xchg
xchg
inc
pop
es
jmp
ret
insl
and
mov
pop
flds
cmp
add
iret
leave
and
movsl
and
lcall
stos
iret
pop
sbb
sub
push
scas
ss
imul
lret
test
pop
mov
xchg
out
imul
cli
sub
sbb
sub
cld
loop
xchg
mov
sarl
scas
add
loop
repnz
out
inc
inc
add
mov
xchg
push
dec
repnz
fidivrl
xorl
jae
cwtl
and
aam
jmp
outsb
scas
lock
jae
add
sbb
mov
cmc
clc
mov
movsb
pop
xor
lods
lret
push
dec
cmp
cwtl
push
mov
and
shl
or
push
cmc
xor
push
popf
push
and
inc
jno
sbb
xchg
pop
mov
das
int
cmp
test
scas
rcll
dec
add
in
add
outsl
ret
test
inc
dec
mov
pop
dec
mov
cmpsl
xchg
cmp
push
push
pop
daa
hlt
or
xchg
dec
sar
lret
je
in
outsb
mov
pushf
or
sbb
dec
scas
jmp
out
jno
adc
pushf
daa
cmp
jne
pop
jbe
inc
rcr
scas
xchg
add
stos
dec
faddl
cmp
sbb
jle
jns
add
movsl
fwait
cmp
and
adc
loope
in
arpl
xor
pop
lcall
dec
pop
mov
insl
fst
enter
test
js
xchg
aas
jecxz
mov
jg
divl
mov
sub
jne,pn
sbb
mov
xchg
push
sub
and
xor
inc
mov
jnp
xlat
pusha
mov
cmovp
mov
xlat
sti
mov
sbb
jg
dec
aaa
stc
ret
push
and
or
loop
test
pop
jnp
push
sub
mov
pop
xor
jg
int3
xor
jbe
mov
add
pop
call
mov
jbe
ss
gs
into
movsl
int
adc
xor
aas
stc
cmpsb
idivl
int
popf
cmp
mov
loop
ss
mov
sbb
les
pop
jle
repz
imulb
inc
movsl
clc
or
es
dec
iret
fmuls
imul
pop
jge
lcall
add
repz
je
mov
xor
add
xor
test
xchg
call
adc
or
stos
arpl
jg
push
stos
popf
xor
iret
fwait
subl
jne
or
pop
mov
mov
jmp
mov
divl
xchg
mov
pop
adc
movsb
std
jl
enter
mov
add
xchg
mov
xor
movsl
xor
sub
inc
jmp
fmull
insb
call
fisubs
ret
adc
push
inc
push
xor
je
in
dec
adc
adcb
lahf
lds
scas
push
cmp
sbb
push
push
inc
pop
mov
mov
aam
cmpsl
call
js
fmull
dec
mov
adc
rcrl
cmp
adc
pop
iret
aam
xor
mov
xlat
hlt
aad
jge
sub
mov
cmp
cwtl
sahf
shr
bnd
out
mov
arpl
and
jge
out
xchg
inc
pop
cmp
es
dec
std
pop
xor
or
bound
int
push
shlb
loope
and
ljmp
mov
push
mov
jmp
adc
sub
push
test
xchg
sbb
push
xchg
inc
dec
addb
push
scas
add
jp
mov
inc
dec
adc
lea
test
stc
jno
add
lds
and
adc
jmp
pop
scas
int
jbe
mov
sub
iret
addr16
stc
xorl
adc
mov
xlat
dec
jo
sub
sbb
jmp
cmp
aaa
loop
cmp
aas
imul
fsubr
dec
in
or
mov
and
push
sbb
in
inc
jmp
xor
repz
fwait
out
mov
pusha
imul
xor
inc
in
insl
fdivrs
aam
push
int
imul
jg
push
add
and
andl
jae
xchg
mov
dec
stc
mov
lret
mov
xchg
add
fsubrl
mov
enter
push
sub
pop
lds
mov
fld
mov
adc
push
icebp
mov
add
mov
dec
jno
or
push
mov
cmp
sbb
pop
mov
add
or
and
loopne
fwait
icebp
cmp
call
icebp
dec
push
jle
stos
mov
fistpll
dec
stc
mov
jae
mov
int
clc
mov
notl
cld
ficoms
push
hlt
push
or
in
xor
out
addr16
gs
mov
pusha
xor
push
pop
mov
lret
fstpl
into
jecxz
mov
jb
sub
sbb
xchg
and
lret
xchg
ds
push
xchg
mov
pop
cmp
daa
adc
and
lret
out
pop
pop
mov
mov
cmp
test
fisttps
rorb
cmp
rorl
cmp
jp
sbb
xchg
mov
push
cmp
mov
xor
or
mov
ja
mov
sub
jnp
repz
imul
add
mov
shrl
gs
cmp
fdivrs
loopne
mov
or
cmp
adc
mov
add
adc
sub
sub
jecxz
inc
lahf
mov
or
ret
mov
test
fs
or
int
or
push
sub
xor
push
icebp
int3
sbb
es
sub
std
js
mov
cmp
mov
xlat
jge
pop
aaa
cmc
gs
xchg
mov
cld
js
ret
fldenv
cmpsl
fmull
sahf
fisubs
ss
les
enter
call
gs
test
loop
stos
out
pop
jge
add
inc
data16
jecxz
imul
adc
push
icebp
push
jbe
ret
daa
sub
jle
cs
packssdw
jns
cli
mov
outsb
ljmp
out
in
mov
call
push
inc
jb
xlat
stos
pop
sti
ret
imul
push
mov
adc
jmp
lret
or
callw
lret
jno
cmp
shl
cmp
push
fcmove
push
outsb
cmpsb
sbb
sub
pusha
pop
dec
jp
in
mov
movsl
popf
mov
push
mov
je
int3
jmp
shll
cmp
imul
call
cmp
stos
jns
pop
jnp
xchg
sub
lret
xchg
stc
xchg
popf
ds
inc
fidivrl
pop
cwtl
fneni(8087
dec
lea
mov
aaa
ret
sub
jp
xchg
daa
ror
unpcklps
stos
ja
fdiv
into
rol
js
andl
jmp
or
fildl
fdivs
push
pushf
mov
inc
loope
and
das
stc
jnp
fbstp
das
cwtl
fs
in
jns
cmpsb
xchg
jno
das
mov
ja
dec
daa
inc
leave
and
mov
mov
or
and
test
push
sahf
mov
lret
out
iret
push
jmp
push
mov
ljmp
rorl
sahf
in
dec
cli
pushf
lods
repz
xchg
js
adc
jmp
pop
push
push
mov
cmp
mov
lods
ret
push
dec
fstpt
or
ds
mov
dec
sti
xchg
push
scas
adc
and
add
loopne
loope
hlt
icebp
add
rcl
and
xchg
out
ds
pop
push
xchg
dec
pusha
or
sbb
push
mov
pop
push
imul
aas
out
xor
scas
or
or
stos
outsl
pushf
popf
mov
dec
jp
pop
cwtl
mov
pop
sub
aas
aaa
mov
ljmp
dec
ljmp
fcompl
push
popf
xor
hlt
pop
lret
mov
int
cltd
inc
and
out
shlb
lods
sbb
and
loopne
fnsave
ss
popf
or
int
pop
test
aam
pushf
mov
leave
mov
dec
mov
sbb
fadds
adcb
leave
cmp
call
inc
movsb
lock
mov
lock
inc
mull
sbb
sbb
ret
into
in
jmp
rolb
lods
and
imul
cmp
in
ds
sbb
xchg
sbb
stc
stos
inc
xor
popf
pop
dec
mov
sahf
dec
pop
out
popl
lods
pop
and
mov
stos
sbb
xor
das
and
enter
les
dec
push
xchg
dec
ss
jns
ret
or
cmc
rcrl
jl
jge
add
fisttpll
push
mov
test
push
shll
xchg
xchg
addr16
mov
jno
xor
jne
rcrb
add
sub
call
and
xchg
inc
fs
aam
mov
xchg
std
sbbl
jnp
in
mov
std
add
mov
ficoms
jnp
xor
adc
jmp
xchg
fsts
aas
jne
and
xor
jl
lods
jb
xchg
scas
mov
sti
adc
lods
or
inc
mov
adc
sub
sahf
pop
cli
es
lret
sbb
shlb
cwtl
pop
sarb
insb
cmp
fcmovnbe
adc
pop
stc
sbb
or
cld
mov
mov
jae
jno
mov
sub
or
mov
push
popa
adc
xor
jo
mov
push
fimull
daa
cld
xlat
cmp
sub
ljmp
jb
sbb
mov
jns
fwait
ret
shll
hlt
insb
out
sarb
pop
xor
push
test
push
stos
int
out
add
push
lret
fldt
nop
add
and
mov
jg
pusha
push
and
ret
cmpsl
bound
call
mov
push
jp
shlb
mov
mov
cmpsl
and
or
frstor
push
xor
sbb
sub
add
cmp
lods
nop
and
sahf
mov
cmp
adc
or
jnp
pop
sarw
lea
into
mov
cmpsl
push
inc
clc
push
popf
jp
shrl
xor
cwtl
rcl
add
pop
xor
pop
ljmp
pop
int
test
xchg
iret
jl
jnp
cltd
cmp
loop
shrb
lea
mov
jl
add
out
dec
mov
cmpsb
dec
push
lds
xchg
outsl
lret
inc
in
pop
sbb
movsl
inc
lea
mov
xor
outsl
stos
or
mov
mov
rorb
sub
lret
mov
jb
pop
or
aam
push
popa
mov
lds
stc
pushf
fldenv
jno
or
das
fwait
add
je
xchg
movsb
cmp
push
xor
lods
cmpsl
mov
sarl
mov
aam
jns
out
sub
pop
dec
xor
loope
icebp
push
mov
fmull
lods
cmp
dec
ds
jg
lds
loop
out
js
and
xor
int3
cmp
xor
in
pop
lahf
mov
daa
inc
jle
fcmovnu
push
push
movsb
or
mov
mov
ljmp
iret
icebp
jmp
movsb
daa
jbe
adc
jnp
jge
mov
pop
mov
jle
lds
shrb
aad
testl
cld
pop
sbb
insb
jge
sub
xor
icebp
add
mov
pop
leave
pop
sbb
or
mov
in
pop
sub
jne
xor
or
push
push
xchg
xor
xchg
iret
nop
fldenv
sahf
out
fyl2xp1
ret
mov
and
stc
pop
shrl
enter
into
js
icebp
or
push
lock
inc
adc
or
inc
xchg
loopne
and
jbe
aam
mov
push
std
sahf
cmp
mov
adc
movsl
jnp
movb
lock
out
jmp
cmp
call
mov
lock
scas
iret
lods
into
mov
int
pop
pop
loope
add
mov
sbb
push
or
mov
cld
mov
dec
test
jne
or
mov
jmp
ljmp
daa
xor
cmc
and
or
ja
sti
mov
and
lods
sbb
jbe
xor
inc
mov
pop
jl
lret
mov
repz
js
fldenv
aad
pop
mov
inc
xadd
popl
and
xor
jmp
and
je
or
cmpsl
js
in
pop
add
dec
ja
sbb
and
jle
push
dec
cwtl
fldt
xlat
mov
sub
pop
or
cs
mov
push
inc
sbb
mov
cmp
cmp
mov
xor
inc
mov
popf
cmp
arpl
jge
insl
sbb
push
data16
cmp
fdivs
cmp
mov
imul
pop
lret
mov
pushf
mov
mov
mov
cwtl
mov
jb
loopne
bts
adc
push
fs
sub
ret
push
adc
dec
inc
out
cmpb
and
sub
add
sbb
and
mov
flds
or
sti
push
mov
or
mov
ljmp
inc
adc
mov
sbb
sub
cmc
push
push
push
test
add
in
jl
ja
lds
out
jp,pn
ds
xor
inc
adc
sub
cli
lea
cltd
cmp
sub
mov
arpl
addr16
sub
xchg
pop
in
push
stos
adc
add
ss
rcrb
pushf
sbb
push
cmp
insb
daa
lret
and
shll
adc
or
aas
pop
iret
rcrl
shl
mov
adc
es
loopne
in
cmp
and
xchg
sahf
xor
pushf
pop
push
xchg
pop
add
icebp
xor
test
js
les
pusha
xchg
xchg
sbb
jb
pusha
lea
sub
dec
cmc
test
je
xor
lret
stc
sbb
aas
fs
mov
lock
insb
imul
jae
leave
call
push
repz
mov
xchg
dec
mov
mov
add
outsl
imul
push
ss
sub
rep
pusha
push
add
enter
out
xor
mov
pop
in
cmp
jbe
aam
shlb
std
push
testl
out
addb
pop
out
in
movb
mov
jb
sbb
dec
out
push
in
lods
jns
int3
inc
xchg
xchg
mov
dec
in
mov
push
popf
and
call
or
scas
xlat
clc
inc
jnp
cmpsl
mov
sub
push
test
add
or
jmp
ljmp
jmp
push
clc
jle
push
add
push
addr16
pop
fwait
les
mov
cmc
mov
adc
fidivrl
clc
cmp
push
shll
loope
add
outsb
mov
pop
and
xor
daa
mov
adc
test
mov
in
jo
mov
xchg
lock
xor
fcomps
or
cmpsl
push
lcall
mov
lea
xchg
lcall
push
push
fwait
ror
rdtsc
push
and
pushf
sub
pop
fsubrl
push
add
push
cmp
push
inc
mov
shlb
in
fmuls
push
xchg
inc
fildll
or
int
pop
jnp
test
pop
and
adc
push
movsb
dec
test
rcr
dec
cwtl
mov
cmpsb
icebp
addb
in
jno
push
mov
cmp
cwtl
cmp
mov
inc
sar
lock
nop
popf
mov
mov
cmp
cmpsb
iret
sets
pop
cwtl
cmp
push
cli
and
imul
pop
mov
dec
cmp
dec
push
lret
outsl
jbe
in
push
shr
jb
int
dec
pop
cmpsb
jmp
lods
test
movsb
mov
dec
sbb
es
mov
decl
into
sbb
stc
iret
imul
jmp
jmp
aad
enter
xor
fldcw
inc
xchg
adc
sub
out
sub
ljmp
fiadds
push
xor
or
cwtl
arpl
arpl
sbb
xchg
push
fiadds
fdiv
mov
shl
dec
clc
lret
mov
cli
xchg
adcb
or
rorl
enter
gs
or
xchg
pop
jmp
int3
je
popa
out
test
in
push
das
fs
xchg
loopne
fcomps
inc
std
ss
cmp
adc
aam
int
xchg
mov
iret
mov
or
daa
or
jbe
pop
jg
outsl
jae
inc
aas
int3
mov
lods
mov
aam
sub
out
jb
insl
push
shll
pop
scas
inc
add
faddl
push
dec
iret
int3
loop
xchg
mov
inc
mov
pop
add
adc
fxch
mov
hlt
push
sbb
sub
sub
inc
ret
mov
dec
mov
daa
pop
into
ret
mov
fmuls
in
rcrl
fsubs
or
pop
jmp
sti
dec
sbb
ds
jp
adc
cmp
mov
jmp
cwtl
cwtl
sub
mov
shl
jbe
xchg
sub
outsl
ljmp
cli
lods
in
mov
xchg
jae
outsl
mov
mov
aas
loopne
xlat
mov
xlat
ss
or
test
add
pop
mov
jg
mov
add
adc
or
rcr
fcom
mov
dec
inc
sub
shlb
imul
in
inc
outsl
into
out
imul
push
inc
add
push
pop
push
aam
test
fstl
lods
ret
xchg
mov
popa
cmp
mov
mov
dec
test
call
xchg
push
lret
rol
jb
lods
scas
mov
mov
imull
setno
inc
pop
add
sbb
out
sbb
stc
mov
popf
ret
sbb
xor
popf
iret
adc
sbb
xor
and
aaa
jge
out
sub
bound
movsl
xchg
ss
inc
xchg
in
cmpsb
push
test
mov
iret
inc
call
dec
pop
rorl
and
mov
adc
aad
jle
aas
push
pop
scas
mov
xchg
enter
add
sbb
idivl
jo
fisttpll
inc
sub
mov
lcall
mov
insb
xor
cmp
push
sti
cmp
mov
fidivl
out
test
mov
jl
mov
lret
test
pop
aaa
mov
add
nop
rcrb
or
outsl
mov
sub
jb
lahf
mov
fadds
jge
and
cmp
pop
push
dec
xchg
cwtl
xor
inc
cld
xchg
sbb
jbe
ja
fldt
xchg
aaa
pushf
xor
loop
test
xchg
pop
push
pop
gs
mov
roll
cmp
cmp
rorl
adc
inc
adc
sbb
push
popf
or
push
cmp
xchg
mov
lret
mov
pop
jb
mov
out
orb
mov
or
out
xor
aam
mov
sub
inc
in
mov
pop
movsb
dec
leave
jecxz
pusha
test
lret
mov
jno
rcr
cmp
out
divl
jmp
inc
or
sub
mov
push
sub
test
roll
push
loope
ds
lds
rolb
fcomi
lcall
orl
mov
push
pop
into
jne
cmpsb
adcl
or
insb
call
push
test
xchg
pop
aas
xor
repz
insl
mov
mov
push
or
fsub
xchg
es
adc
or
inc
ds
fwait
daa
push
subl
sbb
xlat
and
inc
push
loop
out
aad
adc
jne
mov
fimuls
xor
cli
fisubrs
imul
enter
mov
mov
hlt
dec
js
mov
incb
add
test
outsb
lret
ss
int3
icebp
mov
popf
push
fisttps
push
add
sbb
mov
inc
mov
jns
lcall
or
xor
add
pop
loope
pop
push
nop
ret
xchg
dec
fcmovnu
mov
jl
push
add
lahf
dec
sbb
jae
out
test
ficoml
jo
fbstp
push
sti
jecxz
movsl
hlt
lock
dec
cld
push
mov
and
and
fxch
aad
sbb
jge
int
test
mov
inc
inc
enterw
sub
pop
adc
mov
addb
cvtps2pi
pop
mov
shl
push
fidivrs
push
xor
fbstp
push
hlt
xlat
pop
jecxz
ficomps
shr
aaa
jl
rcrb
stc
adc
cmp
jmp
into
mov
dec
push
fstpl
pop
adc
jo
mov
dec
es
push
jle
jg
and
clc
out
out
add
and
xor
pop
push
mov
lock
inc
dec
aam
ror
movsl
or
push
ljmp
pop
mov
shl
sbb
dec
sub
dec
push
adc
mov
cmpsb
orb
cli
ja
lret
arpl
xchg
std
mov
xchg
test
pop
pop
testl
lods
clc
sahf
stc
js
push
xchg
push
push
loope
lods
pop
cmp
call
xchg
sbb
jns
xchg
fdiv
cmc
into
nop
lods
ja
dec
mov
or
test
jl
xchg
enter
cld
lcall
dec
or
adc
cmp
sub
pop
enter
out
jp
jb
ret
pushf
aas
cs
mov
ss
add
jo
push
test
dec
repz
gs
out
popa
dec
push
loope
adc
mov
or
inc
test
lds
xor
or
xor
dec
sbb
sbb
jo
fstl
ret
mov
mov
inc
shll
mov
add
xor
push
inc
push
or
lea
pop
outsl
lds
scas
cmc
fimull
pushf
adc
push
push
xchg
leave
mov
dec
xchg
xchg
xchg
iret
sbb
xchg
fsts
nop
lahf
xorb
shrl
popf
testl
mov
mov
loopne
push
lods
test
mov
cli
ss
or
push
mov
jmp
push
int
jbe
push
jp
aad
jge
outsl
push
ja
mov
inc
pop
movsb
ss
stos
xor
mov
mov
xor
sub
lret
out
mov
sub
filds
mov
rcll
mov
xor
sbbb
int3
test
lock
or
shll
pusha
jo
xlat
fs
pop
inc
jnp
insl
inc
inc
fisttpl
or
or
sbb
adc
add
add
in
out
inc
pusha
test
leave
pop
and
mov
push
add
push
les
cmc
int3
pop
add
es
push
inc
enter
mov
fidivs
fwait
push
hlt
cld
pusha
mov
fs
jnp
push
mov
jae
add
cld
out
icebp
mov
and
sub
and
js
mov
lret
mov
cld
hlt
test
test
inc
das
lret
xchg
cmp
pop
sub
push
insb
popf
out
pop
movsb
addl
jmp
rcrl
pop
push
push
nop
jo
xor
aas
jb
pslld
hlt
add
scas
js
inc
push
mov
pop
mov
jmp
ret
mov
add
lods
mov
scas
ds
add
fbld
ljmp
jnp
lea
mov
sub
jae
lret
insb
sub
mov
js
jle
xchg
mov
or
and
pop
lcall
movntq
or
xchg
lret
jmp
mov
mov
imul
or
xchg
cmp
cmp
xchg
sub
xchg
or
cwtl
lahf
int3
push
ja
aaa
xor
jg
inc
test
icebp
ret
jns
cmc
ret
cmp
into
cld
cmp
sarb
push
fldenv
rclb
xor
push
mov
add
in
into
sbb
cmp
mov
xor
dec
pop
test
pop
or
mov
out
ja
notl
test
sub
repnz
cwtl
das
lahf
repz
cmc
or
adc
mulb
adc
jg
add
cmp
mov
mov
aam
out
ja
adc
pop
lods
push
test
xor
lods
jmp
lahf
fs
and
jle
div
subl
jmp
xor
inc
dec
mov
ja
jle
out
and
sub
cmc
push
movl
mov
outsl
sbbl
sub
mov
scas
mov
pop
cld
mov
loop
je
push
push
adc
mov
decl
pop
mov
test
ss
adc
add
rclb
fiaddl
cmpsb
lcall
xchg
sbb
test
scas
inc
mov
out
jl
pusha
repnz
hlt
stos
mov
push
pop
mov
arpl
sarb
jnp
inc
loopne
push
enter
cltd
or
mov
mov
jle
setge
insb
pop
mov
sbb
scas
push
gs
mov
mulb
lods
pop
out
adc
out
fdivrs
pop
aas
mov
int3
addl
call
add
mov
rclb
repnz
stos
movl
push
pop
xlat
jmp
xor
rcrb
scas
add
dec
hlt
mov
mov
cmpsb
aaa
dec
sarb
popf
and
pop
popa
hlt
xchg
in
gs
push
pop
cmc
fisubl
mov
mov
mov
pop
mov
bound
test
pop
mov
cmp
shr
cmp
mov
pop
and
and
loop
lcall
push
call
jae
push
mov
ret
scas
test
push
cltd
pop
mov
test
cmp
sbb
aad
icebp
dec
mov
and
push
mov
jb
jge,pn
fldz
adc
mov
jmp
das
fwait
xchg
xchg
mov
pop
push
and
jb
lods
mov
mov
bound
push
or
inc
mov
inc
arpl
in
mov
dec
out
xchg
ss
sbb
sub
aas
scas
dec
adc
clc
xchg
loop
cld
ss
mov
xor
int3
cmpl
sbb
adc
stc
icebp
repnz
scas
xchg
and
sub
mov
mov
push
pop
out
jno
or
enter
dec
jecxz
jb
jecxz
sbb
sti
sbb
lcall
push
lcall
int3
bound
pusha
jmp
lds
or
dec
and
mov
cmpsb
pop
scas
dec
cmp
pop
push
int3
cli
arpl
inc
adc
add
inc
mov
das
inc
add
mov
addr16
mov
mov
insl
push
pop
arpl
mov
mov
or
jbe
rcll
jmp
lret
leave
movsl
int
jne
xchg
sub
jbe
pop
or
testb
call
decb
enter
mov
lds
jge
adc
or
hlt
popf
mov
mov
mov
mov
test
stos
in
mov
push
popf
imul
sub
push
push
jl
std
jge
mov
in
inc
nop
stos
jp
mov
push
push
jmp
loope
daa
push
adc
xor
fstpl
bound
cld
xchg
jl
xchg
pop
fcomip
mov
bound
aam
test
lfs
jnp
movsb
xchg
pop
filds
loopne
je
mov
adc
mov
dec
sbb
lods
jg
mov
lds
ja
into
push
sub
xchg
rcr
pop
lret
pop
mov
push
mov
leave
jno
outsb
push
pop
jno
ror
push
iret
mov
sbb
dec
inc
adc
xor
adc
cmpsl
stos
push
push
cmp
mov
hlt
jne,pn
test
orl
pop
cmp
test
mov
ljmp
gs
es
jp
les
bound
addl
or
mov
dec
pop
cli
or
lock
xchg
inc
dec
sub
add
mov
and
jne
pop
push
sti
mov
pop
clc
cwtl
aas
sub
inc
out
stos
sarb
out
aaa
sbb
mov
mov
popa
cmp
repz
pop
inc
test
cmpsb
sbb
mov
ljmp
push
adc
mul
nop
cwtl
or
fcompl
pop
adc
subl
out
insl
xchg
arpl
and
jbe
or
dec
and
popf
out
test
scas
shlb
add
lret
or
test
subl
mov
fdivs
jns
movl
addl
cmp
stc
je
out
addr16
sub
dec
mov
dec
adc
rcr
test
push
in
test
jecxz
adc
push
sbb
inc
jl
push
les
mov
enter
cmpsl
data16
push
sarl
psadbw
cli
mov
in
xor
nop
lret
inc
dec
mov
dec
xlat
mov
leave
mov
cs
sbb
insb
xchg
pop
pop
out
cmp
and
arpl
xor
dec
mov
ret
in
nop
in
push
dec
adc
rcr
js
inc
xchg
addr16
or
xor
push
mov
xchg
stos
mov
jge
fistps
or
sbb
rolb
sarl
shr
inc
mov
mov
sbb
jecxz
call
in
in
outsl
fcmovnbe
push
inc
mov
addb
push
dec
aam
sbb
mov
lcall
ja
xchg
xchg
repz
adc
pop
lahf
rol
dec
xchg
push
sbb
and
bnd
pop
push
sahf
inc
push
cmp
lea
pop
cld
cli
bound
sti
push
dec
dec
les
mov
pop
jmp
test
fwait
ds
jns
mov
call
xor
xor
pop
sub
loop
daa
or
push
dec
push
mov
xchg
xchg
es
int3
call
xorl
jb
les
mov
daa
mov
aas
mov
pop
bound
jbe
or
cmc
mov
arpl
inc
divb
and
and
push
pop
clc
mov
repnz
or
push
dec
inc
ret
cld
xchg
outsl
cwtl
insl
aas
xor
pop
inc
stos
aad
hlt
movsb
orl
xor
cmpsl
sbb
adc
test
push
or
push
arpl
jmp
jbe
ss
pop
lods
xor
int
add
test
dec
xchg
mov
cmpl
push
pusha
mov
std
sbb
mov
lds
imul
aam
hlt
insb
loop
mov
repz
cmc
ds
mov
cmp
sti
and
aaa
mov
pop
xchg
cmp
lods
adc
lea
insb
adc
outsl
dec
test
mov
jmp
pop
push
clc
cmc
mov
push
jo
rclb
sbb
xor
in
adc
pop
mov
dec
popa
dec
roll
or
xchg
or
jns
sbb
xor
lret
push
mov
inc
mov
mov
mov
push
in
mov
push
fstpt
int3
cmp
mov
inc
jns
push
cmp
lods
daa
fldt
scas
mov
mov
pop
es
jmp
outsl
fsubrs
addr16
push
jne
adc
pushf
cwtl
xor
adc
lret
out
rcl
dec
test
dec
jecxz
mov
hlt
mov
fs
adc
daa
bound
xchg
xor
sbb
cmpsb
movsb
xchg
sub
cwtl
adc
js
sti
jns
push
pop
push
imul
fistpl
jns
cltd
mov
or
mov
and
enter
pushf
jnp
lret
daa
pop
jno
shll
data16
xor
pop
fdivs
fs
mov
dec
fsubl
bound
mov
add
push
jl
dec
mov
sbb
lods
xchg
test
mov
mov
sub
mov
incl
fsubl
ret
aad
fcmovnu
adc
ret
std
clc
cmp
xorb
fiadds
inc
add
mov
xchg
mov
and
mov
loop
ret
inc
aaa
insb
cld
xor
into
pop
inc
lcall
in
jb
shrb
nop
loopne
cmp
inc
or
and
pushl
loopne
dec
outsl
testb
cltd
lcall
pop
xor
shll
stos
jmp
pop
shll
dec
int
push
int3
rcrl
add
pop
mov
loope
lods
jmp
fiadds
mov
std
mov
pop
test
nop
adc
cmpsl
push
negb
push
xor
or
xor
xchg
inc
movsb
pop
push
xor
lea
mov
sti
mov
or
xchg
test
lret
icebp
shll
rclb
int
xchg
xchg
and
mov
and
adc
ret
jae
dec
push
sbb
push
imul
xchg
mov
jmp
dec
mov
pop
repnz
cmpb
dec
cmpsb
or
mov
add
mov
push
push
pop
push
pop
movsl
shrl
add
or
push
lea
add
fbld
rcl
stos
adc
adc
lock
inc
scas
mov
adc
aas
mov
dec
jl
gs
adc
test
pop
cmp
mov
xor
adc
jge
imul
xor
push
xchg
add
adc
lods
dec
sub
inc
je
es
push
cmp
movmskps
lock
je
movsb
test
clc
test
xchg
push
fmull
clc
adc
xor
insl
or
jg
cmp
mov
aad
pop
cmpsl
add
sahf
push
xchg
adc
lea
jbe
test
clc
test
mov
fnstsw
jne
orb
movsl
ljmp
shrb
lahf
xchg
add
adc
fmul
jp
fucompp
inc
mov
or
mov
popa
inc
imul
mov
lock
lcall
cmp
push
rcr
mov
sahf
mov
or
int
scas
xor
rorb
pushf
push
inc
test
add
mov
call
add
repz
daa
jg
test
lahf
xor
xchg
push
aad
repnz
add
into
dec
xor
in
iret
cmp
mov
push
adc
aad
ss
std
movsl
mov
fs
fimuls
jl
adcl
pop
sub
shrb
mov
je
outsl
test
sub
leave
xchg
outsl
nop
fwait
xor
mov
xchg
push
or
pop
mov
pusha
add
or
push
xor
sub
mov
push
push
xchg
push
popa
in
xor
sub
inc
or
xchg
rorb
sbb
jne
and
and
inc
bound
cwtl
int
adc
jmp
mov
jg
ja
dec
mov
mov
push
jp
sbb
inc
or
mov
sti
shl
push
or
mov
sub
xor
mov
shrb
sub
dec
ror
dec
shr
idiv
push
out
stos
xor
lahf
pop
push
iret
ljmp
and
call
dec
xor
xor
xchg
lock
sub
adc
bound
mov
jno
loop
in
repnz
out
add
cmp
mov
pop
mov
mov
cwtl
and
mov
lods
cmp
or
insl
outsl
xor
cmp
jbe
push
out
out
ss
push
sub
cmp
adc
addr16
repnz
cmc
loope
and
mov
pop
push
mov
out
or
jge
aas
push
mov
push
xchg
out
dec
mov
inc
push
mov
cltd
jo
sbb
inc
ret
movsl
sbb
mov
push
push
scas
adc
ret
das
inc
adcb
sub
dec
loope
fwait
mov
mov
paddsb
or
add
je
mov
jecxz
lods
mov
div
xor
shrl
push
pop
dec
mov
cltd
xchg
mov
ret
shrl
andl
mov
pop
rol
outsb
sbb
popaw
lods
inc
leave
pop
bound
imul
or
test
push
pop
inc
push
cmp
outsb
popf
push
pop
cld
frstor
xor
dec
add
pop
xor
push
cmc
int3
ret
cmpsl
popa
aaa
xchg
xor
lret
jne
imul
in
loop
sbb
pop
xor
in
mov
stc
je
lods
jae
std
popf
int
push
xchg
cs
aaa
in
ds
mov
sub
adc
inc
pushf
mov
xlat
jmp
loopne
adc
inc
cmp
daa
js
jno
inc
and
frstor
cmpsb
stos
clc
sbb
xlat
popa
hlt
setbe
dec
ja
es
stc
push
push
sbb
dec
inc
xor
andnps
lret
add
xchg
sub
mov
jl
mov
push
pushf
cwtl
fidivs
stc
hlt
lcall
xor
mov
xor
xchg
inc
insb
fisttpl
pop
std
mov
mov
jb
pop
push
pusha
inc
outsb
test
push
mov
push
jb
repz
aam
mov
pop
test
push
lret
pop
jbe
mov
dec
push
shl
dec
lods
sbb
mov
jne
imul
fmuls
out
inc
mov
or
ret
rcrb
mov
lea
mov
pusha
popa
cmpsl
pop
sbb
xchg
in
aas
mov
test
je
cmpsl
jo
mov
popa
decb
sub
dec
imul
mov
add
inc
pop
and
adcl
pop
xchg
adcl
pusha
icebp
jge
xchg
sbb
fs
jne
fcoml
lahf
xor
mov
sub
mov
je
sub
outsb
lods
movsb
mov
call
xor
mov
sub
repz
ret
aad
fistps
popf
add
mov
shll
xchg
sbb
add
lret
test
jp
fmul
jbe
hlt
xchg
lods
test
jmp
inc
cmp
fwait
repnz
stos
mov
push
sbb
pop
cmpsl
dec
lret
aas
pop
mov
ds
mov
mov
and
pop
and
lahf
pusha
push
fcoml
fldl
sub
cli
repz
icebp
imul
stc
int
sub
neg
test
rcll
insb
sub
out
icebp
aaa
orl
std
mov
cmp
mov
mov
push
sahf
hlt
repnz
mov
icebp
jo
aas
pop
rclb
and
xchg
xchg
xor
scas
clc
fcoml
cmovne
adc
xchg
push
cli
insl
and
add
std
fcmovnb
lock
push
jb
fiadds
and
cmpsb
test
jnp
test
xchg
cvtps2pd
ret
or
add
mov
enter
cmpsb
loope
add
xchg
nop
jmp
sar
cmp
xchg
xchg
imul
mov
test
fcmovne
and
in
mov
jae
imul
mov
fdivr
lock
fidivrl
insb
pusha
pusha
and
cmp
push
gs
mov
push
xchg
cmp
bound
xor
aaa
dec
fisubrs
push
pop
pop
sbb
pop
add
xchg
bound
dec
xlat
ljmp
push
dec
dec
push
xchg
clc
loop
test
je
je
lods
mov
lahf
sub
dec
stos
arpl
cmpb
mov
jl
xchg
inc
add
xor
leave
push
scas
inc
int
andl
cmpsb
cmp
cli
clc
sub
xor
xchg
and
nop
xor
ljmp
imul
add
push
ja
inc
push
ret
popl
outsl
adc
xor
or
mov
insb
add
and
push
dec
pusha
or
test
fidivl
lock
rcrl
and
xlat
pusha
jns
inc
jmp
test
ret
add
pusha
iret
das
add
sbb
fs
pop
ljmp
jno
inc
or
push
jb
movsl
sbb
pop
in
int
lahf
faddl
leave
cmp
sahf
jne
adc
outsl
sub
inc
dec
mov
cmc
notb
insb
cmp
xchg
and
ret
in
xchg
dec
mov
xchg
rolb
adcb
popf
push
mov
pushf
out
xor
pop
fsubl
jne
mov
jle
or
mov
mov
adc
std
in
mov
pop
cmp
jmp
add
xor
push
sub
fsubs
mov
bound
push
mov
loope
and
dec
sbb
and
push
cmpl
bound
daa
icebp
xor
into
jecxz
mov
das
cmp
inc
and
dec
ja
movl
cmpsb
xchg
cmp
lahf
xor
in
jle
sbb
inc
les
out
and
push
movsl
ja
mov
movsl
test
pop
shr
cmpl
filds
lret
cmp
cmp
rclb
sub
pushf
ret
insl
mov
mov
mov
test
mov
sub
lds
jns
xchg
pop
popa
rcr
jb
xchg
scas
out
out
xorb
pop
add
cmpsb
mov
mov
lods
ret
cmp
dec
sbb
outsb
sbb
xor
or
push
adc
xorl
fs
xchg
xchg
sbb
push
dec
jno
dec
dec
test
mov
icebp
mov
jge
push
mov
jmp
add
sub
insb
jmp
mov
xchg
aas
stos
negb
and
lret
dec
nop
dec
add
cs
xchg
jp
fld
pop
cmp
sub
sbb
bound
push
lahf
jmp
mov
jecxz
push
jo
cmp
jle
xchg
inc
xlat
jae
nop
test
adc
sub
test
mov
add
into
sub
mov
pop
add
xor
fwait
pop
add
movsb
fcoml
jl
mov
cmpb
cs
or
outsb
test
outsb
out
stc
mov
and
mov
loope
push
xor
cmp
stos
test
sbb
and
inc
loopne
inc
into
fildl
push
jo,pn
fcoms
enter
mov
push
int3
push
xchg
fimuls
push
insl
fistl
leave
jp
push
xchg
fbstp
xchg
push
mov
mov
mov
in
mov
cmp
movsl
push
inc
sub
adc
sub
push
pop
jmp
add
sub
dec
das
xor
cmp
in
pop
sbb
fs
cltd
lahf
sbb
out
out
pop
dec
jle
xor
sti
fsubs
and
lds
mov
cmp
mov
push
jp
sbbb
mov
dec
lret
inc
popf
xor
adc
dec
add
pop
inc
sbb
jae
aam
imul
xchg
mov
push
test
mov
iret
in
or
sub
cmp
sbb
popa
testl
stos
dec
inc
jmp
inc
scas
jge
xchg
lds
lret
dec
xor
pop
and
das
cmove
lock
jge
gs
js
clc
je
jns
shlb
rcr
cltd
ret
mov
out
mov
xor
outsl
mov
mov
imul
ret
ret
add
xchg
scas
mov
mov
or
test
jmp
sub
rol
inc
jmp
std
lds
push
hlt
ljmp
inc
leave
fmuls
es
push
mov
fdivl
icebp
fmull
nop
repnz
pop
and
and
dec
lahf
or
pop
xchg
jecxz
mov
lock
cmc
fldenv
pop
adc
loop
sbb
xchg
dec
sub
xchg
jns
ret
sbb
repz
aam
outsb
dec
pop
hlt
ret
add
adc
cltd
ret
inc
insl
xor
shll
push
aas
sbb
jns
inc
jo
jl
sar
adc
pop
mov
cmpsb
fwait
pop
cld
sub
jno
cwtl
in
add
mov
push
sahf
add
sub
out
pop
in
add
add
jmp
cmp
es
stos
inc
cli
cs
cmp
unpcklps
push
fistl
xchg
cld
lock
cmp
imul
cmpb
mov
dec
mov
cmpsl
cmc
push
mov
insl
mov
mov
push
add
cmp
mov
fidivs
stc
cmp
ret
shl
jl
jno
xchg
pop
test
xchg
dec
repz
in
divl
negb
cmp
dec
push
pop
inc
mov
daa
jns
push
sti
jb
pop
dec
xchg
inc
in
mov
mov
out
mov
movb
lock
ja
cmp
loope
and
test
dec
mov
stos
or
daa
jnp
jp
incl
or
out
in
jle
loop
stc
arpl
mov
or
imul
mov
push
push
sbb
inc
aad
bound
jno
bound
xchg
ja
push
lds
enter
leave
jne
push
inc
into
mov
cmc
inc
and
lods
push
push
subl
or
fsub
mov
mov
pop
bound
orl
movsb
sub
xchg
cmpsb
mov
push
inc
cmp
ret
rcr
dec
test
mov
in
popf
loope
push
dec
daa
lahf
jecxz
or
mul
mov
dec
sub
cmp
lods
adc
cmpsb
xchg
cmpsb
arpl
add
sbb
icebp
bound
push
leave
cwtl
popa
ret
mov
loop
les
jecxz
out
jbe
negb
lods
jg
dec
mov
jge
mov
xor
div
leave
sbb
cmp
cmp
repz
xor
call
mov
pop
int3
pop
push
pop
mov
push
test
not
push
lods
xchg
pop
add
xchg
mov
mov
xor
xor
hlt
push
insb
xor
jge
mov
stc
in
jmp
std
inc
scas
sub
sti
iret
in
cs
mov
rcrl
test
loopne
or
push
and
mov
pop
sbb
push
push
lahf
test
push
inc
pop
push
icebp
icebp
or
stos
cmp
jge
iret
xchg
mov
xchg
enter
sub
mov
ret
cld
mov
arpl
wbinvd
jo
sahf
incb
mov
test
mov
dec
lcall
int3
popa
xor
mov
pop
add
adc
mov
dec
inc
push
lods
add
in
addr16
je
add
jmp
mov
push
fwait
add
push
sahf
dec
out
fwait
aad
mov
and
adc
imul
xchg
push
out
xor
std
pop
test
test
dec
xor
movsl
push
loopne
leave
jl
test
test
test
add
loopne
nop
rolb
jl
xchg
mov
jecxz
cmp
jle
fmull
dec
mov
or
lods
test
jp
mov
loope
sub
pushf
sbb
mov
lds
xchg
sub
movsb
int3
arpl
adc
cmp
stos
dec
out
xor
hlt
mov
inc
fcmovne
imul
mov
push
adc
pop
jecxz
hlt
add
nop
jnp
sub
icebp
add
and
or
xchg
iret
fistpl
clc
xchg
dec
cmpsb
jp
pop
les
jp
dec
mov
aas
push
repnz
ja
adc
aas
ret
push
lahf
jbe
aaa
rclb
bound
fldlg2
mov
xor
sbb
fmul
xor
jmp
stos
hlt
cmp
push
sub
xchg
addl
dec
movsb
mov
mov
aam
jg
les
add
inc
pop
in
clc
or
aam
imul
xor
fnstsw
dec
pop
scas
inc
loope
cmpb
push
stc
xchg
adc
jmp
aam
imul
sbb
lock
scas
out
and
js
jge
adc
pop
ja
call
divl
fsub
sub
aad
cs
int3
clc
push
sbb
out
cs
and
push
das
loope
fmuls
mov
aas
ljmp
mov
inc
mov
pshufw
in
loopne
lea
lods
test
scas
or
test
inc
xchg
xchg
mov
push
pop
mov
sbb
aas
lds
movsb
fbld
dec
push
dec
push
pop
fcomip
inc
adc
loope
dec
sti
lret
jl
out
mov
xor
roll
sub
xor
icebp
nop
es
loop
lcall
decl
hlt
inc
mov
sbb
push
mov
stc
sbb
jecxz
leave
aas
int
testb
sub
mov
inc
xchg
ja
or
fcmovu
adc
sbb
dec
cli
das
inc
pop
stos
push
popa
daa
sub
jg
xchg
sbb
cmp
push
hlt
mov
xor
mov
add
dec
cmp
push
fwait
mov
dec
jnp
mov
inc
mov
mov
push
mov
pop
cmp
cltd
imul
xchg
out
repz
js
add
dec
dec
mov
inc
pushf
sub
push
xchg
jbe
sbb
push
push
xor
cwtl
jns
pop
test
mov
or
movb
mov
xor
fldenv
fidivrs
testl
mov
push
mov
in
cmpsb
daa
pop
cmpsb
sbbl
filds
jne
jle
cmp
mov
sub
loope
aaa
repnz
clc
cs
out
aam
rcll
mov
sahf
in
bound
push
inc
std
int3
dec
sbb
hlt
imul
bnd
add
jo
dec
jne
mov
ficomps
push
sbb
cmp
fisttpl
aad
inc
or
jo
pop
sub
sub
push
ja
or
pop
pop
mov
or
add
mov
cmpb
pop
add
popa
add
pop
xchg
popl
mov
jmp
leave
push
adc
out
push
and
sbb
or
scas
push
lock
inc
fisubl
stos
mov
xor
push
mov
imulb
addl
jnp
cltd
xor
sub
xchg
pop
jnp
cmp
fldln2
mov
xlat
cmpsl
adc
shll
test
enter
shrl
cmpsl
xor
or
cmpsl
adc
cmpl
popa
xlat
add
cltd
and
fisttps
jb
xchg
push
sbb
pop
xchg
pop
adc
shlb
sbb
movsb
insb
mov
stc
sbb
jbe
fnstsw
mov
sbb
arpl
loop
dec
call
dec
icebp
jmp
loope
lcall
sahf
adc
clc
mov
call
jb
and
rorl
stos
adc
jb
and
int3
mov
fsubp
ret
jb
out
xchg
adc
mov
movsl
rclb
lcall
testl
adc
mov
adc
push
or
imull
shlb
jmp
mov
outsb
or
mov
and
call
pop
jns
insl
add
xlat
rcll
jbe
stos
sbb
xchg
xor
xor
test
imul
mov
sbb
dec
sbb
loopne
sub
fistps
in
pop
xor
fmuls
mov
fsqrt
fdivl
dec
dec
xchg
jg
testl
add
sti
mov
sahf
xchg
xor
or
mov
mov
mov
shl
and
sub
insb
xor
adcl
pop
push
lret
imul
adc
pop
jnp
out
and
push
jg
js
jbe
andb
mov
insb
push
lock
lea
popf
popa
mov
sahf
xchg
cmp
jo
mov
aaa
add
int3
push
push
ds
xchg
jmp
icebp
push
mov
push
cwtl
push
ss
scas
sarb
loopne
fmuls
test
xor
popf
cmp
cmpsl
mov
test
and
inc
add
cmp
lret
mov
and
dec
out
incb
inc
jb
arpl
adc
dec
shlb
xor
aad
push
popa
xchg
add
push
sbb
outsb
loop
dec
adc
cmp
sub
adc
dec
dec
adc
bnd
push
mov
inc
lods
loope
orl
push
jge
pop
pop
test
cmp
mov
shlb
stos
addb
lret
aaa
push
jbe
mov
ljmp
out
into
movsb
fsubr
mov
dec
mov
add
testb
dec
arpl
add
iret
test
xchg
add
mov
scas
jl
push
outsb
nop
sbb
jle
push
loop
into
js
cmp
jbe
inc
or
es
sub
sub
insl
out
in
jle
idivl
xchg
pop
int3
xchg
sbb
shl
shll
jge
test
jbe
fnsave
lods
inc
shr
jo
push
lcall
iret
mov
stos
mov
pushf
arpl
dec
ljmp
mov
cmpsb
aas
testb
or
sub
push
imul
sub
inc
jbe
mull
sub
daa
dec
daa
loop
cmp
inc
or
adc
adc
cmp
lods
nop
aaa
daa
mov
out
ljmp
sub
dec
adc
jl
lods
test
and
inc
pop
into
pop
sbb
cmp
sub
pop
ficomps
pop
jg
fstpl
insb
xor
sbb
lret
out
out
pop
imul
ror
jle
xor
dec
jge
pop
repz
repz
mov
inc
or
add
daa
xchg
cmpsb
iret
mov
jmp
adc
enter
pop
or
and
sub
out
cmp
cmp
mov
and
push
rcrl
and
arpl
sbb
lea
push
push
adc
pop
sbb
jno
fistpl
sbb
in
pushf
pop
inc
mov
mov
pop
xchg
mov
insl
mov
push
cld
and
scas
out
stc
repz
scas
add
xchg
sbb
stos
push
in
mov
mov
cmp
jmp
insl
adc
add
push
incb
pop
mull
sahf
jg
push
mov
dec
mov
mov
push
test
nop
dec
fidivs
mov
xlat
sub
xorb
pop
cld
cmc
xchg
je
inc
ret
push
xchg
pop
or
fnstsw
pop
push
testl
jp
ja
es
mov
mov
ljmp
push
cmp
sub
out
lret
push
pop
add
js
out
mov
jne
dec
rorl
mov
leave
mov
ror
add
sub
cmc
lods
or
repnz
push
arpl
cmp
jg
mov
fiaddl
cmp
negb
incb
decb
adc
notl
sub
push
daa
push
or
movsb
pop
daa
inc
rorl
outsl
incl
xchg
loopne
loop
andl
fbld
xor
add
std
pop
insb
lret
and
lea
inc
pop
into
xchg
imul
adc
or
movsl
sbb
mov
aaa
lgs
rcl
fistpll
arpl
sahf
cwtl
jbe
pop
dec
outsl
mov
jo
xchg
cmp
enter
lods
adcb
push
dec
mov
bound
jl
and
sti
decl
mov
aad
cld
cmp
popf
out
push
cmp
mov
and
pop
sti
or
stos
bound
push
in
jnp
pop
leave
sub
jmp
dec
pop
add
and
lahf
mov
sarb
je
aas
aam
fs
sub
dec
std
cs
jbe
cmpsl
pop
lahf
shrl
mov
jge
js
insb
pop
dec
addb
sub
jb
add
add
mov
inc
imul
mov
daa
cld
adc
cmc
pop
rorl
sti
jge
ljmp
sbbb
xchg
pop
and
fcompl
fnstsw
lds
fisubs
xor
rcrl
push
mov
cmp
push
adc
sub
jmp
aas
out
insb
out
inc
adc
and
xlat
lods
arpl
push
cmp
push
ret
push
fildll
mov
adc
add
mov
int
cmp
call
add
stc
rclb
and
push
xor
ror
push
lds
stos
aaa
add
and
add
cltd
leave
fildl
pushf
mov
pusha
mov
or
lret
add
call
mov
in
mov
ret
sbb
sbb
ja
cmp
or
jg
cmp
stos
mov
fsubrs
pop
adc
addr16
out
pop
cli
pusha
or
mov
inc
in
and
pop
mov
pusha
xchg
pushf
in
cmp
pop
or
mov
dec
icebp
mov
out
stos
mov
or
lock
sbb
ljmp
xor
pop
or
sbb
arpl
mov
das
aad
dec
mov
lock
das
loopne
dec
fwait
mov
arpl
jns
lret
mov
dec
jnp
cmp
cld
out
lea
imul
sub
mov
sub
xor
pushf
xor
ss
mov
cmp
outsb
add
push
mov
addr16
mov
outsl
cmpsl
fildl
enter
inc
jae
cmp
repz
xchg
add
das
xchg
pop
pop
xchg
mov
divb
sbb
or
xchg
popf
dec
loope
mov
pop
flds
divb
add
mov
sbb
adc
pushf
ja
push
sbb
xchg
test
cmp
pop
add
rcrb
push
dec
fucomp
sub
sbb
ret
push
or
subb
adc
repz
sub
call
push
or
push
or
rcr
pop
mulb
pop
push
pop
js
mov
mov
sbb
rcrl
xor
xchg
or
sub
xchg
or
sarb
test
sub
cs
or
mov
xor
push
or
and
mov
sub
jmp
mov
incl
stc
orb
aas
mov
std
stc
lcall
mov
imul
cmp
into
xchg
out
xchg
or
or
and
push
push
imul
pop
mov
stos
loop
imul
jo
lods
nop
cltd
cmp
pop
xchg
dec
inc
test
fisttps
xor
xor
mov
xchg
adc
les
js
rolb
dec
push
shll
int
test
pop
mov
in
mov
in
fisttpl
mov
imul
sub
dec
fucom
sahf
mov
push
cs
icebp
mov
xchg
fimull
in
outsl
mov
push
mov
cld
add
dec
leave
pop
insl
dec
cmc
cwtl
out
insb
pop
insl
daa
sub
mov
leave
push
cld
pop
daa
jg
sub
mov
out
cmp
jmp
inc
inc
lea
das
jne
sub
or
out
psrad
mov
js
adc
dec
jno
inc
les
mov
jge
add
sub
sub
addb
dec
inc
les
mov
loopne
lds
call
xchg
ret
data16
arpl
xor
es
inc
sahf
in
jo
lret
lods
push
js
aas
inc
pop
repz
cwtl
test
or
pop
and
je
rcll
push
scas
faddl
xor
and
push
mov
lods
fsubrs
ret
rorb
add
xchg
data16
gs
and
test
test
sahf
and
and
mov
jo
cmc
push
inc
push
aas
or
outsl
in
out
les
fsubrs
cmpsb
insl
rcll
push
inc
aaa
or
xchg
xor
jbe
sub
pop
pop
xorl
fisttps
sbb
stos
dec
aam
in
leave
jl
divl
lods
hlt
aam
mov
sbb
inc
sub
mov
jge
add
xor
mov
pop
insb
sti
mov
push
jmp
jl
das
out
out
jg
cmp
mov
fnstcw
test
in
add
jg
in
enter
push
or
add
xchg
popf
xchg
dec
pop
or
or
adc
outsl
insl
aaa
imul
cld
cmp
lods
mov
adc
push
dec
and
mov
rorb
testw
clc
pop
imul
push
scas
inc
out
sub
add
ret
push
sbb
repz
or
cmp
test
mov
pop
orb
jp
and
pop
add
jp
out
fs
pop
dec
lret
imul
lods
jg
xor
sbb
or
xchg
pop
lahf
xchg
jecxz,pn
jnp
mov
mov
bound
das
mov
fcmovb
inc
loopne
js
in
xor
adc
mov
xchg
out
pushf
rcrl
cltd
dec
xchg
add
sbb
lds
fidivrl
jo
push
int3
add
xchg
push
pop
pop
sub
imul
pop
xchg
dec
je
fsts
jg
jge
daa
outsl
mov
ficoms
test
jb
insb
inc
test
add
cmp
jmp
pop
outsb
adc
sti
mov
cmp
leave
mul
pop
outsl
cmp
je
lret
push
inc
jno
sbb
push
das
jp
push
nop
sbb
repz
mov
cmp
imul
xchg
xchg
or
xor
insl
frstpm(287
shll
lahf
dec
pop
adc
fisttps
or
and
lret
shrl
hlt
pop
mov
push
jb
enter
mov
xorb
popa
fildl
jae
icebp
and
sub
cwtl
in
sbb
test
xor
int3
add
jg
push
jmp
cs
call
pop
pop
mov
xchg
in
shrl
imul
stos
pusha
dec
mov
les
scas
add
inc
cmp
cs
mov
lea
push
test
push
dec
in
pop
call
inc
mov
jb
popf
ja
enter
add
mov
jmp
and
loope
lods
dec
mov
cs
fcmovnu
xchg
mov
sbb
mov
je
sbb
ror
aaa
loopne
mov
leave
sub
aad
xor
mov
jmp
xchg
xchg
cli
in
xor
cs
or
jae
dec
aas
fcom
adc
jecxz
fsubs
pop
loope
add
in
jb
pop
sbb
jo
add
sbb
ss
stos
mov
sub
mov
or
or
test
aad
mov
in
inc
insb
lds
push
sahf
out
mov
in
popf
int
lods
lea
cmpsl
pop
pushl
mov
jecxz
outsb
arpl
jge
lods
into
lods
aad
pop
pop
mov
addb
mov
push
or
je
ret
imul
ficoml
lods
fidivrs
inc
into
sbb
sub
ret
xchg
and
pop
scas
or
or
mov
mov
and
sbb
mov
loopne
cmp
inc
daa
xor
adc
mov
push
out
inc
adc
cld
imul
mov
inc
loop
jb
cwtl
divb
cltd
pop
aas
add
pop
add
outsb
adc
test
aad
push
or
stos
or
cmp
js
jmp
fists
mov
dec
cmpsl
addr16
flds
in
fadds
xlat
not
iret
insb
lcall
pop
push
sub
xor
sub
or
ljmp
ss
mulb
out
xchg
jne
xchg
push
out
test
mov
rcrb
add
popf
mov
cmp
xchg
fidivl
pop
xor
mov
call
outsl
sbb
sbb
testb
push
cwtl
sbb
icebp
jnp
xchg
sub
int
jnp
cltd
mov
add
fmul
inc
fiadds
pop
inc
sbb
imul
xchg
scas
sub
and
mov
or
push
shrb
jmp
adc
mov
push
push
jae
mov
cmp
cmpb
cli
dec
lea
lret
jne
jmp
push
inc
pop
push
cmp
jb
push
or
ss
sbb
push
sbb
and
std
fidivl
fcomps
jnp
scas
int
add
or
rolb
lods
jns
fidivrl
insb
test
add
ja
int3
and
movsl
dec
ljmp
adc
jge
lcall
sbb
xor
scas
mov
cmp
fiaddl
imul
aad
popf
mov
xor
sarl
cmpsl
insb
mov
sarb
lods
sub
enter
inc
fldt
nop
into
lods
das
pop
bound
lock
ljmp
cld
js
add
fidivl
lods
fdivrp
adc
jnp
popa
xchg
pop
xchg
insl
stos
jo
imul
mov
bound
push
jno
mov
cmpl
stos
ror
adc
mov
rcrl
in
cmp
outsb
shr
int3
in
dec
lret
lret
ret
in
dec
scas
jg
repz
fcomip
cmp
inc
stos
sbb
jne
jne
mov
shl
iret
mov
mov
jbe
sbb
mov
jecxz
lcall
movsb
stos
mov
sbb
pop
ficoml
mov
mov
and
and
loop
add
test
fidivs
push
and
outsb
sub
scas
cwtl
imul
inc
jmp
ljmp
lahf
fidivl
sub
xchg
fs
xchg
push
pop
sub
mov
test
and
pop
movsl
aad
dec
adc
jae
addr16
enter
inc
into
imul
or
test
xor
mov
or
test
sahf
je
cmpsl
inc
cmp
mov
adc
sbb
jo
pop
repnz
stos
nop
dec
jmp
int
or
insb
rcl
dec
subb
and
mov
cmp
fbstp
scas
insb
mov
mov
push
xor
gs
mov
in
outsl
notb
jle
push
mov
in
decl
cmp
or
and
push
in
sub
lret
cwtl
pop
dec
mov
fwait
arpl
mov
idivb
cmp
adc
out
addr16
pop
jge
cmpsl
lcall
lds
dec
jle
hlt
jecxz
mov
inc
imul
jno
popf
mov
pushl
je
sub
popa
loop
arpl
loop
orb
arpl
ret
iret
lahf
cli
cld
ds
and
imul
jbe
mov
cmp
lea
adc
add
popa
adc
sti
test
adcb
into
xchg
loope
fstl
add
rorb
inc
mov
mov
mov
insb
stc
hlt
cmp
adc
outsl
sbb
data16
jno
fcmovnbe
into
add
xor
jne
insb
jo
pop
xchg
pop
mov
pop
int3
repz
mov
mov
dec
jl
loope
loope
cmp
push
jmp
inc
mov
xchg
xor
pop
ljmp
nop
stc
adc
push
and
cmp
xor
icebp
movsl
add
out
imul
mov
xchg
cli
pop
add
imul
inc
outsb
aad
cmpsl
fucomp
iret
xchg
fucomi
push
les
ret
bnd
add
dec
sub
sbbl
mov
scas
and
push
pop
fidivrs
icebp
out
jb
or
lods
xchg
stc
sub
adc
out
sbb
push
call
pop
xlat
xor
xor
into
jae
xchg
stc
mov
mov
orb
inc
jl
push
inc
imul
andb
and
jnp
inc
subl
les
insl
push
cs
or
cmp
dec
lret
push
xlat
xchg
xchg
daa
in
or
lock
insl
icebp
mov
cmp
lock
adc
fstl
jo
call
sahf
mov
push
shrd
xchg
mov
aaa
shl
add
stc
mov
outsl
in
inc
lret
dec
test
jbe
add
movsb
negl
fidivl
sbb
push
jmp
sbb
fistpll
xchg
test
pusha
mov
xlat
rclb
fdivrs
add
dec
cmp
gs
repz
adc
enter
fnstsw
jo
fiaddl
aam
lret
daa
loope
jle
jne
aas
fiadds
pop
stos
out
jge
xor
popf
cmp
scas
or
adc
fdivrs
xor
test
jno
sbb
aas
and
sahf
cltd
jns
jmp
scas
pop
inc
int3
lret
mov
test
pop
int
insb
mov
std
xor
mov
in
in
push
cmpsl
pop
push
push
push
loope
push
ja
fwait
scas
bound
dec
cmp
arpl
adc
loope
sbb
mov
ljmp
mul
mov
adc
or
repz
push
xchg
aas
mov
mov
dec
push
dec
fidivs
repnz
xchg
xor
jno
push
xchg
push
pop
aaa
nop
punpckhbw
lahf
mov
and
xlat
rorl
lret
fisttpl
shrl
adc
xchg
ja
adc
fcoml
lea
pop
je
arpl
xor
js
xor
adc
sub
lds
adc
mov
dec
sti
gs
xchg
push
jmp
in
inc
rcll
cmp
jno
and
in
mov
lock
data16
iret
and
popf
jecxz
aaa
push
xor
cmp
popf
ds
or
nop
insb
jp
hlt
mov
ljmp
xchg
cli
mov
loop
pushf
ss
or
jae
lret
inc
call
push
mov
jl
lret
add
int
ss
subb
rolb
fisubs
lahf
push
cltd
jl
pop
push
mov
popf
lret
inc
push
inc
les
mov
in
push
loop
jno
hlt
mov
sub
xchg
cltd
and
imul
nop
fistps
aad
pop
into
adc
lods
pusha
xchg
enter
mov
cltd
and
sub
xchg
adc
or
cmpb
in
xchg
cs
dec
push
or
movsb
lds
push
jge
cmp
shl
xor
add
imul
push
xchg
mov
arpl
pop
in
and
push
outsl
outsb
lock
lret
jp
stos
popa
popa
aam
call
popa
out
and
mov
mov
pop
cli
dec
add
or
jb
int3
sbb
xor
addr16
in
push
scas
imul
sbb
imul
loop
aaa
xor
mov
cmp
ljmp
cmp
cld
data16
fcomp
mov
mov
imulb
push
cmpsl
lods
scas
fcomps
jmp
push
xchg
xchg
sti
data16
mov
out
jnp
and
lock
and
cld
fs
jmp
shlb
cmp
sbb
ret
sub
adc
cld
in
xchg
scas
xor
xor
movb
loopne
fsubrl
add
aad
push
rcl
jno
mov
push
jle
jae
dec
and
pusha
push
mov
pop
sub
cmp
sahf
addl
fwait
test
pop
xchg
mov
jae
xor
mov
adc
xor
inc
mov
cmp
test
in
add
fisubrl
shl
push
or
lods
xor
adc
mov
jge
test
xchg
loope
les
adc
in
shlb
or
and
gs
test
out
mov
fldenv
sbb
cmp
jle
aam
scas
outsl
sar
scas
xor
test
add
sti
xchg
mov
sub
mov
loope
xchg
ds
outsl
gs
lcall
push
xor
xor
das
jne
es
insb
cwtl
in
outsb
stos
jecxz
or
clc
or
pop
dec
jmp
out
push
mov
sub
cli
test
jg,pn
sbb
loopne
mov
test
rcrl
add
sbb
mov
lods
clc
pop
cmpsb
sub
int3
sti
jecxz
out
aas
push
imul
sub
adc
mov
outsb
and
das
xchg
add
daa
out
into
jp
jo
lcall
daa
jecxz
iret
pop
xlat
fwait
fcmovu
je
add
test
and
int
mov
jbe
daa
lds
aas
mov
mov
add
push
clc
scas
or
or
xchg
and
mov
fsubs
adc
lret
sbb
jmp
sarl
inc
lods
pop
shl
sbb
das
lret
jl
jns
leave
fwait
out
mov
mov
mov
cli
push
cmpsl
mov
jge
sbb
mov
mov
rcll
cmpsb
bound
notl
sbb
dec
outsb
mov
mov
imul
lret
cli
fstps
int
popa
and
xchg
ret
mov
out
adc
sbb
sbb
lds
lahf
in
ds
popf
les
in
das
test
or
mov
or
data16
cltd
mov
adc
mov
lcall
sbb
push
lcall
dec
xor
in
sbb
push
in
inc
repz
push
jb
das
cmc
dec
pop
cmpsl
and
mov
call
lret
rcll
ss
stos
hlt
push
cmp
mov
rol
shlb
loope
cmp
dec
xchg
data16
sysret
mov
cmp
xchg
out
cwtl
mov
mov
inc
mov
scas
push
shrb
push
xchg
inc
rcrl
and
xlat
xor
sahf
das
std
loop
int
pop
aad
hlt
cmp
sbb
sahf
rcl
dec
pop
dec
and
push
or
ret
jp
dec
hlt
dec
push
sbb
and
icebp
xchg
movsl
test
into
sub
ret
and
push
pushl
pop
add
adc
push
and
std
in
and
stos
lret
ret
xlat
pop
xlat
mov
push
aad
and
fiaddl
fadds
adc
pop
shrl
pop
mov
ret
sub
scas
je
imul
inc
inc
sbb
jne
aad
stos
cmpsl
xchg
rol
hlt
incl
ja
adc
sbb
adc
clc
faddl
aam
xchg
push
cmpsb
xor
lock
sbb
imul
inc
sub
pop
fwait
or
int
test
movsl
sub
test
ficoml
xchg
push
lret
push
inc
and
inc
daa
es
add
cmc
scas
adc
aad
jg
test
jne
cli
mov
inc
xor
pushf
pop
pop
xchg
adcb
sbb
mov
inc
in
rclb
inc
cmp
stos
imul
in
mov
mov
fmul
push
fisubrs
cmp
ret
jmp
out
bound
je
push
inc
stc
in
in
cmp
decb
sbbb
mov
sub
pop
xchg
mov
lea
in
xorb
mov
cwtl
lock
adc
mov
sbb
adc
or
sbb
fmull
ret
sub
push
inc
adc
sarl
sbb
jo
lcall
enter
jl
add
popf
shlb
int3
lock
shll
or
push
jl
push
cmp
out
fidivrl
jns
mov
sub
xor
cmpsl
add
jo
idiv
adc
ja
fwait
add
aas
push
fstpt
mov
jno
mov
int
sti
sbb
cli
icebp
pop
sbb
jle
pop
nop
movntps
push
and
push
jmp
stc
pushf
mov
xlat
adc
in
adc
jle
lret
add
ljmp
push
subb
lret
aas
popf
lret
fs
push
push
ljmp
mov
jnp
and
push
dec
sbb
sbb
mull
dec
data16
iret
inc
fldt
pop
pop
lret
jmp
in
pop
sti
popa
cmpsl
mov
and
mov
fcomps
mov
repnz
cmp
incl
jae
sahf
scas
jecxz
sub
sbb
loop
mov
cmp
adc
cmp
and
stos
push
arpl
cwtl
xchg
xlat
iret
add
cmp
imul
sbb
popa
fdivr
aad
mov
xchg
jb
jae
mov
dec
lods
ficoms
ret
pusha
call
xor
xlat
push
jge
cwtl
dec
jle
sub
push
bound
rcr
rolb
popa
xchg
sbb
cmp
xor
call
push
stos
mov
or
daa
fstpt
lds
js
inc
lods
lods
leave
sarl
movsb
xchg
mov
sub
outsl
cmp
pop
fadds
push
mov
imulb
bound
push
and
inc
in
in
push
fidivs
mov
test
pop
movsb
in
and
cld
cltd
adc
dec
push
xor
pop
ud2
mov
adc
aam
fs
sbb
push
aam
cmp
mov
xor
inc
pop
jne
addr16
sub
cmpsb
push
icebp
test
popa
mov
xor
test
and
jmp
mov
aas
add
pop
mov
insl
enter
mov
jbe
sbb
jo
inc
jo
scas
fisttps
cmp
adc
jmp
pop
push
ror
in
inc
pop
cmp
adc
popa
test
or
pusha
arpl
fwait
cld
imul
pop
mov
mov
add
pop
jmp
lret
jge
insb
dec
test
cmpsb
lcall
jle
dec
jl
jmp
add
pusha
mov
fdivrs
add
stos
xor
or
cmp
add
adc
jp
jae
stc
out
fs
mov
outsb
fsubr
mov
or
cltd
jbe
add
bound
test
mov
out
cmc
mov
loopne
or
in
mov
mov
cmp
lods
sbb
lret
js
xor
roll
mov
leave
push
pushf
push
push
ss
stos
lret
movsb
mov
jno
dec
repz
clc
mov
test
iret
movsb
dec
addr16
or
aam
je
popa
loopne
add
aad
cmpsl
xchg
rclb
xor
cmc
sti
shlb
cld
lds
jmp
jge
and
jo
xlat
add
push
repz
in
dec
aad
test
clc
hlt
xchg
xor
subb
adc
push
sti
push
xchg
loopne
pushf
add
dec
inc
adc
jp
imul
jle
or
xlat
cli
clc
jg
push
mov
subb
ficoml
inc
xchg
gs
sub
xorl
insl
mov
arpl
ljmp
ss
and
push
test
mov
jecxz
lret
add
add
pop
loopne
cmp
cmp
and
insl
mov
lret
sbb
jmp
fimull
pop
add
ja
enter
sbbl
pop
shll
movsl
out
jb
jg
adc
jb
dec
testl
fldcw
mov
test
push
sbb
jo
push
cmp
vaddpd
sub
inc
cmp
mov
call
scas
push
insl
dec
mov
push
add
push
outsl
push
in
test
aaa
mov
lods
mov
add
and
xor
icebp
mov
push
add
stos
mov
lcall
std
pushf
inc
push
testl
and
addr16
hlt
outsb
inc
dec
cs
test
xor
pop
enter
cli
les
jno
xor
in
pop
mov
or
rclb
push
sbb
add
cmc
push
add
push
fbld
pusha
xchg
push
mov
fisttpll
sub
xchg
jnp
add
jnp
push
sub
imul
inc
and
jae
and
aas
mov
jnp
ds
mov
pop
scas
cli
es
loop
ja
repz
mov
leave
cli
fistps
cmp
ljmp
push
fwait
push
add
icebp
shll
cld
pop
cmp
or
mov
adc
mov
xor
jle
cmc
repnz
inc
jo
jl
adc
mov
sub
pop
pop
dec
sub
pop
pop
clc
dec
shr
aam
mov
fnstsw
xor
pop
push
imul
adc
add
lods
sbb
enter
sub
arpl
cmp
adc
js
lds
test
jns
xlat
aam
repnz
sbb
jmp
push
jne
ja
or
adc
adc
cmc
xchg
gs
adc
pop
repz
lods
lret
mov
xor
call
adc
xlat
bound
jecxz
mov
push
cmp
mov
dec
push
iret
pop
sub
mov
sbb
outsb
and
enter
sub
bound
push
iret
cmp
push
or
cltd
orb
xchg
fmul
das
movsl
sub
fistl
jbe
and
faddl
mov
je
call
mov
or
mov
xor
or
daa
xchg
mov
popa
lcallw
rolb
shll
cmpsl
imul
inc
push
add
mov
pop
repnz
scas
jmp
pop
sub
fstps
subb
stos
mov
lahf
ja
adc
adc
ljmp
add
cmp
xlat
mov
subl
push
outsl
daa
lcallw
inc
in
mul
das
xlat
cmp
push
sbb
imul
pop
mov
pop
sbbb
shlb
test
je
js
nop
inc
mov
push
xchg
cmpb
std
lret
cld
push
pop
stos
stos
cs
xchg
sub
bound
xor
xor
sbb
pusha
int3
lret
dec
insb
push
stos
xor
dec
xchg
dec
insb
test
ds
test
into
mov
and
mov
inc
and
divl
mov
pop
gs
push
test
lret
dec
lea
pop
mov
sbb
gs
aad
sub
mov
hlt
orl
sbb
das
inc
mov
xor
pop
insl
and
dec
mov
xchg
mov
adc
movsl
adc
sbb
shll
movsl
dec
popf
popa
jl
mov
xchg
aaa
jae
xor
mov
stc
sub
pushf
jmp
or
pop
sub
dec
pop
addl
loop
sbb
xchg
mov
pop
shl
sub
cltd
dec
xor
cli
push
cwtl
adcb
or
xchg
mov
adc
std
mov
xor
es
xor
dec
push
mov
or
into
jne
out
cli
or
lret
jns
ja
sub
sbb
inc
lds
push
cld
push
adc
lret
lahf
ret
cmp
sub
sub
in
mul
dec
int3
ss
icebp
pusha
shrl
addb
xor
adc
loop
jl
into
cs
aas
arpl
orb
xchg
hlt
jge
int
jg
cmp
jb
pop
ret
and
pop
stos
imul
fnstcw
fsts
lods
adc
inc
cmc
cmp
ds
in
aad
test
push
sub
mov
sti
dec
stos
or
push
repnz
aas
jb
lds
out
mov
or
popa
movsl
lahf
xchg
pop
pop
mull
les
ss
mov
xchg
imul
pop
subb
or
or
out
pop
xor
jp
adcb
jg
add
lock
xchg
sbb
fcompl
xchg
fsub
mov
adc
lds
sub
dec
mov
mov
or
loop
arpl
adc
jmp
movsb
or
fnstcw
pop
test
pop
pop
fwait
sbb
in
cmpsl
add
jb
dec
sarl
pop
pop
fld
mov
and
sbb
push
inc
rcrb
or
or
mov
cmp
lahf
sbb
dec
push
dec
fimuls
nop
adc
mov
shlb
mov
out
fildl
jbe
aad
xor
lcall
iret
sbb
lahf
jg
xchg
pusha
xlat
dec
dec
push
sbb
sbb
add
xchg
scas
jecxz
fs
rolb
xchg
jecxz
jecxz
aam
bound
mov
xor
stos
inc
cmp
imul
cmpsl
fidivl
dec
stc
mov
sti
popa
dec
mov
sub
jge
dec
fs
insb
or
inc
popf
fsub
mov
mov
repnz
inc
ds
xor
or
dec
repnz
movsl
jecxz
in
jns
or
xor
mov
stos
inc
je
jmp
cmc
cmc
mov
xor
push
loopne
inc
call
xor
and
mov
push
mov
sub
addr16
and
mov
xchg
nop
xchg
cwtl
std
inc
sti
addb
xchg
jp
loopne
and
insb
cmp
std
imul
mov
add
sbb
std
mov
jnp
jmp
scas
leave
push
pop
adc
aaa
out
hlt
cmpsl
in
lret
scas
sbb
fsubrs
in
mov
inc
dec
jmp
outsl
mov
dec
jnp
and
test
pusha
outsb
ja
aaa
daa
out
in
dec
mov
rclb
jecxz
mov
jmp
push
sub
jmp
mov
daa
test
mov
lcall
ss
mov
jmp
jl
mov
mov
sub
mov
mov
mov
cli
lods
enter
addr16
in
imul
jno
test
dec
sbb
shlb
sub
stos
ret
mov
lcall
cmp
jno
mov
insb
xor
ljmp
orb
push
inc
xchg
cmp
in
jg
pop
popf
flds
pop
mov
scas
cmpsb
fwait
lahf
aas
or
xor
cmp
mov
mov
inc
out
jns
fsubs
dec
in
jbe
repnz
push
dec
xlat
adc
daa
repz
mov
leave
addr16
adc
mov
scas
or
jg
push
jecxz
add
mov
call
sbb
inc
cmc
push
adc
sub
inc
inc
push
enter
scas
insb
mov
daa
loop
jg
xor
sbb
sub
stos
test
shl
jmp
imul
push
pop
xchg
xchg
pop
mov
or
notb
dec
negl
mov
rclb
inc
test
push
ds
sti
dec
cmp
in
inc
cmc
iret
dec
add
mov
lods
cmp
roll
loopne
scas
mov
in
pop
aas
aam
adc
push
jnp
in
inc
les
push
sbb
push
loopne
xor
sarl
stos
jae
fwait
cmc
inc
pop
mov
fimuls
push
xor
push
and
lahf
in
fldl
xor
cltd
jmp
test
dec
jno
mov
mov
outsb
xchg
push
das
cmp
jne
dec
cmp
and
sub
sbb
fs
fsubr
jp
mov
push
cwtl
xchg
jp
xor
test
fs
stos
jp
iret
fisttpl
pushf
pop
mov
in
daa
in
shll
cltd
and
adc
arpl
pop
sub
outsb
xor
sub
dec
ja
jbe
jl
pop
jne
xchg
jmp
mov
jns
push
add
out
or
enter
pushf
lret
rorl
or
sub
ret
or
outsb
ret
xor
mull
data16
notl
mov
lcall
sbb
lock
sub
loop
scas
ficoml
insb
and
push
cs
das
rorl
cld
push
push
and
in
pop
xlat
aaa
stos
sub
xchg
aas
dec
divb
or
aam
into
sub
loop
imull
add
jp
out
iret
out
mov
movsl
iret
and
test
mov
loop
cmp
scas
cmp
lea
jnp
rorb
hlt
lcall
iret
xor
repz
sbb
pushf
or
in
adc
lcall
mov
jl
ja
hlt
jp
jb
mov
inc
mov
inc
loope
and
and
xchg
add
mov
push
stos
cltd
xchg
fwait
cwtl
xor
bnd
rcrl
mov
popa
shll
stc
inc
xor
rolb
jnp
cmpsl
xchg
push
jbe
and
in
nop
dec
cwtl
inc
nop
stos
je
ds
iret
in
dec
pop
mov
xor
int3
inc
cwtl
add
movsb
fsubs
daa
cltd
and
mov
aam
xor
mov
sti
ss
fs
stos
repz
dec
outsb
push
dec
jmp
scas
out
stos
cmp
push
xor
push
out
imul
pop
decb
push
add
movntq
fwait
test
cmp
and
xchg
jp
inc
gs
icebp
mov
adc
in
in
push
testb
push
ljmp
ljmp
mov
int
pop
aam
mov
push
xchg
fwait
cltd
stc
pusha
int
dec
mov
sbb
push
xchg
in
shll
cmp
stos
repz
pop
lds
jl
test
adc
lea
dec
or
push
push
je
lock
xor
movsb
or
call
repz
push
push
add
lret
xchg
push
xchg
mov
je
jns
xor
xor
xor
call
sub
dec
push
retw
push
out
adc
cmp
shlb
in
push
lds
pop
adc
shlb
inc
fldt
xor
notl
popa
dec
leave
sbbb
mov
fs
mov
mov
or
mov
push
in
lods
cmp
shlb
xor
pop
in
dec
jno
daa
lcall
stos
int3
in
dec
xchg
inc
into
jp
lea
popa
jl
push
out
jg
fucomp
aam
push
cmp
icebp
inc
je
sbb
push
cmp
jecxz
sub
aam
inc
mov
in
adc
sub
sahf
jns
mov
inc
jg
cwtl
xor
movsl
sbb
in
mov
sbb
pushl
jbe
xchg
clc
push
ret
adc
hlt
cmp
jb
push
adc
rclb
push
rclb
pop
cmp
lea
mov
inc
add
mov
loop
lret
add
nop
push
dec
imul
adc
sarl
xor
and
xor
sub
mov
mov
or
movsb
sbbb
aaa
adcb
pusha
std
jmp
sub
xor
push
lret
jo
or
pop
mov
mov
andl
orb
push
test
push
ficoml
dec
es
dec
out
add
cltd
nop
jmp
ja
lret
jb
pop
repz
and
sbb
es
mov
mov
bound
and
insl
xchg
shll
jo
dec
xchg
outsl
andl
jle
sub
lods
test
les
sahf
jmp
xor
adc
dec
shl
push
mov
insl
mov
aaa
pop
andb
and
and
xor
inc
imull
test
movsl
inc
push
or
fdivrs
jno
mov
xor
insb
push
outsb
sbbb
sbb
cmp
cmpsb
fistpll
cmpsl
mov
lret
test
outsl
insl
add
orb
cmp
jle
ss
lods
hlt
das
push
loopne
icebp
in
orb
cmp
mov
repnz
pop
iret
and
add
pop
lahf
loop
mov
mov
lods
outsl
sub
mov
mov
inc
insb
add
out
dec
and
mov
and
xchg
imul
stos
iret
lret
mov
cwtl
add
xchg
jge
push
ret
lret
add
jg
inc
adc
fisttps
push
mov
mov
mov
adc
lea
loopne
xchg
subl
ficoml
into
cmpsb
lahf
push
movsl
mov
push
adc
push
fucomi
test
mov
sub
js
add
sbb
xor
pop
sahf
lds
dec
gs
fldenv
stc
dec
inc
dec
fs
mov
icebp
ja
ja
js
sub
add
movsl
xchg
adc
call
insl
jbe
or
inc
rorl
out
lcall
xchg
ds
xchg
lret
push
xor
loopne
push
or
jnp
jae
cmp
and
loopne
mov
dec
in
mov
sahf
test
adc
cmp
xchg
or
test
pop
mov
enter
push
mov
pinsrw
in
jo
shlb
and
pop
movsl
xlat
orb
mov
lock
outsb
es
jno
mov
or
or
mov
pop
mov
xchg
test
xchg
in
fs
testb
inc
enter
mov
or
insl
neg
jmp
imul
mov
adc
or
and
addr16
inc
popf
lods
scas
mov
call
js
inc
mov
fnsave
xor
outsb
fcomip
orl
inc
dec
test
outsl
push
ficoml
mov
cmpl
jle
xor
cmpsl
inc
mov
call
mov
sub
fwait
sbb
mov
repnz
mov
inc
mov
xchg
orl
add
mov
mov
idiv
leave
inc
fstl
fwait
cmp
dec
mov
push
scas
xchg
inc
xchg
int3
xor
fcomps
sub
insb
nop
mov
dec
stos
mov
test
fnsave
sbb
jae
pop
test
push
ss
mov
test
mov
in
iret
enter
jae
lea
push
lret
push
jl
and
icebp
jne
dec
pop
mov
lods
pop
mov
sub
jmp
xchg
and
daa
sahf
mul
xchg
outsl
lcall
xchg
mov
xchg
jae
jl
js
cmc
imul
mov
aaa
cmp
repz
lea
and
pop
dec
dec
jg
gs
pop
hlt
jmp
inc
imul
pop
push
add
rorl
clc
cltd
dec
and
cwtl
loopne
inc
cmp
ret
sahf
popa
cmp
xor
fwait
pop
dec
leave
adc
dec
fstl
inc
inc
in
sbb
mov
jo
dec
popa
cmp
and
pushf
test
or
cmp
imul
cmp
pop
add
mov
xor
data16
cmp
std
cmpsl
rcl
push
shrb
movsb
imul
mov
rolb
add
sti
pop
neg
mulb
lea
lret
les
mov
mov
xor
es
xor
xchg
xchg
fisubrl
fldenv
jae
xchg
mov
movsb
dec
adc
and
dec
stos
lret
pop
call
jnp
or
push
pop
push
or
icebp
push
mov
pop
je
stc
dec
and
mov
outsl
dec
sub
ror
pop
imul
mov
xor
enter
mov
sub
nop
ss
mov
sub
rolb
lahf
push
jl
je,pn
stos
ds
pop
es
push
jg
sub
dec
mov
and
mov
sub
inc
cmp
outsl
mov
push
sbb
adc
gs
push
in
mov
stos
cmp
divb
add
popf
fcos
adc
sti
inc
in
push
mov
fiaddl
mov
fcomps
jp
dec
das
cmp
stos
xchg
and
cs
xchg
adcl
jmp
sbb
sub
in
pop
sti
aam
mov
fstps
pusha
and
sub
test
les
xchg
add
inc
xchg
jns
ffreep
add
sar
repz
out
scas
pop
popf
or
xchg
ds
jb
xchg
push
push
pop
or
push
pop
lods
das
popa
ror
and
sti
cmpsb
call
ret
arpl
mov
cmp
lret
pusha
lret
pop
stos
stos
rol
negl
add
jbe
frstor
jle
xchg
inc
and
push
loopne,pn
add
jp
xor
pop
mov
hlt
lahf
push
movsl
lods
call
aas
pop
or
push
stos
cld
jle
jmp
dec
mov
lahf
aam
add
sbb
pop
into
adc
mov
subb
jp
push
cli
or
xorl
cmp
jo
mov
movl
cld
les
pop
inc
out
in
pushf
jmp
aam
xor
stos
push
cmpsb
sub
mov
lea
and
mov
loop
and
ja
xchg
popa
mov
or
cli
idiv
cmpl
scas
fists
push
add
clc
neg
mov
xchg
adc
adc
push
filds
fidivrs
iret
mov
sub
jmp
imul
xor
clc
push
inc
sub
por
orb
cmc
mov
clc
imul
jo
mov
pop
fsubrs
out
dec
jno
sbb
shrb
fisttps
adc
jmp
and
mov
add
int3
jne
fimull
mov
sbb
push
mov
jo
pop
inc
inc
jno
bound
push
sbb
cmp
add
sti
sub
xchg
push
or
rcr
xor
cmp
inc
push
ja
orb
xchg
dec
hlt
fdivrp
insb
jnp
ss
pop
fs
or
hlt
divl
jo
outsb
push
fsubrp
inc
cli
movsb
in
inc
mov
icebp
or
add
push
cmp
addr16
and
int3
pop
inc
or
inc
jl
adc
clc
test
loopne
push
xlat
lcall
add
and
push
sbb
mov
mov
lds
xchg
pop
data16
stc
dec
loope
cltd
mov
insb
insl
xor
ljmp
xor
repz
bound
enter
sbb
mov
xchg
cmpsl
push
outsl
mov
mov
in
mov
mov
xchg
xor
js
xor
or
lods
movsl
out
test
inc
in
insb
cmpsb
sbb
and
or
pop
mov
dec
cmc
iret
jno
or
pop
mov
inc
iret
inc
mov
push
mov
daa
or
pop
cmpb
pop
sub
jle
es
sub
enter
mov
jg
adc
jp
or
mov
mov
add
scas
and
pop
fstpt
out
aad
adc
pop
xchg
sahf
aam
jmp
flds
lods
xchg
popf
lret
jne
and
jle
pop
insl
lds
add
mov
add
in
mov
inc
shll
inc
sub
stc
mov
aaa
push
jne
into
repz
lods
fbstp
cmp
push
das
mov
sarb
sub
lock
lret
jb
jbe
mov
jns
test
cmp
jno
mov
mov
out
mov
stos
mov
imul
ss
in
dec
xchg
test
mov
test
jle
xorb
jle
mov
inc
xor
test
nop
cmc
jb
scas
or
jb
pop
sub
subb
pop
push
fwait
sahf
stc
sub
and
mov
stos
xchg
in
das
sbb
cmp
pop
sub
loopne
dec
xchg
add
lods
and
inc
out
test
shll
cmp
dec
popf
or
cld
add
xchg
daa
ret
adc
aaa
xchg
inc
xchg
lds
push
add
loope
les
inc
idiv
pop
shrb
cli
sbb
int3
and
sbb
adc
aam
repnz
insb
cld
mov
dec
xchg
pusha
jmp
out
notb
jmp
inc
hlt
icebp
lods
cld
jl
or
decb
lods
mov
fcomps
shrl
dec
scas
pop
mov
xlat
adc
aas
dec
mov
push
and
repz
pop
mov
sbb
andl
jl
insl
cmp
mov
in
pusha
arpl
aaa
imul
and
in
call
testb
imul
and
adc
lea
push
inc
pcmpeqw
fistpll
push
mov
jecxz
xchg
ss
xor
aas
xchg
inc
jnp
imul
push
push
xchg
insl
das
movsb
mov
dec
cli
pusha
dec
stos
push
sbb
cmp
push
xor
dec
sbb
in
aas
jmp
int
and
adc
ja
dec
and
jl
mov
sbb
std
aam
and
cmp
mov
int
dec
mov
adc
push
scas
lret
out
mov
xchg
into
lret
or
mov
cli
test
sub
mov
sub
mov
xchg
mov
or
pop
arpl
pop
sar
mov
sbb
xor
mov
pop
notl
stos
ret
xor
and
stc
mov
mov
rcr
ucomiss
insb
popf
fiadds
push
xlat
es
push
sbb
loop
scas
xchg
cs
push
sub
sti
fidivrl
xchg
push
addr16
mov
add
pop
es
jb
ljmp
add
jp
je
cs
push
in
add
loope
pushf
jnp
mov
addb
sub
out
xchg
fs
cmc
andl
pop
inc
xchg
enter
xor
xor
dec
mov
mov
xchg
fwait
into
andb
fistl
andb
inc
fwait
arpl
jns
ficomps
pop
adc
stos
andl
rorb
ret
test
mov
loopne
pop
out
mov
andl
mov
arpl
mov
testb
loop
cmp
pushf
lea
jns
cmpsl
sub
cmp
cmpsl
lods
aam
lcall
sub
and
inc
adc
lret
movsb
pop
fwait
mov
xchg
sub
lods
rclb
push
sub
lea
cli
add
mov
jecxz
cmc
push
mov
lahf
cmpsl
adc
pop
movsl
dec
jb
iret
or
loopne
scas
addl
lcall
std
push
sbb
mov
repz
fisttps
mov
xchg
add
inc
psadbw
mov
jb
push
outsl
mov
mov
add
aad
push
clc
mov
push
into
pop
in
xchg
pop
jno
xlat
imulb
movsb
xor
xchg
sahf
and
cld
mov
pop
cmc
push
faddp
ret
xor
add
xchg
fldcw
mov
ja
dec
loopne
outsb
mov
mov
out
mov
loope
ret
ljmp
cmp
or
mov
dec
push
sbb
stc
sbb
in
ficoms
push
arpl
shll
inc
mov
xchg
add
sahf
push
adc
xlat
mov
cmp
or
xchg
outsl
sub
sub
ss
and
outsl
cmc
sbb
ss
loopne,pt
fdivp
fisttpll
fidivl
jmp
and
out
adc
movsb
adc
cmp
adc
and
pop
and
and
test
rorb
pop
add
aam
mulb
stos
test
and
mov
mov
dec
xchg
lcall
jno
call
mov
popa
arpl
xchg
arpl
out
int3
pop
lret
mov
mov
nop
dec
call
sub
test
sub
add
ret
xchg
jg
pop
adc
enter
jge
pop
jae
inc
rorb
add
fldenv
cmp
add
popa
dec
sbb
jp
cmp
sub
gs
push
pop
push
stc
cli
mov
gs
xchg
pop
and
or
test
je
fmuls
mov
xchg
popa
int3
cmp
lcall
adc
loop
adc
xor
in
cmpl
shr
mov
push
sbb
mov
push
arpl
jbe
cmpsl
fwait
push
xchg
icebp
inc
xorb
sbb
and
xchg
loope
cmp
lea
fidivrs
push
cwtl
xlat
mov
mov
xor
pop
push
imul
je
repnz
pushf
adc
mov
push
sti
out
cltd
sub
cmpsl
mov
mov
lods
outsl
loopne
iret
push
cld
sub
leave
scas
fnstcw
cmp
mov
jnp
insb
lahf
aaa
sbb
push
cwtl
pusha
loope
lcall
out
and
sub
fdivr
iret
push
xor
inc
jl,pn
adcb
bound
inc
stc
adc
add
or
xor
stos
dec
mov
jne
jle
pushf
ja
sub
imulb
subl
imul
bound
push
add
out
and
mov
and
imul
lods
imul
cltd
shl
and
xchg
jle
xchg
adc
jbe
mov
pmaxub
lods
rcr
xchg
dec
and
lods
addl
lcall
xchg
xchg
sbb
jmp
jl
sub
insl
jne
push
iret
mov
mov
pop
push
cmpsl
sub
adcl
movsl
outsl
mov
inc
aad
adc
int
ljmp
les
arpl
xlat
jle
mov
mov
jnp
inc
loopne,pt
push
addr16
push
imul
push
jnp
jp
cmp
pusha
daa
fistps
pop
rcll
and
inc
and
lret
xor
push
push
ss
add
ret
push
jmp
jmp
loop
test
sbb
aad
sub
bound
aas
xor
loop
dec
sub
and
xlat
adc
out
and
push
lock
lds
pop
in
and
ret
aam
pop
ljmp
dec
mov
repnz
sub
adc
cmc
inc
leave
test
cs
mov
lods
jmp
movsl
jae
jns
mov
mov
jae
pop
push
push
xor
and
adc
mov
gs
pop
pop
cmc
inc
ret
cs
push
xor
push
xor
jp
pop
xchg
xchg
lret
test
mov
jge
jmp
mov
pop
es
mov
jb
mov
push
cmpsb
pop
and
pop
lret
push
jle
stc
inc
enter
loope
fstps
out
cmp
fwait
incb
sti
jmp
xor
pop
mov
in
mov
xchg
ret
test
mov
imul
jnp
or
lods
sbb
ret
adc
or
lret
in
ljmp
loope
ficoml
inc
jge
xchg
scas
xor
lcall
pop
leave
add
cmp
cli
push
pop
fwait
and
mov
xchg
outsb
mov
mov
pop
sbb
mov
jl
aad
ret
jle
jp
push
mov
add
jl
cmpsb
sub
xor
fwait
or
sahf
sbb
nop
inc
cmpl
pop
out
fcmove
mov
js
jl
mov
xor
int
cmp
addb
movsl
xor
xor
sbbb
dec
push
insb
jb
jmp
sub
sub
mov
sahf
mov
jg
push
xchg
mov
ss
cmp
ds
cwtl
pop
xchg
stc
ss
mov
sub
mov
pop
jb
aam
std
popf
adc
repnz
pusha
adc
mov
xchg
loopne
or
jge
cli
dec
xor
xchg
pusha
sub
or
lods
cli
jmp
cmp
out
adcb
adc
jge
add
adc
lods
mov
std
push
xchg
xor
jg
cltd
xchg
jle
inc
mov
ret
mov
jp,pn
rclb
dec
push
cwtl
shlb
push
jne
sar
inc
scas
cmp
inc
and
test
lahf
movl
movsb
repnz
adc
dec
or
pop
jge
ficoms
jp
sub
xor
popf
fdivl
aas
popf
stos
pop
inc
adc
or
mov
fists
cmpsb
jle
das
icebp
aaa
jl
sarl
arpl
jns
jbe
orl
loopne
jb
jp
mov
scas
jge
cmp
rcll
dec
popa
int
mov
pop
cwtl
jge
stc
sub
inc
push
push
or
pop
das
addr16
jns
imul
inc
outsb
lret
jne
and
shll
pop
push
rol
xor
mov
sub
out
in
cmp
mov
inc
ret
mov
fiadds
scas
sbb
xor
fbstp
inc
inc
fstpt
pop
sbb
pop
xchg
sub
inc
enter
test
mov
loope
or
pop
xchg
imul
gs
out
jl
cs
or
lea
cmp
mov
add
pop
dec
cmp
jns
lods
dec
in
pop
push
push
pop
mov
out
pop
mov
andb
xchg
or
add
imul
mov
dec
or
fs
and
mov
in
popf
sbb
gs
push
or
std
negb
inc
enter
test
inc
jmp
or
in
and
inc
mov
call
jae
cmp
mov
mov
xor
inc
lahf
mov
jo
xchg
sub
pop
js
push
aad
sub
fidivs
push
sub
jb
popf
out
dec
mov
and
mov
repnz
loop
out
rclb
insl
xor
pop
pop
pop
jbe
insb
xchg
test
ds
xor
push
ss
lds
js
adc
ss
mov
test
cmp
adc
sbb
adc
jnp
loope
aam
xchg
scas
mov
xchg
adc
insb
movb
ja
or
mov
push
call
inc
loopne
imul
push
cmpsl
ds
jecxz
dec
iret
jae
out
sbb
mov
xchg
loope
shr
cwtl
sbb
pop
das
mov
push
stc
jns
sub
jno
fistpl
cli
js
in
addr16
outsl
repnz
cmpsb
shll
dec
mov
push
aad
lea
lds
insb
fisttpl
lahf
jmp
push
outsl
ret
push
or
dec
insb
enter
test
adc
gs
test
add
mov
pusha
repnz
hlt
pop
insb
adc
lcall
filds
pushf
pop
jo
rolb
shrl
shll
mov
or
pusha
dec
mov
inc
push
iret
xor
push
stos
mov
dec
cmc
inc
jae
sub
push
lods
mov
ds
pop
enter
inc
inc
stc
mov
mov
xchg
jmp
inc
sub
xor
xor
sbb
test
cmpsb
push
mov
aas
dec
jne
xor
jae
xor
push
mov
adc
and
cmp
push
in
mov
ret
sbb
sahf
adc
push
mov
lods
push
popa
es
jl
icebp
fsubrs
xchg
popf
lret
add
mov
jmp
inc
mov
mov
mov
dec
sbb
xchg
inc
js
popf
jg
fyl2x
or
scas
inc
sbb
roll
push
sbb
sbb
fsub
sbb
mov
cld
jo
sbb
repz
sbb
loope
addb
add
sti
mov
adc
dec
repnz
ret
outsl
adc
ret
or
jg
xor
pop
push
enter
insl
loopne
dec
dec
and
rcll
mov
xchg
outsl
sbb
xchg
push
dec
mov
push
out
loopne
js
leave
push
insl
pop
inc
fimull
fcoms
cmp
lahf
xchg
sub
jns
sub
pop
lea
add
pop
or
std
jo
aas
es
hlt
cmc
pop
inc
cmp
or
sub
hlt
dec
aaa
sub
lcall
jg
add
in
or
in
add
arpl
adc
clc
inc
arpl
in
jmp
pop
enter
icebp
aas
xlat
cmp
cmp
mov
sbb
xor
or
pop
insl
fildll
xchg
shl
cmp
sarl
push
movsb
lds
inc
lret
aad
sbb
and
dec
imul
ret
dec
jo
subb
mov
pop
push
imul
jo
nop
or
loopne
movsb
insl
lahf
xchg
pushf
out
mov
xchg
fildll
cwtl
sub
push
xchg
dec
fiadds
push
xor
fmuls
nop
pushf
dec
out
cmpl
out
or
cmp
jbe
xor
and
mov
mov
adc
fdivrl
jg
pop
xchg
pusha
cmc
aad
out
insb
pop
fwait
adc
push
inc
adc
std
ja
adc
pop
out
adc
in
js
ss
sub
out
sub
add
call
and
leave
movsl
lods
andb
loope
sub
out
in
adc
push
in
push
add
xor
into
push
fldenv
insb
or
xchg
dec
addr16
xchg
mov
out
pop
mov
insb
icebp
enter
ffreep
pusha
arpl
insb
fstpt
ljmp
adc
data16
mov
jne
jae
inc
int3
movsb
dec
mov
inc
mov
adc
xlat
stos
cmp
cmc
test
addr16
je
addl
in
mov
lds
push
fnsave
lods
mov
jb
ljmp
add
adc
test
add
jge
cmpsb
and
test
xlat
pop
in
lret
setp
stos
lods
xchg
inc
out
xchg
xor
pop
cmpsl
xor
sub
or
idivb
mov
lock
lods
dec
and
hlt
mov
push
push
mov
lret
pushf
push
mov
nop
xor
lahf
push
popa
sbb
xchg
inc
sub
and
or
lret
orb
stos
stc
sbb
test
leave
ret
push
loopne
shl
and
lods
into
xor
adc
push
xchg
sbb
jae
push
mov
or
jg
pop
add
lods
sarl
push
inc
pop
adc
xchg
lcall
out
xchg
pop
jecxz
out
popf
mov
sub
shlb
dec
cwtl
xor
xor
movsb
cld
sbb
mov
mov
in
sti
ret
inc
in
xchg
inc
cwtl
mov
mov
xlat
jp
divl
or
into
outsl
js
xchg
lods
xchg
xor
repz
cmpsb
push
stos
xor
sbb
cmp
add
negl
lahf
pop
xchg
mov
push
and
in
psraw
imul
rorl
and
out
add
sub
mov
test
jne
mov
pop
aas
mov
push
sub
das
mov
ret
sahf
jge
loop
fs
je
push
je
outsb
mov
shrl
add
ret
xor
ret
xor
pop
in
lret
fwait
inc
mov
jbe
iret
repnz
fldcw
ja
cmp
sti
stc
insl
cmp
and
sub
mov
lea
and
cwtl
sbb
int3
mov
rorb
mov
test
fidivrl
orl
popf
in
mov
pxor
xchg
pop
mov
repz
pop
bound
stos
lock
or
push
movsb
cli
sbb
clc
loop
ret
push
fs
fidivl
pusha
std
movsl
jns
sets
sahf
xchg
loope
mov
push
stc
and
jmp
test
test
pop
jns
idivl
mov
add
adc
xchg
lods
adc
cltd
cmp
std
mov
xchg
and
mov
xchg
sub
or
xchg
or
inc
aam
or
xchg
mov
push
fwait
test
inc
fisubrl
sub
cmpsl
sti
into
imul
xor
dec
push
jno
call
lods
push
pusha
fisttps
nop
dec
mov
xor
nop
sbb
sub
std
dec
and
jne
aad
mov
mov
xchg
fwait
daa
sbb
lahf
and
in
addr16
mov
dec
loop
mov
jmp
push
sarl
mov
dec
and
pusha
aas
mov
mov
fnsave
aad
inc
lds
jns
testl
popa
test
push
repnz
std
push
mov
pop
ret
jg
add
and
scas
aaa
ret
loopne
pop
fstl
lods
mov
bound
mov
subb
sarl
loopne
mov
xor
jecxz
pushf
cmp
add
in
mov
gs
xlat
iret
out
xchg
rolb
mov
lods
xchg
sub
sub
call
inc
inc
lahf
dec
sub
mov
arpl
mov
idiv
jns
nop
xchg
out
jae
sub
sbb
pop
mov
sbb
jmp
xor
mov
insb
adc
pop
in
idivb
sub
xchg
roll
push
inc
std
rcrb
xor
add
gs
lret
icebp
add
sub
pop
js
mov
xchg
jl
mov
push
sub
sar
jne
mov
sbb
testl
add
inc
les
cmp
mov
cmp
lds
adc
je
xor
dec
add
roll
out
aas
sbbl
xorb
dec
pop
or
mov
sbb
lods
jg
xchg
jecxz
rorl
add
rcr
xor
ficomps
push
sub
ss
lds
cmp
lcall
xchg
cmpsb
in
and
dec
and
popf
hlt
nop
xchg
sbb
push
loope
mov
inc
sar
fidivl
and
lret
pusha
pop
nop
sub
pop
pop
pop
cmp
cli
add
mov
sub
fidivrl
xor
xchg
orb
stos
push
pop
pop
out
jmp
adc
fnstsw
add
outsl
cld
mov
filds
adc
cwtl
pop
inc
data16
fisubs
cmp
push
stos
rclb
sti
or
or
or
jne,pn
loopne
int
insb
scas
repnz
cltd
add
loope
aas
sub
stc
fwait
nop
pop
test
cmp
jns
mov
and
inc
add
inc
ja
out
jmp
fiadds
rolb
sub
mov
sbb
jb
push
pop
icebp
mov
xor
testl
push
xor
shlb
fldl
shrl
or
pop
cmp
jmp
ficoms
jns
or
xchg
test
dec
pop
aaa
add
leave
mov
ffreep
scas
push
pusha
inc
mov
push
insl
out
mov
loop
xchg
mov
push
rorb
pop
ja
cld
add
int
loopne
cmp
je
in
outsb
lods
outsb
fbld
pop
sbb
mov
cli
mov
out
clc
cmp
sbb
subb
jl
pop
mov
add
test
out
jecxz
outsb
test
test
fsubs
jl
out
add
mov
flds
jecxz
ds
testl
loope
in
sub
enter
out
loopne
in
mov
div
out
pop
notb
mov
inc
sub
popa
icebp
or
f2xm1
scas
mov
pop
ds
fimuls
rcrl
jecxz
mov
popa
out
int3
pop
xorps
jbe
adc
adc
cmp
push
lock
fwait
xor
xor
xchg
fs
xor
cmpl
scas
fdiv
mov
int
les
aas
xchg
lods
or
js
pop
call
rcrb
fisttpl
inc
cmc
xor
out
test
jb
das
pop
hlt
scas
fbld
iret
fdivs
dec
push
jg
jp
sbb
shrb
lods
ljmp
fsubrp
out
jmp
loopne
mov
fs
lcall
mov
jecxz
mov
cli
cmp
dec
or
lret
add
sub
dec
movsb
mov
jne
movsb
push
mov
adc
imul
lcall
dec
scas
hlt
fs
sbb
xor
lcall
in
les
lods
jle
shll
repnz
lock
jae
mov
pop
cmp
fisttpl
sbb
fwait
cmp
test
in
mov
lahf
jge
daa
int
pop
enter
inc
adc
sarb
loop
xchg
shll
adc
popa
mov
sbb
insb
fadds
subb
pop
jge
sbb
ds
mov
cmpsl
add
or
and
imul
mov
sbb
push
inc
outsb
mov
clc
sub
aaa
icebp
pop
inc
xchg
xor
mov
mov
addb
add
xor
fimull
xchg
outsb
adc
xor
pop
movsl
nopl
sub
xchg
jmp
cmp
cld
pusha
sub
pop
sub
push
sbb
sti
mov
cli
into
test
je
pop
mov
dec
cmp
pusha
jne
pop
std
and
fldt
inc
aas
lock
mov
negb
sbb
mov
and
jbe
stc
pop
xor
mov
adc
xchg
stos
aam
pop
mov
test
push
adc
fcomp
pushl
xor
outsl
mov
pop
arpl
dec
inc
and
shld
push
sahf
test
test
sub
lea
fdiv
cs
out
xchg
fidivrl
fildl
push
ss
fcmovbe
mov
aad
adc
push
adc
ret
js
mov
jp
sub
leave
clc
mov
jp
xchg
mov
es
lret
push
cmp
mov
jae
iret
test
bound
inc
adc
lret
rcll
xor
ja
inc
fdivp
pop
out
xchg
sub
lds
negb
pop
add
mov
fisttpll
ljmp
movsb
dec
jbe
aaa
inc
into
sbb
sbbl
or
test
mov
sub
aam
and
xor
ja
add
mov
imul
sub
jnp
cltd
pop
mov
mov
idiv
pop
shl
lods
xlat
inc
pop
sub
jge
nop
mov
or
scas
push
stos
pop
jp
ja
mov
sahf
fisttpl
mov
cwtl
mov
les
push
sahf
imulb
adc
popa
mov
cs
inc
out
xchg
sti
adc
xor
xchg
enter
dec
push
jmp
out
push
sbb
inc
lods
fs
ss
scas
push
fcmove
push
std
hlt
pop
mov
mov
ds
popf
enter
jmp
xchg
push
sub
sub
inc
adc
jmp
adc
cmpsl
mov
jb
xchg
adc
jbe
inc
adcl
pop
adc
dec
mov
mov
inc
aas
jo
pop
test
data16
ja
sbb
rcr
mov
mov
or
sub
cmovae
loop
inc
sub
dec
cwtl
scas
int
cmpsl
int
jg
loopne
repz
out
or
dec
inc
cld
lcall
mov
xor
je
mov
adc
jl
loop
jne
insb
pop
mov
inc
cmp
push
push
data16
add
add
ss
shlb
or
pusha
or
pop
push
ret
mov
test
xor
mov
push
std
cmc
testb
adcb
push
mov
adc
sub
mov
cmp
jecxz
xor
jns
xor
adc
out
jg
repz
xor
sbb
jae
aad
test
lods
push
adc
out
sub
ret
idivl
jmp
aad
adc
dec
xchg
mov
ret
jo
cmp
jb
pushf
xchg
test
pushf
xchg
shll
xlat
test
mov
jmp
negl
es
and
stos
or
scas
mov
inc
pop
pop
dec
std
mov
ja
adc
cmp
leave
gs
mov
orl
shll
jns
ss
dec
mov
xor
andb
add
jmp
push
xchg
jge
aad
xlat
aaa
sbb
out
dec
jge
mov
inc
xor
mov
stos
stos
dec
out
or
daa
fldt
pop
fildll
sub
gs
mov
lcall
fists
test
mov
or
das
insb
add
mov
jne
sbb
add
xor
js
pop
dec
inc
pop
pop
loopne
sub
in
dec
in
lcall
shlb
sub
pop
jbe
adc
push
fwait
es
inc
adc
sarb
int
fisttpl
popa
jg
loopne
sub
mov
leave
test
inc
call
fnsave
pusha
daa
sub
bound
sti
shlb
je
mov
int3
mov
into
sbb
aas
ja
fstps
rol
movsl
fwait
push
outsl
mov
and
cs
pop
stos
jno
mov
iret
push
sub
out
jmp
gs
movb
inc
cmpsb
jnp
add
popf
jl
and
outsl
hlt
mov
lds
add
sbb
and
add
mov
xchg
xchg
jbe
lds
andb
das
cs
jo
sbb
push
add
push
xchg
aaa
mov
hlt
xchg
ja
imul
gs
mov
or
inc
mov
int3
loope
pop
push
cmp
push
daa
pop
sbb
jge
nop
insb
inc
cmp
insl
adc
push
jae
aas
aad
inc
js
sbb
push
clc
inc
daa
test
jg
xchg
mov
jle
or
scas
jnp
test
or
sbb
mov
cmp
or
cmpsl
mov
je
cltd
xor
bound
adc
lds
push
sub
xchg
sub
mov
inc
mov
enter
ficompl
out
cs
mov
jne
mov
adc
ss
in
sbb
out
ja
or
xor
mul
mov
push
fildll
jmp
in
mov
icebp
cmc
test
lea
lahf
add
sbb
out
sbb
outsl
mov
push
sbb
jo
inc
jle
fldenv
jo
in
gs
push
jmp
repnz
cmp
shlb
data16
repnz
fcompl
sbb
push
mov
fimuls
sub
shrl
lock
aad
insl
ljmp
cltd
shlb
inc
xlat
divl
int
outsl
or
pop
cmp
pop
xchg
and
pop
fidivrs
sub
sub
pop
sahf
mul
in
mov
add
sub
cmpb
pop
and
or
outsb
adc
push
dec
call
xorb
mov
stos
or
jbe
cld
sub
cmp
mov
fwait
test
push
sub
popa
loope
popa
cmp
xor
mov
scas
sub
andl
call
hlt
ljmp
push
add
jmp
shlb
shr
xchg
and
ficoms
repnz
xlat
xchg
add
or
push
mov
aam
ss
repz
xchg
lods
mov
jno
insl
aam
and
xchg
leave
dec
push
mov
sarb
call
stos
push
mov
xor
in
jg
ret
inc
pop
cmpsl
pop
lahf
inc
stos
lret
or
psllq
push
push
movsb
loope
or
cmp
in
fisttpll
cmp
out
repnz
and
push
pop
mov
loope
inc
cwtl
call
iret
push
call
xchg
ja
pop
rorl
test
je
adc
mov
bts
fcmovbe
sarl
popf
jo
xchg
pminsw
sbb
lcall
pop
pop
jnp
jle
jne
jge
int3
daa
jg
ficoml
roll
loope
test
mov
and
pusha
cmc
test
rcrl
lret
cmp
xchg
cmp
cmpsl
pop
push
sub
pop
cmp
mov
xchg
sbb
test
adcb
sbb
mov
das
jmp
jo
ljmp
pop
movsb
outsl
test
dec
cltd
int
mov
xor
cmc
bound
setns
scas
mov
dec
cltd
mov
sbb
sbb
pop
mov
les
sti
lahf
mov
jo
mov
mov
ret
loopne
sub
mov
aas
dec
xor
inc
mov
pop
test
ljmp
cmpsb
lahf
xor
shlb
and
in
push
icebp
clc
push
and
addr16
or
adc
xchg
xchg
loopne
sbb
sbb
jbe
mov
std
dec
or
xor
sub
sti
xchg
add
or
jmp
adc
dec
mov
sti
testl
mov
push
ja
push
mov
incl
ljmp
xor
lods
mov
rcrb
shlb
cld
adc
lahf
je
iret
dec
syscall
in
pop
pop
cmc
sahf
into
rcr
fildll
mov
add
incl
roll
shl
fstpl
ja
popf
push
or
mov
ror
xchg
pop
adcl
lahf
std
dec
imul
inc
adc
mov
stc
pop
aam
add
mov
or
sbb
adcb
sahf
mov
jle
pop
add
test
aas
pop
movsl
inc
out
inc
inc
lcall
fisttpll
aaa
push
popf
mov
gs
loope
faddl
repnz
adc
cld
movb
jle
pop
out
lods
add
dec
jns
jge
cmp
xchg
ss
outsl
push
sbb
mov
adc
pop
sbb
insb
repnz
and
dec
test
mov
inc
insl
mul
roll
sbb
jne
cmp
das
incl
mov
xor
stos
sbb
pop
addb
jmp
and
and
push
mov
mov
xchg
push
mov
movsl
pop
repnz
mov
mov
stc
mov
insb
pop
cmp
aad
adc
in
pop
repz
mov
and
cmp
fstl
mov
xchg
mov
jmp
enter
aas
mov
add
pop
cltd
or
fldt
xchg
inc
xor
test
nop
push
mov
dec
push
xchg
ljmp
adc
inc
lret
push
xchg
pop
into
test
fstps
inc
stos
or
sub
jle
jl
push
inc
inc
scas
pop
dec
dec
rorl
pop
aas
pop
dec
rolb
adc
push
push
loope
lret
jno
push
xchg
shll
lds
cmp
jae
mov
jge
mov
ss
stos
popf
push
icebp
mov
mov
jb
test
pushf
mov
sub
xchg
sub
lahf
xorb
cmp
push
ret
das
repz
outsb
aaa
js
cmp
mov
mov
aaa
in
mov
ja
sub
pop
or
imul
xor
sahf
lods
shrb
subl
out
xchg
shll
jbe
xor
push
sub
iret
xor
or
push
fidivl
sbb
rorl
mov
icebp
out
sbb
lods
pop
mov
js
xchg
enter
jne
push
test
les
aas
imul
inc
mov
leave
ror
mov
mov
shlb
cmp
hlt
add
and
cmpsl
inc
ret
mov
pop
in
dec
or
adc
jg
ljmp
jl
adc
xchg
sti
rep
add
and
popl
cltd
leave
stc
push
jl
jecxz
sub
jle
cmpsb
sub
js
sbb
shl
push
jbe
pop
mov
xor
xchg
cld
push
scas
insb
pop
insb
negb
push
and
sub
xchg
out
ret
cmp
dec
loopne
inc
mov
ret
xor
jg
into
out
add
push
out
pop
push
push
and
iret
les
pop
dec
dec
sahf
jl
cmp
pushf
mov
int
sub
sti
lea
mov
xchg
mov
cwtl
xchg
jnp
test
xor
sub
ljmp
xor
pop
sub
push
leave
shr
inc
out
dec
sbb
jne
into
test
push
pop
and
jnp
testb
mov
loope
xchg
jns
insb
cmpsb
nop
xchg
xor
nop
in
jno
lahf
or
dec
lock
movsb
xchg
xchg
or
les
mov
mov
dec
jmp
aam
popf
jle
cmpl
mov
popf
in
cltd
pop
negl
sub
push
or
add
jbe
or
xchg
cmp
fdivrs
gs
inc
or
mov
sbb
js
mov
dec
push
jmp
mov
mov
fcoml
js
mov
sub
daa
mov
into
xor
push
mov
arpl
mov
jmp
movsl
mov
ss
in
shl
push
jp
xchg
and
movsl
rcr
add
lods
cli
dec
jmp
ds
fldl
sbb
add
adc
cmp
test
pop
ret
push
jp
dec
cld
sbb
clc
aas
cli
stos
xchg
jl
cmpsl
and
add
sub
add
push
iret
fisubrs
xchg
jmp
fwait
dec
and
adc
pop
push
insb
and
fcom
or
pcmpgtw
ja
adc
mov
adc
int
and
imul
push
cltd
pop
mov
rorb
cmp
mov
lock
lds
pop
ss
add
push
mov
mov
lods
xor
arpl
lods
adc
or
xor
and
lret
mov
add
dec
sti
fisubrs
les
flds
jl
testl
fwait
and
lea
cmp
nop
jnp
jl
mov
aam
aad
sahf
jb
cmpsb
cmp
ret
popf
or
clc
mov
lods
out
or
mov
icebp
mov
test
ret
push
sbb
pop
or
outsl
mov
andl
fldcw
dec
adc
push
lea
push
jo
mov
or
sbb
and
scas
add
sarl
jmp
push
andb
scas
mov
xchg
mov
mov
lods
ficoml
xchg
sbb
inc
in
ja
dec
cmp
dec
mov
jnp
pop
bound
mov
cmp
jp
pop
jge
cmp
pop
cwtl
imul
add
xchg
sahf
push
in
mov
push
sar
pop
pop
fisttpll
pop
xor
loope
pushf
aad
cmp
lret
sbb
popa
sbb
jno
or
aam
dec
sahf
scas
aad
dec
mov
adc
add
in
ficompl
call
pop
shr
in
jp
jne
lahf
lahf
xor
pop
xchg
and
arpl
sarl
insb
add
xor
sub
mov
pop
lds
and
xchg
imul
push
aam
mov
jbe
enter
aaa
mov
gs
mov
and
jmp
icebp
dec
add
enter
fadd
dec
testb
rolb
inc
arpl
lahf
incb
adc
test
orl
mov
inc
lcall
mov
mov
insl
mov
sti
movsb
dec
sub
mov
jecxz
repnz
pop
enter
sub
sbb
sbb
jae
xchg
inc
push
mov
leave
mov
loop
iret
cld
and
inc
pop
sti
sub
sbb
mov
mov
push
xor
mov
mov
pop
pop
aam
test
xor
dec
xor
xchg
xor
xchg
dec
enter
jp
pop
inc
cmpsb
pop
int3
adc
dec
fistps
mov
sbb
scas
mov
push
mov
sub
in
push
push
or
jg
cmp
mov
mov
mov
pop
mov
adc
inc
mov
adc
pop
dec
rcrb
pop
dec
xor
push
rcll
push
fdivp
and
cmp
dec
dec
push
cld
and
sub
cmpsb
outsb
add
leave
mov
rcrl
rclb
lahf
mov
adc
dec
leave
mov
pop
shrl
dec
aaa
and
or
xchg
push
stos
outsl
or
xor
test
mov
and
add
mov
int3
movsb
push
aad
cmpsb
test
cmc
divb
jb
push
mov
popa
pop
andw
xor
lods
lock
xor
mov
sti
cmp
pushf
int
adc
aad
hlt
jb
shll
bound
xchg
cltd
mov
notb
aad
dec
int
xor
inc
inc
cmp
lods
fistl
std
out
lea
jge
or
inc
dec
xchg
add
inc
cmp
jle
lret
mov
rclb
xchg
or
cmp
loop
mov
mov
in
int3
insb
int3
mov
and
mov
mov
push
icebp
lcall
sbb
push
jge
sub
and
and
cmc
jns
mov
aas
in
outsb
rclb
xchg
mov
and
scas
push
inc
sahf
add
popa
mov
inc
enter
cmp
sbb
aaa
stos
shlb
int3
insb
or
jns
into
rclb
add
dec
loope
lahf
mov
xor
stc
jle
gs
adc
jmp
cmpsb
xchg
dec
in
jnp
mov
push
lods
and
xchg
pop
sub
loop
mov
pop
sti
fimull
or
push
push
ret
mov
sub
jne
jae
loop
or
mov
pop
jecxz
and
in
js
fildll
xor
add
loop
mov
sub
dec
sbb
cmpsb
or
aam
pusha
popf
cmpsl
lock
adc
pop
aam
mov
mov
adc
cmp
mov
xorl
xchg
mov
test
leave
lock
lret
testb
insl
jnp
xorb
movsb
dec
aas
pop
out
inc
or
mov
adc
mov
add
test
pop
adc
sub
shlb
clc
movsl
jg
mov
sbbl
jno
outsl
xor
inc
lret
sub
cmp
jl
or
mov
call
xchg
cmc
fs
xchg
dec
repz
or
push
movsl
clc
inc
add
sbb
cli
sbb
std
adc
push
repz
jnp
jge
das
icebp
xchg
pop
jno
lock
fdiv
out
cmp
adc
fsubrs
rcl
push
xor
add
cmp
roll
mov
mov
push
inc
orl
jnp,pt
sbb
push
mov
outsb
cwtl
lcall
xchg
out
int
loope
leave
pop
jg
or
mov
out
mov
das
ret
test
push
imul
cmpsb
pop
hlt
shll
pop
stc
rolb
pop
rolb
stos
cmp
mov
fnsave
sub
cld
sub
xchg
push
loopne
mov
loopne
repz
mov
int
insl
out
scas
xor
stos
cli
dec
js
loope
mov
ja
ret
ftst
stc
inc
fsubr
jno
rorb
dec
dec
sub
lcall
add
das
bound
repnz
jb
out
imul
sub
jnp
xor
jbe
xchg
mov
or
sub
mov
lods
xlat
sbb
sti
js
dec
pop
push
jno
push
bound
mov
xor
jmp
jmp
mov
js
lcall
addr16
repnz
inc
and
dec
outsb
pusha
shrl
ljmp
es
sbbl
dec
cmp
sbb
push
mov
popa
or
and
xchg
sbb
test
nop
xor
xor
loopne
out
adc
popw
pop
call
and
mov
pop
pop
cmp
ficoml
jge
xchg
hlt
mov
push
inc
les
mov
aam
in
inc
add
andb
pusha
jne
mov
sbbb
or
adc
in
ss
sbb
sub
jge
and
or
lahf
scas
unpckhps
inc
mov
pop
inc
fs
fwait
dec
insl
cmpb
jbe
stos
jo
add
les
in
xor
and
lock
inc
test
or
push
cli
jns
cs
jne
cmp
xchg
insb
stos
cld
jl
sahf
jle
outsb
das
fnsave
push
sbb
cli
lds
fstl
xchg
popf
jle
loop
out
mov
adc
pcmpeqw
dec
outsl
hlt
or
cmpsl
or
mov
mov
movsb
outsb
insl
cmp
stc
and
pop
in
mov
mov
shl
es
dec
push
ljmp
adc
or
sub
gs
push
cmp
xchg
sbb
mov
loop
icebp
in
jl
ret
test
and
gs
loope
sarl
dec
sub
mov
outsl
push
pop
mov
push
mov
cltd
lret
addr16
clc
in
jmp
pop
and
pop
daa
popa
scas
and
xor
test
add
mov
push
dec
and
clc
sbb
xchg
inc
cltd
xchg
fisubrl
scas
stc
dec
ret
inc
out
enter
or
adcb
or
sbb
or
dec
mov
dec
xor
xchg
mov
imull
inc
push
sub
mov
dec
fs
fnstcw
add
push
pop
popa
pop
fistpl
jle
mov
mov
mov
das
xor
and
sbb
mov
or
push
cmpsb
jg
sahf
rorb
jnp
and
sbb
inc
push
and
iret
subb
adc
inc
sub
or
jecxz
out
in
jp
ja
clc
cwtl
jo
pop
jo
jnp
roll
push
adc
inc
jne
jl
pop
sub
mov
mov
sub
loope
adc
sbb
pop
adc
popa
pop
jecxz
add
jmp
mov
sub
adc
xor
ss
pop
mov
mov
clc
and
adc
xlat
jg
xor
shll
pop
push
call
push
and
jg
out
lock
sub
sbb
mov
loope
push
icebp
scas
push
push
loop
lods
sarl
jl
adc
dec
cmp
movsl
hlt
sbb
xor
xchg
push
int3
sbb
out
int
rorl
sub
jmp
cmp
aam
cmpsl
or
cmp
push
push
jbe
fs
decb
jecxz
jb
mov
sub
push
mov
jae
ret
outsl
leave
push
jo
cli
leave
test
or
push
inc
jbe
jle
sahf
stos
aam
imul
dec
mov
ret
cs
fld
inc
bound
pop
inc
ret
insb
cmpsl
sub
inc
cmc
jge
fstps
jge
mov
out
jbe
lret
iret
adc
add
lds
jns
icebp
daa
addb
mov
xchg
shll
cmpsl
or
call
stos
sarl
getsec
inc
dec
test
mov
pop
mov
adc
repnz
adc
addr16
fidivs
mov
xchg
test
or
sub
mov
xchg
xor
das
sub
lahf
movsb
cmpb
movsb
nop
cmpsl
sub
jl
pop
movsl
mov
out
inc
outsl
lret
notb
xlat
pop
xor
aam
push
int3
cmp
fsub
lods
adc
fidivs
sub
mov
mov
mov
push
es
dec
mov
roll
addr16
mov
adc
or
xchg
push
aaa
xor
and
cmc
push
mov
pop
test
sarb
push
pushf
dec
jmp
cli
ficomps
jo
mov
and
cmp
add
das
xchg
xchg
imul
pushf
shrl
jge
cmp
mov
leave
fiadds
shlb
or
int3
cmc
sbb
popa
inc
or
nop
movntq
push
cwtl
std
insb
pop
nop
outsb
inc
add
sahf
inc
cmp
sbbb
sub
xor
fnstenv
in
add
add
addw
js
inc
mov
xchg
test
mov
ds
push
shrb
xchg
add
pop
add
inc
mov
data16
push
into
cmp
push
int
call
andl
int3
mov
hlt
xor
mov
popa
sbb
std
sub
ss
xor
mov
sub
ret
jecxz
xchg
aaa
xor
push
push
sub
jge
cmc
and
sti
dec
leave
push
add
mov
push
mov
add
cmp
mov
or
add
call
fwait
inc
sbb
cwtd
test
sarb
std
gs
fistl
bound
arpl
rorb
lods
push
sahf
sbb
mov
push
sbb
inc
iret
inc
pusha
filds
mov
testb
lcall
nop
sbb
add
fcoml
test
jbe
jbe
xchg
cmpsb
and
ja
out
jnp
mov
dec
or
loop
sahf
dec
pop
jo
push
fstps
mov
test
lods
dec
bound
mov
in
lods
jb
inc
je
lock
and
mov
mov
mov
mov
push
pop
je
mov
fcomps
push
sub
push
into
gs
enter
std
aas
xchg
test
je
addr16
jo
out
pop
addr16
je
cmp
cmp
jno
mov
bound
mov
sub
test
xchg
mov
xchg
pop
push
sub
xor
lds
fs
push
and
inc
dec
sahf
add
pop
adc
pushl
dec
flds
xchg
push
dec
repnz
pop
adc
scas
into
add
subb
add
loopne
adc
push
inc
mov
in
ds
add
jp
aad
stc
mov
les
pop
mov
jo
lcall
jno
push
sbb
inc
cmp
jo
repnz
cwtl
pop
cli
ss
movsl
cmpl
jne
push
xlat
decb
outsl
mov
dec
mov
adc
or
pop
mov
loop
out
cld
adc
call
cwtl
lcall
mov
inc
hlt
mov
jbe
lret
pop
jne
fstl
mov
fisubs
jmp
and
js
xchg
sub
sub
jp
in
lret
jge
add
or
pop
add
cmp
ljmp
sub
fstpl
jg
ret
push
pop
in
das
std
lret
arpl
push
and
mov
es
ja
rorb
jmp
dec
xor
icebp
mov
in
movsl
fsubs
std
je
addl
hlt
jg
add
pop
cmp
adc
add
and
mov
mov
or
ret
pop
cmp
pop
mov
sub
xor
cmp
or
in
leave
fistpl
mov
stos
sbb
rcl
pop
out
jo
add
dec
mulb
repz
and
xchg
cli
sahf
mov
pop
in
ja
mov
nop
dec
in
push
in
lds
xchg
jnp
leave
cmp
mov
jge
pop
mov
add
insl
or
cli
xchg
lods
mov
jmp
std
mov
pop
cld
and
aaa
jo
shrl
sbb
movsb
js
scas
xchg
mov
xchg
dec
mov
xor
rolb
inc
or
pusha
pop
dec
lcall
xchg
xchg
xchg
cmp
lds
rorl
inc
sbb
roll
out
inc
adc
or
dec
jmp
mov
or
push
pop
push
subl
out
mov
inc
mov
shlb
scas
sbb
add
push
das
sub
cmpsb
fildll
xchg
nop
cmp
std
das
mov
add
out
in
push
sarb
pop
icebp
je
sbb
jmp
add
jno
popa
daa
inc
sbb
cli
and
or
enter
xor
fstl
sahf
shlb
lcall
add
out
scas
jo
inc
shl
call
popw
inc
adc
xor
inc
xor
repnz
push
subb
int
sbb
fdivs
inc
movsl
xor
mov
add
jno
pop
neg
dec
ja
xor
insl
mov
xor
fdivl
iret
cs
imul
cs
sti
cmp
nop
and
and
push
fdiv
add
and
cmp
mov
inc
pop
loopne
add
and
sub
mov
inc
ret
push
xchg
cmpsb
ret
xchg
js
in
push
iret
jne
mov
add
sbb
xor
cmpsl
fmull
pop
aaa
mov
aad
add
jp
es
sarb
insb
mov
push
push
mov
add
dec
fdiv
add
inc
push
xchg
stos
cmpsl
addb
cltd
or
dec
in
add
in
pop
or
push
js
in
adc
shlb
scas
push
js
rol
add
into
dec
shll
sub
sti
or
int3
fiadds
insl
adc
sub
add
out
lret
aaa
je
ret
out
fistl
or
cmpsb
or
mov
in
das
mov
jns
push
jo
arpl
hlt
xor
adc
lods
inc
mov
mov
xchg
push
push
jns
pop
fisubs
jge
shrl
out
dec
mov
pushf
pop
adc
movsb
and
cmp
mov
loopne
jne
stos
hlt
cs
scas
and
xlat
push
xorl
xchg
lret
dec
jbe
lods
sahf
push
repz
out
sub
add
jns
pop
es
imul
mov
shll
jnp
xor
and
jb
xchg
shlb
pop
ret
cltd
rolb
repz
jle
aam
cmp
mov
jg
jmp
mov
sahf
dec
push
mov
into
je
mov
push
punpckhdq
cmp
sub
int3
ja
fidivrs
in
sub
mov
call
jno
push
lea
es
add
out
sub
in
pop
sub
jmp
cltd
imul
pop
mov
stos
xchg
push
rcll
jo
dec
loopne
cwtl
jecxz,pn
fdivl
aam
ret
jns
pop
jno
test
lods
xchg
decb
mov
xchg
sub
lods
xchg
nop
in
mov
push
addr16
in
xchg
lret
xchg
xchg
cmp
lret
aam
pop
jmp
jl
fdivr
int3
clc
cmp
fs
outsl
fldl
cwtl
jne
sbb
pop
dec
adc
jmp
xlat
out
stos
mov
sbb
in
cmp
sti
push
outsb
cli
pusha
fsubr
mov
pop
arpl
dec
inc
sub
jg
jb
dec
mov
popa
fmull
movsl
jmp
pop
sub
cmp
outsl
in
mov
add
jb
imul
scas
or
and
pop
mov
iret
cmp
pop
xchg
out
jg
jmp
sub
push
rol
outsb
jbe
movsb
mov
pop
jl
mov
push
mov
cmpsb
and
scas
sbbl
dec
out
roll
mov
jbe
jne
out
dec
scas
jp
fdiv
iret
loope
enter
push
pop
not
fnsave
and
fildl
int
hlt
mov
dec
sbb
int3
jge
mov
or
inc
push
mov
ds
jbe
or
js
jnp
mov
test
add
fdivrl
dec
std
adcb
push
stc
lret
cmp
dec
sub
cmp
cmp
inc
sub
fwait
or
and
push
pusha
jb
ljmp
in
lahf
cli
xor
inc
fnstenv
add
jle
shll
xor
mov
mov
xlat
pop
mov
test
mov
push
enter
fildl
push
pop
cmp
or
jns
dec
mov
dec
mov
out
je
sbb
jne
add
push
mov
mov
ds
fcmovbe
aaa
pop
and
add
mov
dec
mov
or
lds
pop
and
mov
push
inc
jo
in
dec
cmp
in
lret
inc
lods
inc
scas
int3
cmpb
xchg
hlt
dec
lret
std
rcr
nop
xchg
pop
and
push
ds
or
and
mov
insl
in
insb
pop
sahf
pop
xlat
cld
int3
andl
cmp
arpl
pop
dec
shrl
push
repnz
mov
shll
cmp
je
test
stos
hlt
jbe
leave
cmpsl
mov
mov
xor
cmp
ret
test
into
cwtl
jns
aam
mov
pop
mov
xchg
out
fimull
adc
fcoms
subb
out
ret
pop
gs
cmp
mov
dec
imul
mov
dec
inc
mov
mov
popf
out
mov
adc
fistpll
ds
xchg
repz
scas
xchg
pop
movsb
sub
mov
out
out
sbb
aam
sbb
aas
sbb
xor
repnz
stos
or
jecxz
test
jecxz
sti
inc
and
jp
outsb
jnp
lea
add
sub
pop
jnp
pop
or
fisubrs
sbb
mov
std
push
scas
add
jb
ror
mov
stos
ljmp
cmpsl
imul
or
shrb
lcall
into
icebp
cwtl
fcomps
test
les
jmp
xchg
ljmp
imul
aam
mov
or
lret
es
invlpg
mov
in
subl
mov
and
mov
jl
push
lret
fmull
mov
fadd
lds
lock
ret
idivl
rorl
test
jl
es
pop
mov
stc
btc
cmp
adc
in
mov
xchg
lcall
popa
push
pushf
sbb
mov
jbe
mov
jg
mov
pop
mov
out
mov
int
daa
nop
jle
aaa
or
movsb
adc
leave
and
dec
fistpll
push
mov
outsl
jmp
sahf
jl
bound
rclb
mov
lret
and
enter
fiadds
mov
in
push
mov
icebp
sub
loop
adcl
decl
mov
fnsave
inc
mov
or
fwait
test
lea
xchg
cli
xchg
push
jl
push
xor
sbb
cs
mov
hlt
xor
sbb
pop
scas
xor
cmp
es
sbb
int
pop
sarb
push
arpl
enter
scas
sbb
jnp
pop
popa
pop
in
dec
sti
xchg
fmull
fisttpl
lock
jb
rclb
mov
adc
pop
add
mov
mov
push
mov
cmp
adc
xor
push
jp
je
stos
mov
sti
lea
pusha
popa
jecxz
push
pop
pop
push
roll
or
xor
test
dec
fiadds
test
jb
bound
clc
insl
pop
loop
or
dec
clc
mov
faddp
jno
inc
out
aaa
inc
jne
fwait
imul
cmp
mov
mov
add
clc
add
gs
or
popf
dec
popa
test
int
orb
mov
push
adc
mov
xchg
sbb
or
and
out
jl
sbb
dec
stos
out
mov
maxps
adc
mov
sbb
orps
jbe
jns
subl
pop
and
add
add
cli
mov
sub
mov
pop
pop
lods
cmp
hlt
mov
cmpsl
push
jns
cwtl
out
fisttpll
leave
test
icebp
sahf
dec
pop
pushf
dec
stos
sub
shrb
les
incb
rcll
dec
mov
jge
sarb
int
sbb
rorb
jmp
inc
icebp
out
inc
xchg
repz
pop
les
wrmsr
pop
xchg
ret
cwtl
mov
ss
or
jns
adc
mov
aas
push
aaa
inc
dec
mov
and
or
cmp
add
fdivrl
jb
in
mov
push
lea
xor
push
aas
fimuls
sub
or
mov
ret
mov
cmp
mov
mov
dec
push
iret
xlat
dec
aam
jl
fldenv
adc
es
xchg
mov
dec
pushf
sbbb
ss
mov
dec
cld
sub
xchg
mov
sti
xchg
scas
pop
add
mov
pop
dec
xchg
dec
push
loopne
loopne
loopne
xor
pop
mulb
out
loop
xchg
dec
rcl
xchg
or
add
mov
test
ret
sbb
daa
sub
sbb
jge
push
inc
dec
add
xchg
sbb
mov
push
cmc
lock
pop
inc
cmpsb
sub
mov
cli
adc
addr16
dec
dec
stc
sub
rorl
lds
shll
mov
xchg
xchg
stos
jae
push
es
loope
sbb
adc
cmp
popa
cmp
or
pusha
jne
setb
test
mov
sub
pop
sbb
in
fistps
ret
push
sti
and
mov
sbb
nop
cmp
add
adc
mov
jge
or
mov
mov
mov
movsb
cmp
imul
inc
inc
cs
ljmp
xor
pop
adc
inc
add
xchg
mov
pop
add
pop
ja
adc
lock
in
xor
insl
sbb
sahf
and
pop
repz
mov
rcrl
and
push
push
out
jne
and
lret
xchg
nop
adc
inc
or
push
push
dec
push
adc
ja
insb
inc
xchg
jns
pop
inc
ljmp
mov
or
jbe
sbb
int
mov
sar
cmp
movsl
dec
dec
mov
push
and
cli
addr16
xchg
fistps
or
test
mov
lock
cmp
dec
xchg
sbb
mov
js
popa
dec
push
push
xchg
or
jle
xchg
jae
movb
or
cmp
mov
jle
inc
dec
mov
mov
roll
fidivl
inc
add
lds
xor
hlt
cli
adc
sub
jnp
fidivs
jno
cmp
xchg
inc
adc
std
cmp
rcr
dec
jne
push
in
aas
xor
pop
jns
mov
jge
lea
shlb
and
inc
adcb
filds
dec
mov
scas
ret
ljmp
popa
repz
inc
dec
aad
in
sub
mov
jnp
cltd
adc
arpl
mov
in
jne
in
cmc
pop
xor
ss
pop
aam
lahf
adc
mov
insb
pop
push
in
cmpb
out
dec
jg
iret
mov
div
lret
ja
jp
mov
or
jbe
sub
mov
adc
jge
outsb
adc
movsl
adc
popa
inc
xchg
pop
jnp
xor
dec
jecxz
hlt
mov
les
gs
call
test
and
fs
pop
sbb
inc
cltd
fdivr
pushf
xor
and
adc
fnstsw
add
lahf
push
mov
js
lret
cmp
and
push
outsb
jl
mov
add
mov
jg
xchg
cmpsb
cwtl
int
lret
ss
iret
mov
xor
pop
adc
push
cmp
pop
das
aas
mov
ret
nop
jae
jo
shlb
cmp
aas
jnp
inc
rolb
fadds
inc
lock
jb
jge
inc
lret
or
pop
popa
jecxz
ret
push
fmul
cli
pop
cltd
mov
insl
push
bound
xchg
lods
sahf
data16
or
call
ds
or
pop
movsb
cmpsl
stos
out
push
out
adc
adc
imul
andb
mov
jmp
jl
unpcklps
xor
cmp
es
cmpsl
dec
ret
inc
jl
scas
or
das
outsb
lea
xchg
je
aas
mov
shrl
xchg
or
push
jmp
adc
insl
fisttpl
mov
repz
xor
jb
loope
xchg
mov
dec
lock
mov
xchg
sbb
fildll
jnp
subps
call
xchg
add
out
add
dec
ljmp
add
and
ss
push
cs
shlb
pushf
iret
cmpsl
fimull
repnz
call
sub
push
inc
sbb
or
rcrl
aaa
mov
aam
push
xchg
ficompl
out
in
push
and
dec
sbb
dec
or
jne
pop
add
lcall
and
mov
int3
call
or
stos
mov
iret
iret
inc
sub
mov
and
leave
popa
in
rclb
sub
fmull
rorl
int
lret
mov
mov
push
jb
and
mov
mov
mov
lcall
cs
or
pop
fwait
pop
stos
fbld
xchg
xchg
lret
mov
pushf
sbb
mov
andl
out
push
adc
jo
nop
int
or
das
mov
mov
sub
dec
push
adc
or
and
mov
or
cmpl
jnp
dec
ja
jns
mov
cld
cld
push
pop
fimull
es
pop
xchg
jecxz
bound
ret
or
mov
inc
adc
aas
out
adc
imul
jp
test
lret
sbbl
outsb
js
call
lret
loop
rclb
fstps
or
push
cmp
fdivl
pushf
jb
out
inc
aad
add
shl
lock
mov
inc
cmp
and
jnp
or
clc
dec
dec
inc
mov
mov
pop
inc
out
dec
jge,pn
je
sbb
jns
xor
aas
pop
mov
mov
dec
subl
push
pop
mov
dec
ds
mov
and
jno
mov
mov
push
and
push
int3
in
scas
scas
dec
jg
lahf
add
dec
inc
and
mov
daa
das
bound
cmp
mov
sbb
cmc
inc
xchg
adc
sbb
push
out
mov
lock
or
cmp
jl
sbb
movsl
rclb
and
add
dec
mov
and
and
aaa
mov
stos
or
dec
inc
icebp
nop
leave
mov
jg
xchg
out
in
dec
jne
push
js
cmp
cmp
cmp
jmp
push
repz
push
cmp
dec
dec
ja
aad
mov
aam
stos
and
bound
xor
call
das
fiaddl
das
inc
jo
outsb
xlat
mov
pop
pop
or
pop
cmp
pop
aad
movsb
mov
push
mov
adc
xchg
cs
ds
fildll
aam
test
daa
pop
pop
ss
jmp
test
and
lods
cwtl
out
insl
ret
or
lahf
push
imul
push
lock
pusha
addb
xor
inc
bound
mov
adc
pop
cmc
or
ljmp
xchg
and
nop
and
mov
mov
cltd
rcl
push
or
push
mov
dec
sbb
add
bound
testb
cmp
lods
sbb
movsb
sub
mov
push
mov
push
mov
divb
into
cmp
push
xchg
in
mov
addr16
jb
and
fucomip
xchg
adc
mov
pop
pop
inc
sti
and
xchg
jns
adc
push
xor
imul
adc
test
mov
repnz
leave
cmpsl
ror
adcb
arpl
ret
ret
or
frstor
mov
stos
int
inc
pusha
add
pop
dec
dec
xor
dec
ja
sub
push
clc
movsl
push
jae
add
xor
add
push
shlb
lret
loope
inc
lds
ret
and
jo
lock
popa
aad
sbb
adc
sub
decl
jo
cmp
shrl
xchg
ja
mov
jne
insb
dec
mov
ljmp
int3
cmp
shll
xchg
jmp
mov
mov
scas
es
cld
mov
mov
sbb
cli
and
pusha
or
sbb
arpl
mov
test
subps
cmp
das
fadd
outsb
sarl
aad
push
dec
xchg
xchg
divb
stos
pushf
sbb
cmpsl
cmp
add
jmp
xchg
shlb
xor
xlat
test
xchg
mov
leave
cmp
mov
push
dec
sarb
and
es
sbb
ret
outsl
repnz
loope
in
cmp
into
mov
xchg
jo
mov
cmc
or
ss
ljmp
push
and
out
dec
lds
filds
nop
pop
fwait
fwait
enter
lahf
pop
xor
fwait
addl
xchg
lcall
outsb
mov
rclb
xchg
pop
xor
stc
inc
ret
xchg
jge
xchg
jg
rolb
into
and
jb
es
jmp
int3
addr16
ljmp
fucomi
call
sbb
inc
push
mov
sti
test
push
mov
and
cs
push
ret
fsubrl
inc
pop
pop
cmp
inc
jg
xchg
arpl
outsb
mov
dec
xchg
cmp
ljmp
jg
and
cmp
dec
cld
imul
xor
shll
push
lods
pop
lods
cld
lahf
xchg
in
jns
pop
push
das
lea
push
adc
pop
loop
mov
std
jbe
mov
push
test
push
add
testb
ss
loopne
xorl
arpl
mov
outsb
lods
fsubrl
inc
sbb
push
insl
xchg
daa
adc
int
sbb
subb
ljmp
adc
push
push
mov
fcoml
arpl
and
inc
dec
into
ret
xor
jle
add
fnop
fmulp
ljmp
fldt
je
cmpsl
movsb
sub
fwait
rclb
dec
xor
hlt
mov
es
ljmp
mov
dec
stos
imul
push
test
test
inc
mov
in
aas
inc
add
not
sub
enter
ja
fstp
mov
incl
daa
pop
shlb
and
xor
decl
shll
cmp
popa
adc
lods
and
movsb
ss
add
adc
jmp
jg
cwtl
or
test
add
xchg
inc
xchg
mov
mov
jp,pn
mov
xchg
push
test
outsl
sub
fbstp
mov
mov
cwtl
test
in
pop
or
lahf
icebp
push
mov
dec
aaa
roll
adc
dec
xchg
mov
pop
adc
dec
lret
out
and
push
stc
gs
fnstenv
inc
pop
jo
add
imul
xchg
lock
push
cs
jmp
push
dec
rclb
ja
imul
or
xchg
cwtl
dec
jmp
push
xor
xchg
mov
push
pop
cs
aaa
lret
mov
cmpsb
in
inc
loope
out
cmp
dec
sbb
jns
mov
hlt
lret
or
aaa
leave
mov
push
sbb
out
or
jl
call
test
ret
pop
daa
mov
pop
jne
dec
out
enter
jl
sub
pop
test
jle
sahf
sahf
lds
hlt
xor
movsb
mov
adc
push
sbb
mov
pop
adc
out
jbe
ss
adc
add
pop
mov
roll
je
lea
jno
leave
push
adc
mov
mov
icebp
sbb
mov
push
sahf
fwait
mov
in
xchg
das
cmp
dec
repnz
sub
repnz
test
push
sbb
sbb
cli
mov
sbb
jle
cld
jne
jmp
xchg
jae,pn
cli
jge
jbe
movb
clc
adc
hlt
push
test
and
les
loop
inc
inc
sbb
clc
push
lea
push
cmpsl
out
mov
mov
lcall
and
xchg
mov
sti
cli
sub
push
pop
sbb
mov
lret
repz
icebp
xor
jmp
mov
dec
ret
pop
into
jp
push
movsb
jnp
mov
xor
bndstx
push
outsl
add
mov
push
insb
pop
push
mov
sub
inc
pop
mov
loop
pop
ret
jecxz
mov
mov
out
das
pop
call
push
pop
loope
outsb
pop
jno
jns
fidivl
insl
jecxz
cmp
add
icebp
mov
lea
loop
mov
cmp
mov
lret
roll
push
ljmp
xor
mov
jb
inc
xor
sbb
call
stos
loop
pop
cmpsb
loopne
sti
push
das
scas
mov
mov
cs
push
nop
xchg
xor
inc
push
fimuls
xchg
and
stos
pushf
movsb
cmpsb
mov
cli
in
lcall
les
mov
sub
push
push
mov
das
jl
or
push
inc
int
push
in
ret
inc
mov
and
mov
test
mov
fcmove
push
lret
xchg
daa
adc
bound
xlat
stc
leave
dec
push
cmp
xchg
iret
jbe
or
xchg
jnp
mov
int
mov
push
cmpsb
dec
mov
pop
test
or
sbb
pushf
or
das
in
out
inc
addr16
pusha
xchg
outsb
and
mov
outsl
cmp
mov
adc
push
xor
inc
mov
aad
out
pop
lods
lret
movb
shlb
jo
aam
cwtl
fyl2x
inc
jae
stos
call
push
xchg
sbb
dec
sub
fisubrl
data16
mov
mov
push
hlt
push
mov
stc
enter
add
mov
inc
inc
shlb
pop
adc
shlb
dec
jmp
cmp
add
enter
sub
loopne
es
or
inc
lcall
enter
aas
mov
sub
or
pop
push
jge
shll
or
mov
bound
jne
arpl
cltd
stc
push
pushf
mov
fs
sub
hlt
xchg
jae
mov
lods
in
inc
sbb
mov
mov
xor
cmp
cmp
pop
mov
out
sahf
testl
push
stos
add
add
or
outsl
loop
mov
cmp
lods
xlat
jge
push
in
jno
lods
cwtl
and
dec
pop
movsl
xor
out
cwtl
sti
jb
and
and
outsb
decb
mov
mov
jae
push
mov
mov
or
xlat
push
inc
adc
jmp
repnz
ror
shl
lods
aaa
lods
insb
xor
fs
adc
dec
xor
and
sbb
lret
sub
ret
push
adc
fsubr
movsl
lea
push
pop
adc
jo
push
repnz
icebp
fidivl
popa
imul
mov
or
pop
popa
mov
fcoms
or
icebp
fdivrs
out
fistpll
aas
push
ss
lcall
clc
test
lock
dec
pushf
scas
jnp
mov
sbb
in
les
les
fs
or
sub
pop
mov
dec
mov
sub
mov
inc
lds
pop
push
pop
or
mov
push
xor
sub
cmp
xor
add
xor
call
jecxz
fldt
es
enter
nop
mov
xchg
push
mov
ud1
arpl
stos
test
lret
pop
pop
xchg
enter
mov
jmp
mov
ja
inc
mov
jne
mov
mov
dec
pop
scas
repnz
outsl
xchg
lret
loop
stos
ret
mov
mov
pop
mov
mov
les
test
imul
lret
dec
je
insb
dec
inc
mov
les
sbb
fadd
fs
faddl
in
mov
or
sti
cli
mov
mov
es
and
inc
inc
inc
lcall
mov
and
push
xchg
jne
pop
xor
jmp
xchg
or
daa
test
imul
or
int3
mov
sbb
add
loopne
mov
mov
dec
push
loopne
cmp
push
jmp
xchg
and
and
std
mov
mov
inc
xor
adc
mov
cmp
gs
pop
leave
addb
sbb
je
loopne
xor
cmp
cmp
aaa
sti
push
jo
mov
repz
es
pop
xchg
sti
mov
mov
dec
pop
aas
mov
xor
xor
and
xchg
fstl
ret
jg
movsl
mov
jp
pop
and
cmp
push
dec
xchg
sbb
js
lds
sar
in
test
cmp
fiaddl
mov
jae
mov
jae
ret
add
cs
aas
shlb
push
insb
xchg
jae
dec
repz
pop
out
scas
or
adc
mov
ret
cmp
adc
js
pop
xor
cs
bound
xchg
adc
shr
xchg
test
cmc
shrl
loope
test
inc
js
fs
sub
mov
aad
sub
out
aam
ja
rcll
mov
pop
int
lcall
stos
icebp
in
lret
adc
pop
in
out
sub
mov
shrb
xor
pop
xor
call
fsubp
fildll
push
xor
loopne
xchg
ds
mov
out
mov
add
imul
sbb
je
sub
adc
aas
ficomps
cmp
xor
lea
jp
cmp
push
jnp
call
jmp
add
shl
or
mov
jl
xchg
pop
mov
out
inc
js
mov
stos
shlb
js
push
xlat
push
adcl
mov
xor
pop
les
sub
mov
in
adc
jae
mov
add
add
mov
aad
popf
pop
cli
aad
mov
ljmp
int
stc
in
cmp
push
into
cli
xchg
or
pop
loopne
movsl
adc
mov
rorb
into
iret
sbb
dec
rclb
lock
mov
in
push
jle
or
ljmp
pop
lds
fs
fcomps
inc
jl
lret
jbe
sub
mov
mov
add
outsl
push
std
lods
jns
dec
fisubs
dec
sbb
sub
adc
pop
pop
sub
add
je
fsubl
aaa
je
or
bound
sub
mov
pusha
adc
push
push
adc
cmc
in
jbe
dec
fstpl
movsb
loopne
sub
xchg
push
das
jle
push
stos
sysexit
cmp
jg
bndmk
adc
or
dec
cmpsb
insb
add
aad
stos
repz
ja
xor
andl
jno
div
jno
pop
mov
cli
jne
adcb
mov
adc
add
lods
std
sub
sbb
lea
mov
add
repnz
jae
adc
mov
mov
mov
sbbl
xchg
xchg
in
or
mov
ljmp
imul
rcll
mov
or
push
cltd
push
in
lahf
jecxz
test
push
dec
or
cmpsl
fwait
push
adc
fwait
out
cmp
loope
and
and
mov
cmpsb
mov
sbb
jmp
xchg
sbb
mov
test
lcall
fiaddl
mov
mov
inc
scas
and
fs
in
dec
xchg
lock
rolb
clc
xchg
xchg
mov
jnp
push
mov
push
pop
adc
jnp
inc
sub
sarb
scas
data16
xchg
out
bnd
ss
daa
jae
icebp
mov
xor
daa
cs
inc
mov
clc
in
out
sub
adc
mov
pop
jg
bound
xchg
not
in
dec
jl
mov
sbb
mov
push
aad
jge
xor
fimull
fs
fmull
das
inc
mov
pop
sti
adc
rclb
cs
je
cli
cli
bound
movsb
rclb
xchg
dec
dec
icebp
mov
push
jp
aaa
aas
cltd
aas
mov
fsts
in
scas
cmc
iret
les
cmp
pop
fwait
in
scas
sbb
ja
xchg
jne
lds
pop
rol
pop
sahf
cmp
orl
jno
std
push
cmpsb
mov
jge
mov
mov
sub
mov
fmuls
insb
mov
stc
jno
sub
inc
movsb
jge
mov
mov
inc
or
mov
stos
push
dec
inc
popa
mov
enter
push
lods
mov
jo
and
or
data16
and
cwtl
sbb
popf
jb
cli
xor
lods
aam
adc
adc
notb
jns
jmp
sub
sbb
mov
adc
xor
add
jl
out
rcl
cmp
xchg
nop
push
push
out
jb
test
out
xor
shl
cld
inc
stos
dec
gs
xchg
or
sbb
mov
xlat
stos
push
cmp
cltd
cs
xchg
movsl
test
pusha
pushf
add
xchg
rolb
cmp
jns
and
or
pop
jp
stos
jge
ljmp
repnz
fadds
jb
xor
adc
lea
adc
and
inc
mov
sub
icebp
jno
stos
cwtl
pop
lret
xor
scas
push
call
mov
mov
pop
xchg
ret
sub
dec
mov
xchg
adc
adc
test
mov
movntps
dec
sub
add
sbb
jp
dec
in
movsb
movsb
xchg
movsb
xchg
sbb
movsl
insl
aam
and
cmpsl
and
cld
je
sahf
pop
dec
or
add
jb
imul
int
sub
jle
jmp
push
push
jns
fnstcw
imul
cwtl
xchg
and
cmp
add
addl
xor
mov
lock
xor
movsb
stos
mov
outsb
mov
popf
fwait
dec
pop
jle
enter
fiaddl
icebp
lock
in
int
js
test
sub
pop
sbb
popl
dec
roll
jmp
xchg
pop
aaa
and
push
or
outsl
lods
jmp
aam
fs
daa
sbb
dec
cltd
sbb
dec
dec
addr16
test
mov
jnp
mov
push
loop
push
jo
xor
mov
push
cwtl
repz
inc
insb
or
dec
rcl
push
adc
xchg
pop
xchg
fsubs
or
mov
inc
xchg
scas
mov
int3
sti
cmp
mov
mov
je
jae
xor
mov
push
mov
pshufw
addr16
lret
push
aaa
dec
inc
jnp
pop
mov
out
and
xchg
enter
popl
cmp
imul
bound
test
in
out
lea
out
pushf
faddp
inc
or
pop
mov
mov
mov
xorl
repnz
xchg
lods
pop
data16
mov
or
test
mov
sar
orb
mov
xchg
dec
lret
out
jp
mov
movsb
or
jmp
sub
aaa
adc
aam
divl
mov
jne
mov
xlat
fidivl
aaa
inc
and
mov
aad
int
sahf
xor
fs
mov
pop
test
shlb
inc
cs
dec
pop
cwtl
push
pop
jmp
cltd
arpl
sbbb
inc
movsb
aas
xor
xchg
jg
xchg
jo
bound
loope
test
in
ret
mov
jmp
xchg
mov
dec
jae
test
adc
int3
ljmp
cmpsb
pop
call
mov
push
hlt
adc
idivl
sub
sbb
jp
pop
test
aam
test
in
mov
and
into
mov
ja
mov
hlt
adc
hlt
lret
pusha
cmp
adc
je
in
mov
add
pusha
adc
mov
arpl
sub
loopne
xor
sub
push
mov
mov
push
pushf
out
sub
mov
jbe
sub
sahf
sub
mov
jmp
cmp
pop
int
or
and
fs
pushf
aas
dec
test
xor
mov
aaa
sbb
notl
js
sahf
add
outsb
int
imul
movsl
jo
jl
sbb
loope
js
xchg
mov
roll
push
sbb
mov
mov
pop
clc
sub
imul
and
outsl
movsb
push
xor
std
push
pop
lds
insl
cli
dec
mov
insb
or
xchg
add
jmp
mov
xchg
xor
pop
loope
sarb
test
sbb
mov
jns
repnz
mov
cld
add
movsl
fs
imul
in
outsb
aas
add
mov
pop
jle
scas
push
movntps
inc
dec
xchg
pop
mov
push
in
dec
mov
mov
psrlw
cmp
in
aad
aad
daa
inc
or
dec
iret
gs
aas
cmp
insb
cmp
pop
or
push
fidivrs
or
out
leave
roll
mov
adc
stos
lods
sbb
data16
es
jbe
ljmp
sarb
stc
bound
or
mov
sbb
cmp
cmc
mov
ljmp
fcmovu
sbb
int3
pop
repnz
sti
cmpsb
and
or
cld
push
jl
lahf
jge
ret
repz
xor
movsl
jmp
xchg
adc
mov
mov
out
and
mov
and
mov
mov
push
rcrb
bsr
fcoms
dec
stc
add
into
sbb
ficoml
mov
add
jecxz
jp
iret
adc
or
inc
sbb
dec
out
mov
xchg
cmpsl
nop
lcall
iret
test
cmc
div
xchg
ljmp
xor
cli
lock
movsb
fbld
pop
lods
aam
lahf
or
jbe
jecxz
rorb
stos
add
frstor
inc
xchg
mov
fstpt
loop
shrl
inc
in
cmp
scas
jp
mov
sbb
mov
mov
push
cmp
xchg
aas
daa
in
je
nop
or
lcall
daa
lcall
in
and
cmpsl
push
hlt
fs
cli
in
cmc
dec
cmpsl
outsl
lods
adc
lret
mov
lds
jne
ret
cmpsb
mov
hlt
enter
insl
sub
sub
push
int3
jbe
xchg
add
adc
jb
cli
add
mov
mov
jne
lahf
iret
or
movsl
sbbl
sub
xorb
push
mov
scas
mov
jnp
push
pop
mov
lds
jnp
push
sub
push
aas
pushl
movsb
cltd
scas
cli
cmp
mov
ljmp
scas
push
icebp
jle
imul
sahf
mov
lcall
gs
fs
es
and
mov
pop
sub
or
pushf
and
shl
mov
cwtl
fstl
notb
enter
sub
mov
xchg
subl
fmuls
testl
nop
inc
sahf
sbb
test
xor
mov
xor
leave
jecxz
sub
mov
mov
jae
push
mov
data16
iret
scas
push
xchg
jno
xor
repz
add
stc
push
ljmp
jge
mov
bound
in
outsl
jne
add
fnstenv
movsb
test
adc
lods
sbb
pop
shrb
inc
xchg
loop
gs
in
xor
loopne
and
cmpsb
fldenv
xchg
jg
das
push
push
mov
les
push
lock
jb
and
arpl
jno
xor
aad
adc
lods
adc
xor
rclb
xchg
lds
movsl
pop
sub
andb
push
ret
lret
sub
cli
shrl
arpl
add
sbb
in
scas
mov
fcomps
rclb
jbe
sbb
xchg
inc
dec
ds
test
push
dec
sti
repz
mov
orl
add
cld
popf
push
jno
stos
negb
les
test
sahf
mov
sbb
repnz
js
or
inc
mov
pop
or
pop
imul
lret
scas
or
mov
ja
lds
stc
test
mov
int
loopne
loopne
repz
push
mov
pop
dec
sub
jb
fwait
cmpsb
in
or
adc
sub
repz
scas
in
addr16
out
fwait
mov
and
or
xchg
fwait
sbb
sbb
ret
mov
pusha
adc
cs
data16
insb
push
mov
push
loop
cmp
jae
adc
popf
clc
mov
into
sub
and
mov
sbb
negl
push
cs
ljmp
sbb
fmull
sti
sub
jp
fsubl
inc
fcom
popa
lods
cs
rol
cmp
shll
lret
aam
jle
xchg
mov
pop
sub
test
insb
jno
out
in
notl
mov
mov
subb
xor
aas
xchg
inc
jae
cmp
cmpsl
je
test
lret
imul
aaa
cmpsb
mov
addl
rcrb
jecxz
sbb
cwtl
andb
rcr
add
stc
xchg
movsl
jo
shll
cwtl
cmp
repz
or
pop
cwtl
out
loopne
loopne
fists
xchg
adc
clc
push
fnsave
xchg
mov
mov
pop
xor
out
push
mov
add
inc
es
iret
imul
stc
cli
sub
sahf
les
fwait
clc
add
je
xor
dec
jns
out
sbb
mov
mov
jmp
outsb
fs
lahf
dec
lcall
lock
sbb
pop
arpl
insl
xlat
popa
hlt
inc
fstl
jecxz
xchg
xor
pop
les
loop
and
popa
shll
sub
jne
dec
push
in
inc
lock
out
mov
jbe
mov
jbe
add
mov
ret
mov
lea
sub
loopne
pop
pop
jecxz
jl
cmp
xor
or
or
popf
sbb
adc
or
test
push
fneni(8087
inc
jle
and
mov
movsl
fmuls
jno
pop
into
jb
clc
rorl
divl
cmp
mov
xchg
sarl
das
xchg
in
cmpsl
xor
sti
adc
ret
in
jno
cmp
sbb
push
push
rol
das
jecxz
sbb
jae
xchg
ret
iret
pop
cmpsb
bound
or
fisubrs
mov
pop
sub
shrl
mov
dec
jp
adc
mov
push
stos
push
ret
and
fidivrs
sbb
and
sub
mov
sub
add
pop
fildl
xlat
shll
mov
in
xor
xchg
lahf
call
shl
stos
push
mov
icebp
xor
lock
imul
dec
xchg
xchg
or
jbe
bound
cmp
in
xor
in
je
pushf
repnz
jae
push
out
lods
jl
cmp
enter
xor
and
xchg
pop
cmpsl
pop
pop
sub
xorb
xor
aam
stos
xchg
loop
mov
mov
push
in
fimuls
jl
xchg
pop
and
add
cmpsl
sub
rcll
incb
fistpll
xor
jecxz
andb
outsb
xor
out
inc
add
inc
jge
shr
cs
or
xchg
outsl
fld
adc
inc
ljmp
push
jle
xchg
pop
xchg
mov
jno
test
test
test
push
jbe
ja
imul
sti
mov
and
nop
and
mov
test
adc
xchg
fidivrs
lret
inc
insb
and
loope
out
dec
insl
cli
dec
jae
jmp
xor
movsb
aad
add
leave
movsl
in
cmp
je
pop
mov
test
enter
jg
add
mov
mov
pop
xchg
xchg
dec
lods
ljmp
aad
cmp
jle
shl
movsb
jns
and
rolb
in
jne
aaa
or
mov
xor
inc
pop
fnsave
dec
test
fdivrp
or
add
and
mov
or
lds
test
not
adc
fcmovu
sbb
mov
mov
stos
cltd
push
lcall
pushl
loope
xchg
insl
xchg
add
adc
mov
or
gs
aas
mov
into
mov
pop
stc
test
and
or
jae
or
and
les
sub
andl
xor
jle
das
xchg
dec
aas
repz
out
pop
adc
adc
cmp
xchg
lods
fldcw
sbb
push
sub
hlt
int3
aam
jb
push
or
movsl
pop
inc
out
mov
test
xchg
pusha
pushf
pusha
mov
jns
xchg
adc
lret
and
and
mov
in
jbe
mov
notl
sti
int
aad
testl
push
xor
sub
stos
sbb
xor
sub
mov
repnz
xchg
cmp
aas
sub
or
mov
aad
dec
xor
insb
pop
in
aad
sub
std
icebp
jmp
es
ljmp
fsubl
subl
mov
pop
stos
cmpsl
jle
and
add
data16
xchg
jns
mov
pop
add
push
dec
stos
dec
lock
clc
push
cmpsb
out
jle
shr
push
add
or
es
enter
sub
fs
jo
dec
and
push
je
or
pop
enter
cwtl
int
ret
jle,pn
mul
add
fcompl
lock
movl
fimull
sub
cmp
mov
ljmp
es
ret
rclb
test
lahf
fbld
and
imul
xor
lds
add
out
das
popa
sub
je
fsubrs
and
mov
imull
orb
imull
sarl
sbb
mov
ds
in
inc
push
mov
push
push
in
aas
hlt
mov
iret
call
inc
int3
fstpt
pop
test
repnz
xor
je
sahf
mov
mov
dec
cmpsb
and
add
and
push
scas
mov
das
push
adc
int3
or
mov
fwait
pop
mov
cmp
or
iret
into
movsl
mov
xor
xchg
popf
sbbl
pop
push
testl
mov
or
outsb
aas
pop
mov
inc
and
adc
ljmp
xchg
jns
and
mov
shlb
mov
adc
sahf
xor
lahf
push
insb
std
jb,pn
sti
add
outsl
jbe
mov
or
jae
lods
bound
out
insb
loop
push
inc
clc
js
pop
or
cs
loopne
shll
and
adc
pushf
mov
lods
aaa
and
ds
add
daa
mov
and
sub
xor
negl
mov
mov
nop
mov
test
jbe
jmp
and
pop
out
inc
subb
mov
sbb
std
jb
inc
ljmp
fidivrl
ljmp
jns
dec
out
loope
and
adc
les
daa
enter
roll
cwtl
dec
inc
out
stos
add
add
mov
lret
pop
inc
data16
mov
mov
push
mov
test
inc
inc
int3
movsl
outsl
stc
fbstp
add
adc
int3
pop
ja
cld
adcl
shl
ds
lods
push
jge
js
push
dec
sbb
pop
adc
mov
das
mov
fidivs
pop
jne
sbb
dec
xchg
pop
std
das
xor
push
jecxz
aas
sbb
enter
jmp
lahf
jnp
int
pop
imul
dec
xchg
adc
test
inc
jecxz
jecxz
shrl
outsl
fs
rol
mov
jbe
lret
dec
add
pop
inc
sahf
push
iret
scas
jge
addr16
imul
cltd
xorb
cwtl
shlb
mov
mov
xsavec
sub
mov
aam
mov
leave
jge
icebp
out
jp
dec
sbbl
stc
mov
push
xchg
add
decl
into
and
les
inc
jle
mov
gs
in
xlat
mov
add
sbb
aas
aad
scas
jne
and
fcmovnu
dec
pop
mov
es
xor
mov
jg
les
fistpll
xlat
nop
xchg
jno
and
xor
jnp
cli
sub
dec
mov
pushf
inc
je
dec
add
inc
dec
pop
cltd
inc
xor
das
push
lahf
mov
dec
cs
inc
push
sbb
test
mov
lcall
int
cmpsb
pop
test
xchg
cmp
pop
mov
popf
inc
call
sbb
pusha
jae
in
add
mov
xchg
les
ds
pop
int
cmp
jns
and
mov
xchg
ret
xchg
stos
jmp
or
add
mov
fcoms
testb
iret
xor
ja
push
data16
push
or
cld
leave
mov
popf
icebp
inc
pop
lcall
mov
jle
mov
pusha
xchg
adc
int
shll
jo,pn
add
jge,pt
int3
add
nop
shr
mov
adc
cs
test
in
push
xor
testl
mov
int
jbe
xchg
add
stos
std
rcll
lds
sub
icebp
mov
test
dec
repz
inc
stc
popa
or
pop
rclb
pop
je
ds
jg
and
jo
xor
jp
lods
pop
loop
outsl
outsl
hlt
loope
cmpsl
jbe
sub
push
mov
pop
loope
scas
push
das
out
cmp
imul
fnstenv
push
test
imulb
fcmovne
xor
sbb
push
and
stos
leave
mov
fisttpll
scas
pusha
mov
scas
and
xlat
cltd
rcrb
sub
and
std
pop
and
rcr
fwait
mov
lcall
adc
idivb
cmp
pop
push
dec
int3
ds
xchg
nop
int3
and
jmp
lret
mov
mov
inc
in
push
fldt
repnz
pushf
mov
bound
add
jle
jmp
test
inc
pusha
filds
ret
lcall
push
jno
mov
jae
jle
adc
scas
arpl
xor
cltd
das
jne
dec
lcall
shll
loopw
dec
mov
inc
xor
enter
adc
mov
xor
out
and
movsb
and
and
test
dec
xchg
dec
sbb
jmp
jg
jmp
inc
ljmp
fnsave
adc
pop
test
cld
scas
mov
adc
mov
cmp
push
lret
les
inc
es
xchg
dec
mov
clc
and
dec
cld
repnz
jecxz
fs
sbb
pop
pusha
lea
push
cmp
imull
sub
xchg
inc
jo
imul
sbb
adc
stc
or
imul
fdivr
jnp
cltd
fistl
inc
sbb
sahf
inc
adc
or
stc
pop
test
mov
cmpsb
dec
or
sub
ret
cmc
push
in
pop
adc
dec
lea
sbb
push
xchg
mov
je
mov
fs
add
clc
stc
jp
lea
jle
ds
scas
inc
and
jl
pop
push
mov
shl
inc
xchg
cltd
and
inc
cmpsl
push
cmc
int
mov
loope
mov
sbb
addr16
js
ja
and
mov
ret
out
sbb
xchg
fdiv
sub
pop
mov
xchg
lods
sbb
in
mov
scas
pop
mov
mov
lods
mov
xchg
mov
xchg
and
push
negb
out
mov
out
cmp
test
sub
mov
mov
fstpl
inc
je
in
subb
bound
test
jge
sbb
push
fstpl
push
dec
jp
ss
sub
jmp
and
insb
jno
adc
repz
andl
adc
aaa
mov
xor
iret
arpl
jns
sbb
pop
sbb
push
xchg
and
cmpsl
jl
scas
adc
test
jg
and
jae
daa
pop
xchg
sbb
pop
pop
cmp
in
push
push
or
mov
and
cmpsl
fimuls
inc
mov
loop
jne
xlat
dec
out
pop
xchg
rcrb
out
xor
scas
imul
mov
cmp
or
xor
xchg
lods
out
mov
leave
xlat
aam
cmp
fists
mov
insb
repnz
xor
leave
outsl
movsb
js
rcrb
in
outsl
aas
xor
push
sti
mov
jne
icebp
sub
in
push
xor
out
stc
les
xchg
mov
insl
test
inc
movsl
pop
dec
pop
stc
inc
pop
adc
in
mov
mov
lea
call
rep
jnp
lret
stos
loopne
fdivrl
loopne
ss
sub
mov
repz
mov
push
mov
mov
jg
xchg
hlt
inc
test
xchg
mov
mov
cmc
add
and
addr16
movb
aam
sub
cmp
xchg
insb
inc
mov
adc
jmp
mov
ret
fisubrl
dec
ficomps
stos
push
sbb
pop
jno
test
dec
scas
repz
loop
lods
sbb
inc
push
mov
movsl
imul
jmp
movsb
push
stos
add
lock
pop
jb
movl
inc
iret
and
cmp
cmp
data16
icebp
xor
mov
push
mov
jne
dec
arpl
enter
bound
lods
les
test
sarb
sub
out
inc
sbb
je
rcrl
pop
pop
mov
ljmp
stos
mov
lods
xchg
sbbb
mov
adcl
pop
lods
pop
xchg
rcrb
mov
std
push
fsubp
jae
push
out
add
push
scas
mov
test
out
aad
lods
rolb
inc
sub
std
mov
push
rorl
popa
or
lret
loop
cli
adc
arpl
jge
out
mov
pop
inc
xlat
into
imul
int
and
cmpsb
sarl
mov
sbb
mov
jp
lods
test
int3
movsl
adc
clc
sub
cli
dec
dec
jmp
mov
mov
popa
cmc
or
or
mov
stc
jo
dec
push
jbe
jae
or
jno
add
pop
mov
mov
mov
imul
xchg
les
dec
sbb
jae
cs
iret
stos
ds
subl
dec
jle
stc
test
xor
fs
daa
cmp
cmpsb
add
out
inc
lret
adc
jae
mov
cs
les
jnp
call
and
pushf
ret
sbb
xlat
jno
fstps
dec
aad
lock
imul
cmp
inc
imulb
repnz
loopne
dec
shr
les
xchg
movsb
pop
pop
push
cmpsb
push
cli
push
jnp
call
imul
mov
insl
pusha
or
sbb
pop
push
xor
loope
dec
pop
mov
fisttpl
cmp
jbe
sbb
push
ljmp
ds
mov
inc
mov
sbb
cmp
shl
lret
ficoml
mov
call
aas
push
into
mov
dec
scas
mov
sbb
ds
test
rclb
sbb
add
xor
not
stos
add
into
enter
sbb
cld
cwtl
out
mov
stc
cwtl
xor
jae
jno
pop
xor
dec
add
outsb
dec
pop
xchg
mov
nop
negl
mov
cmpb
icebp
adc
or
incb
mov
out
sbb
and
into
xor
jo
shlb
adc
inc
mov
or
pop
rcrl
mov
pop
jno
ret
in
lret
imul
fisttpll
fisubrs
push
inc
push
jl
dec
dec
jmp
test
dec
std
mov
mov
push
fs
xchg
sub
scas
lret
add
push
inc
mov
jno
outsb
fdivp
rcrl
xor
and
add
imul
fsubrs
fcoms
int
sub
gs
or
or
xor
inc
jp
lss
ja
jnp
inc
aad
rclb
or
sti
in
inc
hlt
pusha
dec
lcall
jno
das
pop
xchg
cmpsb
in
andb
cmp
sbb
jle
fs
cmp
mov
pushf
outsl
in
mov
push
lods
xor
aas
icebp
xor
lods
fsts
lds
mov
icebp
arpl
pop
jl
dec
out
test
leave
xlat
adc
inc
inc
loop
jg
stc
testb
enter
sub
ror
ljmp
in
inc
inc
sub
sbb
mov
stos
mov
and
je
das
call
inc
sarl
leave
ficompl
popa
pop
sti
in
push
jmp
bound
call
out
popf
outsl
and
lock
mov
mov
pop
cmpsb
sub
ljmp
inc
adc
jmp
add
std
out
fidivl
pop
mov
pop
mov
sbb
out
js
push
mov
gs
mov
test
leave
cmpsl
and
cmc
outsl
flds
mov
movsl
sahf
dec
mov
es
bound
aad
dec
repnz
stos
xchg
or
xchg
je
inc
and
test
enter
xchg
dec
dec
xor
mov
pop
das
rcrl
test
or
fwait
push
dec
aad
cmp
jle
mov
js
mov
xchg
in
sbbb
popl
sub
jmp
adc
ljmp
sub
add
ret
xchg
pop
test
lret
jb
mov
cmp
aam
cltd
dec
in
mov
push
pop
push
int3
add
inc
jnp
dec
add
jg
push
mov
or
into
cmc
cwtl
push
sarl
dec
enter
jge
mov
dec
aaa
lods
cmp
roll
or
inc
mov
ja
roll
mov
sub
ljmp
and
pop
outsb
cwtl
lret
pop
cmpsl
cli
pop
or
adc
cwtl
dec
lods
jno
push
das
mov
test
add
mov
adc
xor
adc
cmp
dec
icebp
xchg
push
push
pop
std
jb
mov
ja
push
fsub
cs
mov
dec
leave
outsb
xor
enter
xchg
and
das
fsubr
sub
or
mov
ja
xchg
lods
pop
into
repnz
push
jns
leave
jo
mov
int
sbb
xchg
pop
imul
rol
fsubrs
pop
jg
pop
in
repnz
pushf
out
fcoms
adc
sub
jg
xor
cmpsb
je
movsl
adc
dec
ljmp
pop
push
mov
xchg
icebp
push
push
push
pusha
xchg
call
and
mov
sbb
aam
es
xor
div
es
or
xor
sbbl
repz
enter
sub
and
inc
xor
inc
pop
jbe
enter
and
jecxz
xchg
mov
mov
es
loop
sub
add
jg
adc
sub
mov
pop
test
out
mov
jmp
les
or
fcomip
xchg
icebp
jge
cmpsl
pop
mov
shlb
sub
mov
sbb
xchg
stc
xor
mov
aam
rcrl
jns
pop
xor
push
mov
inc
stos
mov
stos
or
movsb
test
lret
cmpsl
pop
add
ja
cltd
test
cltd
sbb
out
call
jbe
fcompl
js
dec
push
dec
fdivl
and
stos
imul
imul
add
sub
pop
or
mov
mov
push
push
test
inc
lret
inc
sub
sbb
xchg
sahf
xchg
adc
add
jg
imul
loopne
jb
mov
out
cmc
and
xor
test
add
cbtw
push
pop
test
arpl
mov
mov
xor
loopne
movl
fistpl
scas
mov
mov
gs
push
cmp
or
popa
sbbl
dec
in
icebp
addr16
stos
add
leave
mov
test
or
xor
add
daa
movsb
cmp
push
cmpsl
fists
mov
lret
pop
testb
into
sbb
push
mov
fistpl
cmpb
leave
xor
lahf
jg
pusha
add
outsl
sub
mov
mov
dec
rcll
jle
jne
mov
sbb
fsts
test
xchg
sbb
jp
negl
idiv
sub
mov
push
cmp
or
add
mov
ds
add
xchg
jmp
cmp
jnp
pop
into
pusha
jb
pop
shrb
stos
mov
and
je
fdivrl
dec
mov
push
or
popf
jb
and
or
mov
add
jecxz
je
add
xchg
xchg
jl,pt
repnz
in
mov
cmp
sbbb
add
adc
pop
clc
enter
inc
daa
dec
push
lods
jmp
fldl
fucomi
cs
test
xor
or
xor
xor
xchg
int3
mov
test
lahf
adc
jle
fldl
mov
lret
dec
add
sbb
jmp
mov
sub
pop
dec
out
mov
das
popa
int3
sub
outsl
sti
std
mov
cs
mov
or
mov
cld
sbb
jmp
cmp
movsl
mov
push
push
dec
jp
je
add
cmp
sub
lods
sbb
sub
popa
inc
dec
lret
fadd
arpl
jno
sub
push
mov
sbb
sub
loopne
and
xor
popa
mov
icebp
cs
pop
aaa
lods
pop
push
fidivl
cmpsl
mov
or
mov
jmp
push
sbb
or
jmp
scas
jp
insl
imul
pop
push
pop
jo
push
shrl
loopne
jle
pop
gs
rcrb
es
in
add
cli
adc
dec
repnz
lahf
dec
mov
mov
fiaddl
xchg
loopne
mov
jae
or
outsl
ret
dec
test
mov
mov
pop
adc
stc
hlt
xchg
cli
daa
xor
push
cli
sub
clc
imul
dec
add
jae
mov
out
aad
add
cs
dec
mov
add
test
xor
fimuls
add
cltd
pop
sub
xor
cli
mov
sbb
sub
xor
cmpl
mov
ficompl
in
xchg
hlt
outsb
in
mov
inc
loop
mov
pop
test
jb
mov
popf
mov
adc
lret
adc
mov
push
xor
stc
mov
movsl
dec
adc
mov
insl
maxps
add
inc
xor
fidivrs
xchg
sub
and
aad
adc
mov
jnp
js
jno
xor
lahf
mov
or
pusha
jp
nop
mov
loope,pt
push
push
repz
inc
pop
cltd
jge
int
por
and
lods
out
jbe
lcall
jl
and
jle
test
fucomp
cmp
xor
sbb
mov
mov
je
jge
rcr
aad
mov
loop
pop
cmp
fs
push
xor
imul
fcmovbe
mov
mov
sub
push
jae
shll
pop
mov
mov
sbb
mov
or
push
xchg
call
mov
adc
daa
jge
pop
sub
lret
dec
insl
dec
loopne
insb
cmp
popl
jno
cwtl
dec
jecxz
jg
pusha
test
xor
pop
sbb
jb
sbbl
and
imul
xchg
fstps
pop
jne
hlt
sbb
ret
es
roll
cltd
stos
push
mov
pop
mov
cmpsb
test
mov
cmovbe
push
in
jg
leave
int
adc
mov
jb
sbb
nop
pop
test
stos
insb
jg
mov
mov
jl
inc
xchg
aam
ds
les
inc
inc
mov
mov
popl
push
insl
ret
jb
dec
sub
rolb
iret
dec
enter
lcall
ds
mov
dec
dec
in
addl
out
cmp
mov
xor
fadds
inc
sub
jp
jae
xchg
je
xchg
adc
mov
jmp
inc
push
rorl
fisubrl
xor
inc
push
jle
je
mov
xchg
imul
in
nop
sbb
sub
push
call
mov
ss
xchg
mulb
call
enter
test
jl
scas
xorb
cmp
test
adc
mov
jge
and
mov
addb
fdiv
out
sub
inc
insb
imul
mov
arpl
or
shlb
sub
sbb
pop
push
add
sub
sub
cmp
movsl
inc
push
imull
mov
cmp
jl
or
xchg
cli
jle
fdiv
sti
inc
jnp
sarb
ret
sub
repz
jbe
lea
add
mov
sub
icebp
xchg
cld
and
jo
test
mov
sub
call
push
mov
loope
les
lock
push
movsb
int3
movsl
in
stc
xchg
xchg
add
dec
xchg
outsb
andb
xchg
dec
repz
cmp
pop
mov
xlat
movsl
and
std
rorl
scas
push
bound
lea
cli
lods
ljmp
aaa
adc
ret
lock
push
in
xchg
movsl
sbb
pop
out
push
mov
sbb
aaa
xchg
sar
jb
mov
leave
sbb
add
lret
cmp
mov
cmc
divl
cmp
or
pop
ja
loope
in
pop
shll
cmp
addb
fsts
stos
pop
and
rcrb
xchg
pop
test
cmp
ret
push
shll
cmp
pusha
jae
loop
mov
xchg
jmp
mov
test
jne
push
push
pop
daa
adc
daa
dec
addl
and
pop
adc
mov
out
xchg
inc
or
mov
imul
jl
mov
cld
movsb
mov
ljmp
out
insb
or
mov
or
lahf
hlt
pop
rcrb
xor
outsb
repz
jmp
idivb
int3
mov
fiaddl
lock
cltd
cmpb
psubsw
dec
bound
cmp
hlt
sbb
dec
jns
js
test
add
divb
ret
mov
mov
movsl
scas
or
dec
dec
insl
loop
pop
mov
outsl
sub
adc
xchg
jnp
mull
scas
gs
xchg
cwtl
ficoms
add
pop
test
jae
xchg
adc
mov
sti
push
cli
aas
sub
lcall
mov
loope
dec
sbbb
jno
in
jg
fmuls
xchg
stos
loope
pop
insl
outsl
in
add
sti
scas
leave
loop
push
lds
sti
leave
dec
mov
out
pop
icebp
js
cmp
sti
push
dec
mov
inc
inc
xchg
mov
pop
adc
dec
std
movlhps
mov
add
pop
inc
hlt
rcpps
or
mov
inc
pop
push
xchg
rorl
dec
aam
jecxz
xchg
xchg
arpl
sub
notl
dec
xchg
lock
xchg
jns
sub
adc
icebp
hlt
dec
repnz
test
fidivl
lock
imul
sbbl
lcall
enter
cmp
adcb
add
loop
push
jb
inc
cld
insl
xor
xchg
mov
out
arpl
aaa
jmp
inc
fs
jle
pop
mov
jne
adc
jae
arpl
cmp
jmp
fcoms
xor
sub
dec
loop
iret
cmp
bnd
or
xchg
daa
sahf
loop
icebp
enter
repnz
and
movsl
mov
mov
xchg
lcall
ret
sub
mov
sbbl
loope
dec
adc
dec
imul
push
cmp
sub
xchg
lahf
pop
and
shl
xor
push
cmp
orb
xchg
jl
and
popa
popf
aad
mov
mov
adc
pusha
mov
rcl
or
popa
sbb
jg
lret
pop
pusha
outsb
sbb
and
movsl
lods
mov
mov
sbb
adc
outsb
scas
lods
daa
psrld
add
add
jmp
mov
sbbl
lret
in
or
sub
out
icebp
jnp
js
mov
stc
cmp
jbe
ret
outsl
sub
or
inc
jne
fnstenv
ljmp
sbb
shl
imul
movb
xor
ds
jo
outsb
roll
xchg
cmc
or
aaa
xor
leave
fldcw
mov
std
pop
cld
movzwl
adc
ljmp
ja
sub
ror
push
addl
movsb
cmp
sbb
out
xor
sbb
sbb
je
lods
cmp
cmp
dec
xchg
mov
fsts
xchg
mov
xor
xchg
jle
mov
ret
sarb
push
fwait
dec
ja
cmpsl
or
aad
lds
inc
xchg
loope
and
inc
out
mov
cmpsb
dec
or
insl
fmuls
jne
jnp
inc
mov
test
in
xchg
or
lea
shl
stos
popa
rcrb
sub
mov
fcmove
sbb
push
cmpsl
adc
lods
pop
pop
add
cmpsb
ficompl
in
mov
pop
in
push
scas
push
xchg
dec
jb
movsl
in
jg
lea
frndint
pop
cmpsb
ja
pop
stos
push
out
xor
test
inc
int
inc
inc
dec
repnz
cli
ja
xor
cwtl
loopne
jae
test
pop
cld
repnz
jl
fldl
xor
pop
insl
push
jle
stc
sti
mov
clc
movsl
pop
int
call
sets
inc
movsb
and
iret
and
das
addl
push
add
cmp
adc
cmp
push
sub
push
inc
int
ret
xchg
sub
imul
insb
xlat
pop
mov
mov
sahf
les
repnz
stos
cmpsl
inc
dec
mov
sbb
xchg
fistl
adc
mov
aas
sti
add
data16
sar
jb
adc
jmp
xor
xorl
mov
pop
xchg
dec
pop
jne
sbb
cmp
ljmp
call
gs
push
push
das
xchg
dec
cmp
cli
jne
mov
dec
test
jnp
in
jne
cmp
js
lret
or
lret
int3
daa
repnz
sbb
test
stc
clc
inc
movsb
cmp
enter
std
dec
test
cmpsl
push
cmp
sub
in
sub
scas
imul
movsl
cs
jne
pop
jmp
outsl
push
cli
jns
adc
mov
psubusb
pop
test
mov
call
jns
je
not
jecxz
pop
cld
test
lret
mov
inc
test
imulb
lret
loope
or
jbe
sub
mov
gs
in
in
mov
test
sub
adc
pop
cmc
dec
pop
insl
lret
xchg
xchg
sub
aaa
mov
cld
pop
add
add
sarl
out
mov
push
sbb
and
jns
mov
inc
mov
push
ficoms
sbb
test
imul
mov
mov
sbb
mov
mov
cmp
mov
adc
cld
and
fmuls
dec
mov
fisubl
or
fnstenv
and
cmp
add
lods
jb
push
or
xor
cs
iret
xchg
fs
fcomip
pop
and
mov
mov
lahf
outsl
cwtl
pop
add
pop
mov
and
decl
je
xchg
and
xchg
lret
mov
cmp
cwtl
mov
inc
incl
test
xor
pop
xchg
and
mov
lds
insb
daa
popl
icebp
stos
inc
ret
fnsave
movsb
xchg
jg
mov
cmp
data16
fdivl
lret
sbb
sub
int
repz
inc
xchg
movsb
loopne
push
push
or
mov
testl
inc
mov
stos
jnp
pusha
push
ret
push
cwtl
mov
addr16
inc
xchg
push
xchg
add
sahf
rol
out
ja
jae
adcl
mov
sub
out
outsb
sub
push
rorl
adc
je
cmp
inc
pop
and
cmp
call
mov
pop
xlat
push
shlb
xchg
imul
cli
sbb
jmp
decb
icebp
lea
dec
adc
mov
push
pop
repnz
add
xchg
out
popf
dec
inc
mov
hlt
pop
mov
mov
ljmp
dec
xchg
dec
push
jnp
or
push
jge
cmpsb
add
sti
push
movl
xchg
mov
and
clc
fwait
push
clc
shlb
pop
cli
fwait
fisttpl
jmp
ficoml
inc
dec
sbb
shl
or
and
or
ds
sbb
cli
int
fildl
pop
xchg
cmp
fisttpl
mov
test
inc
push
stos
pop
xchg
pusha
test
mov
push
mov
pop
ljmp
lcall
xchg
mov
repnz
push
or
or
adc
or
add
xor
or
sbb
lods
loope
mov
fcomip
sub
dec
loope
lahf
js
cmp
mov
arpl
outsl
cmp
or
sbb
jns
sub
in
jb
sahf
pop
stos
xor
sar
push
call
lcall
add
pop
loopne
and
ja
aas
dec
and
repnz
lret
into
xchg
shl
xchg
mov
mov
push
aas
pop
jge
xlat
and
cmp
pusha
push
push
mov
dec
popa
inc
aam
mov
pop
mov
dec
pop
xchg
xchg
push
in
ja
iret
addl
dec
push
mov
or
repnz
fnstsw
mov
sub
pushf
outsl
dec
repnz
or
xchg
jle
ret
xlat
dec
add
sbb
mov
fisubl
pop
and
lcall
adc
mov
cwtl
push
mov
or
das
mov
rep
orl
test
std
xchg
jp
or
inc
mov
dec
cmpsb
int3
stc
xchg
mov
pusha
loop
mov
dec
negb
ret
stos
popf
cmc
mov
or
arpl
push
lahf
add
sbb
int3
and
xchg
cs
xchg
and
icebp
movsb
sub
adc
xabort
inc
je
in
push
xchg
push
div
mov
or
lods
mov
xorl
cmpsl
push
pop
fidivrl
sbbl
sbb
pop
inc
jp
jb
and
mov
sbb
outsl
dec
sahf
xor
or
into
xor
add
mov
pop
push
popw
mov
in
cmp
push
imul
ficoml
xchg
xchg
stos
fstpt
scas
test
jl
hlt
ror
cmpl
and
rorl
mov
cs
dec
inc
ja
fs
adc
ljmp
faddp
ret
lret
inc
jecxz
xchg
pop
aas
mov
sub
dec
mov
or
mov
xor
jne
hlt
xor
cmpsb
inc
popa
pushf
add
xor
stos
fsubrs
bound
or
lods
out
sub
mov
cmpsb
test
xor
dec
aaa
aas
xchg
jnp
inc
testl
fistpll
test
hlt
lret
push
mov
xchg
xor
rcr
pop
fsubs
fwait
loopne
mov
test
xor
aad
mov
xchg
jmp
call
jle
into
dec
pop
pop
insb
add
nop
dec
dec
jle
mov
mov
mov
mov
orb
gs
sti
cwtl
cli
daa
out
cmp
sbb
adc
leave
fwait
sar
int3
jp
mov
adc
pop
jecxz
dec
xchg
xor
cmp
mov
lods
add
lcall
fnstenv
ja
mov
les
lea
and
mov
mov
inc
fwait
or
pop
fscale
add
pop
push
leave
xchg
sub
sub
cs
lock
jns
clc
lods
push
popf
xchg
mov
movsb
add
sub
nop
inc
jo
daa
lods
jno
pop
mov
subb
inc
mov
enter
sbb
xor
shlb
sub
outsb
iret
add
addr16
xor
icebp
int
in
pop
push
fcomps
mov
hlt
aaa
sub
aam
mov
iret
fs
lcall
push
cmpsb
xchg
insl
sub
dec
mov
cmp
aaa
movsb
fidivrs
jmp
mov
jbe
and
jle
frstor
cmp
movsb
pop
cmp
mov
fs
daa
mov
mov
inc
in
mov
pop
lds
in
adc
imul
ret
insb
popaw
mov
dec
test
pop
add
mov
std
mov
fdiv
and
popf
jge
inc
push
xchg
popa
add
jno
jmp
ja
mov
in
shl
pop
insb
shll
cmp
jmp
sbb
cltd
xlat
push
adc
adc
push
cs
xchg
shl
mov
insl
aad
scas
imul
hlt
push
pop
insl
mov
repnz
punpckhdq
lahf
nop
or
fucompp
loopne
dec
icebp
or
xor
cmp
add
fists
lds
xor
push
mov
lret
mov
adc
inc
push
fwait
les
repz
aaa
mov
icebp
vshufps
ret
lds
inc
imul
or
mov
lcall
add
cmp
jge
mov
scas
sbb
fsubl
test
in
pop
in
adc
fs
cmp
pop
inc
iret
dec
iret
xchg
jae
cs
sub
cli
sbb
iret
lods
push
inc
mov
xchg
test
adc
or
test
add
xlat
mov
mov
movsb
push
lock
sub
inc
add
inc
pop
stc
mov
cmp
vpackuswb
sbb
mov
lock
mov
push
test
xlat
jp
insb
popa
fsts
and
imul
sub
gs
aad
adc
lock
imul
cmp
inc
jnp
fdivp
fwait
pop
stos
dec
dec
jb
xchg
add
xchg
jb
loopne
scas
ljmp
dec
rcrb
data16
sbb
xor
movsb
inc
scas
jae
jno
mov
jle
or
sub
sti
aad
iret
mov
and
jp
std
mov
xchg
lahf
mov
pop
negb
sbb
xor
jb
mov
dec
and
out
mov
sbb
sbb
xchg
fbstp
adc
je
movsb
movsl
loopne
je
push
pop
std
and
in
adc
adc
in
loope
mov
cmp
out
jmp
and
cwtl
dec
call
mov
cmc
aaa
xchg
mov
ret
inc
sbbb
push
inc
dec
inc
and
mov
jecxz
cmp
or
jge
pop
lock
aad
cmp
lret
pop
pop
mov
imul
stc
sbb
cmp
sbb
ret
xchg
pop
imul
int3
add
pushf
mov
popf
xchg
jecxz
dec
int
mov
xlat
ja
sbb
shlb
mov
test
xchg
fidivrl
mov
fldcw
jo
push
pop
mov
sub
cmp
ret
mov
bound
int
mov
or
xchg
inc
mov
lahf
mov
pop
mov
push
sbb
push
or
or
xor
nop
lahf
outsb
adc
mov
xor
sbb
mov
pop
adc
sbb
mov
bnd
adc
inc
push
pushf
mov
jbe
cmp
jmp
xor
out
neg
int
popa
outsl
sbb
and
outsl
xchg
lcall
les
pop
sbb
pusha
ror
cltd
xor
pop
fldl
inc
jmp
movsl
jae
jmp
push
and
mov
cmpsl
rcll
gs
sti
in
mov
int3
jle
cmp
xor
jnp
in
sbb
loopne
stos
sbb
dec
sbb
insl
dec
inc
cmp
jecxz
cld
dec
pop
aaa
mov
les
xchg
mov
test
je
sbb
jmp
push
iret
ljmp
add
sbb
aaa
stc
mov
mov
dec
xor
mov
fildl
mov
cmp
ja
inc
aad
into
adc
add
stos
mov
stc
xor
dec
sub
push
lahf
imul
sbb
mov
adc
inc
mov
push
or
adc
icebp
std
scas
xorb
shr
ds
dec
cli
bnd
and
jl
add
adc
shl
pushf
jo
rcrl
sbb
dec
cltd
sub
push
and
xor
dec
sbb
cld
sbb
imul
add
jne
sub
xchg
test
add
int3
repnz
or
and
sbb
test
pushf
add
cmp
das
mov
jmp
xchg
outsl
and
inc
cmp
sbb
push
add
imul
inc
in
outsb
daa
lods
std
cs
mov
ret
fstl
cmc
dec
mov
orl
cmp
sarb
pop
and
arpl
popa
cmpsb
pushf
mov
and
sub
cmp
lahf
into
jecxz
lahf
sub
jle
repz
loop
and
mov
jbe
sub
rolb
or
addr16
cld
mov
cli
leave
pop
icebp
inc
push
cmp
inc
stos
xchg
out
fdivr
rcl
jb
xchg
aad
aas
xor
mov
cmpsb
in
loope
les
stos
push
cmpsb
loope
dec
cmp
test
ds
add
adc
aam
xorl
push
ret
lds
xchg
adc
push
repz
jns
sbb
cli
fnstenv
icebp
cld
popa
push
mov
scas
xor
add
or
cmc
shrl
jmp
cmpl
sub
insl
mov
mov
popf
mov
inc
je
cmpsl
or
jp
jge
js
sub
cld
or
cmp
inc
push
clc
sbb
adc
mov
mov
ljmp
jle
xor
shlb
addl
mov
sub
pop
jns
cltd
xor
cmp
xchg
pop
andb
outsb
fldl
cwtl
mov
sbb
push
push
mov
mov
cs
loop
add
mov
insl
repnz
clc
and
add
push
xchg
push
std
xor
pop
lea
out
and
aaa
das
push
cmp
add
mov
fldcw
std
lcall
cwtl
inc
sarl
mov
dec
cmp
sbb
in
cmpsl
out
push
add
push
subb
xchg
jecxz
push
mov
fmuls
lea
stos
dec
cli
jmp
and
add
or
jmp
xor
push
fldt
scas
and
js
dec
cli
pop
add
fmuls
out
out
sub
pop
add
inc
int
lds
ret
cwtl
dec
lods
std
mov
adc
inc
enter
sbb
fwait
test
rorb
leave
jnp
daa
fbstp
jp
lret
xor
daa
cmpsb
sbb
jecxz
xchg
outsb
xor
or
fdivrs
cwtl
cmp
pop
or
adc
jg
arpl
fxch
sub
or
push
dec
iret
push
popf
dec
jg
pop
mov
or
das
enter
sti
es
pop
out
fwait
jae
les
repnz
stos
and
or
shr
in
cmp
sub
xchg
repnz
inc
mov
pop
mul
lcall
aam
clc
nop
out
mov
data16
mov
lea
mov
mov
mov
adc
dec
addr16
int3
mov
leave
cld
fcoms
add
sub
test
out
jo
les
adc
cmp
mul
imul
hlt
mov
jp
std
xchg
xchg
out
movsl
addl
cmp
mov
push
add
pop
mov
add
lds
les
xlat
lds
mov
and
ds
je
mov
rcr
ja
mov
adc
add
adc
mov
lahf
mov
jp
cli
bound
mov
repz
dec
bound
in
fcoml
out
push
or
jno
dec
mov
fs
insb
dec
sbb
out
push
pop
aad
cmc
jns
jb
cwtl
mov
or
lcall
fimuls
adc
scas
cwtl
jp
in
imul
inc
jns
scas
sbb
popa
sbb
jo
lret
mov
and
out
cmpsb
lods
pop
shll
mov
incb
xor
or
push
lret
or
imul
or
hlt
jno
mov
adc
xchg
jg
ljmp
mov
shl
fwait
xchg
xor
rcrb
add
popf
mov
dec
dec
or
leave
pop
xor
mov
not
outsl
dec
add
push
mov
and
test
sbb
shrl
insb
insb
sbb
add
stc
adc
ds
cltd
aad
mov
fisttpl
inc
daa
sbb
popa
mov
filds
imul
aaa
mov
jne
xchg
jbe
push
or
cmpsl
cmp
xor
orb
fbld
pop
lret
mov
insl
push
in
fs
hlt
out
xchg
fldl
inc
cmp
sub
xor
inc
loopne
nop
ret
nop
notb
cs
fstl
xor
jnp
mov
push
fwait
out
pop
jl
int3
sbb
pop
pop
dec
push
out
lods
sub
sub
loope
js
push
je
fadd
test
sub
push
sub
popa
pop
ret
int3
add
mov
push
mov
in
out
ja
or
faddl
and
or
mov
cmp
aam
adc
jle
lock
add
int3
popa
jns
stc
aas
ret
test
xor
dec
je
push
mov
je
xchg
cmp
or
dec
lcall
dec
je
test
sub
or
movsl
pop
int
cli
push
jnp
mov
mov
jecxz
scas
mov
mov
mov
mov
fbld
mov
sub
pop
cmc
cmc
push
xor
fstl
sbb
cld
mov
push
sub
movsb
cmpsl
mov
or
sahf
mov
js
in
aas
subps
xchg
cld
fadds
mov
add
mov
jmp
mov
ja
cmp
ret
or
sub
popf
mov
rcll
and
mov
adc
jns
outsl
jg
or
jp
es
pusha
dec
rcrb
xchg
or
inc
add
mov
in
push
jns
and
pop
pop
jb
rcr
fcos
nop
or
xor
test
push
es
mov
cmp
inc
xchg
je
cmpsl
pushf
xchg
int
hlt
in
xor
sahf
push
data16
out
jecxz
sub
xchg
add
iret
xchg
aas
dec
dec
and
ss
mov
pop
push
dec
popa
push
xchg
or
jmp
cmp
add
int
jnp
in
pop
and
in
repz
jl
add
dec
mov
std
fldt
or
testl
mov
lea
dec
push
dec
or
xlat
call
cmp
cli
or
mov
add
jp
jae
add
xchg
fisttpll
out
and
jle
pop
insl
int
xor
repz
cmp
rsqrtps
pop
dec
test
mov
inc
out
mov
ret
and
imul
cmpsb
hlt
mov
inc
jmp
in
inc
jnp
in
adc
sbb
push
int
imul
pushf
and
testb
sub
mov
insb
adc
add
test
aaa
and
cmpsl
mov
es
cmp
jp
in
or
mov
jg
push
push
aaa
int3
imul
lcall
sahf
push
pop
js
pop
out
lahf
leave
mov
pop
mov
insl
and
sti
gs
jge
cltd
cli
mov
es
cmp
push
das
fwait
or
xchg
lock
xor
add
dec
rol
in
in
mov
loope
out
or
dec
or
mov
lahf
mov
mov
stc
push
gs
mov
dec
mov
stos
dec
arpl
pop
jne
sbb
push
cwtl
lds
ret
fsubrs
in
addr16
mov
sub
insl
mov
mov
into
test
xchg
addr16
inc
xchg
pop
add
sub
cmpsb
inc
sub
fs
adc
sbb
into
inc
pusha
inc
imul
cmp
xchg
repz
jecxz
xor
loop
jne
inc
mov
jbe
stos
inc
pusha
jae
lahf
xchg
mov
cmpsb
pusha
jle
mov
sbbb
or
jno
in
icebp
push
lds
testb
xchg
movsl
push
cld
fld
cs
lahf
mov
xor
add
dec
lods
dec
jns
mov
inc
jmp
sahf
push
dec
add
jb
or
pusha
bnd
add
ret
push
fildl
adc
lcall
in
pop
cli
jnp
pop
lahf
je
and
or
pushf
out
je,pn
mov
stos
loopne
subl
enter
cli
pop
mov
inc
push
adc
movsb
inc
and
cwtl
cmp
push
xchg
xchg
push
jmp
shll
mov
stos
mov
hlt
icebp
xor
add
sub
mov
dec
cmpb
lock
adc
fs
inc
xchg
xchg
cltd
std
cmp
jo
subb
jnp
inc
lcall
sbb
mov
dec
cli
jg
mov
push
aaa
loop
mov
inc
aaa
xchg
mov
and
aaa
inc
add
push
adc
pop
pop
jl
pop
ret
test
adc
sahf
out
pop
add
test
dec
add
sbb
ja
fs
add
loopne
out
mov
jle
cltd
pop
psrlw
xchg
lods
sahf
jl
add
push
sarb
jl
mov
pop
and
adc
fimull
pusha
je
addr16
cmc
xor
inc
cli
push
sub
jge
or
xchg
inc
stos
sbb
repnz
leave
fcoms
in
pushf
je
xor
ret
sub
pop
outsl
xor
jle
lods
repnz
mov
cmp
or
add
mov
callw
outsb
or
adc
jmp
lods
jecxz
inc
in
int3
xchg
cmp
jle
cmp
orb
gs
mov
inc
jl
repnz
jbe
lret
ss
out
std
inc
sub
out
push
jle
jae
daa
stos
xchg
cmp
push
clc
popa
adc
inc
or
scas
cmp
jns
sbb
sbb
addr16
dec
hlt
sub
jno
add
int
mov
mov
jmp
arpl
cmp
aaa
ljmp
ds
push
push
pop
mov
pop
scas
icebp
mulb
cld
pop
mov
xchg
cld
sub
pop
rclb
mov
cmp
push
mov
sub
sub
imul
std
and
xchg
jb
add
stos
insb
lahf
sbb
pop
mov
or
mov
adcb
dec
jne
and
mov
add
arpl
fiadds
pop
mov
xchg
mov
ds
xor
push
inc
in
lret
jbe
lods
mov
aam
pop
add
jns
cmpsb
jne
or
push
push
mov
loope
mov
push
lahf
in
lods
cmpsl
pushf
outsl
cmc
das
jno
push
les
pop
xor
stos
inc
pop
std
rcrl
cwtl
shlb
add
or
test
inc
mov
lret
lods
loop
lods
leave
cmpsb
jle
xchg
dec
insb
xchg
push
lret
or
mov
sbb
or
and
pop
dec
push
cmp
cmpb
adc
adc
xor
push
xlat
arpl
js
mov
cwtl
mov
add
call
das
push
shr
push
cmp
mov
push
and
push
out
out
lret
iret
mov
jmp
pop
cs
outsl
imul
je
cmp
pop
test
pop
loope
dec
in
stos
sbb
out
mov
iret
ss
jmp
cs
out
imul
adc
scas
mov
ja,pn
push
sbb
fsubs
mov
cmpsb
in
ret
add
xchg
push
repz
and
sub
add
mov
xor
cmp
fistps
or
pop
jmp
leave
cmp
mov
rclb
or
lahf
mov
adc
jno
push
mov
mov
xor
and
mov
cmp
div
aad
or
test
je
or
jmp
xor
dec
xor
jl
jp
mov
rolb
sub
inc
ljmp
add
lock
stos
pop
xor
testl
lods
in
add
mov
mov
fsubrl
jmp
pop
aas
rclb
rolb
movsb
xor
in
mov
lea
ljmp
sub
aad
arpl
roll
sbb
jg
jg
xlat
mov
xor
pushf
dec
out
pop
dec
sbb
mov
cmp
pop
cmp
decl
dec
push
dec
mov
cmp
insb
mov
lock
rorb
xor
lret
cmp
imul
aas
mov
shll
push
pushl
pop
sbb
jecxz
js
popa
or
test
xchg
outsl
mov
lcall
dec
in
adc
rorl
in
add
add
cltd
xchg
mov
mov
pop
mov
aad
popf
jb
jns
movsb
and
dec
imul
xchg
dec
mov
ja
je
jmp
ret
pushf
dec
xchg
push
pushf
jecxz
lock
push
dec
ds
daa
nop
cmpsb
lcall
pop
xchg
sti
push
cmc
lods
fstps
ljmp
adc
fcoml
pop
std
fsubp
sbb
mov
addr16
testl
iret
or
xlat
adc
or
jg
adc
test
inc
int
repnz
xchg
push
int3
fimull
inc
roll
test
push
or
cwtl
push
mov
xchg
hlt
popa
hlt
and
aas
mov
repnz
dec
mov
or
cs
insb
outsb
lret
jle
clc
xchg
shl
adc
jecxz
jo
or
push
addl
mov
cmp
lcall
pop
or
mov
rorb
test
sub
jne
fdivrp
mov
icebp
daa
out
pushf
sbb
arpl
gs
dec
mov
push
stc
cs
ss
sub
or
rcrl
mov
mov
add
sub
inc
push
push
push
enter
sub
mov
xor
outsb
cld
push
addr16
cmp
jo
cmp
imul
mov
mov
je
sub
cltd
jmp
pop
and
cmp
test
dec
negl
nop
jmp
pusha
adc
flds
popf
test
test
cmp
rcll
pop
loop
xchg
mov
fidivrs
jge
cmp
mov
cmp
in
push
lods
out
fldcw
sahf
mov
cmpsb
mov
jle
dec
push
stc
inc
pop
andb
push
jns
sti
repz
out
das
ret
or
pop
ret
cwtl
cmpsl
rolb
push
ficompl
dec
jno
cmpsb
xchg
rorl
clc
mov
icebp
cmp
popf
dec
cwtl
and
in
ds
push
push
pop
push
and
adcl
testb
mov
notb
and
or
arpl
push
aad
enter
cmp
sub
sub
push
jbe
cmp
mov
pushl
roll
mov
push
out
add
movsl
jp
pop
test
push
cmpsl
jo
jo
xchg
test
sbb
adc
jmp
and
mov
push
cmp
fs
sub
ljmp
xchg
pop
push
pop
ja
sbb
mov
mov
sub
sbb
inc
and
mov
in
sti
fsubl
and
ss
divl
add
sbb
sub
cmc
sbb
ja
in
in
push
inc
sbb
add
fcmovnu
push
lods
in
ret
nop
xor
insb
enter
mov
adc
in
jnp
loop
sbb
mov
sbb
xchg
in
pop
or
sub
notl
pop
mov
mov
or
cmpsb
das
add
or
inc
into
jb
xor
out
fmulp
sbb
push
aaa
int
and
mov
and
cwtl
xchg
xchg
in
sti
pop
fcmovu
jbe
jb
in
rorb
add
add
mov
and
out
int3
lret
rcrl
or
mov
ret
mov
jmp
in
push
jl
cmp
mov
jmp
cltd
or
notb
cmp
iret
and
call
aad
rorl
mov
cs
stos
rorb
cmp
mov
and
dec
or
cmp
rcl
lcall
mov
xor
sub
int
xor
jnp
or
xchg
push
xor
sub
rol
sub
imul
ss
inc
testb
das
jmp
out
sahf
pusha
push
ds
add
push
mov
lods
jns
push
and
cs
jmp
xchg
sbb
lock
or
mov
add
fsubr
pop
pop
xchg
cli
sub
loop
loop
hlt
mov
lock
popf
rcrl
adc
call
push
inc
jns
fidivs
mov
inc
ret
ds
ss
adc
fstpl
pop
imul
stos
push
xchg
das
je
and
popl
fdivl
sub
cmp
inc
inc
mov
add
mov
ljmp
ret
fwait
ljmp
mov
lods
xchg
stos
adc
jnp
sub
enter
mov
enter
mov
scas
sarb
imul
inc
cmp
in
xlat
imul
and
in
movl
or
test
pushf
jns
dec
or
sub
push
notl
lahf
out
pop
push
xor
push
clc
hlt
push
movsb
in
xchg
outsl
and
pushf
cmp
nop
ficoms
jmp
imul
pop
lahf
sub
and
pop
daa
push
into
out
popf
mov
hlt
das
and
je
rcll
and
int
adc
cltd
mov
in
ret
lods
gs
sbb
rcl
imul
int
dec
sub
jns
daa
dec
test
mov
fisttps
repz
lahf
sbbb
outsb
push
mov
lret
dec
pop
inc
call
inc
jbe,pn
daa
mov
stos
int
jbe
sbb
push
jmp
fisubrs
mov
lret
and
mov
cmp
dec
testb
dec
mov
xchg
mov
fdivs
or
mov
test
xor
sbb
lret
mov
push
je
dec
mov
aam
je
popf
mov
out
movsl
arpl
mov
mov
and
cmp
xor
arpl
int
shrb
lock
sub
jl
loop
inc
jg
rcrb
iret
inc
stc
fdivs
pop
insl
lret
inc
inc
xchg
imul
inc
jns
pop
cmpsl
sbb
or
out
and
xor
and
cmc
adc
pop
stos
sub
aam
arpl
cwtl
movsb
fidivs
xor
jne
insb
cmp
sub
mov
xchg
inc
jns
fs
out
loopne
or
daa
push
aaa
shlb
es
xor
in
mov
xor
mov
mov
or
mov
loop
or
jl
push
pop
mov
rorl
jle
push
xor
xor
pop
xor
dec
popf
daa
push
mov
xchg
add
lods
xor
mov
stos
xor
sbb
dec
inc
inc
mov
pusha
lahf
aam
push
mov
cmp
imul
enter
jno
aaa
cmp
cmp
nop
leave
and
loope
xchg
lock
sbbl
xor
or
out
loope
push
aas
cwtl
bound
scas
or
out
in
cld
fsubl
aam
push
nop
je
pop
mov
dec
pop
dec
les
sbb
cmp
pop
insb
call
pop
push
jl
push
lahf
push
orb
jmp
cmp
cmpsb
iret
dec
out
fisttps
out
pop
in
dec
call
ja
mov
out
je
loope
shrl
std
fs
inc
aam
outsl
sbbl
dec
insb
dec
xor
inc
stos
inc
xlat
or
mov
mov
ds
add
int
sbb
ds
fucomi
mov
nop
insl
fstpt
lods
adc
imul
daa
ret
out
jo
js
inc
add
mov
xchg
psubq
inc
lods
xor
mov
in
daa
mov
pop
jle
es
inc
ds
lock
mov
shl
insl
cld
mov
jns
std
lods
jl
push
xchg
adc
out
jo
cmp
fucomip
push
ret
sub
pop
dec
lock
jne
insl
pop
sbb
or
mov
cmp
push
ja
sub
xchg
movsl
push
fwait
mov
inc
xchg
cmp
insl
xor
test
test
aas
cmp
rcrl
cli
andb
mov
dec
xor
lock
call
cmp
inc
in
inc
inc
add
inc
jle
jg
sub
push
orb
add
sti
mov
pop
cmp
mov
adc
into
dec
icebp
sbb
mov
clc
enter
movsb
mov
add
jns
jecxz
cmp
or
test
mov
pop
or
xor
lock
rcll
xor
fdivl
out
dec
push
mov
cmp
sarl
sub
aas
les
sub
push
mov
ss
sub
jg
inc
pop
pop
stos
mov
sub
dec
mov
fnstcw
movsb
jae
jmp
inc
push
repz
ret
mov
xchg
ret
sub
dec
shrb
loop
stos
xchg
jecxz
sub
div
pop
push
mov
mov
cmp
jns
push
and
call
iret
dec
mov
pop
push
cmpsl
inc
std
repz
in
xchg
fldcw
movsb
pop
imul
scas
jbe
mov
aaa
mov
cmpsb
jg
ret
sbb
repnz
test
call
cmp
xchg
push
out
dec
jae
imul
push
add
pop
in
mov
jmp
adc
xchg
imul
inc
ret
ss
fisttpl
icebp
pop
out
int3
or
xlat
sub
fcoms
notb
mov
sbb
into
pushf
inc
dec
repnz
xchg
mov
clc
orl
aas
and
mov
push
in
ds
js,pt
and
add
sahf
movntq
shll
adc
ret
cvtps2pi
arpl
lock
add
fimuls
mov
mov
js
push
jb
ds
lahf
cs
dec
cs
cmp
inc
cmpsl
popa
xchg
dec
xchg
loop
or
js
sub
mov
cmpl
fdivr
dec
mov
es
push
fisttpl
lea
push
push
add
nop
push
jl
nop
out
imul
adcb
mov
push
call
cli
push
nop
inc
dec
lds
pop
push
icebp
movsl
or
or
in
dec
pop
imul
sbb
lret
jb
pop
push
nop
scas
push
pop
mov
mov
shll
or
lahf
cmc
add
xchg
fdecstp
in
ds
inc
mov
fsubrs
cwtl
pop
or
cmp
cld
mov
xchg
dec
lahf
idiv
push
mov
adc
mov
shll
movsl
jmp
cltd
xor
sub
out
les
push
popf
lret
cmp
cmp
jle
or
hlt
movsl
push
repz
push
jge
jl
cmp
and
push
mov
cs
enter
lcall
sbb
in
push
out
jmp
mov
cmp
in
lret
cmp
ja
adc
jg
lahf
sahf
mov
stos
mov
or
mov
data16
or
lahf
and
pop
divl
testb
hlt
cmp
fisubl
lahf
scas
mul
pop
rcl
lea
addr16
xchg
movsb
xchg
dec
or
or
cltd
jle
mov
add
and
lods
outsl
push
push
repz
sbb
push
mov
sahf
ror
jo
cmp
pop
out
mov
in
imulb
adc
fucom
dec
lcall
push
push
js
jo
mov
or
outsl
aam
mov
pop
mov
inc
cwtl
inc
pop
daa
push
rcrl
sti
pusha
jo
orb
imul
or
mov
iret
and
cld
xor
js
cmpsb
mov
popa
adc
cmp
pop
shll
inc
std
or
pop
in
and
out
mov
push
fimull
cwtl
xchg
test
sti
fs
push
leave
into
inc
xorl
lret
or
adc
mov
cmp
mov
or
mov
pop
js
mov
les
and
or
jmp
fidivrs
push
sbb
test
out
mov
jl
lcall
notl
arpl
test
sti
xchg
js
mov
xor
push
jecxz
dec
dec
mov
nop
mov
hlt
pop
popa
cmpsb
out
push
xor
jge
out
or
arpl
cwtl
outsb
dec
ret
lcall
adc
and
je
sbb
pop
stos
mov
jge
insl
dec
add
cwtl
push
lret
in
push
test
jbe
shll
mov
sub
cmpsb
xchg
xchg
sbb
outsb
ds
rorl
xchg
mov
push
or
inc
mov
in
push
sbb
movsb
sub
add
pop
add
mov
jnp
push
jmp
xchg
outsl
insb
pop
jge
sub
ret
push
sub
or
out
cmpsb
cmp
test
add
dec
mov
imul
cmc
fnstsw
cs
mov
add
sub
fwait
cs
les
lds
adc
imul
mov
xchg
pusha
xchg
insb
nop
dec
mov
add
bound
pop
aad
das
mov
out
aam
mov
popl
insb
add
adc
cs
sbb
out
mov
icebp
es
loop
pushl
mov
stos
sbb
scas
lcall
sti
add
scas
cltd
mov
loop
jge
arpl
jecxz
clc
mov
or
sub
cmp
pop
dec
into
inc
cmp
pop
in
push
clc
or
push
sbb
sub
and
stos
mov
add
lea
daa
rcrb
std
jo
jg
mov
inc
adc
and
xchg
xchg
or
pop
cmpsl
sbb
and
pop
popa
or
xchg
jne
pop
pop
subl
sbb
insb
add
sub
cwtl
mov
fst
push
mov
inc
scas
ret
test
sub
stos
movsl
xchg
ss
pop
sar
lret
cld
xlat
scas
lret
aam
push
subl
or
sub
adc
lahf
icebp
lods
mov
and
icebp
in
fistpl
push
sub
lcall
std
in
xor
sub
cmp
js
sub
jne
and
popf
mov
push
insl
jb
sarb
insb
jl
fisttpl
pop
ja
negl
pop
scas
jno
jle
std
in
push
sbb
lret
inc
out
jno
jne
add
imul
or
jmp
shrl
dec
inc
jb
mov
into
mov
push
jmp
and
fimull
cmp
lahf
adcl
mov
inc
or
push
xor
sbb
xchg
into
xor
aad
push
add
aas
stc
in
fdivrs
cmp
and
ret
lahf
mov
jnp
or
outsl
inc
imul
fbstp
cli
test
jne
push
mov
pop
adc
xor
xchg
cld
inc
mov
imul
loope
mov
mov
sub
clc
mov
jnp
mov
or
shrb
xchg
out
push
in
pusha
je
loope
clc
jnp
cld
sti
mov
mov
je
jbe
sub
rorb
pusha
mov
fcoml
mov
push
cmpsb
insl
aam
xchg
xchg
bound
sbb
dec
cmp
imul
call
lret
arpl
test
push
mov
mov
mov
bound
aam
repz
pop
xor
or
repz
popa
adc
insb
push
xor
or
repnz
repz
dec
fs
push
int3
push
pop
ret
das
lret
and
dec
jle
jb
popf
jle
cmp
mov
es
adc
faddp
dec
pop
clc
imul
hlt
mov
xor
xor
pop
fwait
mov
fildll
jmp
outsb
dec
mul
insb
bound
mov
push
adc
inc
icebp
scas
stc
or
mov
xor
inc
test
mov
jle
or
loop
nop
push
fs
and
sti
push
mov
fbld
daa
add
out
repz
aad
test
pop
xchg
push
pop
push
faddl
push
add
mov
stos
adc
push
jno
sub
loope
popf
fcmove
in
js
inc
mov
xchg
shrb
add
daa
and
insb
fwait
iret
sbb
repnz
mov
mov
jmp
pop
jno
in
popf
jae
mov
pushf
loopne
imul
xchg
mov
out
cmpsl
jle
jne
cmc
add
xor
xchg
pop
or
cmpb
or
pusha
push
adc
fs
lret
insb
stos
dec
nop
insb
jnp
daa
xor
std
insl
push
fwait
insl
or
adc
mov
ret
mov
pop
ret
xor
and
test
mov
dec
sub
sbb
push
push
mov
xlat
loopne
xor
pusha
inc
and
mov
jl
clc
insl
push
dec
xchg
add
pop
aam
xchg
out
std
inc
and
add
xlat
cmp
cmp
out
sarb
sub
aad
lret
lret
inc
adc
jae
pop
fmul
cmp
nop
int
cwtl
and
testb
pop
jno
daa
mov
leave
stc
inc
xor
stos
cmpsl
xor
xor
and
push
pusha
push
shrl
jge
push
gs
and
jl
xchg
arpl
fdivs
scas
pusha
shr
loope
cmp
popa
int
cmp
mov
pop
inc
add
stos
loope
sbb
pushf
mov
jl
loope
push
jl
sti
mov
das
push
daa
sbb
lock
mov
jne
imul
aaa
icebp
or
add
xchg
jb
out
mov
sarl
fisubl
mov
or
jbe
push
lock
jne,pt
push
lea
jle
push
mov
xor
mov
xchg
decb
into
add
jg
jne
add
mov
popf
das
filds
lea
and
mov
cmp
mov
pop
push
cli
jns
push
popf
adc
out
mov
sub
jnp
inc
add
dec
into
xchg
shrl
sbb
fidivrs
jnp
rol
push
adc
shl
enter
cmpsl
mov
sub
test
sbb
jge
clc
push
test
enter
add
sub
lret
cmp
pop
test
sbb
cmp
fsubs
subl
inc
ds
ret
hlt
clc
stos
imul
xchg
dec
mulb
inc
js
lret
inc
imul
jecxz
xor
mov
mov
jmp
fwait
aam
repnz
push
pop
sbb
and
js
jno
add
xchg
sub
aas
aas
insl
jl
mov
fimull
push
xchg
xor
sub
lcall
add
cmc
pop
sub
sub
and
inc
fcoml
inc
xchg
dec
push
fcoml
shrb
pop
imul
mulb
aaa
mov
stc
dec
xor
repnz
push
repz
scas
bound
inc
jle
je
mov
nop
pusha
jmp
into
jns
lds
lahf
xor
data16
cmp
popf
xchg
pop
insl
aam
adc
pmulhw
fidivs
in
in
push
or
or
adc
adc
es
add
std
push
andb
jae
inc
test
clc
addr16
das
cld
sub
lret
repnz
sub
mov
dec
in
clc
iret
sub
inc
std
rorl
push
lret
cs
movsb
add
ljmp
lods
inc
push
sub
pop
decb
pop
sti
test
inc
shlb
mov
outsb
adc
dec
sarl
aam
mov
pop
lahf
sub
in
ds
xchg
xor
pop
mov
ret
out
scas
xor
or
cltd
jns
xchg
mov
bound
jb
daa
inc
adc
push
and
fsubs
popa
add
std
sarl
pop
in
popf
int
aam
push
push
dec
cmpsb
sahf
mov
sarl
test
adc
xchg
cmp
jl
pop
cltd
jae
xor
dec
fildll
gs
scas
mov
xor
pusha
daa
mov
in
cltd
das
sub
or
mov
data16
fincstp
rcl
es
std
jmp
sub
out
iret
cmp
and
pop
test
xchg
js
int3
sbb
rcrb
sub
insl
adc
test
sbb
roll
gs
push
or
mov
hlt
imul
mov
es
mov
inc
sub
jns
lock
mov
rep
mov
push
or
lods
jo
mov
mov
loopne
shr
mov
xorb
test
fdivs
mov
adc
add
inc
outsl
clc
push
mov
mov
ds
bound
bound
out
pop
repnz
outsl
jecxz
sub
add
fists
xchg
mov
mov
mov
adcl
mov
in
loop
or
out
lcall
enter
gs
and
adc
push
insb
int
mov
mov
cmc
ss
sub
xchg
repnz
sub
jp
sub
loope
outsl
or
sbb
dec
hlt
fwait
orb
daa
dec
mov
push
outsl
dec
popf
jo
jno
loopne
jp
ret
xchg
cmp
lret
or
les
mov
mulb
rolb
addr16
nop
adcl
pop
stos
sbb
sbb
push
lock
add
mov
jb
push
cld
insb
lcall
cmp
int3
mov
js
add
mov
xor
jle
or
or
dec
mov
ss
fwait
and
sbb
mov
cmc
push
jmp
repnz
add
fmull
repnz
and
pop
rorb
mov
xlat
jl
imul
and
jmp
inc
ds
icebp
cmp
cld
mov
jne
mov
push
add
insl
or
dec
or
fucomi
push
cltd
stos
arpl
in
adc
leave
cli
push
inc
jecxz
es
dec
inc
mov
xchg
mov
sub
jne
mov
sbb
mov
ret
sub
sub
sub
in
clc
leave
mov
xchg
cmpsl
sub
mov
call
xor
addb
shl
xor
or
iret
mov
rolb
movsl
aaa
bound
and
lods
jb
orl
loope
stc
je
je
aas
mul
mov
std
in
cltd
loope
jl
inc
loopne
sarl
add
test
mov
test
popf
push
aaa
add
jb
add
loope
or
and
cmp
loop
sub
lods
int3
xchg
out
or
or
daa
dec
mov
nop
mov
insl
in
mov
xchg
and
bound
cli
or
mov
cld
roll
fsts
pusha
rcll
arpl
add
cld
lods
xor
push
sbb
pop
sub
and
stos
push
push
mov
fcomp
jo,pt
inc
out
fidivrs
mov
jp
cwtl
xchg
pop
and
pop
inc
xlat
mov
cmp
add
fs
push
push
fwait
ss
addl
or
movsb
icebp
icebp
in
shl
jne
test
xor
fs
cltd
call
push
sbb
lret
jno
mov
daa
jnp
cmpsl
xchg
jg
xchg
add
outsl
jnp
rcrb
lret
ss
mov
or
out
pop
pop
and
pusha
pushl
push
push
xchg
jns
jb
mov
add
imul
xchg
hlt
hlt
pop
mov
jns
leave
adc
push
jne,pn
lret
fdivl
popf
in
and
arpl
ret
lret
imul
popa
hlt
jo
ss
repnz
in
inc
pop
xor
out
push
push
add
shlb
icebp
sbb
sar
lds
movsb
jnp
jbe
add
repz
or
adc
push
xchg
and
sub
or
jg
mov
mov
mov
lock
sbb
dec
stos
adc
push
mov
scas
cs
xlat
lods
sbb
lcall
jle
cmp
incl
js
adc
mov
add
xchg
mov
push
xlat
sbb
adc
and
jmp
and
lcall
mov
mov
mov
adc
and
dec
cwtl
mov
push
dec
not
mov
in
aam
scas
test
or
jmp
xchg
cmp
in
call
jo
popa
cld
push
mov
cwtl
lcall
cmp
lret
push
shl
push
dec
int3
or
mov
pop
adc
mov
sbb
je
push
iret
inc
mov
daa
out
fcoml
mov
add
popa
and
ja
shlb
adc
dec
and
xchg
popa
cwtl
out
std
push
in
xchg
jp
sub
pop
push
fcompl
add
cltd
fidivl
mov
sub
add
push
mov
sub
lahf
fxch
js
xchg
popf
test
mov
cmpsl
movsl
dec
insb
add
rcrb
inc
lods
stc
push
add
xlat
adc
xor
push
js
pop
or
inc
sbb
lods
test
int3
shll
fcoms
pusha
mov
out
mov
dec
and
lods
add
xor
push
pop
jecxz
or
gs
sahf
push
mov
outsb
and
xchg
imul
pop
push
aad
mov
aad
mov
jae
scas
inc
dec
bound
jl
xor
lret
notl
imul
and
jg
dec
roll
js
insb
dec
mov
mov
cmc
rorb
xchg
sbb
fwait
scas
cwtl
imull
ja
add
call
xchg
cmpsl
xor
out
push
inc
adc
pop
cwtl
mov
jecxz
sbb
xchg
inc
lea
cmc
xor
cmp
stos
pop
cmp
mov
mov
fadds
aaa
pushf
sbb
or
pop
dec
movsl
lods
xor
pop
icebp
jae
pop
sbb
lret
negb
jb
div
cmpsb
inc
in
push
sub
or
dec
jnp
pop
popa
pusha
dec
cmc
mov
imul
sub
pop
aad
fdivs
xor
inc
inc
in
leave
jmp
lds
inc
pop
fcomps
dec
sub
mov
js
movsl
test
ret
scas
lret
in
mul
popa
adcl
push
out
sub
cmpsb
fsin
add
ret
in
or
out
add
and
mov
inc
addb
cli
daa
inc
inc
daa
pop
popa
scas
cld
insb
lods
mov
sbb
add
call
enter
into
arpl
inc
out
xchg
fisubrs
pop
cltd
insb
lods
pusha
scas
cmpsb
and
sbb
lret
xchg
mov
sub
jb
adc
lret
jg
addr16
inc
movb
jmp
lahf
pop
pusha
sbb
mov
pop
jae
lret
out
xchg
add
jp
pushf
inc
fdivr
sub
inc
dec
dec
insl
fildll
xlat
push
in
stos
fidivrl
popf
iret
call
mov
pop
shlb
adcb
testb
out
out
int
add
inc
cli
outsb
adc
xchg
pop
je
add
cmpsl
cmp
add
ds
aas
imul
cltd
ret
arpl
inc
lret
and
inc
pop
aas
jb
sarl
sub
outsl
jns
xor
sub
sub
stc
lods
fcompl
sbb
scas
xchg
xorl
push
shll
pop
repnz
adc
lds
mov
decl
mov
xchg
mov
lcall
mov
adc
cwtl
push
fdivs
push
rorb
sbb
or
es
cmp
pusha
enter
pusha
jge
lods
push
add
ret
mov
lea
push
xchg
xor
jge
push
jmp
aad
sti
and
popw
into
mov
int
sbb
fcoms
hlt
movsb
cli
mull
stc
imul
mov
inc
loope
pop
fnstenv
int
or
add
ret
mov
xor
xchg
std
mov
rcl
leave
mov
test
or
push
xor
aam
push
test
inc
mov
and
rcl
hlt
inc
push
lods
js
mov
mov
int
cmp
out
dec
shr
jo
sub
popa
aad
sub
repnz
loopne
add
movsl
inc
or
idivb
add
dec
cltd
push
fs
push
cmc
js
in
dec
adc
nop
in
and
adc
sub
dec
dec
dec
xchg
sub
sbb
inc
stos
popf
add
inc
cmp
mov
leave
jnp
jo
nopl
dec
cmpsb
dec
pop
inc
jb
xor
and
popa
shrl
xor
loopne
dec
mov
mov
test
lods
jmp
lret
xchg
push
jle
add
sub
mov
out
jnp
stos
addl
inc
xchg
fmull
mov
add
mov
call
dec
xchg
arpl
sti
cmp
push
ja
push
mov
sbb
cmp
or
and
data16
insl
fwait
pop
out
xchg
and
lods
and
dec
rcrb
iret
sub
lahf
adc
cltd
in
bound
jmp
ss
sub
test
mov
cli
lods
lods
cmp
lcall
subb
outsl
scas
add
pop
in
jno
cmp
and
or
ja
pop
push
adc
sub
mov
jg
icebp
push
out
jmp
inc
stos
popf
jmp
sub
xchg
fdivs
sbb
cmp
xor
xchg
pop
xor
int3
mov
mov
loopne
nop
inc
sub
cmp
xor
sbb
cmp
pop
bound
pop
cmp
sub
popf
lds
js
aas
or
jno
in
shrb
adc
add
in
push
out
pop
ja
roll
pop
ja
hlt
push
pusha
adc
stos
in
cltd
cmp
dec
shll
mov
add
cmp
push
icebp
cmp
lods
insb
out
jae
lock
rcrb
ljmp
adc
add
jno
mulb
mov
mov
mov
sbb
mov
xlat
push
dec
and
out
les
inc
xor
aad
movsl
insl
rcrb
scas
loop
mov
subl
inc
sbb
imul
dec
push
inc
jae
xchg
add
jne
pop
stc
inc
or
adc
mov
hlt
inc
adc
cmpsl
jmp
dec
push
add
mov
dec
mov
add
fdivs
mov
jp
cmp
dec
jmp
loop
dec
or
and
rcr
data16
inc
loopne
adc
out
mov
fs
in
mov
lahf
xchg
in
add
dec
inc
xchg
cwtl
dec
mov
dec
sbb
pop
scas
jmp
adc
stc
cmp
out
enter
test
mov
lock
jno
cmp
ss
dec
sbb
pop
das
clc
xchg
xchg
sub
cmpb
aaa
push
das
aas
in
mov
xlat
pmuludq
shll
adc
sub
push
dec
or
arpl
aad
jnp
hlt
ljmp
je
and
in
xchg
sarb
cmp
sub
xchg
out
lock
add
adc
jne
repnz
and
jl
rorb
sbb
es
repz
mov
and
fdivl
adc
nop
pushf
xchg
cwtl
or
lds
adc
das
sbb
enter
and
dec
push
cmp
nop
jle
cwtl
sbb
pop
push
in
xchg
xor
ja
jmp
jecxz
mov
lods
dec
mov
rolb
in
jnp
jmp
lret
jb
jnp
or
add
mov
mov
shl
ftst
repnz
mov
push
mov
aas
sbb
or
loope
mov
shrb
es
iret
sti
fcomps
in
gs
push
cmp
mov
mov
out
fsts
or
add
gs
push
stos
add
cwtl
push
daa
hlt
fsubrs
imul
cmp
outsb
in
dec
outsb
sbb
arpl
fstpl
jle
sub
insl
repz
jmp
arpl
inc
dec
imul
sub
jmp
loopne
adc
cmp
ljmp
cmp
addl
int3
mov
sub
sub
inc
cmp
jae
dec
xchg
stos
aaa
cmpsl
mov
xchg
ljmp
mov
pop
pop
jge
mov
mov
fistl
pop
jb
inc
mull
mov
addr16
popa
ret
dec
dec
cld
sarb
cmp
inc
lods
dec
repz
mov
mov
sbb
and
dec
push
pop
adc
mov
or
jl
outsl
leave
cmp
adc
leave
imul
cltd
pop
js
cmp
sub
pop
shll
cld
xchg
pop
jmp
mov
rclb
fisttpll
pusha
mov
in
mov
testl
insl
aam
popf
into
mov
rolb
xchg
add
lods
add
mov
and
cltd
aaa
cmc
adc
mov
mov
pop
pushf
cmp
outsl
adc
pop
inc
pop
mov
insb
pop
mov
jle
dec
shll
dec
sarb
test
dec
sub
ljmp
mov
mov
inc
jmp
fsubrl
push
jecxz
imul
cmp
inc
sbb
inc
hlt
sbb
push
addr16
push
push
pop
pop
cmpsb
sbb
test
cmp
sub
mov
bound
ret
aam
sub
fdivs
cmp
clc
push
push
jmp
leave
mov
call
dec
in
sbb
xor
cmp
push
sub
mov
sub
shl
enter
sbb
pop
mov
xchg
xor
jne
xlat
movsb
out
push
sti
and
ss
jp
scas
or
push
or
test
add
xor
xor
gs
xor
aam
ds
jns
cmpl
lret
test
aam
cmpsb
sub
fisttpll
add
fcmovu
pop
pop
mov
ss
sbb
lret
sahf
xchg
xchg
inc
outsb
cmp
add
fisubs
cmc
xor
mov
into
fimuls
or
aas
mov
jg
mov
adc
add
xchg
movsl
aas
or
jnp
sbb
lods
adc
adc
cmc
xor
testb
pop
sbb
mov
inc
dec
adc
pop
pushf
das
cltd
mov
mov
jb
or
push
jae
mov
mov
mov
xchg
fisttps
dec
cmpsl
rclb
rcrl
cmc
add
outsb
and
das
mov
or
lock
imul
push
sub
adc
push
sbb
xchg
or
push
pop
lret
push
inc
pop
mov
or
and
cmp
adc
in
andl
sbb
fdivrl
add
adcb
lods
aad
call
stos
movsl
push
jmp
add
sub
ss
push
add
int3
jl
mull
inc
mov
sub
pop
fmull
andb
mov
sbb
shrl
out
sbb
sti
or
inc
mov
bnd
arpl
pop
mov
add
sahf
js
push
ret
in
and
repz
adc
ja
add
loopne
or
fmull
mov
jns
imul
test
push
push
cli
dec
push
mov
mov
mov
xor
pushf
adc
cltd
pop
add
mov
fstps
loopne
mov
sbb
jns
pushl
jne
out
pop
add
mov
jle
pushf
aaa
out
xchg
adc
add
stos
lock
jno
stos
lret
in
jo
mov
dec
xor
repnz
jp
iret
fcmovne
jl
jg
mov
or
push
push
into
sub
insb
xchg
jmp
push
mov
cwtl
icebp
nop
push
cmpsb
push
sub
mov
fwait
movl
lods
mov
popa
jnp
shrl
es
mov
mov
inc
mov
jnp
cli
or
sahf
mov
lret
rcl
ret
or
outsl
dec
andb
rcrl
mov
out
sub
cs
dec
arpl
lret
mov
call
mov
mov
aad
mov
xchg
xchg
push
mov
clc
adc
punpckhdq
cmpsb
mov
ss
mov
xchg
push
sub
decb
cmp
xchg
xchg
xchg
and
shl
out
pop
sub
ljmp
aam
jb
mov
test
and
jge
ja
pop
mov
outsl
add
iret
rcrb
adc
xor
loop
pop
pop
movsl
cli
iret
sub
loope
addb
xor
test
mov
mov
cmpsb
daa
and
jl
cli
pop
cmp
mov
or
inc
xchg
and
xchg
jae
test
or
xchg
popa
loop
inc
mov
int
inc
inc
cmp
push
jg
fmuls
or
adc
inc
adc
cwtl
xor
fldenv
fwait
pusha
inc
dec
jge
imul
nop
pop
das
jle
out
jge
pop
nop
rcrl
cmp
cmp
jo
insb
xchg
ljmp
pusha
mov
xor
out
int3
inc
sub
fs
or
and
inc
jnp
je
mov
gs
push
iret
lds
and
ret
adc
cmp
test
or
loope
movsb
push
ja
rol
sbb
jmp
mov
jp
jno
sub
mov
jg
mov
stc
loope
adcb
ljmp
pushf
repz
insb
adc
cmp
xchg
xlat
mov
lea
fs
ret
and
cli
sbb
lea
jns
inc
add
repz
into
xorb
sarb
inc
std
icebp
jno
ret
pop
enter
xor
movsl
jp
repnz
fwait
adc
lds
fstpt
mov
lds
adc
bound
push
insb
sub
adc
mov
aad
push
or
fnstcw
int3
lock
insl
hlt
insb
shlb
add
aad
push
and
xchg
dec
adc
outsb
xor
int3
outsl
addb
shll
mov
stos
ret
pop
add
mov
inc
push
or
inc
repnz
in
mov
mov
cmp
mov
xchg
mov
les
lahf
push
cmpsb
cmpsb
lahf
adc
in
sub
jne
dec
test
push
dec
mov
pop
imul
or
test
out
jne
xlat
loope
pop
lahf
lret
leave
inc
lods
mov
jne
inc
dec
outsl
mov
pop
imul
or
push
test
mov
ljmp
jp
sahf
jmp
aam
jnp,pt
shr
push
inc
rclb
ret
pushf
daa
popa
jb
jns
push
jno
sbb
lock
js
or
ljmp
sbb
addr16
lea
and
mov
stos
stos
dec
dec
enter
movsl
pusha
jns
ficomps
ja
mov
dec
jnp
xor
scas
dec
je
inc
clc
or
jecxz
test
cld
dec
test
add
repnz
inc
iret
faddl
ret
sbb
pop
pop
mov
lds
inc
pop
jbe
inc
sub
inc
pop
fldt
jmp
ret
sub
add
shll
dec
cmpsb
enter
dec
dec
pop
dec
fisttpl
pusha
push
out
pop
rorl
mov
rolb
stos
push
test
aas
pop
xchg
xchg
mov
cmp
xor
lahf
stc
push
dec
fnstenv
shl
repnz
movsl
sbb
sub
fiadds
mov
out
outsl
mov
out
popf
lcall
pop
fwait
mov
int
inc
gs
push
ja
ret
shl
stc
pop
iret
xchg
clc
mov
insb
mov
lret
sarb
jl
ljmp
scas
pop
mov
lahf
mov
mov
in
inc
dec
rcll
inc
std
aas
mov
andb
je
es
mov
push
pop
xchg
adc
mov
sahf
adc
sub
and
bound
sti
sub
sbbl
mov
mov
add
sbb
nop
mov
sti
enter
lock
push
nop
stos
push
mov
mov
pop
push
popa
push
pop
imul
mov
jle
xlat
cmp
and
pop
dec
call
mov
pop
pop
jmp
sahf
push
push
icebp
dec
mov
pop
jg
dec
mov
jb
shlb
mov
test
lods
mov
rcr
push
push
jl
mov
fs
fmull
mov
insb
in
add
pop
pop
mov
insl
add
stc
push
and
jmp
add
jmp
sub
mov
imul
sub
or
cmpsb
cwtl
inc
push
cs
call
rcrl
pop
mov
pop
cwtl
sub
xchg
push
aas
adc
imul
push
and
xchg
lds
push
and
popf
mov
xor
cld
pushf
imul
popa
push
cmp
jle
pop
fdivrs
cmp
xchg
out
pop
xor
cmp
sub
lret
and
mov
movsl
sub
stc
xor
pop
xchg
imul
xor
mov
jb
mov
ja
sub
cmpsl
push
ja
push
or
jle
into
sbb
fsub
outsb
bound
add
ss
jle
mov
or
sub
add
pushl
add
sub
pop
xchg
sub
xor
dec
adc
mov
pop
mov
daa
dec
sub
add
daa
outsb
outsl
scas
lods
push
inc
es
xchg
jb
ja
cmp
cmp
hlt
sub
sub
push
pop
insl
jns
js
mov
pushf
sub
cmc
mov
aad
fcmovbe
add
cmp
out
mov
out
push
cmp
mov
add
aas
xor
jp
fimuls
stc
rcrb
pop
clc
sub
cmp
jle
cmp
pop
movsl
dec
nop
fstpt
sahf
or
lea
insl
repnz
pop
ljmp
daa
adcb
cmp
pop
pop
aam
inc
sbb
jb
jge
std
fucomip
mov
iret
aaa
jle
or
pop
push
es
stos
lahf
mov
aam
xchg
lds
outsb
call
andb
rclb
call
lcall
fs
push
sarb
cmp
leave
xchg
cmp
or
xor
or
mov
xchg
xor
fimuls
jno
pop
pop
cs
clc
cli
cmp
sbbb
pop
jle
xor
int
sub
into
add
cmp
ljmp
pop
lods
loop
stos
das
bound
push
mov
inc
adc
mov
push
enter
jg
cmp
addr16
dec
mov
and
push
in
aad
movsb
aas
push
mov
xchg
push
rcrl
sub
pop
mov
mov
data16
aas
lods
dec
dec
jmp
push
cmp
sbb
jne
pop
movsb
loope
test
pop
xlat
mov
and
jb
push
jecxz
scas
mov
out
jp
or
daa
shlb
shl
and
ja
jle
or
xchg
xchg
jne
ret
mov
xchg
into
rcl
popl
adc
inc
repnz
lods
rclb
push
lahf
rorl
cmp
sti
sarl
data16
frstor
push
add
aad
mov
lret
es
and
sub
popf
xchg
pusha
into
sarb
push
loop
test
test
fistpll
mov
movsl
xchg
dec
movsb
out
cmpsl
pushl
xorl
add
lcall
daa
insl
or
imul
in
movsl
stos
xchg
fwait
jne
addr16
rorb
out
fimull
in
rolb
int
xlat
sub
aad
fists
out
sahf
loope
lahf
shll
scas
orl
nop
ds
bound
dec
shlb
mov
lods
popa
jg
in
jg
xchg
sbb
inc
out
movsb
and
test
ljmp
xlat
push
bound
mov
test
xchg
scas
inc
inc
sahf
aaa
in
mov
cmpl
lods
inc
mov
lcall
imul
mov
test
adc
clc
iret
dec
xlat
mov
test
sub
fidivrs
lahf
add
test
push
mov
scas
lds
int3
xor
inc
aad
jmp
push
stos
inc
dec
dec
mov
sub
push
cmc
mov
mov
xchg
xacquire
lods
add
xchg
sub
in
mov
xchg
or
je
pushl
cmpsb
adc
das
sahf
loope
add
sub
fldt
push
decb
adc
pop
lcall
iret
test
fnstsw
push
push
mov
mov
imul
bound
dec
mov
push
or
mov
hlt
ss
add
ljmp
mov
jp
or
cmp
or
lcall
clc
cmp
mov
mov
inc
imulb
push
ja
push
jnp
sub
cld
inc
dec
xor
adc
dec
leave
push
aas
or
mov
je
push
cmp
lock
fisubrs
pop
adc
dec
ja
xchg
les
sti
fnstsw
lcall
pop
or
jg
in
lret
add
loopne
push
xor
mov
inc
sub
out
push
mov
imul
mov
add
scas
xor
out
data16
xchg
xor
mov
xor
mov
lahf
jg
sub
sbb
dec
lret
aam
push
cmp
push
movl
shlb
js
or
call
mov
mov
push
das
mov
popf
icebp
or
lods
adc
sub
lods
stos
mov
adcb
sbb
cmp
dec
andb
sub
inc
test
sbb
fldl
push
add
xchg
jo
shl
jnp
add
or
ffreep
in
enter
dec
sbb
popa
orb
and
push
mov
scas
je
and
loope
adc
insb
mov
mov
xchg
imul
and
jge
ds
xor
xlat
pop
mov
cmpsb
adc
and
dec
sub
mov
xchg
imulb
cmp
lret
push
hlt
outsb
ret
std
adc
pushf
mov
sahf
lcall
sbb
icebp
bound
idivl
arpl
clc
inc
out
and
dec
jo
mov
addr16
xor
and
leave
cmc
push
sti
mov
pop
addr16
sub
ljmp
negb
lret
pushf
cwtl
inc
pop
sti
mov
sbbb
cltd
pop
ret
jge
fiadds
adc
push
cmp
jne
mov
clc
out
cld
stc
into
sub
lcall
inc
sbb
xchg
push
aam
adc
mov
fnsave
jmp
xchg
xchg
popf
xor
sarb
cld
sub
jle
mulb
int
daa
xor
sub
pop
aas
cmp
outsl
push
mov
dec
mov
xorb
enter
ja
pop
aaa
mov
test
test
movsb
cmp
into
clc
stos
xor
sahf
mov
mov
aam
jp
insl
fs
xor
fcmovnbe
mov
pop
or
and
aaa
cmp
adc
xchg
xchg
adc
aaa
hlt
or
lds
bound
fabs
in
test
add
xlat
lods
sbb
in
jp
add
jl
ljmp
inc
dec
mov
movsl
and
mov
enter
cs
mov
pop
adc
sbb
adc
imul
xor
cltd
inc
fs
notb
adc
mov
test
fidivrl
push
shlb
or
sbb
or
fdiv
push
cltd
icebp
pop
cmp
jno
ss
sbb
sub
pop
js
xchg
mov
sub
movsb
imul
loop
xchg
test
js
sarb
pop
sub
lds
push
rorb
lods
pop
pop
bound
mov
inc
jge
insl
in
mov
mov
arpl
test
in
and
test
in
pusha
dec
sub
mov
repnz
sbb
add
xor
inc
mov
shrb
mov
fimuls
call
push
push
jo
fnstcw
pop
xchg
int
jbe
push
mov
mov
mov
in
cli
sub
xor
adc
outsl
hlt
negl
aam
sbb
or
xchg
loope
ja
pop
fcompl
or
or
xchg
aaa
out
lret
xchg
ja
mov
out
rcrl
mov
movsl
push
ljmp
jmp
inc
cld
fs
jbe
push
cmp
cli
sbb
adc
sbb
push
insl
test
movsb
mov
dec
xor
dec
xor
aaa
mov
and
jle
out
test
enter
into
xlat
in
iret
hlt
pop
mov
mov
mov
imul
add
jnp
mov
fucomip
push
mov
repz
sahf
inc
repz
scas
or
enter
out
shlb
repz
jg
test
push
loop
dec
iret
aas
or
pusha
sbb
mov
dec
inc
js
iret
aaa
cmp
movsl
adc
push
std
xor
cmp
bound
sbb
add
aad
cmp
pop
loope
push
push
lods
fst
inc
pushf
push
loope
mov
or
lds
outsb
negb
jmp
dec
outsl
scas
jecxz
notb
push
push
jge
scas
xor
push
adc
add
push
mov
mov
push
push
scas
adc
out
sub
mov
insb
lcall
jo
mov
in
sbb
inc
and
negb
sahf
and
push
in
sbb
push
add
pop
test
scas
add
data16
outsb
or
fdivs
je
out
fsubs
lds
lods
mov
jno
call
push
stc
adc
inc
jne
cmpsl
mov
ja
xor
movl
popa
pop
stc
mov
or
xchg
pop
gs
mov
pushf
inc
inc
cmc
or
jp
and
cmp
cmc
fcom
cwtl
mov
push
adc
scas
fwait
adc
outsb
cs
jne
jnp
adc
add
mov
dec
lret
test
dec
xor
ror
push
inc
push
outsl
add
leave
add
shlb
lods
mov
nop
xchg
pusha
mov
clts
sahf
sub
shlb
lret
dec
test
mov
push
jb
iret
sbb
test
pop
pop
sub
add
jno
arpl
les
inc
cmpsb
sbb
dec
adc
jp
ds
into
sahf
cltd
imul
rorl
inc
dec
mov
jbe
call
dec
daa
lds
add
ljmp
fstl
shll
fwait
inc
xchg
lcall
push
fs
pop
aaa
sub
insl
pop
loopne
xchg
addl
mov
dec
lret
shrb
je
pop
jo
mov
inc
or
pop
outsb
pop
jp
addr16
inc
gs
cli
pop
pop
pop
or
ljmp
push
adc
cwtl
cmp
test
fnclex
cli
in
lods
xchg
orl
ss
xchg
or
adc
ret
mov
sbb
cmpb
lods
push
sub
pmaxub
test
sub
add
rcr
in
in
addl
aaa
sub
pop
push
xor
mov
in
sti
into
es
add
add
js
pop
and
inc
int
xor
cmp
jmp
xchg
mov
mov
faddl
loopne
dec
hlt
insb
out
cld
ss
sbb
inc
add
fwait
sub
mov
shlb
mov
xchg
stos
add
mov
add
cmc
lcall
subl
jb
xor
inc
shll
repz
xchg
fstps
dec
in
push
or
les
mov
cmp
jne
pop
push
push
rcrb
out
test
mov
aam
add
mov
dec
sub
pop
xor
xchg
in
jge
repnz
or
loop
jge
mov
push
hlt
insl
clc
dec
cwtl
mov
pop
and
mov
mov
jae
xlat
or
push
mov
mov
mov
inc
pop
lcall
mov
ret
test
push
int
or
lahf
js
jl
icebp
lcall
out
mov
sbb
loop
inc
sbb
lods
add
pop
mov
fcoml
mov
sbb
push
mov
sbb
imulb
out
adc
dec
test
pop
int3
add
decl
pop
in
repz
adc
xchg
mov
ljmp
pop
and
jno
popf
pop
xchg
pop
mov
xor
test
sbb
lods
out
adc
cs
test
adc
ljmp
or
mov
pop
xchg
sbb
inc
es
pop
fcom
mov
xor
mov
fsubl
loope
mov
pop
ja
and
sub
jo
mov
mov
pop
cmp
dec
lods
cmp
nop
mov
test
lods
cmpsl
mov
add
sbb
outsl
mov
fcoml
sbb
movsb
fmulp
mov
mov
rcrb
sbb
mov
cmpsl
cmp
sahf
pop
adc
rclb
stos
es
adc
dec
pop
dec
repz
pusha
out
mov
mov
fwait
out
push
mov
clc
popf
ret
cmc
scas
adc
imul
inc
int3
in
in
pop
xor
jmp
clc
mov
in
mov
lret
pop
push
daa
xchg
fxch
fidivrl
jecxz
repz
test
and
lret
cmp
xor
test
lods
inc
jp
loop
sub
test
aas
aam
sbb
jo
xor
or
and
movsl
iret
sub
or
cmp
xchg
in
mov
cmp
movsb
and
in
mov
into
dec
cmc
rclb
cmpsl
sarl
hlt
insl
loope
js
mov
cs
pop
cmp
dec
cmpl
cmp
test
je
adc
mov
das
dec
ss
pop
inc
in
nop
jnp
jge
mov
repz
cmc
and
mov
jns
sbb
fisubl
lods
cltd
jp
lea
ror
mov
popf
jecxz
mov
xor
aas
jns
jo
ret
mov
dec
cmp
jecxz
or
jp
imul
jmp
sbb
sbb
xorl
inc
adc
stc
fadd
inc
fbstp
jle
call
and
pop
cmpb
addr16
cmp
movsl
pop
xchg
inc
cmpsl
xchg
push
jb
xlat
push
pop
lea
inc
les
lods
cmpsl
xor
mov
popaw
lret
mov
push
js
sub
mov
mov
xlat
mov
fmuls
sbb
cs
in
aas
jg
mov
mov
push
shll
pop
jecxz
into
pop
xchg
push
lea
loop
push
outsb
aas
dec
movsl
push
inc
aad
rcl
in
cmpsl
adc
adc
pop
rclb
addr16
push
sbbl
mov
push
pop
lcall
and
dec
clc
test
pop
test
adc
adc
pusha
mov
clc
xor
popf
cli
add
lcall
mov
jmp
mov
out
psllw
pusha
lret
mov
xor
divl
dec
clc
push
inc
sub
aam
lcall
inc
in
stc
inc
jno
cmp
es
pand
jo
arpl
leave
push
loopne
adc
mov
jns
xor
cmc
push
pop
popf
push
stc
jp
fcompl
add
decl
dec
mov
sub
cmp
xor
and
orl
out
in
test
aam
xchg
notl
pushl
xor
jp
ja
xchg
out
add
push
test
jmp
cld
push
incb
adc
push
scas
aam
fisubrl
add
mov
jge
sbb
lods
xor
push
mov
cli
out
fists
mov
mov
pop
pop
xor
outsl
inc
and
stos
ljmp
and
push
in
xchg
rcrl
popa
push
adc
and
cli
sbb
or
test
outsl
loopne
mov
mov
imul
ret
jle
cmp
xchg
push
in
jno
lods
cmc
mov
in
hlt
repnz
stos
int
push
mov
mov
rcr
xchg
pop
inc
lds
mov
sbb
sbb
or
out
push
ja
movl
and
pop
popf
lret
push
sbb
pusha
repnz
sbb
push
and
add
bound
jmp
mov
repz
xchg
xlat
mov
stc
lds
call
dec
mov
imul
pop
sbb
repz
in
pushf
loop
push
lods
inc
and
movsb
xchg
sub
pop
cmp
cmp
or
xchg
es
out
jl
mov
sti
loopne
out
loopne
arpl
mov
std
aaa
outsl
jae
nop
int3
out
testl
push
cmp
lock
bound
jns
or
add
mov
or
xchg
and
add
cld
push
nop
repz
dec
out
fists
fwait
loope
lea
movsb
iret
jns
sub
mov
jns
and
sbb
sub
jge
xchg
mov
mov
fs
daa
mov
bound
test
mov
lds
mov
cmc
mov
jb
mov
mov
loop
pusha
nop
negl
push
or
jae
data16
in
mov
inc
jns
mov
xor
push
add
loop
or
or
cmp
leave
ljmp
push
push
scas
test
inc
sub
sti
ret
inc
arpl
dec
mov
iret
xchg
lds
add
iret
or
pop
jb
push
xchg
sbb
in
movsb
cs
cmp
push
sub
imul
lahf
movsl
add
mov
mov
inc
dec
idiv
mov
test
test
xchg
or
fisubl
pop
inc
dec
pop
push
cwtl
mov
call
test
xor
mov
fdivs
xor
fstps
mov
adc
add
push
aad
dec
sub
mov
fwait
incl
sbb
pop
mov
dec
push
insb
aad
pop
test
jp
cld
ds
fistl
addr16
dec
ljmp
enter
lret
cmp
adc
mov
jge
aas
xchg
shrl
inc
push
dec
push
pop
jnp
lea
rolb
fs
cmpsl
outsb
or
mov
outsb
sub
nop
mov
daa
inc
sub
sub
mov
dec
lcall
jg
scas
daa
rcrl
xchg
aad
testl
mov
rorb
fs
std
std
enter
sub
or
xchg
or
loop
adc
ja
lret
or
jo
mov
pop
ds
inc
int3
lock
pop
mov
inc
test
jns
dec
sahf
fidivrl
fistpll
jecxz
inc
pop
mov
loopne
cmp
mov
int
pop
shl
pop
je
push
out
mov
jae
das
lods
in
or
arpl
mov
lret
ret
add
inc
sahf
test
cltd
and
xchg
adc
das
mov
xor
lahf
ja
add
inc
clc
flds
mov
fiaddl
pop
loopne
fsubs
push
in
or
inc
sbb
ficoml
mov
dec
cmp
stos
scas
js
dec
hlt
push
or
push
loopne
adc
mov
lahf
jle
pop
xchg
ss
lods
enter
cmp
mov
xchg
out
xor
mov
add
dec
pop
mov
dec
push
mov
lcall
insl
add
mov
out
add
push
pushf
sbb
push
out
iret
cld
enter
in
ret
mov
sub
mov
dec
sbb
pushf
cmp
lret
mov
mov
inc
dec
or
pop
fnstcw
iret
add
arpl
and
push
and
roll
push
push
loope
aaa
test
ja
inc
inc
cmp
inc
loopne
subb
xlat
mov
insl
aam
pop
aam
rolb
pop
lcall
call
pop
cmpsl
loope
aaa
dec
nop
add
mov
add
inc
int3
push
lret
sbb
inc
mov
sbb
int3
jle
cltd
movsb
inc
jmp
mov
xchg
inc
lret
mull
pop
sbb
fiaddl
sub
cld
jbe
test
mov
mov
insb
imul
mov
je
inc
jg
cld
mov
dec
stos
mov
cmpsb
mov
out
imul
leave
xchg
cltd
inc
adc
and
rcr
out
pop
inc
lds
mov
push
or
mov
and
sbb
push
out
or
ss
jns
mov
adc
mov
mov
push
dec
or
ss
outsl
aaa
ja
inc
imul
cmp
jnp
sub
xlat
ret
push
sub
rep
jo
std
inc
ds
pop
sbbb
imul
pop
cs
mov
bound
cld
rcll
dec
ljmp
in
cmp
loopne
or
cmp
sub
dec
push
nop
leave
dec
xchg
adc
mov
iret
pusha
jns
dec
movlps
orb
xor
ret
ud0
fsubl
lahf
jmp
mov
sub
mov
sbb
sub
ss
jecxz
sub
mov
ljmp
sbb
mov
repz
sbbl
or
lods
andl
aas
mov
pushl
fs
pop
sbb
inc
inc
adc
rcr
movsb
or
xchg
das
xchg
mov
add
outsl
aad
sub
clc
int
int
in
insl
int3
jbe
ficomps
adc
arpl
pop
ret
sbb
jbe
and
mov
dec
jl
out
loop
shld
jl
inc
push
inc
mov
or
adc
into
pop
mov
and
jb
js
mov
jae
int3
subb
mov
divb
aam
mov
imul
cmp
les
leave
push
lahf
jne
xchg
jns
dec
rolb
jle
test
and
mov
mov
imul
mov
inc
ret
adc
cmp
mov
jns
daa
sbb
sub
push
repnz
int3
pop
testb
sbb
mov
cmp
sub
xlat
xchg
imul
jo
js
cli
cmpb
xchg
rclb
call
fs
mov
hlt
aad
xchg
out
sub
sbb
sub
cwtl
in
ficoms
mov
xlat
aaa
adc
sarl
stos
mov
popf
bnd
cwtl
shl
ds
sbb
add
inc
fistl
add
insl
out
jge
shll
xchg
test
cmp
mov
lahf
out
push
leave
cli
adc
inc
ja
or
sbb
xor
adc
add
adc
js
dec
and
lock
mov
pushf
sbb
mov
lcall
lods
lods
xchg
in
mov
sub
sahf
push
pushf
aas
pop
frstor
xchg
add
pop
pop
and
xor
cmp
in
and
jns
inc
mov
sub
aad
sbb
dec
ljmp
popa
push
adc
shrb
mov
push
add
xor
ljmp
test
xor
mov
dec
mov
loop
sbb
mov
xchg
jge
xor
out
mov
repnz
cmp
outsb
pop
out
dec
inc
ret
cmp
push
popf
mov
out
and
jne
pop
sbb
xorb
in
pop
andb
lret
mov
adc
daa
jg
dec
mov
push
imul
lahf
fucomip
push
mov
daa
loopne
add
mov
scas
pop
cld
es
dec
cld
pop
daa
cwtl
sub
frstor
dec
addr16
pop
mov
mov
lahf
and
xor
and
repz
add
or
ret
jae
mov
and
sub
out
addb
dec
dec
dec
jle
bound
fdivl
mov
rclb
dec
mov
mov
daa
push
mov
mov
bsf
in
out
orl
nop
jns
fildll
cltd
cmp
xchg
test
loopne
or
or
jl
mov
push
outsl
mov
add
aas
sub
dec
mov
aaa
adc
cltd
int3
or
cmp
rorb
jno
dec
in
data16
push
jl
push
fxch
into
push
mov
and
jp
les
push
dec
ljmp
sbb
pop
jmp
mov
mov
in
add
in
das
mov
addl
xchg
or
popa
mov
jne
imul
inc
inc
test
xor
fimuls
popa
subl
lcall
add
cwtl
or
aad
sub
adc
mov
sbb
mov
sti
xchg
scas
pop
cli
sub
dec
push
std
sub
adcl
nop
sbb
bound
jmp
add
and
adc
jno
dec
inc
jbe
enter
std
imul
pop
out
sub
mov
test
mov
sbb
imul
cld
sbb
dec
and
mov
data16
cmc
dec
jmp
test
jl
jbe
fdivrl
mov
mov
mov
leave
adc
test
lret
es
cmp
dec
add
iret
fs
or
or
sub
push
mov
jecxz
jmp
or
aas
push
test
outsb
inc
mov
popa
jmp
dec
mov
mov
fcmovnu
or
aas
stos
stc
test
bndstx
xor
shl
jae
push
into
sbb
test
xchg
lret
push
into
popf
mov
cmp
mov
loopne
mov
inc
mov
mov
xor
mov
inc
jle
add
and
or
push
jb
and
popf
ret
push
pop
push
pop
mov
inc
lock
push
iret
fcoms
daa
inc
xchg
in
xchg
mov
pop
ljmp
fs
jno
sub
pusha
mov
jmp
mov
xor
or
and
lret
xchg
pop
mov
push
aas
loop
decb
insl
mov
mov
add
loope
inc
scas
sub
fldcw
aaa
insl
jg
and
dec
pop
rcr
pop
test
xlat
pop
test
ljmp
cmp
xor
push
push
mov
mov
inc
mulb
aam
dec
lret
pop
test
mov
mov
mov
test
mov
push
out
lock
mov
add
decl
adc
rcrb
or
or
cli
inc
in
fcoms
sbb
nop
or
adc
jl
jg
mov
leave
cltd
addb
xor
outsb
rcrb
or
inc
jg
xlat
js
jmp
pop
bound
sub
push
jmp
push
cli
int
adc
scas
sbb
test
cmp
pop
mov
mov
push
sbb
loop
test
mov
jb
lods
sarl
stc
push
sbb
add
mov
cmovle
pop
mov
push
into
xchg
mov
aam
adc
rclb
ljmp
add
cld
cmpsb
xchg
icebp
aaa
outsb
adc
dec
out
movsb
jle
fldenv
aad
pop
mov
fnsave
daa
pop
push
ficoms
frstor
sub
out
jmp
adc
shlb
testl
fsubs
icebp
hlt
jecxz
or
repnz
adc
dec
cmp
cld
xor
icebp
add
push
ljmp
push
aam
xor
jo
mov
mov
push
jmp
xor
pop
movsl
ret
mov
popa
bound
cmpsb
push
in
popl
push
mov
arpl
clc
sub
jl
and
insb
jae
fdiv
xchg
in
xchg
xor
lock
out
mov
or
test
aas
or
adc
inc
mov
filds
sub
int3
mov
xor
mov
or
mov
popf
lods
sarb
fnstenv
dec
shrl
mov
jae
or
push
push
pusha
mov
int3
fildl
push
cmp
lods
sbb
out
adc
test
xlat
int
lock
push
scas
mov
push
mov
mov
push
xchg
cltd
or
jbe
imul
addr16
sbb
cli
sbb
jne
test
push
xchg
sub
mov
sub
movsb
es
addr16
cmp
or
aaa
call
test
lds
adc
jo
cwtl
adc
das
and
ja
cmp
sub
aad
inc
test
push
mov
orl
andb
add
xor
jo
adc
lcall
insl
fs
movsb
incl
clc
sbb
mov
jo
shlb
or
jl
in
mull
sahf
outsb
jb
or
inc
hlt
and
jb
inc
negl
mov
xchg
scas
cmpsb
enter
xor
dec
dec
adc
ret
aaa
out
jmp
push
jge
pop
stos
daa
jb
dec
mov
aam
cwtl
int
imul
jns
loopne
pop
addr16
adc
mov
stos
cmp
out
jecxz
xor
and
mov
xor
xchg
adc
mov
inc
fiadds
xor
cmp
fldenv
popa
cmp
test
mov
mov
sahf
js
or
jp
fstpl
mov
push
mov
pusha
add
roll
js
mov
into
aad
gs
dec
dec
lcall
mov
and
sbb
repnz
jge
lods
pop
imul
xchg
cltd
mov
sbb
sub
std
adc
rorb
add
movsb
leave
xor
or
cmp
add
mov
xchg
dec
jbe,pn
fimull
loopne
mov
dec
je
out
mov
or
push
stos
cmpsb
and
nop
mov
mov
xlat
or
popf
sub
xchg
sub
inc
lret
xor
rcl
cmpsb
cmp
sbbl
sbb
dec
fcompl
lods
add
ljmp
mov
sarl
fnsave
test
pop
in
xchg
push
push
xor
jno
dec
add
jnp
inc
inc
pop
fcoms
mov
mov
cmp
pop
js
mov
sub
and
cmp
pop
sub
pop
in
imulb
adcl
loop
orl
mov
lret
test
push
push
dec
fadd
mov
fcmove
mov
and
shlb
rcl
or
push
sahf
mov
movsl
ficoml
push
jmp
aaa
into
sbb
fwait
mov
test
xor
icebp
int
imul
ds
sbb
fldt
int
sbb
mov
and
ljmp
cmp
add
cmp
push
test
loope
nop
mov
rclb
lods
outsl
loop
frstor
scas
inc
sub
mov
sub
scas
sbb
xchg
mov
mov
or
repnz
mov
mov
cld
mov
mov
es
out
xchg
sarl
enter
cwtl
clc
adc
into
push
mov
sbb
push
loop
dec
ret
xor
and
out
fwait
leave
xor
adcl
sub
inc
ret
inc
dec
dec
mov
jecxz
enter
mov
testb
mov
sbb
fnstcw
jge
outsl
sbb
in
out
subl
mov
clc
data16
lods
cmpl
repz
mov
mov
mov
pop
mov
push
xor
pusha
xor
icebp
jb
enter
mov
and
ds
sbb
xchg
testb
fldl
dec
daa
popa
sbb
sbb
aam
pop
loope
pop
int3
in
popf
sbb
in
in
inc
push
push
jb
dec
sub
mov
dec
jne
mov
loopne
adc
or
push
daa
add
into
cmp
stos
mov
lds
sbb
sbb
test
cmp
loope
dec
ljmp
cmp
cmp
stos
in
xlat
nop
pop
mov
icebp
mov
pop
push
push
sbb
lds
out
and
lret
setge
xchg
addr16
and
mov
mov
and
rcll
push
lahf
xor
mov
fdivrs
jbe
lock
divb
or
xchg
and
pop
mov
sub
pop
lds
pop
loopne
aas
jae
into
and
popa
orl
mov
xchg
repnz
cmpsl
ds
cmp
mov
idivb
push
sbb
inc
std
pop
push
repz
pop
pop
sti
ss
fsubrp
rcrl
add
out
mov
call
lds
dec
sbb
int3
aaa
mov
mov
fwait
push
cs
je
cmpsl
ljmp
cmpsl
lods
inc
mov
xlat
push
cwtl
jmp
into
std
mov
rcr
test
cmp
stc
bound
ret
iret
mov
mov
arpl
push
xchg
jae
pop
rcrb
scas
roll
jae
dec
fcoms
add
jl
icebp
mov
inc
push
adc
test
inc
inc
lods
aad
cmp
or
lds
cwtl
inc
xchg
inc
inc
dec
shlb
mov
insl
clc
and
daa
popf
aad
ja
mov
jns
stos
pop
std
mov
cmp
pop
lds
inc
inc
push
mov
test
xor
and
shl
shlb
add
inc
rclb
cmp
xor
dec
das
sub
push
in
repz
arpl
xor
outsb
sbb
inc
movsb
mov
sub
mov
xor
cmp
addr16
jmp
insb
pop
enter
xor
movsb
fisttpll
call
cmp
test
jno
or
std
cmpsl
shr
in
dec
scas
xor
cmp
mov
insl
cmp
inc
and
inc
xchg
inc
push
scas
js
aas
sub
and
rcrl
sbb
jb
sub
popa
or
enter
sbb
addl
insl
push
and
in
fsubs
testl
push
std
and
jg
mov
decb
jno
sub
mov
xchg
aad
outsl
jge
xor
arpl
nop
pop
pop
gs
test
leave
mov
pop
adc
push
mov
jno
mov
or
xchg
shl
mov
aad
push
mov
in
and
add
or
inc
aam
outsl
out
cld
sub
mov
jne
xlat
leave
jle
call
push
xor
pop
xor
scas
je
xor
adc
jb
in
bound
in
js
ds
cli
inc
pop
xchg
push
out
jb
sbb
mov
inc
and
xchg
mov
cmpsb
nop
jge
xlat
and
pop
fwait
or
test
ror
and
out
mov
cs
mov
aam
mov
bound
ret
sbb
pop
scas
pushf
dec
out
mov
test
dec
or
cli
xlat
gs
imul
outsb
cltd
in
imul
dec
and
aam
fistpl
inc
jg
loop
sub
cmpsl
divb
repz
pop
jns
jle
mov
rcl
roll
test
push
sbb
test
mov
inc
mov
push
fldcw
push
cmp
dec
sub
inc
add
mov
call
xchg
jge
mov
and
push
push
pop
cmp
pop
fsubrp
lea
xchg
ljmp
bound
cmp
mov
in
pushf
dec
push
add
mov
mov
test
mov
cli
or
inc
inc
inc
pop
gs
mov
sbb
fcmovnb
adc
fidivs
sub
sub
loope
fnstsw
sub
jmp
iret
hlt
pop
nop
fs
jmp
leave
or
mov
sbb
fistl
cmp
test
mov
or
jns
test
dec
lock
adc
gs
mov
or
jle
outsb
fidivrs
clc
mov
push
dec
jp
jns
nop
mov
dec
sub
sbb
rclb
xor
in
xor
jmp
cmc
test
xchg
xchg
pusha
aam
sub
addb
jp
test
sbbb
push
jne
filds
rep
lahf
incb
into
jg
std
mov
sbb
or
int3
sub
in
scas
mov
das
push
xchg
loopne
xchg
movsb
es
jb
or
ret
push
mov
cmp
es
addl
std
jb
mov
adcl
dec
add
push
dec
mov
sbb
imul
cmp
pop
rcrb
lds
sbb
fiaddl
rcrb
dec
dec
mov
sub
ds
jno
sbb
push
or
sti
shll
mov
ljmp
jo
push
push
std
xchg
cmp
push
iret
cmp
jno
mov
ds
sti
inc
pop
push
and
fists
pushf
dec
push
jmp
push
shrl
stos
aam
xor
mov
cli
fcompl
or
dec
cld
and
sbb
lcall
sub
xor
clc
hlt
data16
dec
pop
jmp
sub
rdtsc
sbb
rol
insb
andb
pop
push
jge
inc
cmp
or
sub
loope
jecxz
xor
push
push
lret
adc
fmull
dec
xchg
xor
adc
sbb
adc
push
push
dec
les
fisubrl
sub
mov
inc
popa
jp
mov
ljmp
shlb
jae
dec
push
push
push
insl
test
aas
sbb
les
cmp
jnp
popf
testl
xor
test
sbb
cwtl
sahf
mov
loope
in
mov
popl
sub
out
xor
cli
cmp
mov
repnz
sbb
xor
push
mov
test
shr
jg
jno
push
mov
les
cmc
rolb
cli
or
mov
jmp
xchg
sbb
test
and
test
or
fldl
jae
pop
arpl
aaa
sbb
jns
xlat
jnp
hlt
lret
in
and
mov
adc
gs
cmp
fidivrl
fcmovnu
stos
loopne
stos
pushf
outsl
aam
std
lds
shrb
andl
sarb
daa
bound
lret
mov
lahf
mov
dec
sbbb
pop
negb
movsl
imul
pop
inc
stos
fiadds
sbb
div
cli
xor
fidivrs
xor
or
or
mov
inc
pop
shl
adc
unpckhps
and
inc
mov
mov
es
sbb
add
lret
or
mov
sub
xor
fbstp
dec
test
orl
div
sbb
imul
mov
cmp
pushf
pop
int
push
adc
mov
movsb
gs
not
adc
pop
cli
or
out
xor
out
or
push
jl
lea
pop
and
jmp
pop
popa
mov
adcl
popa
sub
xor
inc
pop
jbe
mov
decl
jo
test
fs
adc
pop
xchg
in
in
cmp
test
mov
mov
xor
sbb
movl
das
mov
loop
pop
shrb
inc
cmp
or
sti
jecxz
mov
mov
push
arpl
adc
lea
jne
stos
sub
adc
loop
outsl
mov
je
pop
add
lahf
inc
xchg
sbb
insb
in
inc
int
xor
xor
in
xor
cli
cmp
inc
pop
and
divb
jo
daa
mov
cmc
js
popa
inc
cli
and
daa
leave
and
sbb
jbe
push
mov
ds
lcall
cmp
cmp
or
gs
test
push
fcmovbe
mov
dec
fwait
lcall
adc
cmp
fs
and
mov
js
sub
outsb
dec
sbb
aaa
rorl
cmp
pop
ljmp
imul
xor
mov
shrl
ss
xor
and
mov
inc
xchg
and
aam
hlt
xor
ret
sbb
dec
rcrb
jle
mov
hlt
mov
lret
and
and
test
pop
jo
icebp
lcall
fstl
in
dec
adc
in
xor
mov
and
adc
outsb
dec
outsl
dec
pushf
cmp
xor
pop
ljmp
nop
pushl
fnsave
ljmp
out
stos
pop
and
dec
pop
gs
xor
mov
lret
jl
orb
mov
or
lods
add
mov
mov
int3
dec
jg
out
cmp
inc
adc
ficompl
mov
adc
xchg
mov
sbb
and
and
pop
nop
xor
mov
mov
incl
in
test
mov
int3
cmp
loop
jnp
and
mov
test
das
mov
aam
rcrb
sbb
in
stos
out
jb
xorl
mov
xor
pop
fmull
mov
loopne
jo
sub
sbbl
mov
pop
jecxz
sub
iret
loopne
leave
scas
xchg
push
movsb
mov
jne
ss
xor
ficoms
fdiv
ret
movsl
cmpsl
bound
stos
mov
scas
mov
rclb
loopne
aas
xlat
mov
gs
sub
xor
add
push
push
icebp
sbb
fstpl
mov
imul
ss
fisubs
cmp
pop
movsb
popf
ret
lds
scas
pop
loopne
out
mov
or
push
outsb
cltd
movsl
mov
xchg
mov
dec
hlt
imul
jne
in
inc
or
and
mov
std
push
fwait
jl
int
dec
pop
mov
push
sbb
mov
aam
cmpsb
stos
dec
mov
ror
mov
pop
pop
mov
test
adc
sub
inc
sbb
cmp
in
jle
loope
inc
push
cmp
leave
inc
push
fdivl
add
shlb
cli
aaa
cwtl
cmp
xor
inc
ja
test
std
int
fcomip
cltd
lods
into
popf
jecxz
cmp
inc
xchg
fldl
mov
test
pop
xchg
mov
scas
ret
fwait
and
pop
loop
and
and
jmp
pushf
shrl
imul
add
mov
js
leave
ret
adc
pop
adc
loopne
jp
fadds
nop
mov
repnz
add
and
pop
fucom
xor
jp
lret
adc
dec
popa
xor
int3
pop
andb
and
popfw
in
scas
mov
sahf
push
or
cmpsl
lock
push
mov
stos
inc
ret
adc
gs
imull
mov
pop
adc
and
xor
mov
push
outsl
iret
jb
sub
push
rorl
in
jl
movsb
xlat
mov
lret
inc
pop
aam
ret
pop
adc
scas
aaa
lods
dec
mov
cli
hlt
ljmp
adc
lods
mov
rcl
jne
mov
rorl
mov
fnsave
fsubrs
mov
in
mov
jle
clc
lds
xchg
xchg
popf
movsb
adc
cmp
loopne
invd
testl
nop
pushl
xlat
gs
mov
fs
jge
mov
repnz
shrl
imul
inc
mov
test
jno
rcrb
add
insl
lods
xor
cmp
std
stc
adcb
push
out
sahf
aad
jge
cmp
icebp
xchg
js
mov
fdivl
xchg
fnsave
lods
and
fisubrs
aad
outsb
pop
cmp
out
cmp
push
rcl
scas
js
arpl
push
pop
enter
mov
mov
nop
pop
js
add
in
rcl
bound
mov
cmpsl
xchg
pmullw
push
mov
aam
jnp
subb
icebp
sbb
adc
add
cmpsl
ljmp
lock
dec
idivb
inc
mov
mov
xor
jae
jmp
mov
fisubs
or
and
mov
xlat
call
inc
mov
call
test
mov
inc
in
fwait
inc
loope
mov
or
xor
imul
and
pop
out
pop
adc
mov
push
push
mov
test
pop
es
cmc
jb
daa
and
dec
fs
inc
lods
sbbl
xor
cli
nop
stc
outsl
inc
ja
mov
or
cmpsb
dec
add
in
push
sbb
ljmp
xor
insl
fsubr
shl
push
sahf
jg
add
loop
into
aam
add
mov
sbb
lret
fwait
mov
mov
add
pop
adc
inc
pminub
in
dec
subl
sub
push
inc
sti
push
cld
inc
dec
lret
cld
mov
mov
sbb
jns
push
mov
aaa
inc
notb
push
sbb
fidivs
out
int
insl
sbb
mov
jle
mov
sbb
xchg
push
cltd
and
cs
push
fisubl
adc
inc
push
cwtl
leave
inc
pop
ror
cmpsl
and
mov
fidivl
test
subl
stc
scas
into
mov
adc
add
pop
sub
mov
jle
cwtl
insb
daa
mov
nop
ret
inc
mov
and
cltd
cli
push
outsl
pusha
mov
mov
lods
jne
daa
mov
add
add
sub
mov
imul
mov
sub
sbbb
mov
in
popl
mov
adc
sbb
fs
xor
mov
mov
cmpsb
scas
testb
shl
add
pop
push
loope
lcall
pop
mov
cmp
aaa
sub
push
mov
push
mov
mov
shrb
adc
push
test
ss
jne
pop
mov
inc
xor
xor
jle
popf
jl
jg
mov
push
ret
sub
sub
imul
fistps
jge
jmp
repz
outsl
mov
mov
aaa
mov
in
push
cmp
test
dec
jecxz
cld
popa
mov
jo
xchg
out
cmp
mov
pop
mov
or
outsl
xor
pushf
repnz
das
add
jne
imul
std
jae
inc
lcall
inc
shlb
cmp
pop
mov
cmc
cltd
push
xchg
push
jnp
add
mov
cmc
mov
and
xchg
jg
push
repnz
xchg
in
lret
out
loop
and
adc
out
sub
std
popf
sti
lods
ret
fsubs
test
sti
cmpsb
dec
mov
pop
scas
push
popf
pop
mov
or
aas
cmp
jo
jle
cmpsl
cltd
pop
dec
imul
xchg
jbe
pop
mov
mov
jbe
jecxz
mov
in
std
lock
idivb
leave
sbb
adc
cmp
je
mov
dec
aam
cmc
adcl
sub
and
inc
or
cmp
inc
mov
insb
lret
int3
sbb
addr16
int
mov
jmp
pop
test
popf
addl
or
sub
pushf
lret
hlt
inc
mov
pop
mov
int
push
test
fnstenv
sub
iret
outsb
icebp
sbb
das
xchg
adc
dec
outsl
pop
andb
ds
lcall
aam
inc
jmp
lahf
dec
mov
jmp
cld
in
lods
and
cmpsb
dec
jg
les
or
add
adc
adc
add
lds
shlb
ss
push
rolb
dec
scas
add
repnz
imul
xor
sti
mov
fildll
and
xlat
cmp
loopne
mov
add
loopne
call
mov
sub
int3
mov
rclb
imul
subl
sbb
clc
gs
mov
nop
cmc
inc
data16
in
or
outsb
scas
push
jp
test
mov
shlb
pop
test
into
push
mov
jno
aas
mov
cmp
lret
inc
xorl
lret
lret
aam
in
in
aad
cs
mov
mov
test
rcrl
clc
mov
pop
fsubs
ss
mov
inc
jmp
pusha
rcr
stc
icebp
dec
cmp
loop
mov
cmpsl
xchg
add
push
push
push
lret
adc
daa
mov
outsb
fisttpl
xor
push
dec
mov
push
jmp
pop
cltd
xchg
addl
mov
lret
dec
sarl
in
adc
mov
aad
mov
lock
xchg
out
lret
test
xor
cmovo
outsl
aaa
int
mov
out
add
jle
xchg
push
shll
lret
or
cmp
mov
fstpt
inc
in
movsb
fildl
pop
bound
repz
jle
xchg
jg
cmpb
or
outsb
pop
mov
xor
loop
dec
sbb
adc
mov
es
shl
sbb
sahf
fidivl
ret
mov
or
adc
adc
insb
cmp
xor
sub
cwtl
ret
push
xor
and
mov
repnz
imull
xchg
adc
mov
addr16
scas
or
rol
jmp
jmp
clc
out
and
cmp
into
int3
bound
imul
popa
fnsave
aaa
jo
adc
test
addb
dec
lds
push
sub
fsubl
mov
xor
fists
mov
push
lret
stos
movsl
stc
cmpsl
movq
rcll
out
das
jle
std
mov
pusha
lahf
aas
inc
xor
cmp
mov
dec
jno
es
jne
push
aas
mov
leave
and
nop
aad
jo
mov
es
sarl
lds
xchg
sub
xor
and
fcomps
xchg
jg
in
mov
lods
lret
sahf
pop
cmc
testb
daa
push
lcall
fxch
adc
into
out
in
inc
xchg
sahf
dec
rcrl
xlat
fcompl
scas
incb
bound
into
lret
or
sbb
ret
inc
xchg
mov
outsl
xchg
scas
inc
xchg
les
xchg
and
pop
xor
scas
adcb
add
shl
in
xchg
adc
xchg
xor
shrl
push
das
push
mov
fcmovne
mov
inc
push
test
xchg
adc
and
aas
pop
orl
cmpsl
add
mov
mov
add
and
dec
aad
rcll
jmp
mov
aad
faddp
hlt
shll
xchg
cltd
fs
xor
mov
popa
pop
out
clc
dec
mov
arpl
jbe
aad
into
sbb
or
fstpl
dec
sub
idivl
out
mov
pop
sbb
int
mov
pop
loope
shlb
mov
pop
add
repz
mov
leave
mov
int3
out
mov
dec
push
data16
call
sub
sub
stos
push
fildll
rcll
mov
and
push
adc
out
test
or
jo
pop
sub
or
bound
pop
mov
fs
push
adc
push
jae
xor
push
int
and
mov
arpl
pop
pop
push
lcall
cwtl
bound
mov
mov
and
adc
dec
iret
scas
in
jo
mov
adc
and
bound
out
cwtl
add
adc
mov
std
sub
jp
mov
pop
cmpsl
inc
dec
adc
subb
dec
push
cli
xchg
subl
xchg
and
test
jne
mov
adc
jp
jb
movsb
pushf
fldenv
mov
stos
or
test
in
cmp
or
push
scas
adc
outsl
ret
pop
pop
pand
sbb
cmp
repnz
cmpsl
movsl
inc
push
pop
sbb
fsub
inc
movsb
out
mov
inc
mov
call
addb
cmp
lods
sbb
inc
pop
xor
mov
movsb
outsl
adc
sub
shll
and
ret
jbe
dec
cmp
push
mov
cmc
push
xchg
loop
mov
mov
pop
dec
fiadds
lret
jecxz
mov
or
int
mov
pop
leave
fsubl
push
mov
scas
sbb
pop
pushf
dec
sub
mov
outsb
out
mov
push
sahf
jl
ja
test
std
push
fsubrs
mov
mov
xor
push
imul
mov
fistpll
dec
dec
stos
cmp
ljmp
test
gs
ret
mov
rorb
movsl
xchg
cltd
insb
nop
jmp
pop
xchg
dec
mov
adc
pop
test
mov
adc
mov
cmp
mov
outsb
es
fmull
dec
and
pop
add
jg
cmp
or
pop
dec
cmp
adc
jl
push
in
mov
dec
popa
lock
xchg
pop
shlb
mov
imul
es
fmuls
push
ds
mov
cltd
xchg
popf
mov
dec
push
jbe
subb
mov
mov
add
mov
push
or
scas
das
adc
test
std
jecxz
xor
xor
iret
mov
fcomp
js
dec
jb
sub
xchg
lahf
sti
mov
stos
lea
data16
outsb
lock
sbb
mov
cli
cli
fs
mov
pop
sub
jp
ds
inc
data16
sbb
insb
test
test
in
icebp
popf
mov
lret
pop
xor
enter
mov
mov
inc
cmpsl
sbb
shlb
cmp
aad
in
rcll
push
dec
in
jl
outsl
mov
les
pushf
lahf
and
les
mov
xchg
xor
hlt
push
xlat
or
inc
std
mov
cmp
add
xchg
xor
std
iret
pushf
in
lret
hlt
lods
mov
inc
loop
test
pop
or
and
xchg
xor
aad
mov
test
shlb
push
in
shr
jnp
jne
adc
xchg
push
lock
rcrb
dec
mov
sahf
jnp
nop
les
jmp
rcl
stos
nop
jmp
push
js
out
dec
push
push
ja
jno
clc
cs
repnz
hlt
ficompl
clc
add
mov
mov
mov
test
imul
lcall
insl
inc
out
or
js
fisttpl
cmp
hlt
mov
and
sbb
int3
test
mov
outsb
out
imul
in
mov
pusha
jnp
dec
push
cmc
fs
aad
mov
cmpsl
popl
cwtl
push
scas
push
push
out
push
addr16
add
mov
std
aaa
in
das
dec
fwait
mov
pop
sbb
push
xor
mov
scas
insl
popf
adc
cmp
inc
or
inc
loope
pop
cmc
leave
dec
inc
sub
xchg
mov
cmp
mov
rcrb
cmpsb
jp
sti
mov
lahf
mov
push
adc
add
jo
sub
std
leave
out
ret
xchg
and
movsl
or
in
cmpsb
xchg
inc
push
arpl
ss
lea
js
mov
out
xchg
fbld
cs
push
scas
lret
lcall
daa
inc
dec
mov
enter
ss
sbb
mov
mov
lret
adc
xchg
adc
xchg
insl
cmp
and
or
xchg
cmp
loop
adc
lahf
jbe
and
dec
jle
rorb
jae
and
loop
incb
mov
pop
sub
les
pop
movsl
test
je
dec
stos
cltd
dec
flds
rcll
js
out
cmc
sub
cmp
fxam
add
sub
cmp
push
xchg
inc
cwtl
nop
sub
fwait
inc
or
addr16
out
in
mov
or
xchg
aaa
xor
es
dec
push
push
and
pop
pop
mov
imul
sub
enter
push
adc
in
icebp
cmp
xchg
enter
cwtl
lcall
jg
xchg
and
jl
mov
mov
add
fwait
and
or
mov
add
idivb
aam
jb
cmp
insb
add
mov
ret
insl
jno
dec
insb
lds
stos
leave
push
stc
repz
or
gs
inc
mov
jge
mulb
jg
test
mov
cmp
in
mov
sbb
inc
in
repz
push
xchg
mov
push
data16
xchg
shl
xor
sahf
and
loope
rcl
aam
xchg
sbb
movaps
movd
mov
inc
push
lds
jmp
pop
sahf
pusha
call
push
xor
adc
push
sahf
pop
inc
jl
push
pop
out
push
sbb
xor
push
mov
mov
mov
cmp
xor
cmp
aam
dec
addps
sub
test
push
ljmp
out
xor
dec
pop
test
outsb
cmc
sbb
loopne
daa
dec
out
rcr
push
push
scas
int
mov
jle
or
ja
push
das
lret
cwtl
sub
push
adc
dec
loopne
mov
rcrl
sbb
or
jns
scas
psrad
sahf
xor
shlb
mov
xchg
popa
lock
cmpsl
or
mov
leave
lahf
cmp
sbb
push
or
xorl
jecxz
dec
mov
xchg
testb
mov
notb
adc
jecxz
cmc
xchg
imul
or
sbb
mov
out
cmp
push
or
pop
bnd
imul
cli
mov
mov
xlat
dec
add
test
or
pop
sti
ret
mov
or
inc
repnz
add
ds
or
std
je
imul
incb
pusha
call
add
iret
mov
in
jge
cwtl
sti
incb
inc
push
js
jns
shll
sbb
xchg
jg
stos
stos
mov
and
inc
adc
cli
jo
test
xchg
rorb
movsb
mov
push
xchg
pop
mov
dec
mov
insb
addb
jne
cli
xor
jp
mov
shl
push
fadd
push
push
dec
xor
pop
push
mov
sbb
mov
outsb
outsb
xchg
pop
add
dec
adc
js
or
orl
mov
or
jle
ret
pop
push
cmp
fwait
mov
adc
and
and
lea
and
jb
mov
mov
gs
cld
cli
jno
ror
loopne
jle
imul
xor
push
dec
xchg
jle
fldcw
pop
jno
leave
sbb
jp
xchg
lahf
pop
das
test
fabs
push
int
and
pop
mov
mov
stc
cmpsl
fnsave
fwait
incb
jle
mov
xor
inc
cmp
inc
xchg
mov
add
pushf
push
in
inc
jnp
pop
sbb
test
and
and
leave
sbb
or
test
adc
mov
jns
ret
gs
iret
or
pop
mov
mov
pop
mov
enter
gs
das
push
movsb
and
sahf
rcll
sti
gs
cmp
movsb
jbe
xor
loopne
jge
xlat
jb
jno
mov
mov
bound
mov
dec
dec
adc
pop
xchg
pop
lret
in
adc
dec
mov
ficompl
movsb
stos
sbb
test
outsb
ljmp
orb
pop
sub
mov
aad
or
mov
push
aam
pop
inc
lods
sbb
outsl
adc
pop
cltd
in
outsb
sub
or
sbb
cmp
mov
pusha
je
pop
or
call
or
iret
or
notl
icebp
movsl
ja
cmc
nop
mov
jno
lahf
inc
lret
push
int
mov
scas
or
je
push
sub
push
aam
insl
in
mov
push
sbb
or
inc
fwait
stos
rcrb
call
ljmp
xchg
jnp
inc
mov
mov
fcmovbe
jl
int3
xor
sahf
sub
test
jae
hlt
or
sbb
jae
pop
lock
adc
xchg
mov
scas
cmc
test
jae
in
in
bound
and
sbb
dec
mov
nop
pop
paddusw
mov
adc
out
fs
jp
and
cld
xor
xchg
cmpsl
scas
add
rcll
add
mov
push
add
jbe
sbb
lahf
cmp
jns
ljmp
push
aaa
or
sbb
loope
orl
test
mov
iret
aam
scas
insl
and
cmp
inc
stos
incb
mov
fimuls
fiadds
mov
pop
das
adc
inc
arpl
jecxz
dec
int3
ret
int3
adc
ja
add
or
sbb
mov
in
xor
pop
and
mov
lods
mov
sbb
xchg
insl
mov
inc
lret
push
inc
add
xchg
shl
sub
cmp
push
loope
outsl
sub
dec
xor
inc
mov
mov
or
push
lret
test
insb
loope
test
fsub
rclb
in
mov
popf
lret
das
cs
mov
hlt
cltd
xor
addb
add
lret
daa
std
call
cmp
dec
mov
lret
adc
scas
inc
add
mov
mov
and
gs
aad
and
lods
imul
loopne
cmc
pop
popa
pop
test
mov
lods
stos
aam
in
fdivs
dec
jg
dec
add
andl
or
push
leave
fcoml
movd
insl
in
dec
dec
fstps
push
jge
mov
roll
pop
popa
cs
push
scas
sub
push
aad
mov
bound
das
cmp
insb
mov
scas
sub
sti
mov
xchg
cs
add
imul
sub
jne
test
mov
out
insl
push
sub
lods
xor
and
jecxz
push
cmp
cmpsb
loop
int3
jg
aas
mov
loopne
and
andl
mov
adc
sub
mov
ss
mov
and
pop
cmovg
sbb
test
scas
pop
sahf
or
rolb
xorl
sbb
test
push
xor
jb
daa
call
or
xor
sub
cmp
mov
and
sub
jns
xor
or
mov
push
lods
jecxz
out
push
orb
sbb
sub
int
add
sbb
mov
stos
push
es
shlb
dec
lcall
ret
cmp
int
and
push
pushf
leave
xor
fs
stc
mov
sbb
mov
popf
cltd
aaa
pop
add
add
loope
jge
jbe
mov
sahf
loopne
test
pushf
das
cld
mov
mov
divb
push
dec
xor
insl
sarb
mov
push
out
mov
fildl
pop
sub
out
nop
ss
lret
jno
sub
mov
and
and
xor
ds
dec
dec
icebp
and
cmpsl
mov
sub
lock
mov
pop
mov
mov
or
push
in
ss
int3
xor
jle
ret
add
fimuls
dec
rcrb
pop
inc
push
rcr
sbb
lret
loope
sha1nexte
push
pushf
pop
mov
jp
mov
pushl
out
lea
shl
decb
sub
cmc
jb
incl
push
outsl
add
nop
mov
out
rcrl
dec
xchg
adc
iret
xor
mov
push
adc
fcoms
loope
jg
and
popa
xor
xchg
jmp
bound
lods
adc
test
mov
xor
dec
arpl
sbb
nop
daa
dec
jno
shlb
add
sarl
popf
lock
sub
jg
stc
sub
cs
subb
lcall
fwait
dec
jb
jae
mov
mov
addr16
xchg
mov
sub
lock
pop
adc
aas
in
pop
in
push
xchg
mov
mov
jle
mov
test
ljmp
sbb
inc
xchg
fdivs
adc
or
push
or
push
xor
push
arpl
xor
jb
mov
test
xor
pop
sub
cmpb
or
and
mov
pop
into
inc
mov
pop
nop
add
fstl
sub
cmp
mov
dec
inc
adc
sub
cmp
jbe
and
add
sbb
es
loope
dec
sub
inc
jp
repz
arpl
leave
rclb
imul
pop
fildll
int
mov
pop
arpl
sbb
test
adcb
add
insl
cld
push
loope
inc
scas
neg
test
or
push
pop
mov
sbb
leave
sbb
stc
ss
lds
pop
or
clc
in
dec
int3
test
in
out
ljmp
enter
cli
sbb
lods
stc
dec
cs
sti
push
outsl
cltd
outsb
fwait
out
cmpsl
daa
inc
add
xor
xor
dec
in
les
movsl
imull
add
daa
and
in
dec
push
and
push
cmp
shrl
push
jno
std
sub
dec
and
dec
arpl
add
xor
mov
sbb
mov
out
cmp
fs
test
into
fcos
add
test
sahf
pop
jmp
dec
aas
imul
sbb
dec
xchg
pop
or
hlt
dec
shlb
mov
sbb
mov
push
or
rcrl
mov
mov
repnz
add
add
and
add
mov
and
pop
into
int
lock
ds
push
jnp
faddl
test
push
nop
mov
sub
pop
arpl
popf
push
cmp
test
xor
cmp
in
jno
xchg
inc
push
cli
or
dec
cmp
lods
or
or
mov
leave
sbb
adc
and
push
and
xchg
sub
dec
jns
xchg
je
mov
inc
dec
out
stos
clc
push
lahf
dec
xchg
jne
lods
push
test
push
sbbb
adc
cmp
bound
in
fimuls
cmp
dec
popa
mov
push
dec
mov
outsl
addr16
loop
or
xor
imul
push
or
xlat
sbb
or
fdivrs
ret
push
sub
xchg
test
sub
test
in
popa
jns
sub
or
xor
mov
jnp
mov
sub
pop
into
jmp
sub
movsl
or
pop
jbe
xchg
sub
fcoms
mov
sub
movsl
inc
sub
lar
in
mov
stc
jne
inc
das
test
inc
lahf
mov
dec
jns
xor
sub
adc
subb
fwait
ljmp
fdiv
sbb
dec
and
pop
outsl
arpl
mov
lret
in
push
shrl
mov
andl
dec
andb
cmpsl
cwtl
sub
xchg
lods
sbb
in
xchg
cmp
aam
pusha
push
ret
dec
stos
call
adc
xchg
imull
mov
in
rorl
cmp
push
cmp
sti
and
mov
xchg
fs
mov
rcl
cmp
push
idivb
pop
push
mov
mov
jle
fistl
cmp
js
or
repz
mov
dec
push
inc
mov
stos
leave
ficompl
test
mov
lods
and
xchg
inc
incb
mov
lahf
and
adc
mov
data16
in
fstps
and
pusha
dec
jae
dec
cmp
test
adc
and
xchg
aaa
sbb
bound
pop
dec
mov
inc
lea
jmp
jp
fwait
jp
call
mov
dec
je
cld
mov
mov
push
or
daa
aad
xor
mov
rcll
out
adc
jg
fmul
pop
sbb
call
sbb
jnp
jle
jbe
jae
out
dec
cli
add
outsb
pop
outsl
fidivl
loop
gs
mov
lods
cmc
mov
inc
mov
addr16
das
das
jp
cltd
xor
jb
inc
ljmp
xchg
leave
or
and
push
nop
lahf
jae
jecxz
mov
mov
cmpsb
insl
sbb
stc
lock
ficoms
pusha
push
and
mov
push
enter
fdivr
out
shll
movsb
imul
fs
test
jae
fcmovbe
mov
sahf
or
iret
fs
push
jl
jmp
sti
cld
fs
jae
test
popf
sub
les
jo
nop
and
cli
ror
insb
cmp
clc
push
mov
sbb
popf
out
lret
les
fcomp
and
jle
mov
ficomps
xlat
push
gs
add
add
imul
mov
jl
sbb
ss
test
sub
xor
jne
ja
es
push
xorl
push
test
int3
push
addr16
sub
shr
je
jmp
sbb
lret
and
cmp
lcall
dec
pop
loope
loop
stos
andb
xchg
mov
mov
jecxz
pop
mov
dec
mov
and
sub
push
sbb
in
xchg
pop
and
mov
enter
shlb
cld
notl
xor
xor
sbb
fnsave
and
mov
scas
cmp
sub
jo
and
sbb
ficompl
js
sbb
mov
inc
xchg
and
dec
cmp
pop
aas
mov
xchg
gs
mov
test
dec
in
fidivrs
push
sub
jnp
sub
xchg
dec
in
je
xchg
mov
or
pop
int3
or
movsl
jo
push
inc
jp
cli
out
inc
xchg
push
ss
stos
movsl
cmc
fistps
les
pop
fidivrs
adc
or
mov
cwtl
inc
add
add
dec
cmp
lret
jmp
mov
add
hlt
push
scas
mov
jmp
les
mov
loop
stos
movb
rclb
jp
loope
mov
sbb
jg
jo
push
mov
cmpsb
lahf
sub
bnd
and
ja
movsl
xor
xchg
mov
bound
sbb
sbb
inc
pop
jo
push
xchg
pop
fs
cmpsb
cld
jbe
sbb
scas
lods
inc
and
sahf
dec
cmovs
inc
dec
imul
fs
cmpsl
inc
adc
in
adc
lods
push
sub
repnz
xchg
inc
out
mov
jne
outsb
mov
inc
loop
lcall
push
out
push
cmp
jb
mov
mov
ljmp
dec
push
mov
dec
cmp
lods
decl
push
xlat
addb
pop
in
sahf
stc
pop
pop
jae
cwtl
lret
pop
add
jns
xor
lea
cmpsl
lds
fbld
pop
inc
repnz
jb
xorb
push
mov
push
pop
sub
mov
xchg
push
pop
cmp
jo
push
fbstp
mov
jmp
insl
mov
adc
adc
mov
lret
push
in
std
jns
gs
mov
dec
insl
and
out
int
jg
push
imul
lahf
push
pushf
jle
and
xor
push
jmp
int3
sahf
ud2
jo
pushl
xchg
sub
mov
dec
andb
leave
fs
cmp
call
mov
xchg
lret
pop
jmp
inc
push
lahf
cmp
loop
sbb
ljmp
pop
or
enter
stos
push
out
mov
mov
and
sbb
or
iret
lods
jle
inc
lods
mov
enter
mov
aad
cmp
dec
out
xchg
fnstcw
mov
dec
mov
in
shlb
into
in
inc
cli
iret
mov
mov
cmp
sbb
nop
inc
test
outsl
stos
add
sub
imul
int
mov
out
add
outsb
icebp
inc
push
ds
rclb
inc
xchg
push
stos
xor
jp
jb
fimull
cmpsb
cmpb
cmpsl
popa
inc
pop
xor
push
ljmp
sub
aam
add
jecxz
fwait
call
sbb
nop
nop
or
cltd
nop
dec
jmp
mov
cli
hlt
js
jmp
xlat
out
and
addl
or
mov
stos
sbb
orl
mov
dec
test
outsb
cmp
cmp
ret
sti
pop
push
je
cmpsl
ljmp
adc
loopne
std
jecxz
dec
mov
nop
mov
mov
mov
imul
inc
mov
mov
cmp
insb
add
add
icebp
aas
ljmp
pop
or
inc
clc
pop
insl
pop
ss
add
pop
rclb
push
divl
xchg
fldenv
add
and
leave
xchg
lcall
imul
inc
push
rcrl
shl
stos
mov
mov
mov
loop
enter
orl
inc
xchg
popf
popf
stc
imul
mov
add
rclb
jns
int
pop
push
adc
mov
sarl
stos
sub
into
or
mov
fstpl
pop
mov
aad
sahf
cmpsl
test
add
loope
xor
mov
sbb
scas
dec
add
cmp
cli
mov
xor
out
cmp
std
aas
shll
aam
hlt
mov
dec
mov
daa
adc
lods
aad
shl
inc
dec
out
cld
cmc
push
js
pop
dec
push
and
dec
add
enter
ds
add
ret
and
inc
fsts
je
mov
jle
pop
popa
or
dec
das
fxch
in
sbb
pop
or
nop
je
in
push
in
lds
outsl
dec
in
sub
pop
cltd
out
mov
scas
ss
icebp
pusha
outsb
jno
ret
je
pop
ja
scas
mov
shll
push
push
arpl
sub
mov
shrb
loop
sar
lcall
clc
xor
cmp
jecxz
movsl
mov
loope
lods
seta
test
fsubr
dec
ret
outsb
add
mov
cltd
and
test
or
lcall
xchg
push
js
in
cmp
fcmovnb
mov
repnz
jge
xor
push
jae
sub
and
stos
aad
es
movsb
aad
imul
mov
cld
sub
inc
gs
add
jb
rcl
out
inc
addr16
and
mov
mov
pop
mov
out
insb
pushf
enter
add
push
dec
lods
imul
or
mov
mov
loopne
lahf
aad
shlb
mov
mov
loope
lretw
push
fnsave
test
into
jnp
loop
sbb
rcll
sarl
fbld
push
cmpl
mov
int
stos
jmp
push
xchg
enter
mov
xchg
xchg
shrl
mov
jle
test
sbb
push
inc
aam
or
or
add
jnp
lods
xchg
sar
adc
mov
das
scas
repz
mov
stc
mov
sub
icebp
adc
adc
and
int3
sahf
imul
ds
add
in
ljmp
outsl
pop
add
outsb
xor
inc
int3
lods
ficoml
into
lret
std
xchg
add
add
mov
fs
xor
mov
jge
repnz
insl
xor
push
push
mov
sbb
loope
xor
cwtl
lahf
xchg
lea
sar
xor
push
jl
icebp
adc
test
jns
dec
and
dec
pop
lods
mov
fistpl
pop
popf
mov
sarl
nop
sub
add
xchg
insl
addr16
xchg
push
xchg
jecxz
inc
les
xor
and
sbb
push
sbb
xchg
and
sub
jl
int3
xchg
xchg
test
jp
pop
push
jp
mulb
jmp
icebp
sub
dec
mov
daa
mov
test
popa
shll
xchg
dec
cltd
pop
orb
or
dec
dec
sub
ss
add
fsubrs
lods
inc
push
push
mov
lods
and
pop
lds
xchg
les
xor
andb
in
adc
js
movl
inc
xor
xlat
rol
jo
sub
fildl
test
out
push
mov
shlb
sti
leave
mov
rcr
clc
add
scas
mov
outsb
push
mov
aaa
bswap
std
in
add
mov
and
cmpsl
push
cmp
shll
lret
xor
mov
sub
or
cmp
pop
cmp
iret
cmp
xor
ljmp
cltd
or
cmp
jnp
push
data16
pop
jnp
jb
test
mov
dec
and
clc
mov
loop
int3
jae
mov
mov
call
dec
xor
aas
jnp
jle
pop
addr16
dec
and
test
jno
cltd
bound
xchg
mov
cld
sarl
add
les
sbb
sbb
pop
adc
cmpsb
out
js
jbe
pop
cmp
insb
inc
adc
mov
aad
aas
scas
stc
cs
push
sub
or
popf
jmp
ret
pop
aam
divl
fnsave
sti
inc
jmp
dec
pavgb
xchg
push
push
les
int3
rolb
pop
lret
jns
xlat
sbb
bswap
fxch
leave
adc
add
lret
mov
popa
test
in
outsb
ds
roll
adc
sbb
adc
jmp
xchg
mov
lahf
cmp
add
test
push
lahf
nop
jo
xchg
mov
sub
popf
pop
mov
cmp
cmpsl
movsb
add
stc
loope
inc
data16
cld
xor
xor
das
shrl
pushf
xchg
pop
and
addr16
sub
push
ficoms
stos
clc
dec
data16
int3
pop
xor
arpl
shl
sbb
mov
push
xor
test
filds
mov
push
mov
xor
adc
loope
jg
pop
addb
sbb
mov
pop
es
mov
cmp
bound
pop
mov
mov
xchg
and
cmc
pop
xor
cmp
xlat
push
pop
lods
cmc
dec
xor
in
pop
and
stos
test
push
lods
pop
sub
dec
jge
sub
sub
add
pop
lods
shll
push
insl
push
xchg
add
push
cmp
sahf
mov
mov
fadds
fists
rclb
sbb
add
dec
jge
lcall
rcrb
les
lods
xchg
xor
nop
stos
push
stos
popa
push
enter
cmp
aam
and
push
and
xlat
imul
data16
xlat
mov
notl
xor
stos
inc
dec
outsb
mov
pop
aaa
std
sbb
ja
scas
loope
out
aas
and
mov
call
loope
shrb
mov
lcall
out
jnp
lret
packuswb
or
fwait
xchg
xchg
mov
in
cmpsb
enter
pop
fwait
dec
pusha
and
cld
mov
and
or
adc
shll
into
push
or
adcb
or
aaa
pop
notb
repnz
loope
adc
sbb
adc
sahf
leave
sbbb
daa
lahf
outsb
mov
push
pmaxub
dec
jecxz
into
dec
jns
mov
in
scas
xchg
lods
rorl
loopne
je
jge
cmpsl
cmp
pop
adc
stos
fdivrs
imul
inc
add
jle
movsl
jo
rcrb
cltd
loop
pop
stos
add
lds
sub
jmp
rcll
add
shrl
insb
test
gs
adc
lret
xchg
rorb
into
bound
mov
dec
clc
pop
es
or
pop
ljmp
mov
dec
shlb
movsb
les
add
push
imul
sub
out
dec
out
in
xchg
pop
pop
jbe
iret
jns
daa
mov
sbb
fbld
cmp
jl
adc
mov
in
adc
hlt
and
cmp
cltd
and
jnp
dec
cwtl
cwtl
adc
nop
fldl
xchg
les
inc
mov
mov
sbb
popf
lock
or
cld
and
imul
pop
nop
dec
adc
push
dec
repnz
loope
cmp
jnp
lret
std
dec
jle
push
movsb
out
mov
mov
pop
ljmp
mov
scas
rolb
decb
cli
test
inc
dec
into
lock
pusha
sti
pop
push
and
inc
jle
push
cmp
pushl
pop
or
fdivr
or
sub
call
repnz
int
xchg
aad
xlat
push
jmp
push
test
daa
shl
mov
xchg
loop
insb
outsb
and
add
or
cwtl
sbb
add
pusha
mov
mov
fisubl
andl
lahf
xchg
sub
dec
mov
mov
xchg
xor
scas
les
pusha
das
out
xor
adc
xor
pop
cld
cmp
loope
cmpl
pop
outsl
push
jle
out
sbb
jo
xchg
inc
pop
daa
js
mov
arpl
popa
sub
xchg
fistl
aad
cmc
pop
les
mov
fs
iret
jecxz
or
lret
sbb
ja
inc
lret
jecxz
or
popa
lret
out
pop
push
jg
adc
push
pop
pop
xor
pushf
cmp
mov
xor
jns
dec
mov
and
inc
add
adc
rolb
inc
push
xor
jecxz
mov
mov
inc
movsl
xor
ljmp
sub
push
nop
mov
pop
fdivs
jno
in
jae
mov
jl
mov
dec
jbe
push
mov
and
test
divl
push
cmpsl
cwtl
fcomip
mov
xchg
sub
lret
lea
iret
clc
jnp
cmp
push
pop
push
lods
dec
jae
pop
xchg
xchg
sub
out
lea
jp
fnstsw
shlb
xchg
cmp
pushf
or
cmp
rcrl
xchg
outsl
sbb
xchg
adc
icebp
jge
int3
int
orl
ljmp
call
dec
or
mov
push
insl
sbb
push
adc
into
cmp
mov
hlt
cmpsl
add
imul
xchg
cltd
pop
faddp
jg
or
fiaddl
cmp
test
jno
pop
cmp
inc
cmp
or
cmp
dec
stos
scas
shll
jbe
sub
jbe
into
cmp
sub
cmp
call
cmpsl
scas
fsts
ja
lock
dec
adc
pop
cmpsb
add
outsl
stos
pusha
data16
adc
addr16
xchg
sti
das
sbb
into
cmp
mov
lods
lods
movsb
xchg
mov
push
fisttps
int
data16
cmp
test
js
xlat
in
push
add
fcoms
adc
push
push
pop
loop
add
add
dec
sub
movsl
jl
cmc
pop
js
push
js
nop
inc
xchg
add
stos
push
loopne,pn
cmp
gs
divl
cmp
adc
dec
hlt
ret
xor
pop
in
loope
mov
scas
lock
aas
pop
push
dec
cmp
gs
les
sub
xor
mov
shlb
sbb
or
cmp
popa
jbe
lea
insb
dec
xchg
dec
mov
pop
ret
jae
lcall
push
cli
dec
jns
call
push
movsb
or
hlt
mov
loope
sbb
lret
adc
fimuls
fidivl
testb
push
arpl
add
and
mov
pop
push
add
out
loopne
lods
divb
sar
insb
call
or
jno
imul
dec
sub
scas
fisubs
imul
mov
adcl
jae
fcmovbe
dec
mov
imul
call
ja
and
pushf
jl
repz
xor
adc
add
sbb
or
lods
stc
inc
movsb
pop
sub
dec
add
leave
cmp
adc
pop
push
sbb
cmp
xor
out
bound
fsts
insb
fsubs
test
xchg
adc
movsl
leave
imul
popf
mov
cld
and
addr16
arpl
xor
mov
mov
push
lock
xchg
sub
iret
jns
mov
inc
roll
pushf
cmp
xchg
stc
shll
and
mov
push
in
loop
fldl
sub
adc
sub
cltd
lret
mov
out
dec
jb
cld
pop
aad
icebp
aam
push
or
popf
mov
ret
pop
sbb
pop
rcrb
or
jnp
les
jbe
cmpsl
jne
icebp
xor
pop
inc
test
mov
xor
ficomps
adc
sbb
mov
dec
xchg
cltd
inc
in
mov
mov
pop
mov
aam
mov
aad
and
imul
jne
out
leave
stos
fmulp
stos
outsb
jne
dec
xchg
enter
dec
loopne
es
xor
and
outsb
shlb
std
jbe
jnp
or
fdivrl
push
lret
sbb
mov
add
testl
loop
ljmp
jl
xchg
jmp
pusha
sub
or
xchg
jo
jns
jnp
pop
cmc
in
subb
jae,pt
sub
mov
ja
or
fwait
xchg
sbb
xchg
out
aam
lret
stc
lock
scas
shlb
scas
sbb
push
mov
rcrb
movsl
movb
cmp
sbb
jnp
leave
enter
pop
pop
or
fcmovnbe
mov
ficompl
lods
pop
std
xlat
or
jl
cmp
mov
jno
scas
call
hlt
sub
popf
imul
cmpsl
cmc
jp
lods
inc
les
pop
ret
stos
lock
dec
mov
fimull
pop
inc
cmp
mulb
adc
jno
rcrl
mov
movsb
pop
xlat
or
mov
fsubrs
sahf
pop
lahf
cmp
js
jbe
add
adc
mov
movsl
retw
fadds
scas
xchg
fldcw
repnz
in
int3
xchg
mov
dec
mov
sarb
push
je
imul
inc
cmp
cmpsl
rcrb
fldl
leave
cli
fs
mov
mov
mov
xchg
jae
into
popa
xchg
loop
call
push
fstp
js
lahf
xchg
in
daa
pop
xor
lods
xchg
dec
not
or
movsl
or
mov
jo
or
xchg
in
xor
mov
jns
xor
loopne
int3
daa
sbb
lock
lahf
sub
cs
mov
push
adc
xchg
dec
clc
lock
mov
sbb
aaa
loop
pop
aad
iret
push
aaa
mov
int
adc
ret
das
cmp
movsb
fbld
dec
push
sub
mov
xchg
dec
sub
xchg
sub
dec
fidivl
adc
stos
cli
pop
lock
xchg
inc
popa
lret
jns
or
addb
jmp
testb
lcall
test
push
jb
xchg
xchg
pop
add
or
das
pop
test
xlat
in
enter
cli
in
fptan
and
repnz
je
adc
fidivl
push
dec
imul
dec
cmc
js
mov
fistpll
mov
cs
inc
es
in
mov
pop
add
in
push
fs
mov
jl
push
into
jbe
std
ret
inc
fstpl
outsb
fcoml
loop
mov
pop
int3
ljmp
xchg
or
mov
xchg
sbb
cmp
inc
xchg
mov
cltd
int3
sub
inc
out
in
and
push
and
mov
cmpsb
pop
into
adc
mov
xor
push
xchg
sbb
or
aas
mov
int3
sub
xchg
rorb
ja
pop
mov
sub
into
mov
mov
xchg
sbb
lcall
out
add
mov
or
faddl
sbb
loop
dec
ret
mov
xchg
testb
inc
fidivrl
stc
icebp
adc
popa
lock
xor
popf
add
outsb
dec
mov
enter
imul
cld
sbb
popa
imul
cmp
sti
mov
pusha
and
xchg
sti
jmp
movsb
cltd
pop
xchg
aam
dec
shlb
or
arpl
shl
iret
dec
mov
mov
cmp
mov
xor
popa
pusha
dec
ja
xchg
xor
lods
pusha
insl
mov
aad
in
push
pop
push
inc
out
fisttpl
daa
in
sub
pop
imul
xchg
daa
lahf
fsubrp
hlt
ror
dec
mov
ret
inc
jge
idivb
daa
addr16
clc
insl
dec
pop
sbb
insb
fs
scas
pushf
sub
xlat
mov
lds
test
mov
xor
pop
jbe
leave
push
jbe
mov
vpunpckhbw
stc
dec
inc
or
fdivrl
cwtl
dec
cmp
dec
outsl
and
pop
ss
fists
rorb
mov
out
inc
cmc
adc
and
data16
xor
jmp
pop
ja
or
sbb
js
test
add
inc
sub
in
cmp
or
cmp
js
mov
addr16
out
movsl
sub
cmp
cmp
das
popa
jmp
fwait
add
andb
fidivs
ss
into
xchg
adc
icebp
cmp
pop
push
jmp
cltd
jb
je
mov
jmp
adc
pop
push
xchg
jg,pt
cmp
xor
fsubrs
push
sbb
push
add
pop
fnstenv
fistpl
xchg
outsb
sub
adc
dec
inc
not
xor
jae
adc
jns
hlt
ja
add
test
and
and
aas
and
lcall
test
jb
cmpsb
addr16
inc
push
push
pop
sbb
mov
imul
std
and
sarl
sbb
loop
fcmovne
adc
call
clc
xchg
or
fcmovne
sbb
nop
xchg
jge
cmc
insl
add
scas
daa
jl
je
push
data16
imul
movsb
xor
jb
adc
divb
mov
int3
orb
add
test
mov
adc
mov
cmp
adc
xor
mov
jge
lea
mov
out
clc
in
inc
rclb
xchg
aam
mov
jo
sbb
pop
in
push
cli
fmull
pop
ret
rorl
jmp
xrelease
or
in
fwait
lods
xlat
push
int
lcall
and
cmp
int3
pop
addr16
add
arpl
sbb
mov
mov
and
jl
or
lahf
xchg
and
adc
pop
mov
pmuludq
pushf
jb
arpl
jmp
cli
call
xchg
jg
jmp
sbbl
mov
xor
ret
popf
sti
pop
inc
cmpsb
test
repz
inc
mov
nop
dec
push
ljmp
insl
and
sub
cld
sbb
push
shlb
inc
jg
scas
imul
pusha
cmp
andb
dec
and
fsubp
sub
rcr
push
in
jge
out
pop
cmp
push
std
popf
dec
int3
or
fidivrl
sbb
stc
nop
iret
sbb
inc
stos
push
or
pop
xlat
frstor
test
in
inc
lret
push
and
setnp
loope
push
mov
loopne
jbe
xor
dec
xchg
push
inc
popf
xchg
testl
inc
nop
ret
mov
iret
jo
loop
clc
sub
arpl
adc
out
shrl
push
ds
ljmp
movsb
xor
add
sbb
cmp
fstpl
out
mov
rclb
cmpsb
push
mov
jl
jg
mov
pop
jp
cltd
fcmovnb
nop
adcl
test
ja
xor
outsl
dec
jg
cmp
aas
loope
pop
push
sub
adc
pop
leave
sbb
fdivl
addr16
mov
and
adc
in
insl
push
pop
in
and
loope
mov
movsl
mov
out
rclb
pop
pushf
call
pop
xchg
dec
cmpsb
or
gs
mov
rcpps
aad
xor
inc
sbb
imul
mov
les
lret
in
jno
and
popa
loope
sarb
xchg
push
addr16
incl
add
push
scas
subb
mov
or
insb
push
cli
push
jmp
mov
mov
xlat
pop
mov
leave
jmp
sub
data16
ficomps
lcall
aam
mov
mov
adc
inc
xchg
enter
mov
pop
jmp
in
test
pop
xor
or
jns
xor
adc
add
sub
fnstcw
add
lock
adc
mov
cmpsb
pop
dec
lcall
int3
pop
and
jns
gs
sub
add
jg
lds
scas
dec
in
neg
scas
jbe
mov
mov
jecxz
mov
sbb
sub
push
leave
jmp
jg
cltd
xor
sbb
mov
adc
jmp
xor
xchg
test
lock
mov
jmp
lret
fs
mov
outsl
aam
inc
test
cmp
add
lock
mov
int3
cmp
xorb
pop
xor
pop
leave
xchg
add
mov
pop
insl
mov
out
shl
arpl
jnp
test
fistps
jns
push
andl
js
je
loop
gs
fldenv
mov
pop
aam
add
or
pop
lock
sub
nop
and
stos
mov
jp
shl
xor
fxch
adc
jnp
fstps
jg
pop
xchg
in
rcr
inc
cltd
add
ret
fnstcw
pusha
mov
shll
jmp
nop
rol
pop
movsb
rcr
cs
adc
mov
in
jae
fcompl
imul
jmp
imul
fcompl
mov
inc
or
add
mov
xchg
pop
mov
push
sub
repz
faddl
and
dec
fnstenv
xor
sub
daa
idiv
mov
sbb
je
je,pt
xchg
mov
addb
xor
iret
jae
shll
roll
dec
adc
pop
insb
mov
pop
mov
insb
rclb
sahf
stc
push
jl
jmp
pop
stos
movl
xor
pusha
dec
pop
add
iret
jb
jns
out
cmp
pop
sti
mov
xchg
iret
les
push
aas
or
popa
jns
xlat
pop
sti
cwtl
push
mov
pop
call
mov
test
inc
inc
in
outsb
mov
mov
mov
cmc
jge
fs
xchg
test
sub
jp
jb
inc
scas
fisubrl
hlt
mov
mov
push
subb
sub
add
sbb
jl
lcall
stc
call
dec
pmaxsw
lcall
movsb
fs
aaa
aas
mov
mov
and
std
ss
mov
push
and
cmp
sub
fistps
mov
pop
dec
inc
mov
sub
cltd
jg
xlat
xor
pop
dec
idivl
adc
gs
pusha
push
dec
je
lds
stos
fdivrl
add
mov
xchg
jo
jp
nop
jp
inc
push
vprotd
dec
stos
and
mov
xchg
sub
jmp
daa
xor
ss
dec
insl
call
ja
cmp
std
pop
cli
lock
stos
inc
das
imul
push
jg
mov
inc
xlat
inc
sbb
outsl
ret
xorl
shrl
incb
jmp
ja
sub
lea
jne
sub
repz
in
movsb
dec
mov
push
decl
jne
cmp
dec
and
sbb
shrl
dec
imul
mov
adc
mov
mov
xor
add
inc
movsb
repz
nop
aam
aad
push
or
stos
push
sub
inc
dec
loope
int
ret
push
test
mull
or
loop
and
xchg
aad
xor
sbb
movb
enter
insl
shlb
popa
inc
call
fidivrl
mov
inc
loopne
sbb
mov
add
xchg
push
stc
movsb
or
out
pop
mov
into
sti
daa
or
jo
push
loope
pop
cmp
push
xlat
addr16
cmp
dec
inc
or
jp
iret
adc
sbb
and
fsubrl
insl
pop
bound
in
sub
pop
push
add
pop
test
mov
in
mov
mov
and
adc
insb
push
xchg
das
popf
add
dec
out
movl
sti
lcall
sbb
mov
jo
je
daa
mov
es
add
xchg
rcll
ds
loop
into
jecxz
add
jmp
out
adc
cmp
and
jle
dec
xchg
and
mov
mov
stos
push
sar
push
repz
hlt
sbb
and
cli
push
inc
cmp
jge
call
outsl
mov
inc
jp
stos
int
xor
lret
cld
test
jo
mov
popf
dec
out
sub
test
icebp
dec
fistl
rcrl
mov
dec
mov
xor
push
vcompresspd
ret
adc
out
ja
iret
pop
outsb
inc
xchg
and
mov
xchg
cmp
lcall
dec
mov
iret
jbe
sbbb
mov
xor
jns
pop
xlat
loopne
mov
std
andb
sbb
ss
lods
add
or
mov
sbb
sbb
mov
xorl
rcll
sub
addr16
nop
mov
mov
imul
inc
xor
mov
fwait
adc
imul
icebp
in
inc
pop
inc
aas
pop
adcb
test
xor
cmp
push
mov
enter
add
arpl
or
incb
jl
addr16
dec
dec
xchg
loope
jno
nop
int
insl
test
jmp
and
mov
xchg
lcall
scas
cmpsl
popf
sub
or
pop
aaa
mov
daa
inc
clc
fcmovnbe
jnp
xchg
loope
and
xchg
rcrl
cmp
pop
fadd
insl
lret
and
mov
mov
js
loopne
pop
test
push
add
inc
mov
stos
int3
or
sub
pop
jne
mov
and
iret
jno
lret
xor
int3
add
lock
gs
rcl
scas
jb
and
xchg
in
inc
fstpt
add
aam
xchg
cmpsb
movsb
add
aam
jp
cwtl
or
movsl
jb
lcall
and
or
adc
mov
cmpsb
cmc
ja
int3
mov
sbb
cli
sbb
xchg
mov
add
cmpsb
int3
xchg
or
cmp
int
xor
int
rolb
jecxz
mov
mov
test
sbb
mov
lock
push
outsl
cmp
and
pop
bound
dec
int
jp
and
xchg
push
rorb
and
leave
mov
and
pop
in
mov
push
imul
inc
sahf
out
movsb
add
sbb
and
mov
mov
mov
stos
aas
push
call
push
push
jbe
push
sbb
outsb
cwtl
sub
in
dec
int3
sbb
add
cmpl
std
sbb
imull
aad
and
cmp
xchg
push
add
fdivrp
jecxz
add
lods
mov
out
in
lods
pop
xchg
push
sarb
aas
sbbb
shrl
test
push
mov
xlat
mov
rolb
mov
add
sub
shr
test
jmp
popf
pop
enter
lods
dec
hlt
mov
adc
out
pop
mov
jmp
stos
mov
push
dec
imul
inc
insb
test
dec
push
mov
pop
test
vpmovmskb
cmp
cmp
shr
pop
cmp
sbb
js
lret
inc
inc
jbe
addl
and
xchg
cmp
ss
xor
call
daa
outsl
and
sub
xlat
es
add
sub
jne
xor
arpl
xchg
pop
adc
aad
mov
pop
xchg
add
mov
jo
or
adc
ja
imul
mov
and
stos
mov
es
out
push
sbb
push
int3
jns
pop
test
cmc
dec
ss
lods
das
ljmp
fs
cld
pop
not
sub
mov
icebp
sbb
shlb
rol
mov
sub
movsb
aas
aas
mov
div
push
ret
aas
movsl
pop
hlt
test
jge
ficomps
or
aad
xor
enter
mov
dec
arpl
push
sbb
xchg
and
jno
scas
mov
mov
jmp
sbb
mov
cmp
loope
xchg
mov
add
cmp
pop
cmp
jecxz
pusha
dec
mov
sbb
xchg
jge
imull
dec
ja
insb
pop
fbstp
cmp
mov
xorb
sarl
sbb
in
je
push
adc
rolb
out
ret
jecxz
out
into
jbe
jmp
rorl
nop
mov
popa
jge
ja
push
xor
pop
inc
fwait
inc
jns
push
mov
stc
xchg
cmp
adc
std
call
test
jecxz
dec
aam
inc
test
or
or
popa
jmp
mov
in
cmp
ss
mov
nop
push
popf
cmp
in
xchg
popa
enter
xlat
enter
pop
cmp
mov
mov
lahf
add
jecxz
aas
sbbb
and
mov
jne
lret
shll
ds
mov
xor
push
mov
insb
int3
imull
cmpsl
push
xchg
fmull
inc
push
mov
fs
xchg
xchg
and
jbe
pop
lahf
sbb
stc
inc
or
int3
scas
testb
xchg
lcall
jmp
jo
xchg
jl
push
pop
mov
dec
xor
scas
in
cmpsl
popf
jb
cmp
push
sahf
mov
mul
xor
push
in
in
push
xchg
sarl
cmp
sarl
xchg
dec
repz
or
xor
icebp
aaa
adc
pop
pop
cmp
pop
add
mov
idivl
jo
inc
mov
mov
push
lods
mov
push
push
sti
sub
sbb
add
cmpsl
mov
dec
test
push
pop
popf
aaa
mov
in
add
jg
or
mov
xor
or
cmp
stos
out
pushf
insl
data16
fbld
into
and
out
fwait
cli
into
rcrb
mov
in
or
lret
cmp
jae
fnstsw
push
pushf
jg
jg
or
xchg
arpl
and
mov
iret
jecxz
adc
into
ljmp
mov
mov
fsubrs
cmp
fdivrs
mov
pop
add
push
cmp
push
mov
divl
mov
bound
lahf
into
test
pop
test
fstps
mov
cmpsl
dec
dec
pop
jge
xchg
fsub
xor
lret
pop
mov
cli
inc
nop
lods
and
ds
inc
adc
sti
jno
jnp
std
mov
sbbb
insl
and
and
push
inc
mov
pop
push
es
push
aas
cmpsl
jbe
pop
jge
mov
lea
xchg
movsl
std
sub
pop
pop
mov
sub
rcr
push
out
mov
mov
out
pop
xlat
or
sbb
outsb
test
shlb
or
cli
data16
inc
xor
sbb
mov
fsubrl
or
add
adc
or
push
popf
xchg
in
loop
xor
jo
sub
inc
cmpsl
pop
cmp
pop
xchg
push
jmp
or
aaa
int3
aaa
out
push
pop
movsb
lock
push
sbb
push
stos
mov
test
out
dec
lret
add
jl
test
dec
pop
and
out
and
mov
mov
mov
imul
in
xlat
movsl
or
inc
aaa
jecxz
mov
in
push
call
jmp
cmp
jp
sbb
xor
dec
loop
add
lds
je
push
in
dec
in
xchg
mov
outsb
outsl
aad
or
mov
sti
insb
roll
inc
xor
adc
adc
rorl
test
iret
push
hlt
ljmp
lret
dec
dec
pop
mov
xor
inc
pop
push
ret
insb
lods
adc
xchg
sahf
or
aas
jae
mov
sbb
outsl
add
mov
dec
incb
jnp
int3
adc
jne
hlt
jo
pop
hlt
fnstenv
ljmp
scas
rcr
out
movsb
and
mov
cmp
sub
andl
sub
rorb
inc
outsb
add
dec
xorl
pop
or
mov
and
into
dec
cmpsb
cwtl
mov
mov
add
outsl
shrb
lock
popa
cmp
xor
pushf
push
sub
mov
out
and
sbb
add
aad
clc
mov
pop
cmp
iret
cmpsb
andl
sub
mov
pusha
or
int
fs
add
lret
je
mov
push
test
cmp
int3
insl
add
add
mov
and
pop
inc
enter
xor
aas
jb
lods
cmp
cld
mov
push
add
xchg
cmpsb
xchg
adc
scas
or
mov
xchg
data16
and
mov
outsb
lock
lret
push
or
xchg
mov
pop
mov
xor
or
hlt
rcll
pop
ret
and
jns
popf
mov
pop
mov
inc
jmp
cmpsb
fimuls
inc
scas
fstpl
cmp
into
std
pop
or
int
xor
adc
mov
or
push
sub
leave
rcrb
dec
push
nop
mov
adc
dec
add
mov
flds
adc
or
cmp
sbb
cvtdq2ps
loopne
lret
push
negl
inc
and
repz
pop
in
dec
mov
dec
aaa
sub
lcall
stos
sub
popa
xchg
repz
adc
ljmp
fdivl
adc
push
jecxz
dec
sub
lcall
jno
cmpsb
lahf
xor
push
in
repnz
and
pusha
mov
lock
push
jo
or
mov
sub
cmp
inc
xlat
pop
and
xor
fbstp
adc
mov
inc
mov
adc
or
pusha
hlt
int3
cmpb
sub
imul
jp
add
movsl
movsl
int3
mov
jecxz
pop
lods
test
xlat
xchg
outsl
rcrl
sbb
out
mov
mov
add
iret
fstpl
pop
stc
xchg
mov
inc
add
push
mov
mov
call
mov
ss
pop
mov
ret
mov
cli
mov
dec
rorb
cmpsb
fisubl
xor
pop
loopne
inc
or
add
ret
sahf
cwtl
push
sbb
push
sbbl
xchg
push
jmp
lods
cmp
mov
mov
rorb
aaa
mov
cs
ret
shlb
xchg
jl
jne
testl
or
lahf
orl
test
stos
sub
into
xchg
popa
pop
and
jl
loop
mov
loopne
sub
rcrb
push
pop
jb
pop
dec
rcl
pushf
fnstsw
in
loope
jl
mov
jl
dec
test
and
scas
add
test
adc
ret
or
out
dec
mov
add
rcrb
or
ljmp
sub
out
lods
fcomp
xchg
or
push
lds
stos
mov
aaa
insl
insl
xor
mov
add
out
jns
gs
jle
or
ret
inc
lds
and
jp
cmp
lahf
jl
inc
lahf
addl
ja
out
or
sub
popf
push
fcomip
push
in
cmp
cltd
xchg
lods
mov
xchg
dec
cmp
das
sub
xor
fwait
jg
cmp
lods
jge
stos
mov
lea
pushl
jge
into
repnz
test
xlat
sahf
daa
rcr
test
clc
in
sbb
ds
aaa
mov
xor
mov
and
subb
pushf
loop
pop
cmp
mov
ss
or
lret
icebp
sbb
jb
addl
addl
dec
mov
lods
inc
add
addr16
xchg
push
or
mov
cmc
pop
arpl
xchg
xchg
mov
test
jbe
adc
pop
jge
cli
sti
pop
fcos
sub
shrl
in
push
aad
adc
fidivrl
sbb
fiaddl
movsb
and
popa
xchg
lret
or
dec
test
sbb
addr16
inc
insl
outsl
jle
jp
in
xchg
cld
fmull
xchg
mov
inc
scas
ret
outsl
test
cltd
pop
fstps
add
shlb
sahf
sbb
mov
push
dec
inc
stos
cli
enter
cmp
mov
push
dec
lahf
clc
cmp
xor
stos
add
xlat
cmp
jmp
mov
or
push
adc
movsl
clc
xor
xor
cmp
loop,pn
xchg
mov
insl
outsl
je
inc
jp
pop
adc
ss
rcll
stc
dec
or
insb
outsl
add
testl
out
lret
das
lahf
or
xor
rcl
and
lods
mov
fadds
cmp
lock
cltd
sub
sub
push
mov
jne
mov
add
ret
data16
fstpt
pop
ss
xchg
insb
cmc
sub
into
mov
insl
mov
xchg
dec
mov
push
test
pop
test
and
shll
jnp
sbb
jecxz
adc
adc
arpl
shl
xlat
test
jecxz
mov
fsts
lods
mov
and
jmp
lret
add
loop
js
stc
cmpsl
outsb
dec
dec
or
or
cmp
fs
mov
ss
or
add
ficompl
xchg
cmp
aaa
lcall
push
xchg
mov
or
int3
mov
ret
push
stos
and
jle
pop
pop
adc
jnp
mov
pop
bound
jmp
bound
hlt
sub
stc
loopne
loop
or
inc
in
or
jl
lods
popa
mov
dec
adc
mov
mov
adc
shr
and
jle
bound
adc
push
rorl
pusha
out
push
iret
dec
mov
scas
bound
jo
and
icebp
imull
fwait
ss
shll
pushf
inc
das
or
je,pn
pusha
mov
push
and
lret
sarl
sub
je
cld
sub
cld
xorl
xor
lock
mov
adc
mov
loop
arpl
mov
into
inc
outsl
pop
pop
stc
inc
sub
sbb
cltd
nop
push
out
data16
mov
sbb
sbb
lret
or
cmp
fwait
aam
add
inc
and
xchg
jmp
cmpsl
fldt
inc
and
cmp
fwait
js
inc
pusha
or
cs
sub
sahf
or
stos
fnstenv
add
mov
jp
jp
inc
add
mov
aad
je
ja
lcall
sbb
sahf
jne
out
mov
mov
push
lret
std
roll
in
in
hlt
test
xor
movsb
outsl
inc
cmp
mov
cmp
jnp
scas
adc
jge
cld
je
lods
lahf
stos
dec
and
je
insl
push
icebp
mov
loop
mov
decl
push
adc
test
or
jnp
sub
pop
das
mov
mov
mov
leave
inc
into
fldt
xchg
mov
repz
xlat
push
and
or
repz
std
xor
xchg
fnsave
ret
adcl
cli
inc
ds
jg
push
adc
sub
push
adc
ss
dec
fcoms
mov
jge
mov
repnz
xchg
mov
xchg
lods
cwtl
clc
pop
sub
inc
daa
arpl
out
cmp
repz
jp
xchg
cwtl
sbb
mov
ret
jae
push
int3
jmp
addr16
test
sub
rcrb
add
pop
test
stos
dec
inc
imul
hlt
pop
adc
mov
das
mov
push
mov
call
ljmp
pop
xchg
jp
int
mov
sub
mov
sbb
mov
in
xchg
pop
popf
popa
in
in
insl
add
scas
mov
mov
adc
push
sub
test
lea
push
shrl
outsl
mov
into
dec
andl
cmp
dec
loopne
aaa
jb
pop
sti
sbb
inc
fwait
imul
mov
fcompl
jns
in
add
cmp
add
push
mov
xchg
xor
ds
daa
rclb
sbb
dec
out
and
xorb
pop
gs
popf
sub
fcoml
scas
mov
xor
nop
popa
mov
pop
xor
lods
mov
jmp
out
cld
sub
es
sti
dec
ja
push
and
pop
push
ret
pminsw
cli
mov
repnz
pop
mov
stos
ror
xor
popa
push
andl
rcll
push
push
push
fbstp
stos
cmp
mov
fsubr
test
mov
inc
pop
stos
add
aam
xchg
adc
xor
pop
xor
xor
and
mov
cmp
je
test
push
arpl
pop
lods
mov
ss
mov
ljmp
lea
daa
push
adc
cltd
dec
or
cld
and
jne
sbb
mov
iret
mov
jg
insl
imul
cmpsb
mov
adc
push
add
int3
add
mov
jg
lret
mov
call
dec
push
pop
inc
sahf
repz
or
mov
daa
rolb
ret
fsubl
sbb
or
adc
ffree
xchg
call
mov
sub
dec
jmp
scas
and
inc
fisubrl
mov
push
lcall
out
int
and
pop
aam
jmp
xchg
dec
popa
nop
push
clc
cmp
bound
iret
fcmovnbe
mov
fwait
jo
cmp
jbe
movsl
scas
push
jecxz
cli
pushf
dec
mov
push
push
je
push
cld
imul
setbe
sub
gs
aaa
pop
ret
jp,pt
out
jno
adc
ret
jl
inc
clc
xorb
mov
adc
outsl
cli
mov
mov
pop
and
jp
adc
cmp
adc
clc
pop
cmc
push
stos
adc
aad
xchg
out
xchg
cwtl
dec
cmp
dec
cmp
pop
repz
fisubs
imul
stc
fldenv
lock
lret
mov
and
shl
sub
push
rcll
lcall
push
mov
push
es
fmulp
popf
insb
inc
and
stc
dec
js
adc
mov
je
fs
mov
xor
sub
jl
and
dec
inc
sub
lcall
fisubrs
out
cmp
ror
ret
mov
mov
adcl
out
or
pop
cmpsl
dec
sbb
mov
xchg
das
mov
push
repnz
fadd
shll
add
fcmovb
sub
add
jno
popa
sub
mov
dec
lret
rcll
sbb
out
ss
inc
movsb
and
stc
stc
test
jl
jbe
sub
sbb
outsb
cmp
mov
adc
cwtl
imul
jle
addb
jge
and
cwtl
in
add
inc
imul
jg
jns
jmp
pop
pop
test
int
repnz
push
outsb
cmp
data16
jecxz
dec
js
out
test
jge
jb
cli
mov
cmp
enter
cmp
into
cmp
jmp
inc
cwtl
ljmp
cmp
aad
lret
cmp
xor
jnp
add
stos
xor
push
pop
dec
int3
fmuls
or
inc
aas
fiadds
dec
sbb
pop
dec
lods
rcrb
out
and
aas
ret
adc
and
dec
rcll
ja
aaa
lods
xchg
dec
xchg
cld
dec
mov
test
sub
stos
imul
lods
xchg
lret
xchg
inc
mov
mov
cmp
cli
inc
in
popf
or
shlb
inc
add
pop
les
mov
imul
ljmp
fidivl
fcmovnbe
sub
inc
leave
test
aam
stos
adc
push
xor
or
and
mov
and
push
out
mov
mov
jecxz
loope
dec
cmpsl
insl
bnd
mov
loope
mov
sarb
push
ds
add
cld
xchg
dec
dec
jae
jbe
ja
repnz
je
add
mov
cmp
ds
mov
test
out
dec
pop
test
dec
shll
aas
jno
push
push
mov
fdivrl
cmpsl
ja
adc
hlt
mov
clc
dec
in
inc
cmp
mov
or
jge
cwtl
push
dec
dec
es
push
sub
jecxz
cmp
pushf
dec
out
andl
jmp
jl
jl
jmp
xchg
lods
mov
fwait
jecxz
xchg
add
inc
xor
fadd
pop
xlat
push
shll
fs
inc
pop
dec
lods
xacquire
mov
cmc
pop
mov
idivl
insb
mov
les
mov
push
mov
ss
lods
inc
sbb
aas
adc
lret
lcall
sbb
mov
xchg
xlat
push
pop
lods
stos
lds
ja
dec
test
into
sbb
movsl
adc
inc
sub
stos
fisubrl
jne
cli
push
sti
bsr
sbb
jb,pt
jp
lods
xor
loopne
lcall
hlt
dec
dec
jnp
sub
shlb
ja
pop
stc
loop
sbb
add
mov
jae
mov
shll
push
out
mov
insb
cmpsb
bswap
xor
mov
pop
mov
ret
adc
je
xor
xlat
add
pop
jg
aas
adc
and
jns
xchg
insb
fsubrp
sbb
movsl
xlat
ss
jl
xchg
jae
out
pop
cmpsb
mov
out
mov
pop
enter
and
in
xchg
or
into
or
outsb
and
xor
sub
cmp
mov
push
adc
inc
ficompl
xchg
int
mov
jle
enter
mov
imul
adc
sub
cmp
int3
enter
hlt
loop
hlt
xchg
xor
and
arpl
cmc
sarl
fwait
scas
xor
cmp
jmp
mov
insl
insl
jecxz
xor
leave
into
fnstsw
loop
mov
sub
ds
std
cmp
sbb
jl
adc
inc
mov
icebp
movsb
push
sbb
gs
pop
test
mov
and
and
push
jb
sbb
pop
sub
out
sbbb
ror
xor
sbb
bound
jle
inc
addb
into
sti
call
iret
cli
rcll
mov
outsl
jae
pusha
xor
dec
iret
fdivrs
arpl
add
add
je
and
subb
mov
mov
lock
adc
in
mov
cmp
icebp
pop
cmp
roll
repz
shll
std
push
pop
cmp
mov
and
mov
sbbl
stos
mov
xchg
rcrl
outsb
sub
xchg
clc
push
mov
adc
push
adc
repz
dec
or
inc
xor
jmp
in
push
ficoms
sbb
xchg
jns
jo
cmp
mov
sti
dec
shlb
and
push
stc
inc
sub
cltd
cmpb
pop
cmpsl
pop
insl
lds
jp
sbb
fistl
aas
daa
pusha
mov
push
leave
xchg
clc
inc
call
andb
add
inc
or
lret
mov
int3
gs
arpl
xchg
test
aaa
push
retw
inc
adc
popa
mov
scas
test
shrl
cmp
bound
or
pop
jnp
sub
jecxz
je
mov
data16
fsubr
sbb
push
icebp
pusha
push
mov
daa
dec
push
push
pop
push
int
jmp
data16
and
jne
shlb
sahf
sbb
mov
xorl
scas
push
push
inc
rorb
sub
scas
clc
fidivl
pop
adc
push
addb
xor
faddl
xchg
adc
daa
jnp
cwtl
aam
sub
into
cmp
xor
cltd
in
sub
out
popf
shlb
xor
scas
scas
dec
pop
cmpsl
xchg
enter
imul
das
imul
imul
in
decl
out
add
mov
pop
sub
and
decl
inc
jp
jne
data16
jnp
leave
sub
lcall
out
mov
repz
imul
fxch
mov
cmpsb
mov
push
in
mov
lret
or
adc
addl
jns
int3
lock
sub
add
stos
scas
xchg
outsl
out
sbb
pop
pop
lock
ljmp
lret
adc
dec
sub
mov
adc
ds
lcall
int
inc
sbb
mov
lds
in
add
daa
jle
lret
sbb
call
out
scas
jo
and
ret
push
jno
shrb
mov
add
fistl
or
dec
sub
add
or
jo
xchg
xor
jg
sub
adc
gs
rol
ja
outsl
lea
push
and
mov
nop
push
xchg
mov
sahf
pop
jnp
cmp
adc
sbb
icebp
test
int3
pushf
and
xchg
lock
mov
call
rcl
stos
mov
pop
push
push
stc
mov
and
push
sub
outsb
scas
cmp
pushf
sahf
sbbb
pop
jnp
xor
fidivs
cmc
lahf
idivl
gs
cmpsl
lea
mov
and
cli
cmp
outsl
dec
in
rdpmc
jge
insl
mov
jbe
xor
and
mov
lahf
imul
in
or
mov
cmp
into
cmp
jne
rorb
cmp
cmc
lea
pop
push
mov
cmpl
lret
shll
inc
and
cmp
inc
jnp
int
mov
pop
in
inc
sbb
mov
rcll
or
scas
loope
mov
jecxz
in
into
leave
mov
pop
repz
jae
popa
in
testl
das
or
andl
push
adc
lods
xlat
cmp
mov
pop
xchg
popf
adc
stos
outsb
mov
sub
xadd
inc
fsts
rorb
cmp
mov
or
movsb
dec
adc
cli
lock
cmp
cmp
icebp
mov
scas
push
aas
xor
out
push
cmp
push
and
les
insb
or
mov
sub
xchg
push
pop
dec
jge
xor
jo
sub
fs
stos
fbld
fidivrl
push
sahf
xlat
inc
and
in
lods
pop
aad
stos
lea
cmovge
shrb
push
out
loope
mov
xor
test
int3
pop
jle
and
mov
outsl
jg
test
les
push
cmp
daa
xor
decl
mov
orb
push
xchg
xlat
sbb
rcll
and
or
addr16
jno
into
push
cmp
cmp
shl
orl
fdivs
out
movsb
cmpsb
push
out
outsb
cmp
mov
loop
mov
xor
andb
dec
es
loopne
out
in
imul
xchg
inc
in
pushf
fsqrt
les
cmp
lock
mov
jecxz
jns
push
push
sub
push
lods
cmp
aad
lret
push
nop
out
daa
fwait
arpl
fsubr
xchg
or
dec
lahf
out
movsl
les
lods
aad
mov
mov
repz
incl
dec
stc
cltd
xchg
out
mov
mov
incl
xor
inc
into
stos
inc
or
mov
jge
or
fwait
xchg
loop
mov
fucomi
insl
dec
adc
cmp
and
sub
push
xchg
mov
stos
push
outsb
xor
clc
dec
stos
pop
roll
divl
fs
add
jg
xchg
and
jge
out
push
cmp
out
ss
sub
jnp
cmp
sub
out
pushf
fdivs
cmp
imul
mov
fisubrs
push
enter
std
incl
push
imul
aam
fmul
fsubl
sub
add
adc
rcll
adc
jnp
mov
test
or
inc
popa
insl
aas
repz
or
jae
loop
and
es
sbb
xor
mov
jnp
xchg
push
dec
sbb
test
in
imul
insl
xlat
loopne
cmc
dec
cmpsl
enter
pop
inc
push
jecxz
int
mov
add
aam
data16
pop
adc
icebp
fstl
fwait
negl
adc
test
cltd
cltd
sbb
adc
imul
std
mov
in
into
loopne
and
loop
loop
add
scas
push
pop
out
stc
jecxz
out
pusha
inc
in
bound
jae
and
sti
mov
out
cs
mov
loopne
inc
aas
out
adc
sbb
cmp
aas
cmp
push
sti
leave
fnsave
jnp
mov
lods
fwait
ja
dec
add
outsb
xchg
arpl
add
call
aaa
sbb
imul
jb
mov
stc
cs
insb
loop
test
fldl
mov
mov
cmpl
pop
mov
adc
fs
and
lock
sbb
adc
push
test
scas
loope
inc
and
pushf
rclb
mov
adc
jo
aaa
push
cld
in
mov
push
cmp
aaa
dec
jmp
mov
testb
dec
or
mov
lods
call
add
arpl
dec
sbb
in
out
xchg
mov
loop
push
sbb
loope
sarl
jle
lcall
or
xchg
cltd
and
mov
mov
mov
jl
inc
fnstenv
fcomps
mov
clc
dec
in
push
mov
mov
out
addb
mov
mov
dec
loopne
je
ficoml
nop
roll
dec
mov
xor
push
xchg
mov
aam
dec
push
xor
adc
fs
in
out
xor
adc
inc
lcall
ljmp
cld
or
push
insl
xor
push
repnz
mov
jge
sub
fidivrl
mov
bound
sub
push
lock
ret
sbb
loopne
xor
jmp
adc
mov
int3
push
pop
mov
lea
sub
aas
std
into
xor
push
fiaddl
lcall
mov
and
fadds
cmp
clc
sbb
jb
lret
insb
push
cmpsl
pop
and
inc
sbb
mov
push
bound
or
sbb
or
xor
xchg
dec
in
and
inc
mov
leave
mov
mov
push
inc
mov
jnp
outsl
fcom
or
aad
stos
bound
into
mov
mov
enter
push
fldcw
cmp
jmp
jle
dec
aad
clc
jge
mov
bound
cs
mov
inc
hlt
enter
adc
ss
sbb
sub
mov
xor
rcl
and
repnz
mov
xor
ss
sbb
xchg
sbb
mov
hlt
dec
jnp
pushf
jmp
adcb
push
sub
cmp
jne
rcrb
lret
or
shlb
xor
jl
pop
movsl
arpl
fcmovnb
ret
pop
pop
mov
fistpll
inc
mov
sub
mov
or
push
cltd
cli
daa
in
push
or
mov
lods
sub
xchg
jge
sti
int
aad
into
pop
and
insl
inc
ret
xor
cmp
xchg
loope
push
sbb
sub
pop
rclb
cmpl
cmp
dec
jb
loop
rclb
mov
hlt
or
je
out
int3
cmp
adc
jns
sbb
mov
inc
fstpl
vpmaxub
push
jne
push
xchg
int3
in
xlat
cmp
pop
insb
das
jns
jo
out
les
jl
cmc
clc
pop
je
inc
add
xor
dec
mov
insl
dec
out
push
xchg
pop
movb
rcrb
sahf
mov
imul
pop
bound
mov
mov
lods
bound
mov
daa
dec
les
inc
adc
lret
js
outsl
ds
xor
xchg
push
cli
xor
mov
leave
insl
mov
mov
or
jge
cmpsb
imulb
clc
pop
stos
adc
pop
mov
lock
inc
cs
jne
andb
mov
add
lahf
inc
mov
jb
iret
pop
lret
and
test
xchg
mov
jge
adc
mov
shll
push
mov
test
add
sub
xchg
push
ja
mov
pop
std
adc
rorl
out
cmp
jo
mov
aas
shll
mov
dec
mov
cmc
and
add
sub
mov
or
lea
pushf
jnp
sbb
xchg
das
mov
adc
inc
inc
mov
jae
mov
push
idivl
stc
push
addr16
cmp
push
xchg
or
dec
daa
pop
imul
lea
mov
sub
xor
dec
xchg
in
pop
pop
cmp
push
sub
sahf
pop
mov
jns
movsb
cmp
xchg
mov
arpl
mov
sbb
std
mov
leave
sar
add
fsts
hlt
cmp
idivb
push
mov
rorb
dec
rol
adc
jne
xlat
ds
popf
sub
add
add
mov
sti
out
icebp
cli
lret
fstps
out
push
mov
dec
clc
lds
lea
add
jle
lret
jns
xor
jmp
mov
inc
xchg
loopne
fldt
aas
ret
push
sbb
pop
sti
jge
mov
pushf
jae
arpl
jb
add
cld
subb
fcoml
int
xchg
xor
stos
ds
adc
int
scas
outsb
mov
push
inc
xor
xchg
flds
push
rcrb
insl
daa
pushl
jmp
sub
movsl
notb
and
jns
jne
sahf
fcmovu
into
inc
mov
inc
and
mov
pop
dec
ja
loop
dec
sbb
mov
push
push
lods
fisttps
inc
jne
add
out
nop
lds
movb
out
push
jbe
lods
loopne
xchg
sbb
out
stos
cwtl
xchg
pop
or
movsl
push
into
push
test
cmc
sub
jle
lea
xchg
test
and
mov
stos
inc
push
mov
imul
cli
into
insl
popa
sbb
les
out
fdivl
dec
scas
xchg
ja
adc
ret
pop
push
icebp
mov
jge
and
mov
xchg
punpckhwd
lret
xchg
cmp
adc
jae
mov
add
xchg
jno
cwtl
movsl
bound
movups
ficomps
daa
xchg
cltd
lret
lds
jp
js
lds
ret
push
jno
dec
add
xor
out
rorb
sbb
cmp
jo
jnp
and
mov
push
dec
sub
scas
push
jg
mov
lds
enter
jmp
push
and
arpl
cmpsl
in
inc
in
push
dec
or
fnstsw
scas
aaa
gs
mov
adc
jno
mov
xor
mov
inc
sbb
adc
cs
sub
scas
les
into
and
jl
lea
sti
mov
mov
sarb
jp
out
mov
push
cld
ret
inc
dec
cs
rorb
adc
sbb
xorb
mov
push
cmp
sub
push
adc
adc
fdivl
cmp
test
inc
out
scas
cmp
cmp
jns
inc
xchg
xlat
outsl
cmpsb
pop
je
ret
cmpb
xor
jnp
pop
sub
mov
out
mov
xlat
daa
aas
dec
cmp
loope
or
cmp
xchg
lahf
and
jecxz
and
inc
push
ficoms
lea
mov
push
sub
jmp
and
xchg
lea
enter
xor
in
sbb
cwtl
xchg
cmp
loopne
not
in
popf
pop
sub
nop
shl
push
mov
repz
movsl
cs
imul
sub
mov
push
cmp
jne
imul
std
dec
mov
cs
mov
in
jp
les
aaa
add
jnp
add
inc
scas
add
add
rcrb
lds
mov
cmp
sahf
adcb
xlat
rol
jno
add
adcb
push
fsubs
loopne
out
test
and
cltd
test
scas
sahf
and
add
aas
rcrb
jbe
notb
or
pushl
mov
and
movsb
mov
sbb
stos
jl
sbb
lods
jg
fadds
xchg
loop
decl
rep
mov
push
popa
clc
jecxz
mov
shll
scas
or
push
jnp
mov
ja
sbb
nop
or
cmpsl
add
outsl
add
sub
sbb
test
jge
stos
leave
dec
out
arpl
movsb
inc
push
push
jecxz
adc
push
ficompl
mov
and
mov
pop
cli
sub
jbe
add
jnp
pop
arpl
sbb
ss
stc
lret
hlt
cmp
dec
cmp
and
dec
jmp
inc
push
dec
add
mov
arpl
in
outsl
pop
test
add
ljmp
jb
cmpsb
adc
scas
pop
lea
imul
adc
mov
scas
daa
xor
mov
in
outsb
not
jo
xchg
aam
jl
and
dec
xchg
ret
push
sub
outsl
mov
push
sbb
mov
popa
cmpsl
pusha
push
test
dec
addr16
jle
adc
fldl2e
xchg
lds
stos
sub
add
movsl
or
dec
das
cmpsl
insb
ss
lock
into
pop
jbe
pop
addb
enter
mov
dec
inc
aad
dec
addr16
and
or
popl
cmp
das
push
xor
lds
xchg
in
bound
scas
mov
into
mov
iret
sbb
xchg
addr16
cmp
push
bound
xlat
xchg
filds
dec
mov
pop
or
adc
out
in
xor
jne
nop
cs
mov
aad
push
outsl
les
int3
stos
jle
xchg
pop
adc
cmp
xchg
sbb
xchg
mov
inc
lds
adc
out
push
and
mov
push
jnp
sbb
mov
les
outsb
fsubrl
jmp
cli
lods
xor
xchg
push
and
xchg
xchg
pop
repnz
mov
arpl
out
dec
push
jne
xor
fisttps
ds
cmp
jmp
imul
adc
mov
jae
hlt
roll
mov
pusha
test
int
cmp
aam
adc
lods
and
push
lcall
lret
addr16
jb
jno
mov
sub
add
mov
inc
nop
leave
sub
call
imul
push
packsswb
xlat
xchg
dec
popa
and
lahf
jo
lds
cmc
adc
loope
and
jns
popf
jae
shrl
int
add
loope
jbe
mov
xchg
push
hlt
stos
inc
and
adc
push
mov
pop
ss
and
jle
mov
orl
inc
mov
popl
sub
mov
and
mov
cmp
dec
scas
or
dec
cmp
and
xor
into
jg
cmc
lea
lods
jle
dec
fstps
mov
aaa
push
sub
or
roll
and
add
insb
inc
or
imulb
ss
cmp
mov
cwtl
cld
xor
jo
or
mov
in
shl
xchg
insb
cltd
push
jo
fdivrl
ret
out
enter
gs
or
push
enter
test
mov
add
popa
xchg
in
xor
xor
jmp
adc
or
jl
mov
mov
inc
sbb
loope
in
dec
scas
sahf
or
dec
xor
pop
jp
push
or
cli
jnp
lcall
int3
jl
pop
jae
xchg
fbstp
mov
mov
in
scas
sbb
outsb
les
imul
pop
loopne
shr
jbe
icebp
pop
adc
das
cltd
dec
push
das
xor
call
rol
jnp
out
mov
mov
scas
cmp
ret
popl
pop
mov
pop
add
cmp
incb
sarb
jo
sbb
lea
lock
cmc
sub
shlb
push
out
and
popf
addr16
add
fstp
dec
and
xor
lock
jecxz
pop
adc
loope
adc
fdivr
cli
fwait
push
pop
inc
push
jmp
loop
fs
leave
xchg
mov
mov
shl
dec
push
sarl
aam
pop
push
adc
aad
xchg
mov
mov
shrl
inc
and
mov
push
shl
adc
xchg
int3
stos
xchg
pop
and
push
mov
cltd
int
pop
mov
pop
int3
jmp
and
xor
into
lds
out
lahf
rcrb
lcall
test
es
lods
stc
and
mov
addr16
fwait
iret
pop
enter
xchg
xchg
shrl
push
inc
stos
jo
or
in
sbb
push
js
ja
ljmp
loop
outsl
mov
int
xor
and
sbb
movsb
cmp
mov
push
push
test
cmc
add
scas
les
jns
pop
jne
stc
sub
ljmp
ret
insl
inc
mov
xchg
xchg
add
jg
outsb
xchg
and
mov
test
dec
loop
xor
ds
jno
cmp
push
inc
jne
call
cmp
xchg
pop
push
cmp
xor
push
cltd
mov
aad
je
pop
aaa
xchg
adc
push
icebp
sub
mov
int
lods
out
xchg
or
dec
movsl
pop
jge
fs
mov
iret
call
jecxz
into
push
or
mov
mov
xor
call
inc
pop
inc
imul
in
pusha
lods
aad
mov
orb
mov
push
mov
scas
push
inc
cmp
jns
addl
sti
mov
add
gs
inc
int3
into
mov
xchg
scas
pop
xor
les
pop
stos
sbb
outsl
inc
mov
inc
dec
and
xor
stos
fcomps
cmp
sub
xlat
xchg
xor
push
cs
xor
push
or
xor
mov
dec
xchg
or
sbb
mov
stos
aas
mov
imul
icebp
cld
jp
inc
sub
movsl
je
es
sarb
in
orb
dec
nop
xchg
lcall
test
and
popa
repnz
in
add
inc
mov
dec
push
xor
add
jbe
and
icebp
xchg
in
sbbb
sbb
decl
adc
in
and
sti
and
push
cmpsl
ss
mov
xchg
lret
lods
ljmp
add
pop
and
mov
les
cltd
ljmp
and
mov
pop
ret
pop
mov
scas
dec
stos
popa
das
jg
call
stos
push
cwtl
out
cmp
jmp
pop
icebp
pop
mov
call
sbb
sbb
mov
jp
pop
lret
cmp
add
cmp
bound
bound
idivl
stos
das
xchg
mov
inc
push
and
rcrb
mov
sbb
inc
dec
mov
mov
les
pop
loopne
scas
jb
push
fiadds
lcall
mov
movaps
fmul
mov
mov
ja
ret
stc
sarb
lods
push
inc
iret
pop
and
subl
out
mov
sbb
pop
ficompl
xchg
xor
orl
in
mov
sbb
pop
cmp
imul
inc
and
shlb
pop
out
testl
jae
mov
inc
sbb
sti
movsb
fiadds
sar
jle
mov
jnp
cs
ret
in
mov
cmp
cmp
loope
sarl
dec
mov
int3
push
stos
sbb
movsl
cmpb
outsl
add
call
test
jae
sbb
ljmp
mov
inc
ret
xor
enter
inc
lods
dec
clc
push
aam
cltd
aaa
mov
mov
sarl
cld
repz
ror
mov
pop
cltd
adc
je
rcll
repnz
sub
ja
or
adcl
sbb
hlt
push
push
gs
dec
sub
rolb
jp
push
add
fdivs
lods
jmp
lds
fisttpll
sub
sbb
sbb
inc
bound
mov
push
and
out
movsb
lods
adc
dec
in
sbb
shrb
pop
shr
push
adc
sub
add
or
ja
outsl
movsb
cmp
scas
out
mov
xor
push
jne
enter
std
rolb
and
out
ret
data16
jg
xchg
dec
mov
pop
mov
out
dec
push
in
lock
jl
xchg
pop
jg
clc
shrl
clc
aaa
mov
add
fwait
xchg
sarb
inc
fwait
das
jecxz
sbb
dec
or
test
das
clc
rcll
xchg
xchg
cmc
pop
push
insl
clc
and
sbb
mov
movsl
xor
fwait
inc
ss
mov
mov
into
dec
clc
push
sub
cmp
push
loope
aas
xchg
sti
lock
mov
out
and
jmp
dec
imul
mov
incl
in
dec
fdiv
cmpsl
fucompp
adc
das
push
xchg
jge
pop
jl
rcll
push
jl
pusha
iret
faddl
sbb
shl
push
sbb
movsl
sub
bound
cs
or
stos
scas
cmc
aaa
xchg
in
rorl
repnz
fwait
stc
inc
mov
and
adc
mov
adc
xor
dec
xchg
js
cs
xchg
pop
mov
xchg
push
xchg
and
lock
mov
fstpl
stc
arpl
mov
adc
add
int
xor
pop
dec
cltd
sub
lea
sub
mov
sbb
mov
xchg
mov
outsb
dec
sti
cltd
mov
bound
cltd
pop
out
sbb
es
cmp
imul
jp
and
and
mov
pop
dec
je
repnz
lods
lret
aas
sahf
add
mov
daa
mov
test
jne
dec
or
xchg
aaa
fstps
mov
sbb
je
or
or
add
cmp
sbb
inc
test
xor
leave
testl
imul
in
aaa
sbb
inc
cmp
lret
mov
test
cmc
out
lret
cld
ds
loop
in
inc
add
sub
inc
jnp
mov
xchg
shll
add
push
and
pushf
inc
push
adc
cmpsb
cmc
call
pop
je
scas
jmp
cld
adc
inc
inc
pop
test
in
repz
push
jge
roll
xor
nop
ret
out
pop
add
jns
pop
xchg
xchg
dec
ret
push
or
jno
add
movsb
das
jge
or
mov
and
popa
dec
push
out
cli
mov
ljmp
leave
and
cmp
shr
rolb
test
adc
imul
mov
inc
mov
std
sbb
add
push
pop
inc
lods
cmpl
sbb
mov
divl
test
mov
xor
mov
jo
add
mov
xchg
or
inc
mov
outsl
or
or
add
add
inc
add
xor
leave
enter
dec
jo
jae
fstpt
sbb
cmp
adc
test
insb
inc
pushw
ret
shrl
or
push
mov
loop
sbb
fistl
sub
cld
mov
cld
cmpsb
pop
xchg
aas
xchg
jge
mov
jle
rcr
pop
xchg
push
mov
sbb
test
iret
shr
inc
mov
jmp
and
cmp
push
jecxz
jae
cmp
ljmp
xchg
mov
fildll
sbb
aam
sbb
dec
dec
fadd
fmull
gs
mov
jbe
adc
lret
mov
jp
jne
mov
iret
shll
rolb
out
adcb
daa
mov
cmp
push
pushf
aam
jbe
sbb
xor
xchg
hlt
xchg
rorb
arpl
movsl
addl
jb
imul
jb
sub
mov
jb
sbb
or
int3
sti
push
lods
fcomps
dec
daa
push
aas
xor
add
or
jae
push
inc
push
mov
dec
add
out
test
fs
xchg
mov
int3
and
cld
out
mov
and
lods
lock
mov
add
test
lods
bound
dec
lea
adc
xchg
cmp
inc
push
out
pop
dec
popl
lahf
movsl
lret
and
rolb
mov
add
pop
cmp
out
leave
add
fstps
cmp
inc
adc
stos
rol
outsb
adc
decl
jnp
fs
pusha
jl
and
mov
jge
cmp
dec
adc
xor
das
cltd
mov
in
iret
ja
in
add
mov
cmp
decl
daa
push
pusha
inc
push
mov
mov
cltd
outsl
add
mov
inc
out
add
jl
ja
iret
adc
andl
cmp
add
loop
or
add
bound
sub
fiadds
mov
into
jns
in
pop
rclb
leave
mov
shrb
enter
popf
add
xor
jnp
test
in
mov
jno
cld
mov
mov
nop
adc
int3
mov
and
pop
mov
xchg
fwait
jo
inc
xlat
xlat
stos
lds
mov
pop
and
ror
out
fidivl
and
rorl
jnp
jg
add
fwait
outsl
stos
out
xchg
pop
out
ret
mov
adc
sub
mov
dec
jl
sbbl
sub
fwait
rcrl
cli
lods
jne
inc
int3
jb
or
xlat
xchg
inc
jl
in
push
lret
mov
xor
and
jne
nop
or
dec
fcom
add
sbb
or
jl
cmc
nop
sbb
shll
mov
and
popa
mov
movsb
pop
dec
xchg
sub
fs
or
addr16
dec
jbe
mov
jb
or
dec
dec
jp
cmp
mov
fcomp
cli
icebp
arpl
jnp
jae
pop
jno
or
rcr
jo
pop
dec
out
sub
lret
jbe
sub
jecxz
scas
outsl
sbb
imul
adc
add
icebp
fisubrs
nop
xchg
mov
out
mov
pop
dec
rorl
call
cmp
jecxz
jno
mov
test
jg
hlt
cmpsl
xchg
fcompl
jno
xor
dec
mov
repz
adc
xchg
sbb
inc
pop
lret
inc
inc
out
push
push
test
in
sbb
insl
mov
xlat
xrelease
xchg
dec
repz
sbb
sarl
inc
fisubs
and
int
ljmp
ljmp
andb
push
mov
inc
cwtl
in
dec
mov
jmp
mov
test
inc
cmp
add
mov
pop
lock
call
and
mov
lret
out
adc
push
leave
pop
jecxz
loope
testl
xor
das
out
lds
or
jae
push
iret
in
call
mov
dec
or
stos
push
ja
movsl
adc
stc
sbb
movsb
jne
hlt
pop
jo
stc
push
ret
insb
jge
gs
lock
test
pushf
jge
mov
mov
xchg
mov
xor
mov
push
push
mov
je
repnz
and
mov
scas
lock
test
and
jbe
or
xchg
loope
mov
stos
cmc
fisttpl
add
fs
xor
mov
or
inc
push
sub
jp
lret
jle
mov
ds
jnp
push
inc
push
testl
sti
add
push
inc
inc
jb
xchg
imul
lret
inc
ficomps
pop
insl
xadd
jge
dec
add
push
nop
ror
in
cmc
dec
fildl
sub
into
addr16
mov
and
jne
mov
sub
fs
xlat
mov
lcall
pusha
mov
cltd
insl
rcrb
push
loop
dec
push
in
out
fstpt
bound
jl
fsub
scas
stc
ss
jns
popf
call
or
jmp
add
ret
xor
nop
aad
jae
in
lock
xchg
mov
pushl
mov
xor
inc
cs
ret
push
adc
sub
xor
xor
mov
int
lods
scas
je
testl
or
sahf
mov
mov
leave
lods
test
lods
mov
mov
xchg
jbe
jne
ljmp
inc
xor
jmp
test
cs
cwtl
scas
dec
fwait
out
cmp
jo
icebp
mov
notb
or
fidivrl
dec
adc
dec
ret
inc
jmp
or
int3
push
and
xor
ljmp
pusha
push
xchg
fmull
push
movsb
daa
rol
xor
sti
sub
rorl
push
sbb
je
jae
push
mov
fdivs
inc
cmp
adc
cwtl
movsb
ss
adc
xchg
or
xchg
sbb
sahf
mov
negb
add
inc
das
repnz
scas
dec
loopne
push
xchg
dec
hlt
ret
ret
sahf
adc
aaa
xor
push
shrb
mov
loopne
cltd
add
xor
sub
add
in
cmp
fs
xchg
xor
xchg
aas
adc
add
movsl
roll
sub
dec
jp
cmc
lods
mov
dec
pop
lea
repz
push
and
sbb
cltd
pop
sub
push
fnstsw
ljmp
gs
pop
shr
movsb
pop
sub
dec
shlb
sbb
dec
fildll
xor
xor
add
fsub
mov
fadd
outsb
xchg
or
ret
push
loope
insb
xchg
rolb
sbb
sarl
in
xor
push
fcoms
or
lods
push
imul
les
cmpsb
rol
and
mov
jecxz
add
stos
sbb
dec
sub
lret
std
adc
push
movsb
mov
cmp
test
adc
sub
insb
fidivrl
mov
push
cwtl
or
jmp
ss
xchg
insb
inc
lock
popa
arpl
mov
dec
mov
xlat
and
outsl
and
mov
cld
push
cmp
inc
les
add
cli
movsb
push
pusha
daa
xor
stos
jne
push
ret
int3
xor
loope
int
xor
inc
pop
popa
jbe
fdivr
mov
cmp
jle
or
add
jmp
ret
sub
sub
stc
pop
lods
shll
mov
sub
dec
sbb
inc
push
sub
icebp
es
out
and
test
ss
push
outsl
out
loopne
cs
cmp
into
cmc
test
or
bound
adc
xlat
vpsubsb
fidivrs
jmp
mov
bound
xor
xor
adcl
xchg
mov
arpl
xor
out
pop
int3
jmp
cmp
inc
jl
xchg
xchg
push
add
mov
les
xchg
hlt
or
imul
adcl
mov
pop
pop
loop
lret
and
mov
les
shll
js
leave
sti
sbb
push
or
push
aam
rclb
icebp
popf
ret
inc
push
pushf
out
dec
adc
cli
mov
ret
pop
test
js
icebp
and
lcall
pop
mov
aam
rclb
and
adc
jl
shrb
aam
mov
mov
pop
and
fistpll
push
loop
shll
mov
mov
and
stos
orl
jmp
test
repnz
in
loop
int
rcrl
daa
jns
inc
icebp
lock
or
iret
call
sbb
mov
in
xchg
ficoml
pusha
xor
push
ret
mov
popf
xchg
sub
aaa
cmp
cmpsl
aas
pop
jmp
xchg
repz
mov
into
mulb
cmp
push
enter
xor
or
jg
aad
add
mov
in
test
mov
push
or
popf
dec
mov
pop
hlt
xchg
ljmp
stos
add
push
sbb
lea
mov
xchg
inc
test
pusha
xor
dec
add
mov
add
daa
xor
push
mov
int
dec
dec
lea
int
jge
xor
xor
push
jnp
pop
stc
xor
sbb
pop
xchg
out
fadds
mov
mov
or
push
jp
inc
repz
jne
subl
xor
jae
mov
inc
stos
ljmp
inc
or
jae
push
add
lods
dec
mov
mov
xchg
fstl
mov
ret
mov
pop
lcall
pop
adc
jo
inc
inc
xchg
mov
cmp
mov
add
lds
aad
or
dec
jno
ret
shrl
lcall
xor
into
mov
pop
push
sub
xchg
lahf
jo
fwait
jecxz
add
out
push
jne
popa
in
in
test
jle
test
mov
ret
mov
fdivl
xchg
mov
mov
flds
loopne
ja
fstpt
pop
ds
xor
mov
xchg
mov
aad
dec
fistpl
inc
sub
test
sbb
lock
push
jo
sbb
out
test
mov
adc
mov
jo
adc
arpl
in
xchg
dec
add
xor
xlat
icebp
fwait
pop
dec
cmovg
shrl
sub
aam
add
gs
jmp
push
xchg
bound
pushf
in
inc
add
aas
xor
mov
dec
in
sub
icebp
xchg
jg
and
fisttpll
mov
fsubl
ljmp
jo
or
sbb
stc
jae
pop
push
sub
mov
pop
or
rcrl
cmp
fcmovbe
push
insl
mov
in
sbb
inc
inc
repz
ljmp
fwait
cmp
mov
rol
into
xchg
pop
push
xchg
push
lahf
outsb
bswap
insl
adc
jl
jl
cli
jge
out
stos
data16
mov
pop
cwtl
sub
bound
and
jno
mov
ja
add
scas
push
inc
jbe
rcrl
lcall
jno
das
cltd
fs
mov
lods
push
shlb
or
mov
and
cmpsb
loopne
insb
pop
divb
jbe
test
daa
fstl
adc
add
dec
jb
push
inc
shlb
mov
movsb
cmp
dec
test
adc
arpl
sub
push
arpl
push
mov
hlt
push
out
fsubrl
dec
fucomi
sar
sar
insl
xlat
daa
mull
hlt
popf
dec
push
jbe
jbe
pop
adc
push
mov
insb
imul
decl
lahf
inc
fmul
pop
rorl
data16
je
movsl
or
pop
in
jg
outsb
mov
test
in
flds
and
sub
push
push
aas
popa
cmp
push
or
push
scas
add
mov
cld
repz
fst
in
std
push
push
je
xchg
pop
lods
push
ret
js
sahf
popa
cmc
xor
or
push
das
mov
push
movsb
dec
sub
add
inc
lods
mov
aas
or
outsb
dec
into
or
mov
leave
mov
scas
addr16
outsb
hlt
lea
in
dec
mov
mov
dec
add
in
sbb
sub
pop
lret
dec
mov
call
mov
movsl
popa
and
pop
sub
adc
push
add
mov
mov
lcall
xlat
dec
xor
dec
sub
dec
add
fisubs
stc
into
and
les
dec
dec
xchg
test
cmpsl
and
pop
subb
mov
dec
data16
mov
stc
xor
imul
jmp
addr16
out
dec
lods
inc
add
mov
push
sbb
push
in
lea
orl
mov
lret
xorb
inc
add
xchg
pop
xor
mov
scas
or
enter
sbb
cmp
push
jp
clc
out
leave
dec
imull
mov
pushf
dec
fistpl
push
mov
scas
or
bound
imul
ror
mov
in
pop
loope
sbb
push
popfw
sbb
lahf
lea
sbbb
xchg
lea
aad
sti
mov
mov
addb
mov
je
out
mov
push
xchg
lock
iret
pop
aad
pusha
int3
mov
add
jnp
out
mov
out
ret
jbe
imul
mov
mov
jno
mov
push
jb
sbb
pop
push
jmp
scas
stos
mov
into
jne
imul
iret
and
or
push
add
movntq
xchg
fdivs
je
pushf
fisttpll
cmc
mov
push
dec
jle
inc
jg
lock
push
xor
push
cmp
xchg
mov
in
xor
jnp
xor
inc
and
in
push
adc
push
out
and
push
pop
add
xlat
cmp
std
int3
loope
add
gs
jno
dec
sub
mov
mov
mov
or
mov
mov
ret
popf
jl
ja
mov
ss
cmp
in
jno
mov
sahf
xchg
dec
jmp
lret
in
xorl
cmova
cli
es
cmpsb
daa
inc
cmp
pop
jge
xor
scas
sbb
dec
test
xlat
leave
xlat
mov
loopne
in
stc
dec
mov
xor
iret
inc
xor
jge
sbb
clc
cwtl
sbb
flds
sub
aas
addb
mov
mov
cmp
and
jb
pop
xor
inc
cmpsb
push
jo
mov
hlt
lods
shlb
mov
test
push
add
movsb
fldt
movsl
push
push
jge
or
xchg
push
pop
out
push
out
inc
por
mov
rcrl
add
inc
sarb
pushf
dec
push
jne
push
or
push
subb
xchg
pop
std
add
test
jae
mov
jns
lret
push
adc
cmc
fs
cmpsb
imul
sbb
in
js
pushf
lcall
shrl
mov
sbb
out
mov
or
out
jbe
out
lds
adc
je
dec
ret
jl
and
enter
xor
pop
jno
cli
sbb
or
mov
jb
jae
fwait
popf
popa
inc
mov
cmp
cli
pusha
add
insl
sbb
dec
ror
cmpsl
jns
stc
fstl
cmp
mov
dec
aaa
outsb
lea
lahf
lea
pop
pushf
mov
sbb
xchg
cli
xchg
idivb
push
or
and
mull
mov
repz
sub
mov
add
stos
sahf
sub
fdivrl
lods
push
jbe
dec
pop
sarl
xor
cmpsb
jae
sbb
sub
inc
aam
testb
ljmp
cmp
pop
add
cmp
pop
std
shlb
jecxz
cli
je
adc
int3
add
je
testl
mov
pop
xor
dec
mov
cmp
xchg
fstpl
inc
and
cmp
mov
push
xlat
mov
es
std
inc
int3
adc
fstl
pop
stos
xlat
jle
fstpl
pop
push
adc
lea
cmp
lcall
in
sbb
scas
aam
push
icebp
and
enter
outsb
lock
jae
aam
fisttps
fldenv
nop
ret
flds
mov
xchg
clc
loopne
js
and
mov
jmp
sar
stos
lock
out
lods
ret
pop
mov
cmp
xor
daa
xor
jg
add
mov
add
dec
adc
add
loop
xchg
imul
ds
roll
fstl
aaa
pushf
pop
cmp
out
stc
add
arpl
dec
stc
sbb
adc
testb
add
fsubr
rorb
fisubl
add
jge
dec
fistl
jae
jle
divl
adc
push
scas
aas
fildll
pop
pop
mov
int3
cmp
das
insb
fistpl
shl
push
les
dec
jo
das
scas
inc
mov
mul
inc
test
jmp
push
xor
dec
jns
push
dec
mov
into
mov
lahf
mov
and
out
lea
xchg
dec
in
and
xlat
enter
dec
test
pushf
std
inc
add
divb
push
lock
sbbb
bound
mov
scas
lods
sbbb
or
xchg
mov
jle
dec
dec
pop
addl
mov
lods
fstps
inc
pop
inc
add
jb
outsl
jb
inc
jnp
ljmp
jo
add
or
idivb
loope
popf
xor
in
cmp
xchg
int
repnz
inc
ret
jo
or
sbb
xchg
lods
out
subl
dec
push
mov
mov
xchg
sti
notl
inc
je
out
out
loope
or
mov
xorl
mov
daa
out
xchg
xchg
das
pusha
nop
jae
sbb
push
pop
pop
int
adc
cltd
mov
call
fcomip
or
pop
movsb
sub
push
mov
fcmovnu
and
cmp
mov
pop
xor
shrl
mov
cmp
int3
jbe
cmpsb
xor
in
pop
ljmp
lahf
lcall
mov
mov
pop
mov
fwait
arpl
int
repz
ds
mov
inc
outsl
adc
insl
jl
mov
jecxz
and
xchg
stos
xchg
or
push
sbb
out
mov
sub
testl
jnp
jns
xorl
push
xchg
jmp
mov
cld
sahf
es
push
cmp
fstpl
jle
mov
aam
out
jb
imulb
call
hlt
loop
push
xchg
test
repnz
cmpsb
mov
inc
jg
jno
push
pop
js
mov
push
inc
pop
adc
and
push
pop
cld
hlt
mov
mov
faddp
jg
jle
fwait
pusha
sbb
sarb
icebp
lahf
mov
push
mov
push
mov
sub
xchg
jne
mov
inc
hlt
add
ljmp
xor
mov
dec
xor
add
xor
nop
pop
inc
push
cmpl
inc
imul
ret
movsl
bnd
adc
test
dec
insb
dec
add
jl
mov
sub
cmpsb
outsb
daa
insb
push
popf
mov
lahf
or
leave
xchg
rclb
mov
lret
add
loop
and
cmp
mov
pop
xor
stos
dec
cmp
jg
mov
push
sahf
iret
xchg
movsl
pop
and
xor
push
mov
xor
imul
mov
xchg
xchg
pop
test
shlb
loopne
icebp
ja
std
inc
and
mov
xor
test
imull
sbb
bound
or
sbb
or
outsl
sbb
cmp
mov
xor
xor
xchg
dec
cmp
mov
sbb
mov
std
femms
lods
test
mov
mov
sbb
loop
pop
mov
or
add
sbb
fistps
andl
fcoms
or
mov
shrl
fistpl
cli
cmpsl
pop
xor
arpl
and
push
push
fisubrl
add
imul
inc
in
sbb
das
mov
nop
lret
ret
andl
imul
sarl
test
repz
ja
ret
mov
cli
mov
out
jo
xchg
sbb
int
sti
push
hlt
or
andl
or
mov
out
hlt
sub
fisttpll
pushf
push
out
sahf
push
xchg
jl
add
dec
sub
or
push
rcll
shlb
js
add
adc
fldl
pushf
xchg
xchg
dec
dec
sub
insl
cmp
clc
sub
push
dec
mov
shufps
fldenv
cli
lods
mov
stc
pop
mov
mov
push
push
cmp
dec
jnp
cmp
jmp
dec
sti
lahf
push
cmpsb
fwait
mov
push
stos
arpl
mov
int
mov
mov
mov
arpl
ret
pop
jle
fcompl
push
std
aad
xchg
shlb
dec
or
jge
int3
push
cmpsl
inc
arpl
pop
sbb
clc
jmp
ret
aad
mov
mov
call
fildll
xchg
pop
out
call
inc
xor
and
sbb
push
shr
mov
icebp
lcall
stos
mov
stc
dec
sub
jns
mov
jecxz
xchg
mov
jno
sub
xchg
iret
and
mov
pop
outsb
push
scas
inc
ret
cmp
mov
pop
cmpsb
out
dec
int3
push
aad
sub
dec
ficoml
test
roll
cld
and
xchg
in
clc
ret
dec
mov
xchg
xor
jmp
mov
cwtl
test
sub
adc
popf
aad
lods
xchg
cs
les
push
and
mov
push
cltd
ja
sbb
and
outsl
mov
add
fwait
pushf
cli
and
je
sbb
scas
sbb
sar
mov
mov
sahf
push
cmpsl
rclb
sti
sub
out
popa
test
mov
out
imul
ja
pop
dec
xor
divl
dec
pop
cmp
pop
int3
adc
adc
out
gs
out
lret
pop
and
ljmp
idiv
fnstcw
push
jle
pop
gs
push
jb
and
sarl
push
sbb
testl
inc
and
repnz
mov
and
push
sub
or
loope
jg
jp
imul
mov
mov
mov
in
cmpsl
iret
jmp
push
xchg
xchg
xor
add
movsb
iret
mov
adc
rcr
aaa
pop
and
mov
arpl
push
mov
aaa
hlt
jns
imull
or
sbbb
imul
sti
pop
and
test
sti
loope
fwait
jns
pop
mov
or
add
lods
pop
jge
jp
int3
jg
sbb
fsubl
dec
in
jne
rolb
out
ss
fbstp
jae
popa
sbb
or
inc
hlt
test
push
mov
push
ljmp
std
faddl
add
inc
sahf
cs
inc
stc
dec
cwtl
loope
hlt
bound
lds
xchg
xor
xchg
or
mov
jmp
xchg
gs
pop
test
es
idivl
add
jno
outsb
arpl
pop
sub
pop
push
loopne
pop
and
add
xchg
scas
imul
sub
cmpb
sub
mov
mov
insl
mov
cmpsb
call
xchg
test
pop
mov
adc
and
cltd
repnz
and
inc
fwait
outsb
pop
jno
xor
mov
frstor
sub
stos
out
inc
andl
xchg
inc
sbb
jno
out
and
movsb
sub
mov
and
push
mov
or
xchg
cmpsb
ss
aas
icebp
sbb
arpl
dec
cli
movsl
sbb
sbb
aam
dec
add
popf
jnp
outsb
nop
loop
shll
xor
cmp
aas
mov
push
out
shl
mov
jmp
cmp
jmp
test
xchg
add
clc
insl
mov
out
negb
fidivrl
into
xor
ret
shl
dec
cs
push
mov
fcomi
and
push
sbb
daa
not
jno
xchg
out
or
and
mov
sti
sbb
pop
xchg
jge
xchg
adc
xchg
xchg
shlb
pop
dec
test
outsl
jbe
adc
inc
pop
loop
adc
mov
mov
vcmppd
jno
loope
jo
aas
dec
xor
pushf
mov
insb
sub
sbb
imul
addb
cmp
dec
loope
push
add
push
scas
or
aam
mov
sbb
aam
xor
add
jg
xor
xor
mov
clc
inc
push
inc
imul
inc
mov
stos
adc
mov
jb
int3
sbb
jmp
scas
mov
pop
xor
cmp
cmp
sbb
mov
pop
xchg
sbb
sahf
stc
mov
add
std
fnstsw
ret
fdivrs
js
cmpsl
std
xchg
addr16
push
adc
std
pop
sub
push
or
add
std
xchg
dec
pop
mov
or
cmp
push
int3
xchg
jecxz
cs
mov
dec
mov
inc
push
inc
push
pop
mov
repz
push
leave
movsb
icebp
add
mov
adc
insb
cmc
cmp
sar
sarb
pop
jmp
jae
call
cmp
jmp
cmpb
lahf
in
in
and
lds
inc
ret
or
pop
iret
xchg
ret
incl
outsl
rcll
mulb
les
fmuls
jb
ds
dec
sbb
cmp
scas
mov
cwtl
nop
add
addr16
xchg
sbb
dec
mov
add
cs
cli
cmpb
movsl
js,pt
push
and
sub
aas
push
mulb
xor
or
das
pop
fldcw
cli
jbe
insl
jb
and
in
mov
adc
in
xchg
sub
in
and
mov
inc
cmp
ja
stos
pop
lahf
adc
push
lods
into
add
dec
hlt
sbb
or
mov
mov
out
fldenv
js
jmp
jmp
pop
jnp
jge
pop
test
xchg
pop
mov
je
xor
xchg
ljmp
cmp
cwtl
sbb
adc
mov
inc
ret
mov
outsl
fwait
mov
subb
lcall
into
add
and
sub
adc
das
rcr
mov
and
push
lock
aam
dec
xchg
idivl
inc
aas
sub
dec
push
push
fildll
cs
cs
cwtl
cmpsl
add
push
sub
mov
cmp
pop
push
in
aam
xor
test
lret
fs
stos
pop
jne
es
in
inc
jo
leavew
stos
xchg
pop
into
fnstenv
in
pop
push
gs
ss
shrl
xchg
adc
jecxz
or
lods
sahf
mov
popf
push
lahf
or
ja
pop
jae
hlt
push
int3
out
mov
adc
fisubrl
into
lods
mov
das
in
decb
js
jmp
testb
push
push
cld
les
mov
push
or
mov
inc
mov
cld
inc
pop
pop
mov
jg
mov
std
mov
adc
loop
sub
shrb
xor
jno
shlb
xorl
loope
les
rcrb
rcl
fistpl
sbb
xchg
imul
lds
std
cld
ja
mov
ret
and
stc
push
lods
fists
push
xor
movsb
call
jmp
pop
jmp
lds
sbb
mov
mov
loop
std
test
dec
dec
hlt
decb
ret
jle
pop
mov
and
pushf
sbb
dec
aas
push
addb
rcrl
mov
push
pusha
jns
aam
bound
push
cmpl
pushf
adc
pop
arpl
push
icebp
lods
movsl
xor
push
loope
mov
cli
shlb
arpl
mov
mov
xchg
stos
cli
idiv
imul
dec
stos
arpl
inc
jl
into
and
mov
stc
sub
addr16
add
pop
rclb
outsl
ret
insl
cld
push
pop
pop
es
mov
pop
push
and
or
lods
js
scas
repnz
jmp
xor
push
loop
lock
inc
iret
mov
rcrl
lds
jo
xor
or
sbb
adc
push
std
inc
mov
mov
push
cmp
icebp
ja
inc
adc
sub
inc
fnstenv
add
ljmp
xchg
mov
push
cmp
sub
push
adc
mov
jne
leave
cmp
and
mov
xor
xor
xor
or
int3
cmp
js
int3
fnstsw
dec
popl
sbb
lods
cld
lods
fsts
scas
sti
push
jg
push
pop
lods
lret
outsb
jp
shll
cmpsl
mov
rcll
and
add
xchg
data16
js
shl
lret
dec
iret
adc
ds
mov
mov
js
data16
test
and
push
loopne
adc
mov
das
mov
in
test
bound
adc
mov
jl
ret
xlat
dec
push
stos
push
inc
cli
ss
sbbl
stos
aas
pop
jns
cmp
or
mov
jae
or
insl
xor
cld
dec
jge
cmp
scas
sbb
cmovg
aam
add
movsb
jnp
pop
jne
xchg
pop
add
clc
and
aad
mov
int3
mov
decb
sub
mov
js
aas
fsubrl
xor
aas
fwait
dec
jne
rorb
mov
or
mov
mov
and
push
lar
adcb
mov
bound
or
jecxz
add
push
and
inc
inc
cmc
adc
add
arpl
add
and
ljmp
pop
outsl
test
jmp
mov
pop
mov
adc
movsb
jl
data16
inc
sbb
jecxz
pop
cmp
fiaddl
in
push
pusha
push
push
push
jp
push
stc
movsb
loope
push
mov
pop
cld
outsb
ret
aaa
add
dec
inc
pusha
pop
cmovo
insl
jo
mov
cmp
mov
test
lds
jb
ss
rcrl
ret
enter
xchg
imul
jmp
add
xchg
sti
and
scas
mov
imul
add
xlat
xorb
fstpt
jp
jl
aam
xor
inc
xchg
or
mov
xor
andl
addr16
shlb
cmp
int3
clc
cmp
pop
push
in
and
test
sbb
movsbl
xor
xchg
push
mov
fwait
stos
lcall
fcompl
lods
movsb
mov
imul
cmpsl
iret
or
and
pop
mov
add
aad
sub
cwtl
jbe
xor
mov
lea
add
and
in
push
nop
lock
mov
sub
cmp
jmp
mov
and
or
das
push
data16
jp
sbb
mov
je
push
push
sbb
ds
cld
pop
cli
mov
cli
mov
mov
addr16
pop
pushf
jmp
loopne
and
inc
or
cli
call
es
sti
push
outsl
or
jmp
out
mov
pop
lock
cmp
push
cmp
dec
rcrb
cmpsb
push
add
sti
mov
ja,pn
mov
out
xchg
and
add
pop
or
mov
jb
data16
jecxz
mov
leave
cltd
jno
jp
mov
xor
sbb
sbb
mov
clc
inc
in
sarl
rclb
mov
outsl
movsl
cli
int3
outsl
sub
popf
and
rorl
lock
cwtl
sbb
pusha
fnstenvs
dec
pop
gs
pop
sub
dec
mov
movsb
mov
ror
loope
cmpl
mov
sub
sbb
enter
add
pushf
lock
cmp
jecxz
popf
push
lcall
cs
mov
xor
jecxz
push
xchg
mov
adc
outsl
cmp
dec
stos
pop
push
cmp
push
push
dec
mov
mov
xchg
leave
cmpsl
add
jmp
fnstenv
outsb
ja
js
jp
cmp
pushf
test
stos
out
rorb
and
inc
inc
pop
sbb
les
pop
mov
dec
jp
scas
insl
int
cmp
ret
mov
dec
adc
mov
xlat
dec
adc
sub
jno
out
pop
mov
dec
fisttpl
fsubrs
stos
cmp
sahf
cli
pop
inc
mov
fsubp
in
std
cli
dec
loope
sbb
inc
loope
jne
inc
mov
jns
ds
out
push
enter
xchg
popa
aaa
jno
cmp
mov
or
or
adc
xlat
cmp
outsl
out
imull
add
les
shrl
add
push
adc
add
ret
imul
lahf
gs
cwtl
sbbl
jecxz
sub
mov
testl
adc
imul
cmp
mov
add
dec
mov
pusha
mov
jno
cmp
push
mov
cld
pop
xchg
aam
pusha
push
xchg
dec
test
mov
or
int3
mov
or
mov
pop
in
dec
jmp
ss
mov
xchg
outsb
dec
adc
test
dec
sbb
push
jge
adc
cld
dec
cmp
mov
xor
jno
jp
loope
push
push
add
out
xor
ds
testb
pop
mov
fs
outsl
or
sub
and
push
and
cmp
cmp
shl
fs
inc
mov
mov
pop
mul
push
hlt
repz
push
bound
not
xor
loope
scas
jnp
popf
movsl
pop
mov
cmpsb
mov
loope
insb
iret
mov
or
loop
mov
push
sti
enter
xor
int
jb
cmp
pop
shlb
jl
xchg
ret
adc
cmpsl
lods
in
mov
xchg
ss
cmp
dec
mov
xchg
or
into
mov
fwait
sub
xor
xor
dec
vmread
sti
fucomp
movsl
icebp
xchg
loope
or
popf
into
fsubrs
scas
pop
xlat
cs
push
jl
popf
and
mov
lea
in
push
sub
mov
rcrl
andl
jns
jae
arpl
inc
in
mov
sbb
fnstsw
out
sbb
popf
loop
ja
ret
lfs
jne
xor
xchg
cmp
sub
inc
cltd
cli
push
mov
dec
or
mov
aad
sub
int3
jecxz
mov
pop
rcll
inc
andl
cli
add
arpl
sbb
xchg
out
dec
ficompl
or
jle
xchg
cmpsl
sbb
push
xorb
int
addr16
popa
pusha
jmp
inc
shl
lock
call
xchg
mov
jnp
add
xchg
mov
lods
and
rolb
js
push
repnz
pop
shl
pop
sub
lock
mov
ja
jmp
dec
shrl
inc
push
rcl
add
xor
je
jp
testb
pop
ret
adc
mov
push
inc
aad
xchg
push
addr16
mov
cmp
inc
dec
mov
pop
xchg
ljmp
notb
sbb
lret
mov
mov
imull
or
pop
cld
jns
insl
push
mov
pushf
push
das
in
test
pop
or
xadd
push
jo
add
mov
or
sbb
pop
incb
dec
fstps
jp
sub
push
jp
dec
sub
es
shll
ret
popf
enter
pop
es
dec
cvtpi2ps
xor
lods
mov
cmp
les
adcl
lret
push
xor
js
add
rcrb
inc
xor
sub
push
arpl
insl
scas
fldl
scas
fistpl
jnp
inc
xor
push
movsb
pop
jno
out
push
xchg
pop
gs
fldt
in
gs
xor
cmpsl
scas
imull
leave
xchg
test
adc
fistpll
push
dec
mov
dec
mov
jne
call
pop
test
dec
or
add
adc
xchg
shll
mov
cltd
cmp
movsl
sbb
fs
jle
jne
xchg
vmread
jl
jecxz
or
sub
sarb
in
jmp
inc
jge
mov
jb
cli
enter
sbb
cmp
jle
sbb
dec
xchg
push
aam
mov
shlb
aaa
sbb
pushl
inc
fs
into
outsb
ljmp
adc
mov
adcl
and
cmp
dec
sbb
jle
sub
xor
cmp
jle
and
push
add
dec
pop
dec
test
sbb
sbb
push
or
bound
into
outsb
jmpw
jns
lret
dec
adc
dec
rcll
scas
lret
andb
fisubrl
lret
ja
dec
xor
cmp
mov
mov
mov
dec
jp
enter
mov
mov
push
ds
aam
push
mov
and
in
adc
add
call
je
xorb
push
jnp
cmp
lret
dec
cmpsl
clc
xor
cmp
push
call
mov
pop
add
cltd
jp
xadd
inc
add
pop
lret
gs
mov
cmpb
stos
popf
imul
cmp
test
aam
xchg
std
mov
xchg
pop
stc
xchg
mov
call
xchg
lods
popa
inc
movsb
stc
adc
in
fmuls
sbb
jmp
and
sub
loop
stc
inc
cmpb
fnstcw
xchg
jae
out
jo
xchg
cltd
ja
cltd
addr16
xor
dec
push
cmpsl
mov
out
push
inc
test
ljmp
nop
repz
and
js
pop
sbb
sub
inc
data16
cmovno
sub
lock
mov
jnp
aad
out
mov
push
dec
or
into
mov
xor
or
out
lock
adc
adc
inc
jp
out
stc
mov
adc
sub
pop
cmp
aas
mov
out
test
shrb
pop
shrl
test
fdivl
cmp
clc
push
pop
xsaveopt
loopne
push
xchg
xor
test
dec
mov
xchg
nop
mov
lcall
mov
fisubrs
xor
cld
shl
ja
arpl
daa
push
lods
inc
sub
mov
dec
pop
ret
fstpl
xor
scas
in
dec
xchg
fstps
jge
out
negl
add
adc
stc
mov
shl
inc
jb
pushf
cltd
imul
push
std
es
cmp
leave
cmp
add
mov
je
outsb
pushf
sbb
fldcw
xor
movsl
cwtl
cmp
sub
sti
and
test
outsl
mov
pop
scas
jle
scas
xor
jmp
sbb
sahf
leave
int3
ss
mov
mov
ja
outsl
fidivrl
sbb
in
ja
push
xchg
ret
xor
jnp
jnp
lret
pop
mov
cmc
dec
xchg
into
imul
xor
imul
mov
xchg
lret
mov
fwait
repnz
fs
cmp
cmp
in
push
rcrl
fs
cmp
or
mov
loope
add
ret
fmull
cmp
out
mov
sub
cmp
dec
lea
movups
jle
je
and
aam
sti
or
jp
or
ss
xchg
inc
xchg
jle,pt
and
adc
out
add
mov
push
jbe
insl
cwtl
fcmovne
cmp
es
fnstenv
bound
dec
add
gs
sbb
adc
push
dec
popf
nop
lds
adc
leave
lcall
sbb
inc
dec
xchg
cwtl
pop
roll
out
lods
pop
movsl
imul
lahf
loopne
xlat
loope
pusha
jns
int
jecxz
xor
cwtl
repnz
dec
sub
pop
sub
cmp
xor
into
xor
scas
sub
iret
jno
sub
push
add
mov
adc
fistl
test
int
or
sub
jp
and
sahf
xor
xlat
test
sbb
rolb
ficoms
ret
mov
shll
ja
cmpsl
call
enter
repz
push
fisubs
js
mov
aaa
scas
data16
push
mov
jb
cmpsb
lahf
ss
cwtl
repz
outsb
dec
in
cmpsb
loop
push
pushf
loope
mov
jle
sbb
cmc
dec
adc
xlat
fnstcw
adc
inc
mov
cmp
mov
add
dec
rcrl
mov
inc
push
fcomip
adc
gs
pop
cmp
lock
dec
and
xchg
xor
inc
out
push
sub
sub
xor
xchg
pop
movsb
pusha
xchg
jb
lock
fisttpll
mov
lret
sahf
test
add
movb
je
pushf
loopne
js
and
loopne
repnz
inc
mov
cmp
into
rcll
or
mov
int
pop
jg
sahf
iret
cmp
sub
push
push
imul
leave
jne
popa
cmc
lret
push
or
sti
fnstenv
xor
push
mov
adc
dec
push
pop
push
arpl
and
ret
add
imul
cli
sbb
hlt
adc
jne
mov
mov
push
push
aas
insb
dec
cwtl
mov
sbb
jns
outsl
sub
cmpsb
mov
call
pop
cli
pushf
sbb
hlt
pop
fiaddl
adc
es
mov
cmp
add
outsb
mov
mov
inc
or
sbb
imul
inc
mov
inc
or
or
or
and
mov
and
stc
mov
xchg
into
add
cli
pop
clc
fnstsw
pusha
call
jb
pop
xchg
test
rolb
inc
add
jno
mov
shl
xchg
pop
mov
jno
ret
jo
mov
xchg
push
sub
sarl
mov
xchg
scas
lock
pop
popa
fsub
mov
mov
push
dec
mov
enter
or
outsl
out
fwait
jle
ss
or
int3
adcl
mov
push
int
outsb
jns
cmp
xor
imul
xor
ljmp
pop
stos
out
loop
fcoms
mov
jno
add
jb
lret
mov
mov
xchg
mov
mov
lret
push
cmp
lea
je
xchg
in
add
fwait
in
xchg
push
cwtl
xor
mov
movsb
sbb
mov
or
test
mov
xor
test
xor
push
out
mov
xchg
ljmp
das
repz
adc
and
sub
and
div
add
jp
pop
xchg
mov
or
and
movsl
fwait
or
sub
js
lcall
into
cli
push
in
cmp
xchg
mov
fnstenv
repnz
push
stos
lcall
jo
ss
inc
mov
rol
sub
inc
mov
and
mov
rorl
xchg
push
sub
push
and
es
lods
mov
mov
out
xor
sub
das
dec
in
inc
or
adc
inc
imul
inc
and
cmp
std
lret
das
outsb
faddl
xchg
dec
mov
dec
xor
insl
movsb
or
data16
ss
call
mov
ss
and
adc
lcall
popa
movsb
push
mov
cmp
and
pop
push
clc
outsl
lods
es
push
repz
pop
xchg
negl
or
icebp
sub
sbb
shlb
fistps
lods
cmpsl
aas
repnz
xchg
ja
imull
add
loop
cmp
xchg
push
push
mov
bound
test
dec
out
mov
and
pop
jb
shrl
mov
es
add
sub
inc
jnp
daa
out
jmp
cmp
lcall
int3
aaa
adc
aam
popf
icebp
fistpl
cmpsb
lea
ja
cmp
out
xor
in
mov
mov
jno
xlat
out
int3
cmc
mov
jge
fisttps
lods
cmpsb
mov
popa
movsb
iret
xchg
test
xlat
and
fisubl
xor
sbb
pop
push
jg
ficoml
cmc
cltd
mov
xlat
add
push
loopne
inc
cwtl
adc
xchg
xchg
mov
ret
ret
cs
push
ret
dec
dec
jg
pusha
ret
iret
lds
sbb
gs
in
cmp
mov
mov
leave
movsl
out
pop
sub
mov
loope
out
push
into
cmp
or
sub
scas
xorb
mov
jecxz
imul
mov
sub
out
imul
mov
mov
xlat
sbb
out
or
adc
lahf
xchg
inc
inc
sub
or
lods
nop
push
adc
mov
js
cmp
loopne
fimull
sbb
mov
lds
mov
mov
pop
mov
enter
mov
sbb
sarb
mov
gs
xchg
scas
mov
mov
inc
pop
sub
aam
setno
mov
imul
decb
sub
addr16
daa
ss
pop
decl
lods
pop
pop
xor
fnstcw
mov
bound
dec
icebp
dec
or
lcall
lahf
aaa
dec
sub
xor
or
inc
push
fisttpll
aam
int3
sbb
pop
dec
jno
and
das
push
popa
add
jg
xor
or
or
aaa
or
xchg
inc
aad
add
popf
stos
push
cmp
sahf
cmp
add
popa
gs
mov
imul
push
mov
cld
adc
mov
mov
fdivrl
arpl
fsubrs
out
push
inc
xchg
les
inc
xor
outsl
xchg
sub
imul
lret
iret
adc
mov
or
dec
pop
int
arpl
jbe
cmp
sub
inc
push
insl
pop
or
inc
mov
sub
outsl
sbb
in
je
scas
cmpsl
js
pop
and
addr16
adc
push
pop
jno
and
iret
out
jno
and
pop
nop
mov
push
and
dec
or
fldl
sub
pushf
fcmovnu
repnz
dec
lret
push
shll
mov
mov
dec
sbb
out
mov
sarl
mov
aas
les
nop
mov
ret
xchg
jb
mov
cmp
pop
xlat
jns
cmp
jne
in
xchg
int3
sbb
scas
das
hlt
add
dec
rol
adc
rorl
leave
ds
in
jl
aad
seto
mov
push
mov
cmpsb
inc
scas
jae
cs
lock
test
pop
out
std
leave
sub
or
gs
ja
sub
in
in
mov
fucom
lods
xor
ds
repz
fsubrp
mov
or
mov
fsts
adc
inc
xchg
rcl
rcl
or
arpl
fwait
repnz
jle
push
das
push
xor
mov
pop
xchg
mov
lret
push
fcompl
movsl
int
push
and
mov
out
ss
push
cmp
jmp
aaa
sarb
scas
and
adc
add
ss
or
out
in
call
inc
cmpsb
pop
cmp
sub
or
arpl
push
outsl
xchg
or
scas
and
mov
scas
test
cli
decb
xchg
iret
dec
sbb
mov
jmp
adc
pop
test
aaa
add
mov
pop
push
dec
and
dec
mov
or
inc
jb
jne
scas
imul
add
xlat
add
repnz
adc
ljmp
cltd
pusha
xor
sahf
loop
in
sbb
xchg
icebp
dec
mov
jmp
pop
scas
popa
cmp
pop
dec
je
mov
jns
stos
dec
cmp
xchg
mov
push
inc
push
mov
aaa
ja
call
cmp
insb
cmpsb
scas
gs
lea
jb
or
outsb
idiv
out
iret
mov
xchg
daa
mov
ja
out
repnz
mov
mov
push
xorl
stc
and
lret
divps
enter
shrb
or
repz
adc
xor
pop
outsl
fldenv
fbstp
icebp
or
hlt
rcrl
stos
lcall
lods
or
enter
jmp
sub
sub
cmpsl
inc
pushf
iret
insb
fwait
sub
mov
adc
cmp
inc
mov
or
data16
add
faddp
adc
iret
cld
jmp
fucomip
rol
and
rcll
clc
bound
aad
jae
cmc
push
inc
gs
pop
fs
mov
or
outsb
hlt
nop
mulb
outsl
les
call
lds
in
xor
xchg
out
dec
jg
pop
scas
ljmp
icebp
jmp
test
aas
movsl
loope
cs
je
into
jns
data16
ja
and
sbb
adc
add
hlt
dec
imul
iret
pop
and
int3
lock
aaa
lock
sub
pop
and
movsl
push
in
inc
imul
sub
push
xchg
inc
addr16
std
popl
sbb
repz
loop
xchg
cltd
ds
mov
sub
lfs
xor
sahf
cs
sub
lcall
rcrl
sub
mov
hlt
or
inc
dec
mov
mov
xchg
dec
push
mov
mov
cld
imul
inc
imul
test
cmp
pop
and
mov
cmpsl
dec
stos
dec
insl
aad
pop
mov
xchg
icebp
cmp
fdivrs
in
lret
bound
inc
test
in
inc
add
sub
ljmp
jo
mov
dec
mov
pop
leave
idiv
ja
sbb
add
test
andb
fnstcw
hlt
outsl
fisubl
std
and
adc
testb
nop
dec
pop
push
lcall
fnstcw
pop
push
in
insb
rcrb
xlat
dec
into
jp
cmp
jbe
fwait
sub
pop
dec
shlb
add
cmp
mov
mov
aad
leave
bound
addr16
imull
mov
fcomi
xchg
bswap
adc
fdivr
add
cmp
adc
sbb
int
int
adc
mov
push
pushl
cmp
dec
jb
cmp
adc
lret
lret
xchg
shll
out
fmull
inc
aam
lods
xor
test
cmc
repnz
divl
lock
insb
movsb
jno
push
and
pop
push
lods
dec
ss
mov
scas
push
sbb
mov
arpl
dec
in
push
pop
pop
adc
insl
inc
push
rol
jl
lret
pop
mov
push
lea
cmp
inc
mov
ret
filds
ss
jl
sbb
mov
scas
mov
sub
mov
mov
adc
mov
rorb
outsl
or
xchg
xchg
int
push
push
cmp
mov
pop
int
jne
jbe
mov
cmpsl
inc
pop
loop
push
push
inc
jne
rorl
push
fsubp
mov
loopne
popa
cmpsb
fstpt
push
adc
int3
mov
mov
mov
psrlq
cmc
loop
jae
pushf
popaw
test
add
cmp
sar
out
sahf
aam
or
xchg
cmp
and
out
loop
mov
js
and
test
repnz
xor
lahf
mov
jno
sarl
and
mov
mov
add
cmpsl
imul
mov
mov
sbb
addr16
xchg
or
loope
int3
jp
cmp
into
jle
mov
push
dec
sbb
ret
fstp
add
leave
shl
out
jno
push
inc
pusha
repz
enter
mov
insb
test
mov
adc
sbb
add
push
inc
sub
jnp
mov
or
pop
xchg
or
sub
sbb
mov
enter
inc
enter
inc
dec
aas
push
sub
xchg
lock
inc
push
pop
mov
arpl
shll
xor
popf
push
shufps
mov
adcb
xacquire
lods
movsl
push
filds
adc
inc
xorl
das
jbe
push
bswap
aas
daa
scas
and
call
movsl
js
or
xlat
imulb
dec
andl
movsl
in
xor
sbb
enter
andb
inc
cmp
mov
ds
rep
shrl
sub
mov
jae
push
inc
pop
int
sub
in
nop
and
pop
mov
mov
fs
cmp
push
aam
pop
hlt
stc
jae
xchg
scas
lods
loope
sbb
jmp
mov
aad
pop
sub
ret
dec
xorl
sub
jle
jecxz
adc
shl
inc
cmp
ret
rolb
das
and
xchg
dec
cmpsl
popa
add
xchg
sub
enter
pop
cltd
dec
idivl
aaa
fld
cmc
adc
mov
lahf
rcrb
push
pop
xchg
ds
ljmp
shr
xchg
push
arpl
pop
add
pop
add
push
jl
insb
push
insb
mov
push
cmc
push
std
gs
mov
out
ret
aad
clc
push
xchg
inc
add
in
pushl
sbb
je
xchg
nop
into
fadd
jmp
fidivrs
mov
sub
inc
imul
jno
jne
out
in
adc
iret
addr16
arpl
aaa
add
xchg
repnz
fistpl
xchg
jecxz
ss
adc
shrl
sbbl
adc
imul
and
addr16
mov
arpl
push
incb
in
push
call
data16
push
xchg
xor
fdivr
scas
add
cs
adcl
inc
adc
das
sub
jmp
rcrl
daa
ret
nop
mov
push
insb
sti
ficomps
push
jg
jle
inc
iret
xchg
add
fld
repnz
jmp
jno
stos
data16
xchg
add
pop
sbb
lods
stos
cmp
lcall
add
adc
insb
xorl
cwtl
and
inc
fidivs
lock
xor
idivl
arpl
aad
jmp
js
outsl
or
jg
outsb
push
mov
or
das
lods
rcrb
das
sub
or
xchg
nop
adc
jo
push
jle
sub
jno
dec
enter
xlat
loop,pn
mov
aad
outsl
and
cmp
fs
xchg
bound
add
in
repnz
mov
sahf
adc
inc
cmp
je
or
daa
jecxz
or
fwait
xor
bound
cld
movsl
leave
mov
jle
and
lds
xchg
and
jno
dec
pop
and
test
movsl
fidivrs
xchg
xchg
mov
shl
imul
icebp
popa
stc
sti
ss
enter
mov
fcmovb
sub
imul
frstor
and
lods
imul
jb
lock
ljmp
sub
pusha
cli
inc
fisttpll
into
stc
mov
sub
in
out
out
xchg
pop
pushf
jae
out
jp
xlat
xchg
mov
push
sub
stc
inc
xor
xchg
sub
mov
sbb
sub
nop
adc
test
jg
mov
jp
cltd
loope
mov
inc
or
sarb
adc
push
das
out
or
jbe
jno
xchg
mov
jmp
adc
int3
cmc
pop
mov
mov
cmp
rcrl
add
out
in
adc
mov
inc
xorb
cwtl
and
mov
inc
not
xchg
push
rclb
mov
sbb
adc
xor
fsubrs
cmp
cli
shrl
inc
aaa
mov
push
mov
movsl
in
inc
js
lods
icebp
push
add
notl
add
pop
pop
enter
inc
and
mov
test
nop
lods
push
cs
imull
mov
js
or
sbb
andb
lret
xchg
test
enter
xchg
shlb
pop
and
xor
cmc
dec
mov
xor
lret
inc
inc
dec
aam
dec
cmc
loopne
jns
jmpw
inc
arpl
xchg
inc
sbb
ret
xor
mov
lock
dec
add
lahf
arpl
mov
cs
in
xor
xor
adc
shrb
ljmp
fistpl
mov
mov
mov
sbb
mov
mov
adc
stc
ljmp
enter
pusha
mov
cmp
xchg
rol
and
nop
xlat
imul
mov
push
popf
cmp
mov
mov
mov
pop
xchg
popa
push
jg
cwtl
sbb
out
test
ja
lods
pop
jge
ds
adc
add
lcall
ljmp
pop
add
cmp
xor
pop
adc
fiadds
ljmp
and
stos
adc
mov
ja
out
jmp
jge
mov
add
movsb
fdecstp
out
cmp
sahf
xor
push
or
and
movsb
sub
sahf
xchg
negb
or
mov
push
adc
sub
and
les
aam
jecxz
dec
mov
xchg
sbb
in
shrb
rclb
sub
test
insl
inc
push
fiaddl
inc
jl
pusha
mov
adc
pushf
mov
imul
pop
je
je
dec
sbb
stc
movsb
aad
cs
arpl
mov
and
into
xchg
adcb
xchg
sbb
and
and
sub
loope
or
pop
addr16
stos
push
mov
xchg
mov
jns
jmp
lret
xchg
inc
jns
lods
int3
fists
or
cmp
fcom
int
cmpsb
xor
fcmovu
scas
lret
insb
ret
fistpl
cmp
pop
andl
lock
sbb
test
sbb
inc
bound
mov
es
jns
sub
and
push
jns
push
or
outsl
sub
add
push
bound
dec
mov
dec
test
out
push
sbb
nop
add
mov
mov
lods
push
xchg
out
cmp
testb
jmp
add
les
inc
cli
sbbl
imul
outsb
jmp
lods
aad
or
int3
cld
gs
aas
xchg
fcompl
rcrb
mov
adc
xchg
outsl
aas
xchg
mov
mov
sub
mov
aad
fldcw
xabort
sbb
dec
sbb
sub
repz
jg
outsl
test
mov
test
int
xor
movsl
sbb
jne
ss
mov
adc
out
inc
inc
repnz
xor
bound
xor
jecxz
jge
filds
dec
or
sub
imul
xchg
dec
sbb
inc
xchg
mov
test
movsb
cmp
and
xchg
push
addl
mov
fidivrl
jbe
push
and
sub
dec
jbe
fsubrs
jns
pop
pusha
rcr
xchg
or
xor
xchg
loop
xchg
inc
mov
and
fistpll
nop
pop
mov
mov
ja
dec
inc
sub
cltd
mov
xchg
mov
fiaddl
fistps
mov
inc
sbb
jb
lcall
push
or
imul
pusha
subb
ds
xor
jae
xlat
outsb
cli
lea
pop
push
data16
sar
sub
movl
sahf
jle
and
sbb
lock
fwait
cli
push
into
sub
sub
pushf
pop
fninit
cld
sub
sbb
or
push
loope
inc
pop
xchg
das
push
add
call
pop
mov
xor
jp
and
cli
sub
out
imul
mov
lods
in
into
mov
daa
jge
jae
mov
or
rorl
cmpsb
ror
movsl
loopne
push
movsl
add
shl
lret
test
pop
clc
push
clc
xchg
push
cli
add
mov
popf
add
lret
nop
pop
loop
test
and
movsl
in
shl
cmc
push
addr16
or
adc
sub
xor
mov
jecxz
icebp
fsubrs
mov
out
test
jg
imul
xchg
jp
loope
push
dec
xor
mov
adc
jmp
xchg
xchg
rclb
nop
and
leave
push
jge
stos
xlat
mov
movsb
jae
mov
mov
xchg
fisubl
push
push
pop
add
dec
adc
js
and
aas
inc
cmc
data16
pop
adc
call
push
xor
and
pusha
xor
jg
scas
cmp
call
test
sbb
test
add
push
test
sub
cld
dec
push
hlt
xchg
addr16
sub
adc
mov
cmc
mov
aam
sbb
add
cmp
test
dec
sti
sbb
int
mov
out
fsubp
in
xor
movsl
ljmp
in
pushf
xor
mov
cmp
sbbl
test
gs
adcl
mov
sub
xchg
ret
mov
push
mov
pushf
sub
push
mov
aad
pop
pop
shlb
cmp
test
sub
mov
loopne
adc
adc
xchg
popl
movsb
jno
mov
mov
dec
out
cmpsl
pop
inc
jecxz
sub
into
sarb
faddl
push
sahf
cmp
cli
pop
clc
mov
dec
subb
push
movsl
mov
sub
rcll
daa
inc
cwtl
pop
mov
inc
ja
jo
jge
jns
jg
adc
fs
lret
and
sbb
cli
mov
insl
pushf
add
je
icebp
adc
xchg
jecxz
xchg
mov
mov
leave
ror
lods
add
aaa
scas
or
add
movsb
in
stc
adc
cltd
pop
sbb
push
pop
xor
sti
popa
ss
movsl
cmp
pop
dec
push
testb
or
mov
and
scas
mov
sbb
lcall
dec
jno
shll
pusha
dec
jecxz
cmp
iret
popl
popf
dec
daa
icebp
xor
jg
loopne
sub
dec
inc
std
ss
insb
dec
int
mov
lcall
xchg
sub
sbb
cwtl
xchg
in
inc
fmull
andl
sahf
scas
out
jnp
clc
pop
test
stos
mov
jge
push
aaa
jno
and
inc
popa
loopne
mov
push
mov
cwtl
jmp
sub
and
mov
jecxz
dec
sbb
aam
addb
mov
push
xchg
lret
mov
es
movsl
adc
inc
rcrl
dec
and
dec
ss
add
repz
cwtl
fisubrl
fwait
inc
sti
gs
stc
mov
dec
pop
pop
dec
cmpsb
adc
dec
xchg
cs
test
idivl
xor
jecxz
int
and
sbb
push
jno
add
stos
mov
jp
pop
clc
jle
push
fs
call
mov
repnz
aad
sbb
insb
jmp
arpl
jle
mov
aad
inc
js
jmp
or
mov
xchg
sbb
push
xor
in
pop
cli
sub
push
mov
les
insb
test
loopne
push
cld
call
in
clc
out
cli
jns
popf
push
and
xchg
addr16
pop
or
mov
scas
jnp
mov
sbb
pushf
push
data16
or
in
add
xchg
cmp
jg
dec
sub
fidivrs
adc
mov
std
jp
dec
xor
or
mov
pop
mov
cs
jnp
int
decb
sti
inc
sub
xor
jns
bnd
add
sbb
xor
in
or
sub
adc
scas
movsb
sbb
arpl
lret
shrl
testb
dec
push
cmp
and
lds
mov
in
shr
out
stc
enter
and
mov
xchg
stos
lret
aad
daa
ljmp
xchg
mov
mov
jns
sbb
or
addr16
lea
stc
push
jo
aas
pushf
fisubs
mov
xor
out
test
sub
cmp
xor
repnz
ficoms
pop
pop
sub
mov
das
js
scas
popa
push
lea
cmpsl
sub
cmp
inc
ja
mov
push
sub
mov
fs
pushf
fisttps
icebp
and
and
xchg
sub
push
inc
shrb
sbb
das
cli
xor
addr16
mov
adc
mov
mov
add
push
pop
cmpsl
jnp
insb
xchg
xchg
inc
scas
sub
adc
jbe
cmpsl
fistps
pop
fiaddl
xor
jl
dec
push
dec
lcall
dec
inc
xor
fnsave
push
std
out
push
xor
cmp
call
out
jge
jne
inc
outsl
lret
lods
pop
add
bound
inc
jns
mov
pushf
fsubr
data16
mov
fdivrp
daa
cmp
movsb
sub
in
mov
adc
inc
repz
jo
sub
gs
popa
popf
repz
cld
lods
dec
ret
sub
enter
test
jno
nop
xchg
int
or
mov
clc
repz
dec
adc
nop
xor
lock
popa
mov
and
and
jne
ljmp
inc
jge
int
jne
and
xchg
mov
jnp
fsubl
jmp
and
je
push
dec
push
jno
sub
sub
dec
call
pop
test
jmp
cmp
mov
and
push
out
inc
hlt
jno
pop
sbb
lods
mov
push
popa
scas
enter
stos
push
notl
add
jae
mov
rclb
loop
pop
mov
xchg
push
jne
inc
jae
cmp
pop
call
push
mov
adc
mov
divb
and
dec
jg
fwait
icebp
insb
call
xor
and
lds
dec
decb
popf
nop
push
inc
stos
bound
push
notl
mov
dec
pop
loope
les
inc
arpl
sahf
push
and
test
std
mov
lret
ret
out
mov
adc
lahf
or
insl
dec
fs
mov
sub
pop
stc
gs
shrb
mov
pop
xchg
xor
mov
push
push
mov
std
xor
imul
ret
xchg
mov
mov
xor
jne
mov
popf
ljmp
xchg
sub
add
dec
mov
pop
stc
add
movb
enter
xchg
mov
jge
fnstenv
in
in
sbb
nop
mov
inc
aad
inc
mov
imul
loopne
push
and
jecxz
in
dec
xchg
add
mov
push
test
outsb
int3
cmp
fdivl
mov
push
insb
adc
sub
push
int
and
jno
inc
add
adc
ret
iret
int
mov
fwait
imul
or
in
test
pop
mov
sub
xchg
fsubr
icebp
int3
imul
stos
jecxz
fwait
jg
nop
pop
pop
mov
push
sbb
cmpsl
pop
and
iret
fs
push
jbe
mov
adc
dec
mov
mov
cmp
mov
test
cmp
popf
inc
jp
lods
mov
stc
mov
aaa
cmp
icebp
jns
xchg
inc
mov
clc
xlat
pop
xchg
insl
sub
outsl
dec
arpl
dec
outsl
pop
arpl
arpl
cmp
pop
lahf
or
jnp
dec
aas
add
popa
subb
and
lret
aam
mov
push
and
and
hlt
add
mov
lahf
in
mov
and
add
jecxz
pop
mov
int3
cmp
or
in
mov
lcall
adc
sbb
test
call
jnp
into
imul
xorb
xchg
sub
bound
scas
push
sub
es
jne
cmp
in
cmp
hlt
addb
or
xchg
cmp
add
xchg
sub
or
je
xchg
into
sub
sub
jl
popf
inc
inc
mov
mov
repnz
mov
pop
mov
or
in
xchg
xor
xchg
cmp
pusha
adc
mov
sbb
sub
js
loope
mov
xor
ljmp
sarb
sbb
mull
imul
fwait
les
stc
mov
mov
jg
call
test
push
inc
cld
imul
mov
lds
mulb
inc
jnp
xlat
inc
xchg
popa
or
enter
jle
iret
dec
inc
sub
in
sub
mov
mov
loopew
push
outsb
jo
cmpsb
jcxz
inc
js
inc
push
pop
testl
dec
jns
or
out
je
inc
jge
gs
jg
shlb
stos
jecxz
mov
jmp
imul
insw
mov
mov
mov
sub
cmp
gs
in
xor
sbbl
and
mov
adc
push
inc
lret
pop
iret
push
jne
incl
or
pusha
jecxz
aam
mov
xchg
clc
mov
jle
xchg
or
and
inc
imul
jl
jbe
xchg
jmp
fnstenv
pop
mov
clc
mov
push
lods
je
test
dec
fisttps
pop
ja
or
icebp
xor
clc
push
push
cmpsb
insl
xchg
pop
lods
icebp
pop
jmp
fiadds
xor
sub
inc
ds
aam
or
lret
js
inc
pop
sbb
daa
repnz
jae
xchg
insl
fwait
push
push
xchg
call
dec
stos
fildl
jno
adc
into
mov
dec
lods
push
sbb
insb
mov
je
mov
jno
test
insb
mov
adc
xchg
xchg
shl
mov
das
mov
and
stos
inc
jns
and
mov
jp
ja
cmpsb
movsb
push
test
and
insl
xchg
add
push
mov
pop
rorb
xor
in
mov
outsb
and
push
bound
outsl
das
loop
enter
mov
hlt
and
shll
loopne
subb
scas
push
jb
jge
sub
stc
push
xchg
inc
add
mov
jno
jge
insb
add
bound
sub
cmp
cmp
sarb
outsb
inc
mov
fsubrs
or
xchg
out
jge
mov
imul
lods
out
xchg
out
movsb
fcompl
pop
mov
mov
push
jl
out
xor
aam
sbb
call
push
push
jns
and
popl
loopne
lods
push
or
pop
je
sbb
mov
lret
icebp
jmp
add
fdivrs
lcall
dec
icebp
mov
xlat
mov
xchg
leave
xor
addr16
fmull
or
push
push
jb
xor
xchg
push
and
dec
loop
adc
aaa
lahf
fldenv
xchg
outsb
test
dec
sub
xchg
test
addr16
lods
or
push
hlt
mov
sub
dec
lea
jbe
inc
or
inc
popf
inc
shrb
fsubrl
jmp
dec
mov
dec
xchg
mov
xor
movsb
push
dec
cmp
mov
push
scas
adc
cmp
push
jne
xor
ja
push
mov
pop
jnp
cmp
loope
adc
jne
cmp
mov
jne
lea
fs
xchg
xchg
addr16
push
fisubrs
ret
lods
and
scas
decb
test
pop
stc
sub
push
lds
sarl
cmp
dec
int
cmc
mov
jno
cmpsb
mov
lea
addr16
mov
dec
leave
std
cltd
xchg
jge
aaa
fdivp
xchg
shlb
mov
push
int3
jecxz
add
divb
das
ja
fisubs
jge
in
cmp
xor
push
sbb
std
xor
test
sbb
dec
int
jb
adc
mov
faddl
scas
add
cmpsb
in
xor
ljmp
sub
std
pop
or
lock
test
fwait
mov
test
loop
adc
jl
loopne
jo
mov
sub
or
jnp
adc
cwtl
and
aad
xlat
jecxz
xor
aad
dec
dec
scas
push
fnstenv
les
pop
lret
sarb
addr16
xchg
repz
loope
ds
push
cwtl
lods
dec
rcll
inc
mov
jns
xor
dec
mov
neg
sbb
sub
xchg
or
push
cmc
mov
sbb
je
leave
into
fisubrl
mov
add
inc
sub
test
mov
mov
pop
xchg
push
xor
pop
mov
pushf
mov
mov
mov
repnz
cmp
fidivl
or
xor
adc
add
push
adc
movsl
pop
push
add
sub
repz
sub
jne
fimull
das
data16
push
cltd
ret
add
sub
sbbl
inc
mov
inc
pop
fcoms
shlb
les
dec
fisubrl
sub
repz
iret
out
mov
je
pushf
nop
scas
push
cld
xchg
sub
aad
lds
iret
mov
sbb
cwtl
jg
pusha
jl
or
das
cmp
push
mov
out
pop
fmul
imul
jmp
iret
jno
arpl
jge
ficomps
mov
mov
int3
jecxz
fadds
lock
and
cmp
pop
and
cld
es
ljmp
stc
cmp
jae
push
ret
or
aad
xchg
pop
clc
push
xorl
sub
mov
xchg
adc
pop
out
sbb
xchg
and
or
dec
shl
iret
daa
adc
cmpsb
subps
jno
aaa
ret
sbb
das
xchg
jle
dec
mov
push
mov
aam
cmp
cmpsl
push
jmp
cmp
push
push
sti
gs
adc
or
test
or
cmp
or
iret
dec
stos
xlat
push
sub
cmp
push
ret
inc
add
repnz
fisttps
jle
aam
pop
mov
aad
loopne
jnp
sbb
sbb
xor
fisttpll
push
cmp
jae
mov
out
push
sbbl
cwtl
pop
sbb
xlat
add
cmpsl
inc
outsl
xor
insl
adc
push
inc
push
rcrb
push
push
mov
das
cmp
sub
xchg
mov
push
sub
out
dec
out
icebp
or
test
xchg
clc
mov
pop
sub
cmp
push
hlt
mov
inc
jge
fistl
cmp
inc
repz
rcl
ret
mov
pusha
fildll
icebp
ret
push
mov
in
dec
and
in
pop
or
inc
pusha
dec
sbb
mov
lods
pop
ljmp
sub
pop
adc
mov
dec
mov
pop
test
or
dec
xor
js
icebp
mov
fnstenv
dec
mov
push
mov
aas
sub
xor
sarl
sub
xchg
jmp
and
scas
aad
mov
insl
nop
sub
dec
pop
cmp
movsb
adc
mov
sbb
push
aas
adcl
jae
fmul
sbb
add
pop
lea
dec
sub
mov
ret
add
leave
inc
adcb
std
jno
xchg
cmp
sbb
jge
or
pop
add
fadd
arpl
sti
mov
mov
inc
sbb
rcll
or
int3
add
jl
mov
clc
mov
mov
mov
insl
and
rcrb
sbb
add
shlb
xchg
or
les
dec
and
fnstenv
xchg
mov
sbb
inc
aas
jbe
sbb
fldcw
inc
or
enterw
insl
pop
mov
pop
cmp
jge
push
push
aaa
mov
xchg
xchg
xchg
jne
sub
ja
scas
out
pop
jo
sub
sbb
loope
or
iret
adc
lods
ljmp
test
cmp
mov
push
into
jle
dec
pop
mov
jb
adcb
cmp
sub
imul
outsl
ret
inc
cmc
call
pusha
nop
jmp
or
stc
pop
fwait
ret
mov
xchg
pop
inc
dec
negl
mov
rorb
jne
sbb
enter
add
dec
pop
fistps
add
cmpsb
addr16
gs
push
stos
mov
sub
ds
aad
fs
pop
in
jl
daa
xchg
mov
jl
inc
outsb
mov
sbb
dec
and
pop
fstps
in
dec
dec
xor
cmp
sbb
shrb
test
add
cmp
push
adc
xchg
or
pop
jmp
jb
cmp
out
cltd
adc
adc
pop
lock
loope
mov
fistl
das
dec
cmp
insb
ja
cmp
mov
shrl
movsl
daa
xchg
in
jb
je
dec
shr
mov
daa
jge
push
in
lret
or
ds
jae
stc
into
inc
xor
fcom
fwait
js
adcb
into
dec
add
ss
gs
xor
std
sbb
mov
cmp
into
psubq
mov
jo
movsb
aaa
xchg
lea
push
js
push
dec
stos
sbb
or
aaa
and
scas
sub
repz
adcb
sbb
daa
out
iret
inc
mov
dec
es
xlat
push
pop
sub
pop
jecxz,pn
cmp
cld
lret
and
rorl
repnz
dec
popl
xor
movsl
test
jecxz
jne
je
lret
pop
fsts
inc
inc
fcmovbe
out
mov
jne
das
jae
addr16
jecxz
or
sbb
pusha
iret
stc
adc
mov
or
sbb
cmp
push
sbb
call
mov
pop
mov
fstpt
push
adc
xor
jg
sti
jns
mov
or
insl
cmp
xor
ja
add
decb
andb
out
inc
sub
sbb
rclb
sbb
and
dec
inc
mov
in
or
inc
addr16
jp
enterw
jno
xchg
mov
bound
jnp
in
add
fwait
int
mov
mov
sub
mov
push
pop
jnp
mov
mov
dec
mov
pop
xor
repz
mov
bound
mov
mov
or
inc
test
scas
cmp
addr16
nop
fistpl
jnp
cmpsb
xchg
mov
addl
ljmp
ja
insb
loop
xor
pop
jge
xor
lods
xorb
out
dec
cs
sarl
in
mov
out
mov
mov
notl
sbb
gs
int3
and
mov
je
iret
adc
jb
ret
push
mov
jecxz
push
push
sarl
sub
cld
stos
xor
ds
das
scas
js
xor
fstpl
inc
into
pop
sbb
nop
in
sbb
lods
shl
and
sbb
stos
flds
and
inc
add
inc
jp
rcl
enter
sbb
test
pop
inc
push
clc
movsb
adc
jmp
add
inc
div
add
movsb
mov
cmpsb
ja
xchg
fldl
lcall
jecxz
cmp
iret
jnp
fwait
add
xchg
cmpb
adc
xchg
inc
jo
inc
sub
mov
data16
testl
mov
cmpl
mov
mov
mov
int3
jo
inc
add
nop
jbe
repnz
cmp
movsb
adc
js
sbb
or
add
cmp
sbb
fimuls
mov
bound
stos
cmp
lods
mov
sub
push
rcrb
neg
jp
sbb
sbb
cmpsl
jmp
pop
inc
std
sub
jae
shll
out
out
clc
inc
inc
leave
lea
fidivrl
mov
pop
push
mov
inc
sbb
sub
gs
cmp
lcall
out
push
mov
mov
cmp
jbe
or
inc
in
ljmp
testl
aas
fdivrl
xlat
pop
cli
test
mov
jnp
stos
pop
inc
jb
dec
xor
jecxz
int3
add
arpl
pop
mull
lock
les
jg
sar
push
or
push
cmp
hlt
jmp
mov
cwtl
xchg
xchg
sub
jg
in
ret
hlt
test
adc
xor
dec
inc
dec
inc
sub
mov
and
xorl
push
mov
sub
lea
fidivrl
orl
rorb
add
jbe
or
das
adc
push
cwtl
inc
pmaxub
mov
stc
pop
ds
or
jae
mov
idivb
pop
and
cmp
xlat
insb
xchg
jb
dec
repz
sarb
data16
jo
lret
xchg
mov
fucomp
adc
enter
jne
pop
lds
xchg
jb
jae
sub
jne
sti
fstpt
lds
hlt
xorl
js
je
sbb
ret
xor
sub
dec
leavew
inc
clc
mov
sub
cmpsl
fcompl
cmpl
out
add
insb
enter
jg
adc
jge
xor
pop
cmp
fists
mov
inc
xor
xchg
test
insl
pop
imul
sbb
dec
ss
out
push
lock
or
sbb
aam
push
mov
mov
in
and
jno
daa
jno
popa
cmc
xchg
movsb
xor
xchg
pop
cmp
fists
pop
aaa
repnz
cs
sbb
sub
xchg
dec
imul
push
fstps
or
pop
shlb
add
dec
cli
and
push
add
call
seto
pop
pop
xchg
and
in
stc
jno
jae
arpl
sbb
adc
pop
cs
lret
lret
jo
jnp
dec
sub
jl
daa
ret
push
out
fs
adc
adc
sbb
add
ret
add
pop
scas
js
test
scas
jbe
xchg
bound
stos
aam
mov
sub
lret
pop
push
xchg
add
mov
fsubr
js
inc
mov
add
mov
je
std
mov
and
mov
repnz
sbb
stos
mov
sub
adc
dec
push
or
sub
shlb
mov
test
loop
jne
xchg
test
add
inc
fcmovnbe
dec
mov
add
push
jp
sub
ret
in
loopne
jp
sbb
xor
xchg
add
cmc
enter
dec
ljmp
mov
push
xorps
adc
push
xor
loopne
in
loope
xlat
or
jle
stos
push
ljmp
mov
cmpsl
jb
add
ja
test
orb
test
insb
out
mov
mov
or
sub
js
ss
stos
imul
sub
iret
cmp
mov
cmc
and
lea
add
int
data16
jmp
loopne
and
aad
push
loop
adc
push
sub
insl
add
mov
push
scas
movsb
jmp
inc
adc
inc
call
jg
adcl
jmp
loopne
dec
cmp
mov
lret
mov
mov
sub
sti
mov
mov
mov
sbb
out
adc
add
aad
inc
adc
ret
aam
xchg
xchg
fcompl
aas
or
inc
call
mov
sub
dec
mov
dec
sub
jne
repnz
dec
cmpb
push
mov
gs
mov
sub
mov
lds
and
pop
push
xor
in
fisubl
xorb
imulb
out
mov
mov
jne
sbb
push
fiadds
push
popa
xor
mov
and
lret
mov
xrelease
mov
les
and
adc
dec
mov
xor
imul
lret
mov
sbb
push
xchg
xorl
cmp
in
xchg
cs
out
cwtl
fmull
stos
arpl
icebp
add
fst
std
in
daa
jno
addl
sub
add
scas
and
inc
sub
sbb
pop
pop
jge
mov
cmpsb
cmp
stc
fdivl
and
and
pop
inc
xchg
ja
jns
jmp
fndisi(8087
sbb
shrb
imull
clc
das
xchg
jbe
sbb
cmp
ljmp
fildl
mov
xorb
outsb
push
sbb
aas
mov
xchg
xchg
bound
jae
std
in
out
push
out
stos
lods
gs
sub
aam
popf
mov
es
or
in
pop
mov
pop
gs
pushf
lret
out
xchg
sahf
mov
jp
ret
ja
add
sarl
pop
lahf
cld
xchg
std
mov
push
js
mov
xchg
cld
push
jbe
mov
outsl
sub
test
mov
mov
xchg
cld
cmp
adc
mov
inc
jp
lock
sbb
push
stos
ret
pushf
cld
test
rorl
hlt
push
in
lret
pop
inc
dec
mov
xor
int
dec
out
or
jb
jmp
or
out
push
sbb
xchg
jmp
mov
fmul
addr16
sub
ljmp
cmp
insl
ljmp
or
es
lea
das
loop
adc
xor
inc
sub
mov
out
sbb
out
push
mov
jl
mov
add
xchg
xchg
pop
sbb
push
jae
inc
stos
and
sbbl
sti
mov
daa
je
test
sub
popf
cwtl
jle
gs
pusha
std
lds
sbb
jbe
adcb
ret
data16
iret
lahf
sti
mov
mov
aam
mov
push
push
or
std
add
divb
mov
mov
popa
sub
push
mov
pop
cli
add
mov
pop
pusha
adc
inc
pop
jnp
xchg
jle
sub
gs
cmp
jo
jmp
jl
jg
xchg
sub
adc
lock
pop
clc
repz
xor
push
xor
jle
dec
inc
test
int
lahf
clc
xor
scas
lret
add
push
shr
add
clc
ficompl
cmpsl
pop
mov
cmp
pop
push
std
mov
gs
adc
mov
add
int3
pop
sub
ljmp
roll
sahf
iret
lret
add
adc
ja
xor
fcomps
lods
cmp
rcrb
inc
mov
movsb
xchg
xor
jmp
ficompl
jp
cmp
sbb
sahf
and
outsl
xor
xchg
inc
aas
iret
add
jmp
insl
jbe
add
fistpll
enter
jne
subl
jo
popa
push
out
xor
call
push
jecxz
ret
out
adc
mov
test
mov
outsb
pop
xor
adc
clc
lret
or
dec
inc
data16
fwait
cmp
push
mov
mov
or
xlat
hlt
dec
jno
mov
sahf
data16
lods
test
stc
jmp
inc
bswap
jmp
lret
roll
mov
push
sub
sbbb
pop
sbb
popa
add
sbb
ljmp
sub
gs
iret
cmp
jo
add
lret
push
adc
mov
jmp
pop
dec
xor
push
data16
pop
out
arpl
or
ffree
inc
xchg
imul
std
xchg
repz
mov
in
dec
pop
push
movsl
addl
mov
outsb
subl
add
cmp
enter
in
push
mov
push
nopl
imul
mov
xor
fldcw
cmc
data16
xor
in
cmpsl
inc
jo
or
je
push
fadds
mov
cmpsb
jb
pusha
mov
out
mov
and
jg
iret
pmulhw
mov
je
add
sbb
or
lock
ljmp
xor
in
subb
pop
stos
shlb
iret
testl
cltd
pushf
jle
xchg
mov
cld
cltd
punpckhbw
xchg
dec
inc
stc
jnp
sub
scas
js
mov
mov
test
mov
mov
scas
xchg
xor
out
pushl
pop
xchg
ja
push
xchg
xchg
dec
out
push
je
rol
gs
ljmp
enter
add
xor
rcll
pop
mov
loop
push
inc
jbe
sub
sbb
cmc
lock
mov
xlat
scas
mov
inc
inc
mov
xor
mov
and
call
repnz
or
inc
push
mov
inc
gs
pop
fidivs
loop
xchg
loope
idivl
test
push
mov
fistl
dec
mov
mov
sub
out
cmpsl
aas
pop
out
pop
lock
sub
out
cmp
xchg
inc
mov
cmc
pop
ss
cmp
push
stc
loop
sub
sahf
daa
popa
out
or
test
inc
test
leave
add
cld
lcall
sub
lds
dec
or
ret
dec
adc
mov
js
rcrb
xchg
sti
icebp
iret
push
adc
mov
mov
jns
inc
add
lret
lds
pop
test
sbb
stos
cmp
pop
insl
in
jbe
jmp
push
mov
mov
and
inc
add
xchg
movsb
negl
les
xchg
aad
jne
fsub
shrb
mov
and
push
pop
std
stos
adc
pop
fcmovnbe
or
sbb
and
enter
xor
xchg
scas
xor
or
adc
and
xchg
addl
xchg
adc
int3
mov
shr
stos
add
mov
and
sbb
mov
or
push
pushf
mov
add
and
dec
xor
call
in
int
pop
mov
stos
arpl
jmp
aaa
mov
popa
inc
mov
xor
cmpsl
pop
cmpb
xchg
dec
aaa
lea
jb
inc
arpl
or
sbb
mov
fists
fldln2
scas
mov
push
adc
mov
xchg
xchg
xor
out
adc
push
std
add
or
imul
fidivrs
or
xlat
xchg
aas
in
sbb
xor
xchg
shrb
xchg
jl
jg
fisttps
adc
cmp
mulb
inc
mov
cwtl
pop
jg
add
xchg
sbb
mov
inc
sbb
push
jno
fistl
subl
push
push
jg
pop
xchg
xor
cs
add
xchg
rolb
cs
je
lcall
pop
jae
push
jp
stc
pop
cld
sub
test
pop
lds
test
push
pop
in
int
lds
mov
adc
out
lret
adc
inc
scas
inc
adcl
sub
lret
push
rorl
add
mov
in
into
mov
lahf
call
cmp
aas
fnstenv
cmp
cmp
mov
adc
mov
stos
jo
jb
add
xchg
icebp
xor
shll
ror
jne
add
fmull
mov
adc
inc
inc
sti
mov
xor
mov
shlb
and
mov
mov
mov
mov
xchg
in
je
lods
sub
hlt
mov
sub
and
imul
fistps
inc
test
xor
dec
cmp
shll
lock
dec
in
push
sub
sbb
or
push
mov
sub
mov
or
jbe
pushf
pop
inc
test
adc
ljmp
add
int3
in
sbb
lret
or
push
add
pop
cltd
dec
cmp
icebp
movsb
mov
fcomip
rol
jb
inc
popf
jo
mov
sarl
inc
sub
xlat
arpl
dec
jge
sbb
and
pushf
jbe
aaa
xor
sub
ljmp
mov
popf
jle
fsubs
in
cs
ljmp
mov
leave
adc
daa
std
out
xor
and
cld
stos
bound
cmp
pop
fdivl
imul
cmpsl
test
in
pop
cmpsl
movsl
add
adc
dec
movsb
pushf
add
addr16
repnz
rorb
mov
pop
aad
test
and
outsb
movsb
cltd
fistps
notb
sub
push
test
scas
loop
ja
lcall
sahf
fldt
adc
outsb
daa
clc
lcall
and
dec
hlt
sub
ss
shlb
mov
daa
int3
pop
xor
orl
outsl
lret
ljmp
mov
pop
aaa
dec
or
sbb
ljmp
mulb
cli
aam
pop
ret
mov
ret
inc
out
dec
aam
mov
decb
ds
push
fdivs
roll
mov
jbe
ret
dec
inc
pusha
jg
add
loopne
add
cmpsb
or
hlt
test
add
mov
mov
gs
mov
mov
push
dec
adc
test
fs
xchg
jae
ljmp
int
xlat
icebp
push
pop
lods
fcompl
in
xor
xchg
out
mov
mov
and
inc
sbbl
fwait
enter
sbb
out
mov
int3
xor
jo
and
movsb
cltd
iret
add
das
test
cmp
inc
jnp
outsb
xor
lahf
mov
cmp
cld
xchg
and
pop
cmp
cmpsb
in
test
pop
and
mov
aam
push
cmp
rcll
aaa
out
or
jecxz
inc
out
mov
mov
push
test
jmp
test
push
add
xlat
loope
sbb
ja
and
clc
xor
cwtl
cs
out
hlt
and
and
lock
cmp
icebp
outsb
pop
sbb
insl
and
ljmp
sub
push
les
sub
pop
insb
and
fsubs
mov
push
mov
xlat
sub
out
push
xchg
cmp
adc
push
data16
dec
and
imul
gs
adc
outsl
enter
fcomps
dec
mov
lret
and
mov
xchg
adcl
std
dec
mov
inc
jne
clc
icebp
pop
cmc
hlt
cwtl
mov
or
pop
loopne
xchg
cs
mov
negl
mov
mov
aas
dec
cmc
add
jmp
addb
fsubrl
mov
scas
push
das
sbb
sub
cmp
addr16
mov
cmc
pop
lds
sub
mov
pop
movsl
pop
add
jmp
adc
rcl
outsl
xor
jge
mov
push
aas
es
insb
aad
jo
add
jmp
lds
int3
rcrb
cmovs
push
fcomip
call
mov
mov
inc
pop
jl
pop
push
push
push
pop
adc
xchg
sub
mov
fidivs
sbb
mov
xor
aad
push
aad
add
fsubrl
and
out
stos
xchg
cld
iret
xor
cmp
xchg
test
xor
pop
dec
mov
fnstcw
and
sub
sub
and
fadd
xchg
movsl
add
clc
jmp
pop
test
cmp
xor
cmpsb
notl
push
rolb
mov
inc
xchg
repnz
and
push
icebp
loope
fimuls
aam
and
or
stos
aam
icebp
cmp
dec
pop
inc
add
xchg
or
jl
jl
outsl
and
cld
dec
sub
push
xor
bound
xchg
popf
cmpsb
push
cmp
inc
stos
or
adc
sub
pop
call
xor
call
aaa
add
dec
cmp
mov
mov
xchg
mov
fistl
mov
or
out
stos
iret
test
mov
enter
arpl
mov
jge
jge
fwait
add
movsb
inc
sub
inc
movsl
in
imul
repnz
insb
mov
cmc
stc
shll
mov
add
mov
pushf
stos
in
lret
into
nop
sti
jge
lods
cmp
test
mov
in
mov
cli
cmpl
nop
rolb
lock
adc
je
cmp
and
stos
add
and
cltd
sbb
es
js,pn
gs
inc
mov
cmpsl
dec
cli
push
cmp
fbld
and
dec
out
pushf
out
mov
jbe
xchg
mov
in
adc
mov
jb
mov
pop
lods
inc
dec
lahf
xchg
sahf
imul
xchg
add
xor
jnp
dec
jl
pop
fimull
pusha
mov
dec
fisubl
xor
cmpsl
pop
add
mov
clc
insl
push
push
adc
adc
ret
xchg
in
mov
outsl
pop
cmp
icebp
out
ret
sahf
push
sub
pop
add
je
add
fcomip
or
dec
mov
jb
ret
inc
cld
mov
int
rorl
into
imul
adc
in
pop
inc
arpl
add
lcall
mov
pop
pushf
and
fs
mov
in
sub
std
inc
sub
lock
and
das
or
push
outsl
mov
push
andl
aam
fdivs
movsb
nop
ds
outsb
leave
cld
add
mov
mov
sbb
test
into
push
test
push
cmc
mov
ljmp
shrl
subb
inc
push
adc
xor
xchg
xchg
std
jnp
xor
mov
stos
mov
outsb
mov
push
xchg
out
pop
les
jbe
jb
ret
enter
sub
sbb
mov
adc
adc
mov
xor
shl
push
pusha
clc
mov
jmp
mov
ret
mov
cmp
ds
cli
mov
jno
adc
fcoml
shll
xchg
sarl
cwtl
in
adc
ss
adc
sbb
dec
icebp
aaa
cmp
xlat
imul
out
jp
xchg
stos
push
adc
inc
not
dec
or
pop
dec
sbb
orl
or
dec
sti
and
decl
xchg
sbb
push
fimuls
jl
lahf
call
ja
or
xchg
push
add
jno
stc
addl
test
lret
daa
mov
inc
into
sti
inc
fimuls
andb
pop
dec
je
loopne
mov
cmp
mov
andl
dec
pop
lds
inc
and
stos
js
or
addb
in
pusha
xchg
insl
push
sti
push
std
aad
pusha
test
adc
mov
mov
adc
mov
add
inc
int3
xchg
arpl
daa
xchg
enter
cmp
cli
push
pop
outsl
add
ficompl
mov
cmpsb
xor
cli
pop
enter
ja,pn
and
repz
or
mov
lret
and
adc
dec
addr16
push
cmp
sub
out
in
shrl
inc
hlt
fwait
pop
loopne
adc
movsl
cld
decb
or
and
repnz
je
add
mov
fs
jne
popf
rcrl
je
or
fs
add
inc
hlt
and
fimull
js
mov
int
nop
cmpsb
pop
cld
pop
inc
push
mov
sbb
fcomip
cmp
pop
lods
pop
inc
movsl
push
bsf
cmpsl
push
ret
and
test
push
int
adc
shrb
add
sbb
out
mov
lock
repnz
pop
jbe
sbb
cmp
mov
inc
push
mov
add
lret
rorb
insl
mov
nop
and
xchg
out
pop
adc
fnstenv
sub
sub
sbb
sbb
test
imul
popf
imul
pop
fldenv
sbb
pushf
push
cmc
jmp
lds
outsb
daa
sbb
jne
mov
mov
pop
mov
inc
jg
cltd
adc
and
inc
pop
cmp
sti
xchg
push
mov
dec
jg
cvtdq2ps
imul
icebp
add
xchg
je
sbb
out
insl
xchg
xchg
out
es
xor
push
shl
push
repnz
sub
dec
stos
sbb
mov
rcll
cmpsb
push
or
pop
mov
jbe
add
inc
adc
lods
std
mov
mov
fcompl
lock
dec
in
cwtl
stos
pop
pop
push
xchg
and
xor
mov
lret
cmp
seto
pop
andb
pushf
mov
fisubs
rolb
clc
into
lods
xchg
mov
push
jne
mov
pop
add
lret
outsl
push
xchg
mov
jle
out
xchg
inc
mov
push
adc
cmc
or
push
pop
jle
das
dec
mov
fs
test
or
pop
gs
sub
add
cmp
mov
pop
pcmpgtw
mov
push
inc
out
add
cmp
cmp
jb
in
push
lods
aas
sbb
push
test
sarb
push
lods
andl
popa
or
mov
pop
es
mov
jae
push
fistpl
mov
add
sub
push
push
mov
push
sub
xor
scas
push
mov
cmc
jno
adc
dec
mov
cmc
pop
or
pop
mov
lret
dec
mov
out
jg
pop
rclb
xor
outsb
inc
rclb
insb
mov
cmp
fldl
jnp
bound
int
pop
loopne
mov
mov
inc
xchg
jmp
mov
xchg
xor
mov
cmp
cmp
mov
jb
sbb
jnp
push
push
cli
mov
adc
gs
xchg
pushf
adc
cmp
repz
nop
in
inc
test
out
xor
rcr
int
mov
mov
leave
lcall
lods
pop
dec
add
inc
pushf
rorb
cmpsb
or
popf
and
xchg
addl
mov
pusha
push
pop
ret
adc
cmpsl
xor
adc
lahf
mov
lds
stos
movsl
push
out
mov
mulb
pusha
mov
cld
mov
pop
lea
sub
mov
loopne
out
cltd
xor
push
enter
lods
inc
adc
into
jmp
or
or
mov
ss
and
out
repz
sbb
loopne
scas
out
nop
push
ljmp
mov
add
sti
inc
or
insl
mov
mov
push
and
fsubr
test
shl
aam
sbb
test
xchg
lea
sahf
fbstp
push
out
cwtl
sahf
pop
cmp
lcall
sti
aad
mov
lahf
xor
mov
dec
push
cmp
scas
push
lcall
jnp
push
iret
punpckldq
cmp
push
push
ror
pop
js
int3
jecxz
and
mov
mov
pop
iret
mov
push
mov
pop
adc
clc
or
cld
fsubl
je
into
jmp
push
imul
sub
mov
das
sub
fnsave
mov
push
ret
mov
mov
sbb
lods
jb
dec
popa
pop
cmp
lea
mov
push
pop
or
mov
loope
push
mov
or
repnz
test
shl
ret
push
mov
xchg
xor
out
add
inc
push
movsl
push
push
stos
fildll
clc
dec
es
mov
mov
addr16
or
inc
mov
leave
test
jne
and
inc
cmp
mov
jecxz
xchg
lret
flds
ss
aaa
ja
push
push
stos
mov
cltd
lds
fmull
in
pop
in
icebp
adc
sub
lods
and
adc
mov
mov
iret
les
cmp
nop
push
cmpsl
jmp
push
inc
cmp
fbld
pop
cltd
jecxz
inc
orb
test
arpl
scas
xor
xchg
push
mov
inc
shlb
outsl
push
jno
mov
movsl
pop
not
cmp
rcll
cmp
jae
das
incb
push
into
lret
pushf
jl
movsb
aam
xor
adc
cmp
inc
push
jp
ss
lret
bound
jl
lods
cli
and
stc
jns
push
fsubs
jmp
push
sbb
and
aam
add
fidivrs
pushf
rcr
lret
pop
push
sbb
js
mov
into
in
mov
jg
and
jecxz
mov
push
jl
xor
cmp
lods
mov
bound
mov
in
mov
adc
sahf
xchg
orb
push
push
testb
ja
outsl
dec
dec
and
js
mov
ja
xor
enter
sub
or
push
mov
stos
or
or
jg
push
pop
sub
sti
std
adc
clc
fwait
les
push
mov
cltd
mov
lahf
and
sbb
fsubl
insb
push
es
jne
repnz
aaa
divl
add
sbb
stc
or
add
mov
pop
inc
cmp
sbb
add
mov
stc
add
je
cmc
enter
fisttps
imul
mov
push
imul
ret
ret
nop
jmp
add
sbb
js
cmp
orl
or
lods
mov
push
fwait
stos
xor
dec
sarb
push
mov
lret
cld
lret
cld
xchg
ret
popa
adc
out
mov
adc
push
lret
insl
movsb
sahf
in
xchg
movsb
shll
push
push
es
mov
imul
dec
mov
out
jno,pn
push
stos
inc
pop
adc
jbe
inc
pusha
add
xorb
fildll
ss
rorl
aas
adc
sub
add
fidivrl
mov
rol
jb
adc
je
fdivl
loope
and
jno
icebp
pop
dec
cmp
dec
inc
add
xor
insb
adc
dec
push
adc
push
movsl
or
sub
jle
ss
mov
xor
mov
mov
mov
push
dec
jbe
pop
cli
decb
xchg
inc
xchg
inc
sbb
mov
in
adc
cmp
jae
mov
ret
shlb
stc
inc
mov
cmp
decb
pushf
insl
fcmovnbe
sub
fdivrs
cld
xor
fsubl
out
icebp
or
fdivl
jg
scas
addr16
lods
mov
fneni(8087
push
imul
add
mov
push
leave
sbb
scas
sbb
mov
cli
fidivl
aad
lret
fisttps
out
add
outsb
cld
dec
sti
pop
data16
mov
enter
ja
jae
out
mov
outsl
mov
das
cmp
pushf
fmul
and
sub
cmp
xchg
jmp
lahf
call
cmpsl
notb
and
out
sbb
xchg
mov
mov
inc
movsb
ds
pushf
sub
test
xchg
loopne
enter
aam
sub
lahf
push
xchg
push
outsl
imul
lods
es
inc
mov
les
add
xor
or
rorb
inc
mov
mov
jg
jnp
push
je
lds
jno
or
jmp
fidivrs
in
rorl
add
or
lods
in
mov
cltd
and
pop
jge
mov
gs
je
jl
push
xlat
data16
call
xchg
es
bound
test
stos
or
sub
cmpsb
pop
sub
jg
stc
inc
jecxz
or
sub
dec
pop
fldl
xorb
cltd
add
and
testl
sub
mov
xor
cs
jae
gs
xor
mov
sub
aad
mov
adc
cmp
popf
sar
scas
mov
xor
pop
insl
mov
mov
dec
lods
pop
cwtl
inc
mov
mov
cmp
or
jmp
xchg
mov
les
xchg
push
addl
push
daa
xchg
rdtsc
in
jb
jp
fsub
in
fcoms
mov
dec
adc
lret
sbb
inc
add
inc
jo
xor
adc
push
adc
inc
fsubr
push
fisubl
push
cmp
lret
rorw
xchg
mov
mov
and
int3
dec
addl
sub
xor
jb
pop
out
arpl
cmc
lods
push
insl
xor
xchg
fistl
or
pop
out
mov
es
mov
lcall
inc
push
into
mov
mov
ss
loope
es
and
jae
mov
clc
and
ret
xchg
sbb
jmp
sti
lahf
and
fld
jnp
repnz
mov
les
pop
cmp
cmp
mov
dec
pushf
clc
stc
adc
dec
fmuls
stos
fistl
divl
in
inc
ds
gs
les
jecxz
pusha
roll
mov
rclb
mov
lds
aam
sub
inc
addb
push
fldcw
xchg
cmp
pop
push
cmp
nop
xor
sbb
xchg
cld
xchg
push
mov
lahf
ds
pop
lret
pop
ss
lahf
cmp
sbbl
pop
jne
add
mov
loopne
hlt
xor
add
cltd
inc
hlt
jp
lods
pop
push
mov
das
cli
and
int
daa
cmp
or
pop
mov
sub
lods
inc
cld
push
sbb
or
adc
scas
outsb
mov
movd
cmpsl
add
shrl
and
mov
xchg
ja
test
adc
fs
cmp
fisubrs
cmp
fsubs
push
movsb
sbb
imul
out
sbbb
sti
sahf
shlb
es
mov
mov
mov
cwtl
pop
push
push
cmp
xchg
mov
xchg
pop
insl
add
cwtl
and
outsb
lods
inc
or
pop
imul
aad
mov
lcall
daa
inc
sub
outsb
fdecstp
loop
cmp
movsl
fildl
sub
inc
adc
jl
insl
jge
jge
mov
int3
enter
and
push
jnp
mov
cmovp
xchg
testb
std
mov
call
dec
mov
push
or
and
adc
scas
or
imul
mov
test
pop
jge
sahf
inc
rol
lea
adc
scas
or
push
push
aas
mov
ljmp
pop
aas
mov
nop
push
fcomps
in
ret
jmp
iret
sti
sbb
sub
test
and
push
dec
stos
aas
lds
mov
xchg
imul
movsb
jmp
mov
adc
jnp
test
mov
movsl
push
adc
ffree
rcl
cmp
lock
xchg
ljmp
mov
pop
mov
push
je
ret
or
fs
movsl
and
movsb
pop
mov
into
mov
cmpsl
in
in
stos
adc
mov
test
cmp
inc
je
sahf
fisubrl
addl
xchg
fcompl
jp
xor
add
mov
cmp
pusha
sub
das
xchg
jmp
add
sub
enter
fldenv
inc
adcl
aaa
sti
dec
pop
andb
iret
add
cli
shll
dec
xor
xchg
add
mov
mov
xor
push
fsts
jmp
out
add
xchg
sub
cmpsl
xor
fisubrl
push
add
aam
push
pop
cmpsl
jne
cmpsl
or
mov
mov
adc
adc
mov
notb
insb
mov
cmc
inc
adc
out
and
repz
push
shrb
cmpsl
mov
mov
cmp
out
or
test
pop
repz
jg
jno
popf
hlt
insb
pusha
mov
jno
add
shl
call
repz
jmp
repz
jp
mov
jg
mov
cmp
mov
mov
fbld
xchg
sarb
test
xlat
sbb
push
ja
mov
repnz
fildll
fnstsw
clc
sub
loopne
sbb
xor
or
out
mov
pop
aad
test
dec
jmp
ljmp
mov
and
repz
inc
fnsave
stos
jg
sub
or
ja
enter
fisubrs
jo
xor
gs
cmp
xrelease
push
xchg
lret
fsubrl
adc
mov
insb
pop
loopne
mov
adc
outsl
cmp
dec
arpl
cwtl
sbb
dec
sub
add
pop
enter
mov
push
sub
aam
insb
sbb
jge
ficomps
pusha
cltd
cmc
mov
sbb
cmp
mov
loope
mov
pop
test
cmp
adcb
mov
sub
xchg
int
add
and
dec
cltd
push
inc
pop
cli
icebp
idiv
fisubrs
daa
pop
xchg
mov
xor
daa
pop
xor
call
or
add
mov
insb
sub
ret
push
cmp
js
aam
insb
or
push
adc
pushf
call
ljmp
inc
jp
fnsave
dec
push
mov
mov
pop
popf
das
mov
scas
jge
jmp
mov
mov
pop
mov
js
sub
adc
lods
fstpl
outsl
mov
add
mov
filds
sub
stos
mov
mov
nop
pop
dec
push
fiadds
or
jge
ret
push
inc
mov
add
xor
adc
pop
test
gs
dec
add
bound
fs
xchg
push
out
sbb
jno
jmp
mov
push
and
and
mov
pop
cltd
dec
insb
jmp
rorl
mov
test
enter
lea
sarb
bound
addr16
dec
shll
outsb
ja
lea
jle
out
aas
lcall
xor
shll
test
xchg
mov
adc
xlat
clc
sbb
adc
and
movsl
mov
push
out
lcall
push
xor
aad
mov
pop
outsl
dec
das
imul
mov
movsl
fwait
push
jg
leave
js
dec
adc
or
or
mov
shl
fwait
test
aam
fs
enter
jne
mov
rcrb
fbld
mov
dec
gs
loop,pt
repnz
add
jbe
sbb
fs
decb
jns
add
xor
xchg
js
pop
ljmp
fldcw
cmp
arpl
cltd
pop
cld
sahf
lds
or
adc
cmp
pusha
cli
pop
call
ret
fwait
shlb
add
jmp
jbe
add
mov
fists
xchg
push
jp
jae
ss
jb
cmpl
add
popa
mov
dec
jg
adcb
lret
outsb
notb
mov
ret
pusha
adc
and
sub
jns
sti
pop
adc
sub
sub
mov
cli
icebp
rolb
and
lods
stos
gs
daa
pushf
jle
shll
outsl
stc
or
pop
arpl
std
out
pop
sbb
or
push
scas
orb
test
jno
pop
call
out
dec
sub
fcompl
cmp
pop
ret
pop
sarb
mov
icebp
sbb
mov
lods
lcall
notb
xchg
inc
shlb
mov
mov
icebp
jmp
cmc
out
lret
lea
daa
les
std
test
cmp
push
jmp
into
pop
fldenv
jp
dec
mov
add
mov
add
movsb
adc
xchg
mov
ja
shll
lret
adc
or
xor
out
dec
scas
clc
in
pop
pop
call
cli
or
mov
sub
ds
xor
jae
lea
stos
pop
fiaddl
or
cmpsb
xor
sbb
jno
loopne
lret
hlt
inc
adc
mov
fcmovne
jo
inc
repz
popf
pop
cmc
dec
dec
jle
out
jnp
in
loop
lods
decb
xorb
jge
jp
inc
inc
outsl
jp
push
loopne
fstl
out
cwtl
pop
or
jg
inc
inc
data16
and
lds
icebp
jl
orb
test
jl
dec
mov
movsb
or
mov
or
jne
mov
cmpsl
out
lock
lods
inc
xlat
test
fnclex
repz
xchg
movsb
in
lds
mov
pop
cmovnp
mov
jb
push
mov
mov
ljmp
dec
and
xchg
lock
jmp
imul
mov
cli
movsb
cmpsb
jge
fs
flds
jno
pop
mov
or
inc
rcrb
inc
pop
stos
cld
clc
inc
jns
mov
leave
enter
mov
stos
cmp
and
mov
or
adc
sbb
lcall
addb
dec
mov
inc
and
pop
pop
movl
sbb
mov
inc
ljmp
cmp
push
xchg
loope
int3
insl
mov
push
aad
or
push
mov
jge
and
out
dec
lea
push
test
enter
xor
mov
mov
stos
insb
ja
mov
pop
out
shr
jl
aam
mov
inc
mov
filds
add
mov
rcl
scas
xor
popa
pop
pop
mov
cmpsl
call
mov
fnstcw
data16
add
testb
push
repnz
or
xchg
shrl
inc
inc
out
aas
lds
cmc
mov
movsl
movsb
pop
in
add
add
pop
cmp
add
cmp
imull
inc
pop
xor
xchg
jl
inc
lock
mov
xchg
jnp
mov
xchg
or
or
xor
fsubrl
mov
nop
in
sbb
push
in
inc
mov
jb
add
or
sahf
mov
xchg
hlt
xor
lods
mov
inc
scas
or
xchg
and
mov
push
jae
fidivrl
lret
pop
cmp
mov
out
push
ja
js
bound
mov
sbb
xchg
test
inc
dec
in
psubb
ja
pop
xor
mov
stos
dec
movsb
out
cmp
mov
iret
fiadds
xor
in
leave
xor
cmp
and
leave
test
mov
pop
mov
mov
mov
movsb
andb
and
loopne
outsb
xchg
rorb
cltd
adc
and
iret
pop
testb
cli
lock
pop
not
or
dec
xchg
cmp
push
lahf
dec
gs
je
cmpsl
cmp
pop
out
mov
xchg
test
inc
xchg
imul
sbb
adc
sbb
pop
es
sbb
dec
ja
pop
sub
les
sub
inc
shll
push
push
jmp
xchg
lock
mov
fildll
mov
sbb
mov
add
insl
mov
pop
or
pop
jae
inc
add
jecxz
test
fsubp
push
fstps
mov
xor
mov
sbbl
dec
leave
pop
fsub
mov
into
inc
aas
in
mov
inc
icebp
add
inc
test
insb
jecxz
fldcw
insl
or
mov
inc
adc
or
jbe
add
arpl
lea
popf
mov
pop
es
ja
mov
lea
ljmp
push
loop
xor
jnp
xchg
sub
push
imul
inc
pop
je
adc
dec
add
imul
or
or
int3
or
outsl
shrb
aas
mov
repnz
mov
pushf
mov
sbb
stos
icebp
add
roll
jo
mov
sarb
addr16
mov
sbb
loope
xor
aaa
je
jmp
cld
xorb
add
stc
pop
repnz
int3
jns
call
in
dec
imul
mov
adc
fucom
mov
ffreep
clc
pop
js
ss
mov
movsl
cltd
jmp
je
push
dec
pop
out
loope
add
jne
sub
mov
mov
shl
out
aad
sub
mov
cwtl
or
addr16
inc
popf
je
xchg
xchg
push
inc
and
adc
or
mov
jl
and
cmp
shlb
and
ss
push
inc
sub
movsl
sbb
cmpsl
mov
outsb
imul
xlat
cmp
or
jp
loope
popa
sub
inc
add
sbb
in
mov
fs
daa
lcall
mov
pop
xor
fs
cmpsb
pop
mov
lret
mov
push
pop
xchg
lock
pop
lret
pop
in
scas
inc
xchg
mov
jmp
dec
sub
in
and
pusha
test
clc
popa
ret
pop
in
jl
fildll
cs
stos
cmp
xchg
dec
mov
mov
add
sub
ds
sub
push
out
mov
cmpsb
inc
xorb
test
add
cld
jnp
cmpsl
lods
mov
adc
aam
push
aad
push
mov
dec
adc
jmp
cmp
dec
popf
push
and
ds
push
and
pop
push
push
je
inc
ror
lds
fidivl
xchg
cmc
imul
push
insl
outsb
inc
or
sub
jb
mov
push
loopne
or
cwtl
pop
cmp
inc
mov
add
insb
mov
shrl
lcall
out
cmp
imul
mov
cmp
fnstenv
mov
dec
rclb
xor
movsb
cwtl
sub
mov
push
add
inc
sbb
data16
loope
mov
aad
shl
mov
popa
scas
movsb
aad
loop
test
int
inc
mov
cmc
sbb
mov
and
cmp
push
push
fcoml
sti
push
push
pop
lcall
sub
test
mov
add
add
jno
outsb
pop
adc
popf
sti
scas
pop
pop
xchg
push
mov
mov
pmaddwd
loop
lret
mov
pop
sarl
fidivs
mov
lahf
mov
aam
in
mov
adc
push
lock
xor
xchg
lea
sub
fsts
les
je
inc
push
ret
stos
mov
push
pop
stc
sub
repz
loope
sbb
adc
popf
adc
cmp
int
jae
push
mov
jbe
rcrl
cmp
test
pop
and
push
js
movsl
hlt
popf
xchg
cld
into
xor
inc
xorl
nop
dec
into
dec
ss
ret
das
lcall
mov
loop
fldenv
lock
lret
test
push
mov
and
add
stc
sti
pushf
shrl
jge
addr16
cmp
lea
fldt
je
cmpl
sbb
daa
jmp
test
or
add
cmpl
sbb
pop
popf
cmp
dec
sbb
mov
dec
push
mov
clc
popa
mov
nop
imul
stc
call
push
fstpt
shr
cmp
cmpsb
xchg
push
aad
data16
hlt
jo
pop
pop
imul
int3
jo
jno
cmp
cwtl
sbb
repz
rcrb
inc
xchg
pushf
lcall
lds
mov
or
sbb
mov
sub
dec
pop
cmpsl
or
loopne
aam
clc
add
subb
mov
frndint
out
arpl
pop
xlat
in
xchg
add
shr
repnz
mov
cld
outsl
fwait
mov
xchg
aam
mov
mov
mov
pop
out
outsl
lahf
inc
lcall
sbb
cmp
iret
jnp
and
pop
sbb
jmp
adc
pusha
jb
add
incl
imull
cmpl
ret
inc
mov
divb
xchg
xchg
imul
or
sbb
popa
push
mov
in
and
sub
scas
xchg
push
xchg
outsb
cmp
mov
or
in
in
push
jae
addb
and
scas
and
mov
sbb
stc
add
loopne
je
mov
aam
das
xchg
leave
enter
mov
icebp
lret
mov
dec
adc
jle
and
out
scas
xlat
inc
push
xor
movsl
fnstcw
push
sahf
xor
cmp
cmpl
jge
mov
ss
outsl
loop
adc
cmp
iret
cmp
push
lcall
dec
mov
loopne
std
inc
mov
iret
jnp
fstp
or
ss
xchg
xchg
inc
or
push
xchg
push
jecxz
enter
cmp
mov
inc
nop
js
in
push
pop
add
cmpl
adc
into
xor
loope
mov
push
out
jmp
data16
sbb
hlt
ljmp
idiv
fs
xchg
jnp
stos
jmp
cmp
sub
lahf
xchg
cmc
std
jbe
cmp
iret
and
sbb
mov
mov
cmp
and
lods
mov
inc
cmp
dec
sbb
dec
fisubrs
mov
pop
movsl
popf
adc
pop
hlt
repnz
xchg
push
lods
mov
add
out
add
jns
repnz
ss
push
sbb
jl
jne
test
sbb
sub
pop
lahf
insb
mov
jae
sub
pop
and
mov
inc
pop
or
inc
stc
or
test
dec
jp
ret
cmp
adc
mov
xor
loopne
pop
je
mov
xchg
sbb
sbb
rcrl
mov
xchg
pop
or
and
mov
or
fcoml
inc
pusha
stc
imul
daa
sub
fcoms
ljmp
jb
daa
pop
adc
repz
movsb
addr16
sbb
aad
sbb
test
mov
idivb
dec
cmp
popf
or
dec
xchg
gs
stos
sahf
mov
lods
cmc
add
sbb
daa
ret
mov
xchg
in
ja
movsb
jmp
jecxz
jle
cmpb
les
adc
cld
push
sahf
xor
jne
pop
xchg
pushf
clc
subl
adc
jbe
movsb
mov
cmpsb
imul
outsl
aad
not
cmp
pop
fimull
insl
lcall
cld
xchg
jno
jae
inc
sub
adc
mov
fsubl
mov
adc
jb
outsb
pop
movsl
ds
enter
and
push
aaa
fwait
adc
outsl
pop
mov
pop
or
call
sbb
cmc
adc
dec
dec
jo
insb
push
outsl
mov
gs
jp
rol
js
ljmp
mov
cld
mov
push
pop
cmpsb
dec
xor
xor
push
mov
push
dec
or
pop
aad
insl
xor
lret
xchg
test
jnp
in
push
loop
pop
loope
jo
push
addb
mov
adc
or
test
fucom
jg
sub
nop
jp
and
fdivr
dec
fistl
stos
sub
sub
dec
cmp
movsl
mov
stc
add
jge
dec
and
dec
cmp
cltd
mov
sbb
bound
ret
ret
lea
sbb
les
imul
mov
xchg
adc
gs
loope
pop
jne
stos
sbb
pop
loop
adc
fldt
jb
rcl
push
mov
jmp
scas
and
jno
mov
dec
sbb
mov
adc
xchg
jmp
push
punpckhdq
test
fidivrs
es
call
or
cmpsb
inc
out
cmp
push
jle
aas
mov
rorl
xor
sarb
jle
mov
inc
aaa
jp
adc
adc
arpl
xchg
and
in
pusha
mov
mov
xor
roll
pop
imul
sbb
xchg
or
stc
lcall
ror
cmp
mov
nop
fistps
es
popf
xchg
stc
pop
jg
mov
dec
popf
addr16
out
call
push
shlb
outsl
ds
push
clc
loop
hlt
loope
push
orl
sbb
idivl
cmp
dec
jg
sub
pop
cwtl
adc
sbb
and
lcall
mov
loope
loope
leave
mov
dec
dec
mov
xchg
inc
pop
jl
mov
stos
dec
aas
leave
sar
or
imul
stos
shll
jae
add
popf
sahf
call
adc
movsb
lret
jae
or
fiadds
cmp
mov
add
clc
in
lret
movsb
aaa
test
ffree
push
iret
call
cld
in
add
bound
push
pop
jmp
pop
sbb
push
insb
popf
lret
rcl
cmpsl
ljmp
js
in
ror
push
jnp
push
jnp
xchg
fdivs
cltd
nop
fsubr
arpl
dec
outsl
cwtl
test
push
aaa
pushf
subb
mov
ss
dec
sbb
mov
sub
int3
movsl
inc
clc
ds
or
jl
pop
dec
mov
sahf
or
cmp
adc
add
les
jne
shlb
jg
mov
inc
push
shl
xlat
push
pop
jnp
fisttpl
inc
stos
adc
fsubrl
fisttps
enter
or
les
jo
aad
cmp
inc
outsl
cmpsb
shll
pop
push
movsb
sti
pop
in
dec
mov
lods
out
jg
into
sub
mov
mov
inc
mov
dec
aaa
mov
gs
jbe
mov
jp
iret
jo
mov
sbbb
sahf
in
mov
lret
iret
xlat
sub
je
std
or
fs
mov
sti
ret
cmp
loop
in
mov
mov
sti
sarb
icebp
das
add
push
rolb
jle
pop
dec
in
pop
ret
mov
or
repnz
and
scas
lods
jle
popa
add
jg
sub
fsubp
pop
test
shlb
lods
dec
insl
loop
sbb
movl
mov
mov
xchg
js
popa
insb
sub
add
in
push
cld
insl
scas
mov
push
in
decl
mov
fadds
pusha
test
shlb
out
loopne
dec
fsubs
mov
test
inc
dec
sbb
stos
ror
or
cmpsl
adc
mov
aad
mov
aas
in
sub
dec
jae
stc
push
dec
in
stos
lea
add
scas
data16
xchg
jg
lock
add
addb
fisubl
mov
xchg
sub
ret
fxch
pop
add
fcmovu
lcall
sbb
sub
push
loop
sub
out
xchg
pushw
push
out
push
dec
dec
jp
and
inc
push
in
cmp
sub
imul
sub
sahf
jb
pusha
mov
add
daa
inc
test
jecxz
and
nop
jnp
adc
or
lea
scas
pusha
ret
jb
jbe
xor
aad
sbb
lret
inc
mov
int
call
mov
xor
int
adc
push
loope
loope
xchg
into
adc
call
lea
push
test
jns
das
pop
dec
out
imul
cmp
fdivl
mov
adc
dec
lods
insl
subb
leave
and
and
jg
pop
push
pop
lock
pop
popf
mov
dec
cmpsl
ds
lea
xlat
daa
jg
cli
rorl
push
jp
hlt
rcll
adc
rclb
jnp
out
scas
fcmovnb
filds
dec
sub
jg
test
jmp
repz
sbb
es
hlt
xchg
push
xchg
insb
pusha
int3
xchg
xor
pop
jl
add
inc
mov
jnp
scas
mov
pushf
imul
sub
xchg
fidivrs
incb
push
mulb
cltd
dec
fimull
in
imul
je
or
adc
lds
jmp
mov
test
and
ja
pop
mov
lds
sub
movsl
mov
out
imul
jns
and
jne
fcmovu
and
inc
adc
outsb
cltd
xchg
nop
dec
sub
lock
hlt
xchg
mov
jl
cs
aad
mov
rcr
repz
pop
cmp
hlt
mov
adc
mov
cld
mov
leave
xor
xor
adc
adc
mov
xor
mov
ljmp
std
add
push
negb
leave
lock
je
sub
jle
sti
pushf
inc
mov
push
mov
in
or
pop
call
cmp
cmp
loopne
in
cmc
xorb
xchg
mov
mov
mov
mov
insl
mov
lret
shll
aam
fs
mov
imul
es
out
mov
fcompl
insb
cltd
jae
xchg
js,pn
mov
jno
fdivrs
call
inc
fs
hlt
mov
adc
insl
lahf
int3
dec
fcmovnu
inc
xor
mov
adc
and
adc
imul
jg
dec
jp
in
push
sti
mov
daa
sub
adcl
bound
imul
inc
iret
push
lret
mov
mov
mov
adc
mov
adc
mov
aad
sub
add
mov
clc
mov
dec
pusha
mov
dec
leave
xchg
jnp
inc
lods
out
mulb
dec
stos
sub
in
mov
inc
mov
sahf
loope
stos
flds
sarb
imulb
pusha
lahf
arpl
sbb
icebp
or
lahf
lods
or
das
xchg
lea
dec
jmp
adc
sti
inc
push
movsb
stos
call
lahf
lret
les
ljmp
add
pop
dec
dec
pushf
jns
dec
pop
xchg
adc
fists
nop
add
cmpsl
mov
cmc
lret
lea
xor
std
nop
test
or
test
add
pop
inc
je
test
dec
adc
add
ljmp
cmp
out
add
xchg
xorb
jns
push
cwtl
cmpl
or
addb
mov
divl
iret
jl,pt
int
jle
inc
inc
iret
jns
push
popa
jle
adc
das
pop
fistps
xor
insb
cmp
pop
pop
dec
enter
insl
pop
mov
rorl
xlat
and
mov
ljmp
arpl
ss
out
sub
push
pop
push
orb
insl
testb
clc
lret
mov
mov
aaa
rolb
lds
call
add
xor
fists
mov
shlb
push
cmp
lods
xor
es
mov
mov
cmp
jb
out
inc
xchg
ss
lret
add
mov
pop
shlb
movsb
xor
sub
repz
rcrb
mov
nop
xor
iret
iret
in
push
dec
sbb
and
pminsw
jg
inc
dec
pusha
fwait
pop
mov
out
sub
jbe
mov
xchg
push
ficompl
xor
xor
fisttps
test
lret
xchg
xor
popf
or
dec
pusha
and
xor
cmp
mov
scas
cmc
mov
dec
push
insl
sub
dec
push
pop
pusha
adcl
mov
pusha
xchg
popa
sub
jp
btc
inc
xchg
fcmovnu
jo
insl
insb
fcmovnbe
sub
aas
jecxz
dec
xchg
movsb
jb
aaa
pop
nop
pop
mov
shrb
sub
pop
lods
std
adc
sub
mov
mov
les
jmp
lods
call
push
dec
xor
test
sbb
sbb
xlat
sub
stc
jb
insb
aaa
inc
sbb
cs
pop
xchg
and
inc
pop
inc
or
mov
mov
les
test
lods
aaa
test
insb
testl
cmp
test
sub
mov
imul
mov
mov
mul
addr16
or
dec
shlb
dec
imul
clc
cs
mov
dec
pop
xor
xorb
loope
add
push
xor
rorl
adc
jge
aaa
and
testw
cmpsb
cwtl
xchg
adc
mov
cs
and
sahf
in
rcrl
xor
mov
push
cmp
sub
addl
imul
and
mov
mov
xchg
sub
aad
negb
push
inc
cmp
jnp
test
scas
inc
pop
cmpl
sbb
xchg
or
aam
xchg
xchg
jbe
bound
jns
jnp
xchg
mov
lret
gs
rcrb
daa
cmp
insl
cltd
jl
adc
fcomps
add
es
and
sbb
out
out
sbbb
mov
daa
lahf
push
jl
cmpsb
stos
sub
dec
jns
hlt
mov
pop
mov
scas
xor
adc
and
adc
clc
fsubrs
xor
add
pop
test
incl
cltd
mov
icebp
or
mov
xchg
shlb
stc
int3
jo
ja
adc
dec
sbb
out
das
sub
dec
sbbb
rcrl
sahf
in
sbb
test
cmp
clc
jb
shlb
popf
pop
xlat
rorl
cmpb
ds
pop
jb
sbb
push
and
cmp
aaa
iret
add
ficompl
sub
dec
xchg
push
aaa
repz
mov
xchg
rolb
mov
xchg
pop
jae
jge
mov
stc
outsb
jns
cltd
cmpsl
repz
xor
subb
xchg
stos
fcomi
dec
cmc
mov
aad
leave
ret
mov
aaa
pushf
mov
or
xchg
jecxz
pop
std
std
push
pusha
and
insb
mov
loop
pop
in
shll
in
adc
jb
dec
cmp
aam
es
lea
add
into
fnstenv
enter
adc
jl
out
nop
cmc
xchg
rclb
pop
inc
xchg
scas
lods
xor
shrl
push
sbb
cmc
hlt
dec
mov
mov
es
push
mov
dec
movsl
ss
iret
adc
movsb
cmc
rorl
sub
clc
fidivl
bound
loope
leave
jle
js
test
xchg
xlat
loop
popa
jne
jle
cmp
bound
stos
pop
enter
fisubrl
push
sarl
movsb
push
aad
sbb
and
sbb
das
mov
mov
call
cmp
pop
insb
test
pop
mov
fistl
test
out
std
aad
pop
mov
ret
cltd
push
dec
jae
js
sbb
cmp
pop
ja
mov
fsubr
inc
xchg
fiadds
sub
sub
popfw
mov
loope
sub
and
xchg
movsb
cmp
call
call
out
arpl
pop
cmp
imul
adc
sbb
leave
std
inc
xchg
in
enter
sbb
inc
ret
rorl
lock
add
hlt
movsl
dec
jl
ret
mov
inc
adc
adcl
and
dec
and
sub
fcomps
jmp
mov
dec
mov
mov
cli
in
shlb
lods
xchg
fs
outsb
cwtl
push
add
sarl
inc
dec
pop
jg
sbb
dec
mov
inc
xor
lods
mov
mov
jge
in
jb
cmp
enter
out
mov
xchg
sti
popa
daa
mov
mov
in
xchg
in
xor
dec
jecxz
jns
dec
leave
lea
jb
rclb
icebp
imul
lahf
jg
fucomp
push
adc
push
fnstenv
mov
neg
out
ja
add
nop
jae
sti
sub
pop
push
enter
pop
dec
adc
add
out
outsl
jl
adc
inc
out
and
jbe
fdiv
jmp
mov
mov
mov
mov
mov
sub
lcall
imul
loopne
rol
cmc
fdivs
mov
fisubs
mov
and
mov
jno
mov
jg
sbb
loop
lret
leave
mov
mov
js
cmp
iret
adc
sub
bound
out
clc
je
mov
xchg
rorl
sub
cli
std
or
aad
ljmp
and
adc
mov
mov
js
jno
sahf
bound
mov
jbe
sbb
xor
add
pop
insb
mov
pusha
ljmp
std
lahf
mov
mov
mov
or
call
outsb
pop
xchg
sar
sbb
sub
pop
cmp
pushf
mov
int
sub
or
enter
popf
aas
jo
xchg
sub
mov
bound
je
lahf
inc
add
in
xchg
mov
jmp
loope
push
cld
movsl
push
xchg
cmp
dec
xchg
out
add
movsb
incl
imul
inc
dec
xor
iret
cmc
pop
mov
inc
icebp
xchg
mov
and
mov
pop
add
mov
jl
gs
and
push
icebp
cmp
jne
mov
pop
xor
push
pushf
sbb
jle
movl
inc
inc
pop
or
ljmp
jg
inc
outsl
aas
mov
sti
or
dec
hlt
mov
mov
push
xor
xor
leave
xchg
mov
cwtl
setp
imul
pop
jl
ss
add
fsubs
mov
and
out
test
popf
out
and
mov
pop
in
xchg
jnp
jle
jg
push
dec
bound
sarl
outsl
inc
adc
adc
mov
sub
inc
jmp
pop
jmp
push
mov
add
dec
inc
or
decb
mov
and
icebp
leave
mov
pop
cmpsl
js
repnz
pop
cmc
lret
mov
pop
xchg
icebp
xchg
inc
inc
shll
and
pop
pop
pushf
and
pop
cmp
sbb
inc
daa
mov
mov
and
inc
movsb
push
in
pop
adc
add
xor
gs
add
lret
fsubrs
call
cli
push
push
shll
xchg
std
jne
ja
cwtl
and
mov
and
scas
mov
adcb
gs
ror
cmp
aam
push
fdivl
loope
cld
test
push
dec
fistpll
shlb
or
xlat
aas
mov
jnp
fs
mov
xlat
mov
dec
fcoms
call
out
test
or
dec
in
push
cltd
stos
and
push
decb
jg
or
pusha
sti
mov
inc
cmp
je
test
lahf
iret
decl
lcall
cli
stos
int
mov
jbe
push
add
call
enter
sub
dec
inc
lods
push
sub
aam
inc
xor
sahf
std
popf
mov
lcall
lahf
pusha
ds
cmp
rol
jp
pop
dec
mov
push
xor
mov
bound
fnstenv
imul
fs
loopne
hlt
cmpl
push
mov
fisttpll
pop
icebp
xchg
jnp
sti
pushf
add
mov
movsl
fmull
sahf
inc
mov
mov
arpl
out
mov
pushl
push
xor
push
and
gs
jmp
fidivrl
dec
dec
push
pop
adc
jne
jno
std
ss
dec
jns
std
mov
mov
iret
pop
test
mov
mov
mov
mov
push
inc
lods
sarl
mov
add
add
push
xchg
lods
bound
pushf
or
xchg
in
data16
cmp
lods
popf
lods
pop
int3
jb
repnz
and
xor
adc
std
aas
inc
xor
inc
fs
sbb
adc
jo
adcb
lock
lret
inc
mov
loope
lock
leave
in
push
mov
dec
jl
sbb
jle
xchg
into
rorb
stos
test
sbb
push
ficompl
movsb
rclb
hlt
jmp
ffree
pop
mov
frstor
sbb
ja
iret
rolb
or
sbb
cmp
nop
scas
jo,pn
sub
fdivrs
ds
addr16
in
scas
lcall
js
clc
mov
cltd
shr
lret
lcall
cmp
test
jge
or
jmp
mov
pop
xchg
jbe
jg
jmp
xorps
cmp
daa
inc
in
imul
xchg
pusha
ret
lock
aaa
enter
lock
inc
dec
push
out
mov
ljmp
das
pusha
or
scas
pop
xchg
or
fdivrl
or
pop
dec
mov
cmp
int
mov
ror
pop
inc
xor
xor
mov
mov
jle
mov
adc
xchg
adc
push
push
adc
fidivrs
iret
mov
test
mov
sub
out
inc
mov
stos
imul
js
icebp
repnz
lcall
jl
sti
sbb
and
stc
ss
dec
cmc
leave
mov
divb
sub
in
cmp
lahf
ja
gs
xchg
test
rolb
push
imul
pop
xchg
xor
sub
jge
add
sbb
shlb
xchg
mov
fimull
lahf
lcall
idivl
ds
inc
test
sub
outsl
fmull
dec
pop
cltd
jg
sbb
inc
or
pop
add
pop
sub
imul
ret
jno
sbb
pusha
pop
push
aaa
fildll
call
pop
jg
or
movsb
pop
push
push
mov
adc
data16
fidivs
int3
iret
data16
scas
adc
push
jge
xor
mov
sub
and
popa
xchg
mov
lcall
dec
test
out
sbb
out
orb
adc
pop
std
dec
mov
mov
add
push
iret
cmp
inc
adc
adc
sarb
gs
inc
push
jge
aaa
and
mov
or
jmp
mov
pop
jnp
or
jno
leave
sbb
mov
dec
add
push
movsl
repnz
loop
jno
xchg
and
dec
data16
pop
adc
bound
mov
dec
mov
jl
add
popa
cmpsb
jmp
std
pop
rolb
pop
outsb
stos
mov
rcrb
outsb
pop
cwtl
or
push
cwtl
fsts
fstpl
sub
lret
mov
popa
jno
push
psrlw
lret
push
mov
cmp
leave
jb
mov
popf
cwtl
jl
loope
cmc
in
cmp
sti
push
sti
mov
xlat
mov
xchg
sbb
xor
inc
aaa
pop
cmp
fists
push
mov
mov
aam
insl
aaa
pushf
dec
loope
xchg
test
push
lret
popf
popf
add
das
loopne
sub
mov
cmp
sub
inc
adc
jno
loop
xchg
and
cmc
inc
xchg
mov
push
test
xorb
mov
jno
push
jg
inc
test
mov
xor
add
push
inc
loop
gs
lahf
push
mov
mov
jns
add
ret
jo
pop
lcall
rcrb
mov
cs
enter
imul
push
dec
mov
jl
dec
mov
test
nop
movsl
sarl
jne
sbb
icebp
arpl
rorb
into
jg
mov
lea
mov
into
dec
daa
inc
jno
cmpsl
mov
nop
int3
pop
cs
loope
std
fwait
or
in
iret
or
movsb
addl
test
lds
jns
test
cmovge
push
jmp
dec
mov
ja
or
in
into
aas
mov
rolb
das
loopne
pop
cmpsb
mov
jae
xchg
out
imulb
ljmp
aad
lcall
mov
es
cmp
in
lods
test
sub
fwait
aaa
push
adc
dec
sub
call
pushf
xchg
cmpsb
or
push
aas
xor
cmpsb
ljmp
xor
mov
xchg
inc
cld
das
jne
cmp
insl
sar
lods
dec
lcall
lods
andl
dec
sbb
test
or
dec
jo
dec
pop
ja
fisubrl
mov
fmulp
inc
clc
daa
je
pop
mov
add
cmc
sub
dec
jns
in
addb
rcll
xchg
sbb
mov
movsl
push
dec
cltd
cld
in
pop
adc
cltd
daa
jno
out
in
popf
cwtl
std
cmp
insb
pusha
and
sub
jbe
scas
lret
jbe
ret
pop
xchg
mov
icebp
rorl
repnz
push
jb
arpl
mov
cli
call
ja
or
adcl
clc
cmp
adc
cmp
leave
mov
test
adc
and
mov
ret
cmp
pusha
lds
bound
cmp
mov
xor
lcall
adcl
or
xchg
pop
ljmp
int
out
xor
sub
dec
repnz
pop
mov
fstps
ja
xchg
es
stos
adc
je
dec
loope
in
outsl
lcall
push
pop
sub
fisubs
xchg
aam
jle
test
test
iret
or
pushf
jmp
int
mov
sbb
cmpsl
and
in
push
sub
or
xchg
mov
inc
jmp
test
scas
add
rcrb
ljmp
jmp
xor
lret
pop
cmp
icebp
loopne
and
dec
push
ljmp
test
sarl
inc
mov
ljmp
xor
jmp
or
inc
xor
jg
cmp
cltd
aaa
jle
or
pop
aad
mov
push
cmp
cmpsl
xchg
mov
and
pop
sahf
sahf
shlb
sub
or
sbb
insb
pop
jae
or
adc
ss
and
call
dec
or
shll
ss
inc
pop
adc
xchg
xchg
lea
ds
cmp
dec
push
mov
ret
mov
xor
dec
shlb
push
pushf
dec
cmc
pop
ss
inc
lds
shrb
mov
and
lock
es
mov
cmova
sub
lret
fsub
pop
pop
ljmp
mov
cmp
cmc
pop
inc
fmuls
idiv
mov
cmp
nop
and
sbb
xlat
xchg
jmp
popa
mov
inc
cmp
dec
push
lods
enter
jmp
xor
pop
pop
jb
push
push
push
adc
sub
loopne
xor
pop
aad
idiv
jne
add
jle
test
ret
sbb
xchg
jne
inc
push
or
out
push
xchg
imul
sti
inc
in
mov
or
adc
dec
outsl
test
pop
stc
arpl
cmp
jmp
mov
lcall
jecxz
push
cmp
sbb
jge
fmul
ljmp
dec
popa
icebp
dec
jbe
mov
cwtl
add
fildll
lcall
into
loope
repnz
and
xchg
mov
mov
or
xor
jg
imul
mulb
int3
out
adc
mov
mov
shlb
insl
mov
dec
adc
data16
cwtl
mov
and
jne
aaa
xchg
sbb
and
test
inc
inc
stc
cwtl
dec
in
sbb
push
outsl
test
hlt
mov
cld
sahf
pop
cmp
ret
xchg
daa
push
lods
arpl
xor
in
stos
pop
and
cltd
test
pop
mov
cli
mov
mov
jmp
imul
pop
adc
xor
mov
mov
cmp
jp
pop
mov
test
xchg
mov
dec
lret
and
int
inc
mov
shlb
aad
popf
mov
outsl
or
dec
push
cltd
adc
and
mov
rcll
ds
frstor
jbe
jmp
jl
xlat
jl
mov
fsts
mov
mov
mov
lea
arpl
inc
push
sbb
sarl
sbb
test
faddl
rcll
mov
push
lahf
xchg
push
shll
out
fs
jno
push
pushf
testl
sbb
pop
and
stos
adc
and
movb
lcall
mov
pop
pop
cltd
arpl
mov
pop
js
xchg
mov
hlt
je
adc
mov
xchg
les
clc
mov
dec
jge
scas
push
mov
push
ljmp
stc
enter
das
roll
imul
push
push
push
iret
addb
pushw
add
pop
xor
ljmp
lret
mov
sub
mov
shll
mov
sbb
mov
cmp
lods
and
pop
pop
icebp
inc
ret
mov
push
dec
cmp
cwtl
push
aad
das
push
pop
maxps
je
push
es
dec
pop
stc
jno
shrl
bound
test
mov
push
insb
out
jecxz
add
in
or
cmp
or
fidivrl
and
fidivrs
push
movsl
mov
inc
adc
fdivs
addr16
iret
fildll
imul
and
pusha
pop
iret
or
pop
cmc
pop
lock
ds
mov
cltd
fs
xchg
jo
sub
es
jns
mov
jg
mov
cmp
ret
shll
shl
xchg
repz
in
orb
das
mov
daa
sbb
jmp
xor
inc
jne
mov
jne
shll
sub
xchg
in
dec
jnp
imul
adc
or
in
das
sub
rolb
pop
stos
ds
mov
push
inc
lret
mov
mov
or
rcll
add
int
inc
sbb
fwait
mov
mov
icebp
sahf
mov
sbb
and
mov
mov
divb
jne
enter
std
xchg
loope
add
pusha
popa
mov
call
subl
lods
fstpt
lahf
sbb
stc
cmpb
ret
loope
lcall
mov
xor
cmp
fsubrl
stc
cmc
and
sub
and
ja
mov
hlt
daa
js
imul
and
sbb
and
hlt
stc
inc
xchg
in
or
cmp
mov
lret
inc
mov
or
inc
movb
sub
pusha
mov
pop
cltd
adc
data16
test
xor
popa
stos
push
mov
lret
or
hlt
jns
xchg
push
or
mov
add
add
sbb
fdivs
aas
push
inc
mov
jle
test
xchg
adc
movsb
mov
pop
ss
cs
jg
xchg
lock
cmp
fldl
lea
outsb
cmp
push
sbb
jbe
das
inc
jle
test
lods
xchg
sbb
dec
sub
add
xor
cli
pop
inc
xor
ss
cmp
mov
pop
jnp
jnp
mov
jl
pop
cld
sub
popf
pop
movsb
or
inc
imulb
xor
mov
mov
movsb
test
jbe
sub
sti
sub
movsl
in
push
dec
outsb
test
pushf
pushf
pop
lds
adc
adc
mov
pushf
mov
pop
dec
sub
out
add
repnz
add
andb
inc
xchg
ficompl
jno
fldl
repz
fadd
sub
sbb
movsl
mov
jle
or
mov
repz
mov
lods
test
xor
add
scas
lret
and
scas
jl
out
pop
and
ljmp
sub
and
and
push
lcall
mov
iret
mov
or
fisubl
lods
and
mov
jge
xchg
xchg
subb
imul
xorb
cmpsl
push
inc
jbe
negb
test
enter
xchg
mov
pop
sbb
pop
out
pushf
push
or
pop
add
push
jl
jns
ret
cmp
bound
or
jmp
jle
stc
sti
add
dec
stos
add
push
loopne
stos
loopne
fisubrl
add
add
test
adc
xchg
and
mov
push
xchg
push
lahf
jl
xor
pop
shlb
mov
jecxz
inc
lods
push
pop
cmc
xchg
mov
add
repnz
test
jle
pop
lods
jecxz
mov
clc
inc
mov
outsl
ret
sti
pop
jg
pop
je
sbb
lcall
mov
fists
jl
jp
mov
insl
filds
sbb
xor
mov
mov
shrl
enter
inc
shl
mov
jge
sub
cmp
test
call
popf
clc
push
xchg
outsb
movsb
mov
mov
or
add
rcr
or
andps
sbb
and
jbe
test
jmp
adcb
aas
pop
inc
pop
addb
lret
sub
cld
mov
push
mov
jne
jmp
mov
or
pop
sahf
fwait
ss
mov
and
inc
add
push
adc
jmp
dec
push
sbb
mov
fs
inc
lock
dec
jnp
imul
cli
pusha
inc
andl
sarb
jno
insb
jb
sub
popa
lea
add
dec
std
push
jnp
js
add
sub
neg
jne
in
xlat
pop
popa
shl
or
pop
mov
and
lahf
cmp
fcomps
mov
xchg
sub
insl
mulb
lods
lahf
xchg
in
dec
cmp
cltd
jecxz
mov
push
xchg
lods
jb
addb
dec
jmp
or
fsubrs
sub
fsubrp
sub
sub
push
or
inc
orl
sub
mov
ficomps
adc
arpl
sbb
mov
cli
movsb
divl
mov
mov
test
dec
jnp
aas
lods
inc
into
ss
cmp
jb
jmp
inc
stos
cmp
movsb
stos
fs
adc
push
dec
xor
and
sbb
sub
subb
add
sbb
mov
adc
lods
or
lods
xor
stos
outsl
push
repz
pop
rcll
xlat
frstor
cmp
push
xor
add
jne
flds
lds
cli
cmp
sub
add
jmp
mov
repnz
fs
ds
inc
imul
sub
dec
mov
pop
jnp
or
ds
mov
out
adc
je
aam
filds
mov
loopne
subb
cmp
mov
mov
das
mov
and
xor
sbb
lahf
inc
and
lcall
jge
xlat
push
jb
cmp
xor
imul
jno
data16
push
outsb
sub
mov
and
outsl
push
pop
mov
cltd
pop
popa
cmp
shll
iret
sahf
jae
xchg
fwait
push
fdecstp
cmp
test
nop
cmpsl
verw
xorl
sub
mov
sub
sub
subb
sbb
cmp
inc
popa
and
fsubl
push
sbb
lea
dec
or
outsb
and
lret
sbb
in
pop
push
cmp
adc
sarb
xor
negb
aad
xor
mov
mov
stos
mov
adc
aas
cmp
cwtl
aaa
mov
cld
int3
mov
push
mov
mov
icebp
cmp
sub
jl
xor
sub
int
mov
test
mov
arpl
mov
adc
or
jp
enter
jnp
ss
jne
adc
or
add
pushf
enter
into
and
fimull
rcl
ja
push
xchg
lds
xchg
icebp
jne
adc
ret
out
pop
xor
cmp
lret
lock
pushf
xchg
fldl
shlb
in
movsl
fs
pusha
cmp
push
inc
inc
outsl
or
jp
out
aas
add
inc
pop
push
fs
out
repnz
mov
mov
push
jae
inc
mov
es
adc
xchg
hlt
popf
dec
fisttpl
dec
add
sbb
xlat
aad
test
in
and
daa
ljmp
ljmp
loopne
inc
cmp
fisubrs
jae
mov
cmp
xor
stos
testl
clc
pop
pop
cmp
inc
test
lahf
shrb
mov
flds
jbe
xchg
inc
mov
and
cmp
stos
add
test
loope
inc
lds
mov
dec
repnz
test
inc
cmp
xchg
out
cmp
adc
sahf
iret
in
mov
out
movsb
mov
cmpsb
jl
aam
popf
and
dec
mov
xchg
in
pop
out
mov
mov
jno
hlt
shl
jp
pop
jbe
mov
jo
or
mov
mov
add
jb
sbb
test
xchg
dec
push
xchg
push
dec
cmp
cltd
sbb
div
out
or
add
lea
sbb
sbb
push
mov
iret
adc
aam
and
mov
movsb
sbb
lods
in
pop
mov
popa
jb
mov
xlat
ficoml
xor
in
mov
add
cmpsl
lcall
insb
jb
xchg
jo
cmp
push
mov
movsl
lea
fwait
sbb
icebp
add
test
adc
mov
mov
imul
scas
push
mov
sti
mov
jp
sbb
pop
push
mov
mov
and
pop
xchg
test
ficoms
aam
jno
lock
shlb
ret
pop
fwait
lfs
pop
int
ret
mov
add
sbb
cltd
pushf
pop
lcallw
ljmp
xor
fisubrs
cltd
outsb
fcoms
add
lret
hlt
jb
dec
decl
in
inc
lods
sbb
insb
push
aas
or
lods
dec
inc
movb
mov
adc
xchg
movsl
mov
adc
lds
icebp
adc
xchg
mov
add
cmp
in
out
and
cwtl
sbb
stos
ret
ljmp
rcrb
clc
xchg
xchg
in
andl
mov
sbb
shlb
jecxz
mov
pop
mov
add
lret
dec
call
popf
sbbl
aam
sbb
stc
roll
js
test
mov
sub
push
enter
shll
test
fidivl
nop
movsl
fcoml
xor
inc
or
outsl
adc
imul
loope
jne
scas
je
aaa
push
jae
gs
in
shrb
inc
cmpsb
dec
push
sub
mov
xchg
daa
pushl
xor
dec
ljmp
lcallw
xlat
mov
ds
rol
loopne
cmc
add
pusha
pop
cld
pop
fsubl
mov
push
mov
lret
jae
or
repnz
pop
out
xor
lock
sbb
out
fdivs
ss
pop
dec
out
dec
sub
mov
orb
rcrb
push
mov
push
push
nop
ds
imul
xchg
inc
adc
or
stc
les
and
rorb
jmp
pop
inc
das
outsl
push
arpl
mov
mov
adc
nop
add
push
xchg
mov
daa
jmp
fistl
in
adc
imul
std
jge
stos
sub
cmp
sbb
addb
rolb
push
bound
ss
push
add
data16
pop
push
test
cmp
jnp
sub
mov
fdivr
push
inc
fistps
cmp
mov
ja
pop
or
aam
ljmp
push
sarb
push
cmc
dec
mov
test
sub
jmp
lock
jl
bound
insl
lret
and
lods
into
inc
repz
fnstcw
enter
out
iret
test
in
add
arpl
sbb
stc
mov
cmp
filds
push
pushf
movsb
movsb
cmp
mov
adc
movsl
pop
test
imul
push
jecxz
gs
pushf
adc
mov
pop
push
lcall
scas
add
outsb
sub
pop
xor
jle
sbb
pop
add
adc
mov
stc
sbb
lea
pop
outsb
testl
mov
mov
adc
imul
fildll
or
fldenv
and
push
rorl
mov
inc
mov
sahf
out
pop
cmpsb
aaa
mov
ljmp
cmp
pop
mov
gs
ljmp
push
adc
sbb
neg
adc
add
push
scas
fcoms
dec
cmp
ja
push
out
cltd
mov
std
ljmp
push
gs
mov
out
ss
cltd
sbb
sub
pop
jbe
jg
ja
rorl
out
enter
aas
mov
dec
call
mov
add
loopne
filds
test
fsub
mov
pop
js
xor
xor
adc
lret
xchg
cmp
mov
push
mov
pop
imul
xchg
lock
pop
loope
fisttpl
es
loope
mov
push
cmp
pushf
icebp
sbb
negl
out
cld
js
dec
ljmp
sub
sti
cmp
cmp
leave
mov
fwait
cwtl
into
mov
push
add
iret
mov
xor
test
mov
jge
jle
call
mov
notb
mov
mov
aas
out
cs
mov
mov
mov
hlt
push
mov
jp
dec
xchg
pop
cmp
stos
out
cwtl
mov
mov
jbe
inc
imul
pop
mov
iret
out
stc
jno
dec
and
jns
es
push
sbb
dec
dec
lea
inc
faddl
dec
sub
jl
test
mov
xor
pop
data16
popa
ret
lcall
sbb
lods
jmp
push
es
mov
aas
adc
jae
pusha
imul
and
xor
adc
scas
cmp
cmp
cwtl
lcall
out
sbbl
pop
and
scas
cmpsb
gs
add
aad
xor
sub
dec
sub
jbe
cmpsl
rol
fstpt
imul
push
mov
out
iret
fcoms
mov
xchg
adc
cmpb
cmp
and
outsb
mov
and
bswap
jo
inc
mov
test
sub
sub
arpl
jmp
and
xor
dec
iret
int3
and
frstor
jp
add
or
cmpsl
popa
adc
and
push
pop
je
cmp
cli
scas
sbb
sahf
bound
jb
mov
enter
int3
fidivs
inc
fistps
popa
pop
inc
adc
xchg
idivb
ret
jbe
insl
ficoms
push
mov
xor
pushf
rcrw
xlat
pop
push
adc
mov
mov
jle
xchg
aad
dec
in
push
jns
popf
adc
jno
lock
loope
jg
bound
pushf
sub
add
cmpsb
insl
loopne
ja
rcrl
sti
cwtl
je
gs
xchg
adc
inc
push
inc
mov
xchg
ss
cmp
je
mov
fs
int3
adc
jl
insl
or
aad
in
xchg
dec
adc
or
stc
adc
mov
jecxz
out
in
mov
sarb
inc
test
dec
xor
mov
sub
jecxz
push
pushf
adc
sub
mov
ljmp
mov
jge
data16
ljmp
adc
retw
push
jb
aam
sub
les
push
out
add
subb
xchg
es
sarl
loope
in
addb
faddp
rolb
or
lea
jp
fldenv
es
xchg
in
fidivrl
out
mov
repz
aas
and
clts
dec
inc
nop
in
std
std
jo
mov
enter
and
push
and
or
movsl
xor
enter
add
and
pop
outsl
mov
and
sahf
fcomps
jecxz
mov
ret
aam
decb
or
shll
inc
clc
mov
adc
mov
insb
loopne
je
push
sub
cwtl
add
push
sub
or
enter
and
je
and
insl
dec
lods
popf
ljmp
arpl
push
popa
jae
outsl
lods
or
cmp
aas
pop
inc
rcrb
xchg
lea
jnp
pop
scas
pusha
mov
cs
scas
xchg
je
mov
inc
rcll
inc
jnp
js
add
dec
repz
cmpsl
xor
inc
pop
add
ss
roll
adc
sbb
push
cmp
inc
xchg
mov
ss
jl
xor
push
adcb
or
lods
nop
add
xorl
lret
pop
cmp
adc
test
mov
mov
adc
inc
daa
xchg
cmp
pop
add
xor
in
mov
push
and
lahf
pop
lcall
jp
mov
cmp
xlat
xchg
xchg
mov
fsub
jno
pop
es
and
pop
in
insl
loope
lea
les
xor
iret
adc
lds
mov
inc
cs
mov
and
mov
sub
jne
jecxz
ja
test
dec
mov
mov
out
xor
lahf
pop
stc
push
popf
iret
jmp
sbb
repz
sbb
aad
loopne
into
xor
in
orb
adc
pop
add
xor
aas
inc
sub
cmpsb
aas
icebp
cwtl
lahf
jae
enter
into
int3
push
pop
test
rcll
scas
sti
out
dec
add
or
cmp
or
xchg
sub
iret
repz
rcl
ret
mov
mov
or
lods
push
dec
aad
inc
sahf
test
jmp
cmp
es
fstpt
xor
scas
sti
out
in
sbb
sub
jo
sahf
test
push
mov
dec
and
dec
cmp
ret
jp
aas
cmc
loop
push
dec
push
inc
cld
in
mov
jmp
rorl
sub
mov
mov
xor
xchg
pop
dec
loope
and
jp
push
push
xchg
and
mov
mov
cld
inc
hlt
lcall
lret
push
dec
jo
and
out
cmovge
lods
xor
jae
add
mov
andb
xor
or
jle
je
cmpsb
adc
add
mov
gs
cltd
stos
xlat
loop
cwtl
call
dec
adc
and
jae
xchg
or
shrb
cmp
mulb
roll
add
inc
mov
push
test
mov
les
les
into
in
push
and
xlat
cmc
mov
es
or
jns
call
stos
sbb
sbb
xor
cwtl
mov
outsl
mov
in
sbb
repz
mov
xchg
adc
fwait
jmp
xchg
inc
inc
movsl
cs
ja
inc
enter
pop
ficomps
jg
outsb
or
push
fbstp
add
jne
push
mov
push
mov
dec
lds
into
inc
scas
xor
sti
inc
movq
nop
je
jne
jns
sub
pop
imul
xor
fstl
mov
lods
rclb
sub
or
pop
loop
mov
sbb
sub
pusha
popa
ret
xchg
iret
idivb
inc
insl
fstps
jmp
lods
gs
mov
shll
jle
mov
enter
pop
ret
in
dec
pop
push
out
and
hlt
aad
mov
aas
mov
lea
movsb
and
pushf
sete
pop
add
les
das
into
fcmovbe
adc
sub
aad
in
jae
int3
mov
cmp
xlat
daa
dec
pop
fwait
stos
popf
push
jl
sub
adc
movb
xchg
or
xor
fsubrs
pop
xor
sub
jecxz
loope
loop
and
flds
ja
int3
mov
adc
clc
xchg
stos
mov
out
dec
lods
sub
cmp
xorl
dec
stos
fs
xchg
mov
mov
mov
shl
in
out
pop
and
cltd
sahf
push
and
pushf
push
ljmp
push
test
cmp
int
mov
es
inc
lcall
jp
hlt
test
inc
lea
xor
je
mov
xor
and
mov
dec
or
mov
popa
add
cld
add
cwtl
stos
jo
imul
mov
inc
les
je
arpl
or
or
jg
out
lods
leave
dec
add
je
xchg
jns
test
cmp
popa
in
pop
or
dec
into
popa
in
mov
jns
sahf
push
lea
fstl
fcmovnbe
inc
cmc
imulb
mov
sti
dec
sub
fsubrp
lds
and
cmc
aad
in
fcmovnbe
cmp
cmp
xor
xor
add
loope
pop
lea
icebp
mov
divl
sbb
jg
dec
xor
xchg
xchg
repz
jae
dec
mov
fbld
add
das
sbb
test
jne
cs
cmp
and
daa
and
mov
nop
int3
dec
jge
jge
rorb
xor
pop
inc
mov
xor
out
scas
and
shl
mov
mov
loop
push
stos
pop
cmpsb
ret
les
or
sahf
lock
mov
xor
inc
int
mov
lcall
or
pop
pop
mov
cmp
repnz
clc
sarb
pop
dec
bound
fdivrs
popf
hlt
adc
addb
dec
mov
addr16
or
test
push
mov
test
dec
outsl
pushf
pop
fildl
mov
mov
ret
or
dec
sahf
imul
imul
cwtl
outsb
jns
rorb
addr16
xchg
lret
pop
jb
or
jle
cmp
xor
mov
cmp
jae
scas
leave
repnz
or
jmp
sbb
sbb
xlat
cltd
dec
mov
cld
or
mov
loop
or
jnp
sub
lcall
sub
addl
mov
test
adc
ss
jo
push
cmp
adc
in
xor
lds
cwtl
cmp
fs
mov
cmpb
fmull
push
stos
inc
dec
dec
jnp
fcmovnu
jp
and
xlat
and
add
enter
add
bound
mov
mov
dec
add
push
pop
adc
fmulp
lret
or
push
lds
stc
lods
jle
push
xor
sub
pop
inc
enter
adc
mov
repnz
out
cmp
mov
pop
jp
insl
aaa
dec
sub
sahf
pop
rcrl
ret
out
ss
dec
in
mov
or
fcmovb
enter
pop
or
js
or
out
rcr
stos
lea
lret
enter
gs
inc
out
sbb
data16
push
inc
inc
fists
lret
jbe
cli
sbb
mov
xchg
mov
mov
lods
mov
das
fistl
je
lret
lahf
cwtl
pop
inc
or
lds
inc
mov
xor
dec
leave
adc
sub
cmpsb
ret
lods
loop
add
pop
in
jle
or
cmp
clc
pop
sub
das
int3
out
loop
xor
rorb
mov
test
pop
dec
jecxz
cmpsb
xor
call
aam
inc
mov
jecxz
or
in
or
jge
subb
sbb
movsb
cs
shl
imul
push
pop
and
bound
pop
hlt
gs
add
outsb
jl
movsl
repnz
call
mov
repz
es
int
cmp
cld
xor
push
and
or
movsl
std
fldl2e
out
mov
loop
in
or
fwait
cltd
jl
rorb
inc
loop
test
lcall
std
cs
jnp
cli
mov
pop
sub
sti
pop
out
mov
and
adc
js
sbb
insb
int
sahf
sbb
xor
cmc
dec
dec
mov
mov
mov
mov
fstl
xor
pop
cwtl
adc
inc
xchg
out
test
cmp
mov
aad
es
sub
adc
cmp
sub
xor
cwtl
aas
jo
ss
int
xchg
pop
mov
lods
pop
adc
dec
jle
and
xchg
add
or
xor
lock
inc
jo
rcl
je
push
cld
hlt
leave
cmp
jns
sub
cmp
push
stos
scas
fs
aaa
addr16
push
loope
xor
nop
clc
cs
test
pop
push
nop
cmp
lock
mov
push
icebp
je
xchg
cmp
jne
sbb
cmp
lahf
nop
aam
xchg
add
or
inc
add
adc
inc
pop
xor
or
mov
out
subl
xchg
pushf
pushf
insb
adc
clc
pop
jecxz
outsl
out
xlat
popf
aam
rsm
mov
cmc
sbb
inc
push
bswap
aas
dec
pop
or
and
ret
push
pop
and
icebp
mov
lcall
inc
mov
in
bound
iret
imul
out
mov
mov
orb
sbb
jnp
dec
pop
pushf
mov
dec
push
int3
js
pop
lea
cmp
or
mov
hlt
pop
fistps
cmc
cmp
or
xor
addb
mov
pop
or
sbb
mov
cmp
fcmovnb
cmp
jo
xchg
shl
inc
or
or
cmp
fistpll
cmp
shlb
rcrb
in
je
call
ret
fsts
mov
xchg
cwtl
xor
hlt
data16
cli
push
jbe
mov
ror
loop
cmc
lock
into
test
push
stc
fs
push
xor
pop
fisttpl
dec
shlb
mov
jne
xchg
xchg
mov
imul
xor
popf
jbe
inc
dec
movsl
sub
lcall
fldt
cli
test
jge
scas
loop
inc
jmp
and
xchg
push
sbb
xlat
adc
inc
sbb
add
cltd
mov
rcl
xchg
jbe
mov
or
cmp
add
les
xchg
daa
jg
cld
aaa
into
int3
and
popa
lods
mov
out
mov
dec
fs
cli
mull
or
fstp
andb
test
sbb
jle
add
jmp
arpl
jge
je
inc
rcll
jbe
lret
ficompl
ficompl
mov
iret
xorl
dec
pop
out
test
sub
jl
test
mov
cmp
xor
or
js
sahf
dec
pop
ja
stos
lods
repz
cwtl
jmp
js
jmp
xor
mov
xor
mov
jnp
push
mov
mov
data16
aaa
sbb
pop
loop
pop
js
loopne
and
xchg
adc
js
lcall
pop
cwtl
jae
lods
mov
dec
jne
xchg
push
ficoms
sbb
dec
mov
or
cmp
push
cmp
xor
mov
mov
and
cmc
dec
and
dec
hlt
sti
jmp
jne
push
jnp
dec
repz
add
sub
sbb
sbb
mov
cmp
enter
mov
pop
xor
lds
sub
pop
inc
push
jnp
pop
data16
sub
sti
or
xor
push
add
push
and
add
loop
iret
in
leave
xor
push
dec
dec
ljmp
or
jnp
lds
xchg
inc
and
clc
jecxz
fs
or
popf
xor
arpl
fwait
out
pop
pop
mov
cmp
pop
mov
mov
sbb
cmc
out
loop
mov
mov
sbb
adc
sub
cli
jge
test
and
sbb
mov
adc
int3
jns
mov
aas
inc
sbb
pop
notl
xchg
orl
jecxz
fwait
sbb
xchg
dec
notl
imul
sahf
push
jp,pt
cmp
adc
inc
aam
push
adc
fidivl
mov
push
outsl
push
in
push
xchg
xchg
push
jns
lods
test
inc
testl
ret
add
mov
xchg
xor
push
lea
rcrl
xor
std
pop
jbe
mov
cmp
add
icebp
adc
jg
repnz
andb
test
clc
dec
ret
pop
bound
mov
movsb
dec
cltd
xchg
mov
fildl
test
loop
imul
or
das
sub
push
mov
fs
repz
or
mov
pop
ret
mov
pop
out
arpl
adc
fnstsw
dec
lds
jge
mov
inc
ja
push
and
popa
cld
add
xor
lret
orb
pushf
aad
bound
mov
lock
dec
ja
adcb
mov
sub
xchg
fs
xor
test
xor
jp
insl
jae
cmp
test
add
add
fistl
pop
shrb
mov
lcall
dec
adc
into
push
xor
andb
add
xor
loop
in
ficompl
std
sub
or
push
sahf
mov
je
push
xchg
mov
jecxz
aas
xlat
mov
pushl
cmpsb
sbb
pusha
lret
sub
push
in
das
cmp
subl
sbb
sub
mov
or
nop
inc
sbb
xchg
jg
mov
je
adc
pop
scas
addr16
negb
std
xchg
push
cmp
lock
rcrl
mov
dec
adc
adc
ret
pushf
xor
negb
es
inc
outsl
movsl
dec
outsb
fistl
mov
bound
and
dec
or
ret
shlb
xor
xor
fwait
test
out
imul
xor
ss
xlat
test
lods
pop
repnz
add
or
ss
xchg
js
fwait
mov
mov
jno
cmc
push
out
push
lcall
out
lret
pushf
rcr
test
fmull
inc
mov
push
movsl
jp
dec
ret
call
dec
test
lahf
fldcw
pop
xchg
cltd
pop
xor
push
lods
gs
or
mov
int3
add
loop
fisubl
mov
dec
mov
jae
test
js
mov
test
sub
in
mov
lcall
int3
lods
add
jle
dec
ljmp
and
scas
push
adc
lcall
notl
mov
xorb
xchg
scas
pop
test
mov
aaa
loop
repz
out
lods
outsb
mov
pop
inc
in
inc
cs
ret
jle
rcrb
in
lods
mov
popa
and
jmp
ljmp
add
jno
adc
mov
insb
icebp
pop
subl
ds
js
fidivrs
leave
das
mov
ficoms
enter
pop
cmpsb
popa
push
push
into
rcl
daa
jle
dec
mov
xor
sahf
and
xchg
sbb
test
jmp
dec
cmpb
pop
rorl
ja
dec
xlat
mov
fidivrs
xchg
lea
fwait
into
popa
xchg
pop
std
mov
cmp
mulb
dec
cmp
pop
xchg
pop
sub
mov
add
mov
jo
or
adc
fstps
mov
mov
les
sarl
lods
push
or
xlat
ja
jmp
pop
out
cmp
pop
pushf
sahf
mov
sbb
cmp
mov
pop
mov
je
lcall
mov
fidivs
fisubrs
jb
fisttps
pop
out
cld
int3
inc
psubusw
dec
pop
push
sbb
mov
xchg
mov
iret
addl
stos
sbb
rcl
sarb
xor
pop
jg
das
shlb
sbb
push
iret
add
dec
int
scas
fiaddl
enter
popf
leave
adcl
sbb
xchg
mov
mov
push
dec
push
mov
inc
dec
je
out
adc
sbb
nop
xchg
out
or
jp
dec
lret
jnp
or
fs
inc
notl
fisubrl
mov
stc
lds
dec
sub
xchg
jnp
pop
pushf
imul
les
mov
mov
scas
cmp
xor
cmpb
lock
adc
push
repnz
rolb
inc
rcr
in
cmp
out
mov
data16
out
fldl
inc
push
test
in
int
inc
ret
pushf
arpl
ja
adc
push
test
pop
push
inc
cmp
shrl
sub
sub
sbbb
jne
movsl
fucom
ss
dec
jecxz
outsb
mov
mov
aam
lods
jo
aad
cld
push
dec
mov
mov
stos
and
push
jo
popa
lret
bound
popa
pushf
mov
fistl
lahf
cwtl
arpl
sti
pop
push
push
adc
fs
mov
add
les
dec
lahf
or
mov
aad
cs
push
xchg
inc
test
push
fnstcw
pop
mov
mov
dec
ljmp
and
cmp
xchg
jmp
mov
mov
mov
test
mov
xchg
mov
xor
mov
mov
xor
sub
or
icebp
mov
xor
loopne
mov
enter
cmc
mov
mov
mov
adc
mull
pop
popf
and
jnp
jae
mov
mov
mov
shl
cmc
inc
push
rol
fmuls
popf
push
push
pop
lock
cli
jecxz
sub
pop
sub
cmp
and
cmp
pop
add
sub
pop
rcrl
loop
in
punpckhbw
push
push
sbb
dec
mov
lea
push
mov
mov
push
push
xchg
outsl
fs
add
daa
cwtl
jae
inc
push
stc
add
sub
fwait
sub
mov
mov
cmp
dec
lea
pop
inc
lods
mov
jmp
cld
xchg
dec
subb
and
je
aaa
daa
push
sahf
loopne
scas
or
xlat
jne
int
cwtl
mov
fstpt
and
push
xlat
cmp
mul
test
mov
push
cmp
in
cs
cld
dec
push
cmp
out
lcall
fists
aad
xchg
sub
adc
icebp
das
sub
scas
stos
add
mov
sub
mul
mov
movsb
jle
cmp
stc
pcmpeqw
pushf
sub
je
shrl
int3
enter
sub
cmp
sahf
inc
lods
dec
mov
jl
out
ret
add
mov
and
lahf
xchg
lcall
add
test
push
or
dec
lcall
lea
icebp
fst
sti
aad
loope
daa
push
sahf
push
xor
jecxz
aad
cli
jmp
inc
test
cli
das
xchg
pushf
mov
rorb
js
insl
sub
enter
mov
lea
jg
push
incl
sbb
in
push
xchg
inc
add
sahf
adc
mov
xchg
sbb
mulb
fcoml
aas
movsb
xor
in
decb
inc
sub
sti
fstl
lods
mov
test
sub
outsl
xchg
xchg
repnz
call
inc
jp
pop
sbbb
xchg
dec
or
mov
inc
add
jp
xchg
or
mov
jno
xchg
push
or
repnz
mov
sbb
sbb
pop
adc
aas
or
shl
insl
pusha
outsb
fsub
or
lcall
cmpsb
adc
cwtl
lahf
push
mov
xor
roll
sbb
or
xchg
jns
dec
adc
adc
ss
movsl
jae
fidivrl
test
into
inc
and
mov
sbb
sbb
jno
outsl
fisttpll
clc
pop
inc
lea
gs
and
mov
sbb
aam
shrb
jp
cmpsb
pop
hlt
jmp
ficomps
dec
repnz
jg
inc
psubq
or
inc
daa
pop
test
push
jl
or
fsubrs
mov
lds
leave
adc
add
stos
cmp
and
clc
jns
lea
mov
fildl
pushf
insb
ja
mov
mov
jle
sbb
fwait
pop
icebp
outsl
mov
jae
mov
adc
stos
mov
insl
mov
loop
enter
fildl
cmc
stos
pop
sub
mov
movsl
test
addr16
adc
inc
movsb
dec
sbbl
xchg
fsts
jo
cmc
sbb
lcall
clc
adc
movsl
xchg
daa
mov
cmp
jecxz
pop
int
jg
je
aad
cli
ret
gs
in
push
fildll
push
lret
sti
mov
sub
xchg
jecxz
stos
push
mov
mov
imul
pop
and
push
mov
aaa
jmp
out
cmpb
push
stos
jns
push
push
sbb
ficomps
jbe
lret
add
adc
dec
fdivrs
imul
mov
cld
and
adc
dec
ds
imul
enter
fcomps
out
sti
lea
and
inc
jne
jge
jecxz
shll
pop
push
cmp
sahf
shlb
mov
pop
pop
imul
iret
jmp
lret
loopne
pop
jl
mov
sbb
sbb
mulb
lock
jl
cmpsb
pop
jo
pop
jb
aas
mov
adc
mov
push
cli
xchg
iret
mov
xchg
mov
and
adc
adcl
fprem1
jb
rcrb
incl
movsb
out
int3
data16
js
push
ja
out
xchg
mul
push
adc
or
repz
data16
xorl
mov
add
mov
in
xor
std
mov
mov
pop
cmp
repz
xchg
jmp
test
mov
mov
add
jle
mov
mov
out
pop
mov
sub
add
shll
outsl
jecxz
iret
inc
insb
jb
sub
and
mov
not
push
int
push
mov
ret
loope
cltd
sub
loope
aas
or
xorl
sub
std
sahf
and
das
xor
mov
xlat
ljmp
shrb
insl
cmp
imul
adc
fcmovnu
xor
shr
xorl
hlt
sbb
lds
add
add
and
out
jg
cwtl
mov
out
sub
mov
pop
cs
mov
imull
popa
scas
xlat
stc
xor
out
test
testb
dec
sarb
roll
push
divl
xchg
and
mov
cs
mov
aam
xor
imul
js
jne
fcoml
iret
xor
nop
inc
jb
in
adc
lret
jne
mov
mov
jnp
xor
das
or
mov
cmp
xchg
bound
sbb
mov
push
mov
ljmp
aam
sub
adc
pop
jl
test
mov
addb
add
out
adcl
fcmovu
xchg
push
mov
mov
enter
dec
xor
or
cli
mov
pop
aad
mov
sbb
xchg
and
pop
aad
adc
scas
out
xor
sbb
ds
repnz
mov
fsubrs
mov
push
jb
cmp
xor
dec
sahf
jg
jns
xchg
dec
dec
push
add
jb
cmp
shll
adc
jg
xchg
xor
jb
aad
jnp
gs
mov
bnd
pop
imul
scas
rorl
loope
jbe
push
inc
ljmp
sti
jmp
xor
push
pop
das
mov
mov
jge
mov
dec
jle
xlat
mov
and
mov
out
ss
into
or
jb
icebp
sbb
cltd
cs
adc
loop
push
jbe
add
scas
jnp
int
jno
jmp
mov
insl
mov
push
dec
shll
enter
pop
in
test
pop
dec
in
aaa
fsubrl
sti
mov
mov
in
in
adc
rcl
ret
adc
test
sbb
jne
mov
std
inc
xchg
lds
in
insb
push
cld
iret
xchg
sub
test
adc
out
mov
lock
add
imul
repz
mov
mov
jbe
jl
sub
inc
push
lret
dec
pop
int
pop
push
and
data16
push
mov
mov
rcll
sbbb
aas
adc
in
or
adcb
xor
jg
les
outsl
pop
mov
dec
cwtl
jno
or
xchg
cmc
mov
out
jne
loop
shll
push
sbb
out
pushf
repz
jmp
add
inc
cs
daa
push
jp
aaa
hlt
in
mov
add
dec
sbb
sbb
push
movsb
aas
incb
sbb
or
imul
or
dec
inc
cli
pushf
and
imul
mov
loope
js
and
in
mov
data16
cmp
loop
mov
insl
mov
mov
mov
lea
leave
ja
sub
jbe
dec
ja
jp
lds
call
push
in
outsb
cmpsl
repz
and
in
gs
push
pop
arpl
mov
repnz
mov
sbbl
pextrw
mov
dec
or
scas
xor
insb
cmp
push
test
pop
push
cltd
stc
outsb
mov
cmp
in
pop
rcrl
filds
fcmovnb
dec
add
and
xor
mov
pop
sub
jae
jge
insl
mov
push
mov
movsl
mov
clc
pop
inc
jns
sahf
in
jae
in
lock
fldt
cmp
inc
xchg
int
inc
imul
mov
mov
xor
xlat
rorb
das
jmp
mov
push
sbb
call
and
fwait
push
lret
dec
pop
insb
test
lds
cld
cli
sbb
push
cwtl
fnstenv
mov
jno
clc
clc
incb
xlat
sbb
cmp
loopne
insl
mov
jne
pop
xor
mov
movsl
leave
push
dec
fdivrs
inc
dec
jae
imul
and
adc
and
cmp
std
sub
cmp
pushf
test
mov
jp
insb
or
insl
bound
dec
stos
das
cmp
adc
mov
adc
mov
mov
or
dec
outsl
pop
inc
scas
lock
repz
lcall
xchg
mov
popa
lret
loop
into
mov
dec
ss
jp
add
in
and
fcompl
subb
outsl
or
mov
pop
adc
mov
inc
dec
jbe
jb
xchg
and
cmp
sub
mov
jns
cmpsl
or
add
repnz
inc
ret
mov
aad
int3
mov
dec
loopne
andb
ljmp
ja
mov
sbb
fs
scas
xorl
adc
dec
inc
rolb
rcll
arpl
ja
loop
pop
cmp
xorb
inc
mov
adc
inc
sbb
xchg
les
into
aam
jb
ds
mov
into
mov
loopne
push
or
adc
orl
inc
mov
adc
mov
sbb
mov
shll
mov
call
cwtl
mov
movsl
jmp
dec
push
xchg
aad
popa
mov
mov
and
sbb
mov
sti
mov
loope
inc
adc
addr16
sbb
repnz
ret
xchg
push
pop
std
sbb
add
notb
cli
jmp
fwait
mov
icebp
xchg
mov
hlt
ret
push
std
leave
enter
and
ja
or
xor
inc
and
fnstenv
sub
inc
or
test
jle
inc
dec
jge
psllq
jle
xchg
dec
enter
in
add
mov
adc
cmpsb
mov
leave
inc
pcmpeqb
stc
cmp
push
sahf
fidivs
insl
inc
sahf
pop
ljmp
fisubl
inc
xchg
cmpsl
adc
in
insl
jmp
movsb
pop
mov
stos
xchg
jns
es
cld
ret
ja
inc
gs
and
jns
xchg
outsb
jecxz
cli
rcrb
mov
je
dec
inc
cli
jge
mov
mov
ret
mov
cli
mov
dec
inc
and
das
inc
jge
jb
mov
or
ds
cmp
mov
jmp
cmp
inc
push
jne
push
add
scas
movsb
cmp
ds
cmpsl
loope
test
jg
call
int3
loop
dec
out
push
adc
xchg
imul
fisubl
loopne
push
xor
and
aam
pop
mov
push
dec
lcall
pop
f2xm1
jp
adc
add
dec
outsl
popf
sub
idivb
in
push
popa
dec
scas
pop
sub
add
shl
mov
call
push
mov
dec
push
jp
ret
loope
div
movsl
arpl
stos
stos
sbb
mov
out
jns
rdpmc
loop
cmp
inc
rorl
inc
jge
pop
lret
mov
push
js
or
push
mov
mov
xchg
jmp
push
dec
adc
jle
sti
negb
mov
popa
clc
sti
insb
imul
sbb
push
pop
pop
fsubrl
dec
movsl
cmp
mov
xor
and
in
xlat
xor
adc
ss
pop
shlb
dec
pop
sbbl
xor
ss
test
xchg
stos
ficoml
loop
dec
lret
inc
jmp
hlt
push
mov
inc
cmp
daa
mov
test
aas
dec
ficomps
fnstsw
roll
bound
mov
dec
sahf
adc
adc
push
or
xchg
insl
scas
out
cli
lret
inc
fnstsw
movlps
mov
sbb
or
addr16
and
adc
dec
inc
mov
lods
out
daa
and
cmpsb
hlt
add
rclb
mov
jae
ficompl
mov
xchg
xchg
mov
jle
cmpsl
in
push
pop
arpl
cli
out
sbb
inc
loopne
call
lret
pop
decl
dec
sbb
ret
mov
sbb
xchg
into
sub
mov
sbb
push
pop
mov
in
cmp
or
jecxz
js
imul
iret
inc
ret
jne
mov
movsl
cmp
insl
mov
aaa
inc
mov
pushf
jmp
out
or
in
loope
insb
test
stc
sub
fwait
pop
inc
xor
mov
cs
daa
in
mov
mov
cmp
in
insb
push
sub
sbb
mov
ror
push
sub
sarl
mov
stc
adc
xchg
test
mov
cmp
adc
out
popa
mov
stos
cmp
ss
mov
add
test
insl
sti
mov
adc
dec
xor
mov
fs
pop
cmp
scas
sbb
pushf
mov
cmpsb
dec
cmpsb
fs
inc
in
insl
jnp
xchg
popf
sub
jp
repz
dec
mov
and
daa
lret
cltd
push
xor
add
jnp
lcall
icebp
mov
lret
mov
stos
push
xchg
in
pop
xor
mov
and
jo
lahf
sub
sbb
nop
sub
inc
ljmp
pop
arpl
dec
iret
outsb
mov
dec
sub
xlat
jnp
add
imul
inc
mov
stc
add
cwtl
add
mov
mov
mov
lret
inc
hlt
mov
subb
cmp
pop
leave
xor
xchg
sub
and
mov
dec
pusha
subb
or
inc
and
sub
das
push
dec
push
mov
lret
xchg
jmp
out
daa
stos
dec
pop
add
add
loopne
cmpsl
mov
xlat
arpl
cli
repz
jle
stos
push
mov
cmp
lret
inc
je
je
jl
push
mov
lret
mov
aaa
pop
sbb
mov
nop
mov
loopne
mov
rcrb
dec
push
lea
jbe
popf
pop
adc
test
cli
enter
xchg
jne
push
sbb
xor
ficoml
sub
aam
cltd
decb
push
xlat
mov
adc
push
or
aaa
std
arpl
lahf
xchg
arpl
xchg
or
loop
push
sub
cmpsl
lret
cld
xchg
inc
outsl
mov
xor
inc
loopne
loopne
dec
popf
mov
xchg
hlt
ja
push
ret
sbb
aas
mov
aas
adc
cli
cmp
mov
jne
ja
mov
mov
xchg
cs
pop
aam
cltd
pushf
xchg
mov
jle
mov
cmp
inc
xor
ja
cmc
sub
sub
icebp
xchg
adc
inc
sbb
fmull
pushf
and
dec
test
dec
sti
stos
mov
add
lahf
sub
imul
into
sub
cli
mov
jl
ss
jb
ja
pop
imul
ss
jecxz
fwait
out
sbb
out
cs
push
mov
ret
pop
inc
sub
out
pop
xlat
mov
push
mov
jg
sbb
mov
stos
inc
popa
or
and
sub
dec
andb
push
std
inc
aas
iret
cmpl
push
fucompp
adc
lock
adc
or
inc
push
cmpsl
nop
push
jp
mov
inc
mov
inc
cli
lods
jg
in
xchg
jb
or
pop
daa
es
data16
xchg
mov
push
loop
jns
leave
push
mov
bound
sbb
inc
call
pop
jne
jmp
xchg
mov
cwtl
dec
outsl
xchg
dec
and
dec
lret
nop
shl
dec
jecxz
into
jne
pop
push
xor
add
insb
dec
and
ret
push
std
sbb
ja
daa
orps
out
nop
mov
sahf
xor
fidivs
push
dec
sbb
outsl
incb
pop
lahf
incb
push
jmp
mov
or
mov
mov
into
shl
aaa
add
mov
push
pop
pop
adcb
loope
xchg
push
sbb
in
jmp
lret
mov
loope
addr16
and
pop
sub
inc
lods
adc
jbe
mov
adc
push
or
push
movsl
xor
push
pop
xlat
adc
fwait
cmp
stos
daa
cmp
xor
xchg
dec
test
cli
lock
in
shr
ret
into
fisttpl
adc
jl
or
pop
cli
or
mov
cmpl
mov
sar
mov
push
sub
cmp
out
enterw
sar
loopne
cmp
cltd
mov
inc
cltd
mov
inc
sub
mov
or
jno
xor
icebp
gs
pop
in
stos
out
jl
mov
out
sub
inc
cmp
pushf
and
push
cmp
aam
mov
addr16
mov
insl
inc
push
nop
and
mov
mov
aad
jecxz
daa
push
popf
pop
xchg
dec
mov
inc
cmp
insl
in
cmp
jne
or
adc
jge
es
jae
xchg
mov
int3
xchg
lcall
movsb
xor
inc
out
scas
popa
add
stc
and
stos
jne
incl
notl
sbbl
mov
dec
in
test
cli
push
lret
or
dec
xchg
lock
cwtl
sbb
call
jl
sub
lods
pop
pop
mov
push
mov
inc
std
push
xlat
imul
aad
xchg
cmpsb
pop
push
add
pop
sbb
add
pop
loope
or
fwait
push
das
jge
push
idivl
rcl
mov
jl
mov
mov
lds
push
ret
sub
insb
mov
std
mov
fucomi
nop
mov
adc
andb
sbb
shl
inc
call
nop
stos
inc
add
insb
lods
das
push
or
push
out
mov
popf
adc
dec
test
jg
andl
into
scas
jle
in
jp
test
push
ljmp
mov
mov
jno
out
scas
scas
ljmp
mov
mov
ret
pop
mov
mov
pop
sti
sub
pop
lret
jmp
or
test
push
cmc
mov
lahf
lea
pop
mov
mov
dec
jne
adc
adc
adc
pop
movsl
mov
adc
imul
movsb
mov
lret
addr16
mov
cmpsb
insl
xchg
or
arpl
pop
inc
pop
xchg
iret
aaa
inc
cmp
mov
jnp
cmp
or
mov
js
xchg
pop
adc
xor
cmpsl
dec
mov
incl
test
dec
ficoml
fidivs
xor
sbb
jbe
repnz
imul
push
jmp
mov
sub
mov
pop
inc
mov
movsl
xor
icebp
lods
stos
xchg
pop
mov
sub
jno
fstps
rcl
add
stos
push
aad
xchg
aam
mov
lds
pop
ljmp
cmp
jae
iret
aas
xor
daa
sub
add
or
rcrb
or
sahf
stos
leave
pop
push
xlat
mov
xchg
scas
xchg
mov
data16
insb
push
mov
jg
faddp
jle
in
leave
cltd
lods
shrb
jl
sti
inc
fsubrl
pop
sub
add
or
jecxz,pt
dec
sbb
mov
add
cmp
fisttps
insl
xorl
ljmp
rcll
jle
cli
push
loop
test
sbb
roll
mov
aaa
int3
les
dec
jle
push
add
dec
mov
ljmp
nop
mov
addr16
sbb
inc
and
pop
jnp
jbe
insb
add
sti
sarl
lds
pop
mov
fldt
aam
ds
test
sbb
sbb
cmp
insl
adc
aaa
xlat
sub
aad
xor
jae
andb
ss
mov
xchg
sub
dec
pop
sbb
popf
add
mov
cmp
mov
mov
icebp
test
xchg
lea
in
push
imul
push
inc
imul
mov
bound
push
mov
mov
push
packuswb
add
into
xchg
sub
mov
cmp
repz
insl
notl
add
repnz
lds
dec
or
shll
add
pop
cs
xor
nop
std
icebp
icebp
mov
test
es
mov
sbb
arpl
cli
push
fidivl
cltd
in
out
xchg
es
jge
push
sbb
adc
js
mov
cmp
or
ret
enter
dec
jmp
mov
or
adc
inc
mov
push
pop
movntq
mov
cmp
cmp
lods
fcomps
xchg
push
imul
xor
push
pop
adc
dec
test
daa
and
or
dec
rcrb
fldl
std
std
imul
push
movsb
pop
pop
mov
aaa
mov
sbb
sbb
add
jns
in
testl
aaa
es
fiadds
hlt
xchg
cmp
rol
out
jecxz
sbb
and
cmc
out
or
or
xchg
cmpsb
push
cmp
mov
out
xchg
jl
jp
fsub
xchg
xchg
cmc
xchg
outsl
push
sbb
test
je
adc
jae
or
mov
loop
in
push
and
sarl
fsts
in
pushf
jg
xor
cltd
jmp
ficoml
xor
int3
mov
sahf
insb
test
jp
lods
pop
dec
ja
push
scas
adc
inc
mov
sbb
scas
push
mov
int3
jl
mov
gs
mov
xchg
loopne
xchg
aam
les
inc
test
jno
jmp
pop
adcl
cwtl
lods
imulb
fadd
stc
jmp
pop
lods
dec
or
dec
mov
lahf
mov
insb
shrl
mov
add
sti
cmp
cmpsl
aad
ret
xor
mov
or
push
xchg
inc
dec
xor
push
fucomp
push
push
jnp
sbb
dec
mov
adcl
mov
jae
test
adc
adc
roll
and
xchg
jno
pop
push
dec
lods
cmp
mov
cmp
pop
sti
mov
xor
leave
xchg
mov
mov
fwait
sbb
nop
push
lcall
adc
sbb
adc
movhps
fdivp
mov
xchg
and
add
sarl
sti
mov
xor
ret
and
mov
xor
jecxz
xchg
insl
cmp
rolb
mov
mov
in
or
dec
xor
dec
sbb
std
insl
sbb
js
hlt
cmpsb
push
add
scas
inc
inc
mull
or
xchg
jb
incb
mov
aaa
lods
cli
addl
loopne
push
imul
sub
clc
insb
add
rcll
aad
sub
mov
and
push
je
test
scas
jp
mov
jmp
jo
adc
cmpsb
mov
mov
sbbl
fists
lret
mov
mov
stos
es
push
js
test
pushf
sub
test
test
jno
imul
sbb
jne
xchg
insb
mov
xchg
sub
push
insb
xor
bound
loope
inc
in
mull
rdtsc
mov
call
adc
mov
and
and
adcl
test
bound
pop
movsb
leave
mov
or
rorl
jecxz
fcomps
jbe
fs
pop
add
mov
jno
adc
mov
mov
sbb
and
in
in
rorb
mov
int3
inc
fwait
dec
test
gs
and
dec
and
pusha
dec
or
inc
outsl
fidivrl
in
int
scas
push
xchg
xor
jnp
push
lret
fimuls
stc
push
xchg
push
aam
mov
pop
mov
adc
ficomps
add
xor
fsubrp
jmp
outsb
arpl
sbbl
jo
aad
gs
sarl
test
cmp
push
mov
add
xchg
adc
movsb
push
mov
mov
sub
mov
or
jne
aas
sbb
mov
lret
in
inc
sub
and
arpl
add
outsl
sub
mov
addr16
decb
aaa
cmp
jne
and
loope
das
jecxz
or
dec
or
xor
jnp
add
je
or
call
or
insl
push
jmp
mov
xchg
xchg
fstps
jmp
jp
arpl
out
enter
jp
mov
shlb
std
cld
sar
mov
rclb
mov
aaa
and
test
jge
mov
push
test
push
std
mov
jo
xor
jnp
cli
dec
mov
push
mov
jne
enter
mov
sub
mov
fiadds
outsl
out
lcall
lods
int3
add
fmull
push
mov
pop
xlat
adc
aad
sbb
mov
mov
or
mov
jno
cmpsb
ret
sbb
ds
scas
xchg
xchg
mov
xchg
fists
data16
ja
mov
cmp
jne
xlat
jo
jae
cmpsb
ret
jno
pop
mov
jo
inc
lods
adc
mov
aad
test
and
xchg
mov
xchg
pop
mov
je
iret
pop
hlt
into
aas
jne
clc
mov
sub
cmc
hlt
dec
adc
mov
cmp
arpl
and
ljmp
loopne
mov
mov
dec
stos
push
inc
imul
pushf
pop
in
adc
cmpsl
fs
cmp
dec
lcall
cmc
dec
je
push
mov
sub
lock
cwtl
addr16
push
out
out
or
lahf
pop
lcall
rolb
outsb
js
imul
and
push
orb
je
loope
adc
xchg
pop
mov
fcoms
pop
sbb
fsubr
mov
popl
jmp
xor
das
subb
add
pusha
fistpl
mov
adc
ljmp
push
mov
dec
xor
push
jmp
out
movsl
cmc
pop
out
lods
outsl
fidivs
xlat
jbe
pop
mov
inc
jno
insl
bound
and
mov
cmpsl
xchg
scas
inc
inc
mov
stos
hlt
push
clc
test
iret
xchg
or
jge
lds
cltd
lods
sahf
sub
das
daa
das
ja
mov
xor
sti
and
mov
movsb
aam
lods
testb
int
or
add
add
sub
cmp
or
int3
fdivrs
out
rcrb
mov
shll
mov
popf
or
jg
mov
stos
in
adc
scas
push
inc
push
fs
push
add
sub
xchg
rcll
das
hlt
mov
lahf
shlb
push
rolb
ficompl
inc
scas
cmc
mov
shll
dec
in
shll
adc
pop
rcr
loopne
fstps
mov
sbb
and
mov
inc
adc
mov
cmpsb
jnp
mov
stos
adc
mov
imul
clc
cmp
and
popa
mov
movsl
mov
ds
inc
mov
out
cmp
jmp
hlt
in
adc
sub
xchg
clc
fimull
fwait
or
inc
orb
sarl
in
roll
dec
incb
loopne
or
mov
adc
mov
and
or
and
bound
add
in
mov
push
cmpb
subl
rorl
add
jg
lret
pop
push
push
inc
xchg
push
xchg
test
xor
jecxz
repnz
dec
aas
jecxz
mov
movsb
ret
add
jb
mov
inc
sete
jb
clc
xor
ret
inc
loope
jnp
out
bound
xchg
dec
inc
jl
lods
inc
lret
inc
out
outsb
cli
mov
insb
int
sti
mov
incb
jae
add
mov
push
insl
xchg
sub
test
cmpsl
push
add
mov
fistps
push
add
mov
lahf
pop
rclb
adc
das
jmp
mov
xchg
stc
pop
sahf
addr16
jnp
jle
leave
fstpt
movsb
mov
xor
cwtl
inc
cmp
das
loope
ljmp
mov
out
rorl
inc
add
cltd
movsb
add
inc
inc
pop
loope
mov
jnp
lahf
add
jle
test
add
scas
mov
aaa
lahf
inc
mov
xchg
shll
mov
sbb
fists
push
sbb
cld
mov
jbe
das
jno
pop
lret
das
insl
in
mov
xor
cmp
xor
and
fldl
cmp
xchg
fistps
jne
inc
push
js
dec
jle
out
aam
cwtl
xor
jmp
inc
cmp
popa
stos
stos
aad
not
pop
jmp
aam
or
jno
inc
or
add
stc
test
xchg
xor
xchg
adc
sti
movsl
cmpsl
xor
inc
and
mov
shlb
xchg
aad
add
dec
imul
imul
mov
pop
adc
jmp
push
inc
insl
dec
jl
mov
mov
and
adc
ss
ljmp
in
sub
stos
cmp
xchg
inc
mov
pop
mov
and
pop
out
mov
and
jnp
mov
outsb
cmc
and
hlt
push
test
sub
jae
in
lcall
mov
ds
imull
jge
jl
mov
je
test
xchg
and
mov
push
int3
negb
imulb
enter
shl
cld
pushf
mov
popf
mov
cmp
mov
dec
sbb
int3
push
add
stos
cli
inc
data16
pushf
js
sahf
cltd
push
cmp
push
fwait
push
mov
fldt
repz
test
das
mov
sti
jnp
ret
jecxz
lahf
mov
mov
pop
xlat
jg
sbbl
jl
neg
and
jp
add
mov
add
mov
mov
test
loop
loop
cmpl
mov
aas
mov
ja
mov
fiaddl
sub
mov
test
out
mov
lea
testb
popf
dec
sahf
lret
pop
and
std
and
mov
ret
cwtl
mov
inc
sbb
push
xchg
and
mov
insb
push
mov
gs
gs
mov
les
jne
mov
and
arpl
and
mov
cltd
out
inc
fidivl
push
cltd
loop
rcll
mov
or
cli
fwait
mov
mov
test
jp
push
inc
jl
inc
sub
mov
dec
adc
xchg
mov
and
aaa
inc
sbb
cmpsb
cmp
jge
scas
leave
jp
popa
cmpsb
js
sub
xchg
xchg
test
jbe
or
sub
lock
cli
mov
sahf
pop
adc
shl
outsb
dec
xor
mov
dec
cltd
outsb
push
or
insb
and
jle
mov
lods
insl
jne
ss
inc
jnp
dec
clc
je
out
xlat
jl
lods
push
push
arpl
pushf
lods
mov
xor
cli
mov
add
pop
addb
lock
aam
fimull
sub
sub
outsb
mov
out
pop
lret
das
cmpb
mov
add
xchg
sti
push
in
inc
ljmp
orl
sub
jno
adc
outsl
outsb
inc
push
jp
out
add
in
jo
inc
xchg
aad
lcall
inc
loope
jmp
jno
mov
sti
mov
outsl
call
sub
xchg
mov
invd
and
cmpsb
mov
sahf
ja
mov
mov
jg
mov
loopne
addl
fstps
dec
shrb
mov
add
out
inc
in
jl
inc
sub
cmp
push
repnz
sahf
jp
dec
add
inc
out
stos
aam
mov
ljmp
mov
pop
pop
ret
cmp
sbb
cmpsb
ficompl
outsb
mov
inc
add
mov
xlat
pop
inc
repnz
xchg
lea
add
mov
jge
ret
loopne
xor
iret
fs
mov
imul
fisubl
add
popa
fnstsw
loopne
xchg
test
js
pop
cmp
and
int
xchg
cmc
inc
push
lods
or
loop
stos
push
xor
push
mov
das
inc
cmp
xor
push
ret
in
dec
ret
xchg
cmc
mov
testl
test
addr16
fbstp
call
dec
stc
sub
call
leave
sbb
xchg
aam
arpl
cmp
sub
jle
call
test
aas
jmp
and
imul
lds
mov
pop
mov
cs
and
pop
pop
dec
cmp
lods
call
xchg
mov
jge
pusha
push
lret
es
mov
pop
sbb
rolb
jmp
setns
dec
sbb
movsb
pop
jae
jmp
sbb
pusha
jo
popf
lock
icebp
inc
jbe
sbb
mov
jae
push
mov
sub
pop
pop
add
lock
xchg
out
movsl
mov
ror
imul
mov
jae
xchg
fcmovb
ror
js
clc
stos
dec
mov
add
ja
loopne
pop
jle
out
fbstp
jle
dec
pop
push
out
popf
daa
leave
fcmovne
js
andb
push
add
pop
rclb
sbb
sbb
mov
xorb
jno
sub
pushf
arpl
cmp
out
pop
jb
fwait
xchg
incl
loope
jle
sti
fstpt
adc
xchg
out
pop
jno
nop
nop
sub
mov
stos
jo
fstpl
ret
dec
xor
sub
test
dec
pop
inc
push
cmc
push
test
fisubs
jns
add
push
mov
push
hlt
jmp
dec
inc
push
xchg
mov
mov
sahf
mov
xchg
mov
test
adc
add
mov
addb
lret
rcrb
push
cld
dec
ds
aas
rclb
push
pop
arpl
xor
pop
pop
cmp
stos
cmpsb
in
bound
js
and
dec
cmp
gs
fdivr
ret
adc
xor
sti
push
loop
jo
sahf
adc
negb
dec
fstpl
add
negb
cwtl
cltd
mov
add
xor
std
mov
fwait
or
insl
mov
or
push
and
test
adc
inc
fldt
mov
and
ds
out
push
xchg
inc
inc
cmp
pop
fimuls
mov
test
roll
test
std
fildl
mov
xchg
jno
test
and
sub
ds
xchg
mov
shrb
fwait
aaa
jp
xchg
repz
cmp
subb
jge
inc
xchg
jbe
cmp
and
out
cwtl
add
fcompl
push
mov
push
xchg
jns
loope
mov
mov
push
xlat
xchg
gs
push
movb
xchg
add
in
push
push
dec
pop
sbb
push
es
inc
sub
adc
push
push
outsb
mov
cmp
mov
daa
out
cmp
ljmp
xchg
sbb
jb
dec
rcll
stc
push
push
jecxz
and
add
insl
in
lods
cmc
iret
out
aad
dec
jmp
jl
imul
imul
mov
in
xchg
incb
adc
cmpsb
mov
leave
add
cmpl
cmpsb
sahf
movsb
xor
movsl
fildl
subl
sbb
xorb
adc
sub
fwait
pop
sbb
push
ficoms
int
hlt
scas
lahf
repnz
jnp
xchg
rcrl
jne
mov
xlat
arpl
cmp
pop
lcall
cmp
and
push
cli
test
push
and
or
lcall
insb
xchg
mov
mov
fcompl
sub
or
mov
daa
jb
mov
or
daa
ljmp
and
popa
lods
mov
fsubs
cmp
and
cltd
aas
cld
mov
mov
push
scas
mov
lcall
xchg
mov
dec
sub
psraw
add
ss
les
les
mov
lock
xchg
stos
inc
mov
std
lea
subl
hlt
xor
sub
or
fcompl
push
fwait
xchg
or
cld
lods
pop
rcll
ds
aam
mov
sarl
out
jmp
test
adc
mov
ja
pop
xchg
call
xor
aaa
mov
mov
mov
cmc
pushf
or
inc
stos
mov
ret
add
inc
ja
push
push
arpl
mov
clc
mov
mov
jbe
push
scas
out
iret
xchg
pop
mov
xor
mov
push
mov
push
in
cmpsb
push
nop
pop
fwait
xor
push
lods
jmp
stos
mov
popa
clc
sbb
pop
push
mov
mov
les
aad
sub
or
mov
or
inc
add
xchg
inc
cmp
mov
aaa
push
jmp
and
cmp
xor
add
fisubrs
mov
mov
outsb
cmc
repnz
repz
in
iret
in
fdivs
cltd
into
es
adc
and
sbb
subl
push
ret
out
dec
orl
rol
pop
jl
and
dec
mov
je
out
js
movsb
or
fmuls
stos
and
das
ds
sub
jge
push
and
repz
and
inc
test
aaa
cmp
insb
cmp
sbb
rcl
or
or
push
ss
es
push
fisttps
in
lock
sbb
cmpsb
and
adc
ja
subl
jle
pop
cmpsl
sbb
pop
or
mov
and
mov
push
push
add
repnz
push
test
push
cli
cli
fsubp
lahf
rorb
idivb
insl
cmpsl
ss
or
push
and
cmp
jb
movsl
jb
dec
call
ljmp
in
cs
std
inc
loopne
lock
push
pop
pop
imul
push
fisubl
hlt
jge
xchg
cs
popf
lahf
push
dec
outsb
imul
pop
push
jg
mov
popa
mov
out
push
jg
sub
jae
stc
sbb
dec
or
movsl
xor
jnp
dec
sahf
jmp
inc
add
pop
rcll
and
cmpsl
inc
mov
rclb
xor
jle
test
pop
fcoml
aaa
mov
ret
subl
pop
orl
push
stos
out
scas
sbb
push
rcrb
lret
lea
ja
cmp
mov
jge
push
push
cmp
add
cmc
pop
sti
adc
test
idivb
fwait
adc
in
leave
cs
jle
ds
std
out
fs
sbb
imul
aad
aam
ss
or
lcall
imul
xchg
jae
movsl
add
add
pop
lods
and
mov
out
pop
mov
cmp
stc
cmp
adc
icebp
loope
xor
push
dec
push
dec
sbb
xorb
pop
bound
outsb
fwait
repnz
lea
popf
jo
mov
pop
insb
dec
cmp
cmpsl
imul
and
push
leave
pop
loope
int
jge
stc
mulb
mov
mov
xor
out
pusha
es
push
push
enter
sarl
inc
dec
pusha
imul
dec
mov
push
mov
push
or
mov
mov
cmp
mov
movsl
fldt
inc
xabort
xor
stc
daa
xchg
and
sub
jmp
cmp
rol
mov
and
pushf
dec
pop
mov
dec
setne
into
sbb
and
cmc
adc
dec
pop
scas
out
xchg
jno
pusha
cmp
mov
xor
or
xchg
lea
dec
insl
pop
push
movsl
rol
stc
icebp
call
push
and
mov
nop
xchg
cwtl
out
fidivrl
je
ret
out
popa
inc
mov
lea
stos
mov
into
iret
scas
pop
std
pop
arpl
cld
jnp
shrl
jbe
jae
stc
xor
ja
jne
push
cmpsl
add
jmp
test
pop
mov
fsubs
call
mov
iret
push
xchg
aam
mov
mov
mov
aas
dec
inc
xor
mov
cmp
and
pusha
jns
in
mov
xchg
jl
mov
fstpl
test
loopne
jnp
arpl
sub
adc
subb
repnz
leave
jb
push
mov
mov
or
mov
aad
aam
sub
popf
dec
cmp
mov
aas
lds
cmp
sbb
push
scas
ss
sbb
or
iret
inc
dec
jno
cmp
jb
mov
pop
cmp
scas
xor
and
cmp
or
sti
clc
xor
cwtl
insb
fimuls
push
mov
sbb
scas
jle
aam
xor
and
adc
inc
cwtl
out
cmpsl
leave
jp
mov
xchg
cli
and
fadd
insl
add
push
xor
or
xchg
xchg
div
xchg
mov
sti
jl
fldl
in
mov
mov
pop
clc
lret
stc
mov
and
xor
je
mov
cmp
push
lret
or
jae
aaa
imul
loopne
mov
dec
faddl
fldenv
mov
and
adc
out
mov
dec
fldt
popa
cmpsb
out
push
pop
repnz
xor
cld
and
aas
adc
push
push
sub
aaa
adc
sbb
jo
in
dec
mov
call
sar
jmp
arpl
cltd
nop
cltd
pop
xor
gs
add
scas
inc
sub
fists
mov
es
pop
mov
push
movsb
pop
aaa
mov
int3
sub
frstor
ficoml
imull
out
jno
test
inc
xchg
xchg
fs
into
jge
in
test
fwait
dec
mov
lea
xchg
lods
cmovb
es
dec
sub
shrb
cli
loop
jmp
lea
aam
push
dec
push
xchg
jmp
clc
or
fists
jo
jnp
or
aam
rcr
mov
fcomip
sahf
ja
movsl
fsubs
lcall
movsb
pop
or
jmp
pop
push
jecxz
subb
pop
cltd
sbb
hlt
aaa
adc
test
enter
pusha
xor
sub
mov
jl
jae
jae
das
cmp
imul
push
lcall
xchg
rcr
fs
jae
xor
xor
mov
div
cmp
or
mov
lcall
das
sbb
cmp
je
cmp
push
dec
fimuls
mov
ss
orb
jle
pop
add
cmpsl
mov
mov
dec
ret
ficomps
lods
mov
in
sub
pushf
xor
add
subl
mov
push
in
arpl
cs
xor
pop
or
jne
lcall
vunpckhps
cmpsl
jl
pop
ljmp
or
es
cmp
mov
hlt
sahf
scas
ret
js
xchg
sub
mov
xor
int
shrb
adcb
fisttpl
pop
push
push
int3
jbe
fldl
sub
das
ds
mov
ja
sub
or
cs
or
aaa
cwtl
fistps
xchg
sub
mov
jmp
xor
mov
jnp
and
cmp
dec
or
dec
bound
test
pop
mov
xor
pop
adc
dec
jle
add
cmp
mov
scas
ret
imul
les
jle
pop
outsl
inc
add
test
jl
cmpl
lret
mov
out
and
add
mov
std
xchg
adc
call
jecxz
xchg
mov
jne
call
jl
movups
xchg
inc
shll
jmp
pop
cmc
repnz
inc
cld
fsubl
leave
mov
push
or
mov
repz
in
adc
or
and
pop
sbb
insl
lock
enter
jbe
or
mov
imul
fs
cld
lret
sub
ret
fildll
aas
push
outsb
jae
inc
mov
test
push
pop
xor
lods
and
dec
fldl
or
inc
adc
pop
mov
inc
lcall
dec
and
fildl
test
mov
adc
inc
cltd
pop
mov
and
pop
jge
into
lahf
push
mov
mov
xchg
and
inc
cmpsl
leave
mov
mov
into
xlat
call
mov
out
cmp
lcall
insl
movl
repz
pop
outsl
sub
lret
pop
mov
cmc
mov
enter
push
cld
cld
cld
xchg
cltd
repnz
mov
xor
or
out
fsub
jne
jne
mov
mov
cmp
inc
mov
loopne
push
pop
in
fstpl
mov
add
inc
lods
sbb
mov
movsb
cwtl
pop
aad
jp
or
xor
push
adc
push
adc
popa
mov
add
or
test
fsts
nop
push
sbb
and
movsl
std
jae
mov
inc
jl
test
push
push
lea
xchg
sub
lods
mov
and
xor
inc
inc
les
dec
hlt
adc
xchg
cmp
xor
cmp
lcall
mov
into
test
outsl
mov
mov
lcall
mov
and
xor
shrb
mov
pop
test
xchg
mov
mov
add
mov
iret
clc
sub
das
add
or
adc
lcall
dec
stos
aaa
push
inc
and
aas
cs
lcall
pushf
or
xchg
mov
add
lahf
enter
repz
insl
xchg
dec
fidivs
xor
pusha
jecxz
jnp
dec
ja
scas
in
cld
adc
jbe
jnp
sub
stc
sti
shl
jp
pop
das
cmp
test
cmp
cmp
or
cmp
lds
xor
mov
mov
ljmp
mov
mov
test
std
rorl
mov
repz
jmp
fs
jae
out
add
repnz
daa
and
hlt
add
push
notb
mov
push
scas
shrl
fsubrs
inc
xchg
lods
pop
jge
inc
push
inc
xchg
mov
mov
adc
gs
ljmp
int
pop
scas
push
ljmp
mov
cmp
shr
sahf
push
jmp
stos
jb
push
adc
test
dec
cmp
jg
ficompl
jg
mov
js
repz
mov
cld
lcall
int
in
cmpsb
inc
arpl
xor
pop
mov
jnp
dec
inc
icebp
xchg
stc
insb
mov
ret
push
sbb
lds
sarl
sbb
dec
xlat
pop
pop
mov
mov
loope
mov
sub
dec
popa
pop
sbb
inc
push
out
adc
xchg
daa
cwtl
xchg
mov
jo
xchg
out
lds
push
jo
mov
shlb
jo
loope
jge
push
xor
and
mov
enter
iret
cmp
and
std
mov
cld
popf
sti
cltd
jne
cltd
pop
pop
popa
pop
leave
adc
mov
add
dec
iret
aaa
or
cmpsl
fsubl
cmp
lock
test
dec
xchg
movsl
dec
popf
mov
or
jo
inc
