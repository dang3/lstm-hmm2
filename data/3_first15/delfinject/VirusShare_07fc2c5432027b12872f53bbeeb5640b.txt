push
call
ret
ret
push
push
xlat
jge
repnz
pop
sbb
popa
xchg
in
or
cmp
xchg
pop
xchg
jb
aad
stos
pop
mov
rclb
add
pop
pushf
jg
cld
pop
mov
movb
pushf
mov
push
xchg
sahf
popf
lcall
sub
mov
mov
or
xchg
nop
add
push
and
imul
sahf
not
inc
pop
xorb
cmp
sub
lahf
jge
andl
cli
je
dec
lret
dec
mov
fcmovnb
or
sub
daa
adc
adc
aas
push
mov
mov
dec
movsb
cmp
adc
inc
cmp
mov
lea
test
jle
lods
xchg
test
rorb
jmp
pop
lret
je
nop
inc
aad
sbb
sbb
cmp
scas
incb
dec
jbe
jmp
incl
mov
inc
mov
pop
loopne
das
mov
fcomp
insb
out
sbb
jb
fmulp
pop
xchg
cltd
push
imul
and
outsl
rorb
dec
cld
fiaddl
movsb
jnp
shlb
cli
xchg
out
pop
shll
pop
bound
addl
sub
push
leave
js
ret
adc
out
inc
dec
addr16
js
es
sub
out
ret
pop
ljmp
sub
or
sub
inc
add
sub
adc
mov
into
cmp
and
push
pop
cmp
sti
inc
pop
fwait
in
xlat
aam
and
aas
and
inc
jae
xor
out
adc
in
lds
adc
cwtl
popa
sbb
std
adc
sbb
fsts
lret
arpl
sbb
sarb
dec
add
jmp
sbb
add
xchg
inc
mov
loop
outsl
stos
sbb
lahf
gs
xchg
jno
int
in
mov
orb
adc
sbbb
inc
lods
aad
mov
ljmp
insl
ljmp
push
cli
and
je
sub
cmp
xor
stos
adc
push
xor
pop
aad
jno
jecxz
mov
ljmp
leave
adc
or
dec
push
decb
cs
aaa
jp
lock
enter
add
xchg
cltd
jmp
mov
loopne
dec
cwtl
cmp
mov
ret
fsubrl
push
pop
cmp
lock
push
dec
mov
or
xlat
cmpsb
add
cmp
dec
dec
adc
nop
icebp
fucomi
mov
and
shl
dec
dec
outsl
iret
in
sarl
insl
xor
jno
mov
jo
pmuludq
sub
jno
arpl
jl
inc
addr16
and
pop
sub
fbld
loopne
add
ljmp
and
mov
mov
addr16
stos
dec
add
into
or
inc
test
movsb
ret
xchg
push
icebp
mov
loope
mov
cli
push
arpl
les
or
movb
mov
xor
mov
push
fisttpll
cmp
lcall
mov
test
pop
add
popa
jmp
icebp
das
adc
inc
loop
dec
sub
jl
pop
lcall
lea
subb
inc
xchg
jnp
mov
pop
push
mov
adc
sbbb
pop
jne
in
cmpl
cli
jp
hlt
sub
repz
dec
push
std
lea
testb
imul
jmp
mov
out
dec
cmpl
popf
dec
hlt
sbbl
outsl
lock
push
cwtl
into
add
ja
ret
test
sub
jne
or
inc
testb
popf
inc
xchg
dec
fcomi
pop
sub
out
aam
test
js
daa
inc
mov
adc
xor
cmp
xor
add
mov
mov
add
xchg
inc
mov
mov
cmpsb
sbb
fdivs
dec
out
fildl
mov
adc
int3
ljmp
jnp
cmp
repz
lods
std
cmp
mov
push
push
sub
shrl
cmpsl
mov
loopne
lcall
arpl
and
mov
and
xor
cwtl
or
adc
push
xchg
add
xor
negl
test
and
scas
push
or
add
jno
jle
mov
and
testl
push
stc
sbb
xor
fstpt
cltd
incb
push
lahf
or
sbb
mov
cmpsl
aaa
xor
mov
sar
xlat
cmp
popa
cmp
jno
adc
idivb
mov
push
cwtl
jp
mov
cmp
mov
or
pop
push
std
adc
divl
xchg
imul
inc
cmpsb
cmp
xor
bound
sbb
cmp
jno
cmp
aad
and
test
outsl
js
test
mov
mov
lds
js
js
pop
pushl
movsl
popf
add
lds
insb
gs
into
lret
jne
push
xchg
mov
xor
mov
or
fistpl
arpl
xor
leave
fwait
daa
xlat
xor
nop
add
sbb
loope
push
dec
dec
jns
jns
mov
add
xchg
push
rcrl
cmp
mov
dec
out
inc
je
or
push
outsb
hlt
push
jb
jno
iret
dec
mov
cmp
call
mov
clc
xor
jecxz
jg
push
cld
shlb
stc
pop
lock
sub
sub
jmp
and
xchg
sbb
iret
frstor
aaa
ret
into
mov
leave
inc
clc
je
adc
pop
sbb
les
add
out
push
push
js
aas
insl
mov
cld
jp
mov
repnz
add
jl
addl
mov
cmpsl
xchg
and
lea
adc
sbb
push
clc
xchg
ja
push
loop
sbb
and
shl
jmp
adc
rcr
test
and
or
loopne
andl
mov
add
jns
xor
sbb
lret
jne
leave
inc
ja
xor
addr16
fwait
arpl
jb
xchg
or
dec
dec
ret
das
adc
mov
lds
ret
mov
lods
cmp
sub
cmpsl
inc
inc
ret
mov
jae
aas
std
arpl
arpl
call
jns
add
nop
mov
fwait
mov
imulb
aas
in
cmp
dec
fsubr
call
dec
pop
fsubr
inc
sbb
mov
scas
mov
enter
cmp
pop
scas
cmp
xchg
cltd
cwtl
or
jo
and
push
mov
xchg
filds
test
lahf
popf
popf
or
insb
jnp
test
cld
enter
push
cwtl
mov
push
xor
mov
dec
xchg
mov
or
mov
sti
xlat
mov
adc
xchg
lret
test
sub
jp
push
inc
push
xchg
xor
mov
lret
mov
cld
mulb
mov
cli
es
addr16
fistl
jnp
cs
sarl
cmpsb
lret
into
or
shlb
lahf
dec
pop
xor
xchg
and
dec
inc
int
rcll
dec
aaa
iret
test
inc
push
add
fidivrs
fsubp
or
int
insb
dec
dec
push
insl
or
xchg
mov
lods
outsb
adc
les
xor
notb
cwtl
dec
loopne
fwait
loope
mov
xor
adc
fstps
dec
dec
cmp
xor
jbe
add
insb
push
insb
mov
cmpsl
cmpsb
in
imull
lret
fwait
pop
jb
pushf
scas
fwait
xchg
xchg
jg
movsl
fs
and
int3
dec
fisubrs
and
xchg
cmp
jmp
je
ljmp
or
mov
cs
inc
pop
jmp
mov
xchg
or
mov
lock
test
sub
sbb
subb
aaa
sbb
or
loope
ja
push
jecxz
cmp
popa
mov
lret
mov
lods
sub
std
mov
xchg
cmpsl
adcl
lock
ljmp
lds
sub
inc
popa
ror
mov
inc
fsub
pushf
loope
loop
je
sbb
lahf
xchg
or
ja
ss
jns
mov
and
xor
dec
aas
and
daa
dec
pop
push
dec
sub
mov
xor
in
jg
stos
or
xchg
movsl
ds
lds
movsl
adc
mov
pop
out
mov
das
jne
cmp
stos
jl
outsl
jnp
and
loopne
cld
mov
pop
pop
push
dec
call
mov
in
and
jge
cmp
inc
dec
jne
aaa
dec
cmc
mov
cmp
je
or
nop
or
mov
mov
sbb
xor
mov
pop
adc
dec
lea
xchg
aas
sbb
inc
adc
movsl
imul
adc
pop
les
js
adc
popa
jmp
xor
mov
pop
mov
or
mov
sarl
pop
pop
mov
decb
or
jns
les
sbb
push
fists
adc
shl
jg
stos
mov
shr
loope
fsubrs
jle
ljmp
ja
adc
xchg
stos
test
fnstsw
or
ss
inc
lock
jg
loop
adc
pusha
aas
inc
fistpll
std
cli
imul
pusha
ss
pop
loope
inc
xchg
mov
jb
sub
push
add
mov
call
dec
rep
out
ds
adc
shrl
cmp
data16
out
xchg
mov
mov
ss
into
sbb
mov
aaa
lods
arpl
je
dec
mov
dec
dec
outsl
mov
inc
lea
push
dec
cmp
dec
lock
pop
push
iret
sarb
lock
ds
enter
cld
and
sub
jecxz
sub
mov
mov
loope
dec
movsl
xor
cmp
adcb
inc
pushl
mov
cmc
in
mov
pop
mov
cmp
jmp
outsl
or
imulb
sahf
sahf
into
dec
orl
cvtps2pi
in
outsl
in
jb
xor
je
inc
mov
xchg
or
add
mov
mov
xor
loopne
push
pop
add
bound
push
aad
lahf
test
dec
mov
out
lret
outsl
aad
out
lahf
nop
iret
das
je
in
pop
dec
pusha
iret
sbb
subps
js
andb
pop
pop
not
cs
loopne
mov
loope
xor
sub
cmp
jns
adc
fwait
jb
sub
sbb
mov
das
or
shlb
andl
loopne
addl
popl
out
lods
cmc
iret
cmp
ja
dec
lds
sbb
push
aaa
push
stos
xlat
imul
out
mov
add
or
mov
push
stos
daa
jecxz
cmpsb
cmp
imul
movsb
popaw
jnp
mov
fsub
xchg
loopne
stos
in
cwtl
lret
push
repz
or
imul
daa
jns
adcb
lret
sbb
add
icebp
pop
in
rol
icebp
andnps
sti
jb
push
dec
inc
test
lahf
sbb
ret
pop
or
inc
dec
in
in
cmpb
rol
mov
lds
stos
xor
bound
add
xchg
bound
inc
lahf
xchg
outsl
outsb
cwtl
pop
rcrb
push
jmp
mov
xchg
mov
push
cld
pop
pop
sub
out
in
rcll
pop
jle
mov
mov
adc
leave
imul
push
xor
jp
rorl
shrb
push
mov
inc
or
dec
and
loop
imul
pop
aam
stc
cmpsb
cltd
movsb
leave
shlb
xchg
loopne
bnd
test
lock
xlat
sbb
sub
xlat
test
mov
pop
push
xor
loopne
xor
pop
cwtl
jg
mov
pop
flds
pmulhuw
or
pop
dec
insl
inc
push
mov
outsb
out
dec
sub
mov
sahf
dec
int
inc
imul
or
sub
sti
gs
xor
push
mov
mov
cmpsb
sbb
pop
call
or
fwait
into
inc
dec
test
dec
inc
rclb
cmp
push
mov
test
pop
jb
pop
mov
cwtl
adc
add
mov
inc
cmp
shl
mov
pop
sbb
lods
adc
sti
xchg
pop
hlt
mov
inc
mov
mov
cmp
push
mov
aam
sub
adc
inc
imul
jl
rcr
cld
in
or
dec
adcb
or
pop
xchg
mov
in
dec
cmp
lds
or
mov
xor
loop
inc
sub
or
pop
call
jl
sbb
xchg
ret
push
cld
aaa
mov
dec
jnp
xchg
fldl
stc
cmp
icebp
jno
push
rorl
xor
cs
adc
cmp
cltd
cmp
xor
jecxz
xchg
data16
cmpsl
and
inc
cmp
xor
cmp
daa
sbb
stos
lds
mov
mul
sbb
nop
es
decb
leave
mov
adc
add
ljmp
dec
xchg
cltd
cmovs
lea
addb
inc
fnstcw
call
mov
sbb
cmp
or
push
les
adc
in
jmp
sub
jecxz
lds
xor
xor
lret
ljmp
test
and
push
inc
rolb
test
jb
sbb
call
shlb
mov
sbb
or
xchg
shr
adcl
scas
les
and
cs
mov
xor
pusha
xchg
xchg
insl
push
inc
sbb
mov
pop
fucomp
xchg
mov
pushf
push
hlt
imul
xchg
mov
stos
jmp
hlt
ss
pop
inc
fildl
add
ficompl
pusha
or
in
mov
in
push
push
in
push
popa
pop
sbb
push
loop
stos
cltd
arpl
adc
mov
cmp
in
into
xlat
mov
movsb
mov
mov
jmp
pop
xchg
lret
ret
hlt
scas
enter
jmp
mov
idivl
sub
xor
mov
pop
xchg
adcl
push
mov
mov
pop
fcmovb
cmp
ljmp
test
dec
xchg
repz
pusha
ds
jb
outsb
rol
push
psrlq
int
pop
xchg
inc
mov
xchg
inc
xor
dec
lret
adc
in
rol
and
adc
pop
test
and
mov
push
pop
in
aam
icebp
fwait
popa
inc
push
sbb
ja
jp
xchg
cmp
jp
add
adc
outsb
xchg
add
lea
das
std
pop
cld
and
call
out
data16
mov
movsb
dec
addr16
int
lods
arpl
divl
lcall
shlb
dec
jecxz
daa
mov
inc
aas
dec
ss
jmp
mov
loop
leave
xchg
pop
jle
mov
int3
ds
adc
jge
cmpsl
test
push
lea
in
adc
cmpsb
cmp
xchg
jnp
filds
ret
in
mov
pop
ret
icebp
xchg
fldt
sub
or
enter
add
mov
mov
and
les
call
leave
add
aad
aam
popa
adc
loope
mov
or
mulb
push
mov
and
pop
cs
rorl
insl
cmc
sahf
insl
ror
mov
xchg
sub
call
and
xchg
pusha
xor
xchg
xor
aad
into
roll
ja
push
js
inc
icebp
dec
in
mov
adc
mov
xor
lds
fisubrs
stos
xor
mov
mov
ja
loope
cwtl
pop
push
mov
mov
loope
stos
mov
cmp
mov
daa
pop
push
push
and
or
mulps
dec
cltd
cmpsb
sbb
mov
or
mov
les
decl
sarl
xchg
rorl
pop
dec
jp
popa
div
das
out
jb
adc
fwait
xchg
iret
jge
cmp
push
sub
xor
xlat
sub
les
into
mov
loope
ds
jg
xor
addr16
mov
or
cwtl
addr16
mov
cwtl
fstpt
sbb
cmp
fadds
xlat
or
lods
fldenv
mov
mov
out
xchg
sahf
add
inc
cmp
dec
ficoms
lea
cwtl
in
dec
sti
int
inc
push
and
enter
cmp
xchg
dec
mov
push
mov
sbb
sub
je
dec
mov
xchg
scas
std
outsl
xor
and
pop
cmpsb
push
cld
mov
in
add
pusha
jg
add
jns
or
inc
aam
call
loope
mov
out
movd
in
adcb
cs
dec
lds
mov
mov
adc
stc
adc
repnz
mov
aad
nop
xor
out
dec
mov
clc
icebp
cli
stos
sarl
outsl
addb
shlb
sub
lods
not
xchg
iret
mov
push
lcall
adc
inc
repnz
xchg
pop
ljmp
cmpsl
mov
popf
or
sbb
outsl
daa
jno
sbb
nop
mov
xorb
ja
clc
push
pop
dec
mov
adc
jae
cmp
xchg
leave
lea
outsl
xor
push
jge
fisttpl
xchg
mov
lret
out
mov
jg
cmp
aas
cmp
sti
push
xor
loope
imul
movsb
add
sti
jbe
dec
adc
jne
pushf
mov
das
mov
cmpl
inc
test
insb
pushf
jns
and
shl
je
adc
hlt
gs
lret
shll
ljmp
xchg
and
or
pop
mov
adcl
or
mov
push
or
in
insl
dec
pop
lods
cmp
mov
setbe
in
data16
test
movsb
adc
or
push
fwait
rcrl
pop
sub
jns
adc
mov
or
jo
xor
jb
or
loop
cltd
cmp
adc
push
out
decl
cmpsb
cmovle
lock
sub
rcr
jl
bound
mov
or
mov
stc
sbb
jmp
rorb
jle
push
test
jecxz
pop
mov
xchg
daa
fidivrl
or
ljmp
dec
xchg
lret
sbb
mov
addl
lahf
mov
in
pop
mov
mov
add
mov
sub
push
pusha
and
fwait
lock
mov
lock
xlat
xor
push
insl
jg
incl
lahf
xchg
pushf
inc
inc
stc
inc
xor
and
mov
sahf
sub
in
out
test
dec
jno
pop
stc
xor
xchg
loop
dec
cmp
jecxz
lods
stos
push
dec
out
cmc
pop
or
mov
js
out
je
cmpsl
cmp
movsb
xchg
into
fwait
dec
or
lret
and
lcall
aad
and
xchg
movsl
lock
sub
sti
outsl
jno
mov
repz
rcl
cwtl
xor
in
cmpsl
test
pushf
pop
pop
pop
mov
cmp
mov
cmp
fwait
int3
lahf
sbb
pop
les
fwait
pop
arpl
jo
movsl
mov
int3
cmpsb
ja
xor
sub
adc
jle
out
and
lods
cmp
popf
pusha
sahf
div
lahf
imul
xor
jae
cmp
outsl
xlat
popa
mov
mov
xchg
jp
push
xor
mov
mov
jmp
add
xorb
subb
push
hlt
lock
xor
sbb
insl
xchg
mov
sbb
add
int3
pop
icebp
daa
mov
insl
and
push
rorl
enter
pop
in
imul
pop
adc
inc
jne
mov
pop
in
xorb
jns
adcl
in
js
test
fdiv
lods
and
rcrl
sti
mov
jmp
pop
add
lock
add
testl
mov
add
dec
xchg
adc
icebp
insb
inc
lods
push
loopne
dec
xchg
out
or
mov
sbb
cmpsl
cmp
sub
movb
dec
xchg
cmpsb
pop
dec
popa
ljmp
dec
hlt
mov
daa
lret
addl
sub
mov
push
pop
inc
cmpsb
imul
aam
test
popa
cmp
push
imul
fdivrs
sub
fisubs
mov
pusha
lds
and
hlt
mov
fcmovu
hlt
jno
and
out
push
ljmp
and
mov
adc
cs
and
data16
mov
adcb
mov
movsb
pop
stos
in
pop
inc
fisttpl
jp
mov
xchg
js
mov
mov
or
sub
mov
shll
xor
pushf
cmc
cs
push
sub
mov
mov
loope
divl
push
andl
lahf
sbb
mov
sbb
movsl
cmp
cmp
pusha
icebp
loopne
icebp
jae
addl
inc
sbb
inc
repz
mov
mov
cmpl
jmp
icebp
in
xchg
dec
inc
notl
xchg
pop
fsubr
divb
cmp
subb
out
and
sub
adc
sarl
mov
sbb
out
mov
lret
sbb
jp
repz
and
adc
fnstenv
fmuls
insb
out
shlb
and
cmp
imul
push
cmp
outsb
aaa
movsb
rclb
mov
push
repz
hlt
pop
push
popf
pop
fnstsw
pop
or
ds
cmpsl
and
negl
xor
push
inc
into
or
repnz
fnstenv
mov
sub
mov
sbb
xor
xor
fisubs
sbb
shl
lds
lods
mov
adc
xchg
jns
pop
in
xchg
ss
xchg
imul
sub
faddl
push
mov
gs
test
stos
mov
repz
xchg
mov
pop
adc
and
pop
inc
xchg
ja
mov
xorl
in
and
out
test
je
cmc
lock
ficoms
rcll
fisttpl
out
cli
xchg
sti
pop
sbb
out
adc
into
shlb
cmpsb
out
xlat
sbb
jnp
adc
push
jle
sbb
arpl
inc
test
sbb
cwtl
jecxz
ret
or
fstpl
aas
loopne
repz
pop
inc
and
jl
mov
idivb
mov
stos
mov
sahf
push
shrl
test
pop
sbb
jmp
daa
cld
sbb
sbb
xchg
mov
loop
pushf
shlb
data16
pop
or
xchg
cmp
xchg
xor
jo
bound
insb
inc
xchg
test
cs
mov
rcll
inc
dec
or
rcrl
popa
ja
push
sub
xchg
xchg
daa
mov
dec
pop
in
scas
pop
xor
stos
cmp
lret
cli
add
ror
lods
push
add
push
dec
pop
popa
pop
inc
sbb
icebp
mov
xlat
mov
lock
testb
and
lods
or
add
push
sbbl
imulb
mov
xchg
data16
dec
xchg
mov
insb
js
jae
ds
data16
push
push
mov
xchg
push
bound
dec
in
test
sub
adc
addr16
fsub
or
adc
xor
adc
pop
pushf
cmpsl
and
xor
fsubrp
test
mov
sti
xor
sbb
mov
push
mov
inc
mov
cmp
lea
adc
inc
cld
nop
out
loope
in
aaa
jno
jle
xor
pop
andl
iret
out
movsl
xchg
lahf
or
cli
lcall
js
dec
add
jmp
loope
inc
int3
mov
jo
mov
mov
push
sub
movsb
mov
jl
push
pop
pop
mov
add
mov
out
mov
aas
out
push
call
test
lock
rep
jb
cli
jl
repnz
int
icebp
pop
mov
xor
mov
push
jae
xor
mov
loopne
push
dec
and
inc
and
xor
and
adc
inc
outsb
mov
jb
inc
mov
fwait
and
fldenv
mov
fsubs
lea
or
push
clc
cmpl
sbb
and
lret
aad
fstps
cmp
cmp
int3
je
mov
inc
shr
inc
sbb
jp
mov
mov
divb
mov
sbb
popf
inc
popa
lcall
dec
stc
inc
sub
loop
icebp
outsl
mov
jnp
hlt
shll
jno,pt
xchg
or
in
dec
cmp
xor
dec
sbb
shl
push
adc
and
push
add
adc
adc
movsb
test
push
xchg
mov
adc
jb
sub
or
adc
sti
cmp
dec
iret
ja
or
jg
jecxz
inc
push
into
adc
push
jno
pop
cs
out
test
or
sub
sub
enter
stos
cmp
test
mov
jmp
dec
mov
in
push
fildl
fwait
icebp
popf
xor
xorb
sbb
addl
jge
mov
scas
cmp
leave
mov
xchg
in
movsl
jns
cld
and
sti
xor
inc
push
fisubrl
leave
out
loopne
push
pop
enter
aas
mov
aad
adc
lods
jl
call
jnp
pop
xchg
jge
test
repz
pop
gs
out
sbb
sti
enter
xorl
sbb
out
add
dec
mov
iret
jmp
push
push
cmp
xchg
std
fadd
lret
push
sub
insb
adc
push
ljmp
jne
adc
dec
out
mov
imulb
lcall
or
add
jo
fwait
push
jge
jbe
call
xor
lods
mov
mov
lds
lock
dec
in
ret
push
es
sub
sbb
adc
stc
aam
leave
icebp
inc
cmp
mov
nop
aaa
jge
movsb
sub
add
mov
jbe
xchg
sarl
cmp
roll
outsl
pop
out
and
jp
bound
stos
test
cmpsl
jge
lods
mov
out
ret
dec
notl
sahf
popf
mov
repz
je
sub
test
or
jmp
les
jmp
call
pop
dec
xchg
in
adcb
or
pusha
pop
xchg
fsubl
pop
ljmp
shlb
testb
shll
mov
dec
or
jle
cwtl
sbb
pop
stos
out
inc
rol
icebp
outsb
ss
push
mov
or
je
xchg
rclb
mov
movsl
jg
or
lret
sbb
ljmp
rcrb
push
pop
xor
xchg
lds
adc
push
add
or
testl
push
xor
and
pop
test
sub
rclb
enter
inc
cmpsl
push
or
aad
movsb
jmp
xchg
cwtl
aaa
xor
ja
pop
lcall
mov
lds
stos
sarl
jbe
movsl
cmp
aaa
jb
movsb
nop
pushf
sub
addr16
dec
mov
push
test
imull
into
nop
test
test
fdivs
test
pop
xor
jl
sbb
repz
mov
fmull
sbb
std
pusha
or
mov
shr
adcb
push
pop
call
xor
dec
hlt
lods
setno
out
fmull
pushf
mov
xchg
jg
scas
xor
clc
addb
and
testb
call
pop
cli
out
cmp
and
inc
adcb
mov
or
or
cmpl
lret
popa
mov
adc
je
pop
jge
rolb
mov
sbb
sub
ljmp
imul
scas
ret
movsb
jecxz
in
push
ficoms
aas
pop
enter
pop
pop
mov
pop
dec
and
int3
popf
in
add
pushl
adc
fdivrp
push
out
cltd
or
sub
into
aam
ja
sbb
cmp
out
lods
shr
jg
mov
dec
jno
sub
ficomps
dec
leave
xchg
mov
loopnew
imull
add
dec
jb
xchg
or
into
in
xchg
sahf
movsb
pop
loope
fistl
in
push
and
mov
int3
mov
jl
jmp
push
sti
gs
pop
das
call
add
jb
xchg
in
ret
ljmp
cld
loop
ljmp
inc
sub
xor
adc
fs
outsb
or
sub
and
rorl
imul
mov
cmp
mov
or
xchg
mov
test
push
out
xchg
cwtl
int3
scas
lods
popa
mov
hlt
mov
scas
je
inc
test
or
popa
sub
dec
fildl
bound
lea
dec
inc
or
fucomip
push
mov
pop
pop
xchg
ljmp
lcall
ja
mov
jle
leave
pop
jecxz
sub
insb
movsb
js
cmp
scas
sub
jle
test
out
xor
sbb
mov
fadds
xchg
or
pushf
out
insl
cmp
mov
add
mov
imul
lods
aad
xor
icebp
inc
imul
pop
adc
mov
out
push
sbb
sbb
leave
sub
fimull
xor
fildll
push
push
cmp
outsl
push
dec
and
cltd
push
xor
jl
sbb
insb
xchg
jge
xchg
pop
das
mov
lods
in
cmp
jne
push
imulb
mov
pop
mull
popl
enter
sbb
jge
mul
negl
jb
mov
dec
stos
loope
xorl
aam
sbb
ljmp
jns
addb
xchg
outsl
sub
mov
aad
popa
mov
ljmp
xor
pusha
rcl
add
mov
adc
and
dec
gs
icebp
jg
mov
testb
cwtl
inc
push
xor
sub
sarb
push
popf
inc
aam
das
daa
jl
cmp
movsb
xchg
rcr
sti
push
movsl
jg
push
add
xchg
call
hlt
jecxz
sub
xchg
cmpsl
mov
and
push
lds
xchg
sbb
out
das
sub
xor
pop
push
push
jb
sbb
ret
inc
adc
inc
mov
movsl
cmp
in
in
hlt
bswap
in
push
sbb
pop
push
lahf
xchg
cmp
lcall
xor
pop
leave
dec
lock
lods
jns
push
xor
jno
cmc
pop
xor
scas
dec
sbbl
repnz
dec
cmp
jecxz
pop
test
or
cmp
sub
push
outsb
jbe
push
sbb
xor
paddsw
jmp
pop
aaa
push
rclb
xor
arpl
test
push
outsb
insl
adc
jg
or
aad
test
fildll
push
jl
and
insl
dec
and
mov
std
push
xchg
mov
insb
dec
int3
lret
mov
or
je
push
pusha
mov
insl
sub
sbb
pop
dec
sub
inc
or
insl
jg
pop
inc
jns
and
fimuls
lcall
mov
mov
movsb
xor
pop
inc
and
icebp
add
push
rcrl
shll
arpl
adc
lea
mov
xor
adc
out
add
inc
rcll
aas
sbb
ljmp
popa
and
and
arpl
xchg
jp
imul
cmp
xchg
xchg
aaa
int3
aam
pop
mov
cmp
dec
add
add
xchg
xchg
dec
inc
push
insl
jns
mov
daa
je
sub
mov
xchg
jb
repnz
sbb
aaa
sub
dec
int
pop
insb
mov
daa
insb
lea
ss
std
fcmovnbe
push
jmp
dec
pop
fwait
test
adc
or
mov
shr
loop
popf
cli
push
mov
adc
sub
jmp
ds
fnstenv
mov
sbb
aam
in
test
int
sti
and
add
mov
loope
adc
inc
push
dec
and
adc
in
iret
js
xchg
clc
ffreep
sub
mov
push
sub
inc
lds
shrb
push
inc
mov
loopne
cmc
fwait
and
xchg
mov
jbe
cmp
daa
cmp
xchg
pop
jo
sbb
inc
loope
test
cltd
xchg
out
lods
je
loope
sub
loope
jmp
cmp
les
xor
pop
mov
ja
outsb
mov
ja
jne
out
dec
xchg
insb
xchg
repnz
in
mov
jne
sub
icebp
jae
lock
bound
fwait
int
sbb
xor
jne
mov
mov
xchg
daa
cmp
jno
push
sub
sub
jne
push
push
xor
pop
subl
scas
outsb
clc
pushf
jecxz
je
out
mov
xchg
lcall
je
out
push
fisttps
sbb
in
in
and
jbe
adc
ret
aaa
xor
in
pusha
mov
mov
pop
xchg
jne
mov
jbe
les
outsl
pcmpeqd
sub
mov
std
arpl
test
xor
addr16
jae
fmull
insb
and
dec
jne
sbb
call
jle
cwtl
push
std
inc
sbb
loopne
shll
xchg
push
push
shr
in
aam
adc
mov
in
divb
jecxz
loop
sub
dec
and
ret
add
roll
push
push
mov
and
push
bound
xchg
cmpsl
ds
out
xchg
adc
rcr
test
ja
adc
dec
sub
iret
fyl2xp1
cmpsl
sbb
push
je
sarb
xor
outsb
sub
xchg
inc
cli
das
push
les
push
sub
mov
pushf
pop
dec
jae
repnz
clc
push
hlt
add
ror
rcl
jmp
cli
outsl
push
jle
or
xor
int
add
or
jecxz
inc
call
and
loope
mov
fnstsw
push
rorb
add
cmp
sub
mov
mov
pop
cmp
cmp
iret
mulb
outsl
xor
mov
mov
rcrb
pop
ss
insb
addr16
inc
dec
mov
cmp
mov
dec
sbb
bound
sarl
xor
mov
cld
jne
xchg
or
mov
mov
pop
sti
pop
push
xor
std
mov
lea
les
jl
or
icebp
mov
test
packuswb
jp
fidivs
push
ja
leave
add
loopne
sub
sub
push
dec
lret
dec
jb
lcall
mov
jb
xchg
clc
mov
lods
xchg
inc
pop
fimull
mov
sbb
mov
jne
test
jo
jno
pop
lret
fldenv
sahf
and
push
sbbb
scas
std
lretw
loope
sub
repz
or
mov
scas
or
aad
inc
inc
xchg
scas
movsb
add
mov
dec
fadds
aad
pop
int
and
push
ret
sahf
lods
cmp
xchg
pop
sub
and
mov
pop
cmp
mov
testb
sbb
push
jecxz
xchg
jnp
pop
xor
pop
jecxz
cmpsb
fisttps
cltd
add
mov
rclb
add
les
pop
pop
mov
subl
lods
xchg
cmpsl
loop
jb
cs
fnstenv
push
lea
add
pop
out
in
or
out
push
in
pop
insl
cmp
mov
jo
daa
clc
pinsrw
dec
popa
mov
mov
dec
cld
cmp
xor
rolb
pushf
dec
add
scas
stc
jmp
lcall
std
outsb
sub
add
push
cmp
mov
icebp
dec
xchg
dec
ja
out
push
add
xchg
sub
or
lret
cltd
cmp
scas
movsb
xchg
jnp
gs
jnp
and
dec
xchg
repz
cmp
fst
stc
lcall
enter
std
lahf
mov
ret
jae
enter
gs
mov
lret
mov
pop
add
mov
fnstcw
int
push
mov
out
addb
or
dec
clc
sub
movsl
lret
push
add
jo
stos
int3
outsl
int
out
mov
sub
adc
jge
inc
repnz
mov
out
and
inc
ret
shll
nop
cmp
and
adc
daa
call
cld
cmpsb
pop
lock
int3
jne
gs
and
sbb
shrb
out
popf
aaa
mov
ror
das
das
push
sti
cmp
push
add
cmp
pop
pop
fucomp
mov
add
adc
int
popf
jo
scas
jg
mov
fldenv
and
adc
adc
add
sbb
push
outsl
aaa
leave
les
dec
fldt
jge
inc
adc
scas
pusha
std
and
xor
cmc
and
sub
sti
adc
out
insl
enter
mov
cs
hlt
nop
std
cmpsb
mov
xorl
pop
lea
or
mov
xchg
cwtl
in
mov
stc
lods
and
adc
and
mov
cli
mov
movsb
aaa
aad
jmp
cmp
mov
or
scas
je
fninit
xor
adc
shlb
dec
cmp
repnz
jg
jae
or
orl
sarl
push
cmp
das
push
add
mov
adc
push
sbb
insb
loop
push
repz
mov
out
jge
adc
cli
cmp
ss
jmp
or
mulb
ret
sbb
mov
xorb
sbbl
arpl
das
xchg
xchg
mov
stos
mov
test
and
scas
nop
jnp
xor
mov
ljmp
movsb
divl
enter
pop
out
xchg
fmuls
push
insb
test
mov
js
xchg
andb
jne
movsb
aas
outsb
iret
xchg
filds
imul
adc
mov
mov
ret
shl
lea
cmc
aaa
pop
cmp
xor
inc
push
shlb
dec
cld
add
nop
sub
add
imul
aaa
rcrl
cmp
scas
sub
test
jge
push
cltd
push
in
sub
scas
adc
mov
push
hlt
cltd
int3
fwait
sub
xor
lea
in
add
adc
test
lret
loop
adc
mov
pop
ret
into
push
push
lods
cmpsb
out
lea
fdivrs
mov
cmp
outsb
stc
adc
les
cmp
xchg
loop
inc
xchg
lods
jne
ret
mov
jb
mov
lahf
andb
pop
or
xchg
mov
sbb
pop
push
and
mov
out
loope
jl
cmp
jne
dec
test
xchg
inc
leave
test
cltd
xchg
mov
mov
mov
call
in
outsl
lea
xchg
lods
popf
lret
lahf
sbb
xlat
mov
jle
cmp
inc
jmp
jmp
shlb
xchg
pop
or
insb
leave
pusha
test
pop
aad
xchg
setae
inc
and
mov
dec
ret
sub
mov
sub
daa
push
xchg
push
pop
inc
pop
leave
fsubr
sti
ret
mov
pop
in
mov
repz
dec
or
int
aas
add
xor
rcl
adc
int3
or
test
mov
in
mov
rclb
jno
icebp
add
add
pop
repnz
push
ss
rcrb
leave
mov
push
ficoml
jo
push
add
mov
mov
clc
sub
insb
outsb
ret
xchg
pushf
adc
ds
jno
cmp
cmp
mov
inc
jg
xor
inc
push
or
cltd
jns
jmp
es
fbld
arpl
popa
popf
popa
pop
mov
mov
testl
mov
mov
jg
in
push
jle
pop
xchg
or
cltd
lcall
jbe
cs
mov
sub
ljmp
les
push
xor
ja
xchg
jecxz
xor
cmpsl
jle
lcall
inc
adc
bound
inc
sub
mov
call
sub
xchg
cmp
xchg
ds
lret
xor
sub
mov
outsl
pop
xchg
je
stos
xchg
lds
mov
push
fyl2x
xor
dec
push
js
lret
mov
out
or
or
mov
cmp
mov
aaa
in
sbb
fsubrs
inc
xchg
adc
dec
rcll
sbb
ret
fwait
pop
sub
test
sub
test
insl
adc
sub
fisttpl
mov
adc
and
jo
inc
and
push
jne
mov
push
jle
sub
push
lret
shrb
daa
int3
inc
push
xacquire
pop
mov
jp
mov
inc
lcall
dec
cwtl
loope
je
cmpsl
in
mov
rorl
rolb
leave
pop
jecxz
scas
jo
mov
xchg
imul
fbstp
jmp
push
pop
test
xchg
das
push
vmwrite
repnz
sub
jmp
notb
mov
fs
jo
aas
xchg
push
xor
inc
daa
call
cmp
inc
imul
das
mov
and
inc
fisttpl
icebp
push
cli
mov
lret
mov
or
mov
aas
fldenv
in
mov
inc
sahf
insb
lock
test
sub
dec
mov
mov
nop
inc
sbb
jnp
sbb
js
sbbl
mov
mov
repz
xor
mov
mov
push
ficompl
imulb
pop
ljmp
sub
das
fwait
insb
sti
or
jo
cmp
xchg
int3
stos
inc
imul
loope
pop
cwtl
rol
in
lret
xor
outsb
gs
insl
or
sbb
pusha
mov
cltd
int3
scas
adc
rolb
cmp
xchg
imul
sbb
aas
adc
scas
out
dec
insl
inc
rol
dec
and
insb
or
pop
jne
add
out
xchg
das
push
incb
mov
es
lock
mov
imul
dec
dec
pop
dec
dec
dec
or
int
cmpsl
inc
jb
jnp
daa
shrb
in
or
fildll
addr16
fbstp
add
mov
nop
fbstp
mov
dec
jmp
push
jnp
inc
adc
incl
mov
lret
fisubs
jns
idivl
mov
test
cmp
imul
negl
push
pop
scas
or
push
xchg
aam
sbb
insb
push
add
pusha
xchg
and
out
js
or
andl
sarb
mov
xor
mov
test
mov
jnp
sbb
enter
or
mov
je
dec
inc
je
inc
fisubl
cmpsb
pop
loopne
lock
lahf
xchg
adc
adc
push
cmp
mov
sar
mov
mov
pop
inc
aam
fwait
dec
add
and
fldt
jbe
mov
push
dec
cmp
push
add
pop
cli
cmpl
xchg
xor
inc
jge
addr16
cs
js
push
adc
push
dec
mov
cmp
movsb
mov
mov
xchg
sub
call
xchg
arpl
fwait
lds
jbe
roll
xchg
outsb
test
jle
insl
popf
ljmp
pop
aaa
fstpl
ret
outsb
add
sub
and
mov
cwtl
pop
jle
push
ret
sti
outsb
and
mov
pop
cmp
mov
push
lods
xorl
push
dec
or
mov
cmc
dec
pop
fcmovb
or
sbb
push
fwait
mov
push
movsl
jle
ret
outsl
idivl
dec
xor
pop
icebp
inc
iret
xor
out
lds
andb
fnstsw
dec
mov
sub
into
ss
sub
push
mov
cmp
je
xor
cmp
daa
daa
push
and
jmp
or
dec
dec
mov
xor
mov
lods
popa
sub
cmc
mov
xchg
cltd
orl
scas
mov
repz
clc
adc
dec
stc
aad
jle
cmp
nop
pop
test
add
iret
pop
and
sub
or
xor
xchg
add
lea
jne
jae
mov
out
lcall
leave
dec
in
pop
dec
cs
or
in
fstl
aam
sbb
out
cmpsl
pop
mov
int3
push
stos
and
fldcw
mov
adc
adc
sbb
cmpsl
lods
jg
pop
enter
cmp
adc
test
add
inc
loope
cmp
test
shll
mov
add
ja
or
fbstp
xchg
popa
adc
fisttpll
jmp
xchg
xchg
sub
mov
push
sub
out
push
mov
fnstsw
je
lahf
dec
mov
ljmp
mov
lret
je
lods
mov
addr16
addb
adc
xchg
aas
negl
mov
sbbb
int3
lods
xchg
pop
or
lret
lods
lea
xor
jbe
loop
xchg
inc
add
int3
fs
pop
lods
in
xor
lcall
dec
and
sarb
mov
push
xlat
and
sbbl
scas
jecxz
pop
mov
xorb
jne
jle
add
movsl
ljmp
arpl
pop
movsl
xchg
mov
outsl
lea
test
pop
lods
orl
mov
loop
or
inc
mov
jl
pop
clc
fiadds
xchg
mov
xor
push
push
movsb
sub
dec
push
fdivr
cmp
cmpl
pop
cmpsb
and
xchg
outsb
or
sub
test
popf
mov
stos
aaa
sbb
test
inc
adc
cld
subb
xor
addr16
mov
jns
outsb
outsl
add
daa
dec
lea
sbb
es
fidivrs
cmp
dec
jnp
push
cld
call
adc
sub
hlt
jns
add
lods
jle
xlat
lret
repnz
xchg
mov
sbb
dec
sbb
jecxz
inc
xchg
or
mov
in
sbb
mov
lock
into
ja
movsl
stos
add
or
or
adc
mov
out
cmp
aam
scas
ljmp
or
adcb
xor
test
push
and
loope
jbe
mov
jp
fcompl
je
leave
mov
int3
scas
sub
xor
push
inc
xchg
xor
scas
cld
sahf
push
cmp
sbb
mov
jmp
mov
aaa
mov
mov
les
mov
shrl
mov
or
xor
daa
dec
xchg
cli
pop
rolb
out
mov
mov
push
sbb
bnd
and
shl
mov
mov
mov
gs
mov
xchg
mov
pusha
jp
dec
push
and
aaa
xchg
jl
popa
or
hlt
add
shlb
or
in
add
lds
mov
gs
incb
int
icebp
popa
jae
sahf
vpcmpgtw
arpl
mov
sti
inc
cld
sbb
cmpsl
pop
pushf
aas
rolb
ljmp
pop
mov
dec
adc
sbb
lret
addr16
jb
sub
pop
mov
imul
xchg
stc
insb
sti
mov
or
arpl
dec
inc
test
cmpl
xor
imul
negb
fldt
cmpsb
cmp
or
outsb
pop
xchg
add
mov
xchg
jno
dec
sbb
cmp
inc
js
mov
ds
add
outsb
or
lods
iret
nop
je
jmp
xor
ret
push
push
sub
iret
mov
stc
push
aam
push
lds
seta
test
loope
inc
aad
ss
jg
dec
icebp
ficoms
inc
mov
add
ja
mov
xchg
test
hlt
out
stos
sub
js
and
in
mov
clc
cltd
mov
mov
fsubs
out
leave
mov
xlat
inc
mov
cmp
jns
aas
enter
xor
sti
cld
xor
dec
rcr
stc
and
enter
cs
pop
mov
add
and
sub
push
sar
ss
mov
xchg
pop
ja
call
cmpl
cld
mov
dec
in
fnstsw
mov
jb
adc
pop
sbb
xchg
pop
into
or
jmp
sbb
jae
jne
or
pop
mov
cmp
fstpt
pop
mov
imul
aaa
xlat
push
popf
pop
cli
ds
sub
fs
dec
push
and
adc
sub
iret
push
data16
sub
fldt
imul
sbb
pop
xor
out
js
jns
sbb
fucomp
in
push
test
pop
popf
test
cmc
lret
jno
je
and
push
push
jbe
enter
mov
mov
xchg
cwtl
shrl
lock
rcll
sub
je
xor
movsb
aam
sete
push
mov
loope
xor
push
and
daa
mov
push
mov
sbb
inc
sub
mov
lret
jae
stos
xchg
test
add
adc
mov
int3
int3
cmp
jae
jl
push
lahf
and
mov
loopne
fwait
pop
fildl
xor
dec
inc
rcrl
call
in
sbb
xchg
into
rcll
sbb
jp
cmp
mov
imul
xchg
rolw
cld
jae
js
or
shr
xor
cld
cli
negl
popf
out
nop
jbe
enter
das
leave
mov
cmpsl
cmc
or
clc
pop
jb
xchg
mov
pusha
mov
test
daa
popa
cmpsl
jne
xchg
repz
stos
add
stos
inc
fbstp
and
aaa
test
pop
in
sahf
insl
int
fwait
sbb
mov
mov
int
push
pop
ret
scas
imul
mov
xor
xchg
sbb
ret
inc
mov
das
pop
pop
xchg
adc
jo
fs
xlat
xchg
xor
xchg
and
fistpl
pusha
jae
push
pusha
inc
sub
fmul
rcrl
jo
imul
jb
push
sub
mov
in
cwtl
or
jns
sbb
and
imul
adc
dec
scas
mov
fadd
jnp
daa
and
jbe
and
push
lret
movsb
mov
mov
xor
movsb
inc
cs
insl
or
sub
jnp
es
xor
add
pop
dec
pop
xchg
dec
and
pushf
mov
test
sbb
cld
pop
adc
fs
imul
adc
xchg
xchg
iret
xor
bound
pop
mov
sub
adc
in
xor
pop
inc
call
or
lcall
adc
xor
mov
pusha
test
scas
dec
stos
stc
cmpl
inc
xchg
movsl
mov
add
mov
mov
mov
push
stos
or
inc
and
lock
or
push
sub
mov
push
les
out
popf
xchg
stc
pop
mov
cmp
loope
testb
insb
mov
jns
dec
out
cmc
fstps
fldt
stos
cld
adc
add
stc
pavgb
repz
leave
add
fsubrp
std
pushf
in
mov
in
fisubrs
mov
bound
out
push
pushf
pop
cs
cmpsb
jle
add
rsqrtps
jg
fstpl
dec
cli
dec
cmpb
xor
mov
test
out
or
dec
test
mov
pop
stos
push
mov
in
in
pop
sub
ret
daa
jae,pt
mov
sbb
icebp
in
dec
rol
dec
and
cmp
and
mov
mov
clc
inc
cld
shl
repnz
jo
xchg
rorl
lds
imul
jg
popa
xchg
jmp
sbb
daa
dec
push
inc
lods
push
les
clc
adc
add
call
rep
cmp
mov
inc
cmp
mov
add
jb
cmpsb
popa
sub
cwtl
inc
mov
mov
jnp
pop
cltd
mul
insb
pop
and
cs
push
xchg
xchg
loope
fidivs
sbb
popf
lea
out
mov
lds
pop
pushl
jns
fcomps
fldenv
in
or
cmp
inc
sub
push
aaa
mov
xlat
lcall
mov
sub
test
push
sub
dec
or
dec
arpl
inc
mov
outsl
xor
ret
std
xor
sahf
fidivrs
pop
pop
cmp
ds
iret
push
pop
notb
xor
icebp
xor
pop
and
dec
inc
inc
or
stc
cltd
daa
jns
decb
cmp
cmp
mov
pop
push
mov
add
lods
jecxz
lret
fs
ret
adc
or
nop
dec
or
lahf
add
loopne
ret
loopne
jle
push
add
lds
adc
pop
add
leave
xor
jl
push
push
imul
mov
or
cwtl
ficoms
rorl
xchg
mov
sar
mov
jae
xor
je
in
mov
loope
and
hlt
pop
mov
in
nop
mov
rorl
pushf
push
or
pop
hlt
or
inc
fwait
pop
push
push
or
xchg
imul
jl
and
mov
push
lret
movsl
fidivrl
mov
enter
loop,pn
xchg
mov
xor
sbb
push
xchg
rorb
cmpsb
mov
jns
jecxz
mov
ret
test
push
daa
dec
mov
mov
inc
cmpsl
lea
jmp
adc
in
hlt
icebp
in
pop
fbstp
lock
stc
repnz
xor
pushf
das
mov
mov
imul
in
scas
mov
pushf
cmp
cmc
sub
push
fs
push
push
inc
inc
inc
fdivrl
mov
pop
xchg
test
mov
sub
jnp
insb
ds
pop
lock
push
xchg
out
sbbl
xchg
inc
fisttpll
scas
push
cwtl
mov
test
cltd
lods
dec
xor
aad
addb
hlt
jbe
adc
enter
and
pop
hlt
mov
pop
dec
sahf
out
divb
jle
sub
sub
test
xchg
sbb
stos
and
dec
mov
xor
or
cmp
jecxz
sti
or
sti
push
loope
cmc
sub
mov
lret
fldcw
out
fstl
adc
mov
fsubs
dec
cmpsl
int3
mov
xorb
inc
adcl
mov
sub
repz
push
dec
inc
out
or
xchg
cmp
xchg
popa
imul
and
divb
xor
push
xor
test
jp
jo
stos
aam
out
pop
scas
testb
xchg
jecxz
aaa
sahf
jae
sbb
testb
xlat
dec
fsts
sbb
sahf
jno
les
mov
push
arpl
or
dec
xchg
movsl
dec
xchg
cltd
sub
mov
and
es
and
push
xchg
sub
mov
hlt
mov
lahf
xor
negl
inc
call
lock
adc
stc
xchg
jno
cmpsb
cmp
xor
xor
push
sub
mov
popf
repnz
mov
jg
push
push
in
pop
andb
xchg
into
lds
pop
les
mov
jp
xor
adc
push
ja
mov
std
ficoml
xchg
pop
in
punpckhbw
dec
adc
dec
and
jle
mov
add
in
push
dec
jo
lea
jg
fldt
in
pop
pop
je
mov
movsl
aaa
mov
aad
and
mov
sub
out
or
jmp
cmp
cmc
ss
aas
inc
subb
xor
dec
test
cmc
xor
jo
xor
jmp
ret
adc
mov
xor
les
lret
lret
cmp
std
inc
nop
stos
push
movsl
movsb
pop
adc
jno
push
mov
aas
xchg
int3
inc
outsb
insl
dec
push
icebp
add
loop
cmpsl
dec
ficompl
outsl
push
or
or
cltd
daa
xchg
add
ficomps
outsb
add
and
aas
add
gs
clc
mov
adc
out
mov
jnp
flds
pusha
aam
pop
xchg
and
shlb
out
sarb
in
sti
imul
fdivrs
mov
sti
xchg
repnz
lds
out
fs
rcr
pusha
xlat
fsub
push
xor
int3
push
outsl
cmp
xchg
cltd
hlt
mov
adc
lret
clc
adc
sbb
pop
push
nop
scas
das
pop
repz
fdivs
pop
add
int3
and
and
push
add
das
inc
out
test
rorb
and
fsub
mov
ret
adc
jbe
data16
and
cmc
mov
mov
arpl
sbb
jmp
add
jns
scas
loopne
sub
mov
sbb
xchg
xor
xor
dec
in
adc
addr16
sbb
xchg
mov
popa
add
jno
sti
fisubrs
jns
loope
stc
push
in
sub
push
sub
mov
jle
sbb
adc
outsl
sahf
xorb
jne
xor
les
inc
insb
xor
cld
cltd
shlb
dec
fs
push
mov
or
sub
aas
xchg
fnsetpm(287
and
iret
cmp
jge,pn
iret
fisttps
xchg
mov
or
into
or
cmpl
lods
lock
aas
push
test
std
scas
or
adc
arpl
rcrl
pop
sbb
mov
popf
sub
and
in
subb
gs
or
aam
jbe
faddl
stc
insl
fwait
int
adc
sbb
out
negb
add
daa
cmp
outsl
dec
mov
lahf
cmp
test
pop
scas
mov
sbb
jmp
dec
arpl
xchg
xchg
sbb
push
add
ret
faddl
call
popa
jecxz
xchg
lret
lods
push
fists
sahf
cmp
jmp
inc
jne
sub
dec
test
insb
mov
cmc
inc
pusha
repnz
jl
adc
adc
pusha
mov
inc
inc
dec
sub
ret
jns
ljmp
call
leave
int
xchg
jg
and
push
dec
enter
and
lret
shlb
dec
popf
push
add
xlat
mov
sbb
push
jmp
mov
add
push
lret
xchg
aam
push
xchg
cs
movsb
sbb
jle
lea
icebp
xlat
and
add
inc
loopne
test
xchg
shll
ret
jl
push
mov
cltd
jbe
push
lea
or
lods
insl
cmpsl
mov
push
dec
scas
mov
imull
stc
xchg
mov
mov
stc
sub
push
jo
enter
xor
je
jbe
out
std
inc
or
sub
push
cmpsb
and
stc
xor
jecxz
iret
fabs
add
mov
mov
or
jne
sti
in
ss
das
lret
in
stos
pop
jnp
mov
stos
push
int
push
inc
add
out
mov
into
repz
inc
icebp
mov
cwtl
dec
popf
inc
xchg
pop
insl
inc
sbb
add
in
mov
scas
clc
mov
jae
dec
test
lcall
js
rcrb
sbb
test
and
ret
push
fs
inc
push
xchg
cmp
inc
call
mov
in
mov
ror
and
xchg
rcrl
add
pushf
loope
fistps
mov
outsb
loopew
clc
ds
std
pop
jae
and
sub
sub
lret
flds
push
push
sbb
inc
out
lahf
or
cwtl
mov
movsl
sahf
push
jne
fisttps
xchg
jmp
jb
out
cltd
lds
out
mov
loop
int3
daa
imul
sub
stos
icebp
lret
fwait
ds
xor
adc
fs
ret
mov
dec
jg
mov
outsb
sarl
dec
rorl
jmp
pop
repz
push
mov
push
or
and
jmp
cmp
pop
pop
and
cld
xchg
sub
divb
fs
jecxz
enter
loop
das
aam
and
pop
mov
jecxz
jg
gs
mov
or
xchg
pop
xchg
sub
gs
lea
xor
pop
sub
mov
dec
in
add
jecxz
leave
ret
cmp
pop
push
jmp
dec
adc
mov
push
sub
iret
dec
adc
pushl
fnstcw
insl
mov
mov
and
ja
shrl
leave
xlat
push
dec
mov
and
scas
in
xor
je
stos
cmpsb
jb
movsl
jecxz
cwtl
sub
inc
mov
jg
sbb
lock
adcl
loopne
mov
add
dec
xlat
lret
push
out
lock
in
inc
daa
xchg
pop
jge
out
mov
inc
es
hlt
imul
inc
lods
cmpsl
loop
subl
call
push
adc
xor
test
pop
fstl
shrb
xchg
pop
imul
test
cwtl
das
pop
popf
imul
cs
jecxz
sbb
cmp
imul
push
jmp
sub
mov
fs
dec
or
jl
or
ljmp
sbb
mov
jp
push
xor
inc
out
movsb
mov
rclb
insl
xchg
mov
sbb
mov
test
jb
and
cltd
dec
sub
sarb
cmpsb
loope
mov
inc
scas
jb
jae
aad
mov
mov
cmc
hlt
shlb
jecxz
aaa
inc
iret
add
cli
xchg
dec
jmp
enter
loopne
fadds
dec
sar
stc
mov
lods
pop
lret
sub
shl
adc
pop
insl
inc
lret
xchg
mov
out
inc
or
outsl
or
popf
sbb
jb
lds
sbb
inc
dec
and
repnz
or
sbb
push
add
jl
pop
jge
movsl
das
or
outsl
xchg
push
xlat
xor
stc
lret
mov
mov
sbb
loop
hlt
ja
dec
scas
fisubl
jb
dec
lock
idiv
push
jecxz
cmp
out
xchg
or
push
cmp
xchg
push
imul
pop
ja
fdivl
xchg
aad
rcl
jl,pt
pop
lret
int3
inc
mov
imul
sbb
or
fstl
jmp
sahf
inc
in
into
loope
into
and
fldt
gs
cltd
test
ja
sbb
mov
hlt
mov
leave
mov
mov
fidivs
dec
negl
cmp
sti
mov
mov
stos
sbb
xchg
insl
or
loopne
add
out
sbb
outsl
cmp
loope
lods
fisttpll
mov
cs
loop
xor
inc
cltd
out
jns
mov
xor
inc
int3
add
add
cli
push
jge
xor
mov
mov
out
or
push
xchg
shll
jmp
mov
insb
stos
sub
mov
push
and
xor
adc
lret
xchg
add
jae
xchg
xchg
sahf
stc
push
cmp
inc
mov
nop
push
aaa
incb
pop
enter
mov
cmp
pop
push
call
cmp
mov
inc
xor
jg
push
pusha
adc
and
pusha
xlat
or
cmp
ljmp
pop
scas
mov
aaa
fs
mov
stos
sub
or
xchg
in
andl
and
xchg
iret
sti
jno
aad
icebp
ret
stos
sub
pop
ret
push
dec
dec
addr16
inc
cs
fisubrl
ret
cli
push
xchg
fstps
mov
mov
jb
dec
data16
cmc
fs
ret
lret
mov
and
aad
or
mov
xchg
adc
cli
fadd
sbb
xor
or
inc
mov
mov
jb
push
mov
nop
js
cld
aam
push
inc
jmp
in
cmp
mov
inc
xorl
sub
cmp
scas
mov
push
jae
mov
mov
jae
and
pop
js
fsubl
sbb
push
xor
inc
or
sar
sbb
xchg
pop
cmp
jbe
push
fmull
dec
mov
icebp
mov
pusha
or
sub
mov
in
lret
lods
fdivrs
sahf
cwtl
fbstp
out
outsl
xchg
dec
push
jmp
outsb
sbb
jl
int
mov
add
xor
xchg
sarl
or
sbb
jne
cmp
inc
cmp
jl
cmp
out
test
jbe
shll
sarb
xchg
js
jbe
out
push
mov
push
xorl
mov
das
adcl
subl
andb
mov
cwtl
je
das
cmp
dec
sbb
xchg
ret
or
ret
std
imulb
cmpsb
in
push
or
es
mov
fs
jb
int
ret
mov
popa
popa
dec
aam
or
out
stc
popa
add
addr16
pop
js
and
dec
jle
fisttpll
or
mov
or
jge
fisubrl
js
lret
lds
in
pop
shl
movsb
loopew
mov
xchg
negl
outsl
ss
inc
mov
push
push
add
mov
mov
aad
pop
cmpb
outsb
adc
into
dec
mov
xchg
jno
inc
or
insb
flds
loop
dec
test
jecxz
sub
dec
fdivp
adc
cmp
mov
cld
push
fistl
add
sub
loope
sub
dec
not
aas
cmp
xor
dec
and
xchg
cs
inc
mov
clc
js
int3
lea
mov
fldenv
cmpsl
aam
movsl
sbb
icebp
jae
mov
popl
and
stos
xor
imul
adc
lret
adc
mov
or
mov
xchg
adc
enter
stos
xor
xlat
les
dec
mov
rcrl
or
add
ds
aaa
jecxz
mov
pusha
push
cmpsb
mov
lods
enter
mov
outsl
pop
mov
dec
inc
mov
outsb
int
jne
cmp
in
pop
sub
jl
sub
push
inc
sbb
xchg
inc
pop
lds
scas
push
loop
lahf
imull
pop
ds
out
fldt
icebp
fwait
and
mov
jg
xchg
ret
lret
movsl
dec
dec
mov
jo
adc
out
xor
xchg
andb
loope
cmp
mov
sar
scas
jae
loope
gs
arpl
icebp
adc
rcr
sub
pusha
fimull
dec
mov
lds
in
mov
push
add
ja
pop
jl
loopne
adc
mov
daa
orl
adc
ljmp
dec
int
mov
outsl
mov
mov
push
pop
insb
inc
je
pop
mov
out
js
clc
add
adc
in
insl
adc
pop
insb
insl
dec
mov
jp
pushf
aaa
mov
push
fwait
outsl
rcrl
and
repz
aad
xor
dec
sub
cmp
jmp
inc
mov
fists
inc
cmc
xchg
lret
hlt
dec
push
mov
fldcw
dec
je
je
es
jle
aad
scas
cwtl
fistpll
xor
and
ja
pushl
mov
stc
sub
pop
cmpsl
hlt
sub
les
loop
popf
cmp
push
gs
outsb
sub
scas
mulb
mov
cmp
xlat
pop
cmc
cwtl
cmp
dec
test
sub
pop
adc
and
or
and
lcall
sub
fdivrl
cwtl
test
ja
jbe
inc
mov
lahf
pop
insb
bound
ss
xor
adc
lcall
push
in
push
shlb
test
xlat
push
ficoms
sbb
add
push
fidivrl
xor
push
mov
jmpw
negl
adc
push
mov
pop
mov
loope
fs
push
mov
scas
pushf
movsb
enter
xlat
pop
xchg
inc
push
loopne
push
lret
test
rcrl
int3
xchg
test
sbb
call
mov
cmpsb
lea
mov
call
xchg
inc
out
xor
lahf
and
pushf
push
xor
xor
xchg
subb
or
ret
iret
or
test
mov
das
cltd
dec
jno
cmp
adc
es
mov
hlt
dec
and
jecxz
test
and
mov
fwait
in
pop
mov
mov
xchg
push
cmp
mov
out
loop
push
add
cmpsb
pop
xchg
shll
int3
nop
aad
add
cmpsl
jmp
pushl
push
add
pop
xchg
add
in
out
stos
fs
arpl
mov
das
sahf
int
mov
fbstp
mov
mov
das
and
sbb
mov
mov
scas
outsb
testb
sbb
jns
or
xor
fstl
sbb
push
aas
out
enter
imul
and
jmp
dec
xchg
sub
rorl
test
shrb
js
aam
fsubrs
out
add
add
mov
sub
js
jb
inc
jne
adc
imul
movsb
das
in
addr16
add
sbb
mov
or
inc
mov
inc
inc
adc
test
mov
rorb
enter
dec
inc
aaa
std
scas
out
xchg
jl
jmp
cmpsb
inc
push
icebp
adc
xorb
daa
xor
outsb
hlt
cld
add
cmp
and
or
pop
or
neg
xchg
pop
push
adc
cmc
ds
mov
gs
stos
out
add
mov
stos
xchg
aaa
jle
dec
out
out
outsl
aas
mov
stc
or
icebp
mov
orb
faddl
mov
cs
xchg
cmp
xchg
mov
sbb
mov
pop
xor
mov
and
enter
sbb
cltd
test
in
sub
ret
nop
test
out
dec
dec
lahf
mov
mov
in
or
mov
hlt
out
mov
arpl
lods
cmpsl
out
pop
stos
mov
or
mov
je
movsb
inc
sub
and
xor
xchg
push
lcall
jp
inc
ret
cmp
out
sbb
mov
dec
mov
pop
mov
cmc
sub
aaa
cmp
add
xchg
add
push
sub
xorl
stc
jnp
xor
push
xor
aad
jnp
clc
faddl
lea
notb
add
movsb
cmp
mov
jbe
sbb
cmp
sarb
ds
subb
push
jl
add
cwtl
mov
mov
and
int3
mov
xor
outsb
dec
push
sub
mov
addl
jns
jecxz
in
out
enter
adc
mov
xor
cld
xchg
mov
push
and
movzwl
dec
dec
push
stos
jge
pop
mov
pop
or
xchg
xor
add
stos
and
dec
xchg
sub
mov
mov
cmp
imul
je
sub
ror
les
int
fstps
repnz
push
push
jge
and
out
rcl
sub
sti
adc
mov
cwtl
mov
jecxz
inc
dec
addl
pop
aad
mov
rcrl
sbb
popf
and
sub
and
add
pop
push
jg
jl
add
mov
in
xor
dec
jb
mov
pop
aam
cmp
jno
test
lcall
fwait
icebp
fwait
mov
daa
lods
fidivl
and
fisubl
test
aaa
sahf
sub
fisttpll
sub
xchg
inc
pop
xor
or
mov
lcall
sbbl
addr16
jo
xchg
xor
out
outsb
cmp
jp,pn
imul
pop
rcll
cmp
cmp
outsl
jge
cmp
xchg
outsb
adcl
mov
popf
rclb
in
rcrl
pop
loope
in
push
mov
pop
ljmp
sub
loopne
cmp
adc
sub
sub
push
je
int
in
loope
sub
mov
dec
cs
mov
mov
ret
out
mov
adc
ds
aam
and
ljmp
push
movsb
sbb
notl
int3
push
xor
or
dec
mov
cmp
sahf
iret
push
cld
sarl
ss
cmpl
cmpsl
pushf
pop
sub
out
jno
mov
into
mov
ljmp
add
sbb
lods
cwtl
lea
sbb
inc
bnd
loope
fiadds
leave
adc
push
lahf
in
xchg
scas
add
shrb
inc
shll
cmpsb
lcall
xor
scas
cmp
sub
out
cltd
cmpsl
fwait
out
sub
sub
sbb
incl
push
dec
xchg
cmp
pop
xor
cltd
mov
outsb
inc
xchg
or
loop
sahf
or
jae
and
pop
sahf
cld
jne
or
test
rclb
or
pop
daa
mov
stos
pop
mov
xchg
into
pop
iret
aaa
cmp
test
std
test
inc
mov
in
push
jbe
xchg
shrl
scas
xchg
inc
leave
sbb
in
inc
dec
sbb
repz
je
test
ss
jp
aam
scas
sub
pop
dec
testb
add
negb
pushf
dec
dec
push
shrb
add
rclb
sub
neg
ljmp
mov
push
add
cmp
bt
lds
int
mov
xor
daa
jne
jmp
xchg
repz
ret
mov
xor
push
mov
inc
daa
cmp
test
cmp
ret
or
test
pop
jmp
or
outsl
jmp
jg
push
lret
jb
clc
jl
xchg
cmp
cmpsl
pop
add
mov
or
cmp
femms
shlb
imul
mov
insl
jge
xchg
or
push
imul
jecxz
in
cltd
and
enter
pop
xchg
push
cli
subl
dec
test
fimull
dec
push
push
fisubrl
xor
popf
add
insl
aad
jp
cmp
dec
test
and
pop
in
xor
outsl
mov
mov
aaa
dec
jp
inc
and
jle
adc
cwtl
lret
pop
lcall
adc
push
lret
insb
inc
mov
leave
insb
cmp
clc
stc
ljmp
fcomi
dec
mov
imul
in
and
das
xchg
inc
ja
mov
jmp
push
adc
jecxz
sbb
cmp
or
sub
lret
shrb
stos
sahf
jne
lods
push
and
rol
aad
setne
sar
mov
dec
and
shll
addb
insb
bound
push
pop
jg
repz
mov
xorb
inc
inc
inc
xchg
sub
jo
fldt
mov
rolb
pushf
xchg
dec
xor
insb
xor
rcrl
pushf
pop
add
dec
mov
xorl
sti
inc
dec
out
mov
sub
aaa
orl
nop
inc
mov
mov
xchg
pop
mov
rol
add
in
cld
test
cmpsl
push
pavgw
add
pop
inc
mov
mov
pop
iret
shlb
xor
scas
jo
mov
push
pop
lret
jmp
cmpsl
mov
add
dec
mov
data16
nop
shr
int
inc
nop
sbb
sti
mov
jne
jle
ficoml
cltd
stc
dec
mov
mov
push
cltd
mov
mov
push
add
lret
inc
cmpsb
lret
inc
inc
rcrb
in
popa
lods
push
adc
and
push
xor
jmp
bswap
sub
fisubrl
mov
mov
daa
imul
mov
cld
les
insb
sahf
arpl
mov
jne
inc
cltd
pop
or
in
lahf
and
jae
testl
in
add
and
mov
popf
xor
pop
xchg
testl
ret
hlt
sub
movsl
sbbl
popa
mov
xorb
clc
jp
lret
aad
lea
icebp
mov
stos
je
aad
dec
or
ds
int3
cmp
sub
xchg
mov
enter
sbb
test
xchg
sbb
xchg
nop
sbb
inc
mov
sub
scas
in
stc
mov
pop
dec
sbb
inc
je
std
mov
mov
mov
insl
xor
movsb
outsl
dec
xchg
add
cmp
aas
lret
jb
xchg
add
dec
das
add
push
in
ss
aas
mov
pop
sub
cli
pop
cli
mov
ja
dec
jnp
mov
jle
in
inc
test
ds
mov
mov
mov
adc
addr16
ret
or
sbb
jnp
imul
xor
inc
aad
dec
jo
out
mov
dec
iret
xor
rorb
ds
pop
xchg
sub
lret
daa
sbb
in
inc
shlb
dec
clc
dec
icebp
stos
inc
add
sub
std
fmull
sbb
mov
insb
push
sub
jecxz
mov
lods
fsincos
test
add
add
push
or
aas
repnz
jle
xor
mov
aam
pushf
mov
pop
movhps
stos
lret
int
and
movsb
jno
ret
xchg
mov
insl
test
jnp
adc
push
mov
daa
push
es
push
xchg
inc
pop
scas
cmp
hlt
mov
cmp
push
cmp
rcrl
hlt
into
fwait
rcll
addr16
fwait
mov
popa
movsl
ret
shrl
cltd
lock
pop
data16
lods
push
sbb
call
adc
pop
xchg
rorb
jl
cli
mov
add
mov
dec
lahf
jnp
popa
and
mov
push
adc
ljmp
test
jnp
sbb
andl
cmp
cld
fadds
dec
in
rcll
add
mov
cltd
sub
add
dec
jb
xchg
pop
int3
jp
mov
outsb
rcl
cli
jle
jl
and
sbb
mov
repnz
xor
es
lock
pusha
dec
ret
fwait
push
in
imul
dec
pop
rcrl
shl
dec
mov
std
pop
xchg
hlt
lea
push
push
out
xchg
xor
cmp
push
cmp
lea
inc
sbb
ret
push
jl
out
icebp
aam
mov
addr16
mov
sub
into
std
mov
push
mov
movsl
xchg
or
xlat
imul
push
rorb
jo
push
int
pop
push
inc
mov
lods
clc
inc
ljmp
mov
xor
inc
and
or
sbb
xchg
mov
cld
jge
adc
jb
mov
mov
and
mov
xchg
pop
xor
mov
pushf
lods
clc
in
cmp
or
es
sub
jecxz
lock
cmp
fists
push
js
and
jp
js
je
dec
pushf
fldl2e
push
cmp
adcl
fwait
out
pop
mov
jne
lcall
ja
stos
xchg
pop
mov
imul
rorb
in
add
out
sbb
push
or
xchg
ss
data16
fldt
ja
add
add
loop
in
aas
inc
es
lods
call
test
ss
outsb
push
adc
mov
std
mov
ljmp
or
jmp
fs
das
out
jne
enter
adc
into
rep
shrl
xchg
mov
sub
inc
vpcmpeqb
adc
xchg
fstl
sub
xor
std
pop
bound
lds
cwtl
inc
sti
mulb
call
jae
cmpsb
xor
dec
and
mov
aad
pushl
int3
inc
adc
call
out
or
push
enter
xchg
leave
in
test
and
cmc
push
enter
mov
mov
imul
xchg
lcall
fldcw
lret
cmp
stos
cmpsl
cmp
pop
gs
dec
out
in
std
in
rorb
outsl
lahf
in
push
dec
sub
iret
xchg
cltd
jge
mov
cmp
sub
pop
adc
movsl
nop
out
orl
inc
insb
and
jno
pop
xchg
je
pop
sbbl
out
lcall
aad
rcll
xchg
push
xchg
push
loope
sbb
insl
inc
mov
add
mov
cltd
xchg
or
cmc
jmp
lock
rorb
cmpb
data16
jns
mov
and
inc
out
push
xor
mov
jg
int3
mov
or
je
push
or
bound
repnz
cmp
outsb
and
cwtl
sti
jae
push
inc
lcall
stos
jmp
push
pop
test
pop
sub
cmp
xor
sti
dec
filds
test
imul
inc
adc
or
adc
jb
sbb
inc
add
push
pop
adc
mov
xor
jns
scas
sbb
data16
aam
xor
jnp
push
lret
xchg
xchg
sub
pop
cmp
test
aas
xor
and
iret
jno
dec
ljmp
pop
jne
xchg
mov
push
cli
sub
sub
aas
test
add
loope
pop
xchg
add
repz
cmc
sub
xor
out
sub
mov
sub
push
mov
or
lods
sahf
test
jbe
sbb
fadd
dec
dec
mov
das
xor
add
dec
xor
out
cmp
shlb
int
arpl
scas
icebp
fnstenv
add
subl
sbbb
mov
add
jp
lea
inc
movsl
inc
push
xor
lahf
ds
jbe
xor
mov
mov
lds
aaa
xor
fcmove
pop
imul
push
push
nop
cmp
pop
mov
pop
push
mov
lock
repnz
jecxz
and
and
dec
insl
mov
or
ja
xchg
rolb
xor
shlb
mov
cwtl
call
sub
mov
scas
mov
loope
lds
outsb
clc
mov
lock
in
or
ljmp
xchg
push
or
fs
popf
xchg
hlt
or
and
negl
cmp
fsub
mov
or
pushf
lret
sub
lret
icebp
insb
pop
cmp
xor
inc
testl
mov
aad
dec
mov
sarl
add
sub
rolb
imul
bound
or
mov
ret
rcl
or
not
dec
aad
bound
aaa
fsubs
push
decb
dec
paddsb
jl
xchg
push
cmp
inc
sub
stos
adc
aad
popf
popa
push
push
xor
and
sub
push
pushf
outsl
mov
mov
xor
pop
dec
mov
stc
xor
dec
mov
sub
jnp
out
popf
mov
push
or
enter
jmp
in
mov
in
inc
outsb
or
push
test
add
xor
xchg
mov
leave
stos
das
sbb
or
jo
adc
insl
fnstenv
or
jo
imul
push
dec
int
loop
cwtl
hlt
inc
mov
mov
xor
mov
inc
adc
enter
jns
mov
jp
les
xchg
in
sbb
jno,pn
test
dec
bound
das
flds
push
mov
rol
insb
popf
cmp
cltd
movsb
pop
stos
bound
fisubrs
inc
cs
inc
idiv
aaa
jbe
jbe
ss
cmp
rcrb
add
dec
mov
jecxz
xchg
pop
push
push
mov
aam
pop
jnp
fwait
xorb
mov
or
ja
or
inc
xor
pop
cmp
ds
test
mov
pop
rclb
xor
enter
aad
adc
sub
mov
aaa
xchg
add
in
xor
pop
je
push
rcrb
test
mov
and
dec
aad
pop
bound
cmp
mov
adc
rorb
push
inc
loope
loop
mov
push
jg
repz
punpckhdq
sub
dec
fsub
xor
mov
jle
std
mov
adc
insb
outsl
mulb
pop
xchg
mov
dec
mov
into
mov
mov
hlt
sub
xchg
jno
mov
mov
pop
out
cmp
mov
imul
arpl
and
ret
push
sub
push
pop
jno
aaa
xchg
outsb
adc
cwtl
sbb
pop
add
inc
jae
test
mov
andl
mov
cmp
inc
inc
cmc
lret
and
aam
out
dec
mov
jns
sub
outsl
pop
xor
out
jns
jg
inc
jl
mov
clc
dec
pop
movsl
sti
cmp
xchg
mov
cs
jb
mov
dec
inc
ret
fbstp
inc
dec
mov
lcall
dec
dec
cmp
in
xchg
push
scas
outsb
mov
stos
cli
or
iret
loop
push
je
divl
mov
movsb
decb
ficomps
negb
outsb
sbb
add
adc
adc
lret
xchg
adc
xchg
lods
lret
adc
pop
jge
imul
test
shld
loop
or
rclb
rcrb
push
outsb
and
mov
fisttpl
mov
aad
or
bound
xchg
test
xor
cmc
lds
inc
inc
out
push
in
sbb
mov
rcll
xchg
mov
ret
mov
mov
mov
fistps
out
dec
leave
int3
repz
in
out
jl
call
icebp
pusha
sub
in
shll
lods
in
in
movsl
pop
ja
push
test
pop
out
addr16
les
jmp
movsl
sub
xchg
xchg
jle
pop
incb
ljmp
movsl
in
cmpsb
add
in
fimuls
addr16
lock
repnz
sahf
pop
lds
mov
or
jecxz
mov
std
cli
sbb
add
lret
rcr
push
bound
loop
int
cmpl
cld
mov
inc
aaa
push
or
and
inc
push
dec
inc
cmpsb
adc
out
pushf
mov
fcomps
insl
lret
in
push
jp
andps
mov
xchg
inc
dec
xlat
ja
cmpxchg
or
out
test
cmp
cld
mov
aad
mull
or
repz
cmp
push
jnp
ret
pop
pop
sub
pop
test
sbb
mov
loopne
mov
mov
sub
dec
ret
and
arpl
dec
inc
lock
xchg
sahf
test
push
movsb
test
inc
je
mull
lods
jo
ja
jg
adc
adc
ja
arpl
and
pop
push
pop
sahf
cs
mov
fimull
fstp
push
inc
pop
jp
imul
push
adc
stc
out
or
fdecstp
cmp
sbb
pop
sbb
cld
mov
iret
mov
lret
jmp
lock
ret
and
mov
cltd
sub
push
fwait
push
pop
push
jo
cmp
faddl
ret
add
addr16
imul
and
pop
adc
or
mov
or
and
inc
and
xlat
hlt
aas
mov
cmp
pusha
sahf
sub
cmp
jmp
les
lds
out
pushf
dec
fwait
scas
in
jmp
sbb
sub
mov
jo
jge
mov
adc
test
mov
or
adc
xor
sub
mov
cmp
sub
fwait
xchg
jl
add
test
pop
scas
push
sahf
dec
xchg
xchg
push
pop
pop
xor
lods
cmp
sarl
xlat
lcall
cmpsl
push
xchg
cmpsb
pop
mov
pop
add
mov
sub
pop
xchg
leave
xchg
out
dec
sbb
pop
test
adc
lods
jp
dec
jl
mov
mov
jmp
aaa
aam
or
into
xor
mov
add
jp
js
pop
int
repz
call
pop
cwtl
push
jo
lds
inc
mov
xor
ds
adc
push
lds
xchg
cmpl
mov
jle
imul
insl
or
or
fwait
mov
dec
call
cmpl
dec
shll
ljmp
out
leave
and
bound
or
xchg
shll
jne
fdivrs
pop
mov
or
mov
mov
sub
loope
mov
out
mov
rcrb
pop
ljmp
mov
jecxz
cmp
xchg
xor
test
lahf
cli
arpl
nop
push
lahf
ret
mov
jecxz
cli
mov
data16
icebp
dec
jg
scas
mov
bound
je
add
jae
daa
inc
dec
aaa
cmc
mov
outsl
or
sbb
aad
push
or
jge
add
cmpsb
lcall
pop
jno
mov
lds
lahf
dec
push
mov
jecxz
mov
daa
nop
stos
out
push
repnz
and
lock
sbb
dec
or
leave
cmp
xchg
add
into
cmp
mov
insb
aaa
pop
xchg
push
dec
push
iret
adc
imul
faddp
cltd
cli
or
iret
ret
dec
lods
mov
stos
xlat
xchg
daa
or
lods
cmpxchg
rorl
sbb
jl
pop
iret
dec
adc
adc
push
lret
sbbb
shrl
scas
pop
mov
adc
inc
sahf
mov
adc
push
ds
pusha
pop
sbb
dec
sbb
cld
fildl
jne
cs
cld
sahf
cmp
ds
push
mov
lods
dec
or
xor
in
inc
or
pusha
dec
pop
cs
jp
xor
mov
cmp
loope
sbb
jmp
xor
lods
add
sti
jae
jge
cmp
fdecstp
out
rcll
negb
sti
ret
or
cmpsl
cmc
lret
cmp
imul
les
out
mov
mov
cmp
mov
cli
xor
loope
out
fwait
bound
add
mov
jp
push
or
fmul
dec
movsl
aam
cmpsl
je
mov
xor
and
out
mov
int
xor
out
cld
inc
loop
fsubp
lods
or
test
pop
push
sub
xchg
outsb
jecxz
je
fdivrl
in
cs
es
xchg
fwait
pop
mov
xor
sub
add
jns
dec
pop
fldenv
cli
enter
jmp
mov
fs
mov
xchg
outsb
push
fcomip
sbb
mov
insb
pop
mov
lea
mov
jnp
mov
inc
mov
jle
frstor
pop
dec
fiaddl
jo
fstps
cmp
mov
jmp
cltd
push
int3
xchg
js
mov
aam
and
mov
test
jns
loope
mov
xlat
add
movsb
imul
jmp
dec
mov
jge
push
les
cld
loop
mov
and
clc
dec
neg
fstl
adc
lods
mov
sub
jo
cmp
in
insl
or
shlb
rcrb
cmp
jb
and
push
je
stos
sbbl
nop
jbe
mov
pop
mov
push
hlt
or
fbstp
scas
lea
mov
jne
fs
or
fidivrs
loop
add
xor
into
inc
inc
mov
clc
and
incl
lret
pop
stos
jbe
or
jbe
dec
sbb
mov
outsl
lea
sahf
xchg
cmc
rcll
mov
je
and
push
movb
pop
shlb
out
in
dec
fwait
mov
or
ret
cwtl
push
push
mov
mov
mov
aaa
frstor
out
insl
int
pop
or
push
test
mov
loope
stos
divl
imul
and
jp
out
jae
sti
or
cmp
insb
cwtl
and
out
test
jo
jo
aad
pop
in
fs
fdivrp
xor
xor
es
or
xor
out
jmp
xchg
sub
fiaddl
iret
mov
dec
adc
jns
test
sahf
cli
jge
stc
adc
test
xor
cmc
fnclex
jne
fwait
notb
mov
insb
stos
mov
negb
inc
addb
enter
mov
dec
into
aad
jmp
mov
sbb
sti
daa
adc
icebp
jl
in
xchg
js
and
das
ret
mov
mov
aam
icebp
orb
dec
divb
rol
shll
adcl
and
test
pop
cwtl
pop
or
mov
xchg
mov
lods
xor
cmp
cwtl
loop
dec
cmc
ss
jo
jp
outsb
mov
cmp
rcll
xchg
dec
inc
popa
cwtl
mov
fidivrs
pop
nop
push
pop
and
sahf
add
aad
mov
push
add
test
push
dec
dec
loopne
mov
fwait
add
lods
jne
add
int
inc
pop
outsb
push
iret
in
enter
imul
mov
adc
jge
fmull
pusha
loopne
pop
loop
jae
xchg
push
add
lret
out
lods
or
jae
push
daa
dec
jle
repnz
rol
dec
aam
mov
js
jae
mov
cli
rorb
push
or
daa
xor
or
loope
jl
pusha
stos
mov
xchg
inc
decl
sbb
push
and
lret
xchg
sub
jnp
mov
inc
add
mov
leave
mov
es
pop
add
mov
lds
mov
add
add
push
mov
test
pusha
xchg
adc
lahf
add
rcl
arpl
insb
aam
dec
mov
mov
es
sbb
or
or
xor
pop
push
sub
movl
imul
jb
mov
add
cmc
dec
mov
iret
aaa
xorl
arpl
movsl
imul
jle
push
fisttps
in
inc
cli
jns
movsl
dec
stc
or
sub
nop
lds
scas
cmp
es
pushf
xchg
loope
cmpsl
loop
cmp
mov
mov
add
pop
add
das
push
adc
addl
popa
mov
jp
andl
lretw
jne
xchg
ret
xor
cmp
sub
lods
call
lods
jne
push
cld
inc
fiaddl
and
out
pop
jle
jg
cli
jecxz
sbb
dec
fsubrl
sbb
sub
outsb
bound
stos
divb
cmp
dec
mov
push
xchg
stos
jns
lods
xor
sub
sub
inc
add
push
cmp
sti
inc
adc
add
xor
mov
andl
and
mov
cmp
call
mov
daa
gs
xchg
cmp
aaa
test
in
mulb
data16
lcall
aas
iret
in
js
mov
enter
filds
jp
repz
push
cmp
sbb
xor
mov
push
rolb
xchg
or
fwait
sbb
xchg
sarl
jge
mov
daa
icebp
sub
movsl
test
mov
or
fcompl
pop
test
popf
xor
and
cltd
mov
nop
xchg
hlt
pop
inc
sbb
pop
xchg
testl
add
or
scas
ret
outsl
lret
pop
inc
int
pop
loopne
xchg
xchg
std
push
pop
pop
xchg
mov
adc
nop
test
jg
or
dec
mov
or
scas
inc
lods
aad
sbb
inc
shr
inc
aam
js
subb
lret
call
push
aaa
xor
pop
sti
testb
add
arpl
shll
inc
rolb
test
pop
cli
and
and
mov
mov
mov
enter
push
mov
fidivrl
push
push
outsb
adc
adc
lock
xor
mov
aad
pop
xchg
pop
popa
and
dec
xor
cmp
push
and
cltd
das
arpl
nop
aaa
dec
mov
loopne
add
mov
mov
aad
jmp
sbb
test
mov
xor
jns
fimuls
pop
repnz
inc
ficoms
xor
fs
aad
imull
sbb
sbb
fisubrl
sbb
pop
lcall
jecxz
sub
mov
lods
jge
adc
inc
in
dec
adc
xlat
pop
xchg
es
enter
jno
cmp
mov
and
fnsave
popa
stos
mov
mov
test
cltd
mov
xchg
bound
lods
in
in
lock
mov
sub
add
popl
pop
sub
div
and
jg
leave
sbb
inc
sbb
fsubrs
inc
mov
push
pop
xchg
cmp
out
incb
icebp
ljmp
mov
sbb
test
lds
bound
sbb
insb
pop
and
dec
add
jmp
sbb
jno
lret
inc
adc
leave
push
cltd
popa
shlb
inc
cmp
xchg
cmp
cli
imul
stos
push
iret
aam
mov
rolb
iret
in
jb
sub
fs
jb
repnz
loop
or
pusha
or
adc
cmp
pop
inc
test
pop
insl
fsubrp
out
lret
sti
jae
icebp
jmp
arpl
fildll
push
shrb
popa
shll
pusha
dec
mov
jb
cltd
xchg
stos
and
in
icebp
cmp
cmp
dec
lret
loopne
mov
mov
out
dec
push
dec
lods
aam
or
shr
aas
dec
cmc
aas
add
shlb
cmp
sub
cmpsb
xchg
ljmp
rorb
xchg
fidivrl
mov
lods
cld
mov
aad
and
ss
jns
insl
stc
je
adc
pusha
and
mov
shll
dec
sbb
leave
push
insl
cmpsb
jp
push
mov
pop
addr16
scas
or
mov
loopne
aas
movsl
fidivl
jne
insl
and
or
mov
jecxz
fucomi
in
into
shlb
pop
fisttpl
pop
orl
mov
xor
cmp
jne
into
mov
inc
mov
insl
dec
cltd
mov
negl
in
js
dec
outsb
mov
subb
lret
insl
fs
out
sub
cmp
fldcw
add
sbbl
cmp
repnz
mov
es
add
mov
popf
lret
xor
test
sbb
shlb
mov
sbb
mov
cli
movl
and
lret
lret
shll
xchg
push
lds
inc
aas
imul
xor
adc
adc
imul
and
cmc
lods
dec
fnstenv
in
std
cmp
xchg
fisubl
std
push
test
gs
out
push
das
imul
loop
fstpl
push
adc
fwait
add
adc
jo
and
sub
stc
out
je
les
xor
sub
inc
sahf
cltd
xchg
sbb
xchg
push
push
ret
cmp
mov
neg
add
repnz
out
aam
iret
inc
sbb
repz
sbb
sbb
add
in
test
shll
test
xor
rcrb
mov
js
cltd
lcall
or
stos
push
inc
jnp
push
rcrb
fidivrl
and
jo
les
and
clc
cmp
push
pop
xchg
lcall
sbb
repnz
cmp
push
fists
divb
mov
mov
mov
pop
dec
movsl
sbb
fnstcw
push
rol
ljmp
mov
sbb
dec
dec
aas
fsub
cmpsl
xchg
jb
adc
mov
push
mov
mov
fmul
jns
cmp
fsubl
ds
fsubl
pop
popf
lock
hlt
push
fnsave
shrl
out
pop
mov
dec
insl
sub
out
push
in
cs
repz
xor
push
inc
sbb
inc
in
dec
repz
mov
add
xchg
enter
fnstenv
and
les
test
push
mov
fsts
insb
cld
dec
scas
insb
aad
jbe
sbb
fsubs
jecxz
popf
mov
xchg
fcomps
mov
pop
jae
jg
mov
mov
mov
adc
test
or
and
rolb
cmp
adc
and
loope
pop
adc
repz
push
cmp
adc
pop
add
mov
inc
stos
cmp
inc
jbe
push
mov
cmp
push
and
sbb
jbe
dec
mov
xor
aaa
mov
cmp
test
xor
shr
adc
add
mov
int3
jp
adc
insb
sbb
pop
inc
fwait
add
call
cwtl
outsl
stc
dec
popa
mov
mov
addb
xchg
xor
add
insb
adc
inc
xchg
outsb
movsb
xor
inc
and
mov
pop
mov
mov
loopne
pop
mov
out
mov
dec
mov
stos
adc
xor
dec
rcl
out
loope
xor
pop
xchg
clc
das
mov
pop
jmp
dec
hlt
adc
xorl
call
fidivl
dec
mov
pop
ror
rcll
aas
std
xchg
cs
push
xor
add
popa
aad
mov
cwtl
cmp
mov
add
mov
rorb
fstp
aad
std
ds
ds
movsb
inc
les
arpl
mov
jl
pop
mov
or
pop
jecxz
sti
xchg
or
fcmovnbe
popa
scas
sbb
daa
fstpl
jmp
js
out
push
out
mov
sahf
arpl
mov
mov
outsl
jp
push
adc
inc
jp
mov
pop
sub
mov
loope
mov
push
jl
test
and
adc
push
jge
pop
sub
jp
pusha
js
sub
aad
fisttpll
inc
aaa
int
stos
movsb
push
xchg
sahf
movsb
pop
loope
sub
insl
pop
cltd
pop
inc
jns
loopne
enter
push
mov
test
int
sub
jecxz
lods
pop
loope
hlt
add
cwtl
rcrb
dec
adc
dec
movsl
das
fs
scas
hlt
lcall
cli
inc
dec
out
and
or
test
inc
jb
mov
dec
jmp
mov
add
adc
loopne
loopne
add
inc
push
aaa
add
ljmp
rol
sahf
mov
jmp
fwait
mov
sbb
cld
adc
popf
push
and
xchg
adc
sbb
sbb
jb
mov
inc
add
cmp
mov
cmpsl
sbb
clc
xor
jp
test
sbb
jb
pop
lods
jno
les
mov
and
sbb
lret
hlt
sub
popa
lret
xor
mov
out
popa
and
out
adc
sbbb
orb
cmp
int3
xor
inc
or
lahf
fcoms
pop
cmpsb
insl
das
cmpb
nop
call
int3
andl
pop
orb
movsl
push
cmp
dec
into
out
sub
in
sub
push
inc
xor
push
clc
je
lods
push
out
dec
daa
inc
sub
insb
movsl
mov
icebp
or
adc
push
test
sbb
jne
test
cmp
iret
xchg
ja
pop
jp
sti
outsl
scas
imul
loopne
test
mov
ficoms
testb
sub
inc
adc
lea
cs
add
pusha
mov
lock
adc
cmp
lret
pop
pop
add
in
es
cmpsl
dec
js
or
cmp
out
jge
sbb
or
les
add
pop
and
aam
dec
add
mov
dec
out
test
adc
fistpll
adc
testb
add
sti
jge
mov
push
cltd
xchg
adc
mov
and
rcll
rcrl
pusha
mov
mulb
out
fucomp
popf
inc
popf
xor
mov
popf
stos
xlat
stos
cmc
pop
fisubs
jo
add
int
xchg
aad
jae
outsb
pop
jp
and
inc
add
sub
mov
mov
stos
inc
rcrl
packssdw
xor
daa
mov
icebp
mov
mov
push
popf
xor
mov
dec
js
movl
push
in
hlt
mov
dec
inc
std
xor
outsl
sub
adc
mov
shr
jbe
cld
or
or
in
jmp
clc
outsb
xlat
inc
xor
xchg
inc
mov
pop
addb
and
xor
ds
lret
and
dec
and
xor
sbb
inc
xor
movsb
imul
mov
inc
push
mov
or
cmc
cs
les
imul
or
sarl
js
sbb
jne
mov
mov
incl
sbb
cld
lea
js
cwtl
lods
ret
dec
jg
and
mov
mov
fisubl
lcall
ret
mov
xchg
das
loope
xchg
dec
out
mov
cmc
call
cmp
addr16
jl
test
jge
and
and
aad
mov
xchg
mov
daa
testl
or
stc
daa
iret
subb
sbbb
jl
cmp
add
and
imul
push
in
das
push
inc
int3
rorl
pop
inc
cwtl
fsubr
ret
daa
push
and
bound
aam
fsubl
fcomip
fmuls
aas
repnz
pop
inc
cmp
xor
test
pop
pop
jb
jne
js
lods
dec
xchg
test
jbe
jae
push
loope
inc
fldt
dec
inc
jnp
mov
jne
fstp
xor
adc
data16
sbb
ret
cmp
mov
sub
testl
pop
arpl
rorl
ficoms
cmp
ficomps
mov
fists
inc
pop
out
in
or
mov
js
push
mov
jg
cmc
out
cmp
int3
mov
leave
cltd
ret
insl
hlt
inc
dec
adc
mov
mov
add
daa
mov
mov
into
icebp
movsb
sub
es
xchg
and
into
mov
jo
adcl
xor
push
mov
cs
repnz
pop
sub
add
cmpsb
loopne
clc
cmp
and
dec
cmpsl
push
cs
repz
test
xor
xor
js
mov
cmp
push
adc
pop
out
cld
fcomps
loop
sbb
mov
mov
jg
shrl
add
andps
mov
ficomps
cmp
xchg
aas
mov
mov
jne
mov
syscall
jbe
jl
inc
js
std
add
push
inc
push
sbb
jae
outsb
dec
xlat
push
rcll
add
sahf
scas
mov
sbb
cmp
out
jne
mov
icebp
int3
add
mov
sub
into
sbb
or
sbb
idivl
enter
ret
mov
sbb
ds
in
stos
or
out
add
cmp
mov
xchg
adc
inc
int3
mov
in
cmp
popa
xor
jns
and
dec
sbb
or
dec
lea
cmp
int3
arpl
push
in
sahf
xor
std
and
add
sarl
fnstcw
lahf
loope
mov
xor
notl
movsb
mov
mov
bound
jo
lds
lahf
adc
or
int
mov
or
xchg
popa
pusha
jnp
fadds
hlt
jg
out
test
dec
out
inc
or
call
jnp
xor
and
cwtl
es
cmc
cmpsl
repz
xor
dec
dec
pusha
push
jle
xor
insb
xor
xchg
shll
scas
mov
jne
mov
dec
xchg
mov
mov
ret
dec
jno
leave
jg
aam
xchg
mov
pop
fs
mov
cmp
mov
test
andl
fstenv
mov
jb
sahf
fdivs
repnz
fdivp
xor
clc
mov
insb
outsl
xor
and
or
addr16
push
ss
pop
pop
push
movsb
xchg
fs
dec
ja
cltd
cmpsb
or
sub
stc
cltd
in
fisubs
xor
push
arpl
push
sbb
push
hlt
pop
mov
jge
rclb
stos
sahf
rolb
jmp
fidivl
sti
addr16
adc
xchg
add
sbb
iret
and
xor
jmp
fidivrl
jl
adc
lret
mov
call
and
and
ljmp
and
xchg
stc
pop
scas
sahf
jmp
fwait
mov
jmp
mov
xchg
xchg
clc
shlb
push
mov
sbbl
movsb
iret
pop
jecxz
add
adc
loope
mov
out
or
mov
fisubrl
jl
outsb
add
out
or
or
dec
dec
xchg
sbb
rcrb
dec
xchg
loop
mov
pop
pop
frstor
push
div
jg
sub
sub
lods
mulb
sbb
out
rcrb
or
mov
call
ds
mov
adc
xor
fidivs
push
popa
lods
test
popf
jae
sarb
adc
icebp
mov
jmp
test
sub
pop
ds
mov
gs
or
sbb
scas
and
int
inc
jnp
cwtl
aad
push
ja
adc
mov
and
movsb
push
popf
sbb
cmc
adc
push
and
push
or
jge
fstpt
jp
push
mov
add
adc
sub
add
dec
imul
mov
pop
mov
sbb
xchg
mov
jp
orb
pushf
and
inc
jbe
int
scas
mov
es
prefetcht0
nop
lahf
push
fcomip
cmc
pop
xor
adc
cmp
pop
out
jb
js
or
call
and
xor
les
shlb
lods
push
jbe
movsb
cld
xchg
loop
adc
and
push
out
mov
into
shl
pop
sbb
xchg
lea
jbe
mov
repnz
inc
fcompl
push
ja
xor
pop
outsb
rcrb
sub
out
leave
sbb
push
insb
xor
in
cld
jmp
mov
push
mov
aad
test
mov
sbb
xchg
push
pop
push
cmpsb
and
lds
cmp
jge
aam
sbb
ja
cmp
rcl
fstp
cwtl
mov
or
std
sbb
outsb
push
lods
sub
mov
lret
das
aam
mov
adc
sti
clc
sub
mov
mov
sbb
lret
xchg
mov
mov
sub
xor
ficomps
adc
repz
imul
mov
aas
stos
fildl
cmp
cwtl
loope
test
sub
sub
inc
or
push
adc
lods
xor
xchg
addr16
xchg
in
jbe
movsb
negl
or
fmulp
lock
popf
xor
push
xchg
test
and
outsl
filds
mov
es
cmp
iret
push
mov
gs
mov
lds
and
lock
mov
out
loope
leave
inc
sub
fidivs
movsl
fs
fsubl
jg
cmp
xchg
sbb
dec
mov
cwtl
mov
js
sub
fistpll
ja
cmc
and
lock
adc
and
cmp
and
add
pop
cmp
xchg
inc
push
fildl
aas
rol
aad
clc
cwtl
rol
cmp
add
movsb
xchg
dec
pop
inc
cmpsl
jmp
andb
ret
lds
out
mov
ret
and
daa
mov
jns
push
fisubrs
and
push
dec
ds
mov
mov
push
xor
fists
mov
mov
popf
ret
mov
dec
xchg
orb
test
enter
add
inc
rcrb
lods
jg
jnp
dec
mov
jg
mov
push
jmp
popf
call
arpl
insb
test
lcall
cmc
push
jbe
or
fidivs
xchg
mov
iret
out
adc
cmp
pop
jno
push
pushw
aad
push
ja
push
std
sub
call
clc
aad
dec
or
es
sbb
enter
imul
xor
fs
mov
test
dec
jp
ja
mov
adc
mov
data16
xchg
in
lds
mov
pop
andb
mov
or
sub
inc
push
adc
jae
inc
or
pop
mov
test
rcrb
sbb
add
pop
xor
adc
jbe
pop
mov
dec
out
adc
xchg
in
jl
inc
jne
decl
out
xor
mov
shrl
cmpsl
std
neg
mov
std
popf
not
mov
mov
jp
push
movsl
std
mov
mov
jne
stos
xchg
push
lods
testb
dec
cmp
push
add
ret
lds
test
rcrl
loope
je
dec
movsl
jae
insb
add
loop
repz
cmp
test
cli
pop
adc
pusha
lock
mov
movsb
mov
orl
fs
xchg
stos
xor
scas
fistl
daa
mov
scas
repz
loope
xorl
push
xchg
sbb
nop
adc
and
jnp
lea
cmc
ja
mov
sbbb
jnp
and
sub
cwtl
sbb
add
mov
orb
sub
pushf
scas
push
push
and
mov
mov
inc
mov
out
repz
mov
pop
aam
sub
cmp
fwait
xor
inc
lret
mov
and
aam
dec
xor
imul
adc
xlat
add
es
xor
cmp
mov
ret
cmpsl
fmull
or
add
mov
xchg
test
sbb
xchg
inc
and
scas
or
push
test
pop
daa
cltd
mov
cmpsl
js
popf
js
pop
or
sbb
shlb
notb
das
sbb
or
pop
mov
adcb
cmp
push
jno
lods
mov
inc
repz
and
hlt
or
or
cmp
imul
mov
insl
nop
enter
mov
cmp
ret
pusha
adc
add
enter
arpl
imul
xor
xchg
callw
pop
push
filds
fsubs
sub
jno
xchg
or
cli
xchg
jnp
stos
push
pop
xchg
repz
std
imul
or
add
ja
xchg
cmc
in
jne
sahf
push
and
xorl
xor
lock
cmpsb
add
lods
test
es
mov
xlat
stc
mov
mov
xlat
push
xchg
shrb
adc
jae
cmp
dec
test
adc
inc
aas
subb
xor
popl
jbe
das
sbb
pop
inc
out
and
add
test
outsl
sub
out
das
adcb
lds
xchg
pop
cmovne
std
and
push
mov
sbb
ret
ss
mov
mov
iret
jmp
sub
scas
data16
pushf
loop
es
je
pop
leave
mov
shlb
pop
pushf
sub
pop
inc
push
and
sub
inc
das
pop
shlb
cmpsb
pushl
xchg
pusha
aad
fwait
sahf
cmp
inc
and
mov
inc
out
cmpsb
std
movsb
jno
scas
stc
dec
int3
jle
mov
or
mov
mov
scas
ja
dec
jae
test
cwtl
jmp
xchg
dec
icebp
out
pop
pop
out
xor
jmp
sbb
imul
add
fldt
out
mov
pop
pop
test
enter
les
jp
clc
call
std
pop
mov
mov
bsr
repnz
ss
out
cmp
jmp
mov
lcall
xor
out
test
es
jb
jne
dec
in
push
sbb
mov
pop
mov
mov
cmc
jbe
mov
imul
loopne
out
xorb
mov
mov
add
inc
xchg
call
int3
jne
push
mov
sbb
aas
or
sbb
sub
inc
andb
ret
push
add
sti
leave
frstpm(287
data16
xor
shl
push
outsl
insb
rorl
xor
sbb
cmp
jnp
xchg
js
dec
mov
leave
mov
jge
jg
add
bound
xor
lock
pop
xchg
push
and
das
mov
sbb
sbb
fidivrs
mov
mov
hlt
or
jge
mov
adc
cs
repz
in
jb
iret
push
or
icebp
iret
xchg
arpl
or
movsl
es
jmp
movsb
mov
sub
inc
sbb
cmpsl
fsubrl
repz
dec
mov
out
pop
dec
pop
cmc
shll
fcompl
icebp
mov
mov
mov
add
cmp
adc
push
insb
sub
in
add
enter
clc
pop
jne
aaa
fistps
pusha
pop
lret
jne
dec
mov
inc
add
sub
lcall
pop
arpl
cmpsl
ret
inc
xor
pop
repz
xorl
stc
mov
dec
cmpsb
jl
sti
imul
xchg
xor
icebp
cmpsb
lods
pop
cli
xchg
movsl
sbb
ja
push
out
xor
std
xchg
shlb
pusha
into
dec
cltd
repnz
mov
cmp
repz
cmp
outsl
push
cld
test
inc
test
pop
sub
aas
cmp
test
cli
adc
mov
add
out
jl
mov
int3
sti
adc
push
inc
in
testb
add
sub
jmp
cmp
call
shl
sub
inc
push
clc
bound
mov
jne
add
lret
push
pop
xchg
loope
xchg
xor
inc
outsb
add
mov
push
mov
movsb
jmp
fistpll
loope
push
cmp
jb
les
nop
sbb
lahf
les
jg
dec
xchg
dec
xchg
pop
cmp
rolb
cmp
cmpsb
fimull
xchg
mov
mov
mov
pop
inc
outsb
inc
cmp
repz
out
mov
mov
jb
test
sbb
ja
inc
and
loope
movsl
cli
push
enter
dec
insl
xor
pop
cmc
cmp
shlb
daa
addb
fidivs
sbb
sub
ljmp
loope
mov
and
lcall
in
adc
mov
inc
and
insl
fcoml
jp
push
mov
pop
push
jae
or
cmp
enter
sarb
ret
nop
push
pushf
int3
mov
inc
push
push
aaa
fcomp
test
mov
fs
mov
dec
call
sub
aad
and
cmc
fnstsw
sbb
cmp
addb
mov
into
mov
mov
adc
dec
sub
iret
pop
sub
mov
mov
and
std
cli
call
insb
lea
jecxz
lret
lods
add
mov
daa
fidivl
mov
xchg
pop
int3
scas
push
xor
cmpsl
push
mov
sub
mov
bound
mov
cmpsl
lods
into
test
cld
enter
cmp
divb
mov
fcomps
and
insb
and
cwtl
add
jne
data16
daa
shll
into
mov
mov
cmpsl
or
push
jle
dec
cwtl
mov
aam
out
mov
inc
sbb
xor
push
cmc
clc
or
inc
insb
cmp
mul
or
ret
cltd
pop
std
rcll
fmuls
les
sbb
std
or
mov
mov
push
clc
daa
fcom
dec
push
inc
in
sbb
aad
xor
test
pop
adc
jmp
jbe
jns
push
mov
aam
mov
dec
aam
outsl
scas
sbb
jno
or
push
scas
xor
fcoml
mov
mov
sub
arpl
addr16
lods
sub
sub
lcall
pop
dec
into
enter
inc
mov
jl
sahf
daa
je
lea
fbstp
mov
mov
inc
inc
mov
ss
lock
sbb
out
inc
or
out
mov
aad
pop
inc
mov
je
addb
xchg
imul
in
inc
aas
mov
pop
test
sbb
aas
dec
sub
jno
aas
mov
dec
mov
pop
xor
cmp
stos
int
push
pop
pop
shrl
jbe
jo
jb
lret
jb
ss
pushf
jecxz
add
pop
dec
test
xor
cs
mov
mov
cli
adc
ret
jle
cld
fidivs
xor
scas
push
hlt
aam
and
push
cld
test
or
lret
mov
push
loop
push
ja
sbb
popf
xchg
pop
jecxz
cmc
cld
into
rcrl
mov
push
or
sub
xchg
pop
icebp
pop
mov
aaa
and
jbe
xchg
shl
xchg
mov
stc
mov
int
shl
or
add
out
xor
add
dec
push
mov
xchg
daa
adc
mov
jae
fcomps
jle
xchg
repz
pop
fcmovbe
xchg
lea
mov
in
idivb
push
jb
jg
popa
jecxz
mov
sub
lds
mov
test
jecxz
cld
incb
das
push
mov
xchg
and
dec
mov
iret
test
push
jne
xor
mov
pop
push
mov
bound
push
push
fadd
mov
inc
addr16
mov
add
in
outsl
xor
mov
add
sbb
iret
sbb
jno
roll
xchg
arpl
in
sbb
inc
sbb
adc
bound
inc
or
insb
xchg
and
outsl
leave
mov
jns
test
pop
lock
mov
orl
ret
mov
faddl
pop
mov
ret
je
cmpsb
push
sub
sub
repnz
shr
cmp
jae
sahf
mov
in
mov
aas
imul
test
xor
push
decl
inc
dec
fwait
ljmp
push
xor
repz
hlt
adc
inc
aaa
xorb
xor
or
and
pop
sub
fwait
pop
rcrl
js
inc
pop
aam
xchg
lods
cld
dec
inc
xchg
cmpsl
jge
pusha
push
add
fidivrl
data16
or
js
xchg
lock
lds
enter
ljmp
adc
rorl
jno
adc
push
insl
xor
inc
push
std
xchg
in
xorb
xchg
push
mov
push
jno
adc
mov
mov
enter
add
inc
das
mov
push
movsl
xchg
std
dec
imul
test
mov
mov
cld
add
arpl
mov
hlt
fwait
int
loopne
fdivrl
call
fiadds
sub
or
test
push
adcb
ret
add
sbb
push
inc
dec
aas
lea
pop
pop
ljmp
mov
pushf
loop
sub
sbb
jmp
xchg
xor
mov
jnp
int3
jge
addr16
or
rcl
jg
mov
xchg
mov
xchg
push
cmc
mov
pop
sbb
mov
sub
add
iret
das
cmp
pop
loope
cmp
xchg
fistpl
dec
inc
das
nop
cli
inc
sbb
inc
std
lods
dec
jno
xlat
lea
jg
int
loopne
or
lea
cld
pop
mov
add
and
inc
mov
fs
push
out
pop
xor
test
cld
lahf
stos
enter
into
pop
cmp
pushl
mov
adc
inc
mov
repnz
pop
fs
and
std
fs
wbinvd
aad
push
push
in
xchg
xchg
sub
sbb
jne
mov
and
stos
mov
mov
subl
daa
fsincos
pop
sbb
inc
add
jns
mov
mov
xchg
arpl
loopne
movsb
out
mov
xchg
cmp
imul
cmpl
mov
es
imul
adc
sub
nop
sti
sub
cmp
push
xchg
ds
int3
jg
mov
adc
jge
mov
inc
ret
mov
lds
das
pop
mov
out
mov
adc
pop
arpl
add
adc
pop
sub
mov
cwtl
test
sub
ret
and
andb
lock
fldenv
popa
pop
xchg
push
test
sub
fld
xor
cmc
stos
fsubrs
jle
push
pop
push
sbb
mov
xor
pushf
adc
adc
shll
adc
movsl
inc
adc
rolb
sahf
push
aam
or
cwtl
mov
mov
in
jae
in
mov
test
aaa
xchg
popf
mov
inc
pop
stos
adc
movsl
or
mov
mov
fs
out
xor
mov
and
pop
cmp
not
test
cmp
inc
aaa
popa
scas
imul
xchg
and
push
jge
sub
mov
and
out
xlat
adc
inc
push
sub
dec
inc
cmc
test
sub
cmc
pop
dec
push
js
inc
mov
lret
or
int
cmc
add
cld
and
sbb
aas
or
mov
dec
movzwl
aad
pop
dec
push
loopne
fcmovu
mov
mov
imul
jae
iret
cmpsb
pop
lahf
mov
mov
lahf
lds
mov
jmp
popf
mov
mov
repz
push
push
push
add
testb
jnp
cmc
or
inc
cli
jns
push
sahf
mov
xor
xchg
inc
iret
test
pop
adc
test
or
dec
adc
rcrb
test
inc
add
out
mov
inc
pop
shll
ljmp
pusha
push
and
push
and
das
pop
adc
sahf
jp
aad
pop
std
and
jmp
daa
shll
loopne
daa
fmuls
ds
rcr
fmul
pop
les
inc
imul
sbb
mov
sahf
shl
aaa
sub
dec
fmuls
pop
arpl
jae
push
sahf
adc
insb
xchg
fildll
ljmp
rolb
sub
or
test
jle
inc
popf
ja
push
incl
xor
lds
push
fcomps
push
inc
into
sbb
int
xchg
push
push
pop
cmp
addl
pop
and
xorl
push
in
out
jle
add
sub
andl
jns
jnp
cmp
pushf
push
inc
jecxz
cmpsl
adc
xchg
dec
rolb
ret
rcll
and
pop
pop
out
xor
sbb
push
xchg
inc
andl
push
mov
pushf
jnp
cmp
cmc
sub
cmc
stc
mov
scas
pop
add
push
mov
push
fldl
aam
gs
pushf
pop
cmc
inc
or
xchg
ffree
in
gs
push
hlt
add
arpl
insl
ja
xchg
fdivr
inc
sub
lock
mov
loop
xchg
mov
sub
subb
pushf
push
mov
or
leave
mov
jo
adc
push
out
mov
notl
xor
in
movsl
fbld
aas
cmp
cmpsl
bound
rolb
int3
enter
or
mov
daa
mov
popa
xchg
push
out
mov
mov
shlb
imul
cmp
xor
push
pop
push
popf
sub
push
push
loopne
ja
push
mov
inc
push
pop
inc
aam
cmp
scas
test
jl
jnp
orl
stos
mov
pusha
adc
icebp
cmp
jge
sti
enter
jl
je
test
add
mov
jne
and
lret
sbb
je
aaa
iret
xchg
mov
push
in
xchg
inc
mov
sub
loope
mov
ret
fcoml
fidivs
xlat
push
sahf
add
xchg
sub
push
aam
hlt
test
inc
int3
jmp
lcall
sub
stc
repnz
pop
sub
cmp
and
cmpsb
add
filds
test
mov
dec
in
inc
jnp
repnz
ja
push
shll
dec
ja
mov
pop
out
jne
jge
mov
adc
mov
lods
pop
mov
fnstenv
pop
or
mov
loopne
sub
pushf
xor
pop
push
bound
enter
adc
arpl
add
out
adc
jg
leave
loopne
xchg
mov
adc
dec
rcll
lods
lret
lahf
jmp
and
add
shrb
or
mov
mov
lods
xchg
push
jmp
push
push
dec
push
pop
dec
js
jbe
mov
xor
mov
xchg
fwait
rcr
xor
add
mov
jecxz
dec
adc
sub
xchg
xchg
jae
mov
mov
scas
and
out
mov
test
lcall
sub
dec
ret
xor
jp
xor
es
aaa
dec
int
push
mov
cwtl
rcrl
push
test
loopne
xchg
xlat
jbe
add
iret
inc
pop
cld
or
mov
mov
ss
int3
pusha
mov
insb
xchg
xchg
arpl
and
cmp
sbb
inc
jno
dec
cmp
clc
cmp
adc
imul
rorb
test
mov
jmp
mov
cmc
mov
or
scas
lahf
push
arpl
jg
jecxz
fiaddl
cmc
cmp
mov
decb
pop
mov
xor
push
mov
mov
in
scas
xchg
jmp
shlb
or
js
push
clc
xchg
daa
jecxz
arpl
ja
dec
mov
leave
mov
lahf
outsb
add
stos
js
pop
idivb
shl
pop
arpl
or
pop
inc
jbe
movsl
xor
mov
aam
out
rorb
xchg
addb
push
imul
out
test
mov
pop
sbb
out
nop
repz
test
mov
pop
cmpsl
lods
push
pop
mov
adc
xchg
dec
hlt
add
or
sbb
sarl
aam
fbstp
out
int3
sbb
xlat
insb
pushf
sahf
std
pop
jno
and
mov
push
in
push
shlb
mov
outsl
xor
stos
pop
imul
jg
jno
pop
aas
aaa
test
in
inc
and
movsl
movsb
arpl
cmpsl
or
outsl
in
lcall
in
divb
hlt
xchg
or
push
out
sar
mov
or
fcoms
pushf
fistl
inc
or
xor
inc
orb
es
xlat
imul
ret
fcomps
lret
mov
int
push
mov
adc
mov
stos
nop
mov
xor
pop
jp
cmpl
scas
repnz
inc
stos
push
mov
cmp
push
jge
test
test
or
jl
inc
cmp
fmuls
xchg
cli
fcomi
loopne
popa
scas
push
dec
push
xchg
dec
dec
sbb
sub
test
lods
dec
ret
cli
shrb
inc
mov
sub
pop
test
icebp
cmp
push
pushf
xlat
push
push
stos
cmpsl
les
mov
pop
repz
repz
mov
in
fnsave
xchg
add
out
repz
cwtl
pop
jbe
pop
push
pop
sbb
push
pushf
push
push
or
scas
iret
rol
clc
shl
jg
imul
test
cmc
incb
add
adc
lods
inc
push
stos
push
xor
mov
mov
cmp
mov
comiss
js
adc
pop
data16
or
adc
lods
or
addr16
mov
out
mov
pop
lret
inc
incb
mov
je
das
mov
adc
mov
mov
adc
xchg
sbb
out
dec
insb
rolb
xchg
xor
loopne
or
cmpl
jbe
call
and
jecxz
lods
ret
incl
sbb
push
jb
loope
pop
stos
mov
push
cmp
xchg
iret
mov
es
out
sarl
cwtl
push
pop
jae
fwait
mov
sbb
or
loope
adc
push
push
loope
cmp
sub
fisubrl
mov
ret
sahf
mov
popa
cli
sti
mov
jp
shll
mov
subl
sub
decb
gs
mov
mov
lcall
jl
push
jb
mov
push
mov
adc
pop
and
cmp
leave
setp
sbb
inc
test
mov
and
xchg
stos
cmpsl
push
push
movsb
movsl
imul
sahf
inc
xchg
arpl
inc
rcrl
shrb
sub
gs
ljmp
pop
andl
mov
js
test
push
ss
push
jns
rorl
enter
imul
sbb
xchg
pop
inc
out
pop
dec
mov
xor
inc
sub
xchg
cltd
jae
mov
or
es
sub
jae
xor
pop
and
movsb
pop
push
js
push
and
ret
int3
mov
jge
and
mov
xchg
fwait
test
div
xchg
mov
pop
push
sti
mov
xchg
iret
aad
scas
scas
cli
sub
imul
dec
add
mov
sub
xchg
shlb
jg
jge
ljmp
stos
std
add
lods
sarb
mov
jae
dec
and
lahf
mov
pop
cmp
fwait
mov
cmp
in
xor
out
cmp
adc
jns
mov
add
push
test
dec
std
add
pop
cmpsb
dec
cmp
je
mov
mov
dec
stos
xchg
dec
pop
das
popf
ret
icebp
xchg
jnp
shll
mov
mov
loopne
xchg
out
push
cmpsb
dec
scas
andl
ficomps
xchg
mov
cs
cmp
or
aad
aam
adc
sub
xchg
add
mov
aas
arpl
mov
sbb
xor
fmuls
inc
lea
and
mov
cmp
dec
popf
sbb
dec
xor
jge
adc
cmp
pop
fnstsw
mov
sub
inc
ficoml
sbb
xchg
fcmove
jne
out
mov
jmp
jnp
sub
sarl
sub
jbe
jns
inc
dec
popl
int3
in
int
jo
rcr
ljmp
and
js
xor
iret
inc
scas
cli
pop
loopne
sub
adc
xchg
xlat
mov
push
xchg
push
xchg
aas
pop
dec
mov
push
das
xchg
xor
orb
mov
xchg
mov
aam
pushf
mov
mov
mov
dec
cmpl
pushf
inc
inc
aas
js
gs
sbb
subb
adc
mov
or
push
loop
jl
es
jnp
jns
arpl
sbb
or
in
fstl
or
mov
xor
mov
or
shll
rcrb
mov
jp
lds
xchg
movsl
test
hlt
dec
inc
nop
mov
mov
jmp
pop
je
shlb
mov
hlt
rolb
movsb
mov
lods
mov
cmp
in
sbb
js
shl
cmp
shrb
jmp
ds
mov
dec
mov
out
nop
xchg
sbbb
fldenv
hlt
sbb
adc
dec
ds
fsts
xor
and
fwait
sub
shll
or
jle
dec
std
outsb
lret
push
notl
fiaddl
aaa
repz
test
iret
jp
fdivr
pop
mov
sbbb
pop
insb
inc
roll
cmc
cmp
dec
incl
test
mov
mov
insb
ret
add
mov
jo
aaa
out
adc
jnp
std
xchg
mov
jecxz
popa
mov
hlt
pop
or
rorl
fwait
add
test
aaa
jno
enterw
sbbl
leave
cmp
imul
mov
pop
in
jmp
sub
push
sub
xor
inc
lock
lret
adc
mov
icebp
cld
stc
in
movsw
jno
std
pop
sbbb
jg
mov
cltd
cmp
js
int
fsubr
lret
xchg
pop
loope
pop
inc
dec
mov
inc
sbb
movsl
out
loopne
cli
loope
mov
xor
pop
inc
cmp
sbb
push
aad
or
in
or
je
mov
adc
jl
shlb
daa
xor
fnstenv
inc
sbb
cmpsb
mov
scas
dec
mov
icebp
cld
mov
iret
movl
out
imulb
mov
xor
ja
sbb
adc
add
in
mov
cmpsb
cmp
test
pop
inc
fsubrs
and
jp
cmp
loopne
and
mov
popa
and
jle
xchg
fwait
mov
iret
sub
dec
fs
xlat
mov
xor
push
movsl
adc
fsubl
shll
stos
xlat
fs
or
sub
out
js
or
pop
mov
jecxz
dec
dec
cmc
imul
bound
xchg
cmp
cwtl
or
xor
pop
ret
push
enter
aaa
dec
adc
ss
jns
aam
cld
into
mov
add
push
test
outsb
ret
pop
arpl
scas
push
xor
lahf
or
xorb
ljmp
jbe
into
cmp
rorb
std
inc
pop
dec
cmpl
fistpl
rcrl
mov
mov
dec
xchg
mov
int3
rorb
sahf
hlt
repz
test
inc
mov
notb
push
inc
pop
adc
out
cmp
clc
push
pop
divb
ret
pop
push
or
push
sub
jmp
add
jg
xchg
sbbl
jno
inc
setb
or
ja
lret
mov
xor
test
xor
pop
mov
test
cmp
adc
and
inc
jle
sbb
xorl
push
enter
and
iret
xchg
inc
cs
lea
inc
stc
int
mov
sbb
cmpsl
mov
dec
or
push
sahf
call
push
insb
pop
xlat
jg
and
jno
lahf
cltd
addb
mov
out
jns
and
scas
sub
xor
fistps
mov
and
and
adc
mov
pop
adc
pop
cmp
ljmp
cmp
repz
adc
mov
nop
xor
cmpsl
and
pop
imul
push
inc
test
jae
sbb
xor
pop
pop
leave
ljmp
push
idivb
push
insl
mov
testl
pop
push
cmp
jl
push
scas
notl
jns
data16
fstl
aam
ret
lds
mov
cltd
fistpl
shl
lahf
pop
dec
cmp
inc
mov
stos
or
rcr
push
push
sub
push
push
adc
mov
jg
inc
int3
mov
xchg
repz
push
flds
out
add
sub
cmpsb
clc
pop
or
sahf
lea
mov
sti
pop
cmc
arpl
test
pop
add
aad
and
xchg
outsb
out
cld
lea
push
mov
repz
daa
xor
roll
push
outsb
lods
dec
jp
xor
pop
aam
faddl
mov
ret
int3
arpl
xlat
gs
insb
gs
pop
stc
jp
jae
movsl
stos
imul
aaa
test
imul
int
sti
dec
mov
push
fiadds
cltd
rolb
popa
jecxz
and
movsb
dec
mov
cld
jecxz
push
sahf
loope
movsb
add
test
mov
lret
std
loope
push
jecxz
jecxz
das
cmp
loop
mov
aad
sti
dec
dec
outsl
cmp
dec
shl
in
daa
adc
mov
ud2
jecxz
nop
adc
movsl
fwait
lret
xchg
sbb
pop
jg
movsl
cmp
mov
dec
sti
sarb
fdivrl
pop
repnz
jo
mov
insl
push
jge
or
sub
fsubrs
cmpsl
jecxz
and
or
imul
sub
add
gs
push
or
jp
push
xor
pop
test
and
dec
mov
inc
mov
adc
mov
cmp
inc
and
inc
sbb
pop
out
dec
clc
in
fcomp
lcallw
xchg
out
mov
out
aaa
jno
inc
cli
cld
or
inc
or
ljmp
lea
mov
cs
lcall
jle
and
in
aaa
outsl
push
xchg
or
sbb
insb
js
mov
test
xchg
dec
and
push
mov
mov
jae
mov
test
out
pop
mov
bnd
add
pop
mov
int
js
stos
xor
mov
xchg
into
in
out
xor
jp
sarb
pop
arpl
xchg
in
clc
sbb
or
dec
adc
add
mov
push
cwtl
or
fwait
xchg
cmp
mov
mov
or
loopne
xchg
jnp
jmp
mov
sub
fcoml
scas
aad
xchg
push
cmp
and
add
leave
sbb
in
inc
lods
outsb
stos
xchg
and
daa
fistpl
pop
arpl
repnz
lds
pop
pusha
adc
rcl
ret
mov
pushf
add
int
mov
out
pusha
addr16
pop
xchg
jno
ja
imul
clc
leave
bound
shll
xor
and
jb
std
push
xor
xchg
xor
inc
jl
pop
std
leave
inc
push
ret
stc
mov
jb
daa
loopne
xor
es
cmpsb
mov
in
lea
mov
sbb
jbe
cltd
incl
mov
mov
icebp
mov
pop
cmpsl
addb
cmp
inc
xor
addr16
scas
sbb
ret
dec
jns
sub
or
push
icebp
and
arpl
pop
mov
pop
out
sub
insb
scas
test
lahf
push
movsb
add
repnz
loopne
cmc
fs
movb
loope
adc
mov
decb
cli
xchg
mov
fcoms
clc
int3
mov
fistl
clc
rcrb
cs
push
hlt
dec
jle
repnz
enter
and
incb
int3
pop
imul
add
insb
jae
mov
jl
push
jmp
inc
xor
mov
inc
in
cs
cmp
call
cmc
xor
aam
cltd
js
and
lods
mov
mov
lock
push
push
or
ljmp
xchg
ljmp
pushf
pop
orl
cmpsb
es
dec
lahf
adc
push
pop
or
and
pop
cli
andl
or
test
add
rcrl
fnstsw
inc
sub
jbe
pushf
jmp
jecxz
jne
add
fwait
test
fs
cmpsl
fstpl
clc
in
xor
test
fwait
mov
iret
mov
push
js
mov
pushl
flds
call
mov
popa
data16
mov
xchg
sbb
mov
push
cmpsl
mov
jge
iret
cld
xchg
xlat
mov
cld
lods
mov
aas
bound
repnz
xchg
subl
test
lcall
lds
cmp
jmp
sub
push
or
mov
or
sbb
pusha
fwait
inc
inc
push
repnz
add
sub
pop
push
or
dec
jle
idivb
inc
xchg
addr16
fmuls
xor
clc
xor
jge
add
adcb
cmp
mov
es
mov
mov
fs
int3
xor
jl
sbb
js
dec
pop
push
lds
loop
popf
loopne
imul
cmp
pop
dec
jne
stos
aaa
xor
pushf
cmpsl
cmp
aas
jns
xor
inc
nop
pop
xor
pop
push
mov
mov
sub
sbb
or
xor
mov
pop
jnp
lret
xchg
mov
stos
xchg
or
les
insl
arpl
push
pushf
mov
xchg
adc
clc
mov
dec
cld
push
addl
sbb
sahf
cmp
pop
out
mov
enter
or
or
pop
enter
aaa
xchg
xchg
sbb
mov
sbb
mov
imul
adc
int
call
push
pop
mov
sub
cmpsb
cmp
cwtl
inc
ret
jne
xchg
pop
inc
int
mov
sbb
cmp
mov
push
into
lds
sbb
mov
jmp
test
or
lret
xor
jae
test
jmp
clc
cmpsl
imul
dec
add
xor
popf
adc
mov
jle
mov
xchg
lea
repz
add
and
icebp
into
cwtl
mov
es
insb
adc
shlb
cmc
hlt
push
fsubrs
mov
dec
inc
xor
mov
into
inc
dec
cmpsb
add
into
ret
popa
outsb
das
pop
pop
test
inc
xchg
mov
fdivs
mov
inc
subl
inc
jl
or
hlt
enter
rcll
jmp
pop
adc
mov
stos
add
enter
cmp
push
fiadds
xchg
push
pop
cs
push
sub
aad
mov
stc
jecxz
addr16
fistpll
pop
fdivrp
hlt
aas
dec
cld
cmc
into
dec
and
stos
daa
sub
push
xor
nop
and
repnz
mov
mov
push
rorb
lret
mov
in
mov
loope
jnp
mov
pop
pop
adc
cli
xorb
xchg
and
in
aad
into
fwait
cmpsb
imull
xchg
ret
pop
aas
sbb
dec
lock
fcompl
arpl
xchg
mov
mov
stos
jmp
adc
and
pushf
push
movsb
das
shrb
push
prefetch
popf
dec
das
dec
push
xchg
adc
fbstp
inc
insl
cld
rorb
in
mov
xor
adc
jmp
cmp
stc
xor
out
and
not
inc
js
cmpsb
testl
cmp
sbb
lock
stos
clc
int3
adcl
fiadds
dec
pop
mov
or
shl
sub
insb
lcall
mov
mov
loopne
or
or
xchg
pop
pop
jne
out
add
js
aad
pop
cwtl
es
xor
dec
ret
daa
sub
mov
xor
les
fcmovu
ss
ljmp
jnp
sbb
pop
in
addl
sbb
inc
ret
dec
into
lds
push
mov
fadds
mov
xchg
sub
out
clc
add
imull
and
cmp
jmp
ja
push
mov
loopne
lods
mov
inc
mov
xchg
outsb
hlt
sti
inc
or
xor
inc
inc
xor
or
xor
jbe
call
shlb
push
mov
popf
in
jle
cltd
sub
push
cmp
popf
xor
mov
fcomip
jno
mov
lods
add
xchg
xchg
xlat
fisttpll
cmp
loop
mov
pop
sub
or
loop
pop
sbb
adc
pop
push
xchg
aas
repnz
push
pop
hlt
sub
iret
test
sub
outsb
lods
push
into
cs
mov
mov
loope
sbb
jle
hlt
stos
andl
add
jge
ret
push
lret
sbb
stos
ja
popa
mov
mov
sub
lods
scas
sbb
push
bnd
inc
mov
sbb
push
in
ja
jno
xlat
mov
out
cmpb
mov
imul
mov
sub
lret
mov
arpl
pop
mov
jecxz
jle
cmpsl
mov
cltd
pop
inc
ja
or
aam
std
sbb
xchg
mov
mov
xor
pop
or
sbb
cmp
fcomp
or
mov
add
roll
fnstcw
mov
fdivp
sti
mov
cmpsl
jle
xchg
push
imul
loopne
dec
add
repz
mov
in
std
out
xchg
inc
loopne
fsubs
pop
das
or
lock
sbb
shll
pop
jmp
dec
pop
inc
xchg
popf
sbb
xor
fisttpl
cmc
ret
cwtl
push
inc
dec
cmc
push
insl
jno
mov
pop
lock
jno
decb
inc
sbb
sbbl
orl
cwtl
mov
insl
adc
iret
jmp
mov
cmp
pop
imul
pop
cmp
loop
sbb
lods
das
fnstsw
cmp
mov
leave
addl
loopne
les
rcr
sbb
aam
fisttpl
add
push
aam
adc
js
loope
sub
into
insl
push
fs
aad
mov
inc
jno
aaa
hlt
call
add
push
pop
call
dec
mov
mov
push
fistpll
sub
mov
inc
jb
mov
out
stos
push
xor
jno
repnz
push
aad
ret
mov
cmp
out
sub
xchg
mov
mov
inc
xor
fxch
jne
sbb
xchg
fidivrs
jmp
inc
aad
fstl
cwtl
dec
fdivl
aaa
add
add
inc
sbb
loopne
mov
jae
stc
push
xchg
imul
imull
mov
daa
inc
jo
push
insb
cmp
repz
add
sub
jle
mov
cmp
sbb
mov
xchg
pop
inc
push
dec
test
xor
int
fcmovnu
dec
cmc
subl
cmp
std
push
add
daa
cli
outsl
xlat
jle
mov
sub
lahf
xor
sarb
lcall
out
jns
int
call
push
push
test
jbe
adc
xor
imul
sub
sub
imul
ja
pop
scas
push
mov
in
inc
adc
pop
outsl
outsl
loopne
out
outsl
mov
in
xorl
jmp
or
in
pop
xchg
sub
xchg
jne
jae
or
mov
jecxz
pop
scas
test
jle
out
inc
push
pop
clc
jp
sbb
dec
pop
imul
test
jl
lahf
out
and
rcr
or
push
pop
xchg
or
jb
push
push
stos
and
sar
sbbb
mov
ss
jmp
icebp
push
orl
dec
je
pop
leave
mov
je
jbe
pop
or
gs
jge
xchg
test
imul
push
xchg
cwtl
pop
or
jmp
test
sbb
cmp
scas
in
sbb
jmp
clc
mov
mov
adc
pop
mov
jno
inc
jnp
mov
sub
nop
fld
test
inc
subl
pop
adc
es
xchg
test
mov
push
pop
cmp
mov
fwait
pop
xor
push
cmp
pop
mov
mov
jmp
pop
ds
pop
into
dec
inc
jo,pt
and
scas
push
pop
push
gs
in
aas
sbb
sub
imul
je
insb
lret
lods
mov
xor
xchg
mov
add
mov
sub
jnp
inc
xchg
push
ljmp
hlt
xlat
mov
push
insl
or
add
out
or
or
or
or
outsb
pop
test
jl
lods
pop
adc
mov
dec
xchg
loope
inc
iret
jl
sbb
out
jmp
daa
dec
jmpw
in
pop
xor
mov
jmp
fisttps
jnp
rcr
push
scas
das
sub
mov
sbb
xchg
dec
fwait
push
cmp
pop
dec
lock
and
push
pop
jecxz
pop
adc
fimull
xor
aas
je
std
jbe
dec
mov
jp
sub
push
rolb
stc
cmpsb
out
mov
popf
stos
enter
cs
dec
mov
cli
pop
cmp
jl
ficompl
or
add
sub
inc
add
int
cmpb
add
and
add
sar
imul
popf
dec
jmp
pop
inc
movsl
mov
pop
pop
sbb
lock
sbb
adc
mov
sub
cmp
orb
test
pop
data16
orb
dec
test
sub
ret
mov
jbe
sub
mov
push
or
xchg
or
sahf
outsb
in
in
inc
je
jmp
cmp
in
orb
xor
or
jo
popa
pop
cli
icebp
sub
fadds
push
lret
xchg
arpl
xchg
inc
aam
add
and
shll
adc
cmc
cltd
cmp
inc
sti
icebp
mov
imulb
or
leave
cli
dec
in
rorl
dec
leave
add
jo
es
push
loop
xchg
fwait
or
dec
pop
mov
cmp
adc
mov
push
mov
jle
add
cmp
ss
inc
xor
xchg
inc
mov
cmp
xor
fidivrl
lret
xchg
shll
nop
out
cs
mov
aam
insl
popa
incl
jbe
movsb
fwait
aad
arpl
cmp
mov
cmp
andb
in
pop
pop
out
mov
sub
rol
leave
imull
sub
out
mov
jle
jp
xchg
fistpll
add
jge
sub
xchg
jg
mov
sub
cli
mov
jecxz
xchg
adc
xchg
icebp
fdivs
cmp
cmp
pop
mov
pop
insb
pop
xchg
mov
xchg
sbb
xor
loope
adc
cmp
cltd
or
andl
jle
jecxz
hlt
into
sub
and
jne,pn
sbb
inc
jp
or
adc
lahf
xchg
pop
mov
add
lcall
out
jno
cmpsl
inc
xor
and
mov
sub
mov
cmp
stos
or
cmp
xchg
lock
mov
ljmp
and
pop
add
adc
mov
ss
aam
negl
inc
imul
mov
inc
mov
dec
jb
lds
and
and
repz
dec
adcb
test
fadds
jp
sbb
xchg
imul
xchg
data16
test
flds
orb
popf
pushf
das
movb
lods
outsb
insb
in
push
or
loope
test
pushf
out
push
pop
pop
in
sbb
clc
and
std
testl
add
stos
sub
sub
into
mov
mov
push
push
scas
dec
push
add
sbb
outsl
repz
sbb
mov
lcall
pop
pop
mov
and
sbb
mov
mov
jmp
pop
pop
aaa
xor
push
cmp
mov
adc
xor
xlat
xchg
fcompl
or
sbb
sbb
mov
sahf
stos
mov
js
pop
mov
pop
ret
push
inc
out
ljmp
or
out
inc
into
add
adc
sahf
out
out
jecxz
popf
lea
mov
das
pop
rorb
inc
cmc
cmpsl
addb
add
daa
lods
stc
test
out
lret
cmp
add
std
cmp
insb
stos
inc
into
fwait
or
lock
jae
fcmovbe
insb
and
xor
mov
inc
mov
dec
es
cmpsl
lds
push
in
mov
lea
lret
and
pop
dec
sub
jl
mov
mov
cltd
scas
cmpsb
or
cmp
sbb
out
or
fistl
fdivrl
mov
or
sbbl
xchg
imul
sbb
xchg
decb
fisttpll
pop
push
xchg
xor
imul
and
mov
leave
cmp
inc
pop
testl
adc
icebp
jb
sub
cltd
dec
adc
pop
out
fisttps
jle
pop
int
movhps
mov
cltd
fs
mov
sbb
cltd
pop
adc
xchg
fsts
mov
dec
test
adc
mov
sar
sub
xchg
sub
lcall
cltd
jle
cmp
cmp
ret
mov
jns
ja
sbb
clc
repz
pop
fistl
xor
mov
cld
inc
lods
and
and
ljmp
fcomi
in
push
fisubrl
push
fildl
add
imul
addr16
pushfw
and
xchg
fprem
iret
inc
pushf
and
shll
adc
sbb
pop
movsb
jp
inc
test
pop
div
mov
or
shr
adc
cmpl
or
mov
cmp
dec
pop
sahf
sub
mov
fsubl
test
pusha
or
inc
dec
repz
xor
pusha
inc
push
std
push
push
mov
and
jl
mov
loop
or
dec
test
lcall
push
jno
or
aas
ftst
push
xor
lret
mov
push
rcr
and
cli
repnz
adc
je
push
lds
and
pop
pushf
inc
mov
iret
mov
add
adc
sub
clc
push
int3
mulb
push
mov
stc
movsl
icebp
or
inc
mov
pop
loopne
cli
push
lock
xor
jb
sbb
cmpsb
inc
int3
imul
fcmovu
and
stc
push
insl
fbld
inc
xor
imul
andl
subps
popf
lods
mov
mov
pusha
cmp
mov
cmp
xlat
cmp
jge
xor
mov
inc
lods
sub
dec
int
push
mov
mov
jmp
mov
xchg
add
sarb
pop
es
jb
sbb
jno
out
sub
mov
insb
jb
pop
or
cmp
lret
adc
fnstcw
sub
mov
lret
addr16
cltd
aam
dec
add
xchg
fnclex
pusha
pushf
out
fstpt
mov
stos
and
ret
or
xchg
out
int3
and
hlt
sub
scas
flds
push
push
int3
pop
and
or
popa
dec
stos
shlb
das
and
repnz
mov
jp
loopne
cs
fwait
dec
test
hlt
mov
out
sbb
fsubl
lret
stos
sbb
adc
fiaddl
pop
or
push
stc
sub
add
xor
xchg
sbb
popf
pop
mov
out
pop
arpl
mov
jmp
cli
xlat
inc
stos
inc
and
or
dec
adc
imul
mov
test
mov
fs
into
fmull
dec
lcall
sti
fisubrs
mov
mov
pushf
pop
test
xor
repnz
adcb
leave
push
mov
lcall
add
jne
inc
in
rcr
mov
push
xchg
cmpsl
push
addb
lds
inc
pmulhw
scas
bound
rcr
pop
push
or
fstps
pushf
and
push
dec
sbb
or
dec
inc
xor
bound
add
fsubs
fimuls
cmp
mov
jecxz
movsb
mov
imul
sub
adc
adc
mov
add
or
pushf
jo
xchg
out
sub
test
pop
or
mov
jo
mov
sub
sbb
pop
mov
outsb
shlb
movsl
mov
rclw
pop
repz
inc
mov
dec
aas
hlt
divb
rcrb
mov
jne
sub
enter
fsubr
in
repz
mov
ss
cmc
xchg
pop
inc
sub
sub
mov
fidivs
mov
xor
ss
jmp
pop
xlat
jns
push
jmp
cmp
orl
insl
pop
mov
movsl
dec
iret
nop
std
arpl
outsl
stos
sub
mov
add
ja
cli
shll
in
mov
addb
pop
xchg
add
jnp
ret
les
and
add
movsb
aas
pop
jne
push
inc
nop
pushf
xchg
add
dec
outsl
incl
jmp
xchg
or
loope
cmpl
nop
mov
mov
iret
ja
mov
xor
sub
add
inc
xor
mov
lret
les
lret
popf
sub
shll
lcall
inc
negb
movsl
sub
nop
popf
cmp
les
mov
jae
lret
adc
roll
sbb
sbb
aam
xchg
mov
dec
lret
rorl
xchg
push
inc
xchg
mov
cmpb
cli
jno
mov
xchg
mov
and
lret
mov
adc
xchg
mov
mov
pusha
adc
sbbb
or
dec
xor
jmp
cltd
jo
lds
push
sub
imul
jnp
adc
dec
or
cli
cmpsl
arpl
mov
cld
cmp
push
fcomps
add
fsubl
sub
cmpsl
popf
and
pushf
push
shrb
jbe
push
setl
inc
push
dec
scas
pop
movsb
inc
stc
xor
xor
dec
sub
int
pop
call
call
in
ja
enter
mov
movsb
fs
mov
je
out
lea
push
mov
dec
loop
maxps
adc
sub
sbb
sahf
adc
or
enter
dec
lods
int3
dec
gs
lret
insb
lock
int3
es
xchg
mov
insl
fstl
nop
push
test
gs
push
popa
movsl
inc
inc
inc
cli
mov
icebp
cmpsl
push
addb
dec
sub
push
loopne
lods
cmp
jae
jb
xchg
outsl
mov
sub
cmpsb
xorb
daa
clc
lret
sar
adc
pushf
rcrb
mov
fidivrs
das
mov
nop
xlat
and
hlt
push
push
lock
sbb
iret
sub
push
sbb
jecxz
imulb
leave
test
pop
mov
dec
inc
push
lock
mov
inc
push
mov
xchg
movsl
pusha
jnp
mov
icebp
andb
xchg
mov
lcall
sbb
adc
fbld
jnp,pt
es
sti
lret
pop
inc
aam
pusha
add
fmull
mov
cmc
fldcw
cmp
push
in
mov
or
adc
loop
ljmp
es
rcl
mov
dec
or
sbb
xor
dec
lcall
cmp
sahf
ds
or
xchg
leave
fists
lods
testb
xchg
xchg
ja
xor
fdivl
decb
mov
daa
jne
xor
out
stos
rcl
dec
push
dec
xor
ss
scas
cld
fisubrs
lcall
xchg
int3
scas
push
mov
out
pop
test
mov
or
das
and
xchg
sub
mov
jl
xor
sub
out
push
xlat
fildl
sahf
ja
test
mov
stos
and
lret
jl
lcall
jge
mov
inc
jae
mov
pop
or
mov
fdivrp
jecxz
ror
pusha
jp
out
adc
out
mov
mov
fldcw
xchg
add
mov
and
cmp
fldcw
inc
adc
mov
arpl
orl
xor
jge
daa
addr16
adcl
xchg
cmpsl
int3
pop
push
sbb
repz
adc
fisubs
mov
js
pop
scas
jno
mov
lods
adc
sbb
scas
inc
add
lret
adc
pop
mov
lahf
jle
xchg
movsl
jg
aas
adc
cmp
lods
sbb
iret
pop
lock
hlt
jbe
out
popa
sahf
lret
inc
aas
xor
sub
mov
inc
imul
jp
cmp
jp
mov
negl
xlat
in
test
cli
std
xchg
add
movsl
push
push
fdivrl
outsb
cmpsl
repz
sub
in
or
inc
and
adc
fwait
dec
rorl
inc
and
fildl
ror
bound
or
xor
mov
inc
pop
mov
dec
fdivs
icebp
daa
adc
sub
mov
sbb
mov
xchg
mov
and
push
es
add
rorb
lods
mov
jecxz
xor
mov
fnsave
and
fildl
loop
add
fbstp
pushf
aad
inc
mov
xor
or
rolb
jbe
inc
pop
in
or
jne
push
add
imul
jmp
jle
int
adc
mov
xchg
push
lcall
and
mov
sarl
daa
int3
adc
stos
push
scas
mov
repz
sub
pop
sbb
cld
inc
jnp
sarb
xor
sub
xor
cmp
test
dec
add
idivl
or
xor
sarl
dec
lret
loop
xchg
scas
aad
call
inc
or
test
or
or
cli
and
pop
inc
dec
js
cmpsb
arpl
add
pushf
sbb
popa
xchg
push
out
jb
in
pop
lcall
iret
sub
push
lock
adc
mov
bound
fwait
mov
pop
push
orl
das
xchg
loope
jmp
or
fnsave
adc
hlt
and
or
fadds
ret
loop
outsl
ficoml
cmpsb
push
mov
jge
mov
push
repz
jae
mov
popa
dec
push
subb
xchg
xor
jmp
xchg
andb
addr16
jne
mov
push
or
pop
sarb
ret
mov
jle
and
dec
shl
sarl
jnp
mov
lods
aaa
repz
adc
fs
sti
mov
sub
push
arpl
sub
push
ret
dec
dec
in
mov
notb
jg
jp
push
aas
jno
sub
or
cmp
mov
push
push
sub
mov
xor
pop
movsb
nop
or
rorb
movl
adc
push
cld
aas
movsl
mov
cmp
daa
adc
pusha
mov
insl
js
sbbb
mov
mov
pop
adc
movsl
shrl
icebp
repz
mov
sub
cs
mov
jno
jae
sub
xchg
fidivrs
outsl
cmp
inc
clc
ds
inc
pop
mov
cwtl
inc
mov
sbb
lret
xor
in
dec
xor
or
pop
sub
cld
dec
ss
adc
xor
hlt
stos
sti
cwtl
iret
jge
out
rcll
pushf
cmp
shrb
or
lahf
jo
jecxz
xor
fdivrp
inc
ljmp
pop
sub
test
outsl
dec
cwtl
lock
push
jno
and
xchg
outsb
fisubrs
in
je
ficomps
das
test
and
cmc
in
hlt
loopne
pusha
notl
cmp
mov
or
cmp
bnd
push
cld
jb
jns
rcrb
pop
cmp
mov
mov
stos
cmp
shrl
cmpsb
mov
in
push
pusha
fwait
cmc
in
adc
dec
mov
lret
aas
add
ret
xor
icebp
cmp
pop
or
popf
das
mov
add
push
and
and
pop
cwtl
ret
cmpsl
mov
cs
popa
cmp
xor
in
and
xlat
or
lea
mov
and
int
pushf
push
imul
dec
ds
fnstenv
dec
pop
lea
mov
daa
addr16
mov
cltd
aas
int
sub
pop
add
pop
int3
imul
push
in
pop
fists
sub
popa
xchg
lods
mov
andl
xor
ret
add
cwtl
imul
push
in
mov
cmp
xor
xchg
and
mov
ljmp
pop
lods
or
or
fwait
mov
mov
cmp
test
shrl
pop
sahf
xor
xor
icebp
pop
mov
add
jo
out
xchg
xor
xor
and
jge
pop
jmp
pusha
movsb
loopne
daa
mov
js
stos
stc
xchg
push
out
pop
fidivs
and
outsl
push
int3
cs
out
test
cmp
and
dec
push
mov
mov
rol
shl
loop
or
loope
cli
or
in
test
imul
add
cmp
jno
stos
dec
cmp
adc
mov
lea
adc
bound
dec
call
cld
mov
xor
adc
mov
jg
iret
mov
jb
movsb
cwtl
rep
cmp
pop
sub
dec
jb
and
sbb
and
and
call
jo
dec
popf
jo
xchg
jmp
mov
sub
mov
mov
sbbb
push
mull
movsb
inc
pop
mov
rclb
out
shr
push
fwait
dec
add
mov
push
and
sbb
int
push
sbb
push
lods
pop
dec
add
into
rcrl
dec
cmpsl
xor
adcl
ds
orb
xor
sahf
cmpsl
je
outsl
jo
arpl
pop
andl
sub
mov
cmp
jle
cwtl
sbb
lret
mov
cmc
stos
push
aas
mov
movsl
or
jne
add
cmp
mov
imulb
push
dec
nop
xor
jecxz
scas
movsb
movsb
mov
fisubl
mov
jle
push
mov
jmp
mov
mov
aas
fstpl
mov
rcrl
push
std
mov
loope
or
std
inc
cmp
xchg
or
rcl
sbb
outsb
jg
cmp
xor
xor
mov
loop
jmp
nop
push
adc
mov
jmp
sbb
push
iret
mov
ret
mov
mov
cmc
out
dec
ret
push
pop
xchg
ret
and
push
adc
subb
sbb
ret
enter
test
in
js
jmp
sbb
xchg
leave
cli
inc
push
mov
mov
push
pusha
xor
mov
add
cmc
or
cld
or
inc
fwait
in
lods
loop
ret
movsl
pop
push
daa
jae
out
es
jle
neg
dec
lds
call
xchg
mov
sbb
adc
cmc
not
stc
ds
mov
dec
rorb
sahf
push
popf
add
mov
icebp
or
xor
xchg
jle
push
repnz
call
idiv
or
inc
addr16
les
shl
add
into
jbe
adc
mov
mov
dec
inc
xchg
in
ss
pop
pop
ljmp
add
js
fcoms
mov
mov
icebp
insl
mov
sbb
inc
stos
sbb
sub
movsb
call
pop
repnz
fidivrl
xor
divl
inc
add
scas
dec
sbb
and
adc
shrb
jnp
mov
clc
int
outsb
inc
xchg
mov
and
inc
jb
das
testb
dec
iret
sub
movsb
stos
addr16
dec
cmpsl
sbb
sub
mov
mov
fbstp
sahf
mov
dec
xchg
mov
scas
mov
loopne
mov
ss
outsb
dec
mov
add
fiaddl
adc
icebp
aas
pushf
jb
repz
cwtl
mov
out
or
dec
out
loop
es
mov
inc
sbb
mov
pop
mov
orl
popf
in
pop
out
pushf
fwait
scas
mov
fdivrl
and
add
inc
dec
pop
mov
xlat
fwait
push
inc
lcall
mov
imul
jl
mov
or
or
scas
sbb
orb
cmpsb
movsl
push
fistpll
out
dec
lds
popf
sahf
xchg
adc
loopne
idivb
lods
stos
xor
lret
pushf
or
adc
mov
cld
aaa
xchg
jmp
cmp
xor
adc
mov
dec
or
mov
or
or
out
xchg
mov
xor
imul
scas
push
adc
in
mov
sti
addr16
mov
leave
icebp
jp
in
push
negb
in
cld
push
mov
aas
je
or
mov
xor
add
cli
xor
mov
xlat
mov
pop
jo
jp
lret
sub
lcall
ret
sub
filds
scas
sbb
or
out
fimull
push
push
push
popa
sub
loop
mov
cmp
pop
and
mov
jp
es
mov
fldt
nop
dec
test
or
aas
push
xor
xor
out
mulb
add
andb
xor
fisttpl
repz
and
ficoml
sub
fsubrl
loope
or
clc
pop
cmp
lahf
xor
push
cmp
fcoms
in
lock
mov
imul
push
jp
dec
dec
decb
xchg
inc
rcrb
shll
mov
dec
push
inc
nop
xor
push
xor
scas
jb
aad
and
mov
push
sbb
fisttpl
push
or
cmp
sub
mov
dec
cmpb
bound
jle
pop
jno
fisttpl
xchg
in
or
jns
inc
or
mov
jecxz
sbbl
lcall
fs
adc
cmc
sub
mov
fmull
hlt
das
xlat
lds
stc
repz
jno
bound
fisubs
int
adc
push
and
sbb
mov
pushf
scas
jbe
sub
gs
call
stos
push
enter
fs
leave
sbb
loop
and
jo
add
stos
dec
inc
es
adc
hlt
sarb
mull
andl
js
pop
dec
add
xchg
test
arpl
stos
int
sbbl
mov
push
or
outsb
and
pop
lods
mov
call
adc
xor
or
jbe
inc
imulb
nop
or
mov
xchg
ret
dec
mov
mov
rcrb
mov
loopne
inc
inc
js
jg
in
mov
xor
or
gs
aas
inc
test
xchg
push
jmp
and
dec
sbb
mov
inc
push
cld
ret
xchg
paddsw
lret
jb
jno
inc
mov
into
dec
mov
imul
out
mov
and
ss
jmp
jge
lret
rol
cmp
mov
stos
mov
clc
rcl
outsl
inc
push
icebp
ljmp
addb
sbb
jb
mov
fmull
cmp
in
icebp
adc
test
out
mov
adc
hlt
jp
jb
mov
xor
sbb
popa
addr16
push
in
je
mov
subl
loopne
push
mov
test
pushf
lock
scas
xor
icebp
fcoml
pop
xchg
ljmp
je
mov
pop
xor
pop
out
int
stc
and
sub
mov
pusha
rolb
add
mov
aam
sub
adc
je
lcall
xor
in
test
pop
mov
adc
and
mov
aam
sbb
fstps
aas
mov
int3
fnstsw
add
add
and
daa
dec
or
adc
aas
and
mov
daa
nop
dec
add
push
dec
fidivrs
xor
mov
test
add
pop
or
in
inc
push
shr
out
ljmp
bound
xor
mov
jns
mov
int3
or
icebp
mov
hlt
push
ss
ficomps
pop
inc
xchg
dec
jecxz
jmp
dec
xchg
push
cwtl
sbb
add
out
and
jne
pop
scas
pop
popf
pop
in
cwtl
dec
pop
inc
outsl
push
jae
cld
mov
bound
jp
mov
lret
add
and
pop
and
push
pop
das
test
andl
mov
lahf
insb
mov
data16
stos
idivb
orb
push
cmp
imul
orb
and
push
test
sub
nop
jecxz
lds
adc
pop
mov
push
pop
or
or
cmp
pop
sub
test
or
mov
dec
call
adc
xchg
cmp
jbe
lahf
xchg
add
clc
into
jae
mov
lahf
and
stc
or
ds
and
int3
movsb
jmp
mov
scas
add
pop
push
ljmp
push
hlt
jl
mov
fcmovnbe
movsb
inc
dec
jns
dec
xchg
int3
dec
aas
dec
push
inc
and
clc
add
xchg
xor
or
gs
inc
pop
mov
jge
jecxz
lea
pop
and
dec
lret
sub
mov
ret
cmp
aaa
sbb
je
pop
cmp
test
lods
outsb
mov
lock
stos
adc
cmp
outsb
lock
push
cmovg
mov
jge
flds
int
inc
sbb
call
das
adc
push
adc
dec
pop
cmp
push
cld
mov
xchg
andl
dec
dec
jbe
scas
mov
push
ret
xor
push
test
adc
pop
lods
out
xchg
cmp
repz
pop
pop
loopne
mov
jns
shll
sub
cld
xchg
add
mov
xchg
push
jp
sbb
sti
ret
lea
ljmp
jp
add
pop
dec
jge
int3
scas
cmp
pop
mov
test
jecxz
hlt
sub
mov
mov
adc
mov
fiadds
sbb
scas
call
loop
test
lods
fcompl
mov
jno
nop
jmp
push
outsb
hlt
xor
popf
inc
pop
xchg
jle
shll
das
dec
lret
das
call
cwtl
dec
push
mov
cmpsl
std
loop
repz
add
sarl
inc
or
lods
push
rcll
sub
into
sub
lods
push
insb
adc
leave
cmp
jecxz
or
mov
nop
loop
inc
insl
jmp
xor
inc
dec
popf
in
roll
rol
rolb
mov
insb
inc
cmp
adc
andb
jae
xor
stos
and
mov
fsubs
mov
xor
jns
lahf
inc
stos
ficomps
ja
xchg
movsl
jg,pn
sub
push
out
pop
cvtps2pd
jne
push
je
cli
bound
frstor
jp
cmc
push
add
mov
xlat
outsb
add
inc
int
test
loope
adc
cmc
mov
aam
and
out
dec
adcl
aas
cmp
dec
or
in
xchg
mov
fistpl
loopne
lods
cli
mov
xlat
cmp
lea
lds
sbb
dec
sbb
pop
mov
adc
cwtl
jnp
jmp
xor
fstps
sbb
loope
jmp
cmp
sahf
faddl
pop
add
mov
cmc
jns
xchg
jns
inc
jmp
incl
sub
negb
sub
cmp
jp
in
or
sub
lods
add
outsb
or
mov
lock
mov
cmp
lds
sahf
clc
nop
dec
jbe
ret
cs
xchg
shll
mov
sub
sub
sarb
cmpsb
sysenter
mov
inc
mov
add
or
cmp
adc
sub
push
ret
jae
push
jae
ja
push
jl
pushf
pop
push
jle
cmp
push
xchg
mov
ficoml
aad
cmp
movsl
jle
test
in
test
test
pop
lret
daa
int
mov
cmp
loop
cmp
inc
movsb
dec
add
xchg
lds
cld
mov
cmp
shlb
push
fistl
mov
sbb
test
sub
pop
pop
sub
pusha
sbb
or
es
stos
jle
adc
inc
push
add
cwtl
in
mov
pusha
push
stos
lcall
outsb
insl
jl
addb
push
cmp
mov
fstpt
jb
push
dec
push
and
mov
fidivrl
jae
sub
pop
xor
inc
pop
sbb
insl
test
jp
inc
jmp
js
sub
or
sub
fnstenv
enter
and
out
pop
sub
dec
shl
cmp
les
cmpl
cmp
pop
testl
orl
cltd
popf
jg
mov
mov
mov
xchg
mov
sbb
arpl
sub
out
mov
xor
cmp
sbb
push
add
mov
dec
movsl
add
add
stc
mov
xor
adc
inc
and
sub
cli
nop
in
cld
lods
sbb
je
out
dec
and
pop
mov
xchg
loopne
inc
inc
scas
mov
and
sub
mov
mov
aam
jno
bnd
xchg
hlt
sbb
loop
sub
fcmove
mov
lahf
idiv
add
mov
in
test
push
adc
and
jb
mov
std
lret
inc
xchg
inc
sub
iret
inc
adc
push
lahf
add
subb
xor
ficoms
lock
sub
pop
pushf
ficompl
adc
mov
shrl
std
or
sub
jp
dec
cs
inc
andl
imul
js
jnp
jp
and
dec
add
dec
pop
shrl
cmp
cmp
lea
arpl
pushf
movb
xchg
xor
arpl
iret
negb
das
inc
fcompl
adc
popa
hlt
add
ljmp
mov
cmpl
in
or
cs
add
xchg
jae
fsubs
mov
rorl
les
push
mov
paddq
fsubrs
pop
mov
fisubrl
xorl
xchg
sub
pusha
int3
lret
test
or
pop
sahf
pusha
sbb
dec
pop
dec
out
jg
incb
and
jnp
push
mov
aaa
lods
rcl
jo
jle
or
and
in
inc
sbb
arpl
cmp
aad
jecxz
inc
xchg
jae
mov
imul
seta
mov
imul
roll
sub
dec
shll
cli
push
mov
addr16
lods
jns
push
sub
jbe
call
push
inc
jmp
xor
ret
insb
add
roll
aam
rorl
sub
pop
adc
outsb
dec
arpl
fsubr
push
xor
pop
fists
jp
cli
mov
lahf
adc
imulb
or
sbb
andl
sarb
std
cs
push
in
inc
mov
push
icebp
test
int
mov
push
out
test
or
in
lods
add
cmpsl
mov
aam
lock
ficoms
js
add
mov
lods
fbstp
mov
pop
jg
add
mov
adc
pop
shlb
das
and
or
adc
pop
or
push
clc
scas
xchg
dec
cld
out
add
sarb
push
lahf
in
jl
sbb
rolb
icebp
push
movsl
push
ss
leave
push
outsl
ret
arpl
dec
inc
shrl
inc
mov
push
xchg
jle
mov
mov
cmp
bound
dec
out
aas
mov
jb
loopne
loopne
pop
repz
jecxz
repnz
sub
outsl
mov
pop
nop
mov
dec
setns
incl
xchg
int
jnp
lds
xchg
mov
jnp
inc
lret
enter
mov
push
push
xor
or
ficomps
or
mov
ret
cmc
cmpsl
mov
das
rcl
inc
add
push
xchg
push
lahf
adc
ja
or
stc
rclb
add
or
cld
jl
test
js
and
je
add
mov
mov
jg
pop
cmp
bound
shrb
mov
fadd
sbbl
push
mov
lea
stos
add
or
out
push
aad
cld
sbb
mov
lcall
movsl
inc
sub
cwtl
das
xor
mov
xchg
mov
pop
cmp
xchg
mov
jns
push
leave
aad
mov
aam
jecxz
push
out
outsb
test
addl
aaa
mov
lods
push
testl
imul
stos
inc
mov
clc
nopl
push
out
mov
fwait
das
xor
jl
add
push
xchg
scas
pop
or
jge
jno
cld
push
loope
adc
dec
jb
mov
push
jne
int3
sbb
sbb
dec
insl
das
and
or
lods
in
int3
xor
ret
push
test
mov
mov
pop
int
movsl
pop
jl
out
rcr
mov
xchg
stc
iret
ret
push
fldcw
xchg
mov
xchg
and
pop
mov
and
xor
sbb
push
mov
cmp
xchg
pop
xchg
negb
mov
xor
stos
orb
mov
mov
jg
mov
bound
or
fcomps
cld
adc
xor
adc
mov
xchg
movsl
push
lret
add
cmp
jb
sub
out
xor
into
mov
adc
ljmp
add
xor
inc
lahf
lods
pusha
std
pop
icebp
or
mov
push
lods
iret
lcall
ljmpw
repnz
lods
in
in
and
pushf
in
mov
in
leave
gs
dec
jle
arpl
xchg
add
test
sbb
jns
jns
pop
mov
inc
popl
ret
fs
and
inc
int3
fnstsw
movsl
mov
push
insl
push
insl
or
inc
pop
add
jge
in
mov
pop
out
push
push
or
clc
adc
add
jecxz
jle
cmp
mov
mov
jmp
sbb
call
hlt
loope
inc
push
pusha
mov
cmp
sti
cwtl
mov
xchg
hlt
push
push
and
repnz
jge
pop
dec
negl
xor
stos
aas
fbstp
xor
sahf
cmp
xlat
sar
test
bound
and
or
xor
jg
push
dec
mov
pop
sbb
shl
fs
sahf
push
dec
ret
mov
mov
push
sbb
mov
mov
jno
mov
inc
in
pop
das
movsb
jbe
push
adc
daa
cwtl
mov
xor
jecxz
popa
pop
and
cmp
or
mov
and
cmp
sub
ljmp
ret
jge
pop
jb
mov
xchg
les
mov
scas
je
lds
xor
and
shl
pop
mov
outsl
stc
and
mov
jne
test
xlat
sub
inc
rcrb
inc
cltd
in
xlat
nop
fdivrp
add
mov
sbb
dec
jns
mov
or
jns
cmp
mov
flds
ja
mov
and
push
pop
icebp
inc
in
sahf
xor
icebp
dec
add
inc
cmc
pop
fldcw
repnz
xor
rcr
aas
adc
adc
adc
fs
and
sbb
sbb
loope
dec
negl
jne
dec
insl
pop
inc
lea
loopne
bound
jno
and
sub
call
in
cmc
xchg
mov
adc
xchg
or
roll
shl
adc
cmp
jo
in
lcall
and
lods
cmpb
jp
stos
inc
stos
mov
stos
stos
adc
test
repnz
mov
cmp
adc
sub
jb
sbb
lahf
je
mov
cmpsb
lret
lret
sub
cmpsl
or
inc
push
icebp
call
cmp
mov
xchg
popa
or
pop
push
jae
sbb
imul
in
cmp
or
mov
mov
xchg
add
sbb
jl
lcall
xchg
lods
aam
mov
sub
pusha
add
or
mov
dec
stos
xor
cwtl
out
mov
pop
dec
mov
stos
repz
inc
rclb
sbb
mov
mov
je
mov
sbb
dec
add
inc
mov
shlb
fcoms
mov
cli
sbb
hlt
xchg
aad
lock
mov
xchg
stc
fistpll
adc
repnz
fcmovb
popf
push
adc
loop
adc
in
dec
jmp
or
test
inc
mov
les
sahf
scas
cmpsl
dec
push
jns
cwtl
mov
jo
ja
fists
sub
xchg
add
sbb
inc
add
sahf
addr16
mov
jl
popf
cmpsl
repz
mov
mov
fnstenv
fnstcw
jno
aad
dec
les
test
insl
sbb
cli
dec
fstl
jbe
or
jno
data16
sbb
cmp
cmc
iret
dec
xor
dec
and
pusha
jle
lds
scas
nop
mov
hlt
add
cmpsb
in
adc
pop
lahf
xchg
xchg
xchg
or
push
fdivrl
fldl
or
mov
sub
in
inc
je
xchg
jbe
xchg
mov
aaa
int3
ffreep
sahf
pop
push
lock
mov
push
test
pop
sti
pop
imul
fwait
mov
enter
test
cmp
pop
lea
fwait
sub
sub
xlat
fnsave
jne
incl
push
out
fisubrl
jl
mov
jg
adcb
mov
mov
jbe
arpl
movsl
cwtl
arpl
inc
sub
inc
into
icebp
or
rcrb
cmp
outsl
adc
cmp
mov
js
push
stos
dec
out
testl
ret
pusha
mov
leave
cmp
and
mov
mov
sbb
leave
in
and
icebp
push
cmpsl
pop
loope
pop
mov
sbb
sbb
mov
mov
or
cmp
aas
int3
cli
push
ds
jmp
push
jnp
jo
andb
add
out
mov
stos
mov
popa
in
sub
and
hlt
inc
push
mov
or
test
pop
dec
ss
imul
jns
mov
mov
cmp
push
sub
repnz
cmp
repz
rcl
jbe
sbb
and
lea
jecxz
das
daa
xor
in
mov
ljmp
add
es
pop
loopne
or
gs
add
ficomps
mov
mov
and
orl
mov
popf
sahf
jne
mov
leave
pop
into
iret
xor
sbb
and
add
aam
aam
insl
cltd
lea
cmp
nop
adc
push
mov
pop
sub
aaa
clc
mov
cmpl
jbe
push
or
fbstp
cmp
jo
and
mov
pushl
es
mov
out
out
popf
sbb
add
pop
aas
dec
push
jne
xchg
movsb
inc
insb
mov
mov
mov
dec
adc
jns
mov
xor
push
shll
mov
or
nop
dec
lds
je
in
mov
or
lret
bound
rolb
xor
cltd
xlat
cmp
mov
aas
push
jnp
scas
pop
cmp
sar
punpcklwd
xchg
outsl
sub
mov
mov
inc
cmp
jge
or
enter
pop
stos
call
pop
add
fidivl
insb
sbb
inc
scas
push
repnz
pop
jbe
gs
add
add
sahf
iret
push
add
in
add
dec
scas
push
loopne
xchg
jno
cmp
jl
cmovae
fsubs
push
pop
sahf
mov
sbb
rcr
xor
dec
xchg
mov
inc
mov
into
pop
addr16
pusha
shll
push
loope
xlat
xchg
push
in
add
cmp
cmp
fsubs
addr16
push
sbb
or
fmulp
xchg
mov
pushf
sub
push
movsb
lea
mov
fidivl
in
xchg
pop
fcomip
cmc
or
push
fcmovb
mov
cltd
cmp
and
insb
push
adc
pop
cltd
jle
jl
in
xor
xchg
sahf
fdivrl
pop
arpl
dec
mov
cmp
clc
mov
push
xorl
pop
ss
cld
vpmullw
xchg
jl
mov
or
lret
dec
jg
enter
and
in
xchg
or
lret
mov
aas
icebp
mov
xor
sbb
aaa
iret
insl
incb
xor
adc
dec
sub
je
pop
xor
hlt
mov
int3
and
jp
push
dec
pop
xchg
cwtl
in
test
movsl
out
push
push
fildll
movsl
lret
test
leave
lea
stos
jmp
lock
cmp
xchg
pop
fwait
xor
xchg
ss
pop
sahf
inc
fisubl
in
lods
fcomp
cmp
in
xor
hlt
bound
fst
lods
movsl
sbb
inc
imul
fdivs
and
test
push
iret
insb
mov
push
push
dec
lea
adc
lea
fdivrp
sub
jae
inc
imul
sbb
mov
add
in
sub
adc
and
inc
push
cs
adc
fcomip
clc
and
mov
cmc
cmp
ret
cmp
push
lcall
insb
lock
dec
mov
std
stc
ljmp
dec
cmp
xor
push
arpl
pop
pop
jne
jle
sbb
mov
iret
idivb
jb
icebp
adc
int
clc
imul
shll
shrb
aad
jbe
ret
xlat
sub
fsubl
dec
ss
pusha
repz
xchg
movsb
adc
outsb
cmp
hlt
lcall
neg
push
arpl
popf
ss
pushf
lahf
xor
aas
mov
gs
inc
lods
mov
add
sbb
loop
adc
inc
adc
loop
mov
jo
xor
mov
xchg
mov
test
add
pop
mull
ret
sub
sarb
xchg
jmp
repnz
add
fwait
popa
into
and
insb
push
into
dec
je
jg
pop
shll
add
mov
xchg
or
insb
and
dec
xchg
inc
jg
out
jne
xor
pop
add
jb
xchg
mov
add
and
rcr
xor
pusha
dec
inc
pop
xor
inc
js
mov
lds
cmp
fisubl
sub
popf
xor
mov
push
jecxz
pop
jmp
mov
stos
mov
mulw
xor
mov
in
stc
js
jbe
jmp
shlb
lds
cmp
outsb
rorb
sti
mov
enter
add
mov
aas
shll
xchg
clc
xlat
xchg
push
pop
sbb
cmc
pushf
xchg
loop
loopne
xchg
push
and
jle
mov
xor
rclb
cmp
repnz
pop
repz
push
or
sub
inc
movsl
xor
fcmovb
fsin
cs
adc
je
sti
ret
pusha
push
dec
loope
stc
pushf
pop
push
add
imul
pushf
notb
inc
or
mov
insl
add
adc
imul
sahf
inc
scas
push
je
ljmp
jmp
adc
test
jecxz
mov
adc
cmp
loope
or
pop
and
loopne
out
sbb
test
xchg
cmp
xchg
dec
push
push
pushf
push
cmp
jecxz
push
pop
lahf
fwait
and
outsb
dec
andb
dec
iret
pop
insl
push
pop
fsubr
repnz
lock
sub
pop
pusha
lret
mov
mov
pop
sbb
mov
dec
aam
bound
pop
jge
fdivr
mov
lock
pop
sbb
popf
ljmp
pop
ds
cli
rcrb
leave
cltd
pop
adc
add
clc
lods
xacquire
mov
rcrb
mov
imul
sbb
aas
in
mov
xor
mov
ret
cmp
ljmp
in
enter
pop
mov
push
test
add
inc
filds
mov
cltd
mov
cmp
insl
arpl
or
mov
mov
out
inc
inc
call
xor
lea
fsub
ret
sbb
ljmp
sub
sbbb
add
pop
jno
scas
pop
arpl
pop
es
sti
add
hlt
dec
shrb
inc
mov
sti
sub
ret
push
mulb
mov
sbb
xor
push
jo
repz
mov
mov
out
add
or
lcall
xchg
add
pop
dec
int3
pop
subl
iret
dec
popf
int3
loop
push
ss
sub
fwait
jbe
mov
push
pushf
incb
out
fstl
pop
pop
rolb
out
jp
dec
mov
cmc
inc
das
out
jmp
sbb
repz
cmp
mov
xchg
pop
mov
mov
divb
fadds
int
inc
dec
jmp
cltd
dec
jg
push
clc
lods
xchg
sub
push
mov
insb
clc
cmp
sub
pop
sub
mov
jp
sbb
xchg
outsl
daa
push
lcall
add
sbb
mov
inc
data16
push
xchg
cmp
sbb
sub
mov
push
lret
mov
pop
mov
or
push
push
lods
mov
cmp
mov
mov
daa
outsl
in
jbe
and
push
push
mov
leave
pop
test
test
and
pop
mov
ja
mov
mov
xchg
sbb
push
aas
pop
pop
mov
loopne
imul
shll
jmp
stos
lcall
adc
insb
movsb
cmpsb
xor
stos
movsl
into
inc
testl
add
xchg
xchg
loop
fsubrp
mov
sbb
or
mov
dec
cld
mov
subl
xchg
mov
stc
pusha
cmp
sbb
mov
dec
xchg
fs
popf
jecxz
push
pop
jnp
fs
jecxz
cmp
jg
mov
jno
int
ss
mov
arpl
cmc
in
bound
incl
ret
inc
arpl
mov
sarl
jmp
mov
add
sahf
cmp
ficoms
inc
jnp
inc
int
mov
std
pop
or
addl
xchg
dec
xchg
sbb
sbb
push
push
dec
enter
mov
popf
jb
push
dec
stos
cld
popa
repnz
mov
in
xorl
int
cmp
sub
and
scas
mov
mulb
enter
gs
fdivrs
jecxz
xchg
ljmp
sub
mov
fdiv
andl
push
adcb
orl
out
jl
mov
ret
pop
mov
jne
inc
push
or
xchg
mov
inc
adc
mov
sub
and
inc
fsts
fsubrl
mov
add
pushf
fcomip
loopne
aam
icebp
ljmp
mov
cli
stc
ds
ja
gs
imul
in
and
sub
repz
jns
inc
mov
imul
sub
dec
dec
ret
add
cli
stos
loope
lea
pop
cmpsl
lods
ret
in
fistpl
push
inc
push
imul
mov
jae
scas
xor
in
lret
fldt
pop
in
push
push
add
std
pop
push
jne
push
inc
push
popa
add
mov
mov
lret
movl
inc
daa
ret
data16
mul
icebp
xchg
jmp
sbb
aad
jae
shl
xchg
pop
jle
xor
mov
jae
mov
sub
sbb
lahf
out
or
xor
cli
add
add
jb
call
dec
cwtl
cmp
push
pop
data16
stc
sahf
addr16
mov
sahf
outsl
or
dec
jns
lret
cmp
xor
dec
mov
shrl
movb
inc
sti
aas
and
push
adcl
xchg
notb
out
aam
xchg
jle
or
inc
out
pop
lar
mov
mov
sub
cmp
int3
mov
sub
cmp
aad
ret
call
sbb
stos
ss
lods
out
adc
add
pop
mov
push
mov
inc
out
jns
jge
rorb
lret
fildl
imul
dec
xchg
sbb
ret
test
aad
xchg
mov
mov
sahf
adc
inc
aam
das
sahf
adc
insl
dec
test
out
aaa
xor
ret
ficoml
xchg
fdivrl
ljmp
or
mov
mov
fs
mov
stos
mov
pusha
test
mov
inc
scas
movsl
push
cli
popf
push
sub
pop
dec
cmp
inc
in
sub
fdivl
cmp
mov
inc
xchg
ret
cmp
outsl
mov
push
mov
test
jb
loope
push
inc
or
ljmp
lcall
push
adc
dec
inc
mov
aas
xchg
das
xor
jae
fisubrl
cld
pop
testb
std
sub
sti
xor
std
and
les
jg
arpl
data16
sbb
bnd
mov
shlb
mov
jle
je
loop
jl
adc
iret
fistpll
jns
sti
mov
or
inc
repnz
mov
cli
cmp
lods
lahf
xor
dec
push
pop
mov
sub
fcoms
fisubrl
daa
push
mov
loop
mov
and
fwait
gs
popa
icebp
or
fcompl
pop
fmull
stos
in
std
add
fdivl
xchg
or
subb
rcll
aad
scas
outsl
sub
push
jp
rorl
test
cmpsb
adc
shlb
inc
add
add
insl
jle
mov
lock
outsb
push
push
outsl
ja
pushl
mov
inc
gs
sbb
add
mov
sub
inc
jbe
jmp
clc
loope
inc
dec
pop
add
rol
scas
scas
popa
xor
sub
xchg
fprem1
jne
mov
rcrl
inc
clc
push
cmpsl
inc
test
loop
push
pop
sbb
adc
cmp
lret
test
push
sub
jbe
stos
fs
sub
lods
rcrl
jbe
fadd
cmp
xor
adc
repnz
push
leave
rorl
push
sbb
cltd
xor
or
gs
sbb
inc
insl
sub
or
pop
sub
dec
aaa
cli
ds
and
loop
xchg
nop
cs
push
test
lret
push
mov
cmp
or
fucomi
mov
imul
sbb
cs
sbb
mov
inc
sarb
subb
fwait
or
or
jmp
cmp
fbld
sbb
mov
push
push
inc
xor
cltd
mov
in
int
ja
mov
mov
jno
add
xchg
push
adc
adc
scas
lea
or
push
shrl
aam
jns
cwtl
mov
out
jmp
je
push
mov
outsb
dec
push
jp
pop
lods
stos
scas
jns
add
add
pop
out
xchg
rcll
sub
bound
lods
mov
lods
sub
inc
mov
dec
iret
inc
shlb
fldlg2
es
inc
lret
in
pop
into
add
nop
lds
sub
test
cli
push
lock
xchg
mov
rcll
sbb
test
sub
lea
pop
ja
clc
jmp
pop
jae
loop
adc
into
loop
xchg
jae
mov
aaa
popa
pop
sbb
cltd
lret
int3
xor
lods
mov
ljmp
inc
pop
aam
fldl
xchg
aaa
lods
cli
fistpl
mov
add
jecxz
mov
hlt
jb
cmc
and
adc
shll
dec
sub
sub
push
pop
cmp
xor
dec
adc
test
pop
or
fs
cmc
inc
ss
mov
pop
lods
push
fisttpll
ja
out
lcall
dec
outsb
jno
outsl
xor
adc
mov
int3
inc
jne
fwait
dec
test
icebp
in
cmp
xchg
scas
pop
pop
bound
std
cmp
xlat
xor
jle
push
movsb
dec
dec
jbe
shll
or
aam
dec
mov
lret
test
popl
int3
or
sbb
lret
jle
sbb
movsb
fnstcw
or
in
movsb
fiaddl
mov
test
jg
jp
aas
andl
outsl
mov
push
loopne
pop
cmp
push
mov
stos
fnstcw
repnz
push
pushf
or
xor
mov
hlt
cmpb
call
test
pusha
mov
imul
int3
adcl
jmp
sahf
sbb
jge
inc
xor
push
jns
clc
pusha
jo
push
dec
les
cltd
in
mov
dec
cltd
sbb
jae
xlat
pop
push
loop
std
xor
das
std
dec
inc
ljmp
dec
shrb
in
sbb
cltd
push
mov
add
lret
mov
jns
xor
cmpsb
sahf
test
stos
fisubs
lods
adc
popl
xor
jecxz
xchg
loopne
cs
inc
lret
sbb
xchg
das
ret
jbe
cld
outsl
or
pop
clc
add
mov
jp
loopne
cmp
testl
sub
add
mov
mov
or
xor
loope
cmp
dec
mov
sub
mov
test
mov
inc
and
push
push
mov
ret
cli
inc
pop
icebp
mov
bound
mov
in
je
icebp
data16
dec
sub
ljmp
sti
repz
lahf
sub
mull
inc
pop
jo
inc
fists
fs
sbb
scas
gs
xor
xor
xor
lods
and
les
push
sbb
gs
jb
push
int3
add
daa
jno
mov
dec
adc
seta
xor
fsubr
and
iret
fcmovnbe
xor
or
aad
pop
sub
hlt
lock
popf
dec
xchg
ja
lds
pop
call
test
shrl
mov
loope
imul
outsb
pushf
cmp
pop
mov
inc
shrl
popf
fcoml
int
stos
mov
adc
imul
add
rolb
repnz
jne
icebp
add
enter
cmovle
arpl
leave
andb
add
lret
or
lods
cmp
popa
movsl
push
mov
ret
xor
int3
push
pop
add
movsl
cld
mul
faddl
pushf
ljmp
or
repz
push
pop
mov
pop
jnp
jne
cltd
adc
insb
jno
shll
mov
jbe
adc
push
pop
dec
or
push
aaa
xchg
lods
sahf
pop
idivb
cli
xchg
dec
loope
inc
jbe
test
insb
hlt
push
lods
outsl
add
push
push
stos
xchg
xor
mov
dec
call
xchg
xchg
inc
cwtl
jp
xchg
jnp
mov
inc
outsb
in
lea
pop
and
cmpl
dec
dec
in
push
popa
mov
jp
xchg
xor
mov
insl
test
add
bound
dec
sub
out
fs
mov
aam
cmc
xor
sahf
or
sub
aam
mov
inc
mov
xor
and
call
in
lds
xchg
pop
xor
mov
sbbb
pop
pop
out
jl
sbb
push
stos
lods
addr16
shlb
lock
fcmovnu
nop
add
pop
lahf
mov
call
adc
lods
xor
push
int3
mov
jnp
aad
jo
cld
ss
fcmovu
dec
mov
rolb
repnz
cwtl
cltd
mov
ret
les
aas
stos
mov
cmpsb
jg
std
gs
mov
pop
std
mov
xor
imul
or
cmc
cltd
lds
jecxz
cltd
mov
pusha
push
adc
sbb
jecxz
sub
fnsave
sub
mov
mov
filds
pop
test
mov
push
inc
dec
jp
filds
jle
jnp
mov
and
sub
or
arpl
sbb
jg
pop
and
and
popf
sbb
je
test
inc
dec
cmp
or
lret
nop
dec
data16
jb
xchg
xchg
and
std
stc
pop
xchg
mov
js
jbe
pop
cmp
mov
cmp
fsubl
jecxz
insl
push
aaa
testb
sahf
sub
sbbl
jno
xor
and
mov
mov
ret
and
push
nop
aad
add
ja
idivb
push
sti
mov
jmp
jns
jle
or
popf
jle
push
pop
inc
mov
cld
hlt
xchg
into
les
aam
add
cs
imul
push
add
inc
jmp
and
arpl
test
ds
in
mov
pop
jnp
or
cltd
sbb
loopne
out
in
jl
decl
push
cmp
cmp
icebp
xchg
out
inc
xor
push
mov
stc
add
insl
mov
inc
push
xchg
nop
cmp
push
dec
fadd
add
push
outsb
or
arpl
push
mov
or
and
frstor
sarb
cs
add
mov
add
add
into
push
push
pop
cltd
aas
dec
lcall
cmpsb
movsl
gs
mov
lock
add
test
pushl
sub
cltd
push
push
cmp
les
or
jl
dec
and
mov
movsb
popa
movsb
and
ret
push
shrb
mov
shlb
inc
outsb
into
fsts
arpl
and
dec
xor
adcb
cmpsl
imul
dec
out
nop
and
jne
sub
push
inc
jle
mov
out
shr
jbe
mov
cmpsb
mov
mov
cmpsl
mov
fwait
sub
jae
clc
jnp
and
push
mov
push
mov
lods
mov
adc
pushf
xor
scas
add
jne
shl
lret
jecxz
cmp
dec
mov
call
rcl
jle
ficoms
dec
push
out
jo
pop
in
pop
or
fnstcw
xchg
push
inc
mov
inc
push
xchg
add
int3
xchg
mov
dec
into
jb
mov
repz
jno
outsb
mov
jecxz
xor
xchg
push
popa
fsubs
and
xchg
je
loop
add
mov
ja
imul
cmp
add
decb
jge
xor
mov
sub
jl
fwait
mov
xchg
xchg
rcll
jg
jge
cmc
movsb
fisttpll
rclb
cmp
movsl
out
stc
mov
adc
mov
mov
stc
cld
inc
lods
xchg
and
xlat
mov
rorl
xchg
ljmp
mov
jp
inc
and
sbb
sbb
gs
stos
arpl
lock
iret
incl
jb
sbb
fs
int
xor
lcall
sub
inc
mov
push
aaa
add
movsl
mov
loope
xchg
add
lcall
cmp
imul
cmp
aas
push
push
test
mov
and
inc
xchg
cmpl
sarl
bnd
cmp
xchg
cltd
adc
mov
loopne
pop
xchg
in
fcoms
add
mov
int
enter
fmul
insl
iret
add
sti
inc
cmc
cmp
inc
jns
mov
push
fisttpl
ret
lods
shl
aas
mov
inc
dec
mov
xchg
clc
pop
out
mov
loope
test
xlat
jl
js
xchg
or
out
mov
jle
pop
leave
fnsave
cmpsl
stc
inc
lcall
xor
pop
mov
mov
nop
int
xchg
movsl
aad
ret
hlt
sbb
pusha
sub
aaa
jae
mov
sub
sbb
popa
jle
insb
sbb
jle
js
sub
iret
inc
xor
imul
cmc
arpl
fstl
and
xor
cmp
xlat
hlt
adc
jmp
idivb
test
jmp
insl
dec
ret
inc
filds
loope
and
mov
mov
loop
mov
rorb
push
xor
out
pop
inc
mov
and
cmc
pop
add
fcomps
les
or
add
add
dec
loopne
mov
out
movsl
mov
xchg
push
pop
mov
out
in
out
xlat
add
mov
fisubrl
cmp
xor
mov
sbb
mov
push
hlt
cli
add
rolb
les
sub
cmc
push
xchg
test
stc
movsb
and
lcall
in
divb
clc
cwtl
lret
andl
stos
mov
sub
xchg
rcl
jl
jne
add
sbb
aaa
jne
add
loope
aaa
xchg
xchg
sub
adc
add
fnsave
pop
movsl
sub
cmp
out
lea
sbb
xchg
in
push
xor
jmp
dec
test
insb
pop
testl
mov
cmpsb
mov
inc
shrb
mov
aaa
inc
add
cmp
cmp
jle
fdivrl
test
sbb
mov
xchg
rol
pop
scas
dec
push
push
mov
push
mov
shr
sahf
pop
dec
sub
lcall
inc
push
lods
push
sbb
in
jl
in
lock
gs
mov
or
fstpt
pushf
outsb
les
ret
roll
dec
cwtl
je
mov
imul
or
les
add
add
movsl
mov
push
ret
pop
aas
dec
dec
dec
pop
imul
jg
ljmp
jne
hlt
add
out
jl
sub
sarl
test
add
cmpsl
test
pop
pusha
shll
adc
mov
xor
fcmovnb
xor
loope
cltd
mov
mov
scas
test
cli
jbe
out
and
stos
call
fsubrl
popf
jecxz
mov
rclb
fstps
sub
or
lcall
push
xchg
aaa
or
out
xchg
sub
and
push
push
scas
icebp
scas
bound
arpl
push
adc
leave
lods
into
dec
mov
lods
shll
dec
push
xchg
and
jne
pop
sub
push
pop
leave
dec
jge
repnz
add
rcrl
ss
mov
in
test
jbe
push
or
loopne
mov
cmp
loope
jns
sbb
in
pop
mov
inc
repnz
push
insl
flds
ljmp
mov
xchg
leave
stc
xchg
stos
negl
lret
fsubrl
bnd
out
ljmp
loopne
sub
jmp
or
add
adc
js
outsb
push
jb
and
mov
stos
and
add
scas
fdivs
fnstcw
sbb
je
adc
mov
mov
out
and
mov
mov
and
inc
lahf
jbe
sti
sub
call
adc
or
rclb
add
cwtl
sbb
add
ret
insb
inc
iret
pop
and
xor
inc
into
repnz
fwait
add
mov
in
loopne
dec
add
sub
dec
addb
into
scas
mov
fcmovnbe
sub
lcall
in
cmpsl
aas
inc
outsl
fwait
std
sbb
mov
push
frstor
push
daa
jl
jb
and
test
call
push
test
cmc
iret
xor
scas
jle
cmp
xchg
pop
popf
adc
mov
mov
clc
mov
dec
lock
jns
add
jno
mov
dec
xchg
in
test
outsl
pop
sbb
mov
scas
push
imul
bswap
fldl
clc
movsl
js
ficomps
cld
movsl
movsl
int3
imul
cltd
cvtdq2ps
xor
popa
faddl
pushf
daa
xor
mov
or
pusha
lahf
jne
scas
lods
sbb
jbe
aaa
in
int3
jno
mov
aaa
sub
das
and
test
int
popa
add
subl
adc
jg
adc
jp
mov
call
jp
mov
rcrb
mov
clc
add
sbb
mov
sub
roll
adcl
and
push
jne
repnz
cli
xchg
sti
insb
sub
mov
pop
cmp
inc
enter
mov
pop
pop
out
iret
outsb
push
or
sbb
xor
sub
stc
pop
cmp
mov
pop
sti
xchg
cld
sahf
mov
insb
popa
test
sahf
pop
incl
add
pop
mov
out
dec
xchg
jnp
mov
dec
dec
inc
sbb
or
mov
nop
movsl
jbe
sahf
dec
jecxz
cli
lahf
and
jmp
push
push
das
loop
cmp
fdivs
out
dec
mov
je
ljmp
adc
or
call
fmuls
out
jb
push
push
mov
rorl
cwtl
push
mov
inc
pmaxub
das
in
adc
jb
loop
repz
jle
jno
ret
mulb
data16
call
inc
dec
pop
push
lcall
cld
cltd
clc
pusha
sti
hlt
jg
sbb
ds
dec
js
add
orl
icebp
pusha
scas
rcr
cmp
loopne
inc
lock
test
dec
xchg
inc
inc
not
sub
jmp
push
add
jns
out
adc
cs
pop
adc
cs
jl
cvtps2pd
nop
sarb
movsb
mov
sub
or
jmp
jp
xor
or
sub
inc
and
sbb
cmp
stos
and
leave
mov
pop
mov
add
jnp
scas
ja
bound
and
test
mov
sbb
cmp
arpl
mov
push
mov
mov
pusha
int
xchg
clc
test
nop
push
aam
loope
xchg
add
push
xchg
adc
js
pop
and
mov
adc
mov
arpl
mov
in
mov
cmp
cwtl
mov
mov
loope
xchg
or
imul
xchg
xchg
nop
hlt
adc
call
sbb
push
inc
mov
push
cli
jg
inc
mov
sbb
cltd
cwtl
xor
push
or
pop
sbb
repz
fwait
mov
cltd
pop
les
popa
int3
pop
dec
insb
subl
sbb
daa
call
dec
adc
inc
fistps
lret
and
mov
cmp
shl
sub
sbb
pop
jg
dec
punpcklbw
inc
mov
sahf
jb
jl
neg
cs
fdiv
lds
jnp
testl
cmp
jbe
cltd
roll
xchg
pop
pop
cli
roll
rclb
dec
xor
cltd
ss
das
ja
xchg
imul
jo
cs
insl
add
sub
jb
clc
push
movsb
cld
mov
arpl
adc
test
out
test
inc
shll
jo
sub
pop
cmp
jb
mov
dec
arpl
pusha
push
lock
or
mov
stc
jb
not
aas
sti
push
test
popf
xchg
sbb
jo
outsl
js
add
mov
ror
sbb
aaa
les
out
dec
cmc
cmp
inc
inc
in
push
mov
and
jl
sub
imul
hlt
hlt
jo
movsl
and
lcall
inc
inc
imul
sbb
test
std
stc
das
jo
test
aad
mov
pop
insb
aaa
sbb
call
sub
jle
pop
in
dec
test
inc
ja
push
ss
aas
jmp
push
xor
add
cmpb
jo
or
inc
flds
cwtl
mov
cmp
or
xchg
and
sbb
inc
and
mov
xchg
cld
ficomps
lcallw
mov
jnp
add
repnz
dec
or
rcll
adc
ret
imul
cmp
jo
jae
adc
sub
push
sub
push
push
bound
les
out
inc
or
add
bound
jns
in
xchg
inc
xor
cmp
loope
push
pop
push
int3
outsb
gs
inc
clc
mov
jae
xchg
popf
adc
cli
pushf
mov
idivb
pop
mov
push
cmp
in
mov
cmp
sub
add
xorb
nop
ja
push
mov
push
int3
cmovnp
mov
jbe
mov
lretw
shll
pop
cwtl
out
pushf
mov
sub
dec
xchg
popa
cmp
push
or
inc
mov
pop
or
xchg
or
into
adc
stos
cmpsb
jno
dec
movl
bswap
mov
stc
jns
dec
cmpsb
xlat
mov
push
addr16
popa
mov
mov
in
sahf
and
repnz
in
les
cmpsl
incl
or
fnstcw
push
or
add
aam
fld
push
jb
sub
dec
mov
mov
sbb
popl
dec
adc
mov
push
mov
lock
js
push
add
inc
popa
jle
push
adc
pop
sub
imul
and
ljmp
mov
lods
dec
xchg
imul
insl
xchg
jp
xor
xchg
jp
jbe
repz
mov
xorl
and
sbb
std
add
lahf
enter
xchg
sub
or
fs
push
fadds
addps
xlat
mov
xchg
ret
sbb
mov
sbb
out
push
loope
sbb
arpl
test
popa
pop
mov
psubq
cmp
int
mov
mov
out
push
scas
roll
lea
inc
sbb
clc
and
cmp
and
call
test
xlat
lods
or
fiaddl
or
fisubrs
jne
in
jne
scas
jg
pop
aad
jecxz
xchg
mov
or
dec
inc
jb
mov
cli
shrb
daa
add
jne
pop
orl
nop
enter
daa
and
aas
ret
dec
out
lods
call
mov
xor
mov
orb
xchg
sub
jne
les
arpl
sbbb
mov
loop
push
test
cs
popf
dec
pop
jo
test
mov
ret
sub
dec
and
int
fcoms
mov
pop
inc
enter
in
inc
repz
loop
and
pop
outsl
outsb
add
enter
or
cmpsl
adc
pop
sbb
cmp
mov
outsb
notb
lods
lret
jp
lds
jae
cs
push
lret
sub
sbb
add
dec
ret
push
sahf
test
xor
mov
mov
mov
xchg
sub
cmp
cmp
jmp
push
in
scas
idivl
lcall
sbb
pushf
and
les
fnstsw
fs
in
out
lea
jno
into
mov
daa
mov
dec
outsl
test
sbb
and
sub
add
mov
xlat
push
ret
aas
mov
pop
and
pusha
pop
mov
add
adc
bound
mov
mov
rorb
pop
mov
out
shl
lods
iret
es
std
pop
lock
xchg
mov
je
cmp
and
jno
stos
xchg
popf
jg
test
call
sub
jbe
mull
repnz
movsb
mov
push
vmaxsd
mov
hlt
ljmp
repnz
xor
repz
ds
dec
aaa
pushf
addr16
aas
mov
bound
cltd
xchg
je
je
daa
sahf
stos
sti
xorl
sarl
inc
adc
or
pop
xchg
dec
fld
push
cs
sbb
rorb
fldenv
cs
in
jp
lods
dec
jg
cmpsl
addr16
outsb
add
mov
nop
sub
jecxz
mov
sbb
repz
loope
fbld
inc
cmp
sbbb
subb
cmp
mov
decl
or
xor
and
sar
aam
les
push
movsl
mov
inc
pop
and
fucomip
test
stos
push
fs
mov
xchg
inc
push
jbe
test
jge
lret
push
jb
rorl
cmp
cmpsb
sbb
ljmp
pop
stos
push
mov
ds
xor
xchg
pop
mov
dec
lahf
mov
into
pop
mov
mov
inc
ljmp
push
inc
lcall
xchg
xor
mov
xchg
mov
clc
dec
sub
xchg
into
jno
scas
cmp
xchg
test
ss
call
adc
mov
sub
pop
cmp
adc
in
ret
fcoms
jb
ss
pop
ds
rcll
or
xor
xorb
aad
fdivrl
int3
das
mov
inc
jg
jo
lds
ja
xchg
repz
push
inc
mov
fcoml
sahf
repz
xrelease
insl
out
aam
in
testl
sub
sub
js
jns
pop
das
push
xor
jae
jnp
mov
jns
lret
push
ja
ret
jbe
movsl
stos
rcrl
shrb
and
pop
std
out
lcall
mov
push
mov
jg
sub
or
push
sbb
mov
push
lret
rcll
cltd
movsb
add
push
and
mov
into
enter
fistps
xlat
cmp
push
mov
sbb
xchg
ret
andb
mov
jmp
push
in
adc
aas
aam
outsb
add
movzbl
mov
gs
out
into
iret
inc
cmc
add
mov
out
loope
lds
loopne
mov
int3
ljmp
outsl
xchg
push
int3
dec
pop
pushf
das
das
cmc
add
sbb
subb
push
mov
fcmovne
stos
nop
stc
xor
and
fdivrp
cltd
pop
je,pn
jnp
jo
inc
outsb
mov
xor
hlt
inc
xor
jne
aas
out
pop
cmp
in
or
jg
fwait
lcall
mov
nop
pop
jae
pop
hlt
xor
call
stc
sbb
push
ficompl
jg
stos
mov
arpl
hlt
loop
call
pop
inc
mov
push
jbe
dec
test
jno
sub
popf
popa
mov
aaa
dec
fwait
inc
xlat
loope
shlb
aas
push
mov
jns
cltd
pop
push
pop
mov
or
mov
add
cmp
adc
bound
pop
or
inc
dec
jae
sbb
cmp
fnstsw
xor
inc
xchg
push
lock
or
notl
xor
frstor
dec
mov
lds
mov
xchg
sub
xor
out
sti
sarl
jo
js
sarl
loope
or
insl
mov
mov
sub
repnz
fs
hlt
mov
stc
sbb
sub
outsb
and
jno
aad
adc
loope
pop
sti
ficomps
arpl
or
inc
dec
rclb
pusha
dec
lcall
or
mov
addr16
mov
mov
xchg
mov
insl
mov
mov
aam
add
ds
fldcw
rorl
mov
dec
insl
loop
xchg
pop
cltd
call
outsl
repnz
stos
pop
sbb
sbb
fidivl
push
lcall
scas
std
dec
fs
icebp
leave
or
xor
sub
adc
push
popf
mov
mov
addr16
push
sbb
rcrl
lea
sbb
sub
pop
cmp
daa
test
inc
enter
fdivs
or
adc
jno
push
sahf
cmp
nop
xor
mov
mov
and
cld
lret
loop
shrl
movsb
pop
in
movsb
int
mov
jge
cld
hlt
loope
stos
cmp
clc
lea
fsts
lea
mov
or
sub
rorb
mov
cltd
daa
mov
xor
and
loopne,pt
sbb
movsl
sbb
add
pop
movsb
test
push
xchg
imul
cmc
dec
mul
adc
je
bound
push
gs
jbe
jecxz
loopne
cltd
mov
fiadds
or
out
jl
sarl
fstpl
mov
pop
adc
pop
xchg
pushl
and
mov
bts
xor
xlat
repz
orl
imul
jecxz
sbb
lcall
push
sbb
xchg
mov
dec
lods
mov
lds
in
mov
inc
scas
sti
pop
push
pop
cli
sbb
dec
insl
cmp
cli
push
mov
cmp
rolb
scas
and
add
loope
insl
push
outsl
push
into
or
push
fsts
repnz
mov
hlt
inc
mov
in
lcall
jno
push
add
enter
mov
in
jbe,pt
fnstsw
cs
cmpsl
outsb
sbb
fidivl
jge
repz
je
scas
xor
xor
mov
inc
mov
dec
push
push
shll
cwtl
in
fisubs
pop
cmp
pop
adc
jbe
out
xchg
sub
scas
sti
or
or
jge
jno
in
mov
or
push
mov
fidivrs
lcall
loope
shll
sbb
mov
fwait
mov
mov
sahf
data16
jp
sub
andl
cld
cmp
popa
add
rcll
je
out
cmc
loopne
cld
xlat
mov
add
mov
or
scas
movsl
cs
sub
ss
jmp
movb
pop
lret
arpl
sub
addl
jle
sub
in
pop
sub
sub
jns
mov
rcll
mov
movsb
loopne
mov
inc
inc
jnp
test
xchg
testl
xor
dec
sbb
sub
les
dec
outsl
push
mov
int3
cmpsl
mov
pop
adc
dec
ret
push
dec
push
xor
fwait
cltd
mov
add
jo
dec
loopne
jg
sti
outsb
jno,pn
imul
inc
pop
and
jmp
mov
movsb
cmp
mov
fstpt
les
sbb
push
fisubrs
jmp
shlb
jl
aad
loopne
mov
inc
out
in
mov
fcomps
xchg
push
inc
cltd
mov
jmp
popa
out
mov
test
jge
rclb
xor
cmp
adc
imul
test
cmp
jae
test
shlb
and
jne
repz
xchg
adc
and
jae
nop
nop
pop
movsl
out
test
hlt
push
and
pusha
lock
cli
and
sbb
hlt
fistl
clc
jle
adc
stos
cwtl
mov
and
inc
jno
ljmp
xorl
push
test
filds
add
test
loop
xor
shrb
jp
cmc
pusha
jno
inc
inc
test
cmp
and
test
or
cli
in
ja
xor
out
or
daa
loop
shlb
sub
fsubrl
setbe
mov
in
mov
js
sbb
outsl
xchg
insb
arpl
fisttpl
fwait
loopne
stos
pop
sbb
imul
xchg
sti
mov
add
dec
in
aas
pop
sub
rcrl
and
mov
in
jge
cmpsl
push
xchg
out
dec
mov
mov
repz
or
jo
clc
jo
pop
jne
or
sbb
cld
mulps
inc
inc
jl
bound
mov
mov
fcomip
sti
in
and
cmp
inc
cmp
mov
push
mov
push
movsl
scas
add
add
rclb
xor
add
sbb
mov
sbb
cli
or
shll
mov
rolb
lods
xchg
js
cmpsb
rorb
pushf
mov
xor
add
jne
mov
mov
rorb
divb
dec
sbbl
enter
xlat
es
rorl
mov
or
mov
sti
xchg
xchg
fldl
and
icebp
jp
fdivrl
push
jno
imul
or
mov
sbb
xchg
std
gs
jb
gs
sub
fiaddl
lret
pop
decb
rorb
xchg
adc
xchg
aam
je
fistps
fsubrl
ss
cs
bound
loopne
add
insl
stos
xor
dec
adcb
add
pop
dec
mov
repnz
imul
dec
mov
movsb
sar
cs
popf
sub
push
out
inc
insb
push
test
push
pop
out
scas
mov
in
enter
xchg
sbb
insl
sbb
mov
out
imul
mov
inc
scas
mov
mov
and
ret
pop
xor
and
stc
mov
test
sar
mov
imul
mov
push
mov
popf
mov
pushf
inc
outsb
add
jg
jnp
adcb
repz
and
cs
mov
out
mov
scas
in
push
jbe
xchg
mov
dec
lds
push
push
add
dec
dec
mov
mov
cld
shrb
cld
push
aas
imul
add
fists
and
lock
lret
sub
in
lahf
into
stos
sbb
mov
lcall
xchg
cmpsl
rcrl
popf
mov
popf
push
out
jno
xchg
in
fcomp
dec
cwtl
mov
jge
in
sub
sbb
push
cmp
sbb
jb
push
xchg
cmp
mov
and
or
jne
imul
mov
push
jns
jecxz
or
pusha
scas
rorl
ret
push
dec
imul
cld
mov
xchg
fwait
into
push
xor
sub
stos
or
push
repz
mov
adc
dec
rcll
sbb
mov
cs
jo,pn
and
insl
inc
ss
dec
imul
lods
cltd
cmp
std
cmpsl
add
xchg
inc
call
and
inc
hlt
addr16
mov
shlb
sub
push
xchg
icebp
cmpsl
cmp
mov
inc
mov
sbb
jg
adc
cmpsl
cs
and
mov
popa
sbb
or
mov
fmull
mov
mov
movsl
sub
daa
out
ret
js
sub
adc
es
imul
rcrl
lods
lea
jl
call
mov
hlt
js
cmp
lcall
push
sub
dec
sahf
inc
lahf
mov
and
xor
jmp
fsubs
sti
xchg
jno
shlb
jecxz,pn
and
cltd
in
call
ds
and
test
or
jle
mov
sahf
add
pop
mov
cmc
and
addr16
xchg
in
sbb
arpl
js
repz
add
adc
out
stos
int3
bnd
dec
aas
stos
aam
fisttpl
mov
shrb
call
sbb
cli
mov
decb
aam
movl
mov
fdivrs
into
push
pop
dec
xor
push
inc
inc
aaa
or
xchg
xlat
push
inc
aam
pop
int3
pop
addr16
mov
stos
xor
dec
push
aam
frstor
clc
daa
ds
fldl
in
mov
and
repnz
jbe
adc
lods
xor
cmp
sbb
or
push
pushf
btr
pusha
xor
xchg
cmp
fldenv
cmp
mov
xchg
movsl
sbb
mov
pop
jecxz
insb
mov
addr16
std
sar
aad
mov
nop
lcall
jns
mov
loop
mov
and
das
push
lods
cmp
sbb
push
scas
mov
daa
scas
cltd
pushf
adc
or
sbb
mov
mov
popa
cmp
fcmovnb
aad
jl
push
push
ja
mov
xor
test
outsl
insb
pop
push
jno
mov
inc
inc
mov
jecxz
cmp
stos
add
mov
inc
xor
push
cld
mov
cmp
xchg
sbb
jb
ja
stos
cmp
int
cld
je
aam
in
push
cltd
jge
sbb
iret
mov
adcl
cmp
mov
int
mov
pop
inc
stos
push
mov
scas
and
test
fs
sbb
int
or
mov
fwait
dec
push
pop
dec
xorl
shl
or
cmp
sub
pushl
push
addr16
jb
mov
jne
push
push
into
jl
push
pop
out
hlt
fiadds
push
mov
addl
cmp
and
mov
cltd
fmuls
sbb
outsl
jmp
ret
inc
add
sarb
mov
ret
sub
mov
int3
inc
test
les
icebp
cmc
cmp
outsl
mov
or
data16
xchg
ret
xor
mov
adc
imul
dec
pop
sarl
dec
pushf
loope
decb
outsb
cmp
add
insb
int
inc
scas
into
pop
scas
pop
inc
mov
jp
test
xor
or
shrl
mov
jne
outsl
loop
mov
xor
or
call
pminsw
push
rcrl
jno
inc
out
dec
cwtl
inc
hlt
sbb
or
arpl
inc
push
mov
or
jmp
loope
add
jl
nop
sub
sub
gs
pop
sti
popf
jnp
sbb
dec
outsl
sbb
xlat
xchg
aaa
pop
ror
dec
push
rcll
mov
xorb
adc
subb
sbb
aad
into
in
mov
cmpsb
pop
sbb
lock
lock
xor
xchg
leave
cmp
out
and
xlat
or
js
popa
adcb
repz
shl
fldl
cmp
xor
cltd
dec
cwtl
pop
nop
inc
dec
mov
jl
popf
lock
pushl
mov
stos
push
int
out
push
and
lods
out
lret
xchg
sbb
js
mov
mov
cmp
push
int3
shll
inc
test
adc
and
push
stos
dec
jb
jns
mov
xor
push
inc
ljmp
aam
and
filds
jnp
mov
push
stos
jg
xchg
fcompl
inc
xor
stos
adc
divb
jo
js
mov
sbb
out
incl
sti
test
int
sti
mov
jmp
add
lret
clc
loope
aam
mov
push
insb
aad
outsb
lahf
sbb
out
mov
xchg
scas
pop
mov
jge
lahf
shrb
pop
out
loop
mov
mov
repz
js
mov
adc
out
jbe
jns
xchg
test
jnp
shll
or
inc
pop
cwtl
pop
out
jge
cltd
pusha
cld
and
and
sbb
sahf
enter
push
jl
inc
mov
push
imull
xchg
mov
ret
inc
xchg
into
inc
push
mov
enter
sub
mov
outsl
or
cmc
or
dec
lods
dec
lods
imul
fldl
aaa
and
push
or
jb
push
fs
int
mov
inc
hlt
push
jb
xor
pop
push
jmp
jp
lgdtl
mov
xchg
test
cmpsb
xchg
mov
addr16
mov
aam
mov
xchg
sahf
leave
insl
stc
fmulp
les
imul
xchg
sbb
vpmaddwd
xor
testb
and
rolb
ret
sub
dec
xlat
sahf
ret
mov
sub
addr16
add
inc
fdivl
sbb
sarl
rclb
adc
jle
jg
mov
or
add
xchg
cmp
shlb
cli
jmp
adc
dec
lds
int3
push
pop
das
pop
mov
jge
rorl
ljmp
xchg
notl
jnp
ljmp
dec
shlb
call
repz
push
xor
inc
dec
jle
push
inc
sti
mov
sti
ja
aaa
icebp
jno
xor
aaa
push
and
in
int3
daa
jmp
adc
adc
mov
pop
adc
addb
call
js
cmpsb
lods
mov
xchg
mov
call
sahf
adc
gs
loopne
mov
jmp
cmp
imulb
adc
call
mov
sbb
sbb
mov
mov
ds
mov
mov
mov
pop
test
fbld
and
aam
mov
mov
outsl
pop
loopne
mov
shrl
je
jo
dec
pop
shll
sbb
add
dec
jmp
xor
inc
ja
cmp
dec
mov
pop
imul
jecxz
ret
xor
cmc
mov
cltd
sub
movsb
aam
push
repnz
mov
rcrb
aam
cwtl
adc
xlat
out
pop
cmp
pop
lock
rcr
pop
xchg
ljmp
xor
push
push
es
int3
xchg
jle
mov
fwait
or
xchg
repnz
adc
adc
das
icebp
sub
dec
mov
jno
jbe
pop
cmp
js
iret
lds
adc
jbe
adc
add
push
je
test
xor
cmp
jecxz
and
jp
into
popf
cmpsb
mov
cli
push
rcrb
int
cmp
xchg
sub
shr
push
inc
cli
clc
sbb
inc
dec
daa
and
dec
sub
xchg
add
adc
push
cli
or
mov
dec
pop
add
enter
cmpsb
push
cltd
pop
inc
cwtl
xor
dec
mov
cmp
jg
stos
fisubs
or
mov
push
mov
push
lock
inc
jbe
inc
arpl
mov
and
mov
sub
mov
sbb
adc
leave
sbb
out
aad
pushf
sub
lods
ss
mov
or
or
pop
fdivrs
shll
mov
leave
in
cmc
roll
movsl
outsb
rcll
pop
les
ds
dec
loop
shr
mov
stc
repz
loope
inc
dec
movsb
les
js
sbb
dec
push
jg
mov
xor
jg
mov
out
ss
scas
dec
sti
mov
push
mov
xchg
inc
push
pop
adc
out
sub
jne
jmp
xor
xchg
loopne
push
inc
cli
lcall
in
jno
iret
jb
and
or
and
adc
movsl
outsb
mov
add
shlb
jae
ret
out
xor
inc
adc
adc
inc
imul
cmp
leave
adc
push
add
add
ds
icebp
or
xchg
aam
orb
movsb
mov
jp
pop
and
mov
fs
call
fcompl
sub
fldz
lret
pop
xorb
push
fbstp
fwait
nop
and
push
mov
lods
jle
inc
das
jp
loopne
cmpsl
pop
and
mov
out
mov
xor
mov
sub
call
pop
add
mov
jne
addr16
out
pop
sub
sbb
in
lret
rcr
hlt
or
lods
dec
mov
sub
dec
leave
iret
or
lret
pusha
xchg
flds
push
addr16
addl
sub
add
shl
xor
jle
shll
les
addr16
mov
pop
stos
addr16
jnp
cs
ret
pop
jle
mov
or
lea
into
xchg
jecxz
adc
int
fwait
popa
les
or
arpl
pop
scas
xor
pop
inc
add
lea
push
pop
or
jp
adc
and
cmpsb
inc
or
lcall
andb
dec
xor
push
rorl
lret
inc
mov
jb
xchg
popf
cmp
mov
push
pop
lds
and
xor
xor
jno
pop
leave
push
or
lds
sub
js
xor
clc
sti
hlt
xlat
into
mov
add
lret
hlt
jle
mov
stos
jno
outsl
pop
pop
imul
adc
in
cmp
sahf
and
xchg
inc
mov
data16
xor
scas
jb
cmpsb
sarb
fsubr
inc
cmp
sub
mov
sti
in
lods
push
inc
repnz
mov
jne
and
sub
jae
inc
push
mov
xor
fs
or
dec
loopne
cli
loop
mov
lcall
mov
and
inc
stos
movsb
test
cmpsb
dec
incb
xor
fcmovnu
mov
jbe,pt
jae
test
sub
sub
push
jmp
jo
jge
fildll
pop
sahf
inc
xor
jecxz
test
jge
push
in
int3
fdivrl
pop
mov
mov
mov
add
fucomi
xor
std
outsl
into
xor
outsb
xchg
adc
cmp
cmpsl
adc
push
insl
add
and
aas
sbb
mov
shl
jp
pop
movsb
adcl
dec
sub
stos
gs
enter
push
jnp
push
pop
lock
and
repnz
jns
int
sub
push
cli
adc
ja
jg
pop
sub
mov
push
mov
pop
pop
sarb
inc
or
jns
out
sbb
loope
or
jae
sti
inc
mov
jg
sti
xchg
daa
popf
das
stos
enter
shlb
outsb
popf
lds
push
xchg
jno
mov
hlt
xchg
and
adc
inc
cmpsb
jne
sub
insl
mov
orl
cmp
xchg
pop
ret
out
leave
lahf
stos
and
inc
mov
shll
bound
sub
pop
and
fdivrp
rorl
or
and
sub
pop
pop
adc
xchg
sti
cli
inc
lcall
les
jp
xor
out
pop
and
fs
mov
sub
inc
pop
push
cs
sti
cmc
mov
stos
and
xor
sub
fmull
dec
pushf
xchg
jne
push
sub
push
dec
ficoml
xor
in
pop
pop
pop
addr16
jecxz
sti
imul
pop
js
xor
cmp
stos
std
sub
daa
ljmp
gs
xchg
sbb
mov
fdivs
inc
stos
dec
leave
mov
int
xchg
adc
pop
in
outsb
idivl
and
mov
popf
fwait
push
jns
aas
notl
inc
lock
cmc
xchg
push
int3
daa
and
push
dec
mov
xchg
imul
popf
loop
clc
pusha
xchg
and
js
mov
inc
mov
dec
jbe
hlt
and
dec
pop
xor
lcall
jp
iret
popf
jae
ljmp
adc
jp
add
mov
fwait
jmp
xchg
scas
fbstp
sub
fcoml
shlb
pushf
mov
cmp
insb
dec
pusha
stc
repnz
sbb
sbb
adc
int3
ja
sbb
cmp
in
ret
mov
xorl
pop
cmp
jmp
in
leave
shll
idivl
sbb
sti
push
das
jo
movsb
mov
loope
push
cmp
and
mov
es
inc
pop
sub
xchg
jne
inc
dec
push
sbb
and
xchg
mov
push
lods
cmp
mov
jae
xlat
outsl
std
les
mov
clc
push
rcrl
push
shrd
sarl
imul
mov
nop
adc
pop
test
mov
mov
jae
push
int3
pusha
xchg
fildl
xchg
or
mov
inc
bound
cs
or
mov
cmp
pop
mov
bound
leave
xchg
out
and
cmp
pop
or
dec
shlb
jns
jns
popf
fsubl
movl
inc
lret
xorb
adcl
xor
jno
sbb
jp
sbb
push
cli
in
sti
sbb
fcomip
jle
or
mov
into
or
add
push
xchg
or
lds
mov
cltd
pop
into
aaa
xorl
jns
cmpsb
repnz
mov
inc
mov
test
fnstcw
in
leave
sub
pop
xor
aaa
cmp
push
repz
out
adc
std
add
and
movsl
cmp
pop
mov
add
mov
xchg
lds
jae
xor
mov
sbb
add
sbb
sub
or
pop
nop
sub
inc
jae
mov
lret
cmp
ds
mov
and
scas
out
mov
push
scas
shr
gs
cmpsl
xchg
lcall
jecxz
mov
shrb
mov
lcall
dec
adc
imul
loop
popa
or
mov
xor
cmp
cltd
or
into
inc
lea
or
mov
adc
aad
cmp
and
push
sub
mov
sbb
jecxz
sbbl
repz
jg
push
mov
dec
pop
dec
mov
cs
sbb
lret
in
fcompl
sub
inc
mov
dec
dec
test
out
inc
or
xor
clc
mov
es
out
jae
test
rcll
rcl
push
inc
mov
xor
movl
xor
push
jp
inc
push
add
xchg
lods
mov
fisttpl
test
leave
cmp
lods
jo
cmp
push
std
ret
sub
mov
insl
stc
jbe
arpl
or
or
shrb
cmp
or
pop
push
mov
out
mov
fs
ds
xchg
in
adc
jne
popf
xlat
add
pop
ret
test
aam
shr
dec
add
jae
pop
mov
testb
inc
sarb
dec
sbb
fidivl
xchg
mov
add
dec
add
mov
xor
outsl
hlt
cmpsl
ret
mov
xchg
jp
mov
and
mov
test
lods
cmp
movsl
in
cld
mov
popf
xchg
sbb
mov
push
fimuls
popa
pushf
sti
jg
add
mov
repz
xor
push
xchg
jnp
push
loopne
jne
sub
fidivrl
cmp
cmp
sbb
pop
mov
adc
mov
xor
mov
xchg
pusha
stos
push
mov
jg
test
mov
test
and
dec
push
push
insl
gs
jl
sbb
sbb
cmp
jae
push
cmp
mov
mov
and
das
mov
lret
pop
mov
sub
mov
push
mov
sbb
push
xchg
stos
faddl
sub
iret
lret
int3
push
ficompl
sub
subl
xor
xor
push
out
mov
xlat
jns
xchg
js
in
ret
enter
adc
fnstenv
push
popf
lods
cmp
mov
and
and
gs
jbe
mov
idivl
ja,pn
add
out
mov
repnz
xor
sub
sub
mov
jmp
mov
lds
mov
repnz
mov
loopne
pop
mov
push
daa
pop
ss
lock
pop
cs
repz
push
imul
lret
popf
test
and
bnd
mov
lret
or
addr16
and
xchg
adcb
xchg
jmp
cmp
ja
loopne
es
pop
xchg
pop
inc
lcall
fs
mov
addr16
shll
fbld
call
imul
cmpsl
shrl
rcrl
jnp
xor
push
push
jl
insb
mov
xchg
pop
fsub
xorl
mov
iret
add
addr16
insb
pushf
es
ss
mov
fidivrl
jge
mov
pusha
cwtl
sbb
pop
sahf
adcb
test
lds
insb
mov
mov
cmp
sti
cmp
and
jp
stc
xchg
in
push
push
and
and
icebp
mov
test
lcall
and
adc
pop
or
pop
or
loop
ds
push
scas
jmp
xchg
popa
adc
rcrb
push
sbb
mov
out
sub
aaa
sbbb
push
mov
cwtl
mov
push
iret
imul
es
and
mov
and
mov
cs
shlb
sahf
iret
popf
int
sahf
inc
xchg
lock
sub
testb
mov
cld
jg
ljmp
mov
mov
adc
mov
jbe
cmp
xor
mov
pop
xor
dec
mov
push
push
or
sub
xchg
push
into
xchg
jno
push
push
xchg
xchg
std
pop
mov
push
popa
cmp
scas
xor
dec
sbb
in
es
movsl
jmp
loop
mov
and
xchg
inc
mov
faddp
jl
xor
cmpsl
lcall
shll
cmpsl
mov
ljmp
test
push
mov
xchg
lea
or
loopne
cltd
adc
dec
pop
jge
out
mov
movsb
jno
das
jno
fists
pushf
ja
clc
std
fmull
mov
mov
sbb
mov
dec
fldt
enter
pop
dec
shrl
or
push
imul
jns
aas
fcoms
cltd
dec
data16
cmc
push
xor
cmp
pushf
xor
imul
popf
test
out
into
loope
sbb
into
fcom
dec
test
pop
mov
xor
sbb
xlat
mov
mov
lock
inc
fldcw
mov
adc
imul
fcoms
or
xor
xor
sub
pop
mov
mov
xchg
mov
fiaddl
jo
mov
mov
or
std
pop
xorb
xor
mov
adc
push
jnp
sub
loopne
sarl
pop
repz
sbb
cltd
ficoms
mov
outsb
mov
xchg
repz
inc
mov
fcoms
inc
addr16
lahf
aam
icebp
hlt
dec
pop
dec
mov
ficomps
adc
ret
addb
and
adc
sub
cwtl
das
clc
adc
inc
lods
stos
adc
inc
ds
mov
roll
lea
fdiv
push
inc
sahf
pop
xchg
pushf
add
popa
cmp
add
mov
lret
mov
mov
mov
pop
out
jmp
daa
enter
cmp
inc
jno
mov
or
cmp
lahf
imul
push
out
mov
dec
cmp
mov
pop
jns
cld
mov
fistpl
pushf
iret
out
mov
adc
in
popf
jne
or
xor
mov
call
xor
jno
dec
rol
mov
mov
fiaddl
roll
pop
sbb
fldenv
jne
xchg
and
lcall
lcall
sbb
cmp
mov
cld
pop
fidivs
cmp
ror
jle
ret
decl
push
repz
jge
push
lcall
out
adc
xorl
push
cmp
addr16
imul
daa
jno
push
xor
scas
rorb
xor
fsubr
insl
das
jl
sarl
fwait
lcall
aad
adc
lea
test
xchg
es
pop
into
mov
mov
dec
call
imul
stos
test
mov
movsl
pop
or
popa
sbb
das
cs
call
ret
mov
mov
adc
xlat
cli
cs
iret
mov
test
mov
nop
sahf
lods
push
push
dec
cltd
add
sbb
sub
mov
cmp
mov
mov
fstl
mov
xor
enter
adc
inc
fstpl
xor
js
pushf
jecxz
pand
not
pushf
jle
aam
hlt
add
in
mov
cmp
dec
push
sbb
shrd
mov
or
adc
inc
js
addl
jg
adc
dec
sbb
insb
rolb
add
test
jne
fisttpl
sti
lret
push
pop
call
sbb
insb
test
jecxz
imul
int
arpl
push
es
je
inc
scas
add
out
adc
mov
pop
lret
or
arpl
cld
cmpb
cwtl
fsts
in
in
cmp
insl
lock
call
std
cmp
adc
imul
jmp
cwtl
xchg
mov
mov
fildll
mov
mov
add
jmp
insb
dec
out
dec
push
xlat
addr16
gs
inc
lods
orb
ja
pop
and
movl
mov
mov
or
xchg
sbb
call
daa
adc
fs
rorb
test
dec
sbb
cmpl
jne
js
push
sbb
jmp
add
sub
test
dec
jecxz
jmp
xor
jmp
jge
loop
sub
and
testl
out
rcrl
addr16
hlt
and
sub
cli
cltd
scas
mov
sbb
or
lock
mov
pop
jmp
pop
jbe
rcr
mov
in
loope
jnp
push
pushf
cld
aaa
add
or
inc
pop
sbb
mov
mov
in
ja
scas
lret
int
clc
dec
popa
lds
lret
sbb
xchg
or
pushf
je
repz
mov
add
xchg
test
jl
das
inc
imul
shl
out
pop
mov
fwait
push
sbb
into
mov
add
pushf
daa
daa
jnp
dec
out
jp
cmpsb
xor
or
popa
mov
and
bound
add
inc
aam
jmp
cmp
mov
fbld
mov
lahf
out
ror
int
mov
shll
imulb
stc
subb
sub
stos
shl
and
fldcw
sub
out
ret
pop
cmp
inc
fdivl
xlat
dec
pop
adcl
pusha
cmpl
add
adc
icebp
loope
rcl
lahf
cld
lds
sub
cs
mov
fsubrl
push
das
push
scas
rclb
inc
sub
jnp
xor
inc
xor
loop
hlt
adc
cltd
mov
out
add
fucomip
mov
mov
insb
adc
adc
mov
jb
test
push
mov
cmp
sbb
inc
push
mov
push
ret
jno
mov
or
into
mov
fbld
cwtl
adc
int
mov
cmp
imul
pusha
cwtl
push
repz
inc
add
outsl
push
icebp
or
mov
sub
mov
inc
cmpsb
inc
in
int
fdivp
mov
cld
push
movsb
icebp
pop
adc
pop
ja
mov
or
push
lods
or
ret
call
fs
pushf
ds
ja
out
jb
imul
movsl
es
into
fs
mov
and
ds
sti
push
out
movsl
aaa
push
neg
xchg
dec
lds
lahf
push
lea
pop
adc
imul
jge
stos
das
jecxz
xor
jge
xor
and
sub
dec
xor
mov
das
xchg
xor
push
pusha
shrl
xor
push
sub
jns
inc
gs
xor
dec
sub
std
dec
push
jle
repz
pop
pushf
inc
leave
ds
dec
fs
test
jae
lret
inc
test
add
fisttps
mov
adc
cmp
dec
popa
shr
push
call
lods
std
sub
jg
push
aad
jmp
stos
out
movsb
in
mov
ret
lcall
cmp
sbb
in
out
movsl
bound
stos
jmp
xchg
cmp
in
mov
movsl
sti
sbb
movsb
jl
push
and
std
dec
sbb
xchg
push
xchg
mov
mov
lcall
bnd
mov
pop
data16
add
push
das
test
mov
and
cmpsb
lret
popa
add
into
dec
add
in
inc
sub
ja
movsl
hlt
shrd
mov
shrl
ror
sbb
dec
mov
ret
push
rclb
cmpsb
xor
call
aam
xlat
push
movsl
outsl
insb
scas
shr
aam
pop
cmp
jp
movsl
jae
add
call
xchg
and
and
jle
sahf
xor
jb
jne
cmp
mov
es
xor
sar
jge
aam
mov
xchg
jl
pop
std
adc
push
push
cs
mov
pushl
add
pop
aam
dec
jl
cmp
das
pusha
movsb
xchg
inc
cmpsl
jno
pop
jl
sbb
das
and
pop
aaa
xchg
lret
mov
ret
insb
pop
cli
bound
mov
inc
rolb
dec
dec
mov
xor
les
movsl
dec
sub
cmc
jnp
inc
push
ljmp
mov
popa
jecxz
lods
adc
mov
mov
sbb
repnz
ljmp
mov
xchg
jb
divb
dec
gs
rorb
icebp
gs
popa
sbb
mov
roll
sbb
les
mov
add
push
loope
jb
adc
mov
lea
inc
dec
sub
or
testb
or
imulb
pop
sar
fildll
punpckhwd
scas
mov
mov
inc
pop
repnz
ror
dec
jecxz
jnp
repnz
add
mov
cli
aaa
adc
adc
les
inc
int3
mov
pop
fstps
xchg
lds
std
in
xor
xor
cmc
jbe
movsb
jg
in
pop
sub
mov
int
xchg
adc
jle
fdivrl
mov
sbb
js
outsl
and
push
xor
dec
add
out
mov
out
or
sbb
push
jge
push
mov
inc
pop
scas
ret
hlt
stos
rclb
push
outsl
and
dec
cs
gs
mov
aaa
addr16
mov
push
outsb
xor
push
dec
enter
popl
jns
fcoms
dec
add
loop
mov
jo
lcall
addr16
testb
sbb
int
jp
jns
sub
inc
in
aam
xor
xchg
scas
fcomp
jnp
es
lock
mov
test
insl
xchg
push
inc
repz
xchg
sub
dec
xchg
fstpt
icebp
mov
repnz
mov
add
out
push
pop
popf
sub
mov
in
cmpsl
add
adc
lea
push
in
push
cmp
js
repz
adc
dec
pop
mov
cli
xchg
push
cwtl
adc
mov
dec
mov
aas
sub
pop
insb
mov
mov
xchg
cltd
roll
sti
sbb
flds
jmp
inc
adc
push
add
push
pop
lods
jge
push
mov
or
and
mov
push
xchg
dec
hlt
ljmp
mov
negl
in
pop
gs
dec
adc
pop
mov
neg
jne
push
fildll
jnp
sahf
lea
rorb
sbb
jmp
add
dec
fbld
adc
mov
cli
add
aas
and
push
xor
mov
mov
xchg
lcall
pop
push
push
push
cwtl
aaa
fimull
pop
push
imul
cmp
leave
adc
push
push
pop
sub
popf
adc
sbb
aad
cmpsl
and
test
stc
pop
test
fwait
aam
subl
jbe
jmp
ret
lods
cltd
mov
fnstsw
roll
rorb
sbb
mov
and
fdivl
rorl
push
cwtl
lret
or
cmp
fiadds
pop
xchg
ficoml
xchg
pushf
pop
je
sub
mov
loop,pn
outsb
or
sbb
dec
xchg
and
push
rep
jbe
pop
jbe
add
cmpsl
xlat
pop
mov
mov
xorb
cmp
and
out
mov
xor
push
mov
in
imul
jb
push
cs
fld
mov
inc
imul
push
jb
dec
mov
dec
ss
mov
jns
mov
or
std
rorl
mov
cld
xor
mov
dec
dec
arpl
dec
cmp
xor
jo
mov
jge
xchg
cwtl
sarb
mov
cs
cmp
lea
enter
insl
adc
test
out
mov
lods
icebp
pop
lds
fs
je
jae
out
hlt
jecxz
imul
lods
rcll
scas
and
or
cmpsl
mov
mov
sar
aad
or
fwait
fwait
imul
ss
dec
or
aad
cli
mov
sti
cwtl
popf
sahf
ljmp
aaa
mov
int
push
pop
and
pop
aas
je
in
pop
xchg
ljmp
test
pop
or
outsb
lret
rcl
ja
pop
mov
sbb
mov
loop
push
mov
std
sahf
mov
jecxz
and
lock
call
lods
daa
mov
dec
sbb
ret
add
icebp
pop
jl
add
sbb
sahf
jmp
fs
or
mov
test
xor
jge
mov
ret
cmpsb
int
or
inc
test
mov
xorl
in
das
sbb
clc
in
cli
test
adc
mov
std
dec
xor
mov
sti
nop
sbb
and
insb
test
rolb
xlat
dec
fdivrl
xchg
sbb
mov
or
push
aaa
ret
insb
lods
jg
mov
sub
push
xchg
arpl
add
insl
jno
pop
jo
mov
sub
ret
lock
je
pop
adc
ror
fcoms
xchg
out
test
dec
jge
mov
and
stos
icebp
dec
mov
scas
xor
jmp
pop
inc
lods
cmpb
push
dec
cmp
push
fnsave
push
xchg
ficompl
loopne
adc
xlat
cltd
add
sub
push
call
cmp
inc
dec
shrl
add
shll
adc
movsb
aaa
cli
xchg
xlat
sbb
test
test
sbb
push
xchg
cmp
inc
int
ret
xchg
pop
cmp
sub
jmp
movsb
xchg
cli
pop
fucomi
sbbl
adc
pop
aam
sahf
into
cmpsl
add
and
mov
test
dec
sarl
dec
gs
into
sub
rcll
cwtl
repz
fidivs
jle
insl
xchg
hlt
pop
lret
cmc
test
push
push
xchg
push
aaa
xor
divl
jnp
movsl
call
rcrb
and
xchg
cld
add
repnz
fisttpl
cmpsb
lods
jg
mov
std
ja
aaa
xor
adc
mov
das
adc
lods
pop
xor
push
or
ds
mov
lret
sti
rcrl
sarb
xchg
movl
pop
nop
lea
push
pop
mov
in
mov
into
aaa
xor
jecxz
pop
jne
out
popa
xor
cmp
push
ds
test
cmp
jecxz
leave
or
mov
inc
cmp
cmpb
arpl
dec
add
fstpl
enter
pop
arpl
pop
pop
sbb
clc
ret
sbb
iret
add
mov
push
and
mov
xor
sar
lret
xchg
sbb
pop
aas
xor
popa
push
dec
mov
push
and
pop
lea
xchg
js
push
push
mov
xor
arpl
jge
mov
jecxz
aam
test
mov
xchg
enter
call
inc
xor
fisttpll
movsl
dec
bound
mov
pop
pop
lock
mov
repnz
test
jge
lea
jbe
mov
mov
imul
fisubrs
push
push
stc
jp
sub
mov
dec
int3
subb
dec
push
imul
scas
pop
inc
orb
dec
sub
adc
insl
rorl
adc
pop
rol
leave
out
fwait
add
es
and
mov
pop
lret
shrb
xor
and
int3
xor
rclb
sub
popf
hlt
mov
dec
push
jmp
fsubrl
mov
adc
outsl
cs
cmp
jle
cli
push
das
xchg
repnz
sbb
jecxz
je
and
inc
out
ljmp
xor
pop
mov
mov
fnsetpm(287
jb
add
cmp
stos
mov
outsl
cmp
add
ss
pusha
call
jge
and
shll
and
repnz
xchg
stc
je
and
xchg
mov
rcrb
rorl
dec
loopne
pop
adc
push
pop
lock
inc
fstpl
mov
add
sbb
push
mov
scas
repnz
or
or
lock
dec
repnz
xchg
out
adc
and
push
push
or
jecxz
sti
cmp
mov
imul
xchg
mov
popf
les
dec
mov
lock
jecxz
cmp
icebp
sub
xor
test
xor
insl
jle
inc
xchg
mov
shl
mov
mov
jle
add
add
and
push
xchg
sbb
iret
scas
xchg
xlat
stos
mov
sbb
cwtl
xor
jo
mov
cmpsb
xchg
leave
ret
push
fwait
sbb
out
xchg
push
dec
push
mov
std
cmp
mov
cmp
shrl
dec
outsb
insl
and
cmp
fsts
push
call
push
lock
lret
adc
out
cmp
insl
pop
or
and
add
jb
xchg
ret
mov
cld
in
push
cs
cmp
push
xor
xchg
add
lods
mov
and
or
or
ret
pusha
sub
jbe
dec
xor
inc
stc
out
mov
fstl
or
inc
aas
push
aam
dec
pop
call
aad
or
inc
adc
ret
pop
jle
inc
inc
call
or
ret
out
mov
sbb
fcmovnbe
aam
mov
sbb
pop
and
out
xor
inc
clc
adc
xchg
xchg
enter
adc
mov
or
push
and
mov
cmp
inc
mov
add
sub
fstpl
shlb
mov
mov
dec
inc
pusha
enter
sub
pushf
cld
xchg
xor
mov
jns
test
sbb
addr16
or
dec
out
test
inc
or
or
mov
test
andl
sbb
and
outsb
adc
lods
adcb
imul
sahf
ds
popw
sub
mov
sub
lds
mov
jns
mov
cmp
adc
push
push
jle
iret
add
enter
push
push
out
xchg
xchg
lret
adc
adc
adc
icebp
adc
arpl
rcl
xchg
lds
mov
jbe
xor
out
cmpsl
jge
and
sbb
aad
and
andl
xorl
jb
test
and
mov
inc
adc
outsb
cmp
ja
pop
jg
or
xchg
sbb
add
pop
pop
sbb
fcmovb
daa
test
dec
repnz
scas
dec
push
test
xor
lds
stos
jg
imul
push
sbb
popf
dec
in
fsts
loopne
xor
in
test
js
loope
push
imul
cltd
fdivs
xor
adc
out
push
inc
push
adc
and
dec
out
ljmp
pop
int
mov
leave
add
ja
inc
adc
gs
jmp
sub
mov
movsb
sarb
inc
mov
jl
in
push
jp
xchg
mov
into
dec
popa
add
addr16
iret
out
jae
and
imul
push
nop
int3
in
icebp
xchg
mov
xor
icebp
aas
jno
ret
jge
pop
pop
pusha
repz
sub
or
loope
mov
jb
test
aas
cmp
push
jl
cmp
lods
adc
sti
xchg
ss
mov
lcall
jb
xor
cld
sahf
test
add
push
sub
mov
or
mov
jae
cli
mov
addl
xchg
xor
call
shr
inc
pop
test
lret
dec
mov
xor
pop
xchg
fdivrs
sub
jb
int3
sar
add
or
popf
gs
cmp
cmp
sbb
out
cs
jge
pop
and
inc
dec
cli
cmp
cmc
mov
dec
ja
cmpsl
nop
cmp
xchg
in
scas
xchg
xchg
addl
or
hlt
jne
fdivrl
pop
sub
xor
subl
xchg
dec
and
and
sbb
es
mov
cwtl
dec
jl
mov
adc
test
mov
jecxz
popf
and
adc
pop
sbb
add
testb
fsubrs
stos
cmp
jge
sub
push
mov
into
or
jbe
push
sbb
inc
mov
ljmp
add
stc
jno
fisubrl
outsl
roll
aad
xchg
cmp
adc
dec
add
or
mov
lcall
cmpsl
pusha
ret
aas
dec
lret
cmp
outsl
shrb
imul
mov
mov
and
sub
or
add
jo
adc
in
sbb
loopne
mov
xchg
cmp
stos
push
mov
movsb
mov
and
dec
shrb
lahf
test
add
iret
cmp
jge
xchg
gs
inc
aad
outsb
leave
insb
xchg
push
mov
ret
mov
lret
mov
mov
movsl
dec
les
je
lds
mov
mov
pop
push
divb
cs
imull
fbstp
ret
pop
lds
sti
in
clc
jg
ret
mov
xchg
jbe
clc
push
clc
imul
adc
pop
aad
pop
add
aad
sub
mov
pop
push
adcl
xor
inc
and
dec
fisubl
fldt
popf
ds
mov
cmpl
pop
lock
xchg
gs
lahf
addl
mov
xchg
pop
mov
in
movsb
mov
xchg
inc
lock
cmp
fsubrs
inc
ds
nop
inc
in
fwait
mov
notb
sbb
das
lret
dec
xchg
int
inc
xor
loopne
enter
xchg
insl
js
sahf
std
xor
jp
mov
cmp
rcrb
and
in
shrb
outsl
and
out
push
or
push
sub
xrelease
aas
fwait
cmp
adc
ret
push
mov
mov
cmc
imul
xor
in
fsubs
xor
and
add
out
ja
imul
xor
or
lods
scas
xor
dec
inc
xchg
or
int3
jbe
outsl
add
in
sub
pop
in
mov
outsb
loop
stos
outsl
ja
stos
push
lret
or
inc
in
dec
sbb
add
jmp
rdpmc
test
fstps
neg
cmp
mov
bound
ljmp
bound
add
aad
xor
pop
mov
test
leave
rolb
and
mov
imul
jp
pop
loop
lea
shrb
mov
cmp
loop
in
or
xor
es
jp
negb
sbb
ja
sub
pop
or
popa
mul
outsb
xor
sbb
and
mov
mov
add
pop
mov
xor
jmp
lcall
adcl
xchg
idiv
mov
mov
sbb
mov
into
fstpl
adc
je
push
lret
cmp
adc
rorb
xlat
cwtl
jl
cwtl
xchg
add
dec
and
sbb
jmp
xchg
inc
or
push
sbb
sbb
push
jle
in
mov
mov
bound
pop
jo
and
test
pop
push
lret
lea
and
sti
das
mov
loop
mov
sbb
dec
pop
jmp
pop
rcll
rorl
std
out
sub
rolb
arpl
jns
pop
lds
gs
loope
adc
cmp
daa
or
lret
mov
inc
add
test
out
xchg
ds
add
popa
sub
ds
add
ret
pusha
inc
and
push
mov
jg
mov
push
fmul
xchg
pop
and
add
sbb
test
imull
pop
mov
adc
insb
in
outsl
and
xchg
add
fdiv
popf
subb
daa
bound
in
cmp
repz
in
aaa
notl
arpl
shll
adc
push
pop
pop
adc
cmp
xor
dec
call
dec
je
add
sarl
orb
hlt
shll
js
insb
mov
popf
mov
sahf
or
dec
or
insl
fmul
leave
imul
fisubs
add
pushf
vcvtsd2si
and
fdivs
jne
mov
cmp
and
inc
mov
fwait
lahf
xor
inc
loopne
lods
adc
pushf
jo
es
or
jnp
cltd
dec
clc
sbb
lods
cld
sti
mov
add
push
add
out
sbb
insl
mov
fwait
dec
andb
fndisi(8087
mov
push
pop
add
sub
leave
push
in
dec
je
int
inc
push
pop
cmpsb
movsl
and
add
cld
rolb
sbb
outsb
fistpll
lea
pop
in
push
pop
push
data16
insl
ss
daa
call
stos
pop
outsl
and
or
jp
pop
cli
add
mov
fxch
dec
shlb
gs
inc
sub
pop
pop
jbe
test
scas
mov
ds
adc
lock
aam
add
out
xor
cmpsb
xchg
pop
cmp
lock
iret
test
aad
xchg
lret
sbb
das
xor
push
push
test
aaa
mov
nop
add
sub
adc
jl
stos
pop
aas
jp
sub
test
adc
xlat
lods
stc
enter
mov
sub
jnp
lods
ret
adc
and
mov
mov
pop
mov
push
adc
fwait
cmp
jle
lret
and
pop
mov
mov
insb
cmp
inc
enter
mov
jecxz
sti
arpl
jle
sahf
pushf
mov
xor
imul
pop
lcall
add
mov
xchg
or
pop
jmp
adc
std
sub
in
stos
outsl
sbb
pop
scas
aas
mov
test
fmuls
mov
stos
jo
jo
lahf
add
cmp
aam
lret
mov
out
pop
push
mov
sbb
loopne
lds
mov
mov
xlat
les
divl
sbb
jp
call
imul
push
repz
mov
xchg
sbb
jp
es
or
push
lahf
mov
mov
sbb
icebp
xor
mov
mov
ljmp
lret
fdivrl
aam
pop
pusha
in
outsb
andb
andl
cmp
mov
sbb
ror
or
sub
cld
pusha
repnz
aas
cli
and
add
daa
popl
aad
mov
mov
cmp
mov
mov
jge
push
mov
mov
jbe
enter
adc
mov
jbe
mov
jo
and
cltd
in
sbb
aas
mov
dec
cmpsl
jmp
jae
mov
and
ret
jnp
jge
jmp
movsl
mov
std
iret
rolb
mov
fstp
pushf
adc
and
pushf
jbe
adc
fcompp
aad
jmp
inc
enter
lock
dec
div
popf
arpl
xchg
lds
cmp
sbb
iret
mov
je
outsb
adc
jne
jbe
sbb
ficomps
and
xchg
pop
pusha
cld
pop
pushf
adc
jnp
xor
add
xor
and
xor
mov
or
subl
cltd
sbb
jns
aaa
mov
xchg
js
roll
or
jecxz
cmp
arpl
add
imul
aam
xor
int
lret
mov
mov
sarb
jbe
and
ficoml
mov
lea
push
movsb
add
mov
hlt
aam
sbb
jp
pushf
xchg
out
and
mov
inc
fistpll
pop
sub
cmc
ret
sub
jl,pt
in
shrl
fbld
push
adc
push
pop
pop
cs
and
sub
push
or
and
and
dec
inc
push
add
sub
add
loopne,pt
mov
lock
lods
out
shlb
stos
nop
ljmp
cld
aaa
push
insl
mov
xchg
pop
dec
lcall
push
in
sahf
xchg
pop
fstpl
cmpl
rorl
shrl
fadd
movsb
roll
jecxz
jns
adc
dec
les
pop
mov
jle
aam
push
xor
daa
out
call
jmp
jmp
sbb
daa
xor
test
je
pushf
pop
in
lock
push
or
jge
lcall
leave
loop
test
data16
lcall
pop
rcll
outsl
test
test
push
outsl
fldl
js
mov
jmp
push
arpl
ljmp
iret
or
cmc
into
test
into
xorl
inc
shlb
cli
jb
pushf
in
subl
int
mov
loope
inc
outsb
jp
inc
xchg
push
leave
mov
rcrb
int
dec
adc
or
dec
fwait
mov
rorb
or
jle
sub
ds
cmp
stos
cwtl
inc
fcoms
enter
mov
ds
ret
push
movsl
shll
add
scas
jns
cli
leave
fnsave
dec
in
imul
inc
imul
mov
xchg
movsl
mov
xchg
inc
sub
xchg
shlb
aas
fsts
cwtl
add
mov
pop
in
pop
das
jg
cmp
in
adc
push
jns
adc
pop
adc
xchg
in
sbbb
mov
mov
or
fstps
push
push
mov
fwait
add
cmp
lea
jnp
pop
test
cs
pop
xlat
or
popf
test
inc
mov
mov
sti
or
sub
push
inc
and
xor
dec
arpl
hlt
cmp
mov
lahf
out
cmc
mov
mov
cltd
mov
jb
pop
lahf
mov
jmp
icebp
cmpsl
ds
cmpsl
fdivr
xor
enter
adc
cmp
arpl
dec
call
mov
adc
inc
shll
push
into
xorb
mov
fisubrs
lcall
sub
push
in
scas
dec
repnz
and
mov
outsb
jb
pop
add
xor
fbstp
dec
out
dec
xchg
popa
leave
lods
mov
jl
jne
jmp
hlt
jle
xor
jb
mov
push
jne
flds
sti
enter
push
sub
xor
mov
pop
test
or
inc
mov
pushf
test
push
pop
sub
pop
insb
jp
cmpb
fxch
stos
scas
jecxz
aam
cli
stos
sub
popf
xchg
or
iret
scas
xchg
xor
sbb
push
rol
pop
mov
clc
xor
push
sbb
xchg
jb
jmp
cmp
rcrb
lods
sbbb
les
and
movsl
cld
cld
xor
mov
mov
sbb
xchg
mov
lret
repz
cmp
cmp
loopne
dec
push
jns
std
and
mov
scas
aam
adc
lods
das
insl
idivb
fstpt
je
cld
pop
xchg
outsb
dec
dec
notl
fwait
or
iret
out
fsubl
mov
xchg
mov
and
adc
loope
call
or
pop
pop
mov
and
test
js
dec
sbbb
sub
pop
mov
and
dec
sarl
in
dec
cld
push
lcall
mov
inc
adc
push
test
sbb
cmp
mov
or
insl
in
mov
jb
fs
mov
or
mov
push
mov
mov
movsl
movsl
push
cmpsl
push
sarb
dec
xlat
into
pushf
adc
lock
outsl
sub
cmp
fwait
jns
int3
fdivrs
aad
shrb
bound
xchg
mov
cltd
enter
mov
and
in
sbb
xor
std
xor
pushf
imul
das
add
or
test
testl
mov
outsl
or
into
mov
pop
xorl
or
notb
mov
and
push
outsb
cmc
pop
outsl
popa
or
ficoml
jbe
leave
jge
jmp
xor
pop
and
pop
sbb
shrl
mov
movsb
lcall
stc
ja
and
push
clc
adc
pop
adc
pusha
or
xor
mov
jno
inc
cmp
push
lcall
mov
sahf
xor
sbb
fs
xchg
xor
mov
xchg
mov
jns
sub
call
adc
xchg
cmc
clc
popa
push
push
test
xchg
lcall
cli
and
xchg
dec
xchg
pop
xchg
nop
movsl
push
mov
aam
fadd
sub
jp
add
sub
fbstp
jecxz
mov
andl
arpl
mov
push
int3
cmp
icebp
popa
mov
leave
mov
jmp
ds
or
repnz
xchg
lock
into
flds
in
inc
scas
les
aas
out
mov
arpl
sti
daa
sti
mov
or
pop
adc
leave
jns
test
or
and
and
and
les
andl
push
fdivr
mov
test
mov
inc
arpl
mov
xor
xchg
fsubrp
jge
std
add
arpl
cmc
inc
mov
cs
int
jae
jg
dec
fsubs
adc
pop
jae
mov
enter
aad
jg
fwait
jmp
popf
push
push
data16
pop
sbb
rcll
sbb
les
jge
mov
andb
mov
mov
outsl
fldl
rcrl
out
push
pop
lret
and
imul
pop
fidivl
pushf
inc
aaa
or
ds
ljmp
clts
andb
xchg
lret
addb
addl
ja
rcl
jmp
mov
mov
jecxz
ret
or
sahf
sub
dec
xchg
mov
test
aam
faddp
jo
pop
loopne
sahf
mov
mov
mov
mull
in
movsb
sbb
sbb
sub
adc
fldenv
adc
mov
vmovshdup
sahf
notb
int
cmp
jp
loop
ss
arpl
stos
sub
dec
pop
stc
sub
jae
loopne
jnp
daa
fldt
cli
cmp
mov
ret
hlt
mov
inc
fistpll
xchg
pop
mov
pushw
or
xchg
div
jg
lods
xchg
leave
dec
mov
loop
dec
nop
pop
pop
add
mov
lahf
mov
pop
inc
mov
lds
xor
rcrb
pusha
xchg
mov
mov
cmpsl
cwtl
pop
xchg
cmpsl
sbb
mov
incl
dec
vmaxpd
or
push
popf
pusha
pushl
mov
repz
rcr
pushf
push
mov
jo
xchg
push
and
pop
das
mov
mov
jb
sub
shlb
adc
jge
push
mov
push
inc
int3
sub
add
orl
enter
flds
push
sub
mov
clc
jecxz
daa
mov
adc
ljmp
aad
adc
mov
ss
dec
inc
sti
sub
cmpsb
mov
stos
jno
call
cltd
ret
loop
sbb
lcall
sbb
push
arpl
fiaddl
outsl
inc
scas
lahf
mov
cwtl
fiaddl
fstpl
xor
sub
lods
daa
push
xor
das
in
repnz
cmp
push
cmpsb
adc
mov
pop
cmp
cmpsl
pop
and
testl
aam
adc
loope
pop
xor
hlt
sub
out
mov
xor
or
cmp
inc
mov
inc
in
xchg
push
fs
pop
dec
testl
mov
xchg
adc
mov
in
int3
cs
and
loop
repz
insb
cmc
mov
add
int3
jne
enter
xchg
aas
or
jo
iret
rorb
dec
xchg
xor
das
mov
scas
push
sub
or
rcl
pop
adc
cmc
cmp
jne
xchg
js
xor
enter
out
jl
js
fs
mov
jb
lods
mov
aaa
ja
hlt
or
shrl
xor
es
sub
imull
loop
test
xlat
fistl
mov
add
enter
fisttpl
xor
sub
pop
or
add
cld
lret
push
mov
cmpsb
je
xor
xchg
leave
xor
das
test
stc
imul
pop
icebp
out
push
in
sbb
icebp
test
jo
jg
jge
inc
enter
hlt
stos
sbb
push
jl
jae
mov
fcomps
xchg
pop
cmc
add
rolb
ror
mov
aad
mov
push
pop
dec
sub
iret
or
adc
stos
ret
inc
add
sbb
repnz
divb
fiadds
ret
les
inc
enter
xchg
in
divl
cmp
shl
outsb
lock
dec
xor
cmp
cmp
push
push
dec
jg
dec
pop
lds
enter
insl
add
addb
jne
lret
movsb
sbb
stos
rcrb
lret
repnz
clc
pop
mov
or
xlat
stos
loop
dec
and
loop
push
in
aas
mov
or
adc
mov
inc
rolb
inc
xchg
xor
jg
or
push
daa
cmp
popf
enter
loopne
mov
lahf
cmpsl
std
sbb
imul
jb
insb
jno
pop
rcl
ret
insb
fsub
lahf
ljmp
rolb
pop
ljmp
lcall
push
fdivrp
ds
adc
in
out
fsts
xor
and
xchg
cmp
inc
fdiv
pushf
mov
cmp
ss
adc
push
add
sbb
mov
scas
fmull
dec
cwtd
push
xlat
mov
fisubs
mov
loopne
push
ret
mov
fiadds
iret
jnp
scas
int
adc
imul
pop
test
movsb
push
sub
sub
pop
faddl
jge
js
gs
push
xor
jecxz
cmp
adc
sbb
les
inc
pop
adc
fstpt
pop
rolb
jg
lock
pop
adcb
pop
out
arpl
jne
es
hlt
inc
gs
mov
insl
fimull
fidivrs
pusha
ds
push
mov
stc
and
mov
xchg
sub
xor
je
xchg
cwtl
xor
or
lahf
xor
xchg
loop
sbb
enter
mov
pop
push
mov
inc
adc
sbb
xorb
ds
cs
mov
sahf
dec
pop
push
std
xchg
dec
arpl
add
outsb
lds
mov
sub
out
and
fs
sti
adc
lock
sub
jb
push
dec
sub
jnp
sbb
inc
pop
sub
add
fucomi
add
fs
add
mov
lcall
add
lock
push
inc
xor
mov
out
push
push
in
ja
adc
lods
mov
inc
arpl
mov
jg
movsl
adc
loopne
cmp
fnstcw
cmp
and
jnp
jecxz
bound
lret
push
imul
sub
aas
inc
jns
lods
fsts
ja
in
pop
fistpl
int
pusha
sub
sub
and
adc
js
icebp
or
xor
rorb
lds
stc
mov
jno
mov
add
orb
mov
mov
nop
cwtl
adc
imulb
sbb
mov
fcmovu
push
push
sub
push
je
in
lods
dec
cmpsb
xor
mov
pusha
loopne
xor
mov
and
subl
mov
jo
dec
mov
xlat
out
outsb
inc
stos
gs
xchg
inc
iret
mov
mov
mov
jnp
push
push
mov
in
or
mov
xor
loop
sub
push
in
dec
xchg
int3
jp
xchg
fldenv
fdivl
loop
rorl
in
push
xchg
pop
fnstsw
lods
dec
je
mov
jno,pn
pop
popa
sbb
jno
subl
sub
push
test
mov
aam
mov
adc
mov
int
and
pop
repz
mov
add
fists
out
mov
movsb
fwait
sub
cmpsb
cmp
mov
scas
jb
mov
mov
dec
jnp
pop
stos
pop
outsl
mov
jge
bound
cmpsl
lcall
test
nop
cmp
lods
cmp
stos
sti
push
add
bound
test
sub
xor
mov
jo
dec
inc
enter
jns
jno
je
sti
mov
or
shll
inc
insb
lcall
movsb
mov
inc
adc
in
adc
sbb
sarl
or
pop
mov
gs
mov
push
in
add
push
mov
sub
sub
adc
enter
lahf
push
lds
pop
ret
jns
push
imul
jg
cmp
arpl
lcall
cltd
iret
test
sahf
mov
mov
test
pop
xchg
pusha
push
cltd
outsl
dec
xchg
decl
arpl
dec
in
dec
dec
xor
icebp
ljmp
sub
mov
xor
sarl
xchg
cmp
int
inc
fistpl
ja
cmp
cli
sub
inc
ret
cmp
gs
testl
jno
aad
xchg
std
scas
cmc
out
and
cmp
mov
scas
jmp
aam
jecxz
jp,pt
iret
cltd
add
popa
fisttpll
test
or
dec
enter
or
nop
lret
jno
div
aaa
adc
shlb
pop
test
xchg
inc
add
push
or
sahf
leave
xchg
cli
test
hlt
pop
jno
gs
inc
and
mov
push
mov
mov
push
inc
imul
mov
adc
inc
and
and
cmp
arpl
mov
ret
js
sbb
sub
out
mov
les
push
int3
xchg
cmp
mov
inc
pop
push
pop
adc
lret
data16
or
push
cld
andb
pop
jl
fsts
iret
add
adc
into
imul
cmpsb
leave
jg
dec
pop
mov
mov
jle
inc
or
icebp
or
lods
in
insb
jbe
test
imull
test
ret
cmp
mov
mov
or
mov
roll
mov
int
dec
cmpsl
mov
xchg
ret
pop
lock
outsl
imul
xchg
sbb
jecxz
and
adc
sahf
xchg
ljmp
jg
nop
push
or
aaa
or
stos
lds
sub
sub
int
or
test
js
xor
mov
clc
shlb
sbb
ret
cli
adc
sarb
ljmp
mov
shll
test
pop
fcomps
inc
lcall
inc
push
imul
jmp
scas
xor
out
pusha
nop
and
sbb
mov
pushf
adc
test
pop
mov
iret
add
dec
rorl
or
mov
shrb
std
roll
ljmp
add
push
mov
lret
xchg
imul
in
clc
sahf
or
in
test
adc
hlt
lds
mov
xchg
std
pop
mov
lret
test
dec
ror
aaa
xlat
xor
jno
adc
repnz
add
fildl
aam
jp
repnz
cltd
adcb
jb
stc
xchg
nop
lret
test
jns
or
dec
pop
out
adc
aad
adc
mov
subl
xchg
fsubl
sub
sub
jp
fnstcw
stc
popa
repz
dec
sbb
sub
jmp
cmp
ljmp
cmp
imul
jnp
or
inc
or
dec
xor
pop
mov
sbb
lret
jno
pop
xor
mov
fcmovnb
add
int
and
add
jnp
int
push
sub
insl
push
mov
cwtl
in
std
or
out
aad
lahf
or
mov
shl
and
mov
jnp
icebp
xchg
or
aas
mov
add
fwait
sub
outsb
nop
out
xor
stc
or
notl
cltd
xchg
dec
imul
and
fwait
xor
imul
loope
pop
enter
fists
pushf
jmp
xchg
fisubrl
repnz
addr16
cltd
xchg
in
mov
call
push
dec
adcl
filds
or
lret
out
xchg
ja
cmp
lea
hlt
loope
out
cmp
or
xchg
ret
fsts
in
cltd
xchg
mov
stos
cmp
shl
dec
push
mov
mov
fwait
rcl
ljmp
fs
out
stc
shll
jmp
adc
ror
lea
jbe
stos
fsubl
or
xor
int3
adc
cli
je
mov
pop
loop
adc
mov
jo
insb
sub
test
xor
or
mov
pop
call
cmp
jge
mov
popf
daa
hlt
enter
jno
ud0
add
cmpsb
sbb
int
push
cmp
adc
rcrb
push
sbb
addr16
mov
mov
push
xchg
push
jp
test
push
mov
imul
pop
ja
xor
mov
arpl
mov
mov
fistl
outsb
mov
arpl
pop
cmp
push
add
xchg
jecxz
test
lock
sub
mov
std
mov
nop
imul
cs
xchg
in
cmp
fs
pop
xor
std
cmpsl
lret
sbb
xchg
xchg
cmp
dec
adc
test
shl
push
push
call
das
fstpt
nop
das
pop
loopne
sub
pop
mov
nop
fs
inc
mov
mov
pusha
pop
jmp
xor
pop
jp
das
std
cmc
je
mov
dec
cmc
adc
push
fs
filds
cmp
pop
mov
iret
arpl
stos
xor
sub
and
mov
cmp
dec
push
popa
outsl
sub
imul
push
xor
repz
imul
dec
dec
in
aas
jbe
or
mov
je
and
jle
xchg
cmc
dec
and
out
std
sub
mov
push
jbe
pop
jmp
repnz
in
scas
mov
push
push
pop
paddusb
imul
inc
jno
mov
xchg
mov
mov
jle
push
lahf
cmpsl
lahf
or
int3
mov
jbe
adc
mov
sbb
xchg
mov
adcl
test
mov
sbb
iret
imul
and
mov
icebp
dec
xor
cmp
pushf
mov
mov
or
cmpsb
cwtl
test
jle
jb
mov
cmp
movsl
fldt
dec
cmpsl
cli
pop
outsl
mov
mov
sub
cmpsl
add
add
mov
push
or
fwait
inc
sub
cmp
inc
dec
dec
adc
and
xchg
and
mov
sub
sub
pusha
push
pop
in
cmp
arpl
addl
pop
mov
push
into
adc
pop
sahf
xlat
dec
popa
dec
pusha
xchg
adc
cmc
push
test
insl
and
iret
adc
mov
cmpb
inc
and
mov
stc
sbb
inc
dec
mov
inc
in
mov
rorl
gs
or
ret
hlt
adc
dec
or
mov
jae
test
and
lds
pop
js
mov
mov
sub
mov
xchg
arpl
pop
into
xor
xor
daa
jmp
jae
fdivrs
xor
ds
inc
daa
adc
cmp
inc
shr
lock
inc
sti
pop
sti
xchg
pop
pusha
lds
fidivrs
add
lea
mov
out
or
aas
loop
push
jp
fs
mov
cmpsb
lds
notl
mov
lds
mov
dec
pop
idivb
jl
sub
outsb
into
jg
jno
xor
mov
lods
adc
arpl
mov
mov
and
mov
xchg
out
xchg
enter
dec
in
inc
std
mov
mov
xchg
dec
test
repz
mov
int
xor
add
call
pop
or
mov
push
stc
aam
mov
adc
data16
sbb
clc
push
dec
shrl
mov
adc
cmpl
mov
mov
push
jl
scas
test
mov
push
dec
xor
ss
out
cmp
push
xchg
in
pop
das
mov
jo
push
jo
pop
jbe
pop
cmpb
or
mov
dec
cmp
and
lds
mov
and
mov
jge
subl
mov
notl
mov
movsb
mov
push
and
and
or
pop
push
adc
cmp
std
pop
push
inc
mov
push
sti
pop
pop
sbb
mov
or
imul
mov
mov
mov
stos
andb
cmc
push
xchg
cltd
and
adc
and
insl
rcll
loope
fprem1
jno
pop
push
addr16
adc
or
xor
cmpsl
mov
mov
ret
pop
inc
xchg
jbe
enter
cmpsb
jb
lods
inc
pop
pusha
pop
inc
das
cmp
sbb
lods
pop
rol
jo
movsl
pop
xor
jle
pop
hlt
or
orl
cmc
and
rcrb
clc
mov
aaa
clc
mov
subl
xor
inc
and
lret
dec
push
mov
inc
and
stc
adc
or
pop
add
add
inc
insl
cltd
or
push
jns
orl
lcall
pop
ja
test
mov
rcrl
aam
out
daa
mov
mov
jmp
mov
jnp
sti
dec
test
push
call
cmp
or
xor
pop
adc
cmp
stos
sub
xor
xor
sub
xlat
out
sub
push
and
push
cld
sub
or
out
rclb
jg
arpl
lahf
xor
lods
adc
fs
test
rcr
mov
pop
pop
pop
arpl
and
lahf
mov
icebp
aad
mov
xchg
out
les
data16
jno
jge
sub
push
pop
fs
dec
sbb
pop
pop
iret
pop
test
dec
mov
jmp
cwtl
adc
das
inc
pop
sbb
cmpl
xchg
outsl
roll
dec
jle
pop
or
outsb
dec
inc
pop
cmp
jp
subb
ffreep
push
dec
in
leave
lds
lcall
jmp
jnp
sbb
iret
leave
ret
push
loop
push
mov
jns
lret
mov
fidivrs
lods
imul
jl
insl
pop
fidivl
nop
imul
mov
and
insl
jle
inc
mov
or
ret
xchg
sub
enter
adc
aad
ficoml
repz
inc
das
sbb
push
je
and
and
adc
popa
push
hlt
pop
adc
movl
imul
sahf
xlat
mov
cld
icebp
fwait
in
pusha
and
mov
testl
jne
in
push
and
sbb
rorb
sbb
pushf
in
mov
xchg
je
aas
jl
cmpsl
dec
outsb
lea
lds
cmp
xchg
push
mov
hlt
test
sbb
sbb
pop
sahf
cmc
loop
lods
push
push
adc
dec
add
arpl
js
sbb
dec
cmc
fisubs
shl
mov
addr16
mov
lds
daa
test
setb
rcrl
pop
sete
cmp
out
xchg
xor
int3
out
sub
inc
cmp
repz
mov
pushf
fld
xchg
cltd
sbb
dec
out
inc
sub
lahf
icebp
push
ljmp
add
aad
outsl
vpunpcklqdq
push
mov
aad
in
call
inc
rcrb
xor
dec
push
scas
les
bound
mov
dec
pop
mov
xchg
dec
test
inc
das
jbe
fisttps
sbb
pop
add
mov
imul
cmp
mov
aam
clc
cltd
fidivrs
xor
stc
pop
or
xchg
mov
dec
insl
je
pop
adc
and
adc
adc
es
xchg
out
cmp
subb
fs
movsl
stos
xor
pusha
sub
pop
jecxz
xchg
scas
push
xchg
and
dec
mov
imul
stc
imul
cmp
shrb
imul
mov
jno
jl
sbb
movb
or
sbb
pop
xchg
xchg
insb
push
lahf
add
pop
xor
mov
call
nop
popl
sahf
jp
lret
and
mov
nop
add
std
xchg
inc
jae
pop
adc
aas
arpl
mov
inc
idiv
jae
add
test
xor
pop
ror
loop
js
or
jnp
out
xchg
xchg
sbb
ja
adc
pop
out
dec
adc
sub
mov
jge
mov
outsb
jp
clc
jae
in
sbb
ja
jnp
add
ret
pushf
fwait
mov
cltd
cmp
add
ljmp
and
mov
or
mov
fstpl
scas
xchg
jne
sbb
push
jb
push
mov
mov
mov
or
sahf
push
cli
cltd
shlb
test
test
out
call
outsb
cwtl
cmp
dec
ljmp
inc
jno
scas
addr16
jp
and
inc
cmp
iret
xor
movsl
stc
rol
nop
xor
es
inc
cwtl
mov
shrb
mov
and
les
and
bnd
pop
pop
cs
push
pop
mov
mov
ljmp
add
aaa
pop
fnstenv
xor
mov
js
sbb
insb
jnp
or
rclb
jcxz
imul
shrl
jne
fdiv
movsl
inc
mov
jne
and
ljmp
mov
enter
push
dec
push
dec
jno
popa
sub
fstps
jns
jecxz
add
rcl
std
jp
leave
jp
out
clc
out
adcb
or
clc
cmp
cmpsl
sub
out
aaa
mov
xchg
and
push
jg
and
sbb
sub
frstor
imul
repnz
xchg
aas
xchg
push
adc
mov
addb
sub
or
pop
mov
inc
pop
jae
in
outsb
xor
in
cmp
mov
outsb
sub
fidivs
insl
mov
fidivrs
mov
sbb
add
sahf
sahf
rol
xor
mov
sub
sbb
aaa
aas
inc
xor
dec
xor
pextrw
or
dec
push
and
pop
movsl
iret
add
sarl
pop
rcll
push
stc
adc
in
mov
lret
shlb
ja
mov
std
fdiv
and
imul
repz
mov
lret
movsl
xor
pop
inc
xchg
jbe
in
loop
cmp
mov
stos
enter
sbb
xchg
jl
xor
les
aad
fistpll
or
pop
add
fucomip
cmp
and
repnz
lahf
gs
or
fwait
dec
cmpsb
nop
xlat
pop
clc
iret
rorl
xor
pop
les
sbb
xchg
lea
mov
push
push
mov
dec
repz
shrl
mov
shrb
in
and
repz
lods
and
mov
mov
ja
add
jg
or
inc
mov
adc
or
pushf
push
loop
leave
nop
mov
int3
inc
adc
dec
and
fcmovnu
js
cmc
push
jle
test
and
pop
adc
and
js
pop
inc
int3
nop
cwtl
push
xchg
adc
mov
js
and
out
fs
dec
jge
adc
aam
pop
shll
sub
enter
and
sbbl
and
pop
and
cmpl
sbb
insl
mov
cltd
call
mov
mov
pop
mov
pop
add
popa
jle
insb
inc
sub
cwtl
xor
pop
jno
pop
fwait
sub
pushf
in
fsubrs
call
add
mov
or
rorb
pop
sub
mov
xchg
cltd
adc
mov
mov
cs
xor
call
daa
popa
dec
jne
xchg
imul
das
add
cmp
adc
sub
mov
nop
inc
pop
push
ret
pop
cmp
js
inc
cmpb
fcmovnb
jno
pushf
ret
cmp
cmpsb
xor
int
popf
xchg
lahf
cmpsb
add
lcall
movsl
sbb
out
or
or
arpl
sbb
cmp
loop
xchg
outsb
int3
or
mov
mov
fnsave
inc
push
daa
test
sub
add
mov
cmp
xor
fstpt
daa
and
pushf
dec
loope
dec
push
jecxz
xchg
ret
sbb
lahf
xchg
add
mov
inc
lds
ffreep
shlb
mov
cmp
adc
scas
jnp
imul
push
push
sub
push
jl
jnp
lock
adc
lcall
sbb
in
ffree
lret
mov
sub
mov
xor
cs
das
inc
cmp
sub
push
push
xchg
adc
test
scas
inc
ljmp
dec
rclb
adc
cwtl
sub
sub
mov
gs
pop
dec
sbb
add
push
jne
pop
clc
leave
nop
int
lret
sub
jg
and
sysexit
cs
inc
xchg
mov
or
push
push
andb
dec
fwait
repz
out
push
out
push
sbb
dec
and
cmp
insb
mov
std
mov
sub
mov
push
les
and
call
and
dec
push
push
push
push
rol
mov
enter
cmpb
xchg
lahf
nop
rcrb
test
sar
mov
fisttpll
push
mov
sbb
sbb
pop
movsl
scas
idivl
mov
jae
call
test
cld
pop
and
jns
fdivl
popa
daa
test
mov
sub
jge
pop
mov
dec
add
inc
enter
sbb
out
lock
lock
movsb
aas
inc
jns
jbe
add
cmp
daa
mov
add
xchg
add
sbb
dec
pop
jns
test
jae
aas
ja
loopne
notb
in
xchg
sbbb
jns
mov
jae
test
and
test
in
inc
stc
ret
fistpll
aam
in
rcrl
dec
cmpsb
stos
cltd
addr16
lcall
xlat
mov
insl
add
rcpps
lock
dec
push
cpuid
imulb
stos
in
je
arpl
es
mov
and
jge
adc
rsm
dec
jg
inc
cwtl
pop
jo
adc
and
test
mov
in
push
pop
add
je
shll
scas
ds
arpl
inc
data16
add
lea
jae
clc
xchg
lahf
cmpsl
sbb
orb
rcrb
sub
push
pop
inc
jb
add
test
pop
cmp
cwtl
loope
popf
lea
inc
rorl
jecxz
rcr
mov
movsl
mov
push
out
dec
and
mov
gs
or
fists
test
sbb
insb
call
xor
pop
mov
call
pop
mov
push
mov
xor
mov
shl
mov
fbstp
ret
in
add
sub
and
push
mov
icebp
movb
hlt
shlb
and
fdivrl
add
sbbl
mov
scas
insb
or
jle
das
pop
clc
push
fistpll
jae
outsl
imul
cltd
addr16
mov
jb
push
lds
mov
xchg
loope
stc
fistps
divb
out
xlat
ja
out
add
adc
xor
push
repz
test
push
xchg
in
sub
pushf
ret
xchg
pop
popf
addr16
jae
xlat
inc
mov
add
or
and
mov
inc
sbb
add
ror
icebp
jno
pop
and
push
repnz
popf
lea
xor
and
mov
or
adc
enter
mov
cmp
jg
es
push
sub
psrld
and
out
or
and
out
mov
cmp
pop
mov
call
orb
loop
pop
or
mov
cmp
loop
xchg
sub
cmpsb
cmp
inc
lret
jl
jae
popf
cwtl
pop
arpl
jb
jns
sbb
test
sub
cltd
xor
mov
cs
push
lret
ds
sbb
mov
jnp
ret
test
pop
imul
fdivr
xchg
fsubrp
mov
mov
push
cmp
loope
je
in
fnsave
add
pop
jno
hlt
stos
ret
addb
mov
mov
ds
mov
push
jo
or
sbbl
imul
fisubs
sarb
and
fwait
subb
je
lret
scas
cmp
lds
out
out
leave
punpckldq
mov
insb
sahf
xchg
jae
dec
mov
enter
leave
xchg
repz
pop
das
mov
inc
cmpb
das
les
xchg
and
test
dec
movsl
mov
stos
pop
lcall
movaps
out
xor
sbb
icebp
shlb
add
mov
into
xor
test
mov
daa
shr
dec
pop
mov
lods
cmp
mov
ljmp
xor
hlt
scas
out
imul
pop
mov
and
push
loop
leave
sar
adc
jne
fsubl
sbb
enter
fwait
and
adc
pop
fdiv
fidivl
jnp
int3
mov
fwait
popa
lret
js
cltd
leave
ja
or
icebp
loop
stc
lods
inc
ret
xchg
mov
bound
scas
enter
push
filds
arpl
sub
pusha
inc
nop
lahf
dec
sti
lahf
sahf
fdivs
cltd
xor
or
and
notl
int3
jne
push
pop
je
mov
add
shlb
add
push
jno
pop
inc
clc
jg
lcall
and
iret
outsl
and
in
outsl
jo
mov
mov
test
jb
scas
sbbl
inc
or
jmp
or
sbb
jno
adc
dec
in
cwtl
outsb
icebp
call
push
fisubs
mov
mov
push
rorl
cltd
xchg
mov
cmp
daa
xchg
mov
dec
mov
pop
adc
xorb
test
mov
insb
mov
jns
idivl
pop
sahf
in
addl
jle
mov
leave
out
pop
enter
cmp
repz
pop
jns
xor
mov
pop
loopne
fnstenv
lahf
rcrb
icebp
mov
sahf
adc
sbbb
push
jno
lds
dec
mov
sub
pop
cmp
fcompl
icebp
dec
testb
mov
andl
repnz
mov
cs
push
and
xor
mov
pusha
jnp
cld
test
adcb
mov
xchg
cmp
mov
out
aaa
dec
movzwl
inc
ss
and
add
jg
aaa
dec
and
xor
inc
cs
pop
fsts
and
pop
jle
mov
cmc
outsl
adc
pushf
cli
jle
call
adc
pop
inc
jge
fs
mov
jns
or
inc
push
xor
mov
fs
jnp
lcall
stos
mov
mov
imul
fadds
jmp
mov
and
int
cmp
ljmp
fsubs
jbe
sbb
mov
in
mov
scas
xor
scas
push
cmp
push
aaa
adc
stos
test
mov
xchg
scas
mov
lea
mov
ljmp
lahf
out
pop
pop
lcall
lret
cmpsb
test
xor
fstp
sbb
mov
into
jmp
sbb
pop
call
jb
in
cmpsb
xor
ss
mov
lret
icebp
push
xchg
es
out
hlt
les
xchg
test
mov
push
mulb
lock
mov
adc
pop
jmp
add
xor
push
out
pop
imul
cwtl
sbb
cltd
mov
in
addb
loop
or
imul
xchg
int3
dec
repz
ficoml
inc
pusha
inc
jmp
pop
xor
test
push
mov
out
adc
mov
xchg
cmpsb
addr16
lret
aas
jns
mov
int3
adc
fsubl
jge
xor
shl
pop
imull
es
leave
inc
adc
xchg
add
push
pop
fistl
xchg
cmp
imul
jo
xchg
cld
mov
loop
pop
orb
add
incl
fldcw
jne
mov
gs
test
das
outsl
adc
mov
xor
daa
push
aad
icebp
xor
out
in
pop
movsl
push
inc
jp
xor
pushw
iret
adc
test
scas
bound
iret
mov
popa
xlat
push
lahf
inc
loop
jae
dec
repz
push
into
and
xor
push
pop
sub
in
sbb
jns
lock
pmulhuw
aad
inc
lcall
mov
stc
xchg
pop
cmp
push
push
loope
adc
pop
xor
ja
and
inc
test
inc
loop
push
lcall
and
punpcklbw
outsb
bound
lahf
mov
arpl
pop
push
mov
int
orb
imul
mov
ret
xor
popa
adc
movsb
scas
rorl
ljmp
pop
mov
out
pop
jo
jae
xchg
sub
sbb
fwait
sub
ret
xor
iret
mov
jmp
mov
adc
in
arpl
push
das
cmp
aad
mov
mov
lret
outsb
xchg
hlt
ss
test
mov
rcrl
pop
sbbl
mov
imul
mov
and
inc
cmc
pop
jecxz
mov
rorb
mov
jp
sti
mov
pop
jl
pop
pop
test
push
sti
fldt
sahf
pop
cmp
xor
into
in
int3
cmpb
ljmp
ds
in
push
fdivr
sbb
dec
cs
or
add
pop
ja
movsl
js
xchg
in
ljmp
test
inc
dec
pop
loopne
mov
ret
mov
pop
arpl
sbb
neg
xchg
inc
lods
repz
mull
iret
sbb
lret
cmp
push
cmp
adc
cmp
in
das
out
stos
xor
sti
pop
cmp
mov
dec
iret
jbe
scas
pop
sbb
loopne
test
outsb
bound
pop
mov
mov
loop
das
mov
sub
jae
bound
les
dec
xchg
and
mov
test
cmp
repz
test
ja
int3
cmp
fcompl
mov
iret
jge
fadd
mov
sub
loop
addr16
daa
mov
or
mov
cwtl
push
dec
sub
or
rcrb
mov
loop
ljmp
or
test
outsb
add
mov
mov
insb
fsubl
pop
scas
scas
pop
jae
xor
xor
inc
dec
pop
in
mov
lcall
pop
or
and
repz
and
adc
pushf
and
mov
dec
push
inc
inc
sarb
stos
push
jp
lahf
sbb
addr16
jmp
and
insl
cmpsb
jnp
push
insb
xchg
lods
cmp
std
roll
clc
cmpsb
adc
stos
adc
push
test
call
in
inc
daa
ljmp
into
scas
imul
pusha
mov
jp
movsb
push
or
test
mov
mov
xchg
sub
xor
and
mov
or
inc
mov
dec
scas
cs
cs
scas
push
and
loop
sub
nopl
and
outsl
inc
push
dec
bound
and
inc
xchg
jmp
fs
test
sub
xor
xchg
push
or
in
jbe
dec
outsl
jmp
cmpsl
mov
mov
push
cmpsl
mov
mov
mov
outsb
dec
ret
enter
inc
xchg
scas
add
repnz
popf
sbb
adc
bswap
mov
push
cmpsb
sbb
mov
xor
dec
fidivrl
sub
or
push
enter
out
loope
popf
jle
mov
jl
out
push
and
or
xor
mov
shrb
mov
push
ret
dec
rol
inc
dec
jl
jo
enter
mov
pop
xchg
stos
fstl
jns
jecxz
push
data16
jo
xor
pop
out
or
mov
sbb
xlat
aas
in
jns
or
fsubrl
mov
or
cld
inc
shl
leave
std
xchg
cwtl
lea
push
dec
mov
mov
push
jp
into
in
add
test
xor
xlat
addb
and
mov
xor
sbb
sub
stos
mov
rcrb
testb
mov
jb
imul
addr16
aaa
outsb
push
add
arpl
push
sbb
dec
lcall
sub
push
or
loope
inc
leave
imul
call
pop
stos
das
and
sti
adc
xor
scas
push
incb
and
jmp
push
lahf
sbb
sahf
ds
inc
dec
ret
pop
and
repnz
call
jp
push
ss
mov
xor
repz
popf
sub
and
lock
mov
aad
into
in
jp
mov
cmp
jae
dec
jmp
push
inc
fwait
test
inc
adc
fimull
out
xlat
sbb
ror
lods
sbb
sub
arpl
insb
stc
test
jno
repz
xor
cmp
dec
pop
pop
fisttpll
es
hlt
or
outsb
jg
push
iret
add
bound
outsb
pop
inc
or
pop
push
fwait
push
loope
inc
and
lcall
sbb
std
sbb
fsubs
dec
and
jmp
scas
hlt
xlat
js
xor
push
push
pop
mov
fwait
and
xchg
rcrl
subb
inc
out
fwait
je
sbb
subl
lret
out
mov
loop
mov
inc
mov
sub
mov
ret
out
sbb
test
stc
imul
dec
in
in
das
inc
mov
and
cwtl
andb
jge
movsb
cmp
inc
and
psubw
cmp
jns
inc
and
jnp
xor
fildl
jns
fildll
dec
adc
mov
imul
mov
push
jmp
fsubs
dec
sub
insl
addb
xor
mov
dec
fwait
sbb
sbb
jnp
jb
xchg
mov
dec
jle
fidivl
movb
sbb
icebp
in
aas
pop
jne
lock
xchg
fstps
test
and
jmp
inc
hlt
mov
sbb
pop
cmpl
into
lcall
outsb
hlt
mov
cmp
lds
inc
mov
mov
cmpsl
icebp
loope
cmp
mull
push
xor
xor
popa
xchg
adc
lds
inc
stos
push
cwtl
imul
nop
imul
sub
call
mov
sbb
cmp
push
stos
inc
push
dec
mov
xor
out
sub
xor
stc
jge
aad
add
insl
icebp
hlt
add
pop
lods
fnstenv
or
jne
sbb
int3
and
or
jmp
inc
sbb
jecxz
outsl
jmp
int
xchg
inc
sbb
enter
sbb
add
jae
insb
aam
and
loope
dec
je
loop
out
pop
fstps
call
mov
ja
jp
inc
ficompl
stos
cs
jge
rcrl
ss
int3
pop
add
sar
imul
es
jge
je
push
jnp
mov
jbe
ret
mov
jp
call
out
mov
or
mov
adc
sbb
sbb
test
sub
shr
lods
xchg
inc
dec
mov
jno
ss
aam
fwait
xchg
rep
in
pop
test
or
roll
or
jb
xchg
push
pusha
outsb
mov
test
les
jbe
push
xor
in
or
adc
inc
scas
jns
out
pusha
adc
add
xchg
inc
int3
jge
dec
movsl
ds
outsb
adc
popf
jl
xchg
jnp
jge
fwait
xor
adc
gs
lea
push
mov
bound
mov
fsubp
loop
cs
rcll
and
aas
push
mov
pop
mov
xchg
sbb
cmp
mov
push
ljmp
mov
loop
add
mov
int3
adc
fs
or
lods
sahf
mov
push
adc
push
push
insl
out
lea
enter
out
mov
in
dec
cwtl
rorb
cs
pop
push
jo
cmp
fs
adc
sub
maskmovq
negl
scas
arpl
lea
sub
out
loope
inc
aam
pop
out
push
xchg
mov
dec
rcrl
jge
pop
cltd
jnp
out
ss
add
mov
push
orb
add
or
push
lcall
push
lock
int3
cmovge
das
cmpl
mov
pop
sbb
andb
inc
xchg
jg
stos
sbb
dec
out
ja
cs
out
out
cmpsb
rcl
sub
fisttps
stos
xchg
rcll
int3
inc
cmc
xchg
fs
or
xor
push
xchg
pop
cmpsb
imul
loope
popf
aad
or
mov
mov
push
shll
scas
cmpl
and
movsb
std
dec
xor
dec
cmp
dec
test
xchg
in
loope
push
pop
push
adc
jle
add
jl
mov
stc
fcomp
mov
xchg
daa
outsb
or
xchg
ljmp
loopne
mov
mov
cwtl
or
push
in
and
mov
push
ret
push
repz
sbb
popf
push
leave
daa
xor
mov
xchg
loopne
push
xchg
jg
adc
rorb
ss
cmp
cmp
les
out
fistl
inc
nop
shlb
repz
fwait
mov
popa
jge,pn
popa
insl
inc
jnp
sahf
and
lods
push
sub
cmpsb
daa
push
out
or
adc
mov
mov
in
sub
adc
ljmp
xor
divb
int
leave
sbb
adcb
xchg
adc
xlat
movsl
push
stc
lcall
mov
adc
je
add
subps
and
jns
arpl
pop
imulb
dec
jns
dec
sarl
mov
arpl
cmp
lock
cmp
add
daa
ja
mov
xor
pop
jl
adcl
je
mov
icebp
dec
lock
std
into
loopne
aad
mov
pusha
dec
pushf
jg
insl
sbb
and
mov
xor
out
test
int
jo
movsb
cmp
pop
hlt
sub
filds
and
cmp
test
lock
mov
inc
out
mov
clc
mov
mov
jmp
ret
into
or
pop
lds
adc
cmp
xchg
lahf
mov
mov
push
pop
pop
fwait
pop
popa
mov
dec
mov
mov
movsl
arpl
xor
xchg
inc
mov
pop
insb
nop
xor
rcrb
inc
push
ss
dec
test
lea
adc
sar
repz
inc
and
fcoms
int3
lret
call
test
push
add
add
mov
hlt
or
icebp
mov
mov
out
int
cli
adc
cmp
add
popa
cltd
inc
hlt
inc
lods
push
sub
sub
xchg
xchg
lcall
jnp
daa
pop
addl
ficomps
and
in
mov
mov
inc
dec
cmc
fistps
icebp
je
xor
scas
pop
fnsave
push
ret
stc
lcall
jnp
or
mov
mov
jp
movsl
xchg
mov
add
shlb
fldcw
lods
fistpll
in
icebp
adc
sbb
outsb
addl
imul
shlb
inc
mov
and
lock
cltd
and
or
xchg
ljmp
xchg
int3
shlb
mov
inc
jg
mov
adc
push
dec
xchg
inc
into
in
lahf
outsl
out
sbb
dec
int
stos
das
xchg
push
idivb
lcall
dec
adc
sarl
pop
xchg
xchg
mov
mov
xchg
sbb
add
icebp
mov
and
jl
pop
fs
gs
int
icebp
in
push
inc
bound
adc
mov
push
aam
popf
jp
xchg
iret
inc
sarl
int3
fcompl
adc
mov
dec
ds
ss
or
roll
and
lods
popa
daa
scas
mov
fimull
icebp
cs
mov
sub
test
shll
fcomp
aad
fadds
ret
adc
mov
sub
mov
cs
shll
push
dec
imulb
and
and
mov
testb
addl
sbb
stc
sub
mov
cmc
mov
divb
aam
xchg
jb
in
sahf
and
pop
jae
mov
pop
push
cld
add
add
jno
les
test
cmp
divb
pop
fidivl
iret
rol
cmp
sub
sub
je
mov
pop
cs
and
jg
ds
lock
mov
jg
mov
mov
call
es
pop
dec
ljmp
sbb
data16
jne
cmpsb
dec
mov
fisubl
dec
push
sbb
adc
and
mov
cs
mov
mov
call
ss
ret
inc
and
mov
fildl
js
xchg
insb
clc
or
dec
clc
sbb
std
jo
aas
jecxz
pop
push
in
mov
mov
nop
cmp
movsl
xchg
add
jns
imul
jl
fcomps
xchg
xlat
mov
in
lret
shlb
mov
movsl
sbbl
cmc
mov
rol
and
jmp
add
sbb
adc
lods
scas
fstps
rclb
push
push
pop
sub
insb
test
xchg
cltd
fmul
adc
sbb
jl
mov
mov
push
sub
adc
addr16
mov
or
cmpsb
sbb
or
dec
fdivr
pop
xchg
test
xchg
sub
cmpsl
or
ret
pusha
sub
stc
hlt
or
fwait
mov
mov
dec
bndstx
repz
xchg
ja
fwait
cmp
push
add
test
cltd
and
outsl
lcall
mov
adc
lds
sbb
or
fldt
leave
lods
inc
adc
rclb
out
sub
int3
sub
xchg
lds
ljmp
mov
push
and
daa
xchg
mov
dec
repz
mov
adc
or
pop
sahf
iret
sub
lods
push
jecxz
adcb
cmp
jae
jmp
inc
scas
inc
push
push
fsts
xor
mov
rolb
enter
stc
in
add
stc
mov
inc
jl
pop
push
add
std
adc
mov
mov
aas
jmp
subb
lahf
test
arpl
ret
pop
dec
dec
cmp
cmpb
add
fldenv
jno
stc
lret
or
stos
incl
clc
xchg
jns
xor
aaa
popl
mov
pop
cmp
xchg
addr16
push
outsb
push
xchg
loope
sub
std
jle
test
sub
jle
sbb
leave
in
jno
xchg
jno
stc
jmp
sbb
inc
push
push
ficompl
lods
jo
inc
inc
decl
fwait
cmp
add
inc
or
xchg
xchg
pop
dec
sbbb
in
mov
push
cmp
insl
icebp
cmpb
dec
movsl
jmp
js
in
cmp
iret
pop
jo
push
xchg
out
dec
and
subl
mov
inc
mov
enter
mov
aad
out
stos
xchg
and
mov
push
sub
jno
push
lea
sub
inc
shl
xor
or
popa
mov
sbb
inc
clc
jmp
sub
mov
stos
popa
in
lret
fstpt
sub
jmp
jmp
xor
imul
cli
pusha
cmp
js
adc
sub
fld
xchg
pop
push
jb
movsl
in
jmp
cmp
push
ljmp
shll
sub
mov
adc
scas
mov
repz
mov
jle
mov
mov
jo
xchg
jge
sbb
dec
add
pop
adc
push
dec
ds
push
cmp
subl
xor
and
adc
jb
test
ret
xor
cmp
rorl
cmp
repnz
push
dec
sub
mov
xchg
push
fisttpll
shrb
jne
movsb
test
cld
filds
dec
cwtl
je
sbb
push
pop
ret
lea
push
jg
mov
addr16
aam
ror
daa
test
jno
dec
jge
roll
cwtl
sbb
int3
mov
mov
push
push
pop
divl
shrb
xor
mov
add
lods
ret
das
imul
mov
aas
fdivs
adc
sub
icebp
fwait
inc
gs
adc
pop
call
movl
movsb
adc
inc
cmpl
loopne
into
xchg
mov
inc
xor
inc
pop
push
cmp
loopne
add
loopne
adc
movsl
pop
xor
pushf
push
dec
xor
cltd
popf
cmp
or
mov
sahf
int3
test
mov
aaa
mov
int3
or
andl
sub
test
and
ds
aas
fsubrs
jb
push
jo
pop
leave
and
std
cmpsb
adc
cmpsb
xorl
in
fbstp
add
dec
loop
sbb
sbb
cmp
mov
pop
adc
jne
sbbb
add
cld
iret
out
mov
jl
add
xchg
or
dec
in
sti
iret
sbb
aas
dec
cwtl
adc
sub
mov
je
testl
icebp
jns
popf
mov
fstl
imul
rorl
or
or
mov
dec
adc
inc
push
push
pusha
rclb
adc
loope
dec
sar
rcl
scas
dec
push
test
idivl
sti
xchg
cwtl
jge
cld
cmp
ja
cmpsb
out
mov
jp
cltd
pop
dec
xchg
mov
or
mov
mov
sbb
loop
mov
mov
dec
loope
xchg
xlat
arpl
loop
aam
sbb
jecxz
mov
inc
rcr
in
add
sub
dec
push
xor
pushf
and
test
fadd
pop
inc
push
add
mov
out
test
movsb
adc
imul
fcoml
xor
imulb
aad
adc
aas
sub
mov
lea
rorl
sbb
inc
push
mov
decb
push
mov
cmp
sarl
xchg
jmp
jns
jne
xor
ljmp
nop
ds
loop
push
push
dec
rolb
not
sbb
xlat
xchg
call
xor
je
xchg
cmp
sub
in
pop
pop
push
ds
mov
pop
xchg
sub
lods
mov
aas
adc
xor
sbb
add
inc
push
or
outsb
mov
pop
and
add
xchg
mov
and
jnp
and
std
fs
or
lret
mov
stc
loop
rol
testl
cwtl
xor
dec
mov
aas
xchg
es
imul
xchg
and
outsl
jecxz
pmuludq
movsl
popf
outsl
addr16
push
cmpsl
mov
pop
sbb
sub
cmp
xor
cmp
orb
out
popa
lret
rcrb
and
imul
inc
fidivrl
fimuls
lods
lods
xchg
incb
xchg
subb
pop
stos
outsl
jmp
clc
cmp
mov
and
add
sub
js,pn
mov
dec
mov
les
mov
and
mov
jb
popa
xchg
and
and
out
aam
fdiv
pop
mov
pop
insb
scas
and
scas
lods
insb
fists
insl
outsl
fidivs
loope
add
imul
sbb
sub
push
shl
cli
cli
lret
mov
or
xchg
ljmp
mov
mov
adc
out
incb
dec
push
fwait
cltd
in
jecxz
das
jns
adc
stc
ficompl
cs
mov
xor
test
pop
jns
jbe
cld
inc
xchg
inc
inc
lods
mov
pop
xchg
test
loope
test
mov
sti
aad
mov
xor
or
pushf
cmp
outsl
shl
lcall
test
lahf
aaa
inc
fstpt
clc
jg
sub
push
call
push
inc
es
or
rolb
shl
stc
sub
repz
mov
arpl
and
push
dec
xor
mov
dec
shlb
pop
sub
push
out
int3
rcll
bound
push
cmp
add
aaa
pop
inc
repz
and
lcall
xor
pop
xchg
adc
cmpsb
rcll
and
cmp
imul
inc
pop
sbb
test
popf
bound
rolb
mov
loop
iret
lods
pop
into
aas
push
push
dec
xor
sbb
jno
sbb
and
leave
hlt
mov
imul
add
jno
mov
sti
mov
mov
lcall
outsb
mov
xchg
cmpb
mov
xchg
sahf
lret
and
xchg
enter
mov
push
ja
rclb
pop
rclb
or
push
inc
mov
jbe
inc
out
cmp
int3
jo
cld
arpl
mov
xchg
aaa
scas
ficoml
fld
adc
sbb
sbbl
jmp
pop
ret
popf
push
push
es
push
cli
lret
dec
js
xor
in
cwtl
xor
xchg
xchg
or
push
pop
lret
and
or
sbb
inc
sub
pop
sahf
fwait
sub
pushf
cmp
leave
adc
cltd
pop
or
push
mov
cltd
jle
or
ja
and
std
sbb
push
lea
jb
out
ja
push
popf
insb
iret
sub
int
mov
pop
mov
or
xchg
lods
leave
fistpll
addb
test
sbb
test
stc
dec
xchg
mulb
insb
out
sub
xor
cltd
jne
lock
sbb
and
mov
pushf
ds
outsl
mov
xchg
std
xchg
fmull
cltd
int
imul
pop
pop
mov
mov
loopne
pop
mov
in
loop
nop
adc
dec
les
xor
call
dec
lret
iret
out
sar
loope
cmp
or
aas
mov
xchg
cmp
xor
mov
mov
pop
mov
jp
or
fs
faddl
movl
out
jmp
push
je
cmp
sbb
xor
addr16
push
das
daa
xchg
in
pop
push
imul
adcb
sahf
push
stos
movsb
shl
jp
push
sbb
in
or
jnp
inc
daa
repnz
outsl
push
sbb
pop
jno
enter
test
es
inc
ja
orb
dec
lcall
cmp
cwtl
add
jbe
adc
in
cmpl
push
movq
cmp
jp
stc
push
sub
sub
stos
lods
pusha
sahf
pop
lods
testb
push
mull
xchg
push
push
ret
add
int3
out
fimuls
add
pop
mov
hlt
not
out
mov
mov
cmc
lret
jmp
mov
add
cmp
push
and
mov
mov
rcll
shl
out
inc
jmp
push
cmp
push
sub
pop
lahf
add
cld
ljmp
jmp
sbb
xor
cmc
mov
and
in
pop
into
lcall
dec
lahf
adc
icebp
sbb
enter
mov
inc
adc
jae
pmullw
dec
ja
or
fdivl
sti
jecxz
push
pop
dec
pop
movsl
movsl
pop
je
xchg
or
bswap
push
or
add
lock
ret
jmp
xchg
inc
dec
bound
movsb
mov
xor
mov
rol
dec
add
or
rorl
ss
pushf
xor
popf
sub
inc
lcall
dec
pop
xor
adc
loopne
popa
aad
push
mov
add
loop
cmpb
ss
repz
sbb
inc
mov
test
pop
jno
or
xchg
das
jbe
outsl
popa
inc
pop
ret
or
pusha
jns
pop
xor
mov
hlt
dec
adc
jecxz
hlt
sbb
adc
inc
lcall
cmpsb
popa
sbb
out
pushf
fwait
jmp
xchg
and
xchg
sbb
and
scas
mov
cs
jb
lds
mov
add
or
setne
addr16
add
xchg
adc
jle
addr16
push
lods
insb
cmp
insl
sub
jnp
addr16
sbb
dec
pop
cmpsl
aad
cmp
add
lods
lcall
pop
repz
cmp
andb
inc
push
mov
dec
pop
cmpsb
xor
insw
adcl
jnp
push
pop
lock
cli
shlb
fidivrl
inc
stc
nop
pop
dec
sub
mov
scas
ljmp
fcomps
cwtl
in
and
in
fwait
das
xor
int
in
loope
jecxz
adc
call
stc
idiv
shrb
jle
loop
add
xchg
hlt
aam
pop
fcomps
jp
test
push
dec
stos
dec
jp
int3
scas
and
xchg
cmpsl
push
cmp
outsl
movsl
testb
lock
lcall
or
mov
inc
nop
or
roll
and
movsb
xchg
jns
sbb
test
cli
mov
sbb
mov
imul
stos
xchg
ljmp
lock
mov
and
mov
and
pusha
fucom
pop
jnp
je
push
scas
cli
out
frstor
dec
sbb
in
mov
pop
xchg
addl
cmpsb
stc
push
fs
pushf
and
push
mov
outsb
es
jae
xchg
push
rol
dec
addr16
dec
pushf
movsl
sub
mov
ret
bnd
lret
or
and
push
pop
lock
cwtl
rol
ret
hlt
cmpsl
fimull
jl
push
jl
xchg
call
filds
out
jmp
clc
push
call
clc
add
xor
sub
call
jae
mov
xchg
cld
cli
sub
rcrl
shll
dec
cli
sbb
cmp
int
dec
fidivs
popf
pop
pop
popa
call
ljmp
ret
sub
insl
insl
xchg
rclb
dec
pop
ljmp
test
mov
push
in
xor
dec
and
loope
imul
mov
nop
pop
insb
push
sbb
xchg
xor
pop
jbe
iret
xor
inc
sbb
addr16
add
outsl
jl
std
fistpll
push
push
popf
sub
pop
jo
mov
mov
mov
sbb
es
xchg
test
pop
loop
stos
jle
mov
popf
daa
sbb
xor
mov
sti
xchg
push
inc
popf
lcall
insb
leave
out
movsl
adc
xor
pop
cmpsb
adc
stos
ret
mov
add
mov
mov
cwtl
aad
shll
les
hlt
cli
rorl
ret
in
lock
ret
sub
cmpb
add
mov
mov
pop
ja,pn
sbb
scas
jmp
inc
pop
adc
and
test
rorl
dec
add
push
iret
sbb
cmc
add
sbb
push
and
das
int3
xor
stos
hlt
push
jne
dec
andb
xchg
repz
cmp
pop
mov
mov
repnz
cmp
sub
ret
inc
jecxz
mov
rcl
xor
repz
adc
mov
fisttps
adc
adc
jmp
push
popa
loope
test
sub
ds
orb
fcompl
in
cltd
movsb
pop
xorl
jmp
adcl
lock
xlat
xor
pop
rclb
sbb
ds
sbb
ja
in
dec
dec
shlb
int
mov
inc
push
mov
ror
mov
xchg
push
pop
push
mov
imul
stos
daa
jo
sub
pop
mov
fcmovnb
int
in
nop
or
xchg
outsb
and
mov
into
inc
xchg
adc
in
xchg
cmp
in
fdivrl
jns
dec
jnp
call
ljmp
mov
pop
pushf
xor
inc
sub
jne
in
sub
adc
xlat
sub
outsl
and
aad
cmp
nop
lcall
cmp
sbb
push
sub
cmp
pop
in
loop
lret
sbb
repz
fwait
or
lret
xchg
ret
push
xchg
popf
test
lcall
sub
mov
testl
cltd
or
pop
in
dec
mov
in
push
mov
lret
cli
sbb
int
xchg
pop
movsb
or
sub
insl
ljmp
sahf
xchg
sysret
inc
sbb
pop
or
inc
mov
jb
xor
insb
add
fs
inc
popf
fwait
cmc
rcll
mov
mov
sub
xor
dec
xchg
jno
and
push
data16
xchg
push
fmull
jle
mov
mov
push
sub
add
fxch
xchg
call
movsl
push
cwtl
add
xchg
pop
wrmsr
and
push
leave
mov
add
ljmp
push
push
mov
sub
adc
inc
push
cmpl
fnstenv
pop
in
iret
dec
mov
fwait
btr
gs
ljmp
xlat
cltd
cwtl
test
mov
push
je
cmp
xchg
dec
xor
mov
fists
ret
jmp
mov
jne
js
ficomps
rorb
jbe
stos
jbe
fdiv
pop
pop
inc
push
negl
cmp
stos
and
pushl
mov
cmc
add
jno
pop
into
pop
push
xchg
stc
add
cld
ljmp
push
sub
popa
add
push
js
xor
add
pop
lock
adc
test
mov
or
cltd
push
fcom
test
jb
nop
in
lahf
mov
jbe
xchg
repz
mov
mov
mov
aam
out
push
push
fwait
mov
pusha
fidivrs
xchg
into
inc
or
lahf
add
inc
addr16
scas
adc
rclb
and
cld
and
fcompl
mov
pop
les
jae
dec
sbb
xlat
mov
add
aam
std
test
jbe
cmp
push
ljmp
xlat
push
test
test
sub
mov
jns
jg
jae
sbb
out
stc
push
push
dec
adc
movb
shll
pusha
xchg
mov
popa
aaa
xor
in
les
jp
push
cltd
xor
negb
insl
daa
nop
add
or
pusha
std
pop
jge
sbb
fst
push
dec
jne
xadd
xchg
lahf
lret
int
cmpb
inc
div
sbb
add
jl
xchg
mov
in
out
mov
aas
call
shl
jns
imull
sbb
sbb
outsb
js
sbb
xor
arpl
scas
rcrb
pop
dec
adc
xchg
mov
jmp
sub
in
cmp
dec
inc
lret
fdivrl
int3
aad
lret
leave
scas
cmp
lea
out
loope
cld
xchg
xchg
pop
in
std
push
add
and
into
xchg
push
test
shrb
pop
inc
arpl
sbb
inc
imul
addl
aaa
dec
xchg
mov
insl
pop
add
lcall
cli
test
arpl
popf
or
jns
pop
mov
das
push
lods
inc
add
mov
lcall
shlb
mov
insb
lret
cwtl
and
shl
mov
or
imul
adc
add
lahf
sbb
pop
mov
inc
aaa
rcl
int
jge
cld
mov
bswap
mov
jae
or
dec
xchg
dec
fistpl
int3
cmp
arpl
ljmp
fs
fnstsw
fldenv
adc
inc
into
loop
dec
add
test
xor
jnp
rcrl
jb
jbe
mov
sbb
das
cmp
ja
push
iret
leave
hlt
adc
jl
imul
call
es
mov
ret
addb
ror
add
daa
mov
add
push
ret
or
push
pop
fstl
mov
lcall
hlt
push
int
cli
mov
push
stos
out
stos
aad
inc
xchg
inc
fcom
jecxz
ds
xchg
jnp
loope
xchg
or
sbb
pop
pause
mov
inc
rcll
ret
push
aas
test
or
sub
or
cltd
mov
test
push
sub
pop
xlat
les
sub
or
add
ds
repnz
inc
fisttpll
or
int3
adc
in
sub
ret
pop
xchg
dec
mov
sbb
push
js
test
out
sbb
enter
push
mov
ret
rcll
cmc
imul
into
pop
inc
pop
add
test
ljmp
lds
mov
sbb
and
jp
jae
adc
xlat
inc
mov
ljmp
sub
rcr
xchg
xchg
sub
or
les
lcall
mov
push
add
sub
jo
pushf
popf
pop
repnz
add
xor
fdivp
fisubrl
lret
dec
pop
loope
xchg
jns
xchg
mov
bound
ffreep
pusha
dec
pop
in
pop
iret
insb
imul
push
mov
fcmovnu
push
imul
inc
push
or
cmovp
pop
sbb
pusha
out
add
mov
or
or
mov
and
test
xchg
and
push
push
cs
into
dec
arpl
fsubs
ss
test
les
mov
push
sub
push
push
add
mov
mov
cmp
test
popf
rclb
xchg
addr16
outsb
push
leave
addr16
xchg
push
push
mov
pop
push
int
mov
pop
daa
push
shl
scas
lods
ds
mov
push
mov
cmp
lret
bound
sub
pop
xor
inc
xchg
xor
lahf
iret
gs
fmulp
pop
push
mov
mov
dec
outsl
jno
dec
dec
lods
jl
xor
adcl
ss
iret
movsl
ja
mov
es
jle
pop
or
xor
in
cmc
into
bound
bound
sub
add
aad
fnstsw
shll
jl
and
outsb
rcll
cmpsl
jmp
mov
popa
and
cli
pushf
cmpsb
ret
movsb
ret
les
adc
adc
pusha
add
loope
jl
lret
push
cmp
or
jno
push
xchg
xchg
xor
cmpl
mov
jae
jno
sbbl
pop
fwait
sub
repnz
jae
inc
fistpll
sbb
cltd
jp
mov
pop
sahf
jb
inc
add
lret
sbb
ja
rolb
adc
ret
fdivl
mov
ret
sbb
add
lret
lret
insb
orl
std
jne
cmp
mov
fbld
jo
dec
in
pushf
fdivr
xchg
pop
and
lds
adc
lock
outsb
push
mov
ljmp
lret
cmp
movsb
fimuls
imulb
sub
cmp
imul
and
shll
inc
xchg
les
inc
pushf
jb
add
pop
jno
push
add
movb
sbb
cmc
lds
test
imul
dec
sub
jl
in
add
ret
sti
xchg
mov
pop
push
pop
outsb
mov
push
mov
ret
cmp
nop
pop
dec
pop
push
mov
mov
outsb
sbb
mulb
mov
iret
mov
leave
mov
test
pop
cmp
das
daa
fimull
pop
fsubrl
xor
dec
lret
cmpsb
gs
fistpll
out
add
jmp
jb
sbb
mov
cltd
repz
jae
shlb
in
ja
cld
jb
imul
mov
and
or
jne
sbb
icebp
mov
mov
inc
jbe
insl
xchg
mov
fnstcw
rcll
je
and
add
and
and
jnp
repz
jae
hlt
stos
lahf
movsb
cwtl
es
mov
test
mov
push
pop
das
adc
push
jbe
dec
in
insb
xchg
shlb
or
mov
notl
adc
pop
lock
cmpsl
jmp
stc
je
insl
in
js
mov
loopne
dec
sbb
push
and
es
sub
mov
bound
or
push
mov
cmpsb
pushf
rcrb
cmp
icebp
cmp
mov
cli
lcall
mov
test
test
push
push
inc
adc
rorl
pop
push
mov
sbb
or
push
jecxz
mov
outsl
push
pop
jae
push
je,pn
jge
cmpsl
inc
cmpb
in
sub
adc
sub
scas
xchg
jmp
mov
arpl
and
add
outsb
xchg
xchg
add
push
cmp
add
or
int3
push
sti
sbbb
sub
int
mov
cmpsb
outsb
int3
jle
int
aas
push
fwait
xchg
insb
push
insl
out
xor
xchg
scas
inc
arpl
lcall
ja
pushf
add
add
gs
mov
ret
jmp
mov
and
jo
pop
lcall
lds
cwtl
mov
mov
sub
xchg
pop
push
sbb
pusha
xor
addr16
fmull
loope
push
jmp
xor
push
pushf
mov
lds
or
pop
cmpsl
inc
pop
arpl
lock
sub
mov
es
mov
add
jb
data16
leave
push
sub
pop
jne
das
das
pop
pop
aam
or
inc
call
ja
aam
test
sub
jge
movsb
mov
mov
pop
or
sub
int3
and
imul
les
adc
and
lock
repnz
cwtl
dec
call
xchg
mov
pushf
out
adc
out
lahf
xor
xor
mov
popa
std
mov
xchg
jle
jp
jmp
sarb
mov
inc
bound
out
lcall
dec
repz
mov
movsl
xchg
cltd
outsb
lcall
inc
fiadds
loope
movsb
gs
pushw
rorb
es
mov
pop
dec
xchg
scas
fbld
shl
xlat
dec
fucomp
sbb
jnp
inc
int3
cmpsb
loop
cmp
and
lods
jecxz
ret
xor
shll
jecxz
xor
int
movsl
popf
ljmp
or
ret
jno
inc
pop
stos
cld
iret
cld
pop
fdivrl
pop
lock
pop
in
mov
test
daa
xor
pop
mov
repnz
mov
inc
cmc
xorb
mov
inc
mov
push
ficoml
inc
aaa
cmpl
shl
lods
lods
dec
fadd
pushf
push
inc
sbb
stos
push
fisubl
in
ds
or
nop
bound
or
mov
rcrl
mov
iret
mov
or
insl
scas
cwtl
in
and
cld
jecxz
add
in
daa
fistps
movsl
mov
jnp
mov
jne
add
je
mov
push
in
pop
bound
xchg
loopne
sub
mov
loopne
out
jmp
jb
sarb
adc
cltd
and
loope
pusha
adc
out
mov
popf
or
jmp
pop
jno
push
cmc
xchg
lea
and
or
dec
mov
mov
fld1
prefetch
and
iret
sub
push
adc
cmpsl
pop
out
xor
in
add
cli
xchg
push
sbb
sbb
popa
div
aam
jge
inc
or
pop
add
popf
push
mov
pop
dec
leave
pop
sbb
sahf
xchg
mulb
xor
int3
xchg
mov
push
loope
insb
mov
test
cltd
xchg
jb
cmp
cmp
jmp
mov
mov
jns
gs
jecxz
repz
jle
pop
pusha
sub
dec
je
cs
aas
mov
cmp
scas
std
xchg
mov
jp
clc
enter
dec
jl
fcoml
sbb
pop
mov
arpl
xor
aam
push
lcall
and
rolb
pop
add
test
insb
stos
pushf
pop
mov
and
shl
ret
sub
cltd
or
insb
lds
xchg
and
inc
adc
cwtl
push
push
mov
les
sub
adc
pusha
pop
popa
cmpsl
pop
clc
adc
hlt
test
xchg
stc
repz
or
stos
and
ljmp
test
mov
cmp
push
call
aad
ja
sub
xchg
bound
out
push
xor
outsb
adc
fldl
fidivrs
movsl
or
popa
push
stos
or
and
insb
push
pop
data16
jg
jae
sub
sarl
or
mov
sbb
cmpsl
and
pop
push
jne,pn
testb
push
dec
or
jb
negl
and
rcrl
cld
vcvtsd2si
popa
mov
into
xchg
mov
fadds
mov
cmpsl
loope
push
mov
ds
cmc
lcall
jmp
dec
jl
ss
sub
mov
mov
and
iret
pop
and
sahf
cltd
fisubs
or
in
lcall
je
mov
xor
xor
fstpl
and
aam
inc
in
jno
xchg
test
pop
xchg
jl
or
out
mov
decl
test
sub
add
pop
fcompl
into
push
ja
sbb
test
dec
lcall
aam
mov
adc
ds
inc
adc
mov
push
ret
pop
mov
aam
test
or
stos
iret
mov
clc
pop
fsubp
jae
enter
jmp
cmp
hlt
lret
scas
jl
adcl
les
mov
mov
iret
fldcw
andb
jle
push
jb
mov
sub
repnz
cs
mov
push
adc
xlat
dec
inc
test
pop
cltd
and
dec
lret
xor
mov
xchg
and
aas
adc
je
leave
cmpsb
dec
mulss
fstp
sub
popa
mov
aas
sbb
fisttpl
mov
and
outsb
mov
into
xor
mov
or
and
add
gs
fldenv
out
shrl
outsl
pop
sub
inc
jl
in
push
cmp
push
fidivrs
push
mov
lods
or
jle
sub
add
add
or
clc
and
push
jno
xorb
cmp
mov
daa
ljmp
jp
out
and
loop
es
push
xor
jnp
aaa
xor
mov
insb
and
imul
jg
hlt
sub
int
xchg
inc
movsb
jae
or
push
cs
dec
test
xor
pop
mov
gs
adc
scas
in
mov
push
push
test
lods
imul
fsubrl
xchg
or
mov
call
xchg
xor
add
insb
and
xchg
stos
lahf
insb
iret
test
pop
mov
xchg
cmpsb
xlat
clc
daa
shrb
testb
jmp
addl
and
mov
xor
or
in
lret
cld
leave
aam
imul
fiadds
popa
sbb
xlat
fnstsw
lds
push
mov
xchg
std
adcb
adc
daa
push
push
repnz
dec
push
rorb
cmp
pushf
sarb
mov
sbb
aad
scas
adc
mov
popl
leave
xchg
mov
sub
icebp
addr16
dec
aas
mov
cs
les
push
sbb
popf
in
pop
adc
and
inc
cltd
daa
pop
mov
loop
xchg
xchg
mov
jno
pop
mov
mov
jmp
stos
mov
ljmp
pop
out
lahf
push
mov
ljmp
test
bnd
or
out
and
dec
or
or
outsb
hlt
rol
cwtl
ds
clc
stos
mov
or
or
xchg
fcompl
pusha
mov
jge
pop
mov
inc
lcall
bound
jmp
and
out
adc
jo
add
sub
cmc
int
fidivrs
mov
jmp
mov
test
mov
jb
xchg
xchg
loope
dec
es
das
mov
jp
lret
cmp
test
repnz
or
sbb
push
xchg
xor
sbb
bound
inc
push
push
loope
es
xor
jle
iret
faddl
stos
fcmovu
mov
xor
mov
xlat
inc
loopne
aam
and
mov
pop
xor
jb
lea
js,pt
inc
ss
shll
pop
and
mov
clc
or
mov
nop
sub
ja
sub
in
js
cmp
ss
dec
cmpsb
imul
test
adc
sub
inc
and
jo
lea
ds
inc
popa
adc
popa
sti
addr16
adc
jmp
lods
adc
sbb
scas
cmpl
sub
pushl
lret
les
sbb
notb
push
mov
shlb
imul
push
xchg
aad
jo
or
add
mov
sub
xorb
loop
jl
and
aas
inc
xor
repnz
test
push
push
std
inc
and
fdivrl
mov
movsb
in
js
pop
ja
shrb
fistps
movsb
js
mov
fwait
inc
lock
push
adc
out
repz
mov
xchg
cwtl
lds
jge
mov
adc
sub
mov
pop
cmpsb
sub
stc
mov
pop
mov
and
pop
ljmp
pop
push
lahf
xchg
sahf
or
mov
dec
outsb
push
xor
or
call
je
cmp
rcl
icebp
insl
dec
ds
pop
daa
fsts
fcomip
leave
insl
push
pushf
xor
movsb
in
push
xchg
mov
lret
xlat
out
fisubrl
add
imul
nop
push
or
subl
and
dec
mov
fndisi(8087
shrl
out
add
pop
mov
and
out
shrl
rcll
push
sbb
loop
inc
mov
mov
cmpsb
out
iret
xchg
and
shlb
adc
andl
sbb
jecxz
mov
data16
insl
hlt
pop
push
xchg
pop
inc
pop
jnp
in
cmc
or
or
inc
mov
push
and
ja
out
inc
push
xor
pop
push
pop
push
rorb
or
std
push
les
sti
outsl
inc
xor
cmc
sub
mov
out
test
movsl
jmp
push
fs
repnz
adc
in
sbb
lahf
lret
xor
in
stos
loopne
fisubs
push
lods
fwait
sbbb
fsts
arpl
pop
fdivrs
or
push
out
and
pop
iret
decl
xchg
loope
jns
addr16
stos
je
in
xchg
mov
popa
call
jecxz
push
push
inc
adc
xchg
arpl
mov
repz
jge
out
insl
xchg
push
push
sbb
push
testl
jnp
inc
dec
inc
in
ljmp
rclb
xor
scas
push
imul
mov
int
push
fs
fmull
rorl
test
xchg
adc
cmp
or
xchg
int3
mov
mov
pop
fdiv
int
movmskps
jmp
or
xchg
lods
ljmp
sub
inc
nop
inc
mov
mov
mov
and
mov
fsubs
loopne
mov
mov
mov
addr16
mov
insl
dec
jno
sbb
jecxz
rorb
fcoms
or
xchg
mov
iret
dec
and
dec
lods
stc
out
stos
dec
rolb
mov
mov
jno
xchg
lds
in
mov
test
shll
pop
cmpsb
inc
pop
in
jnp
mov
mov
sub
out
and
ret
fwait
sbb
pop
lods
xchg
adc
cmp
pop
iret
repz
cmc
add
inc
fwait
mov
rcll
cmpsb
xor
mov
popf
mov
xor
push
push
cmpsl
push
stc
dec
mov
sbb
sahf
adc
jmp
mov
and
mov
mov
stc
test
loopne
adc
and
push
std
sbb
fmull
pop
cmp
or
repnz
sbb
lds
dec
dec
test
jg
decl
jge
sub
mov
adc
cmp
mov
shr
push
shlb
adc
inc
orb
add
sbb
dec
pusha
je
inc
in
dec
pop
or
in
lahf
sub
int3
rclb
shll
xchg
or
xchg
cld
xor
incb
mov
mov
rorl
mov
cltd
stc
cmp
das
xchg
pop
hlt
test
xchg
dec
or
mov
in
les
mov
int3
cmp
mov
jae
mov
pushf
dec
push
or
aad
push
je
dec
push
xchg
pop
sbb
or
xchg
xor
jge
jne
test
adc
in
jb
cmp
sbb
ljmp
sub
sub
in
and
pop
cltd
inc
adc
pop
xchg
fcoml
daa
arpl
sbb
clc
pop
lcall
imul
mov
and
xlat
sbb
scas
cmp
insl
dec
mov
je
add
cmp
stos
sbb
lcall
fsubrs
mov
fldl
inc
mov
mov
popa
pop
push
jno
lret
das
loop
jns
mul
cmpsb
mov
adc
xor
sti
xor
inc
sub
pop
push
out
cwtl
pop
inc
jne
bound
pop
shll
imulb
rorl
sub
hlt
xchg
pop
in
and
ljmp
cmp
and
popa
push
xor
iret
popf
mov
push
fdivrl
jl
ja
xchg
fnstenv
lret
in
jmp
jno
or
push
xchg
push
in
inc
pushf
popa
mov
push
adc
sub
mov
add
std
inc
test
shl
mov
orb
cmc
pushf
neg
dec
sub
and
xor
lock
flds
aam
std
add
popa
fcoml
bound
jno
sub
cs
das
push
rorb
or
xrelease
call
mov
lcall
mov
nop
fdivs
movb
push
xchg
push
in
add
inc
sub
pop
cs
sbb
lock
push
mov
jecxz
hlt
xor
aaa
imul
lea
mov
cltd
in
out
push
loope
lea
push
dec
mov
dec
repnz
push
in
jge
shrb
movsl
or
and
aaa
rol
jo
cmp
inc
mov
xchg
xlat
pop
dec
ds
jecxz
xchg
xlat
push
or
lods
rolb
add
imul
clc
shll
sub
ret
cmp
rcrb
mov
sbb
data16
add
xchg
inc
inc
pop
jno
sbb
in
push
xor
pop
sbb
cmp
lods
inc
out
lret
fidivl
addb
mov
in
les
jnp
mov
jg
mov
inc
jns
dec
sub
xorl
sub
test
cmc
cmpb
add
mov
adc
adc
sbb
in
jle
push
mov
jl
and
xchg
lret
pop
cmp
repz
popa
loopne
cmp
mov
lods
in
dec
xchg
jo
outsl
dec
shlb
divb
roll
out
jle
sarb
call
scas
inc
fadd
test
or
inc
fbstp
jnp
ret
and
mov
notl
cmpl
cmp
xchg
push
ret
xor
or
mov
and
sub
shll
std
or
xchg
les
jle
icebp
inc
and
mov
sbb
lods
lock
cmc
lahf
in
dec
xor
sub
jnp
add
xchg
mov
and
push
add
stos
pop
sbb
mov
adc
pop
cmp
sub
sub
pop
push
mov
or
ja
sub
ret
jnp
jl
push
daa
mov
popa
lcall
dec
sub
cld
hlt
rcr
mov
jmp
xchg
sahf
cmp
cmp
pop
xchg
sti
aam
iret
imul
insl
inc
mov
pop
dec
xor
icebp
mov
mov
ret
push
pop
sub
adc
jnp
xchg
push
adc
addl
cld
mov
sbb
lahf
ss
pop
je
xlat
lds
sbb
jmp
shlb
and
dec
andb
scas
sahf
mov
movsb
pop
mov
test
andps
scas
jle
mov
out
int3
mov
sbb
ret
cmp
clc
or
dec
in
jb
lock
push
fildl
sub
pop
mov
addb
dec
adc
stc
push
shll
jle
iret
inc
adc
jecxz
movsb
mov
cmp
lcall
jp
loopne
mov
add
push
pop
sbb
jae
push
jno
jle
mov
sub
jmp
lret
mov
leave
dec
xchg
mov
push
gs
mov
pushl
mov
mov
sti
lea
jle
xorb
add
fwait
fs
mov
and
push
cmp
ljmp
adc
insb
out
cmp
adcb
cs
xchg
sahf
jae
data16
test
repz
popa
and
into
cld
cmp
ror
mov
sti
sbb
or
iret
mov
mov
daa
mov
push
sbb
push
xchg
cwtl
testb
xchg
jge
jle
int3
cltd
cs
sub
xchg
jb
movsb
xchg
out
and
adc
cmp
fisttpl
and
xchg
pop
add
mov
and
push
pop
adc
lahf
push
add
aad
jmp
jb
lret
das
adc
fmull
xor
shll
lret
insb
xchg
insl
xchg
xor
movsb
sbb
adc
mov
pop
mov
add
pop
lcall
mov
cmp
jae
and
or
addr16
mov
leave
sahf
imull
xor
add
and
lds
leave
clc
inc
lock
hlt
sbb
loop
pop
mov
test
mov
sbb
sub
mov
fiadds
fildll
shrl
movsb
cld
lds
jns
jno
sub
mov
scas
stc
lods
add
inc
and
mov
mov
in
mov
inc
mov
lahf
adc
mov
in
stos
lods
jbe
jp
repz
or
sbb
mov
mov
cli
sbb
jbe
mov
movsl
mov
dec
mov
dec
bound
mov
cmpl
gs
inc
shll
push
idivl
jns
lods
mov
jnp
mov
fsubp
mov
inc
jb
xor
mov
in
mov
mov
cmp
int
test
inc
and
js
sub
xchg
or
xlat
lret
shlb
jecxz
outsl
leave
xchg
or
clc
inc
mov
push
cmp
inc
mov
test
pop
sahf
lods
or
and
lret
inc
push
and
jno
sbb
stos
sub
fucom
insb
inc
js
xor
cli
pop
or
pop
xchg
push
mov
cmp
jno
orl
or
cmp
sbb
cmp
push
and
xchg
loop
sub
ljmp
dec
cltd
sub
sub
lock
es
pop
dec
loop
jg
mov
push
xor
inc
sub
adc
xchg
cwtl
fisubrl
test
std
lcall
mov
mov
int
jmp
xor
xchg
ljmp
in
ds
push
dec
insb
jns
pop
push
fwait
les
inc
outsl
mov
mov
adc
ret
arpl
outsl
pushf
addr16
push
leave
and
ffree
int
orb
outsb
addr16
out
ret
cmp
adc
addr16
dec
mov
outsb
or
in
mov
arpl
loope
mov
in
stc
inc
mov
notl
xchg
outsb
mov
jge
inc
insl
adc
inc
cmpsb
gs
popf
push
mov
stos
jg
pop
inc
jnp
mov
movsl
xor
pop
into
test
in
lds
adc
inc
or
shll
data16
mov
ljmp
push
pop
push
outsl
push
push
cltd
mov
mov
cmp
mov
std
lret
fistps
add
cmp
pop
popa
xchg
aad
xchg
sub
adc
push
pop
in
mov
sbb
cmp
mov
pop
sub
add
xchg
pop
jbe
dec
push
test
add
sub
push
rcr
hlt
xor
imul
cmp
cmp
ljmpw
repz
pop
push
or
cmp
sbb
pop
out
lretw
outsb
stos
movsb
mov
in
cmc
mov
jnp
inc
mov
mov
out
stos
int3
loopne
or
lret
adc
mov
add
aas
scas
fistpl
call
mov
jno
je
aas
jb
lcall
jns
push
nop
jg
mov
mov
jmp
sbb
pop
inc
or
pop
daa
and
adc
jb
and
pop
inc
xor
add
lcall
sbb
sar
ficompl
sahf
addr16
fnstcw
jns
cld
mov
js
mov
repz
out
push
sbb
jbe
daa
ja
cmp
popf
sbb
in
adc
sub
cmc
jmp
insl
inc
pop
pop
ret
dec
jbe
sub
les
sub
inc
adc
mov
cli
jne
repnz
pop
popa
push
scas
lods
rorb
scas
sub
cwtl
inc
icebp
sbb
pop
mov
jo
lock
mov
and
pop
aaa
lcall
std
add
stc
adc
and
loopne
repnz
stos
mov
inc
push
jb
je
add
nop
and
sbb
dec
mov
xor
or
add
arpl
pop
ljmp
push
jne
clc
xlat
sahf
or
dec
mov
xchg
fwait
rorl
pushf
pop
jmp
cwtl
mov
jb
jne
mov
add
fstpt
fwait
std
jb
movsb
sahf
inc
adc
mov
dec
test
shlb
xor
out
push
pushf
pop
push
push
flds
or
jb
pop
xchg
les
les
fucomip
mov
das
fisubs
lods
xchg
sub
pusha
aaa
adc
pop
sub
mull
out
pop
mov
cmc
std
push
ja
xor
pminsw
pop
stos
push
xor
xchg
iret
shrl
stos
aas
jne
mov
gs
jecxz
cmp
add
scas
mov
pop
mov
mov
dec
xor
xlat
shrl
xchg
test
hlt
inc
or
scas
xor
loop
lret
inc
mov
cmp
stos
lods
fwait
xchg
cmpsl
pop
popf
xor
sti
ret
inc
inc
lret
and
pop
cmpsl
rorb
lea
jnp
imul
fcomps
outsb
or
mov
jmp
dec
and
lret
sbb
repnz
arpl
and
sub
cmp
aas
add
lret
das
mov
push
lcall
jge
xor
aad
sti
test
dec
fwait
insb
adc
xchg
adc
or
and
ds
ds
push
imul
iret
fildll
mov
lret
in
xchg
outsl
and
adc
push
dec
pusha
inc
xor
scas
cmp
adc
frstor
pop
sub
sub
xchg
mov
mov
mov
ret
jp
pop
rorl
scas
in
nop
inc
add
lret
imul
pop
loopne
je
mov
int
mov
ss
xchg
popa
repz
mov
sbb
xchg
mov
cli
sbb
lahf
test
in
out
cvtdq2ps
push
test
adc
xchg
in
sub
pushf
mov
mov
fwait
scas
mov
jne
fcoml
lahf
push
cmp
cmp
mov
jns
hlt
fdivrs
ljmp
fldln2
scas
push
pushf
mov
mov
mov
jmp
mov
adcl
push
inc
or
loopne
adc
fwait
aad
lds
sqrtps
outsb
sub
fs
cmpsl
rcr
or
sahf
or
push
jno
int3
cmpsb
or
nop
xchg
adc
mov
xchg
sbb
enter
js
cmpsb
in
rclb
mov
jb
jge
daa
mov
iret
push
add
popf
in
frstor
sub
mov
jge
pop
bound
push
mov
cmp
ljmp
outsw
pop
data16
adc
mov
sahf
into
push
or
iret
jg
aad
mov
pop
mov
in
insl
test
daa
and
jne
cmp
pop
pop
sub
sahf
jae
das
cmp
mov
or
push
mov
sbb
mov
cmpsb
xor
jbe
mov
push
lock
int
adc
mov
fnstsw
scas
fnstsw
lcall
mov
mov
xor
movsl
or
xchg
or
adc
sub
push
stc
ror
daa
xchg
push
xchg
pop
xor
xor
jmp
xchg
cmp
adc
lock
push
xlat
sbb
mov
cmpsl
jae
fcompl
sbb
jmp
pop
jge
and
test
loopne
rclb
add
jmp
daa
rol
repz
adc
mov
fsubr
popa
pop
mov
sub
jne
push
sub
es
and
movsl
ja
std
pop
mov
outsl
nop
xor
std
cmp
adc
mov
repz
adc
push
sub
in
idivb
neg
push
cld
sub
push
xchg
dec
fs
cmp
out
pusha
mov
insl
pop
pop
sarb
and
iret
adc
mov
dec
mov
into
sub
inc
aam
imull
popf
shlb
in
or
sti
jo
inc
subb
in
stos
cs
dec
lret
adc
mov
mov
test
pop
insb
sub
fstl
xlat
mov
mov
pop
gs
mov
leave
pop
mov
out
pop
in
xchg
dec
cmpsl
loopne
cltd
inc
adc
mov
sbb
or
push
jle
loop
pop
mov
push
jl
add
cmp
clc
mov
lcall
jo
pop
movsb
jnp
das
jae
jecxz
std
inc
dec
lret
adc
stos
into
mov
daa
xchg
push
dec
adc
mov
xchg
es
xlat
call
jmp
stos
subb
sahf
cmp
cs
push
hlt
sub
in
pop
inc
mov
mov
and
aam
loopne
pop
out
or
cmp
inc
movhlps
andb
sarl
push
repz
outsb
fiaddl
lret
or
jmp
sbb
push
push
ret
cmpsl
ds
outsl
mov
xchg
dec
fisttpll
iret
dec
aam
inc
rep
mov
loopne
mov
inc
sbb
or
push
ds
lea
pop
in
out
xchg
mov
pop
insb
dec
xlat
je
pop
loopne
cmp
rcrb
in
jg
cs
pop
adc
jno
sub
xor
push
xchg
mov
adc
sub
test
mov
mov
adc
mov
pusha
push
jb
jno
aas
cmp
xor
mov
aam
sub
mov
pop
in
mov
sub
mov
mov
in
mov
push
test
push
pop
std
outsb
dec
imul
cmp
gs
shlb
mov
mov
mov
jge
mov
pop
lcall
mull
pushf
notl
cmp
in
test
push
add
int3
dec
aas
negl
inc
mov
repz
cs
lcall
lcall
jl
hlt
jge
ljmp
ss
cmp
stos
add
jns
enter
cli
push
loop
cmp
pop
daa
fucomp
pop
lahf
repnz
jl
xlat
popa
mov
pop
dec
arpl
imul
inc
and
or
and
test
cmc
xor
xor
rcrl
mov
add
and
fdivrs
push
xor
movsl
push
push
mov
hlt
addr16
adc
mov
pop
add
fldl
adc
and
or
and
test
repz
pushf
cmp
xlat
inc
js
dec
xor
sub
out
pop
cmpsl
mov
cld
aad
std
cmp
arpl
push
mov
mov
jbe
sub
mov
mov
inc
data16
out
addr16
jbe
xor
lock
cmc
lahf
je
negl
outsb
lret
test
jno
lret
hlt
push
movsl
push
sahf
sahf
icebp
leave
xchg
xchg
dec
lock
or
or
in
cmp
push
push
mov
dec
cli
ds
sbb
je
js
lea
inc
dec
mov
loopne
dec
inc
adc
in
inc
stos
in
loop
lea
add
fists
jno
je
in
mov
dec
idiv
pop
hlt
sbb
jns
mov
dec
into
mov
rorb
mov
loope
les
push
scas
or
sub
mov
xchg
je
and
sub
inc
jno
jmp
adc
test
mov
push
mov
fisttpll
jns
mov
repz
js
shrb
loopne
imul
jecxz
sbbl
mov
mov
pop
cmpsl
mov
inc
daa
movsb
or
mov
sub
jo
dec
or
sub
mov
mov
cmpl
arpl
mov
dec
push
ret
sbb
lret
push
sub
cmp
pop
pop
pop
jg
call
imul
and
xor
sub
popf
jnp
outsl
not
rcr
sbb
pop
ret
sub
dec
aam
mov
aas
mov
dec
bts
mov
int3
adc
dec
out
in
sbb
negl
test
ljmp
pop
leave
push
or
mov
mov
pop
xor
pop
or
stos
and
pop
std
rclb
jnp
xchg
mov
add
sahf
push
or
addr16
fcom
rclb
add
fdiv
ds
lret
xor
mov
jno
shrl
push
lods
xor
mov
dec
push
inc
cmp
test
adc
sub
hlt
pop
repz
push
xchg
push
dec
cld
adc
mov
loope
pop
popa
mov
sub
lds
test
lock
dec
imul
sbb
cltd
sbb
jg
sbb
sbb
or
xor
test
jge
dec
test
mov
mulb
aam
xchg
xchg
ficoml
scas
clc
outsb
cs
lds
repnz
xlat
or
bound
or
and
das
stos
xchg
int
ja
mov
cwtl
sub
aaa
fs
and
outsl
pop
mov
into
fsubp
test
dec
jmp
xchg
inc
or
out
add
xor
adc
adc
cmp
and
push
stos
test
lods
inc
cld
lods
mov
lret
into
inc
sub
ror
xor
pop
inc
add
sub
aad
cmp
loopne
mov
js
bound
mov
mov
sub
sbbl
test
aam
aaa
sar
lret
mov
push
scas
popa
and
cld
enter
jbe
mov
xchg
adc
jae
inc
ret
sub
daa
test
xchg
inc
ss
xor
call
mov
fs
mov
sub
fildll
cmpsb
filds
movsl
push
push
fdivl
mov
mov
hlt
xor
test
lret
inc
mov
fsub
dec
jl
loop
push
jno
pop
mov
sub
pop
rclb
or
popf
mov
lret
or
cs
and
mov
jge
fistpll
cmpsb
addr16
xchg
aad
icebp
movsl
and
lahf
sub
jge
mov
fsub
int
ja
pop
insb
mov
pop
sub
fs
sub
lret
sbb
lret
in
or
lock
imul
mov
dec
mov
aam
icebp
push
and
mov
out
xchg
xchg
xor
jnp
adc
pop
aas
imul
int
int3
popf
jmp
int
xchg
icebp
out
insl
sub
inc
adc
cmpsb
jecxz
add
lret
cltd
loope
xchg
rolb
sti
lods
roll
inc
cmp
push
rcll
dec
cmpsb
insb
sbb
inc
mov
ljmp
push
inc
adc
jae
cmc
xor
fs
dec
sbb
pop
std
xchg
xor
lock
adc
aas
mov
je
mov
fidivrl
inc
pop
inc
xlat
stos
int
iret
jmp
sbb
pop
mov
cmc
jmp
cmpsb
ret
repnz
adc
mov
sbb
mov
and
mov
or
arpl
lahf
cld
addr16
jl
and
pop
xor
mov
push
loopne
mov
mov
cltd
cwtl
shrl
call
js
gs
jne
jae
mov
inc
push
and
jmp
sub
shrl
pop
pop
leave
fcmovne
repz
arpl
sbb
xor
jle
push
mov
push
cmp
fsubs
xchg
fwait
dec
into
jae
sub
mov
fcoml
in
and
mov
fsubrl
cmp
mov
jo
out
push
xchg
out
xchg
jl
retw
jmp
faddl
popa
mov
mov
cmp
leave
push
xchg
mov
popf
mov
adc
xlat
pop
out
jle
pop
mov
cmp
shl
lret
mov
leave
sub
push
mov
decb
push
enter
adc
les
or
xor
pop
dec
pop
pop
jg
cltd
xchg
jo
cmp
xchg
test
cmp
or
test
dec
mov
sbb
stos
mov
add
mov
pop
push
rcr
or
imul
ret
mov
nop
das
out
xchg
imul
lret
sub
jge
pop
inc
and
movsl
lret
aaa
ret
adc
test
rclb
aad
mov
out
xor
lahf
mov
in
in
inc
decl
xor
inc
pop
xor
cmpsl
stos
adc
fdivrs
sahf
mov
jge
aad
ds
lcall
rcll
aas
xchg
inc
and
xor
out
push
cmp
call
or
xchg
jb
pop
ljmp
inc
push
sbb
ds
cwtl
adc
imul
cmpsl
sar
inc
mov
dec
adc
mov
jo
repz
xchg
pop
pusha
mov
mov
imul
and
or
ret
roll
pop
mov
pop
dec
push
rclb
push
and
pusha
rorl
jns
daa
fisttpl
mov
lods
cld
fists
pushf
and
scas
shlb
push
in
pop
lds
add
testl
mov
inc
add
rorb
aas
cmp
rorb
and
cmp
push
mov
mov
jnp
aam
and
out
xor
pop
pop
or
xchg
or
lcall
xchg
adc
add
insl
dec
in
mov
xchg
add
jg
sti
jge
lock
or
fidivrs
jno
jecxz
cmp
adc
bound
sbb
mov
por
inc
mov
hlt
stos
sub
mov
dec
popa
sub
pop
push
fidivrs
test
or
jl
mov
mov
sbb
xchg
pop
insl
das
mov
cmp
dec
scas
mov
stos
sbb
shll
imul
call
or
xchg
scas
icebp
push
xchg
jl
shrl
in
movsb
les
nop
bound
mov
das
adc
xchg
or
ja
add
pushf
mov
sub
loope
cmp
mov
or
lahf
sub
sbb
cmp
and
cmp
add
jbe
cltd
mov
cmpsb
out
xchg
jmp
add
cmp
mov
test
movsl
ja
sbb
in
ss
xor
xchg
cmp
cmpsb
jge
xor
sbb
or
xchg
sub
lods
in
and
push
stos
adc
sbb
fmuls
pop
sub
lods
cmc
mov
lods
lcall
xchg
rolb
pop
das
test
movsb
sbb
push
xor
push
sbb
pop
or
pop
bound
enter
mov
fsub
jno
sti
pop
mov
mov
xchg
call
or
clc
fimuls
movl
es
mov
pushf
into
xchg
mov
add
sub
mov
icebp
lret
lcall
les
cmpsl
cmp
lods
pop
stos
lock
les
pop
fs
mov
mov
and
test
xor
pop
mov
jns
stos
inc
mov
dec
sbb
and
jo
mov
lods
lcall
ss
pop
xchg
scas
or
pop
or
stc
lock
jb
sarb
lahf
repnz
cltd
mov
rolb
jecxz
icebp
jg
pmaxub
sub
mov
adc
ljmp
inc
jbe
push
shrb
sub
stc
popf
mov
leave
sub
mov
push
and
fldenv
sub
push
fdivr
dec
and
fisttps
sbb
lret
data16
aaa
push
mov
ret
insb
shrl
sahf
or
aam
pop
fmull
or
mov
jmp
repnz
std
sub
push
std
lea
outsb
enter
shrl
jo
popa
inc
jg
pop
cmp
pushf
push
dec
mov
push
mov
inc
adc
in
leave
aas
jge
xchg
mov
aas
or
mov
cmp
or
mov
into
arpl
push
cli
call
cli
lods
lahf
add
cli
jns
xor
pop
mov
or
jge
lock
xlat
push
push
push
sbb
jb
out
je
push
fcoms
ret
pop
push
repz
pop
or
in
jp
iret
ret
or
out
mov
aaa
push
fisubl
testb
cwtl
jnp
pop
mov
jns
das
xor
js
out
repnz
add
push
idivl
mov
inc
jb
test
js
lock
notl
hlt
notl
push
repnz
nop
hlt
mov
notb
stc
pusha
loope
popa
jmp
adc
inc
xor
test
and
mov
and
stos
out
jmp
xchg
shrb
push
dec
fsts
xchg
pop
and
ja
mov
mov
call
lcall
scas
fucomi
mov
bnd
enter
rolb
sbb
jecxz
sub
stc
pop
cmp
mov
and
insl
push
dec
push
mov
inc
mov
lret
mov
aas
ds
sahf
and
jg
xor
mov
fwait
jmp
sti
pop
sahf
mov
in
jae
xlat
mov
fsts
and
clc
movsb
fnstsw
imul
adc
test
leave
dec
ret
jmp
nop
jnp
call
xchg
adc
mov
xorl
sbb
aaa
sub
pop
shrb
mov
push
adc
imul
out
and
popa
aad
icebp
push
xchg
int
fcmovbe
int
fyl2xp1
add
jg
popa
adc
cli
push
pop
add
fdivrs
or
and
inc
sub
in
cli
dec
sahf
mov
inc
add
scas
ds
shrb
jno
push
aas
out
iret
dec
jne
cmp
sahf
and
sahf
es
cmpsl
and
scas
mov
lret
inc
sub
or
sbb
mov
mov
dec
xchg
les
add
cmovns
andl
sub
lds
call
imul
push
push
adc
dec
and
divb
jns
ljmp
shlb
imul
out
mov
dec
out
aas
jmp
jno
xor
decl
daa
in
sbb
cmp
pop
dec
popa
and
mov
sub
adc
mov
xor
ficoms
or
jb
ss
and
out
stos
ljmp
pusha
ljmp
push
sub
dec
sbb
ljmp
inc
ja
arpl
cmp
inc
popa
fs
cmc
leave
mov
test
mov
mov
push
push
push
pandn
aaa
or
mov
sahf
test
int3
cmpsb
xchg
out
mov
data16
dec
inc
ret
mov
bound
dec
test
cld
add
pop
xchg
outsb
fmull
ljmp
imul
stos
lahf
ret
inc
cmp
jo
hlt
sbb
test
js
xchg
ss
decl
inc
mov
add
inc
pop
ljmp
sti
mov
arpl
daa
popl
push
pop
and
sub
mov
add
cwtl
ja
dec
sarl
and
movsb
dec
pop
lret
cmpsb
jecxz
add
xchg
bound
mov
nop
dec
rcrb
test
and
das
push
stos
das
cmpsb
sub
shll
inc
dec
and
xchg
sbbl
ret
or
cs
jno
nop
jl
inc
or
lcall
shlb
hlt
jo
jmp
sahf
ss
je
fmul
aaa
push
inc
xchg
loopne
pop
mov
ret
sbb
pop
jecxz
hlt
fwait
push
repnz
and
mov
inc
pusha
add
jnp
mov
or
lods
dec
ret
mov
mov
ficoml
mov
xchg
mov
push
push
sti
into
xchg
sbbl
es
movsb
xchg
xor
push
or
pop
aam
lret
adc
xor
pop
jb
adc
scas
imul
lea
bound
push
insb
push
adc
mov
nop
pusha
jle
mov
test
popf
push
sbb
adc
negb
and
cmpsl
and
shrb
sbb
pop
push
sbb
dec
dec
scas
push
mov
lock
pushf
pusha
cmpsb
fsts
xchg
aas
sub
jecxz
ficoms
ret
fsubrl
pop
sbb
clc
inc
cmp
xor
jbe
mov
push
insl
faddl
lods
enter
shl
fsubrp
inc
rclb
sbb
imull
lahf
push
mov
pop
divb
cli
mov
cmp
sbb
jne
cmp
cwtl
add
xchg
xchg
mov
inc
rorb
cmp
push
negl
lea
push
lods
leave
inc
arpl
lret
sub
sbb
mov
ss
fisubl
push
ret
cmp
sub
mov
sub
sarb
jb
mov
cmc
sahf
pop
imul
adc
je
leave
pop
xor
jge
orl
mov
test
fs
fadd
dec
push
dec
jno
jnp
xor
rorl
cmpb
ljmp
sti
xor
ret
popa
jbe
mov
aam
and
repnz
pop
fs
pop
jbe
aas
inc
jl
imul
xchg
xchg
xchg
test
test
out
lock
scas
int
adc
jge
lahf
cwtl
test
or
xor
and
icebp
inc
mov
jbe
xchg
adc
sbb
mov
adc
push
fwait
jecxz
push
pop
out
xchg
mov
lods
pop
jbe
jp
dec
cmp
int
shl
cs
aam
adc
in
push
inc
lock
scas
sbb
sbb
pop
pushf
test
cmp
popf
pushf
bound
mov
lds
fld
bound
push
push
nop
insb
cs
push
xchg
fisttpl
pop
loop
xchg
jae
loop
cltd
xorl
cmp
xor
clc
xchg
mov
stos
push
iret
test
sti
jo
test
movsl
inc
xchg
test
in
nop
bnd
jp
out
push
in
cmc
mul
add
dec
add
pop
arpl
daa
ljmp
out
lea
push
ret
inc
mov
orb
ja
push
jnp
enter
or
data16
in
push
jge
pushf
fs
into
pusha
mov
imul
cmpl
fsubl
int
inc
stos
or
cs
xchg
xor
nopl
inc
xor
add
jns
jmp
dec
and
mov
pop
push
out
daa
or
mov
jle
out
rorl
decb
out
aaa
clc
xor
mov
mov
cmpsl
inc
sub
push
shrb
and
movsl
mov
iret
xchg
add
pop
aam
adc
mov
ret
inc
mov
repnz
pop
fiaddl
dec
faddl
loop
mov
cwtl
xchg
add
iret
mov
ret
jns
pop
sub
popa
pop
stos
add
leave
mov
jge
mov
mov
cmpsb
and
sub
push
inc
xchg
xlat
adc
adc
sub
pop
add
jnp
fs
dec
pop
into
add
pop
adc
cmc
mov
pand
negl
adc
mov
adc
mov
mov
jge
sbb
mov
cmp
out
sub
mov
vprotd
mov
jo
mov
xor
mov
cmp
adc
lret
movsl
push
xor
sbb
fistl
cmp
aad
test
addr16
xor
inc
jae
rorl
pusha
mov
push
xchg
sbb
xor
mov
push
mov
jno
pop
out
jp
cmp
fistl
and
or
xor
inc
mov
daa
jl
cli
mov
jbe
sub
and
inc
pop
out
ljmp
fcomi
mov
jns
push
roll
push
repz
sub
clc
out
pop
loopne
in
pop
test
scas
mov
xlat
push
pop
dec
lods
iret
imul
ror
and
dec
in
pop
cmpsb
adc
cmp
test
push
xchg
sub
cmp
xchg
leave
mov
jbe
jp
popa
aad
xchg
lret
pop
mov
outsl
idivl
lcall
aam
push
pushf
incl
pop
adc
std
aam
stc
and
push
mov
in
sbb
push
rorl
jbe
aam
xchg
mov
xor
dec
js
mov
in
out
mov
push
pop
popa
cmpsb
pop
test
jae
and
bound
es
push
cld
fidivrl
mov
aas
add
sar
and
jge
jle
cmp
in
push
scas
out
or
rcl
call
aad
movsb
inc
subl
adc
xchg
add
and
inc
xchg
scas
cli
iret
add
push
adc
sbb
mov
mov
imul
imul
inc
xor
movsb
push
mov
lock
stos
cld
mov
dec
imul
sbb
add
loopne
jbe
mov
fs
daa
cmpsl
adc
or
js
mov
jno
lods
pop
cmp
xchg
arpl
adc
and
xlat
inc
xchg
adc
into
mov
aam
xchg
adc
inc
dec
bound
add
dec
xchg
fs
iret
pop
repnz
jg
fidivrl
fsubrl
sbbb
xor
mov
sti
lods
inc
sbb
xchg
mov
sbb
arpl
and
adc
lea
pushf
lock
andb
filds
out
mov
jge
into
sub
addr16
add
lock
cmp
arpl
xchg
jb
mov
mov
mov
mov
inc
cld
cmp
dec
mov
dec
inc
mov
orb
add
adc
cltd
or
fwait
nop
add
gs
pushf
lea
pop
fwait
push
jnp
subb
mov
add
push
xor
cwtl
xchg
or
push
push
jnp
ja
pop
inc
adc
and
ljmp
adc
bnd
push
xor
aad
insb
and
fstpl
pop
mov
push
push
inc
cmc
out
jne
mov
push
scas
sub
fcomp
shll
mov
dec
scas
out
jecxz
mov
into
mov
xchg
std
xchg
stc
mov
add
test
lods
jne
push
sar
aad
jmp
sub
pop
loope
aad
das
sub
sub
pop
adc
repnz
dec
jmp
stos
ja
push
or
mov
inc
push
push
pop
dec
leave
enter
xlat
mov
dec
dec
mov
ret
ror
addr16
pushf
stos
cld
lock
cmp
movsb
out
jle
nopl
jae
pop
shlb
mov
call
ljmp
fyl2x
cmc
dec
jmp
inc
aad
in
jg
sti
jne
pop
ja
jmp
jo
add
adc
fisttpl
adc
mov
inc
je
dec
pop
cmp
int3
lods
ss
lods
mov
ret
add
pop
mov
je
push
lock
iret
push
mov
sahf
mov
fsubrs
shll
lea
xchg
pushf
lret
push
push
lods
pushf
mov
in
inc
outsl
sti
sbb
fs
cmp
lahf
pop
shl
cmp
or
mov
popa
rcl
scas
dec
push
pop
ret
sahf
out
mov
inc
and
inc
dec
or
adc
push
outsl
lods
adc
iret
and
ret
test
shlb
fcmovu
ds
mov
inc
clc
lahf
test
out
adc
cmp
fwait
or
sbb
pop
inc
adc
cmpsb
jbe
mov
sub
aaa
xchg
add
mov
inc
xor
xchg
or
or
cmpsb
pop
idivl
ret
inc
ret
sbb
or
test
daa
outsb
es
popf
cmp
jp
sbb
jnp
lret
push
stos
roll
add
mov
xor
cld
mov
fs
xor
scas
mov
inc
xor
inc
js
xor
imul
mov
dec
adc
popf
stos
add
push
xor
adc
mov
imul
stos
cmc
dec
pop
imul
ds
repz
aaa
popa
test
imul
jmp
xor
lock
jne
adc
mov
ljmp
sub
outsb
mov
lock
or
insl
cmp
mov
test
stos
ret
add
es
cltd
lret
test
fyl2x
xchg
ds
and
jbe
or
or
in
in
imul
adc
pusha
std
outsl
xchg
aam
pop
cmp
adc
shrl
ret
subb
xchg
fwait
out
jge
jne
xchg
cmp
pop
iret
nop
fsubr
ret
or
mov
adc
pop
andb
hlt
push
insb
sbb
mov
xchg
in
in
add
imull
xchg
adc
dec
mov
call
js
aaa
notb
mov
cld
pop
leave
cs
rolb
or
insb
xchg
pop
lret
xor
mov
push
mov
stos
cmc
pop
outsb
or
cmpsl
cmpsl
add
in
fst
clc
in
in
shl
dec
lcall
add
cmc
loope
pop
jo
jbe
pop
inc
mov
and
mov
nop
inc
mov
popa
inc
mov
or
xchg
and
inc
add
loope
jns,pn
lahf
pop
xor
testl
lahf
adc
push
fcompl
dec
inc
sub
rcrl
jno
cwtl
loopne
loopne
sbb
dec
cmp
mov
sub
data16
out
mov
ret
and
lahf
pop
push
addr16
sahf
add
jae
incl
out
mov
hlt
fwait
repz
iret
fisttpll
mov
xor
out
and
in
scas
or
mov
pop
iret
jnp
push
cs
adc
dec
xchg
test
xor
decb
push
xchg
aas
call
xchg
stos
sbb
cmp
and
movsb
or
in
add
jns
mov
dec
test
fidivl
sbb
add
xlat
pop
fdivrl
repnz
or
sahf
dec
pop
bound
fistpl
mov
mov
cmc
clc
mov
rcll
inc
mov
into
shl
inc
jno
popf
nop
xlat
into
mov
add
cmpsl
mov
xchg
adc
jbe
roll
or
push
sbb
out
xchg
push
loop
rclb
shrb
addl
adc
inc
or
push
add
cmc
sahf
stos
das
imul
bound
in
jmp
sbb
add
f2xm1
pop
mov
daa
or
scas
lcall
inc
xchg
je
fbld
add
mov
cwtl
pop
dec
cmp
cmp
inc
fiadds
mov
mov
sbb
and
insb
adc
push
addr16
in
dec
ja
int
sbb
jb
mov
lea
aam
outsb
mov
xor
fmull
adc
daa
xchg
les
xor
dec
lds
vandps
add
gs
rolb
dec
movsl
pop
push
clc
pushf
and
gs
cmp
mov
movsl
cmp
cmp
loop
mov
lret
xchg
clc
inc
aam
pop
jae
cmp
dec
insl
push
push
pop
xchg
sub
mov
xchg
sub
mov
ret
pop
pop
enter
movsb
cmp
rcll
and
out
jle
sub
pop
jb
add
nop
rcll
shll
pusha
or
adc
pop
or
cmpsb
dec
stos
lret
enter
shll
adc
add
sbb
inc
adc
mov
xchg
aaa
int3
les
imul
and
push
repnz
imul
xor
fidivrs
jns
cmc
fistps
push
push
xor
dec
mov
inc
test
xor
cld
insl
xor
sti
push
and
fdivl
pushf
loope
and
adc
fs
mov
mov
inc
js
mov
add
mov
jl
pop
shll
mov
das
imul
subl
inc
ds
push
xchg
scas
mov
cmpsl
pop
cmp
mov
push
jecxz
mov
jae
out
mov
xchg
outsl
push
call
in
mov
fprem
push
cmpsl
das
cmpsl
mov
pop
push
ret
lock
lock
fnsave
jp
mov
mov
mov
xorb
nop
mov
sbb
fmuls
push
mov
pop
fdivl
aad
mov
jnp
roll
jmp
mov
int
ljmp
sbb
xorl
repz
lahf
mov
push
and
fldenv
lds
mov
xchg
dec
mov
mov
out
xchg
mov
hlt
pusha
mov
xor
iret
mov
mov
inc
int
pop
lods
ficoms
push
jnp
dec
sbb
cmp
pop
lds
aaa
adc
icebp
stos
lock
inc
enter
out
repnz
call
lods
sbb
xchg
data16
sub
rcr
mov
into
or
xor
dec
cmpsl
out
loope
pop
xchg
lods
adc
aad
push
cli
xchg
int
loope
jbe
loopne
push
out
xor
or
test
xchg
jp
lock
test
fisttpl
incl
push
adc
iret
stos
mov
sbb
aaa
jbe
jl
cmp
fmull
aam
insl
in
popa
mov
test
bound
ret
test
outsb
loop
and
cltd
pop
imul
xor
lret
xchg
inc
movsl
jno
adc
dec
mov
daa
mov
data16
and
test
xlat
outsl
ja
and
mov
aaa
pop
pop
scas
sti
inc
jmp
adc
sbb
rcrl
inc
shlb
dec
or
lods
out
and
sbb
leave
xchg
mov
pusha
bound
lods
clc
loopne
xchg
shr
push
add
sub
inc
popa
insl
shrb
outsb
mov
lds
push
xchg
cli
pop
fcmovb
mov
dec
hlt
jns
dec
or
adc
shl
pop
rcrl
fbstp
jne
fimull
mov
and
inc
in
out
dec
sub
mov
sbb
dec
inc
sbb
movd
inc
mov
jmp
cs
imulb
xchg
mov
rcrl
mov
daa
in
and
jae
lds
jb
push
sbb
push
inc
xor
or
pop
sti
mov
scas
cld
xor
pop
dec
clc
xchg
fs
jge
sub
and
outsb
push
mov
aas
dec
loop
movsl
fwait
imul
sub
jg
mov
adc
sbbl
stos
loope
divb
push
pop
fstl
scas
jno
add
push
xchg
test
stos
mov
dec
lret
repnz
jne
outsb
mov
cld
loop
lcall
sbb
dec
mov
sub
sub
cmp
lret
sub
in
imul
push
cmpsb
sub
in
jg
loope
dec
adc
add
inc
add
push
movsl
ss
xorl
int
cs
jecxz
or
sub
ret
out
mov
mov
push
add
add
or
cmpsb
and
repnz
in
stos
mov
jbe
test
jecxz
test
add
cmp
aad
mov
adc
push
add
mov
or
jb
push
dec
in
xchg
popf
xchg
dec
inc
int
and
pop
jg
mov
sbbl
pop
adc
jo
lock
faddl
dec
adc
mov
adc
and
mov
hlt
xor
mov
adc
jb
ficomps
loope
dec
fldl
testl
mov
repnz
lods
xchg
or
adc
push
outsl
cld
imull
dec
and
jb
cmp
sarb
repz
int
add
add
aad
outsl
push
inc
out
or
adc
stos
jge
mov
or
mov
js
cmp
jecxz
and
xlat
sub
sub
pop
push
popa
bound
pop
xorl
cwtl
jle
mov
cmp
mov
sub
cs
and
nop
subl
jo
sbb
inc
mov
mov
cmpsl
and
ret
mov
xchg
inc
test
sub
jmp
inc
mov
xor
mov
out
cmpb
out
add
sub
stos
or
nop
push
fisttps
inc
shl
shrl
cmpsl
push
mov
std
imul
inc
pop
lret
enter
out
arpl
jbe
fbld
lcall
push
xchg
pusha
add
jl
ficoms
mov
pop
shrb
sbb
imul
push
jecxz
nop
or
cltd
cld
adc
cwtl
addr16
addr16
adc
jmp
lods
add
inc
mov
ret
divl
add
jne
int
mov
fnstsw
ficompl
mov
or
lcall
or
inc
mov
xor
lods
push
jbe
add
dec
cvttps2pi
sub
movsl
jg
lcall
test
scas
push
mov
or
shll
mov
sub
inc
cmp
jl
mov
fistps
stc
imul
xchg
fsts
pusha
shl
enter
inc
mov
in
jae
in
dec
dec
shl
ds
mov
mov
xor
push
cs
sbb
addr16
outsl
sarl
lret
inc
ds
xchg
pop
jmp
pop
sbb
push
inc
lahf
add
popa
incl
adc
jmp
push
fwait
pop
fadds
fmull
sti
xchg
adc
into
test
aad
sub
cmpsl
rorb
enter
and
les
push
mov
jne
into
add
jge
in
out
mov
cli
mov
jae
jle
test
push
gs
pop
mov
push
sarb
stos
repnz
sub
jo,pt
je
jae
dec
pop
push
addr16
and
and
add
push
or
inc
loope
and
xor
inc
or
rorb
add
ficompl
jns
loopne
mov
cs
inc
js
adc
cmc
inc
movl
lods
sub
fsub
xchg
cs
in
lods
cmc
mov
pop
mov
adc
cli
xor
xchg
add
adc
mov
mov
dec
fmull
std
mov
mov
add
xchg
sbb
dec
mov
pop
dec
and
dec
xchg
mov
or
ja
imul
mov
in
or
sbb
mov
lods
mov
add
insl
stc
jge
add
into
rol
sub
jo
pop
lret
int
lds
loopne
cmp
insl
test
mov
xchg
shufps
dec
xor
adc
mov
adc
pushf
cmc
gs
cmp
xchg
xchg
sahf
aaa
in
insl
sbb
ljmp
mov
or
arpl
mov
aam
int3
shrl
inc
and
scas
xlat
int
scas
xchg
sbb
int3
xchg
mov
jns
clc
stos
imul
daa
adc
cs
pop
pop
and
jmp
sbb
in
pop
insl
adc
adcb
xchg
xor
jnp
sub
enter
jp
mov
add
lods
jb
dec
push
inc
adc
jle
or
jecxz
sbb
clc
mov
repnz
jmp
js
in
clc
jne
sbb
xor
cli
ja
xor
std
pop
inc
jnp
or
and
sub
xchg
arpl
xchg
pop
inc
mov
pop
sahf
xor
xchg
in
pop
mov
mov
fidivl
adc
xchg
pop
gs
cmp
mov
test
mov
movsb
lods
jae
fsubr
je
adc
jge
xchg
jge
or
hlt
ljmp
movsl
xchg
cld
push
imul
ret
insl
dec
sub
int
rorb
push
jle
pop
mov
popa
sbb
nop
mov
and
dec
mov
rcrb
push
or
dec
insl
inc
fldl
xor
das
add
sbb
cmp
pushf
pop
mov
fwait
or
pushf
int3
jae
jo
sub
addl
jne
frstor
cmp
inc
xor
xor
push
add
or
mov
sub
xor
jno
lds
fcomip
fisttpl
pop
pop
into
xchg
out
jmp
sub
push
sub
addr16
or
mov
xchg
adc
push
pusha
adc
pop
cmp
std
push
inc
pusha
out
mov
popa
adc
pop
nop
cwtl
iret
mov
push
scas
mov
xchg
mov
jl
aam
adc
addl
stc
sbb
and
lea
or
mov
pop
rcll
inc
push
sub
sbb
fidivrl
xchg
sbb
jno
or
mov
add
pop
and
xchg
dec
sti
mov
sahf
push
gs
movsb
and
sbb
or
or
jne
loopne
mov
xor
dec
shr
sbb
cmc
push
push
and
mov
je
mov
push
icebp
pop
or
or
sub
adc
repnz
inc
sbb
arpl
in
mov
cmp
call
cmpsl
push
pusha
fprem1
sarb
aaa
daa
cmpb
adc
ja
int
adc
sub
sub
push
xor
popa
test
in
aaa
push
lret
sbb
jecxz
test
loope
mov
imul
test
addl
xor
in
xchg
test
mov
add
jo
jmp
aam
fisubl
test
nop
fldl
or
in
mov
cmp
scas
and
pop
bound
or
int3
cmp
cmpsl
cmp
pop
daa
cmp
push
push
test
mov
std
pop
adc
jl
xor
add
cmp
sub
sub
cwtl
jnp
mov
data16
jne
mov
jecxz
push
fstps
inc
cwtl
fildl
mov
add
xor
shll
push
jge
fcmovnu
xlat
xor
and
and
scas
scas
cmpsl
iret
mov
in
leave
lret
jae
add
sbb
lds
test
popa
ja
ret
fs
hlt
sub
mov
ja
fdivs
jle
inc
ret
fidivl
ret
jecxz
arpl
sub
mov
jmp
jno
pop
mov
mov
cmpsl
or
push
mov
or
aad
xlat
pop
sub
inc
scas
adc
add
scas
mov
or
addb
mov
mov
ja
rclb
xchg
cmp
mov
and
xor
sbb
enter
ja
adc
or
dec
je
hlt
das
sub
aam
dec
mov
add
imul
addr16
movsb
ss
inc
dec
adc
sub
aad
shll
xchg
inc
and
hlt
sbb
pop
inc
push
dec
filds
outsl
jp
xor
jg
push
mov
sbb
mov
cs
arpl
cmpsb
inc
pushf
mul
jae
or
test
inc
cmpl
add
hlt
loope
dec
add
fwait
mov
jecxz
lods
test
test
jnp
mov
loopne
mov
mov
xor
ret
push
mov
jae
jl
mov
pop
mov
stos
inc
cli
cmpsl
aas
enter
adc
daa
cmp
or
roll
adc
dec
jno
mov
xchg
cmp
lret
cmp
xlat
sti
mov
pop
xchg
sti
xor
push
mov
jne
mov
jp
inc
dec
pushf
call
xorl
inc
push
pop
mov
xor
inc
popf
jnp
xlat
icebp
xchg
cwtl
rcll
xor
fucomp
xchg
ret
es
jno
jbe
int3
icebp
jecxz
push
mov
sub
aas
inc
insl
data16
shrb
adc
mov
stos
pop
dec
xchg
movsb
int
cwtl
das
lret
fidivs
inc
sub
icebp
outsb
xchg
addr16
dec
xchg
add
push
jns
cs
xchg
nop
cmpb
loope
jno
xchg
mov
sub
lcall
xor
fisttpl
out
mov
and
inc
add
pop
push
add
mov
hlt
and
lret
sti
enter
fwait
lea
mov
sbb
sbb
je
jmp
sub
aaa
or
xchg
pop
outsb
adc
cs
dec
lods
cmp
fwait
arpl
sub
mov
loope
ljmp
jnp
ja
sbb
cmp
inc
inc
aaa
notb
outsb
mov
or
popl
mov
xchg
sub
imul
push
mov
dec
iret
outsl
xchg
sbb
fbstp
or
xor
pop
mov
ds
pushf
cs
imul
mov
sbb
cmpsl
push
xchg
cmpsb
push
mov
adc
fiadds
adc
cmp
xchg
lods
lea
idiv
add
mov
jmp
pop
ja
jmp
outsl
pop
leave
add
mov
adc
insl
out
push
sbb
xor
shrb
lcall
push
mov
jns
imul
stos
movsl
dec
push
dec
jmp
into
es
add
sub
push
outsl
daa
mov
xor
pusha
dec
aam
icebp
cli
stc
imul
cmpsl
or
movsb
hlt
stc
sbb
add
aam
movsb
add
pop
xchg
icebp
sub
lret
push
ret
mov
mov
scas
pop
loope
enter
hlt
lods
dec
imulb
push
jb
sub
xlat
mov
iret
jnp
in
dec
jl
dec
ljmp
ja
notl
mov
jno
sub
cmp
imul
sub
insl
and
call
push
test
jae
or
or
push
cmc
push
xchg
sbb
cld
sahf
xchg
pusha
xchg
mov
outsb
gs
out
xor
xchg
push
or
shrb
int
movsl
sbb
mov
mov
push
xor
clc
aas
daa
cmp
jl
into
addr16
inc
jmp
es
jnp
mov
mov
pusha
hlt
lea
mov
into
in
push
lret
icebp
ja
fucomip
test
xchg
aaa
sahf
mov
in
jl
pop
sti
aad
push
mov
and
fiadds
imul
xchg
mov
imul
js
push
repnz
std
fwait
cltd
bound
call
sbb
inc
adc
mov
aaa
or
ret
sub
iret
adc
dec
in
mov
or
pop
adc
cmp
pop
int
aas
xlat
mov
or
rorl
push
cltd
and
push
sahf
arpl
mov
sub
xor
aam
jl
cmpsb
ljmp
shrb
dec
and
and
pop
das
sbb
xchg
fcmovb
sbb
or
mov
sub
xchg
add
mov
jg
xchg
sbbb
bnd
push
popa
xor
pop
data16
clc
loop
jle
aas
jmp
xchg
mov
cmpsl
or
xchg
in
adc
mov
testb
scas
scas
leave
mov
mov
lock
xchg
dec
or
mov
jl
hlt
jo
out
xchg
pushf
leave
sub
in
js
sub
pop
leave
roll
sahf
lock
mov
and
test
in
repnz
pop
cmp
inc
insl
and
mov
add
call
ljmp
push
lret
add
cld
push
sbb
pusha
aad
inc
push
inc
test
add
xchg
mov
testl
test
ds
pop
mov
push
xchg
mov
mov
push
jns,pt
out
pop
inc
lret
mov
pop
or
push
imul
jle
in
pop
push
dec
int
loope
jns
repz
icebp
in
ret
add
leave
pop
mov
sarl
mov
addr16
adc
loopne
stos
mov
mov
hlt
add
adc
hlt
pushf
mov
mov
daa
cmp
sbb
insl
clc
add
into
jo
push
jge
enter
in
push
aam
inc
loop
push
jle
sahf
insb
movsb
lock
and
mov
xor
dec
add
xchg
fstpl
inc
pop
add
xchg
pop
pop
rcrl
and
push
fistl
insl
add
jp
jle
lods
cmp
jnp
insl
das
mov
pop
push
negl
jo
fistpll
xor
repz
jno
pop
and
int3
fadd
sbb
sbb
dec
push
jge
sbb
xor
push
or
cmp
xor
mov
sub
inc
out
inc
and
lcall
mov
in
adc
xor
fucom
push
loop
cmp
fadds
cwtl
out
ja
xlat
loop
iret
movl
sbb
and
pop
mov
cwtl
push
dec
bsr
fsubrs
clc
dec
inc
popa
arpl
pop
jmp
push
xchg
repnz
mov
outsl
lods
fnstenv
les
lret
cmp
push
test
popa
push
or
sbb
lock
push
dec
in
int
out
mov
sub
or
jge
dec
and
xor
and
aam
mov
mov
mov
push
mov
sbb
pop
call
mov
cmp
je
sub
xchg
sub
mov
fidivrs
add
fwait
inc
sub
dec
arpl
arpl
shl
fisttps
add
jae
or
ret
stos
xor
dec
sub
lret
pop
cli
jb
push
aad
notb
xor
add
lahf
lret
push
xchg
fistl
mov
mov
inc
movsl
mov
mov
cs
xor
pop
mov
in
fs
xchg
inc
push
subl
mov
imul
in
scas
jnp
sahf
xor
xchg
in
mov
stos
lds
xor
out
sbb
jne
pop
es
ror
hlt
adc
mov
int
mov
in
cmp
outsl
mov
or
lcall
mov
mov
dec
leave
popa
div
push
mov
pop
pop
ret
jo
mov
fldenv
aad
insl
arpl
jno
adc
push
fisubs
pop
dec
jle
mov
mov
mov
mov
or
cs
jge
mov
mov
dec
nop
mov
sub
xchg
lahf
out
stos
cs
jne
jnp
cmpsb
push
jg
roll
mov
js
test
nop
push
test
unpckhps
add
xor
cld
push
daa
push
mov
aas
cmp
dec
loopne
bnd
int3
ljmp
dec
rorb
or
mov
pushf
daa
movsl
inc
adc
ljmp
sub
rclb
cli
cmpb
sub
add
jb
inc
testl
notl
ja
adc
or
inc
mov
cli
push
adc
push
jecxz
inc
fdivs
sbb
xchg
gs
leave
pop
jmp
shrl
xorb
les
mov
sbbl
xor
sbb
add
rcl
aad
mov
add
xor
push
pop
ret
inc
or
xchg
clc
nop
mov
jl
jbe
data16
xchg
mov
aam
dec
jg
adc
fwait
std
sbb
jo
add
pop
inc
cmpsb
or
and
sbb
cmc
fsubrl
out
lea
fldt
push
jecxz
dec
add
imul
and
ja
inc
jp
inc
sti
aaa
js
ss
sbbl
sub
stos
mov
sub
or
repz
or
sub
mov
adc
jp
stos
addr16
adc
sbb
jne
jle
xlat
mov
jp
std
dec
and
stos
push
xchg
mov
xor
cmp
in
out
test
cmp
fimuls
aam
jnp
rcll
add
loope
clc
or
inc
cmp
dec
push
cmpsb
mov
xor
or
inc
loopne
sub
aaa
pop
or
movsb
cld
movsl
add
or
sub
sbb
sub
rolb
fstpt
push
sbb
fimuls
push
pop
xor
push
rorl
ds
jae
repnz
dec
out
andb
push
rcrb
cltd
dec
mov
or
out
enter
es
xchg
cmp
xor
inc
call
pop
mov
mov
adc
sub
mov
mov
xorb
push
dec
int
xor
lds
cmp
pop
call
add
clc
nop
int
mov
sbb
and
cmp
lret
or
shlb
aam
or
cli
push
in
jp
mov
mov
dec
ds
add
cmp
xor
into
and
mov
mov
rcrb
test
movsw
mov
mov
mov
rclb
das
iret
mov
shlb
nop
mov
add
shrb
adc
pop
cmpsl
pop
bound
dec
js
mov
in
pop
sub
or
mov
lods
data16
aaa
dec
inc
imul
sub
jge
neg
popf
imul
insl
inc
inc
test
mov
mov
jge
ret
enter
fimuls
jb
xchg
mov
pop
or
or
mov
xchg
loop
adc
test
out
lea
push
cmp
lods
dec
movsl
jae
sub
and
xor
push
out
jae
or
xor
fsubrl
mov
movsl
aad
jl
divb
inc
xchg
inc
dec
stos
add
clc
mov
jb
int3
popf
pop
popf
in
xor
add
loopne
testb
leave
repz
add
outsl
cmpsb
outsb
push
ret
lods
cmpsb
fld
lret
and
dec
mov
cmp
lds
add
daa
pop
mov
adc
mov
aad
push
jb
jmp
addr16
in
adc
ljmp
fdivs
adc
lock
add
and
lds
sti
sub
jp
test
leave
ja
and
ret
shlb
jmp
dec
add
mov
or
daa
xor
popf
loopne
inc
dec
in
and
lods
xor
cltd
nop
push
dec
cs
push
sub
cltd
inc
js
push
push
pop
imul
and
mov
neg
mov
adc
fs
cmc
xchg
sub
addr16
dec
xor
fistpll
lcall
dec
xchg
push
lods
adc
jnp
in
out
push
push
cli
das
dec
test
xchg
mov
mov
shrl
mov
push
sahf
mov
mov
loope
mov
add
sbb
repz
adc
mov
mov
je
shlb
mov
sub
mov
les
jbe
pop
ret
mov
xchg
pusha
int3
push
mov
rcrl
adc
movsl
cmp
pop
pop
jnp
call
clc
sbb
stc
js
jecxz
loope
sub
push
mov
orl
pusha
mov
or
lds
push
jp
ret
push
pop
add
adc
add
fmull
jns
iret
out
push
cli
cli
sahf
je
jmp
js
faddl
lahf
jb
mov
or
jle
xlat
imul
mov
test
add
roll
mov
push
mov
mov
loopne
ret
scas
mov
dec
xchg
das
and
leave
sub
std
loop
lcall
and
in
mov
test
inc
xor
mov
push
mov
lock
adc
dec
iret
cmc
cmp
mov
jge
out
dec
inc
sbb
out
xor
jge
jbe
addr16
and
popa
pop
fcompl
mov
inc
shll
and
fcoms
movsl
arpl
in
cmc
pushf
jl
jecxz
rcl
push
sbb
adc
test
mov
lcall
or
cli
dec
mov
sbb
and
sbb
or
jno
data16
lret
lock
sbb
popf
in
or
jne
test
outsb
pop
mov
cmp
jb
das
sahf
pop
lret
clc
shll
int
jg
sarb
pop
outsl
pop
dec
adc
add
lret
pop
in
js
ret
xchg
shlb
or
sbb
sahf
clc
cmpsb
sbb
outsb
cmc
push
jns
dec
push
dec
cld
pop
cld
xchg
test
cmp
cmc
xchg
sub
ds
sti
fisttps
test
mov
mov
xor
lret
and
push
pusha
hlt
int3
movsb
pop
in
pop
sbb
pop
ljmp
mov
js
movsl
and
in
jnp
fwait
cmp
or
push
mov
test
jns
adc
into
sahf
push
lret
ja
das
vsqrtpd
rclb
mov
add
faddl
out
fldl
dec
iret
gs
adcl
stos
loop
push
jecxz
jmp
sbb
test
xchg
orb
enter
sub
fwait
mov
sub
inc
dec
stos
in
pusha
scas
ficoml
loop
mov
push
mov
pusha
test
addr16
fidivrl
dec
sti
mov
movsl
ret
shl
bound
or
filds
scas
xchg
xchg
scas
sub
jmp
add
mov
mov
or
roll
push
ja
cmpsb
add
mov
rcrb
fcmovu
mov
add
push
sub
ljmp
mov
insb
inc
and
das
pop
push
loope
out
push
xor
hlt
xor
adc
imul
clc
xor
sbb
mov
cmpsl
cmpl
add
clc
jp
ljmp
fisttpll
xchg
and
cmp
shl
adc
out
push
xchg
xlat
into
je
jo
mov
andl
cmp
cltd
imul
jecxz
mov
mov
das
pop
mov
xor
lds
jge
mov
jne
and
xor
push
out
mov
popf
mov
cld
xlat
lcall
and
out
or
in
ret
lea
lods
cmp
lret
sub
mov
data16
cmpsb
icebp
sahf
mov
fistpll
xor
xor
inc
out
jmp
jecxz
push
cmp
js
push
jp
lret
inc
inc
loop
jbe
and
mov
stc
push
inc
mov
add
test
push
push
in
cli
push
jle
dec
cwtl
cs
lock
lods
mov
adc
hlt
push
mov
or
jno
xchg
xchg
jno
push
push
sarb
test
mov
repz
ret
push
test
mov
insl
sbb
out
push
int
dec
inc
test
jns
in
mov
push
shrl
jbe
jg
pop
xlat
lahf
sub
scas
aaa
hlt
mov
xor
test
int
pop
mov
jle
jle
in
mov
push
ret
push
std
repnz
icebp
ljmp
fisubl
insl
mov
test
int3
test
mov
xchg
inc
dec
mov
jecxz
ljmp
pop
dec
test
xchg
sub
cmp
test
xchg
jnp
outsb
dec
in
hlt
test
cmp
ret
iret
xor
dec
jbe
hlt
sub
jge
mov
leave
fldl
aas
andb
nop
push
ja
shrb
cli
pop
xor
arpl
int3
loopne
adc
addl
addr16
cld
sarl
mov
dec
js
js
sub
xlat
and
ret
repz
pushf
testb
and
and
sbb
fs
sti
pop
lcall
imul
dec
aam
add
xor
rorb
or
pop
lret
test
pop
pop
out
popf
test
iret
dec
cli
mov
sub
mov
idivb
mov
jl
push
pop
test
fistps
in
loope
ret
int
aas
les
adc
cmpsl
inc
scas
mov
mov
jge
jp
sti
iret
aaa
mov
mov
clc
lret
mov
pop
rcr
xor
push
xor
push
mov
dec
sub
inc
das
enter
test
lods
dec
roll
roll
ficoml
into
jae
jl
mov
test
add
cmp
pop
lahf
pop
sub
ficoml
jecxz
jge
out
sbb
pop
add
into
gs
sub
jnp
movl
sbb
sub
mov
and
mov
adc
repnz
ret
sti
test
fcompl
sbb
rcll
jbe
repnz
jo
mov
popa
cmpsl
mov
cwtl
dec
mov
push
xor
fldcw
dec
mov
or
xchg
add
lcall
daa
adc
mov
adc
and
mov
jne
jle
outsb
cmp
push
adc
cmpsl
sub
add
repnz
cmp
scas
subl
or
shlb
xor
shlb
jb
adc
mov
std
pop
or
mov
out
cmp
mov
pop
int
in
and
hlt
add
rorl
addr16
and
addr16
mov
xlat
pop
jnp
push
pop
les
adc
inc
ljmp
inc
movsl
lahf
xchg
lds
gs
aaa
insl
inc
lcall
xchg
jecxz
les
loope
aam
fiaddl
out
sub
cmp
sbb
xor
lret
sub
mov
or
imul
cmpsb
es
out
mov
sar
aas
adcl
popa
fildll
xchg
pop
test
mov
xchg
test
cs
sub
push
loop
cmc
cltd
add
jnp
sub
pushf
sub
insb
and
xorb
ja
jo
mov
inc
mov
dec
enter
nop
in
mov
cmp
add
inc
pop
psllw
cmp
sbb
aam
sbb
jmp
mov
dec
imul
push
sbb
xlat
xlat
fsubrp
data16
mov
jl
test
enter
dec
mov
je
pop
aas
rolb
jne
and
push
lret
jo
fmul
and
jo
in
fsubrs
adc
xorl
imul
pop
rorl
push
ja
or
cltd
popa
ret
cmp
nop
stos
jecxz
int3
mov
insb
mov
cmp
and
ss
cwtl
push
xchg
push
inc
test
sbb
xor
outsb
fsubl
out
pop
pop
cmpsb
stc
xchg
inc
test
xchg
test
or
mov
out
mov
call
jns
nop
mov
lret
xchg
je
repnz
icebp
cwtl
mov
ret
cmp
loope
add
das
push
dec
jecxz
imul
mov
mov
lock
pop
mov
test
or
sub
cmp
int
aaa
cmp
mov
dec
pop
stos
shl
push
out
xchg
std
das
push
add
inc
stos
gs
repz
outsl
xchg
and
fidivrl
push
outsb
dec
es
pop
clc
cltd
push
or
mov
sub
mov
or
mov
sub
rcr
sub
sub
mov
in
xchg
vpsraw
sbb
xchg
jmp
cltd
aam
mov
stc
jge
inc
lret
fidivrl
js
xchg
lret
divb
outsb
and
pop
pop
mov
sub
cmc
lods
jb
jnp
outsb
inc
mov
mov
xor
fwait
sahf
sti
cmpsb
mov
xchg
jp
lret
in
int
das
lcall
push
mov
lock
add
out
pop
cli
lret
ljmp
mov
popf
lcall
jle
pop
sub
or
mov
data16
in
cmc
jmp
jnp
jb
sbb
add
out
and
mov
sub
mov
aaa
mov
xchg
push
mov
test
or
jmp
xchg
in
fwait
and
adc
scas
xchg
cltd
test
out
repnz
cmpsl
inc
lea
inc
push
mov
xchg
jno
inc
pop
sahf
xchg
dec
xor
fstpt
sub
das
psllw
or
or
mov
inc
popa
cmpsl
imul
popfw
scas
sbb
shll
cmp
sub
dec
in
or
lahf
push
dec
jg
outsb
xchg
sbb
jmp
cmp
je
insl
sub
pusha
dec
cmpsb
sti
sub
xor
sti
jnp
rcr
sbb
mov
and
loop
push
xchg
in
lahf
sub
push
mov
loope
mov
pop
mov
ss
xor
push
popa
rcrb
movsl
jp
fsts
and
sti
fsubrp
sbb
push
gs
xor
cmpsb
sbb
mov
mov
pop
fwait
inc
nop
push
std
addr16
into
push
fwait
int
adc
mov
mov
push
inc
jb
push
or
stc
mov
ds
or
aad
sub
jnp
adcb
add
testl
pop
sbb
jge
mov
xchg
nop
mov
mov
hlt
in
imul
or
xor
mov
lcall
movsb
dec
mov
outsl
aaa
addb
pop
sbb
inc
arpl
test
inc
dec
js
jmp
mov
xchg
sbb
or
jns
lods
data16
jge
adc
mov
mov
pushf
aad
and
adc
inc
dec
sub
mov
jne
xchg
fildl
nop
mov
cs
shll
ss
pop
into
add
scas
divl
mov
fcmovnu
xchg
sbb
push
out
insb
push
repnz
incl
mov
xchg
ret
rolb
pop
pop
in
sbb
sbb
test
push
pusha
mov
icebp
aam
movsl
stos
adc
iret
mov
pop
fs
or
ja
dec
jo
cltd
insb
sbb
push
cwtl
and
in
stos
lret
dec
mov
mov
pop
jb
pop
sub
psubsw
cmp
add
in
mov
xlat
mov
js
stos
mov
imul
outsl
or
mov
lods
mov
adc
test
stc
adc
mov
testl
mov
dec
xor
arpl
push
fcoms
or
inc
xor
mov
dec
mov
out
fists
xor
pushf
inc
xchg
pushf
mov
or
cli
int3
fsubs
pop
and
stos
mov
nop
ret
mov
fadds
in
divl
mov
idiv
sub
push
ret
xor
inc
push
loopne
das
cmp
loopne
sub
imul
adc
sub
jle
insl
and
rep
fsubp
or
in
fildll
insb
out
push
rclb
sbb
xchg
adc
sti
rolb
xchg
cmp
lret
fidivs
cld
addr16
jne
subl
mov
in
cmp
notl
sbb
lea
dec
cmpsb
arpl
jae
fdivrs
and
and
add
insb
imul
lds
js
nop
lret
or
imul
adcb
push
and
adc
mov
dec
xchg
test
popf
dec
shlb
outsl
and
add
jge
ror
in
cmp
mov
mov
clc
test
mov
mov
stos
mov
cmp
xlat
pop
jg
shll
repnz
out
lds
and
imul
mov
adc
push
adc
scas
pop
jno
pop
test
iret
add
xchg
push
insb
sub
ja
sub
mov
fcomp
out
add
fwait
stc
mov
insl
push
js
std
jmp
or
inc
cs
pop
cwtl
or
popf
mov
aaa
ljmp
lods
mov
outsb
pushf
repz
adc
cmp
xchg
enter
loopne
push
mov
adc
adc
pop
stos
mov
pop
cli
gs
lcall
iret
or
pop
add
jbe
push
sbb
jns
push
jp
jo
repnz
inc
imul
std
dec
cmp
pop
add
pop
dec
and
cld
xchg
cmp
dec
inc
cli
dec
js
jns
push
add
les
in
xor
in
dec
stc
pop
in
sbb
notb
std
stos
enter
push
stc
test
loop
rolb
mov
rolb
sub
bound
int
add
test
out
push
push
shrb
dec
jmp
clc
arpl
fstpt
push
movsb
jmp
cmp
adc
push
or
mov
nop
repz
and
addr16
pushl
pusha
jl
int
ljmp
sbb
das
fnsave
negb
push
ds
out
sub
fisubl
cmp
mov
mov
shlb
xor
jecxz
pop
cli
movsb
clc
bound
inc
mov
jnp
js
mov
movl
ja
lcall
add
and
push
imul
jne
rclb
data16
fldenv
aaa
in
test
out
pushf
jmp
xor
mov
sbb
jg
lock
pop
mov
out
fiadds
pop
out
inc
mov
lods
sbb
jl
shll
xchg
arpl
pushf
xchg
test
mov
fisttps
in
je
dec
xchg
out
sub
or
xchg
addl
mov
sbb
mov
or
add
cmpsb
push
or
enter
xchg
sbb
push
xchg
js
out
lret
pop
or
mov
sub
loopne
aam
subb
hlt
inc
adc
aaa
mov
adc
outsl
mov
insl
mov
adc
xchg
daa
loop
jge
stc
lret
mov
ror
fs
pop
mov
imul
sbb
mov
rolb
cmp
icebp
jbe
fldcw
sahf
mov
fs
xor
jmp
insl
fs
call
xchg
movsb
mov
leave
lods
pop
test
test
roll
push
add
in
popa
xchg
ret
stc
and
cmp
clc
test
mov
popa
sti
das
ror
jno
cmp
mov
test
data16
cltd
jg
and
stos
adc
fxch
mov
ja
es
pop
outsb
rolb
lods
xor
rcrb
xor
sub
push
stc
push
jne
mov
xor
xchg
ret
inc
ret
fwait
hlt
mov
rcll
mov
mov
popf
adc
push
mov
das
cld
into
adc
aas
jns
mov
shll
jo
or
adcl
insl
sbb
sub
or
inc
push
daa
pop
test
pop
cmp
sub
frstor
rol
add
cmpsl
test
stos
lds
inc
lds
inc
insl
out
ret
xor
lret
jecxz
jae
pop
xchg
ret
fwait
out
jecxz
pop
js
xchg
dec
out
or
add
or
dec
aas
and
add
scas
pop
ror
scas
adcl
imul
ljmp
jno
mov
dec
mov
jmp
fdivrs
rcrl
add
xlat
sbb
xor
lahf
sbb
pushf
in
imul
xchg
mov
mov
mov
sbb
mov
into
pop
or
inc
fimull
in
sahf
idivl
mov
xchg
pop
adc
call
pop
mov
pop
add
imul
clc
cmpb
sub
daa
add
mov
xor
pop
ljmp
lods
jnp
sbb
ret
sub
popf
inc
mov
mov
xlat
xor
mov
lcall
ret
xchg
movsb
jae
dec
aam
add
or
ja,pt
push
pop
into
sub
les
mov
rcrl
xorl
call
in
fsubl
xchg
cwtl
xchg
out
push
popa
cwtl
insb
lcall
jle
bound
outsl
pop
cmc
inc
push
aad
cmp
mov
ret
push
in
and
outsl
jecxz
fstp
icebp
mov
popf
xchg
ret
movsb
pusha
add
push
pop
jmp
shlb
push
es
js
loopne
jge
xchg
rcr
rcl
das
out
sbb
sbb
add
mov
mov
inc
push
xor
sbb
xchg
mov
dec
ja
jbe
aaa
xchg
push
mov
adc
adc
out
mov
pop
in
sbb
push
ljmp
incb
jge
push
sbb
movsl
sub
push
push
mov
movsb
xor
mov
stos
test
inc
inc
mov
inc
arpl
inc
or
sub
aas
out
subl
aam
push
loop
sti
or
js
sub
popa
imul
xchg
loopne
cmc
incb
mov
sub
xchg
mov
inc
sub
insl
push
jno
inc
enter
bound
arpl
clc
mov
lock
sub
or
in
jae
sbb
je,pn
mov
imul
jl
fstl
rolb
xchg
rol
adc
lret
mov
xorb
dec
jg
arpl
ror
rcl
addl
sbb
or
jge
push
les
xlat
addb
jg
jne
bound
notl
adc
jp
adc
sahf
jno
cld
push
shlb
xor
outsl
pop
cmc
push
orb
add
clc
or
jno
jge
in
mov
fdivrs
jb
pop
cmp
or
bound
push
cs
mov
dec
outsb
lret
or
push
cs
mov
int
pop
fstps
push
or
push
rcrl
inc
adc
pop
bound
stos
cwtl
movsb
ret
or
push
aad
aam
sbb
in
mov
push
jnp
pop
ret
ds
push
and
sbb
cwtl
mov
sbb
xchg
inc
repz
xchg
cmc
subb
es
push
test
inc
add
out
xchg
xor
add
movsl
push
outsl
inc
arpl
pop
ljmp
inc
add
outsb
xchg
mov
mov
inc
lods
popa
orl
popf
add
pop
push
jl
orb
add
je
imul
lds
mov
lods
cmpl
fs
sub
xchg
mov
jnp
mov
cld
mov
adc
mov
es
sbb
xchg
call
sarl
int
iret
in
cmp
or
mov
sbb
xor
fdivrs
dec
mov
sti
xlat
push
add
adc
or
fnsave
jmp
sub
orb
push
mov
stos
iret
cmp
dec
xchg
mov
mov
mov
out
pop
xchg
pusha
in
and
mov
imul
scas
jle
pop
inc
adc
imul
inc
or
das
mov
leave
in
mov
mov
push
mov
lock
daa
xor
pushl
mov
push
and
mov
mov
mov
cmp
sbb
sub
jnp
xchg
jmp
in
pop
fcmovu
sti
xchg
movsb
iret
popf
shll
lea
fldcw
and
mov
jmp
or
mov
inc
shr
mov
out
lret
sbb
mov
adc
sub
add
jecxz
inc
test
xchg
in
lcall
add
icebp
out
mov
or
and
sub
repnz
dec
inc
push
inc
out
mov
dec
out
mov
push
jo
mov
jge
loope
scas
xchg
sbb
out
divb
sbb
lods
mov
lods
dec
addr16
sub
out
arpl
orl
lds
add
cmp
xor
jne
jae
or
and
arpl
jmpw
xchg
cli
mov
mov
mov
fs
mov
jecxz
ds
sbb
add
xor
cs
dec
jae
shrb
daa
lds
mov
ret
lock
sbbl
push
xor
test
add
cmp
jae
jns
push
incb
inc
movsb
push
out
pslld
pushf
cmp
cmp
push
mov
jb
cltd
pop
addl
mov
push
in
pop
cmp
inc
sbb
out
pop
push
jl
dec
or
push
iret
pop
mov
loop
adc
in
adc
adc
or
shlb
push
mov
pop
cmp
push
pop
mov
cmp
xor
jle
fsub
and
xchg
fdiv
cltd
out
jnp
cld
add
es
jmp
xchg
jmp
xchg
jne
mov
out
pop
test
fcmove
adc
cmpsl
inc
push
push
adc
push
mov
push
notb
jnp
jnp
jbe
pop
mov
dec
repz
jl
ja
xchg
jns
adc
mov
jle
data16
lea
lea
loop
sub
mov
jo
mov
ficoml
sub
aad
loop
nop
imull
movsb
fwait
push
fbld
stos
dec
fsubs
sub
or
fsubp
orb
pop
and
call
shlb
xchg
adc
sahf
leave
cwtl
dec
push
add
cli
imul
loope
fimuls
test
out
xchg
cmp
sbbb
sub
mov
int
jne
mov
fiaddl
cwtl
inc
xor
pop
sub
cmc
sub
stc
cltd
sahf
in
adc
loope
pop
mov
add
cli
xchg
lahf
aas
int
call
push
imul
imul
pop
je
ds
subb
les
mov
lods
scas
push
mov
jl
shl
jecxz
mov
cmc
call
inc
push
add
daa
push
hlt
adc
cmp
stc
mov
jle
lds
mov
sub
inc
jo
cs
repz
mov
rcrl
xchg
jmp
add
inc
stos
mov
adc
and
stc
push
cmp
mov
test
test
pop
loop
fimull
notb
and
arpl
leave
jnp
xchg
imul
push
loope
pop
ja
inc
xchg
dec
insl
idivl
or
int3
pop
movsb
sub
inc
cld
movsl
add
inc
xor
jmp
inc
mov
push
mov
pop
cld
xchg
dec
mov
lds
lea
daa
mov
xor
test
mov
js
hlt
sbb
cwtl
repz
call
dec
xor
jmp
and
mov
push
inc
pop
xor
sahf
loop
cmp
sbb
fcom
add
lret
or
lret
ffreep
call
in
addr16
mov
pop
sarl
mov
or
std
pushl
push
icebp
xchg
arpl
scas
in
and
sub
xor
jo
mov
pop
jmp
dec
jns
js
jb
cmp
jbe
and
iret
lods
pop
fcoml
pop
pop
popa
xor
incl
imul
push
je
int3
inc
stos
test
into
sub
js
mov
out
jg
in
add
out
adc
lock
jbe
xchg
jmp
imul
mov
adc
pop
jle
cltd
in
repz
sub
and
lret
popa
and
je
pop
jns
movsl
dec
or
mov
sub
insl
xor
adc
sbb
mov
xchg
dec
out
adc
insb
loop
test
int3
sbb
mov
sub
mov
dec
jl
sub
and
push
xchg
pusha
push
xchg
add
jg
push
xchg
mov
cwtl
fcmovnbe
jmp
subl
or
test
dec
mov
mov
dec
xchg
shlb
pop
fdivrp
repz
sbb
adc
in
sub
lahf
insl
xchg
mov
pop
loopne
jae
das
mov
movsl
outsl
push
mov
leave
push
stos
popf
or
hlt
mov
lock
mov
xchg
lret
jno
push
push
repz
inc
jmp
and
lock
sti
cwtl
movb
or
pop
xchg
jmp
sbb
jae
test
dec
negb
xlat
mov
lock
pop
mov
in
leave
rcrl
nop
lods
xor
pop
add
andl
dec
xlat
adc
fidivl
jbe
sbb
stc
xor
cmp
and
push
mov
lcall
sahf
mov
jns
ds
and
adc
fildll
mov
popa
shl
jo
out
out
and
or
aas
mov
je
js
sub
sub
mov
loope
dec
js
insb
int3
mov
sub
jae
out
pop
push
gs
arpl
xlat
adc
add
inc
dec
repz
xor
add
int
sbb
mov
cmp
xor
rorb
xlat
jl
pushf
adc
xchg
xor
arpl
sahf
pushf
cmpsl
into
push
fcomp
mov
push
xor
push
push
and
cwtl
movsb
lea
cmp
pop
lods
xor
jp
ret
push
inc
xchg
jecxz
jle
inc
cs
daa
ret
fnstcw
ret
pushf
aad
inc
and
lods
call
mov
cmp
pop
sub
out
push
es
cmp
or
testb
sbb
shlb
scas
daa
lods
xchg
xorb
icebp
pushf
xchg
push
std
jge
in
fcompl
and
pushf
mov
loope
sti
xchg
cmp
adc
add
adc
test
sbb
movsb
jo
sub
xchg
mov
in
movsl
lock
ja
xchg
imul
scas
cmpsl
lret
and
inc
inc
or
nop
xchg
stc
cmp
cmp
mov
add
sbb
mov
sub
and
out
out
popf
jl
dec
insb
negl
and
outsl
push
inc
pop
icebp
cmp
mov
and
dec
les
rolb
aas
xor
mov
loope
shrl
je
addr16
sbb
js
xchg
sub
cli
aaa
xor
pusha
stos
inc
push
call
xchg
mov
add
aas
aaa
fcompl
xor
dec
dec
mov
jnp
sbb
ret
loop
ror
dec
pushf
cmp
les
mov
addl
out
cmpsb
enter
repz
mov
ljmp
dec
xchg
movsl
sbb
ret
adc
repz
xchg
popf
mov
adc
daa
inc
es
jbe
mov
fistpl
pushf
xchg
jl
stos
and
and
cmp
leave
add
out
das
xchg
aas
ret
das
jno
mov
sub
mov
sub
mov
and
in
cmpsb
mov
inc
lods
out
and
andl
pushf
mov
data16
in
and
add
add
mov
sub
hlt
call
adc
test
xor
shl
dec
cmp
mov
andl
in
add
and
es
jo
ja
test
movl
push
pop
pop
dec
mov
or
push
push
adc
aad
mov
xchg
add
xor
btr
add
mov
ljmp
das
inc
fldenv
mov
add
loope
inc
je
or
pop
stos
add
testb
ror
inc
xchg
jno
test
mov
sti
fstps
pop
imul
add
popf
mov
ljmp
cmp
mov
adc
outsl
dec
ja
cmp
mov
fwait
xor
scas
les
mov
mov
pop
aaa
mov
pushf
stos
imul
je
sahf
inc
lret
loope
rcrb
rclb
roll
jmp
pusha
add
jmp
jae
scas
xor
fwait
mov
mov
cmp
and
cmp
xor
je
and
scas
jmp
add
mov
cmpl
cwtl
push
inc
scas
push
out
or
test
cmp
sbb
fstpl
ror
lahf
lock
adc
sub
push
push
mov
popa
xor
stc
fs
mov
shlb
int3
lahf
test
movsb
pop
test
xchg
out
mov
js
pop
sub
pushf
sbb
cmpsb
mov
add
aam
mov
xor
int
movl
sbb
imul
popa
rolb
sub
movsb
xchg
ret
add
mov
jns
fimuls
les
push
xchg
fidivrl
in
ja
orb
mov
xchg
sarl
popa
fwait
imul
cmpsl
mov
dec
les
lret
imulb
inc
jmp
pop
push
and
mov
xchg
imul
leave
sbb
fisttpll
imul
sub
shr
jecxz
orb
xchg
push
cld
dec
fs
das
mov
sbb
insl
sahf
dec
pop
movsb
adc
cmp
xchg
xchg
dec
inc
xchg
dec
call
add
inc
bound
adc
loope
and
loopne
dec
pop
sbb
lcall
xor
ds
or
pop
fdivrs
mov
pop
pop
mul
stos
dec
jecxz
mov
jle
mov
lods
outsl
test
jmp
mov
dec
sbb
fstpt
adc
jae
out
mov
lahf
push
nop
xor
mov
or
lcall
jecxz
pop
push
pushf
or
js
popa
imul
mov
adc
and
xor
in
jp
xchg
or
inc
xor
das
pop
mov
cld
stc
icebp
hlt
iret
jl
adc
mov
fidivl
cmp
divl
adc
and
or
dec
add
push
xchg
mov
sarb
scas
xchg
or
call
dec
jmp
stc
inc
aad
test
fdivrs
dec
cwtl
jmp
add
idiv
mov
jne
test
cs
insl
aas
hlt
mov
sub
dec
cmpsb
push
shll
xchg
xor
pusha
nop
jbe
jmp
std
xor
sub
out
add
fucomp
push
pop
mov
repnz
aam
outsl
in
add
ljmp
mov
vmovapd
xchg
push
ljmp
mov
xchg
push
ret
lds
insb
repz
add
add
repz
mov
xor
sar
add
and
mov
subl
sub
data16
data16
adc
sbb
mov
add
inc
rclb
mov
rcrl
movsl
sbb
daa
testb
in
adc
push
in
enter
pop
sub
push
sub
adc
ds
inc
or
xchg
lcall
in
shrb
mov
lock
dec
incl
repz
shlb
aad
lods
lea
fs
mov
mov
mov
dec
subl
cmpsl
lea
inc
in
sub
dec
insl
sahf
stos
sti
addb
push
aas
mov
test
mov
push
mov
sub
nop
outsl
loopne
mov
bound
cmp
je
sahf
cmp
jecxz
sbb
mov
dec
sub
leave
and
push
vmovdqu
or
adc
sub
inc
repz
mov
push
inc
xchg
es
mov
icebp
repz
rolb
out
test
and
ret
dec
dec
insb
rolb
push
lret
nop
push
test
sbbb
loope
aaa
and
popf
aaa
xchg
add
xchg
call
pop
lods
iret
push
stos
jae
and
cmpsb
ret
in
rolb
mov
test
jmp
aas
add
test
adc
push
cmp
shll
pop
mov
leave
and
mov
stos
enter
dec
pop
data16
clc
xchg
dec
scas
and
stos
dec
adc
int3
pop
ds
jb
movsb
cmp
repz
pop
pop
or
xchg
jecxz
add
cmpsl
divps
in
mov
cs
jmp
jae
add
or
xorb
push
dec
lahf
sub
test
imul
out
dec
idivb
mov
shl
movsl
xchg
pop
jle
push
pop
ljmp
in
fcomip
outsb
or
fdivl
push
mov
aaa
stos
cmp
ror
mov
mov
inc
dec
out
mov
mov
stc
pop
lds
hlt
and
jo
adc
jbe
leave
xchg
adc
jmp
jb
dec
loope
push
sub
pusha
lods
ficompl
das
inc
cmc
shlb
call
mov
call
push
mov
jecxz
ljmp
sub
mov
fsts
mov
cwtl
addr16
jo
ds
xchg
aaa
cmc
mov
ljmp
xlat
ljmp
sub
popa
test
mov
xchg
inc
int3
test
adc
jl
xchg
pushf
push
adc
ja
push
xor
insb
int
cmp
mov
fistpll
inc
daa
sahf
decb
mov
mov
in
sub
cmc
lods
aas
mov
adc
std
or
loopne
sbbl
loopne
hlt
mov
add
xchg
cld
sbb
ret
xchg
xchg
sbb
jmp
pop
xchg
inc
and
add
test
dec
push
sub
jmp
adc
outsl
add
xchg
jp
sahf
pop
sbb
fdivrp
mov
mov
aaa
test
sti
ret
shlb
mov
fsubl
push
pop
and
fistpll
mov
mov
fs
jp
push
fisttpl
popf
js
cmp
add
add
adc
test
int3
testb
fwait
sahf
cltd
fdiv
adc
or
xor
mov
mov
cmpsl
testl
jne
int3
add
rcr
push
popf
sbb
outsb
ja
xor
frstor
ss
push
pop
jne
mov
arpl
xchg
and
jnp
outsb
cmp
mov
and
push
add
fwait
dec
sar
inc
fsubr
sti
pusha
xchg
lods
cmp
cltd
xchg
repnz
movsl
cmp
lcall
bound
movsl
into
cmp
xorl
jns
pushf
push
mov
pop
aaa
ja
pop
pusha
aad
and
jle
sbb
dec
leave
sub
out
test
xchg
jo
stc
inc
out
out
ja
sub
leave
mov
push
roll
out
leave
test
imul
xchg
fdivr
cmpsl
and
es
bswap
adc
fisubl
in
cltd
inc
adc
fcmovbe
int3
xchg
cltd
fisubl
leave
add
stos
sub
rcrl
ror
outsb
mov
test
in
cli
imul
jns
js
lods
lcall
or
js
pop
sar
jb
xlat
call
inc
dec
sub
ss
sub
imul
or
mov
dec
popf
pop
fwait
pop
leave
mov
jl
imul
jo
mov
jnp
lahf
inc
dec
sbb
stc
roll
sbb
inc
movsl
add
push
jle
gs
cld
and
mov
sub
add
inc
int
jne
push
push
into
imul
push
add
in
adc
int
pushf
bound
add
xchg
sar
and
mov
ror
call
or
add
sbb
sbb
add
sub
mov
lret
mov
imul
fildl
sbb
popf
test
bound
popf
inc
gs
cmpl
aad
arpl
stos
sbb
int
lods
pop
clc
lea
jne
pop
aas
push
mov
cld
xchg
aad
push
lea
andl
dec
jmp
or
xchg
add
inc
add
pop
mov
aad
cmc
and
cmp
dec
xchg
andb
psrlq
loop
dec
in
cmp
and
or
jae
cmp
aad
add
xchg
test
movsl
sbb
adcb
push
nop
nop
sub
adcb
aas
pop
cmp
mov
mov
or
inc
sbb
push
std
ja
sub
or
out
mov
add
or
movsl
stc
pop
mov
mov
xchg
dec
xchg
jmp
and
lret
or
mov
jae
add
lret
pop
or
jns
mov
inc
adc
gs
out
hlt
icebp
cs
aad
stos
or
jl
insl
or
es
fstps
xchg
and
jns
ja
les
and
lahf
aaa
idivl
sbb
test
cli
jae
cmp
cmpsb
and
dec
lahf
stos
jmp
and
outsb
fisttpll
cmpsl
shll
cmc
cmp
ret
orb
push
into
dec
push
cmpsb
or
lret
xchg
or
inc
xor
arpl
out
push
mov
fmull
ljmp
incb
fcomps
xor
scas
mov
test
jg
mov
jle
lods
int
cwtl
xor
cmc
lods
lods
dec
and
xchg
mov
stos
jno
fs
push
mov
mov
fstps
jne
push
add
or
pushf
pop
sub
mov
jbe
dec
jmp
lahf
inc
loopne
inc
sbb
imul
xchg
xor
jg
add
xchg
or
lock
xchg
ficompl
pop
push
out
adc
xchg
int3
hlt
cli
add
jp
jo
jp
jle
sbb
push
inc
sti
dec
xor
test
cmp
mov
in
cmp
data16
pop
inc
mov
je
cmpsb
addl
vmovss
aam
sub
pop
jbe
addr16
insb
jae
popa
repz
outsl
cmp
divl
loope
inc
lea
jbe
hlt
mov
aas
sub
cmp
sub
mov
mov
inc
xor
inc
test
in
xchg
mov
mov
mulb
cmc
dec
repnz
jns
nop
sbb
lods
mov
aad
dec
mov
xor
mov
and
push
jbe
lcall
dec
cmp
jne
push
pushf
push
jle
push
scas
xor
inc
pop
xor
imul
jnp
pop
stos
nop
xchg
adc
dec
push
out
pusha
lds
movsl
xor
xor
mov
test
out
lods
xchg
fsubl
repnz
cli
cmp
mov
mov
in
ror
add
push
jns
pop
xchg
clc
inc
mov
adc
popf
mov
cmpsb
push
jl
mov
pop
dec
stos
sub
jnp
in
adc
popl
movsb
jmp
sti
lahf
pop
pop
pop
inc
je
lock
stc
stc
pop
test
add
pop
jge
gs
cmp
mov
aas
inc
fimuls
dec
xchg
cmpsl
addb
dec
jo
xchg
xor
adc
out
not
fistpl
fstpt
cmp
jecxz
cmp
icebp
outsb
pop
inc
lea
loopne
lods
f2xm1
sbb
push
scas
inc
stos
xchg
pop
lret
xor
daa
dec
addr16
cmpsl
inc
and
lcall
sbb
jo
dec
shlb
repz
arpl
jmp
cltd
sub
shll
in
shll
push
movsl
add
mov
adc
cwtl
dec
jle
adc
loopne
sbb
inc
and
adc
jbe
pop
aam
mov
mov
add
lret
call
pminub
fisubrl
mov
dec
cmc
mov
sbb
outsb
movsl
shlb
out
mov
stc
sub
sarl
mov
cs
iret
mov
orb
cwtl
or
or
sarb
and
sbb
and
xor
xchg
push
xor
sbb
push
call
adc
test
jle
inc
imul
addr16
hlt
inc
pop
sub
sarl
sub
rep
pop
popf
fcomip
cmpb
cmpsb
pop
pop
cmp
xor
out
mov
or
stos
stc
ret
push
mov
xor
lods
ds
test
mov
mov
add
mov
enter
leave
pop
or
jg
loope
out
push
xchg
dec
and
divl
adc
add
inc
ds
inc
dec
adc
ja
mov
aas
mov
fistl
dec
jle
bound
add
iret
add
mov
xchg
addb
or
xor
dec
rorl
jge
test
jns
das
jb
push
push
push
push
aaa
inc
scas
lods
gs
sbb
sbb
shr
movsb
sbb
fisubrl
xchg
das
cwtl
mov
js
sbb
xchg
jae
hlt
sbb
inc
sub
mov
sbb
and
sti
jno
and
lahf
push
adc
js
arpl
dec
xchg
sahf
cwtl
loop
test
call
pop
sub
push
inc
hlt
fildl
pusha
arpl
pop
dec
cs
fadds
push
dec
clc
add
mov
insl
xchg
cs
aad
cmpsl
ret
add
jg
cmp
lret
jae
notb
repnz
mov
ss
xor
in
dec
pop
dec
push
lea
shr
testl
push
xor
xor
popf
push
out
xchg
cmpsb
test
lods
xor
add
mov
ljmp
push
cmp
dec
js
or
mov
cmpsb
xchg
ret
xchg
imul
test
dec
jb
push
inc
sub
jnp
lea
add
daa
jo
lret
sbb
cli
xor
stos
sub
icebp
adc
movsb
pop
mov
xor
mov
sub
sub
mov
sbb
push
outsl
add
cmp
popa
mov
pop
clc
or
jnp
lret
jnp
ror
lock
push
pop
repz
xlat
ss
or
fwait
in
push
inc
cmp
fs
gs
inc
iret
inc
hlt
sub
push
sub
js
insl
pop
pop
mov
xchg
ljmp
test
test
movsl
dec
lods
add
sarl
or
mov
addr16
int3
out
or
pop
mov
mov
jecxz
dec
mov
arpl
pop
xchg
test
mov
mov
ja
out
jg
mov
jecxz
cmp
andb
aam
out
iret
fdivl
xor
push
mov
sbb
lds
out
lods
je
rcrl
insl
xchg
sti
loop
xchg
dec
cmp
pop
sub
addl
mov
stos
mov
fbstp
out
inc
mov
pop
dec
jb
xor
xlat
insb
std
cmp
test
loopne
xor
xchg
mov
dec
adc
movsb
adc
cs
mov
dec
jge
pusha
ljmp
lds
or
xchg
mov
aam
pusha
adc
pop
pop
add
add
inc
jmp
scas
push
fcomps
aam
inc
or
into
cmp
lcall
mov
movsb
int3
in
roll
and
push
jl
subl
cmp
cltd
mov
jecxz
jl
pop
push
insb
sbb
adc
pop
adc
mov
inc
pushf
jp
sar
dec
repz
mov
push
lock
mov
aas
enter
insb
sub
lret
cli
bound
lock
cli
das
inc
pop
scas
dec
jae
push
jnp
je
call
push
in
data16
repnz
scas
lods
push
or
in
cwtl
clc
shlb
sbb
ficomps
iret
test
stc
ret
ret
lcall
xchg
movsl
cmpsb
test
aas
pop
push
mov
sarb
cltd
push
loopne
in
lret
xchg
adc
popa
fcompl
jle
fists
loopne
jmp
jl
jg
or
scas
aad
cmp
pop
dec
jle
test
out
repz
pop
std
cli
data16
out
push
sbb
cs
mov
push
cld
add
pusha
dec
iret
mov
lea
ficoms
or
mulb
sahf
mov
test
mov
add
lea
test
xor
rolb
dec
jg
stos
push
jecxz
add
and
test
pop
daa
mov
jbe
cmp
loop
sarl
xchg
mov
mov
sbb
ljmp
aad
mov
mov
and
fnstsw
lods
cmp
daa
and
pop
js
xchg
push
xchg
cmp
push
gs
ret
cmp
stos
sti
xor
pop
jns
mov
mov
shlb
sub
pop
iret
or
shrl
stos
add
cmp
or
dec
adc
mov
dec
xor
divb
fwait
dec
jae
rorb
dec
xchg
pusha
add
call
xchg
pusha
mov
pushf
push
push
aad
mov
dec
daa
and
add
mov
dec
lods
mov
jnp
dec
imul
add
pop
add
sub
mov
outsl
cld
lret
js
les
pop
mov
fcompl
leave
lret
int
mov
idivb
xchg
push
cmpsb
xchg
jns
push
pop
in
lods
or
adc
cltd
jb
xlat
xchg
nop
in
mov
cmp
aas
in
mov
push
add
xchg
lret
insb
jns
jle
rclb
sti
js
jb
pop
jp
cmp
and
inc
insb
iret
mov
dec
sub
jne
addb
cmpl
lret
inc
push
adc
ret
or
shll
ljmp
add
test
add
fadds
pop
xor
and
adc
add
inc
popa
bound
mov
in
push
aam
inc
xor
cmpsl
push
jnp
jp
mov
sbb
fstpl
push
mov
out
jne
rcl
add
or
fcomps
mov
fldenv
into
bound
mov
fildll
mov
cmp
dec
cmp
mov
ret
stos
xor
jg
lahf
js
loope
ss
and
inc
or
sbb
jl
cmpsl
test
sub
sub
cs
xchg
xchg
mov
jno
je
shll
addb
cmpsb
pushf
xor
mov
lock
xor
in
adc
daa
arpl
pop
sahf
adc
fstpl
insb
movsb
sub
inc
movsl
mov
cmp
imul
lret
mov
jne
mov
push
andb
in
mov
ret
ja
jecxz
sub
push
xlat
push
sub
popf
imul
cmpsl
mov
jg
std
rcr
or
dec
mov
mov
mov
repnz
xor
aam
xchg
fsts
clc
repz
fwait
lods
jbe
mov
dec
add
std
jle
inc
mov
mov
out
sub
sub
mov
dec
lods
mov
fbstp
cmpsb
int
popf
dec
add
scas
or
xor
cmp
out
and
sub
xlat
mov
inc
shlb
ret
idivb
sub
test
test
lods
xchg
mov
jl
lea
add
ss
out
or
dec
cmp
push
mov
and
cs
imul
xchg
lds
push
cmp
mov
inc
adc
or
sti
mov
xchg
in
outsl
imul
out
mov
and
mov
data16
xchg
insl
jno
add
cld
pop
adc
xor
or
clc
mov
int3
stos
sbb
pop
xchg
xor
jl
sar
inc
sbb
xchg
pop
div
fwait
loopne
addb
int
mov
jo
shlb
mov
loop
jne
sbb
lcall
cwtl
pop
xchg
subl
shll
andl
enter
pushw
pop
cmpsl
xchg
mov
insb
ja
xchg
dec
push
mov
lret
in
adc
jl
add
ljmp
inc
mov
push
or
jae
push
bound
btc
add
mov
repnz
or
pop
jbe
mov
cltd
xchg
or
insl
mov
xor
pop
cmp
std
and
mov
or
xor
in
cmpsl
mov
push
cmpsb
xor
dec
mov
loop
sbb
addr16
lods
jne
jp
mov
fiadds
daa
dec
push
mull
push
loop
jo
decb
adc
inc
pop
mov
insb
mov
push
xor
inc
jl
call
fdivp
movsb
aaa
out
xchg
add
cld
push
jb
and
aas
inc
and
adc
negl
es
dec
xchg
sub
repnz
xor
xchg
xchg
sub
cmp
sbb
mov
rol
jge
mov
sahf
clc
dec
cmp
or
movb
scas
and
and
sbb
jmp
add
push
jnp
sarl
pusha
bound
mov
ficompl
push
out
scas
jecxz
jno
lds
ds
jp
xchg
mov
rorl
pop
xlat
outsl
dec
adc
jns
fmull
mov
shlb
enter
xchg
xchg
ss
pop
pop
loopne
incb
mov
iret
push
cmp
cmpl
ljmp
aas
inc
mov
mov
imul
sub
sti
pop
scas
jo
rcll
inc
xchg
in
xchg
out
adc
xchg
out
mov
jnp
adc
jne
push
jae
lds
pop
inc
sub
sbb
xchg
stos
adc
mov
add
shlb
push
arpl
dec
out
adc
dec
ja
das
movsl
mov
jl
inc
adc
outsl
lds
loope
out
mov
jae
pop
and
sbb
mov
out
xchg
loope
mov
out
jnp
lock
mov
sbb
mov
movsb
xchg
aam
nop
and
dec
pushl
push
adc
subl
inc
sbb
dec
daa
add
mov
mov
test
lods
jns
insl
subb
subb
jle
stc
out
sub
add
mov
stos
out
es
scas
sbb
sarl
inc
jl
scas
test
loopne
out
pusha
xor
sub
mov
or
rorl
push
loopne
sbb
loope
push
pop
hlt
xor
sbb
xchg
fnstenv
mov
sbb
loope
xor
dec
xchg
lahf
mov
imul
in
leave
push
jnp
mov
mov
js
add
fisubl
pop
jl
push
mov
cmp
mov
xor
inc
pop
and
loop
inc
jmp
mov
inc
mov
mov
xor
adc
lds
sub
add
jb
imul
jg
andb
jb
push
insl
inc
adc
adc
pop
jno
loop
add
loopne
scas
jl
ret
insb
mov
mov
sub
or
in
js
jno
sbb
xchg
push
cli
xchg
arpl
mov
cld
dec
fimuls
clc
cld
push
or
mov
sub
lret
out
imul
mov
jne
sub
fimuls
loope
mov
adc
xor
add
sahf
negl
jge
push
test
xchg
or
jmp
jnp
jl
or
jb
iret
sub
clc
dec
push
dec
scas
loop
rep
outsb
cmp
dec
add
cmpsb
dec
jp
pop
lcall
das
filds
lods
cs
jns
bound
cmp
pop
sub
out
add
ficomps
adc
pop
jno
rcr
xchg
mov
call
adc
jl
sub
push
dec
push
and
push
fnsave
daa
push
scas
test
pop
les
in
cmp
insb
push
adc
pop
jnp
je
sbb
push
pop
cwtl
sub
mov
fsubrs
xchg
inc
xchg
dec
popa
xchg
cld
xorl
lcall
ficoml
sbb
inc
ds
pop
xor
pushl
cmp
mov
xchg
add
cli
mov
cmc
mov
lret
stos
xlat
mov
pop
into
loope
mov
jo
dec
jmp
inc
daa
mov
cmpsb
rol
imul
ja
sbb
out
lock
jae
aam
jle
loopne
int
jbe
es
push
outsb
jl
lret
jnp
clc
mov
push
or
fistps
jl
push
dec
testl
cmc
mov
data16
mov
jg
add
and
insl
mov
mov
pop
aas
rol
lahf
aad
xchg
bound
aad
adc
je
iret
inc
in
repz
int3
mov
mov
xchg
sub
pop
scas
and
push
inc
cmp
sub
stos
cs
xorl
adc
xchg
sbb
jnp
pop
xchg
sub
enter
adc
mov
insb
addr16
jmp
cmc
in
adc
ljmp
aaa
or
mov
call
mov
inc
jo
pop
sbb
mov
inc
sub
ror
cld
shlb
or
sahf
imul
dec
dec
fcmovbe
scas
sahf
mov
arpl
out
into
adc
orb
adc
enter
ss
out
xor
icebp
jmp
in
cmp
xchg
xor
int
movl
or
in
cmp
cs
mov
or
sbb
pusha
xor
jnp
jnp
sbb
mov
pmaxsw
xlat
sub
jns
jo
into
cmpsl
cli
ja
xlat
sub
sub
cs
pop
pushf
loope
sti
or
inc
cmp
xchg
cmp
ror
jge
fnstcw
mov
orl
sub
test
mov
mov
inc
pop
jp
and
mov
das
jns
pop
xor
pop
dec
mov
push
addr16
pop
fwait
bound
sub
out
sub
mov
sarb
iret
jge
aaa
mov
inc
lock
stos
adc
sub
jne
xor
into
xchg
ret
xchg
dec
and
lock
fdivs
or
call
gs
cs
sub
test
push
push
adc
cmp
mov
pop
mov
adc
in
mov
add
or
pop
les
movsl
mov
mov
ret
mov
cmc
cmp
sbb
xlat
stos
xor
icebp
jno
insl
dec
addb
dec
sbb
pop
and
lds
je
push
jl
popa
mov
lret
sbb
in
push
push
insb
dec
mov
lahf
pop
stc
aad
and
jp
das
push
repnz
push
and
jnp
inc
rclb
mov
repz
movsl
xchg
fcoml
adc
sub
lret
bnd
add
jecxz
sub
or
ds
mov
imul
mov
mov
aam
push
andb
mov
shlb
daa
cltd
cs
cmp
xor
lods
ret
add
inc
in
call
cmc
das
jl
sbb
mov
fstp
dec
mov
xor
rcll
sahf
outsl
dec
dec
push
push
jae
adc
ja
sub
jno
fnstenv
inc
sub
fcoms
push
mov
hlt
xor
bound
mov
leave
pop
shll
jle
test
jb
pop
push
nop
ret
and
fmulp
lret
fwait
dec
inc
jg
push
scas
sti
ret
xchg
adc
push
popf
mov
into
inc
aas
loopne
pop
or
mov
insl
movsl
ljmp
dec
sbb
xchg
push
stc
fcomp
ja
dec
or
jbe
fsts
mov
sub
sbb
sbb
xchg
cmp
sahf
xchg
add
rep
sahf
or
sub
ds
inc
test
push
jns
inc
mov
mov
add
adc
int3
jae
pop
add
out
or
outsb
pop
mov
sub
push
iret
jno
fiaddl
stc
and
pop
adc
sub
repz
dec
scas
xchg
sahf
fbld
xchg
loop
adc
add
int3
push
adc
lret
add
push
je
imul
inc
inc
mov
sbb
in
mov
cmp
out
adc
push
testl
repz
jbe
pop
cmc
jo
stos
jmp
pop
pushf
sub
clc
pop
jb
or
xchg
cmp
les
fisubl
xor
lret
cmp
cltd
pop
cmp
js
push
js
and
push
cld
lock
jne
scas
ficompl
test
dec
stc
sub
inc
adcb
sub
xchg
inc
adc
lahf
inc
stos
xor
jle
adc
push
pop
sub
in
cmp
mov
ljmp
stos
mov
dec
ret
sbb
adc
push
mov
jne
test
xor
insl
lret
sti
call
test
xchg
or
orps
aaa
dec
cmp
in
pop
cmp
stc
xor
sbb
inc
repnz
dec
pop
push
sub
lret
mov
in
cmp
imul
rclb
clc
decb
jno
aas
xor
imul
push
arpl
es
and
sahf
add
frstpm(287
mov
lds
xchg
fscale
jecxz
fsubrs
xchg
mov
dec
js
sub
pop
xor
xchg
jmp
pop
mov
jge
xchg
or
xor
fdivrs
insl
jp
mov
loop
sub
mov
pop
mov
add
loopne
jo
adc
mov
sbb
xchg
mov
adc
mov
pop
or
xchg
xchg
fnsave
fwait
out
or
and
test
lods
roll
fildll
ss
out
pop
mov
out
push
inc
cld
mov
dec
push
sbb
into
mov
mov
out
jp
leave
jle
aad
popf
add
aam
sbb
inc
js
xchg
iret
and
sti
jnp
test
fsubl
pushf
fstpt
in
fwait
out
push
mov
push
push
mov
xchg
push
pop
cmp
add
xor
mov
sub
sub
lret
pop
loop
repz
sub
xchg
mov
adc
test
jbe
pop
fidivrl
fisubrs
mov
push
xor
in
test
lcall
mov
mov
test
out
test
negb
add
in
push
push
fiadds
sub
mov
jg
repz
mov
sub
mov
es
fdiv
mov
lret
jns
jp
xchg
push
sbbl
mov
dec
cs
aas
mov
subb
sti
mov
adc
js
cmp
mov
jae
dec
arpl
ret
inc
cltd
ss
mov
jmp
add
scas
test
cmp
pop
push
test
std
sbb
push
rclb
je
mov
out
lea
cltd
sbb
push
gs
das
cmpsb
fs
pop
scas
pusha
enter
xchg
hlt
xorb
jnp
in
sub
icebp
in
cmc
pop
inc
push
or
leave
xchg
test
sbb
jge
push
lcall
cmp
jo
daa
icebp
in
je
xchg
and
dec
xor
dec
mov
frstor
pop
push
mov
push
popa
mov
push
inc
jg
clc
and
dec
pop
aaa
es
or
and
xchg
add
cmc
cmp
pop
stos
push
repnz
jecxz
ret
in
movsb
repnz
out
mov
cpuid
mov
shl
sbb
jbe
in
jae
clc
dec
movl
enter
mov
bound
cmp
add
cmp
push
push
cmp
cmpsl
movsl
dec
mov
dec
nop
dec
xchg
lcall
orb
push
fwait
jae
or
mov
aaa
xchg
scas
rclb
xchg
test
dec
das
out
pushf
aad
divb
adc
sbb
imul
jno
and
insl
mov
in
aaa
iret
cmp
sub
in
push
js
movsl
cld
mov
cmp
ja
pop
nop
in
pushf
add
jmp
insb
cmp
daa
add
int3
mov
fnstcw
push
sahf
push
pop
pop
imul
ds
pop
and
stos
popf
and
xor
xchg
outsb
les
in
repz
imull
popa
fwait
xor
incl
fadds
cmp
sti
hlt
jecxz
jno
ljmp
lds
pop
jl
pop
mov
hlt
sub
loope
or
dec
dec
fucomp
std
and
sub
scas
iret
aaa
adcl
movhps
sbb
fiadds
or
push
cmpsl
lcall
movsl
fcomp
dec
inc
pop
sub
gs
adc
pop
nop
movsb
mov
or
icebp
push
arpl
fisubrs
xchg
or
fsubrl
adc
daa
mov
insb
push
das
imul
mov
sti
pop
outsb
cmp
ds
lods
lea
popa
jns
imul
or
sub
and
repz
cli
dec
mov
sahf
xor
sub
pop
mov
mov
sarl
test
pop
lret
jns
test
xor
movsb
mov
stos
pop
jl
push
inc
pop
outsb
push
pop
lahf
call
inc
ljmp
movsb
adc
into
pop
inc
out
and
mov
jne
movsl
fdivs
inc
cmc
mov
and
arpl
roll
icebp
int
jns
bound
cmp
out
js
push
mov
icebp
in
mov
pop
out
mov
xchg
push
lods
inc
sbb
testl
pusha
pop
mov
popa
and
pushf
lret
sbb
mov
mov
mov
push
fidivrl
lods
inc
enter
cltd
ret
push
adc
xchg
jnp
or
and
aaa
out
int3
xchg
xor
notl
mov
add
mov
add
stos
fsubs
imul
mov
push
out
or
inc
loopne
ficoml
sub
fldt
sub
movsb
mov
in
out
dec
fidivrl
and
mov
test
pop
popa
leave
sbb
mov
and
scas
push
mov
adc
cmpsb
or
jns
and
cltd
ret
gs
adc
push
push
cmpsl
and
xchg
and
cmpsl
inc
xchg
ficoms
test
push
xchg
out
xchg
jb
icebp
ds
insb
rcrl
dec
mov
pop
or
es
inc
mov
push
mov
and
jo
arpl
pop
xor
xchg
xchg
jl
jl
lods
xor
ds
mov
and
mov
adc
sbb
mov
mov
inc
xchg
daa
mov
jmp
dec
je
dec
sub
das
cmp
xchg
gs
fiaddl
lds
jg
sub
popa
in
adc
sbb
push
scas
xor
arpl
mov
push
sbb
mov
in
out
movsb
ljmp
daa
sub
insb
mov
mov
mov
repz
or
inc
lock
inc
xchg
sub
mov
xchg
cmpl
inc
push
push
sbb
inc
dec
mov
pop
push
xorl
add
sub
add
push
repz
sti
and
rcr
in
pop
cmpsl
lock
lods
mov
jbe
add
fists
cli
add
out
gs
stos
lcall
aaa
pushw
fldl
inc
xchg
mov
and
push
ficomps
js
orl
mov
inc
mov
aad
insb
mov
or
movsb
lods
stos
sbb
dec
mov
push
xor
cld
xchg
fidivs
xor
sbb
dec
lds
aaa
out
cltd
out
push
sbb
cmp
inc
fmull
fldt
dec
dec
push
dec
add
xchg
mov
in
pop
mov
mov
ljmp
cmpsl
fwait
mov
push
sub
fs
test
xchg
xchg
mov
in
mov
sbb
mov
xchg
loope
cmpsl
sbb
push
mov
cmpsl
aam
pop
pushf
lds
dec
imul
loop
push
sbb
aas
add
mov
mov
stc
std
xor
xchg
push
stos
xchg
jecxz
repnz
sub
movsl
das
cmp
rcrl
mov
test
push
mov
xchg
aam
push
and
mov
inc
xchg
pop
cltd
add
into
icebp
or
lds
shrb
xor
fwait
loope
jo
xchg
jne
mov
dec
fidivs
rcl
lret
insb
out
aas
cmpl
inc
mov
fidivrl
outsl
inc
mov
repz
fstl
cmpsb
mov
jnp
jnp
popa
and
lock
and
sub
inc
and
jo
mov
int
dec
inc
fxch
sahf
popf
add
push
loopne
mov
sbb
aas
notl
sub
jae
push
cmpsl
or
imul
xor
imul
cld
or
mov
movsl
repnz
in
jge
in
pop
jns
sub
xor
mov
add
nop
sub
dec
shll
mov
add
fadd
dec
pop
shll
iret
dec
sbb
or
test
imul
inc
inc
cmc
sub
sbb
mov
mov
in
ss
push
xchg
jmp
push
shll
or
add
divb
sub
cmp
xchg
xchg
into
push
sub
cs
mov
bound
lret
and
mov
cld
int
enter
jle
fdivrs
popf
mov
mov
cltd
dec
stos
mov
jo
adc
sub
push
in
or
int
or
push
inc
push
xchg
inc
int3
xchg
sti
dec
mov
mov
sbb
jb
dec
jg
pop
out
mov
stc
ret
in
sub
scas
sub
pop
std
sub
je
mov
jmp
ja
inc
out
mov
pop
sti
jmp
mov
push
mov
data16
fdivrs
outsb
arpl
jecxz
push
mov
and
aam
inc
jg
fdivl
and
mov
arpl
test
popa
dec
out
adc
push
iret
aaa
mov
mov
movsl
xor
cs
xchg
xchg
jno
mov
push
cmp
cld
adc
or
out
mov
movsb
add
inc
test
jnp
and
sahf
xor
inc
ret
mov
nop
scas
sub
cmp
ja
sub
pop
out
rorb
pop
je
cmp
jne
fucom
xchg
es
xchg
or
dec
sub
imul
mov
pop
mov
xor
mov
aad
bound
pop
ljmp
add
ds
sbb
daa
rcll
in
std
mov
inc
sbb
movsb
fistps
sbb
sub
sub
pop
xor
sub
push
add
ja
sbb
fstl
mov
and
test
fsubrl
mov
jb
adc
in
inc
mov
dec
or
push
stos
call
sahf
repz
lods
popf
push
adc
mov
fsubs
scas
inc
repnz
dec
pusha
fs
sub
movsb
movsl
push
ret
push
cld
fimuls
nop
cmp
sub
leave
mov
pusha
xchg
scas
adc
sahf
hlt
push
imul
ret
dec
clc
stos
xlat
ja
sub
movsb
mov
sbb
push
shrl
incl
testb
js
cli
shrb
jp
push
faddp
mov
and
push
push
dec
xchg
xchg
push
xor
jmp
push
bound
cmp
cmp
lahf
adc
jne
sbb
mov
loop
push
mov
pop
mov
insb
fidivrl
repz
testb
outsb
hlt
bound
leave
and
push
pop
setae
pushl
jnp
adc
push
popf
idivb
lret
js
and
sub
ret
adc
pop
sub
mov
xchg
jg
test
testl
xlat
out
add
mov
mov
mov
sbb
dec
ja
or
lea
mov
cmc
es
sahf
and
les
rcr
and
lret
push
sbb
stos
cmp
aas
pop
bound
adc
aas
imul
loop
ret
mov
jno
je
push
out
cmpl
mov
les
push
sbb
or
call
rcrb
fs
inc
jle
pop
jne
xchg
test
add
inc
add
lea
nop
insl
dec
pop
fstpt
add
push
cmp
insl
dec
pop
mulb
jmp
cmp
push
subl
mov
aas
and
stc
out
daa
lcall
mov
ds
mov
lcall
jo
aam
in
ljmp
and
dec
sbb
mov
mov
mov
cltd
mov
push
pop
es
adc
jno
ljmp
movsl
sti
divb
cld
inc
jb
add
andb
out
leave
jge
sub
movsl
daa
pop
mov
pop
je
movsb
mov
xchg
cmp
xchg
inc
jb
faddl
push
cs
pop
xor
sub
js
in
repz
adc
mov
cltd
push
xor
xchg
inc
imul
in
jmp
and
decb
jl
out
jle
lahf
gs
mov
imul
xor
out
sub
or
scas
dec
ficompl
mov
adc
push
mov
sub
jmp
pop
mov
imul
sub
jnp
mov
adc
std
jp
add
or
jecxz
cs
mov
jle
add
inc
test
mov
ret
cmp
mov
jmp
jmp
xchg
leave
aad
mov
cmp
repz
fstpl
add
fwait
and
scas
or
test
inc
adc
cld
out
daa
les
sub
lcall
push
or
es
and
repz
shrl
pop
cltd
rclb
mov
imul
cmp
in
push
in
imul
loopne
or
mov
mov
cmpb
pusha
xchg
ja
ljmp
jne
repz
mov
dec
xor
mov
sbb
xor
pop
ss
or
arpl
in
loop
xchg
mov
nop
jb
das
inc
in
jp
test
mov
xchg
cwtl
clc
fbld
push
sbb
xchg
or
adc
jbe
jmp
or
dec
aas
fld
cmpsb
sbb
dec
mov
roll
nop
inc
sarl
bound
call
cs
je
subl
xchg
xchg
or
test
xor
dec
repnz
outsl
mov
pop
lahf
adc
or
and
imul
test
loopne
xchg
bound
repnz
cmp
pop
scas
sub
pushf
xchg
xor
cmp
jle
je
gs
and
jg
sub
out
imul
aam
add
jge
add
and
movsb
xchg
or
hlt
pop
mov
in
cmc
fcoms
mov
cld
dec
jo
das
insl
add
push
int3
adc
leave
cmp
dec
sub
add
push
dec
inc
add
movsl
xchg
adc
testl
or
shlb
loope
add
xchg
adc
xchg
jmp
cli
cmc
push
test
fwait
cmp
sub
in
into
adc
push
movsb
test
mov
lret
push
or
sahf
sbbl
mov
mov
adc
adc
pop
cltd
push
jno
subb
test
das
sub
out
in
.byte
sbb
cmp
sahf
movsb
add
adc
push
int3
icebp
sbb
push
adc
sub
sbb
les
out
cmp
sub
sbbb
insb
pop
mov
mov
arpl
fwait
sbb
pop
cmp
imulb
sub
enter
push
inc
sti
mov
divl
inc
cmp
sub
jns
inc
adc
adc
adc
int3
push
sarb
cmp
sbb
in
and
test
inc
das
aam
test
pop
mov
gs
jne
adc
xchg
push
mov
std
ret
add
idivb
xchg
mov
fidivrl
dec
loope
inc
out
cmp
insl
jb
fsubl
lock
adc
incb
dec
mov
in
or
dec
push
in
cli
mov
mov
or
fadds
stos
inc
xor
sbb
push
pop
push
jge
dec
push
sbbl
xchg
and
fmull
add
push
fldl
jns
mov
mov
cwtl
sbb
mulb
adc
ret
inc
or
pop
add
roll
push
pop
clc
jnp
fsubrs
sub
or
test
mov
lods
mov
jle
add
andb
dec
dec
inc
push
cmpsb
and
jle
mov
xor
in
insb
push
shll
sbb
push
popa
xchg
inc
aas
sbb
in
dec
movsw
pop
mov
sbb
nop
rolb
add
mov
out
es
aaa
mov
fstps
mov
sbb
dec
or
lahf
ret
das
in
adc
mov
lret
or
jbe
mov
je
cmp
and
jne
xor
xchg
add
jae
pop
call
ja
pop
adc
xor
bound
cmc
sub
sub
in
ja
lcall
push
mov
jae
sbb
sbb
ss
daa
int
mov
pop
xor
scas
xor
jge
push
out
cmc
mov
loopne
scas
outsb
dec
int
popf
cmc
adc
fbld
xchg
ja
pop
loope
jg
add
inc
add
and
mov
andb
incl
pop
dec
cwtl
cmc
pop
sarb
in
rol
fbstp
sbb
mov
mov
imul
inc
daa
cmpsb
push
pop
add
jmp
mov
rcl
fs
fstpt
mov
scas
xchg
fmull
jmp
stos
sbb
sahf
mov
jle
push
jne
push
ja
xchg
scas
push
js
xchg
push
nop
mov
outsb
pusha
push
xor
inc
cmp
rcrb
xorl
cmpb
push
sbb
xor
mov
adc
dec
arpl
push
call
adc
lret
xlat
sti
dec
in
jne
jne
enter
test
outsl
lock
jp
or
add
adc
jecxz
lret
mov
push
out
xchg
lods
add
jbe
scas
daa
rcr
inc
nop
mov
mov
or
adc
in
push
mov
ljmp
push
mov
push
xchg
aas
pop
dec
mov
testb
pop
xor
sub
cmp
jmp
insl
pusha
sbb
xchg
scas
rcrl
pushf
inc
insl
fldenv
fsts
or
fwait
mov
imul
shlb
adc
push
jb
mov
lea
xor
in
insl
mov
cmp
fs
lcall
cmc
fidivl
fisubs
out
movsl
push
jo
and
inc
jge
cltd
xchg
sub
movlps
call
jge
pop
in
push
sub
jns
add
mov
pop
lret
mov
push
adc
stc
mov
push
jo
sbbl
pop
add
and
xchg
es
pop
cltd
movsb
jb
mov
lods
jle
lcall
daa
loope
cmpsb
add
add
mov
xor
ror
cmp
mov
out
add
loope
or
lret
jmp
loope
loope
xor
jne
loope
dec
add
jg
add
negb
sbb
inc
andl
jne
dec
movsl
inc
sets
dec
jmp
dec
out
jl
add
xor
and
fwait
mov
sub
je
push
ss
cmp
mov
imul
fs
mov
enter
push
jmp
mov
xor
shl
pushf
rorl
pop
movsb
fbld
imul
mov
cld
push
and
mov
sub
or
mov
inc
test
aas
sbb
xchg
mov
dec
int
lahf
sub
xor
aad
aam
lahf
xchg
cltd
jnp
js
dec
clc
xor
mov
test
scas
ret
add
cltd
out
adc
nop
clc
dec
mov
ret
jbe
loopne
mov
mov
scas
and
popa
lods
cmp
sbb
xchg
cmp
popf
nop
adc
mov
loope
and
loop
dec
scas
lods
orb
pusha
xor
or
bound
inc
jne
xchg
push
aam
outsl
lock
jg
add
aas
rcll
jnp
cltd
adc
or
xchg
or
pop
jg
add
rcll
faddl
sbb
jnp
jns
push
ja
adc
jno
jmp
cmp
xchg
add
jg
mov
jb
inc
iret
popa
adc
and
add
std
rclb
sub
ss
loopne
in
mov
mov
jmp
push
inc
pop
cmp
xchg
fisubs
lods
jmp
scas
push
mov
mov
mulb
push
mov
dec
sahf
nop
stos
out
xor
jne
daa
dec
rorl
sub
orb
mov
jle
xchg
xchg
inc
fld
cmc
fsubs
rclb
nop
test
xor
lds
dec
sahf
fisubs
or
into
mov
and
adcl
int3
nop
jbe
mov
and
fistps
cltd
push
add
add
pop
mov
aam
inc
and
jns
adc
and
fldl
jl
and
mov
cmpsl
pop
sub
jmp
adc
mov
sbb
iret
repnz
jo
cmp
xor
mov
movsl
pop
push
and
jne
inc
mov
dec
mov
scas
test
push
cmc
pusha
popa
and
fbstp
into
fidivs
sub
mov
clc
mov
bound
cli
aas
push
dec
addb
imul
out
rcrl
lock
xchg
ds
xchg
lods
sbb
mov
mov
push
and
loop
stos
push
imul
shlb
jecxz
lret
push
jl
int3
stos
sarl
or
inc
fistpll
aas
jnp
xor
cmc
xlat
mov
mov
in
negb
lods
leave
lock
sbb
cmp
sbb
jg
aas
jecxz
and
add
mov
jbe
stc
sub
fcmovne
push
mov
jb
push
or
mov
mov
outsb
adc
test
xor
push
pop
imul
pop
loop
push
jnp
or
xor
test
mov
aaa
push
stos
ljmp
iret
pop
push
lea
ss
andl
xchg
movsb
aam
ss
cmpsl
sub
shrl
sti
addr16
aaa
test
xor
popa
mov
mov
mov
cmp
mov
mov
adc
mov
jmp
xchg
outsb
sub
lods
jmp
icebp
rolb
jge
jmp
pusha
xchg
iret
mov
fcmovb
push
or
ret
push
sbb
cmpsl
pop
lods
js
xor
imul
and
fmulp
aam
notb
fnsave
repnz
pop
repz
ja
adc
stc
push
int3
mov
push
xchg
add
cmp
stos
movsl
mov
notb
xor
mov
scas
fs
and
imul
sub
or
data16
pushf
inc
mov
scas
dec
dec
jp
stos
outsl
and
clc
cmp
xchg
jnp
xchg
fld1
fimull
fimuls
mov
lods
inc
or
dec
imul
mov
ficoml
dec
add
adc
cmp
popa
mov
adc
adc
jnp
inc
js
and
jg
mov
xchg
stc
xor
mov
xchg
rcrb
shlb
xchg
sub
stc
pop
mov
push
mov
sbb
iret
xor
out
sbb
jecxz
mov
ljmp
ret
dec
mov
ret
sbb
jno
inc
mov
add
push
je
rcrb
rcrb
mov
sbbb
xchg
bound
xchg
mov
xchg
arpl
jo
test
jno
mov
jmp
adc
and
inc
mov
lea
inc
cmp
dec
mov
nop
mov
int3
and
lea
xchg
das
xor
xchg
pop
aam
push
test
mov
dec
lds
lahf
je
leave
lds
out
or
push
xor
jmp
mov
mov
test
jae
sbb
addr16
rorb
pop
pop
xlat
add
cmpsb
add
fnstsw
xor
adc
mov
mov
test
and
lods
sbb
jg
push
imul
ja
insl
xor
xchg
and
sub
add
adc
mov
adc
inc
ret
dec
pusha
negl
mov
lods
mov
jbe
enter
and
and
jbe
mov
add
mov
clc
mov
xchg
pop
inc
xchg
adc
fdivs
nop
mov
mov
jne
negl
scas
mov
pop
push
clc
ja
aas
cmp
lock
add
sub
clc
mov
lahf
push
cmp
nop
inc
mov
jge
mov
out
or
push
mov
repz
inc
push
enter
push
push
scas
aam
gs
xchg
pop
jns
cmpb
out
bound
out
mov
xchg
push
fs
repz
push
sti
mov
mov
out
enter
mov
push
call
adc
in
xchg
repnz
dec
sahf
xor
mov
fisubl
rcrl
fisttpl
inc
sbb
push
sub
adc
cmp
addr16
xor
sahf
jg
dec
jb
xor
test
testb
pusha
xchg
jo
jle
inc
mov
cmp
push
mov
push
sbb
push
push
xchg
rorl
ret
and
cs
adc
in
jne
xor
jno
das
xor
xor
adc
addr16
mov
out
xor
mov
add
in
leave
adc
dec
and
adc
pop
sti
les
or
dec
cmp
xchg
lods
sahf
push
fdiv
or
cmp
inc
rol
push
test
arpl
xor
push
rol
adc
les
mov
sub
nop
outsb
mov
jns
push
cs
or
jns
bswap
mov
je
add
push
inc
jg
fsubrl
and
and
test
add
sub
xor
cli
inc
or
adc
das
and
inc
or
movsb
pop
popf
popf
jle,pt
scas
xor
pop
push
arpl
xor
mov
xor
mov
dec
mov
push
dec
popa
call
shlw
sbb
dec
in
sbbb
hlt
sbb
lock
ret
cmp
aad
lcall
jg
ss
mov
pop
fbstp
jbe
inc
jge
testl
shlb
popa
mov
sub
leave
mov
ficompl
pop
rclb
jl
add
push
cmpb
imul
shl
xchg
mov
sbb
adc
add
daa
shll
rcll
mov
insl
scas
fimull
bound
out
pop
lds
insl
add
fisubs
sarb
outsb
out
popf
out
mov
add
mov
insb
xor
dec
push
jmp
mov
iret
mov
movsl
test
add
mov
sbb
lds
inc
pop
ret
mov
ss
paddusw
sub
add
lods
popa
ds
ret
dec
into
xchg
mov
pop
stos
nop
pop
decl
jb
jmp
and
xchg
cmp
mov
pop
xor
mov
movsb
repz
insb
lds
jbe
cmp
jae
ljmp
cld
jecxz
add
xchg
pop
ss
mov
mov
jne
lds
fnsave
xor
mov
jge
stos
sub
pop
sbb
mov
into
ret
mov
add
lret
push
pop
call
mov
data16
push
dec
notb
repz
out
sbb
into
sbb
mov
stc
cmp
add
lret
lret
xchg
les
vmovaps
xlat
lea
xor
add
popa
lock
jle
xor
jle
insl
jns
gs
mov
sub
ds
jl
lret
mov
jecxz
cld
fistpl
loopne
out
or
test
hlt
xor
adc
or
cmp
pop
cmpl
sbb
stc
jmp
iret
jp
inc
cmp
mov
xchg
pop
mov
mov
loop
sbb
test
sbb
xchg
subb
popa
stc
ja
ljmp
cltd
inc
in
add
lcall
dec
inc
sbb
and
jo
aas
jmp
jne
xchg
cwtl
and
adc
bound
shr
fsts
adc
in
fistpl
mov
repz
and
and
sbb
xchg
jle
nop
cmpxchg
loope
jp
or
lret
nop
ret
in
xor
call
rcrl
xor
and
xlat
stc
inc
adc
test
rorb
mov
test
sbb
lods
xchg
lds
addr16
arpl
sbb
xor
iret
mov
cld
inc
xor
cs
and
mov
fs
mov
dec
scas
addb
js
lock
and
push
pop
push
xchg
jae
cld
cli
or
xor
jne
out
adcl
cld
aad
xchg
dec
inc
add
push
dec
dec
nopl
mov
test
and
sbb
js
dec
inc
adc
add
call
loope
xchg
pop
sub
mov
mov
int3
jnp
mov
cmp
fnsave
add
fdivl
sti
mov
pop
int3
jmp
push
mov
mov
in
arpl
or
xor
fwait
stos
je
das
pop
pop
loop
xchg
inc
jg
mov
push
push
and
dec
out
sahf
mov
push
pop
cmpb
pop
and
jns
inc
addl
rcll
fidivrs
sbb
mulb
icebp
fdivr
jae
cmpsl
fdivp
adc
cmpsl
pop
int
dec
adc
inc
sub
loop
dec
cwtl
mov
mov
in
lret
repz
addr16
movsb
rcr
add
fcompl
jb
mov
faddp
push
mov
mov
mov
xchg
ret
xchg
lcall
dec
and
pusha
inc
aad
das
add
cmpsb
scas
lods
in
negb
jb
repz
stos
test
or
pop
inc
mov
pop
pop
in
mov
inc
fwait
push
imul
or
pop
ficoml
inc
jl
xchg
scas
adc
mov
clc
arpl
andl
push
fcompl
fbstp
mov
xlat
fcoml
push
inc
icebp
daa
pushf
add
lds
or
mov
test
dec
out
cmp
jns
sbb
loopne
scas
xor
or
and
dec
xor
adc
jg
cs
sub
les
xchg
insl
jno
mov
addl
sbb
mov
loopnew
mov
dec
aaa
in
fmuls
movhps
dec
sub
test
jno
inc
xlat
fnsave
inc
repnz
sub
fiadds
push
xor
sub
addr16
popf
arpl
jae
jge
mov
stc
aam
bound
pop
cmp
jl
int3
add
push
sub
push
mov
testl
jl
movsl
loope
xor
lahf
loope
or
mov
test
jecxz
add
cmp
adc
jb
xor
xlat
or
mov
cmp
mov
or
cli
mov
nop
mov
imul
adc
shll
stos
mov
lock
add
clc
rcl
adc
adc
mov
jo
insb
test
scas
or
mov
push
pop
insb
inc
bound
or
leave
cwtl
jb
stc
cs
arpl
mov
sahf
xchg
push
pop
mov
in
mov
daa
push
ja
popf
cmp
inc
xchg
dec
je
sub
mov
mov
cs
jmp
pop
add
add
imull
js
push
jne
leave
mov
xchg
inc
mov
iret
inc
push
test
jno
fsubs
mov
mov
sub
jp
fnstcw
int3
mov
sub
xchg
js
subb
out
nop
clc
push
sub
mov
iret
pusha
inc
lret
in
popa
ret
mov
push
mov
in
dec
inc
xchg
pop
pop
push
dec
mov
pop
sar
or
jae
.byte
loope
.byte
and
add
adc
sbb
mov
mov
xchg
scas
jp
mov
pop
push
and
dec
jae
sbb
inc
cmp
pusha
dec
in
jbe
popa
ds
push
push
addb
cmp
jno
dec
ljmp
xor
test
gs
iret
xchg
dec
cmp
push
jg
xlat
jns
inc
or
imul
xor
push
pop
test
roll
ret
mov
movsl
clc
push
jmp
cmpxchg
jmp
mov
out
enter
lds
pop
cmp
mov
pop
push
fstl
clc
inc
push
mov
xor
in
jne
cltd
xchg
xor
aaa
inc
xor
loope
push
mov
ja
aam
add
jnp
push
loopne
add
xor
repnz
fidivrl
outsb
and
cmovs
sub
push
nop
js
out
arpl
gs
add
inc
outsb
mov
dec
add
sbb
mov
xlat
mov
jo
loop
inc
sbb
cmp
repnz
les
ds
push
stc
push
jbe
pop
rclb
ljmp
mov
jmp
mov
xchg
fistpll
out
dec
sahf
test
lea
xchg
test
lea
dec
loope
ss
mov
sbb
jecxz
inc
jnp
les
loop
adc
insb
mov
sbbl
pusha
in
int3
inc
mov
repz
pop
dec
adc
xchg
call
cmp
or
icebp
popa
cmp
shlb
shlb
xchg
loopne,pt
push
push
nop
sbb
lods
sbb
pop
mov
xchg
shrl
outsl
push
in
or
call
pop
adc
bound
dec
cld
cmc
fstps
inc
xor
cmpsb
icebp
in
inc
push
ret
cmp
dec
jle
pop
inc
pop
jns
or
pop
sub
push
nop
cwtl
test
sub
add
mov
loop
xor
repnz
lret
insb
mov
out
dec
lret
rclb
and
pop
pop
sub
mov
mov
imul
stos
in
notl
ja
loope
insl
jb
sarb
insb
ds
pop
mov
dec
mov
mov
push
es
cmpsb
mov
pushf
add
ja
jno
inc
pop
pop
fmulp
mov
and
ret
add
xchg
pop
loopne
adc
mov
dec
pop
loop
clc
inc
lret
jns
dec
dec
cmp
cs
sub
fsubs
out
xchg
mov
mov
push
or
jbe
dec
ljmp
xchg
jg
pop
iret
jmp
fiaddl
or
sbb
fisubrs
lret
in
pop
pusha
int3
inc
mov
daa
iret
fwait
aam
jle
cli
mov
out
mov
das
sbb
push
mov
lds
cmpsb
ss
dec
push
out
push
icebp
cmp
cmpsb
jg
xlat
sahf
lcall
cli
into
xor
and
jecxz
dec
and
mov
mov
xchg
jbe
shl
mov
mov
outsl
pop
cmc
or
pop
pop
xchg
sbb
js
fcomp
mov
xchg
adc
mov
pushf
jecxz
inc
aas
push
push
inc
inc
pop
lcall
lret
sub
cmp
sbb
lds
mov
subb
adc
pop
int3
mov
jp
xor
cmp
push
shrl
pop
push
arpl
pop
ret
mov
lds
cld
movsl
mov
sti
lcall
out
int3
sub
xor
les
xchg
mov
popf
stos
inc
adc
out
cmpl
adc
neg
pop
lret
xchg
fidivrs
xchg
mov
dec
fwait
testl
addb
jns
ljmp
mov
fstpl
xlat
pushf
rsqrtps
in
lock
jmp
fdivs
mov
sbb
popf
das
out
cmp
sti
jns
jo
out
sbb
sbb
stos
sbb
arpl
xchg
xchg
js
inc
test
xor
mov
fwait
imul
push
sbb
ficoms
shll
test
jo
sub
cli
inc
jle
fisttpll
and
xchg
sub
mov
popf
aaa
aas
aaa
bnd
and
nop
mov
jp
cli
pop
aas
xor
outsw
push
leave
jmp
sbb
in
daa
test
fwait
js
dec
js
xor
push
mov
pop
stc
adc
into
imul
sbbb
cmc
and
enter
sti
sbb
call
loop
pop
outsl
inc
xchg
sbb
adc
and
loope
jecxz
lods
mov
and
test
mov
aad
fbstp
lret
jae
out
in
adc
out
cmpsb
xchg
xchg
jbe
mov
xor
paddq
stos
jns
int
enter
adc
xchg
lea
stos
inc
push
mov
icebp
jl
jbe
sbb
and
movsl
mov
pop
imulb
mov
lds
cmpsl
sbb
ljmp
mov
pop
pop
cmp
lret
cmp
sub
xlat
xchg
push
insb
mov
in
mov
scas
or
aaa
push
sbb
shlb
sbbb
das
mov
ja
fildl
inc
pop
add
add
xlat
sbb
ljmp
adc
push
cmp
or
inc
add
and
test
lock
outsl
loop
mov
int3
aas
stos
aam
jmp
inc
fwait
clc
or
ret
pop
inc
fldenv
out
mov
int3
mov
jae
in
cmp
iret
dec
mov
fnstsw
pop
iret
or
sbb
dec
dec
xchg
jne
clc
ret
push
clc
pop
fidivs
add
shr
fidivs
cli
fdivl
jb
fstl
in
ds
push
mov
pop
xchg
mov
pop
rcll
test
mov
cwtl
test
and
ss
pop
and
push
inc
xor
js
iret
lods
add
jecxz
cmova
leave
pop
dec
popf
xchg
xchg
test
aam
adc
pop
adc
fsubs
add
adc
sub
or
out
xor
test
mov
jne
ljmp
rdmsr
and
in
cmp
mov
ret
cmp
jmp
jae
xor
inc
add
insb
mov
lret
lret
fsubr
or
mov
ret
sub
push
test
insl
adc
cmp
repnz
mov
push
add
inc
mov
push
mov
lahf
das
inc
ja
enter
outsl
sbb
xor
sub
inc
dec
push
dec
xor
push
popf
inc
movsl
js
into
lds
int3
enter
popa
lds
movsl
push
icebp
push
pusha
stos
inc
sub
jne
lret
add
cmpsb
sbb
mov
scas
insb
lcall
out
das
xor
shrl
stos
cld
adc
cmpsl
sub
mov
xchg
inc
inc
jmp
shlb
fadds
mov
pop
inc
insl
add
add
stos
add
fistpll
jo
xor
jne
xchg
daa
imul
pusha
leave
pusha
xor
in
clc
jbe
popa
in
xchg
leave
pop
gs
ret
loopne
sub
sub
insb
mov
idiv
jo
pop
loope
lods
loope
adc
aad
sbb
pop
jl
fcmove
test
xchg
aas
add
xorb
cmp
call
les
nop
scas
div
les
lret
sbb
imul
xor
lea
sbb
loop
shl
mov
push
daa
xchg
insl
and
mov
xor
jle
mov
or
addr16
ja
imul
cmp
sbb
fisubrs
add
hlt
shrb
push
or
ljmp
xlat
ja
dec
xchg
divl
mov
push
test
push
addb
divl
cmp
lea
jae
mov
popa
pop
xchg
cld
mov
add
mov
adc
mov
lods
loope
lods
or
inc
push
sub
rorb
adc
mov
push
insb
lcall
ret
mov
mov
outsl
jge
call
dec
push
mov
das
loopne
adcl
notb
rcr
or
sarl
sub
add
jp
dec
aad
sbb
outsb
filds
and
cli
shlb
push
pusha
dec
iret
pushl
and
push
inc
mov
or
ficompl
dec
lods
fcomip
mov
test
scas
jp
iret
adc
insl
sahf
stc
sub
fisubs
xorl
jnp
inc
test
lds
bound
sti
insl
mov
add
movsb
outsl
mov
ss
add
insb
loop
popf
cmp
imul
in
aam
fstps
hlt
add
ret
bound
enter
test
xorb
and
push
mov
cmovb
fimull
and
pop
jne
jb
cli
mov
cmpsb
xchg
jg
or
dec
fidivs
fstps
rol
stos
jge
data16
lret
aad
sti
lahf
push
add
testl
xor
dec
cli
mov
pop
or
sbb
cmp
mov
add
out
into
cmp
xchg
jg
mov
fdivrl
adc
or
pop
push
adc
pop
repz
aas
push
imul
adc
pop
fs
stc
pop
rorb
leave
dec
sbb
sbb
cmpsb
dec
inc
data16
test
and
clc
sbbb
in
push
jbe
popa
dec
sub
and
cmp
into
mov
pop
js
add
xor
cmp
push
mov
mov
push
sbb
jbe
add
push
adc
lods
push
mov
ret
cli
fsubs
imul
inc
xor
nop
scas
sbb
jno
out
sub
pop
dec
das
xchg
inc
pop
mov
lds
dec
ss
pop
ja
notl
xor
cmpsb
out
sahf
xchg
hlt
or
adc
dec
decb
icebp
mov
test
mov
ds
hlt
add
xorl
sub
adc
out
cltd
push
xor
cmp
fmulp
xchg
cmp
outsl
mov
add
dec
nop
leave
std
aam
jl
mov
jmp
sar
add
ret
mov
test
dec
push
mov
repz
sbb
fists
in
out
ds
dec
jecxz
push
pop
push
outsl
pop
xor
and
lret
lcall
pop
sbb
adc
scas
add
cmp
xchg
ljmp
jecxz
fdivrl
jecxz
and
test
inc
aas
repz
sbb
scas
insl
and
pop
mov
stos
fucomi
es
cmp
add
push
sub
jnp
nop
xchg
ss
call
into
arpl
outsl
stc
sub
mov
aad
rclb
test
subb
scas
stos
jle
rcrl
pop
lods
sahf
scas
dec
mov
ds
mov
mov
mov
in
adc
stos
stos
shll
push
outsl
xchg
pop
loop
ja
xchg
mov
into
xchg
mov
adc
rorl
and
movsb
sbb
mov
mov
out
adc
push
daa
xchg
cmp
fldcw
ret
bnd
nop
repz
jl
in
jno
movb
mov
cmp
or
mov
aaa
data16
mov
out
dec
mov
jb
ror
pop
js
push
rclb
std
sbb
add
jmp
adc
push
ja
push
pop
lods
pop
in
in
rcrb
push
inc
sbb
lock
std
fwait
push
pushf
fs
cmpsb
pop
push
dec
idiv
in
xchg
mov
push
mov
or
mov
lcall
dec
xchg
cltd
add
cmp
xor
inc
mov
cmp
inc
out
dec
rcl
insb
xor
dec
push
inc
adc
lods
mov
xchg
cmp
rorb
int3
das
or
nop
sub
jg
jno
std
orl
out
sub
loope
int
mov
fs
ljmp
sbb
rcrb
mov
push
cs
sbb
push
js
xchg
stos
mov
dec
push
cmp
fwait
and
jno
cmpsl
mov
adc
adc
aaa
pop
mov
test
or
addr16
jmp
fcmovu
addr16
enter
cmpsb
xor
jg
int
pop
insb
push
mov
fdivrl
movsb
repz
std
ss
xchg
es
cmpsb
inc
pop
mov
mov
jle
das
and
sbb
sbbl
mov
inc
jmp
cmpsl
mov
in
test
out
adc
xlat
mov
ret
sbb
add
repz
loop
sbb
fsubp
fwait
cli
jns
insl
movsb
outsb
mov
pop
jno
xchg
adc
lea
pop
scas
push
sti
jle
iret
stc
add
sahf
adc
imul
outsb
or
mov
mov
lock
dec
callw
cmp
mov
out
mov
rcll
sub
or
pop
xor
or
ds
xchg
ja
cmpsb
cmp
xchg
test
pop
ljmp
or
movsb
pop
mov
int
xchg
testl
pop
mov
pop
adc
pushf
adc
rclb
fsubs
cld
push
test
pop
dec
sti
mov
inc
push
insl
rorb
scas
inc
js
cld
mov
lahf
popf
dec
aas
inc
mov
test
call
xchg
adcb
leave
fdivr
push
andl
or
mov
mov
xchg
sbb
shrb
std
mov
add
pop
sub
pushf
sub
pop
push
adc
adc
imul
dec
mov
xchg
movl
enter
ss
clc
dec
popa
out
test
ret
imul
cwtl
cmpsl
mulb
dec
mov
mov
dec
popf
movsl
les
adc
andb
pop
into
loop
mov
mov
adc
xor
xchg
inc
pop
and
clc
adc
int3
aam
adc
push
in
dec
jo
rclb
jl
std
lds
fwait
out
sbb
cmp
dec
sub
mov
xor
sub
lahf
xor
mov
cmp
cltd
sarb
inc
adc
add
js
and
hlt
daa
orb
cli
nop
imul
xchg
xor
mov
push
js
xor
xlat
inc
xchg
cmpsl
into
hlt
or
repnz
aad
je
rolb
jmp
push
sbb
lods
in
push
dec
xchg
mov
loope
cld
fwait
popa
jp
insl
aaa
mov
sub
mov
dec
je
ds
sbb
xchg
mov
mov
sbb
xor
mov
nop
rorb
xor
xor
pop
in
or
and
sahf
sub
repz
jecxz
xlat
fs
push
out
pop
shl
inc
popa
nop
mov
cmpsb
xchg
das
aad
sbbl
stos
insb
mov
xchg
push
adc
lret
pushf
fmuls
iret
xor
popf
addr16
sbb
and
out
lods
pop
and
rorb
test
or
push
loop
dec
pop
movsb
jmp
push
stos
out
jp
or
stos
imul
xor
movsb
sbb
cmp
mov
add
iret
pop
lea
mov
inc
push
or
pop
inc
inc
pop
sub
bound
mov
jg
fdivrs
sbb
fnsave
jno
loopne
mov
jbe
popa
ds
pop
lea
jns
enter
arpl
sbb
daa
cmp
lods
or
dec
cmp
mov
in
sub
inc
shll
mov
sub
int3
push
sar
add
pop
clc
lea
jno
or
outsl
jge
push
int3
fbld
sub
sbb
cmc
sbb
pop
xor
imul
bound
fs
das
jp
test
clc
or
call
sub
jmp
aas
cmp
ror
gs
in
jmp
repz
mov
cmpsl
getsec
aaa
stos
xchg
adc
movsl
lcall
xchg
mov
xchg
pusha
dec
mov
add
sbb
scas
cmpsl
inc
inc
fdivs
popf
insl
inc
xor
cld
lret
pop
push
add
imul
into
and
int3
xor
and
sbb
icebp
and
outsb
mov
call
lcall
fldl
dec
xchg
mov
mov
adc
xchg
adc
sub
mov
pop
jmp
adc
ja
scas
mov
popf
sub
outsl
ja
cmp
xlat
mov
sub
ljmp
ljmp
pushf
mov
jmp
in
cmp
xchg
icebp
cmp
adc
mov
push
cmp
and
jno,pt
cmp
outsb
bound
stos
nop
mov
jecxz
sarl
jp
jno
sub
ljmp
sbb
mov
sarl
arpl
mov
add
mov
cwtl
sti
pop
fcmovnu
cmp
adcl
dec
leave
jge
scas
jnp
mov
hlt
iret
xchg
dec
mov
aaa
fadds
dec
loopne
xor
xlat
int3
aam
gs
aam
jne
ret
push
fstps
push
inc
mov
dec
adc
xor
xor
or
out
add
test
pushf
mov
and
cmp
mov
enter
imul
mov
pop
aad
sbb
xchg
loopne
or
mov
or
push
jp
out
add
jp
add
mov
cwtl
mov
sbb
cld
mov
jo
enter
mov
mov
cmpsb
jmp
jb
jecxz
movsl
xchg
mov
sub
push
jle
rcr
lret
mov
or
ss
outsl
testl
sbb
sub
sub
mov
aas
loopne
ja
aam
pop
inc
ficoms
sub
rorb
xchg
mov
inc
pop
cmp
jbe
imul
xor
scas
mov
inc
mov
ret
shl
or
int3
xchg
sub
xor
xchg
xchg
nop
push
insl
sub
or
test
or
cwtl
xacquire
ret
jp
xor
or
mov
add
push
and
stc
cli
adc
push
std
out
add
add
jle
mov
mov
mov
adc
aas
adc
sbb
in
sub
mov
dec
push
push
ds
dec
popf
mov
cmp
and
subl
jmp
push
nop
mov
inc
jae
cmpsl
or
orl
xchg
dec
push
or
lahf
cwtl
stos
and
lret
faddl
enter
sub
imul
sub
mov
mov
sub
push
hlt
stos
add
je
mov
lret
mov
gs
imul
lock
fsts
lea
xchg
cltd
ljmp
pop
lret
mov
lcall
loopne
imul
lsl
push
icebp
testl
push
inc
fstpt
push
mov
sbb
sbb
jnp
rolw
hlt
jo
dec
inc
cmp
lahf
mov
cli
pop
mov
aam
mov
filds
cmc
out
add
mov
adc
jbe
rcr
inc
mov
lahf
xchg
out
ds
shlb
cwtl
mov
scas
mov
stos
cwtl
sbb
lret
cmp
mov
cmc
in
rol
jg
jnp
push
ja
mov
and
sub
out
lods
fcompl
ret
jns
sbb
subb
xor
jl
ret
inc
jns
push
pushw
mov
test
popf
and
loop
test
movsl
clc
xor
sub
clc
daa
jmp
adc
lahf
cmp
cwtl
or
dec
mov
mov
pop
jmp
in
pop
dec
shrl
mov
jnp
ss
sub
jb
jge
sbb
jp
mov
inc
bswap
shll
outsl
rcl
cmp
sbb
insb
loope
cmp
test
jg
xchg
outsl
cmp
lock
jp
add
jb
repnz
mov
adc
pushf
in
sarb
lds
lock
lea
in
ret
in
mov
ficompl
movnti
loopne
jbe
aad
dec
mov
andl
dec
push
mov
cli
cmp
xchg
jge
orl
or
outsl
pop
mov
xor
dec
sub
loope
cltd
xchg
aam
cmp
dec
int3
push
shl
xor
in
adcl
jne
push
mov
add
jmp
jnp
mov
mov
jne
lods
arpl
jl
data16
cmp
push
push
xor
fiadds
movsl
sbb
cmp
mov
ds
lods
cmc
pop
mov
pop
mov
adc
jge
push
andl
lock
in
mov
in
cmc
inc
insb
mov
cmp
pop
lahf
fimuls
jns
xchg
clc
sub
into
loop
cmp
imul
and
fwait
mov
loopne
out
mov
push
stc
sub
cmp
call
fiaddl
jecxz
add
jb
mov
and
adc
int
scas
loope
repnz
xor
shlb
gs
pop
xor
iret
out
mov
or
clc
or
pop
add
pop
mov
pop
aam
pusha
mov
adc
lcall
dec
xchg
mov
movsl
fcomps
stos
mov
inc
pusha
xor
out
pop
and
or
lds
daa
mov
sbb
in
mov
outsb
adc
popf
jno
pop
icebp
inc
xor
adc
and
pusha
in
xchg
cmp
test
inc
pop
pop
xchg
pop
div
pop
pop
dec
push
sub
sbb
mov
movsl
pushf
jns
mov
lock
imul
sub
jmp
xor
pusha
in
pop
pusha
mov
dec
popa
hlt
and
cmp
inc
dec
mov
mov
popf
mov
add
cmp
cmp
dec
mov
dec
jo
lret
dec
loopne
xor
cmpsb
mov
and
mov
xchg
jbe
lds
test
mov
cli
adc
mov
bound
xchg
fnstcw
clc
adc
out
testb
adc
jnp
clc
add
fs
stc
andl
inc
int3
hlt
pop
call
movsl
cmp
xchg
pushf
mov
scas
xchg
shl
pop
lret
test
add
pop
popf
repz
pop
stos
jnp
shlb
lret
rcrb
fsub
add
push
mov
pop
int
adc
lret
sbb
mov
cltd
fsts
pop
outsl
xorb
mov
jl
imul
lea
mov
movswl
imul
call
aaa
sub
jb
adc
pop
push
ds
ret
test
push
adc
xchg
jecxz
divb
pop
jne
push
and
push
pop
outsl
mov
inc
in
mov
sbb
cli
insl
jg
arpl
mov
shlb
lea
daa
push
mov
sub
data16
movsl
xor
push
push
fcoml
cltd
shlb
test
ljmp
nop
fwait
xchg
dec
imul
mov
call
jp
and
xchg
in
or
xchg
mov
mov
gs
sbb
sahf
push
add
push
mov
aam
jp
lock
shlb
xor
daa
and
jnp
das
dec
jp
pusha
mov
or
xor
adc
mov
jg
or
sarl
pop
xor
jo
sbb
adc
ficoms
xor
xchg
enter
loop
rclb
push
sub
xchg
mov
loop
out
jne
cmp
ds
mov
hlt
loop
enter
arpl
cmp
imul
mov
pop
mov
cmp
repnz
jb
xchg
and
push
cmp
push
pusha
mov
aas
fisttps
inc
sbb
fwait
in
jmp
mov
aas
adc
cmpsl
repz
adc
xor
repnz
inc
fdivrl
push
mov
test
out
or
sbb
shlb
fcmovbe
cmpsb
out
and
cmp
aam
iret
cld
sub
cmp
repz
sub
cmp
imul
and
lds
lods
fs
dec
imul
jno
jo
mov
mov
int3
add
push
int
loop
xchg
divb
out
cmc
test
mov
test
rclb
mov
jnp
pusha
ds
loopne
in
jbe
cmpsb
push
fistl
scas
mov
mov
push
sub
insb
or
mov
inc
js
fs
push
out
and
xchg
push
and
fs
mulb
ja
das
outsb
lret
js
cltd
sbb
icebp
jns
or
jo
popf
push
mov
or
mov
dec
mov
cmp
rcrb
imul
popa
cld
imul
iret
insl
dec
cli
sbb
lea
pop
mov
push
sbb
add
cmp
cmpl
push
mov
int3
adc
cwtl
jl
xchg
add
push
call
push
add
pop
stc
mov
stc
fisttpl
in
jecxz
rcrl
aas
int
inc
add
push
mov
aas
inc
mov
mov
stos
xor
or
leave
mov
lds
fldl2t
xor
dec
fwait
jb
insb
adc
ss
pushl
xchg
or
inc
icebp
jbe
jle
cmp
iret
mov
dec
xor
sub
jae
or
mov
push
das
mov
and
cmp
push
or
outsb
outsb
loope
inc
std
mov
arpl
inc
in
pop
inc
vorps
xor
ds
mov
cmp
cmp
addr16
aas
jecxz
jmp
out
call
push
call
lods
mov
dec
test
mov
inc
pop
push
xchg
push
jmp
adc
add
leave
dec
cmp
pop
inc
mov
insl
add
les
insb
stos
xor
jg
lds
sbb
fmuls
in
mov
xchg
cmpsl
fstpl
push
push
push
les
sbb
pop
mov
clc
sbb
cwtl
sbb
lret
mov
fcompl
jp
xor
sahf
adc
xchg
test
sbb
lock
inc
sahf
les
xchg
xor
xor
add
or
scas
adc
andnps
shrb
adc
loop
push
sub
scas
mov
pop
jp
adc
mov
sub
subb
es
add
xor
iret
xchg
sbb
pop
movsl
addr16
repnz
or
mov
scas
enter
shlb
cltd
bswap
adc
enter
into
fdivrl
popf
cwtl
jecxz
lea
inc
sub
repnz
sub
sbb
cmp
repz
adc
out
stos
lds
jbe
pusha
dec
imul
cmp
fstpl
dec
mov
mov
xchg
cmp
or
push
lahf
adc
ret
xchg
hlt
int
out
push
sahf
sub
ss
xchg
cld
mov
shrl
add
leave
or
addr16
or
dec
xchg
ret
sub
cmp
les
or
in
pop
cmpsl
jp
enter
orl
sbb
mov
nop
or
adc
aam
cmpsb
in
and
lock
mov
ret
std
dec
xchg
scas
sbb
sbb
icebp
fistpl
push
idivl
and
loop
dec
jbe
cmc
int
cld
test
adc
pop
mov
out
mov
stos
mov
and
xchg
adc
out
pop
add
movsb
insl
dec
mov
jg
adc
jne
jne
push
or
data16
mov
dec
ds
cltd
bound
cltd
sub
push
push
daa
inc
sbb
pop
test
popa
adc
jp
std
or
push
repz
push
sbb
les
xchg
pop
pop
lock
mov
or
pop
sub
fcmovbe
cmp
cli
pop
pop
inc
inc
aaa
lock
pop
push
jbe
or
cmp
cld
cmp
jo
int3
inc
lock
mov
xor
stc
scas
lcall
xor
jbe
hlt
ret
cmp
jp
xchg
aad
sbbl
addl
ret
nop
add
mov
sbb
mov
sub
jecxz
jg
cld
lahf
sub
inc
xchg
pop
sbb
and
xchg
sbb
pop
and
gs
jl
test
add
je
xorl
mov
dec
std
mov
fwait
pop
popa
clc
pop
mov
inc
add
inc
jge
push
mov
mov
pop
jle
pop
out
unpckhps
and
dec
xchg
or
or
test
lret
push
xor
decl
call
xor
xor
inc
rorb
je
je
lock
sbbb
daa
rorl
lret
lods
mov
std
lock
mov
iret
mov
pop
add
fiaddl
xor
stos
rolb
dec
and
cwtl
jp
test
stos
mov
mov
inc
int
push
or
int
inc
int3
push
sahf
mov
xor
aaa
mov
jl
fldenv
dec
push
inc
leave
mov
subl
pusha
adc
dec
in
clc
sar
mov
jle
mov
sbb
imul
and
lret
ljmp
adc
dec
cmp
sub
insl
sbb
inc
fst
rcll
jge
mov
pop
xchg
adc
jo
mov
jmp
cmp
mov
jge
aas
iret
lahf
mov
outsb
pusha
xor
jmp
mov
sbb
negl
adc
fwait
inc
push
shl
sub
xchg
out
pusha
sti
mov
stos
aaa
stos
pop
insl
dec
dec
pop
mov
mov
and
adc
adc
or
pop
jl
sysenter
scas
mov
out
sub
outsl
imul
loope,pn
add
jle
xchg
enter
enter
cmpsl
sbb
pop
add
cmpsb
aas
xchg
repnz
test
xor
movsb
rcrl
mov
inc
jle
jns
push
sub
aam
out
jbe
and
fwait
dec
sub
jle
lods
sub
cmp
je
dec
fwait
jle
in
je
clc
sbb
iret
inc
mov
leave
pop
test
adc
cmp
pop
out
cmc
add
pop
xchg
jl
cmp
mov
adc
enter
jl
shrb
mov
cld
dec
inc
and
jb
push
mov
or
mov
push
shr
es
fdivl
sub
popa
jo
mov
jmp
iret
cs
hlt
out
std
mov
push
cmpsb
fwait
jp
mov
call
gs
ja
mov
ja
jne
fdivl
data16
ret
aaa
out
mov
cmp
nop
fcoms
push
dec
mov
add
andb
cmp
xchg
cmp
fcoml
loopne
xchg
push
adc
jns
push
push
pushf
inc
mov
daa
rolb
test
cmp
fdivrs
push
add
add
dec
mov
sub
sub
pop
dec
fisttps
jecxz
xchg
rol
dec
ja
lods
lret
imul
in
je,pt
cld
aad
out
pop
ja
mov
dec
jge
sahf
test
xchg
adc
mov
insl
mov
xor
add
add
adc
lock
and
mov
sbb
sub
pop
icebp
mov
cmp
mov
loop
mov
jb
stos
insl
mov
cmp
enter
jp
sub
adc
fwait
adc
pop
mov
jge
inc
in
lret
in
scas
mov
lahf
lock
jecxz
inc
flds
popf
aad
xchg
rorb
mov
int
and
add
xor
mov
decb
fadd
cmp
pop
mov
and
cmp
mov
dec
add
test
push
dec
add
es
fwait
rorl
in
sub
out
inc
in
andb
stos
les
and
outsl
cmp
jp
repz
jae
inc
mov
push
mov
arpl
rcl
mov
or
sbb
sub
cmp
and
adc
xor
inc
fwait
or
adc
pop
mov
out
push
mov
jp
int
aaa
aas
mov
and
and
ds
cs
mov
out
mov
mov
jecxz
nop
xor
fwait
dec
xchg
adc
cltd
fsubl
repz
mov
into
jp
inc
push
adc
sub
adc
andl
sahf
xor
sahf
mov
clc
inc
push
mov
shlb
jnp
lret
icebp
das
xor
sbb
push
popf
adc
lods
bnd
jo
enter
sbb
pushf
or
mov
xor
mov
clc
mov
jbe
ret
lods
pop
jb
in
push
push
mov
push
xchg
pop
sbb
cld
cmpsb
es
cmc
insb
push
mov
or
test
xchg
push
cmpb
lahf
lret
popa
les
lcall
insb
jp
out
pusha
push
jmp
lock
cmp
fldt
jge
push
daa
xor
add
xor
nop
ret
movsl
xor
mov
movsl
mov
xchg
cmp
out
aaa
repz
mov
cmp
pushf
jo
and
jae
repz
cmc
in
lret
outsl
mov
cmpsl
pushf
aas
stos
cmp
dec
fcoml
daa
cmp
frstor
dec
nop
mov
ret
or
push
jnp
mov
pop
je
xor
pop
and
cmp
sub
adc
mov
shrl
push
outsb
cli
sub
sbb
cmp
jno
in
out
movq
pop
test
cltd
jnp
aam
lcall
xor
stos
icebp
dec
lret
dec
mov
out
mov
adc
pop
outsb
jle
sarb
xchg
add
out
inc
inc
cwtl
fsubr
imul
call
adc
loop
in
or
loop
push
sbb
test
or
sub
pop
test
fstps
sub
jns
outsb
inc
adc
std
out
jne
aaa
fsts
cmp
push
scas
xor
outsl
fs
das
jmp
je
inc
das
pop
fldenv
xchg
das
inc
lds
sarl
mov
jge
pushf
xchg
addb
dec
and
sbb
pop
sub
jbe
xchg
adc
jne
mov
movsl
cltd
push
gs
pop
mov
ret
mov
mov
and
outsb
mov
sub
inc
and
je
mov
inc
push
loope
shll
bound
or
sbb
in
ret
insb
push
xchg
sub
jno
notb
into
mov
addr16
mov
mov
xchg
cltd
and
das
or
mov
sbb
repnz
mov
clc
pop
or
and
mov
mov
cmp
rcl
jbe
adc
cmpsl
iret
inc
shl
out
cmp
fwait
jp
fildl
mov
mov
jns
call
gs
jp
cmp
push
mov
fidivs
outsl
mov
arpl
jg
movsl
testb
cmpsl
sbbb
and
add
sbb
adc
add
popa
jno
insb
jecxz
mov
aas
pushf
je
outsl
iret
push
mov
xchg
mov
add
jae
push
jno
out
notb
or
jnp
movsl
and
stc
arpl
in
cmp
mov
adcl
fadds
sti
ret
ds
mov
aaa
imul
jns
and
arpl
icebp
push
pop
fidivrl
ljmp
stc
out
jl
mulb
ds
sub
push
ret
popa
aas
xor
mov
out
adc
notl
mov
inc
cmpsb
add
adc
and
mov
xor
inc
gs
gs
imul
dec
insb
sub
es
jmp
push
imul
jmp
pop
add
lahf
add
lods
subl
xor
dec
mov
pushf
arpl
pop
inc
test
jns
insl
std
loop
push
jl
or
mov
jbe
and
mov
test
sbb
mov
adc
test
pop
sub
daa
out
adc
out
insl
xchg
mov
gs
in
push
test
adc
loopne
fnstcw
rcrb
mov
testb
test
loope
adc
mov
dec
ja
test
sub
fstpt
xchg
push
sbb
and
pop
add
test
sbb
shrb
jle
pop
rorl
push
mov
cmp
imul
dec
push
inc
mov
or
stc
adc
jg
xor
lods
sub
jnp
rcll
cmp
pop
in
les
subb
xchg
lock
out
and
inc
lret
leave
movsl
mov
xchg
pop
xchg
push
cld
xchg
outsl
aam
jmp
jle
stos
ljmp
xlat
push
mov
out
pop
iret
fs
loopne
loopne
and
ljmp
lods
dec
int3
lret
stc
jnp
add
jp
adc
or
arpl
xlat
mov
shl
iret
lds
adc
push
rol
pop
js
leave
add
insl
out
stos
xor
insl
add
pusha
fidivs
leave
and
or
or
mov
or
in
outsb
inc
cmp
shl
fstps
sub
sti
lcall
in
xor
mov
in
loop
sub
mov
xor
push
or
and
inc
push
mov
in
scas
push
mov
int3
xchg
jo
cmp
andl
std
lcall
push
and
mov
dec
pop
mov
xchg
mov
dec
test
inc
std
testl
cvtps2pd
cmc
vucomisd
ljmp
cmc
loope
repnz
cmpsl
cmp
jnp
enter
les
leave
mov
int3
xchg
mov
mov
enter
stos
std
pop
pop
lea
push
repz
shlb
aaa
inc
and
mov
mov
sub
ds
mov
out
out
call
testb
ss
pop
mov
cltd
lahf
adc
or
scas
movsl
cmc
sbb
insb
xlat
dec
mov
int3
lea
sub
fstpl
ljmp
cmpsb
sbb
push
int
jp
and
ja
push
mov
icebp
or
mov
cmc
lea
mov
das
test
inc
loopne
addr16
jle
test
fwait
lods
dec
xchg
rcr
sbb
dec
scas
cmpsb
pusha
mov
or
xor
jnp
orl
cmp
ficompl
cmp
pushf
pop
testl
scas
sub
push
or
fildll
adc
dec
fs
sub
stc
test
negl
pop
or
cmp
stos
jg
jne
push
pop
hlt
sub
adc
sbb
std
lcall
push
cli
in
cmp
insl
movzbl
popf
lahf
sub
sti
pop
int
mov
add
sbb
xor
xchg
xchg
mov
sub
adc
mov
pop
incb
adc
mov
mov
mov
test
jmp
les
add
adc
fildll
les
das
mov
js
or
sub
movsl
inc
xor
push
push
pusha
repnz
add
and
in
bound
in
xchg
das
dec
push
ljmp
jl
mov
cmp
stc
leave
lahf
sbb
pop
das
fisubrs
mov
push
mov
lret
mov
fsubrl
mov
lret
inc
test
fists
mov
pop
xchg
les
stos
test
subb
mov
lret
xor
mov
push
scas
gs
jecxz
ja
mov
jns
faddl
mov
jb
popa
pop
int3
xchg
mov
mov
stos
lea
shlb
push
jae
jbe
lahf
gs
dec
add
mov
dec
outsb
cmp
cmc
sahf
xchg
ja
adc
dec
push
add
mov
in
es
aas
or
mov
and
and
cmpsb
mov
adc
fcoml
sbb
test
cld
in
into
mov
orb
xlat
call
add
mov
sbb
cmp
xchg
pop
mov
mov
cmp
cmpsl
orb
pop
sub
sahf
mov
add
bound
push
rorb
jecxz
xchg
cld
and
cmp
jae
shll
ljmp
arpl
pop
clc
lea
adc
pushf
dec
aas
add
lahf
test
loop
mov
in
jne
cld
sub
push
or
xchg
dec
mov
rcr
repz
xchg
mov
push
sub
push
mov
call
mov
fs
xchg
call
jle
out
push
or
sahf
add
movsl
mov
xchg
push
stc
lods
cmp
mov
test
mov
call
push
or
dec
aam
pop
ds
xor
mov
sbb
daa
mov
push
out
sar
je
pushl
fmul
test
cmp
xchg
shrb
sub
outsb
mov
or
insl
movsl
push
shrb
das
jmp
es
bound
loop
arpl
cmc
ds
xchg
mov
js
pop
pop
sbbl
lret
and
lret
scas
dec
and
or
ret
xor
add
test
in
jbe
add
inc
lds
xor
jp
ret
cmpsl
xor
roll
cmp
add
push
cwtl
out
sub
mov
jo
js
xor
mov
mov
aaa
jo
add
sti
sbb
cli
push
xchg
cmpsb
mov
sar
sub
loopne
cmpsb
or
xchg
shrl
pushf
leave
shll
push
lods
testl
xor
adc
nop
xor
cmpsb
cltd
xor
push
sti
loopne
stc
push
or
pop
test
lahf
les
inc
pop
fstpl
inc
mov
aad
xor
lret
inc
inc
rcll
xor
aad
loope
xor
push
into
cmp
mov
test
adc
xchg
or
mov
ret
push
mov
dec
jp
adc
fwait
push
mov
cmp
xor
mov
dec
scas
shlb
adc
add
xchg
inc
pusha
je
fsubs
push
lds
mov
dec
js
mov
imul
das
stos
cmp
inc
mov
jg
in
loopne
imul
add
sahf
sub
mov
add
mov
or
sti
xchg
mov
or
mov
xchg
icebp
sbbl
jp
xor
sub
mov
fmul
adc
mov
outsb
push
das
imul
xor
jmp
test
xchg
or
insb
lock
pusha
mov
mov
sbb
and
aaa
xor
sub
imul
inc
sub
sbb
pop
xchg
out
mov
ret
pop
out
push
outsb
sti
ds
add
and
fldenv
add
movsl
inc
sub
dec
or
xchg
iret
dec
into
out
imul
int
insb
shll
mov
test
push
jmp
test
lods
cmp
js
xchg
daa
rorb
cmp
stos
and
in
dec
leave
sub
or
cmp
dec
inc
ret
inc
dec
sarl
sbb
mov
mov
push
mov
in
out
dec
in
mov
mov
sbb
fmull
stc
mov
mov
mov
jecxz
jg
xor
addr16
inc
flds
push
daa
subb
push
mov
cmp
test
xchg
in
adc
lcall
sbb
sub
call
fldcw
inc
fldl
xchg
mov
mov
mov
lods
add
and
push
pop
filds
fs
lods
or
inc
cld
rclb
xchg
ret
arpl
in
sub
shrl
fnstenv
inc
outsl
pop
sub
adc
popa
pop
cld
mov
fcomp
cmp
jle
jb
and
mov
loop
mov
mov
jnp
pushf
out
stos
push
dec
jnp
ds
pop
push
cmp
into
or
inc
sub
lret
rclb
mov
mov
stc
pop
jmp
inc
rorl
into
push
push
jl
dec
sbb
pusha
sbb
mov
jge
sbb
sbb
jl
sahf
xor
scas
cmp
or
dec
nop
cmp
jecxz
sbb
dec
sbb
stos
pop
lods
mov
add
jne
or
cmp
mov
xchg
test
xchg
and
roll
cltd
add
fsubrs
mov
add
push
mov
xchg
shl
std
stos
inc
xor
add
adc
shrl
add
mov
test
lahf
sub
sahf
sahf
out
pop
sahf
push
popa
and
shll
push
cmp
sub
insb
fs
mov
sub
mov
shrb
mov
inc
push
into
dec
test
inc
jmp
xor
cmp
add
lds
mov
xchg
aaa
icebp
ljmp
inc
sbb
jb
in
sahf
imul
leave
movswl
jno
dec
and
xchg
fistps
xchg
je
lods
sub
push
fnclex
rol
rcrb
sbb
fistpl
rcr
mov
shrl
cmc
xor
pop
insb
pop
xor
inc
mov
insl
push
xchg
cmc
and
inc
call
mov
push
lock
into
test
cli
xor
pop
adc
fcoms
out
rorb
loopne
dec
insb
out
cmp
gs
pop
xchg
iret
roll
lahf
cmpsb
mov
lea
cmp
jnp
jmp
mov
xor
loopne
cs
mov
adc
fiaddl
jle
data16
or
aaa
fisubl
mov
rcr
lods
jno
bound
sbb
mov
and
jmp
xchg
in
lods
cmovl
and
jp
xchg
subl
jmp
cmpl
movsw
out
push
mov
int
daa
adc
inc
xor
popf
or
or
mov
ss
mov
popa
mov
lret
mov
sti
shl
mov
push
mov
loop
xchg
xchg
mull
cmp
jge
pop
punpckhbw
inc
xchg
or
notl
xor
lock
lea
sub
xor
shr
add
sbb
rcrl
fs
mov
pop
xchg
lahf
xchg
push
lcall
or
int
mov
push
lcall
in
jl
mov
jp
incl
in
inc
rcl
rorb
int3
icebp
jg
das
pop
sub
and
dec
in
scas
mov
sub
outsl
cmpsb
or
add
repz
xchg
cmc
add
xchg
lahf
pop
insb
sahf
inc
dec
bound
jno
nop
add
cmp
cmovae
sub
daa
cmp
outsl
fstpl
popf
leave
cltd
rolb
inc
loope
jno
rolb
xlat
lret
mov
xor
xchg
jb
mov
sub
push
mov
mov
add
lret
gs
inc
cmp
faddp
sbb
sub
xor
insl
fsubl
pop
nop
xor
pop
iret
dec
mov
divb
loope
lock
aad
xor
cmp
stc
scas
stos
mov
nop
xchg
jl
mov
sbbl
daa
mov
aam
jp
sbb
dec
enter
adc
addb
lods
sub
insb
add
roll
lods
sub
adc
and
stc
mov
cmp
push
mov
xchg
out
loope
push
jno
ret
popa
call
aad
ret
cmp
cmp
inc
mov
mov
js
and
ja
jo
loope
pop
test
pop
mov
jbe
shlb
pop
sub
testb
cld
int3
test
sub
mov
mov
movsl
inc
inc
bound
pop
mov
sbb
mov
adc
pop
inc
nop
jge
aas
mov
mov
clc
mov
xor
movsb
mov
push
lahf
sbb
outsl
dec
cmpsb
call
popf
add
adc
mov
repnz
or
dec
dec
inc
imul
divb
sbbb
inc
push
es
outsb
movsb
add
adc
sbb
dec
inc
xchg
inc
or
mov
cmp
stos
jb
shll
loop
jbe
pop
popf
xchg
and
dec
rcl
adc
or
xor
pop
movsb
dec
mov
pop
fadd
aaa
popa
xor
sub
or
out
ljmp
push
ss
mov
rorb
sahf
xchg
lea
rolb
pop
jmp
loop
bound
inc
aam
cmpsb
pop
fstps
pushl
fcoms
aas
xchg
cmp
sbb
cmpsl
call
mov
inc
aas
cmpsl
lods
cmpsb
fld
adc
outsb
sbb
ljmp
jno
add
adc
lods
sbb
push
cli
add
les
std
es
dec
inc
ds
icebp
mov
inc
mov
cmp
es
sub
push
inc
push
jmp
push
sub
js
test
sbb
ss
test
or
sarl
out
rcrb
movsb
xchg
cmp
dec
inc
mov
pop
mov
lods
in
and
pop
lock
sub
pop
lds
jmp
pop
or
ss
fstps
jb
ljmp
test
dec
xor
push
inc
pop
insl
data16
mov
jle
imul
decl
sahf
loopne
dec
leave
out
push
movb
inc
cmp
push
icebp
push
mov
imul
and
xor
aaa
push
cmp
mov
pushl
fcmovnbe
imul
pop
inc
fmul
jg
ret
lret
scas
and
push
push
push
outsl
rol
jb
add
decl
push
hlt
out
or
jno
push
insl
test
je
lods
sbb
cmp
push
mov
pop
fs
sub
pop
or
push
mov
xchg
in
add
mov
pop
jns
add
in
sbb
fwait
stos
jnp
arpl
outsl
fstps
and
jae
lcall
sbb
in
add
loop
pusha
sub
mov
mov
mov
rcl
cmc
icebp
push
or
mov
inc
xchg
shlb
mov
cltd
cmp
bound
adc
in
repz
scas
pop
mov
jnp
lret
xor
add
hlt
sub
arpl
mov
jnp
add
push
xchg
dec
mov
xchg
pop
push
push
push
mov
stos
jg
lods
cmpsb
daa
push
sbb
jns
enter
mov
test
mov
popf
jle
int
cmpsl
push
sub
bound
or
and
jo
xor
pushf
fisubl
dec
lods
ret
or
mov
push
subl
dec
aam
add
into
mov
pop
jo
sti
cli
mov
or
push
xor
int3
sbb
fwait
pop
scas
jns
movsl
es
mov
out
iret
push
in
push
push
int
fisttpl
test
je
repnz
leave
popa
xchg
dec
leave
les
movsb
adc
gs
rclb
sbb
inc
adc
leave
inc
push
jo
xor
in
mov
jo
scas
lahf
push
push
pop
shlb
cli
subb
xor
or
mov
mov
push
mov
and
es
push
stos
je
jge
insl
sbb
and
add
add
test
xchg
mov
mov
push
or
or
jge
daa
jg
cmp
fstps
push
pushf
pusha
fs
xchg
daa
cmp
pop
test
imul
repz
mov
mov
cmc
push
pop
mov
sbb
sbb
fstps
ljmp
or
divl
clc
jb
pushf
icebp
fisttps
mov
in
mov
rorl
xlat
sarb
mov
mov
lds
jno
and
gs
call
jp
mov
rcll
pop
sbb
ret
test
into
cmp
stc
cmp
mov
adc
lret
stos
add
mov
push
adc
adc
sub
jmp
std
dec
out
cli
or
add
leave
andb
popa
mov
and
push
dec
outsb
xchg
int
jns
or
xchg
xchg
and
in
inc
icebp
fimull
jae
stos
sbb
and
lock
dec
enter
pop
icebp
out
sub
rorb
push
lods
scas
adc
jb
test
jne
lods
lods
imul
mov
stos
repz
pop
and
pop
andb
jecxz
sub
loope
mov
xchg
mov
cmp
stos
pop
out
or
mov
jne
cwtl
mov
and
push
out
dec
fimuls
and
shlb
add
js,pt
int3
xchg
andl
push
fcmovb
aas
or
das
stc
cmpsl
and
sub
fadd
rcr
shl
xor
stos
loopne
mul
pop
lahf
or
rcr
aas
test
inc
cmp
lret
mov
aam
loope
jns
outsb
lret
sub
sub
scas
hlt
cs
and
xchg
mov
shll
movsb
or
mov
push
push
or
loop
gs
ljmp
xor
jmp
push
adc
pushf
clc
insb
mov
addr16
xor
js
sub
pop
cmpsl
insl
push
std
add
es
loopne
push
and
sub
inc
xchg
xor
js
test
inc
iret
or
xor
dec
lcall
inc
cmp
and
adcl
sbb
or
imul
bound
call
mov
leave
jne
rcr
sub
sbb
fs
mov
lea
and
pop
fwait
sbb
fwait
rcl
add
out
xlat
lods
sub
in
in
cmp
sbb
add
jno
adc
mov
pop
call
jae
addr16
sub
inc
jnp,pn
js
cmp
shll
jge
orl
subb
sub
test
or
inc
mov
cli
adc
testb
and
xchg
in
xchg
mov
cmpsb
mov
and
mov
loop
pop
adc
mov
cwtl
decb
inc
int
subl
mov
fmul
pop
jne
xchg
std
sub
stos
sbb
stos
ret
test
cmp
xchg
ret
pop
fsubs
sbb
and
jnp
cltd
mov
and
push
xor
cmp
orl
pop
and
jns
add
inc
data16
jp
xlat
and
jle
clc
cmp
mov
orb
dec
cltd
fnsave
loope
dec
sahf
jno
cltd
mov
shll
and
ret
jbe
mov
pusha
xchg
loope
stos
or
lahf
test
push
dec
gs
aaa
jecxz
jns
or
xchg
jl
pop
pusha
and
lods
inc
movntps
addr16
imul
mov
pop
ljmp
or
xor
push
insb
push
gs
cmpsl
ss
mov
mov
in
inc
adc
inc
out
sub
xchg
jbe
push
mov
mov
test
or
out
aam
out
ret
inc
cwtl
lods
add
fwait
cmp
inc
in
inc
cmp
std
les
cmp
sbb
out
dec
ss
pop
data16
enter
adc
arpl
loope
iret
and
mov
sub
cmp
or
jb
ja
pop
test
and
les
repz
je
jb
pop
aaa
loopne
mov
sub
out
fbld
push
fsubl
cmpsl
test
outsb
jb
nop
pop
cmp
xlat
pop
jmp
pop
xor
pop
les
shlb
mov
jle
sbb
xor
jge
push
pop
jl
icebp
shr
and
pop
xor
fwait
jge
pop
or
ret
cwtl
cld
out
mov
push
xor
rolb
pushf
dec
cmp
xor
decb
lcall
mov
enter
orb
mov
push
jb
mov
xchg
mov
test
cltd
mov
cmc
incb
dec
std
and
jo
bnd
mov
mov
repnz
bound
les
pop
loopne
incb
or
mov
lcall
das
dec
sbb
jmp
lahf
sti
std
cwtl
fcoms
add
fwait
imul
push
xchg
sbb
ret
jo
pop
jne
bnd
stc
pop
nop
shl
jnp
adc
repz
cli
pop
pushf
fstps
loopne
sahf
or
aas
std
stc
in
mov
jb
mov
pavgw
mov
sbb
cli
cmp
insl
pop
cli
adc
outsl
enter
or
jle
or
push
lods
cmp
adc
loop
int3
popa
fisubrs
or
int3
scas
push
sarl
insl
and
sub
mov
push
mov
xor
xchg
sub
aas
lret
cmp
out
arpl
xor
xchg
sub
rorb
out
out
pop
inc
popa
ss
dec
dec
das
test
in
nop
xchg
stc
jl
insl
adcl
sahf
insl
frstor
or
inc
in
scas
jne
mov
nop
cmp
add
xchg
loopne
xor
xchg
int3
add
out
inc
sub
push
outsl
movsb
sbb
aad
mov
adc
lea
xchg
xchg
xchg
and
stos
hlt
pop
push
movsb
and
push
daa
mov
cmp
xchg
push
lods
inc
sti
sub
xchg
push
inc
fs
or
jo
jno
insl
xchg
or
mov
mov
fidivrl
jge
adc
and
push
xchg
mov
xchg
push
nop
mov
icebp
and
repz
mov
in
mov
out
sbb
int3
push
xchg
fadd
adc
sarl
jae
stos
addr16
dec
daa
neg
sub
xchg
rclb
sbb
jo
ja
xchg
sarb
sub
sub
xor
cmp
dec
jle
jmp
pushf
enter
pop
out
mov
es
shll
fdivs
push
mov
fdivr
pop
mov
gs
enter
dec
cwtl
pop
jb
sbb
lahf
mov
xchg
xor
sbb
daa
lods
out
xchg
gs
ret
fisubl
js
cmpsl
xor
adc
psrlq
lahf
adc
sub
call
ret
rcll
arpl
outsl
test
adc
jmp
cmp
not
cltd
imul
mov
movsl
push
je
push
lods
mov
jns
test
repz
cmp
push
or
ja
xchg
jecxz
xchg
jecxz
mov
pop
push
dec
je
pop
lcall
xchg
jo
out
es
loope
lods
or
adc
sub
xor
push
fs
push
push
jmp
es
cld
xchg
sbbb
dec
outsl
das
adc
stos
jp
sub
sub
mov
cmp
andl
mov
jno
and
mov
lods
lcall
cltd
stos
push
std
cs
xor
and
jle
ja
cmpsl
in
out
sub
movb
fsubl
arpl
sbb
test
mov
push
jl
cs
jns
mov
enter
dec
xchg
mov
lret
icebp
push
aaa
bound
jae
mov
inc
std
outsl
stc
repz
adc
add
and
inc
and
xchg
imull
mov
sbb
mov
dec
dec
das
adc
xor
xor
fwait
mov
pop
sti
popa
pop
pop
rcrl
push
mov
mov
cmp
jbe
sub
fstps
pushf
in
testl
repnz
lods
mov
stos
add
nop
fisubrs
push
mov
mov
stos
sbb
jne
enter
aam
les
fsub
inc
cmpsb
sub
xor
sub
hlt
fcmovnbe
loop
lcall
scas
push
enter
xor
push
jmp
jmp
or
aam
jmp
mov
imul
rorl
sub
pop
popa
es
test
add
mov
xor
pop
sbb
notb
sbb
sub
movl
sbb
mov
cmpsl
lret
dec
fsubr
xchg
es
dec
push
cmp
cwtl
jge
aaa
mov
mov
and
int
pop
addb
ljmp
sub
xchg
xor
mov
enter
dec
jo
add
jae
iret
bnd
in
fwait
icebp
lcall
fcoml
push
cmpb
and
sbb
mov
fistps
outsl
loop
lret
xchg
bound
in
subb
outsl
and
std
mov
loope
dec
in
aaa
xor
sub
negl
ja
fiaddl
push
std
mov
or
orl
sarl
sbb
push
cmpsb
aaa
jbe
fabs
sbb
insb
add
pop
jmp
subl
repnz
das
and
cmp
mov
cltd
ljmp
pop
cwtl
add
out
push
data16
push
sub
popf
inc
xor
pop
popa
inc
lds
xchg
gs
lods
je
sahf
aaa
lahf
daa
andb
fcmovb
mov
ret
sbb
inc
jns
jmp
insb
xchg
scas
aaa
wbinvd
outsb
fistps
mov
pop
sub
or
lods
fbld
pushw
aas
and
cld
mov
sbb
adc
push
aam
mov
xor
popa
gs
inc
inc
mov
mov
clc
cmp
sbb
mov
mov
push
outsl
daa
sbb
lock
push
in
push
test
xchg
aas
push
inc
pop
imull
cmp
js
push
inc
sub
sbb
das
adc
push
push
cmp
insb
xchg
cmp
and
mov
or
in
mov
popa
data16
movsb
je
fwait
inc
jb
mov
add
cmpsb
add
mov
push
rcr
fnstcw
lods
out
bound
cltd
fwait
and
fdivrs
sti
cltd
cmpsl
xor
sub
lods
push
mov
xchg
dec
push
mov
icebp
ret
mov
lods
es
icebp
cmp
aam
mov
mov
test
and
imulb
mov
test
xchg
scas
pop
mov
xchg
xchg
inc
dec
push
jo
push
repz
push
and
or
pusha
js
addl
jae
cmp
stos
imul
push
movsl
pop
stos
cmp
sub
inc
adc
fcmovnu
mov
mov
sti
xchg
xor
lock
xchg
dec
insb
sbb
scas
or
cltd
pushf
sar
cmpb
xor
jno
lods
daa
shl
jge
inc
xor
lods
and
push
mov
or
lock
gs
cmpsl
mov
jle
jp
or
mov
out
pop
ret
xor
sub
ret
inc
sti
xor
dec
xor
lock
inc
loope
mov
xlat
leave
pop
out
xor
ret
je
inc
jns
pusha
imul
mov
xchg
xor
adc
jg
sti
mov
jecxz
bound
add
mov
pusha
les
test
in
jno
inc
fidivl
daa
pop
push
push
mov
dec
jg
cmp
lret
mov
jmp
test
xchg
dec
push
dec
push
sub
xchg
js
cmpsl
push
mov
call
sbb
xor
fucomi
clc
xchg
cld
mov
xor
fisttpl
out
pop
bound
xor
lret
out
mov
js
insb
push
jg
mov
cmpsl
inc
cmc
pop
mov
sbb
jb
cmp
adc
notb
hlt
test
push
popf
fcomps
xchg
aam
inc
xchg
xchg
cltd
incl
out
popa
dec
dec
stos
jbe
ret
dec
shll
sbb
bound
add
inc
stc
lods
in
les
int3
cli
pmulhw
sahf
mov
popa
mov
pop
or
jge
fnstenv
mov
cli
cltd
jg
jae
mov
lds
inc
xchg
mov
movsb
roll
out
test
fdivs
xchg
inc
pop
adc
xor
mov
clc
imul
loope
mov
cmp
mov
push
mov
mov
xchg
xor
lods
mov
inc
jae
mov
xchg
jmp
adc
push
inc
adc
cmp
imul
mov
stos
cmpsb
insl
sub
xor
mov
mov
sbb
out
popf
std
adc
stos
rcrl
sub
or
loopne
cmp
aam
out
jo
clc
out
arpl
test
fnstsw
imul
and
cli
test
push
jge
call
daa
sbb
xchg
imul
jle
adc
test
push
jle
or
adc
jb
lahf
shrb
jle
pop
xchg
mov
out
push
cmc
loope
sbb
xlat
mov
jmp
fdivr
jmp
call
jo
xchg
adc
data16
insb
js
filds
in
cmpsl
cmpsl
jns
out
dec
and
pushf
cmp
enter
imul
ja
xchg
add
add
or
in
ret
jmp
or
scas
rcll
fucomi
xchg
es
jmp
sarb
jge
notb
mov
sti
cmc
jbe
frstor
in
sub
mov
cld
stos
mov
cmp
decl
sub
ds
xchg
xor
add
dec
dec
or
int
stc
adc
sub
lods
xchg
dec
popa
and
jbe
fcmovnb
mov
push
fs
dec
das
adc
mov
xor
fiadds
loope
jae
jbe
out
adc
add
mov
outsb
jb
mov
push
dec
jbe
mov
pusha
xchg
addl
fsts
mull
push
fidivl
and
sub
sub
sbb
push
daa
fsts
mov
inc
cli
and
les
subb
cld
fs
pop
cmpsb
inc
lods
test
dec
scas
mov
call
enter
inc
adc
mov
lea
lahf
mov
or
sub
push
fs
ja
mov
mov
mov
dec
daa
mov
scas
in
addr16
lods
inc
cld
outsl
lock
adc
cmp
insb
jo
jns
subl
mov
and
pop
add
xor
adc
clc
in
dec
mov
rcl
and
out
cmp
dec
add
ja
pop
jno
inc
testl
fsubrl
mov
adc
out
mov
adc
cli
sbb
jne
js
jns
cs
lret
pop
cli
sub
dec
push
out
jb
insb
mov
push
push
mov
cmp
aas
shl
repnz
dec
mov
adc
xor
repz
test
icebp
push
jns
nop
clc
call
and
js
test
push
mov
add
sbbb
push
cltd
call
mov
push
xchg
call
test
imull
xor
cmpsb
or
imul
mov
leave
mov
push
jl
out
pop
xchg
and
int
jno
ret
cs
pop
stos
lock
loope
sbb
das
adc
sub
xor
jo
lret
sub
mov
push
in
mov
xchg
inc
push
rorb
push
adc
push
xchg
cwtl
add
test
mov
or
outsl
jbe
cwtl
jecxz
jg
test
xor
sub
imul
pop
int
jmp
callw
add
pop
push
sti
rorl
mul
add
mov
rcl
mov
addb
fcmove
arpl
shlb
adc
lods
imul
mov
cmp
dec
cmpsl
int
mov
rclb
cwtl
ret
rolb
sbb
call
shl
popa
xchg
rsm
sub
jecxz
mov
mov
push
lock
adc
inc
pusha
sbb
nop
mov
rcr
push
popf
jl
push
xchg
clc
adc
jg
in
test
inc
jbe
or
jle
std
xor
jo
sbb
sti
jle
ret
fnstenv
inc
fstps
mov
and
xorb
push
adc
neg
push
and
jmp
push
mov
xchg
popa
adc
sub
mov
aas
mov
lea
test
int3
mov
cwtl
mov
in
mov
mov
aam
jnp
mov
cs
sub
sub
repnz
jge
fnstsw
adc
xchg
popf
lcall
mov
xchg
lea
xor
lret
divl
mov
fisttps
inc
adc
cltd
out
cs
pop
pop
adc
popa
jo
adc
xchg
icebp
mov
sub
mov
leave
jge
mov
ljmp
ljmp
push
out
inc
xor
mov
pop
insb
pop
pushf
pusha
mov
xchg
cmc
pop
mov
inc
sub
mov
jb
imul
lahf
pop
cs
enter
xchg
pop
xchg
xor
mov
and
insl
les
xchg
pop
popf
push
push
pop
xor
in
leave
stc
leave
xor
and
cwtl
hlt
pop
movsb
loope
xchg
and
jo
mov
popl
mov
pop
dec
mov
cmp
and
cli
bound
mov
xor
sbb
outsl
jge
cmp
test
loope
mov
fadds
mov
sbb
daa
push
sbb
rclb
jp
cmp
jb,pn
pop
push
push
lock
stc
mov
andb
ljmp
lret
pop
dec
xor
lds
fnstsw
inc
andb
inc
ss
sub
jp
les
stos
dec
sets
cmc
cmc
jb
jl
addr16
int
bound
ljmp
sbb
jl
pop
lods
adc
add
cli
xchg
or
add
insl
data16
imul
sbb
jecxz
jmp
mov
imul
inc
or
insb
cmp
and
filds
lret
stc
inc
cmp
or
cmp
xchg
inc
bnd
dec
inc
pop
inc
push
leave
mov
pushf
in
dec
xor
pop
mov
ja
jg
push
xchg
jnp
mov
or
insb
lcall
in
and
shrl
iret
adc
movsb
mov
mov
jae
add
mov
cmp
aam
int
sub
xchg
mov
sahf
leave
movsl
cmpsl
jo
push
clc
es
sbb
push
shrl
stos
in
aam
jg
int
cmp
pop
frstor
sbb
test
adc
xor
adc
jne
rclb
fsubl
psubsb
mov
rcr
in
mov
or
mov
fwait
push
in
lcall
nop
mov
xorl
mov
adcl
mov
xchg
sub
cltd
mov
daa
mov
es
pushf
add
stos
mov
xchg
jb
mov
popa
lcall
outsb
jno
aas
shll
inc
mov
call
popf
push
inc
daa
shl
xlat
outsb
and
xlat
add
mov
cmpsl
roll
rcrb
scas
mov
andl
cmpsl
xor
loopne
pop
add
test
dec
mov
jmp
in
lret
cmpsb
jg
xchg
pop
stos
xor
xchg
add
gs
sti
xchg
addr16
in
jns
insb
cli
fists
and
lcall
cs
jne
adc
push
and
mov
xchg
fisubrs
push
lcall
mov
insl
gs
cmp
push
pop
mov
and
mov
test
cmpsb
shl
sub
repnz
cli
adc
fs
fldl
pop
cmp
mov
mov
adc
mov
xrelease
push
jo
and
cmpb
sbb
jns
push
outsl
and
lock
mov
fucomp
cmpsb
sub
mov
ja
xchg
jecxz
mov
or
cmp
int
test
cli
pushf
mov
fidivl
orb
cmc
or
dec
jb
cmp
fcoml
xor
sbb
pop
push
push
popa
mov
sarb
test
insb
add
rclb
xchg
in
cmp
ss
or
and
mov
sub
xlat
je
ds
lahf
stos
aaa
xor
xor
std
test
lock
mov
mov
xchg
xlat
leave
fcompl
jmp
std
call
scas
sub
jno
cmpsb
xchg
je
pop
cwtl
scas
mov
sub
cmp
out
jnp
iret
xchg
cld
fldenv
xor
or
ja
pop
rol
pop
pop
scas
icebp
xchg
pushf
pop
dec
push
pop
add
orl
outsb
xchg
sbb
int
mov
in
test
addr16
popa
sbb
sub
and
mov
imul
mov
jl
mov
mov
mov
ret
call
sbb
and
es
dec
imul
rcrb
data16
and
or
mov
and
pusha
lds
jns
sbb
inc
pop
add
sbb
mov
inc
jo
jae
mov
cwtl
pop
iret
push
fistpll
xor
sbb
sbb
jns
cmp
jmp
das
popa
cltd
cli
in
adc
aas
psubusb
ret
mov
xlat
js
sub
sbb
pop
or
repnz
xorb
adc
inc
inc
sbb
sub
out
jl
and
mov
sbb
sti
fnsave
or
mov
mov
mov
or
add
or
fcompl
jns
push
mov
iret
mov
cltd
out
cwtl
aaa
dec
xchg
test
je
jle
sub
add
mov
inc
test
dec
mov
in
sub
add
movsb
add
insb
ret
xchg
sbb
xchg
stos
mov
cltd
cmp
add
mov
xor
sbb
lods
adc
pop
or
sub
add
dec
xchg
sub
aad
es
je
lock
out
ds
sarl
xchg
aam
cmpsl
add
push
movsl
jle
sub
fsubrl
adc
fstps
clc
mov
pushl
in
pop
flds
add
add
fcoml
lcall
mov
push
bound
mov
jg
ja
out
sbbb
xchg
pop
icebp
push
pop
adc
xor
mov
cmpsl
pop
les
sbb
ja
ret
scas
das
fsubrs
ss
lock
lcall
jp
adc
mov
sahf
ds
loop
xor
into
or
pop
rorl
xor
push
insl
mov
xor
cmc
test
and
cld
outsb
mov
repz
daa
orb
enter
insb
mov
inc
or
xchg
jg
lods
mov
sbb
xchg
sahf
mov
cmp
lcall
and
mov
ja
inc
out
dec
adc
adcb
mov
add
xlat
stc
into
leave
fmul
int3
or
jle
dec
sub
mov
js
xor
shlb
stos
sub
adc
pop
cmp
push
pop
out
jl
daa
xchg
cmp
pop
adc
lret
xchg
xor
mov
dec
mov
dec
xor
and
arpl
int3
mov
xlat
lods
cmp
xor
pop
dec
call
lret
loopne
push
inc
stos
das
in
mov
mov
rcll
push
pop
lcall
xor
ret
jno
sub
cmpsb
cltd
and
cs
shr
int3
mov
int
pusha
lds
mov
push
call
sarb
leave
cld
add
jp
jle
test
or
jp
loop
jbe
aaa
xor
shll
pop
push
jl
mov
and
sti
jo
add
stos
pop
pop
mov
jecxz
push
jns
push
fisubrl
fnsave
pop
inc
imul
add
shrl
test
mov
adc
xchg
cmp
and
xchg
ficoms
and
je
ljmp
cmpsb
test
adc
cmp
jecxz
mov
mov
mov
xor
and
add
enter
or
es
xor
push
pop
lods
jl
jo
arpl
xchg
dec
sub
adc
aad
popa
lock
dec
or
adcb
jno
negb
pushf
push
pop
loopne
inc
incb
int
stc
xchg
mov
mov
cmp
jecxz
sbb
sbb
lahf
xor
jmp
pop
loop
ficoml
mov
aaa
mov
test
mov
dec
clc
out
cmp
out
jno
pop
daa
jecxz
adc
scas
dec
mov
or
mov
jl
sub
into
scas
scas
xlat
lahf
push
out
fcomp
repnz
and
push
push
adcl
push
cs
mov
sub
mov
es
jae
js
stc
loope
fwait
es
out
test
mov
sub
pop
jns
add
inc
js
jne
inc
adc
mov
shld
pop
mov
jle
out
ds
inc
sbb
in
mov
repnz
and
and
out
je
dec
test
pop
rcr
repnz
add
push
mov
inc
xorl
inc
push
xor
jle
loopne
xchg
in
push
lahf
dec
inc
hlt
in
jle
mov
push
and
mov
jnp
mov
orb
inc
into
test
sub
and
xlat
imulb
or
or
jbe
ss
mov
adc
movsl
sahf
jle
nop
dec
test
sbb
cmp
leave
int
hlt
shrb
cmp
push
mov
xchg
mov
test
mov
cwtl
flds
out
shlb
in
pop
xor
add
mov
pop
mov
jecxz
jno
cli
sahf
in
sahf
adc
insb
sbb
mov
and
ds
jle
add
arpl
and
mov
sbb
fiadds
movsb
mov
fnstsw
dec
xor
add
mov
test
scas
inc
test
lods
insl
fs
mov
add
pop
or
int
or
jmp
xchg
in
in
push
cmp
pop
sub
pop
cs
add
pushf
mov
mov
jae
adc
push
jg
mov
or
jp
addr16
test
dec
fwait
pop
mov
dec
js
sub
fstps
push
mov
imul
sub
mov
xchg
jge
andb
lahf
sahf
pop
into
dec
inc
hlt
cmp
inc
popl
je
jle
test
inc
jno
paddd
jb,pt
pusha
idiv
test
mov
aam
pop
ficoms
sbb
sti
mov
sub
lock
push
xor
aas
or
jmp
add
cmp
push
adc
test
fimuls
or
inc
lahf
clc
cmpsb
cli
xchg
imul
sub
adc
stos
sub
loope
movsb
or
mov
bound
into
aas
sbb
out
lret
cli
mov
inc
lock
aad
cmpsb
clc
add
xchg
out
mov
loop
test
loopne
leave
stos
cmp
push
dec
jae
mov
lea
shlb
outsb
jmp
sub
loop
mov
mov
inc
in
xlat
pusha
pop
mov
and
mov
xor
js
push
cwtl
or
daa
dec
mov
gs
in
lods
jb
pop
gs
push
dec
mov
push
sbb
mov
jbe
fst
repnz
dec
and
lods
push
cld
or
sbb
adc
mov
xorb
or
dec
cmpsb
xor
icebp
pop
or
hlt
addr16
shrl
ljmp
inc
movsb
rcl
pop
es
xor
nop
cmpsl
mov
lcall
add
es
movsl
cmp
lret
addr16
jmp
fsubs
dec
outsb
jl
in
dec
mov
xchg
jmp
mov
push
push
xchg
lods
add
mov
mov
out
jnp
pop
jge
or
sbbl
jge
sbb
adc
out
cmpsl
loopne
push
inc
adc
pop
inc
mov
xchg
mov
repnz
xchg
jmp
cmp
lcall
ja
scas
dec
cmp
or
xlat
xor
fidivs
fucomip
imul
adc
push
jle
sub
loop
sbb
xor
xchg
pop
jge
dec
jo
and
call
out
fdivrl
jbe
fsubs
pop
outsb
and
mov
cmp
mov
pop
adc
mov
bound
sbb
sarl
push
ja
das
xor
out
cmp
shl
stos
pop
xchg
daa
add
inc
div
push
je
rorb
int
sbb
cmpsb
aaa
aam
inc
add
loopne
popa
xor
fs
test
in
jb
xorb
test
loopne
jnp
shlb
add
sub
xor
daa
out
sbb
movups
imull
mov
arpl
cmpxchg
adc
andb
xchg
fwait
mov
and
mov
arpl
das
dec
sub
sti
mov
jb
cmp
call
push
pop
js
rcll
fs
pop
cmp
mov
push
insl
cmp
fildl
cmpb
sub
into
jle
jecxz
out
pop
push
sbb
cmp
pop
add
scas
or
lret
jle
or
xchg
es
cmp
sahf
aas
leave
pop
jmp
cmc
fwait
add
inc
adc
or
pop
jp
hlt
loopne
sbb
aad
pop
xor
add
dec
mov
mull
loopne
inc
xchg
mov
sbb
imulb
neg
int
ss
and
in
cs
jmp
xchg
and
aam
lret
fadd
or
inc
pop
decb
jns
fwait
jecxz
mov
cmp
pop
cwtl
cmpsb
push
.byte
.byte
hlt
add
add
mov
pop
aaa
add
add
add
add
add
add
xor
add
js
add
lock
orb
add
add
addb
add
mov
pop
aaa
add
add
add
pop
add
add
add
add
jo
add
mov
add
mov
add
add
add
add
add
addb
add
call
add
add
add
add
add
add
add
xor
add
sbb
add
xor
add
dec
add
cmp
add
pusha
add
cmp
add
js
add
nop
add
cmp
add
test
add
rolb
cmp
add
fadds
add
lock
cmp
add
or
add
and
add
mov
pop
aaa
add
add
add
add
loopne
add
out
add
add
mov
pop
aaa
add
add
add
pop
add
jg
add
add
addb
cmp
add
cwtl
add
cmp
add
mov
add
enter
jg
add
add
cmp
add
clc
add
addb
add
mov
pop
aaa
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
pop
aaa
add
add
add
add
or
add
add
add
add
mov
pop
aaa
add
add
add
add
or
add
add
add
add
mov
pop
aaa
add
add
add
add
or
add
add
add
add
mov
pop
aaa
add
add
add
add
add
add
addb
add
add
mov
pop
aaa
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
pop
aaa
add
add
add
add
add
add
adc
add
mov
pop
aaa
add
add
add
add
add
add
and
add
mov
pop
aaa
add
add
add
add
add
add
xor
add
mov
pop
aaa
add
add
add
add
add
add
inc
add
add
mov
pop
aaa
add
add
add
add
add
add
push
add
add
mov
pop
aaa
add
add
add
add
add
add
pusha
add
add
mov
pop
aaa
add
add
add
add
or
add
add
add
add
mov
pop
aaa
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
pop
aaa
add
add
add
add
or
add
add
push
add
add
cmp
push
add
add
jo
push
add
add
movsb
imul
add
push
add
add
or
push
add
add
inc
insl
push
add
add
je
push
add
add
fsubrl
add
add
sub
push
add
add
add
add
add
jb
add
add
lock
add
add
add
js
add
add
jl
add
add
add
jg
add
add
clc
addl
add
addb
xchg
add
add
push
add
add
add
push
add
add
add
add
add
add
add
call
add
add
lea
add
add
or
push
add
add
and
add
xor
push
add
add
dec
nop
push
add
add
pop
nop
push
add
add
jo
push
add
add
test
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
sbb
mov
add
fldenv
ds
cs
mov
jmp
or
scas
and
nop
mov
out
fcompl
mov
leave
cld
and
loope
or
jnp
mov
popf
dec
out
pushf
cmp
ljmp
mov
popf
out
outsb
aam
cmp
adc
jmp
jp
inc
ljmp
jmp
mov
in
mov
sub
cmp
dec
mov
inc
jnp
popw
pop
in
xchg
jp
cld
lds
jecxz
push
xor
int3
out
push
or
jns
mov
mov
outsl
xor
mov
xchg
shll
testl
addl
sbb
das
push
inc
mov
in
hlt
add
repz
adc
cwtl
mov
sub
out
jp
mov
out
and
and
add
push
jne
adc
and
inc
mov
fwait
sub
sbb
and
add
fdivs
xchg
out
sub
ss
fcmovb
inc
ljmp
ljmp
add
dec
jl
fildl
xchg
inc
hlt
scas
in
es
inc
cmc
mov
mov
sub
out
jo
xchg
shl
pop
adc
and
cmpsb
mov
push
dec
pusha
and
mov
xor
mov
pusha
sbb
push
or
jne
add
pop
addr16
rcrb
cmp
repnz
and
mull
add
lock
mov
or
gs
pop
cmp
push
cmp
das
mov
repnz
mov
aas
scas
inc
mov
xchg
movsb
dec
pop
lahf
push
jge
add
gs
mov
mov
aas
jns
idiv
ss
cmp
pop
xchg
ror
mull
out
popa
xorl
dec
subl
push
outsb
rolb
pop
out
daa
mov
jnp
inc
mov
and
inc
mov
movsb
je
fiadds
sub
fcom
and
sub
daa
shlb
xchg
dec
sar
add
into
mov
pop
dec
jmp
or
ret
addr16
loopne
jae
frstor
sbb
test
pop
or
sbbl
ljmp
or
jnp
in
in
int3
leave
mov
cmp
jmp
lds
xor
push
add
stos
cmpl
sar
jne
dec
es
pop
int3
push
outsl
push
mov
xor
mov
and
xchg
call
out
cmpsb
int3
jmp
rcll
std
and
jecxz
sub
and
cmpsl
xchg
mov
cmp
popa
repz
or
aaa
pop
out
mov
mov
inc
push
int3
jl
sub
lock
insb
add
in
cmpsb
jbe
push
fs
cmpl
sahf
inc
push
lods
sbb
adc
shr
cld
notl
das
inc
and
push
outsl
mov
movsl
int3
xchg
andl
icebp
int
stos
leave
jno
popa
add
and
es
xor
aas
add
mov
add
aaa
js
jb
lret
push
sub
lea
dec
pop
idivb
dec
imul
push
std
fildll
outsb
fadds
mov
xchg
dec
jne
aaa
push
push
and
or
mov
mov
fdivrs
lret
sahf
adc
mov
in
adc
adc
jl
jne
and
js
sbb
or
test
leave
cmp
push
les
outsl
xor
pop
stos
mov
dec
pop
or
sti
cmp
subl
aam
jo
or
dec
test
xor
xor
mov
fdivr
sbb
xchg
hlt
jns
leave
push
ret
fsubs
out
dec
test
push
lahf
aaa
cmpsb
mov
pop
lcall
bound
add
pop
sar
xor
mov
add
push
push
xchg
mov
sub
sub
stc
fistpl
adc
fdivs
jae
or
sbb
adc
and
lods
orl
fisubs
mov
sub
mov
xor
push
inc
push
xchg
pop
jmp
dec
adc
mov
cmp
das
cmp
push
subb
movsb
insl
sbb
jo
sbb
daa
mov
xchg
lahf
scas
addr16
xchg
mov
or
shlb
dec
out
jl
test
in
repnz
cmc
add
pop
loopne
jo
es
shr
out
leave
pusha
fmull
dec
or
int
mov
jge
test
add
cltd
jmp
ficoms
cmp
test
mov
mov
out
add
push
enter
jmp
mov
hlt
je
scas
testb
mov
shl
jecxz
mov
cmpsl
mov
xor
and
les
cmc
sbb
dec
jl
fcmovnb
add
scas
enter
mov
sbb
daa
mov
bound
or
adc
out
leave
sahf
inc
lret
ret
dec
dec
mov
sbb
mov
adc
xor
das
dec
dec
mov
adcl
test
or
arpl
pop
ja
inc
test
fdiv
addr16
dec
out
add
sub
shrl
mov
imul
sbb
xor
mov
pushf
push
push
jno
rclb
mov
add
sub
push
and
or
sbb
stc
shlb
scas
bound
adc
in
xor
add
out
clc
iret
xor
xchg
shrl
lods
nop
xchg
mulb
and
push
xor
shrb
cmpsl
mov
mov
dec
mov
stc
or
movsl
stos
nopl
scas
mov
sub
sti
jle
or
iret
dec
mov
ret
cmp
ja
cmp
fsin
leave
and
sub
sbb
shrb
shrl
mov
das
out
xor
icebp
mov
pop
xor
push
and
mov
mov
inc
mov
jns
inc
sahf
push
cmpsl
sti
sarb
rolb
xor
and
lods
cmpsl
or
push
xor
mov
popf
rcrl
cld
mov
pop
jg
lods
sub
sub
add
push
mov
or
push
imul
mov
push
xchg
in
xor
xchg
std
ret
push
lahf
xor
ret
fnstenv
jecxz
pushl
fmull
repnz
adc
lock
pop
inc
inc
loopne
dec
mov
ret
in
pushf
fmull
ret
jns
cmp
pop
push
and
enter
mov
int
sub
pop
movsl
pop
psrld
enter
daa
and
or
jg
jne
pop
nop
cmc
aam
mov
stos
dec
aam
out
mov
mov
cwtl
iret
outsl
scas
push
lds
push
out
add
fidivl
pop
jl
sub
fnstenv
imul
jmp
mov
shr
mov
fcompp
sbb
xchg
ret
cltd
or
ljmp
test
mov
icebp
dec
push
jne
in
mov
jo
ljmp
dec
mov
or
mov
pushf
sahf
pop
xchg
ret
push
pop
and
lahf
pop
pusha
or
jge
pusha
jno
add
xor
leave
out
pushf
movsb
mov
cmc
push
mov
insb
adc
in
popa
gs
outsl
cmpsl
rorl
cmp
pop
loopne
gs
mov
xor
movsl
out
test
dec
cld
sbb
pop
mov
xchg
std
dec
push
es
inc
and
xlat
sbb
loope
inc
clc
mov
repnz
cs
fstpl
rorl
add
arpl
jnp
inc
jne
test
addb
popf
loopne
fisubrs
stos
ja
mov
popf
or
scas
adc
sahf
out
js
sub
adc
xchg
cltd
dec
sub
mov
add
nop
stos
fildll
mov
sub
mov
lret
push
scas
dec
jb
inc
jb
and
leave
mov
xor
daa
ficompl
sub
movsb
bound
xor
sub
repz
int
in
pop
add
mov
push
sahf
push
stos
sti
ljmp
dec
adc
repnz
jmp
dec
hlt
out
pop
dec
inc
inc
out
sub
sbb
xchg
rcrb
lods
out
into
jmp
cld
iret
pop
out
add
lret
sbb
fldt
out
xchg
mov
enter
cmpsb
jmp
push
mov
in
or
sbb
daa
mov
fdivrl
mov
lods
sub
sub
aaa
push
cmp
fldcw
pop
loope
jae
loopne
std
cmpsb
adc
test
adc
fwait
scas
fnstcw
fucomi
or
push
divb
imulb
xor
xchg
fdivl
in
hlt
inc
scas
cmp
and
hlt
mov
and
cmp
xchg
sbb
xchg
movsl
add
test
xor
or
pop
inc
test
call
adc
sbb
cmp
jp
add
pop
sahf
mov
sub
pusha
xchg
inc
dec
popf
nop
orb
leave
cld
data16
dec
sub
mov
jb
cmp
jb
mov
jno
inc
and
bound
fmull
or
jno
in
xchg
or
cltd
dec
xlat
and
mov
movsl
addr16
int3
add
mov
cwtl
out
pop
inc
lret
insl
fisttps
sbb
mov
mov
aaa
push
mov
adc
pusha
inc
daa
mov
jno
cld
xlat
xchg
fdiv
loope
iret
out
mov
mov
lret
mov
xlat
sbb
gs
push
sahf
mov
test
mov
ret
or
xchg
mov
xchg
add
aam
adc
dec
pop
mov
jmp
cld
add
dec
dec
jnp
fdivr
mov
stc
mov
shl
rcrb
add
pop
pop
js
sbb
and
jle
xor
xchg
popf
cmc
adc
jb
xchg
mov
cs
push
pop
push
xchg
push
icebp
lea
jbe
dec
lock
mov
les
into
sti
mov
hlt
out
es
mov
pop
cltd
scas
and
fnsave
jmp
xor
push
xor
loop
ds
cmc
bnd
ljmp
xchg
pusha
aaa
ficomps
add
cltd
scas
movsl
subb
pop
push
test
ss
test
ja
push
lds
addr16
mov
pop
push
sub
pop
cmp
jne
xchg
dec
jnp
ljmp
fidivrl
shrl
add
popf
scas
and
stos
jge
adcb
enter
mov
xchg
sti
cmp
mov
and
repnz
xchg
call
loopne
rclb
int3
mov
fidivrl
xchg
mov
repz
lock
jmp
push
fwait
dec
xchg
test
movsl
scas
add
and
mov
add
mov
jmp
inc
jle
dec
jg
mov
in
je
push
test
movsl
lret
xchg
shll
icebp
sti
shrl
push
imul
inc
pop
test
xchg
adc
jp
aam
pop
ret
push
clc
adcl
loopne
pop
cld
mov
pop
iret
jnp
loop
adc
sbb
mov
xor
xor
and
dec
sbb
aas
rcrb
or
ja
cmpsl
in
push
jl
or
leave
inc
jecxz
jnp
or
mov
xchg
cmpsl
repnz
dec
orl
xchg
pop
jl
adc
stc
xor
inc
call
jmp
jne
mov
pusha
pop
pop
or
pop
stos
cli
adc
cmp
out
add
fwait
dec
pop
jecxz
mov
mov
daa
jl
imul
leave
std
outsl
mov
pop
daa
sub
xor
add
fisubrs
fisttpll
fcomip
loopne
loope
mov
dec
aas
pusha
aaa
xlat
cld
in
dec
inc
push
cmp
xchg
int
adc
jne
insl
pop
neg
nop
cld
inc
bound
xchg
mov
push
cmp
arpl
scas
clc
push
push
sti
dec
mov
int
ret
pop
jo
in
push
dec
inc
rcr
jge
cwtl
stc
ljmp
inc
sub
scas
popa
arpl
lcall
jbe
and
iret
in
cmc
notb
or
popa
sub
adc
mov
ret
mov
and
aam
sub
hlt
sti
mov
sbb
cs
add
dec
cmpsb
.byte
xchg
.byte
cs
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
and
call
fdivs
push
xchg
test
xor
imul
stos
mov
pop
xor
add
push
push
jmp
ja
dec
add
push
dec
dec
outsl
jl
pop
pop
xor
call
adc
mov
cmpb
jnp
or
add
push
inc
sub
scas
dec
fsub
pop
pushl
add
pop
mov
add
adc
add
mov
xor
sbb
push
mov
popl
sub
mov
sub
or
add
mov
cmp
jne
push
add
pop
jmp
mov
inc
pop
xor
shlb
int3
adc
notl
dec
adcb
test
lret
inc
mov
and
cltd
ja
sub
dec
add
enter
inc
mov
pop
inc
mov
in
into
ret
mov
pop
call
sbb
mov
mov
push
insl
ret
mov
out
lock
cmp
cmc
fmull
in
mov
pushf
or
aas
mov
or
testl
decb
packssdw
mov
mov
cmp
mov
sbb
jp
fiadds
push
pop
push
inc
jnp
stos
aaa
das
in
xor
jecxz
mov
xlat
lods
sub
cmp
mov
in
in
out
jecxz
inc
adc
mov
cld
lcall
loope
sbb
inc
movsb
and
cli
mov
pop
mov
push
inc
mov
in
xor
das
mov
mov
xchg
rcr
imul
mov
cmp
mov
stc
push
mov
lods
mov
mov
imul
fstl
int
imul
stos
call
mov
xor
pop
lret
adc
pop
aam
adc
jb
mov
enter
lcall
in
jb
in
lea
jl
pop
xor
sbb
push
mov
js
jp
pop
push
sub
fidivs
test
jb
jp
sbb
test
jne
imul
sub
jp
pop
fnstcw
adc
adc
push
fs
fnstcw
cltd
pop
mov
jns
dec
xchg
dec
je
jns
mov
dec
or
inc
lret
push
adc
push
fdiv
jl
adc
or
les
les
dec
or
jp
dec
or
mov
xchg
xor
or
dec
mov
inc
xchg
fildll
leave
insl
push
mov
mov
mov
dec
or
jg
add
mov
jno
and
pop
adc
iret
jb
in
popa
mov
sbb
sbb
mov
jae
add
sub
inc
in
xchg
iret
sub
cmc
mov
sbb
sbb
fisttpll
jns
inc
or
mov
pop
push
stc
xor
aad
inc
xchg
loopne
jns
dec
shlb
mov
push
mov
imul
ljmp
aaa
outsb
sbb
shll
test
inc
into
in
ljmp
or
xor
lds
add
cmpsb
inc
mov
data16
loop
decl
mov
cmp
in
pop
xor
aas
loop
or
fwait
sbb
out
lcall
out
in
pop
xor
or
fwait
sbb
sbb
into
in
pop
inc
into
in
pop
inc
into
pop
popf
lret
lcall
in
pop
mov
fs
mov
adc
push
sub
into
in
adc
cmp
daa
pop
adc
test
adc
pop
mov
inc
mov
in
pop
inc
or
add
bound
inc
insb
faddl
inc
into
inc
mov
xchg
jb
add
out
pop
pop
push
mov
in
cltd
test
jmp
sbb
in
pop
mov
jmp
xor
in
pop
popf
pop
sbb
inc
into
inc
mov
mov
push
gs
into
in
mov
aam
in
pop
popf
iret
aas
mov
popf
vpmacsdqh
pop
sub
pushf
in
lahf
inc
ljmp
pop
test
inc
into
inc
shrb
xor
dec
dec
shr
pop
xchg
push
sarb
adc
pop
and
mov
push
xor
adc
inc
into
aas
xchg
and
out
fadd
ljmp
sub
ror
in
pop
push
pop
xor
icebp
xchg
in
imul
pop
test
inc
into
inc
ret
sbb
sbb
into
in
mov
xchg
fwait
call
jg
into
in
mov
in
pop
popf
pop
mov
inc
mov
bound
outsl
pop
push
sbb
in
pop
mov
testb
leave
out
inc
mov
pop
inc
into
cmpsl
push
inc
into
in
pop
inc
into
in
repnz
inc
or
xchg
dec
in
loope
push
les
std
popf
fsubl
add
dec
in
cs
mov
jno
fiaddl
pusha
loopne
xchg
push
add
cs
mov
push
inc
into
ljmp
loopne
xor
sarb
pop
pop
mov
sub
mov
cmp
in
loopne
add
dec
in
cs
mov
cmp
stc
aam
sbb
cmp
sbb
in
pop
sbb
pop
cmp
in
loopne
add
dec
in
cs
mov
push
sbb
dec
sbb
in
pop
sbb
pop
cmp
in
loopne
add
dec
in
cs
mov
mov
stc
mov
out
inc
into
jmp
add
jecxz
push
pushf
aas
push
add
in
pop
inc
sarb
pop
pop
mov
sub
mov
cmp
in
mov
in
pop
lret
out
push
sbb
in
xchg
push
idivb
stc
mov
cs
into
jmp
dec
dec
push
add
int3
pop
push
dec
jp
sbb
aad
pop
xchg
rcr
or
addr16
pop
test
xchg
int3
pop
push
dec
jp
sbb
aam
pop
push
push
lock
adc
pop
inc
into
in
pop
xchg
cltd
enter
in
add
fsubr
pop
inc
into
sbb
popf
fwait
test
out
leave
or
lahf
inc
pop
jl
in
shrb
sbb
out
inc
arpl
sbb
in
mov
inc
pop
pop
mov
inc
ss
into
lahf
sbb
addr16
inc
dec
loop
fisubrl
in
pop
xchg
cwtl
int3
add
pop
sbb
dec
ss
push
inc
into
stos
mov
mov
sbb
fistps
jb
int3
fcom
push
test
push
cli
out
adc
shl
clc
and
cmpb
cli
shl
ficompl
push
pop
adc
push
xor
pop
cmp
aas
push
adc
push
in
jle
aas
loop
stos
cmpsl
cmpsl
pop
imul
push
adcb
xor
and
inc
into
in
pop
inc
into
in
pop
inc
into
in
pop
inc
into
in
pop
inc
into
in
pop
inc
into
in
pop
inc
into
in
pop
aam
in
shl
fucomi
fcomps
in
pop
xchg
in
pop
inc
into
in
pop
inc
into
in
aaa
imulb
adc
into
out
inc
jle
pop
inc
into
in
pop
inc
into
in
pop
inc
into
in
pop
inc
into
in
pop
imul
xchg
loop
testl
xor
and
jo
adcl
daa
ret
das
fcmovb
lahf
xchg
repz
scas
xchg
ds
mov
xchg
cli
cmp
into
fisubl
mov
orps
fstps
pop
xor
ret
cmp
leave
push
insl
adc
add
xlat
movsb
test
mov
cwtl
shll
sbb
add
xchg
repnz
fadds
xorb
cmp
sub
pop
mov
stc
fs
xchg
popf
xchg
xchg
outsl
fstl
lock
call
inc
mov
ds
xchg
sub
test
ljmp
clc
aam
ds
imul
addr16
es
mov
mov
dec
sbb
xor
std
and
jmp
in
stos
push
inc
xor
or
repz
out
sub
jo
lods
inc
in
sub
push
lahf
add
adc
cmpsl
xchg
cmp
idivb
fisttpll
into
fnsave
dec
mov
and
popa
fnsave
inc
xchg
imul
xor
sub
leave
je
pop
mov
pop
mov
sub
repz
jno
aam
in
call
loop
fwait
aas
lea
cwtl
xchg
xchg
inc
mov
xor
xor
lcall
test
ret
pop
add
and
inc
mov
sbbl
push
xchg
in
ljmp
xchg
or
jne
scas
jp
cmpsl
lret
adc
jge
xchg
out
out
cmp
adc
xchg
mov
dec
stos
sbb
movsb
jbe
inc
orb
push
int3
add
push
mov
ja
sahf
add
stc
cmp
pop
inc
lock
aaa
and
push
fs
jne
mov
cmpsl
pop
adc
je
call
sarb
xor
cmp
mov
mov
mov
in
or
les
or
call
mov
pop
js
imul
daa
nop
xor
mov
jb
xor
inc
hlt
fimuls
adcl
aad
daa
ret
fucomip
bound
push
jp
sub
push
int
stc
sti
ficoms
ds
pop
iret
out
inc
pop
bound
out
xor
sub
fidivs
in
push
and
popa
pusha
push
xchg
adc
and
dec
and
aad
push
insb
movsb
imul
add
and
add
add
add
loopne
adc
add
adc
lock
add
add
add
lods
push
add
lods
push
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
lods
push
add
stos
push
add
push
add
lods
push
add
push
add
lods
push
add
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
scas
push
add
lods
push
add
scas
push
add
lods
push
add
scas
push
add
lods
push
add
push
add
lods
push
add
push
add
gs
jne
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
gs
xor
fs
insb
add
imul
insb
add
jb
imul
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
gs
insb
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
push
add
add
add
push
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
scas
push
add
add
add
scas
push
add
add
add
scas
push
add
add
add
scas
push
add
add
add
scas
push
add
add
add
add
jae
jb
gs
je
imul
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
je
gs
outsl
popa
jb
push
jns
add
add
gs
je
push
imul
inc
add
add
jb
popa
insb
imul
arpl
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
pop
push
jb
arpl
outsl
jne
gs
jbe
outsb
je
add
push
push
js
arpl
gs
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
xchg
cmpsb
xchg
aas
mov
add
fidivrl
mov
mov
fcompl
adc
ss
ja
ret
xchg
lock
repz
inc
xchg
pop
imul
loope
mov
mov
cltd
mov
imul
adc
stos
add
addr16
scas
and
icebp
add
or
mov
jge
xor
and
mov
cmp
sahf
mov
xchg
or
repnz
or
lahf
sti
pop
xor
lock
xchg
aas
lods
mov
pop
jo
cmp
fmul
xor
bound
imul
or
roll
sub
xchg
xchg
es
shrl
stos
mov
adc
sub
pop
mov
je
lods
inc
sub
mov
pushf
mov
bound
jns
mov
fsts
sbb
add
push
inc
xor
or
pop
add
lock
pushf
pusha
mov
xlat
cs
fs
jle
sub
cmc
xor
sub
arpl
in
inc
and
in
dec
pop
lahf
inc
pushf
fsubl
dec
pop
xor
mov
inc
jo
dec
adc
repnz
clc
dec
xchg
pop
cmp
sub
mov
loope
loopne
cli
outsb
bound
pop
arpl
stc
popa
mov
mov
je
loop
pop
pop
inc
ss
jecxz
push
cmp
test
addl
hlt
scas
aaa
mov
ret
dec
mov
je
in
jecxz
faddp
cltd
or
lds
push
in
jge
add
shl
ret
xchg
pusha
inc
repnz
in
fbld
pop
jae
push
lret
ja
xchg
add
lods
inc
mov
cmp
mov
jecxz
iret
sbb
and
out
xchg
icebp
xchg
xor
addl
or
leave
pushf
xchg
cmp
mov
mov
in
or
push
jl
lock
lahf
mov
cmp
jg
jecxz
repnz
shll
sbb
fisttpll
sbb
roll
cmpsl
dec
xor
mov
sub
cmp
mov
repz
lahf
mov
cmp
jge
les
bound
es
sub
and
test
mov
sub
lret
push
fnstsw
stc
xchg
pushf
add
inc
in
aas
mov
add
pop
out
fcmovnbe
dec
fld
lcall
fbstp
sub
into
mov
mov
mov
sbb
insl
pop
fnstenv
sbb
test
adc
sbb
sbbb
sbb
fnsave
rcl
aam
sub
leave
daa
sbb
xchg
lea
push
cs
xchg
js
stos
pop
lahf
sahf
add
inc
shlb
push
sbb
std
sarl
jns
mov
jb
xor
aas
mov
xchg
sbb
mov
lret
mov
jae
cmp
mov
ja
mov
imul
sub
jmp
movsb
pusha
icebp
inc
es
ds
pop
add
fwait
cwtl
pusha
xchg
mov
es
mov
lret
push
push
xchg
inc
fldcw
push
scas
sbb
cwtl
dec
pop
inc
pop
aaa
jg
adcb
or
push
dec
push
fisubl
pop
das
aad
dec
push
dec
dec
dec
popa
andb
fisubrs
sbb
jns
dec
inc
leave
mov
inc
or
pop
negb
shll
add
sarb
in
inc
inc
pop
js
xor
shll
pop
cmc
in
dec
jmp
add
roll
lds
adc
insl
pmuludq
stc
cltd
xor
mov
add
pop
xlat
scas
lea
xchg
add
cmpsb
sub
aad
cmp
inc
addr16
dec
mov
fistps
imul
inc
mov
loope
mov
mov
sub
aam
pushf
add
idivb
movsb
xor
add
dec
mov
aas
and
dec
pusha
inc
mull
mov
andl
sbb
mov
jae
adc
stc
pop
lods
push
js
sbb
int
roll
fcompl
jp
mov
mov
repz
repnz
pusha
sub
add
es
sbb
mov
gs
mov
or
out
xor
ret
je
mov
or
mov
cmp
push
insl
mov
push
mov
ds
cmp
out
pop
pop
mov
loope
mov
push
or
cwtl
mov
fidivl
xchg
jnp
push
inc
push
decb
push
mov
pop
fldenv
inc
jmp
addr16
test
enter
movsb
movsb
ficomps
mov
pop
pop
shlb
out
scas
cld
cmp
and
stc
xchg
inc
or
popf
mov
outsl
mov
pop
add
mov
push
lcall
sub
sub
add
push
pop
xchg
xor
std
in
mov
dec
or
cmp
push
sbb
inc
js
dec
ss
add
mov
add
pop
mov
mov
mov
inc
xchg
dec
jne
shl
jecxz
add
inc
cld
xchg
cmp
cmp
dec
out
inc
call
mov
popf
pop
pop
push
lcall
and
cmp
nop
push
pop
and
or
mov
sub
pop
lret
inc
cwtl
repnz
xchg
in
push
rorl
dec
rorb
sub
jecxz
std
sub
addr16
mov
or
jge
mov
and
out
xor
and
add
cmp
sbb
dec
lock
int
pop
xlat
mov
icebp
add
out
decl
jge
cltd
xchg
das
mov
dec
add
sub
pop
sbb
jle
test
test
es
xor
sbb
mov
xchg
push
adc
inc
pop
or
std
in
loopne
jne
adc
cmp
ds
and
xorl
cmpb
cmp
xchg
inc
lret
fwait
jbe
mov
jmp
fildl
push
push
clc
adc
pop
repnz
ja
xchg
push
arpl
fnstcw
dec
xor
and
gs
in
add
call
push
xchg
fs
aas
add
inc
repz
bound
mov
push
aas
mov
aam
xchg
or
inc
xchg
push
call
push
pop
hlt
mov
sub
leave
pop
cmovae
mov
sbb
scas
into
sbb
fs
sub
adc
lret
aam
cwtl
ret
sub
arpl
sbb
pop
sbb
repnz
test
es
mov
mov
int
lods
lret
sbb
or
mov
push
mov
loopne
or
dec
loope
and
mov
int3
xlat
int3
cmc
sahf
filds
ja
mov
mov
jo
pop
repz
xchg
in
jb
sbb
add
cmp
and
sub
shrb
xchg
mov
mov
shlb
pop
rclb
sub
jnp
lods
sti
cmp
addr16
and
mov
adcb
pop
sbb
xor
mov
sbb
sahf
or
push
cmpsb
mov
aaa
repz
add
add
adc
sub
and
mov
inc
rcll
inc
inc
sti
push
jb
xlat
add
movsb
fs
repnz
or
clc
mov
jb
mov
xlat
addr16
pop
mov
jnp
xchg
shll
test
sbb
mov
popf
icebp
sub
gs
jmp
xchg
ret
loopne
mov
lret
mov
pop
or
loope
or
sahf
je
pop
sub
mov
cmp
mov
xor
loope
dec
andb
jae
sbb
lcall
stos
xchg
adc
jno
push
ud1
test
in
fidivl
pop
shll
movsl
pop
push
push
aaa
jnp
sub
add
and
adc
fs
scas
sahf
xor
dec
insb
or
aas
mov
xchg
add
xchg
jno
lahf
or
pop
add
xchg
ds
xor
enter
inc
cmp
out
sbb
xchg
aas
dec
xchg
fwait
xchg
mov
push
adcb
push
int3
dec
movsl
lds
fadds
push
jl
mov
ss
mov
testl
lods
into
out
inc
test
arpl
push
sti
push
nop
push
push
lods
negb
test
je
pushf
sti
icebp
out
push
xor
das
dec
sbb
adc
pop
xchg
cwtl
pop
inc
movsl
xchg
test
arpl
push
xchg
xor
pop
test
push
arpl
jb
push
das
push
jnp
or
les
js
xchg
dec
in
sub
pop
cmp
dec
sbb
scas
lret
fidivl
scas
aad
loop
sub
xor
decl
mov
jne
add
fwait
mov
loopne
mov
sub
push
es
jp
mov
ja
fdiv
sbb
push
ret
lods
pop
stos
inc
xlat
daa
test
rcr
aaa
shll
jb
std
mov
push
jmp
mov
jp
pop
lcall
and
inc
clc
daa
pop
sahf
leave
movl
scas
scas
dec
divl
mov
roll
mov
insb
pop
mov
js
sbb
add
adc
adc
andb
int3
push
mov
jge
test
popf
pusha
sbb
fnstsw
cmpsb
xlat
fadd
cmp
adc
cmpsb
add
mov
mov
ss
jnp
lock
push
pop
lds
cld
fistl
push
inc
icebp
sbb
sbb
test
push
out
and
dec
mov
test
dec
push
add
nopl
pop
mov
adc
xchg
jbe
pop
adc
sti
sub
cmc
xchg
pop
inc
lds
and
fisttpl
cmpsl
ja
dec
rclb
or
imul
jo
push
jns
cwtl
adc
and
jns
xor
dec
mov
push
or
mov
sbb
mov
xor
dec
push
out
or
mov
sub
test
xchg
out
mov
mov
cld
nop
cs
cmp
push
out
mov
test
push
adc
fldl2t
dec
jmp
repz
insl
sbb
xor
jnp
popf
out
jno
addl
lret
add
mov
mov
loopne
lahf
jmp
out
pop
push
out
pop
pop
xor
xor
out
mov
ret
subl
out
je
xchg
ja
lea
cmp
jmp
or
inc
mov
sub
lret
sub
in
nop
lret
inc
ss
icebp
cwtl
stc
lock
shrl
dec
sbb
in
lret
in
out
xchg
lds
push
add
cltd
shll
xchg
loope
mov
ficoml
pop
pusha
adc
add
in
daa
mov
psadbw
aas
lea
fisubrs
or
insl
sub
pop
add
mov
xchg
out
push
lds
and
sti
xor
jo
scas
sbb
cmp
adc
mov
cmp
loopne
pop
xchg
test
dec
lds
cmp
push
mov
sti
pop
aam
mov
das
mov
push
pushf
fldenv
arpl
les
sub
xchg
std
rcll
cmp
push
ss
in
mov
cmpl
xchg
cmp
ret
xchg
push
mov
mov
pop
xor
repz
xor
xlat
into
mov
lods
add
das
lods
xlat
push
mov
jmp
push
fnstcw
retw
add
dec
test
xor
xchg
cmpsb
xchg
cwtl
xchg
mov
fsubrs
or
and
lret
lret
adcb
mov
lret
inc
shlb
sbb
scas
sbb
sti
push
fadd
mov
sbb
aam
xor
lea
xchg
shll
clc
cmp
sub
jmp
dec
clc
pop
or
or
adc
outsl
enter
sti
cli
xchg
xchg
xchg
sbb
mov
movq
adc
int3
inc
and
mov
fstps
loope
cmp
mov
pop
and
xor
xchg
jno
xchg
lcall
cmp
jmp
xchg
cli
lds
push
fildl
push
pop
jb
pop
insb
hlt
mov
fsubl
jmp
inc
jmp
shrb
xchg
mov
push
and
cmc
push
push
inc
mov
test
push
int3
lea
xlat
fxch
out
xorb
aaa
fcomps
mov
lret
lods
cmp
cmpsb
inc
mov
or
ss
xor
mov
pop
adc
js
test
cs
dec
push
je
jl
in
mov
and
andl
push
push
pusha
sub
push
mov
xchg
jp
aad
sbb
dec
outsl
stos
jg
mov
mov
int3
jnp
adc
push
andl
in
or
cli
imul
mov
mov
xlat
pop
jo
and
out
push
jnp
shr
std
mov
lret
scas
push
fs
aaa
pop
je
push
jnp
enter
mov
cmp
arpl
imul
adcb
stos
push
jecxz
xchg
cmpb
int3
xlat
test
outsb
into
inc
insb
lods
lret
inc
add
jo
jmp
call
pusha
rcrl
push
jge
jns
sbb
pop
rorl
or
outsl
in
cltd
subl
mov
push
fsub
push
xor
aam
repnz
jno
stos
es
add
jle
xchg
sarl
jle
mov
fstl
mov
lret
sbbb
push
lods
adc
or
outsl
cmp
insl
scas
pop
push
sahf
jbe
push
sub
jg
and
cmpsl
mov
stos
mov
test
les
sbb
push
imul
sbb
aad
add
mov
testb
ljmp
rcll
fwait
sbb
or
jno
mov
out
loope
pop
adc
push
jnp
test
mov
cmp
ss
mov
push
jle
pushf
hlt
iret
mov
pop
shl
or
jl,pn
sub
js
cmp
xor
addr16
gs
xchg
xchg
loop
or
or
adc
fisubl
fsubrs
in
and
add
mov
push
je
sub
jae
add
xchg
out
into
mov
or
subl
dec
test
cmp
xchg
and
xor
sub
int3
adc
fistpll
mov
mov
xchg
loop
pop
or
xchg
mov
aad
lea
lcall
lret
loop
ds
sub
fsub
sub
aas
jns
inc
jae
xchg
nop
notl
jl
mov
xchg
mov
xchg
idiv
shlb
std
ktestw
cmc
stc
add
rorb
jnp
repz
mov
sub
inc
and
jp
popaw
add
xchg
push
mov
and
add
mov
std
xchg
sub
jo
xlat
push
scas
fdivs
lahf
dec
push
push
aaa
out
xor
pop
inc
shl
es
jo
hlt
or
mulb
jbe
mov
pop
mov
mov
push
xchg
pusha
fsubs
lea
inc
movsb
pop
loop
xorl
dec
pop
repz
xor
sbb
shrl
andnps
and
adc
lds
repz
inc
add
pop
test
and
aad
cmc
aas
rcr
lock
xor
in
out
mov
jnp
clc
mov
xor
push
mov
adc
aad
mov
arpl
xor
je
and
shrb
sub
test
mov
pop
fwait
scas
inc
cmpsl
sub
adc
xchg
arpl
push
fadds
outsl
sub
jp
test
cmp
and
clc
jle
jno
push
xchg
jno
and
dec
adc
negb
lods
dec
mov
sbb
scas
ja
ljmp
mov
mov
add
leave
and
icebp
test
add
call
xor
mov
out
nop
lahf
inc
out
pop
or
ljmp
mov
cmp
out
cwtl
xchg
cmp
jle
cmpsb
xchg
pop
or
insb
push
sub
sbb
push
add
xor
mov
jnp
fld
pop
pop
shlb
fldlg2
push
sub
dec
xchg
inc
pop
in
aad
stos
arpl
mov
mov
mov
clc
or
aad
hlt
xlat
fdivrl
xor
sti
fsubp
daa
sti
repz
inc
loop
cwtl
sarl
push
sbb
adc
pop
add
and
xchg
lret
ret
ja
je
test
jmp
push
repnz
rorb
add
lret
rcll
addr16
dec
dec
in
or
adc
xor
aam
dec
xchg
adc
xchg
push
lret
faddp
js
out
leave
cmp
orb
mov
hlt
dec
push
notl
pop
bound
push
fs
arpl
mov
insb
lret
push
test
ds
adc
pop
add
mov
test
jp
sub
adc
ja
iret
add
mov
pop
xchg
into
dec
adc
fistl
pop
lret
in
xchg
arpl
mov
xchg
outsb
daa
iret
ret
cli
shrl
pop
mov
out
pop
arpl
jp
inc
cltd
divb
and
dec
cmp
test
in
mov
ret
and
bound
xor
dec
xor
push
dec
popf
pop
test
ret
out
xchg
sub
mov
rolb
or
popf
idivl
enter
in
mov
bound
sub
add
js
rorb
adc
stos
cmc
xor
pop
fnstsw
movsb
cmpsl
adc
xchg
jge
clc
stos
sub
adc
and
test
stos
ja
fs
and
iret
shl
fidivrl
add
in
jae
and
mov
lods
test
mov
mov
negl
inc
sbb
mov
inc
repnz
and
inc
ljmp
and
imul
mov
inc
divb
rol
shlb
leave
ret
mov
adc
in
loop
dec
out
mov
xor
fistl
sbb
xchg
idiv
loopne
cs
inc
push
gs
push
add
pop
or
pop
fisubrs
push
aas
add
sbb
cmp
and
sub
or
test
jnp
adc
adc
mov
adc
xchg
sub
dec
add
sbb
hlt
fcomps
inc
mov
xor
aaa
test
ds
sub
push
adc
nop
repnz
test
jae
adc
pop
sub
outsl
and
mov
ds
sbb
out
mov
lock
and
or
pop
adc
testb
or
or
dec
test
loop
adc
cmc
mov
adc
sbb
ja
pusha
in
fucom
push
mov
sub
es
shrb
fwait
jle
rcrb
jno
shll
loope
xor
in
push
pushf
adc
push
push
ja
mov
das
fsubp
lds
sahf
jecxz
dec
xor
cmpxchg
ljmp
mov
enter
sarb
mov
xor
sbb
pop
stc
mov
sub
sbb
insl
add
sbb
jecxz
xor
xchg
jl
mov
insl
test
push
lahf
out
ret
xchg
and
aam
mov
push
cld
daa
loope
sti
sub
add
int3
call
cltd
jle
mov
inc
inc
mov
cmp
aaa
nop
icebp
push
push
jl
out
insb
and
mov
mov
inc
fwait
hlt
sub
sub
xor
cmp
into
in
pop
mov
mov
mov
or
pop
add
push
xchg
in
add
and
push
adc
xor
adc
aam
leave
jbe
pop
imul
push
ror
cwtl
add
xchg
jnp
aad
cmp
jo
sbb
pop
inc
repz
mov
mov
mov
shlb
ds
stos
pop
xor
inc
sahf
cli
scas
adc
mov
cmc
pop
test
cmp
out
jp
fstps
jae
stos
test
mov
lret
dec
shl
xor
pushf
clc
icebp
mov
mov
mov
xchg
add
std
xchg
or
roll
adc
sti
xchg
movl
sahf
adc
pop
out
xchg
pop
loop
push
cmp
aam
xchg
arpl
ss
mov
cmc
cwtl
int3
lods
push
dec
mov
popa
popf
daa
pop
jp
mov
xor
loope
xchg
ja
adc
mov
inc
pop
sbb
test
xor
aas
lret
push
and
rcl
shlb
popa
enter
xchg
leave
push
ret
pop
pop
xor
jmp
sbbb
lods
test
pop
popa
push
dec
cmp
mov
inc
call
pop
xchg
rorb
aam
lcall
mov
loope
or
adc
and
mov
inc
cmp
pop
fsts
lahf
mov
cmp
addr16
xlat
jbe
push
out
imul
test
mov
cld
ljmp
scas
or
dec
daa
insb
pop
insl
cli
cmp
outsb
xchg
or
enter
outsl
mov
inc
inc
xchg
mov
cs
mov
repnz
or
push
xor
jb
xor
mov
pusha
lahf
in
inc
sbb
fsubrs
xor
out
daa
and
push
iret
out
push
test
aaa
std
dec
fcompl
adc
or
mov
test
ss
and
out
jecxz
adc
mov
inc
jb
jg
stos
push
cld
movsb
call
in
dec
in
jno
xchg
cmp
test
arpl
pop
subl
fwait
xor
mov
ret
mov
mov
inc
daa
loope
lock
es
ss
or
cmc
sahf
cmp
lret
popf
push
cmp
mov
cmp
inc
or
xor
sub
xchg
xor
and
sub
push
pop
sub
scas
lods
lcall
push
imul
add
nop
repz
int3
aaa
jb
aam
cli
cmp
repz
lods
mov
dec
mov
das
aas
push
xchg
ljmp
fdivl
stos
pop
or
out
add
sub
fildll
test
cmp
jmp
clc
arpl
mov
lods
lret
xchg
mov
jnp
popa
sbb
dec
jmp
insl
leave
cmp
mov
jno
push
sahf
loopne
std
dec
or
and
push
repz
adc
gs
or
cli
inc
sbb
jnp
mov
in
aam
fldcw
scas
pop
filds
mov
inc
shlb
repnz
enter
pushf
push
jle
sub
mov
sbb
pushf
sub
mov
push
nop
xchg
mov
fs
jne
out
andl
cltd
test
push
sub
fmuls
mov
rorl
in
stc
out
stc
dec
cwtl
dec
cmp
cmp
test
push
sarl
or
jo
inc
cmpsb
lea
add
in
push
inc
mov
inc
cld
out
inc
movsb
pop
cmc
push
js
mov
mov
push
pushf
pop
and
sbb
pop
sbb
insb
sub
add
shrb
mov
jb
inc
test
rorl
inc
mov
push
dec
sub
jmp
xlat
add
cmpsl
in
or
adc
sbb
mov
stos
loop
add
shll
shlb
push
out
sub
mov
dec
mov
rcrl
mov
cltd
xchg
dec
add
jae
repz
enter
int3
sub
xchg
add
cltd
mov
lock
cld
xchg
sbb
xchg
jnp
jg
cmc
xchg
imul
ja
into
std
fldenv
stc
jmp
pushl
jo
mov
xorl
cmp
cmp
rcl
jns
xchg
sub
dec
insb
push
inc
pop
sti
mov
or
insl
repnz
jl
and
test
jp
xlat
mov
test
cmp
xor
dec
xchg
inc
sub
adc
inc
mov
shlb
xor
ret
out
les
jne
push
and
pop
xor
call
clc
mov
and
mov
rcll
add
dec
nop
sub
mov
inc
sub
gs
sbb
sub
dec
fmul
push
mov
aas
imul
cmpsb
pop
xlat
roll
adc
outsl
cmpsl
push
xorb
mov
pop
pop
inc
stc
fadds
jnp
push
pop
arpl
or
push
push
jg
jg
in
sbb
push
cmc
mov
adc
mov
jno
fstpt
out
outsl
inc
jno
lea
ljmp
popa
mov
ret
lods
mov
mov
loope
test
fstps
cmp
adc
out
cmpsb
xor
stos
sub
stos
push
push
or
inc
push
in
fwait
push
repz
out
sbb
xchg
jno
jle
mov
test
push
cmp
shrl
add
out
and
fwait
and
lahf
add
jecxz
mov
inc
test
mov
push
sbb
push
sti
push
shl
mov
sti
push
push
enter
add
mov
in
mov
js
xchg
repz
jg
in
xchg
and
and
ja
cmp
cmp
add
shll
jl
inc
into
out
cs
btc
incl
lock
xchg
mov
div
mov
xor
jb
mov
cltd
mov
sbb
pop
lret
mov
jg
lea
lods
and
push
xchg
shlb
incb
sub
cmp
stos
pop
fnstcw
dec
adc
pop
faddp
xor
pop
les
push
mov
jbe
adc
loop
ja
in
mov
test
aas
xor
cltd
test
repnz
nop
mov
out
aad
sbb
aad
cmp
jl
mov
pushf
push
cwtl
mov
not
das
dec
aam
push
addr16
xchg
sub
dec
cmp
in
inc
lea
shr
popf
add
mov
mov
push
int
jns
jno
mov
out
pop
lea
mov
loopne
lea
xorb
inc
and
in
and
stos
jo
fwait
mov
jmp
cmpsb
pop
ret
orb
mov
shrl
shlb
in
mov
in
imul
iret
loope
in
inc
and
jmp
outsl
arpl
pop
or
sbb
je
adc
shl
out
dec
jae
in
dec
arpl
js
sbb
movsb
mov
test
inc
pushf
sub
adc
shlb
pop
and
fstpt
das
out
push
leave
xchg
inc
lahf
push
lret
insl
cli
jnp
movsl
mov
fcmovu
lea
shrl
cmpb
negb
repz
scas
mov
cmc
in
mov
mov
jns
pop
repz
add
and
dec
add
jo
cld
out
outsl
test
lret
rclb
nop
adc
test
xchg
test
das
sub
arpl
and
mov
push
mov
icebp
pop
movsl
mov
rolb
inc
je
inc
sub
inc
pop
les
mov
mov
dec
sti
insl
jbe
add
icebp
or
aaa
and
int
pop
aaa
stos
inc
adc
sbb
mov
imul
xchg
repz
xor
mov
sbb
mov
xchg
fmull
out
test
sahf
sbb
xchg
fisubrl
or
imul
icebp
or
pop
jp
and
in
jo
push
inc
cmp
push
sbb
scas
lods
cmp
cmpsl
xor
mov
jp
out
add
xor
xor
inc
dec
xchg
add
lcall
repz
push
out
mov
pop
cs
mov
adc
fldt
or
or
sbb
ret
jg
dec
xor
fs
inc
push
repnz
shrb
sub
js
mov
cmp
xor
inc
rclb
pushf
cwtl
rcrl
inc
iret
mov
inc
mov
out
int
push
mulb
popf
inc
mov
push
icebp
mov
lock
jecxz
sub
adc
mov
pushf
cmp
fdivp
xor
and
mov
ret
xchg
mov
fstp
sti
cmp
divb
inc
cmp
lods
xchg
adc
mov
in
sahf
mov
in
xchg
cli
sub
pop
push
imul
inc
inc
mov
sub
fsubr
push
push
jmp
fs
pop
call
out
outsb
jl
xlat
cmp
xchg
add
and
jl
add
sub
jmp
icebp
add
cwtl
push
jmp
mov
fxch
imul
jmp
xor
rcl
orb
sub
push
sub
adc
jo
ss
stc
and
adc
push
addl
ja
adc
or
fdivrs
jne
xor
add
xor
subl
jno
jbe
xor
pop
dec
pop
data16
push
sbb
dec
cmp
ret
mov
movsl
pusha
loop
dec
insl
fidivl
lret
jnp
rcl
jle
enter
dec
dec
stos
sbb
sbb
sbb
fisubrs
mov
loope
push
aad
adc
lret
push
jmp
pop
repz
push
in
dec
jo
or
sarb
sub
jne
loope
iret
adc
std
push
xchg
aad
jl
cmc
gs
dec
sbb
xor
lods
mov
fidivs
pop
mov
stos
jmp
fsubrp
xor
iret
loope
dec
test
decl
jbe
and
repz
in
jns
xchg
xchg
inc
lods
std
cmpsb
inc
loop
push
stc
or
fidivs
jns
sarl
shll
sbb
cmp
xchg
pop
sub
stc
into
mov
inc
dec
jle
mov
rclb
sub
sahf
mov
fidivrs
lods
lods
mov
jbe
pushf
shll
ja
rcl
push
mov
arpl
dec
nop
out
xchg
mov
sbb
sbb
mov
inc
adc
call
movsb
pop
out
and
pushf
cli
xchg
cmpsb
or
sarl
adc
cmp
cmp
jl
sub
into
mov
and
pusha
push
mov
out
call
test
int
lret
xchg
subb
cmp
pusha
sbb
in
and
ffreep
pop
repnz
subb
sarb
xchg
sub
fildll
and
cmpsb
sub
cmpsb
xor
mov
push
out
sti
or
test
hlt
and
and
inc
mov
inc
cmp
hlt
mov
sbb
xor
lret
test
inc
int3
mov
pop
sbb
mov
xchg
rcrb
test
std
daa
sti
sbb
lea
xchg
or
out
jle
xchg
xchg
repz
scas
pop
jp
movsl
inc
xchg
xchg
mov
or
stos
out
xchg
movsl
cltd
push
lcall
adc
mov
test
call
test
mov
mov
shll
insl
push
imul
xchg
sbb
cltd
fisttpll
pusha
adc
jae
ret
add
push
out
aaa
jo
nop
push
out
pop
movl
push
out
push
inc
es
add
sbb
stos
sub
mov
pop
or
push
xor
and
cmp
loope
mov
cmc
shrl
sub
nop
movsb
pop
clc
dec
and
cmp
and
out
dec
push
sub
jae
roll
js
mov
out
imul
push
inc
test
jle
testb
pop
sti
pop
inc
fsubrl
sbb
inc
lds
jmp
jle
mov
sub
test
sbb
pop
in
jmp
mov
popa
add
and
pusha
push
jl
xor
stc
and
or
push
push
pop
loopne
jns
cmp
js
jb
fdivs
and
pushf
pop
xchg
mov
and
pop
cmp
cmpsb
xchg
jecxz
imul
insl
bound
adc
test
orb
xor
push
jmp
or
out
xchg
push
sbb
adc
movsl
and
insl
and
repnz
xchg
out
sbb
aas
in
in
jne
cmp
roll
iret
xor
jecxz
and
pop
sub
mov
push
xor
gs
cli
inc
leave
fs
inc
xchg
aaa
std
pushf
or
sbb
cld
lahf
xchg
sub
fbld
xor
jbe
dec
cmpb
inc
pop
sbb
rcll
les
hlt
int
xchg
and
out
jg
ljmp
icebp
cmp
pop
add
push
cmp
push
mov
jae
mov
cmp
dec
sarl
test
sahf
adc
insb
pop
sbb
push
leave
xor
cmpsb
fchs
inc
xchg
enter
cmp
lods
lods
lods
scas
pushf
push
aas
and
lret
js
cmp
push
inc
xchg
inc
sarl
cwtl
in
jp
mov
int
setbe
repnz
dec
mov
xchg
je
push
aas
adc
adc
xor
scas
sub
mov
lds
dec
outsb
lea
dec
js
pop
cwtl
sbb
les
insl
out
push
add
pop
jo
lcall
ficoms
outsb
adc
mov
lahf
and
mov
arpl
cld
ucomiss
dec
sub
out
ficomps
out
sbb
clc
adcl
xor
mov
pop
adc
cmp
cltd
daa
fld
imul
sbb
sbb
pusha
fwait
push
in
push
pop
mov
repz
hlt
xchg
lret
and
push
hlt
mov
cmpl
xor
jo
stos
lret
jmp
jnp
pop
mov
addb
add
dec
add
adc
pop
cmp
jg
cmpsl
inc
fsubrl
rcll
hlt
cltd
out
stos
xor
push
pop
popa
inc
aam
push
mov
push
stc
data16
xlat
dec
cmpsb
int3
pushf
jae
dec
insl
mov
sar
repnz
ret
lret
movsl
dec
jp
mov
xchg
cmp
sbb
dec
fimuls
dec
mov
in
mov
aad
sbb
andb
and
shlb
into
push
push
negb
mov
pop
xchg
pop
dec
jb
lcall
or
popa
jecxz
adc
cmc
negb
jae
cltd
xchg
mov
stc
xchg
pop
xor
fidivs
push
and
lock
jne
gs
push
addb
cmp
shll
xor
inc
mov
aas
out
add
inc
sub
lods
adc
jecxz
add
icebp
imul
inc
or
imul
and
xlat
mov
pop
jg
clc
fcompl
daa
cmpsl
fmull
mov
adc
shlb
inc
mov
mov
and
repz
sbb
xor
sarb
jmp
stos
xchg
jnp
das
notl
leave
movsb
cwtl
stc
and
cwtl
in
jg
mov
xchg
repz
sub
adc
stos
ds
jno
push
mov
xor
nop
xlat
insl
jl
iret
push
and
shl
and
cmc
dec
mov
xor
fsubs
inc
fldenv
jp
addr16
xor
lcall
lock
adc
out
push
jmp
dec
repnz
notb
and
xlat
xor
nop
mov
cwtl
cmp
jg
and
pop
cmc
test
xchg
out
push
pusha
cmp
inc
mov
xor
outsl
in
mov
pop
movsl
into
mov
sbbl
mov
inc
mov
test
int
xor
in
inc
jbe
mov
lea
negb
or
jo
rorb
testb
mov
lret
lock
loop
mov
sti
movb
pop
sbb
add
cs
shl
inc
xorb
xor
enter
jbe
aad
movsb
push
jno
sub
adc
sub
or
lock
loope
push
pop
add
jp
or
sbb
mov
cmp
stos
inc
jge
call
gs
outsb
out
test
cwtl
push
into
inc
xor
cmp
push
pop
out
rcl
mov
movl
push
ret
js
stos
mov
cmp
in
jp
stc
jecxz
jge
sbbl
adc
pop
and
xor
dec
pushf
jge
inc
scas
sub
xor
xchg
xchg
cmp
cmp
lcall
dec
pop
leave
pop
dec
pusha
jmp
rorb
mov
adc
adc
out
or
rolb
test
nop
inc
cmp
ret
sub
repnz
push
rolb
fwait
bound
and
pop
scas
inc
lds
mov
test
cmc
scas
xor
cmp
sub
dec
add
out
enter
sub
sub
out
mov
and
stos
mov
dec
mov
dec
in
pop
jo
mov
pushf
test
mov
lds
rclb
xchg
sub
mov
fs
push
lods
push
lea
mov
arpl
sbb
and
push
cli
data16
jecxz
rclb
aaa
cmpsb
add
and
cmp
add
push
in
test
jnp
mov
loop
cld
mov
ret
inc
cmc
js
mov
pop
cltd
jmp
int3
stos
pop
les
aas
lret
sbb
adc
mov
inc
repnz
xchg
faddl
mov
sarl
shld
lcall
shl
movsl
pop
add
lret
and
mov
loope
stc
out
je
push
dec
push
xchg
pop
xor
push
jbe
in
in
or
call
packssdw
jbe
jl
jno
mov
inc
fld
rclb
adc
ljmp
add
jnp
test
jnp
ljmp
int3
fistpl
nop
imul
push
cltd
add
mov
mov
pop
and
ss
mov
xchg
adc
push
mov
rcrl
lret
rcll
jno
jnp
ret
adc
jne
scas
scas
ror
aaa
adc
repz
aam
in
cmp
mov
in
stos
scas
popa
mov
add
sub
pop
popf
pop
jns
jb
ret
movsl
xor
push
les
xchg
clc
add
sarb
or
lret
imul
cmpsl
movsb
fwait
mov
mov
adc
sub
mov
dec
adc
sti
jecxz
sub
cmp
dec
dec
lcall
mov
cmp
push
in
cld
cld
dec
push
mov
pop
mov
hlt
xchg
notl
leave
out
gs
aas
lret
pop
jmp
add
int
hlt
mov
in
in
mov
into
push
cltd
jae
into
cli
cmp
mov
inc
inc
fnstenv
mov
dec
sti
out
and
popf
or
push
addl
pop
imul
insb
mov
int
jg
daa
jns
adc
push
hlt
mov
lea
ljmp
fwait
lret
mov
or
mov
aaa
inc
andnps
daa
mov
and
xor
add
mov
xchg
test
rcl
push
shll
xor
aam
in
dec
lds
stc
cld
movsl
jecxz
pand
cs
mov
stos
adc
ret
jmp
inc
imul
push
call
jns
repz
and
adc
sbb
mov
mov
ljmp
std
subl
dec
mov
out
lahf
mov
cmpsb
adcl
jo
xlat
insb
mov
inc
ret
sub
cs
jp
lods
dec
mov
xor
pop
dec
cld
loope
push
outsl
shrb
mov
adc
std
inc
inc
adc
dec
pop
dec
cmc
cmc
sub
push
jns
das
jbe
cmc
jge
pop
out
dec
push
cmp
cli
movsb
negl
fsubs
push
inc
dec
mov
adc
rorb
add
popf
movsl
add
inc
mov
inc
movsb
adc
das
push
mov
add
ljmp
fisubrs
add
add
dec
sbb
bound
fidivl
test
lods
mov
push
xlat
lcall
imul
lea
mov
cmp
data16
jmp
dec
adc
int3
xchg
sub
fisttps
stos
cmpsb
sub
mov
mov
mov
clc
out
push
sub
fldt
sub
cmp
mov
ljmp
ficoms
pop
cld
and
arpl
push
xchg
daa
ljmp
je
cmp
dec
fwait
mov
mov
ret
fst
imul
fs
pop
popf
inc
int3
pushl
mov
dec
jge
fsubl
xchg
adc
lret
fs
push
hlt
cmp
pop
and
jno
sub
add
out
shll
jg
aam
pop
fwait
jns
mov
js
ljmp
rcrl
push
inc
inc
xchg
dec
lret
xchg
pop
out
mov
inc
or
pusha
add
xorb
out
test
xchg
mov
aaa
mov
jl
sbb
sub
push
jmp
pop
iret
mov
sahf
jg
roll
jae
sbb
xor
pop
jecxz
outsl
arpl
lahf
test
mov
pop
mov
jno
test
add
aas
call
xchg
cmpsl
jge
mov
imull
and
xchg
push
lods
test
sbb
loopew
sar
leave
out
mov
sbb
lock
mov
push
pop
in
hlt
or
iret
test
imul
shr
scas
nop
jnp
rcr
out
sub
fsubs
rolb
fildl
lods
mov
fldz
mov
cld
adcb
jnp
lods
mov
repz
nop
xchg
push
push
mov
add
mov
mov
push
add
lods
dec
cmpsl
lods
mov
xlat
dec
in
pop
frstor
push
jnp
in
push
and
sti
mov
jbe
jge
aad
cmp
push
sub
mov
or
xor
test
or
not
or
insb
add
jg
fwait
rclb
jae
js
arpl
adc
pop
fdivrl
jge
lods
mov
mov
and
cmc
xor
cmp
lds
mov
or
leave
ja
and
xchg
icebp
inc
dec
ret
cwtl
test
pop
mov
jg
mov
fbld
sahf
cld
inc
stc
cmp
cmc
out
pop
pop
iret
lret
into
pop
nop
aad
ja
adc
push
mov
mov
lret
and
and
test
xchg
ljmp
push
hlt
ljmp
pop
and
dec
adc
jnp
mov
movsl
or
cmp
add
test
mov
push
inc
test
int
ja
lods
test
loope
xlat
shrb
cmpsl
std
imull
xor
cmp
mov
call
sbb
sub
jle
sahf
test
mov
lret
sbb
jge
lea
mov
mov
push
or
cmp
in
mov
mov
sub
xchg
and
movsb
sub
mul
add
mov
into
repz
data16
mov
cmp
movsl
loop
pop
leave
xor
mov
mov
add
dec
jae
sbb
out
sbb
mov
lock
fwait
ret
mov
mov
adc
jg
xchg
push
cmp
sbb
add
in
adcl
repnz
fnstenv
mov
mov
dec
in
push
mov
out
rcrb
call
leave
scas
mov
inc
stos
aaa
jmp
fmull
pop
subl
jp
lods
rol
idiv
mov
jmp
mov
ret
mov
imul
or
push
and
mov
rcll
inc
aad
xchg
sahf
add
repnz
cmp
sbb
push
mov
dec
int
push
push
mov
ja
lock
pop
rolb
cmpsl
in
mov
push
dec
mov
mov
jp
leave
cmpsl
fcompl
jno
jp
test
jnp
and
pusha
ret
push
pop
mov
or
hlt
push
ss
push
in
fldenv
in
aaa
jmp
stos
mov
pop
xlat
xchg
insl
lock
pop
mov
insb
enter
sti
inc
push
das
sbb
add
add
mov
cld
mov
pusha
call
arpl
insb
imull
xor
jo
iret
loop
xchg
push
jl
push
cmp
mov
lock
dec
loope
or
notl
or
cmpb
js
setb
or
in
mov
stos
add
jle
push
jecxz
imul
loop
arpl
pop
mov
sbb
fs
mov
xor
loop
stos
fdivrl
jmp
mov
pop
xchg
rcll
pop
pushf
andb
ret
out
std
or
mov
pop
adc
jecxz
dec
xor
mov
stos
jmp
pusha
pop
dec
dec
xchg
out
cltd
push
xchg
aaa
or
cmc
jecxz
and
mov
imul
das
hlt
popa
cs
xchg
xchg
inc
cmpsl
incb
loope
sbbl
test
push
adc
jb
and
cwtl
and
dec
cmc
xor
call
int3
and
lea
push
mov
adc
je
sti
popf
jge
fistpll
and
stos
dec
mov
mov
inc
and
addr16
xchg
outsl
into
test
dec
pop
push
outsb
sbb
pop
sub
push
xor
sub
stos
xchg
lods
mov
mov
insl
inc
push
push
and
xlat
adc
iret
insb
cmp
jecxz
dec
ret
pop
jg
mov
jecxz
mov
test
out
fidivl
outsl
cmp
test
add
clc
pop
dec
xchg
inc
cltd
dec
sahf
add
mov
push
mov
adcl
and
rcrb
or
shlb
push
cmp
and
mov
repz
pop
push
lahf
stos
enter
cmpsb
adc
mov
repz
xchg
pop
pusha
lock
fcoms
mov
xchg
jno
nop
jnp
mov
mov
adcb
scas
pop
nop
cmc
ret
idiv
fwait
out
test
daa
push
sbb
movsb
mov
sub
nop
fildll
jg
add
push
pop
cli
data16
pop
xchg
adc
adc
inc
push
cltd
notb
les
cmp
cli
aad
cmp
mov
sbb
test
pop
sbb
std
mov
sbb
mov
shrb
lret
dec
shr
sbb
popf
inc
fdiv
mov
or
add
push
pop
test
xlat
cmp
cs
jnp
jno
dec
lret
out
aaa
xchg
push
pop
es
mov
lcall
xchg
lret
jge
mov
arpl
mov
cmp
mov
add
adc
xchg
cmp
inc
pop
call
bound
dec
sub
inc
jbe
xlat
cmp
ja
cmp
xchg
jbe
ret
cmp
out
push
lods
dec
dec
mov
xchg
popa
mov
cmpsb
cmp
lea
add
mov
pop
push
cmp
or
adc
sbb
cltd
inc
inc
rorb
or
mov
mov
testl
push
dec
jp
mov
das
sub
sbb
adc
jl
enter
pop
jmp
sbb
lods
imul
movsb
jp
mov
xor
fcom
adc
shlb
pop
and
pop
dec
addl
xchg
cltd
fnstenv
or
out
and
cmp
mov
xor
push
popf
fnstcw
rorb
dec
xchg
rcr
cmp
jns
push
pop
mov
or
add
mov
ja
sbb
mov
ftst
cmpsl
cmpsl
das
jae
arpl
mov
cmp
insl
int
imul
sub
ret
testl
repnz
jnp
sbbb
rorb
aas
push
mov
out
ja
pop
add
jle
mov
mov
add
adc
out
test
mov
out
mov
pop
cmpsb
add
or
enter
gs
sub
jg
icebp
fdivrs
lret
aas
mov
mov
cmpb
pmaddwd
add
inc
and
sbb
psubsb
mov
pop
jbe
out
lods
outsl
sub
jb
je
mov
xchg
mov
mov
and
sahf
dec
adc
leave
push
movsb
enter
mov
stos
push
xchg
rorb
adcb
jns
lods
leave
ret
into
scas
add
inc
push
lds
in
ficoml
lods
insb
fnstenv
loop
adc
repz
sbb
xchg
sub
cmc
pop
jne
and
push
adc
add
push
push
ficompl
out
jg
sub
lret
xchg
inc
fwait
out
xor
inc
outsl
inc
adcl
adc
cmc
or
pop
in
int3
or
xor
fldenv
mov
push
jo
xlat
cwtl
je
inc
popf
fs
in
xor
cli
popf
and
aam
jo
in
cmp
das
mov
insl
jmp
lock
sbb
scas
push
adc
sub
nop
add
das
mov
lret
mov
int3
mov
jns
push
pusha
cmpsl
xor
out
push
and
mov
lcall
xchg
ss
jb
addl
test
sti
xchg
ret
movsl
addr16
ljmp
imul
push
mov
adc
and
xchg
cmp
sub
imul
mov
lods
dec
insl
push
mov
xor
add
and
dec
dec
cmp
inc
mov
inc
hlt
imul
outsl
scas
pushf
pop
xor
jbe
mov
jne
push
aaa
cld
jne
add
fildll
push
adc
mov
out
insl
data16
mov
pop
push
push
and
dec
shll
xchg
std
leave
cmp
push
jbe
repnz
cmp
mov
mov
das
pop
leave
sub
push
nop
sbb
fbstp
cmpsl
sbbl
sbb
mov
mov
mov
out
push
outsb
cwtl
pop
sub
xchg
jg
outsl
inc
mov
lods
or
push
insl
inc
fcomi
sbb
lret
xlat
popa
inc
push
test
mov
xor
inc
pop
sub
movsl
cli
int3
and
fdivrp
cld
pop
fidivrs
dec
iret
jbe
cmpb
std
cmpsl
negl
jo
dec
pop
into
loop
pop
mov
clc
or
fcmovu
sub
cli
sub
cmpsl
fisubs
pop
bound
aad
mov
xorl
outsb
divps
mov
outsl
dec
fists
std
jge
and
cmpsl
cs
mov
mov
stos
and
jle
lret
std
repz
push
add
jb
fs
outsb
mov
push
cmpsb
or
jno
jno
push
jne
cs
cmpsl
pusha
mov
sub
pop
lahf
imul
push
or
les
insb
testb
sub
add
inc
scas
aas
mov
add
negl
mov
lods
int
sub
out
mov
cmpsb
xor
test
enter
push
mov
cmp
sbb
imul
ljmp
push
pop
or
lret
mov
lds
cmpsb
andl
cmp
mov
or
rorb
pshufw
push
sbb
test
int3
mov
cltd
pop
and
push
sub
mov
ja
ja
mov
jge
clc
push
mov
sub
push
fbstp
push
mov
dec
push
adc
outsb
out
and
pop
cltd
xor
jno
iret
daa
mov
push
adc
lahf
dec
pop
sub
je
fidivrl
popa
dec
pop
clc
mov
js
pop
inc
jp
cmc
nop
cmp
inc
mov
cs
scas
mov
outsl
dec
data16
cmpsl
sub
push
shl
int3
test
or
out
dec
mov
ret
xchg
std
sbb
inc
sbb
pop
and
ss
cmp
iret
cmp
mov
mov
loop
mov
or
jbe
fstps
xchg
mov
loop
loope
sarl
lcall
sti
lcall
adc
cmpl
jbe
adc
ds
and
mov
adc
cmp
orb
xor
jmp
jne
enter
ret
mov
or
dec
das
sti
jp
pop
xchg
mov
mov
mov
shl
sub
je
lds
clc
mov
or
mov
push
pop
xor
and
ljmp
popa
cs
shll
and
mov
sbb
sar
ljmp
xor
shrb
sbb
push
inc
popf
xchg
or
fdivl
loope
sub
ja,pt
sub
call
ret
add
paddusb
fwait
mov
flds
xor
add
aad
insb
nop
and
call
xchg
insb
and
jnp
adc
inc
jo
or
dec
sbb
inc
xor
cmpsb
xchg
cmp
fidivl
cltd
fadds
clc
sub
mov
sub
inc
bound
loopne
ret
jns
add
ror
dec
mov
push
imul
mov
cmp
movsl
push
lds
shrb
push
jle
gs
jns
fistpll
popf
mov
xchg
mov
lret
out
ret
sub
sbb
test
repz
mov
sub
jb
std
dec
xor
mov
gs
popf
mov
lret
rorb
fcompl
sbb
sbb
cmp
sbb
jmp
jecxz
lock
aam
pop
fsubrp
inc
sbb
outsb
pop
sti
sbb
test
and
gs
xor
and
push
push
call
jle
mov
rolb
into
xor
es
int3
mov
sub
test
in
or
xchg
outsl
or
inc
jb
inc
xor
nop
icebp
sbb
cmp
jo
fwait
jmp
das
lea
xlat
aam
fnstcw
jmp
ficomps
mov
lahf
push
jo
mov
xchg
xchg
je
mov
out
mov
or
mov
jns
hlt
pushf
bound
pop
stc
push
popf
out
and
and
push
cmp
leave
mov
outsb
fstl
jae
dec
sbb
dec
mov
out
das
dec
mov
push
lret
aam
mov
lcall
add
dec
in
in
ljmp
in
ret
adc
cmp
sahf
cmp
adc
shl
dec
sbb
js
cli
mov
add
pop
imul
cli
jecxz
hlt
aaa
test
cli
inc
repnz
orl
mov
lods
mov
xor
cmp
lea
pop
add
adc
aaa
jp
mov
add
loop
jo
icebp
and
fists
leave
out
sub
xor
mov
lods
pop
pop
lds
insl
pop
out
ljmp
adc
lahf
out
jno
dec
push
subb
cmp
xor
jae
dec
xor
addl
jmp
push
xor
mov
sbb
es
enter
lea
inc
cs
pop
sbb
cmp
insb
push
xor
inc
adc
pop
xchg
mov
xchg
mov
aad
ret
inc
fwait
pop
lock
mov
xchg
push
lcall
lahf
lods
dec
mov
pop
pop
test
aas
jmp
scas
lcall
int3
xor
xchg
add
xor
movsb
in
daa
jbe
imul
cld
mov
xchg
inc
into
test
sbb
fisubrl
rclb
mov
mov
and
sbbl
adc
out
subb
jmp
das
repz
add
and
mov
fcmovne
iret
sub
js
dec
and
lret
cmp
in
scas
mov
addr16
xchg
pop
or
insl
pop
cmpsb
sbb
lcall
jbe
xchg
jne
outsl
repz
icebp
adc
push
jnp
lods
ja
pop
les
lods
or
mov
roll
add
push
mov
lret
push
dec
cmp
clc
insb
gs
popf
gs
movsl
ljmp
test
mov
daa
mov
mov
and
sub
int
jb
inc
cwtl
mov
push
jle
outsb
das
cld
add
lock
imul
dec
jmp
sbb
shl
jmp
into
mov
movswl
popf
stos
and
mov
or
jo
push
ret
out
aas
add
fsts
mov
int3
dec
gs
outsb
jg
adc
mov
popa
push
sub
bound
int
aam
pop
sbb
out
rcr
ljmp
pop
loopne
aaa
mov
mov
fdivs
pop
mov
gs
inc
mov
xchg
xchg
cmpsl
mov
mov
sti
aam
stos
in
cmp
aam
out
cltd
jmp
and
outsl
arpl
cld
jmp
sub
cmc
stc
xchg
mov
push
data16
or
mov
es
loopne
pop
loopne
pop
pop
xor
fimuls
push
repz
pop
out
fs
scas
repnz
lds
lods
push
std
inc
or
adc
fidivl
arpl
cmp
addr16
cmp
fildll
jb
dec
push
jg
pop
xchg
ds
popa
xor
push
stc
adc
mov
inc
push
mov
pusha
cmp
aas
dec
xchg
mov
cmpsl
aad
pop
mov
daa
sbb
lcall
notb
xor
mov
mov
push
or
jne
xchg
mov
jg
mov
fidivrl
bound
mov
test
xor
inc
into
xor
fdivrp
jmp
fstl
pushf
mov
cld
pop
sub
mov
sub
xlat
cli
cmp
loop
push
jg
mov
xor
pop
dec
ror
mov
cmp
inc
data16
out
rorb
fs
jne
push
pop
cld
jns
mov
loop
and
movsb
or
lods
cli
std
xor
inc
sarl
popa
cmpsb
stc
mov
addl
rcl
jbe
subb
cmpl
incb
into
cmc
xchg
mov
jle
xchg
cwtl
mov
pop
cld
and
aad
add
testl
orl
lret
insl
jae
repz
or
loope
inc
repz
mov
ror
xchg
mov
adc
fisubs
leave
cmp
push
mov
and
mov
mov
out
imul
inc
jns
lahf
push
adc
and
cli
popf
mov
adc
or
fucompp
outsl
dec
pop
cmp
jo
fwait
jecxz
pop
mov
in
sti
scas
out
inc
adc
repnz
sahf
loop
push
cld
dec
sub
mov
aas
orb
rcrl
push
outsl
mov
and
inc
divb
pusha
call
incl
repnz
imul
xacquire
lcall
sahf
cmp
cld
outsl
out
mov
mov
fs
adc
mov
mov
mov
xor
aad
adc
jne
mov
sbb
lahf
or
mov
shr
nop
xchg
std
enter
ljmp
stc
aaa
fwait
rclb
or
push
lods
in
and
inc
aas
sbb
movsl
loopne
push
lods
or
loop
inc
xchg
mov
mov
test
add
icebp
mov
lret
xchg
and
xchg
pop
in
jmp
mov
fcmovu
scas
js
fistl
out
jbe
inc
xchg
lcall
sbb
hlt
int3
xchg
dec
push
mov
ljmp
in
lds
mov
xchg
xor
cli
xchg
dec
fcoml
jmp
jle
push
inc
fstps
pop
mov
sbb
mov
cmpsb
pop
movb
xchg
jns
jg
movsb
sbb
mov
incl
stos
in
cmp
nop
test
roll
or
push
outsl
jo
push
lods
push
cmp
aam
out
test
mov
fimull
mov
pop
add
out
and
cmc
jbe
mov
jne
jle
test
and
pop
subb
movsb
lret
xor
aad
test
mov
sub
push
cmp
xlat
rclb
pop
popa
loop
xor
push
out
jg
mov
mov
mov
mov
nop
cld
add
sarb
and
lock
push
and
aas
stos
mov
fistpll
in
lret
imul
adc
ja
mov
lret
fstpt
insl
pushf
add
jl
lahf
pop
dec
adc
mov
push
or
shrb
sub
jl
or
movl
out
loopne
mov
jns
fiadds
ja
mov
pmullw
shlb
cmc
jp
mov
mov
pop
fdiv
in
pop
push
iret
lahf
js
lods
and
in
js
or
ret
pop
inc
sub
clc
inc
jmp
jno
inc
xchg
cmc
inc
jmp
push
cmpsb
add
xor
mov
fnsave
sbb
pusha
mov
pop
cmp
cmp
hlt
pop
gs
xchg
arpl
data16
xor
xchg
sahf
mov
sub
jne
out
push
cmovnp
push
test
mov
lds
sub
out
repz
fnsave
jge
bound
jns
xorb
loopne
cwtl
outsb
pop
inc
inc
std
ror
mov
sti
fimull
cmp
jmp
movsb
test
aas
rcr
in
adc
sbb
cmp
inc
rclb
addr16
pop
bound
push
push
stos
test
popa
rcrl
add
in
enter
scas
adc
roll
pminsw
adc
aaa
add
xor
andb
xchg
inc
jb
lcall
out
and
pop
dec
xor
cltd
jecxz
bound
xor
stc
xor
mov
std
add
push
sub
and
adc
lock
xchg
push
xchg
and
loop
idivl
cmpl
lea
in
mov
in
jmp
lcall
add
lods
dec
push
ss
mov
adc
inc
or
sub
fisubl
jge
sbb
aam
sbb
adc
pop
loope
inc
aad
sub
lds
lods
sub
hlt
lret
xchg
mov
xchg
adc
mov
rolb
lcall
jo
adc
mulb
xchg
push
mov
fidivrl
loope
jno
xchg
jae
mov
or
push
mov
mov
ljmp
sub
or
aas
push
gs
pop
cld
push
push
lcall
je
sbb
jae
insl
and
jo
xor
mov
add
sbbl
or
push
dec
fdivl
fs
mov
push
xchg
inc
push
adc
xor
sub
movsl
cmpsb
jbe
sub
pop
sbb
es
dec
push
out
rep
fnsave
gs
mov
sub
arpl
pusha
shr
push
das
pop
sbbl
and
pop
cmp
loop
jl
sub
mov
in
fdivrs
and
outsl
rcl
cmp
xor
mov
stos
sub
mov
cmpsl
and
inc
pop
xor
or
or
lods
ja
lretw
test
notl
or
test
mov
pop
cmpxchg
loope
and
clc
sub
cld
insb
sti
in
cli
ljmp
lahf
stos
sahf
je
mov
dec
and
cmp
xchg
movb
repnz
cmpsb
jb
mov
cmp
pop
fbld
jle
jle
daa
rolb
das
test
mov
outsb
les
ljmp
mov
iret
outsl
pop
aas
fdivrs
dec
inc
pop
test
add
dec
push
add
test
pop
mov
mov
mov
scas
aaa
insl
loop
aam
mov
leave
mov
jmp
jo
mov
xor
fisubrl
test
and
or
jbe
cmp
movl
pusha
test
ret
xchg
cmp
dec
dec
sub
std
mov
inc
adcb
popa
shll
shrl
fdivrs
rol
xor
ljmp
cmpl
sbb
imul
repnz
scas
cmp
lret
dec
cmpsb
or
push
fs
add
roll
in
les
xorl
push
cmpsl
cs
xchg
lcall
mov
push
mov
sti
test
cmp
sub
lock
inc
mov
xchg
xor
outsl
fs
inc
scas
cmpl
cmp
ss
mov
jge
addr16
int
sbb
push
add
xchg
push
rol
mov
in
pop
flds
sub
dec
out
sti
inc
cli
repz
arpl
repnz
icebp
and
and
dec
mov
cwtl
fnsave
pusha
fldt
cmp
mov
dec
lcall
pop
jo
sub
mov
js
jb
imul
xchg
adc
mov
cmpsl
fs
cmp
test
arpl
jp
dec
hlt
into
mov
insb
sti
add
jge
addr16
sub
inc
sbb
leave
rcrb
je
dec
cmp
mov
out
out
jno
cmp
pop
push
inc
pop
test
push
jbe
dec
arpl
std
inc
inc
popa
stc
ss
sub
sarb
cmp
std
add
mov
jg
into
ds
lahf
mov
cmpsl
stos
dec
xchg
popa
jnp
std
pusha
jnp
add
mov
movsl
pop
push
lret
add
jge
cld
mov
add
jle
sarl
dec
ret
sbb
jge
mov
rorb
ffreep
mov
cmp
mov
ftst
lea
loopne
jb
arpl
push
sahf
pop
jecxz
lods
and
sbb
mov
mov
inc
shl
outsb
aaa
mov
or
xchg
adc
lret
rorb
sbb
lods
push
aad
fwait
and
mov
sbbl
or
xor
scas
adc
push
mov
xor
pop
stos
into
adc
pop
dec
in
mov
dec
jmp
call
cmpsb
shll
out
aas
xor
and
mov
js
mov
in
clc
add
lret
lcall
ja
jp
jl
pop
fsubr
xchg
dec
mov
add
je
xor
xchg
mov
outsb
pop
push
lret
mov
cmp
add
push
mov
sub
xchg
sbb
rolb
xchg
icebp
cli
cli
movsb
jno
cmp
insl
push
sbb
sbb
and
cmp
jecxz
mov
pop
sub
sub
adc
sub
jl
addr16
jmp
hlt
je
andl
jae
xlat
mov
aad
dec
rcl
pop
jo
mov
ljmp
icebp
jb
adc
mov
jae
jle
leave
mov
negl
hlt
and
int
addr16
hlt
pop
in
std
adc
xchg
stc
add
daa
pusha
push
sbb
sahf
shlb
cmpsl
bound
and
xchg
cmp
mov
add
shrl
pusha
repz
mov
xchg
rolb
pop
in
push
sub
ja
in
int3
aas
leave
imul
xchg
out
mov
ja
xor
mov
cltd
adc
icebp
xchg
int
push
je
out
xchg
and
std
adc
mov
pop
add
in
gs
mov
pop
mov
cmp
cmp
lock
cmpsl
xchg
popa
hlt
repnz
js
inc
jnp
pusha
cmpsl
shll
clc
fisubl
in
mov
adc
jle
mov
addr16
in
dec
cmp
adc
jp
xor
xchg
push
int
ljmp
out
cmp
dec
rcrl
mov
lods
push
mov
in
mov
xchg
pop
call
clc
xor
mov
ja
xorb
mov
fucomip
sub
outsb
cmpsb
fists
xor
push
inc
sarl
adc
pusha
stos
cltd
movsl
mov
aas
sahf
mov
cmp
adc
shlb
dec
push
femms
imul
xabort
mov
dec
and
lods
pop
fstl
mov
ja
or
movsb
rcrb
xchg
jnp
xchg
fists
add
lahf
pop
xor
shll
cld
test
fiaddl
lcall
xor
gs
inc
fmull
int3
pop
push
ret
sbbl
mov
pop
lea
or
xorl
cwtl
push
sbb
test
gs
in
xor
ss
jae
adc
jns
jecxz
jns
and
inc
mov
sbb
andb
cltd
mov
ficompl
mov
stc
mov
push
cwtl
pusha
adc
push
in
mov
pop
cmp
add
movsb
popa
gs
jle
rcrb
mov
and
dec
jg
repz
lret
inc
cmp
inc
std
aad
out
lock
xor
cwtl
jo
pop
and
std
push
jmp
stos
fisubrs
jle
mov
pop
movsl
pop
add
out
mov
dec
xchg
test
xor
sbb
mov
lcall
lock
sub
cmp
sbb
mov
aad
mov
cmp
loop
or
push
enter
sbb
mull
sti
lods
das
dec
add
lods
pop
or
outsb
cmp
xor
and
xlat
or
out
ja
ret
sbb
xchg
sub
jl
jne
jg
ret
lret
loop
ss
jp
out
sti
inc
fistpl
mov
cmp
cmp
mov
xchg
mov
push
jno
fcomps
jo
sarb
ja
cltd
add
out
sbbb
lret
lods
lret
inc
mov
jnp
pop
inc
in
cmpsl
push
push
out
xchg
adc
negb
push
mov
popa
enter
xor
scas
out
jno
xchg
mov
aaa
adc
xor
or
out
clc
loope
adc
push
mov
mov
xor
daa
jbe
fiadds
fucomi
mov
mov
fwait
mov
in
lock
jo
mov
aas
mov
std
pop
ja
loop
jl
scas
or
insb
or
daa
or
inc
jns
jg
and
roll
inc
jp
cmp
ret
and
and
daa
mov
test
test
mov
sahf
sbb
das
xlat
inc
leave
xchg
cmp
cltd
cmp
mov
popf
hlt
mov
push
mov
xor
pushf
daa
cmp
fcmove
jge
ja
sub
enter
sub
mov
mov
lret
ret
in
ret
mov
in
fisttpl
push
cs
mov
nop
fistl
mov
mov
adc
or
mov
popf
mov
mov
push
push
sbb
insb
jb
lret
enter
test
mov
pop
aas
inc
add
into
mov
push
jecxz
mov
dec
lcall
xchg
popa
std
inc
std
jbe
lret
lds
popf
testb
dec
scas
les
addb
mov
push
push
fnstsw
jle
lods
mov
pushf
xor
cmp
mul
push
dec
shl
out
arpl
push
dec
cs
sub
pop
mov
xor
sbb
outsb
adc
cwtl
bound
aam
pusha
push
stc
icebp
dec
outsl
int
fimull
and
mov
movsl
sub
jne
push
or
sub
jg
mov
les
xchg
inc
mov
mov
and
imul
and
loop
rol
lahf
xor
ljmp
rep
lds
cmp
in
pop
iret
or
fimull
aaa
or
push
xchg
sub
push
int3
loopne
outsl
add
push
test
push
push
xor
nop
fwait
mov
cltd
pop
add
lret
inc
mov
xchg
jnp
addr16
outsl
lret
adc
mov
mov
cmp
push
leave
and
in
xchg
xor
fistpll
in
mov
gs
fldcw
mov
push
and
in
push
or
in
sub
imul
jge
inc
lret
adc
scas
rclb
inc
inc
leave
ljmp
cmp
mov
dec
xchg
and
call
loopne,pt
lea
fsubrl
lea
clc
mov
shl
in
jg
imulb
lahf
jb,pn
scas
mov
idivl
push
xchg
adc
ss
shll
out
mov
data16
push
setne
jl
push
dec
fistl
jge
xchg
dec
mov
js
ja
jbe
gs
mov
adc
in
or
loope
sbb
pusha
mov
lahf
inc
push
mov
fdivs
aaa
jp
dec
add
dec
std
fsubs
adcb
loop
fimull
adc
mov
pop
enter
xchg
mov
jns
xchg
lods
outsb
or
inc
pop
aam
mov
sub
test
dec
es
aam
ret
xchg
push
mov
cmc
dec
fistl
jge
in
push
mov
push
cwtl
out
adcb
cmp
pop
call
push
xchg
ljmp
sub
or
mov
mov
lret
hlt
mov
dec
xchg
or
inc
adc
into
pop
jecxz
lds
arpl
std
sbb
sbb
jo
inc
mov
sarb
xchg
push
mov
cmp
fs
cmp
nop
cmp
mov
pop
or
in
jo
out
or
push
push
sub
std
jmp
add
mov
mov
mov
inc
repnz
push
adc
pop
pop
nop
and
insb
mov
or
cli
arpl
test
mov
test
add
in
dec
insl
fmuls
add
inc
jle
jns
xchg
cs
lds
movsb
xor
pop
cmp
mov
jnp
dec
cli
mov
xor
add
inc
divl
sti
mov
xchg
dec
test
test
xor
cmp
mov
pop
roll
mov
filds
ret
pop
jg
test
sarb
fdivs
shrb
mov
test
xlat
arpl
in
loope
and
xchg
xor
out
cwtl
pushf
ds
in
aas
cmp
dec
out
or
testb
dec
test
test
and
rol
cmp
cmp
test
sub
push
fcompl
xchg
cmpsl
lods
shll
lock
and
or
mov
aad
loop
mov
xor
mov
decl
inc
sbb
out
mov
pop
les
fdivrs
fwait
mov
mov
out
daa
jae
push
ja
xor
mov
jge
dec
adc
scas
adc
jg
cltd
outsb
pop
hlt
or
out
xchg
sbb
shl
fnstsw
fwait
dec
cwtl
into
push
nop
mov
jno
or
push
aam
pop
pusha
sub
in
or
addr16
insl
xchg
adc
jns
loop
dec
repnz
sti
negl
push
or
push
push
mov
mov
cmp
and
cmp
cmp
nop
add
cmpsb
lds
pop
adc
popa
mov
sub
jne
mov
shr
andl
ret
dec
bound
xchg
daa
fwait
in
divb
stos
jle
mov
dec
xchg
sub
movsl
dec
sbb
push
insl
xchg
mov
les
and
fists
scas
pop
dec
dec
push
test
in
xchg
pop
repnz
sub
fldenv
pop
jbe
push
loop
daa
dec
cld
fnstsw
stos
sbb
jg
jmp
inc
jno
cmc
cmpsl
sbb
outsb
ss
sahf
mov
repz
cwtl
push
fucom
cmpsl
stc
loope
push
sti
movsb
push
sbb
jae
inc
popa
mov
mov
out
xor
sbb
in
jecxz
ret
cld
jmp
dec
xchg
xchg
stos
add
xchg
adc
xchg
lock
sbb
jecxz
sbb
arpl
xchg
aam
insl
gs
mov
jbe
adc
test
aam
ds
or
adc
dec
push
repz
mov
lret
mov
stc
in
test
shlb
popa
pop
sub
fimull
inc
and
out
stos
dec
in
sbb
mov
xchg
xor
ds
and
into
push
jmp
xlat
xchg
adc
sbb
mov
xor
lock
les
shr
ror
pop
sbb
push
add
int3
lea
sbb
mov
out
cmp
mov
pop
incb
cs
or
clc
push
mov
push
out
stos
lock
pop
aas
push
lods
cmp
xor
ds
inc
push
lods
xor
mov
xor
aad
lea
adc
test
mov
or
arpl
inc
das
jb
sti
xor
pushf
xlat
outsb
sti
mov
lods
sahf
add
outsb
leave
push
in
push
jns
add
inc
jl
xchg
dec
mov
xor
add
repnz
mov
mov
pushf
and
mov
rorb
mov
cwtl
xor
push
and
subl
xor
adc
lods
mov
daa
jbe
cmp
loope
addb
rcll
dec
mov
mov
jmp
popf
addl
outsl
sub
add
pop
dec
mov
mov
sbb
add
ret
cmc
add
and
adc
mov
sbb
pop
ljmp
into
or
cli
or
inc
jle
dec
jmp
ficoms
mov
cmpsl
mov
fstps
adcl
mov
lods
in
mov
push
bound
pop
loop
xorl
pop
fisttpll
out
inc
iret
rclb
inc
cmpsl
mov
adc
push
sar
ja
add
lods
sbb
mov
test
pop
sub
addr16
mov
mov
hlt
sub
insb
ret
inc
or
lret
jmp
pushf
mov
push
sub
outsl
and
cli
pop
int
data16
dec
inc
add
mov
push
jbe
js
test
or
cmp
je
xor
push
pop
mov
flds
cmc
inc
out
sbb
mov
addr16
test
into
repnz
adc
cmp
mov
add
inc
mov
dec
xchg
add
lret
or
inc
imul
and
sbbb
movsl
out
cmpsl
cmpsl
fldcw
enter
lds
pop
jne
sbb
sub
jnp
dec
dec
rolb
divb
lods
icebp
pop
mov
or
shlb
adc
add
stc
aaa
adc
sbbb
sbb
cli
bound
loop
push
push
les
add
dec
les
lcall
pop
repz
and
adc
pop
das
lret
xchg
or
push
push
jmp
hlt
lods
sub
mov
andl
mov
divl
into
mov
pop
mov
dec
and
inc
gs
int3
sbb
sub
cli
lcall
rcr
mov
xor
mov
dec
xchg
cmpsl
fstl
es
test
prefetch
repnz
call
adc
adc
jnp
pop
iret
inc
sbb
mov
addl
push
ss
in
data16
fdiv
arpl
push
ss
mov
leave
loopne
jnp
decb
add
cmp
inc
loop
dec
jle
cmp
cli
xchg
mov
sahf
sub
mov
dec
dec
nop
addl
dec
ret
sarl
in
xor
mov
icebp
mov
call
inc
mov
cltd
cmp
jp
pop
ret
and
xor
sub
inc
movsb
int3
lret
pop
test
sbb
les
adc
sbbb
jnp
xchg
mov
and
addr16
xor
dec
fisubl
or
sbb
mov
imul
and
xchg
test
push
scas
das
push
xlat
mov
fdivl
inc
stos
push
test
in
xor
lods
dec
pushf
xor
fst
je
lcall
jg
sbb
sbb
out
cli
pusha
dec
enter
aaa
hlt
jne
adc
sbb
lock
jae
or
jmp
rol
les
sub
jno
jno
mov
add
jle
cmp
arpl
mov
sub
cmp
sarl
add
jne
cmp
cmp
sarl
adc
stc
data16
aad
xchg
fiaddl
fs
into
xchg
dec
mov
insb
add
lea
hlt
arpl
jl
add
lock
dec
sbb
in
mov
stc
sub
mov
js
movsbl
jg
add
lea
mov
pop
mov
es
pop
lods
aaa
loop
sbb
loope
das
fcom
cli
jge
sbb
inc
mov
mov
js
ja
mov
cmp
pop
cwtl
adc
pushf
std
push
mov
add
sahf
icebp
stos
lret
pop
cltd
sbb
add
mov
sbb
inc
sub
jle
stc
int
jle
cwtl
push
ficoms
loopne
test
shrb
popf
push
mull
outsb
lds
mov
aaa
addb
mov
inc
mov
inc
rol
outsl
test
cmp
shrl
andb
pop
pusha
sahf
fldenv
inc
xchg
dec
outsl
dec
adc
pop
in
pop
rcll
pop
pusha
dec
add
mov
int3
in
adc
std
fists
das
ja
add
mov
cmp
testl
xor
push
mov
cli
icebp
xor
out
and
call
inc
pop
sti
mov
mov
les
inc
push
pop
adc
push
cmp
pop
negb
ja
popf
ret
and
aas
add
mov
scas
lret
mov
inc
fptan
xchg
or
aas
les
mov
fisubs
cltd
cmc
push
and
iret
and
xor
sub
scas
xchg
jne
xchg
and
insl
pop
or
bound
stc
or
arpl
addb
sub
cmpsb
cmp
pop
dec
and
xchg
repz
sbb
dec
imul
outsl
xchg
js
dec
ds
cmp
pushf
pop
xchg
imulb
int3
out
stc
bound
xchg
jno
scas
mov
ret
out
cmc
or
xchg
adc
mov
pop
ja
sub
lcall
cwtl
and
iret
lock
xlat
movsl
xor
outsl
pop
jecxz
mov
idivb
out
pop
arpl
sub
lret
sbb
sub
or
inc
dec
test
push
lcall
out
loope
mov
mov
stos
mov
mov
mov
xchg
in
shrl
je
mov
push
and
rcrl
bound
cld
xchg
loop
daa
push
and
call
and
fldcw
mov
lock
out
in
outsw
gs
iret
setl
loopne
dec
fst
movb
js
fisttps
jl
pop
std
push
decl
or
adc
and
loope
dec
jb
mov
mov
das
loop
sub
sbb
clc
push
arpl
push
and
xor
inc
mov
imulb
ret
loopne
les
or
ljmp
clc
ret
into
mov
imul
add
mov
dec
or
shlb
mov
jmp
jecxz
lret
movsl
push
cwtl
imul
xchg
cmpsl
std
inc
mov
mov
fdivrs
sbb
xor
pop
jecxz
cs
mov
cli
movsl
cmp
clc
imul
movsl
imul
iret
push
cwtl
adc
adc
imul
cs
ja
push
mov
loopne
fdivrs
and
pop
and
xor
jns
pop
pop
and
inc
or
xchg
jns
inc
loop
cs
mov
ret
xchg
dec
pop
add
pop
scas
pop
inc
daa
inc
or
or
xor
stos
inc
fnstcw
jg
rclb
jle
or
fstps
shl
imul
std
sub
sbb
mov
aas
xchg
lea
sub
fstps
mov
cltd
aad
xor
xchg
push
outsl
sbb
pop
adcb
push
xchg
dec
jmp
cli
pusha
mov
nop
repnz
mov
or
sbb
lahf
ret
jg
popf
and
pop
cli
sahf
cmp
into
add
adc
or
inc
outsb
dec
or
test
into
mov
fildl
out
bound
xchg
mov
pop
bndstx
adc
pop
cmp
fsubr
sarb
adc
cwtl
outsb
mov
movsl
lds
pop
aad
pop
call
cmp
cmpsl
mov
enter
aam
in
sub
scas
pop
rcrl
scas
cld
inc
xchg
or
push
jb
int3
lret
jns
add
or
idivb
jae
inc
jo
xor
lcall
cmp
fwait
lret
xchg
ror
aam
and
mov
sub
push
sub
and
mov
ss
cmc
jae
mov
test
xchg
inc
mov
xchg
loopne
bswap
fcomp
addb
mov
mov
pop
popf
in
cmc
add
in
mov
ljmp
push
or
cmp
popa
imul
push
and
in
ja
mov
movsb
call
insb
daa
ror
leave
roll
and
mov
popf
dec
adc
sbb
jmp
and
mov
dec
dec
xchg
or
mov
js
mov
push
or
mov
test
mov
and
cld
pop
pop
jo
das
inc
xchg
ss
xor
test
ss
mov
dec
cmp
cmp
popa
ficoml
jno
pusha
movsl
push
mov
aad
mov
test
push
push
test
or
ja
movsb
lock
xlat
stos
xor
mov
xchg
fstpl
loope
push
imul
addr16
mov
fs
fldt
loope
in
jg
es
sbb
rcrb
aaa
and
in
add
mov
jno
test
das
movsb
test
mov
or
mov
lea
scas
rcl
push
push
int
and
test
test
divl
popa
xchg
in
push
ja
lahf
sbb
inc
adc
inc
and
std
jge
es
or
movsl
data16
cltd
fcomps
addr16
stos
js
adc
sbb
jl
inc
xchg
inc
push
imul
out
adc
lods
test
or
cmp
pop
xor
add
shr
pusha
sbb
nop
xor
add
repz
cmp
xchg
xchg
shll
cmpsl
pushf
and
mov
lods
in
repz
insl
fidivl
push
xor
mov
pop
jp
pusha
iret
out
xlat
lcall
rolb
pop
icebp
dec
and
cmpsb
addr16
mov
stos
jnp
aam
cmpsb
xlat
out
jmp
cld
mov
inc
leave
lods
lret
fisttps
cmp
push
mov
dec
xchg
jno
sar
dec
xchg
mov
or
sbb
loop
jne
mov
and
les
cwtl
pop
imul
lods
inc
push
inc
pop
jmp
ljmp
mov
std
lds
or
push
aaa
movsb
int3
mov
sub
xor
xor
fildll
push
pop
xor
xchg
jns
inc
repnz
int3
outsb
sub
lret
sti
or
and
cmpsl
imul
cmp
pop
daa
mov
dec
cli
test
xchg
fstl
xor
xor
inc
cmp
sbb
les
mov
test
lahf
adc
mov
add
push
and
and
iret
mov
xchg
sbb
dec
movsl
clc
pusha
inc
lods
pushf
popa
mov
sbb
aad
cmp
aas
jge
cmp
call
pop
dec
stos
addl
jnp
fwait
or
dec
jle
jge
pop
or
out
jle
mov
and
cmp
incl
add
push
lcall
cmpb
xor
push
or
push
xor
add
inc
xor
xchg
sarl
jns
out
fnstcw
jecxz
mov
orl
push
loope
gs
insl
jge
out
sbb
xchg
cs
sbb
inc
xor
add
outsb
jmp
popa
xchg
push
inc
or
xor
cli
xlat
xor
mov
outsl
adc
mov
pop
rolb
popa
lret
shll
loope
xchg
push
dec
jecxz
adcb
xor
push
arpl
pop
hlt
pop
sbb
xchg
or
out
xchg
aaa
adc
arpl
sub
outsl
jp
mov
add
cmp
mov
cwtl
cmpsl
xchg
inc
mov
push
addr16
mov
mov
xchg
mov
jmp
stos
sbb
mov
arpl
xorb
cwtl
push
add
mov
fcompl
inc
les
aad
ljmp
inc
ljmp
jbe
fwait
roll
pop
mov
insb
sub
pop
scas
pop
sbb
jp
pop
fistl
pushf
or
lret
loop
adc
mov
scas
leave
stos
sub
cmp
add
xchg
jle
cmp
das
scas
sbb
push
cmc
cmp
ss
inc
aaa
dec
inc
jle
sahf
dec
lahf
add
test
hlt
xchg
mov
adc
out
adc
xchg
mov
icebp
push
out
fsubr
jmp
orb
cmc
add
clc
pop
fcoms
xchg
xchg
or
pop
pop
in
push
loope
mov
and
mov
nop
lods
mov
jle
arpl
xchg
int
jecxz
jnp
test
add
mov
push
jnp
imul
mov
fimull
add
ror
mov
xchg
ja
pop
adc
mov
aas
imul
xor
popf
cmp
mov
cmp
lret
push
nop
inc
decb
mov
add
call
out
test
rcl
movsl
fnsave
fs
adc
sbb
jno
mov
sub
dec
das
orl
push
sti
cwtl
movsb
loopne
or
pop
mov
das
imull
and
jp
ja
sbb
jb
dec
jg
cmpl
push
imul
hlt
lea
jecxz
add
pop
shrl
mov
sub
mov
scas
xor
cmc
dec
jbe
pop
jle
sbb
cmp
cltd
add
jmp
imul
xchg
cmp
bnd
add
xorl
push
mov
sub
loop
sarb
decb
mov
in
nop
fld
and
leave
ret
jne
sahf
xchg
inc
xchg
adc
add
mov
mov
out
push
xlat
inc
pop
mov
and
add
inc
push
mov
mov
in
sahf
mov
push
rol
es
dec
mov
nop
jl
je
cmp
mov
lea
pop
adc
push
test
or
mov
push
pop
cs
neg
lds
stos
mov
fiaddl
mov
xlat
xchg
adc
mov
xchg
push
xor
subl
mov
fistpl
xchg
scas
sub
popf
sbb
sahf
mov
xchg
aaa
mov
popf
mov
test
mov
outsb
mov
ds
inc
mov
loope
out
int3
mov
inc
adc
xor
jno
gs
push
mov
mov
and
lret
sub
jle
mov
dec
jb
xchg
call
imul
push
daa
cmp
popf
push
jne
inc
pop
enter
ficoml
out
adc
push
call
les
ret
stos
xchg
bound
pop
xchg
or
cmp
fnstcw
jg
insl
ds
jl
or
mov
adc
or
mov
push
sbb
int3
xchg
or
clc
mov
sbbb
dec
dec
xor
insb
sub
cmp
mov
dec
mov
or
sub
sbb
xchg
leave
mov
sahf
movsb
push
mov
pushf
call
lods
mov
ret
out
sub
push
ds
cli
lret
and
jl
cmpl
insl
sub
sbb
pop
jns
push
add
addb
rorb
es
and
jb
mov
pusha
pop
into
jge
mov
andl
sbb
mov
inc
cmpsl
dec
loopne
es
xchg
jno
fs
int
mov
stc
int3
mov
popf
int
fwait
nop
xchg
cmp
lds
loop
aas
aam
je
cld
or
scas
sbb
mov
aam
test
enter
xor
mov
mov
jno
ljmp
mov
fwait
mov
loop
pop
aad
xchg
mov
lods
jo
fs
aaa
insb
in
sarb
inc
stos
repnz
and
out
nop
pusha
test
ficoml
movsb
cmpsl
push
push
ret
or
jae
and
jo
cwtl
jmp
insl
push
pop
movb
lcall
xchg
int
jp
fcomps
mov
inc
mov
call
test
adc
ret
dec
int
inc
lret
cld
cwtl
aas
mov
adcb
sti
hlt
mov
pop
xor
sbb
xor
jae
and
sub
push
sub
xlat
decl
sub
rcll
shll
popa
in
fisubrs
daa
cli
cwtl
shlb
leave
jg
jns
sub
insl
mov
pop
mov
stos
sub
push
xor
lods
fcompl
incl
mov
lret
imul
push
dec
jno
pop
stos
mov
aad
mov
xor
or
or
add
lret
jo
les
cmp
in
push
jp
data16
call
insb
jle
sub
mov
inc
mov
jecxz
shr
out
push
adc
lcall
cmp
rclb
or
pusha
lret
in
pop
inc
mov
push
pop
jmp
les
jp
mov
cld
loope
pusha
insb
decl
or
mov
outsb
xchg
add
and
das
mov
lock
sbb
je
cld
cwtl
xchg
inc
jo
ss
jbe
mov
cmp
pop
adc
xor
mov
movsl
out
jp
jbe
pop
ficompl
adc
data16
xchg
insl
shr
inc
rorl
mov
sub
sahf
mov
xor
popa
mov
cmp
xor
add
subb
in
inc
mov
in
inc
mov
push
pop
out
in
inc
mov
imul
mov
cmpsb
push
lahf
mov
mov
out
add
in
xchg
xor
dec
dec
mov
jge
out
push
or
mov
dec
mov
pop
adc
lcall
cmp
sti
add
cmp
jg
mov
imulb
and
outsl
aam
cmp
adc
jle
cmp
inc
sbb
out
and
nop
es
adc
ret
sub
repnz
jne
out
orb
mov
pop
aad
mov
sar
cmp
repnz
inc
ds
fcomps
out
lret
lret
sub
push
les
test
fnstcw
cs
in
lods
in
js
adc
cmp
shl
cmp
loop
inc
sar
jp
push
lret
or
adc
int
rolb
imul
adc
jmp
stos
sub
xor
ret
aas
pop
in
cmpsb
mov
pop
sbb
lahf
jcxz
push
cmp
xor
inc
fstps
jne
add
cli
xor
sub
pop
jp
xor
mov
jno
lds
jecxz
cmp
test
xchg
aas
je
jne
sub
ds
fs
cmp
fstl
into
mov
fcmove
dec
movb
fistpl
cmp
pushf
xchg
mov
inc
je
addr16
cmp
sub
popa
sub
pop
ss
shr
data16
iret
jmp
js
cwtl
rcr
jmp
push
movsb
cltd
mov
jae
stos
movsb
push
sbb
and
sahf
xchg
and
aaa
jo
push
cltd
rorl
cmc
int3
iret
inc
fistps
rorb
adc
xchg
pop
das
int
mov
js
fmuls
mov
mov
insl
push
push
divb
or
test
jg
dec
inc
out
sub
or
clc
ljmp
sub
sbbl
out
push
pop
mov
inc
xor
out
jns
das
leave
ljmp
test
pop
mov
dec
dec
scas
inc
cmp
and
xor
adc
mov
or
movsb
test
fsubrl
xchg
shlb
add
inc
data16
cs
or
adc
movsb
and
inc
rol
sub
out
mov
mov
pop
add
fwait
dec
inc
xor
and
jbe
iret
cmp
and
fnstenv
jge
dec
jb
mov
pop
dec
push
mov
push
xor
and
xchg
mov
or
push
cli
push
sbb
add
pop
imul
ljmp
aas
or
into
dec
rorb
ss
addb
push
pop
fdivl
int3
xchg
pop
and
andb
arpl
fisttpl
mov
ret
inc
stc
loope
cmp
sub
mov
pop
mov
xor
mov
ja
test
sbb
frstor
pop
inc
lcall
adc
dec
cmp
stc
push
pop
js
mov
jno
mov
xlat
adc
iret
sti
sahf
xchg
nop
imul
sbbl
and
enter
jnp
xor
fwait
daa
cmp
lea
outsb
mov
sarl
jl
stos
or
dec
loop
xor
test
rorl
lods
shl
cltd
inc
dec
cmc
jp
gs
mov
mov
in
cmp
mov
roll
sti
fistps
dec
sbb
je
pop
jge
pop
sbb
or
in
pushf
pop
inc
inc
or
into
inc
and
mov
xlat
or
repz
lret
cli
and
push
pop
sub
dec
mov
in
add
pusha
mov
jne
cmp
bound
add
push
mov
addl
mov
pop
pop
adc
pop
pushf
or
mov
scas
add
iret
mov
mov
enter
jl
mov
adc
les
imull
cli
pop
out
aam
cld
pop
xor
xchg
pop
pop
fistl
mov
fsubrs
shll
pop
push
outsb
out
addb
shrl
je
int
clc
jmp
pop
adc
popa
mov
stos
into
hlt
sbb
mov
sub
push
fcmovu
jmp
xchg
lods
stc
mov
orl
add
in
rcl
push
sub
and
mov
shlb
aas
dec
jae
leave
movsl
jno
movsb
mov
dec
push
mov
and
fs
xchg
mov
int
adc
mov
add
or
mov
scas
cmp
cmpsb
sbb
mov
jge
cmc
mov
jo
inc
mov
test
adc
xor
add
nop
xchg
push
imul
cld
fwait
lds
jns
push
sbb
pop
mov
add
adc
inc
imul
inc
ret
pop
adc
sub
cmp
or
sub
arpl
pop
push
ret
cmp
clc
push
sub
mov
sbb
mov
push
addl
addb
mov
sbb
sub
push
xchg
jno
xchg
inc
cmp
shrl
mov
xor
int3
add
mov
jle
out
mov
mov
fwait
cwtl
int3
in
adc
pop
adc
lods
mov
subb
fdivl
iret
jbe
ret
sbb
xor
into
imul
into
fbld
mov
sub
arpl
push
iret
cmpsb
shlb
cmp
mov
cli
push
int3
and
test
cmpsl
shll
add
and
ret
pop
adcl
lds
jno
xor
inc
dec
adc
mov
xor
jmp
insb
arpl
bound
loope
pop
nop
mov
push
hlt
sub
mov
adc
xchg
insl
mov
dec
add
lcall
adc
arpl
push
mov
dec
aas
sbb
cmp
push
je
movsl
add
in
fcmovnu
inc
dec
imul
insb
pop
cmp
inc
push
xor
test
addr16
loope
jbe
mov
movsb
popl
cli
or
jle
pop
fmul
aam
fldl
cmp
inc
or
jl
rorb
aad
imul
es
movsl
lea
jp
jns
mov
outsb
shrb
add
cwtl
insb
sub
xchg
push
xchg
aad
add
hlt
movsb
ljmp
sub
push
xchg
jmp
jge
push
cltd
icebp
cli
pusha
jg
mov
cmpsl
push
shrl
jnp
test
ja
stc
imulb
enter
pop
aas
jl
addr16
cmp
rorl
adc
jg
aam
jl
adc
or
pop
ja
xchg
pop
jne
repz
mov
xor
notb
jmp
popf
dec
loope
inc
ljmp
mov
and
mov
jae
pop
push
ret
adc
cs
rcrb
call
cmp
jg
jl
test
jp
mov
cmp
pop
mov
mov
jg
hlt
stos
push
shll
xchg
int3
cmp
inc
pop
xchg
rorl
or
jl
sbb
loopne
cs
popl
leave
movl
mov
sahf
mov
nop
fcoml
arpl
nop
or
push
pop
dec
int
idiv
xor
clc
gs
inc
cmp
push
bound
push
rcrl
and
int
jmp
or
adc
adc
sbb
fbstp
outsb
aad
frstor
cmp
test
nop
add
adc
lods
xchg
lods
push
outsl
or
or
sub
dec
popf
fisubs
mov
or
jecxz
dec
enter
sahf
sub
scas
fsubl
jmp
outsb
cld
aad
sub
pop
int3
rorb
inc
or
mov
sahf
inc
pop
sbb
jb,pn
xchg
mov
fnop
jecxz
fidivl
shrl
andps
aad
cmp
stc
mov
xorb
mov
lcall
decb
cmpsl
inc
pmaxsw
jmp
dec
inc
and
mov
dec
mov
lock
xor
adc
add
mov
test
pop
cmpsl
insb
mov
test
add
sti
sahf
xlat
fcomps
je
ret
jp
mov
ret
rcll
inc
fistpl
shr
out
mov
inc
mov
mov
test
xchg
insb
xor
out
cmp
pop
insb
and
popf
mov
sbb
dec
jg
outsl
hlt
push
xor
shr
and
stc
push
add
aam
mov
mov
mov
mov
insb
pop
outsl
mov
fsub
xor
fwait
adc
add
std
test
fwait
loop
and
fdivrp
test
adc
pop
nop
inc
and
data16
aam
push
and
mov
dec
fucom
pop
push
ja
hlt
mov
mov
mov
test
xchg
mov
in
or
xchg
and
mov
lcall
cmpsb
jbe
mov
in
jg
mov
sbbb
ds
or
daa
nop
lcall
adc
xor
mov
cmpsb
and
push
fstps
fnstenv
adc
and
jbe
or
sub
add
sets
inc
mov
popf
and
jb
mov
lds
xlat
push
ds
mov
imul
adc
popl
addr16
jle
jl
lods
mov
lds
sub
sub
mov
int3
mov
dec
adc
aam
sub
imul
dec
aam
and
sahf
int3
push
sarl
std
insb
divl
push
xchg
xchg
jge
push
cmp
test
aam
loopne
enter
bound
mov
les
and
cltd
jae
mov
xlat
fs
or
call
test
push
into
addr16
test
pop
imul
jecxz
es
mov
inc
cmp
loop
cltd
cs
mov
das
cmp
push
fdivl
lret
pop
popa
jle
and
call
mov
cld
out
ret
sbbl
sub
icebp
loop
lret
sbb
lock
pop
pop
pop
icebp
daa
pop
dec
inc
xchg
lods
in
sub
sub
je
test
imul
sbb
out
add
pop
mov
mov
sbb
ficoms
insl
jne
push
psrlq
cmpsl
movsl
mov
lods
or
ret
out
shl
sbb
sbbl
add
lock
add
jmp
push
cmp
pop
mov
mov
fsubrp
test
jns
in
imul
lds
mov
scas
test
mov
and
jecxz
xor
cmp
loopne
sub
in
or
arpl
popf
popa
or
and
mov
or
add
popf
pop
mov
shl
or
xchg
fdivr
aas
rorb
xchg
add
push
cmp
cmpsb
sbb
pop
rolb
jno
jo
loop
pop
jae
xchg
jl
jge
jp
xor
cmp
pusha
daa
sbb
mov
xor
sub
enter
ljmp
pop
aad
ror
mov
imul
and
fucomi
gs
out
ljmp
data16
mov
je
mov
test
push
cmp
mov
and
dec
jmp
in
sti
pop
movsl
pop
inc
lcall
cmp
mov
stos
cmc
cli
lret
adc
int3
in
sub
pop
jg
bound
jmp
mov
sbb
ret
dec
jno
cmc
fmull
incl
and
sub
inc
aam
push
xchg
sbb
call
pop
push
adc
dec
lcall
push
mov
mov
sub
ret
and
xor
pop
pop
push
add
rcr
adc
jle
adc
pop
test
and
pop
pop
cmpsb
xchg
pop
mov
cmp
ss
in
aam
mov
subl
or
sub
scas
push
sbb
pop
adc
push
aaa
mov
adc
and
jecxz
dec
mov
adc
add
data16
mov
cs
add
mov
xor
inc
xchg
bound
andl
rol
js
arpl
js
adc
jo
enter
icebp
fadds
into
outsl
jp
or
data16
sub
insl
bound
or
sub
cmc
or
jnp
xlat
lock
add
pop
mov
stos
inc
inc
test
xchg
ljmp
xor
or
and
mov
xor
fisttpll
aad
mov
xor
scas
mov
movsl
xor
cmp
xlat
ljmp
sub
pop
mov
out
aas
repnz
sar
rcl
loope
stos
std
ret
clc
cmp
dec
xchg
sarb
push
mov
xor
push
std
pop
fidivrs
iret
xorl
inc
punpckhdq
psllw
cmpsb
roll
dec
imul
push
xchg
mov
repnz
out
or
pop
ja
pop
sbb
outsl
cmp
fcomp
in
xchg
aaa
popf
sbb
adc
cmp
sarl
mov
daa
lahf
into
and
nop
push
pop
sub
cli
jmp
sbbb
andl
add
fildll
je
dec
std
push
mov
mov
push
add
stos
out
aaa
in
push
repz
fimull
pop
out
jecxz
push
xor
push
es
js
jge
push
arpl
or
stc
dec
fisubs
loope
jmp
pop
jae
int
stc
sahf
jge
add
jns
sbb
push
aam
daa
gs
testb
vmwrite
jmp
xchg
fldcw
jmp
and
push
dec
inc
xor
out
cmp
pusha
mov
cmpsl
push
sub
cltd
lret
adc
test
inc
sti
mov
push
orl
jmp
mov
lods
aas
mov
pop
enter
cld
or
aas
arpl
lds
sbb
mov
pushf
mov
mov
jns
lret
dec
inc
push
jge
shlb
xor
pop
aam
or
sub
dec
decb
cmpsb
pop
lods
jmp
ret
outsb
insl
push
and
and
cmp
jns
aad
xchg
and
andb
mov
jmp
push
pop
and
sbb
jg
mov
push
cmp
sub
or
sub
imul
mov
test
aas
jae
sub
fisubs
pop
stos
push
shr
imul
daa
stos
or
dec
pop
pop
dec
dec
fisttps
push
sub
js
mov
jo
mov
push
add
sbb
dec
or
in
pop
out
lods
mov
fnstsw
push
mov
jae
or
jle
pop
ja
stc
pop
mov
mov
inc
xor
push
mov
inc
push
xchg
mov
mov
hlt
hlt
jo
in
jbe
push
and
scas
fldcw
push
pusha
cli
lds
mov
dec
movsb
inc
cwtl
daa
mov
stos
call
pusha
adc
mov
shrb
push
push
icebp
arpl
fstpt
xchg
imul
pop
adc
sub
popa
into
push
dec
scas
test
pop
fldenv
out
push
jo
aam
and
xor
add
cmp
adc
adc
in
pop
mov
imul
adcl
scas
xchg
outsb
fs
ret
fcomp
stos
mov
xor
sbb
or
in
mov
mov
in
adc
fwait
out
das
popa
imulb
inc
cwtl
jne
or
xor
in
insb
xchg
jp
lret
xor
sahf
insb
mov
aas
dec
adc
dec
dec
orl
add
repnz
sub
add
or
les
dec
std
ds
jmp
fidivl
out
stos
cmc
fiadds
push
int3
mov
adc
aaa
jb
xchg
call
gs
outsb
lret
pop
in
sub
rclb
test
enter
mov
inc
mov
push
sbb
pop
scas
dec
mov
dec
lahf
fwait
adcl
jns
mov
inc
pop
sub
and
pop
in
sbb
push
jp
sub
lods
jno
push
fidivrs
inc
xor
and
push
inc
js
fs
sub
dec
in
push
jg
fidivs
jbe
sbb
mov
daa
dec
xchg
xchg
leave
add
sub
jnp
fsubs
cmpsl
data16
fstpt
jmp
sahf
les
repz
mov
aaa
xchg
or
jae
mov
ffreep
rolb
icebp
push
mov
inc
ret
push
call
addr16
jo
lcall
jmp
sub
in
stc
lahf
les
daa
clc
pop
das
xchg
mov
test
rcrl
push
out
xor
add
cmpsl
icebp
xchg
cmp
loopne
lret
add
xorl
repnz
fwait
add
es
fisttpll
int
cwtl
dec
jb
mov
fildll
push
ljmp
pop
in
mov
pop
jns
js
clc
cmp
mov
sbb
cmovbe
pop
fcmovb
xor
popa
sbb
xorl
ret
mov
mov
outsl
mov
loope
lock
clc
scas
pop
aaa
cmp
cmp
jmp
lods
jmp
pop
xchg
mov
mov
jp
out
push
into
sbb
jg
lret
adc
push
ret
int
push
pop
fmul
xchg
pop
jl
cmpl
mov
fisttpll
sub
rol
dec
out
les
ss
int3
mov
scas
dec
xor
inc
aas
jne
ficoms
cmp
push
or
fmulp
fcomps
test
jge
fstps
aam
sar
shlb
and
shll
out
ds
add
xor
pop
imul
cltd
fninit
addr16
push
jnp
or
movsb
sub
outsb
xchg
movntps
or
ret
jecxz
sbb
outsb
in
xchg
into
std
subl
fisttpll
lahf
popf
lods
lcall
inc
loope
xchg
sbb
movsl
jl
cmp
push
lcall
repz
imul
lcall
mov
pushf
lcall
cld
push
enter
lea
in
jns
roll
nop
mov
or
aad
jle
das
dec
cmc
int3
push
pop
loopne
lock
idiv
fcomi
aad
and
out
xchg
int
aas
repz
test
push
fs
cmp
jo
push
and
test
or
sahf
out
xor
inc
xchg
test
pusha
scas
mov
xor
stc
rclb
cli
sarb
fstps
outsl
push
sub
out
aam
add
xchg
insb
jno
mov
push
mov
stos
sub
pop
addr16
mov
sub
dec
and
out
jb
xor
hlt
dec
adc
and
xor
imul
aas
lds
push
paddsb
add
movb
test
xchg
add
lock
mov
mov
add
pop
adc
bound
jmp
pop
push
lods
sub
push
ljmp
adc
gs
mov
mov
adc
dec
pushf
int
inc
aad
in
xorl
cli
cmp
xlat
sub
repnz
hlt
push
cmpsl
das
push
add
xor
and
int
inc
mov
aad
ds
outsb
xlat
stc
nop
mov
push
pop
push
xchg
xchg
sub
je
insl
add
sbb
mov
repnz
fbstp
mov
fwait
movsb
and
decb
fsubl
inc
jno
mov
mov
xchg
les
lods
enter
mov
mov
cmc
pop
pop
jmp
cld
cwtl
mov
cmp
jbe
adc
filds
arpl
aas
xchg
and
lahf
mov
xor
push
mov
cltd
cmpsl
rclb
dec
loope
pusha
mov
pushf
and
aam
adc
inc
lock
add
leave
jg
and
xchg
inc
jb
clc
or
movsb
cmp
inc
mov
xchg
dec
pop
xchg
pop
cmp
push
add
xchg
addr16
popf
mov
hlt
pop
mov
sbb
push
mov
add
and
ljmp
aam
mov
inc
cli
ljmp
std
cwtl
imul
popa
test
inc
in
jge
xchg
and
inc
sbb
in
mov
jo
dec
fnstsw
adc
or
stos
das
jp
pop
jnp
popa
gs
xchg
and
push
pop
cmp
mov
xchg
lds
out
into
jmp
lods
jo
cmp
pop
lods
jbe
lret
adc
cs
and
jmp
js
pop
test
mov
mov
imul
das
xchg
clc
pop
push
movsb
mov
or
pop
clc
pop
dec
das
rorl
mov
mov
mov
mov
out
mov
mov
mov
in
push
stc
sbb
xor
inc
cli
xchg
lock
inc
out
lret
push
xchg
mov
leave
enter
or
mov
mov
xlat
in
les
cmp
icebp
sbb
aad
out
cmova
xor
lcall
ret
loop
fnstsw
and
jg
in
fimull
dec
ja
sbb
loopne
lods
dec
pop
xor
sbb
out
push
inc
adc
jo
das
jae
xchg
mov
mov
icebp
or
shl
pusha
dec
dec
nop
ljmp
cmp
mov
call
subb
cltd
rcrl
dec
jp
arpl
gs
std
jge
mov
int
dec
lods
sub
mov
paddd
lea
ret
subl
out
or
sub
mov
loope
mov
fstl
push
add
cli
inc
mov
lock
lcall
jb
int
sub
data16
filds
jae
mov
add
sbb
pop
xorl
push
enter
cmp
push
push
push
cltd
fists
or
and
jmp
mulb
in
sub
fidivrs
enter
sub
adc
or
push
add
fucomip
cmp
in
data16
cwtl
push
cmpsl
lea
jo
sbb
fsubp
sub
xchg
jle
popf
in
mov
mov
mov
xor
xorb
jmp
jnp
stos
fdiv
jb
mov
jo
popf
cmp
lahf
pop
icebp
inc
xchg
jbe
lret
inc
aaa
push
hlt
mov
sahf
decl
mov
in
mov
rorb
lret
and
rcrl
arpl
gs
add
cli
inc
insl
jecxz
daa
jno
and
adc
js
js
movsl
scas
or
out
das
mov
xchg
js
sti
xchg
rcr
mov
xrelease
and
enter
scas
icebp
lret
adc
adc
xchg
ret
cmp
fisttps
inc
cwtl
dec
push
mov
jl
rcl
add
lds
das
dec
insl
and
cltd
push
push
pop
jg
cmp
int
mov
iret
lea
pop
testl
mov
xlat
stos
or
cmp
jecxz
mov
cmp
insl
dec
adc
push
push
push
push
xor
adc
lock
cmp
fnstsw
jnp
cmpsl
into
psubusb
mov
ja
pop
rol
sbb
dec
dec
sub
loope
pop
cmp
mov
sahf
test
cld
leave
xchg
add
inc
and
lea
push
imul
jecxz
mov
pop
push
xor
inc
pushf
pop
xor
aas
in
iret
mov
call
inc
ret
push
icebp
movl
daa
in
mov
jmp
pop
movsb
push
pop
jne
fldcw
out
mul
out
enter
pop
and
aam
repz
rol
pop
test
or
cmp
sbb
test
inc
push
aam
scas
sbb
in
jmp
cmp
lcall
clc
stc
aam
loope
std
jno
cmp
ljmp
not
or
cltd
jg
xchg
sub
test
and
xadd
mov
pop
in
push
adc
in
pop
je
clc
mov
loope
mov
jl
xchg
dec
ja
cwtl
or
call
in
scas
add
mov
xchg
iret
xchg
sti
mov
cmpsb
pop
daa
mov
ljmp
jg
je
shll
and
lds
xor
push
mov
lea
pop
lods
int3
pusha
xchg
andps
cmpl
cmpsb
mov
jbe
and
add
mov
cld
enter
faddp
pop
xchg
ljmp
out
push
xor
ret
arpl
bound
bound
hlt
or
and
clc
movsb
aad
push
in
arpl
filds
lods
jl
lcall
jae
ret
cli
in
mov
je
cmpsb
in
das
mov
and
test
dec
cmp
loopne
dec
sub
cmp
dec
sar
fcomps
shll
nop
outsl
in
mov
jl
imul
inc
rclb
xor
aam
les
jg
xchg
jge
and
lock
popf
test
adc
fidivrl
adc
outsb
adc
ss
sbb
xchg
push
xchg
int3
push
loop
insl
cmp
mov
or
xlat
mov
scas
imul
or
push
xor
imul
adc
push
popa
xchg
orl
ffreep
sbb
notl
inc
sub
xchg
pop
inc
mov
js
sub
pop
fs
pusha
outsb
loope
pusha
jns
xor
scas
pop
into
cmpsb
int
jge
inc
inc
in
scas
xorps
mov
sub
daa
or
or
mov
push
jbe
in
lcall
push
clc
sbb
call
cltd
in
test
or
jecxz
cmp
and
cwtl
sbb
ljmp
dec
dec
shll
std
jp
xchg
arpl
jb
or
jmp
shrl
shrb
in
pop
mov
mov
jg
ja
sub
daa
imul
push
lahf
imul
push
testl
scas
into
mov
mov
jg
inc
jno
shll
cwtl
push
xor
jno
adc
mov
fldcw
or
or
jg
gs
ret
jmp
sbb
pop
lock
ljmp
pusha
sti
add
hlt
adc
cmp
xor
stos
fildll
fsubrs
inc
rolb
jo
dec
cmp
pushf
jle
add
jecxz
arpl
mov
jae
out
cltd
push
loop
dec
and
inc
push
cmp
cmpsl
arpl
mov
pusha
mov
rorl
mov
pop
inc
clc
pushf
sub
mov
mov
pop
loope
gs
aas
movsl
xor
inc
jno
ss
sub
ret
push
lret
and
add
jo
sub
and
or
aas
stos
jbe
aad
dec
xchg
push
cmp
pop
and
lcall
mov
adc
add
imul
pusha
adcb
ja
mov
adc
jb
dec
nop
enter
and
pmulhw
sub
lods
stc
aaa
pusha
lds
jg
inc
add
lret
fldl
loop
imul
push
xor
inc
xor
inc
lea
les
and
into
xchg
ss
rcr
xchg
jl
add
fcompl
inc
cmp
dec
pushf
pop
sbb
jne
imull
dec
add
push
cmc
fisubrs
mov
mov
push
test
inc
js
icebp
adcl
or
popf
out
jno
test
mov
and
mov
lret
inc
mov
push
sbb
inc
mov
icebp
hlt
sub
lods
lods
mov
sarb
and
loope
xchg
jge
push
clc
lock
push
cltd
adc
call
insl
js
sti
js
pop
adc
or
inc
in
jne
cmp
sbb
cs
jb,pn
xchg
mov
outsl
addr16
sar
outsl
push
lret
add
out
insl
mov
loop
adc
js
das
fiadds
xor
xchg
dec
or
push
test
mov
sub
add
mov
mov
push
fadd
xchg
mov
outsl
or
test
pusha
repnz
in
into
divps
mov
das
and
ss
popf
lret
mov
mov
dec
stos
push
je
xchg
push
adc
mov
mov
repz
clc
test
mov
or
lcall
add
into
fistps
ljmp
roll
cmp
push
repz
add
pop
push
andb
outsl
fisttpll
bnd
sub
lret
test
mov
mov
xchg
push
adc
jo
subl
mov
xabort
and
pusha
subb
sub
or
add
int
cltd
stos
cmp
andb
fisttpl
push
test
and
xchg
push
fidivrs
xor
jge
fisubl
pop
push
jg
test
mov
cltd
cltd
lret
inc
shlb
dec
dec
pop
xchg
xchg
xor
scas
push
and
xor
mov
into
or
scas
add
xchg
pusha
mov
fdivrs
lds
and
gs
shlb
out
jnp
sbb
lods
mov
xchg
aaa
adcb
add
inc
repnz
mov
ja
pop
push
pop
cmc
sbb
mov
daa
in
mov
cltd
xchg
sub
cltd
lock
mov
jl
cmpsl
mov
outsb
rorl
nop
outsb
push
dec
shl
jge
dec
jle
pop
jmp
mov
dec
or
lods
fwait
push
push
loope
lods
enter
cmc
xchg
jl
add
mov
sarb
mov
pushw
jb
enter
into
dec
arpl
inc
jbe
cmpsl
mov
mov
mov
jno
out
sbb
test
inc
mov
fiaddl
xchg
in
pop
enter
push
xor
push
leave
adc
jae
xor
xchg
adc
shl
imul
cs
icebp
push
cltd
xchg
or
pop
fldenv
adc
sub
lret
push
push
sub
loop
jnp
int3
cmp
sub
xor
inc
pop
add
rcr
pop
xchg
pop
mov
add
mov
enter
mov
pop
in
lods
out
fnstsw
repnz
popf
std
mov
xchg
pop
jnp
push
data16
inc
adc
pushf
pop
pushf
inc
ficoms
push
jge
push
xchg
adc
xchg
push
inc
int3
js
pop
arpl
xchg
add
mov
jne
fwait
stc
jb
pshufw
fcmovb
cmp
aaa
fmuls
jb
xlat
jmp
pop
lahf
or
jns
mov
ffree
push
not
and
addr16
fwait
jne
pop
and
lcall
pop
and
das
push
push
mov
sti
sbb
nop
cmp
mov
cmp
fstpt
push
mov
xchg
pusha
and
ja
repz
cmp
fwait
xor
pop
xchg
cmp
jno
aas
or
js
insb
xor
add
sbb
jnp
dec
xchg
pop
pop
inc
or
jle
pop
lret
dec
jmp
sti
push
mov
leave
lods
dec
sti
lods
jns
mov
xorb
fs
stos
mov
shrb
dec
aam
bound
stc
sbb
js
cltd
andl
mov
ss
sbb
jnp
inc
or
sub
cmpsb
fstpl
rclb
xchg
test
dec
fucomip
aaa
push
aas
mov
and
not
scas
inc
testb
aas
xor
mov
cmp
jo
add
loop
out
sbb
cs
or
test
jmp
xlat
out
call
xor
push
pop
push
scas
rol
sti
jmp
jno
dec
movsl
xor
pop
xor
inc
jb
mov
pushf
arpl
int3
push
ljmp
test
sub
and
shrd
into
clc
shl
cmpl
pop
loope
push
or
js
push
pop
xchg
adc
ret
addr16
and
and
clc
sbb
lods
imul
xchg
pop
inc
mov
ljmp
ja
mov
jae
adc
xlat
push
sbb
popa
int
add
pusha
push
stos
dec
out
out
push
lea
int
shll
sarb
pop
js
and
or
jg
inc
xchg
cwtl
dec
mov
push
xor
xchg
pop
lock
jbe
out
out
xor
push
jle
jecxz
push
lock
add
push
xchg
imul
pusha
roll
mov
xlat
or
push
pushf
sahf
hlt
pop
add
in
es
sar
shrl
ficompl
mov
mov
xchg
js
cltd
push
mov
movsb
std
js
jno
cmp
test
mov
pop
cltd
sti
inc
cwtl
jnp
jecxz
into
mov
clc
loop
adc
push
ds
or
push
lret
jb
fsubl
sub
and
fisttps
add
mov
or
es
les
push
call
outsl
push
loope
or
mov
or
imul
arpl
mov
das
adc
adc
loop
or
sub
pop
pop
popf
cmpsb
cmpsl
fldt
dec
les
or
test
ja
lahf
jmp
iret
sbb
mov
xchg
sahf
fcmovnu
stos
lret
pop
add
mov
sbb
mov
aad
dec
xchg
push
cld
pop
lahf
stc
push
bound
xchg
push
mov
and
pusha
sbb
or
sbb
mov
mov
movb
fwait
jg
xor
scas
or
rclb
dec
mov
sbb
jo
jmp
and
rcrb
or
adc
pop
sbb
fs
dec
adc
out
push
inc
or
in
xchg
test
xchg
mov
cmp
xlat
cmpsb
push
sub
das
adc
hlt
int3
aaa
imull
enter
stos
xchg
in
or
add
lock
into
out
nop
in
test
pop
imulb
nop
pop
out
or
test
popa
push
xlat
push
cmp
mov
add
iret
cmc
push
add
add
pop
rorl
fistl
movsl
jne
or
cwtl
jmp
mov
decl
mov
jnp
lods
sbbl
jbe
pushl
and
insb
pop
and
pop
test
and
mov
test
sarb
add
test
pushf
ljmp
out
dec
mov
fcoms
fiadds
mov
arpl
js
pushf
or
std
inc
inc
es
jmp
inc
cld
xor
sub
push
push
outsb
hlt
mov
add
mov
loop
sbb
push
mov
adc
sbb
shll
mov
pop
into
out
and
shll
inc
and
xchg
or
stc
jno
nop
push
bound
dec
bound
mov
outsl
adcb
out
lret
addb
inc
xchg
adc
and
jg
cmp
dec
setne
cmp
out
insl
popf
fs
add
aad
xor
movsl
arpl
or
push
testl
sub
test
jno
jbe
mov
jo
jg
stos
inc
jae
das
push
pop
add
sub
pop
and
jmp
cmp
lea
lds
add
adc
mov
or
mov
xor
mov
lods
cmc
and
push
outsl
flds
add
or
add
push
iret
jge
inc
hlt
enter
pop
mov
xor
xor
ds
lds
insb
ljmp
xor
xor
xchg
fildll
jge
push
rorb
loope
xor
call
mov
dec
shlb
jno
negl
stos
pop
stos
imul
or
fmul
dec
cmp
mov
movsl
push
ljmp
xchg
mov
sbb
mov
mov
gs
outsb
cmp
xlat
ret
loopne
push
sbb
xlat
xchg
add
lea
mov
cmp
enter
sub
leave
insl
inc
pop
cwtl
sub
adc
aaa
repz
bound
in
push
xchg
mov
or
xor
lock
idivl
and
or
jns
inc
mov
test
inc
fs
mov
insl
add
pop
xchg
into
stos
dec
in
and
sub
in
pop
sahf
mov
insb
sbb
jne
lods
lret
and
inc
fbstp
lahf
ss
fwait
pop
sbb
jo
cli
and
jl
ja
add
outsb
cmp
popl
push
xchg
adc
sub
pusha
stos
jno
jne
lock
sub
and
dec
sti
and
jmp
movb
in
dec
mov
push
mov
jle
pop
fcmovnbe
stos
and
test
pop
mov
mov
je
pop
cmc
hlt
mov
in
and
out
sub
movsl
adc
fcoms
pop
cmp
aas
mov
xchg
popa
ds
jle
push
cmp
adc
xchg
add
mov
pop
push
outsl
repz
mov
out
add
outsb
adc
mov
pusha
mov
out
outsl
mov
subl
imul
mov
dec
xor
ficompl
mov
xchg
stc
and
out
sbb
jbe
enter
out
clc
lds
pop
push
dec
mov
and
cmc
filds
pop
lahf
jmp
std
frstor
jmp
orb
pushf
jl
xchg
cmp
cld
jle
pop
mov
cmc
roll
lret
clc
adc
cwtl
and
dec
sub
jnp
or
mov
inc
xor
loopne
sub
int3
aaa
popa
addr16
stc
push
dec
xchg
scas
cmp
gs
mov
fldcw
mov
xor
pushf
aam
das
mov
xchg
loop
pop
or
add
xchg
cwtl
dec
sub
jg
std
xchg
data16
adc
xor
adc
add
call
std
mov
lret
rcr
mov
negb
test
push
cli
in
repz
jg
aas
lods
outsb
loopne
movsl
ret
clc
call
add
imul
sbb
fcmovnb
andb
test
rorl
mov
subb
dec
fs
icebp
inc
inc
mov
test
mov
pop
mov
iret
inc
les
push
arpl
push
cmpsb
sbb
nop
dec
xchg
in
jp
lea
mov
dec
cmp
fstpt
inc
dec
test
mov
pusha
subl
nop
int3
mov
in
fwait
adcl
pop
testb
and
jp
mov
jne
les
out
dec
mov
pop
vpaddw
dec
test
in
fs
sbb
mov
addr16
cwtl
inc
mov
enter
repz
cmp
xchg
cmc
cmp
stos
pop
lcall
add
test
inc
adcl
mov
mov
inc
in
fstpl
pop
mov
std
mov
jne
dec
dec
popf
iret
fwait
add
out
in
sbb
xor
mov
incb
xchg
ds
xor
and
into
jle
mov
loopne
call
dec
sbb
jge
mov
cmp
lods
loope
mov
inc
dec
movsb
dec
sti
sub
decl
xor
pop
stos
fistps
lret
fbstp
pop
das
inc
lret
in
push
cmp
test
aam
inc
mov
fwait
arpl
test
mov
std
push
or
sbb
movsb
or
aas
insb
aas
inc
pop
adc
fs
test
cwtl
test
jbe
xchg
mov
add
in
xchg
inc
shr
mov
or
stos
and
jae
shr
rorb
popa
outsb
xor
shr
xchg
jmp
xchg
and
stos
aam
shrl
push
and
xchg
jmp
or
mov
or
out
leave
aam
stc
cmp
lea
pop
and
dec
fnclex
jns
xchg
movsl
dec
fisubl
andl
fistpll
adc
jecxz
ret
cs
push
les
leave
jmp
xor
ds
int3
xchg
repnz
mov
outsb
addr16
dec
sub
mov
and
dec
sbb
xchg
xchg
sub
push
sbb
js
cmp
shll
push
fdivr
test
cwtl
divl
fldcw
in
fsubs
fsubs
add
pop
cmp
xchg
push
gs
mov
mov
iret
or
xor
xor
fidivs
in
push
sub
fs
rcrb
outsb
dec
shrl
aaa
sbb
imul
dec
xor
sbbl
push
sahf
add
cmp
cmp
pop
adc
sub
sub
lret
dec
stos
add
rcll
xor
push
mov
stc
loop
push
mov
xor
xor
scas
into
or
mov
test
add
leave
rolb
sarl
arpl
and
cmpsb
xchg
fstps
cld
fwait
jb
xor
jge
ret
add
enter
stos
gs
div
mov
lret
mov
inc
dec
out
xchg
mov
push
jmp
mov
out
pushf
sub
es
dec
test
movsl
mov
lock
or
xor
push
movsb
jne
sub
ret
mov
adc
scas
in
scas
mov
sub
adcl
fcoml
mov
and
jmp
lea
sbb
outsb
sub
pop
add
add
add
cmp
xchg
std
add
neg
mov
jge
ja
jne
mov
inc
inc
jns
xor
insl
lock
fsts
cmpsb
imul
int3
jg
int
lods
dec
mov
ds
add
loop
xor
sbb
bound
gs
sub
pop
scas
jge
sbb
sbb
loope
call
inc
rolb
sbb
arpl
inc
xor
faddl
rolb
scas
push
dec
mov
aaa
sbb
repz
std
xor
pop
aad
stos
loop
lods
mov
cmpsb
xor
xlat
mov
xchg
push
outsl
push
test
rcrl
xchg
lods
pop
or
les
and
sub
int
xchg
adc
inc
rcrl
cld
cld
adc
popf
add
roll
in
arpl
cmp
outsb
mov
add
push
lock
sbb
inc
sbbl
jo
push
or
pop
adc
shr
cmp
sahf
add
orl
dec
out
xchg
aas
mov
int
outsl
mov
mov
pop
sub
call
adc
push
in
adc
in
pop
movsb
jae
mov
mov
sub
mov
je
sbb
mov
mov
dec
insl
js
arpl
mov
lds
mov
fwait
jl
inc
cmp
pop
mov
and
push
or
fsubs
fistps
xlat
xchg
inc
loopne
mov
and
sub
daa
and
and
xchg
push
cld
cmc
cwtl
pop
stos
ss
xor
in
or
adc
popa
rcrb
jno
jno
add
push
mov
jp
lods
insl
push
xchg
movsb
and
hlt
lock
movsb
jg
lds
movsl
data16
pop
cli
into
jne
dec
imul
push
sti
loope
int
daa
cmp
rcrb
pop
lods
bound
cli
adc
addr16
popf
mov
xchg
cmpsl
mov
ja
dec
movsl
ds
es
jno
xchg
je
cmp
nop
dec
sub
sti
or
add
mov
rcrl
xchg
mov
incl
dec
adc
loope
sub
test
xor
lea
andl
popa
cwtl
jns
adc
outsl
add
jo
fstps
xchg
adc
test
inc
int
push
fidivs
es
clc
dec
and
add
mov
lods
push
jns
adc
fcmovnb
push
adc
inc
fidivs
mov
mov
repnz
push
push
dec
mov
iret
sub
addl
jb
enter
imul
and
sbb
or
inc
mov
mov
push
loopne
xor
shrb
pop
call
into
add
xchg
testl
popa
hlt
outsb
cmp
iret
xchg
sbb
cmpsb
iret
and
inc
cmp
lods
call
adc
lret
xchg
out
pushf
jae
xor
stos
fdiv
test
add
cmp
out
mov
lds
fadds
xchg
pop
neg
aam
mov
popf
push
fisubs
mov
jmp
xor
xchg
cmp
arpl
or
xor
mov
pop
lea
pop
push
add
hlt
aad
xchg
push
insl
pop
int3
sahf
repnz
dec
fdivl
lret
fsubrp
cltd
mov
fsub
and
jne
mov
outsl
out
inc
and
inc
lods
add
inc
int3
popa
mov
and
aas
or
add
icebp
arpl
in
lea
adc
jmp
jecxz
not
pop
stc
in
xchg
stos
pop
pop
jle
add
loopne
mov
push
cwtl
and
je
xchg
js
mov
enter
loopne
push
and
dec
cmp
dec
lret
and
aad
pusha
adc
xchg
mov
mov
icebp
fadds
pop
mov
inc
inc
pop
dec
hlt
mov
in
cmc
adc
inc
mov
mov
mov
push
gs
or
jg
iret
out
push
cltd
fldcw
or
div
mov
lock
incl
leave
das
or
incl
inc
xchg
nop
mov
fsubl
mov
pushf
sub
daa
lock
mov
or
aad
fdivrs
pusha
inc
subl
imul
sbb
fdivrl
mov
or
pop
lods
lock
ja
cltd
decb
stc
mov
and
mov
xor
or
and
jno
jmp
popf
imul
or
roll
xorl
xor
mov
data16
test
dec
inc
dec
xor
into
rcrl
jbe
inc
sbb
mov
dec
out
mov
jb
les
push
adc
movsl
mov
sbbl
mov
inc
push
jo
push
cmp
jb
push
adc
mov
push
push
xor
loop
cmpsb
ds
and
cmp
cmp
and
leave
lahf
cmp
xlat
movsl
mov
xchg
mov
leave
add
sahf
mull
test
mov
cmp
adc
js
sub
ret
xor
outsb
fisubl
stc
jecxz
mov
insl
xchg
jb
xchg
adc
add
test
sbb
mov
xor
jne
mov
sbb
cmp
xor
scas
sbb
leave
testb
je
int
jmp
cli
or
dec
outsl
das
and
inc
enter
xchg
and
and
test
dec
daa
les
jg
lret
ffreep
cmp
cmc
stos
jmp
outsl
jae
repnz
xchg
jecxz
add
pop
mov
lahf
mov
dec
sbb
cmpsl
ss
aam
int
cltd
sarb
cmp
pusha
jle
aas
outsl
stc
imul
push
mov
inc
clc
push
pop
adc
scas
into
sub
std
movsl
dec
adc
insb
addr16
mov
es
sti
pushf
test
gs
rcr
xchg
push
rcrb
xor
push
or
xor
push
int3
cltd
inc
jg
mov
jmp
xchg
pop
call
xchg
add
fwait
xchg
xchg
pop
push
push
mov
lock
xchg
repnz
or
aam
jp
xchg
and
sbb
jge
dec
cmpsb
mov
in
add
push
mov
lahf
and
dec
mov
push
pop
sub
inc
mov
jmp
pop
mov
and
pop
leave
cmpsl
hlt
xor
pop
push
rcll
adc
inc
pop
sbb
lods
lahf
sarb
or
pop
and
lods
das
xchg
push
sub
fldl
dec
bound
stc
jae
mov
adc
inc
loopne
dec
pop
int
scas
xchg
ss
or
sub
and
faddp
jp
adc
ficompl
sbb
movsb
xor
jmp
jb
insb
scas
xlat
repz
in
aam
mov
pop
mov
test
jmp
ret
movsb
and
lret
add
rcr
inc
mov
sbb
lahf
dec
insb
rcrb
cli
xor
xor
cli
mov
nopl
rcr
rclb
addr16
daa
cmpsb
in
fwait
lcall
ja
push
icebp
addb
clc
cmpsl
dec
repnz
movsb
shl
arpl
or
or
or
shl
dec
lcall
out
clc
dec
pop
outsl
add
lea
cltd
les
jle
rcrb
hlt
pop
shr
push
and
push
xchg
pop
rorb
sub
cs
ficompl
push
xchg
mov
out
sbb
lret
xor
ret
stos
cltd
cs
jle
shlb
dec
and
getsec
lea
jne
jae
xchg
shlb
cwtl
push
imulb
inc
sub
nop
lock
mov
push
pop
lea
sti
orb
and
insl
xor
mov
cwtl
mov
mov
popa
daa
and
insl
mov
push
iret
cli
repz
inc
add
inc
and
into
push
insl
dec
pop
jbe
cld
jne
cmp
sub
fdiv
out
sub
dec
sar
lcall
loopne
addb
cmp
cmp
hlt
scas
emms
push
xchg
pop
iret
aas
add
fs
outsl
dec
xor
shll
scas
jmp
or
push
test
mov
ss
inc
jno
push
push
cmc
jbe
test
aad
dec
mov
jnp
daa
cmc
and
mov
fbld
subb
jne
ja
sbb
mov
or
sbb
adc
test
lds
xor
addl
sub
xlat
lret
iret
jmp
int3
xchg
adc
lret
sbb
mov
adc
xor
out
jb
push
scas
inc
in
pushf
sub
cmp
or
sbb
jmp
mov
mov
lret
daa
mov
xchg
push
aas
xchg
jmp
vmwrite
in
push
cmp
add
adc
jae
and
xor
mov
jl
dec
cld
cwtl
and
pop
push
stos
out
repnz
jns
mov
out
ja
mov
push
and
pop
in
push
movq
movsw
jg
dec
dec
cli
cmp
popa
frstor
cwtl
jae
mov
test
push
lods
inc
push
add
sbb
inc
jbe
and
stos
pop
sub
imul
or
int3
lahf
lret
xor
stos
mov
jne
popa
sbb
mov
les
mov
out
loop
dec
fistl
data16
dec
push
repz
adc
push
jns
mov
ret
xchg
stos
cmpsb
adcb
movsl
imul
popa
xlat
aaa
jle
in
scas
cwtl
xchg
mov
ss
dec
lcall
ret
lock
in
lods
pop
shr
or
dec
jl
inc
mov
stc
pop
test
in
pop
out
lods
in
mov
xor
pop
xchg
pop
outsl
pop
pop
push
add
xor
rclb
dec
jns
mov
inc
sbb
push
arpl
adc
mov
sub
sbb
or
mov
test
push
or
out
dec
xor
cmpsb
sbb
inc
inc
cmp
cmpsb
and
fincstp
push
in
pusha
mov
xor
mov
or
fiaddl
and
jle
es
xchg
test
shlb
out
mov
mov
jbe
lock
and
inc
loope
loope
prefetchw
fmuls
int
imul
or
movsb
cmp
sbbl
call
nop
fidivrl
lret
xchg
cwtl
shll
cmc
jo
sti
repz
xchg
fs
jle
es
push
stos
xlat
stos
out
mov
sub
loop
mov
aam
lods
or
imul
enter
add
dec
push
enter
pop
push
xor
sti
push
rclb
out
shll
in
in
out
pop
add
aad
loopne
ja
add
and
sub
mov
add
mov
jno
ss
repz
push
sbb
lret
or
std
aam
fwait
xor
sub
push
jp
add
scas
arpl
cmpsb
es
add
pushl
jae
inc
fwait
insl
sahf
test
testl
lret
sbb
out
mul
mov
lock
sahf
subb
sub
mov
push
pop
dec
pop
sti
das
imul
add
or
dec
ds
test
mov
aaa
push
dec
movsb
nop
repnz
cmc
popa
call
jl
rolb
scas
add
ljmp
jae
xorl
xor
movsb
adc
push
push
aam
jmp
pusha
add
mov
out
jns
pop
mov
dec
mov
stos
faddl
add
adc
and
repnz
or
rolb
clc
mov
orb
or
sub
fildl
inc
dec
ret
sub
aad
mov
inc
fwait
scas
and
xchg
scas
jmp
mov
mov
test
sbb
mov
mov
add
mov
xchg
xchg
or
out
fcmovnb
pop
inc
outsl
into
add
adc
xchg
test
sub
dec
pop
mov
sbb
inc
sti
das
lcall
pop
jnp
hlt
xor
mov
cmp
sbb
jecxz
pop
lea
and
aaa
dec
popf
inc
int3
xchg
adc
cmp
push
jmp
loopne
popf
js
lahf
mov
pop
ret
nop
out
stc
jb
std
pop
dec
int3
adc
cmp
out
dec
int3
popf
mov
xchg
jecxz
jno
push
les
arpl
inc
jl
jp
lret
pop
cmc
dec
aaa
ret
pop
movsl
imul
adc
stos
pushf
cli
bound
test
sub
dec
xchg
in
mov
cmpsb
mov
jno
xchg
popa
ret
xchg
jns
adc
mov
imul
cmp
or
out
jge
push
fucomip
mov
jno
pop
dec
and
mov
or
pop
sahf
aas
add
outsl
unpcklps
jbe
xchg
divl
add
lret
popa
movsl
idiv
fwait
dec
or
pop
sub
je
cli
sar
add
dec
xchg
mov
mov
add
aas
xor
jmp
iret
outsl
sbb
fsubs
lcall
pop
ret
xchg
popa
movsb
out
cmp
pusha
mov
lods
cli
push
cs
shlb
ficomps
add
sbb
cltd
pop
into
pusha
repnz
mov
jp
jo
xor
cld
inc
cmpsl
inc
pop
jno
xchg
andl
dec
repz
daa
xor
sti
jl
out
int
sub
andb
xor
push
push
leave
movsl
roll
std
pop
and
xchg
ficompl
cmpsb
hlt
push
jo
sbb
jae
test
xor
mov
in
inc
pop
pusha
cmp
cmp
scas
mov
bound
inc
pop
pop
jecxz
push
sub
aam
aam
lock
aaa
push
and
fimuls
inc
arpl
push
push
dec
jns
mov
cmp
repnz
mov
xor
xlat
popl
inc
pop
xor
into
andl
xor
push
jge
shrl
xchg
sbb
jp
pop
sahf
imul
adc
insl
mov
ret
dec
add
sub
scas
ror
sbb
in
insb
inc
fcomip
std
mov
stc
insl
mov
shrb
lods
xor
adc
scas
xor
cmp
mov
aaa
pop
pushf
shlb
jmp
sub
ret
andl
dec
adc
adc
jb
jae
jle
stos
pop
scas
jb
or
sti
xor
aad
mov
test
sub
rorb
inc
cwtl
je
rclb
fsubs
stos
or
repz
sub
jno
xchg
mov
add
mov
or
test
jle
sub
push
and
and
roll
int
icebp
lret
pop
dec
push
mov
insl
dec
dec
push
add
jecxz
jp
lret
mov
dec
ss
movsl
bound
lcall
dec
fstpt
push
add
subb
and
or
or
or
dec
iret
int3
jno
popa
inc
pop
jmp
loopne
and
sub
inc
pop
bound
cmp
hlt
fisttpl
inc
loopne
push
sbb
sub
leave
inc
dec
ret
dec
loop
scas
adc
and
mov
inc
add
add
add
jl
inc
int
or
stos
xchg
push
imul
cmpl
test
and
pushf
fs
aad
mov
cmp
test
aaa
sbb
faddl
sub
lea
mov
rclb
adc
orl
mov
sti
push
insl
pop
aad
adc
in
popl
sub
dec
cli
cmp
test
sub
rcrl
pop
aam
out
or
cli
jno
fdivrl
pushf
dec
mov
popa
pushl
lock
insb
push
test
adc
loop
rorl
pusha
jmp
out
or
test
sub
push
push
pop
push
jg
jle
aas
mov
out
pop
sub
xlat
movsl
cmp
jo
arpl
daa
sub
inc
cltd
stc
mov
negb
jns
xlat
loopne
ret
mov
mov
adc
mov
xrelease
subb
testl
sbb
mov
mov
sarb
fldenv
push
or
dec
clc
xchg
aas
xchg
dec
bound
and
loopne
aad
test
out
push
pop
mov
pop
pop
in
dec
jl
mov
cmc
pop
mov
jbe
jno
cli
movl
rolb
mov
mov
adc
push
xchg
int3
lahf
dec
sbb
fwait
lahf
dec
aas
and
push
or
xor
movl
jmp
lds
dec
cld
dec
xlat
dec
dec
xorb
push
sahf
adc
push
xchg
loopne
out
sbb
and
push
int3
inc
inc
mov
jmp
push
dec
and
add
mov
dec
jb
fmuls
and
sbb
inc
xchg
push
pop
dec
out
rorl
push
sar
pushf
out
sbb
jmp
out
jl
inc
or
fists
cmpsl
jle
shl
fcoml
cmp
scas
push
lret
push
adc
sahf
mov
aad
int
xor
and
xor
adc
cmp
mov
movsb
out
xchg
adc
inc
mov
sbb
test
inc
cmp
push
shlb
js
loopne
cmp
pop
aas
rcrb
out
ret
inc
pop
fldt
pusha
je
movl
jle
and
loopw
push
push
xchg
stos
sbb
in
add
add
ljmp
imul
ljmp
push
jle
xchg
daa
xchg
stos
clc
lret
pushf
mov
mov
sub
fstps
test
xor
mov
add
xor
jno
mov
add
fnstenv
xchg
mov
into
inc
dec
daa
scas
nop
leave
jb
dec
jle
aad
add
mov
cmp
push
cmp
jo
lret
repz
mov
cmpsl
cld
xchg
cli
hlt
jo
mov
jg
dec
or
ret
dec
inc
std
and
sub
int
jbe
test
in
xchg
sub
fwait
rcll
xchg
out
adc
xchg
jo
cwtl
insb
or
mull
lret
repnz
ret
icebp
dec
pop
push
fmuls
js
pop
xchg
paddusb
add
jae
dec
add
rol
fisubrl
xchg
shll
cwtl
push
in
xlat
lret
jo
ret
in
adc
push
dec
test
js
pop
jns
jb
sub
pop
xchg
mov
cmp
lret
xchg
mov
mov
push
pop
mov
test
cmp
daa
xor
add
inc
pop
ret
push
lcall
fwait
lock
sti
jge
movsb
add
cmp
or
icebp
test
rorl
xchg
cltd
inc
es
cltd
dec
lock
enter
aad
lds
andb
nop
pop
rcl
add
mulb
out
add
addr16
xchg
mov
popa
cltd
cli
xchg
out
add
cmpsl
or
aaa
movsl
mov
adc
imul
in
fimull
cmpsb
icebp
arpl
imul
out
pop
faddp
push
mov
int
jge
sub
jg
bound
jbe
lods
jge
add
aaa
adc
pop
push
pop
gs
jl
jge
cmp
or
aam
and
add
mov
dec
mov
push
add
cmp
mov
xor
shll
aaa
in
jp
imulb
jmp
repnz
push
shl
cmovle
cld
negl
lods
jae
mov
push
sub
adc
mov
into
cltd
xchg
fldt
xchg
repnz
out
sub
add
dec
sub
sbb
lret
pop
rcrl
jle
and
int
xchg
jne
cmp
js
lods
xor
das
lret
inc
pusha
pusha
dec
mulb
fildll
std
je
xor
inc
and
xchg
outsl
cmp
arpl
mov
pop
pop
mov
xor
mov
and
es
jmp
je
cmpsb
pop
sti
sbb
out
pop
sub
ljmp
stos
mov
xor
loopne
add
aas
push
jae
xchg
dec
icebp
lods
mulb
mov
jne
les
mov
ljmp
mov
mov
test
pop
orb
lcall
call
mov
icebp
lds
jb
add
dec
push
insb
popa
out
shll
jg
icebp
mov
out
push
mov
sub
inc
sbb
add
xchg
jge
xor
xchg
loopne
mov
inc
mov
daa
test
outsb
mov
lcall
shr
push
sahf
mov
mov
push
cmc
clc
in
mov
scas
repz
idivb
add
mov
adc
mov
adc
lods
sub
ja
inc
mov
jae
stos
jmp
adc
inc
leave
out
popf
xorl
mov
call
sbb
test
fisubrs
test
fnsave
clc
cmp
add
lret
mov
aad
adc
fcompp
cld
push
lret
lcall
mov
aad
ficoml
cmp
mov
inc
xchg
xor
fsubrs
imul
sub
mov
adc
xchg
xor
iret
aas
push
cmp
scas
sarb
xor
enter
or
sbb
fisubl
arpl
jle
mov
scas
pop
ret
push
or
adc
xor
les
push
orl
xor
rclb
daa
bound
aaa
scas
inc
jge
and
or
pop
adc
int3
mov
pop
mov
and
aam
xchg
cld
sub
pop
or
dec
out
test
xchg
push
jbe
in
jge
jbe
test
dec
shrb
and
movsb
sahf
add
xor
mov
xchg
enter
jecxz
punpckhbw
rorb
adc
fistl
add
shrl
paddusb
mov
loopne
bound
sbb
jnp
inc
test
jmp
movsb
mov
add
xchg
pop
out
xor
and
sub
jl
js
pop
out
aam
test
das
pop
sbb
popa
int
mov
sar
sub
adc
lret
leave
int
jns
insb
out
out
test
sub
jne
ror
push
inc
pop
cmp
addr16
sub
enter
pop
clc
sahf
fldcw
xchg
insb
sbb
jb
int3
cli
jge
xchg
aam
psllw
jnp
or
adc
idivb
out
stos
cmp
outsl
push
pop
lcall
mov
jbe
sub
mov
add
push
mov
ret
jg
xor
mov
popf
ret
mov
xor
aad
push
adc
push
in
xor
add
jp
jne
pop
pop
mov
pop
dec
mov
lahf
push
cld
jp
xor
cld
pop
sub
sbb
fwait
mov
and
das
jns
push
out
lahf
popa
and
mov
add
ret
clc
outsb
push
fstpl
pop
adc
cs
pusha
inc
xchg
jae
jle
dec
stos
leave
and
js
fidivrs
fnstsw
mov
push
inc
cltd
rcrb
lods
xor
mov
push
daa
out
pop
sbbl
pop
lcall
movsl
in
jge
mov
push
out
int3
stc
ds
aas
jmp
call
pop
imul
rcrb
mov
cs
bound
push
aam
mov
cmp
push
and
ret
nop
push
xor
insl
push
decb
push
jns
ljmp
xchg
in
aam
cwtl
mov
add
fucomip
outsb
sub
dec
inc
inc
ss
cwtl
pop
jge
jb
mov
sub
mov
jecxz
sub
inc
add
mov
mull
and
lock
sarb
cmp
mov
stos
sahf
push
stos
add
imul
or
loope
push
xor
aas
inc
loop
test
pop
cmpb
mov
movsl
xchg
jmp
inc
dec
mov
pop
cmp
ds
ljmp
dec
std
mov
jno
fldl
lods
arpl
jecxz
xchg
and
xorl
lods
and
faddl
dec
rclb
dec
inc
or
cmp
mov
push
clc
bound
inc
dec
mov
lret
fs
pusha
leave
xchg
cmpsl
add
pushf
inc
call
mov
dec
fstpt
sbb
xchg
int3
hlt
pop
cmp
pop
adc
or
mov
cmp
mov
dec
pop
cmp
dec
fisttpl
jo
mov
test
cmp
or
cmp
dec
inc
add
jl
in
test
dec
push
xlat
mov
fildl
ror
in
call
and
mov
cmc
jecxz
test
andb
pop
add
sbb
push
mov
push
sahf
cmpsl
adc
xor
test
out
das
dec
and
cs
imul
push
cmp
xor
jo
push
xchg
cmp
test
xlat
mov
data16
mov
pop
mov
addl
repz
insl
sbb
push
adc
sarl
add
push
fidivs
fiadds
and
mov
pop
cwtl
std
mov
xchg
loop
xor
xor
inc
jo
pop
pop
push
cmp
dec
test
aas
mov
or
jp
icebp
inc
push
jle
js
mov
cmpl
push
pop
aas
movb
cs
hlt
insb
loop
hlt
mov
popf
lret
inc
or
in
rolb
sub
jo
xlat
pop
imul
repz
adc
dec
movsl
ds
fs
jp
push
mov
xchg
shll
loopne
lea
ss
iret
mov
test
and
xor
lock
pop
mov
mov
cmc
mov
inc
sbb
dec
sti
xor
ljmp
cltd
fidivs
bound
xor
xchg
pop
xchg
sub
mov
icebp
int3
inc
sub
xchg
neg
rorb
jns
mov
jae,pn
push
add
frstor
in
cmp
mul
cmp
popf
sub
dec
loop
lret
jae
loopne
and
add
mov
stos
leave
cmp
gs
inc
dec
ss
das
scas
pop
xlat
pusha
inc
mov
push
fs
out
les
mov
repnz
shll
push
mov
sbb
add
je
cltd
mov
daa
add
or
push
popf
aas
lcall
movsb
cmp
loop
ja
rcrl
push
clc
push
push
mov
pop
cmpsb
push
fistps
inc
mov
js
jge
mov
sub
cmpsb
leave
mov
xchg
scas
imull
inc
jge
std
shll
cmp
insl
push
jl
pop
stc
mov
test
mov
arpl
xor
dec
ja
out
in
in
lret
add
int
xor
shll
add
xor
push
out
xor
stc
fisubl
sub
pop
sahf
pop
int
xchg
push
lds
sub
popa
mov
lahf
adc
fidivl
sbb
pop
daa
lea
aam
cld
scas
pop
or
pop
idivb
adc
push
pop
shlb
jo
mov
or
lcall
ret
mov
stos
jbe
std
pop
dec
cmp
gs
ss
push
std
push
xchg
fisttpl
inc
mov
mov
int3
pop
out
jmp
int3
out
xchg
jns
mov
int3
fisttpll
adc
enter
shrb
decl
loope
jae
cmp
pop
and
outsb
scas
loopne
sbb
add
lcall
pop
fadd
shrb
xchg
dec
dec
mov
xchg
inc
outsb
clc
out
mov
jb
mov
mov
and
mov
lcall
fdivrl
xchg
inc
sahf
inc
das
push
loop
movsl
rorl
jns
sbb
or
enter
ja
fs
pop
mov
clc
xchg
mov
jmp
or
mov
scas
adc
and
and
add
and
sub
pop
sti
push
jae
lret
fcoml
or
loope
inc
divb
je
jae
pop
pusha
or
or
push
dec
and
adc
mov
scas
int3
jmp
xor
stos
imul
test
mov
lods
inc
adc
dec
ljmp
insl
jle
and
scas
ds
or
pushf
imul
test
mov
mov
inc
out
dec
leave
cmp
ja
test
fisubl
add
das
sbb
xchg
inc
popa
pop
in
out
push
adc
cs
stos
int
adc
fstl
repz
ss
adc
fstpl
or
jmp
sbbl
pop
mov
outsl
push
outsb
mov
push
or
out
xchg
cwtl
inc
or
adc
lret
aam
push
xchg
daa
fwait
xchg
icebp
pushf
or
enter
test
sbb
jl
out
in
jmp
add
rcrl
sub
test
and
push
stc
test
mov
test
cltd
inc
pop
incb
out
inc
fstps
mov
out
lds
adc
push
pop
fnsave
dec
iret
pop
clc
mov
mov
daa
cld
mov
push
xchg
mov
jecxz
pop
xor
xor
mov
aam
mov
inc
fmul
mov
sbb
sahf
mov
lahf
push
dec
stc
in
or
movsb
clc
mov
cwtl
dec
lea
pop
lock
adc
jmp
sub
push
dec
shll
push
cmp
pop
or
mov
sub
jbe
gs
mov
mov
sub
inc
cmp
inc
in
dec
pop
inc
daa
mov
cmp
mov
mov
xchg
mov
in
xor
mov
xor
out
fcmovb
pusha
loopne
mov
and
inc
call
mov
test
daa
and
cmpsl
outsl
or
sbbl
in
xchg
push
test
add
push
cmpsb
ss
out
insl
cmp
lret
jae
icebp
jecxz
mov
jnp
sahf
pop
bound
jg,pt
jno
xor
divb
scas
aas
lods
loopne
or
and
sbb
lds
inc
int3
loop
add
out
mov
orl
xor
imul
mov
push
or
add
push
mov
pop
movsl
xlat
ljmp
mov
push
pop
repz
movsb
and
add
fnstsw
mov
xchg
xchg
sbb
push
lods
sti
add
push
aad
in
push
loopne
mov
cmp
imulb
out
mov
lods
pop
ljmp
inc
xchg
in
mov
jle
cmc
es
loope
adc
fwait
add
movsb
mov
and
and
call
pop
cmp
xor
pop
add
loopne
push
mov
cltd
xchg
shlb
or
jg
test
into
sti
shlb
and
xchg
jnp
cltd
imul
mov
add
inc
lret
push
xchg
push
lea
mov
loop
ret
jl
xor
push
mov
aas
inc
adc
out
jns
or
or
inc
add
push
push
or
add
cltd
int3
out
and
xchg
inc
inc
push
in
sbb
in
and
or
add
gs
jb
leave
xor
loope
mov
lods
dec
mov
addr16
sarl
lea
fwait
lods
imull
aam
dec
sbb
lods
add
xor
testl
lcall
aas
mov
mov
xchg
loopne
xor
sub
add
ds
sbb
cmp
addl
fcomi
int
mov
mov
pop
jge
stc
pusha
nop
xor
fld
nop
ds
or
xchg
gs
xchg
fs
sub
and
psraw
movsb
popa
pop
fsubs
dec
insb
movsl
movsb
outsb
in
adc
pushf
and
inc
in
sti
shrl
mov
push
jno
arpl
and
jge
loope
lahf
push
jb
inc
ret
push
inc
cmpsb
mov
ret
adc
lds
fiadds
xchg
aas
mov
xor
aad
fistps
pusha
out
stc
clc
aam
push
add
roll
imul
into
dec
xor
int
cli
pop
adc
jns
test
hlt
enter
fsubl
xor
mov
pushf
inc
sub
call
mov
adc
sub
aas
mov
inc
js
pop
negb
sbb
add
sbb
xchg
cmp
fs
fimull
dec
jp
daa
aaa
rol
dec
mov
icebp
mov
adc
jbe
shlb
xchg
xor
jp
xchg
push
xchg
lods
ja
mov
int
cmp
mov
sbb
sbb
xchg
cltd
xor
and
jmp
incl
and
mov
orl
pop
inc
dec
pop
or
int3
sbb
hlt
stos
adc
pop
in
xchg
scas
inc
lods
xchg
arpl
outsb
sbb
xchg
or
jno
jl
mov
sbbb
fldl
mov
sub
imul
mov
lods
test
inc
std
mov
out
shlb
xchg
push
push
push
out
xchg
sahf
aam
ljmp
mov
inc
lcall
cmpl
pop
push
xchg
inc
mov
test
aad
add
dec
loope
bound
add
sarl
push
add
mov
mov
in
sbb
imul
out
jl
mov
jecxz
ss
scas
jbe
push
repz
jle
xor
mov
scas
xlat
mov
ljmp
dec
rcrl
shll
push
sbb
enter
mov
imul
or
sbb
jo
test
push
js
in
mov
xchg
mov
sahf
outsb
lcall
xchg
movsb
inc
dec
sbb
aam
mov
sub
movsb
cmpsb
idivl
repnz
scas
test
scas
adc
adc
sti
filds
aam
mov
or
aad
call
scas
mov
inc
add
int
aad
outsl
pop
inc
movsb
pusha
xchg
xchg
cmpsb
sbb
mov
cmpsl
xor
sbb
mov
adc
lahf
fwait
sbb
lods
in
std
mov
ret
dec
adc
cmp
add
loop
cmp
shlb
test
jae
inc
fcoms
mov
cmp
adc
jle
and
adc
sbb
flds
push
shrl
sub
mov
push
jae
scas
mov
or
in
and
lods
push
stos
xchg
add
sub
or
aad
subb
call
or
adc
mov
mov
outsl
stc
mov
sbb
inc
push
sbb
cmp
push
add
ljmp
hlt
fmull
jge
and
into
cmp
or
daa
pop
xlat
push
addb
push
jbe
in
mov
mov
lods
jle
mov
test
adc
mov
adc
fs
fs
sub
daa
add
in
push
cltd
rol
adc
pop
sbb
sbb
std
adc
push
icebp
cmp
adc
pop
cmp
dec
mov
sbb
push
dec
mov
inc
lock
mov
jge
scas
stc
insb
fnstcw
sar
pop
hlt
sub
cs
daa
push
bound
push
subb
adc
push
xor
mov
lret
cmp
and
stos
mov
xor
xchg
xchg
dec
cmpsl
sbb
jns
add
dec
cld
pop
mov
test
push
push
xor
mov
enter
cmp
add
movsl
fiaddl
cwtl
pop
pop
cmpsb
int3
jmp
in
lahf
mov
hlt
sub
pop
out
xor
jb
xor
xchg
fildl
push
jne
insb
add
lods
je
jmp
xor
mov
cmc
inc
sbb
ljmp
mov
aad
pop
inc
and
shl
push
sub
clc
out
imul
ret
mov
addr16
popf
lcall
push
jge
mov
inc
movsb
stos
rcll
mov
pop
out
std
fst
shl
mov
or
popa
mov
sbb
enter
mov
cmp
inc
idivb
frstor
andb
inc
aas
loop
cld
cmp
sbb
out
xor
cmp
cltd
insb
and
xor
pop
cmp
pop
pop
imul
ret
xchg
mov
dec
mov
xor
stos
xchg
mov
jbe
dec
or
sbb
push
mov
clc
sub
sub
lahf
push
mov
loop
fdivrs
jmp
adc
shrl
sub
mov
pop
or
outsb
mov
lea
xor
iret
cli
sti
fs
imul
out
jg
cmp
es
aaa
pop
mov
jne
add
add
pushf
xor
fmull
enter
addr16
lret
pop
lds
jle
dec
lods
stos
mov
dec
sbb
cs
xor
pop
dec
pushf
pushf
movnti
lods
dec
inc
jmp
ds
pusha
adc
xchg
ljmp
inc
dec
aaa
xor
dec
data16
jo
jo
je
movq
xchg
fsub
jns
shrl
jae
xor
je
mov
xchg
faddp
notb
scas
add
mov
imul
adc
pushf
addr16
imul
inc
and
dec
mov
popf
mov
in
adc
shr
inc
adc
into
dec
xlat
popf
nop
fucomip
mov
mov
in
jp
lahf
push
scas
mov
pop
out
insl
bound
xor
pop
arpl
cmp
pop
xchg
xchg
xchg
jnp
pop
es
sub
xor
das
lahf
mov
jb
mov
scas
lret
cmc
scas
push
or
imul
cmp
cmp
icebp
scas
dec
test
shl
inc
mov
mov
call
decl
sti
js
fidivrl
fistl
mov
je
loopne
shlb
pop
mov
fmul
loop
push
jb
push
enter
pop
and
pop
jb
xchg
pop
test
std
imul
or
mov
pushf
lock
stc
jb
in
int3
add
cmpsb
xchg
lret
and
stos
cli
pop
popa
dec
push
xchg
xchg
aas
cmp
sbb
xchg
pop
mov
push
nop
and
lea
sbb
pop
stc
pusha
mov
hlt
sub
cltd
xchg
jg
ror
arpl
es
imul
push
and
pusha
iret
adc
in
lods
pop
out
hlt
test
push
cmp
inc
dec
push
int3
jge
shrl
aas
xlat
aam
jle
daa
inc
mov
jl
movsl
in
xchg
in
cwtl
outsb
in
imul
sub
bound
xchg
fwait
push
pusha
popf
push
bound
fdivrl
cmp
loope
in
ds
inc
inc
adc
mov
sbb
dec
mov
inc
add
xchg
lea
dec
aam
je
int3
jb
stos
popf
es
je
xchg
loop
or
cltd
aaa
adc
mov
and
jle
movsb
fwait
cmp
movsb
lret
rol
fs
push
dec
in
testb
xor
call
fldcw
fcomip
mov
and
popa
add
lods
sahf
push
jae
out
mov
cmp
sbb
xchg
pop
ljmp
mov
cmp
cmp
shll
ljmp
testb
js
call
xor
aas
xor
aaa
mov
or
push
fldenv
jg
jmp
pop
lret
outsl
mov
sbb
loop
dec
add
or
push
fwait
jecxz
cmp
imul
les
push
push
mov
mov
mov
jne
sbb
mov
faddl
ljmp
aas
popf
aam
ja
in
sbb
ret
xchg
outsl
xor
mov
lods
call
fnstcw
movsb
sub
mov
xchg
lods
fists
aas
push
jge
fwait
add
sbb
inc
imul
jb
inc
testl
repnz
shll
push
jno
dec
outsl
ss
mov
sbb
mov
cld
mov
mov
mov
pusha
pusha
lods
subb
fs
cld
pop
adc
xor
scas
push
and
call
or
in
sbb
lds
add
and
and
pop
aas
lods
mov
out
scas
mov
pop
push
enter
repz
pop
or
outsb
rcll
adc
loop
push
and
and
andb
add
stos
push
inc
xchg
sbb
mov
pop
insl
pop
loop
rorl
push
cmp
and
pop
mov
outsb
or
jnp
insb
jno
hlt
xchg
sub
andb
or
in
movsb
repnz
adc
push
mov
mov
int
sub
fidivl
xchg
stos
enter
jns
adc
aaa
mov
add
ret
cmpsl
xchg
mov
cmc
ja
push
push
push
pop
xchg
daa
iret
leave
pop
mov
inc
stos
mov
in
das
dec
pop
sub
cmpsl
xchg
adc
stc
aaa
incl
sub
mov
and
xor
cmp
mov
inc
leave
in
jle
jo
xchg
movsb
fldenv
push
in
imul
xor
fdivl
pop
fidivrl
jge
fsubr
xor
mov
stc
inc
idivb
push
loop
outsb
ficoml
loop
ljmp
cmp
adc
insl
dec
lahf
ret
out
int
jl
enter
repz
sub
jne
mov
out
lods
call
mov
push
pop
xchg
out
sbb
push
fcoml
std
in
out
pop
ljmp
jb
mov
cmc
imul
cwtl
jl
loope
aaa
dec
lahf
hlt
dec
loop
adc
sbb
rcll
stc
and
jecxz
and
push
jmp
stc
or
sub
push
dec
jmp
and
push
daa
subb
and
add
sub
lcall
xchg
fcompl
push
decb
or
pop
and
jns
fidivrl
stos
mov
sbb
and
fsubrl
pop
push
lret
push
mov
mov
stos
adc
data16
insb
sbb
test
adc
xor
cs
push
mov
or
dec
stc
stos
mov
jne
adc
xchg
and
mov
lret
pop
or
mov
cmp
inc
out
sbb
pop
cmp
imul
pusha
fsubrs
lcall
mov
cmp
mov
jle
out
inc
frstor
push
push
jg
adc
popf
loopne
pushf
or
aaa
lahf
add
ret
pop
mov
push
pop
enter
push
cmp
mov
or
popf
dec
in
lods
mov
mov
adc
push
lods
loopne
divb
out
incl
mov
inc
inc
rclb
popf
mov
divl
fs
not
clc
aam
out
cmp
cs
and
xor
addr16
push
loope
mov
out
out
mov
js
mov
fcomip
and
jne
in
sbb
sub
xor
imul
and
testl
test
xor
cmpsl
int3
and
dec
icebp
sub
shlb
popf
popf
jbe
jle
xor
outsl
hlt
sbb
push
incl
jmp
jns
adc
lods
mov
add
or
pushf
ljmp
and
jns
mov
xchg
mov
mov
mov
mov
push
lret
stos
adc
je
sbb
cmpsl
cmp
les
cltd
jp
daa
sbb
cmpsl
ds
lock
pop
jge
jb
fimuls
inc
aas
add
add
insb
xor
sti
mov
ds
xorl
scas
adc
xor
test
stos
push
cmp
aaa
fsubrs
sbb
movupd
mov
xlat
adc
into
lret
repz
subb
rorb
mov
pop
enter
xchg
push
fmulp
or
adc
int
sti
pop
loope
and
and
ror
dec
std
popa
stos
int
mov
or
jo
cmovno
js
sub
push
adc
dec
test
sahf
fcoml
insl
inc
mulb
adc
add
add
out
mov
sbb
mov
imull
mov
rcrb
loopne
push
aas
inc
inc
popf
jae
mov
push
and
ret
iret
outsl
nop
fsubrs
loopne
lods
mov
push
setns
jns
mov
arpl
push
pop
xchg
gs
or
ret
pop
push
dec
dec
or
mov
inc
dec
adc
inc
shrb
jns
add
sbb
in
jbe
xchg
jecxz
mov
dec
jmp
outsl
ljmp
filds
loope
push
jae
sti
in
imul
subl
clc
or
sub
or
xchg
addr16
add
xor
ds
icebp
in
mov
lock
cli
push
inc
fdivrl
add
test
testl
movsl
adc
test
gs
add
xor
es
xchg
test
sbb
mov
out
xchg
add
divb
mov
inc
jnp
ficoms
or
adc
add
jb
and
test
adc
insb
xchg
xchg
push
pop
into
cmp
pop
xchg
out
pop
sub
or
jg
ds
mov
lea
aaa
js
mov
or
sbb
sub
push
xchg
lret
ret
rol
js
cmpsl
dec
loope
lea
arpl
test
xor
jo
adc
xorb
push
ja
push
mov
and
ja
xchg
and
mov
mov
test
or
sti
mov
sbb
sahf
out
adc
push
fisubrl
mov
filds
out
rcrb
in
push
jae
sub
pmuludq
xchg
and
xchg
mov
jl
in
fisttps
mov
adc
fwait
scas
insb
scas
int3
mov
test
rclb
icebp
mov
sbb
pop
lret
mov
adc
icebp
xlat
mov
cs
xorl
xchg
bound
sbb
sbb
dec
mov
clc
mov
sub
sbb
rcrb
mov
shl
cmp
jle
outsb
iret
idivb
roll
cmpl
mov
and
xchg
outsb
sbb
add
scas
push
js
push
mov
loope
mov
cmp
pop
iret
ret
mov
jp
or
dec
inc
xchg
sbb
fwait
push
push
push
lds
lret
in
in
xchg
into
repnz
adcb
out
jae
pop
pop
mov
push
mov
stos
jae
test
jmp
jb
sahf
test
or
xchg
cwtl
es
sbb
dec
dec
sti
sahf
or
insl
cltd
mov
add
adc
mov
fisttpl
in
fistps
in
out
mov
pop
mov
xchg
xchg
jg
ljmp
sub
sahf
icebp
mov
push
pusha
adc
sbb
das
add
push
xorb
lock
sbb
add
je
pop
pop
jge
test
push
lds
aas
add
cltd
mov
stc
popa
mov
dec
jge
jb
push
je
sbb
lret
cwtl
mov
stc
test
aas
jp
je
adc
pushf
sub
mov
inc
pushf
outsb
push
into
data16
pop
sub
inc
popf
and
jae
imul
enter
xchg
adc
mov
pop
or
fs
jmp
lods
push
sbb
ret
cmpsb
shlb
mov
jge
adc
imul
outsl
outsb
int
in
dec
mov
inc
hlt
gs
pop
xor
call
stos
cmp
dec
out
xor
icebp
jge
xchg
shrb
xor
push
jo
pushf
test
and
lods
arpl
or
push
push
push
test
lods
lahf
sbb
lret
inc
scas
stos
xor
cs
lcall
rcrl
ret
das
push
imul
loope
mov
add
dec
lahf
cld
cmpl
addb
in
mov
out
xor
or
test
je
mov
test
xchg
sbb
push
dec
mov
stc
xchg
scas
lahf
push
clc
xor
insl
adc
enter
or
das
sub
mov
mov
out
ret
adc
jb
js
sub
imul
mov
shll
adc
mov
adc
jle
out
pop
rorb
in
sbb
fistps
fisubrs
aaa
fdivl
cmpsb
js
xchg
and
mov
ret
sub
sbb
mov
mov
int3
or
repnz
cmc
dec
sub
leave
ret
mov
pushl
push
push
xchg
mov
dec
mov
shrl
shrb
or
mov
sbb
xchg
push
pusha
and
rol
xor
iret
or
lret
lock
scas
mov
push
aam
addr16
mov
clc
ljmp
xchg
xor
or
pop
xchg
or
leave
xchg
test
pop
cmp
pop
and
or
hlt
cld
ds
lcall
push
mov
inc
sbb
cmc
adc
cmp
pusha
pusha
mov
and
ss
out
cli
xchg
lea
cmp
push
jno
or
inc
repz
mov
cwtl
iret
push
jae,pt
orb
testl
cmp
mov
lret
sbb
adc
mov
test
popf
fldenv
stos
xor
in
add
sub
mov
mov
jae
push
mov
push
push
shr
out
xchg
stos
jp
popf
mov
ret
sub
push
cmpsb
test
je
out
cmp
or
cmp
sub
xor
sub
jo
jle
inc
shrl
popa
xor
aad
and
pop
outsl
stos
push
fwait
mov
mov
mov
sti
outsl
std
mov
pop
dec
inc
jmp
sub
mov
and
mov
push
sbbl
inc
jmp
xor
and
mov
lods
insb
insb
xchg
sbb
xorl
ljmp
pop
mov
sub
push
xchg
pop
arpl
ss
push
in
mov
and
and
cld
repz
jb
xlat
sub
bound
mov
sub
sbb
ret
das
ss
rcll
out
fsubrl
rcll
add
xor
mov
jg
mov
or
adc
lock
mov
int3
dec
es
out
inc
cld
ret
dec
outsb
loope
pop
jge
inc
pop
xor
xchg
outsb
das
in
fwait
clc
adc
dec
inc
mov
faddp
xchg
cmc
push
and
xchg
or
adc
push
fwait
enter
outsl
cmpsl
mov
sbb
or
iret
mov
jmp
iret
ffreep
sub
adc
lret
cmp
dec
push
in
fnstsw
xchg
sbb
daa
orl
inc
sahf
or
pushf
aas
enter
cmpsb
mov
xor
fisubrl
loop
lods
out
inc
sub
repnz
xchg
sbb
pop
outsb
push
sti
xchg
push
push
mov
shlb
rclb
cmp
inc
aas
cmpsb
mov
into
sbb
or
xor
ja
fsubr
hlt
lret
dec
mov
inc
je
ret
pop
push
and
sbb
jno
dec
daa
xchg
push
addr16
add
add
mov
subl
mov
je
cmc
fsub
cmp
mov
out
adc
gs
popf
clc
mov
mov
imul
scas
jne
xchg
movb
adc
mov
cltd
push
in
dec
movsl
mov
cmp
je
jbe
cmp
mov
fs
and
push
outsl
jg
dec
mov
mov
add
add
mov
jecxz
add
test
shr
or
aas
cltd
in
push
enter
out
fldcw
or
mov
xor
xchg
xchg
mov
aas
adc
xchg
add
sub
or
lock
fdivs
in
mov
push
dec
pop
loopne
rcll
movsb
stos
pop
nop
mov
jns
pop
data16
push
push
fnstenv
add
pop
lahf
jmp
pop
sbb
lcall
into
jmp
add
ret
inc
pop
pop
push
or
jne
insb
xor
adc
das
addb
push
sbb
pop
jae
lds
add
lea
or
or
cmp
cmpsl
repnz
stos
stos
jg
adc
jno
fadds
push
mov
ret
pop
mov
fmull
outsb
outsl
pop
mov
daa
push
ds
fsubl
arpl
pushf
enter
mov
sbb
mov
iret
mov
mov
js
pop
fmull
push
pop
mov
cmpsb
push
mov
sbb
xor
mov
add
pop
push
orb
mov
sbb
inc
cmp
int3
pop
push
pop
add
leave
push
jge
clc
shll
push
add
inc
jne
sahf
test
push
es
inc
jmp
cmp
addr16
mov
mov
xor
popa
dec
gs
and
or
fisttpll
mov
insb
mov
sub
ret
sub
sub
cmp
or
int
lods
stos
inc
jle
jg
data16
adc
push
test
out
aam
pop
and
and
mov
ficomps
and
fwait
clc
mov
les
pusha
dec
outsb
xchg
push
inc
fwait
mov
fisttpll
daa
inc
sarb
xor
repnz
pop
rcll
jbe
sbb
js
pop
int
push
out
sub
dec
push
or
add
jne
push
dec
jo
push
js
rcr
stc
fildll
in
gs
loop,pt
cmp
bound
popa
movsl
jl
xchg
mov
push
fstpt
cwtl
sub
mov
add
arpl
mov
mov
xchg
mov
loope
dec
xor
cs
sbb
push
jb
and
and
cmp
loop
call
out
push
iret
arpl
dec
incb
push
adc
jne
add
mov
sbb
or
lds
mov
in
jl
out
adc
cmp
insl
mov
and
sub
mov
dec
mov
push
mov
insb
sbb
iret
rcrb
or
loopne
hlt
shrb
dec
insl
ret
fsts
dec
loop
paddd
or
xchg
ljmp
ja
es
lahf
jne
shlb
shll
mov
lcall
shrl
jg
aad
sbb
jl
ljmp
fwait
cmp
pop
stos
dec
scas
push
inc
adcl
mov
mov
in
mov
mov
mov
mov
cld
mov
cmova
lds
xlat
xchg
jl
cld
stos
add
and
loop
dec
fstps
jne
xchg
cli
stos
outsb
cmpsl
gs
mov
adc
nop
cmp
test
shrb
lods
xor
test
bound
enter
fs
repz
ret
mov
dec
lret
sbb
jge
adc
in
xchg
and
lret
push
cmp
and
cmp
test
sub
adc
in
xchg
pop
pop
cmp
jmp
sbb
int3
pmuludq
lret
sbb
push
push
cmp
jnp
adc
test
push
movsb
lcall
add
stc
pop
mov
shlb
push
xchg
pop
mov
bound
ljmp
mov
mov
negb
fmulp
xchg
mov
cld
ds
inc
cmp
in
stc
and
loop
cmp
jnp
cmp
push
xchg
xchg
inc
adc
aad
mov
int3
mov
push
int3
stos
wrmsr
fistpl
dec
pop
add
push
fisttpl
add
fs
nop
inc
mov
pop
adc
rcll
ret
jp
add
pop
cwtl
inc
jle
xor
je
lock
push
rcrb
je
pop
and
cmpsb
out
xchg
into
hlt
jg
push
cmp
pop
and
leave
push
enter
sbb
movsb
mov
imul
mov
sub
cwtl
movsl
insb
mov
lods
adc
add
xchg
cltd
sub
filds
sbb
pushf
cld
imul
adc
add
cmp
inc
inc
sbb
hlt
jmp
or
pop
lret
std
sub
shrl
cmp
pop
js
push
inc
sbb
add
imul
push
jle
push
sub
and
shl
cmp
push
les
sub
test
out
insl
lea
cmp
movsl
ss
out
mov
aaa
add
in
xchg
lret
push
scas
jae
test
mov
rcrl
pop
sub
sbb
and
push
fcmovbe
inc
std
and
push
push
mov
and
sbb
add
xor
xor
fwait
out
inc
cmp
push
dec
gs
cs
test
mov
pop
add
push
and
add
popf
sub
xor
pop
pop
sti
push
fs
lods
rcrl
scas
or
lcall
arpl
bnd
push
pop
xchg
fnstsw
je
testb
dec
sbb
jbe
sbb
jmp
or
pop
aad
int3
inc
push
test
hlt
xlat
adc
in
lcall
xchg
cmp
adc
pop
int3
or
fs
pusha
mov
popf
sub
bound
pop
pop
aaa
pushf
fisttps
ljmp
adc
lret
data16
push
dec
dec
addr16
out
mov
lret
out
js
icebp
scas
push
inc
xchg
fs
aam
adc
sbb
in
into
adc
jno
inc
cmp
scas
bound
outsl
test
cwtl
xchg
or
pop
pusha
sbb
ret
out
mov
mov
mov
out
test
daa
stc
mov
or
int
shrl
out
fxch
faddl
aaa
outsb
fsubl
inc
mov
inc
dec
cmp
ficompl
xchg
imul
push
flds
cltd
xor
lahf
jge
ror
clc
push
popa
clc
push
and
or
mov
xchg
jne
push
stos
cmp
mov
or
cmp
dec
mov
inc
cwtl
push
push
aam
dec
outsl
push
push
js
inc
cmp
xor
mov
xor
aam
repz
push
push
jle
sub
pop
cmp
sahf
test
and
inc
dec
and
test
mov
mov
mov
mov
lret
leave
jae
loop
xor
add
push
ret
andb
es
cmc
notl
xor
push
cmpsb
adc
jl
cmpb
jno
or
movsb
mov
mov
insl
xchg
xchg
inc
jb
data16
mov
fs
jnp
xchg
in
cmp
xchg
or
sqrtps
mov
fimull
add
and
jl
dec
lcall
ss
sarl
and
jg
add
cmpsl
ret
xchg
daa
movsb
fwait
cmp
out
lret
sahf
push
shlb
in
in
nop
pusha
out
push
xchg
sbb
cmc
shlb
or
jge
insb
xchg
ret
nop
pop
jp
add
lods
cld
test
sub
mov
xor
cmpb
pop
jae
aam
adc
loope
pushf
sub
sahf
pop
dec
je
inc
out
aaa
les
and
xchg
xchg
imull
fsubs
xor
nop
sub
addr16
mov
out
cmp
push
mov
xchg
movsl
loop
xchg
xor
jae
aad
adc
mov
pop
ja
mov
daa
mov
mov
lret
sub
sbb
out
and
add
fildll
push
push
jecxz
mov
movsb
fcmovbe
adc
push
popa
xchg
loopne
dec
rorl
daa
rorl
dec
mov
xchg
call
out
ljmp
cmp
adc
std
cltd
and
testl
iret
jl
ror
dec
pop
add
icebp
adc
insl
mov
inc
pop
inc
cmpl
ficoml
rclb
je
inc
pushf
ret
mov
cs
cmp
sub
add
cs
add
daa
loope
mov
pop
insb
ror
out
enter
push
push
pop
lret
inc
push
push
ficoms
add
int
push
decl
inc
adc
sub
pop
imul
decb
int
sbb
mov
lret
mov
or
mov
cmp
sahf
inc
out
adc
dec
cmpsl
mov
and
push
jg
andl
pop
or
clc
int3
inc
adc
and
mov
mov
pop
cmpsb
mov
imul
pop
jmp
pusha
push
lods
mov
sbb
pop
shr
xor
jecxz
lds
les
mov
out
aas
bound
je
int3
jl
cld
rorb
mov
pop
jp
pushw
gs
add
stc
out
int3
pop
pop
lret
shlb
lock
mov
addr16
fwait
test
push
fstl
repnz
and
fstpt
test
inc
lods
addr16
dec
arpl
sbb
loop
stc
ds
dec
pop
mov
fisubl
add
mov
out
pusha
andl
mov
dec
gs
mov
stos
push
and
inc
cmp
mov
mov
fnstsw
sbb
inc
nop
mov
fists
in
sbb
jecxz
rclb
jo
or
popf
jp
push
xchg
jns
cltd
popa
xor
jp
ret
lret
iret
dec
jp
xor
lods
push
mov
cmp
sarl
in
cmpsl
jg
lret
mov
jno
push
adc
or
shll
mov
dec
jbe
xchg
mov
test
push
push
pop
int3
gs
sub
jecxz
pop
popf
and
arpl
sbb
cli
aam
pop
jno
push
test
xchg
loope
cmpsl
dec
rclb
xor
xchg
outsl
mov
adc
cmp
jns
data16
add
mov
inc
fsubs
shll
xor
xchg
add
jge
sub
sbb
xor
mov
adc
sub
mov
cwtl
xorb
mov
and
and
sahf
sub
mov
cli
push
pop
push
in
push
jge
or
fadds
mov
lods
insb
or
adc
add
test
sub
push
ret
mov
arpl
or
imul
push
xor
sub
push
cmp
xor
out
and
cmp
and
leave
popf
push
add
inc
clc
imul
imull
dec
aas
jo
or
and
lods
push
andb
jecxz
mov
outsl
icebp
mov
sub
mov
dec
jnp
push
mov
sbb
arpl
lock
das
ds
dec
and
dec
inc
inc
adc
push
sahf
frstor
dec
push
imull
sbb
xor
push
xchg
adc
xor
movsl
push
pop
test
sti
pop
pop
add
insl
inc
sti
in
jge
jge
or
out
pop
mov
xchg
cmp
jmp
push
decl
aad
in
std
aam
mov
cli
lods
xchg
push
dec
pop
push
inc
imul
test
xor
mov
jle
movsb
cltd
std
out
mov
inc
outsb
lret
jb
out
mov
jb
push
push
scas
leave
outsl
imul
lds
mov
or
cmp
mov
xor
int3
mov
or
daa
jle
sub
ljmp
jl
jg
jle
push
dec
or
fwait
mov
mov
shrl
lret
call
iret
or
mov
xchg
cmp
push
addl
fcoms
push
add
and
ja
jo
xor
fs
shl
das
sbb
insl
mov
dec
aaa
scas
xor
cmp
mov
or
aam
jns
es
mov
ror
rorb
dec
aaa
jg
xor
and
roll
inc
and
pop
out
jno
pop
mov
jg
pusha
xor
mov
mov
xchg
shl
sbb
mov
imul
clc
and
push
adc
repz
std
test
cmp
sub
or
xchg
and
movsl
in
inc
cmp
add
lods
sbb
loopne
mov
jl
lock
fnstsw
dec
xchg
xlat
mov
fwait
add
fsts
jne
mov
fadds
repz
mov
daa
or
cmpsb
pop
add
xor
shl
xchg
cld
mov
push
mov
cmp
cmp
push
jp
mov
scas
jne
xor
push
cs
add
fwait
lcall
push
jmp
pop
ss
call
lcall
cli
test
xor
bound
and
cmc
dec
mov
test
mov
xlat
pop
mov
mov
pusha
mov
into
mov
inc
mov
and
fwait
add
cld
mull
ret
ja
in
adc
sahf
adc
lcall
push
xor
push
mov
add
jmp
shlb
movsb
sbb
pop
ja
mov
push
stc
or
insb
shll
inc
push
mov
and
aaa
roll
mov
cwtl
movsb
fidivrs
out
icebp
and
shll
sti
or
imul
aas
ret
dec
inc
cmpsb
pop
lock
sub
out
push
sbb
mov
jno
or
jmp
push
pop
lods
fisubl
je
mov
fchs
clc
std
mov
xlat
popa
adc
test
or
cld
inc
pusha
adc
cltd
inc
ret
call
jcxz
add
daa
aad
mov
imul
stos
sub
xchg
mov
stos
aaa
adc
fwait
call
xor
mov
fsubs
mov
cmp
std
mov
ret
fildll
push
mov
adc
pop
ljmp
mov
xchg
fnstsw
inc
hlt
shll
mov
aam
cmp
mov
jmp
xor
push
outsl
push
dec
mov
and
cmpl
dec
icebp
jge
loope
in
shlb
pop
sbb
jg
mov
dec
xor
cli
sbb
imulb
clc
dec
mov
pop
test
mov
aaa
js
imul
leave
shll
inc
adc
dec
aad
cmp
mov
push
jo
negb
push
sub
ja
xchg
push
es
fldcw
mov
fstpl
lret
adc
cmc
xor
insl
sub
inc
mov
or
mov
adc
mov
adc
push
xor
stos
pop
mov
addr16
movsb
jl
lcall
cltd
fadds
mov
scas
out
or
pop
sbb
jne
sub
mov
inc
push
sahf
loopne
lods
sbb
and
jnp
or
ds
sbb
mov
jmp
pusha
aas
cmp
push
negb
xlat
daa
mov
mov
sarb
negb
int
cli
cmp
outsb
adc
cmp
inc
lret
bound
mov
cmp
inc
pop
mov
unpcklps
inc
cwtl
cmp
fs
out
dec
ficompl
cmpsb
stos
jg
xor
dec
push
gs
fdiv
arpl
sub
imul
test
fistpl
les
std
jecxz
pushl
or
xchg
jbe
mov
jecxz
xchg
pop
into
psubq
das
ds
dec
and
out
testl
lret
and
sbb
mov
dec
push
pop
loopne
in
pop
mov
inc
sbb
dec
inc
cli
data16
aaa
sub
xchg
icebp
push
push
mov
mov
cli
stos
std
pusha
xlat
mov
repz
loopne
cvtps2pi
inc
jo
push
push
ljmp
add
adc
int3
jge
out
push
mov
mov
or
mov
pop
dec
aad
jle
mov
pop
or
xor
ret
clc
add
addl
sub
movsl
in
int3
test
sbb
inc
aad
sti
aad
addr16
outsl
inc
push
mov
inc
arpl
lds
pop
bound
out
dec
xchg
les
dec
mov
push
or
xchg
ds
jns
pop
add
lcall
fnstcw
add
mov
loop
xor
pop
mov
cmp
call
loop
movsb
pop
rclb
push
sbb
aaa
or
mov
push
adc
fstl
fildll
lock
es
fmul
push
icebp
adc
and
lcall
push
xchg
pop
sub
lods
lret
pop
addb
cmc
jno
addr16
inc
imul
sbb
xor
sti
cli
or
xchg
rorl
or
inc
xor
ljmp
andb
cmp
es
out
ror
mov
xchg
or
and
pop
or
and
js
loope
sub
sbb
lret
xorl
subl
adc
inc
xchg
pusha
push
ds
inc
mov
stos
xchg
cmp
aad
sub
sub
lea
in
lods
data16
out
jns
shll
adc
sbb
std
or
dec
das
fcmovne
cmp
push
xor
pop
sbb
sbb
dec
or
and
mov
test
mov
std
add
jg
fnsave
fwait
xor
mov
arpl
sbb
xacquire
jno
stos
out
nop
mov
incb
jns,pt
adc
ret
rorl
imul
mov
add
cld
adc
lret
fnstsw
sbb
mov
mov
loopne
pop
pop
fistpll
cmpsl
lret
add
ror
ret
inc
cmp
cmc
cmp
lret
std
negl
or
adc
xchg
lret
mov
inc
into
imul
sbb
fdivrs
and
mov
addb
xlat
cmp
xchg
or
mov
push
push
pop
mov
mov
fdivl
scas
inc
sbb
ffree
lods
lds
in
inc
jg
sbb
cmp
fdivl
push
bound
inc
mov
hlt
sbb
cld
xorb
and
dec
lcall
mov
lock
cmp
push
pop
jle
pop
lods
sbb
push
in
or
xchg
mov
jno
push
cmp
daa
mov
shrl
scas
cmpl
lods
xor
jmp
jae
xchg
bound
shrl
bound
mov
or
dec
adc
iret
mov
movsb
movsb
pusha
loope
jle
lods
jne
lret
movsb
sub
insl
mov
and
jnp
xchg
lods
bound
sub
mov
adc
loope
mov
stos
mov
xor
outsb
dec
lret
mov
fsubrl
ljmp
int
mov
xchg
inc
adc
jle
pop
inc
aad
mov
sahf
mov
pushf
int3
stos
xchg
pop
addr16
es
adc
and
cmp
sub
xlat
push
lcall
test
xor
mov
inc
hlt
mov
and
adc
adcb
es
aam
ss
jne
les
cmp
nop
negl
js
cmp
fwait
in
lahf
and
addr16
jo
sub
insl
addr16
xchg
sbb
sub
ja
leave
sarl
int
adc
push
sbb
sarl
enter
dec
mov
adc
xor
pop
mov
bnd
push
fldt
aad
dec
xchg
or
daa
int3
inc
mov
loopne
sahf
inc
cld
mov
or
xor
pop
sarb
notl
mov
das
xor
or
sarl
pushl
mulb
icebp
adc
lock
mul
add
mov
adc
cmpb
test
mov
dec
sbb
pusha
sub
out
dec
or
mov
fsubl
paddusw
ja
lods
push
cmp
loop
in
fsubs
mov
sbb
repz
inc
mov
loope
mov
mov
outsb
push
fs
out
popa
pop
or
and
repz
andl
adc
imul
mov
imul
mov
mov
outsb
and
in
leave
add
lods
outsl
xor
sbb
cs
sub
fwait
add
push
push
cld
mov
mov
jb
inc
mov
movsl
push
inc
rolb
in
lock
aam
test
imul
cmc
mov
add
je
je
adc
fsts
rorb
bound
ja
push
in
adc
notl
sbb
lods
sbb
rcrb
dec
add
jmp
scas
sub
mov
lcall
test
incl
lahf
iret
daa
mov
lds
gs
popa
inc
mov
xchg
push
inc
mov
mov
aam
cs
cmc
or
pop
or
test
or
mov
daa
dec
mov
mov
out
sub
cwtl
ja
jmp
or
cld
adc
movsl
mov
xchg
arpl
jo
jl
pop
clc
xchg
mov
pop
lcall
rolb
adc
pop
jo
mov
pop
mov
pushf
jmp
fs
movsb
ficomps
sub
mov
mov
add
adc
sub
or
outsl
push
shl
imul
xchg
fcmovnb
test
bound
or
cmp
rol
sbb
ficoms
inc
cmp
imul
fildl
stc
xor
das
jp
jo
pop
pusha
imul
adc
lods
lods
cld
fildll
pop
call
in
push
mov
xchg
mov
jge
sub
sub
enter
push
fnstenv
sbb
push
lds
loope
divl
pushf
adc
adc
es
mov
nop
cmp
nop
sbb
pop
or
cmpsb
dec
imul
pop
mov
clc
das
cmp
xor
xchg
cld
mov
stos
mov
dec
mov
jbe
push
mov
push
xchg
outsb
xlat
push
dec
fs
sub
std
andl
jge
repnz
mov
sti
imul
pushf
pop
mov
mov
sbb
std
repz
pushf
daa
imul
mov
pusha
and
nop
imul
xor
jns
cwtl
dec
jecxz
ja
in
or
fmuls
mov
push
lds
dec
int
mov
stc
dec
and
fcmovbe
lds
inc
sarb
fmulp
push
mov
mov
popa
cmc
ret
pushf
loopne
test
aad
cmpsl
mov
inc
and
add
in
dec
mov
inc
mov
dec
fs
lea
xchg
xor
int
xchg
fidivs
add
mov
sub
out
int3
jecxz
pop
push
ljmp
cmp
pop
sti
add
pop
aam
jp
xchg
xor
xor
inc
sbb
popa
js
or
pusha
lds
test
cltd
sub
and
push
sbb
inc
and
jmp
test
daa
insl
cmp
xor
mov
sub
cmpl
inc
xchg
or
jnp
andb
cmpsl
jge
jb
pushf
add
or
pop
loopne
xchg
xchg
push
int
sarl
inc
and
int
push
int
mov
fistpll
jecxz
xchg
pop
cmpsb
out
and
mov
jmp
repz
or
jp
arpl
cli
xchg
or
ficompl
xor
inc
jnp
fisubs
mov
jmp
sbb
cmp
jae
hlt
test
adc
dec
ss
pop
hlt
int3
pop
movsl
jae
inc
push
mov
mov
cld
xchg
stos
jns
xchg
mov
sbb
stos
dec
cmp
pop
mov
adc
pop
add
cltd
xor
adc
pop
mov
scas
and
mov
lods
lea
push
aaa
movsb
add
aam
test
adc
dec
movsb
cmpsb
and
movsb
insl
enter
aas
stc
xlat
mov
adc
cmp
jg
dec
test
push
js
outsl
lods
jle
sbb
jo
cmovg
adc
js
lret
ffree
mov
adc
into
mov
pop
stc
xorl
pop
push
or
adc
pop
fwait
jl
daa
jns
xchg
sti
adc
lcall
jnp
loopne
repnz
mov
jnp
mov
gs
testb
jmp
std
mov
and
jecxz
cmp
adc
xchg
push
or
dec
or
fstpl
mov
dec
push
iret
ss
push
add
mov
jmp
xchg
push
and
cltd
rorl
xor
enter
dec
mov
pop
cli
ds
jg
inc
pop
dec
mov
mov
push
jle
mov
in
pop
pusha
dec
das
cmpl
movsb
cmpsb
inc
insl
inc
loop
cmp
inc
jp
sbb
xchg
testb
jns
lods
jp
into
adc
add
inc
in
add
scas
xchg
push
aad
cs
push
mov
adc
nop
mov
daa
mov
iret
andb
adc
jge
test
rol
les
test
dec
aad
adc
jo
or
pusha
pop
jae
arpl
sahf
mov
dec
add
cmc
xor
cli
adc
aam
sbb
ret
xchg
lcall
xlat
or
mov
and
fwait
mov
dec
add
pushf
mov
stos
sub
fadd
shlb
jl
mov
scas
scas
lods
xlat
sbb
mov
jl
or
push
mov
mov
int3
mov
pop
cmp
xor
cld
lcall
mov
mov
daa
mov
sbbb
leave
cs
mov
and
add
lods
ss
mov
jmp
decb
movsl
aas
adc
imul
js
adc
xchg
out
xor
and
shl
cld
push
rorb
js
xchg
jae
mov
imul
mov
mov
imul
cmp
les
add
cs
sub
mov
dec
push
dec
sar
sbb
or
mov
xchg
fstl
jmp
test
pop
clc
jl
mov
xchg
setg
std
sbb
adc
into
or
fdivp
idiv
fildl
cmp
aas
outsb
imul
jno
adc
mov
sub
mov
inc
pusha
into
push
mov
push
xchg
xchg
cwtl
mov
negl
mov
push
cmp
dec
test
imul
cmp
sub
inc
out
inc
jp
fistpll
sub
push
push
sub
scas
incl
xchg
jo
sbbl
mov
mov
mov
out
mov
xchg
jle
jg
out
mov
push
faddp
push
inc
mov
sbbl
pop
jnp
add
and
bound
jmp
jg
mov
and
xchg
aaa
pop
decb
mulb
mov
movsl
pop
into
ret
inc
and
push
lret
mov
jb
push
bound
xchg
sbb
xchg
xchg
and
pop
inc
and
test
or
das
aad
ss
mov
imul
adc
xor
jmp
mov
mov
sub
add
bound
xlat
lods
mov
outsb
stc
sub
mov
xor
cmp
xorl
notb
aaa
shr
inc
add
inc
sti
jno
pop
js
out
in
xchg
outsb
mov
dec
pop
or
xlat
xchg
sub
imul
pushf
and
mov
mov
pop
shlb
inc
mov
add
inc
xchg
pop
jl
cmpsb
or
adc
dec
daa
push
sbb
bswap
js
pop
sub
sub
jbe
push
sbb
mov
in
lods
inc
push
lret
in
dec
mov
mov
xchg
xchg
mov
out
es
mov
cmpsl
popa
insl
xlat
mov
sbb
int
add
xorb
out
mov
pop
mov
outsl
push
cmp
xor
cmpsl
je
clc
jno
orb
cmp
addr16
call
mov
bound
cmc
push
jnp
push
and
insb
mov
ljmp
and
jle
enter
jle
fidivs
lcall
push
fs
mov
rcrl
shlb
inc
lret
push
clc
ret
scas
mov
popf
xor
mov
mov
mov
cwtl
mov
mov
inc
mov
mov
sbb
cmc
xchg
mov
ret
mov
sub
inc
outsl
adc
mov
test
pop
xchg
loop
jg
pop
mov
or
lods
pop
sub
xor
inc
xlat
mov
mov
fdivl
sub
push
out
int3
inc
xorl
sub
mov
leave
push
dec
push
test
sarl
dec
or
push
pop
fs
iret
pop
lods
lahf
push
or
jne
dec
adc
callw
and
pop
dec
mov
jns
sub
fiaddl
cli
and
into
jns
dec
mov
push
or
xchg
lret
sub
inc
movsb
test
adc
cmp
add
fiaddl
int3
adc
sbb
pop
int3
and
ret
cltd
rcrl
jnp
enter
shr
adc
pop
sub
enter
mov
fcomp
mov
fsubl
clc
adc
fstps
rclb
lret
push
fsubrs
lods
in
mov
roll
repnz
push
push
adc
insb
inc
jg
mov
fsubrp
pop
xchg
lret
and
push
jae
hlt
pop
dec
inc
addr16
mov
inc
mov
je
sbb
add
sbb
in
xor
xchg
xor
add
fldt
out
andl
mov
push
scas
sub
lods
dec
xor
clc
repz
xor
fsubrl
cmpsl
test
mov
sub
arpl
inc
mov
xchg
and
faddl
ret
xchg
fadds
aad
cld
dec
or
dec
sub
inc
ja
and
or
fdivs
add
mov
mov
leave
fwait
sub
icebp
rolb
push
lock
jp
cmp
fcmovnu
push
loop
add
bound
enter
sub
fimuls
push
push
jg
loope
popf
cmc
mov
das
jnp
jle
cmpsb
dec
xchg
push
sub
and
js
xlat
sbb
mulb
out
fildll
icebp
xor
int
das
cltd
mov
subb
cmp
lea
sbb
mov
lods
add
sub
cmpsb
and
out
fwait
mov
iret
in
mov
lcall
or
shlb
mov
test
lcall
aas
iret
cwtl
in
lods
sarb
sub
sub
test
leave
sahf
loopne
jl
xor
arpl
pop
subl
popf
cmp
dec
in
ds
push
andb
inc
sub
sbb
xor
dec
imul
push
cmp
sub
dec
cwtl
push
scas
or
aam
out
lahf
addr16
inc
xchg
aaa
and
fldpi
add
mov
insl
fadds
inc
jecxz
mov
sub
aaa
jmp
sbb
mov
push
dec
clc
loop
pop
jl
jne
daa
pop
lds
xor
cmp
mov
mov
cmp
xor
push
mov
inc
shlb
mov
cltd
cltd
mov
in
lcall
jae
ja
mov
or
icebp
cmp
arpl
pushf
sub
xchg
sub
add
xchg
mov
dec
mov
sbb
cmp
and
push
imul
mov
lcall
sub
scas
push
sti
dec
in
scas
adc
push
stos
iret
dec
xor
adc
imull
out
and
clc
divb
ret
pop
aam
out
pop
xchg
loope
lds
push
js
cli
jo
and
lods
aad
mov
addb
addr16
jp
add
test
adc
cmp
negl
stos
mov
into
in
mov
sub
fnsave
scas
mov
loop
scas
fstps
cmp
push
nop
sub
stc
mov
sbb
sbb
xchg
in
sbb
jmp
push
fcmovnb
lea
xor
add
bound
and
stos
scas
add
cmp
fidivrl
testl
aaa
or
push
mov
xchg
and
movsl
jmp
dec
inc
pop
push
sbb
pusha
repz
inc
push
insl
pop
jns
rorl
sbb
xchg
mov
jp
out
call
cwtl
test
dec
sub
fidivrl
dec
test
mov
test
lods
pop
xor
mov
xor
or
iret
push
dec
mov
inc
insb
push
test
push
notl
add
jno
pop
ret
jne
mov
mov
add
mov
mov
pop
or
jmp
add
xor
mov
xor
fdivs
mov
incb
js
adc
cmp
rcr
sbb
dec
jge
mov
in
ret
mov
adc
fisubrs
inc
hlt
insb
movsl
push
inc
mov
mov
pop
enter
xchg
scas
test
pop
mov
xlat
iret
clc
scas
popa
fwait
cmp
and
aam
ds
pop
jecxz
test
jno
xchg
sti
cltd
fisubl
clc
xor
jb
mov
and
mov
subl
dec
iret
iret
mov
aam
push
push
fxch
inc
dec
sub
push
outsl
dec
push
mov
jo
js
cmp
push
sub
cvtpi2ps
in
or
fidivrs
fwait
leave
sbb
cmp
nop
jge
inc
fsts
fwait
rorl
jne
inc
and
sahf
mov
xchg
or
add
sbb
sub
or
xor
ss
sti
loop
mov
cmpsb
adc
lret
push
push
jne
out
xchg
jbe
sub
pop
cmpsb
adcl
iret
test
test
dec
dec
aam
lahf
out
xor
cwtl
in
or
out
push
jl
and
mov
fdivp
lcall
jb
jmp
ret
pop
mov
enter
repnz
les
mov
and
push
outsb
orb
mov
inc
sbb
fnsave
add
ss
sub
lcall
cs
inc
and
push
adc
sbb
inc
dec
jecxz
xchg
push
push
mov
imul
pop
ja
mov
pushf
fistl
pop
and
cmp
xchg
push
push
fmuls
pop
aad
xor
cmp
xorl
xchg
fcmovu
out
cmp
sub
mov
popf
fildl
and
lea
loopne
lcall
das
push
dec
jns
lock
and
mov
jg
cli
cli
jno
cmp
test
fcomps
push
inc
lret
dec
inc
inc
jnp
clc
add
and
popf
mov
jnp
ret
leave
rcrl
sub
dec
adc
ss
loop
sub
stos
push
and
bnd
xchg
push
aad
cwtl
dec
push
xchg
pop
sbb
out
add
push
test
xor
add
cmpsl
sub
sbb
sbb
popl
inc
dec
les
xchg
xchg
cmp
adc
imul
daa
repnz
jg
pop
add
sub
fisubrl
add
mov
fcoml
sbb
mov
mov
fnstsw
jnp
add
fiaddl
xor
fstl
icebp
pop
mov
xchg
sub
fildl
into
into
arpl
mov
cwtl
dec
lods
mov
inc
push
movsl
test
shll
movsb
gs
push
xchg
shl
ja
les
pop
lds
sbb
mov
adc
jp
mov
sbb
mov
mov
rorl
mov
popa
test
xor
jl
test
sbb
jo
shl
and
iret
jb
jecxz
mov
negb
push
xchg
jae
dec
mov
jecxz
in
pushf
and
inc
enter
inc
pop
sahf
xor
fucomi
fildl
dec
cmp
mov
mov
lret
inc
lret
jle
loope
dec
mov
xlat
and
fdivrs
xchg
xor
test
mov
daa
scas
push
fisttps
ror
adc
dec
jle
ror
lods
lcall
mov
les
and
out
test
xor
ror
jae
lock
insl
testl
mov
sub
dec
lret
addl
cmpsl
std
inc
nop
addb
insl
add
push
sbb
fwait
mov
adc
mov
inc
ret
jmp
jns
mov
mov
test
addr16
call
mov
sub
ret
pop
or
jecxz
sub
dec
xchg
mov
mov
sbb
xchg
or
fwait
outsl
xlat
add
inc
cli
repnz
ret
pop
jge
mov
int
sahf
and
dec
xchg
sub
sub
mov
lcall
mov
test
dec
lock
ficoml
xor
dec
mov
xchg
add
ss
out
xchg
mov
sbb
aad
push
popf
pop
sbb
mov
push
or
hlt
shrb
scas
mov
xorl
mov
in
cmp
lret
lods
jo
ss
pop
jecxz
xchg
cmp
leave
insl
mov
mov
xor
xor
sbb
loope
arpl
in
stc
fdivp
push
fs
lret
xlat
incl
and
push
mov
cmpl
xor
notl
mov
jne
into
addb
stc
mov
push
loope
dec
dec
cli
test
xor
std
xchg
cmpsl
and
mov
cmc
push
adc
daa
dec
xlat
test
jmp
subb
push
inc
pop
dec
enter
mov
pop
adc
or
mov
sub
shrb
xor
xor
jg
call
shlb
xchg
xchg
mov
adc
pop
arpl
xchg
bound
rorl
int3
js
fisubs
lahf
xchg
jnp
xorl
scas
dec
fs
add
shlb
clc
inc
mov
push
sbb
push
xor
push
or
icebp
outsl
dec
andl
outsl
xor
xchg
outsl
xor
ja
and
mov
repz
mov
inc
stc
push
stos
adc
jbe
mov
ret
pusha
int3
push
sbb
lock
pop
orb
mov
jb
mov
out
cltd
arpl
push
pushf
xchg
sbb
add
xchg
aas
sub
int
jno
test
negl
ficompl
lret
int
popf
pop
imul
dec
fdivrl
out
imul
imul
mov
sbb
xchg
xor
mov
ret
adc
fwait
or
movsb
dec
aaa
imul
or
lret
push
dec
mov
lret
loopne
mov
movsl
push
out
mov
mov
dec
fistl
aaa
or
mov
push
fisubrs
lods
lahf
mov
xor
shlb
push
lret
fs
cmp
push
xchg
mov
inc
lock
adc
shlb
gs
cmp
aaa
icebp
gs
cld
add
or
xchg
ja
xchg
dec
xor
pushf
add
xchg
imul
outsb
ret
push
mov
movsb
dec
xchg
pop
or
xchg
sbb
scas
or
popf
mov
mov
ret
mov
lret
push
and
jge
inc
adc
les
les
mov
roll
mov
jns
clc
adc
xlat
aaa
int3
ljmp
pop
subl
out
jno
mov
sub
lahf
xchg
or
cld
lods
mov
pop
jno
pusha
cmp
shrl
ficoml
jb
outsl
in
xlat
popa
call
pop
push
pop
mov
test
mov
pop
sub
jns
cmp
out
cmpsl
jge
dec
out
xor
pop
or
iret
popf
mov
lret
inc
nop
mov
icebp
ds
mov
test
mov
mov
mov
mov
notl
jae
inc
add
adc
aad
or
fidivrl
sub
pop
mov
mov
repnz
dec
loope
jo
sub
aam
pusha
xor
cltd
jle
inc
shlb
imul
or
xchg
lret
mov
das
push
fs
inc
in
mov
int
sbb
adc
pop
pop
mov
rorl
shl
jp
mov
stc
aam
and
add
scas
leave
lahf
and
in
jbe
sub
iret
dec
xor
andb
adc
sub
call
sti
cld
xchg
push
xlat
bound
dec
shrl
clc
add
shufps
dec
mov
shl
addr16
sbb
mov
push
mov
arpl
insl
sub
iret
mov
sarb
fnsave
sub
or
test
outsl
mov
out
push
data16
jns
jge
std
xor
testl
les
loop
fdivs
mov
stc
in
xor
push
shll
xchg
mov
out
inc
cmp
mov
pop
push
sbb
xchg
cmp
xor
lods
test
jge
aas
jge
pop
dec
popa
lock
mov
cmp
test
mov
scas
ret
pop
loope
pop
mov
stc
sub
clc
jns
mov
or
xlat
xchg
jp
sbb
cs
sahf
pop
outsl
psubd
mov
push
movsb
push
pop
jmp
cli
xchg
jnp
out
cmp
xchg
int3
sub
add
jno
dec
xor
fistps
mov
or
rcrl
xchg
popf
sub
loop
xor
inc
lcall
dec
cld
lret
xor
push
mov
mov
nop
add
push
lock
test
sbb
or
sahf
pop
out
imul
das
add
aad
push
pop
cmp
test
cltd
inc
pop
cld
mov
pop
in
cmpl
sbb
pop
mov
mov
gs
ret
addr16
pop
xchg
outsl
imul
pop
mov
xchg
lret
iret
adc
add
out
shll
jecxz
xchg
or
fisubrl
jmp
pop
push
sub
lcall
sarl
into
out
test
or
rorb
fcoml
or
adc
or
test
pop
lcall
scas
mov
mov
insl
or
cltd
sbb
mov
and
stos
sub
pop
cli
fcomi
jl
pop
xchg
shrb
xchg
into
jle
into
and
pop
cmc
mov
adc
jae
mov
pop
push
pop
push
rclb
inc
mov
dec
and
stos
pop
movsb
aad
mov
push
xchg
roll
and
imul
aas
jo
fisubrs
pop
xor
jle
mov
xchg
adc
push
jbe
out
add
mov
jbe
or
and
push
jle
test
push
jge
cmp
in
cmp
orl
add
imul
les
outsb
stc
popa
push
adc
dec
mov
out
adc
and
loopne
push
lea
xlat
lahf
andl
loop
hlt
and
or
cmp
loop
lcall
jecxz
in
inc
call
lret
loope
repnz
mov
clc
inc
add
adc
nop
loopne
push
stos
lcall
pop
rcll
mov
mov
cmp
mov
cmpb
jp
imul
jle
faddl
pop
pop
pop
and
adc
xor
mulb
jmp
roll
mov
inc
lock
sahf
es
outsb
mov
push
push
mov
lahf
add
dec
inc
imul
adc
outsl
or
push
cli
es
test
je
fbld
int3
cli
test
fisttpl
jp
xchg
aad
mov
data16
cmpsb
mov
ds
push
lock
push
iret
aam
dec
jp
cmp
push
push
out
fs
xchg
xor
mov
adc
lea
in
jbe
mov
popa
data16
pusha
mov
fs
les
sahf
push
test
sbb
mull
and
add
cmc
xor
repnz
cwtl
xor
xchg
js
bound
pop
das
mov
adcb
lret
xchg
xchg
push
dec
js
insl
xchg
or
cmp
adc
adc
mov
xor
lret
fsub
leave
xchg
cmp
cs
fdivrs
scas
test
dec
ret
repz
mov
xchg
and
and
pop
mov
in
insb
leave
inc
push
mov
mov
loop
dec
addl
pop
mov
cmpsl
pushf
mov
outsl
shlb
pop
in
movsl
das
leave
or
push
sbb
fwait
aaa
pop
sub
dec
jl
rolb
sub
push
push
mov
lret
inc
jo
adc
mov
and
shll
stos
cmp
xchg
enter
stc
mov
jmp
or
std
jge
jo
out
in
inc
and
shrl
cltd
dec
push
pop
in
decl
sbb
inc
test
jecxz
fsubs
pop
test
cmpsb
mov
call
ss
pusha
xor
add
inc
lock
stos
cs
fsub
scas
mov
dec
and
sub
gs
push
and
in
aas
aaa
out
lcall
mov
cmp
adc
lret
mov
scas
or
mov
aam
or
and
mov
stos
sub
icebp
filds
mov
push
jae
dec
sbb
add
imul
jo
or
mull
add
divl
or
pusha
cmp
aam
mov
loop
cmp
test
fcoml
cmp
div
out
mov
test
adc
adc
pop
scas
xchg
mov
loope
lds
xlat
sub
mov
push
and
or
loop
icebp
popf
cmp
lret
fdivp
sbb
iret
lods
mov
mov
mov
push
jae
stc
hlt
mov
lcall
out
dec
jb
leave
sbb
data16
sbb
scas
out
icebp
sub
xor
icebp
pop
aas
adc
sbb
xchg
jne
nop
xchg
out
sbb
cmc
inc
xchg
xor
jo
mov
stos
es
add
xor
adc
nop
mov
and
xchg
lret
lea
icebp
in
jmp
xor
pop
vpunpcklbw
and
push
push
fisttpl
test
scas
dec
vsubsd
or
popa
dec
sbb
sub
insl
dec
cmp
mov
repz
jp
dec
sbb
cmp
fnsave
arpl
xchg
call
cmp
or
seta
outsb
in
mov
sti
rcrb
cmpsl
outsl
aad
pop
pop
push
std
xchg
dec
mov
inc
or
sbb
imul
inc
or
xchg
arpl
adc
dec
sub
inc
pop
out
rol
xchg
in
pop
aas
pushf
inc
inc
in
scas
push
dec
xchg
rorl
fistpll
int3
mov
movsb
das
xchg
mov
imul
enter
jl
movsb
sarl
sub
ljmp
call
imulb
sti
xchg
pop
js
pop
adc
xor
insl
jmp
xor
sbb
mov
add
jp
fwait
pop
rclb
data16
pop
adc
les
jecxz
js
mov
push
test
jle
int
lock
xrelease
cltd
mov
xor
cmpsl
and
push
xor
outsb
daa
fistl
mov
call
cltd
pop
scas
lret
dec
cmp
mov
push
addl
cmpsb
or
mov
jp
les
mov
fcmovnbe
fisubs
xchg
push
addl
push
cltd
int3
and
ret
cmc
repnz
lds
ss
stos
or
jle
cmp
mov
sub
cli
aad
fldcw
xor
scas
inc
sbb
bound
adc
add
push
sbb
or
or
mov
andb
inc
stos
jmp
jnp
cli
lock
sti
cmp
outsb
in
stos
jbe
in
pusha
xchg
mov
cwtl
push
push
es
je
adc
ja
ret
insl
imul
lcall
cmp
push
cmp
pop
inc
ja
je
icebp
xchg
cmc
xchg
or
loopne
push
adc
loop
mov
push
icebp
orb
popf
iret
inc
xorl
or
fwait
rcrl
xchg
jmp
pop
std
xor
mov
int
mov
jmp
div
stc
push
hlt
sahf
sub
push
aam
mov
or
sbb
ds
xchg
xor
pop
sbb
fimull
pop
inc
shrl
mov
rorb
xchg
mov
cwtl
hlt
inc
cmp
xchg
int
popa
dec
dec
mov
movsl
inc
pop
enter
shl
js
push
pop
das
aaa
mov
fdivl
out
lods
pop
cmp
sahf
test
ja
push
xchg
sbb
mull
sti
lahf
push
icebp
mov
into
cwtl
idivb
mov
sub
hlt
icebp
and
mov
outsb
cvtps2pi
push
stos
into
popf
jbe
mov
sbb
idivb
enter
dec
adc
mov
lret
adcl
xor
jo
bound
xchg
xchg
xchg
dec
mov
push
lods
rcrb
mov
and
outsb
in
mov
jb
daa
ds
test
sbb
xor
enter
xchg
aad
cmp
sub
jns
rorl
ret
insl
in
es
ja
jl
jg
fstl
inc
and
lret
popf
and
movsl
xor
addb
mov
sbb
ljmp
pop
ss
popa
mul
pop
xor
adc
out
xchg
dec
xchg
mov
mov
lods
jmp
push
insl
in
inc
mov
popf
stc
cmc
mov
sub
mov
push
inc
lahf
popf
test
lods
pop
ss
lcall
subb
out
lcall
rcrb
sub
cmp
xor
rcrb
lcall
xchg
mov
lods
jmp
dec
rol
xor
and
imul
rcrl
add
out
lods
gs
sbb
add
mov
bound
cmp
bound
addr16
push
inc
push
add
stos
jno
movsb
imul
jb
mov
sub
push
testl
push
cli
sbb
mov
pop
pop
pop
cmp
xor
mov
xchg
mov
and
xchg
adc
dec
je
stos
sub
insl
fldt
pop
inc
flds
cltd
movl
outsb
nop
rclb
xorl
sbb
lds
cltd
adc
shr
xor
or
pop
outsl
int
add
cmpsl
pop
pop
loop
mov
lods
and
sbb
scas
xor
gs
enter
hlt
dec
cmp
arpl
push
push
pop
ss
stos
xorb
lcall
frndint
xor
cmp
mov
out
mov
push
xor
hlt
push
out
shrb
adc
sub
and
aad
daa
add
jbe
inc
pop
dec
fcompl
lods
mov
int3
inc
stc
pop
and
adc
lods
adcl
dec
orl
adc
es
nop
icebp
adc
push
test
pop
sub
xor
push
cmp
dec
dec
lock
arpl
and
test
leave
out
lahf
pop
cmp
mov
xchg
sub
loopne
xchg
push
jne
lcall
xchg
sbb
mov
xchg
inc
jmp
mov
out
mov
or
push
adcl
lcall
sub
mov
fnstenv
cmp
mov
jge
jo
mov
test
gs
cmpsl
push
mov
jecxz
push
jno
test
test
jns
xchg
lret
sbb
lea
scas
leave
cs
aad
enter
fnstcw
mov
jns
lea
inc
mov
mov
adc
xor
bnd
push
sbb
pop
shlb
xor
test
test
mov
sbb
out
pop
sub
out
inc
imul
outsb
inc
add
xor
ljmp
mov
sar
pusha
sbb
arpl
arpl
scas
or
and
hlt
out
mov
mov
fstpl
aaa
jo
mov
xchg
mov
dec
iret
test
and
mov
pop
xchg
popf
es
push
sar
xor
nop
sub
cs
aas
stc
inc
cmp
lods
adc
mov
xchg
mov
jb
adc
cmove
insb
scas
adc
lret
loopne
mov
arpl
or
mov
insb
cmp
jae
aam
push
xor
xor
dec
outsl
mov
outsb
out
shr
add
gs
xchg
fs
xor
adc
inc
and
scas
pop
pop
mov
cmp
movsl
lods
jl
dec
lcall
stos
or
inc
es
repnz
leave
ja
xchg
out
call
xchg
mov
fimuls
add
pop
adc
shlb
int
popa
push
shrb
imull
mov
jne
xchg
fsts
jge
push
sbb
pop
or
xor
rcl
stos
cmpsb
xchg
enter
xor
mov
out
enter
dec
mov
rol
mov
jmp
shrl
cmp
cmc
xlat
aaa
dec
mov
inc
lods
and
adc
sarl
bnd
les
jne
or
rolb
hlt
push
adc
nop
cwtl
adc
in
jecxz
cmp
stos
das
dec
je
hlt
sub
pminsw
add
arpl
mov
lock
xchg
mov
and
jae
daa
mov
out
shlb
negw
push
and
shrl
sbb
hlt
push
iret
shll
xor
sti
aam
mov
mov
enter
aaa
repz
stc
xchg
push
js
mov
lahf
mov
movsb
jp
pop
or
mov
push
mov
repz
adc
lret
mov
sbb
jo
mov
cs
and
mov
mov
bound
in
dec
pop
fildl
pop
lret
dec
inc
movsb
xor
int3
pop
fists
mov
adc
lods
test
push
insl
rorb
dec
ret
inc
fadds
jge
es
imul
mov
imull
push
add
xor
call
fildll
and
stos
dec
add
xchg
dec
push
pop
push
sti
jne
push
rcrb
loopne
mov
dec
les
xchg
leave
mov
imul
jo
hlt
ds
xchg
lds
sbbb
dec
outsl
insl
outsb
in
dec
dec
outsl
lret
push
data16
insb
pop
add
inc
cwtl
sub
out
xchg
xchg
imul
inc
cmp
mov
add
imul
inc
jne
add
cmpsl
jl
inc
mov
xchg
and
inc
jb
mov
fldl
enter
inc
or
sbb
push
out
js
mov
js
mov
in
xor
xchg
add
add
sub
pusha
movsb
jne
jge
scas
cmp
ss
pop
dec
jl
ja
ljmp
inc
jo
jp
cmp
jp
and
into
push
jecxz
cmp
and
mov
ss
xor
and
inc
mov
push
mov
push
sub
cmp
jle
jae
mov
stos
ds
cmpl
xlat
enter
mov
push
pop
cli
or
cli
push
aam
fdivs
cltd
add
mov
pop
clc
lods
cmp
cmp
stos
int
data16
aad
sarl
fsubrs
sahf
jno
mov
dec
pop
push
xorl
pop
sub
xlat
sbb
int3
mov
cmp
out
inc
push
or
cmp
inc
shrl
shll
xchg
mov
jecxz
xchg
jo
or
push
mov
and
movsl
mov
adc
cmp
add
push
inc
cmp
jl
or
xor
in
sbbl
sarl
rcrb
mov
sti
cmpl
das
je
fildll
repz
push
pusha
popf
mov
ljmp
imul
cmp
push
pop
popf
jge
lret
test
les
data16
sub
outsb
xor
xchg
stc
stc
mov
mov
add
inc
nop
lahf
add
movsl
scas
gs
sbb
aam
sub
lea
add
sbb
mov
push
adc
sbb
int
jg
ret
aam
lcall
out
fwait
iret
jns
xor
add
or
push
inc
jl
sub
mov
hlt
mov
adc
iret
xchg
lds
mov
lock
mov
adc
arpl
test
inc
mov
mov
jl
inc
adc
mov
and
in
mov
xchg
xchg
jns
jge
pop
jo
lret
push
add
stc
fisubrs
lcall
push
mov
ljmp
pop
push
xchg
cs
pop
test
or
popa
data16
js
inc
stc
loopne
sbb
or
or
mov
imul
pop
add
mov
add
ret
fists
xchg
sub
jge
pop
mov
int
insb
or
push
and
fwait
shll
fidivrl
jmp
das
jmp
inc
jmp
pusha
or
xor
inc
shrb
std
push
dec
mov
sbb
insb
stos
insb
lds
mov
in
or
imull
dec
lret
mov
movsl
into
stc
daa
dec
adc
dec
movsl
push
fucom
rcl
xlat
xor
ja
data16
int3
adc
popf
jmp
sahf
cmc
shrl
insb
mov
int
out
lds
in
lods
pushf
sub
and
mov
jo
lods
lds
lret
shll
xor
mov
dec
gs
arpl
dec
int
inc
and
push
sub
inc
hlt
repz
dec
decl
sub
inc
es
push
mov
xor
cltd
bound
aaa
enter
inc
xchg
adc
sub
popf
xor
cmp
aas
icebp
jl
fwait
rcrl
pop
mov
jbe
dec
imul
mov
jp
stos
dec
fisttps
mov
xchg
jno
adc
sub
adc
push
sub
adc
mov
popf
mov
inc
and
enter
jno
fisttps
das
roll
fdiv
call
and
xor
sahf
jge
jp
imul
loop
push
clc
mov
bound
or
stos
cld
dec
fiaddl
xchg
or
sbb
sbb
xchg
cltd
inc
mov
mov
push
xlat
ds
sbb
test
out
dec
jne
rcr
add
in
jl
jnp
jb
je
dec
sub
sbb
mov
mov
xchg
fnstenv
cmpsl
inc
movsb
sahf
icebp
cltd
insl
out
push
sahf
cltd
adc
out
and
fiadds
lock
hlt
add
mov
das
jno
fdivs
xchg
xor
mov
enter
xchg
and
mov
inc
sub
mov
inc
subl
xchg
dec
lods
push
ljmp
in
cmp
iret
fs
js
pop
xchg
adc
push
ss
addl
shlb
xchg
add
or
sbb
or
lods
nop
mov
repz
cmp
mov
je
mov
int3
push
or
jmp
jp
lea
out
rolb
xchg
cmovle
fimull
jmp
xor
aaa
mov
lods
and
xchg
jmp
ja
fwait
xchg
incl
or
icebp
rol
jno
inc
push
jne
cmp
movsb
xor
insl
dec
es
nop
mov
mov
testl
mov
ret
aas
add
mov
jnp
cmp
sbb
sub
jmp
sub
ds
lock
xlat
mov
lret
mov
and
mov
push
jae
xchg
cwtl
out
xor
cmp
pop
insl
ss
pushf
adc
xor
inc
cmp
xlat
int
jno
std
pop
adc
dec
test
loope
sub
ja
scas
roll
sbb
cmp
imul
xchg
sahf
arpl
movsb
xchg
lcall
scas
xchg
mov
pop
pop
push
mov
inc
ret
rclb
ret
fwait
pop
fldl
sbbl
and
sub
cwtl
mov
sbb
mov
cmc
mov
inc
push
fsubp
into
dec
sarb
into
fistpl
shll
jb
ffreep
lds
or
dec
dec
mov
add
mov
mov
sub
mov
sahf
clc
ds
lock
push
dec
mov
stos
loope
enter
test
dec
adc
dec
jp
rcll
js
int3
or
cmp
pop
inc
or
inc
loope
dec
xchg
test
clc
cwtl
mov
rcll
or
cmp
in
imul
push
dec
and
cmp
lock
insb
lcall
pop
mov
or
jnp
jo
xor
inc
ret
inc
lea
push
out
fs
mov
inc
lret
mov
push
rolb
push
in
rcll
sbb
dec
out
lds
mov
cli
mov
jg
int
jb
test
lcall
out
mov
subl
sbb
pop
adc
lcall
addb
popf
pop
sub
inc
jbe
std
add
mov
pop
test
int
sbb
outsb
rorb
mov
push
outsb
scas
xchg
and
push
insb
lret
xchg
mov
mov
add
cmp
ret
insl
pop
jno
in
or
aam
js
addb
sub
pop
repnz
inc
outsl
js
mov
sub
outsl
adc
repz
hlt
stc
add
sbbb
incl
pop
xchg
ds
sbb
push
fwait
loopne
push
int3
adc
or
ljmp
sub
fisubs
sti
shlb
mov
jmp
test
inc
xchg
xchg
popf
pop
xchg
adc
xchg
mov
push
repnz
mov
mov
cmp
xlat
push
je
or
and
jge
daa
out
fcomps
xchg
mov
shlb
push
mov
and
or
aam
adcb
and
cwtl
sti
cmp
push
adc
std
adc
imul
mov
loope
sbb
sarb
cltd
dec
and
lods
fdivl
mov
mov
lock
dec
lods
cli
jnp
mov
pop
sub
mov
jle
adc
jle
imul
jne
dec
xor
sub
sbb
fdivl
repnz
xchg
cmp
inc
lret
adc
repnz
sahf
xor
cmpsl
out
fdivrs
add
gs
orb
xor
in
addb
push
xchg
sti
cld
cmc
sub
jmp
test
ret
mov
fsubs
mov
mov
xor
scas
mov
fldl
daa
aaa
pop
pop
pop
mov
xchg
adc
inc
sub
int3
dec
sub
clc
je
lahf
test
fisttpll
mov
fidivl
mov
and
loopne
lods
std
in
cli
stos
add
js
cmp
jmp
movsb
push
adc
test
add
jns
jl
daa
dec
cmp
sub
sbb
outsb
xor
push
into
sub
test
xchg
lods
jns
cltd
cmp
mov
nop
test
jnp
jb
sub
cmpsb
testl
mov
jno
mov
inc
add
or
push
jle
cld
pop
hlt
dec
enter
ficoms
mov
enter
inc
mull
cmp
jmp
add
xorb
ss
mov
or
movb
stos
mov
jnp
sub
rclb
cmp
and
and
es
adc
mov
push
or
mov
push
cmp
es
and
popa
dec
dec
mov
mov
jno
fnstenv
call
out
inc
out
xchg
and
lods
sbb
or
loope
je
cmp
mov
clc
inc
cmc
aaa
adc
rorl
cmpsl
nop
dec
lret
or
inc
or
popf
adc
and
movsl
xchg
cmp
fisubl
testl
inc
mov
push
imul
mov
je
mov
or
mov
xchg
loope
stc
dec
loop
mov
mov
ror
imul
cli
push
add
push
fwait
in
cmpsb
pop
aad
scas
gs
fstpt
idivl
inc
test
loopne
cs
jl
push
movsb
mov
jge
add
jle
add
add
iret
lods
aam
testb
fisubrs
stc
test
sbb
xchg
das
cmp
push
cmp
popf
inc
push
inc
dec
aaa
in
int
in
cmp
out
lods
in
xchg
pop
adc
bound
xchg
int
popf
into
push
push
inc
xor
mov
xchg
into
or
inc
jns
icebp
lods
mov
cmp
repnz
test
aas
pusha
out
aas
je
jg
or
xchg
fstl
xor
adc
repnz
mov
mov
jle
int3
dec
pop
push
jnp
in
and
jnp
cltd
sub
adc
leave
scas
out
pop
test
and
push
xor
jge
dec
lods
push
sarb
adc
add
lret
and
cmpsl
stos
lahf
xchg
lods
jnp
cmp
insb
or
popf
imul
mov
pop
jge,pn
inc
xchg
mov
mov
mov
bound
cwtl
int3
adc
out
add
test
and
dec
cltd
sahf
cmp
ljmp
adc
mov
arpl
incb
pop
mov
fldt
sar
push
jae
cli
outsb
cmp
cmp
hlt
jb
push
add
xchg
out
leave
popf
cmpsl
lea
fwait
lret
push
xchg
lds
mov
or
clc
xor
mov
jae
ja
decb
xor
xchg
in
daa
push
xchg
cwtl
pop
mov
mov
shr
pop
xor
je
lds
movsb
adc
cs
sti
pop
fsub
test
xchg
lock
repz
into
push
fcmovnu
cwtl
sarb
push
loope
ret
repnz
xchg
jecxz
and
push
cmpsb
ljmp
and
push
push
addb
aad
dec
cwtl
mov
js
movsl
mov
mov
sahf
lahf
cmp
inc
push
sub
mov
shl
or
sbb
dec
push
dec
lock
or
xchg
mov
popa
sbb
jb
sub
sub
sbb
bound
pop
cmpsl
int3
sahf
mov
outsl
xchg
sbb
dec
nop
mov
jl
sbb
stc
cmpsw
movsl
pop
cli
enter
push
jnp
pop
sbbl
out
sarb
decl
mov
lahf
test
cmpsl
cmpsl
adc
sub
jae
orb
clc
push
insl
ret
mov
aaa
xor
cmp
cld
add
xchg
fistps
xchg
push
sbb
jnp
cmp
or
and
cmpsl
dec
mov
gs
xchg
pop
in
insl
test
outsl
jae
ret
sbbl
and
mov
cmp
adc
pop
lock
jbe
mov
xlat
pop
enter
jns
mov
mov
adc
out
dec
pop
imul
sahf
outsl
mov
ja
ljmp
cmc
rorb
adc
pusha
dec
ja
xor
pop
lock
outsb
aad
in
iret
subl
inc
js
gs
sbb
daa
or
test
inc
inc
ss
test
push
mov
aas
sbb
push
fiadds
loopne
pop
sbb
daa
rorl
mov
mov
outsl
mov
push
adcl
xor
in
xor
lds
lods
out
nop
push
xchg
xchg
mov
jb
insb
xorb
aam
dec
aas
cmp
mov
sahf
jo
mov
aas
fnsave
fs
push
mov
pop
clc
jmp
mov
shl
push
icebp
movsb
adc
xchg
repz
sub
xchg
lret
aas
loop
bound
call
and
sbb
cmp
add
rolb
or
lods
xchg
push
mov
inc
push
dec
pop
cmpsl
lock
lcall
imul
sbb
and
out
inc
pop
hlt
inc
stc
repnz
ret
xor
inc
icebp
fists
inc
clc
or
adc
inc
adc
ljmp
sub
or
cmpsb
pop
mov
pop
pop
cltd
cld
push
jae
enter
imul
leave
mov
push
sarl
cli
sub
cmp
mov
enter
stos
mov
add
push
outsl
and
aas
adc
cmp
sbb
sub
aad
aam
pop
ret
pop
addr16
loop
out
pop
test
jbe
inc
fisttpll
ret
mov
mov
push
lock
test
fistps
dec
ja
sub
mov
fsubp
lock
pop
pop
jo
push
rorl
int
pop
outsb
dec
test
sub
aaa
dec
cld
lcall
clc
lds
movsl
loop
out
and
pop
dec
sbb
pop
ss
or
cmp
mov
or
test
cmc
sbb
aam
gs
aad
test
add
repnz
pop
jo
pusha
jnp
loope
lods
sbb
push
mov
xchg
cltd
mov
shrb
adc
repnz
mov
mov
mov
iret
cmpsl
jp
lods
pop
bound
and
xor
pop
and
xor
mov
or
popl
push
int
xchg
stc
sub
sbb
out
mov
sarl
and
sbb
daa
stos
cmpsb
xchg
ds
push
jecxz
jle
prefetch
imul
rorl
xchg
xchg
mov
je
sub
jae
jns
adc
add
std
hlt
fldenv
pop
xchg
jne
xchg
rclb
add
test
or
jp
ss
out
js
pusha
jmp
push
push
loopne
mov
or
int3
repz
pop
out
cmp
push
loopne
cli
or
cltd
lahf
xchg
fildl
enter
xor
or
push
mov
push
jg
dec
cwtl
inc
or
mov
iret
pop
stos
and
push
cmc
push
arpl
cld
sti
hlt
push
roll
pushf
gs
adc
push
lcall
ret
xchg
je
shll
xchg
popfw
xor
sbb
jp
test
cmc
and
xchg
push
fsubrs
dec
and
push
sbb
negl
scas
mov
nop
adc
pop
addr16
push
mov
divl
lds
test
jg
jmp
jb
push
push
data16
cltd
sarb
mov
aaa
cmp
std
loop
aas
iret
aaa
pop
js
mov
lods
test
cmp
push
add
push
outsl
dec
jae
xor
js
rorl
cmp
lock
fwait
pop
push
inc
jne
sbbb
xchg
stc
ret
test
dec
mov
pop
and
int3
add
jle
or
daa
sub
scas
push
out
adc
push
xchg
test
mov
cmp
pop
or
adc
jg
dec
imul
xor
setnp
fimull
xor
sarl
and
mov
or
or
jne
jne
scas
sar
xchg
dec
nop
dec
dec
pushf
mov
fs
push
adc
jnp
dec
inc
add
sbb
pop
push
daa
out
das
mov
add
lret
je
mov
ljmp
fsubrl
push
lods
in
or
das
cltd
xchg
outsl
pop
or
ljmp
adc
xchg
mov
inc
mov
push
into
ja
jge
mov
jae
stos
inc
movsl
cwtl
or
add
cmp
cmp
cld
gs
dec
xchg
and
mov
subl
add
push
xorb
enter
adc
stos
fistpll
sti
cltd
add
lcall
push
pop
sub
add
dec
sub
cmpsb
sub
sbb
pop
frstor
call
sbb
dec
add
xchg
jmp
pop
xchg
sub
popf
arpl
cli
andb
aas
lods
test
popa
movsl
jb
sbb
push
jmp
imul
bound
mov
jns
int3
jo
stos
cmc
negl
mov
fwait
jge
push
and
jnp
fidivrl
lock
or
jmp
adc
ret
push
push
out
test
cmp
dec
xor
pop
add
sbb
mov
sarl
scas
push
xor
insl
mov
or
fsubl
push
shl
fcmovnb
test
jns
popf
mov
jecxz
leave
and
push
loopne
cmc
ret
pop
push
mov
jl
icebp
sar
sub
pop
cltd
adc
xchg
dec
cmpsb
outsb
dec
pusha
mov
arpl
sbb
mov
mov
adc
fidivl
jnp
aaa
or
popa
mov
add
clc
imull
popa
cld
fsts
fcmove
jb
dec
das
and
outsl
jo
dec
adc
mov
mov
push
iret
je
inc
push
mov
jge
js
fldl
sub
xor
mov
pushf
test
stc
lea
mov
pop
int
or
dec
test
sbb
xchg
into
addr16
arpl
inc
mov
sbb
add
shld
sbb
jle
loope
or
mov
in
pusha
add
mov
and
into
shrb
mov
mov
mov
lret
mov
sub
stc
scas
sbb
adc
out
inc
test
call
cs
cmpsb
rcrb
xor
js
xchg
je
sub
push
nop
add
aaa
xor
divl
into
pop
lea
mov
into
push
inc
ficoml
sub
orb
sub
outsb
pop
cli
mov
add
pop
imul
and
mov
sbb
aad
mov
mov
and
xorb
adc
dec
mov
xchg
mov
dec
ss
pop
out
enter
jo
cli
shl
fs
or
mov
jl
push
mov
cs
and
loop
inc
mov
out
jl
push
cli
pop
test
imul
lret
lahf
xchg
lcall
cld
cwtl
mov
mov
mov
or
outsl
mov
movsb
jle
movb
xor
std
mull
test
mov
sbb
sbb
mov
xor
lods
and
and
sahf
mov
repnz
adc
xor
jmp
sbb
shl
les
inc
adcb
in
loope
rcrl
inc
lret
stos
sub
test
aam
mov
mov
mov
jl
js
enter
sbb
out
xchg
lret
aam
and
mov
mov
xchg
fstl
insl
iret
mov
dec
ss
sbb
pusha
mov
hlt
in
cmpsl
enter
cmp
sub
aad
jge
bnd
cmp
aam
add
fldt
add
cld
dec
js
push
cmpsl
cmovnp
sub
in
jae
mov
jle
sbb
or
jl
lds
inc
jbe
pop
mov
inc
daa
xor
aaa
jle
rclb
and
mov
cmp
arpl
dec
jg
adc
pop
enter
adc
out
pop
push
fs
loopne
mov
fdivrp
sbb
inc
mov
jmp
fimull
push
xor
notb
mov
push
js
push
je
sbbb
jns
pop
xchg
lret
push
icebp
mov
jne
cmp
outsl
sti
lcall
cmc
jl
sahf
lcall
ret
push
xchg
sbb
je
lcall
sbb
out
mov
int3
jo
jbe
xchg
fwait
jo
add
inc
lret
cwtl
or
outsl
repnz
neg
adc
cli
mov
jg
ret
adc
mov
cs
sub
mov
xor
js
push
lock
push
js
arpl
sub
les
out
jns
mov
lahf
mov
sbb
mov
dec
lds
jp
cmp
je
gs
jnp
sbb
outsl
ljmp
in
push
mov
dec
clc
mov
xlat
pop
aad
pusha
into
or
in
pushf
loopne
dec
dec
xchg
lret
insl
in
sub
jne
jp
fists
lret
and
or
sub
cmp
ljmp
add
jnp
jg
mov
push
push
test
push
xchg
lods
dec
inc
add
jge
inc
push
xchg
sbb
xchg
and
jl
xchg
fsubrl
rorl
jbe
loope
add
imul
jne
pop
jl
pop
pop
iret
ljmp
and
scas
icebp
sbb
push
movl
add
lds
in
pop
add
insb
jno
dec
push
hlt
outsb
pop
add
push
lods
sub
pusha
or
rclb
popa
jecxz
rcrl
jb
rol
and
fsubrs
divb
dec
sarb
mov
and
push
cwtl
lcall
dec
mul
pushf
dec
xlat
scas
cwtl
jno
lahf
dec
loopne
inc
or
stos
dec
add
cmp
or
in
cld
aad
insb
jns
dec
mov
sub
mov
mov
cwtl
int3
lods
push
cmp
aas
sbb
mov
push
and
outsb
inc
or
shlb
pusha
sub
push
test
scas
mov
pop
popa
out
imul
shrl
dec
inc
insl
xchg
leave
ret
fcmovnb
sarl
pop
inc
pop
xchg
or
hlt
negb
es
aas
pop
sub
enter
push
sbb
cmp
fisubrl
pushf
and
test
push
and
sbb
mov
decb
pop
insb
push
mov
dec
aam
out
sbb
sbb
jmp
aaa
stos
dec
pop
jp
lock
lcall
data16
nop
pop
ffreep
outsl
dec
mov
pop
sti
mov
and
sbb
pop
push
pop
ret
sub
cmp
mov
mov
es
flds
jo
add
lcall
pop
je
jl
and
pushf
sub
jp
dec
cs
rol
cld
pop
or
inc
lock
cmpsb
xor
jge
lods
popf
out
sub
in
lahf
repnz
jnp
sbb
subl
mov
pop
xchg
xchg
mov
xor
sbb
sarl
cmp
mov
xor
loop
cld
cld
stos
xor
fsubs
add
jae
daa
and
jae
pop
insb
repnz
jmp
cmpb
xchg
add
fldl2t
xchg
mov
aas
shlb
pop
test
lea
push
mov
mov
or
xor
jle
pop
cltd
divl
mov
rcl
jo
repz
incb
xchg
lds
add
xor
popa
int3
cmp
push
inc
mov
scas
xor
pop
sub
push
push
mov
aam
xor
std
push
jp
push
das
fsubrl
or
and
testl
enter
jns
sub
sub
enter
in
adcl
outsl
loope
aam
pop
arpl
jge
mov
push
shll
loop
dec
movsb
mov
jl
jnp
xor
fucom
ds
cmp
lcall
adc
lods
in
movl
ljmp
or
gs
daa
movb
xchg
mov
push
inc
iret
push
rcl
test
fs
stos
jmp
pop
in
in
jmp
pop
inc
or
add
idivl
test
or
sbb
and
sbb
insb
gs
dec
outsb
sbb
cmp
cmpsb
lret
inc
into
jae
fcomip
lcall
jo
mov
add
mov
mov
fmull
push
xchg
cmp
ds
mov
pop
dec
fcmovu
push
dec
push
lock
cld
mov
jb
mov
aam
mov
and
mov
fmuls
xchg
sbb
and
test
jecxz
pop
in
cltd
jb
jg
pusha
jge
lcall
daa
dec
movsb
into
adc
stos
jg
aaa
jae
fdivs
data16
push
mov
xlat
ljmp
push
sarl
mov
jnp
xchg
push
pushf
inc
add
mov
mov
out
jns
push
inc
jae
xchg
addr16
popf
inc
lods
popf
loopne
mov
sub
mov
call
xchg
cmp
out
mov
ret
pushl
pop
add
push
push
jo
ja
mov
pushw
xchg
jp
fisubrl
rcrl
adc
movsb
add
push
ret
add
and
pop
rcrl
push
sar
mov
xchg
xor
addr16
fs
ret
push
andl
pop
ja
add
mov
fs
fcoml
adc
adc
fs
dec
je
fcompl
add
pushf
jb
daa
sysexit
aaa
repz
cmp
outsb
cmpxchg
jle
ds
xchg
cmpsl
sahf
andb
cmc
cmpsb
bound
ja
bound
fidivl
mov
outsl
aas
pop
jb
loopne
out
xchg
jae
jns
jo
mov
xor
and
pop
subb
gs
leave
sub
vphadduwq
outsl
mov
notl
call
in
imul
mov
das
cmp
mov
mov
andl
enter
std
fcomps
adc
out
sahf
mov
leave
cld
cmpsl
in
push
xchg
movsb
scas
pop
jno
mov
xor
out
dec
aas
adc
mov
sbb
lahf
ret
sub
xor
cmpsl
add
dec
push
pop
lock
insl
mov
aad
addr16
int3
idivb
inc
cmp
push
cmpsl
stos
sbb
fidivl
js
into
popf
mov
inc
aas
popf
std
inc
push
xchg
adc
dec
pop
dec
xchg
mov
movsbl
push
pop
ret
rcrb
jecxz
lcall
cs
jg
scas
sub
pop
lcall
sub
popa
dec
fsubl
adc
xor
mov
cmp
push
shll
decl
xchg
mov
dec
add
push
sti
adcb
cmpsb
stc
sub
loopne
xchg
decl
clc
mov
fsubs
ret
sub
pop
inc
aas
cld
jbe
jp
popf
add
std
clc
cmc
test
xor
add
adc
sub
ljmp
and
repz
dec
movsb
sub
jbe
out
mov
daa
push
loope
add
divl
cmp
call
pop
sti
test
stos
cmp
cmpsb
sarl
mov
fs
push
xchg
and
lahf
nop
pop
adc
or
xlat
popa
push
xchg
je
aad
popa
sub
fldt
fbstp
sub
push
roll
std
ja
or
loopne
std
out
or
hlt
adc
icebp
adc
and
lea
insl
and
test
aad
jb
js
dec
pop
mov
or
ret
inc
out
arpl
out
cld
das
lcall
pop
jae
inc
inc
pop
fcoms
adc
or
pop
fnsave
xchg
xchg
xor
test
das
ds
xor
ret
inc
mov
shrl
mov
mov
fcmovbe
insl
arpl
jmp
jmp
jle
jmp
push
add
and
testl
fbld
jbe
mov
in
add
add
shr
push
xchg
loopne
lret
push
outsb
pop
push
push
lock
fiaddl
push
lret
pop
repnz
loop
insb
and
loope
mov
jle
pop
mov
mov
cmc
mov
nop
mov
push
imul
push
test
out
test
jne
jecxz
mov
push
clc
jg
cmp
das
cmp
inc
pop
ret
rorb
movsb
xchg
bound
mov
lds
jbe
icebp
push
jns
push
add
xchg
ret
mov
mov
loop
mov
and
imul
cld
push
sbb
lret
loope
pop
cmp
jl
push
aas
push
mov
inc
inc
scas
pop
lahf
das
push
mov
fstl
idivl
add
and
iret
cmp
aaa
lods
adc
or
ret
xlat
cmp
ficomps
push
aas
cmp
xor
sub
popf
inc
inc
orb
xor
add
or
jnp
xchg
jg
insb
adc
xchg
sub
inc
cmc
shlb
xor
push
sbb
mov
pop
sub
mov
insl
lods
loopne
add
lahf
xchg
jp
stc
cmpb
adc
dec
add
ret
std
fucomi
cs
jle
bound
push
pop
leave
test
data16
and
rorl
sti
inc
test
fs
adc
xchg
lcall
mov
rcr
lahf
pop
xchg
mov
sahf
setg
mov
sti
dec
fidivrs
pusha
cmp
cmpsb
inc
jae
emms
mov
push
xchg
das
es
mov
lcall
xchg
xchg
clc
mov
mov
mov
jp
ss
ja
sbb
push
xor
pop
mov
inc
ficoml
add
and
sbb
mov
push
decb
mov
lret
push
xchg
mov
sub
fldt
rcll
jmp
push
fs
je
push
rcrl
dec
xchg
jp
push
shl
aas
pop
ret
orl
mov
inc
lods
or
stc
scas
xchg
mov
jbe
mov
push
add
mov
ljmp
cmp
das
repnz
mov
call
jmp
loop
push
aad
push
cmc
enter
mov
mov
rcr
mov
inc
mov
inc
pop
pop
dec
jno
inc
or
fyl2xp1
stos
mov
leave
mov
popf
xor
sahf
mov
and
mov
repz
adc
lea
xor
cltd
sahf
repnz
lods
sti
add
ret
mov
int3
mov
inc
pushf
xlat
pop
lds
push
jnp
mov
jb
mov
pop
mov
mov
aaa
sahf
ljmp
jmp
mov
call
shlb
popfw
adc
cmpsl
xlat
inc
add
jno
mov
pop
push
fdivrs
xor
xchg
xchg
dec
pop
clc
mov
stos
es
jb
pop
jb
and
ljmp
in
aam
mov
adc
add
adc
sti
test
push
dec
xchg
test
aam
add
popf
mov
ret
xor
sub
aaa
in
push
cwtl
jo
add
sbb
mov
jge
mov
pop
xchg
fimull
popl
mov
jbe,pt
add
and
rolb
mov
and
sti
lods
xor
aad
inc
int3
cmpb
jbe
mov
adc
ds
push
inc
dec
fsubrs
mov
int
icebp
out
and
jnp
xor
cli
adc
ret
mov
notb
add
inc
in
sarl
rcl
pop
out
or
pop
dec
cmpsl
cld
lock
call
mov
mov
and
sub
inc
cs
mov
xor
push
dec
pop
push
lods
and
ficomps
stos
mov
push
das
sub
pop
xchg
iret
mov
cmp
in
xlat
mov
inc
sbbb
sbbb
daa
cs
dec
repnz
lea
fdivp
mov
lds
in
sbb
or
stc
jg
pusha
mov
pop
ja
out
loopne
inc
repz
pop
addl
out
adc
push
cmp
roll
sbb
push
cmp
popf
sbb
cmpsl
inc
sub
pop
out
repnz
or
xchg
inc
mov
loopne
les
inc
mov
pop
rcll
xlat
cmp
sbb
sub
mov
cmpsl
sub
xchg
push
xor
add
daa
ljmp
fidivrs
sahf
and
mov
cltd
cmp
xor
cli
mov
add
ds
mov
push
dec
pop
in
aad
xor
pusha
scas
ret
dec
shlb
push
mov
sub
pop
repz
mov
mov
xor
outsb
or
inc
aam
outsb
aam
inc
dec
xchg
pushf
xor
out
lret
adc
or
mov
push
lcall
or
aaa
rcll
pop
out
popf
shlb
shll
leave
rcrl
mov
adc
cwtl
mov
dec
sbb
xor
sbb
adc
mov
push
cmp
add
lret
test
adc
or
out
in
sbb
arpl
jp
jp
mov
les
add
pop
cmc
ja
cmp
nop
lods
out
adc
jne
jg
loopne
adc
jnp
aad
lds
xchg
cmp
frstor
and
iret
ja
xchg
add
push
mov
xchg
add
mov
mov
repz
repz
push
mov
dec
push
inc
inc
dec
jae
cltd
xchg
mov
pop
pusha
test
xchg
fwait
lods
xchg
jge
jb
adc
sub
jmp
xchg
mov
mov
shll
xor
dec
imul
and
popf
and
jo
in
mov
loop
jl
mov
loop
data16
mov
lods
dec
mov
outsb
pop
jg
movsl
outsb
fisttpl
pop
lcall
inc
fucomi
inc
jg
sbb
fmulp
add
std
jns
mov
mov
pop
push
xchg
xchg
cwtl
push
es
push
push
adc
ljmp
rcrl
mov
je
cmp
sarb
stc
or
xchg
push
repnz
in
xor
jno
hlt
xor
int
push
movsb
push
push
push
mov
xor
rol
cli
adc
lods
sub
jne
ficoml
or
mov
mov
push
inc
je
out
push
push
pop
or
in
enter
mov
pop
test
jmp
xor
push
popf
mov
inc
dec
data16
mov
popa
jbe
scas
push
mov
imul
in
sub
jecxz
in
push
rolb
imul
pop
dec
cmp
dec
jnp
push
push
lea
add
jecxz
cli
mov
mov
repz
daa
or
push
push
ret
and
fdivrl
or
movsl
mov
dec
sti
push
call
ret
outsb
out
mov
jbe
rcrb
pop
in
sbb
jecxz
testb
mov
push
les
sbb
ret
cltd
loop
pop
mov
in
imul
aam
cmp
xchg
and
shlb
iret
jno
mov
mov
js
or
stos
sub
inc
mov
mov
mov
fidivrl
addr16
cmpsl
push
cmp
inc
push
cmp
icebp
push
lods
andl
mov
fidivl
repz
nop
push
mov
enter
sarl
pop
dec
movsb
cmp
adc
lahf
adc
gs
xchg
inc
inc
ss
out
jo
xchg
stos
test
adc
loopne
xlat
push
jmp
inc
std
dec
cmpb
gs
movsb
test
cmp
repz
dec
pop
in
cmpsb
scas
add
pop
lods
out
or
repnz
stos
arpl
je
fldenv
test
lds
insb
orl
loop
pushf
xchg
and
scas
insb
pop
insl
mov
or
fs
shll
mov
test
enter
inc
mov
dec
sub
nop
mov
lds
orb
in
mov
pusha
jo
cltd
bound
pop
fldt
pop
xchg
sbb
divl
mov
jae
lods
aas
adc
in
push
data16
push
repnz
cwtl
jne
dec
and
jg
sub
push
sbb
sbb
pop
push
push
sub
movsb
in
popa
sbb
add
imul
ljmp
and
xchg
cmpsl
and
addr16
xor
cld
cmc
push
sarb
push
aam
xchg
scas
cmp
jns
lret
test
and
scas
add
fcoms
ljmp
arpl
into
sub
mov
inc
mov
cmp
cmp
out
stos
add
jo
push
jns
jmp
xor
aaa
xor
pop
pop
jp
adc
or
push
and
sbb
lcall
loope
dec
orl
fistl
inc
or
sub
inc
enter
mov
xor
mov
test
mov
pop
inc
inc
aas
sub
orb
push
test
pushf
mov
or
xchg
xchg
pop
cmp
inc
fidivrs
std
ret
or
lea
add
hlt
add
sub
mov
adc
pop
movsl
sahf
dec
dec
shl
sub
packssdw
jmp
jo
inc
lahf
les
ss
push
mov
cltd
push
jbe
mov
aaa
jmp
push
xchg
xchg
sbb
repnz
mov
mov
add
fnsave
dec
enter
or
jb
jle
xor
scas
sahf
dec
adc
sahf
xlat
pop
jecxz
shll
test
pop
mov
mov
xchg
and
mov
aam
push
in
mov
push
sub
mov
xchg
arpl
sahf
dec
cmpsb
sahf
xlat
dec
xchg
repnz
stos
bound
mov
test
hlt
sbb
fcompl
adc
push
std
jbe
imul
push
add
push
cli
fwait
and
push
mov
iret
into
mov
xchg
test
xor
pop
test
mov
enter
lret
jae
add
scas
mov
andl
in
push
sub
repnz
outsb
mov
sbb
jg
sub
nop
fiadds
and
xor
jp
enter
sub
and
mov
add
pop
fists
ret
repz
inc
xchg
mov
fdivrs
inc
aad
push
in
add
mov
mov
xor
mov
test
mov
mov
push
push
gs
and
jmp
sub
or
rorl
add
call
xchg
addl
cmp
scas
xor
cmpsl
and
call
rolb
mov
ds
hlt
xor
dec
or
jnp
fldenv
push
xchg
sub
sub
mov
jo
out
xlat
push
sub
add
shl
out
inc
cld
xchg
inc
push
lret
pop
ja
frstor
cli
fldcw
mov
mov
xor
and
mov
dec
mov
inc
out
rcr
lods
dec
push
mov
stos
dec
movsl
cmc
add
dec
sbb
jge
cmp
flds
mov
sahf
lret
jl
adc
out
pop
mov
sub
adc
push
test
or
jns
fincstp
inc
jmp
push
mov
fdivrs
mov
xchg
push
test
push
jle
jnp
mov
xchg
dec
ljmp
les
dec
ljmp
test
jnp
and
in
loope
test
aad
mov
mov
das
mov
jge
call
inc
mov
sbb
xchg
jp
es
push
jl
lret
sub
xchg
negl
push
push
or
dec
fistps
mov
pop
mov
add
lret
rolb
out
inc
test
mov
adc
lcall
xchg
lods
push
mov
jecxz
cmp
cld
fisttpll
lock
xchg
jb
mov
mov
pop
inc
movsb
cmpsl
mulb
mov
xchg
mov
out
leave
loop
lret
cmp
and
bound
push
sbb
test
xchg
pusha
mov
add
test
data16
stos
adc
hlt
movsb
jl
mov
icebp
sub
or
fwait
orb
cvtpi2ps
xchg
ror
insb
mov
shrl
insl
outsb
or
dec
xchg
xchg
adc
jg
fisttpl
mov
cmpsb
mov
push
push
lahf
jns
lret
sarl
outsl
fcmovu
in
bound
inc
jp
bnd
jmp
lock
inc
sbb
lock
and
inc
std
dec
sub
dec
and
mov
sub
mov
and
or
stos
ret
xchg
stos
cmp
mov
iret
incl
test
and
adc
jecxz
mov
dec
cli
inc
and
cltd
jle
jmp
and
mov
mov
lret
xor
push
in
pop
xor
pop
mov
rcr
and
xchg
es
and
rcll
fmulp
adc
stc
cmp
or
mov
mov
lods
and
shll
movsb
pop
dec
lods
or
loop
loop
sbb
rcll
in
pop
add
mov
das
pop
mov
jmp
rcrl
fcmove
pop
lret
lahf
loope
enter
pop
movsl
xor
je
outsl
scas
inc
push
or
or
xor
push
jae
sub
int3
mov
jmp
lock
imul
push
sub
stos
or
inc
jbe
xchg
stos
test
sbb
int
mov
mov
push
out
mov
and
mov
cmp
cmp
jle
xchg
aas
adc
insl
jmp
sbb
xchg
jb
cmpsl
fbstp
imul
cld
scas
inc
mov
add
mov
scas
lret
std
lahf
mov
lea
jae
lds
stos
lea
mov
and
sbb
pop
ret
inc
cwtl
mov
push
add
cmp
xchg
xchg
lea
aaa
es
dec
xor
fbstp
dec
dec
adc
sarl
loop
pop
adc
push
cwtl
ret
insb
test
into
add
sub
mov
popf
sarl
jae
aad
mov
lds
xchg
mov
addr16
mov
cmp
cltd
mov
sti
test
les
jle
inc
pop
mov
push
nop
fsubl
jge
sub
mov
sub
movsb
out
pop
jno
adc
les
push
shrl
das
dec
and
adc
mov
and
xchg
lcall
addr16
xchg
rolb
mov
pop
inc
stos
and
cltd
into
popa
cltd
popa
pop
addr16
ret
roll
cmp
in
or
adc
mov
push
loopne
and
nop
sti
inc
insl
rcll
adc
push
mov
fidivl
and
dec
or
pushf
jno
test
mov
lods
sub
cmpl
push
xchg
mov
pushf
dec
mov
inc
outsl
lret
mov
loop
fldl
aas
inc
and
push
and
mov
pop
dec
adc
mov
xchg
psllw
sbb
sahf
inc
inc
sbb
lock
sbb
push
imul
outsb
test
je
popa
fiadds
cmpsb
and
xor
adc
pop
push
mov
mov
mov
xchg
in
mov
push
imul
punpckhdq
es
loop
xchg
pop
cmp
cmp
mov
loop
sti
mov
cmp
imul
lcall
xor
pop
jge
cwtl
xchg
and
xchg
sbb
adc
test
mov
ds
sub
mov
jmp
imul
ret
mov
in
in
into
cld
das
stc
jbe
orl
mov
je
adc
stos
insl
jp
cmc
aaa
mov
and
dec
pop
xor
out
xchg
andb
and
inc
stc
pop
ljmp
xchg
jnp
jge
adc
and
mov
dec
mov
in
jbe
ret
xchg
mov
jl
dec
inc
lock
jecxz
jo
es
pop
scas
dec
jno
loope
pusha
add
sarb
inc
mov
jns
lods
repz
lahf
cmp
mov
xchg
mov
inc
ljmp
push
mov
cmp
sbb
notb
sbb
adc
cmp
test
mov
fsubp
shlb
lret
add
cmpsl
test
aaa
cmp
dec
arpl
pop
jge
cmpsb
test
jg
mov
orl
out
hlt
iret
lock
adc
dec
sbb
push
sub
pop
dec
jl
movsl
inc
and
cmp
repz
push
pushf
xor
rcrl
jb
cmp
das
gs
outsl
ss
les
cmc
dec
lds
push
js
stos
pop
mov
cmpsb
mov
mov
cmpsb
loopne,pn
clc
add
inc
and
out
mov
fistps
sbb
arpl
push
or
test
arpl
enter
mov
insl
jns
lods
repnz
in
jecxz
mov
sub
shrl
cbtw
and
aad
loop
jg
push
jge
add
sidtl
pop
xor
sbb
push
push
jns
in
add
addr16
loopne
jmp
popa
dec
stos
movl
mov
in
lods
jb
mov
mov
pop
inc
push
jns
pop
lea
shl
mov
orb
jbe
or
sub
cmp
lret
xchg
and
inc
push
lahf
fnstcw
arpl
pop
loop
xchg
pop
inc
dec
fisttpl
cmp
add
mov
popf
cmpsl
adc
mov
mov
negb
cmp
pushf
xchg
jnp
ds
and
cltd
ret
bound
push
cmc
xchg
outsl
mov
clc
pop
loope
scas
loope
xchg
push
sbb
push
in
push
negb
shlb
xchg
mov
js
decb
mov
sbb
stos
jge
sbb
shl
aas
sub
mov
inc
adc
outsl
lea
sbb
mov
pop
mov
in
adc
inc
mov
mov
decb
adc
jne
addr16
jns
pop
sahf
jbe
mov
call
lods
push
ljmp
sbb
aad
or
jne
sti
xchg
cmpsb
icebp
push
loopne
mov
lcall
jmp
sbb
xor
fcmovnbe
cmp
movsl
jne
into
mov
xchg
das
aam
and
lahf
mov
dec
std
inc
test
mov
sbb
insb
mov
push
sub
xor
in
bound
mov
sub
sti
push
jbe
fimuls
sbb
mov
loop
add
pop
inc
ljmp
push
lret
adc
fmuls
or
fsubrs
divl
stos
loopne
sbb
jg
gs
and
inc
mov
adc
mov
pop
rcl
dec
std
mov
and
sub
cmp
push
jl
push
out
xor
sbb
xchg
lea
sub
fwait
insl
bound
sbb
shl
cmp
jno
and
xchg
arpl
pushf
mov
ret
fsts
adc
adc
pusha
mov
cmp
mov
dec
push
cmp
ljmp
and
in
sub
popf
enter
mov
push
and
xlat
xchg
test
js
daa
cmp
mov
dec
mov
inc
adc
pop
pushf
rcl
orl
int3
xlat
std
mov
jns
pop
push
lods
pop
in
cmc
iret
xor
mov
loop
cmp
push
in
xor
sti
jle
xchg
dec
insl
ljmp
xchg
in
repz
out
jg
or
je
push
pop
mov
mov
xor
cmc
out
jo
mov
mov
cmpsl
cwtl
addr16
xchg
or
push
dec
test
insb
jecxz
iret
or
into
stc
push
mov
dec
out
and
stc
sbb
fdivl
push
aam
pop
pop
pop
sub
sub
pusha
icebp
and
fsts
bnd
bound
add
loope
mov
cmpsb
fsubrs
sub
or
mov
arpl
lahf
std
clc
xchg
stos
xchg
xor
mov
and
xchg
rorb
dec
js
cmp
andb
fwait
aam
dec
mov
add
negl
test
and
adc
ret
mov
jp
mov
adc
adc
mov
xchg
lock
cli
jle
mov
push
cmpsl
push
xchg
sub
int
in
jne
mov
lds
ret
ljmp
mov
or
ss
fldl
mov
sbb
call
daa
jno
dec
enter
test
jno
jnp
sbb
sbb
test
sbb
or
adc
out
movsl
sbb
lods
mov
add
pusha
push
andl
mov
mov
fucompp
insb
lret
sbb
popa
mov
cwtl
inc
lcall
into
scas
xchg
lcall
int
frstor
cs
pop
fmuls
sbb
cmp
shll
jo
shlb
lock
pop
sbb
cs
push
adc
cmp
sbb
and
hlt
push
cmp
mov
mov
rorb
shl
jns
mov
les
mov
fbstp
shll
stos
xchg
loope
cmp
rcll
add
push
xorl
das
jmp
ds
and
and
idiv
addr16
push
and
inc
scas
ret
out
adc
cmpsb
ficompl
ds
add
cltd
dec
lcall
pop
cmpsl
in
sub
mov
cli
std
insl
adc
mov
jo
push
mov
jmp
jbe,pt
xor
jae
test
out
sahf
das
adc
outsb
or
push
and
shrb
pop
test
outsb
pop
in
jmp
ficoms
loop
push
mov
bound
or
sub
rorl
inc
fdivrl
scas
push
leave
pop
jp
mov
dec
out
imul
fcoms
cs
pop
out
mov
xor
mov
cld
jg
popa
adc
outsb
sub
pusha
mov
xor
and
adc
jb
rcr
mov
or
push
subl
popa
mov
xchg
cwtl
outsl
sub
cmp
fwait
push
bound
out
mov
dec
pop
out
push
out
bnd
cmp
add
push
sub
add
inc
nop
add
mov
adc
push
cmp
rcll
sahf
out
jo
imul
stos
js
cmp
add
push
out
push
add
icebp
inc
jns
adc
mov
das
cmp
aas
rcrl
jmp
loopne
dec
cmpsb
mov
push
rol
roll
push
dec
arpl
mov
xchg
and
jmp
popf
inc
jle
ret
mov
sub
dec
in
jns
push
push
xor
xor
in
inc
out
fdivl
push
xchg
cltd
fwait
mov
add
sbb
xor
cmp
mov
test
mov
pop
xor
in
mov
bound
mov
pop
outsb
repnz
subl
sbb
js
sbb
mov
sbbb
je
push
int3
sub
out
cmovp
xor
push
dec
lret
or
inc
fistl
push
dec
sub
negb
test
mov
pop
repz
xchg
pop
lods
mov
dec
in
imul
ds
xor
mov
lret
mov
leave
adc
mov
stos
add
pop
or
in
jge
lret
out
and
xor
fidivrs
jnp
loopne
in
jp
xor
mov
mov
mov
in
xchg
fwait
imul
pusha
push
xor
in
arpl
cltd
jno
inc
sbb
jp
int
mov
lods
lret
inc
pop
imul
lcall
and
mov
divl
pop
xchg
test
jmp
inc
pop
push
sub
mov
or
xor
mov
mov
jmp
gs
add
inc
rorl
dec
out
mov
jne
pop
or
xchg
icebp
mov
ret
int3
nop
dec
stc
jb
mov
int
add
pop
pop
mov
add
icebp
mov
aas
add
fimuls
mov
adc
dec
sarl
loope
rorb
ret
fsubs
nop
push
inc
in
push
cmp
adc
je
cld
fcoms
mov
mov
movsb
mov
dec
idiv
dec
nop
push
mov
dec
ret
mov
testb
adc
cmp
testl
push
and
dec
pop
fcoml
and
popl
and
xchg
imul
sahf
into
dec
xchg
into
and
add
int
xchg
xchg
xchg
fwait
cmp
rep
push
and
push
inc
cmpsb
sub
push
repnz
frndint
pop
mov
push
pushf
pop
jle
sub
les
clc
mov
outsl
mov
iret
loopne
sti
mov
sbb
test
pop
dec
cmc
repz
push
sub
loopne
mov
aas
lret
ficoms
jbe
addr16
data16
push
or
in
test
inc
sub
shlb
repz
mov
shl
xchg
mov
push
jnp
inc
mov
jge
adc
imul
xchg
rcr
cwtl
mov
ficomps
lock
orb
pop
sub
mov
std
push
jb
test
shrl
call
les
jne
lahf
sbb
push
movsb
clc
rcl
push
and
jb
xlat
pop
mov
xchg
mov
xor
mov
cmpb
pop
out
adc
icebp
lret
pop
jp
fwait
add
push
dec
outsl
outsl
out
sub
push
in
sti
int3
pushf
icebp
cmp
fisttpll
cmpb
lahf
mov
xchg
je
out
xchg
je
stc
inc
xchg
pop
iret
cmpb
add
xor
xor
rcrb
cmp
sbb
stos
lods
sub
jnp
cmp
mov
sbb
insl
lds
cmp
orl
mov
ds
pop
sub
jge
jmp
sub
lods
out
mov
inc
ret
out
push
jl
mov
xchg
mov
fiaddl
or
xor
cmc
mov
add
mov
or
test
or
dec
adc
mov
xchg
out
pop
imulb
insb
cld
and
xchg
notl
cld
mov
push
inc
inc
nop
orb
sahf
dec
cmc
dec
dec
rep
adc
mov
sbb
ljmp
xchg
mov
ja
sti
push
mov
sub
out
add
mov
fnstsw
mov
pop
outsb
dec
xchg
int3
xchg
jmp
mov
mov
or
rclb
inc
in
mov
dec
data16
pop
sarl
mov
xchg
sti
mov
repz
stos
xchg
mov
sbb
sahf
icebp
adc
scas
push
and
outsl
mov
pop
insb
xlat
shr
mov
cmc
mov
imul
pushf
cmpb
jg
cmp
std
aas
decb
or
lods
pop
loopne
dec
fbld
push
xor
jnp
shlb
xchg
cmp
cmovg
jg
cs
xchg
pop
pop
jno
sub
outsl
and
sbb
dec
fs
daa
insl
or
enter
and
mov
push
xor
dec
lods
incb
mul
stos
inc
xchg
fnstcw
sub
xchg
sub
mov
test
jg
xchg
lea
ss
jnp
loop
stos
les
jns
std
push
cmpsl
push
xor
je
jae
arpl
dec
jle
cli
pop
lods
test
in
cmp
sbb
outsb
loopne
inc
jnp
jecxz
cmpb
and
and
or
pop
enter
push
xchg
lods
fnsave
mov
mov
jbe
mov
sbb
rep
btr
mov
push
lret
in
pop
int3
sub
pop
out
into
fs
je
add
test
lahf
dec
dec
scas
push
mov
and
fwait
inc
xor
fidivs
cmpsl
aas
push
sbb
jo
xchg
pop
and
pop
and
cmp
inc
fs
addr16
jb
inc
push
inc
adc
ds
mov
out
out
std
dec
dec
xchg
sbb
in
insl
jmp
mov
shrl
mov
dec
lret
push
inc
inc
fiaddl
ds
sbb
mov
xor
hlt
inc
pushf
andl
add
repnz
xlat
mov
cmpsl
jp
lret
mov
sarb
nop
in
pop
and
fwait
mov
ja
sbb
out
addr16
jo
stos
dec
mov
movsl
push
jae,pn
xchg
pop
pop
inc
mov
inc
sub
stc
lea
xlat
adc
mov
sub
dec
sbb
mov
lahf
sbb
sub
mov
mov
cli
fimull
push
mov
or
sub
xchg
outsl
into
push
pop
add
pop
scas
push
stos
mov
int3
outsb
pop
out
xor
cmp
sahf
sarl
pop
mov
dec
shlb
and
dec
jl
iret
sub
js
inc
add
xchg
inc
adc
inc
pop
je
add
nop
pop
cmp
xchg
testb
mov
xlat
jp
fildl
pop
lods
push
sbb
fbld
mov
mov
cwtl
cmp
aad
mov
adc
adc
xor
inc
inc
pop
pop
in
in
push
ficoms
gs
adc
test
add
mov
xchg
pop
mov
test
pop
jno
inc
shll
xor
mov
pop
xorl
xlat
push
jnp
std
fwait
fidivl
stos
icebp
std
add
xchg
ret
sti
jb
fsts
dec
sub
jbe
sti
mov
pop
arpl
xchg
lret
pop
dec
mov
insl
dec
push
enter
cmpsb
xchg
push
dec
mov
enter
pmullw
xchg
je
call
cmpb
and
out
pushf
scas
les
fcoms
sar
test
dec
pop
mov
inc
into
aas
pop
scas
sbb
pusha
add
xacquire
fs
adc
sbb
dec
jl
lret
jnp
subb
dec
inc
mov
sbb
popa
mov
jbe
pusha
push
clc
jae
ss
dec
aas
ljmp
mov
scas
aad
xchg
sub
and
imul
les
or
cwtl
and
jmp
aaa
jl
ljmp
pushf
jne
jno
pusha
out
aam
stc
push
jbe
imul
cmp
add
js
stos
and
stc
sbb
xchg
xor
cli
push
sti
jge
sbb
ja,pn
and
in
lahf
jmp
mov
push
fmull
push
mov
sbb
adc
jnp
push
push
or
and
pusha
ss
loop
xor
icebp
rcrb
testb
sub
mov
mov
jbe
sbb
lods
jge
push
insl
xchg
inc
push
xchg
sbb
xchg
scas
push
aaa
gs
fucomp
aam
stc
divl
std
inc
leave
fs
sbb
stc
adc
negl
fs
sti
test
jnp
decb
fcoml
out
or
arpl
cmc
bound
popa
inc
mov
mov
push
dec
not
ds
mov
mov
add
out
dec
vpmulhw
pop
into
inc
and
xor
mov
mov
dec
fistps
xchg
mov
mov
bound
cmpb
clc
fld1
and
aam
pop
out
xchg
aad
sti
int3
add
clc
jle
adc
add
lcall
cmc
adc
mov
xchg
dec
or
ja
mov
inc
and
and
bound
xor
xchg
add
sub
dec
mov
fwait
adc
test
test
or
testl
test
lods
jnp
dec
daa
sbb
arpl
jb
loop
cmp
int3
insl
mov
adc
aad
mov
push
sbbl
xchg
fistl
cmp
inc
in
jnp
jmp
mov
or
aam
scas
imul
lcall
push
daa
inc
sahf
mov
mov
or
repnz
stos
push
int
dec
push
and
mov
jecxz
dec
jp
lret
jge
pop
push
xor
mov
dec
dec
out
inc
rorl
fwait
addb
dec
repz
inc
jno
dec
in
inc
je
pop
leave
pop
adc
pop
addr16
div
std
mov
in
jmp
cmp
xchg
shlb
add
push
cmc
insb
andl
push
mov
stc
das
mov
les
cltd
lds
push
dec
pop
fwait
mov
fsubrl
or
mov
orl
int3
hlt
fcompp
outsb
outsl
scas
mov
xor
xor
dec
aas
fiaddl
decl
scas
sahf
popa
mov
and
sbb
bnd
into
mov
mov
sbb
sbb
loope
shr
les
xchg
fsts
xor
sbb
mov
mov
lds
out
mov
adc
lahf
inc
push
cwtl
fmull
insl
movsb
cmp
xchg
loopne
sbbb
lods
push
mov
inc
addr16
out
ficoms
mov
shr
cmp
pop
push
sti
push
sbb
lock
inc
sub
pop
dec
mov
lods
xor
in
xchg
cmp
pop
hlt
js
test
mov
push
daa
sub
gs
out
ret
movsb
mov
imul
aam
add
adc
pop
lea
mov
mov
loope
cmpsb
bound
mov
icebp
ja
mov
clc
scas
xchg
push
orl
inc
in
push
in
jecxz
scas
pop
dec
adc
mov
inc
pop
mov
xor
xor
in
lods
vsubsd
in
bnd
xchg
gs
ret
mov
bound
jp
sbb
outsl
inc
imul
movsl
arpl
lods
adcl
adc
mov
divl
cmc
push
test
fildll
jp
ljmp
mov
rcr
sahf
lock
sbb
orl
mov
pop
adcl
sbb
sbb
fidivrl
mov
inc
and
int
adc
clc
rcrb
sbb
push
sti
sti
sub
cvtdq2ps
ja
push
dec
dec
xor
neg
push
ds
inc
in
inc
adc
xchg
pop
mov
sub
js
lret
mov
sub
sub
jne
dec
ljmp
aas
out
mov
xchg
xor
mov
arpl
aad
test
aas
stos
xor
xchg
aam
and
push
jnp
adc
xchg
jg
xchg
jns
push
xchg
shrb
ret
popf
and
xchg
inc
adc
cmp
inc
cmp
popa
ja
or
jle
outsb
ret
cli
in
aam
xor
mov
mov
imul
jo
icebp
fidivs
int3
nop
cld
push
ret
push
xchg
repnz
vaddsubps
xor
outsl
movb
out
jmp
push
sub
push
xor
add
add
out
dec
roll
ss
push
stos
mov
test
outsl
adc
sar
push
mov
in
fistps
gs
mov
xchg
stos
outsb
inc
enter
rcrl
rclb
divl
lret
subb
push
clc
xchg
stos
add
insl
pop
adc
or
lods
push
popf
les
mov
push
sub
adc
mov
lods
jg
lock
pop
roll
mov
xchg
out
in
xchg
xchg
fcoml
das
idivl
dec
push
stc
in
mov
push
lds
pop
jb
or
and
jo
js
mov
int
inc
mov
sub
push
push
xchg
arpl
and
test
popf
mov
push
hlt
jg
sti
movsl
call
fmulp
sub
adc
cltd
insb
aam
add
sbb
mov
ds
xchg
rcll
out
mov
xchg
aam
insl
mov
ficoml
test
in
pop
adc
pusha
mov
xchg
fsubs
bound
cmc
int3
mov
xor
sbb
jmp
test
add
jle
leave
dec
das
scas
adc
rcrl
sub
sbb
mov
xchg
icebp
addr16
sets
push
cmpsb
lock
mov
fdiv
push
mov
cmp
les
lcall
or
cmp
adc
xor
cwtl
sar
imul
in
ss
pop
int
push
shrb
mov
xorb
xor
jg
xchg
dec
das
in
sub
push
mov
xor
jl
or
add
and
sub
daa
test
loopne
xor
pop
jno
mov
dec
and
out
push
sahf
mov
push
jle
xchg
and
test
mulb
sbb
cld
cmp
mov
inc
mov
or
les
sub
lcall
mov
mov
stos
in
inc
adc
xor
adc
cltd
or
mov
popfw
cmp
fyl2x
or
iret
mov
dec
inc
mov
dec
xor
jnp
or
inc
cwtl
ljmp
jnp
inc
cmp
dec
push
inc
dec
mov
lcall
inc
pop
sub
pop
mov
out
mov
test
mov
aaa
mov
addr16
insb
lcall
std
inc
add
insb
insb
iret
lods
add
out
jae
das
loope
stc
rcl
jle
fsub
pop
mov
mov
push
mov
popa
rcrl
in
dec
mov
pop
mov
rorb
cltd
lods
es
sbb
rclb
ret
xchg
es
mov
leave
call
int
and
std
jbe
add
orb
lret
cmc
rcrb
inc
cli
cld
xor
lock
fidivs
loop
sbb
sub
inc
adc
dec
pushf
jmp
loop
mul
aad
mov
jmp
stos
cmc
add
adc
pop
repz
das
cltd
jnp
jbe
fsubr
pop
xchg
pop
jecxz
jno
or
inc
ss
mov
mov
cs
jl
lea
mov
pop
cli
sbb
imul
ja
out
add
push
lret
adc
es
jns
add
cmp
sti
push
sub
mov
push
cli
ja
cmp
mov
cmp
pusha
aad
jae
mov
mov
cld
repz
mov
dec
iret
loope
ljmp
sbb
pop
outsl
enter
icebp
lcall
gs
sub
mov
ret
push
rcrb
outsb
xchg
repnz
test
mov
mov
jg
push
arpl
clc
push
call
lcall
mov
xor
push
or
xor
shl
cmpsb
cmp
repnz
mov
cli
sbb
out
mov
outsb
xchg
push
rcll
inc
in
inc
inc
and
imul
es
ret
popf
and
jle
sub
movsl
xor
xor
dec
inc
out
rcll
sub
int
int
adc
negl
mov
adc
pop
es
outsb
mov
mov
popf
cmp
jmp
dec
pop
test
fwait
lds
outsl
scas
mov
and
mov
bound
push
xor
loope
sbb
and
scas
test
mov
stos
cs
lcall
outsl
mov
ljmp
xchg
fists
xchg
dec
cmpsb
scas
pop
int
xchg
or
push
xor
inc
and
push
cmc
jmp
js
clc
lock
jge
cmp
fstpt
mov
imul
mov
loope
pusha
mov
adc
fbld
xchg
divl
xor
sub
sbb
into
mov
dec
shl
ss
jns
inc
test
jne
and
mov
add
adc
or
stos
pop
jbe
pop
in
sbb
dec
addr16
pop
fdivs
mov
in
push
roll
inc
imul
out
xchg
mov
popf
dec
repz
movsb
push
popa
adc
pop
fbld
lods
fnstcw
add
sbb
pop
jp
inc
jno
mov
inc
sub
std
cmp
in
out
pusha
icebp
mov
loop
es
adc
jbe
xchg
xchg
js
jno
sub
inc
adc
lret
cld
adc
pop
xchg
lock
cld
fiaddl
leave
adc
push
icebp
push
sbb
xor
cmp
sarb
nop
push
adc
cltd
adc
or
mov
loope
movsb
sarb
loope
test
fimull
sbb
mov
xor
sbb
dec
inc
mov
fs
lret
cmp
adc
ds
jne
mov
loop
xor
pop
test
fmull
adc
ret
sbbl
or
rorl
lods
xlat
es
xchg
push
inc
mov
repnz
inc
mov
lahf
xchg
push
call
cmc
fsubrl
movsb
in
add
fstps
xor
mov
pop
mov
iret
dec
test
sub
scas
cmpsb
cmpsl
cltd
int
sub
sbb
incb
imul
xchg
pop
sub
lret
sub
inc
test
mov
cmpsb
ret
mov
sbb
ljmp
dec
mov
cmc
add
jbe
xchg
sarb
inc
cmpsl
stc
clc
mov
cmp
sti
or
test
shll
jne
mov
mov
lods
mov
fnstenv
push
mov
js
aas
and
mov
ss
jns
shrb
mov
test
pop
inc
lea
mov
pop
jle
lcall
mov
jb
and
mov
push
lcall
push
and
rolb
es
mov
ret
call
ljmp
xchg
out
fstps
or
fisubl
xor
pushf
cli
aas
mov
jl
push
ja
pop
aas
loopne
stos
adc
mull
sub
les
fisubs
fisubs
xchg
inc
jmp
popf
sbbb
or
mov
cmp
pop
enter
dec
or
ret
sub
sahf
loop
es
mov
dec
add
sbb
ljmp
add
es
cmpl
and
fstps
xchg
mul
mov
daa
mov
mov
movsl
xchg
pop
push
stos
fisttpll
cmp
adc
ret
dec
test
inc
sbb
sahf
in
fadds
mov
pop
push
lock
sbb
xchg
pop
cli
pop
mov
ret
xlat
jg
xchg
aas
jg
call
xor
sbb
add
lea
cmp
inc
mov
cs
pushf
jne
jl
mov
push
mov
imul
adc
sub
inc
fsubl
popa
ss
mov
clc
push
mov
stos
push
fs
push
dec
das
repnz
and
jnp
loope
lahf
dec
loope
repz
cltd
cmc
push
dec
in
sub
cltd
fisttps
xchg
shl
or
fnsave
dec
sahf
js
inc
aam
ret
pop
lret
outsb
xchg
ss
cmp
dec
push
mov
push
jo
popa
je
sub
arpl
bound
aaa
jge
inc
shll
xlat
test
subl
sbb
sbb
xchg
mov
inc
jne
fdivp
mov
lret
and
jns
pop
xchg
sti
or
fbld
push
fs
out
jecxz
mov
xor
out
jl
or
enter
js
jmp
push
xchg
dec
jg
sub
jge
sahf
jns
pushf
aad
iret
adc
imul
adcb
pop
push
lea
add
sbb
sub
jmp
mov
fdivrs
ror
dec
sub
or
adc
mov
ret
jo
inc
cmp
cwtl
adc
cltd
jl
xchg
int3
and
leave
mov
pusha
les
and
xor
xchg
cmp
jb
push
lret
subl
out
fbstp
out
mov
cmp
lahf
xor
std
shlb
mov
ret
mov
scas
inc
jl
pusha
sub
xor
cwtl
mov
sbb
push
in
dec
inc
outsb
xchg
js
sbb
push
jns
outsl
insb
or
fildl
or
sbb
mov
pop
movsb
push
leave
sub
cltd
jb
lock
out
loop
gs
xchg
movsl
inc
xchg
jecxz
test
lcall
mov
movsl
inc
adc
jns
and
out
cmp
cmp
leave
and
popf
sti
sub
cmp
loope
jmp
mov
sub
in
cmp
iret
xor
pusha
lret
test
sbb
pushl
sub
imulb
in
and
pop
sub
mov
lea
in
push
or
addr16
mov
pop
cs
add
mov
ror
jno
add
ja
pop
mov
in
xchg
or
pushf
icebp
lret
jns
sub
fcomp
jmp
pusha
rcrl
setp
cmpsl
shll
and
out
add
xchg
shufps
stos
out
mov
enter
adc
leave
shrl
int
ret
scas
or
adc
in
outsl
mov
sub
cli
sbb
leave
ja
dec
inc
xor
dec
cld
stc
mov
data16
sarl
in
pop
jne
sahf
sub
add
cmp
fdivr
imul
sub
ja
xchg
mov
push
test
xlat
aaa
js
adc
fdivl
clc
jno
outsl
out
pop
mov
jle
add
ss
jns
jns
fcmovu
jne
xchg
push
xchg
mov
fidivrl
ljmp
inc
enter
arpl
inc
lock
jp
xchg
pusha
xchg
call
pushf
aam
adc
ss
adcl
out
rcrb
inc
cli
loop
push
add
inc
ss
insl
inc
nop
inc
inc
lds
cmp
xlat
jne
sbb
cmp
cmp
cmc
sub
cld
mov
mov
sbb
fmulp
cli
aas
sbb
mov
xchg
cmpsb
jmp
nop
xor
pop
and
popf
stos
jb
jg
xor
push
es
xor
outsl
mov
insl
mov
inc
inc
loopne
std
xor
cmpsl
jl
mov
int3
bound
loope
jl
push
adc
pop
xlat
test
or
mov
xchg
ret
dec
leave
fistps
push
rclb
push
or
lret
stos
pop
dec
mov
in
jle
adc
inc
pushf
and
push
scas
mov
test
sbb
fwait
cmpl
push
pusha
andl
pop
ret
cmp
cmp
push
test
addr16
xchg
push
rorl
mov
push
jg
mov
ret
out
dec
sahf
icebp
jg
rcrl
sbb
push
jo
xchg
popf
outsl
pusha
rcrb
fldcw
and
and
inc
mov
in
sbb
int3
movsl
leave
mov
inc
cmpsl
mov
inc
and
lret
dec
iret
std
and
loop
jb
fiaddl
outsb
dec
sub
shll
clc
jp
outsl
push
jnp
mov
jb
fstpl
cmp
je
testb
in
test
xchg
test
cmp
lds
push
mov
scas
or
mov
popf
jp
jae
adc
pop
cltd
ret
dec
test
lret
jmp
xor
xor
bound
ja
ret
fldl
movsb
dec
test
cmp
pop
push
xor
int
jb
or
adc
push
mov
test
nop
push
int
inc
mov
push
adc
sahf
pop
out
xchg
xor
shl
int
std
mov
lret
roll
inc
into
out
add
into
cs
xor
ds
cmp
add
lcall
dec
xchg
mov
cmc
sub
daa
ror
or
aam
into
ja
mov
int
push
pop
js
movsb
pop
stc
inc
stos
mov
cmp
popf
arpl
out
out
mov
adc
xchg
and
pop
mov
mov
sahf
adc
mov
jle
jl
insl
jp
fcmovne
sbb
imul
mov
mov
popa
popf
fsub
adc
mov
xor
cmpsl
pop
dec
push
std
popa
xor
cltd
mov
or
fs
xorb
inc
jbe
ret
out
adc
xchg
dec
cmp
fdiv
scas
mov
push
out
and
and
into
cld
fnstcw
ja
shrb
push
shrb
test
sbbl
clc
adc
mov
mov
loopne
sub
cli
rcrl
stos
leave
imul
adc
xor
lret
ret
in
sbb
add
jbe
add
lret
es
std
outsl
pop
xchg
enter
dec
jb
cmpl
fs
pusha
decl
mov
mov
out
push
or
xor
xchg
mov
lds
jmp
cld
out
and
int3
das
jl
lret
mov
mov
nop
pushf
cltd
xchg
fimull
aaa
xchg
mov
arpl
lock
push
insb
das
mov
jne
jle
xchg
jge
es
repz
shrb
mov
icebp
dec
ds
ja
cmp
inc
jo
or
outsl
lock
mov
add
xor
repz
repz
mov
and
and
scas
or
lods
sub
dec
flds
add
outsl
mov
mov
mov
inc
or
adc
xor
lahf
inc
mov
incl
bound
or
fstl
lock
dec
pop
in
xchg
adc
adc
in
cmc
roll
push
out
roll
mov
stos
xor
sbb
insl
js
jg
btsl
ljmp
and
jnp
inc
jmp
and
pop
fwait
mov
xor
idivl
push
bound
orl
xor
insl
test
out
jbe
cmpsb
mov
icebp
aam
arpl
inc
xchg
js
pop
int
fisttps
add
mov
lcall
push
mov
adc
daa
fists
mov
insl
lea
insb
outsl
xchg
rorl
jb
repnz
test
pusha
shlb
adc
cltd
loopne
xor
mov
fldenv
xchg
popa
mov
scas
test
inc
aas
jb
cld
decb
mov
mov
into
popa
daa
in
and
inc
jne
dec
test
or
push
fsubrs
fwait
in
dec
mov
cltd
rclb
sbb
pop
or
add
popf
sub
mov
fcomp
pushf
sub
xchg
nop
xchg
notb
scas
loop
push
shl
leave
enter
jle
test
fcomp
dec
and
xchg
into
pushf
out
in
daa
mov
cli
mov
out
pop
pop
test
or
fldl
testl
xchg
scas
insl
push
xchg
jp
dec
mov
xor
fs
imul
mov
xchg
lahf
sbb
and
cmp
leave
fsqrt
pusha
add
stc
xor
pop
dec
and
push
sub
leave
int3
xor
nop
sbb
jo
les
mov
into
repz
mov
jmp
pop
add
push
repnz
loop
xor
fidivrs
out
pop
pop
mov
fisubl
cmp
ss
inc
jne
call
push
ret
mov
inc
sbb
les
or
mov
push
pop
sti
add
xor
pusha
enter
sub
dec
cli
or
mov
mov
int
push
inc
mov
jno
mov
in
mov
pushf
jmp
aam
push
orb
mov
mov
xchg
mov
xorb
sti
sti
sbb
mov
out
test
and
push
mov
scas
xor
inc
sbb
in
nop
xchg
daa
cs
pop
push
andl
scas
mov
xchg
xchg
xchg
out
test
dec
into
pop
and
lods
inc
xor
jge
sbb
jge
inc
leave
ljmp
incb
dec
xor
xor
sub
mov
push
jae
dec
push
imul
fldcw
dec
mov
orl
hlt
movsb
nop
ret
out
jns
inc
ljmp
imul
xchg
pop
jp
lret
cmp
sbb
sbb
pusha
jae
ja,pt
int3
mov
xchg
and
pop
popf
push
ds
jbe
stc
in
xor
add
fisttpll
jle
test
cld
aas
ret
fisttps
ds
lock
mov
inc
and
roll
aaa
sahf
icebp
mov
and
xchg
adc
dec
push
sbb
cmp
shl
loop
fimull
xchg
dec
cmp
shll
lds
sbb
in
repz
xchg
cmp
and
sub
arpl
es
fstl
movsl
add
cmp
outsl
or
mov
pushf
cwtl
add
loop
and
mov
and
aaa
or
xchg
xchg
popf
sub
fucomip
adc
mov
sub
mov
xorl
push
lea
lock
cmpsb
inc
push
les
pop
xchg
cli
out
cmp
mov
ds
cmp
xor
mov
push
imul
test
aam
push
shll
leave
adc
pop
inc
cmp
rorb
jo
cwtl
cmpsb
fdivl
jle
sbb
adc
fnstsw
mov
iret
fbstp
iret
push
lret
pop
std
jmp
or
pop
lods
filds
or
adc
sbb
mov
sbb
pop
add
lock
sub
adc
or
dec
jge
mov
push
in
fidivrs
bound
add
lea
outsb
mov
in
sbbb
cmpsl
mov
add
jg
lea
mov
sub
fnsave
cmpsb
or
xor
mov
rcrb
orl
mov
scas
aam
or
xor
repnz
pushf
fdivrs
cld
mov
pop
aas
jbe
adc
mov
and
test
jp
push
mov
lds
enter
shlb
in
or
fs
adc
scas
loopne
cmp
mov
and
int
cmp
adc
test
pop
loopne
add
ficompl
iret
xor
enter
leave
popf
and
or
inc
fistps
mov
mov
das
mov
cwtl
mov
cmpsl
mov
xor
mov
add
mov
aad
add
lock
sbb
push
ljmp
mov
ret
leave
jo
bound
xchg
mov
push
outsl
cmp
jbe
push
xor
lods
inc
sbb
mov
loop
sbb
stc
push
scas
shrb
lods
jp
and
xor
repnz
sti
inc
mov
and
xor
inc
lret
sub
out
mov
add
pop
or
dec
testb
ret
inc
rcrl
add
test
adc
push
outsl
sub
adc
dec
stc
cmp
les
outsb
push
stc
sub
and
jbe
stos
xchg
testb
adc
xchg
aas
xchg
orb
cmc
jo
aas
inc
sub
or
push
mov
adc
test
cmpsb
xor
out
pop
std
pop
jle
lret
inc
cmpsb
xchg
mov
in
dec
imulb
and
rorb
jo
adc
mov
mov
xchg
fisttpl
xorb
lods
pop
shlb
sbb
andl
hlt
lods
pop
hlt
or
sbb
jno
adc
cld
and
sarb
pusha
neg
xchg
in
cwtl
cmovo
jbe
repnz
push
arpl
push
call
dec
daa
sub
push
mov
leave
cmpsb
jmp
in
addb
lods
jp
xchg
xor
xor
leave
dec
into
int3
lret
pop
jne
sub
mov
push
data16
test
dec
das
or
push
push
dec
cwtl
daa
iret
inc
push
rol
and
adc
push
push
cmp
add
cmp
sar
add
lea
sub
push
imul
and
gs
fwait
xorb
adcl
stc
xchg
push
sahf
subl
push
and
adc
shlb
loopne
mov
push
orb
xor
vmovhpd
inc
inc
mov
jns
gs
jge
int3
add
mov
test
xchg
data16
lock
inc
or
fmuls
mov
jae
sbb
loopne
loop
out
popf
stos
leave
sub
aaa
cmp
push
push
or
cltd
push
imul
dec
or
dec
arpl
stc
xchg
mov
pusha
insb
dec
inc
jnp
in
mov
jae
push
loop
mov
insb
mov
inc
aas
cmp
fdivrs
dec
arpl
push
push
push
iret
lea
dec
repnz
andb
in
pop
cmpl
mov
xor
sub
js
xchg
in
cmpsb
mov
xor
dec
hlt
sti
imul
pop
scas
int
cmpsb
cmp
int
aaa
mov
shll
xchg
jb
sbb
add
jmp
mov
mov
stos
shl
pop
test
daa
inc
jb
sbb
dec
jne
test
adc
jno
jns
xor
push
cmpsb
pop
push
cmp
ret
pop
dec
shlb
adc
sbb
imul
insb
pop
pop
xor
icebp
push
mov
out
mov
es
sub
jle
adc
xchg
adc
xchg
insl
outsb
mov
pop
xchg
dec
popa
jb
sahf
ja
inc
or
test
xor
xchg
arpl
mov
loope
lock
mov
lods
negb
sub
int
xchg
push
xor
rorb
push
lcall
out
sbb
test
adc
test
jb
jne
jg
mov
push
lea
das
sbb
fxch
jo
std
adc
movl
or
or
rorb
test
jg
mov
ficompl
adc
pop
dec
jl
xchg
dec
add
jg
jp
imul
push
jnp
sub
mov
addb
fistpl
mov
or
add
and
mov
push
fcomps
shrb
push
push
es
pop
mov
cli
les
ret
push
addr16
movups
enter
movsl
sbb
outsb
add
lcall
or
mov
pop
xchg
sbb
mov
xchg
push
jb
popa
mull
dec
mov
jno
add
inc
jl
cmp
fs
divb
ja
sbb
lcall
push
inc
or
or
jo
jnp
inc
jecxz
mov
pop
mov
stos
inc
adc
mov
data16
fmull
das
repz
fs
push
and
sub
mov
cmpsl
add
and
sub
test
add
cli
push
addr16
xchg
xchg
pop
movsb
fidivl
push
or
iret
subb
call
iret
xor
adc
sub
std
lahf
cmp
lret
cmp
jle
and
mov
das
jle
xor
out
lods
xor
cltd
mov
mov
and
out
mov
loopne
jge
loop
sub
in
lods
ljmp
jb
fs
xchg
lea
jns
pop
jo
ret
fwait
lea
mov
xchg
cld
xor
adc
sub
je
jg
inc
outsb
testl
cs
pop
push
outsl
arpl
mov
xor
outsl
sar
in
loopne
and
leave
cmpsl
dec
outsl
loope
sub
add
and
leave
addr16
pushf
sbb
push
cltd
adc
jl
lds
es
out
aad
inc
lods
fldcw
push
dec
fcompl
daa
mov
push
or
loop
and
ficoms
sub
xchg
cmc
fistpll
inc
jae
sbb
int
push
out
dec
sub
scas
jp
jno
nop
stos
or
mov
mov
mov
icebp
mov
mov
fucomip
pop
stc
in
and
dec
scas
shr
and
sub
popa
out
dec
jmp
and
test
cltd
repnz
or
xchg
test
xchg
test
lcall
ss
imull
cmp
push
add
dec
xor
jb
addl
nop
xor
repz
sub
aam
fnsave
adc
mov
xor
mov
sbb
mov
sar
mov
ljmp
mov
push
cmp
adc
inc
xor
or
dec
xchg
sub
push
xor
adc
adc
addr16
ffreep
lahf
clc
ss
fwait
sbb
push
stos
add
push
nop
ret
cmp
sub
inc
xrelease
sti
mov
jb
cmp
inc
mov
inc
pop
ja
pop
inc
sti
fimuls
fs
push
cwtl
pushf
or
mov
add
aam
shrl
sbb
xor
mov
and
bound
and
jnp
cmp
in
shr
pusha
pop
sbb
movmskps
fadds
cmpsb
dec
xchg
pop
xchg
roll
or
jmp
fdivrs
or
pop
inc
pop
lret
add
scas
xchg
pop
adc
or
push
lods
fimull
fsub
insb
inc
sub
movsl
adc
insb
sbb
xchg
mov
out
pusha
and
inc
loop
ret
rcll
addr16
iret
lcall
jo
cmpsl
jae
adc
aaa
push
into
das
movsl
test
out
es
in
rcrb
push
adc
ljmp
push
scas
repnz
insb
popa
pop
sbb
cmp
fsubrp
cmp
pop
push
call
push
test
test
sub
ret
adc
rorl
dec
jl
daa
dec
imul
repz
movsl
ja
inc
insl
add
jp
pcmpeqd
mov
and
in
or
jb
jecxz
and
lret
arpl
lock
pop
add
jl
ljmp
and
push
adc
cmp
mov
sub
mov
jl
addl
mov
std
imul
ljmp
pop
lahf
fisubl
push
xchg
scas
je,pn
mov
hlt
lea
out
push
arpl
arpl
in
jmp
leave
xchg
mov
lea
pop
sbb
jecxz
inc
dec
or
mov
push
pop
jl
ss
ljmp
fwait
cld
mov
push
aaa
cltd
jnp
lret
sbb
in
xor
aam
lret
and
or
push
stos
mov
inc
mov
jns
mov
out
push
inc
movl
mov
stos
mov
xor
xchg
xchg
xchg
and
mov
fdivrl
insb
sub
fldt
les
dec
movsb
popl
push
xlat
repnz
iret
pop
leave
fadds
aas
push
xchg
sbb
cmp
push
add
pop
dec
loop
rcrl
gs
nop
mov
ss
push
sysenter
xor
sbb
loope
dec
and
js
jns
pop
stc
sub
les
fwait
cltd
js
push
or
xor
stos
cmc
inc
lret
es
and
ljmp
dec
mov
mov
fmulp
popf
idivb
adcl
fcmovbe
mov
repnz
xchg
loope
push
cmc
add
lret
adcl
dec
push
in
cmpb
pop
mov
mov
dec
xor
lock
call
aas
mov
push
pop
sub
push
jp
mov
clc
aam
jno
inc
pop
push
xlat
fwait
adc
mov
fmul
adc
dec
mov
aas
inc
jo
dec
aam
mov
dec
cmp
adc
or
add
movsl
jne
cmp
fmull
outsl
xor
mov
add
sub
dec
and
add
shrl
outsb
mov
sahf
mov
ss
cmpsb
cld
inc
mov
sub
jmp
inc
stc
loope
mov
cli
push
push
cmp
sub
push
ljmp
pop
es
adc
mov
cmp
sbb
sbb
insl
sub
add
xor
out
pop
outsl
pushf
popf
or
cmp
xchg
push
flds
dec
xchg
pop
jnp
fadds
sbb
dec
les
pushf
incl
das
aas
jo
bound
pop
repz
jmp
or
add
jp
dec
mov
and
lds
sbb
testb
xchg
cmp
iret
incl
add
push
into
sub
mov
lahf
mov
adc
xlat
xchg
movsb
out
push
xchg
jne
sbb
int
inc
fildll
bound
dec
xchg
xchg
pop
ret
repnz
lret
scas
and
xlat
jmp
push
jns
push
subl
movsb
fisttpll
mov
cltd
add
mov
or
and
add
add
jmp
test
fnstcw
mov
or
jne,pt
pushf
xor
cld
ja
ret
adc
imul
outsl
push
and
mov
in
mov
mov
sbb
pmuludq
pop
add
inc
xchg
xlat
push
pop
or
xor
jecxz
sub
lods
sahf
mov
mov
into
xchg
adcb
push
lods
out
and
insb
sub
js
mov
or
nop
and
mov
rolb
decb
insb
mov
insl
inc
pop
or
mov
xor
and
in
shll
data16
cmp
and
push
imul
lds
mov
and
xchg
jo
clc
or
pop
jp
rorl
in
jmp
xorb
xchg
mov
cmp
mov
pusha
jb
loopne
inc
cmp
dec
das
add
dec
xchg
push
add
cld
inc
das
and
mov
sbb
ja
out
lea
lods
inc
ret
jno
push
mov
pop
xchg
cmpsl
sbb
dec
addb
lret
or
xchg
adc
jecxz
mov
inc
mov
stc
jns
test
and
das
or
xorl
mov
xor
mov
sbb
jb
adc
hlt
adc
adc
stc
rcrb
stos
aaa
jae
mov
lcall
pop
jle
in
test
cs
orb
outsb
jnp
imul
xor
dec
cmpsl
or
addr16
cmp
sub
push
mov
aaa
jle
test
pop
mov
lret
outsl
jnp
lahf
xorl
and
adc
das
and
ret
mov
gs
fiadds
loop
adc
xchg
or
add
loop
lea
fldl
xchg
mov
cli
mov
push
ja
ret
add
xor
ljmp
sti
loope
stos
loop
repnz
jbe
test
cltd
xor
clc
pusha
add
mov
pop
jmp
dec
jecxz
aad
push
ret
lret
adc
dec
xchg
test
adc
iret
scas
mov
cmp
imul
mov
adc
pop
jmp
inc
clc
add
std
loop
inc
mov
pop
fsubrs
sbb
iret
jmp
loope
adc
mov
inc
cmpsb
daa
popf
pop
hlt
add
jo
cmp
pop
add
mov
mov
in
scas
xor
mov
lcall
inc
and
pop
fsubrs
bound
cs
in
dec
push
mov
mov
cmpsb
lret
jl
clc
stos
jno
xor
cs
xchg
add
pop
xchg
enter
ja
mov
ds
mov
pop
lahf
imul
data16
iret
adc
repz
inc
mov
fnstsw
dec
daa
sti
fiadds
gs
or
xchg
gs
or
inc
or
pop
popa
cmp
add
push
cltd
xor
mov
sbb
scas
cmpsb
rol
sti
jbe
js
pop
ljmp
adc
sbb
sbb
mov
mov
in
es
mov
pusha
dec
sbb
shll
adc
mov
pop
jae
sub
sub
bound
sub
push
or
mov
or
add
dec
sbb
sbb
shr
out
xor
push
out
frstor
mov
inc
inc
popf
into
ret
jb
lcall
push
in
add
jge
das
testl
jb
aaa
jae
mov
adc
mov
fmuls
inc
dec
cmpsb
push
jo
pop
pusha
aam
or
mov
test
mov
jg
dec
stos
adc
test
scas
adc
aad
cltd
sub
cmp
xor
mov
fsubl
lods
ja
sub
mov
mov
inc
xchg
or
jo
sahf
dec
mov
movl
xor
xchg
jns
aaa
sub
push
mov
std
sub
mov
mov
sbb
xor
sbb
mov
adc
jnp
scas
or
orb
fidivrl
fldl
lahf
lods
push
jmp
mov
xlat
scas
test
cli
pop
push
das
dec
jecxz
xchg
rcl
rclb
les
sub
add
add
add
or
dec
adcb
dec
cli
popf
xor
out
mov
lock
sti
adc
stos
mov
or
out
lret
and
jno
jns
push
adc
sbb
mov
cmp
mov
xchg
push
fcomi
movsl
inc
mov
xor
rcl
or
mov
xchg
mov
shlb
mov
jno
imul
int
jmp
data16
lcall
mov
in
loop
mov
mov
stos
rcrb
addr16
loopne
test
sbb
rolb
cmpsb
ret
ret
adc
push
repnz
stos
ss
lret
lret
cmc
xor
mov
sahf
testl
inc
cwtl
cwtl
xchg
inc
mov
dec
fisubrl
lcall
and
xchg
aad
push
mov
mov
and
fimull
inc
orb
jmp
xor
push
push
and
pushl
hlt
jb
out
or
push
scas
sbb
dec
dec
int
sar
pop
pusha
sub
push
pop
insb
testb
mov
lcall
dec
xchg
mov
mov
adc
push
out
push
rorb
jecxz
adc
pop
cmpsb
or
sbb
popf
popa
pop
insb
adc
sbb
xor
sub
pop
ret
shrb
int3
jb
imul
scas
stc
ret
sti
stos
xor
or
and
ret
je
jno
sarb
cmp
push
inc
mov
lods
pop
jne
movsl
mov
mov
or
cwtl
std
push
dec
mov
cmp
jmp
xor
mov
mov
mov
push
dec
mov
call
sbb
cmp
jb
loopne
sbb
stc
xor
orb
xor
sbb
jns
add
xchg
repnz
test
sub
sbb
pop
cwtl
or
out
dec
loope
xor
mov
and
popf
fnstenv
and
dec
mov
inc
in
mov
in
sbb
repz
int
mov
test
notb
dec
iret
in
rcl
xlat
loope
sub
or
mov
repnz
jns
mov
sarb
nop
jae
shl
stos
sahf
pop
push
adc
add
aas
push
xchg
or
adc
and
std
mov
dec
dec
arpl
push
leave
xlat
sahf
ss
add
mov
add
jne
popa
pop
iret
jno
into
lret
inc
xor
cmpb
loopne
dec
add
inc
adc
jo
out
xchg
js
lea
dec
lods
pop
push
stos
xchg
shll
xor
decb
adc
or
cwtl
dec
cli
and
dec
mov
out
dec
inc
cmp
pop
aas
sub
add
bound
push
movsl
mov
xchg
sub
pop
mov
push
sub
aaa
push
das
adc
cmp
iret
insl
mov
fistl
mov
in
and
adc
xchg
xchg
stos
shlb
xchg
rolb
cs
pop
cmp
mov
sbb
sub
xorl
cmc
insb
cmc
pop
mov
inc
cmp
pusha
jo
cmp
jle
and
jmp
lret
xchg
mov
jp
jns
mov
sub
jno
iret
out
jmp
out
push
push
flds
stos
xor
fistps
or
unpckhps
xor
scas
adc
and
lret
inc
enter
push
icebp
test
mov
addl
pop
stos
jbe
icebp
inc
sub
aaa
sbb
fiadds
lea
jle
in
adc
cs
pop
ss
adc
cld
in
or
mov
mov
adcb
mov
lcall
int3
sbb
je
cmp
jno
sub
and
sbb
add
sbb
pop
adcl
cmpl
add
push
cld
pop
push
lahf
sbb
divl
into
fs
push
aas
imul
pushf
test
inc
cltd
sbb
adc
stos
mov
ret
mov
or
inc
pop
or
faddp
iret
xchg
mov
and
pop
add
out
cmp
cmp
jae
pop
jge
sti
sub
cmp
add
inc
or
and
lods
nop
mov
xorl
movsl
push
push
stc
xchg
adc
cmp
aam
pop
addr16
cmp
outsl
sbb
lea
or
mov
ljmp
cwtl
lahf
and
pop
flds
mov
test
addr16
adc
dec
inc
xor
xchg
push
cwtl
out
cmp
daa
cli
ficoml
ljmp
mov
inc
pop
or
push
mov
icebp
push
dec
fdivl
stos
mov
add
mov
hlt
mov
mov
pop
sub
inc
in
rclb
and
push
mov
and
mov
stc
xchg
jno
mov
add
mov
cmp
cs
popf
sub
loopne
lret
or
inc
mov
jbe
push
inc
mov
das
rcr
sub
push
out
adc
test
ds
arpl
dec
js
jb
xor
push
mov
jno
dec
adc
fstpl
nop
shl
xor
out
sub
and
xor
dec
clc
jp
push
test
cld
pop
inc
loop
cwtl
jb
sbb
adc
shlb
test
cwtl
dec
sar
jle
dec
enter
xchg
subl
nop
jp
add
pusha
shlb
adc
mov
adc
cmp
jmp
jle
inc
push
inc
mov
test
inc
add
xchg
call
cltd
sbb
out
sub
btr
jl
mov
imul
cli
and
mov
add
jnp
pop
mulb
jle
add
icebp
imul
insb
outsl
adc
imul
inc
and
divb
push
call
or
dec
sbb
mov
xor
repnz
dec
movsl
pop
test
add
scas
jae
inc
cmpsl
loop
shll
jmp
andb
hlt
mov
xchg
sub
jmp
pop
mov
push
xorb
mov
mov
outsb
jnp
adc
imul
imul
imull
imul
ja
cmp
pusha
sbb
dec
lret
jge
xchg
jb
arpl
inc
repnz
pop
lcall
mov
pop
xor
dec
dec
pop
out
push
loop
testb
aas
xor
push
xchg
and
sti
pop
or
mov
movsl
jmp
cwtl
sub
add
popf
pop
daa
inc
jnp
pop
scas
jnp
xchg
fcomps
std
jmp
sbb
jle
adc
cmp
or
jge
push
iret
cmpsl
mov
sbb
add
js
xchg
cmp
push
jnp
aam
mov
cwtl
mov
in
mov
imul
sub
test
or
lds
sahf
stos
faddl
scas
add
ds
jbe
inc
shl
adc
lds
pushf
xorb
and
mov
jbe
sbb
pusha
cmc
pop
sub
pusha
sub
test
nop
dec
les
sub
arpl
fcmovu
cld
or
adc
cmpsl
dec
and
add
aad
andb
dec
aas
jne
xor
sti
ret
cmpsb
add
jne
fimull
mov
push
adc
xchg
pop
fidivs
jmp
lcall
outsl
add
dec
cmp
outsl
mov
call
inc
xlat
aam
repz
adc
sub
cli
xchg
adc
cli
loope
popf
jns
loope,pt
ret
testl
ret
in
icebp
mov
cmpb
or
lcall
lret
icebp
adc
cmc
sub
addl
jmp
lock
adc
push
sbb
push
leave
mov
mov
test
repnz
mov
test
in
cwtl
pop
mov
or
fs
lea
lea
aas
loope,pt
add
hlt
sub
shll
jne
push
or
fs
or
fstl
or
adc
in
or
jnp
dec
xchg
pop
mov
daa
add
push
bound
jo
sbb
push
gs
mov
add
shl
add
sar
mov
test
cmpsl
lods
jo
xor
lea
in
cld
xor
fidivs
aaa
pop
das
cmp
cli
mov
cmc
pop
sbb
insb
jae
pop
xchg
add
insb
adc
xchg
sub
and
pushf
add
jae
jb
push
pop
fimull
pop
fmull
xchg
sti
sbb
lcall
xchg
mov
and
sbb
xchg
lcall
jne
es
pusha
nop
stos
sbb
push
jns
xchg
cmc
jns
jmp
jl
dec
je
loope
pop
nop
movsl
cmp
cmp
jmp
mov
stos
cmp
and
jp
or
or
jns
and
and
into
jo
xchg
lods
das
and
out
jo
add
popa
xchg
popf
xchg
inc
xor
or
jne
idivl
inc
enter
cltd
and
mov
lods
mov
clc
adc
ljmp
dec
sbb
mov
enter
cmp
xor
mov
push
js
dec
idivb
pop
lods
pcmpeqw
mov
jl
mov
push
or
push
icebp
jge
insl
mov
sbb
mov
into
lods
mov
shl
lods
adc
jmp
rcr
sbb
jo
mov
ror
jae
pop
faddl
mov
mov
jo
lea
push
pop
cld
cmpsb
cmp
mov
dec
test
mov
dec
imul
add
pop
movsb
shrb
es
xchg
stos
sub
sbb
test
mov
inc
add
lods
xor
out
add
iret
sbb
sbb
stos
mov
out
cltd
gs
imul
gs
addr16
popf
loope
cmp
sarl
addr16
sbb
shlb
jl
imul
sub
cmp
out
mov
mov
cmp
dec
dec
divl
iret
lea
inc
nop
sbb
mov
ficomps
mov
aam
or
cmpsl
push
and
sub
dec
xchg
and
mov
or
mov
in
mov
mov
and
cmp
xor
int3
jb
std
or
mov
icebp
loopne
popf
or
pop
pop
lds
xchg
fsubs
imul
repz
shll
pusha
sbb
add
inc
mov
adc
push
les
push
loope
sub
push
rolb
gs
pop
mov
push
test
lea
out
loope
pop
pop
mov
xchg
lods
mov
pushf
mov
leave
std
jno
or
cmp
mov
or
ret
pop
mov
pop
in
push
cs
stc
test
xlat
or
fsubrl
ja
xlat
push
lret
mov
shlb
mov
scas
inc
scas
xor
push
cli
adc
test
sbbb
add
mov
mov
outsl
stos
scas
sarl
push
cltd
inc
inc
aam
dec
or
mov
rorl
inc
fs
aad
cmp
ror
jg
out
lods
jg
mov
test
or
sahf
jmp
stc
icebp
test
in
in
lods
sti
add
and
xchg
mov
jl
mov
xor
adc
jecxz,pt
cmp
cs
sbb
xor
stos
shlb
xor
out
aas
mov
lret
sub
idivl
andb
add
dec
jge
imul
push
outsb
ljmp
in
push
cmove
ljmp
out
sbb
enter
add
cmp
je
test
sbb
es
aas
or
repnz
xchg
cmpsb
movsl
push
int3
mov
xchg
cwtl
inc
or
push
mov
sub
outsl
jmp
testl
out
dec
cli
orl
add
aaa
std
xchg
pop
cld
dec
fisttpll
daa
xor
insb
lret
js
rclb
and
fisttps
jmp
and
mov
sti
cmpsb
mov
mov
cmp
mov
add
xchg
mov
xchg
insl
dec
xchg
mov
insl
out
push
aam
add
fninit
xchg
sub
add
sbb
lea
inc
cltd
or
push
faddl
rcrb
push
fs
lret
push
std
push
or
inc
fcoms
adc
neg
push
in
jbe
jnp
scas
mov
daa
mov
adc
dec
add
xchg
lods
sbb
pop
mov
cmp
das
sbb
pushf
mov
xchg
clc
dec
mov
mov
rolb
xor
sbb
stc
enter
add
rolb
pop
loope
iret
and
call
inc
inc
xlat
dec
test
mov
add
mov
fs
jbe
shrl
jbe
daa
cmpsb
ret
push
in
lret
inc
test
dec
movsl
cs
je
lods
lcall
xchg
mov
cmp
inc
add
and
test
sbb
mov
cld
pop
jle
scas
cs
std
sbb
rclb
pop
cmp
insb
jb
xchg
mov
loop
sti
adc
cltd
sub
and
mov
enter
dec
mov
scas
cmp
and
mov
mov
adc
or
inc
jmp
daa
outsl
sbb
inc
insl
in
xor
xchg
or
xlat
sti
xchg
xor
push
icebp
sti
cwtl
and
xchg
pop
dec
add
push
fdivrp
adc
mov
pop
ret
jg
sbb
daa
lods
int
fcoms
aas
xor
test
in
notb
movsb
mov
mov
stos
outsb
or
gs
push
popf
int3
and
and
pop
cmp
jp
jmp
adc
or
cmp
cmpsb
hlt
lea
mov
mov
arpl
xchg
ds
mov
jecxz
cmp
std
sbb
daa
push
lahf
and
in
je
stc
pop
ljmp
adc
enter
push
sbbl
push
lret
mov
push
cmpsb
xchg
sti
add
jmp
mov
inc
ss
in
lcall
popf
jno
xchg
push
fwait
pop
cmpsb
push
loop
push
shll
pop
std
aas
lods
xchg
sbb
sbbb
jmp
and
sbb
hlt
sahf
les
sbb
out
xor
movsb
ss
int3
mov
jnp
scas
sbb
mov
sub
mov
repnz
pop
icebp
push
mov
sbb
ret
push
cmc
outsl
orl
cmp
dec
mov
cmpsb
scas
bound
adc
out
pop
jne
ljmp
int3
pop
and
or
test
jne
daa
push
repz
adc
dec
fnstcw
outsb
es
insb
scas
xchg
test
test
mov
mov
into
mov
mov
ja
rorl
push
dec
push
adc
adc
leave
cmc
add
xchg
movsl
fs
mov
mov
xchg
or
rclb
jns
jnp
mov
jb
adcb
popf
std
rcl
xchg
mov
sbb
or
jle
pop
sbb
jp
pop
dec
inc
xor
imul
out
xchg
notb
std
pusha
xlat
into
scas
out
xchg
leave
out
shrl
mov
xor
push
repnz
insb
jp
mov
push
xchg
xchg
add
push
rolb
lret
inc
std
xlat
mov
stos
push
pusha
jae
test
fmul
ja
aam
test
fcoml
push
jae
loopne
and
fbld
and
mov
int
mov
mov
inc
enter
jmp
aas
insb
xlat
add
inc
pop
andl
inc
lds
mov
ja
mov
sbb
std
int3
and
jnp
mov
and
lcall
pop
mov
xchg
ret
js
push
push
dec
xor
inc
insb
imul
inc
fidivrl
sahf
and
lds
and
mov
into
dec
jb
inc
lds
adc
dec
or
sub
rcrb
lods
mov
in
ja
sbb
inc
add
pop
fdivs
and
xchg
push
mov
ficompl
js
or
ss
inc
repz
sbbl
sbb
sarl
adc
push
mov
cld
mov
in
push
sbb
mov
dec
mov
dec
add
sub
gs
cmp
gs
inc
mov
push
mov
pop
adc
adc
frstor
fistl
sub
pop
arpl
cli
cmp
pop
cmovle
aam
in
jb
insb
add
xchg
lods
icebp
js
je
in
mov
jnp
pop
out
lcall
cwtl
or
mov
pusha
mov
in
in
push
ret
nop
je
mov
xchg
mov
cltd
push
out
xor
xchg
pop
frstor
pop
gs
ret
scas
cmp
stos
pop
inc
in
inc
out
or
jg
xchg
testl
or
orb
rorb
minps
adc
int3
test
add
test
pop
jns
mov
xor
mov
cmpsl
dec
adc
cs
loopne
pushf
mov
jmp
lock
inc
movsl
in
sahf
outsb
xor
sub
pop
dec
mov
mov
push
pop
pop
sbb
lahf
cmp
push
arpl
insb
das
cmc
push
mov
shrl
call
dec
ljmp
shlb
sub
mov
xor
mov
inc
aam
push
mov
pop
in
mov
popf
push
mov
dec
cmpsl
ja
leave
jno
mov
mov
iret
mov
cmp
cmc
xor
aaa
dec
notl
mov
adc
ja
out
mov
or
pop
ljmp
test
ljmp
sub
pop
push
mov
scas
les
lcall
fwait
and
inc
push
mov
int
pop
or
out
mov
test
mov
xor
push
mov
shrl
sbb
sub
mov
pop
mov
js
jmp
imul
or
sbb
jle
ret
sbb
or
or
sbb
movsl
xor
std
out
mov
pop
dec
push
mov
test
ret
aad
repnz
dec
insl
lret
xlat
mov
bound
ret
leave
lods
or
jg
or
cmp
cmc
std
out
jnp
jg
fs
daa
mov
xor
cmp
sahf
sub
lea
mov
out
test
push
mov
push
outsl
jo
adc
jecxz
pop
pop
jo
cltd
insl
xchg
xchg
fistl
dec
or
mov
fbld
aad
inc
pop
xchg
xor
pop
pop
movsl
fstps
sbb
das
jnp
pop
pop
daa
daa
adc
sub
scas
push
cld
xchg
sub
lods
je
mov
xchg
sbb
inc
testl
mov
stos
add
jmp
std
int3
ret
mov
inc
movsl
js
lea
test
rdmsr
dec
sti
inc
and
jp
xchg
mov
stc
test
sub
fisubs
cmpsl
pushf
shll
pop
cmp
jbe
in
rcrl
decl
add
stos
call
cmp
or
xchg
shl
call
les
and
mov
push
pop
dec
outsb
shrb
pop
dec
xor
push
and
xlat
and
adc
mov
and
push
jnp
stos
xor
inc
mov
mov
sub
xchg
mov
pop
push
data16
or
pushf
pushf
subl
fldl
cmp
inc
daa
push
outsl
fs
outsl
xor
dec
mov
rcrb
popf
sbb
add
insl
gs
jno
adc
xchg
mov
clc
add
out
fidivs
testb
push
inc
pop
in
xor
push
adc
sbb
or
mov
lods
cltd
xchg
inc
or
rcr
in
xchg
je
add
std
addr16
or
lret
xor
and
addr16
cmp
inc
mov
fsubl
std
popa
xchg
mov
pop
cltd
mov
or
mov
ret
xlat
jae
ret
mov
mov
cmp
in
adc
loop
arpl
stos
shrl
xchg
mov
adc
loop
mov
jno
sti
push
lock
xchg
outsb
dec
sar
loop
inc
inc
stos
sbb
mov
outsb
shll
xor
dec
push
xor
out
jnp
loope
mov
cwtl
gs
cmc
out
xorb
pop
mov
data16
xorb
rolb
repnz
fmul
xchg
test
loop
mov
popf
and
jmp
outsl
dec
cmpsl
and
mov
sub
cli
aaa
mov
pop
es
add
sti
cmp
loopne
cmpsl
or
mov
mov
dec
iret
pop
adcl
add
pop
loop
or
sbb
jle
lcall
int3
push
je
repnz
mov
icebp
mov
adc
mov
push
adc
sbb
mov
icebp
pusha
movsb
hlt
mov
xor
mov
push
xor
iret
or
mov
loope
mov
test
shrb
adc
test
mov
push
xchg
sbb
lods
xor
pop
mov
mov
xor
jmp
adc
jbe
jle
mov
mov
lret
xchg
inc
aam
xchg
sahf
shrl
pop
jg
scas
jmp
cmpsb
pushf
fldl
cltd
or
mov
sbb
adc
mov
inc
dec
lahf
das
lahf
add
mov
les
loop
decb
cmpsl
push
cmp
sub
leave
adc
in
arpl
push
and
jp
gs
cli
dec
fcoml
stc
and
movsl
movsl
mov
dec
es
fdiv
pop
js
pop
cltd
jp
lahf
std
jl
xor
in
insl
pop
ds
inc
pop
mov
inc
push
add
jmp
xchg
sarb
jno
cmp
fisubs
aas
jae
mov
jle
std
shlb
jne
mov
sar
jecxz
stc
pop
adc
xchg
sbb
sbb
xchg
in
in
lcall
sbb
jns
dec
jae
sub
sub
out
ror
xchg
inc
cld
inc
mov
pop
mov
add
andl
mov
xor
push
addr16
push
mov
out
bound
inc
rcrb
xor
shlb
mov
push
hlt
out
cmp
and
lea
dec
xor
inc
cld
pop
ret
pusha
add
leave
imul
loope
jns
rsm
push
enter
fmull
mov
xchg
mov
xchg
aaa
mov
mov
xor
dec
js
sbb
adc
bound
or
int
jmp
ja
dec
mov
in
mov
neg
dec
pop
jne
cmpsl
and
ss
out
adc
xchg
sti
inc
mov
mov
push
mov
cltd
or
bound
xchg
add
pop
xor
or
rolb
jae
imul
jmp
jecxz
inc
push
aad
cld
push
movsb
in
lods
sbb
iret
jg
jl
dec
cmpsb
add
call
leave
imul
cmp
push
sub
jecxz
xrelease
lcall
jno
gs
xlat
call
je
jbe
divb
add
insb
cli
add
jo
aaa
push
add
cs
mov
push
dec
mov
sbb
imulb
inc
js
mov
dec
iret
test
movsb
inc
in
xor
jl
or
aad
pop
je
movsl
repz
adc
pop
loopne
enter
call
mov
insl
rcl
or
mov
aaa
or
add
jo
arpl
cwtl
dec
xchg
add
jg
pop
fsubrl
add
out
pop
pop
dec
lock
popf
dec
mov
push
loopne
and
mov
ss
in
mov
out
addr16
sahf
lret
sub
mov
cmp
stos
shll
shr
jle
sub
mov
push
mov
aas
push
and
inc
mov
mov
pop
dec
inc
pusha
rolb
jg,pt
pop
aad
mov
cmc
out
pushf
cmc
rorb
dec
or
xor
addr16
sub
lcall
loop
test
cli
pop
mov
sti
mov
movsl
xchg
jmp
and
mov
inc
add
or
adc
test
jmp
sub
hlt
jae
rcll
fwait
stos
add
aam
stos
sbb
pop
ficompl
push
mov
jmp
rorw
int
pop
iret
or
jno
pushf
mov
jl
cmp
lock
mov
dec
dec
imul
aaa
les
cmp
cmpsl
cmp
loope
rcll
lds
sub
jb
jns
sub
mov
lods
jg
enter
mov
dec
mov
orb
push
daa
push
dec
cmp
push
and
leave
cmc
loope
loopne
sbb
dec
mov
cld
insl
mov
sbb
cmp
enter
cmp
add
test
xchg
jo
pop
in
xlat
in
pop
jge
aam
adcl
inc
ret
jae
cltd
sbb
scas
push
movsl
in
sahf
aas
outsb
fnsave
fdivp
in
mov
jne
jmp
pushf
rclb
inc
mov
push
jae
into
insb
ja
cmp
or
mov
orb
dec
jne
mov
and
mov
push
adc
cli
pop
pop
movsl
sub
ret
shlb
or
pop
mov
out
cmp
xchg
xchg
std
shll
ret
loope
cld
cmp
in
sub
pop
sub
sbb
push
push
lock
rol
int3
or
mov
jns
inc
shll
stos
sub
xchg
stos
jae
push
outsl
jecxz
jg
push
pop
sub
xor
addl
or
imulb
and
jno
pop
iret
and
cmp
push
xor
fadds
adc
in
xchg
mov
dec
push
daa
xchg
mov
adc
cmc
pusha
jns
dec
push
mov
mov
cwtl
or
mov
ret
xor
mov
leave
sub
sub
add
mov
movq
jno
sub
test
push
loopne
sbb
not
ljmp
mov
mov
mov
addr16
in
pop
ret
mov
mov
or
and
inc
jae
mov
out
or
mov
push
sub
loope
insb
test
add
push
adc
ljmp
cld
and
ds
pop
mov
arpl
dec
inc
jnp
xchg
icebp
popf
je
fimull
dec
push
mov
jbe
fcoms
jb
movsl
shl
push
pusha
push
or
nop
ds
js
scas
rolb
push
in
clc
test
cmp
xchg
sub
adc
loop
lea
push
xor
pop
fs
mov
xchg
sbb
int
andl
das
inc
cli
inc
ret
jmp
repnz
shlb
jb
xchg
xchg
sbb
ja
inc
sub
je
xchg
aam
test
in
sub
xor
mov
call
jp
jp
in
test
jnp
and
jno
cld
ficoml
pop
mov
repz
mov
push
ret
add
fdiv
mov
mov
bound
mov
sti
xchg
or
mov
dec
stc
nop
clc
aaa
sbb
sbb
sarl
movsb
mov
cmpsl
addr16
mov
fucomip
incl
cmc
mov
jo
arpl
jnp
movsb
rcrb
and
mov
xchg
xlat
loopne
loop
sbb
cmp
cmp
movsl
mov
add
loopw
out
jg,pt
inc
adc
ja
xchg
dec
and
mov
pop
xchg
fs
push
stos
mov
xchg
xor
ficompl
dec
sti
mov
lret
dec
in
std
popf
inc
cmp
mov
push
call
or
push
jge
cmp
std
sti
int
and
xchg
mov
push
popf
fs
mov
aas
cmpsb
dec
jnp
movsl
aam
popa
inc
rcl
lds
dec
pop
loope
xor
test
jb
scas
aad
pop
xchg
xchg
mov
dec
in
jne
bound
inc
ret
push
stos
sahf
adc
dec
mov
push
mov
loop
dec
mov
sbb
push
div
sahf
fiaddl
pop
jb
and
lods
pop
push
xor
pop
pop
cmp
adc
inc
call
mov
xchg
dec
sub
pop
mov
cmp
lahf
adc
testb
pusha
iret
sbb
mov
and
movsl
aas
mov
xchg
xchg
pusha
or
jmp
and
jne
sub
fcoms
dec
adc
popf
test
pop
in
leave
shlb
xchg
xchg
or
outsl
pusha
shll
sub
cs
lods
inc
stos
adcb
jg
mov
inc
lcall
orl
xchg
test
xor
xchg
clc
push
repnz
pop
ljmp
add
add
push
lds
sub
scas
mov
outsl
rcrl
cli
cld
jge
ljmp
mov
ret
out
sub
or
fcoms
sbb
add
iret
and
int
add
mov
sbb
mov
dec
aam
rorb
or
or
xlat
aam
stc
mov
mov
aam
xchg
daa
out
sahf
insl
push
sbb
mov
mov
into
pop
ds
mov
jp
pop
or
cmp
test
adc
inc
push
jl
cmp
mov
pop
push
test
rorl
pop
fsubl
xlat
lcall
pop
outsl
xchg
cs
arpl
push
pop
pop
inc
in
rcrb
xrelease
or
pop
mov
cmp
movsl
add
ljmp
movl
leave
ljmp
jo
push
push
pop
shrl
aad
xor
jg
dec
or
ljmp
in
adc
mov
mov
fucomi
and
xchg
sub
insl
and
gs
ds
imul
and
into
out
add
pop
andb
in
push
push
xchg
xor
cmp
adc
sub
sbb
clc
movsl
mov
lahf
clc
jbe
das
movsb
add
push
fcmovbe
les
and
fisubl
cmp
mov
push
outsb
popf
dec
xor
dec
fld
mov
js
mov
jp
xor
or
mov
mov
jmp
stos
push
xchg
pop
mov
cmp
aam
fdivrs
push
sahf
push
lock
dec
ds
push
fcom
mov
mov
outsl
test
out
sbb
sub
lods
pusha
insl
mov
adc
mov
lds
in
jge
or
cs
ret
mov
jbe
adc
sbb
int3
aam
jo
loop
js
dec
lds
xchg
dec
sbb
cmp
idiv
adc
sub
clc
scas
in
push
mov
cmp
sti
sbb
dec
fbld
clc
mov
ss
sbb
adc
fldcw
in
sub
pop
dec
pusha
addr16
cmp
fiadds
and
mov
jne
cmc
es
enter
sub
rcr
int3
test
mov
cmp
outsb
and
mov
fcmovne
addr16
jno
mov
jo
ja
mov
test
cmp
fs
mov
inc
subb
scas
out
sub
inc
push
fnsave
test
sbb
push
add
push
aam
jmp
mov
clc
mov
and
cmp
mov
mov
inc
xor
or
lahf
push
test
pop
cmp
lahf
pop
push
iret
cli
cmp
xchg
stc
jg
sbb
push
das
xor
inc
imul
movsb
ror
aaa
xchg
mov
adc
push
dec
xchg
jmp
pop
nop
out
and
in
mov
int3
push
ds
mov
insl
decb
jne
jp
inc
pop
adc
test
jne
aaa
lds
adcb
pop
sti
inc
mov
mov
xor
insb
lods
xchg
fisttpl
xchg
ret
fisubrs
ffreep
dec
jb
lahf
ror
fbstp
jmp
imul
call
adc
adc
mov
push
cli
mov
sub
or
aad
jp
jmp
push
push
push
xor
mov
inc
clc
nop
mov
add
jbe
movsb
loopne
in
and
add
cmp
sbb
add
enter
sub
adc
lea
xchg
mov
and
out
mov
icebp
pop
lods
dec
sbb
add
das
or
jl
cltd
je
cmpsl
lcall
jno
inc
ljmp
lcall
cltd
scas
data16
std
lods
pop
add
push
stc
cmp
pop
mov
mov
mov
out
or
sub
call
int3
repz
xlat
mov
pop
inc
inc
push
mov
dec
fldenv
cmp
jnp
jle
xchg
and
and
jl
xor
mov
mov
mov
aas
cli
xchg
dec
xor
mov
inc
cs
je
pcmpgtw
arpl
rol
or
push
cld
movsl
ds
inc
mov
hlt
or
stc
inc
cld
aaa
in
insb
cltd
pop
sbbb
sub
add
lods
mov
in
rcrl
aas
sarb
mov
push
xor
call
call
ficompl
mov
outsb
inc
in
int3
cmp
jecxz
lods
scas
push
int
xor
mov
xchg
les
lret
mov
test
lcall
imul
xchg
inc
mov
ret
xchg
imul
insb
das
pop
mov
or
sahf
push
jge
ret
mov
mov
push
cmp
data16
push
fcom
jmp
or
stc
cmp
lret
fstl
pusha
push
add
fucomp
outsb
rorl
add
loopne
dec
pop
cmp
inc
mov
adcl
insl
push
xchg
push
mov
adc
pusha
popl
push
add
scas
das
das
pop
daa
or
sub
xchg
lock
adc
cwtl
push
loop
cs
cli
sub
sbb
push
stc
adc
cmp
outsb
inc
jge
mov
push
movsl
sahf
roll
test
cmp
mov
xchg
sti
outsb
jmp
insl
ret
dec
lods
dec
and
sub
and
jo
insb
mov
inc
in
ret
popa
and
iret
js,pt
add
cmpsl
dec
mulb
addb
lds
mov
pop
cltd
jmp
xor
incl
movsb
and
mov
mov
cmp
dec
mov
jnp
push
mov
add
ret
jae
mov
cmc
pop
mov
jbe
popf
xchg
cmpsl
iret
cmp
loope
insl
sbb
addr16
test
jmp
sbb
subb
add
mov
ret
mov
add
xchg
xorl
xchg
dec
dec
stos
push
jb
and
sets
imul
add
xchg
mov
sbb
and
lahf
cmp
nop
mov
data16
dec
cmp
mov
lds
popl
lds
lahf
sbb
cmp
mov
push
loopne
insl
pop
mov
and
cltd
or
xchg
inc
xor
sbb
push
sub
hlt
xchg
xlat
in
xor
add
push
lcall
or
addl
push
sbb
adc
pushf
dec
cmp
pop
ss
mov
sbb
xlat
inc
aaa
xor
out
shll
mov
mov
insl
xlat
addr16
in
add
into
lahf
cmp
cmpsb
xchg
js
mov
jo
mov
call
fwait
in
mov
fsubrp
dec
push
imul
mov
insb
lea
mov
mov
lret
pop
sbb
and
in
pop
adc
or
pop
fldenv
aaa
mov
dec
ljmp
out
fsubr
jnp
cmp
pop
inc
mov
adc
dec
xor
pop
mov
push
xchg
mov
xchg
lret
dec
push
outsl
cmp
int
aam
cwtl
and
idivb
sbb
and
mov
sbb
cli
mov
mov
mov
cmp
insl
sub
sbb
mov
xchg
and
dec
mov
scas
sbb
sbb
pop
and
jb
out
insl
movsl
push
enter
enter
inc
jns
call
pop
repnz
mov
int3
cs
pusha
adc
int
push
pop
jmp
jecxz
aad
adc
lock
lahf
ret
inc
pop
xor
sbb
rcrb
and
cmp
inc
ror
into
aad
sbb
jecxz
mov
imul
fwait
sub
and
adc
xchg
pop
das
mov
mov
sbb
repnz
jo
fisttps
jle
jp
dec
call
mov
dec
sub
jnp
dec
mov
sbb
sub
mov
sub
icebp
jl
mov
ja
rcl
push
lahf
mov
adc
jge
inc
test
aas
add
ja
inc
cmp
lret
sbb
sbb
sub
mov
mov
daa
stos
mov
es
jb
push
push
pop
pop
inc
sbb
sub
or
sbb
test
pop
ret
add
jmp
imul
jmp
bound
dec
repz
jle
outsl
cmc
hlt
stos
and
add
push
adc
or
ja
cwtl
and
rorl
cmp
pop
mov
xlat
cwtl
sbb
mov
add
popf
cld
repnz
or
ss
mov
push
and
ss
bound
test
cmp
or
in
lcall
arpl
rorl
shl
sub
pusha
add
aam
mov
movswl
cmc
mov
ret
cld
frstor
lock
rolb
fisubs
sbb
xchg
hlt
push
jp
push
or
sbb
idiv
pop
repnz
rcl
fisttps
add
pop
adc
adc
orl
mov
lahf
push
mov
andb
add
or
rcll
icebp
jae
repz
faddp
int
repz
adc
dec
jle
arpl
adc
mov
stos
mov
jne
sbb
pop
imul
adc
mov
cmp
enter
in
mov
lods
cmpsl
mov
scas
sub
je
addb
lret
jecxz
lret
xlat
cmc
inc
xchg
add
orb
sub
andl
hlt
dec
aaa
mov
mov
push
lds
fbstp
dec
xchg
scas
pusha
push
add
sub
arpl
xor
pop
mov
pop
inc
call
mov
and
mov
mov
shlb
push
sahf
imul
pop
lods
sbb
rol
lods
dec
and
repz
pop
mov
sarl
lods
stos
jns
pushf
xor
sub
cld
icebp
pcmpeqb
leave
mov
sub
xor
gs
jno
cmpsl
je
inc
pop
mov
pop
jns
xchg
sub
ret
sbb
lds
js
icebp
mov
es
mov
push
loope
idivb
xor
addr16
push
sub
out
arpl
or
insb
outsl
mov
cmp
mov
xor
xchg
lock
jp
aam
int3
cmp
xor
into
dec
cmc
rcll
jecxz
incb
in
xor
test
insl
mov
push
xlat
jle
leave
sub
pop
jl
mov
mov
push
pop
popa
pusha
dec
out
add
lea
lea
xchg
mov
pushf
pop
fwait
in
aas
inc
cmpsl
xchg
fdiv
add
jno
arpl
inc
ja
mov
mov
mov
insl
cmpsb
xchg
push
push
sbb
sub
inc
in
jno
pop
jb
loopne
sub
repz
pusha
out
xor
mov
add
push
data16
ret
movsl
sarb
icebp
movsl
mov
int
ror
fistps
jne
xor
aad
cmpl
js
cmp
cmpsl
inc
int3
add
push
xchg
lds
mov
jne
adc
es
jmp
andl
pop
out
mov
pop
in
orl
add
jne
cmpsb
dec
lret
sbb
fiadds
mov
jo
notl
add
ret
movsl
clc
mov
and
jmp
ja
adc
inc
fld
and
jmp
cmp
mov
cmc
sahf
or
inc
pushf
jg
nop
xor
das
mov
stos
das
pop
inc
cltd
mov
shlw
dec
mov
sahf
mov
dec
out
jne
cwtl
fst
aam
pop
or
add
gs
aaa
mov
add
sbb
mov
mov
mov
sub
cmp
adc
stos
jb
cmp
pushl
pop
push
in
scas
inc
clc
mov
add
dec
mov
inc
ljmp
scas
call
pop
mulb
push
fadd
cmc
cmc
mov
daa
or
xor
lea
sahf
cmpsb
repz
maskmovq
idivl
fildl
scas
pop
xchg
je
lea
mov
inc
sarl
sub
lea
xchg
testb
test
push
pusha
jmp
sub
js
frstor
fwait
shll
arpl
sbb
stos
inc
push
sub
mov
aas
out
and
enter
mov
nop
arpl
test
iret
push
cld
enter
pop
outsl
add
lods
pop
xchg
push
iret
jle
sub
ret
leave
dec
pop
pop
cmp
xor
adc
mov
aam
enter
mov
fisubrl
pop
mul
inc
jle
cmp
bound
adc
mov
bound
fldl
cld
xchg
sti
cmpl
push
testb
push
aas
mov
dec
xor
mov
stos
mov
pop
add
cmpsl
and
mov
imul
mov
test
or
pop
sub
in
sbb
scas
mov
std
xchg
je
rcrb
mov
ret
frstor
add
insb
cmpsb
aaa
addr16
scas
lret
inc
mov
fdivr
std
sahf
imulb
add
push
and
and
or
out
mov
mov
sbb
in
aas
cmc
aaa
aas
adc
dec
notb
daa
fists
int3
hlt
js
mov
shrb
lcall
add
pop
cwtl
sbb
testb
ss
push
jg
pop
push
adc
pop
mov
inc
gs
fisttpl
xor
xchg
insb
mov
lret
pop
popf
jno
adc
adc
js
push
lods
cmp
aaa
rorb
int3
jmp
add
icebp
out
fdivl
jp
test
push
enter
add
push
and
outsb
pop
repnz
ss
pop
fdivl
push
js
dec
testl
stc
enter
mov
shll
push
mov
inc
mov
push
fidivs
rcr
into
jns
jmp
sub
fsub
pushf
stos
xchg
sub
insb
add
or
arpl
cmpsl
mov
mov
test
jg
and
inc
lds
push
pushf
ret
cmp
rorl
test
outsb
or
pop
je
daa
ja
xor
daa
jp
frndint
mov
jecxz
aaa
ja
popf
hlt
les
xchg
das
outsl
cwtl
fisubrl
hlt
mov
mov
pop
fldt
loope
dec
jl
insb
adc
mov
les
sub
scas
mov
dec
lahf
adc
adc
addl
data16
mov
adc
jb
es
adc
mov
xor
push
mov
fwait
stc
psrlw
insb
add
xorl
enter
xlat
fucomp
and
mov
lods
dec
cmp
cwtl
stos
popl
push
stc
shlb
cli
cmpsb
ret
pop
push
jns
push
outsb
enter
mov
scas
mov
xor
fxch
icebp
dec
into
in
sti
jmp
outsb
mov
fwait
mov
push
aam
daa
js
pusha
fcompl
pop
loopne
or
adc
negb
push
jb
xchg
pop
clc
mov
sbb
mov
pop
pop
rorb
and
push
test
inc
dec
xor
cmp
mov
popa
int3
out
xor
cmp
adc
aaa
dec
test
lcall
imul
dec
jmp
movntq
push
xor
pop
mov
adc
repz
mov
imul
xchg
sub
push
push
mov
push
and
jge
xchg
mov
add
sahf
rcrb
sti
add
bound
ljmp
js
sub
sbb
adc
in
cmpsl
inc
mov
shr
cmp
sbb
movsb
in
inc
mov
imul
xchg
add
jmp
mov
pop
xchg
andl
ljmp
pop
aad
inc
ss
push
inc
mov
rorb
aam
or
and
sti
pop
pop
xchg
repz
xor
jae
dec
adc
cmpsl
xlat
les
test
xor
imul
data16
pushf
mov
lcall
subb
cmp
or
push
dec
pop
xchg
pop
xor
sbb
ret
int
xchg
push
jle
int3
ljmp
loop
cmp
xor
add
sti
cmpl
das
test
ljmp
mov
rcrb
hlt
rdpmc
xchg
mov
add
pop
mov
in
int
sbb
dec
lcall
cwtl
lods
push
icebp
roll
push
or
add
and
dec
fiaddl
push
mov
mov
pushf
loope
xchg
or
dec
pop
jmp
int3
mov
cld
in
push
push
xchg
rcl
inc
mov
dec
adc
fmull
lods
test
jge
call
lret
jae
hlt
or
div
mov
xchg
xchg
mov
movsb
add
cwtl
loop
inc
loope
lret
pushf
adc
dec
sbb
notb
mov
xor
clc
rolb
sbbb
jmp
xchg
push
pop
int
cli
movsl
and
push
loope
adc
push
add
fldt
pop
dec
adc
or
lahf
push
lods
mov
fdivp
fstpl
fbstp
fbstp
push
xchg
cmpsl
jae
fwait
sbb
jmp
out
pop
xchg
pop
sti
xor
mov
mov
pushf
into
pop
mov
or
jb
mov
or
add
jle
mov
sub
les
sbbb
jno
lea
jl
out
in
jp
lods
dec
loop
adc
push
xor
inc
jno
or
adc
stos
or
cmpsl
mov
test
jnp
mov
ficoml
adc
dec
stos
sti
pop
push
mov
test
inc
lods
das
or
xchg
sub
mov
inc
sbb
dec
adc
and
sbb
mov
lods
mov
adc
sbbl
sbb
dec
sbbl
in
pop
push
out
in
fsubrl
sbb
sbb
in
xchg
in
dec
jbe
in
lds
out
rclb
out
inc
and
gs
pop
pusha
rcl
inc
mov
add
xorl
mov
jo
ds
test
push
cmp
test
jmp
int
fimull
push
push
mov
cmp
push
push
sub
mull
sbb
jb
jno
mov
icebp
sub
sti
jmp
fmul
pop
ss
inc
mov
pop
and
sbb
stos
jge
push
jo
or
and
aad
add
xchg
cmpsb
inc
sub
fbstp
scas
or
test
jne
fucomi
mov
push
and
xlat
push
jns
push
mulb
inc
and
cmp
loope
ds
jp
and
cmp
xchg
xor
loopne
add
mov
sub
sti
arpl
and
xchg
outsl
inc
out
arpl
shrb
sub
sub
or
push
mov
aam
popa
scas
or
aad
nop
jae
loope
das
lods
sbb
shrl
imul
fisubs
jmp
mov
hlt
push
icebp
sti
xchg
inc
daa
stc
jle
ret
sar
lret
enter
or
jge
fstps
xor
and
sub
and
outsb
shll
jge
jno
lahf
mov
repnz
pop
sbb
or
icebp
imul
mov
out
mov
pop
xor
movsb
iret
lods
push
push
lds
cmc
xchg
dec
or
int3
sti
fwait
jno
fidivrs
xor
dec
les
cli
movsb
data16
mov
shll
out
or
scas
sub
pushf
jne
xor
cmp
call
dec
fistpl
mov
push
addr16
sub
and
dec
push
inc
mov
mov
inc
cmpsl
push
sti
jl
jecxz,pn
push
ja
daa
lods
add
loop
lock
sar
xchg
xor
in
sbb
cmp
jbe
jecxz
pop
inc
pop
jno
mov
fmulp
out
aas
pop
cmp
xchg
cmc
pop
in
in
pop
inc
repnz
shlb
pop
inc
sub
imul
scas
insb
lods
pop
push
mov
xchg
hlt
or
mov
jo
add
movsl
pop
mov
mov
imul
outsb
pop
push
mov
sub
dec
adc
aad
cmp
popa
adc
shrb
daa
push
stc
cltd
cmpsb
imul
pushf
pop
cmp
scas
pop
fists
ds
jecxz
cmpsl
sti
shrl
mov
or
fimull
test
dec
xor
ss
pop
add
inc
sbb
xor
jle
inc
fidivrs
pop
data16
mov
lods
push
test
std
cmpb
adc
jo
or
cmpsl
mov
clc
xlat
popf
mov
leave
out
imul
or
dec
les
in
cli
insl
cwtl
andl
pop
adcl
sub
ljmp
mov
mov
fnstsw
mov
enter
dec
inc
dec
fndisi(8087
cmp
adc
mov
enter
ss
aad
xorl
repz
mov
adcl
dec
fisttpl
fldt
xchg
lcall
add
adc
jle
movsb
push
mov
je
popf
sbb
pop
mov
mov
rcrb
das
cmp
add
das
adc
test
pop
rolb
ret
mov
pushf
insb
loop
imul
lahf
jns
mov
jbe
data16
fsubrs
sub
std
jno
inc
mov
xchg
repnz
mov
jnp
ret
mov
inc
out
lret
ret
xchg
arpl
mov
pop
incb
or
in
jmp
sub
mov
mov
add
pop
cmpsb
repz
mov
sub
push
sbb
or
out
into
xor
pop
sbb
xor
lods
int3
inc
and
movsl
insb
push
dec
sarl
rcrl
dec
xor
out
mov
xchg
out
outsb
scas
fs
mov
lds
dec
addr16
in
pop
jl
inc
jmp
pop
outsl
ret
hlt
pop
mov
fcoms
movsb
jnp
mov
arpl
out
add
repnz
mov
add
xor
das
sbb
das
pusha
xchg
call
popf
and
in
cmp
call
cmp
dec
mov
stos
in
int3
jg
aad
cltd
pop
push
xchg
mov
into
fsubrl
push
sub
or
jns
push
addl
add
test
mov
sbb
sbb
or
fld1
ljmp
adc
cmp
adc
test
xchg
mov
xchg
stc
mov
stc
push
jae
cmp
pop
repnz
das
sbb
fmull
jbe
loopne
jo
mov
mov
in
jae
push
jmp
pop
stc
les
sbb
inc
mov
add
or
shll
pop
leave
fucomip
push
int
jg
int3
fs
sbb
xor
clc
mov
sub
inc
add
inc
fisttps
movsl
movsl
push
push
sub
les
out
insb
stc
nop
cmpsb
in
outsb
pop
cmpsl
stos
cmp
aad
xchg
mov
add
je
icebp
les
in
dec
adcb
push
add
jg
nopl
mov
ds
cmp
iret
mov
call
push
jo
ja
sbb
lret
ljmp
push
out
fstl
ret
nop
leave
jb
das
add
and
mov
fiadds
add
iret
lret
inc
sbb
int
dec
sbb
or
imul
push
push
cwtl
push
adc
jl
jo
or
in
rcrb
dec
mov
insb
xchg
inc
into
test
inc
mov
or
cmpsb
inc
dec
mov
rcll
leave
inc
inc
lret
sbb
loopne
adc
or
sbb
xchg
dec
aas
insl
pop
movsb
clc
insb
lahf
sbb
mov
and
icebp
sbb
xlat
movsb
push
sub
shl
or
icebp
in
mov
daa
cmp
xchg
cmpsb
mov
mov
scas
cmp
push
inc
movsb
push
aas
sti
icebp
sbb
lds
adc
cmpsl
mov
jo
pop
jno
hlt
cmp
in
cmc
push
mov
popa
dec
ja
push
inc
mov
jo
cmpsl
test
add
std
imul
sbb
xor
sub
in
pop
fistps
sbb
fisttpll
push
dec
iret
pop
sbb
mov
mov
rcrb
fidivl
inc
js
fdivrs
mov
dec
push
mov
xlat
cmp
pop
test
ret
addl
xor
mov
sub
popa
xor
dec
jp
and
xor
adc
sbbl
sbb
inc
out
push
xchg
push
dec
jbe
inc
xchg
js
fsubr
and
lds
scas
sbb
dec
in
xor
arpl
roll
sub
add
shr
ljmp
adc
adc
out
xor
jg
mov
dec
scas
and
push
dec
mov
arpl
out
sub
fwait
lds
inc
leave
das
adc
jns
addl
sub
dec
sbb
inc
mov
aad
xor
hlt
lcall
adc
je
push
jle
pop
inc
jnp
cld
xchg
popf
loopne
cltd
rclb
mov
fidivrs
add
pushf
mov
sub
clc
test
orb
mov
gs
les
leave
stc
or
xor
jne
sbb
out
jae
fsubrl
add
sahf
insl
in
aad
or
stos
arpl
xor
bound
dec
pop
push
inc
cltd
mov
and
cli
ret
imul
out
test
ja
add
add
cmp
cmp
subb
js
pusha
xchg
xchg
sbb
fimull
in
mov
rorl
je
test
sub
je
inc
out
add
test
in
insb
nop
xchg
xor
aaa
or
and
mov
push
dec
scas
sub
notl
add
and
in
push
adc
and
lds
arpl
push
mov
adc
inc
enter
cltd
jb
leave
inc
clc
push
and
push
mov
cmpsb
sub
pop
push
xchg
out
xchg
mov
ftst
sbb
fadds
inc
addr16
and
insl
jle
sub
leave
or
or
mov
cli
adc
js
psubsw
sbb
mov
imul
add
and
or
mov
pop
jbe
jmp
jg
fstpl
int
dec
addr16
or
mov
loope,pt
sub
pop
icebp
cwtl
test
add
xchg
push
out
cld
xchg
jns
stc
divb
fdiv
les
xor
push
imul
andl
cld
xor
mov
push
dec
push
dec
fstps
icebp
cmp
cmp
jae
in
icebp
mov
cmp
xchg
inc
int
sar
cli
adc
in
push
inc
mov
inc
inc
sbb
ret
mov
in
jl
lods
mov
int
dec
mov
add
arpl
add
clc
add
adc
mov
outsb
push
js
mov
and
daa
mov
jg
pop
ds
es
fisubrs
arpl
iret
mov
cmp
pop
or
aad
add
test
enter
shll
repz
xchg
pop
xchg
mov
mov
push
dec
cmp
fwait
xor
jmp
mul
cmc
mov
adc
mov
jle
pop
and
jne
push
stc
mov
cmp
sub
cmp
mov
inc
sahf
loopne
sbb
subb
jl
mov
cmc
sub
xchg
xor
jns
nop
jb
add
adc
xchg
sub
mov
mov
es
add
xchg
movsb
adc
cmp
lods
mov
dec
push
jp
push
sbb
dec
cltd
in
add
test
and
mov
xor
and
scas
jns
sub
fcoml
aad
hlt
mov
pop
fcomi
xor
loope
fldt
ret
ret
xor
mov
jecxz
xchg
sahf
push
jbe
fimuls
add
mov
jb
arpl
inc
rorb
ficompl
mov
jp
and
xchg
xor
jg
xchg
aad
pop
xor
push
sbb
fsubp
add
cmpsb
movsb
cmp
sbb
inc
int
sarl
xchg
xchg
pop
add
lea
mov
inc
ljmp
ds
sbb
mov
mov
sub
mov
outsl
call
add
out
inc
imul
filds
xor
je
lods
sub
outsl
cmc
sbb
popf
pop
adc
test
inc
popa
add
in
xor
insb
pop
inc
add
push
addb
xor
mov
and
push
inc
add
and
xchg
cli
lcall
sbb
lret
cli
je
cmp
mov
icebp
and
sahf
push
cs
mov
push
inc
insb
test
aaa
mov
popf
or
fsubp
dec
scas
popf
test
inc
ljmp
int3
adc
imul
int
jg
fiaddl
jecxz
adcb
inc
popa
std
sbb
jne
adc
loop
mov
aas
xchg
cmpl
cmpsb
shlb
inc
cmpsb
mov
flds
aaa
pop
jo
loope
cld
aas
sbb
loop
aam
inc
leave
aam
inc
inc
loop
movsl
pop
mov
lret
cltd
inc
add
call
or
cwtl
inc
mov
sti
adc
mov
jbe
mov
mov
dec
loop
dec
or
sub
pop
ficomps
xchg
mov
es
fst
cli
jle
int3
add
inc
push
shl
cmp
es
popl
cmp
mov
scas
inc
leave
push
aad
in
push
pop
aaa
and
pushf
push
sysexit
pop
mov
jg
gs
push
sub
push
sub
jo
adc
push
add
jae
mov
leave
jecxz
inc
xchg
out
rcll
adc
fwait
pop
pop
aam
jo
mov
cltd
mov
sbb
jl
jmp
fcoml
push
sub
or
inc
mov
jle
cmp
sub
mov
jecxz
in
fs
add
sahf
in
je
jg
jmp
push
lods
cmp
xchg
inc
bound
out
adc
xchg
and
inc
cmp
xchg
fs
xor
pop
shl
xor
hlt
xchg
insb
dec
stos
jmp
hlt
sbb
cmpsb
fsubs
push
pop
xor
fisubrs
add
cld
cmp
add
std
dec
dec
sub
incb
sbb
incb
jg
loop
pop
lds
pop
pop
dec
enter
decb
gs
addl
jnp
in
mov
pop
xchg
out
sub
pop
mov
cmc
movsb
loopne
cs
or
clc
gs
movsb
test
adc
mov
pusha
push
dec
mov
mov
xor
in
inc
out
out
mov
and
test
xchg
in
rolb
repnz
les
cmp
sbb
xor
outsl
loop
test
pop
mov
mov
jecxz
add
in
in
adc
into
mov
shll
pop
popf
popf
sbb
adc
les
negl
sti
pop
dec
icebp
test
inc
cmpsb
arpl
mov
leave
jge
adc
rcl
and
push
mov
repz
push
lea
adc
sub
pop
jne
test
int3
mov
push
sub
std
jge
loopne
adc
out
repz
insl
dec
sahf
xchg
imul
lret
mov
je
mov
and
rcrl
mov
inc
jo
push
push
pop
cmp
cmpsb
data16
les
xchg
cmc
sbbl
fldcw
nop
insl
or
and
xchg
cmp
movsl
cmp
lret
fstpt
xor
shlb
dec
and
mov
lret
add
mov
xchg
rcrb
cmp
jg
adc
rcl
test
int3
inc
cmp
nop
pusha
push
mov
dec
mov
add
push
or
lahf
jbe
xor
cld
cli
mov
dec
in
cmp
mov
sbb
roll
push
orl
cld
jmp
push
mov
adc
lret
in
xor
in
test
pop
dec
loopne
add
push
and
push
int3
enter
cltd
push
mov
dec
and
push
or
push
cmp
xor
or
lret
dec
adc
inc
out
fs
push
pushf
addb
push
dec
or
inc
leave
shll
jle
jmp
and
stos
push
mov
stos
lds
inc
jns
add
into
mov
push
icebp
or
ja
push
dec
fistps
mov
out
add
and
jmp
ficoml
inc
lods
adc
sbb
push
add
xchg
fcompl
cs
dec
rorb
outsl
nop
gs
gs
std
jbe
xor
xlat
or
imul
jns
sbb
outsb
push
xlat
js
sub
std
mov
mov
sub
dec
sub
jbe
nop
dec
gs
xchg
jg
mov
dec
test
repz
outsb
pop
add
gs
sbb
cmp
cmpsb
xor
fcmovu
dec
jl
ds
xor
loope
mov
mov
pop
lahf
test
call
push
sbb
pop
int
imul
mov
inc
cmp
divb
outsl
fidivs
iret
adc
ss
mov
push
push
adc
pop
and
xlat
sti
xor
hlt
iret
and
dec
inc
xor
lods
lret
in
sbb
pushf
and
cmp
das
dec
addr16
mov
inc
daa
dec
mov
lcall
dec
rcll
dec
icebp
pop
inc
jmp
out
ret
insl
adc
call
lods
fisubrl
jp
into
rcll
push
pop
sub
xor
and
clc
and
adc
inc
mov
sahf
xchg
lods
popf
fwait
mov
ret
outsl
sti
xchg
sub
clc
jp
sbb
sarb
sbb
pop
inc
scas
mov
fildl
cmp
add
sub
sbb
leave
xchg
fisubrs
cld
mov
xor
jge
popf
pop
pop
nop
mov
fwait
das
pop
jbe
fcompl
fsubl
dec
scas
adc
pop
divb
or
cli
xor
mov
cld
cmp
repz
adc
add
aad
das
sarl
dec
mov
popa
pop
xor
nop
in
add
fbld
mov
sub
or
shl
clc
cmp
jbe
mov
xlat
push
mov
pop
pop
xor
loop
xor
inc
sbb
sbb
pusha
jns
addr16
pusha
sbb
mov
pop
mov
cmp
sbb
xor
ficomps
push
lcall
sbbb
dec
sub
xchg
pop
pop
pop
or
push
ja
out
insb
mov
stos
sbb
and
sbb
xor
xchg
xchg
repz
insb
add
inc
lods
les
fcmove
pop
sub
jne
int3
xchg
icebp
adc
mov
mov
xlat
sti
icebp
adc
sbb
mov
out
nop
scas
pop
xor
and
mov
jbe
add
mov
mov
cmp
loopne
lea
jo
mov
add
aas
jge
stc
dec
or
dec
ret
out
repz
sub
and
mov
gs
sbb
insl
and
inc
psubusw
stos
rcr
xor
mov
push
jge
and
les
outsl
inc
mov
xchg
insb
and
mov
fstl
pusha
das
and
xchg
sbb
push
mov
mov
call
adc
loope
ja
js
leave
fcoms
xchg
call
xchg
movsb
shl
and
inc
adc
xchg
push
add
mov
leave
sub
dec
xchg
in
jmp
sbb
scas
rcr
jbe
das
mov
inc
fdivrp
adc
push
test
and
sbb
mov
adc
jp
sub
dec
aam
cwtl
xor
shll
xor
out
jnp
mov
out
mov
xor
outsb
aad
call
test
nop
jo
jae
ret
jmp
cmc
sub
int
push
ljmp
jge
test
xor
mov
call
cmpsl
fisttpl
shlb
jo
adc
aas
rcrb
jge
mov
mov
inc
insb
hlt
adc
cmpsb
aad
jo
push
push
xor
insb
fidivrs
imul
xchg
sbb
adcl
cmpsb
rolb
in
adc
push
lds
out
pop
inc
push
jmp
pop
adc
cs
inc
pushf
sahf
out
dec
loope
js
andb
jb
and
fmull
inc
mov
es
in
mov
aaa
cmpsl
cmp
hlt
mov
nopl
pop
add
loope
sub
xchg
lret
pop
xorb
jg
push
scas
das
std
pop
xor
outsl
sub
ljmp
ss
jp
push
daa
xchg
test
mov
mov
bound
test
repnz
sbb
cmp
jp
lahf
pop
adc
scas
adc
notb
sarb
and
push
jp
cmpsl
or
arpl
mov
dec
pop
out
mov
xchg
cs
ss
inc
cld
pop
outsb
and
lret
add
mov
rolb
fisttps
orl
pusha
xor
dec
pop
adc
ljmp
iret
sub
push
add
mov
adc
xchg
iret
mov
or
bound
push
jecxz
dec
pop
loop
mov
testb
cmp
es
inc
in
mov
movsl
das
pop
arpl
mov
dec
sbb
leave
or
xor
sub
mov
cmp
jbe
lea
push
inc
rorb
fstpl
jnp
pop
leave
jae
test
inc
xchg
or
mov
mov
sub
sbb
push
js
pop
add
jmp
imul
inc
jns
mov
repnz
pop
repnz
or
jmp
insb
in
xchg
int3
xorl
in
xchg
fs
idivl
and
imul
mov
mov
clc
adc
aad
push
sbb
movl
addb
xor
mov
jno
vmovntps
sbb
mov
add
jg
loop
push
inc
shll
aad
aas
and
dec
out
mull
rcrb
xor
push
rorl
jae
push
xor
or
add
mov
xchg
jmp
std
mov
iret
push
and
inc
sahf
jecxz
mov
xor
jg
sbb
test
fimull
fsubr
mov
jle
fidivs
xchg
insl
mov
jne
mov
sub
scas
inc
xor
mov
stos
sub
jbe
in
rol
and
pop
and
adc
xor
jae
and
cmc
sahf
adcb
int
and
inc
mov
cli
or
and
loopne
mov
jle
adc
jg
jne
loopne
jbe
addl
cmp
lods
cltd
adc
mov
mov
nop
mov
adc
or
inc
adc
inc
xchg
jb
sbb
inc
dec
pop
pop
or
pop
into
bswap
cmc
add
jl
sti
inc
push
cltd
xchg
adc
cmpsb
inc
and
mov
xor
jne
cmp
sub
sti
or
push
lods
pop
pop
cld
add
in
jmp
add
iret
mov
push
sub
das
cltd
and
mov
and
ss
in
xchg
fimuls
pushl
jle
insb
jl
sub
lcall
adc
iret
bound
cmpsb
fstps
jp
inc
hlt
push
mov
xchg
popf
adcb
xchg
lahf
mov
fdiv
in
xor
dec
xchg
and
mov
xor
in
je
jge
movsl
ret
mov
mov
push
jnp
push
les
inc
movl
gs
cmpsl
out
ja
rorl
sahf
sub
sti
xchg
dec
ret
mov
xor
add
lea
or
cmpsl
mov
ret
cvtpi2ps
sub
out
mov
push
inc
mov
jae
mov
lret
cli
arpl
insb
adc
cmp
push
test
mov
mov
pop
fcmovu
insl
push
sbb
daa
jmp
insl
jne
mov
fimuls
aam
jbe
mov
nop
fadds
xor
sahf
pop
mov
sbb
jb
xor
push
dec
mov
jg
push
sarl
stos
fwait
ss
inc
add
jg
js
push
push
pop
addl
push
xchg
mov
or
xor
sahf
test
adc
xchg
jo
incb
push
sbbl
arpl
mov
lahf
add
iret
push
sbb
enter
push
pop
fstpt
pusha
psubsb
call
aad
dec
adc
cwtl
repnz
sub
xchg
shl
jns
js
fnstcw
test
or
test
out
in
sahf
push
cmc
mov
push
sbb
ja
or
xchg
dec
xlat
sbb
ficoml
scas
ret
lcall
inc
es
je
hlt
mov
es
lahf
mov
shll
xchg
jns
cltd
or
and
test
mov
pop
test
out
pusha
pop
dec
xchg
call
sbbb
and
or
push
andb
std
and
push
dec
mov
inc
cs
xchg
je
and
data16
fildl
sarl
xor
in
mov
sub
fnstsw
call
mov
jae
in
fiaddl
xchg
mov
out
jae
push
xor
mov
into
fimuls
fwait
aad
push
xchg
mov
lcall
inc
je
pusha
sti
jp
and
mov
push
inc
outsb
inc
add
xor
movsl
mov
fcoml
push
int
mov
bound
adc
sub
and
mov
jae
in
gs
leave
xchg
jnp
or
lock
stos
cli
shll
and
test
outsl
add
or
icebp
orb
mov
pop
icebp
adc
add
mov
sub
testb
inc
rcl
and
cmc
add
jp
arpl
xchg
leave
into
mov
out
in
sar
mov
neg
adc
test
jp
push
sub
xor
jbe
icebp
repnz
push
cmp
pop
push
shlb
add
in
aas
pushf
std
jp
cmp
or
repz
lock
sub
stos
and
dec
jg
in
imul
shlb
mov
rorl
mov
inc
sub
add
das
and
cmpl
jp
das
mov
mov
ds
js
lds
xor
imul
inc
lret
cli
xchg
test
or
pop
orl
mov
scas
and
popa
icebp
adc
push
sub
ja
push
xor
mov
or
pop
and
gs
ss
sbb
les
lea
fdivrl
jo
enter
xor
pop
int
fcompl
jnp
and
mov
cmp
dec
push
mov
negb
xchg
cmp
xor
repnz
inc
mov
in
cmp
or
dec
insb
test
pop
cmp
inc
push
mov
xor
sub
clc
jbe
lahf
loopne
pop
mov
data16
jmp
push
adc
ja
lods
lods
jecxz
mov
enter
mov
jae
adc
pop
add
shrl
mov
sbb
xor
faddl
daa
lret
inc
loop
xchg
fnstcw
ret
push
lods
ljmp
loop
test
sbbb
test
inc
les
push
das
mov
icebp
mov
out
repz
dec
push
add
adc
pusha
mov
or
int3
js
insl
divb
xchg
lea
xor
pop
fcmovnu
rolb
cmc
sub
cmp
les
fs
adc
and
mov
mov
insb
ss
es
or
mov
test
cli
xlat
push
xchg
fstps
test
pop
ds
cs
call
jg
jne
xorb
inc
add
hlt
movb
pop
adc
mov
add
adc
sbb
in
clc
xchg
in
or
cld
xlat
icebp
dec
cmpsb
lret
pusha
and
sbb
ret
inc
mov
cld
lret
xchg
mov
jp
aad
gs
mov
mov
pop
popa
sub
rol
hlt
cwtl
or
addr16
pop
sub
mov
insb
call
jle
fisttpl
jecxz
push
ret
or
sarb
int3
in
push
add
bound
inc
jo
mov
inc
pusha
dec
insl
sbbb
sub
inc
mov
pop
lgs
pop
test
ret
insl
dec
pushf
mov
adc
jg
xlat
sbb
pop
inc
imul
or
aaa
or
pop
push
xchg
loop
popf
push
dec
sub
cmp
addb
sub
jae
pop
decl
in
fwait
pop
jecxz
lret
leave
in
mov
mov
lcall
aad
jge
jecxz
pop
in
test
add
loope
loop
pop
add
adc
movsb
push
jae
les
lcall
mov
ret
jg
cmpsl
iret
outsl
pop
inc
addb
test
por
jo
xchg
pop
xchg
jns
mov
stc
popa
mov
xor
push
sti
enter
jnp
loope
mov
jb
sahf
push
xchg
out
push
or
mov
test
cmpsb
aam
pop
push
mov
sub
pop
inc
in
inc
stos
call
sbb
push
sbb
and
push
daa
jecxz
mov
adc
push
aad
jle
sbbl
loop
push
fstps
pop
jbe
loope
sub
ds
push
das
adc
push
nop
mov
cld
push
push
dec
loope
addr16
cmp
adc
inc
dec
dec
pop
mov
jge
cmp
out
inc
mov
xchg
repnz
mov
inc
jbe
mov
add
push
sub
mov
sbb
mov
ss
enter
outsl
outsl
ficoms
xor
sbbl
adc
mov
js
cmp
push
sbb
outsb
xor
xchg
mov
mov
cmpsb
nop
inc
mov
inc
std
stos
fsubrs
rsqrtps
out
pushf
push
or
stos
jae
mov
dec
hlt
xchg
adc
hlt
push
adc
imul
repz
aam
std
push
mov
in
mov
faddl
aam
mov
flds
jo
dec
or
sub
inc
dec
ret
xor
lock
sarl
ret
and
aam
stos
mov
jno
add
aad
inc
mov
mov
lahf
mov
addr16
ret
push
dec
cld
mov
push
push
and
sub
rcrl
gs
dec
ljmp
jp
fmul
adc
add
fistl
pop
push
stos
inc
ja
push
mov
xlat
fists
or
data16
fimull
repz
addb
sarl
jmp
mov
pop
bound
pop
add
imul
add
lds
xor
mov
sbb
scas
sub
mov
repz
test
xor
sub
jmp
popf
rorb
inc
sbb
fildl
pop
jae
insb
inc
and
orl
mov
mov
mov
add
daa
xor
in
adc
popa
pop
outsl
lea
ja
and
in
and
push
cmpsl
adc
or
xor
mov
pop
sarl
cmc
dec
pushf
pop
push
pop
cmpl
or
rorl
loop
fisubrl
mov
cmp
lcall
mov
repz
repz
ds
lods
xchg
dec
test
cmc
fmuls
scas
sub
ja
lcall
push
dec
jb
adc
icebp
shll
les
nop
pop
dec
sub
cmc
pop
aad
mov
loop
sub
mov
push
mov
lret
lcall
inc
jle
mov
fcomi
sti
leave
push
cmp
cmp
fldenv
push
pushf
pop
sti
push
nop
out
lahf
and
xchg
jno
jle
call
adc
pushf
xchg
mov
popa
lret
stc
into
je
mov
in
data16
mov
shll
addb
mov
or
ror
call
mov
push
sub
ret
ficompl
mov
xor
and
and
bound
lock
xor
ret
daa
add
mov
xor
dec
call
neg
mov
test
dec
loope
xor
push
cwtl
mov
pushf
mov
jmp
cmp
scas
sti
inc
push
push
repz
aam
pop
stos
leave
mov
les
jle
das
xor
iret
fidivs
ffree
push
shrl
pop
popa
adc
inc
pop
sub
xor
pop
filds
mov
xchg
loopne
test
in
add
std
jb
inc
ret
popl
jg
add
call
sub
mov
sub
push
jecxz
or
and
xchg
jne
fidivl
movsl
sbb
push
xchg
lahf
add
push
int3
clc
aas
stos
sub
loopne
lds
push
enter
xor
fs
pop
jne
or
popf
loop
mov
xor
shl
shrl
imul
cli
adc
leave
and
mov
or
ljmp
sbb
int
scas
or
mov
scas
mov
icebp
push
pushf
mov
jb
cmp
insw
adc
outsl
jo
sbb
xlat
pop
push
into
fistl
sbb
push
shl
pop
xor
xor
insb
cmc
inc
mov
dec
mov
or
xor
jbe
dec
popa
adc
out
int
fyl2xp1
in
repz
cmp
ss
in
mov
add
inc
push
mov
ret
cmp
xor
sarl
mov
sti
xor
mov
pushf
in
repnz
cmp
sbb
jbe
sbb
add
push
mov
lret
adc
push
in
imul
adcb
movsl
xor
lahf
out
shll
lods
jbe
pop
mov
and
and
inc
mov
bnd
sahf
mov
outsl
fnstenv
rcrb
int3
fsubrs
sahf
inc
xlat
xchg
dec
rcrb
daa
adc
movsl
cld
inc
in
std
mov
rolb
fcoms
loope
out
cli
out
out
cli
fwait
push
mov
js
movsb
int3
dec
and
pop
popf
or
and
mulb
popf
adc
scas
pop
fldt
cmc
mov
cmpl
add
and
sub
xor
and
data16
inc
add
sub
test
jle
fcompl
cmpsl
add
sbb
jp
mov
addr16
out
imul
fmull
movsb
xchg
push
shl
rcrb
stos
pushf
das
xchg
fdiv
gs
and
or
loopne
out
test
scas
mov
mov
loopne
cld
out
nop
push
cmc
leave
stos
push
sbb
sbb
cmp
das
movsb
insl
pop
jg
push
mov
and
ds
mov
imul
and
aad
adc
add
sub
clc
cmp
add
sbb
out
es
jbe
popa
push
insb
xor
dec
push
xlat
mov
pop
lods
cmpb
aam
sub
mov
xor
nop
and
push
and
xor
cltd
stos
jno
lds
std
sar
nop
sbb
adc
mov
stos
push
stos
jmp
lret
out
in
xchg
dec
addr16
push
addr16
arpl
adc
insb
mov
outsl
or
jmp
pop
jecxz
sbb
js
pop
sbb
decb
imul
pop
cmp
xchg
mov
cmp
xchg
mov
dec
push
pop
data16
mov
jmp
ret
or
sbb
les
lahf
out
or
cmpsb
adc
pop
in
jl
movsl
pop
cmp
xchg
pop
cmp
jb
jb
push
leave
ror
xorl
pusha
jno
cmp
mulb
fidivl
cmp
jmp
mov
push
pop
inc
aaa
adc
out
aam
mov
push
roll
pop
dec
and
or
push
xor
iret
popa
shlb
sbb
and
movsl
jbe
ds
or
in
pop
decb
fcoml
ljmp
or
test
jmp
xchg
mov
mov
fdivs
sbb
scas
xchg
xor
adc
fxch
sarl
mov
push
fisttps
test
mov
cmp
outsl
fs
lret
in
loopne
cli
and
xchg
and
sbbl
inc
std
int3
ret
daa
sub
addl
ss
sbb
adcb
adc
push
push
jg
pop
cwtl
scas
scas
or
call
mov
mov
ret
and
loop
fidivs
dec
popf
pop
xchg
inc
imul
repnz
or
ja
pop
push
mov
mov
cmpsl
cmc
jl
ffree
in
jo
xchg
inc
sarb
pop
out
and
dec
mov
clc
test
xchg
push
xor
mov
pushl
sbb
repz
push
divl
mov
mov
fildl
mov
mov
adc
inc
fildll
xchg
cld
add
lock
or
popf
outsb
mov
adc
insl
adc
cmc
dec
or
mov
aas
and
mov
xlat
push
fadds
bound
lret
push
pusha
arpl
pop
add
push
popf
sbb
in
aas
jp
shr
mov
pushf
cmp
rolb
mov
or
xchg
or
adc
adc
and
mov
sub
ljmp
insl
push
xor
pushf
pop
mov
push
mov
out
es
jecxz
xchg
mov
sbb
in
or
mov
cltd
jp
ficoms
cwtl
test
mov
popf
jbe
sub
add
lods
stos
push
dec
ja
cmpsb
jp
icebp
inc
outsb
xchg
inc
xchg
push
shlb
xchg
cmpl
adc
pop
ss
jno
daa
outsb
sub
dec
adc
mov
cs
insb
bound
out
xchg
jno
inc
or
and
mov
sub
and
and
and
push
out
adc
int3
aad
scas
mov
cmc
jmp
mov
and
cli
repz
mov
ret
add
push
sub
and
push
and
mov
or
sbb
cmpsl
pop
mov
xlat
ljmp
jge
and
cmc
movsb
enter
ret
insb
lahf
fistpll
jb
add
push
xor
int3
ss
mov
lahf
in
in
jmp
into
xchg
cmc
out
js
lret
gs
jo
call
scas
xor
cmp
ret
in
mov
push
xchg
aas
lcall
push
dec
mov
dec
adc
lret
mov
ljmp
pushf
bound
lods
cmp
pushf
and
push
in
inc
test
mov
in
test
daa
sub
xor
jnp
jbe
pop
imul
pop
sub
cmp
push
xchg
lcall
arpl
jnp
mov
fldcw
mov
inc
mov
es
cwtl
rolb
jb
xor
insl
ret
sbb
arpl
ss
push
lds
mov
clc
mov
int
pop
xchg
movsl
call
ficompl
ficompl
push
mov
xor
mov
jbe
or
cmp
scas
lds
mov
push
xor
lahf
jl
mov
jmp
ss
jecxz
add
mov
imul
mov
inc
inc
mov
pop
or
inc
clc
insl
outsl
mov
movsl
mov
aaa
push
adc
ss
outsb
fistpl
cmp
xchg
mov
insb
out
cmp
insb
adc
mov
sbb
movsb
aad
inc
xlat
pop
add
lock
aas
sub
or
daa
cli
mov
sbb
xchg
fwait
loopne
and
mov
cmpsl
lods
push
mov
shrb
adc
inc
or
test
fnsave
shrb
in
pop
mov
mov
push
jb
imul
pop
stos
std
push
add
cmp
shl
adc
test
stc
sbb
xchg
fadds
iret
xchg
add
pop
jle
fistps
popf
add
mov
cltd
js
push
gs
xchg
cmp
inc
inc
mov
mov
and
inc
daa
mov
js
rol
inc
rclb
loopne
mov
call
jp
pushf
lcall
jge
negl
adc
sub
dec
lods
hlt
jbe
repz
shlb
lods
jle
adc
mov
sub
movsb
jo
adc
sbb
cli
adc
test
movsl
jne
cmp
imul
addr16
adc
jo
das
or
test
into
pop
sub
push
ret
inc
mov
nop
pop
cmp
fimuls
xor
daa
pop
les
cld
adc
stc
xor
addr16
inc
js
aas
or
push
out
mov
repz
and
sub
mov
ljmp
arpl
lret
xor
aad
jg
imul
lea
sub
mov
lret
lea
pop
and
dec
xchg
pop
mov
push
cmp
adc
dec
push
sbb
dec
sti
add
out
mov
incl
xchg
idiv
lds
clc
push
lret
sar
les
inc
xchg
andl
ret
pop
push
shlb
inc
cltd
add
lds
stos
pop
das
push
lahf
dec
jb
or
add
jl
addr16
lods
cmc
addr16
push
ds
jl
int
sti
xchg
sub
push
aas
sbb
mov
sbb
sub
js
pushf
dec
push
ds
jne
call
int
test
mov
mov
and
or
dec
sub
ret
lret
shr
rorl
leave
lock
out
mov
pushf
jbe
xor
mul
hlt
hlt
sub
call
mov
xchg
fcomps
lret
jg
jl
jae
adc
stos
mov
push
lahf
mov
outsb
jnp
das
cwtl
xchg
mov
cmp
sub
subl
lods
push
pop
mov
push
add
push
aaa
mov
enter
sbb
jno
add
sub
mov
iret
mov
lock
xchg
icebp
pushl
bound
xlat
sbb
cmp
push
mov
mov
arpl
mov
mov
jno
aas
js
mov
gs
lods
mov
aaa
pop
mov
inc
push
mov
dec
cmc
mov
insl
into
cli
stc
pop
push
popa
pop
and
jge
gs
lea
ds
push
xor
inc
ss
xchg
lret
sbb
lods
jne
dec
out
scas
inc
pop
sub
adc
dec
jo
sbb
hlt
jnp
mov
jge
push
sub
lcall
or
subb
fildll
mov
xor
mov
icebp
cmp
cmpsl
dec
in
hlt
dec
inc
mov
mov
gs
cld
sub
das
xchg
mov
imul
call
sbb
aas
jb
int
stos
mov
adc
aad
adc
sub
pop
out
dec
cmp
or
inc
cmp
mov
inc
mov
mov
mov
cmc
insl
pop
fimuls
push
or
jno
and
jg
sbb
mov
inc
not
dec
addr16
fstl
cld
in
sbb
jecxz
scas
or
mov
fnstsw
pop
sub
cwtl
imul
adc
lcall
or
jae
or
stc
or
arpl
cwtl
xchg
movsb
and
psubsw
addr16
pop
pusha
les
push
push
int3
mov
imul
test
push
xor
popf
cli
jecxz
aam
and
push
sbb
scas
mov
das
pop
cmpsb
inc
insb
rcll
cld
jle
add
xor
loop,pn
movsb
nop
dec
jb
jne
add
mov
xor
test
and
inc
jnp
das
mov
mov
mov
ja
adc
jns
mov
sub
out
popa
sub
loope
lock
sbb
add
stos
sub
hlt
mov
ret
ret
in
mov
out
mov
loope
insl
mov
sub
mov
out
xchg
fwait
lods
mov
mul
and
mov
cwtl
xor
jge
iret
xor
push
in
or
xlat
xchg
pushl
jae
push
pop
stos
das
out
outsl
mov
lds
dec
popa
lods
into
pop
insb
iret
fcoms
push
ja
enter
es
mov
cli
cmp
mov
out
scas
loopne
je
adc
icebp
jno
inc
inc
aas
pop
out
stc
inc
cmp
add
push
push
dec
push
and
add
jp
out
xor
mov
lcall
cmpsb
or
cmpsl
and
pop
mov
mov
and
pop
cmp
std
sbb
call
test
xchg
pop
jbe
loop
pop
scas
clc
or
imul
cld
pop
loop
aam
icebp
imul
loop
push
lcall
adc
mov
adc
dec
add
repz
inc
pop
sub
push
mov
xchg
stc
popa
ret
add
lock
in
or
movsl
push
xchg
scas
imul
orb
push
test
test
imul
cmpb
shll
aam
das
mov
mov
xor
cmp
inc
mov
lods
jg
pop
test
iret
sti
lock
lret
gs
repz
movsl
ja
push
lcall
mov
pushf
mov
orl
dec
int
aam
int3
cmp
push
sbb
and
inc
mov
rcrl
loop
cmp
mov
arpl
js
aas
xor
and
push
mov
cs
in
loope
loope
arpl
cmp
mov
xchg
push
mov
cwtl
jo
pop
pop
sub
repnz
pop
call
setg
jno
fidivrl
test
or
mov
xlat
add
daa
in
into
cmc
xlat
push
dec
nop
cwtl
rclb
test
mov
test
jp
push
jmp
out
cmpsb
cmp
mov
xchg
dec
mov
dec
lods
push
cmc
mov
imul
call
jne
aam
push
fwait
xor
push
andb
jb
out
cmpb
add
fwait
addr16
out
mov
xchg
mov
mov
lock
dec
inc
mov
bound
int
jae
cltd
mov
scas
aas
mov
aad
stos
sbb
roll
mov
mov
mov
sbb
test
test
pop
mov
mov
les
int
mov
mov
mov
stos
inc
add
cli
addr16
sub
dec
cmpsb
and
mov
mov
pusha
int
fidivrl
mov
add
das
adc
mov
pop
jle
jbe
jbe
push
leave
loopne
cmpsl
mov
jne
push
sub
subb
sbb
lcall
pop
pop
mov
insb
pushw
cmpsb
mov
dec
sbb
pop
xchg
icebp
sub
out
mov
mov
shll
and
pop
pushf
mov
pop
aam
add
arpl
insl
sub
test
clc
icebp
popl
stos
jno
pushf
add
addr16
test
cmp
arpl
fmull
insl
push
addr16
rolb
out
sub
or
jnp
js
fscale
mov
test
mov
xlat
fistpll
jecxz
dec
dec
push
cmp
mov
ficoms
lea
cmp
or
cmpsl
aas
push
adc
les
jmp
adc
and
dec
push
dec
mov
imul
push
dec
mov
outsl
imul
add
lock
lahf
rcl
add
pushf
mov
ss
fildll
sub
or
in
xor
push
fs
fisttps
pop
adc
push
pop
xor
xchg
daa
cltd
jb
call
aas
push
das
inc
fdivrl
lods
cmpsl
setg
sub
push
pop
inc
rcrl
outsl
xchg
xchg
cs
mov
jmp
jmp
aad
or
sbb
jnp
arpl
push
int
add
mov
pop
mov
dec
mov
mov
jno
arpl
mov
in
add
int
and
jno
jne
aam
adc
leave
fs
sbb
xor
call
cwtl
nop
mov
mov
pusha
dec
psadbw
popf
and
xor
cmp
dec
xchg
push
mov
add
or
jbe
jb
popa
sbb
movsl
out
and
je
jp
lret
jg
or
std
mul
fcoml
xchg
subl
cmp
enter
push
inc
cltd
xor
add
in
sbb
and
pop
scas
mov
pop
sbb
movsb
fwait
out
pop
je
cmpb
fdivp
push
adc
push
nop
inc
cmp
int
lcall
pop
inc
cmpsl
mov
mov
push
or
lahf
cmc
shlb
jmp
test
test
fwait
int3
mov
daa
mov
aad
inc
out
jo
lcall
mov
ja
sub
xchg
xchg
inc
xchg
jp
daa
push
jg
aaa
push
daa
insl
sbb
push
fs
push
jle
test
mov
les
icebp
push
sub
daa
sahf
orl
ljmp
hlt
out
sub
mov
clc
orl
ja
popf
xlat
outsl
outsb
ja
jmp
shll
dec
nop
loop
push
rol
or
test
xorb
por
flds
fnstenv
pushf
in
mov
shll
push
or
out
imul
leave
xchg
jp
cltd
in
movsb
inc
je
adc
pop
movsl
mov
cmpsl
ret
cmp
adc
stc
xorb
into
mov
adc
pop
push
and
mov
jo
mov
pop
ja
mov
insl
push
outsb
xchg
mov
fists
adc
xor
in
addr16
add
cmp
adc
jno
and
fstp
testl
xchg
fisubl
fcompl
fwait
stc
iret
aam
rolb
fsubr
cmpb
jns
pop
dec
sbb
mov
jns
inc
dec
push
adc
adc
jge
sbb
push
jb
scas
xchg
adc
mull
popa
loop
cmp
xor
jnp
fcoms
xchg
mov
idivb
in
lds
jnp
sub
fcomps
pushf
adc
cs
pop
dec
inc
or
cld
ret
je
js
xor
lods
stc
push
movsl
aaa
test
adc
pop
out
or
push
dec
push
cmp
mov
dec
dec
shrb
push
fdiv
jb
sub
fs
sub
xchg
inc
adc
fsubl
and
lods
pop
adc
inc
sti
ljmp
loop
dec
or
pop
push
dec
insb
sbb
cli
push
sti
sub
inc
popa
mov
mov
out
out
divb
repz
repnz
fstps
jae,pt
push
mov
adc
cltd
sar
xchg
and
mov
dec
scas
pop
push
cltd
push
jnp
ja
add
jae
mov
shlb
mov
sbb
xchg
sbb
in
push
and
movsb
bndstx
adc
jo
push
push
dec
push
in
rcrb
ja
sbb
pop
or
mov
push
stos
xchg
lret
leave
jecxz
mov
push
dec
ds
adc
mov
mov
pop
insb
jb
push
jge
cmp
and
loop
sbb
mov
push
enter
xchg
arpl
cltd
dec
add
test
outsl
sub
sbb
mov
in
mov
lahf
mov
pop
fidivrs
mov
popa
jg
cld
test
js
cmp
cltd
mov
add
lods
subl
mov
fidivs
rcr
outsb
loope
xor
jb
lcall
jg
repz
shlb
shrl
push
push
js
adc
pop
cmp
jmp
inc
or
outsb
roll
mov
jp
or
stos
das
ss
jl
out
in
xchg
sti
addr16
xchg
les
and
inc
test
rcll
out
ss
and
push
cmp
insl
fldt
lret
stc
cmp
push
rcrb
lret
xlat
jecxz
mov
jp
jns
in
sbb
sub
jae
cmp
fisubs
inc
mov
call
out
dec
bound
mov
adc
inc
pop
xor
jnp
inc
flds
test
adc
inc
add
mov
es
mov
pop
sarl
mov
jg
flds
lock
repz
adc
dec
push
push
faddl
add
mov
rcrl
inc
hlt
loop
lcall
outsb
scas
lock
loope
sti
sub
jne
movsl
jnp
enter
icebp
test
lcall
and
mov
or
jae
xchg
sub
data16
test
cmp
and
stos
pop
and
shrl
in
mov
out
mov
jp
jecxz
and
cltd
mov
sub
mov
pop
repz
out
xchg
add
and
xor
cmp
repz
daa
and
xchg
jno
icebp
push
xchg
inc
cmc
call
push
mov
dec
lds
mov
sti
or
in
dec
test
mov
sbb
loop
testb
xchg
insb
mov
mov
enter
fs
xchg
lcall
fmuls
repz
outsb
movsb
sub
mov
mov
aaa
jmp
aas
jge
xchg
ficoms
or
aas
sarl
mov
mov
add
pop
es
out
push
mov
mov
test
int
sub
pushl
pop
xchg
jo
ret
pop
dec
jo
mov
pop
iret
pushf
add
shl
fs
sub
aaa
jle
xor
inc
xchg
fwait
lods
addr16
push
and
in
inc
sahf
cs
fldcw
fsubl
push
sbb
xor
aad
push
notb
adc
lret
sbbl
into
gs
lret
mov
jge
or
dec
dec
xchg
xor
addr16
popa
lret
lret
xor
or
clc
cs
push
pop
pusha
adc
pop
in
test
icebp
xchg
xchg
scas
fsubs
mov
fistl
hlt
imul
push
cwtl
push
jbe
pop
push
imul
in
jbe
mov
stos
add
imull
test
jecxz
jns
xchg
mov
push
pop
cmpsb
cmp
mov
cmp
gs
jns,pn
cs
jns
push
or
or
ja
cmp
in
test
mov
shlb
mov
pop
shrb
test
fiadds
adc
cmp
pusha
rcrl
jp
jecxz
push
push
xor
rcll
inc
cltd
xor
lahf
cmp
ficomps
sbb
sub
mov
jbe
jmp
cs
xchg
xor
sub
push
dec
daa
fnsave
and
shrb
fs
mov
in
push
mov
dec
js
xlat
adc
jecxz
lods
dec
icebp
test
add
fidivrs
pop
je
mov
ljmp
rcr
subl
lret
inc
jne
xchg
inc
mov
pop
jp
adc
int
mov
insl
push
fnstsw
mov
test
pop
sahf
imull
lods
movsb
dec
mov
pop
dec
negl
xchg
ficomps
vphaddubq
mov
pop
stc
jg
xor
jne
dec
sub
inc
scas
cmp
outsl
daa
addr16
sti
push
cmp
out
pop
mov
mov
xchg
push
mov
cwtl
jl
cmp
and
gs
lds
stos
dec
in
dec
xlat
lock
mov
and
imulb
aaa
hlt
xor
push
cli
cmp
xor
push
xchg
push
in
xchg
cmpsb
mov
in
dec
xorl
movsl
int
adc
lods
mov
inc
imul
push
shrl
fcomps
ret
and
fildl
sbb
mov
cs
jmp
scas
push
orl
enter
sbb
aas
repz
lret
xchg
test
xchg
push
lret
cmp
lods
ds
mov
lret
cmp
insl
mov
popf
js
ja
sub
fisubrs
aas
lret
push
lods
aaa
jp
test
and
es
xchg
ja
xor
pop
dec
sbb
ljmp
inc
addb
imul
sub
icebp
push
cmpsl
shl
addb
jae
leave
push
out
dec
xor
aaa
jle
xchg
loope
sub
cmp
push
push
mov
push
and
sbbl
sbb
or
js
jo
cmp
cmp
int3
or
outsl
pop
sub
xor
shr
test
add
mov
cmpsb
shrb
sub
xchg
xor
aas
fisubl
call
and
pop
inc
xchg
inc
mov
inc
and
loope
div
pushf
into
pop
mov
adc
shll
popa
and
jmp
das
adc
sbb
sbb
ror
aaa
push
dec
xchg
imul
lds
outsb
xor
or
jmp
xchg
mov
ret
push
dec
out
mov
adc
and
xchg
sbb
add
jp
fstps
push
fimull
nop
adc
xchg
popf
mov
mov
add
inc
sub
mov
jno
jmp
adc
es
cmp
push
cmp
test
xor
sub
fs
dec
repz
inc
push
scas
les
jge
pop
xchg
scas
xor
dec
ds
fcom
or
hlt
leave
mov
or
pop
cmc
icebp
xchg
scas
and
movsb
xchg
outsb
enter
add
xchg
mov
les
jno
add
loopne
pop
and
sbb
jecxz
sbb
push
mov
or
sti
push
inc
sahf
insb
icebp
aas
loop
fwait
mov
out
jecxz
lea
jbe
dec
mov
inc
insb
in
in
out
outsl
or
scas
mov
test
dec
push
leave
bound
jecxz
jecxz
repz
sub
mov
jb
fsubl
test
imul
shrl
xchg
aam
aas
and
dec
jnp
in
rcr
lret
xor
ficomps
inc
or
inc
mov
fildl
push
or
mov
dec
jnp
or
test
std
push
jp
cmp
ljmp
sbb
jnp
not
int3
pop
push
sbb
mov
mov
or
pop
inc
sub
ja
shlb
and
pusha
sub
jmp
movsb
int
fucomp
fsubrl
xchg
jge
repz
jecxz
sub
lret
ror
bound
mov
mov
sbb
adc
fwait
shrl
mov
mov
mov
int
mov
imul
rcr
les
and
add
jmp
adc
inc
daa
xchg
mov
jbe
andl
xchg
inc
fs
rcrl
push
fsubs
enter
jl
xchg
inc
pop
dec
mov
addr16
fistpl
mov
sub
mov
pop
imul
iret
cmp
jne
js
cwtl
das
xor
dec
mov
inc
pop
into
xchg
jle
push
sub
xor
test
adc
mov
lret
and
cmp
inc
xor
jbe
sub
or
mov
mov
add
ljmp
push
sub
jle
xchg
out
jno
pop
cmp
mov
inc
dec
data16
js
xchg
inc
int3
mov
lods
mov
js
inc
inc
inc
fmul
push
dec
insb
dec
out
in
pop
sub
cmp
mov
rolb
lds
mov
outsl
push
cmp
cld
icebp
adc
sarb
cmp
lcall
das
fdivl
push
lds
push
jle
push
lret
nop
xor
leave
cmp
pop
repz
mov
call
in
pop
or
int
dec
lock
mov
fnstsw
outsl
sbb
adc
pop
in
adc
cmc
mov
nop
xchg
dec
xor
ret
xchg
out
pop
pop
out
fmull
jno
addr16
pop
sub
std
pop
inc
xchg
fisttps
xchg
aas
repnz
movsl
sbb
dec
push
pop
loop
mov
nop
jecxz
ret
adc
mov
loop
loopne
cmp
faddp
push
inc
inc
push
and
and
sbb
shl
mov
mov
push
dec
push
dec
mov
push
mov
xchg
es
movsb
jo
sahf
daa
int3
mov
xchg
hlt
xchg
sbb
push
sbb
pop
aad
dec
cmp
mov
jmp
mov
movsl
xlat
mov
pop
pop
out
mov
fadd
and
push
sub
lcall
push
mov
movsb
std
jge
leave
cmp
test
loopne
push
je
scas
jns
xchg
iret
push
push
daa
les
mov
push
cmp
mov
inc
jo
outsb
and
daa
repnz
dec
sub
sub
daa
inc
imul
sbb
out
push
fisttps
sbb
pop
xlat
cs
inc
jecxz
call
lahf
xchg
stos
enter
dec
lret
je
js
test
cltd
aam
or
loopne
xlat
and
jle
jns
mov
mov
cmp
hlt
sahf
add
lock
and
xchg
cmc
test
hlt
mov
sub
popl
add
mov
rcrb
mov
dec
stos
popf
jbe
loope
pop
add
fdiv
sti
movsb
sbb
xchg
dec
sub
inc
xchg
data16
or
lea
adc
aad
pushf
cmp
and
cmpsb
push
mov
movsb
cmp
ja
scas
dec
mov
mov
data16
stc
mov
mov
popf
cli
in
inc
and
fimull
xchg
orl
fsub
cmp
pop
addr16
cmp
jo
adc
faddl
fisttps
mulb
cmp
lcall
mov
dec
scas
xchg
push
xor
pushf
lods
int3
fnstenv
cmp
pushf
mov
pop
arpl
cwtl
xchg
or
lret
xor
jb
icebp
pop
xchg
jg
sub
xchg
pop
mov
push
xchg
pusha
mov
and
sbb
add
testb
push
mov
dec
lds
dec
cmc
mov
or
hlt
mov
push
aad
jo
fnstenv
sub
in
mov
jae
dec
dec
inc
jno
push
je
or
add
mov
rorb
in
mov
icebp
js
fisubl
and
pop
and
mov
lcall
adc
jecxz
mov
loope
movsl
shl
fmuls
inc
movsl
les
lods
mov
imul
outsl
mov
or
sti
imull
push
pop
fdiv
xor
fcmovu
rclb
cmc
xchg
pushf
cltd
sbb
mov
and
adc
adc
addr16
aad
mov
push
rorl
add
test
push
pop
sub
cmp
mov
xor
mov
push
xor
sub
dec
jl
out
push
push
pop
sbb
xchg
out
clc
adc
movsb
xor
and
imul
movsl
test
repz
xlat
icebp
mov
mov
mov
xor
lahf
scas
jno
inc
jp
pop
xor
xchg
sbb
jmp
aas
add
pop
testb
into
shrl
fsubs
aaa
shll
mov
push
and
imul
inc
leave
test
jo
shl
xor
xchg
adc
ljmp
repz
sub
push
add
iret
sbbl
clc
xchg
js
jmp
imul
add
mov
xchg
aad
in
sbb
enter
es
jbe
shlb
jo
mov
icebp
es
shrl
inc
add
cmpsb
hlt
jmp
andb
ret
xchg
sub
mov
test
stos
inc
dec
mov
inc
jnp
add
mov
ret
jb
inc
mov
fcoms
pop
mov
pop
or
push
or
cmp
dec
adc
add
mov
sbb
aas
sbb
cmp
test
cs
lock
push
sbb
adc
cmp
out
inc
sbb
shrl
mov
add
dec
arpl
mov
decl
test
pop
scas
aaa
cli
push
aas
cwtl
jecxz
cmp
dec
jo
cmp
jne
cltd
imul
cs
inc
mov
aad
push
movsb
add
sub
stos
pop
mov
movsl
add
or
push
push
insl
sbb
mov
xchg
lock
mov
daa
and
push
push
pushf
cmpsl
xor
lods
fists
ds
std
mov
inc
mov
cmpsb
mov
dec
pop
and
adc
cli
imulb
clc
stos
movsl
pop
or
addr16
stc
enter
divl
orl
xchg
inc
inc
mov
mov
test
jo
mov
dec
in
out
mov
lahf
pop
insl
leave
inc
out
add
rcrl
movb
int
lahf
xor
or
pop
out
outsl
push
into
jne
inc
xor
xlat
popa
sbb
scas
dec
lods
dec
inc
ss
mov
push
sbb
push
arpl
aas
jno
icebp
jnp
mov
jmp
addl
mov
adc
into
cmp
mov
adc
leave
popa
ficompl
rcrb
adc
sbb
popa
mov
out
hlt
lods
test
adc
ljmp
sub
mov
cmp
xchg
and
sub
aas
scas
and
mov
add
pop
ret
cmp
popf
add
daa
add
imull
or
fstpl
ret
cld
stos
and
sbb
mov
push
dec
ja
sarl
or
cmpl
mov
sbb
repz
leave
and
sub
pop
lods
xor
push
rcr
xor
mov
xor
pop
std
push
lock
mov
mov
add
mov
aaa
idivl
push
subb
push
mov
xchg
imul
mov
lods
or
xchg
insl
dec
lret
pop
or
xor
repz
mov
daa
out
jg
jp
inc
adc
in
jae
data16
xor
stos
cmp
rcrl
xor
notb
outsl
push
push
inc
mov
ss
pushf
fisubs
pop
cmp
rcl
add
jle
jl
jnp
push
mull
dec
sub
adc
or
jbe
sbb
sbb
sbb
lds
les
clc
sub
cmp
add
mov
ja
roll
cltd
or
push
xor
shlb
adc
inc
push
adc
mov
jle
push
nop
in
bswap
popf
inc
mov
xchg
lret
mov
lcall
add
push
cwtl
inc
xlat
mov
xchg
imul
ret
cmp
pop
dec
jb
jns
xchg
or
gs
pop
ds
pop
adc
icebp
lcall
jno
test
jns
pop
or
fmuls
bound
bound
dec
test
xor
out
call
setge
pop
inc
jno
sbb
lret
mov
dec
mov
or
pop
shlb
gs
or
dec
imul
sarb
sbb
scas
dec
ss
mov
filds
mov
and
movsb
jl
filds
negl
pop
ret
add
jo
add
mov
inc
mov
mov
adc
xchg
cmpsb
xchg
jge
out
stos
sbb
in
sbb
lret
xchg
icebp
xor
jl
mov
xor
pop
adc
push
inc
movsl
dec
leave
imul
xchg
jbe
imul
pop
shlb
nop
pop
in
or
push
int
mov
mov
add
dec
pop
aas
pop
repz
mov
ret
pushf
add
fmull
push
push
push
dec
subl
cmpsl
inc
push
dec
xchg
gs
adc
popf
out
and
insl
jmp
es
outsb
mov
jmp
mov
lret
mov
or
xor
fdivrs
add
repnz
enter
jle
and
pop
mov
scas
fmuls
adc
push
mov
push
xor
clc
cmp
cmpsl
in
mov
sub
decl
mov
mov
jmp
xchg
sbb
nop
cltd
psubd
dec
sub
push
push
es
add
inc
adc
xchg
xor
sub
and
js
sub
jecxz
outsl
pop
mov
cld
call
test
jbe
test
adc
dec
lahf
push
mov
stos
arpl
ret
stc
lahf
xchg
sub
inc
and
push
xchg
pop
and
shlb
cltd
add
jmp
pop
mov
lock
scas
popf
add
xchg
scas
imul
mov
pop
mov
addb
mov
imul
scas
mov
aam
mov
mov
and
hlt
xor
inc
xor
lods
clc
scas
cwtl
adc
fs
push
mov
dec
rorb
rcll
stos
cwtl
mul
push
or
ficoml
nop
loopew
sbb
mov
sar
ljmp
lea
bound
and
js
cmp
insl
sbb
lods
sub
movsl
jl
mov
rol
inc
int3
pop
ret
aam
rcll
jmp
pop
rclb
imul
cmpsb
ljmp
or
flds
dec
daa
out
int
hlt
push
shrb
hlt
in
loopne
in
and
repnz
hlt
add
mov
enter
jp
jle
dec
addr16
cwtl
fisttpll
dec
xor
mov
sbb
loopne
jmp
ret
sub
and
in
cmp
or
push
in
xchg
stos
pop
xchg
rolb
xchg
ljmp
push
mov
pop
repnz
ljmp
xchg
and
dec
aas
jne
xchg
push
das
pop
mov
add
sahf
or
jno
ds
cmp
iret
mov
out
mov
push
jg
or
out
and
or
xchg
dec
jae
into
mov
cmpb
xlat
rcr
xor
mov
ja
aam
mov
mov
nop
mov
adc
or
and
or
loope
push
fbstp
shll
dec
rcrl
push
sbb
cmc
dec
sti
mov
loop
push
sub
std
and
xor
inc
rcrb
sub
sub
jmp
les
fistpll
mov
loop
nop
sbb
inc
lcall
outsb
adc
aaa
insl
ja
test
js
xor
xchg
sbb
mov
sti
inc
fs
and
sub
lret
and
push
and
dec
icebp
dec
outsl
pop
mov
sub
in
xor
push
ljmp
rolb
dec
adc
or
test
pop
lahf
xchg
popf
iret
sbb
sbb
fdiv
shlb
icebp
sahf
cmp
or
sub
inc
xchg
xchg
jmp
sub
js
data16
cmp
enter
lret
dec
mov
and
rcrb
jae
and
mov
cs
pop
mov
cmp
fstps
inc
popa
mov
inc
stos
cli
push
aad
xchg
inc
adc
rorl
jle
pop
das
mov
adc
icebp
int
sti
mov
mov
and
push
jo
sub
adc
jcxz
orb
mov
rorl
mov
add
pop
fimull
outsl
dec
fstps
cmpsb
mov
xchg
jmp
mov
lea
mov
mov
or
fwait
pop
ja
adc
inc
aam
xchg
mov
cwtl
mov
cli
pop
cmp
xchg
sbb
push
mov
and
out
jae
xor
arpl
stos
pop
mov
adc
cltd
lock
scas
cld
inc
push
ror
into
add
sub
mov
test
xchg
xlat
jmp
fs
mov
jo
arpl
imul
push
sub
pushf
pop
mov
js
test
pop
leave
pop
push
push
fiaddl
or
cld
cmp
in
push
adc
jae
xor
pop
xchg
arpl
repz
movsl
cmpsb
dec
pop
out
push
aaa
xchg
xchg
xchg
cmc
mov
inc
xchg
xchg
and
lcall
inc
dec
dec
jle
mov
inc
jbe
adc
and
push
jecxz
jne
call
pop
sbb
lds
in
das
mov
adc
dec
je
fbstp
es
imul
adc
stc
cs
mov
leave
js
mov
fistpll
arpl
or
xor
pushf
mov
and
sarl
fs
sahf
xor
dec
pop
lcall
fstpl
cmpsl
add
ret
pop
popf
cmc
in
mov
add
cwtl
es
pop
xchg
mov
nop
jb
adc
jmp
xchg
cmp
dec
sub
icebp
rcll
loop
and
nop
sub
pop
push
and
sbb
js
in
stos
xchg
stos
int3
inc
fwait
push
add
mov
lcall
shr
pop
or
out
and
stc
or
jno
jno
cmpsb
jne
jno
add
clc
divl
lods
std
push
mov
jecxz
decb
scas
pop
sti
sbb
ss
cmp
hlt
in
int
movsb
test
mov
or
outsb
pop
loop
push
lahf
xor
mov
bound
pop
lods
mov
mov
adc
adc
rcr
faddl
cltd
clc
add
mov
add
daa
icebp
repz
aam
xchg
pop
cmpsl
and
stc
rol
mov
test
lds
mov
xchg
lret
push
dec
xchg
xchg
imul
xor
xorb
jbe
dec
adc
test
xorb
jg
cmc
xorb
loope
clc
ret
jl
mov
hlt
movsb
jge
lahf
test
push
cmp
sub
mov
icebp
loope
insl
faddl
xchg
or
int3
loop
gs
jecxz
fsubr
dec
mov
push
adc
jo
shr
loopne
pop
xchg
add
popa
sub
pop
add
jp
sub
sub
insb
pop
pusha
cmpsl
pop
xor
push
jmp
pusha
sbb
lds
jle
push
dec
scas
aaa
stc
repnz
lea
mov
cmc
sub
aam
roll
xlat
inc
sahf
xchg
jnp
jb
movsb
mov
aaa
imul
outsl
sbb
shll
or
xchg
popa
out
in
push
adc
mov
or
and
rclb
ftst
xor
ja
out
pop
icebp
enter
mov
loopne
dec
dec
push
ficomps
icebp
add
cmp
je
aad
push
xor
fdivp
imul
loope
jmp
aaa
inc
jae
push
lahf
roll
leave
cmp
sub
movsl
mov
enter
mov
jmp
imulb
jns
cmovnp
out
loop
out
or
push
dec
cltd
or
out
and
movb
xor
loope
xor
shrb
ret
push
sbb
loope
push
mov
int
jb
popf
popf
repnz
dec
xchg
es
icebp
aam
dec
lret
sub
loopne
or
in
aam
lods
fwait
jg,pt
mov
jnp
mov
mov
and
xor
aad
lcall
dec
imul
xor
ss
dec
sbb
and
data16
ror
ret
pop
jg
cld
sbb
lods
btl
lods
adc
insb
aam
call
in
adc
fistl
sarb
cmc
pop
mov
lret
jbe
dec
push
jne
test
push
mov
test
mov
out
add
icebp
outsb
icebp
lea
inc
stc
imulb
mov
fsubs
jbe
lock
inc
movsb
ja
cmp
popa
xchg
jle,pn
cmpsl
iret
cli
lods
call
popa
pop
scas
test
mov
xchg
lret
cmp
in
sub
pop
roll
adc
mov
pushf
cmc
mov
es
mov
xchg
xchg
dec
xchg
mov
sti
cmp
mov
popf
cmp
sbb
out
and
jbe
loopne
shll
fmull
jecxz
xchg
movsl
cltd
pop
pop
mov
shrl
cmp
sub
inc
and
lods
or
add
fsts
xor
push
cmc
jne
outsb
das
les
pushf
test
inc
out
inc
mov
cli
test
adc
mov
pop
mov
pop
adc
setp
hlt
repnz
cmp
fnstsw
adc
xor
mov
jns
mov
icebp
mov
push
mov
push
aam
insb
inc
xor
les
stos
jecxz
cmpsl
and
imul
cltd
or
sbb
jle
add
mov
adc
xorb
rcrl
fstps
loopne
xor
rol
lock
mov
movsl
pop
add
andl
mov
dec
pop
std
cld
push
sahf
ficoml
shrb
pop
in
cmp
in
cli
in
jg
pop
scas
fisttpll
push
jns
xor
cltd
xor
inc
inc
cli
pop
sbb
sbb
jbe
in
test
gs
push
ss
mov
test
sahf
push
inc
mov
filds
xchg
mov
and
notl
adc
repnz
daa
into
hlt
mov
add
mov
pushf
mov
or
inc
and
mov
push
test
aad
arpl
adc
in
mov
sub
mov
cmpsb
aad
sub
lods
push
lahf
js
xchg
mov
jle
out
push
inc
cmp
out
sub
lds
mov
xor
mov
pop
faddl
jne
push
repnz
mov
pop
xchg
jb
cwtl
incl
sbb
cltd
pop
fistps
loope
cmp
jo
mov
insb
sbb
sahf
neg
xor
inc
xor
sbb
in
or
add
inc
es
lret
push
add
fdivl
movsl
test
xor
jns
pushf
mov
cltd
mov
xor
int
call
push
jo
js
ja
and
das
loop
jne
or
jge
xor
rclb
jmp
mov
add
es
leave
add
push
dec
test
push
pop
xor
xor
lea
sbb
cmc
int
shr
aad
add
fwait
shlb
xor
push
outsb
sub
adc
xor
sbb
mov
fbstp
inc
repz
imul
xchg
movsl
and
lcall
dec
dec
jbe
push
mov
std
test
xlat
add
cmp
out
cmp
std
mov
mov
js
or
loopne
adc
pop
pop
dec
in
pop
js
into
pop
mov
xor
dec
inc
xor
xchg
into
orl
mov
push
lret
fs
dec
in
pop
data16
rcrb
dec
mov
lods
jnp
adc
ds
dec
ja
sbb
inc
insb
pop
sub
js
cmp
push
cmp
les
cmp
idivl
or
jbe
add
push
push
lahf
mov
repnz
xor
xor
mov
roll
das
mov
std
cmp
out
clc
cmp
mov
pop
shrl
sbb
out
lahf
sbb
subl
cmp
ds
inc
push
testl
jp
shr
dec
jge
jecxz
shll
shrl
sbb
jecxz
cli
mov
ror
cmp
and
ret
xor
push
hlt
hlt
push
dec
in
pushf
mov
roll
inc
push
mov
inc
or
cmp
cmp
rolb
jmp
dec
push
add
ds
pop
xor
in
or
mov
push
sahf
mov
or
ds
and
mov
out
dec
cmp
mov
xor
ret
outsb
mov
loop
fs
add
sbb
ds
pushf
mov
call
inc
mov
inc
mov
xor
xchg
xchg
fimuls
inc
push
lea
cmc
sti
sub
mov
dec
es
pop
fiaddl
andb
jo
jo
cmpsb
notb
xchg
mov
inc
pop
pop
inc
jb
sub
stc
adc
iret
xor
jns
cmp
ss
xchg
dec
jne
popa
inc
sub
mov
push
xchg
pop
xchg
std
cs
inc
out
inc
scas
cmpsl
mov
push
aad
fs
pushl
ss
jmp
push
sysenter
adc
cmc
int3
pop
leave
dec
aad
lea
adc
daa
outsb
pop
and
test
mov
shll
ret
lcall
push
out
repz
mov
add
lret
sbb
adc
sti
xor
sub
pushf
lods
xorb
jg
stc
shr
xlat
pushf
xor
cmp
sub
mov
push
out
and
cmpsb
pusha
jle
xchg
pushaw
fsubl
ss
adc
dec
inc
lods
mov
jno
fcoml
dec
push
cmpsb
fists
push
subl
rcrb
push
fistl
sub
aad
sub
or
xlat
lods
movsb
cli
xor
jns
mov
adc
push
jge
data16
out
outsl
lods
orl
mov
xlat
jns
in
mov
int3
add
jo
mov
repnz
cmp
cmp
jb
cmp
mov
jl
stos
stos
dec
dec
sub
dec
repnz
mov
pushf
pop
jbe
bound
aaa
dec
adcl
and
xlat
cwtl
idivb
sbb
jle
jns
test
imul
loope
adc
and
jns
mov
adc
and
cmp
jo
mov
sub
and
pop
insl
bnd
inc
adc
xchg
pop
add
into
xchg
pusha
xchg
cmp
mov
in
and
cmp
inc
shll
mov
pusha
pop
adc
push
or
inc
push
pop
dec
pop
push
mov
pop
and
out
adc
push
in
sub
sahf
popa
jmp
sbb
xchg
repnz
into
sahf
movsl
dec
mov
jnp
and
adc
ljmp
fadd
jo
xorb
inc
aad
pop
cmp
jmp
mov
outsb
sub
mov
or
test
jo
fisttps
loopne
mov
push
sbb
cmpsl
ljmp
or
push
adcb
jnp
rcrl
ja
add
stc
dec
out
outsb
into
adc
cltd
push
xor
dec
sub
stos
xchg
repz
stos
push
stos
negb
rep
jg
jno
sti
aaa
fwait
sbb
cwtl
add
ljmp
les
mov
call
mov
xchg
icebp
fsub
shl
stos
negb
cmp
inc
test
js
and
ja
push
nop
fcmove
ret
fdivl
mov
jno
negb
xchg
mov
dec
sub
jge
sub
int3
popf
sbb
mov
sbb
fs
mov
ret
fisttpll
daa
ljmp
dec
rorl
pop
add
ss
inc
mov
jnp
fisttpll
cmp
lods
and
in
pop
test
push
clc
add
push
dec
fidivl
into
test
cmp
dec
cmp
es
add
adc
jle
cmp
rclb
imul
add
je
movsl
lcall
sub
lret
dec
add
adc
add
cmpsb
mov
imul
jge
jl
jae
faddl
fsincos
pop
cld
adc
test
stc
popf
mov
idivb
xchg
lods
jg
into
jecxz
push
cmp
int3
push
out
inc
mov
xor
aad
loope
xchg
xor
pop
push
ljmp
es
cmp
enter
lret
jne
out
cmpsl
int3
jg
aas
sti
inc
addr16
fdivrs
stc
sub
es
mov
jp
cmp
popa
mov
sbb
subl
mov
dec
cmpsb
mov
xor
aad
fbstp
add
popf
jbe
and
push
mov
push
aam
add
dec
lods
out
mov
data16
xorb
mov
adc
xor
out
shl
movsb
sub
outsl
in
lds
js
jno
jmp
jg
or
imul
cwtl
mov
stos
and
xor
ret
fisubs
movsl
xor
rcrl
sub
sub
stc
cmp
call
popa
cmpsb
outsb
inc
sbbl
adc
addr16
sbb
add
cmp
in
dec
mov
int3
mov
fisubs
popa
and
xchg
pop
sti
icebp
ja
mov
push
aaa
add
jae
out
dec
jne
jl
jb
push
lock
std
mov
sahf
mov
xor
js
ja
pop
inc
pusha
stos
sti
add
xchg
jns
inc
mov
cmp
cmc
test
in
sbb
in
mov
cmp
pusha
xor
mov
sti
add
add
cmpsb
or
add
mov
aam
arpl
ret
or
sbb
pop
es
or
stos
push
jnp
jl
aam
jg
sub
xchg
jo
dec
xchg
xchg
xlat
rorb
push
test
or
jo
xor
add
popf
out
push
jnp
lcall
jl
jns
ror
adcl
std
fbld
lock
leave
mov
or
repz
aas
out
xor
pushf
push
adc
sub
shlb
nop
cmp
pop
cmp
add
pop
std
cmp
adc
inc
cmp
xchg
mov
rcrl
icebp
fsubs
push
insb
xchg
dec
add
mov
xor
fnsave
shrl
adc
jl
mov
cmp
repz
sub
in
fnstsw
jg
fbld
sub
push
sbb
fwait
popa
or
sahf
xchg
sub
ljmp
testb
dec
lds
iret
loope
jp
dec
push
ss
aad
outsl
repz
xor
pusha
cwtl
in
enter
inc
xor
stc
mov
cs
les
add
cmc
inc
pop
mov
cmp
jl
inc
dec
call
jl
dec
push
repnz
insl
push
lcall
dec
into
popa
jl
xor
mov
into
inc
push
pop
xchg
rolb
js
rclb
in
out
and
in
adc
or
lcall
call
insb
sub
test
lea
xor
enter
push
fnstenv
lcall
into
xor
xor
push
into
inc
cmp
jo
sbb
cmp
pusha
sbb
inc
jae
rcrb
mov
movsl
pop
dec
xor
in
outsl
mov
xchg
lods
nop
or
cwtl
fwait
mov
add
in
jmp
xor
pushf
xor
mov
xchg
into
shlb
test
xor
int3
out
pusha
inc
jns
jns
fildll
enter
pop
xchg
jecxz
sub
std
pop
inc
cmc
shrl
or
cltd
std
mov
fst
mov
shrl
jmp
bound
xor
push
popf
nop
fcompp
mov
dec
cmp
inc
push
add
cmpsl
repz
loopne
loopne
addr16
fidivrs
int
dec
and
mov
mov
stos
cmc
mov
test
or
or
out
insl
jg
testl
dec
dec
pop
push
sbb
out
dec
xchg
jae
add
dec
mov
sub
sbb
popw
sbb
xchg
add
xor
jbe
sub
sbb
cli
stc
enter
aad
icebp
popa
test
incl
ret
cmp
sub
mov
mov
cmp
dec
rcll
mov
mov
xchg
adc
cmc
mov
mov
mov
xchg
adc
stos
dec
cmp
aas
loope
sbbl
xchg
fneni(8087
xor
iret
mov
mov
sub
pop
les
pop
add
mov
mov
jns
mov
sbb
xchg
pop
mov
ficoms
xchg
ja
lahf
lahf
aam
sbb
push
sub
cmp
test
jge
pop
sub
lahf
sahf
je
push
leave
lahf
mov
mov
insl
jno
fsts
jmp
imul
or
and
push
es
mov
jmp
outsl
xchg
fsubp
jge
sub
push
cmp
mov
mov
mov
cmp
push
adc
test
add
leave
cmp
pop
mov
inc
outsb
add
hlt
push
es
lds
mov
test
sub
inc
pushf
arpl
pop
mov
jp
arpl
je
in
fldl
sub
dec
idivb
js
fidivrs
lcall
dec
cmp
sub
pop
and
data16
push
pusha
or
mull
and
pop
sbb
rcrb
pop
xchg
ret
jo
xor
ds
clc
iret
sub
jns
repnz
add
xor
addr16
lret
faddl
sub
punpckhbw
stos
ror
pop
jne
sbb
xor
out
adc
int
loop
loopne
stos
inc
or
xor
and
out
sti
imul
mov
call
or
inc
add
pop
js
inc
xor
sar
cld
pop
clc
not
int
jmp
mov
push
sahf
outsl
inc
rcl
ss
sahf
std
incl
aas
cmp
enter
or
xchg
xchg
data16
ret
xlat
mov
dec
push
in
pop
loopne
xor
sub
xchg
mov
sbb
adc
dec
xorb
out
insb
stc
lcall
cmp
push
incl
adcb
orl
fwait
xor
mov
fsts
cmp
sub
or
xchg
ror
mov
mov
addr16
inc
imul
cmpsb
pop
test
cwtl
push
dec
addl
fisubs
decl
push
mov
jmp
cmp
push
jae
movsb
pop
clc
jmp
push
xor
ret
lea
jmp
sub
call
bnd
cmc
jmp
pop
out
scas
fdivr
inc
aad
js
cmpsb
add
pop
mov
mov
sub
cmpsl
dec
out
mov
inc
leave
inc
sub
xchg
dec
test
cmpsb
jecxz
outsb
dec
sub
ffree
out
pop
jnp
hlt
and
add
add
dec
and
jne
jle
xchg
jg
jp
movsb
mov
out
jnp
lahf
push
ja
pop
dec
xchg
out
mov
adc
cmp
cwtl
dec
jge
dec
cltd
insb
cmp
sub
jg
test
out
subb
test
add
cltd
push
lock
insb
inc
sub
xchg
mov
xor
sub
ror
fildl
xor
les
shrb
out
test
and
sti
cli
aas
and
fidivl
jg
int3
frstor
ret
movsb
push
in
ret
in
xchg
gs
mov
arpl
ljmp
xchg
pop
mov
mov
adc
pop
in
mov
push
gs
popa
sub
jg
mov
test
loope
arpl
pop
pop
sub
mov
push
aas
fldcw
mov
and
fists
int3
shll
in
dec
mov
scas
pusha
pop
mov
xchg
xor
mov
addr16
jp
rcl
push
mov
subl
cmp
xchg
cs
sbb
mov
iret
sti
xor
adc
mov
sbb
int3
xor
incb
out
mov
push
stos
lods
dec
push
or
test
xor
test
mov
clc
rorb
pop
fs
aad
mov
add
shlb
scas
cld
jecxz
xchg
cmpl
mov
xchg
sahf
cmpsl
loop
add
and
inc
subb
mov
bound
pop
xor
aaa
or
jbe
mov
repnz
fbld
xchg
popf
inc
xchg
pop
or
repz
mov
cmp
jg
out
adc
push
out
inc
stos
mov
stc
movsl
test
mov
fadds
jecxz
cmpsl
cmp
fs
sbb
shlb
gs
or
sub
mov
out
fldl
jle
jno
outsb
fsub
push
cmp
jmp
xor
adc
ljmp
mov
inc
jne
cld
push
je
add
sbb
cmp
add
clc
sbb
or
jge
pop
inc
dec
mov
dec
jb
lock
mov
cmc
sbb
mov
cmp
das
inc
ja
stos
jecxz
push
inc
dec
adc
clc
inc
sti
aad
addr16
aam
pop
icebp
out
mov
jae
xor
sub
imul
fs
push
dec
and
int
inc
inc
orb
pusha
es
ds
pop
sub
imul
xchg
lea
xor
xchg
clc
cmpsb
xor
xor
pop
add
xor
mov
arpl
pop
stc
jl
sub
dec
repz
pop
lret
imul
cs
stc
dec
and
pop
add
cli
outsl
dec
xchg
mov
ret
inc
adc
mov
stos
xchg
or
sbb
sbb
and
pop
xlat
inc
mov
sub
movsbl
jnp
loop
int
loopne
lret
sub
push
push
add
adc
jns
push
xchg
or
clc
mov
add
and
jge
inc
cmp
push
dec
xchg
sbb
jge
mov
push
sub
and
gs
ret
daa
xor
sbb
xor
xor
jle
addr16
shll
push
fsubl
lock
mov
push
fwait
sub
es
sbb
pop
dec
mov
dec
insl
cltd
jno
lcall
mov
mov
mov
daa
stos
mov
clc
sub
mov
popf
enter
out
xor
cltd
pop
mov
xchg
scas
cltd
push
repnz
jne
push
mov
sbb
xchg
mov
std
pop
imul
shlb
fcoml
xchg
sub
divb
mov
mov
rcll
aaa
sbb
mov
cmpsl
lock
loope
repz
adcl
roll
test
aaa
cmpsb
subb
mov
js
jecxz
mov
jl
hlt
mov
sub
cld
fadds
sub
outsl
iret
andb
mov
push
lods
push
and
aaa
cmc
add
icebp
push
orb
in
push
repnz
and
push
jns
push
jg
cmp
mov
sbb
and
insl
cmp
inc
loopne
neg
jp
fidivrl
decb
sbb
aad
rorl
lea
std
mov
mov
cmpsl
push
push
imull
or
aaa
stc
or
out
sbb
lret
test
or
mov
shl
xor
cmp
jns
imul
push
adc
dec
mov
xorb
mov
mov
adc
popf
mov
mov
outsb
cmpsb
xchg
add
cltd
mov
fnstsw
mov
lods
or
enter
pop
jge
xor
dec
dec
and
out
jg
inc
mov
add
inc
jl
js
ret
test
xchg
hlt
mov
and
mov
fsubrl
test
iret
ja
outsl
adc
mov
push
dec
cmc
push
pusha
and
adc
mov
aam
sub
pop
push
nop
push
das
scas
out
gs
fidivrl
cmpsl
incb
xchg
dec
andl
lret
sub
leave
gs
clc
jge
push
rcr
jnp
push
fistpl
sbb
sub
nop
pop
enter
push
pop
test
sbb
inc
xchg
push
mov
movl
rclb
xchg
lret
mov
pmaddwd
cmp
ret
iret
and
lods
sbb
mov
add
mov
jg
sub
hlt
popf
popa
outsl
pop
jecxz
push
in
clc
or
mov
movsl
xor
ret
out
inc
js
push
pop
mov
add
es
push
ficomps
cltd
jl
pop
sbb
sbb
sahf
lods
xor
lret
cmpsl
jmp
out
lcall
push
ss
push
xor
push
mov
lds
or
idivb
ja
sarl
repz
scas
loopne
js
ret
push
add
addb
outsb
jecxz
lcall
mov
push
enter
les
pop
xchg
ret
aaa
push
mov
cmc
push
dec
xchg
push
fsub
jg
js
dec
pop
sub
fsubs
dec
adc
les
jg
sbb
std
add
out
sub
fs
push
stos
fstl
or
pop
push
or
sub
mov
bound
add
es
lods
sub
pop
jp
mov
movb
dec
enter
cmp
scas
mov
ljmp
lds
outsb
mov
sbb
stc
cmc
mov
mov
lahf
sti
adc
sarl
pop
sub
ja
push
push
stc
lahf
jp
fwait
mov
inc
aam
in
mov
fmul
repnz
icebp
cmp
cwtl
mov
sahf
adc
popf
cmpsl
dec
xor
daa
push
mov
mov
xor
dec
cli
out
inc
xchg
cmpsb
jno
and
cmp
ss
ror
int
mov
fnsave
icebp
push
lea
pop
and
pop
jmp
mov
scas
mov
stos
mov
xor
pop
pop
mov
lods
lock
cmpl
jb
xlat
cmp
lret
jne
jb
fildll
cltd
sti
and
xchg
fwait
push
loopne
jb
jb
arpl
xor
xor
pop
fists
lahf
sub
stc
push
xchg
adc
cmpsb
aam
push
popa
fcomps
int
rcrb
imul
enter
punpckldq
cmp
ljmp
sahf
sarb
outsb
xchg
dec
shll
mov
add
aam
imul
int3
add
clc
sbb
enter
or
fisttps
jb
pop
cmp
sarl
popf
add
sbb
or
ljmp
movsb
xchg
xor
mov
push
push
inc
ficompl
out
jno
fucomp
pop
in
sar
mov
loopne
ja
int3
xchg
shrl
je
add
mov
mov
lcall
adc
sahf
push
jno
mov
and
imul
int
pop
push
mov
lods
rol
push
jb
sbb
push
clc
push
or
les
js
pop
out
push
inc
cld
in
mov
xor
xlat
loopne
loope
push
and
fildl
mov
sbb
iret
jns
sbb
scas
aam
and
and
mov
adc
arpl
jo
leave
jle
sbb
ficomps
mov
jbe
in
das
mov
xor
clc
sarb
cmp
in
push
and
addr16
addb
out
mov
and
imul
aaa
dec
push
sub
sub
clc
in
fwait
jne
lret
sub
imul
dec
or
aad
cld
pop
out
or
cmp
jp
test
cs
add
mov
inc
dec
popa
orb
and
jecxz
sbb
sbb
add
sahf
mov
jns
mov
in
shlb
lret
sbb
adc
aad
adc
jg
jecxz
cmp
pop
xchg
push
add
xchg
popf
pop
es
nop
or
dec
dec
imul
mov
stos
mov
xor
or
mov
and
int
dec
jmp
pushf
push
cmp
xchg
or
ss
add
adcb
inc
or
and
cmp
repz
stos
inc
mov
jmp
scas
jb
ret
lret
xor
rolb
xchg
aad
cmpxchg
scas
adc
jno
sbb
addr16
cvttps2pi
xchg
pop
cli
stc
mov
mov
sti
cmp
inc
mov
aaa
stc
push
jmp
adc
sti
jbe
clc
pop
fists
rcll
lret
insb
mov
mov
xchg
repnz
inc
outsb
pop
shl
xor
enter
mov
xchg
add
add
sub
rorb
movsb
mov
daa
repz
dec
mov
scas
aaa
aas
out
jecxz
idiv
sti
cwtl
shlb
subl
insl
insl
mov
mov
loop
fiadds
mov
inc
push
xor
push
aam
iret
idiv
ja
dec
inc
xchg
mov
jl
sub
adc
push
icebp
fistpll
scas
mov
or
fisttps
mov
inc
cmpsl
pop
fsubs
xchg
cmp
scas
or
and
push
lea
out
push
movsl
mov
test
out
lahf
or
xchg
repz
cmp
xchg
in
mov
push
ficoml
aas
mov
fnstenv
fldcw
jns
dec
mov
fsubrl
push
movl
mov
arpl
pop
outsl
cmp
dec
jae
cmp
les
ja
cmp
cmpsl
sbb
cmpsl
dec
sub
adc
aas
cmp
push
xchg
and
mov
aaa
push
adc
cmp
cwtl
jns
in
add
fmul
xchg
aam
lods
out
pop
mov
sbb
mov
mov
sbb
test
pop
das
cwtl
sub
popf
das
add
in
xchg
inc
mov
sbb
cli
pop
inc
pop
rcl
inc
pop
mov
shlb
ficompl
jl
xor
mov
aam
push
std
mov
shrl
mov
ss
push
cs
jmp
and
insb
xor
nop
xchg
jne
movsl
scas
hlt
mov
scas
sar
hlt
xchg
mov
adc
inc
testl
mov
out
pop
push
sbb
or
jg
popf
sub
mov
dec
sub
stos
push
jle
jl
jns
mov
es
jno
cmc
sub
sti
ja
xor
out
js
push
aam
or
push
adc
sbb
ljmp
fidivrs
jg
lret
test
loop
aaa
inc
mov
ret
mov
dec
push
add
mov
icebp
arpl
into
cmpsl
ja
xchg
loop
pop
add
or
mov
aaa
sahf
mov
daa
sti
shrb
xchg
push
addl
mov
cmc
imul
bound
cmpsl
mov
xchg
insl
pop
mov
add
add
lahf
xlat
or
or
aad
pushf
mov
xor
xchg
xor
mov
pop
hlt
les
ljmp
orb
repnz
lods
ret
cmp
cmp
push
aas
mov
lret
dec
insb
mov
dec
xchg
loope
xchg
es
test
cmp
dec
cmc
test
push
xor
adc
pushl
sub
push
add
sub
jo
push
repz
int
add
divl
ret
dec
nop
jnp
xor
cltd
mov
ja
sbb
cmpsb
xchg
add
pop
sbb
pop
adc
stos
xor
mov
mov
int
pop
xchg
add
repz
rcl
nop
dec
andl
inc
pop
test
repz
xor
or
mov
call
addl
jmp
jp
push
adc
dec
aaa
fscale
daa
mov
out
scas
pushf
xor
sbb
adc
imul
test
sbb
nop
sbb
and
sbb
pop
lods
sarl
xchg
in
dec
cld
xchg
pop
cs
sub
sbb
sub
mov
mov
aaa
or
pop
loop
pop
stos
cmp
leave
je
shll
xorl
sub
pop
sbb
ljmp
repz
daa
and
cltd
mov
adc
mov
daa
rorb
test
out
fcoms
into
jnp
push
rolb
and
cmp
or
pusha
or
or
pop
mov
loopne
add
std
sub
ret
and
hlt
fiaddl
and
push
test
xor
rcrl
mov
mov
cs
into
jg
mov
xchg
sbb
frstor
and
add
test
stc
in
pop
pop
push
icebp
or
add
add
or
mov
jl
test
inc
pop
fsts
outsb
ret
add
cs
repz
lods
insb
sti
jp
movsl
lcall
mov
rorb
xor
shlb
cltd
cmp
bound
sahf
popa
pop
test
cld
ds
das
xchg
dec
mov
pushf
jge
lods
call
mov
xlat
sub
or
mov
pop
notl
xchg
sti
cmp
xchg
xchg
cli
or
fstl
cld
and
mov
movsl
dec
push
cmp
mov
inc
dec
pop
pop
and
push
repz
lods
sub
ret
ljmp
negb
mulb
push
bound
or
inc
push
cmp
ja
adc
in
hlt
stos
out
loop
lret
inc
stos
pop
xchg
std
mov
cmp
into
loop
add
pop
add
mul
xchg
addr16
mov
icebp
pop
adc
int3
pop
mov
mov
xor
imul
mov
dec
xchg
push
lods
incb
stc
sarb
mov
xchg
mov
sub
orl
addr16
mov
idivl
loope
out
xchg
ja
cmp
mov
push
loope
in
xchg
push
or
mov
dec
test
push
mov
ss
mov
mov
mov
mov
add
leave
push
mov
add
adc
mov
in
ja
pusha
mov
xchg
ret
mov
or
xchg
movsb
mov
xlat
add
or
cli
movsb
mov
mov
js
sub
dec
xor
test
push
rclb
jp
or
xor
rcrl
cwtl
insl
mov
hlt
cmpsb
sbb
aad
sbb
mov
lret
mov
popf
loopne
lret
in
adc
sbb
pop
inc
bound
jnp
pusha
jb
sub
sahf
cmp
lret
shll
xchg
inc
inc
mov
mov
aam
stos
cmp
jb
fdivrs
push
mov
and
push
or
movsb
inc
mov
sbb
jo
scas
dec
dec
outsl
addb
int
cld
mov
jg
xchg
int
adcb
mov
es
or
sbbb
mov
scas
lcall
int3
and
inc
test
icebp
mov
in
call
ds
jnp
xchg
mov
mov
pushf
push
push
sub
mov
inc
push
arpl
rclb
lret
mov
xlat
aaa
cmp
push
mov
loop
sub
push
stos
mov
jno
ret
sub
out
pop
cmp
repz
pushf
jae
mov
out
lods
inc
and
ja
sbb
jp
mov
jno,pn
lcall
pop
inc
xor
mov
xor
ret
sub
inc
jo
andw
cld
or
jge
cmpsl
das
mov
cwtl
sbbl
cld
xchg
loopne
sbbb
jno
pop
push
nop
fisttpl
movsb
les
sub
jnp
xor
add
shr
pop
mov
clc
lea
mov
xor
pop
or
sbb
jb
in
push
test
jge
push
int3
sbb
pop
mov
cwtl
stos
sti
sub
negl
push
cmp
or
or
jmp
sbb
stos
xchg
loop
movsl
int
cmp
cld
jno
ja
filds
push
mov
mov
in
ja
mov
cmp
mov
outsb
andl
orl
nop
bound
je
jle
cmc
dec
jno
dec
cld
dec
push
push
js
adc
loopne,pt
inc
xor
dec
ret
or
cmpsl
fcmovu
shll
arpl
push
cmc
lods
lods
imulb
adc
es
inc
inc
es
sti
jmp
cmpsl
imul
fs
lea
sbbb
shl
mov
pop
xor
in
out
lahf
sbb
mov
mov
and
ret
mov
out
movsb
scas
add
scas
leave
inc
sbb
pop
mov
ja
enter
mov
pushl
fisttps
mov
sbb
adc
lods
mov
adc
or
or
popf
into
call
cmpsl
mov
mov
and
or
mov
mov
je
mov
jl
hlt
dec
ds
mov
outsl
lods
repnz
inc
sbbl
push
loopne
mov
sbb
inc
daa
insb
pusha
lcall
xlat
or
jb
pop
add
sub
inc
mov
adc
sbb
imul
sarl
mov
jp
jle
mov
adc
adc
xchg
pusha
leave
mov
mov
cmp
cmpsl
sbb
xchg
out
pop
xor
loopne
adc
mov
scas
xor
addl
mov
std
push
cmp
pop
jb
cmp
and
inc
jbe
pop
lahf
and
push
outsb
mov
cs
lods
fiaddl
dec
mov
clc
dec
xor
inc
stc
fsubrs
inc
ds
mov
add
out
sbb
bound
ret
mov
call
add
in
sub
adc
mov
popa
push
jae
mov
mov
orb
movl
inc
push
mov
out
out
pop
and
mov
push
and
fstl
imul
aad
into
scas
jb
ja
addr16
sub
sub
jbe
xchg
jo
sti
jae
cmpsb
sbbb
jmp
jnp
aad
xlat
cmp
mov
mov
xor
ret
jg
bound
pop
lea
mov
fdivs
mov
movsb
sub
sub
inc
mov
sbbl
jmp
inc
mov
push
xor
pop
out
jge
lods
add
in
repz
jb
addr16
or
push
lods
in
or
xchg
mov
stc
mov
ss
clc
stc
enter
mov
lcall
mov
add
mov
les
sub
rcl
mov
enter
shlb
lock
test
je
pop
sbb
int3
cmp
cmc
bound
adc
mov
fs
cli
stc
test
clc
aam
dec
push
cwtl
leave
adcb
inc
push
mov
push
cmp
imull
int
scas
dec
in
or
lock
leave
out
les
push
out
mov
xchg
cwtl
push
mov
dec
dec
sbb
pop
push
cmp
aad
sbb
xchg
pop
out
mov
mov
popf
cmc
xor
repnz
repnz
add
push
xchg
jl
cmpsl
push
cmp
sub
lods
pop
lcall
stos
cwtl
adc
mov
xor
adc
test
mov
out
add
mov
sbbl
std
filds
jo
inc
scas
add
mov
xchg
lock
stc
inc
scas
or
add
addr16
adc
mov
sub
pop
and
mov
or
add
popf
cmp
divb
cmp
jmp
mov
fwait
mov
jne
push
jb
adc
cltd
push
cwtl
loope
mov
out
jns
aas
je
pop
push
inc
test
in
lret
subl
jecxz
sub
xchg
call
lret
test
nop
sti
call
cwtl
and
adc
lods
in
je
xchg
mov
jne
xor
imul
push
and
adc
fsubp
xchg
addb
xchg
add
inc
shlb
adc
adc
push
insl
imul
addr16
das
push
rolb
adc
popf
jmp
pusha
into
push
ffreep
or
rorb
dec
out
cmc
push
jne
mov
popf
xchg
pop
ja
and
mov
jl
std
sbb
jmp
loopne
pop
mov
sub
iret
sahf
pop
xchg
cmp
data16
dec
mov
pop
into
mov
jbe
dec
mov
mov
push
ja
mov
shl
push
xchg
xchg
pop
lea
pop
fsubrp
mov
orb
sbb
mov
out
mov
shr
sub
mov
ja
mov
mov
sbbb
je
mov
jle
xor
jns
xchg
out
test
ljmp
push
jbe
jge
leave
in
dec
dec
icebp
mov
and
xchg
sbbb
hlt
test
jge
fsubrl
xchg
push
test
outsb
inc
jno
xchg
add
int
in
add
xor
clc
jne
out
mov
lods
push
scas
data16
lock
pop
or
mov
mov
pop
lock
mov
mov
lcall
and
fwait
adc
jecxz
in
mov
mov
in
jns
inc
test
ja
roll
out
dec
test
dec
dec
iret
test
enter
addb
into
mov
lock
pushf
mov
cltd
decl
push
movsl
insl
loope
jne
aas
in
sbb
ret
inc
loopne
pushf
or
nopl
fs
repnz
popl
hlt
xor
test
ljmp
pop
test
push
pushf
fsubrl
outsb
aas
cmpsb
xchg
mov
or
xchg
xchg
pop
mov
in
std
lea
aaa
stos
xchg
sarb
or
adc
jnp
and
fnsave
stc
mov
loop
outsl
and
dec
jecxz
std
gs
arpl
jno
dec
aam
aad
movd
mov
push
test
je
sub
dec
lahf
into
adc
cmp
cs
loopne
arpl
sub
cmp
cmp
xchg
shrb
out
repnz
in
movl
mov
xchg
lock
inc
mov
add
mov
xor
dec
jb
or
xor
mov
or
fdivrs
repz
js
dec
cmp
xchg
test
daa
das
adc
push
or
pop
popf
sub
cmp
sbb
xor
mov
in
aas
xor
add
xor
sub
in
mov
aaa
lcall
adc
adc
add
stos
jp
pop
lods
cmp
pop
and
movl
mov
xlat
xchg
mov
jnp
fmull
jg
mov
mov
push
pop
ror
test
scas
jecxz
ret
es
das
sbb
mov
pop
mov
lahf
mov
jmp
cld
fwait
dec
mov
shlb
das
xor
stos
xchg
test
in
scas
lret
stc
in
mov
xchg
lret
test
test
mov
cld
cmp
shr
mov
xchg
sarb
sahf
and
scas
inc
mov
and
sub
or
loop
fbstp
jp
insl
cmp
rcrl
sti
sarl
and
jmp
arpl
lcall
cli
adc
sar
outsb
imul
cmp
mov
add
imul
lea
ret
imul
cmpsb
fisttpl
scas
jg
stc
push
nop
dec
dec
insl
out
xchg
sub
add
arpl
jmp
cli
cmp
movsl
adc
sub
repz
mov
int3
clc
fwait
mov
xor
xor
ss
stos
push
lahf
lea
push
test
ds
iret
arpl
add
aad
popa
and
aad
in
outsb
out
xchg
inc
outsb
pop
ds
in
dec
ret
shrl
push
mov
push
push
mov
sti
mov
jo
cmp
push
out
mov
inc
cmp
cmp
jb
pusha
jno
mov
inc
pop
aaa
xchg
mov
adc
add
pusha
sub
xchg
mov
repnz
dec
ror
jns
movb
pusha
stos
rcr
aad
sahf
leave
mov
xor
inc
aaa
aas
inc
push
mov
sahf
mov
shrl
pop
lods
jle
sub
js
imulb
out
adc
fiaddl
notb
sbb
stos
xchg
sahf
jo
out
rolb
jae
xor
add
hlt
imul
inc
jge
mov
ljmp
mov
imul
popa
ret
pop
call
add
repz
insb
in
mov
xchg
movsl
adc
adc
adc
hlt
jge
mov
ficoms
popa
push
popa
pop
ja
lcall
push
sbb
sbbl
ljmp
lock
dec
sbb
out
inc
pop
cwtl
add
cmpsb
jno
das
xor
inc
sbb
sti
inc
mov
fmull
inc
sbb
dec
xor
lods
mov
cltd
lret
imul
hlt
sbb
cwtl
cmp
das
sub
aaa
cmpsl
loope
mov
subw
mov
out
xchg
sbb
in
sub
into
test
cli
pop
test
stos
cld
popf
push
and
test
outsb
loop
inc
fnstenv
push
fs
out
jge
and
mov
or
or
inc
subb
shl
and
test
mov
cmp
stos
mov
movsl
dec
mov
ficoml
xor
jge
outsb
das
adc
mov
in
fdivrs
data16
inc
shrl
jo
pop
inc
xor
pushf
adc
sub
add
pop
in
test
adc
sbb
into
out
ss
pop
fisttpl
outsb
add
cmp
adc
inc
jecxz
xchg
test
imul
jo
pop
icebp
js
fs
jbe
xchg
imull
add
cmpb
shrb
pop
xor
imul
inc
cmp
leave
lahf
lcall
imul
jae
mov
subb
fnstcw
jge
mov
inc
fstpl
xchg
and
rcll
mov
jmp
aam
popf
stc
or
inc
dec
mov
add
icebp
and
or
out
mov
cwtl
mov
psubd
dec
xchg
popw
adc
pop
dec
clc
sbb
iret
jb
jle
or
movb
push
pop
in
inc
jge
dec
movsb
sahf
push
ss
into
aas
testb
add
and
push
aad
in
shll
fisubrs
lock
in
daa
ss
push
or
les
insb
inc
repz
cmp
lahf
dec
inc
cmpsb
mov
cld
bound
daa
cwtl
push
inc
repnz
stc
jecxz
cmpsl
add
xor
push
insb
push
ja
dec
hlt
push
loope
gs
and
add
flds
iret
mov
cltd
movsl
into
cmp
in
cmp
out
pop
adc
jae
xor
dec
jnp
pop
jge
and
push
add
adcl
pop
push
xor
lahf
idiv
inc
push
or
jno
out
sbb
lods
mov
jo
inc
scas
loope
xchg
inc
jge
and
js
inc
leave
je
push
add
cmpsl
cwtl
test
jae
daa
movsb
or
scas
jmp
mov
shrb
fwait
aad
test
xor
or
jns
mov
cmp
mov
jne
pop
or
push
or
loop
cld
mov
sbb
sub
cmpsl
aas
push
std
jbe
sub
xchg
outsb
inc
xor
dec
repnz
mov
inc
add
mov
aas
sub
xchg
jno
movsl
and
movsl
fimuls
dec
jmp
xchg
sbb
dec
das
fidivrl
orl
gs
loopne
adc
cmp
stos
inc
test
cmc
mov
clc
jg
adc
cmpsl
lock
cli
ja
call
mov
inc
and
xchg
adc
jnp
into
cld
dec
dec
aam
aas
jmp
pop
pop
jo
mov
push
stos
sub
and
ret
xchg
jg
les
adcb
mov
or
in
js
iret
mov
test
jbe
xor
mov
lock
out
jecxz
gs
dec
mov
les
sbb
cmp
or
in
out
adc
fs
pop
ja
mov
js
in
pop
mov
sub
adc
add
lds
mov
sbb
and
cmp
popa
rcll
dec
xchg
push
popa
test
je
fimuls
inc
gs
inc
pop
shrb
and
or
rclb
repz
mov
cmpsb
insl
or
adc
pop
scas
hlt
adc
pop
rorl
cmp
jecxz
int3
scas
aam
mov
sarb
add
ds
xor
addl
mov
fbstp
dec
adc
push
pop
hlt
rcl
mov
and
shll
fwait
dec
fwait
lods
push
bound
lahf
ffreep
js
or
mov
ficompl
pop
dec
aam
dec
mov
nop
sbb
lea
sbb
inc
cmp
js
adc
fxch
dec
repz
pop
pusha
dec
divb
popf
ret
mov
in
mov
and
movsl
mov
adc
jp
sarb
cmpb
push
mov
movsl
flds
jl
mov
or
xchg
sub
adc
ficoml
push
push
in
clc
sub
movsb
data16
and
lahf
sbb
cmpsb
jp,pt
mov
fidivs
in
mov
lods
inc
mov
sti
sbb
jle
cmp
xor
mov
push
sbb
add
in
inc
in
sub
out
addr16
mull
aam
mov
adc
cwtl
ljmp
cmpsb
pop
jle
mov
call
out
enter
add
lcall
xchg
adc
xor
mov
fisttpl
stos
adc
push
mov
xor
mov
mov
adc
icebp
pop
xchg
add
adc
sub
clc
inc
lahf
cmp
into
loope
lds
mov
pop
sbb
in
and
sbb
jnp
xchg
pslld
idivb
hlt
fists
paddsb
dec
sahf
pop
jmp
xor
lea
push
fimuls
lcall
addl
mov
lahf
inc
and
popf
test
jo
jg
sarl
std
pushf
mov
pop
imul
sbb
adc
inc
test
aam
and
sub
lcall
jbe
xchg
mov
int
pop
nop
lea
mov
in
into
lahf
neg
push
xchg
scas
lret
mov
or
pop
popa
sarb
ja
cmp
mov
movsb
mov
jno
jb
push
popa
dec
jge
jl
jg
lock
push
andl
test
pop
push
dec
call
cmp
out
int
mov
sub
negl
or
fcomps
mov
popf
sub
lods
cmp
sbb
popa
movsl
cli
add
pop
xor
ljmp
mov
jno
cmp
push
sbb
fidivrl
dec
jo
es
loop
mov
adc
jno
pop
test
leave
dec
sub
cmc
add
mov
sti
nop
lahf
dec
stos
sub
fcmove
cmpsl
add
pop
mov
call
test
cmp
repnz
cmp
mov
mov
and
or
sub
dec
xchg
out
cmp
inc
lcall
push
outsl
lea
out
mov
out
pop
sbb
mov
or
das
mov
pop
adc
dec
push
fs
pop
sbb
out
outsb
dec
rclb
and
mov
jne
pop
sti
aam
ret
sbb
outsb
cmc
mov
or
or
push
pushf
mov
lahf
js
repnz
push
shrb
lahf
repnz
xor
mov
pop
sbb
shlb
ret
push
out
cmp
roll
inc
mov
aad
mov
mov
dec
jecxz
fwait
ss
cmpsb
push
in
and
mov
mov
sub
mov
xchg
aas
fwait
or
dec
add
pushf
jge
adc
mov
mov
jno
movups
jp
ja
cmp
insl
inc
ljmp
mov
jno
xchg
leave
int
cmpsl
das
mov
mov
xchg
jb
push
sub
jmp
adc
in
cmp
adc
popf
mov
mov
adc
pop
xor
iret
jp
mov
xchg
lds
mov
mov
mov
negl
jmp
inc
fs
dec
in
dec
mov
inc
stos
scas
inc
adc
mov
sub
fldcw
pusha
mov
ss
repz
sbb
test
xorb
sub
test
jo
enter
adc
push
cmpsl
pop
insb
je
add
aam
mov
pop
pop
notl
fimull
loope
mov
repnz
ljmp
sbb
pop
scas
repz
mov
loopne
hlt
loopne
jecxz
inc
push
mov
sbb
cmp
mov
icebp
push
sbb
jnp
dec
add
add
adc
or
push
cwtl
call
or
sub
repz
outsl
in
mov
es
cmp
popa
sbb
pop
pop
and
mov
fnstcw
sahf
leave
insb
mov
mov
push
mov
sub
xlat
inc
cmp
push
fwait
icebp
in
dec
pusha
cli
stos
mov
push
xchg
sub
mov
cmp
add
push
out
outsb
cld
pop
xchg
enter
lea
or
rorl
sub
fiaddl
sub
repz
inc
outsb
or
push
cmp
xor
mov
arpl
push
subl
xchg
cmp
xchg
sub
and
push
pop
dec
inc
imul
inc
scas
fisubl
aam
aad
loop
divl
mov
xor
hlt
adc
stos
lock
idiv
mov
loopne
mov
push
sti
push
pop
jbe
repz
test
and
sbb
inc
mov
repz
ds
xor
imul
mov
xchg
inc
out
lock
mov
jnp
int
mov
sub
adc
or
in
loopne
mov
fwait
mov
mov
call
loop
fldl
push
or
loope
loop
dec
and
dec
sub
mov
scas
es
adc
daa
xchg
out
shrl
jge
jle
sbb
jle
fdivl
sti
fistps
pop
push
mov
data16
xor
jecxz
xchg
add
sub
jl
add
mov
jo
inc
xchg
aad
xor
test
mov
lds
fcomip
fnstsw
and
mov
inc
and
shlb
mov
test
or
incl
sub
frstor
mov
lret
ss
cli
inc
pop
mov
or
mov
dec
pusha
push
and
mov
and
push
mov
mov
and
pop
fdivrl
dec
popf
mov
aaa
push
bound
scas
xchg
faddl
out
adc
push
and
dec
jbe
xchg
mov
jne
fstps
pushf
push
out
jnp
or
ret
lds
push
ds
insl
fstpt
jne
or
sbb
xchg
daa
fistl
ds
scas
arpl
xchg
and
test
int3
sti
lahf
xchg
scas
scas
jecxz
push
cli
mulb
shll
daa
ss
ret
sub
push
imul
out
xchg
shll
cmpsl
test
insb
aaa
jg
mov
mov
push
xchg
or
add
jmp
jb
push
arpl
or
aad
shrb
fs
adc
push
mov
sarb
sysexit
jge
jae
mov
sbb
ret
lahf
aad
sub
js
cs
les
adc
ljmp
inc
lret
imulb
roll
cmpsb
jle
sub
cli
mov
add
arpl
in
je
lcall
mov
sbb
mov
stos
fwait
mov
pop
sub
fwait
mov
and
or
push
fwait
push
cmpsl
shr
mov
adc
out
xor
jg
fists
daa
loope
inc
sarl
add
les
andb
and
xchg
and
clc
sbb
push
mov
adc
pop
js
push
mov
pop
outsl
shll
inc
pop
icebp
sbb
or
dec
test
xchg
dec
sbb
in
mov
or
shll
mov
dec
xchg
pop
xchg
or
aad
ret
decb
aas
xchg
jnp
mov
dec
fiaddl
push
out
sub
aas
mov
mov
daa
in
mov
clc
out
xor
lods
shrl
ljmp
and
leave
sbbl
les
movsl
jmp
test
mov
pop
mov
inc
or
pop
jns
ljmp
js
daa
leave
xor
dec
js
dec
loop
cmpsb
in
or
dec
pop
out
dec
in
les
int
add
push
mov
ss
lods
pop
ja
inc
mov
idivb
adc
sbb
xor
cmc
push
push
jno
sbb
outsl
dec
inc
lret
inc
and
xchg
push
dec
mov
inc
sbb
push
in
gs
mov
cmp
sbb
clc
fcoms
aaa
inc
outsb
jno
and
xchg
jg
dec
lret
jecxz
pop
mov
jbe
inc
es
cmp
jmp
dec
lds
jbe
jo
std
aad
movsl
mov
sub
inc
sbb
ficomps
fdivs
jns
jbe
in
mov
mov
or
cmp
jmp
push
xor
scas
inc
insb
inc
or
add
enter
mov
je
ret
xorl
decl
xlat
push
in
dec
shr
push
fsubr
jg
dec
inc
xchg
setne
push
and
xchg
or
sbb
je
push
xor
pushf
push
inc
mov
push
pop
push
xchg
cmc
add
or
xor
mov
pushw
jmp
mov
jbe
arpl
dec
and
lods
mov
add
and
movsl
pop
add
outsl
adc
mov
jnp
shrl
push
dec
rcrb
or
dec
push
and
sahf
cmp
pop
sbb
add
push
xor
ret
mov
inc
sarl
cld
pop
outsl
leave
mov
cmc
xlat
push
xor
in
jbe
mov
cmpsl
sbb
jp
sbb
push
add
in
push
fwait
cltd
or
and
ljmp
mov
sub
jns
pop
push
push
jns
xorb
fs
scas
and
xchg
shll
adc
inc
sti
popa
mov
inc
cli
inc
clc
sub
sub
push
xor
test
push
icebp
sub
mov
pop
fdivs
fisubl
dec
push
push
nop
or
inc
jb
addr16
scas
mov
cmp
mov
cld
lcall
cltd
mov
mov
cmpsl
add
jmp
push
push
sbb
push
xchg
mov
lcall
mov
mov
sub
out
shlb
mov
jbe
rclb
aad
xchg
fdivrs
cld
es
mov
push
test
or
jecxz
jo
jbe
outsb
add
das
mov
stos
imul
and
cmp
lahf
shlb
test
insb
push
push
int
inc
loope
adc
pop
push
loop
cli
inc
out
jnp
aaa
int
inc
insb
fdiv
lods
subl
mov
push
adc
stos
adc
push
push
or
pop
mov
shll
mov
out
and
inc
repz
xchg
insb
push
xor
ja
fildl
xchg
pop
xor
in
add
add
and
stos
sbb
dec
imul
mov
adcb
mov
mov
fsubrs
addr16
nop
pop
mov
outsl
xchg
stc
xchg
mov
or
fisttpll
dec
sti
push
roll
xor
pop
ljmp
xor
mov
pusha
or
or
cwtl
and
push
mov
mov
push
push
or
cmp
lcall
push
jge
mov
and
cli
cmpsb
psrld
add
into
mov
cwtl
pop
or
push
mov
push
sub
or
pushf
add
stc
push
mov
rclb
in
test
lods
cmp
pop
imul
xchg
mov
mov
cltd
adc
mov
icebp
mov
xchg
aas
push
fiadds
cmp
leave
and
and
push
push
adc
bound
inc
inc
push
xor
outsb
aas
fstl
sub
jb
sub
fdivl
jp
or
loope
dec
pop
push
stos
test
dec
pop
scas
mov
jnp
mov
jg
mov
shlb
and
rorb
mov
out
fs
ljmp
lock
or
shll
cmp
fcomps
xchg
pop
test
lods
fldenv
pop
div
xor
dec
out
fcoms
mov
sti
jmp
daa
pop
mov
orl
adc
icebp
adc
mov
pop
sbb
jae
cmc
adc
adc
inc
xor
mov
xor
ret
adc
mov
or
int3
sbb
sbb
call
stc
loope
push
push
mov
jecxz
mov
test
out
jnp
iret
shll
out
xor
or
xchg
hlt
bound
icebp
or
std
scas
cmpsl
movsb
out
andl
sbb
mov
cmp
inc
clc
dec
or
std
mov
sbbb
test
xor
shll
mov
cmp
sti
icebp
inc
pusha
jne
xchg
daa
lock
jns
enter
aad
cli
jecxz
sub
cmp
fmul
or
jge
dec
cmp
mov
ds
hlt
and
orb
shl
stos
inc
in
fwait
loope
pusha
stos
mov
aas
add
xchg
cmpsb
inc
fildl
loope
inc
jmp
shll
sti
sub
lock
adcb
push
and
jns
out
inc
xchg
lret
xlat
lods
cmp
sub
inc
xor
popa
add
and
fists
fcmovu
into
pop
cmp
orb
push
add
push
idiv
cmpsl
mov
int3
push
loop
movsb
xchg
mov
mov
mov
mov
push
inc
ret
or
out
ljmp
pushf
scas
jnp
stos
fwait
in
and
jle
cmp
mov
mov
jnp
rclb
sub
mov
test
scas
sub
adc
fs
push
adc
lea
cmc
adc
dec
fsts
mov
pop
jge
xchg
adc
jno
mov
data16
rcll
out
cmp
lret
les
mov
dec
inc
adc
leave
nop
pop
int
pushf
cs
xor
fwait
mov
fiaddl
test
or
pusha
inc
mov
pop
out
mov
stc
scas
mov
jo
std
sbb
ja
pop
std
loope
in
cmp
test
divl
lcall
fisttpll
lods
jo
imulb
in
arpl
sbb
loopne
pop
sbb
pop
in
or
cld
push
sar
xor
pop
dec
xchg
add
fadd
or
lret
scas
in
cmp
push
sbb
xlat
jae
jl
mov
dec
lret
das
outsl
push
ljmp
sub
stos
mov
sub
imul
mov
pusha
dec
add
cmp
cltd
jae
fucom
mov
push
sub
enter
push
roll
adc
xlat
idivb
stos
jl
jmp
xor
lds
add
clc
and
or
push
sbb
add
stos
sbb
xor
inc
mov
and
pushf
jg
je
loopne
shrb
fcoml
aas
mov
or
movsl
push
mov
shll
rorb
pop
xchg
add
inc
dec
sti
dec
andl
and
in
jb
dec
in
jb
movsb
call
mov
mov
dec
out
shl
outsb
pop
fcmove
je
cmp
jl
sub
or
adc
inc
in
xor
jg
cwtl
add
ror
fildll
in
or
shlb
adc
and
fcom
mov
jle
imul
addl
cmp
and
cs
inc
inc
pusha
movsl
cmp
or
mov
leave
mov
adc
xchg
mov
sahf
and
sub
jb
cmp
add
icebp
iret
xor
jns
nop
sub
cmp
imull
mov
clc
cmpsb
and
adc
fisubl
push
stos
bound
jns
sbb
cmp
je
xor
cmp
jno
mov
bound
sbb
xchg
push
movsb
dec
push
cmpsl
aas
mov
stc
fbld
sbb
mov
int
loopne
ja
mov
mov
outsb
into
cld
xchg
mov
mov
sbb
lods
les
stos
aam
cmp
lret
je
push
popf
repz
and
aad
inc
push
sbbb
aad
cwtl
les
sub
in
aaa
in
imul
cmp
in
adc
and
repnz
dec
loop
int3
sti
and
pop
rcl
mov
dec
adc
and
ss
outsb
popf
bound
enter
daa
fists
test
inc
lret
bound
aaa
sbb
fisttpl
xchg
ret
xchg
ret
imul
add
mov
cwtl
jo
jge
test
test
and
pop
out
jb
lods
jg
sbb
outsb
leave
insb
cmp
sbb
dec
push
pop
adc
cmp
mov
rolb
or
xchg
mov
mov
dec
adc
pop
bound
aad
mov
and
rorl
ja
or
add
xchg
cmp
ds
push
add
jge
xor
mov
aas
dec
cmp
cltd
and
push
out
mov
xor
out
fistl
pop
cltd
mov
insb
mov
imul
xorl
adc
pop
test
pop
sub
adc
ja
inc
or
xchg
in
sbb
jae
xor
out
pop
stos
jo
xchg
js
push
mov
insl
les
popf
out
mov
or
int3
aad
dec
pop
or
adc
mov
mov
push
fs
mov
jbe
jp
mov
imul
push
cmp
add
push
stos
add
add
lods
add
pop
jecxz
push
aad
cmpsb
adc
pop
cltd
add
jne
in
mov
cmp
and
fldl
add
fld
shl
mov
inc
or
sti
push
pop
adc
mov
stos
fistps
out
mov
cmp
incb
das
scas
mov
dec
cmp
push
mulb
mov
sub
push
out
loope
add
hlt
inc
movsb
outsl
fst
lcall
sbb
xchg
sbb
sbb
pushf
jne
test
or
jnp
test
scas
mov
mov
adc
pusha
xor
imul
push
mov
mov
aad
adc
enter
scas
or
add
sub
movsb
in
rcrb
mulb
and
test
jle
push
loope
add
scas
jg
lret
pop
subb
dec
stos
push
lock
xchg
insb
mov
in
xor
sub
lds
inc
scas
jge
imul
mov
inc
lods
test
pop
subb
push
jbe
mov
lcall
sub
shlb
orl
pop
push
sub
mov
mov
shlb
imul
and
scas
sub
push
mov
xchg
cmc
mov
insb
into
push
add
popf
mov
das
xor
sub
lahf
setae
clc
dec
xor
aaa
mov
jp
jnp
mov
lea
ja
xor
push
rol
push
outsb
jbe
popf
cmp
bound
repz
stc
xor
and
jbe
or
out
and
ret
sub
popa
pop
lea
shll
das
mov
lods
jae
ss
mov
in
mov
xchg
es
stos
imul
jle
aad
hlt
into
lock
jns
lods
adc
cmp
mov
push
inc
mov
or
popa
mov
or
xchg
jecxz
aaa
aam
jmp
mov
test
xchg
sarl
push
mov
shr
sbb
lods
orl
sbb
mov
mov
or
cmp
insb
fidivrl
lret
stos
mov
hlt
ds
das
data16
jnp
out
cwtl
lock
ss
jne
dec
xor
cmp
fcmovbe
push
testl
js
cmp
push
mov
je
sub
jle
clc
shll
adc
cmp
data16
inc
mov
jne
imulb
sub
push
sbb
sarb
push
out
repnz
inc
push
negl
mov
pop
mov
imul
xor
ljmp
enter
and
movsl
cmpps
in
add
paddq
cmp
out
xchg
loope
pop
imul
out
neg
adc
jecxz
sbb
push
ds
mov
push
std
add
lds
xor
pop
lea
xor
into
cwtl
push
add
in
or
or
and
cltd
lods
pop
inc
xor
cmp
sub
insb
fldt
pop
xchg
data16
add
mov
repz
or
aas
mov
outsl
jb
adc
xchg
fstp
xchg
xchg
in
or
test
jne
mov
add
xor
mov
cld
out
dec
inc
pop
inc
cmp
or
mov
inc
mov
shlb
pop
js
jmp
mov
adc
cmp
mov
mov
push
test
cmp
pop
xor
mov
out
inc
loopne
jg
xchg
aam
popf
hlt
push
mov
or
jo
mov
subl
imul
fbld
sub
test
test
test
ss
inc
lret
xchg
mov
fists
popf
jmp
xor
fsubrs
mov
sahf
push
push
pop
xchg
rcrb
int3
add
mov
push
ret
mov
or
ds
sbb
dec
jp
shlb
shld
push
mov
pop
xorb
mov
jg
js
arpl
int
push
sti
call
gs
jnp
les
pop
imul
das
or
sub
mov
add
push
imul
push
ja
sahf
cmp
mov
sbb
sahf
mulb
inc
jne
aaa
sbb
popf
fcomp
push
push
lret
popf
stos
mov
xchg
mov
mov
lcall
fs
popa
xchg
and
rcr
mov
jo
jae
jne
push
mov
mov
push
lods
out
cltd
cmpsb
push
js
insl
push
mov
push
jb
push
lea
push
arpl
lock
je
push
sbb
cs
xchg
loope
sbb
push
mov
adc
clc
push
mov
inc
push
shr
lods
sub
mov
imul
dec
mov
lds
enter
xchg
mov
xchg
lock
lea
xlat
outsl
lret
out
jge
adc
ja
stos
subb
mov
inc
cmp
clc
add
push
lods
xor
cmp
adc
mov
sarb
mov
mov
outsl
jns,pt
xchg
lahf
leave
lahf
pop
mov
pop
int3
dec
ud0
or
cmp
das
push
mov
cmpsl
ljmp
clc
lea
lret
repnz
xor
lods
mov
and
loop
and
mov
jo
rol
pop
pop
fucomip
stos
loop
mov
sarl
jb
lahf
je
sub
repnz
fscale
sbbb
pop
push
ss
out
mov
sub
test
insb
cmp
cld
stos
lods
cwtl
lds
cmc
push
mov
test
adc
pop
mov
push
mov
push
andb
jecxz
push
xchg
add
arpl
inc
mov
in
int3
mov
js
adc
or
pop
add
in
push
lret
pop
stos
mov
nop
pop
shrb
or
mov
adc
stos
or
mov
push
and
cmpsb
pop
adc
shll
data16
cmc
push
out
lods
in
lock
xchg
shrd
push
divl
aas
jg
adc
or
arpl
xor
hlt
sbb
aaa
in
inc
pop
je
dec
adc
fimuls
mov
and
cmp
daa
or
push
xor
iret
std
mov
and
sub
adc
mov
jl
push
int
shll
sbb
jp
std
and
cltd
sbb
sbb
mov
xor
or
lds
pop
jl
into
es
jecxz
push
lock
mov
cld
sbb
mov
mov
jns
cmc
loop
das
inc
lret
aaa
call
jnp
gs
arpl
in
pop
add
fs
sbb
sub
je
dec
jecxz
repz
clc
outsl
movsl
add
enter
aaa
std
xchg
jmp
sbb
or
push
loop
rcr
fwait
adc
mov
jne
addr16
adc
jno
int
mov
pop
int3
vpmovsxbd
divl
aam
repnz
push
imul
das
daa
push
loopne
xchg
or
imull
mov
add
pop
jns
das
gs
mov
pop
pop
ss
jp
loope
mov
das
jo
icebp
sub
out
int3
pop
mov
inc
dec
lcall
pusha
jo
int
cmova
pop
pop
jecxz
mov
notl
jg
mov
stc
cmp
fisttpl
mov
mov
push
jge
cmp
sbb
push
mov
and
and
call
or
push
xor
aas
cld
fcomps
pop
dec
jnp
loopne
adc
xor
testb
mov
outsb
adc
pop
pop
in
dec
mov
xchg
push
jb
arpl
pushf
lret
aas
push
iret
hlt
sahf
stc
ret
mov
xchg
nop
orb
dec
xchg
and
fimuls
xchg
lret
adc
pushf
in
mov
jmp
sub
cmp
cmpb
or
xchg
jne
mov
loope
stos
push
scas
mov
lcall
imul
imul
sub
sub
inc
adc
pop
in
imul
jp
sub
fdiv
lock
lods
pusha
jae
jne
outsl
xor
add
in
xor
jmp
cmp
ljmp
mov
sbb
xor
sub
or
mov
ret
sti
dec
mov
scas
lret
mov
scas
test
cmpsl
xor
subl
fwait
sbb
sub
and
pop
imul
addr16
push
adc
push
fs
sbb
notb
ljmp
insb
mov
loope,pn
aas
iret
push
ljmp
pop
cmp
mulb
inc
xor
in
xor
inc
ja
jmp
sbb
lret
sti
std
lahf
cmp
xchg
mov
sti
push
sarb
adc
lret
add
scas
sub
dec
in
lods
pop
mov
adc
push
std
repnz
push
jcxz
inc
ret
push
dec
cmp
xor
pop
hlt
js,pt
roll
aad
sbb
mov
and
stc
mov
sub
out
lock
jbe
lret
loope
cltd
push
or
mull
lock
xor
fsubrl
jg
xor
stc
jnp
fwait
vxorps
jbe
adc
lcall
lods
out
inc
cmp
femms
xchg
xchg
lds
fdivrl
gs
cmp
mov
and
sub
dec
add
fcomps
fisttps
pop
dec
div
shr
lock
inc
sti
sbb
std
sub
fisubrl
das
mov
cltd
mov
mov
or
lahf
incb
xchg
inc
ret
sbb
notl
je
jb
jge
jecxz
cmp
lret
gs
and
xor
dec
cmp
sub
sub
xchg
lahf
pop
cmp
pop
mov
jle
aas
xchg
imulb
pop
repz
jns
ja
and
int3
data16
add
sbb
fs
scas
movsl
pop
in
xchg
push
popf
push
cmp
pop
repz
call
pop
sub
sub
aad
repnz
xchg
jmp
sub
fistpl
incb
cwtl
or
mov
add
or
repz
shr
and
jg
push
xchg
push
aaa
clc
push
movsb
das
mov
aam
test
movsl
fldenv
popf
fidivl
test
or
pop
mov
dec
test
xchg
outsl
mov
jne
adc
or
mov
push
mov
mov
pop
popa
push
xchg
les
loopne
xor
sbb
loopne
lods
call
jle
hlt
add
mov
lds
mov
fs
xchg
shrb
cmp
pushf
jae
xor
or
adc
gs
inc
enter
pop
fcmovbe
int3
adc
jno
das
sti
mov
popf
mov
mov
in
je
jle
sbb
movsl
jg
inc
adcb
fstl
mov
mov
and
xchg
mov
cld
nop
ss
or
mov
sbb
inc
mov
push
sub
jge
addb
je
fstpl
inc
loope
sti
dec
es
arpl
movsl
cmp
mov
lock
in
pop
xchg
ja
ljmp
lea
into
xchg
roll
clc
inc
iret
out
and
or
rorl
fwait
jnp
xor
xchg
inc
cli
inc
jo
or
aam
dec
jge
sub
je
lret
inc
or
scas
mov
push
and
inc
mov
dec
frstor
dec
rorl
pop
loope
add
sahf
js
daa
ret
mov
mov
ljmp
outsb
jne
jo
fcmove
jge
push
dec
xlat
sti
fisubrl
sbb
dec
inc
sbb
ja
mov
cltd
jp
mov
pushf
insl
enter
xorl
mov
sbb
aas
popa
fldenv
call
mov
or
ss
mov
nop
sub
jne
fdivp
adc
sub
es
std
dec
aaa
addb
xor
stos
jp
dec
inc
imul
std
and
imul
wrmsr
sbb
scas
or
insl
fists
adc
push
mov
jno
les
adc
faddp
test
mov
call
sbb
push
sti
das
sbb
ja
mov
fcoml
xchg
xchg
test
mov
xchg
test
outsb
push
mov
lea
out
mov
int
loopne
mov
scas
jo
jno
jl
or
shl
xor
mov
cmp
xor
fidivrs
xchg
xor
adc
mov
data16
cs
xlat
repz
test
and
mov
mov
shll
rol
and
cmc
roll
or
stos
sub
mov
lret
cmpb
jmp
subl
andl
loop
addr16
push
and
lahf
rcrl
dec
lods
push
pop
scas
daa
das
repnz
mov
enter
sub
sbb
jmp
sub
stc
mov
lahf
push
inc
xchg
xchg
jp
adc
cmp
movsl
repz
and
or
fdivl
les
jg
inc
iret
inc
inc
ret
sahf
in
lds
sub
push
stos
ffreep
adc
mov
pop
pushf
push
or
mov
jbe
jbe
adc
cltd
into
clc
in
inc
in
mov
imul
out
movsb
cmp
inc
jmp
dec
pop
jbe
lods
out
xchg
mov
cmp
lock
rcll
pop
out
pop
frstor
lret
data16
jecxz
in
popa
pop
and
loopne
outsl
rorl
adc
pop
inc
add
mov
dec
mov
in
pop
psubsw
out
sub
fsubs
std
aaa
and
mov
mov
cmp
sarb
or
jb
stos
add
xchg
mov
mov
loopne
addb
or
test
jnp
fnstcw
or
jmp
mov
stc
inc
or
jb
rcrl
test
cmpb
movsb
sub
inc
sub
mov
test
pusha
mov
mov
enter
pop
sbbl
test
fld
ror
jmp
leave
imul
pusha
push
rcl
xchg
inc
inc
add
xchg
and
push
cmp
or
inc
test
mov
dec
jo
sbb
cmpsl
test
in
push
stos
lods
addr16
mov
cmp
int
popf
xor
repz
sub
lea
shlb
push
lcall
repnz
xor
dec
test
push
sbb
lahf
cmpsb
xchg
cmp
jle
das
sahf
popf
loope
pop
orl
sub
je
orl
test
dec
cmpsb
pop
adcb
orl
rclb
pop
shrl
jl
xor
ret
loop
les
xlat
insl
es
mov
dec
iret
iret
hlt
leave
and
sub
adc
mov
sbb
add
outsl
out
xor
mov
adc
xchg
in
iret
add
gs
pop
mov
sbb
mov
in
or
int3
imul
push
gs
adc
cmpl
mov
add
jecxz
and
addb
and
call
bnd
xchg
fisubrl
jge
out
icebp
cmpb
aam
pop
scas
or
adc
test
pop
push
cmp
and
rcrb
out
and
push
push
mov
scas
push
inc
leave
adc
jnp
int
pop
mov
ja
push
int3
mov
imul
or
mov
fisubrl
xchg
mov
add
mov
add
ret
cltd
push
inc
jp
movsb
jle
ljmp
cmp
jle
push
das
inc
hlt
dec
push
fidivrs
jl
cmp
setle
addr16
int3
decl
mov
fucomp
test
mov
fwait
jne
scas
sti
adc
push
rclb
pop
mov
scas
pusha
hlt
cmp
fldcw
cltd
hlt
and
cwtl
test
je
push
mov
mov
lods
insb
mov
bound
mov
adc
or
jae
pop
ret
inc
dec
xlat
sub
sbb
push
cwtl
push
xor
sbbl
xor
mov
shlb
dec
fists
mov
add
and
ja
popa
and
sub
xchg
mov
js
lcall
jp
dec
push
test
sub
clc
cmpsb
cmp
ss
cmp
fnstenv
inc
test
aas
or
inc
fisttps
je
sbb
inc
ficoml
mov
icebp
int
mov
ret
loope
decb
les
cld
rcll
sti
inc
jae
shlb
xor
cmp
cmp
fisttpl
and
inc
loop
sbb
xchg
pop
frstor
outsl
mov
jns
pop
mov
hlt
xor
push
fcomps
test
cli
int
aas
lret
in
testb
and
sbb
pop
fwait
pop
inc
inc
xchg
cld
or
jle
xor
or
mov
inc
dec
incb
pop
add
insb
xchg
add
jmp
shlb
dec
xchg
vpshaw
push
ret
jmp
xchg
ja
jle
mov
xchg
iret
aad
dec
push
jnp
xor
dec
mov
icebp
and
xlat
test
cwtl
in
push
pop
enter
push
mov
lahf
ds
lahf
jo
and
daa
pop
mov
mov
jle
xchg
popf
mov
cmp
cli
loopne
out
push
stc
adcb
arpl
test
inc
cmp
add
call
test
pop
add
sub
sbb
mov
test
jb
dec
dec
decb
adcb
dec
adc
cs
aad
jle
adc
xor
pop
int
insl
pop
xorb
or
add
xchg
in
pop
push
subb
xchg
xchg
mov
inc
add
imul
sahf
ljmp
loopne
insb
incl
lods
cmc
iret
mov
in
cmc
inc
gs
lods
pushf
lock
cli
data16
leave
dec
and
ret
pusha
repnz
adc
mov
or
push
data16
shr
sbb
xor
xorb
sbb
adc
mov
sub
pop
xlat
ljmp
daa
adc
test
cmp
jnp
cld
pushf
fsubl
push
jno
es
xchg
outsb
es
dec
cmpsb
jae
loop
out
add
outsl
loopne
push
sub
mov
jl
and
mov
mov
mov
int3
lcall
cmp
fildll
stc
dec
insl
cmp
adc
push
sbb
jp
sub
cmpb
add
pop
fmull
and
jae
les
dec
divb
int
mov
sbb
nop
les
fwait
pop
sti
pop
movsl
ret
add
stc
cmpsb
sbb
jno
and
incb
cmc
adc
es
test
icebp
cs
push
cmpsb
inc
in
pop
inc
into
mov
xor
sbb
or
dec
cmpl
fistpl
and
mov
stos
cmp
es
fcoms
mov
inc
cmp
jne
mov
jbe
rcrb
lds
scas
or
shrb
or
cmp
pop
and
or
idiv
xchg
cmp
or
pop
push
lret
mov
inc
mov
pop
push
ja
add
into
pop
dec
add
ds
aam
mov
pop
pop
loope
cmpsl
pop
mov
js
push
scas
jg
inc
aas
and
and
in
mov
fs
mov
dec
leave
jbe
stc
sbb
mov
std
xor
push
adc
mov
out
into
pushf
flds
xchg
sahf
repz
jmp
cltd
icebp
push
aad
outsb
jns
mov
in
outsl
daa
fwait
data16
in
jecxz
dec
cld
js
dec
jmp
and
lods
out
mov
cmp
lock
push
cli
mov
loope
fcoml
dec
mov
neg
inc
ja
push
and
dec
shrl
add
xor
inc
jns
sbb
xchg
add
add
rcr
jb
lds
shr
mov
jle
lret
mov
iret
jns
in
mov
in
sub
cmpb
jecxz
push
xchg
sub
clc
cmpsb
shl
jne
and
lds
jae
inc
and
push
dec
mov
int
movsb
aaa
jo
lods
std
mov
repz
xchg
in
dec
cwtl
das
mov
and
vdivps
scas
jmp
jmp
cli
jo
neg
stc
lods
xchg
icebp
fcos
mov
jbe
sarb
negb
adc
imul
loop
push
pop
xor
sbb
mov
push
aaa
mov
push
ja
cs
rol
lret
dec
inc
pop
stc
cs
dec
js
push
push
mov
aad
sbb
int
std
cmc
ljmp
mov
sarb
ror
cmpsb
sub
jg
sahf
rolb
jnp
inc
inc
and
jno
sub
jecxz
pushf
fiaddl
adcl
adc
push
je
cli
pop
mov
repz
mov
cmc
mov
pop
fnsave
dec
xchg
rcrb
sbb
mov
or
cmp
rcrb
sbb
sub
out
xchg
ja
adc
lcall
adc
scas
adc
andl
gs
lahf
repnz
fnstenv
pushf
jns
jb
aam
or
out
push
push
hlt
adc
mov
ret
enter
leave
je
shlb
push
add
push
push
dec
pop
mov
inc
lret
sub
clc
outsl
xor
fdivl
loop
std
push
fldcw
push
jae
jg
xor
jecxz
or
dec
scas
dec
lea
cli
xor
xchg
loope
push
pop
push
cmp
orl
xchg
or
cmp
sbb
loop
mov
test
xchg
icebp
roll
stc
push
mov
lahf
or
js
fwait
mov
test
and
adc
lcall
addl
iret
cli
xchg
push
sbb
repz
jnp
push
enter
in
sub
xchg
xor
pop
inc
imul
aam
int3
inc
sub
mov
sbb
jecxz
adc
mov
lds
pop
dec
xor
shrl
mov
ret
cwtl
xor
dec
dec
dec
xor
imulb
jmp
outsl
jnp
mov
push
inc
shrl
push
nop
jge
add
daa
lods
out
cmpsl
imul
pop
pushf
jns
pop
pop
addr16
pushl
sbb
jb
inc
mov
and
jo
aas
aam
imul
jbe
push
pop
jecxz
xchg
inc
test
dec
pop
xchg
jmp
mov
es
xor
in
in
xor
jle
pop
cli
ss
mov
scas
arpl
loope
lock
jns
bnd
cmp
and
es
mov
sbb
or
fsubrs
jg
push
lcall
and
rcl
sti
dec
fsts
std
decb
es
push
cs
xchg
and
aad
sbb
adc
push
out
fidivrl
scas
cmp
jno
jae
in
xchg
xchg
sbb
push
jecxz
movsb
sbb
out
loope
inc
xor
inc
out
pusha
idivl
hlt
inc
cmpsl
dec
aas
mov
rcl
aaa
fcoml
or
pop
push
adc
jle
rolb
loope
out
inc
sbb
stos
test
setnp
mov
shrb
dec
andb
push
enter
cmpsb
call
mov
dec
rolb
sbb
roll
push
cmc
mov
mov
shlb
ret
outsb
mov
aaa
push
sbb
jle
xor
mov
hlt
sbb
int3
cmc
pop
mov
cld
dec
leave
data16
mov
mov
inc
repz
jb
jmp
or
mov
inc
sbb
cmp
xchg
loop
movsl
and
xchg
sbb
xor
push
jnp
cmpsb
jp
inc
sbb
inc
nop
arpl
dec
inc
mov
mov
aam
mov
std
push
adc
inc
test
mov
lcall
or
cmpsb
into
gs
mov
adc
lcall
add
dec
cmp
jae
and
jns
pop
out
testl
leave
scas
std
ja
aad
pusha
into
jb
push
pushl
mov
test
push
or
pop
push
push
lods
cmp
mov
push
mov
in
xchg
arpl
push
dec
jno
push
mov
leave
push
je
loope
mov
ficomps
adc
sbb
mov
out
movsl
rolb
loope
mov
xor
adc
hlt
push
sbb
lret
cld
cmpsl
cmp
mov
push
std
dec
inc
aaa
xor
cs
xlat
add
ret
inc
cld
jl
inc
push
shrb
lea
jp
out
out
les
test
jne
paddsw
mov
and
in
sti
mov
or
imul
add
xchg
sahf
clc
jg
mov
xchg
js
notl
fldt
enter
movsl
pop
fidivrs
or
ss
fs
inc
cmpl
xchg
lock
xlat
sahf
add
or
pushf
mov
xlat
cld
sub
hlt
mov
ret
inc
andb
and
dec
or
xchg
movsl
out
xchg
push
xchg
sub
mov
xchg
mov
or
leave
sub
ss
xchg
lds
ror
enter
mov
sbb
and
add
fs
aam
xor
or
sub
xchg
aaa
js
xchg
cli
cltd
fmull
jbe
push
jb
std
add
movsl
stc
add
ja
mov
adc
mov
and
out
ja
stos
pop
mov
inc
fldt
or
sbb
fstl
dec
int
cmp
adc
les
and
cmpsl
xchg
gs
xchg
in
call
and
lock
notl
mov
sbb
push
daa
mov
add
fsubl
ds
inc
lock
mov
mov
arpl
xchg
pop
lcall
shrd
pop
int3
mov
lcall
ficomps
loop
add
bound
ror
xchg
push
mov
xchg
xchg
jl
and
mov
shrb
cmp
cmp
inc
mov
cmpb
dec
into
repnz
sti
insb
aad
pushf
movsb
inc
je
lods
push
xor
sbb
inc
push
sbb
cli
outsl
fcomi
mov
mov
sahf
xchg
in
pop
xchg
and
les
mov
lods
cmpsb
or
ja
mov
xor
mov
pmaxub
fdivrs
xor
repz
rclb
push
sbb
xchg
lahf
out
inc
into
mov
inc
imull
push
dec
addl
inc
shrb
int3
xorb
cltd
pushf
popa
sub
repz
and
sbb
and
xchg
jb
aad
push
cmp
adc
addb
loope
or
xchg
in
repz
nop
cmc
pop
jo
add
add
adc
mov
or
addr16
dec
imul
lcall
dec
or
in
repz
ret
sbb
cmp
pop
inc
mov
add
ja
icebp
aas
repz
xchg
jmp
nop
ljmp
mov
sub
xor
or
inc
addr16
inc
cmpsb
lock
or
mov
jge
leave
xchg
jne
mov
out
push
lds
mov
test
shr
lea
push
std
sbb
jnp
shlb
bound
cwtl
fistpl
leave
push
pop
icebp
out
pop
mov
sti
imul
pop
fdivrl
mov
mov
dec
push
sahf
test
jle
idiv
ds
jecxz
ds
sti
push
inc
add
jge
push
mov
cmp
adc
gs
jae
enter
pop
cli
push
sarb
out
mov
pusha
out
mov
leave
std
frstor
sub
ret
xor
inc
lea
adc
mov
outsl
dec
xchg
es
mov
bound
es
pop
ds
fs
xchg
imul
pop
sti
xor
xor
aad
out
push
add
mov
sbb
sti
mov
jmp
sbb
sub
xlat
and
mov
out
jbe
cmpsl
dec
and
push
shll
cld
xor
xchg
jae
ja
mov
inc
imul
pop
in
mov
sbb
xor
iret
imul
jl
pop
dec
imul
xor
sbb
xrelease
test
test
sarl
xchg
mov
mov
decb
jnp
and
pop
xchg
fnsave
mov
ret
jl
xchg
xor
pop
jecxz
xchg
xlat
in
pop
lods
insb
jns
iret
push
outsb
enter
inc
das
aaa
inc
hlt
or
push
stos
in
pop
test
sbb
jmp
pop
test
int3
je
adcb
or
dec
test
addl
mov
xchg
bound
lea
arpl
sub
js
or
dec
loop
cmp
mov
pusha
lcall
adc
push
or
inc
dec
fildl
movsl
ret
cwtl
mov
mov
pop
cmp
mov
xchg
add
decl
out
sbb
fldl
leave
sbb
xchg
add
push
cmp
insb
sbb
inc
adcb
lcall
jo
xor
push
mov
cwtl
mov
sbb
jp
imul
cmpl
rcll
pushf
ja
cmp
bnd
mov
pushf
mov
daa
ss
shrl
cwtl
and
adc
inc
stos
push
sbb
rolw
aas
imul
jle
jp
arpl
scas
push
jno
pop
sbb
sarb
push
outsl
outsl
lcall
lea
jmp
cmpsl
adc
lods
or
fwait
ss
sbb
sub
xor
inc
sti
clc
test
push
movsl
and
sub
shrb
aad
call
inc
mov
enter
in
adc
xor
and
scas
mov
add
call
and
xor
cmpsb
mov
pushl
add
sub
inc
enter
cmp
std
bound
cs
mov
nop
push
data16
sbb
sub
inc
lahf
int
sbb
outsl
sarl
add
fstl
xchg
cwtl
ja
in
hlt
pop
pop
data16
mov
mov
enter
and
int
pop
imul
in
pusha
push
add
push
fld
sbb
fstps
mov
sub
and
pop
pop
cwtl
adc
nop
sbb
mulw
into
in
add
adc
mov
loope
inc
aad
ds
mov
xlat
mov
adc
lods
sbb
outsl
add
xchg
aad
cmpsl
aam
in
aad
cmp
push
cwtl
sub
mov
jecxz
lret
out
jnp
insl
ficoml
xchg
jg
daa
mov
std
ret
jno
cmp
sbb
or
pop
pop
pop
mov
addr16
and
addl
push
jl
out
jg
dec
mov
fdiv
loopne
mov
cli
or
mov
or
mov
lods
mov
mov
popf
mov
outsl
hlt
data16
andl
mov
sbb
aas
mov
mov
mov
xchg
sub
ficoml
and
or
inc
js
mov
hlt
jnp
lods
mov
pop
pop
out
arpl
jmp
mov
pop
jbe
imul
arpl
fdivrl
jne
orb
aas
jmp
cmp
mov
sahf
lret
xchg
es
cmp
jmp
and
sub
mov
add
xchg
mov
fisttpll
add
int3
scas
jmp
and
test
push
adc
push
mov
xchg
cwtl
dec
dec
jg
lret
pop
inc
loopne
sbb
loop
test
dec
jecxz
xchg
push
sahf
cmp
aas
les
xchg
popf
xchg
sbb
cmp
hlt
pop
jg
pop
lret
mov
push
out
pop
pop
and
fs
add
add
or
adc
and
and
jo
or
fs
cwtl
push
pop
sub
sub
pop
jp
jns
adc
xchg
cmpsb
movsb
inc
loop
and
sub
sub
rcrl
jbe
stc
push
pop
pusha
mov
jmp
inc
jne
in
imul
cmp
sbb
mov
adc
lds
clc
dec
xor
enter
ret
or
cld
mov
pop
mov
les
jnp
imul
sbb
push
in
and
xchg
lds
dec
xlat
hlt
sub
data16
addb
je
decl
pop
fidivl
fmulp
imulb
push
pop
add
mov
aad
loopne
jmp
mov
lret
nop
call
push
test
into
movsl
xchg
cltd
xor
cmp
adc
loopne
ret
push
rcrl
push
ljmp
xor
sahf
popa
mov
mov
adc
lcall
lea
jb
lahf
pusha
lods
inc
jmp
pop
andl
xor
sub
mov
inc
ret
mov
rclb
push
push
out
loop
loope
icebp
sub
mov
and
into
and
push
xchg
and
enter
jnp
pop
fdiv
mov
mov
rcll
or
test
xchg
loopne
es
cli
dec
xchg
xor
push
add
mov
pop
lea
xlat
clc
dec
jl
jae
xchg
imul
in
popa
jl
sbb
inc
xchg
adc
pop
inc
inc
mov
loope
mov
adc
and
cmpb
mov
dec
mov
and
push
push
aas
shlb
stc
sbb
icebp
xor
ret
xchg
mov
dec
mov
addr16
push
in
sub
sbb
gs
ds
addr16
sbb
pusha
mov
and
lods
leave
fisttps
nop
fwait
cmp
mov
outsl
jns
rcll
arpl
jmp
popf
xor
push
cmp
mov
sbb
jae
loop
orb
sub
sbb
out
shlb
mov
lea
aaa
fnstsw
out
cltd
dec
xlat
xchg
int
jmp
in
imul
testl
pushf
jo
in
or
mov
int3
inc
inc
shr
mov
sub
lock
repnz
cmpl
mov
loopne
repz
jp
out
pop
cmp
xor
out
ficoml
and
xchg
push
mov
pop
mov
mov
inc
andl
mov
add
data16
shrb
adc
cmp
cwtl
cli
ret
add
xchg
jge
mov
and
add
leave
jnp
test
and
inc
or
jne
insl
adc
xchg
lret
jge
ret
lcall
notl
adc
sub
push
sbb
cmp
pop
jnp
in
dec
dec
or
dec
sbb
mov
push
inc
loope
repnz
out
repnz
aad
or
jmp
and
and
leave
lock
push
add
lods
cmp
dec
shlb
clc
in
inc
add
pop
test
mov
mov
push
sub
sbb
mov
lcall
icebp
loope
loope
jno
xchg
jb
lret
shlb
fwait
into
lahf
sbb
icebp
xor
pop
popf
mov
mov
mov
push
pop
pop
cmpsl
push
cld
daa
jnp
add
lods
push
lds
ss
inc
cmp
add
cmp
mov
mov
pop
mov
into
jp
ret
jno
adc
sbb
or
push
or
add
push
pop
dec
out
imul
and
mov
ds
adc
mov
fstps
iret
jmp
pusha
les
mov
jb
popa
push
ret
ret
pop
jb
outsb
xchg
ffreep
jg
mov
imulb
sub
int3
jne
and
xor
xchg
sbb
cmp
adc
iret
or
jo
les
sti
add
xor
cmpsl
mov
lahf
sub
dec
push
mov
imul
adc
hlt
lahf
iret
sub
in
sbb
sub
icebp
cmp
push
pusha
call
dec
mov
dec
add
mov
clc
dec
or
pop
int
loopne
xchg
or
jecxz
loope
cmp
jmp
and
sub
lods
adc
arpl
jl
xor
pmulhw
pmullw
jno
adc
popa
jns
mov
mov
push
lret
mull
dec
sbb
in
pop
out
fimuls
out
push
lds
mov
jae
xor
out
cmp
inc
add
mov
mov
enter
inc
cmp
ret
fldenv
xor
repz
mov
dec
fisttps
add
lahf
std
mov
repz
jg
aas
mov
mov
shlb
xchg
hlt
les
xchg
mov
pop
les
pop
call
fistpll
dec
push
fnstenv
addl
arpl
pop
and
cmpsb
mov
pop
stos
push
pop
ljmp
cmp
xor
rcll
inc
xor
sub
cmp
rcl
pop
inc
xchg
scas
jno
frstor
fnstcw
jb
mov
sqrtps
mov
add
mov
mov
aaa
lret
push
jmp
fisttpl
cmp
jae
ja
xchg
add
fsubs
enter
or
add
inc
repnz
cmp
aad
mov
sub
daa
std
jnp
rclb
xchg
dec
pop
mov
sub
xor
add
mov
outsl
xorl
dec
sti
inc
lock
xor
fidivs
movsl
sub
mov
fstp
fstps
xchg
adc
push
fsubl
dec
mov
sbb
push
xor
outsb
decb
mov
orb
sbb
es
dec
call
scas
dec
es
jecxz
or
lret
nop
adc
inc
gs
jle,pt
rcrb
daa
daa
jne
sti
dec
aas
mov
add
ficoms
jmp
sub
int
andl
sub
adc
lret
nop
push
jle
sbb
pushf
mov
in
cmp
cmc
rolb
cmp
aas
push
push
sub
push
rcrl
std
sti
rorb
push
outsl
mov
repnz
xor
mov
dec
mov
test
xchg
mov
cmp
gs
lock
dec
test
ds
orl
pushf
sbb
inc
into
add
cmp
movb
scas
or
mov
and
aas
add
jp
shlb
push
aaa
sahf
aas
sbb
inc
jmp
int
div
sub
in
or
sbb
rcl
push
bound
mov
mov
pop
inc
loope
jmp
inc
and
xchg
jecxz
addr16
in
or
out
xchg
jecxz
call
shlb
ds
jb
fists
jmp
stc
mov
add
inc
cltd
xor
popf
mov
jecxz
mov
cltd
mov
mov
jp
js
mov
in
push
or
inc
enter
push
in
andl
dec
and
popf
jbe
push
and
imul
in
mov
xchg
inc
std
dec
lcall
sbb
push
xchg
jne
sahf
roll
aad
lock
es
jp
push
int3
jmp
jae
xchg
insl
cld
push
aam
sbb
lds
and
jae
dec
jmp
jae
or
adc
sbb
push
lahf
loopne
iret
outsl
inc
movsb
js
ljmp
and
clc
jns
xchg
stc
fsubrl
call
xor
sub
jb
and
or
push
insl
and
push
int3
andl
fsub
std
cltd
aaa
jno
outsl
push
xor
ljmp
insb
mov
out
out
mov
cmp
sub
mov
aas
into
cmp
sarl
inc
fwait
and
int
dec
pusha
testl
push
int
jl
rcl
pop
pop
or
inc
xorb
lods
out
jp
cmc
lea
ret
fstl
push
sti
mov
aas
cmp
or
popa
repz
or
dec
iret
cmp
lcall
imul
add
dec
xchg
push
cli
data16
fisubl
dec
xor
lret
loopne
and
dec
shrl
sbb
loope
dec
xchg
ret
pop
add
loop
into
fiaddl
sahf
jp
mov
popa
jge
dec
pop
push
in
mov
out
mov
push
insl
cwtl
je
mov
xchg
nop
iret
mov
ret
adc
push
jb
mov
call
inc
xchg
ds
mov
ret
push
mov
sub
dec
adc
pop
sahf
sbb
cmc
repz
outsl
sub
xlat
int3
cld
loopne
jle
fmul
data16
rcl
pop
sbbb
mov
xchg
xor
pop
adc
sub
sub
and
mov
pushf
cmp
pop
cld
xchg
pop
test
pop
fisubl
push
shr
inc
stc
jecxz
lods
cmp
divb
inc
pusha
pop
add
jnp
mov
push
ret
test
cmpl
scas
inc
aas
leave
mov
or
es
and
outsb
dec
popf
mov
xor
into
push
mov
xor
mov
and
test
dec
outsl
and
mov
xchg
das
sbb
cld
pushf
dec
aad
lret
scas
stc
movsb
xchg
mov
adc
ja
sub
nop
adc
gs
cmp
test
cmpsb
sbb
xor
add
outsl
addr16
aam
and
es
xchg
mov
aaa
jmp
jl
sub
inc
sbb
cmpsl
in
fs
and
and
jmp
adc
and
loopne
mov
and
jle
les
jnp
sub
and
ficompl
jecxz
ffree
add
pop
pop
aaa
mov
pushf
add
aad
mov
add
ss
sub
dec
jp
sub
adc
add
cmp
outsl
xor
nop
xor
cmpsb
mov
pop
inc
push
movsb
faddl
fsts
pop
pop
xchg
inc
shlb
popf
cmpsl
orb
pop
into
cmp
sbb
or
test
adc
mov
incb
xchg
jbe
scas
inc
jl
loop
jmp
jae
daa
fwait
dec
icebp
lahf
out
inc
push
and
jl
daa
ss
xor
mov
and
and
cmc
lahf
ss
call
sahf
pop
loope
mov
jae
and
in
sbb
enter
push
dec
xlat
sahf
addr16
pop
adc
xlat
roll
fnstsw
and
and
cli
or
js
decb
add
xchg
push
mov
aad
mov
add
push
pop
dec
mov
add
in
stos
fxch
jg
jbe
in
popa
xchg
jp
movsl
mov
jge
xchg
lahf
rcrb
xchg
mov
push
or
cli
pop
cli
sbb
push
sbb
xor
pop
or
lea
jecxz
or
xor
in
je
cmp
mov
fwait
nop
pushf
dec
addl
cmp
icebp
push
movb
insb
push
cli
jnp
jl
movsl
xlat
xor
repnz
push
sbb
xor
mov
cmp
ds
mov
adc
inc
jg
aam
adc
into
cmpsl
sub
insl
into
dec
test
loopne
divl
lea
lock
test
sub
outsl
jb
sbb
aas
adcb
adc
sbb
pop
icebp
dec
enter
xchg
leave
sbb
dec
cmpb
adc
in
mov
mov
pop
lea
xchg
xchg
ja
xor
nop
fistpl
aas
dec
popf
imul
sub
sbb
sub
in
fisttps
lds
dec
mov
jno
xchg
cmp
add
jno
imul
inc
je
and
in
jl
xor
outsl
push
xchg
in
xor
loope
xor
pop
or
dec
pop
js
test
pop
inc
sbb
inc
xchg
daa
mov
je
mov
out
cwtl
shlb
push
and
rol
jne
call
shrl
mov
cmp
sub
cmpsl
fildll
dec
ror
lds
dec
bound
testl
add
in
push
mov
out
rorl
mov
inc
cmpsl
sarb
rclb
incl
stos
loopne
push
dec
jo
stos
cli
inc
xor
stos
pushf
fsubrl
ja
jp
jno
mov
mov
lea
addr16
push
jo
repnz
int3
mov
rcr
cwtl
fisubrs
daa
pushf
dec
les
test
pushf
dec
stc
int
pop
enter
adc
cmp
jno
fidivs
inc
jnp
ret
sbb
mov
stos
dec
lret
dec
es
lret
dec
jb
ret
xchg
or
cmp
enter
jns
lock
adc
pop
sbb
out
fadds
inc
pop
js
addr16
pop
mov
fisubrs
jecxz
out
xor
rol
jp
mov
sti
dec
icebp
imul
les
subl
push
out
xchg
xchg
pushf
clc
roll
xchg
push
ret
lock
inc
or
rol
dec
dec
stos
mov
fnsaves
push
inc
push
mov
test
fimuls
and
js
and
add
xchg
mov
jmp
movsb
test
add
sarb
ss
cmp
into
loop
ja
push
hlt
pushf
addb
mov
sbbb
sub
dec
sti
movsl
dec
mov
test
jge
rclb
jg
lahf
jae
xor
or
lret
in
insl
ss
xor
test
push
sub
xor
in
push
or
jmp
lods
mov
xchg
mulb
pop
cmp
mov
leave
add
sub
jp
lds
mov
add
add
dec
mov
ffreep
sub
and
rcll
fsubrl
jnp
jbe
push
ror
outsl
inc
pop
pop
mov
movsl
test
pop
pop
fisubrl
lahf
xor
cmpsb
lret
orl
pop
test
ret
pushf
dec
pop
loop
push
or
gs
cmp
pop
pop
mov
add
xchg
jnp
out
jmp
in
shrb
sub
outsb
addl
adc
arpl
fwait
js
mov
mov
xchg
sub
out
rcl
add
add
fnsetpm(287
inc
ljmp
push
xor
add
lahf
sbb
rcrb
dec
and
jecxz
mov
mov
lret
sub
dec
jbe
test
sub
xor
sarb
mov
pop
push
ljmp
addl
sahf
push
mov
add
sarb
cmp
cld
mov
mov
inc
out
pushl
mov
lret
or
adc
mov
and
popa
and
stos
nop
and
mov
cld
mov
cmp
dec
scas
adc
inc
call
sub
mov
out
enter
testl
cld
or
cmp
jns
test
shrb
aad
sub
les
dec
shlb
popf
insb
jno
push
push
mov
rol
imul
mov
dec
and
mov
insb
mov
decl
sbb
ficoml
data16
cmp
aaa
pop
insl
push
movsb
push
xchg
popf
inc
adc
out
push
add
or
aas
sub
sub
in
push
int
xchg
or
ret
cmp
nop
out
dec
pushf
mov
mov
test
mov
sbb
push
cwtl
in
mov
mov
aad
adc
lods
sbb
movsl
jnp
push
stos
xorb
xchg
imulb
sbb
or
and
or
cwtl
out
push
jmp
in
hlt
add
mov
cld
jmp
aad
push
inc
cwtl
lret
mov
std
stos
frstor
pop
push
aad
jl
and
int3
outsb
jg
mov
or
lret
add
adc
scas
scas
popa
outsb
jns
push
jne
in
xchg
test
cmpsb
inc
repnz
mov
mov
jecxz
push
inc
test
outsb
mov
xchg
cmpsl
xchg
repnz
std
add
mov
sbb
or
dec
mov
call
or
add
push
jle
cmc
sti
lcall
gs
or
ja
push
pushf
xlat
sub
fldenv
cmpsl
dec
mov
add
push
lods
xchg
push
add
lods
xlat
movsl
aaa
mov
icebp
loopne
pop
mov
jnp
loop
cmp
push
repz
rcr
sbb
fsubrp
dec
or
gs
div
xor
inc
shlb
inc
jne
in
popf
movsl
mov
fcomi
int3
jmp
fdivs
xor
sar
or
push
pop
into
cmovne
push
into
sarb
data16
call
popf
mov
mov
fs
fnstcw
cmpsb
jb
ret
adc
clc
xor
and
inc
into
cmp
pop
mov
sarb
jecxz
fistps
mov
mov
stos
rcr
loope
test
cmpsb
pop
add
out
jmp
sar
adc
jecxz
mov
shll
shr
outsb
and
jg
lock
in
cmp
jae
mov
or
outsl
mov
adc
jg
mov
sub
jle
test
lds
stos
shlb
in
cmp
push
fcmovne
ret
inc
iret
pop
and
xor
inc
insb
mov
sub
jae
pop
test
push
xor
sub
gs
jg
test
jo
out
pop
sbb
cmpsl
adc
inc
inc
xchg
or
mov
out
push
mov
ss
hlt
push
inc
shll
adc
push
or
cmp
jle
out
push
fsubrl
jae
mov
lea
sub
pop
mov
enter
dec
add
icebp
or
aad
or
inc
dec
and
xchg
mov
int
xlat
popa
push
imul
pop
lods
loopne
in
jns
pop
cld
mov
cmpsl
test
insb
and
mov
repnz
sbb
lret
aaa
cmp
xchg
cmpsl
int3
add
dec
pusha
pop
ljmp
and
push
xor
stc
jl
mov
xor
and
ret
lods
or
jnp
mov
jecxz
aam
popa
mov
stc
mov
pop
xchg
xchg
fists
imul
xor
adc
inc
fmul
sub
insb
cmp
movsb
sbb
or
push
push
mov
cli
jg
or
jl
cmp
mov
jns
mov
pop
inc
xchg
xor
jl
imul
jl
nop
jl
push
xor
xchg
cli
dec
sbb
clc
cmp
movsl
outsb
aam
jne
mov
fbstp
push
shrl
and
js
pop
adc
pop
xchg
arpl
fcomps
jne
jae
lcall
lea
dec
sub
repnz
stos
and
cld
lods
fimull
adc
nop
fldcw
fstpl
dec
cs
or
cmpsb
popf
call
sbb
jb
mov
mov
cmp
jb
mov
mov
push
pop
ljmp
jp
repnz
ret
scas
cwtl
movsb
jo
push
push
xor
repnz
in
sbbb
adc
inc
mov
or
scas
ljmp
pop
jle
sbb
data16
or
ja
cmp
pop
imul
rcrl
ficompl
mov
rcr
in
dec
rorb
mov
insb
mov
push
stc
out
sub
inc
jb
mov
sub
cmp
xchg
testl
dec
inc
adc
lcall
sbb
ss
xor
mov
push
add
xchg
and
leave
cmpb
adc
outsb
pop
mov
pop
repz
jl
push
sub
push
push
stos
xor
push
pop
mov
jl
sub
decb
lret
sub
dec
enter
test
mov
xchg
pop
sub
dec
adc
loope
push
push
jae
rcrl
mov
and
test
add
mov
mov
push
lcall
cmp
ljmp
cwtl
pop
in
mov
jg
adc
lret
lds
ja
and
lods
sbb
arpl
mov
or
mov
adc
jbe
gs
xchg
cwtl
inc
sbb
repz
jmp
pop
das
imul
dec
scas
hlt
lcall
out
fwait
test
cmpb
mov
sub
sbb
jmp
cmp
js
inc
sbbb
push
lods
cwtl
loope
sub
jnp
lods
adc
xchg
jne
and
nop
push
and
jp
addl
jg
xchg
repnz
cmp
paddd
push
arpl
sub
jmp
sbb
lock
lds
mov
push
andl
pop
icebp
xor
pop
aad
jb
call
jp
jae
add
cmc
jns
mov
sbb
repz
ds
sbb
add
repz
in
stos
sub
lahf
adc
push
repnz
je
orb
cwtl
cmp
and
call
mov
sub
adc
loopne
jae
dec
adc
push
jnp
xchg
jle
jae
push
aas
outsb
sub
rolb
loope
dec
clc
bound
test
movsl
cmp
cmp
pop
cmpsb
inc
insl
inc
enter
lcall
clc
mov
popf
fwait
mov
es
mov
mov
shll
insb
ret
sysenter
push
dec
mov
bound
cmp
xchg
sub
push
jno
in
mov
xor
ds
cmp
jo
in
cwtl
sbbb
mov
add
adc
js
jo
push
add
std
shrl
and
xchg
cmpsb
pop
and
pop
icebp
mov
cmp
imul
fidivs
jns
adc
nop
jo
mov
sbb
xchg
mov
movsb
pop
ds
call
fisttpll
mov
mov
cmp
pop
test
mov
mov
dec
iret
shr
mov
xchg
popf
cld
mov
insb
pop
and
divl
sbb
push
shrl
lea
lods
jbe
mov
push
xchg
adc
add
dec
stos
das
jecxz
sub
repz
andb
mov
inc
inc
cmpsl
or
cmp
mov
xchg
addl
adc
sbbb
in
mov
les
jmp
pusha
or
mov
pop
mov
xor
mov
mov
pop
aas
lea
jmp
out
xlat
jbe
lahf
xchg
jp
pop
push
jo
mov
add
ret
in
cmpl
mov
fdivrl
inc
adc
cli
and
xlat
popf
or
and
xor
jmp
leave
int
pop
xor
out
les
add
inc
loopne
cs
das
fistps
mov
je
cmp
mov
sub
add
daa
mov
jno
sbb
pop
jg
pusha
inc
cwtl
dec
rcl
mov
test
pop
pushf
or
adc
mov
outsb
cmpsl
jl
shll
ja
mov
xor
cs
cmc
cmp
push
das
subl
ficoms
and
sbb
xchg
idivb
das
leave
adc
fldenv
or
insb
mov
xor
push
or
stos
pop
jmp
mov
push
and
fst
adc
stos
lahf
outsl
scas
adc
fisubrs
cltd
mov
movsl
repz
cmp
mov
imul
movsl
jge
loopne
vsqrtps
or
mov
and
mov
mov
xchg
jo
jge
hlt
call
lock
push
data16
pop
inc
mov
lea
add
mov
scas
pop
and
add
bound
push
sub
test
imul
mov
out
mov
pop
cli
mov
inc
insl
jp
fstl
mov
and
mov
adc
push
test
xchg
cwtl
or
fwait
enter
push
jne
and
adc
out
lods
sbb
xchg
and
in
add
stos
or
mov
fisttpl
mov
add
mov
xchg
adc
std
leave
adcb
outsb
aad
add
jae
cmp
push
push
fs
std
in
stos
and
or
idivb
dec
das
add
push
cmpsl
and
cli
daa
mov
in
push
xor
xchg
test
add
je
mov
xchg
stos
adc
adc
inc
cmp
into
mov
fucomip
mov
add
sbb
and
pop
sti
mov
pop
push
jmp
lahf
jnp
aad
push
test
stos
ss
fsts
lea
mov
stos
rol
les
cmp
cltd
lock
mov
cmp
dec
xchg
dec
or
xor
loopne
lea
ss
jns
rolb
js
mov
bnd
lds
lods
or
dec
inc
jecxz
sbb
sub
sub
stos
pop
shlb
pusha
je
sbb
shrb
cmpl
loope
jne
cmp
adc
cmpsl
adc
xchg
mov
insl
push
in
xorl
mov
rol
cmp
sub
dec
sbb
jmp
mov
out
out
mov
insl
and
shl
daa
sbb
out
xor
adc
sub
add
push
cltd
fs
jbe
jb
mull
sahf
stos
cmp
insb
pop
test
ds
bound
mov
rcr
cld
jb
cmp
aas
jae
dec
jae
insb
insl
outsb
push
movsl
xchg
movsb
das
andl
cmp
xchg
mov
movsb
cmp
xchg
lret
out
movsl
mov
mov
sahf
pop
test
movb
ds
pop
xchg
pop
dec
inc
xor
cmp
shl
lock
xchg
ds
xor
jmp
aas
adc
arpl
mov
xlat
jle
and
xor
pop
cltd
ret
daa
dec
jno
dec
rcrb
clc
enter
loop
subl
test
jbe
mov
out
sub
dec
pop
insb
mov
cmp
dec
pusha
stc
or
orl
mov
mov
jecxz
push
xorb
jns
cltd
mov
or
mov
xchg
out
testl
outsb
lret
or
mov
call
popa
xchg
push
lea
dec
or
inc
mov
out
cmp
and
mov
sahf
mov
push
in
sbb
xchg
mov
add
scas
add
repnz
inc
lock
and
add
jmp
cmpsb
jmp
imul
cmpsb
jg
div
pop
mov
jb
dec
clc
fs
outsb
push
mov
sahf
fnstenv
jne
cltd
test
mov
sbb
pop
sbbl
enter
xor
push
aad
cmp
movsl
push
inc
aas
cmp
aam
inc
and
mov
and
xor
jbe
or
pop
cmp
cmp
je
call
dec
cmp
mov
dec
je
imul
pusha
in
push
repnz
stos
shrl
std
gs
mov
pxor
fstpt
lcall
cs
or
sbb
rclb
out
jecxz
lret
imul
fnstsw
add
movsb
mov
orl
push
mov
sbb
jmp
fstp
sar
mov
push
idiv
lods
dec
testl
in
mov
mov
out
fbld
aad
or
adc
sbb
int
popa
out
pop
pop
inc
xchg
cld
sbbl
mov
test
ja
cmp
popf
minps
gs
outsb
sbb
daa
sbb
mov
mov
imulb
sub
mov
repz
push
cmp
pop
fmuls
and
sub
aas
adc
sbbb
push
push
and
je
loope
xchg
and
push
mov
stos
outsb
lahf
divl
jl
xor
push
or
jecxz
cs
cmp
jle
in
lcall
jle
call
pushf
dec
bound
mov
aaa
add
lea
mov
lods
sysenter
push
mov
ja
shlb
cmp
fbld
add
andb
mov
pushl
rcl
cli
adc
insl
inc
movsl
inc
fisttps
jmp
add
or
and
rolb
xchg
dec
in
imul
sahf
or
inc
jg
sub
enter
dec
xchg
push
in
xor
lds
fcoms
fmul
popl
mov
xchg
loopne,pt
adc
xchg
jecxz
inc
push
sti
add
mov
xchg
pop
xchg
scas
cmp
add
inc
xchg
aaa
into
icebp
xchg
mov
xor
outsl
sbb
adc
divl
or
jmp
cmp
lret
dec
in
adc
add
jns
mov
clc
dec
cmp
test
lcall
stos
pushf
dec
dec
inc
in
scas
outsb
out
mov
and
or
out
mov
lret
cmp
pop
jecxz
ja
testb
pop
inc
add
ret
cmp
stc
in
les
adc
jno
ss
mov
jl
adc
adc
pop
mov
and
inc
outsl
mov
mov
sarl
jbe
sbb
test
ds
pop
repz
xor
incl
jecxz
mov
cwtl
mov
loope
and
jg
sahf
sub
popf
xchg
mov
jno
adc
lods
xchg
nop
and
ljmp
hlt
popa
xlat
cs
sarl
mov
lahf
dec
lsl
test
test
imul
and
cs
pushf
outsl
dec
shl
movsb
movsb
aaa
fs
adc
imull
es
jmp
rol
lret
push
sti
xchg
or
fs
and
adc
aam
addr16
mov
shlb
and
sti
inc
ja
leave
add
hlt
sahf
nop
adc
loop
movsl
imul
mov
sub
shlb
mov
hlt
sub
movsb
add
stc
mov
mov
dec
pusha
cmpsl
test
sub
push
fcmovbe
rorl
loope
jns
dec
mov
cmp
leave
mov
fimuls
sbb
arpl
loope
mov
dec
and
add
scas
inc
adc
out
inc
int3
xchg
mov
data16
mov
fimull
mov
fistps
pop
daa
sub
xchg
lret
push
in
dec
iret
cmp
sbb
lahf
test
rol
pop
xchg
and
cmpsb
les
cwtl
aad
loop
sahf
xchg
das
mov
inc
test
or
pop
lods
icebp
xor
popf
dec
mov
sbbb
test
sbb
scas
pop
cmp
mov
mov
arpl
cltd
sbb
sti
push
sbb
or
sahf
ds
mov
jno
lock
jecxz
shl
jae
push
pop
cmp
xor
xchg
test
jge
add
outsb
mov
jmp
hlt
lods
adc
adc
adc
lods
imul
mov
mov
fwait
inc
push
mov
rcrl
and
sbb
in
cmp
or
jo
cld
mov
sbb
bswap
loop
sub
xor
les
mov
add
pop
cmpsb
push
pop
and
enter
ds
adc
pop
mov
dec
jmp
bound
and
in
negb
xor
jns
test
mov
movsb
sub
mov
cli
mov
ret
outsl
outsb
mov
shl
jb
mov
inc
pop
mov
xchg
or
mov
mov
fisubs
mov
mov
jl
aam
and
fisubl
push
ds
pushf
or
scas
jo
jge
mov
inc
lcall
dec
push
movsb
dec
pushf
cmc
mov
mov
out
xchg
push
inc
into
movsb
jns
mov
fnstsw
fs
je
xor
sbb
outsb
imul
adc
cltd
lea
mov
scas
outsl
iret
js
pop
push
xchg
pop
insb
shrl
push
mov
push
dec
in
jp
jne
cmp
mov
out
jle
xchg
inc
cltd
ss
cmpsb
add
inc
cmc
clc
fbstp
xchg
scas
sbb
icebp
push
enter
mov
fnstcw
add
ret
dec
mov
push
jo
negl
cmpsb
jb
loop
rcll
push
cmp
in
stos
mov
std
pusha
jle
sbbl
push
adc
or
shrl
test
nop
mov
inc
icebp
repnz
aam
inc
cmp
in
pop
test
mov
data16
pop
push
and
jne
outsl
adc
test
jb
mov
cmp
test
jns
push
int
ss
mov
cmpsb
popf
xchg
fidivs
sar
loopne
dec
inc
in
jnp
pop
jl
cwtl
loopne
insb
xor
ret
fwait
add
imul
cli
inc
out
ss
sbb
jne
push
jmp
lret
push
mov
ljmp
mov
loop
sbb
sbb
push
mov
jnp
stos
or
xchg
push
fcoml
mov
out
xchg
xorl
mov
sub
cld
int
mov
movsl
stos
cmp
bndldx
mov
push
cs
mov
or
out
xchg
add
xchg
stos
repz
adc
sbb
sbb
roll
aas
loopne
sub
jge
mov
loope
dec
xchg
sbb
fs
fisubrl
sbb
mov
mov
pop
lods
pop
jp
out
lcall
lea
mov
mov
sti
or
iret
mov
pop
fldl
mov
sbb
gs
repz
mov
push
and
insb
pop
outsb
stc
mov
push
mov
lahf
lcall
outsb
sub
popa
add
es
test
pushf
jge
ja
in
std
cmc
push
jle
push
adc
movsl
dec
sub
and
movsb
cltd
popa
inc
xorb
xchg
and
roll
ss
mov
jo
jle
ljmp
cmpsb
in
xchg
cmp
popa
orb
out
dec
hlt
popa
mov
dec
sbb
adc
icebp
ficompl
sub
dec
cld
aas
xchg
call
mov
in
cmp
pusha
aad
inc
sub
scas
popf
lret
sub
scas
mov
mov
add
cmp
out
ljmp
mov
hlt
xchg
jge
and
and
mov
mov
sub
cs
xchg
cltd
fisttps
mov
mov
sub
push
cmp
sbb
mov
hlt
shll
inc
je
or
pop
stc
loope
jl
mov
leave
mov
daa
pop
pop
push
roll
lods
inc
or
lret
mov
imul
fdivrl
cwtl
pop
mov
add
dec
sti
out
adc
sbb
and
cld
mov
aas
cwtl
mov
sub
jecxz
iret
push
adc
mov
jg
test
enter
push
push
mov
xor
sarb
sbb
mov
xor
mov
movsl
sti
push
lcall
mov
inc
andb
ja
mov
jo
or
xor
adc
mov
inc
xchg
lahf
adcl
xchg
stos
pop
testb
inc
mov
mov
scas
and
in
sub
std
jo
mov
adc
ret
add
pop
outsl
ja
dec
pop
pop
dec
pop
mov
bound
iret
inc
pop
sti
xor
push
mov
pop
scas
pop
jl
mov
movsb
subl
fstps
mov
cli
sbb
cmp
ss
pop
dec
sahf
dec
fcompl
dec
inc
shll
cltd
inc
stc
fiaddl
ret
addl
pop
mov
lods
cltd
pop
mov
inc
popf
cli
cmpsl
sub
pop
pop
sub
mov
frstor
lret
pop
aaa
lahf
or
stc
pop
aam
mov
push
or
cmpsl
or
pop
js
xor
push
xchg
xchg
and
mov
pop
mov
push
repz
push
inc
lret
pop
fildll
sub
test
mov
adc
iret
mov
and
pop
fistps
xor
or
mov
cmp
dec
add
addr16
sbb
lldt
push
hlt
cmp
or
inc
sbb
test
pop
cmpsb
js
sub
std
shlb
scas
push
push
cmp
add
aaa
in
add
out
xor
mov
mov
sub
cltd
dec
mov
mov
insb
and
leave
mov
xor
sub
pop
pushf
ficompl
and
pusha
icebp
stos
mov
jl
aam
mov
jnp
test
and
int
sub
pop
fdivl
sub
mov
or
fisubl
test
iret
loop
ljmp
mov
xor
sbb
cwtl
mov
loope
movsb
cs
and
and
aad
mov
int
mov
insl
mov
lcall
inc
cld
mov
pop
sti
pop
imul
and
cmp
sbb
inc
mov
insl
and
data16
sub
and
mov
lea
and
mov
enter
bound
push
in
and
lret
jg
outsb
jb
and
in
mov
imul
dec
leave
clc
pop
divl
and
out
movsl
les
mov
adc
hlt
cmp
push
mov
xor
cli
dec
xchg
lcall
add
test
or
inc
xchg
jns
add
fistpl
fcompl
xor
mov
fnstcw
add
add
cmp
mov
cmp
inc
sbb
subb
inc
test
fs
jecxz
into
stc
push
pop
scas
rcll
jo
mov
push
in
mov
push
js
push
mov
int3
rcrb
xor
sub
rcll
push
xchg
jbe
pop
outsl
xchg
lahf
mov
jecxz
test
mov
pushf
xchg
pop
cmpsb
dec
pusha
lods
insl
mov
mov
xchg
mov
aaa
fistpl
sub
jne
test
dec
or
pop
mov
adcl
ret
mov
repnz
les
sbb
add
and
push
cltd
mov
mov
and
push
adc
mov
test
rol
adc
mov
xor
lea
inc
or
inc
dec
pop
sbb
ljmp
sarb
xchg
add
loop
adc
sbb
pop
cmp
hlt
dec
push
lret
mov
sti
aam
jg
call
add
inc
cwtl
mov
leave
repz
jno
cmp
sahf
push
xchg
cltd
sahf
inc
jae
push
mov
loope
lret
clc
or
cld
movsb
cmpsb
adc
lock
or
xchg
jns
push
push
add
imul
sub
enter
add
jg
jae
add
test
aas
sbb
adc
lcall
sahf
imul
testb
inc
sbb
loop
cwtl
stos
les
adc
and
mov
push
divb
sub
out
fs
cmp
pushf
xchg
jmp
into
stos
jge
fstp
shrb
scas
pop
repnz
imul
push
prefetch
sbb
fst
in
adc
imul
push
leave
lahf
dec
dec
mov
xchg
mov
clc
add
sub
add
lret
xlat
mov
sub
push
mov
popa
push
test
and
scas
ds
sti
xor
pop
cwtl
jl
cltd
xchg
bound
jae
xchg
shrb
movsl
cld
mov
add
mov
sub
xchg
jne
mov
mov
mov
out
xor
mov
inc
data16
mov
mov
and
insb
or
mov
shll
lahf
stos
mov
out
pop
jl
mov
fisttps
test
cmpsl
xor
jae
decl
xor
insb
push
out
push
dec
sub
and
stos
cmp
imul
idivb
sub
popa
cltd
push
insb
pop
fwait
test
and
or
dec
aas
inc
and
push
add
bound
and
mov
xor
push
loopne
mov
shll
xchg
lret
xchg
add
mov
sub
dec
push
lahf
into
mov
insb
inc
daa
xchg
cwtl
in
mov
ret
sub
mov
and
loopne
mov
cmpsl
jecxz
jmp
sub
jns
scas
sbb
enter
mov
pop
fstp
imul
mov
repz
dec
sbb
fld
or
popa
daa
rcrl
aad
enter
xchg
inc
push
sti
lea
in
or
or
repz
out
es
mov
mov
popf
sahf
shrb
call
pop
les
jmp
in
cltd
mov
mov
popa
in
das
cwtl
aam
ficoml
and
inc
lret
xlat
jo
mov
sbb
lahf
lds
jmp
in
ljmp
aas
jecxz
add
lret
cld
pusha
insl
movsl
push
out
out
cli
lods
iret
lock
mov
add
andl
test
aaa
lods
xchg
cmp
jb
adc
pop
daa
mov
popf
sub
xchg
scas
jl
inc
xchg
push
mov
jmp
sahf
xchg
stos
dec
mov
pop
adc
push
out
cmp
mov
leave
dec
jle
rcr
mov
mov
xchg
outsb
jecxz
icebp
loope
js
xchg
or
cmp
dec
test
dec
cmp
pop
and
divb
pop
jo
data16
shlb
xor
repz
rol
imul
out
fadd
filds
jge
cs
mov
or
pop
scas
sub
or
xchg
jnp
scas
out
outsb
and
cmp
or
outsl
and
icebp
outsb
xchg
popf
and
add
rdtsc
mov
shrl
jle
inc
nop
repz
stos
mov
mov
sahf
sub
dec
call
push
cmp
addr16
or
inc
outsl
mov
outsb
aas
push
pop
cmc
cwtl
lcall
mov
sar
pushl
popf
xchg
xor
cmp
or
popa
sub
outsl
xchg
mov
fucom
nop
xchg
dec
loope
ret
lret
push
aam
jp
or
ja
push
and
andl
and
pusha
in
lahf
dec
test
imul
lea
movsl
cs
jo
dec
mov
cli
sub
arpl
sti
out
xchg
push
imul
sti
pop
ret
subb
daa
adcb
aas
fistpl
jbe
test
gs
pop
fpatan
dec
js
cmc
or
mov
shl
das
and
shr
mov
jp
out
sbb
mov
clc
sahf
loopne,pn
cmp
cmpsb
jne
cmp
sbb
in
leave
cmp
aas
jge
adc
lahf
ficoms
adc
repnz
mov
cmp
cmp
jp
inc
mov
movsb
aam
mov
dec
ret
pop
cltd
dec
mov
mov
stos
pop
adc
push
jb
mov
roll
imul
lret
lods
jg
xchg
or
nop
cwtl
dec
insb
cmpsl
rorb
sub
cli
pop
ljmp
dec
or
cld
decb
int
push
outsb
jb
decl
xchg
into
movsl
lods
mov
cmpl
nop
subl
dec
or
pop
test
les
pop
xchg
mov
enter
mov
or
popa
aas
sbb
mov
in
fwait
sub
out
fsts
test
jle
cmp
subl
sub
ljmp
add
sbb
jns
lods
cmpl
cmp
mov
xchg
jns
dec
jne
sub
into
mov
mov
flds
lds
dec
push
jns
imul
mov
xchg
scas
dec
push
xchg
cmc
inc
int3
cmp
addr16
cmp
aad
pop
outsb
addr16
leave
cwtl
sub
or
pop
add
jne
pop
push
outsl
push
in
test
stos
dec
add
mov
scas
lret
daa
push
out
inc
xlat
loope
arpl
sbb
and
hlt
cmc
jo
mov
in
mov
adc
lods
addr16
lds
jge
stc
jns
push
aad
sbb
pusha
call
cmp
decb
bound
lea
outsl
shll
out
pushw
fistps
in
lock
enter
or
out
call
bound
push
mov
loopne
mov
xchg
pushf
xchg
int
ja
andb
xor
imul
sub
repz
push
pop
stc
xchg
xchg
mov
mov
inc
iret
imul
out
sti
jb
jmp
jge
pop
xchg
fldenv
sarl
sahf
dec
test
adc
and
push
mov
dec
pop
xlat
mov
sub
sbb
dec
inc
cmp
lock
outsl
or
add
sahf
int3
xor
sbbb
cs
xor
shrb
mov
sub
dec
loope
pop
xchg
in
push
gs
int3
pop
repz
mov
aad
mov
dec
les
shrb
test
lahf
lock
out
push
movsl
mov
rcrl
pop
repnz
fisubs
iret
icebp
pop
js
jp
jl
inc
mov
and
inc
pop
pop
mov
mov
add
and
jno
enter
push
and
jmp
stos
subb
jno
leave
cmp
and
jns
insl
push
xor
sbb
out
sub
or
xor
pop
cmp
xchg
lcall
dec
and
mov
test
pop
pusha
sahf
mov
lcall
push
push
push
test
sbb
icebp
cld
call
push
cli
ss
enter
scas
and
test
sub
xorl
gs
fwait
push
sbb
lds
cmc
inc
cmc
sbb
pop
or
outsb
inc
xchg
arpl
lock
xlat
inc
sbb
adc
dec
pusha
stos
dec
mov
add
mov
xchg
jp
insl
cli
mov
repz
jb
imul
cmc
test
dec
pop
dec
scas
jg
jmp
mov
add
and
fdivr
rcl
sahf
xchg
mov
pop
ja
sbb
mov
test
cmp
mov
mov
xchg
test
cmpsl
sbb
xor
dec
aas
inc
or
mov
dec
addr16
lahf
mov
out
cld
fidivrs
add
clc
pop
popa
test
jecxz
lock
or
mov
test
insl
pushf
je
adc
fldenv
lods
jle
jg
inc
into
mov
xchg
lock
push
push
aas
pop
jge
mov
lret
mov
mov
add
out
stc
test
iret
xor
pop
shl
insb
insb
arpl
gs
shrl
mov
add
xor
out
xlat
imul
push
sub
xlat
mov
mov
arpl
icebp
in
aaa
xchg
jns
xor
jmp
inc
out
shr
mov
fmuls
pop
dec
mov
push
mov
scas
bound
mov
outsl
mov
inc
inc
and
inc
push
test
movsl
add
dec
divl
push
sub
jg
enter
jl
cmpsb
cmp
jbe
push
imul
jno
mov
inc
out
dec
mov
outsl
mov
jg
test
fdivl
adc
and
add
xor
sub
mov
test
cmp
push
ror
inc
push
je
outsb
and
test
inc
cmp
daa
les
lock
in
and
imul
xchg
std
add
xor
xlat
mov
aas
lods
repz
clc
aad
pop
mov
out
xor
push
push
push
cmp
enter
jo
fstl
and
shll
stos
in
cmp
cmp
sbb
jecxz
into
and
and
inc
push
test
or
inc
cmpsb
xor
xchg
rorl
mov
mov
jo
xlat
adc
aas
scas
xchg
sub
mov
cmp
pop
adc
ja
repz
int3
mov
popa
shlb
add
push
and
sub
cmp
rcll
jl
pop
xlat
pop
dec
adc
push
out
bound
sbb
ret
cmp
mov
addr16
aas
adc
lds
xchg
fmulp
and
mov
inc
push
push
lret
xor
lahf
int
sub
cmp
addr16
sbb
icebp
rorb
push
sbb
lret
jne
les
imul
outsb
mov
push
push
outsb
and
pushl
mov
int
inc
or
out
hlt
dec
out
mov
frstpm(287
xchg
cli
push
addr16
out
xlat
cmp
push
mov
insb
push
xchg
push
xor
add
push
mov
or
stos
adc
sub
push
loopne
sub
xchg
sub
sub
push
enter
pop
lahf
cmp
dec
imul
adc
inc
dec
aaa
mov
mov
pop
movsl
imulb
imul
push
xor
sub
std
dec
pop
sub
jp
adc
push
and
and
movsl
addb
pop
mov
mov
sahf
ljmp
push
inc
sti
mov
cmpl
repz
jno
subb
xor
negl
jnp
arpl
pushf
add
bound
and
out
pop
pop
mov
inc
sub
cmp
inc
shl
pop
in
add
inc
mov
rcrb
mov
movsl
mov
das
cmp
cmpsb
notb
sub
pop
and
orl
into
xor
pop
cmp
and
mov
inc
daa
js
std
add
sub
sub
decl
outsb
xor
adc
dec
mov
adc
push
test
push
sbb
fbstp
in
dec
cmp
shlb
adc
mov
lods
mov
mov
scas
jae
adcl
fs
adc
and
push
int3
cmp
jg
xor
ss
inc
pop
aad
or
mov
or
xor
in
sub
or
insl
dec
lock
sahf
dec
fldenv
sub
inc
in
inc
out
xchg
lret
fbld
add
mov
je
bound
sbb
pop
bound
cmp
adc
dec
icebp
outsl
imul
mov
push
into
mov
dec
fs
jmp
add
sbb
test
push
loope
mov
jl
push
es
mov
sub
dec
in
sbb
jl
lods
repz
xchg
test
add
push
mov
bound
stos
nop
pop
cli
xor
fldz
fwait
inc
sbb
push
adcl
ror
sbb
insl
loop
rep
xor
xor
inc
push
pop
js
loope
add
ret
mov
jl
mov
mov
cmp
sbb
sbb
dec
cs
mov
sbb
leave
add
adc
push
mov
sarb
mov
add
sbb
es
mov
std
rorl
inc
fdivrl
push
adc
sub
mov
push
dec
mov
cltd
or
or
pop
dec
mov
std
fimuls
push
stos
sub
scas
testb
cwtl
sbb
mov
outsb
jp
nop
popa
movups
sub
fwait
xchg
xchg
aam
scas
mov
mov
imul
addb
add
hlt
leave
insb
or
cmpsb
xor
setne
test
push
jmp
push
daa
mov
jne
lods
into
mov
clc
pop
iret
scas
jp
or
into
ffreep
aam
add
xor
fwait
pushf
sti
jge
mov
sub
push
mov
scas
pusha
filds
ljmp
inc
lea
dec
lea
or
inc
pusha
or
xchg
test
pop
movsb
imul
add
mov
aas
mov
mov
xor
dec
mov
insl
push
pop
mov
call
sbb
xchg
addl
insb
sub
cs
push
pop
cmc
insb
adc
and
lahf
adc
mull
in
out
inc
pop
push
xorl
rcrl
test
or
lret
or
fbld
decl
sbb
jns
add
lea
push
mov
shl
clc
pop
lock
push
aas
xor
cwtl
mov
jecxz
mull
push
int3
push
es
sbb
imul
xchg
add
lahf
inc
xchg
inc
ljmp
ljmp
data16
sub
popf
sub
add
mov
aaa
cltd
push
daa
push
movsl
adc
dec
and
mov
ficomps
cmp
jbe
roll
dec
outsl
xchg
repnz
imul
push
testb
into
dec
je
mov
mov
mull
lods
or
push
inc
std
in
loopne
imul
nop
pop
dec
pusha
and
fidivl
xchg
cmc
push
mov
aaa
mov
cmpsl
loope
dec
pop
and
mov
imul
repnz
sbb
mov
and
sub
mov
mov
sbb
mov
dec
movsl
jmp
out
inc
neg
ja
movsb
lret
and
movsl
mov
ss
adc
in
pop
mov
mov
push
movsb
xchg
movsb
pop
jae
inc
mov
les
or
mov
jo
xchg
mov
cmpsl
pop
cmpsb
jnp
outsl
cmpsl
test
xorb
setp
jo
cmpsb
mov
sahf
cmp
leave
inc
imul
jb
sahf
rolb
addr16
dec
ret
pop
daa
and
xchg
loope
sbb
adc
dec
mov
scas
andb
inc
adc
shr
fisttps
or
gs
imul
orl
lret
xchg
das
aaa
shrb
or
ljmp
idivl
aas
jl
cmp
xchg
inc
add
clc
xchg
sbb
push
adc
ds
insl
jmp
mov
aaa
mov
dec
jo
fwait
inc
adcl
mov
andb
lahf
and
push
pusha
loopne
add
push
in
adc
and
movsl
and
add
xchg
cmp
aad
sub
dec
xor
clc
stc
pop
pop
inc
dec
imul
test
jns
jnp
push
lahf
pop
cmpb
into
mov
enter
insl
jp
sbb
pop
jmp
inc
fwait
mov
sub
pushf
adc
iret
jnp
loope
sbb
jno
test
jmp
mov
hlt
add
mov
daa
jns
or
inc
mov
ret
mov
or
pop
pop
call
loopne
jo
cmc
xor
mov
loop
popa
insl
stc
cwtl
inc
aas
cmc
rcll
lret
ret
pop
mov
cmc
lret
add
ds
out
cld
dec
test
or
jo
push
pop
pop
leave
push
jnp
mov
mov
inc
stc
adc
loopne
and
jbe
aad
ss
mov
sbb
cmp
pop
pop
in
in
mov
mov
aam
lahf
sub
or
pop
pop
xchg
cmpsl
enter
cltd
mov
and
ret
mov
sbb
rolb
sub
into
push
mov
fwait
lea
test
in
sub
in
pop
inc
ljmp
cltd
mov
outsb
in
and
dec
sub
xor
and
out
mov
call
mov
push
cmp
cli
loope
cltd
mov
ljmp
dec
xchg
popa
xlat
lahf
into
repnz
lea
add
xor
or
lahf
push
dec
jno
inc
loope
scas
int3
stos
push
sbb
xor
adc
leave
sub
in
or
mov
mov
scas
ret
sbbb
xor
int3
adc
pop
mov
repz
pop
sbb
mov
decb
sub
xchg
arpl
sub
dec
jbe
mov
hlt
mov
or
loopne
repnz
dec
test
xlat
je
outsl
jne
call
nop
add
insl
jmp
xchg
shl
adc
lcall
aad
fmull
cmp
sbb
cmp
ljmp
int3
xor
adc
jle
sbb
push
mov
dec
jecxz
testl
jle
aad
mov
pop
jo
stos
lds
add
rorb
bound
lock
dec
add
negl
dec
mov
in
mov
aad
mov
mov
loopne
sbb
lea
loop
dec
call
and
lods
es
sub
sbb
add
sub
sbb
aaa
repz
pop
cmpsb
in
inc
xchg
dec
cmp
lcall
lret
inc
jg
pop
pop
cs
mov
cmp
bound
test
int3
pop
or
ror
adc
xor
sbbl
sbb
or
jns
pop
push
lods
lret
scas
jbe
mov
sbb
mov
mov
mov
pop
test
sbb
loopne
aad
add
out
int
fst
push
and
mov
pop
jp
test
or
add
mov
movsl
dec
jmp
cld
iret
lcall
aam
cmp
cmc
les
mov
xorb
pop
std
daa
adcw
or
pop
dec
adc
jo
push
and
fs
pop
jne
dec
jmp
imull
nop
enter
xchg
and
and
incb
mov
add
cmc
daa
lods
jl
jne
lods
addr16
xchg
outsb
add
mov
push
mov
cmp
je
inc
jne
xchg
mov
insb
hlt
mov
or
push
cld
pop
fdivrs
adc
jne
mov
xchg
push
mov
fcoml
mov
sahf
mov
leave
cmpsb
and
dec
push
push
dec
mov
lret
ret
add
lret
sub
scas
mov
imul
jne
adc
xor
jmp
jecxz
dec
std
arpl
add
pop
cmp
jno
sarb
imulb
cli
cmp
cmp
dec
in
sahf
sbb
roll
pop
mov
dec
xor
xchg
shlb
jmp
add
aas
or
mov
mov
out
adc
popf
mov
sub
inc
xor
scas
bound
into
inc
dec
pop
arpl
inc
popa
aaa
mov
sub
js
repnz
in
and
or
pop
push
cld
or
imul
ljmp
rorb
insb
xor
ds
push
mov
dec
into
ror
inc
mov
popa
test
cmp
test
out
loopne
aad
cmc
pinsrw
nop
das
repz
pop
jmp
shl
cmc
pop
pop
out
inc
stc
push
rsqrtps
inc
ret
lods
mov
imul
outsl
std
inc
mov
in
std
cltd
inc
mov
pop
jb
lcall
out
push
push
xor
sub
pop
call
mov
pop
jno
jge
dec
fnstsw
mov
and
popa
ja
outsl
xchg
sub
xchg
jge
mov
int3
xchg
jge
xlat
inc
dec
and
nop
dec
fcoms
ror
adc
call
push
test
add
jbe
lock
cwtl
xchg
pop
pop
sbb
enter
inc
leave
jo
loope
xor
xor
xchg
mov
in
xchg
mov
orl
mov
leave
xchg
pop
rclb
sub
mull
cld
mov
push
or
add
cmc
mov
popf
cmovs
pushf
sarl
cmpb
mov
push
xchg
xchg
adc
pop
lods
scas
inc
mov
or
lea
lret
pop
iret
outsb
fcmovnbe
bound
shrb
inc
mov
push
lahf
call
cli
sub
push
jno
xchg
push
jge
mov
enter
or
lds
in
int3
test
adc
push
and
stos
ret
push
or
xlat
mov
add
cmp
lock
cltd
push
popa
fldcw
ret
xchg
xchg
fcomps
je
pcmpgtb
jge
xchg
mov
adc
push
in
scas
nop
popa
shlb
jg
push
sbbb
jg
or
roll
mov
push
outsl
xor
mov
out
lods
pop
jb
test
cmp
jge
int
and
cmpsl
cld
loop
jns
adc
mov
add
sub
push
jmp
xlat
xchg
mov
jne
dec
cmp
scas
add
out
notl
dec
sbb
nop
into
dec
inc
xor
mov
testb
sbb
leave
clc
sub
sub
add
adc
xchg
xlat
fisttpll
repnz
jmp
adc
lahf
push
add
rcrl
test
xchg
lds
push
jl
test
stos
xor
mov
jns
add
jno
xchg
imul
cltd
cmp
inc
loopne
push
xchg
dec
or
pop
push
jle
jle
push
xchg
mov
daa
lds
add
pop
pop
sbb
mov
xor
mov
lock
mov
lcall
jge,pt
pop
in
pop
xchg
mov
and
cmp
sub
rclb
fsubrl
xchg
in
mov
cmpb
mov
mov
mov
xor
mov
imul
and
add
mulb
lods
xchg
adc
stos
jbe
mov
fs
xchg
adc
stc
aas
ret
enter
test
xchg
pop
dec
adc
aad
dec
sub
add
push
lea
mov
es
push
sub
mov
iret
fcoms
fldcw
ljmp
jns
lahf
push
sahf
repz
loop
sbb
mov
cli
sbb
mov
push
je
sarl
fisubs
and
push
bnd
mov
add
add
mov
push
nop
aam
lret
stc
cli
pop
sub
js
outsl
jnp
pop
xor
aad
ds
aad
lods
dec
sbb
das
outsl
adc
jbe
push
cltd
pop
xchg
xchg
xchg
lock
dec
inc
shll
sarl
xchg
aaa
mov
loope
jg
cmp
adc
aam
xor
xchg
ret
in
jnp
and
nop
daa
xor
rcll
popf
std
sub
pop
jae
xor
pop
in
loope
dec
aam
in
in
lods
push
push
pop
dec
xchg
and
andl
popf
sub
nop
cmp
cli
outsl
jae
sub
mov
outsb
jge
and
xor
hlt
mov
push
cwtl
adc
and
cmp
pop
out
dec
cmp
popf
stos
out
fcompl
outsl
test
dec
in
xlat
mov
xchg
arpl
icebp
jp
sbb
inc
jmp
xchg
cli
fs
mov
mov
inc
xchg
sbb
mov
push
clc
xor
cmp
mov
insb
aam
lods
jne
mov
add
jno
andl
cwtl
sub
lahf
scas
bound
jle
dec
jmp
push
adc
aad
inc
fbstp
xchg
or
mov
loope
mov
imul
and
jns
jns
pop
dec
adc
pop
jp
sub
fdivrl
or
sbb
mov
and
adc
jb
pop
and
mov
adc
mov
pop
sbb
xchg
mov
jne
sub
sub
add
mov
ret
xchg
leave
test
push
inc
and
stos
jns
js
bound
sub
sub
jle
loope
dec
das
jle
fcmovne
test
jno
mov
mov
and
je
mov
mov
dec
jp
out
sar
xor
pop
int3
test
sbb
lods
pop
daa
sbb
and
or
imulb
inc
sbb
or
mov
add
ret
mov
or
repz
int3
ds
and
aas
jnp
andl
push
sub
scas
in
aam
and
mov
mov
sub
sbb
sub
call
cmc
mov
lds
lods
out
loop
aam
adc
outsl
popa
sub
call
cs
aam
fidivrl
sub
push
jmp
faddl
enter
outsl
pushl
xchg
adc
dec
es
add
jle
sbb
jo
das
mov
fsubrs
push
xchg
adc
xor
sub
aaa
movsb
cmp
or
add
arpl
cmp
jmp
sub
pop
add
dec
xchg
arpl
xlat
sti
out
xchg
cmc
fdiv
clc
pop
int3
push
out
stos
insl
fldcw
dec
dec
dec
jg
push
lcall
pop
or
xor
cli
icebp
int
sbb
insb
pop
cmc
icebp
adc
push
icebp
repz
sbbl
ret
mov
popf
cmp
cwtl
dec
fisttps
dec
cs
xor
dec
insb
inc
cli
xlat
jmp
jmp
cmp
sub
mov
lods
jb
out
or
xchg
dec
push
cmp
inc
lahf
out
push
test
lods
mov
pop
cmp
sbb
or
mov
out
pop
jo
push
mull
jbe
add
fdivrs
lret
mov
dec
fisttpll
xor
sub
aas
or
sbb
inc
repz
arpl
pushf
jbe
or
add
adc
rcrb
ja
sub
fistpl
inc
imulb
les
inc
popf
mov
shll
pop
popf
add
sbb
aad
int3
inc
mov
in
or
push
fs
jbe
and
int3
add
inc
sub
out
jg
in
mov
mov
mov
inc
lock
nop
and
sti
xchg
and
ret
mov
dec
popa
out
test
out
mov
mov
xchg
pop
std
movsl
sub
add
bound
xor
cli
fnstenv
out
rorl
in
sbb
mov
add
pop
mov
out
inc
pop
jnp
inc
mov
call
cmp
rcll
repz
pop
mov
jae
adc
leave
test
jmp
dec
lret
jge
cmpsb
jns
and
lcall
mov
sub
fwait
mov
mov
addr16
lret
call
pop
call
mov
mov
vmovss
inc
outsl
call
lds
aaa
sub
sbb
xchg
cld
and
xchg
mov
int
test
push
test
loop
repnz
clc
popa
test
inc
shrl
adc
cmp
aaa
mov
repz
test
push
test
jg
push
inc
addb
sub
ret
jno
sbb
push
cs
orb
popa
and
popa
fisttpl
inc
push
push
je
pop
inc
aad
and
ja
xchg
xchg
sbb
sti
loop
or
ret
mov
mov
aam
or
push
cmpsl
cmp
stos
fcomps
fadd
dec
sbb
call
movsb
lods
inc
or
sbb
inc
jo
sbb
adc
sbb
push
xchg
outsb
and
daa
push
ja
push
jne
stos
daa
or
adc
cmp
cmp
mov
mov
lods
aam
sti
inc
rorb
ret
lahf
dec
scas
cmp
mov
lahf
out
jbe
imul
in
pop
mov
roll
int3
xor
iret
bnd
jbe
xchg
repz
sbb
arpl
push
data16
pop
jge
std
push
sbb
dec
outsb
mov
dec
fs
cli
je
in
scas
outsb
or
dec
stos
pop
test
js
fwait
or
fimull
and
xchg
pushf
in
sbb
xchg
hlt
leave
pop
shrl
mov
in
leave
jno
stos
rcll
or
sbb
jo
pop
cmp
jg
inc
sub
mov
aas
in
mov
push
adc
and
jb
jo
addr16
sub
xchg
sbb
insl
dec
push
jg
lahf
lds
ret
or
dec
shrl
push
xor
stos
add
dec
outsl
stc
xchg
insb
shlb
cmpsb
test
xor
lcall
mov
mov
sti
mov
lods
fsubrl
push
inc
es
xchg
cmp
repnz
xchg
mov
imul
and
xchg
lahf
jle
mov
sbb
in
rclb
and
stos
jl
aam
inc
sbb
xor
in
movsb
mov
and
dec
xor
clc
ljmp
icebp
movsb
repnz
cmp
sbb
push
dec
outsl
clc
cmp
and
cwtl
jb
sub
pop
rcrb
adc
ja
es
incl
sbb
lock
adc
adc
push
cmp
mov
mov
in
roll
out
popf
and
push
xor
jmp
fsts
push
out
mov
inc
and
cmpsb
push
outsl
lods
je
lock
sbb
pop
jae
int3
movsb
cli
jae
mov
inc
andl
adc
repz
jmp
pushf
xchg
imul
adc
fists
inc
cli
stos
fisttps
and
gs
mov
inc
mov
or
les
dec
push
pop
lods
pop
or
pop
ds
pop
xor
cmp
jge
test
stc
cmpsb
loopne
adc
imulb
jns
push
fildl
sbb
rcll
lds
inc
jae
pop
iret
in
mov
pop
outsb
inc
and
mov
jge
xchg
mov
insb
add
mov
xorb
jno
jmp
loope
gs
and
jge
pushf
inc
in
aam
jp
enter
inc
jae
int3
xchg
inc
xchg
sahf
inc
mov
idivl
mov
xchg
push
int
jge
cmpl
xor
mov
xor
outsb
dec
sahf
sub
dec
mov
xchg
out
mov
cmp
ljmp
ja
ljmp
mov
sub
call
xor
jnp
addr16
mov
dec
ljmp
xchg
testl
jno
cld
dec
lcall
xlat
nop
xchg
data16
outsb
gs
xchg
push
mov
test
xor
xlat
push
movsl
lds
into
in
mov
sbb
ss
jae,pn
loopne
scas
or
inc
jp
or
push
mov
inc
inc
pop
shrl
dec
dec
scas
cli
ljmp
scas
cmp
fs
dec
shlb
jp
sub
or
hlt
out
sub
fldcw
movd
cmc
js
push
adc
bound
lds
fwait
sbb
pop
outsl
sbbb
pop
push
xor
jnp
sbb
lret
push
adc
repz
xor
inc
add
mov
dec
fdecstp
cmpb
negl
xchg
movsb
mov
pop
shll
adc
daa
inc
je
stc
rcrb
xchg
or
pop
cltd
mov
xor
inc
imull
jo
addr16
pushf
pop
outsl
adc
or
fsubl
imul
sti
out
mov
rol
sahf
out
and
jnp
jnp
dec
mov
pop
aaa
aaa
cmp
icebp
mov
fwait
rcr
lret
sbb
mov
jne
sbb
or
sbbl
cmc
add
mov
fwait
jp
push
dec
hlt
js
shlb
pop
xor
ds
mov
inc
es
decb
insl
movsb
lods
or
out
dec
fs
mov
cli
icebp
and
popa
and
fcmovnb
jns
inc
sub
adc
adcl
cmc
adc
scas
fwait
xor
leave
out
cli
sub
cld
fwait
aam
loope
jg
and
jne
jge
jge
sbb
ret
push
jae
and
jo
mov
lea
lret
adc
mov
bound
aad
mov
shll
pusha
inc
jno
aad
mov
test
popa
mov
pop
popf
jnp
stos
lret
lods
jno
outsl
push
call
ds
inc
rcll
lods
pop
out
push
push
loope
cmpsl
mov
pop
in
jl
rorb
sub
mov
addl
enter
fnstenv
mov
shrl
pop
pushf
mov
mov
inc
lret
xor
mov
loop
mov
rcr
pop
mull
stos
jl
stc
hlt
movsb
fsubl
ret
sub
aas
fcoms
sahf
ljmp
cs
std
mov
and
mov
or
cmp
int
pop
sub
mov
in
pop
inc
sbb
out
inc
push
mov
adc
hlt
and
aas
jmp
mov
ret
jbe
cs
dec
push
out
mov
push
xchg
shll
loope
cmpsl
jl
test
ja
cmpsb
filds
mulb
leave
cltd
mov
cmpsb
xchg
leave
mov
cs
fiaddl
lods
pusha
mov
mov
cmp
imul
fwait
add
lahf
sbb
shlb
test
cwtl
popa
hlt
jge
mov
scas
out
ja
rcl
cmpsb
and
lea
cmpsb
cli
add
dec
dec
dec
test
int3
insb
dec
xchg
jnp
jmp
test
push
pop
or
xor
loop
sahf
cld
push
imul
push
aam
gs
dec
lods
mov
aaa
push
std
inc
loop
xor
xchg
dec
jecxz
cltd
sbb
push
sub
or
aaa
int
jl
pop
cmp
fidivl
pop
and
cwtl
repz
ret
fisttps
lods
sarb
movsl
add
mov
sbb
lcall
jg
push
jmp
out
cmc
sarb
loop
ljmp
stc
xchg
out
sbb
sub
sub
mov
inc
adc
je
stos
xchg
dec
addl
mov
push
in
mov
mov
inc
sub
in
mov
lret
cmp
jle
or
aad
and
sbb
mov
mov
inc
sarb
ret
cmp
mov
fisubl
popf
icebp
lea
adc
mov
and
popf
cmp
js
sub
sbb
out
movsb
or
xchg
mov
pop
outsl
mov
shl
sarl
inc
bound
int
xor
fimuls
cmc
cmpsl
inc
pop
lds
mov
sbb
in
sbb
mov
and
cmp
push
and
xchg
insb
adc
dec
addb
insl
insl
pop
or
mov
lret
bound
sbb
mov
add
xchg
inc
roll
pop
add
mov
es
sub
xchg
imul
gs
repnz
cmpl
je
aad
inc
cli
shlb
call
sub
pop
aad
data16
dec
sti
lods
andb
stos
leave
mov
loopne
imul
mov
ja
mov
xchg
ds
mov
cmpsl
and
fists
dec
ret
jo
call
mov
jecxz
cmp
fldlg2
stos
icebp
lods
rclb
test
movsb
inc
out
loop
pop
inc
push
push
cmp
push
inc
ljmp
mov
xchg
xchg
xchg
push
notb
xor
mov
and
js
fcompl
pusha
out
inc
daa
aam
aad
mov
lret
gs
test
sbb
in
xchg
outsb
xchg
ss
imul
inc
stos
xchg
cmpsb
sahf
dec
cmp
sub
shr
cmpsb
cmp
ret
or
push
sub
xchg
sub
pop
mov
add
sbb
jp
iret
pop
adc
mov
rcll
rorl
mov
repnz
outsl
out
imul
mov
mov
inc
jmp
xchg
add
scas
movsl
int3
mov
out
into
cwtl
sub
add
pop
mull
sub
sti
pop
out
push
das
and
adc
adc
outsl
or
les
add
sub
stc
jg
cltd
xor
in
mov
ja
jnp
lea
scas
add
pop
push
dec
mov
stos
sub
ret
lds
push
mov
ss
xor
dec
mov
inc
aam
mov
fistpll
sbb
pop
nop
pop
add
fstl
negl
fwait
js
fstpl
fcmove
inc
fisttpl
movsl
sbb
inc
dec
lcall
adc
and
outsl
ret
in
shl
jne
std
lea
sub
xor
sub
rorl
cmp
or
xchg
mov
jne
bound
pop
sbb
jmp
or
lods
test
mov
test
sbb
fmuls
mov
nop
cli
notb
push
sub
call
fisttpll
les
mov
cmp
fistps
dec
pop
stos
fnstsw
imulb
hlt
test
sbb
fwait
jecxz
or
ss
mov
cmp
mov
dec
rorl
lret
repnz
shll
sbbb
fsubrp
imul
outsb
cmp
xchg
jle
jmp
ret
push
frstor
pop
stos
add
lods
add
jg
movsb
and
push
outsl
xchg
adc
pop
test
pushf
out
mov
pop
add
pop
xchg
inc
inc
and
xor
inc
xor
jbe
pop
push
push
lret
daa
adc
and
pop
xchg
int
ror
sub
pop
repz
mulb
es
cmpl
pop
add
loop
cmp
xchg
fs
mov
inc
out
fisttpl
aas
adc
int3
xchg
in
sub
xor
mov
jmp
mov
lods
scas
and
cld
cmpsb
imull
pop
cltd
push
add
fnstenv
aas
jmp
pop
mov
mov
je
mov
test
repz
xchg
and
push
lods
jge
imul
inc
cmp
sub
loopne
xor
shr
imul
mov
jg
mov
mov
fistps
jno
pusha
addr16
mov
inc
dec
sbb
pop
xlat
pop
add
fistps
sbb
dec
or
jl
mov
cmp
mov
mov
push
ja
lea
imul
fwait
cmp
jle
mov
jo
test
subb
les
mov
sbb
or
divl
aam
movsb
cmp
imul
data16
shlb
fwait
into
mov
mov
mov
lcall
pushf
adc
mov
iret
jecxz
addr16
insb
push
rcrl
mov
mov
pop
test
out
addl
jmp
inc
lds
rorb
popf
cmp
sub
sub
dec
xchg
jmp
imull
mov
das
insl
xchg
pop
shll
cmp
xor
dec
mull
xlat
inc
fisttps
fnstenv
and
pop
lea
cmpsl
int
cmp
daa
inc
and
dec
fistl
inc
push
and
les
add
jbe
or
in
sbb
in
je
es
cli
addr16
inc
jno
mov
ss
mov
pop
mov
frstor
std
mov
pop
mov
roll
testb
push
mov
int3
aam
xchg
ja
imul
inc
cs
or
xchg
das
stos
add
xchg
loope
into
pop
aas
jbe
stc
jmp
cmp
jbe
push
inc
mov
sbb
daa
mov
mov
jecxz
or
xlat
inc
pop
xchg
mov
mov
mov
cmc
mov
enter
xlat
out
daa
pop
outsl
sbb
jbe
ss
loop
adc
adc
xlat
xor
add
cld
or
push
ret
movsb
push
jecxz
mov
or
adc
incb
sbb
fiaddl
xchg
dec
jl
dec
in
call
pop
push
mov
cmc
inc
jb
mov
jge
xchg
cmpb
mov
add
xor
jns
push
repnz
inc
cmp
and
popa
xlat
aaa
jnp
jmp
dec
aaa
sbbb
jecxz
lret
xor
bound
int3
pushf
das
lahf
movsl
add
push
rorl
int
xchg
xor
mov
jne
push
sbb
imul
shll
shrb
sbb
leave
inc
xor
mov
add
mov
outsl
scas
subb
popf
movsb
fnstcw
jae
mov
loopne
and
sbb
xchg
cld
cmp
adc
xchg
mov
outsl
movsl
and
push
jmp
call
cli
mov
sbb
xor
mov
jo
loop
fs
lcall
mov
sbb
mov
scas
adc
loope
cmp
adc
jb
cltd
push
pop
mov
rclb
mov
sub
inc
pop
loop
cmp
bnd
jg
mov
dec
xor
push
mov
xchg
sahf
add
jo
je
insl
scas
mov
sbb
test
sub
xor
pop
jecxz
dec
mov
iret
push
mov
mov
fptan
xchg
fwait
jno
jne
les
sbb
xlat
mov
inc
fwait
sub
aad
pop
out
xchg
jnp
mov
cmovae
or
pop
rcl
add
clc
adc
cs
pop
fldl2e
bound
push
test
dec
xchg
mov
fsubrl
mov
mov
es
insb
dec
nop
mov
scas
pop
arpl
lahf
lea
jecxz
in
outsl
cmp
ljmp
cli
push
pop
cmpsl
mov
into
loopne
mov
cmp
or
cwtl
jecxz
int
adc
stos
ret
cld
cltd
mov
pop
inc
sub
pop
inc
dec
mov
adc
sub
jbe
jecxz
pop
insb
pop
or
orl
push
ss
mov
push
xor
fists
dec
xor
lret
inc
mov
jns
out
scas
sub
fidivl
add
or
xor
push
cmp
and
lds
sub
pop
add
pop
dec
cmpsb
add
mov
data16
push
insl
mov
add
cmc
cmp
mov
add
and
mov
out
shll
shrl
popf
repnz
sub
stc
into
mov
out
jnp
insb
ret
sarl
sbb
sti
xchg
mov
mov
int3
js
fisubrs
dec
stos
rolb
add
pop
into
push
xchg
sub
adc
xor
lret
mov
push
movsb
lret
in
jne
mov
jp
lret
hlt
push
sub
repz
push
loope
and
pop
fs
loopne
and
cmp
mov
mov
jns
inc
sbb
dec
insb
out
fwait
icebp
and
xor
inc
bound
bound
jnp
iret
cmp
in
xchg
add
adc
wbinvd
popl
rolb
mov
jns
sub
push
mov
lods
lea
jmp
lret
shrl
popf
rcll
add
or
movsb
data16
sti
lods
mov
sub
push
in
jno
xchg
and
stos
icebp
xchg
test
daa
ss
sahf
mov
fisttpl
dec
mov
dec
push
fisubrs
and
xchg
aam
cmp
enter
scas
add
xchg
fisubs
bound
jno
sti
cli
mov
sub
push
fldenv
je
xchg
xor
and
cmp
push
xchg
add
stc
aam
push
stc
lds
xor
jb
fldcw
shll
sub
xchg
push
fldcw
into
bnd
sub
scas
outsl
pop
sub
xchg
dec
jbe
lret
adc
data16
add
lock
pop
push
aaa
cmpl
pop
mov
sbb
add
mov
dec
insl
aaa
jecxz
fs
and
jmp
lods
and
outsl
jns
pop
xor
addr16
std
aam
or
push
popf
je
mov
fcoms
adc
in
movb
sbb
cmp
andl
sbb
cmp
jmp
dec
mov
jmp
sbb
mov
mov
sbb
mov
and
mov
jecxz
pop
cmp
inc
mov
jmp
add
cmp
xchg
ljmp
fs
lret
cmpsl
lock
adc
dec
push
jg
inc
xchg
clc
inc
xlat
iret
insl
sbb
clc
fmull
xchg
out
lock
cmpl
and
add
repnz
flds
xor
enter
addl
xchg
push
arpl
sbb
mov
mov
int
cmpsb
sbb
mov
and
ss
daa
out
lea
outsl
sbb
nop
leave
dec
jb
adc
and
jne
sub
pushf
imul
in
cmpsb
jle
sar
add
mov
aad
add
test
push
sbbl
mov
or
sub
outsl
shrl
cmpsl
fsubr
leave
sar
sahf
loop
inc
jl
sbb
and
in
lret
rolb
test
push
leave
adc
adc
icebp
adc
xchg
test
mov
cmp
and
rol
sbb
jns
movsb
cmp
fmull
or
pop
repnz
jg
inc
sub
jge
enter
test
jmp
sub
lcall
call
scas
sub
push
pop
mov
mov
je
or
fistpll
fsubs
inc
rcl
rcrb
nop
jne
fldl
hlt
test
mov
mov
inc
adc
rclb
dec
or
loope
fsts
sbb
push
enter
add
cmp
mov
stos
ss
lock
es
divb
mov
sbb
push
adc
andl
clc
jns
cli
ljmp
cmp
dec
out
movsl
mov
mov
adc
cltd
call
add
mov
mov
fwait
addr16
sub
test
addr16
sub
cmp
pop
xchg
int3
pop
push
adc
cmp
mov
jo
fadd
ljmp
adc
mov
dec
mov
aad
and
cld
aad
mov
fs
and
push
mov
sahf
loop
icebp
and
rcll
repz
mov
xchg
popf
clc
cmp
lock
and
out
dec
xor
lea
add
adc
rol
fildll
mov
mov
and
fdivr
addr16
rclb
jae
gs
dec
xchg
jno
les
popf
xchg
push
dec
jns
pop
jnp
push
xchg
xchg
js
sbb
das
jno
xchg
rep
xorl
jg
lds
loopne
lret
lcall
mov
inc
popa
insl
aam
push
js
or
mov
mov
jb
mov
ficoml
sub
push
imul
in
cmp
add
cld
lret
xchg
jp
andps
test
nop
icebp
inc
js
mov
jp
cli
or
into
scas
out
popa
test
jno
ja
sub
sbb
xchg
lahf
add
shrl
jo
add
popf
imul
sbb
cmpl
cmp
push
xchg
push
dec
cli
popa
pushl
enter
sub
iret
movsl
adc
faddl
inc
xor
sub
insb
sbb
call
xorl
dec
inc
adc
lds
ds
push
adc
fmuls
movsl
dec
pop
sub
in
insl
cli
in
mov
jp
mov
lahf
int3
aad
fs
notl
rclb
test
divb
adc
pop
idivl
jb
scas
adc
push
loope
jge
imul
ds
sub
repz
and
add
loope
sub
mov
sub
gs
aad
js
mov
add
sbb
jg
enter
jnp
fisubrs
mov
or
or
cmc
pusha
jl
pop
in
fisttpll
test
int
fisubrl
sub
mov
mov
push
jnp
stc
outsl
or
pop
xor
and
mov
sub
push
idivl
sbb
mov
scas
adc
push
push
cmp
inc
hlt
inc
dec
ljmp
pop
mov
jmp
sbb
int3
mov
js
sti
in
outsl
fisttps
add
sub
jo
sbb
inc
fwait
dec
out
stos
fwait
out
sub
insl
xor
xor
je
out
and
add
mov
xorl
test
pop
pop
aam
pop
mov
jno
cmpsl
jle
subl
adc
scas
sbb
into
fmulp
add
and
repnz
test
add
dec
addr16
push
jg
xchg
arpl
xorl
jno
xchg
fcmovnb
cwtl
dec
sbbb
xor
adc
cwtl
add
pop
and
jbe
xchg
loop
lods
mov
daa
aam
jo
mov
mov
pop
xrelease
sti
xor
push
je
xor
pop
cmpsb
jbe
mov
push
sub
loope
shl
mov
ret
pushf
sbb
cmp
icebp
stos
jb
sbb
cld
loop
lret
fwait
ret
mov
addb
into
arpl
xor
mov
clc
pop
out
ror
or
cmp
inc
xlat
mov
out
push
out
aam
popf
lods
rcl
dec
cmp
push
inc
mov
movsl
and
sbb
push
int3
mov
pop
xlat
leave
add
imul
enter
add
lcall
lods
bound
call
sbb
bndstx
mov
mov
rorb
push
xchg
daa
out
lret
xor
jmp
cld
in
xor
xor
sub
add
add
mov
addb
iret
popa
stos
arpl
mull
xchg
fnstsw
dec
outsl
adc
push
dec
out
rorl
testb
in
int3
fsub
or
outsl
adc
push
movsb
cli
iret
dec
dec
repnz
pop
sarl
notb
cmp
dec
lock
cld
mov
lret
out
or
xchg
mov
sub
jbe
cmp
mov
mov
incb
sbb
mov
inc
leave
and
loope
fbstp
mov
xchg
jmp
loopne
outsb
dec
xor
cmc
dec
mov
cld
cltd
mov
out
adcl
and
push
xchg
sub
ss
jb
out
fs
rclb
test
xchg
je
xlat
adc
mov
xlat
add
pop
dec
mov
outsl
xlat
jle
cmp
push
loop
lods
xchg
test
xor
dec
call
in
movsl
pop
fadd
and
adcb
dec
xor
mov
mov
rorl
shl
mov
imul
fs
cmpsl
ja
lods
or
test
cmp
xor
in
mov
inc
xchg
or
push
and
mov
mov
sub
rolb
inc
mov
pop
insb
add
jnp
jmp
out
sub
xchg
pop
notb
jge
mov
iret
icebp
xor
scas
jecxz
xor
push
cwtl
enter
adc
xor
scas
push
repnz
xchg
adc
xchg
aas
xor
mov
imull
repnz
dec
mov
jae
iret
pop
add
scas
pop
fisubrs
and
lods
sbb
cmp
cmp
sbb
mov
xchg
pop
and
and
dec
cltd
add
imul
js
shr
lret
jle
mov
loope
push
push
add
mov
mov
adc
fmul
jo
xchg
adc
mov
rol
xchg
scas
sub
xchg
out
sub
sub
fcompl
rolb
and
and
outsb
mov
roll
cmp
dec
sarb
call
sar
inc
pop
rcrb
push
cli
mov
jg
push
sahf
repnz
lahf
mov
dec
inc
jp
dec
jl
ret
inc
push
cmpsb
push
mov
dec
xchg
shrl
and
pop
dec
jo
sbb
jno
das
push
mov
pop
testb
andl
fisubl
jnp
out
cmovae
bound
popf
mov
leave
xchg
fs
sub
pop
ss
aad
addr16
sbb
jp
push
xchg
pop
or
mov
push
sub
in
xchg
fnstsw
out
repnz
rol
mov
xor
cmc
mov
cmp
std
call
fbstp
xchg
decl
jg
rcll
mov
pushl
push
push
imul
jb
pop
jb
mov
lcall
fs
shlb
mov
push
jl
push
pop
nop
xchg
add
outsb
cltd
inc
push
adc
push
hlt
test
insb
xor
jmp
xchg
or
inc
pop
test
pop
and
lea
mov
xchg
jg
icebp
int3
fs
rcr
add
sub
jnp
xor
ljmp
aas
hlt
mov
sub
push
xchg
out
movsb
fcomp
gs
sub
mov
lahf
cs
out
pop
or
divb
cmc
iret
pop
mov
sub
jmp
or
dec
xor
mov
sbb
repz
pushf
pop
shll
or
loop
js
lret
dec
jg
and
clc
pusha
mov
fnstenv
leave
inc
ss
jb
jl
push
mov
sbb
int3
outsl
add
xchg
xor
mov
cmpsl
pop
inc
cmp
mov
in
insb
arpl
out
bound
jmp
cmp
jb
lds
push
lcall
sti
mov
ja
aam
mov
arpl
mov
jae
or
aas
mov
fistpl
ret
scas
lcall
push
adc
mov
xor
pop
mov
repz
in
jp
sbb
push
leave
into
push
add
pop
dec
mov
cld
hlt
or
mov
sub
lret
popf
gs
outsb
push
push
fcmovne
fldcw
and
pop
inc
loope
jp
xchg
mov
xor
enter
outsb
mov
xor
xchg
scas
popa
sub
inc
mov
mov
xor
pop
xchg
jl
cmp
mov
adc
jno
fs
rcr
push
cmp
int
fcmovu
inc
xchg
loope
into
jmp
sbb
sub
push
test
pushf
call
pop
push
jbe
lock
push
push
ror
sub
mov
jo
mov
fs
push
ljmp
ficompl
daa
fnstcw
fadds
xor
pushf
add
mov
push
sbb
mov
aad
pop
popa
mov
stc
daa
cmpsl
add
mov
jg
mov
sbb
dec
insb
push
mov
and
xchg
sub
call
ljmp
pop
mov
inc
and
ret
stos
mov
push
xlat
sbb
out
inc
ds
or
xchg
or
popf
icebp
sub
xor
mov
and
or
pusha
dec
add
test
cmp
out
pop
and
push
adc
pop
sbb
xor
inc
inc
lret
shll
sbbl
out
fucom
mov
sub
mov
daa
xchg
mov
insl
cmp
add
sbb
push
jno
movsl
ljmp
loope
dec
inc
inc
lret
popa
test
sub
cmpsl
jbe
in
lds
sub
or
test
cwtl
jg
stc
xor
pop
into
faddl
daa
lods
test
inc
stos
fs
jge
jo
stc
cli
mov
notl
fbld
xchg
imul
xchg
shll
inc
sbb
push
push
mov
sahf
int
outsb
call
cli
xor
mov
dec
push
xchg
js
fstpt
dec
cli
mov
lcall
stos
mov
mov
dec
dec
push
fsubr
sub
mov
mov
stc
cmp
std
and
mov
dec
sahf
xchg
xchg
je
sbb
lods
jae
addr16
pop
mov
mov
adc
cmp
es
lret
shll
jbe
out
xchg
and
pusha
inc
je
scas
pop
mov
xchg
push
xor
adc
push
fwait
out
int
xchg
add
xor
xchg
or
aad
jnp
fidivl
int3
mov
dec
repnz
fsave
inc
lods
mov
or
es
fwait
je
data16
outsb
mov
mov
les
or
lret
pop
pextrw
mov
dec
xor
jno
or
cmp
pop
nop
gs
inc
dec
or
inc
std
push
mov
fisubs
sub
out
ljmp
adc
punpckldq
inc
bound
mov
add
dec
hlt
cli
dec
sbb
lods
or
mov
xchg
sub
pusha
nop
in
jns
pop
pop
mov
mov
loop
inc
push
out
lret
test
push
or
xchg
loop
pushf
int
test
mov
jae
dec
pushf
lds
loopne
dec
mov
movb
aad
cli
into
cli
lea
and
sub
mov
fstpt
clc
dec
lahf
rcrl
sbb
mov
xor
sub
imul
dec
les
out
in
xor
inc
sub
sub
sbb
sahf
mov
arpl
fwait
push
int3
fidivl
cmp
pop
test
iret
cmpsl
sbb
lret
pop
push
rorl
out
imul
addr16
rcl
mov
stos
pop
sbb
cmp
pop
lods
xor
xchg
or
xchg
lods
jmp
negb
out
out
mov
int
popf
push
mov
pop
jg
es
add
jge
popf
fisttpll
cmp
xchg
pushf
add
outsb
popf
nop
rcrb
aas
push
jno
push
rol
xchg
out
mov
pop
sub
sub
mov
mov
xchg
add
sub
sub
call
pop
pop
insb
icebp
in
int
dec
mov
xor
stc
cmp
pushf
push
sub
mov
inc
test
daa
scas
test
sbb
call
cmp
jnp
lods
push
adc
inc
mov
aas
popf
push
jmp
sub
jbe
hlt
sub
xor
pop
sbb
testl
jo
fstpl
push
lret
pop
or
mov
je
mov
inc
mov
mov
movsl
mov
nop
xor
cmp
fiadds
jbe
mov
xchg
inc
rclb
stos
insb
cmp
sahf
mov
push
pop
popa
jbe
xlat
inc
lret
sub
ljmp
fwait
add
dec
pop
cltd
or
stos
or
dec
pushw
scas
enter
mov
je
dec
add
xchg
test
push
mov
or
fistpl
push
jl
gs
rolb
pop
scas
in
fnstsw
or
push
and
sbb
fwait
add
jbe
out
rolb
jne
cli
jmp
push
add
xor
lahf
testl
pusha
mov
xchg
push
insl
testb
push
bound
stos
jge
fiadds
bswap
fwait
inc
sub
adc
in
add
jns
icebp
jae
daa
out
aas
lds
xchg
mov
inc
std
dec
outsb
jecxz
inc
push
divb
mov
test
mov
pusha
inc
stc
sahf
mov
bt
es
sub
lcall
loope
mov
sahf
push
xchg
mov
loope
fisubrl
and
push
enter
mov
add
in
sbb
lahf
mov
xor
sub
cmp
ret
inc
je
xor
cld
mov
shll
dec
mov
dec
and
fcomps
xchg
push
adc
std
sahf
push
cs
lret
nop
cli
loop
cmp
or
xor
daa
mov
lods
and
lcall
mov
push
pop
ljmp
lea
stos
sub
ds
add
inc
mov
jecxz
sbb
das
mov
pushf
adc
xchg
mov
jecxz
lret
pop
das
mov
daa
mov
scas
cmc
jmp
cmpsl
cmp
cmp
and
mov
dec
notb
fsubrs
fdivl
iret
xor
pushf
leave
mov
and
xchg
in
adc
sbb
lea
popa
lcall
es
push
shll
dec
pop
adc
sbb
ret
adc
lock
mov
jns
jge
mov
sbb
sbb
add
sub
ja
std
and
mov
and
adc
or
lcall
add
push
cmp
stos
jo
call
cs
adc
mov
jns
add
pmaxsw
lcall
addr16
call
add
in
and
mov
icebp
gs
cmpsl
add
mov
xchg
jo
or
sub
mov
and
xor
loopne
add
mov
mov
xchg
mov
cltd
adc
lret
cmpsl
jae
sahf
loopne
scas
outsb
imul
or
xor
jecxz
fstpt
pop
jbe
mov
or
outsl
and
jmp
out
nop
and
lret
lds
scas
cmpsl
lods
pop
sbb
ret
pop
not
push
cmp
rcl
outsl
pop
mov
or
scas
inc
push
xor
sti
mov
fstsw
jnp
cmp
clc
lret
aam
jo
aas
iret
xchg
jp
jmp
cltd
lea
push
fstl
mov
ja
es
mov
out
test
cmp
insb
in
xchg
cmpsl
mov
mov
stos
pusha
and
jle
popf
adc
add
int3
sbb
mov
pop
loopne
ja
fbld
insl
rcr
jmp
hlt
out
mov
add
adc
shrb
fnstsw
insb
mov
xchg
insl
push
xchg
adc
jno
popw
les
pslld
sbb
ja
and
or
sbb
or
out
sub
push
cmp
xor
cmpsb
pop
pop
push
pop
mov
and
sbb
test
pop
dec
fcmovu
cltd
shrb
hlt
lcall
dec
mov
xor
sub
jl
out
mov
cmp
cmc
movsl
jo
sbb
loopne
mov
pop
add
xor
shll
adc
pop
shlb
daa
jg
ror
lret
jo
adc
inc
or
adc
pushf
scas
push
xor
mov
ja
outsl
mov
in
and
xchg
int
xchg
test
inc
or
jge
leave
iret
xor
aam
adc
insl
mov
mov
sbb
mov
sub
ss
jo
xchg
loop
jmp
fstpt
mov
nop
inc
mov
and
mov
mov
imul
push
pop
push
nop
mov
daa
mov
jg
ja
push
mov
sub
lds
pop
rcrb
xchg
lret
imul
out
outsb
dec
sub
js
pop
cmp
adc
clc
mov
fwait
nop
add
xor
jo
inc
shrl
jnp
mov
aaa
ret
cwtl
nopl
sbb
insb
inc
insl
fsubrs
mov
aas
xchg
and
pop
sbb
lds
push
repnz
fildll
loopne
adc
in
out
int
add
imul
loope
xchg
push
jge
pop
cld
mov
mov
mov
testl
lds
dec
cli
ret
paddq
rcrb
add
or
cmp
in
les
fisttpll
sarl
mov
sub
sub
loope
jge
sub
jp
push
inc
jbe
repnz
es
fst
leave
popa
mov
je
pop
test
or
pop
sub
repnz
jno
data16
out
ret
cmp
cld
stos
mov
mov
in
pop
fildl
dec
mov
jp
out
dec
mov
dec
fidivrs
call
mov
imul
outsl
jle
lds
inc
mov
in
arpl
nop
jns
inc
dec
rcr
les
add
arpl
adc
mov
repz
add
ds
mov
adc
pop
xor
inc
sub
pop
fcomip
icebp
mov
sub
dec
mov
data16
mov
adc
pop
sbb
paddsb
mov
pop
test
ror
or
pop
fnsave
mov
insb
jmp
rclb
jo
sbb
dec
testl
fcmovne
shrd
cmpsb
xchg
cmp
mov
in
outsb
cmp
jmp
pop
adc
mov
inc
insb
adcb
xor
mov
movl
movsl
int3
iret
jae
imul
fsubl
sub
sahf
int
or
jno
push
or
addr16
out
stos
jno
je
cmp
xchg
fisubrl
sbb
dec
dec
popa
pop
outsl
pop
movsb
bound
clc
mov
mov
pop
aam
pop
cmp
cmp
dec
repnz
lea
xchg
into
inc
pop
adc
jmp
addb
cmp
jg
mov
mov
mov
dec
call
aaa
pop
adc
ficoml
jnp
mov
mov
cmpsb
ljmp
sahf
into
mov
pop
cmp
cli
inc
sub
dec
les
inc
fxch
adc
repz
inc
scas
and
sti
inc
lods
jns
adc
cmpsb
jb
sbb
js
cwtl
movsl
int3
out
dec
jp
adc
lods
adc
xchg
test
aad
mov
xchg
dec
testb
aad
inc
mov
andl
andb
sti
jae
repnz
mov
jmp
lea
arpl
lahf
lret
pop
add
xor
pop
cmc
mov
insl
lods
stc
fisubl
sbb
lea
pop
aad
cli
or
pop
jle
jp
cs
xchg
mov
repnz
mov
out
cpuid
inc
fwait
pop
push
insb
and
adc
inc
sti
xchg
add
test
inc
ja
adc
sahf
jnp
mov
cli
les
pop
mov
cmp
out
xchg
movb
das
add
sar
mov
repz
cmpsl
jae
and
fwait
cmpsl
inc
lea
scas
push
pop
mov
daa
sbb
mov
pop
aaa
lds
into
sbb
fcompl
jae
xchg
dec
mov
test
mov
cmc
adc
insl
stos
inc
test
rolb
out
rorl
push
sub
movsl
pop
or
add
jge
and
fwait
mov
mov
push
lods
mov
call
pusha
lahf
adc
pop
sbbl
mov
xor
call
mov
outsl
test
xchg
push
mov
push
or
cmp
dec
inc
xor
stc
or
in
xlat
std
stc
lcall
out
aad
in
xchg
aad
bound
dec
les
lds
.byte
enter
