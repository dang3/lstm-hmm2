add
inc
add
push
push
je
imul
pop
adc
add
add
add
add
aam
inc
add
sub
add
sub
add
sub
add
sub
add
sub
hlt
sub
adc
add
push
dec
bound
arpl
fcoml
dec
add
adc
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
push
call
testb
je
movzwl
mov
add
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
cmpl
jne
push
push
call
mov
cmpl
jne
xor
mov
jmp
mov
mov
mov
mov
mov
xor
mov
add
mov
lea
mov
mov
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
ret
mov
mov
ret
mov
push
push
add
mov
mov
call
mov
cmpl
jne
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
ret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
jne
mov
call
mov
mov
mov
mov
mov
add
jmp
add
cmp
jne
mov
call
mov
mov
add
mov
mov
cmp
jne
mov
mov
call
test
jne
xor
mov
pop
pop
pop
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
mov
add
cmp
jb
cmp
jne
mov
mov
add
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
mov
add
mov
add
cmp
jne
mov
mov
sub
jmp
mov
add
mov
mov
mov
mov
add
sub
mov
sub
mov
mov
lea
mov
call
test
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
add
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
cmp
jge
mov
jmp
add
and
mov
push
push
push
push
call
mov
mov
test
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
movl
push
push
push
push
call
mov
mov
test
jne
add
and
mov
push
push
push
push
call
mov
cmpl
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
mov
movl
xor
mov
mov
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
cmp
ja
cmp
jae
mov
mov
mov
mov
add
cmp
jbe
mov
push
push
mov
mov
push
call
test
jne
movl
mov
call
mov
mov
mov
cmp
jne
xor
mov
cmpl
je
mov
mov
mov
sub
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
lea
lea
lea
mov
mov
and
mov
add
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
push
mov
sub
push
mov
push
call
test
jne
xor
mov
jmp
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
lea
lea
lea
mov
mov
add
and
mov
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
mov
sub
push
mov
push
call
test
jne
movl
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
add
and
mov
mov
jmp
mov
cmp
jg
mov
mov
mov
mov
call
cmpl
je
mov
mov
add
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
mov
mov
cmp
jne
mov
mov
call
cmpl
je
lea
mov
mov
call
cmpl
jne
lea
mov
mov
call
xor
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
lea
mov
add
and
mov
mov
jmp
mov
mov
mov
cmp
je
mov
cmp
jne
mov
cmp
jne
mov
cmp
jle
mov
mov
sub
mov
mov
mov
add
lea
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
lea
mov
mov
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
mov
mov
cmp
jne
mov
cmp
jg
mov
mov
mov
call
mov
cmpl
je
mov
mov
mov
add
mov
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
xor
mov
add
pop
pop
pop
pop
ret
nop
push
add
mov
lea
and
mov
add
and
mov
mov
cmp
jbe
mov
mov
sub
mov
call
lea
mov
mov
call
mov
test
je
lea
mov
mov
call
mov
mov
mov
mov
cmpl
je
lea
mov
call
jmp
xor
mov
add
pop
ret
mov
push
mov
push
xor
push
push
pushl
mov
push
call
cmpb
je
push
call
mov
call
mov
call
mov
call
push
push
call
mov
cmpl
je
mov
mov
xor
mov
inc
cmp
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
movb
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
ret
nop
push
mov
add
cmpb
je
xor
push
push
pushl
mov
cmpb
je
push
call
movb
mov
push
call
xor
mov
mov
mov
jmp
push
push
mov
mov
push
call
mov
mov
mov
mov
cmp
jne
mov
call
mov
call
mov
call
mov
mov
cmpl
je
mov
mov
mov
mov
push
call
mov
mov
cmpl
jne
xor
pop
pop
pop
mov
push
cmpb
je
push
call
push
call
ret
jmp
jmp
pop
pop
pop
ret
nop
push
add
cmp
jne
mov
mov
mov
mov
mov
cmp
jg
cmp
jne
test
jns
add
sar
mov
xor
mov
jmp
test
jns
add
sar
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
lea
push
push
mov
mov
mov
jmp
mov
mov
cmp
jb
mov
add
cmp
jb
mov
mov
mov
mov
cmp
jne
movl
xor
mov
mov
pop
pop
ret
mov
push
push
mov
sub
lea
mov
cmp
jl
mov
movl
mov
call
pop
pop
ret
cmp
jl
mov
or
mov
mov
mov
pop
pop
ret
incl
mov
sub
mov
and
sub
add
call
ret
mov
cmp
jl
or
mov
add
call
ret
cmp
jl
mov
or
mov
add
andl
ret
push
push
push
mov
sub
mov
mov
and
cmp
je
movl
mov
and
sub
mov
xor
test
je
movl
testb
je
mov
sub
mov
sub
mov
mov
cmp
je
movl
mov
call
add
mov
pop
pop
pop
ret
push
push
push
mov
xor
mov
test
je
and
add
add
mov
test
jne
mov
mov
call
mov
mov
add
add
andl
mov
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
xor
mov
call
mov
cmpl
je
mov
mov
mov
mov
add
mov
lea
sub
cmp
jg
mov
sub
mov
sub
cmp
jge
mov
mov
sub
add
mov
mov
call
jmp
mov
mov
sub
lea
call
mov
test
je
mov
sub
mov
call
mov
mov
mov
add
mov
add
cmp
jbe
lea
sub
call
mov
mov
call
mov
mov
add
pop
pop
pop
pop
ret
push
push
add
mov
mov
mov
mov
mov
mov
add
sub
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmpl
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jl
mov
mov
call
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
pop
ret
nop
cmpl
jle
cmpl
jge
movl
jmp
mov
or
mov
mov
mov
add
call
xor
mov
xor
mov
ret
mov
push
push
push
add
mov
lea
movsl
movsl
mov
call
lea
mov
mov
call
mov
test
jne
xor
jmp
mov
cmp
jae
call
sub
add
mov
add
mov
add
cmp
jae
call
add
mov
add
cmp
jne
sub
mov
call
subl
mov
mov
mov
mov
mov
add
pop
pop
pop
ret
lea
push
add
mov
mov
lea
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
ret
nop
push
push
add
mov
mov
mov
lea
mov
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
pop
ret
lea
push
mov
xor
mov
test
jns
add
sar
cmp
jg
mov
mov
mov
cmpl
jne
inc
cmp
jne
mov
pop
ret
lea
push
push
push
push
add
mov
lea
mov
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
cmp
je
mov
mov
jmp
cmp
jg
mov
call
mov
cmpl
jne
mov
call
test
jne
xor
mov
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
jmp
mov
call
mov
mov
mov
sub
cmp
jl
mov
add
xchg
call
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
add
mov
mov
andl
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
mov
cmpb
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
add
and
cmp
jge
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmpl
je
mov
add
mov
mov
andl
mov
mov
mov
mov
cmp
jne
mov
xor
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
call
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
call
jmp
mov
call
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
nop
push
mov
add
push
mov
xor
mov
cmpb
jne
call
test
jne
movl
movl
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
sub
mov
mov
mov
test
jne
movl
jmp
decl
mov
and
sub
sub
test
je
mov
sub
mov
cmp
jl
test
je
movl
jmp
mov
sub
mov
mov
cmp
je
movl
jmp
add
mov
mov
mov
call
and
mov
add
mov
mov
cmp
jne
sub
add
cmpl
jle
call
xor
mov
call
jmp
mov
mov
test
je
and
cmp
jge
movl
jmp
mov
orl
jmp
mov
mov
mov
cmpl
je
mov
cmpl
je
mov
cmpl
jge
movl
jmp
mov
mov
add
mov
call
mov
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
mov
push
push
push
push
add
mov
add
and
cmp
jge
mov
sub
mov
mov
mov
and
mov
add
mov
cmp
jne
mov
jmp
cmp
jle
mov
sub
mov
cmp
jne
sub
add
cmpl
jge
add
sub
mov
jmp
mov
mov
testb
jne
mov
mov
mov
add
mov
call
cmp
jl
mov
add
mov
or
mov
mov
mov
add
call
jmp
mov
jmp
mov
sub
mov
cmp
jne
cmp
jg
sub
add
cmpl
jge
mov
add
add
xor
mov
mov
sub
add
mov
mov
and
or
mov
mov
mov
jmp
call
mov
add
mov
mov
testb
jne
mov
mov
mov
mov
cmp
jle
add
mov
sub
jmp
mov
call
sub
cmp
jl
mov
add
mov
call
jmp
add
mov
add
mov
mov
andl
jmp
mov
mov
test
je
and
add
mov
mov
mov
call
test
je
mov
add
mov
jmp
xor
jmp
mov
sub
add
mov
mov
and
or
mov
mov
mov
add
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
mov
mov
cmpb
jne
call
test
jne
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
call
test
je
mov
jmp
mov
call
mov
mov
sub
mov
and
sub
cmp
jge
mov
cmpl
je
mov
mov
xchg
call
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
lea
push
push
mov
test
jle
mov
call
mov
cmpl
jne
mov
call
jmp
xor
mov
mov
pop
pop
ret
lea
push
test
je
call
mov
test
je
mov
call
jmp
xor
mov
pop
ret
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
mov
call
ret
push
push
mov
mov
and
cmpl
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
xor
mov
mov
xor
mov
mov
call
pop
pop
ret
mov
and
mov
jmp
ret
push
mov
call
mov
pop
ret
push
push
mov
mov
mov
cmp
ja
je
sar
js
rep
mov
and
rep
pop
pop
ret
lea
lea
sar
js
std
rep
mov
and
add
add
rep
cld
pop
pop
ret
sub
fnstcw
fnstcw
fwait
orw
fldcw
fistpll
fldcw
pop
pop
pop
ret
mov
push
push
mov
xor
mov
cmp
jb
cmp
ja
and
cmp
jne
mov
call
mov
test
jne
mov
call
mov
test
je
mov
call
jmp
cmp
je
mov
call
mov
pop
pop
ret
mov
push
mov
mov
mov
shl
mov
mov
sar
js
rep
mov
and
rep
pop
ret
nop
push
push
push
mov
push
test
je
xor
xor
mov
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
inc
cmp
je
cmp
je
test
je
jmp
test
je
sub
cmp
ja
cmp
ja
lea
add
add
mov
inc
test
jne
dec
je
test
jge
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
mov
inc
jmp
mov
mov
inc
test
je
cmp
jb
sub
sub
cmp
jbe
sub
cmp
ja
add
cmp
ja
shl
add
mov
inc
test
jne
dec
jne
neg
pop
xor
mov
pop
pop
pop
ret
lea
jmp
mov
push
xor
push
call
cmp
jne
push
call
and
cmp
je
cmp
jne
mov
mov
pop
ret
nop
push
mov
add
movzwl
mov
lea
push
push
push
push
push
call
test
jne
xor
push
push
pushl
mov
movl
lea
push
lea
push
push
push
push
mov
push
call
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
mov
and
mov
and
or
mov
mov
pop
ret
add
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
add
add
fninit
fldcw
ret
mov
push
mov
mov
call
call
mov
mov
call
pop
ret
mov
push
mov
mov
call
mov
call
pop
ret
nop
add
mov
ret
mov
call
test
jle
call
ret
nop
test
je
mov
mov
call
ret
push
push
push
mov
mov
stos
mov
xor
push
shr
dec
rep
pop
and
rep
mov
mov
mov
test
je
push
mov
test
je
mov
jmp
cmp
je
pop
mov
add
mov
test
je
mov
mov
add
dec
jne
cmp
jne
pop
pop
pop
ret
mov
push
push
mov
mov
mov
mov
mov
test
je
call
mov
test
jne
pop
pop
ret
push
xchg
jmp
mov
mov
test
je
movzwl
push
add
repnz
je
pop
mov
test
jne
pop
ret
pop
add
sub
mov
pop
ret
mov
mov
ret
mov
ret
lea
ret
lea
ret
lea
push
mov
or
je
cmp
jae
push
mov
call
pop
je
mov
pop
jmp
pop
mov
jmp
ret
nop
push
push
push
test
jl
call
xor
lea
mov
mov
mov
movl
mov
mov
pop
pop
pop
ret
jmp
mov
mov
test
je
mov
mov
push
call
pop
call
call
ret
lea
mov
call
ret
mov
push
mov
mov
mov
call
mov
pop
ret
mov
test
jg
ret
push
push
mov
call
pop
pop
ret
nop
cmpb
jbe
push
push
push
push
call
ret
nop
cmpb
je
push
push
push
push
push
push
push
call
add
pop
ret
lea
push
push
push
push
call
add
pop
ret
lea
cmpb
jbe
push
push
jmp
ret
lea
test
je
mov
cmpb
je
cmpb
jne
movsbl
inc
inc
jmp
add
add
ret
mov
cmpb
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
cmpb
jbe
push
push
push
push
push
call
pop
ret
push
push
cmpb
jbe
push
push
push
push
call
pop
pop
ret
mov
mov
testl
jne
cmpl
mov
mov
je
cld
call
mov
test
je
call
test
je
mov
mov
cmpl
je
call
cmpb
jbe
cmpb
ja
lea
push
push
call
cmp
pop
je
mov
mov
mov
jmp
mov
mov
mov
cmpb
jbe
cmpb
ja
push
lea
push
push
push
call
cmp
pop
pop
pop
je
orl
push
xor
push
push
push
mov
push
push
push
push
mov
push
push
push
push
call
mov
call
pushl
mov
mov
mov
movl
add
call
jmp
jmp
call
mov
mov
mov
mov
jmp
mov
ret
mov
mov
mov
testl
je
mov
movl
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
mov
movl
call
mov
mov
mov
mov
andl
cmpl
je
mov
call
call
xor
add
mov
pop
mov
mov
pop
pop
pop
pop
mov
ret
lea
call
mov
mov
mov
mov
call
pop
mov
xor
pop
mov
pop
pop
call
jmp
ret
xor
mov
mov
add
mov
call
ret
ret
mov
push
mov
mov
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
and
mov
call
pop
ret
mov
testl
jne
cmpb
ja
lea
push
call
cmp
je
mov
cld
call
mov
push
push
push
push
call
mov
cmpl
mov
mov
je
mov
test
je
mov
call
test
je
mov
call
mov
test
je
call
mov
mov
mov
mov
jmp
xor
ret
lea
xor
lea
mov
mov
mov
movl
mov
mov
ret
lea
xor
mov
test
je
mov
cmp
jne
mov
mov
ret
mov
cmp
je
cmp
jne
mov
mov
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
mov
mov
xor
push
push
pushl
mov
test
jle
dec
mov
mov
mov
mov
cmpl
je
call
test
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
xor
mov
mov
xor
push
push
pushl
mov
cmp
jle
mov
mov
mov
inc
mov
cmpl
je
call
cmp
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
movl
movl
mov
xor
mov
mov
mov
mov
call
movb
call
ret
push
push
push
mov
mov
mov
mov
mov
cltd
idiv
add
xor
mov
mov
mov
mov
cltd
idiv
mov
dec
test
jne
mov
mov
mov
and
mov
xor
mov
mov
shr
dec
test
jne
pop
pop
pop
ret
mov
xor
xchg
neg
sbb
inc
mov
mov
mov
pushl
pushl
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
cmpb
je
cmpw
jne
cmpl
jbe
mov
call
push
lea
push
push
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
pop
ret
cmpb
jne
push
push
push
push
call
pop
ret
add
incl
add
add
push
push
push
push
mov
mov
cmpb
jne
cmpl
je
mov
mov
xor
mov
call
cmpl
jne
cmpl
je
call
call
xor
mov
cmpb
jne
cmpl
jne
xor
mov
call
cmpb
jbe
cmpl
je
mov
test
je
mov
call
mov
mov
cmp
je
test
je
push
call
call
cmpb
jne
call
cmpb
je
call
cmpl
jne
cmpl
je
call
mov
push
call
mov
mov
mov
mov
rep
jmp
pop
pop
pop
pop
pop
ret
mov
call
ret
nop
popl
jmp
ret
mov
test
je
movl
mov
dec
jl
lock
jne
push
lea
call
pop
ret
nop
push
push
mov
mov
mov
test
je
movl
mov
dec
jl
lock
jne
lea
call
add
dec
jne
pop
pop
ret
nop
test
je
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
call
pop
pop
jmp
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
nop
test
je
mov
inc
jle
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
lea
test
jle
push
add
and
push
call
pop
movw
add
pop
mov
movl
ret
xor
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
call
mov
pop
pop
pop
ret
mov
push
mov
mov
call
pop
ret
nop
push
push
push
mov
xor
repnz
jne
not
pop
add
pop
pop
jmp
ret
test
je
mov
ret
test
je
mov
test
je
push
push
push
mov
mov
mov
mov
add
cmp
je
call
mov
mov
mov
add
call
pop
pop
pop
ret
call
mov
mov
jmp
ret
push
push
push
push
push
mov
xor
mov
test
je
cmp
jne
mov
mov
dec
jmp
xor
mov
test
je
add
cmp
jne
xor
dec
jne
test
je
mov
mov
mov
call
mov
pushl
add
dec
jmp
call
push
mov
mov
mov
test
je
mov
add
call
dec
jne
pop
pop
test
jne
test
je
decl
call
pop
pop
pop
pop
pop
lea
jmp
ret
mov
test
je
mov
inc
jle
lock
ret
nop
test
je
ret
add
ret
mov
test
je
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
lock
jne
lea
call
mov
pop
mov
ret
lea
jmp
ret
mov
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmpl
jne
sub
add
push
mov
call
pop
add
mov
mov
movb
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
mov
test
je
movl
push
push
call
pop
ret
lea
push
push
mov
mov
mov
test
je
movl
push
call
add
dec
jne
pop
pop
ret
lea
xor
push
mov
push
push
mov
lea
mov
mov
mov
add
mov
mov
call
add
dec
jg
mov
pop
pop
pop
ret
lea
cmpl
je
call
ret
mov
call
ret
cmp
je
push
push
push
push
mov
mov
mov
xor
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
mov
add
call
dec
jg
jmp
push
mov
mov
mov
add
mov
mov
call
dec
jg
pop
jmp
push
mov
mov
add
mov
call
dec
jg
pop
jmp
mov
add
call
dec
jg
jmp
mov
mov
add
call
dec
jg
jmp
pop
pop
pop
pop
mov
jmp
pop
pop
pop
pop
ret
mov
mov
jmp
ret
mov
test
je
movl
lock
jne
push
mov
xor
mov
mov
test
je
mov
test
je
mov
call
sub
call
pop
ret
mov
push
mov
add
push
push
push
mov
mov
mov
cmpl
je
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
mov
mov
mov
cmpl
jne
pop
pop
pop
pop
pop
pop
ret
mov
mov
mov
mov
ret
mov
push
mov
add
mov
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
cmp
jne
mov
mov
mov
jmp
mov
mov
cmpl
je
mov
mov
cmp
jne
mov
mov
mov
mov
jmp
mov
mov
mov
cmpl
jne
ret
jmp
jmp
pop
pop
pop
ret
mov
test
je
movl
push
push
mov
call
pop
ret
lea
push
mov
add
push
xor
mov
xor
push
push
pushl
mov
push
lea
push
push
push
call
lea
lea
mov
call
mov
lea
call
mov
cmpl
je
xor
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
push
mov
xor
push
push
pushl
mov
incl
jne
mov
call
mov
call
mov
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
nop
subl
jae
movb
movl
movl
movb
movl
call
test
je
call
call
movw
movw
movw
call
mov
call
mov
call
and
cmp
je
call
and
cmp
jbe
movl
jmp
call
call
mov
jmp
call
call
mov
call
mov
ret
nop
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
call
ret
lea
mov
ret
mov
push
call
mov
test
je
cmpl
jne
mov
call
mov
call
test
jne
mov
call
jmp
push
mov
push
call
pop
ret
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
xchg
call
ret
nop
xor
call
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
call
inc
mov
popf
or
call
mov
add
xchg
jmp
idivl
in
sbb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
sti
idivl
loope
int
movl
movsl
xlat
loopne
mov
das
ret
pop
and
jecxz
inc
mulb
jbe
mov
repz
loop
test
stos
mov
cmc
xlat
sub
push
push
mov
jae
mov
mov
jl
or
add
call
add
mov
ss
sarb
jbe
push
cmc
jnp
mov
jg
scas
cwtl
xchg
data16
mov
xor
lds
pop
lods
clc
ja
fsubp
pop
lock
fs
mov
jmp
dec
mov
loopne
adc
and
adc
subb
fmull
out
nop
pop
cmp
imul
repz
sbb
push
adc
lods
lods
fmuls
adc
fcmovbe
mov
or
dec
push
cmp
or
hlt
jmp
call
mov
pop
and
sbb
jb
movsl
movsb
cmpsb
outsb
push
inc
cwtl
sahf
lock
add
jb
jns
into
popf
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
stos
push
lahf
pop
inc
aad
movsb
jns
sbb
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
test
push
rcrl
add
call
iret
sarl
push
add
push
pop
mov
scas
divb
movsl
movsb
cmpsb
outsb
push
inc
mov
jne
fcomps
or
clts
mov
lret
das
cmp
push
fwait
cmp
and
outsb
push
inc
nop
in
scas
enter
leave
jb
push
dec
mov
xchg
and
sub
loop
cltd
movsl
movsb
cmpsb
outsb
push
inc
nop
in
scas
enter
in
les
or
test
pop
divl
ret
jecxz
outsb
mov
mov
movsb
cmpsb
outsb
push
inc
adc
stos
pop
or
add
add
call
dec
jns
and
jmp
sub
xchg
push
dec
imul
lahf
xchg
mov
fstpt
in
incb
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
xchg
into
idivl
ds
and
inc
fnstsw
pause
cli
call
xor
dec
stos
sbb
sbb
movsb
popl
cmp
push
popf
jl
popa
fsubrs
add
dec
and
lret
mov
xor
mov
push
fistl
xor
in
test
sub
mov
or
inc
mov
and
call
nop
dec
clc
insl
inc
daa
push
in
xlat
dec
dec
xor
cld
pop
jae
popa
popf
cmp
mov
push
aas
jl
sub
mov
ds
mov
dec
imul
sub
xchg
or
sub
dec
lea
add
in
sbbl
insb
xchg
lret
and
jge
hlt
adc
push
sti
mov
fscale
dec
fwait
ret
cmp
sbb
loopne
rorb
ret
clc
pop
ss
mov
or
xor
je
pop
cmc
jle
aad
push
dec
jl
add
call
inc
insb
inc
ret
xor
out
pop
jmp
aas
sbb
stos
jg
mov
imul
inc
and
in
cmp
pusha
mov
into
xor
push
xchg
gs
jge
out
adc
flds
mov
cli
rolb
dec
xchg
scas
test
arpl
orb
ljmp
and
inc
xchg
cmp
dec
cmp
fildl
jne
cmp
xorb
sub
ljmp
fneni(8087
dec
syscall
stos
repnz
popa
and
fwait
or
aam
jecxz
add
call
fucomp
rclb
xor
or
sub
xor
loop
mov
cwtl
pop
sahf
add
mov
ss
sub
adc
xchg
or
ror
mov
in
mov
add
jmp
cmc
ja
cmpsb
je
inc
pop
inc
fistpll
xor
repnz
pop
xor
jno
or
call
cmp
cmp
mov
lcall
mov
popa
mov
mov
imul
mov
call
rorl
mov
inc
cmp
add
call
cmp
jns
in
ja
mov
xchg
push
cmp
shlb
fildll
sub
sbb
repnz
cmpsb
and
cs
addr16
popa
jnp
fcompl
inc
mov
jecxz
mov
pop
iret
int
in
dec
arpl
stos
cld
cli
jns
inc
jl
mov
dec
out
mov
inc
sub
add
test
pop
loope
jmp
daa
pop
les
push
dec
xchg
inc
sbb
mov
add
call
test
mov
loopne
mov
adc
push
jno
mov
sti
mov
test
ret
popa
int
inc
int
cmp
sbb
push
movl
sbb
sbb
inc
push
push
pop
inc
movsb
lea
mov
sbb
fmul
or
gs
add
lea
fcoml
popf
dec
mov
inc
mov
pop
lret
mov
ja
pop
insl
mov
into
enter
sahf
push
jns
sub
xchg
stos
jle
mov
leave
xchg
pop
shrl
out
xchg
mov
adc
add
call
dec
fists
xchg
iret
push
adc
rolb
outsl
addr16
sti
ds
inc
add
loopne
std
pop
mov
cmp
ss
shll
lock
leave
in
scas
fcmovu
scas
js
jo
adc
or
mov
test
push
scas
xchg
xchg
outsb
pop
xor
lods
mov
aad
xor
mov
out
in
mov
push
test
adc
push
aas
sub
push
ret
sbb
push
xchg
loopne
cmp
xchg
inc
addb
call
lods
mov
pusha
pusha
mov
rcrl
leave
cltd
fnsave
in
pop
out
dec
ror
fistl
cmpsb
adc
mov
hlt
dec
adc
sub
repnz
scas
dec
inc
mov
sub
outsl
pop
test
test
inc
lret
rorb
jne
lret
gs
rcrl
jg
nop
cld
mov
fidivl
fwait
incb
cmpsl
adc
aad
hlt
mov
pusha
scas
mov
sarl
sbb
mov
dec
add
sub
aam
cmp
add
call
xor
lea
outsb
mov
orl
arpl
lcall
xor
add
les
outsb
das
ss
test
push
dec
cmpl
imul
mov
mov
dec
std
fldcw
push
adc
or
dec
out
mov
mov
add
mov
cmp
mov
fldl
or
jle
lahf
xchg
mov
icebp
cmpsl
loope
and
or
dec
and
stos
inc
bound
add
call
popa
iret
jo
and
dec
test
mov
xor
adc
sti
outsb
insb
jns
add
int3
aad
std
mov
dec
pop
or
xchg
andb
es
xchg
cs
pop
ljmp
mov
popa
fs
popa
cmpsl
maskmovq
testl
mov
in
cwtl
scas
dec
int3
xchg
cmp
mov
jns
rcl
push
stc
xor
xor
sub
mov
jae
or
lds
lahf
mov
add
call
data16
or
or
insb
sbb
sbb
push
bound
ja
test
into
sbb
outsb
cs
outsl
and
add
xorb
pop
push
shrb
aas
aaa
mov
xchg
inc
ret
insb
cmp
add
into
rorb
jle
loop
gs
mov
inc
test
shrl
mov
push
xchg
pop
loopne
mov
movb
mov
xor
loopne
fs
popa
pop
pop
add
call
dec
add
add
call
icebp
leave
xchg
push
push
fadds
jecxz
shlb
cmp
lods
dec
arpl
iret
ret
cmp
mov
xchg
icebp
jge
js
cmp
fisubrl
in
push
inc
jo
adc
xchg
mov
dec
pop
push
xchg
sub
xchg
adc
xchg
push
pop
fnstenv
cmp
into
lods
jecxz
rorl
mov
push
jno
sbb
sbb
push
fdivr
adc
lcall
mov
fstl
ljmp
call
call
xor
lods
dec
mov
xlat
cmp
leave
or
inc
sbb
sbb
cmp
sub
in
stos
test
xlat
rclb
adc
add
je
mov
jno
icebp
xchg
xchg
lret
std
push
mov
imul
or
adc
fisttpll
shll
imul
mov
add
out
lahf
loopne
mov
xchg
mov
out
pop
std
mov
pop
dec
mov
mov
sub
add
call
out
pop
in
daa
repz
stos
mov
mov
sbb
fwait
vunpcklpd
cmp
jno
inc
sbb
adc
fldl
mov
lss
push
dec
pop
sbb
or
mov
fisttpll
inc
inc
or
mov
xchg
xchg
mov
add
jno
jne
mov
lcall
mov
sub
or
sub
aad
outsl
push
icebp
mov
xor
fs
loop
shl
sti
xchg
leave
loop
shl
add
call
xchg
lds
sub
push
neg
cli
jns
xchg
les
fsqrt
jns
xchg
les
clc
loop
xor
loop
fdivp
cli
cmp
inc
add
xor
inc
add
hlt
xchg
leave
mov
hlt
xchg
leave
mov
inc
dec
inc
xor
rclb
mov
nop
sbb
pop
mov
push
fwait
ret
cmpsl
mov
mov
ret
cmpsl
mov
mov
ret
cmpsl
mov
mov
ret
jae
mov
insb
outsl
leave
add
call
xchg
cli
aaa
insb
outsl
leave
gs
xchg
cli
aaa
or
inc
negl
negl
pop
negl
lret
push
ret
pop
int3
addl
pop
int3
addl
loop
cmc
dec
push
loop
cmc
dec
orl
dec
sub
lcall
xor
cmpsl
enter
int
les
enter
int
les
pop
sbb
pop
jmp
inc
fnstcw
cmp
push
mov
cmp
push
hlt
aaa
sahf
jmp
hlt
aaa
sahf
jmp
scas
add
call
lods
jb
inc
loope
in
mov
inc
outsl
lret
dec
mov
inc
outsl
lret
aad
fstl
jo
inc
data16
fstl
jo
adc
xchg
lock
lock
mov
lods
inc
and
push
lods
inc
and
es
inc
xchg
inc
stc
scas
dec
fidivrs
and
xchg
stc
scas
dec
fidivrs
and
xchg
sbb
xor
bound
xor
bound
dec
xchg
lahf
es
popa
lock
sbb
mov
sbb
mov
push
add
call
mov
mov
aad
mov
aam
and
jp
sub
pusha
jle
lcall
lods
jmp
icebp
pop
jl
js
and
and
lahf
insl
mov
lods
cwtl
sbb
adc
sbb
adc
add
fidivrs
ss
rol
outsl
ss
rol
outsl
jns
or
mov
or
mov
lret
inc
stc
cmp
adc
cmp
pop
shll
call
in
jns
loopne
fistpl
loopne
fldt
out
lock
add
call
test
or
pop
push
pop
or
pop
push
jns
push
mov
jno
fsqrt
and
and
push
and
jmp
int
movb
enter
xchg
movb
lret
or
loopne
add
push
adc
push
es
sti
push
es
cmpsb
sbb
adc
je
mov
in
add
cmp
lret
ja
sbb
add
ret
cli
popa
jo
xor
and
mov
mov
fisttpll
stc
nop
mov
cmp
add
call
sbb
scas
jbe
adc
lahf
jp
enter
negb
iret
jbe
in
je
daa
in
add
daa
in
add
push
adc
or
lds
fldl
pop
sbb
nop
cli
cmpsl
cwtl
data16
cmp
jg
outsb
out
cmp
pop
xchg
gs
pop
pop
and
stc
nop
mov
dec
fsubs
add
jecxz
mov
std
loopne
pop
jg
jl
std
loopne
pop
jg
lret
call
sbb
testl
arpl
inc
addb
call
xor
sbb
cmp
rcrb
in
jecxz
or
movsb
or
iret
xchg
test
inc
mov
xor
sub
xor
popf
sbbl
stos
fdiv
mov
fdiv
mov
jp
adc
jmp
dec
sti
ret
pop
push
jmp
dec
sti
ret
pop
push
pushf
pushf
mov
aas
push
test
mov
and
mov
and
mov
jae
dec
pop
pop
mov
dec
pop
pop
mov
pop
mov
mov
add
call
mov
sbb
or
sbb
or
or
and
push
and
into
push
repnz
pop
mov
xchg
push
mov
into
push
mov
or
insl
push
lea
dec
sub
mov
jb
sbb
mov
push
sub
mov
push
sub
rcl
scas
sbb
lds
rcl
scas
sbb
lds
rcl
scas
sbb
lds
rcl
scas
sbb
lds
rcl
scas
sbb
lds
repnz
repnz
call
shl
push
scas
adc
jae
int3
mov
jae
int3
mov
jae
int3
mov
jae
int3
mov
mov
add
std
adc
dec
std
or
rclb
int3
sub
nop
insl
sub
dec
sub
nop
insl
sub
dec
sub
nop
insl
sub
movsl
xchg
subb
mov
mov
mov
cmp
fbld
or
jae
add
inc
inc
js
daa
loopne
sarb
call
aad
lock
inc
popf
jae
scas
addr16
imul
imul
cld
inc
hlt
dec
test
hlt
dec
test
push
jo
inc
aam
icebp
dec
aam
das
scas
mov
repz
scas
mov
aam
ss
mov
ss
mov
into
iret
xchg
imul
push
jp
cmp
insb
mov
sarl
out
insb
mov
sarl
out
insb
mov
sarl
out
insb
into
inc
dec
mov
dec
out
sub
into
cmp
dec
xor
into
cmp
dec
xor
pop
add
call
fcompl
push
in
pop
sbb
pop
sub
lods
scas
popa
mov
cwtl
les
cs
les
cs
les
cs
les
cs
les
cs
les
cs
les
repz
stos
lods
mov
lds
negl
mov
pop
scas
xchg
loop
pop
scas
xchg
adc
pop
adc
pop
leave
fildll
xchg
or
je
cmp
add
call
hlt
je
cmp
andl
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
jb
movsl
movsb
cmpsb
outsb
push
inc
pusha
mov
sub
movsb
pushf
pminub
out
loopne
stos
xchg
sbb
lahf
test
nop
cwtl
arpl
and
jne
mov
dec
repnz
mov
cltd
pop
fmull
jne
and
add
call
fwait
inc
sub
dec
and
mov
aad
dec
lahf
jnp
jae
daa
push
lock
dec
mov
mov
sarl
filds
mov
fcomps
pusha
jg
inc
and
cmp
in
hlt
sbb
movsl
movsb
cmpsb
outsb
push
inc
cmp
jl
stos
lods
sub
dec
outsb
mov
push
mov
dec
sub
inc
lock
call
xchg
sbb
pushf
mov
inc
call
sub
sahf
mov
js
pushf
js
add
in
mov
call
xchg
aaa
repnz
pop
pop
nop
icebp
cmp
xchg
push
jmp
and
test
and
inc
inc
shlb
mov
insl
imul
or
fsubs
mov
dec
mov
or
xchg
stc
mov
cwtl
stc
pop
push
addb
jns
cmpsb
sahf
sub
dec
dec
arpl
std
push
sub
pop
and
pop
js
mov
dec
mov
push
jg
pop
fcom
in
and
or
dec
lds
xor
into
push
push
pop
xchg
lret
cmc
add
call
aad
mov
shrl
insl
enter
dec
ds
cmpsl
pushl
pop
shrl
das
fcomps
mov
pop
cmp
stos
xlat
add
mov
cs
adc
add
pushf
jno
xchg
arpl
cmpsl
push
or
inc
notl
push
cmpsl
shr
mov
mov
notb
jnp
out
fwait
or
sub
shrd
jg
inc
sub
mov
jl
sbb
pop
mov
or
ljmp
push
cmp
add
call
add
jno
bswap
in
push
and
push
je
mov
mov
loope
adc
loopne
mov
inc
mov
add
movl
or
mov
aaa
mov
xchg
lods
dec
lahf
pop
dec
imul
or
adc
and
imul
cmp
jnp
shlb
pop
xchg
cmpsl
stos
adc
hlt
or
cmp
push
sub
hlt
inc
loopne
mov
ss
popf
pop
bound
sub
xchg
rorl
and
xor
call
rcrb
idiv
das
mov
xchg
bound
pop
cld
pop
cli
dec
jo
outsb
imul
js
push
out
subl
arpl
loop
inc
pushf
scas
adc
push
movsl
int3
fs
jae
test
dec
movsb
pop
ret
sub
cmp
or
fwait
xchg
push
sub
clts
or
jge
push
fwait
xor
ds
popa
and
dec
and
icebp
shr
test
sbb
and
xchg
dec
test
insl
movsl
out
fiaddl
add
call
sar
lret
push
lret
bound
testb
dec
leave
mov
in
movsl
pushf
xor
ds
lds
xor
push
nop
inc
adc
lods
sbb
or
rolb
mov
inc
jg
mov
imul
add
aas
cmp
int
stc
inc
lret
lds
inc
in
xchg
dec
lods
in
repnz
sar
clc
mov
push
addb
and
mov
lods
cltd
shrb
out
or
lock
jb
jl
inc
xchg
or
flds
aas
sbb
or
loop
xlat
adc
add
call
mov
je
ret
sbb
push
pop
out
ds
mov
lret
mov
imul
nop
jle
lcall
xor
lret
push
sbb
push
xor
out
fildll
sbb
mov
push
sahf
mov
xchg
or
mov
lods
inc
push
add
adc
cmp
andb
jle
pushf
es
movsl
movsb
cmpsb
outsb
push
inc
fadds
mov
stc
cmp
dec
cwtl
hlt
fsubrs
in
xchg
inc
and
test
fmull
add
call
les
ja
jb
sti
xchg
out
lds
imul
cmc
push
push
mov
inc
add
dec
bound
sub
push
push
xchg
xor
jg
out
rcrl
adc
or
mov
lahf
dec
push
shll
cmp
dec
mov
mov
out
fcoms
out
push
out
adc
ds
mov
xchg
and
sub
outsl
negl
out
adc
jle
push
sbb
pop
lods
popf
jmp
nopl
mov
mov
cmc
xchg
or
add
call
jnp
cmc
push
jo
mov
push
fs
fs
jae
adc
icebp
icebp
xchg
sbb
gs
gs
xchg
inc
inc
pop
stc
scas
jno
pop
pop
or
ret
int3
into
jge
push
dec
jbe
cmp
push
bound
pop
lods
jae
mov
stos
xchg
cmp
jne
cmp
push
idiv
cmp
dec
push
movsb
mov
mov
dec
pusha
adc
je
mov
in
or
insb
xchg
arpl
dec
and
nop
ror
test
gs
jnp
gs
call
ds
inc
push
mov
hlt
pop
jp
push
inc
daa
cmc
jbe
cmp
cmpsl
cmp
out
divps
in
lret
ja
jae
cmp
push
in
push
sarb
imul
stc
out
mov
lret
push
inc
adc
inc
xchg
mov
mov
clc
inc
stc
sbbb
cmpsb
movsl
sub
inc
push
imul
mov
ds
xorl
jle
adc
test
add
xor
sub
xlat
pop
add
call
mov
sub
mov
xchg
in
jmp
je
add
sbb
adc
sti
ljmp
adc
repz
or
add
inc
aas
mov
mov
cmp
sub
pop
addr16
and
cmpsb
mov
lahf
sub
xor
lea
add
sub
movsl
mov
cmp
in
sbb
cmpsl
lea
or
pop
dec
les
adc
or
test
clc
fidivrs
add
call
enter
adc
pop
test
repnz
cmp
push
sub
jge
jp
xor
and
jp
pushf
jae
xchg
mov
inc
leave
aam
adc
or
movsl
movsb
cmpsb
outsb
push
inc
sahf
xorl
lds
in
outsl
pop
ret
int3
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
pop
mov
insb
or
push
sahf
bound
sarb
js
je
les
push
jg
push
lods
cmp
mov
push
mul
inc
addr16
roll
call
jne
jp
fisttpl
into
and
stc
ja
xor
leave
insl
out
cmpl
jmp
cltd
movsl
movsb
cmpsb
outsb
push
inc
mov
out
int3
adc
cmpsl
pop
neg
cmpsb
jp
or
loop
sarl
dec
ret
ja
and
gs
fmuls
mov
inc
or
into
jle
test
adc
loope
mov
jnp
popf
shll
pusha
add
lahf
into
jo
cltd
movsl
movsb
cmpsb
outsb
push
inc
cmpsl
int
push
pop
rcll
movsl
inc
testb
ret
int
push
add
call
rcll
out
popa
dec
and
in
inc
mov
das
icebp
out
popa
dec
and
test
and
das
inc
ret
mov
sub
or
dec
insl
imul
daa
push
lcall
pop
inc
xchg
in
xor
je
outsl
roll
mov
or
mov
mov
popa
cmpb
mov
sub
pop
pushf
iret
out
cmp
dec
mov
add
cltd
sub
cmp
pop
nop
ret
add
call
xor
or
dec
int3
lds
aam
mov
mov
adc
stos
xchg
shlb
xor
bnd
popa
mov
in
adc
cmp
push
repnz
push
mov
sbb
shlb
aam
sub
fldl
jl
and
mov
test
adc
loope
ror
push
mov
jp
push
mov
iret
jp
jp
pusha
jb
movsl
movsb
cmpsb
outsb
push
inc
jg
sub
es
sbb
rcl
sti
mov
in
std
insl
mov
xchg
mov
lock
xor
add
call
adc
dec
sbb
xchg
mov
lock
xor
push
aam
das
leave
jnp
mov
inc
xchg
in
test
inc
mov
scas
in
cmp
fisttpl
and
push
adc
mov
in
xor
je
outsb
push
test
xor
fucomip
lds
movsbl
fdivrl
sub
push
cld
jbe
fistps
test
enter
lret
rcr
xchg
cmp
lds
ss
jmp
icebp
ds
dec
in
mov
jns
add
call
push
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
orb
test
and
sahf
ja
fucom
mov
jp
je
fists
jno
loopne
in
add
call
into
cmp
lods
stos
add
or
pusha
mov
adc
lds
push
jo
cmp
sub
ret
stos
and
mov
inc
cmp
add
movsl
cmpl
or
inc
popa
sub
mov
pop
inc
sub
movsl
shrb
je
fists
jno
inc
xor
mov
cmpsl
rclb
or
pop
pop
pop
fstpl
adc
loope
mov
cwtl
stc
pop
push
test
inc
je
scas
xlat
mov
jb
add
call
movsb
cmpsb
outsb
push
inc
fwait
dec
les
aam
dec
adc
dec
add
fwait
dec
les
aam
dec
add
cwtl
and
jne
lods
cmp
push
add
cwtl
and
push
aam
das
leave
jnp
repz
inc
pop
dec
out
inc
push
ds
andb
enter
cmpsb
fisttpl
and
push
adc
mov
in
xor
je
imul
xor
fucomip
lods
sub
pop
xor
cmp
das
lret
sub
sbb
inc
add
call
cmpl
pop
jp
stos
cmp
aaa
lea
cmpsb
shr
loopne
jo
mov
jns
push
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
orb
test
and
xchg
inc
push
fadds
into
insb
jp
je
fists
jno
mov
add
xchg
shlb
push
inc
adc
inc
inc
mov
repz
sbb
push
lea
cmp
sub
sti
xor
ljmp
lods
adc
rolb
lods
pop
cmp
enter
popa
sub
iret
test
aad
lea
xlat
jmp
data16
insb
jp
je
fists
jno
popa
add
repnz
sbb
add
call
adc
imul
push
test
adc
loope
lods
scas
cmp
je
fucomi
fidivrs
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
lods
xor
push
rcl
mov
mov
pop
lods
xor
push
test
testb
insb
or
or
jmp
repz
testb
insb
or
xchg
das
leave
jnp
int3
aaa
mov
push
movd
leave
push
adc
xor
mov
push
and
push
adc
mov
in
xor
je
sbb
add
call
sbb
jg
cld
xor
fucomip
cmp
mov
mov
movsb
dec
xor
insb
pop
cmpsl
ljmp
push
xor
xchg
daa
or
jmp
movsb
in
dec
pushw
ss
imulb
push
insb
sub
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
orb
test
and
mov
jnp
insb
jp
je
fists
jno
adc
dec
fs
lods
stos
add
xchg
push
lods
and
inc
inc
xchg
sbb
std
mov
cmp
sub
and
loop
sub
inc
nopl
dec
in
mov
inc
adc
int3
jns
inc
iret
fnstenv
popa
sub
call
movsl
es
sub
ljmp
or
insb
jp
je
fists
jno
out
mov
std
xor
aas
test
mov
fidivs
adc
loope
fwait
mov
xchg
lahf
mov
aam
jb
movsl
movsb
cmpsb
outsb
push
inc
cli
or
stc
jmp
xchg
pop
cmp
adc
or
stc
jmp
xor
inc
push
jle
lret
cli
adc
cmp
fdivl
repnz
push
jle
lret
push
push
aam
das
leave
jnp
ret
ja
mov
aam
in
push
fwait
insl
jp
add
call
pop
sub
arpl
fisttpl
and
push
adc
mov
in
xor
je
clc
cmpsb
rorl
mov
dec
inc
daa
fucomip
in
and
xchg
sub
lahf
pop
jecxz
and
fsubl
filds
xor
mov
cmp
in
iret
into
sbb
inc
add
cld
lahf
test
rcrb
sub
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
orb
test
and
jecxz
sarl
cli
and
jp
je
fists
jno
or
sbb
in
stos
stos
xchg
shlb
andb
repz
lcall
repnz
add
call
dec
dec
fldl
and
sub
pop
dec
adc
adc
movhps
lcall
mov
jo
ds
pop
sbb
push
jp
je
fists
jno
sti
inc
dec
test
xchg
jl
enter
ret
jbe
push
test
adc
loope
pop
jnp
addr16
xor
lock
sbb
cltd
movsl
movsb
cmpsb
outsb
push
inc
test
dec
push
pop
sub
inc
jg
xor
fs
push
lea
and
mov
add
call
fwait
lods
add
popa
in
dec
rorl
rcrl
das
leave
jnp
mov
in
add
xchg
mov
jb
pop
sub
pop
pop
gs
fisttpl
and
push
adc
mov
in
xor
je
sub
lea
mov
dec
inc
daa
fucomip
enter
test
xchg
movsb
in
les
add
out
mov
test
and
xor
xor
mov
andl
leave
in
call
or
add
call
jns
push
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
orb
test
and
es
lds
lret
nop
insb
jp
je
fists
jno
mov
call
loop
aam
sub
lods
stos
add
test
test
push
push
ficomps
xchg
xor
jge
mov
push
push
hlt
sarb
pop
cmp
js
rorl
std
nop
sahf
jo
loopne
jp
outsl
test
mov
lods
dec
xchg
test
rol
pop
xchg
xor
and
je
fists
jno
popf
lret
dec
mov
cmc
inc
mov
js
lahf
lea
sbb
adc
loope
rolb
push
jle
cmpsb
dec
lods
aad
adc
push
fldenv
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
aaa
and
push
nop
cmc
xor
es
push
inc
lock
cmp
ficompl
lock
inc
repz
mov
cs
arpl
loope
push
lods
mov
push
xor
aad
das
mov
rcl
arpl
inc
mov
in
mov
xchg
orl
imul
addps
movl
imul
rorl
add
call
pop
sti
add
pop
call
insb
xor
mov
outsb
cwtl
scas
jbe
xchg
mov
dec
mov
jns
push
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmp
sub
mov
fdivrs
mov
call
dec
mov
movsl
mov
mov
popa
sub
cmp
add
and
repz
and
pop
imul
ds
xchg
shlb
dec
dec
mov
je
push
inc
aad
pop
jmp
cmp
sub
mov
mov
jae
inc
add
call
nop
xchg
loopne
push
add
or
sub
cmpl
or
test
or
adc
aad
pop
jg
lcall
jno
jbe,pt
jno
cltd
movsl
movsb
cmpsb
outsb
push
inc
cmp
cmpsb
in
xchg
popa
push
cmp
mov
or
sbb
adc
jae
fdivl
ror
xlat
ss
inc
in
mov
mull
push
mov
insb
xor
jae
rorl
test
inc
inc
mov
pop
cli
addl
call
push
test
adc
loope
jne
pop
ja
xlat
fstpl
clc
insb
insb
push
sbb
in
add
cs
jb
dec
cmp
inc
ds
iret
fsubrs
or
mov
je
xor
push
testl
xchg
clc
push
push
stos
mov
cmp
dec
int3
xor
sbb
dec
orl
nop
ret
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
orb
test
and
loop
sahf
mov
aam
mov
mov
cmpsl
lea
ror
stos
xchg
shlb
data16
imul
push
stos
iret
lahf
adc
insb
fstps
repnz
lret
test
cmc
inc
xchg
call
sbb
sub
sub
xchg
xor
popa
sub
or
adc
push
stos
push
and
pop
imul
mov
xchg
jno
push
scas
ja
mov
inc
dec
test
js
push
test
adc
loope
ret
add
adc
and
shlb
jb
movsl
movsb
cmpsb
outsb
push
inc
leave
ja
repnz
mov
fwait
cs
jo
ja
repnz
mov
add
insb
idivb
out
std
xor
add
call
add
insb
idivb
adc
gs
push
cld
mov
ja
xchg
mov
jl
rorb
sub
rcr
arpl
inc
mov
in
mov
xchg
shrb
mov
cmp
icebp
jmp
xor
dec
unpckhps
movsb
dec
sbb
push
sub
outsl
jnp
pop
mov
imul
push
or
pop
cs
sbbb
repz
adc
sbb
mov
mov
jns
push
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmp
sub
pop
movb
stc
call
mov
call
or
lods
xlat
shrl
das
roll
push
dec
jae
popa
sub
dec
or
jg
outsl
cmc
int
adc
push
and
pop
imul
in
inc
and
lods
stos
add
mov
jae
adc
push
push
out
ss
xchg
jbe
mov
jge
mov
fs
out
shlb
mov
cmp
add
cmc
cmpl
test
dec
arpl
cwtl
testb
pop
dec
fnstsw
lock
mov
jbe
pop
popl
add
call
mov
add
cmpsb
outsb
push
inc
sbb
mov
jmp
dec
dec
into
loope
sbb
mov
dec
xor
jle
xor
in
mov
inc
mov
leave
loope
jecxz
int
or
adc
mov
jb
push
jae
je
pusha
das
xor
jne
daa
xor
jmp
test
cli
cmpl
and
fsubp
mov
and
push
lcall
push
sub
xchg
loope
push
repz
pop
nop
adc
pop
loope
add
call
jl
adc
icebp
loop
mov
or
inc
sub
outsb
sbb
mov
add
sub
cmp
pop
nop
ret
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
orb
test
and
push
popf
sbb
and
pop
imul
mov
loope
enter
movsl
lods
stos
add
sbb
int3
sbb
popa
inc
lock
mov
jge
mov
popa
cmp
int
and
push
cmp
andb
out
sar
es
push
adc
fwait
cwtl
jae
popa
sub
or
xchg
scas
addr16
add
movsl
push
and
pop
imul
call
sbb
stc
jmp
idivl
mov
sub
arpl
das
jb
ret
pop
jbe
jp
push
test
adc
loope
mov
add
shrl
cltd
movsl
movsb
cmpsb
outsb
push
inc
cwtl
or
loop
or
xchg
cmpsl
arpl
mov
loop
or
jo
fidivrs
in
shll
ljmp
mov
inc
repz
mov
shl
sub
test
pop
mov
adc
mov
mov
mov
pop
jns
das
mov
rcl
arpl
add
call
inc
mov
in
mov
mov
pop
jp
nop
dec
mov
cmp
icebp
in
add
pop
jbe
das
xchg
sbb
icebp
adc
cmc
je
sbb
cmp
ss
xchg
mov
mov
int
jno
push
jno
fwait
push
adc
int3
inc
inc
outsb
xlat
outsl
push
or
test
sub
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmp
sub
mov
push
push
mov
lock
push
push
fdivp
dec
sbb
in
test
pop
imul
sub
pop
pop
mov
arpl
mov
jle
and
pop
imul
call
push
mov
add
jg
xchg
shlb
sti
pop
mov
mov
sahf
push
repz
cmp
sub
mov
je
cmp
pop
cmp
cmp
sbb
sub
cmpl
jmp
cmp
dec
out
frstor
jo
jl
clc
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
fsubrl
loope
mov
rclb
push
mov
mov
and
fsubp
mov
daa
sbb
arpl
out
lret
movsl
movsb
cmpsb
outsb
push
inc
fldt
push
xchg
pop
in
push
lret
std
mov
sub
pop
in
push
lret
cmp
insb
test
mov
fldt
pop
cmp
insb
test
lret
leave
and
sbb
adc
mov
or
add
call
push
repz
dec
sbb
std
data16
mov
adc
out
dec
aaa
loop
pop
inc
xchg
in
xor
je
cmp
sub
xchg
sub
sub
lret
and
push
aas
adcl
mov
inc
jle
mov
jns
dec
sub
inc
pop
sbb
and
sub
pop
insl
out
jp
jnp
mov
das
mov
ljmp
faddl
aam
gs
test
shrl
leave
xor
lea
iret
cmp
fptan
push
imul
add
sti
call
push
insb
sub
mov
jl
lcall
jge
mov
push
mov
ljmp
pushf
xor
fwait
xor
fwait
es
lcall
mov
mov
push
inc
adc
adc
int
sub
mov
repz
aaa
loopne
leave
in
cmp
xchg
shlb
mov
inc
dec
daa
loope
lahf
mov
cmp
sub
ljmp
mov
mov
sbb
add
call
gs
sahf
push
sbb
repnz
push
test
popa
sub
xlat
repz
es
xlat
in
lahf
rcrl
cmp
cmpsl
pop
jns
aam
mov
aad
pop
mov
stos
xchg
shlb
dec
lods
outsl
jecxz
jl
sbb
test
std
lods
cmp
sub
test
cmpsb
push
addr16
and
out
xor
lods
arpl
aad
and
je
jae
popa
sub
adc
imul
daa
pop
xor
mov
add
call
mov
dec
mov
mov
adc
outsl
push
sahf
or
xor
xor
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xchg
stos
in
es
cli
cld
stos
xchg
stc
jo
adc
aam
cmp
lds
mov
mov
movsl
movsb
cmpsb
outsb
push
inc
sbb
xor
dec
xchg
and
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
xlat
inc
jmp
dec
push
cmc
pop
scas
lcall
into
fdivrp
mov
out
out
mov
and
pop
pop
or
cmpsb
outsb
push
inc
cmp
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
daa
push
out
fwait
jg
lods
jp
cmpsl
lahf
cmp
push
inc
sbb
push
push
mov
mov
xor
xor
movsb
cmpsb
outsb
push
inc
jle
stc
xlat
shlb
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
inc
xchg
cmpsl
and
rorl
and
subl
int3
nop
inc
jbe
xor
cmp
filds
cwtl
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
loope
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
mov
movsb
loope
dec
imul
fdivp
out
cli
ret
jae
sbb
insb
lret
adc
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
fwait
imul
mov
call
test
lods
lods
fmuls
ss
mov
lock
aad
or
push
faddl
xchg
dec
jns
adc
in
lea
mov
adc
mov
mov
xor
lcall
movsb
cmpsb
outsb
push
inc
dec
sub
daa
mov
inc
or
scas
xor
mov
jge
pop
push
jmp
pop
mov
push
cmpsb
stos
xor
mov
movsb
cs
push
xchg
ret
cmp
mov
sub
xchg
sub
movsb
cmpsb
outsb
push
inc
add
call
add
xor
lods
lods
fdivrs
pop
mov
inc
sbb
clc
fwait
jbe
or
jle
vmovdqa
sub
movsb
arpl
mov
loopne
push
aaa
mov
add
loop
pop
pop
lods
jno
jle
movsb
dec
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
je
add
in
mov
lods
lods
fmuls
div
and
mov
adc
push
xchg
js
mov
push
sub
daa
fs
dec
insb
sbb
cwtl
loope
dec
out
stc
pop
pop
in
adc
call
test
cmpsb
outsb
push
inc
fwait
push
faddl
mov
lods
lods
fcomp
lret
je
dec
or
mov
nop
add
shrb
clc
pushf
shll
dec
imul
or
mov
hlt
mov
mov
inc
popa
cld
mov
mov
jl
add
out
dec
and
or
jno
jg
cmp
mov
movsl
movsb
cmpsb
outsb
push
inc
xchg
test
pop
pop
mov
pusha
xchg
add
or
adcb
lcall
xchg
add
add
push
divl
jb
movsl
movsb
cmpsb
outsb
push
inc
clc
dec
lods
lea
and
push
out
sub
xchg
es
mov
xchg
sub
push
sbb
jecxz
inc
int3
shlb
movsl
movsb
cmpsb
outsb
push
inc
sub
xchg
push
cli
push
push
sub
faddl
cli
mulb
lods
les
decb
add
mov
cmpsb
outsb
push
inc
xlat
test
filds
cmp
push
scas
out
cs
push
fistpll
mov
fmuls
je
test
ret
in
inc
shlb
add
call
movsb
cmpsb
outsb
push
inc
pusha
and
pop
imul
arpl
jbe
sbb
jp
mov
and
loop
popa
sbb
in
push
sbb
jecxz
inc
int3
shlb
movsl
movsb
cmpsb
outsb
push
inc
lock
fs
push
mov
sub
leave
push
fistpll
mov
fimuls
imul
sbb
push
out
mov
sbb
push
cmp
mov
stc
dec
in
insb
sahf
xchg
push
and
and
fnstcw
loope
fisubrl
sbb
jnp
jecxz
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
add
call
aam
push
xorl
out
or
mov
shufps
xor
ret
aad
stc
or
cltd
movsl
movsb
cmpsb
outsb
push
inc
or
cmp
je
mov
imul
and
mov
shufps
js
test
ret
in
inc
shlb
movsl
movsb
cmpsb
outsb
push
inc
xor
or
in
xor
stos
sbb
pusha
pop
jmp
jno
push
mov
add
outsl
pop
in
pop
mov
rcll
push
jb
movsl
movsb
cmpsb
outsb
push
inc
call
jge
add
call
inc
pop
ret
cmc
lahf
xchg
jecxz
jmp
jno
push
mov
bound
and
push
divl
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
clc
lahf
test
jnp
inc
jmp
cmpsl
cmp
mov
jno
push
mov
lock
hlt
sub
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
adc
xchg
adc
aam
and
inc
lahf
pop
jmp
jno
push
mov
push
dec
ja
arpl
add
mov
sub
cltd
movsl
movsb
cmpsb
outsb
push
inc
stos
add
test
xchg
and
jb
adc
call
sub
ss
push
mov
jb
stos
xchg
imul
xchg
stos
or
outsl
lods
mov
jo
add
fsts
shrb
js
pop
into
mov
mov
aas
lret
mov
mov
adc
mov
ret
icebp
push
mov
push
cmp
cmpb
js
sub
cmpb
stos
or
outsl
lods
mov
jo
add
fsts
shrb
js
pop
into
sbb
test
adc
mov
xchg
stos
or
add
call
lods
mov
jo
add
fsts
shrb
js
pop
into
sbb
test
adc
mov
xchg
stos
or
outsl
lods
mov
jo
add
fsts
shrb
js
pop
into
test
xchg
mov
push
dec
lret
xchg
xorl
stos
push
dec
pop
dec
lea
mov
aaa
aaa
pushf
xchg
adc
mov
gs
sbb
jne
imull
mov
xor
out
or
js
daa
int
dec
mov
push
cmp
cmpb
add
call
cmp
mov
adc
mov
ret
icebp
push
push
jo
add
fsts
shrb
js
pop
into
sbb
test
adc
mov
xchg
stos
or
outsl
lods
mov
jo
add
fsts
shrb
js
pop
into
sbb
test
adc
mov
xchg
stos
or
outsl
lods
mov
jo
add
fsts
shrb
js
pop
into
sbb
test
adc
mov
xchg
stos
or
outsl
lods
mov
jo
add
flds
add
call
cwtl
faddp
sub
fcomps
sbb
test
adc
mov
xchg
stos
or
outsl
lods
mov
jo
add
fsts
shrb
js
pop
into
sbb
test
adc
mov
xchg
stos
or
outsl
lods
mov
mov
out
sbbb
int3
lcall
adc
sbb
sub
stc
in
aaa
js
jp
lods
sbb
ds
xor
in
push
lcall
dec
cmpsl
repnz
fidivrl
mov
dec
fists
xor
pop
out
dec
pop
add
call
out
push
pop
jo
sbb
mov
jmp
inc
mov
loop
mov
fiaddl
xchg
dec
mov
push
xchg
and
lret
fadd
and
pop
xor
mov
cmp
inc
push
enter
es
imul
aam
add
jle
jle
aam
lcall
movsb
lods
lock
movsb
xchg
pusha
sti
pushfw
sahf
dec
lret
xchg
mov
mov
aam
adc
push
and
jns
js
xlat
shll
adc
mov
jecxz
pop
movsl
test
call
xchg
dec
push
ds
insl
sub
sti
xor
popf
pop
pop
add
ret
push
add
clc
jg
cmc
xor
fists
push
jne
dec
hlt
int3
lods
push
fucom
notb
push
ret
sub
stc
call
pop
mov
adc
loop
mov
push
in
pop
out
aam
sub
ja
imul
pushf
rorl
jmp
addr16
or
and
cmp
inc
aas
cmp
sub
test
xchg
pop
jno
or
ret
jno
pop
xor
rclb
call
fcmove
cmp
lret
mov
and
jle
pop
jbe
ljmp
int
dec
mov
pushf
adc
stos
fmull
and
sbb
mov
and
arpl
inc
in
cmpsl
cmc
xlat
mov
cltd
sbb
adc
test
jb
sub
sbb
mov
cmc
dec
dec
cmp
push
xchg
imul
and
cmpb
push
mov
lret
sbb
movsb
cmpsb
outsb
add
call
inc
bound
loope
negl
out
fidivrs
mov
and
or
jle
adc
shll
jae
push
add
leave
xchg
ficoms
test
imul
sbb
mov
inc
lods
iret
xchg
sbb
lret
cmpsb
xor
sub
mov
pop
cld
mov
mov
xor
test
jbe
mov
imul
call
jo
loope
push
xchg
sbb
adcb
cli
push
or
adc
sbb
lds
add
call
xor
jle
jg
mov
jae
cmp
test
jno
cli
sbb
jnp
xchg
push
pop
sub
mov
xor
dec
and
and
push
or
es
cmpb
xchg
and
and
sti
inc
push
psubd
sub
xor
add
push
out
mov
inc
stos
subb
addb
or
jno
roll
rorb
int
xchg
push
pop
je
add
call
sbb
xchg
aam
cmp
pop
xlat
xor
jbe
xchg
les
pop
adc
sti
pop
iret
mov
pop
mov
jecxz
cmp
lret
scas
stc
cmpsl
mov
fiadds
add
lea
cltd
jg
xchg
sub
dec
cmp
push
adc
dec
sub
mov
out
out
sub
fsubs
mov
mov
lcall
pop
cmpsb
imul
gs
imul
aam
jmp
loop
pop
mov
jnp
add
call
mov
jne
scas
lea
adc
cmp
sbb
dec
sub
jmp
pop
mov
out
add
push
fisttpl
pop
jl
in
in
insb
mov
stc
pushf
fcomi
adc
popa
jnp
dec
push
inc
inc
fs
adc
and
jg
jno
sahf
jbe
mov
cmc
dec
repnz
int3
mov
rolb
or
cmpsl
int
push
stos
mov
out
and
jae
cwtl
jle
into
mov
xlat
mov
dec
sub
aad
leave
push
add
call
mov
xor
mov
push
aas
clc
pop
test
repnz
out
out
inc
icebp
inc
mov
and
xor
inc
std
ljmp
cmp
cmp
subb
cmpsb
js
jmp
sub
loopne
mov
sbb
out
pop
test
aaa
mov
mov
sbb
rorb
mov
loop
lods
and
mov
lds
arpl
loopne
sti
sbb
pushf
sub
mov
repz
mov
call
pop
jns
das
mov
mov
jg
xor
mov
mov
mov
xor
adc
pop
add
stos
int3
inc
in
xor
mov
sub
les
ljmp
cmp
xor
scas
or
jnp
mov
and
out
loop
adc
repz
xor
mov
and
mov
sbb
xchg
mov
lahf
loop
xchg
cmc
int3
sbb
data16
add
add
call
push
xchg
xor
hlt
pop
rorl
jno
in
xlat
outsl
fs
jae
sbb
jmp
mov
fiadds
enter
pop
pop
movsb
sub
push
lahf
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
subb
sub
mov
mov
jae
or
test
outsl
jle
add
or
subb
mov
jb
jl
aad
je
fwait
outsb
test
data16
cmpsb
loop
pop
lret
or
sbb
push
lcall
mov
cmpsb
outsb
push
inc
add
call
jno
xchg
jg
aaa
loope
js
inc
push
bound
dec
cmp
inc
cmp
gs
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
cmpb
and
cmpsb
outsb
push
inc
jge
mov
push
shlb
add
test
jb
movsl
movsb
cmpsb
outsb
push
inc
lods
orb
mov
bound
iretw
in
fistps
mulb
mov
dec
lds
aam
xchg
stos
scas
les
in
and
inc
mov
movsb
mov
add
call
scas
mov
ficompl
mov
ret
mov
push
mov
or
add
imul
inc
push
lock
sahf
sbb
pop
sbb
int
xchg
fs
xchg
sbb
add
cmpl
add
out
xchg
xor
and
mov
enter
ds
dec
pop
es
inc
pop
mov
lods
mov
lret
int
lods
not
and
imul
mov
pop
scas
aaa
add
and
xor
xchg
jo
or
add
call
push
push
push
xchg
cmp
testb
scas
insl
lcall
sbb
cmc
mov
inc
adc
mov
add
clc
loope
mov
cmc
xor
mov
or
mov
cmp
fists
dec
nop
aaa
sub
or
sti
adc
mov
jae
xchg
mov
sub
jmp
testb
inc
push
frstor
cmpb
movl
cltd
inc
mov
call
pop
pop
add
xchg
sarb
mov
sbb
sbb
clc
hlt
dec
push
and
loop
dec
movsl
insl
add
sub
cmp
in
pop
jecxz
insl
sub
push
je
dec
xchg
lods
ror
daa
out
popf
insb
and
pop
sub
adc
jb
hlt
or
or
cmpsl
sub
loopne
pop
push
cld
mov
enter
sahf
mov
sub
push
mov
mov
testb
aas
mov
clc
stc
mov
ret
xchg
add
call
out
mov
addr16
xor
in
aam
mov
sbb
jecxz
fwait
aad
cwtl
pop
data16
ror
int3
arpl
fcoms
inc
jns
jo
pop
push
cwtl
xlat
mov
jne
in
stc
xor
scas
or
xchg
repz
cmp
mov
inc
jg
fs
mov
mov
fbld
cltd
shrd
dec
ss
pop
ljmp
xor
call
dec
inc
sbb
sbb
dec
outsb
stos
sbb
push
sub
add
call
and
push
js
push
adcl
hlt
rolb
or
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmpsb
sbb
sbb
mov
mov
mov
sbb
hlt
shl
stc
and
push
sub
push
dec
mov
icebp
movsb
fucom
out
or
and
jle
outsl
inc
cmc
ror
arpl
scas
sub
icebp
imul
fstpt
jbe
in
dec
sbb
ret
mov
push
lret
fstpl
cltd
test
mov
call
faddl
dec
and
xchg
mov
mulb
jl
mov
cmp
in
add
mov
and
lahf
pop
jg
aas
ficoms
xchg
xchg
cmpsl
mov
sub
mov
jno
mov
pop
inc
in
push
or
std
xor
call
push
mov
sub
in
sub
pop
or
jl
daa
mov
push
js
fwait
mov
sbbb
adc
pop
xor
add
out
fwait
sti
mov
add
call
je
stc
mov
mov
ja
sub
addr16
gs
mov
or
ljmp
scas
add
dec
nop
inc
push
push
in
sahf
in
pop
hlt
add
add
stc
push
sub
jno
dec
movsb
fldenv
hlt
add
sbb
xor
mov
or
int3
push
mov
shll
popa
cld
cmp
notb
movsb
cmpsb
outsb
push
inc
pop
and
xchg
mov
fidivs
add
call
xor
mov
push
or
push
or
sbb
sub
in
in
cmpsb
push
jo
je
sub
xor
xor
adc
inc
into
jge
mov
shr
loopne
cli
js
in
push
mov
in
dec
inc
inc
dec
sbb
push
mov
in
mov
and
leave
jne
fsub
idiv
and
fmuls
mov
test
or
inc
jae
lds
jle
xchg
add
call
fists
jns
in
stc
mov
pushf
xchg
enter
jle
cli
js
in
push
mov
in
dec
inc
cmp
loop
mov
sbb
or
adc
and
push
jmp
xor
fistpl
loope
cmp
mov
dec
enter
aas
outsb
popf
js
mov
adc
roll
fadd
push
or
cmpb
cmp
lea
in
adcl
call
add
or
jl
outsb
pusha
shrb
push
jp
ja
dec
aaa
sub
aad
pop
into
xor
pusha
out
insb
jecxz
sbb
adc
jae
jle
jne
cmpsb
in
fildll
fdivl
jecxz
cld
sbb
mov
add
or
loopne
mov
rcll
push
xchg
jb
movsl
movsb
cmpsb
outsb
push
inc
pushf
unpcklps
xorb
movsl
jne
je
enter
mov
fisubl
int
mov
add
call
mov
sub
push
bound
out
sub
xor
stos
push
jae
das
inc
es
inc
mov
leave
movsl
rcrl
add
mov
or
mulb
pop
mov
repnz
inc
adc
push
ss
cmc
sub
fwait
xor
push
dec
jecxz
mov
dec
int3
scas
sub
xor
pop
outsl
push
cmovp
dec
cmp
in
add
out
adc
cmp
or
mov
cmp
push
jns
cmp
fcomi
xchg
scas
mov
lcall
call
inc
js
ficoms
adc
cmp
mov
lock
ret
popf
mov
adc
pop
fidivl
inc
pop
js
outsl
repz
mov
and
push
lret
push
pop
xor
addr16
or
sub
mov
xlat
out
scas
int3
xchg
mov
test
add
mov
jae
stos
mov
mov
lods
xchg
lods
cmp
fwait
sbb
clc
rolb
fstpt
push
and
cmc
out
loop
mov
in
add
call
cmp
fwait
sbb
clc
or
xchg
sbb
pop
xchg
std
inc
xor
pop
jl
cld
adc
cmp
or
inc
insl
push
les
xorb
popw
into
push
test
sub
jmp
call
loop
test
fcmovu
test
mov
dec
sub
jmp
fdiv
pop
or
not
hlt
adc
loope
jge
popa
lock
sbb
xchg
jae
push
in
sub
jb
test
add
call
sub
xchg
cmc
into
adc
loop
xchg
pop
xchg
jae
fldt
pop
out
adc
mov
adc
cmp
gs
in
fildll
cmp
pop
cmp
leave
cwtl
xchg
or
pop
sbb
xchg
xchg
xor
enter
mov
push
lret
ret
ds
mov
mov
pusha
xor
enter
or
and
dec
mov
jne
testb
pop
adcl
test
xor
orps
mov
add
call
pop
mov
sbb
insb
rcll
dec
icebp
push
mov
vpcomq
dec
nop
fstps
or
fs
and
cwtl
ss
dec
push
mov
movsb
addl
jbe
pop
int3
push
pop
pop
shl
push
add
fcomps
push
repz
or
rorb
int3
sbb
orps
mov
rclb
je
jg
cmp
movsb
hlt
jle
add
clc
and
add
call
inc
aaa
lret
out
inc
lods
clc
pop
sub
cmpl
add
mov
cwtl
pop
aas
lea
fidivs
shr
mov
sbb
cmp
push
xor
add
jo
flds
daa
fwait
lcall
mov
insl
push
dec
push
pop
in
mov
mov
mov
outsb
and
inc
test
sbb
jg
fildll
out
xorl
push
mov
mov
xchg
cld
jmp
mov
sbb
mov
clc
xchg
mov
jl
jb
xchg
add
call
jmp
lds
push
dec
cld
inc
incb
xor
jp
stos
subb
out
xchg
add
cmpsl
sbb
enter
imul
negb
stc
cmpsl
sbb
enter
push
out
fiaddl
es
aam
movsb
ficomps
int3
push
pop
pop
rcl
inc
xchg
or
xor
orps
jg
or
adc
lret
push
aas
aaa
pop
cli
push
mov
test
push
mov
pushf
sahf
or
push
push
faddl
adc
add
call
pop
adc
mov
fldt
test
sbb
iret
pusha
rorl
xlat
dec
inc
push
psubd
sub
data16
push
inc
rorb
push
xorb
fdivl
fs
sti
movsl
mov
leave
mov
subb
pop
cmp
sub
adc
mov
subb
lret
cmpsl
and
push
dec
push
mov
movsb
shll
inc
scas
lods
dec
sbb
push
pop
pop
shlb
movsl
or
push
test
pop
int3
push
pop
pop
shl
mov
push
mov
call
ds
ja
add
or
jmp
pop
ss
ja
bnd
push
cmp
xchg
adc
sbb
mov
sti
sahf
xlat
pop
arpl
fsubrs
out
inc
leave
push
mov
sar
call
push
pop
pop
mov
out
xchg
sub
movsl
movsb
cmpsb
outsb
push
inc
das
mov
in
and
dec
xchg
daa
jg
jle
outsl
inc
cmc
ror
arpl
fstl
push
idivl
push
popf
xchg
scas
mov
and
cmc
out
loop
add
call
cld
popf
sbb
mov
out
shl
jne
mov
testb
movsl
movsb
cmpsb
outsb
push
inc
enter
adc
rcll
add
dec
mov
xor
pop
inc
jecxz
inc
ljmp
pop
ret
or
xorl
popf
pop
fs
cmp
lahf
dec
stc
mov
aam
out
xchg
sub
movsl
movsb
cmpsb
outsb
push
inc
mov
lods
lods
fdivs
aam
dec
cwtl
mov
xlat
dec
lret
out
add
call
cs
or
bound
mov
cmc
push
and
xchg
clc
pop
pop
mov
push
cmpsl
mov
jp
lret
ja
jp
add
pop
sub
lcall
call
xor
push
popf
xchg
es
cmpsl
enter
scas
cli
xchg
fmuls
add
push
iret
xor
loope
jle
mov
ficoml
out
sbb
push
mov
dec
push
popf
xchg
jbe
mov
arpl
call
sbb
in
jnp
shl
add
jb
and
scas
xchg
sub
in
lods
stos
pop
sub
pop
adc
dec
push
or
jns
outsl
add
or
cld
sbb
xor
mov
inc
sub
adc
rcrb
pop
adc
push
cmp
movsb
rcl
xor
push
xor
test
mov
call
and
ret
and
icebp
or
shl
push
cwtl
pop
jae
jb
add
call
sahf
mov
xchg
outsl
outsl
dec
sarl
std
pop
or
ss
dec
je
lods
into
mov
lock
sbbb
add
adc
outsl
icebp
adc
dec
and
popf
sub
adc
add
call
xchg
insl
addb
pop
int
mov
inc
fstpt
lock
sbb
add
in
jp
and
xor
lods
lea
imul
lea
ss
push
xor
out
loope
and
aad
push
mov
mov
aam
and
dec
dec
add
call
mov
imul
mov
inc
fstpt
push
cmp
jle
sbb
or
mov
popf
gs
dec
lods
jl
push
insb
lods
mov
xlat
cmpsb
out
mov
jae
fadds
fcomps
xchg
xlat
pop
lcall
aas
mov
and
daa
fdivs
push
xchg
mov
andb
adc
leave
adc
cmp
pminub
add
pusha
nop
xchg
inc
aam
lret
cmc
mov
xor
or
xor
iret
outsb
stos
add
call
shll
mov
ljmp
mov
push
mov
fldt
imul
xchg
cld
andb
filds
mov
in
stc
mov
jg
push
pushf
sub
mov
sbb
sub
push
in
lods
stos
pop
sub
pop
adc
dec
push
or
imul
addb
lea
and
cld
sbb
xor
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
ficomps
int3
push
pop
pop
rorb
add
add
call
test
int3
hlt
ror
jg
sub
ret
push
mov
std
out
push
cmp
in
adc
and
sbb
out
push
cmp
in
mov
sub
lret
xor
jp
inc
mov
subb
pop
xor
cwtl
mov
inc
pop
pop
cmp
cltd
pop
sbb
or
cwtl
popf
pop
or
andl
add
call
lcall
mov
mov
popf
sbb
pop
push
sub
inc
inc
jg
xchg
out
mov
add
call
lahf
int
int
aas
mov
mov
jae
sbb
insb
lret
in
adc
stc
and
push
pop
inc
test
mov
div
adc
or
xchg
mov
or
pop
inc
push
sbb
insl
gs
lock
sub
fidivs
mov
mov
mov
popa
cltd
mov
sbb
jae
in
gs
inc
outsl
cmpsb
into
mov
rcl
dec
rcrb
push
push
inc
push
aad
faddl
sbb
cmp
call
std
pusha
sub
mov
inc
sbb
clc
fwait
jbe
or
jle
push
sbb
mov
xor
inc
xchg
push
push
out
popa
dec
cwtl
jecxz
enter
imul
bound
sbb
fwait
cmp
mov
or
and
xchg
fnsave
cmp
fwait
sub
mov
cmp
insb
add
fistl
imul
cmp
sbb
ljmp
mov
iret
icebp
dec
decb
cltd
das
add
call
dec
mov
mov
mov
pop
dec
shlb
out
lea
xor
insb
ds
cs
mov
stc
push
insb
push
in
leave
sub
cmp
sbb
xchg
gs
hlt
ret
shrl
imul
imul
add
insb
popf
mov
jo
jb
cmp
or
std
ja
imul
xchg
imul
mov
repz
leave
dec
push
ja
xchg
inc
cmc
stc
cmpsb
mov
lret
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmp
mov
scas
mov
scas
dec
out
mov
outsb
jbe
sahf
insl
xchg
cmp
mov
sub
int3
ficomps
test
jo
or
xor
xchg
xchg
xchg
mov
repnz
jecxz
daa
ss
je,pt
inc
cmp
mov
inc
scas
add
stos
test
nop
pushf
in
lcall
in
enter
sub
lods
into
int
div
cwtl
stc
es
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xchg
enter
pop
mov
inc
loopne
mov
sti
dec
mov
push
xchg
and
rol
testb
mov
or
fnstcw
sahf
aaa
enter
daa
adc
repz
pop
pop
mov
test
add
fimuls
pop
gs
push
out
xchg
or
les
dec
dec
fildl
ds
or
out
mov
mov
pop
xchg
inc
cmc
stc
cmpsb
mov
lret
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
shlb
popf
add
rorb
or
pop
xor
test
mov
mov
sbb
fstl
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
adc
in
xchg
imul
fwait
jmp
popf
mov
cmp
xchg
and
cltd
sbb
jp
stc
pop
lret
mov
int
jnp
cli
fnsave
mov
push
loop
mov
das
sub
lods
into
int
div
cwtl
stc
add
call
popa
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
fndisi(8087
arpl
sub
dec
imul
out
mov
xchg
xchg
cmp
or
loop
inc
sub
jb
mov
call
mov
aas
lods
mov
push
mov
add
sub
jne
cli
sbbl
iret
xchg
mov
gs
cmc
mov
rol
int
or
cmp
inc
sub
inc
add
pop
xchg
inc
cmc
stc
cmpsb
mov
add
call
lret
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xor
xlat
je
pop
test
outsl
dec
xor
fwait
lds
fsubp
mov
subl
cld
xor
add
ret
jp
std
mov
dec
sbb
and
jns
lea
xchg
xchg
mov
lcall
cwtl
push
or
push
jmp
imul
sahf
mov
movsb
out
pop
xchg
fidivrs
add
call
sub
lods
into
int
div
cwtl
stc
es
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pop
cwtl
les
adc
cld
add
inc
xchg
jns
and
adc
inc
and
or
xchg
and
mov
inc
lahf
xor
fnstenv
and
je
cltd
movsl
movsb
cmpsb
outsb
push
inc
mov
adc
in
xchg
imul
fwait
jmp
popf
mov
cmp
cmpsl
xchg
lock
jl
add
pop
fiaddl
and
push
inc
xchg
cli
and
out
int3
add
call
xchg
int3
push
jp
das
sub
lods
into
int
div
cwtl
stc
es
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lds
rcrb
adc
sti
fwait
jecxz
mov
cmp
inc
push
enter
cli
in
pusha
cmp
test
cltd
jae
or
in
ljmp
sub
int3
ficomps
test
jo
or
xor
xchg
xchg
xchg
mov
leave
pop
cmpsl
sub
dec
xor
add
call
or
mov
addr16
xlat
notl
mov
sbb
mov
fs
das
sub
lods
into
int
div
cwtl
stc
es
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
ss
and
orb
inc
sub
psadbw
sub
popa
fninit
das
orl
add
shrb
sbb
sub
pop
addr16
mov
or
pop
xchg
jne
out
ds
add
call
xor
pop
ret
jns
mov
sbb
jmp
jecxz
frstor
pop
dec
or
rorl
jp
aad
in
and
enter
add
cmc
stc
cmpsb
mov
lret
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
aas
lcall
jns
roll
fmulp
in
das
inc
mov
aaa
sub
int
lds
dec
jle
inc
sbb
inc
jl
cmp
push
stos
dec
jl
add
call
movsl
jl
adc
lods
scas
pusha
cmpsl
push
lods
orb
movsb
sti
cwtl
insl
xchg
sbb
cmp
xchg
mov
xchg
mov
dec
adc
cmp
subb
and
push
lods
xchg
xchg
mov
sbb
sub
sub
das
sub
lods
into
int
div
cwtl
stc
es
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
adc
icebp
roll
mov
xchg
jnp
inc
int3
bound
ficompl
xchg
fwait
les
add
adcb
add
call
sub
testl
dec
shl
sub
fistps
fwait
xchg
xchg
add
aaa
jns
out
jae
jbe
and
in
fistl
sbb
mov
ret
mov
cmp
push
fistps
test
in
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lahf
adc
call
mov
loope
gs
mov
cld
jno
mov
bound
leave
push
lret
insl
out
mov
lret
jae
mov
in
addr16
pop
xor
xor
push
lret
ds
movsb
jp
js
lret
mov
cltd
mov
ds
out
aas
inc
pop
jbe
cwtl
out
aaa
stos
fsubr
push
dec
into
repnz
pop
mov
and
push
jb
jns
sub
clc
lret
jns
daa
jle
xchg
lea
stc
mov
xor
dec
pushf
loop
loopne
xlat
pop
inc
outsl
ds
ror
imul
call
loopew
xchg
mov
add
pusha
stc
movsl
mov
add
pusha
stc
movsl
mov
aam
pop
lahf
mov
lods
shl
std
lods
sbb
inc
and
cltd
add
pusha
stc
movsl
mov
add
pusha
stc
movsl
mov
add
pusha
stc
movsl
mov
add
pusha
stc
movsl
mov
add
pusha
stc
movsl
mov
add
pusha
stc
movsl
mov
add
pusha
stc
movsl
mov
add
pusha
stc
movsl
mov
add
pusha
stc
movsl
mov
add
pusha
stc
movsl
mov
add
pusha
stc
movsl
mov
add
pusha
stc
movsl
mov
add
call
add
pusha
stc
movsl
mov
add
pusha
stc
movsl
mov
add
pusha
stc
movsl
mov
add
pusha
stc
movsl
mov
add
pusha
stc
movsl
mov
add
pusha
stc
movsl
mov
add
pusha
stc
movsl
mov
add
pusha
stc
movsl
mov
add
pusha
stc
movsl
mov
add
pusha
stc
movsl
mov
lea
mov
or
mov
test
lods
jmp
jb
movsl
movsb
cmpsb
outsb
push
inc
jns
popf
lds
fs
bound
dec
aas
sub
fsubrl
or
call
jb
movsl
movsb
cmpsb
outsb
push
inc
std
in
out
add
call
or
and
or
loopne,pn
jb
jge
jg
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
push
jge
ja
xor
push
xchg
dec
mov
fwait
in
and
movsl
movsb
cmpsb
outsb
push
inc
mov
cmp
mov
xor
mov
imul
push
jb
movsl
movsb
cmpsb
outsb
push
inc
stos
xor
xor
test
bound
dec
aas
sub
fsubrl
aas
mov
cmpsl
fiaddl
jb
movsl
movsb
cmpsb
outsb
push
inc
in
test
mov
cmp
fiadds
add
call
ds
xchg
or
jge
mov
lret
xchg
and
ljmp
outsb
push
inc
ret
popa
mov
sbb
iret
sahf
bound
dec
aas
sub
fsubrl
out
add
mov
sbb
cmpsb
outsb
push
inc
fidivs
js
adc
iret
jl
add
mov
ret
sbb
and
ljmp
outsb
push
inc
shrl
mov
sub
fsubrl
mov
insl
jb
movsl
movsb
cmpsb
outsb
push
inc
std
in
out
cs
out
sub
inc
hlt
dec
cmp
add
call
xchg
mov
fildll
xchg
jl
jb
movsl
movsb
cmpsb
outsb
push
inc
xchg
mov
push
in
mov
adc
sub
fsubrl
add
cwtl
jb
movsl
movsb
cmpsb
outsb
push
inc
andl
shlb
xchg
sub
mov
push
sub
adc
sbb
and
ljmp
outsb
push
inc
lea
fisubl
dec
aas
sub
fsubrl
daa
dec
cmp
xchg
std
sub
movsl
movsb
cmpsb
outsb
push
inc
ds
pop
and
sbb
scas
lea
sbb
xchg
add
call
xor
movsl
movsb
cmpsb
outsb
push
inc
movsl
push
mov
or
dec
aas
sub
fsubrl
aas
pop
aam
push
or
jb
movsl
movsb
cmpsb
outsb
push
inc
loop
bound
lds
das
cmp
call
mov
push
and
push
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
jecxz
jl
repz
cmpsl
cld
bound
dec
aas
sub
fsubrl
pop
divl
cltd
movsl
movsb
cmpsb
outsb
push
inc
andl
shlb
or
outsb
jbe
test
xchg
push
popf
pop
fsubrs
call
fs
movsl
movsb
cmpsb
outsb
push
inc
jne
mov
lock
in
inc
data16
aad
pop
push
pop
scas
daa
mov
cli
jb
movsl
movsb
cmpsb
outsb
push
inc
std
in
out
cs
inc
xor
sub
mov
adc
xchg
and
ljmp
outsb
push
inc
and
je
data16
aad
pop
push
pop
mov
xchg
mov
movsl
movsb
cmpsb
outsb
push
inc
std
in
out
cs
dec
mov
daa
popa
dec
call
mov
into
jne
and
loop
in
jb
movsl
movsb
add
call
outsb
push
inc
insb
outsb
fists
data16
aad
pop
push
pop
pop
sahf
xor
sarb
loopne
cltd
movsl
movsb
cmpsb
outsb
push
inc
std
in
out
cs
or
or
popf
pop
loopne
jp
cmp
lds
jbe
cltd
movsl
movsb
cmpsb
outsb
push
inc
push
inc
cmpl
and
aad
pop
push
pop
xchg
inc
or
sbb
cltd
movsl
movsb
cmpsb
outsb
push
inc
std
in
out
cs
mov
inc
jbe
push
mov
jmp
daa
jl
sub
stc
pop
clc
jb
movsl
movsb
cmpsb
outsb
push
inc
pop
adc
add
call
adc
data16
aad
pop
push
pop
lcall
xchg
jb
movsl
movsb
cmpsb
outsb
push
inc
loop
bound
lds
adc
pop
loopne
jp
cmp
dec
lahf
ljmp
outsb
push
inc
adc
inc
icebp
data16
aad
pop
push
pop
push
jno
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
loop
bound
lds
test
out
or
add
push
or
and
ljmp
outsb
push
inc
xchg
insl
notb
add
call
and
aad
pop
push
pop
push
out
adc
jmp
movsl
movsb
cmpsb
outsb
push
inc
loop
bound
lds
addr16
or
test
sbb
aam
push
inc
ret
jb
movsl
movsb
cmpsb
outsb
push
inc
jns
call
in
data16
aad
pop
push
pop
loop
outsl
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
loop
bound
lds
aaa
roll
inc
testl
jmp
cltd
movsl
movsb
cmpsb
outsb
push
inc
xchg
and
outsb
fdivl
iret
data16
aad
pop
add
call
pop
negl
xchg
jns
outsb
and
movsl
movsb
cmpsb
outsb
push
inc
loop
bound
lds
icebp
lret
sub
mov
lret
out
inc
xchg
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
push
gs
pmullw
pop
push
pop
out
sti
and
fnstenv
movsl
movsb
cmpsb
outsb
push
inc
std
in
out
cs
cmpsb
in
inc
sub
js
popf
pop
loopne
jp
cmp
cmc
out
cmp
movsb
cmpsb
outsb
push
inc
xchg
and
outsb
fdivl
iret
data16
aad
pop
push
pop
negl
xchg
add
call
outsb
and
movsl
movsb
cmpsb
outsb
push
inc
loop
bound
lds
mov
mov
pusha
push
mov
jmp
jp
ffree
test
movsl
movsb
cmpsb
outsb
push
inc
xchg
and
outsb
fdivl
iret
data16
aad
pop
push
pop
arpl
stos
add
cltd
movsl
movsb
cmpsb
outsb
push
inc
loop
bound
lds
mov
dec
and
cmpsl
ret
filds
lahf
ljmp
outsb
push
inc
push
xchg
pop
xchg
fisttps
jecxz
push
pop
lds
xchg
xorl
add
call
movsb
cmpsb
outsb
push
inc
std
in
out
cs
inc
cmp
pop
jge
hlt
js
hlt
inc
add
xchg
and
ljmp
outsb
push
inc
cmp
aas
and
lea
jecxz
push
pop
mov
sahf
jns
jb
movsl
movsb
cmpsb
outsb
push
inc
std
in
out
cs
dec
popf
cmp
dec
inc
out
xor
dec
inc
leave
mov
lahf
ljmp
outsb
push
inc
and
je
data16
aad
pop
push
pop
sub
fdivl
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
std
in
out
cs
stc
jecxz
push
cmp
push
subl
sbb
and
ljmp
outsb
push
inc
push
mov
dec
pop
data16
aad
pop
push
pop
into
ss
xor
cltd
movsl
movsb
cmpsb
outsb
push
inc
std
in
out
cs
loop
pop
adc
cwtl
add
push
or
and
ljmp
outsb
push
inc
adc
test
cld
es
data16
aad
pop
push
pop
out
out
roll
imul
std
in
out
add
call
xorl
xchg
cmp
push
mov
jmp
xchg
and
ljmp
outsb
push
inc
xchg
insl
notb
and
aad
pop
push
pop
push
out
adc
jmp
movsl
movsb
cmpsb
outsb
push
inc
loop
bound
lds
adc
dec
inc
out
xor
dec
inc
leave
mov
lahf
ljmp
outsb
push
inc
xchg
insl
notb
and
aad
pop
push
pop
sar
sbb
push
sbb
movsl
movsb
cmpsb
outsb
push
inc
loop
bound
lds
add
call
or
test
sub
mov
insb
jb
movsl
movsb
cmpsb
outsb
push
inc
hlt
cmpsb
outsl
ja
and
aad
pop
push
pop
sar
sbb
push
sbb
movsl
movsb
cmpsb
outsb
push
inc
loop
bound
lds
aaa
roll
inc
testl
adc
cmpsb
outsb
push
inc
mov
add
pmullw
pop
push
pop
push
jno
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
loop
bound
lds
icebp
lret
sub
add
call
mov
jae
push
and
mov
sti
jb
movsl
movsb
cmpsb
outsb
push
inc
jns
call
in
data16
aad
pop
push
pop
loop
outsl
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
loop
bound
lds
inc
sub
js
popf
pop
loopne
jp
cmp
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
xchg
and
outsb
fdivl
iret
data16
aad
pop
push
pop
negl
xchg
jns
outsb
and
movsl
movsb
cmpsb
outsb
push
inc
loop
bound
lds
mov
mov
pusha
push
mov
jmp
add
call
jae
aad
data16
cmpsb
outsb
push
inc
sar
lret
xchg
aad
pop
push
pop
lds
add
ja
and
movsl
movsb
cmpsb
outsb
push
inc
loop
bound
lds
mov
dec
and
cmpsl
ret
filds
lahf
ljmp
outsb
push
inc
xchg
mov
inc
mov
popf
data16
aad
pop
push
pop
lcall
xchg
jb
movsl
movsb
cmpsb
outsb
push
inc
loop
bound
lds
pop
jge
hlt
js
hlt
inc
add
xchg
and
add
call
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
cmp
shll
inc
xor
jecxz
push
pop
negl
xchg
jns
outsb
and
movsl
movsb
cmpsb
outsb
push
inc
loop
bound
lds
adc
dec
inc
out
xor
dec
inc
leave
mov
lahf
ljmp
outsb
push
inc
push
xchg
pop
xchg
fisttps
jecxz
push
pop
sub
rcl
jb
movsl
movsb
cmpsb
outsb
push
inc
std
in
out
cs
stc
jecxz
push
cmp
push
subl
sbb
and
ljmp
add
call
outsb
push
inc
cmp
aas
and
lea
jecxz
push
pop
js
inc
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
std
in
out
cs
loop
pop
adc
cwtl
add
push
or
and
ljmp
outsb
push
inc
and
je
data16
aad
pop
push
pop
pop
cmpsb
xlat
jge
mov
movsl
movsb
cmpsb
outsb
push
inc
std
in
out
cs
enter
push
idivb
add
fwait
stos
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
test
add
call
adc
in
andl
push
pop
test
xor
arpl
movsl
movsb
cmpsb
outsb
push
inc
std
in
out
cs
jmp
pop
ret
pop
testl
sbb
and
ljmp
outsb
push
inc
jnp
lods
mov
data16
aad
pop
push
pop
xchg
xchg
pop
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
std
in
out
cs
push
popf
mov
or
test
inc
push
mov
bound
je
jb
movsl
movsb
cmpsb
outsb
push
inc
lahf
mov
or
cld
add
call
and
aad
pop
push
pop
sbb
or
inc
jae
ljmp
push
inc
std
in
out
cs
icebp
push
push
aaa
roll
inc
testl
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
push
loop
decl
pmullw
pop
push
pop
lcall
xchg
jb
movsl
movsb
cmpsb
outsb
push
inc
loop
bound
lds
icebp
lret
sub
mov
lret
jns
stos
movsb
popf
divl
movsl
movsb
cmpsb
outsb
push
inc
hlt
cmpsb
outsl
ja
and
aad
pop
add
call
pop
sar
sbb
push
sbb
movsl
movsb
cmpsb
outsb
push
inc
loop
bound
lds
inc
sub
js
popf
pop
loopne
jp
cmp
xlat
cmp
movsb
cmpsb
outsb
push
inc
mov
add
pmullw
pop
push
pop
push
jno
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
loop
bound
lds
mov
mov
pusha
push
mov
jmp
pop
push
inc
insl
adcb
jb
movsl
movsb
cmpsb
outsb
push
inc
jns
call
in
data16
aad
pop
push
pop
loop
outsl
mov
call
ss
cmp
movsl
movsb
cmpsb
outsb
push
inc
loop
bound
lds
mov
dec
and
cmpsl
ret
filds
lahf
ljmp
outsb
push
inc
adc
inc
icebp
data16
aad
pop
push
pop
push
jno
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
loop
bound
lds
adc
pop
loopne
jp
cmp
dec
lahf
ljmp
outsb
push
inc
add
mov
aad
pop
push
pop
sub
adc
jb
add
call
movsb
cmpsb
outsb
push
inc
std
in
out
cs
dec
popf
cmp
dec
inc
out
xor
dec
inc
leave
mov
lahf
ljmp
outsb
push
inc
adc
inc
icebp
data16
aad
pop
push
pop
push
jno
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
loop
bound
lds
push
cmp
push
subl
sbb
and
ljmp
outsb
push
inc
cmp
shll
inc
xor
jecxz
push
pop
arpl
stos
add
cltd
movsl
movsb
cmpsb
outsb
push
inc
add
call
out
bound
lds
ret
jmp
hlt
inc
add
xor
dec
cmp
adc
movsl
movsb
cmpsb
outsb
push
inc
dec
jae
fildll
and
aad
pop
push
pop
jae
lahf
jg
stc
adc
jb
movsl
movsb
cmpsb
outsb
push
inc
std
in
out
cs
dec
popf
cmp
dec
inc
out
fistpl
inc
testl
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
adc
test
cld
es
data16
aad
pop
push
pop
adc
sub
dec
jb
movsl
movsb
cmpsb
outsb
push
inc
std
in
out
add
call
cmpl
test
leave
mov
or
jb
movsl
movsb
cmpsb
outsb
push
inc
xchg
and
outsb
fdivl
iret
data16
aad
pop
push
pop
negl
xchg
jns
outsb
and
movsl
movsb
cmpsb
outsb
push
inc
loop
bound
lds
shlb
test
xchg
and
ljmp
outsb
push
inc
and
je
data16
aad
pop
push
pop
call
pushf
in
lret
movsl
movsb
cmpsb
outsb
push
inc
std
in
out
cs
enter
add
call
idivb
add
out
shrl
dec
mov
movsb
cmpsb
outsb
push
inc
call
lods
jno
data16
aad
pop
push
pop
flds
lods
dec
mov
movsb
cmpsb
outsb
push
inc
std
in
out
cs
xor
lcall
mov
and
ljmp
outsb
push
inc
adc
test
cld
es
data16
aad
pop
push
pop
mov
test
sub
movsl
movsb
cmpsb
outsb
push
inc
std
in
out
cs
sbb
push
mov
call
mov
xchg
and
ljmp
outsb
push
inc
xchg
mov
inc
mov
popf
data16
aad
pop
push
pop
lcall
xchg
jb
movsl
movsb
cmpsb
outsb
push
inc
loop
bound
lds
dec
mov
imul
jmp
xchg
and
ljmp
outsb
push
inc
ret
popa
mov
sbb
iret
sahf
data16
aad
pop
push
pop
bound
and
pusha
xor
movsl
movsb
cmpsb
outsb
push
inc
std
in
out
cs
sbbb
lea
insb
dec
inc
leave
mov
add
call
mov
jns
jb
movsl
movsb
cmpsb
outsb
push
inc
jp
sbb
pmullw
pop
push
pop
add
lea
jb
movsl
movsb
cmpsb
outsb
push
inc
std
in
out
cs
scas
mov
xchg
mov
subl
test
sbb
les
movsl
movsb
cmpsb
outsb
push
inc
jns
call
in
data16
aad
pop
push
pop
loop
outsl
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
loop
bound
lds
push
cmp
push
subl
sbb
and
add
call
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
cmpl
pmullw
pop
push
pop
in
cltd
jbe
sub
cltd
movsl
movsb
cmpsb
outsb
push
inc
std
in
out
cs
push
popf
mov
or
test
mov
scas
jb
movsl
movsb
cmpsb
outsb
push
inc
jg
outsb
sub
push
movsb
push
int3
jb
fs
out
pop
loop
push
jb
movsl
movsb
cmpsb
outsb
push
inc
std
in
out
cs
test
mov
add
push
or
xor
cltd
movsl
movsb
add
call
outsb
push
inc
or
inc
lret
adc
hlt
fildll
push
inc
test
adc
std
sbb
adc
jmp
push
movsb
and
adcl
xchg
pusha
xchg
cmpb
sahf
mov
lret
in
ja
mov
xchg
sub
mov
aas
sub
fsubrl
daa
ljmp
inc
popf
jb
movsl
movsb
cmpsb
outsb
push
inc
int3
fs
mov
pop
bound
ljmp
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
xchg
jl
push
add
jg
insb
and
hlt
xchg
cld
movsw
das
enter
xchg
rcl
clc
outsb
daa
pusha
push
sub
into
dec
shl
mov
add
xchg
xchg
push
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
inc
mov
outsl
pop
mov
and
adc
enter
cli
fstpt
push
inc
mov
sbb
pusha
mov
xchg
cmp
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sbb
add
call
out
xor
add
daa
sti
popf
mov
cmc
adcl
filds
loop
mov
xlat
pop
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jno
loopne
cld
bound
in
bound
dec
aas
sub
fsubrl
xor
add
jb
movsl
movsb
cmpsb
outsb
push
inc
lods
cmp
rorl
shll
repnz
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
dec
xor
jb
xor
add
pop
and
pusha
sbb
subb
fcoms
cltd
mov
lret
sub
sbb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
cmpsl
repz
adc
sub
fsubrl
fwait
scas
out
mov
add
call
movsb
cmpsb
outsb
push
inc
fidivrl
mov
addr16
iret
arpl
inc
aad
scas
imul
test
popa
dec
inc
pop
jecxz
cmp
mov
mov
sub
jmp
sub
xchg
jp
fildll
repnz
pop
stos
push
lret
push
push
push
inc
out
xchg
aam
hlt
lods
out
lds
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
dec
andb
test
leave
and
movl
call
shlb
adc
jl
push
les
xor
sbb
lds
bound
dec
aas
sub
fsubrl
fsubp
mov
mov
cmpsb
outsb
push
inc
loope
push
sbb
shlb
fsubr
cmpsl
fistpl
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
insl
add
xrelease
mov
mov
adc
xor
ljmp
push
pop
inc
xchg
mov
call
pop
inc
data16
cwtl
inc
aam
rcr
dec
and
nop
jno
jg
pop
mov
adc
in
jle
mov
rol
jnp
in
shrb
cmp
outsl
subl
sarb
sbb
aam
sub
and
fsubp
mov
push
filds
fmuls
std
mov
inc
fildll
cmp
movsl
movsb
cmpsb
outsb
push
inc
cld
push
sbb
lock
jle
test
adc
loope
sub
fs
cmpsl
jge
inc
add
call
pop
movsl
and
ret
and
idivb
push
cmc
out
pop
jb
movsl
movsb
cmpsb
outsb
push
inc
cld
push
sbb
push
dec
ja
arpl
add
push
test
adc
loope
sub
fs
std
add
sub
clc
or
stos
int
in
pop
outsl
fistpl
xchg
dec
out
jb
movsl
movsb
cmpsb
outsb
push
inc
cld
push
sbb
stos
pop
sbb
cmpl
loope
in
popf
jnp
xor
push
sbb
lret
into
test
shl
xchg
cmp
dec
push
lods
leave
movsb
fsubs
push
xlat
fadd
push
jb
add
call
movsb
cmpsb
outsb
push
inc
rcll
aas
bound
and
fsubp
mov
push
out
shlb
or
es
add
sbb
cmpsb
outsb
push
inc
cld
push
sbb
add
outsl
pop
in
pop
mov
adc
loope
sub
fs
or
subl
mov
push
mov
adc
stc
fstpt
cltd
movsl
movsb
cmpsb
outsb
push
inc
cld
push
sbb
mov
js
add
call
push
test
adc
loope
sub
fs
fwait
pusha
inc
inc
ret
xchg
incl
in
mov
es
js
xorl
push
inc
cld
push
sbb
push
push
ret
push
test
adc
loope
fidivs
or
add
aad
jle
xor
cmp
daa
loope
push
icebp
popf
sarl
push
or
mov
cmpsb
outsb
push
inc
orb
mov
in
sub
cmp
jle
test
adc
loope
sub
fs
mov
add
call
lret
call
jo
cmp
sub
movsl
movsb
cmpsb
outsb
push
inc
cld
push
sbb
fmuls
je
jle
test
adc
loope
sub
fs
pop
aaa
fdivrs
mov
mov
movsb
jne
mov
xchg
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
cld
push
sbb
popa
test
les
decb
fsubp
mov
push
shll
je
out
fwait
dec
sarl
mov
cmpsb
or
movsb
add
call
outsb
push
inc
cld
push
sbb
xchg
sub
jle
test
adc
loope
sub
fs
xor
rorb
incl
les
test
xor
rsm
sub
cmpsb
outsb
push
inc
cld
push
sbb
xchg
into
inc
or
add
shr
xlat
inc
push
cmp
ljmp
std
jb
addb
push
adc
mov
push
lahf
cs
fstpl
sub
mov
outsb
jbe
loope
shlb
loope
cmc
mov
pop
xor
add
call
lahf
jp
xor
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
icebp
and
inc
mov
fisubl
ljmp
push
inc
cmpb
jmp
add
call
insl
push
outsl
arpl
or
push
lea
fistpll
jb
cmp
gs
js
jecxz
inc
aad
mov
mul
sub
bound
push
mov
jo
mov
inc
xor
pop
popf
xor
xlat
daa
push
xchg
mulb
pushf
and
arpl
out
js
je
jp
pop
inc
xor
mov
mov
nop
nop
jecxz
incb
mov
fsubrp
push
cmp
addr16
and
sub
add
ret
mov
sub
call
adc
paddsw
aaa
movsl
jmp
das
leave
in
fwait
mov
push
fsubrs
xchg
inc
mov
jne
aas
xlat
adc
xorl
xchg
push
push
or
or
das
in
fidivl
mov
pop
xor
jge
sub
xor
hlt
leave
pop
dec
leave
popf
xchg
gs
mov
inc
jo
out
int3
outsb
fsubrl
and
sub
mov
sub
hlt
mov
test
sub
fldt
ljmp
cmp
mov
jne
pop
cmp
popa
stos
push
add
call
pop
std
call
lret
test
mov
inc
das
imul
lahf
xchg
xor
rcrl
inc
pop
pop
pause
loop
lret
loope
sti
sar
das
adc
add
jmp
je
popa
rcll
xchg
xor
cmp
mov
and
mov
and
stos
inc
mov
aad
cli
push
xchg
icebp
mov
pushl
fdivrs
xchg
xor
and
and
fwait
cmp
add
and
roll
outsb
xor
add
call
xchg
push
fcoml
inc
push
loop
sub
in
comiss
jle
daa
xor
cmp
push
pushf
in
jbe
jne
sub
xchg
setae
pop
repz
xor
mov
cmpb
aad
sub
inc
loop
mov
into
sub
jge
or
pop
jle
mov
adc
mov
ss
cli
xchg
sub
cs
cli
and
mov
push
imul
subl
jle
ljmp
call
push
mov
push
fdivl
mov
push
xchg
inc
out
pop
dec
adc
or
or
xchg
pop
and
pop
lret
pop
scas
ror
sub
push
or
cld
xchg
adc
mov
icebp
cmp
cmc
inc
xor
pop
sbb
xchg
cmp
and
test
lret
cs
clc
cmp
push
sbb
shll
jno
adc
popa
push
leave
push
pop
xchg
cmp
push
pushf
in
jbe
jne
sub
add
call
inc
rclb
jp
xor
jns
mov
and
imul
daa
inc
aas
add
mov
jge
mov
je
mov
scas
mov
add
mov
jp
xchg
mov
enter
jp
in
test
and
xchg
xor
jno
mul
push
and
repz
lahf
mov
and
int3
or
ret
scas
div
das
mov
shl
sbb
mov
rclb
in
out
fucomi
out
pop
add
call
fnstcw
mov
inc
data16
xor
loopne
dec
movsl
add
inc
or
stos
jbe
sbb
lods
lds
imul
mov
pand
jge
sbb
shll
jno
inc
pop
in
mov
lret
pop
fstpl
mov
sub
cmp
hlt
ficomps
in
and
pop
or
scas
cmpsl
lock
sti
call
push
roll
mov
stc
add
cli
mov
ds
push
dec
addl
lock
testl
add
add
je
rcr
pop
movups
cmc
inc
add
pop
push
test
rcrb
repnz
jl
sub
sbb
ljmp
mov
dec
nop
push
and
xchg
sar
scas
xchg
arpl
mov
cld
arpl
cmpsl
bound
into
outsl
mov
mov
imul
pushf
or
mov
out
or
orl
inc
pop
aam
loopne
lods
stc
mov
testl
and
pop
test
imul
lds
call
in
imul
push
sbb
mov
out
jne
push
out
push
cs
xchg
jp
divl
mov
mov
sub
popa
sub
inc
je
xchg
jecxz
test
mov
and
inc
roll
outsb
jb
mov
mov
mov
inc
add
cmpsl
xchg
mov
xchg
jo
stos
pusha
or
sub
dec
outsb
movsl
fs
es
lock
mov
addb
lea
dec
jge
add
call
mov
inc
test
loope
testl
add
sbb
and
aam
data16
xor
loopne
jge
sub
adc
lret
and
adc
mov
adc
mov
scas
addr16
mov
loopne
lods
stc
mov
negl
dec
rcrb
popa
sbb
add
test
test
push
mov
loopne
dec
or
jae
hlt
lods
add
jae
push
mov
repnz
mov
jp,pt
cmp
or
jg
addb
add
call
mov
push
cmp
nop
int3
sbb
popf
jecxz
das
pop
shlb
ljmp
out
sbb
xchg
mov
mov
sub
pushf
xchg
add
lret
xchg
stc
push
mov
pop
testl
in
int3
jp
lock
xchg
pop
fxch
movsb
cmc
jl
adc
aas
test
scas
or
scas
rclb
jecxz
insl
test
out
pop
test
out
jb
inc
mov
out
add
les
sub
loope
xchg
popf
repz
add
call
sub
in
mov
xchg
adc
add
pop
roll
imul
scas
dec
pop
ljmp
out
sbb
xchg
mov
mov
js
add
stos
icebp
xchg
xchg
adc
push
mov
and
xchg
dec
in
int3
jp
lock
xchg
pop
fxch
movsb
or
cs
icebp
inc
mov
inc
scas
rclb
jecxz
insl
test
out
pop
test
out
jb
inc
mov
out
add
les
jg
icebp
adc
call
aad
adc
jae
sub
in
mov
xchg
adc
add
pop
roll
adc
push
sbb
inc
cmpsl
dec
pop
ljmp
out
sbb
xchg
mov
mov
mov
fisubrl
stc
push
mov
fwait
or
dec
in
int3
jp
lock
xchg
pop
fxch
movsb
data16
mov
scas
cmc
push
mov
inc
scas
rclb
jecxz
insl
test
out
pop
test
out
jb
inc
mov
out
add
les
call
jl
cmp
jl
inc
cs
loope
xchg
popf
repz
sub
in
mov
xchg
adc
add
pop
roll
mov
mov
ljmp
out
sbb
xchg
mov
mov
mov
lea
push
mov
imul
jp
lock
xchg
pop
fxch
movsb
mov
mov
dec
mov
inc
scas
rclb
jecxz
insl
test
out
pop
test
out
jb
inc
mov
add
call
out
add
les
dec
push
cmp
loope
xchg
popf
repz
sub
in
mov
xchg
adc
add
pop
roll
mov
lret
mov
dec
pop
ljmp
out
sbb
xchg
mov
mov
push
negl
sahf
add
cld
stc
push
mov
mov
xchg
dec
in
int3
jp
lock
xchg
pop
fxch
movsb
add
mov
pop
push
push
gs
mov
inc
scas
rclb
jecxz
insl
test
add
call
pop
test
out
jb
inc
mov
out
add
les
imul
mov
aad
adc
jae
sub
in
mov
xchg
adc
add
pop
roll
sbb
mov
pop
cwtl
lods
mov
scas
mov
xchg
mov
mov
loopne
test
sbb
mov
fwait
pop
push
dec
js
xchg
dec
in
int3
jp
lock
xchg
pop
fxch
movsb
mov
leave
or
mov
inc
scas
add
call
push
pop
cmp
out
pop
test
out
jb
inc
mov
out
add
les
lahf
dec
adc
sbb
loope
xchg
popf
repz
sub
in
mov
xchg
adc
add
pop
roll
icebp
mov
jmp
pop
cwtl
lods
mov
scas
mov
xchg
mov
mov
shrb
push
cmpsl
adc
push
mov
fistpll
pop
dec
decb
int3
jp
lock
xchg
pop
fxch
movsb
cmc
jl
adc
aas
add
call
out
mov
inc
scas
rclb
jecxz
insl
test
out
pop
test
out
jb
inc
mov
out
add
les
adcb
ljmp
repz
sub
in
mov
xchg
adc
add
pop
roll
imul
cmp
test
cwtl
lods
mov
scas
mov
xchg
mov
mov
lret
jae
dec
push
jecxz
repz
push
mov
jg
cmp
dec
in
int3
jp
lock
xchg
add
call
fxch
movsb
xor
adc
out
mov
inc
scas
rclb
jecxz
insl
test
out
pop
test
out
jb
inc
mov
out
add
les
sahf
lfs
xchg
popf
repz
sub
in
mov
xchg
adc
add
pop
roll
or
cwtl
cltd
dec
pop
ljmp
out
sbb
xchg
mov
mov
dec
out
or
sbb
mov
sbb
add
mov
call
in
int3
jp
lock
xchg
pop
fxch
movsb
js
int3
fnstcw
mov
inc
scas
rclb
jecxz
insl
test
out
pop
test
out
jb
inc
mov
out
add
les
lahf
dec
adc
sbb
loope
xchg
popf
repz
sub
in
mov
xchg
adc
add
pop
roll
jle
push
rolb
ljmp
out
sbb
xchg
mov
mov
stos
das
scas
leave
mov
sbb
mov
call
mov
pop
mov
jp
lock
xchg
pop
fxch
movsb
sub
pop
into
mov
inc
scas
or
scas
rclb
jecxz
insl
test
out
pop
test
out
jb
inc
mov
out
add
les
gs
add
aad
adc
jae
sub
in
mov
xchg
adc
add
pop
roll
imulb
ja
dec
pop
ljmp
out
sbb
xchg
mov
mov
push
xchg
xchg
mov
lds
add
call
or
push
mov
add
popf
mov
jp
out
cmpsb
pop
push
cmpsl
hlt
jo
push
mov
inc
fadd
fstl
inc
cmpsl
ss
lods
mov
and
jg
jb
mov
push
rcr
aam
xchg
lahf
inc
lret
and
or
hlt
or
cmp
movsl
adc
cld
pop
xlat
insl
aad
and
adc
out
inc
shll
aaa
pop
pop
jl
cmp
push
lahf
and
fs
add
ret
mov
push
push
jnp
add
call
outsb
ds
adc
fucomip
daa
ret
movsb
stos
fsubrl
push
out
mov
push
push
sub
lds
mov
adc
mov
jle
or
add
stos
scas
ja
sbb
aas
out
jecxz
dec
jno
add
cmp
cmp
jne
lahf
jae
xchg
push
xchg
sub
popa
sub
inc
cmc
cli
fldenv
push
pop
and
mov
scas
xlat
test
xchg
movsl
shlb
cmp
add
call
jecxz
xor
dec
mov
cmpsb
dec
lret
add
and
es
push
mov
loop
adcb
and
or
hlt
fistpll
popa
push
mov
nop
cld
dec
divl
mov
mov
call
jp
aam
sahf
cli
or
cld
xchg
adc
mov
push
add
shrb
push
dec
dec
sub
lret
dec
hlt
xor
and
cli
cs
jbe
cmpsl
imul
mov
cmp
fimull
fsubp
pushf
cmp
call
add
mov
or
fcmovbe
add
adc
jl
push
inc
mov
inc
xor
mov
cmp
cltd
lret
in
sub
inc
testl
std
jnp
sub
dec
sub
xchg
adc
add
mov
mov
dec
pop
sbb
or
aam
adc
mov
jae
jp
lcall
mov
xor
cmpb
sahf
lcall
lcall
dec
lret
lahf
js
movsl
jbe
sub
lds
mov
enter
lret
aad
nop
cmpsb
add
call
in
push
orl
imul
fstl
lods
adc
xchg
jge
cltd
movsl
loop
fsubs
in
fisttps
mov
xor
test
jg
fs
push
arpl
and
stos
inc
mov
aad
cli
push
add
rorb
iret
adc
in
mov
in
int
mov
xchg
lock
and
fwait
cmp
add
and
roll
outsb
xor
xchg
push
fcoml
jne
stos
xorb
xchg
add
call
nop
cmp
jp
dec
orb
xchg
cmpl
pushf
in
xorb
xor
push
jmp
pop
jnp
cli
jle
mov
add
fiaddl
int3
mov
or
scas
push
nop
or
xor
or
fnsave
mov
and
and
xlat
or
xchg
sub
cs
cli
and
mov
push
imul
subl
jle
ljmp
mov
push
fdivl
mov
push
xchg
inc
out
data16
call
dec
adc
or
adc
hlt
xor
insw
lods
jb
or
adc
loop
addr16
mov
fdivr
xchg
adc
mov
icebp
cmp
cmc
inc
xor
pop
sbb
xchg
cmp
and
jp
push
dec
mov
sub
xchg
cs
in
jmp
sbb
shll
jno
jmp
jne
pop
dec
jbe
ss
mov
mov
in
xorb
insl
jnp
add
jo
cmpsb
xor
jns
mov
call
mov
or
sbb
and
pop
xchg
xchg
adc
adc
jmp
add
mov
jge
mov
je
mov
scas
mov
add
mov
jp
xchg
mov
enter
jp
in
test
and
xchg
xor
jno
mul
push
and
repz
lds
sub
or
ret
jns
pop
dec
testl
mov
rclb
in
out
fucomi
out
pop
mov
mov
mov
inc
data16
xor
add
call
loopne
xor
push
push
pushf
adc
xor
in
imul
dec
jle,pt
mov
push
mov
call
shll
jno
or
fldl
xor
fsubs
dec
lret
enter
mov
and
and
push
je
aam
sahf
lods
xchg
push
mov
add
sar
mov
ds
push
dec
addl
lock
testl
movups
cmc
inc
add
pop
push
test
call
adc
rcrb
repnz
jl
sub
xchg
pop
dec
in
push
dec
push
push
or
push
and
xchg
sar
scas
xchg
arpl
mov
cld
arpl
cmpsl
bound
into
outsl
mov
mov
cs
pushf
or
mov
out
adc
lret
and
loopne
lods
stc
mov
not
orb
jns
stos
mov
aaa
jmp
xor
in
imul
ss
push
call
mov
out
jne
push
out
push
cs
clc
sbbl
sub
call
sub
popa
sub
inc
je
xchg
jecxz
test
mov
and
inc
roll
outsb
jb
mov
mov
mov
inc
add
cmpsl
xchg
mov
xchg
jo
stos
pusha
or
sub
jle
insb
inc
fs
es
lock
mov
and
dec
mov
lea
dec
jge
mov
or
testl
call
leave
add
sbb
mov
cwtl
pop
xor
loopne
jge
sub
lcall
sahf
and
adc
lock
xor
out
add
sti
loopne
lods
stc
mov
neg
push
les
lahf
dec
bound
fsubl
into
push
mov
loopne
dec
or
jbe
test
icebp
cmp
cmc
push
aas
sub
cmp
in
insb
mov
jp,pt
cmp
or
jg
addb
mov
push
cmp
nop
int3
sbb
popf
jecxz
das
pop
shlb
call
add
test
cwtl
lods
mov
scas
mov
xchg
mov
mov
or
dec
pop
adc
hlt
adc
push
mov
sahf
push
add
add
int3
jp
out
cmpsb
pop
push
cmpsl
hlt
jo
push
mov
inc
fadd
fstl
inc
cmpsl
ss
lods
mov
adc
push
pop
xor
mov
and
adcb
and
or
hlt
push
fidivs
pop
sbb
jnp
jno
inc
cmp
lret
repz
ss
popf
inc
lods
add
call
xchg
out
cmpsb
dec
cmp
sbb
sbb
jb
adc
and
pop
sub
sbb
push
pop
test
outsb
ds
adc
fucomip
daa
ret
movsb
stos
fsubrl
push
out
mov
push
push
sub
lds
mov
adc
mov
jle
or
add
stos
scas
ja
sbb
aas
out
jecxz
pop
imul
xor
into
hlt
or
nop
call
xchg
xchg
push
xchg
sub
popa
sub
inc
cmc
cli
fldenv
push
pop
add
call
imull
cmp
scas
xlat
test
lds
out
stos
adc
cmp
add
jge
out
imul
cmpsb
dec
lret
dec
pop
test
pop
repnz
jmp
adcb
and
or
hlt
jp
cmpsl
ret
cmp
pop
mov
nop
cld
dec
divl
pop
repz
pop
pop
dec
dec
cmp
jns
or
cld
xchg
adc
mov
push
add
shrb
push
dec
dec
sub
lret
dec
hlt
xor
and
cli
add
call
popf
jbe
cmpsl
imul
mov
cmp
fimull
fsubp
pushf
cmp
lahf
repnz
ds
sbb
ret
push
pop
jae
cmp
cltd
lret
in
sub
inc
testl
push
imul
jne
mov
xchg
or
push
xlat
jcxz
out
xchg
xchg
sbb
sahf
insl
jne
mov
fisttpll
mov
adc
add
mov
hlt
xlat
jmp
in
jbe
dec
ds
mov
add
call
push
sub
lds
mov
xchg
mov
xlat
inc
inc
dec
cmp
fimull
fsubp
pushf
cmp
shlb
xchg
aad
sbb
ret
push
bound
fnstcw
push
lret
in
sub
inc
testl
dec
jecxz
jbe
outsl
stos
fwait
dec
push
mov
jcxz
out
xchg
xchg
sbb
sahf
insl
jne
mov
fisttpll
mov
adc
add
aam
mov
hlt
mov
and
and
pop
add
call
push
shr
je
push
push
sub
lds
xchg
cltd
inc
jmp
arpl
inc
inc
dec
cmp
fimull
fsubp
pushf
cmp
inc
in
hlt
cli
aad
sbb
ret
push
pop
push
cli
into
adcb
cltd
lret
in
sub
inc
testl
btc
aad
outsl
xor
mov
jcxz
out
xchg
xchg
sbb
sahf
insl
jne
mov
fisttpll
mov
adc
add
sbb
nop
xchg
mov
add
call
scas
in
jbe
dec
ds
mov
push
push
sub
lds
idiv
lea
arpl
inc
inc
dec
cmp
fimull
fsubp
pushf
cmp
fiadds
dec
cmp
add
adc
jl
push
cmc
orl
cmp
cltd
lret
in
sub
inc
testl
sbb
test
sub
mov
jcxz
out
xchg
xchg
sbb
sahf
insl
jne
mov
fisttpll
mov
adc
add
add
call
out
pop
sbb
and
and
pop
jbe
dec
ds
mov
push
push
sub
lds
in
pop
loope
test
xor
cmp
fimull
fsubp
pushf
cmp
out
jl
push
aad
sbb
ret
push
mov
dec
dec
repz
or
cmp
cltd
lret
in
sub
inc
testl
fisttpl
out
decb
jg
dec
push
mov
jcxz
out
xchg
xchg
sbb
sahf
insl
jne
mov
fisttpll
add
call
xchg
or
adc
add
jae
ljmp
adc
scas
in
jbe
dec
ds
mov
push
push
sub
lds
mov
adc
mov
cmp
fimull
fsubp
pushf
cmp
leave
scas
ret
bound
ret
push
jne
jmp
cmp
cltd
lret
in
sub
inc
testl
std
jnp
sub
dec
sub
xchg
adc
add
mov
mov
gs
mov
add
call
ret
adc
mov
jae
jp
popf
loop
jae
fists
add
fiaddl
inc
inc
lds
je
mov
cmove
imul
cmpsb
dec
lret
dec
outsb
adc
fsubp
or
out
ss
mov
mov
lods
adc
adc
std
fiaddl
enter
jne
fstl
lods
adc
xchg
jge
cltd
movsl
loop
fsubs
in
fisttps
mov
xor
test
jg
fs
push
arpl
and
call
stos
inc
mov
aad
cli
push
adc
jl
push
jno
test
icebp
jge
popf
xchg
insl
sub
enter
sbb
and
and
fwait
cmp
add
and
roll
outsb
xor
xchg
push
fcoml
dec
movsl
mov
rcrl
mov
popa
cli
mov
cmp
push
pushf
in
cmp
xor
in
lahf
add
inc
add
sbb
sahf
push
bound
add
fiaddl
scas
mov
sahf
mov
in
jp
popf
add
call
xor
or
or
xlat
rcl
adc
sahf
cmp
push
cli
xchg
sub
cs
cli
and
mov
push
imul
subl
jle
ljmp
mov
push
fdivl
mov
push
xchg
inc
out
pop
dec
adc
or
out
sbb
sar
sub
sbb
ds
into
sub
push
or
cld
xchg
adc
mov
icebp
cmp
cmc
inc
xor
pop
sbb
xchg
cmp
add
call
and
test
ljmp
cs
pop
out
insl
sbb
shll
jno
mov
fsubrl
outsl
ret
test
sahf
fdivs
push
stos
cmp
push
pushf
in
cmp
xor
in
lahf
jb
push
outsw
shl
daa
xor
jns
mov
and
fsub
push
pop
leave
int
inc
jne
notb
add
mov
jge
mov
je
mov
scas
mov
add
mov
jp
xchg
mov
enter
jp
in
test
add
call
and
xchg
xor
jno
mul
push
and
repz
aam
inc
sub
add
xlat
push
ret
enter
insl
loopne
xlat
mov
rclb
in
out
fucomi
out
pop
mov
mov
mov
inc
data16
xor
loopne
inc
jno
scas
inc
xor
fisttps
lea
jmp
xor
in
imul
xchg
jnp
pop
ficompl
xchg
pushf
shll
jno
mov
cmp
andb
fldl
add
call
lret
xor
mov
and
ljmp
mov
jp
push
shr
push
roll
mov
stc
add
cli
mov
ds
push
dec
addl
lock
testl
movups
cmc
inc
add
pop
push
test
rcrb
repnz
jl
sub
jecxz
fistl
xchg
push
cwtl
adc
sub
mov
sar
scas
xchg
arpl
mov
cld
arpl
cmpsl
add
call
xor
outsl
mov
clc
idiv
dec
push
es
pushf
or
mov
out
inc
xchg
xor
jns
mov
stc
mov
testl
popa
add
nop
inc
mov
lea
jmp
xor
in
imul
lahf
jmp
inc
mov
insl
mov
ja
arpl
out
push
cs
mov
add
dec
out
scas
xchg
and
movsb
popa
sub
inc
je
xchg
jecxz
test
mov
and
inc
roll
outsb
jb
mov
mov
add
call
mov
inc
add
cmpsl
xchg
mov
xchg
jo
stos
pusha
or
sub
sub
ficompl
fs
es
lock
out
imul
lret
mov
lea
dec
jge
mov
jmp
scas
fiaddl
nop
jecxz
cmpsl
mov
data16
sbb
fstl
sti
loope
lea
cltd
adc
mov
fidivrl
jecxz
dec
dec
push
cwtl
lods
and
mov
mov
dec
push
mov
repnz
mov
jp,pt
lock
testl
call
rcr
pop
test
fs
sub
lds
mov
in
mov
xchg
jo
stos
pusha
or
sub
xor
je
fs
es
lock
push
hlt
mov
fidivl
fdivrl
lea
dec
jge
mov
mov
les
out
data16
sbb
fstl
sti
loope
lea
cltd
adc
mov
fidivrl
jecxz
dec
sub
dec
jge
out
loop
mov
dec
push
mov
repnz
mov
jp,pt
lock
call
ftst
out
testl
mov
xchg
mov
mov
mov
in
mov
xchg
jo
stos
pusha
or
sub
popf
push
outsb
daa
fs
es
lock
cmp
test
lret
mov
lea
dec
jge
mov
pusha
mov
nop
jecxz
cmpsl
mov
data16
sbb
fstl
sti
loope
lea
cltd
adc
mov
fidivrl
jecxz
dec
xchg
sbb
ja
xor
dec
push
mov
add
call
repnz
mov
jp,pt
lock
testl
inc
inc
scas
push
loop
sub
lds
mov
in
mov
xchg
jo
stos
pusha
or
sub
pop
and
pop
fs
es
lock
lods
sbb
inc
xor
jle
mov
lea
dec
jge
mov
dec
js
jl
les
out
data16
sbb
fstl
sti
loope
lea
cltd
adc
mov
fidivrl
jecxz
dec
cmp
xchg
adc
call
cmp
push
mov
repnz
mov
jp,pt
lock
testl
movsb
loop
push
ret
push
jle
sub
lds
mov
in
mov
xchg
jo
stos
pusha
or
sub
sub
iret
fs
es
lock
stos
mov
inc
mov
pop
sti
sub
mov
add
mov
jge
mov
xor
into
stc
les
out
data16
sbb
fstl
sti
loope
lea
cltd
adc
mov
fidivrl
add
call
jecxz
dec
jge
in
pop
inc
loopne
mov
dec
push
mov
repnz
mov
jp,pt
lock
testl
es
and
inc
cmp
xchg
call
jo
stos
pusha
or
sub
mov
es
lock
xchg
out
fnstsw
sti
sub
mov
add
mov
jge
mov
or
testl
add
sbb
cmc
leave
negb
mov
push
xor
add
call
lret
jge
sub
scas
and
stos
and
ss
daa
inc
jg
shll
mov
outsl
js
ret
sti
loopne
lods
stc
mov
mull
jmp
push
adc
lret
inc
mov
loopne
dec
or
add
pop
xor
cmpsb
mov
push
xlat
rclb
adc
popf
insb
mov
jp,pt
cmp
or
jg
addb
mov
push
cmp
nop
int3
sbb
popf
jecxz
das
pop
shlb
ljmp
out
sbb
add
call
mov
mov
pop
jg
mov
movsb
adc
push
mov
and
pop
in
rorb
int3
jp
out
cmpsb
pop
push
cmpsl
hlt
jo
push
mov
inc
fadd
fstl
inc
cmpsl
ss
lods
mov
cli
cmp
xchg
lret
xchg
lahf
inc
lret
and
or
hlt
or
pop
in
sub
dec
sbb
mov
ss
add
push
adc
cmc
mov
xchg
dec
push
lahf
and
fs
add
call
jb
loopne
and
scas
test
fldt
ds
adc
fucomip
daa
ret
movsb
stos
fsubrl
push
out
mov
push
push
sub
lds
mov
adc
mov
jle
or
add
stos
scas
ja
sbb
aas
out
jecxz
sbb
push
repz
dec
lret
lea
jae
xchg
push
xchg
sub
popa
sub
inc
cmc
cli
fldenv
push
pop
and
mov
scas
xlat
test
add
call
mov
lods
and
cmp
mov
imul
cmpsb
dec
lret
jo
and
into
sbb
in
pop
inc
sub
xchg
lahf
inc
lret
and
or
hlt
ret
insl
imul
push
push
mov
nop
cld
dec
divl
push
insl
rcr
pop
pop
mov
out
faddp
daa
push
or
cld
xchg
adc
mov
push
add
shrb
push
dec
dec
sub
lret
dec
hlt
xor
and
cli
cs
jbe
cmpsl
imul
mov
cmp
add
call
fimull
fsubp
pushf
cmp
fwait
lods
mov
sub
add
adc
jl
push
outsl
lock
cli
push
scas
xor
in
sub
inc
testl
std
jnp
sub
dec
sub
xchg
adc
add
mov
mov
push
shl
adc
push
inc
adc
mov
jae
jp
lods
mov
in
mov
xor
cmpb
outsb
in
movsb
lret
push
cwtl
pushf
sub
mov
dec
mov
cmpsb
dec
lret
mov
fwait
push
pop
jne
push
add
fsubl
add
call
out
ss
mov
pusha
jnp
mov
and
jmp
hlt
out
dec
pop
jne
fstl
lods
adc
xchg
jge
cltd
movsl
loop
fsubs
in
fisttps
mov
xor
test
jg
fs
push
arpl
and
stos
inc
mov
aad
cli
push
ret
adcb
aas
cld
xor
push
test
cmc
enter
sbb
and
and
fwait
cmp
add
and
roll
outsb
xor
xchg
push
add
call
xchg
sub
mov
push
lds
dec
or
xchg
push
xchg
lcall
mov
in
leave
jne
aad
pop
cmpsb
pop
inc
scas
inc
dec
daa
dec
xchg
xchg
adc
and
ljmp
cmp
mov
insl
ret
fiadds
stc
out
sub
jge
or
scas
stc
jl
inc
cmp
mov
inc
cmp
xchg
sub
cs
cli
and
mov
push
imul
subl
jle
ljmp
mov
call
cwtl
sbb
mov
push
xchg
inc
out
pop
dec
adc
or
enter
dec
push
mov
mov
stos
mov
into
sub
push
or
cld
xchg
adc
mov
xchg
les
xlat
add
sbb
dec
xor
imul
mov
sbb
imul
fsubl
mov
mov
or
jnp
popa
inc
cmp
xchg
push
out
sub
dec
jge
mov
push
dec
aad
into
xor
test
jg
fs
add
call
push
fisubrs
mov
aaa
movsl
mov
rol
sbb
sbb
xchg
inc
out
pop
dec
adc
or
mov
mov
or
lahf
test
gs
scas
sbb
addr16
mov
fdivr
xchg
adc
mov
push
dec
mov
arpl
add
aam
ret
mov
or
stc
dec
fsubl
mov
mov
inc
sbb
in
xchg
or
push
out
sub
dec
jge
mov
push
dec
aad
into
add
call
loope
test
jg
test
mov
jae
sbb
sbb
xchg
inc
out
pop
dec
adc
or
sub
lods
daa
fldl
sbb
lea
loop
addr16
mov
fdivr
xchg
adc
mov
pop
push
xor
or
adc
test
in
xor
imul
mov
sbb
imul
fsubl
mov
mov
sbb
sbb
or
push
out
sub
dec
jge
add
call
mov
dec
aad
into
xor
test
jg
fstpl
adc
movsl
mov
rol
sbb
sbb
xchg
inc
out
pop
dec
adc
or
cmp
xor
ds
inc
or
imul
pusha
int3
into
sub
push
or
cld
xchg
adc
mov
mov
xchg
movsb
xor
xlat
add
sbb
dec
xor
imul
mov
sbb
imul
fsubl
mov
mov
fs
repz
inc
sbb
lea
push
out
add
call
sub
dec
jge
mov
push
dec
aad
into
xor
test
jg
sub
sbb
sbb
sbb
xchg
inc
out
pop
dec
adc
or
in
mov
ds
inc
or
sarb
xchg
xchg
jge
sub
push
or
cld
xchg
adc
mov
xchg
testb
xor
xlat
add
sbb
dec
xor
imul
mov
sbb
imul
fsubl
mov
mov
cmp
add
call
add
adc
ds
push
out
sub
dec
jge
mov
push
dec
aad
into
xor
test
jg
fs
pop
test
adc
mov
movsl
mov
rol
sbb
sbb
xchg
inc
out
pop
dec
adc
or
add
push
mov
repz
in
sub
sbb
icebp
bound
pop
test
or
and
cmp
lcall
fs
pusha
push
or
popf
mov
mov
pop
movsl
popa
daa
add
add
call
sub
pop
adc
sub
rorl
push
in
and
jp
xor
mov
roll
in
xchg
add
icebp
dec
jmp
rcll
xor
arpl
pop
imul
scas
push
fs
push
adc
cs
lods
clc
jne
mov
push
cmp
cwtl
imul
mov
cmpsb
add
loope
jmp
dec
int
lods
in
test
or
aas
sbb
cmpsl
adc
test
pop
or
mov
xchg
imul
call
mov
mov
dec
push
outsl
dec
sbb
pop
push
push
pop
xlat
out
sub
dec
enter
push
pop
pop
push
add
sbb
cmovb
jae
cli
mov
lds
or
pop
mov
xchg
mov
inc
enter
inc
mov
aaa
test
repz
dec
test
test
fisubrl
dec
jnp
xchg
push
into
mov
repz
clc
test
or
rcll
fdivrl
out
push
inc
and
repnz
call
cmp
clc
mov
mov
inc
and
adc
pop
sub
push
inc
xor
push
bound
pop
rclb
sbb
lock
or
call
test
xchg
jg
lods
push
outsb
dec
movsl
subb
mov
insb
outsl
cmp
cmp
mov
xrelease
insl
mov
notb
clc
rcr
jge
daa
div
rcl
shlb
mov
jmp
or
push
pop
cwtl
xchg
push
mov
jne
push
xlat
xor
imul
and
cmp
sub
add
call
or
lods
aaa
adc
mov
cmp
in
sub
pop
loopne
sbb
fistl
loop
sub
iret
jecxz
adc
mov
sbb
js
pop
add
fidivrl
or
add
adc
shlb
lds
push
fsts
sbb
popa
subl
xchg
sbb
mov
mov
cmc
jmp
neg
cmp
mov
repz
imul
icebp
jae
cmp
inc
xchg
in
test
sarl
call
add
sbb
sbb
call
xchg
sub
insb
jns
pop
ss
insb
or
push
ja
stc
inc
xor
divb
pop
in
jmp
cmc
scas
cld
and
inc
mov
xrelease
insl
insl
xlat
lock
test
es
aad
loopne
into
out
loope
mov
adc
add
sahf
sbb
add
or
int3
repnz
sub
jecxz
sub
push
mov
js
popf
xor
std
sti
je
arpl
call
ds
lahf
jle
push
cwtl
inc
fsubp
pop
push
or
mov
or
push
out
cmp
sbb
jb
arpl
sub
insb
jns
lcall
jecxz
int
push
ja
stc
inc
popf
xor
cli
loopne
in
fstpt
fcmovnbe
in
or
fists
or
pop
mov
rcl
arpl
lods
lock
xchg
call
popf
out
int
dec
addr16
mov
gs
push
aaa
push
sbb
mov
fs
fists
nop
add
call
sbb
adc
dec
in
loop
popf
sub
push
pop
ss
xchg
int3
cmp
mov
pushf
mov
cmp
xchg
mov
cbtw
pop
add
fidivl
ljmp
jne
push
sub
mov
fdivr
idivb
imul
push
pop
das
cmp
test
lods
xor
sub
cwtl
mov
pop
daa
or
xchg
pop
enter
mov
outsl
add
or
ret
inc
inc
testl
call
loopne
out
pop
mov
repz
clc
enter
call
nop
repz
into
insl
in
jne
xor
or
sub
pop
imul
push
ja
ficompl
sbb
mov
lahf
dec
xor
pop
cmp
sbb
adc
jbe
cmp
or
or
mov
cmp
in
leave
xor
aas
pop
xchg
out
movsl
out
mov
xlat
add
sbb
inc
jecxz
test
cmp
add
call
repnz
pop
inc
cs
jne
xor
mov
data16
dec
fwait
popa
std
pop
in
add
cli
push
pop
push
mov
mov
sbb
sbb
add
test
xchg
jl
and
adc
pop
sub
push
inc
add
cmp
dec
filds
and
pop
jo
mov
sub
pop
loopne
sbb
fistl
loop
xchg
fxch
fmuls
popa
aad
adc
mov
insb
test
xor
cld
fidivrl
or
fs
xchg
cli
mov
lds
add
call
sbb
imul
mov
bound
jmp
lods
loope
mov
jo
call
insl
shll
push
mov
repz
rcl
fidivrl
mov
in
mov
and
push
jno
jg
stos
inc
xchg
fdivrs
adc
fcmovne
pop
pusha
mov
stos
dec
jp
jne
xchg
sub
insb
jns
std
pushf
pop
sub
cmp
cwtl
or
push
ja
stc
inc
xor
divb
mov
scas
cld
and
inc
mov
xrelease
insl
insl
xlat
lock
add
call
jmp
divl
out
loope
mov
adc
mov
xor
dec
out
mov
adc
pop
mov
fcmovbe
vminss
lahf
sbb
pop
push
fisubrs
push
cmp
xor
add
dec
or
mov
mov
lods
push
stos
xchg
movsl
and
xor
add
in
mov
adc
stos
mov
mov
ja
add
loope
mov
aam
sbb
jb
lods
ss
jb
mov
call
shll
orb
mull
xor
cmp
or
movsl
pushl
and
jle
cmp
push
cmc
movsl
out
sbb
or
pop
pop
outsb
in
loope
into
insb
aam
leave
gs
mov
aaa
xrelease
insl
cmc
fstpl
and
repz
aam
movb
inc
xchg
mov
jns
push
pushf
xor
push
pop
cwtl
xchg
pop
hlt
xlat
adc
jo
aaa
ret
std
pusha
aad
push
std
cmp
in
ror
pop
add
mov
scas
lret
mov
negl
add
call
insl
fwait
jb
pop
push
daa
out
hlt
ja
sti
cmp
pop
lea
add
shl
sbb
cltd
add
mov
mov
xor
adc
into
xchg
mov
jbe
out
xchg
pusha
xor
xchg
imul
divl
push
pop
mov
jg
or
jne
sub
addb
pop
add
cmpsl
sarl
nop
inc
stc
dec
push
push
cmp
pop
sbb
js
aaa
and
cmp
jge
dec
mov
sbb
add
call
dec
lret
mov
popf
push
pop
roll
fwait
push
fidivrs
imul
xor
or
stc
in
pop
mov
je
jp
loopne
test
inc
or
mov
enter
fcom
lcall
add
push
scas
xor
mov
sub
je
cmp
mov
scas
xor
mov
call
rcl
xchg
hlt
call
xor
fdivl
inc
outsl
mov
jmp
call
or
push
and
fstl
bound
push
mov
mov
xchg
inc
je
sub
mov
cmp
fsubrs
popf
mov
aas
mov
or
and
xor
negb
insl
imul
adc
push
in
push
sbbl
aam
and
out
psrlq
in
test
repz
xchg
or
dec
imul
add
imul
nop
jecxz
std
sub
pop
adc
sub
dec
xchg
inc
push
push
and
call
push
int3
or
push
in
push
cmp
push
insb
xchg
adc
loopne
jp
cmp
add
add
jmp
mov
aad
out
call
push
mov
js
lods
dec
addr16
sbb
mov
adc
mov
mov
pop
cmc
rcl
out
lret
sahf
xchg
and
xor
xor
pop
sub
mov
sub
movsb
or
in
test
repz
and
shll
dec
and
add
call
cmp
sbb
into
pop
mov
xchg
pop
ror
xlat
divb
pusha
mov
dec
sub
int3
into
push
xor
out
mov
mov
mov
cs
sbb
mov
adc
lea
jns
inc
test
xchg
jg
lods
and
add
adc
aas
inc
lret
sbb
icebp
jg
cmp
add
sbb
inc
stc
jmp
in
scas
ds
sahf
xchg
out
icebp
xchg
sub
pop
loopne
sbb
xor
add
call
dec
add
jle
mov
gs
dec
pop
push
xor
scas
inc
or
jmp
fsubrs
in
sbb
dec
sub
shlb
popf
dec
pop
mov
iret
ljmp
adc
sti
inc
mov
jne
in
mov
or
or
jp
into
inc
jo
push
pop
shrb
ljmp
and
in
xchg
cwtl
pop
hlt
xlat
adc
xchg
mov
cltd
out
xchg
loop
enter
negb
add
call
imul
adc
push
in
push
xchg
shr
mov
sub
pop
mov
xlat
add
sbb
inc
jmp
es
movsb
les
push
ds
push
in
sub
pop
loopne
sbb
xor
ret
loope
jmp
addr16
mov
gs
push
aaa
push
sbb
mov
lods
xchg
imul
sbb
jg
dec
shll
xor
jbe
test
movsb
pop
dec
sti
inc
cli
xchg
dec
inc
mov
add
sti
popf
mov
add
call
incl
outsb
data16
cmp
cs
cmp
incl
mov
in
dec
in
push
std
cmp
pop
scas
cmp
mov
addl
cmp
hlt
dec
jo
sbb
fidivl
inc
imul
dec
mov
adc
pop
xchg
or
pop
dec
or
xlat
inc
dec
pop
xorl
enter
mov
mov
mov
test
pusha
jl
aam
pop
das
cmp
xchg
sbb
aad
add
call
std
cmpsb
leave
loop
stos
push
mov
sub
int
adc
push
sarl
jl
push
push
mov
pop
sub
out
sbb
aad
jmp
adc
inc
sub
mov
cmp
mov
or
mov
xchg
repnz
dec
rcll
inc
and
enter
jbe
mov
add
dec
int3
pop
add
cmp
sbb
or
in
cmp
pop
out
mov
mov
fadds
and
call
loope
xor
xorb
daa
adc
shr
les
decl
xchg
insb
inc
rcrb
pop
sub
fwait
xor
sbb
xchg
pop
dec
jecxz
les
int
xchg
jp
xor
in
mov
int
sahf
xor
sbb
add
fs
inc
cmp
xchg
fisubrl
or
inc
clc
popf
mov
pusha
test
or
add
xchg
jp
mov
repz
pop
xchg
cli
loope
pop
je
call
call
mov
push
popa
mov
imul
stc
add
enter
movsb
lret
mov
negl
pushf
stc
call
rorl
adc
leave
scas
and
scas
inc
mov
clc
and
jp
data16
sub
shlb
popl
xchg
pop
pop
sbb
addr16
fisttpll
lds
or
mov
rcr
mov
cmp
or
rcrl
mov
fstl
adc
stos
outsl
xor
call
cs
scas
inc
xchg
sub
lret
call
mov
xlat
ja
add
sub
insb
aaa
mov
leave
lea
fsts
out
cmpsl
lahf
cmp
xor
sarl
push
test
int
ret
sbb
int3
stc
sti
dec
das
rolb
add
ret
insb
imul
add
push
push
adc
jmp
aas
cmp
pop
mov
xor
mov
in
jmp
clc
orl
nop
push
and
push
mov
jge
ss
or
aaa
push
sbb
mov
xor
sub
movsl
loope
add
call
push
add
adc
mov
xchg
sbb
push
xadd
mov
adc
sub
lea
fiaddl
xor
xorb
mov
cmpsl
es
mov
mov
or
adc
bound
pop
in
test
sbb
xchg
dec
ljmp
jge
imul
jnp
aad
cli
fsubrp
cwtl
pop
mov
pop
je
ret
sub
pop
and
insb
xchg
out
add
call
mov
test
scas
push
adc
pop
imul
insb
push
adc
test
inc
xor
inc
mov
popa
mov
push
fcmovu
xchg
xchg
mov
jb
cmp
push
jb
sbb
inc
push
aaa
push
sbb
mov
pop
pushl
adc
pop
imul
data16
dec
jmp
cwtl
dec
pushf
cmc
or
mov
call
cld
and
mov
daa
sbb
dec
mov
icebp
clc
pop
test
push
push
push
cwtl
jp
rolb
cmovnp
add
call
scas
ljmp
out
outsl
inc
aam
or
or
xchg
test
dec
mov
sbb
cwtl
xor
fwait
dec
cmp
sub
jb
stc
sub
int
jb
test
ror
mov
cmp
dec
mov
fsub
std
push
fcoms
or
nop
leave
pop
aaa
mov
aaa
jge
bound
sbb
dec
sub
daa
xchg
das
inc
adc
push
enter
add
jo
fdiv
pop
mov
mov
pushf
sub
call
push
sbb
mov
cmp
sub
or
xlat
out
sub
aas
cmp
mov
xchg
pushl
roll
fucom
jmp
aaa
stos
leave
mov
sbb
imull
pop
stc
subl
nop
stos
and
and
dec
lahf
mov
stos
imul
adc
dec
cli
mov
inc
popf
or
mov
ret
cmp
aad
pop
gs
repnz
divl
and
es
out
pop
xchg
add
call
jl
scas
inc
lret
jmp
repnz
rclb
push
xorb
cli
rcll
pop
mov
pop
jl
js
and
cmp
mov
pusha
dec
les
icebp
testl
mov
cmp
fs
xor
jg
mov
scas
sbb
insl
or
scas
jle
in
ror
pop
add
out
sbb
scas
sbb
mov
jg
test
dec
lock
sbb
mov
rol
add
call
pop
push
push
push
inc
stos
adc
mov
cmpsb
xchg
insl
cmp
insl
insl
xchg
popl
inc
push
scas
cli
addb
or
add
xchg
mov
imul
mov
shll
call
pop
mov
addb
jmp
addr16
mov
gs
push
aaa
push
sbb
mov
testl
jne
sbb
nop
imul
cmp
cld
push
dec
pop
ss
xchg
int3
cmp
cltd
jo
dec
add
xchg
mov
imul
adc
add
call
and
inc
mov
dec
movsb
push
roll
mov
negl
inc
call
je
cwtl
add
ss
add
loope
mov
sti
mov
pop
cmp
xor
shlb
inc
lea
dec
mov
pop
push
dec
dec
mov
mov
mov
in
dec
xchg
stc
adc
jo
push
push
inc
push
jno
shl
pop
cmc
lock
rorl
lock
sbb
mov
add
sbb
rcll
pop
ljmp
ret
out
add
call
loope
mov
adc
and
cmp
push
pop
cmpsl
mov
aam
push
insl
mov
push
aas
std
inc
inc
pop
out
and
lahf
cmp
jo
adc
pop
xchg
mov
pusha
rolb
sub
mov
pusha
popa
and
clc
sub
pop
adc
sub
std
loopne
push
dec
jne
fdivrp
mov
or
push
in
push
leave
aam
iret
and
mov
ret
inc
mov
push
pop
cwtl
xchg
pop
hlt
xlat
adc
pop
fs
xor
fadds
add
call
jnp
icebp
push
and
mov
js
sahf
rorb
lcall
ffree
dec
test
and
pop
subl
pop
mov
roll
dec
pop
push
in
push
push
aas
push
jge
mov
mov
aaa
test
repz
es
shl
push
jbe
sub
jbe
out
mov
or
sbb
adc
pop
adc
sub
fidivrl
fdivrp
mov
or
push
in
push
mov
sub
gs
jge
add
call
sbb
xlat
add
add
jmp
mov
mov
lea
sub
insb
int
and
lods
dec
addr16
sbb
mov
adc
inc
out
mov
xlat
jns
cmc
rorb
add
nopl
imul
or
xlat
jne
jmp
hlt
lds
cwtl
sbb
adc
inc
adcl
subb
inc
push
aaa
push
sbb
mov
bnd
inc
fucom
scas
fcompl
std
adc
or
iret
push
mov
call
mov
stos
mov
xor
xlat
sub
idivb
push
and
mov
push
sbb
xchg
and
cmc
mov
shrl
daa
jb
cmpl
and
or
jl
mov
fneni(8087
jg
or
jne
sub
std
sub
jl
sub
push
test
jb
xlat
mov
add
adc
or
mov
sarl
jl
push
push
mov
pop
sub
ret
lahf
jg
divb
je
stc
lds
add
call
js
adc
and
imul
jns
mov
int3
and
ljmp
outsb
dec
int
fistps
lea
cmp
lods
mov
jb
gs
hlt
test
out
repnz
mov
lock
push
jbe
jb
xor
xchg
xor
repz
ss
aad
in
mov
ret
rcrb
icebp
mov
and
aad
into
xor
sti
pop
push
push
and
fldenv
push
sub
adc
imul
add
call
mov
js
and
push
mov
sub
movsl
mov
xchg
jmp
vpxor
inc
fcmovnbe
xor
and
out
xchg
ss
mov
mov
pop
mov
adc
mov
push
push
xorl
inc
aaa
mov
lret
stos
lea
mov
mov
and
ret
lods
test
cmp
ss
pop
test
fnsave
dec
xchg
mov
mov
cmp
je
lea
out
fbld
call
fs
fisubrl
dec
test
jno
jp
in
mov
iret
sbb
mov
adc
jbe
aas
pop
insb
out
jb
sub
pop
adc
push
mov
mov
push
add
mov
adc
mov
mov
push
out
jmp
addr16
xor
test
scas
push
jno
jb
gs
pusha
or
call
inc
jno
imul
xchg
inc
push
leave
cwtl
add
call
mov
vunpcklps
int3
add
fwait
call
mov
fsub
std
into
push
in
int
push
pop
mov
inc
stos
idivl
adc
dec
mov
into
jg
pop
fnsave
push
fs
push
jbe
iret
fucomp
mov
mov
push
cmp
cwtl
sub
fsub
xor
gs
cmpsb
add
daa
cmp
roll
repz
jb
inc
iret
push
pop
rorl
es
mov
call
scas
sbbl
shr
jne
bound
xor
aad
clc
jl
inc
inc
dec
xchg
je
push
decb
lret
cmp
test
inc
insb
mov
mov
dec
in
push
fs
jmp
or
xchg
push
push
out
mov
addl
es
out
pop
xchg
sbb
xchg
mov
shlb
jne
dec
add
push
loopne
pop
call
push
push
pop
dec
es
mov
jbe
add
call
sbb
push
divl
xor
fsts
movsl
clc
mov
sub
psubusb
mov
lods
fsubr
inc
inc
das
lods
gs
sbb
sub
push
sub
xor
lds
js
in
mov
fdivrp
stos
push
mov
in
cs
rcll
pop
jmp
cmp
mov
or
leave
fwait
movsl
add
mov
daa
sub
cmp
incb
ss
fisubs
xchg
sbb
or
xchg
outsl
xchg
pop
mov
add
les
xor
call
jne
pushf
adc
into
cmp
sub
sub
loop
sti
and
inc
cmpsb
cmp
push
cltd
mov
cmp
mov
sbb
mov
push
aam
movsb
aaa
mov
test
jno
jbe
sub
mov
enter
push
add
push
into
nop
sub
pop
jle
inc
sarl
and
jnp
sbb
cmpsb
loope
inc
je
sub
dec
lahf
push
sub
pop
cmpsl
xchg
and
add
mov
dec
dec
add
call
adc
xchg
das
inc
adc
push
enter
mov
ret
jmp
xor
or
add
add
ss
dec
sub
xor
pop
cwtl
ja
xor
rorb
xor
pop
mov
mov
inc
sub
mov
stc
sub
bswap
push
cltd
mov
jns
mov
clc
in
xchg
sbb
sbb
pop
push
sub
test
jg
fs
mov
fwait
mov
rol
sbb
sbb
xchg
inc
out
data16
call
dec
adc
or
and
aaa
lods
add
scas
insl
daa
push
dec
cmp
arpl
pop
push
inc
xchg
nop
stos
jbe
xchg
sarb
xchg
insl
insl
xlat
lock
test
xchg
sti
ja
in
sub
adcb
adc
xchg
pop
roll
push
adc
mov
xchg
ljmp
jo
aad
lds
pushf
mov
mov
into
in
sub
pop
loopne
sbb
fistl
loop
adc
and
mov
call
adc
mov
adc
pop
xchg
mov
pusha
in
cld
leave
pop
test
sbb
or
sbb
push
aaa
push
sbb
mov
or
dec
cmc
cmp
shl
mov
mov
push
adc
push
mov
scas
in
sub
pop
loopne
sbb
stos
mov
lods
cli
data16
add
jle
mov
sub
or
or
jg
sub
pop
cmpsl
and
mov
adc
popf
subb
ds
call
lret
mov
cmpsb
sub
push
test
inc
mov
cmp
enter
jae
mov
shrb
and
cmp
div
dec
sub
xchg
cwtl
pop
hlt
xlat
adc
ds
shl
scas
mov
xchg
loop
enter
negb
insl
imul
adc
push
in
push
cmp
ret
mul
push
ficoms
cmp
adc
sbb
inc
loop
roll
sbb
shll
call
dec
hlt
mov
sub
mov
dec
loopne
les
sub
push
fcoml
dec
icebp
out
enter
or
scas
lock
xchg
bound
mov
inc
and
adc
pop
sub
push
inc
cmp
push
xor
ds
xor
and
loopne
sbb
fistl
loop
push
jmp
stos
and
lahf
data16
fwait
mov
sbb
js
mov
pusha
in
xor
int3
dec
xchg
addr16
pop
lds
push
add
call
push
sbb
mov
test
aam
or
or
cmp
push
push
bswap
or
dec
mov
repz
dec
jno
cmp
scas
xlat
fs
cmp
movsl
outsb
mov
std
add
inc
call
lahf
and
hlt
xor
cmp
pop
rcl
dec
hlt
test
push
ja
stc
inc
cmp
and
movsb
mov
ja
cmp
cmc
scas
cld
and
inc
mov
xrelease
insl
xor
fcompl
add
call
sub
mov
notb
sarb
adc
dec
sub
xor
das
inc
test
gs
test
push
inc
test
fmull
les
adc
cmp
xchg
fadds
das
mov
data16
cmp
pop
loope
icebp
scas
inc
fadds
jne,pn
bound
xor
cmp
leave
ret
pop
adc
bound
je
ret
inc
mov
jl
sbb
loope
and
add
call
xor
mov
pop
push
sbb
push
loop
std
sub
xchg
xchg
lods
pop
push
mov
outsb
and
test
rorb
mov
mov
in
add
outsl
rcrb
clc
js
adc
lret
inc
outsb
mov
jae
cmp
iret
pushl
sub
mov
lahf
andl
or
mov
mov
mov
xor
pop
lret
dec
popa
mov
jb
gs
ja
cmp
call
je
or
mov
sbb
cltd
push
jbe
in
inc
xor
cmpsl
lods
mov
daa
xchg
and
fsubrl
sub
pop
inc
flds
add
aaa
inc
pop
mov
sub
stos
and
or
cwtl
fildll
or
push
cmp
sbb
lock
cmc
cmpsb
ljmp
jl
push
lcall
jecxz
cmp
jns
pop
add
jo
mov
cmc
inc
aas
xchg
icebp
mov
inc
add
lret
add
call
mov
ret
mulb
cmp
fs
jo
mov
mov
mov
push
lahf
xchg
and
sub
call
pop
pop
and
sub
sub
cld
clc
cmc
ljmp
je
jb
sub
adc
ret
push
mov
test
mov
and
pop
loopne
mov
adc
rclb
add
mov
xor
popa
inc
cmp
dec
pop
jo
call
cld
not
cmp
call
les
test
xchg
mov
sub
add
shll
imul
inc
aaa
into
popf
loope
sub
push
loop
sub
or
hlt
xlat
sbb
daa
out
fdivr
push
aas
push
pop
out
daa
jle
mov
xlat
fsts
pop
push
or
lcall
mov
sbb
sbb
xchg
dec
add
lret
cmp
rcll
lcall
add
jle
lret
aam
lods
dec
int3
out
lea
pop
push
addr16
das
pop
add
call
mov
sahf
push
daa
mov
adc
test
cmp
int3
mov
les
pop
add
into
hlt
arpl
pop
pushf
add
aad
mov
or
cmpsb
loope
inc
lahf
out
icebp
jp
dec
push
into
cmp
xor
mull
fstpt
mov
lods
jg
pop
jp
loope
imul
adcb
pop
scas
repz
repnz
sbb
or
sub
pop
loopne
sbb
jno
adc
mov
aam
scas
mov
call
bound
shrb
aas
std
inc
inc
pop
out
ja
imul
pushf
jne
clc
xchg
or
jmp
add
loopne
adc
ret
aaa
je
sbb
push
xbegin
sbb
negl
fistpll
adc
sub
push
or
in
inc
adc
scas
sub
xlat
rcrl
push
or
dec
mov
into
mov
mov
push
cld
out
cltd
pop
scas
xchg
inc
inc
into
xchg
mov
jbe
out
xchg
pusha
xor
xchg
imul
inc
lods
in
movsl
mov
mov
mov
call
sbb
adc
cli
cmp
in
fs
imul
jo
mov
xor
pop
out
repnz
enter
jl
shl
fnstsw
iret
inc
jmp
movsb
addr16
sub
mulb
mov
xchg
cld
das
lret
and
adc
pop
adc
sub
aam
scas
jnp
in
fdivrp
mov
or
push
in
push
fdivl
add
lods
ret
inc
mov
push
pop
cwtl
xchg
pop
hlt
xlat
adc
add
call
mov
int3
test
add
push
and
mov
js
mov
cmpsb
prefetch
sbb
not
mov
mov
or
leave
xor
testb
lock
cwtl
sbb
jbe
adc
int3
popw
je
int
xor
mov
addl
adc
sti
repz
mov
lret
mov
pop
jmp
mov
pop
push
xor
dec
dec
lahf
lock
sbb
sub
or
clc
or
call
je
and
push
inc
push
jno
movsb
and
add
dec
dec
lock
sbb
mov
adc
mov
cmpsb
xchg
push
ficompl
push
dec
out
loope
mov
adc
pushf
cld
lds
mov
jecxz
in
jnp
and
lea
lods
jne
xor
mov
js
sahf
rorb
lcall
vmovups
je
lahf
vsubss
shrl
cmp
xchg
mov
pusha
in
enter
add
call
sub
pop
aaa
test
scas
int3
mov
insb
outsl
cmp
shrb
pop
xor
mov
pop
mov
jbe
lods
lret
test
movsl
push
and
inc
rorl
pop
out
fimull
fnsave
jge
pop
jle
je
and
cmp
in
das
cli
jae
sbb
add
xchg
jmp
jg
dec
push
sbb
cld
leave
xlat
enter
movl
pusha
mov
les
out
shrb
add
call
xchg
fs
cld
in
shrl
add
push
sbb
mov
inc
sbb
stos
fucomip
jbe
std
mov
mov
mulb
lret
outsl
loop
movsb
mov
jne
hlt
dec
xorl
out
xchg
clc
sbb
in
xor
mov
dec
xor
push
shll
xor
cmp
pop
adc
imul
lea
dec
insb
cmp
ret
push
push
daa
inc
ret
dec
js
dec
jl
mov
divb
call
push
pop
test
inc
es
in
les
lods
mov
not
addr16
or
fs
ficoms
jne
lret
or
clc
fiadds
hlt
imul
fstp
lods
push
and
jae
data16
jo
xchg
pushf
loope
and
push
and
push
push
cmpsb
int
sub
dec
out
push
inc
xlat
pop
mov
inc
add
mov
cli
les
adc
mov
mov
mov
cs
add
call
add
mov
mov
and
push
add
xor
pop
lods
test
mov
pop
dec
cmp
outsb
sub
stos
repnz
cmpsl
lods
lahf
insl
nop
dec
jno
movl
xor
xchg
test
icebp
je
push
lcall
hlt
lea
in
data16
popa
sbb
push
adc
jnp
jns
imul
pop
mov
mov
fnstcw
add
sbb
dec
lods
stc
push
and
lods
sub
in
sbbl
call
and
imul
xor
es
mov
dec
pop
pop
and
xchg
stos
repnz
sahf
sti
pop
xchg
xchg
cmp
mov
clc
dec
sub
fldcw
inc
adc
mov
add
ds
emms
popf
pop
int3
add
mov
sub
mov
xor
arpl
mov
mov
pop
test
rorl
rol
negb
mov
movsl
bndstx
mov
mov
call
ss
sub
cmpsl
xchg
cmp
scas
dec
repz
pop
test
mov
lods
adc
pusha
jge
cld
sbb
push
mov
shll
loope
mov
fsubrl
loope
pop
sbb
cmp
leave
fdivl
pop
iret
nop
scas
lock
out
mov
dec
stc
orb
dec
xchg
add
pop
jl
add
dec
stos
fstp
lods
mov
mov
andb
lods
jns
ret
inc
imul
insb
push
sub
scas
xor
repz
rcr
fwait
xor
cmpsb
rcll
add
call
dec
in
addr16
out
rolb
xchg
ret
mov
shl
xchg
cmp
inc
leave
mov
lahf
sub
enter
dec
inc
jae
xchg
cltd
insb
dec
inc
js
lock
dec
and
push
xchg
adc
lea
adc
or
sti
and
int
jg
push
pop
sub
cli
push
adcb
mov
mov
sub
fsub
xor
gs
xchg
xchg
fdivrs
jg
mov
and
ljmp
add
call
or
jmp
shl
mov
push
and
mov
mov
stos
xor
or
xor
sub
add
fsubs
jle
xchg
or
and
dec
orb
add
dec
ds
pop
in
xor
daa
jg
and
push
clc
mov
mulb
adc
mov
stos
es
pop
push
out
cmp
scas
jecxz
add
lds
fdiv
cmp
aaa
daa
shr
addr16
jmp
lds
cld
cmp
scas
add
andb
add
call
out
jns
cmpsl
mov
adc
xchg
push
push
leave
mov
divb
repnz
stos
mov
out
add
sub
aad
ds
aaa
pmaddwd
dec
dec
gs
dec
fbstp
imul
xor
push
je
dec
push
andl
lret
shlb
daa
repz
dec
add
sub
and
ret
push
sahf
incl
xor
adc
jp
dec
decl
outsb
adc
loope
mov
pusha
in
repz
fwait
xchg
sbb
in
adc
sbb
mov
add
call
xor
and
stc
jbe
test
jns
cmpsb
jae
in
data16
mov
mov
pop
test
jg
test
dec
enter
ds
loop
mov
js
cmp
pop
mov
inc
and
adc
pop
sub
push
inc
mov
cs
sbb
aam
les
pop
in
ror
pop
add
out
sbb
or
mov
cmp
cs
mov
roll
dec
pop
push
in
push
mov
sbb
testl
xchg
add
add
xlat
mov
mov
xlat
add
sbb
inc
sbb
xorl
xor
repz
fcomip
lds
shlb
sbb
imul
fdivrs
scas
lock
mov
pop
mov
inc
and
adc
pop
sub
push
inc
stos
lret
and
das
ss
in
in
sub
pop
loopne
sbb
fistl
loop
lds
or
mov
lahf
data16
add
call
mov
sbb
js
mov
pusha
in
call
lahf
jp
addr16
pop
lds
push
push
sbb
mov
sub
call
adc
pop
rcrb
in
in
mov
outsl
add
inc
xor
pop
jecxz,pt
in
sub
pop
loopne
sbb
stos
mov
lods
cli
data16
add
jle
mov
mov
dec
push
testl
jg
sub
pop
pop
sub
dec
nop
arpl
adc
movsb
inc
mov
or
or
call
cmp
sbb
and
in
rclb
cmp
adc
in
clc
inc
lods
out
lea
push
scas
mov
sbb
add
xor
mov
in
xchg
cwtl
pop
hlt
xlat
adc
push
add
mov
loop
enter
negb
insl
imul
adc
push
in
push
mov
lret
or
out
cld
ja
lock
mov
mov
xlat
add
sbb
inc
dec
push
or
aaa
out
shld
shlb
cmpsl
in
sub
add
call
pop
loopne
sbb
xchg
cmpsl
sub
cmp
dec
addr16
mov
gs
cmpsl
dec
stc
orb
repnz
in
jmp
test
xchg
xor
mov
mov
dec
sub
inc
pop
add
xchg
dec
inc
rcl
insb
lea
sti
popf
mov
mov
std
sub
orl
dec
test
mov
leave
jnp
or
lcall
push
mov
in
lret
int
pop
mov
call
aaa
mov
dec
or
sbb
jb
cmpsl
dec
and
in
addr16
scas
and
sbb
add
pop
iret
jne
mov
push
movsl
out
mulb
dec
lods
bound
pop
inc
popf
or
mov
mov
xchg
or
mov
aad
fbld
into
dec
pop
sti
in
mov
mov
fidivl
or
mov
jnp
add
jp
jo
dec
mov
arpl
imul
add
adc
sub
xchg
leave
outsb
mov
call
push
or
addl
roll
outsb
jns
push
stos
jb
mov
ficompl
pusha
cli
je
repnz
out
sbb
mov
jecxz
roll
adcb
fistpl
leave
mov
cltd
jp
mov
mov
inc
mov
jne
nop
jbe
dec
mov
imul
addr16
mov
test
es
push
xchg
sub
pop
dec
stos
pop
mov
add
add
xor
in
test
add
call
repz
lea
dec
pop
sbb
adc
cmc
xor
fxch
mov
xlat
out
repz
imul
icebp
jae
cmp
jnp
arpl
push
mov
inc
mov
into
xor
mov
shl
mov
fmull
sub
insb
or
cmp
int3
push
lahf
mov
enter
and
fimuls
add
mov
push
cmp
lahf
and
lret
xchg
inc
adc
xrelease
add
call
mov
scas
and
push
sbb
addr16
or
pop
mov
add
icebp
push
and
or
or
add
sahf
js
lock
sti
and
push
xchg
movsl
sbb
fwait
ljmp
call
ja
sbb
cld
movsb
mov
fdivl
les
pop
xor
jb
movsb
pusha
or
mov
arpl
add
mov
repnz
cld
ret
fbstp
add
call
dec
dec
push
jecxz
in
rcrl
and
sub
jo
stos
pop
mov
iret
test
repz
clc
test
or
rcll
fdivrl
pop
les
sti
mov
and
imul
ret
sub
insb
jns
iret
sbb
cmpsl
mov
dec
or
push
ja
stc
inc
pop
je
enter
test
popf
push
inc
jmp
lods
mov
shl
and
andb
hlt
popa
ljmp
test
stos
arpl
add
call
jmp
sti
divb
cmpsl
jge
sahf
iret
or
push
jb
in
imul
rclb
bound
jl
and
sub
xor
mov
js
lods
cmp
icebp
pop
cmp
jmp
lock
das
and
sbb
jg
arpl
fwait
loop
pop
inc
adc
xchg
adc
cmpb
out
cs
and
sub
insb
jns
in
loopne
aad
ret
or
push
ja
stc
inc
in
inc
mov
faddl
jae
enter
call
mov
jp
inc
xchg
sub
shlb
push
outsb
cs
add
jp
xchg
icebp
out
jne
insl
xor
mov
xchg
or
xchg
cmp
aas
scas
jecxz
jnp
jmp
ljmp
mov
es
push
push
xchg
lods
xorb
test
push
mov
arpl
sbb
xchg
pop
call
scas
inc
fs
movsl
dec
mov
orl
out
fs
js
mov
out
cmpsb
icebp
mov
add
call
mov
jmp
cli
mov
mov
sub
cmp
aaa
cld
out
nop
jmp
fcoml
ds
pop
aam
shlb
push
js
popw
sub
jg
ss
xchg
data16
mov
xor
mov
js
lods
cmp
cmp
push
lcall
lahf
or
jl
cmp
push
jo
loope
xlat
xchg
ficoml
repz
stc
pop
and
sub
insb
jns
add
call
popf
mov
sti
dec
mov
or
push
ja
stc
inc
in
inc
mulb
movsl
out
mov
xlat
or
enter
orl
inc
xchg
mov
inc
push
jl
push
outsb
cs
add
jp
xchg
icebp
out
jne
insl
xor
mov
xchg
mov
jle
fcoml
cmc
aas
scas
jecxz
jnp
outsl
sbb
mov
daa
xor
fsub
adc
pop
push
push
xchg
lods
jle
rclb
dec
push
xor
and
adc
add
call
add
addr16
sbb
movsb
pop
pop
xlat
and
add
push
mov
out
notl
adc
mov
mov
pushf
sbb
das
pop
data16
shl
mov
fmull
sub
insb
or
adc
repnz
lret
fnstenv
bound
enter
ss
dec
inc
aad
adc
mov
xor
inc
mov
js
mov
imul
mov
inc
xchg
pusha
jno
lahf
cltd
add
imul
sub
fwait
ret
xor
add
call
sub
or
loope
fldenv
add
mov
mov
stos
cmpsl
ja
sbb
and
orl
out
jne
insl
xor
mov
xchg
stos
rclb
leave
jno
jo
pop
lea
or
mov
aas
fwait
jne
imul
push
dec
inc
aad
repz
addl
dec
mov
daa
cmpsb
fbstp
fs
iret
sub
popf
mov
sbb
xlat
fmul
dec
sub
stos
xchg
dec
push
cmp
incl
inc
pop
out
push
sub
addr16
add
call
dec
outsb
xchg
push
daa
pushf
inc
out
sbb
movsb
jmp
leave
mov
push
xor
inc
adc
rolb
gs
push
xchg
test
push
aad
and
sbb
sbb
insl
xor
xor
mov
out
fisubrl
xor
stos
xor
push
sub
sbb
gs
loopne
xchg
dec
out
mov
xchg
or
cmc
dec
loope
ja
pop
iret
rolb
sar
inc
or
push
sub
pop
add
call
pop
movsb
dec
fstps
or
sbb
sti
lahf
inc
mov
outsb
or
ret
add
mov
das
shl
and
andb
lods
inc
rcll
xchg
mov
or
ja
xor
lret
mov
scas
jl
sub
insb
or
inc
sarl
push
adc
jae
js
test
jno
lods
std
lahf
scas
adc
dec
dec
imul
pop
add
dec
out
fisubrl
dec
add
call
or
orb
fadds
xchg
add
jecxz
in
xor
loop
and
insb
mov
scas
lock
or
test
cmp
and
push
subb
add
sub
add
dec
pop
shl
jge
jo
add
mov
jae
jb
mov
mov
mov
jmp
pop
imul
sti
pop
xchg
enter
out
stos
inc
mov
imul
adc
lret
arpl
adc
push
mov
add
call
and
cmc
out
out
lcall
lahf
ds
sti
inc
rclb
fstps
das
mov
daa
jae
or
inc
popf
out
outsl
in
lea
cwtl
popf
scas
jl
jecxz
push
adc
push
out
adc
mov
mov
sbb
mov
mov
fmull
sub
insb
or
es
imul
bound
enter
ss
dec
inc
aad
adc
mov
xor
wrmsr
mov
in
daa
shrb
ret
or
into
in
jp
inc
xchg
call
outsl
pusha
jno
lahf
xchg
mov
out
jle
outsl
xchg
sub
or
and
xchg
arpl
push
sub
testb
xor
mov
adc
adc
pushf
nop
fs
xchg
sub
and
jle
inc
mov
jl
push
pop
out
pop
das
shl
mov
fmull
sub
insb
or
adcb
mov
pop
dec
or
jnp
dec
stos
cmpsl
ja
sbb
cld
movsb
mov
call
ror
in
xor
mov
pop
xor
fcoms
xor
test
test
pop
jns
sbb
xchg
loope
or
push
xchg
jne
fistpll
popa
xchg
inc
dec
shrb
mov
std
sub
lret
call
and
hlt
je
pop
stc
lahf
sbb
pop
push
lods
xchg
cltd
adc
test
mov
aaa
pop
or
push
pop
dec
or
mov
xlat
out
mov
jp
sub
ret
cmp
loop
sbb
dec
lods
mov
call
shr
rolb
xchg
ss
add
loope
mov
rcrl
sub
stc
adc
mov
pop
dec
push
aad
or
movsb
outsb
fs
pop
pop
jne
ss
adc
adc
mov
xor
stc
mov
dec
fs
int3
arpl
mov
xchg
sub
or
in
pop
popf
cmp
fsubs
xchg
xchg
stos
cmpsl
ja
sbb
sahf
iret
or
outsb
add
pop
pop
add
add
call
js
push
xchg
mov
out
lds
insb
int
and
lea
mov
xlat
iret
in
dec
outsb
outsb
dec
add
mov
enter
je
fdivrp
orl
adc
xchg
dec
lcall
cs
add
fidivl
insl
xor
gs
adc
insb
and
aad
mov
aas
ret
dec
jg
and
mov
sahf
dec
sub
xchg
int
add
call
inc
dec
adc
xor
sub
xchg
cmp
and
mov
out
fidivrs
adc
lcall
pop
or
push
les
sbb
push
out
fdivl
cmp
cmp
inc
cli
scas
mov
cmp
pop
xor
mov
pop
or
pushf
loop
sbb
stos
xor
ret
cli
aaa
add
cld
dec
repz
pop
or
xlat
dec
dec
mov
sub
loopne
inc
push
nop
dec
lret
stc
xor
add
call
mov
shll
lret
mov
enter
mov
js
jnp
push
sbb
cli
std
repz
lods
test
or
into
in
jp
inc
xchg
pusha
jno
lahf
or
lods
push
add
xor
mov
cmp
xor
sub
lds
xor
aaa
mov
fs
fistpll
mov
scas
fstps
fwait
pop
outsb
pusha
insb
ljmp
dec
sbb
cld
movsb
mov
pop
dec
stos
or
add
call
out
sub
pop
xor
into
outsb
xor
test
aam
adc
jecxz
xchg
sbb
xchg
loope
mov
pushf
pop
cli
int3
adc
aaa
push
adc
pop
mov
mov
rorb
jl
push
aas
std
inc
inc
pop
out
lock
or
sbb
enter
daa
lods
shll
push
push
gs
xor
sub
movsb
mov
aam
adc
cwtl
inc
xor
lock
push
xchg
adc
pop
movsl
pusha
mov
mov
call
jno
lahf
or
ljmp
and
mov
xor
cmp
cmp
loope
mov
rolb
popa
mov
enter
mov
js
mov
test
dec
jb
dec
push
sub
imul
xchg
dec
fcompl
in
jp
inc
xchg
pusha
jno
lahf
pop
leave
aaa
out
xchg
cmpsb
cmp
add
xor
in
test
repz
lea
dec
pop
sbb
adc
cmc
xor
repz
adc
call
inc
xor
lock
mov
push
pop
movsl
pusha
mov
mov
mov
bound
loop
lahf
aaa
outsb
ja
js
imul
jecxz
cmp
mov
mov
iret
xor
mov
js
mov
outsl
ret
iret
sub
cli
adc
inc
pop
xchg
mov
jae
add
add
std
pop
and
mov
xchg
cmpsb
mov
aam
or
subl
pop
pop
out
sub
in
notb
call
push
sbb
xchg
sbbb
push
and
loop
sahf
in
aam
fst
in
ss
call
or
fsubl
add
adc
fsub
in
mov
xchg
push
mov
mov
mov
push
cli
jb
stos
push
and
ss
in
fwait
push
cli
push
lret
fldenv
push
cmp
dec
test
push
lret
xlat
mov
pop
mov
test
nop
mov
sub
push
das
pop
pushf
lea
add
dec
cmpl
xor
imul
shl
mov
inc
add
add
call
pop
loopne
les
adc
int3
mov
repz
and
cld
jnp
push
test
inc
insb
jg
les
ljmp
sbb
mov
pop
in
jmp
pop
and
mov
addr16
ret
dec
jg
cmpsl
lahf
cmpsb
mov
inc
ror
inc
adc
jbe
mov
inc
mov
out
es
lods
dec
mov
mulb
jecxz
movsb
dec
addl
stos
and
jbe
mov
pop
push
call
fdiv
xchg
jbe
cmpb
sub
fidivrl
xor
inc
or
add
call
movsb
sub
push
insb
aas
movsl
mov
mov
cltd
scas
mov
push
cmp
and
test
cltd
and
and
lret
or
lods
inc
jg
fnstsw
sahf
and
iret
test
or
fstps
std
testb
movsl
add
jg
scas
mov
popf
mov
add
rol
add
xor
notb
pop
loopne
sub
cli
into
test
dec
lret
cmp
enter
mov
in
push
inc
add
outsb
fiadds
add
call
int
insb
xchg
ds
mov
add
rcl
icebp
push
mov
dec
aaa
jge
dec
xchg
aad
xor
sub
cmp
jmp
ret
inc
pop
pusha
mov
pop
insb
mov
insb
xor
mov
call
or
or
ja
push
xor
call
mov
add
jg
cwtl
xor
das
pusha
or
push
pusha
invd
in
add
imul
mov
add
imulb
and
xor
es
jmp
call
int3
xchg
inc
orl
cmp
jg
aad
out
jmp
repz
mov
push
jb
adc
stc
xor
xor
xor
jmp
xchg
ja
and
ja
push
jg
xchg
lods
and
fdivrl
jno
stc
mov
dec
mov
jp
ds
out
in
sub
pop
inc
mov
cmp
in
addl
add
pop
jl
dec
repnz
mov
inc
repz
add
call
les
or
ss
rclb
mov
jne
das
cltd
adc
fsub
ja
test
push
ret
mov
push
std
fsts
jno
and
loopne
jg
mov
jb
stc
jb
adc
mov
cmp
lods
dec
jp
pop
out
sahf
icebp
push
xchg
fisubrs
mov
ror
lcall
iret
xor
or
int
adc
fldcw
stos
dec
int3
lods
jno
or
outsl
je
sarl
adc
add
call
inc
cli
mov
sbb
jne
fwait
std
ret
fwait
movsl
add
push
aas
xor
mov
or
sbb
or
xchg
outsl
xchg
pop
mov
add
les
adc
mov
add
int
dec
xchg
test
or
cmp
test
cmp
jne
adc
insl
ss
test
push
pop
mov
outsl
push
dec
lds
ss
bound
mov
fsts
push
inc
iret
pop
adc
add
call
pushl
jle
cli
pop
pop
add
adc
xchg
mov
sub
in
xor
out
lods
lahf
psubusw
jge
lods
insl
lcall
lahf
scas
jle
xor
imul
sub
pop
les
out
mov
mov
add
idivb
ljmp
pop
or
xlat
dec
jbe
xor
add
loopne
inc
lcall
lahf
movsl
pop
js
cmpsb
imul
jp
push
test
add
call
icebp
push
and
or
or
xor
xchg
aas
lcall
mov
out
sub
ficompl
roll
das
and
xchg
cmpsl
inc
jbe
lock
ds
pop
lret
repnz
jle
mov
xchg
pushf
xchg
sbb
mov
push
jl
mov
lods
push
fbstp
dec
out
clc
iret
ror
ret
or
fidivl
imul
push
add
bound
pop
loop
xchg
xchg
add
mov
and
mov
jg
add
push
push
clc
push
cwtl
add
call
or
je
out
sahf
test
filds
push
push
out
scas
icebp
and
js
jo
and
xor
sub
or
push
or
mov
jbe
bound
enter
ss
dec
inc
aad
adc
mov
xor
in
stos
jns
fwait
xor
inc
xor
in
je
out
dec
roll
push
mov
icebp
cltd
aad
into
lahf
and
lret
and
movsb
stc
pop
push
pop
iret
sub
popf
mov
mov
call
jb
push
repnz
cmp
and
mov
pop
and
enter
jle
test
fmul
inc
sbb
icebp
push
and
or
or
fstpl
fstpl
imul
adc
jno
mov
roll
das
and
pop
cli
int3
ds
pop
lret
repnz
jle
mov
xchg
inc
mov
xor
shlb
push
cltd
sbbb
dec
pusha
inc
sbb
ljmp
cmc
pop
pop
adc
dec
leave
filds
add
call
test
sub
pushf
or
mov
out
out
aaa
movsl
inc
fs
xlat
out
repz
or
jp
fisubs
pop
je
scas
pop
mov
mov
in
bound
loopne
xchg
dec
out
mov
outsb
mov
mov
add
push
mov
hlt
push
push
sbbb
adc
xchg
pop
sar
sbb
jg
test
inc
ret
and
push
sti
lahf
inc
mov
out
pop
xchg
cwtl
popa
scas
out
mov
and
sti
lcall
dec
and
andb
add
call
nop
dec
lret
stc
xor
cmpxchg
jge
test
cmpsb
fdivrl
addr16
mov
xor
les
mov
popf
mov
xchg
mov
inc
enter
loop
sbb
aaa
test
repz
push
insb
inc
xchg
popa
pop
and
js
divb
orl
xor
mov
jo
pop
je
jecxz
scas
pop
jns
divb
cmpsb
je
sbb
fmuls
inc
jle
inc
mov
clc
push
adc
mov
das
shl
mov
add
call
push
sub
insb
or
add
lcall
mov
enter
and
fimuls
add
mov
lea
push
fsub
mov
xor
lret
cmp
xrelease
insl
cld
xchg
lcall
cli
jae
inc
cwtl
enter
or
cwtl
mov
xchg
call
or
or
fwait
or
add
fdivrs
orl
outsb
notb
sbb
adc
push
cmp
inc
xor
add
call
dec
inc
aad
repz
addl
push
or
iret
sub
popf
mov
mov
push
mov
aad
pop
lcall
aas
push
push
jge
mov
xchg
mov
pop
mov
or
add
shll
pop
std
aad
mov
add
andb
push
pop
stc
mov
sub
roll
push
mov
lret
mov
pop
stos
mov
sbb
or
push
xchg
mov
push
neg
push
push
roll
add
call
out
shrb
aas
mov
mov
inc
popf
add
fsubrp
je
out
sahf
test
filds
push
push
fldenv
lds
lea
in
dec
or
pop
adcl
test
pop
out
out
cwtl
ret
je
scas
in
movsl
and
add
push
out
pop
lcall
ja
aaa
push
ds
mov
xchg
sarb
jo
mov
push
inc
sub
nop
pop
push
mov
inc
lods
mov
cmp
add
call
dec
cmpsb
jg
sub
pop
cmp
mov
add
cmpsb
push
sbbl
sarl
sub
mov
sbb
ret
push
sub
movsb
outsb
cmp
pcmpgtw
into
jo
adc
adc
mov
xor
push
dec
rcrl
sbb
sbb
adc
xchg
pusha
jno
lahf
mov
fnstcw
xchg
test
ficomps
icebp
push
and
or
or
cmp
loope
mov
rolb
mov
call
js
xor
jb
adc
ss
dec
inc
aad
adc
mov
xor
dec
jg
adc
lods
pop
insl
dec
add
add
out
std
push
adc
jno
mov
roll
das
and
lock
jns
jle
dec
mov
and
lock
lahf
and
lret
pop
pop
fisubrl
out
out
cwtl
ret
mov
vpmulhw
cmp
sbb
push
sarb
movsb
addr16
std
xor
ja
aaa
push
ds
loopne
and
mov
add
call
shlb
or
adc
pop
and
mov
pop
or
les
fs
ret
movsl
mov
pop
addr16
mov
xor
les
inc
gs
cmpsl
out
sub
xchg
mov
inc
enter
jecxz
xchg
icebp
outsl
in
test
repz
push
movsb
inc
outsb
das
outsb
into
inc
push
lds
mov
push
sub
xor
mov
xor
mov
add
out
mov
jl
dec
and
repnz
out
xor
fdivs
cmp
add
call
jle
inc
mov
inc
jo
fsts
xlat
shrb
shl
mov
fmull
sub
insb
or
jbe
cld
xchg
or
rcrl
cmpsl
inc
push
movsb
add
fimuls
add
mov
stos
lods
jp
cmp
mov
mov
dec
mov
pop
push
outsl
mov
decl
cmpsl
adc
lea
ljmp
xor
btr
pop
push
gs
dec
sub
xchg
sub
push
cs
sarl
pop
call
add
call
cmp
loope
mov
lahf
dec
jae
cmp
push
lret
mov
enter
mov
js
mov
test
dec
jb
push
add
fsub
decl
and
andb
xchg
fldt
addr16
add
out
push
pop
mov
mov
and
or
or
cmp
loope
mov
lret
sub
lahf
and
icebp
lds
scas
or
and
fmul
jmp
sub
lret
jns
stos
ja
add
call
cmp
xchg
sub
push
xor
daa
pop
mov
fistl
hlt
loope
mov
cld
and
sahf
xchg
and
xor
imul
push
dec
inc
aad
repz
addl
jl
mov
insb
stos
mov
iret
sub
popf
mov
inc
inc
je
scas
fwait
lods
repz
add
lcall
aas
push
push
jge
mov
xchg
mov
xchg
jns
add
shl
sub
dec
lods
jno
fucomip
jmp
call
push
xor
cmc
fs
add
call
dec
cmp
and
dec
and
adc
sahf
cmc
lea
pop
cwtl
pusha
jmp
fcmovne
vpavgb
jne
push
mov
or
xor
jge
mov
das
cmpsl
cmpb
or
testb
les
clc
jbe
outsb
addb
mov
shrl
cmp
hlt
imul
or
adc
repnz
mov
test
jg
fs
adc
xchg
fdivl
pop
pushf
push
in
movsb
lahf
dec
xchg
jp
in
test
and
xchg
add
call
and
and
jno
mul
push
and
repz
push
fs
es
lock
mov
push
adc
jle
sbb
pop
jbe
aaa
mov
jae
sbb
mov
sub
xrelease
insl
ja
push
pop
jns
mov
xchg
negl
jl
popf
mov
outsb
xor
test
mov
mov
cs
js
lock
dec
in
mov
mov
test
fidivrl
sbb
fdivrl
mov
inc
cmp
add
call
mov
cmp
xorb
insl
pop
iret
sub
popf
mov
xor
inc
fisubrs
dec
cmp
push
in
inc
mov
out
pop
push
mov
popf
js
xchg
cld
fstp
inc
into
and
pop
push
mov
push
daa
inc
pop
jg
fidivl
xchg
cli
enter
sub
lahf
daa
jb
cwtl
mov
mov
cld
lods
sbb
or
jl
push
ret
sahf
xchg
jl
nop
in
pusha
push
xchg
push
fsubrl
xor
pop
out
dec
mov
test
lret
xchg
call
add
call
mov
cmp
pop
cld
push
add
fistpll
fisubl
adc
cmp
or
xor
mov
xchg
xchg
mov
xchg
mov
cmp
mov
clc
sub
sub
push
ja
stc
inc
fs
fcoml
cmp
cmp
jb
jle
dec
cwtl
pop
lods
push
xor
dec
sub
inc
sbb
jb
xchg
cld
dec
mov
jl
scas
les
mov
inc
cmp
jns
sbb
sbb
std
bound
add
call
test
insb
push
sub
testl
addl
pop
mov
aam
rorb
sarl
les
mov
nop
rol
inc
cmp
fidivl
jno
sbb
xchg
add
sbb
decl
cmpsb
cmpsl
nop
call
mov
push
clc
adc
cwtl
mov
mov
sub
aam
test
outsl
sarl
push
adcb
sti
adc
push
lock
dec
dec
xor
into
sub
call
mov
ljmp
outsl
cmp
mov
daa
push
or
and
test
mov
addr16
pushf
fiaddl
aam
push
je
imul
jg
sub
popf
cld
xor
add
xchg
scas
mull
shl
sarl
jns
jge
sbb
inc
ja
xor
adc
xor
cmpsb
lds
jb
xchg
cld
and
stos
xor
sub
jno
dec
sbb
iret
outsl
xor
mov
js
sbb
pop
or
add
call
sbb
jle
je,pt
xor
xchg
insl
call
aad
lahf
mov
xchg
movsl
jmp
call
lea
and
mov
cmp
add
mov
mov
push
mov
add
sbb
inc
imul
test
repz
in
inc
and
testb
mov
inc
push
lods
push
outsb
inc
jg
jge
mov
repz
in
jne
sarb
cmp
fisubl
enter
fsubrl
iret
add
call
or
rcrb
inc
sub
fnstenv
inc
adc
mov
and
cmp
je
and
fildll
and
hlt
dec
addl
push
pop
call
fs
loop
out
mov
cwtl
sub
pop
pop
mov
and
jns
mov
mov
inc
mov
mov
xrelease
insl
ja
push
pop
jns
mov
leave
lahf
cld
adcb
and
cmc
adc
jecxz
xor
test
mov
mov
cs
js
lock
dec
pusha
je
adc
add
call
inc
js
aas
cmpsl
pop
repnz
sub
imul
and
cmp
mov
cmp
mov
in
and
pop
iret
sub
popf
mov
xor
inc
fisubrs
scas
loopne
sbb
fildl
testl
stos
popf
js
mov
mov
and
pop
es
pop
stc
lcall
add
clc
outsl
pop
ret
sahf
cmpsb
ss
add
loope
mov
in
out
cmp
jbe
repz
and
out
sbb
std
add
call
out
xor
pop
shll
inc
repnz
icebp
or
leave
pop
or
xlat
dec
xchg
test
pusha
sbb
in
sub
loopne
push
inc
call
aad
lahf
loope
mov
pop
insb
aam
rorb
mov
adc
xchg
ret
pushf
scas
nop
or
mov
pop
pushf
add
push
in
call
fs
loop
out
mov
cwtl
sub
clc
push
or
dec
mov
shlb
mov
or
and
rcll
xchg
insl
pop
stc
fidivs
add
mov
call
dec
cmpsb
jg
sub
pop
and
mov
faddp
xchg
fnstcw
clc
add
sbb
cmp
add
or
xlat
dec
mov
adc
shll
dec
loopne
push
inc
pop
stc
fidivs
add
and
cli
test
push
shrb
sub
jb
pop
jmp
xchg
pop
cmp
push
aas
fists
mov
rcrl
outsl
jmp
or
xor
mov
mov
std
push
movsl
imul
call
adc
cmp
rol
sahf
loop
cmp
xchg
mov
xor
and
push
mov
push
xchg
pop
mov
xchg
pop
pushf
testb
andb
pop
sbb
jno
jl
jg
ret
push
das
enter
jno
mov
dec
int
je
jp
mov
outsb
js
js
push
push
shrl
adc
xor
test
sbb
cmp
or
sbbl
shll
pop
sbb
iret
push
aas
loop
jge
add
call
push
cmpsb
inc
sahf
mov
pushf
push
inc
nop
in
pop
and
hlt
cmpsb
add
out
in
adc
mov
popf
js
ret
dec
and
xor
push
aad
inc
dec
stc
xchg
pop
pushf
sub
mov
sarl
xlat
je
dec
mov
hlt
jg
orl
jb
cs
addl
das
xor
lcall
adc
or
mov
nop
mov
mov
add
leave
xorb
movl
call
lret
pop
out
inc
stos
or
fdivrl
clc
pushf
or
mov
out
jns
ljmp
xor
mov
arpl
fwait
xchg
jp
pop
sbb
xchg
xchg
das
bound
leave
lods
mov
xchg
dec
out
ret
fcomps
aas
pop
cs
push
in
mov
loopne
mov
movsl
or
jns
and
adc
push
daa
ljmp
daa
loope
xor
popf
fldenv
ret
sbb
mov
jle
je,pt
xor
add
call
xchg
insl
jns
sub
cmc
mov
add
adc
in
adc
mov
repnz
scas
nop
fcompl
adc
and
stos
test
mov
int3
adc
insb
int
and
mov
pusha
mov
fbld
jle
test
adc
mov
pop
scas
pop
lock
out
stos
xchg
add
lret
fsubs
sahf
fnsave
mov
in
jb
in
and
mov
adc
aam
sub
into
inc
add
call
mov
cwtl
lcall
xchg
pop
mov
shlb
jg
xchg
pop
jmp
dec
fstpl
jmp
push
sub
pop
ret
pusha
repz
or
sub
rcrl
es
jmp
dec
and
dec
imul
xchg
pushf
pushf
push
push
sub
sub
mov
sahf
xchg
outsb
add
jae
sbb
lods
in
pop
xlat
push
push
sub
adc
pop
test
repnz
push
adc
les
cmp
je
add
call
and
fs
fadds
addl
pusha
inc
sbb
cmp
jbe
clc
aas
mov
sub
lods
popa
jbe
xlat
cmp
stos
sub
fildl
aam
xchg
lret
cmp
mov
cmp
xor
mov
mov
push
mov
mov
ss
mov
dec
pop
dec
or
push
mov
mov
aas
std
inc
inc
pop
out
out
mov
js
mov
add
arpl
add
sti
sub
add
call
pop
jge
dec
cli
cltd
int
movb
jbe
fs
add
jecxz
sbb
cmpsl
aas
xchg
jne
mov
roll
cltd
jmp
jne
push
imul
stos
push
cwtl
pop
lods
push
xor
dec
sub
inc
sbb
jb
xchg
cld
jmp
mov
xorb
sbb
iret
outsl
xor
mov
js
sbb
pop
or
dec
dec
out
cld
hlt
add
adc
mov
mov
sub
sbb
jecxz
and
add
call
mov
cmp
es
mov
popf
std
stc
dec
ja
sub
in
lcall
lahf
sub
iret
dec
sub
call
test
mov
dec
fstpt
dec
dec
sbb
shrl
adc
in
test
repz
push
dec
jne
and
or
inc
cmp
pop
xor
inc
fs
add
jecxz
sbb
pop
sub
or
outsl
mov
roll
cltd
jmp
sbb
popf
cmpsl
pop
sbb
es
mov
mov
inc
add
call
adc
jns
sbb
xor
push
jmp
scas
int3
pop
cmp
pop
jl
jb
cwtl
mov
mov
loop
out
mov
cwtl
sub
push
repz
mov
mov
mov
xchg
cmp
test
adc
sti
popf
mov
xor
inc
fisubrs
popl
cs
dec
cwtl
mov
adc
test
in
outsl
mov
mov
std
push
sbb
sbb
push
or
inc
addr16
aas
fists
mov
ja
adc
mov
outsl
jmp
call
ret
fildl
gs
stos
jo
mov
mov
std
push
movsl
imul
jno
sbb
hlt
dec
xor
mulb
stos
lahf
je
jno
loopne
jnp
or
cmp
sti
push
rol
push
lods
movsb
mov
or
popa
inc
in
add
xchg
jbe
xor
xchg
mov
mov
push
in
lret
push
cltd
dec
cmpsl
add
arpl
mov
lret
out
push
data16
out
adc
jne
dec
lcall
jbe
movsl
mov
add
call
rcrl
es
jmp
dec
and
dec
es
mov
cmpsb
gs
xchg
mov
jns
sbb
xor
mov
pop
mov
loope
aaa
cmp
daa
jb
cwtl
mov
mov
loop
out
mov
cwtl
sub
sahf
or
and
pop
sub
loope
inc
cmp
or
push
cmpb
dec
sub
nop
iret
jge
ss
idivl
pop
and
aaa
mov
lahf
insl
push
push
jb
cwtl
mov
mov
add
call
push
data16
out
adc
mov
push
mov
aas
mov
mov
pop
jp
test
sbb
mov
out
cwtl
ret
in
dec
or
fld
fcomps
fs
sub
rcrl
cmpsl
ret
lea
lcall
lock
cmpsb
mov
sub
and
cmc
jecxz
and
mov
or
xor
cmp
notw
test
cwtl
insb
enter
popf
dec
call
out
sub
xchg
pop
jle
test
cmp
sbb
add
call
out
popa
cltd
sbb
fdivp
ss
sti
jno
mov
pop
mov
into
gs
dec
add
push
pushl
dec
dec
inc
xchg
sti
inc
sub
js
mov
imul
shl
sahf
inc
jno
cmp
std
inc
fnsave
int
xor
aad
mov
sub
and
pop
std
add
mov
jp
xchg
mov
cmp
jge
mov
faddl
sahf
sub
lds
mov
in
mov
xchg
jo
stos
pusha
or
sub
mov
and
add
leave
aas
imul
call
jbe
int
daa
fldt
push
icebp
in
or
cmp
out
cltd
xchg
test
in
mov
mov
sahf
fstps
fs
or
mov
jp
vpsubd
push
imul
sub
pop
es
cli
fcompl
xlat
lds
xchg
lcall
cmc
cmc
movb
ret
push
mov
mov
push
pop
adc
loope
jecxz
adc
pushf
sahf
adc
inc
fsubrs
pushf
pop
cmpl
jns
lret
mov
jmp
fbstp
add
call
cli
inc
fdivrs
fisubrl
push
stos
cmp
loope
stos
pop
cmp
shlb
add
jbe
add
sysret
out
into
in
sahf
cmp
sbb
xor
outsb
das
and
insl
sub
mov
out
gs
out
call
insb
push
cli
shll
jmp
xor
dec
sbb
sbb
ret
dec
pop
jb
xchg
test
in
xor
pop
gs
and
fstps
fs
ss
adc
inc
in
fnstsw
sbb
add
call
mov
cltd
shll
roll
push
in
dec
dec
lock
sbb
fimuls
pop
iret
sub
popf
mov
mov
int3
cltd
sbb
int
adc
pop
xchg
sbb
hlt
cmp
xor
insb
xchg
xchg
jecxz
loope
cmp
dec
test
xor
mov
cltd
leave
adc
or
jl
ret
cld
int
mov
lods
arpl
mov
ja
add
sbb
mov
popf
jbe
cmp
aam
mov
shll
insb
lods
cmp
add
loope
add
call
mov
pop
jns
ja
lods
leave
pop
mov
jae
jle
jmp
xor
inc
inc
adc
xchg
add
cld
dec
or
push
add
xchg
mov
popf
jbe
test
in
or
pop
lock
mov
test
mov
int3
sbb
adc
dec
mov
pop
pop
out
mov
pop
in
or
adc
mov
lret
insb
add
mov
sbb
mov
sub
pop
inc
test
add
call
xor
mov
outsb
mov
adc
push
out
mov
stc
loope
mov
mov
test
inc
rcll
push
cmp
fs
pop
pusha
rdpmc
mov
insb
leave
pop
or
xlat
dec
sub
loop
pop
movsb
or
loopne
inc
jmp
insl
pusha
fcmovnb
mov
repz
xchg
leave
dec
pop
lret
cmc
jmp
adc
data16
adc
into
les
jnp
pop
pop
movsl
mov
add
call
sbb
imul
dec
push
pop
pop
pop
scas
jbe
xchg
f2xm1
xor
sub
jne
and
icebp
out
call
insb
push
cli
shll
jmp
xor
mov
xor
jbe
mov
pop
cltd
xchg
test
in
xor
pop
gs
and
fstps
fs
ss
nop
dec
cmp
pop
push
adc
mov
adc
out
xor
roll
push
in
dec
dec
lock
sbb
test
xchg
pop
iret
sub
popf
mov
call
add
int3
cltd
sbb
int
adc
lea
xchg
outsl
pusha
mov
xor
pop
fidivrl
stc
cmc
push
daa
cld
sbb
xor
adc
and
pop
and
cld
fildl
cmc
cli
popf
mov
adc
cmp
addr16
cmp
cmc
pop
pop
adc
dec
dec
pop
dec
mov
sub
pushf
or
mov
out
jmp
xor
mov
repz
jo
pop
je
jecxz
scas
pop
jns
divb
cmpsb
enter
es
fdivs
loopne
xchg
dec
add
call
testl
pushf
test
mov
sbb
out
std
cmpsb
add
mov
cltd
iret
adc
pop
lret
pop
sti
mov
mov
pop
stos
test
testb
movsb
jno
jns
aas
cmp
lods
jp
cmp
das
lods
cwtl
mov
hlt
xchg
gs
xchg
insl
incl
lds
js
scas
adc
lds
scas
pop
lret
xor
sub
and
out
pop
cmp
pop
sbb
sbb
dec
cmp
sbb
call
dec
mov
shlb
jg
test
dec
sbb
sub
mov
jmp
jnp
dec
subb
push
fcompl
push
stos
cmp
loope
stos
pop
cmp
push
int
mov
mov
xchg
adc
pop
shll
roll
push
in
dec
dec
lock
sbb
sub
jmp
push
popf
mov
movsl
or
pop
mov
pop
adc
mov
mov
xor
xor
mov
icebp
dec
lea
call
ret
rcll
adc
sub
rol
and
push
xchg
icebp
add
cmp
fdiv
add
lock
loope
jg
pop
mov
aad
inc
or
shll
aaa
add
pop
jg
lea
pop
rorl
aam
dec
rorl
sub
push
test
mov
int3
lock
fnsave
popa
mov
dec
sub
jne
and
icebp
out
call
insb
push
cli
shll
jmp
xor
rep
mov
dec
imul
call
xor
roll
push
in
sbb
mov
popf
jbe
sub
sub
fstpt
mull
clc
fisttpl
mov
push
cltd
sbb
int
adc
add
or
lock
icebp
dec
mov
dec
repz
cmp
mov
push
ds
loopne
sub
cli
into
test
dec
lret
cmp
mov
add
cmpsl
mov
sub
push
int
insb
xchg
lds
push
sbb
cmp
mov
push
outsb
sbb
jnp
rorb
mov
add
call
and
jl
fisubrs
mov
popl
cltd
sbb
int
adc
mov
ret
insb
in
shll
lds
out
xchg
mov
sub
jno
mov
jp
pop
jle
mov
clc
js
adc
jo
jmp
scas
pop
dec
cmc
sub
repnz
loopne
sub
fbstp
stos
popf
jne
mov
mov
imul
mov
sbb
popf
inc
push
iret
repz
repnz
or
lret
mov
test
add
call
xor
outsb
aad
pushl
mov
adc
jmp
shl
mov
push
and
mov
cmp
testl
test
iret
push
pop
leave
insl
mov
sbb
int
test
inc
or
negb
pop
push
pushf
jl
push
test
cmpsb
addr16
and
push
clc
mov
push
cmp
lods
cmp
rclb
leave
ss
push
icebp
shll
roll
push
in
into
jl
repnz
fnstsw
repz
and
xlat
jno
add
call
lock
lock
sbb
pop
fwait
repnz
or
or
ret
mov
add
test
push
mov
cmpsb
push
fmull
cwtl
mov
insl
fstpt
dec
lods
push
xor
sub
mov
arpl
pop
lcall
scas
cwtl
popf
mov
inc
test
mov
subb
stos
mov
dec
into
and
mov
jecxz
inc
stos
int3
std
push
and
fildll
into
xchg
adc
inc
xor
mov
stos
mov
push
cmpsb
pop
adc
add
call
popf
jecxz
or
xor
fwait
and
icebp
out
ljmp
lahf
stos
scas
out
test
cs
mov
sbb
int3
jnp
xlat
mov
jae
testl
mov
adc
jbe
mov
inc
inc
jbe
sub
mov
adc
sbb
add
sbb
push
xor
sbbl
jo
ss
sbb
test
mov
int3
stos
cmp
scas
xlat
test
lods
sbb
mov
call
stos
rol
leave
fmuls
aas
std
inc
inc
pop
out
ret
fcomps
aas
pop
cs
push
in
mov
cmp
mov
inc
daa
or
pusha
mov
cmc
cli
pop
inc
bound
adc
out
dec
mov
dec
and
sub
insb
jns
stos
dec
psubusb
repnz
int
push
ja
stc
inc
push
gs
pusha
adc
ror
faddl
pop
add
insl
dec
scas
daa
leave
shlb
dec
xchg
sub
and
out
pop
cmp
inc
mov
incb
add
call
shl
lods
rcrl
ljmp
in
sbb
mov
popf
jbe
cltd
inc
xchg
sbb
movsb
dec
sub
enter
cmp
aad
mov
rclb
xchg
mov
xchg
adc
and
mov
shlb
jo
mov
jge
pushf
dec
xlat
fdivrs
fcoml
mov
sbb
xor
sbb
xchg
pusha
jbe
push
imul
es
mov
xor
pop
gs
and
fstps
fs
ss
add
call
fsubs
pop
loope
cmp
int
push
int3
cmp
outsl
ret
cs
shlb
mov
repnz
and
sub
sarl
sti
mov
push
xor
and
adcb
stc
mov
fisttpl
push
inc
lods
push
ja
xchg
cmpl
movsl
push
popa
ljmp
jbe
clc
gs
xor
popa
fwait
loopne
lock
fs
add
test
shll
jmp
xor
cmp
dec
imul
ja
add
add
call
pop
xchg
mov
popf
jbe
jl
loop
arpl
pop
sysret
out
into
in
sahf
cmp
sbb
xor
outsb
das
cs
push
pop
bound
jl
mov
scas
push
icebp
out
call
insb
push
cli
shll
jmp
xor
or
scas
gs
xor
mov
mov
push
xlat
in
in
sub
js
mov
aam
xor
adc
adc
test
in
movsb
or
push
sub
push
test
shll
jmp
add
call
mov
call
xor
rcrl
xchg
test
in
icebp
fucomip
popf
sti
jl
fidivrl
jp
sahf
nop
jecxz
mov
data16
cmp
sub
aas
scas
jecxz
jnp
push
or
dec
pop
pop
or
in
jbe
fidivl
in
sbb
dec
sahf
mov
xorl
lock
sub
jl
aaa
inc
int3
mov
insb
outsl
cmp
cmpsl
dec
mov
jnp
subl
push
in
xor
call
arpl
ljmp
cmpsl
jno
out
sarl
or
ret
lcall
sub
popf
adc
movsb
mov
loope
clc
mov
in
lds
fimull
int
shr
repnz
out
cltd
sbb
int
gs
idivl
sbb
int3
or
in
sarl
dec
loope
sbb
enter
sub
addl
lcall
notb
mov
push
lahf
and
fs
add
inc
mov
int
sbb
add
call
dec
add
sub
das
dec
and
call
sbbb
in
rcll
dec
sub
aas
scas
jecxz
jnp
mov
jle
xchg
test
xchg
mov
dec
cs
mov
mov
enter
push
inc
pop
dec
dec
cvtps2pi
sarl
in
sub
add
xchg
jmp
and
cltd
ret
stc
lcall
fcmovne
test
dec
hlt
xor
and
cli
inc
or
scas
pop
mov
inc
stc
sub
add
call
fwait
xor
cmp
fimull
fsubp
pushf
cmp
xor
dec
fwait
stc
fldln2
or
xor
cmp
mov
das
inc
outsb
dec
aaa
lcall
mov
fbstp
adc
sahf
loop
out
lcall
or
push
arpl
adc
or
and
ss
inc
mov
pop
cld
mov
sub
je
ret
lret
clc
imul
adc
add
call
jnp
cmp
fwait
xchg
dec
push
inc
fldcw
roll
stc
adc
mov
scas
lahf
xor
mov
insb
push
mov
xor
xor
sbb
outsl
lret
int3
jg
xchg
sbb
xchg
loope
fwait
cwtl
pusha
bound
push
lret
cli
jecxz
stos
mov
mov
sub
push
cmpsb
xchg
push
cmc
sub
loope
test
sub
pop
sub
cmp
aam
push
xlat
int3
clc
fiadds
mov
inc
mov
fldcw
mov
fiaddl
add
call
stc
jle
mov
mov
in
mov
scas
xor
sbb
jle
adc
jno
fsubrs
jp
xor
notb
xchg
testl
aas
jb
xor
push
pusha
lds
push
mov
js
js,pn
and
idivl
xor
dec
int3
out
fnstenv
cmpsb
out
and
xrelease
insl
xlat
iret
subb
dec
fs
add
outsb
loope
out
aam
mov
jbe
dec
sbb
pop
aaa
lret
lret
out
leave
adc
dec
sbb
add
call
mov
lods
test
pop
testb
push
mov
js
lcall
push
push
jge
mov
xchg
mov
xor
ds
push
movsl
pop
arpl
push
out
fisubl
clc
imul
pop
add
jae
mov
incl
mov
inc
jge
cwtl
lahf
cli
push
ljmp
repnz
mov
stc
mov
add
mov
stos
xchg
jecxz
insb
in
repnz
push
sti
xchg
cmp
loop
inc
popf
jge
stc
mov
call
cs
imul
popf
ret
lret
clc
imul
lret
subb
data16
cld
outsb
xchg
test
pop
add
xchg
out
loope
inc
sbb
test
adc
aas
std
inc
inc
pop
out
data16
adc
cmp
push
lock
out
inc
sbb
xlat
scas
cmp
and
pop
test
in
aad
add
mov
add
sbb
es
jmp
std
leave
add
cmp
test
and
int
push
ja
add
call
inc
sahf
int
pop
leave
std
bound
sbb
test
jecxz
xchg
repnz
fisttpl
push
push
cld
sbb
cmp
jecxz
push
mov
jno
aas
jno
in
sbb
add
loopne
sub
ss
movsl
hlt
sahf
mov
xchg
adc
dec
pop
lds
stc
leave
into
stos
cli
and
out
int
or
mov
out
in
or
cltd
icebp
or
mov
and
xor
pushf
movsb
fldcw
aas
xor
and
mov
call
sub
jge
inc
dec
fbstp
jbe
jmp
cmpb
stos
hlt
ljmp
push
fdivp
idivl
push
adc
xchg
ret
and
or
outsb
jb
loopne
mov
sub
mov
aad
imul
fmull
inc
mov
or
push
sbb
imull
mov
jno
cwtl
inc
inc
xor
repz
std
aas
push
in
ret
movsl
xchg
nop
outsl
dec
adc
xchg
push
push
mov
inc
add
mov
cli
les
adc
inc
add
call
add
les
lds
push
popl
xchg
jecxz
rcll
xchg
pop
lock
ficoml
mov
cwtl
ljmp
pusha
negl
xchg
jg
sub
lods
mov
add
cmp
jecxz
outsb
mov
mov
xor
jns
cmpb
leave
xor
nop
les
push
sbb
cmpsl
negb
sub
sub
pop
mov
cmp
sbb
cmp
pop
cmp
adc
add
call
out
mov
adc
mov
lods
fldlg2
inc
mov
cwtl
inc
jmp
arpl
sbb
adc
popf
arpl
jae
dec
cli
rcr
jecxz
in
pop
in
fisubs
int
push
int3
cmp
gs
cmp
add
lahf
in
ss
jl
pusha
pop
jns
leave
jmp
call
bound
jmp
lea
mov
test
test
fisttpll
aad
clc
fldenv
adc
dec
add
call
clc
es
push
jnp
pop
movb
lahf
ds
das
adc
push
pop
dec
rcrl
sub
xor
push
pop
nop
fstps
adc
push
jge
mov
xchg
mov
mov
loopne
adc
repz
inc
test
dec
xchg
xor
jge
flds
jecxz
pop
stos
push
xchg
shrl
loope
cmp
enter
and
mov
mov
sub
mov
push
movsb
adcb
in
jne,pn
bound
call
arpl
or
mov
jle
xor
je
and
and
xlat
inc
scas
add
mov
pop
pop
add
pop
movsl
std
and
mov
clc
in
clc
sub
rol
jbe
mov
or
dec
jg
ljmp
push
popl
les
xchg
stos
sub
pop
insb
mov
sub
mov
mov
inc
clc
js
adc
aam
rep
std
sub
mov
enter
sahf
xor
ljmp
call
push
jne
daa
test
sub
movsl
lods
mov
jb
gs
inc
push
sbbl
out
cmc
test
js
push
mov
push
jbe
pop
ja
mov
out
in
out
ret
imul
int
xchg
aaa
push
cltd
push
ret
fwait
inc
mov
mov
or
pop
pushf
cwtl
or
cmp
add
je
ret
and
pop
test
in
pop
jns
adc
out
cld
pop
cld
lret
jg
mov
or
cli
cld
xchg
xchg
nop
cs
cmp
int3
rorb
data16
call
mov
les
xchg
add
jmp
or
outsb
xchg
cmp
hlt
cmpsb
xchg
jb
cs
ljmp
or
insb
fsubl
popf
jns
xor
pushf
mov
loop
and
jns
rcrb
dec
mov
imul
cmpsb
add
ja
into
ja
fs
push
icebp
addb
pop
sbb
sbb
xor
inc
push
mov
jg
popf
pusha
ficomps
popa
or
sbb
xchg
imul
call
imul
add
cs
pusha
sbb
test
mov
sbb
inc
cmp
ret
stos
icebp
dec
mov
int
orb
insl
outsb
and
shrb
mov
int
jns
xor
test
sub
call
pop
sti
push
adc
inc
and
cwtl
lret
sti
idivb
outsb
cs
add
jb
rcr
ds
pop
lret
repnz
jle
mov
push
sub
fstpt
jno
aaa
aas
cmpsb
loop
mov
add
call
shlb
clc
adc
pop
xlat
fdivrs
jmp
dec
sbb
pop
iret
sub
popf
mov
adc
arpl
mov
addr16
ret
dec
jg
ja
leave
mov
sbb
outsl
push
out
mov
and
cmp
mov
nop
sti
test
mov
pusha
cmc
add
call
rcrb
mov
adc
sahf
shrl
div
push
xchg
test
push
inc
imul
cltd
sub
pushf
or
mov
out
adc
imul
xchg
add
add
out
repz
arpl
and
es
inc
dec
int
push
adc
xchg
dec
out
cmp
jns
sbb
aam
cmp
adc
adc
mov
cmpsb
les
loope
sbbb
jge
pop
add
notb
hlt
mov
lock
loope
jg
push
daa
in
shll
in
repnz
rcll
fnstenv
cmpsb
out
and
xrelease
insl
into
xchg
lock
fsubrs
mov
pop
pop
loope
dec
fimull
pop
std
add
call
cld
sbb
cmp
jecxz
push
mov
sbb
push
call
mov
imul
les
mov
pop
push
lods
outsl
lahf
mov
inc
and
sub
cmp
sub
or
adc
jb
ja
jp
xor
notb
xchg
testl
in
mov
ja
sbb
and
sbb
push
pop
xlat
fdivrs
stc
mov
arpl
sub
popf
mov
mov
add
call
jae
aas
ret
dec
jg
lods
insl
les
mov
mov
and
cmp
mov
inc
sbbl
push
lods
mov
pop
outsl
call
mov
cwtl
xchg
xchg
movsl
cmp
xchg
je
ds
cmc
sub
xor
and
stc
call
imul
xor
lret
clc
imul
adc
jnp
mov
repnz
jge
add
add
call
mov
jns
xor
test
sub
call
pop
sti
push
xor
int3
lods
mov
and
add
push
lahf
jne
nop
mov
int3
mov
sbbb
pop
shl
xchg
dec
sbb
mov
addr16
ret
dec
jg
pop
mov
int
dec
movsl
mov
outsb
jne
aas
jmp
hlt
dec
sbb
cwtl
in
ds
loopne
sub
cli
into
test
dec
lret
cmp
pop
in
pop
mov
add
lods
mov
or
outsb
fiadds
add
call
int
insb
xchg
ds
adc
hlt
pop
ret
repz
pushf
notl
add
jnp
dec
scas
cli
out
movsb
push
adcb
dec
adc
mov
andl
loopne
dec
pusha
pusha
popf
push
js
scas
popa
mov
inc
stos
lock
cmpsb
enter
sbb
mov
data16
ljmp
pop
iret
rorb
test
call
push
pop
pop
fcompl
loopne
mov
call
cmp
fmuls
add
call
or
cltd
icebp
or
push
push
stos
mov
mov
sub
nop
jo
dec
or
push
jae
mov
jge
xor
sub
ss
add
jb
lahf
jne
jle
aaa
iret
fdivp
nop
sub
mov
lcall
mov
jmp
jb
in
loope
cmp
or
fidivrs
nop
jb
fistpl
daa
dec
dec
inc
movsb
cmpl
xor
mov
or
fsubl
popf
jns
xor
pushf
mov
call
loop
and
jns
rcrb
dec
mov
imul
cmpsb
add
ja
into
ja
fs
push
icebp
addb
pop
sbb
jbe
sub
xchg
or
jp
out
push
int
add
jo
jne
mulb
pop
arpl
test
pop
lret
repnz
jns
dec
in
mov
and
pusha
sbb
test
mov
pop
lret
sbb
ret
stos
icebp
dec
mov
int
orb
insl
sbb
mov
cmpl
add
call
cld
bound
out
clc
add
clc
les
mov
repz
arpl
lret
push
stc
cwtl
inc
out
popf
roll
arpl
inc
testl
cmpsl
fstps
aaa
insl
stc
xor
lea
repz
shll
add
mov
repz
daa
sar
fs
lcall
xchg
xor
orb
adc
loopne
inc
xchg
mov
sub
loope
fdivrs
cltd
mov
cmove
test
in
xor
outsl
or
call
mov
in
ljmp
iret
std
cmp
scas
push
sbb
pop
aam
and
pop
sub
fsub
xor
gs
and
int3
bound
fldcw
push
inc
fcoml
sarb
dec
jb
mov
inc
aaa
add
jmp
shl
mov
push
and
mov
pop
mov
or
pushf
inc
jo
inc
test
xlat
mov
rcrl
mov
stos
add
sbb
xchg
push
mov
xchg
adc
es
jmp
fstpl
out
fildl
add
call
or
push
clc
mov
popa
movsl
bound
or
enter
jns
dec
or
sbb
push
aas
mov
add
int3
sbb
fwait
jbe
mov
into
scas
xor
or
imul
push
lea
pushf
cmp
data16
add
lods
pop
inc
sub
mulb
clc
add
push
xor
push
scas
ret
nop
jo
rcll
aas
insb
subl
xchg
cmp
int
push
int3
cmp
gs
cmp
add
lahf
in
ss
jl
pusha
pop
jns
leave
jmp
add
call
call
bound
jmp
lea
mov
test
test
mov
inc
out
mov
bound
jmp
pop
jno
mov
xor
outsl
push
in
xor
lahf
ds
insb
or
sbb
push
mov
lcall
or
nop
fstps
adc
push
jge
mov
xchg
mov
in
inc
mov
cmp
insb
mov
js
jmp
testl
fsts
insl
fstpl
add
call
pusha
sahf
xor
cmp
sub
mov
mov
ljmp
sub
mov
ret
add
cmovne
adc
fs
xchg
xor
xchg
adc
mov
pusha
mov
push
dec
mov
xchg
mov
dec
notb
sub
loopne
mov
push
jbe
cs
cmp
pop
sbbl
outsb
mov
mov
sbb
popf
test
or
lods
mov
jo
xchg
pop
push
adc
int3
jmp
cmp
add
call
push
sbb
jne
adc
insl
fidivrl
cmp
leave
or
es
adc
mov
push
stos
xchg
movsb
ss
call
fdiv
cmp
lds
dec
sbb
loope
enter
sbb
fistpl
mov
ret
jecxz
sub
std
je
push
sbb
bound
adc
xlat
add
out
inc
test
shrl
call
add
call
mov
neg
pop
pop
out
xor
xor
adc
mov
les
add
out
daa
jmp
ljmp
fwait
jo
ret
mov
push
out
mov
in
test
push
jmp
xor
push
insb
xchg
cli
or
xlat
mov
xchg
call
lret
sub
dec
mov
scas
addr16
adc
mov
mov
dec
fs
rcr
mov
xchg
call
push
nop
clc
lea
add
add
call
popa
or
lahf
xchg
push
aas
scas
aad
lods
cmp
or
add
arpl
or
aad
sarb
outsb
lcall
insl
jmp
jle
or
and
into
aad
fadds
and
dec
mov
hlt
sub
dec
sub
outsl
test
std
sti
mov
sub
xchg
cmp
pop
dec
push
notl
inc
inc
pop
jo
mov
fcomp
mov
mov
sub
loop
out
push
stos
sub
sub
add
call
and
add
jns
adc
pop
xchg
mov
clc
test
fistpl
movsb
dec
push
cmp
aaa
aad
pop
dec
rcrl
stos
sbb
fiaddl
nop
fstps
adc
push
jge
mov
xchg
mov
testb
insb
out
jb
sub
pop
adc
int
mov
sbb
and
dec
lahf
adc
or
xor
jmp
ret
adc
xchg
and
sub
dec
aam
pusha
push
cwtl
xlat
adcb
in
jne,pn
bound
call
test
or
pop
pop
rolb
cmpsb
xchg
je
ret
inc
mov
jl
sbb
add
pop
movsl
std
and
mov
clc
in
clc
sub
sbb
shl
jnp
addr16
ret
dec
jg
mov
cmp
or
insb
into
les
xchg
stos
sub
pop
insb
mov
sub
mov
mov
inc
clc
js
adc
aam
rep
std
sub
mov
enter
cmp
mov
call
andl
lea
cmp
lods
mov
jb
gs
addr16
push
inc
push
fcoml
aad
xor
dec
popf
adc
imul
xchg
in
inc
xor
cmpsl
lods
mov
daa
xchg
and
mov
fwait
xchg
aaa
ret
rcrb
icebp
ds
adc
jp
sbb
xchg
push
andl
mov
outsl
jl
ret
sub
sbb
adc
pushf
fcmovbe
dec
cmpsb
push
mov
callw
adc
fdivs
jns
add
call
sub
aaa
iret
sub
imul
out
adc
adc
int3
mov
inc
stos
ret
jnp
xchg
cli
aam
mov
pop
sbb
sbb
ss
jl
pusha
pop
jns
pop
out
js
and
arpl
icebp
test
inc
push
cmpsb
push
imul
cltd
popf
test
into
lock
cmp
add
sub
das
dec
loope
xorl
cld
sbb
cmp
mov
push
or
mov
or
sub
pop
jo
or
add
call
jecxz
and
loop
test
ret
sub
and
sar
xchg
inc
dec
aad
sbb
ljmp
mov
cs
in
xchg
lret
pop
cmp
sub
push
insl
push
test
add
sub
das
dec
loope
xorl
sub
jno
push
or
mov
or
sub
pop
jo
push
mov
aaa
int
movsl
add
rorb
xchg
or
push
dec
pop
ljmp
scas
ret
es
xchg
arpl
pop
add
lahf
jo
pop
lds
add
call
lods
pop
xchg
inc
hlt
bound
mov
adc
pop
cmpsl
lret
dec
hlt
xor
and
cli
cs
jbe
cmpsl
imul
lcall
mov
rol
sbb
sbb
xchg
inc
out
pop
dec
adc
or
cmp
or
xor
ss
xchg
or
push
out
outsb
mov
cmpl
mov
sub
call
xor
into
pop
xor
ds
repz
lret
add
call
loopne
insb
jle
rclb
jae
xor
in
mov
jns
int
leave
push
orl
and
stos
loope
dec
cli
repnz
test
push
mov
js
jl
dec
pop
push
jo
pushf
push
push
sbb
mov
aam
adcl
xchg
insl
adc
xchg
stc
add
dec
int3
push
sbb
cld
out
dec
add
dec
popa
xor
xchg
bound
int3
or
pop
lret
inc
mov
call
imul
cmpsl
mov
xacquire
cmp
push
imull
insb
jle
rclb
aaa
inc
das
mov
jmp
mov
leave
push
orl
popa
xor
jg
and
mov
add
jl
dec
fcmovbe
andb
mov
cmpsb
pop
cli
inc
pusha
sti
sub
sub
popf
mov
or
xchg
into
aaa
pop
sub
mov
inc
lret
iret
sub
xchg
sub
dec
lahf
push
sub
aam
mov
dec
and
call
push
push
pop
cwtl
pusha
out
jnp
and
jg
mov
lret
imul
lea
xor
or
fildl
jnp
sbb
jle
scas
mov
iret
sub
popf
mov
in
test
ja
aad
push
cltd
and
sub
test
in
sahf
lods
mov
lret
dec
jg
out
dec
add
or
dec
add
out
std
push
adc
jno
mov
dec
adc
daa
inc
add
call
ret
hlt
outsl
icebp
out
jne
insl
xor
mov
xchg
flds
inc
movsl
repz
mov
aad
push
shlb
push
sbb
negb
lcall
push
sti
cmp
cmc
pop
pop
adc
dec
mov
xchg
cmp
xchg
sub
pushf
or
mov
out
ror
xchg
mov
mov
repz
xchg
jmp
les
repz
outsb
adc
jg
cmpsb
loopne
xchg
dec
out
lock
and
ss
mov
loopne
and
aam
add
call
cmp
mov
add
xchg
adc
inc
iret
call
xchg
loopne
sti
cmpsl
fsubr
push
mov
mov
xchg
bound
cmp
jmp
aam
adcl
xchg
insl
mov
mov
jnp
rcl
xor
mov
cld
out
dec
add
dec
popa
xor
mov
mov
lgs
dec
sahf
lods
jl
jle
movsb
addr16
std
push
push
outsl
jg
push
add
call
aam
adc
cltd
pop
and
pop
mov
add
mov
popf
adc
lret
imul
add
sbb
dec
pushf
push
inc
pop
pop
push
add
sbb
icebp
push
and
or
or
mov
outsl
pop
mov
sti
scas
xchg
fwait
jp
mov
or
mov
xor
jl
std
rcll
int
inc
and
sbbb
nop
sub
mov
jnp
pop
sti
jecxz
fwait
stos
jp
mov
mov
cmp
roll
push
andl
add
call
or
fiaddl
lret
lret
cmc
add
add
int
mov
movsb
push
pop
jne
jb
inc
push
out
shlb
xor
aaa
test
repz
in
or
repnz
mov
sub
std
push
repnz
xchg
push
fisttpll
jmp
cs
xchg
leave
mov
and
shll
loope
pop
jne
dec
mov
jno
lret
rolb
push
add
stos
and
lods
jl
jo
imul
movsb
jns
cmp
add
call
xor
cmp
adcb
xor
popf
adc
lret
imul
lea
xor
sbb
lret
jle
fcoml
xor
aad
or
push
sahf
shrl
das
fisttpl
in
push
push
sbb
int3
lret
cmp
loop
mov
mov
mov
lret
imul
data16
cli
int
inc
pop
mov
dec
cmc
pop
mov
mov
jnp
sbb
dec
xchg
int3
push
pop
xor
mov
movsl
leave
sbb
xor
add
call
xor
ss
dec
inc
aad
pop
lcall
push
outsl
jg
push
ss
inc
xor
mov
js
mov
repz
inc
xor
nop
pop
push
mov
repnz
and
cmpsl
ret
and
sub
cmpsb
jg
sub
pop
sub
loope
mov
je
rcll
dec
aaa
movsb
in
adc
push
mov
jae
addr16
inc
dec
outsb
mov
dec
pushl
into
xchg
jb
daa
int
je
mov
mov
push
loope
jo
imul
movsb
add
call
ret
push
outsl
adc
cmp
push
std
jge
adc
fistpl
jge
je
outsb
add
cmc
pop
jno
push
inc
mov
or
int3
jmp
mov
jmp
out
dec
add
dec
popa
xor
imul
mov
push
add
add
fisttps
sti
fisubl
xchg
andb
pop
xor
adcl
es
dec
push
mov
mulb
je
ret
sub
and
filds
add
call
icebp
fwait
aas
lock
xor
xlat
cmp
xchg
fxch
fmuls
popa
aad
dec
jne
mov
jecxz
stos
push
stc
out
ret
xchg
call
mov
pusha
jo
cmp
cltd
pop
xor
mov
lds
mov
test
mov
mov
stc
test
ds
sub
pusha
mov
out
push
mov
rcl
mov
je
test
xchg
mov
xchg
fldenv
and
aam
sub
mov
frstor
test
mov
mov
cli
mov
call
clc
xchg
pop
cmp
je
test
xchg
mov
xchg
negb
ret
or
stc
sub
popf
sub
adc
stc
repnz
fsubs
into
pusha
push
insb
adc
aas
pusha
out
mov
loopne
loop
daa
cmp
rcl
inc
dec
rcrl
popf
adc
lret
imul
ja
scas
xlat
test
test
fbstp
arpl
push
out
inc
add
sbb
xor
pop
or
xor
pop
out
out
mov
js
mov
add
arpl
loopne
nop
or
movl
call
adc
fs
push
nop
xor
call
xor
outsb
daa
jae
adcb
or
sti
ret
lock
imul
cmp
test
mov
sub
or
push
ja
stc
inc
idivb
push
jle
jmp
adc
jmp
mov
jmp
out
dec
add
dec
popa
xor
cmp
adc
icebp
pop
adc
or
stos
and
lods
jl
jo
imul
movsb
jns
sub
rcll
movsb
dec
cli
lods
push
call
add
popf
adc
lret
imul
adc
jno
mov
dec
adc
fnstcw
inc
ret
sbb
pop
sbb
clc
and
push
mov
addr16
pop
out
out
cwtl
ret
pop
repz
xor
ss
dec
inc
aad
jle
movsb
addr16
std
push
push
outsl
jg
push
ss
cs
mov
push
cmp
mov
std
pop
rcrb
rclb
scas
pop
js
mov
jo
dec
jae
dec
sar
or
dec
cmpsb
jg
add
call
sub
pop
dec
mov
pop
mov
inc
mov
dec
and
adc
in
hlt
fistpll
mov
jl
xchg
js
into
xchg
dec
xchg
adc
xor
mov
dec
shlb
jo
imul
movsb
jns
aaa
xchg
clc
test
sahf
mov
std
jge
adc
fistpl
jge
je
outsb
add
cmc
pop
lret
mov
hlt
push
dec
int3
jmp
mov
jmp
out
dec
add
dec
popa
xor
sub
outsb
cltd
or
cmpsb
cli
add
call
mov
add
jl
jo
imul
movsb
jns
mov
out
jnp
xchg
jns
pusha
nop
push
sbb
ja
add
loope
mov
ret
jge
sbb
fwait
test
xchg
inc
loopne
cmp
in
and
pushl
into
xchg
divb
in
add
shlb
jo
imul
movsb
jns
lcall
enter
sbb
mov
lret
imul
add
sbb
dec
pushf
mov
mov
call
or
or
add
call
je
sbb
inc
stos
adc
scas
xchg
cmp
and
lret
add
cs
mov
cmp
sbb
or
fmul
push
inc
mov
sub
or
xchg
cld
xchg
jp
fnstsw
xor
test
ljmp
mov
push
xlat
add
ljmp
and
arpl
pop
mov
mov
pop
dec
inc
xor
sahf
daa
imul
and
xlat
mov
call
test
mov
jp
xchg
mov
cmp
jge
sti
ss
les
cmp
xchg
call
jo
stos
pusha
or
sub
pop
push
sub
cmp
pop
addb
test
scas
daa
jge
push
pop
mov
in
sub
pop
loopne
sbb
stos
mov
lods
cli
data16
add
jle
mov
gs
fcoms
imul
mov
inc
mov
jg
sub
pop
dec
fists
lods
popf
inc
bound
jae
jg
ss
mov
out
or
add
call
inc
xchg
mov
jne
sbb
mov
xor
mov
mov
int
cltd
or
xchg
adc
addb
lods
push
scas
mov
sbbb
div
dec
sub
xchg
cwtl
pop
hlt
xlat
adc
inc
les
cmp
cs
mov
roll
dec
pop
push
in
push
cmp
in
scas
lcall
fbld
pop
mov
xlat
add
sbb
inc
movsl
rorl
inc
in
add
call
fidivrl
inc
cmp
sub
pop
loopne
sbb
xchg
cmpsl
sub
cmp
dec
addr16
mov
mov
push
mov
popa
lret
sub
cltd
pushf
js
dec
in
xchg
adc
mov
lret
sub
mov
mov
loopne
dec
je
pop
inc
inc
inc
into
xchg
mov
popa
fcom
adc
add
sbb
xchg
pop
clc
and
or
inc
jne
in
ljmp
push
sbb
mov
xchg
test
shl
mov
shrb
and
add
call
or
push
test
js
scas
iret
sub
inc
rcll
add
push
stos
cltd
jmp
lcall
mov
and
push
scas
mov
and
xor
and
in
xchg
cwtl
pop
hlt
xlat
adc
stos
test
dec
daa
jnp
icebp
push
and
mov
js
mov
cmpsb
btrl
add
scas
cld
and
inc
mov
xrelease
insl
xor
fcompl
xor
call
test
mov
popa
iret
push
pop
cwtl
xchg
pop
hlt
xlat
adc
cld
mov
movsl
xor
mov
sub
pop
jnp
push
adc
sti
xor
test
cmp
in
adc
movsb
mov
pop
fdivrl
jl
push
scas
mov
loope
and
and
in
xchg
cwtl
pop
hlt
xlat
adc
push
pusha
push
mov
loop
adc
imull
in
ror
pop
add
xchg
dec
inc
xchg
or
fmull
iret
sub
add
call
mov
popa
incl
outsb
bound
adc
sub
mov
jbe
insl
sub
sub
add
loop
push
shrb
add
sbb
lmsw
movsl
or
lret
ljmp
fadd
fstpt
sbb
adc
sbbb
pop
xchg
lock
hlt
call
and
shrb
mov
repnz
dec
inc
dec
ret
dec
je
mov
jo
pop
jecxz
push
jnp
sbb
int
or
xor
mov
push
sub
call
negl
mov
je
sti
js
and
jno
and
fdivrs
ret
inc
or
jbe
ds
inc
stos
adc
mov
hlt
arpl
lret
cmp
arpl
sbb
fistpll
insl
mov
xor
or
jae
cwtl
mov
dec
fcmovb
insb
stos
divl
lods
scas
dec
push
in
jnp
lds
sti
jge
add
rep
orl
into
and
ljmp
aad
mov
call
addr16
jae
add
mov
inc
incl
das
mov
test
in
clc
sub
sbb
loopne
jle
xchg
cltd
inc
mov
dec
lock
xor
fimull
loop
fs
movsl
adc
mov
orb
je
sbbb
jo
aam
inc
inc
icebp
scas
xchg
mov
icebp
movb
or
lahf
push
and
xlat
add
sbb
inc
shlb
in
out
pop
iret
jecxz
pop
in
sub
pop
loopne
add
call
dec
xchg
cmpsl
sub
cmp
dec
addr16
mov
gs
inc
insl
rcll
mov
out
in
cmpsl
out
jbe
mov
sbb
inc
into
mov
mov
shlb
inc
inc
into
xchg
mov
popa
fcom
adc
add
sbb
xchg
pop
clc
and
sub
jne
in
ljmp
enter
lret
and
mov
or
mov
pop
shlb
lahf
nop
stos
jbe
xchg
sarb
jecxz
and
add
call
scas
adc
jne
fucomip
popf
lods
xchg
stc
insb
lds
xchg
imul
or
mov
lret
cmc
add
cmpsb
sub
adc
mov
rol
sub
push
xchg
mov
mov
jle
aaa
test
repz
es
shl
push
jbe
sub
jbe
out
mov
jge
sub
mov
jle
adc
int3
subb
push
int3
or
push
in
push
and
sahf
into
inc
sub
add
in
add
call
int3
inc
pop
add
out
sbb
xchg
adc
loopne
jg
inc
pushf
fs
inc
ss
add
loope
mov
shrb
scas
push
pop
xlat
xrelease
mov
xchg
stc
out
ror
and
rol
leave
pop
or
xlat
dec
xchg
cmp
adc
loopne
inc
xor
fcompl
subb
jae
addr16
out
loope
mov
adc
in
adc
mov
das
aas
and
call
lea
jns
inc
test
xchg
jg
lods
add
rolb
xor
bound
sub
fcmovu
movsl
insb
or
mov
mov
notb
clc
rcr
push
sbb
jg
sub
pop
sbb
or
repz
and
pop
xor
pop
adc
scas
outsl
in
xchg
lea
leave
pop
or
xlat
dec
outsl
jns
sub
sbb
loopne
inc
mov
notb
clc
rcr
iret
push
mov
add
call
xchg
cwtl
xchg
jnp
add
dec
mov
rol
ficompl
push
push
inc
stos
adc
mov
shrb
lret
addr16
pop
lds
push
sbb
jl
push
pusha
jns
sbb
in
icebp
lret
ljmp
cmp
mov
xchg
or
xor
inc
inc
ret
xor
aaa
pop
pop
cmp
cmp
jae
add
add
adc
jbe
mov
inc
xor
cmp
xchg
inc
cmp
int3
mov
call
sub
lret
aam
daa
push
push
dec
testb
adc
fwait
cs
daa
xor
mov
stos
dec
push
rol
add
fwait
mov
jle
ljmp
int3
pop
jns
es
inc
repz
xor
push
test
rcrb
repnz
icebp
out
cltd
call
shrl
push
adc
push
mov
out
push
jne
imul
sub
pop
fcomps
pushf
cmp
leave
jae
incb
pop
test
adc
add
call
push
js
or
enter
lock
xchg
or
imul
fsubl
dec
jne
push
stos
pop
stc
xor
dec
mov
stc
outsb
std
sub
mov
ficompl
loopne
loope
dec
js
lods
loope
xor
stos
out
scas
shr
xchg
inc
inc
mov
out
mov
adc
jnp
int
lcall
and
aas
dec
cld
dec
sarl
dec
or
outsb
test
mov
xlat
mov
lods
dec
and
lahf
shrl
push
pop
shrl
in
mov
xchg
frstor
add
call
and
inc
cltd
ret
adc
ja
add
loope
mov
lods
and
dec
loop
inc
ret
mov
icebp
or
xchg
inc
lock
xchg
or
imul
inc
sub
push
pop
stc
xor
dec
mov
stc
outsb
std
sub
mov
sub
icebp
in
pop
mov
cmp
mov
icebp
int3
loop
sahf
adc
mov
sub
mov
cmp
movsb
mov
imul
mov
adc
inc
addr16
cmp
push
xchg
mov
jno
dec
adc
call
cwtl
in
je
mov
mov
fistpll
in
push
jo
add
xor
sub
lock
mov
xchg
jmp
mov
adc
jge
pop
rcl
clc
lcall
push
mov
dec
lock
ret
dec
jg
out
dec
mov
inc
call
cli
ds
lods
lock
ds
imul
jmp
mov
into
mov
mov
popa
test
data16
pop
or
adc
add
call
cmp
xchg
sbb
jne
adc
insl
stos
jg
repnz
adc
clc
in
clc
sub
in
scas
pop
inc
pushw
aam
xchg
sbb
jns
xchg
push
lods
dec
movsw
fdivrl
rcrl
push
mov
mov
cmp
lock
adc
pop
mov
push
adc
or
push
push
lret
cmc
add
es
lea
jmp
jno
stos
mov
and
je
int
sub
lret
push
adc
aaa
test
repz
pop
jno
add
call
pop
fmull
mov
or
rcl
dec
adc
xchg
hlt
sahf
stos
mov
dec
cmp
mov
out
movb
inc
inc
mov
out
or
imul
lods
adc
imul
fbstp
and
pop
shrl
in
mov
sub
test
sub
xlat
rolb
outsb
sbbl
cli
and
pop
mov
sub
fisubl
sbb
xor
lea
rcr
sbb
push
add
call
xor
dec
aas
in
ljmp
imul
and
jmp
mov
pop
popa
and
out
jmp
xlat
and
lods
mov
cmp
cld
addr16
push
pop
addb
inc
mov
or
sbb
aaa
mov
imul
mov
lods
pop
dec
test
dec
push
xchg
addr16
push
mov
push
sub
test
mov
cld
cli
push
cmp
call
or
xlat
shrb
call
clc
xchg
aam
pop
mov
fbld
push
lret
rcrb
int3
sub
pop
mov
lea
adc
cmp
inc
sbb
mov
xchg
mov
or
test
sbb
ret
dec
push
out
je
cmp
mov
lods
scas
xchg
fisubs
jns
jbe
adc
mov
mov
movsl
in
scas
mov
leave
xchg
sbb
loop
push
stc
cmp
xor
mov
js
add
dec
push
out
notl
out
push
add
call
adc
rcl
xor
int
clc
push
xor
dec
clc
adc
shl
mov
cltd
xlat
out
scas
shr
xchg
or
jg
and
clc
rcrb
mov
xchg
repnz
lock
ret
dec
jg
dec
fisubl
movsl
adc
mov
orb
shlb
mov
inc
outsl
shrl
add
hlt
push
fstp
pop
daa
mov
test
push
shrb
cmp
xchg
stos
aas
cld
push
add
ds
mov
pop
dec
lret
scas
xor
call
xchg
mov
inc
enter
lock
aaa
test
repz
gs
xchg
je
or
cmpsl
mov
jmp
push
cmpsb
lock
mov
repz
loope
jo
push
mov
shrl
and
mov
xlat
mov
std
or
pop
push
xchg
scas
sub
lcall
loop
and
push
stos
sub
sub
sub
call
pop
push
fisttpl
test
xchg
and
jg
repz
data16
pop
fsubrl
mov
dec
jnp
add
call
movsl
fdivrl
add
in
hlt
dec
mov
xrelease
insl
leave
jl
aas
mov
or
jge
iret
popa
adc
fsubrs
in
mov
xchg
ficompl
inc
movsl
testl
subb
jge
inc
leave
pop
or
xlat
dec
adc
jnp
add
loopne
inc
leave
jl
aas
mov
mov
shll
loope
fsub
adc
js
aas
dec
cld
sbb
and
push
and
mov
add
call
out
inc
out
call
push
je
jge
mov
fistps
popf
cmc
cld
jb
jp
stos
mov
mov
sub
push
ret
ret
jo
js
daa
call
or
cmpl
fs
jae
and
pop
lahf
inc
stc
push
aas
std
inc
inc
pop
out
cli
ljmp
in
pop
call
cmpsb
mov
mov
mov
push
cmp
ljmp
sahf
stos
mov
dec
cmp
add
movb
inc
inc
mov
out
xor
mov
call
inc
fsubs
ror
std
push
and
aas
dec
cld
dec
sarl
dec
or
outsb
cmp
les
outsl
outsl
jecxz
outsl
leave
leave
xchg
imul
xor
mov
js
addb
add
loopne
sbb
sbb
test
aas
out
inc
xor
jle
loopne
test
fisubl
cmpsb
pop
nop
popa
shll
pop
lods
jnp
roll
cmp
mov
aas
sbb
inc
push
popf
sbb
sahf
ret
icebp
sub
lea
xchg
cmp
push
mov
mov
call
rcl
xsavec
ror
std
push
and
aas
dec
cld
dec
sarl
dec
or
outsb
out
jns
cli
push
jmp
mov
jne
int3
and
pop
roll
loop
sbb
pop
stos
mov
icebp
sub
pop
mov
mov
xor
push
incl
and
sti
arpl
icebp
int3
loop
sahf
adc
mov
sub
cmp
dec
mov
imul
jbe
cmpl
push
ljmp
ret
add
call
xor
test
in
lods
sbb
test
sub
xchg
cmp
int
dec
push
push
add
stos
sti
hlt
sub
lock
mov
pop
sbb
xchg
cmp
and
jp
or
in
or
rcl
stos
jns
pop
divl
imul
or
push
mov
jno
clc
lock
jb
or
sub
repnz
loope
pop
push
je
pop
dec
sub
xchg
cmpsl
pop
or
fdiv
ja
jmp
fnstenv
add
call
test
pop
or
xlat
dec
mov
test
inc
dec
loopne
push
inc
mov
jnp
xor
xor
outsl
leave
leave
xchg
imul
xor
mov
js
pushf
and
cmp
ret
andl
out
stos
out
scas
shr
xchg
inc
inc
mov
out
or
hlt
mov
adc
aaa
test
repz
aaa
int3
mov
loope
cltd
pop
cmc
dec
ret
loopne
pop
out
add
in
sahf
stos
mov
add
call
cmp
repz
popa
in
movb
inc
inc
mov
out
int3
lret
xor
adc
and
mov
jl
dec
hlt
sub
lock
mov
jbe
inc
cmp
jbe
clc
scas
fistps
inc
ret
pavgw
push
mov
js
aas
inc
xor
shlb
cmpsl
mov
push
lds
add
fdivrs
loopne
cmp
xor
mov
or
add
scas
or
pop
inc
addl
leave
mov
rcrb
adc
cmp
xchg
inc
lahf
add
call
pop
enter
clc
pushf
sahf
lds
outsb
neg
sbb
sbb
into
inc
sub
clc
jns
xor
lret
jb
fisttpl
push
out
out
xor
loop
sahf
adc
dec
adc
jge
sbb
mov
inc
sub
jle
cwtl
xlat
hlt
sub
lock
mov
xchg
jmp
mov
dec
fisubrs
mov
and
and
pop
shrl
in
mov
sbb
mov
sbb
xlat
inc
imul
or
fadds
add
call
xor
jle
loopne
test
jno
lahf
lods
and
enter
pusha
mov
inc
in
gs
cmp
insb
inc
in
xor
push
fisubl
adc
pusha
xlat
push
adc
ficompl
adc
adc
xor
mov
jnp
adc
cltd
or
fidivl
aad
adc
xrelease
sub
and
sbb
cmp
xrelease
insl
lock
sbb
pop
movsb
jae
fs
cmpsb
xor
or
sbb
push
and
aas
add
call
cld
xchg
sub
pop
jbe
cmpl
push
jbe
jg
sbb
sahf
dec
xchg
cmc
xor
aad
xchg
adc
jb
lahf
shrl
push
pop
shll
mov
lret
mov
add
and
popf
mov
aaa
push
dec
jns
xor
xor
push
push
inc
pop
mov
jno
push
aas
aam
xchg
insl
arpl
and
pop
cmp
and
mov
add
xchg
cmpl
add
call
in
bound
arpl
dec
inc
call
je
cmp
xchg
ss
add
loope
mov
addl
and
push
movsl
int3
dec
add
xchg
loope
outsl
scas
icebp
pop
or
push
hlt
adc
or
mov
aaa
fcoml
cld
adc
test
daa
mov
pop
int
mov
push
push
in
ss
scas
test
add
icebp
int3
loop
sahf
adc
dec
adc
jge
add
jg
lea
cwtl
call
das
inc
jno
push
pushf
cmpsl
fs
push
or
add
call
sbb
jg
movsl
lods
xor
scas
jmp
outsb
shl
out
cmp
push
aas
std
inc
inc
pop
out
mov
outsb
mov
mov
add
push
mov
xchg
fbstp
out
mov
xchg
push
icebp
scas
cmpsl
ds
cmp
fstps
cmp
cmpsb
movsb
add
or
sbb
inc
mov
out
cmp
add
push
and
lcall
and
aas
dec
cld
dec
sarl
dec
or
outsb
in
xlat
or
aas
cmpsl
or
outsl
leave
leave
xchg
imul
add
call
push
mov
js
addb
add
loopne
loop
cli
jge
lea
dec
movsl
jns
call
stos
out
scas
shr
xchg
inc
inc
mov
out
sysenter
sub
arpl
cmp
push
movb
adc
fstpl
pop
mov
mov
cmp
out
ret
clc
mov
xor
xor
lds
or
movb
inc
inc
mov
out
mov
lock
pop
xchg
push
fisubrs
xchg
clc
hlt
sub
lock
add
call
adc
outsb
inc
cmp
jbe
clc
and
hlt
loop
push
insl
push
xor
mov
js
aas
inc
xor
xchg
std
jne
das
scas
outsb
add
xchg
loope
fdivrs
cmc
iret
xor
hlt
fsubl
ds
pop
pop
mov
enter
adc
mov
imulb
xor
stos
out
scas
shr
xchg
inc
inc
mov
out
out
inc
add
ljmp
xor
lret
repz
imull
cmp
add
call
xor
mov
fwait
sbb
fwait
cmp
cmp
arpl
dec
mov
movb
inc
inc
mov
out
xor
or
std
sti
mov
xor
sub
lock
mov
jbe
inc
cmp
jbe
clc
cmpsl
int3
pop
xchg
push
xlat
mov
xor
mov
js
aas
inc
xor
push
neg
lods
ret
add
testb
add
fdivrs
sahf
shlb
icebp
xor
cmpsb
rol
aam
add
cmp
add
call
iret
push
cmpsb
bound
push
jb
clc
insb
ja
and
orb
cmpsl
jg
inc
or
fwait
jg
movsl
dec
cmp
lcall
enter
pop
fisttpl
icebp
cmc
mov
repz
loop
sahf
adc
dec
adc
jge
dec
loope
jbe
fcmove
in
jo
pop
jle
cwtl
xlat
hlt
sub
lock
mov
xchg
jmp
mov
sub
xor
imul
push
pop
shrl
in
mov
call
push
jecxz
xchg
xor
gs
icebp
int3
loop
sahf
adc
fsubrl
insl
pop
test
and
movsw
fdivrl
jg
leave
jmp
pop
iret
sub
popf
mov
aaa
push
dec
jns
les
xchg
add
outsb
cmp
psubusw
scas
out
lret
adc
jmp
aas
lods
test
push
and
aas
dec
cld
sbb
dec
lock
loopne
and
xchg
mov
push
je
jge
mov
fisttps
jge
add
call
pop
stos
mov
mov
sub
push
lahf
inc
cmp
es
lahf
dec
mov
repz
push
add
lods
lahf
dec
sub
out
sbb
sbb
pop
push
insb
rolb
dec
insb
outsb
aam
pushf
neg
sbb
lret
mov
and
pop
cmp
fucomip
into
push
aam
sbb
and
in
lock
aad
rcll
pop
sbb
mov
subb
ja
add
loope
mov
mov
pop
es
insb
mov
test
loopne
add
call
sbb
clc
inc
lock
xchg
or
imul
pop
clc
ja
add
sbbl
ret
push
stc
outsb
std
sub
mov
and
fistps
sahf
fbld
hlt
sub
lock
mov
xchg
jmp
mov
pop
in
adcb
cli
imul
jns
rcll
cmp
movb
leave
mov
jb
aaa
ds
ljmp
scas
ds
xlat
cmpsb
sbb
or
xchg
pushf
jg
out
pop
std
lods
repz
call
in
jl
add
testl
pop
out
cmpsb
leave
jle
orl
pop
xchg
in
push
movl
inc
sar
addb
sbb
and
xor
mov
call
ret
inc
stos
mov
dec
stc
out
jne
push
and
enter
pop
fisttpl
and
dec
arpl
icebp
int3
loop
sahf
adc
dec
adc
jge
mov
dec
hlt
in
jo
pop
jle
cwtl
xlat
hlt
sub
lock
mov
add
call
xchg
jmp
mov
add
xorl
call
jbe
lahf
shrl
push
pop
shrl
in
mov
cmp
pop
xchg
mov
mov
data16
pop
fsubrl
adc
outsb
xchg
mov
mov
adc
add
xor
mov
pop
push
and
data16
scas
and
push
out
jmp
sti
cld
test
out
cli
sub
int
mov
push
push
in
ss
push
xchg
sbb
call
icebp
int3
loop
sahf
adc
dec
adc
add
call
jge
mov
je
push
add
movsw
fdivrl
push
and
adc
xor
mov
mulb
pop
or
fwait
adc
pop
cmc
fs
mov
icebp
sub
cwtl
loope
fcomps
sub
sub
xor
xlat
inc
imul
push
shrl
and
xchg
or
cli
in
dec
adc
mov
lods
push
dec
pop
mov
or
dec
jg
adcl
dec
sub
je
xor
call
add
imul
sub
pop
mov
mov
cld
ds
icebp
test
fisttps
insl
mov
push
loopne
mov
mov
loop
mov
imul
inc
imul
les
sub
xorl
out
add
sarl
dec
or
outsb
dec
mov
and
dec
js
lods
loope
xor
stos
out
scas
shr
xchg
inc
inc
mov
out
dec
xorb
daa
and
add
call
sti
hlt
sub
lock
mov
xchg
jmp
mov
mov
mov
xchg
test
adc
mov
dec
lock
ret
dec
jg
xchg
add
and
adc
cmp
ret
shll
stos
pusha
fstps
and
into
mov
mov
in
inc
stos
add
or
adc
cmp
xchg
sbb
jne
adc
insl
pushf
push
dec
repnz
in
clc
sub
call
mov
test
les
repz
cmc
xor
inc
mov
pop
nop
cmp
cmp
in
jecxz
aaa
stos
test
sub
push
loop
add
repnz
sbb
pop
outsl
ja
cmp
xor
fstpl
xchg
mov
repz
or
push
aad
push
fnstcw
test
sbb
cmp
cmp
sbbb
adc
test
out
mov
cmpsb
jg
sub
pop
sbb
or
repz
and
pop
xor
pop
adc
call
or
mov
sbb
or
jno
gs
xchg
or
imul
xchg
dec
lcall
xor
dec
mov
stc
outsb
std
sub
mov
dec
loop
pop
sub
movsl
dec
js
lods
loope
xor
stos
out
scas
shr
xchg
inc
inc
mov
out
mov
cmp
ja
std
push
mov
ror
std
push
and
aas
dec
cld
dec
sarl
dec
or
outsb
out
adc
xchg
lock
xchg
sub
sub
and
pop
shrl
in
mov
inc
add
call
insb
ljmp
xchg
ret
adc
ja
add
loope
mov
lcall
or
scas
lahf
in
sbb
int
push
testl
imul
push
jmp
pop
stc
xor
dec
mov
stc
outsb
std
sub
mov
push
mov
jecxz
add
or
xor
arpl
icebp
int3
loop
sahf
adc
mov
sub
andb
or
sbb
mov
imul
mov
adc
inc
addr16
cmp
and
pop
jno
add
call
adc
add
setle
rcr
mov
repnz
jg
mov
arpl
dec
mov
and
fwait
mov
pop
sbb
xchg
cmp
and
lahf
int3
ret
push
or
jbe
dec
xchg
pop
or
push
xchg
mov
push
neg
push
push
roll
cmpsb
mov
jb
loope
pop
push
je
fcomps
pushf
cmp
leave
jae
incb
pop
test
adc
xchg
fs
hlt
inc
add
call
pop
or
xlat
dec
dec
add
adc
jecxz
add
loopne
inc
mov
jnp
xor
arpl
dec
fisubrs
xchg
imul
xor
mov
js
pushf
and
cmp
outsb
pop
sub
pusha
movsb
jp
sbb
cmp
xrelease
insl
lock
sbb
pop
movsb
push
in
nop
lods
xchg
mull
aad
jmp
aas
lods
test
push
and
aas
dec
cld
xchg
sub
pop
jbe
cmpl
push
test
push
nop
sbb
test
add
call
in
push
or
mov
imul
push
daa
jb
cwtl
mov
mov
mov
add
and
popf
mov
aaa
push
dec
jns
fisubl
addr16
push
sbb
aad
or
mov
adc
adc
sbb
sti
xchg
into
xor
sbb
jl
or
or
outsl
popf
sbb
sbb
lea
add
pop
test
sbb
aam
xor
call
jl
sbb
xor
add
jnp
xlat
pop
test
cwtl
sbb
cmp
add
mov
jae
fsubrl
xchg
sub
je
rcr
pop
arpl
fsubl
and
push
loope
xchg
xor
jno
mul
push
and
repz
scas
loope
je
mov
xor
stos
push
dec
mov
xor
inc
cmp
aaa
test
repz
in
or
repnz
call
mov
xchg
aam
outsl
shr
mov
dec
lret
push
dec
repz
aas
sub
movsb
scas
jmp
xchg
push
push
cli
aad
fscale
fnsave
and
ret
sub
mov
dec
ret
out
dec
lods
inc
or
test
mov
sub
cs
dec
jae
scas
adc
int
add
xchg
sub
fcoms
call
mov
inc
hlt
push
add
jb
ja
jl
push
cmpsl
sbb
mov
or
call
out
fcoms
in
test
repz
in
testl
imul
int
repz
mov
pop
add
lods
dec
sub
js
inc
inc
dec
loopne
push
inc
imul
popf
mov
into
sbb
or
out
int3
cmp
subb
cmpsl
in
or
fists
or
stos
xchg
add
lret
fmuls
sbb
int3
mov
in
in
sub
push
mov
sahf
loope
jp
push
in
adc
and
add
call
test
fcoms
dec
leave
orl
xor
inc
or
test
mov
mov
dec
and
xchg
xchg
scas
mov
xor
out
pop
xor
inc
mov
mov
into
jg
and
call
push
fstps
push
xlat
mov
std
mov
xchg
xchg
push
arpl
jg
leave
jmp
cli
test
push
shrb
sub
dec
sub
filds
jecxz
or
xchg
adc
add
call
inc
enter
xchg
lret
cmp
mov
mov
xchg
in
push
fwait
clc
popf
xor
jecxz
dec
adc
rcr
inc
xor
imul
lret
mov
js
pop
dec
daa
jnp
lahf
jecxz
mov
test
push
pop
mov
xchg
in
test
repz
scas
sub
adc
jp
xchg
cmp
sarl
filds
mov
repz
sti
shl
cmc
pop
aad
jl
test
out
jne
ljmp
adcb
call
shlb
cmp
xor
leave
push
inc
aas
in
nop
adc
mov
mov
pop
push
lret
dec
lods
inc
or
test
mov
loopne
and
dec
repz
xor
add
add
out
push
cmp
pusha
ret
arpl
jmp
mov
stos
inc
pop
add
mov
adc
push
es
mov
pop
cmpsb
cmpsl
jbe
dec
out
dec
jnp
scas
xchg
and
mov
call
data16
gs
js
mov
call
mov
pop
or
sub
cmc
movsb
xor
or
push
cmc
mov
cmc
jae
fisubs
mov
imul
scas
divl
inc
sbb
ljmp
add
stos
sti
push
cmpsl
sbb
mov
inc
adc
stos
sbb
xor
cmp
movsb
movsb
pop
mov
push
push
mov
push
clc
adc
cwtl
mov
mov
enter
rol
ficompl
push
xchg
shlb
sbb
pop
mov
aam
sub
into
inc
add
call
ds
jl
jne
mov
out
mov
dec
aad
adc
xchg
pop
das
fcoms
aas
std
inc
inc
pop
out
xchg
pop
pop
xchg
sti
jmp
cmpsb
call
push
mov
xchg
stos
out
inc
out
es
ret
pop
mov
adc
mov
pop
add
jmp
lcall
inc
inc
dec
loopne
push
inc
sub
ja,pn
icebp
dec
pop
dec
adc
mov
ret
sub
mov
outsl
dec
loopne
cltd
jns
lods
inc
add
call
hlt
test
mov
sub
cs
out
dec
or
out
xor
mov
dec
mov
into
jg
xor
mov
sti
pop
lds
mov
loop
imul
sub
pop
aad
bound
mov
aaa
sub
inc
out
push
push
mov
daa
push
adc
mov
mov
sbb
and
in
rclb
cmp
adc
in
clc
inc
push
xchg
pop
ror
mov
ret
adc
sbb
add
call
shrb
aas
lret
adc
jns
aas
cmp
lods
jp
sbb
std
aaa
xor
add
mov
add
mov
inc
jnp
mov
psubusb
push
dec
add
xchg
sub
negl
into
mov
in
and
pop
mov
add
ja
jl
icebp
scas
cmpsl
mov
push
pop
fsts
in
in
sub
pop
or
movsb
push
mov
sti
mov
and
jae
scas
mulb
push
add
call
fstpl
shlb
mov
lret
std
push
adc
jno
mov
push
xchg
shlb
adc
jne
in
into
inc
pushl
pusha
hlt
jmp
mov
push
fstps
cmpsb
mov
xor
mov
mov
xchg
adc
mov
in
jnp
pop
mov
xchg
mov
or
push
cmpsl
inc
jne
outsb
repnz
das
insb
inc
push
xchg
fdivl
ds
ja
pop
mov
sbb
or
add
call
lock
leave
push
outsb
mov
loope
test
jg
fs
xor
xor
lods
fdivl
mov
push
xchg
inc
out
pop
dec
adc
or
lret
test
xchg
dec
mov
mov
xchg
push
outsl
loopne
lret
cmp
jle
jg
xchg
insl
jno
adc
test
add
sbb
cmpsb
jg
sub
pop
sub
loope
xor
push
insb
je
js
and
or
cmpsl
scas
cmp
je
add
call
aam
mov
pop
or
xlat
dec
lcall
mov
loopne
push
inc
jno
adc
test
sub
sbb
test
xlat
cltd
and
ffreep
aad
push
inc
out
imull
rcrl
fnstenv
loope
jmp
sbb
jnp
test
enter
mov
out
push
dec
push
pop
stos
hlt
ljmp
icebp
inc
test
push
stos
pop
cmp
fdivrl
jp
inc
dec
out
cltd
sarl
add
call
jg
sub
pop
inc
sbb
repnz
js
and
jo
push
jg
xor
cmpsb
mov
loope
dec
insb
push
xchg
sbb
adc
scas
sahf
je
out
ficomps
mov
and
mov
ret
dec
cmc
xchg
and
or
inc
mov
xchg
mov
push
xchg
fcmovu
arpl
cwtl
stos
movsb
or
push
inc
aam
notb
icebp
mov
dec
subl
ljmp
ffreep
push
push
pop
sbb
das
aam
dec
mov
add
call
cmp
lret
rolb
jb
cltd
adc
dec
jnp
push
mov
or
lea
test
pop
fmuls
hlt
push
jle
jb
into
sbb
setb
xor
mov
sub
jg
cmp
adc
movsl
dec
call
jne
loopne
xchg
dec
out
mov
fimuls
stc
mov
es
cmp
pop
or
cmp
ret
inc
jae
sbb
cld
xor
mov
and
outsb
sub
insl
testl
mov
push
add
call
pop
add
mov
cmp
andb
in
cltd
ret
cltd
push
or
inc
imul
addr16
cli
hlt
cmpsb
cltd
and
ffreep
push
push
pop
sbb
das
add
rcr
mov
mov
pop
cwtl
xor
push
testl
sbb
jge
sbb
rcll
mov
pop
push
pop
push
cmpsl
pop
in
shlb
call
fiadds
ja
scas
jnp
out
jno
fmull
add
call
movsb
add
fwait
jnp
mov
mov
aas
repz
movsl
dec
pop
push
cwtl
jg
sbb
cmp
and
dec
pop
xchg
inc
sarl
mov
orb
xlat
xor
adc
scas
jg
mov
call
jg
xchg
aas
std
inc
inc
pop
out
mov
outsb
mov
mov
add
push
mov
hlt
push
push
sbbb
adc
addr16
ss
icebp
scas
cmpsl
ds
cmp
fldcw
cli
pop
and
or
mov
jns
jae
add
call
inc
pop
cwtl
popl
lcall
push
inc
test
fndisi(8087
jge
push
sub
cmpsb
or
inc
jne
push
ffreep
push
push
pop
sbb
das
int
dec
push
inc
sub
mov
sbbb
daa
out
fdivr
push
aas
push
aam
dec
xchg
js
aam
or
pop
mov
pop
iret
jmp
push
xchg
fcmovu
arpl
cwtl
stos
movsb
or
push
inc
mov
ja
arpl
cmp
push
movb
adc
fstpl
pop
mov
mov
cmp
out
add
call
popf
dec
mov
sub
cmp
and
or
dec
mov
iret
data16
sbbl
cwtl
stos
movsb
or
push
inc
push
fnstcw
xor
push
mov
fidivl
jb
test
arpl
test
pop
in
and
ret
and
mov
ja
std
mov
cld
daa
out
fdivr
push
aas
push
jno
and
push
jge
mov
xchg
mov
test
xor
scas
mov
cld
mov
mov
test
jnp
mov
f2xm1
sti
rclb
sbb
mov
add
call
xchg
arpl
mov
and
outsl
js
jb
test
popf
aam
and
push
std
pushf
adc
mov
inc
sub
adc
ss
cld
pop
jle
and
orl
add
cmpsl
popa
xor
mov
repz
arpl
iret
ret
dec
push
or
imul
push
data16
je
mov
sbb
in
xchg
les
inc
push
testl
pop
into
mov
cwtl
jae
and
pop
iret
sub
popf
mov
dec
shrl
ret
dec
jg
subl
xchg
add
add
lcall
idivb
push
sbb
cmp
cmpsb
and
push
push
mov
and
mov
mov
cmp
jmp
fisubl
sti
cltd
adc
dec
jnp
push
mov
or
and
repnz
hlt
push
jle
jb
into
mov
xor
mov
repz
fisttpl
repnz
test
aaa
and
and
mov
jne
loopne
xchg
dec
out
sub
push
fildll
out
sub
and
call
xchg
je
test
inc
inc
jae
pop
cmp
xchg
fistl
add
insl
testl
js
and
xlat
inc
or
pop
cmp
pop
ja
stos
jno
xrelease
insl
push
in
cltd
ret
cltd
push
and
cmp
xchg
push
adc
jae
pop
rcrl
test
xor
cld
stos
mov
lods
cli
data16
push
add
cmpsl
popa
xor
les
mov
inc
mov
jg
sub
pop
add
call
fists
lods
popf
inc
bound
jae
jg
ss
mov
out
or
xchg
mov
sbb
mov
mov
popa
mov
int
cltd
or
fisttps
scas
or
test
popa
mov
xchg
mov
cmpsb
push
adc
add
jae
sbb
das
mov
mov
rcr
out
inc
mov
xchg
mov
push
xchg
fcmovu
arpl
cwtl
stos
movsb
or
push
inc
into
test
mov
jo
push
jbe
jbe
push
outsl
js
jb
add
call
test
popf
aam
and
push
add
shrb
lahf
mov
inc
xor
dec
js
jmp
ss
cld
pop
jle
and
orl
add
cmpsl
popa
xor
mov
repz
arpl
lret
mov
mov
hlt
mov
loop
sub
pop
lea
inc
push
testl
pop
into
mov
xchg
ret
or
sub
popf
mov
dec
shrl
ret
dec
jg
sub
cmp
inc
cmpsb
push
lcall
idivb
push
popa
add
call
mov
mov
jmp
jle
inc
jecxz
mov
outsl
out
xchg
dec
cmc
daa
push
pop
push
cwtl
inc
xchg
mov
mov
add
or
add
sub
cmpsl
mov
adc
inc
jmp
mov
out
xor
and
ljmp
push
pop
mov
sub
or
mov
clc
testb
mov
jmp
scas
dec
in
sub
push
outsl
js
jb
test
popf
aam
and
push
shrl
sub
lock
mov
call
cltd
shrb
xchg
xchg
les
inc
push
testl
xchg
and
push
fdivs
wrmsr
scas
nop
push
mov
sub
mov
push
lret
inc
mov
in
sub
outsb
pop
mov
mov
pop
push
rolb
mov
out
in
sbb
shlb
leave
je
stos
in
pop
xchg
int
sbb
xchg
je
xchg
sub
aaa
or
mov
clc
testb
sub
and
mov
pop
add
call
sbb
loopne
adc
xor
mov
mov
mov
test
push
sbb
xchg
jge
sbb
rcll
fdiv
icebp
pusha
rcr
and
pop
sub
sahf
dec
stos
mov
mov
sub
inc
dec
movntq
xchg
and
cmpsb
call
add
leave
push
xchg
xlat
cmp
mov
ds
imul
add
push
mov
repz
push
mov
push
and
ror
gs
add
add
mov
inc
jg
sub
add
call
fistl
sahf
je
cmp
push
mov
dec
mov
les
scas
cmp
sub
xchg
mov
repz
push
cld
icebp
push
add
xchg
cld
clc
test
js
adc
mov
orb
mov
gs
jmp
lds
sub
lods
imul
cmpsl
sbb
cmpsl
cwtl
insl
mov
and
test
xchg
aaa
aaa
movsl
adc
mov
orb
xor
int3
cmpsb
jae
jg
pop
jo
insb
jbe
add
call
sbb
enter
pop
sbb
hlt
mov
aam
sub
lds
ret
clc
cmp
psraw
xchg
xlat
push
inc
rcr
push
ds
cmp
xor
aaa
ret
and
enter
inc
cltd
lret
adc
fbld
cmp
or
xchg
pop
cli
push
mov
adc
cmp
test
push
cmp
and
push
pop
and
pop
jo
andb
cltd
lret
adc
fbstp
sarl
pop
cmp
mov
xor
xchg
outsl
jne
jge
sarl
sarb
add
call
inc
pop
push
push
je
cld
js
fistps
push
cmp
or
arpl
and
mov
fadd
jb
add
adc
testl
mov
add
fcompl
jne
enter
pop
push
dec
les
add
lret
aad
test
in
loopne
jb
pop
scas
inc
ret
mov
aad
lea
and
jle
sub
fwait
movsl
push
sub
stc
popa
insb
fisttpll
xchg
popf
push
mov
add
call
adc
xor
mov
ljmp
outsl
out
pop
xor
notb
test
subl
ret
lds
fcomps
jo
mov
jmp
push
je
jge
mov
fistps
push
cwtl
jg
sbb
jle
out
test
inc
sarl
xchg
xchg
dec
add
outsl
arpl
jmp
stos
jmp
xchg
imul
cmp
lods
mov
cwtl
xchg
pop
iret
dec
jb
add
imul
push
or
xchg
insb
fldcw
jge
fs
rorb
call
mov
or
insb
mov
and
and
adc
ss
imul
sahf
lods
jge
cmp
mov
notb
call
popa
dec
aaa
fsubr
ret
outsb
sbb
mov
inc
sub
cmp
mov
inc
cmp
push
pop
movsl
aad
dec
cwtl
jb
roll
sbb
xor
mov
call
jae
pop
mull
lods
sub
jne
jno
push
les
jne
inc
testl
xchg
cli
push
sub
add
call
lock
push
mov
out
inc
cmp
xor
mov
pop
mov
test
int3
cltd
lods
and
repnz
xor
push
inc
lcall
sub
mov
adc
sbb
push
lret
pop
or
cs
cltd
dec
sbb
jb
je
sbb
xchg
scas
dec
repz
pop
test
rorb
test
into
movsl
cs
jge
test
int3
cltd
lods
and
call
jg
movsl
pop
cmpsb
sub
inc
cmpsb
rolb
fldenv
pop
adc
xchg
sub
test
mov
sub
dec
push
imul
jb
cmp
sub
call
dec
outsb
movsl
rol
jge
fs
rorb
ss
jne
pop
call
push
push
mov
movsl
adc
mov
orb
dec
jg
test
xchg
negl
and
push
xchg
lock
out
dec
pop
outsb
sub
mov
add
call
pop
pop
cmp
enter
rclb
and
cmp
and
ffreep
pushf
xchg
push
push
js
or
add
add
in
xchg
std
lods
push
xchg
mov
adc
push
popa
jl
mov
cmp
ss
cld
push
js
mov
push
sarl
pop
xchg
out
xor
fstl
or
mov
fdivl
xor
push
loope
jns
xor
mul
mov
xchg
sbb
adc
jg
cmp
adc
call
jns
lods
dec
loopne
mov
mov
data16
jl
iret
in
ss
cld
stos
mov
lods
cli
data16
push
add
cmpsl
popa
xor
xchg
sti
aad
mov
gs
adc
cmpsb
jg
sub
pop
push
inc
jecxz
sbb
lret
adc
add
xchg
inc
fsubl
sti
dec
xchg
xchg
sar
mov
popf
lea
mov
and
xchg
rcrb
mov
loopne
addps
icebp
test
popa
mov
add
call
xor
lods
add
jae
sbb
das
and
xchg
dec
inc
fwait
inc
inc
mov
xchg
mov
push
xchg
fcmovu
arpl
cwtl
stos
movsb
or
push
inc
push
mov
lods
int3
test
dec
sbb
aaa
test
repz
in
or
repnz
mov
sub
dec
xchg
lods
dec
mov
scas
push
jge
ret
sub
dec
sub
dec
add
popa
bound
outsl
adc
mov
insw
testl
pop
dec
rolb
jge
add
call
push
xchg
test
jae
movsl
sub
and
push
lret
xchg
ret
mov
dec
in
sub
push
outsl
js
jb
test
popf
aam
and
push
lcall
scas
xlat
inc
dec
mov
xor
pop
bound
frstor
mov
cmc
adc
mov
sbb
scas
xlat
pop
cltd
mov
pushf
push
aas
std
inc
inc
pop
out
ja
imul
pushf
jne
clc
xchg
or
jmp
add
or
stc
rorb
inc
or
popa
add
call
popa
arpl
and
insw
testl
pop
jl
jne
repnz
and
imul
or
outsb
out
and
test
mov
ret
pop
fwait
jnp
mov
pushf
mov
popf
mov
cwtl
jg
sbb
popf
inc
dec
lods
dec
pop
xchg
inc
sarl
mov
orb
lock
pop
push
test
inc
dec
push
mov
dec
mov
pop
dec
jno
inc
sahf
mov
inc
xor
out
cmpsl
subb
add
call
lret
mov
in
or
shlb
xchg
cld
and
popf
fistps
mov
sub
ret
out
mov
push
nop
shr
jne
bound
xor
dec
movsb
inc
xchg
int3
mov
mov
les
or
cmp
push
push
sub
mov
lret
ds
sub
xor
in
clc
sub
decb
addr16
ret
dec
jg
push
sub
and
pop
test
sub
lock
push
das
inc
testl
call
sti
in
mov
adc
pop
wbinvd
fcomi
push
push
mov
loop
jge
mov
dec
ret
rorl
add
cltd
mov
xorb
addr16
jb
popl
dec
scas
or
out
pop
repz
in
iret
stc
fnsave
insl
stc
xor
lea
repz
shll
jle
mov
xlat
or
push
inc
jbe
cmc
clc
cmpsl
cli
rorb
mov
sub
jmp
sbb
lcall
push
sahf
add
call
and
imul
inc
test
mov
shlb
jae
movsl
sub
and
cli
inc
dec
movsb
jl
mov
aas
cmp
pop
pop
mov
mov
imul
xchg
mov
push
or
jne
xor
fstl
sti
stos
mov
and
xchg
push
jb
mov
sarb
mov
icebp
pop
icebp
jo
movsb
aad
pop
mov
inc
add
dec
call
in
xchg
mov
lahf
jnp
mov
mov
fucom
mov
call
inc
enter
clc
jmp
mov
sahf
aad
mov
or
xlat
mov
ja
dec
in
inc
push
or
lds
xchg
mov
out
mov
mov
das
xor
add
movsl
add
dec
xorw
xchg
push
divl
psllq
imul
mov
jae
test
lods
push
pop
stos
push
xchg
mov
mov
cs
cmp
lcall
rcrb
xor
out
adc
mov
mov
add
call
xlat
shl
dec
movsb
addb
rolb
scas
call
mov
jle
aad
das
pushf
mov
jp
movsb
mov
xor
push
mull
pop
imulb
pop
xchg
jae
adc
sbb
cmc
add
dec
out
dec
orb
push
cmpsb
scas
cmp
cmp
cwtl
insl
push
fwait
aad
jmp
push
xor
or
push
jge
mov
xchg
mov
cmp
pop
xchg
call
add
call
enter
xor
pop
out
lret
test
jge
mov
lcall
out
int
enter
mov
dec
pop
sahf
es
inc
in
and
cli
pop
and
or
pop
dec
adc
adc
jae
pushf
inc
pop
cwtl
popl
lcall
push
inc
popa
cld
fs
or
sub
cmpsb
or
inc
jne
push
ffreep
push
push
pop
sbb
das
ss
and
repz
fildl
stc
cld
daa
out
fdivr
push
aas
push
aam
dec
xchg
js
aam
mov
add
call
and
jecxz
add
int3
int3
fcoml
fcmovu
arpl
cwtl
stos
movsb
or
push
inc
sbb
in
cld
jb
sbb
xor
in
test
repz
xchg
or
dec
imul
add
imul
lods
int
pop
insl
mov
imul
or
xor
and
pushf
inc
pop
cwtl
popl
lcall
push
inc
add
inc
dec
fs
aas
imul
and
push
outsl
js
jb
test
pop
in
and
ret
and
fmuls
out
and
add
call
daa
out
fdivr
push
aas
push
jno
and
push
jge
mov
xchg
mov
cltd
inc
mov
je
mov
cld
mov
mov
cmpsb
jmp
das
das
jnp
mov
add
cltd
dec
sbb
jbe
icebp
xchg
lods
ljmp
xchg
fs
outsl
js
jb
test
popf
aam
and
push
test
in
data16
push
and
sub
aaa
fsubr
ss
cld
pop
jle
and
orl
add
cmpsl
popa
xor
mov
repz
arpl
pop
pop
adc
add
call
in
cltd
pop
loope
pusha
lea
enter
xchg
les
inc
push
testl
pop
into
mov
adc
iret
sub
popf
mov
dec
shrl
ret
dec
jg
in
inc
shll
cmpsb
push
lcall
idivb
push
inc
ja
adc
popl
lret
iret
push
push
sbb
push
pop
cld
mov
sti
cltd
adc
dec
jnp
push
mov
or
xchg
mov
sub
in
hlt
push
jle
add
call
jb
into
inc
in
lret
sub
sub
mov
std
mov
in
mov
pop
and
clc
xor
int
mov
mov
loopne
xchg
dec
out
ss
pop
iret
cmp
nop
out
mov
fsub
mov
pop
ficompl
scas
push
hlt
push
imul
rdtsc
divl
cmp
mov
add
insl
testl
arpl
xor
dec
ret
movsl
jle
sbb
ja
stos
jno
xrelease
insl
push
in
cltd
ret
cltd
push
in
add
call
xchg
insl
mov
and
add
ficomps
in
and
jp
ror
shl
aaa
movsb
dec
push
cmp
aaa
aad
pop
dec
rcrl
sub
add
mov
imul
clc
mov
lcall
cld
stos
test
mov
dec
das
dec
cltd
lock
aam
cmp
push
inc
ffree
cmp
adc
int3
mov
leave
adc
sbb
inc
jae
jmp
push
in
in
mov
pop
scas
in
inc
roll
add
call
lds
sbb
xchg
insl
rorl
jne
in
ljmp
pop
xchg
imul
pop
ds
and
popf
lret
cmpsl
testl
adc
mov
mov
and
iret
sub
dec
cmp
fwait
pushf
imul
cmp
rcrb
jns
dec
xor
cmp
cmpsl
jns
sbb
mov
fsts
mov
jne
add
cmc
test
and
mov
push
in
jne
scas
xor
cmp
clc
mov
ja
xchg
outsb
pop
imul
call
or
out
out
pop
rcll
fwait
xor
cmp
fimull
fsubp
pushf
cmp
xor
fbstp
push
sub
push
jae
dec
mov
mov
lar
inc
or
fcmovnbe
mov
or
cli
add
sub
xor
pop
repnz
push
xor
or
or
int
inc
inc
sub
bound
hlt
in
cmpsb
push
ds
loopne
sub
cli
into
test
dec
lret
cmp
cwtl
clc
test
inc
out
push
add
call
inc
jo
outsb
ficoms
pop
insb
xchg
ds
sub
or
push
sub
mov
add
xorl
in
adc
pop
addr16
xchg
sub
xor
mov
lahf
loope
push
xor
lcall
in
out
aas
dec
repnz
mov
or
jae
ljmp
lcall
in
les
mov
xchg
in
popf
mov
cli
lock
int
jo
hlt
fdiv
jne
mov
fcomi
push
daa
in
pop
xchg
jp
add
call
out
fdivs
cmp
jp
mov
mov
xchg
pop
out
mov
out
in
or
cltd
icebp
or
test
xchg
ret
mov
add
mov
fisubl
or
jae
mov
jge
mov
and
dec
dec
cmp
movsl
ret
test
jno
test
pop
push
lret
pop
mov
jmp
sti
inc
mov
in
lods
adc
outsl
mov
fistpl
int
sbb
fcompp
aam
iret
into
mov
outsl
test
cmp
cs
lods
lahf
dec
pop
jmp
call
mov
out
and
push
push
mov
jae
mov
ret
jmp
push
mov
aas
dec
push
out
jle
inc
shr
data16
or
push
stos
adc
add
mov
mov
in
repz
shlb
inc
lods
shll
enter
mov
call
imul
inc
sbb
lds
decb
aam
xor
enter
pop
sbb
sbb
inc
adc
sar
out
xor
ja
push
stc
add
call
mov
imul
dec
adc
jle
std
mov
push
and
out
jl
scas
sub
testb
and
or
ss
xchg
xchg
int
lods
and
in
jne
ss
jecxz
sti
leave
xorl
pop
sbb
out
aad
mov
cmp
and
add
mov
mov
out
test
cli
sub
in
andb
mov
xorb
dec
dec
in
mov
cmp
in
add
call
fdivr
aam
fldt
outsb
repz
and
or
add
fldl
pop
pop
enter
ficomps
in
and
jmp
js
or
or
push
insl
sbb
mov
inc
inc
adc
mov
inc
stos
add
fucomi
or
xor
out
xor
adc
test
fldcw
bnd
inc
leave
mov
push
lcall
xor
add
lcall
js
add
call
jecxz
xor
mov
mov
mov
jnp
scas
jns
jle
xor
bound
push
push
inc
push
fldl
out
mov
mov
add
jno
int3
inc
pop
mov
push
lods
inc
cmp
popa
sub
out
jle
add
xchg
frstor
sbb
sub
adc
mov
outsb
in
insb
shlb
movsb
and
imul
idivl
adc
aam
lret
lea
xchg
in
clc
fsubrl
add
call
dec
fadds
mov
mov
scas
sbb
pop
cmpsl
rcr
pushf
dec
jae
jmp
mov
sub
dec
aas
or
or
xor
xorb
jne
mov
push
test
movsl
lods
ds
xlat
ret
ja
jp
movsb
shll
outsb
enter
jp
shll
pop
clc
add
test
sub
fcmovnbe
or
inc
dec
mov
push
push
stos
cltd
lods
ja
cwtl
xlat
in
and
pop
out
xchg
add
in
lods
adc
add
call
in
emms
outsb
inc
or
lahf
add
push
fs
xor
aaa
push
sbb
mov
push
cmp
dec
or
and
subb
or
mov
mov
xchg
sub
xor
jle
addr16
lods
sti
stos
mov
loope
std
nop
push
dec
cld
ret
arpl
adcb
mov
push
pop
dec
rcrl
dec
pop
jecxz
push
ja
nop
sbb
movsl
addr16
jecxz
mov
and
sbbb
push
fs
outsl
mov
aam
mov
call
push
pop
add
outsb
test
sub
xor
add
jp
fst
call
mov
les
mov
adc
nop
insb
pop
push
stos
pop
ret
sub
mov
pop
push
jo
sub
inc
out
shrb
fldl
movsl
mov
inc
das
and
and
jge
jmp
pop
popf
cld
les
rep
aad
cli
mov
dec
pop
push
mov
jo
inc
data16
cmp
jnp
xor
pop
pusha
sub
fistpl
jg
jge
add
call
or
push
loopne
push
cmp
nop
sbb
pop
push
inc
lock
jle
sti
mov
add
sbb
add
add
pop
out
ret
pop
les
mov
and
mov
cs
shll
leave
pop
test
mov
lods
push
xchg
push
inc
jmp
cmp
roll
dec
adc
inc
mov
and
mov
mov
or
add
adc
push
cmp
es
add
call
imul
shlb
daa
fisubrl
repnz
mov
aas
sbb
dec
or
jo
xchg
sub
inc
and
cmp
adcl
decb
gs
mov
xchg
adc
mov
push
pop
xlat
mov
loop
dec
fidivrs
pop
inc
scas
ja
addb
es
notb
aad
and
fcoml
add
aaa
arpl
mov
in
cwtl
aam
test
cmp
in
dec
lret
push
inc
adc
call
test
das
ja
xchg
sbb
sub
je
dec
loop
outsb
imul
shll
or
cld
adc
lds
mov
icebp
sti
stos
loop
bound
push
pop
cmp
add
adc
sbb
sub
sbb
filds
fcmovbe
pop
repz
adc
add
gs
and
aad
add
movsb
addr16
adc
xchg
or
test
pop
mov
cld
push
adc
push
bound
stos
flds
dec
xchg
aad
add
mov
add
call
push
fsubl
stos
ss
push
push
jmp
aad
leave
stos
aaa
lock
jmp
orl
inc
xchg
mov
movsl
inc
push
push
cmp
sub
sub
or
push
pop
stos
add
push
mov
shll
mov
adc
popa
push
call
xchg
pop
or
addb
outsb
cmpb
sub
xor
inc
mov
mov
sar
inc
iret
outsl
cmp
inc
adc
sbb
dec
pop
mov
add
xchg
addl
call
pop
push
mov
lahf
jb
in
repnz
popf
mov
sbb
fisubl
mov
mov
loop
call
outsb
xchg
stc
outsl
lcall
and
pop
inc
sub
inc
pop
call
sbb
xor
mov
int3
push
orb
clc
xor
adc
lea
call
cmp
jno
pop
pop
inc
mov
mov
pop
inc
push
fs
mov
lods
lahf
jecxz
dec
and
sub
mov
stc
orb
add
call
xor
mov
mov
or
stos
int
clc
push
inc
push
clc
in
ljmp
insl
sbb
outsl
out
inc
mov
mov
pop
dec
repz
test
pop
test
pushf
int
or
xor
stos
flds
dec
xchg
aad
add
mov
push
fsubl
in
xor
xchg
aad
sbb
cmp
cwtl
sbb
scas
sbb
aaa
sbb
cltd
add
loope
inc
cmp
mov
or
dec
xor
sbb
stc
dec
je
add
call
and
stos
add
push
mov
mov
mov
dec
pop
adc
popa
push
call
xchg
pop
or
insb
lds
mov
adc
push
add
mov
pop
fnstsw
jno
enter
or
xchg
ljmp
pop
mov
or
mov
sub
stc
mov
lahf
jb
cwtl
icebp
inc
add
mov
xor
cld
pop
repz
cmpsb
fldt
outsb
das
in
xchg
xchg
cmpsb
inc
test
aas
add
call
nop
hlt
push
out
idivl
xchg
fdivr
dec
sbb
cmpsl
pop
pop
or
mov
mov
and
sub
mov
pop
fsubrl
test
inc
mov
mov
pop
inc
push
int3
xchg
xor
push
lods
lahf
jecxz
dec
and
sub
mov
stc
orb
pop
inc
dec
aas
sub
lds
mov
jl
push
cmp
sbb
and
les
outsl
out
inc
mov
subb
xchg
add
call
and
lret
daa
rclb
cmp
ja
stos
flds
dec
xchg
aad
add
mov
push
fsubl
out
outsl
cmp
hlt
fcmovb
push
pop
pop
cwtl
jge
jle
inc
sti
fs
xchg
inc
and
lret
cli
test
mov
or
popf
or
dec
push
mov
mov
mov
push
pop
stos
add
push
mov
mov
outsl
negl
adc
popa
push
call
xchg
pop
or
jecxz
cwtl
pusha
addr16
lock
cmp
add
call
mov
adc
push
mov
add
xor
loopne
popa
pop
in
lea
aad
in
insl
into
cltd
sahf
fnstsw
push
jae
mov
lahf
jb
adc
sahf
dec
push
lret
and
jns
push
mov
loop
call
outsb
or
hlt
shll
dec
repnz
mov
cmp
mov
add
push
push
fs
shr
repz
jnp
jge
mov
xor
daa
jp
outsb
scas
cmp
out
aaa
test
inc
mov
mov
pop
add
call
push
push
mov
sbbb
lods
lahf
jecxz
dec
and
sub
mov
stc
orb
notb
mov
imul
std
cwtl
test
jl
sbb
inc
push
clc
in
ljmp
int3
mov
sub
inc
mov
inc
and
pop
xchg
or
test
pop
test
mov
ja
stos
flds
dec
xchg
aad
add
mov
push
fsubl
and
xor
adc
xor
in
scas
add
call
jo
out
and
jno
jp
push
cwtl
rolb
fs
ds
into
pop
fnstenv
js
outsb
push
or
mov
into
pop
mov
lret
int3
int
ret
push
aaa
outsl
hlt
xchg
cmpsl
ss
jmp
imul
and
in
test
repz
in
inc
and
testb
mov
inc
push
add
mov
mov
repz
mov
cmp
inc
cmovs
cmp
and
into
inc
sbb
cmc
inc
add
call
nop
ret
fdivr
or
cmpb
aam
fsubs
sub
adc
and
add
ret
adc
mov
and
test
xor
inc
adcl
loopne
mov
mov
adc
jl
pop
and
and
jne
push
lods
fldcw
movsb
std
lods
pop
cwtl
mov
sti
sub
or
dec
push
mov
rclb
loop
mov
push
and
test
inc
in
and
mov
adc
add
call
test
mov
jbe
cmpsl
dec
stc
orb
out
inc
cmpsl
shlb
out
mov
lock
xchg
gs
sub
je
mov
stos
add
push
mov
outsl
pop
imulb
push
test
lock
mul
jo
in
and
mov
adc
shrl
mov
mov
dec
stc
orb
call
pop
jo
add
fidivrl
or
adc
or
cmp
loop
sbb
xor
add
xchg
cld
rclb
jne
jno
movsb
mov
nop
pusha
inc
daa
or
call
cmpsb
outsb
xchg
cwtl
mov
xchg
xor
aas
es
xorl
mov
mov
pop
movsb
pop
jns
popf
roll
dec
mov
xchg
cld
xchg
mov
cmp
xor
popa
test
mov
mov
insb
jne
js
and
sub
insb
jns
fs
mov
int
push
ja
stc
inc
xchg
rclb
hlt
sbb
ja
test
dec
in
jg
cmpsl
push
inc
popf
ret
stc
cmp
jle
lods
and
aas
es
leave
cmp
cltd
add
call
inc
js
fnstenv
rol
pop
add
cs
add
mov
stos
and
fmul
clc
jnp
loope
enter
xor
xlat
xor
imul
sub
or
cmpsb
mov
out
xlat
push
imul
lods
iret
rcrb
int3
push
xchg
stos
in
xor
pop
out
repnz
enter
jl
shl
fnstsw
iret
inc
and
loope
sbb
jne
xchg
fdivrl
stc
xchg
cmpb
cli
sbb
add
pop
lret
xlat
add
call
pusha
icebp
add
sub
sub
ds
dec
sbb
arpl
arpl
sub
enter
cli
iret
repnz
pop
mov
rclb
mov
js
jl
inc
sbb
lea
jmp
enter
push
jmp
pop
je
or
stos
jecxz
jle
popf
inc
dec
rorl
jno
mov
mov
cmp
pop
xlat
fdivrs
aam
test
xor
scas
jne
sti
scas
mov
xchg
jmp
out
subb
jp
inc
mov
call
popf
pop
xchg
cs
push
ret
inc
in
popf
sub
adc
push
push
push
adc
fdiv
rcll
sub
out
cld
rclb
jne
push
jne
mov
mov
mov
and
cmp
sbb
aas
es
push
leave
xchg
pop
jo
xchg
popa
and
inc
sbb
shrl
pop
inc
xor
push
inc
outsl
xor
hlt
mov
jg
cld
cli
mov
mov
sbb
push
push
in
out
jg
lahf
add
or
add
call
lods
in
pop
inc
add
and
scas
test
mov
pop
xchg
es
repnz
or
stc
adc
std
int
inc
dec
xchg
repnz
cmc
incl
scas
js
pop
dec
stos
xchg
push
pop
dec
sbb
in
loope
pusha
sub
popa
in
fsubs
mov
push
dec
or
out
fists
jno
mov
int3
push
stos
mov
dec
push
xchg
push
jmp
hlt
imul
inc
daa
xor
xchg
in
ror
icebp
add
call
xor
repz
shrl
mov
mov
rcrl
outsb
out
xchg
subl
push
movzbl
rolb
mov
ss
xlat
fdivrs
adc
jno
scas
jne
sti
scas
mov
mov
mov
iret
inc
mov
xchg
cs
push
ret
ja
sub
mov
pop
pop
jp
mov
aas
sbb
cmp
movsb
cmc
add
xchg
cld
rclb
jne
or
mov
add
call
jo
fnstsw
bound
xor
add
popa
inc
xchg
push
int3
bound
dec
mov
cmpsb
mov
lods
jmp
mov
lcall
push
push
fmuls
dec
mov
cltd
int3
mov
push
and
loope
xor
mov
test
mov
ficoms
pop
cmp
into
mov
adc
xchg
or
outsl
cs
or
lds
xchg
sarb
stc
fxch
mov
ficoms
call
cmp
add
aad
xor
test
fidivrs
add
imul
fbstp
mov
icebp
rcrl
mov
inc
cmp
xchg
push
je
pop
pop
jmp
into
xchg
dec
in
inc
mov
jle
lock
adc
sbb
jns
cmp
fst
arpl
xor
cmp
xchg
push
mov
std
pop
stos
ret
aaa
pop
and
fisubl
mov
call
aaa
pop
adc
push
xor
hlt
loopne
add
call
and
mov
cli
lds
cltd
jge
dec
xchg
bound
xor
add
jecxz
out
cs
bound
dec
mov
inc
mov
nopl
pop
xor
push
fwait
rcll
adc
loope
mov
sbb
pop
dec
jp
stos
loope
xor
mov
test
mov
ficoms
pop
cmp
into
mov
adc
xchg
or
outsl
cs
or
sarb
aaa
mov
jg
add
call
mov
xchg
push
add
jae
inc
sahf
mov
dec
sub
mov
dec
mov
shlb
lret
cwtl
sbb
inc
jbe
and
lcall
aas
push
jo
shlb
bound
es
out
mov
test
fmull
pushf
testl
adc
ljmp
add
daa
jp
xor
adc
js
aaa
arpl
and
push
xchg
clc
iret
push
repnz
adc
loopne
push
fs
xchg
dec
lcall
data16
add
call
and
movsb
cmp
aad
test
orb
insl
arpl
int3
outsb
xor
mov
mov
fcmovne
mov
xchg
adc
push
mov
mov
cmp
int3
mov
fiaddl
fistps
inc
nop
jo
das
fcmovne
arpl
and
int
push
pop
stos
add
push
mov
sbb
arpl
jg
cmp
int3
in
pop
sbb
ret
mov
dec
lea
in
cmp
xchg
inc
lahf
jo
enter
add
call
pushf
sahf
lds
outsb
mov
adc
pop
xchg
xor
xchg
xchg
and
sub
popa
mov
scas
nop
nop
fcmovb
xorl
mov
jno
sbb
inc
sub
mov
sahf
sbb
ds
push
pop
stos
add
push
mov
add
mov
test
lock
mul
jo
decb
mov
shrl
mov
mov
dec
stc
orb
mov
adc
add
fidivrl
or
xchg
mov
pop
mov
mov
xor
add
call
arpl
dec
out
cld
rclb
jne
and
jge
mov
out
sub
imul
sub
pop
insb
in
cld
add
test
push
inc
fstps
pop
hlt
mov
xlat
push
or
rolb
lods
xchg
frstor
inc
xchg
mov
pop
jmp
xchg
ja
in
int3
jbe
pop
stos
xchg
lods
and
fdivrl
shl
outsl
pop
outsb
mov
arpl
outsb
daa
gs
cmpsb
cmp
and
adc
aas
popa
adc
aas
es
xorl
mov
dec
stos
push
add
call
inc
xor
div
ss
xlat
push
mov
dec
xor
andb
adc
mov
mov
stos
es
xchg
lret
inc
mov
mov
dec
idivl
out
push
mov
js
cmp
jmp
outsb
pop
leave
loopne
outsl
sub
shlb
sub
mov
shlb
es
adc
cmp
push
mov
mov
loope
arpl
push
test
xchg
push
jg
push
icebp
xor
and
add
call
lahf
jne
pop
outsl
fldcw
movsb
std
out
push
sbb
lahf
jg
iret
inc
fs
cld
iret
leave
pop
rorb
cmp
push
mov
stc
mov
cmc
fldl
loopne
addb
mov
jo
ds
repz
arpl
jae
aad
and
test
test
inc
mov
jecxz
fdivrs
xor
jne
sub
pop
sub
sub
pop
dec
sahf
push
or
push
call
je
mov
jmp
aas
aas
mov
repz
dec
mov
pop
in
test
mov
inc
mov
scas
jne
loopne
xchg
dec
out
jae
jns
sub
negl
mov
push
sub
cwtl
jle
or
scas
ja
and
sub
outsl
add
aad
add
outsb
push
gs
mov
test
add
cmp
stos
push
negb
xlat
cli
testl
push
xchg
pop
je
or
stos
jecxz
jle
popf
inc
dec
add
call
dec
sbb
lods
or
out
scas
dec
cmpsl
cmp
outsb
daa
loop
sbb
movsl
enter
inc
and
icebp
cmc
pcmpeqd
dec
mov
imul
insb
xlat
outsb
enter
jp
fs
jecxz
mov
jg
aaa
idiv
das
out
mov
scas
out
inc
ret
adc
pusha
sub
push
pop
lods
pop
call
movsl
push
jp
int
dec
inc
pop
call
cwtl
sarb
adc
aaa
and
inc
inc
sbb
cmp
add
call
xchg
xchg
sub
mov
sub
arpl
subl
xorb
cmc
mov
ds
mov
cmpsb
mov
mov
pushf
nop
es
push
cmpsb
lahf
lock
jns
xchg
and
inc
imul
rclb
scas
ja
js
imul
lods
movsb
lods
adc
frstpm(287
fistl
loope
outsb
mov
ret
xchg
xchg
das
fs
subl
test
mov
imul
clc
mov
pop
push
sbb
in
add
call
sti
ret
cmp
fnsave
xchg
inc
xor
sub
div
call
fs
dec
fwait
addr16
aaa
mov
xor
aaa
test
inc
jbe
ror
cltd
jp
shrl
mov
and
cli
cli
test
sub
repnz
fcom
inc
push
xlat
inc
xchg
sub
ljmp
inc
pop
out
pop
jg
mov
test
push
cli
movl
scas
pop
lret
je
imull
loopne
pop
and
cli
les
add
call
and
sbb
aad
lds
mov
and
sub
insb
jns
ds
sub
or
xor
inc
scas
lret
fldenv
cli
sbb
out
data16
dec
std
jns
lea
dec
lahf
mov
fbld
push
mov
js
lret
fldenv
cli
sbb
mov
popa
lds
in
or
loopne
and
popf
and
stc
xor
aas
es
xorl
mov
call
cld
add
or
add
call
in
jge
jo
sbb
add
push
mov
in
in
add
xchg
pusha
in
dec
push
xchg
idiv
sahf
das
xor
call
cltd
loop
in
rorb
add
pop
xchg
aaa
test
inc
dec
push
rorl
adc
stos
lret
mov
scas
sbb
and
leave
mov
inc
in
add
xchg
pusha
in
or
pusha
fldcw
mov
leave
inc
push
aaa
push
sbb
mov
mov
mov
call
ret
mov
fisubl
push
xchg
fidivs
adc
in
ja
push
fldcw
movsb
std
lods
pop
cwtl
mov
sti
sub
inc
xchg
mov
pop
popa
push
mov
pop
mov
add
jnp
fdivs
sub
mov
jne
pushf
cmp
in
xlat
pop
rcll
scas
xchg
xor
cmc
inc
mov
ret
fsubrs
add
jbe
mov
mov
sub
adc
ret
cs
dec
jnp
push
pop
lods
or
add
call
test
jo
cwtl
fldcw
movsb
std
out
push
sbb
fnstcw
cmp
iret
leave
pop
rorb
sub
cli
push
adc
mov
insb
dec
int3
inc
xor
test
dec
addb
xchg
mov
dec
mov
sub
xor
xor
lcall
mov
push
mov
xor
add
xchg
push
subl
lret
repz
mov
cmp
inc
cmp
daa
pushf
jnp
adc
mov
jns
pop
add
call
mov
fcmovb
mov
int
into
sahf
pop
test
sahf
cmpl
xchg
and
push
insl
jne
js
mov
imul
sbb
and
test
xor
inc
adcl
loopne
mov
or
outsl
push
daa
push
push
or
inc
fldt
mov
pop
push
pop
stos
add
push
mov
sbb
arpl
cmpsb
test
cwtl
rcr
dec
fstl
ret
outsb
inc
shlb
lock
add
call
mov
xor
fmul
and
xchg
or
stos
mov
cmp
outsl
xor
xchg
addr16
sbb
jp
adc
into
xchg
cmp
fldt
xor
cmc
jbe
imul
mov
cld
mul
dec
jmp
std
imul
pop
addr16
mov
inc
add
fwait
lcall
mov
mov
repz
shll
pusha
pop
and
lahf
dec
mov
stos
in
push
xchg
sbb
mov
movb
call
pushf
aad
loopne
add
cwtl
xchg
aad
push
cmc
dec
pop
and
popl
jecxz
inc
xchg
aam
push
pop
or
push
scas
mov
inc
pop
mov
or
sbb
ds
lret
jb
loope
pop
push
je
ja
punpcklbw
cmp
cwtl
jl
lahf
mov
movsl
and
inc
aam
pop
push
pop
or
xlat
dec
fildll
out
sbb
out
inc
inc
dec
loopne
push
inc
pop
in
cmpsl
repnz
jg
negl
mov
adc
cmp
leave
mov
xor
add
call
dec
dec
xor
andb
in
cmpsl
repnz
jg
idiv
cmp
arpl
mov
shrl
out
inc
mov
dec
idivl
out
push
mov
js
cmp
jmp
lret
movsb
int
popf
data16
adc
xor
out
lahf
ja
cmp
jle
lods
and
aas
es
adc
cmp
push
mov
mov
adc
jge
mov
push
xchg
push
mov
sbb
aam
jne
mov
push
xchg
call
push
push
sbb
leave
inc
sbb
iret
leave
pop
rorb
cmp
push
mov
iret
les
sbb
fldl
loopne
addb
mov
pop
jne
js
outsl
sub
das
pop
xchg
xchg
iret
cmp
adc
mov
test
mov
and
inc
adcb
inc
icebp
cmp
mov
sbb
js
inc
adcl
loopne
mov
cs
sbb
fdivs
xchg
mov
mov
aaa
xchg
ja
add
loope
add
call
mov
sti
mov
pop
cmp
xor
xor
mov
pop
jmp
xchg
ja
push
sbb
and
aaa
stos
xchg
lods
and
fdivrl
shl
outsl
pop
outsb
mov
dec
mov
movsb
adc
mov
cmp
test
int3
mov
scas
or
es
pop
loopne
xchg
push
mov
js
clc
hlt
adc
sbb
pop
outsl
mov
out
adc
aam
mov
out
add
call
test
sarl
sbb
rclb
les
aas
add
lock
je
int3
sti
std
movsl
stos
std
cli
or
cmovns
sub
leave
jl
xchg
fimuls
push
mov
push
inc
mov
cmp
ss
mov
dec
data16
push
mov
add
inc
fsubp
inc
add
mov
lods
test
in
push
xchg
sarl
mov
mov
pop
in
int
js
and
xlat
rcrl
xchg
es
repnz
add
call
outsl
pop
outsb
mov
pop
es
dec
shr
popa
mov
lret
push
add
popa
adc
aas
es
xorl
mov
add
movsb
jne
xor
shl
mov
ucomiss
cmp
xchg
mov
cbtw
pop
mov
mov
sbb
stc
imul
scas
ftst
cmc
cmp
int3
lahf
ret
out
popa
add
je,pn
jbe
push
scas
mov
in
and
mov
mov
outsb
fnsave
call
vzeroupper
iret
xor
ret
bound
out
lods
ljmp
xchg
hlt
call
rcr
fsubs
push
sbb
sahf
call
aas
lahf
sbb
scas
and
cli
xchg
enter
es
mov
mov
xchg
and
dec
ret
pop
jp
mul
inc
shll
das
adc
sti
setae
and
or
or
into
cmpsl
mov
jns
adc
scas
ja
dec
mov
xchg
popa
push
sbb
pop
sub
call
mov
lods
pop
mov
mov
insb
movsl
dec
imul
push
adc
enter
lods
jns
pop
das
xor
aas
mov
cmp
test
pop
pop
or
nop
adc
adc
or
mov
mov
pushf
xchg
cld
cmp
and
cmp
int
jmp
pushf
out
loop
lret
mov
popf
push
pop
rorl
pop
or
pop
sub
push
imul
push
jp
mov
push
loope
push
mov
push
in
negb
call
mov
add
adc
je
lahf
jge
sbb
cmp
push
lods
vpsubsw
rcrb
outsl
or
rolb
add
mov
lock
push
mov
cmp
pop
in
inc
mov
or
fwait
xchg
xchg
bound
sub
or
dec
adc
cwtl
sub
daa
xchg
and
mov
aas
in
cmp
clc
inc
xlat
mov
add
pop
dec
ss
add
call
mov
xchg
mov
pop
pop
dec
xchg
add
fldcw
xor
les
push
aam
movsb
aaa
mov
outsb
ror
roll
gs
fsubs
repnz
out
pop
ret
roll
out
jecxz
scas
into
adc
mov
inc
insl
or
and
dec
dec
push
push
insl
aad
lods
xchg
sbb
push
pop
mov
or
mov
mov
clc
scas
pop
mov
scas
jne
shrl
sbb
jecxz
int
fiadds
pop
dec
outsb
lret
int
lods
mov
call
fwait
repz
int3
clc
stc
out
iret
jo
aas
in
jb
jnp
sbb
nop
pop
aaa
pop
pop
mov
push
push
lods
in
or
jg
sarl
sub
sbb
pop
std
cmpsl
cmp
fld
test
out
sahf
idiv
shlb
adc
int3
sbb
das
mov
lock
mov
mov
scas
xchg
add
push
shlb
icebp
loope
adc
xorl
pushf
push
add
and
loop
imul
or
add
call
cmc
fmul
and
jge
fs
cwtl
stos
call
or
test
sbb
add
xchg
xchg
cmpsl
add
inc
scas
jmp
loope
cmp
lcall
mov
dec
stc
orb
cmp
je
lahf
je
adc
mov
lret
mov
cltd
and
lock
repz
pop
lret
inc
cmpsb
mov
xor
mov
dec
dec
inc
out
or
decb
mov
rcrb
mov
sbb
sbb
push
ds
loopne
xchg
add
call
js
lahf
push
fdivrp
cli
popa
loop
mov
xchg
mov
mov
bound
jg
popf
data16
inc
inc
mov
pop
jnp
lds
xchg
cs
lret
pop
mov
shrl
xchg
bound
xor
add
call
int3
xor
dec
mov
cmp
xchg
mov
inc
loop
outsl
fstl
push
fwait
rcll
cwtl
mov
pop
daa
or
movsl
mov
fbstp
arpl
outsl
dec
lods
add
push
ds
adc
call
add
push
jb
xor
sbb
stos
icebp
lock
lret
cld
int
fwait
mov
pop
jo
aad
or
add
dec
popf
pop
sbb
sub
jbe
push
lret
leave
lcall
sub
mov
push
pop
mov
jno
bndldx
sub
bound
shll
inc
repnz
addr16
jge
loopne
xor
repz
xor
iret
and
push
in
push
in
mov
fs
outsb
jae
rcrb
push
cs
clc
mov
sub
call
push
mov
mov
pop
xor
arpl
cs
push
daa
pop
lds
jno
pop
jg
lret
jle
mov
cmp
jo
shlb
sub
push
mov
mov
mov
ret
mov
bound
movsb
incb
jbe
mulb
ret
in
dec
insl
and
xchg
imul
jp
bound
jnp
aaa
jge
and
pushl
cmpsl
inc
rclb
es
add
xchg
cld
rclb
jne
xor
testl
call
mov
ja
popa
or
repz
int3
clc
stc
out
iret
jo
aas
in
jb
fs
movsl
enter
sbb
std
popf
nop
jmp
fdivrl
xchg
std
hlt
test
jl
cmp
jns
xchg
and
jnp
test
sub
shrl
movsl
rcll
adc
int3
sbb
das
mov
lock
mov
mov
scas
xchg
add
push
shlb
icebp
loope
adc
pop
nop
js
into
pop
icebp
mov
add
call
cmpsb
push
jmp
or
in
stos
mov
jbe
or
mov
and
pusha
mov
pop
popf
push
mov
cmp
cltd
dec
push
push
cs
sahf
inc
xchg
cs
mov
cmp
xchg
mov
cbtw
pop
movsb
arpl
addr16
adc
xor
add
sbbb
clc
sbb
sub
xor
adc
inc
push
dec
mov
pop
lock
sti
fisttps
outsl
outsb
fnsave
ja
xor
ret
add
call
sbb
lods
ljmp
xchg
hlt
call
rcr
fsubs
mov
push
rolb
lahf
sub
addr16
fimuls
imul
dec
jecxz
xlat
imul
dec
incl
shll
xor
inc
fldl
test
fdivl
inc
into
scas
xor
mov
xor
aas
es
adc
jns
enter
push
inc
sbb
shrl
pop
inc
xor
push
inc
outsl
xor
hlt
mov
inc
das
lods
mov
add
cld
repz
add
call
in
pop
cltd
out
jg
add
pop
pop
int
inc
jl
xor
push
ficoms
jne
lcall
es
repnz
inc
pop
pop
mov
dec
xor
adc
std
int
inc
dec
xchg
repnz
cmc
incl
repnz
pop
hlt
sbb
rcr
sub
xor
lcall
aam
cmc
leave
and
aas
pop
loope
adc
mov
mov
or
fldcw
movsb
std
lods
pop
cwtl
mov
add
call
sub
dec
jle
enter
mov
pop
push
repz
push
les
inc
pusha
mov
repz
xor
fadds
push
testb
out
imul
mov
cmc
inc
mov
ret
fadds
mov
pop
jbe
mov
mov
sub
adc
fwait
test
cld
movsl
pop
lcall
add
lahf
pop
fstps
mov
in
push
xchg
sahf
jbe
mov
test
into
cld
iret
leave
pop
rorb
sub
call
xchg
mov
push
adc
mov
imul
fldl
loopne
addb
mov
icebp
mov
test
or
mov
lds
lahf
out
movsl
dec
jae
mov
pop
daa
xor
dec
add
jmp
xchg
in
test
repz
and
xlat
movsb
shlb
mov
out
sub
jle
subb
jb
xchg
dec
pop
unpckhps
xchg
xchg
inc
ja
adc
pop
clc
sbb
add
cmp
mov
add
call
sub
jo
push
and
xlat
sbb
and
test
xor
inc
adcl
loopne
mov
ds
pop
mov
in
sbb
insl
ja
mov
pop
push
pop
stos
add
push
mov
sbb
arpl
enter
stos
test
cmpsl
mov
xorb
pusha
xor
hlt
cmp
test
rorl
lret
pop
out
inc
lock
add
hlt
push
jle
jb
into
lret
cwtl
shl
rcrb
fcmovne
mov
movsl
daa
imul
call
ja
add
loope
mov
sbb
sub
pop
shl
sbb
pop
inc
idivl
adc
aam
push
les
sbb
push
out
fdivl
cmp
cmp
adc
jb
in
cmp
ret
pop
cld
loopne
fwait
dec
or
fldcw
movsb
std
std
pop
cs
sarl
pop
sbb
sbb
push
lcall
jns
jmp
sbb
mov
cwtl
mov
sti
sub
cld
cmc
les
jo
in
dec
add
call
int
fldenv
push
pop
rcrb
xlat
pop
pop
inc
push
jle
popf
inc
dec
rorl
sbb
and
insl
fucom
pop
xlat
fdivrs
cmp
movsb
xor
push
sub
popf
mov
dec
clc
adc
xchg
push
std
sub
roll
jmp
jo
mov
es
mov
test
xor
enter
repnz
jns
add
je
cmp
pop
stos
pop
iret
sub
popf
mov
dec
clc
add
call
aaa
xchg
push
std
sub
cmp
dec
xchg
sarb
daa
mov
lret
push
jg
in
sarl
push
nop
mov
dec
cmp
loope
inc
loopne
mov
ror
lods
cmpsb
or
cs
mov
cmp
xchg
mov
cbtw
pop
in
or
cltd
rcll
adc
inc
pusha
nop
inc
xlat
sub
adc
jp
and
xor
adc
mov
or
cmp
mov
mov
call
outsl
outsb
fnsave
ja
xor
ret
bound
out
lods
ljmp
xchg
hlt
call
rcr
fsubs
in
lret
imul
inc
adc
clc
xlat
fmuls
and
popa
pop
pop
scas
sbb
js
fsubr
lea
ja
ret
lahf
xchg
or
adc
mov
lea
rcrb
or
xchg
cmc
adc
pop
push
adc
cld
call
mov
sahf
lret
push
pop
icebp
test
adc
xchg
adc
push
mov
call
repz
imul
jle
cmp
shll
add
cwtl
pop
out
outsl
lret
adc
push
jg
mov
negl
loop
pusha
dec
outsl
lods
iret
lahf
jo
loop
pop
xchg
leave
inc
fcompl
xchg
pushl
les
xchg
add
mov
sbb
into
dec
inc
push
ja
jns
pushf
nop
add
ret
test
adc
push
lahf
popa
pop
jnp
cmp
and
stc
movsl
std
sub
stos
sbb
mov
sub
repnz
push
push
mov
add
call
push
addr16
dec
shlb
mov
nop
outsl
into
add
dec
jle
adc
mov
cmp
xchg
mov
cbtw
pop
sub
dec
dec
cmp
sbb
stc
push
dec
popa
and
imul
xchg
add
push
or
lahf
ret
out
popa
push
stos
mov
sahf
inc
jp
adc
mov
fidivrs
mov
mov
outsb
fnsave
ja
xor
ret
bound
out
lods
ljmp
xchg
hlt
call
rcr
fsubs
add
call
outsl
sti
mov
xchg
mov
pop
lahf
push
fsubl
xchg
in
jne
daa
jb
lea
xchg
dec
cld
cs
data16
mov
push
mov
andl
dec
jge
into
mov
jno
ret
dec
inc
in
lret
mov
sbb
push
xchg
xchg
cmp
loop
push
inc
mov
aad
push
fsubl
or
icebp
sbb
or
pop
jno
xchg
mov
xor
fldl
add
call
sbb
cltd
int3
and
jb
aam
mov
movsl
std
sub
add
sti
stc
mov
fldl
int
xor
pusha
jae
xor
lahf
mov
ds
loopne
sub
cli
into
test
dec
lret
cmp
or
push
fs
dec
mov
ficoms
pop
insb
xchg
adc
les
xchg
andl
sbb
sub
loope
mov
push
aam
xchg
lret
cmp
mov
jbe
adc
mov
xchg
mov
add
call
mov
stos
adc
sti
fisttps
addl
mov
clc
ja
xor
ret
bound
out
lods
ljmp
or
adc
cmpsb
daa
rcrb
hlt
call
mov
mov
in
rcll
sub
aad
add
dec
adc
inc
arpl
aam
aam
fadd
movsb
stc
adc
push
ds
loopne
sub
cli
into
test
dec
lret
cmp
mov
fistpll
frstor
jns
xchg
mov
int
insb
add
call
ds
repnz
jbe
xor
mov
pop
out
scas
xchg
cs
ljmp
adc
jl
cmp
dec
mov
pop
jecxz
fmuls
fcompl
je
or
stos
jecxz
cmp
cmpsl
lds
xor
scas
push
jge
or
cld
mov
std
xor
jo
movsb
jae
inc
mov
jo
lahf
inc
mov
sub
sub
iret
cld
jle
ja
jae
je
js
into
adc
int
cs
jp
pop
sbb
pop
addl
call
pop
cmp
lahf
fisttpl
lds
das
cltd
adc
fsub
ja
dec
inc
mov
dec
or
lret
inc
imul
shll
jae
jne
rolb
cmp
scas
pop
stos
sbb
jb
stc
jb
adc
mov
cmp
lahf
jno
loope
jns
cmc
loopne
add
int
push
loop
xor
and
fstl
int3
xchg
pop
xchg
add
test
inc
rcll
mov
fsubs
xchg
js
sub
or
cltd
rol
ljmp
call
adc
addb
orl
lods
xor
adc
lock
scas
or
mov
pusha
fisttpl
fsubrs
sub
scas
lds
dec
aam
mov
data16
imul
inc
pop
emms
push
aam
imul
dec
sub
shrb
arpl
fnstcw
mov
psrlq
pop
xchg
jp
or
sub
push
arpl
cmp
sahf
div
jbe
and
outsb
or
jnp
cld
inc
jmp
fwait
mov
call
inc
cmpsb
push
cmpsl
cmp
test
dec
test
scas
jl
inc
pop
sbb
push
adc
mov
and
sub
pop
cmp
js
loopne
and
jbe
pushl
les
xchg
add
mov
sbb
into
dec
inc
inc
sti
dec
inc
pop
clc
scas
add
ret
in
push
mov
adc
cmp
and
stc
movsl
std
sub
lret
mov
or
loop
xorl
lcall
add
call
dec
addr16
dec
shlb
mov
adc
sub
push
mov
cmpsb
xchg
repnz
pop
cmpsb
aas
ret
stos
fucomip
jbe
std
mov
mov
neg
icebp
out
jmp
pop
pop
movsb
mov
jne
cs
or
inc
les
jge
addr16
fwait
rcll
mov
cmpsb
xchg
dec
popa
sbb
push
adcl
lds
ret
sub
enter
arpl
rcll
jo
add
call
aad
or
add
dec
fdivr
fldcw
mov
ja
out
push
lret
pop
jg
iret
and
mov
mov
push
out
pop
xor
push
inc
jl
mov
add
jb
orl
push
cmp
cmc
stos
jge
inc
and
xchg
sbb
aaa
pop
adc
outsl
xchg
outsl
xor
cli
lcall
inc
insb
fadds
nop
icebp
mov
sti
fwait
sub
and
sub
sub
pop
mov
arpl
pop
add
add
call
push
in
jo
arpl
mov
std
sub
imul
mov
ljmp
inc
or
mov
mov
sar
mov
std
add
dec
xchg
stc
rcl
imul
leave
sub
cmc
pop
jo
or
pop
push
cmp
jle
cmp
push
fdivrp
cli
popa
loop
mov
adc
jnp
imul
out
jg
dec
and
inc
cwtl
pop
jnp
lds
xchg
jno
insl
inc
enter
add
call
gs
std
je
push
test
mov
gs
call
push
imul
aam
aaa
sub
in
jecxz
repz
xor
sub
test
adc
pop
dec
rcrl
dec
pop
jecxz
push
ja
test
pop
testb
stc
ds
movl
test
adc
std
sub
jb
sub
mov
or
stos
jg,pt
shr
sub
push
sbb
jle
lea
shlb
call
cmp
outsb
orl
outsl
insl
nop
cs
loope
xor
in
or
movsb
imul
int
fs
sbb
add
xchg
fdivrl
data16
jo
push
mov
and
test
inc
pusha
or
xchg
pop
loopne
mov
mov
pop
pushl
xchg
lds
mov
aad
or
leave
push
jo
dec
mov
jp
dec
inc
and
cld
push
dec
push
mov
sarb
les
lcall
jle
mov
add
call
shrl
inc
ret
adc
pop
rolb
pop
ljmp
out
sbb
mov
jecxz
roll
cmp
in
ror
aad
sbb
ret
push
jns
pop
imul
fcmovbe
mov
loopne
jnp
xor
push
mov
or
sub
or
in
hlt
push
jle
jb
into
adc
sbb
push
adc
das
mov
repz
or
jp
fisubs
pop
je
scas
pop
mov
in
mov
mov
jne
loopne
xchg
dec
out
adc
add
call
loopne
xlat
cwtl
push
or
and
jbe
mov
test
mov
imul
lods
mov
and
mov
inc
scas
fnsave
ljmp
mov
test
cmpsl
mov
aad
rcll
inc
xor
cmp
jmp
jge
lods
insl
inc
popa
mov
push
xor
mov
xor
mov
lcall
adc
in
sbb
cmpsb
dec
inc
andb
cmp
xchg
and
jbe
xchg
sbb
xchg
jl
push
jecxz
lods
mov
mov
call
or
out
xchg
and
inc
lock
out
mov
or
stc
mov
inc
inc
jmp
cmc
push
mov
xor
mov
inc
into
mov
mov
cmp
aam
add
mov
xlat
add
or
fcom
adc
add
out
or
cmp
push
sub
dec
or
mov
test
adc
xchg
call
subl
mov
insb
mov
add
or
pop
jne
push
imull
call
sub
int
and
jo
sarl
sub
ss
mov
push
pop
lds
cmp
and
rcrb
add
mov
add
pop
getsec
shr
or
xchg
sub
insb
jns
popa
cmp
out
rclb
or
push
ja
stc
inc
jl
inc
sarl
inc
icebp
jge
or
jle
inc
sub
adcb
lret
pop
fisubl
fwait
jl
sub
pop
loopne
sbb
out
lret
int
hlt
sub
add
call
xor
jbe
cmpsl
dec
stc
orb
cmpsb
dec
push
pop
add
fidivrl
or
mov
inc
mov
or
iret
xchg
xchg
cld
rclb
jne
cs
xor
ret
cmc
mov
xchg
cld
fcmovu
add
call
mov
push
in
or
push
mov
repz
jno
les
mov
jne
adc
scas
adcl
or
xor
xlat
hlt
push
cmp
jecxz
testl
and
inc
inc
xchg
add
call
shr
js
push
lods
mov
mov
mov
xchg
sbb
inc
test
push
ljmp
imulb
lret
in
nop
lods
fisubrs
aas
adc
mov
dec
xor
test
jbe
cmpsl
dec
stc
orb
lods
jmp
push
xchg
fsubrl
xchg
rcll
add
mov
mov
pusha
insl
stc
xor
lea
repz
roll
inc
pop
movsl
or
lods
loop
leave
sahf
add
call
jl
loopne
lahf
into
clc
iret
pop
mov
mov
sub
rolb
inc
jae
xchg
cltd
insb
and
or
outsb
jb
loopne
push
inc
add
xchg
lret
cmp
mov
mov
push
jmp
pop
stos
xor
sub
xor
xchg
cmc
dec
jne
test
cwtl
sub
js
outsl
stos
adc
addr16
loopne
push
gs
xor
and
jns
sahf
mov
clc
push
dec
lods
inc
in
xor
mov
int
mov
call
test
jno
mov
stos
fs
adc
std
bound
or
les
adc
fstpt
dec
xchg
mov
gs
mov
out
pop
pushl
mov
mov
test
xchg
cmp
pop
push
inc
sub
shll
notl
mov
sub
fs
in
dec
paddd
push
adc
dec
xor
fcomps
cld
push
js
add
or
repnz
call
or
mov
aad
jae
ss
push
out
dec
mov
es
out
pop
xchg
sbb
xchg
mov
and
inc
ficoml
pop
lods
xchg
xor
not
push
push
jnp
pop
jbe
lods
lret
test
movsl
mov
push
push
pop
popf
or
sub
jno
add
jp
iret
jbe
and
pop
ret
mov
stc
push
mov
mov
js
les
out
loop
daa
mov
pushf
mov
pop
mov
insb
lods
inc
fsubrs
add
add
call
fs
xchg
add
and
loop
xor
mov
js
xchg
cmpsl
sahf
ja
shll
movlps
sbb
mov
rcll
xchg
incb
and
xchg
jl
sub
xor
xor
mov
js
jp
lds
call
hlt
lds
imul
push
shrb
pop
pop
out
xchg
mov
xchg
lods
sub
imul
shll
je
es
jb
push
xor
mov
movsb
mov
orb
mov
add
call
jmp
lret
int
dec
mov
cmp
jmp
lahf
and
ret
outsb
xor
js
rolb
or
jecxz
cmp
out
mov
xchg
cmp
ror
push
pop
xchg
jbe
xlat
inc
sbb
sbb
jne
inc
mov
jo
jns
xchg
je
pushf
ret
dec
stc
cmc
push
pop
repz
lret
mov
ja
xor
sbb
loope
insl
jg
data16
fstpl
xchg
pusha
out
repz
jbe
scas
jbe
aam
dec
test
push
xor
cmp
xorl
add
call
jae
mov
cmc
gs
inc
in
pusha
xchg
push
cmp
test
cmp
mov
push
and
movb
or
lock
divl
js
arpl
hlt
dec
nop
adc
hlt
pop
lret
add
add
pop
dec
ss
movsl
hlt
inc
mov
loop
outsb
in
mov
inc
sti
lods
mov
xor
push
mov
or
loope
mov
sub
lea
hlt
push
jle
jb
into
mov
xor
mov
add
call
repz
and
orb
ljmp
scas
aaa
loope
stos
fists
dec
jne
loopne
xchg
dec
out
lea
xchg
adcl
xlat
pop
stos
push
sbb
testb
cltd
mull
and
push
sbb
cli
hlt
out
dec
lret
and
or
dec
and
push
sti
psadbw
into
stos
je
xor
cmp
jmp
jge
lods
insl
inc
popa
mov
pop
add
shll
in
inc
jl,pn
shrb
add
call
xchg
cmc
mov
sbb
adc
inc
mov
dec
fxam
push
and
iret
xor
mov
js
mov
fldcw
cmpsb
xchg
cmpsl
sbb
pop
outsl
mov
mov
or
insl
test
lret
xlat
push
xlat
or
and
in
pusha
mov
repz
out
icebp
in
loopne
and
ss
cmp
xchg
adcl
hlt
fsubrs
sbb
lods
or
test
mov
sbb
cmp
push
push
inc
stos
adc
mov
fsubrl
or
call
and
cmc
insl
mov
shll
test
sub
leave
pop
repnz
in
outsb
imul
ss
add
loope
mov
push
movsl
pushf
mov
sub
scas
cmp
push
or
or
loopne
fisttpl
leave
pop
or
xlat
dec
dec
pop
dec
jae
sahf
data16
inc
inc
dec
loopne
push
inc
lret
cmpb
pusha
jge
cmp
jnp
jp
shll
in
inc
jl,pn
shrb
xchg
cmc
mov
xor
lret
mov
add
call
adc
call
les
adc
lds
add
mov
icebp
pop
jp
rorl
inc
and
in
cmp
xchg
insl
jp
mov
shll
mov
int3
jne
fldt
cmpsb
jg
sub
pop
adcl
push
std
mov
inc
in
idivl
mov
scas
lods
sub
js
leave
pop
or
xlat
dec
nop
mov
popa
add
loopne
inc
jp
mov
ror
mov
jb
xor
repz
add
call
sarl
xor
ja
and
dec
mov
lock
sbb
int3
in
loop
call
shll
cmpsb
mov
data16
int3
ss
std
sub
push
xlat
xor
imul
jle
xchg
jns,pn
push
mov
into
movsl
xchg
clc
in
ljmp
adc
test
les
stos
ficoml
and
iret
sub
and
shll
out
and
add
mov
or
cmpsl
ficoms
add
call
aas
test
addl
or
les
adc
pop
int
mov
lods
push
adc
sbb
pushf
xor
repz
or
cs
push
and
fdivs
push
nop
mov
add
cwtl
pop
out
outsl
fs
inc
and
inc
push
fs
outsl
mov
xor
das
push
shll
inc
sarl
dec
push
xchg
ffreep
inc
inc
test
push
adc
gs
pop
add
cli
cmp
mov
xlat
mov
add
call
cltd
ja
call
scas
mov
xor
int
lcall
adc
les
lret
and
mov
xor
and
push
mov
mov
call
lret
xor
je
stc
xchg
mov
or
test
xor
mov
dec
adcl
rcl
int3
mov
cmp
inc
std
mov
jne
insb
mov
jge
pop
ficompl
xor
sahf
shlb
cli
add
dec
cmp
or
call
outsl
adc
filds
add
mov
testl
faddl
insb
mov
popf
aaa
lahf
cmp
popf
rcl
sbbl
dec
cs
push
cmp
sbb
lock
cmc
cmpsb
ljmp
sbb
jmp
ds
jmp
inc
jmp
adc
outsl
mov
jo
ret
iret
mov
add
sub
jne
dec
decb
sub
int
cld
dec
sub
mov
push
ja
add
call
sbb
xchg
and
sahf
lcall
rclb
movsb
mov
mov
fs
mov
mov
sub
les
sub
adc
orl
dec
or
mov
js
jg
pop
sbbl
pop
sarb
inc
lds
stc
jno
mov
jecxz
or
push
in
cmp
fs
imul
fistpl
fcomps
jnp
mov
and
in
and
add
call
push
cmp
das
fimull
fsts
bound
add
jo
dec
cli
add
cmpsb
pop
dec
jg
repz
aad
fisttpll
push
mov
inc
add
cmp
stos
lea
mov
xchg
daa
lret
shrb
stos
repnz
cmp
rolb
adc
nop
xchg
sahf
int3
mov
sbb
push
sub
leave
pushf
jmp
int
scas
and
sbb
add
pop
iret
jne
mov
mov
mov
pop
fimull
data16
std
sub
add
call
and
notb
andl
jb
loope
in
dec
push
jle
lods
sbb
not
inc
xor
nop
jne
or
mov
pop
mov
push
sbb
mov
jo
je
dec
or
jbe
std
mov
mov
notb
imul
cli
xor
cmp
movsl
xchg
out
in
sbb
add
push
out
and
stos
cmp
out
call
cmp
push
pop
lcall
add
call
mov
les
add
ss
or
cmpsl
mov
pop
nop
adc
mov
ss
cltd
cmp
dec
fldl
call
in
les
insb
arpl
fimuls
aam
mov
cld
in
andb
mov
mov
out
fwait
adc
daa
xchg
js
test
dec
lret
cmp
cmc
xor
push
enterw
fldl
push
int
insb
xchg
adcl
dec
push
ja
pop
dec
cmp
xchg
add
call
jmp
pop
sbb
mov
xor
cmc
cmp
popf
mov
mov
mov
mov
ds
ss
adc
hlt
outsl
sub
jb
lcall
ret
fbld
pop
adcl
or
pushf
sahf
into
jbe
clc
movsl
adc
mov
orb
sbb
pop
ja
loopne
scas
mov
cli
or
adc
inc
lea
imul
cli
sahf
push
daa
mov
scas
lcall
call
clc
and
mov
push
les
subb
outsl
call
sbb
fistpl
repz
xchg
cmp
aad
jg
xlat
negb
mov
push
mov
repnz
push
pop
cmp
roll
dec
adc
inc
push
inc
enter
imul
mov
enter
in
jnp
insl
in
int3
in
divl
int3
shll
leave
pop
test
in
push
inc
pop
sbb
push
adc
mov
add
call
jecxz
mov
daa
sbb
dec
jmp
insb
pop
in
xor
jle
adcb
lcall
adc
sbb
adc
psrad
mov
fxch
sub
mov
loop
cmp
call
jle
ljmp
shr
test
mov
add
pop
push
test
rcrb
repnz
or
xchg
mov
fisubrl
imul
stc
push
mov
or
call
push
lret
mov
cmpsb
lahf
mov
inc
icebp
ja
lret
jns
xor
inc
fsubrl
test
adc
add
sbb
cli
icebp
xchg
mov
dec
in
test
repz
insb
jo
jbe
lcall
popa
leave
shr
dec
insl
ret
and
arpl
xor
mov
loope
ret
and
jl
fwait
inc
xlat
std
ja
mov
inc
sbbl
push
or
movsl
test
rorb
add
sub
and
and
adc
dec
out
sahf
xchg
xchg
add
call
add
inc
mov
dec
lahf
sahf
sbb
int
dec
mov
aas
aam
imul
or
jg,pt
sub
cwtl
mov
dec
testb
and
and
adc
dec
out
cli
jle
loop
sbb
aam
shlb
cmp
mov
dec
loope
push
in
and
mov
adc
data16
cmp
or
pop
shrb
fwait
adc
out
orb
jp
push
out
sbb
sub
pop
mov
into
mov
mov
sbb
mov
mov
call
rclb
and
adc
cmp
pop
sarl
test
and
sbb
mov
cmp
xorl
mov
movsb
or
lahf
inc
jno
sbbl
or
cmc
fwait
ret
inc
mov
or
adc
push
mov
cmp
push
ja
mov
jp
in
test
repz
dec
test
test
fisubrl
lods
sbb
int
in
jnp
push
adc
add
call
push
mov
stos
scas
fsts
jecxz
mov
or
adc
sub
jns
sub
rolb
dec
testb
stos
cmpsl
ja
sbb
into
inc
dec
test
xor
mov
js
add
and
dec
add
add
cmp
icebp
pop
add
push
adc
mov
and
lret
inc
leave
lods
mov
push
stc
setge
push
je
fidivs
xor
mov
out
jg
mov
call
jbe
inc
add
pop
or
cmp
mov
pusha
inc
out
loopne
sub
xchg
dec
mov
sbb
xchg
sub
insb
jns
mov
xchg
or
push
ja
stc
inc
fcompl
nop
jbe
sbb
prefetchw
fwait
jo
stc
outsl
inc
stos
in
xrelease
insl
int
jle
arpl
mov
dec
jl
cli
jmp
pusha
inc
ret
pop
push
popa
mov
add
jno
mov
ffree
in
lock
sub
imul
mov
test
call
jecxz
jmp
leave
adc
sub
push
mov
lea
fcomps
xchg
pop
adc
rclb
xor
or
pop
aad
sub
cld
popf
es
or
nop
ficoml
in
test
repz
adc
mov
ljmp
popa
ret
aad
in
xor
int
in
jnp
push
adc
mov
mov
fsts
jecxz
mov
or
adc
loop
sahf
inc
iret
jp
lret
loopne,pn
jmp
mov
ljmp
add
call
ja
sbb
pusha
push
imul
xor
mov
js
add
and
lret
xchg
leave
adc
mov
jno
aas
push
adc
mov
dec
inc
jecxz
dec
out
popl
cmp
cmc
stos
mov
push
int
out
adcl
or
repz
jo
pop
je
jecxz
scas
pop
jns
divb
cmpsb
sub
cmp
push
cmp
mov
jl
sub
push
and
sub
insb
jns
add
and
add
call
int
push
ja
stc
inc
fcompl
nop
jbe
sbb
inc
lods
cmp
jne
fnstenv
stc
outsl
inc
stos
in
xrelease
insl
int
jle
arpl
mov
mov
aas
jl
inc
ret
pop
push
popa
mov
add
pop
int
xor
test
mov
mov
jne
into
xchg
push
mov
js
pop
repnz
icebp
es
je
out
push
mov
mov
pushf
adc
sub
fwait
ret
ret
xchg
xchg
call
inc
incl
add
call
cltd
faddp
scas
inc
adc
mov
xchg
sub
testl
pop
dec
testb
stos
cmpsl
ja
sbb
mov
rcl
xor
mov
js
mov
mov
inc
adc
repnz
mov
js
push
adc
mov
xor
rcl
sub
cmpsl
seto
dec
negb
stc
ja
cmpsb
push
sbb
add
test
ja
stos
mov
lods
cli
data16
data16
cmp
loopne
jno
add
call
adc
arpl
lcall
fsubrs
in
sub
loope
xor
push
insb
je
js
and
or
cmpsl
scas
cmp
pusha
pop
xchg
lea
push
rol
push
lods
dec
dec
ja
decb
iret
mov
jmp
aaa
mov
inc
push
sbb
lea
pop
mov
push
push
inc
popf
lret
cld
aaa
fwait
les
xor
fnstcw
adc
and
mov
cmp
repz
rclb
xor
or
pop
aad
sub
adc
add
call
fstps
or
sub
and
cmp
inc
dec
dec
inc
adc
popf
lea
mov
and
xchg
rcrb
mov
lods
decl
push
cmp
mov
cmpsb
in
sbb
mov
or
adc
dec
fcmovbe
andb
mov
push
and
cmpl
int
sub
cwtl
mov
dec
testb
and
and
adc
dec
out
andl
sbb
ljmp
loopne
lods
mov
add
call
sub
adc
pop
fs
inc
mov
xchg
outsl
dec
fcmovbe
andb
mov
aas
aam
imul
in
test
pop
repnz
rcll
je
sbb
pop
or
push
aad
xchg
cmp
pushf
insb
into
mov
lds
or
mov
dec
insb
mov
mov
dec
fcmovbe
andb
mov
push
and
cmpl
mov
ss
push
out
push
xorb
or
lods
xor
mov
call
out
sbb
mov
mov
ds
notl
aam
mov
popa
jo
cld
aas
and
dec
aas
add
sub
daa
xchg
pop
jecxz
mov
adc
push
lret
shlb
xor
out
nop
and
loop
adc
and
sbb
xchg
test
mov
ljmp
add
push
rcll
dec
cs
fldt
inc
insb
mov
test
jle
aam
mov
popa
inc
ret
add
call
gs
inc
push
mov
inc
fs
lods
sub
imull
rolb
mov
das
sub
push
cli
jnp
sbb
adc
in
sub
mov
or
outsb
jb
loopne
dec
loopne
pop
popa
sbb
mov
pusha
in
pop
xchg
cmp
push
pop
insb
daa
and
cwtl
mov
push
or
push
push
out
push
xorb
int
sbb
adc
and
adc
out
and
jmp
add
call
mov
lcall
lahf
shlb
dec
adc
mov
outsl
lock
lods
popf
int
out
enter
movsb
xchg
push
stc
fwait
in
test
repz
sbb
lcall
pop
lcall
sub
sbb
ljmp
adc
pop
adc
ljmp
xor
or
pop
aad
sub
adc
ror
adc
dec
pop
adc
lods
mov
addb
pop
sbbb
push
or
scas
add
call
cmpsb
in
sub
xchg
or
test
incl
inc
shrb
iret
fisubrs
sahf
cmovle
pushl
or
clc
sbb
cwtl
bound
int
and
or
adc
fldcw
sub
subl
test
or
dec
lock
or
outsl
inc
mov
mov
pop
out
mov
ja
addr16
cmpsl
fbld
in
adcb
push
jl
repnz
jmp
mov
dec
inc
pop
mov
insb
lods
add
call
fcoms
into
push
mov
cmp
mov
cmpsl
cli
bound
adc
dec
das
jae
clc
mov
or
das
dec
insb
jge
dec
push
inc
cli
fildl
lds
jno
bound
mov
arpl
rolb
add
cwtl
fcoms
mov
pusha
in
jg
lret
cmp
lcall
stc
orb
sarb
mul
mov
mov
push
push
mov
sahf
push
dec
out
sbb
stos
xlat
arpl
pop
mov
add
call
jge
stos
pop
jp
cwtl
cmc
fadd
xchg
adc
stos
and
pop
inc
ret
test
lret
shll
add
fimull
add
out
gs
sti
aaa
sarl
mov
mov
jnp
mov
or
or
sbb
out
jmp
xchg
ret
cld
xchg
push
or
aas
push
sbb
xchg
out
dec
mov
inc
jnp
add
into
stos
mov
int
das
sarb
out
sub
ror
sub
inc
es
or
push
cmpb
sti
testl
call
scas
sbb
test
and
mov
add
add
enter
inc
cmp
rorb
sete
xor
inc
incl
icebp
sahf
cmpsb
pushf
cmc
stos
lahf
dec
push
js
mov
mov
nop
push
push
gs
pop
enter
stos
imul
or
mov
jl
lahf
sbb
adc
pusha
mov
adc
inc
fwait
mov
insb
shrb
lds
and
orl
dec
sbb
shrb
and
stos
inc
mov
add
call
mov
repz
push
lea
lods
mov
sub
or
ret
add
shl
sbb
mov
rclb
in
out
fildl
pop
push
test
das
xchg
push
mov
lock
adc
ljmp
sbb
jmp
jp
xor
pop
dec
aad
push
lods
or
inc
push
xchg
and
ja
cmp
xchg
jae
inc
adc
dec
inc
mov
notb
add
pop
dec
sbb
mov
rcrl
add
call
mov
lret
or
jns
pushf
out
mov
xchg
scas
sbbl
cwtl
xchg
enter
cmp
mov
out
addr16
mov
add
flds
adc
stc
divl
hlt
xor
inc
sub
cmp
add
mov
rcrl
test
dec
pop
mov
mov
inc
mov
test
ljmp
hlt
mov
jb
xor
leave
idivb
add
call
or
push
pop
mov
or
test
stos
fcoml
sub
scas
and
xlat
insl
dec
push
or
lods
add
push
popf
dec
adc
js
loopne
pop
lret
hlt
cmp
adc
add
shlb
xchg
hlt
sbb
int3
mov
icebp
add
push
mov
fldl
jp
or
fwait
push
cmp
xor
mov
repz
int
int3
fildl
sub
dec
mov
loope
je
add
call
aad
jge
push
das
sbb
aad
push
or
mov
jno
popf
lret
out
xchg
jo
test
jge
jmp
fs
xorl
les
pop
xorb
sbb
mov
xchg
test
arpl
mov
xchg
test
and
xlat
insl
xchg
mov
pop
cmpsl
mov
ds
fcmovu
cmp
mov
hlt
adc
sbb
adc
jno
fld
add
xor
fs
lcall
xor
fwait
out
ret
popa
cmc
scas
and
xlat
insl
add
les
call
push
das
xor
aam
js
loopne
pop
lret
hlt
jle
daa
stos
es
mov
loopne
lret
cmpsb
hlt
lds
lahf
and
and
rolb
fdivs
test
roll
mov
stc
lahf
cmp
push
lret
insb
les
pop
mov
sarl
mov
movb
mov
mov
test
sub
arpl
ljmp
repnz
into
fdivs
adc
das
sti
cmp
in
fwait
out
jp
cmp
in
or
xorb
add
call
les
sbb
pop
jne
leave
movsb
cli
out
mov
pusha
push
lcall
test
mov
adc
lds
jae
cmpsb
into
jg
mov
sub
xchg
data16
sbb
mov
das
jle
xlat
icebp
dec
sarb
sbb
xchg
push
sub
js
loopne
pop
aad
or
lods
jo
jg
js
flds
cli
pop
or
lods
stc
pop
dec
and
mov
sub
stc
jl
or
clc
xor
nop
test
ljmp
hlt
mov
push
rclb
xchg
add
add
fsubs
pop
push
out
mov
cmc
lahf
lds
fcoms
dec
lret
push
pop
jl
test
and
jmp
rcll
in
lahf
ss
pop
mov
xchg
cmpsl
mov
jmp
sbb
push
push
stc
dec
cltd
or
ror
stc
jb
jge
or
or
aas
lcall
add
jbe
xor
lret
pop
mov
xor
jno
and
or
cmp
cmp
movsl
in
and
add
call
dec
cli
push
scas
adc
ds
mov
push
scas
je
enter
ss
and
nop
adc
mov
sub
push
dec
sbb
fs
xchg
lock
ror
daa
inc
jecxz
push
jbe
dec
scas
mov
cltd
mov
lea
lock
addr16
jae
jo
lea
mov
mov
inc
mov
call
add
and
bound
test
icebp
scas
xor
mov
adc
inc
cmp
add
call
es
mov
cld
xor
cmp
fwait
sarb
jp
push
es
push
push
adcl
inc
xchg
in
xchg
arpl
aam
aaa
dec
inc
add
sub
loop
pop
mov
xchg
push
lret
out
mov
pop
shlb
xor
push
pop
pusha
iret
add
mov
push
and
push
cmp
cwtl
push
and
fwait
and
bound
aam
fcmovne
jnp
or
xor
xchg
mov
add
call
sbb
movl
ljmp
jnp
mov
xor
jne
jae
mov
cltd
mov
adcb
addb
cmp
insl
mov
dec
mov
fadds
xchg
sub
jbe
xor
imul
imul
arpl
rcrl
mov
lret
or
pop
out
push
push
sbb
pop
mov
fidivrl
mov
or
jno
cmp
xlat
jno
repz
xlat
mov
add
call
mov
lea
or
imulb
pop
sbb
insl
lods
outsl
or
push
push
leave
fwait
call
out
daa
adc
inc
or
in
mov
sbb
subl
push
sbb
or
jmp
add
mov
and
lcall
xlat
jle
clc
daa
pop
orb
lsl
push
ret
ljmp
in
adc
sub
cmpsb
cmp
xor
xor
cmpb
call
jnp
ret
sahf
in
fcoml
cmp
cmp
scas
jecxz
add
scas
pop
xor
dec
es
push
inc
loop
and
negl
adc
les
xchg
cmp
jnp
aad
push
daa
inc
das
dec
and
push
mov
fidivrs
xchg
mov
ret
jne
xchg
push
dec
add
push
dec
push
call
or
shl
imul
push
movsb
sub
adc
or
jp
not
sahf
or
or
ja
jbe
add
add
call
lock
es
hlt
inc
push
test
add
rclb
stc
jge
mov
mov
jp
sbb
xor
iret
cmpl
mov
mov
pop
xor
fidivrs
xchg
mov
pop
bound
inc
insl
dec
cmp
inc
sbb
stos
shll
fwait
outsl
pop
sbb
imull
mov
lcall
and
jbe
add
sub
call
call
xlat
sahf
ror
pusha
push
fcmovb
inc
mov
and
test
jmp
enter
cmp
into
adc
hlt
test
mov
cld
xor
xchg
mov
sub
je
and
cltd
dec
nop
dec
in
sub
nop
inc
in
cmpsb
nop
adc
or
add
push
mov
shlb
sbb
jg
mov
int
jnp
stos
orl
shl
cmpsl
out
insb
or
ljmp
jmp
into
dec
ja
mov
sub
movsb
pop
rolb
add
call
mov
lcall
into
push
and
call
mov
out
mov
out
cwtl
ds
pop
fimuls
int
outsb
mov
xor
aam
xchg
dec
push
cld
dec
shll
lods
mov
dec
mov
loopne
je
push
xchg
push
fsubs
mov
and
and
mov
xchg
sub
fcmovne
aad
cltd
sti
mov
mov
pop
sti
xchg
aad
cs
cmpsl
pop
loopne
test
cmp
pop
cmpsl
mov
add
call
inc
sub
outsl
xor
adc
jl
inc
iret
mov
sub
xchg
subl
bound
push
xchg
jns
ss
adc
test
fwait
rclb
arpl
testb
je
cmp
mov
push
cltd
push
push
xor
imul
inc
sar
mov
bound
pop
lock
testl
xchg
jle
dec
mov
inc
cmp
xchg
call
jo
stos
pusha
or
sub
call
or
mov
cwtl
cmp
mov
xor
decl
nop
pop
lods
adc
lea
dec
jge
mov
mov
mov
stc
lea
jge
or
jle
dec
mov
mov
cld
jnp
pop
xchg
push
test
mov
mov
cmpl
outsl
sbb
stos
mov
add
sub
xor
leave
jle
xchg
push
addb
movsb
cmp
test
adc
je
mov
call
dec
push
add
sbb
jl
xchg
icebp
cmpsb
or
or
arpl
jge
out
and
mov
std
jno
stos
imul
xchg
xchg
add
andb
xchg
ret
rclb
xor
out
mov
cmp
push
movsl
negl
scas
sub
fstps
xchg
arpl
or
sbb
popa
pop
mov
clc
sub
xchg
sbb
stos
adc
jg
adc
add
repz
adc
lret
add
call
ret
sub
push
mov
mov
mov
xor
fcom
std
adc
cmpsb
xor
mov
mov
or
sahf
fs
xchg
cmp
cmp
lahf
or
mov
mov
adc
mov
and
mov
dec
hlt
xor
and
cli
fwait
push
lret
jbe
pop
fdivl
sub
das
cmc
nop
and
mov
push
xchg
inc
out
pop
dec
adc
or
scas
or
push
fwait
sti
je
add
shll
xor
call
jne
mov
addr16
negl
imul
addb
insb
cwtl
cmpsb
add
mov
jge
mov
inc
aaa
std
fisubrl
movsl
push
cmpsl
xchg
fstps
cmpsb
ss
xlat
jl
cmpsl
and
inc
push
xchg
int
or
outsb
test
mov
out
pop
mov
inc
pop
or
outsl
inc
fwait
sub
or
pushf
leave
lods
sarl
out
xchg
xchg
into
mov
pusha
mov
test
or
sbb
sbb
fsubl
mov
push
or
jne
out
insb
addr16
add
call
jnp
aam
pop
stos
rorb
rclb
lds
or
mov
dec
mov
test
sbb
adc
lret
cwtl
popf
dec
push
loope
icebp
adc
les
les
cmpb
xor
mov
pop
inc
nop
or
add
or
addr16
shll
aam
xchg
or
mov
jbe
mov
cmpsl
jnp
fs
test
cld
dec
divl
cmp
cs
dec
mov
leave
mov
lea
add
call
dec
mov
adc
daa
dec
aad
icebp
jl
and
dec
jp
pop
mov
out
test
pop
dec
inc
out
xchg
fcompl
push
cmpsl
mov
pop
push
test
rcrb
bnd
test
fstpl
lock
mov
int3
sub
cmc
inc
ds
mov
sar
scas
xchg
sub
loop
dec
adc
divb
popa
or
cld
xchg
adc
mov
dec
ds
xchg
int3
add
call
aas
fimuls
ficoml
rcr
push
sub
insb
jne
loope
bound
insb
outsb
ret
jae
inc
scas
wrmsr
data16
adc
jle
rcll
jae
sbbb
xchg
and
pop
jbe
dec
outsb
gs
pusha
or
fs
mov
push
push
sub
lds
aad
cmc
add
mov
pushf
add
and
or
add
stos
scas
shll
mov
inc
stc
ret
pop
ret
or
push
sub
stos
cmpsb
jg
cmp
lahf
mov
xchg
lock
and
rolb
add
call
add
add
mov
jp
gs
sbb
mov
data16
push
sub
dec
mov
sbb
add
mov
jbe
cmpsb
mov
or
pop
inc
sub
mov
and
sar
inc
xor
lods
decl
inc
xchg
push
pop
stos
cli
mov
mov
rorb
add
cmp
mov
cltd
rcrl
data16
adc
lock
test
imul
sbb
add
call
enter
bound
scas
jbe
fwait
out
in
jno
sti
ret
or
mov
out
orb
jb
shlb
lock
lock
cltd
inc
cmp
mov
jmp
loopne
inc
mov
cmp
mov
cltd
fisttpl
ret
pop
aas
fcoms
out
bound
fadds
mov
das
sub
into
xchg
push
sbb
shll
push
and
enter
out
loopne
add
mov
out
les
pop
add
call
roll
xor
xor
aam
lret
xor
cli
push
mov
adc
lock
test
imul
sbb
push
lods
push
xrelease
inc
test
jns
dec
adc
repnz
rcrb
xor
pop
add
cmp
jns
dec
cwtl
pop
testb
mov
mov
icebp
dec
adc
mov
in
xchg
fidivrs
mov
or
int3
or
push
lret
mov
cmp
mov
bound
sbb
jnp
cmpsb
mov
icebp
mov
add
call
lods
hlt
mov
fs
loopne
push
inc
lcall
outsb
sub
xchg
jbe
in
cmpsl
sbb
lcall
lret
lcall
shl
xlat
mov
iret
dec
leave
dec
fldl
jp
push
pop
leave
push
bound
inc
out
leave
mov
inc
fcmovnbe
pusha
sub
push
and
gs
inc
mov
xor
and
fsubr
iret
aaa
jb
scas
fisubrl
idivl
jp
decb
sahf
sbb
pop
lret
iret
fcmovbe
jg
add
call
jge
add
in
int
into
cmp
xor
imul
ret
lds
xchg
insl
arpl
psraw
sub
ss
sub
add
icebp
jmp
mov
loop
lods
jecxz
or
fldcw
sbb
ljmp
test
int
test
orb
call
jge
lds
cmpsb
movsb
nop
sbb
sbb
sbb
pop
adc
or
xor
stc
sub
add
call
xchg
mov
adc
inc
push
stos
sub
pop
fcoml
jle
insb
into
sbb
shll
push
and
leave
xor
imulb
dec
jl
cmc
inc
jno
iret
sub
sbb
icebp
shlb
shll
push
jg
mov
cmpsb
mov
stc
sub
es
enter
or
push
adc
ss
cs
sub
or
pusha
xor
pop
push
mov
loope
xchg
lds
les
cmp
jae
jo
rcrb
jl
dec
add
call
jmp
sub
mov
push
sbb
shrb
call
cmp
mov
mov
jno
jg
xchg
jge
aam
lods
adc
loop
and
fld
pop
jge
sbb
je
cli
and
sbb
or
ret
xchg
mov
cmpsl
mov
out
dec
xlat
add
pusha
imul
inc
lret
fnsave
jne
hlt
incl
mov
imul
cmpsl
mov
xchg
add
call
and
add
inc
out
test
cmp
repnz
dec
outsb
jmp
pop
pop
insb
in
and
test
insb
gs
leave
imul
cmp
arpl
push
ds
imul
scas
imul
dec
push
addr16
push
xchg
scas
and
add
push
mov
and
test
in
cmp
jae
mov
or
lods
ja
mov
xchg
push
orb
jb
shlb
rcll
or
call
es
adc
pop
lods
roll
mov
mov
mov
jns
or
insb
repz
xchg
inc
xchg
faddp
jo
cmp
inc
push
dec
pop
xchg
dec
inc
je
push
cld
adc
sub
cmp
push
pop
rorb
lea
add
pop
fimuls
jbe
fstp
gs
leave
movb
push
sbb
xchg
mov
cli
mov
rorb
dec
push
dec
pop
mov
lods
ja
mov
xchg
push
and
nop
add
call
push
xchg
scas
and
add
adc
sbb
popa
pop
mov
add
les
fwait
cmp
lds
std
mov
jo
inc
scas
cld
mov
xor
scas
into
push
push
sbbl
dec
push
les
test
in
ret
add
lcall
sub
pop
icebp
jns
cmc
loopne
insl
xor
mov
cmp
scas
dec
sbb
add
call
repz
add
sub
push
fbld
xchg
cmp
sbb
das
sbb
pmuludq
out
mov
dec
mov
or
movsl
or
popa
push
lock
popf
xor
pop
scas
std
push
lcall
dec
jge
mov
mov
daa
xor
aad
icebp
push
dec
aad
into
xor
test
jg
fs
mov
dec
in
mov
dec
mov
enter
out
fdivl
mov
push
xchg
inc
out
pop
dec
adc
or
jnp
adc
sub
jle
sbb
add
call
jmp
into
sub
push
or
cld
xchg
adc
mov
or
pop
out
popf
lock
in
call
sahf
and
xlat
push
sbb
xchg
adc
add
jnp
insb
mov
mov
inc
add
cmpsl
xchg
mov
xchg
jo
stos
pusha
or
sub
stc
out
mov
roll
notb
pop
jne
lahf
jae
xchg
push
xchg
sub
popa
sub
inc
lods
push
push
lcall
jge
add
jmp
mov
test
add
call
push
dec
pop
mov
std
sub
scas
jo
xor
mov
aaa
push
popf
adc
fsubrs
in
sub
loope
mov
je
rcll
dec
aaa
movsb
in
adc
das
jl
mov
mov
mov
clc
neg
imul
sub
je
jns
cmp
subl
xor
and
push
ss
lods
dec
mov
fucomip
js
test
clc
pop
dec
jle
ljmp
pop
in
cmp
add
call
repz
and
adc
mov
mov
into
mov
and
sub
fidivs
fwait
lcall
lcall
jbe
pop
movsb
mov
dec
push
mov
pop
lods
setns
xchg
push
xor
imul
mov
test
pop
jp
jmp
std
sub
sbb
inc
inc
pop
iret
stos
jl
bound
fisubs
in
call
xchg
int3
jnp
inc
into
mov
mov
lods
ret
mov
push
add
dec
testb
cmpl
add
call
scas
and
add
ljmp
xchg
jmp
and
cli
jnp
rcll
pop
out
mov
mov
or
inc
pop
mov
pop
or
push
push
daa
adc
xor
addr16
sarl
jp
push
push
cmp
cld
fcomps
and
das
cmp
mov
subb
mov
inc
fwait
mov
icebp
push
lods
dec
mov
fucomip
js
test
cmp
mov
push
mov
sub
add
call
dec
imul
int
and
inc
jg
mov
dec
sbb
jnp
mov
mov
mov
xrelease
insl
shlb
mov
ds
add
les
cwtl
lcall
jmp
push
test
push
mov
pop
pop
pop
inc
stc
xchg
xor
xchg
insl
cmp
inc
adc
outsl
and
outsb
mov
icebp
leave
push
out
xor
mov
subb
mov
pop
das
out
add
mov
push
lods
add
call
mov
fucomip
js
test
mov
jg
inc
clc
push
sti
cli
sbb
mov
push
cmpl
popf
adc
lret
imul
jne
cmp
out
iret
sub
popf
mov
loopne
rorl
mov
sbb
push
sub
popa
int
sub
movsb
adc
adc
or
pop
dec
mov
xor
outsb
xor
mov
xchg
inc
or
inc
adc
js
ret
cld
xchg
mov
pop
push
jne
ret
std
out
inc
add
call
pop
jge
test
flds
cmp
shlb
fst
xchg
fs
scas
cltd
pop
nop
sub
lock
ja
test
push
je
cmpl
push
or
push
mov
jl
mov
ja
cwtl
add
cli
sub
cs
pop
mov
dec
adc
mov
or
mov
xchg
cmpsb
roll
xor
or
pop
fcomps
sahf
add
orl
mov
cmp
sub
push
xor
or
mov
xchg
add
call
and
jbe
mov
aad
dec
je
cmpsb
cmp
push
xor
imul
adc
or
icebp
jmp
push
sub
sbbb
push
sbb
clc
subl
jle
ljmp
sub
dec
stc
dec
cwtl
scas
mov
push
pushf
xor
push
and
sahf
jnp
add
out
push
stos
fsts
push
mov
mov
mov
jp
mov
aad
fs
loope
scas
rcrb
lock
js
add
call
adc
pop
enter
push
sbb
and
gs
mov
cltd
jge
mov
lret
add
iret
cld
minps
loop
mov
pusha
jno
iret
mov
add
ficomps
push
jmp
loop
fsub
mov
sbb
std
dec
notl
mov
dec
scas
sbbb
pop
push
cmc
sbb
mov
call
pop
pop
clc
mov
in
insl
dec
fidivrs
xchg
repz
iret
int3
sbb
inc
es
push
rcrb
add
call
sti
dec
push
pop
sub
mov
test
sub
jo
sub
lds
test
in
loopne
add
push
inc
int3
sbb
jle
sub
jp
out
pop
or
fisttpl
inc
mov
enter
adc
movsb
fwait
andb
push
and
ljmp
cmp
jns
cmp
pop
pushf
cmp
dec
jecxz
rolb
stos
das
sbb
inc
jno
mov
mov
mov
daa
fs
cmp
inc
pop
into
add
call
dec
pusha
dec
test
lcall
jmp
push
test
out
jbe
sbb
jae
mov
sbb
mov
shlb
jg
test
enter
fmuls
sub
mov
mov
pop
push
add
lods
dec
mov
fucomip
js
test
in
pop
dec
mov
push
int
cmp
lock
and
jg
mov
lret
imul
repnz
test
iret
sub
popf
mov
call
xchg
imulb
arpl
pop
adc
stos
sub
push
sub
popa
int
sub
sarb
mov
jae
cwtl
xor
cmp
scas
push
mov
fimull
lret
cmc
add
pop
ss
dec
test
mov
lods
js
inc
jg
xor
testl
in
and
pop
nop
addr16
ja
shll
fsts
shll
jo
sbb
out
push
cmc
es
push
mov
ja
jg
dec
sub
adc
call
sbb
test
and
jg
mov
into
jne
push
jo
push
mov
fistpl
xchg
cmp
gs
mov
mov
into
xchg
fcoml
sub
cmc
add
flds
test
lea
lcall
jbe
pop
movsb
mov
dec
push
mov
and
and
test
scas
mov
sub
dec
jmp
mov
test
inc
movsl
std
sub
cmp
jbe
adc
pop
xorl
aas
add
pop
jmp
call
mov
out
shlb
mov
mov
xchg
fmull
mov
ljmp
lds
pop
mov
push
dec
mov
shr
cmp
sahf
lret
push
pop
out
stos
sub
lock
into
jbe
out
push
incb
cmpsl
les
add
sub
xchg
xor
sub
popf
mov
mov
cmp
mov
mov
mov
jno
imul
mov
cmc
add
fucom
lea
jmp
add
call
test
add
outsl
mov
iret
or
cmpb
inc
in
test
repz
inc
out
adc
outsb
mov
mov
sub
data16
xor
fistl
divl
inc
push
loop
push
scas
shrl
lgs
shr
rcr
daa
dec
pop
add
sub
add
pop
push
cmpl
pusha
jmp
dec
into
jne
mov
cmc
xor
mov
or
push
lcall
mov
call
cltd
adc
push
daa
out
fldl
cmc
sub
add
cli
dec
stos
stc
push
fistpl
cltd
xor
outsl
ds
in
aam
mov
and
pop
jbe
dec
ds
lcall
mov
push
push
sub
lds
push
es
fimull
icebp
push
repnz
push
pop
out
stos
inc
mov
mov
shr
loop
sahf
xor
lods
fldenv
mov
mov
pop
mov
shl
sbb
add
call
cli
inc
inc
jp
adc
in
out
and
jecxz
push
hlt
xchg
gs
xchg
insl
fs
out
xor
mov
mov
sarb
les
popa
push
add
sub
and
mov
pop
inc
mov
loop
sti
and
faddl
push
push
mov
insb
sub
or
jecxz
xor
test
in
icebp
fucomip
popf
sti
jl
imul
or
out
arpl
repz
pop
pusha
or
call
fisubrs
mov
add
jp
dec
or
jnp
stos
mov
ret
fbstp
add
test
add
incl
dec
pop
jb
mov
sub
xchg
imul
test
in
mov
mov
sahf
fstps
fs
add
sahf
mov
dec
cmpsb
jg
sub
pop
jne
xchg
mov
mov
sub
push
jno
in
loope
popl
scas
cmc
add
lock
loope
add
call
lock
xor
pop
inc
lret
jg
or
jmp
enter
jmp
xor
fdivs
add
das
push
stos
cmp
loope
stos
pop
cmp
daa
jle
sbb
pop
sysret
out
into
in
sahf
cmp
sbb
xor
outsb
das
clc
mov
push
inc
jo
pop
pop
inc
out
pushf
adc
aaa
test
repz
push
mov
add
pop
loopne
lret
mov
das
adc
sub
mov
xchg
imul
call
pop
mov
jge
and
cmp
daa
into
or
add
lret
test
pop
js
pop
sbb
jno
mov
sbb
imul
dec
push
pop
pop
pop
scas
jbe
into
jl
adc
jecxz
jle
mov
icebp
out
call
insb
push
cli
shll
jmp
xor
lret
jbe
mov
movsl
shll
xchg
test
in
adc
data16
adc
popa
pop
test
stos
in
adc
xchg
shrl
xor
pop
out
adc
dec
int3
add
call
sbb
fcmovu
lods
clc
xchg
fs
pop
push
xlat
lods
in
in
or
sbb
push
or
xchg
xchg
pop
test
jns
popw
add
popf
and
mov
hlt
stos
mov
jo
mov
inc
les
and
repz
into
mov
mov
lods
xchg
fdiv
into
sub
cs
sarl
fidivrs
mov
mov
jnp
cli
stos
jge
push
mov
mov
lods
add
call
xor
sub
repz
shlb
pop
jb
dec
cs
lods
dec
add
lock
call
insl
cmp
imull
mov
lahf
loope
fbstp
jecxz
daa
dec
mov
lea
mov
fisttpll
sub
pop
lods
jle
pop
js
or
inc
adc
sub
lds
xor
push
mov
mov
sbb
jno
mov
sbb
imul
lret
xchg
cmp
adc
repnz
jns
sbb
jge
cmpsb
add
call
ljmp
je
stc
and
es
adc
dec
or
inc
testb
inc
int
fstpl
cmpsb
adc
sti
ret
mov
scas
loopne
push
xchg
add
aad
jne
cmp
cld
mov
inc
daa
xor
xchg
in
inc
adc
popf
fstpt
icebp
out
jne
insl
xor
jb
xchg
jge
ljmp
loop
adc
sbb
ret
pop
gs
iret
jne
mov
imul
mov
lock
cltd
sbb
int
add
call
adc
ret
rol
insb
ret
dec
and
mov
loop
std
xor
int3
mov
insb
outsl
cmp
xchg
call
push
pop
pop
xor
jns
sbb
jge
cmpsb
outsb
dec
pusha
subl
and
inc
je
sub
dec
lahf
push
sub
sbb
es
ds
cmp
jl
daa
push
hlt
dec
cmp
ret
nop
xchg
jbe
push
cmc
mov
loop
sti
and
std
inc
ret
push
lret
sbb
sub
pop
xchg
shll
les
loopne
add
call
mov
pop
iret
into
push
pop
je
sbb
fwait
es
dec
jmp
inc
jge
in
fdivrl
addr16
mov
nop
das
sub
int
xchg
dec
repz
mov
pop
mov
jb
and
mov
sub
pop
and
cmp
sarl
add
jno
push
test
in
shrl
sbb
flds
bound
adcb
mov
mov
add
call
sbb
cmp
push
daa
outsb
imul
inc
stc
gs
jmp
mov
les
inc
pop
push
insb
pop
ret
inc
jns
xchg
aaa
pop
xchg
sbb
loope
push
jecxz
xor
sbb
push
sub
out
call
insb
push
push
cltd
leave
pop
xor
push
inc
adc
pop
push
xor
int
jb
test
stos
fscale
les
test
xchg
mov
xchg
test
add
mov
jecxz
aaa
mov
pop
xchg
pusha
xchg
jecxz
bound
stos
mov
call
mov
add
fstpl
cltd
ljmp
loope
mov
je
mov
popa
pop
insb
jns
popf
mov
dec
sbb
in
sbb
add
mov
pop
shlb
dec
notl
nop
ss
sbb
sub
stos
ud1
xchg
divb
icebp
mov
jnp
aad
add
rorb
scas
or
dec
dec
adc
je
cmp
mov
cld
pop
gs
je
jecxz
sub
mov
enter
mov
jg
pop
les
loopne
xchg
pop
sbb
add
call
dec
jo
movzbl
pop
repz
push
pop
lret
je
sub
dec
lahf
push
sub
xor
sarl
xor
clc
insb
add
xchg
fists
xlat
mov
add
icebp
mov
stos
pop
imul
insl
pop
xchg
mov
push
lock
rorl
addr16
mov
xchg
out
scas
ds
cmp
mov
xchg
or
enter
dec
or
cld
xchg
adc
mov
xchg
cs
add
call
mov
scas
dec
dec
sub
lret
dec
hlt
xor
and
cli
fwait
movsb
out
pop
cwtl
xor
out
lret
mov
and
stos
inc
mov
jp
pop
pop
push
in
aaa
sub
std
sub
sub
or
ret
mov
mov
mov
rclb
in
out
ss
dec
test
cmpsl
or
inc
mov
das
xor
mov
pushf
cli
lock
popa
fnstcw
pop
shlb
sub
lret
cmp
clc
add
call
std
push
sbb
pop
jno
and
shll
mov
and
or
insb
cltd
sbb
fidivs
in
xor
xorb
cmp
pop
sub
repnz
mov
jne
xor
mov
adc
xchg
ss
dec
stos
insb
dec
popf
shlb
push
xor
das
push
cli
jns
in
mov
hlt
push
push
lahf
call
xor
sbb
jl
sbbb
mov
dec
adc
jg
pop
add
xor
lret
rol
add
call
cltd
leave
pop
dec
inc
iret
arpl
das
in
adc
add
ret
ja
imul
mov
cli
movsb
popa
cmp
cmpsb
pop
cld
das
cmp
outsb
dec
lds
mov
push
stos
repz
or
cli
push
aas
std
inc
inc
pop
out
add
lock
push
push
sub
adc
xchg
popa
add
dec
dec
mov
mov
into
inc
mov
call
mov
push
in
or
push
mov
repz
cmp
mov
or
adc
es
pop
popa
mov
add
call
lret
fdivl
stos
divl
or
inc
cmp
int3
dec
xor
mov
add
jb
gs
xor
mov
pushf
cli
lock
popa
fyl2x
mov
xor
push
pop
add
imul
sub
pop
push
inc
jecxz
sbb
lret
adc
add
xchg
inc
fsubl
sti
dec
xchg
and
fstl
push
pop
add
in
push
cmp
cwtl
in
mov
cmp
shrl
xor
jl
mov
and
dec
adc
add
call
dec
dec
cmp
fstps
lea
cmp
mov
mov
fstpt
xchg
or
mov
ret
mov
repz
jne
push
dec
push
sub
xchg
insl
inc
in
pop
or
pop
or
dec
adc
pop
and
jnp
mov
das
xor
mov
pushf
cli
lock
popa
fldenv
adc
inc
in
out
das
sbb
loope
mov
ja
and
or
add
push
stc
pop
jnp
jmp
add
call
push
cld
pop
xchg
cwtl
jno
pushf
xchg
int3
lret
push
inc
shrl
xor
jl
mov
and
sbb
shl
mov
lea
adc
repnz
fcomip
loop
jno
fs
mov
loope
adc
push
nop
cmp
push
sahf
mov
mov
shrb
mov
pop
in
cwtl
repnz
lea
xor
rcrl
lods
pause
and
fists
sbb
pop
repz
sbb
call
mov
int
sbb
inc
add
call
pop
or
jecxz
ds
stos
lods
mov
xchg
mov
pop
mov
or
dec
imul
mov
jmp
inc
jmp
aad
mov
loope
add
shll
add
xor
jb
adc
int3
inc
add
iret
xchg
pop
sub
jl
icebp
rclb
test
jo
dec
stos
lcall
lods
arpl
popa
push
cmc
jecxz
and
jne
lcall
add
call
mov
sbb
or
inc
or
cmp
lcall
mov
xchg
daa
jns
xchg
lods
dec
aad
leave
test
mov
movsb
movsl
cmp
dec
push
fistl
enter
dec
pop
xor
loope
jns
pushf
icebp
jns
mov
mov
push
sub
or
adc
aas
adc
lret
inc
sahf
dec
pop
gs
lds
fsubr
adc
add
sti
sbb
jo
test
push
adc
incb
fcmovnbe
flds
inc
mov
sbb
call
inc
rcrb
mov
dec
jns
cli
roll
inc
cmp
push
jge
jp
mov
sbb
cwtl
popa
pop
xchg
cmp
sar
das
loopne
int
pusha
mov
es
dec
clc
ja
fsin
xor
inc
sti
pusha
adc
cltd
stos
ficomps
lahf
jle
xchg
gs
mov
cmp
push
cmpb
aaa
outsl
dec
in
fwait
shlb
adc
mov
jo
inc
lret
xchg
push
gs
adc
loop
aaa
dec
nop
push
cmc
dec
orl
add
call
xchg
clc
or
fwait
xor
mov
addb
sahf
xchg
es
or
pop
sbb
jl
movsb
je
cmp
mov
repz
mov
mov
mov
pusha
xor
mov
adc
push
popa
fidivrl
aad
sbbl
das
fcomp
push
sbb
popl
cmp
sahf
dec
outsb
scas
mov
mov
fwait
int3
add
mov
int
shr
dec
inc
mov
call
in
js
mov
inc
sti
cmp
sub
lea
loope
or
jns
jo
dec
and
and
cmp
scas
shlb
fsubrs
push
lods
rcrl
test
or
jae
popa
pushl
or
js
test
les
pop
or
mov
cmp
stos
mov
daa
jmp
and
shr
pop
lret
lods
mov
add
inc
and
dec
mov
xchg
adc
call
add
push
iret
cmpsl
mov
divl
orl
xchg
clc
or
ds
xchg
or
ss
fistl
std
sub
dec
and
and
fimull
orb
into
ret
in
sub
jle
or
int
mov
mov
ret
xor
mov
jne
jo
lods
mov
int
cmp
call
adc
adc
popa
pop
and
pusha
mov
iret
cli
jbe
lds
aad
ja
dec
jbe
iret
mov
movl
call
out
fs
outsl
sub
sub
mov
jmp
and
xor
mov
jae
xor
scas
mov
mov
pop
mov
xor
jp
clc
xor
cmc
add
rclb
or
jns
rolb
fs
xchg
or
push
rorl
bound
jp
repz
mul
jge
push
int
out
xchg
and
lahf
mov
push
cmp
xorb
pop
xchg
add
call
cmp
jecxz
jg
out
mov
and
in
stos
jo
insb
add
xchg
jl
filds
in
rcrb
adc
les
push
test
mov
lret
call
pop
xchg
test
ret
fsubl
sbb
jo
pop
test
les
jno
fwait
mov
mov
and
pushf
mov
not
mov
add
iret
sysexit
jecxz
xor
das
push
cli
jns
in
mov
hlt
push
push
lahf
call
outsl
addb
call
mov
sbb
cmpsb
test
ror
movsl
xor
adc
fwait
mov
dec
cmp
sbb
jecxz
pop
cmp
lods
sbb
adc
push
sub
fldt
dec
ss
cmpsb
popf
and
and
push
aad
mov
push
pop
jns
mov
mov
pop
sub
rcl
nop
sbb
jb
mov
bound
adc
pop
cmc
aaa
sub
jp
jl
popa
ret
js
add
push
das
and
loope
pop
jno
and
addl
call
xor
pop
lret
push
je
fidivs
xor
mov
jo
pop
je
jecxz
scas
pop
jns
divb
cmpsb
xchg
mov
test
enter
fisttpll
fs
push
ret
mov
sbb
out
fcompl
popa
fldenv
adc
jmp
mov
pop
mov
add
loope
pop
jno
and
sti
sub
rcrl
stos
pop
adc
das
fs
mov
or
in
add
call
movsl
mov
dec
lock
xchg
lods
leave
test
or
mov
adc
pop
ret
sub
sub
dec
daa
pop
lods
lcall
mov
mov
pop
or
push
fcoms
inc
adc
ret
dec
xchg
repnz
mov
and
dec
mov
aas
mov
loope
cmp
mov
inc
dec
jo
mov
gs
mov
lea
jp
inc
pop
mov
addl
mov
push
or
add
call
cltd
lahf
imul
jno
fwait
mov
mov
and
arpl
bound
js
push
adcl
popa
cmp
jae
mov
mov
fstpt
xchg
or
mov
and
loope
and
xchg
in
jl
inc
push
andl
inc
inc
sub
sub
xchg
xor
mov
jns
and
lahf
mov
sbb
leave
les
scas
mov
jb
test
jecxz
aam
pop
jb
jmp
arpl
add
call
or
mov
push
test
or
mov
jge
mov
mov
mov
jmp
scas
out
dec
hlt
xor
and
cli
ret
inc
sub
pop
mov
shrb
mov
lods
fdivl
mov
push
xchg
inc
out
pop
dec
adc
or
jp
dec
mov
cmpsb
mov
pop
mov
andl
fwait
data16
sar
scas
xchg
sub
jb
mov
lret
xchg
daa
in
aaa
mov
arpl
add
call
push
leave
clc
and
push
mov
cmp
xchg
insl
inc
push
mov
adc
xor
hlt
fiaddl
adc
fsubrs
in
loopnew
sbb
jns
adc
aad
adc
inc
jns
dec
fadds
lea
stc
jb
shlb
or
xlat
dec
and
in
roll
loopne
inc
inc
push
mov
adc
aas
sbb
jae
cmp
push
test
out
dec
add
jmp
ja
popf
fsubrp
add
call
je
or
mov
call
sbb
adc
mov
movsl
aaa
sub
out
jne
insl
xor
sub
das
xor
shll
insl
mov
inc
rcr
mov
fisubrl
aas
std
inc
inc
pop
out
add
into
int
sbb
sbb
out
mov
adc
adc
lods
scas
in
xchg
dec
push
xlat
in
popf
cmpsb
incb
fisttpll
jmp
fisubrl
leave
mov
and
shll
loope
pop
and
add
call
sub
lcall
int3
jmp
mov
jmp
out
dec
add
dec
popa
xor
dec
sub
repnz
test
push
mov
js
mov
push
jmp
mov
lds
pop
inc
pop
pop
xchg
or
enter
orl
cmp
jge
je
outsb
add
cmc
pop
xor
mov
sub
pop
xchg
adc
cmp
lock
cmp
sub
sub
xor
pusha
cmpps
xor
xlat
repz
add
call
cs
gs
xchg
out
iret
ficomps
fdivl
fimull
outsb
dec
xor
xchg
mov
into
in
jp
inc
xchg
orb
pop
jle
jo
aam
inc
fnsave
mov
ja
aaa
push
ds
pop
push
movsl
dec
scas
movsb
mov
inc
dec
test
dec
stos
inc
mov
das
mov
or
add
sub
mov
lret
imul
lret
subb
mov
ret
fbstp
je
inc
aam
inc
idiv
jmp
pop
sbb
std
inc
inc
add
call
out
pop
push
mov
das
aad
cwtl
or
lea
inc
shl
clc
mov
shrb
push
in
loopne
push
arpl
inc
je
jno
into
aaa
lds
mov
mov
out
hlt
stc
cmp
and
sub
insb
jns
dec
and
inc
pop
test
or
push
ja
stc
inc
divl
cmpsl
push
scas
bound
int3
jmp
mov
jmp
out
dec
add
dec
popa
xor
cmp
mov
cmpl
mov
jbe
add
call
pop
lods
push
lcall
push
sub
mov
lcall
shrb
push
outsb
cmp
xor
out
push
loopne
lahf
jae
sbb
pop
mov
aaa
mov
andl
call
iret
ficoms
jns
cli
lret
sbb
icebp
loop
sti
and
cmp
sub
sbb
fwait
and
les
cmp
lea
pusha
mov
inc
xchg
adc
ja
inc
lods
mov
scas
es
push
add
call
xchg
int3
test
rcrl
sbb
daa
cmp
inc
sbb
cld
dec
sbb
out
pop
ret
dec
jmp
xor
lock
testl
and
sbb
xchg
xor
std
lcall
scas
or
js
std
xchg
sbb
lock
mov
add
lods
mov
cltd
mov
jbe
icebp
jg
push
pop
and
jg
dec
jle
add
mov
loopne
and
lods
les
ret
rol
insb
add
call
test
and
imul
pop
in
and
mov
mov
imul
jmp
movsl
dec
ds
sbb
nop
fldl2e
out
movb
ljmp
inc
sbb
loopne
mov
cmp
add
add
mov
jp
xchg
mov
sbb
jmp
rcrb
test
rcrb
repnz
and
nop
cmp
test
push
mov
enter
call
xor
int3
jp
pop
pop
cmp
cmc
je
jle
xchg
mov
ljmp
inc
insb
mov
dec
adc
pop
insb
mov
imul
divb
add
loope
mov
in
call
out
or
in
movsb
jb
adc
jbe
mov
push
cltd
aas
mov
ficomps
out
mov
dec
adc
pop
inc
insl
sbb
mov
mov
insl
scas
mov
outsl
dec
fcmovbe
andb
mov
mov
call
aam
sub
push
add
into
cwtl
sbb
aad
xchg
push
hlt
loope
es
inc
js
lock
dec
lods
mull
jns
sub
sub
cltd
sbb
inc
rep
adc
adc
repz
loope
push
and
int3
adc
popa
out
or
push
aaa
jbe
mov
lods
mov
mov
and
mov
xlat
dec
inc
sub
repnz
rcll
push
sbb
lea
pop
fildll
outsl
push
cld
add
call
fwait
les
xor
fnstcw
adc
aad
jno
fldl
fldenv
scas
mov
int
and
or
int3
lret
icebp
jle
mov
jmp
in
xrelease
insl
mov
jae
cli
cmp
mov
test
mov
dec
mov
movsb
sarl
pop
test
icebp
ja
lret
jns
xor
inc
fmull
lods
or
sbb
mov
add
jecxz
popl
mov
pop
in
test
repz
rclb
xorl
add
call
out
lock
cmp
jmp
fsts
pop
mov
repz
out
fisubrl
xor
stos
xor
jo
pop
adc
pop
cmp
or
push
xlat
mov
clc
aad
sub
in
cmp
adc
dec
out
int
inc
sbb
arpl
sahf
sbb
int
dec
mov
aas
aam
imul
or
in
mov
sub
cwtl
mov
dec
testb
and
and
adc
dec
out
hlt
jo
xchg
mov
add
call
add
sub
neg
iret
das
test
ja
pop
xor
inc
add
cwtl
pop
out
outsl
xor
push
or
mov
xchg
sbb
jecxz
ds
mov
stos
cmpsb
in
rorl
data16
cs
xor
mov
mov
cltd
loopne
mov
jecxz
xchg
loop
sti
pop
repz
mov
cmp
pop
idivl
sub
test
sbb
sbb
mov
pusha
dec
lods
xor
stos
test
sub
out
ds
push
std
lods
bound
add
call
jo
lret
imul
aad
xor
jle
loopne
test
mov
and
inc
or
inc
add
jp
or
std
push
movsl
imul
gs
cwtl
jecxz
jnp
sbb
cmpsb
loope
inc
sbb
adc
leave
flds
seto
jne
pop
test
adc
icebp
loopne
test
pop
jle
mov
loop
and
fstpt
jecxz
daa
dec
mov
lret
jne
sub
mov
popf
arpl
add
call
insl
testl
movsb
ret
mov
xchg
pop
pop
in
add
int
in
pop
lret
repnz
outsl
jnp
mov
loop
je
rcr
xor
clc
shlb
es
xchg
cmp
pop
test
in
pop
jns
jne
sub
out
inc
mov
dec
mov
adc
mov
cmp
jo
add
outsl
push
xor
cmc
mov
mov
xlat
scas
jl
ficomps
out
clc
mov
iret
rorb
xlat
add
call
lret
adc
jge
xchg
rolb
mov
cmp
stos
insb
sub
push
fwait
push
cli
fmull
mov
and
lcall
adc
mov
dec
add
dec
faddl
outsl
dec
mov
jg
or
xor
xchg
lret
pop
sbb
pushf
addr16
push
sub
pop
push
fs
inc
inc
dec
mov
add
and
mov
or
das
lret
and
push
aam
and
das
arpl
test
pop
popa
and
mov
and
sahf
adc
daa
xor
call
and
pop
sub
and
inc
mov
add
hlt
shlb
mov
inc
xchg
adc
ja
inc
lods
mov
data16
out
imull
rcrl
ret
add
leave
cmpsl
xlat
pop
inc
std
lret
adcl
fmuls
ret
cmp
dec
loope
scas
les
out
jb
fs
sbb
lea
add
pop
sbb
and
adc
aad
xlat
inc
out
mov
adc
scas
sarb
andl
ljmp
jns
add
inc
insb
mov
dec
add
call
push
pop
inc
lods
sub
in
cmp
pop
jecxz
out
outsl
dec
fcmovbe
andb
mov
push
adc
jno
mov
sahf
lret
push
pop
loopne
cmpsb
jecxz
imulb
es
adc
fistpl
sbb
out
push
xorb
and
sahf
xor
mov
inc
sbb
imul
xchg
sbb
ds
movsb
addr16
std
ret
ror
fnstcw
xorb
jns
int3
cmp
add
sub
daa
xchg
ret
lahf
repnz
movsb
dec
xchg
fistl
mov
add
call
mov
sbb
je
push
fcom
imul
aas
lods
test
mov
inc
icebp
ja
lret
jns
xor
inc
fdivrl
and
rcl
mov
add
adc
sbb
insl
int
aaa
test
repz
push
xor
add
xchg
xchg
push
nop
mov
out
in
and
sub
mov
sahf
xchg
outsb
add
jae
sbb
lods
in
dec
fcomps
jmp
push
or
pushf
dec
dec
mov
inc
add
sub
add
call
aam
call
mov
xlat
mov
mov
dec
lahf
sahf
sbb
int
dec
mov
aas
aam
imul
outsl
or
xorl
or
push
in
aad
jmp
fwait
test
and
cmp
idivb
or
sbb
call
push
pushf
outsb
test
movsl
incl
push
sbb
lea
pop
aam
orb
or
push
cld
aaa
fwait
les
xor
fnstcw
adc
add
push
ret
fldl
fldenv
add
call
mov
int
and
or
int3
lret
bswap
add
push
mull
push
jo
stc
outsl
inc
stos
in
xrelease
insl
mov
jae
cli
cmp
mov
mov
rcrl
ret
imul
mov
ljmp
pushf
sbb
out
mov
jb
repz
in
les
mov
xor
mov
mov
int
cltd
or
ret
jmp
inc
push
sbb
lea
pop
pop
xchg
arpl
aaa
fwait
add
call
inc
in
cmpsb
cmp
add
stos
sbb
and
lcall
movsl
inc
insb
mov
in
je
out
lahf
pop
ds
pop
iret
sub
popf
mov
cli
add
nop
pushf
aaa
pop
mov
outsl
ret
jge
push
mov
popf
js
mov
mov
lcall
or
test
lds
imul
bound
mov
push
adc
mov
mov
or
daa
je
inc
out
mov
call
les
sub
cmp
or
jae
cs
jecxz
jo
jne
testb
ds
jo
js
cmp
mov
sub
jmp
inc
pusha
addl
jb
adc
sub
fdivr
xchg
adc
mov
xchg
es
xchg
push
lcall
push
jge
xchg
test
loopne
bound
add
and
or
add
stos
scas
xchg
add
sbb
and
mov
call
xor
inc
mov
data16
cmp
lahf
mov
xchg
lock
and
and
rorl
cmpsl
jecxz
fidivrs
or
mov
mov
xchg
add
inc
inc
pop
out
jge
cmpsl
imul
pop
xchg
int3
sub
add
add
push
cs
cmp
push
outsb
rcrl
and
in
shr
or
pop
sbb
dec
jne
jb
or
or
lds
das
loop
aad
jno
pop
jns
dec
std
les
call
add
and
call
je
push
mov
jmp
push
stos
and
xor
mov
js
pop
jnp
sbb
inc
repz
negb
cs
sahf
xchg
mov
cmpsb
leave
leave
sahf
dec
mov
xchg
cltd
pop
mov
dec
lock
mov
das
mov
jbe
outsl
inc
dec
in
test
repz
xchg
or
dec
imul
add
imul
andb
and
mov
or
lock
dec
jne
add
call
push
pop
mov
dec
lock
rcl
pop
int3
sub
xchg
es
ljmp
inc
inc
inc
dec
mov
hlt
or
imul
fistpll
pop
test
xor
mov
js
aam
mov
pop
test
pop
outsl
mov
lret
mov
xchg
scas
in
push
fisttpl
inc
outsb
adc
nop
and
push
ret
sbb
jne
shl
push
adc
pop
add
push
aas
je
jns
push
fs
inc
inc
dec
mov
xchg
xchg
rcpps
xor
add
call
xor
add
imul
pop
xchg
push
xor
dec
mov
pop
push
jae
cmp
daa
mov
dec
outsl
push
dec
ss
sub
out
cmp
pop
push
je
int
cwtl
cmp
cs
mov
inc
sbb
fmull
into
sub
repnz
add
outsb
dec
mov
lahf
ret
or
xlat
dec
and
xchg
popl
frstor
dec
add
loopne
inc
push
and
or
xor
sub
movsb
inc
aas
rorl
stos
lretw
mov
js
add
call
dec
push
mov
inc
push
popf
mov
cltd
pop
adc
xor
loopne
leave
sahf
dec
mov
xchg
cltd
pop
mov
dec
lock
movsl
lret
out
and
mov
fs
inc
inc
dec
mov
movsb
fcoms
dec
mov
jge
mov
cmp
cmp
ja
pop
mov
and
clc
or
jo
and
jbe
inc
inc
jae
jle
and
das
sub
dec
aad
or
es
and
movsb
dec
sub
inc
out
call
addr16
stos
jo
jo
add
call
add
inc
mov
pop
fnstsw
mov
adc
pop
imul
or
das
xor
mov
inc
push
clc
in
ljmp
lock
outsb
inc
pop
fs
mov
mov
push
xor
fdivrl
das
inc
push
mov
adc
xchg
sbb
lret
cmp
inc
out
lods
cmpsb
loope
cmpsl
bound
je
pop
jp
xchg
push
sub
repnz
fiadds
lea
xlat
or
cmp
jno
fs
and
incl
in
add
call
mov
hlt
push
dec
push
dec
fstpl
icebp
loope
sbb
test
xchg
addr16
adc
imul
stc
movsl
std
sub
jle
iret
fildl
mov
and
mov
xlat
movsb
pop
and
insl
fisubrl
xlat
inc
cmp
lock
lock
hlt
cmc
arpl
pushf
enter
rcrl
fistl
jbe
jb
mov
adc
pop
imul
inc
push
pop
stos
rclb
push
aaa
stos
mov
sub
stc
pop
pop
mov
xor
add
call
fstpl
push
xlat
xor
imul
jg
or
jne
sub
cmp
divb
aas
jbe
sbb
add
jle
mov
inc
ss
int3
stos
sub
test
inc
xor
in
or
mov
add
xchg
std
inc
dec
push
add
pusha
mov
aas
iret
push
mov
mov
aaa
test
adc
std
sub
and
ficompl
pushw
lods
push
inc
xchg
out
xchg
movsl
xor
fwait
in
add
call
push
fs
inc
inc
dec
mov
jg
cld
mov
push
xchg
or
lea
jle,pt
sbb
adc
repnz
rolb
shl
pop
adc
cwtl
pop
xor
jbe
cmpsl
dec
stc
orb
inc
xchg
js
outsl
gs
inc
xchg
out
add
push
cltd
es
ret
xor
out
ja
inc
lock
daa
add
shl
ja
pop
iret
sub
popf
mov
and
pop
pop
mov
std
sub
pop
push
dec
outsl
inc
xor
aam
add
call
jno
lcall
adc
inc
data16
sbbl
dec
sbb
mov
leave
mov
loop
out
push
and
and
das
jecxz
insl
sub
mov
fldcw
in
hlt
push
jle
jb
into
push
lret
out
sti
into
mov
repz
jb
mov
mov
sar
cwtl
jns
fs
jne
loopne
xchg
dec
out
mov
ret
jmp
inc
fucomi
adcl
and
lods
inc
jns
add
call
cmp
xor
and
inc
test
repz
sti
stos
push
pop
call
fdivl
push
mov
and
xlat
jo
inc
jl
jae
inc
mov
andb
and
or
xor
sub
jo
xor
pushf
mov
cltd
and
and
call
je
push
popf
enter
lret
out
jb
ror
and
mov
cmp
lds
loope
push
jmp
or
rolb
jbe
add
call
fadd
xchg
cli
lcall
jg
mov
add
testb
je
push
push
and
fidivl
repnz
jbe
sbbb
into
scas
ret
xor
out
ja
inc
lock
sbb
out
push
push
dec
mov
iret
sub
popf
mov
push
mov
std
sub
jne
filds
push
jns
aam
outsl
jno
xor
ds
enter
xlat
mov
cli
int
cmp
rolb
sti
fidivl
and
jo
add
call
or
mov
es
ficoms
fcmovnbe
dec
icebp
mov
and
xchg
mov
in
pusha
les
sbbl
lret
scas
inc
jae
cmp
mov
xacquire
jecxz
lods
ret
sub
aad
mov
loop
add
sub
pop
push
fs
inc
inc
dec
mov
jg
cld
mov
jb
subl
push
cmp
pop
into
scas
ret
xor
dec
push
xchg
mov
lret
cmpsb
aam
xchg
fdivp
inc
ljmp
call
dec
mov
enter
fcoml
ss
ljmp
jns
push
aas
clc
xor
shlb
ffreep
inc
or
xchg
sbb
mov
loope
mov
add
test
jmp
or
repz
lods
out
dec
pop
mov
jb
xchg
jmp
stos
adc
xor
imul
scas
outsb
daa
insb
lret
fcompl
xchg
mull
sub
in
lea
bound
call
xchg
sbb
jae
add
call
shlb
pop
mov
jp
xchg
mov
idivl
ss
shrb
cmp
int3
ror
sahf
sub
lds
mov
in
mov
xchg
jo
stos
pusha
or
sub
push
sub
dec
stc
movsl
repnz
cltd
xlat
shll
bound
jne
lahf
jae
xchg
push
xchg
sub
popa
sub
inc
and
jnp
sbb
arpl
cli
sub
xchg
lret
lea
mov
xor
adc
cmp
cmp
cld
leave
sbb
xchg
fisubrl
cmp
imul
call
xchg
cli
movsb
lea
test
aaa
mov
ret
xor
push
lahf
xchg
jge
js
out
pop
shrl
loopne
mov
jp
sub
shlb
dec
sub
loop
sub
push
pusha
add
push
mov
data16
mov
push
jge
cld
push
popa
mov
jmp
bound
pop
sub
pop
push
sbb
ret
xor
das
adc
sbb
dec
mov
xor
push
ds
pop
cltd
mov
aad
cmpl
call
push
out
mov
movsb
pop
into
ss
test
ja
lods
test
dec
xlat
dec
lahf
and
sub
inc
push
cwtl
or
fadds
mov
cmp
je
lea
loop
pusha
pop
nop
sub
push
jp
je
dec
push
xchg
cmp
loopne
loope
or
push
dec
rclb
push
call
inc
or
dec
add
rcll
dec
jbe
and
pop
inc
popf
or
mov
mov
xchg
add
dec
fnsave
test
mov
sub
call
add
daa
ss
pop
daa
push
dec
and
test
nop
push
lock
xor
pop
out
adc
mov
xor
jne
fisubrl
mov
push
aaa
push
sbb
mov
jge
mov
mov
out
mov
or
ret
ss
idiv
push
aaa
jle
cmp
rorl
cmpsl
or
mov
loop
fwait
inc
jle
aad
pop
sub
cmp
dec
fldt
and
xor
push
cltd
pop
dec
rcr
cmpsl
ss
fs
lods
add
call
mov
aaa
int
cmpsl
mov
mov
pusha
in
imul
pop
cmp
jmp
and
xchg
dec
xcrypt-cfb
cmpsl
in
jle
dec
mov
xchg
xor
daa
sbb
jae
stos
xor
adc
cli
and
xor
in
ljmp
mov
sub
or
pop
ss
and
fsts
cwtl
fnstcw
push
lods
mov
mov
pusha
xchg
das
je
add
sbb
dec
pop
mov
gs
int
jl
add
call
mov
xlat
leave
stos
sbb
in
pop
stos
add
mov
mov
and
mov
inc
add
mov
aaa
ljmp
cmp
imul
ja
cmpsl
jbe
aam
cmp
rorl
out
add
std
xor
mov
or
mov
or
lods
mov
xor
addr16
push
cmpsl
pop
sarl
fsubr
xchg
test
mov
adc
jle
mov
std
scas
cwtl
jo
addl
cmp
push
aaa
jle
cmp
shll
add
jo
add
call
sbb
inc
adc
jae
add
xor
jne
mov
pop
cltd
push
mov
sub
xor
inc
rol
jbe
sbb
pop
or
push
sub
cltd
lds
lods
lret
jge
lock
imul
cmp
nop
and
cs
ljmp
jge
mov
add
mov
pop
jecxz
cli
cmp
adc
out
insb
and
or
inc
icebp
int3
xchg
mov
sti
dec
fdiv
das
pop
mov
add
jmp
mov
inc
loopne
dec
push
rolb
add
call
inc
mov
lods
ret
push
push
aas
addb
movsl
std
sub
dec
jmp
push
fisubrl
and
jne
push
inc
mov
mov
xor
imul
sub
pop
rclb
xor
push
and
jge
xchg
daa
test
cmp
jb
jp
adc
inc
je
sub
xor
icebp
clc
jno
xor
inc
js
into
movsb
inc
in
sbb
jmp
aas
xchg
pop
outsb
sahf
inc
cwtl
push
and
jg
mov
dec
cmc
push
mov
call
sbbl
aaa
cmpl
scas
pop
shll
rcrl
push
lcall
pop
iret
js
mov
fadd
test
cmpsb
xchg
les
popa
push
add
sub
test
dec
pop
data16
xchg
cmp
mov
xacquire
xchg
mov
xchg
adc
test
push
outsb
pusha
inc
fs
sub
and
mov
adc
pop
imul
inc
test
cmp
add
cwtl
dec
movsl
mov
in
ljmp
call
cmp
inc
lcall
popf
mov
in
popa
fadd
xor
add
rcl
jno
xor
fs
xchg
push
mov
add
or
icebp
xchg
rclb
sbb
aaa
test
repz
mull
aam
jne
leave
push
push
int
push
in
xchg
jmp
push
imul
xor
mov
pop
cmp
mov
shl
mov
dec
repnz
jg
xchg
and
inc
or
mov
cmp
lahf
push
add
mov
and
sti
sbb
cwtl
clc
imul
add
call
mov
daa
inc
mov
mov
das
jmp
push
xor
jb
inc
test
mov
jmp
xorb
and
and
daa
jge
insl
sti
push
clc
movsb
movb
jge
lods
insl
push
out
mov
aaa
movsl
shr
inc
mov
imul
sub
pop
and
ret
xor
xchg
push
insb
das
push
pop
stos
stos
cwtl
mov
lock
mov
js
and
pop
or
xlat
dec
inc
jl
orl
inc
dec
loopne
push
inc
push
out
mov
aaa
add
call
shlb
hlt
push
mov
stos
add
dec
mov
cltd
inc
and
inc
fs
repz
jmp
jnp
arpl
xacquire
mov
call
add
pusha
inc
lock
xchg
pop
or
sub
pop
cmp
cmp
mov
pop
imul
jp
std
negl
js
xor
sbb
xchg
clc
in
ljmp
add
cmpsb
jg
sub
pop
lret
add
adc
mov
jbe
pop
inc
insl
jp
mulb
add
call
aam
push
sub
rcrl
and
lods
addl
xor
and
push
jl
out
pop
cmpl
insl
call
movsb
inc
in
sbb
jmp
aas
xchg
pop
outsb
sahf
inc
cwtl
push
and
jg
cmp
push
sub
pushf
pop
push
cmp
cltd
inc
and
inc
fs
sbb
push
imul
xchg
cwtl
add
pop
adc
aad
jg
xlat
negb
inc
cmpsb
push
cmpsl
cmp
dec
cmp
jecxz
ljmp
call
ss
jns
mov
sub
dec
dec
sub
daa
xchg
add
pop
dec
ss
pushf
push
mov
ljmp
dec
pusha
rcrb
lds
push
sbb
in
aam
sahf
repz
mov
cld
aad
inc
sarb
cwtl
cltd
cmp
mov
test
mov
imul
sbb
loopne
mov
cmp
out
sti
sub
pop
mov
jp
xchg
mov
sbb
mov
sbbb
pop
in
add
call
mov
xchg
jo
stos
pusha
or
sub
adc
mov
xor
movsl
jns
mov
in
test
out
insl
enter
adc
cmp
hlt
into
fidivrl
mov
loopne
out
sbb
sub
out
push
lahf
daa
dec
push
cmp
push
lahf
stc
lret
mov
cld
jb
xor
push
dec
xchg
mov
adc
insb
pop
and
mov
lock
push
xor
add
shll
stc
jno
icebp
sub
lock
outsl
xor
dec
push
mov
call
xor
xchg
sbb
pop
dec
mov
mov
cmp
cmpl
pusha
jmp
dec
into
jne
lret
out
leave
mov
sub
add
mov
pop
in
cmp
gs
mov
mov
into
mov
sub
sbb
aas
xlat
adc
pop
movsb
mov
dec
push
mov
inc
fdiv
and
inc
and
shlb
repz
push
adc
sahf
push
insb
test
aad
mov
enter
aaa
dec
shl
add
call
pusha
xchg
mov
jne
mov
lock
outsl
xor
dec
push
mov
add
jle
xchg
jne
or
dec
jmp
mov
test
or
dec
jnp
nop
pop
cwtl
sbb
mov
xchg
sub
fwait
ret
cmpsl
inc
sarb
out
pushf
std
push
je
cmpl
inc
js
fldl
add
mov
popa
xchg
pop
mov
and
jae
data16
lcall
in
stos
negl
jle
negl
sbb
cmp
add
call
lcall
cmpsl
dec
stc
orb
dec
jnp
mov
stos
jp
xor
xor
pop
out
mov
xchg
or
cmc
dec
loope
ja
pop
cmp
call
ret
lock
stos
movsb
pusha
into
xchg
push
dec
ljmp
fwait
mov
sub
lcall
jb
jbe
sbb
sub
insb
jns
or
lcall
int
push
ja
stc
inc
clc
push
mov
jge
out
arpl
shlb
fcomps
sub
mov
call
lcall
jmp
push
test
push
aad
mov
clc
cli
sub
sub
and
jg
mov
into
jne
cs
mov
pusha
sub
fstps
es
add
fwait
add
dec
xchg
mov
jecxz
cmp
je
bound
mov
bound
in
jae
add
cmc
sub
dec
add
int
mov
pop
out
out
cwtl
ret
mov
xchg
jae
mov
jp
mov
add
add
call
stos
jecxz
and
sub
pop
xchg
stc
xor
orb
pop
adc
lods
inc
clc
mov
imul
sbb
imul
andb
stc
fildl
nop
mov
dec
ljmp
pop
inc
repnz
dec
dec
std
mov
mov
fdivs
inc
in
imul
negb
or
push
mov
mov
test
aaa
xchg
sbb
add
mov
fwait
add
call
sahf
sbb
cmp
scas
xlat
test
stc
orb
push
lock
push
inc
push
flds
cmpsl
push
aas
std
inc
inc
pop
out
jno
xchg
insb
lahf
adc
sub
cmp
das
mov
dec
inc
es
ficomps
or
adc
xchg
test
mov
xchg
push
cmp
or
xchg
and
sub
insb
jns
jb
sbb
xor
and
or
push
ja
stc
inc
clc
push
mov
jge
xor
sti
inc
test
sub
add
call
sub
mov
test
dec
cmp
fucomip
js
test
push
js
orb
adc
push
shll
dec
cmp
and
jg
mov
into
jne
xlat
imul
repz
clc
jnp
decb
xchg
negl
sbb
push
arpl
jecxz
cmp
je
mov
cmpsb
jmp
clc
sti
jns
lahf
outsb
push
and
cmc
sub
lcall
cwtl
ret
adc
sarl
movsl
inc
insb
mov
call
scas
loop
sbb
pop
stos
jecxz
and
lret
ljmp
xor
orb
pop
shlb
fst
mov
in
leave
mov
xlat
pop
insb
jnp
arpl
ss
adc
movb
inc
inc
movsb
cmp
jb
push
shll
fcoms
push
aas
std
inc
inc
pop
out
lods
adc
inc
imul
aaa
test
loop
xor
xchg
mov
dec
cmpsb
jg
imul
popf
ss
aam
xchg
pop
sub
call
nop
je
cmc
lods
repnz
fisubrs
jo
xchg
sbb
in
rcrb
loopne
lea
jbe
stos
inc
mov
into
mov
mov
fdivs
repnz
dec
testb
dec
movsb
fcoms
dec
mov
jge
mov
add
add
fisubrl
inc
aaa
mov
jmp
inc
sbb
push
les
lcall
daa
push
push
inc
xchg
or
fmul
xor
xchg
and
pop
or
push
add
push
inc
mov
push
lods
fmuls
adc
pop
inc
push
add
call
xchg
iret
adc
xchg
mov
shll
popa
stc
test
mov
mov
jae
cmp
sub
dec
mov
fucomip
js
test
ret
cmp
push
pop
mov
sub
dec
imul
int
and
mov
sbb
cld
cmp
push
sti
inc
insb
dec
lcall
xrelease
insl
cs
fbstp
fnstenv
mov
dec
data16
dec
push
jg
bound
xor
inc
inc
pop
cmp
gs
add
call
cmpb
mov
inc
sbb
inc
ficoml
and
add
pusha
popa
pushf
je
movsb
ja
xchg
mov
cwtl
cmc
or
sub
push
popa
fisttpl
and
mov
sub
add
cmp
insl
or
jno
int3
insb
push
fwait
clc
add
mov
in
sub
lock
int
std
or
inc
push
lret
cmpsl
xor
and
adc
rolb
test
arpl
ja
fisttpl
inc
mov
mov
mov
and
call
fwait
andb
push
and
scas
movsb
icebp
roll
out
dec
mov
push
pop
pushf
cmp
inc
sbb
loope
arpl
mov
inc
imul
xchg
or
or
push
arpl
out
xor
push
and
into
or
pop
inc
ja
enter
shll
shll
lahf
leave
clc
in
add
xchg
in
int
mov
jb
negl
stos
jbe
std
js
mov
dec
pusha
in
testl
pmaxsw
and
call
add
xchg
jne
jo
lods
mov
sub
ret
test
cmc
inc
ds
cmp
popf
aam
mov
inc
enter
cmp
stc
inc
loop
dec
out
xor
lock
push
orb
jno,pt
hlt
adc
sub
jg
shll
mov
cltd
jge
jmp
dec
jge
mov
loopne
inc
pop
movsb
or
test
not
std
icebp
test
mov
or
lret
fsubp
aam
movsb
sti
push
add
call
aaa
add
gs
sahf
xor
ucomiss
dec
daa
add
xchg
fs
dec
je
call
and
sbb
jae
in
mov
push
fsubrs
aam
add
sbb
cmpsb
repz
and
adc
mov
mov
into
ret
pop
fsts
mov
shlb
test
repz
and
mov
add
pop
stc
xchg
in
shrb
scas
out
data16
xor
pop
sub
rclb
lgs
call
loopne
shr
jp
sbb
mulb
and
dec
mov
jbe
pop
movsb
mov
mov
dec
cltd
jo
pop
and
cli
sbb
int
and
add
mov
cmp
xchg
jge
push
or
mov
decb
rep
jb
loopne
sub
test
aas
scas
repnz
dec
out
scas
add
push
in
aam
dec
loopne
sahf
orl
fdivs
in
stc
mov
sub
inc
or
fwait
aad
rcr
mov
call
repnz
adc
lea
adc
pop
cmpsl
xor
xor
sahf
sbb
dec
jle
jns
out
cmp
out
mov
mov
xor
jbe
pop
movsb
mov
dec
push
mov
das
imul
loop
call
cli
and
jg
mov
into
jne
shr
cs
scas
xchg
dec
adcb
movsb
negl
sbb
cmp
scas
xlat
test
stc
orb
cmp
add
call
movsb
js
lds
push
aas
std
inc
inc
pop
out
ja
imul
pushf
jne
clc
xchg
or
jmp
add
mov
cld
adc
repnz
ficomps
sub
shll
testb
rcrl
adc
stc
mov
test
xchg
sub
insb
jns
inc
test
out
or
push
ja
stc
inc
clc
push
mov
jge
dec
mov
push
and
sub
sbb
jno
mov
test
dec
cmp
fucomip
js
test
in
sbbl
call
push
test
dec
imul
int
and
inc
jg
mov
mov
arpl
jmp
stos
and
gs
mov
cmp
cmpsb
jne
push
je
cmpl
imul
fstpl
cmp
imul
jg
push
jbe
pop
movsb
mov
mov
dec
cltd
jo
repnz
orb
xor
mov
js
push
pop
dec
push
mov
frstor
lds
shlb
sub
and
add
call
rep
jb
loopne
mov
adc
mov
jle
cwtl
je
sbb
mov
dec
daa
cmpsb
popa
xor
loope
rol
xorps
mov
pop
dec
push
jne
dec
jle
popa
cmp
outsb
ss
add
orl
cmp
repnz
lods
dec
sarb
sti
mov
xlat
cmp
aad
xchg
int
mov
sub
mov
push
xor
imul
adc
or
icebp
jmp
sbb
clc
subl
jle
ljmp
add
mov
add
call
sbb
test
and
xchg
xor
jno
mul
push
and
repz
loopne
adc
fisttps
and
fs
cmpb
sti
sub
mov
add
mov
jge
mov
in
out
and
sub
xchg
loope
imul
mov
inc
mov
xor
call
mov
test
bound
je
ss
pop
std
int3
push
imul
inc
xor
xor
cmp
call
sbb
ja
jle
rcrb
or
cld
xchg
adc
mov
aam
int3
sub
mov
xor
push
les
mov
sub
in
cli
paddw
add
rorl
jmp
les
add
add
nop
sbb
jns
or
repnz
std
in
xor
adc
or
sub
adc
out
rolb
in
or
adc
test
push
dec
loopne
jl
fisttpl
xor
add
call
adc
push
movsl
leave
daa
xchg
and
sub
je
jl
scas
jp
cmp
mov
negl
test
dec
repnz
inc
xor
bound
mov
aam
push
inc
pop
xor
imul
mov
ret
xchg
mov
andb
sbb
mov
std
sbb
iret
sbb
or
xchg
outsl
xchg
sahf
fnstcw
sub
xor
loopne
fbstp
insb
cmp
mov
fsubrl
outsb
in
xchg
add
call
cmp
ret
repz
out
clc
xor
icebp
dec
cmp
add
cmpsb
inc
inc
jecxz
mov
sahf
xchg
mov
fwait
jo
jl
mov
fpatan
andb
movsl
fsubrl
jmp
aad
loope
repnz
dec
mov
xlat
push
pop
scas
aam
inc
xor
cmpsb
rol
divb
sub
cmc
xor
mov
sub
or
jbe
test
mov
shll
les
jg
bound
les
jecxz
lcall
call
push
jbe
pop
movsb
mov
dec
mov
test
stos
push
nop
sbb
data16
ljmp
sub
cli
mov
xchg
inc
mov
shr
rcr
dec
xor
shl
cmp
inc
and
loopne
outsb
into
add
sahf
shrb
out
sbb
push
test
mov
ds
xchg
nop
rcrl
dec
add
jmp
hlt
into
leave
mov
cmc
mov
movsl
mov
mov
fsubs
inc
xchg
push
jecxz
add
call
jg
shrb
lds
lahf
fadds
es
jo
jo
jnp
icebp
dec
jno
mov
add
sub
mov
jbe
sub
jne
and
sub
je
mov
pop
jg
outsb
mov
add
mov
ret
xor
bound
mov
and
in
mov
imul
mov
ret
xchg
mov
andb
sbb
mov
aas
dec
arpl
add
call
repnz
out
dec
mov
shll
loop
sub
int3
mov
sbb
push
cmc
or
push
outsb
in
xchg
push
mov
xchg
xchg
dec
push
out
lea
aaa
mov
mov
ss
or
lods
or
fidivl
xor
rolb
repnz
fsubrl
nop
mov
adc
and
cmp
pushf
loopne
xchg
push
js
jg
mov
loop
mov
mov
fsubl
insl
add
call
in
imul
test
sahf
cltd
sbb
xor
push
es
inc
lods
sub
adc
add
test
das
jmp
aad
cli
and
jg
je
jle
mull
nop
jns
mov
lret
imul
addl
pop
mov
cmp
inc
hlt
mov
mov
mov
leave
push
jnp
das
out
je
dec
lahf
push
into
test
iret
stos
mov
mov
and
push
and
shrl
jg
sahf
add
call
dec
arpl
xchg
pusha
je
adc
in
shlb
add
ja
imul
and
sub
subb
adc
pop
fsubp
fiadds
aad
inc
pop
repz
cmp
push
or
pop
fldln2
je
faddl
inc
pop
jmp
jbe
sub
cli
std
movsb
jl
xchg
xchg
rcrl
or
mov
cmpsl
loop
mov
add
fs
sbb
jl
andl
ret
repnz
add
call
cmpsb
lea
xchg
inc
mov
bound
push
add
mov
and
es
out
ret
inc
mov
jle
xchg
je
data16
test
in
pop
dec
ja
mov
xor
xchg
imulb
lcall
das
insl
fdivrl
cmpsl
xor
xchg
cmp
mov
dec
div
mov
cwtl
stos
dec
into
addr16
push
fstpl
xor
jmp
out
mov
inc
ljmp
jge
dec
xchg
ljmp
call
fistpll
imulb
push
xchg
cmp
dec
int
ja
inc
pop
jns
sbb
xor
mov
xchg
clc
pusha
dec
arpl
pop
sbb
adc
pop
push
jecxz
jno
cmc
frndint
lea
divl
or
ror
loope
jo
add
mov
mov
in
es
lcall
movsl
test
sbb
lcall
pop
test
in
pop
jns
lret
fwait
sahf
push
xor
xor
jno
inc
lea
shll
inc
xor
dec
fistpll
add
call
test
mov
loope
dec
mov
in
shrl
pusha
sub
movsl
add
subb
test
sbb
ds
rcrl
shlb
push
pop
sub
stos
xchg
push
mov
aas
dec
call
xchg
ficomps
or
xor
addb
push
das
das
loope
lods
mov
rorb
push
int3
push
push
psubb
in
and
into
movsb
inc
in
sbb
jmp
aas
xchg
pop
mov
adc
jno
insl
jns
adc
xlat
pop
sbb
add
call
mov
adc
pop
push
sub
pop
push
fs
inc
inc
dec
mov
add
and
mov
or
cmp
xchg
jo
movsb
jno
push
pop
loopne
aas
pop
xlat
movsl
test
data16
add
mov
push
jno
sub
xchg
shlb
inc
mov
lock
inc
sbb
pop
or
xorl
test
jnp
add
jns
adc
je
jo
mov
and
arpl
pop
add
call
dec
inc
mov
cmp
jg
out
xor
inc
mov
test
je
add
shr
stos
jne
jo
lods
mov
leave
inc
leave
mov
icebp
and
pop
push
and
inc
push
cmpsb
push
imul
ret
inc
scas
test
dec
cmp
dec
jb
scas
ret
cmpsb
lea
pop
ret
cmpb
fsubrs
inc
dec
pop
mov
cwtl
xor
pop
rclb
and
jae
rolb
insl
push
mov
cld
lods
jno
dec
add
call
insb
xchg
mov
dec
xor
jne
push
or
leave
pop
lcall
sbb
popa
sbb
jne
cmpsb
leave
enter
push
fsubp
aam
ss
adc
hlt
aas
mov
xchg
or
in
xchg
adc
sbb
loope
shll
pop
out
pop
lods
bound
or
sbb
loope
and
pop
adc
sbb
es
inc
mov
in
xor
cmp
inc
push
enter
push
shlb
sbb
cli
imul
add
call
push
push
or
adc
pop
movsl
rcl
loopne
xchg
mov
mov
jne
sbb
xchg
fs
inc
ret
scas
sub
rclb
sti
insl
jns
xor
je
cmp
add
lahf
xorl
repnz
aam
mov
out
shll
pop
xor
arpl
mov
loop
and
aam
popa
and
inc
mov
sub
bound
cwtl
push
movsb
lods
fldl2e
insb
mov
mov
pop
pop
fs
cmp
call
cmp
mov
xor
fisubs
outsl
jmp
loop
out
js
and
pop
packsswb
push
cmp
xlat
fnsave
arpl
lret
push
popf
push
pop
js
inc
cmpsb
or
lcall
sub
insb
lahf
dec
xor
enter
lcall
inc
aas
and
jns
rcrb
sarl
ret
cmpsl
aad
into
movsl
scas
loope
dec
mov
insb
inc
push
leave
xchg
bound
cli
jl
mov
push
jle
fsubrp
dec
scas
push
xor
sub
ret
jae
add
call
mov
sbb
lock
shl
pop
sbb
test
stos
mov
movsl
dec
out
push
lret
rorb
cmp
add
ja
and
movsb
fwait
andb
push
and
jmp
cs
out
mov
addr16
jno
dec
adc
xlat
lahf
cmp
stc
movsl
lock
cmp
xchg
sbb
sub
inc
roll
sub
sarb
jnp
sub
fimull
in
sub
dec
ja
jl
jmp
push
push
rolb
repz
call
sub
pusha
insb
loopne
and
and
sub
push
inc
sbb
scas
jo
lods
inc
xchg
jne
pop
dec
aas
and
nop
scas
outsl
push
or
mov
sub
nop
mov
rolb
sahf
mov
cmp
das
jnp
mov
in
rcll
xor
cltd
cmp
fs
jo
pop
outsl
dec
fcmovbe
andb
mov
cmp
ds
movsb
xor
jo
cmpsl
adc
dec
das
inc
gs
shll
jae
enter
mov
add
call
push
andb
cltd
jle
pop
clc
sbb
jb
in
inc
addr16
lret
popf
mov
out
mov
pop
aad
inc
mov
cmp
jg
out
xor
inc
mov
test
je
add
shr
stos
jne
jo
lods
mov
insl
mov
divb
or
mov
out
mov
je
jnp
ret
inc
scas
mov
xorl
pop
sub
scas
ret
mov
and
mov
push
or
into
push
mov
call
dec
pop
mov
cwtl
xor
aas
push
cmp
imull
mov
out
imul
xcrypt-cbc
cmpsl
xchg
jp
fcompl
pushf
testl
icebp
sub
and
pusha
in
fs
pop
outsb
dec
lods
mov
bound
rorb
cmc
lea
leave
mov
mov
cmpsl
fwait
sub
hlt
jp
and
mov
sti
mov
or
cld
xchg
adc
mov
push
xor
mov
xor
push
xchg
imul
and
mov
aad
addl
call
inc
popa
xchg
mov
lock
pop
add
ret
loop
shrb
inc
loope
addr16
pop
dec
test
dec
adc
scas
roll
loope
jbe
fsubl
cmp
xchg
sbb
xchg
dec
jg
scas
mov
jl
sub
sarb
jnp
sub
fimull
in
sub
dec
ja
jl
aam
sbb
jmp
add
or
stos
pop
and
and
and
sub
push
inc
sbb
add
call
jo
lods
inc
or
or
movsb
sahf
sub
or
xchg
jge
inc
mov
jnp
sbb
cmpsb
popa
sahf
pop
sbb
jecxz,pt
sbb
ret
mov
clc
mov
jmp
mov
bound
mov
adcb
cmp
jge
mov
adc
nop
aad
or
ret
xchg
nop
aam
pop
movlps
dec
jmp
popa
dec
jge
sbb
adc
rolb
push
mov
and
inc
stos
adc
rolb
call
lds
mov
mov
jne
pop
cltd
jb
adc
nop
sbb
sbb
inc
push
repz
jne
into
test
loopne
mov
push
mov
jecxz
daa
dec
mov
push
xchg
mov
mov
sbb
add
xchg
push
lods
cmp
push
into
mov
add
mov
jg
cmp
mov
jmp
in
aad
imul
hlt
pop
setne
mov
insl
rorl
shlb
sbb
lahf
call
call
movsb
dec
cmp
push
imul
pop
mov
fldl
jae
xlat
aaa
lcall
or
dec
or
not
sub
pusha
push
das
mov
jae
lcall
add
xchg
adc
jge
and
or
sub
pop
outsb
xchg
push
bound
addl
pop
pushf
iret
repnz
test
ret
test
ficompl
mov
fwait
out
mov
outsb
lods
fdivs
cld
loope
add
call
out
mov
in
gs
in
popf
jo
jp
daa
ss
and
imul
inc
pop
repnz
push
fdivr
cltd
ja
jnp
mov
cmpsl
and
ja
fwait
or
xor
rorl
jb
rclb
jae
dec
xchg
ss
lods
mov
inc
outsb
arpl
aaa
fdivl
insl
lcall
adc
in
sar
jmp
adc
fcomip
aas
mov
xchg
or
in
xchg
loopne
cmpsl
cltd
add
call
sahf
sarl
loope
shll
adc
pop
mov
add
imul
filds
cld
loope
and
pop
adc
sbb
es
inc
mov
in
xor
out
cmpsb
lcall
cmpsb
fdivl
xchg
int
ja
mov
mov
clc
mov
cwtl
rorl
dec
mov
adc
mov
insl
inc
hlt
push
add
and
jne
push
xor
and
das
cmpsb
in
add
call
pusha
dec
mov
jbe
push
mov
les
jns
icebp
or
pop
subb
push
je
ret
lcall
jle
push
add
xor
imul
lock
sti
push
cmpsl
pop
lea
js
rorl
pusha
mov
dec
xor
inc
push
pop
xchg
pop
jg,pt
adcb
lret
inc
push
sahf
adc
je
add
xchg
stos
cmp
fisubrs
fisubs
xchg
xlat
aaa
lcall
or
dec
or
testb
call
aaa
jl
cmp
repnz
jae
lcall
add
xor
jns
mov
cmc
and
inc
xchg
lahf
jae
pop
in
aad
xchg
in
mov
add
pop
outsb
lock
pop
loopne
adc
pop
mov
loopne
fbld
sbb
sub
ret
xchg
dec
les
decl
hlt
cmpsb
jecxz
sub
mov
shlb
and
pop
mov
xor
inc
cli
fildl
in
ret
jp
mov
add
call
lahf
imul
shrb
or
add
xchg
cs
jge
xchg
inc
jno
lret
gs
aas
sub
xor
dec
mov
cmp
fwait
sahf
push
xor
xor
orl
jecxz
stc
pop
scas
sub
int
sub
mov
stos
test
mov
out
testl
pop
push
push
mov
call
add
loope
insb
mov
xor
mov
js
and
add
call
push
mov
mov
rcrl
mov
sahf
jb
mov
movsl
test
test
lds
scas
loopne
sub
test
xchg
push
daa
test
es
dec
jo
shlb
enter
ficompl
test
enter
mov
ja
rolb
xchg
push
mov
xchg
cmpsl
test
push
and
out
and
cmp
fsubrs
out
push
jns
in
adc
inc
adc
fwait
cli
mov
mov
fisubrl
lods
mov
jno
sarl
push
jne
sbb
add
call
jge
adc
mov
imul
in
lret
push
push
jmp
cmpsl
dec
adcb
scas
idivb
jmp
sbb
das
mov
mov
int
mov
ss
negl
push
mov
mov
cli
ss
adc
cmp
sbb
fildll
or
filds
test
adc
lods
int3
inc
or
pminub
xchg
loop
and
fstpt
jecxz
daa
dec
mov
inc
fcmove
icebp
dec
je
sub
mov
add
call
mov
add
push
sub
mov
add
rcl
test
in
popa
mov
popa
ss
and
cmp
xchg
sbb
test
in
test
and
mov
adc
mov
or
sub
dec
ja
jl
ret
idiv
xchg
mov
popa
roll
add
pusha
orb
stc
scas
or
push
lods
mov
fstps
mov
mov
and
sbb
gs
insb
lods
inc
fsubs
dec
lods
and
sarl
inc
hlt
mov
mov
mov
call
add
leave
push
jnp
das
out
je
dec
lahf
push
into
test
iret
stos
mov
mov
and
push
and
mov
dec
push
adcb
pop
mov
aad
adc
in
shlb
add
lahf
xlat
dec
ja
imul
and
repz
cmpsb
adc
popa
adc
pop
fsubp
mov
int
sub
mov
roll
je
inc
add
jns
loop,pn
and
pop
sarb
add
add
call
cs
fldl
or
cltd
in
test
popf
loop
mov
add
fs
test
cmp
repnz
popa
cmpsb
and
xchg
xchg
or
ljmp
inc
mov
cld
scas
adc
stc
es
out
ret
inc
mov
jle
xchg
je
data16
test
or
int
jne
jbe
in
imul
mov
lahf
popf
mov
add
mov
mov
pop
xlat
scas
jle
sbb
jmp
inc
rep
les
or
add
call
out
in
test
mov
fsubrl
fstps
xchg
fs
inc
ret
scas
sub
rolb
sbb
outsb
jne
sbb
pop
push
push
aad
inc
sub
push
pop
out
and
inc
dec
inc
cli
cmp
or
cmp
dec
in
adc
xchg
push
lods
add
mov
push
mov
aas
sub
xor
dec
mov
cmp
fwait
sahf
push
xor
xor
xchg
xchg
jmp
pop
jl
pop
jecxz
mov
call
bound
sbb
dec
testb
or
inc
stos
les
push
fsts
ljmp
in
and
mov
adc
inc
push
jmp
call
ljmp
mov
ds
jp
and
je
add
ret
jns
mov
fs
in
push
aam
rclb
or
inc
icebp
or
cld
xchg
adc
mov
xchg
addr16
cld
arpl
fidivs
lcall
or
dec
das
cmpsb
sbb
add
bound
add
call
adc
popw
js
push
jge
test
sbb
outsb
push
push
cmp
aad
sub
push
repnz
andb
xor
mov
movsl
cmp
ss
jg
faddp
cmp
or
loopne
sti
jne
mov
stos
ffreep
or
nop
stos
int3
fisubrs
mov
cmp
ds
in
enter
adc
movsb
fidivl
cmpsb
xchg
xor
fdiv
nop
inc
mov
pop
bts
out
lds
stc
shlb
mov
lods
jno
ja
push
mov
call
ja
mov
lcall
dec
pop
orb
rol
stos
xor
mov
push
jmp
jne
jbe
rcl
push
shrl
pop
in
cwtl
sub
ror
jmp
mov
sub
pusha
push
das
mov
loop
push
mov
jne
jo
lods
mov
mov
cmp
inc
jp
cli
mov
cmpsb
pand
aas
hlt
jg
xor
add
xor
rorl
cmp
mov
xor
das
lret
les
or
adc
pop
movsl
rclb
call
jb
jo
aaa
ss
iret
repz
negb
xchg
fs
inc
ret
scas
sub
rcl
mov
mov
stos
sbb
or
add
icebp
push
xchg
movsl
loope
or
mov
mov
addr16
mov
xorl
pushf
xchg
inc
mov
shr
rcr
dec
xor
shl
cmp
inc
and
loopne
outsb
into
add
sahf
shrb
out
sbb
push
test
mov
fcmovbe
nop
mov
call
cmp
mov
sub
jmp
hlt
into
leave
mov
in
rclb
imul
adc
push
sbb
and
popa
and
sbb
sbb
aaa
std
cmpsl
shrb
std
ret
sub
dec
fs
call
lret
xchg
push
sbb
push
push
dec
loopne
jl
mov
inc
xchg
xchg
mov
ret
mov
sub
je
addr16
lea
mov
rcrb
sahf
add
das
pop
in
jns
call
mov
imul
add
call
push
pop
xor
imul
mov
ret
xchg
mov
andb
sbb
mov
push
ret
into
cmp
inc
loope
xchg
sarl
jg
dec
xchg
cmc
push
lahf
sbb
lahf
iret
pop
aas
out
fsubrl
nop
mov
adc
out
add
push
inc
loopne
push
mov
leave
mov
xchg
rclb
ret
inc
jge
aam
lods
fs
pop
pop
ret
negl
lret
addl
mov
fistpll
mov
pop
sub
call
pop
out
xor
inc
mov
test
je
add
shr
stos
jne
jo
lods
mov
fwait
fcmovne
xchg
push
pop
inc
loopne
jae
mov
jecxz
fadd
ret
xchg
bound
jle
inc
scas
cmp
adc
or
dec
scas
ret
int3
scas
out
mov
movsl
dec
repnz
mov
inc
dec
pop
mov
cwtl
xor
int3
sub
mov
std
jl
lret
lds
hlt
ficomps
in
and
mov
repz
lods
pop
dec
dec
add
add
call
ret
aad
pushf
pop
inc
adc
fwait
cli
mov
fisubrl
jle
mov
int
ds
sbb
dec
arpl
push
lea
cmp
in
mov
add
sar
mov
xchg
and
divb
in
add
xchg
fcompl
mov
adc
sahf
sub
lds
mov
in
mov
xchg
jo
stos
pusha
or
sub
push
rol
xor
jae
and
in
ret
lret
dec
inc
jmp
call
popf
lahf
jae
xchg
push
xchg
sub
popa
sub
inc
mov
shrb
cli
lret
lock
mov
ds
imul
sub
pop
mov
dec
loop
jb
and
push
xor
lds
imul
jnp
add
insb
jbe
jb
ret
je
pop
sbbl
cmp
mov
cmp
pop
and
jle
cmp
push
cmc
movsl
out
sbb
pop
dec
push
stc
mov
xchg
movsb
cmp
cs
mov
roll
dec
pop
push
in
add
call
push
js
pop
mov
lods
ret
inc
mov
push
pop
cwtl
xchg
pop
hlt
xlat
adc
hlt
ja
js
out
and
push
cs
add
test
movsb
cmp
push
cmc
movsl
out
sbb
sti
dec
pusha
arpl
scas
mov
push
inc
jb
xlat
ss
add
loope
mov
lcall
or
scas
lahf
stos
loop
mov
pushf
mull
xor
cmp
and
or
and
jle
cmp
push
cmc
movsl
out
sbb
and
add
call
mov
repnz
pop
enter
push
dec
dec
lock
sbb
cmp
push
lret
adc
push
pop
mov
inc
cli
in
cli
push
add
rcr
sub
loope
fdivrs
mov
dec
inc
and
test
testl
leave
xor
add
mov
popa
sbb
setnp
jl
in
push
push
push
xchg
lcall
jecxz
and
xchg
call
popa
push
mov
sub
dec
ja
sub
in
mov
call
push
pop
lds
push
jns
lock
clc
rclb
lds
push
insl
add
popf
jnp
in
test
repz
mov
xchg
pop
mov
mov
icebp
pause
dec
push
lret
sbb
scas
sub
pop
adc
sub
movsb
jecxz
mov
clc
mov
or
push
in
push
nop
shld
add
sub
add
in
ror
pop
add
out
sbb
mov
pusha
dec
repz
and
push
test
mov
call
dec
lock
sbb
test
xchg
jg
lods
inc
es
xor
push
push
push
int3
inc
pop
adc
jb
popa
pop
iret
sub
popf
mov
mov
mov
add
push
aad
cmp
into
outsl
push
ja
and
inc
fcomp
movsb
mov
push
pop
cwtl
xchg
nop
push
movsl
cmp
push
push
add
dec
lds
popa
aad
mov
push
push
inc
stos
adc
mov
roll
inc
addr16
pop
lds
push
mov
repz
call
arpl
leave
mov
jecxz
or
xchg
or
jns
jecxz
dec
mov
test
rorb
sbb
push
push
mov
mov
fs
aam
aas
repnz
sub
pop
adc
addr16
pop
jns
cmp
mov
mov
movsl
mov
add
add
fisttpll
mov
aas
aam
and
test
or
sub
adc
pop
daa
daa
and
mov
daa
xchg
add
cmpsb
pushf
xor
into
mov
mov
stos
out
add
call
shr
xchg
lret
arpl
mov
sbb
fisubrl
xor
cli
mov
iret
jnp
lds
push
pop
xchg
gs
daa
cli
inc
out
ret
hlt
dec
or
shr
push
cmp
cmp
pop
sub
mov
loopne
lret
fcmove
fimuls
out
mov
lods
jo
ds
mov
push
out
mov
sub
dec
loopne
sahf
orl
aam
dec
aad
pushf
fldt
push
mov
xor
lock
test
mov
mov
jbe
sahf
scas
into
jo
mov
call
jle
xchg
lahf
jb
push
dec
cld
jp
inc
or
sti
imul
pop
push
mov
dec
cli
inc
std
ret
stos
icebp
dec
mov
jne
cmp
aas
jne
inc
sbb
jo
inc
insl
and
and
jl
fistpl
cmp
insl
sahf
mov
scas
sub
sub
xor
dec
clc
in
clc
sub
jne
out
outsb
add
fcmovnbe
ja
aas
inc
or
or
stc
lock
xchg
imul
mov
shlb
add
call
loop
jl
ja
push
sbbl
mov
pop
lods
outsl
movsl
adc
mov
orb
dec
jg
push
mov
mov
std
mov
dec
notb
stos
hlt
enter
jbe
jno
orb
jge
movlps
imul
push
jmp
xchg
ljmp
inc
leave
stos
mov
loopne
cmp
stc
jg
roll
outsb
jns
push
stos
jb
mov
gs
scas
add
and
call
lods
pushf
add
and
or
add
stos
scas
ja
sbb
aas
out
jecxz
in
insb
pop
rorl
cmp
dec
xor
fdivrl
lahf
jae
xchg
push
xchg
sub
popa
sub
inc
cmc
cli
fldenv
push
pop
and
mov
scas
xlat
test
fwait
lea
stos
adc
cmp
and
and
jg
imul
cmpsb
dec
lret
sub
enter
push
sbb
sub
sbb
adcb
and
or
hlt
pop
es
xchg
add
call
rolb
push
mov
nop
cld
dec
divl
repz
test
and
cltd
or
fdivr
xchg
adc
mov
push
add
shrb
push
dec
dec
sub
lret
dec
hlt
xor
and
cli
cs
jbe
cmpsl
imul
mov
cmp
fimull
fsubp
pushf
cmp
or
out
rcl
add
adc
jl
push
lds
jge
lcall
inc
sub
inc
testl
std
jnp
sub
dec
sub
add
call
adc
add
mov
mov
das
lret
adc
or
mov
jae
jp
fwait
xor
rcll
mov
xor
cmpb
sub
mov
imul
adc
cmpsb
dec
lret
mov
or
in
xlat
mov
ss
mov
mov
cmp
mov
cmp
or
es
xchg
sub
jge
cltd
movsl
loop
fsubs
in
fisttps
mov
xor
test
jg
add
call
enter
push
push
arpl
and
stos
inc
mov
aad
cli
push
roll
lret
daa
dec
push
or
inc
test
adc
lock
and
fwait
cmp
add
and
roll
outsb
xor
xchg
push
fcoml
push
call
pop
hlt
js
mov
mov
mov
mov
in
stc
cmpsl
xchg
xchg
sub
add
daa
dec
mov
dec
ret
add
fiaddl
call
daa
ds
je
cs
nop
das
test
sub
jge
or
mov
push
push
push
sub
jb
adc
cli
xchg
sub
cs
cli
and
mov
push
imul
subl
jle
ljmp
mov
push
fdivl
mov
push
xchg
inc
out
pop
dec
adc
or
cwtl
pop
fwait
jp
mov
cmp
jne
add
shr
vmread
addr16
mov
fdivr
xchg
adc
mov
add
call
icebp
cmp
cmc
inc
xor
pop
sbb
xchg
cmp
and
fcmovu
repz
push
lds
sub
xchg
cs
pusha
cmpl
ja
jno
xor
in
pop
mov
pushf
in
test
jecxz
outsb
out
mov
cld
push
pushf
in
stc
cmpsl
xchg
xchg
fs
add
movsl
sub
jge
inc
imul
mov
or
sbb
and
shlb
ds
and
sbb
add
mov
jge
mov
je
mov
scas
mov
add
add
call
fwait
jp
xchg
mov
enter
jp
in
test
and
xchg
xor
jno
mul
push
and
repz
push
jge
imul
jae
sub
or
ret
inc
ret
jb
shl
sbb
mov
rclb
in
out
fucomi
out
pop
mov
mov
mov
inc
data16
xor
loopne
mov
add
cmp
jmp
xor
in
imul
adc
les
jmp
loope
push
add
call
push
jno
push
xor
lds
mov
pushf
mov
mov
and
out
jle
in
xchg
stos
ja
nop
pushf
stos
outsl
dec
mov
mov
add
sar
mov
ds
push
dec
addl
lock
testl
movups
cmc
inc
add
pop
push
test
rcrb
repnz
jmp
mov
lds
jmp
dec
cs
lods
insl
and
and
xchg
sar
scas
xchg
call
dec
pusha
pop
in
and
lea
andl
and
leave
adc
fwait
inc
jp
add
negb
pop
sti
and
mov
xor
das
ljmp
push
adc
cmp
ljmp
inc
lret
or
add
mov
jp
xchg
mov
aaa
cmpsb
je
push
into
push
mov
mov
and
pushf
xor
push
and
cmp
cs
fscale
mov
push
dec
sbb
clc
and
call
popa
xchg
sar
scas
xchg
pop
in
and
mov
imul
mov
mov
adc
fwait
inc
jp
add
negb
pop
sti
and
mov
aaa
lret
mov
jno
adc
cmp
ljmp
inc
lret
or
add
mov
jp
xchg
mov
aaa
cmpsb
je
fcmove
test
pop
push
test
rcrb
repnz
jmp
mov
xor
adc
aas
add
call
insb
xor
test
stos
fwait
data16
sar
scas
xchg
pop
in
and
push
out
nop
push
jbe
dec
cmp
movsl
mov
and
leave
adc
fwait
inc
jp
add
negb
pop
sti
and
mov
cmpsb
cmp
cmp
sbb
ljmp
inc
lret
or
add
mov
jp
xchg
mov
aaa
cmpsb
je
cli
dec
jge
xor
sub
pop
push
test
rcrb
repnz
jmp
mov
call
xchg
adc
stos
nop
fsubrl
pop
cmp
ss
and
xchg
sar
scas
xchg
pop
in
and
outsb
xchg
jb
fs
inc
cmp
movsl
mov
and
leave
adc
fwait
inc
jp
add
negb
pop
sti
and
mov
jecxz
push
ret
aas
scas
jno
adc
cmp
ljmp
inc
lret
or
add
mov
jp
xchg
mov
aaa
cmpsb
je
cmpsb
ljmp
or
xchg
pop
pop
push
test
rcrb
add
call
repnz
jmp
mov
loopne
adc
xchg
dec
stos
add
cmp
stos
fwait
data16
sar
scas
xchg
pop
in
and
dec
out
sbb
movsl
mov
and
leave
adc
fwait
inc
jp
add
negb
pop
sti
and
mov
and
jae
pop
aam
scas
jno
adc
cmp
ljmp
inc
lret
or
add
mov
jp
xchg
mov
aaa
cmpsb
je
out
and
and
pop
push
test
call
adc
rcrb
repnz
jmp
mov
movsl
sub
jb
data16
out
and
xchg
sar
scas
xchg
pop
in
and
fbstp
fwait
insl
fstpl
cmp
movsl
mov
and
leave
adc
fwait
inc
jp
add
negb
pop
sti
and
mov
insl
adc
cmp
scas
jno
adc
cmp
ljmp
inc
lret
or
add
mov
jp
xchg
mov
aaa
cmpsb
je
pxor
add
call
xlat
xchg
divl
push
test
rcrb
repnz
jmp
mov
loop
push
fiaddl
add
adc
and
xchg
sar
scas
xchg
pop
in
and
jg
adc
jecxz
cs
movsl
mov
and
leave
adc
fwait
inc
jp
add
negb
pop
sti
and
mov
dec
jns
and
jno
adc
cmp
ljmp
inc
lret
or
add
mov
jp
xchg
mov
call
stos
imul
aaa
cmpsb
je
dec
push
and
imul
and
pushf
xor
push
and
cmp
cs
push
pop
lods
roll
ss
arpl
stos
fwait
data16
sar
scas
xchg
pop
in
and
and
push
cmp
movsl
mov
and
leave
adc
fwait
inc
jp
add
negb
pop
sti
and
mov
cmc
int3
jg
loope
scas
jno
adc
cmp
ljmp
inc
lret
or
call
jns
pop
mov
jp
xchg
mov
aaa
cmpsb
je
arpl
test
pop
jge
aaa
pop
push
test
rcrb
repnz
jmp
mov
and
mov
and
xchg
sar
scas
xchg
pop
in
and
out
test
cmp
movsl
mov
and
leave
adc
fwait
inc
jp
add
negb
pop
sti
and
mov
out
outsb
loop
incl
aas
scas
jno
adc
cmp
ljmp
call
sub
inc
lret
or
add
mov
jp
xchg
mov
aaa
cmpsb
je
in
mov
dec
pop
push
test
rcrb
repnz
jmp
mov
repnz
push
out
cmp
inc
and
mov
popa
and
mov
sar
scas
xchg
pop
in
and
inc
or
lret
mov
cs
movsl
mov
and
leave
adc
fwait
inc
jp
add
negb
pop
sti
and
mov
test
sti
adc
dec
cmc
aas
scas
add
call
push
adc
cmp
ljmp
inc
lret
or
add
mov
jp
xchg
mov
aaa
cmpsb
je
idivl
mov
gs
push
test
rcrb
repnz
jl
sub
in
subl
popa
pop
stc
and
and
xchg
sar
scas
xchg
arpl
mov
cld
arpl
cmpsl
bound
into
outsl
mov
push
ljmp
das
sbb
orl
xchg
sbbb
add
call
loopne
lods
stc
mov
imull
subl
mov
jmp
xor
in
imul
mov
pop
outsb
adc
fistpll
cmpsl
jne
push
out
push
cs
popa
jle
sbb
es
push
sub
popa
sub
inc
je
xchg
jecxz
test
mov
and
inc
roll
outsb
jb
mov
mov
mov
inc
add
cmpsl
xchg
mov
xchg
jo
stos
pusha
or
sub
ficompl
call
out
imull
or
xchg
mov
lea
dec
jge
mov
or
testl
add
sbb
fists
out
xor
loopne
jge
sub
jge
std
jb
dec
cld
shlb
hlt
lret
repz
adc
sub
mov
rcrl
lods
stc
mov
neg
test
add
movsb
mov
fadds
loopne
dec
or
lods
xchg
hlt
dec
push
call
packssdw
xor
jge
in
insb
mov
jp,pt
cmp
or
jg
addb
mov
push
cmp
nop
int3
sbb
popf
jecxz
das
pop
shlb
ljmp
out
sbb
xchg
mov
mov
test
mov
cli
push
cmc
xor
push
mov
xor
xor
push
int3
jp
out
cmpsb
pop
push
cmpsl
hlt
jo
push
mov
inc
fadd
fstl
inc
cmpsl
ss
lods
mov
lea
cwtl
pop
add
call
add
xchg
lahf
inc
lret
and
or
hlt
mov
mov
pop
inc
xor
movsb
jg
mov
lret
repz
adc
adc
iret
fmul
popa
sbb
lahf
and
fs
add
ja
test
add
xor
rcrb
outsb
ds
adc
fucomip
daa
ret
movsb
stos
fsubrl
push
out
mov
push
push
sub
lds
mov
adc
mov
jle
or
add
stos
scas
add
call
mov
aas
out
jecxz
sbb
and
xchg
mov
xor
lahf
jae
xchg
push
xchg
sub
popa
sub
inc
cmc
cli
fldenv
push
pop
and
mov
scas
xlat
test
sbb
mov
mov
cmp
jnp
out
pop
test
cmpsb
dec
lret
mov
adc
push
pop
popa
adcb
and
or
hlt
jmp
sbb
sbb
and
pop
mov
nop
cld
dec
testl
call
sbb
ljmp
jl
gs
mov
xchg
adc
mov
push
add
shrb
push
dec
dec
sub
lret
dec
hlt
xor
and
cli
cs
jbe
cmpsl
imul
mov
cmp
fimull
fsubp
pushf
cmp
daa
lock
aad
sbb
ret
push
rcr
add
cltd
lret
in
sub
inc
testl
std
jnp
sub
dec
sub
xchg
adc
add
mov
mov
pop
call
call
test
push
adc
mov
jae
jp
mov
sub
cmpb
in
inc
push
fcoms
imul
dec
mov
cmpsb
dec
lret
xor
negl
lret
adc
sbb
loop
mov
inc
sbb
lret
push
sub
xchg
aas
dec
and
aaa
es
xchg
sub
jge
cltd
movsl
loop
fsubs
in
fisttps
mov
xor
test
jg
fs
push
arpl
and
call
stos
inc
mov
xchg
in
xor
movsl
ja
cld
repz
inc
gs
pushf
pop
test
imul
push
mov
or
mov
xchg
lock
and
scas
shl
rorb
jle
rolb
xor
outsl
js,pn
cltd
mov
mov
in
fisubs
int
jl
sbb
lret
cmp
mov
lcall
push
mov
divb
mov
xchg
icebp
mov
xchg
test
push
mov
lret
dec
hlt
xor
and
cli
jo
inc
int3
ss
xlat
aad
cmp
call
mov
and
stos
inc
mov
xchg
in
xor
movsl
ja
pop
movsb
aaa
fadd
sub
frstpm(287
aam
ret
dec
leave
pushf
int3
push
mov
or
mov
xchg
lock
and
scas
shl
rorb
and
xorb
repz
ja
outsl
js,pn
cltd
mov
mov
in
fisubs
int
jl
sbb
lret
cmp
mov
mov
mov
jns
inc
mov
xchg
icebp
mov
xchg
test
push
mov
lret
dec
hlt
xor
and
cli
jo
inc
int3
ss
call
pop
sbb
mov
arpl
and
stos
inc
mov
xchg
in
xor
movsl
ja
adc
xor
push
lds
insb
xchg
xorb
pushf
int3
push
mov
or
mov
xchg
lock
and
scas
shl
rorb
das
mov
pop
outsl
js,pn
cltd
mov
mov
in
fisubs
int
jl
sbb
lret
cmp
mov
fdivrl
push
bound
sbb
jns
inc
mov
xchg
icebp
mov
xchg
test
push
mov
lret
dec
hlt
xor
add
call
and
cli
jo
inc
int3
ss
rolb
arpl
and
stos
inc
mov
xchg
in
xor
movsl
ja
jmp
incb
in
insl
jge
cmpsl
and
leave
pushf
int3
push
mov
or
mov
xchg
lock
and
scas
shl
rorb
sub
pusha
ja
outsl
js,pn
cltd
mov
mov
in
fisubs
int
jl
sbb
lret
cmp
mov
decl
inc
mov
incb
and
jl
xchg
test
call
call
lret
dec
hlt
xor
and
cli
jo
inc
int3
ss
subl
out
arpl
and
stos
inc
mov
xchg
in
xor
movsl
ja
adc
fadds
adc
ljmp
mov
or
mov
xchg
lock
and
scas
shl
rorb
dec
or
dec
mov
js,pn
cltd
mov
mov
in
fisubs
int
jl
sbb
lret
cmp
mov
incl
mov
mov
jns
inc
mov
xchg
add
call
mov
xchg
test
push
mov
lret
dec
hlt
xor
and
cli
jo
inc
int3
ss
mov
arpl
and
stos
inc
mov
aad
cli
push
outsb
mov
push
ljmp
push
jge
pushf
int3
push
mov
or
mov
xchg
lock
and
fwait
cmp
add
and
roll
outsb
xor
xchg
push
fcoml
inc
push
loop
xor
cwtl
push
cmp
outsb
pushf
add
dec
mov
add
call
in
jbe
jne
sub
pop
push
shlb
lods
jmp
inc
in
sub
lods
mov
xor
cmpb
xor
inc
dec
rcrl
loopne
sub
jge
or
fwait
add
sbb
jp
rolb
bnd
cli
xchg
sub
cs
cli
and
mov
push
imul
subl
jle
ljmp
mov
push
fdivl
mov
push
xchg
inc
out
pop
dec
adc
or
or
mov
add
call
mov
push
sar
fists
loop
addr16
mov
fdivr
xchg
adc
mov
icebp
cmp
cmc
inc
xor
pop
sbb
xchg
cmp
and
aad
cmpsl
popf
shrb
cs
clc
cmp
push
sbb
shll
jno
xchg
ljmp
outsb
cltd
pop
xlat
xor
inc
cmp
push
pushf
in
jbe
jne
sub
or
mov
dec
xor
jns
mov
and
enter
pop
pop
push
add
call
es
mov
jge
mov
je
mov
scas
mov
add
mov
jp
xchg
mov
enter
jp
in
test
and
xchg
xor
jno
mul
push
and
repz
mov
mov
out
xor
shl
sbb
mov
rclb
in
out
fucomi
out
pop
mov
mov
mov
inc
data16
xor
loopne
ret
lea
mov
adc
pusha
sub
mov
call
aaa
jmp
xor
in
imul
aaa
push
pop
testb
xor
or
cld
inc
call
ja
jno
loopne
mov
jnp
leave
push
fimull
push
xchg
jg
hlt
ficomps
in
and
pop
jns
popa
dec
inc
cmp
mov
ret
shll
mov
stc
add
cli
mov
ds
push
dec
addl
lock
testl
movups
cmc
inc
add
pop
push
test
rcrb
repnz
jl
sub
call
ss
std
add
pop
cmp
mov
and
dec
and
xchg
sar
scas
xchg
arpl
mov
cld
arpl
cmpsl
bound
into
outsl
mov
adc
xor
into
add
xor
or
sti
mov
sti
loopne
lods
stc
mov
test
jne
test
arpl
fsubs
jmp
xor
in
imul
test
mov
fistpll
cmpsl
jne
push
out
push
cs
into
into
movl
call
or
mov
adc
sub
popa
sub
inc
je
xchg
jecxz
test
mov
and
inc
roll
outsb
jb
mov
mov
mov
inc
add
cmpsl
xchg
mov
xchg
jo
stos
pusha
or
sub
mov
jnp
insl
test
jmp
sbb
xlat
imulb
lea
dec
jge
mov
or
testl
add
sbb
sbb
xor
add
call
lret
jge
sub
mov
int
sbb
mov
ss
push
push
pop
in
test
cmc
out
push
mov
sti
loopne
lods
stc
mov
imul
test
xchg
or
mov
mov
loopne
dec
or
jae
hlt
stos
lock
sbb
sarb
lret
xchg
and
repnz
mov
jp,pt
cmp
or
jg
addb
mov
push
cmp
nop
int3
sbb
popf
jecxz
das
pop
shlb
ljmp
out
sbb
add
call
mov
mov
jno
dec
mov
adc
push
mov
bound
jb
xchg
dec
in
int3
jp
lock
xchg
pop
fxch
movsb
jae,pt
and
popf
jge
mov
inc
scas
rclb
jecxz
insl
test
out
pop
test
out
jb
inc
mov
out
add
les
es
cmpsl
fs
xchg
popf
repz
sub
in
mov
xchg
adc
add
pop
roll
cmp
mov
dec
dec
pop
ljmp
call
mov
scas
mov
xchg
mov
mov
cmp
cmc
cld
into
adc
push
mov
add
pop
xchg
cli
mov
jp
lock
xchg
pop
fxch
movsb
rcr
fwait
lods
cmc
cmpsl
arpl
mov
inc
scas
rclb
jecxz
insl
test
out
pop
test
out
jb
inc
mov
out
add
les
ffreep
xchg
iret
cltd
loope
xchg
popf
repz
sub
in
mov
xchg
adc
add
pop
roll
xchg
pop
add
call
outsb
lods
bound
test
cwtl
lods
mov
scas
mov
xchg
mov
mov
fdivrp
sbb
add
scas
push
adc
push
mov
in
sbb
dec
in
int3
jp
lock
xchg
pop
fxch
movsb
mov
insl
push
rolb
jne
mov
inc
scas
rclb
jecxz
insl
test
out
pop
test
out
jb
inc
mov
out
add
les
xchg
push
mov
xchg
popf
repz
sub
in
mov
xchg
adc
add
pop
add
call
xchg
pop
leave
ja
int
fimull
test
cwtl
lods
mov
scas
mov
xchg
mov
mov
push
mov
xor
adc
push
mov
rolb
mov
in
int3
jp
lock
xchg
pop
fxch
movsb
dec
loopne
int
filds
scas
or
scas
rclb
jecxz
insl
test
out
pop
test
out
jb
inc
mov
out
add
les
call
loope
xchg
popf
repz
sub
in
mov
add
call
xchg
adc
add
pop
roll
daa
loopne
les
ljmp
out
sbb
xchg
mov
mov
icebp
fcmovb
sbb
adc
push
mov
cmp
lcall
int3
jp
lock
xchg
pop
fxch
movsb
mov
lcall
mov
inc
scas
rclb
jecxz
insl
test
out
pop
test
out
jb
inc
mov
out
add
les
adc
mov
xchg
popf
repz
call
xor
sub
in
mov
xchg
adc
add
pop
roll
push
cmp
jp
dec
pop
ljmp
out
sbb
xchg
mov
mov
xchg
adc
sbb
cld
stc
push
mov
out
enter
xchg
dec
in
int3
jp
out
cmpsb
pop
push
cmpsl
hlt
jo
push
mov
inc
fadd
fstl
inc
cmpsl
ss
lods
mov
test
fmul
gs
pop
inc
movsb
aad
addb
lahf
and
add
call
or
hlt
cmpsl
add
loopne
test
dec
mov
aad
and
adc
add
jno
xor
and
fs
add
cmc
out
mov
testl
add
pop
test
outsb
ds
adc
fucomip
daa
ret
movsb
stos
fsubrl
push
out
mov
push
push
sub
lds
mov
adc
mov
jle
or
add
stos
scas
ja
sbb
aas
out
jecxz
jo
aas
sub
lret
in
add
call
pop
dec
gs
popf
lahf
jae
xchg
push
xchg
sub
popa
sub
inc
cmc
cli
fldenv
push
pop
and
mov
scas
xlat
test
jmp
jge
and
cmp
jl
adc
push
imul
cmpsb
dec
lret
xor
es
or
push
ljmp
adcb
and
or
hlt
jne
pop
ficoms
test
push
mov
nop
cld
dec
divl
mov
inc
out
test
fwait
sub
sahf
mov
add
call
fdivr
xchg
adc
mov
push
add
shrb
push
dec
dec
sub
lret
dec
hlt
xor
and
cli
cs
jbe
cmpsl
imul
mov
cmp
fimull
fsubp
pushf
cmp
cmpsl
mov
out
aad
sbb
ret
push
xchg
fdivs
or
rcrl
inc
testl
std
jnp
sub
dec
sub
xchg
adc
add
mov
mov
cld
jge
and
or
mov
jae
jp
das
xchg
lcall
xchg
add
add
fiaddl
sarb
cmp
sub
fldt
imul
cmpsb
dec
lret
push
mov
fwait
cli
dec
lcall
jg
mov
enter
adc
xorb
xchg
adc
jae
fwait
aaa
es
xchg
sub
jge
cltd
movsl
loop
fsubs
in
fisttps
mov
xor
test
jg
fs
push
arpl
and
stos
inc
mov
aad
cli
push
js
lds
add
call
adc
lahf
loopne
adc
mov
pushf
int3
push
mov
or
mov
xchg
lock
and
fwait
cmp
add
and
roll
outsb
xor
xchg
push
fcoml
popa
idivl
call
mov
test
cmpsl
mov
push
cmp
push
pushf
in
gs
push
or
adc
and
cmp
sti
daa
stos
push
imul
daa
in
stos
rclb
push
lods
mov
xor
or
lret
cli
sbb
pop
pop
test
call
or
push
add
xchg
sub
cs
cli
and
mov
push
imul
subl
jle
ljmp
mov
push
fdivl
mov
push
xchg
inc
out
pop
dec
adc
or
xchg
cli
mov
out
es
dec
insb
mov
push
lods
push
mov
addr16
mov
fdivr
xchg
adc
mov
icebp
cmp
cmc
inc
xor
pop
sbb
xchg
cmp
and
push
jl
movsb
das
cmpl
xchg
cs
call
pop
jns
inc
ret
add
sbb
shll
jno
inc
shl
add
or
jl
cmp
push
pushf
in
gs
push
pop
add
lret
pop
xor
jns
mov
and
sub
dec
push
dec
lahf
int
pop
aas
xchg
push
in
add
mov
jge
mov
je
mov
scas
mov
add
mov
jp
xchg
mov
enter
jp
in
test
and
xchg
xor
jno
mul
push
and
add
call
repz
jecxz
sub
sbb
mov
or
movsl
xchg
or
cli
shl
sbb
mov
fs
insb
jmp
enter
dec
xlat
inc
jg
loope
loope
test
add
js
push
movsl
scas
enter
addb
ds
orl
pop
fcompl
cltd
repz
inc
sar
add
test
and
out
pop
fcmovnu
psrlq
pop
loope
loop
jmp
sbb
clc
subl
jle
ljmp
mov
push
arpl
sbb
test
and
xchg
xor
call
and
jno
mul
push
and
repz
pop
cmp
jp
sbb
sub
or
ret
or
dec
inc
andb
sbb
mov
fs
insb
jmp
enter
test
xlat
pop
loope
loope
test
add
js
push
movsl
scas
enter
addb
ds
orl
pop
fcompl
cltd
repz
inc
rol
lahf
xor
bnd
out
pop
fcmovnu
psrlq
pop
loope
loop
jmp
sbb
clc
subl
jle
ljmp
sub
jp
add
call
test
and
xchg
xor
jno
mul
push
and
repz
jmp
shrb
int3
or
ret
fistpl
jbe
shl
sbb
mov
fs
insb
jmp
enter
pop
nop
out
or
aad
inc
test
add
js
push
movsl
scas
enter
addb
ds
orl
pop
fcompl
cltd
repz
inc
shr
xor
lods
cmp
out
pop
fcmovnu
psrlq
pop
loope
loop
jmp
sbb
clc
subl
jle
ljmp
call
test
dec
arpl
in
test
and
xchg
xor
jno
mul
push
and
repz
xchg
adc
mov
mov
and
pop
add
shl
sbb
mov
fs
insb
jmp
enter
dec
jb
dec
and
aad
inc
test
add
js
push
movsl
scas
enter
addb
ds
orl
pop
fcompl
cltd
repz
inc
shll
scas
inc
in
sbb
bnd
out
pop
fcmovnu
psrlq
pop
loope
loop
jmp
sbb
clc
addl
call
icebp
nop
jle
ljmp
fidivrl
push
mov
in
sbb
test
and
xchg
xor
jno
mul
push
and
repz
mov
lods
mov
int3
or
ret
ss
shl
sbb
mov
fs
insb
jmp
enter
mov
xchg
mov
inc
test
add
js
push
movsl
scas
enter
addb
ds
orl
pop
fcompl
cltd
repz
inc
rorl
xlat
add
outsb
sbb
bnd
out
pop
fcmovnu
psrlq
pop
add
call
or
icebp
jmp
sbb
clc
subl
jle
ljmp
and
xor
and
push
loope
xchg
xor
jno
mul
push
and
repz
call
ja
xor
int3
or
ret
jge
push
mov
sbb
mov
rclb
in
out
fucomi
out
pop
mov
mov
mov
inc
data16
xor
loopne
imul
push
enter
sbb
stc
or
xor
in
imul
add
call
mov
cmc
lds
add
add
ja
jno
mov
lds
jns
jmp
mov
ficomps
in
and
jbe
cwtl
add
or
pop
xchg
cmpsb
adc
add
sar
mov
ds
push
dec
addl
lock
testl
movups
cmc
inc
add
pop
push
test
rcrb
repnz
jl
sub
nop
sub
mov
mov
loop
dec
xchg
add
call
stos
fwait
data16
sar
scas
xchg
arpl
mov
cld
arpl
cmpsl
bound
into
outsl
mov
mov
lret
in
xchg
das
sbb
orl
xchg
loopne
lods
stc
mov
testl
xchg
pop
pop
test
aaa
jmp
xor
in
imul
cld
mov
mov
fistpll
cmpsl
jne
push
out
push
cs
pop
push
imul
sbb
je
ljmp
add
call
inc
je
xchg
jecxz
test
mov
and
inc
roll
outsb
jb
mov
mov
mov
inc
add
cmpsl
xchg
mov
xchg
jo
stos
pusha
or
sub
je
jg
jnp
insl
test
jmp
sub
sbb
mov
sub
mov
add
mov
jge
mov
or
testl
add
sbb
mov
divb
loopne
jge
sub
lea
pop
sub
and
call
popa
adc
sub
xchg
dec
je,pn
pop
es
pop
daa
sti
loopne
lods
stc
mov
mull
push
push
xchg
mov
mov
dec
mov
loopne
dec
or
jbe
test
or
jnp
or
inc
shlb
insb
mov
jp,pt
cmp
or
jg
addb
mov
push
cmp
nop
int3
sbb
popf
jecxz
das
pop
shlb
ljmp
out
sbb
xchg
mov
mov
mov
mov
and
call
cld
stc
push
mov
int3
mov
adc
in
int3
jp
out
cmpsb
pop
push
cmpsl
hlt
jo
push
mov
inc
fadd
fstl
inc
cmpsl
ss
lods
mov
aam
push
jle
and
and
jmp
xchg
lahf
inc
lret
and
or
hlt
xor
add
adc
push
xchg
enter
cmp
and
adc
push
or
test
fcomps
sbb
jb
pop
in
out
scas
adc
dec
xor
add
call
test
outsb
ds
adc
fucomip
daa
ret
movsb
stos
fsubrl
push
out
mov
push
push
sub
lds
mov
adc
mov
jle
or
add
stos
scas
ja
sbb
aas
out
jecxz
jnp
mov
call
in
sub
jne
lahf
jae
xchg
push
xchg
sub
popa
sub
inc
cmc
cli
fldenv
push
pop
and
mov
scas
xlat
test
or
jecxz
and
cmp
dec
adc
add
call
or
mov
cmpsb
dec
lret
pop
decb
xlat
stos
jmp
stos
ud0
adcb
and
or
hlt
bswap
mov
xor
mov
pop
mov
nop
cld
dec
divl
stos
sti
lods
jmp
adcb
pop
or
cld
xchg
adc
mov
push
add
shrb
push
dec
dec
sub
lret
dec
hlt
xor
and
cli
cs
jbe
cmpsl
imul
mov
cmp
fimull
fsubp
pushf
cmp
jl
add
call
mov
sbb
ret
push
or
adc
rcrl
inc
testl
inc
push
inc
out
inc
cltd
out
dec
push
mov
jcxz
out
xchg
xchg
sbb
sahf
insl
jne
mov
fisttpll
mov
adc
add
pusha
push
fdivr
adc
popf
orl
inc
xor
ds
mov
push
push
sub
lds
pop
adc
xchg
cmpl
arpl
inc
inc
dec
cmp
fimull
fiadds
add
call
pushf
cmp
jns
inc
out
aad
sbb
ret
push
fcmovu
and
rcrl
inc
testl
push
imul
jne
mov
xchg
or
push
xlat
jcxz
out
xchg
xchg
sbb
sahf
insl
jne
mov
fisttpll
mov
adc
add
sahf
cmp
cltd
add
xchg
mov
scas
in
jbe
dec
ds
mov
push
push
sub
lds
adc
insb
lods
out
mov
mov
add
call
cmp
fimull
fsubp
pushf
cmp
dec
sub
iret
add
add
adc
jl
push
vunpckhps
scas
arpl
lret
in
sub
inc
testl
and
jb
and
mov
jcxz
out
xchg
xchg
sbb
sahf
insl
jne
mov
fisttpll
mov
adc
add
pop
mov
outsb
std
mov
scas
in
jbe
dec
ds
mov
push
push
sub
lds
jge
lret
xor
call
lret
arpl
inc
inc
dec
cmp
fimull
fsubp
pushf
cmp
pop
pop
shrl
sub
add
adc
jl
push
inc
cld
mov
sbb
lret
in
sub
inc
testl
mov
mov
lahf
dec
push
mov
jcxz
out
xchg
xchg
sbb
sahf
insl
jne
mov
fisttpll
mov
adc
add
lods
pop
aam
xchg
inc
push
mov
scas
in
jbe
dec
ds
mov
push
push
add
call
pop
lds
fwait
push
inc
cmp
cmc
jp
arpl
inc
inc
dec
cmp
fimull
fsubp
pushf
cmp
out
mov
ret
push
int
pop
cmp
ljmp
sub
inc
testl
sub
jg
xchg
lret
push
push
mov
jcxz
out
xchg
xchg
sbb
sahf
insl
jne
mov
fisttpll
mov
adc
add
cld
or
pusha
bound
in
jbe
dec
ds
mov
call
ljmp
insb
shrb
lds
and
mov
inc
cmc
int
arpl
inc
inc
dec
cmp
fimull
fsubp
pushf
cmp
cmc
pop
loopne
jg
add
adc
jl
push
rclb
dec
dec
cmp
cltd
lret
in
sub
inc
testl
std
jnp
sub
dec
sub
xchg
adc
add
mov
mov
mov
cmp
adc
mov
jae
jp
add
jecxz
mov
xor
cmpb
jl
pop
outsb
xchg
add
call
jo,pt
mov
xor
mov
cmpsb
dec
lret
adc
inc
cmpsb
jae
movq
in
jae
imul
enter
out
jb
push
clc
loope
pop
sub
jnp
mov
aaa
es
xchg
sub
jge
cltd
movsl
loop
fsubs
in
fisttps
mov
xor
test
jg
fs
push
arpl
and
stos
inc
mov
aad
cli
push
cltd
mov
out
cltd
jno
out
or
jge
push
imul
sub
add
call
dec
lahf
mov
xchg
lock
and
fwait
cmp
add
and
roll
outsb
xor
xchg
push
fcoml
dec
movsl
mov
xor
xchg
or
imul
dec
mov
in
cmp
xor
in
lahf
out
paddq
jp
add
sbbb
scas
jmp
xor
cmpb
ds
test
fimull
xor
or
push
xchg
loop
and
mov
push
cli
push
xchg
aas
push
cli
xchg
sub
cs
cli
and
mov
call
push
jmp
loop
outsb
adc
jmp
sbb
clc
subl
jle
ljmp
mov
push
fdivl
mov
push
xchg
inc
out
pop
dec
adc
or
out
sbb
lods
inc
out
or
mov
stos
sti
les
push
or
cld
xchg
adc
mov
icebp
cmp
cmc
inc
xor
pop
sbb
xchg
cmp
and
jno
ja
pushf
sub
xchg
cs
add
imul
pushf
shll
jno
gs
add
call
xchg
xchg
jns
mov
mov
in
cmp
xor
in
lahf
inc
loope
jno
mov
push
xor
jns
mov
and
inc
daa
jp
jns
lods
shl
jl
mov
add
mov
jge
mov
je
mov
scas
mov
add
mov
jp
xchg
mov
enter
jp
in
test
and
xchg
xor
jno
mul
push
and
repz
push
xlat
sub
or
ret
call
ret
mov
loopne
xlat
mov
rclb
in
out
fucomi
out
pop
mov
mov
mov
inc
data16
xor
loopne
aad
fisubs
sub
adc
sahf
or
push
xor
in
imul
repz
push
enter
adc
cmc
ljmp
shll
jno
cwtl
cmp
std
or
mov
jg
hlt
ficomps
in
and
scas
sbb
pop
call
fsubrl
mov
add
add
call
idiv
add
cli
mov
ds
push
dec
addl
lock
testl
movups
cmc
inc
add
pop
push
test
rcrb
repnz
jl
sub
dec
cmp
jp
in
xchg
out
loope
push
andb
and
xchg
sar
scas
xchg
arpl
mov
cld
arpl
cmpsl
bound
into
outsl
mov
mov
into
daa
jae
mov
xor
or
dec
push
jnp
mov
add
call
mov
divl
arpl
aam
jbe
test
movsl
inc
stos
test
aaa
jmp
xor
in
imul
lahf
xor
pop
and
fistpll
cmpsl
jne
push
out
push
cs
shrl
lods
adc
xlat
movsl
fisubl
movsb
popa
sub
inc
je
xchg
jecxz
test
mov
and
inc
roll
outsb
jb
mov
mov
mov
repnz
or
mov
jle
repz
inc
push
imul
test
cltd
fmulp
sbb
roll
call
mov
outsb
loope
int3
fcoms
outsb
and
inc
mov
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jg
leave
out
mov
shl
mov
jge
adc
jne
inc
pop
addr16
jg
cmpsb
dec
ja
push
push
fdivl
dec
fnstenv
jnp
cltd
and
push
test
cwtl
sub
mov
and
lret
xor
ds
pop
sti
js
nop
mov
std
xor
ret
popa
popa
and
cmpsb
adc
lcall
lods
pop
shll
call
push
jnp
mov
aam
sbbl
dec
roll
scas
push
cwtl
sub
aad
cld
dec
pop
mov
sub
cli
sbb
clc
jl
xchg
add
pop
mov
pshufw
mov
cmp
je
inc
jns
push
cmp
mov
sub
enter
or
aaa
movsb
mov
ljmp
mov
ret
insl
pusha
std
ret
jmp
mov
xor
faddl
pusha
js
lock
lds
mov
jae
pop
iret
xor
and
xchg
sub
call
arpl
pop
pusha
cmp
fnstcw
sbb
inc
push
mov
clc
das
sub
mov
lcall
pop
mov
mov
shlb
mov
sbb
in
bound
cld
cmpsb
and
call
out
push
dec
xlat
pop
and
lahf
and
adc
call
xchg
push
cwtl
cltd
mov
push
imul
add
hlt
pop
rorl
jno
sub
sub
out
pushf
xor
add
call
stos
fiaddl
leave
and
mov
adc
cld
inc
cmc
cmp
aas
cmp
mov
mov
pop
jmp
mov
or
xchg
add
push
xchg
cmp
adc
push
xorb
fdivl
movsl
fsts
cld
lcall
clc
mov
test
jns
popa
aam
sub
gs
loope
std
jp
stos
subb
incb
xor
jp
stos
subb
fldt
xchg
lret
insb
xor
xor
add
call
cs
sbb
fdivs
insl
fistpll
ret
test
jge
and
ljmp
cs
imul
and
icebp
ja
hlt
rorl
insb
pop
xchg
add
adc
es
pop
xchg
add
mov
inc
rorb
push
xorb
fdivl
jl
mov
das
mov
jno
pop
cld
sbb
decl
lret
mov
aas
aaa
pop
cli
push
mov
test
push
mov
pushf
sahf
or
add
in
insb
loope
xor
add
call
pop
ss
ja
insl
xlat
jmp
mov
push
mov
movsb
xorl
push
mov
mov
xchg
cld
jmp
lock
jne
out
xchg
add
jns
test
pop
fwait
adc
sub
pushf
xor
insl
icebp
ds
scas
xchg
jb
xor
into
mov
out
es
pop
xchg
add
aaa
fwait
inc
rcrb
dec
cld
notl
xor
enter
or
and
dec
mov
jne
pop
inc
and
pop
rcrl
dec
out
push
add
call
out
inc
fwait
mov
int3
cld
cld
mov
out
xor
jp
stos
subb
mov
push
enter
popf
scas
loopne
imul
inc
sub
iret
bound
add
jno
mov
stos
push
lods
daa
js
int
lods
cltd
xlat
cmp
ds
adc
fwait
cld
inc
cmc
cmp
aas
push
mov
push
adc
push
pop
pop
shl
mov
push
mov
bnd
inc
add
mov
incb
call
push
jns
test
inc
mov
fwait
cld
inc
cmc
cmp
aas
fisubl
adc
jne
popa
shlb
aad
lock
mov
mov
test
fs
out
js
mov
mov
scas
and
jmp
std
out
int3
lods
pop
cmc
lcall
loop
or
add
mov
sbb
mov
or
xchg
add
dec
and
mov
pusha
mov
std
jp
stos
subb
adc
fxam
cli
out
fwait
add
mov
in
add
call
add
push
xor
and
cs
push
es
xor
in
rorb
push
xorb
fdivl
movsb
js
ja
mov
dec
mov
cmpsl
aas
fsubrl
cwtl
mov
in
mov
outsl
lret
xchg
xchg
iret
shl
jmp
int
cmp
adc
mov
and
sbb
rcr
cmpb
mov
insl
jo
add
inc
cmc
cmp
aas
cmp
xchg
dec
adc
cmp
aas
loop
mov
xor
add
call
data16
ret
and
xchg
sub
das
sub
imul
cmp
cmp
aas
je
pop
mov
pop
clc
xlat
enter
jne
xor
cld
inc
cmc
cmp
aas
ljmp
int
pop
cmpsl
insl
and
sti
sahf
xlat
pop
arpl
fsubrs
out
inc
leave
mov
sub
pop
xchg
add
in
or
add
cs
leave
insl
data16
cmp
adc
mov
hlt
xchg
subb
mov
xchg
push
cli
divb
pop
cs
imul
add
call
jge
xor
add
or
test
cmc
cmp
aas
das
add
add
pop
pop
imul
and
mov
mov
lds
test
mov
test
js
cmpsb
insl
lret
addb
add
call
fwait
cld
inc
cmc
cmp
aas
out
xchg
clc
add
jl
lret
fwait
cld
inc
cmc
cmp
aas
add
out
pushf
sub
pop
jecxz
es
jmp
in
ja
add
sbb
outsl
dec
jl
jb
xchg
mov
sbb
add
call
cmp
push
mov
outsb
and
inc
pop
arpl
scas
fwait
cld
inc
cmc
cmp
aas
popf
jle
xchg
fcmovne
pop
fwait
cld
inc
cmc
cmp
aas
les
mov
push
fwait
cld
inc
cmc
cmp
aas
lods
inc
jmp
jae
xchg
mov
cmp
scas
inc
loope
das
adc
mov
mov
test
test
bnd
add
or
jmp
cmpsl
lret
or
and
mov
mov
les
imul
jb
or
rorb
int3
sbb
subb
pop
add
call
mov
pop
pop
cwtl
mov
mov
sub
imul
pop
mov
subb
pop
cmp
sub
adc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmp
gs
fsubrl
xor
cmpsl
mov
push
test
aad
cld
jo
ds
loope
dec
test
and
xchg
mov
subl
inc
stos
stos
movsl
and
lock
jl
imul
xchg
subl
xchg
ja
mov
sbb
in
rep
popf
mov
call
cmp
aam
cmp
insl
push
or
sub
mov
out
sub
add
gs
divl
jo
rorb
or
or
arpl
xchg
subl
popa
dec
push
add
pop
fldcw
mov
leave
adc
bound
dec
push
add
pop
fldcw
xor
imul
subl
popa
dec
push
add
pop
fldcw
jg
xorl
push
inc
popa
dec
push
add
pop
fldcw
add
call
and
out
jb
movsl
movsb
cmpsb
outsb
push
inc
popa
dec
push
add
pop
fldcw
cmc
mov
movsl
movsb
cmpsb
outsb
push
inc
popa
dec
push
add
pop
fldcw
mov
pop
imul
push
inc
popa
dec
push
add
pop
fldcw
aaa
enter
cltd
movsl
movsb
cmpsb
outsb
push
inc
popa
dec
push
add
pop
fldcw
add
das
jb
movsl
movsb
cmpsb
outsb
push
inc
popa
dec
push
add
pop
fldcw
dec
int3
popf
push
jb
movsl
movsb
cmpsb
outsb
push
inc
popa
dec
push
add
pop
fldcw
or
cmc
jb
add
call
movsb
cmpsb
outsb
push
inc
popa
dec
push
add
pop
fldcw
xor
movsl
movsb
cmpsb
outsb
push
inc
popa
dec
push
add
pop
fldcw
lcall
movsb
cmpsb
outsb
push
inc
popa
dec
push
add
pop
fldcw
push
dec
push
jb
movsl
movsb
cmpsb
outsb
push
inc
popa
dec
push
add
pop
fldcw
ds
jns
out
sbb
cmp
inc
jg
pop
cmp
cmp
sub
sbb
fdivr
test
mov
cmp
mov
pop
mov
add
call
mov
cmp
adc
call
cwtl
cmp
jmp
adc
stos
sub
test
cwtl
cmp
push
aaa
dec
enter
test
cwtl
cmp
addl
test
cwtl
cmp
ret
pop
mov
dec
sub
mov
cmp
sbb
int
test
cwtl
cmp
sbb
jb
test
cwtl
cmp
clc
and
loop
aad
test
cwtl
cmp
inc
scas
xor
jle
inc
and
call
fcmove
hlt
jbe
mov
and
or
popf
xor
adc
mov
stos
lods
mov
into
mov
aad
mov
adc
or
aad
mull
or
push
cld
or
loopne
or
aad
mull
xor
pop
push
cwtl
lea
sbb
mov
adc
das
sub
std
adc
stos
jno
push
fimull
outsl
mov
enter
je
mov
mov
jo
fs
out
jae
and
pop
pop
mov
in
mov
push
call
add
call
ret
sti
inc
lret
rcll
dec
or
in
aam
aad
arpl
mov
outsl
pop
adc
xor
add
xchg
lahf
sub
jge
mov
and
inc
dec
insb
fmulp
adc
cmpsl
lcall
pushf
jo
mov
aaa
xchg
lods
adc
fwait
sub
fwait
push
pop
cvtdq2ps
xor
les
mov
add
xchg
adc
xchg
cld
adc
and
lret
push
jnp
subb
rcrb
mov
push
ja
mov
sub
call
push
das
cli
or
test
cmp
call
imul
xor
jae
add
popa
out
jbe
lods
cmpsl
xor
push
or
sbb
mov
adc
or
pop
sti
or
jne
mov
nop
fstp
mov
addr16
pop
jp
and
inc
or
mov
clc
clc
bound
or
stos
sahf
hlt
lret
leave
jge
imul
aad
cltd
jmp
jb
es
mov
jbe
sahf
lock
ja
imul
xchg
add
add
add
mov
or
sbb
dec
ret
pop
jns
aas
out
pop
pop
mov
pop
daa
xchg
les
lods
out
frstor
iret
outsl
or
repz
push
nop
inc
mov
shl
pinsrw
cld
aam
push
lret
inc
ret
outsb
push
pop
jl
adc
or
push
inc
mov
add
pop
mov
sbb
loope
xor
xchg
es
lock
nop
jns
push
mov
scas
shl
jo
mov
out
sbb
repz
addr16
mov
sbb
and
call
xor
sbb
cs
xor
insl
sbb
push
loope
jl
in
adc
or
sub
mov
rorl
cmp
seta
testb
jge
push
inc
fidivl
dec
sti
js
push
das
fidivrl
pop
dec
pushf
leave
push
add
ret
cmp
xchg
jno
mov
inc
and
shlb
inc
and
loopne
fs
scas
leave
shll
mov
or
sub
adc
pop
push
xchg
inc
sbb
xchg
jle
mov
xor
fcmovb
repz
stos
imul
or
add
call
sbb
cltd
sub
jno
ret
stos
inc
mov
lret
mov
jle
inc
pop
cmovbe
dec
mov
in
inc
inc
inc
movsl
cltd
incb
pushf
push
insb
lock
push
popa
or
dec
cmp
mov
pop
jge
pop
loope
imul
cmp
dec
repnz
popf
push
mov
loop
rorb
add
mov
and
outsb
iret
jns
dec
push
add
jmp
sbb
pop
mov
mov
cmc
dec
sbb
mov
add
call
pop
dec
jns
mov
daa
ret
and
inc
out
mov
sarb
xchg
sbb
xor
adc
in
inc
pushf
lret
push
gs
pop
iret
cs
sub
and
mov
or
push
sar
cwtl
orl
sbb
add
mov
xchg
lock
sbb
sbb
push
cltd
orb
test
pop
lods
adc
arpl
sub
xchg
mov
ror
mov
sbb
sbb
add
add
call
cwtl
push
ror
rorl
popl
jmp
dec
popf
ja
imul
push
lahf
iret
or
out
addb
or
mov
hlt
into
xor
jbe
sub
cmp
testb
xchg
or
fadd
popa
std
xchg
mov
mov
mov
pop
outsb
mov
movsl
mov
cmp
test
and
adc
cmp
or
and
mov
or
xchg
pop
bound
add
lahf
dec
pop
into
cmpsb
in
add
call
lea
mov
push
cmp
lds
lods
pusha
in
fdivrl
testl
test
mov
lods
rclb
int3
mov
loope
adcb
ret
xchg
addb
add
test
xchg
jecxz
push
cmp
int3
popa
hlt
fsubr
ret
push
pop
je
push
frstor
test
lret
mov
loopne
lock
cli
or
iret
add
inc
jp
int
stos
inc
mov
xchg
pop
push
repz
cmpsl
out
add
call
xchg
test
xor
push
xchg
or
add
arpl
cmp
shlb
pop
fnstcw
dec
mov
fstpl
orb
push
or
pushf
xor
dec
cmpl
in
cld
out
jns
mov
jae
es
sbb
cltd
push
mov
sbb
mov
xchg
dec
mov
dec
imul
pushf
int3
ljmp
bnd
or
pop
cmc
sub
lcall
cmp
shrb
and
push
xchg
xchg
std
mov
cwtl
cmp
sbb
add
call
add
in
shlb
js
lods
addr16
adc
mov
ds
jmp
push
add
mov
loop
stc
inc
sbb
sbb
ficompl
sbb
jp
ss
sar
push
popa
rcr
push
in
nop
pop
fldenv
lods
data16
inc
mov
jns
push
cmp
and
push
or
and
xorl
jmp
jge
std
push
xor
sbb
adc
cltd
out
clc
mov
xchg
add
call
arpl
dec
nop
push
out
and
dec
js
cmp
sub
cmpsl
push
ficompl
paddw
inc
or
push
subb
mov
test
imul
push
push
xor
pop
dec
mov
pop
xlat
or
mov
je
fidivrl
loop
ret
xchg
cmp
mov
jo
push
fsubrs
xchg
mov
mov
fcoml
lds
adc
cld
pop
imul
call
push
or
inc
mov
jle
xchg
je
xchg
sub
call
or
fmuls
repz
bound
dec
cmp
inc
cmc
xlat
cmc
in
cmpsb
cli
insl
hlt
cmp
adc
dec
push
or
sar
addl
dec
call
aad
jg
sbb
mov
fwait
push
in
add
data16
sbb
fdivrs
and
inc
adc
lods
leave
xor
add
iret
pop
loopne
sbb
sub
jns
adcl
ret
jo
fsubl
pop
lcall
cmp
lret
jnp
xchg
fldl
add
call
pop
leave
sub
inc
push
pop
push
sahf
xor
jne
shl
lods
repnz
mov
and
sub
clc
lret
icebp
and
xchg
test
mov
dec
stc
dec
xlat
lock
pop
je
push
xor
xchg
ljmp
fdecstp
cs
cmp
lock
in
mov
ret
push
insb
cld
gs
outsb
push
and
divl
movsb
push
sub
cmp
and
sbb
and
cmp
ljmp
add
call
test
dec
movsb
aas
mov
testb
mov
cmpl
stos
repz
lahf
mov
sbb
pop
out
jbe
fldl
loop
jns
push
sub
icebp
mov
xchg
mov
inc
rclb
lret
dec
jo
lahf
adc
ss
cmc
into
pop
addb
pop
movsb
jp
insb
or
lock
insb
sbb
fldl2e
adc
xchg
or
ret
mov
cli
setbe
je
inc
arpl
movsb
mov
flds
add
call
cli
sar
lods
shl
les
mov
fistpll
or
inc
jp
fisubs
pop
bound
mov
imul
inc
cltd
push
in
cmpsb
enter
jmp
lahf
fistps
inc
mov
fistps
sub
imull
ss
lods
mov
fsubp
sbb
data16
jle
mov
mov
adc
loopne
loopne
test
add
sbb
out
cmpsb
out
add
call
sub
jbe
jge
adc
shll
fdivr
xchg
out
clc
jo
push
outsb
mov
and
test
dec
mov
scas
or
aas
fcmovnb
cld
test
inc
mov
jbe
xchg
rclb
shlb
insb
jl
mov
cmp
mov
cmpsl
imul
ja
push
sub
repnz
insb
sbb
push
xchg
jnp
mov
jmp
sub
fidivl
dec
aad
in
sarl
outsb
jmp
call
mov
xchg
lahf
push
imulb
addb
in
ret
jecxz
xchg
jae
mov
push
lahf
sbb
pop
and
ljmp
push
rcrl
mov
adc
std
xor
dec
jg
ror
or
lret
pop
adc
sahf
outsl
cli
cmpsb
sbb
push
cltd
sub
xchg
sbb
push
outsl
int3
mov
adc
mov
mov
pavgw
filds
leave
arpl
or
jnp
movsb
fwait
sub
sahf
xchg
call
addl
jnp
loope
insl
popf
outsl
iret
clc
repnz
in
xor
popa
jp
or
frstor
cmpl
test
xor
sbb
xlat
jmp
out
loop
adc
pushf
sbb
stc
add
xor
adc
xchg
mov
xor
sbb
popa
addb
cmp
lret
inc
cli
xor
mov
mov
lahf
into
jg
and
sar
pop
int
xchg
lcall
add
mov
test
sub
add
call
js
or
stc
dec
add
inc
iret
in
cmp
cmpsl
cmc
fsqrt
xchg
mov
sar
push
mov
std
jne
ljmp
gs
jl
scas
lea
jge
or
mov
mov
jg
inc
mov
and
cmp
mov
sub
decb
lahf
xor
mov
xchg
add
sarb
aaa
nop
mov
mov
bound
jne
sbb
scas
xor
adc
mov
xor
add
call
arpl
mov
and
dec
fcmovnbe
nop
push
daa
mov
inc
sub
insl
push
movsl
xor
test
cli
cli
fidivl
mov
cwtl
or
mov
mov
jb
sbb
pop
inc
lock
fsubp
fmull
mov
push
sahf
sub
shrb
inc
push
push
ljmp
mov
scas
test
mov
adc
adc
test
push
cs
insl
cmp
xchg
adc
test
std
fidivs
enter
cmp
mov
pop
add
call
mov
shll
mov
fstpt
pop
les
loop
push
sub
cmp
xchg
mov
cmpsl
aad
in
data16
std
adc
push
mov
pushf
dec
ss
je
mov
aas
dec
rcl
scas
test
repz
ljmp
mov
inc
ljmp
pop
data16
mov
and
lcall
jecxz
pop
mov
repnz
add
mov
or
jno
jns
movsb
rcr
inc
xor
dec
or
push
jmp
add
call
out
sub
pop
ljmp
jle
cltd
jae
mov
iret
pop
cmc
dec
jge
mov
pop
arpl
push
std
mov
jl
inc
orl
test
popfw
mov
adc
add
mov
pop
dec
push
daa
fcomps
xor
loope
out
push
pushf
sub
cmpsb
test
popf
pop
dec
cmpsb
push
mov
push
scas
add
out
inc
insb
push
int
loope
jns
mov
les
leave
movsl
pop
dec
rcl
or
arpl
add
call
dec
dec
sub
incl
push
clc
mov
adc
ja
insb
sbb
mov
xor
push
fdiv
jb
addb
mov
movsb
lret
and
mov
popf
inc
in
shrb
roll
out
pop
lcall
pop
inc
adc
cmp
sbb
fisubl
push
pop
xchg
xchg
adc
adc
test
cmp
xor
adc
push
mov
sbb
sub
xlat
jle
nop
sbb
call
scas
mov
add
call
jbe
jecxz
xchg
adc
icebp
cs
stc
lcall
popf
imull
jb
mov
pop
repz
sbb
shrb
inc
xchg
stos
movsl
jecxz
push
adc
pusha
in
sbb
xchg
mov
mov
divl
cmp
mov
stos
imul
popa
cmp
outsl
jnp
cmp
jne
jge
inc
jge
dec
sbb
icebp
cltd
outsl
xchg
mov
and
cltd
mov
test
dec
mov
add
call
fmuls
mov
in
outsl
nop
jle
repz
push
xor
push
insb
adc
dec
sti
andl
mov
mov
fwait
lds
jae
in
sub
imul
decl
cmc
sti
sub
out
push
int
mov
add
xchg
mov
cltd
fwait
lea
push
testb
sbb
or
cmp
jle
mov
repz
adc
pop
mov
inc
or
push
add
call
mov
cs
mov
arpl
frstor
push
jge
inc
push
inc
cmp
insb
push
dec
jbe
mov
aas
adc
cmp
pop
push
flds
sbb
mov
xchg
lds
int
add
loope
mov
loope
and
movsl
and
lret
xor
jecxz
dec
xchg
sbb
lods
push
mov
push
jmp
adc
jp
loopne
ljmp
in
in
bnd
inc
push
es
add
call
push
and
movsb
adc
xchg
loopne,pn
repz
or
inc
mov
rol
rcl
sub
ret
adc
int3
lds
mov
xchg
cmp
add
dec
sbb
imulb
out
sbb
inc
adc
int3
pop
sti
adc
and
mov
test
in
mov
loopne
jne
dec
out
das
arpl
add
mov
xchg
cmc
stc
shlb
imul
hlt
pop
mov
call
jne
pop
push
lret
xor
aam
sub
mov
mul
pop
out
iret
cmp
sub
add
sub
neg
jae
adc
out
mov
std
test
jg
mov
xlat
mov
repnz
repz
and
adc
les
mov
mov
xor
pop
sahf
xor
cmp
dec
mov
call
addl
fidivl
jbe
dec
nop
jo
mov
test
popl
nop
shlb
add
call
mov
mov
cmp
sbb
mov
loopne
dec
push
add
cmpsb
and
sub
mov
or
dec
push
test
xchg
mov
or
or
pop
lods
mov
xchg
outsb
test
xor
inc
push
xor
dec
ror
ljmp
hlt
or
test
xchg
jl
dec
xchg
ja
out
xor
pop
das
push
xchg
jle
xor
cs
pushf
sbb
pop
das
into
leave
cmp
or
imul
test
xor
sti
add
call
xchg
aam
movsl
cmp
sub
fisubl
enter
jmp
pop
xorl
jnp
shlb
pop
lret
ret
test
aaa
inc
or
jecxz
jns
push
shrb
and
and
aaa
addl
cmc
inc
mov
cs
cmp
add
and
mov
es
cs
out
scas
hlt
jge
enter
sti
xchg
call
dec
int
outsb
stos
jae
dec
pusha
adc
movsl
mov
adc
int3
test
bound
add
call
in
test
or
jo
je
mov
xchg
mov
adc
sbb
cmp
popf
lods
add
notl
test
imul
jmp
mov
adc
mov
pop
mov
dec
add
xchg
insb
cltd
sub
shl
mov
cmp
cmc
push
lret
or
sar
ljmp
add
in
mov
push
mov
fs
push
fsubrl
sahf
inc
stos
add
call
mov
lcall
jecxz
mov
rolb
xor
js
adc
loop
andl
insb
mov
jne
mov
pop
dec
cmp
out
out
push
nop
idiv
jg
or
xor
in
mov
addr16
stc
jecxz
xchg
movsl
test
and
pusha
aad
adc
repnz
insb
movsl
pop
inc
jo
and
loop
sub
inc
movsb
gs
xchg
push
sub
aaa
add
in
clc
mov
ret
aas
outsb
lea
sub
add
sbb
add
call
jp
inc
or
mov
jnp
push
iret
testl
nop
lcall
fucom
dec
jno
or
packssdw
fs
mov
into
jbe
dec
cmc
cli
icebp
test
fldenv
sub
jo
xchg
jbe
ret
add
xchg
scas
rorl
hlt
or
sbb
bound
add
jl
dec
mov
jbe
inc
add
test
imul
popa
dec
sub
stc
jmp
pop
int
fnstcw
ja
add
or
int
add
call
cmp
adc
inc
adcl
setne
adc
push
or
or
pop
loopne
lock
pop
rcr
mov
and
xor
bound
fwait
lds
aas
jp
aam
stos
popa
sbb
lcall
inc
in
pop
pop
dec
sbb
imul
pusha
hlt
push
cmpsl
push
jmp
push
cmp
enter
mov
imul
xlat
filds
cmp
mov
dec
sbb
iret
dec
idivl
add
popa
cmpsl
loope
push
mov
add
call
sarl
inc
out
inc
mov
icebp
jno
jge
jae
jns
push
mov
mov
and
sub
mov
lcall
jg
inc
inc
icebp
xor
jbe
ret
jecxz
xor
ds
insl
sbb
push
jbe
fcomi
shll
mulb
add
add
cli
ret
push
insl
mov
out
aad
fsub
mov
pop
xchg
xchg
inc
lods
repz
in
test
cld
stos
rcrl
or
shr
add
call
gs
sub
cltd
xchg
cmp
xorl
jno
mov
pop
inc
or
pop
scas
rolb
push
jecxz
jg
adc
insb
aaa
pop
mov
push
sbb
fldenv
mov
pop
mov
in
psubd
and
rcrb
das
pop
add
sub
js,pt
pop
sahf
fdivr
divb
mov
icebp
pop
jge
std
jno
dec
dec
push
xlat
mov
pop
out
mov
insb
jmp
ret
ss
in
mov
push
add
call
test
sub
pop
out
push
dec
pop
cltd
sub
in
repnz
daa
pop
mov
lods
loopne
and
movsb
nop
loope
loop
daa
mov
mov
xchg
in
pop
inc
inc
das
movsb
mov
inc
mov
roll
inc
inc
es
popa
xor
shrb
jg
push
test
xchg
inc
mov
pop
mov
mov
cltd
push
fsts
or
dec
jp
hlt
aam
push
inc
orb
mov
gs
xor
lret
add
call
jle
pop
bound
std
test
das
sbb
xchg
or
push
sub
nop
mov
fwait
pop
lret
icebp
inc
cmp
jle
rcrb
dec
fiadds
push
mov
mov
and
daa
lea
add
into
imul
repz
in
jecxz
pop
inc
adc
leave
add
or
mov
pop
push
inc
adc
add
push
push
es
dec
lods
out
sub
cltd
iret
pop
jbe
cli
or
push
sbb
jge
imul
inc
fwait
aaa
jg
movsb
add
nop
sub
in
addr16
call
ret
xchg
test
sahf
push
pop
jmp
aas
xchg
addb
enter
cmp
out
sbbl
mov
sbb
cmpsl
test
and
xorl
mov
xlat
sbb
rcrl
fstpt
mov
cltd
cli
xor
in
inc
lret
orl
xor
or
adc
test
mov
imul
lds
sub
xor
xchg
mov
fbld
mov
jb
sbb
pop
xor
xchg
es
add
call
lds
pop
pop
imul
lret
xchg
clc
dec
add
and
dec
jge
imul
adc
gs
adc
shlb
mov
rcrb
ja
popf
mov
cmp
xor
icebp
dec
sbb
sbb
mov
jno
clc
inc
xor
mov
push
scas
out
aad
repz
shll
mov
jne
add
and
nop
adc
inc
in
mov
bound
add
call
dec
insl
add
faddp
or
pop
pop
lock
rcll
in
sub
xchg
mov
pop
bnd
rclb
ljmp
int3
into
out
dec
iret
in
push
nop
add
fisubs
cmp
loopne
roll
mov
hlt
and
mov
or
dec
sbb
pusha
mov
fcomps
mov
jo
cs
rcll
nop
inc
mov
inc
enter
adc
fildl
ds
push
xor
pop
jmp
call
lods
sub
dec
xor
les
popa
leave
sub
icebp
cld
insb
mov
aas
scas
mov
mov
xchg
push
xor
xor
inc
add
loopne
andb
pop
sub
cmp
sbb
cs
jo
arpl
dec
outsb
sahf
mov
aaa
std
inc
stos
or
mov
xchg
inc
bound
xor
outsl
movsl
xor
inc
mov
mov
or
add
ds
adc
push
subb
stos
push
or
call
sbb
hlt
fwait
loope
test
loope
xchg
xlat
sbb
xchg
cmp
jmp
cmp
jg
xchg
out
leave
mov
dec
scas
sbb
aad
xchg
or
sub
mov
jo
adc
and
negl
js
ret
loopne
adc
dec
ja
cmc
sti
pop
or
push
sub
ljmp
xchg
nop
int
stc
sub
dec
mov
cs
test
shrb
stos
mov
enter
jp
loopne
sub
es
push
xlat
addl
mov
xchg
aam
movb
call
inc
cmp
ss
clc
jl
push
mov
out
mov
push
fistl
cmp
in
adc
cmp
test
shlb
movsl
mov
jle
ja
lock
sbb
stc
aam
mov
sub
mov
push
movsb
scas
xchg
enter
movsb
xchg
push
arpl
lret
mov
mov
lods
inc
mov
cmp
mov
dec
rol
call
fdivl
inc
xchg
inc
pop
sbb
imul
fs
xchg
sub
arpl
movsb
mov
test
call
cmp
mov
xchg
add
fcomip
adc
lret
in
mov
push
cmp
or
sub
xchg
in
lret
out
in
inc
push
pop
ljmp
sbb
test
jmp
test
fisubl
push
push
call
in
insb
jo
dec
jge
jnp
cmc
fdivs
repz
sbb
pusha
dec
jp
sti
fcomp
cli
jle
dec
sbb
call
test
gs
popl
dec
mov
daa
xchg
or
add
call
push
fnstcw
js
fmuls
mov
xor
push
ss
aad
pop
xor
xchg
cmp
sbb
cmpsb
les
add
add
movsb
mov
rcrb
push
sti
xor
out
mov
mov
or
lea
ja
scas
fidivrl
mov
or
pop
std
pop
imul
mov
aad
imul
mov
mov
xchg
popa
jb
enter
inc
vpaddusw
mov
icebp
jb
add
call
cmp
pop
insb
idivl
int3
daa
pop
xchg
push
jg
mov
push
or
cltd
xor
ljmp
es
xor
add
cmpsl
test
xor
fisttpl
pop
xor
sbb
je
into
xor
xor
xor
imul
cmc
dec
es
ret
xchg
xor
fstl
popa
cmp
pop
leave
test
addr16
cmp
loop
lcall
test
jns
insl
pusha
pop
ds
mov
test
test
adc
or
insb
add
call
add
xlat
pusha
mov
adc
cs
xchg
outsb
outsl
shlb
ss
push
or
adc
mov
mov
jnp
sub
xchg
jp
jnp
ds
jae
dec
jnp
fistpll
and
pop
ds
sti
pop
cmp
mov
shlb
cli
fcompl
ror
cli
jecxz
dec
in
fidivrs
sbb
int3
xchg
bound
mov
lods
mov
ja
stos
pop
adc
add
pop
mov
mov
push
addl
cli
xor
add
call
fs
xchg
push
pop
mov
or
push
fisubl
sub
or
mov
iret
out
jle
dec
sbb
mov
sbb
pop
stc
sub
xor
call
pusha
int3
leave
push
lret
ljmp
jmp
cs
bound
data16
xlat
and
in
pop
push
jne
repz
in
dec
pop
and
and
cld
mov
test
filds
xchg
pushf
ret
cs
jp
ret
dec
mov
call
out
jae
adc
ss
inc
sub
ror
popa
arpl
or
xchg
imul
adc
ret
out
push
iret
shlb
xorl
cwtl
xchg
sti
mov
xor
lret
stc
lods
jo
out
mov
insl
nop
and
xchg
cmp
andl
jne
xor
shr
shrb
in
sar
stos
mov
leave
adc
test
cmp
push
inc
sub
outsl
or
push
mov
test
ffree
mov
add
call
repnz
sbb
dec
stc
push
push
mov
mov
nop
sbb
dec
sahf
lcall
cmovge
dec
pop
mov
jne
sbb
adc
sub
scas
jge,pn
in
popf
movsb
cltd
or
mov
stc
cmpsl
mov
or
inc
jae
and
dec
fidivrl
pushf
cltd
scas
enter
ret
loope
add
pop
insb
dec
inc
push
jae
testb
mov
pop
addr16
sub
add
call
enter
ficoms
xor
and
loop
int
adc
adc
addr16
jns
xor
es
adc
or
bound
or
push
mov
jbe
add
lods
push
add
push
inc
inc
adc
sub
test
inc
lahf
mov
fsubs
lret
mov
js,pn
addr16
push
sub
imul
pop
sbb
aad
repz
sub
call
cmp
sbb
repz
xor
insl
sub
add
call
and
or
inc
scas
dec
push
mov
add
iret
rcrl
push
punpckldq
ljmp
sbb
ficomps
lret
mov
cmpsl
fstpt
inc
arpl
iret
bound
scas
cmp
movsb
in
push
cltd
aaa
pop
int
push
xchg
mov
in
push
mov
jne
call
scas
mov
setp
pop
pop
add
or
js
add
clc
lock
ret
je
nop
mov
dec
sub
add
js
test
mov
add
into
scas
add
call
fidivrl
into
sub
sbb
xchg
clc
xlat
les
int3
mov
fcmovbe
ja
in
mov
cmpsb
out
fistpll
and
loop
iret
mov
push
nop
xorb
or
sbb
arpl
data16
fnstsw
jge
mov
pop
sub
add
pusha
dec
pop
adc
and
add
xor
imul
adc
lcall
roll
dec
scas
jae
push
dec
jnp
add
call
xorl
fdiv
test
int
out
sub
sbb
jae
push
cmpsl
dec
inc
jle
inc
insl
sbb
add
cltd
into
mov
xor
push
push
jg
cmp
push
jns
jne
test
cmpsl
or
xchg
test
adc
pop
jp
jo
push
dec
loope
cmc
stos
loop
fistpll
jge
ret
stc
out
or
xor
mov
dec
shr
xor
jmp
adc
icebp
mov
adc
mov
call
mov
outsl
ret
mov
add
adc
jbe
test
fsubs
in
aaa
ret
inc
fidivs
push
call
enter
or
mov
scas
push
mov
jb
rorl
imul
xchg
jne
inc
fnsave
lcall
inc
movsl
loopne
and
shlb
in
cltd
pusha
in
pop
jbe
jb
out
stos
std
negl
xor
mov
lock
xchg
test
push
andl
and
jns
fsubrl
call
sbb
cmpsl
les
pop
lock
jne
imul
xchg
cltd
inc
cmpsb
mov
movsl
icebp
jb
out
cmp
cmpsl
mov
test
in
in
pop
std
dec
or
inc
mov
sub
leave
faddl
popa
mov
cli
cmpsb
pop
pop
adc
rolb
pop
mov
ljmp
xor
in
mov
imul
adc
inc
clc
jp
xor
fstps
jmp
inc
stc
ljmp
jl
mov
add
call
xor
cmp
inc
inc
das
push
loope
nop
inc
lret
mov
xchg
mov
cmp
in
jno
cmp
mov
or
adcb
mov
jg
in
jge
cmpsl
daa
xor
mov
sub
aaa
jmp
std
xchg
aad
cmp
pop
aaa
shl
pop
aam
jo
int
loop
mov
subl
rol
cmp
mov
xor
push
lret
js
into
dec
movsl
adc
in
add
call
jge
sbb
mov
rorb
push
jae
scas
adc
pop
out
sub
inc
shlb
adc
jp
ret
sbb
stos
fidivrl
data16
std
test
mov
mov
outsb
mov
rolb
cmc
cmpsl
mov
inc
scas
popa
cmp
inc
xlat
push
adc
jo
xor
sbb
mov
insb
loopne
out
dec
mov
jne
outsb
sahf
and
push
into
or
loopne
lret
mov
jb
xchg
call
add
call
add
fbld
push
int3
cmpsb
je
repz
ss
jne
inc
dec
fcomps
push
shl
inc
clc
add
push
mov
addb
mov
lcall
cmpsl
outsb
stos
call
mov
mov
jp
std
jb
fwait
ljmp
adc
insl
lret
xor
stc
jmp
enter
ficoml
sti
int3
aas
cltd
pop
inc
in
pop
fdiv
push
push
shr
lods
inc
add
push
add
call
cmpsl
enter
push
in
push
mov
aad
ret
mov
jecxz
mov
sahf
cmpsl
xchg
cmpsb
add
popa
sbb
pop
sub
fbld
scas
xchg
lret
xor
xor
sti
fimuls
push
cmp
fwait
das
xor
enter
repz
je
push
xor
out
adc
je
pop
mov
mov
push
push
ucomiss
add
lahf
push
sahf
or
mov
adc
mov
aaa
inc
jno
icebp
dec
into
ss
pop
mov
add
push
iret
sbb
add
call
ljmp
adc
lcall
popf
mov
into
add
mov
dec
pop
loop
sbb
popa
sbb
cmc
arpl
pop
sar
jle
jp
add
loope
inc
push
movd
push
ret
iret
mov
mov
fcmovbe
pop
pushf
or
sbb
test
cli
test
push
aad
jmp
push
repz
jb
lret
jae
repz
cld
outsb
or
and
test
repnz
lahf
inc
push
jp
daa
and
lea
jno
inc
flds
add
call
mov
sbb
in
mov
jo
or
mov
movsb
loopne
ss
push
sub
or
jo
jp
sbb
popa
mov
addb
pop
mov
push
popa
cmp
out
or
icebp
arpl
jmp
std
int3
outsb
mov
sub
loopne
ja
and
or
pop
js
xorb
jb
mov
dec
outsl
add
sahf
mov
or
adc
into
add
gs
add
adc
call
pmaxsw
sub
ret
ds
add
pop
adc
jge
mov
or
fld
lock
repz
xchg
cld
mov
mov
adc
mov
popf
push
loope
shlb
inc
jno
and
pusha
ss
aas
out
aaa
mov
mov
push
sub
mov
popf
pop
push
mov
call
orb
mov
std
subb
sub
or
fsubrl
cli
inc
rcll
adc
dec
jmp
roll
add
call
lds
add
mov
ljmp
outsl
addr16
or
lea
xchg
and
lock
jnp
stos
adc
mov
stos
inc
sbb
testb
inc
movsb
das
fwait
inc
inc
ds
mov
and
dec
inc
lret
mov
xor
push
iretw
pop
cmp
push
dec
xchg
mov
sub
inc
and
inc
sbb
cmpsl
cmp
movsl
push
cmpsb
les
lret
stos
xchg
bound
cmp
ja
ds
xchg
and
clc
xchg
scas
add
call
xchg
dec
fcos
inc
and
jle
call
mov
adc
cmp
es
ja
lea
jb
mov
call
inc
xchg
adc
adc
xchg
push
mov
add
cmp
mov
dec
stos
int
movsl
fistpll
dec
fnstcw
arpl
xchg
pop
mov
enter
inc
test
dec
jmp
jnp
jp
xor
in
out
sub
jmp
fsubrs
push
sbb
add
call
mov
dec
loopne
push
sbb
cmpsl
aam
fists
aam
enter
add
xchg
mov
shrl
mov
adc
pop
mov
aaa
lcall
add
js
adc
in
mov
fisubrs
lret
pop
outsb
add
ficoml
mov
scas
pop
mov
jne
sub
inc
xor
sbb
push
in
add
mov
jne
sti
cld
ja
js
pusha
test
pop
xchg
mov
or
hlt
lea
add
call
loopne
scas
cmpsb
fld
mov
or
std
push
shr
pop
inc
movsl
push
adc
bound
inc
negb
xorl
and
push
lock
jo
data16
jnp
add
das
or
jae
inc
fs
adc
mov
fcomps
out
es
nop
inc
or
xchg
leave
ss
inc
fs
pmuludq
movsb
dec
push
xchg
test
jbe
call
sbb
cmp
and
out
push
xor
xlat
jnp
test
cmc
std
or
xchg
test
call
inc
pop
adc
out
data16
out
xlat
in
scas
inc
add
enter
inc
and
or
int
cmp
rcrb
jbe
add
cmp
shl
cmp
inc
in
inc
mov
es
ret
dec
pop
sbb
stc
fldcw
pop
pusha
or
movsl
pusha
pop
flds
orl
mov
push
mov
xor
pop
push
cmc
sarb
xchg
lret
mov
adc
in
loopne
in
pusha
adc
sarb
js
shufps
pop
add
call
mov
movsb
xor
test
add
mov
fistpl
jmp
mov
lea
sbbl
dec
movsb
int
rorl
xor
jnp
outsl
testb
and
and
xor
shll
cs
pop
fdivr
jl
fdivrl
jbe
mov
xor
sub
hlt
adcl
pop
jne
ljmp
and
xor
xchg
enter
sbb
enter
clc
pop
int3
inc
std
cmp
or
mov
in
mov
imul
add
call
mov
inc
or
lret
hlt
icebp
into
mov
jmp
cs
mov
test
xor
aaa
inc
xchg
pop
push
fs
push
cmp
sahf
lret
pop
push
enter
cmp
adcb
add
or
and
mov
xchg
addr16
add
mov
out
adc
lret
xorb
lcall
shrb
adc
add
dec
push
sbb
inc
dec
movsb
arpl
jmp
cmp
fistl
call
repnz
mov
xchg
mov
mov
xchg
xlat
mov
xor
sub
fcmovnb
mov
and
inc
popf
jge
clc
push
xchg
cmp
xchg
dec
imul
insl
psubsb
sarb
neg
jecxz
add
sar
stc
pop
inc
xchg
movsl
push
push
xchg
pusha
imul
mov
pushf
stos
adc
loopne
imulb
mov
out
fsubrs
mov
jnp
cmp
mov
popf
test
mov
sbb
mov
call
cld
dec
call
xchg
push
ds
push
push
cmpsl
test
aam
mov
xor
int3
cmp
rorb
fadds
inc
inc
cmp
dec
adc
cmp
ljmp
dec
lret
rolb
out
sbb
sbb
jg
jecxz
jmp
in
mov
loop
xor
arpl
insb
mov
out
inc
stc
push
dec
les
xchg
cmp
je
lods
sarl
mov
in
lea
roll
add
call
inc
jne
lret
lods
jns
and
pop
push
mov
fnsave
test
fpatan
mov
mov
fwait
pop
dec
dec
and
in
and
pop
outsl
les
cmp
inc
sti
fs
push
int
lods
pop
or
cltd
mov
and
lods
ja
lcall
ds
pop
test
aaa
pop
lock
cld
and
push
pop
mov
movsb
xchg
xchg
or
gs
jmp
out
xor
fs
jnp
dec
sbb
popl
mov
lar
add
call
or
stos
enter
les
sbb
shll
outsb
scas
mov
inc
cld
mov
jge
scas
mov
popa
loope
jbe
fnsave
pop
xor
loopne
inc
cmc
enter
mov
out
jb
mull
lret
and
fnsave
decl
pop
hlt
xor
movsb
xchg
popf
ja
sarl
dec
popa
mov
mov
fistl
gs
adc
xlat
das
push
testl
mov
fs
pop
ret
pop
add
call
cwtl
sub
or
fstpt
pusha
cli
iret
imul
xchg
fbstp
inc
push
dec
cwtl
push
xchg
pop
sub
sub
dec
sub
pop
inc
dec
scas
rcl
psadbw
aad
sub
icebp
ds
sbb
lods
sub
xor
ficoml
addr16
fisttpl
cmc
dec
call
or
ds
xor
int3
jge
fs
jnp
mov
iret
mov
std
inc
inc
fwait
and
jg
or
mov
ret
insb
cli
jmp
std
into
mov
call
pop
mov
imul
daa
pop
jge
cwtl
mov
dec
andb
stos
xchg
sub
adc
mov
mov
xor
in
imul
pop
movsb
loopne
and
lock
xor
sub
lods
mov
cmpsb
test
xchg
notb
shrl
adc
jb
ds
and
xchg
jnp
push
mov
dec
call
imul
and
xchg
mov
push
xor
into
pop
and
adcl
jecxz
cmp
mov
add
call
sub
push
popa
pop
rcrb
and
mov
adc
add
sbb
out
mov
nop
push
add
imul
add
add
data16
test
sub
adc
mov
mov
out
push
and
xor
push
mov
push
mov
pop
out
push
adc
fistps
and
sub
jp
or
or
iret
and
data16
jns
adc
jo
add
call
cltd
pop
fcmovu
mov
and
faddp
nop
or
dec
mov
leave
jle
nop
jb
out
xchg
jg
mov
jp
test
or
xor
or
sub
popf
stos
or
mov
cmpsl
inc
fcomp
push
cltd
push
pop
inc
xor
push
mov
fcomi
pop
sub
repnz
jae
or
out
inc
sbb
pop
push
stos
add
test
scas
inc
pusha
mov
das
push
iret
jnp
inc
pop
push
mov
pushw
std
les
xchg
and
mov
add
call
jnp
sub
and
mov
aad
pop
or
adc
shl
lret
cmp
addr16
jp
movsb
jle
addr16
daa
aas
sbb
mov
outsb
cmc
sbb
call
or
adc
in
cmpsl
addr16
ffreep
rorb
scas
cmp
ds
or
mov
loopne
rcrl
sub
fld
fidivrs
push
rol
and
mov
js
mov
mov
push
out
lret
out
lds
fildll
std
sbb
add
call
enter
and
jne
adc
pop
jo
add
fs
inc
arpl
sbb
lea
add
ret
imul
push
leave
arpl
pushf
outsl
mov
dec
adc
jae
inc
jo
cmp
out
xchg
or
out
fldenv
fisubrs
sbb
push
lock
movl
movsl
in
enter
in
mov
mov
and
or
cld
xchg
pushf
xchg
pop
mov
add
call
rolb
add
sbb
inc
push
dec
cmp
pop
mov
add
jle
lea
add
scas
jmp
adc
dec
pop
cmpsl
push
sub
loopne
pop
sub
cs
xchg
lcall
pop
jnp
push
mov
fists
sub
clc
and
cld
xlat
add
mov
ljmp
hlt
popf
push
sbb
inc
outsb
or
xchg
and
rorl
movsl
pop
sub
sub
movsl
loopne
call
lret
lcall
mov
lock
jmp
cli
icebp
aas
mov
in
iret
arpl
enter
jp
push
xchg
mov
mov
sub
jmp
xchg
adc
icebp
xor
inc
pop
popf
pusha
push
push
dec
lds
repz
iret
mov
inc
sub
outsb
mov
arpl
movsb
xchg
xlat
and
sbb
add
lret
push
push
ja,pn
cmp
daa
mov
clc
pop
mov
sub
push
push
add
call
loopne
imul
add
pop
sbb
xchg
std
rorl
pop
orl
out
mov
xchg
out
lock
dec
and
xchg
pop
lret
stos
xchg
out
mov
xchg
mov
arpl
mov
aam
sub
sub
push
ss
imul
inc
in
push
leave
dec
mov
in
dec
out
loopne
sbb
rorl
pop
sub
jmp
xor
push
sub
mov
jle
cmp
les
stos
jecxz
imul
call
dec
pusha
push
push
lods
jg
scas
int
mov
push
sbb
les
inc
mov
or
pop
std
pop
in
clc
clc
add
xchg
sbb
fdivr
int
int3
add
scas
call
xchg
mov
and
xchg
pushf
mov
lea
fstl
sbb
push
adc
and
jns
ss
mov
loop,pt
jo
xchg
int
inc
cld
call
stc
enter
inc
loopne
inc
sbb
mov
mov
lock
call
test
adc
sbb
jp
out
mov
cmp
push
push
and
fprem1
bound
jp
pop
sbb
gs
cmc
aas
or
dec
adc
xor
orb
mov
xchg
aas
aaa
xor
adc
jae
int
mov
push
out
add
mov
add
jle
fcoms
mov
pushf
cli
mov
fwait
push
mov
pop
loopne
out
or
lea
sub
sub
loopne
jg
lds
stos
mov
add
call
cmp
mov
mov
es
adc
ficoms
nop
and
fildll
call
xchg
pop
mov
dec
std
pop
mov
notl
inc
adc
scas
loopne
outsl
mov
push
movsl
sarl
or
cmpsl
push
pop
stos
push
lret
mov
loopne
pop
or
and
mov
inc
movsl
out
or
lahf
cmpsl
imul
jl
and
sbb
sub
bnd
es
rol
sti
std
in
lods
jl
add
rorl
aas
add
call
loop
mov
aad
test
xchg
adc
or
jmp
lret
dec
xor
je
mov
arpl
pushf
cmpsl
movsl
loopne
lret
test
sbb
popf
xchg
mov
mov
xor
jno
shll
loope
xor
or
push
xchg
adc
mov
dec
push
lret
ja
xchg
xchg
mov
adc
fimuls
xchg
addl
scas
pop
mov
ljmp
popa
xor
jae
out
sub
add
call
fidivs
data16
push
subl
cmp
push
inc
cmc
adc
ja
inc
sub
xor
mov
in
jb
jb
ret
pop
mov
cmp
pop
dec
into
fnstenv
inc
xchg
in
jnp
push
iret
xor
jne
sbb
mov
ret
lock
cmp
sub
or
mov
xchg
movsb
adc
lds
cmp
arpl
ror
outsl
mov
jl
push
add
call
ja
out
jno
lea
sbb
js
mov
mov
jg
es
icebp
cli
orb
test
push
popa
mov
mov
sar
xchg
les
fidivrl
xor
mov
sub
fstl
adc
cmpsl
inc
xchg
lret
inc
mov
adc
mov
movsl
inc
jge
testl
mov
cmpb
decb
loope
imul
leave
fwait
lret
les
push
insl
les
push
icebp
and
std
int
in
mov
ja
cld
sub
call
cmp
rol
aaa
syscall
jae
jl
pop
xchg
iret
enter
jbe
adc
lock
mov
and
cmpsl
push
sti
andl
mov
jg
les
jb
pop
clc
pop
xor
andl
ret
out
ret
pushf
lahf
loopne
sub
or
xchg
mov
inc
cmp
xchg
icebp
mov
daa
pusha
xchg
out
sti
inc
ds
cmp
outsl
mov
xor
add
pop
push
mov
lea
inc
lods
or
add
call
test
js
sarb
xor
xor
int3
gs
xchg
popa
aas
sub
mov
adc
xchg
or
lea
xchg
dec
jle
xchg
jno
xchg
jecxz
lret
xchg
aam
js
fistl
and
testl
push
fcompl
mov
cmp
inc
leave
inc
aas
xor
int3
movsl
pushf
add
sbb
xchg
int
in
add
in
stc
sbb
mov
cmp
shlb
call
mov
xchg
mov
jg
mov
push
movhps
add
call
testb
cmp
das
jno
into
mov
jno
in
incl
decl
push
jns
outsl
mov
fs
daa
dec
jb
je
out
daa
xlat
pop
jne
lock
in
inc
andl
or
bound
lret
adc
cmpsl
cld
push
pop
mov
mov
js
xor
xchg
das
or
mov
inc
adc
mov
push
test
mov
or
jb
jmp
add
les
call
gs
pop
lods
loopne
enter
jle
pop
and
out
in
push
lret
shll
dec
adc
loopw
jmp
push
pop
mov
inc
rcrl
and
popf
scas
loop
pop
iret
and
pop
mov
pop
mov
cmp
mov
jle
popf
adcb
jg
sarl
ss
add
js
and
xor
pop
mov
and
mov
cld
fbstp
or
jp
mov
xor
lods
add
call
push
cmpsb
rep
jns
pushf
sbb
xchg
and
inc
cmpl
xor
push
fcomps
jp
xchg
std
mov
pop
mov
and
mov
cmp
jl
aad
movsb
jle
jno
cwtl
push
mov
dec
pop
dec
sub
fbld
pop
daa
sub
clc
mov
pushf
mov
outsl
sarl
aad
into
mov
inc
add
mov
cli
dec
stos
xchg
jns
lahf
or
pushf
insb
pushf
or
sub
movsb
push
fisttpll
xchg
push
orb
add
call
aam
inc
out
lods
or
inc
fldl
hlt
inc
sub
mov
int3
scas
nop
pop
sbb
addr16
mov
popf
dec
shrb
jnp
xor
and
pop
add
sbb
push
pop
and
mov
lcall
mov
or
ffreep
push
sub
push
sub
fbld
in
jae
test
divl
dec
pushf
mov
cmp
push
loop
xlat
mov
cmpsb
lods
js
push
inc
pop
adc
cmpsb
adc
incb
shlb
add
call
dec
jb
fmuls
push
xchg
clc
cmpsb
dec
xchg
pop
out
inc
call
xchg
jo
add
mov
or
popa
xor
mov
jge
out
push
pop
dec
inc
push
push
aas
notb
ret
jnp
insl
mov
dec
and
mov
dec
mov
adc
mov
das
es
jmp
and
sbb
out
sahf
mov
dec
sub
or
cmpsl
jmp
inc
repz
hlt
movsb
loope
pop
mov
inc
pop
iret
mov
inc
add
call
cmp
into
popa
inc
jge
leave
mov
lods
movq
addr16
aad
stos
xchg
je
test
sbb
scas
sub
inc
test
scas
negb
push
inc
cwtl
shrb
sbb
xlat
pop
incb
inc
rclb
test
ljmp
fs
lret
dec
dec
jb
inc
mov
shrl
mov
pop
xchg
dec
mov
and
xchg
push
hlt
aam
pop
mov
xchg
pop
fstpt
repnz
call
out
shr
xor
into
lahf
popa
mov
add
call
mov
in
push
pmulhuw
fildll
call
pop
stos
enter
mov
dec
jmp
call
inc
or
rorb
cmp
insb
ss
rclb
mov
sbb
mov
xor
jns
sahf
xor
js
mov
stos
ljmp
test
dec
cld
mov
flds
dec
je
mov
dec
call
cmpsl
jmp
les
xorl
push
jb
pop
or
push
outsl
arpl
sub
add
call
clc
jo
mov
push
daa
ret
movsl
mov
jne
mov
cwtl
nop
test
enter
sub
insb
in
dec
dec
pop
in
cmpsb
adc
sbb
imul
mov
movsb
sti
jne
not
dec
mov
adcb
xor
xchg
repz
mov
jb
or
jae
jecxz
cmp
sarl
out
in
push
clc
fistpll
pop
xor
or
ljmp
sub
test
cld
jbe
das
push
cld
jl
add
call
jbe
imul
movsl
sahf
cmp
dec
cs
adc
mov
add
fs
cmp
imul
mov
insl
push
std
mov
jg
mov
dec
cmp
sbb
jmp
negb
and
hlt
push
fsubl
ds
sub
push
and
outsb
push
add
sub
cmpb
xor
and
ds
test
mov
jmp
clc
mov
sub
call
rolb
lea
leave
rep
cmp
fimuls
imull
xor
or
mov
jne
lds
mov
rclb
pop
clc
jecxz
notl
xchg
inc
mov
lret
inc
mov
inc
xlat
hlt
pop
xchg
mov
insb
fstl
add
pop
mov
jnp
out
outsl
xlat
push
pop
js
xlat
mov
xor
jae
xorl
mov
xor
sarb
and
lea
lret
std
mov
stc
cld
or
call
stos
xor
pop
sub
cmp
inc
dec
ret
fdivrl
cmp
mov
loop
dec
es
das
lock
test
xlat
jge
cmp
pusha
sbb
cld
add
jne
adc
shlb
insl
jo
out
add
xchg
or
outsl
cmpsb
mov
jb
hlt
cmp
cli
jmp
cs
and
movsb
ds
mov
push
lods
test
daa
jno
mov
in
jge
jbe
push
pop
cmp
add
add
call
cwtl
sub
mov
fistpl
lock
pop
push
mov
cmpb
lods
call
lods
int
cmp
shrl
mov
ljmp
jl
sbb
repnz
decb
dec
rcrb
mov
fmull
sbb
mov
sub
mov
call
xchg
pop
inc
dec
sbb
stos
test
call
add
and
push
fwait
nop
repnz
mov
lcall
mov
test
aaa
xor
ljmp
call
pop
mov
sbb
clc
stos
pop
ja
pusha
int3
xchg
sub
xchg
icebp
mov
sbb
mov
lcall
xchg
ss
xchg
call
mov
cmpsl
cltd
orl
cli
ss
imul
scas
cmp
daa
stc
mov
mov
mov
jl
and
mov
test
add
or
imul
xor
dec
sbb
xor
cld
sbb
push
cmp
shrl
sbb
movl
call
jle
push
jno
push
adc
and
cmp
adc
add
sbb
adc
lea
sbb
divl
fs
das
inc
int3
mov
sub
sbb
rcrb
aam
test
pop
lds
jae
stos
pop
adc
in
das
xchg
push
mov
icebp
pop
adc
sub
and
shrb
mov
sub
cli
sbb
rcrl
xchg
push
dec
aas
in
mov
fyl2xp1
fxtract
sub
add
call
stos
inc
add
cmpsl
xor
mov
xchg
sbb
clc
fwait
cmc
xchg
lods
fadd
jge
adc
xlat
inc
pop
lods
or
or
mov
dec
inc
out
push
cmp
fnsave
arpl
lods
pop
jb
jbe
cmc
rorb
ret
fs
add
cmp
jb
xchg
outsl
int3
adc
cmp
daa
sub
sub
sbb
mov
arpl
or
mov
xchg
ss
inc
push
push
les
and
int3
sbb
sti
sti
push
movsb
xor
add
call
cmpsb
mov
sbb
xchg
jg
dec
sub
mov
fdivrl
stc
popa
jecxz
pop
arpl
push
pop
ljmp
sub
push
aam
jbe
adc
mov
push
jp
pop
xlat
cmp
sbb
ss
add
cmp
insb
rolb
dec
in
popa
inc
ja
and
xchg
mov
sbb
mov
pusha
pop
mov
int
pushf
arpl
ret
das
das
push
jne
icebp
clc
inc
dec
or
lods
push
jg
pop
std
jl
add
call
ret
test
leave
dec
add
stos
push
rcll
xor
bnd
cltd
jno
loope
dec
pop
loope
test
inc
es
stos
repz
mov
cmc
insb
pop
faddl
mov
je
push
je
xor
push
pop
mov
sbb
mov
fs
fisttpll
cmp
pop
sub
insl
mov
cmp
and
icebp
xlat
fcomip
movsb
jmp
in
jns
mov
xchg
inc
out
mov
cmp
das
std
icebp
pop
sahf
xor
mov
push
cmp
and
pusha
jno
cmp
cli
or
add
call
les
addl
mov
out
femms
xchg
jbe
jge
out
ficoms
jae
push
xchg
sbb
or
or
ja
add
std
push
insl
mov
xchg
xchg
or
push
dec
add
and
insl
adc
push
or
out
rcrl
rolb
inc
fsubrp
mov
int
dec
mov
jb
loope
push
fs
jge
push
loop
cmp
aad
in
clc
mov
aas
add
fdivr
cmp
cmp
xor
inc
jb
pop
cmp
adc
add
call
sbb
outsb
ret
arpl
js
dec
push
pop
mov
xchg
mov
push
add
xchg
fcomps
or
insb
xchg
sbb
add
inc
ss
hlt
cmpsl
loopne
mov
lret
jb
jge
xchg
popa
sbb
dec
xchg
pop
test
stos
shlb
xchg
cwtl
push
enter
dec
idivl
repnz
clc
repz
adc
stos
div
mov
add
sub
jp
imull
jmp
jecxz
cmp
cmp
fwait
jmp
mov
hlt
add
call
pop
jmp
dec
cmp
in
movsb
fs
push
push
mov
mov
adc
xchg
xchg
jo
push
mov
mov
scas
in
icebp
mov
stc
mov
in
sbb
shlb
out
lods
ret
add
and
fnsave
imul
rcll
adc
xor
pop
les
sbb
negb
cli
movsl
shrb
mov
add
push
movsl
mov
shl
push
pop
incb
bnd
in
icebp
data16
sub
add
ret
xor
xor
das
xor
add
call
stos
stos
inc
insl
fdivrl
negb
in
lds
sbb
sub
pusha
rcrl
jno
add
adc
jle
mov
addr16
xchg
cmp
lods
fistps
cltd
mov
xor
test
sub
test
mov
mov
pop
scas
pop
add
mov
adcl
sti
or
dec
adc
stc
jmp
mov
xchg
push
cmp
dec
scas
lods
push
mov
dec
popf
pop
sub
xor
mov
add
call
cmp
jp
filds
xchg
add
adc
and
adc
in
sbbb
lret
push
adc
fcoms
or
inc
jge
mov
mov
and
into
movsl
fdivs
mov
lods
push
push
push
push
add
lahf
mov
shl
orb
adc
cli
and
pop
call
jl
nop
mov
data16
bound
mov
movsl
lret
std
inc
arpl
push
mov
mov
inc
and
add
call
push
mov
mov
pop
xchg
xor
cmpsl
and
xchg
lcall
or
idivb
or
cwtl
mov
cmc
int
sbb
insl
repnz
jecxz
sub
push
cmc
fmul
in
adc
lods
aad
jp
inc
or
xor
and
and
dec
dec
scas
inc
sti
cmp
pop
mov
cvttps2pi
arpl
sti
mov
out
mov
cmpsl
aas
lds
xor
sub
push
into
dec
pop
inc
jmp
fs
call
add
nop
mov
insb
loopne
fstps
popf
pop
cltd
push
xor
mov
jnp
jmp
jp
insb
inc
cld
pop
xchg
sbb
or
xchg
jns
pop
out
in
xchg
cmp
nop
repnz
ds
sbb
outsl
addr16
popa
xchg
and
push
iret
fstpt
jle
cwtl
inc
in
push
push
push
lcall
pop
sbb
les
leave
push
add
push
push
mov
es
sub
int
mov
add
call
cltd
clc
pop
mov
mov
shl
push
dec
das
push
arpl
ljmp
fstl
jno
pop
loop
dec
or
cltd
clc
lahf
jo
pop
mov
sub
xor
sti
out
jecxz
movsl
aaa
pop
sub
pop
lahf
jno
outsb
scas
data16
ss
rcr
inc
out
hlt
xor
push
pop
cltd
subl
inc
and
xor
les
rolb
mov
enter
loop
jmp
lods
xchg
add
les
jl
or
add
call
faddl
push
sub
sub
outsb
fistl
das
adc
mov
mov
sub
in
cwtl
andl
pop
mov
pop
pop
hlt
int3
in
imul
es
stos
int3
jb
cmc
xor
fucomip
movups
mov
mov
push
faddl
inc
inc
mov
add
in
out
movsl
xchg
lret
or
or
mov
lods
lret
mov
in
in
stos
and
pop
sbb
fistpll
dec
lods
out
add
call
push
mov
ss
inc
mov
imul
and
mov
push
test
scas
incl
xlat
sub
dec
dec
sub
loop
inc
stos
rcr
div
inc
cmpsl
pop
scas
push
loopne
gs
push
and
pop
jns
lret
sahf
std
lds
push
xchg
xor
push
js
imulb
mov
inc
pop
enter
mov
sbb
insl
sbb
adc
jnp
jne
pop
dec
lret
rclb
or
into
mov
mov
movsb
mov
add
call
dec
pop
sbb
ljmp
and
les
js
or
sub
mov
push
sbb
cwtl
xor
mov
dec
xor
lds
lret
or
mov
inc
adcl
and
mov
jmp
jl
cmp
mov
clc
xchg
jecxz
dec
xchg
jns
mov
imul
dec
jge
arpl
adcl
inc
insl
fistpl
dec
cmpsl
test
add
call
adc
cmp
in
sbb
repnz
sahf
xor
dec
or
stos
mov
fdivrs
pop
sbb
shlb
lret
jns
and
cmp
pusha
push
mov
mov
push
jecxz
bound
stc
fsubrl
push
fdiv
movsb
push
sub
movb
cmp
test
push
lret
sub
insb
mov
lds
in
or
sbb
sarb
cmp
call
mov
iret
lds
sahf
xor
push
sbb
add
call
in
mov
cmp
or
frstor
call
jae
das
cmp
dec
pushl
sbb
aas
int3
add
mov
je
adc
xchg
aaa
sbb
dec
xor
and
mov
jecxz
imul
push
or
xchg
xor
leave
test
cmp
inc
pusha
ret
pop
shlb
mov
out
popf
adc
arpl
xchg
sti
lods
dec
lret
cld
jno
sub
and
cmpsb
or
and
ds
scas
xchg
cli
dec
xchg
ja
add
call
sar
push
std
jecxz
rorl
xor
outsb
and
add
mov
fildl
imul
lretw
xor
push
mov
mov
fcoms
int3
sub
jmp
sbb
nop
xor
fcompl
fiadds
outsw
ja,pn
lock
dec
add
push
cmp
out
inc
out
out
mov
jge
push
sbbl
add
ljmp
nop
add
es
pop
test
cmp
lods
js
pushf
stos
or
cltd
shll
rol
or
add
call
ret
mov
rorl
dec
mov
sahf
in
and
push
repz
cmp
dec
dec
sub
add
stos
xchg
or
fwait
mov
inc
mov
jns
dec
add
add
lds
xchg
jmp
test
lods
xchg
jl
xor
jne
or
push
scas
cmp
adc
inc
cmp
ret
pop
inc
fsubl
scas
lahf
xor
jno
sub
inc
mov
imull
addl
add
call
cmpsb
sbb
adcb
rolb
insl
mov
imul
adc
xchg
cltd
jae
jecxz
cltd
int3
repnz
mov
in
in
push
xlat
mov
cli
inc
sbb
jg
insl
ret
rcll
rorb
mov
test
and
sti
lods
outsl
jbe
mov
xchg
sbb
push
pop
fisttps
cmpsl
pop
push
adcb
cltd
push
mov
rclb
cmpsl
daa
jb
fcompl
dec
popa
fcmovne
pop
leave
shl
sub
add
call
outsl
push
inc
mov
lahf
fwait
push
push
insl
cld
or
movsl
leave
inc
nop
xchg
xchg
cli
jmp
pushl
lret
cli
dec
sub
inc
adc
pop
add
cmp
rcll
dec
xchg
fsubrs
mov
aas
cs
mov
scas
mov
cld
cld
adc
shll
xchg
test
jne
add
int
sub
jo
mov
add
insb
jp
daa
test
pop
xor
adc
xchg
xor
jb
fdivrp
mov
int
push
add
call
add
push
pushf
fwait
gs
in
pop
popa
cs
push
cmc
jno
xchg
test
outsb
daa
aad
aam
xorl
call
in
pop
inc
adcb
adc
pop
add
sbb
xchg
imulb
insl
stos
push
fisttpl
adc
js
cmp
jle
dec
test
and
aaa
es
xchg
push
adc
cs
lahf
test
and
push
lds
push
int
pusha
inc
in
xchg
mov
arpl
vmwrite
add
call
push
and
add
mov
shlb
jno
int
repnz
aas
stos
sub
mov
loopne
jnp
push
add
mov
mov
sbbl
mov
popa
loope
aam
sub
inc
test
mov
iret
sahf
inc
sbbb
pop
repz
or
out
inc
movsl
and
nop
mov
addb
popf
imul
test
push
mov
or
xor
mov
dec
xor
scas
ss
lds
add
call
bound
jmp
xor
ret
addr16
lods
mov
aas
xor
cmp
sahf
pop
pop
xor
pop
imul
or
cmc
mov
cmpb
xlat
mov
inc
inc
pop
cwtl
imul
pop
pop
out
mov
das
lock
xchg
dec
or
jne
imul
fsubr
pop
lea
fsubrl
jmp
das
xchg
scas
ja
jo
jg
mov
dec
fsubrp
ja
subb
add
jle
pop
cmpsb
xchg
pusha
stos
dec
imul
add
call
outsb
popa
fdivs
xor
pop
jnp,pn
das
fucompp
pop
xlat
xor
inc
cwtl
jbe
outsb
sbb
dec
xor
add
add
idivl
add
pusha
sub
adc
mov
jl
mov
call
out
iret
sbb
sahf
cmp
and
jle
push
add
sub
xchg
xor
outsl
adc
mov
loopne
adc
or
xor
xchg
push
inc
cmp
ret
addr16
bound
add
call
pop
lcall
adcl
xor
aad
ret
jge
add
jg
mov
out
inc
mov
xchg
in
sti
xchg
add
jne
cltd
mov
cli
ret
push
ja
orl
adc
imul
mov
xor
jmp
jae
xchg
and
mov
add
push
hlt
dec
mov
gs
ds
pop
rolb
push
inc
lcall
notl
sub
fs
push
mov
mov
mov
pop
jae
ja
add
out
add
call
fcomp
adc
inc
mull
sarl
mov
jp
inc
push
decb
sahf
data16
and
and
jo
sbb
repnz
stc
pop
pop
cmc
lds
inc
xchg
xchg
add
cli
je
jg
daa
ljmp
sub
xchg
mov
push
or
mov
lds
sub
loopne
cmp
bnd
jnp
inc
sub
testl
push
icebp
cltd
jo
stos
add
mov
inc
loop
add
call
fcoms
scas
and
out
lret
push
ret
dec
dec
pop
arpl
mov
fists
inc
pop
jmp
nop
xchg
push
icebp
stc
cmpsl
or
lods
jbe
push
adcl
mov
push
loope
in
leave
insb
int
fbld
cmpsb
cmc
xlat
ret
stos
aaa
ret
jno
dec
sbb
inc
xchg
sbbl
pop
mov
jg
pop
clc
je
dec
int3
mov
insl
mov
mov
pushf
fs
push
mov
or
sbb
add
call
add
fadd
popa
add
shrb
popa
sbb
mov
int
sub
cmp
push
sub
mov
pushf
and
js
je
jo
fs
mov
jae
pop
fisubl
dec
stc
arpl
int
adc
mov
mov
sarb
mov
in
dec
in
call
dec
and
imul
xchg
mov
mov
and
dec
pusha
and
outsl
lds
sbb
imul
sbb
add
call
inc
out
lods
aam
ljmp
std
shl
jl
sub
mov
test
lods
roll
sub
imull
sbb
data16
shll
add
add
sub
push
test
push
sti
fwait
jl
filds
loopne
into
sbb
cmp
sti
push
mov
xor
sti
out
jmp
cmp
das
mov
das
jno
scas
inc
sbb
popa
push
lods
mov
enter
mov
aaa
mov
sub
inc
icebp
test
add
call
stos
movsl
pushf
arpl
mov
ret
push
scas
sti
scas
and
xchg
mov
cmc
mov
jae
sub
aam
dec
fs
hlt
pop
in
jp
push
shl
lods
inc
sbb
pop
leave
aam
insb
push
mov
cs
pusha
mov
mov
xchg
pop
sbb
repz
mov
push
inc
rorb
sbb
add
sub
pushl
imul
cmp
sbb
insl
jp
arpl
lds
addr16
add
call
jns
test
movb
inc
in
jecxz
jle
push
adc
cmp
mov
dec
icebp
mov
test
adc
out
and
popf
shlb
jmp
mov
stc
add
bound
and
xor
arpl
test
push
inc
sub
adc
scas
testb
mov
into
jg
in
mov
mov
and
cmpsb
enter
adc
loope
or
sbb
shl
pop
pop
cld
add
leave
ljmp
add
call
dec
jb
out
pop
adc
sarb
push
movsb
rcrb
insb
sub
shll
dec
mov
adc
int3
add
mov
dec
mov
sbbb
push
xchg
inc
and
test
sub
sbb
mov
bound
cmpsb
lret
sbb
stc
push
push
xchg
stc
stc
sbb
fdivrs
arpl
or
enter
xor
lock
dec
cli
div
popf
test
adc
test
shrb
mov
add
call
loop
mov
daa
fdivrs
mov
inc
xchg
or
mov
icebp
daa
jne
in
jle
pop
xor
imul
aas
negb
sbbb
sbb
mov
pop
push
mov
gs
xor
and
fs
mov
lea
push
sub
pop
fnstsw
mov
xchg
and
shl
lods
fistpl
jno
push
jl
jmp
scas
pushf
push
scas
inc
xor
inc
sub
jnp
adc
inc
add
call
movsb
sbb
cmp
cld
mov
rcrb
fadds
out
popa
pop
jb
fwait
mov
addb
outsb
fcomps
inc
mov
dec
popf
clc
and
adcl
emms
in
insl
dec
or
mov
mov
sub
psubd
aam
xchg
jg
mov
lahf
ret
insl
ljmp
and
push
jmp
aaa
fldt
pop
cmp
xchg
jne
cli
stc
js
xlat
mov
mov
push
add
int3
mov
mov
mov
add
call
xlat
lods
or
mov
cmpsl
loope
cwtl
mov
adc
xchg
push
gs
adcb
cli
out
scas
inc
jnp
arpl
dec
sbb
pop
sub
rcrl
roll
dec
sbb
lods
mov
popf
xchg
push
xchg
je
push
mov
lds
lret
imul
lret
icebp
fldt
stos
sub
mov
mov
out
and
jle
pop
stos
dec
in
sub
xchg
fisttps
into
mov
mov
ret
xchg
add
add
call
adc
mov
imul
push
lahf
mov
inc
cltd
std
movsb
cwtl
in
loope
mov
jnp
fs
shl
orl
loop
add
xor
kmovw
push
out
pop
mov
cltd
es
push
and
arpl
xor
outsb
insb
pop
adc
cmp
stos
push
fucom
xor
ss
adc
mov
mov
xchg
pop
mov
jecxz
imul
push
cltd
and
pop
add
call
jb
and
and
aas
out
insl
jb
movsl
adc
or
pop
jcxz
pop
mov
and
js
fimull
sub
push
adc
test
jle
jl
mov
stos
out
mov
enter
mov
mov
loop
jo
inc
xlat
pop
imull
rorb
push
or
pop
fmul
sahf
xor
xchg
rcrb
add
outsb
cmp
dec
knotw
adc
mov
movsb
test
mov
add
call
data16
mov
jns
jns
imul
mov
mov
or
mov
lahf
xchg
movsb
inc
jg
sbb
je
fcompl
das
fidivs
call
xor
orb
push
rcl
jnp
jbe
mov
xchg
in
inc
jns
and
mov
fnsave
and
sar
or
bound
inc
inc
jle
and
out
fisubrs
repnz
fwait
push
fisttps
add
call
dec
inc
push
xchg
test
out
lods
fwait
scas
arpl
pop
out
add
sbb
in
jp
and
repz
sbb
mov
jecxz
fs
sub
lret
xchg
imul
out
es
mov
pop
and
jl
not
jo
enter
fcmovnu
push
add
sbbl
decl
xor
cmpl
das
lods
sbbl
and
loop
out
repz
add
call
cld
xor
inc
jl
inc
dec
aad
add
pop
mov
bound
xchg
cs
call
nop
add
out
mov
jge
lret
pop
shr
in
std
cwtl
test
nop
jnp
popf
jl
jg
loopne
mov
outsl
popf
out
arpl
test
sbb
sub
cmc
push
adc
add
les
daa
adc
sbb
jns
mov
repz
sbb
cmpb
mov
dec
mov
daa
adc
call
dec
xchg
and
orl
aaa
ljmp
xchg
jns
dec
call
adc
pop
test
add
sub
test
adc
enter
out
enter
je
jg
lret
out
pop
sub
jp
test
cmp
vmovntdq
popa
addr16
pop
inc
movsb
popf
xor
cmp
sub
rcrl
insb
xor
xchg
imul
adc
sub
push
cmp
inc
xor
xchg
or
adc
add
call
xor
pop
nop
int3
mov
or
adc
dec
or
icebp
adc
jle
push
fcos
loope
call
xlat
js
dec
push
sub
mov
jp
shlb
mov
jbe
out
ds
daa
shll
sub
lret
dec
sub
lahf
xchg
inc
pushf
jbe
and
jge
ss
push
stos
pop
cmpsl
aas
jns
test
xchg
cs
fnop
dec
popa
movsb
into
out
dec
jecxz
aam
test
xchg
test
xchg
jl
stc
popf
sub
push
add
call
cmp
test
les
adc
cmpl
sbb
cmp
sti
loopne
dec
out
loop
adc
or
xchg
inc
lsl
outsl
pushf
inc
add
popf
push
iret
mov
repnz
add
jno
mov
cmp
or
push
cmpl
add
cmp
dec
out
fcomps
add
cli
imul
mov
or
mov
aaa
mov
sarl
popa
sub
stos
mov
dec
mov
add
call
pop
jmp
les
sti
popl
test
jne
cmc
mov
push
and
lret
ja
cli
sarl
cwtl
pop
xchg
sbb
mov
jmp
pushf
aam
int
sub
mov
cmp
je
push
fs
xchg
xchg
mov
xchg
pop
test
fiaddl
fdivrl
or
adc
daa
out
xor
into
andb
mov
mov
scas
pusha
dec
sub
clc
jo
jle
sbb
jns
xor
add
call
push
push
push
shlb
cli
lahf
cmp
xchg
out
mov
and
jns
fildl
cltd
xor
push
push
add
pop
sub
pop
ss
jge
lds
sub
cmpl
push
cli
push
xor
insl
mov
xor
mov
cmp
jge
cs
sub
imul
mov
jo
daa
iret
adc
mov
pop
faddl
mov
loop
cmpsl
into
sub
stos
pop
leave
pop
ja
call
popl
roll
add
call
mov
rcll
jmp
mov
pop
mov
imulb
stc
cmp
mov
pop
in
and
mov
out
pop
inc
ja
push
je
mov
mov
aam
jae
mov
dec
pusha
fcomip
jle
fistpll
sbb
rorb
push
loope,pn
cmp
shrl
sbb
xor
push
or
clc
dec
pop
pop
xchg
ret
dec
les
mov
jnp
mov
js
call
sub
lods
in
xchg
mov
add
call
into
push
pop
pusha
fdivp
xchg
and
and
outsb
movsl
add
pop
push
test
in
or
and
shrb
pop
jle
fldenv
pop
rcrb
sub
adc
popa
xor
les
dec
jns
inc
mov
outsb
push
loopne
add
int3
pop
in
rcll
cmp
bound
push
lcall
xor
imul
and
add
and
mov
call
stos
mov
hlt
xorb
add
ret
xor
cmp
jbe
jnp
inc
dec
cmp
dec
lcall
push
in
cmp
cmp
call
xchg
les
faddl
adc
mov
jno
mov
lds
outsb
cmpsb
lods
je
push
mov
mov
xor
jb
lcall
jmp
push
fldt
pusha
ljmp
lahf
imul
jnp
jns
jg
xchg
icebp
mov
les
cmp
out
mov
add
call
pop
or
aas
adc
cmp
mov
icebp
cli
mov
mov
mov
add
daa
arpl
aaa
jns
flds
lahf
jns
jbe
into
scas
popw
inc
lds
cwtl
mov
in
aam
xor
lods
jbe
mov
int3
imul
push
cmc
mov
test
pop
lahf
es
xlat
push
push
dec
sbb
mov
ds
adc
mov
movq
mov
in
cmp
pop
mov
add
call
fsts
dec
daa
sti
cmp
xchg
les
bound
fiaddl
fadd
or
inc
mov
add
jge
loop
lret
push
cmpsb
in
iret
dec
and
movsb
scas
push
sbb
notb
and
lods
sbb
xchg
int
dec
or
xor
mov
cmp
lcall
xor
movsl
mov
lret
test
add
adc
inc
inc
dec
decl
popf
imul
repnz
dec
xchg
out
icebp
add
call
sbb
pop
adc
sub
cmc
enter
insb
mov
inc
push
in
nop
cwtl
cmp
push
push
push
imul
pop
inc
stc
xlat
sti
adc
add
pop
repz
mov
fadds
push
cmp
cmove
loopne
les
insb
or
mov
pop
das
in
scas
out
iret
mov
arpl
dec
or
inc
pop
xor
dec
pushf
adc
sub
push
les
jge
mov
frstor
add
call
mov
xlat
ljmp
movsb
rolb
ret
adc
test
imul
add
cmp
call
aas
jno
inc
cmc
sti
inc
mov
xchg
inc
lret
pop
ljmp
xlat
inc
jne
punpckldq
inc
push
xor
sbb
popa
mov
adc
dec
lret
std
mov
add
pop
mov
and
repz
jae
shrb
jbe
xor
mov
stos
inc
cs
add
repnz
cmp
call
mov
lods
shll
jmp
xor
push
push
jmp
mov
loope
mov
scas
iret
cwtl
jp
test
xchg
inc
icebp
jp
jno
in
sbb
add
shl
roll
cmp
xchg
cmp
mov
xchg
addr16
repnz
popl
xor
push
push
push
cmp
mov
lock
popf
sub
jmp
andb
mov
gs
pop
into
cmc
inc
ret
lock
stos
cli
inc
push
movl
sbb
add
call
sub
inc
mov
sbb
cmpsb
sbb
leave
cwtl
and
xor
das
inc
pusha
mov
cld
inc
roll
cmpl
adc
xchg
ret
call
pop
and
stos
pop
adc
sub
jmp
jmp
or
xchg
loope
jo
jp
mov
jae
add
adc
lock
insl
mov
mov
mov
ss
sub
mov
daa
pop
push
out
in
add
call
call
sbb
imul
push
clc
lods
or
rolb
sbb
dec
adc
pushf
pop
add
ds
popf
leave
js
insl
ljmp
fisubl
dec
rclb
mov
xor
addl
xchg
mov
lea
sahf
jns
lods
jmp
mov
pop
popf
stc
xchg
std
fistps
push
cmpsl
and
jbe
mov
test
lods
gs
mov
sti
mov
xor
insb
shrb
pop
or
aas
mov
add
call
push
stos
mov
pop
and
jl
inc
xor
sbb
cmp
cmpb
push
lret
dec
push
lahf
and
and
xor
je
outsl
adc
fstps
lds
push
lds
out
inc
aad
mov
pop
roll
mov
sub
mov
pop
sub
stc
and
jmp
mov
xchg
rorb
cmpl
out
push
mov
mov
push
xchg
pushf
inc
fcmovb
int
stos
bound
jne
lea
in
pop
or
mov
mov
adc
clc
addr16
add
call
mov
xlat
sub
fmul
dec
out
pop
pop
cmp
xchg
ja
iret
pop
sbb
push
lods
clc
xchg
ret
dec
cmp
push
and
push
pop
add
in
jecxz
push
or
jge
mov
cwtl
js
add
fs
test
lds
outsb
dec
repnz
stc
adc
cmpsb
add
es
loope
test
aad
inc
inc
iret
xor
pop
nop
sbb
mov
push
shlb
xor
mov
push
jle
jnp
sub
shll
pop
mov
add
call
lods
xorb
push
ja
jl
push
aaa
pop
cli
jbe
jne
xchg
mov
xor
mov
lcall
or
cmp
sub
rorl
icebp
pusha
ljmp
js
dec
pop
rclb
jle
adcl
test
popa
mov
xor
ljmp
cmp
push
mov
notl
add
pop
hlt
aaa
xor
fimuls
dec
sub
out
push
enter
cmc
adc
ds
inc
stos
add
call
addr16
mov
push
test
or
fs
clc
or
ror
add
lret
fisttps
data16
lods
sbb
scas
xor
jp
clc
lods
mov
loop
cltd
mov
mov
pop
push
cs
sbbb
notl
nop
mov
lahf
sub
ljmp
mov
jmp
test
ss
xor
nop
ljmp
add
cli
jmp
or
sub
mov
push
mov
call
jb
push
call
mov
rcll
xor
xorl
mov
pop
jno
cmpsl
add
jge
int
and
fs
mov
enter
xor
add
lret
aaa
xchg
das
gs
push
sbb
cmp
int3
es
sub
pop
dec
outsl
popf
adc
fnstsw
jo
nop
xor
sarb
add
stc
les
out
xchg
loope
sti
dec
cmpsb
cmpsl
mov
jb
mov
and
jo
push
push
scas
sahf
mov
adc
xchg
movsb
add
xor
mov
sti
mov
call
dec
jmp
ja
sahf
mov
inc
sub
shrb
jle
add
pop
fidivl
je
or
cmpsl
pop
pop
roll
sub
lods
inc
add
int3
add
mov
pop
cmpl
cld
ja
push
in
pop
inc
cmp
or
xchg
adc
movsl
or
js
in
fsts
adc
xchg
dec
fwait
push
insb
adc
mov
mov
stc
sbb
lods
xchg
lock
popa
imul
test
push
testl
call
mov
xchg
jecxz
inc
fwait
and
ret
enter
dec
dec
xor
mov
aas
mov
add
mov
nop
cmp
vhsubpd
cld
jb
data16
or
mov
out
bound
mov
sub
imul
enter
sbb
imul
mov
mov
xchg
jbe
leave
mov
xlat
stc
ret
into
mov
push
jl,pt
js
sbb
lcall
add
call
cltd
pop
push
js
adc
and
pusha
sahf
jge
xor
hlt
xchg
mov
sbb
in
push
imul
add
lahf
out
and
fists
je
pushf
sub
jg
pop
mov
ljmp
stc
jge
push
dec
mov
mov
pushf
push
rclb
mov
inc
jg
and
int3
punpckhwd
into
dec
movsb
and
outsb
ss
dec
adc
cmp
mov
cli
push
mov
popf
mov
or
repz
jo
shll
fcoml
add
call
push
jmp
xor
xchg
or
mov
mov
lds
or
mov
nop
push
imul
orl
pop
in
or
and
ffreep
fisttpl
movl
xlat
les
or
dec
mov
negb
dec
push
jp
add
push
pop
out
jp
clc
fnsave
decb
fbstp
add
ss
imul
cmpsl
xlat
popf
hlt
dec
push
mov
xchg
pushf
push
sbb
xor
mov
call
adc
addr16
add
pushf
ret
sub
mov
push
mov
mov
cmp
dec
dec
fdivrl
pop
dec
push
mov
push
jg
jnp
xchg
dec
out
arpl
pop
push
bound
aam
dec
or
inc
dec
mov
dec
pusha
dec
jbe
xor
lcall
push
mov
lods
mov
dec
int
lea
and
out
sub
mov
adc
rorl
xchg
adcl
jno
and
test
xor
mov
call
sub
jge
es
into
dec
call
sbb
lds
int
mov
xchg
dec
ja
les
pop
fwait
cmp
out
movsb
and
xor
jb
std
or
xor
icebp
dec
in
test
rorl
fisubrl
incl
mov
xlat
and
and
xchg
lret
test
mov
loopne
jecxz
mov
stc
movsl
sti
ret
ja
ret
xor
cli
repz
int3
ds
pop
ja
lret
shrl
mov
add
call
lods
sub
push
xchg
mov
sub
pop
loopne
repnz
les
pop
test
adc
and
jmp
push
mov
mov
cmpsl
rol
push
or
adc
stc
or
dec
pop
sahf
or
lods
call
aam
cs
lods
mov
sbb
imul
pop
inc
sbb
test
test
inc
or
xor
call
jns
adc
push
xchg
add
call
cmpl
pop
inc
fs
rorb
fisubrl
push
mov
jmp
sbb
and
or
repnz
out
or
inc
andb
pop
xchg
addr16
imul
out
mov
mov
int
out
adc
cltd
xlat
in
mov
push
push
addl
movsb
cmp
stos
imul
ret
std
fcomp
rcrb
push
std
sub
push
xor
test
mov
iret
lahf
dec
mov
adc
dec
mov
sub
inc
sbb
add
call
lret
add
xchg
push
mov
sbb
mov
int
cmp
outsl
pop
xchg
xlat
mov
std
repnz
mov
leave
lahf
inc
adc
cs
mov
movsb
and
jge
ret
pusha
jno
jo
out
into
or
cmp
jns
ret
outsb
cmp
fdivs
add
in
sub
jae
sbb
push
jg
dec
enter
xchg
pop
mov
cmp
cmp
mov
lock
insl
arpl
push
cltd
clc
mov
movsl
cmp
call
mov
loope
loope
xchg
mov
mov
and
mov
daa
adc
nop
add
mov
je
mov
inc
jno
xor
mov
js
sbbb
mov
pop
lock
jg
and
lods
pop
stc
stos
mov
pop
mov
pop
push
daa
loopne
int3
inc
ret
and
popa
mov
loop
je
nop
pop
popa
ds
or
push
shlb
push
push
js
pop
data16
in
cmp
leave
sub
add
call
into
xchg
jb
pop
add
test
je
imul
movsl
ds
pop
or
rorl
dec
popf
lret
cmp
dec
push
push
mov
xchg
clc
xchg
lea
dec
pop
fmul
in
sbb
mov
icebp
sbb
cmp
ror
fabs
mov
idivb
cld
lcall
sub
sub
fwait
adc
ret
mov
mov
mov
idivl
outsb
mov
bound
and
mov
mov
movsl
and
cmpsl
pop
pop
or
lea
sub
or
add
call
int3
fdivrs
xchg
xlat
push
sti
add
jno
sub
fcmove
inc
lods
aad
scas
fwait
mov
jnp
jne
gs
ds
lret
or
lcall
insb
test
push
inc
inc
mov
jo
test
in
fisubl
cmp
shl
adc
push
es
cmc
repz
in
sbb
add
xor
pop
iret
test
test
and
mov
stc
pop
or
bound
cmpsb
xlat
lea
sbb
xor
mov
add
call
jb
dec
iret
inc
popa
aad
or
xor
cld
jo
cwtl
nop
dec
sub
enter
jnp
aam
ja
push
mov
sub
dec
mov
mov
xlat
xchg
push
inc
cmp
sbb
out
ds
das
mov
mov
sbb
pop
jp
xor
mov
stos
cmp
jb
insl
dec
jle
jmp
or
daa
xor
xor
maskmovq
idivl
or
mov
jg
mov
cld
mov
call
fmul
ret
loope
arpl
data16
outsb
aaa
or
je
inc
dec
notb
dec
ret
mov
adc
adc
pusha
inc
push
andb
test
adc
pop
icebp
into
arpl
push
pop
sbb
mov
push
cli
fsubrs
add
xchg
mov
in
and
and
adc
fcompl
pop
inc
jge
xchg
mov
faddl
xchg
push
cmpsl
xchg
sbb
add
call
adc
es
mov
push
ss
xor
shll
push
cmp
nop
xchg
std
outsl
xchg
pop
push
jmp
jl
dec
pop
mov
mov
sbb
inc
push
push
cmp
ljmp
les
rcrb
xchg
mov
jp
jbe
push
icebp
outsb
xchg
xor
pop
sahf
hlt
sbb
cltd
fnstenv
add
movsb
sub
push
andl
xlat
loop
ds
pop
and
stc
or
adc
lahf
push
mov
xchg
ds
lret
jnp
aaa
cmp
and
add
call
xor
das
and
or
jbe
push
mov
cld
test
cltd
repz
sub
out
mov
pop
mov
ficoml
loop
jnp
arpl
dec
lds
pop
xchg
adc
jae
mov
arpl
push
and
jmp
pusha
test
mov
and
ss
push
pop
lea
roll
push
mov
lods
lret
xchg
jno
stos
pop
xor
xor
add
call
lods
xor
mov
aam
lods
bound
psrlw
sbb
mov
xchg
jecxz
out
daa
gs
mov
pusha
jmp
jo
mov
sarl
mov
mov
jns
out
or
nop
das
repz
push
out
cli
test
insl
lods
insl
jnp
pop
add
dec
dec
xor
push
rolb
es
jb
mov
mov
pop
push
int3
mov
pushl
arpl
mov
mov
iret
mov
call
add
fmul
fisubrs
pushf
pushf
scas
sar
out
divl
cmp
std
add
das
jne
jmp
hlt
imul
or
imul
pop
adc
add
cmpl
loop
jp
in
std
dec
jne
mov
sarl
or
inc
mov
add
or
dec
or
pop
mov
sti
out
iret
popf
jge
imul
ret
stos
push
and
and
bound
js
rolb
insl
add
call
push
jns
gs
push
xchg
rolb
movsl
xchg
or
std
ss
push
mov
cli
sbb
out
je
lret
or
jl
and
pusha
ficomps
dec
push
sbb
notb
or
ret
add
jb
test
jns
fnstenv
loopne
mov
or
mov
lock
adc
mov
xchg
rolb
mov
adc
test
adc
adc
outsl
xor
add
call
jb
fstl
adc
mov
call
aaa
pop
push
push
jnp
out
in
xor
jp
or
mulb
dec
dec
jne
pop
js
xor
test
xchg
cmpsb
or
flds
inc
aam
pushl
inc
ljmp
out
lret
mov
decl
cltd
ret
fisttpll
push
jp
mov
sub
decl
sbbb
addr16
fwait
jnp
sbb
mov
sbb
fs
mul
mov
cmpsl
add
call
push
pop
loopw
or
imul
in
loop
or
repz
jnp
dec
sti
sbb
test
jp
jo
outsb
jmp
cmp
add
inc
sti
ret
lahf
arpl
enter
xchg
inc
jle
xchg
ds
push
in
fidivrl
ds
pop
push
test
sbb
and
hlt
dec
sbb
dec
or
xor
xor
add
mov
pop
pop
mov
mov
mov
mov
fadds
add
call
aaa
mov
fdivrs
dec
cmp
ljmp
cwtl
and
mov
inc
mov
jae
test
sahf
jge
sbb
lea
ja
sub
fldl
pop
insl
adc
mov
xchg
jp
divb
aam
pop
jmp
mov
jecxz
stc
inc
push
testl
or
scas
ror
push
xorb
and
mov
rcrl
stos
pop
push
mov
and
lret
cs
fildll
int3
jmp
std
addr16
add
call
push
jns
rolb
sbb
xchg
lret
decb
mov
push
addb
cmpsl
pop
stc
sub
ret
imul
mov
insl
pop
xchg
cmp
mov
lret
fdivrl
outsl
pop
adc
add
xor
mov
cmp
decb
push
sub
sbb
jmp
repnz
ret
rcrb
mov
and
lahf
xor
mov
sbb
sbb
adc
ret
push
mov
addb
call
test
call
lods
xchg
test
jecxz
cmpsb
scas
xor
cmc
jle
jp
rolb
inc
lea
jnp
mul
mov
dec
add
dec
aad
xor
in
lahf
push
mov
push
adcl
pop
pop
mov
jl
cmp
inc
mov
mov
jae
or
push
cmpsl
dec
outsb
mov
sti
jno
mov
xor
bound
sub
pusha
jl
push
jecxz
dec
ljmp
cli
pop
clc
in
and
call
aaa
out
cltd
lock
sub
mov
xchg
pop
jl
aad
sbb
loope
clc
or
fwait
inc
movb
mov
push
xor
loop
imul
fidivrs
or
xchg
popf
or
cli
pop
pop
xchg
in
xchg
in
sbb
xchg
cwtl
mov
pop
mov
pop
subb
call
lods
or
das
lret
outsl
sbb
stos
sbb
pusha
cmpsb
cli
push
dec
cmpsb
gs
mov
out
repnz
sub
add
call
mov
imul
lods
aad
push
movsl
xchg
lds
lods
dec
lahf
xchg
jg
sbb
aam
dec
mov
pop
pop
adc
pop
outsl
je
gs
xcrypt-cfb
cmpsl
and
lods
les
sbb
mov
adc
out
lea
call
and
repnz
outsl
mov
lock
bound
scas
jge
bound
into
mulb
outsl
pop
cmpsl
ret
test
jnp
mov
dec
cmp
pop
mov
enter
jnp
xchg
js
stos
lock
jnp
test
pushf
je
loopne
or
add
call
mov
xor
rorb
movsl
aam
mov
shll
lods
sub
cltd
mov
pop
adc
push
lods
dec
cmpsb
mov
inc
cmp
pop
pop
or
jae
push
or
jecxz
aam
dec
adc
movsb
lret
sbb
in
push
jo
test
aad
or
cwtl
cmpsl
fcmovne
push
gs
aaa
push
lret
pop
punpckhdq
adc
and
adc
or
dec
sub
repz
lods
test
bound
call
jne
data16
push
shlb
loope
dec
fnstsw
call
call
add
adc
int
gs
adc
cwtl
lock
inc
dec
lahf
nop
cmpb
pusha
add
mov
daa
jbe
push
sarl
rcll
fcmovbe
aad
in
imul
testb
mov
paddd
getsec
mov
stc
lret
mov
cmp
les
cmp
sbb
jno
sub
leave
push
push
pop
cmp
rcrl
sahf
mov
call
aad
xor
push
addr16
popf
jae
stc
repz
or
mov
pop
loop
or
loope
pop
jge
mov
or
loopne
push
inc
mov
mov
mov
mov
dec
and
loop
or
dec
jmp
sbb
push
in
call
outsb
adc
mov
jge
mov
in
mov
or
jle
pop
and
andb
shl
les
push
das
xchg
insb
mov
jns
add
call
stc
xor
cmp
outsb
sub
pop
sub
addb
push
addr16
fucom
xchg
shlb
std
jns
adc
adc
sbb
inc
fs
in
xchg
xchg
cmp
hlt
xor
push
lret
jmp
inc
mov
js
enter
xchg
xchg
xor
xchg
orb
xchg
pop
imul
sbb
shlb
cmp
xor
sbb
mov
test
xchg
or
add
call
cmp
dec
scas
orl
fidivl
fcomps
or
loopne
stos
add
dec
addl
pop
sti
mov
pop
lahf
add
or
in
imul
push
add
mov
je
into
movsb
ss
rep
xchg
ds
fs
pop
roll
fwait
dec
fnstsw
push
jge
jne
jg
jne
jbe
jnp
in
mov
push
cs
xor
pop
pop
xchg
ss
cwtl
cmc
dec
or
loop
std
ss
jbe
add
call
es
sub
jecxz
lahf
shrb
in
movsl
mov
adc
in
ret
xchg
into
repz
jmp
cmc
push
lods
or
dec
sti
xor
xor
dec
xchg
or
add
or
fdivrs
aaa
adc
rcll
cmpsl
sbb
lock
test
jmp
pop
cltd
out
mov
xor
push
xor
sub
scas
gs
or
mov
gs
inc
mov
lcall
jl
add
ret
add
call
scas
cwtl
dec
inc
iret
and
pop
popf
jb
xor
jge
jbe
cli
hlt
mov
or
xchg
add
mov
push
rclb
mov
cltd
dec
mov
ja
xchg
nop
and
cli
daa
pop
cmp
pop
pop
sub
mov
pop
push
movsl
mov
pop
xchg
out
add
fildll
push
test
xchg
push
pop
mov
fldt
ffree
xchg
repz
rorb
pop
xchg
ljmp
scas
adc
mov
std
imul
add
call
sub
ja
lahf
ret
jno
xor
fstl
mov
sbb
das
and
mov
cmp
jmp
mov
jnp
ret
lret
hlt
lods
outsl
int
xor
and
in
les
push
clc
cmc
sahf
push
cmp
lret
inc
test
fwait
sti
add
adc
push
inc
popf
gs
sub
mov
pushf
div
ret
rclb
cmp
xchg
sbb
enter
aaa
popf
sub
mov
push
cmc
pop
rcrl
sub
dec
fildll
cld
inc
push
sahf
add
call
pop
add
pop
inc
je
push
mov
push
leave
xor
scas
mov
mov
arpl
or
inc
addr16
xor
outsl
mov
arpl
add
ss
out
xor
mov
fmull
push
xchg
scas
popa
sub
fmull
add
pop
loopne
push
mov
mov
gs
sbb
outsl
loope
mov
mov
xor
xchg
cltd
mov
inc
add
pop
lea
imul
sub
or
call
pop
mov
std
dec
lods
es
sub
repnz
mov
test
shll
and
dec
push
inc
xchg
enter
lods
adc
adc
rclb
mov
lods
jbe
fwait
into
aas
stc
test
ja
ja,pt
sub
xor
pop
jmp
arpl
out
mov
cmp
mov
lods
and
pop
leave
out
xor
insb
jns
adc
mov
out
xor
lock
into
rcrb
add
add
inc
das
sbb
call
sub
repnz
inc
out
pop
notl
mov
sub
push
int
and
xor
push
push
scas
jnp
sub
cwtl
jg
push
movb
repnz
repz
stos
lret
mov
sbb
sahf
add
xor
lahf
leave
cmp
sub
push
mov
and
mov
in
rcr
inc
addb
fs
testb
adc
mov
sbb
pop
and
adc
jo
js
dec
popa
shlb
lahf
js
jo
in
add
or
add
call
ds
pop
mov
cs
push
adc
or
cmp
jle
or
pusha
add
out
inc
insb
bound
pop
pop
mov
mov
jl
and
jne
mov
ljmp
imul
orb
xchg
or
sbb
add
xchg
cmp
out
cmpsl
imul
pop
int
push
cmpsb
mov
mov
addr16
aaa
cltd
daa
mov
and
mov
add
call
insb
xor
mov
fstl
push
popf
cmp
shrb
pop
in
fidivs
dec
or
adc
std
cmp
or
dec
mov
and
hlt
lret
dec
in
jle
xor
sbb
out
inc
xchg
and
jns
es
mov
dec
push
jno
outsl
test
mov
push
jge
pop
cmpsl
adc
adc
push
lods
mov
inc
enter
xlat
add
pop
cmp
push
or
into
xor
movsl
sarl
insl
sbb
mov
insb
bnd
push
mov
testb
call
popa
push
mov
mov
scas
dec
test
or
enter
push
pop
cld
leave
jnp
cmp
pop
xchg
es
test
lcall
rcl
dec
stos
test
or
adcb
clc
lock
xchg
aaa
aaa
fnstsw
lods
cmp
pop
add
sub
aam
mov
adc
cli
sbb
mov
fcompl
into
and
enter
bound
jbe
push
push
test
fbld
adc
mov
call
xchg
subb
call
sub
lcall
inc
pop
dec
insl
cmp
addr16
lcall
out
mov
and
sti
fwait
addr16
dec
popa
mov
mov
int3
pusha
push
leave
out
call
cmp
sbb
lahf
mov
push
xchg
hlt
pop
pop
xchg
bound
repnz
sti
push
and
inc
lret
push
out
cld
sti
loope
nop
jne
xchg
fsubrl
add
cld
cwtl
cmp
push
adc
adc
inc
jbe
adc
add
roll
add
call
push
inc
adc
sbb
cs
adc
fiadds
jg
and
add
aam
iret
xor
negb
xchg
add
mov
adc
adc
add
cmpsb
cmp
arpl
rorl
cmp
pop
add
or
das
loopne
dec
or
and
cs
movb
inc
jmp
loop
imul
jnp
rclb
or
stc
xor
roll
cmp
ret
xchg
out
fstpl
add
sub
cmp
xlat
popa
addb
call
push
xor
push
fcmovnbe
sbb
mov
sub
sub
jle
leave
scas
decl
and
mov
fsub
mov
pop
negb
sub
flds
mov
ret
insl
jb
pushf
pop
mov
ja
xor
inc
mov
xor
ret
outsb
fidivrs
js
inc
repnz
daa
lds
add
sub
mov
sub
jb
aas
push
xlat
arpl
int3
push
nop
cwtl
testl
sbb
nop
mov
aaa
decb
mov
call
lcall
xchg
leave
lods
sub
arpl
rclb
loop
movsl
lods
adc
daa
pop
mov
jp
sbb
xor
daa
jnp
push
hlt
jl
fmull
movsb
cld
mov
xor
cmpsl
call
xorl
sub
ret
cmp
mov
es
fstpt
pop
stos
pusha
test
sbb
xchg
icebp
test
out
enter
mov
pop
mov
pop
imul
pop
sbb
imul
fadds
add
call
fsubrl
movsl
and
mov
sbb
pop
sti
xor
add
scas
sub
push
mov
jae
dec
shrb
rclb
ficomps
jnp
imul
dec
lcall
js
ljmp
or
mov
mov
les
shrb
xor
pop
out
faddl
in
cli
cmpl
push
fimull
sbb
out
lcall
je
cs
cmp
jae
pop
lret
push
mov
mov
add
call
flds
fisttpl
incb
mov
aaa
adc
mov
inc
inc
sahf
pop
clc
pop
nop
shll
xor
js
or
or
adc
loope
cwtl
fs
call
add
orb
movl
pop
add
xchg
ret
or
mov
rclb
fnstenv
mov
stos
dec
ljmp
pop
loop
cwtl
mov
out
jb
pusha
xor
fs
adc
sbb
fistl
call
dec
lods
jg
cmpsb
pop
xchg
pop
or
pop
or
outsl
sarb
hlt
push
pushf
lock
int
or
jmp
adc
or
cld
mov
fidivs
add
test
addr16
push
push
dec
nop
fwait
xor
jo
clc
jge
ljmp
pop
addr16
je
outsb
xchg
add
jo
les
shl
cmpxchg
dec
lds
sub
push
sub
sti
and
loopne
and
shll
aas
int
jnp
sti
inc
jg
jnp
jecxz
out
das
imull
jp
ljmp
call
jge
jbe
arpl
imul
jno
or
stc
insl
loopne
les
pop
int
pop
add
cmp
jge
ret
cmp
cli
inc
int3
sahf
imul
xchg
rcll
cltd
insl
xlat
pop
ret
movsl
mov
fs
adc
cli
scas
mov
in
iret
repnz
ret
pop
cmpsb
push
mov
mov
clc
push
in
jae
ss
aaa
and
xchg
mov
jg
sarb
mov
xchg
push
adc
fldcw
movsb
pop
mov
inc
mov
call
js
ds
push
sbb
or
push
add
jno
pop
pop
mov
push
ret
xor
loopne
imul
xchg
mov
mov
push
add
aaa
cwtl
test
pop
pop
jnp
iret
cmp
and
add
js
sbb
imul
lock
add
ja
push
lea
mov
sbb
out
dec
push
imul
xor
fs
in
mov
ret
shlb
add
call
adc
and
mov
xor
xchg
sub
inc
mov
add
stc
or
leave
in
pop
push
mov
imul
fisubrl
out
mov
pusha
sub
or
cld
push
mov
je
mov
sarl
ja
imul
repz
call
push
pop
push
add
ficompl
sbb
mov
divl
jbe
aad
adc
pop
andb
stc
pop
lock
push
fwait
xlat
aad
xor
imul
push
sahf
rol
ja
sub
adc
add
call
sub
adc
inc
cltd
movsb
pop
xlat
out
cld
imul
ds
mov
out
pop
push
cmp
pop
into
fiadds
pop
jp
and
and
mov
xor
xchg
fadds
out
add
shlb
jp
outsb
pop
inc
and
data16
sub
and
jbe
in
or
jecxz
pop
push
mov
and
flds
mov
int
xor
scas
xlat
scas
movsl
insb
cmc
dec
jbe
aad
std
fsubrl
ja
xchg
cltd
aam
mov
add
call
pushf
fs
decl
mov
scas
and
data16
mov
stc
adc
push
pusha
clc
cmp
mov
or
push
aad
mov
push
repz
xchg
jle
je
rcrl
push
and
jnp
cli
shll
daa
mov
int3
pop
into
fistps
ljmp
js
push
insl
inc
fwait
in
inc
testb
sub
dec
pop
dec
mov
mov
cmpb
test
push
test
test
into
xchg
popf
popa
incl
add
call
insl
cmp
push
jmp
ds
sbb
add
les
push
adc
sbb
inc
mov
outsl
cmp
mov
pop
into
dec
int3
jmp
pop
xchg
int3
pusha
imul
or
inc
and
push
mov
out
dec
icebp
hlt
ret
sbb
jge
jle
cwtl
fwait
insb
rclb
outsl
sub
outsl
sbb
mov
cmpxchg
out
and
mov
pop
cs
ficomps
mov
sbb
stos
inc
mov
mov
inc
push
incl
mov
filds
add
call
mov
jb
gs
mov
rcr
cmc
add
ficompl
push
xchg
iretw
jns
xor
and
push
xchg
jae
aam
pusha
jno
adc
inc
jg
mov
iret
insl
jbe
adc
scas
mov
sbb
xchg
adc
mov
sarb
mov
sub
pop
or
test
pop
fs
cwtl
ja
mov
sbb
imul
leave
int
pushf
and
xchg
movsl
xchg
mov
xor
add
call
iret
cli
test
mov
and
rorl
rclb
pminsw
mov
leave
pusha
xchg
mov
fcmovnbe
jmp
movsl
lret
cwtl
xlat
xchg
sahf
fdivrp
add
pop
movb
scas
mov
xchg
outsl
aad
jbe
xchg
sbb
iret
jge
outsl
and
inc
repnz
push
add
ss
arpl
push
imul
mov
std
xor
sub
nop
popa
sar
adc
loope
fmuls
jle
xor
inc
adc
push
sub
aaa
fwait
inc
jne
aas
insb
testb
call
or
mov
hlt
push
call
sbb
adc
daa
mov
js
jbe
inc
addr16
dec
mov
sbb
repz
stos
nop
sbb
cli
mov
pop
jns
mov
push
cmp
sub
mov
shlb
fwait
and
ljmp
iret
xchg
or
mov
cmp
pop
scas
push
mov
rolb
cmc
gs
outsl
out
nop
cmp
rcrb
mov
paddsb
and
pop
add
call
mov
xchg
in
xor
mov
cmpsl
das
aad
loope
jae
push
ljmp
xor
dec
ds
das
mov
fiadds
jb
cmp
and
pusha
aas
ds
out
jge
cmc
jb
lahf
or
push
or
dec
leave
cmp
jge
push
ror
lret
pop
fisttpl
in
dec
mov
cli
clc
addb
aam
xchg
mov
push
and
push
cs
sti
pop
pusha
xchg
pop
dec
into
mov
push
je
int
into
mov
in
pop
and
mov
call
pop
cmp
imul
adc
or
cmpsb
add
lcall
lcall
adcb
mov
shr
in
icebp
add
loopne
inc
mov
mov
fldt
mov
dec
and
xor
insb
sub
fstpl
fdivs
push
pop
test
sub
into
or
and
mov
mov
mov
cltd
or
sbb
adcb
aas
cmp
das
lds
jnp
test
add
call
mov
ljmp
push
jnp
push
in
xor
pop
aas
ret
arpl
mov
and
in
lds
testl
imul
loope
outsl
outsl
dec
loope
push
push
jge
sub
aas
mov
outsl
pop
lret
and
iret
or
jb
ds
pusha
outsl
mov
and
subl
cmp
ffree
fldl
sub
negb
cwtl
scas
loop
scas
lea
and
xchg
sti
adc
or
fcoml
add
call
mov
push
shll
xor
das
dec
fdivl
and
push
mov
imul
or
leave
mov
pop
push
cld
mov
loopne
xchg
sub
jns
lcall
imul
fldpi
push
xchg
lds
and
cmc
jp
in
and
mov
dec
xor
xor
mov
sub
incl
xchg
loopne
pop
push
lret
fisubs
xor
stos
pop
dec
cmp
leave
xor
xor
add
add
call
sub
adc
gs
je
sbb
mov
push
xor
test
xchg
popa
or
cmp
mov
inc
pop
aas
push
fisubs
add
fadd
lods
xor
fwait
adc
xchg
dec
jge
por
xchg
pop
mov
es
pop
test
xor
popf
add
in
mov
dec
push
adc
dec
lock
pop
xchg
adc
pop
or
ret
jns
lods
xchg
dec
sbb
mov
shlb
pop
sbb
jae
mov
call
fdivrl
mov
addr16
mov
ret
push
cmp
out
inc
xchg
or
fistpll
fcomip
xchg
xor
mov
pop
fdivrs
iret
call
jg
aaa
jl
ret
pop
ficoms
xchg
jno
jge
and
and
inc
cmp
xor
das
mov
xchg
cmp
xchg
lods
arpl
sub
adc
lds
xchg
iret
mov
push
paddusb
mov
call
ljmp
adc
inc
jg
mov
inc
dec
add
jmp
xchg
push
jnp
or
stc
jno
fsubl
imul
mov
add
mov
popa
mov
std
sahf
pop
push
inc
mov
sbb
sbb
cli
out
fldt
sbb
mov
add
dec
mov
rolb
and
enter
icebp
es
adc
inc
mov
icebp
lret
dec
je
pusha
ds
sbb
mov
int
add
add
call
adc
repz
stos
mov
insb
leave
push
pop
inc
push
imul
adc
roll
add
stc
or
movsl
mov
mov
cmp
fisubs
scas
xor
stc
and
xorb
das
test
fsubl
mov
ss
jge
daa
sub
in
cmp
cmp
fwait
push
jl
repnz
pandn
int
fwait
daa
jne
jns
dec
daa
push
mov
and
test
adc
inc
movsb
add
call
addr16
insl
and
add
into
cmp
arpl
sbb
in
mov
mov
hlt
or
lea
out
cmc
subb
xor
lret
out
sbbl
sub
daa
mov
or
mov
test
lahf
arpl
outsb
out
frstor
shl
jbe
and
pop
mov
push
gs
mov
push
jno
enter
add
popf
inc
xacquire
in
dec
dec
pop
and
jmp
push
sbb
fbld
call
repnz
hlt
jecxz
push
xor
ja
sbb
das
popf
pop
xchg
dec
orps
das
inc
test
push
fdiv
jno
inc
pop
addr16
aam
cwtl
in
mov
lahf
inc
in
in
inc
mov
xor
ljmp
pop
push
jo
add
lods
sbb
mov
popf
movl
fidivrs
push
xlat
add
sahf
sbb
push
mov
in
lds
inc
cmp
ror
xchg
iret
pop
add
repz
dec
ds
insl
pop
stos
xchg
add
call
sbb
dec
incb
in
or
rcrb
jg
xchg
and
push
pop
cmp
fisubs
mov
cmpsb
sub
aam
out
cmp
jmp
xor
sahf
popf
dec
mov
dec
insb
and
pop
xchg
cmp
test
fstpt
lds
adc
add
cmp
outsb
fmul
in
ljmp
dec
cltd
lcall
pop
add
pop
ja
in
add
call
nop
jb
push
imul
adc
lea
scas
and
test
sbb
add
scas
mov
inc
je
and
cmp
and
cmc
dec
inc
jmp
xchg
add
je
lret
xchg
push
fisttps
mov
dec
inc
les
subl
movsl
fs
fildll
mov
shr
jge
aaa
jg
mov
iret
xor
adc
cli
inc
loope
jmp
sub
shr
jmp
ret
outsb
repnz
call
pushf
xor
fsubl
leave
popa
test
inc
mov
sub
insb
ja
js
xor
pop
cmp
push
test
jnp
dec
ret
movsl
mov
fisttpl
push
pushf
mov
inc
inc
fs
sub
jl
test
adc
xor
sbb
out
xorb
stos
sbb
pop
dec
incb
shll
test
and
sbb
push
lds
stc
adc
cmpsb
popf
add
call
insb
and
subb
loopne
adc
sar
lcall
in
in
fimuls
push
cmpsl
addr16
ds
push
xlat
fs
push
mov
cld
jg
stc
clc
dec
dec
loopne
jb
in
inc
adc
xor
jne
cmp
sub
or
ja
pop
xor
imul
ret
mov
xchg
cs
sbb
mov
out
push
add
mov
rclb
xor
mov
xlat
rcr
add
call
loop
fisttpll
fnstsw
popf
xlat
rol
lock
cmp
cmp
cmp
int
inc
arpl
popa
pop
addl
push
mov
arpl
xchg
clc
cltd
lret
inc
mov
cltd
dec
shl
fst
pop
xchg
sarb
adc
lods
insl
out
pop
cmp
out
je
push
fwait
in
pop
stos
cmp
arpl
mov
scas
loop
popf
ljmp
pop
mov
loopne
leave
add
stc
daa
mov
inc
mov
inc
daa
das
jnp
mov
fnsave
fs
sub
call
stc
fimull
and
mov
test
fxch
pop
pop
jnp
ljmp
push
adc
dec
je
aam
test
lahf
pop
cvtps2pd
or
hlt
xchg
sbb
js
and
sub
cmp
jg
roll
cmp
pop
mov
repz
and
mov
pop
outsb
mov
jecxz
push
and
rol
and
pop
idivl
jbe
mov
pop
adcl
push
mov
jo
addl
aaa
iret
inc
push
push
daa
jmp
call
add
std
push
nop
add
pop
out
jle
into
adc
aad
push
jno
push
or
into
test
nop
icebp
push
jp
push
icebp
data16
push
lock
pop
repnz
push
das
mulps
xchg
in
out
and
xor
jns
addb
leave
aaa
arpl
push
outsl
adc
adc
stc
and
dec
push
ret
leavew
xor
pop
or
rorl
add
popa
jne
popf
and
mov
xlat
les
mov
ljmp
lret
mov
ss
pushf
ja
std
push
cmp
add
call
jno
pop
test
aam
cmp
test
inc
int
sarl
pusha
orl
pop
cli
dec
push
jmp
xor
dec
mov
jns
paddq
sbb
or
xor
pop
mov
out
movsl
lcall
imul
mov
jb
stos
std
pop
loop
lcall
push
pop
and
movsb
addr16
mov
mov
mov
dec
cli
lcall
xchg
bound
daa
push
icebp
dec
jle
add
call
insb
orb
mov
cmp
stos
mov
xchg
data16
pop
mov
and
cmp
int
cwtl
dec
movl
jmp
lahf
dec
mov
sbb
fbstp
sub
jo
aas
dec
les
jne
cwtl
jl
inc
pop
dec
and
dec
fisttpll
das
pop
movsb
push
int
xchg
push
shlb
repz
mov
cmpsl
div
pop
pushf
xchg
ss
mov
and
cmc
dec
test
rorl
iret
pop
lret
int3
mov
xchg
rclb
jmp
mov
add
call
orl
add
inc
inc
xchg
adc
push
add
std
jmp
xchg
sti
and
xchg
cmpsb
xor
jbe
jnp
cmp
addr16
jae
push
rorl
pop
sub
sbb
sbbl
in
sub
gs
add
push
push
shlb
mov
xchg
movsl
jmp
pcmpeqw
int
push
fimull
gs
sbb
cltd
push
out
insb
int3
repnz
mov
rolb
sub
fisubl
fadds
test
mov
add
call
dec
dec
mov
jno
jle
push
movsb
leave
pop
popa
leave
adc
out
shlb
out
int3
sti
and
pop
inc
mov
xchg
mov
outsb
adc
adc
and
mov
mov
mov
push
arpl
sbb
and
pop
sbb
aam
movb
icebp
xchg
int
dec
insl
dec
and
adc
daa
add
mulps
jp
push
add
test
je
cs
sub
adc
mov
push
xor
push
push
ja
push
xlat
dec
and
add
call
ret
jnp
dec
sub
bound
lcall
mov
inc
xchg
aad
stos
in
push
push
inc
mov
ja
out
sub
dec
test
test
ret
cmp
push
xchg
scas
imul
cmp
push
jo
mov
cli
and
loope
repnz
dec
sets
mov
cli
nop
inc
mov
mov
mov
mov
add
fisttpll
sti
push
lahf
pop
addr16
mov
call
or
sbb
and
fidivl
testb
test
cmpsl
hlt
xchg
jl
push
push
mov
or
mov
pop
repz
iret
outsb
imul
bound
mov
mov
stos
cld
rcl
es
movsl
dec
call
jns
mov
sub
in
dec
je
and
inc
outsb
das
bnd
xor
adc
pushf
pop
js
pop
pop
repz
fucomip
fisubl
sub
push
test
mov
xor
fimuls
call
outsl
loope
sub
sub
mov
lods
or
inc
pop
cmpsb
ja
dec
xchg
fstl
mov
aad
dec
stos
icebp
mov
pop
fiadds
pop
jle
mov
addr16
add
aaa
add
mov
push
iret
mov
lcall
cmpsl
mov
add
repz
cmp
cmp
sub
dec
sbb
dec
xchg
mov
enter
push
icebp
lods
int
mov
dec
cwtl
inc
std
jle
std
add
call
cwtl
mov
cwtl
xor
popa
ljmp
add
leave
dec
rorb
mov
mov
les
stos
aam
mov
sbbl
hlt
jmp
and
icebp
sub
push
sarl
push
xor
dec
adc
fisttps
cmp
inc
pop
into
add
jp
in
filds
jne
sub
sub
inc
cmp
ds
cmpsl
push
dec
jae
es
scas
xor
add
call
insl
sub
sub
sbb
inc
cmpsb
fcmovbe
icebp
in
das
inc
add
or
mov
sub
push
push
jno
in
add
sbb
add
xchg
in
adcl
inc
mov
mov
out
in
cwtl
jle
gs
cmp
xchg
fstpt
pop
fwait
inc
repnz
mov
mov
bound
or
push
dec
mov
add
ret
adc
or
mov
ja
loopne
ja
xchg
cwtl
out
push
push
jl
les
test
lret
mov
pop
out
dec
mov
add
call
or
push
pop
fsts
test
lahf
jecxz
push
lret
xor
adc
sub
mov
dec
fucomi
jnp
aaa
ljmp
inc
mov
push
aam
cld
clc
sub
mov
xor
call
je
push
stc
push
in
mov
jno,pn
fisttpll
xchg
mov
sti
cmp
cld
sbb
lods
orl
lahf
test
pop
sub
mov
mov
adc
lcall
push
mov
shrl
call
xor
mov
pop
dec
and
xchg
xchg
imul
mov
loope
lret
xlat
jle
neg
inc
test
dec
adc
xor
and
shrl
aam
mov
inc
cmp
imul
ja
insl
adc
test
ds
loope
stos
push
xor
aaa
enter
dec
mov
mov
movsl
sbb
xchg
rolb
aaa
xchg
jp
fwait
inc
movsl
cli
mov
xor
xchg
addr16
rclb
jg
pop
add
call
popa
inc
xchg
pushf
je
inc
dec
mov
xor
call
mov
sahf
push
daa
sti
lods
cwtl
sbb
mov
adc
fistl
out
adc
outsl
mov
cmp
pushf
sbb
jb
sbb
in
dec
repz
jo
adc
les
inc
hlt
movsb
mov
xor
xlat
lret
into
sti
outsl
mov
xchg
mov
iret
dec
add
jb
pop
dec
sarl
inc
out
js
cld
or
jns
pop
mov
dec
mov
push
mov
add
call
shl
inc
out
imul
inc
add
shl
jle
sarl
xor
pop
sub
shll
xor
iret
repnz
adc
loopne
jle
clc
shll
fimull
adc
lret
gs
insb
or
push
sub
pop
out
int3
sbb
cwtl
mov
jne
lcall
in
into
jno
mov
or
call
rcl
mov
xor
and
add
call
cld
mov
test
mov
xorl
mov
add
mov
test
xchg
pop
and
xchg
fstps
sbbl
pop
les
pusha
sbb
mov
repz
in
out
cmp
ret
inc
push
subl
imulb
scas
cmp
cltd
or
add
xor
sub
sti
sbb
jp
shll
cmpsl
or
mov
fwait
xor
scas
lret
add
call
xchg
getsec
jno
lahf
fldenv
subl
out
adc
fs
dec
pop
push
rolb
insb
loop
inc
mov
test
shlb
jnp
testb
push
pop
push
std
pushf
dec
in
mov
addl
cmpsb
xchg
adc
aaa
mov
mov
push
ret
fistpl
adc
mov
outsl
push
or
sub
mov
fs
mov
mov
pop
jb
fsubr
aaa
sbb
pop
sbbl
inc
pop
dec
lret
sbb
ss
call
mov
jge
sbb
fst
bound
dec
sbb
cmp
pop
push
dec
adc
cli
aaa
sbb
adc
sub
fdivrl
in
jmp
pop
insb
mov
shlb
xchg
std
sbb
leave
adc
addr16
push
add
mov
push
stc
jne
insl
popf
sbb
pusha
enter
repz
popa
cmpl
ss
mov
mov
nop
mov
xchg
lahf
xchg
out
xor
push
xlat
sahf
xchg
shl
sub
je
decb
call
dec
sub
leave
sbb
push
adc
and
filds
xchg
mov
mov
repnz
jl
out
stc
int
xchg
sarl
inc
and
push
enter
aam
sarl
aaa
xchg
mov
imul
out
cmc
int
cmpsb
ret
loopne
imulb
mov
ljmp
fsubrl
and
add
icebp
and
in
aas
subl
push
insb
outsb
lret
sbb
mov
loopne
jb
xor
add
call
mov
xchg
jle
push
xchg
test
xchg
add
add
out
in
into
and
incl
dec
out
out
xor
jb
add
imul
jmp
xor
push
imul
xchg
call
stc
pop
fmull
sub
mov
cmp
addr16
shll
adcl
ljmp
lea
adc
sub
pop
inc
sbb
mov
sbb
mov
movsb
pusha
out
dec
pop
add
test
inc
pop
pop
mov
push
xor
add
call
dec
test
je
sub
xor
mov
fldt
insl
push
mov
int3
jnp
cmp
sub
mov
add
rorl
inc
cmp
ss
cmpsl
xor
pop
mov
bound
ja
push
scas
mov
add
das
pop
jbe
out
jecxz
mov
jmp
mov
jae
movsb
inc
movsl
mov
cli
loope
lock
out
add
sbb
push
lret
loopne
sub
fistpl
pusha
xor
sub
jmp
ljmp
out
dec
popf
inc
dec
stos
push
add
call
loope
cwtl
fmul
cmp
push
xchg
lds
and
xorps
cltd
pop
iret
out
pop
pop
sub
inc
clc
pop
sub
xor
mov
in
mov
sti
lcall
jo
int3
shlb
test
jns
jbe
enter
sbb
popa
ret
mov
fistpll
inc
sbb
in
inc
movsb
jg
jo
shl
sub
js
inc
add
push
in
inc
mov
xor
rcrb
and
dec
cmp
xchg
mov
cs
loopne
ds
shll
bound
add
call
push
mov
lret
add
call
dec
in
push
push
jnp
dec
jo
stos
push
nop
xchg
add
imul
fimuls
sbb
data16
test
loop
xchg
sahf
push
push
fs
dec
mov
pop
and
pop
mov
add
push
addl
push
call
movsl
loopne
bound
sarl
out
mov
sti
iret
pop
into
cmp
and
stc
or
inc
and
pop
int
stos
add
call
xchg
pop
jp
mov
fisttpl
push
or
mov
jne
inc
stc
aaa
pushf
pop
add
mov
fimull
jl
mov
cld
clc
das
and
testl
xchg
lret
call
and
fsubrs
scas
jb
test
adc
std
mov
cli
push
call
dec
mov
sbb
jle
aad
daa
popa
mov
mov
mov
sbb
sbb
mov
in
mov
jmp
orb
icebp
push
pushf
js
leave
dec
mov
lret
js
add
call
jo
pushf
in
jnp
dec
cmpsl
or
push
or
or
sbb
jae
faddl
iret
push
mov
mov
test
idivl
mov
icebp
std
adc
sahf
pushl
divb
data16
ret
xchg
sub
adc
cmc
nop
lds
jl
push
push
cli
cs
mov
call
mov
xor
hlt
push
mov
mov
stc
push
lcall
push
jecxz
add
test
jle
add
call
mov
fisubl
sub
addr16
in
imul
shrl
xchg
mov
push
add
mov
or
sub
outsl
in
cmp
es
jp
or
cmp
dec
mov
pop
loope
shll
jmp
add
pushf
ds
pop
push
ss
and
inc
cmp
test
mov
adc
test
jns
xor
mov
xchg
popa
sbb
stos
sub
add
adc
add
call
mov
sub
push
arpl
sub
mov
mov
xor
mov
addr16
sub
fstpl
mov
jmp
roll
dec
int
pushf
fstpt
cmp
pop
xor
fcoms
sbb
mov
sub
ja
pop
inc
out
pop
sbb
cmp
jmp
sub
ret
lds
enter
mov
add
cli
sbb
and
xor
call
in
sub
rol
bound
and
push
hlt
mov
inc
add
test
ret
fstl
add
mov
mov
cmp
call
or
ret
test
shrb
add
outsb
cli
clc
xchg
lret
pop
mov
aam
push
cs
lret
inc
inc
clc
mov
adc
push
mov
into
inc
ja
clc
or
rcrb
std
iret
and
cmpsb
jo
orl
jo
out
outsl
ret
add
call
ja
sub
jb
mov
dec
inc
cmp
lahf
cmp
fldenv
xor
inc
gs
lock
mov
inc
outsb
jecxz
pop
inc
sahf
stc
ja
test
push
sti
out
out
adc
cmp
dec
dec
sub
std
hlt
push
pop
xchg
cmp
test
jo
and
iret
add
in
cmp
and
adc
gs
out
test
mov
inc
in
mov
cmp
jmp
push
xor
adc
call
jp
and
pop
ds
cmp
mov
push
insb
sbb
js
rcl
xor
mov
ljmp
jns,pn
lods
pop
add
xchg
sub
subl
iret
dec
or
pop
push
mov
jp
xor
enter
mov
xor
int
sub
adc
mov
jmp
cmc
ret
ret
ljmp
cwtl
xchg
adc
add
lods
divl
mov
jo
rcl
xchg
push
mov
fimuls
xchg
inc
mov
xchg
movsb
add
call
jp
add
icebp
loope
pop
sub
shlb
xor
das
std
invd
lods
or
ret
push
outsb
mov
fstps
sahf
sarl
xlat
pop
stos
leave
pop
in
das
mov
fmul
mov
xchg
daa
aaa
pop
sub
push
or
pop
lods
leave
aam
push
cmpb
push
push
pop
lods
rcr
push
or
std
int
push
stc
push
push
xchg
test
out
mov
jbe
fwait
lcall
pop
adc
dec
dec
dec
push
pop
mull
out
add
call
rcr
pop
pop
and
or
and
xorb
push
jl
sbb
sub
das
mov
lcall
or
sub
xor
xor
ret
rorl
dec
or
and
xor
fldenv
movsl
adc
mov
loope
adc
mov
stos
cs
out
jnp
popf
adc
cmc
cmpl
adc
sbb
push
insl
rcll
mov
call
gs
loop
jg
sbb
inc
aam
in
or
and
lcall
mov
pop
add
jbe
mov
mov
inc
mov
out
push
jl
cmpsl
aas
sbb
mov
outsl
jno
sbb
sub
aaa
pop
in
cmp
fs
sbb
adc
sub
or
pop
in
push
pushf
jp
popf
jnp
mov
inc
xchg
adc
repnz
pop
fnstcw
fidivrs
into
addr16
out
add
call
mov
inc
es
cmp
sub
and
inc
sbb
mov
loopne
pop
pushf
xor
test
lcall
inc
jge
aam
clc
xor
or
push
dec
inc
pop
lret
xor
hlt
cmp
mov
and
iret
test
insb
push
bound
xor
jnp
shlb
push
or
jnp
xchg
jae
mov
inc
pop
pop
mov
sub
add
leave
sub
jl
inc
adc
push
insl
ss
daa
repnz
mov
call
test
notl
mov
pusha
or
iret
rclb
xchg
adcl
ficoml
test
gs
ja
fwait
cltd
pop
push
mov
or
lcall
inc
mov
mov
into
pop
leave
add
jmp
and
lods
popa
jbe
ja
insl
jne
sub
adc
bound
lret
mov
xchg
jmp
fiaddl
add
or
sbb
ds
fmull
mov
add
call
dec
in
loope
ja
dec
std
pop
repnz
in
stc
push
pop
rcrl
mov
push
inc
lcall
test
js
xchg
cmpb
loopne
mov
lcall
gs
sarb
imul
popf
cs
sti
call
mov
fs
inc
rcrl
fsub
push
xchg
add
sub
les
aam
or
repnz
pop
inc
lock
dec
imul
add
arpl
call
inc
mov
clc
call
js
xchg
jl
push
test
pop
lahf
fistpl
inc
pop
mulps
out
pop
dec
fsubrs
xor
inc
jg
sub
stos
cmpl
and
pop
sbb
enter
xlat
fwait
sub
mov
and
cld
fiaddl
inc
cmp
inc
ficoms
push
push
gs
shl
xchg
xorl
sub
adc
cmpsb
popf
mov
add
cmc
mov
pusha
movsb
sbb
adc
movsl
cli
jl
cmc
cmc
mov
xor
call
scas
pop
xchg
ret
in
mov
adc
mov
aaa
xchg
xor
mov
sub
out
jne
jns
cwtl
jnp
pop
mov
or
cwtl
jle
jge
inc
xchg
push
add
lret
jmp
scas
pop
dec
inc
ficomps
je
inc
pop
ficoms
insl
in
inc
pop
pop
cmp
sub
scas
jg
bound
arpl
mov
bound
arpl
ds
insl
arpl
scas
xor
mov
cmp
add
call
sahf
push
pop
mov
sbb
mov
push
nop
loope
push
sub
fdivs
sti
sbb
mov
cltd
ja
mov
mov
cmp
cwtl
insl
jno
xchg
out
adc
xchg
and
sbb
jae
arpl
dec
jecxz
jbe
rol
pop
adc
aas
mov
mov
pusha
jo
int
out
out
mov
jecxz
or
jecxz
out
and
stc
mov
fwait
popa
mov
pop
fstpt
mov
sahf
fisubrl
and
xchg
inc
jo
add
call
aad
repnz
push
in
int3
inc
ficompl
test
xchg
or
std
lcall
push
push
dec
in
jbe
insl
bound
imul
clc
sarb
adc
outsb
dec
mov
sahf
out
mov
mov
lahf
fidivrl
loop
xor
pop
rorb
arpl
subl
jb
adc
repnz
jmp
xchg
les
pop
cltd
push
xorl
mov
mov
test
outsb
add
stc
sub
icebp
hlt
insb
or
add
call
xor
mov
add
inc
and
push
in
pop
mov
inc
dec
inc
out
fs
mov
adc
cmpsb
inc
lret
in
test
xor
mov
pop
rclb
mov
sub
scas
adc
lods
sub
push
insl
test
jge
nop
mov
gs
in
fsubrs
mov
test
sbb
pop
mov
lret
add
popl
mov
aaa
adc
mov
mov
fnstenv
xor
push
test
add
call
lods
pop
sarl
rcrl
push
jp
push
sbb
fisubl
fwait
inc
or
cmp
pop
lock
gs
jne
jp
stc
pop
push
and
push
xchg
jbe
out
fcoms
and
pop
adc
cmp
add
mov
xor
xchg
shll
push
and
jle
inc
mov
jp
inc
subl
in
push
movsb
mov
shlb
pop
push
call
jmp
fisttps
cmp
addr16
or
cmp
lds
fs
mov
add
call
sbb
mov
outsb
dec
xor
inc
leave
ja
pop
kandw
js
cmp
push
outsb
mov
fmul
orl
push
rolb
ficomps
cmp
xchg
mov
sub
fsqrt
xor
inc
sarl
fcmovbe
mov
cmp
xchg
int3
sub
movsb
dec
dec
jo
fcmovu
or
popf
jge
xchg
sub
shl
clc
add
xchg
data16
sahf
jle
sbb
jnp
mov
das
add
call
fsubrs
int3
push
mov
std
mov
xor
pop
add
mov
call
pop
fidivl
pop
and
push
jb
inc
cmpsl
gs
jne
pop
nop
pop
xchg
sub
lret
xor
adc
repz
adc
int
lcall
fstl
out
test
or
xchg
add
add
lods
int3
repz
out
push
xor
cwtl
jmp
sbb
outsl
iret
jb
repnz
jl
in
cwtl
push
aaa
push
mov
sub
out
test
add
call
xchg
or
ret
xchg
or
fnstcw
fists
cmp
cmpsl
cmp
add
adc
pop
cld
lock
mov
nop
sbb
sub
repnz
outsb
cmp
sbb
and
rcl
fldenv
mov
push
xchg
mov
fdivrl
add
dec
ficompl
scas
xor
inc
inc
xchg
dec
jp
mov
mov
xabort
daa
outsl
lods
jp
lret
add
cwtl
enter
or
iret
ljmp
imul
scas
in
add
call
add
mov
lret
xchg
or
mov
test
divb
sub
jmp
adc
jecxz
push
cwtl
jne
arpl
dec
mov
xor
push
pop
push
jge
xchg
pop
in
and
push
pop
hlt
lret
xchg
xchg
sub
and
ret
inc
adc
in
mov
jno
sbb
mov
cmp
xchg
mov
cs
add
mov
and
dec
mov
popf
mov
cmp
or
inc
inc
imul
shr
sub
cli
lock
add
call
jns
and
push
cmp
mov
fwait
and
out
ljmp
nop
in
mov
mov
adc
push
repz
xchg
and
sbb
push
mov
pop
mov
mov
mov
fcoms
push
andl
push
clts
mov
mov
mov
jge
jmp
test
adc
push
xor
mov
push
mov
xchg
mov
inc
shll
mov
xor
add
call
pushf
test
fsubrl
cmp
lahf
mov
xchg
mov
nop
add
inc
jecxz
push
loope
jl
jmp
pop
push
cmp
mov
mov
sub
clc
dec
lret
scas
stc
adc
cmp
mov
cld
mov
ss
inc
mov
subb
dec
push
push
xchg
mov
jmp
inc
mov
data16
adc
fildl
test
test
jb
cmp
mov
jb
sbb
fiadds
add
call
call
ljmp
xchg
daa
lcall
push
outsl
stos
inc
add
jno
xchg
jns
mov
std
imul
or
mov
cmc
inc
ljmp
fstps
stos
aas
aad
pushf
insl
sbb
jnp
sub
xor
push
jo
movb
push
push
out
cwtl
stos
fistps
jmp
lods
push
pop
cmc
int
insb
loope
lods
jp
lahf
movsl
jmp
loope
jae
dec
mov
call
jmp
mov
mov
add
call
cmp
nop
mov
sbb
or
stos
out
sub
pop
out
push
or
fistl
fcompl
or
mov
push
insb
nop
mov
cmpsl
movsb
jmp
add
pop
mov
cs
fdivl
and
imul
mov
repz
mov
inc
loopne
mov
outsb
clc
out
repnz
int3
pop
daa
movsb
jg
call
fdivp
xchg
cmc
imul
and
pop
jge
xchg
call
lds
sbb
add
call
sarl
pop
adc
inc
push
gs
call
imul
sbb
shlb
fwait
push
mov
out
sbb
movhps
imul
mov
lret
jmp
outsb
pusha
sti
add
lods
popa
xchg
enter
xor
and
subl
arpl
ds
dec
cltd
mov
fisttpll
cs
inc
mov
dec
pop
sub
lret
push
or
mov
pusha
xor
loope
push
fs
pushf
out
add
call
pop
dec
dec
push
mov
inc
das
ds
shll
lods
lods
lahf
outsb
call
pop
in
cmpsb
dec
xor
popf
cmp
lods
pusha
sarl
xchg
adcb
dec
cld
jns
xor
pop
dec
cmp
or
mov
inc
or
mov
jnp
sbb
push
cs
aas
movsl
lahf
movsl
leave
jg
add
imull
inc
out
jb
sub
dec
mov
mov
mov
adcl
adc
mov
cltd
mov
call
add
in
adc
mov
outsl
movsb
das
xchg
xchg
inc
pop
stc
push
jmp
ret
sub
jmp
cmc
sbb
aam
jp
cmpsl
cld
sbbb
lock
popf
sarb
lcall
dec
std
leave
sub
add
xor
mov
push
jo
aad
sbb
cmp
adc
in
aam
test
dec
ja
adc
push
and
in
pop
movsl
adc
subb
mov
cmp
push
adc
or
add
call
jmp
shl
xorb
mov
dec
mov
or
dec
lahf
mov
push
call
fistpll
scas
aas
leave
ss
addb
adc
mov
push
cmpsb
jle
mov
rcl
jle,pn
pop
jae
lea
mov
test
jecxz
sahf
dec
mov
test
mov
push
cmc
xlat
idivl
jo
dec
xchg
pop
test
xor
push
push
add
add
pop
outsl
sti
dec
push
dec
adc
loopne
add
call
pop
adc
or
push
push
jg
xchg
punpcklbw
cltd
aas
outsb
mov
mov
mov
into
xchg
mov
lret
iret
scas
jb
mov
rorb
in
push
test
andl
in
and
and
mov
insl
jb
mov
popf
loopne
jnp
push
dec
inc
dec
cmp
xor
cmp
adc
ror
aaa
xlat
cmpsl
or
ds
je
sub
sub
inc
mov
add
call
cmp
out
std
fidivrl
lea
je
xchg
mov
cmpsb
fldt
dec
dec
jnp
jmp
ret
or
aam
and
adc
icebp
inc
leave
and
pop
daa
jmp
movsb
sahf
lret
inc
repz
lock
mov
popf
stos
cmp
push
sbb
popf
add
sub
mov
flds
xor
push
and
push
and
mov
mov
test
in
ficompl
mov
insl
repnz
mov
imul
mov
call
xchg
pop
cwtl
cmpsb
mov
mov
mov
cmpsb
cwtl
scas
lahf
inc
aad
adc
scas
add
mov
xchg
inc
fildl
stc
push
mov
enter
adc
sub
icebp
inc
subl
push
lods
adc
sub
add
fcmovu
cmp
mov
ljmp
dec
fildll
lret
xchg
hlt
pop
pushf
divb
sti
inc
rclb
mov
push
sbb
bound
jl
jl
cs
lret
arpl
iret
jmp
mov
fistps
fcoml
lahf
inc
xchg
lea
add
call
loopne
fbld
jp
lock
cmp
jp
pop
fs
clc
add
lret
icebp
cmpsl
lret
jnp
xchg
stc
adc
push
jae
ja,pt
icebp
les
mov
pusha
sbb
nop
cmp
adc
mov
in
stc
imul
push
jns
out
out
aas
fldl
and
xor
jb
inc
out
adc
sub
fbld
out
enter
inc
les
fs
xchg
mov
fiadds
mov
mov
push
pop
insb
sub
fwait
add
call
jl
and
fists
push
loope
pushf
stc
add
out
xlat
fnstcw
jae
push
adc
pop
sbb
or
xor
or
mov
lahf
int
mull
and
je
fyl2xp1
mov
test
cmp
jne
insb
mov
mov
inc
and
iret
loope
xor
mov
ret
filds
adc
je
out
sub
popf
add
popa
or
lret
and
movsl
mov
sub
adc
xlat
popa
fiadds
sub
call
aad
dec
and
mov
clc
jp
and
loope
jns
ds
add
xor
jecxz
nop
pusha
sbb
pusha
nop
sar
xchg
loope
arpl
jb
aam
and
sub
sbb
jne
shll
outsl
mov
jnp
mov
loop
lret
pop
cmpsb
daa
adcl
aam
sub
stos
aaa
xor
adc
test
bound
lock
cmp
into
sbb
stc
stos
aas
adc
fs
xchg
push
inc
jae
lahf
or
shlb
add
call
int
xchg
shlb
insl
push
adc
xchg
sub
pop
in
dec
andb
movsl
into
and
jno
xchg
xchg
mov
pop
xchg
push
cmp
lret
or
cmp
mov
pop
and
ficoml
mov
enter
xlat
ret
insl
clc
loopne
cld
sbb
jl
push
out
jnp
fidivrs
lds
fcoml
xchg
cmp
mov
dec
inc
and
push
push
ficoms
xor
fidivl
testl
mov
insl
fbstp
call
cmpsb
push
fimull
push
xchg
test
iret
hlt
pop
popa
xor
or
int3
mov
out
xor
stos
push
or
or
push
out
cmc
ss
shr
dec
xor
cmpsl
hlt
arpl
sub
adc
mov
cmp
movsl
xor
imul
mov
std
stos
fmul
loope
lods
adc
push
das
jle
cmp
push
mov
inc
push
in
jge
std
test
or
scas
mov
fmull
sub
sub
loopne
add
call
jge
scas
fcomip
rcrl
fmull
test
rcr
and
cmp
xchg
xor
sub
daa
mov
xchg
jmp
fisttps
aas
inc
add
stos
sub
mov
jno
sti
loopne
cwtl
test
jns
sbb
pushf
push
out
pop
xchg
imul
mov
cmp
movsb
pop
roll
fidivs
cmp
pushl
int
outsl
fimull
fisubl
stos
add
in
adc
enter
push
cltd
add
push
pop
divb
cmp
fcoml
call
push
insb
adc
jmp
pushl
rcll
daa
fidivs
cmp
push
sub
and
pushl
dec
jecxz
mov
jne
rcrl
xchg
fcomps
adc
popa
jbe
out
jb
cmpsb
fisttpl
add
shrl
outsl
outsl
xor
mov
push
xchg
push
sarb
xor
stos
leave
int3
pusha
xchg
in
and
mov
mov
out
jbe
adc
mov
xor
or
dec
ret
add
call
mov
push
sbb
int
addr16
lahf
cmp
push
sub
fdiv
pushl
mov
mov
ret
cmp
out
and
xor
fildll
pop
and
in
rolb
imul
adc
pop
inc
cmp
mov
stc
pop
lds
push
pop
push
xor
lret
sahf
into
jle
dec
inc
fidivs
call
int3
pusha
out
dec
adc
in
mov
enter
addr16
call
or
adc
adc
ret
imul
call
xor
sub
pop
stos
lds
ficomps
or
mov
imul
sbb
nop
jns
iret
test
ror
mov
bound
or
mov
jmp
ss
push
mov
loop
popa
cmc
pusha
mov
inc
arpl
daa
push
cs
lahf
sub
mov
std
xor
sar
in
push
sbb
ror
iret
push
cli
sub
xorl
sbb
test
loope
lret
xchg
mov
in
mov
add
call
popf
mov
ja
sbb
rorb
mov
data16
popf
mov
dec
and
push
inc
insb
pop
cmpsl
sti
and
push
or
insb
in
loop
pop
add
outsl
in
stc
shl
push
cld
jae
pop
pushf
and
das
mov
jmp
adc
sar
push
imul
mov
add
sbb
test
cld
addb
add
leave
fadd
sbb
fucom
and
and
xor
data16
add
call
sub
gs
xlat
mov
inc
ja
es
lds
mov
das
mov
inc
push
add
cwtl
fucomp
pop
stos
push
push
or
shl
pop
movsb
out
jmp
fimull
jno
in
cltd
xor
adc
ds
add
jnp
add
data16
scas
js,pn
inc
adc
and
xchg
scas
mov
outsl
sub
xchg
scas
insb
jae
add
jnp
movsb
mov
dec
and
fmul
mov
daa
out
movsb
lods
les
xor
std
inc
cwtl
sti
test
and
and
add
call
push
sbb
pop
out
mov
xor
inc
jle
sti
sbb
stos
pop
es
dec
ficompl
cmpsl
leave
adc
mov
stc
popa
adc
into
pop
cwtl
inc
aas
sub
sub
push
or
in
push
mov
jle
orl
jmp
insb
and
jb
ds
adc
cwtl
into
int3
adc
outsl
imul
mov
mov
adc
cmp
inc
push
repnz
add
call
subl
mov
jle
ds
insb
jp
data16
pushf
int3
sahf
pop
std
or
pusha
and
int3
add
hlt
or
aad
lods
std
pop
fisubs
stos
call
pop
andl
and
hlt
dec
cld
mov
nop
call
and
xor
daa
sbb
mov
and
ret
adc
icebp
and
add
sbb
sub
dec
mov
scas
adc
lods
lcall
xor
bswap
jo
out
jns
add
call
shlb
mov
mov
adc
shr
lds
and
push
ljmp
stos
adcl
daa
addr16
pop
xlat
adc
repz
or
popa
push
mov
xor
add
rorl
je
mov
mov
mov
sbb
pushf
shrl
xchg
mov
jb
test
cmpsl
lcall
cs
push
pop
jo
das
imul
clc
stc
adc
mov
jae
pop
aaa
add
call
push
sbb
dec
icebp
and
cmpsl
lods
xor
leave
arpl
cmp
fs
dec
dec
bnd
loopne
or
push
fisttpl
clc
ret
lret
push
clc
add
adc
push
mov
jo
mov
sub
fldl
dec
lahf
mov
cli
leave
mov
push
mov
cmp
mov
adc
push
outsb
test
and
jmp
sbb
sub
test
mov
xchg
adc
mov
add
call
std
jno
xor
mov
les
lcall
sub
fimuls
jle
movsl
cmp
int
and
cs
jne
ret
jmp
ds
fisubl
jo
jno
movsl
dec
inc
xor
out
mov
mov
pop
mov
ds
cmp
movsb
jo
iret
mov
push
jmp
inc
and
adc
stc
sbb
outsb
test
rcl
test
out
add
mov
cmc
push
test
add
call
cmp
xchg
xor
mov
loop
pop
cmp
fwait
mov
lea
ds
cmc
adc
jg
lods
ret
cmp
ja
and
xchg
cmpsl
adc
push
cmpsl
aam
adc
fists
push
movsl
icebp
xlat
pop
mov
scas
pop
push
aad
mov
loopew
scas
push
pop
mov
mov
mov
adc
or
insb
pop
scas
dec
xchg
mov
sbb
and
push
icebp
add
jle
cmpsl
and
iret
pop
fwait
sub
mov
ret
aaa
dec
or
add
call
xchg
fxch
fwait
sti
out
ss
fnsave
adc
divl
sbb
mov
daa
adc
mov
push
xor
mov
je
mov
insb
xchg
stc
cltd
mov
adc
pop
lcall
jbe
test
jg
ja
mov
movsl
pop
mov
cmp
jns,pt
push
call
or
ss
pop
pop
mov
sub
ds
jbe
test
subb
sti
insl
mov
cmp
mov
inc
jp
fstl
cmc
xor
add
call
xor
or
add
daa
adc
jp
clc
jp
cltd
addr16
dec
lahf
fs
push
sub
mov
push
sbb
dec
rcrb
cmp
dec
in
sub
call
cld
fsubl
mov
loope,pt
loopne
out
push
out
sar
inc
or
adc
lods
or
jmp
repz
into
or
add
sbb
inc
adc
rcrb
mov
nop
cwtl
aam
mov
xchg
sbb
add
call
jae
xor
adc
outsl
imul
lds
loopne
jp
out
xor
inc
inc
dec
mov
ret
pop
sbb
scas
out
inc
sbb
int3
mov
xchg
dec
pop
push
aad
fs
cmp
mov
imul
sahf
jmp
inc
fucomi
pop
sti
sbb
add
add
mov
mov
subb
sub
add
mov
jns
loop
roll
jnp
mov
call
jbe
test
repnz
cmp
sbb
xchg
cmp
pushf
adc
dec
jle
and
in
cmp
push
sub
clc
mov
sbb
adc
ret
jecxz,pn
sub
inc
and
xchg
mov
std
cmp
pop
mov
cmpsb
and
fldt
xlat
clc
ret
pop
fstl
loope
cwtl
jmp
sbb
inc
test
or
push
push
aas
ja
mov
mov
pop
outsb
aam
out
dec
subl
mov
inc
insl
rep
jmp
sub
call
jmp
hlt
pop
insl
xchg
adc
push
or
lret
add
push
jge
jecxz
push
or
loopne
aam
js
out
icebp
inc
adc
loope
dec
nop
icebp
mov
iret
add
sbb
loope
pop
jnp
jle
inc
loopne
jo
inc
dec
fimull
loopne
mov
mov
jmp
je
daa
fimull
fs
fildl
andb
add
xchg
sbb
pop
xchg
jle
jo
mov
push
dec
cmp
or
call
cmpsl
xor
push
cmp
pop
push
inc
cmc
out
shlb
mov
push
pop
rcrb
cmp
mov
xor
mov
insl
add
shrl
xor
mov
pop
ret
lods
and
dec
jl
mov
nop
mov
add
bound
push
xlat
cmpsl
inc
into
jbe
mov
loope
jmp
pop
cmc
rorl
dec
arpl
xchg
mov
into
imul
clc
inc
inc
inc
test
mov
repz
fcomps
add
call
dec
mov
adc
test
mov
ja
add
cltd
hlt
outsl
fdivrs
xor
mov
cmpsb
inc
add
inc
mov
test
mov
flds
cmp
inc
loop
js
call
and
xchg
adc
adc
mov
aam
xor
push
enter
scas
pop
ret
aaa
bound
or
jnp
push
mov
shlb
jge
jno
ja
add
daa
add
sbb
adc
test
out
add
call
mov
and
jmp
cmc
out
ret
data16
mov
outsl
lds
psubsb
adc
ret
pop
shll
xchg
ljmp
fcmovbe
inc
mov
pop
pop
addr16
xor
aaa
in
fdivl
push
adc
mov
repnz
mov
dec
fstpt
push
mov
dec
jg
fstpt
lret
outsb
add
inc
mov
ja
shlb
xlat
pusha
dec
outsl
cmp
sbb
aas
icebp
daa
int3
sub
mull
add
call
xor
adc
clc
das
add
mov
pop
dec
in
call
int3
fisttpll
mov
rorb
push
fcmovb
inc
dec
jne
fstl
add
mov
mov
adc
cmp
clc
testl
push
icebp
icebp
dec
jno
mov
orb
xor
xchg
cmp
and
aas
pop
mov
pop
mov
push
shll
jnp
inc
out
mov
mov
jae
cs
dec
ret
and
sbb
add
call
insb
test
dec
push
lret
xchg
push
inc
insb
lret
pop
xchg
jns
xor
xlat
add
sbb
jle
jno
data16
sub
into
sbb
fs
imul
sti
jns
add
dec
outsb
lahf
sahf
in
dec
and
fsubrp
sbb
or
xorb
pop
sahf
dec
cmpsb
pop
fiadds
mov
ret
fdivs
xlat
out
cmp
shlb
and
aam
fsubs
orl
adc
ret
outsb
movsb
mov
outsl
data16
xor
add
call
lods
xchg
mov
push
fcmovu
inc
fdivs
or
mov
adc
cwtl
xor
mov
dec
ret
dec
pop
sbb
cmp
mov
call
std
sahf
repnz
sub
fists
fisubrs
pusha
adc
test
jnp
addr16
insl
movsb
add
push
inc
lods
push
enter
jmp
inc
and
mov
push
xchg
xchg
fwait
adc
and
je
inc
pop
repz
repz
call
jecxz
ret
jmp
rclb
push
jg
cmp
or
les
mov
jge
push
jns
int3
xchg
cmp
cmp
xchg
push
push
aas
xor
shll
pop
rcll
adc
inc
adc
movsl
fsubrp
scas
sbb
sahf
xchg
or
sbb
dec
pop
dec
push
and
mov
push
mov
ret
in
xchg
and
push
sub
aaa
add
test
fdivrs
xchg
or
xor
add
call
push
pusha
fdivr
mov
add
adc
inc
mov
out
xor
pop
push
in
xor
cld
xor
jge
mov
sbb
mov
insb
sbb
mov
in
movsb
or
ret
bound
sbb
xorb
mov
lcall
repz
xchg
test
xchg
xchg
add
sahf
cmp
push
ret
push
cmp
std
clc
insl
clc
dec
js
insb
call
shll
add
xor
adc
mov
mov
int
jge
subl
add
add
mov
pop
clc
movsb
popa
inc
insb
sbb
add
jmp
mov
sub
ret
cmc
iret
cmp
xor
lock
test
mov
add
push
cmp
cwtl
sub
ds
fimuls
xor
cmp
mov
mov
js
mov
sub
das
mov
dec
bound
xorl
sahf
ret
dec
xchg
push
xlat
jg
jns
loopne
mov
arpl
fst
mov
add
call
and
mov
xchg
cltd
jno
aas
cmpsb
lret
push
lds
mov
pop
push
adcl
and
int3
roll
daa
bound
arpl
and
jg
and
inc
cwtl
xchg
xor
inc
inc
lock
enter
mov
sbb
mov
adc
enter
pusha
or
ja
out
jmp
aam
bound
sub
push
push
cltd
leave
ss
push
mov
mov
lods
inc
sbb
and
inc
add
call
hlt
clc
in
xchg
add
jnp
adc
je
sub
xchg
movsb
cmp
push
loope
stc
or
cs
mov
fildll
clc
dec
nop
adc
sti
lret
inc
add
out
leave
push
out
sbb
ss
out
stc
sub
jp
dec
cmp
mov
divb
aas
ja
push
jg
fisubrs
ret
or
mov
sbb
out
icebp
or
xor
mov
push
insb
mov
fdiv
push
pop
push
movsb
xlat
xchg
mov
pop
cmp
imul
jmp
cli
mov
add
call
pushfw
decb
mov
mov
xor
pop
pop
lea
sbbb
or
and
push
loop
push
push
inc
popa
pop
pop
inc
sbb
aaa
rorl
push
and
rolb
cmp
lahf
clc
xchg
mov
sbb
or
fists
push
sti
leave
daa
xchg
arpl
lret
sub
fildl
lds
loop
ja
scas
test
push
pop
jbe
mov
insl
or
add
call
rcrl
cmp
test
bound
xlat
imul
jl
in
xchg
lods
mov
adc
jle
stos
or
mov
push
xchg
xchg
repz
aad
outsl
lret
stc
call
mov
inc
push
jb
addr16
jbe
cmp
push
mov
movsb
es
and
push
test
pop
repz
paddusb
aam
xor
dec
pusha
jo
ja
dec
or
mov
icebp
pop
pop
ja
inc
fadds
fidivrl
into
mov
jmp
jbe
xor
jecxz
push
pop
mov
add
call
and
xchg
sbb
sbb
fcmovbe
dec
ljmp
hlt
dec
adc
inc
mov
xchg
loopne
push
xchg
sbb
xchg
push
inc
fnstsw
dec
test
or
pop
push
imulb
add
icebp
faddl
push
dec
gs
mov
xor
sbb
add
in
add
and
movl
shlb
jo
pop
inc
loopne
pop
fadds
dec
or
daa
jecxz
sbb
notb
out
fwait
xchg
xor
add
call
cs
or
and
adc
mov
lcall
insl
outsl
push
in
jp
cwtl
cmp
inc
or
out
xchg
add
adc
or
and
daa
fld
scas
int3
xor
add
shlb
call
sbb
in
lret
add
outsb
dec
jge
xlat
jne
adc
out
push
dec
jno
xor
dec
idivb
inc
popa
and
adcb
cltd
adc
lcall
dec
gs
mov
repnz
call
mov
sbb
adc
or
pop
add
aad
test
pop
ror
push
adc
mulb
mov
mov
dec
push
inc
bnd
mov
jbe
dec
test
sbb
inc
lods
xor
mov
or
lods
sub
xchg
std
mov
cs
hlt
pop
sub
fadds
mov
mov
pushf
dec
push
stos
hlt
add
cmpsb
mov
mov
aad
insl
fs
rorl
fdivrl
mov
mov
dec
int
add
call
test
ret
mov
aad
fistl
adc
lret
and
xor
mov
pop
or
mov
cmp
adc
rorl
int
jne
test
push
aad
fwait
sub
loope
ljmp
jno
or
sub
push
mov
popa
and
push
iret
dec
jg
hlt
mov
xchg
or
fs
rolb
cmpsl
popf
ret
rcl
imul
mov
lock
sub
ss
js
int3
aas
add
and
xchg
add
call
stos
fnstsw
loop
movsb
xchg
xchg
insl
cltd
btc
mov
xchg
pop
popf
roll
in
sub
add
jns
inc
in
xor
sub
sub
mov
inc
hlt
ret
jne
xor
and
mov
add
cmc
xchg
mov
stos
popa
fninit
adc
push
jbe
sbb
lahf
lock
fisttpl
repz
jge
roll
scas
and
and
lret
pop
aam
sub
mov
out
rcrl
jg
shlb
out
icebp
adc
inc
add
call
sbb
fimull
add
adc
push
mov
das
aam
mov
mov
out
or
lahf
cmp
adc
mov
xchg
fxch
lahf
xchg
add
gs
inc
fldcw
adc
xchg
push
lea
lret
aaa
cmp
mov
mov
xor
dec
xor
pop
rclb
xchg
sbb
aad
sub
xchg
dec
mov
xchg
cwtl
andb
addr16
loope
xchg
lret
mov
imul
and
jp
loop
movsb
add
call
push
pop
push
sub
mov
inc
mov
mov
jmp
and
push
dec
jmp
popf
fmull
mov
lock
cmpb
push
xchg
stos
and
push
imul
or
hlt
xor
jb
outsb
xchg
stos
aaa
cmpsl
push
je
in
mov
ret
pop
jecxz
adc
or
fadd
adc
pop
movsb
jnp
add
or
add
xchg
andb
scas
stos
ljmp
sahf
mov
shll
jne
je
dec
sbb
shr
fs
mov
call
jo
jae
ljmp
lds
pop
ret
pop
dec
rcrb
push
add
add
shlb
dec
xchg
out
cld
test
scas
cltd
mov
mov
xor
cmp
insb
out
idivl
jg
inc
xor
shrb
mov
adc
imul
jecxz,pt
dec
mov
fbstp
cmpsl
sbb
lret
shlb
jno
out
fsubs
jne
leave
mov
jbe
lcall
xchg
add
add
rol
scas
aam
sti
ficomps
mov
mov
sub
mov
jmp
or
out
pop
jmp
ss
das
push
xacquire
xor
fcmovnb
dec
ja
dec
mov
pop
pop
pop
jno
mov
mov
inc
lret
in
adc
icebp
loope
dec
fldl
ja
add
test
cmp
idivl
movsb
and
mov
mulb
jnp
divl
mov
roll
data16
mov
pop
mov
mov
xchg
jecxz
add
call
jo
loope
add
shlb
and
push
data16
adc
jl
xchg
mov
sbb
shl
cmp
xor
fcoml
hlt
jge
or
sub
mov
mov
mov
sbbl
pop
or
push
xchg
outsb
sub
enter
aam
sar
mov
je
sub
clc
lahf
subb
sarb
clc
loop
jecxz
cmp
or
mov
roll
add
call
repz
push
add
sbb
sbb
arpl
cmpsb
enter
sub
inc
add
daa
and
and
jl
xor
fs
aam
icebp
cwtl
mov
ljmp
ds
ja
in
sbb
stos
cmp
sahf
cs
rcrl
movsb
out
icebp
mov
sbb
push
and
jecxz
push
jge,pn
fisttpl
daa
jg
jl
pop
pop
add
sub
sbb
lahf
insl
insl
mov
add
call
pop
sbb
xchg
lods
imul
in
cmpsl
cld
loope
dec
mov
cmp
adc
dec
cmp
repz
mov
aas
pop
imulb
pop
push
adc
inc
dec
pop
xchg
popa
xor
jb
xor
xor
sarl
dec
xchg
pusha
std
mov
les
cmc
out
shlb
pop
or
iret
mov
sbb
ret
pop
jecxz
dec
dec
add
pop
sahf
repz
xchg
lcall
add
pop
lcall
call
cld
jae
out
xor
inc
cmp
jmp
mov
adc
adc
cmp
pop
pop
adc
push
xchg
popf
cmpb
inc
jle
and
dec
sub
scas
sbb
push
cmp
and
ljmp
push
subb
hlt
icebp
aam
lcall
jae
jle
stos
dec
cwtl
cmp
bound
loopne
inc
xor
cmp
shrb
fsubrs
inc
rcrl
repnz
clc
movsb
lea
pop
ror
ret
add
call
pop
mov
ret
dec
add
xchg
mov
arpl
mov
sbb
inc
adc
popf
cmp
jns
inc
jne
cld
dec
fs
mov
pop
dec
inc
jge
push
add
decb
push
xchg
das
push
cmp
xchg
ljmp
pop
movsl
inc
ljmp
inc
fsubl
mov
dec
outsl
mov
adc
cli
sub
in
push
std
lea
fwait
mov
xor
sub
in
mov
call
mov
fs
adc
mov
aad
repnz
in
repz
mov
hlt
mov
daa
dec
repz
pushf
out
repz
fs
orb
jecxz
mov
rol
jg
mov
cmp
stos
popa
xor
cmpsl
inc
loopne
dec
dec
push
jle
movsl
sub
popa
pop
les
mov
cwtl
jge
scas
scas
jnp
nop
pop
xchg
in
ja
cmpsl
paddsb
push
or
negb
shrb
adc
das
pop
pushw
xor
pop
andl
add
dec
sbb
inc
rolb
add
call
inc
cmp
cwtl
ret
orl
fs
dec
mov
push
stc
mov
push
xor
push
add
mov
jp
push
mov
add
shufps
in
and
or
pop
shrb
cmp
adc
push
mov
andb
mov
mov
mov
add
dec
fidivrl
mov
popa
rcrb
pop
jmp
dec
sti
repz
xorl
add
or
insb
add
call
sbb
inc
push
pushf
rclb
dec
add
or
cmp
fwait
lods
movsb
xchg
rcll
mov
int
pusha
jo
jno
addb
sarb
je
cmp
int
int3
sti
cmp
or
arpl
sub
mov
or
xchg
fs
lahf
into
cltd
push
rorl
or
xchg
sub
shrb
add
xor
loopne
mov
sbb
pop
cmp
mov
lea
jbe
les
add
call
mov
sbb
sub
enter
mov
fstps
enter
cmp
pop
mov
cmpsl
sbb
arpl
call
sbb
mov
pusha
std
jmp
inc
imul
jns
int
mov
popa
xchg
fistpll
push
in
adc
pop
or
sbb
adc
mov
mov
bound
cmp
cmp
es
push
jno
sti
or
lock
test
loop
cmpsl
imul
dec
mov
sub
jl
mov
push
cmpsl
testl
call
mov
popf
lea
fdivl
leave
lock
sub
sbb
mov
out
jne
mov
pop
xor
pop
prefetchw
cli
cmp
icebp
mov
aas
xlat
outsb
mov
stos
dec
lea
cltd
xlat
xor
mov
lock
jecxz
mov
stos
cmpsl
test
dec
ljmp
gs
pop
sub
dec
ret
and
adc
shll
sti
das
ja
mov
gs
fnstcw
sarl
fisttps
sahf
add
es
call
inc
ret
cmp
scas
mov
test
push
aaa
mov
dec
insl
cmc
addb
pop
vmwrite
xchg
sbb
test
ret
mull
xor
pusha
push
or
inc
mov
cld
aam
mov
cmpsb
dec
xor
jl
repnz
mov
jbe
add
push
xor
outsl
enter
arpl
mov
and
loop
xchg
xchg
das
or
jo
or
sub
add
xchg
dec
cmp
shlb
in
or
jb
pop
ret
inc
push
bound
inc
test
lahf
add
add
call
cmp
mov
xchg
xchg
testb
xor
push
daa
loope
mov
mov
addr16
ds
push
scas
fwait
mov
insl
movsb
xlat
push
cli
ds
push
or
inc
mov
jnp
push
push
mov
pop
int3
jg
cwtl
sbb
jle
cld
cmpsb
insl
test
jg
out
mov
dec
pushf
xchg
and
push
inc
icebp
push
lret
cmp
cmpsl
pusha
xchg
stc
adc
xor
mov
dec
idivb
adc
lds
call
mov
enter
ss
into
gs
insb
xor
dec
fsubs
sbb
xor
push
adc
test
jno
imul
adc
dec
rol
fnstenv
clc
xchg
aas
jno
mov
push
shll
xchg
xchg
sub
and
push
lock
fs
outsb
mov
adc
lea
pop
jle
adc
cld
pop
sahf
out
sub
lcall
and
mov
push
mov
icebp
loop
xchg
ljmp
pop
daa
push
icebp
scas
test
outsb
in
int3
add
call
lock
mov
mov
xor
adc
repnz
adc
and
pop
mov
pusha
sar
test
scas
cs
mov
lock
push
in
out
popf
push
dec
jbe
fistpl
mov
mov
jecxz
in
or
adcl
add
sbbl
les
es
cmc
sbbl
push
dec
lret
xor
nop
imul
xchg
dec
test
mov
fsubrs
lea
lret
mov
jg
fs
pop
cld
push
and
cli
add
call
inc
add
ret
ret
inc
fs
sarl
lock
cmpsb
xchg
outsb
das
and
enter
inc
aad
inc
xchg
das
push
jecxz
fstps
add
sbb
cmp
frndint
shrb
or
sub
push
push
cmpsl
aaa
out
and
pop
sub
pop
mov
clc
cs
xchg
pushf
int3
aam
jo
stc
xchg
mov
dec
cs
rorl
fsubrl
movsl
pusha
cltd
inc
adc
decb
pop
in
cmpsl
fwait
mov
inc
push
mov
add
call
push
out
sarl
mov
outsb
mov
jmp
mov
or
push
das
and
fwait
cltd
rcl
mov
jae
push
push
repz
mov
xor
inc
pop
jg
mov
jae
sbbl
dec
cmp
and
mov
inc
jmp
addl
stc
mov
and
dec
je
lcall
popf
imul
jb
mov
mov
pop
dec
xor
pop
popa
jmp
sub
outsl
adc
call
jecxz
js
repz
jle
pop
dec
lods
popf
pop
inc
gs
daa
mov
fwait
fs
and
and
roll
adc
daa
add
cs
scas
data16
add
push
fdivrs
aad
clc
orb
fnstenv
ret
mov
rcl
xchg
insb
mov
inc
pop
cmp
mov
lret
jno
mov
mov
rorl
out
test
out
or
xor
mov
and
and
out
xlat
sahf
mov
add
call
lahf
pop
xchg
mov
insb
cs
mov
or
lret
mov
gs
nop
pop
adc
sti
out
cmp
xchg
lds
in
insb
popa
repnz
arpl
test
scas
cwtl
das
or
mov
push
xor
dec
out
pop
jp
mov
je
dec
inc
out
mov
lea
mov
sub
out
xor
divl
mov
dec
hlt
push
cltd
jo
pop
sub
and
xchg
in
test
xor
dec
push
pop
call
arpl
imul
jg
test
add
call
ds
push
rorb
jmp
out
sub
out
add
fwait
aas
push
and
in
add
enter
insb
int3
add
push
sbb
pop
aad
cmp
aaa
nop
lea
xchg
iret
imul
or
mov
mov
adc
jnp
popf
ficomps
xchg
adc
andb
pop
push
dec
sbb
into
cmpsb
xchg
sbb
in
sub
sub
cli
outsb
push
push
mov
shll
call
sub
pop
or
cmp
lods
stos
xor
mov
sub
lea
loopne
sbb
jle
lods
sar
add
loope
addr16
add
sub
add
pushf
push
or
nop
adc
inc
add
in
mov
pop
aaa
push
inc
sbb
test
aad
lock
ja
jl
test
pop
adc
xchg
popf
mov
ljmp
jg
lds
pop
inc
aaa
jb
inc
rcrb
aam
sbbb
mov
rorl
add
call
cltd
push
xchg
std
in
sbb
mov
insl
and
stos
mov
jnp
in
push
rcll
stos
dec
ljmp
aam
loopne
popa
push
mov
jl
lcall
jo
sbb
sahf
mov
sbb
les
adc
and
pop
out
fdivl
add
div
xchg
pop
popa
test
rorl
pop
and
int
jmp
sbb
mov
arpl
stos
outsl
mov
inc
loopne
sbb
xchg
jo
jg
or
mov
nop
int
scas
add
call
dec
inc
imul
loope
jecxz
sbb
loop
mov
fwait
pushf
jbe
ss
xorb
mov
mov
adc
mov
lret
mov
pushf
lea
je
in
cmp
pop
cwtl
cmp
orb
cmp
mov
lret
xchg
out
mov
lret
sbb
pop
dec
imul
jg
mov
outsl
aam
loopne
cwtl
cli
in
int3
mov
mov
call
mov
andl
insl
sbb
popf
int3
repz
into
pop
jmp
push
pop
mov
sub
pushf
lds
and
and
lret
jg
or
lods
aaa
mov
add
pop
scas
int3
adc
push
ljmp
sahf
dec
mov
mov
pop
jne
add
mov
cmp
add
dec
ss
imul
push
stc
imul
adc
mov
repnz
jp
sbb
xchg
add
call
jp
movsb
push
mov
xlat
or
fsubrs
jp
int
mov
sbb
sbb
nop
icebp
xchg
jecxz
lods
stos
mov
les
ljmp
adc
lods
pop
mov
les
sbb
ds
loope
ds
xchg
cmp
insl
arpl
nop
pusha
fs
push
sbb
inc
stos
inc
mov
stc
ja
xor
mov
cmp
fistpll
sti
int
loop
sbb
test
lods
or
or
jecxz
pop
incl
mov
outsl
add
call
loope
ss
jecxz
inc
dec
and
and
or
andb
pusha
scas
in
xchg
fisubrl
jg
inc
shll
sbb
mov
xchg
adc
push
addl
shll
sub
adc
shrl
mov
dec
stc
mov
out
and
ja
fs
scas
sbb
incl
insb
xchg
push
and
xorl
shrb
lock
cmp
loop
insl
mov
movsb
jbe
scas
arpl
out
add
call
push
push
ficomps
pushf
and
cmp
je
test
xor
mov
pop
clc
out
adc
icebp
add
fsubrs
int
hlt
jmp
mov
rorb
mov
test
scas
sub
adc
xchg
xorb
test
mov
fidivrl
sub
addr16
xchg
sbb
rorl
xor
iret
iret
cmp
xchg
lea
lahf
es
cmp
cmpsl
push
iret
pusha
inc
das
fwait
lock
mov
test
pop
mov
in
xor
fistpl
add
call
shll
xchg
out
fildl
sbb
ja
pop
pop
mov
jecxz
insb
xor
add
pop
mov
fwait
sbbl
out
enter
out
sbb
sbbl
sarb
add
fsub
fistpll
jnp
mov
cmp
xchg
adc
jmp
and
loop
jne
sbb
mov
adc
out
std
aas
mov
andl
cmp
cmpsl
xchg
scas
jmp
cmpsb
pcmpgtd
rorb
lea
add
call
mov
aas
flds
xor
mul
repnz
mov
in
mov
jmp
add
cmpsb
out
jae
je
aad
inc
stc
xchg
out
and
xor
jge
mul
popf
push
clc
ja
movsl
and
jge
daa
pop
pop
out
data16
daa
lods
cld
loopne
aam
sbb
ljmp
adcb
dec
popf
xchg
cli
push
fcompl
jno
jne
pop
mov
loope
add
dec
inc
push
daa
aad
data16
into
xor
addr16
pusha
add
call
and
cli
aaa
lods
inc
loopne
mov
fisubrs
xchg
sbb
stos
cmp
out
xor
inc
andb
arpl
nop
lahf
fstpt
xor
xor
add
sti
out
js
add
test
lds
out
loope
sub
nop
mov
out
fisttpl
cwtl
dec
cmpl
xchg
adc
inc
jae
lea
lea
lds
sbb
adc
sub
std
sbb
push
dec
add
lods
bound
nop
xchg
sbb
add
call
iret
cmpsl
out
xorl
xor
cld
inc
sub
mov
jmp
xchg
mov
arpl
and
aad
stos
pop
aam
fwait
lds
stos
or
sbb
test
sub
xchg
call
sub
or
cmp
dec
xlat
fsubr
xor
ret
add
add
jge
jmp
jg
inc
xchg
rolb
cs
arpl
dec
mov
xorb
mov
stc
push
sub
jmp
cmp
mov
push
mov
add
call
sti
mov
jnp
pushf
mov
xor
mov
dec
aad
dec
xor
mov
iret
outsb
sub
rorb
jae
loope
sbb
sbb
dec
xor
jl
mov
adc
dec
or
lods
lods
sbb
adc
outsl
outsb
rclb
aaa
loop
mov
push
add
xchg
mov
loop
or
push
in
and
dec
inc
mov
int3
dec
orb
mov
xor
arpl
ret
sbb
adc
cmpsb
ret
call
add
dec
sub
mov
mov
jnp
sbb
test
mov
inc
jmp
dec
mov
sti
in
xor
popa
mov
test
mov
mov
outsb
jge
dec
repnz
test
xor
push
push
adcb
cmp
cltd
dec
adc
xor
sbb
xchg
add
bound
rorl
in
mov
fadds
mov
in
shr
ljmp
popa
mov
pop
fs
repnz
aad
pop
mov
aas
inc
popa
adc
call
mov
ret
pop
add
in
decl
sbb
sbb
ljmp
jo
and
mov
daa
and
addr16
bound
lret
inc
push
mov
dec
push
add
mov
insl
mov
pusha
xchg
dec
cli
outsb
cli
mov
in
in
mov
je
outsb
lods
adc
shrl
hlt
jge
jecxz
and
test
inc
sub
jecxz
adc
inc
mov
scas
inc
test
or
xorl
out
cwtl
mov
call
xchg
mov
imul
testb
bound
fstl
xchg
cmc
mov
mov
xchg
sub
xchg
sbb
or
idiv
sbb
jne
in
inc
dec
or
lock
pop
mov
sbb
sub
hlt
mov
ret
or
in
in
fbld
jmp
pop
arpl
cltd
and
aaa
in
test
dec
jle
mov
push
sub
push
pop
mov
adcl
movsb
sub
pop
fwait
add
call
push
push
shll
xchg
mov
ljmp
xchg
fadd
fcomps
sub
sub
jo
or
scas
sti
mov
jns
cli
jne
nop
xor
sub
pop
sar
clc
sub
stos
push
push
xchg
dec
ljmp
push
jp
xorb
das
inc
cmp
test
call
push
sbb
adc
rcrb
imul
mov
jp
mov
xor
add
call
jns
dec
mov
gs
sbb
adc
insb
pushf
or
dec
sub
add
dec
mov
pop
loop
in
adc
adc
mov
pop
xchg
sbb
dec
shll
call
jb
pop
xchg
inc
and
shlb
out
xor
sub
mov
lahf
xchg
addr16
pop
sarl
movsb
lods
push
push
insb
adc
pop
mov
dec
testl
mov
add
lea
and
lcall
call
sub
xor
and
and
arpl
xor
mov
push
push
test
mov
fstpl
pop
int3
add
add
repnz
sbb
clc
xchg
pop
mov
ss
cmp
in
cmp
inc
push
ret
mull
adc
and
hlt
sub
xor
outsb
pop
pusha
loope
ret
test
pop
leave
rcl
or
into
add
lahf
and
push
inc
insb
jle
sub
push
leave
xlat
add
call
int3
sbb
jae
push
std
rcl
loop
jne
sarl
push
jnp
cli
pop
push
loop
clc
cmpsb
les
test
sbbl
fs
cmpsl
popl
sti
neg
push
dec
and
jbe
mov
jmp
sarl
push
in
out
add
push
pop
fcom
addr16
cmp
ret
cmp
ficoml
pop
bound
cmc
push
xorl
push
movsl
sbb
jnp
ror
in
xchg
xchg
mov
cmp
fbld
out
add
call
push
mov
adc
sbb
cmp
popa
sbb
and
scas
jmp
mov
mov
leave
and
mov
faddl
imul
add
adc
insl
cmpsl
add
mov
xchg
mov
cmpsl
inc
adc
dec
and
sub
push
mov
jl
cs
rolb
out
sbb
loopne
jl
fsts
jg
call
inc
and
scas
push
push
add
call
dec
pop
xor
xor
sub
pop
mov
mov
icebp
dec
pop
mov
lahf
popf
call
icebp
jbe
mov
test
jp
adc
adc
into
sbb
es
xchg
adc
mov
mov
ss
xor
mov
inc
roll
or
mov
cmpb
push
sbb
xlat
cli
jl
pop
loope
push
sub
pop
push
es
push
pop
nop
push
aas
xor
ljmp
aad
inc
jae
test
mov
mov
add
call
sarl
sbb
push
dec
std
sub
mov
jmp
fiaddl
pop
stos
push
enter
pop
jno
sbbb
push
pop
mov
mov
add
rorl
xchg
sbb
sti
cmp
outsb
dec
adc
and
test
adc
sub
dec
rol
push
in
outsb
iret
cmpsb
or
std
inc
sbb
sahf
rcll
mov
test
addr16
sbb
stos
mov
addr16
cmpps
cwtl
test
adc
add
or
in
in
ret
mov
add
call
mov
adcb
ror
sub
add
push
out
jp
mov
jae
nop
iret
cmp
jns
ss
add
pop
loop
call
negb
out
cltd
ljmp
pop
in
add
loop
xor
insl
add
sub
add
xchg
sub
les
lock
adc
gs
jmp
imul
pop
lahf
sbb
xchg
fcomps
sub
mov
cs
mov
cmp
add
call
sbb
std
jge
and
cmp
daa
jl
aad
and
jno
jle
into
push
cmc
cs
xchg
sub
in
push
push
sub
shr
fadd
into
xchg
roll
inc
lock
ret
jp
lea
pop
dec
mov
mov
sub
pop
cld
adc
std
sub
nop
ret
mov
scas
les
imull
and
addr16
outsb
push
ja
lock
aaa
mov
cmpsb
dec
test
or
insl
push
dec
pop
add
call
push
ret
push
sub
loopne
aaa
inc
xorl
sub
ror
xlat
in
out
inc
aaa
push
fistps
sub
jae
into
jmp
cmp
mov
push
add
lret
fidivrs
negl
xor
mov
es
data16
add
and
jge
pop
ret
push
push
mov
fwait
lods
cli
aad
pop
cmp
fisttpl
pusha
mov
dec
inc
outsb
insb
xchg
rcl
fistps
push
xchg
ljmp
test
add
call
adc
xchg
jg
nop
ficomps
pop
cltd
das
outsb
pop
insl
shl
inc
jle
push
xchg
mov
sub
pop
stos
jl
push
lret
cli
xchg
jns
dec
jmp
mov
sahf
jl
sti
sbb
sub
in
xchg
adc
movsl
lret
sbb
js
mov
icebp
mov
fldcw
aam
mov
stc
push
ja
push
jbe
mov
cmp
xor
cli
pushf
insl
jbe
mov
shl
fistpl
sahf
mov
adc
mov
mov
lret
test
add
call
in
adc
xchg
xchg
test
ss
mov
stc
mov
mov
sbb
push
pop
pop
test
sub
xchg
test
sub
out
clc
lods
lods
pop
add
add
arpl
mov
fstpt
jl
mov
mov
imul
lods
mov
mov
cld
and
leave
scas
movsl
fisubrl
lock
mov
xchg
mov
xchg
mov
xchg
mov
mov
sbb
xor
lock
push
cltd
stos
adc
mov
add
call
test
shr
xchg
outsb
lock
inc
pop
in
dec
stos
stos
int
push
roll
or
int3
push
stc
int
mov
bound
mov
pop
jo
lods
inc
addb
fcomps
mov
imul
sub
xchg
pop
test
aaa
test
mov
xor
xor
jl
sub
je
aad
fimull
xchg
fistps
aaa
push
lret
arpl
pop
mov
sub
imul
inc
out
pop
cmp
ret
call
movb
in
jnp
mov
jne
fs
inc
cmpsl
fsubs
scas
mov
push
inc
pop
jge
lahf
pop
enter
and
adc
inc
roll
bound
gs
ret
in
or
pop
icebp
push
lock
ret
push
adc
sub
push
and
dec
sub
test
repz
xchg
jo
jnp
in
and
mov
cs
ds
fcmovnb
int3
xchg
cs
test
test
adc
movsb
daa
mov
test
add
call
push
cmp
add
xchg
lahf
pop
adc
and
add
clc
aaa
dec
out
aaa
xor
gs
mov
jb
and
lret
ror
and
movsb
push
decl
or
or
hlt
imul
pop
lahf
sub
push
sub
xor
subb
stos
andl
scas
rolb
pop
pop
out
aad
cmpsb
inc
dec
mov
jle
sub
js
popf
outsb
mov
inc
dec
or
xchg
loop
lods
test
lahf
test
in
add
call
and
cmp
lods
es
mov
mov
cltd
dec
or
pop
sbb
add
sbb
lea
int
sbb
imul
imul
ror
and
adc
cmovl
test
xor
hlt
pop
sbb
test
cmp
test
and
dec
push
inc
imul
rep
cmp
xchg
cltd
jmp
xchg
out
add
imul
xchg
xor
push
add
call
je
repz
ja
push
lret
int
aad
xor
or
sbb
mov
out
mov
shll
jo
movsb
mov
mov
pop
les
fists
dec
mov
sub
dec
mov
xchg
andl
jl
pop
imul
fcmovnbe
adc
xchg
or
mov
js
mov
stc
mov
mov
dec
inc
inc
cmp
mov
leave
pop
stos
leave
xchg
cmp
cmp
imul
call
or
andl
xor
push
jecxz
sbb
aam
pop
mov
leave
or
decb
or
rorb
test
push
jns
or
scas
sub
xor
daa
pushf
loopne
testl
outsb
mov
cmpsb
outsb
xchg
xor
rcll
fisubrs
add
mov
ret
cld
and
push
push
lods
xor
scas
add
int3
add
shr
add
call
js
cmp
pop
ror
stc
leave
and
outsl
mov
sbb
add
nop
dec
repnz
ja
dec
pop
fimull
add
notb
stos
xchg
sahf
xor
in
jmp
jecxz
test
gs
addl
xchg
jo
int3
int
imul
hlt
adc
inc
adc
push
dec
shll
jo
aam
xchg
mov
std
out
pop
xchg
xorb
arpl
or
sti
cmc
hlt
mov
cmp
push
test
or
call
call
lods
rcl
xlat
push
dec
das
jge
pop
mov
mov
outsb
sti
push
mov
jp
loopne
sbb
xor
adc
jnp
pop
adc
and
mov
sbb
mov
icebp
sbb
lret
xchg
xor
lds
xchg
call
fnclex
dec
sahf
push
mov
adc
and
repz
cs
out
lahf
rcl
test
inc
adc
xchg
pushf
rorb
lcall
into
jae
out
xchg
sub
mov
das
pop
imul
xchg
add
call
cmp
jmp
stos
sbb
ds
push
call
inc
sub
mov
ret
dec
adc
loop
sub
push
mov
pop
fisttpll
xorb
mov
in
and
leave
mov
or
scas
scas
sub
iret
and
cmpsl
inc
sbb
mov
shl
xchg
xchg
add
pop
aam
dec
jns
js
fisttps
mov
pop
sub
push
sti
cmp
sti
mov
repz
mov
fsubrl
push
ljmp
adc
add
call
mov
cmp
sbb
imul
cmpsb
out
mov
cs
jl
sub
repnz
xor
push
cmpsl
xor
std
frstor
push
add
xchg
sbb
ds
ficoms
jl
jg
ljmp
or
sbb
test
lods
vfnmsub132ps
add
jnp
sub
push
add
mov
or
push
std
repz
shll
or
inc
aad
fwait
sub
xchg
call
xlat
aam
xor
adc
cltd
cmovae
jge
sbb
popa
outsl
cmp
jmp
rorb
add
dec
rorl
stos
mov
in
cli
movsb
aam
lods
jns
mov
out
sbbb
ds
es
mov
adc
mov
mov
mov
stos
adc
sub
testb
mov
imul
fcoml
fdivl
mov
shll
and
ret
call
stc
adc
push
pop
sarb
and
cmp
pop
mov
sbb
pop
out
test
dec
adc
xchg
cmpb
sbb
or
clc
in
push
lret
aam
xor
addr16
cmp
xchg
pop
imul
mov
mov
mov
cmp
cld
dec
push
insl
jle
sbb
enter
add
mov
xchg
jnp
lret
aas
int3
jnp
mov
or
push
adc
xchg
aas
dec
or
call
cmp
push
push
lods
and
jnp
sahf
inc
jl
fbstp
sub
and
mov
push
xchg
add
jno
sbb
arpl
mov
sbb
xchg
lods
mov
sti
xchg
daa
cmp
dec
jl
sub
mov
stos
xchg
ljmp
push
add
mov
das
bound
das
mov
adcl
push
push
cld
push
push
loope
add
or
movsl
in
mov
mov
cmpb
call
adc
ja
dec
xchg
scas
ret
xchg
jae
cmpsb
arpl
fildl
icebp
pop
sti
jp
push
dec
dec
cmp
pop
fcmovbe
or
ret
and
jle
or
pop
test
push
push
adc
out
sub
push
popf
inc
dec
sahf
shl
test
sub
cmc
in
xorb
jg
mov
mov
dec
mov
imull
xor
push
loope
lock
xchg
mov
mov
shll
adc
repnz
cmp
dec
and
mov
mov
add
call
icebp
repz
mov
icebp
jp
xchg
pop
jg
cmpsl
and
negb
jmp
pop
sub
imul
or
jne
mov
cmpl
js
push
lock
test
dec
insb
repz
addl
fildl
xchg
jno
add
add
mov
lcall
sarb
inc
icebp
test
cmp
sahf
out
mov
fistpl
push
xor
fs
cmp
test
add
call
leave
sbbl
sahf
lods
in
sub
loope
adc
pushf
cmp
mov
sub
hlt
mov
mov
in
scas
sub
mov
dec
aad
leave
aaa
pop
stc
enter
fsubr
push
out
in
and
and
xchg
xor
fwait
push
je
insl
clc
cmp
je
dec
pop
fdivs
mov
or
imul
sbb
arpl
xchg
ds
shrb
push
clc
add
call
ret
sbb
xchg
mov
ljmp
xor
in
scas
movsl
repz
sub
lahf
sbb
sarl
add
or
inc
inc
inc
icebp
test
fsts
lea
fidivrs
mov
xchg
mov
mov
mov
push
or
jle
or
outsl
stos
and
xorb
cmpsl
sub
dec
cmpb
dec
lods
int
repz
jl
mov
in
xchg
jno
jp
je
lock
dec
rclb
fs
add
call
inc
jb
xor
sub
stc
loopne
jle
pop
pop
out
repz
insl
sbb
cmp
cmc
inc
push
stos
cmc
jp
loop
rorb
xchg
sti
push
out
cmpsl
outsl
jnp
or
mov
mov
or
imul
dec
xor
adc
sbb
pop
and
push
jmp
mov
xor
xchg
hlt
mov
xchg
cltd
cs
mov
dec
je
adc
imul
mov
rcll
test
stos
aam
test
in
jle
add
call
loope
jns
inc
hlt
dec
xchg
movsb
push
lods
out
and
out
andb
lods
xor
xchg
xor
insb
cwtl
cmp
fcmovne
xlat
test
xchg
test
push
push
mov
xchg
push
and
xor
popa
ss
pop
sbb
jb
dec
fbld
aam
pop
mov
jno
pop
lods
addr16
and
dec
mov
xor
add
jmp
pop
and
xlat
aaa
mov
dec
dec
aam
insl
sub
and
pushf
sub
std
adc
or
addb
insb
into
mov
test
lcall
call
xlat
mov
inc
cmpsl
mov
mov
mov
pusha
push
cmp
arpl
add
clc
mov
cwtl
push
pop
insb
std
enter
ficompl
pop
into
dec
push
aad
mov
xchg
cmp
xor
hlt
jg
iret
push
adc
xchg
fndisi(8087
arpl
add
aam
dec
pushf
inc
mov
pop
and
xchg
add
stos
cmpsl
test
cmp
pop
rcll
in
jno
jge
sbb
loop
les
sub
call
out
add
inc
out
test
mov
cmc
mov
jnp
in
ficomps
cmp
xchg
mov
sbb
sub
xor
mov
es
cs
jle
dec
cmpsl
in
fiaddl
mov
adc
inc
je
jno
orl
out
jne
adc
sbb
div
xorl
bound
clc
push
pop
jb
out
add
test
pop
inc
jno
push
test
addl
out
xchg
aaa
xor
add
call
jp
jo
fldl
push
decb
dec
ret
mov
push
mov
popa
test
mov
jne
xchg
test
pusha
loop
inc
push
sub
cwtl
mov
popf
orps
call
lcall
sub
adc
repnz
dec
test
fiadds
pop
mov
ljmp
test
fwait
int
and
push
clc
push
fwait
and
inc
jns
lret
iret
jae
jge
pop
adc
xchg
jne
mov
add
leave
iret
jge
arpl
push
add
call
enter
mov
xchg
mov
movsb
xchg
rorb
test
push
push
pop
lret
loop
jbe
add
pop
out
mov
cmp
cmp
mov
insb
adc
dec
and
ds
pop
jp
sub
cltd
loop
dec
fcoml
mov
mov
adc
adc
mov
imul
lret
jmp
mov
xchg
iret
dec
xor
scas
sub
aas
jecxz
xlat
xor
mov
cmpsb
xor
xchg
add
call
cwtl
es
xchg
xchg
pop
loopne
ja
pusha
or
int
mov
fidivrl
stos
pop
mov
xor
jle
or
cmp
push
sbb
icebp
sti
cmpl
fnsave
pop
lret
dec
shrl
inc
xchg
mov
add
jmp
clc
hlt
lahf
sub
and
rorb
test
push
cli
sbb
lret
iret
push
incl
loope
or
xor
xchg
xchg
popf
rcl
fildll
shrl
call
mov
adc
xchg
daa
sub
adc
mov
mov
cwtl
sbb
pop
sbb
sbb
mov
popf
fidivrl
sti
xor
bnd
mov
and
sub
jge
movsb
getsec
dec
fwait
or
arpl
adc
addr16
xor
dec
repz
cmpl
mov
pop
push
jle
lret
sbb
and
mov
jg
mov
mov
mov
ret
arpl
out
enter
mov
inc
icebp
sub
xor
add
call
push
push
push
js
sahf
in
push
lret
cmp
mov
mov
jle
cmp
std
dec
add
enter
ficoml
aas
clc
xchg
xor
xchg
loope
repnz
mov
xchg
test
push
xchg
nop
sbb
test
xchg
pop
xlat
adc
inc
push
cmp
or
ret
cmc
lret
mov
lret
xor
rcrb
lret
sbb
fmuls
imul
push
divl
mov
mov
insl
add
call
shrl
sbb
dec
sub
mov
in
mov
ss
sbb
pop
aas
lods
pop
mov
mov
stos
nop
test
cmp
test
adc
pop
scas
sub
lock
aam
pop
dec
dec
ja
divb
aam
stc
cmpsb
and
movsb
mov
insl
push
lcall
adc
test
push
lcall
sbb
mov
lock
divl
mov
and
sbbb
dec
lds
xchg
mov
add
call
xchg
fiadds
dec
push
xchg
inc
and
dec
jae
mov
add
test
mov
lea
inc
push
or
filds
mov
scas
mov
dec
mov
ret
add
addr16
ljmp
mov
pop
aas
in
sub
sahf
inc
adc
mov
inc
push
cli
in
adc
inc
ret
and
pop
nop
adc
pusha
inc
repz
js
cmp
mov
add
call
jne
fsubs
push
xor
aaa
pop
ret
mov
cmp
inc
cmp
mov
and
shrl
ja
push
mov
jge
xorl
or
and
shl
out
push
cmpsl
sub
and
sub
cltd
das
cmc
into
sbb
push
cs
movsl
fwait
inc
pop
dec
shl
mov
mov
fldt
xor
cmp
cmp
push
lahf
mov
sub
pop
cmp
inc
pop
ss
insb
mov
xchg
xchg
rcll
mulb
imul
call
pushf
xor
cmpsl
outsb
inc
inc
fsub
mov
faddl
mov
fstl
push
push
and
inc
fidivl
orl
push
jnp
aas
stc
dec
sub
xchg
xlat
inc
and
mov
bound
jb
sbb
scas
std
jb
push
pop
rcrb
jns
or
xlat
mov
add
sti
dec
fcomi
insl
cmpsb
sub
mov
or
out
fistpll
test
jmp
mov
adc
call
push
pop
add
jmp
adc
dec
scas
jge
das
cwtl
inc
icebp
sbb
mov
fisubl
dec
xchg
loop
or
movb
jecxz
pminub
scas
mov
mov
xor
insl
lods
mov
in
arpl
jge
fimuls
test
pop
loop
or
inc
pop
mov
cmp
aam
ret
orb
loopne
jbe
xor
inc
jecxz
sub
cmp
jg
imul
push
bound
insl
stos
xor
cmp
pusha
add
call
mov
adc
xor
xor
dec
imul
out
mov
faddl
jno
xor
out
fists
es
sub
popa
xchg
loope
jp
ljmp
pop
nop
inc
and
sub
rolb
leave
xchg
inc
mov
mov
xor
mov
aam
dec
jg
cmp
dec
out
ljmp
add
stos
inc
mov
and
push
notl
or
push
pushf
xor
and
add
call
and
mov
ja
or
push
push
jecxz
mov
out
jnp
push
fdivrl
lea
push
jecxz
cmpsb
jg
aad
adc
subb
mov
cltd
mov
hlt
out
insl
and
jbe
xor
enter
roll
ud1
mov
adc
mov
inc
pusha
repz
arpl
pop
mov
cmp
add
or
pop
and
cmp
push
sub
je
or
cmp
jne
add
call
nop
pop
movsb
xor
daa
xchg
sub
leave
pushf
gs
dec
xor
lret
jbe
pop
cmp
or
in
pusha
in
mov
imul
repz
fildl
dec
out
cli
add
inc
sbb
push
push
out
sub
adc
dec
mov
repnz
shl
adc
cli
outsb
fcomps
arpl
rclb
sub
pop
loope
inc
aad
or
jecxz
std
sbb
push
into
hlt
cmc
pop
add
add
call
or
hlt
addb
mov
push
push
add
test
jl
loope
pushf
sahf
mov
lds
inc
jg
push
xlat
sbb
data16
sub
iret
xchg
stos
ljmp
popa
pop
cli
push
xchg
push
fistpl
xchg
mov
push
or
adc
or
and
sub
mov
in
js
and
test
jbe
mov
hlt
xor
test
cmp
jmp
push
inc
jge
mov
repnz
and
add
call
cmpsl
enter
mov
cmp
loopne
in
xchg
sbb
fs
lods
inc
pop
lock
mov
mov
mov
mov
inc
jmp
aas
js
out
mov
out
mov
dec
cmpsl
xchg
insb
fistl
dec
cmp
dec
out
push
xchg
sub
jmp
dec
inc
cld
popa
pop
xlat
xchg
mov
mov
adc
int3
push
cwtl
xor
imul
xchg
cli
in
aas
test
shll
add
call
pusha
lret
outsb
xchg
jno
test
mov
mov
in
adc
and
mov
lods
inc
mov
sbb
push
cmc
lock
jl
insl
mov
rol
mov
xchg
into
adc
roll
dec
fstpl
leave
fbld
nop
lea
gs
dec
xchg
ror
push
rcr
ret
xchg
hlt
fcomps
iret
rorl
int3
idivb
insl
orb
addl
nop
lcall
sub
mov
dec
inc
movsb
insb
bound
call
fistpll
jae
aam
adc
loope
std
ficompl
inc
arpl
mov
or
pop
aaa
and
adc
fs
xchg
xchg
rcrb
js
jno
pop
imul
mov
xchg
jg
jge
lods
mov
movsb
xor
jmp
sub
pop
mov
push
inc
jne
push
xor
jbe
fisubrl
push
adc
push
push
lahf
dec
sbb
pop
dec
xchg
out
jo
arpl
lods
and
fadds
jno
adc
call
loop
fld
pop
and
or
cmpl
cmc
outsb
and
xchg
or
cmpsl
scas
rcrl
xchg
scas
int3
enter
rorl
xchg
sbbl
jne
xchg
sbb
mov
mov
sub
lret
fisubl
daa
xor
cmp
xor
or
rcrb
sbb
sbb
mov
push
mov
mov
and
jne
lods
addr16
add
call
inc
sbb
or
xchg
in
and
sahf
sbb
dec
mov
addr16
or
pop
pop
mov
push
xchg
inc
pop
inc
cmpsb
sbb
out
popa
mov
or
or
sahf
xor
sub
sub
xchg
fnsave
mov
loope
call
pop
movsb
fsts
mov
andb
and
pop
mov
cld
inc
popf
adc
cs
xor
stos
push
es
jo
jbe
jle
subl
ret
add
call
ret
mov
mov
nop
ds
je
es
ja
stos
popf
push
arpl
jo
dec
xor
js
jne
pop
lods
push
cmp
sahf
jecxz
iret
into
cmp
fisttpl
and
rclb
xchg
out
push
push
sbb
data16
or
inc
add
push
pop
mov
mov
dec
cmp
fists
fidivrl
popf
inc
jo
and
out
pushf
inc
lock
cmpsb
incb
mulb
jmp
in
add
call
jmp
aaa
push
scas
or
mov
sub
and
sub
in
insb
stos
int
stos
sbb
shl
inc
pop
sub
sbb
mov
fwait
out
xchg
inc
push
push
inc
mov
fisubl
sub
rclb
dec
pop
cmp
test
fdivrl
mov
iret
pop
mov
cmpsl
subl
orl
mov
gs
scas
push
and
nop
sub
xlat
mov
loope
call
xor
inc
pop
mov
ja
subl
add
call
lods
pop
inc
adcl
push
loopne
jg
lods
jmp
xchg
xor
mov
pop
jnp
xor
sti
cwtl
push
movsb
push
std
mov
push
mov
pushf
cmp
cltd
movsl
inc
loop
movsl
xchg
mov
pop
das
int3
cli
jbe
pop
xor
call
leave
jns
inc
lods
int3
out
cli
cmp
pop
xchg
mov
push
addr16
adc
adc
insl
push
jae
sub
insb
mov
dec
popf
lea
add
scas
jb
ss
dec
aad
cmp
cmp
call
mov
call
and
js
scas
stc
adc
cmpsb
push
cmp
xor
fs
shl
mov
push
jmp
cmpsb
dec
sub
scas
or
inc
cli
push
aad
ss
arpl
mov
imul
xor
daa
in
inc
lahf
jnp
ret
sarl
stos
dec
mov
les
scas
in
add
dec
and
je
shlb
xlat
mov
inc
call
setno
or
add
push
sbb
cmp
loopne
mov
add
call
mov
mov
pop
int3
pop
mov
data16
mov
xchg
ret
aad
pop
or
adc
pop
icebp
pop
push
insb
and
mov
mov
mov
xchg
pshufw
test
into
pop
mov
and
xchg
xchg
xchg
xor
jb
add
std
lahf
loop
cmp
ja
xor
mov
jo
sub
push
idiv
js
inc
mov
cltd
orl
outsl
insb
xor
cmp
add
call
es
shrb
call
sub
add
cmp
jp
or
xchg
test
inc
push
xor
scas
mov
aad
and
push
popa
stos
lea
mov
xchg
sahf
pop
sti
ljmp
mov
in
push
lea
pop
push
inc
movsl
call
ficoms
sbb
jle
loope
fidivs
xor
cld
sbb
pop
push
stc
bound
scas
stos
shld
jmp
ret
nop
jae
lret
fisttpll
aas
jnp
or
add
call
je
mov
in
push
hlt
call
push
shlb
jle
inc
or
push
nop
jnp
add
push
sbb
cld
inc
jb
cli
aas
fdivrs
dec
mov
xor
mov
data16
in
mov
imull
mov
lods
cmc
pushf
das
aas
mov
mov
in
popa
mov
sbb
push
iret
or
cmc
add
jne
push
loope
mov
jae
dec
std
loope
push
imul
lods
add
call
in
xlat
es
ss
cli
sub
push
loop
lods
es
xchg
stc
jo
dec
push
cmp
sti
mov
and
or
adc
fld
int3
lods
adc
or
jmp
fnstcw
scas
mov
jg
cmc
pop
pop
lock
mov
mov
mov
sub
es
inc
popa
negb
and
xor
xor
bound
mov
xchg
mov
pop
or
imul
or
adc
push
add
call
mov
decl
out
shll
or
push
mov
lods
push
data16
ds
addr16
loopne
pushf
lahf
std
xchg
dec
jb
mov
inc
ficomps
push
into
ss
cwtl
out
nop
push
outsb
imul
ss
push
loopne
adc
dec
xchg
aad
mov
add
pop
mov
stos
lea
popa
mov
pop
popf
fsubp
inc
sbb
or
push
inc
mov
sahf
popf
imul
mov
adc
flds
mov
lds
add
call
rcrl
pop
fnstenv
pop
jae
imul
inc
repnz
push
std
lods
inc
add
nop
sub
adc
lock
inc
vcmpunord_sss
cs
bound
nop
xlat
xlat
imul
bound
and
mov
fstpt
fisubl
loop
mov
lcall
in
das
push
inc
es
repnz
je
cwtl
pop
ja
inc
push
mov
mov
stc
push
bswap
repnz
sub
dec
push
push
lods
addr16
ljmp
mov
test
add
call
rolb
into
clc
jle
pop
cmp
mov
add
cs
sub
mov
xor
mov
xchg
inc
or
jl
dec
popf
mulb
mov
mov
movsb
mov
lea
loopne
mov
aad
lahf
sbb
push
xchg
xchg
loope
dec
lahf
nop
lock
cwtl
sub
fdivrl
sub
pop
push
cmp
add
imul
inc
lret
and
push
std
or
jmp
movsb
in
and
cmp
add
add
call
das
pushf
and
rcll
and
test
cli
shlb
add
jl
mov
fisubs
cmp
mov
andb
push
xchg
out
add
incl
inc
pop
insb
test
pop
test
fisttpl
sbb
lock
stc
into
aas
adc
and
das
ja
inc
ljmp
push
data16
in
push
add
cmp
fs
xchg
jns
jo
clc
call
lods
mov
stc
les
scas
dec
mull
test
adc
popa
cmp
call
jns
stos
add
aaa
pop
data16
pop
push
imul
inc
bound
shrl
insl
xchg
push
div
and
addb
es
pop
sbb
xor
push
mov
ja
jns
pop
sub
push
xor
cld
mov
cmp
lock
imul
adc
sti
adc
dec
iret
mov
test
pop
mov
lahf
add
jmp
push
mov
movsb
stc
pop
popa
stos
loopne
test
aas
int3
mov
or
mov
mov
cmp
stc
fidivl
jns
add
call
loopne
jns
add
jns
xchg
insb
xor
or
das
mov
xchg
ret
cmpsl
popf
push
aam
jb
test
lock
mov
sbb
sub
and
rcrl
cmc
mov
dec
sub
inc
xchg
fstpt
cltd
and
and
outsl
mov
jns
lea
imul
imul
mov
push
cmpsb
dec
adc
fstpt
or
dec
call
fucomi
mov
pop
dec
push
cmp
call
inc
sbb
test
outsl
or
sub
pop
jge
cmp
mov
cmc
fcoml
mov
data16
jmp
mov
movsb
mov
insb
pop
jb
lock
mov
gs
sub
aam
dec
lahf
sub
fs
lret
lret
dec
mov
sub
push
mov
lea
inc
shll
test
cmp
stc
and
in
add
ljmp
mov
leave
mov
or
jne
adc
add
call
sbb
insl
enter
adc
fldt
push
sbb
mov
xor
test
xor
hlt
cmpl
lret
imul
cmp
push
push
push
xor
scas
pop
inc
mov
jns
or
jb
aad
fcmove
in
rorl
ret
fwait
mov
in
iret
mov
pop
ja
xor
mov
inc
adc
push
jne
push
repnz
sub
arpl
lods
and
mov
dec
xlat
lahf
int3
mov
div
shll
inc
push
or
aaa
lods
lds
add
call
adc
loopne
push
pop
jbe
in
or
aas
inc
cs
outsl
fst
mov
mov
add
insb
hlt
or
in
stc
out
roll
sub
aaa
jae
inc
jns
cmpsl
push
rcll
sub
sbb
xchg
clc
mov
rcr
aam
mov
push
or
sub
pop
ds
and
call
sarb
mov
ds
jecxz
dec
aaa
dec
aaa
pop
and
fstpl
stos
pop
sti
xor
sbb
ljmp
add
call
das
les
sbbl
push
jbe
sahf
mov
int
sbb
fwait
aad
lret
orb
mov
testl
fcmovnbe
outsl
sub
imul
pushf
jl
inc
sbb
push
xchg
popa
cli
ljmp
xor
sbb
cwtl
xchg
shr
xchg
xlat
mov
iret
or
sub
jo
xchg
push
inc
nop
jmp
push
cmp
cmp
pop
das
mov
call
arpl
or
add
hlt
jl
xchg
sub
jae
push
mov
cmp
sbb
pop
push
stos
xchg
insb
cmp
imul
addl
js
mov
xchg
fsubs
add
in
fs
out
ss
xor
in
mov
jb
leave
add
pushf
xchg
xor
shrl
in
arpl
aam
pop
pop
loop
add
in
mov
stos
dec
rcl
xor
loop
push
les
xor
jp
add
call
notl
into
and
mov
loope
and
fstpl
and
sbb
lcall
aad
iret
and
mov
rcrb
ljmp
push
sbb
bound
push
push
popa
outsl
jno
scas
ss
in
leave
pop
sbbb
std
rclb
mov
shrl
shll
cli
out
push
lret
xchg
negb
cs
dec
sahf
mov
int3
in
mov
ss
jne
shll
lods
fldlg2
sti
push
pop
and
pushf
shrb
pop
mov
add
call
inc
jne
push
jecxz
lret
xchg
mov
xchg
leave
mov
sub
dec
mov
loope
enter
das
mov
cmpsl
daa
fs
aam
inc
add
pop
cli
sub
into
or
loop
cwtl
jecxz
js
mov
int
std
add
cmp
lods
adc
imul
outsl
mov
inc
popa
sbb
in
ret
push
adc
add
inc
sbb
mov
mov
call
jecxz
adc
orb
lret
and
insl
push
out
mov
call
pop
adc
mov
clc
sbb
xchg
or
push
mov
cmp
pop
test
add
inc
sbb
dec
shrl
mov
or
mov
les
xor
mov
adc
sub
add
rcr
cmp
jl
pop
pop
inc
jmp
dec
adc
push
pop
ljmp
clc
or
rorl
xchg
mov
push
pop
pop
mov
cmp
mov
add
cmp
ret
sub
add
add
call
sysenter
out
lock
fcmovnb
mov
out
push
inc
sub
mov
push
rcl
je
add
and
imul
mov
mov
dec
das
adc
ja
loope
or
push
outsb
ret
sbb
add
add
in
sbb
mov
rcr
and
inc
scas
call
mov
mov
mov
fcomps
popa
out
insb
push
xchg
xor
fwait
xlat
push
mov
push
add
sub
add
call
sti
push
pushf
aam
adc
mov
inc
adc
cmp
sbb
fldenv
aas
sarb
xchg
sub
sub
xor
cmp
je
test
mov
pop
enter
push
lds
ds
outsl
push
dec
jb
xchg
clc
jbe
cmp
jae
jp
pop
repz
cwtl
push
sbb
and
mov
xor
xor
cwtl
out
push
jmp
adc
addl
ret
mull
dec
fcompl
das
or
mov
jecxz
jb
iret
push
mov
sbb
jl
pop
push
add
call
and
clc
es
cli
sbb
in
xchg
jecxz
add
mov
pop
push
cmc
sbb
fdivrl
mov
negl
mov
pop
and
ret
xchg
push
and
mov
in
out
pop
popa
cmc
ret
sbb
fwait
add
dec
or
mov
jmp
fstpl
or
unpckhps
into
xchg
sub
lods
and
lds
mov
dec
cmp
fbstp
cmp
aas
test
and
fsubl
aaa
push
lcall
pop
jge
mov
fistl
fistpll
add
call
inc
sub
pop
leave
or
stc
sub
pop
pushf
fisttpl
xor
jecxz
ljmp
cwtl
inc
arpl
inc
lds
and
and
xchg
jnp
jns
jmp
ja
ss
xchg
jecxz
or
jb
push
insb
xor
xchg
inc
adc
push
inc
xor
jae
jmp
jecxz
jmp
inc
jbe
and
in
jne
aad
xchg
jp
pop
jo
out
sub
add
or
out
in
xor
in
pop
loopne,pt
rolb
add
call
sub
xchg
cld
push
lret
mov
mov
mov
shlb
in
ret
cmpsb
clc
mov
xchg
pop
xor
js
sbb
mov
decb
adc
test
outsl
adc
push
xor
sti
lcall
jae
push
mov
jecxz
icebp
jmp
ret
push
out
pop
inc
mov
mov
mov
ljmp
insl
dec
call
shrl
lods
sub
or
idiv
xchg
add
call
cmp
pop
stos
add
add
repnz
xor
cmp
jp
cld
movsb
fimull
mov
daa
aaa
les
cli
jl
mov
unpckhps
cmpl
loopne
es
mov
mov
adc
pop
mov
cmp
pop
jns
test
repz
stos
sub
jecxz
lret
mov
testl
xchg
xor
mov
nop
xor
lock
pop
add
addr16
pop
add
call
ds
add
jmp
jno
loope
out
push
scas
out
adc
cld
lret
imul
dec
fsts
adc
sbb
pop
or
pusha
mov
add
pop
xchg
and
out
insl
push
inc
mov
fbstp
mov
cmp
adc
mov
sarb
pop
outsl
fnstcw
mov
push
outsb
jns
or
inc
cmpl
xor
fwait
push
or
rcr
bound
rolb
mov
add
call
fs
or
std
inc
push
add
imul
and
repz
push
insl
subb
lea
das
sbb
testl
lcall
add
xor
push
xor
jns
jg
fnsave
insl
mov
xchg
push
mov
adc
mov
jecxz
push
cmpsb
sub
shrb
cwtl
mov
nop
les
mov
pushf
andl
orb
iret
adc
in
xchg
dec
pop
ljmp
add
call
sbb
and
ret
and
out
adc
pop
pop
cwtl
mov
sbb
pop
cmp
jl
ss
shrl
lahf
mov
and
pop
xchg
pushf
mov
addb
rorb
fldcw
push
sti
adc
xchg
imul
mov
pop
jbe
shlb
xor
arpl
cmp
das
hlt
repnz
adc
mov
inc
push
faddl
xlat
mov
xor
mov
add
xchg
mov
sarl
call
xchg
xchg
mov
and
cmp
push
test
mov
fldl2t
mov
pop
jbe
mov
loope
lock
movsl
sub
scas
insl
fdivrs
adc
add
scas
add
xchg
sbbl
into
xchg
mov
mov
shr
and
jle
fdivl
std
cld
sbb
icebp
sar
mov
sbb
dec
je
test
das
js
pop
xchg
inc
loopne
in
sbbb
add
call
mov
sbb
sub
cld
adc
das
aad
sti
out
pop
adcl
jl
push
sbb
mov
repnz
je
mov
adc
xlat
repz
fldl
dec
mov
inc
pop
add
cmp
inc
pop
aas
adc
insl
outsl
and
adc
sub
mov
cmp
push
sbb
push
sbb
cmc
inc
sbb
sub
int
or
ret
mov
cmp
or
aaa
imul
mov
inc
add
call
gs
push
cmp
mov
sub
sub
test
sti
push
xchg
data16
mov
test
lret
movsl
repnz
xlat
aad
lock
lcall
lea
lods
xor
into
dec
push
pop
out
ds
aaa
or
fcoms
out
and
cli
dec
mov
int
or
xchg
aam
div
xchg
inc
in
mov
aas
mov
popf
loop
cmp
dec
and
andb
out
and
add
call
mov
aam
jge
inc
in
xchg
mov
test
pop
loop
pop
pop
add
lret
jo
cmp
in
jno
sub
cmp
add
mov
sbbl
int3
sbb
shll
jno
bound
add
cmc
mov
mov
lods
imul
jge
jecxz
mov
cltd
mov
xor
push
sbb
sub
dec
mov
cmp
mov
jno
mov
mov
xchg
ja
mov
divb
call
push
mov
add
xor
adc
in
mov
cmpsb
push
pop
push
push
mov
cmc
pop
xchg
fincstp
inc
sbb
jae
push
mov
pop
push
jb,pt
jnp
std
pop
adc
cmp
sub
and
lret
adc
stc
mov
pop
and
push
push
frstor
cltd
arpl
xchg
sub
in
pop
lea
fnstcw
test
lods
cmpsl
sti
lock
jecxz
js
pop
rclb
test
xchg
jne
and
daa
dec
and
pushf
add
mov
add
call
nop
decl
sub
rolb
pop
aas
push
and
sbb
mov
fs
xchg
mov
bound
sbb
mov
mov
mov
push
mov
dec
movsl
sub
pop
xor
cwtl
mov
shlb
inc
dec
jb
sbb
add
enter
ljmp
sbb
icebp
in
js
mov
rcrl
bound
clc
jb
jecxz
xlat
test
mov
add
sbb
adc
add
call
sub
gs
inc
push
and
in
mov
repz
xchg
xchg
out
jecxz
cs
in
popf
push
fstps
sub
sbb
je
adc
sub
pop
jmp
jne
push
sarl
test
in
pop
daa
xchg
lea
fdivrs
aad
fwait
pop
dec
adc
arpl
dec
push
sbb
mov
test
in
dec
fstl
sub
add
jbe
jle
jo
leave
test
test
call
jmp
xchg
rcrl
inc
mov
rclb
stos
jnp
cmpb
sbb
add
out
fists
push
clc
leave
and
jno
in
sbb
fistl
imul
outsb
xlat
fsincos
inc
mov
mov
adc
int
call
outsl
mov
xor
sbb
out
pop
fstps
sub
add
adc
or
imul
jmp
outsl
add
neg
ret
andb
jne
xchg
add
call
mov
sub
aaa
fildl
cli
and
aad
mov
stos
iret
push
sbb
icebp
movsl
arpl
add
xchg
sbb
lret
add
add
and
and
mov
xchg
jb
cli
and
and
xor
ret
movsb
ja
pop
or
sub
fwait
lea
movsb
mov
jmp
jno
sub
or
mov
stos
lahf
sub
xlat
pop
nop
adc
dec
or
call
aam
inc
jno
sub
test
js
jecxz
push
mov
cmp
int
inc
test
aad
xor
push
jp
addb
addl
lock
sbb
xor
cmp
lret
mov
xor
mov
inc
cmp
or
bnd
bound
push
xchg
jmp
mov
pop
lcall
divb
cmp
dec
sub
ljmp
test
nop
ret
int3
push
xor
add
call
dec
mov
add
sbb
pop
ret
mov
dec
dec
int
jo
ret
xor
inc
sbb
inc
mov
stos
adc
outsl
jbe
jns
mov
imul
jb
shrb
jns
cld
add
adc
outsb
in
mov
mov
arpl
cmp
mov
pushf
les
sbb
sub
nop
add
push
cmpsl
ror
sbb
call
fildll
lods
xchg
xchg
scas
sbb
sbb
sub
xchg
xor
add
call
pop
das
or
add
outsb
mov
fidivl
cmp
push
dec
mov
mov
sbb
xchg
in
pop
mov
sub
or
scas
std
test
out
int3
push
mov
cmp
mov
inc
pop
std
bndldx
adc
mov
push
sbb
cmp
and
pop
enter
mov
repnz
jns
imul
imul
es
lea
loope
mov
or
xchg
rcrl
dec
das
add
call
je
adc
daa
in
adc
add
ret
or
push
pop
dec
leavew
dec
mov
gs
repnz
ds
cmp
mov
xor
movsl
stc
gs
sbb
aad
pop
and
cmpsb
push
and
push
add
ret
or
ret
loope
fs
scas
mulb
loop
fwait
outsb
das
aam
out
imulb
orb
xchg
insb
cmp
mov
in
add
pusha
mov
pop
das
sub
movsb
test
outsl
stos
in
add
call
mov
sub
daa
lds
data16
adc
push
jmp
jmp
in
mov
mov
mov
xchg
adc
cmp
lret
cs
je
enter
ds
scas
xor
xor
icebp
dec
movsl
mov
outsb
mov
cmp
xchg
arpl
nop
mov
sbb
mov
pop
xchg
jno
sub
dec
mov
bound
cmp
or
mov
out
push
popa
adc
outsl
pop
sti
add
call
push
loop
push
pop
push
push
sbb
mov
pop
xchg
mov
stc
dec
dec
lock
test
xchg
xchg
rorb
inc
jl
cmp
sub
in
ret
lahf
in
ss
push
mov
into
mov
sbb
jo
aam
or
cwtl
sub
mov
inc
mov
enter
imul
adc
test
mov
or
dec
insl
sbb
xchg
mov
testl
enter
clc
push
xchg
int
dec
or
add
call
or
sub
jne
pop
mov
pop
out
roll
cmp
lods
xchg
pusha
nop
aas
cmp
jo
mov
shlb
aad
sbb
or
sbb
fsts
inc
lds
dec
inc
xchg
mov
ljmp
xor
cltd
aas
inc
lahf
test
pusha
call
js
push
dec
or
clc
sub
shrl
pop
mov
pop
sub
test
xchg
push
inc
and
outsl
fdiv
and
pop
roll
add
call
push
in
dec
sti
mov
mov
pop
push
mov
in
mov
or
out
inc
adc
aam
lcall
nop
test
pop
sbb
sbb
inc
add
push
dec
mov
or
out
jns
inc
jbe
into
and
aaa
xor
cmp
and
sbb
cli
int3
sti
jl
dec
pop
jmp
push
xor
xchg
call
sbb
test
sti
mov
inc
sub
lcall
xchg
cld
cmp
call
sbb
or
rorb
mov
adc
pop
movsb
mov
inc
inc
test
scas
xchg
lret
mov
mov
fstpt
mov
bound
dec
testb
xchg
inc
icebp
mov
lods
jmp
sub
cmc
add
popf
imul
push
stc
lock
adc
pop
cmp
bnd
jae
mov
nop
and
call
lods
dec
push
xchg
push
and
and
in
pop
jno
mov
dec
adc
out
pop
ss
dec
and
add
call
or
loop
cmc
dec
sbbb
gs
cmpsb
shll
xlat
repz
out
je
pop
enter
lods
pop
jl
adc
and
loop
out
mov
jecxz
scas
inc
cmp
mov
pop
mov
les
in
sti
jnp,pn
mov
and
sbb
sti
mov
cs
jnp
push
gs
filds
jecxz
mov
or
cli
add
pop
repz
jmp
int
dec
push
or
icebp
cmp
test
add
add
call
mov
cmpsb
into
mov
lds
inc
inc
inc
dec
out
repnz
stc
in
leave
shll
mov
xor
outsb
ljmp
xor
addl
sub
cwtl
popa
cmpsb
insb
addr16
in
test
xchg
sarl
or
frstor
inc
xchg
jnp
lsl
mov
cs
xchg
adc
pop
adc
sbb
mov
shll
std
add
dec
stos
xchg
gs
call
insb
adc
jne
gs
add
call
aad
and
push
cltd
add
pop
mov
insb
pop
mov
jbe
push
jecxz
jb
out
jbe
mov
mov
lds
test
push
jp
sbb
mov
lock
je
jle
mov
or
frstor
jl
mov
sbb
std
xor
faddl
adc
vmwrite
add
xchg
jecxz
and
push
lds
pusha
movsb
and
push
aad
rclb
pop
rclb
loop
add
call
inc
mov
imulb
inc
push
mov
mov
vmovmskpd
xchg
inc
adc
mov
test
xor
jae
pop
test
mov
iret
lcall
mov
rorl
call
sub
cmp
lods
lds
mov
aaa
ret
into
cld
mov
xlat
xchg
jge
idiv
ljmp
aas
fisttpll
sub
test
jp
fwait
push
stc
roll
loope
xchg
or
cmp
add
call
xor
mov
bound
pop
jp
out
mov
sub
das
fmul
notl
aam
pusha
inc
add
ss
stc
insl
fstl
sti
es
mov
mov
mov
cld
lea
jge
test
test
dec
cmpsb
xchg
or
xchg
pop
mov
fdivrs
sbb
rcr
sbb
andl
enter
xor
push
xor
shll
pop
roll
sbb
jb
push
or
xchg
outsb
add
call
and
dec
subb
xchg
loopne
popf
int
jno
xchg
and
sbb
inc
dec
xchg
mov
pop
orl
cwtl
sub
mov
mov
mov
nop
gs
fsubrs
mov
popa
fbstp
mov
nop
psllw
push
adc
sbb
fwait
sub
sbb
mov
insl
incb
add
int3
jne
adcb
dec
jmp
cli
xchg
out
xchg
push
outsl
adc
sub
ror
inc
add
lahf
ficompl
test
add
call
push
imul
in
xchg
out
ja
push
sbb
cmp
cmp
negl
sub
sub
jmp
push
rcll
lods
loop
dec
shr
xchg
xor
pop
aaa
add
inc
shll
dec
negb
sbb
test
jnp
frstor
jo
sub
movsl
pop
pop
sbbb
inc
daa
pop
sti
shrb
outsb
repnz
inc
xor
cmp
cmp
shll
popa
sub
scas
sbb
xor
mov
loopne
mov
add
call
sahf
lock
mov
dec
ret
xor
sub
push
mov
ret
stos
mov
aas
cmp
mov
clc
push
out
stos
testl
nop
iret
pop
sub
inc
pop
cmp
cmp
stos
loope
xorl
mov
iret
add
jle
jl
arpl
js
out
fisubs
sub
into
pop
adc
addl
popf
or
cmpsb
sbb
and
cs
mov
add
gs
icebp
ret
inc
jecxz
add
call
add
pop
ja
or
std
cmp
loop
jnp
push
setb
shll
sub
xor
or
sub
dec
dec
mov
repnz
scas
inc
sbb
inc
mov
xchg
push
mov
popa
scas
ja
insl
mov
xchg
orl
push
push
pop
out
sahf
scas
cmp
xchg
inc
js
dec
xchg
enter
sbb
lds
fdiv
inc
mov
xchg
cmp
cltd
jp
mov
or
mov
push
loop
cmp
decl
add
call
mov
pop
push
pop
cld
pop
cld
dec
mov
dec
jo
push
and
pop
cmpsb
outsl
pop
add
inc
or
stos
push
lcall
sti
cmp
xchg
xor
xor
sbb
xor
psubq
jl
jae
cmpsl
pop
bound
in
add
and
jmp
inc
jae
add
int
fmulp
cmp
push
pusha
int
push
sbb
das
xlat
testb
fldcw
mov
xchg
lods
adc
dec
inc
add
pop
mov
add
add
call
sub
inc
aad
rcl
pop
sub
sub
xor
cltd
mov
dec
jecxz
cmpsb
rcl
sub
adc
arpl
adc
mov
xor
xorb
jmp
ja
lret
cmp
pop
out
xor
lret
cli
pop
push
fiaddl
inc
inc
fistps
gs
cwtl
mov
lret
pop
sbb
mov
sub
cs
jg
mov
outsb
lods
in
enter
flds
push
fs
cli
stos
out
bound
add
call
lock
mov
rcrl
push
dec
fadd
inc
movsl
insb
fldenv
xchg
enter
imul
push
sahf
xchg
inc
or
or
inc
sahf
lahf
adc
push
add
adc
or
out
mov
and
cmpsl
dec
push
in
mov
test
mov
ljmp
lret
mov
inc
adc
xchg
lahf
xchg
mov
popf
popf
cmp
pop
scas
sbb
lret
add
enter
stos
imul
add
std
jno
lret
mov
nop
testb
call
push
flds
sbbl
aas
popf
lods
cmp
in
loop
mov
andl
mov
jb
out
jmp
sbb
mov
mov
lcall
jbe
mov
int
sbb
pushf
out
add
mov
cmp
imul
push
push
and
and
xor
test
popw
adc
push
fsincos
mov
adc
cmp
mov
lcall
imul
jmp
add
call
cmp
jnp
cli
mov
push
cmp
dec
dec
andb
dec
pop
cmp
fcom
mov
out
out
inc
stc
out
xchg
je
add
cmp
enter
ja
mov
pop
subl
and
adc
aam
aaa
push
jne
fs
arpl
xor
scas
mov
stc
or
push
lcall
ficomps
add
adc
sbb
out
clc
popf
loopne
or
push
or
mov
aam
fisubs
test
add
call
ret
and
pop
or
and
jbe
and
ret
pop
imul
push
xchg
mov
mov
loop
mov
xchg
fiaddl
mov
dec
out
into
xchg
sub
push
and
shrb
movsb
pop
mov
cmp
jnp
mov
aam
mov
aas
ds
mov
pop
xlat
cmp
push
jge
cmc
mov
in
push
int3
adc
pop
lahf
or
and
imul
adcl
cwtl
int3
xchg
mov
dec
cwtl
mov
int3
pushf
testl
clc
roll
call
dec
scas
sbb
out
imul
push
pusha
dec
movsb
adcl
movsb
pop
mov
fmull
js
mov
stos
loopne
filds
jmp
popf
xlat
lret
adc
in
lahf
jg
scas
into
xor
lcall
adc
inc
stc
movsb
idivb
cmpsb
pop
fsubr
sub
cmpsb
sbb
or
cmp
adc
shl
fbstp
inc
mov
aad
sbb
mov
js
hlt
push
shrl
lds
outsl
sbb
add
call
subb
call
sbb
jo
xchg
cmp
cmpsl
sub
scas
mov
imul
lcall
cmp
sub
fldenv
xor
scas
int
push
adcb
int3
xor
shl
loop
in
iret
sarl
cmp
out
adc
lahf
pop
adc
add
jb
mov
xbegin
out
inc
cmp
adc
mov
xor
push
cmp
aad
test
int
mov
cmp
add
call
stos
lret
jne
imul
nop
xchg
and
cs
insb
sarb
or
sahf
iret
pop
pop
jp
pop
adc
cmpsb
daa
cmpsb
push
jl
movsl
jg
fistl
movl
push
mov
jnp
scas
jnp
mov
pusha
cmpsl
dec
sub
mov
sub
insb
mov
cltd
fs
pop
mov
or
push
fs
push
rorl
mov
mov
out
sub
aam
popf
rorl
pop
pushf
rclb
add
call
movsb
lods
xchg
repnz
add
arpl
add
ret
xor
jmp
flds
aam
movsb
rol
repnz
sbb
or
test
ret
rcrb
sub
cli
pop
sbb
lret
xor
imul
adc
mov
subb
add
mov
push
lods
pop
mov
cld
or
leave
or
xor
shl
or
iret
pop
dec
cmp
push
out
adc
imul
mov
adc
repz
insb
jno
arpl
iret
outsl
push
push
outsl
jl
es
je
add
call
jmp
rcll
and
cmp
js
jl
cs
js
stc
cmp
gs
inc
imul
ret
jnp
ja
test
mov
imul
jno
mov
xchg
or
lock
add
and
pop
sbb
inc
dec
jns
ret
cmp
scas
push
push
or
punpcklbw
push
dec
sbb
syscall
cli
out
mov
inc
les
or
mov
mov
mov
clc
shll
mov
mov
push
add
call
push
push
lret
dec
sbb
pop
in
add
cmpb
test
jp
jmp
xchg
mov
xor
ss
aad
jge
arpl
pop
out
xor
pop
dec
pop
and
fidivrs
mov
cmc
or
inc
pop
out
clc
cltd
mov
mov
into
sahf
int
pop
jno
mov
sbb
hlt
scas
push
and
adc
cltd
mov
xchg
mov
jmp
cli
loope
insb
adcl
jmp
sahf
jle
dec
jbe
dec
cmp
call
sbb
pusha
or
xchg
bswap
imul
sbb
je
cwtl
sub
pop
adc
les
mov
push
push
xor
iret
pushf
les
stc
je
aam
sarl
pusha
daa
iret
adc
jne
dec
fldenv
repnz
das
adc
popf
jl
dec
lock
pop
push
enter
sarl
fsubrl
mov
lret
aaa
lret
loop
mov
add
jmp
call
pop
push
or
out
and
ja
insl
push
das
mov
mov
imul
mov
lods
pop
js
mov
xor
push
xor
cmpsb
sahf
lods
das
jle
clc
shll
aam
ror
cwtl
mov
and
and
push
outsb
add
mov
aas
iret
inc
add
dec
inc
call
lods
clc
in
rorb
xor
mov
mov
cmpsb
cmpsb
dec
xchg
mov
push
and
es
cmpsb
jne
pop
cmp
push
cmp
add
call
jne
insl
aad
je
cmp
ss
fbstp
dec
mov
pop
leave
je
or
pop
es
lds
push
push
mov
or
pop
xor
pop
repz
push
and
push
ds
std
jne
jg
mov
in
and
ds
in
ret
sub
pushf
aaa
shlb
sti
or
sbb
pop
dec
and
nop
mov
rcrb
dec
aaa
jmp
clc
jne
stc
shl
out
push
int
stos
inc
dec
jl
pop
adc
popa
in
or
push
imul
cmpsb
cmp
fildl
or
add
call
sbb
fmull
dec
sub
ret
push
mov
jge
or
mov
sub
cmp
xlat
inc
push
jmp
ljmp
das
inc
fsubrp
ljmp
jnp
dec
mov
mov
cs
ret
scas
and
sbb
xlat
iret
xor
repnz
xchg
and
sbb
cmpsl
mov
cmp
aad
das
ret
mov
test
hlt
sub
movsl
sub
shl
cmc
pop
xlat
repnz
adc
mov
roll
push
aas
cs
sarl
add
call
or
ret
lds
jl
push
mov
sbb
ds
mov
pop
cmp
or
add
xchg
stc
mov
insb
mov
lods
inc
add
add
ret
popf
adc
adc
sahf
arpl
fildll
adcb
lea
out
loopne
mov
jmp
aad
cld
loopne
out
aam
dec
shll
ret
inc
mov
mov
mov
cmp
xchg
adc
int
int
xchg
jb
add
add
call
add
out
loop
jp
xorb
push
mov
sbb
movsb
or
sub
call
inc
xlat
mov
and
adc
cmp
jae
rorl
mov
push
cmp
and
aaa
imul
inc
inc
jb
jnp
cmpsb
icebp
fdivp
mov
pop
inc
cmp
loopne
out
lock
ds
stos
xlat
cltd
fld
scas
mov
je
xchg
sub
hlt
sbb
cs
fimuls
dec
add
call
add
jecxz
jb
inc
mov
push
push
jb
inc
sbb
jp
adc
xchg
xor
mov
mov
mov
jge
inc
inc
push
insl
incl
fists
and
fnstenv
call
sub
cmp
test
movb
push
add
jnp
push
pop
xor
inc
les
mov
ss
ljmp
mov
pop
and
pusha
pop
in
mov
call
fsubs
inc
push
in
cmp
test
sarb
addr16
outsl
dec
mov
add
call
rorl
pop
sbb
xchg
aad
sub
scas
repz
mov
mov
fsubs
mov
jle
add
add
aad
fsubrl
xor
jle
das
ds
add
loop,pn
adc
and
xchg
ljmp
xchg
sahf
into
mov
adc
and
push
jns
jle
jl
mov
in
mov
dec
xor
dec
dec
lods
jo
pop
add
mov
pop
fiadds
je
imul
xor
aad
fwait
mov
xchg
push
push
push
fbld
call
cli
cli
cmpsl
test
arpl
mov
mov
jae
sub
shlb
cwtl
out
lds
jp
loope
enter
dec
push
pop
mov
gs
std
jne
bound
sbb
jae
repnz
leave
pop
sub
jecxz
sbb
sbb
ret
lea
inc
rolb
pop
mov
sub
jl
lock
or
inc
aaa
sti
xor
jno
push
out
inc
sarb
adc
or
mov
divb
es
dec
cs
mov
push
lcall
call
pop
push
fldt
pop
sahf
outsb
push
push
adc
rcl
into
push
sahf
cmp
push
addb
xchg
xchg
js
mov
dec
dec
adc
xor
sub
sbb
sti
shld
cmp
jecxz
repz
rcl
pushl
push
xchg
mov
or
shll
mov
std
inc
shl
fistl
push
push
icebp
and
mov
fdivs
cmp
sets
cmpl
call
jb
mov
push
xchg
jns
jl
fcomp
jnp
xchg
setno
int
xchg
scas
cmp
cmpl
je
add
pop
fcomps
fdivrs
in
ret
cmpsl
insb
sub
push
loopne
hlt
mov
xchg
xor
in
in
lods
inc
mov
fwait
fs
loopne
call
mov
ss
jmp
repz
fs
loop
jae
adc
addr16
fisubs
mov
or
fstpl
jp
or
mov
pop
cs
je
push
mov
sbb
push
xchg
add
call
jmp
jecxz
test
mov
leave
popa
xor
mov
rolb
fwait
popf
pop
mov
aad
adc
fldenv
cmpsl
push
in
mov
movsb
jle
es
pop
or
mov
mov
pop
icebp
xchg
addr16
sub
lahf
gs
stc
xchg
insl
hlt
dec
rolb
and
jmp
adcb
xchg
sub
or
test
mov
clc
ret
repz
ret
fsubrs
inc
or
xchg
jb
outsl
mov
cs
xor
movsb
add
call
lahf
and
fucomip
les
cmp
sbb
push
out
push
dec
imul
xor
rcr
push
ret
scas
pop
inc
or
mov
pop
out
inc
aad
fwait
cmp
push
adc
lods
subb
ret
shll
data16
pusha
push
jae
stos
lds
push
jmp
cmp
jg
pop
and
inc
cmp
notb
jp
ds
mov
and
sbb
leave
sbb
cmpsb
sbb
mov
call
gs
add
lods
dec
pop
data16
mov
mov
je
loope
xchg
bound
and
int
cli
sub
in
je
scas
add
and
ror
ljmp
or
lret
mov
inc
cltd
adc
sbb
cmp
in
ret
cmc
mov
mov
pop
mov
ret
mov
mov
rclb
push
movsl
dec
movsl
cs
loope
dec
ds
movsl
inc
sbb
out
jl
mov
xchg
pop
mov
mov
mov
das
cmpsb
and
add
call
dec
in
and
push
sub
ja
fcompl
add
mov
pop
daa
daa
push
xchg
dec
jnp
xchg
ljmp
jns
inc
dec
mov
xor
cmp
xchg
insb
sarb
mov
rclb
mov
sbb
out
fwait
popw
inc
push
mov
mov
push
push
mov
clc
push
test
xor
push
ficoms
mov
test
inc
fucomi
stos
cli
mov
and
rorb
ja
cmp
pop
sbb
add
call
mov
rclb
push
cmp
lods
fwait
jns
popf
cwtl
lds
popa
sbb
mov
leave
push
xor
scas
cmp
and
lcall
nop
loope
add
and
in
js
cmp
jne
adc
xor
insl
lret
adc
cltd
das
cmp
pop
inc
cmp
addr16
fmull
andb
imul
mov
fstpl
pop
aad
mov
enter
fs
inc
and
add
call
lret
pop
mov
xchg
outsl
cltd
inc
mov
push
icebp
test
inc
sahf
sbb
repnz
inc
out
adc
dec
jecxz
enter
mov
push
mov
push
int
xlat
aam
ljmp
or
into
sub
mov
mov
jl
mov
pop
arpl
xor
js
jle
ljmp
arpl
xchg
xchg
scas
mov
xor
fstl
or
and
lret
adc
cmp
pushl
pop
and
js
inc
aaa
add
call
or
test
cmpsl
ss
lods
dec
inc
pop
call
ret
out
jns
push
push
jo
lahf
in
inc
pop
aaa
das
cmp
cmp
sbb
jo
add
pop
lahf
and
in
movsl
enter
paddsb
push
push
in
mov
inc
cmp
sbb
inc
cmpsl
test
dec
mov
mov
jge
bound
cltd
mov
aaa
out
out
jle
pop
hlt
loop
imul
jns
int3
cmp
mov
iret
add
call
or
mov
push
mov
fisttpll
push
and
imul
adc
aaa
call
call
loope
iret
push
push
or
xchg
jae
imul
jno
aam
or
add
int3
outsl
xchg
sub
std
inc
stos
and
jae
xor
jl
add
inc
test
inc
insl
and
jmp
repnz
cmpsb
and
pop
add
cmp
ret
loop
push
popaw
jl
fucomi
stos
pushf
adc
into
mov
addl
std
in
out
add
call
ficoml
aad
nop
cwtl
leave
popa
cmp
repnz
es
int
addr16
nop
jae
in
jbe
sub
xlat
popa
out
and
fwait
mov
mov
lods
lds
mov
mov
sbb
lock
data16
sbb
in
adc
add
adc
sub
shl
and
inc
xlat
xlat
mov
jae
mov
xor
andl
mov
mov
adc
popa
cmp
sbb
and
xchg
pusha
add
add
call
fsubl
sarb
nop
mov
repz
rolb
mov
mov
mov
dec
daa
mov
sarl
sbb
mov
fsubl
push
stos
shr
fisttpll
in
push
push
hlt
aad
mov
pop
stos
sub
stc
mov
mov
lcall
mov
push
or
dec
push
cmpsl
bound
push
out
scas
mov
int
enter
daa
add
sahf
imul
sbb
neg
sbb
add
call
loope
cwtl
lahf
mov
jbe
outsl
dec
aad
push
leave
xchg
adc
leave
ja
sub
mov
jnp
push
cmp
jno
push
mov
cmp
jnp
dec
mov
push
in
cmpsl
test
outsl
into
add
jnp
faddp
push
bnd
stc
cmpsb
and
lcall
gs
aas
mov
push
inc
mov
fsubrs
xchg
mov
pop
into
dec
fstpt
inc
cmp
adc
ds
mov
ja
popf
add
call
xchg
sub
inc
mull
mov
pop
das
mov
mov
xchg
sbb
ljmp
cli
mov
cmp
nop
xor
mov
dec
imul
icebp
movsb
mov
push
push
into
cld
mov
mov
pusha
pop
shrl
pop
cmpsl
popa
jbe
call
push
stos
inc
popf
add
lret
mov
mov
mov
jne
xor
scas
ljmp
pop
push
hlt
mov
push
xor
dec
in
mov
xchg
clc
sarb
add
cmp
call
into
and
scas
or
sbb
outsl
lds
and
and
test
movsl
dec
mov
pushf
lods
out
xor
jbe
or
mov
out
xchg
add
mov
test
js
ret
rclb
xor
sub
sbb
jge
add
sbb
xchg
inc
inc
sahf
mov
stc
bound
dec
jg
jp
pushf
xchg
fimuls
mov
adc
cmp
pop
cmp
jl
mov
adc
stos
ljmp
fwait
ds
mov
in
hlt
cmpsl
push
push
add
call
inc
test
dec
inc
decb
aas
call
lahf
cmp
mov
test
adc
insb
sbb
mov
xor
sub
leave
or
lret
je
or
arpl
pop
sub
push
imul
sbb
shlb
fwait
mov
cltd
adc
xchg
add
sub
inc
xor
rorb
pushf
imul
or
arpl
sub
or
pusha
int3
or
mov
cmp
fnstcw
icebp
call
test
test
add
call
push
mov
arpl
mov
pop
lds
xorb
adc
jnp
cmp
call
jmp
mov
aaa
cmp
mov
popa
xchg
mov
adc
fidivrs
aad
repz
repz
clc
pop
loope
pop
fcoml
mov
mov
loope
dec
dec
xchg
mov
or
test
sub
push
mov
and
lods
xchg
xchg
sbb
sbb
leave
in
pop
add
popf
mov
add
call
xchg
xor
and
fstps
sahf
mov
fimull
nop
movsb
aas
ss
mov
movsl
std
dec
xor
loopne
xchg
mov
inc
add
int
jo
mov
pop
mov
imul
cmpl
cmp
in
pop
sbb
push
lcall
lods
push
and
outsb
push
adc
in
sti
mov
call
bswap
jecxz
xlat
scas
push
lret
scas
fldl
scas
imul
or
or
add
call
std
xchg
aam
inc
xchg
xor
paddusb
aam
jno
push
mov
xor
lds
pop
or
loope
sbb
fwait
notb
stc
inc
mov
dec
and
testb
call
mov
hlt
test
inc
push
or
jo
repz
mov
mov
xchg
pmuludq
fs
out
data16
int
scas
sbb
jnp
push
icebp
mov
imul
pop
daa
or
cmpsl
sti
push
inc
dec
xor
jbe
jmp
in
gs
push
add
call
lock
mov
dec
ljmp
add
clc
dec
insb
cmc
sbb
dec
inc
inc
pop
dec
test
pop
xchg
or
cmp
push
popf
inc
fcmovne
ljmp
insb
aam
ljmp
adc
and
pushf
shll
push
test
mov
scas
fdivs
int3
je
mov
loope
adc
out
pop
xor
inc
rorl
imul
push
negl
xchg
repnz
mov
add
inc
mov
pop
sub
push
jae
add
call
out
or
push
int
inc
fisubrs
mov
sbb
scas
push
sub
inc
cmp
cmp
into
fcomps
jp
int
sub
cld
jo
jbe
inc
push
xchg
out
arpl
or
inc
mov
jns
inc
pop
inc
inc
xorl
pop
leave
out
xchg
outsl
push
lahf
add
fsubs
mov
in
sbb
or
cli
fisubrl
popa
xchg
repnz
or
push
int
insb
insb
test
xchg
fs
mov
in
loopne
dec
and
call
add
xchg
js
cli
daa
lods
xor
outsb
jge
inc
mov
test
ja
sbb
dec
in
gs
or
ds
das
addps
leave
push
pusha
xchg
sti
cmpsb
out
sbb
xchg
pop
aaa
out
and
lahf
clc
sub
sub
mov
and
sbb
cmp
or
cmp
add
icebp
insb
mov
dec
inc
inc
cmpl
loope
jb
xchg
movsb
sub
and
mov
les
add
call
imul
aad
in
pop
xlat
pop
std
out
jne
adc
push
and
idivl
hlt
dec
or
or
dec
divps
pop
jo
or
and
sbb
adc
ljmp
ds
mov
inc
lods
push
jbe
stos
nop
pop
fdivs
push
inc
sub
cmp
shll
xchg
cmpsb
movb
shlb
neg
sub
dec
mov
xchg
bound
or
inc
pop
sbb
stos
inc
mov
lods
and
movsl
dec
ret
dec
mov
hlt
rolb
add
call
push
mov
jno
mov
sub
sub
fldcw
je
jp
iret
cmp
ja
sub
iret
ds
mov
rorb
mov
lea
imul
fs
out
add
mov
xchg
sahf
add
mov
repz
adc
dec
push
out
mov
js
aad
jno
cmp
jge
shll
imul
movsb
cmp
mov
imul
add
es
es
sub
and
inc
push
inc
push
jb
pop
add
call
or
mov
jbe
iret
ss
sub
push
call
xchg
adc
test
sti
clc
pusha
push
test
test
subw
cmp
mov
stos
cld
aas
and
push
push
std
rclb
and
bnd
mov
push
sarb
cmpsl
rol
pop
mov
sub
in
gs
mov
test
mov
lods
jns
mov
xor
add
pop
sbb
movb
aaa
add
push
pushf
scas
outsb
mov
or
cmpsb
add
call
cs
fsubrp
jmp
cmp
push
inc
lds
cmp
mov
mov
xchg
push
xchg
in
adc
push
push
int
inc
xchg
sbb
push
adc
push
addr16
mov
push
mov
dec
mov
adcl
dec
sbb
jo
dec
dec
mov
loope
jp
cmp
inc
fldt
xor
loopne
pop
push
jns
mov
inc
lcall
test
shl
and
jbe
lods
dec
and
shrl
ss
orl
call
lods
mov
mov
or
lea
push
int
paddd
std
gs
mov
mov
into
inc
hlt
insb
inc
ds
add
test
movsb
in
fs
mov
sub
cs
imul
lods
adc
bound
popf
mov
out
lea
pop
jp
inc
or
mov
imul
jp
lds
scas
mov
sti
stc
mov
int3
int
sub
mov
add
cmc
je
mov
mov
jmp
mov
add
call
mov
pop
pop
stos
aad
sahf
add
sub
pop
adc
adc
xchg
add
dec
pushf
ret
sbb
aad
or
adc
mov
out
pop
fwait
in
dec
rolb
push
push
daa
push
and
stc
inc
push
pop
cli
sub
clc
sub
adc
aas
movl
add
sbb
pusha
or
jo
fiaddl
dec
jp
scas
addr16
loopne
jnp
push
daa
sbb
cmc
sbb
xor
add
call
xchg
loopne
pop
je
mov
jnp
mov
jmp
xor
test
insb
mov
xchg
subl
push
dec
lret
pop
cmp
and
repz
sbb
ret
xchg
jbe
stos
xor
cmp
imul
mov
mov
arpl
out
mov
mov
xlat
inc
pop
xor
mov
fsubrs
mov
xchg
outsl
lods
cmp
xchg
jp
in
jge
repnz
fwait
stc
stc
repz
pusha
push
insb
sti
xorl
clc
jl
nop
rol
aas
lods
add
call
push
jo
dec
pushf
mov
add
dec
sbb
imul
and
insl
faddl
and
inc
ja,pt
rcrb
sub
pop
test
sarb
daa
add
xlat
jle
or
scas
ss
cld
inc
in
into
dec
mov
dec
add
rcrb
mov
jl
mov
les
push
jnp
loopne
adc
mov
fstpl
popl
out
mov
int3
in
movsb
loopne
cmp
addr16
mov
mov
movsl
sbb
rcrb
scas
jmp
call
mov
add
outsl
test
movsb
js
mov
aas
loope
repnz
nop
mov
scas
leave
repnz
ret
imul
push
loope
jnp
insl
rorl
sti
sbb
lahf
dec
inc
inc
aaa
dec
push
mov
jae
imul
shll
fsubs
jmp
inc
incl
pop
jbe
sahf
adc
xor
jbe
xor
clc
inc
lret
sti
push
test
pop
out
jne
daa
push
dec
push
mov
push
gs
mov
cmp
repz
add
call
inc
dec
mov
aad
sub
jmp
xchg
mov
jae
in
mov
mov
ljmp
jp
pop
jns
adc
and
cmpsb
xor
sbb
cvtps2pi
jno
jge
add
xlat
stc
cmp
clc
xchg
lods
aad
mov
loopne
add
movsl
icebp
cmpl
mov
and
adc
pop
add
and
outsl
or
pushf
test
movsb
clc
push
cmp
test
clc
push
shll
mov
call
mov
adc
push
pop
or
test
mov
mov
sti
int
imul
pop
sbb
xor
inc
inc
das
dec
scas
loop
dec
das
loopne
xchg
mov
in
sub
pop
stos
das
je
mov
out
dec
mov
loope
std
or
jg
sub
mov
test
or
jle
aam
push
imul
pop
out
mov
decb
mov
add
or
push
mov
jb
aad
cmp
sub
mov
add
call
dec
addr16
negb
mov
sbb
push
ss
lret
xlat
je
fcmovbe
rcrb
mov
pop
fistpll
sti
and
clc
add
sbb
push
icebp
pop
lret
jae
cs
or
xchg
mov
out
ss
mov
dec
jno
jno
rorl
mov
lret
push
ss
mov
les
das
mov
pop
mov
mov
jae
loope
cmpsl
xchg
inc
mov
fnstsw
lret
outsl
mov
iret
xchg
ss
add
call
jns
fld1
and
pop
bound
rol
and
xor
mov
out
dec
sbb
cmp
mov
pop
or
cmpsl
int3
ljmp
xchg
movsl
sub
fmul
xchg
xchg
sub
mov
or
cmpsl
into
jg
mov
shll
jnp
adc
mov
push
xchg
xchg
lret
mov
sbb
sbb
cmc
dec
mov
push
rorb
cmp
mov
sbb
inc
bound
imul
cmp
aam
cltd
xchg
mov
mov
call
stc
ds
xchg
and
cmc
shl
in
imul
shr
cmc
add
and
pop
sub
sub
jl
cmp
lods
das
int3
and
mov
sti
cmp
outsl
mov
mov
das
mov
int3
adc
cwtl
sbb
jg
xchg
insl
cwtl
mov
bound
jmp
ss
jecxz
jp
fdivs
aaa
testl
mov
sarb
test
cltd
sub
mov
add
call
cmpsl
sbb
std
xor
sbb
aaa
int3
xchg
mov
pop
jns
add
xchg
pop
fists
stc
hlt
mov
mov
out
cmp
xlat
jo
add
adcb
jmp
dec
pop
and
pop
mov
shll
add
sub
lods
in
mov
out
repz
dec
std
fs
aaa
mov
lcall
fisubrl
push
outsb
cmpsl
dec
hlt
rcr
sbb
pop
sbb
mov
add
call
rorb
ss
dec
mov
push
pop
inc
cwtl
scas
cmpsb
int
mov
mov
sbb
mov
dec
je
aad
and
xor
adc
fs
pop
bound
push
scas
xchg
bound
mov
rorb
ret
mov
jmp
jmp
rorl
cmp
int3
iret
arpl
mov
pushf
xchg
or
sbb
fidivrl
insb
mov
pop
jae
cli
mov
xchg
dec
xchg
lret
ret
lds
scas
insb
sub
cmc
adc
fs
push
add
call
jmp
mov
int3
push
push
pop
mov
jb
clc
scas
or
xchg
or
pop
mov
int3
xchg
lret
loopne
push
adc
xchg
cmp
js
aam
xor
cmpsl
ret
add
inc
mov
aad
repnz
xor
popa
push
mov
out
push
outsl
push
ror
sahf
movsl
aam
rcl
pop
in
mov
cltd
jmp
lret
sbb
jae
and
mov
cs
pop
insb
or
fistps
leave
xor
or
mov
mov
ret
hlt
mov
fidivs
inc
add
call
pop
and
div
divl
iret
mov
jecxz
jns
xchg
pushf
or
xor
lods
inc
jp
fbstp
jl
ds
imul
cmp
hlt
and
loope
add
fmull
test
mov
pop
mov
push
dec
fimull
aam
in
jg
and
outsl
jo
or
lods
or
or
mov
test
hlt
std
arpl
sbb
mov
cmp
adc
stc
shll
call
std
test
cmp
test
add
call
xchg
adc
in
sub
xor
sbb
std
dec
inc
stos
pop
cmp
ja
je
xchg
shll
pop
movsb
inc
xor
sub
xchg
mov
dec
jp
sarl
cmpsl
pop
int
stc
call
jb
mov
jl
pop
push
and
sbb
and
jecxz
fsubs
push
lahf
fisubs
xor
jge
and
insw
scas
push
fldl
rclb
arpl
push
into
add
call
cli
iret
data16
jo
push
rolb
mov
mov
pop
sahf
push
loope
cltd
xor
add
dec
mov
sti
jmp
js
push
imul
cmp
mov
je,pn
dec
cmp
leave
pop
xchg
pop
cmp
fwait
cmp
mov
push
inc
aas
push
cltd
outsl
pop
fbld
sub
mov
cmc
jne
dec
les
xor
pusha
lret
icebp
flds
sub
fiaddl
xchg
ret
dec
icebp
and
push
mov
sbb
fnstcw
arpl
mov
cwtl
cltd
arpl
icebp
push
pop
push
push
bound
cmpsb
add
call
mov
jae
and
pop
testl
cltd
enter
ds
jnp
scas
xchg
out
sub
push
fcmovnu
adc
mov
xchg
les
mov
or
call
or
popf
adc
or
xchg
imul
mov
mov
xor
jle
push
lods
jg
or
sbb
popa
sub
imul
enter
addr16
scas
inc
test
loope
iret
into
xchg
inc
je
push
and
call
sbb
popa
xor
pop
mov
fists
sbb
fcoms
ret
jbe
sbb
push
cmp
mov
lret
sahf
or
clc
jecxz
movsl
push
inc
lock
xchg
or
outsb
pop
lods
stos
ror
pop
mov
pop
std
rclb
sbb
xchg
mov
xchg
adc
adc
fiadds
mov
dec
mov
mov
out
inc
jecxz
cltd
mov
pop
inc
stos
fisubrs
push
add
call
pushf
mov
test
icebp
hlt
pusha
pop
cmpsl
pop
fistl
mov
add
int3
adc
inc
push
add
jae
mov
lahf
mov
loop
mov
jbe
jns
jb
or
imulb
sub
push
dec
inc
fcoms
jns
mov
push
sub
push
adc
xchg
dec
and
jnp
mov
movsb
arpl
repz
ljmp
cmpsb
cmpl
subl
adc
sub
sbb
add
call
hlt
stos
ficoms
sbb
xchg
fstp
loope
mov
mov
adc
pusha
lds
jno
testb
lret
sbb
mov
dec
inc
or
jl
not
adc
mov
lret
mov
and
js
cs
ljmp
pop
cld
sub
inc
push
mov
adc
pop
insl
scas
push
mov
les
fcompl
cmp
enter
cmp
bound
hlt
push
ljmp
cld
mov
adc
sub
adc
clc
dec
push
add
call
insl
adc
mov
inc
pop
loop
xchg
sub
dec
dec
jno
mov
in
add
or
les
push
cmpsl
hlt
adc
sub
xchg
fildll
rorb
aaa
xchg
sub
js
fdivr
stos
les
scas
test
mov
scas
dec
not
subb
cs
push
hlt
mov
insb
and
repz
xchg
inc
adc
and
mov
enter
cs
mov
rcll
ja
jne
mov
seta
rcrb
cmc
jp
in
mov
add
call
jl
push
cmpsb
clc
xor
adc
mov
sub
push
or
pop
push
jge
test
pop
cmp
sbb
insb
inc
movsl
push
int
ja
pop
inc
aad
and
insl
out
iret
aas
jmp
mov
sub
inc
push
minps
jmp
je
addr16
rcrl
xchg
push
jns
push
inc
cmpsb
test
sub
ss
ss
mov
push
and
pop
mov
sbb
sub
sub
aad
scas
pop
pop
out
add
call
mov
mov
test
clc
cmp
xchg
popa
inc
pop
inc
inc
loope
iret
mov
gs
arpl
mov
clc
in
sub
out
notl
bound
out
call
dec
in
js
push
cs
jecxz
lods
mov
xorl
mov
mov
push
fsubl
jle
sub
test
pop
mov
inc
add
mov
pop
jb
nop
inc
cli
pop
repz
fmulp
lods
sti
iret
in
cmc
andb
sub
clc
cmp
in
dec
add
call
mov
add
push
mov
fnsave
ret
leave
sbb
xor
mov
push
loop
cmp
mov
push
sbb
bound
xchg
adc
mov
out
js
adc
call
mov
sbb
push
and
push
cwtl
int
mov
enter
inc
jbe
cmc
mov
les
loope
mov
imul
fucomp
leave
fnstcw
jne
jns
hlt
push
push
aas
mov
xchg
xor
shrb
popf
das
jge
xchg
xlat
imul
mov
jge
add
call
push
out
or
test
push
push
mov
or
lods
enter
xchg
lcall
adc
or
lcall
rcrb
movsb
loopne
scas
mov
in
jmp
movsb
adc
mov
push
push
in
enter
shll
xor
mov
xchg
lahf
insb
repnz
add
cmpsl
xor
mov
xor
pushf
lret
subb
fnstenv
mov
pop
testb
mov
mov
cmp
or
add
call
dec
daa
jle
adc
call
clc
pushf
in
std
jae
xchg
bound
std
jo
popa
and
mov
cmp
pop
xchg
rol
addr16
and
sar
lock
sbb
cmp
enter
sub
mov
pop
loope
inc
inc
mov
aam
fnstcw
sbb
rcrl
lods
out
push
inc
stos
mov
xchg
cmp
call
fwait
inc
pop
pop
lahf
lods
xchg
adc
and
cs
xchg
ljmp
add
call
hlt
out
repz
or
push
dec
andl
xchg
lahf
pop
lock
fidivl
add
dec
push
out
jns
sahf
data16
xchg
sbb
loope
inc
dec
mov
mov
pop
push
loope
push
aam
and
sbb
xor
repz
lret
sub
mov
mov
dec
rcl
mov
jno
dec
data16
and
lcall
arpl
push
push
pushf
mov
or
add
stos
popa
fidivl
dec
lret
add
call
lret
lods
add
adc
sbb
jae
test
xchg
pusha
fs
mov
cmp
jmp
loop
mov
imul
pop
sahf
and
pop
dec
pop
push
leave
orb
inc
roll
mov
or
fdivl
je
and
sbb
repz
out
sub
rep
movsb
out
repz
mov
rcll
aaa
fwait
gs
sub
xchg
push
test
dec
fbstp
adc
lcall
orb
and
inc
add
call
inc
or
and
add
scas
dec
adc
push
in
shr
in
repz
add
jge
adc
jbe
fsubrp
pop
outsl
mov
icebp
outsl
rep
adc
sub
js
les
jae
jo
add
sbb
and
hlt
jl
and
cmc
fimull
sbb
mov
scas
add
lock
mov
test
mov
add
loope
jge
xchg
call
jb
xor
jno
sarl
push
mov
fidivrl
sub
add
call
scas
cmp
out
stos
cmp
out
pop
test
and
mov
mov
inc
les
mov
lds
and
adc
jg
add
adc
sub
rcl
enter
pushf
loopne
xchg
imul
xor
and
and
stos
jl
adc
adc
mov
negb
pop
xchg
repnz
ds
dec
mov
push
and
in
sbb
test
rcrl
cmp
jno
fldl
add
call
in
push
lcall
lret
add
fmul
subb
fdivrs
lret
mov
stc
xor
ret
push
xchg
xor
sub
lds
test
xchg
stc
jns
test
imul
cmp
clc
inc
xchg
scas
push
jae
inc
dec
or
adc
xor
xchg
jnp
das
mov
out
adc
cwtl
lds
jnp
outsb
pusha
adc
pop
jo
mov
shll
jae
pop
jge
push
push
out
mov
ds
inc
in
xor
push
xor
add
call
jmp
push
and
lret
pop
pause
les
lds
or
idivb
or
cmp
mov
das
out
shrb
sub
pop
xor
in
sbb
pop
cmp
xchg
mov
lods
push
push
mov
xchg
int3
jg
lods
cwtl
aam
mov
pop
xor
lret
sbb
jne
mov
sahf
call
push
push
sub
jl
mov
adc
stos
pop
sbb
iret
jnp,pn
out
mov
dec
adc
pop
add
call
sub
popf
pop
mov
mov
pop
dec
sub
add
mov
pop
out
in
std
cmp
inc
in
cmpsb
xchg
popf
push
ret
loope
sub
out
subl
lahf
xchg
mov
icebp
loop
adcb
lcall
and
jp
jne
pop
in
scas
mov
and
cli
ret
daa
enter
dec
lock
xor
out
sub
pop
xor
mov
xor
arpl
int
fisubl
push
popa
les
push
clc
stos
jnp
pop
mov
push
call
call
repz
fwait
cmp
popf
xchg
xchg
sub
hlt
decl
aad
pop
ret
dec
xchg
add
pop
sub
in
xchg
xchg
inc
push
movhps
xor
aam
cwtl
lds
iret
dec
or
into
mov
xor
lret
mov
mov
mov
aas
sub
cmp
lcall
jl
dec
loopne
into
sti
pushf
loope
pop
inc
fdivrl
test
push
or
jns
push
rol
sbb
or
ds
in
fadds
add
call
pop
pop
pop
jno
mov
rolb
insb
mov
adc
cmp
pop
or
or
shrl
imul
xor
jne
test
dec
lea
mov
xor
cmp
xlat
ja
jg
loopne
loopne
xchg
jge
fwait
cmp
xlat
out
dec
out
hlt
addl
pop
movsb
sbb
scas
out
mov
mov
jle
loopne
pusha
and
test
int
stos
out
popa
fdivl
push
add
int
call
call
lds
lcall
pop
and
cmp
lret
lea
enter
insb
movsb
jl
dec
mov
stc
inc
ja
dec
adc
mov
adcb
dec
out
mov
mov
movsl
scas
aad
xchg
stos
inc
cmp
es
lahf
iret
add
les
jg
cmp
decl
push
cmp
fdivrs
fnstsw
icebp
hlt
push
movsw
mov
in
repnz
mov
mov
jno
push
leave
mov
inc
xor
call
js
and
in
aam
push
cmpb
int
push
inc
mov
jbe
pushf
sub
cltd
xor
cwtl
jge
divl
or
andb
aam
pop
in
push
xchg
testl
mov
movsb
xor
push
jl
insl
js
stos
mov
xchg
divb
cli
mov
xchg
shrb
or
jo
pop
mov
lods
cld
jbe
or
cmc
fcomps
loope
insb
push
add
and
stos
sub
adc
jp
mov
popf
incl
call
xchg
jns
stos
mov
push
dec
xchg
push
inc
test
lods
push
std
dec
ja
jl
daa
and
xchg
out
inc
loop
cwtl
jne
jle
pop
stc
mov
das
xchg
mov
out
mov
and
arpl
ljmp
iret
stos
sub
lret
imull
jns
cmp
ja
sbb
aad
push
or
pop
std
mov
jne
fwait
pop
cmp
lods
mov
les
sbb
adc
sahf
cmp
dec
cmp
and
mov
cmp
fdivs
sbb
add
call
movsb
sbb
push
rcl
mov
stos
jl
adc
imul
test
mov
pop
addb
pop
sub
jb
outsb
pusha
mov
mov
outsl
sub
jg
in
sbb
ret
cmp
stc
addr16
sub
stos
iret
call
xchg
sbb
notl
addr16
test
xchg
das
adc
mov
or
xor
mov
adc
dec
test
call
mov
add
push
or
and
shll
cmp
mov
cmc
repnz
popf
rdtsc
sahf
data16
stc
fdivl
mov
cli
mov
or
stos
xlat
push
jae
out
sub
jbe
sbb
cmp
stos
cmc
pushf
sbb
std
dec
clc
xor
test
push
repz
movsl
push
push
or
pop
aam
lds
scas
lcall
jno
daa
lods
jne
daa
fsts
test
mov
arpl
aas
lahf
jo
mov
add
call
jne
ret
add
xor
rclb
inc
add
fs
xchg
mov
inc
adc
hlt
jle
adc
or
sub
daa
cmc
subb
cmpsl
loop
and
rcll
mov
nop
roll
inc
xor
jb
lret
jecxz
aam
pop
dec
je
stos
xlat
je
cmpl
xor
idiv
jp
sbb
incl
push
dec
hlt
or
fiaddl
and
stos
xchg
adc
mov
and
call
cltd
addr16
enter
add
call
and
fistps
test
and
aas
mov
pop
sub
mov
sahf
add
cli
bound
sbb
out
dec
sbb
dec
daa
lea
in
pusha
add
push
cwtl
stos
movsb
popf
sbb
dec
outsb
sub
lods
ret
mov
bound
and
cmp
movq
jno
in
mov
pop
mov
inc
idivl
dec
imul
enter
xor
es
shrb
push
adc
add
call
jne
push
stos
cmpsl
out
arpl
pop
pop
lods
xor
push
cmpsl
mov
pop
std
xchg
xchg
sti
adc
mov
or
rcll
dec
fwait
subl
mov
js
jo
scas
sub
movsb
pop
rcrb
sti
push
adc
addb
data16
adc
xchg
mov
fs
mov
pushf
pop
xchg
xchg
loop
xor
ds
add
jnp
add
sbb
rorb
test
xchg
iret
jnp
stc
cmp
push
fdivrs
bound
ds
bound
sbb
xchg
add
call
inc
out
add
xor
or
pop
call
rol
bound
mov
negb
xchg
stos
bound
cwtl
or
lods
mov
daa
inc
sub
loopne
in
mov
jecxz
sbb
sbb
lcall
testl
sti
dec
pop
movsl
xor
xchg
or
test
lahf
stos
adc
loop
hlt
cltd
sbb
fstpt
stos
jne
sub
mov
mov
lret
bound
in
incb
mul
outsb
popa
and
gs
add
call
mov
jge
cmc
dec
sub
adc
mov
test
cmp
cli
sbb
inc
and
dec
aad
addr16
sub
add
sbb
pop
inc
mov
iret
sub
std
and
or
stos
inc
scas
or
push
fidivl
or
aam
stos
mov
sahf
nop
jnp
jg
je
popl
iret
dec
cmp
pop
stc
mov
aad
push
pop
stc
add
std
cmc
data16
daa
cmp
sub
pop
jae
xlat
xchg
fildl
add
call
sti
cmp
push
jo
xchg
mov
mov
outsb
pop
pop
scas
js
cmp
xlat
sub
ficomps
xchg
imul
subl
dec
mov
xchg
fwait
add
cli
push
push
dec
cmpsb
sbb
ss
outsl
pop
mov
and
lds
push
pop
push
fnstcw
pop
test
pop
adc
or
inc
jns
lock
loop
stos
bswap
iret
pop
gs
cwtl
fdivl
jne
orb
lock
call
call
outsb
mov
cld
xlat
cli
lret
xchg
xor
push
sub
mov
scas
cmp
jb
mov
adc
ret
fs
adc
sbb
push
push
and
fs
mov
push
dec
mov
sbb
jnp
pusha
jns
mov
leave
cs
ljmp
adc
mov
cmpxchg
fildll
or
inc
mov
je
fsubs
cmpsl
push
xchg
xor
adc
cmpb
inc
aad
mov
add
call
and
push
push
mov
mov
testl
aam
addr16
push
gs
sbb
sbb
sbb
loopne
je
mov
stos
or
jp
pop
aam
mov
mov
in
mov
sahf
pop
mov
ds
pop
insb
mov
negb
movsl
dec
popf
aam
out
out
repnz
bound
bound
sub
mul
in
pop
mov
ret
mov
dec
cmpsb
cmpsb
repz
mov
fists
shl
xchg
idivb
pop
xchg
xor
scas
fildl
call
mov
lds
into
into
gs
fnstsw
cmp
stos
and
or
add
stos
imul
js
scas
sbb
mov
aad
add
jb
subl
in
leave
inc
in
test
js
jno
jl
pop
fwait
and
hlt
lret
push
push
es
adc
out
lret
push
lock
sub
mov
aas
add
out
fs
sub
sub
flds
cld
leave
and
ja
cmp
ljmp
xchg
add
add
std
scas
pop
out
push
pop
repnz
xchg
sbb
or
aad
add
stc
cmpsl
jg
jns
pop
pop
xchg
cmp
jbe
int
lds
int3
mov
mov
sbb
mov
fistl
in
jle
mov
pushf
test
sbb
cmpsl
ret
jnp
fildll
xor
fwait
sbb
sub
pusha
das
inc
orb
jl
pushl
dec
rorl
cmpsb
inc
cmp
fcoms
fidivrs
sbb
and
andb
sbb
call
test
jmp
lcall
pop
mov
aam
sub
in
pop
js
orb
inc
push
pushf
mov
js
je
outsl
rol
lock
mov
test
push
adc
ficomps
aad
bnd
aad
or
out
into
shl
insb
xor
adc
pusha
shr
add
sbb
fwait
sbb
adc
aas
shl
insb
mov
dec
mov
stos
loope
jmp
nop
xor
pushf
push
lret
iret
and
rcl
pop
aaa
or
add
call
pop
lahf
xor
xchg
or
inc
les
xchg
fbld
sub
cmpsb
mov
fdivl
cmpsb
jge
pop
jbe
mov
dec
adcb
outsb
mov
jge
mov
xchg
and
mov
sub
cmc
mov
bound
lret
adc
push
lcall
mov
dec
ret
jne
dec
and
jbe
add
jecxz
jne
cwtl
out
out
in
inc
idivl
test
jns
sbbb
daa
jmp
dec
add
call
xchg
filds
insl
cmpsb
push
add
enter
xchg
stos
xor
adc
mov
cmp
enter
fisttpll
xchg
lret
nop
shll
leave
stos
mov
mov
popf
dec
or
mov
ret
pop
add
pop
push
outsl
and
std
pop
and
out
lds
pop
daa
pop
sub
and
outsl
dec
test
sub
or
jns
int
loopne
jbe
stc
lods
sub
ret
nop
lea
dec
out
jle
shlb
call
mov
aas
lcall
addl
push
xor
out
mov
aaa
mov
enter
dec
aam
mov
dec
icebp
stc
fisttpl
add
daa
cmp
and
push
or
xor
stos
in
adc
jmp
cltd
jmp
jp
cmovb
dec
stos
cmp
cmp
fdivrs
int3
insb
dec
in
adc
out
adc
or
push
add
push
pop
mov
test
xor
sti
repnz
mov
in
add
call
in
inc
xor
loopne
lds
mov
pop
fistps
cmc
jns
out
popf
fld
fadds
mov
lcall
mov
into
pusha
loope
or
jns
in
mov
fwait
movsl
in
jmp
bound
in
inc
or
clc
mov
jno
push
std
data16
insb
fnstsw
imul
jae
call
mov
repnz
sbb
gs
mov
mov
inc
ja
das
jp
push
mov
std
js
pop
rclb
inc
rorb
dec
add
call
sahf
sbb
jo
gs
cmp
fdivl
mov
sub
test
adc
adc
or
out
xorl
pop
enter
movl
loope
cs
lahf
dec
jns
paddq
pop
dec
xor
mov
clc
adc
mov
pop
pop
adc
mov
lret
outsl
dec
mov
xchg
rcll
arpl
rolb
mov
adc
pop
add
mov
jb
rclb
mov
call
sub
sbb
add
lds
sahf
stos
push
inc
out
int
cmpsl
dec
push
movsb
test
mov
mov
cli
xor
or
jecxz
lcall
ss
and
push
cltd
cmpb
fidivrl
notl
mov
cli
sahf
cli
and
call
push
push
cmc
mov
xchg
test
mov
xchg
pop
jnp
dec
stos
dec
xor
imul
mov
test
inc
push
cmpl
sti
shlb
bound
movsl
cmp
cmp
stc
popa
rcrb
call
pop
sub
xor
push
sbb
mov
add
push
sahf
mov
aas
and
xor
ret
adc
rcrb
jae
jne
inc
add
scas
adc
lock
inc
push
subb
fcmovnu
push
cmp
outsl
ficompl
cmp
xor
pusha
test
push
jmp
push
mov
in
mov
ds
imul
mov
js
aas
sub
ds
insl
and
inc
daa
fwait
je
ljmp
add
call
pop
jmp
sub
iret
jmp
or
jecxz
aam
int
inc
lahf
pop
bound
hlt
xor
push
xchg
dec
lds
mov
pop
dec
repz
inc
jns
testb
lock
mov
sub
movsb
cmp
add
stc
mov
out
inc
ljmp
cmp
cmp
jno
repz
vprotb
xor
mov
xchg
fnsave
cmc
in
es
add
or
leave
fcmovbe
add
call
fldl
cmc
dec
lret
ret
mov
sbb
push
cld
jle
fnstenv
or
loopne
sub
pop
data16
cwtl
xchg
aad
add
enter
add
xor
aaa
repz
int
or
bound
sbb
inc
push
add
and
sbb
cmp
mov
popf
into
inc
pop
sbb
xor
sub
ret
sarl
and
push
inc
test
ret
inc
dec
xor
lea
jle
dec
stc
mov
push
pusha
inc
sbb
loopne
xor
xor
add
call
push
adc
and
mov
sbb
aaa
repnz
inc
sub
xchg
mov
lret
shrl
dec
pusha
cmp
add
xor
and
sbb
imul
pushf
push
insb
mov
inc
sbb
pop
mov
notl
jae
hlt
sub
mov
mov
sbb
mov
adc
jo
sbb
mov
add
fldt
sbb
nop
movsl
mov
scas
pop
loop
add
call
adc
xorb
pop
add
push
jg
addr16
dec
sarl
adc
popa
decl
scas
std
mov
xchg
mov
add
xorb
lds
mov
mov
loope
pop
dec
notb
lahf
mov
arpl
data16
imul
out
cmp
rolb
sub
jge
sub
xchg
js
sub
xor
xchg
cmp
outsl
scas
pop
sbb
mov
enter
iret
jbe
add
call
daa
fsubrl
inc
lahf
cs
dec
mov
mov
sub
jle
stc
test
test
mov
add
lock
aas
test
cmpsb
hlt
mov
adc
lods
xchg
ljmp
mov
loop
cmp
jp
inc
aaa
les
jmp
mov
pop
push
sbb
fidivrl
ja
jo
xchg
pop
push
cmp
push
out
xor
dec
ss
bnd
fs
xlat
dec
out
cmp
stc
or
add
call
mov
daa
or
mov
add
pusha
or
sub
push
add
fcoml
out
int3
enter
arpl
aas
cli
jne
data16
insl
jns
adc
adc
jg
lret
lods
jle
dec
hlt
rol
adc
sub
jo
mov
dec
or
cmp
in
adc
mov
frstor
jp
hlt
jg
add
jg
pop
popa
iret
jle
mov
pop
fwait
scas
xchg
test
mov
fdivp
sti
pop
js
fiadds
jne
daa
int3
clc
and
call
dec
jns
ret
mov
dec
add
repz
repnz
sub
nop
fs
and
or
dec
into
mov
pusha
push
xchg
jmp
adc
and
cmp
loop
aaa
rorl
out
repz
outsb
fldcw
cmp
pop
and
les
inc
push
cmp
mov
jmp
mov
movsb
inc
and
mov
mov
stos
and
jo
inc
sub
mov
jns
add
mov
inc
sub
add
call
popf
xor
orl
ss
mov
jmp
cmpsl
inc
jns
lret
ljmp
cli
sbb
rcrb
sub
cmp
sbb
inc
pop
std
xor
push
jo
add
dec
inc
imul
cmpsl
ss
test
mov
xchg
jp
rcrb
dec
mov
dec
ds
and
mov
stc
cs
aam
push
sti
lods
pop
dec
adc
xchg
push
inc
adc
sbb
xor
fisttpl
nop
scas
sub
add
call
xchg
inc
lds
mov
lcall
lea
add
mov
rclb
inc
movsl
inc
lea
cli
incl
sub
mov
mov
pop
or
pop
push
and
add
xor
jmp
lea
xchg
add
add
je
rolb
pop
lahf
je
or
imul
pop
std
jl
inc
js
call
pop
icebp
adc
arpl
shl
popa
test
cmp
xor
xlat
outsb
cmp
dec
jb
sub
call
sbb
es
int
inc
lods
push
and
hlt
jae
aas
lock
or
shl
jmp
push
loop
cmpb
out
mov
lcall
sbb
pop
pop
in
call
push
scas
cmp
or
push
or
cli
jg
scas
push
inc
inc
hlt
dec
adcb
xchg
or
jmp
lds
dec
aaa
lock
mov
jmp
mov
roll
stc
jg
dec
push
inc
aam
push
sar
jmp
xchg
or
shl
cmp
call
mov
dec
or
ljmp
pop
jae,pn
test
adc
jbe
push
sub
adc
inc
das
push
leave
mov
fst
push
gs
sbb
lret
in
in
in
jo
insl
xor
lcall
lea
aad
pop
leave
scas
popf
sbb
jmp
out
push
test
jge
xor
loop
ja
decl
pop
inc
cmp
loope
cmpsl
or
outsb
push
cmp
cs
aaa
les
mov
push
add
call
orb
lret
dec
ret
dec
loopne
ret
adc
jecxz
daa
mov
pop
clc
adc
lds
xor
pop
mov
xor
mov
ret
push
cmova
mov
sbb
cli
popa
jbe
lock
mov
jp
leave
call
add
push
imul
adc
mov
mov
pop
aad
mov
aas
nop
adc
inc
mov
xchg
iret
sub
setb
repnz
mov
add
call
mov
dec
cwtl
jo
cmp
call
rcrl
fld
mov
sub
inc
add
pop
rcrl
cmpsb
jae
inc
pop
lahf
sub
sbb
mov
into
nop
mov
jno
fwait
push
dec
out
sbb
outsl
push
dec
std
push
repz
pop
adc
int
insb
xchg
mov
aad
sti
inc
out
repnz
ljmp
mov
sbb
test
push
out
mov
xchg
cmp
xchg
add
call
fs
mov
inc
adc
mov
xchg
mov
imul
cmpb
mov
leave
nop
insb
mov
lea
mov
lods
adc
jns
stos
je
jnp
xchg
sbb
xor
ret
inc
jo
sarl
dec
sub
iret
sub
adc
pop
adc
in
sbb
mov
cmp
jle
arpl
sahf
je
lds
shll
pushf
scas
xchg
in
pop
sbb
add
rcrb
push
loope
inc
jmp
add
call
dec
pushf
das
insb
repnz
xor
pop
fldcw
mov
dec
scas
and
cmp
sub
mov
mov
sub
or
insl
mov
bound
shrb
daa
mov
mov
xor
mov
adc
push
jno
push
bound
jo
shll
pop
cmc
lret
ds
or
fs
bound
push
add
sub
aaa
fwait
sbb
lods
pop
iret
inc
add
call
int3
sti
pop
scas
pop
mov
sub
stos
std
lods
mov
xor
jmp
mov
and
jb
aaa
daa
andb
or
in
fwait
lea
scas
out
cmp
adc
jno
jp
add
dec
fdivr
inc
xchg
jecxz
add
xchg
add
dec
jo
inc
stos
repnz
leave
jl
add
in
xor
subb
pop
cmp
punpckhdq
hlt
add
pop
rcrl
stos
cmp
add
hlt
adc
dec
shl
out
add
call
pop
insl
ret
mov
mov
jge
push
ret
and
jmp
sahf
xlat
jecxz
sti
sub
pop
push
lea
call
mov
sub
push
pop
fists
pop
sub
sbbb
mov
stos
scas
push
divl
adc
or
dec
mov
jb
mov
scas
add
or
or
mov
gs
sbb
in
dec
sub
fistpll
mov
jl
imul
add
add
add
icebp
cmpsb
sahf
add
pop
mov
mov
and
xor
lcall
aaa
cld
mov
shl
push
jmp
and
add
sbb
test
cli
push
add
push
jae
push
lcall
adc
test
sarb
push
jae
fcomps
cmp
cmp
les
or
jno
lods
repz
repz
shlb
ret
idivb
sub
jns
push
daa
fnstenv
sbb
add
call
cmp
call
int
test
jmp
sub
push
mov
xchg
aaa
dec
out
jno
adc
mov
popf
push
xor
into
sub
iret
ds
mov
sti
ds
push
fldz
mov
aaa
and
push
mov
sub
adc
das
sahf
push
ja
outsb
jp
or
fs
dec
lds
loope
rorl
mov
jb
cmc
xchg
cmp
sub
call
aas
hlt
ret
jecxz
push
iret
mov
shl
dec
push
mov
rcll
add
call
sub
xor
mov
adc
divl
ret
or
pop
movsb
pop
jb
andb
das
das
cmp
imul
mov
push
or
adc
xchg
pop
and
cwtl
out
mov
add
dec
cmp
jne
mov
roll
jns
dec
add
cmp
popf
cmc
shr
pop
sub
adc
cltd
or
sub
adc
jle
call
or
jne
xchg
sahf
inc
pop
out
and
and
call
test
xchg
out
test
fld
dec
fbld
aaa
mov
lsl
pop
mov
sahf
jne
or
iret
fistl
lds
into
in
jne
sbb
les
mov
push
cmp
xchg
jg
mov
sbb
mov
mov
pop
or
fidivs
cs
sub
push
add
ja
and
lret
or
mov
pop
adc
sbb
mov
xlat
sbb
jno
sub
add
lods
in
ja
mov
ficomps
call
rorb
in
jb
sub
cmp
cli
shlb
jae
and
adc
or
jmp
gs
mov
mov
push
into
cmp
xchg
add
cmp
enter
fst
mov
add
loopne
and
push
dec
lret
test
stos
cmp
leave
sbb
push
dec
fcmovnbe
lock
xchg
adc
mov
lds
sbb
xchg
fadds
sub
int
in
jl
add
sbb
and
movsl
sahf
lods
add
call
sahf
jecxz
push
lcall
hlt
loopne
ljmp
sub
inc
mov
inc
cmp
pop
les
sbb
in
cld
cli
mov
inc
int
cmp
in
pop
popa
jo
or
cmpsb
mov
sbb
icebp
and
push
mov
ret
aad
jb
add
cmpsb
fstl
pop
mulb
orl
cmp
out
cmp
insb
cld
mov
jp
xor
inc
push
fisttpll
movsb
mov
lret
jge
add
call
add
cs
mov
outsl
les
xchg
or
mov
cmc
subb
adc
cli
dec
cmpb
cmpsb
fldcw
push
addr16
adc
and
sbb
arpl
repnz
xchg
push
mov
les
xchg
repz
xor
cwtl
hlt
xor
cmp
inc
fldl
divb
sub
out
fldl
inc
push
or
or
add
jge
out
xchg
push
push
andb
pop
sti
lret
int
pop
pop
mov
mov
inc
or
call
outsb
pushw
sub
psrlq
xchg
cmp
add
loopne
fcoml
pop
sub
mov
add
lret
rorb
loope
jp
cmpsl
movsb
add
jge
jne
pusha
dec
pop
mov
gs
enter
les
int
insb
addr16
or
subb
jecxz
je
popa
pop
xchg
pop
lea
inc
subl
aas
cmp
jb
pop
xchg
dec
fnstsw
and
pushf
inc
push
popf
pushf
jb
sub
movl
jge
movaps
pop
mov
call
or
pop
rol
hlt
pop
cmp
sbb
inc
mov
dec
icebp
fldenv
inc
ret
jmp
pop
outsb
test
icebp
mov
pop
push
fmulp
xchg
call
fbstp
rolb
and
pop
js
dec
loop
icebp
mov
insb
test
pop
xchg
push
add
mov
dec
outsw
xchg
bound
mov
jp
sarb
adc
jno
mov
imul
sti
dec
push
xor
call
jge
fcompl
into
pop
clc
mov
inc
jge
aaa
call
sbb
adc
aas
or
and
push
mov
sbb
mov
rol
jge
mov
lods
cld
test
ljmp
fidivs
loop
inc
add
sub
or
repz
outsb
cmp
ljmp
mov
jbe
iret
movsb
lods
mov
mov
pop
sub
rcl
mov
nop
mov
cmpsb
movsl
mov
out
call
sbbb
adc
in
dec
std
rolb
add
call
dec
out
iret
jo
mov
stos
push
lcall
xchg
popf
cwtl
sbb
or
and
stos
dec
adc
mov
push
mov
push
jb
sub
pop
xchg
out
incb
rcrl
and
fnstsw
jns
stos
or
jno
xchg
ret
inc
or
repnz
cmp
addl
rcrb
faddl
sbb
cmpsl
inc
daa
ret
pushf
adc
aaa
pop
scas
shrl
test
std
flds
add
call
jbe
or
jmp
subl
inc
sbb
mov
mov
stc
lods
or
inc
jb
dec
and
cltd
pop
dec
mov
pop
jmp
ret
cmp
or
cmp
mov
mov
lods
subb
and
sbb
shl
out
out
sti
lock
add
addr16
pminsw
sbb
push
mov
aad
mov
idivl
xor
xchg
std
inc
hlt
mov
ljmp
add
pop
lods
add
or
into
fdivrs
or
fwait
stos
xchg
pop
testl
call
inc
test
bnd
in
xor
dec
jns
xchg
push
movsb
inc
test
shl
mov
test
sbb
cmp
lods
mov
adc
das
sbb
pusha
lret
mov
cmp
or
icebp
cld
pop
mov
or
xor
aas
mov
xchg
cwtl
push
movsl
or
pushf
rorl
cmpsb
aam
cmc
mov
ljmp
in
push
gs
movsb
dec
fdivrl
push
cmp
aad
add
mov
dec
enter
icebp
add
call
pop
sub
or
jns
int3
fidivrs
test
lods
call
iret
sub
fsubs
mov
repz
xchg
arpl
movsl
jnp
fwait
push
push
adc
cmp
pusha
fsubr
pop
sti
rcr
mov
mov
test
ds
mov
pop
mov
jno
pop
stos
mov
fadd
ret
pop
in
mov
iret
and
rcl
xor
mov
pusha
fcomip
and
push
nop
pop
cltd
and
fidivrl
inc
in
jo
dec
movsb
std
add
call
std
shrl
ja
xor
jp
cmpsb
push
pushl
ljmp
fsubrs
mov
mov
pop
inc
adc
mov
enter
call
repnz
inc
sbb
hlt
mov
xchg
mov
scas
adc
ljmp
jle
in
and
xor
inc
mov
or
nop
inc
jecxz
clc
pop
fisubl
test
cmp
mov
lret
xor
pop
stos
add
ret
mov
inc
or
aas
add
call
pop
ret
adc
sqrtps
sti
cld
xchg
jmp
push
jle
shll
stos
mov
addr16
jne
dec
imul
and
sbb
test
fstpl
sahf
shl
dec
out
out
ror
cs
test
inc
jne
mov
add
mov
dec
ret
fcomp
subb
add
xchg
mov
imul
das
lret
adc
je
aad
dec
std
mov
adc
subb
jg
stc
test
call
dec
sbb
popf
pop
or
sub
in
jmp
push
sahf
xor
jmp
aad
in
push
iret
pop
xchg
ljmp
ljmp
pushf
xchg
mov
fisubs
pop
repz
iret
mov
push
movl
sbb
cmpsb
push
les
jns
lea
inc
fistpll
mov
leave
adc
mov
xchg
stc
dec
sub
test
cmpsb
fsubrl
ret
xor
pop
dec
push
pushf
pop
in
loope
inc
jmp
popf
pop
outsl
cmpl
add
call
mov
pop
dec
sbb
xor
xchg
inc
cmp
addr16
cmp
and
mov
mov
mov
das
out
inc
push
inc
cmp
outsb
mov
jge
fnstenv
lods
or
adc
gs
fcomp
dec
add
dec
loop
cmpb
aad
or
scas
cmc
sbb
mov
ror
adc
repz
rclb
orb
nop
js
imul
out
bswap
aaa
fmulp
push
add
loop
insl
clc
ja
je
add
call
frstor
cmp
lds
sbbb
mov
sub
push
add
sbb
jp
enter
hlt
adc
fs
push
call
rcll
in
aam
pop
push
lahf
xchg
mov
nop
or
inc
xchg
mov
xor
ret
jge
or
inc
and
subb
mov
inc
and
push
jle
pop
clc
xlat
movsl
and
mov
fldenv
cmp
sbbb
mov
out
stos
cld
cmpsl
ja
or
lock
call
add
or
pop
test
mov
test
push
push
adc
dec
in
xchg
pop
sbb
mov
ret
aam
mov
aad
call
xchg
scas
cld
sub
xchg
pop
sub
hlt
mov
jmp
xor
call
mov
xor
rclb
sarl
jl
xor
adc
xchg
in
hlt
jge
or
hlt
cmp
jno
mov
js
int3
test
add
mov
add
call
sub
movsl
add
fimull
push
sbb
js
jecxz
jnp
jp
dec
xlat
mov
scas
popa
aas
aaa
xchg
fcmovb
mov
gs
cwtl
fs
adc
jnp
xchg
adc
sbb
int3
sub
nop
mov
ds
jae
sub
sbbb
js
jge
mov
mov
jmp
mov
jb
inc
jno
mov
test
cmp
je
loop
cmp
ret
inc
in
outsb
jae
xchg
push
add
call
mov
and
mov
dec
sbb
aad
stc
inc
mov
leave
cmp
mov
mov
sub
roll
inc
mov
sbb
inc
cltd
lret
test
aad
push
scas
mov
pop
lods
repz
paddsb
subl
lock
xor
pop
scas
and
xchg
xor
arpl
sub
xchg
mov
testl
adc
mov
and
mov
cmp
ljmp
xchg
add
add
cmp
scas
xchg
adc
fwait
push
faddl
notl
xchg
and
or
rorl
mov
testb
mov
xor
pop
std
or
inc
xor
jns
mov
pop
sbb
add
push
xor
push
jge
loopne
cmp
add
mov
push
cmp
jp
fstpl
pop
cltd
jle
push
shll
jecxz
dec
aam
dec
add
mov
cpuid
jbe
jbe
sbb
insb
lock
cmp
inc
push
push
sub
cmpsl
sarb
rolb
add
call
add
stos
xchg
push
insl
fnsave
test
jnp
push
dec
sbb
push
jecxz
fisttpll
cmovp
hlt
add
adc
dec
xchg
add
cmp
out
outsl
movl
jp
divb
js
in
or
rcrb
jb
push
sub
dec
mov
xchg
mov
aad
les
rcr
push
sar
decl
sahf
je
sbb
adc
in
loop
jl
and
inc
int
add
call
aam
cmpsl
sub
aas
sbb
mov
pop
js
mov
outsl
es
jne
pop
adcb
pop
adc
sub
sti
sub
push
repnz
or
sbb
fs
push
js
pop
rclb
hlt
inc
add
xor
outsb
cld
jmp
mov
clc
push
bound
mov
insb
cmpb
rol
or
and
jge
cmp
cld
mov
aam
mov
int
das
pop
and
jbe
add
call
pop
aad
add
and
clc
rcrl
sub
push
std
jbe
xchg
mov
pop
lret
int
mov
adc
add
ret
daa
insl
int
popf
push
xchg
pop
and
or
cli
es
fstpt
mov
movzwl
cmp
dec
push
push
lahf
inc
xor
adc
clc
inc
cmp
and
pop
cmc
fwait
inc
mov
outsl
fistl
inc
adc
inc
fdivrs
in
fdivl
jae
push
jg
movsl
ret
pop
mov
lret
and
mov
call
js
jmp
mov
jl
push
pushf
in
push
xor
or
dec
shlb
xor
mov
push
xlat
inc
jne
jmp
roll
mov
mov
or
fiaddl
ljmp
mov
das
xor
shll
jnp
js
enter
les
xor
jae
xor
push
adc
bound
jmp
hlt
cmp
cli
jne
cmp
inc
mov
js
inc
fstl
lcall
call
outsl
cld
into
push
nop
fisttpl
stos
int3
enter
shl
loope
xor
sahf
pop
je
fs
pop
xor
fs
fdivrp
fisttpll
aam
lock
outsb
pop
jl
popa
int3
rorb
inc
ret
js
inc
cwtl
or
sub
add
mov
ds
and
push
sbb
iret
lods
adc
ret
imul
into
pop
out
movsb
je
cmpsl
pop
xchg
roll
push
rol
push
pop
aam
mov
sbb
call
repz
addb
call
loope
xchg
aaa
mov
cmpsl
mov
das
enter
or
xor
adc
xchg
notl
ret
xchg
cmpsb
mov
and
daa
adc
push
pop
xchg
stos
out
clc
es
lock
lods
xchg
jbe
mov
sbb
adc
push
mov
stos
pop
div
or
pop
js
mov
or
negl
sbb
mov
inc
pop
xor
mov
fstp
dec
push
adc
sbb
lds
xorb
fisubl
mov
int
add
call
xchg
inc
insb
cld
xor
daa
sub
in
sbb
or
push
mov
mov
sbb
jne
cmpsl
cld
xor
nop
or
and
pusha
pop
xchg
sarl
in
shlb
fsts
lret
lcall
xchg
popa
mov
pushf
loop
and
hlt
inc
lods
idivb
out
out
ret
xor
adc
jecxz
jmp
out
push
in
jbe
xchg
or
or
lock
loope
cmp
mov
cmp
inc
pop
pop
es
and
cmp
xchg
insl
add
call
je
sbb
cwtd
inc
or
add
sbb
pop
jp
dec
cmpsl
jns
out
repz
iret
jbe
xor
lock
jae
sub
jb
sbb
fs
and
and
mov
jle
scas
test
mov
std
or
insl
push
push
jmp
fucom
sbb
push
fsubr
lcall
push
insb
mov
sti
pop
fists
insl
jb
cmp
xor
and
and
lds
outsb
frstor
cmp
dec
cmp
call
aam
lahf
je
fnstenv
xchg
enter
addb
into
jo
out
lea
cwtl
cmpsl
fsts
or
cli
sbb
cwtl
push
insb
add
push
or
dec
shr
cmp
add
push
in
int3
jbe
and
push
dec
daa
mov
mov
mov
and
push
xchg
icebp
adc
leave
outsl
notb
or
add
xchg
test
sub
cmp
mov
adc
int3
js
lcall
xchg
add
add
iret
adc
xchg
aam
in
inc
notl
mov
xlat
cmp
packsswb
in
push
in
xchg
lods
rol
mov
and
xchg
into
das
scas
popf
test
stos
sbb
or
pop
cmpsb
adc
insb
sbb
gs
cmp
dec
lods
pop
lcall
rcl
sub
lock
xor
sbb
testb
or
xchg
rolb
fbstp
push
push
xlat
cmp
test
cmp
push
sub
test
mov
clc
adc
jp
add
call
push
xchg
stos
adc
xor
int3
or
imul
stos
clc
lods
cmpsb
nop
lds
mov
mov
xchg
xchg
int
add
sub
repz
push
jecxz
push
sahf
jbe
popf
sbb
mov
stc
ja
inc
push
int
aam
pop
cwtl
cmp
jecxz
aas
pop
cmc
dec
shrl
rol
pop
pusha
mov
jmp
sub
adc
orl
xchg
test
js
sub
out
dec
outsb
mov
pop
iret
lea
call
mov
ffreep
push
imul
dec
leave
scas
adcb
xlat
lock
jmp
xor
movsl
sbb
lret
ret
adc
repz
mov
inc
aas
scas
xchg
sub
inc
fcomps
sbb
sub
push
repz
rorb
insb
int
jge
mov
ds
dec
lahf
data16
jae
scas
cwtl
adc
lods
cmp
jge
pushf
and
fs
mov
aad
in
mov
inc
add
jl
repnz
xlat
mov
call
jmp
xchg
lods
cmp
pop
int
out
test
and
icebp
push
insb
sbb
push
sub
ljmp
popa
adc
cmp
bound
clc
cwtl
mov
in
pop
loope
clc
lret
aaa
xchg
xchg
sub
sub
sbb
adc
xchg
andl
stos
mov
pop
sbb
movsb
jno
fildl
add
cmp
or
outsl
rcr
lds
adc
lock
test
lods
dec
pop
add
call
dec
in
cmpl
inc
mov
enter
cli
xor
add
int
lcall
neg
incl
lds
ljmp
ja
xor
frstor
repz
push
jnp
fucom
stc
pop
xor
std
jo
mov
imul
ljmp
xchg
fwait
xor
xchg
cmc
ret
mov
inc
in
in
pop
or
sbb
icebp
lcall
fiaddl
push
mov
dec
fcmovnbe
add
or
jo
sarl
add
call
xor
dec
cmpsb
nop
pop
inc
out
xchg
sbb
adc
xchg
pop
fwait
push
iret
imul
inc
sub
jecxz
je
cwtl
faddl
mov
enter
cld
orl
loop
inc
stc
gs
xchg
out
mov
ds
sub
mov
add
int
jl
ds
xor
bnd
xor
shll
and
daa
mov
mov
lahf
out
ret
mov
mov
std
xor
pop
add
cmp
mov
sub
add
call
fs
mov
lods
or
and
mov
lret
std
jae
sti
icebp
ret
xor
imul
cs
out
cmc
fwait
add
nop
fwait
xor
adc
inc
cmc
and
scas
pop
sub
adc
repz
jno
cmp
leave
test
insl
mov
popf
mov
xchg
inc
xor
and
mov
mov
inc
mov
xorb
sub
mov
jmp
imul
call
push
xor
and
jnp
cli
dec
scas
pop
mov
ret
movsl
push
inc
loope
int3
xchg
and
or
cmp
xchg
mov
mov
in
inc
add
adc
and
sub
cmc
sbbb
sahf
faddl
mov
in
jnp
cmp
insl
mov
jp
xchg
sub
jl
mov
adc
iret
je
jmp
pop
xchg
xchg
inc
jo
lret
mov
bound
or
insb
inc
xchg
cmp
scas
insl
push
add
call
mov
int
add
aaa
push
xchg
add
outsl
dec
aas
dec
mov
add
je
jl
push
push
scas
test
or
int3
add
cmpb
jmp
imulb
lock
jns
ret
push
pop
and
mov
fldl
bswap
inc
mov
jb
jns
cwtl
dec
imul
push
in
inc
ret
inc
jge
inc
dec
out
push
dec
mov
sbb
mov
ss
sbbb
aad
loopne
sahf
inc
xchg
ljmp
call
out
fwait
sahf
shr
les
jbe
mov
dec
xchg
es
repz
inc
test
in
rcrl
movsb
enter
jge
in
les
fbstp
fwait
push
outsl
pop
popf
imul
lret
pop
lods
pop
into
cmp
xor
mov
pop
sahf
mov
add
xchg
xchg
xor
pop
mov
xchg
mov
sub
les
jp
addr16
or
inc
fwait
movsb
loope
nop
daa
sahf
mov
lea
inc
lcall
pusha
js
inc
pop
mov
add
call
mov
adc
mov
inc
inc
fstp
sbb
cmp
jmp
jmp
sub
mov
fldcw
in
mov
out
fsubrs
arpl
aaa
bound
fstpt
mov
jnp
xlat
aaa
cmc
scas
ficoms
xor
outsl
jb
movsl
sub
sub
and
sub
add
xchg
mov
and
icebp
mov
xor
shll
dec
lret
bound
sbb
adc
inc
pop
pop
sti
jmp
sbb
call
add
addr16
push
ficompl
sub
mov
sbb
adc
mov
sbb
testl
inc
idiv
or
push
mov
mov
sbb
je
cli
lret
lods
in
xchg
imul
mov
sahf
lret
add
xchg
xor
push
mov
push
jne
cmc
jmp
fildl
push
data16
icebp
js
mov
xchg
fiadds
add
cltd
xchg
push
mov
insb
fsub
push
add
sbb
adcb
add
call
add
adc
adc
add
or
sbb
jno
push
add
xchg
fnsave
adc
xorb
fistpll
in
icebp
push
pop
push
ss
push
ds
ret
pop
popf
mov
popf
sbb
pop
adcl
pop
mov
push
mov
sbb
repnz
lret
imul
ss
sub
and
xchg
stos
popf
push
xlat
gs
and
sbb
jp
push
push
aam
pop
clc
add
call
xor
inc
lea
mov
sbb
pop
hlt
nop
scas
push
xchg
mov
data16
jmp
shlb
out
xor
out
push
push
int
sbb
xchg
or
jge
fisubrl
in
add
mov
inc
jns
dec
stos
mov
dec
fstpl
popa
ja
mov
pushf
bound
sbb
and
jle
sub
xchg
mov
mov
fstl
sbb
scas
aam
mov
mov
mov
add
call
and
sbb
test
mov
rcrb
add
sub
jmp
mov
xor
sbb
jbe
cs
data16
ret
std
imul
xchg
mov
adc
outsb
xchg
sarb
jno
and
ficompl
push
add
pop
push
inc
lahf
out
test
push
icebp
cmp
stos
pop
std
adc
arpl
add
lcall
popf
push
fildl
cmc
cmp
or
test
cwtl
stos
lahf
mov
cmp
flds
add
call
xchg
push
mov
dec
icebp
int3
cmp
ss
adc
out
jl
outsl
push
pop
ret
sarb
sub
lret
cs
xchg
jg
sarl
inc
adc
inc
hlt
xor
jnp
mov
jnp
leave
or
mov
cmpsb
cmp
ja,pn
xor
dec
jne
jnp
jecxz
mov
incl
mov
aaa
stc
mov
or
pop
mov
test
fwait
mov
inc
addr16
jns
rcrb
adc
call
mov
dec
dec
adc
mov
mov
ficoms
xlat
mov
cmp
imul
dec
jbe
cmp
jl
int
xor
push
or
mov
test
dec
aad
push
xlat
icebp
enter
pop
jg
cmpsl
add
jo
cmpb
add
sbb
aas
xchg
daa
adc
mov
pop
sub
lret
sbb
sbb
pop
aam
inc
aaa
mov
mov
out
stos
cltd
lcall
and
xor
das
movsb
mov
scas
mov
test
or
push
enter
lods
mov
call
outsl
xor
sub
addl
repnz
xchg
or
into
or
inc
pop
imul
scas
fdivs
push
cmp
mov
or
mov
mov
sub
xor
push
xchg
pop
cmc
repnz
fwait
push
inc
and
ja
int3
push
ss
xorb
es
xor
ficomps
stc
jl
pop
cmp
cld
outsl
cmp
je
xchg
pop
mov
rcll
mov
jle
stos
shll
jns
loop
mov
add
call
add
push
or
sarb
adc
adc
aam
jnp
ds
pop
and
int3
inc
rorb
hlt
js
enter
out
div
mov
push
test
cltd
mov
in
cmpsb
movsb
dec
in
dec
cmp
push
cmp
loop
scas
xchg
movntq
cmp
mov
int3
cld
lcall
rorb
es
sub
adc
popf
ss
mov
ss
movsb
ror
out
fnsave
call
cld
and
add
sub
mov
ds
dec
xchg
and
or
push
add
cmp
xchg
fchs
push
mov
ljmp
imul
scas
mov
and
add
inc
jno
push
mov
aad
in
xor
out
push
jle
punpckhbw
xchg
adc
push
add
out
pop
jmp
mov
daa
sub
mov
mov
cmp
inc
dec
or
outsl
push
pop
xchg
and
mov
sub
call
cmp
push
xchg
fsubrs
scas
jae
sbb
jge
pop
int3
xchg
call
scas
sahf
inc
xor
lods
adc
loope
push
adc
jp
daa
or
arpl
ljmp
push
inc
in
dec
xchg
push
and
jmp
ja
scas
jae
pop
outsl
popf
sahf
dec
adc
xchg
pop
or
por
push
rcl
add
iret
sarl
xchg
mov
test
sub
test
repnz
pop
mov
xchg
cli
dec
add
mov
mov
add
call
aaa
sbb
int
jne
inc
jae
or
dec
pop
xor
push
push
iret
inc
scas
inc
test
pop
inc
mov
push
data16
aas
test
fisttps
mov
scas
jle
xchg
or
fstpt
sbb
adc
mov
push
cld
and
insb
dec
mov
mov
test
cmpsb
clc
dec
fldl
fisubrs
sbb
fbstp
add
add
test
lahf
rclb
mov
sarl
adc
xchg
nop
cltd
mov
call
jb
insl
mov
mov
pop
inc
ret
std
outsb
push
sub
xor
pop
pusha
test
inc
pop
mov
nopl
xchg
aad
sbb
out
sbb
in
inc
hlt
push
int
lods
cmp
mov
xor
pop
cltd
stc
xor
push
loopne
insb
cmp
mov
lret
insl
dec
test
frstor
sub
xchg
lods
add
shll
sti
mov
mov
arpl
lock
push
mov
add
dec
dec
push
ja
add
or
iret
dec
repz
add
pop
dec
push
xchg
mov
call
in
mov
pop
push
hlt
push
lcall
mov
lds
f2xm1
xchg
clc
mov
cwtl
xor
xchg
sub
repnz
fldt
data16
sbb
mov
sub
mov
and
mov
mov
lods
jb
and
shrb
cmp
or
loop
xchg
sbb
sub
out
xor
jmp
push
fmuls
jmp
inc
dec
ret
in
or
jmp
hlt
scas
add
mov
push
pop
movsl
push
cmp
add
call
jl
scas
jnp
xor
xlat
mov
inc
fxtract
jbe
insb
cltd
jns
inc
pop
mov
jle
sbb
adc
fsts
add
add
xchg
cmp
shlb
cmpsl
cmp
and
sub
inc
cmovnp
sub
sub
xor
fistpll
fists
mov
lds
sbb
js
daa
cmp
je
loop
shr
xor
inc
popa
xor
lahf
mov
dec
frstor
jmp
aaa
add
call
andb
sub
mov
es
movsb
sbb
adc
adc
push
jo
adc
mov
stc
aad
loope
mov
jl
adc
push
fimull
dec
aam
push
adc
jae
in
mov
mov
mov
or
mov
mov
rcr
xchg
repz
sub
and
add
out
push
test
push
or
inc
and
popf
pop
out
call
jecxz
decl
cmp
add
call
sub
repz
mov
cmc
xchg
xor
or
sahf
pop
inc
cs
stc
jmp
lock
cli
jbe
test
pusha
mov
xchg
add
in
xor
or
movsl
lods
insl
push
dec
bound
xor
push
call
xor
test
cmc
mov
inc
adc
dec
adc
push
loope
ljmp
fsubrp
pop
jno
push
dec
and
jne
add
outsb
je
fists
cmpsl
addr16
sub
and
fwait
sbb
leave
filds
add
call
xchg
test
jmp
jnp
lock
xor
jo
aas
sbbl
sbb
test
pop
adc
inc
xchg
sbb
jns
jg
shrb
arpl
cs
out
dec
es
jmp
push
inc
cmp
cld
push
outsb
test
cmc
cli
dec
and
cmp
sub
cmpsb
lea
inc
test
lcall
sbb
pop
aam
or
jae
in
mov
mov
sbb
pop
jo
das
add
call
and
stos
and
jg
pop
scas
sahf
je
inc
into
testb
lds
mov
adc
ffreep
and
and
push
ret
lods
and
pop
lods
mov
lret
xor
mov
xor
jns
mov
xor
sub
stc
xor
jne
inc
push
adc
out
sbb
or
sub
or
mov
test
mov
push
mov
fadds
out
scas
decl
imul
divb
imul
and
call
int
roll
adc
iret
cmp
jecxz
lods
or
lock
in
mov
rorb
mov
insb
cwtl
xchg
nop
push
int
mov
jne
mov
fisubl
sub
inc
das
mov
ret
inc
or
and
mov
inc
ret
cli
cltd
ja
lret
lcall
jp
dec
sub
adc
dec
jg
pop
pushf
mov
fdivrl
sbb
popa
popf
imul
cmp
pop
add
in
shll
or
pusha
test
pop
mov
add
call
push
push
mov
ret
pop
fwait
sbb
dec
leave
xor
fnstenv
mov
stos
mov
sbb
adc
pop
js
call
das
adc
mov
mov
cmp
mov
and
ret
jge
divb
mov
hlt
arpl
adc
pop
mov
mov
hlt
pop
sub
insl
lods
lret
fcoml
adc
lods
xchg
aad
inc
stos
jns
loopne
in
add
mov
cmpsl
mov
pop
ret
ja
pop
push
test
pop
add
call
mov
mov
mov
daa
adc
mov
pop
in
jle
ret
int3
ds
add
xor
lds
sbb
sub
jecxz
mov
ret
mov
js
into
and
int
in
dec
or
xchg
fnstcw
jmp
pop
mov
add
outsb
xchg
pushf
dec
cmpl
adc
and
dec
scas
fsubrs
and
sbb
orl
rolb
inc
pusha
lds
push
dec
inc
add
call
mov
mov
icebp
or
adc
popa
adc
cmp
addr16
mov
pop
jne
inc
xchg
jne
add
ret
mov
movsl
mov
aaa
pop
test
or
scas
ss
lods
or
push
in
add
jne
lds
cli
or
jnp
sub
mov
stos
fstp
sbb
imul
xchg
jb
cmpsb
movsl
cmpsl
xor
cmp
xchg
mov
mov
push
addr16
add
call
xchg
cltd
loopne
mov
sbb
mov
sbb
stc
sub
insl
clc
shrl
ja
xor
xor
xchg
xchg
lret
in
jo
fwait
push
ret
pop
adc
mov
push
push
lahf
insl
cmp
mov
pop
and
inc
add
popa
andl
outsl
xchg
xor
das
jg
shrb
dec
ljmp
ret
pop
das
cltd
sub
fiaddl
inc
jnp
adc
dec
pushf
lods
scas
inc
cmp
sahf
arpl
inc
mov
loopne
and
data16
fiaddl
add
call
pop
xchg
push
or
scas
jno
adc
fcoms
dec
outsb
outsl
mov
sbb
lret
test
adc
test
fists
ljmp
pop
sbb
inc
cmp
jnp
jne
loopne
cmp
sti
adc
cltd
adcl
dec
mov
inc
dec
xor
dec
xchg
pop
pop
push
jl
sub
int3
movsl
dec
lods
repnz
add
adc
mov
loop
dec
xchg
das
mov
add
call
test
inc
mov
subb
mov
add
sub
push
push
ret
inc
adc
dec
mov
out
mov
jbe
popf
je
insb
nop
sarl
sub
rcrb
arpl
repz
jns
fsubrl
xorl
mov
std
mov
mov
stc
pop
aaa
add
das
sbb
dec
fmuls
or
xchg
push
or
fcoms
sti
lods
movsl
mov
sub
lret
fcmovne
xchg
popf
mov
add
call
ss
test
lret
int
pop
inc
iret
push
enter
adc
call
mov
xchg
movsl
outsl
or
scas
aas
sub
popf
enter
out
pop
mov
lds
and
xor
pop
test
dec
dec
aaa
mov
aam
push
mov
ret
shll
xchg
push
jg
call
out
movsb
outsb
jbe
mov
ljmp
fldcw
lret
adc
cs
nop
fsqrt
aas
pop
pusha
movsl
dec
dec
into
sbb
scas
mov
mov
sub
sub
add
call
in
aad
mov
dec
cmp
rclb
mov
push
test
out
jg
aaa
les
lahf
lcall
jg
dec
dec
or
mov
sahf
inc
imul
or
dec
jl
dec
pop
aad
test
xor
js
pop
cmpsl
jnp
cmp
dec
addr16
push
test
test
pop
lock
cltd
xchg
repz
mov
cli
sbb
jge
imulb
loop
cmp
or
and
xchg
inc
arpl
mov
mov
call
mov
and
jnp
jae
sbb
xor
outsb
jmp
inc
xchg
push
ljmp
push
mov
std
sarl
mov
push
mov
inc
imul
mov
aam
inc
mov
pop
popa
ja
hlt
ss
movsb
and
negl
ret
xor
pop
in
inc
adc
int3
cs
cld
aam
adc
xor
and
add
xchg
and
and
or
mov
jg
dec
xchg
arpl
shrl
add
call
pop
repz
mov
out
loopne
movsl
push
mov
jmp
and
scas
lods
rolb
pop
pop
pop
cld
lret
es
mov
lret
scas
pop
jecxz
push
jns
lahf
mov
out
or
stos
out
push
mov
ja
mul
rcll
jnp
in
es
loope
jbe
dec
mov
push
xchg
test
xlat
xchg
imul
push
fwait
out
adc
idivb
clc
add
lcall
in
icebp
aam
mov
sbb
add
call
cld
and
pushf
add
daa
push
sub
jp
fistl
sbb
scas
inc
push
ret
aaa
jns
and
or
mov
testb
repnz
or
fneni(8087
clc
outsl
cmp
jmp
enter
ja
mov
stc
pop
lods
shlb
mov
out
mov
or
movsb
int
push
sbb
cmc
nop
xchg
test
and
adc
je
mov
or
dec
xor
push
repz
or
or
sub
and
call
daa
xchg
or
xor
dec
jo
stc
jge
stos
pop
push
jge
neg
mov
out
movsl
push
cltd
popa
and
rcl
and
add
or
dec
and
ja
mov
ss
push
ss
adc
cmp
adc
repz
gs
rorl
xchg
mov
add
fsubp
dec
fs
add
mov
out
jae
add
stos
fdivl
shl
xor
push
je
mov
mov
xchg
loopne
iret
and
add
call
dec
or
xchg
cmc
sahf
mov
mov
jg
cmp
pop
popa
mov
or
add
lahf
adc
dec
jmp
gs
je
push
lcall
cmp
cmc
cwtl
aad
add
cli
icebp
dec
inc
in
ja
mov
xor
cmp
iret
dec
js
rclb
or
mov
ljmp
or
jecxz
fsubrl
jg
iret
js
and
pop
int
mov
mov
dec
push
sti
and
add
call
and
dec
sub
cld
add
ds
js
fwait
rcll
shrb
fistpll
lods
mov
mov
lods
or
sbb
pusha
pop
lock
insb
mov
aas
fbstp
fbld
inc
mov
sbbb
or
shrl
rcrb
lea
push
int
rcrb
pushf
xchg
xchg
and
cmp
mov
mov
hlt
iret
mov
xchg
lret
loope
sub
stc
jmp
mov
pop
cmp
daa
rorb
call
mov
or
dec
jle
xor
ss
sbb
sub
sbb
imul
loop
cmpb
sub
dec
stos
adc
cmp
outsl
or
je
xor
arpl
in
jge
repz
pop
push
sub
sbb
mov
mov
dec
iret
add
in
je
add
cwtl
push
cwtl
pop
rcrl
shll
shrl
mov
sub
test
daa
cmp
lcall
xchg
add
add
mov
adc
pop
scas
mov
jbe
out
and
popf
pop
push
jmp
add
push
adc
dec
pushf
fxch
sbb
xor
inc
sub
inc
cld
cmpsl
xchg
mov
sub
xchg
inc
loopne
or
sub
xchg
mov
scas
push
inc
stc
adc
in
pop
mov
rolb
aam
rcr
lock
mov
jo
jno
inc
jnp
jecxz
push
je
je
mov
push
jle
int
adc
sti
and
test
jo
sub
dec
xorb
add
call
aam
mov
loop
iret
clc
aaa
cmp
push
mov
push
mov
outsb
das
xchg
hlt
imull
rcl
push
jb
dec
inc
ljmp
jmp
xchg
push
mov
popf
hlt
shrb
loope
pop
insl
les
push
xchg
jo
sahf
call
and
add
gs
inc
xor
outsb
gs
xor
in
pop
mov
mov
iret
inc
or
in
jge
test
inc
out
inc
dec
jnp
pop
aaa
repnz
call
push
cs
adc
push
xlat
inc
mov
adcb
mov
js
mov
icebp
sbb
and
sbb
movsb
std
jae
or
lea
add
push
ljmp
or
mov
cmp
dec
add
dec
cmpl
push
lock
mov
xor
stos
lock
pop
mov
jne
int
loopne
inc
cli
dec
xchg
add
cmpb
ret
shll
sahf
ror
push
sub
ja
add
call
loopne
pop
in
cs
clc
sub
or
dec
xor
dec
jecxz
xchg
out
leave
hlt
adc
enter
sti
cmp
push
mov
pop
cwtl
or
ja
or
js
test
shrb
cmp
ja
push
xor
pop
mov
adc
dec
pop
movsb
ret
push
shrl
dec
dec
cltd
sbb
sub
or
add
loope
mov
push
js
mov
in
sub
mulb
cmpsl
test
or
xor
push
cmpsl
add
call
push
and
enter
mov
xchg
inc
jno
sbb
mov
mov
cmp
je
test
lods
aas
dec
test
mov
xchg
adc
mov
test
push
or
xor
int3
mov
mov
icebp
sbb
jg
inc
mov
daa
or
popl
push
in
mov
fiadds
loop
sti
andb
jo
adc
js
add
push
add
call
in
sbb
and
xchg
mov
dec
fwait
imul
and
stc
loope
fidivl
mov
xor
nop
mov
sbb
push
das
mov
ljmp
repz
cmp
add
nop
jl
inc
pop
call
mov
shll
jb
pop
test
ss
popa
and
pop
aad
push
loopne
std
outsb
scas
jno
andb
pop
add
cld
mov
lret
pop
out
adc
jae
cltd
icebp
sbb
int
andl
call
sub
cmp
xor
sbb
repz
daa
lods
out
lock
pop
arpl
pop
xor
xchg
push
das
jns
push
jmp
jns
nop
scas
mov
adc
sti
mov
insl
mov
sti
and
mov
cmp
gs
push
arpl
jnp
inc
pop
add
or
pop
jno
dec
ja
add
push
cs
aam
das
incl
pop
lret
insl
int3
push
cmpsb
dec
push
sahf
mov
adc
mov
mov
add
call
xchg
xor
and
mov
dec
dec
adc
data16
in
insl
pop
sbb
out
and
xor
dec
stos
out
insb
add
pop
notb
xor
daa
leave
xchg
popa
push
cs
in
lahf
cmp
lcall
aam
and
lcall
cmpsl
dec
mov
stos
push
out
push
push
in
jp
xchg
fwait
and
rcrl
lea
popf
mov
shrb
into
jge
in
pop
cmp
aam
dec
mov
int
adc
call
inc
adc
sbb
fisttpl
cmp
xchg
nopl
sbb
stos
jle
test
nop
mov
push
in
mov
push
stc
popf
add
jns
dec
and
dec
inc
and
imull
dec
pop
hlt
ficompl
shl
inc
push
aad
sbb
out
inc
in
fcmovnb
popa
xor
aam
dec
cmp
mov
aam
add
and
mov
pop
mov
add
xchg
inc
in
add
xchg
fimuls
js
add
call
xor
repnz
in
push
in
mov
loope
add
or
xor
and
pop
adc
pop
sub
jge
dec
int3
imul
dec
bound
push
xchg
mov
xchg
pushf
pop
push
bound
test
sub
sti
icebp
lods
fmull
cwtl
fdivrs
fsubrs
leave
ficoml
or
or
mov
cmp
out
push
mov
inc
adc
divl
push
xorl
int3
addr16
call
lcall
mov
inc
jmp
inc
cwtl
add
scas
cltd
fildl
sub
xor
insl
and
mov
dec
mov
mov
sbb
frstor
shll
push
jecxz
test
mov
inc
fidivrl
sub
out
repz
in
push
movsb
add
xlat
inc
dec
mov
lods
and
pop
in
aad
sbb
jb
mov
pop
add
in
sbb
sub
push
fistl
fsubrs
inc
rorb
sub
sbb
add
call
pop
in
lock
addr16
xor
outsb
cmp
adc
cmp
xlat
and
pop
inc
mov
mov
daa
pop
push
add
cmp
push
leave
sub
movsl
es
mov
insl
cli
ljmp
or
popa
pop
sahf
push
ror
cs
and
pop
loopne
jl
bnd
or
pop
sbb
push
in
mov
inc
or
xchg
cmc
fs
jae
scas
fs
ficomps
cmp
call
and
leave
sbb
cmp
pop
test
jmp
dec
in
mov
sti
ss
mov
dec
mov
sub
jmp
jecxz
sahf
fnstcw
imul
push
inc
cmp
mov
outsl
gs
lret
mov
sarw
pop
repnz
mov
mov
xchg
fdivl
dec
pop
inc
mov
push
sub
pop
aas
xchg
and
in
pop
js
icebp
xchg
out
mov
jg
mov
daa
pop
push
icebp
and
aaa
cmpsl
movsb
xor
add
call
xchg
stos
xchg
lret
fstpl
sub
cs
lret
dec
and
mov
pop
jno
jmp
mov
stos
test
inc
and
ret
aam
push
push
jmp
hlt
push
stos
das
leave
int3
icebp
adcb
sbb
pop
js
jge
mov
sbb
jg
out
aam
mov
xchg
pop
sbb
push
in
xor
ret
mov
xor
sbb
fisubs
adc
and
xor
push
xchg
mov
dec
sbb
dec
aam
and
add
call
movb
jmp
add
movsl
loope
sub
pushf
lods
xor
xor
icebp
sub
bound
icebp
ljmp
dec
push
push
push
ja
fildl
insl
mov
or
cltd
mov
in
xchg
pop
test
mov
sar
mov
and
dec
jmp
mov
or
sbb
mov
jp
inc
mov
or
fistpll
mov
adc
xchg
fsubrp
aaa
jmp
push
mov
sbb
and
inc
ret
rolb
add
call
dec
jge
dec
mov
dec
and
out
nop
pusha
inc
aas
mov
mov
fidivs
and
jbe
and
loopne
adc
mulb
mull
cmp
adc
jle
test
outsl
and
sbb
andl
lock
fdivl
jecxz
add
es
ret
scas
test
push
lds
lock
sahf
jecxz
gs
mov
and
jno
add
fisubrs
xchg
imul
adc
dec
push
and
add
call
sub
mov
push
ss
dec
jle
xor
mov
cmp
xchg
and
repz
fcomps
sarl
cmc
aas
mov
fldl
testb
lock
leave
loope
dec
mov
fs
sbb
add
ds
mov
mov
fs
jae
rcr
enter
push
js
jp
mov
cmp
pop
dec
je
addr16
sbb
and
xchg
incl
and
stc
movsb
mov
ret
cmp
call
mov
aad
sub
push
jae
mov
push
cmp
adc
insb
and
imul
push
inc
shl
pusha
ret
cmpsl
cmpsb
xchg
nop
je
cmpsl
nop
sar
dec
inc
push
loopne
cltd
and
jo
mov
pop
add
sbb
cmp
pop
out
jns
dec
jg
pop
mov
push
pop
mov
scas
jno
mov
es
or
cmpsb
js
jmp
jp
hlt
jle
ljmp
push
jae
inc
jle
adc
cs
test
loop
inc
loopne
movsb
mov
add
call
adc
mov
dec
jmp
test
into
pusha
push
icebp
fstl
cmp
cltd
mov
popa
xor
dec
jge
rcrl
mov
mov
lods
rorl
sbb
mov
lods
dec
xor
lea
jb
mov
lret
pop
dec
out
lret
push
adc
fstpt
inc
sub
mov
mov
jbe
mov
pop
dec
pop
testl
jno
mov
movsb
lods
jmp
call
xorb
sub
push
sub
aam
xchg
bound
jae
les
outsl
xchg
sbb
push
xlat
dec
ds
mov
divb
inc
rcrl
lcall
pusha
xor
repz
sub
jmp
mov
and
push
subb
add
rorl
sub
sbb
adc
push
dec
es
jae
enter
or
dec
cmp
adc
leave
leave
jmp
push
int
sbb
add
adc
lret
cld
pop
les
imul
add
call
xchg
and
cmp
xchg
xor
icebp
aam
jnp
aam
int3
gs
adc
loop
add
mov
cwtl
or
rorl
es
inc
in
in
enter
xchg
insl
or
out
add
mov
push
pop
mov
jmp
sub
jle
dec
push
fstpt
inc
es
mov
and
decb
popa
stc
dec
popf
sbb
popf
push
loopne
dec
std
pusha
add
pop
cmpsb
rcpps
mov
push
add
call
sbb
and
movsb
in
xor
inc
es
jmp
int
testb
out
inc
sub
andb
sub
push
xchg
xlat
add
mov
cltd
xchg
fdivrs
sub
stos
inc
sbb
push
xchg
xchg
fcoms
in
popa
xor
je
jne
jnp
inc
pop
out
adc
fbld
leave
imul
jnp
fucom
movsb
mov
loopne
ret
leave
dec
cmp
in
stos
dec
push
inc
add
mov
daa
jb
lret
aas
lods
lahf
add
call
add
stos
test
in
push
dec
xchg
mov
lods
mov
dec
xor
into
popf
fisttpl
decl
mov
xchg
rcl
mov
mov
syscall
clc
rcll
test
xor
into
rorb
cmp
xor
cmc
scas
and
or
push
or
and
cmpsb
ljmp
test
push
or
xchg
xchg
lea
orb
call
xchg
adc
xchg
lret
mov
dec
pop
and
loope
and
mov
xor
pop
sbb
movsl
xor
fnstcw
sub
leave
ret
inc
jae
data16
shrb
mov
pop
and
cs
push
xor
or
lock
enter
insb
sub
or
sub
daa
das
or
adc
in
rcrl
fimull
adc
adc
mov
dec
lret
fistpll
add
pusha
mov
push
and
add
call
mov
mov
and
les
sbb
ret
cmp
adc
pop
or
pop
popf
cli
xchg
mov
push
imul
xchg
ja
in
cli
xor
dec
repnz
adc
mov
stc
inc
or
ss
popf
out
pop
ficoml
and
inc
add
loopne
inc
and
sub
jbe
push
in
shl
xchg
je
mov
imul
sub
or
or
iret
rcll
push
idivl
int
fnstcw
call
sti
add
push
or
aam
or
and
aam
mov
add
pop
cld
pop
mov
add
cmp
and
inc
incb
out
nop
push
push
repnz
mov
push
mov
incl
cmp
testb
faddl
popf
je
or
out
jp
movsb
xchg
pop
push
stos
shll
pop
cld
cltd
cmp
out
cmp
test
test
repnz
pop
repnz
addr16
lea
add
call
lods
jo
mov
xchg
cmp
inc
ds
xchg
shrb
xor
sub
mov
sahf
pop
arpl
int3
xorl
shll
add
ljmp
jno
adc
test
fisubrs
popf
push
test
adc
ljmp
loop
sbb
sti
hlt
mov
call
jae
add
jp
xor
push
mov
inc
and
and
jp
mov
int
imul
push
pushf
inc
pop
inc
lret
mov
in
inc
mov
add
call
sub
inc
aam
in
xchg
sbb
and
add
or
jo
fldt
loope
loopne
inc
js
fdivrl
insb
adc
cmp
arpl
pop
hlt
sub
jge
or
inc
sbb
mov
dec
test
popf
sbb
iret
je
test
mov
adc
in
gs
push
roll
inc
in
sbb
mov
mov
inc
movsl
pop
push
xchg
movsl
shll
js
add
call
sub
mov
clc
andb
xchg
cmpsb
int3
pop
push
xor
mov
sahf
pop
push
adc
ds
mulb
pop
call
jmp
sbb
jo
popa
mull
loopne
sbb
pop
adc
sbb
lds
xchg
or
cs
push
jecxz
std
pop
popf
nop
sbb
pop
xor
jge
sbb
push
jns
in
shll
mov
jle
jl
jle
rcrb
daa
xchg
mull
mov
sub
scas
dec
subl
add
call
loopne
cmp
aam
lahf
test
jns
bound
jbe
xchg
out
stos
fldenv
pop
popf
aas
mov
pop
xor
clc
cli
fsubs
sbb
jnp
inc
aad
push
ss
gs
lock
dec
add
jne
shrl
cwtl
sbb
dec
fnstsw
sbb
sub
in
mov
nop
jae
aad
add
push
pop
push
add
adc
cld
mov
xor
or
out
aas
test
sbb
add
call
fsubrp
cmp
xor
std
xor
push
inc
push
lret
xor
fiadds
notb
push
push
std
adc
adc
leave
cwtl
mov
cltd
rclb
inc
aas
std
cmp
pop
push
inc
or
cmp
cld
daa
cltd
test
scas
push
loope
jb
push
mov
mov
lods
push
push
cmpsl
add
rclb
mov
dec
testb
das
dec
pop
sti
push
pop
out
shrb
out
mov
mov
rcrb
movsl
nop
outsb
pop
jae
xchg
mov
sbb
loope
dec
icebp
fstpl
call
and
lds
std
mov
add
and
fwait
mov
xchg
addr16
lock
dec
rolb
stos
mov
fidivs
xchg
cmp
js
mov
lret
add
pop
dec
xlat
dec
shlb
pop
lock
dec
dec
and
mov
pop
dec
ds
jb,pt
mov
adc
dec
pop
cmp
icebp
or
mov
inc
aam
inc
mov
dec
lock
adc
movsb
in
cmp
add
call
hlt
popf
shrl
in
inc
sub
add
xchg
push
out
incl
int
repnz
sarb
pusha
addl
jge
inc
int
xchg
aam
lahf
repnz
mov
or
pushf
mov
inc
loopne
dec
push
repz
sub
mov
imul
jo
mov
bound
xchg
cmp
xchg
jl
pop
jge
sahf
call
das
loope
sahf
mov
and
mov
mov
loop
sub
push
outsl
mov
lret
call
lea
add
call
xchg
outsl
inc
mov
mov
dec
jmp
out
std
imulb
sbb
mull
sub
and
outsb
out
adc
mov
adc
insb
mov
sti
int3
mov
rorl
or
cmc
mov
xor
cmc
jno
adc
adc
mov
int3
xchg
fdivrs
mov
adc
fdiv
sbb
outsb
loopne
xor
sti
xchg
fistpl
pop
push
add
inc
mov
lods
loop
push
mov
test
mov
call
pop
xor
dec
jo
stos
mov
mov
pop
inc
pop
cmpl
idivb
xor
cmp
sub
mov
scas
movsl
ja
arpl
out
sbb
test
stos
mov
inc
je
aaa
cli
mov
mov
mov
test
adc
adc
fisubrl
int
mov
out
sub
sbb
hlt
push
sub
xchg
push
xchg
sbb
cmp
cmp
pushf
or
and
cmp
das
je
jo
or
xlat
sbb
add
call
and
fbld
int
call
movsl
sarb
lret
popa
mov
pop
xorb
mov
and
mov
or
pop
dec
int
or
and
add
or
sbb
out
scas
shr
dec
mov
int3
rclb
lahf
xchg
jl
xchg
jno
mov
aad
shlb
jecxz
mov
outsl
push
fiaddl
sahf
mov
notb
inc
jns
out
xor
mov
ret
cmpl
xchg
sbb
add
call
out
cmpb
pop
leave
xor
pop
out
loop
mov
xchg
push
adc
std
fsubs
pushf
lods
aad
dec
les
sub
jo
inc
cmpsb
ds
adc
lret
or
std
jo
pop
fmull
cs
out
in
and
cmp
das
sub
mov
push
inc
sahf
adc
jbe
and
testb
dec
mov
sbb
iret
mov
mov
jae
mov
iret
loopne
xchg
push
xor
inc
and
add
call
push
xchg
jge
scas
data16
fwait
cmp
adc
pop
idivl
mov
inc
pop
inc
dec
lock
insb
ljmp
sbb
jge
stos
and
and
sub
ret
lock
testl
movsb
es
gs
xor
stos
fwait
push
mov
sbb
or
sti
pop
rcrb
mov
movsb
int3
call
jno
gs
mov
push
push
mov
sub
cmpb
or
ds
xchg
add
outsl
add
call
sub
aam
mov
pusha
cmpb
cmpsl
cli
lret
aaa
mov
add
fs
mov
jbe
ljmp
das
push
cmp
pop
and
js
ret
mov
push
push
and
insl
testl
int
daa
push
in
add
arpl
cs
aas
jecxz
cmpb
mov
push
into
mov
or
push
and
xor
jnp
sarb
dec
xor
dec
jne
insb
sbb
sub
les
f2xm1
push
fdivrl
call
mov
lods
loopne
ret
sbb
cmp
jae
ss
addl
push
inc
and
pop
dec
psubd
mov
subl
xchg
jno
cld
dec
inc
cmc
leave
dec
insb
mov
xor
xor
cmp
add
cmpsl
and
cwtl
xchg
mov
mov
loope
in
fnstenv
ror
dec
jle
mov
push
das
and
jmp
xchg
aaa
mov
push
or
das
dec
adc
mov
xchg
add
filds
cmp
add
call
leave
js
repnz
jle
cmp
sti
ds
lds
push
mov
mov
loopne
movsl
daa
daa
aaa
xchg
lea
cmc
xchg
fnsave
enter
hlt
cmp
mov
xor
cmp
pop
test
pop
bound
push
xorb
mov
lds
out
jg
xchg
or
pop
pushf
dec
mov
in
mov
inc
adcl
jecxz
ss
mov
fsubrs
cmp
sub
dec
xor
dec
adc
dec
push
popa
mov
dec
pop
pop
add
call
add
icebp
push
incl
lock
jecxz
stc
shlb
scas
cld
dec
dec
iret
mov
in
sub
into
jl
shll
nop
int
mov
int
imul
into
jae
pop
leave
push
and
test
and
scas
xorb
fidivl
xor
push
loope
jbe
or
call
sbb
add
push
ja
xor
xchg
jae
sub
mov
dec
inc
mov
cwtl
inc
sub
push
mov
sbb
call
jne
cs
xchg
sub
aam
jg
stos
xchg
loop
int3
cmc
xchg
notl
ret
mov
cld
push
idivb
adc
inc
push
push
dec
sbb
jl
add
testl
outsl
pop
jne
sub
into
fisubrs
hlt
dec
xchg
mov
cltd
pop
lret
aam
nop
mov
lods
ret
or
sbbl
outsb
sub
xchg
sbbb
subb
repnz
mov
or
call
inc
mov
and
insl
or
add
call
cmp
pop
pusha
enter
cmp
mov
mov
lcall
mov
mov
testl
mov
ret
shr
sahf
xchg
dec
addl
mov
hlt
not
addr16
dec
jno
mov
in
xchg
fimull
cli
icebp
repnz
clc
icebp
inc
cmpsl
dec
mov
jecxz
mov
mov
ror
lret
lea
bound
nop
cwtl
outsb
sti
imul
in
jmp
pop
adc
xlat
paddq
jmp
mov
insl
sbb
mov
add
call
pop
pop
ljmp
shrd
cld
inc
add
js
mov
push
pop
in
push
add
pop
xor
pop
aam
sarl
aam
in
mov
sbbb
mov
jbe
cmpps
xchg
jo
sub
or
inc
stc
mov
les
xchg
fwait
testl
jle
xchg
mov
cli
adc
mov
lahf
mov
mov
daa
imul
xchg
inc
dec
push
dec
pop
lcall
test
add
call
mov
pop
mov
shrb
sub
mov
loopnew
adc
loopne
outsl
lea
lret
and
hlt
aam
data16
out
loop
mov
data16
push
xor
sahf
mov
mov
ret
scas
scas
fsubrs
jo
mov
add
cli
dec
dec
or
jns
iret
scas
out
std
mov
mov
xor
mov
xchg
inc
les
call
mov
fxch
dec
lea
jp
add
add
call
lret
push
sbb
or
pop
sub
test
andl
xchg
lcall
add
push
mov
lret
xor
mov
hlt
iret
cwtl
pop
lret
sbb
jp
int
inc
rcr
adc
mov
das
or
jns
adc
mov
dec
jle
lock
shll
outsb
inc
stos
lds
sarb
sbb
mov
bound
iret
mov
cmpl
call
lcall
pop
out
push
xchg
pushl
mov
popa
pop
add
scas
jmp
stos
repnz
jge
dec
ss
push
popa
dec
lock
pop
dec
push
mov
xor
es
mov
mov
inc
mov
call
xchg
xchg
repnz
push
out
pcmpgtb
sub
sub
fcompl
and
sbb
inc
loop
or
lea
test
jno
seto
dec
push
sbb
or
scas
fcmovnb
psrlq
add
call
sti
push
mov
push
xchg
jmp
xor
roll
xchg
in
or
add
outsb
and
sub
mov
mov
addl
or
fistps
shlb
outsl
daa
inc
test
ljmp
xor
pop
repz
int3
pop
loop
and
mov
iret
cmp
jmp
and
add
xchg
lods
jns
sbb
push
div
push
repz
and
push
ss
jg
bnd
aad
push
or
dec
jne
add
call
lods
lret
and
lds
push
mov
fcmovnu
lcall
inc
aaa
cmpsl
mov
insb
sbb
addr16
jecxz
push
aaa
jb
dec
mov
int
in
aam
and
mov
stos
dec
js
dec
jne,pt
cmpsl
xchg
or
mov
adc
adc
pop
inc
icebp
pop
insb
cmp
loop
sahf
pushf
mov
xchg
or
jg
cmp
in
cmpl
add
inc
jmp
sub
pop
mov
xchg
mov
sub
incl
pop
sti
add
call
cmp
fldenv
int
sub
push
push
subb
sbb
push
shrl
sbb
cmp
outsl
in
mov
mov
jmp
dec
data16
out
add
loopne
loop
jecxz
push
and
test
push
inc
int3
lret
test
xchg
inc
into
mov
das
dec
push
cld
out
popa
cmp
sbb
fadds
pop
cwtl
inc
push
in
sub
sub
aad
rolb
lds
arpl
popa
pop
fs
cli
sbb
rorl
inc
das
arpl
add
add
call
ret
subl
rol
jae
std
push
lock
cmpsb
push
test
aam
push
xchg
loope
icebp
es
or
ja
scas
or
aam
stos
ss
sub
ss
fsubs
push
sub
inc
scas
les
bound
push
dec
loopne
scas
pusha
xchg
jl
cmp
and
adc
andl
pop
push
fmuls
stc
and
dec
pushf
mov
subb
jns
inc
sub
sti
cmp
adc
std
sbb
sbb
out
mov
loopne
add
call
jp
ss
mov
ds
mov
rorl
out
hlt
repnz
fists
inc
mov
jbe
xchg
ljmp
and
xchg
push
xlat
mov
sub
loope
mov
and
and
sub
cs
es
sbb
and
popa
aam
mov
mov
leave
pusha
push
dec
test
or
inc
mov
mov
cmp
jge
mov
lea
sub
add
call
cmp
and
cmp
cmc
loopne
pop
xlat
mov
lods
push
scas
mov
mov
fwait
shlb
xchg
xor
mov
sbb
sbbb
lret
jmp
dec
mov
icebp
sti
icebp
xorb
or
jg
mov
test
shll
in
push
sub
cmpsb
insb
mov
cmpsb
xchg
add
inc
mov
sub
xor
insl
mov
lret
xchg
cmp
shrb
imul
or
push
xor
lahf
sub
call
rolb
cltd
mov
pushf
mov
orl
sub
clc
cwtl
decb
mov
pop
enter
mov
xchg
mov
sarb
loope
out
je
call
cmp
pop
push
fs
jns
jno
xchg
inc
cli
aam
sbb
mov
lock
addr16
cmp
mov
loop
fwait
aaa
cmp
aad
fcmovnbe
es
mov
pop
aas
adc
pop
mov
int3
dec
adc
mov
sbb
jae
int
dec
jb
int3
add
call
cmp
jb
loop
in
loopne
popf
bound
xor
int
cmpsb
xchg
adc
mov
xor
daa
inc
int3
push
cmc
push
lcall
mov
ret
sub
movsl
in
pushf
shl
cmp
dec
mov
dec
xchg
dec
cs
xchg
sbb
push
aam
cmp
sub
ret
add
into
xor
jne
push
adc
inc
add
pop
loop
shrb
add
inc
fstps
mov
dec
lss
pop
sub
outsl
stc
xchg
xlat
add
call
lea
pushf
scas
add
lret
push
cmp
daa
sub
loop
add
shll
lret
aas
mov
loopne
pop
and
adc
nop
xorb
cmp
add
xchg
imul
fmuls
lahf
cs
mov
pop
and
push
dec
bound
xchg
or
pushf
mov
adc
push
shll
pop
lahf
fcoml
add
repnz
pop
and
mov
and
adc
push
jne
pop
xor
outsb
jne
add
call
lea
mov
imul
and
or
cmp
ljmp
inc
iret
out
jecxz
pop
mov
xchg
push
cmp
mov
adc
add
mov
sub
mov
enter
ss
fstpl
mov
loopne
xchg
jae
or
xchg
mulb
int
pushf
jb
mov
adc
faddl
pop
fcomps
sub
out
inc
dec
mov
inc
mov
add
call
js
mov
cld
outsb
add
mov
xor
sub
pop
outsb
into
outsb
or
clc
inc
stc
in
inc
jnp
pop
ret
ljmp
dec
inc
cmp
pop
cmpl
xchg
xchg
lea
in
shrl
push
dec
add
xchg
pop
push
sbb
int3
push
mov
cld
inc
mov
fstpt
cltd
xchg
xor
call
jne
call
xlat
mov
rorb
call
les
jb
mov
and
mov
call
jle
fs
into
cltd
inc
cs
push
and
pop
xor
push
jns
mov
aam
test
lock
push
hlt
orb
add
loop,pn
or
fs
push
inc
inc
jne
mov
lea
pop
dec
and
add
mov
dec
and
add
cmp
cmpsb
pop
xor
cmp
push
jmp
outsl
pop
in
jge
pop
es
adc
mov
mov
mov
mov
call
xchg
nop
iret
repnz
mov
in
out
mov
add
xor
push
shrb
call
loopne
sbb
jbe
add
push
push
adc
cs
dec
mov
xor
push
cvtps2pi
movsl
adc
pop
movsl
pop
test
fsubp
movsl
insb
add
dec
dec
adc
pop
add
lahf
aaa
sub
xor
add
xchg
lcall
xchg
call
lea
scas
add
call
and
addr16
mov
and
test
inc
aad
xor
fstps
and
jp
sbb
sahf
lods
sub
mov
mov
lds
sbb
jae
xor
or
in
decb
mov
inc
add
test
inc
jbe
test
loopne
mov
cld
sti
pop
push
mov
push
pop
popa
dec
add
xor
push
adc
sbbl
dec
sti
add
das
adc
hlt
andl
adc
enter
pop
cmp
add
call
cmp
mov
xchg
test
lock
push
xor
dec
mov
inc
mov
xchg
or
mov
cmp
pop
push
pop
mov
pop
mov
dec
fidivrl
pop
js
adc
mov
cmc
mov
adc
and
adc
push
cld
inc
mov
aad
cli
inc
pop
inc
icebp
negb
xchg
rcr
enter
xchg
mov
addr16
clc
iret
imul
pop
daa
ja
sub
loopne
test
add
call
inc
inc
les
out
rcr
mov
dec
incb
add
popa
iret
aad
fists
imul
inc
insb
ja
xchg
sbb
sbb
arpl
push
cli
rcrl
into
inc
out
stos
movsl
repnz
jmp
sarl
sbb
mov
fs
mov
xor
cld
aam
ret
cmp
jp
inc
testl
adc
inc
out
in
cmp
in
cmpsb
imull
ljmp
mov
mov
jo
mov
adc
add
call
mov
dec
mov
push
mov
es
jp
jl
jae
sub
ret
inc
lret
mov
xchg
xchg
jb
aad
aaa
cli
dec
xchg
xor
shrl
mov
roll
ljmp
int
and
sub
fldcw
pusha
xchg
add
add
int
ss
add
lret
icebp
adc
push
xchg
test
or
or
or
pop
ficomps
mov
add
call
outsb
ss
shlb
stos
popa
clc
jns
divb
mov
cmp
movsb
and
aam
sbb
fsubrl
sub
ret
movsb
ljmp
mov
mov
dec
ljmp
ljmp
out
std
adc
xor
pushf
rcrb
je
mov
inc
sbb
lret
and
add
rol
inc
arpl
imul
xor
ss
xor
not
push
mov
pop
loop
add
in
sbb
xchg
sub
adc
mov
aas
add
call
bound
cmp
test
insb
xchg
sub
mov
loop
push
pop
fsubl
rclb
jnp
fwait
das
jp
subl
inc
cmp
push
sbb
or
int
outsl
mov
or
in
out
add
mov
es
imul
jmp
cmp
push
aaa
ljmp
jo
ss
aaa
test
xchg
adc
xorl
ficoms
sbb
outsl
stos
cmp
cltd
xchg
and
xlat
mov
call
dec
push
inc
xchg
xchg
cmc
sarl
jb
add
call
add
xchg
in
aad
cmp
sub
push
push
inc
sbb
insb
jecxz
inc
dec
cli
enter
repnz
std
fcom
call
je
cmc
mov
mov
mov
loop
cs
mov
stos
and
mov
add
lea
push
pop
push
sahf
xor
xchg
mov
xor
jle
sub
or
mov
jno
mov
mov
mov
jo
ret
ss
dec
clc
cld
lahf
lahf
icebp
cltd
push
movsb
adc
aas
mov
add
call
sbbl
mov
pop
mov
cmovle
repnz
add
inc
and
dec
inc
dec
lock
nop
fnsave
repz
push
repz
cmc
sbb
mov
sahf
stc
jg
fcoml
mov
pslld
cmpb
mov
mov
out
xor
adc
xor
add
sbb
loop
add
js
js
mov
aaa
int3
jns
movl
sub
dec
scas
movsb
add
orb
clc
adcl
inc
iret
inc
add
call
sbb
pop
or
insl
and
dec
loope
cmpsb
cmp
jp
out
das
mov
sbb
jle
ja
shl
lret
test
sub
mov
daa
push
aam
cmpsb
sub
test
xchg
push
adc
clc
idivl
and
sub
test
or
not
movsl
mov
jle
mov
cmp
ljmp
dec
mov
insb
loope
push
mov
lods
aad
aaa
rdtsc
jns
dec
stos
cmpsl
jbe
arpl
add
call
xor
aaa
xorl
adc
jno
add
cmp
push
inc
xor
mov
pop
in
inc
fiaddl
aad
fiaddl
xchg
and
cwtl
sbb
dec
fsubs
fs
scas
jae
cld
add
adc
or
sbb
fucomp
insl
add
mov
nopl
daa
mov
mov
pop
pop
mov
fcompl
iret
iret
aad
sub
sub
pop
mov
bound
data16
mov
roll
pop
aas
fiaddl
cltd
faddl
xor
push
inc
fs
add
call
sahf
lret
pop
inc
sti
test
pop
stos
jb
jmp
jmp
ljmp
lock
mov
push
adc
in
mov
inc
pop
push
pop
jmp
push
iret
daa
sub
cs
push
jbe
sbb
loopne
sub
ja
int3
jecxz
dec
icebp
gs
dec
mov
mov
push
or
cmp
insb
iret
out
cwtl
movsl
sbb
adc
inc
or
or
ret
out
shrb
and
xchg
and
add
sub
ret
sub
jmp
add
call
lahf
sub
xor
in
fistps
xchg
int3
aaa
xchg
mov
sahf
fwait
inc
pushf
in
sbb
loop
inc
push
int3
xor
add
lahf
jne
ret
adc
dec
sbb
jecxz
inc
xchg
adcb
cmp
int3
lods
jo
and
push
lcall
aaa
lret
in
imul
stos
or
adc
add
fcoms
sbb
xchg
xchg
xchg
inc
sub
and
inc
ret
xchg
mov
lock
or
nop
ret
push
sti
mov
xor
call
jbe
push
pop
xchg
ja
daa
leave
test
dec
loope
popl
ljmp
cmp
imul
or
cltd
lcall
shl
mov
inc
sub
inc
jl
loop
out
jg
stc
dec
dec
xor
mov
jae,pt
add
into
int
ds
mov
out
popa
out
addr16
dec
pop
inc
pop
or
adc
mov
ss
int3
hlt
pop
icebp
mov
adc
ds
push
in
add
call
and
mov
dec
mov
mov
mov
xchg
or
or
dec
cs
cmp
inc
mov
and
add
mov
stc
push
pushf
andb
sub
dec
js
pop
sbb
mov
dec
fcom
out
jle
popf
mov
jle
insb
adc
test
push
adc
dec
in
popa
lcall
pop
cmc
xlat
mov
fadd
lds
cmp
dec
dec
js
mov
mov
les
aas
negb
stos
loopne
add
call
xchg
xor
into
in
xchg
push
jo
fst
xor
lret
je
cmp
jns
in
int
mov
sti
aas
loopne
dec
in
call
mov
dec
mov
sahf
cmp
adc
rcrb
lret
or
jbe
cmp
fs
popf
lods
dec
sub
ja
shlb
cmp
loope
sbbl
aad
pop
xchg
push
sbb
sub
xor
or
cmpsb
push
ss
add
lea
fisttpl
add
call
popf
ret
fdivrl
xchg
xchg
fistl
in
ljmp
inc
mov
pop
cmp
mov
cmp
lds
scas
mov
add
jno
xchg
mov
lcall
inc
scas
cltd
push
inc
sarl
ss
push
mov
repz
sbb
aam
and
or
add
out
push
jno
pop
sahf
cmp
or
push
rclb
and
push
dec
out
jle
push
call
mov
in
mov
ljmp
pop
mov
je
in
jo
xchg
test
outsb
hlt
jae
sbb
jmp
pop
repnz
mov
imul
mov
or
insl
daa
dec
sbb
xchg
or
and
mov
js
sbb
sub
sbb
out
jnp
movsb
inc
jno
rorl
xor
sub
sub
cmp
mov
daa
push
cmp
call
rolb
daa
addr16
mov
inc
lods
pop
jns
mov
sbb
fstl
pusha
pop
cltd
mov
push
sbb
insb
ficomps
pushf
das
cs
mov
leave
jne
xchg
and
jns
xchg
hlt
mov
ficoml
inc
mov
mov
orb
cmp
jno
je
jge,pt
push
scas
add
jbe
or
jno
dec
fdivrs
in
dec
or
and
inc
mov
add
js
gs
sub
jo
sub
xor
add
call
mov
jb
pop
out
rolb
cltd
jg
sub
lcall
mov
mov
pop
in
stc
aaa
jae
xchg
mov
xor
mov
in
jecxz
imul
call
sbb
mov
es
call
aaa
xor
inc
test
pushf
mov
cmp
pop
hlt
dec
sub
jle
push
test
addr16
ja
sti
lcall
out
subl
push
cmc
xchg
and
pop
dec
adc
pop
outsb
js
mov
sub
add
call
dec
sbbl
sub
popa
cltd
mov
flds
jne
sbb
lret
cmc
scas
out
jo
inc
jo
jae
shl
mov
pop
int
sbb
sbbl
fcoms
pop
ljmp
ljmp
out
mov
shlb
sbb
subl
outsl
lods
fsubl
mov
pop
outsl
mov
xchg
mov
add
xor
mov
cmpsb
js
hlt
push
aaa
cmp
outsb
movsb
fistl
call
mov
add
add
add
call
cmp
fmuls
push
jbe
fldcw
pushf
jg
int3
dec
adc
cltd
cmp
sti
pop
insl
lret
cmpsl
lods
cmp
lret
outsb
xchg
sti
cli
pop
loopne
inc
andl
fcmove
roll
jbe
rclb
pop
adc
push
ja
sub
repz
inc
adc
xor
mov
xor
xor
mov
push
mov
js
enter
jns
dec
xchg
mov
push
xchg
lahf
push
out
or
movsl
inc
adc
cmp
add
call
pop
leave
std
sbb
filds
inc
mov
stos
push
scas
mov
pop
pop
cmc
insb
jmp
outsb
lock
cld
clc
dec
xchg
pusha
setns
xor
add
outsb
jnp
repnz
lock
mov
gs
add
xchg
inc
sub
jno
sahf
packsswb
ljmp
test
sbb
jno
cmp
mov
imul
and
xor
fsubr
or
data16
cmpsb
add
jle
leave
mov
add
add
call
add
mov
dec
cltd
ret
xor
lods
adc
or
xlat
mov
inc
push
sbb
jns
or
inc
in
and
sbb
bound
aas
or
adc
in
jle
push
iret
icebp
lods
insl
inc
mov
cld
ss
test
push
ss
lea
xor
mov
inc
sub
rcr
cmp
sti
call
dec
jae
inc
dec
fdivl
and
fcomps
add
add
aas
jno
enter
clc
add
call
in
sahf
push
mov
cld
ss
add
lcall
xlat
sub
and
das
mov
adc
shrb
mov
notb
inc
dec
and
adc
pusha
xchg
inc
andl
stc
movsl
cltd
sbb
roll
xor
repnz
loopne
adc
cmc
fists
ret
popf
int3
adc
cld
pushl
ljmp
inc
jo
dec
addr16
popa
pushf
dec
and
daa
push
inc
pop
fsubl
call
jns
imul
pop
jecxz
mov
inc
iret
jg
sub
mov
inc
and
jl
pop
mov
cmpsl
push
jmp
outsl
pushl
mov
addl
jb
test
pusha
fidivrl
pop
std
or
and
and
mov
jno
jle
inc
sbb
int3
push
js
pop
xor
ljmp
gs
push
addb
mov
popf
mov
adc
and
daa
lret
call
dec
mov
dec
sub
pop
adc
xchg
mov
mov
mov
sub
xor
shlb
adc
dec
adc
ds
rolb
push
insl
sbb
dec
loopne
imulb
dec
add
lock
add
out
les
lret
cmc
or
test
bound
cltd
pop
into
repnz
xchg
sbb
scas
sub
jno
mov
lcall
pop
sti
inc
mov
mov
std
inc
xor
bound
lea
add
call
cmp
push
push
adc
lcall
cmpsb
hlt
lds
mov
mov
mov
dec
or
mov
mul
pop
lret
sahf
lahf
dec
cli
cli
jno
cmp
push
fidivs
cmp
dec
xchg
movsl
test
xchg
inc
imul
into
mov
pop
add
nop
xchg
out
inc
push
adc
cmp
enter
sub
mov
or
daa
cmp
aaa
push
cmp
test
push
xor
xchg
lret
cmp
fwait
jl
add
call
sub
aaa
ss
shr
scas
arpl
push
adc
pushf
subl
xchg
cmp
loop
inc
jo
mov
push
xor
pop
ljmp
lahf
mov
int3
push
cmpsb
jae
pop
rclb
mov
and
daa
push
fldl2t
jae
mov
pop
sbb
loope
inc
mov
adc
jbe
cmp
or
cmp
dec
mov
lds
nop
loopnew
mov
and
fcmovnb
cmp
add
call
sarb
and
mov
mov
mov
adcb
fs
push
push
popa
jbe
clc
sbb
jmpw
test
jb
jo
shlb
cltd
cmp
mov
push
xor
mov
xorb
sub
push
cmpsl
aaa
cmp
xchg
cmpl
js
jnp
mov
mov
inc
xlat
sub
in
push
jae
push
clc
inc
xchg
and
push
mov
aad
aad
or
jbe
fcomip
pushf
jb
aaa
xor
imul
add
call
lods
dec
clc
ljmp
mov
xor
fucomp
daa
and
lds
hlt
jns
pop
mov
mov
mov
arpl
addr16
lds
scas
fmuls
in
ror
lds
push
iret
mov
test
inc
ret
sbbl
pop
push
rep
pop
sbb
das
aam
jecxz
xor
push
or
lock
sbbl
mov
mov
loope
iret
add
or
enter
aam
adc
jno
add
test
testl
call
pop
add
mov
fildl
pop
cmpsl
inc
mov
dec
pushf
aad
fistps
pop
bound
sbb
add
cltd
int
sub
pop
sbb
sbb
fnstenv
or
push
xchg
dec
jge
testl
call
inc
adc
popa
sub
lods
daa
xor
add
into
xchg
dec
cmpsl
inc
pop
roll
js
mov
mov
sbb
fldcw
fs
xor
and
cmp
call
push
fisttpll
sub
push
testb
jg
out
cmp
push
sahf
pop
pusha
dec
or
test
je
out
jo
push
pop
out
pop
pop
aad
fimull
or
mov
addr16
mov
fnstcw
out
mov
push
clc
lods
xchg
sub
cmc
jg
lret
xchg
das
sub
jae
ljmp
ljmp
xchg
cmp
por
adc
iret
xor
daa
test
adcb
add
call
jmp
bound
mov
jne
and
dec
xchg
out
mov
jle
insb
mov
mov
lock
sbb
aas
mov
movsl
ljmp
mov
jb
fidivs
iret
lods
push
mov
les
mov
inc
repz
fnsave
jmp
out
lret
push
mov
sub
dec
movsb
and
pop
subb
mov
pop
dec
adc
stc
xchg
or
sahf
sbb
andb
dec
jge
add
call
fs
negb
clc
adc
pop
sub
arpl
scas
mov
popa
hlt
pop
sbb
xchg
pop
nop
lret
add
fs
fcmovnu
adc
jp
aam
sub
ljmp
mov
push
pop
push
sbbl
xlat
or
loopne
sub
push
into
add
push
pop
rolb
jecxz
cmp
jns
stos
jp
rcr
add
xchg
lds
mov
loop
and
lret
jbe
ficompl
xor
or
add
call
negl
out
xchg
sbb
les
insl
mov
cmp
inc
sar
insl
repz
xchg
push
in
inc
sub
and
ret
and
jne
das
aam
or
iret
fwait
test
in
jmp
call
pop
mov
dec
xor
fnstsw
test
cmc
mov
repnz
into
mov
std
jmp
sub
push
jns
subl
adc
scas
cmp
lods
and
mov
popa
xchg
sub
jl
out
push
cmp
call
push
mov
push
mov
push
add
nop
jno
iret
pop
cld
or
push
fstl
lea
push
ljmp
cmpsl
into
push
pop
repnz
mov
pop
push
dec
push
dec
jg
sub
icebp
in
lcall
adc
rcll
insb
adc
and
xchg
and
add
cmp
outsl
push
dec
call
notb
mov
subl
push
test
cmpsb
pop
fiaddl
mov
push
push
xchg
in
add
call
push
xor
or
pusha
mov
dec
lods
int
cmpsl
sbb
call
test
aad
in
outsl
pop
fbstp
xor
loope
cltd
mov
adc
jns
jbe
icebp
mov
scas
test
push
jmp
stos
in
leave
scas
mov
clc
lods
repnz
mov
stos
bound
mov
jle
ss
mov
bnd
add
lea
xor
ja
mov
and
call
add
push
and
cmp
pop
pop
int
sub
push
in
cmpl
xor
pop
fdivrl
push
jmp
jnp
cltd
repz
add
add
add
std
mov
adc
inc
cmova
inc
std
xor
mov
outsb
xor
test
pop
cld
out
or
mov
inc
push
xchg
mov
addl
xor
or
ficompl
xchg
sahf
inc
and
add
call
cmp
mov
pop
and
int
daa
out
pusha
pop
or
scas
pop
pop
call
cwtl
daa
cld
stos
add
mov
mov
xchg
roll
pop
lods
aam
sub
mov
inc
xchg
test
scas
cld
lahf
push
aas
rcrl
mov
dec
in
arpl
mov
jns
in
xor
push
out
out
or
dec
mov
add
xchg
repnz
test
int
das
xor
dec
stos
fisubl
or
jecxz
push
sub
mov
push
inc
add
call
fwait
dec
jmp
mov
stos
and
fwait
pop
cmp
imul
ds
cmpsl
nop
cli
xchg
iret
mov
cmp
int
push
cwtl
dec
and
fdivs
jecxz
pusha
dec
outsl
in
sub
mov
push
out
adc
sbb
push
add
ret
adc
aad
subl
mov
das
dec
mov
jnp
jp
addr16
sub
pusha
mov
in
pop
imul
adc
addr16
dec
lock
pushf
sti
repnz
xchg
add
call
ds
and
in
in
mov
pop
cltd
ds
push
mov
ret
push
faddl
cmpsl
std
outsb
and
push
add
hlt
fucomi
and
xor
stc
mov
cmp
aad
and
and
cmp
adc
xchg
movsl
sub
jns
sbb
cmp
test
je
cli
fwait
shrb
xor
cmpsl
fsts
rcll
lds
inc
jns
dec
lds
push
add
add
les
push
push
jl
lahf
ss
xchg
jnp
imul
xchg
add
add
lcall
mov
aad
xchg
data16
xlat
lcall
aad
cltd
test
lahf
ds
icebp
outsl
pop
cmp
mov
testl
or
jl
xlat
sub
pop
loope
jno
out
dec
cmp
pop
in
lods
fidivs
and
rol
fdivs
adc
lods
test
xchg
adc
lret
stos
sbb
aaa
cltd
and
cltd
pushl
inc
outsb
lcall
dec
and
das
pop
into
cmpsl
xlat
xchg
lret
fmulp
mov
push
inc
adc
add
call
add
outsl
xor
jecxz
rol
mov
cltd
push
lahf
sbb
mov
mov
inc
in
leave
jne
mov
std
imul
insl
jge
out
xchg
sub
in
bound
jl
hlt
lods
out
aad
sti
std
adc
xchg
ja
xchg
xor
imul
push
movaps
insb
fbstp
bnd
lea
jmp
push
aaa
add
outsl
mov
or
inc
lahf
jne
mov
push
add
cmpsb
add
call
push
fsubp
sbb
nop
mov
fildll
xor
jno
adcb
scas
xor
adc
xor
jno
sbb
xchg
or
sbbb
adc
push
push
bound
pop
fidivrs
into
xchg
jmp
adc
push
dec
fildl
push
popa
push
in
push
pusha
xchg
xor
rcrb
xor
cmp
leave
xor
cli
imul
sub
std
sub
rcrl
in
enter
pop
mov
in
mov
xor
inc
insl
or
mov
scas
add
call
rolb
xor
xor
xor
xchg
popa
pop
rol
pop
aam
test
mov
cmp
out
test
sub
call
in
mov
lods
mov
jno
aaa
insl
or
fdivrl
lods
push
jp
subl
ret
xchg
sbb
pop
fdivp
ss
xchg
pop
jl
add
mov
or
push
dec
dec
mov
mov
out
xchg
int3
lock
pop
mov
push
adc
mov
fwait
icebp
mov
add
call
mov
mov
nop
push
mov
dec
sbb
cmpl
call
lret
pop
pusha
popl
sbb
inc
repz
fwait
mov
mov
sub
inc
inc
or
lret
cmp
out
sub
pop
mov
fwait
stos
jns
stc
hlt
pushf
and
movsb
and
add
ljmp
cmp
cmp
jns
pop
movsl
mov
and
mov
imul
mov
cwtl
dec
push
jne
cwtl
sub
scas
int3
push
jmp
sub
call
cmp
sbbb
filds
pop
fsts
filds
xchg
add
adc
cmp
iret
out
and
in
lret
repnz
popa
mov
lahf
adc
sbb
cmp
test
mov
inc
mov
mov
xor
mov
mov
xchg
std
lock
std
push
or
stos
dec
mov
hlt
rcll
test
and
jae
sub
jnp
arpl
pusha
xchg
lods
xlat
sub
add
call
push
mov
sub
mov
out
je
inc
mov
and
fisubl
scas
mov
in
mov
test
outsb
cmpsb
movsl
movsl
xchg
inc
ja
ss
push
add
xchg
jg
xchg
mov
lret
pop
lock
lds
cwtl
popa
xchg
xchg
cmp
dec
or
sub
mov
adc
add
mov
push
and
shrl
outsl
push
push
mov
xchg
lods
push
adc
mov
dec
xorl
aad
cmp
push
jecxz
mov
xor
jnp
pop
xchg
dec
or
aas
add
call
loopne
lods
xor
lcall
sbb
inc
adc
add
imul
out
mov
mov
adc
mov
not
fadd
movb
loopne
pusha
aad
adc
sub
lret
pop
cmpb
out
or
push
hlt
xlat
dec
jns
add
fildll
pop
add
inc
hlt
xchg
cmp
ror
jg
bound
pop
mov
mov
fdivrs
dec
sub
or
sarb
add
call
gs
inc
stos
push
dec
or
mov
inc
xchg
jl
inc
sbb
imul
outsl
mov
xor
stos
icebp
jmp
lods
push
inc
sti
lods
jmp
push
popa
insb
jno
add
inc
cli
aad
pop
pop
pop
or
loope
pop
mov
lcall
mov
adc
pop
sbb
mov
xchg
in
push
or
xor
jp
push
lahf
aam
fdivs
rclb
inc
push
jge
loop
cltd
lahf
pop
and
lea
dec
push
pop
fstl
add
call
lcall
jnp
in
inc
adc
out
cmpsb
sbb
inc
cmp
sbb
lret
shll
xor
enter
jnp
mov
sbb
add
pop
dec
dec
mov
xor
clc
stos
push
push
int
jo
ss
jl
es
mov
mov
lcall
aaa
pop
mov
push
pop
jnp
pop
je
pop
icebp
je
xor
pushf
stc
out
fildl
and
push
repnz
pusha
push
popf
sub
divb
mov
call
movsb
insl
mov
arpl
sub
pop
cmp
inc
pop
xchg
std
or
dec
int
mov
and
mov
xchg
push
jnp
sbb
rcl
adc
nop
add
sub
push
lods
lcall
clc
xchg
test
es
xor
jmp
and
xchg
popf
imul
out
adc
push
mov
rol
push
cmp
shlb
outsl
dec
cld
xchg
jne
pop
push
sbb
int
iret
popf
jge
sub
mov
sub
sbb
fadd
aas
lahf
jle
add
call
jg
lods
adc
lds
call
sub
xchg
dec
aam
sub
arpl
sub
neg
cmp
mov
sub
repnz
out
fsubl
or
fpatan
jns
cmp
stc
cmpsb
comiss
int
jmp
mov
rolb
int3
sahf
dec
insl
pop
cmp
jbe
stos
adc
add
add
hlt
movsb
xor
scas
repz
outsb
repz
xorl
lock
pmaxub
dec
pop
or
mov
xchg
jb
adcb
call
stos
cmpsl
push
je
dec
repnz
in
xchg
lods
cmpsl
jns
jne
push
add
or
pop
ret
mov
mov
dec
inc
pop
sbb
xor
cmp
aas
pop
and
adc
std
add
adc
in
jno
add
stc
enter
ljmp
xor
test
xor
lret
mov
mov
outsl
add
stc
sahf
mov
jno
call
inc
add
ja
loope
cmp
xchg
jecxz
fdivs
fucomip
mov
call
adc
pop
or
xlat
les
in
mov
jle
mov
fimuls
movsl
push
rcr
cld
or
pop
pop
sbb
sub
fnstenv
dec
xchg
aaa
rcl
and
xor
addb
push
xchg
push
shll
mov
in
and
fwait
inc
loopne
aaa
adc
sub
mov
aaa
jns
daa
mov
lea
xor
sbb
js
sub
sbb
mov
call
outsb
jbe
mov
ds
dec
or
cmp
sti
inc
and
adc
mov
jle
pop
shlb
xlat
or
xor
pop
xchg
es
push
or
jp
popf
rcrb
out
lods
std
cli
ja
jbe
in
fistpll
stc
push
xor
daa
rclb
fcoml
mov
les
add
outsl
and
sub
jno
or
cltd
shll
mulb
adc
mov
fildll
mov
add
push
pop
out
pop
xchg
ret
call
mov
roll
rolb
inc
sub
sbb
outsb
fdivrs
daa
push
mov
out
ja
rcrl
push
jb
cld
pop
mov
mov
lret
jno
aas
sbb
jp
jae
lret
sbb
jmp
out
adc
sar
push
shrb
jnp
enter
xchg
adc
push
push
fstp
orb
push
xchg
push
std
pop
adc
or
lcall
out
int3
rorb
fwait
lods
shlb
push
push
aaa
add
call
push
push
and
mov
out
ja
inc
inc
add
mov
xchg
push
fmuls
push
int3
imul
aad
mov
roll
dec
insl
push
out
int3
sub
mov
movsl
xchg
fs
repnz
cmpsl
movsb
fs
jg
push
popa
jno
mov
add
pop
aad
imul
mov
mov
add
imul
lret
xchg
sub
std
js
lock
stos
cmp
stc
outsb
lahf
lret
inc
ret
pop
inc
lcall
daa
add
call
int
popf
mov
sbb
pop
ffree
int3
and
push
add
lds
sub
lgs
cmp
pop
pusha
mov
loop
pop
ss
fstl
repz
dec
jge
out
in
mov
aam
testl
pop
hlt
jae
or
xor
in
jb
cmp
mov
sbb
adc
test
jae
mov
push
fcos
and
mov
outsl
sub
add
adcb
cld
sbb
jle
add
call
jns
mov
mov
jno
xor
sub
pop
rcrl
pop
or
outsl
or
dec
shlb
shll
add
xchg
outsl
mov
lret
scas
adc
inc
mov
mov
sbb
xchg
pop
sbb
and
popa
or
movsb
sahf
ret
xor
pushf
jl
repnz
int3
sub
das
add
cmp
xor
ret
adc
nop
inc
in
lret
or
add
call
or
and
add
mov
out
push
cmp
xchg
jno
pop
test
mov
movsb
pushf
test
iret
push
popa
xchg
jecxz
mov
push
fildl
adc
pop
pusha
xchg
sub
arpl
pop
jecxz
cmpsb
les
fs
jge
ja
pushf
mov
dec
cld
mov
test
push
pop
xchg
dec
stos
mov
cli
cli
mov
add
xchg
js
cmc
pop
add
pop
rol
data16
in
cmc
adc
dec
scas
xchg
sarl
add
call
add
incl
mov
push
sbb
insl
add
imul
sub
pop
and
ja
xor
inc
mov
pop
bound
fildl
mov
add
in
mov
add
leave
mov
and
fisubs
xchg
pop
loop
loop
sti
mov
les
push
jns
in
insl
outsb
call
icebp
sub
cmc
cmc
mov
lods
jns
cli
std
testb
fidivs
enter
mov
inc
add
call
lock
jecxz
repz
out
cmp
inc
js
jno
ret
cmpsb
sbb
sbb
rclb
sub
sbb
ja
push
je
mov
sti
shl
pop
shll
in
fildll
rcrl
jmp
call
push
pop
dec
sti
pop
rcrl
jno
push
and
mov
jne
sub
movb
dec
lea
adc
in
sbb
iret
xlat
rol
aad
repnz
test
pop
add
call
and
out
cmp
lods
aam
mov
scas
sub
push
xor
out
xchg
test
pop
repnz
test
hlt
mov
cld
dec
aam
int3
push
pop
jnp
dec
aam
clc
fwait
inc
pop
mov
out
cmc
mov
test
dec
lcall
lds
stc
loopne
add
popf
sbb
push
es
dec
adc
aas
mov
pusha
fistps
mov
add
fs
adc
mov
push
xchg
jb
bound
mov
call
jbe
jns
outsb
cltd
and
out
sahf
mov
push
mov
and
jae
jecxz
and
lcall
gs
dec
enter
pop
xlat
int
dec
pop
jp
rcl
fildll
inc
and
cmove
push
adc
xor
inc
gs
xorb
or
jmp
repz
cli
ljmp
cld
adc
movsb
addb
orb
fchs
repz
mov
push
or
xchg
mov
mov
std
into
xchg
test
call
xor
mov
gs
sbb
push
xor
loop
mov
shlb
inc
xor
mov
cmp
or
sbb
push
scas
data16
daa
pop
cltd
hlt
mov
fwait
pop
scas
add
cmp
filds
inc
push
cltd
dec
and
movsl
out
movsl
sub
out
fwait
xchg
sbb
adc
xchg
repz
mov
ficompl
mov
lds
xchg
jecxz
outsb
in
mov
add
adc
mov
mov
cli
inc
into
or
sub
out
add
call
lahf
sti
pushf
cli
bound
test
inc
es
cmp
pop
repz
movsl
push
xor
fldt
stos
mov
enter
or
imul
jecxz
pop
dec
cmc
cwtl
inc
adc
sub
rcr
mov
popf
arpl
enter
mov
clc
mov
xor
push
pop
ljmp
sbb
xchg
cmp
jae
xchg
and
movsb
int
sub
push
stos
dec
mov
nop
add
call
jbe
daa
dec
aad
imul
mov
outsb
mov
mov
and
daa
in
sub
mov
fbstp
ljmp
popf
idivl
inc
and
xor
cld
sub
lods
mov
dec
in
rclb
mov
cmp
sahf
sahf
or
add
out
jg
movsb
adc
xor
adc
movsl
cmpsl
jge
lahf
lds
lods
jae
mov
out
or
cmp
movsb
and
pop
jp
add
out
add
insb
add
call
adc
cmp
aas
add
inc
mov
adc
mov
mov
in
xchg
sub
daa
mov
cmp
in
daa
push
ret
test
movsb
xchg
xchg
lea
pop
mov
fstpt
ret
push
sbb
dec
sarl
out
into
push
daa
cmp
aad
test
addl
mov
xchg
adc
add
daa
sbb
cmp
add
call
bound
movsb
sbb
stc
mov
mov
sub
inc
add
jge
mov
mov
les
sub
or
dec
mov
jmp
cltd
lods
mov
inc
in
jmp
fbld
and
insl
push
jg
push
sarl
sub
mov
loop
lcall
add
or
rorl
pop
ret
sbb
mov
or
lds
movsb
jmp
call
and
and
or
jnp
aad
movsl
xor
mov
jno
dec
mov
mov
sahf
mov
cmp
sub
sar
lea
xlat
dec
in
xchg
cmp
cmp
push
outsl
je
dec
cmpsb
sar
sbb
cmc
loopne
lea
jo
inc
jmp
inc
mov
dec
lock
fwait
mov
inc
lret
loop
repz
inc
jl
mov
cmp
pusha
push
sub
fmuls
mov
hlt
sahf
add
call
imul
xor
cs
pop
mov
dec
ljmp
std
adc
jl
ss
icebp
jo
std
cmp
lds
adc
popa
adc
inc
push
test
fdivrl
push
jecxz
aam
test
push
inc
push
insb
jmp
mov
mov
int
mov
ret
pop
sti
in
je
jb
pop
mov
jnp
aaa
lret
pop
pop
out
ret
and
inc
dec
lock
or
shlb
push
mov
les
and
ret
xor
add
call
pop
enter
shrb
bound
clc
shl
sbb
sahf
out
outsb
xlat
aam
lods
ret
mov
insl
rclb
je
dec
or
cmpl
cmp
inc
jb
inc
in
push
jae
outsb
lcall
dec
in
fidivrs
or
push
mov
jns
sbb
push
call
movsb
into
dec
std
inc
cmp
inc
jae
xchg
jle,pt
mov
adc
dec
mov
mov
je
xor
pop
and
xchg
int
add
and
call
pop
xchg
into
push
mov
add
jno
outsb
jns
or
jecxz
adc
sub
popf
inc
sbb
repnz
shll
outsb
call
shrb
fstl
leave
dec
jp
imul
repnz
jnp
js
lahf
xchg
movsb
pmovmskb
or
push
add
or
loop
ficoms
mov
push
rorl
mov
movsl
xor
or
loope
out
je
jnp
jb
jo
ja
sbb
and
nop
movsb
mov
push
call
adc
ss
adc
movsb
mov
lret
leave
pop
add
dec
insl
jmp
sti
in
or
xchg
lods
clc
iret
dec
cmpsl
ds
arpl
cmp
pushf
cltd
push
scas
jns
mov
adc
mov
rcll
pusha
adc
lea
xsavec
mov
push
fisubrl
dec
insl
orb
test
cmpl
cs
mov
ret
sbb
pop
add
ja
add
mov
xchg
lahf
add
call
adc
sti
test
mov
imul
out
pop
push
insl
fldcw
nop
mov
test
pop
std
test
je
in
lret
enter
cmp
int
xchg
jge
pop
inc
mov
mov
cmc
sub
bound
mov
mov
jl
inc
ja
mov
push
sub
into
lret
mov
sbb
out
test
dec
insb
cmpsl
mov
mov
cli
inc
cmpl
js
rorl
push
xor
addr16
mov
add
call
popa
mov
adc
xchg
mov
lea
insb
ja
loope
jle
jle
mov
mov
rorl
jno
in
jmp
gs
xchg
nop
dec
mov
sub
bound
movsl
cld
mov
pop
adc
cmc
sbb
call
hlt
jae
mov
cld
arpl
add
and
ss
cli
movsb
push
faddl
inc
xchg
mov
cs
mov
in
stc
add
dec
jmp
pop
cmp
ss
push
test
push
sti
imul
call
mov
cmp
out
lods
jmp
push
jl
jbe
dec
sub
sbb
je
jno
out
dec
repnz
loopne
jmp
add
into
outsb
jmp
xchg
xchg
pop
jnp
or
roll
and
pop
inc
mov
pop
fidivs
stos
fwait
aam
push
lds
outsb
push
not
inc
stos
or
add
fcoms
sbb
scas
pop
sbb
scas
loop
add
ja
mov
xor
test
sub
sbb
jnp
fildl
and
scas
inc
push
inc
inc
mov
call
adc
pop
scas
pop
pop
push
popf
test
jbe
cmp
sbb
outsb
push
sub
mov
or
mov
cwtl
mov
rorl
adc
ss
test
jo
dec
jo
stos
xor
arpl
cmp
mov
add
mov
mov
pushl
xlat
ret
add
and
push
call
and
add
and
out
std
push
or
cli
mov
add
pop
fcompl
ficomps
fiadds
add
call
sarl
jno
andb
or
or
mov
enter
es
inc
mov
and
and
outsb
stc
jnp
leave
fs
int3
inc
lret
sub
inc
loop
ds
aas
in
leave
mov
inc
incl
jg
mov
mov
je
pop
or
sub
arpl
dec
jne
int
je
sbb
inc
push
bound
pop
jmp
cmp
subl
leave
pop
ja
xchg
xchg
ret
jecxz
out
call
dec
sub
xor
fs
add
call
repz
sub
call
cmp
mov
movsl
xor
push
leave
aaa
mov
xchg
mov
pop
xor
xor
push
dec
iret
scas
fnstenv
lods
lock
stc
out
or
push
add
mov
insb
sbb
dec
mov
xchg
imul
pop
test
daa
mov
adcl
xchg
test
insl
clc
or
nop
js
or
lret
sub
cli
shll
or
jle
cwtl
rorb
mov
sub
out
sub
jl
add
call
scas
stc
push
xchg
mov
jnp
popf
out
lds
pusha
jmp
adc
add
les
fs
fwait
mov
xchg
mov
in
mov
icebp
xor
sbb
xchg
insb
inc
in
push
inc
mov
cmp
fisttpl
sbb
insl
ja
into
sahf
out
test
fmuls
leave
adc
and
xor
movsb
or
mov
xlat
int
fcomps
mov
or
cld
test
sbb
int
sarb
mov
pop
push
pop
sahf
mov
push
add
call
sbb
lret
add
and
sbb
push
in
jg
mov
cwtl
ss
loop
mov
gs
and
test
pop
pop
pushf
movsl
adc
nop
dec
cmpsb
inc
lock
movsb
enter
jne
push
mov
leave
mov
es
dec
mov
imul
push
inc
stc
arpl
cs
xchg
dec
rcl
mov
lods
inc
pop
mov
pop
mov
mov
push
add
push
mov
xchg
movsl
ret
call
sub
ljmp
mov
test
dec
pop
cmpsl
mov
addr16
xchg
cmp
lret
jmp
dec
dec
push
jae
jp
fnsave
jecxz
mov
mov
mov
nop
stos
push
in
int3
sti
hlt
mov
fwait
push
dec
scas
daa
add
mov
cli
mov
out
sbbb
mov
add
add
sub
or
call
sbb
and
dec
or
data16
dec
xor
inc
insl
and
jl
ror
call
call
fwait
loop
mov
repnz
or
in
cmc
shlb
rolb
stos
ud2
mov
ds
bound
mov
imul
xor
dec
or
enter
push
xor
and
lock
pushf
out
cmp
and
repnz
add
clc
dec
sbb
jno
cmp
andb
and
mov
cmpsl
sbb
loopne
dec
repnz
out
and
cmp
inc
loopne
pop
or
add
call
xchg
shll
rolb
pop
inc
pop
jmp
out
popa
sti
mov
rcl
jb
mov
mov
imul
xchg
faddl
les
je
sbb
dec
jg
mov
std
sub
xlat
xchg
add
mov
inc
push
fiadds
mov
dec
lahf
sub
and
mov
lcall
mov
popa
gs
jne
adcl
mov
es
aas
rolb
inc
xchg
and
call
mov
adc
addb
cli
addr16
xchg
movsb
adc
addb
or
mov
adc
mov
add
sub
pop
lret
arpl
scas
add
fisttpl
cltd
fs
mov
movsb
jl
enter
pop
jecxz
add
pop
push
sbb
jae
mov
pop
adcl
cld
jge
xlat
aaa
hlt
subl
cltd
push
pop
jns
outsb
mov
sbb
mov
xor
jns
int
test
rolb
jp
add
call
mov
pop
pop
rorb
mov
xor
loopne
or
in
lret
aas
push
lret
xchg
xchg
testl
mov
ret
ficoml
cltd
jmp
stos
inc
aaa
jg
adc
and
sbbl
pop
aad
jge
ljmp
cmp
leave
or
push
inc
roll
lods
aad
in
lds
mov
ja
lods
outsb
dec
stos
mov
pop
push
stos
rorl
outsb
inc
pop
fistpll
cmc
jp
or
call
arpl
xlat
scas
push
cs
into
ja
and
inc
cmp
scas
pop
add
cmp
adc
lret
jae
inc
mov
insb
xchg
pushf
call
or
fidivs
rcr
cli
mov
imul
cmc
pop
fwait
pop
mov
push
in
outsb
push
inc
and
and
push
roll
cmp
loop
adc
xor
sub
push
stos
ljmp
mov
push
ljmp
xor
push
push
subl
add
call
popa
mov
andb
dec
nop
pop
sub
ss
or
mov
push
ret
hlt
mull
mov
in
jns
leave
lds
adc
rclb
ret
rclb
add
push
int
and
cmp
pop
es
inc
dec
shlb
pop
sbb
push
scas
outsl
sbb
sbbl
dec
loope
sub
xchg
push
fldl
jmp
jl
fwait
jno
push
fistps
cmp
xchg
sbb
imull
call
mov
cmp
inc
and
sub
jb
test
sahf
xor
jge
xor
ret
cli
inc
jno
sub
arpl
outsl
and
inc
mov
lret
push
dec
xor
and
adc
xorl
xor
loope
mov
aam
dec
rcrl
dec
fmuls
data16
mull
cmc
mov
jp
insl
popa
jge
ja
mov
mov
popf
pop
fs
mov
push
into
enter
xchg
jo
popf
inc
cmp
call
mov
cmp
sub
mov
mov
mov
jo
gs
outsb
lcall
js
xchg
enter
mov
and
jge
pushf
xorb
cltd
dec
sub
movsb
jecxz
pop
or
jp
xor
insl
mov
inc
push
mov
mov
iret
mov
inc
ds
inc
out
loop
mov
ret
dec
je
lock
pop
jge
iret
sti
mov
mov
adc
adc
add
clc
mov
sbb
fdivrl
push
out
addb
cmp
add
call
fstps
mov
nop
dec
sti
dec
insl
mov
push
sarl
mov
add
jg
inc
jle
insl
insl
mov
iret
dec
xorb
jb
mov
in
sbb
gs
mov
jge
pop
mov
das
xor
adc
outsb
push
test
hlt
orl
je
lds
loop
cmpsl
sti
leave
jo
outsw
into
and
pop
cmpsb
imul
pop
sbb
sbb
sub
lds
pop
popa
sahf
into
add
call
in
mov
mov
pop
and
xchg
in
out
in
pop
cmpsb
inc
jno
int3
jnp
cmpsb
and
pop
push
xchg
lret
mov
and
out
hlt
js
add
cmp
stos
cld
call
or
cmp
cmp
imull
jae
sub
insl
add
cld
ss
sbbl
test
ret
sub
jae
adc
enter
aas
sub
push
jge
or
mov
push
cmp
pushfw
pop
mov
call
add
sti
aas
rolb
je
cwtl
pop
fisttpll
cltd
push
sub
fidivrs
mov
sbb
in
int
repz
dec
insb
aaa
testl
pop
mov
subl
and
out
aad
pushf
add
xchg
dec
lods
push
adc
dec
dec
pop
inc
or
pop
mov
dec
mov
push
scas
bound
push
mov
inc
inc
xchg
roll
lods
inc
ret
out
repnz
pusha
dec
and
sub
mov
aam
mov
add
call
jno
adc
inc
lock
sti
cmp
ret
rorb
fstps
jno
popa
fmul
xchg
cmp
stos
dec
cmc
bound
push
pushf
jmp
mov
sti
mov
fistl
out
clc
jne
cmp
adc
dec
fimull
rol
xchg
push
test
lcall
and
pop
inc
mov
fcomps
mov
es
jb
aad
dec
cld
int3
cmp
inc
movsb
movsl
jae
outsl
xchg
mov
or
out
or
cmp
jecxz
lods
fildll
mov
out
filds
add
call
add
sbb
clc
fsts
adc
adc
xchg
out
cltd
leave
sub
movsl
pop
add
loopne
jnp
int
cli
push
lcall
add
das
xor
stos
hlt
rol
push
test
dec
pop
cmp
loope
mov
jmp
push
rorb
mov
pop
test
je
lods
sub
add
mov
pop
and
les
pop
lds
je
notl
inc
dec
repz
ja
push
shr
push
xchg
lock
add
call
aam
xor
insb
mov
add
xchg
cmp
xchg
in
test
jl
pop
jmp
add
jb
ljmp
jnp
cmpb
lret
jne
lahf
adcl
push
and
cmpsl
negl
daa
add
sbb
cmp
stos
movsl
pop
out
push
mov
js
cmp
mov
sub
sub
fwait
xor
and
push
xchg
test
adcb
call
inc
les
das
dec
cmp
add
jl
andl
cmpsb
mov
lret
andl
clc
push
add
cmpb
cmpsb
jg
js
vmwrite
popa
sub
lahf
insb
xor
mov
int
ret
mov
pop
sbb
push
nop
les
jne
add
cmpsl
movsb
sub
bound
jge
pop
jle
xchg
add
in
cwtl
inc
cwtl
mov
jle
int
adc
add
adc
add
loope
mov
add
xor
call
and
pop
mov
add
sar
sbb
push
clc
or
sbb
outsl
clc
sub
mov
leave
shll
ret
xchg
dec
out
mov
andb
sub
subb
fmuls
jge
jp
test
and
loop
push
xor
std
pop
in
sbb
setne
orl
add
dec
pop
pushf
adc
mov
ret
popa
rcl
pusha
xlat
mov
push
bnd
add
call
std
lahf
shl
or
push
push
push
push
jb
fwait
mov
in
dec
imul
cmp
stos
movsl
lret
sarb
xchg
insb
and
pop
xor
cmp
mov
jmp
lds
pop
mov
orb
add
jmp
mov
pop
pop
fwait
jb,pn
pop
rcr
data16
mov
xor
sub
lock
test
push
inc
pop
std
xchg
sub
mov
ret
push
xchg
repnz
call
cmp
cmpsb
mov
mov
jge
fdivs
pop
mov
cmpsb
push
insl
adc
loop
iret
out
cwtl
fldt
je
repz
cld
aas
mov
pop
sub
test
sbb
jnp
cltd
mov
call
mov
mov
pop
aas
leave
xchg
pop
pop
filds
dec
loope
das
cmp
inc
sub
in
in
sti
nop
or
into
shrb
sub
adc
push
dec
sbb
xchg
add
call
jne
aam
fmuls
xor
inc
loop
xor
sub
cmc
neg
add
mov
mov
sbb
and
sbb
cld
adc
fwait
cmp
adc
push
repz
add
out
dec
scas
into
lods
xchg
hlt
adc
cmpsl
push
scas
scas
xor
and
push
lea
push
loop
mov
movsl
inc
cmc
ss
outsl
mov
xchg
loop
icebp
inc
out
das
jbe
out
ds
rolb
push
mov
cli
add
call
mov
lret
aaa
or
add
push
fs
push
push
iret
add
repz
add
bound
sub
jno
mov
fstl
xchg
adc
scas
cmp
fadd
test
jb
add
idivl
iret
and
sbb
fwait
xor
fcompl
subl
cmpl
inc
je
test
xchg
aaa
and
adc
cmp
inc
int
and
js
pop
mov
test
adc
and
jmp
add
call
roll
cmpsb
into
mov
or
lods
and
adc
mov
rorb
cmpsb
shlb
add
push
stos
in
stc
mov
popa
inc
aad
pop
xor
lret
cmp
xchg
pop
shll
dec
int3
adc
pop
sbb
xor
cmp
out
jle
sub
adc
jb
das
push
add
pop
xor
lods
xchg
and
outsl
cmovge
inc
cmp
es
xchg
mov
sub
push
mov
scas
jcxz
add
call
adc
add
inc
lcall
les
sub
pop
fsub
cmp
pop
pop
jae
ds
push
hlt
cmpb
jg
push
inc
lods
xor
mov
test
adc
lds
push
std
push
sbb
das
orl
mov
adc
fstpt
inc
lahf
adc
mov
mov
cmp
mov
push
js
adc
push
loopne
test
push
pop
fadds
call
push
incl
or
loop
mov
adc
sub
cld
int3
or
xor
pop
push
scas
mov
andb
mov
add
sbb
cmp
jecxz
imul
pop
inc
lret
jne
shr
pop
sbb
mov
sub
pop
movsl
cmpsl
fdiv
insl
test
mov
sbb
xor
push
adc
dec
xor
pushf
dec
lret
mov
cmpsb
mov
bound
jg
add
call
aad
jno
out
lahf
addl
dec
mov
inc
xchg
lea
data16
pop
cli
lret
jecxz
dec
fsubs
nop
cmp
or
cwtl
inc
jno
imull
les
out
xlat
out
loopne
add
mov
into
ret
sbb
or
sub
stos
sbb
jmp
xor
ret
hlt
je
lret
inc
in
loopne
fstl
mov
ret
ss
mov
scas
jbe
loopne
mov
inc
push
lret
cltd
mov
mov
add
call
or
adc
ret
iret
add
ljmp
loopne
xor
and
daa
rcll
loope
mov
icebp
jmp
cmc
dec
inc
testb
ret
mov
test
jae
imul
loop
or
pop
aas
and
shlb
out
add
xor
push
sub
xchg
push
clc
sub
jnp
data16
and
imul
mov
add
gs
cld
pop
xchg
inc
insl
scas
repz
jno
xchg
jp
stos
pop
inc
in
mov
sbb
call
mov
fnstcw
and
iret
jmp
mov
out
mov
sbb
negb
sub
fcomps
pop
mov
lahf
cmp
and
or
sbb
fisubl
fucom
jmp
ret
cmp
and
add
outsb
cli
dec
mov
dec
cwtl
sbb
sub
iret
jne
pop
adc
scas
inc
inc
jecxz
sub
mov
outsl
mov
addr16
daa
adc
jg
out
dec
cli
ficompl
xchg
inc
mov
add
call
add
push
andb
lret
cmp
repnz
mov
push
fstl
dec
arpl
or
imul
or
ja
add
push
inc
mov
cwtl
mov
icebp
and
adc
loop
push
mov
loop
adc
cmp
mull
cmp
add
cmp
bound
push
testb
sbb
push
xchg
push
push
cs
mov
stos
jb
stc
mov
filds
jp
add
call
repnz
cmc
jl
inc
fcmovnb
nop
cmp
adcb
bound
sbb
outsb
ss
mov
and
daa
sarb
outsb
push
int3
xor
sarl
inc
test
sbb
into
push
pop
adc
imul
insl
or
or
in
movsb
call
push
sbb
jge
push
inc
mov
sub
inc
xor
mov
jg
call
dec
xorl
addl
call
mov
hlt
inc
inc
sti
mov
push
jbe
aad
mov
jne
xor
mov
loope
add
aaa
stos
addr16
inc
pop
dec
test
dec
sbb
lcall
icebp
dec
mov
stc
mov
icebp
cld
mov
cmp
jp
int3
lret
stos
jb
push
inc
lret
push
aam
push
jno
ret
push
mov
and
add
lea
push
ljmp
cld
call
push
cmpsb
inc
fcoms
dec
je
pop
leave
mov
int3
xchg
add
call
es
add
lods
mov
push
fmul
fdivr
dec
adc
movsb
mov
arpl
push
in
shll
pushf
in
nop
sbb
in
jnp
adc
and
das
arpl
mov
fnstenv
in
jle
mov
jnp
scas
sbb
mov
adc
leave
xchg
aam
xchg
loope
std
test
rcl
in
mov
out
mov
cmpsl
cmp
cld
xchg
cmpsb
sti
fisttps
std
sub
hlt
mov
dec
add
call
pop
sbb
data16
repnz
imul
mov
xchg
lods
mov
clc
xchg
dec
mov
cwtl
mov
pusha
jmp
mov
out
cmpsl
fwait
and
push
dec
lods
mov
lock
mov
in
jmp
adc
ret
and
inc
stos
sub
gs
les
mov
mov
mulb
jecxz
popl
sbb
int3
jno
and
jmp
cwtl
mov
daa
cmpsl
dec
push
pop
push
dec
xchg
jno
pop
mov
add
call
aad
sub
int3
adc
mov
mov
fsub
shrd
inc
jns
inc
dec
into
pop
push
or
cmp
adc
jnp
test
xlat
stos
pop
test
data16
mov
in
mov
lds
mov
mov
jnp
inc
fcoml
lods
push
popa
and
jnp
push
in
xchg
scas
into
scas
or
add
out
inc
rcrl
cli
xchg
sub
xchg
fsubp
pop
bound
out
push
call
jns
mov
xchg
andb
adc
adc
cmp
es
sub
push
mov
cmp
add
aam
xchg
outsb
inc
add
jb
mov
leave
push
data16
sbb
rol
fcmovnb
rolb
lcall
mov
dec
mov
rcr
ja
dec
xchg
mov
jo
ss
mov
xchg
cmp
xchg
cmpsl
mov
std
push
or
cmp
cmp
fs
cmp
stos
test
cltd
movb
call
jno
aad
add
test
lcall
stos
pop
gs
xchg
sub
cmp
inc
cmpsl
mov
test
dec
test
cmpsb
in
adc
testl
dec
setbe
adc
pop
aam
leave
loopne
repz
and
gs
cltd
jecxz
and
cmc
stos
insb
mov
aas
push
insb
pop
xlat
rorl
pop
add
adc
mov
mov
jmp
and
add
lock
fxch
dec
or
ja
add
call
xor
mov
popf
pushf
rcl
std
pushf
dec
xchg
mov
add
flds
sub
cmp
xchg
or
add
mov
lods
bound
sbb
dec
jl
mov
iret
mov
pop
scas
xchg
mov
mov
xor
lds
pusha
mov
es
dec
push
in
cltd
aaa
pushl
movsb
je
pushf
dec
jle
lret
mov
in
add
mov
jne
lret
mov
cmpl
mov
add
call
sub
je
pop
dec
addr16
xchg
roll
xchg
fbld
xchg
push
popa
and
in
inc
mov
sub
dec
lods
lds
sarl
mov
or
test
daa
or
hlt
and
push
inc
fdivrl
lret
js
inc
sub
out
outsl
test
or
mov
adc
aad
or
outsb
xchg
and
dec
aam
sbb
sub
lods
or
xchg
scas
subl
insb
mov
pop
loope
add
call
add
mov
mov
push
mov
xchg
mov
lret
imul
xchg
xor
jge
les
xchg
or
inc
adc
mov
mov
loopne
jmp
es
rcr
adc
testb
mov
mov
adc
cli
les
cmp
cmp
mov
cmpsl
inc
ret
insl
cmp
jae
push
dec
leave
cmp
cs
pop
mov
add
pop
dec
xor
enter
clc
sahf
test
movsl
scas
push
insl
adc
push
add
jp
leave
lret
fstps
gs
add
call
icebp
mov
cld
daa
mov
ja
or
ss
lock
bound
or
push
fwait
pop
aam
mov
inc
mov
pop
push
push
add
insl
xor
cmp
mov
leave
je
nop
dec
and
ficoms
mull
xchg
cltd
imul
xchg
pushw
ds
sub
mov
jmp
hlt
int3
xchg
mov
mov
sbb
int3
movsb
cmp
les
popf
and
mov
popf
inc
lcall
add
call
mov
jno
push
sub
push
sub
add
or
div
mov
xchg
mov
addl
push
popf
jmp
xor
xchg
push
in
push
call
int3
pop
push
shrl
aas
rdtsc
adc
stc
or
inc
pop
xor
es
insb
cmpsl
dec
jge
jo
pop
cmpsl
and
inc
fiadds
int3
sbb
cmp
jne
dec
lahf
sbb
pusha
push
fcmovbe
push
imul
inc
lock
xor
out
sub
cltd
lret
jle
add
call
test
add
xor
divb
dec
leave
sub
xlat
in
inc
and
ds
dec
adc
and
imull
dec
add
sub
sbb
rcrb
xor
iret
sbbl
xchg
lds
push
dec
sub
pop
xor
jmp
sbb
xor
push
lock
rclb
sbb
inc
xchg
out
in
mov
add
fcoml
inc
sbb
popf
or
sub
mov
out
mov
add
call
or
jo
outsb
sub
inc
ret
mov
lcall
stos
push
repnz
frstor
sarl
ja
or
push
lea
jae
loopne
or
and
cmp
clc
in
out
mov
and
jbe
dec
add
or
faddl
push
jno
mov
mov
outsl
inc
shlb
cmp
imul
mov
sar
push
scas
loop
cmpsl
pop
inc
cmpsb
aaa
ret
lock
mov
rcrl
cmp
add
call
lahf
xor
out
popa
xchg
gs
popa
arpl
push
sbb
dec
jg
push
mov
in
into
add
adc
dec
cmp
scas
mov
lcall
lret
mov
sbb
cmpsl
out
sub
iret
ja
rorb
popf
inc
cltd
das
insb
jmp
sahf
xlat
add
mov
test
out
clc
or
les
mov
into
add
push
mov
popa
cmc
adc
popl
cwtl
in
scas
leave
dec
dec
or
mov
pop
pusha
in
rcll
fwait
push
and
add
call
jnp
rcrl
pop
lahf
xor
add
inc
push
fidivs
ljmp
add
rcrl
sbb
push
lods
xor
movsl
mov
jle
add
add
jnp
pop
repz
adcl
and
push
fistl
jb
daa
aam
fsts
pop
pop
xchg
or
popa
loopne
ljmp
mov
pushf
call
inc
jg
inc
pusha
aad
inc
rorb
mov
call
mov
stc
dec
mov
add
call
sub
fsubrs
lods
inc
cmp
in
mov
popl
cmpsl
leave
insl
test
lods
jmp
mov
mov
shlb
pop
mov
pop
enter
cmp
into
jmp
xorl
outsb
out
push
xchg
imul
pushf
jl
in
loop
mov
sahf
xor
push
fisubrl
sbb
cmp
rolb
ds
xorb
adc
dec
mov
dec
fmulp
stc
call
clc
lds
sbb
imulb
leave
fcmovne
xchg
add
call
cli
nop
xchg
sbb
rcrl
cmc
shrb
pop
inc
lcall
xchg
das
mov
out
cltd
into
xchg
test
mov
pop
dec
mov
cmp
fidivl
xor
xchg
sbb
pop
jle
xchg
push
imul
ljmp
push
add
mov
mov
xor
sti
fstpt
repnz
lahf
xor
ret
mov
call
addr16
je
jl
bound
mov
push
jbe
movsb
sub
add
call
repnz
mov
inc
jp
push
lea
rol
dec
jno
mov
cltd
out
jne
cmp
insl
dec
outsb
fs
mov
fs
orb
rcrl
sub
mov
pop
movsl
adc
arpl
dec
and
ja
xor
ret
pop
nop
test
dec
cltd
or
mov
nop
push
dec
stc
into
mov
inc
lahf
jle
mov
push
xchg
inc
pushf
pop
and
jecxz
outsb
popa
cld
insl
insl
cmpsb
aam
add
addl
jle
add
call
pop
pop
mov
lahf
adc
addb
mov
inc
std
mov
and
mov
dec
mov
scas
ficoml
pusha
cli
js
cmp
cmp
mov
inc
sub
mov
aam
xchg
mov
lea
jmp
xlat
push
mov
or
xor
mov
dec
lods
adc
or
pop
add
push
cwtl
bound
inc
and
fstl
cmp
aas
sti
fidivs
cmp
lcall
stos
mov
pop
inc
push
scas
inc
mov
call
imul
push
inc
inc
pushl
mov
sub
mov
loop
repz
or
mov
movsl
mov
sti
lret
add
call
inc
addb
dec
nop
insl
xlat
or
pop
popa
sub
nop
or
sbb
es
into
sbb
aad
xchg
sub
pop
jg
shrl
mov
push
pop
and
adcl
cmp
pushf
notb
xor
sbb
mov
or
add
call
adc
imul
push
dec
adc
hlt
lea
les
lret
xor
xchg
cwtl
orl
sbb
out
cmc
fmull
mov
enter
jbe
mov
or
mov
aam
ret
lahf
shrw
cmp
lret
xor
insl
mov
std
fiadds
call
movsb
loop
faddp
test
push
mov
ds
mov
sbb
stc
push
lret
jmp
ffreep
in
fld
ljmp
call
xchg
xor
mov
mov
mov
test
mov
mov
fcoms
dec
mov
push
ret
leave
hlt
xchg
lret
cmp
pop
mov
in
sbb
dec
insl
sbbl
pop
mov
jmp
mov
lds
adc
arpl
inc
xor
stc
ljmp
xlat
clc
out
pop
out
xchg
fsubrl
cld
pop
dec
mov
aas
clc
int
jp
xchg
jnp
rolb
mov
es
sarl
add
call
fcom
in
push
push
adc
rcrl
jne
sub
cmpsl
aad
sub
mov
fnstenv
sarw
xor
sbb
cmc
loopne
enter
insl
mov
lock
in
cli
inc
lock
push
pop
cmc
add
jne
sbb
adc
das
push
ror
leave
add
xchg
add
push
adc
add
fildl
xchg
sub
fnstsw
mov
out
xor
mov
loopne
inc
decl
outsl
cmp
imul
add
call
lds
dec
jne
xchg
dec
mov
and
adc
mov
clc
xor
lcall
lds
mov
stc
sbb
push
add
or
lods
scas
push
xor
push
push
out
data16
int
rcl
adc
std
lods
jge
test
pop
inc
lretw
lret
cmp
insb
jp
pop
pushf
out
mov
cld
dec
popa
aad
jmp
out
push
and
xor
adc
cmp
imul
mov
jge
mov
loopne
push
xor
add
call
repz
scas
mov
dec
arpl
sub
int
xor
mov
or
ret
mov
sub
andb
enter
dec
bound
push
adc
fists
jmp
sbbb
rclb
mov
mov
inc
es
cmpsl
insb
cmp
cmp
ljmp
test
js
cmc
cmp
sub
jno
cmp
mov
mov
dec
cwtl
xchg
dec
push
fisttpll
cwtl
mov
cmp
enter
sub
lret
inc
insl
add
call
cli
dec
mov
xchg
and
ljmp
mov
sbb
push
cmp
and
ds
subb
xchg
mov
add
dec
add
divl
inc
jns
sub
mov
pop
push
add
mov
jne
repnz
push
mov
mov
dec
fisubs
mov
stos
mov
shll
fsts
cmp
xchg
and
scas
push
mov
movsl
xor
dec
pop
inc
outsl
xchg
outsb
loopne
pop
arpl
add
call
lods
cmp
insl
xor
pop
adc
mov
call
std
jecxz
movsb
sahf
imul
sub
xor
jnp
std
outsb
aas
and
push
add
mov
ret
mov
subl
jns,pt
cli
mov
pop
ds
mov
test
sub
das
popa
pop
lret
out
push
pusha
push
mov
outsb
mov
xor
jno
mov
aaa
lret
xor
jae
shrl
std
aaa
sub
stc
xor
call
sarb
pop
popf
pusha
push
mov
stos
mov
cld
xchg
in
int3
movsb
mov
cmpsb
and
cltd
push
fcomip
repz
or
pop
lods
insb
mov
add
addl
xor
ja
xchg
ss
pushf
psubusb
lret
mov
xchg
mov
mov
or
pop
adc
pop
and
pop
fwait
xor
jae
ja
push
xlat
push
pop
mov
cmp
cmp
cmp
jae
stc
pop
inc
hlt
stos
into
inc
clc
hlt
lret
cmpb
call
inc
pop
stc
dec
mov
bound
xor
gs
test
insl
jle
loop
and
outsb
pop
push
push
jno
roll
enter
movsbl
or
int3
mov
insb
adc
jns
fwait
repnz
jp
aaa
and
add
mov
mov
loopne
pushf
js
adc
jmp
roll
popf
aas
pop
xchg
dec
xchg
push
mov
cmpb
bound
adc
pop
xor
xor
cmp
mov
add
call
jp
dec
jmp
dec
dec
incl
sbb
push
sub
jmp
outsb
mov
lcall
jp,pn
add
push
aam
push
mov
mov
fldenv
mov
jns
mov
lret
and
jae
cmp
test
out
fisubrs
add
sahf
fiaddl
adc
or
and
dec
nop
xchg
xor
and
cs
and
sub
imul
xchg
shrd
scas
stos
adc
jle
xchg
cmp
add
dec
loopne
shrb
ret
fdivrs
jg
imul
call
pushl
test
imul
mov
dec
add
dec
call
push
imul
in
adc
popf
loop,pn
mov
push
out
cmp
xlat
movsb
outsb
fdiv
push
pop
inc
in
xchg
mov
sub
xchg
mov
mov
cld
add
cmp
add
mov
roll
jnp
subb
rdseed
xchg
jg
lret
xchg
mov
pop
pop
inc
mov
pop
push
add
call
or
add
add
xchg
cwtl
or
jl
leave
in
jecxz
add
and
sarl
fstpl
lock
sub
inc
mov
inc
push
ret
push
xor
sbb
sub
or
inc
ljmp
xchg
fcom
cmp
push
adc
in
ds
jl
jae
cwtl
mov
icebp
or
jae
out
jmp
scas
xor
mov
mov
mov
sub
xchg
out
adc
aas
adc
call
push
rcrb
push
fistps
xchg
push
adc
dec
xor
ss
cmpsb
mov
das
xlat
lret
inc
loopne
push
push
push
mov
fucom
mov
adc
es
incl
cmp
test
ljmp
inc
xchg
mov
cmp
push
callw
mov
sub
pop
xor
jmp
or
sbb
repnz
hlt
pop
mov
dec
cmp
int3
add
call
pop
notl
mov
inc
mov
rcrb
ret
in
jne
addb
xchg
pop
add
loopne
xchg
insb
jg
dec
in
data16
lret
aam
jb
cmp
sti
int3
imul
out
jns
imul
stc
lcall
pop
sub
dec
test
jno
xor
lret
xchg
rol
inc
pop
add
or
jne
mov
lds
xchg
aam
pop
add
call
cmpsl
dec
jno
push
push
pop
inc
sar
mov
adc
rcr
adc
fs
jg
dec
pop
sahf
cs
mov
mov
lret
cmpsb
mulb
loop
cmp
sub
push
pop
dec
mov
jns
fwait
dec
and
bound
mov
test
fstpt
leave
sub
mov
sbb
sahf
sbb
test
mov
xchg
subb
xor
in
shll
lcall
iret
test
repnz
fwait
pop
movsl
loope
add
call
push
iret
pusha
xchg
imul
mov
mov
and
stos
movsl
mov
pushf
int
stos
push
xchg
cmp
ds
pop
es
jo
mov
push
dec
ret
stos
mov
push
xor
stc
mov
insl
in
cld
xor
pop
movsb
push
mov
leave
mov
inc
mov
mov
cmp
pop
scas
jle
imul
movsb
lret
add
jle
cmp
outsb
push
xor
enter
loop
sub
lds
divl
cmc
add
call
das
movsl
enter
stos
cwtl
xchg
lea
popf
push
sub
sahf
sbb
mov
sub
jb
andl
push
xchg
in
adc
shll
xchg
imul
mov
fucomip
mov
je
adc
shrb
js
scas
idivb
pushf
imul
ljmp
in
in
mov
shrl
cmp
push
or
cmp
fsubrl
test
jecxz
and
jbe
dec
clc
ja
inc
cmp
lods
pop
into
push
mov
jbe
xchg
ds
add
call
cmp
ds
mov
ss
outsb
mov
xlat
addr16
hlt
add
xchg
jb
sub
push
imul
and
sahf
sub
pop
push
movsb
incl
call
fsubl
es
jo
dec
xchg
sbb
or
xchg
fcompl
es
jg
pop
cmp
pop
enter
jl
add
lret
mov
xchg
inc
jge
push
call
inc
pop
mov
lea
sbb
sub
or
pop
aam
push
or
test
and
hlt
popa
mov
add
call
inc
mov
out
stc
and
loop
mov
xorl
push
imul
jl
lcall
mov
sbb
push
jb
mov
sbbl
daa
fcom
loope
inc
xor
xchg
sarb
stos
and
sbb
pop
fcomp
lock
inc
xor
jne
push
mull
xchg
outsl
xchg
insl
add
lock
and
jmp
mov
pop
pop
xor
add
call
outsl
bound
cmp
xor
ret
sub
pop
push
mov
call
shll
mov
inc
xchg
push
xchg
imulb
or
fstp
lcall
test
mov
fidivs
popf
insb
pop
enter
xor
xor
adc
adc
dec
cmc
test
pop
jle
in
jnp
push
push
hlt
test
es
lock
out
shrl
jle
out
jle
std
xchg
jl
xchg
subb
add
or
call
xorl
aaa
mov
jl
dec
inc
ror
xchg
cwtl
mov
repz
mov
lret
mov
pop
jl
dec
add
ret
imull
xchg
insb
repnz
push
sahf
inc
incb
xchg
add
fwait
push
sub
gs
mov
mov
fldt
lahf
rcrb
rcrl
adc
ret
test
lret
lock
js
sbb
dec
dec
pusha
pop
pop
jo
dec
adc
inc
jle
lret
pop
dec
inc
jmp
lea
add
call
sahf
cmp
or
xchg
mov
jle
sub
inc
lock
int3
dec
push
mov
mov
jb
inc
cmp
pop
ljmp
mov
fmul
enter
mov
mov
and
cltd
roll
push
imul
or
cmpsl
xor
xor
pop
mov
outsb
mov
pop
or
fidivl
idiv
rcr
xor
or
mov
xor
loope
lret
insl
lret
pop
sub
clc
mov
xchg
jae
loop
push
out
add
add
call
iret
mov
pop
xor
sbb
cmp
lock
cmp
inc
ret
add
xchg
ret
lds
shll
jge
push
mov
and
and
orl
xchg
inc
lds
push
je
adc
fadds
mov
mov
xchg
mov
fisubrl
ds
pop
inc
andb
loop
sub
adc
fistps
push
cmp
cmp
jl
push
cmp
add
call
cld
adc
ret
inc
dec
sarb
inc
idivl
inc
mov
arpl
gs
nop
js
cmpsb
dec
mov
in
out
jle
push
xor
in
nop
fists
std
pusha
jb
mov
jbe
cs
frstor
out
or
push
xor
test
and
jp
lock
push
and
jle
test
movsl
add
jmp
mov
in
sahf
inc
lods
and
idiv
add
add
call
push
add
in
enter
cmp
orb
outsl
push
inc
pop
adc
add
sub
call
jl
pop
sbb
outsb
adc
loop
cltd
pushf
mov
or
gs
insb
fistl
negb
push
insb
call
cwtl
mov
add
repz
scas
mov
stos
hlt
sbb
xchg
dec
dec
cwtl
leave
popf
jno
jle
mov
sub
dec
mov
imul
test
xor
jb
mov
call
scas
or
mov
cmpsb
adc
nop
mov
mov
push
push
push
pop
popa
pop
xchg
sar
sbb
cmpsl
movsb
fwait
dec
rcrl
popa
mov
lret
cmp
cltd
loopne
cmp
data16
adc
fwait
pop
pusha
cmc
xlat
adc
std
shlb
in
ss
add
pop
inc
stc
or
lcall
mov
icebp
out
negl
xchg
mov
cli
add
adc
mov
xchg
dec
mov
adc
cmp
add
call
and
pop
push
add
std
cmp
insb
sbb
pop
enter
push
add
repz
out
subl
mov
dec
into
inc
inc
lds
fdivrs
or
jle
mov
test
daa
int3
cli
pop
dec
loope
jno
bound
stos
std
push
dec
push
sbb
call
rcl
cmp
repz
fstl
sbb
subb
mov
xchg
or
sti
or
inc
and
sti
or
dec
pop
pop
nop
and
icebp
xor
scas
mov
mov
add
call
out
inc
pop
inc
xor
mov
andb
js
push
aad
inc
mov
inc
mov
lahf
mov
inc
xchg
push
js
dec
add
lea
inc
arpl
or
addr16
int3
mov
clc
or
mov
sbb
les
mov
arpl
mov
jno
pop
enter
lods
stc
fisttpll
dec
rcrl
fdiv
repnz
addl
pop
ss
inc
fs
popa
das
sbb
fcmovnb
pop
push
in
pop
adc
cwtl
jle
pop
fmul
push
jmp
pop
jp
add
call
testb
and
jp
sub
in
dec
fnstsw
mulb
out
fldenv
sbb
push
iret
pop
inc
popf
adc
or
sub
xchg
movsb
or
add
push
sbb
mov
lds
push
aaa
cmp
das
movsb
ljmp
insl
lret
ret
sub
and
test
stos
data16
add
in
dec
insb
pop
pop
cmpsl
push
xchg
cmp
adc
jno
lods
pop
cmp
ss
cwtl
ud2
push
xlat
repnz
adc
or
jecxz
add
call
popa
jge
push
jl
out
pop
rcl
in
cmp
scas
das
scas
sbb
sub
pusha
pop
lds
orl
inc
test
pop
test
sub
push
mov
popa
aaa
cli
loopne
push
cmc
or
jge
push
or
pop
pop
jge
int
outsl
mull
sub
mov
push
stc
bswap
push
int3
jnp
jg
repnz
mov
or
flds
or
mov
fucomip
sbb
inc
imul
xlat
mov
ret
add
call
out
in
in
ret
scas
pop
insb
imul
mov
mov
push
mov
fucomip
sbb
push
lcall
lcall
or
adc
xchg
pop
sar
bound
mov
mov
jne
out
lret
add
out
cltd
lock
pop
rorl
add
sbb
jge
or
popa
push
pop
shrb
cmpl
mov
push
mov
xchg
jge
add
call
hlt
dec
sub
aad
pop
xchg
lock
jne
pop
stos
mov
ret
jnp
arpl
addl
push
inc
and
push
cmp
add
push
mov
pop
pop
or
xor
imul
call
cmp
or
pshufw
push
add
test
ret
xor
cmpsl
sub
fdivl
mov
call
or
clc
addl
mov
popa
movsb
pop
stos
sbb
in
and
rolb
sub
add
call
cwtl
sbb
lret
adc
rcll
inc
inc
mov
into
sarl
mul
sub
add
sbb
dec
in
mov
movsl
jp
fmuls
add
xchg
pushf
sahf
pop
dec
pop
pop
jmp
sysenter
mov
mov
inc
add
dec
cs
fs
xor
adc
iret
test
testb
sbb
loopne
jne
xchg
cs
xlat
orl
in
jno
lea
mov
mov
fdivr
inc
mov
jl
mov
jp
push
call
sub
mov
fldcw
push
and
xor
js
mov
mov
int3
test
jmp
xchg
mov
call
pop
push
outsl
push
mov
xor
mov
mov
and
out
jl
repnz
imul
ret
jno
lret
push
mov
sub
and
and
sbb
inc
mov
ficompl
leave
adc
jl
push
xchg
ret
mov
out
icebp
push
add
call
push
and
scas
les
jg
pop
imul
arpl
mov
push
nop
xorl
ret
xchg
repnz
mov
xchg
stos
pushf
mov
push
xchg
sbb
inc
in
dec
iret
cs
cltd
in
in
sahf
iret
sbb
daa
push
mov
ss
jecxz
incb
mov
inc
push
inc
fsubr
sbb
sbb
sub
outsb
int
stos
sbb
dec
aaa
xor
lock
out
adc
pushf
mov
iret
lock
xchg
add
call
xchg
cmc
sub
mov
divl
iret
add
cmc
fs
rcrb
hlt
or
inc
sub
adcl
pop
xor
rcrb
sub
and
sub
in
cmp
xchg
or
rorl
mov
push
push
pop
add
scas
clc
ja
cmp
adc
xor
dec
insl
add
or
cmp
xor
sub
push
pop
push
das
aas
in
sub
or
insl
std
lcall
sub
scas
outsb
cmpsb
jne
pusha
adc
add
xor
int
lock
add
call
ret
fidivs
fsubrs
jg
fwait
xorl
xor
sbb
mov
sbbb
cmp
mov
sbb
subb
and
or
repnz
shl
nop
mov
sbb
jne
cmp
sbb
mov
dec
mov
mov
frstor
push
push
cld
mov
stos
fwait
or
call
fldenv
mov
cmp
add
ds
data16
sti
xlat
repz
pop
or
aas
jnp
cmp
call
rcl
mov
js
push
ror
icebp
inc
push
cld
int
cmp
movsb
rcll
fcoms
sub
cmp
ret
adc
jae
jb
fwait
cmp
push
mov
es
xchg
or
insl
orl
mov
mov
js
clc
mov
orb
xor
je
int3
inc
scas
cmp
movsb
fs
fwait
mov
popf
sti
popa
aaa
inc
shll
mov
pop
xchg
in
push
mov
jle
push
xor
push
outsl
jno
sti
lret
std
adc
add
call
loope
pop
fdivrl
std
mov
loope
nop
cs
insl
test
inc
pop
and
in
mov
and
jl
aad
xchg
cmc
mov
cld
dec
daa
loopne
ja
push
cmp
imul
fisttpll
fimull
lock
cmp
inc
mov
int
sahf
negl
outsb
stos
stc
mov
xchg
out
test
loop
cld
mov
in
mov
or
out
daa
sbb
inc
mov
sbb
addr16
das
inc
add
inc
sub
icebp
insl
enter
add
call
add
std
test
sbb
int
mov
inc
sbb
sub
fcoml
mov
jg
push
in
jae
mov
sub
sti
xor
mov
inc
xor
jnp
pop
test
xchg
bound
or
and
pop
mov
stos
jl
mov
jecxz
mov
cwtl
arpl
lcall
fwait
adc
outsl
add
fwait
enter
xor
es
lret
cwtl
inc
inc
movl
popa
sbb
sbb
into
mov
add
call
mov
push
outsl
repnz
loop
pop
ss
out
adc
mov
repz
pop
scas
mov
pusha
mov
dec
push
xchg
and
sbb
cmpsb
mov
xchg
sub
push
or
stc
sti
xor
in
mov
call
cmpsb
clc
out
push
loopne
pusha
mov
sub
xor
lcall
cmp
out
sub
inc
test
jmp
cmp
add
call
mov
movsb
shlb
inc
mov
movsb
push
pop
push
icebp
shrb
lods
lock
aaa
lahf
das
cmp
cmp
loop,pn
pop
mov
out
addr16
ljmp
data16
xchg
ljmp
push
mov
cld
popa
mov
or
inc
cmp
adc
stc
jmp
push
popf
sti
xchg
push
xor
je
leave
jl
repz
dec
xor
fldenv
jecxz
les
adc
push
add
call
and
cmp
les
stos
ret
sti
or
mov
xor
sbb
out
stos
dec
and
movsl
xor
sbb
mov
hlt
cld
fstpl
divl
jg
inc
and
and
ficomps
mov
out
sahf
test
mov
add
mov
fstpt
cmp
pop
ret
xchg
mov
jae
out
cmp
pop
mov
inc
xlat
mov
jno
lods
maxps
lods
stc
add
dec
xlat
enter
insl
stos
xchg
mov
add
call
outsb
nop
ss
sub
mov
les
jp
leave
aam
and
das
mov
cmpsb
lds
pop
sub
pop
scas
js
es
dec
js
push
orb
repz
fxch
cmpsl
cmp
or
cmp
test
cwtl
das
mov
imul
ss
out
add
loopne
pop
push
xor
lds
sbb
loopne
dec
jno
jbe
xor
hlt
mov
jecxz
cmp
cmp
mov
inc
xchg
pop
dec
int3
push
sub
in
insb
out
add
call
add
in
fidivs
mov
and
xchg
mov
push
call
sub
sbb
lret
ljmp
js
push
xor
mul
mov
mul
xor
mov
jb
addr16
cmp
xchg
repnz
rcrl
push
movsl
jmp
icebp
inc
dec
xchg
or
int
jns
mov
flds
push
sub
dec
inc
jecxz
adc
lcall
aas
add
lods
mov
or
lock
xchg
add
add
or
dec
xchg
and
sub
addr16
int
sbb
sub
xor
jle
mov
xchg
and
push
cmp
stos
or
mov
push
out
pop
sub
cmc
lods
and
inc
rolb
negl
or
notb
mov
inc
and
inc
in
nop
out
add
js
addr16
mov
test
mov
js
stos
mov
mov
fisubs
inc
stos
mov
dec
pop
shrb
in
mov
add
call
pop
mov
xchg
xchg
mov
mov
int3
ret
repz
jne
mov
or
dec
jge
ret
push
lahf
cli
sbb
pop
mov
inc
jecxz
add
mov
nop
call
int
mov
sub
push
cld
xchg
mov
sbb
pusha
ror
xchg
inc
call
les
mov
imul
or
inc
xchg
aad
rcrl
in
push
into
mov
not
repz
pusha
lea
add
push
imul
call
mov
mov
adcl
sti
cmp
and
arpl
sub
push
pop
jg
or
or
lret
test
mov
inc
out
sbbl
dec
aas
adc
outsb
inc
pop
adc
test
mov
hlt
clc
fstpt
mov
push
sar
ret
push
mov
std
ficomps
cmp
sahf
out
push
iret
dec
insl
xchg
push
lods
inc
pushf
mov
fldenv
sbb
xchg
mov
mov
pop
test
add
call
into
mov
popa
xor
inc
xchg
in
inc
jns
movq
je
stos
mov
scas
filds
aam
sbb
fidivl
out
add
cmp
pop
pop
enter
loope
movsb
pop
jo
jle
lea
andb
xchg
dec
lds
cmp
rol
sbb
jmp
mulb
outsl
jl
lahf
and
jg
cli
jmp
dec
sub
out
mov
data16
add
sbb
repz
stos
pop
push
adc
cmp
add
call
pop
push
sti
fnsave
push
mov
jp
dec
lret
jno
out
sahf
pop
xor
mov
stos
cwtl
mov
insl
or
fildl
cs
jg
fisttps
add
pop
fucomp
cmp
xchg
inc
insl
xchg
add
push
xchg
movsb
sti
push
scas
mov
jns
int3
mov
pop
xchg
arpl
lods
sub
adc
fld
mov
inc
sub
pop
sub
loopne
push
les
rol
mov
out
bound
lahf
add
call
pop
sub
aad
jmp
and
fimull
mov
or
mov
add
jecxz
ficompl
into
jns
out
mov
inc
pop
stos
call
sub
and
lods
mov
in
arpl
popa
mov
mov
aas
lock
es
test
loope
test
jne
pop
enter
jmp
int3
dec
pop
dec
aas
fadds
mov
push
sahf
pop
arpl
cmp
sbb
icebp
xchg
pushf
repnz
mov
int
dec
inc
sbb
jge
jg
xchg
lock
call
jp
shlb
jge
jg
push
in
adc
scas
xchg
mov
xor
aam
add
and
lea
sbb
mov
adc
adc
xor
aad
gs
add
es
in
fsubrl
rcrl
mov
jl
push
rcrb
cmp
cld
scas
push
mov
je
mov
adc
enter
je
out
in
movsb
rclb
ds
pop
push
push
icebp
mov
outsb
sbb
add
sub
stos
and
add
call
cmp
ret
push
fmul
es
pop
lods
or
aad
adc
stos
mov
lcall
aaa
ds
inc
mov
push
adc
dec
jl
xchg
and
scas
xlat
dec
hlt
sbb
xor
xor
pop
test
sub
cmc
subb
pop
popf
loop
ss
dec
push
jb
mov
cmc
into
dec
aaa
push
lods
or
push
and
rcl
sahf
dec
pop
pusha
lods
mov
lock
rcrl
test
add
sub
int3
and
add
call
int
mov
sahf
enter
inc
mov
pop
xchg
leave
pusha
rorb
ss
push
rcll
sbb
mov
jp
or
negb
adcl
sub
add
cmpsl
add
inc
pop
dec
push
push
icebp
xchg
in
pushf
lcall
push
mov
jo
adc
rcl
imul
dec
jl
nop
or
cmp
leave
sbb
mov
loope
test
call
adc
insb
push
jo
psubusb
lea
push
pop
dec
popf
mov
ja
aam
div
daa
inc
into
add
push
fistpll
hlt
mov
jo
sub
dec
and
stos
pop
mov
jg
mov
das
imul
jmp
sub
jl
add
xchg
rcr
ja
js
out
mov
inc
mov
inc
iret
jle
das
push
div
cwtl
xchg
xchg
jecxz
testb
and
movsb
fnstsw
jnp
imul
inc
ret
mov
dec
dec
jl
add
call
popf
mov
fucom
add
out
das
cmp
test
daa
call
stc
sahf
lea
dec
mov
inc
mov
cmp
mov
into
mov
leave
rorl
mov
adc
movsl
xor
aam
mov
and
mov
shll
arpl
dec
decb
and
cmp
push
xchg
fmuls
imul
iret
stos
sti
or
icebp
dec
or
stos
sub
repnz
dec
mov
add
call
es
in
add
pop
cmp
sti
xchg
inc
sub
rcll
call
dec
cwtl
shrl
cld
in
bound
pushf
push
and
lcall
xchg
dec
leave
aad
lods
xchg
xchg
in
mov
push
xchg
jae
into
je
push
jbe
rcll
push
cmp
push
sub
movsl
xchg
pop
sbb
inc
test
je
imul
stc
in
push
lock
sub
xor
clc
mov
stos
cmp
or
pop
enter
add
call
mov
out
jp
loop
jb
xchg
cli
fiadds
das
mov
add
xchg
add
aad
mov
jge
fiadds
xor
test
pop
push
xor
xchg
gs
insl
or
in
out
in
adc
decl
cmp
add
test
sub
icebp
mov
add
adc
mov
inc
fsubrl
jae
and
sarl
dec
stos
call
or
jl
adc
mov
cmpsb
int
sbb
call
inc
and
ds
sahf
push
rcll
clc
jge
shll
mov
addr16
xor
xchg
repnz
out
pop
jp
sbb
or
mov
loope
cld
add
push
mov
jo
outsl
mov
fisttps
mov
mov
lods
aad
xchg
sub
aas
adc
pop
stc
push
cmp
js
cmpb
enter
cmpsb
arpl
xor
insb
mov
test
cmp
lahf
add
call
lea
sbb
xchg
aaa
test
mov
mov
es
aaa
popa
popa
daa
test
xchg
int
mov
sti
pop
pop
lock
icebp
cli
fisttpl
scas
inc
and
mov
lret
jge
pop
in
lods
js
out
pop
cmp
dec
cmp
fiaddl
stc
dec
ficoml
clc
jno
sub
mov
pop
mov
mov
xor
movsl
jmp
sbb
sub
and
or
sbb
dec
add
call
cltd
inc
bound
sbb
es
sbb
scas
mov
adc
and
hlt
or
clc
inc
fstl
aaa
lods
pop
pop
mov
jge
movsl
pusha
leave
int3
pop
inc
and
jecxz
inc
jecxz
add
mov
jl
lds
xor
idivb
sbb
mov
sbb
lods
mov
rep
xchg
mov
push
rclb
aas
fstpt
jnp
ror
add
sbb
imul
rcll
push
or
mov
and
movsb
or
call
and
addb
lea
or
shlb
sbb
add
adcl
add
loopne
and
jnp
popf
push
mov
add
popa
add
and
and
mulb
push
mov
xchg
push
or
mov
push
jno
mov
in
pop
not
daa
pop
or
orl
jns
or
dec
hlt
xchg
rcrl
sbbl
or
mov
sbb
add
into
mov
leave
jbe
add
call
mov
xchg
push
std
sub
divb
dec
sub
out
mov
mov
lldt
hlt
push
dec
daa
scas
adc
push
test
in
pop
fadd
pop
lock
inc
cmp
xchg
adc
mov
imull
sbb
insb
mov
mov
mov
nop
scas
dec
mov
imul
mov
addr16
loop
ljmp
mov
ljmp
push
jns
jb
or
les
negl
mov
add
call
test
jnp
cli
cld
sub
rcrb
mov
mov
cmc
jmp
ret
jo
push
in
jg
jo
sahf
mov
cmp
inc
fnsave
js
ss
pushf
fcmovne
in
dec
push
and
xchg
xor
mov
xchg
pusha
sbb
js
in
dec
mov
fmulp
fwait
cld
arpl
dec
addl
pop
sub
and
loopne
mov
jmp
push
js
movsl
push
mov
rcrb
or
arpl
sbb
gs
fsubp
push
shll
add
call
adc
or
mov
lods
jb
mov
jle
test
and
xchg
mov
js
mov
xchg
in
push
int
push
pop
push
jb
ds
and
clc
daa
iret
cmp
mov
ret
popa
and
pop
adc
iret
inc
stos
loope
cmp
xchg
and
dec
out
adc
xchg
sbb
fwait
inc
test
lock
lods
pop
sub
push
mov
xchg
mov
xor
add
pop
add
call
outsl
into
push
pop
rclb
add
loopne
lods
js
mov
fdivs
bound
adc
pop
lds
dec
mov
or
es
aad
push
mov
jno
pop
jns
mov
fwait
int
cld
loopne
fcoms
xor
js
and
mov
test
outsl
insb
mov
movsl
mov
cmp
mov
sub
mov
jl
stos
xor
cltd
sub
and
jbe
insb
sub
filds
pushl
push
cld
add
call
stc
in
jns
sbb
jno
bnd
shl
pushf
cmp
mov
outsl
insl
or
test
mov
adc
lock
xchg
fcompl
int3
popf
push
aam
dec
cmp
cmp
sbb
adc
test
popf
test
and
ffreep
xchg
push
cmp
scas
cmc
loop
xchg
js
fldenv
rorl
mov
cltd
cmc
cmp
add
xorl
cmp
decl
push
mov
call
xor
inc
out
lea
adc
mov
and
js
fstl
or
addr16
out
stos
jp
leave
sub
cmp
outsb
sub
pushf
push
adc
or
xor
and
aad
pop
inc
or
and
jne
and
lret
ljmp
dec
ljmp
popf
repz
imul
adc
lcall
cmp
add
mov
sub
xchg
mov
or
sbb
push
lds
mov
notb
call
out
push
and
cwtl
jbe
ljmp
in
mov
jp
push
inc
jmp
mov
xchg
aad
sub
mov
ret
or
in
xor
inc
fldcw
enter
stc
clc
lods
imull
pop
xchg
lods
cmp
inc
loopne
pop
cmp
jne
inc
xchg
add
imul
icebp
jecxz
xor
incl
in
pop
adc
int
jge
mov
sbb
std
mov
xor
add
call
jmp
cli
jo
push
mov
push
rolb
outsl
lret
lret
outsb
jbe
roll
dec
mov
inc
inc
jno
xor
sub
popa
inc
inc
mov
and
out
inc
add
int
or
bound
mov
sbb
inc
les
or
cld
aaa
mov
push
push
mov
add
dec
pop
lods
les
test
push
out
xchg
mov
jle
ret
rorb
xchg
imul
jmp
scas
sub
jno
jmp
mov
add
call
mov
push
pop
sbb
sbb
jp
loop
inc
xor
jg
incl
mov
stos
mov
pusha
inc
add
sbb
or
frstor
pop
pop
cmp
add
pop
fwait
in
out
ds
jg
jns
cwtl
xor
jl
lods
call
js
stos
imul
or
enter
les
pop
repz
push
fcoml
gs
test
sub
stc
lock
pop
add
call
mov
daa
inc
or
out
sarb
inc
ss
or
jne
or
loop
or
mov
sbb
in
push
fdivrl
add
xor
sbb
out
xchg
in
add
arpl
xchg
pop
hlt
out
sti
and
ret
ss
mov
iret
mov
movsb
nop
dec
jecxz
addl
out
arpl
xchg
inc
and
and
jmp
leave
dec
inc
jbe
mov
stc
test
add
call
xchg
je
sub
jp
gs
lcall
pushf
cmp
inc
sbb
fcompl
stos
or
mov
push
jnp
pop
clc
xchg
cmp
and
dec
fiadds
adc
or
pop
sahf
movsl
cmp
and
mov
in
add
call
rcr
popa
je
sub
jmp
cld
test
notb
lods
pop
sbb
lret
jbe
lods
inc
nop
dec
enter
daa
sub
call
sbb
sbb
jmp
nop
dec
cmp
sbb
pusha
test
xchg
jge
xchg
lods
aas
dec
arpl
repz
ret
push
mov
repnz
insb
imul
add
rolb
sub
or
hlt
dec
nop
jo
jg
push
popa
mov
imul
dec
cmp
inc
mov
push
popf
or
mov
addr16
push
cli
std
ret
stos
ret
cmpsb
xorl
movsl
clc
xchg
in
mov
movsl
sahf
cmpsl
sub
aas
data16
icebp
popf
mov
sbb
fsubs
inc
add
call
xchg
decl
add
push
out
mov
mov
fldt
or
sub
jmp
dec
mov
loop
clc
xchg
mov
jle
push
adc
adc
mov
pushf
mov
push
mov
cmpsl
pushf
lock
add
movsl
xchg
pop
pop
dec
hlt
jle
pop
addb
xor
inc
xor
sbb
cs
dec
out
pop
dec
clc
test
and
cmp
bound
mov
and
add
add
call
adc
imul
pop
sub
pop
lds
ss
mov
mov
dec
push
aad
into
shl
test
mov
lret
loope
adc
int
jp
fmuls
push
movsl
iret
adc
lahf
and
sub
cld
jp
ss
sub
pop
or
std
xchg
scas
pusha
out
sti
sub
and
test
mov
out
inc
mov
fs
mov
push
and
mov
fisttpll
popa
pop
pushf
jg
add
call
call
dec
clc
neg
loope
ficoms
jecxz
cmpsl
lods
push
stos
add
mov
push
arpl
jns
pop
aaa
inc
int3
dec
repnz
dec
inc
cmp
add
arpl
loope
jbe
and
xlat
outsl
push
lods
repz
xchg
cmpl
in
xchg
loope
inc
jb
gs
push
sbb
fcoml
cmpsl
mov
xor
inc
pop
sbb
loopew
mov
leave
dec
jnp
data16
addl
aam
pop
dec
loopne
dec
sub
inc
test
hlt
arpl
add
call
outsb
pop
aam
dec
mov
mov
rcrb
outsb
bound
les
out
add
sub
mov
jle
jecxz
fmul
adc
or
push
adc
jg
popa
cmp
push
sbb
xchg
xor
fstpt
in
shrb
sub
lret
mov
and
lds
mov
mov
out
movsb
jae
and
in
or
inc
adc
adc
xlat
lahf
std
push
cmc
aam
fbld
divb
jbe
test
call
cmp
out
dec
mov
jmp
xchg
pop
fnstcw
jno
jmp
mov
adc
test
ficoml
pop
addr16
rcrb
pop
aas
xchg
xlat
mov
movsb
insb
in
lcall
pushf
and
outsl
orb
fisttpl
lcall
divb
xor
inc
fldenv
cmp
sub
lcall
pop
cmpsl
push
mov
mov
jmp
fldenv
jnp
arpl
cmp
jb
dec
inc
mov
mov
icebp
rcl
sbb
call
sbb
and
cltd
icebp
imul
cmp
bound
sub
and
add
add
mov
inc
in
cli
repnz
in
ja
mov
mov
mov
mov
scas
das
mov
jl
pop
pop
addr16
enter
xlat
mov
add
xchg
xchg
fcomp
shlb
jl
pop
inc
andb
in
xchg
pop
lds
sub
jnp
adc
sub
inc
xorb
pop
in
rcl
outsb
insl
sub
call
cmp
dec
popf
adc
popf
loopne
inc
subl
xchg
push
push
gs
popa
jp
inc
cmp
fsubrl
pop
sub
cmpsb
fwait
shlb
jne
pop
push
test
xchg
and
ficoml
sub
cs
sbb
and
cmp
mov
pop
xor
aas
mov
popa
jo
mov
and
in
xor
add
ds
sbb
push
cld
fcomi
or
cmp
hlt
fnstsw
mov
mov
call
lret
or
stos
data16
inc
add
fst
xor
mov
xchg
iret
cmp
xchg
xor
fcompl
sub
loopne
fnsave
push
jg
bound
outsl
faddl
sbb
mov
imul
push
cltd
aas
inc
cwtl
outsl
arpl
sub
xor
rcr
hlt
scas
je
mov
ret
popf
push
flds
pop
jl
add
adc
mov
sbb
in
leave
dec
push
or
call
mov
imul
lods
pusha
orl
mov
lods
mov
icebp
rolb
and
jae
mov
imul
push
fistpll
cmc
popf
sbb
xchg
int
pop
scas
mov
push
xchg
sub
ss
test
arpl
pop
mov
push
pop
shlb
sbb
mov
or
std
pop
ret
addb
dec
push
xor
jmp
loop
out
push
das
test
lods
lret
xor
pop
pop
xchg
jle
push
mov
adc
iret
shlb
add
call
xor
push
insb
jno
popa
movsl
idivl
fisttpll
xchg
push
mov
in
fidivs
test
dec
into
xchg
cmp
popa
xchg
in
dec
dec
or
mov
inc
or
aaa
aas
cli
out
add
mov
cmp
sub
adc
cmp
movsb
mov
xchg
jl
pop
les
pop
jg
outsl
sub
fcomp
loope
mov
sub
jecxz
daa
mov
loopne
xchg
movsb
dec
xor
call
call
stc
adc
arpl
and
mov
pop
fwait
movsb
shlb
sub
adc
or
lcall
adc
cmp
lretw
or
sub
push
pusha
fmulp
mov
dec
mov
jmp
sbb
xor
fisttpl
repnz
inc
jo
cltd
ds
pop
out
xor
jne
and
jne
scas
cmc
iret
cli
lcall
sub
lahf
stos
popf
lods
jae
aad
cmp
cmp
in
mov
xorl
dec
scas
and
call
push
aad
bound
inc
or
mov
adc
subl
adc
mov
shl
sbb
imul
inc
mov
mov
xchg
std
or
adc
lcall
addb
sub
out
lds
jns
lahf
jecxz
adc
sbb
and
sbb
dec
std
or
or
cmp
mov
ss
jns
mov
lds
sub
test
call
cld
jp
imul
fbstp
cmpsb
sub
std
xchg
or
dec
or
push
clc
inc
adc
cmc
adc
cmp
in
repnz
pop
mov
vpshaw
lea
js
test
push
ror
sbb
dec
aas
mov
and
mov
mov
loopne
arpl
test
jb
jnp
jne
popa
mov
gs
cs
sbb
imul
dec
xor
jns
sub
lret
stos
nop
add
adc
push
jp
jns
xor
add
call
inc
mov
jecxz
stos
pusha
rcll
sar
in
push
dec
pop
or
xchg
push
xchg
out
outsl
xchg
sub
lcall
sbb
ret
fcos
clc
insb
sbb
cmp
xor
cmpsl
cmp
movsl
or
ss
enter
dec
mov
inc
stc
mov
ret
pushf
in
cmp
fmull
sti
std
mov
in
cmp
xor
add
cltd
rcrl
iret
rcrl
ficoms
mov
fwait
cmp
sbb
mov
pusha
add
call
pop
pop
adcb
sbb
neg
pop
jp
mov
mov
adc
xor
fldt
mov
mov
xor
mov
mov
xorb
sti
addl
cmpb
iret
adc
mov
jns
nop
hlt
fbld
xchg
xor
fcoml
les
lret
mov
push
jo
sar
pop
sti
jne
scas
xor
cwtl
dec
mov
sbb
cwtl
ror
fmuls
test
inc
clc
sbb
sub
insl
add
call
mov
inc
or
lea
scas
out
mov
incb
jae
or
mov
loop
sub
enter
inc
fadds
or
lea
pop
xchg
push
pop
outsb
daa
pop
aaa
and
aad
xlat
pop
faddl
jns
mov
out
xchg
dec
ja
insl
mov
jmp
fisttpll
inc
fxch
pop
jle
sti
push
pusha
pop
call
mov
test
adc
xorl
pop
int3
lea
push
iret
sbbb
out
xor
call
adc
push
clc
mov
mov
jle
sbb
mov
mov
inc
into
daa
lods
arpl
sub
insb
or
fidivrs
pop
or
push
movsb
mov
pusha
dec
add
shlb
sub
ds
cli
movsb
and
shr
mov
inc
aas
jg
cwtl
lret
lock
mov
adcl
cmp
mov
or
lahf
imul
add
int
cmp
clc
add
call
lods
outsl
pop
sar
adc
mov
ja
mov
xchg
and
sbb
xchg
push
ja
jg
in
sti
cmp
fimull
lcall
mov
hlt
add
pop
inc
pop
inc
cmpsb
loope
and
enter
cmp
xlat
fildll
loop
push
in
push
adc
or
ret
mov
mov
sbb
sbb
sub
jg
out
in
ds
imul
and
scas
iret
cmp
pop
xchg
sahf
notb
push
add
call
jno
pop
arpl
repnz
or
sti
fisttpl
js
mov
aad
sahf
adc
nopl
sbb
adc
dec
jl
add
push
or
scas
jb
mov
pop
mov
push
ret
xor
ret
lcall
inc
out
mov
sbb
jb
push
jne
fs
insb
sahf
test
add
loope
and
cmp
out
sub
add
adc
cmp
dec
xchg
push
or
fstpt
push
aad
outsb
xlat
es
in
mov
movsl
ret
push
add
call
lret
call
pop
xor
imul
xchg
cmp
adc
jmp
cmp
movsb
and
sub
dec
lea
sbb
cwtl
mov
add
pop
movsb
jns
popa
xchg
call
mov
dec
aas
jle
adc
imul
mov
stc
icebp
xor
jnp
fisubl
stos
cmp
cmp
push
movsb
frstor
pop
jnp
lahf
sub
icebp
pop
loopne
loopne
mov
in
jp
add
call
out
xchg
pop
gs
mov
push
inc
das
mov
adc
cmp
jno
sbbl
push
in
push
push
neg
outsb
dec
int
js
mov
rolb
mov
cmp
fwait
jmp
sbbb
fimull
jmp
and
cmc
filds
shr
inc
sub
xchg
mov
push
fistpll
or
xor
cmp
pop
sub
rolb
dec
fwait
mov
push
mov
call
mov
jno
nop/reserved
pop
icebp
call
cmp
popf
int3
pusha
adc
add
out
mov
std
dec
aaa
xor
xorl
sbb
sbb
ss
mov
ficomps
sti
ja
jne
inc
mov
push
cltd
in
xchg
pop
cmp
or
dec
and
jne
pop
ljmp
cmp
and
out
fnstcw
xchg
mov
inc
cs
pop
fwait
outsb
jnp
out
and
mov
mov
pop
bound
mov
call
mov
cmp
mov
mov
lods
sub
js
and
cmp
data16
les
subb
pusha
pushf
push
xchg
clc
fisubl
pmullw
push
xor
add
aad
jne
sbb
lcall
inc
pop
cmp
nop
add
inc
xor
mov
and
mov
xor
mov
xchg
fldt
sub
pop
sbb
imul
cwtl
cmp
daa
mov
or
loopne
test
add
call
add
add
mov
pop
dec
in
repz
push
dec
sbb
jp
cwtl
pop
and
imul
mov
idivl
ss
pop
stos
orb
in
sbb
mov
call
sub
lret
les
pop
nop
push
and
and
cmp
rcl
push
ret
ss
cmpsb
fwait
std
lds
scas
or
hlt
outsb
fsubs
dec
sarl
push
xlat
ficomps
repz
test
add
call
xchg
fstl
sbb
lret
test
cmp
jne
add
pop
or
in
je
pusha
add
sub
mov
dec
mov
push
dec
xchg
dec
ljmp
imul
aad
out
lods
popa
xor
ja
aas
jae
lea
std
leave
mov
test
sub
mov
jbe
cltd
jg
xchg
xchg
jg
sub
repz
scas
cmp
cmp
pop
mov
inc
ret
dec
cli
and
sbb
popf
mov
add
call
push
call
fs
fisubrl
pop
cmp
xchg
pop
xchg
xor
mov
fldcw
sti
mov
xchg
js
mov
stos
and
fs
inc
pop
aaa
jo
test
mov
add
mov
hlt
dec
scas
es
stos
xchg
xor
in
push
pushf
out
and
pop
fisubrl
aaa
inc
sbb
xchg
mov
call
cmp
xor
scas
rclb
add
movsb
dec
sbb
and
addl
push
sbb
add
call
outsl
xorl
mov
cmp
scas
movsl
push
in
or
das
mov
stos
jge
testb
scas
cmp
cmpsb
mov
sbb
insl
pushf
dec
imul
mov
dec
test
pop
lods
loope
out
fisubrl
jmp
iret
mov
out
ljmp
lret
pusha
lahf
xchg
mov
push
xlat
dec
sar
and
mov
pop
mov
sub
jle
pop
sahf
daa
cmp
pop
dec
or
xchg
stos
sub
dec
dec
mov
pop
out
hlt
jmp
lods
pop
mov
add
call
pop
out
nop
pop
adc
bound
addr16
push
jge
jo
push
dec
mov
jo
mov
nop
or
int3
out
or
adc
inc
mov
das
jecxz
jbe
mov
stc
sub
std
mov
ds
orb
push
iret
cmpsl
pop
mov
dec
or
xor
push
or
sub
lds
ds
push
mov
and
subb
adc
ficomps
adc
imul
inc
popf
mov
add
call
test
jecxz
mov
jg
jae
pop
loope
dec
and
cmp
push
sbbl
inc
jl
jbe
jg
or
lcall
fptan
outsl
inc
sub
imul
jecxz
pop
testl
aad
push
push
pop
cmp
test
gs
inc
push
aaa
lea
inc
std
cmpsb
push
fwait
or
ljmp
lea
cmp
push
adc
mov
and
fstps
sti
xor
mov
lds
add
call
mov
ret
dec
fwait
dec
push
aam
cmpsl
shll
xchg
arpl
xchg
mov
inc
dec
sub
test
lock
push
pushf
cmpsl
jo
mov
cmc
test
pop
cmp
and
dec
mov
ret
aam
mov
push
lret
lahf
enter
popa
fistpl
cmp
das
adc
pop
and
js
popa
fisubrl
cmc
mov
dec
or
inc
out
mov
inc
push
mov
ds
inc
push
mov
add
call
dec
inc
shlb
scas
lds
ficoms
push
pushf
mov
adc
push
mov
in
fildll
xchg
jae
inc
add
pop
push
insb
cmp
cltd
pop
imul
sbb
fisttpl
int3
movsl
ret
nop
cmp
popf
sbb
es
stos
fisubs
out
or
lcall
xor
lret
pop
xchg
add
ds
pusha
fs
out
cwtl
mov
int
in
add
xchg
jl
dec
and
loop
adc
mov
outsl
into
outsb
bound
clc
jge
add
call
jb
add
cmpsb
dec
lret
scas
pop
lds
dec
fmuls
fidivs
mov
fistl
push
adc
mov
xor
cmp
sub
daa
push
pop
fs
jae
jmp
mov
fidivl
push
cmc
or
cmpsb
stos
jae
arpl
int
aaa
ljmp
xchg
gs
sub
rcr
adc
ds
popa
jmp
mov
call
int
bound
int3
test
mov
push
aas
cmpsl
cli
jne
mov
hlt
inc
add
call
in
push
push
ss
sarb
cmpsb
adc
sbb
call
and
in
pop
xor
jp
jg
mov
vmovshdup
jmp
aad
nop
cmp
fists
jle
cmp
dec
xor
ss
jle
pop
dec
adc
adc
out
fsubrl
je
rcr
push
or
mov
xorl
or
aas
out
xchg
in
cli
push
push
pushf
movups
mov
stc
out
ja
sbb
jb
sbb
push
or
mov
sbbb
rolb
call
cmp
mov
ret
sbb
sub
inc
imul
xlat
pop
pop
jbe
sbb
daa
lret
hlt
insb
push
nop
shll
sbb
stos
or
pushf
int
pop
cmp
int3
pop
roll
hlt
sub
jne
push
inc
daa
sub
jne
int
cwtl
push
repnz
cwtl
mov
cmp
push
cmc
mov
fimull
sub
cmc
and
xor
lods
and
pop
or
cmpsb
mov
aam
adc
outsl
mov
dec
add
call
cmp
add
push
mov
pop
sbb
out
icebp
stos
mov
push
inc
repnz
xchg
scas
mov
mov
push
out
dec
and
push
jecxz
fsubl
inc
inc
out
lods
rorb
mov
pop
inc
sub
sbb
ficompl
repnz
mov
fisubs
lret
jge
ja
sub
lods
fcomp
fildl
andl
jle
and
dec
dec
mov
adc
and
adcl
sub
repz
sbb
add
call
aaa
add
mov
xchg
scas
sahf
sub
dec
lcall
pop
test
adc
or
mov
mov
dec
or
xchg
cs
cmp
pop
fdivl
jns
lret
ret
loope
imul
aam
out
outsb
jmp
test
lds
stos
pop
ja
and
or
mov
mov
popa
add
mov
and
mov
fdivr
mov
addr16
je
lock
and
inc
mov
call
cwtl
mov
mov
std
in
jo
push
adc
sub
xchg
push
dec
inc
sbb
add
mov
push
inc
xor
cmpsb
or
std
loope
adc
repz
sbb
adc
jmp
adcb
push
sbb
lock
push
in
jecxz
jle
sub
push
mov
cli
es
sbb
jg
adc
mov
mov
jecxz
mov
into
jns
cmpsb
pop
xchg
pop
or
fimuls
fstps
jle
add
call
data16
and
out
pop
lahf
daa
fisubrl
sbb
sbb
jle
pop
les
mov
mov
shll
dec
aam
mov
mov
push
out
es
cmp
jo
outsb
dec
fistps
sbb
lods
cmp
adcl
sbb
mov
mov
jmp
ss
std
push
lea
lock
or
mov
fidivrl
jns
mov
add
ss
xchg
xchg
cmpsl
outsl
shrb
arpl
mov
push
sub
jno
pusha
or
xor
add
call
dec
lret
add
arpl
or
jbe
mov
xchg
mov
mov
repnz
and
adc
inc
fwait
and
xchg
mov
inc
cli
adc
inc
fldcw
out
fbstp
mov
lods
or
in
xchg
cmc
loop
mov
pop
popf
push
fs
sbb
andb
imul
popa
push
dec
xchg
dec
lret
lds
add
mov
cltd
sub
test
test
sbb
sbb
dec
add
push
into
test
and
test
add
call
mov
add
ficoms
dec
pop
jae
and
mov
xor
cmp
test
pop
xor
xor
les
and
testb
dec
ror
std
jl
or
daa
or
test
cs
mov
push
add
jb
lds
push
and
inc
jae
outsb
jmp
xor
xor
xlat
jns
cmpsl
inc
lods
or
jno
jg
mov
loopne
cltd
sbb
push
std
sldt
call
push
jb
pop
and
ja
jbe
scas
mov
mov
outsl
stos
and
out
lcall
lcall
jno
shrb
in
sarl
adc
int3
inc
pop
jno
movsb
pop
dec
jecxz
sarl
push
pop
in
push
push
jnp
or
lcall
orl
mov
js
sbb
pop
xor
jle
lods
in
xor
rorb
and
stos
cmp
xor
sbb
xchg
add
call
les
add
push
mov
xor
adc
adc
sub
mov
and
iret
out
sbb
dec
mov
leave
xor
and
rolb
out
dec
fnstsw
jno
lods
rorb
mov
or
xchg
js
jl
dec
pushf
mov
push
or
dec
adc
dec
dec
jno
leave
jge
pop
ror
xor
into
xchg
fcmovnbe
xchg
and
stc
fsubl
clc
and
push
sbb
add
call
nop
fcompl
sbb
hlt
ror
testb
sbb
inc
jge
push
lcall
loopne,pt
inc
in
pop
pop
rcr
js
and
scas
insl
push
sbb
push
fmulp
aam
sti
mov
in
and
testl
fsubl
sbb
enter
add
movsb
jmp
pop
shl
popa
mulb
lret
mov
sbb
add
and
xchg
mov
add
adcl
or
push
movb
call
roll
mov
scas
popa
pop
andl
mov
cmp
fsubrl
mov
push
sub
insb
lret
cmc
dec
pop
in
pop
push
add
outsb
ds
dec
add
mov
pop
cld
clc
loopne
and
xor
pop
in
je
mov
lret
fists
push
push
jb
cs
in
pcmpeqb
sub
clc
aam
adc
lret
pop
fcompp
push
insb
sbb
jo
xor
fstpt
add
dec
ljmp
jp
xor
add
call
test
jns
popf
frstor
push
inc
outsb
das
mov
sub
or
icebp
add
insl
mov
fbstp
adc
ja
mov
mov
cmp
xchg
sub
out
xchg
mov
jb
jg
jne
loope
mov
push
mov
xor
mov
push
sbbl
fwait
hlt
inc
hlt
and
insb
xchg
aaa
xchg
stc
cmp
loope
pop
mov
out
push
clc
cmp
sub
fmulp
outsb
add
cltd
sbb
outsb
xor
call
in
cmp
dec
jmp
addb
shll
jb
cmp
push
mov
and
mov
mov
repz
das
cmp
sbb
mov
pusha
add
dec
loop
mov
aam
sub
push
jno
xor
pop
add
lea
mov
mov
jmp
sbb
push
push
mov
push
mov
xchg
test
jle
mov
inc
xor
nop
sbb
sbb
xor
jecxz
push
or
out
lcall
movsb
imul
call
sbb
jo
push
jle
in
xchg
add
mov
sub
push
test
cld
xor
ja
std
icebp
stc
jno
xchg
push
out
fwait
popa
imul
rclb
xchg
lahf
arpl
ror
imul
cmp
pop
hlt
ss
mov
mov
stc
dec
outsl
lock
and
cmp
loopne
mov
fs
jb
jp
mov
ljmp
movsb
dec
test
mov
xchg
enter
pop
outsb
data16
mov
add
add
call
cld
mov
aad
das
fisubl
mov
stc
or
call
shrl
inc
and
in
aam
or
or
loope
jne
lahf
add
mov
sbb
pop
femms
or
jl
jb
scas
mov
test
fildl
fdivr
jb
inc
push
inc
push
stos
jecxz
xchg
ja
adc
insb
js
popf
jp
scas
mov
out
or
mov
jle
push
inc
iret
repnz
fsubl
popa
add
call
push
addpd
push
mov
dec
jmp
loope
xchg
cmpsb
pop
xchg
das
push
rcll
xorl
jnp
push
and
imul
or
or
jl
es
data16
pop
imul
movsl
push
inc
pushf
repz
jmp
mov
daa
sub
mov
push
sbb
adc
ss
adc
out
lods
cld
mov
sub
movsb
fcoml
divl
cmp
bound
call
sbb
mov
lods
rcrl
arpl
dec
rol
jg
shlb
mov
clc
pop
arpl
mov
je
shl
popa
rorb
jp
mov
adc
int
sub
data16
orb
test
dec
fucomip
pop
xor
xlat
cld
outsl
push
xor
xchg
repnz
and
lret
mov
push
lods
es
mov
mov
xchg
dec
add
cmpsl
xlat
mov
cltd
pop
push
pop
test
fiaddl
add
call
je
jbe
mov
dec
in
jnp
test
movsl
repz
add
adc
cmp
sub
mov
push
es
daa
sub
mov
fldenv
in
pusha
aad
mov
div
mov
mov
push
push
scas
call
xchg
stos
test
inc
cs
jb
cmp
jae
lret
mov
aam
mov
mov
jmp
fsubrp
daa
jecxz
jae
icebp
into
sub
dec
xor
mov
and
add
call
pop
adc
ja
or
or
add
xchg
pop
xchg
sbb
mov
sbb
aad
jnp
decb
and
sbb
mov
cwtl
mov
rclb
jbe
xchg
jae
test
pop
xchg
xchg
jno
mov
imul
enter
subl
sbb
sbb
and
and
mov
mov
outsl
push
xor
xchg
adc
pop
xor
fstpt
out
mov
popf
dec
push
mov
adc
jmp
mov
push
call
push
add
stos
test
and
mov
repnz
mov
adc
mov
in
bound
fistps
cmpsb
pushf
fistpll
mov
rorl
lock
jl
mov
jne
sbb
movsl
adc
mov
stos
jmp
cld
pusha
adc
and
daa
not
mov
push
jle
ljmp
push
jnp
movsl
stos
mov
cld
iret
mov
pop
cmpsl
jne
outsb
daa
bound
ss
push
mov
call
adc
adc
jae
xlat
ja
pop
mov
lock
inc
push
jbe
subb
fldenv
insb
std
push
pop
push
repz
xchg
push
icebp
mov
sub
jb
jno
cwtl
pop
push
or
xchg
dec
push
pop
mov
imul
es
aam
cmp
cmp
xor
cmpsl
dec
es
mov
pop
pop
mov
pop
movsb
fldl
mov
pop
inc
orl
popf
nop
pop
lcall
xchg
add
add
insb
sbb
lahf
div
repnz
add
rolb
push
mov
imul
jecxz
jae
gs
pop
shl
pop
lods
sti
jns
movsb
fsub
xchg
movzwl
pop
bound
xlat
lds
xor
jne
ret
adc
filds
mov
cmp
pushf
sbb
mov
aaa
xor
mov
orl
movsb
pop
push
addr16
inc
jo
inc
js
sbb
xor
std
leave
int3
pop
xlat
jb
sub
call
imul
scas
out
mov
repz
sub
jp
inc
adcb
jnp
mov
xchg
enter
test
das
inc
cld
mov
cmpsl
test
push
push
mov
mov
in
push
sub
insl
imul
cmp
inc
add
jmp
xor
pop
fnstcw
dec
ud0
dec
in
cmpsb
cmp
lds
das
pop
push
and
push
addr16
testl
call
jle
js
dec
jmp
push
movsl
mov
repnz
xor
stc
nop
ljmp
clc
test
out
nop
sbb
adc
mov
mov
popf
and
sarb
push
fwait
jecxz
ss
inc
and
mov
dec
or
lock
lahf
pop
sbb
mov
dec
mov
or
fldt
movsb
pop
mov
and
mov
sbb
pop
dec
or
cwtl
lea
fildll
outsl
dec
fisttpll
cmc
sub
sldt
call
push
pop
fildl
xchg
movb
repnz
mov
mov
dec
mov
je
in
inc
shlb
div
push
ficoml
xchg
clc
bound
pop
push
cwtl
cmpsl
mov
xor
or
xor
pop
leave
nop
mov
lea
rcrb
js
test
push
lock
out
shl
mov
jo
pop
mov
cmpsb
int3
rcrl
mov
test
adc
mov
mov
fs
rcr
pop
dec
and
insl
xchg
mov
add
call
mov
outsb
inc
in
add
mov
mov
sub
adc
cmpsl
sub
repz
mov
mov
mov
xor
repnz
push
insb
adc
cmc
in
je
dec
or
pushf
xor
flds
lahf
ret
add
std
out
loope
sbb
in
fiadds
and
sub
rorb
sbb
xchg
mov
popf
pop
lcall
fstl
loop
iret
push
cli
test
pop
int3
xor
into
jecxz
sbb
pop
xchg
push
sahf
add
call
mov
lret
call
ds
dec
das
jno
and
cmp
sti
fnstcw
dec
lea
sbb
jnp
sarb
les
xchg
test
push
lock
call
xlat
mov
mov
push
js
nop
inc
cld
inc
es
xor
cmpl
xchg
fs
mov
scas
sbb
jg
inc
ret
icebp
enter
hlt
pop
dec
stos
sub
daa
cld
jecxz
loope
mov
inc
iret
not
sbb
inc
or
dec
cld
mov
add
call
inc
push
popf
sarb
lahf
cmp
dec
add
icebp
mov
dec
dec
mov
sti
call
mov
xchg
sbb
in
lds
lock
xlat
jp
fsubr
cltd
sub
jnp
mov
gs
lret
out
pop
or
sub
in
ja
shrl
outsb
sub
mov
fnsave
test
cld
in
inc
data16
addr16
faddl
cmpsl
andb
xchg
mov
stos
xor
jl
fimull
add
call
cmp
out
popa
mov
ret
loopne
jg
sbb
repnz
movsl
cltd
lea
int
xorb
shl
call
daa
push
leave
aas
ret
sub
fwait
mov
ss
cs
cli
jnp
sar
and
adc
bound
pop
or
divb
push
xor
or
pop
rorl
lcall
pop
out
sub
jns
ret
scas
push
jo
push
ret
mov
lret
dec
dec
jl
jb
cmc
or
add
call
push
stos
cmpsl
cmp
jnp
or
push
pop
pop
pop
mov
scas
movsb
inc
xor
push
push
add
loop
jb
dec
rcrb
mov
pop
cmpsl
sbb
in
inc
fsubp
and
xchg
and
and
push
mov
jle
xchg
divb
lret
clc
shrl
pop
out
adc
dec
xchg
call
les
repnz
xorb
inc
fcompl
jg
insl
sbb
jnp
shrb
mov
push
pop
sahf
into
add
call
pop
inc
or
xor
jge,pt
mov
lds
mov
punpckhdq
xchg
cwtl
dec
comiss
mov
mov
inc
rcll
mov
adc
cmc
pushf
mov
mov
jb
mov
lret
jae
sbb
cwtl
fucomip
adc
shlb
fisubl
or
out
sti
in
mov
dec
stos
jp
js
or
pop
es
inc
fucom
inc
scas
cs
add
mov
sub
imul
xor
add
call
xchg
rcrl
les
pop
pop
mov
repz
dec
or
int3
cltd
xchg
shl
add
jmp
iret
dec
dec
or
cmpsl
test
fidivs
jg
add
je,pn
sub
or
bound
push
imul
add
mov
dec
ficoml
jp
lods
imul
cmpsb
jmp
addr16
sahf
fistpll
cmp
jae
pop
xchg
xchg
sbb
nop
scas
hlt
mov
dec
cltd
test
jp
add
call
sbb
sahf
add
subb
lahf
jae
xor
mov
and
push
mov
sti
fwait
lret
xchg
add
dec
gs
insb
inc
fcmovne
jns
cld
mov
scas
xlat
mov
fnstsw
repnz
pushf
ss
mov
inc
cli
add
ret
cmp
add
into
push
sub
mov
sub
jp
add
out
lods
stos
popf
lds
daa
and
or
mov
out
mov
lods
into
mov
or
cltd
adc
incb
push
stos
not
add
call
adc
adc
adc
nop
cltd
loopne
jbe
shrb
add
add
sahf
xchg
and
cmovg
xor
sub
inc
dec
leave
adc
adc
iret
xchg
push
mov
int3
repz
sarl
lret
and
mov
imul
std
mov
xor
pusha
cli
add
into
fisubrs
sbb
outsl
movsb
pop
add
lea
inc
jno
cmp
push
xchg
push
fcompl
loop
sbb
inc
cmpsl
add
pop
jge
mov
es
push
push
icebp
dec
shlb
add
call
js
and
add
push
lods
xchg
sub
movsl
pop
jg
dec
sub
xchg
in
popf
testl
pop
cs
arpl
pop
out
aad
cmp
pop
cmc
xor
add
into
test
and
ret
mov
cltd
loope
or
es
loopne
out
sub
lahf
aam
jnp
jo
push
rol
das
sub
adc
in
pop
mov
sub
lock
aas
and
mov
movsl
pushf
jecxz
sub
data16
push
mov
cmpl
add
call
decb
divl
xchg
or
xor
fs
inc
sbb
mov
and
add
nop
and
mov
lods
add
lret
ljmp
dec
pop
in
stos
and
mov
ja
mov
into
adc
imul
popa
dec
sub
add
pop
mov
jecxz
mov
jno
int
cmp
inc
push
cwtl
and
dec
push
daa
loope
cmpsb
jecxz
mov
cmp
ret
jno
xlat
icebp
leave
add
call
fbld
xor
sbb
cmc
aam
cmp
shrl
jp
xorb
push
jecxz
les
xchg
mov
xor
push
mov
push
out
inc
pop
xchg
mov
jns
fs
sub
dec
in
dec
in
aas
pop
cmp
lcall
clc
sub
fisttpll
pop
stos
sahf
pop
ret
daa
stc
mov
lods
int3
loop
or
push
out
cmp
fmuls
imul
jbe
fadds
ljmp
call
adc
dec
lods
inc
cmpsl
test
mov
add
xchg
mov
enter
in
lods
xlat
cmpsl
push
dec
cmp
lahf
mov
inc
outsb
insb
loope
and
inc
ret
adc
push
pop
daa
outsb
imull
fdivr
stc
add
loope
cmp
sarb
dec
aaa
movsl
or
xchg
mov
inc
je
cld
jae
sub
pop
pop
add
xchg
lcall
faddp
jecxz
and
insl
mov
sbb
dec
rorl
call
add
lea
or
mov
test
or
jp
xor
fdivrs
int3
popa
shld
sti
aam
pop
cmp
mov
sub
arpl
rorl
push
ret
mov
outsb
outsb
lret
imul
push
cmpsb
pop
inc
push
jp
add
lahf
lret
into
arpl
adc
pop
adc
nop
sahf
bound
cmp
pop
adc
xchg
js
outsl
adc
cli
mov
mov
dec
test
out
inc
iret
mov
pop
or
cmp
lods
cltd
int
dec
mov
xchg
sbb
mov
call
enter
mov
shll
pop
sub
mov
push
add
in
push
hlt
imul
push
sub
fbstp
int3
push
cmp
popfw
mov
dec
and
mov
jae
xor
adc
xor
xchg
or
nop
push
mov
xchg
jge
mov
daa
lahf
push
dec
jle
dec
xor
pop
xchg
das
mov
cwtl
das
out
xchg
cmp
xor
cmp
nop
and
xchg
push
cld
ja
out
adc
add
call
lock
and
fildl
repz
gs
ds
inc
in
cmp
dec
sbb
mov
dec
add
jle
pop
jo
mov
add
push
testb
sub
or
lds
or
xchg
cwtl
mov
mov
pop
mov
cmp
testl
mov
mov
loop
mov
ret
cmp
mov
divl
jae
mov
sbb
test
bound
pusha
and
fcom
lret
add
call
je
notb
and
and
pop
xchg
push
sbb
pop
ljmp
inc
adc
dec
aaa
adc
push
fldt
movsw
mov
mov
mov
jg
jb
pop
adc
or
sahf
ficomps
lods
into
loopne
or
test
in
negl
sarb
in
or
ret
sbb
sub
fs
push
andb
xor
xor
mov
dec
jge
lret
cmc
or
xor
lds
xchg
call
and
out
push
cmc
ds
call
dec
mov
out
inc
jns
jmp
mov
mov
inc
xor
adc
lret
push
in
rcrl
sbb
pusha
xchg
inc
scas
jo
cli
push
das
pop
sub
jnp
dec
jg
inc
mov
or
jnp
pop
add
mov
imul
mov
cmp
sbb
into
sbb
mov
lock
mov
xchg
clc
out
int3
add
call
stos
jo
push
lods
into
jno
lods
mov
int
sub
mov
add
pop
dec
sbb
pop
sti
movsb
jo
out
jo
gs
xchg
jae
mov
mov
rolb
fbstp
and
leave
gs
push
roll
cmp
sub
xlat
das
jne
push
pop
mov
sbb
lea
xchg
sbb
mov
fdivl
xor
andb
lods
xchg
loopne
add
imul
add
call
pushf
xchg
or
inc
cmp
sub
das
movsl
fisubrl
dec
dec
sub
dec
mov
push
sahf
sbb
jmp
or
sahf
shrb
push
add
jl
repnz
mov
dec
pop
xchg
fistps
xor
loope
fisttpl
pop
push
and
gs
mov
lock
jmp
shlb
lahf
test
dec
in
cmp
jle
mov
ljmp
stc
adc
clc
loop
xor
mov
mov
sarl
inc
dec
xchg
mov
call
cmp
mov
fidivrs
insl
scas
pop
cli
clc
mov
dec
iret
adc
jg
lret
lcall
lock
and
insb
mov
or
jns
or
outsb
test
lock
mov
sbb
test
test
adc
stc
mov
mov
mov
imul
cmpsb
bnd
pop
push
sbb
std
adc
and
pop
rcl
inc
lds
mov
rorl
adc
add
pusha
push
mov
sub
jecxz
sbb
int
std
lahf
add
call
into
rolb
cmp
mov
jge
jp
repz
sub
lret
dec
jmp
shlb
jg
stos
aad
inc
mov
cmpsl
dec
xlat
jne
add
mov
mov
jp
fists
cmp
mov
fidivs
repnz
adc
nop
out
and
mov
mov
cs
incl
loope
ficomps
mov
lds
fisubl
fsubr
jecxz
dec
jmp
inc
leave
and
ret
in
xchg
xchg
leave
jg
xchg
outsb
mov
inc
dec
push
inc
int3
aad
add
pop
pop
faddl
add
call
insb
cmp
sub
add
pop
jmp
hlt
mov
out
call
adc
addr16
stc
pusha
push
pop
xchg
cmp
sbb
cmp
sub
jnp
and
mov
xor
xchg
inc
cmp
push
ss
sbb
adc
xchg
shrl
dec
fisubrl
fistps
dec
jl
push
xor
mov
or
push
cli
pop
jns
push
sbb
mov
cmp
sub
cmp
add
push
xlat
call
sbb
call
inc
movsl
adc
push
andps
lods
sbb
lret
mov
fmul
ret
ror
mov
scas
addl
inc
cmp
xchg
fs
push
pop
stos
leave
xchg
mov
pop
mov
mov
into
dec
imull
pop
int
dec
mov
mov
in
push
mov
enter
aam
jo
sbb
das
or
pop
cmpsl
mov
and
lahf
imul
adc
imul
les
add
call
cltd
push
pop
jmp
inc
pushf
ja
jl
cmp
inc
les
sbb
aad
mov
iret
lods
dec
jnp
loop
aad
gs
loope
inc
imul
dec
lods
cmp
dec
sbb
rcll
xchg
pop
cmc
lahf
adc
shl
clc
fistpll
pusha
daa
outsb
push
jmp
imul
sar
test
repz
and
iret
jns
jne
daa
xchg
aad
divl
in
leave
lea
aas
push
repz
pop
xchg
shlb
mov
call
ficoms
jo
int
xor
cmpsb
arpl
dec
repz
popa
xchg
jl
hlt
or
pop
adc
jno
dec
xchg
sub
cmp
rcll
cmp
imul
mov
xchg
cli
jae
insl
adc
xor
mov
imul
lods
lods
aas
jae
sbb
add
fisttpll
inc
fbstp
in
out
mov
int
fcmovnu
adc
mov
sbb
inc
push
and
xchg
add
or
mov
adc
add
call
loopne
out
push
cmc
mov
sub
cli
sub
jmp
xchg
and
roll
addb
add
xlat
shll
repnz
inc
pop
adc
adc
jl
sbb
or
and
mov
cli
pop
cmp
adcb
push
aad
ss
mov
loope
xchg
cltd
cmp
ljmp
pop
inc
sbb
jne
pop
push
push
or
xlat
mov
dec
shrl
inc
sbb
add
call
or
sbb
arpl
jbe
cmp
aad
jne
sub
pop
push
pop
xchg
adc
test
push
xchg
daa
pusha
mov
lret
adc
std
addr16
jecxz
xorl
sbb
dec
fsubp
cmp
mov
adc
cmp
adc
test
fs
sub
lcall
in
movsb
jno
sub
in
cmp
mov
mov
fdivrs
jp
mov
mov
mov
fistps
arpl
and
lahf
add
call
push
and
scas
and
nop
push
js
in
inc
xchg
dec
loope
mov
insb
rcrb
test
cli
jg
mov
jge
cltd
xlat
and
sbb
pop
shlb
div
sbb
sub
loope
add
es
jae
push
dec
dec
sahf
inc
idivb
fmull
faddp
jnp
mov
jne
mov
sub
nop
sahf
push
call
mov
outsl
mov
inc
das
or
cli
aas
int
adc
imul
cs
adc
adc
add
add
call
testl
imul
rol
inc
add
mov
sub
std
dec
pushf
push
xor
jg
and
and
mov
ret
mov
test
dec
mov
xchg
mov
insl
xchg
dec
jmp
fiaddl
xchg
xor
push
inc
push
dec
repnz
adcl
fists
jb
mov
add
sbb
outsb
xchg
inc
out
shlb
aas
daa
xor
ljmp
adc
fisttpl
sub
mov
roll
sub
jge
xor
add
call
xchg
xor
xor
mov
mov
loop
test
mov
pop
outsl
mov
push
nop
mov
aad
push
xlat
mov
push
insb
pop
pushf
or
loopne
jl
mov
and
mov
cmpsl
mov
test
cmc
decb
push
push
xor
out
into
imulb
stc
mov
mov
ficoml
jno
inc
stc
test
in
mov
test
pop
rep
sbb
mov
xchg
icebp
shl
aad
fwait
loop
and
and
add
call
in
ret
dec
add
inc
cli
stos
scas
test
in
push
dec
test
into
cli
neg
cmc
lret
in
cmp
xchg
sarb
inc
jl
pop
fcomps
adc
addr16
in
scas
mov
stos
add
pop
adc
roll
fidivrs
adc
icebp
xor
or
shlb
jle
leave
outsl
clc
dec
mov
sbb
lock
jge
aad
push
and
sub
rorl
jecxz
add
call
iret
xor
movsl
pop
js
outsb
pop
iret
enter
xchg
faddp
test
imul
sub
push
stos
cmp
test
mov
pusha
mov
mov
es
sbb
das
movsb
es
nop
test
jnp
mov
sbb
inc
cwtl
fiaddl
push
insb
add
inc
dec
pop
mov
inc
sti
les
loopne
loop
je
sbb
dec
stos
int3
sbb
jo
push
daa
orb
gs
sub
fists
stos
int3
mov
mov
add
call
test
loopne
adc
loop
jp
xor
push
lock
leave
sbb
test
xchg
out
pop
faddl
pop
lods
jb
cltd
mov
and
mov
xor
outsl
push
test
fwait
push
cwtl
in
sub
je
cs
dec
cmp
test
push
enter
push
out
mov
adc
inc
dec
push
test
dec
xor
xchg
push
or
pop
loopne
dec
gs
mov
pop
add
mov
cmp
mov
jno
int3
dec
xchg
arpl
mov
stc
inc
dec
xor
mov
add
call
push
leave
or
xchg
insb
pop
or
dec
arpl
cmp
ret
mov
jmp
seto
das
int3
sub
addr16
xchg
push
shrl
lods
or
orb
add
mov
push
mov
mov
fistpll
hlt
loope
subb
mov
test
es
loopne
jge
cmpsl
cmc
mov
cmc
jbe
push
add
dec
adc
popa
add
mov
push
mov
jg
pop
sbb
add
call
fldcw
sti
sbb
mov
push
jbe
je
leave
fmuls
mov
xchg
fwait
mov
sub
addr16
dec
cmp
add
xchg
insb
test
aas
movsb
fdivrl
adc
sti
mov
aas
std
sub
lock
subl
lods
inc
das
and
jmp
mov
movsb
mov
imul
inc
lods
out
stc
std
cmpsl
adc
in
jbe
mov
ja
sbb
incb
jno
je
pop
ret
xchg
jp
push
sahf
or
shlb
call
les
jg
les
cs
mov
mov
cmp
arpl
bound
sub
xchg
pcmpgtw
insl
das
fadds
popa
add
in
int
test
mov
sbb
shrl
mov
xlat
mov
push
insb
pop
jg
jae
mov
aas
jno
iret
adc
out
and
and
in
loopne
sti
inc
js
rcll
mov
cmpsl
sbb
stc
sbb
pop
dec
push
adc
lahf
push
lret
adc
adc
out
and
inc
icebp
pop
ds
mov
add
call
cmp
mov
xchg
lahf
push
pop
mov
ljmp
test
pop
sub
cmpsb
and
lds
out
shl
ja
xor
inc
std
pop
jb
test
or
dec
adc
xchg
sahf
test
mov
cmpsl
pop
int
pop
cmovge
and
jmp
je
jno
popf
pop
sahf
movsb
lcall
cmp
fldt
dec
cmp
scas
push
outsl
dec
or
aaa
leave
aam
adc
aad
imul
add
js
jmp
push
dec
push
test
add
call
cld
mov
jmp
in
and
loop
inc
cmp
pusha
and
pop
add
add
sarb
push
scas
in
fnstsw
fwait
and
add
lods
ficoml
pop
jecxz
xlat
outsl
xor
ja
jecxz
cmp
xchg
scas
movsl
mov
in
pop
dec
scas
aas
daa
xor
and
stos
add
mov
enter
in
ret
lock
movsl
xchg
sub
mov
cmpsl
push
ja
jg
inc
mov
or
call
add
stc
insb
into
add
fisttpll
mov
pop
int3
shrl
or
push
pushf
push
pusha
xchg
movsl
leave
adc
stc
fistpl
adcl
arpl
pop
lret
lcall
push
push
dec
sbb
adc
setp
les
shll
and
loopne
daa
xchg
xchg
leave
mov
add
mov
xor
cmp
cwtl
lds
pop
pusha
aaa
repz
cli
popl
add
call
pop
mov
xchg
subl
ret
fiaddl
mov
pop
pop
mov
xor
cmp
test
addl
cmp
jle
jnp
mov
xchg
cwtl
fdivrs
mov
clc
loopne
cltd
mov
imul
pop
clc
cmp
xor
fmul
sub
pop
js
inc
fidivrs
loop
pop
or
into
adcl
test
jo
or
and
jbe
pop
fidivrl
mov
or
fidivl
fst
test
sbb
push
inc
add
call
rclb
filds
lods
add
adc
add
push
pop
jge
repnz
fs
insb
test
xchg
mov
into
mov
fnstsw
pusha
in
xchg
sbb
pop
arpl
sbb
add
inc
ror
sub
ret
imul
iret
sbb
test
in
imul
sti
cmp
rorl
out
sahf
lcall
mov
ror
cmpsb
mov
flds
add
call
out
or
add
and
mov
or
cwtl
inc
jnp
and
cltd
scas
dec
pop
push
sbb
push
or
ds
pop
push
jmp
and
push
cmp
enter
pop
sbb
test
push
jb
ret
mov
fs
negb
aas
xchg
sbb
leave
mov
sbb
cmp
mov
sar
lahf
and
cmp
fimuls
sahf
lock
jb
fcomi
sub
arpl
ja
sub
repnz
push
add
call
in
outsb
test
and
cs
add
pop
mov
xor
cmp
mov
sbb
jg
push
scas
out
insl
not
sub
mov
add
cmpb
pop
pop
scas
sbb
adc
pop
fisubrs
stc
daa
and
into
std
mov
das
inc
sbb
adc
mov
test
pop
mov
repnz
pop
push
cld
into
mov
iret
xlat
int3
or
adc
lahf
jp
sbbb
cmpsl
mov
cmp
jns
add
call
xorl
and
sub
cmc
xlat
xchg
ret
int
jne
xlat
nop
xor
enter
outsb
mov
jbe
sub
mov
jecxz
jae
cmpsl
mov
fmul
into
and
cmc
mov
lahf
adc
jle
in
test
mov
mov
sub
and
push
ret
adc
sbb
int
pop
mov
fldl
lods
lret
sarb
xchg
repz
mov
aas
mov
push
pop
cmp
xchg
push
mov
mov
pop
gs
imul
mov
add
call
xor
sub
add
lea
daa
in
push
pop
push
sbb
mov
out
popa
mov
jg,pn
push
or
fstpl
in
jae
out
aaa
xchg
xchg
jle
mov
outsb
push
lock
punpckhbw
lds
push
nop
push
sub
adc
clc
int3
andl
in
add
test
pop
mov
imul
nop
aad
cmc
add
flds
sbb
dec
cmp
mov
add
call
pop
pusha
cltd
mov
sub
sarb
cmpsb
sub
aam
out
inc
mov
pop
enter
mov
push
mov
mov
sbb
jle
add
aas
call
in
pop
vpmulhuw
into
cmp
flds
cmp
rolb
or
add
sbb
xchg
xor
mov
adc
push
adc
cltd
pop
xlat
cld
leave
adc
sub
aaa
cmpsl
sub
push
fbstp
fdivrs
add
call
pop
jp
dec
inc
popl
inc
fidivl
aas
cltd
sbb
pop
cltd
mov
jo
push
ror
xchg
test
xchg
mov
ljmp
add
mov
insb
popf
or
je
outsl
mov
cld
mov
sbb
adc
adc
sub
ret
ficoms
dec
xchg
mov
cmpsl
push
clc
fwait
mov
out
fwait
dec
mov
int
cmc
cmp
adc
fists
ffreep
je
hlt
fcoml
cmp
mov
call
jbe
xor
sub
xchg
pop
out
test
fwait
adc
ret
test
loopne
or
dec
mov
and
loope
les
je
js
and
mov
mov
mul
lea
dec
adc
pusha
repnz
fisubl
sub
in
in
jnp
cwtl
mov
push
stos
inc
cs
xor
jg
add
or
mov
and
sbb
shll
or
jp
mov
subl
dec
sarb
add
call
and
dec
adc
mov
mov
call
fdivr
adc
cwtl
aam
mov
ss
insl
in
in
jno
loopne
add
lret
out
mov
xorl
sbb
mov
xor
cltd
fxch
popf
jmp
dec
popl
loopne
aam
out
push
daa
mov
rcll
or
pop
add
inc
add
callw
hlt
pop
sti
or
inc
mov
sbb
adc
pusha
pushf
test
in
jg
fwait
dec
push
push
cmp
jne
add
call
imul
mov
sahf
and
pop
and
jbe
lcall
mov
mov
jnp
addl
dec
inc
mov
push
dec
lods
test
repz
xchg
pop
test
sbb
xorl
adcb
cmpsl
pop
or
adc
dec
fmul
lahf
add
stos
inc
cltd
xor
leave
lahf
xor
rclb
and
insb
psllq
std
or
insl
js
dec
into
jae
add
call
xor
dec
pop
les
sahf
cmc
mov
cmp
and
clc
or
daa
jle
call
enter
jae
xor
fsubl
push
sub
push
jb
cmpsb
cmp
jbe
cmpxchg
rorb
mov
pop
imul
add
nop
sub
inc
xchg
mov
outsb
jge
dec
decl
cli
hlt
push
nop
mov
add
adc
sub
dec
mov
enter
mov
add
call
es
aad
jle
cmp
mov
lret
mov
outsl
imul
fisttps
pop
repnz
es
pop
jge
sub
ds
jns
sub
ja
sarb
pop
subl
scas
xchg
and
lret
mov
outsb
ja
xchg
and
xlat
arpl
add
mov
je
iret
jb
pusha
out
dec
loop
adc
ftst
or
cmp
xchg
popa
cld
cmc
ja
mov
pop
mov
sti
pop
push
push
dec
mov
and
imul
sarb
dec
xchg
cli
add
call
daa
test
mov
pop
push
xchg
push
and
sbb
pop
nop
mov
push
mov
push
dec
sub
add
nop
stos
jge
xchg
mov
and
lea
fcmovne
test
or
or
add
aaa
gs
rcrl
lods
mov
in
dec
movsb
xchg
jmp
push
test
sub
jge
test
stc
frstor
xchg
xor
rcrl
fsubrs
dec
cmc
dec
gs
popf
mov
call
jns
scas
fcom
aaa
xor
daa
out
decb
fs
cs
xor
jg
push
xor
jle
in
cli
stos
popf
loop
cmpl
mov
in
iret
dec
mov
scas
and
in
mov
jl
add
push
jecxz
sub
jecxz
lock
adc
les
add
pop
popa
sbb
lcall
aas
in
adc
dec
mov
popf
xchg
xor
cmp
jmp
sub
mov
daa
jg
pop
cmp
add
call
das
mov
int3
int
lea
jmp
cmp
sbb
mov
mov
ljmp
insl
rcrb
xchg
imull
adc
cmc
mov
jmp
cmp
in
mov
push
lahf
aaa
fisttpll
xchg
dec
xor
cmp
rorl
sbb
jnp
or
out
rcl
fs
fisttpll
inc
sti
push
sub
clc
push
xor
push
lcall
or
dec
pop
lahf
aaa
cmpsb
push
xchg
cwtl
and
add
call
mov
dec
imul
insl
sahf
stos
subl
pop
lock
cli
ljmp
jmp
mov
test
cmp
enter
xchg
sahf
fldl
enter
cmp
sarl
call
nop
push
lods
xchg
nop
repz
mov
lock
mov
insb
pop
sarl
mov
mov
aam
bound
add
adc
into
add
int3
dec
cmp
out
orb
ja
add
call
mov
jmp
dec
mov
add
lret
xchg
leave
rcll
mov
xchg
pop
ds
movsl
dec
jmp
icebp
push
subl
rcr
jmp
call
decb
int3
jp
or
pop
xor
out
or
ljmpw
stc
pushf
pusha
dec
sbb
popa
inc
push
xchg
scas
mov
jbe
add
ficoms
cmc
movsl
cli
mov
sub
stos
mov
jo
daa
outsb
and
out
cmp
dec
push
fwait
out
cld
adc
fucomip
xor
add
call
jne
mov
nop
cmc
push
mov
cld
cmc
icebp
lcall
shrb
ret
mov
std
mov
aad
push
addl
pusha
pop
push
cld
pop
jge
lods
insb
dec
testl
adc
jmp
pop
addb
cmpsl
sbb
jo
int3
jb
testl
jne
cmpl
add
mov
fs
or
and
mov
jne
nop
sub
sbb
push
cmpsb
aam
add
call
bound
scas
adc
cmp
mov
cli
xchg
orl
lds
outsl
fimuls
adc
rcr
lahf
mov
cli
sahf
add
ss
sbbb
testl
adc
adc
shl
in
outsl
lods
or
or
push
push
xor
mov
pop
movsb
push
pop
testb
pusha
subb
rcrl
sbb
out
mov
mov
cwtl
enter
xchg
imul
cwtl
stc
mov
dec
jecxz
cmp
fisttpl
loop
xchg
aam
add
call
mov
hlt
push
adc
jmp
jmp
int
add
xchg
push
fistps
xlat
nop
sbb
pushl
lahf
dec
push
mov
cld
ds
sbb
mov
and
or
mov
gs
in
sbb
xchg
clc
push
lret
jb
inc
mov
jmp
lcall
cmp
adc
cmp
or
lret
fsts
sbb
mov
pop
aaa
fs
movsb
mov
pop
dec
mov
xchg
and
lock
add
call
xor
inc
loope
push
mov
andl
fldl
or
sub
mov
lods
xor
mov
pop
push
pop
mov
scas
loope
pop
jmp
mov
in
mov
test
shr
jg
sbb
dec
push
fnstsw
addl
mov
sbb
mov
ds
leave
movsl
pushf
sbb
in
sub
sub
nop
and
iret
fbstp
insl
shll
xchg
mov
std
xor
add
call
jbe
lea
xor
and
inc
mov
enter
ret
fs
xor
jl
in
mov
iret
imul
xchg
fisttpl
stos
pop
add
sbb
data16
inc
jl
cwtl
pop
jo
dec
shlb
lods
fisttpl
fidivs
mov
mov
jne
mov
sarb
mov
cmpsb
lds
jl
icebp
mov
jg
cmp
lods
leave
mov
add
lcall
or
rolb
call
xchg
pushf
daa
test
in
fs
mov
dec
ja
jmp
mov
pop
inc
dec
xchg
push
std
jno
daa
mov
lret
jb
sub
cmp
or
cld
cli
jg
insb
pop
sbb
mov
xlat
cmpsb
out
imul
and
gs
and
xchg
or
mov
je
addl
cli
pop
and
leave
imul
test
cmp
mov
mov
addr16
lods
mov
test
jmp
call
mov
xor
xchg
mov
ljmp
lock
adc
scas
cmc
dec
repnz
fwait
jmp
mov
cltd
lret
mov
push
cmp
cmp
stos
sbb
pusha
pop
rclb
pop
mov
push
aaa
mov
xchg
xchg
cli
lods
sub
addr16
dec
adcb
mov
mov
jg
mov
loop
jbe
dec
repz
mov
loopne
mov
bound
jp
inc
jle
repnz
faddl
add
call
rolb
cmp
push
dec
test
in
or
out
push
icebp
addr16
sub
cmpsb
and
inc
sbb
sahf
xor
pop
daa
sub
arpl
mov
mov
inc
xchg
cmpsl
mov
cmpsb
je
jnp
fisttpll
sahf
jmp
xor
inc
dec
orl
dec
lret
das
fwait
add
or
mov
cmp
xchg
dec
mov
add
mov
test
sar
or
inc
sar
xor
cli
ret
mov
sbb
pop
dec
or
add
call
cs
sub
int
bound
outsl
pop
pusha
arpl
cs
or
mov
fdiv
popf
scas
push
jb
adc
lcall
sub
mov
insl
js
in
add
push
jl
ljmp
xor
push
or
xor
stos
jg
pop
nop
or
dec
pop
jo
fcoms
roll
cmpsl
loope
inc
mov
mov
lods
fidivs
sub
sbb
or
out
xchg
aad
cmp
push
movsl
add
call
dec
push
test
pushf
or
movsb
inc
mov
cwtl
jecxz
clc
inc
int
dec
pop
dec
inc
mov
jecxz
call
dec
cltd
adc
pop
stos
mov
arpl
jno
inc
mov
std
jns
mov
and
ds
and
push
xor
lea
orb
inc
jl
pop
arpl
mov
jle
adcl
in
inc
mov
in
dec
imul
mov
mov
mov
call
std
mov
inc
mov
push
es
mov
sbb
push
cmpl
mov
iret
je
inc
inc
or
dec
inc
pop
enter
xor
or
mov
or
mov
int
pop
inc
cld
sbb
or
movsb
jle
cmp
push
das
jl
testb
mov
xchg
call
pop
sub
imul
loop
cmp
cmp
push
sbb
loop
or
stos
mov
icebp
or
lahf
js
int3
add
call
pop
cmp
push
pop
dec
in
sbb
repz
rcl
das
sub
lea
cmp
cmc
repz
jnp
mov
xchg
insl
es
inc
daa
test
enter
mov
loopne
loopne
mov
cwtl
cmp
pop
cmp
enter
xchg
sbb
fsubrs
sarb
test
cli
stos
shlb
sub
cmp
cmp
pop
shll
in
mov
jo
mov
pusha
fdivr
inc
add
adc
popf
bnd
inc
dec
lods
inc
fsincos
push
add
call
pop
test
push
das
or
mov
leave
cwtl
faddp
adc
das
sbb
clc
outsb
dec
push
lods
lcall
js
pusha
loopne
dec
add
jno
jns
pop
jecxz
test
push
push
jbe
xchg
cmp
repnz
mov
jmp
mov
cmpsb
imul
add
mov
aas
stos
pusha
pop
aam
repnz
stos
xchg
inc
cmp
subl
hlt
mov
or
scas
mov
jns
mov
idiv
nop
and
adc
xchg
mov
daa
outsl
out
mov
add
call
es
dec
sub
mov
pop
aaa
add
adc
dec
mov
in
push
mov
cmp
out
jl
int
push
notb
sbb
add
xchg
xchg
or
xor
in
add
xor
das
call
add
jge
test
mov
scas
bound
insb
shl
in
jno
std
pop
sti
std
ret
mov
fsubl
in
push
mov
dec
lods
mov
jecxz
inc
push
icebp
call
movb
dec
call
fdivs
insb
test
mov
cmp
add
call
inc
push
cli
nop
rcr
and
aad
repz
call
enter
out
sub
cs
out
je
gs
ds
sub
mov
test
lods
cmpsl
push
mov
push
dec
sbb
dec
pusha
xor
fdiv
hlt
mov
cmp
jge
push
fbld
sub
lahf
and
cmp
lea
sub
flds
mov
or
inc
movsb
cwtl
fwait
bound
cmpsl
loope
jl
xchg
ret
cld
icebp
mov
outsl
sbb
in
push
mov
into
mov
mov
mov
add
call
mov
pop
insl
movsb
mov
pop
cmp
pop
jge
andb
mov
arpl
fldl
lret
dec
mov
leave
cmp
jnp
xor
sub
stos
inc
in
in
cltd
sub
sbb
imul
in
xchg
or
mov
loope
stos
jge
lahf
adc
and
sbb
js
cmp
pop
pop
ss
add
xchg
pop
jl
xor
fcoms
pop
sbb
stos
jp
ret
mov
imul
pop
or
add
call
push
push
fmull
sbb
xorl
enter
mov
pop
fdivs
sbbl
pop
test
shrb
in
push
mov
testl
jmp
enter
sub
fld
jmp
push
sub
mov
xlat
and
das
xor
pop
inc
push
push
es
ret
jb,pt
mov
out
mov
mov
cmp
arpl
cmpsl
xor
fcmovb
add
xchg
int
je
enter
movsl
lods
and
jne
insl
push
push
sbb
pop
xchg
pop
add
call
push
pusha
sbb
hlt
cmp
xor
test
imul
sub
mov
push
into
jns
ss
mov
lret
push
jae
lds
sub
sahf
inc
or
lsl
pop
imul
lds
xorb
add
sar
pop
and
in
push
mov
dec
adcb
or
je
dec
add
mov
fs
iret
xchg
pop
sahf
popf
iret
dec
jne
stos
pop
lcall
test
loop
pop
scas
mov
dec
ljmp
call
mov
inc
add
push
mov
shl
rol
sub
mov
out
sbb
repnz
sub
inc
fnstcw
in
test
das
in
cmpb
int3
xor
fs
cltd
sub
jae
pop
movsl
cwtl
cmp
inc
and
leave
sbb
dec
lahf
imul
jo
or
push
adc
mov
stos
push
mov
shll
sti
mov
xlat
lods
fisubl
mov
daa
add
cmp
mov
data16
std
sbb
pop
stc
pop
mov
pop
divl
aaa
mov
dec
call
lcall
repz
cli
push
mov
pushf
pop
imull
or
repz
mov
decl
and
sub
stos
push
pop
sub
lods
and
aam
fisubl
repnz
xor
aas
repz
test
and
scas
neg
data16
icebp
push
sbb
or
mov
movsb
aas
dec
or
scas
inc
in
stos
and
inc
div
xchg
lea
ss
out
mov
outsb
mov
call
cmpl
sbb
dec
sbb
test
dec
stc
pop
and
int
mov
inc
xchg
adc
mov
das
inc
sub
jg
adc
inc
fwait
imul
mov
out
rorb
aam
lods
adc
test
out
movsb
leave
movsl
stos
rolb
xor
jns
inc
sbbb
repz
insl
cmc
cmpl
mov
push
loope
pushf
les
lret
imul
cwtl
cmpsl
xchg
jge
jle
movb
call
dec
jp
loope
cltd
xor
xlat
fdivrs
xor
into
cld
data16
sub
jns
cmp
dec
lret
jne
mov
nop
push
iret
jmp
xchg
push
mov
lahf
or
jo
dec
mov
mov
out
push
inc
mov
notl
shll
cld
in
mov
xchg
mov
jae
inc
out
mov
push
shlb
xchg
push
inc
inc
and
loope
das
or
pushf
fptan
stc
fcom
cmc
cmp
push
mov
imul
add
call
push
movsb
cmc
fsubrl
push
fdivrs
jp
mov
adc
jle
lcall
popa
sub
rcrl
push
or
inc
outsl
mov
insl
push
inc
idivb
inc
jb
jae
test
jbe
cmp
imul
jge
int
gs
lahf
xor
and
sub
dec
jns
ret
fldt
lea
sar
or
xor
sub
or
or
jge
mov
sub
lahf
orl
call
inc
pop
jno
andl
cmp
mov
jp
and
mulb
mov
pop
pop
push
push
in
sub
xor
sub
jg
push
subps
pop
sub
std
aaa
rcll
dec
push
jl
cmpsl
push
das
inc
jge
jo
fwait
sub
push
xchg
sub
xchg
push
aaa
pop
int
pop
lcall
addr16
sub
push
and
dec
cmpsl
int3
cmp
mov
xchg
mov
cltd
push
inc
dec
mov
cmp
ja
es
lahf
push
add
call
std
mov
fmull
mov
xchg
clc
mov
fs
jns
aaa
sbb
jbe
jecxz
mov
arpl
mov
outsb
ljmp
insb
mov
ljmp
xlat
arpl
push
or
out
imul
sbb
or
pop
push
in
mov
sbb
push
xchg
das
pop
jno
push
js
dec
dec
cltd
push
sub
in
cmp
mov
rcrl
dec
pop
nop
pop
jecxz
out
dec
loopne
aam
fwait
xor
call
iret
jmp
enter
imul
mov
sub
enter
jg
lret
cmpsb
pop
cmc
cltd
loopne
cs
lods
iret
fldcw
in
out
and
outsl
rcll
or
cmp
cmp
jmp
fldenv
sub
xor
insb
mov
push
lock
and
pop
xor
ret
outsb
fwait
mov
imul
sub
sub
xor
pop
pushf
jae
pop
push
push
pop
sti
push
cmovne
in
push
xchg
and
add
call
sub
cld
ss
add
mov
or
ds
mov
pop
popa
push
gs
xor
stos
rclb
es
je
jns
xor
jp
jnp
cmp
stc
xchg
repnz
pop
aaa
scas
cmp
dec
aas
outsl
adc
loope
dec
loope
sub
adcb
and
sti
jle
imull
stos
and
xchg
xchg
fld
inc
gs
in
jge
out
sti
dec
scas
jle
popf
jmp
mov
in
inc
push
push
ret
xchg
jp
add
call
std
push
popf
ss
lock
lret
inc
das
cmp
lock
sbb
push
popf
and
push
testl
ret
sub
cmpsl
xchg
jnp
push
mov
sbb
or
adc
pusha
cmpsl
mov
in
repnz
fstl
jbe
jne
ja
loopne
aad
and
mov
push
out
push
outsb
cltd
push
and
daa
sbb
mov
insl
jbe
push
ss
xchg
enter
sub
bound
scas
stc
out
mov
loopne
add
call
repnz
cmp
inc
sar
cmp
cltd
es
sub
mov
insb
or
sbb
push
xor
jle
enter
jmp
loop
int3
iret
fistps
mov
rcrb
inc
xchg
outsb
cmp
fucom
loope
fstps
jbe
gs
add
or
sub
add
in
jb
int3
outsb
outsl
pop
xchg
mov
pushf
sbb
dec
nop
ds
xchg
mov
in
repz
into
xorl
call
lret
cmpsb
pop
push
cwtl
mov
jg
pop
shll
sti
xlat
leave
and
dec
in
xlat
mov
fists
push
dec
imul
and
gs
insl
test
stc
movsb
dec
je
and
std
test
lcall
imul
lahf
xchg
pop
cmpsl
pop
cmp
arpl
sti
loop
xor
push
mov
pop
inc
insl
test
mov
cld
in
rcll
pop
inc
jg
hlt
sbbb
dec
lods
and
into
push
add
je
call
add
call
js
mov
jb
std
adc
movsb
add
in
or
add
imul
ret
push
insl
mov
into
xchg
int3
or
loopne
sti
xor
add
fbstp
out
aas
jno
sarl
aam
ret
or
xlat
cmp
mov
mov
mov
call
dec
lods
pop
mov
push
mov
sub
test
lods
cltd
cli
cmp
inc
cmp
cmp
xlat
lock
addl
call
scas
fs
mov
mov
sub
xor
pusha
and
mov
inc
or
adc
js
pop
add
mov
inc
call
or
sub
insl
xchg
pop
or
cmpsb
push
xor
mov
sub
and
xchg
cmp
xor
adc
iret
jmp
lods
jb
inc
cwtl
das
mov
aam
xlat
je
and
push
sbb
xchg
in
cmp
imul
idivl
push
xor
and
inc
jne
add
call
repnz
dec
das
cmc
xchg
mov
pusha
pop
out
js
xchg
inc
xchg
adc
fimuls
dec
movsb
pusha
daa
jae
fstl
data16
jnp
jns
xor
pop
shll
inc
xor
xchg
out
stos
jne
mov
adc
xchg
sbb
es
out
cmpsb
out
in
dec
add
in
inc
push
add
and
neg
push
pushf
dec
adc
mov
enter
out
outsb
push
pop
sub
xchg
int
fs
movsl
stc
adc
call
mov
fadd
adc
sahf
out
fiaddl
icebp
loopne
fldl
gs
test
jmp
jo
pop
jmp
add
sahf
ret
sub
push
mov
push
pushf
lret
inc
scas
mov
stc
jo
jns
aad
xchg
push
int
cmp
lea
nop
and
mov
test
sarb
aas
pop
push
add
outsb
adc
test
cmp
test
out
hlt
mov
out
cmp
sub
sub
pop
xchg
cltd
and
xor
add
call
popa
xchg
sub
sub
jg
insl
ret
divb
call
fidivrs
into
xor
sbb
in
mov
daa
mov
inc
mov
loopne
jmp
sbb
dec
icebp
push
filds
into
out
insb
pusha
in
and
mov
xchg
push
jge
outsl
push
rcll
inc
jl
stc
mov
xor
add
push
data16
movsb
sub
mov
mov
push
lcall
imul
loop
or
add
call
mov
outsb
nop
mov
pop
aad
xor
loop
pusha
push
outsl
out
cmpsl
insl
push
ss
lock
dec
addl
lock
xchg
push
jnp
xlat
lahf
icebp
aam
imul
jmp
in
sbb
sub
into
inc
inc
mov
negl
jo
and
push
or
es
xchg
call
sub
inc
sub
or
lock
lods
in
push
jge
je
xchg
adc
ss
mov
add
call
push
and
jl
push
cli
mov
and
lcall
mov
call
push
push
ds
nop
leave
imul
cltd
stc
xor
cmp
outsl
cmpsl
dec
push
outsb
sub
iret
daa
stos
lods
je
and
mov
mov
pop
mov
push
or
xchg
sbb
xchg
popf
movsl
ja
sbb
imul
and
addr16
xchg
push
sbb
jge
sub
add
call
pushaw
add
inc
mov
nop
pusha
push
addr16
xor
inc
sbb
jmp
inc
test
xchg
test
or
push
sbb
movsb
push
jno
jl
iret
xor
mov
in
rclb
mov
xchg
mov
iret
cmp
in
loopne
jnp,pt
decb
xchg
xchg
xchg
stos
push
fstpl
cmp
sub
pushf
mov
into
pop
xor
les
leave
cltd
sarb
in
xchg
adc
fiadds
xor
les
add
call
push
test
push
push
xchg
push
repnz
mov
mov
fstpl
out
es
cltd
push
xchg
jge
push
mov
dec
loope
pop
jecxz
inc
pop
test
lock
adc
test
xchg
orb
mov
sahf
insl
cld
pop
mov
arpl
xchg
sub
pop
add
repz
sbb
test
jo
sahf
out
inc
sti
add
imul
sti
das
mov
push
aam
pusha
jg
sbb
repnz
jmp
imul
add
call
outsb
push
imul
js
bound
iret
jge
loope
mulb
scas
inc
add
les
cmp
xchg
xchg
test
jmp
addl
lock
insb
jbe
push
or
pusha
iret
loop
mov
rcrb
xchg
mov
loope
jae
std
mov
sbb
test
cmp
iret
xor
pop
or
cmp
mov
je
add
lahf
les
xchg
sub
mov
sarl
loop
xor
movsb
lcall
call
inc
pop
xor
xchg
cmp
clc
test
scas
xchg
jb
stc
sub
je
push
xchg
insb
cmp
xchg
pop
popa
sbb
or
sti
dec
dec
inc
adc
data16
adc
mov
xor
std
mov
daa
dec
daa
lret
push
shrb
inc
mov
clc
sti
jmp
popf
lret
mov
pop
sbb
or
aam
sahf
mov
test
stc
lds
int3
fimuls
dec
repnz
xorb
movsb
pop
add
add
call
cmpsb
push
lcall
stos
inc
in
imull
or
xchg
or
loop
std
jns
dec
div
adc
inc
out
in
xchg
insb
iret
arpl
popf
or
iret
cmp
jmp
inc
daa
or
sti
rolb
sbb
popf
push
fcom
test
ret
mov
pop
imul
mov
xchg
dec
mov
cld
rorb
negb
mov
insl
pop
jnp
mov
sub
fimuls
cmpsb
repnz
lret
adc
aam
fisttps
aaa
add
call
insb
ds
jns
in
imul
sub
cmovle
nop
clc
mov
push
mov
mov
and
add
jl
or
fwait
fwait
movl
xor
gs
test
aam
stos
jo
out
lret
aam
fistps
cld
lds
pop
shrb
xlat
aam
pushl
jmp
mov
aam
es
repnz
mov
cmp
and
jge
imul
es
aas
or
add
call
dec
xor
fwait
push
data16
subb
test
sbb
adc
cli
sub
sub
or
add
xchg
cld
lahf
std
dec
icebp
out
or
push
jo
jg
adc
xor
mov
lods
xchg
in
pop
dec
imul
cld
stos
mov
mov
sbb
std
inc
cmc
call
gs
xor
icebp
inc
in
adc
xor
shr
jne
mov
out
jl
cmpl
xor
mov
push
lcall
call
cli
cmpsl
js
xor
mov
push
inc
lret
pusha
hlt
insl
xor
xchg
stos
into
insl
add
addr16
shrb
sub
sub
lahf
rcrb
loope
leave
fsubrl
jbe
int3
mov
jo
ss
lret
testl
test
jbe
insb
push
dec
scas
add
push
jl
pop
and
xor
pop
pop
cli
cmp
jb
cld
into
aaa
xorb
jecxz
jmp
dec
push
or
jnp
add
call
adc
mov
pushf
dec
test
xlat
dec
add
add
shl
je
mov
inc
or
add
dec
jge
mov
out
daa
jo
xchg
mov
dec
cmc
das
adc
jno
int
cmpsl
adc
and
xchg
scas
xorb
mov
pusha
scas
cmp
inc
adc
movsl
add
adc
dec
jae
adc
andl
dec
aas
leave
xor
das
push
pop
jb
and
int
imul
flds
out
add
call
xchg
fs
daa
inc
mov
pop
xor
aad
ds
push
jnp
test
xchg
mov
pop
jmp
mov
mov
pop
jp
mov
stos
lret
daa
xor
mov
jle
xchg
scas
sub
dec
xor
xchg
lods
add
in
mov
xor
cmp
pop
pushf
dec
shl
cmpsb
enter
out
int3
loopne
js
pop
movsb
jnp
insb
aas
mov
jge
sahf
lds
or
aam
mov
leave
leave
add
call
sbb
inc
fstps
xor
mov
inc
mov
add
sbb
push
xchg
popa
ret
jbe
and
pop
mov
nop
cmpl
push
je
xchg
sbb
int
add
push
or
cwtl
mov
imul
leave
lock
push
mov
mov
ret
sub
jg
outsl
hlt
sbb
scas
sbb
sbb
sub
fimull
xchg
mov
in
ds
inc
or
aaa
mov
add
call
clc
jnp
rorb
xchg
xor
ja
filds
cld
out
fwait
pusha
inc
adcb
pop
loope
out
mov
xchg
aad
cmp
cwtl
iret
out
out
in
mov
repz
dec
mov
test
stc
ljmp
outsb
mov
loop
add
out
lahf
decb
mov
jge
jnp
dec
jno
or
push
jge
jp
movsl
rorb
pop
push
jle
xchg
test
js
inc
cmpsl
lods
mov
mov
in
fwait
add
call
sbb
sbb
pop
sahf
andl
push
popa
leave
stc
scas
sub
adc
fdivs
es
cltd
jg
inc
xchg
pusha
stc
ret
push
jne
std
test
jg
ss
push
test
fisubl
fidivs
mov
mov
movsb
xchg
rolb
aaa
das
jg
xchg
mov
and
repz
inc
xchg
repz
repnz
adc
mov
out
mov
ss
imul
sub
popf
lret
aad
and
lcall
add
call
mov
cltd
scas
push
popf
fs
dec
adc
push
in
dec
sahf
push
lea
xor
mov
cmp
xor
mov
cmpsb
adc
fwait
lea
push
test
call
jb
mov
sbb
adc
add
mov
stos
and
sbb
sub
sbb
test
push
or
scas
mov
push
add
mov
arpl
jmp
loop
inc
fwait
jp
std
mov
add
call
mov
cld
dec
sbb
mov
dec
adc
mov
or
inc
push
iret
inc
sahf
arpl
jl
fiaddl
pushf
dec
push
inc
test
jmp
jge
add
out
pusha
mov
mov
mov
pop
pop
bound
fcoms
cmp
pop
and
repnz
adc
jp
movsl
mov
icebp
push
repnz
enter
loope
pop
leave
arpl
pop
jae
xor
call
repnz
int
xchg
xchg
lea
sti
je
andl
sbb
fcmovnbe
push
notl
cmp
sbb
mov
mov
fdivs
dec
dec
and
std
mov
add
jle
in
filds
push
xor
push
or
loope
inc
adc
lds
xchg
adc
lock
or
mov
mulb
loope
pop
das
std
jle
pop
jecxz
insb
out
ss
call
imul
pop
adc
jo
mov
call
mov
cmpsb
xor
lea
inc
cmpsl
test
lret
push
dec
jmp
into
sbb
cmpl
sub
gs
mov
mov
rclb
movsb
mov
cmp
sub
cmp
mov
pop
repnz
mov
cmpsl
push
mov
adc
cmp
add
adcb
mov
pop
clc
sbb
xchg
fistpll
sbb
outsl
sbb
inc
inc
fimull
fildl
jo
pop
ljmp
mov
add
call
js
mov
lahf
into
bound
and
lcall
rcrl
stos
js
movsb
dec
dec
pop
or
lea
xchg
cmp
das
jae
les
and
loop
add
arpl
jae
pop
ficompl
rcl
cmp
rorl
aam
mov
rorl
mov
nop
jns
shll
push
sbb
ja
js
jae
or
call
outsb
sub
jns
test
add
cvtps2pd
push
sbb
add
call
sbb
in
je
cmp
clc
fmuls
dec
adc
jb
sbb
cwtl
jne
movsl
js
in
stos
scas
jns
sub
mov
push
dec
dec
push
cs
sbb
outsl
and
xchg
sub
fldcw
iret
pusha
add
insl
pusha
xchg
mov
das
mov
gs
add
mov
mov
jno
call
test
adc
mov
fistps
icebp
pop
push
push
sbb
and
jo
std
pop
cmpsl
pushf
imul
test
sub
sbb
call
or
test
add
lcall
push
pop
cltd
test
jl
scas
jle
mov
data16
jb
mull
adc
loopne
cmp
cmp
add
loope
or
lahf
cwtl
mov
int
loope
push
pop
adc
cmp
mov
repnz
movsb
lcall
int3
adc
sti
fidivrs
nop
rclb
sub
ja
xor
xor
push
ds
mov
dec
sbb
or
adc
push
dec
jmp
push
mov
lods
pop
adc
add
call
in
adc
push
lret
scas
int
out
in
push
and
das
jp
das
pop
jecxz
jne
jno
dec
add
out
jae
inc
jb
mov
stos
shrl
push
es
int
pop
and
sbb
mov
cmp
adc
push
ret
out
adc
ds
das
pop
mov
xor
jl
mull
cmp
lahf
sub
int
lahf
out
mov
insb
push
ds
int3
test
test
test
mov
push
cmp
push
jne
sahf
and
add
call
sub
sbbb
sti
repz
mov
mov
mov
cmp
sub
cmpsb
scas
je
in
ret
ficoml
fwait
cmp
mov
mov
dec
sub
xlat
fdivl
lcall
jg
cmp
cld
pusha
jge
setne
add
adc
ds
pop
mov
ds
movsl
cmp
incb
mov
lock
test
mov
add
clc
repz
mov
jnp
into
xchg
mov
sub
add
call
testl
imul
sbb
popf
cwtl
pop
loope
mov
repz
push
adc
add
push
mov
int
mov
xchg
or
icebp
fstps
dec
push
add
fistpl
sbb
lods
mov
in
mov
dec
data16
test
sbb
mov
sahf
fsubrs
inc
sub
sahf
push
out
or
es
xchg
fnstsw
fisubrl
and
das
pop
pusha
jmp
push
adc
push
sbbb
add
call
in
loopne
out
add
sahf
push
mov
jg
ja
test
clc
fwait
repnz
dec
sub
add
mov
mov
fstp
testb
dec
ret
out
stc
push
outsb
imul
xchg
xor
ljmp
or
or
mov
jmp
lea
daa
jns
push
push
loope
call
xor
faddl
pop
jno
sub
sub
adc
pop
loopne
cmp
outsl
mov
mov
mov
xchg
push
mov
add
call
sti
scas
fistps
sbb
mov
sbb
dec
or
movsl
ljmp
ljmp
inc
add
aam
pop
sbb
jecxz
testl
decb
cmpsb
aad
sub
dec
adc
push
jno
mov
movsb
dec
or
pand
pop
inc
mov
inc
outsl
int
std
push
cld
xor
ret
lea
sbb
cmp
jnp
pop
add
sub
pop
pop
mov
js
cmp
sahf
mov
popf
pop
insb
push
dec
fwait
add
call
jns
shlb
and
sub
mov
and
adc
in
addb
out
ret
rcl
pop
push
int3
xor
scas
xor
adc
je
pop
stos
push
lret
dec
cmpsl
test
pop
add
xlat
sub
cmp
pop
jmp
fs
int3
out
scas
movsl
cmp
push
lock
lahf
dec
pop
dec
mov
fadd
mov
push
sbb
rol
inc
mov
leave
adc
dec
jo
mov
call
fldl2e
fisubs
push
scas
sub
pop
push
mov
jp
and
test
push
mov
add
xchg
ja
int
loopne
mov
cmpsb
movsl
bound
ds
jo
mov
cmpsl
lret
sub
sbb
gs
add
sub
push
xchg
mov
call
dec
sbb
cmpsl
stos
jmp
sbb
aam
push
addl
les
add
andl
inc
mov
stc
leave
fwait
xchg
mov
int
jge
inc
add
call
or
and
push
in
decl
add
pop
xchg
sbb
jb
add
pop
dec
popf
mov
icebp
or
add
cmc
test
fnstsw
arpl
outsl
negl
xchg
jle
aad
xlat
xor
stos
jnp
jae
jno
cmpsb
aas
nop
jg
into
ret
into
push
inc
jle
movsl
dec
adc
lahf
push
js
sahf
andb
call
mov
mov
jl
jmp
bound
fdivrl
sahf
mov
stos
mov
pop
jle
enter
add
call
xlat
inc
pop
add
push
lret
pop
or
fsub
scas
mov
jbe
xor
or
leave
ljmp
jecxz
out
js
insl
addr16
mov
inc
stos
and
stos
sub
mov
sub
lret
lahf
shlb
fwait
and
xlat
adc
sbb
arpl
bound
inc
repnz
xchg
cli
lods
cmpsb
or
aam
or
cltd
cmc
or
xor
jo
mov
and
dec
out
sahf
mov
mov
call
lock
lods
add
add
push
out
std
add
mov
ror
mov
mov
pop
or
nop
outsb
lods
test
stos
mov
in
out
in
mov
pop
mov
in
scas
addr16
fistps
cmpsl
gs
add
sub
xchg
pop
fiadds
jb
inc
xor
scas
ljmp
mov
sbb
xchg
xchg
ljmp
xor
lods
adc
bnd
cmpsb
fsub
pop
adc
call
call
test
js
lret
jnp
shlb
xchg
and
gs
dec
arpl
and
lret
mov
mov
popa
in
lcall
add
xor
and
push
mov
popa
sarl
mov
in
cmp
cwtl
cwtl
dec
addr16
movlhps
xchg
bound
sahf
incb
test
es
stos
les
jp
adc
or
mov
mov
mov
jmp
rcrb
pop
add
call
cmp
mov
mov
jbe
cmp
jne
cmp
xchg
adc
or
int
jge
or
lahf
ljmp
cli
fsubl
jno
out
psrlq
clc
dec
pop
hlt
pop
repz
out
jecxz
iret
xchg
cmp
and
in
mov
lds
mov
test
cmp
push
movsb
jnp
sbb
lods
lahf
jno
fs
bound
das
loop
pop
rclb
jp
mov
int
mov
push
mov
call
push
lret
jl
or
ds
outsb
jo
sti
push
xchg
mov
mov
inc
test
lret
adc
xchg
inc
and
out
imul
pop
addb
mov
pushf
sbb
out
mov
rcrl
loope
adc
add
dec
ss
jae
jne
imul
xor
movsb
adc
andl
stc
sbb
arpl
sub
lret
aad
call
mov
mov
and
call
loop
adc
lock
divb
and
sub
outsb
fcompl
inc
xchg
adcb
xor
xchg
sti
pusha
jmp
jno
jg
xor
outsb
mov
cmp
scas
push
mov
lods
mov
outsb
xor
gs
je
out
ljmp
fcmovne
call
loope
movsb
stos
sahf
jg
jns
imul
inc
daa
xlat
or
inc
pop
inc
push
and
or
mov
xchg
mov
in
in
in
sub
add
call
dec
jp
add
mov
xor
sbb
mov
xor
test
inc
or
push
pop
xchg
mov
lcall
sbb
jge
mov
cwtl
lcall
jne
mov
jl
icebp
pop
arpl
ret
inc
or
movb
sub
ljmp
push
lds
sub
dec
mov
adc
mov
cmp
dec
sbb
call
mov
ss
test
call
fmulp
xor
dec
repz
dec
or
stos
xor
sub
jo
jecxz
test
adc
je
lea
mov
pusha
fisubs
sti
cmp
cmp
out
rclb
mov
dec
ret
cmp
loope
rcrb
pop
es
and
jns
mov
adc
push
mov
test
push
lahf
or
adc
mov
sahf
mov
testb
lods
add
pop
sar
repnz
jns
iret
xlat
xor
mov
data16
fadds
mov
imul
call
into
xor
int
arpl
ficoms
pop
fistps
cmp
jp
add
xchg
inc
add
mov
insb
cmp
jo
dec
js
repnz
sbb
aam
ljmp
jno
nop
jo
fcomi
cmp
decl
xchg
adc
cmp
ds
fisubrs
ja
sbb
icebp
pop
jo
rclb
repnz
scas
lea
lret
arpl
ja
mov
xchg
push
outsb
nop
lret
mov
pop
push
xchg
add
ljmp
test
add
add
call
cmc
mov
jno
aam
lret
or
aaa
cmp
push
xorb
sti
es
pop
test
arpl
rcrb
incl
int
sub
in
add
add
xchg
jbe
adc
gs
in
in
test
sbb
cmp
mov
mov
jmp
dec
pushf
add
dec
push
mov
stos
stos
sub
pop
into
mov
sbbl
out
lds
xchg
ljmp
push
daa
aaa
or
in
ss
call
insb
cmpsb
inc
lret
pop
fdivrl
cmp
adc
je
fcoml
repz
mov
mov
mov
or
xlat
das
fwait
bound
rcrb
pushf
mov
cmp
flds
mov
rol
das
jecxz
lods
xchg
loope
xchg
inc
ds
clc
pusha
shr
or
iret
cmp
in
test
xor
jo
inc
and
pop
cwtl
lds
push
inc
add
mov
sbb
iret
push
out
xor
mov
and
bound
adc
int
add
call
repz
addr16
jae
jle
sub
inc
out
insl
es
outsl
nop
cmc
insb
shll
imul
mov
sbbl
and
aas
in
sub
dec
into
lret
addr16
sbb
gs
stos
push
sub
sub
inc
pop
dec
lahf
cmp
fsubr
ljmp
push
push
movsb
sbb
xor
mov
cltd
add
sub
clc
lds
es
jae
test
cmp
mov
xchg
es
xor
add
call
jmp
cmpsb
daa
sbb
lret
gs
mov
push
cmp
pop
in
aad
mov
mov
pop
dec
or
movsb
fidivrl
xchg
push
aad
push
add
mov
and
jge
stos
jae
xchg
xchg
out
dec
mov
mov
cmpsl
js
mov
or
xor
and
das
rorl
dec
xor
adc
inc
or
adc
in
mov
sar
inc
pop
sbb
xor
call
pop
roll
fstp
and
rolb
add
call
inc
fwait
inc
push
cwtd
cld
sbb
inc
pop
xor
imul
addb
push
lods
shrb
push
outsb
sub
int3
adc
mov
xchg
mov
shrb
testb
inc
and
cmp
into
pusha
std
out
test
push
push
in
jecxz
mov
adc
lock
mov
je
scas
xchg
mov
sub
pop
sub
jmp
dec
in
mov
ja
cmp
clc
cmp
repz
xor
and
cwtl
xchg
sarl
call
addb
sub
repnz
sub
pop
xchg
mov
ret
into
cmp
pushf
scas
xlat
mov
in
div
int3
imul
scas
jl
dec
sbb
dec
dec
loopne
xchg
lea
loope
mov
cmp
sub
cmpsb
mov
rclb
pop
jae
xor
scas
rcl
fwait
ja
test
pop
ss
xor
imul
fisttpl
popf
jle
loopne
xor
push
enter
push
cmpsl
jae
rorb
out
inc
ret
rorb
lret
and
add
call
call
xor
sbb
iret
mov
jge
mov
dec
loop
in
xor
xchg
mov
gs
rcrl
sub
mov
sub
insl
lret
jno
andl
or
rcrb
ja
test
mov
out
lds
mov
mov
jmp
scas
or
pop
leave
int
push
xchg
stos
jecxz
push
punpckhwd
add
lcall
lahf
scas
fdivrs
subb
imulb
mov
mov
call
mov
lcall
lret
push
push
mov
pop
pop
dec
add
lcall
gs
dec
pop
cmp
mov
push
lret
cld
in
mov
lods
into
inc
adc
push
lea
ret
xor
add
cs
push
xchg
sub
push
lcall
push
pop
sarl
sub
jl
outsl
aad
insb
ljmp
pop
lock
or
js
cmc
das
jmp
dec
loope
inc
jns
push
mov
add
call
jb
push
lea
inc
int
dec
mov
sarl
bnd
pushf
jge
pop
inc
inc
add
insl
push
ret
mov
je
ja
mov
add
sbb
aaa
test
xchg
fwait
mov
les
hlt
mov
test
pop
cmp
mov
pop
xchg
adc
cmp
data16
aam
movsl
sub
inc
ds
jno
subb
or
push
andl
adc
add
jnp
or
fldcw
add
lock
call
or
adc
lahf
cli
cltd
jne
adc
mov
fs
nop
pop
xchg
mov
test
in
nop
jecxz
dec
imul
inc
testl
push
rcrl
out
jle
push
add
mov
sub
daa
mov
add
pop
cmpsl
push
mov
mov
and
dec
inc
popf
pop
xor
in
adcb
cmp
roll
ret
je
ret
inc
jmp
das
out
cli
inc
stc
cmpsb
xchg
pop
add
call
loope
add
mov
or
cli
jecxz
js
mov
in
mov
pop
jns
jo
gs
xchg
lcall
inc
push
clac
icebp
fbstp
outsb
or
sbb
sbbb
imul
jmp
fildl
jnp
bound
jle
sub
int
and
and
cmpsl
lods
sbb
mov
or
cmp
sti
mov
pushf
cmpsl
ljmp
and
adc
push
adc
sbb
add
call
push
shll
jecxz
sbb
cmp
dec
cmp
push
test
ss
mov
ds
insl
sbb
lret
loope
int3
es
imull
aam
xor
or
inc
pop
dec
mov
cmpsb
inc
pop
jbe
mov
mov
push
sub
jne
fs
jle
pop
xchg
push
fs
repz
movsb
jmp
addb
adc
mov
push
and
enter
adc
aad
adc
xchg
jge
fnstcw
xor
call
inc
fldenv
sbb
and
push
jle
js
rorl
xor
fsubs
mov
fstl
sub
test
clc
dec
lods
stos
sahf
sbb
addb
push
sbb
repnz
pop
out
xor
dec
inc
out
jge
xorl
ja
enter
cld
mov
add
pusha
xor
cmp
sbb
push
fiadds
icebp
sbb
xlat
dec
int3
aad
ja
mov
or
nop
ljmp
adc
call
sub
or
push
add
cmpsb
fisttps
mov
addb
scas
int
push
add
adc
cwtl
xchg
js
push
aam
rcr
out
ss
pop
add
add
cli
stc
vmread
scas
adc
std
loop
es
rclb
jne
xor
mov
mov
les
daa
repz
push
movsl
ds
imul
roll
cmpsl
js
roll
fwait
xchg
push
addr16
dec
add
sbb
shll
jmp
lods
xor
xor
call
mov
and
lock
pop
push
pop
cwtl
push
push
push
lds
into
or
add
cmp
jb
xor
test
pop
shrl
or
push
test
jns
inc
movsl
adc
mov
fstpl
jl
push
repz
shrl
cmp
sbb
mov
jg
nop
sub
push
sti
push
pop
cltd
outsl
lcall
cmp
mov
ja
cmp
mov
dec
repz
pushf
sbb
jp
scas
mov
call
jne
imul
mov
imul
adc
je
in
or
pop
fidivl
inc
add
ljmp
lahf
pushf
sbb
and
push
jae
mov
jae
clc
icebp
sahf
xor
movsl
add
xchg
dec
mov
cmp
std
lds
dec
sti
mov
pop
sbb
faddl
and
pop
mov
jbe
push
hlt
mov
repnz
mov
pop
add
sbb
jo
adc
push
xchg
mov
add
call
and
scas
andl
or
out
jnp
pop
jecxz
int
dec
add
jg
cmp
mov
ret
test
jnp
andl
in
testl
inc
cmc
lret
jae
mov
mov
dec
scas
push
dec
stos
dec
mov
add
cmp
dec
in
test
sbb
loopne
sub
dec
mov
add
push
decl
cli
mov
mov
push
incl
push
scas
pop
dec
cmp
add
call
lahf
ja
sub
xchg
mov
pop
lea
dec
orl
ljmp
pop
push
push
push
jbe
in
sub
aad
push
push
mov
add
ud1
adc
out
dec
xorb
dec
or
out
inc
sarb
addr16
in
gs
ds
popa
imul
mov
adc
xchg
ret
pop
in
or
xor
xchg
jmp
jne
mov
add
pop
lds
fcoms
std
in
add
call
adc
xor
in
add
inc
les
pop
or
lods
mov
dec
lret
jns
movsl
ja
xlat
call
jae
ljmp
push
prefetchw
push
sti
adcl
popa
shrb
fidivrl
add
ror
fimull
into
cmp
mov
les
xor
mov
ret
inc
lods
gs
xchg
gs
xchg
mov
lahf
lds
dec
mov
dec
sbb
test
mov
push
lret
or
dec
adc
call
cwtl
push
mov
sysenter
out
dec
dec
call
mov
xor
movsb
ror
add
cmp
loopne
add
mov
xor
inc
es
mov
add
iret
xchg
imul
inc
ja
filds
sbb
dec
mov
sub
movsl
mov
std
aaa
push
adc
pushf
push
lock
lods
lea
inc
jg
and
push
fwait
sbb
or
jns
lret
dec
fwait
test
cmp
repz
rcrb
jne
add
call
gs
fidivl
add
pop
repz
jmp
bswap
adc
pop
add
xchg
sub
fwait
daa
gs
cld
and
jb
inc
sbb
adc
inc
stos
iret
dec
mov
arpl
imul
add
ja
and
jle
mov
aam
mov
inc
es
pop
or
sbb
in
and
inc
cmc
pusha
insl
cmp
mov
mov
icebp
imull
add
andl
call
add
int
lret
mov
loopne
sbb
mov
xchg
arpl
dec
mov
cltd
cmp
in
das
in
ret
pop
insb
and
out
pushf
mov
bound
adc
out
fildll
insl
dec
mov
and
imul
mov
push
adc
mov
imul
jbe
sbb
pop
in
sub
insb
dec
pop
xchg
shlb
icebp
or
test
push
mov
inc
in
bound
orl
inc
jnp
sbb
sbb
jl
add
call
push
imulb
add
mov
rcrb
std
push
sbb
inc
std
sub
jmp
push
scas
nop
dec
pop
mov
mov
adc
cmp
shrl
cmp
sub
lock
xchg
jnp
call
mov
loopne
jno
or
sub
fdivl
push
and
ret
addr16
lods
cmp
andl
jnp
push
xchg
lcall
and
imul
rcrl
push
dec
repz
fcompl
add
call
xor
daa
inc
sbb
stos
mov
imul
cmpb
js,pt
out
out
lods
mov
pop
nopl
fdivrl
rcll
mov
loopne
shll
and
and
lods
sub
mov
test
xchg
push
pop
scas
and
cmp
sbb
sti
jo
push
int
leave
pop
in
jl
lock
jmp
sbb
jo
ret
ljmp
dec
repnz
add
push
gs
mov
cwtl
mov
mov
call
dec
int3
imul
mov
addr16
pop
pushl
incb
add
pop
sub
cmp
cmp
jo
cmc
mov
lret
xchg
aad
int3
xchg
fwait
js
fadd
mov
cmp
enter
enter
push
xchg
xchg
xchg
mov
idivb
push
and
cmp
out
cmp
shrb
xor
xorl
cmp
ljmp
mov
lret
popf
shrb
jnp
and
fs
call
sbbb
xlat
or
jb
mov
movsl
dec
push
lcall
mov
adc
rclb
pusha
scas
aad
sti
shrb
mov
fwait
xor
mov
inc
jns
out
mov
lahf
dec
out
mov
popa
cmp
mov
shll
stos
or
sbb
sar
push
ss
xor
mov
add
nop
add
adc
test
stos
stos
shl
inc
loope
pop
scas
fs
int3
es
mov
rclb
iret
test
add
call
aam
lods
push
sub
xchg
xor
arpl
imul
or
pop
sbb
lret
mov
imul
push
scas
jno
pop
loopne
sbb
jle
mov
cld
rclb
adc
cmp
mov
loope
push
insb
mov
sbb
daa
adc
or
cs
lods
clc
add
repz
push
mov
sti
inc
mov
icebp
cmp
xchg
fwait
sub
test
sub
cmc
or
and
cmc
icebp
cmp
add
add
call
xchg
cwtl
lods
xchg
mov
in
pushl
push
in
lret
lods
cltd
sub
fidivrs
sbb
push
movsl
pop
lahf
jb
cmpsl
mov
jno
aam
mov
dec
stos
pop
mov
push
sbb
or
test
mov
mov
mov
fstps
and
mov
test
mov
push
dec
inc
nop
std
add
push
insl
dec
xor
fisubrl
xor
fiadds
add
call
or
sti
das
mov
pop
repnz
sbbl
cmpl
outsl
pop
repnz
push
sbb
insl
xchg
hlt
mov
xchg
jle
sbb
scas
mov
gs
enter
cmovp
jmp
idivb
iret
sbb
fistl
shrb
gs
or
repz
xor
jb
pop
repz
inc
dec
out
cs
sbb
cmp
loop
pop
ja
pop
xor
aam
add
call
push
test
cmp
iret
fnstcw
call
das
or
lret
sbb
push
mov
cld
mov
push
lock
fldenv
push
jge
in
cmp
push
sub
lea
sbb
xchg
in
addr16
getsec
sbb
ror
inc
adc
lret
mov
arpl
lahf
push
push
pushf
push
mov
jne
jb
mov
sti
pop
pop
adc
jno
and
les
icebp
fcompl
jns
mov
and
mov
add
call
jle
mov
cs
cmc
es
in
push
pusha
dec
lods
fsubs
push
in
dec
xchg
out
mov
fwait
jl
lods
test
sbb
cld
xor
aad
mov
jp
mov
lds
loop
daa
jne
inc
and
or
push
add
jmp
add
xchg
icebp
push
jmp
xchg
xchg
sbbb
test
arpl
adc
jl
fs
enter
add
test
dec
lahf
mov
add
call
jnp
inc
pop
inc
xchg
movsb
inc
outsl
jmp
pop
fdivs
out
adc
arpl
pop
in
jb
xor
mov
jns
sbb
mov
cmp
aas
jo
mov
fisubl
dec
inc
mov
jo
push
inc
and
leave
dec
add
mov
sub
mov
lock
dec
insb
movsl
shrb
sbb
jb
mul
test
lock
pop
popf
dec
xor
push
ret
insb
inc
aaa
xor
pop
xchg
push
mov
jecxz
add
mov
add
call
jnp
sbb
dec
ss
jp
ja
push
lret
sahf
push
xabort
outsb
push
xchg
adc
in
stos
jmp
jl
push
cmp
mov
xchg
jg
ja
dec
lods
sub
pop
rol
imull
add
orb
out
leave
leave
gs
lret
dec
in
sub
out
xchg
aaa
lds
fistpl
adc
rclb
mov
push
mov
stos
pop
xchg
vpshrdd
pop
inc
jns
test
ret
cmp
aas
sbb
aas
or
add
call
rorb
mov
addr16
movsb
and
xchg
and
stos
sub
fdivl
and
mov
lea
mov
loope
xchg
xor
mov
push
stos
lea
push
and
mov
sbb
mul
pop
sbb
loop
jne
adc
fidivrs
hlt
sub
cltd
loopne
mov
stc
cmpb
mov
bound
lret
pop
mov
jno
jno
mov
add
loopne
cld
iret
out
testl
call
shl
sarb
dec
ljmp
arpl
sbb
mov
and
mov
adc
loop
sub
and
shrl
lods
stos
or
jmp
lret
jge
lock
fmull
xchg
fdivp
fists
cmp
rcll
or
out
inc
outsl
mov
and
mov
fcom
mov
addb
mov
sbb
cmc
and
roll
fwait
and
push
rolb
and
int3
mov
jle
or
mov
pop
xor
add
call
hlt
sbb
popf
and
push
in
insb
adc
mov
test
test
xchg
roll
or
sarb
pop
pop
mov
xchg
lcall
inc
cmp
ret
in
sub
dec
and
lcall
insl
cmpsb
test
mov
ror
sub
xchg
out
icebp
leave
mov
dec
fisubs
add
adc
xlat
cmp
xor
pop
imul
and
lods
mov
or
fwait
inc
loop
xchg
lret
aas
inc
xor
dec
pop
sbb
ret
xor
call
inc
mov
hlt
jp
xchg
lret
jl
fyl2x
sub
and
pop
cmc
adc
testb
fadd
sbb
scas
sar
lcall
mov
xchg
fs
xorb
adc
insl
outsb
shrb
leave
dec
roll
push
adc
ret
cmp
gs
add
mov
sub
stc
inc
pop
dec
jns
add
push
inc
adc
inc
cwtl
mov
flds
fiadds
lret
add
call
mov
sarl
or
inc
or
mov
push
test
lea
mov
stos
inc
insl
iret
xchg
int3
mov
push
jmp
je
stos
in
pop
pop
cli
sti
jns
mov
cs
lds
cs
mov
push
iret
std
cmpsb
sub
std
call
pop
out
xlat
lret
data16
fs
mov
idivl
lods
cmc
aam
addr16
jp
add
sub
in
adc
aas
or
jp
xchg
and
cmc
shl
hlt
jns
push
add
call
stc
leave
and
inc
cmp
call
cmpsb
jg
ds
jge
mov
sub
jnp
xchg
scas
inc
or
pop
pusha
cltd
divps
adc
and
push
push
inc
xor
out
cwtl
adcb
test
popa
cmp
xor
mov
add
dec
hlt
adc
sahf
das
or
into
movl
mov
mov
mov
shll
adcl
les
roll
dec
xor
add
call
adc
lds
dec
xchg
push
mov
xor
cmp
hlt
mov
jnp
lods
mov
xchg
in
ljmp
daa
not
lret
testl
jle
pop
sbbl
enter
mov
jns
aam
xlat
mov
outsb
in
inc
loop
ds
xchg
inc
pop
mov
dec
pop
testb
sub
push
stos
jmp
jno
sahf
movsb
aad
add
ret
cwtl
push
in
nop
adc
push
fimuls
jmp
aaa
push
aad
jp
add
call
sub
inc
adc
push
je
mov
lcall
gs
sub
aad
popf
mov
sub
hlt
out
orl
call
mov
imul
add
and
enter
in
pop
xchg
jmp
movsb
fucomi
jbe
jl
or
das
in
sti
scas
dec
mov
pop
mov
outsb
pop
mov
gs
xor
call
mov
cwtl
push
push
push
into
push
shll
inc
add
call
test
imul
lret
xchg
xor
sbb
dec
aad
sub
push
push
pop
mov
add
and
or
inc
std
out
push
data16
aas
fcoms
adc
and
mov
sahf
add
inc
push
imul
dec
data16
data16
stos
lret
aam
push
es
call
mov
xchg
scas
lock
cmp
call
into
xchg
mov
cwtl
cmp
dec
sub
loop
xor
loopne
addw
testb
call
stc
xlat
jb
repnz
xor
inc
and
pop
rcrl
stos
icebp
and
mov
nop
iret
xchg
aad
shll
sbb
fsubl
mov
xchg
pusha
or
pop
orb
jp
mov
pop
outsb
ja
jl,pt
ljmp
cld
dec
daa
rolb
mov
dec
mov
ficoms
xchg
cmpsb
sahf
or
cmp
in
or
inc
fs
jle
mov
or
fsubl
mov
popf
sahf
sbb
into
cmpsl
outsb
out
xor
jne
fcompl
jae
ret
rol
add
call
mov
shrb
dec
pop
jne
lret
or
sbb
shll
push
and
or
repz
jno
lret
mov
out
push
test
repnz
xchg
cs
cmp
lds
rolb
out
es
cmp
xchg
jo
lea
scas
mov
inc
push
shll
push
inc
mov
cld
add
sti
fildl
nop
daa
repz
mov
mov
mov
or
scas
mov
mov
dec
mov
mov
xlat
dec
pushf
loope
pop
leave
xlat
xchg
in
sbb
call
sbb
push
mov
cld
xor
dec
jmp
ss
xchg
orl
fstp
inc
shll
inc
sbb
push
push
cmp
push
push
or
je
adc
into
dec
rsm
xor
aaa
xchg
xchg
ret
dec
xorl
inc
movsl
adc
push
sbb
in
add
pop
sahf
shrl
loopne
rorl
or
dec
add
jno
cmpsb
std
pusha
movswl
mov
mov
data16
call
add
test
inc
aam
ret
xor
cwtl
lcall
sub
xchg
cmpsl
sahf
mov
test
push
cli
and
andl
pusha
aam
cltd
jg
out
inc
jmp
or
jmp
and
incb
jnp
loopne
sub
pop
mov
mov
mov
repz
lret
clc
aas
ss
or
es
jmp
repz
jp
push
les
punpcklbw
add
push
les
lods
add
call
pop
movsl
into
cmp
inc
popa
mov
add
mov
cwtl
shlb
cmp
cmp
ror
rorb
mov
xchg
jp
rcrb
push
jbe
pop
pop
xchg
or
popf
mov
add
jne
mov
sar
call
xor
fldt
xchg
push
jle
xor
cwtl
leave
pop
push
jbe
jo
aad
push
push
add
push
push
cmp
pop
lock
mov
mov
popf
mov
cmp
adc
in
xchg
and
jnp
add
call
and
insb
cmp
mov
and
xor
test
cmp
or
dec
xchg
inc
loopne
mov
jno
sbb
inc
stos
jle
jb
add
fidivl
jae
sub
pushf
fwait
rcrl
mov
das
jmp
xor
and
cwtl
mov
jno
xlat
aad
add
xchg
jl
pop
xchg
mov
inc
repnz
jb
push
inc
rorl
cld
scas
cmp
test
nop
push
add
call
cli
pop
dec
or
sub
mov
xor
dec
out
loope
mov
call
sbb
mov
pop
xchg
in
icebp
sbb
cmp
cwtl
jb
add
push
sub
mov
add
inc
mov
lds
and
test
repnz
fisttps
fcompl
rorl
and
inc
and
push
sub
pusha
leave
and
and
fbstp
and
pop
add
movsb
mov
call
mov
xchg
inc
fbstp
adc
and
mov
cmp
sbb
push
scas
mov
xchg
sar
sbb
mov
pushl
ret
daa
ret
ss
pop
xchg
std
inc
cli
lods
hlt
mov
std
jo
xorl
negl
jnp
out
jbe
ret
loopne
andl
mov
push
call
divl
negb
and
pop
jmp
test
cli
cwtl
mov
sub
mov
mov
push
cmpsl
mov
call
lock
test
mov
lret
mov
push
jle
mov
sub
push
mov
fsubrs
mov
aaa
add
sbb
cmp
add
fdivl
mov
ljmp
sahf
pushf
mov
sub
cmpsb
jl
cmp
mov
add
inc
ficompl
mov
xchg
mov
sub
fwait
adc
xchg
outsl
pop
fadds
test
cwtl
add
call
jae
test
add
push
sahf
call
in
xchg
lahf
mov
mov
mov
test
add
sbb
mov
mov
xor
call
sub
nop
mov
rcll
xchg
pusha
jnp
lds
and
rolb
rolb
add
mov
lds
adc
add
jno
sub
and
pushf
sbb
icebp
xor
mov
rorb
inc
pop
inc
inc
mov
clc
add
call
cltd
les
sbb
cmp
push
push
cmpl
and
cmp
out
mov
in
orb
fidivs
or
arpl
xor
cmpsb
lret
cld
outsl
shll
ror
pop
imul
fiaddl
adc
popa
and
adc
pop
sbb
adc
out
iret
cltd
hlt
es
mov
xor
push
cmp
dec
outsb
pop
aad
js
jne
cmp
cmp
add
mov
rolb
add
call
push
adc
bound
push
mov
or
cld
sbb
and
sbb
loopne
inc
dec
xor
pop
pop
adc
sub
push
sbb
arpl
or
xchg
mov
cmpsb
or
pusha
out
fisubl
mov
lcall
cmp
xchg
lret
outsb
cmpb
cwtl
roll
or
cmp
repz
imul
xchg
mov
bnd
stos
movl
icebp
add
add
call
mov
lods
das
insb
in
xor
xchg
pop
sbb
push
and
push
ret
rorl
gs
leave
ret
sub
mov
idiv
pop
jecxz
ret
push
in
pop
lods
push
ss
jnp
xor
je
lret
mov
imul
push
ljmp
inc
jae
jns
in
and
or
jl
or
pop
lea
push
or
mov
mov
sbb
movsl
lods
mov
push
pop
inc
jp
push
js
jl
add
call
lea
cld
dec
push
rclb
sbb
fdivrl
ss
sub
ret
subl
mov
imul
push
and
addr16
pushf
dec
inc
jecxz
jmp
push
xchg
jne
imull
xchg
jo
inc
xor
sti
in
pop
aad
stos
jns
mov
push
jmp
bound
inc
dec
xor
dec
shlb
in
stos
and
es
fsubs
xchg
add
pushl
cld
pop
test
dec
push
pop
add
call
aaa
daa
sar
cs
stc
inc
lret
xchg
add
xchg
adc
in
or
dec
xchg
lahf
xchg
lret
xchg
iret
mov
cmp
cmp
xchg
push
xorl
inc
ss
dec
lock
in
lods
aaa
xchg
popf
push
loopne
stc
xor
mov
aad
mov
push
lcall
mov
rcrb
mov
out
xor
fcomip
je
xchg
nop
jb
sbb
xchg
jne
jecxz
jl
jmp
jl
test
pop
sti
mov
fs
add
call
jnp
lea
mov
mov
jno
es
inc
jns
scas
into
sub
mov
inc
mov
inc
xchg
out
mov
outsb
pop
ret
hlt
movsl
push
jmp
mov
pusha
add
fwait
mov
mov
sbb
pop
ja
mov
sbb
push
inc
lea
push
je
pop
leave
adc
in
jge
sub
jo
fcomi
je
cmp
out
arpl
or
jle
pop
xchg
pop
or
aad
mov
add
call
push
pop
push
adc
lods
arpl
push
dec
pop
mov
and
mov
rcll
push
cmpsb
gs
push
sahf
add
call
ret
pusha
mov
adc
add
mov
mov
push
repnz
push
push
icebp
dec
js
cmpsl
push
jae
inc
push
not
inc
shr
movsb
inc
push
cmp
and
push
xchg
pop
outsb
shrb
mov
cld
loopne
ja
push
out
xor
scas
inc
out
sbb
outsl
ffree
hlt
mov
xchg
mov
add
call
adc
cmp
cmp
insl
icebp
add
jbe
pop
cmp
fcmove
aaa
cld
sub
push
mov
gs
inc
push
sub
hlt
xchg
xor
scas
cmp
add
dec
sub
pusha
cmp
stos
and
sahf
dec
jae
xor
insb
gs
and
lds
or
jmp
cmp
jge
sub
jo
jge
ljmp
or
xchg
dec
insb
js
xchg
movsb
repz
mov
es
mov
dec
rcll
xor
jge
jecxz
xor
xchg
jecxz
das
lret
add
call
jg
ret
out
xchg
mov
xchg
add
jp
push
xor
out
mov
jb
mov
rolb
subl
fwait
add
or
pop
pop
rcrl
or
rcrl
fldt
lods
xchg
in
add
mov
stos
pop
ret
outsl
jno
push
sbb
push
and
addr16
insl
sub
cmp
push
xor
mov
push
or
xor
inc
imul
neg
pop
je
jno
outsb
cs
mov
and
subb
add
call
loope
aam
adc
test
xchg
incl
nop
rorl
addr16
je
add
mov
bound
hlt
jmp
mov
cld
cmp
mov
jae
popf
pushf
pop
pop
mov
scas
xor
out
pop
mov
xor
les
lds
or
les
xchg
test
loop
aas
inc
ficomps
mov
inc
jno
fldl
data16
and
jmp
dec
out
push
in
push
leave
mov
repnz
sbb
call
or
in
ljmp
mov
push
cmp
jae
push
movaps
sbb
jp
fdivrs
loope
dec
and
mov
pop
push
push
xlat
sti
mov
push
jb
outsl
scas
iret
popa
cmp
and
out
daa
mov
cmp
pop
mov
loop
xchg
in
mov
mov
aas
pushf
push
loope
mov
dec
insb
jae
rorb
sbb
pop
out
xor
lret
push
mov
xchg
sub
push
sbb
ret
mov
repz
call
pop
add
outsb
sbb
add
rolb
add
std
mov
arpl
xor
inc
sub
icebp
hlt
pop
adc
fcmove
dec
cmp
jp
gs
mov
mull
xor
jg
sbb
movsb
sbb
roll
or
mov
shrl
fbstp
mov
pop
rorb
shrl
ret
into
dec
das
add
fstl
cmpsl
xchg
test
and
jg
or
rcll
or
call
add
sbb
lret
adc
mov
pop
popl
test
cmpsb
fsincos
pop
cmpsl
adc
data16
jp
xor
adc
and
scas
int3
enter
push
dec
mov
or
scas
xchg
or
xchg
pop
js
inc
cmpsb
outsb
or
jle
xchg
in
test
cmp
adc
mov
xchg
pop
and
cmp
daa
cmpsl
arpl
jnp
test
jl
aas
out
xchg
push
pop
xlat
je
add
call
xor
inc
mov
pop
jne
mov
pop
ror
icebp
xchg
mov
and
fwait
test
faddl
test
add
adc
mov
push
repnz
aad
push
ljmp
xor
adc
lea
decl
lods
mov
mov
lock
insb
lcall
pop
loopne
cs
mov
imul
lods
jg
jg
movsl
xor
mov
mov
loop
mov
inc
cmc
dec
jle
lds
add
call
pop
repnz
cltd
inc
dec
adc
cmp
imul
add
enter
daa
test
mov
mov
sbb
xor
mov
mov
in
data16
lds
nop
imul
push
sub
insl
test
sti
add
pop
add
xchg
push
out
js
cmc
icebp
mov
xchg
lcall
pop
dec
push
cmp
pusha
imul
gs
cmc
cs
jno
test
dec
cmp
data16
add
call
mov
scas
in
pop
call
dec
sbb
in
push
int3
cld
pop
cltd
ds
pop
cmp
fildll
sub
add
push
xchg
dec
jl
xlat
mov
mov
jb
dec
jns
or
popf
cltd
push
add
push
or
mov
pop
push
movaps
loope
and
rorl
pop
inc
and
push
pop
call
mov
sub
cmpsb
fstps
andl
xlat
inc
iret
or
cmpsb
pop
xor
add
call
dec
push
push
ret
into
das
testb
sub
pop
mov
ja
mov
pop
popf
and
cmp
and
scas
je
adc
js
pop
push
loop
mov
arpl
mov
les
aas
and
and
inc
mov
mov
push
insl
vunpcklps
push
mov
inc
cli
fs
push
add
iret
push
xor
lock
xlat
cwtl
leave
cs
and
outsl
orl
dec
stos
xor
pop
aam
or
filds
push
add
call
add
adc
jle
xchg
ffree
orb
and
loopne
stos
hlt
es
js
lret
cmp
fldl
push
sub
fisubrl
mov
cmc
inc
inc
cmp
and
lea
pop
cmp
imul
es
into
sbb
sbb
mov
cmp
pop
xor
jb
jp
mov
xchg
lret
mov
add
incb
xor
adc
dec
insb
adc
mov
add
and
popa
and
pop
add
rcl
add
call
int3
arpl
push
xchg
das
pusha
aas
out
inc
jg
data16
daa
lahf
loop
sti
dec
adc
clc
or
cmp
mov
popa
sbb
das
repz
cmp
add
out
cmp
fdivs
jle
cmp
dec
mov
push
push
scas
inc
gs
and
out
shl
push
and
adc
xorl
popf
lds
out
dec
mov
jle
sub
inc
sbb
rorb
in
and
sti
pop
ret
push
mov
add
call
mov
and
cwtl
lret
mov
ja
push
dec
add
mov
push
dec
jg
je
loope
mov
xor
sub
nop
cmpsl
idiv
mull
dec
inc
sahf
lods
jp
rcrb
scas
mov
pop
mov
push
pushf
add
jbe
stc
push
movsl
mov
cltd
fistpl
mov
mov
mov
or
xchg
push
mov
pusha
es
andb
jns
and
dec
push
loop
pop
sahf
cmp
sub
dec
inc
test
add
call
pop
add
cld
add
jmp
ja
adc
cld
hlt
pop
xor
clc
lret
xchg
add
or
inc
stos
outsl
lret
popa
and
loopne
xchg
es
test
in
negb
aad
jbe
mov
mov
sub
imul
jo
dec
jbe
sbb
mov
fwait
push
add
xor
add
fmuls
mov
sbb
inc
aam
jle
jmp
xchg
dec
sub
cmp
mov
pop
xchg
ja
push
inc
push
scas
cmpsl
and
fucomi
outsb
aad
jge
pop
aam
jno
add
call
fstpt
cltd
xor
adc
sbb
mov
dec
dec
mov
xor
out
or
xchg
arpl
into
mov
push
faddl
fucomi
cli
bound
out
ficompl
lock
jo
cmpsb
sbb
mov
adc
test
outsb
sbb
adc
mov
fisubl
mov
orl
mov
or
adc
scas
sti
je
aad
push
xor
cmpsl
aad
add
sub
je
es
data16
call
arpl
sbb
add
or
in
imull
mov
sbb
mov
loop
stos
push
test
mov
sti
sub
and
push
sbb
cld
xor
sub
faddl
adcl
int
nop
stos
ja
in
jge
ljmp
or
ss
add
or
out
ja
cld
push
or
enter
sub
add
lds
movsb
add
call
incl
dec
ja
inc
insw
dec
dec
mov
mov
jmp
and
inc
sub
daa
mov
mov
mov
rcrl
jmp
sti
es
stc
push
mov
sub
jno
movsl
scas
xchg
cmp
addr16
les
clc
xor
pop
out
mov
xchg
dec
push
aam
inc
leave
and
mov
fsubrl
xchg
ja
push
cmp
mov
adc
pop
jne
dec
call
or
mov
lea
mov
addl
mov
add
call
jne
pop
dec
pushf
insb
sbb
in
into
adc
cmp
sbb
dec
shl
xor
or
movsl
rorb
ss
xchg
daa
xchg
fisubrl
out
dec
xchg
ret
lea
scas
leave
fs
ja
push
cli
dec
xchg
mov
repnz
mov
xchg
mov
mov
lock
hlt
or
enter
pop
sbb
adcl
test
mov
pop
xchg
sbb
outsb
cmp
int3
daa
xchg
out
add
call
fisubl
out
xchg
and
xchg
mov
cmpsb
ja
ljmp
jnp
aad
jns
xchg
es
dec
jae
mov
cmp
push
repnz
fwait
in
pop
scas
jae
imul
clc
clc
clc
in
adc
push
test
mov
adc
pop
aaa
adc
jp
aam
mov
jmp
pop
jae
hlt
push
pop
sbb
xchg
sub
js
aas
xchg
dec
push
add
mov
mov
ljmp
add
call
sub
into
inc
push
imul
lods
cmp
push
ss
subl
sbb
add
xor
aam
sbb
cmp
fisubs
loope
add
inc
imul
inc
cmp
daa
nop
pop
mov
dec
adc
inc
insl
adc
xchg
jl
and
rorl
pop
adc
sarb
inc
and
xor
out
and
aam
idivb
pop
mov
jmp
rolb
repnz
les
add
call
jns
pause
push
xchg
cmp
rorl
lret
jb
push
les
mov
sbb
sbb
pushf
xor
and
xor
mov
push
cld
es
add
lea
lahf
gs
fdiv
push
lahf
out
mov
sub
test
pop
fidivrs
std
mov
shrb
pop
std
mov
lret
in
add
add
loope
lcall
mov
sub
push
gs
pop
repnz
call
mov
ret
pusha
dec
ret
xchg
rorb
in
mov
call
popa
rclb
and
ss
cmp
ja
lds
dec
sbb
push
mov
loopne
fadds
adc
in
cmpsl
mov
test
in
repnz
leave
sub
pop
cli
and
leave
movsb
dec
pop
popf
test
mov
push
xchg
mov
dec
in
adc
lahf
cmpsl
sbb
cmpb
bound
mov
cld
sub
lret
shl
mov
pusha
fdivl
jg
pop
sub
shll
int
and
add
call
cmp
jnp
cli
imul
xchg
or
xor
push
sub
push
fsub
inc
xchg
addr16
and
cmc
mov
push
jno
outsl
ss
in
fst
cld
arpl
mov
push
mov
jl
pop
jno
xchg
jbe
sbb
inc
mov
aaa
pusha
mov
xchg
scas
stos
mov
popf
repz
nop
divl
mov
mov
icebp
add
adc
shrb
cmp
pop
les
jno
call
into
or
cmp
hlt
test
sub
cmp
ret
and
pushf
out
loopew
add
mov
imul
jb
xor
jae
out
and
scas
out
sub
fcmove
xchg
jno
mov
lgs
addr16
jo
jns
xchg
pop
add
xchg
scas
subl
dec
pushf
push
push
mov
mov
adc
je
push
mov
ss
and
jnp
inc
xor
pop
sbb
xor
std
icebp
pusha
shr
add
call
xor
inc
mov
cmc
jle
pop
cmpsb
fdivr
add
enter
xchg
inc
pop
outsb
out
mov
fnstenv
sbb
jp
sub
xchg
push
ljmp
sub
mov
sti
data16
daa
or
push
scas
jle
repnz
test
enter
mov
mov
rcll
pop
dec
xor
stc
in
dec
mov
cmp
sarb
mov
sub
mov
in
rcrl
dec
sbb
sti
ds
push
push
fsubl
call
jmp
outsb
adc
imulb
mull
aas
mov
out
repnz
cltd
iret
fisttpl
xchg
add
fwait
repz
lahf
add
sbb
call
jne
dec
rcrb
inc
bound
push
xor
mov
sbb
in
repnz
loop
test
fwait
bsr
cmp
sbb
xor
je
test
push
fwait
ss
scas
adc
mov
enter
aam
and
xor
incb
add
call
xor
pop
mov
fldl
addr16
mov
cmp
xor
shrb
adc
mov
addb
fnstenv
repz
mov
mov
add
inc
inc
mov
out
pop
xchg
push
push
fs
inc
inc
fnstenv
mov
and
mov
repz
sbb
pushf
cltd
aaa
add
outsl
ret
dec
mov
addb
inc
ja
sbb
xor
sub
rcrl
or
aas
xor
imul
adc
add
call
adc
cli
sbb
in
push
and
xchg
add
movsl
popa
sbb
test
dec
sbb
push
movb
loopne
sbb
inc
outsb
movl
dec
movsb
sti
or
xchg
pop
cli
adc
in
test
stos
int3
sti
adc
add
je
fimuls
dec
mov
orb
cmp
xchg
stos
adc
repz
gs
xor
pop
insb
cmpsl
repnz
ja
fwait
call
jle
jle
out
aad
insb
dec
jmp
dec
jge
adc
arpl
call
sub
pop
out
mov
cltd
pop
les
inc
daa
mov
sbb
loop
ret
test
in
and
dec
stos
jne
mov
insl
cwtl
mov
imul
mov
adc
xchg
sbb
imul
popa
mov
cwtl
pop
repz
or
lods
sub
andl
add
fisubrl
shrl
pop
cld
aam
fistpll
jb
xor
lcall
ja
mov
jo
imul
push
adc
ljmp
call
add
xchg
out
or
push
cmp
jne
push
inc
addr16
fists
dec
call
pop
xor
push
inc
cmp
cwtl
push
movsb
inc
xlat
dec
xor
mov
out
cmpsb
mov
mov
adc
into
hlt
mov
out
jnp
pop
adc
mov
mov
mov
outsl
sub
stos
sub
sub
loope
fs
mov
dec
inc
inc
mov
jb
aas
es
inc
out
lret
mov
es
jnp
shll
fcoms
dec
dec
fldl
add
call
movl
fisubs
popa
cmpsb
lock
mov
xchg
lds
andl
pop
test
pop
fst
lods
push
push
sub
outsb
push
test
in
push
lock
jmp
add
stos
xchg
and
fidivl
mov
inc
loope
das
daa
sub
sbb
add
popf
call
add
jb
iretw
shrb
lods
sub
pop
mov
xor
pop
xor
leave
data16
or
call
mov
cmpsl
inc
outsl
or
inc
subb
sub
xor
add
mov
clc
ret
dec
jns
dec
in
mov
pop
icebp
cmp
out
lret
cmp
dec
xchg
test
in
bound
out
sub
cmpsb
adc
and
and
pop
push
add
scas
aaa
pop
ss
movsl
inc
test
pop
sbbl
ret
cmp
andl
dec
fcmove
and
jecxz
sub
out
pop
nop
pop
test
jno
adc
call
pop
cmp
adc
inc
cmp
inc
imul
pop
int
jmp
ds
and
xchg
sub
pop
inc
or
lods
es
inc
cmpsb
jne
in
scas
mov
mov
aam
xor
scas
mov
inc
jbe
add
lock
mov
aam
lcall
mov
push
dec
mov
push
sbb
mov
out
inc
xor
subl
sbb
mov
dec
add
das
cmp
mov
int
in
roll
add
call
bound
xor
adc
das
and
mov
int3
ljmp
jnp
xor
cs
std
push
mov
jnp
loop
add
in
push
ds
aad
inc
mov
sbb
sti
and
sbb
arpl
xor
sahf
xorb
fcomps
mov
cwtl
into
hlt
or
xor
fistl
mov
cltd
mov
lds
test
fadds
mov
fwait
mov
test
add
call
aam
xor
mov
push
test
dec
adc
cmpsl
push
cmpsl
add
xor
jg
shll
pop
or
push
js
test
mov
lods
adc
daa
mov
fs
mov
lcall
incl
outsl
jno
jns
into
jbe
repz
popf
das
or
repz
stos
cmp
dec
xchg
sub
push
mov
jg
shlb
jp
aad
shrb
cmpl
sbb
dec
sub
xchg
aam
add
call
sub
adc
fisttps
ret
cmp
scas
mov
data16
pop
stos
cbtw
dec
xchg
loope
cmp
fistl
test
cmp
xchg
and
dec
add
and
sbb
inc
adc
arpl
xchg
stos
xchg
inc
mov
and
cli
push
adc
xchg
stc
loopne
sub
inc
cwtl
mov
cmp
jb
sbbb
jb
jl
dec
mov
lds
mov
dec
outsb
xchg
dec
pop
push
push
outsl
inc
push
lcall
pop
pop
jle
add
call
fmull
out
sbb
mov
mov
push
mov
scas
dec
xchg
cmp
mov
mov
out
push
or
int
push
lea
add
pop
dec
adc
dec
out
dec
add
sbb
lcall
mov
add
mov
adc
push
sti
pop
push
sbb
stc
adcb
dec
pop
or
lcall
adc
out
outsb
sbb
ljmp
dec
pushf
mov
jp
ret
dec
add
call
mov
inc
cwtl
sbb
mov
inc
dec
mov
mov
sub
cmp
je
dec
fld1
push
imul
xorb
jb
xchg
test
push
pop
push
xchg
cmp
push
fldcw
sbb
xor
and
pop
mov
gs
dec
movsb
jnp
push
cmp
jbe
inc
insl
fucom
adc
mov
mov
sbb
mov
xchg
xchg
es
cmp
adc
inc
or
out
add
insl
js
adc
add
call
aad
push
leave
push
mov
lods
out
addb
test
dec
jg
jns
sbb
iret
out
mov
push
and
xchg
dec
push
push
lea
mov
sahf
in
fcoml
xchg
add
dec
insl
lcall
fists
push
in
or
int
loopne
mov
and
and
adc
inc
lds
dec
test
push
cmc
lret
pop
and
in
xchg
pushf
xor
add
cwtl
mov
add
call
xchg
adc
fsts
push
mov
lds
adc
sub
scas
mov
shl
dec
icebp
mov
inc
xchg
ret
loopne
pop
lcall
ds
loope
jno
test
mov
icebp
in
fisubrs
leave
mov
cmp
inc
or
mov
or
enter
or
rep
fldcw
in
jns
cld
add
xor
pop
test
sbb
mov
mov
aam
mov
call
mov
jg
ret
xlat
inc
repz
and
ss
cli
mov
std
mov
out
adc
jecxz
push
jae
sbb
push
pushf
xchg
outsl
jg
inc
add
jle
sub
push
mov
push
int
and
pop
and
repnz
rorl
pop
add
scas
dec
int
daa
mov
lea
cmpsb
sub
cmp
xor
outsl
jmp
sbb
or
scas
inc
cmpsl
adc
shrl
add
call
imul
gs
adc
outsb
mov
mov
aas
xchg
mov
fstpt
aam
insb
xor
or
aas
stos
ret
cmc
push
stc
ret
pop
push
scas
push
out
std
clc
rcll
dec
mov
adc
sbb
movsl
int3
cmp
dec
aaa
addr16
and
dec
inc
into
push
cmp
fidivl
and
lret
clc
sbb
push
pop
idivb
cmc
jnp
scas
lret
lahf
scas
insl
in
scas
xchg
or
adc
mov
inc
lahf
push
sub
add
call
xchg
mov
cmp
les
in
adc
inc
dec
mov
and
or
insl
push
imul
in
jl
and
out
mov
push
fimull
loopne
cli
cld
mov
jbe
aas
jecxz
mov
xchg
loop
inc
int3
inc
ljmp
fnstenv
bound
sarl
cwtl
das
xchg
mov
push
cli
cmpsl
jp
stos
jp
gs
mov
mov
pop
test
inc
fidivs
and
sbb
xchg
and
or
add
call
mov
outsl
adc
js
pop
cs
inc
add
imul
int
sub
aaa
sub
pop
sbb
repz
jae
add
loopne
pop
adc
out
inc
add
pop
lods
inc
mov
sbb
sti
shl
mov
es
test
clc
xlat
shl
pop
push
psubq
dec
mov
sbb
sub
push
inc
pushf
gs
push
xchg
stos
fidivrl
repnz
xchg
sarl
inc
jb
lret
cs
lods
and
call
das
lret
mov
or
mov
imul
dec
test
repz
jl
es
hlt
inc
mov
mov
out
push
mov
mov
fimull
nop
sbb
test
push
sub
push
into
add
inc
xchg
in
mov
test
ds
mov
iret
push
push
pop
test
test
push
lock
pop
or
mov
jge
push
add
int
inc
and
xchg
add
call
cwtl
or
test
xor
xchg
and
mov
sub
sub
inc
rcrl
lret
xor
mov
outsl
imul
and
add
mov
mov
xchg
push
inc
jnp
inc
cmp
mov
cmpsl
popf
push
mov
inc
scas
adc
int3
add
mov
int3
icebp
scas
popa
in
push
adc
loop
mov
in
rcr
in
fcomp
aas
push
jge
movsb
in
jae
mov
ja
in
test
out
cmp
or
dec
or
mov
in
les
call
push
out
cmc
lcall
ljmp
aam
mov
pop
inc
push
loope
cmp
jmp
movsl
aas
jne
push
aam
add
loop
inc
push
jnp
adc
stos
cmp
inc
orl
rolb
rcr
mov
or
pop
mov
jb
bound
inc
mov
lret
pusha
jbe
sbb
jo
into
arpl
inc
leave
inc
sahf
mov
cmpsb
stos
xchg
sub
shlb
mov
bound
add
call
mov
xor
std
dec
jo
aad
mov
fstl
push
inc
jl
and
inc
cmp
popa
imul
xchg
sbb
adc
enter
add
sbb
lret
pusha
mov
jmp
out
jl
pop
sbb
int3
sbb
push
shlb
pop
push
xchg
pop
cmp
xor
std
test
or
mov
mov
cld
sbb
xor
stos
dec
push
cli
jp
xor
xorl
sbb
mov
pop
adc
fnstcw
call
inc
out
pop
ficompl
sub
or
testb
cmpsl
dec
lds
xchg
mov
aad
cmp
loope
pop
mov
int
shrl
idiv
mov
ja
add
add
xor
add
mov
sbb
ffree
inc
mov
nop
xor
and
stc
sbb
dec
cs
push
int
test
pop
imul
xchg
pop
cmc
shll
dec
cmp
xchg
mulb
mov
cld
into
jmp
add
call
je
mov
stos
repz
popa
jo
xchg
xchg
out
dec
ljmp
paddsb
lds
xchg
call
adc
add
sub
xchg
push
mov
sub
mov
aam
xor
cltd
or
push
mov
ret
outsl
sub
push
out
jo
roll
adc
mov
inc
cmp
out
sti
pop
sub
jnp
inc
rclb
addr16
push
popa
jle
test
push
sub
rcr
or
add
call
inc
and
in
sub
sti
into
push
mov
and
cmpsl
adc
scas
or
jne
sub
mov
hlt
push
aam
cltd
push
adc
test
xchg
xor
mov
dec
lcall
jecxz
addl
test
shl
dec
adc
or
fidivs
mov
or
faddl
nop
pop
xchg
sbb
fisttpl
xor
and
sub
or
mov
pop
lcall
adc
mov
jp
push
mov
sub
add
call
cld
test
jge
adc
jge
in
lahf
lods
mov
faddp
stos
pusha
lds
sub
in
cmpl
icebp
mov
xlat
out
or
cmp
push
xchg
inc
jecxz
adc
xor
jge
xchg
mov
mov
mov
in
popa
ds
mov
mov
xor
push
out
xchg
cmp
jb
and
nop
dec
imul
inc
push
mov
shlb
je
in
mov
adc
aad
aas
fdivrs
add
call
gs
inc
insb
lock
mov
push
push
jnp
jbe
add
inc
test
arpl
fadd
cmp
adc
lret
sbb
dec
inc
insb
push
mov
xor
data16
js
xchg
mov
jne
and
pusha
sub
or
pop
push
nop
outsb
repz
mov
popf
sub
aam
or
inc
push
popf
or
int3
sahf
imul
xor
xchg
cli
repz
test
mov
xor
lret
add
call
fsubl
mov
mov
sarb
cmp
ja
std
jno
xor
std
sbb
pop
dec
insb
xlat
adc
ss
fs
sub
stos
adc
and
push
fstpt
pop
add
das
cmp
mov
sahf
pop
pop
adc
push
iret
outsb
dec
test
or
mov
cmovo
mov
adc
cmp
add
rcr
subl
cli
jne
pop
into
call
call
add
cmpsb
nop
test
adc
xchg
inc
jge
push
push
stc
cmp
int
out
xchg
cmp
das
and
outsb
sti
mov
xchg
test
mov
adc
sub
stos
sbb
jmp
inc
push
movsb
call
lods
into
push
insb
in
xchg
push
cmc
cmp
int3
call
call
inc
loopne
fcompl
dec
mov
mov
arpl
repnz
shr
inc
xchg
fwait
xor
add
call
jo
mov
xchg
or
loopne
pop
jno
gs
mov
push
insb
push
adc
sbb
adc
push
adc
fsubs
ss
lea
stc
push
pop
stc
ljmp
add
les
mov
cld
jns
dec
dec
scas
testl
fs
ss
sbb
neg
jb
xlat
sbb
cmp
outsl
hlt
jb
mov
xlat
adc
and
or
xor
adc
jne
push
shll
inc
inc
add
call
sub
mov
addr16
aad
jp
mov
mov
cmp
adc
lea
sub
and
mov
das
pop
fists
jno
movsl
arpl
lods
add
add
pop
imul
and
mov
std
dec
std
sbb
popf
movsl
fwait
cmp
cmc
pusha
out
aas
mov
adc
sbb
xchg
mov
jle
push
xchg
jne
faddl
cmp
fwait
cwtl
loop
test
clc
add
call
xlat
imul
andl
cld
mov
xchg
push
bound
jp
or
lret
inc
pop
and
daa
and
xchg
push
mov
int3
cmp
mov
inc
nop
and
mov
jb
cwtl
pop
or
cmp
sbb
cmc
mull
loopne
int
cmpsl
fs
fwait
bound
ja
mov
imul
adc
ret
cld
mov
add
pushf
ds
orl
jne
push
pusha
pxor
pushf
into
inc
std
rclb
call
arpl
lods
scas
ret
lret
jbe
iret
cmp
popf
stos
xchg
mov
loope
test
cmp
cmp
or
loop
int3
imul
jge
jbe
and
sahf
in
js
inc
das
mov
lock
ret
mov
fwait
adc
into
unpcklps
ret
les
sbb
std
add
lods
lods
repnz
repz
mov
cmp
sub
aam
inc
ret
incl
ret
stc
dec
add
mov
pusha
sbbb
or
add
call
inc
push
notl
push
fcoms
jle
aaa
test
lret
xor
pop
jl
fldt
movsb
ret
popf
sbb
dec
xchg
cmpsl
mov
in
sub
shr
sub
lds
scas
sub
xor
xor
xchg
mov
fwait
add
stc
and
in
or
jl
daa
es
test
inc
add
inc
hlt
leave
dec
xchg
test
mov
sbb
inc
cmp
sub
mov
dec
push
xor
aam
into
mov
add
call
jb
movsl
enter
div
frstor
fs
xchg
and
lods
push
addr16
into
pop
jns
or
orb
aam
and
adc
fs
jbe
xchg
rcrb
repz
test
rorb
jp
jg
fcoml
dec
sbb
dec
inc
sti
sar
in
int3
cli
cwtl
rcl
add
mov
popa
cli
add
push
inc
test
scas
std
inc
ret
fnstcw
decb
jl
cwtl
test
xchg
mov
lret
out
xor
lods
jbe
fisttps
sbb
add
call
jno
dec
je
lret
xor
add
cli
je
cmpsb
out
inc
push
imul
pop
mov
lock
pusha
imul
filds
sbb
cmp
mov
in
xchg
fcomps
mov
pop
pusha
jl
adc
dec
fs
mov
cmpsb
pop
inc
cmpsl
out
adc
ficompl
push
jecxz
addl
andl
and
mov
loopne
add
ljmp
cmp
mov
out
adc
call
popf
fadds
cmpsl
dec
jno
jmp
lcall
pop
fcoml
adc
sub
scas
mov
or
and
xchg
in
sarb
dec
add
int
pop
leave
adc
lcall
and
leave
cmpsl
out
mov
mov
mov
xor
ret
rorb
sti
aaa
jge
test
cmp
hlt
imul
inc
data16
rorl
mov
or
popf
into
sarl
mov
cld
xor
mov
inc
mov
adc
add
call
jmp
popa
adcl
mov
mov
add
comiss
jmp
int
lahf
test
out
in
pop
and
add
sbb
in
xchg
insl
mov
negb
repz
jge
adc
mov
cmp
das
in
imul
pop
ss
inc
pop
scas
cltd
addr16
fdiv
jl
bound
mov
push
ljmp
shl
mov
adcb
mov
cmpb
dec
mov
cmp
add
call
outsl
scas
repnz
scas
ret
imul
jno
lea
sub
push
jle
jle
addb
icebp
and
mov
daa
cmpsb
inc
repnz
jl
sti
cmp
xchg
ret
popa
repnz
fdivs
out
lahf
jbe
add
cmpsl
sbb
xchg
or
add
fcmovnb
es
les
pop
add
add
fs
cmp
ljmp
sahf
mov
add
mov
pop
imul
outsb
xchg
xor
loop
inc
mov
jg
jle
fadd
and
in
insl
add
call
shll
dec
and
adc
loope
mov
ret
test
mov
sbb
fwait
ljmp
stos
out
ljmp
rolb
fwait
scas
xchg
sti
xchg
sbb
jge
ret
outsl
inc
daa
push
push
mov
push
sbb
std
mov
sti
iret
jmp
push
mov
out
int3
sub
dec
lcall
int3
icebp
pushf
dec
dec
cmp
lds
cld
loop
mov
sub
mov
inc
in
add
call
fcomi
or
sbbb
sbb
and
insl
jp
fidivrs
xor
clc
sub
mov
ja
jo
and
push
sub
icebp
das
enter
push
ljmp
ret
jg
dec
xor
jg
mov
sub
add
sbb
cmp
lods
faddl
bound
add
cmc
sub
movsl
cmp
push
fnsave
popf
push
cmp
inc
jns
pop
add
mov
aam
mov
add
call
jno
out
fisttps
rorl
or
js
fcomps
jl
jo
sub
shlb
out
pop
xchg
push
dec
mov
bound
ljmp
sbb
and
mov
out
das
daa
cmc
stc
outsl
push
imul
repz
push
inc
mov
daa
stos
stos
mov
pop
xchg
mov
or
scas
cli
sbb
xor
and
inc
ret
mov
int3
push
mov
add
call
enter
pop
jb
mov
cld
fisubl
or
repnz
or
ljmp
push
mov
cmp
cltd
xchg
push
inc
sub
jecxz,pn
fimuls
aam
ret
jmp
adc
mov
dec
fnstsw
repnz
xchg
jmp
dec
xchg
imul
out
xor
bnd
adc
arpl
jg
push
sar
std
sub
out
xor
outsb
out
jno
loopne
jmp
sub
idivl
mov
add
call
inc
push
jle
xchg
test
icebp
adc
mov
stc
gs
cmp
mov
mov
jmp
and
mov
inc
out
lret
lret
jmp
push
imul
testb
loopne
dec
out
fmull
mov
xchg
add
repz
mov
lds
arpl
dec
sub
fldl
mov
inc
push
stos
or
loope
xchg
imul
sahf
mov
jno
lcall
imul
outsb
and
imul
jge
jp
add
call
dec
cld
or
jle
jnp
mov
inc
pop
and
mov
jbe
data16
cld
cmp
stc
jl
cmpsb
int
rcl
fldl
fimuls
std
cwtl
xchg
insb
cmp
int3
adc
push
int3
mov
pop
jb
xorl
ss
sub
stos
sahf
lods
mov
add
xchg
inc
add
jns
mov
loope
mov
xor
xor
inc
jg
loopne
xchg
push
sarl
xor
xchg
ja
into
pop
xchg
aaa
loopne
aam
add
call
dec
fs
push
ret
push
sbb
std
cmpsl
jl
mov
movsl
or
mov
cld
add
dec
les
sub
xor
scas
mov
xchg
and
stc
jp
push
daa
mov
xor
push
push
jns
pop
push
inc
and
ret
leave
inc
lods
loope
fnstcw
push
stos
imul
jae
pop
push
sub
push
popf
js
mov
xor
hlt
lret
push
mov
jle
pop
cmp
pop
and
out
push
sahf
sti
jmp
pop
sub
cmp
mov
or
add
call
xchg
pop
fidivl
cwtl
jne
addr16
aas
mov
sahf
pop
dec
xchg
jne
add
dec
cmp
dec
rclb
add
mov
xchg
dec
daa
imul
inc
ss
imul
add
inc
xchg
sbb
popa
sub
in
incb
ret
repnz
mov
push
mov
or
mov
sbb
outsl
jg
jge
repz
sbbl
pop
popa
jo
sbb
ret
pop
mov
xor
inc
pop
lea
add
call
jbe
mov
cmpsb
push
in
subl
pop
neg
scas
bound
add
icebp
ds
popa
mov
mov
inc
xchg
push
push
mov
jmp
adc
pop
out
test
jmp
xchg
adc
adc
test
ja
insb
fstps
cmp
dec
jo
daa
push
add
cltd
pop
mov
sub
icebp
shlb
mov
mov
lds
jno
jnp
mov
dec
sub
inc
loopne
jl
outsl
xchg
popf
xor
mov
add
inc
cmp
call
jbe
xchg
test
cmpsb
movsb
cmc
mov
jp
lea
mov
lea
pushf
add
int
mov
mov
lods
add
dec
xchg
lea
xor
mov
sti
aas
decl
xchg
sbb
repz
aas
enter
and
xchg
sbb
inc
jmp
lock
push
int3
in
imul
iret
out
xor
mov
ret
cmpsl
loop
ds
enter
adc
mov
mov
inc
add
call
sub
xor
lock
push
inc
ljmp
mov
cld
pop
lds
rol
aam
int3
je
stos
lock
sbb
pop
push
mov
lahf
outsl
cmp
mov
subl
aas
mov
in
cmc
scas
cmc
jle
and
out
movsl
popa
mov
insl
shll
mov
push
outsl
inc
xor
nop
dec
addl
add
xchg
push
cld
leave
push
dec
pop
leave
je
lods
les
add
lcall
sahf
stos
pop
int
ret
lods
dec
in
mov
add
call
shlb
xchg
xor
test
pop
inc
imul
sbb
test
pop
hlt
or
ficompl
ljmp
xor
in
mov
gs
into
sbb
mov
hlt
aad
das
iret
mov
fs
push
insl
mov
push
imul
mov
pop
xchg
je
xor
push
jbe
pop
imul
pop
adc
and
insb
loop
mov
sbb
sbb
jge
lret
stos
or
xor
mov
and
sahf
or
mov
fiadds
add
call
lret
push
in
xchg
dec
push
gs
jno
shlb
inc
xchg
pop
xor
jmp
aad
std
jmp
sbb
pop
xchg
jnp
iretw
dec
mov
or
sbb
or
fcos
push
pop
jecxz
or
out
cmp
and
stc
push
aad
xchg
lea
mov
int
mov
or
mov
push
out
inc
cmpb
insb
xor
adc
rorl
dec
pop
dec
lock
ja
ret
xchg
enter
subb
xor
call
dec
sbbb
mov
mov
loopne
sub
fistl
mov
arpl
adc
leave
cmp
insl
or
sub
out
mov
je
fmull
push
push
in
das
fstpt
test
jnp
fcomp
xchg
dec
sbb
aam
and
push
js
jo
in
pop
dec
jecxz
js
cmp
sbb
aas
decl
mov
outsl
inc
jle
out
mov
push
jecxz
test
add
and
xchg
or
leave
pop
fprem
mov
xchg
dec
mov
add
call
gs
xchg
call
ret
jg
pop
add
sub
sahf
ds
mov
popa
mov
hlt
iret
or
sub
pop
in
inc
add
orb
pop
or
idivb
enter
pushf
sahf
jo
push
push
ja
xor
lahf
fwait
lock
sbb
idivl
pop
mov
mov
xor
imul
bound
pop
mov
or
push
leave
and
cs
xchg
sar
jae
imul
add
add
test
psubb
dec
or
sub
leave
xchg
inc
cwtl
mov
idiv
shl
pop
xor
fsubrs
mov
jbe
or
lret
mov
lret
jg
iret
cmp
fadd
inc
fsubrs
pop
sahf
push
test
aas
fcomps
mov
jo
xchg
pop
mov
lock
shrb
pop
stc
sub
mov
nop
scas
sbb
xchg
sbb
and
data16
call
movsb
popf
push
inc
dec
mov
sbb
imul
xlat
add
ficoms
adc
add
in
pop
sbb
mov
fsts
enter
and
and
stos
test
je
fidivl
jbe
imul
or
cwtl
or
dec
lret
mov
xchg
ss
fdivrs
mov
mov
gs
mov
mov
pop
outsl
mov
push
inc
orl
push
jae
fwait
test
pop
insl
push
lret
pushf
add
call
add
adc
je
test
sub
mov
cmp
loope
aaa
pusha
cli
mov
adc
ljmp
aaa
fwait
mov
jp
fidivs
shrb
push
fadds
mov
lret
add
js
mov
outsb
jecxz
xchg
mov
adc
je
cli
repnz
test
shlb
arpl
lock
std
inc
fadd
out
jae
sub
int
aad
sbb
sbb
gs
jb
ret
aas
addl
adc
inc
aad
add
call
in
addr16
or
push
pusha
sub
mov
ds
inc
iret
insb
xchg
or
push
ljmp
shr
cld
dec
jge
lods
aad
pop
pop
lods
test
xchg
pop
jne
lcall
xlat
and
fcmovbe
hlt
aaa
sbb
pop
rorb
mov
sub
sub
test
cmpsb
fnstcw
jbe
bound
insl
adc
shll
inc
cmp
xchg
mov
add
sub
nop
xor
fadd
cmp
add
call
stos
test
push
rclb
mov
inc
out
sub
in
cmp
lcall
adc
fbstp
mov
outsb
sub
std
cli
push
pop
rorl
xor
scas
push
stc
cli
sbb
pop
in
adc
fsubp
add
xor
mov
sub
inc
adc
inc
imul
mov
pop
cltd
scas
cltd
insl
into
dec
outsl
loope
push
lcall
pop
cli
sub
enter
dec
imul
and
xor
aam
dec
repnz
jl
xor
add
call
test
adc
cmp
sub
xor
dec
daa
cmc
jbe
test
nop
or
cltd
sub
adc
test
sbb
cmp
hlt
jp
add
and
fnsave
aaa
mov
shrb
cmpsl
xchg
xor
dec
xor
mov
subl
clc
shll
add
jb
sbb
sbb
mov
adc
enter
adc
sub
mov
pop
pop
sub
add
call
push
pop
push
sbb
jge
sbb
or
aaa
daa
mov
fadd
cmpsb
test
call
movsl
pop
xor
cmpsb
cmp
pop
cmc
cmpsb
push
xor
pusha
dec
xchg
jle
push
and
or
testb
lods
push
adc
test
push
inc
mov
out
push
stos
stos
aaa
mov
dec
dec
pop
mov
outsl
sti
jns
fidivs
je
cmp
jne
je
jnp
xor
out
pushf
icebp
xchg
mov
call
push
loopne
fmuls
jne
ror
insl
ja
pop
lods
fucomi
jg
test
aaa
cmp
mov
mov
pop
or
push
xor
cmp
fidivl
adc
sub
mov
or
in
imulb
pop
shll
sub
bound
hlt
in
xor
xor
pop
dec
jb
dec
test
sbb
aam
adc
dec
and
cmpb
mov
shr
adc
and
mov
add
call
pop
sar
adc
filds
out
cmp
cmpsb
rcrl
lea
cwtl
or
pop
sbb
cmp
pop
loop
xlat
mov
ror
xor
pushf
and
mov
cmp
repnz
stos
popa
ret
fsub
jle
push
cmp
and
into
movb
gs
outsb
xor
rcrb
gs
xor
es
cmpsl
aad
push
subb
stos
jb
lahf
scas
xchg
in
xor
xchg
inc
cld
sahf
mov
rolb
fstps
mov
add
call
cmp
daa
mov
xor
out
jp
mov
movsl
pop
test
sub
sti
cwtl
jmp
and
jb
dec
sbb
mov
dec
inc
pushf
outsb
cld
mov
jae
aam
rcrl
test
mov
or
and
sub
cmp
loop
add
xchg
flds
mov
andb
jmp
mov
idivl
daa
or
out
adc
push
pop
rclb
or
out
sbb
add
call
mov
ljmp
adc
inc
xlat
sbb
cmp
fs
gs
and
inc
jns
xor
mov
cltd
cli
sub
in
fisttps
dec
dec
mov
mov
bound
enter
add
imul
xor
pop
aaa
aam
decl
test
and
cmpb
and
push
xchg
lea
insl
aas
and
jp
fucom
int
cmp
es
mov
mov
lret
inc
push
roll
add
call
sbb
adc
call
std
cli
sahf
jl
aas
pop
and
xor
mov
cs
enter
push
sbb
pop
add
lahf
repz
jmp
imul
push
sub
bound
push
je
das
movsl
das
push
add
xchg
jp
cs
or
pop
gs
popa
movsl
shlb
filds
jmp
in
xchg
cli
mov
shl
pop
sbb
in
mov
push
push
mov
call
sbb
add
mov
adc
std
icebp
orl
out
out
pop
mov
in
xchg
loopne
jp
lahf
dec
ljmp
insb
push
test
pop
cmp
es
cltd
ret
cli
fwait
adc
mov
push
inc
jo
cli
rcrl
add
mov
mov
or
xor
popa
jb
sbb
mov
cwtl
mov
xchg
or
pop
xlat
pop
or
mov
inc
cmp
repnz
xchg
stos
daa
clc
mov
cmp
push
mov
add
call
push
shr
xlat
xlat
movsl
dec
iret
dec
cmpsl
or
xchg
mov
push
stos
aam
mov
dec
dec
es
aas
and
jl
mov
movsl
xor
mov
jg
xor
pop
pop
mov
daa
jge
mov
lock
sub
sbb
sub
out
dec
sarb
gs
in
mov
push
adc
mov
sbb
mov
adc
or
jge
outsl
ja
ficompl
outsb
sub
jbe
nop
sarb
xchg
dec
cmp
call
test
mov
mov
mov
pop
add
lods
or
fucompp
in
cmp
aaa
ljmp
mov
and
cli
mov
sub
pop
or
ret
push
push
pop
insb
dec
push
in
mov
add
sbb
fmull
insl
test
ret
sarl
xchg
adc
fwait
imul
adcb
jl
mov
add
lods
stos
cmc
movsb
aaa
inc
test
out
mov
jae
mov
pop
pop
pop
add
call
into
push
mov
cmp
dec
push
or
mov
sbb
pop
mov
pop
test
mov
leave
or
dec
pop
cmp
inc
xlat
repnz
mov
inc
cmp
mov
xchg
mov
iret
cmp
push
out
jl,pn
dec
add
pop
dec
sahf
xchg
test
add
out
cli
jge
and
icebp
lahf
and
les
jle
jnp
jl
std
call
mov
jno
mov
push
fildll
add
call
jne
jb
sbb
daa
lock
pop
cmpsl
push
ss
shl
test
pop
inc
hlt
out
push
sub
xor
mov
int
adc
or
stos
imul
inc
mov
cmpsb
mov
inc
dec
scas
sbb
pop
je
test
dec
in
jne
push
mov
cmpsl
inc
sti
fwait
xchg
lds
iret
dec
add
xchg
sti
dec
jnp
inc
xchg
mov
test
mov
jle
adc
mov
shrl
xchg
xor
divl
loopne
dec
adc
retw
fstl
add
call
xor
lahf
scas
les
inc
lahf
clc
mov
cld
inc
or
test
sub
jle
out
mov
push
into
and
stos
sbb
je
push
dec
addr16
loop
sub
jle
add
dec
out
or
int3
mov
cwtl
aaa
repnz
mov
repnz
aaa
js
mov
ljmp
je
mov
es
es
pop
outsb
jecxz
ds
lods
adc
fwait
xor
inc
ret
mov
leave
mov
cmp
call
test
inc
dec
inc
pop
icebp
lret
mov
adc
out
cmp
mov
gs
scas
sbb
enter
xchg
push
hlt
xchg
pop
xlat
push
pop
pop
out
pop
push
loope
push
outsl
mov
mov
add
sub
in
add
cmp
outsb
gs
sbb
in
cmp
fwait
loope
movsl
mov
in
ss
stos
ds
ret
mov
ja
outsl
or
and
jb,pn
fsubp
adc
test
cmp
xor
call
add
inc
inc
test
divps
and
mov
adc
inc
aaa
mov
data16
ja
icebp
aam
adc
cmp
jmp
mov
inc
jno
sti
aas
das
push
outsl
or
jge
leave
pushf
mov
andb
roll
shlb
xchg
sub
pusha
and
aad
and
pop
cltd
arpl
fxam
mov
mov
xchg
add
shrl
outsb
push
and
or
adc
inc
test
pushf
push
and
mov
inc
dec
jg
out
into
clc
add
call
js
mov
daa
inc
add
lret
popf
cmp
or
inc
ror
sbb
leave
mov
out
push
push
xor
sub
addl
imul
rol
inc
inc
mov
repz
push
adc
mov
and
pop
cmc
jl
adc
pop
test
pushl
cmp
dec
mov
out
dec
icebp
std
mov
pop
push
hlt
nop
push
imul
lahf
popl
cmp
fisubrs
or
sub
push
xorl
or
in
leave
inc
cmp
loope
add
call
movsb
dec
in
fimuls
jl
sub
test
aas
cmp
lea
add
ret
xor
je
sub
mov
jno
push
fsubl
inc
mov
push
cmp
repnz
je
adc
enter
int
lods
mov
ljmp
cmp
dec
popf
or
jp
push
mov
sbb
daa
mov
or
mov
jg
jle
ret
cmpsl
and
dec
push
mov
fldl
add
call
dec
cmp
cltd
test
enter
mov
pop
jl
cmp
push
sbb
in
negb
pushf
dec
xchg
xor
add
cmp
jae
dec
jo
sarb
das
cs
popf
inc
mov
mov
aad
out
push
pop
jnp
lea
cmc
das
sub
mov
jbe
cmpsb
or
cmp
mov
jmp
sub
jae
iret
mov
rorl
cmp
loopne
dec
add
call
out
push
jecxz
push
les
fs
in
sbb
add
rcrb
jne
fnstsw
ds
hlt
sbb
dec
xchg
push
and
fcoms
add
cltd
xchg
in
or
add
cmpsb
jecxz
mov
dec
pop
sub
out
mov
pop
fwait
push
in
shll
loopne
lock
sub
jnp
inc
stos
loop
sub
mov
mov
push
jp
sahf
mov
inc
xlat
or
out
fsubs
xchg
adc
add
call
daa
mov
mov
scas
xor
sub
xor
adc
jl
pop
push
nop
xchg
fsts
mov
call
pop
insb
stos
mov
mov
lea
lds
mov
fyl2xp1
int3
mov
jb
out
test
inc
into
arpl
sti
je
cmp
frstor
enter
in
xchg
xor
repnz
stos
mov
inc
or
push
sub
mov
pop
inc
jae
push
xor
packuswb
or
iret
cwtl
jns
test
call
jo
ja
xchg
push
sahf
mov
xchg
cmp
push
mov
push
stc
xchg
jp
cmpsl
cmpsb
sub
mov
add
jae
mov
xchg
xchg
dec
xor
mov
lcall
shlb
push
xlat
cld
or
test
out
pop
xchg
ds
jbe
rcll
add
popf
scas
xor
jg
ja
and
add
movsl
sbb
xorb
push
cmp
cmc
pop
lods
push
stos
sbb
stos
scas
dec
je
xor
jbe
lahf
add
call
pusha
aaa
add
pop
xchg
lret
cmpsl
jmp
nop
pop
xchg
or
mov
int3
arpl
mov
jecxz
push
fsubrl
push
xor
or
push
movsb
arpl
loop
test
lcall
flds
cmp
xor
add
pop
std
bound
repnz
sub
mov
jecxz
adc
push
mov
cltd
cmp
cltd
cmpsl
arpl
pop
lcall
iret
pop
xchg
fimuls
push
adc
sbb
cmpsl
adc
pop
shll
add
call
mov
jle
les
push
maskmovq
xchg
outsl
mov
insb
cwtl
daa
xchg
mov
jge
jne
cmp
xorb
mov
stos
jno
popa
cs
inc
jp
xchg
pop
sahf
insb
xchg
repz
push
cmpsl
fwait
mov
jle
das
orb
cmc
fwait
aas
cld
dec
stc
repnz
popa
xor
mov
pop
inc
in
das
shl
xchg
repnz
pop
shl
out
xchg
ficoms
dec
xchg
hlt
aas
fistl
dec
jp
movl
call
pusha
pop
jl
xchg
sbb
pushf
sar
lock
testb
xchg
xor
test
orb
aam
mov
cmp
xlat
inc
xchg
adc
rolb
in
xor
sub
add
cmp
outsb
stc
inc
loop
in
sbb
repnz
aaa
xor
push
mov
in
push
push
inc
xor
subl
lahf
push
pushf
dec
test
mov
shlb
jae
xor
ss
iret
mov
cmpsl
push
cli
jmp
sub
pop
dec
add
call
xlat
dec
sar
lods
push
pop
inc
repnz
pop
or
je
inc
jp
adc
mov
movsb
add
clc
pop
inc
cmp
loope
xchg
es
mov
mov
add
and
and
push
outsl
daa
push
andl
dec
push
shlb
rorb
out
jne
jmp
jae
xchg
xchg
test
push
cmpsl
in
push
stos
sti
adc
sub
jp
movl
xchg
or
cmp
insl
addr16
mov
jns
shll
jmp
call
pop
aam
cmp
xor
push
outsb
test
xlat
jbe
push
cmp
cwtl
test
outsl
loopne
insl
pop
nop
lret
jno
dec
or
mov
popa
roll
mov
icebp
xchg
rcll
lods
pop
mov
test
cmpsl
mov
mov
sub
mov
xchg
cli
inc
sbb
out
ja
sbb
dec
mov
clc
fadd
fs
dec
shrl
dec
jl
inc
sbb
pushf
ja
pop
inc
es
push
mov
fdivrl
dec
testl
call
outsb
push
xchg
mov
mov
mov
adc
incl
mov
or
or
sti
fwait
and
test
arpl
sub
int3
les
out
cmp
cmp
inc
subb
popa
sahf
xchg
inc
sbb
arpl
push
sbb
xor
bswap
jle
jmp
sbb
mov
or
jo
push
xchg
mov
sub
sbb
enter
popf
push
sub
ja
sbb
sahf
sbb
scas
scas
notl
cmpsl
add
inc
test
call
sahf
jg
inc
fsubs
mov
leave
push
mov
out
in
fwait
lock
add
out
jmp
insl
sbb
mov
arpl
out
sub
mov
sub
pop
repnz
fwait
adc
je
sbb
jg
popa
adc
ret
jno
jnp
push
mov
sub
fprem1
pop
ds
cmpsb
sbbl
inc
sub
pop
pop
sbb
sti
jae
xchg
sbb
sub
xlat
ja
and
xor
repz
loope
jmp
data16
call
or
fbstp
movsl
adcl
adc
mov
xor
lock
sbb
leave
mov
push
mov
fwait
or
inc
ret
push
mov
lcall
jmp
cmp
mov
cmc
xor
adc
mov
pop
aam
ret
jno
xchg
push
adc
enter
cltd
andl
fsincos
pop
rcll
movsl
popf
push
xor
call
in
cmpsl
enter
xchg
mov
in
xchg
int3
add
call
dec
sub
jo
cmp
test
inc
lea
mov
dec
adc
add
inc
cwtl
and
insb
push
add
lret
fcmovb
cld
inc
cltd
cmpsl
outsl
or
jle
cmp
sub
insl
movsb
mov
sbb
push
lods
mov
xor
mov
push
jp
rorb
cmp
in
push
aam
add
rorl
ja
lret
jge
ja
fstps
or
jge
nop
imul
or
sub
test
add
call
inc
pop
sbb
int3
mov
insl
cmpsl
in
das
adc
push
in
shll
cld
dec
xor
rcll
mov
and
out
mov
dec
jmp
mov
xchg
or
add
int
jno
out
int
enter
pop
and
cmp
jo
jnp
mov
sarl
push
cli
jno
add
or
popa
cmpsl
fwait
or
enter
and
sbb
lcall
push
jecxz
jnp
mov
je
out
xchg
lret
shrl
mov
call
push
xor
ds
das
inc
mov
das
mov
inc
pop
shll
shll
mov
or
mov
stos
ja
pop
in
xchg
adc
jl
dec
out
mov
ss
xchg
sub
fdivrp
sub
push
js
sub
mov
fwait
call
xor
ret
insl
inc
inc
loop
lock
mov
outsl
push
mov
cmp
pop
inc
jge
jge
push
fdivrp
divl
mov
cmp
add
call
imulb
lret
out
stos
aad
scas
ja
pop
pop
fs
cmp
jns
mov
mov
xchg
ret
or
mull
fstl
movsb
inc
fcom
push
cmp
xchg
nop
inc
xor
orl
lock
sub
inc
rorl
xlat
in
cld
inc
in
push
shl
dec
dec
popa
pop
xchg
mov
fisubs
pop
testl
popf
and
mov
pop
fidivl
mov
pop
jmp
jmp
fucompp
into
repnz
repz
xor
fcomp
add
call
adc
jbe
cmp
leave
jp
mov
je
into
out
xchg
or
pop
xor
inc
add
sub
mov
in
orl
out
sahf
int
cmp
inc
pop
test
adc
mov
mov
scas
xchg
xchg
out
pop
xor
dec
pop
shlb
adc
sti
out
loopne
push
add
mov
inc
xchg
mov
sub
mov
loop
add
push
rcrb
jmp
add
test
sbb
sbb
add
call
mov
popf
sti
pop
pop
or
popa
inc
dec
mov
pop
aad
xor
or
test
in
mov
ret
mov
mov
add
imul
jno
push
and
mov
shlb
roll
andl
mov
jae
push
pop
xchg
or
push
jns
dec
ss
mov
push
ljmp
push
pop
addr16
outsb
jb
sti
and
call
pop
dec
lea
dec
adc
dec
xchg
jecxz
in
mov
or
cmp
test
xchg
push
mov
scas
lret
shrb
inc
lret
push
jae
enter
xchg
push
mov
push
pusha
in
push
ss
outsl
sbb
rcll
das
sbb
dec
lock
pop
cmc
adc
sbb
jns
cmp
pop
jmp
jl
lea
mov
scas
repnz
lods
scas
loope
jno
cmp
mov
shl
or
flds
shlb
adc
and
mov
add
call
cwtl
and
test
lds
dec
mov
repz
lret
mov
es
daa
jo
xchg
jle
jae
in
loop
mov
mov
mov
cmpsl
or
jmp
pusha
scas
jmp
jne
pop
out
pop
dec
jnp
fdivl
and
mov
out
sbb
push
in
faddp
jecxz
sub
ja
test
lea
out
sub
sahf
icebp
rcrb
cld
sbb
rorb
xlat
pop
adc
mov
fistl
add
call
jg
cwtl
imul
cmp
or
jno
xchg
loope
mov
inc
adc
pop
mov
imul
push
add
dec
bound
push
mull
push
out
inc
in
in
inc
mov
fsubl
lock
ret
loopne
stos
out
stc
das
out
cwtl
test
xchg
arpl
mull
xchg
and
push
div
add
test
add
jo
cli
negl
xchg
popl
movsb
jmp
jmp
adc
jmp
call
aaa
popa
adc
jge
pop
pusha
loopne
fildl
and
push
mov
in
sub
movsl
data16
cwtl
fists
int3
mov
pop
mov
xor
repz
inc
mov
fucomi
inc
clc
jo
pop
ds
jnp
mov
dec
lret
aaa
mov
dec
mov
mov
cmp
scas
cmp
sbb
sub
sbb
xorb
adc
fwait
xor
lmsw
xlat
xlat
gs
add
call
push
ret
mov
out
mov
dec
dec
jmp
scas
loop
push
in
pusha
mov
push
repnz
mov
push
aad
xchg
cli
mov
repnz
push
fmulp
aad
xor
push
sub
xchg
rolb
inc
cmp
loop
sahf
je
add
push
cmp
out
lea
fwait
pop
jb
add
sbb
mov
add
jle
int
movsb
std
cmpsb
or
rcr
add
shll
cmp
dec
fildll
sbb
add
add
call
leave
aas
xor
out
movsb
out
xor
test
pop
jle
fst
popf
adc
pop
aad
cmp
addr16
rcrl
xor
jbe
in
incl
sarb
pushl
xor
cwtl
enter
out
cltd
jbe
mov
xor
cltd
out
daa
fs
ret
flds
mov
aas
dec
mov
jns
mov
add
rclb
aaa
es
sbb
sub
std
jle
dec
notb
push
mov
mov
xor
sbb
ret
imul
add
call
arpl
push
pop
scas
xor
test
inc
adc
fxam
cmp
xchg
xor
sbbb
xlat
cwtl
iret
lds
mov
test
pop
hlt
adc
inc
std
mov
shl
lret
fwait
cmc
add
sbb
mov
pop
cmc
cmp
stos
push
pop
mov
add
mov
mov
ret
mov
aad
jg
insb
push
cld
jb
cmc
ret
adc
test
cmp
xchg
pop
cmp
cmp
dec
add
repnz
repz
and
aad
inc
push
sahf
pop
les
call
push
scas
jb
pop
lcall
xchg
sbbb
enter
mov
xchg
cwtl
adc
cli
cltd
mull
test
ret
sbb
jbe
xchg
mov
daa
pop
sbb
cmp
inc
loope
xchg
lea
jecxz
xchg
fidivrl
sti
test
pushf
xor
cmp
lahf
cmp
bswap
mov
cmc
lods
xor
cmpsl
lret
xorb
mov
outsl
mov
inc
mov
cmc
rcrb
sbb
adc
sbb
repz
into
add
call
shrb
clc
xor
sub
insl
fildll
mov
xor
or
sarl
dec
adc
lods
add
das
shll
idiv
pop
icebp
repz
lret
fcompl
jle
ret
outsb
dec
or
aas
jl
outsl
push
xchg
mov
sbb
inc
pusha
dec
sub
jle
xchg
rol
or
in
incl
adc
int3
ds
xchg
in
mov
and
push
stos
jmp
jns
movsl
sbb
in
cmpsl
xor
inc
addr16
xor
lds
call
mov
test
lods
imul
adc
test
ficoml
imul
stos
and
ljmp
aaa
mov
cmpsb
xchg
adc
xor
xor
jl
inc
jo
add
and
fimull
sbb
aaa
cmp
push
lods
xchg
mov
and
and
pop
push
pop
out
dec
cmc
addr16
insb
addr16
icebp
movsb
sbb
je
lret
out
pop
loop
mov
ffree
pop
cmp
push
cmpsl
mov
cmpsl
imul
call
sbb
add
add
jge
imull
jbe
rol
movsl
pop
rcll
in
xchg
int
add
leave
mov
jmp
cli
jl
cltd
jo
inc
and
inc
out
pop
xchg
fidivrl
adc
push
xor
mov
idiv
jnp
xchg
and
scas
iret
movsl
popa
push
bound
xchg
sub
pusha
mov
mov
out
cmp
xor
sub
push
test
es
mov
pop
jge
inc
xchg
cmp
mov
fcoms
call
inc
push
xchg
rcll
adc
shll
fldl
xchg
cmp
rep
stos
les
mov
xchg
in
arpl
movsl
mov
inc
test
xor
xor
xchg
inc
inc
insl
icebp
cld
cmp
adc
mov
ja
and
adc
lret
idivb
jecxz
cmpsl
mov
sub
or
xor
cmpsl
mov
mov
push
in
sahf
add
addr16
mov
fldcw
sbb
xor
adc
scas
dec
cwtl
mov
sub
add
call
clc
insl
mov
bound
fisttps
mov
add
mov
mov
mov
and
mov
or
jg
or
xchg
fmuls
dec
adc
xchg
ret
mov
adc
jl
xchg
push
sarl
push
adc
sti
mov
ret
sub
cmpsb
push
sub
adc
iret
insl
sbb
jne
inc
lcall
inc
imul
sub
lock
data16
sub
fisubrl
iret
lock
xchg
sub
lock
call
mov
bound
mov
jg
and
mov
cwtl
rorl
adc
add
enter
cmpsb
loopne
outsb
jmp
pop
pop
mov
add
mov
pushl
in
popa
pusha
pop
jmp
out
sub
xor
sub
test
xchg
mov
call
mov
mov
xchg
and
fwait
int
arpl
lret
jb
mov
jnp
repnz
lret
jb
jno
movsb
pop
enter
aad
adc
or
aad
stos
div
loope
add
call
inc
ljmp
rcll
iret
sub
iret
aam
test
test
and
pop
mov
movsl
jnp
or
jg
aaa
pop
and
rcll
out
mov
mov
fdivrs
mov
push
cmp
add
iret
in
dec
cld
push
mov
popa
int
lcall
and
inc
push
xor
mov
push
cmc
cmpsb
in
add
cs
sbb
shl
adcl
sbb
call
ja
xlat
mov
inc
or
leave
scas
aaa
incb
inc
lock
rol
xchg
cmpsb
cli
cwtl
sbb
je
fimull
enter
dec
jmp
mov
fdivs
lahf
or
xor
inc
js,pn
jmp
call
mov
push
mov
not
mov
mov
mov
add
adc
jno
cmp
sahf
outsl
lds
cld
pop
push
add
dec
stc
fsubp
stos
sub
adc
mov
fistl
push
out
jle
scas
mov
pop
adc
add
call
pop
jne
and
repz
imul
mov
inc
inc
stc
daa
push
jge
jmp
sbb
test
mov
shll
clc
daa
jns
leave
lods
outsl
cmp
insl
push
or
jle
inc
cmp
dec
inc
mov
sbb
cli
call
mov
cld
xor
sub
test
mov
or
insl
insb
icebp
scas
push
aad
and
adc
notb
push
aas
bound
add
inc
push
ss
std
add
call
dec
xchg
xlat
jge
or
mov
cmp
xor
mov
inc
mov
xchg
in
or
or
xchg
sahf
push
out
mov
sbb
enter
dec
push
stc
aad
test
call
movsb
fsubl
outsl
sti
add
outsl
jl
insb
imul
scas
mov
cmpsb
lret
inc
sbb
xchg
jns
outsl
cs
cmp
adc
rorb
dec
mov
mov
mov
and
test
cmp
cmp
add
call
xchg
fwait
xchg
cmpsb
push
sbb
pop
dec
cmc
sbb
mov
push
ror
rolb
stos
dec
cmp
sub
and
in
jno
add
lcall
pop
push
popa
sbb
fs
push
dec
aad
xlat
xchg
fmull
jl
iret
mov
sbb
les
push
repz
add
and
pop
roll
mov
mov
fs
inc
adc
cli
lods
cmp
fmull
or
in
and
sub
nop
xor
nop
and
dec
jge
call
stos
ja
addl
call
jle
popf
shl
mov
inc
rclb
scas
xor
lret
adc
and
popa
jno
push
sub
jp
add
clc
lcall
addr16
cli
repnz
sahf
mov
lds
jno
xchg
pop
movsb
push
out
cwtl
sbbl
inc
pop
fidivs
jl
jno
and
jle
dec
sbb
mov
inc
ret
pop
inc
rolb
jb
mov
dec
stos
cmp
cmpsb
push
xlat
sbbl
push
xchg
push
call
mov
sub
popa
add
daa
imul
mov
gs
mov
cmpsl
cmp
imul
into
add
lret
leave
jl
xchg
jecxz
inc
scas
data16
divl
loope
mov
lods
stos
or
xor
les
das
push
popa
popa
bound
decl
testl
inc
push
and
xchg
test
out
ljmp
cwtl
insb
push
dec
mov
push
sub
mov
xchg
xlat
sbb
aas
pop
inc
inc
add
call
cmp
lds
mov
imul
aas
aas
sub
sti
les
cli
xorl
shlb
push
sub
or
ja
sub
ret
sub
adc
lcall
jbe
add
pop
out
outsl
inc
xchg
push
sbb
popa
test
mov
pop
inc
sbb
mov
movsl
andb
add
cmp
dec
les
es
cmp
lock
ret
xchg
mov
cmp
pushf
or
mov
push
dec
add
call
inc
lcall
jge
sti
mov
cltd
sbb
int
dec
inc
gs
loop
clc
int3
ret
jne
lock
adcl
imul
cmc
rcl
sbb
inc
out
lahf
mov
push
add
aas
iret
daa
sbb
dec
xor
andb
imul
daa
sub
loopne
pop
sbb
enter
movsl
into
mov
cmp
mov
ds
pop
push
cmp
fs
mov
fwait
cmp
cld
ljmp
cmp
sahf
add
call
mov
sbb
movsb
out
stos
inc
and
xor
movl
mov
lret
adc
sti
mov
pop
mov
sbb
aaa
jno
neg
loop
movsb
pop
outsl
cmp
orl
pop
hlt
bound
cmp
xor
rcrb
sub
mov
das
inc
push
jle
inc
add
adcl
fisttpl
mov
jb
leave
and
sub
fcomp
int
shr
sub
push
fwait
jo
mulps
add
call
add
cmpsb
lea
jecxz
mov
and
xor
mov
dec
loopne
inc
pop
mov
in
mov
sbb
cmp
fs
out
cmp
out
mov
mov
clc
lret
mov
iret
cmovo
ja
cld
adc
lahf
mov
rorl
jno
jae
and
adc
je
and
daa
lret
jle
rclb
fildl
jecxz
out
mov
inc
pop
push
in
xchg
sub
mov
pop
pop
shr
cmp
mov
add
call
add
jp
sbb
xor
and
mov
inc
jns
negl
adc
or
push
into
mov
test
jno
xchg
leave
adc
shl
fs
int
cmp
cmpsl
repnz
mov
or
xchg
fdivl
xchg
test
or
add
sub
popf
dec
es
bound
and
jno
loopne
aad
xchg
shlb
cmp
xchg
pusha
adc
push
mov
bnd
mov
or
loope
inc
incb
add
call
add
popa
pushf
je
outsl
cmp
movsb
lds
fstpt
mov
cmp
inc
adc
fwait
lods
ret
test
shlb
enter
insb
mov
ror
repnz
push
mov
nop
insl
cmpsw
into
sbb
rorl
pop
frstor
jnp
add
adc
jnp
inc
aas
xlat
cld
loope
cmpsb
dec
inc
and
xor
inc
sbb
inc
leave
std
out
int3
sub
gs
das
jmp
push
shlb
cmp
setb
flds
add
call
mov
mov
push
and
in
xchg
push
push
and
loop
arpl
xor
push
jl
pop
mov
cs
jo
inc
mov
jno
sbb
je
xorl
jg
test
das
bound
push
jmp
stos
sbb
dec
ds
push
ds
mov
mov
cmp
pop
jecxz
or
jne
mov
mov
sbbb
shl
push
inc
push
xor
ret
sub
bsr
and
cmpsl
and
sahf
sbb
sbb
in
jmp
add
call
xchg
fistl
mov
test
imul
iret
lods
inc
adc
pop
pop
lods
xorl
sub
movsl
stc
adc
pop
adc
adc
inc
in
imul
mov
mul
nop
jno
pop
jecxz
daa
sbb
js
mov
aam
mov
stc
cmp
repz
jg
mov
out
imul
out
addr16
mov
enter
inc
cmp
leave
adc
dec
push
pop
in
lcall
pusha
in
pusha
xor
jbe
xor
mov
add
call
stc
cmp
pusha
out
or
or
sbb
cwtl
add
daa
test
shlb
xchg
test
pop
xor
push
add
mov
mov
clc
dec
xchg
jp
mov
fsubrs
add
ljmp
or
int
addb
pop
add
xor
movl
mov
or
jp
mov
xchg
test
or
shrb
out
nop
push
test
add
call
and
mov
js
xchg
jnp
lahf
call
bound
nop
data16
es
imul
aas
adc
add
lock
dec
inc
pusha
cmp
cmc
cmp
dec
pop
ss
in
testb
cmp
js
push
cmc
in
loop
adc
xlat
jge
jge
mov
idivl
add
push
stos
cmp
push
aas
or
xchg
nop
fs
stos
pop
and
adc
in
ror
push
in
pop
mov
jp
add
call
movsl
add
leave
inc
in
push
dec
cmp
in
pop
ret
rcrb
ja
inc
out
fmull
cwtl
mov
ljmp
inc
inc
or
popa
mov
xor
sub
jae
mov
or
push
aad
add
aad
nop
push
xor
popf
fnstsw
jle
dec
jb
sbb
hlt
xlat
bnd
out
loopne
pusha
movsl
inc
test
sub
test
mov
insl
imul
sub
orl
popa
lret
stos
mov
jmp
dec
fwait
inc
shrb
add
call
sub
push
pop
enter
test
cmp
or
scas
push
js
xlat
mov
dec
dec
out
sbb
in
jp
jmp
inc
je
divb
mov
xchg
and
mov
out
or
mov
leave
cmc
xchg
xchg
sbb
shl
iret
dec
cmp
jno
aam
jno
inc
subb
aaa
dec
lret
lret
cmpsl
popf
cld
mov
mov
add
mov
xor
adcl
call
sbb
sbb
jno
lea
out
call
adc
and
mov
aaa
add
aaa
and
es
mov
xorl
mov
and
imul
es
mov
add
ja
sub
std
xchg
fisubs
jecxz
sbb
insb
add
jle
test
add
and
movsb
xor
xchg
fucom
lcall
cmp
mov
dec
jne
jmp
test
scas
push
cmp
test
xor
call
mov
jne
jnp
jae
lea
dec
push
rorb
enter
sub
nop
xchg
hlt
sbb
cld
fisttpl
jnp
popl
fstpl
cmp
fs
dec
jae
ja
in
dec
aam
dec
push
inc
sbb
repz
jl
jmp
roll
test
mov
nop
fcmove
adcl
js
inc
test
fsts
dec
call
dec
lock
cmp
stc
lcall
add
call
and
or
mov
jae
xlat
xor
out
rcrl
sbb
outsl
cmc
cli
scas
cmpsl
push
out
mov
xor
mov
jb
std
xchg
xchg
and
cltd
std
mov
add
or
push
jle
sbb
leave
dec
pushf
nop
in
mov
xor
pop
adc
fstpt
insl
call
icebp
pop
push
mov
popf
clc
arpl
mov
addl
sti
int3
xor
ljmp
ja
pop
sub
sbb
mov
mov
mov
add
call
bound
sub
jo
pushf
aad
sbb
out
adc
sahf
pop
stos
sbb
sarl
cld
xor
sub
mov
mov
adc
mov
xor
pop
pushf
std
test
aas
cmp
pop
lods
and
aas
sub
shrb
push
mov
ja
adc
dec
je
aaa
aam
dec
fsts
andb
sub
mov
out
popa
aam
test
imul
push
add
add
push
inc
and
xor
mov
jecxz
add
call
into
lods
xchg
mov
xchg
int3
std
popa
sbb
and
mov
mov
popa
in
and
mov
cmpsl
outsb
aaa
imul
adc
imulb
cld
jnp
pop
xor
shr
cltd
mov
dec
incl
and
push
cmp
xor
xor
jno
pop
movsb
cli
sub
xchg
jmp
fildll
sub
dec
fildll
jge
jbe
orb
stos
loopne
push
add
addr16
push
out
or
add
call
or
jmp
mov
shll
jo
loope
dec
lcall
push
call
push
push
iret
mov
mov
jmp
jne
call
dec
push
data16
ljmp
and
jae
or
sbb
sbb
movsl
xchg
and
loope
push
mov
push
mov
pop
and
sbb
xchg
mov
sbb
es
jno
arpl
inc
mov
sbb
cmp
shlb
insl
test
add
call
lcall
pushf
shll
mov
fcmovne
pop
cmc
adc
sub
ss
push
outsl
inc
daa
inc
or
xor
paddq
call
mov
sbb
icebp
and
call
out
cmp
addr16
into
xlat
dec
loop
mov
int
adc
or
adc
cld
int
shll
xor
lock
xor
movsb
sbb
cmp
pop
shlb
rclb
pop
call
mov
push
outsl
add
call
or
sbb
pop
push
scas
sar
sbb
push
imul
out
or
cwtl
jne
gs
mov
sub
pop
cmovne
pop
jo
jnp
out
inc
sub
lret
dec
sti
sbb
sub
jl
imul
xchg
enter
js
fcmovne
out
out
das
mov
add
sbb
xchg
js
jbe
mov
mov
lods
mov
cwtl
nop
cld
sbb
mov
add
xchg
mov
xchg
jno
lds
jb
ss
add
call
lea
jg
js
movsl
xchg
dec
xchg
push
insb
scas
sbb
adc
addr16
adc
adc
inc
pop
repz
out
add
in
and
push
mov
sub
int
dec
out
fwait
das
in
pop
dec
lods
fs
jle
mov
daa
lret
mov
fs
fldl
dec
iret
xchg
add
pop
fsub
pop
in
cmp
imul
lret
sbb
dec
push
pushf
test
mov
imul
stos
icebp
add
call
jae
ss
sti
sahf
shl
sbb
push
fstpt
push
pop
mov
loopne
mov
mov
adc
or
in
rorb
and
jno
sub
push
pop
rep
mov
or
mov
push
shll
inc
cmp
cs
stos
push
jns
daa
ret
jae
ds
push
aaa
repz
outsb
cmp
or
cmp
push
shlb
dec
fwait
sub
sahf
ljmp
test
sbb
mov
xchg
pop
dec
mov
xlat
ja
fadds
scas
add
call
nop
int3
inc
gs
jg
push
addr16
mov
arpl
push
js
adc
or
filds
jo
hlt
in
jne
gs
add
inc
xor
sub
dec
popf
xor
push
lret
lock
sub
lods
xor
mov
pextrw
inc
xchg
lods
pop
mov
invlpg
cmpsl
addr16
mov
mov
adc
sub
or
dec
stos
orb
inc
push
mov
dec
aam
rcl
mov
pop
js
mov
sbb
fsubl
jecxz
inc
cmc
inc
jne
mov
sti
pusha
out
add
call
dec
aaa
mov
push
adc
cmp
icebp
stc
add
jne
mov
punpcklbw
inc
adc
data16
sbb
repz
sub
jge
and
jae
mov
mov
pop
inc
lods
inc
cltd
pause
xchg
enter
fldl
ja
cmp
aad
adc
or
cld
jge
mov
xlat
rcr
sti
xchg
int3
out
mov
xchg
mov
addr16
subl
leave
sub
lock
pop
mov
je
pop
xlat
xchg
push
call
inc
lock
mov
ret
fs
xchg
jge
cmp
and
loopne
dec
pop
sti
lcall
addb
lods
adc
leave
pop
cmpsb
in
out
roll
pop
ds
and
mov
inc
pop
lret
rcr
jns
call
push
dec
push
xchg
cs
ret
pop
push
orps
mov
adc
add
pop
mov
push
ret
fiaddl
gs
sbb
xchg
or
jg
pop
mov
push
add
mov
add
call
adc
stc
movzbl
je
andb
out
mull
hlt
repnz
fsubs
adc
cmpl
lcall
sub
ljmp
call
or
imul
cli
lcall
popa
inc
adc
daa
inc
mov
cmp
insl
addr16
or
xor
test
mov
push
aas
push
xor
enter
pop
insb
lds
popa
int3
cmp
in
sbbb
jg
test
lock
loopne
rolb
inc
aaa
mov
dec
ja
add
call
add
pop
push
push
shlb
movsb
pop
xorps
cmp
shll
enter
repz
mov
mov
adc
cmp
fldt
cli
adc
insb
or
shlb
aad
jg
das
cwtl
xor
sub
loopne
push
mov
xor
in
adc
sbb
mov
jmp
pop
adc
test
jmp
in
push
dec
pop
xchg
fldt
mov
in
inc
rcr
xchg
js
test
daa
repz
mov
adc
mov
call
loopne
pop
cmp
xchg
std
mov
sub
data16
aaa
repnz
sarl
aad
pushf
rorl
mov
pusha
mov
jo
dec
stos
cwtl
push
cltd
ds
in
pop
pop
dec
jne
mov
mov
popf
sub
enter
add
js
jbe
test
cmpsl
xchg
outsb
pop
scas
daa
xchg
mov
cmc
mov
push
jnp
and
pop
ss
leave
pop
arpl
ret
in
and
jb
mov
imul
push
das
xor
sbb
and
add
call
xor
mov
inc
adc
cmpsl
pop
enter
xor
test
sbb
ret
in
inc
xor
cmp
subl
fldcw
ret
xor
gs
or
jno
dec
xchg
pop
aaa
or
mov
jne
or
mov
shlb
daa
out
adc
jb
loope
outsb
fistps
add
fsubrl
imul
lds
cli
xchg
jbe
sbb
test
int
add
call
cmp
xchg
aad
punpckhdq
sbb
out
or
or
jecxz
xchg
inc
cmpsl
sub
and
mov
outsl
cmp
stc
pop
dec
and
cmp
push
loope
iret
inc
inc
mov
pop
mov
test
imul
fisttpll
loope
sbb
movsb
mov
imul
sbb
cmp
adc
cltd
clc
test
jo
mov
cld
push
dec
push
sub
and
mov
mov
and
fcmovne
pop
rcrb
outsl
mov
call
insl
dec
cmp
sub
pusha
lock
mov
cli
push
aas
mov
movd
leave
pop
or
mov
cmpsl
lods
mov
shll
jle
sbbb
popl
xlat
bound
inc
sbb
testl
mov
mov
loope
inc
add
shl
mov
push
testb
adc
sbb
push
mov
and
cmpl
ss
mov
out
jo
sub
sbb
pop
jle
add
call
dec
fcomps
stos
push
cmp
and
arpl
sub
lods
xor
imulb
les
pop
es
fcoml
push
adc
inc
popf
push
scas
sbb
out
inc
sbb
xchg
push
jnp
jp
sbb
leave
xor
and
adc
test
js
out
repnz
push
data16
xchg
dec
js
jg
ja
jl
add
mov
aad
shrb
negl
fwait
adc
cmc
jecxz
enter
inc
mov
call
mov
dec
stos
mov
lds
rclb
sub
adc
les
aad
mov
dec
imul
out
and
push
mov
repz
movsb
jl
sbb
pusha
mov
xor
xor
mov
add
fsubrs
aam
push
add
adc
scas
ds
dec
pop
xchg
lock
insb
in
and
icebp
cwtl
int
add
dec
xor
dec
negl
sub
bound
repz
push
xchg
push
push
imul
cltd
movsb
mov
call
loope
stc
loopne
iret
and
fwait
push
dec
pop
rol
stc
movsb
dec
adc
inc
iret
out
xchg
es
or
inc
push
mov
mov
decb
sbb
stc
mov
mov
add
in
lods
mov
outsb
adc
xchg
out
pop
jle
repnz
daa
out
aad
loopne
xchg
mov
push
and
out
arpl
sahf
or
push
pop
mov
in
sub
jle
daa
mov
add
int
pop
xor
js
aaa
out
add
call
shll
xlat
push
lods
mov
adc
xor
addr16
insb
mov
xchg
addb
xor
imul
cmp
mov
aaa
mov
pop
stos
sbb
push
push
mov
ljmp
cmpsl
add
add
mov
mov
dec
xor
movsl
or
fistpll
sbb
fisubl
push
mov
xor
das
pop
mov
cmpsb
and
pop
sbb
out
in
pop
pop
xor
fistl
xor
add
call
cli
jb
into
cld
dec
pusha
in
in
jae
int
xchg
push
add
outsl
dec
adc
xor
outsb
loopne
fcoml
inc
lea
fiaddl
xchg
shrl
popf
pop
insb
pop
pusha
mov
lods
sahf
sub
clc
or
lock
stos
sar
lods
cmp
outsl
push
xchg
jbe
addl
adc
adc
and
stos
cli
scas
fmuls
jns
cmp
adc
xor
test
leave
or
call
loopne
mov
call
test
push
mov
inc
push
add
jle
sub
jl
mov
jb
mov
mov
scas
mov
pop
mov
push
push
xor
sub
mov
pushf
fcoml
test
aam
add
lods
push
sti
aas
or
add
pop
sub
je
wbinvd
cltd
int
std
push
iret
pop
inc
cli
out
jnp
push
aaa
sub
dec
or
cli
inc
mov
pop
dec
mov
push
loope
jmp
xor
aas
movsl
add
call
add
loopne
push
jnp
mov
push
imul
push
add
sub
xchg
xchg
ja
dec
push
scas
xchg
push
cmp
movsb
dec
icebp
pushf
dec
xlat
call
and
xchg
mov
cmp
arpl
push
mov
in
push
mov
lods
pop
mov
repnz
cmc
icebp
dec
cmp
or
dec
adc
sub
push
rorb
add
dec
cmpsb
xchg
dec
jne
fstpt
cmp
lock
add
add
inc
lock
imul
jmp
cmp
sahf
in
test
std
outsl
add
aad
add
call
pushf
cmp
orl
xchg
lods
push
repnz
lds
imul
add
aaa
pop
xchg
loope
pop
sub
loop
mov
out
inc
mov
mov
jne
sbb
xchg
mov
out
cmp
xor
lods
int
mov
insl
inc
xchg
adc
scas
hlt
mov
jns
outsl
rorb
pop
rcrl
std
mov
movsb
repnz
out
mov
sbb
cmpl
push
add
pop
dec
jo
psubsb
add
call
sub
xchg
mov
dec
mov
popf
or
add
mov
aas
loope
rorl
pop
mul
jne
out
or
push
add
xchg
insl
std
pop
test
lds
and
sub
mov
bound
xor
sahf
dec
enter
sbb
sbb
xchg
add
push
add
lret
mov
in
cmpsl
mov
ds
mov
and
xchg
add
and
sbb
fld
xor
ja
cltd
stos
lods
dec
jo
xchg
add
push
int
add
call
sub
aas
call
pop
or
cmpb
repz
adc
popa
sub
repnz
andb
jbe
jle
int3
sbb
add
aas
push
sbb
mov
test
popf
sti
popa
cmp
jl
subb
push
gs
into
into
repnz
xchg
push
pop
cld
clc
sbb
sub
ret
cli
jle
adc
xchg
mov
imul
inc
fdivr
test
into
xchg
xchg
shlb
push
and
add
call
lret
enter
dec
mov
push
data16
pcmpgtd
sub
push
mov
cmp
push
push
xor
xchg
inc
leave
pop
and
push
jae
sub
shl
out
inc
adc
pusha
pop
jg
inc
mov
aad
in
popa
mov
push
ds
sbb
aaa
cmp
sub
jb
mov
lods
xchg
imul
fstp
jle
call
lea
and
xor
fisubrl
pop
lea
or
push
sarb
call
inc
cli
popf
stos
mov
mov
xchg
addl
inc
sbb
mov
mov
cmc
iret
cmp
lret
insb
adc
xchg
mov
lock
lds
scas
cmpsl
pop
stos
call
icebp
inc
popa
pop
cmp
out
sti
jecxz
test
into
push
push
ss
and
or
mov
and
nop
sub
mov
mov
mov
scas
adc
inc
lret
sbbb
stc
loopne
jl
push
outsb
mov
leave
cltd
push
add
call
pushf
fiaddl
inc
roll
mov
add
insl
xchg
push
pop
pop
fs
cmp
lods
sbb
adc
push
int3
jp
clc
pop
imul
jae
sub
rcll
outsl
imul
idivl
inc
pop
in
hlt
xor
xlat
lock
pop
fabs
testl
cli
or
add
mov
icebp
jbe
push
test
push
int3
inc
sub
mov
adc
pop
imul
dec
test
sbb
add
call
sub
push
inc
push
cmp
cmp
shrb
pop
sub
xorb
call
push
aas
clc
and
dec
xchg
sbb
push
repnz
std
call
push
or
mov
inc
hlt
jns
mov
inc
push
xor
aam
pushf
or
js
mov
pop
xchg
fwait
or
mov
sub
dec
pop
addr16
add
push
imulb
mov
jge
test
jmp
and
in
in
adc
into
cltd
inc
lods
mov
inc
int3
and
add
call
lret
and
or
out
dec
and
xchg
or
xor
sbb
cmp
jae
aam
xor
pusha
mov
or
aam
shr
and
shlb
jecxz
outsl
sub
xchg
dec
das
push
xorl
mov
fmull
daa
add
cmp
jecxz
mov
loop
fsub
mov
sbb
pop
add
cmp
test
push
push
pop
fs
sbb
push
ds
jl
dec
call
hlt
stos
push
ficoms
orb
add
call
loop
mov
jge
xchg
mov
imul
fcmovnbe
enter
push
lahf
add
pushf
sahf
aam
cmp
in
xchg
int3
and
loope
push
dec
pop
adc
jl
mov
out
and
jge
or
dec
fisttps
mov
std
add
stc
mov
adc
and
dec
sub
mov
test
xor
ret
cmp
cmc
mov
inc
mov
clc
mov
shrl
std
ret
in
out
out
sbb
inc
in
add
call
sti
add
or
xor
movsl
stc
dec
push
push
xor
sarl
push
pop
add
inc
nop
dec
mov
leave
rorb
lahf
stc
cs
add
sub
dec
movd
pop
loop
jns
sahf
push
adc
jg
pop
shlb
jne
rclb
cmpsb
jecxz
cmp
pushf
mov
les
inc
pushf
push
repz
adc
inc
fsubs
and
add
test
movsl
ljmp
call
add
and
mov
push
cmp
push
test
inc
cmpsb
repz
movsb
adc
sbb
stos
add
negb
inc
dec
movsb
inc
jmp
clc
add
dec
adc
jb
subl
arpl
sbb
mov
mov
jmp
pop
jmp
mov
sarl
sub
xor
push
mov
adc
pop
pop
sub
push
and
mov
xchg
jns
stc
sahf
fidivl
xchg
clc
mov
call
mov
mov
cmpsb
std
lock
inc
add
cli
push
ss
sbb
push
out
push
aam
hlt
movsl
xor
pop
nop
and
mov
mov
clc
mov
das
and
enter
jecxz
mov
inc
cmc
sub
sbb
jmp
jmp
call
xchg
xlat
pop
scas
and
xor
pop
pusha
shlb
xor
jl
out
pop
or
lods
jecxz
sub
adc
pop
mov
loop
test
nop
aam
add
call
mov
xchg
imul
push
xor
pop
pusha
ror
sbb
jbe
dec
push
lcall
popf
adc
sbb
jecxz
pop
cmp
and
sbb
push
bound
enter
xchg
mov
cmp
pmaxub
es
loop
and
in
mov
shr
ja
jecxz
jecxz
repz
xchg
or
pop
jno
inc
cld
popa
mov
movsl
addb
fwait
inc
popf
aad
repz
iret
mov
jno
jmp
add
call
jp
cli
iret
dec
mov
add
push
push
shlb
les
mov
out
fwait
mov
sbb
sbb
pop
xchg
pop
push
inc
jecxz
test
insb
xor
je
gs
and
clc
flds
fsubr
lods
pop
popa
push
sbb
cmp
mov
pop
jb
mov
popa
pop
fwait
xor
pop
mov
lods
movsl
shlb
insb
movsl
outsl
cmpsl
sub
lea
cltd
mov
daa
into
mov
mov
sbb
cmpsb
scas
pop
cmp
add
call
shlb
and
or
bound
cwtl
push
xchg
jge
fdivr
mov
jl
das
in
add
mov
scas
ja
jo
sub
fmul
adc
stos
add
mulb
fcmovu
pop
push
idivb
fstpl
pop
shrb
mov
jo
clc
and
lock
jae
ret
ljmp
ret
dec
loop
ja
jp
mov
cmc
gs
test
add
iret
lahf
test
ret
or
das
mov
mov
dec
lcall
add
call
push
imul
or
xor
out
pop
adc
outsl
adc
into
and
pop
add
and
fbld
push
sub
xchg
aas
pop
cmp
pop
mov
pop
and
rorl
jae
shlb
loop
cli
fucomi
xchg
inc
push
adc
insl
ret
mov
pop
sti
test
enter
or
ja
mov
push
stos
cmpsl
mov
shll
mov
inc
adc
mov
mov
jl
js
mov
subl
xchg
push
sbb
sub
push
shl
mov
add
call
lods
insl
jo,pt
pop
push
jle
inc
cmpsb
cmpsl
cmpsb
daa
mov
shlb
xor
loope
pop
ss
sub
lret
xchg
push
pusha
loope
sbb
add
cmp
or
jl
xor
or
cmp
shll
cmp
dec
mov
mov
sub
stos
mov
dec
test
int
imul
popf
push
lock
jno
or
push
dec
pop
lods
decl
mov
inc
mov
ljmp
loopne
je
jno
add
call
cmp
rorb
adc
mov
jge
mov
pop
scas
cli
sahf
mov
cmp
les
pop
cmp
scas
or
das
push
or
xchg
repz
cmc
jno
sbb
add
jge,pt
ficoml
add
andl
inc
push
sbb
outsl
fstpt
cltd
inc
cmp
mov
in
jmp
push
popf
jae
sub
sbbb
scas
jb
or
pop
addr16
adc
ds
mov
test
add
call
sub
iret
add
add
outsl
das
xchg
shlb
shl
jp
sub
jge
mov
xchg
lea
cld
mul
dec
imul
stos
push
loopne
cmp
mov
mov
jle
xchg
leave
iret
adc
cs
sbb
push
sub
add
pop
popl
xor
sbb
push
sub
cwtl
popf
mov
pop
jae
gs
arpl
ret
xor
das
sub
mov
adc
fsub
mov
jno
dec
mov
sti
nop
sub
mov
xor
call
cmp
rcrl
sub
add
sbb
insl
mov
cmc
dec
stc
mov
xchg
idiv
mov
mov
xchg
scas
clc
cmp
cmpb
leave
push
push
mov
shrb
push
int
add
push
jbe
pop
adc
cmpsb
or
or
lret
int
mov
dec
imulb
xor
sub
add
ss
pop
mov
mov
test
sbb
je
push
leave
xor
xchg
add
call
jns
decl
push
scas
sbb
sub
xchg
add
mov
in
or
add
movsb
fmuls
jmp
jge
dec
jbe
stc
cmp
mov
push
int
mov
mov
xchg
adcb
xchg
mov
push
sub
ss
add
jb
cmp
ret
std
sahf
hlt
dec
jg
mov
cmp
dec
dec
aas
rorl
xchg
inc
jne
xchg
daa
sarl
inc
push
test
mov
fdivrs
mov
or
daa
aaa
push
divb
mov
test
lret
sub
call
add
push
add
pop
daa
adc
imul
mov
cmp
call
int3
cwtl
fwait
mov
or
mov
test
iret
into
lods
cltd
push
cld
mov
fstpl
sub
mov
mov
repnz
js
fs
adc
jnp
xor
cmp
push
push
daa
leave
mov
lds
pop
movsb
or
into
pop
and
sbb
add
lahf
dec
cmpsb
test
add
int
mov
xchg
add
call
and
orb
mov
pop
xor
data16
outsb
imull
outsl
lret
test
push
inc
leave
push
inc
sbb
mov
xchg
pop
lcall
imul
cmpsb
push
and
mov
xor
sbb
lock
and
fildl
sub
fsubrs
hlt
mov
inc
xchg
xor
rcll
cmp
sub
sbb
xabort
aas
outsb
int
testl
pop
insb
mov
dec
mov
adc
mov
add
call
jmp
jnp
pop
cwtl
mov
outsl
out
movsb
sbb
je
fwait
lods
sub
lret
sub
hlt
or
sbb
clc
jb
jne
sti
loopne
cvtps2pi
xchg
jle
add
mov
or
cmp
sahf
loopne
ja
jl
mov
or
pop
add
cld
scas
divb
test
stos
icebp
fildll
cmp
jo
mov
jne
lods
dec
lret
sbb
adc
aam
mov
sub
xor
shlb
into
xchg
fdivl
movsl
cmp
add
call
adc
inc
inc
in
repz
into
xchg
mov
xchg
in
notb
flds
popf
mov
mov
and
js
xchg
fsubr
ljmp
inc
scas
mov
ss
inc
addl
and
call
and
add
jmp
jle
and
fidivrl
xor
movsbl
or
adc
clc
jnp
loope
lods
push
mov
in
rcr
mov
stc
sbb
sub
adc
pushf
ret
inc
jmp
in
test
outsb
imull
dec
push
add
call
stos
push
jbe
pop
mov
mov
jns
cli
js
jae
stos
jb
push
rclb
mov
and
mov
or
xor
mov
pop
test
jo
rclb
push
insl
pusha
lret
inc
data16
inc
out
pop
lea
lret
jo
jg
push
add
insl
pop
in
cli
adc
mov
and
or
inc
into
mov
or
int
lea
sub
testb
mov
test
repnz
xchg
mov
push
inc
mov
call
add
call
mov
scas
add
imul
cwtl
jmp
cltd
insl
cmp
add
xor
jmp
fstpl
mov
sar
shll
loopne
fs
mov
xchg
ja
cltd
aam
mov
xor
das
jge
outsb
int
cmpsb
pop
cmp
push
call
or
arpl
adc
xor
pop
inc
and
push
cmp
movsb
fdiv
and
sahf
push
std
xchg
dec
es
dec
in
jbe
jne
jb
cmp
mov
lcall
add
call
icebp
sub
xor
negl
ljmp
sbb
xlat
mov
out
xchg
mov
outsl
add
outsb
movsb
aam
div
movsb
xchg
pop
jb
mov
add
push
loopne
rcl
pushf
lret
jecxz
fucom
mov
jbe
sbb
mov
add
psubd
jge
pop
and
mov
pop
xchg
or
mov
je
push
hlt
jmp
fsin
xor
dec
or
xor
lods
lret
call
fdivp
loope
sbb
lcall
out
jge
xchg
xchg
cmp
dec
xor
jns
cli
js
js
and
mov
and
mov
hlt
les
in
sub
push
xchg
push
sahf
xor
outsb
lret
mov
push
lock
movsl
in
sub
mov
rcr
inc
ljmp
add
std
add
movaps
pop
or
cmc
in
pop
dec
popf
inc
mov
daa
and
mov
mov
test
pop
out
sbb
inc
and
add
call
inc
inc
add
push
push
scas
jge
in
jle
inc
xchg
push
jo
insb
sarb
or
xchg
pop
lret
in
dec
setns
test
les
mov
cmp
into
mov
stos
inc
mov
push
rclb
mov
jns
sahf
mov
lods
scas
dec
mov
xchg
add
lret
dec
mov
testb
jb
jecxz
dec
ss
popa
out
pop
hlt
xchg
jg
dec
jns
mov
outsb
ret
xchg
ret
inc
aaa
or
add
call
outsl
fs
fwait
push
jg
mov
fisttpll
cmp
cltd
pop
jno
cmpsl
rclb
push
adc
and
add
mov
push
stos
js
out
mov
jne
leave
lods
sbb
xchg
ret
jg
loopne
nop
mov
in
fs
adc
je
out
xchg
jl
mov
ret
sub
xchg
adc
stos
sub
or
bound
cmp
jo
jge
test
repz
push
fsubl
icebp
xor
sub
dec
es
imul
push
ficomps
jmp
adc
jl
add
call
loope
push
loop
orb
imul
lods
dec
por
hlt
xor
loopne
mov
lcall
aad
lret
lret
fcompl
lock
mov
dec
hlt
jmp
pop
outsl
nop
imul
fisubs
hlt
sub
push
mov
orb
outsl
sahf
adc
inc
xchg
pop
je
pop
cltd
adc
xchg
aad
test
cmp
in
or
out
cmp
xor
out
rorb
xchg
mov
xor
inc
sub
add
call
pop
cmp
dec
xor
ret
adc
push
cltd
ficoms
sbb
insb
stc
cwtl
xor
int3
push
jmp
je,pt
adc
sbb
sub
lahf
into
inc
test
add
add
pop
aad
mov
lret
nop
or
mov
gs
and
inc
push
stos
push
and
nop
lods
test
cmp
xchg
out
or
pushf
jae
jns
pop
aam
add
sub
dec
pop
or
inc
mov
add
call
mov
or
jp
sub
push
inc
dec
bound
mov
out
cmp
jl
pop
int
testb
js
es
sbb
in
loopne
push
jge
inc
sbb
or
xchg
jecxz
cmp
sub
sub
cs
xor
sti
or
popf
jns
jae
dec
bound
mulb
xor
scas
or
dec
jmp
out
jecxz
loope
js
add
into
ret
xor
jg
mov
xor
push
stc
test
repnz
mov
sbb
mov
adc
add
call
arpl
das
cmp
or
jp
adcb
imul
cmp
test
jmp
xchg
push
shr
pop
nop
fisttps
push
enter
mov
pop
jge
hlt
xchg
data16
push
mov
xchg
dec
or
mov
xor
stc
stc
pop
repz
xchg
xchg
ja
and
sub
and
hlt
das
repnz
fcmovbe
loop
fstpt
out
clc
push
or
inc
insl
outsb
dec
jp
inc
int
and
and
add
pop
add
call
sbb
dec
jl
in
inc
or
setle
in
cmpsb
std
andb
sub
add
pop
fsubl
repnz
inc
inc
pop
add
dec
pop
mov
fstpl
or
pop
loopne
sbb
mov
xchg
or
dec
lret
mov
andl
cli
push
inc
fisttpll
int
es
bound
pop
das
out
lahf
xchg
or
decl
push
sub
cwtl
mov
idivl
test
dec
into
cmc
add
call
rcr
jne
lds
gs
addl
jle
mov
clc
lods
sbb
in
pop
dec
mov
adc
into
filds
lock
movsb
out
in
cmc
mov
mov
mov
daa
jns
mov
cmp
cli
and
inc
pop
adcl
out
cmp
scas
fucomip
jb
xor
ret
gs
mov
pop
dec
les
scas
repz
dec
sbb
loope
sub
mov
adc
lahf
jecxz
xor
or
call
icebp
add
hlt
call
inc
and
lcall
mov
loope
or
pop
popf
pop
les
test
add
scas
mov
das
xchg
mov
test
xchg
clc
or
push
imul
push
cmp
popa
sub
jae
rorb
ret
imul
ror
fmuls
xchg
adc
fstps
dec
fimuls
xchg
and
push
aas
mov
cmc
push
call
in
stos
adc
cwtl
mov
sub
mov
add
call
fidivrl
cld
lret
cld
inc
jno
pop
cmpsl
jae
dec
cmp
shlb
hlt
or
cltd
pop
gs
xor
lods
sti
sbb
ss
xor
inc
cmpsb
sar
scas
push
xchg
xchg
das
adc
icebp
stc
xor
dec
or
adc
lds
andnps
xchg
add
xor
fistps
xchg
push
dec
mov
xchg
jo
enter
mov
cmp
repz
cmp
icebp
jg
lock
inc
and
fcompl
add
call
adc
ret
imul
pusha
rorl
arpl
adcl
les
mov
cmp
data16
imul
jo
sahf
xor
dec
pop
adc
les
xchg
scas
es
je
sbb
push
or
xor
fldcw
sbb
jl
and
pop
sbb
add
fs
test
inc
xor
fcmovbe
iret
fisttpl
aam
in
push
mov
addb
std
lret
push
mov
mov
cmc
push
add
call
flds
xor
call
inc
dec
sbb
dec
inc
jb
sub
or
adc
push
ljmp
mov
sar
aad
mov
push
insl
push
sbb
call
aaa
xchg
dec
movsb
dec
jl
aaa
rorl
xor
xchg
push
xchg
cmp
cmp
cmpsb
cli
repnz
pushf
inc
cmp
mov
adc
jmp
std
jbe
out
pop
or
movsb
lds
or
jns
xor
or
dec
es
shll
loop
addr16
mov
call
into
aad
inc
adc
xchg
test
fstl
lahf
or
jb
lock
xor
andl
frstor
mov
mov
aam
dec
sahf
push
push
push
mov
dec
insl
push
mov
sbb
sbb
sub
in
imul
mov
call
add
push
xchg
lods
pop
pop
mov
jnp
out
loope
addr16
xchg
lds
push
lcall
cltd
test
sbb
stc
and
data16
cmp
fcomps
ja
add
sub
call
cmpsb
out
inc
mov
aam
inc
in
adc
add
mov
repz
pop
ffreep
xchg
aas
cmp
daa
cwtl
sbb
test
push
adc
jns
xor
scas
repnz
push
jge
clc
aas
mov
jae
fs
test
inc
push
lret
sub
inc
inc
jl
xchg
sbb
cmpsl
or
jno
andps
ss
in
adcl
and
push
out
shrl
aad
jg
in
push
dec
lds
cwtl
dec
dec
popf
push
sbb
outsl
add
call
push
out
cmp
mov
sub
push
into
dec
dec
cmc
cmpsb
dec
loopne
push
dec
adc
test
jg
popf
mov
cmp
int3
add
sub
add
lret
ja
popf
loopne
stos
jge
mov
jg
push
shll
nop
mov
in
ja
outsl
adc
pusha
fs
adc
jl
or
mov
pop
lcall
jl
je
mov
arpl
pusha
rolb
and
and
inc
ss
arpl
cmp
int3
pusha
sub
ljmp
call
loopne
push
call
out
aas
jb
ret
ret
mov
push
adc
cltd
outsb
aaa
jno
and
and
ja
lahf
mov
sbb
out
sbbb
push
sti
imul
test
mov
xor
mov
inc
jl
add
shrb
das
cmp
jge
adc
xor
shrb
mov
std
xchg
pop
or
scas
pop
xor
xor
stc
xchg
mov
dec
push
adc
inc
push
aas
mov
fsubrl
xchg
cmp
add
call
fwait
ret
mov
sbb
mov
dec
or
cwtl
mov
and
addr16
loope
add
lahf
sarl
and
jge
xchg
add
sub
aaa
push
push
fwait
mov
push
imul
out
jns
inc
jne
xchg
outsl
lret
loopne
mov
push
mov
outsb
and
dec
pop
mov
aad
adc
push
sti
add
mov
mov
or
push
sbb
sub
inc
sbb
jmp
add
cli
adc
xor
xchg
push
add
call
push
pop
or
push
cld
inc
rolb
loope
inc
push
mov
in
stos
sub
add
mov
adc
jbe
adc
pop
cmp
adc
ucomiss
pop
iret
pusha
leave
jl
sub
sbb
push
pop
popa
movsl
mov
sbbl
mov
xchg
leave
outsb
push
xchg
pusha
repz
insl
outsl
dec
test
push
or
and
cmp
mov
mov
mov
out
inc
es
or
jmp
dec
imull
imul
call
xor
add
in
mov
jne
sbb
pop
test
into
das
cmp
inc
or
addb
add
loope,pn
adc
dec
xor
mov
mov
cwtl
xor
adc
jp
es
outsl
sar
sub
pushf
add
aad
jge
and
pop
fistps
cmp
popa
pop
repnz
push
push
or
imul
xchg
out
shll
add
and
jb
into
test
pop
and
ret
adc
pop
roll
call
push
dec
das
cmp
inc
or
sti
gs
jns
dec
cld
sbb
movsb
xchg
inc
lret
adc
repz
arpl
adcb
aaa
mov
mov
es
imul
aad
notb
stos
in
sub
inc
jne
test
test
pop
cmp
add
xchg
enter
sarb
stos
cli
push
in
xor
jl
and
mov
repz
inc
stos
mov
dec
fidivrl
xor
fdivrl
and
push
mov
js
aaa
add
call
int
xor
imul
daa
aaa
jecxz
repnz
mov
adc
inc
xor
pop
fistps
sahf
cs
xor
pushf
outsb
pop
fwait
mov
cs
jmp
jns
in
cmpsl
iret
pop
jmp
js
cld
jo
xlat
mov
push
clc
inc
adc
push
jne
push
into
mov
out
fimull
call
cmp
pop
in
loope
mov
inc
sahf
sbb
and
sub
jne
out
lret
push
aad
lds
mov
add
call
mov
scas
loopne
and
adc
or
mov
ljmp
jecxz
mov
jo
or
push
xor
sbb
ret
xchg
das
dec
fsubrl
xchg
cmp
and
rclb
ficoms
test
or
in
xchg
sbb
push
jg
mov
xor
shlb
mov
pop
popf
push
dec
imul
in
movsl
mov
xchg
and
shrb
je
fadds
add
call
lahf
push
adc
jns
mov
in
loope
xchg
push
jnp
xchg
jecxz
dec
cmp
cli
cld
pop
ja
fiadds
lcall
push
inc
cltd
cmp
iret
jmp
mov
sbb
aad
mov
dec
stc
enter
test
out
dec
mov
inc
in
sahf
pop
dec
ret
in
int3
pop
cmp
cmp
enter
stos
mov
aam
push
imul
lret
or
or
jmp
and
mov
ret
add
call
sbb
push
lods
lret
cmp
pop
lret
clc
sti
jge
adc
cli
pop
mov
ds
sub
movsl
nop
pop
sub
xchg
fistl
lret
or
mov
js
cmp
pop
push
stc
mov
jb
pushf
lahf
je
mov
mov
cli
pop
pop
addr16
add
aad
push
scas
inc
loopne
mov
pop
mov
neg
jbe
jp
jl
lahf
adc
outsb
xchg
and
jno
bnd
ret
je
mov
add
call
lock
ficomps
push
lock
xor
dec
jb
pusha
negl
ficoml
cli
mov
pop
cmpsb
pop
hlt
popf
ljmp
aaa
mov
sub
inc
and
dec
enter
outsl
into
or
std
loopne
out
lods
scas
movzbl
in
sbb
imul
pop
inc
jle
push
stc
dec
les
push
xchg
xor
fs
fcoml
adc
sub
mov
or
std
and
movsb
jl
mov
lds
loop
sbb
xchg
mov
cmc
sti
and
xchg
outsb
add
call
std
xchg
mov
pop
pop
push
push
and
mov
pusha
mov
sub
push
insl
das
orl
and
lcall
fwait
mov
cmpb
cltd
sbb
test
adc
cwtl
or
data16
icebp
pop
jmp
shll
pop
sbb
sbb
aad
dec
jmp
sbb
out
js
jns
int3
xchg
sarb
icebp
icebp
cli
xor
dec
jp
inc
mov
adc
sti
insl
js
mov
aaa
pushf
enter
mov
jmp
add
call
mov
outsb
stos
jb
movsl
test
fs
shrl
xor
dec
pop
mul
shr
int3
fildl
xchg
push
mov
idivl
dec
or
push
scas
mov
xchg
int3
sarb
mov
not
popf
cltd
mov
aam
in
lret
je
insb
insl
mov
test
mov
in
int
sti
addr16
or
test
mov
inc
lds
pusha
mov
cmp
dec
iret
push
lods
fnstenv
push
jle
lcall
dec
nop
sbb
mov
dec
add
call
lret
jl
mul
repnz
pop
mov
sub
pop
sub
cs
inc
clc
push
aaa
jbe
popa
or
adc
rcrl
mov
loop
push
jnp
loopne
mov
stos
roll
bound
jae
cmpsl
les
rcll
lds
loope
pop
add
out
cwtl
jb
gs
xchg
scas
mov
iret
xor
pop
jl
mov
icebp
mulb
ja
dec
cmp
add
dec
movsb
fs
arpl
xor
roll
push
mov
add
call
loopne
dec
sahf
xor
mov
push
push
imul
mov
rcll
mov
mov
xor
incb
fsubrs
adc
and
test
jo,pn
int3
jae
xchg
pop
inc
fldpi
hlt
or
cmp
sbb
mov
mov
lcall
sbb
data16
fsubr
out
push
repz
mov
loop
adc
sbb
sti
mov
push
push
and
pop
dec
notb
roll
add
call
mov
in
push
inc
pop
imul
hlt
xor
jo
push
fnstenv
pop
or
imul
adc
cmpl
push
sbb
lret
jecxz
addr16
ss
and
iret
ret
xchg
push
popf
push
lods
loop
jle
lods
cmpsl
add
add
or
cwtl
fdivs
mov
mov
jp
das
mov
rcr
adc
stc
ja
pushw
cmc
pop
dec
mov
inc
cmp
test
leave
in
sub
stos
mov
inc
add
add
call
nop
adc
push
scas
jp
or
movsl
ret
mov
or
hlt
pop
xlat
push
inc
les
adcb
bound
jmp
sub
sub
call
lea
out
outsb
ret
jp
outsl
dec
pause
dec
lcall
mov
push
push
hlt
gs
mov
ja
loop
arpl
mov
jns
lcall
fistl
mov
test
mov
pop
sti
insl
mov
cmp
pop
xor
jmp
xchg
pop
popa
sub
cwtl
into
mov
add
call
sbb
ret
xchg
imul
imul
xchg
cmc
adc
push
test
inc
mov
or
sar
es
and
inc
daa
lods
and
stos
stos
in
cmp
sub
lods
ror
pop
data16
lea
xchg
and
dec
mov
jp
addr16
sbb
or
in
xor
bnd
scas
in
xchg
pop
add
dec
jecxz
xor
mov
das
dec
addl
bound
insl
dec
in
add
call
mov
pop
bound
pusha
mov
popa
inc
push
data16
and
sar
cmp
out
and
mov
dec
mov
subl
ja
cwtl
add
or
xor
sbbb
lea
cmpb
rcll
cltd
and
ss
test
movl
sub
xor
cmp
inc
inc
aas
in
daa
shr
pop
imul
xlat
movsb
add
call
data16
ljmp
xchg
pop
lea
add
mov
dec
xor
and
mov
aad
pop
mov
pop
scas
jns
in
and
shl
shrl
test
mov
or
imul
aas
mov
fs
movsl
dec
fs
push
out
pushf
sub
insb
lds
dec
pop
hlt
stos
pop
push
dec
dec
fisubs
das
filds
icebp
incb
shll
mov
test
xor
andb
movb
call
xchg
xor
cmp
mov
repz
lea
mov
cmp
cmp
dec
xor
mov
cmp
addr16
mov
cmc
dec
je
daa
cmp
and
xor
dec
mov
out
daa
jl
and
push
call
adc
out
leave
mov
clc
sub
shlb
pop
and
mov
or
dec
loopne
xchg
mov
or
daa
movsl
scas
cs
cld
je
pop
mov
jae
subl
jg
push
xchg
addl
movl
call
jge
xorl
andb
mov
inc
inc
push
add
dec
jnp
not
mov
fs
mov
fstpl
push
aad
sub
sbb
cmp
sti
lea
lcall
mov
fwait
xor
jp
push
cmp
inc
imul
jge
negb
mov
lea
push
mov
std
cwtl
movsb
adc
inc
ljmp
dec
mov
test
mov
fcmovnu
pop
bound
inc
inc
nop
ja
add
call
mov
test
aas
jno
pop
dec
std
pop
cmp
pop
repnz
pop
dec
scas
aaa
into
cmp
insl
rorl
daa
and
push
sub
test
loope
mov
aas
insb
sbb
out
inc
lock
mov
push
xor
jmp
les
add
sahf
add
sbbb
jne
test
shlb
or
fldcw
inc
push
shrb
sub
dec
dec
clc
into
int
sti
add
mov
dec
pop
ret
inc
aad
mov
call
or
in
js
adc
xlat
cmp
fisubrs
repnz
jae
dec
sub
adc
or
pop
add
jecxz
in
neg
mov
les
jmp
add
sbb
push
and
or
push
aam
cmp
push
add
mov
nop
lcall
scas
mov
xor
push
test
dec
cmpsl
shll
incb
pop
adc
inc
insb
mov
std
decb
bnd
cmp
jno
mov
mov
popf
stos
ficompl
bound
call
hlt
push
into
icebp
pop
xor
dec
xor
cmp
or
mov
mov
popa
or
cmc
or
jge
xchg
or
iret
or
jo
adc
add
xor
push
or
fildll
scas
leave
sub
bound
adc
and
mov
aad
sbb
and
leave
mov
leave
sub
xor
bound
mov
or
mov
outsl
test
xor
push
enter
add
call
lods
push
and
popa
cmp
loope
jmp
sub
xor
incb
mov
sbbl
out
xchg
fldenv
cmp
ja
pushf
inc
and
outsb
jo
cli
popf
notb
push
cmp
mov
mov
addr16
scas
je
mov
or
in
test
cmpsb
cmp
mov
push
and
add
aas
inc
lods
and
pop
lods
cmp
clc
jnp
int
cmp
sbbl
lcall
add
call
pop
cmp
fisttpl
fsincos
sarl
xor
test
mov
movsl
jp
mov
lea
fld
mov
or
push
mov
ja
leave
in
test
mov
sbb
movsb
insl
fcoml
mov
mov
daa
jmp
pop
lea
enter
inc
mov
fs
scas
clc
jg
repnz
sbb
and
sbb
jmp
pop
jp
cli
add
mov
mov
insb
inc
mov
call
sub
or
imul
jbe
adc
movsb
push
jo
xchg
incb
sbb
lds
dec
inc
cltd
xor
cmpsl
mov
mov
push
les
lock
sub
aam
ss
push
outsb
xchg
sti
mov
test
fdivrs
in
xchg
push
mov
into
out
push
pusha
in
dec
pop
dec
mov
or
inc
xchg
xchg
int3
mov
push
mov
mov
std
mov
call
push
rcll
icebp
inc
clc
or
mov
pusha
filds
adc
hlt
pushf
in
and
insl
fcom
outsl
stos
xor
insb
stc
cmpsb
jb
xlat
fstpt
mov
int3
int3
ss
mov
iret
xchg
std
ret
inc
adc
popa
jg
add
dec
push
repz
fcmovnu
push
imul
push
pop
mov
push
popa
test
push
adc
cmp
rclb
mov
shll
pop
add
rcrb
pop
mov
imul
add
cmpb
adc
add
call
cmpsb
push
js
push
cmpsb
xor
or
ret
popa
mov
out
jbe
lret
add
fidivs
mov
xor
jo
dec
mov
pop
out
scas
push
mov
mov
shrl
xchg
xor
cld
cmp
outsb
xchg
push
icebp
nop
xchg
arpl
or
dec
int3
cmp
orb
adc
fldcw
xlat
fisttpl
sbb
inc
ret
push
dec
pop
popa
cmp
jge
add
call
xor
lds
dec
pop
fcmove
bound
push
lods
mov
push
add
sbb
sub
mov
pusha
mov
mov
mov
jbe
mov
es
jnp
aas
push
xchg
xor
test
movb
es
test
ljmp
loopne
fsubs
shrl
push
push
call
lret
lds
jmp
cmc
sar
xchg
sbb
out
jle
mov
leave
pop
push
jo
xchg
lea
add
call
xchg
hlt
add
ss
popf
or
adcb
cld
fsubrl
and
cmp
jns
movsl
pop
push
insb
nop
rclb
and
ficoms
fsubrl
xchg
sbb
mov
ret
xchg
pop
or
and
adc
inc
cmp
push
jmp
adc
mov
mov
mov
pop
lods
dec
dec
test
and
gs
sti
imul
add
mov
or
call
sahf
ja
imul
test
pusha
xor
push
cmp
add
cmp
sub
data16
and
sbb
or
xor
jo
testl
nop
jp
into
xor
aaa
mov
push
sbb
scas
aam
icebp
and
lahf
aaa
xchg
dec
push
cmp
mov
cwtl
and
xor
test
popf
cmp
sbb
push
cmp
inc
adc
adc
sub
into
iret
mov
mov
mov
jecxz
and
add
mov
add
call
es
repz
pop
jg
or
aaa
xor
push
iret
cmp
mov
jns
sbbl
rcr
sahf
sub
decl
jmp
pop
pop
mov
cmp
cmc
scas
sub
xchg
adc
icebp
push
fdivp
shlb
or
jo
dec
loope
ljmp
imul
pop
xor
cmp
lahf
or
insb
aad
mov
scas
xchg
dec
mov
nop
cli
addl
fnstenv
inc
dec
sahf
add
call
in
icebp
xor
xlat
loope
xor
cmpl
repz
xor
int3
jno
xor
inc
and
mov
cmp
test
jne
jl
mov
rcrl
xor
cmp
add
sub
arpl
lods
jne
std
jge
mov
insb
mov
fcoml
cmp
stos
mov
lahf
cmp
sahf
mov
test
inc
pusha
add
xor
xchg
jmp
ljmp
xchg
sti
dec
vmovaps
call
rorb
mov
xchg
jmp
ret
rolb
aam
push
pop
jo
adc
bound
loopne
popa
push
mov
btr
jmp
insl
insl
movsl
pop
bound
in
or
mov
xor
inc
fimull
sti
and
push
cmp
loope
jg
mov
inc
iret
mov
cmp
out
jbe
call
push
ffreep
lcall
sub
cli
push
ret
pop
cs
lret
popa
add
lret
in
shll
pop
clc
push
mov
add
loop
cwtl
xor
call
pop
fcompl
mov
jmp
out
aam
fstl
outsl
aad
insl
call
cmp
aad
mov
xor
rol
and
test
movsl
loop
add
out
cmc
aaa
xchg
loope
lods
inc
jle
xchg
stos
adc
sti
dec
mov
hlt
stc
xchg
addl
scas
and
nop
sub
mov
mov
lea
push
mov
cld
fsubs
xchg
add
stos
movsb
test
inc
cmpsl
stos
movsb
xlat
dec
pushf
and
lock
cmpsl
sti
pop
ja
adc
push
add
call
sahf
sbb
and
mov
mov
xchg
jg
aad
loopne
ds
rcrb
inc
test
or
adc
cli
scas
mov
das
faddl
fwait
imul
and
fldenv
pop
outsb
ja
hlt
into
push
cli
mull
xchg
pop
testl
dec
aad
cmp
aam
mov
popf
xor
lcall
lcall
fnsave
cmp
inc
lret
pop
cltd
xchg
pop
clc
les
lcall
sub
push
mov
std
test
add
call
jnp
fwait
stos
cmc
out
xchg
ljmp
adc
adc
sub
pop
shl
out
adc
jns
push
pop
pop
mov
pop
iret
sbb
jno
hlt
jnp
fnstsw
fucomp
sbb
fs
push
mov
push
xchg
xor
adc
cmpsl
fldenv
and
push
inc
lret
popl
dec
cld
bound
fidivrs
aad
lods
lret
testb
cmp
ror
inc
push
arpl
out
dec
inc
std
aad
push
add
call
jno
stos
mov
nop
jle
sub
mov
movsl
bound
mov
addr16
xchg
out
inc
clc
and
cmpsl
lret
mov
jge
sbb
cs
lahf
ret
jno
mov
leave
pop
insb
stos
cmc
xor
xlat
imul
adc
pop
xchg
loop
imul
imul
xchg
les
cmpsl
pusha
mov
test
or
mov
sahf
xchg
jge
or
lea
jne
jno
mov
cmp
mov
std
push
test
dec
cmpsl
push
sbb
push
daa
push
push
mov
call
sbb
clc
movsl
hlt
add
mov
bound
imul
mov
js
loop
adc
jae
ja
inc
in
cmpsl
push
push
adc
jmp
test
insl
imul
shll
ret
push
sub
sbb
scas
pop
sbb
sbb
and
pop
ds
or
xchg
out
mov
sbb
inc
fildl
mov
daa
sub
mov
cmp
mov
in
jmp
nop
add
sub
push
mov
lret
lods
bound
insl
mov
call
pop
xor
or
xlat
test
inc
xchg
fldt
rcl
pop
out
cmp
sahf
iret
inc
aad
xchg
inc
mov
daa
in
dec
stc
fdivs
roll
adc
test
sahf
push
adc
loope
sarb
lods
out
lods
rcrl
inc
jecxz
fsubrl
and
mov
mov
int3
mov
cmpsb
push
bound
clc
mov
mov
adc
pop
jp
or
mov
popa
push
and
leave
addb
scas
fdivrp
dec
sub
ret
call
xchg
pop
test
pop
call
and
outsb
test
fnsave
jae
add
data16
and
pop
loopne
jo
sbb
in
xchg
lahf
es
and
rolb
and
jle
test
sub
negl
out
and
rep
cmpl
in
enter
ret
xchg
fwait
rorb
into
fcomp
cmp
mov
in
roll
adc
nop
aas
imul
xchg
les
fcoms
jmp
or
add
call
jb
jns
outsb
cmp
dec
call
xchg
xchg
data16
dec
pop
push
or
sbb
xchg
mov
mov
mov
movsb
inc
mov
inc
dec
scas
inc
and
sub
or
ss
jmp
push
ljmp
push
shl
pop
stos
sti
and
data16
inc
rorl
addr16
jp
mov
hlt
inc
shrb
rorb
xor
nop
inc
mov
jnp
test
xor
push
mov
ss
xchg
mov
iret
jae
lret
in
add
call
xchg
movsb
xchg
jns
lret
rclb
mov
sbb
mov
fnstsw
cltd
mov
sahf
insl
and
das
lret
fisubs
inc
mov
jp
fcmovbe
jle
cmp
enter
push
cltd
orl
icebp
pop
cmp
repnz
int
jns
dec
rorb
aad
cli
sbb
mov
xchg
sub
add
adc
fsubs
gs
into
cmp
sbb
lods
pop
pop
pop
sub
clc
aad
lcall
fs
ficoml
or
add
call
mov
pop
xor
ret
clc
test
aad
outsb
push
sbb
loope
xchg
xor
push
outsl
mov
adc
js
icebp
jecxz
movsb
jnp
mov
faddl
lret
mov
fadds
mov
mov
in
sub
es
popa
out
cmp
lds
sub
and
and
mov
rolb
jp
insb
xchg
in
mov
xchg
loop
sbb
cmp
icebp
pushf
std
test
mov
leave
pop
mov
mov
sahf
in
push
xchg
lcall
call
dec
lods
mov
out
push
cmp
xchg
mov
pop
mov
jb
jp
ret
mov
xor
jbe
outsl
mov
cmp
cmpsb
enter
adc
and
incl
mov
pop
pop
and
mov
out
or
xorl
es
and
repnz
loope
lds
mov
dec
xchg
xor
stc
shr
xchg
pop
cli
mov
or
bnd
fstpl
loopne
adc
add
call
pop
aam
clc
js
sbb
xor
xlat
add
hlt
imul
cwtl
jp
xor
push
fstpt
mov
inc
xchg
dec
out
jo
add
xor
sub
arpl
dec
test
xor
fiaddl
and
inc
mov
dec
cmpsl
cwtl
add
jle
mov
inc
movsl
xor
ret
xor
sbb
push
rorb
adc
jmp
add
and
aam
call
pushf
add
call
inc
filds
dec
and
std
les
enter
subb
sarl
adc
xchg
dec
push
cmp
ret
out
add
add
test
lcall
shrb
mov
enter
push
push
pop
pop
jbe
push
cmp
pop
aaa
dec
jge
das
pop
rcl
jmp
leave
and
push
inc
mov
inc
into
cmp
dec
xor
outsl
xchg
and
mov
lods
jl
mov
mov
out
popa
lret
call
push
push
inc
xchg
addr16
add
call
sbb
inc
xor
xor
in
mov
lock
pop
jmp
adc
loope
xchg
adc
xchg
pop
in
xor
or
shlb
mov
sub
pop
or
mov
cmc
dec
out
add
aam
jg
mov
jle
mov
shlb
lods
dec
sub
insl
movsb
mov
push
addr16
sub
leave
mov
pop
push
jnp
or
inc
add
push
in
inc
push
push
mov
dec
or
loopne,pt
xor
add
call
adc
or
xchg
fidivrl
mov
retw
xchg
jg
les
mov
stc
push
test
xchg
scas
icebp
push
xchg
rorb
daa
mov
sub
lcall
rcr
sub
add
repnz
mov
push
std
mov
add
fbstp
cmp
pop
stos
scas
or
fmuls
jbe
das
rcrl
mov
adc
xchg
push
ds
pop
inc
jno
out
scas
mov
icebp
adc
jo
and
add
and
pop
add
add
call
addr16
mov
fwait
mov
xor
mov
stc
fwait
xor
insb
sarl
sub
mov
les
test
pop
loope
mov
jb
popa
cmpsb
mov
mov
stos
popf
repz
imul
push
jle
jno
pusha
test
jo
cld
or
and
into
in
mov
jbe
mov
or
inc
sub
mov
add
cli
xorl
fisttpl
inc
mov
call
fbstp
aaa
pop
or
mov
dec
pop
pop
dec
repz
hlt
call
pushf
dec
xor
xor
cmp
leave
jp
ljmp
adc
movsl
fwait
lret
xor
or
lods
testl
sub
sbbb
and
pushf
inc
or
and
mov
xor
mov
sub
pextrw
outsb
stos
inc
and
icebp
xchg
mov
mov
cmp
cmp
and
add
call
pop
dec
dec
cld
add
sbb
movsl
or
icebp
addr16
loope
or
mov
sar
push
dec
aad
outsl
lret
pop
shrb
pop
cmp
outsb
repz
cmpl
mov
mov
push
mov
push
sub
decb
mov
iret
mov
test
and
xchg
jnp
loop
cmp
js
push
push
pusha
xchg
ficompl
cmp
mov
push
mov
std
notl
mov
pop
inc
pusha
push
ljmp
jae
add
call
in
mov
je
aam
bound
jge
or
lcall
insl
lods
sub
add
mov
out
xchg
or
repz
xor
and
gs
pop
mov
mov
mov
jp
mov
cmp
pop
mov
in
push
lock
fisttps
int
out
xchg
push
sbb
mov
cmc
fstl
sti
xchg
popf
lods
add
lock
cmp
inc
call
xchg
int3
or
add
call
pop
inc
and
adc
mov
xor
movsl
outsl
outsb
add
or
sbb
mov
jmp
mov
push
cmpsb
into
in
jl
out
add
nop
jl
cld
add
adc
jb
test
stc
jb
jp
adc
sub
outsl
jle
enter
lcall
lods
xor
fisttpll
cltd
jnp
jbe
xchg
movsb
jl
dec
cwtl
lcall
xchg
nop
or
test
adc
dec
out
mov
cltd
pushf
sbb
aas
clc
xor
cltd
shl
push
inc
js
mov
xchg
push
add
call
shl
mov
add
mov
sbb
mov
roll
mov
pop
shrl
mov
adc
jae
jnp
xchg
cmp
rclb
mov
test
mov
sub
icebp
loope
xor
ret
pop
xchg
mov
push
jle
int
cwtl
in
mov
mov
jmp
push
roll
mov
pop
xchg
and
js
add
test
sarl
pop
cltd
push
jecxz
outsb
sub
push
push
inc
rcrb
add
call
stos
daa
fimull
add
fbld
mov
jmp
mov
loop
fnstenv
and
push
push
sub
fidivs
push
idivl
jne
adc
mov
in
mov
scas
xor
add
jle
outsl
out
arpl
lret
sub
mov
mov
mov
insl
insl
movsb
sub
jns
or
mov
pop
subl
out
outsl
in
xchg
jno
jg
in
or
cmpl
xor
mov
call
mov
test
fsubs
shlb
enter
inc
pop
dec
enter
jmp
xor
push
es
dec
cmp
cmp
xlat
into
xor
js
xor
push
pop
xor
inc
cmp
dec
pop
mov
and
jg
add
int3
dec
lret
sub
adc
fdivl
mov
cmc
mov
lahf
psubw
pop
shrb
add
outsl
mov
xchg
movsl
inc
sbb
jl
pop
aam
jl
xchg
jecxz
lock
call
jle
shlb
ja
jnp
jecxz
dec
pop
mov
hlt
xor
ss
push
ds
outsl
pop
mov
nop
push
stos
cmpb
sbb
xor
cmp
xchg
dec
sbb
jmp
repz
xchg
cs
lret
mov
mov
push
cltd
mov
adc
cmpsb
fidivs
test
fldcw
sbb
xor
out
div
push
ss
mov
pop
mov
and
sub
adc
mov
andb
call
iret
push
jg
je
jnp
push
inc
aaa
sub
movsl
sbb
mov
pop
scas
les
loopne
insb
adc
scas
fwait
adc
loopne
test
cmp
fcoml
push
pop
outsl
adc
jne
mov
inc
notb
sbb
push
roll
data16
mov
repnz
test
jmp
fsubl
incb
xchg
push
sub
push
mov
loop
outsb
xor
xchg
inc
xor
jae
or
jge
ficomps
rclb
mov
lret
push
mov
mov
movhps
add
call
xor
jne
mov
rcll
xorl
mov
imul
cld
push
les
and
negb
outsl
xor
sbb
xchg
and
fisubs
fs
sub
sub
pop
ljmp
push
mov
cmp
ret
roll
dec
xor
pop
cld
push
pop
iret
sub
dec
enter
lock
aam
lds
cmp
push
inc
sahf
dec
icebp
popf
push
imul
popf
test
in
lcall
mov
stc
cmc
das
push
pop
gs
addr16
add
call
hlt
in
data16
push
sti
mov
xorl
test
je
stc
mov
arpl
cs
and
scas
inc
cmc
mov
mov
xchg
dec
push
daa
mov
dec
pushf
add
cmp
xorl
mov
sub
mov
cld
bound
inc
xchg
sarb
fs
out
stc
aad
enter
mov
fs
popa
adc
jl
jge
mov
popf
ret
lock
mov
sahf
adc
add
call
push
xor
ret
cmpsl
mov
sbb
pop
jecxz
xor
mov
sbb
mov
cld
pop
data16
mov
and
push
sbb
xchg
ficoml
sub
lods
leave
mov
lods
fidivs
jge
mov
xor
dec
pop
mov
jne
jns
imul
mov
mov
or
sub
hlt
adc
cmpsb
and
fdivrl
sbb
cmc
imul
mov
imul
mov
pop
mov
inc
add
call
or
sbbb
jmp
in
adc
jae
lods
insl
jge
fistl
cmp
push
and
mov
aad
arpl
inc
xchg
daa
pushf
push
xlat
paddw
enter
jns
pop
fs
fbld
mov
imul
jle
xchg
mov
sbbl
and
sbb
lret
dec
out
scas
and
and
out
out
jbe
cmp
mov
sti
dec
int
test
mov
int3
xlat
or
push
in
pop
jb
adc
add
call
lret
loope
mov
xor
cmp
test
pop
inc
cmpsb
fisubl
loopne
xchg
xor
lret
aas
sbb
adc
pand
xchg
stc
enter
sub
lret
and
dec
aam
shl
cmpsl
push
sub
sbb
sbb
ror
xchg
jb
in
leave
mov
fdivl
nop
sbb
adc
nop
movsb
mov
loop
sub
leave
adc
sbb
push
xchg
mov
outsb
aad
inc
jl
hlt
jnp
pop
pusha
add
int3
lret
or
or
adc
add
call
jne
mov
push
cmp
ds
pop
xor
aad
js
sub
xchg
out
aam
or
je
mov
push
dec
fwait
movsb
int
inc
push
add
imul
add
push
mov
mov
inc
jae
std
shlb
mov
test
xor
xchg
push
jge
or
cmp
rcrb
fdivs
into
mov
bound
sub
stc
or
push
cwtl
mov
pusha
fs
xchg
lret
fdivrs
repz
sub
inc
cli
mov
stc
scas
push
outsb
add
call
mov
or
adcl
test
aaa
mov
xor
lock
in
mov
jnp
mov
rorl
mov
jno
mov
xchg
fneni(8087
repnz
fs
mov
or
cmpsl
jge
sub
pop
vmwrite
js
jg
dec
mov
cmpsl
clc
add
sbb
cmpb
dec
dec
fistl
inc
inc
jge
cmp
loopne
add
call
inc
mov
test
fcompl
adcb
mov
xor
add
fldenv
jne
test
movsb
push
adc
adc
or
aas
mov
and
iret
sub
mov
push
sbb
ja
mov
cmpsb
cmp
mov
pop
adc
stos
xchg
pusha
mov
ret
xor
cmp
mov
popf
xlat
sub
xor
cmpsb
xchg
in
dec
das
pop
and
adc
js
enter
in
or
or
call
mov
jns
inc
hlt
jmp
gs
push
fucomi
fxch
lret
enter
xchg
mov
adc
inc
cld
aam
fldl
inc
inc
nop
into
pop
dec
sub
shll
iret
jmp
xchg
pop
popa
out
jp
mov
aaa
adc
pop
mov
dec
jle
jae
jecxz
add
xor
sub
and
imulb
bswap
aas
pop
leave
add
xchg
cmpsb
stc
xor
inc
ljmp
xor
dec
sub
ret
call
or
jbe
cmpsl
gs
cs
fidivs
cli
xlat
pop
mov
rclb
pop
push
mov
lahf
and
sub
test
push
pop
inc
gs
mov
cmp
clc
sub
mov
mov
fildll
adc
pop
push
movsb
pop
mov
fstp
or
adc
mov
sub
addl
sub
push
jmp
mov
ss
enter
pop
insl
subb
sbb
mov
lea
mov
add
and
call
sub
ficoms
and
and
cmc
into
sub
int
fbld
pop
ja
push
push
inc
add
xor
xchg
xchg
iret
add
jne
adcl
addr16
sub
adc
mov
jmp
mov
aad
dec
xchg
aaa
lcall
and
fwait
adc
pop
jg
jl
lea
or
ds
lock
inc
lods
sub
call
add
call
sbb
daa
ljmp
pop
insl
int3
gs
popl
push
sbb
jmp
leave
dec
inc
es
add
xchg
shll
mov
mov
jno
scas
and
pop
push
push
ja
xchg
loop
fildll
daa
mov
and
shll
repz
test
ljmp
stos
add
dec
inc
pop
mov
imul
push
inc
ss
pop
dec
lret
les
adc
dec
jnp
add
call
push
cmp
dec
cmp
cmp
push
fwait
push
aaa
xor
jp
imul
pusha
pop
xchg
push
daa
andb
int3
pop
xchg
cld
outsb
ja
jp
sub
push
movhlps
adc
sbb
xchg
shl
repz
add
ficoms
int3
out
xor
mov
sbb
add
mov
adc
out
mov
cwtl
mov
xor
ret
inc
out
xchg
mov
cwtl
sahf
scas
cmc
mov
mov
sub
add
call
dec
dec
cmp
scas
repnz
arpl
ljmp
inc
aad
or
jmp
pop
sahf
movsl
dec
shll
mov
lods
inc
pusha
jnp
jbe
push
pop
out
dec
mov
pushf
xchg
gs
in
lods
imul
arpl
add
and
mov
pop
mov
std
fcoms
sub
popf
jbe
or
push
ret
testb
cld
and
cmp
js
push
bound
mov
test
nop
add
call
popa
fsub
insb
xchg
mov
aad
fisttpl
mov
call
aaa
dec
mov
pop
je
in
fdivrl
sub
or
dec
jmp
mov
test
scas
dec
add
pop
inc
sbb
int
sub
bound
inc
and
xchg
testb
bndldx
push
mov
outsb
inc
pop
dec
xchg
dec
ficoml
add
in
jne
push
daa
inc
fwait
and
out
dec
ja
jg
mov
es
push
jbe
jmp
dec
js
cmp
dec
jnp
clc
lds
clc
sbb
in
add
call
into
xchg
push
out
adc
mov
stc
outsl
pop
nop
jmp
cltd
inc
jmp
fs
rcr
in
pop
add
sbb
dec
leave
into
adc
pusha
je
popf
adc
push
pop
push
fldenv
ljmp
or
cmpsb
jge
add
push
pop
scas
sub
fwait
mov
mov
cltd
sub
movsb
mov
xor
enter
arpl
fistpl
adc
inc
out
imul
and
sarb
dec
jle
js
xchg
test
or
fwait
jg
out
addr16
notb
add
call
or
xor
sub
add
notb
inc
and
jl
pop
test
cmp
jp
scas
add
rclb
or
mov
test
or
sbb
mov
mov
inc
sbb
lcall
scas
mov
mov
jno
push
fidivs
sbb
mov
arpl
xchg
ror
add
dec
or
fsubrl
movlps
xchg
aad
mov
sbb
add
call
cmp
adc
test
out
fstpt
sbb
fldl2t
loope
pop
push
insb
or
sub
mov
mov
fyl2xp1
mov
xchg
aam
pop
cmpsb
inc
test
mov
rcr
sub
fstl
mov
outsb
mov
repz
pop
dec
lret
ret
mov
jl
mov
inc
xchg
dec
int
cmpsb
loopne
mov
mov
imul
sub
out
adcb
xchg
add
call
pushf
and
push
jb
insb
iret
push
mov
sarl
jl
inc
mov
add
loopne
pop
jle
mov
pop
fnstsw
je
imul
xor
nop
sub
mov
mov
adc
pop
cmc
pop
xor
icebp
cmp
push
push
inc
scas
jg
pop
in
xchg
stc
push
divl
or
ss
pop
add
vmovq
pop
push
enter
cmc
cmpsb
and
mov
sbb
cmpsl
mov
xlat
dec
jae
imul
xchg
push
out
int
jo
mov
add
call
or
cli
adc
mov
sbb
fbstp
mov
movb
lods
xor
pop
int3
ret
movsb
dec
add
sbb
add
in
mov
pop
cmc
lea
pop
sbb
adc
mov
in
cwtl
jle
rcrl
push
icebp
sub
cmp
aas
xchg
loopne
sub
ljmp
inc
je
movsl
fistl
push
addl
push
and
sub
mov
mov
inc
fisttpll
mov
stos
es
xchg
xor
std
mov
add
call
and
xor
scas
inc
enter
and
push
fldcw
add
jge
and
cmpb
xor
jo
inc
cmc
sub
push
xor
xor
in
icebp
jne
sbb
aas
pop
jae
push
mov
inc
sub
adc
add
mov
js
mov
shll
lds
jne
or
adc
inc
push
je
jns
or
cmpsb
adc
pusha
push
xchg
cs
cltd
fcmovnb
bound
inc
scas
lret
add
call
pusha
aas
out
inc
fisubl
sbb
xchg
lret
jl
dec
inc
push
fcompl
pop
pop
cltd
mov
sbb
mov
push
fildll
mov
sbb
or
xchg
cmp
inc
cmpsl
clc
jmp
sahf
clc
push
aas
xor
int
jge
or
insb
or
sets
mov
push
mov
sub
push
jmp
mov
in
inc
cmp
outsb
scas
ljmp
lods
ret
jnp
lods
jo
jp
sahf
xchg
inc
std
movsl
inc
lcall
call
dec
out
push
sti
xor
push
out
jbe
scas
in
jnp
add
xchg
daa
arpl
mov
adc
shll
mov
jae
xchg
pop
push
fwait
mov
cmp
sub
adc
add
fidivrs
shrb
push
ss
mov
sub
mov
or
addr16
bound
cmpsb
jnp
jl
xlat
insl
sarl
sub
dec
ljmp
fsubs
lods
movl
and
inc
fdivs
sbb
sahf
add
call
mov
daa
push
sbb
adcl
rcl
inc
mov
and
test
mov
stos
or
scas
rcrl
dec
in
lock
lret
xchg
dec
inc
jecxz
loop
fdivrs
xchg
adc
push
jle
imul
sti
inc
outsl
fcoml
enter
stc
testl
or
int3
sbb
cmp
xchg
fisubl
jp
dec
daa
mov
jo
jge
adc
push
adc
jns
fstp
add
add
call
dec
xchg
es
out
mov
movsl
mov
ds
dec
push
je
cmp
sbb
lock
in
mov
lea
addr16
add
outsl
lds
outsb
xor
or
sub
fwait
pop
scas
inc
push
push
pop
out
hlt
fcompl
shrl
push
in
adc
mov
push
mov
sub
cmp
loopne
cmp
jmp
pop
out
push
sub
cld
sbb
xchg
push
inc
cmp
aaa
add
sub
add
call
fstpt
inc
les
xor
pusha
cmpsl
stc
stos
sahf
rol
jne
movsb
cmp
dec
cmpsl
movsl
or
xchg
cmpsb
int
rcrb
jae
jg
je
cmp
mov
mov
sub
or
stos
scas
xchg
or
int
dec
cmp
outsb
sbb
and
inc
mov
lods
cmp
fldenv
cmp
pushf
int3
sub
add
repnz
inc
ljmp
imul
xor
fisubrl
adc
sahf
pop
shll
into
stos
add
call
xor
push
jge
pop
loop
ficomps
sbb
inc
jnp
and
and
mov
lea
mov
mov
or
aaa
dec
loop
ja
in
push
movsb
xor
insl
ficoml
lods
xlat
fnsave
mov
push
pop
push
repnz
jno
cmp
xchg
push
push
sub
push
cmp
jge
xor
das
add
inc
mov
clc
ror
aad
cs
push
in
sbb
xor
ret
cmp
push
sub
add
call
mov
divl
test
out
dec
mov
repz
fisttpl
loopne
fbld
push
pop
ja
shl
xchg
jb
cmp
pusha
adcl
or
repnz
mov
mov
mov
push
xchg
add
loopne
inc
or
fadds
int
outsl
or
test
pop
mov
ficoml
dec
loopne
inc
cmp
mov
push
pushf
pop
loope
sbb
and
mov
or
test
aaa
sbb
es
add
call
dec
inc
push
sbb
loope
mov
std
js
fdivrs
inc
sbb
xlat
or
pusha
std
and
mov
pop
xchg
icebp
xchg
les
rclb
ljmp
cmc
jae
pop
cmpsl
in
andl
lock
loope
aad
ret
pop
test
sti
jle
lods
sub
sbb
fs
aaa
ret
out
ja
int
pop
fnstsw
xchg
pop
leave
or
jno
push
lret
mov
adc
xor
push
mov
icebp
std
dec
add
call
push
mov
jmp
pushw
inc
mov
ror
repz
test
cmp
lock
aam
lods
add
pop
sub
cmpsb
or
inc
in
adc
fiadds
shlb
scas
aaa
jmp
stc
add
fcoml
jp
cmpl
pushl
cli
mov
pop
push
iret
jb
jecxz
inc
lahf
jbe,pt
inc
push
push
stc
stos
inc
scas
lods
push
jae
lds
jp
dec
sub
call
popa
and
stc
dec
or
nop
push
imul
jmp
sti
arpl
sti
enter
dec
push
dec
sub
or
sub
cmp
imul
adc
cs
loope
std
pop
sbb
pop
das
xchg
in
xchg
dec
dec
rcrb
movsb
mov
in
pop
movsb
popa
mov
in
mov
dec
jmp
fnsave
xchg
lahf
jns
scas
xchg
jmp
xchg
pushf
nop
aam
nop
push
rorb
sbb
mov
fidivs
add
call
lret
jp
aam
sub
cltd
subl
jbe
xchg
xor
mov
enter
push
mov
xchg
iret
add
fiaddl
in
dec
std
mov
cmp
push
sbb
jle
or
lea
lcall
xchg
outsl
ret
cmp
lea
xor
jno
pushf
loop
inc
jl
sbb
lods
aaa
ffree
inc
dec
push
stc
out
mov
mov
dec
call
js
xor
shr
sbb
bound
out
call
call
mov
mov
and
outsb
iret
iret
hlt
cmp
pavgw
xchg
mov
je,pn
mov
sub
jns
mov
mov
xor
subl
lds
das
nop
testl
repz
sbb
xor
adc
add
loopne
lret
insl
stos
lret
mov
pop
aam
das
in
lods
xchg
xlat
cmp
cmp
and
in
push
and
cmpsb
cld
je
xlat
out
xlat
add
call
xor
movsl
in
pop
and
cmp
xor
repz
rcrl
fsubrl
popf
cmp
aam
pop
cmpsl
xor
push
fdivrs
and
loope
subb
stc
out
movsb
ret
loopne
push
daa
imul
scas
sub
subl
cmc
mov
cs
repnz
xchg
xchg
mov
ds
loop
outsb
shrb
dec
negl
cld
jge
insb
andb
jecxz
sub
jl
pop
mov
and
add
call
xlat
jge
cmp
outsl
mov
lret
adc
jg
or
fs
aas
fnstsw
mov
rcrb
lret
rcr
addl
addl
mov
in
out
pushf
and
adc
dec
pop
in
jp
leave
out
test
dec
lds
xor
lret
sti
stos
push
mov
test
push
pop
pxor
dec
ss
test
bound
dec
mov
scas
adc
lret
cltd
add
xchg
test
and
insl
aaa
mov
mov
fiadds
add
call
addr16
and
and
push
repz
fwait
jmp
adc
ficompl
ja
stos
rcr
aam
idivb
sbb
mov
in
out
sub
adc
imul
jne
inc
mov
push
xor
into
outsl
sarl
out
jle
adc
ror
adc
fadd
and
test
mov
stos
mov
les
lcall
shl
jnp
into
adc
xorb
sub
or
aad
cmp
add
call
call
mov
adc
and
in
push
data16
sbb
push
push
jle
cli
sub
aam
enter
stc
dec
adc
cwtl
dec
loopne
loope
push
and
push
xor
insb
cltd
stc
add
jbe
ja
int3
or
enter
fwait
imul
and
daa
lods
sbb
sbb
test
in
jecxz
popa
out
push
jns
xchg
or
sub
xchg
loopne
movsl
mov
push
mov
sub
sub
sbb
sar
push
and
push
ja
mov
add
call
inc
aas
mov
adc
repz
out
cld
mov
or
jnp
fisubl
xchg
fwait
aas
or
inc
cli
cmp
xor
fsubs
push
sbb
rorb
pop
shl
lds
stos
dec
dec
push
out
hlt
xchg
xor
jle
fsubrs
mov
mov
mov
loope
out
mov
sahf
jl
dec
paddd
dec
lds
data16
add
int3
xor
dec
movsb
xchg
enter
jb
lahf
repnz
sbbb
mov
fucomip
xor
call
or
ss
pop
sbb
es
mov
or
subl
sub
ss
lods
cmpsl
xchg
push
jnp
repnz
pop
lcall
adc
xchg
inc
inc
sbb
sbb
push
mov
jns
stc
out
les
hlt
adc
cltd
pop
adc
sub
test
sub
les
cltd
fimull
into
xor
xchg
movl
push
xor
xchg
mov
aam
sub
sbb
icebp
mov
sub
add
call
pop
stc
mov
je
dec
les
push
lea
call
stos
lret
dec
xchg
sbb
nop
rclb
push
lahf
repnz
fidivrl
std
adc
addb
popf
xor
mov
pusha
inc
shll
outsl
dec
dec
sub
or
push
inc
aaa
in
mov
scas
in
out
idivb
or
outsl
jp
shr
test
fldenv
cltd
or
insl
shr
mov
inc
int3
inc
call
stc
cli
mov
dec
jbe
subb
imul
call
lcall
push
jbe
and
xor
adc
sub
in
ds
push
das
cmp
xchg
movsb
int
inc
pop
movsb
daa
dec
or
movsl
aad
pop
mov
cmp
mov
fwait
jecxz
cmp
mov
sub
aas
insl
mov
push
cmp
mul
lret
push
ja
popa
loopne
xchg
sbb
inc
jnp
pop
orb
insb
jge
cmp
sub
scas
ljmp
stc
ss
dec
addl
xchg
notb
out
adc
add
call
iret
insl
cmc
sub
or
pop
pop
push
aas
jo
add
sub
xchg
test
xorb
sub
sbb
sarb
mov
ftst
mov
insb
adc
inc
lcall
cmpsl
mull
add
int
mov
inc
in
pop
dec
mov
xchg
test
inc
adc
dec
aam
jmp
xchg
push
push
leave
out
in
pop
mov
cmpsl
xchg
xor
xor
fs
pusha
jnp
pop
repz
mov
mov
vcmpss
add
call
mov
aad
dec
aam
movsl
adc
js
popf
xor
xor
call
jl
xlat
ljmp
sbb
loopew
adc
in
cmp
add
cmpb
mov
sub
inc
sub
aam
mov
leave
sub
leave
loope
xor
cwtl
xor
out
cmp
mov
mov
in
out
shrl
push
jbe
test
add
xchg
ds
cmp
push
inc
sbb
scas
repz
lock
xor
add
call
dec
xchg
pop
stos
or
aaa
insb
pusha
test
dec
std
sbb
imul
push
add
or
dec
ret
xchg
sub
xchg
test
or
jl
scas
or
inc
fdivrp
imul
outsl
sti
and
xchg
mov
sahf
adc
mov
jg
inc
ljmp
je
mov
or
out
ljmp
xchg
and
pop
repnz
cmc
mov
in
cmpsb
insl
add
call
xor
push
mulb
xor
xor
or
in
in
or
xor
shl
pop
cmp
xor
jle
cmpsl
jno
movl
or
rolb
jb
inc
sarb
adc
pop
fldt
inc
add
sub
sbb
inc
fsubs
push
out
insl
xchg
cmp
cltd
dec
test
dec
push
pop
inc
adc
xchg
lahf
sbb
or
in
sahf
orl
insl
aas
roll
add
call
or
lahf
in
loopne
xchg
jecxz
xchg
push
call
movsb
and
sbb
adc
in
mov
subl
clc
sti
mov
jo
xlat
lods
jo
xchg
pop
mov
xor
das
xchg
ja
mov
addr16
fmull
jae
out
int3
js
push
in
movsb
in
dec
dec
aas
jecxz
int
sub
mov
orl
and
mov
adc
sub
xchg
les
aaa
or
and
add
call
mov
iret
fwait
xor
adc
lret
mov
jge,pt
push
and
mov
mov
icebp
notl
mov
dec
enter
incl
inc
mov
push
mov
mov
dec
add
outsb
push
loop
clc
xor
bound
xchg
rclb
fisubs
ficomps
inc
je
mov
and
mov
dec
sbb
jp
in
ja
ljmp
and
xor
lahf
in
xor
stos
add
call
lods
aas
jmp
les
xor
mov
cmp
in
jge
cld
cmp
xchg
adc
push
leave
or
sbb
rol
xor
pop
test
xor
adc
mov
pop
dec
mov
xlat
pop
in
lret
dec
xchg
and
push
cmc
aaa
or
mov
sti
mov
arpl
or
cmc
cmp
adc
fldpi
pop
and
fwait
jmp
sub
and
dec
xor
out
inc
jo
addr16
mov
sahf
sub
mov
iret
test
cmc
add
call
das
mov
inc
aaa
sub
ficompl
mov
mov
out
sub
or
pop
sar
xchg
xor
adc
out
addb
imull
loopne
std
pop
add
mov
inc
nop
jae
imul
ja
iret
cmp
lods
scas
jns
xor
adc
adc
cmp
lcall
scas
ljmp
and
mov
fistps
cmp
push
pop
das
sub
add
call
fidivs
mov
clc
cs
push
or
inc
jp
loop
xchg
add
add
andb
popa
sti
out
imul
bound
inc
mov
push
mov
ljmp
in
outsl
fwait
cmp
decl
push
mov
mov
adc
lcall
ja
loopne
ljmp
out
jo
repz
outsb
adc
adc
jecxz
lret
xchg
mov
mov
scas
rcrb
call
xchg
stos
and
out
cli
adc
adc
or
push
xor
loope
gs
jnp
mov
mov
and
and
cmc
cwtl
cmp
inc
cld
in
mov
in
daa
lcall
out
imul
or
ret
leave
nop
fsubl
push
andl
mov
inc
pop
mov
ret
mov
les
dec
dec
push
sub
bound
jmp
cmp
insl
add
adc
fdivrl
imul
jle
add
call
mov
fwait
subw
pop
xor
test
xchg
adc
push
jmp
nop
into
fbld
push
pop
popa
push
xchg
cwtl
imull
into
iret
cld
arpl
leave
repnz
jmp
ret
outsb
push
sahf
mov
mov
outsb
outsb
add
sar
lret
xor
jno
pop
pop
cmp
jmp
icebp
push
push
in
notl
scas
movsb
cwtl
sub
rcrb
fucomi
mov
pop
loop
mov
mov
adc
pop
gs
cmp
add
call
mov
cwtl
inc
addr16
ljmp
xor
shll
xchg
addr16
xor
inc
xor
sbb
inc
fnstenv
insb
jbe
mov
fcompl
or
mov
cltd
in
mov
mov
inc
cmp
sub
sbb
mov
xchg
roll
jnp
and
jle
mov
bound
push
out
clc
imul
pop
or
aas
fadd
sti
xor
xor
mov
add
call
out
cltd
or
jp
add
pop
pop
adc
or
aam
inc
xlat
inc
data16
mov
mov
mov
lods
ss
mov
imul
data16
gs
insl
sti
cltd
push
or
insl
cld
pop
jno
push
hlt
fwait
and
testl
adc
ja
cmpsb
jmp
add
sbb
inc
bound
inc
dec
mov
in
bound
movsb
dec
sbb
xor
pop
sub
setne
in
xlat
insb
xor
mov
mov
add
call
fwait
cltd
repnz
and
repnz
pushf
push
lahf
cwtl
daa
pop
into
sub
movsb
lahf
push
xchg
push
mov
xor
movsl
leave
mov
mov
jp
mov
loopne
mov
dec
movsl
aaa
enter
orb
cmc
cmp
inc
push
inc
data16
dec
insl
xlat
dec
mov
mull
nop
mov
bound
fnstenv
pop
xor
mov
mov
cmp
adc
fistps
or
int3
jb
imul
call
xchg
dec
daa
pop
and
add
int3
jnp
cmp
rolb
jmp
lods
ss
fisttpl
loopne
mov
icebp
lea
mov
dec
mov
ret
mov
or
jp
mov
push
les
scas
mov
mov
call
jmp
in
xchg
dec
or
add
jns
or
xor
test
pop
pushf
hlt
mov
fwait
xacquire
daa
lock
push
inc
ret
and
add
call
mov
pusha
shlw
fwait
and
je
sbb
aaa
and
add
rcr
jb
lcall
fbstp
ljmp
fsubrl
mov
sub
divl
fwait
jl
mov
pop
popa
sar
push
cmp
mov
add
enter
jg
inc
loopne
lock
sarl
pop
mov
jb
push
mov
sbb
push
mov
cltd
mov
cmp
cmp
lret
or
or
push
ret
cld
sub
out
ret
sub
add
call
cmpsb
call
xchg
and
cmc
jmp
push
mov
call
imul
in
out
sbb
cli
ficoml
in
fs
addr16
mov
leave
push
mov
cmp
test
or
jle
add
push
in
mov
pop
jbe
dec
lock
sbb
and
out
pop
lods
sbb
dec
testl
lahf
sbb
ret
mov
notb
dec
pushf
mov
out
adc
call
scas
mov
mov
jmp
sbbl
dec
mov
pushw
mov
pop
popf
jecxz
push
add
sbb
pushf
into
popf
scas
pop
mov
pop
mov
or
das
out
xchg
rep
fwait
xchg
push
movsl
jo
imul
mov
mov
loopne
in
sub
loop
cs
xor
pop
or
cmp
loop
sbb
sub
cltd
loope
push
xchg
dec
aas
add
call
and
jne
fistpl
imull
inc
cmp
rcrb
pop
jne
jbe
sub
mov
outsb
dec
mov
outsb
movsb
adc
sub
int
test
aas
or
sti
popa
lea
lock
mov
std
cwtl
aas
pop
shll
fcompl
jns
jb
and
cld
pop
wrmsr
xor
xchg
pop
nop
cmp
xchg
adc
and
lds
movsb
xchg
sub
jle
jp
mov
pop
dec
jmp
cli
xchg
scas
pop
arpl
or
add
call
push
nop
icebp
mov
push
xor
jb
int
and
sub
mov
mov
popa
push
cmp
imul
js
add
xchg
mov
pusha
cltd
jmp
sbb
cmp
dec
ds
cmp
adc
and
test
cmpl
outsl
in
mov
pushf
in
jbe
fwait
imulb
js
shll
xchg
cmp
lds
fcompl
repz
in
mov
insl
cmp
jmp
cmp
add
pushf
mov
adc
add
call
mov
iret
add
mov
arpl
jl
and
pop
mov
jle
mov
pop
mov
ds
scas
jnp
pop
out
cmpb
or
lods
xchg
pop
fdivrl
mov
mov
adc
jl
inc
pop
pop
mov
jne
fistps
les
xchg
jo
sub
daa
adc
sbb
mov
mov
rolb
shl
inc
inc
mov
lock
cmp
mov
mov
sub
call
ljmp
inc
and
sti
adc
subb
mov
inc
inc
xor
jl
out
ds
cs
test
ret
aad
int3
adc
lcall
mov
sbb
xchg
sub
lea
out
xchg
into
pop
xor
xor
fidivs
clc
jae
push
stos
es
sub
inc
aam
jmp
inc
arpl
or
push
cmp
dec
push
mov
fdivrl
xor
add
call
dec
push
xor
jmp
sub
rcrl
mov
dec
jp
mov
cmpsb
pop
adc
push
scas
pop
mov
mov
scas
xchg
leave
bound
fisttps
pop
loope
pop
movsl
cs
sub
pop
shlb
and
xor
mov
out
movsb
pusha
sbb
push
jecxz
pop
mov
scas
sbb
les
push
jns
cwtl
push
out
sbb
add
mov
ficomps
push
data16
ret
aas
sbb
das
out
xlat
add
call
in
fwait
cmp
sbb
test
scas
or
add
pop
outsb
test
adc
xchg
jg
xor
subl
cltd
and
insl
fstpt
andl
push
cmp
ljmp
cmc
shl
rcll
dec
sub
fwait
insb
pop
data16
sbb
push
mov
xor
popf
sbbb
push
xchg
out
jnp
popa
lret
rcrb
push
adc
sti
mov
orl
push
fs
add
call
xchg
mov
mov
jnp
add
push
cmpsb
xchg
pop
jo
lock
jne
xchg
mov
testb
stos
ret
out
out
outsb
loopne
dec
pop
fmul
lea
clc
mov
pusha
or
mov
mov
jg
je
push
and
int3
mov
test
pushf
jnp
stos
rcl
or
or
out
adc
lea
out
and
mov
gs
hlt
mov
out
rcl
dec
add
out
mov
xchg
rolb
call
divb
cmp
shr
adc
pop
mov
add
cmp
dec
ljmp
out
outsb
cwtl
jle
pushf
std
out
ja
mov
mov
popf
subb
push
cmp
call
add
aad
jno
enter
ds
jmp
mov
adc
testb
jae
lret
jge
xor
cmp
int
sub
roll
xchg
mov
movsb
push
and
sbb
cmpsb
mov
call
push
jbe
std
adc
std
adc
movsl
inc
mov
add
call
xchg
mov
push
cmpsl
mov
push
mov
and
jno
sarb
cmpsl
jle
or
out
gs
or
repnz
xchg
cmp
loope
dec
mov
cmp
jp
aad
das
into
inc
dec
sub
imul
fs
sbb
cs
push
pop
or
mov
arpl
jae
inc
cmp
fidivrs
pop
xor
lds
push
mov
or
jae
clc
cwtl
mov
push
movsb
pusha
and
and
cmp
push
mov
outsb
mov
mov
call
pushf
lret
xor
add
jne
gs
bound
jbe
cltd
mov
mov
cmc
jo
ljmp
inc
xlat
adcb
shrb
pop
stos
dec
lods
inc
pop
push
push
mov
nop
dec
out
sbb
sub
mov
cmp
cmp
xchg
push
shrl
dec
mov
testb
inc
xor
mov
ret
jp
inc
add
lcall
xchg
inc
addr16
in
loopne
cld
and
inc
or
lret
cmp
xchg
js
add
call
aam
nop
cmp
xlat
popa
cltd
xor
sub
push
idivl
xchg
jmp
and
test
sbb
or
add
inc
xchg
jno
mov
push
orb
jl
scas
mov
in
addr16
pop
dec
scas
pop
out
popa
cs
lcall
pop
adc
push
addb
idivl
inc
popf
movsb
sub
insl
popf
lock
push
insl
scas
mov
sahf
imul
jl
and
push
jno
adc
call
add
cld
fidivrl
sti
add
push
loop
fisttpl
and
sahf
jo
call
adc
mov
mov
pop
inc
daa
mov
pop
mov
mov
mov
lret
clc
fildll
dec
aaa
lods
and
fbld
stos
std
xchg
jmp
sbb
sbb
add
lahf
pop
xor
lds
xor
lret
rcrl
ljmp
pop
dec
lcall
pop
out
sbbl
bound
add
call
adc
inc
stos
imul
fistpl
add
stos
jo
lret
mov
xor
adc
popw
ret
repz
inc
xchg
jae
sub
lods
sarb
repz
repnz
aas
pop
push
jne
dec
jg
daa
add
cmc
jge
mov
mov
fxch
enter
jb
jl
sbb
rolb
or
push
mov
lods
and
dec
push
xchg
stc
scas
pushf
mov
into
jp
inc
sub
das
push
jnp
mov
dec
scas
testl
call
cmp
cmp
out
push
ss
cli
mov
movsb
mov
sbb
rol
push
std
lea
pop
push
inc
mov
dec
ja
test
mov
ljmp
xchg
ja
les
jecxz
in
imul
xchg
test
jecxz
inc
je
jge
lret
pushf
mov
inc
je
pusha
or
test
lods
sub
leave
mov
mov
pop
push
test
xchg
shlb
jbe
aam
mov
add
xchg
jmp
call
pop
lds
jno
leave
jp
push
xor
jmp
jns
dec
cltd
adc
call
and
push
xor
out
xchg
push
fs
mov
mov
das
push
cmpsl
ss
add
test
jl
adc
mov
cltd
and
cmc
mov
xor
xchg
fnstsw
mov
mov
shlb
hlt
clc
jae
cld
dec
pop
sub
orb
jne
add
int3
dec
mov
loope
jmp
mov
fisttpll
add
call
shll
aas
jb
mov
je
xor
sti
or
int3
fbstp
sub
daa
push
movsl
lds
std
nop
xor
stos
or
in
mov
insb
mov
fcmovbe
sub
out
cmc
or
popa
popf
adc
les
sub
js
inc
mov
mov
test
clc
mov
sbb
test
fs
rolb
sub
jl
dec
sbb
xchg
rcr
sbb
dec
jle
cmp
cltd
jae
or
cmpsl
lcall
call
lar
repnz
adc
pusha
stc
mov
cmp
pop
rcrl
xlat
shll
mov
lret
test
push
jp
repnz
sub
rcll
mov
or
fs
cmp
cli
iret
into
rcrl
dec
stos
xchg
xor
scas
xchg
xor
aam
movsb
adc
enter
jnp
or
cmc
jb
nop
push
xor
shl
inc
sarl
xor
jns
and
mov
into
pop
divl
pop
psubsw
add
call
cltd
enter
xchg
jno
sahf
push
jns
jo
mov
mov
int
adc
sbb
pop
movsl
sbbl
add
dec
cmp
xchg
inc
inc
pusha
add
lahf
cmp
pusha
call
mov
aas
insl
adc
cmp
andb
dec
and
mov
pop
lds
xlat
xor
lret
shl
mov
and
push
popa
jg
repnz
imul
andb
cmpsl
dec
cltd
test
mov
leave
mov
fwait
add
call
std
dec
cmp
fimuls
popa
push
mov
ss
int3
or
jo
xchg
cmp
push
sbb
outsl
sarl
xor
bound
call
sarl
das
mov
aas
std
es
aam
rcr
bound
clc
stc
cmpsl
test
xor
add
mov
xchg
out
lret
pop
test
clc
lret
xor
or
loopne
orl
mov
dec
sub
mov
mov
cltd
jg
adc
fincstp
repnz
xor
test
add
call
repnz
jecxz
lods
sub
arpl
xor
cmpsl
xchg
loope
cmpsb
mov
mov
movsb
fdivp
clc
mov
push
cmp
and
or
fmul
and
pop
test
sti
sbb
rcrb
enter
fmuls
push
insl
shrl
test
addr16
adc
insl
adc
fsubrl
subb
mov
jmp
jb
pop
mov
popf
cltd
addl
call
dec
test
inc
cwtl
insb
rcrl
gs
pop
add
call
in
dec
sarl
cmpl
mov
xchg
cmpsb
mov
stc
xor
data16
stos
xchg
cltd
jl
cmc
shlb
cmp
sub
mov
adcb
and
loopne
push
aaa
scas
mov
scas
inc
xchg
outsb
fadds
push
aaa
push
dec
inc
stc
jbe
movsl
dec
mov
sbb
popa
mov
loope
xchg
in
mov
fisubs
sub
or
xor
jp
into
sbb
mov
insb
stos
orb
adcl
jne
add
call
sbb
push
adc
mov
cmpsl
sahf
xchg
subb
push
pop
sub
mov
sub
inc
js
fs
incb
stc
fldcw
icebp
mov
aaa
add
fwait
nop
ret
inc
jmp
ljmp
into
insl
cmp
cmp
xor
fsubrs
outsb
pusha
movsl
popa
xor
std
lahf
push
pop
mov
jl
cltd
cwtl
cmp
pop
sahf
or
push
cli
sub
sarb
pushf
xor
xchg
popf
add
iret
in
pop
ds
inc
out
adc
call
xchg
mov
pop
call
sti
iret
and
sub
adc
sbb
xchg
xor
lret
adc
mov
mov
jo
cmp
dec
ds
dec
in
mov
scas
and
cmpb
lahf
xchg
out
cmp
sbb
int3
xchg
or
out
add
pop
cmpsb
mov
pusha
in
adc
stos
incl
inc
fs
mov
jno
jecxz
cwtl
out
stos
pop
fwait
jae
or
pushf
add
call
addr16
dec
lds
inc
aas
sub
mov
loope
inc
cmp
push
add
sbb
scas
faddl
push
cmp
imul
or
mov
xchg
lock
scas
divl
and
mov
and
pushf
mov
push
dec
es
inc
jecxz
jmp
push
icebp
mov
ja
sbb
in
cmp
push
imul
sbb
mov
lret
sbb
leave
pop
inc
sbb
add
cmp
add
call
je
fildl
or
jl
leave
mov
xchg
daa
add
in
push
mov
jmp
push
sbb
cmp
cwtl
int
fs
movsl
jmp
nop
add
jecxz
pop
add
int3
mov
mov
cmp
insl
in
push
iret
inc
lahf
and
xchg
out
jle
insb
jo
mov
stc
in
xchg
cmp
adc
ss
pushf
jns
adc
push
and
jl
fsubrs
sahf
add
xor
jecxz
cmpl
stc
jg
mov
and
call
adc
les
ja
mov
inc
or
subb
arpl
xchg
inc
and
ret
mov
cmp
in
outsb
dec
or
js
iret
add
xchg
ja
or
div
clc
je
lock
testl
out
or
ficompl
xchg
dec
cmp
jae
jecxz
call
dec
testl
push
imul
jge
ja
out
mov
movsb
test
lcall
in
xchg
das
fnsave
insl
add
call
ja
inc
lock
mov
lods
push
or
push
adc
xchg
out
pop
adc
into
andl
xchg
add
cmpsb
sbb
mov
incl
mov
push
cs
cmp
fs
and
add
adc
hlt
mov
dec
cmp
insl
je
cmp
test
mov
insl
add
arpl
lds
pusha
aas
mov
lods
jnp
daa
sub
sub
test
pop
mov
fcoml
sbb
add
call
dec
mov
sbb
ficomps
ljmp
sbb
cli
rcr
in
pop
sbb
jnp
push
test
adcb
sub
sbb
iret
push
jecxz
jnp
xchg
sub
scas
lahf
ret
mov
sub
nop
in
test
or
mov
in
test
iret
sbb
pop
sub
dec
and
repnz
test
aad
int
hlt
pop
fsts
push
xchg
xchg
push
adc
pop
add
call
pop
sti
mov
fistps
ss
pop
sub
and
sbb
adc
jb
adc
aad
cmc
pop
pop
adc
hlt
inc
xchg
std
inc
jne
inc
or
and
ja
addb
mov
push
test
dec
sub
rorb
xor
add
mov
xchg
stos
cmpsb
sbb
cmp
popa
xor
lret
das
xchg
test
mov
imul
pop
jae
fs
mov
stc
mov
arpl
add
call
and
inc
mov
and
outsl
or
dec
inc
subl
rcpps
insb
cwtl
fcoms
loop
push
and
add
cmc
xchg
sbb
jecxz
cs
fildl
pop
pop
push
rcl
pushf
ret
cmp
push
push
clc
inc
ja
jnp
outsb
leave
lods
xchg
add
mov
aam
pop
jne
xlat
adc
jp
or
addr16
call
jmp
movsb
add
shlb
xor
fs
inc
dec
sti
cli
pop
xchg
add
jg
jle
add
call
mov
sbb
insl
ret
orb
aad
push
lahf
inc
mov
mov
rclb
cli
sbb
jmp
or
xor
mov
jle
and
jbe
dec
outsb
sbb
pop
add
in
mov
repz
mov
iret
xorl
loop
movsl
mov
push
mov
xchg
fdivrp
out
dec
adc
loopne
pushl
inc
fsubrs
roll
outsb
lahf
sub
ljmp
call
sarb
pop
les
mov
addr16
mov
pusha
das
cmp
data16
xor
popf
bound
push
and
push
jne
and
ret
out
xchg
ja
xor
xchg
cwtl
adc
dec
jle
addr16
aas
and
jecxz
inc
out
xor
pop
mov
xlat
out
insl
jg
aas
shll
inc
xchg
sahf
sbbb
inc
sti
pop
in
push
cmp
jl
mov
sbb
dec
xorb
leave
int3
rcll
enter
jl
ss
pop
int3
movsb
fdivl
push
add
call
mov
mov
push
test
scas
and
push
push
icebp
pusha
dec
std
arpl
add
ret
add
jp
cmp
neg
icebp
xor
or
xor
jle
pop
das
xor
int
xchg
ret
adc
fisubrl
inc
mov
inc
es
shll
sti
les
sub
mov
or
pushl
stc
decl
test
mov
mov
mov
xor
test
push
cwtl
jmp
arpl
add
call
sub
lods
inc
cld
dec
pushf
fnstcw
lds
pop
or
cmp
in
push
mov
or
enter
add
mov
lret
inc
jb
mov
push
push
xchg
push
in
cld
xchg
jecxz
in
push
push
mov
loope
dec
lcall
sub
inc
mov
ja
ficomps
js
jnp
and
das
test
mov
es
dec
arpl
fs
movsl
jnp
or
subl
stc
xorl
add
call
hlt
pop
cmp
aad
popf
push
add
push
shlb
loop
sarl
sub
mov
fsubrp
aas
andb
push
in
or
jmp
subl
test
push
dec
push
mov
cmp
push
add
cwtl
inc
cmp
std
push
nop
pop
das
xlat
push
movsb
xchg
sbb
outsb
inc
or
dec
pusha
mov
jecxz
mov
cmp
xchg
mov
ds
dec
sbb
sub
aad
lods
jbe
xchg
pop
jmp
sbb
push
add
call
xchg
pop
sbb
shlb
cmpsb
aaa
fdivrl
sbb
mov
imul
sbb
in
mov
sub
imul
adc
xor
sub
loopne
push
xchg
sbb
push
lcall
jne
notb
xchg
and
and
push
inc
ljmp
add
xlat
fucom
mov
insb
cmpsb
lods
ljmp
lret
mov
repnz
push
lds
adc
mov
add
loope
push
sub
pop
xor
mov
icebp
movsb
loopne
outsl
mov
sub
fiaddl
add
call
adc
test
scas
mov
cmp
testl
and
cmc
xchg
loope
push
inc
jl
rcrb
lea
dec
cltd
stos
adc
incb
pop
sti
add
ss
jb
arpl
push
mov
fstpl
cs
pushf
fistpl
push
pop
arpl
jecxz
xchg
or
xchg
add
mov
test
mov
sti
push
shrb
inc
lods
cwtl
add
push
xor
mov
xchg
enter
pop
test
mov
add
call
mov
dec
xchg
lods
movsl
and
pusha
rolb
lds
je
aam
push
test
dec
xor
das
fldpi
xchg
xor
push
mov
push
and
mov
inc
cmc
mov
add
insb
int
pop
fstpt
ljmp
and
ja
jns
cltd
andb
loope
ss
loope
adc
fwait
mov
adc
jae
out
movsl
push
pop
xorb
xchg
sbb
add
call
jo
xchg
cmc
or
aad
push
xor
das
jp
mov
add
sub
cltd
lahf
xor
push
pop
adc
add
sbb
jb
sbb
loopne
sub
sbb
cli
int
inc
lss
add
push
mov
adc
mov
sub
pop
xor
add
push
lds
mov
push
and
iret
iret
test
inc
mov
cmc
dec
sbb
xor
std
bound
add
call
xchg
sbb
jb
xorb
fsubs
mov
push
sub
or
or
pop
ljmp
inc
sbb
push
fisubrs
jmp
and
pushf
das
sti
inc
cmpsl
sbb
pop
adc
dec
clc
loope
js
cmp
xor
pop
jmp
mov
fsubs
xchg
or
sbb
xchg
xchg
xchg
sbb
int
push
ljmp
xor
rcll
in
cmp
dec
nop
jmp
mov
xor
add
call
xchg
pushf
jp
int
ds
out
cmpsb
or
push
mov
add
xor
adc
jb
testb
dec
out
pop
push
imul
push
clc
pop
fidivrl
xchg
in
jb
filds
sbb
icebp
xchg
add
pop
xor
scas
iret
xchg
pop
movl
push
xchg
sbb
dec
aaa
inc
pusha
push
cwtl
int
inc
in
inc
lock
adc
dec
dec
dec
cmp
dec
arpl
insl
cwtl
pop
in
jl
add
call
mov
lds
xor
mov
test
clc
xor
mov
cmp
pop
ss
lds
outsl
aad
mov
data16
or
imul
push
mov
jmp
cltd
sbb
repz
and
pop
pop
and
insl
orl
add
fisubl
sub
cmpsb
outsl
pusha
insb
mov
mov
rclb
inc
lods
add
jmp
add
subl
dec
push
inc
loopne
imul
data16
sbb
int3
outsl
mov
call
mov
xor
sbb
adc
adc
sub
jno
push
xchg
xor
jmp
pop
push
out
outsl
lods
movsb
cmp
dec
leave
dec
sti
xor
pop
das
mov
mov
inc
lock
out
dec
and
and
aam
shrb
hlt
cmp
xchg
add
mov
mov
push
xchg
add
test
or
jp
xchg
mov
fildl
adc
pop
add
jge
jl
or
add
call
xchg
insb
inc
fildll
sahf
pop
push
ret
popa
or
movsl
add
dec
flds
xchg
push
hlt
sbb
mov
and
rol
bound
dec
mov
xchg
jb
outsl
lock
add
inc
add
push
sub
jmp
inc
xor
shrb
ds
adc
push
mov
ds
cmpsl
push
clc
mov
cmp
daa
in
daa
loope
rcrb
js
sub
xchg
shr
mov
pop
and
mov
out
mov
test
repnz
call
stc
loope
movsl
scas
xchg
orb
cs
and
out
adc
inc
mov
cld
ljmp
cwtl
mov
mov
mov
mov
sub
scas
ret
fistps
pop
adc
jecxz
mov
mov
movsl
std
jae
les
push
or
xchg
push
or
push
xchg
ss
cmpsb
outsb
jge
inc
xor
addr16
xor
enter
xchg
push
clc
cmp
movl
add
call
sub
popf
and
jne
jecxz
or
sub
loop
and
mov
sub
sub
pop
sbb
movsl
mov
xlat
xchg
sbb
xorb
outsl
cs
and
jae
out
repnz
out
mov
popf
sub
movsb
adc
das
push
jle
insb
scas
ss
and
mov
cmpl
mov
pop
in
or
fadds
adc
loop
int
data16
xchg
test
push
rorb
cmpsl
gs
ss
rorb
and
call
sub
pop
sbb
mov
lahf
cltd
push
sub
jnp
nop
mov
js
test
sub
xchg
or
push
dec
xchg
fldenv
fs
stos
loop
xchg
inc
cmp
xchg
or
in
shlb
jecxz
lods
jnp
sahf
scas
jle
mov
je
shrb
ja
nop
cwtl
push
xor
test
mov
cmp
iret
and
jecxz,pn
xchg
js
push
fcmove
mov
fwait
xchg
fisubl
icebp
adc
das
cmp
call
call
push
jno
std
jne
fs
xor
bound
icebp
enter
daa
sbb
mov
sub
cwtl
adc
mov
push
in
repnz
jp
int
in
xchg
jno
fcomps
cwtl
jbe
push
int
push
lret
outsb
add
dec
sub
fsubrl
mov
sbb
inc
fildll
out
sbb
gs
std
subb
daa
mov
mov
mov
add
scas
xor
stos
and
jmp
pop
xchg
xchg
and
adc
in
push
pushf
fs
mov
sarl
sub
add
call
mov
mov
push
imul
loop
out
sahf
xchg
push
xlat
fidivrl
sbb
jmp
cli
xchg
pop
shll
test
popa
dec
cmp
mov
orb
test
jno
in
cmc
mov
fdivl
mov
sahf
int
push
call
mov
sub
xchg
sub
gs
fisubs
jmp
sahf
jg
dec
push
or
ljmp
jmp
lds
je
jo
jo
sub
add
call
dec
ljmp
add
in
clc
orl
test
cmp
loope
dec
sub
clc
out
lds
push
push
or
lret
fiaddl
ss
and
insb
xchg
add
je
nop
cmp
mov
or
jo
mov
leave
repnz
lea
ljmp
pop
push
ljmp
test
subl
sbb
mov
inc
xchg
aad
xchg
mov
jbe
je
xchg
mov
in
call
add
call
orl
in
cmp
adc
pop
imul
inc
fwait
stc
mov
adc
push
inc
imul
xor
sarb
mov
xor
cltd
pop
jmp
ja
movsb
xor
mov
cmp
and
les
adc
js
push
jle
call
xor
jbe
arpl
jecxz
fisttpll
jmp
push
daa
or
popf
mov
aam
sbb
adc
das
popa
repz
mov
aad
cmp
add
call
icebp
jne
into
nop
pop
outsb
clc
fldt
loope
lahf
inc
cmpsl
inc
pop
pop
imul
int
xor
pushf
pusha
dec
lea
cmpsl
aas
sbb
out
mov
add
lret
sbb
cltd
ss
aad
ret
testw
mov
inc
push
test
in
or
or
test
jg
add
out
fs
cmp
dec
mov
cltd
mov
aam
mov
jle
mov
in
jns
cltd
lcall
imul
dec
inc
add
call
ret
sarb
jecxz
mov
das
clc
dec
jnp
xor
mov
shlb
sub
cmp
jae
fisubl
xlat
sbb
out
xorb
test
test
sbb
dec
ret
in
es
xor
rcrb
ss
inc
cmp
jge
pushf
mov
cmpsb
cs
push
pop
cwtl
lds
dec
xorb
cld
jns
stos
test
or
movsb
das
push
cwtl
ljmp
lods
jmp
fisttpll
cmpsl
sub
add
call
imul
lahf
mov
inc
and
lea
pop
jmp
test
movsl
xor
push
lret
out
inc
cs
or
popf
or
xor
inc
rclb
sub
jnp
and
mov
cmpsb
aaa
in
dec
scas
insl
jp
pop
addb
clc
cmpsb
and
adc
or
loope
out
sahf
pop
pop
test
dec
aas
inc
and
scas
inc
repnz
inc
xor
in
mov
or
sbb
out
xor
and
push
mov
call
repnz
imul
pop
adc
adc
dec
je
lock
adc
ret
stos
mov
dec
imul
push
negb
mov
cmp
repz
and
push
cmp
pop
ja
int
scas
rcrb
cwtl
ds
mov
fimuls
enter
movsl
stos
int
ds
xchg
imul
lret
sahf
fwait
ret
push
xchg
xorb
or
mov
mov
outsl
jb
test
popa
xor
add
call
or
push
ljmp
out
xchg
add
pop
adc
imul
xchg
cmp
cmovnp
insl
jge
inc
rorb
add
cli
pop
mov
cwtl
xor
pop
fldt
mov
loop
push
ret
movsb
lret
fldenv
dec
fsubs
aam
xchg
jns
sbb
out
loopne
scas
xchg
jae
cmc
mov
test
sbb
mov
out
cs
pop
pusha
imul
rorl
add
sub
rcll
out
sbb
add
call
cwtl
dec
ljmp
decl
or
mov
popf
sub
into
jb
stos
xchg
jbe
adc
sahf
fbld
mov
movsl
addl
out
add
into
sbb
fs
cmp
repnz
fsubs
lods
popf
xor
cmp
sahf
xchg
popf
fidivl
enter
inc
inc
cmp
lcall
repnz
pop
or
sub
pop
dec
jmp
cmc
pop
aam
int3
cltd
scas
xor
pop
mov
jns
sub
or
mov
mov
add
call
bound
mov
cmp
jbe
push
jl
sub
xchg
jo
push
inc
loop
sbb
inc
inc
loop
out
mov
mov
mov
ja
adc
fcoml
mov
repz
jae
sub
or
xor
jmp
xchg
inc
nop
mov
lds
repz
shll
pop
gs
adc
inc
ror
pusha
aad
fdivp
ret
dec
fnsave
dec
add
xlat
push
adc
sti
and
xor
pop
in
cmp
pop
dec
pop
aas
in
add
call
popa
lods
mov
clc
or
cs
cmp
repnz
dec
hlt
int3
andl
in
cvtps2pd
push
jno,pn
js,pn
xchg
mov
dec
mov
xchg
mov
dec
sahf
cwtl
dec
sbb
xchg
jb
lock
sbb
call
dec
std
pusha
outsb
mov
adc
xlat
sbb
sbb
inc
sub
mov
dec
in
xor
mov
add
or
mov
dec
ret
mov
push
gs
mov
add
call
adc
sub
jno
xor
out
mov
or
push
stc
fstpl
mov
jecxz
imul
scas
jo
xchg
push
xlat
adc
movsb
fnstenv
and
xor
repz
lea
dec
dec
jle
xor
mov
inc
add
pop
jge
pushf
mov
mov
xabort
dec
arpl
jl
push
cmp
fs
mov
xor
lea
fimull
scas
jp
andl
aad
mov
mov
or
ds
ret
cwtl
add
call
mull
sahf
les
imul
mov
mov
add
fdivs
mov
mov
mov
push
sub
pop
int
aam
dec
cmp
inc
jno
mov
mov
and
outsb
xchg
out
je
das
mov
aas
inc
fidivrs
int3
dec
gs
add
ds
cmpsb
daa
call
xor
scas
sbb
adc
xchg
adc
xor
lret
loope
push
stc
cmp
enter
xor
rclb
leave
mov
add
call
mov
je
notb
aaa
iret
mov
mov
insl
fcoms
cmp
pop
les
shlb
pop
popa
mov
ret
int3
pop
maskmovq
in
js
scas
lea
in
inc
xor
mov
jge
xchg
fcompp
aam
enter
mov
push
fs
dec
out
pop
nop
inc
xchg
xchg
aas
popa
push
and
add
test
cmpsl
fimull
or
sub
fadds
stc
xchg
add
call
call
jns
fdivl
jmp
sbb
jecxz
inc
pop
jge
out
xchg
movsl
lret
fnstsw
inc
scas
sbb
mov
aas
mov
push
arpl
xchg
xchg
daa
cmp
dec
lods
sahf
fildl
sbbb
cltd
push
ja
lret
jbe
lea
push
cmpsl
jecxz
fisubl
movsb
aad
decb
mov
mov
mov
cmp
sbb
jbe
mov
es
ljmp
sarl
btc
call
add
call
ret
lret
jg
mov
jbe,pt
xlat
imul
and
loop
cmp
insl
loopne
test
xchg
inc
jge
fbstp
push
mov
gs
mov
aaa
int3
push
fsubr
arpl
ljmp
or
stc
or
sahf
lock
mov
adc
mov
test
testl
je
jp
movsl
pop
xor
push
das
es
lcall
dec
mov
or
orl
jp
sarl
add
call
mov
push
add
jmp
pushf
les
stc
leave
mov
sbb
xor
lods
adc
sarb
jns
pop
daa
insl
std
mov
pop
ss
outsb
movsb
loop
mov
rorb
xor
sub
fcmovne
in
popf
lods
hlt
leave
lcall
test
adc
sti
sbb
lcall
mov
mov
or
ss
repz
callw
fiaddl
add
call
std
rcl
ds
leave
jmp
out
movsb
cld
and
mov
push
iret
scas
inc
jl
in
push
jno
push
out
adc
orps
inc
lods
xchg
inc
testb
pop
enter
aaa
mov
mov
aaa
pop
das
inc
ljmp
and
jmp
stos
into
xor
arpl
enter
mov
loop
mov
arpl
sbb
in
aam
inc
cs
sub
jae
lock
cli
jo,pn
jecxz
rolb
cwtl
jo
or
add
call
outsl
cmp
xchg
cmpsl
mov
pop
out
pop
xchg
inc
pop
in
mov
sti
jge
lods
fldl
add
out
fidivl
sub
push
add
mov
push
fisttps
shll
shlb
sysexit
ljmp
call
lret
adc
xor
nop
addb
out
adc
push
fimuls
mov
xchg
nop
cmpsb
inc
nop
dec
push
push
movsb
mov
test
inc
add
mov
mov
cmp
test
call
mov
and
jno
cwtl
sbb
lods
sahf
pushf
fbld
pop
out
push
ds
in
shrd
cld
enter
or
nop
sbb
lock
ds
movsl
lea
xlat
nop
pop
xor
inc
pop
xor
pop
xlat
jecxz
adc
sbb
and
imull
aam
sbb
mov
mov
or
sarb
pop
dec
mov
lret
inc
mov
fs
mov
inc
push
xbegin
shrb
dec
inc
lods
flds
cmc
pop
xor
out
mov
xchg
scas
add
call
les
push
clc
xchg
aad
sbb
xor
or
std
leave
mov
sbb
lods
pop
es
orl
inc
pop
sub
testb
xor
mov
imul
dec
icebp
bound
add
jl
nop
es
out
clc
add
dec
dec
cwtl
and
jnp
sub
sbb
in
test
jbe
pushf
movsb
fcompl
fwait
inc
ss
js
mov
or
add
call
sub
and
dec
outsb
std
cmp
std
xchg
mov
pop
jno
cld
xor
or
xchg
or
push
or
popl
data16
rorl
nop
inc
inc
inc
aaa
fcmovnu
arpl
xchg
in
sbb
add
dec
dec
or
inc
fs
pop
mov
ja
xchg
dec
mov
mov
xchg
inc
imul
and
sbb
int3
ds
push
sub
dec
pop
icebp
xchg
push
insb
fs
int
bound
xchg
ret
add
call
xchg
or
popf
sub
out
cmp
xor
sub
rcrl
fdivrl
mov
xchg
jg
ljmp
hlt
mov
call
ficompl
cmpsb
jnp
jbe
stc
loop
mov
pop
mov
xchg
mov
push
mov
add
arpl
mov
push
sub
lahf
mov
popa
jno
mov
bound
push
and
shll
mov
add
xor
and
or
jmp
sub
imul
cmpsl
push
sub
or
call
movsl
mov
jno
mov
repz
fst
push
bound
in
jb
and
in
dec
mov
dec
sahf
cmc
push
test
roll
mov
ds
cli
jnp
dec
pop
cmp
loopne
loop
dec
lods
xchg
imul
or
xor
cmp
or
lret
sub
je
jns
pop
int3
filds
lret
cmp
or
sub
pusha
sbbl
pusha
int3
ficomps
sbb
sbb
jb
inc
lahf
in
fcmovu
and
cmp
ret
das
cmp
call
ljmp
negl
fstpl
push
repz
mov
mov
cld
aam
add
test
fwait
mov
mov
test
rcll
dec
loope
ret
shlb
push
pand
les
sub
push
enter
jbe
and
das
test
fsubl
mov
inc
outsl
data16
inc
aas
mov
lds
shlb
xor
sub
inc
push
std
ret
pop
out
scas
dec
movsl
mov
push
popa
xor
and
add
call
lcall
sti
int
testb
in
add
mov
xor
ss
adc
lods
in
test
or
insb
mov
loopne
or
pushf
movsl
jecxz
add
inc
sarb
jecxz
sahf
psadbw
add
enter
repnz
in
lcall
mov
xor
mov
and
mov
mov
sbb
fsts
and
mov
inc
bound
sbb
push
call
jnp
xchg
xchg
inc
push
xlat
xor
pop
sbb
pop
ret
inc
pop
pop
inc
push
insl
dec
push
mov
test
andb
mov
hlt
sar
test
or
icebp
in
mov
add
sub
fstpt
xlat
inc
jmp
jg
mov
add
outsl
sbb
les
sbb
mov
iret
mov
add
je
pop
push
mov
pop
push
bts
cmc
push
fwait
shll
shll
pop
scas
es
jbe
add
call
mov
mov
cmc
fidivl
dec
ds
add
movsb
fidivrl
popf
aaa
ja
and
adc
or
outsb
xchg
imul
lds
and
or
sbb
push
push
mov
cmc
imulb
dec
iret
sbb
jl
and
popa
jno
jmp
icebp
std
jg
sub
in
push
aad
push
sub
inc
sub
inc
add
test
bnd
cmpsl
mov
int3
and
hlt
xchg
mov
mov
pop
sbb
jle
mov
jp
push
or
cmp
call
add
hlt
push
repz
imul
int
ret
sub
push
inc
das
lret
sarl
add
jnp
aas
push
ror
or
mov
push
clc
repnz
adc
jnp
data16
hlt
gs
mov
sub
xchg
jg
mov
sbb
in
or
dec
int3
rcl
out
repnz
xlat
fnstcw
jle
xor
ret
jle
cwtl
cmpsb
adc
and
mov
cmp
call
add
call
test
pop
call
and
lret
enter
mov
pop
fimull
cmp
sbb
orb
test
pop
lods
mov
ret
jnp
lret
shrl
xor
ja
mov
jp
adc
add
adc
sub
outsl
push
mov
pop
fisubs
mov
jle
push
pop
add
ljmp
leave
xchg
cwtl
icebp
in
add
test
add
lahf
clc
jle
mov
aaa
cltd
lcall
cltd
mov
call
andl
pop
cmp
xorl
fst
cmp
add
mov
in
movsb
ret
and
jo
sub
pop
pop
dec
ficomps
xchg
jmp
inc
test
inc
sbb
into
movsl
fwait
lock
cld
mov
lahf
ss
mov
lret
jae
mov
ja
fisttpll
xchg
inc
ss
jnp
mov
pop
aam
pop
inc
cmpl
cltd
adc
mov
test
lods
mov
rolb
call
mov
test
cmc
mov
out
mov
les
mov
movsb
pop
xchg
fcomps
fsts
xchg
adc
lret
jb
mov
insl
cwtl
adc
outsl
and
mov
add
or
js
inc
outsb
in
adc
or
repnz
sbb
mov
mov
xchg
sub
inc
jno
in
mov
jns
or
pop
xchg
xchg
ja
cmp
call
inc
jo
mov
ja
xlat
jo
jmp
jae
pop
add
call
xor
and
pop
cmpsl
xor
adcb
inc
divb
dec
insb
pop
int3
ret
sti
adc
jp
xchg
scas
aas
dec
cmp
adcl
les
loope
mov
xchg
and
loop
xchg
fs
insl
loopne
das
leave
jns
imul
mov
sbb
xchg
sub
negb
mov
pop
divl
mov
test
shr
and
xlat
js
popf
mov
outsl
inc
orb
enter
mov
call
mov
push
mov
xor
daa
ret
iret
xchg
nop
in
sbb
bound
imul
jmp
addr16
inc
xor
mov
test
push
pushf
sti
sahf
mov
cmp
ret
lahf
mov
push
cmpsl
scas
xchg
or
sbb
movsb
fisubs
int
xorl
test
mov
data16
adc
xchg
nop
repnz
imul
push
pop
jp
xor
andb
popf
push
push
nop
test
add
xlat
pop
mov
jge
aad
outsb
add
call
push
mov
inc
xchg
and
mov
ljmp
imul
adc
out
push
sbb
pop
stos
adc
loopne
mov
lods
and
jno
repz
adc
cmp
insb
pop
or
stos
clc
jl
clc
pop
mov
ffree
sub
movsb
add
mov
adc
int
and
cmp
pop
je
jo
mov
es
mov
mov
push
pushf
cmpps
arpl
dec
dec
xor
add
call
push
scas
dec
cs
dec
or
scas
fcompl
scas
outsb
xor
sti
cwtl
add
xchg
fs
mov
popa
test
cld
je
jae
cmp
adc
add
mov
xor
xor
pop
cmp
test
pusha
mov
sbb
jo
lret
test
aad
cld
outsl
inc
in
addr16
ret
call
outsb
test
lret
or
jmp
add
movb
leave
in
sub
mov
and
and
je
mov
add
call
sub
add
adc
xchg
inc
adcl
fisttpl
outsl
xor
loop
mov
sahf
jnp
mov
shlb
jge
xor
mov
mov
add
lds
and
cmp
adc
mov
jl
ret
jge
daa
rep
sbb
std
push
add
dec
xchg
mov
popf
and
push
adc
or
sub
sbb
lcall
jnp
aam
ja
sbb
add
add
call
jne
gs
lcall
lock
stos
in
add
mov
leave
sbb
sub
mov
lods
in
aam
mov
arpl
mov
or
push
mov
mov
fstpl
lcall
add
lahf
scas
or
xor
outsl
enter
cmpb
and
lcall
adc
pushf
xor
add
adc
in
mov
fcmovnbe
xchg
rcll
jnp
and
aam
sti
or
test
or
test
and
add
call
or
cmp
popa
sub
or
filds
jae
sub
jle
imul
mov
or
mov
cmp
inc
xor
xor
mov
inc
jecxz
and
loope
iret
in
sbb
testl
or
add
sub
clc
mov
jbe
mov
call
hlt
cmp
loop
fs
mov
or
and
adc
fnstenv
add
inc
xor
add
call
scas
mov
pop
repnz
push
addb
jge
out
sahf
popa
xchg
jmp
in
inc
jge
sbb
fwait
and
dec
icebp
or
xchg
sub
fsubs
xor
testl
mulb
sar
mov
aam
xorl
jmp
cmc
subl
and
cmp
cmp
and
out
stos
nop
push
mov
mov
shl
aam
daa
subl
ja
sarl
jns
xchg
ds
mull
cwtl
stos
into
fs
and
ss
call
icebp
sub
sub
cmp
adc
sbb
fistpl
sub
or
jl
imul
jge
sub
movsb
mov
jb
insl
sbb
mov
iret
repnz
data16
cmpsb
or
mov
push
fdivl
mov
dec
xchg
sub
inc
popf
push
inc
scas
loopne
mov
mov
aaa
je
mov
xchg
les
jne
xchg
add
in
sarl
mov
push
mov
clc
mov
xchg
mov
call
pop
orl
jbe
xchg
mov
testb
cli
pop
cs
cmpsb
adc
push
inc
mov
lahf
lods
movsb
mov
fcmovb
dec
lods
scas
loop
movsb
xor
dec
ljmp
jnp
adc
test
sarl
clc
pop
outsl
outsl
fwait
mov
mov
leave
jbe
rcrl
fstpt
pop
inc
or
jl
cmp
or
dec
cmp
addb
xchg
xchg
and
popa
mov
jmp
xor
add
call
xor
sarb
cltd
clc
xor
jo
mov
movsb
in
movsl
inc
push
repz
rol
pushf
sub
aam
in
lods
fimuls
mov
jb
iret
cmp
and
hlt
inc
les
pop
or
jle,pn
sub
repnz
aad
mov
scas
inc
jnp
push
dec
sub
inc
push
loope
cmpsb
int3
dec
popa
ss
mov
les
rcrl
xchg
es
aas
pop
jl
mov
add
scas
or
scas
js
ret
stos
int
mov
repnz
add
add
mov
push
stc
out
xor
mov
mov
ljmp
out
in
or
imul
inc
inc
out
arpl
sub
sar
ljmp
push
xchg
aaa
clc
loopne
jo
mov
pop
mov
scas
shlb
in
pop
jmp
sahf
sbb
ror
dec
jbe
inc
xchg
adc
xchg
hlt
aad
cmp
xor
pop
lds
les
sub
dec
mov
js
pop
push
sbb
dec
and
xchg
jl
mov
call
push
mov
jns
flds
mov
cmp
lock
mov
xor
inc
dec
mov
sub
jmp
js
into
inc
outsb
mov
fwait
mov
sbb
pop
addr16
into
mov
cltd
inc
push
or
cmpsb
push
inc
xor
jns
cltd
sub
fneni(8087
mov
mov
lods
repz
lods
pop
lds
mov
fnstsw
lret
into
sbb
dec
mov
dec
mov
push
add
sti
cmp
mov
push
stos
jbe
mov
pop
pop
lret
ja
add
call
push
gs
push
stc
repnz
lock
daa
leave
xchg
stos
fwait
or
leave
pop
stc
pushf
sahf
hlt
sub
mov
int
shll
clc
dec
dec
rcll
adc
jae
mov
aaa
mov
adc
jne
loop
xchg
les
mov
sahf
jb
inc
aam
in
in
cmpsb
lds
dec
rcl
add
add
movsl
pop
add
mov
ja
adc
out
add
shlb
mov
lods
je
cli
xchg
out
cmp
jns
push
jecxz,pt
imul
stos
and
add
call
or
mov
jecxz
insl
sub
cmp
inc
xchg
imull
xchg
outsl
mov
pop
ret
loopne
pusha
sbb
push
xchg
pushf
xchg
stos
pop
in
test
mov
sub
mov
and
nop
out
in
sbb
mov
add
xor
or
push
push
shll
add
jno
add
adc
pop
sub
cs
gs
jbe
outsb
mov
movsb
test
and
out
and
push
cli
pop
ljmp
test
lahf
xor
add
call
fldcw
nop
imul
dec
push
lds
mov
inc
add
and
cltd
out
mov
xlat
mov
cmp
push
insb
lods
cld
in
jecxz
test
int
pop
je
je
cmp
mov
push
call
push
mov
pop
ret
les
xchg
ret
inc
in
std
and
sub
loopne
push
sbbl
pop
lret
repnz
shl
inc
pop
and
xchg
rcrl
iret
add
and
out
add
call
aam
jl
outsb
loop
mov
imul
sub
push
lcall
movsb
xchg
and
shlb
enter
add
out
jnp
or
xchg
pop
movsb
fists
call
mov
jne
xlat
movsb
lret
out
xchg
push
mov
jl
test
lock
repz
sahf
jno
loopne,pt
mov
fs
shl
enter
adc
push
loopne
dec
mov
push
xor
icebp
push
sub
sub
xchg
in
inc
add
add
shll
add
call
mov
not
sti
sub
mov
sahf
jnp
inc
scas
jbe
push
test
sbbb
pop
filds
clc
and
lcall
insb
jae
test
mov
pop
imul
call
mov
jp
jl
and
and
jg
sub
mov
rolw
and
leave
shrl
mov
sbb
cmovno
sbb
loopne
std
or
sahf
pushf
push
js
cmp
dec
movsb
jnp
mov
add
call
pop
test
lcall
cmp
pop
mov
cli
shlb
push
test
lea
loop
int
aaa
and
es
jne
adc
mov
pop
dec
mov
fs
inc
data16
sbb
dec
mov
cmp
js
hlt
out
ljmp
sbb
mov
mov
mov
jae
das
cmpsb
mov
lods
push
sti
icebp
push
cmpl
jb
lods
icebp
jle
cmp
cmp
push
rolb
add
call
push
and
jecxz
pop
cs
nop
inc
pusha
mov
lods
js
es
popf
ret
adc
daa
dec
mov
adc
sub
cmp
mov
sub
pop
repz
or
lods
cmpsl
sub
test
mov
sti
push
lods
or
cltd
les
pop
inc
cmp
pop
push
lcall
call
shll
push
cmp
xchg
sbb
call
ss
sbb
popa
dec
dec
in
push
mov
bound
jecxz
xlat
sub
add
cmpb
sbb
in
add
call
orb
cmp
fisttps
sarb
sbb
aas
pop
sbb
in
loop
sub
fildll
clc
and
adc
stos
pop
fdivrl
jl
nop
xor
lock
je
sbb
and
pusha
xchg
fnstenv
std
aam
out
inc
jne
icebp
hlt
xor
outsb
call
int
jmp
call
mov
pushf
lea
push
in
or
popa
cmp
or
outsl
xchg
scas
mov
add
call
mov
jle
int3
jnp
addb
outsb
dec
mov
push
sub
sbb
adc
into
mov
inc
out
cwtl
dec
popl
cmp
mov
inc
adc
jns
shll
aam
insl
ss
pop
lds
mov
xchg
inc
adcb
ret
lods
testb
inc
pop
ret
lea
add
in
inc
popf
sub
fmull
movsl
repnz
add
push
xchg
push
popf
mov
test
jp
ds
movsb
mov
xchg
test
lahf
add
call
scas
mov
popa
in
or
leave
test
pop
mov
xchg
mov
xor
leave
push
aam
sahf
fsubs
lidtl
in
cmc
jo
call
out
loope
test
cli
pop
pop
mov
cld
jp
clc
inc
push
lock
outsl
arpl
sahf
push
jne
push
add
mov
push
fwait
lock
and
sub
or
imul
cmp
stc
jae
rclb
mov
mov
cmpsl
pop
adc
call
int
ja
dec
mov
je
add
pop
lods
cmp
add
jns
outsb
in
mov
jbe
jp
add
cmc
sbb
xchg
push
pop
pop
mov
mov
fdivrs
jnp
adc
frstor
or
mov
inc
bound
cmpsl
adc
arpl
dec
sub
jp
xchg
test
pop
mov
test
insb
f2xm1
add
int
pop
adc
mov
jns
sbb
add
call
data16
push
aaa
jns
clc
or
push
fnstcw
lret
adc
mov
fs
push
orb
fs
cmp
test
fdivrs
addr16
inc
jge
sbb
jecxz
push
inc
jo
repz
movsl
js
sub
test
inc
jmp
jns
or
sub
sbb
jno
out
and
cwtl
imul
mov
aaa
fisttps
jns
push
mov
popa
insb
push
push
push
mov
cld
stc
fwait
int3
scas
scas
sub
jmp
add
call
stos
add
xchg
testb
jmp
insb
imul
cmp
bound
dec
push
shlb
fwait
aam
jle
scas
dec
decl
aam
mov
lds
sbb
push
nop
cwtl
mov
jns
adc
cmp
cmp
or
add
pop
dec
inc
pushl
clc
repz
orl
insb
mov
mov
jle
push
fwait
mov
stc
mov
pop
ss
cmp
cmpsb
lcall
test
xchg
lock
add
call
daa
loopne
frstpm(287
and
lcall
incl
mov
sub
sti
jecxz
jp
lret
mov
out
or
cld
fdiv
pop
mov
fcomps
and
push
push
mov
xor
insb
or
addr16
and
shll
aas
mov
shll
lea
cmp
jle
nop
js
dec
push
cs
lret
in
and
xchg
add
stos
mov
dec
push
push
push
outsb
in
xor
add
call
push
pop
cmp
mov
sbb
cs
fisubl
dec
clc
pop
mov
lahf
shll
mov
out
ds
popf
inc
sti
ret
dec
push
add
sub
adc
xlat
lret
fnstsw
push
ss
xchg
dec
and
mov
dec
outsb
xor
repnz
xchg
mov
mov
mov
mov
cmpsb
mov
call
xor
nop
jle
fsubs
mov
push
movsl
outsl
jne
incl
add
call
out
pop
sarl
test
mov
sbb
dec
fwait
mov
jl
xchg
jne
not
out
cmpsb
stos
int
mov
roll
mov
ffree
popf
cwtl
xor
mov
in
mov
cmc
sub
cmpsb
cmc
cmpsl
ret
or
call
shlb
daa
in
dec
mov
jbe
adc
into
adc
loop
sete
imul
out
mov
jp
fbld
sbb
and
repz
xchg
dec
js
add
call
shll
pop
sub
shlb
imul
mov
add
into
jo
negb
leave
popa
cltd
jb
cmpsl
push
and
mov
cld
iret
mov
dec
adc
mov
dec
repz
pop
ds
in
sub
lcall
cmpsl
cmp
lret
test
or
clc
loope
mov
mov
inc
mov
inc
dec
xor
mov
pop
mov
pop
or
cmp
push
push
or
scas
testb
adc
sbbb
xchg
add
add
mov
adc
and
lods
pop
int
mov
jg
fadds
push
hlt
pop
in
xchg
add
push
jbe
outsb
jo
push
fsubrl
adc
clc
push
cmpb
stos
mov
sarl
in
ljmp
sbbl
mov
xchg
jno
xlat
push
test
aaa
les
loopne
add
add
lock
inc
hlt
andb
in
adc
xchg
insb
xchg
sub
mov
cwtl
jno
push
cmp
xlat
sbb
mov
add
call
dec
xchg
pop
or
sub
mov
adc
popf
in
pusha
mov
or
int3
ja
xchg
subl
flds
mov
inc
fimuls
push
outsb
mov
add
sbb
leave
xlat
jmp
sub
fsubrl
xchg
jo
xchg
lret
push
adc
sub
mul
aad
mov
xor
or
daa
jne
sahf
or
mov
sub
mov
add
gs
into
lock
mov
call
pop
ret
mov
clc
push
jo
pushf
hlt
dec
ds
push
lea
cmp
movsb
stos
in
fisttps
inc
nop
mov
xor
xlat
scas
cmpb
mov
sti
cmpsl
icebp
adc
mov
pop
cmpsl
mov
mov
mov
rcr
shlb
data16
movsl
les
and
insb
push
sbbl
mov
rcll
xchg
mov
mov
sahf
cli
dec
insl
xlat
rcrl
cmp
inc
insl
xchg
xchg
push
xchg
icebp
loopne
dec
or
xchg
and
add
call
pop
xchg
daa
negb
add
mov
jb
shlb
mov
fcmovnb
das
dec
ds
mov
cmp
push
andl
shlb
cmpsl
rcr
dec
sarl
push
fdivr
popa
outsl
mov
ret
fcompl
adc
jle
hlt
aam
fdivs
rol
mov
pushl
or
xchg
or
popf
mov
andb
cwtl
inc
dec
in
mov
iret
and
jecxz
xchg
iret
mov
cli
or
push
test
call
push
cmp
sahf
sbb
mov
lahf
sub
aas
fnstcw
sub
mov
xchg
ret
repnz
dec
lea
pop
in
int
stos
pop
cmp
pop
and
inc
mov
shl
dec
inc
arpl
mov
pop
cmp
push
mov
xor
push
jne
hlt
outsb
adc
icebp
insl
es
push
sbb
mov
pop
ds
jl
mov
or
ja
outsl
jle
sbb
or
mov
pop
fistps
and
mov
scas
push
test
add
call
shl
popa
jb
add
cmp
pop
and
adc
add
cmp
ds
ret
pop
pop
das
loope
mull
mov
mov
cmp
or
cld
jnp
push
xor
ljmp
dec
push
das
sahf
fnstcw
lcall
jae
insb
mov
inc
hlt
mov
ficoms
movsb
fsub
int3
mov
aad
outsl
nop
lock
mov
add
add
aas
mov
mov
add
call
jo
mov
lcall
scas
fsubrp
adc
pop
adc
aad
adc
cmpsb
pop
add
xchg
filds
jns
outsb
cmp
or
int
dec
mov
and
popf
pop
add
loope
sbb
and
bound
repz
test
lcall
bound
fwait
aaa
je
or
fld
out
cmp
inc
mov
cs
jg
test
and
jne
jge
inc
jb
and
or
add
insl
inc
mov
out
sub
add
call
cmp
stc
push
out
loop
push
adc
jg
dec
dec
test
lods
xor
out
mov
lahf
popl
dec
test
in
xchg
ja
pop
or
icebp
or
cltd
fcmovbe
mov
jp
inc
mov
rol
test
loopne
test
mov
cld
sub
push
ja
adc
lods
dec
sbb
int
js
aaa
sbb
or
jb
and
cmc
fwait
xor
cmp
add
add
mov
insb
jecxz
add
call
ss
rclb
dec
mov
pop
cmp
xchg
jg
mov
mov
cmpsb
mov
ret
stos
ds
das
jmp
jmp
jecxz
ret
jp
std
in
mov
jns
lea
xchg
push
push
roll
not
pushf
xchg
inc
xchg
popa
or
jbe
sbb
mov
and
sub
stc
stc
jne
mov
jecxz
dec
mov
dec
push
cmp
cmp
cs
jno
mov
out
cld
push
mov
ja
or
cmpb
push
je
add
call
cld
popf
out
dec
jle
shl
lods
inc
sbb
sbb
mov
xor
lret
sbb
es
lret
push
dec
aad
or
sbb
xchg
rcr
xorb
jg
mov
jnp
dec
or
fs
stos
outsb
sahf
lret
fstpt
stos
cmp
clc
ret
stc
cmpsb
adc
pop
mov
cmc
lret
push
lahf
pop
fidivrl
inc
fstpt
test
pop
rcl
pop
cli
jae
insb
mov
jne
test
call
iret
mov
mov
mov
cmp
ja
movl
fldenv
mov
repnz
dec
inc
jb
sbb
into
loopne
repz
jle
mov
dec
sub
jo
stc
dec
outsb
dec
leave
sbb
or
aaa
xor
adc
faddp
dec
je
sub
adc
mov
and
push
cmp
push
xchg
jne
or
cmpsb
xchg
movsb
pop
das
adc
xchg
and
fwait
sti
cwtl
add
call
sub
pop
push
xchg
inc
push
inc
js
aam
jb
mov
inc
lret
nop
jl
cmp
pop
xchg
inc
leave
fwait
mov
scas
push
repnz
lcall
xchg
shl
mov
jo
adc
sub
sbb
add
std
mov
stc
js
mov
adc
xor
movsl
dec
dec
mov
mov
push
push
mov
add
jae
lahf
xor
jge
fildl
mov
push
add
call
int
jns
and
dec
xchg
pop
push
fstp
nop
jp
or
int3
sub
add
in
push
shll
mov
cmp
dec
add
xchg
inc
mov
orb
mov
mov
jecxz
icebp
int
in
cs
jp
test
int3
mov
in
lock
inc
add
jnp
pop
xchg
arpl
lcall
jge
scas
inc
cmc
xor
dec
lea
mov
mov
mov
xchg
nop
mov
add
call
pop
rcl
and
dec
mov
pop
nop
mov
mov
mov
xor
push
or
and
and
outsl
mov
mov
or
mov
mov
add
lods
nop
jns
mov
inc
push
cmc
cmp
cmp
popf
in
cmpsb
call
cmpsl
mull
or
in
cmp
test
inc
mov
push
shll
sahf
add
fs
fdivs
adc
call
lea
into
jno
sbb
or
in
sbb
ja
bound
mov
ljmp
repnz
into
in
or
sbb
test
xchg
fwait
cmpps
imul
loope
or
xchg
aam
inc
mov
test
sub
mov
and
iret
cmpl
repz
lods
rcrb
popa
and
cmp
or
push
aam
push
sbb
mov
fldenv
pushf
sub
xlat
or
xchg
loope
xchg
mov
js
jns
mov
call
das
and
mov
je
mov
repz
stc
adc
sub
shrb
sub
ret
cwtl
add
push
into
mov
or
jge
mov
outsb
cmp
jle
jp
lods
je
pop
xchg
test
pop
sarl
enter
out
push
mov
das
add
mov
mov
push
jle
sub
dec
mov
xchg
repnz
xor
push
jge
dec
cmp
scas
xor
add
call
or
das
jp
mov
and
mov
mov
mov
and
or
push
adc
push
test
clc
fcmovnu
ja
jge
dec
lahf
xchg
out
add
xor
insb
push
insl
fsub
out
xor
cmp
mov
pop
lds
int3
ljmp
add
adc
mov
in
or
sbb
pop
les
pop
in
mov
mov
push
imul
dec
dec
lret
mov
add
call
mov
xchg
in
repnz
mov
inc
mov
mov
scas
jge
xor
cmp
jg
mov
and
pop
push
je
pop
test
mov
shrl
std
idiv
add
pop
mov
movzbl
iret
test
mov
rcrl
and
push
mov
mov
lcall
inc
divl
inc
pop
push
cli
movsl
pop
decl
mov
cmp
icebp
aas
mov
cmp
arpl
ja
sub
dec
test
add
call
push
mov
dec
jp
mov
adc
clc
pop
jae
js
repz
pop
add
shl
test
mov
mov
fisttpll
xlat
sbbb
jbe
inc
jnp
xor
mov
out
xor
push
addr16
sub
mov
mov
rcrb
xor
or
loope
into
mov
xlat
xor
xlat
imul
add
rcr
or
shrb
hlt
mov
sub
mov
add
call
xchg
loope
jge
mov
insb
std
mov
dec
push
cmp
aas
dec
outsb
jbe
cmp
mov
out
cwtl
mov
testl
xchg
jp
xchg
xchg
leave
rolb
test
adc
push
pop
add
fisttps
mov
imul
mov
cltd
sub
sbb
or
rolb
shrl
push
xchg
mov
movsl
daa
add
stos
sti
xchg
push
mov
pop
xchg
add
call
leave
cmc
adc
sahf
cmp
pop
mov
push
adc
pop
std
mov
push
and
in
rolb
fidivs
icebp
test
inc
mov
subl
test
ljmp
dec
dec
test
out
pop
nop
pushf
jno
js
hlt
iret
push
loopne
orl
dec
aaa
dec
push
cltd
mov
lea
push
mov
int
mov
call
mov
xlat
dec
inc
xchg
cwtl
jb
leave
mov
pop
jae
xor
adc
mov
loop
pop
test
or
sldt
call
les
adc
jle
sub
adc
mov
in
clc
movsb
jns
pop
pop
sub
sti
jns
sti
sbb
mov
add
arpl
cmp
adc
aam
pop
mov
or
test
mov
stc
leave
cmp
das
cld
jne
dec
arpl
out
lds
test
addr16
and
lods
sbb
inc
pop
jge
test
push
push
sti
add
inc
arpl
inc
sub
add
call
cmp
mov
cmp
fstl
loope
jno
les
xchg
mov
lock
movsb
jmp
xchg
jne
xor
icebp
pushf
aas
mov
inc
stos
pushf
inc
ret
out
jnp
je
ljmp
or
xchg
outsl
xchg
jge
push
lret
dec
push
dec
mov
cwtl
xchg
or
lcall
in
fs
push
mulb
int3
inc
pushf
pop
xor
jbe
or
dec
iret
sbb
xchg
push
push
jecxz
mov
add
call
cmp
adc
push
xchg
sbb
popf
por
mov
xchg
imul
pop
cmp
mov
xchg
testb
lret
fdivs
loopne
hlt
fmuls
jge
inc
mov
pop
lret
loopne
cli
xor
lahf
adc
cltd
jae
xor
call
jns,pt
mov
sub
rep
outsb
imul
std
sti
movsl
mov
dec
push
mov
addr16
roll
xchg
mov
xor
pushf
xor
add
call
sbb
bnd
fxch
add
stc
mov
xor
and
mov
xchg
inc
fidivs
pop
jle
inc
sbbb
adc
outsb
fbstp
jb
pop
ja
xchg
mov
pop
push
pop
sbbb
push
movsl
js
arpl
faddp
mov
sbb
dec
scas
popa
pushf
fsubrl
movsl
out
fsubrl
ds
push
add
pop
lods
mov
mov
leave
ret
cmc
and
xchg
xchg
rorb
dec
adc
add
call
data16
ds
rorl
inc
adcl
mov
or
rol
xor
jnp
fstp
lock
push
push
xchg
hlt
inc
push
arpl
sub
and
mov
call
push
hlt
insb
mov
adc
lods
mov
mov
test
bts
mov
fstpt
outsl
cmpsl
jle
test
jb
xor
popf
into
xchg
ret
test
leave
push
pop
and
mov
out
push
test
add
call
push
inc
pop
lods
add
push
scas
ss
and
push
jb
jnp
xlat
outsl
cltd
shrb
jmp
xchg
and
mov
insb
or
test
jge
aas
mov
out
push
cwtl
ds
mov
mov
xor
fnstsw
push
push
jle
cmpsb
outsl
or
loop
sub
jmp
cwtl
mov
add
in
xorb
fldt
mov
fbstp
aaa
push
shl
push
imul
ss
outsb
mov
cmp
lret
mov
jmp
call
push
adc
rcll
push
mov
or
mov
scas
inc
jmp
push
mov
adc
dec
ljmp
leave
fcoml
pop
add
popa
xchg
dec
ljmp
test
icebp
dec
rolb
cmpsl
in
jle
or
lret
dec
adc
fs
addr16
das
dec
inc
sahf
xlat
xor
and
push
cmpsb
mov
test
and
pop
xchg
mov
mov
test
lahf
sbb
aaa
stos
push
sbb
mov
add
call
lods
fsubr
les
or
dec
jae
hlt
xchg
dec
jbe
int3
dec
mov
mov
loope
lock
mov
lods
mov
xor
ja
xchg
lock
enter
in
sbb
lds
int3
aaa
pop
pop
into
fmuls
jns
scas
out
mov
test
dec
add
sbb
js
cltd
dec
xchg
fistpl
xor
mov
lahf
xor
inc
test
hlt
mov
fisubl
xchg
jns
cmp
mov
mov
dec
pop
stc
loopne
dec
sbb
add
call
mov
cmp
enter
and
in
lahf
loopne
pop
lods
test
xchg
pop
loop
aas
mov
inc
push
jbe
mov
out
mov
xchg
leave
sahf
fcoms
xor
push
add
flds
cmpsl
add
fwait
lock
jge
cli
mov
push
cmp
lcall
outsb
rcrl
dec
xchg
fwait
sarl
mov
inc
xchg
add
pop
icebp
lea
icebp
stc
jecxz
mov
jg
stos
sbb
call
inc
dec
adc
or
cs
xor
mov
fists
test
test
movsb
test
ss
shufps
jnp
into
mov
mov
adc
add
lcall
jo
popf
call
xchg
mov
aam
push
jge,pn
inc
addr16
pop
inc
and
pop
testl
in
mov
scas
int
movhps
cmpsl
mov
sahf
lcall
push
or
dec
lds
lods
jns
aas
cld
pop
jae
push
std
cwtl
xor
cmp
rcrb
call
dec
sahf
inc
add
repnz
out
pop
sbb
and
and
rcrb
inc
sub
push
and
or
pop
or
and
test
xlat
sbb
sub
sub
bound
xchg
lods
mov
ss
shll
out
lods
xchg
sub
mov
js
mov
shlb
ljmp
scas
xchg
jecxz
sub
pop
xlat
jmp
mov
aaa
ja
fdivp
shlb
enter
jo
mov
xor
ds
sahf
sbb
add
call
rcr
stos
jnp
xchg
and
cmpsb
mov
aam
lds
sbb
cmp
and
xor
pop
fucomip
jns
movsb
std
push
lahf
inc
push
sbb
pop
das
ss
dec
sahf
ljmp
xchg
out
cld
fs
adc
lcall
shrl
push
and
popl
jp
mov
fwait
lahf
sti
xchg
lea
nop
add
inc
and
push
sub
mov
js
nop
mov
imul
push
hlt
mov
add
call
jbe
data16
adc
xor
sahf
add
push
lahf
dec
int
shll
pop
popf
out
cmp
and
out
adc
sub
mov
xor
sbb
jo
xor
in
xchg
mov
cmpsb
push
lds
das
cltd
push
movsb
scas
cld
adc
sub
cli
addr16
mov
fcoms
lret
pop
pop
push
in
inc
sahf
mov
sbb
cmp
inc
push
roll
push
jno
scas
mov
in
imull
mov
loopne
lea
mov
call
repz
push
pop
dec
cmc
gs
and
mov
push
or
outsb
and
ja
test
icebp
dec
and
add
or
xchg
push
xor
push
sub
fisubrl
leave
push
jmp
stos
mov
mov
orl
cli
scas
sbb
and
enter
dec
scas
in
sbb
xchg
cmp
lahf
sub
xchg
lods
rorl
addr16
std
ja
pop
sarl
adc
mov
ja
sub
push
xchg
cmp
or
fildl
cmp
stc
das
ficompl
inc
mov
call
in
fldl
gs
add
repz
cmpb
int3
shlb
aas
push
je
cmp
or
ja
cmp
les
dec
es
push
adc
lea
mov
out
fildll
ret
and
mov
mov
mov
rclb
adc
imul
mov
cmpb
dec
xchg
je
je
fnstsw
lret
push
enter
int3
xor
mov
icebp
inc
pop
fcmovnu
xor
sub
cltd
insb
mov
xchg
xor
add
call
inc
aad
fistpll
xor
call
xchg
mov
adc
sbb
mov
cmp
test
mov
sbb
jns
cld
test
or
adc
or
jb
xchg
outsb
fbld
dec
dec
ss
sbb
outsb
fsubl
sub
sub
pop
imul
push
inc
xor
aad
jns
loopne
jecxz
lcall
paddusw
loope
cmc
ret
jne
mov
mov
loope
push
pop
lock
adc
pop
push
arpl
in
inc
cmp
add
call
loopne
lds
inc
adc
into
clc
out
loopne
lock
sub
dec
enter
fcomip
ljmp
cmc
sahf
and
pop
sti
mov
inc
inc
lret
data16
cli
push
data16
mov
ds
mov
call
sti
xlat
xchg
sahf
movsb
sbb
and
mov
jae
lock
sub
sub
call
push
sbb
popa
out
mov
call
sti
out
adc
ret
test
pop
int3
xor
nop
lea
call
out
in
jecxz
jle
scas
xchg
pop
andl
popf
pushf
aas
std
aas
xchg
stos
push
cmpsl
pusha
jnp
in
repnz
stc
cltd
lcall
lds
pop
dec
test
mov
mov
cmp
adc
repz
inc
clc
mov
mov
cmp
or
fistpl
lods
popl
adc
jno
sub
sub
or
aas
rorl
stos
inc
jns
fwait
roll
mov
sub
add
mov
or
mov
call
jle
mov
mov
test
jg
lods
push
mov
adc
loop
js
sub
ficomps
jns
jecxz
mov
mov
mov
dec
pop
inc
mov
jmp
pop
lret
bound
lods
xchg
lea
in
dec
mov
inc
ja
les
xchg
xor
adc
decl
insb
adc
and
sub
cmc
cltd
in
and
sbb
lock
push
lods
loop
imul
sbb
test
add
call
mov
pop
pop
cmp
mov
xor
cmp
xchg
pop
mov
mov
sub
lahf
je
push
jnp
cmp
cmpsb
cwtl
notl
pop
adc
sbb
addr16
mov
inc
out
lea
xor
xor
mov
rcll
imul
sbb
dec
fcoms
bnd
dec
inc
in
test
and
lss
fsubrl
stos
stc
xor
arpl
push
icebp
pushf
mov
call
or
mov
jl
jae
popa
adc
add
xor
fldt
lods
test
insb
int3
pop
divl
movsb
adc
roll
mov
bound
pop
mov
mov
xorl
adc
clc
fyl2xp1
or
push
adc
lret
push
push
pop
cli
xchg
es
xchg
jne
rorb
shlb
adc
std
push
xorb
scas
pop
insb
adc
ja
xchg
mov
sahf
jp
mov
xor
lea
call
movsl
movsb
jne
int3
cmpb
mov
cmpsl
adc
and
sub
cli
jno
js
in
push
xor
dec
andb
add
cmp
push
push
dec
test
sub
jne
mov
repz
nop
push
pop
cmpsl
sub
ficoml
push
push
or
aad
stos
sbb
cmp
daa
dec
push
andb
enter
cmp
mov
sbb
cmc
test
mov
xchg
aad
push
cmpsl
adc
roll
add
call
dec
and
cmp
insb
daa
jl
pop
xor
test
cmpsb
loope
jg
dec
repnz
insb
js
fldcw
rcrl
neg
sub
pop
cmp
mov
repz
inc
fimuls
xchg
inc
sbb
out
and
push
lock
test
iret
cwtl
xchg
jns
mov
sbb
jbe
aas
data16
mov
repnz
ds
inc
push
xor
call
cwtl
movsb
inc
pop
cmpsb
iret
ja
loop
loop
in
dec
push
add
call
jo
sub
mov
clc
dec
adc
jo
pop
ja
pusha
and
or
das
adc
jnp
ds
es
dec
xlat
add
in
mov
mov
dec
or
fildll
fcmove
es
jmp
adc
xchg
fimuls
inc
mov
cld
sbb
in
aas
mov
ljmp
push
les
dec
lret
into
dec
mov
ljmp
aad
cmp
loope
mov
cmp
mov
and
and
add
add
call
popa
push
cli
daa
sti
jb
insl
push
mov
popf
cmp
fwait
pop
repz
adc
in
movsb
push
call
ss
cmp
inc
movsl
jno
dec
cmp
enter
sbb
scas
inc
fdiv
fisubrl
imul
add
addr16
stos
xchg
cmp
dec
pop
cmpsl
sub
stc
lods
jns
cld
sbb
sbb
mov
cmc
fwait
dec
jne
pop
jb
push
int3
mov
cli
stc
jmp
jbe
mov
neg
insb
aad
cmp
sbb
call
outsb
loope
fidivl
pop
dec
mov
jo
movsl
addb
insb
out
dec
jge
push
jbe
xorl
ljmp
sub
fs
insb
push
cmpsl
sbb
sub
stc
daa
daa
pop
inc
sbb
pop
inc
pop
sub
adc
or
push
cmp
int
mov
test
testl
inc
jo
and
stos
lret
sbbb
push
sub
adc
lea
cmp
push
jbe
or
mov
cmp
aam
sbb
adc
call
push
fcoms
nop
jmp
mov
pop
andl
add
je
jl
jecxz
jle
mov
popa
nop
add
push
outsl
xchg
sub
sbb
sbb
incb
inc
cwtl
push
test
fstl
push
mov
xchg
push
ljmp
cmp
mov
outsb
out
lret
addr16
add
mov
stc
sbb
loopne
add
bswap
aam
mov
and
xchg
mov
adc
pop
mov
cli
lret
add
call
xor
notl
not
movsb
les
cmc
cs
mov
cmp
mov
std
mov
mov
js
add
pop
fldenv
mov
cmovns
mov
int3
rcll
lret
mov
adc
jbe
mov
call
or
pop
arpl
mov
inc
dec
push
clc
mov
adc
xlat
sub
cmpsl
push
jmp
jecxz
adc
leave
ret
cmp
call
or
insb
xchg
out
lock
mov
lock
ret
inc
arpl
loop
sub
in
push
pop
mov
mov
enter
pushf
cmp
aas
cmpsb
inc
mov
jmp
dec
push
mov
cmp
stos
jb
mov
dec
in
loopne
nop
xor
lret
nop
pop
mov
gs
mov
sub
inc
pop
test
aad
jge
test
inc
ljmp
xor
and
pop
dec
in
das
orl
insb
hlt
mov
rolb
add
call
ljmp
and
inc
sub
sbb
xor
leave
cld
fwait
xor
popf
xchg
ret
sub
push
pop
mov
fsubr
rclb
cld
sahf
fxch
xchg
cmc
and
movsbl
mul
ss
pushf
mov
repz
lea
sbb
leave
mov
stos
mov
cmc
adc
nop
sbb
insl
mov
lods
mov
adc
cwtl
xorl
push
sti
or
pop
cmp
and
call
xchg
aad
stc
dec
push
sbb
pop
imul
mov
sbbb
jle
dec
mov
inc
jg
es
cmpsb
enter
dec
daa
mov
js
insl
mov
mov
not
in
dec
mov
jo
adc
xchg
xchg
cli
pushf
in
adcl
cmp
jle
pop
test
mov
lock
sub
jae
setno
sbbb
xor
in
outsb
cwtl
clc
aas
shlb
lock
push
jns
xchg
add
add
call
pop
xor
loop
jo
mov
dec
addr16
cmp
jecxz
int
lods
aad
push
sub
sub
dec
fidivs
dec
jb
jge
lcall
mov
jg
add
mov
in
jo
repnz
insb
pop
divl
xor
int3
or
into
pop
mov
negl
out
orl
add
adc
fidivrl
fiaddl
movl
lcall
cmpsb
mov
xor
int3
lret
ret
rcrb
ds
add
call
je
cld
clc
movsw
cmpsb
test
or
in
insl
lds
mov
mov
or
cmpsb
inc
mov
outsb
mov
and
mov
repz
and
loop
cld
pop
xchg
js
daa
mov
sahf
rolb
lock
movsb
ret
pop
mov
addb
bound
pop
aam
sub
xchg
and
out
lahf
stos
inc
rcrl
mov
test
push
lds
xchg
mov
in
jle
pop
sub
jecxz
ror
mov
call
xor
popa
cmp
push
xchg
into
mov
push
sub
mov
sbb
movsl
inc
cmpsl
xor
xchg
jmp
ret
and
mov
add
lret
cmp
loop
mov
ljmp
call
adc
mov
cs
xchg
shrl
jno
sar
inc
adc
and
lock
sub
int
loopne
mov
imul
add
mov
mov
dec
push
mov
add
call
out
pop
lcall
stos
dec
dec
adc
fdivrs
jecxz
mov
mull
insl
inc
or
movsl
pop
mov
les
sub
orb
gs
loope
xchg
shl
or
push
adc
test
dec
fsubrs
out
mov
push
pop
lret
add
lds
daa
repnz
shlb
sub
inc
jo
xor
adc
xchg
lea
nop
push
sahf
jbe
sub
loop
test
sub
lret
adc
or
mov
call
add
cwtl
aaa
or
loopne
or
inc
js
or
xchg
fcoml
add
inc
push
sub
sbb
xchg
and
mov
add
pop
push
xchg
xchg
data16
shlb
loopne
lahf
xchg
jl
jnp
call
aaa
jns
ss
push
loopne
inc
aam
mov
push
in
arpl
inc
add
xchg
push
sbb
xchg
and
stos
jbe
jmp
add
mov
push
cs
or
nop
cmp
adc
dec
scas
cmp
js
pop
mov
add
call
inc
ret
pop
in
and
les
cwtl
dec
insb
pop
sub
push
cmp
and
or
add
clc
imul
pop
outsl
lret
ret
adc
adc
push
and
aam
leave
jo
cmpb
add
pop
xchg
movl
mulb
lcall
mov
call
jae
fcompl
sahf
in
lock
jmp
divps
mov
outsb
pop
cmpb
cld
xor
or
add
adc
fistps
out
test
addl
call
inc
sub
pusha
jg
mov
std
inc
inc
ret
pop
sbb
xchg
or
lea
mov
xlat
jmp
ss
mov
cmp
push
movsl
popa
jnp
roll
pop
adc
sbb
cmp
cmp
xchg
jl
ds
sub
sub
jns
mov
fs
into
push
push
push
addr16
inc
popf
or
jns
sub
fscale
xchg
and
inc
xchg
dec
bnd
pop
cmp
fwait
cmpsl
orl
in
adc
or
mov
rolb
add
call
push
xchg
sbb
test
xlat
pop
sbb
push
xorb
xor
cmp
pop
cmp
sbbl
cmp
mov
test
shll
sub
inc
mov
repnz
loop
stc
in
jecxz
xor
sub
push
sar
mov
mov
outsl
push
or
sbb
mov
pop
push
pop
xor
push
inc
and
adc
ffree
ljmp
cmp
and
or
and
shlb
push
dec
add
call
movl
jo
sbb
xchg
int
inc
jecxz
sbb
xor
dec
lret
or
mov
dec
lds
mulb
or
and
xchg
xlat
mov
xor
into
mov
daa
or
adc
mov
push
pop
inc
sbb
pushf
inc
dec
ficompl
add
mov
sbb
addr16
cmc
gs
xchg
cmp
dec
xor
inc
outsl
sub
ja
enter
in
ljmp
test
scas
aas
scas
dec
pop
sbb
call
into
mov
fdivl
xchg
mov
xchg
or
pop
cmp
mov
stos
push
stos
dec
inc
pushf
scas
mov
int3
mov
pop
rcrb
mov
lahf
pusha
in
mov
adc
mov
fsubs
mov
push
sbb
or
jge
mov
sti
aam
call
xor
cmp
into
jo
xchg
pusha
cmp
in
enter
in
pushf
sbb
adc
fistps
mov
or
and
inc
cmpsb
out
test
call
adc
lahf
in
dec
jne
sbb
mov
mov
cli
inc
ds
lret
push
cmp
icebp
cltd
mov
dec
es
pop
insb
stos
cmpsb
scas
xlat
stos
lds
test
jge
mov
mov
rclb
loope
addr16
pop
addr16
or
xor
js
fwait
repz
adc
mov
push
dec
dec
loop
cli
outsl
loopne
les
repz
in
xor
rcrb
cmp
call
push
mov
call
inc
push
xchg
jecxz
fiadds
rorb
int3
imull
and
stos
test
jo
cmp
pop
pushw
dec
int
mov
test
cltd
pop
or
pop
nop
xchg
inc
push
adc
icebp
in
cs
mov
es
sub
adc
or
jge
cmp
xchg
cmp
cld
inc
clc
aam
inc
cltd
aam
push
clc
mov
xchg
incl
mov
xchg
jbe
addr16
push
pop
sti
xchg
push
loopne
divb
sbb
jns
aaa
mov
jg
rorl
aaa
sldt
call
lods
sahf
or
dec
out
mov
sub
mov
bound
out
mov
ret
bound
in
mov
xor
mov
xor
mov
cmp
sub
and
jmp
in
dec
je
sbb
stos
int
loop
ret
and
and
and
push
pop
ja
mov
push
sbb
cli
hlt
shr
aam
sub
mov
inc
das
mov
outsl
cmp
in
mov
aas
add
add
xchg
cmpb
icebp
jp
jge
je
shr
int
aam
add
call
push
out
dec
xor
jns
fs
xchg
cwtl
add
cs
and
scas
insl
inc
fwait
testb
ret
mov
mov
shrl
aam
inc
pusha
push
xor
pop
enter
xchg
jbe
out
insb
mov
fidivs
mov
popa
into
ja
jb
out
mov
sbb
inc
adc
add
pop
clc
adc
insb
adc
sahf
lcall
subl
fidivrs
fistps
pop
ja
lret
cmc
clc
add
call
pop
sub
sub
xor
sbb
jbe
jg
sahf
or
imul
fdivl
imulb
add
mov
add
iret
pop
xchg
cmc
insl
cmp
loope
js
aaa
adc
mov
xchg
fs
sbb
xchg
rcrl
inc
jg
xchg
stc
add
aam
or
loop
test
jecxz
cltd
sbb
jne
xchg
jg
sub
loop
pushf
mov
xchg
je
push
loopne
imul
dec
push
or
add
call
fisubs
out
js
xor
mov
push
fdivrl
cmpsl
insl
stc
or
das
add
movsl
adc
push
mov
sarb
dec
xor
pop
loopne
loope
cmp
adc
les
inc
mov
adc
push
xchg
outsl
push
daa
movsl
andb
out
mov
sbb
lcall
and
or
xor
ljmp
mov
scas
out
pusha
mov
inc
cmpsb
mov
in
test
sbb
or
inc
add
call
clc
rsqrtps
int3
and
gs
cmpsb
hlt
iret
fwait
inc
sbb
adc
loop
imul
stos
data16
mov
mov
movsb
lods
add
daa
and
mov
cmp
jg
and
int3
push
mulb
jnp
sbb
repz
xor
xor
test
lock
xor
lods
add
mov
mov
sub
push
ficomps
jno
jns
dec
pop
push
sub
stos
mov
imul
push
mov
loopne
add
call
test
loopne
lret
rcrl
sub
push
and
cld
into
rclb
xchg
cmp
inc
dec
jo
inc
cmp
push
xchg
or
aad
dec
lods
pop
push
adc
xor
mov
aam
pop
ret
add
jbe
inc
clc
fstl
dec
rolb
in
ja
mov
ss
mov
fwait
add
cmp
gs
into
into
lods
int3
mov
inc
push
jl
adc
stos
cmp
or
movsl
xchg
jl
hlt
shll
call
fldt
cmp
sub
push
mov
mov
dec
inc
popf
sbbb
stc
cli
aaa
mov
inc
push
mov
xchg
repnz
mov
movsl
cmc
fs
lret
add
dec
rcr
lret
loope
push
and
dec
dec
or
aam
pop
dec
lea
mov
push
imul
sbb
test
shlb
cs
sbb
imul
sti
dec
test
jbe
sub
icebp
cltd
hlt
mov
shrl
das
imul
call
fucom
and
pop
sub
shll
jmp
in
pop
xor
mov
sbb
out
pop
idivb
mov
sub
mov
xchg
stos
dec
jmp
add
xchg
test
xchg
push
sbb
sbb
rol
stos
cmp
daa
and
cwtl
out
lods
mov
imul
sub
xor
aam
xor
inc
jb
push
cmp
jns
stc
shlb
lcall
add
lds
push
cmp
push
pop
cmp
out
test
add
call
stos
bound
test
push
mov
jl
mov
movsl
imul
inc
jecxz
xlat
adc
mov
icebp
xor
aad
sub
push
popa
shrl
adc
scas
lret
inc
pushf
rcrl
ret
js
xor
mov
jb,pn
out
shrb
add
nop
ret
mov
mov
mov
inc
movsb
mov
dec
lea
imul
dec
add
aam
pop
or
ds
cwtl
push
cmpsb
fisttps
filds
mov
add
call
dec
inc
push
adc
inc
ret
pusha
jmp
ror
fmul
pop
insb
push
hlt
push
mov
filds
pop
iret
iret
inc
inc
push
push
ja
mov
sbb
add
lods
mov
adc
mov
and
and
xchg
lahf
enter
rcrl
inc
add
rcl
movsb
stc
aas
lds
aaa
pop
ds
mov
dec
ret
roll
aam
add
push
fldenv
xor
cltd
jecxz
fsub
add
xchg
push
push
mov
movsb
in
add
call
jecxz
insl
rcrb
push
lods
push
dec
test
mov
xor
sub
xchg
imul
cmp
sub
dec
xchg
cmc
push
mov
pop
cmpsl
lds
pusha
jae
es
mov
dec
lret
aas
out
stos
out
dec
outsl
aad
xchg
adc
cmp
or
cltd
repnz
cs
cmp
scas
subb
mov
sbbb
adc
andl
test
mov
icebp
out
xchg
mov
js
pusha
add
call
in
insl
push
xchg
sahf
sti
and
outsb
mov
mov
cli
ret
int3
loopne
xor
mov
negl
inc
aam
dec
lret
and
lcall
pop
mov
xlat
cwtl
rcrb
push
add
sub
repnz
jb
mov
insb
and
mov
add
sbb
jae
out
mov
and
roll
add
mov
nop
add
lahf
mov
pop
mov
cmpsb
fxch
dec
dec
jmp
and
sbb
adc
das
push
add
call
jecxz
and
aam
aam
push
and
clc
xor
mov
pop
loop
push
mov
rol
cwtl
je
fwait
test
add
push
or
in
cmp
js
xchg
adc
mov
mov
add
leave
xor
iret
push
das
cmp
dec
cmp
push
loop
int
or
aam
adc
sub
dec
pop
test
pop
push
jno
jl
adc
pop
lret
push
mov
ret
push
cmp
jno
cmp
call
out
and
push
adc
pop
test
fs
push
lods
adc
jbe
pop
or
and
jge
dec
mov
fnstsw
int3
xchg
cli
xchg
xor
outsl
push
xchg
pop
xor
push
jnp
inc
mov
jbe
xlat
in
dec
xchg
aaa
and
jecxz
mov
imul
fldcw
movsl
shrl
cltd
enter
push
mov
cmpsl
dec
cwtl
add
mov
fidivrl
pop
mov
outsl
test
aad
xchg
pop
xchg
mov
mov
call
call
lods
push
dec
xchg
sti
jno
adc
adc
and
scas
push
xchg
cmp
jmp
mov
dec
lret
cmp
mov
imul
enter
xchg
aas
mov
test
and
or
push
xor
or
inc
jns
movsb
mov
pop
adc
xor
mov
nop
mov
push
or
pusha
mull
and
xor
xchg
aad
insl
pop
in
mov
inc
jp
nop
and
push
add
call
ds
in
adc
outsl
jmp
mov
fldt
shll
cmp
adc
adc
lock
adc
or
or
lret
mov
cwtl
adc
nop
mov
pop
shlb
add
pop
mov
cmp
or
ja
mov
mov
in
xchg
pop
fsubs
mov
inc
shrl
test
adcb
rep
sbb
push
rorl
repz
add
call
data16
stos
fistpll
stos
ss
movsb
and
jne
push
cmp
and
data16
rcrb
xchg
aaa
sbb
sbb
mov
push
cld
cmpsb
mov
cmp
mov
dec
dec
stos
lock
adc
sub
jae
pop
icebp
inc
jge
sub
pop
es
mov
pop
mov
and
mov
outsb
dec
andl
xchg
sahf
xchg
jae
sbb
jbe
xor
mov
cmpsb
pop
aaa
jmp
xor
push
xchg
xchg
addb
call
in
xchg
jno
and
xlat
dec
arpl
jmp
inc
mov
or
call
jle
stos
pop
shlb
jno
inc
push
dec
mov
test
sbb
mov
cmp
mov
sbb
out
add
xlat
jmp
jo
stos
mov
adc
test
insb
add
sbb
test
nop
jecxz
adc
jbe
adc
dec
into
xchg
es
test
dec
push
out
mov
fsubr
jle
jp
add
cli
xchg
loopne
loope
xchg
jbe
jp
xor
add
call
mov
fwait
pop
jno
sub
push
cmp
sub
movsl
jno
jb
pop
aam
jg
into
cmp
loope
mov
pop
lock
push
out
xlat
jg
dec
test
shrb
filds
and
scas
push
add
cmp
inc
mov
ljmp
pop
jo
popf
mov
lods
cmp
bound
mov
cmp
jb
hlt
cmp
gs
jnp
ja
scas
pop
mov
lds
cs
inc
iret
inc
addb
add
add
call
aam
xchg
push
jns
adc
push
in
dec
jne
lret
iret
pusha
jne
dec
add
movsl
aas
cmp
dec
mov
loope
jns
push
push
stos
xor
or
or
cmpsb
inc
leave
in
scas
fcomps
sub
enter
in
mov
xor
xor
faddl
ja
push
andb
pop
sub
rclb
inc
cmpsb
cmpsb
imul
mov
gs
mov
mov
inc
lock
or
adc
daa
movsl
mov
movsl
add
call
lea
aas
fsubrl
shl
iret
xor
inc
and
subb
mov
cs
jmp
or
imul
dec
jno
add
cmp
in
lea
lret
scas
pop
imul
es
jp
je
adc
in
inc
adc
sub
test
add
push
cmp
push
xor
insb
hlt
stos
test
pop
mov
stos
jne
xchg
jnp
xchg
adc
cltd
sbb
popf
in
dec
xchg
sbb
ss
out
inc
add
call
mov
adc
shl
mov
sti
in
sahf
cwtl
dec
in
adc
mov
sbb
dec
aaa
add
rcll
lds
sbbl
jp
dec
mov
dec
cmp
mov
inc
push
rclb
cld
mov
in
adc
into
cmpsb
les
and
shlb
add
shlb
outsb
clc
aas
dec
cmpsl
or
jae
sub
xchg
mov
sub
in
pop
insb
shr
imul
mov
std
add
call
mov
adc
nop
inc
cmc
int3
shrl
pop
sub
pop
add
insl
or
sub
js
sbb
mov
sbb
out
movsb
imul
jmp
sbb
shrl
sub
mov
mov
popf
xorl
mov
adc
into
pop
outsl
bound
mov
enter
in
mov
xlat
cmpb
leave
fisttpl
push
movsl
mov
mov
jb
bound
pop
sti
push
test
rclb
rorl
xor
mov
loopne
add
call
shrd
das
imul
sbb
pop
mov
mov
adc
sti
add
and
test
lock
jge
jg
adc
mov
xchg
xchg
test
es
xchg
pop
out
cmp
lods
lea
and
paddusb
mov
out
push
xor
mov
push
test
bswap
inc
inc
cld
in
pushw
mov
idivl
loopne
sahf
jg
lods
int
outsb
mov
push
cmc
out
add
call
jb
in
sbbb
mulb
in
push
lcall
push
lcall
daa
and
inc
push
sarb
or
cs
inc
mov
or
and
repz
xchg
xchg
jo
imul
ljmp
sbb
test
cmpsb
cmpl
out
sub
xchg
int3
mov
aam
imul
jge
inc
mov
or
and
mov
mov
add
ret
adc
iret
aad
dec
xchg
adc
add
call
loope
jb
cmpsl
sub
inc
or
push
pop
mov
cmpsl
incl
push
adc
inc
cld
jl
dec
mov
xor
mov
jnp
iret
aas
mov
lahf
mov
dec
test
add
add
sub
xor
or
xchg
lds
gs
push
insb
jmp
cmp
adc
adc
jo
ret
mov
notb
cld
arpl
fldt
cld
mov
mov
dec
dec
movsl
jmp
dec
inc
adc
hlt
fcomip
sti
mov
xchg
add
call
pop
cmp
adc
jp
xchg
jae
and
negl
xchg
test
and
xchg
pop
xor
cs
adc
inc
mov
push
cs
jnp
or
in
or
mov
repz
out
pop
popf
dec
or
xchg
adc
add
xchg
cmc
imul
test
xor
test
in
mov
pop
mov
jae
mov
std
mov
xchg
into
iret
sahf
xchg
iret
outsb
mov
call
pop
lcall
inc
sbb
hlt
idiv
in
adc
jo
cltd
mov
cltd
xchg
jmp
lcall
pop
jge
into
aam
rcr
sbb
xor
ja
cmpsl
jecxz
pop
and
scas
das
fwait
das
pusha
nop
inc
not
stos
push
jno
cld
xchg
scas
aas
popa
xor
mov
out
popl
ret
rcrb
dec
rcrb
sbb
loope
popa
sbb
inc
loop
mov
shlb
sub
xor
xorb
test
jne
lods
fldcw
hlt
rolb
add
call
sahf
popa
cmp
loopne
or
popf
jno
enter
jns
cs
push
pushf
dec
loop
movsl
inc
pcmpgtd
push
add
dec
lcall
imul
mov
stos
jb
std
cmp
pop
imul
hlt
mov
sub
lods
in
into
test
lods
test
fcomps
imul
icebp
aaa
cwtl
and
int3
mov
sbbl
lret
lret
into
fcomps
jnp
jmp
mov
inc
in
cli
scas
add
and
fdivp
shr
imul
add
call
daa
mov
fmulp
rcll
xor
inc
idiv
fcompl
sbb
pushf
mov
jge
push
jp
sbb
stos
shlb
jp
xor
add
fstpt
mov
data16
mov
inc
cltd
roll
fbld
and
loop
ficompl
sti
jb
and
flds
fmull
pop
daa
arpl
popf
mov
xchg
xchg
push
out
adc
fs
cli
shrb
add
pop
sub
dec
adc
jmp
xor
lahf
cli
mov
push
add
call
out
adc
jmp
cmpsl
and
outsb
subl
and
lret
movsl
xor
pop
jnp
adc
cmc
sbb
add
pop
xchg
jb
inc
mov
call
xor
mov
adc
and
outsb
mov
in
nop
and
mov
xchg
xor
ret
add
idivb
inc
add
aam
mov
push
cltd
inc
pusha
imul
fidivrs
out
in
inc
sub
imul
call
rcl
or
xor
jp
mov
push
jnp
adc
stc
call
or
pop
lcall
xorb
jge
int3
adcb
cmp
jge
mov
enter
pop
movsb
movsb
mov
clc
int
ljmp
pop
adc
mov
pop
leave
loopne
repnz
pop
or
inc
jns
sbb
or
push
or
sub
arpl
icebp
sbb
fdivl
pop
fistpll
sbb
lcall
xchg
int3
dec
xchg
add
call
adc
insl
data16
lcall
shr
mov
xchg
mov
lret
xor
or
mov
scas
xchg
mov
mov
lea
sbb
cld
bound
pop
cs
dec
sarb
mov
addr16
xchg
sub
jecxz
push
fildl
add
inc
adc
scas
mov
das
dec
into
movsl
sub
hlt
xchg
int
in
xchg
add
mov
xchg
scas
iret
adc
or
xor
xor
add
call
andl
dec
sbb
fidivs
loope
outsb
pop
repnz
scas
dec
daa
xchg
mov
mov
inc
movsl
ret
adc
mov
mov
xchg
inc
jmp
pop
adc
cmpsb
jmp
mov
xchg
ficomps
pop
jae
andb
int
mov
es
xor
sub
mov
sti
mov
mov
lcall
jo
cmp
lods
lods
mov
xchg
inc
cs
push
fldenv
cmpsl
or
jmp
mov
call
sub
cld
jg
das
push
dec
pop
pop
lret
cmp
enter
out
in
clc
lods
mov
push
push
xor
xchg
jg
mov
test
xor
fs
pop
pop
aad
or
lock
xor
mov
addl
pop
fdivr
and
std
jl
mov
cmp
loopne
inc
lcall
sti
mov
jnp
ss
push
add
arpl
and
ljmp
call
sub
fildll
fstpt
jno
loope
push
dec
aad
scas
aad
sub
cld
cmp
loope
xchg
xor
push
jmp
sub
cltd
fsubl
mov
pop
outsl
inc
add
pop
clc
push
test
pop
orl
cs
js
jnp
fcomp
push
xchg
imul
add
aaa
cmp
pusha
movsl
push
mov
pop
std
vmovddup
addr16
pop
jbe
push
mov
jae
lret
mov
mov
insl
push
add
and
cmp
out
popa
cmp
cs
lds
call
pcmpeqd
fwait
dec
push
iret
sbb
stc
pushf
aaa
jecxz
aas
jecxz
or
pop
inc
jecxz
fstp
scas
lods
fldenv
leave
or
in
hlt
pop
les
adc
jmp
lret
out
mov
popf
pop
mov
mov
or
sbbl
mulb
mov
aam
testb
std
decb
sub
test
push
push
les
inc
and
mov
push
inc
push
clc
shll
aas
lock
shrl
add
call
in
outsb
sbb
ss
push
sub
adc
and
ret
loopne
pop
or
scas
mov
mov
jle
mov
mov
sarb
and
mov
test
pop
out
cmp
imulb
cmc
leave
cld
in
cmc
or
cmp
pop
or
cwtl
or
cmpsb
stos
xchg
jecxz
into
ret
andb
clc
pusha
rcr
pop
dec
add
sbb
cmpsl
mov
cmpsl
adc
in
and
pop
xchg
in
mov
ljmp
call
pop
xchg
lret
push
adc
jo
into
mov
mov
xchg
enter
sub
test
sbb
fsubrs
fistpl
in
loope
cwtl
sub
xlat
ret
leave
jmp
push
cmpb
insb
sub
sbb
cmc
ja
call
lret
popa
or
add
xor
or
arpl
cmp
xor
ret
mov
jl
inc
jmp
lahf
add
dec
mov
jne
xchg
and
xlat
pop
ljmp
adc
mov
andb
add
call
ret
leave
push
les
cli
add
jb
popa
adcb
xor
enter
cltd
call
mov
out
movsb
addr16
adc
je
ja
ret
movsl
adc
test
cmp
fdivrl
mov
outsb
int3
test
push
in
out
inc
shrb
mov
pop
pushf
pop
sbb
mov
push
sbb
mov
and
cmc
sub
fwait
mov
inc
ja
xchg
adc
xor
sbb
xor
jb
lret
pop
idiv
enter
call
or
or
push
add
pushf
jg
jg
js
fisubs
outsb
jmp
jns
in
jle
xor
jecxz
push
or
cld
ds
cmpsb
stos
in
fisttpll
rol
dec
or
push
mov
mov
sbb
shr
rclb
js
adc
cld
xlat
add
mov
jns
add
out
sti
jae
adc
jp
test
push
lods
mov
xlat
mov
fwait
test
repnz
cli
xchg
into
jge
dec
inc
xorl
add
call
cmp
cld
adc
jge
es
leave
push
loopne
fisttps
int
fsubrl
jmp
test
ja
pop
pop
xchg
outsl
inc
pop
or
inc
fidivrs
push
xlat
cmp
add
push
mov
mov
pop
mov
int
mov
jbe
mov
push
fs
and
shl
xor
iret
inc
inc
xchg
mov
dec
sahf
or
push
mov
dec
icebp
pop
pop
fsts
add
loopne
jnp
sub
xor
cmp
push
cmc
insb
xor
xor
xchg
dec
icebp
in
bndstx
add
call
fisubrl
dec
xlat
popa
loopne
inc
cwtl
add
jle
fistl
cwtl
sbb
jmp
and
aam
cmp
outsb
mov
sti
insl
push
push
lret
bnd
pushw
data16
out
call
fs
in
fwait
lcall
adc
stos
cmpl
sbb
inc
sti
mov
out
fwait
lret
xchg
and
pop
pop
ret
dec
lret
xchg
jnp
shr
testb
inc
call
mov
jge
cs
into
out
es
push
loop
xchg
add
xchg
je
int
add
call
inc
and
scas
mov
repnz
pop
lcall
jmp
lock
dec
stos
cmp
xor
pushf
into
call
push
mov
fdivrs
aas
jecxz
ss
and
dec
notl
lcall
add
adcl
ds
nop
cmp
out
sub
ss
int
inc
xorl
rcl
lcall
adc
cwtl
add
movsl
sub
pop
xchg
dec
cli
xchg
fsubs
sbb
add
call
lcall
cmc
fisttps
cli
icebp
pop
mov
mov
pop
sahf
add
jns
mov
stos
or
jecxz
push
sub
imul
imul
add
lea
leave
add
xchg
push
xlat
lret
mov
xchg
cmp
lea
or
xchg
push
inc
jecxz
cli
bound
sbb
mov
mov
mov
sar
cmc
mov
jmp
jnp
inc
js
cli
or
testb
cmp
sub
call
je
and
mov
loope
cmp
mov
inc
mov
xchg
les
and
push
cmpsb
jge
lahf
movsl
leave
jle
sahf
sub
adc
data16
mov
movsl
in
xor
orb
ja
push
fmuls
or
dec
and
mov
xchg
ljmp
add
xor
mov
int
lret
insl
in
pop
jne
xchg
fstl
pop
and
je
stos
jecxz
mov
pusha
repz
movsl
xchg
roll
call
shrb
xchg
pusha
rcll
cmp
stc
loop
or
jle
pop
sub
ljmp
jmp
roll
and
mov
jg
sub
dec
fcmovb
dec
jl
loope
out
push
adc
jne
cmp
mov
jp
fwait
jo
bound
lret
jge
mov
arpl
jns
xchg
sub
stos
out
sbb
inc
sub
mov
dec
cmp
outsb
in
mov
and
adc
mov
cs
dec
mov
add
add
call
mov
mov
daa
sti
sub
xchg
mov
lock
lahf
xchg
rcr
sub
mov
into
cmp
push
orb
cmp
pop
cmp
push
adc
push
add
lcall
hlt
movsb
mov
xchg
fcoml
add
in
cmp
cmpsl
mov
cli
insl
pop
adc
fstpl
incb
mul
push
xor
pop
cmpb
popa
add
push
popf
out
xchg
mov
stos
xor
aad
pusha
xchg
and
ds
pop
xchg
add
call
or
das
jne
push
cld
jg
shlb
loope
fstl
ret
data16
add
scas
lock
sub
mov
fcompl
xchg
pop
push
rolb
outsb
inc
push
hlt
int3
xlat
mov
add
adc
sub
rep
aas
mov
cmp
fstpt
shlb
cli
mov
ljmp
jg
xor
roll
fwait
inc
jg
mov
js
scas
adc
mov
inc
imul
insl
in
aad
sub
out
mov
call
cmp
sub
inc
pusha
sub
subl
add
popf
shl
xor
or
fdiv
xchg
xchg
loope
sbb
dec
stc
jle
cmpsl
mov
ljmp
arpl
xor
add
jbe
shlb
and
pushf
add
jns
dec
loopne
arpl
in
fcmovbe
sbb
in
ds
xor
les
out
sub
pop
repnz
inc
sub
mov
pop
hlt
or
sar
jle
and
ljmp
call
mov
call
fnstsw
and
lret
out
aas
cmpsl
dec
jns
xchg
sub
push
lods
jg
psraw
adc
ffree
fsts
in
fstps
or
xor
divb
sub
push
or
insb
ficoml
loope
push
ss
pop
loop
shll
adc
and
std
jge
pop
dec
das
mov
hlt
enter
imul
lret
sub
mov
dec
outsb
fldl
shl
dec
xor
imul
sar
add
call
icebp
inc
movb
inc
cli
ret
jmp
fwait
iret
sbb
lret
sub
popa
js
mov
adc
lret
lret
das
adc
dec
inc
ret
data16
lea
jecxz
repz
mov
add
jecxz
arpl
jnp
shlb
sub
mov
cmp
ja
popf
mov
push
pop
roll
inc
pop
popa
ss
xchg
xchg
cs
test
xchg
xchg
cltd
je
mov
aad
fwait
jno
bswap
or
je
lock
fsts
call
ss
sub
sub
jbe
adc
mov
fs
aad
rcll
lahf
dec
sub
sub
scas
data16
jno
mov
cmpsb
mov
push
imull
test
idivl
repz
cwtl
mov
and
mov
pop
push
dec
in
or
in
sub
sar
cmc
adc
aad
outsb
outsl
cmp
ja
clc
mov
fstpt
ret
and
adc
cld
xor
cmp
movb
call
in
mov
test
repz
out
sbb
push
outsl
ficompl
xor
inc
fidivrs
or
incb
rorl
jnp
mov
mov
rcll
aad
movsb
insb
pop
cmp
cmp
imul
in
xbegin
ret
jbe
movsb
mov
out
mov
ljmp
add
adc
inc
xor
push
jmp
pop
push
or
push
add
jg
out
out
repz
loopne
arpl
loope
adc
call
lods
ss
pop
outsb
and
or
or
shll
cwtl
push
std
ret
fldt
nop
mov
pop
outsl
lds
sub
ds
es
mov
adc
shrb
ljmp
loopne
push
sub
pusha
jmp
scas
and
xor
jns
sub
jo
xchg
push
outsb
adc
popf
mov
das
ds
std
push
dec
xchg
xchg
icebp
lret
addb
rcrl
cltd
int3
std
mov
xchg
aaa
jp
imul
push
test
call
sub
das
sub
movb
arpl
rcl
jg
adc
das
out
push
push
repnz
dec
test
in
test
mov
pop
loopne
dec
std
aam
jno
mov
inc
adcb
stc
cmpsb
in
mov
pop
mov
push
iret
pop
loop
push
addr16
sti
out
inc
lods
neg
push
and
in
es
setae
jbe
mov
push
and
lock
insl
or
in
fwait
loopne
and
xrstor
add
call
mov
inc
nop
push
jns
lods
adc
popa
jae
scas
and
xchg
data16
bound
shll
out
pushf
xchg
cmp
or
xor
out
ss
inc
mov
mov
enter
jne
and
or
and
and
jge
out
dec
int3
std
and
je
xor
sub
jp
sbb
xchg
inc
in
push
lret
icebp
and
aaa
bound
dec
ljmp
test
shrb
push
sti
in
rorb
cwtl
push
call
mov
cwtl
pop
mov
aad
mov
clc
daa
clc
dec
out
jae
daa
clc
loop
mov
push
and
inc
or
inc
dec
cmpsb
daa
add
in
add
jmp
add
aas
popa
or
or
data16
fs
lock
jmp
add
add
and
jp
xor
test
imul
inc
nop
mov
sbb
inc
sub
clc
mov
loope
or
cmp
sbb
pop
pop
outsl
sti
and
out
inc
lret
in
push
call
mov
xor
aad
test
rorb
xor
or
sub
nop
ja
fxch
push
sub
mov
ja
add
bound
cmp
mov
jecxz
ss
fcmovbe
scas
into
add
addr16
jns
pop
add
cmp
xor
sub
lea
inc
jbe
sbb
mov
popf
out
xchg
pop
decl
fsubrp
cmc
mov
pop
fdivrs
mov
lret
xchg
mov
jno
lahf
movsb
inc
xor
test
or
add
call
jecxz
cmpsb
inc
stc
pop
inc
cmp
xor
push
xor
mov
xor
mov
cmp
push
inc
notl
mov
lods
aas
and
mov
loopne
or
enter
add
outsb
lcall
or
cmpb
ss
fistpl
mov
cmp
fcmovnb
or
jnp
dec
insb
pop
rclb
xchg
push
or
scas
ret
dec
push
or
fwait
or
call
pop
and
inc
pop
dec
aad
mov
xor
and
outsl
push
js
je
test
scas
leave
push
xchg
xor
movsl
or
test
fstpl
push
addl
sarl
mov
cmpsb
dec
cwtl
es
and
jbe
unpcklps
loop
loop
push
negb
mov
sub
shrl
adc
out
inc
test
sub
mov
mov
sarb
and
les
mov
fldenv
mov
int
add
je
sbb
add
add
call
in
sbb
add
mov
push
iret
dec
jl
add
pop
fmuls
jbe
testb
stc
push
push
aas
push
out
xchg
add
sub
jecxz
out
mov
push
test
loop
and
jp
repnz
and
mov
mov
cmpsl
add
cs
push
movsl
repz
pop
mov
pop
pop
mov
lret
and
pminub
icebp
mov
mov
cmpsl
imul
pop
add
call
outsl
dec
movsb
cli
dec
loop
add
jecxz
cs
in
push
hlt
cld
jns
in
hlt
repz
mov
adc
mov
push
inc
lods
rolb
fs
mov
pop
js
je
out
aam
mov
push
add
jne
fwait
inc
or
test
xchg
lret
nop
rcrb
push
sub
in
jg
jg
and
dec
mov
mov
xchg
and
ja
mov
lcall
cli
in
in
bound
pop
cmp
mov
rcr
lea
adc
call
jnp
sbb
sub
sbb
int3
ret
pop
lahf
jns
fcompl
je
fmul
cmp
inc
fcompl
jg
fdivs
xchg
jg
je
pop
jmp
adc
std
sti
xchg
dec
fisttps
rorb
mov
pop
and
lcall
adc
push
pop
cmc
sbb
adc
js
jg
stos
mov
jl
push
les
insb
insl
jb
jnp
cmp
push
out
shlb
loop
adc
add
call
mov
lret
mov
daa
popf
mov
aam
push
push
dec
data16
rorl
es
insl
jno
insl
mov
cs
xor
arpl
xchg
stos
fcomps
push
gs
vpaddsb
and
insl
cmp
xchg
mov
xchg
sub
push
popa
mov
mov
mov
ds
pop
cmp
xchg
std
test
mov
mov
clc
into
sub
insb
pop
and
loope
adc
jle
mov
fadds
scas
cmp
call
add
jl
dec
fstpt
jp
and
mov
lods
clc
rolb
pop
add
xlat
push
xchg
dec
cs
mov
repnz
je
dec
adc
popf
fucom
hlt
iret
push
jnp
shll
and
jl
and
popf
dec
push
fimuls
or
shrb
insl
cmpb
test
inc
addr16
and
test
xlat
movsl
and
sbb
or
jmp
adc
xchg
ficompl
mov
xlat
rolb
add
call
jne
dec
repnz
jle
push
enter
xor
push
mov
push
test
testl
ret
pop
shrl
mov
pop
aaa
sbb
and
xchg
mov
push
mov
lret
stc
ret
mov
loop
rcrl
sbb
fnstcw
xchg
test
mov
cmpsb
push
adcl
inc
mov
loope
fsubrl
das
out
test
cli
add
call
pop
cmp
cld
mov
push
mov
enter
sub
cmp
lcall
and
icebp
out
inc
ljmp
sub
sbb
push
xchg
jb
xchg
sub
inc
sub
adc
mov
push
push
test
inc
xchg
or
in
add
sarb
mov
dec
in
pop
sbb
jb
jne
icebp
mov
add
dec
repz
arpl
lret
subl
adc
jmp
in
add
call
call
or
inc
cmp
leave
scas
cwtl
pop
or
arpl
les
add
mov
add
jo
dec
xchg
pop
xor
data16
or
pop
jg
mov
test
movsb
in
jp
insb
sti
je
std
jns
mov
ret
push
cmpsb
insb
pop
or
cmp
sub
and
pop
jl
ror
cmp
add
ljmp
out
inc
inc
mov
ret
pushf
outsl
mov
dec
cld
incb
je
and
call
jmp
mov
push
xor
int
jmp
addr16
inc
push
andps
jae
mov
pop
aas
sti
ss
inc
jno
mov
push
mov
pop
push
movsb
jecxz
mov
out
andb
dec
mov
mov
sub
loopne
and
int
pop
fcmovu
add
pop
in
sti
aad
flds
add
or
sti
pop
mov
mov
inc
repz
fwait
std
xlat
jns
mov
nop
test
std
cmp
cmp
enter
popl
add
call
iret
mov
jge
aam
cmp
addr16
aad
int3
push
sbb
insb
pop
gs
clc
lods
int3
xor
loopne
push
test
mov
popf
lods
sub
mov
aas
mov
cmp
mov
lods
xchg
push
adc
lahf
mov
jmp
sbb
fdiv
pop
cmp
adc
push
test
repnz
adc
test
loop
enter
out
xor
fucomip
xchg
sahf
mov
xor
add
dec
jp
jle
jnp
mov
rcrl
incb
call
dec
clc
sbb
out
cmp
lret
jb
loope
jns
mov
into
lahf
mov
cmp
inc
push
das
add
mov
adc
adc
mov
sub
and
lea
leave
hlt
add
mov
pop
xchg
lret
and
stos
inc
adcl
mov
cli
pop
ret
out
inc
adc
ss
mov
mov
stc
fdivrs
out
cli
int3
out
jbe
ret
mov
insb
cmpsb
cltd
das
stos
pop
dec
cmp
cwtl
or
dec
outsb
hlt
pop
mov
add
call
cmpsl
loope
pusha
cmp
dec
ljmp
jae
dec
loopne
pop
cmc
jg
leave
add
cmp
cltd
mov
and
sub
xchg
std
int3
and
test
or
mov
mov
or
cmp
sub
fs
jge
adc
int3
movsb
imul
xor
test
pusha
insl
mov
mov
bound
popf
xor
or
ljmp
fbld
xor
stc
fisubs
add
call
ret
aaa
add
mov
xchg
mov
lds
insl
xor
and
outsb
addr16
add
adc
xor
xor
sub
lods
jne
ret
dec
loopne
pushf
sbb
cmpsb
mov
xchg
dec
jns
ss
pop
aaa
dec
scas
xchg
repz
cmp
pop
xor
jmp
and
int
int3
shll
dec
xchg
mov
int
inc
call
js
jg
mov
out
inc
call
aam
mov
mov
out
xchg
inc
push
out
imul
in
add
call
cmp
and
xchg
js
orb
push
nop
paddw
jl
test
out
outsb
or
scas
add
xchg
sub
pop
pop
je
adc
jbe
orb
and
loopne
jl
enter
pop
gs
jp
mov
scas
in
jl
lods
xchg
cmp
mov
mov
cmpsb
out
pop
cwtl
fidivl
cld
mov
ficoml
pop
lret
mov
mov
fiadds
lods
mov
ror
add
call
lcall
inc
pop
sub
jne
cmpsl
inc
lcall
cld
leave
call
mov
and
ljmp
sub
in
les
inc
sub
lea
test
nop
xchg
insl
or
jp
xchg
xor
roll
push
jle
rol
iret
add
sbb
ljmp
jae
popf
loop
movsb
and
sbb
jno
fisubrs
xchg
pop
shlb
imul
adc
jl
add
call
loope
jae
popa
std
icebp
iret
rcl
ja
xchg
scas
pop
out
into
xchg
lret
dec
dec
ja
cmp
adc
loop
je
out
dec
pop
rcrl
xchg
divb
lds
xor
mov
pop
cmc
cmc
adc
lret
push
xchg
xor
cmp
xor
es
lods
call
pop
das
mov
es
insl
movl
pusha
enter
imul
lret
dec
mov
pop
mov
dec
xlat
nop
fnstenv
aaa
imul
dec
mov
call
stc
rcll
mov
mov
and
cmp
mov
mov
jnp
sub
outsb
push
cmp
jecxz
in
fidivrl
mov
sti
push
stos
outsl
roll
loopne
stos
loop
xchg
push
movsb
shrl
pop
imul
in
gs
inc
bswap
dec
jp
insb
mov
mov
xchg
jecxz
xor
mov
cs
mov
loop
sbb
cwtl
jo
loopne
aaa
sub
into
pop
lahf
fsubl
add
push
test
and
call
pop
roll
fdivr
pusha
xchg
cmp
cmp
aaa
inc
or
sub
xlat
or
gs
jns
insl
and
jg
cmp
lods
arpl
popaw
xchg
mov
stos
mov
adc
pop
xlat
xor
sbb
fistps
pop
out
shlb
cmpsb
in
pop
add
xchg
inc
test
mov
fucom
ds
mov
push
test
aam
out
sub
pop
out
jge
out
adc
test
in
xchg
addb
call
mov
out
fadds
stos
xchg
outsl
xchg
and
int
cmp
cwtl
mov
jae
lret
cmp
sub
gs
cld
popf
or
cli
xchg
inc
lods
xchg
inc
pop
shrl
cwtl
pand
jle
adc
stos
jle
xlat
sbb
add
fimuls
out
sbb
push
rcrb
js
stos
ret
mov
scas
add
pop
jmp
cmp
cmc
mov
push
movsb
shl
fsub
enter
stc
stos
pop
dec
mov
inc
fisubl
aad
jns
add
call
mov
mov
imul
jecxz
pushf
xchg
xchg
xchg
and
pop
arpl
mov
daa
or
cmp
divb
aas
inc
ret
jae
call
mov
sub
aam
cmp
movsb
add
jge
mov
pop
rclb
add
xchg
lods
or
pop
insb
rorl
rorl
popa
js
outsl
cmpsl
adc
out
or
popa
xor
jbe
adc
fwait
psubsw
aas
pop
imul
call
or
loopne
sarl
fs
or
icebp
pop
dec
inc
arpl
sbb
repnz
sbb
mov
push
aaa
insb
ss
in
or
pop
aad
js
push
rcrl
and
adc
xor
dec
cmp
adc
ljmp
fdivrl
loop
add
into
dec
mov
jp
iret
fisttpl
test
ud0
add
xchg
mov
cwtl
push
pushf
push
ret
fwait
popa
js
pop
in
call
mov
sahf
testl
call
or
repz
pop
cmp
mov
jecxz
mov
sahf
xchg
stos
inc
cmpsl
mov
movsb
lcall
sub
cmc
inc
xchg
int
add
je
fwait
xor
xchg
dec
movsl
adc
jns
add
aam
fdivp
dec
call
mov
ret
rol
xor
pop
cwtl
adc
lahf
xchg
and
in
mov
in
jno
nop
imul
dec
sub
out
push
test
rolb
mov
pop
inc
dec
cmp
cmp
out
xchg
jne
loopne
add
call
mov
sub
mov
out
sbb
mov
push
push
push
mov
add
or
jbe
inc
lds
imul
dec
lock
xchg
paddsb
test
sub
adc
adc
in
rorb
aam
jl
repz
add
in
xorl
cmpsl
jbe
daa
cmp
test
and
xlat
xor
vfmsub132pd
push
mov
jle
shlb
xlat
fbld
into
push
xchg
cmp
sub
mov
pop
add
call
push
sarl
mov
fdiv
test
into
jbe
dec
rorl
xor
mov
inc
mov
dec
pop
xor
in
mov
push
nop
sbb
dec
fnstsw
push
rcl
fstpt
or
cmc
shrl
out
ss
das
jg
sbbb
hlt
outsb
movsb
pusha
dec
mov
in
add
test
lds
adc
shlb
mov
mov
add
repz
fists
jp
mov
cmp
movaps
cld
add
call
pop
push
lret
inc
sahf
rol
xor
inc
lret
mov
mov
lret
pushf
add
jg
movsl
ljmp
ficompl
addr16
shrl
in
movsl
adc
pop
push
pop
inc
lret
mov
add
xorl
pop
dec
inc
inc
cmpsb
sub
dec
dec
rclb
push
dec
rcr
aaa
cli
jecxz
jae
push
outsl
push
leave
or
pop
jbe
int
or
xlat
sub
daa
jno
sbb
divb
cmp
jle
mov
mov
jecxz
cld
adc
add
call
sbb
sarb
or
sub
leave
scas
inc
mov
mov
fidivrs
mov
inc
sub
sub
test
scas
lock
add
jmp
clc
aam
popf
fs
dec
sbb
stc
mov
xor
jbe
inc
inc
pop
and
push
test
cld
cmpsb
fwait
movsl
mov
call
insl
xor
sahf
loopne
in
cmp
popa
jl
mov
sbb
dec
mov
roll
std
adc
mov
cs
pop
stc
inc
sbb
add
call
rcr
mov
sub
lahf
push
fstpl
addr16
mov
ss
xchg
test
mov
repnz
mov
push
inc
les
jp
inc
mov
lods
js,pt
ret
jle
out
shlb
sbb
aam
cmpsl
movsl
fidivl
push
add
cmp
and
inc
imulb
pusha
in
inc
inc
push
test
adc
lahf
movsw
mov
cmc
or
lods
cmpsb
mov
mov
scas
xchg
cmpsb
or
push
add
call
inc
test
mov
lods
jecxz
mov
arpl
aam
pop
inc
lret
sbb
movsb
xor
mov
adc
stos
or
insl
xor
fldcw
aam
push
insl
hlt
testb
sub
addr16
dec
call
mov
cltd
mov
out
jae
test
repnz
enter
jle
sbb
in
inc
mov
dec
adc
add
lahf
hlt
movsl
dec
das
mov
leave
xlat
in
int3
jns
leave
mov
inc
lahf
insl
loope
and
cmp
dec
add
call
loope
and
rorb
andl
jmp
xchg
cmp
jno
xor
jbe
clc
xor
notb
xchg
cltd
addr16
xor
jle
arpl
pop
push
xchg
sub
out
jle
mov
push
out
or
xchg
aam
cmp
xchg
arpl
push
jecxz
div
cs
sbb
sub
lret
push
push
xor
aaa
shrb
je
popa
mov
lods
adc
xor
dec
repz
add
call
shlb
cld
into
jnp
sarl
xor
fistps
dec
fstp
dec
sub
lret
ret
gs
mov
cltd
jle
movsl
icebp
and
adc
outsb
aaa
mov
test
popf
int3
jp
jns
and
inc
mov
xor
popa
pop
mov
push
jmp
sahf
xchg
dec
mov
je
pop
shll
insl
outsl
push
cmp
loope
ja
sbb
cmpsl
subb
push
dec
dec
add
nop
and
call
ss
mov
add
call
loope
nop
pop
popf
mov
insl
test
push
mov
ret
jecxz
nop
and
mov
or
xor
out
xchg
les
adc
stc
rcrl
dec
xor
sub
mov
out
xor
iret
mov
outsb
mov
ss
jl
sahf
mov
xchg
out
mov
pop
sub
jmp
jp
xor
js
and
mov
xlat
jo
sbb
push
mov
fldl
inc
loopne
add
aam
xchg
add
call
lock
cmp
mov
jp
imul
int3
fidivrs
mov
scas
lea
cmc
outsb
in
jl
in
gs
mov
and
mov
rcr
cmpsl
cmc
nop
xor
andl
int
loopne
sub
dec
jle
mov
mov
inc
lea
stc
mov
sbb
ret
jae
mov
data16
mov
or
bound
sbb
push
mov
movsb
mov
push
and
sbb
mov
add
call
add
push
mov
inc
divl
lret
pushf
inc
mov
push
int3
scas
pop
cmp
mov
sti
mov
sbb
or
push
cwtl
enter
jae
or
fildl
dec
icebp
mov
stos
rcrb
cmp
pop
mov
add
sub
adcb
inc
hlt
mov
pop
mov
icebp
popf
out
in
jne
in
int3
ret
rclb
mov
outsb
popf
xor
das
dec
xchg
repnz
add
dec
jge
mov
pop
add
call
int3
fsubr
pop
inc
in
test
enter
ret
mov
lds
jae
push
flds
add
mov
popa
jnp
out
sbb
adc
loope
in
cmpsl
movups
inc
rol
in
cmp
adc
mov
and
cmp
jp
hlt
or
lahf
inc
aaa
and
cmp
imul
int
cmp
jmp
aaa
pop
cmp
jae
jl
and
lret
or
in
js
pop
cwtl
pop
pop
int
mov
call
cltd
test
sub
xor
push
pop
ljmp
inc
mov
imul
outsl
sar
push
dec
adc
dec
mov
lea
shrl
sahf
lods
test
cmp
push
dec
in
mov
std
push
and
gs
aad
shlb
cltd
fistpl
or
cmp
inc
lret
cmpl
ret
cmp
mov
fisubrs
adcl
and
mov
jbe
outsb
sbb
ss
mov
int3
mov
push
push
mov
in
jmp
outsl
inc
mov
add
call
hlt
es
mov
cmpsl
mov
icebp
jae
repz
or
mov
je
lods
rcl
mov
pop
mov
or
outsb
into
mov
and
pop
pop
jae
cwtl
jg
sub
cli
mov
dec
cmpsl
lret
xor
andb
arpl
add
pop
xchg
xor
outsl
and
inc
lahf
leave
stos
sbb
cmpsl
adc
scas
int
mov
movsb
mov
pop
mov
ja
imul
mov
out
stos
sbb
sub
add
call
iret
push
adc
pop
jecxz
into
repz
xchg
pop
xchg
inc
xchg
lahf
es
jbe
xor
xchg
out
jmp
push
das
lods
stc
outsl
add
and
sbbb
xchg
dec
xor
pop
cmpsb
cmp
inc
repz
imul
jmp
popa
dec
lahf
fucomip
or
fstpt
dec
imul
mov
mov
lds
scas
and
xor
push
neg
add
pop
ja
mov
push
test
jmp
add
call
stos
enter
xor
and
and
mov
mov
jp
pop
or
jae
mov
or
cs
or
mov
sub
cwtl
push
movsb
mov
clc
in
icebp
fst
push
movsb
imul
insb
int
movsb
insb
inc
jno
sbb
xor
jne
mov
push
icebp
ljmp
popf
movsl
or
cmp
push
or
outsl
testl
and
jne
loopne
cmp
fadd
mov
add
call
lahf
ljmp
lods
aad
rcr
les
outsl
aas
into
mov
fsubrs
nop
sub
cwtl
xchg
sar
or
cld
ljmp
push
xor
rorb
push
lds
lret
sbb
xor
mov
xor
pop
aam
imul
pop
movsb
xchg
lahf
xor
jnp
out
xlat
lret
jge
pop
les
repnz
sbb
xor
cwtl
adc
mov
bound
insl
lds
push
cli
dec
popa
mov
add
call
dec
or
inc
roll
pop
mov
mov
ja
mov
cmpl
sbb
jbe
mov
orb
jmp
inc
adc
ss
mov
push
adc
mov
xor
ljmp
pop
add
jp
fsts
loop
xor
mov
or
fwait
mov
sbb
mov
inc
loop
or
aaa
test
pop
jne
nop
jge
hlt
jg
mov
js
sub
xchg
cli
sbb
sti
test
add
call
test
sti
jno
adc
std
pop
mov
ret
push
rcrb
mov
mov
outsl
scas
lret
dec
cmp
out
fcomip
in
sar
leave
xchg
sti
test
dec
cmp
mov
mov
js
loope
inc
in
adc
mov
test
push
insb
dec
leave
xchg
subb
into
lds
pop
leave
stc
aad
xchg
inc
cmpsl
mov
inc
stos
ror
out
add
xchg
outsb
cld
jl
inc
pop
add
call
or
or
adc
and
push
loop
in
cmp
rclb
orl
shl
in
add
cli
cltd
sbb
fnstcw
inc
cmp
andb
push
hlt
gs
pusha
and
push
add
mov
pop
sbb
mov
popa
mov
and
xor
ss
add
fdivrs
cmp
fbld
and
pop
and
mov
jne
incb
add
call
xor
cld
cmp
add
aad
bound
pop
mov
mov
and
mov
adc
xor
dec
xor
xchg
test
dec
decl
call
or
mov
ficoml
in
mov
jno
cmp
stos
in
and
dec
outsl
aaa
shrl
ficoms
insb
cs
aad
std
and
cmp
repnz
jl
cmp
daa
and
aam
out
pop
pop
jecxz
xchg
xor
es
pop
xchg
aad
in
in
test
jp
pop
xor
js
add
call
push
icebp
add
and
in
lahf
or
shlb
aad
fadds
sbb
loopne
mov
inc
jmp
pop
mov
out
ret
pop
mov
inc
aaa
popf
popa
dec
add
enter
rcrb
pop
mov
cwtl
jb
and
dec
xor
movsb
mov
insl
cmpl
jge
subb
inc
push
push
cltd
iret
lcall
cmp
pop
sahf
and
push
rorl
popa
cwtl
mov
push
inc
mov
sub
xor
arpl
repz
xlat
sbb
add
call
mov
popf
aam
das
xchg
and
add
cmpl
dec
cmp
jb
inc
shrb
ja
jecxz
ds
and
js
cwtl
ja
mov
sub
mov
jmp
xorb
iret
pop
xlat
fs
jp
sti
xchg
orb
ret
push
push
ret
pop
mov
aaa
mov
stc
lods
test
fmull
add
ret
out
mov
es
jnp
filds
jbe
testb
call
je
mov
push
push
or
sub
adcl
lcall
jge
out
mov
dec
xchg
inc
mov
pop
adc
leave
jl
shrb
mov
jmp
out
sub
xchg
aas
sbb
out
lock
pop
jae
inc
sar
imul
les
loopne
dec
lock
add
xchg
sub
mov
shlb
in
arpl
add
or
xor
or
cmp
push
iret
or
xchg
or
call
test
call
pop
jb
dec
mov
loope
sbb
lods
hlt
inc
sub
sbb
repz
out
mov
mov
cld
jns
fdivrl
fidivrl
in
js
pop
xor
js
push
mov
mov
mov
mov
or
clc
cld
and
aaa
add
xchg
scas
fwait
sub
stos
inc
orb
push
push
pop
pop
inc
outsb
shl
sub
fwait
movsl
dec
aas
testb
mov
es
pop
repnz
adc
xchg
jne
outsb
xchg
mov
call
dec
add
mov
inc
int3
cmp
in
ja
mov
icebp
adc
sahf
loop
in
add
inc
dec
and
adcl
cmc
insb
sub
push
cmp
movsl
test
in
cmp
xor
mov
adc
add
jp
pop
or
test
mov
ret
in
mov
cmp
and
jo
in
icebp
sub
rclb
ljmp
inc
jns
xlat
pusha
or
xor
dec
jg
xchg
pop
test
fdivrl
jb
add
call
lock
dec
aas
adc
pop
inc
jecxz
mov
into
daa
repnz
pop
shrd
ret
and
addr16
popa
fldl
mov
cld
pop
add
and
iret
roll
mov
sub
fwait
sahf
cli
cli
or
jne
sub
or
jne
fsubr
fdiv
sbb
fbld
lock
xchg
pop
jne
sbb
and
sbb
xor
adc
mov
or
jl
aaa
dec
std
je
jmp
test
repnz
aaa
xchg
and
xchg
pop
in
pop
lret
sub
xchg
add
call
add
test
gs
rclb
not
mov
shl
add
and
adc
adc
test
cwtl
mov
xchg
pop
jbe
add
and
faddl
xchg
lea
outsl
mov
out
test
jmp
daa
das
mov
push
mov
sbb
jae
jne
vpsrad
divl
fs
adc
pop
and
stc
mov
movsl
repnz
jp
movsl
or
add
loop
xor
call
push
xor
pop
roll
in
fisubrl
jl
push
adc
shll
pop
and
inc
jns
mov
jb
lahf
iret
out
xor
clc
jae
test
test
out
and
icebp
outsb
sti
std
int
lods
mov
addr16
sbb
push
fistps
xor
rcrb
inc
popf
cmpsb
push
lret
mov
popa
xor
xor
mov
lods
shl
add
scas
lret
cli
xchg
ljmp
and
in
add
call
inc
push
jo
test
pop
or
shlb
mov
nop
mov
ljmp
jnp
mov
negb
loopne
pop
into
push
fistpl
test
sub
leave
jp
testb
xchg
jne
pushf
cmp
adc
or
flds
cmp
out
ja
into
js
int3
sub
xchg
mov
xchg
add
faddl
out
push
scas
jns
leave
inc
add
adc
mov
xor
ds
add
call
scas
mov
sbb
cmp
fadd
mov
pusha
mov
addr16
lcall
sbb
and
push
cmovg
push
adc
lret
loope
xor
sub
imul
mov
cmpsl
xchg
sbb
dec
xchg
clc
test
and
xchg
shll
aas
add
push
inc
scas
iret
movsl
pop
adc
jmp
mov
push
inc
daa
and
scas
lcall
dec
push
imull
pop
out
daa
xor
or
or
mov
call
popf
aas
or
pop
push
jo
sbb
xchg
jl
dec
push
out
pop
mov
int
or
fadd
in
adc
push
mov
cmp
movsb
sub
xchg
mov
dec
std
mov
lods
jmp
sbb
bnd
enter
dec
imul
inc
mov
mov
dec
in
mov
imul
xchg
jnp
decb
and
xlat
push
testl
leave
sti
or
xchg
loope
ss
mov
test
testl
adc
call
sub
sahf
sub
pop
cmp
and
test
jns
int
out
adcb
sbb
mov
push
stos
fstpt
dec
pop
fs
jne
xchg
movsb
divl
push
insb
call
ss
std
mov
jl
cmp
pop
pop
outsb
in
pop
add
aad
jmp
jmp
mov
into
cld
mov
jo
mov
movsl
fisubs
sbb
adc
push
ss
repz
xchg
les
inc
mov
pop
dec
bound
push
test
add
call
xchg
pop
inc
xchg
push
std
mov
ret
jne
dec
push
loopne
adc
or
cmp
or
inc
insl
mov
daa
push
mov
jmp
hlt
loop
and
xor
push
divb
int3
or
dec
lcall
cmp
pop
push
sub
xor
jb
scas
mov
cltd
inc
icebp
enter
pop
sub
xchg
hlt
mov
push
in
cmpb
cwtl
repnz
sub
leave
adc
test
dec
gs
adc
adc
inc
dec
sbb
jns
insb
mov
push
jmp
and
call
sti
jecxz
cmp
jno
loopne
ljmp
mov
cmc
sti
test
adc
pop
test
ret
mov
in
and
xor
jl
mov
aam
or
nop
push
iret
mov
xchg
sbb
jb
sub
adc
leave
pop
stos
mov
mov
mov
mov
lahf
mov
pop
inc
jnp
cli
xchg
std
icebp
leave
ss
inc
push
idiv
push
call
jno
jo
mov
add
call
or
push
xor
outsb
xchg
scas
iret
loopne
mov
jae
push
sbb
nop
inc
mov
fsts
aaa
movsb
adc
mov
test
sub
jbe
or
mov
inc
cmp
xor
jnp
ljmp
cmc
or
sub
lahf
subb
popa
xor
insb
shll
bts
dec
sbb
mov
jb
ja
fistps
adc
push
cmp
jno
pop
clc
cmpsb
inc
sbbb
mov
into
neg
push
das
mov
mov
push
add
call
push
nop
inc
cmp
push
out
push
nop
lods
data16
xchg
add
push
in
int3
mov
je
dec
lods
into
cmc
pop
push
mov
and
pop
lret
mov
fwait
aam
push
daa
outsb
push
lods
or
aas
mov
fcomps
adc
int3
fisubrl
out
mov
xor
or
lods
jg
push
jecxz
sub
ss
or
inc
jmp
movsl
inc
divb
iret
pop
mov
shl
gs
mov
add
xor
rorl
add
call
shlb
loopne
sbb
sub
add
xor
add
jp
push
shlb
cltd
lcall
enter
cmp
stos
arpl
ret
jb
stos
pushf
push
and
jb
xchg
mov
push
mov
mov
cmp
mov
inc
stos
push
dec
push
dec
sarl
xor
loopne
cli
subl
daa
iretw
adc
jge
imul
call
lcall
fistps
xor
jbe
test
adc
add
call
jbe
cli
fsubl
fisttps
mov
pop
cwtl
lods
test
mov
mov
xor
scas
dec
test
cmp
lods
mov
jg
call
push
jge
shrb
and
mov
cmovae
adc
mov
fs
testl
or
pop
push
aam
imul
jmp
mov
out
das
cld
aam
mov
lret
in
icebp
fnstsw
sarb
mov
add
insb
cltd
push
push
cmp
shrb
loop
out
dec
fdivl
call
sub
lods
fmull
xchg
sub
pusha
xor
repz
fs
add
leave
and
mov
pop
sbb
pop
leave
sbb
mov
inc
push
mov
int
mov
push
popa
inc
adc
dec
push
sub
int3
test
shlb
inc
mov
or
pop
sub
and
pop
mov
shlb
push
xor
dec
pop
cmp
add
cmp
mov
push
mov
pop
lahf
mov
or
clc
dec
sahf
add
call
das
icebp
sbb
and
cmp
out
cltd
add
fsubl
mov
dec
insb
sub
pop
bound
push
fcmovne
sarb
repnz
cmpsb
das
shlb
jbe
cmp
out
jl
mov
repz
mov
out
rcrb
cmpsl
xchg
inc
int
jmp
sub
push
loope
cli
adc
mov
test
cmc
mov
popf
sbb
loope
xchg
inc
xchg
adc
sub
pop
addr16
addb
jns
pop
rolb
cmpb
or
add
call
clc
mov
rcrb
jns
pop
addr16
mov
inc
add
adc
mov
adc
orl
sub
out
sbb
out
call
jmp
inc
xorb
mov
jecxz
mov
sahf
aaa
call
pop
dec
fldl
pushf
dec
out
dec
xchg
sahf
dec
insb
fcompl
cmpsb
adc
rol
push
jnp
sbb
or
les
js
mov
clc
fnstsw
push
aaa
pop
xchg
push
and
inc
aas
pop
rolb
add
call
sbb
mov
dec
push
dec
fisubrl
xchg
sbb
shl
out
push
stos
scas
inc
push
scas
hlt
outsl
inc
jb
xor
stc
int3
data16
jnp
pop
inc
cmpl
inc
add
icebp
sbb
fsubs
test
xchg
pop
mov
gs
mulb
fsubrl
lds
movl
add
ja
aam
xor
arpl
pop
or
loop
outsl
je
aad
imul
roll
add
call
test
pop
push
sbb
ret
jecxz
and
sbb
sub
enter
xchg
shrb
icebp
xor
inc
lds
jle
push
lock
clc
negl
add
hlt
movsl
mov
stos
mov
js
cmc
push
dec
fucomi
mov
cld
scas
sub
push
nop
into
call
and
inc
btc
lea
push
jecxz
gs
lret
mov
inc
mov
fistpll
sbb
and
cmp
shrb
add
call
bound
int3
shrb
jo
sub
xchg
sub
xor
add
sub
popa
hlt
andb
push
push
sub
xor
jae
push
push
jle
lea
xchg
adc
mov
repnz
jge
dec
add
sti
test
mov
cld
pop
inc
gs
sub
mov
int3
cmpsb
stos
jg
test
movsl
fstps
repz
jp
movsl
mov
mov
cmp
mov
inc
js
in
aad
jg
add
call
leave
mov
pusha
in
out
jle
test
xchg
adc
loop
imul
jecxz
in
xchg
sub
mov
cmp
je,pt
or
push
push
stos
mov
mov
dec
shll
in
lods
scas
add
and
sub
dec
adc
scas
hlt
or
xchg
xorl
pop
mov
les
mov
mov
decb
push
xor
jp
mov
push
sbb
lret
xor
add
call
enter
lock
iret
pop
and
inc
sbb
add
sbb
push
or
mov
in
dec
andb
jmp
ds
push
mov
mov
pusha
mov
stc
out
dec
jle
lods
mov
pcmpeqb
cwtl
orl
outsb
sbb
aas
cmp
cs
dec
ja
in
sti
fldcw
inc
ja
dec
rorl
push
and
add
int3
mov
jne
jno
pop
mov
mov
dec
sub
push
cmpsl
pop
and
or
cmp
call
daa
jns
pcmpgtd
cmc
jl
inc
xor
push
mov
add
mov
lcall
add
stos
cmp
lret
sbb
movb
call
sub
cmpsl
adc
mov
mov
push
fdivrp
lret
push
or
add
sbb
repnz
inc
mov
sbb
adcb
mov
lods
lock
mov
jnp
cli
nop
xchg
lret
adc
and
std
mov
add
call
and
lea
shll
imul
clc
push
stos
iret
jg
ss
pop
cmp
mov
test
fadds
imul
cmp
ror
hlt
and
jb
aas
pop
push
nop
adc
repz
or
jge
sarb
scas
cmpsl
dec
mov
pop
push
add
fiaddl
inc
repz
mov
mul
add
cld
lcall
nop
sub
stc
fwait
test
cmp
jle
fstpt
mov
lock
pop
add
call
je
add
or
or
jns
push
jne
out
lret
mov
jnp
push
lea
xor
insl
pop
sbbb
push
inc
jno
and
push
or
fdivrp
xor
pop
dec
xchg
std
ret
dec
mov
sysenter
cmpsl
mov
sub
fbstp
adc
rolb
jmp
push
cs
js
xchg
jno
scas
es
xor
rclb
enter
lahf
subps
dec
adc
cmp
xor
sbb
frstor
mov
inc
sub
call
xchg
fdivr
sbb
or
push
nop
xchg
sahf
movsl
adc
sbb
inc
inc
lret
icebp
xor
icebp
add
repnz
pop
popf
fistl
scas
iret
jmp
jo
in
sub
add
lods
jnp
push
push
pop
mov
pop
mov
pop
xchg
pushf
pop
adc
or
or
fbld
inc
jge
push
or
add
in
es
enter
gs
push
cmp
out
out
pop
pop
pop
insl
adc
and
loop
in
call
inc
xor
xchg
jg
push
ret
call
xchg
stos
cmp
shlb
sbb
cs
pop
arpl
rclb
adc
push
push
cmp
rcrb
hlt
idivb
pop
adc
cmp
adc
xchg
jle
jnp
je
push
in
ret
mov
lods
jecxz
mov
call
cmpsb
into
sbb
outsl
in
sub
cmp
imul
in
jb
jne
imul
jle
xlat
add
mov
stos
mov
out
push
adc
xlat
jl
xor
sbb
shll
call
fsubp
imul
push
sub
pop
sbb
imul
fadds
inc
and
jl
adc
mov
std
out
stc
sbb
push
xchg
inc
sbb
inc
loopne
push
pop
jnp
out
mov
ljmp
mov
cmc
xchg
adc
sbb
jo
testb
hlt
je
cmp
mov
scas
je
clc
xor
push
filds
cs
lds
pop
test
mov
dec
clc
adc
lods
pop
test
shlb
xor
flds
call
mov
pop
push
in
cmp
add
push
scas
sub
or
cmpsb
cmp
popf
into
enter
out
mov
int3
cmp
mov
ret
push
shll
mov
pop
cmp
jmp
jl
xorl
mov
shrl
pop
jo
mov
xorb
and
xorl
jae
push
xchg
lcall
loope
jb
arpl
mov
and
rcl
insb
mov
call
mov
mov
rep
add
call
push
mov
fdiv
aaa
loope
and
ds
fwait
ror
loopne
jmp
ficoml
mov
pop
mov
mov
push
ss
sbb
repz
xorb
mov
stc
cmp
adc
stos
push
lock
icebp
jne
xchg
push
mov
and
lods
cli
cmp
test
iret
push
push
jb
xor
or
inc
ss
cmpsb
inc
test
mov
imul
sar
push
inc
cmp
push
xchg
sahf
clc
mov
mov
and
inc
rol
cld
jo
xor
call
testb
jp
cwtl
outsb
mov
mov
lods
cmp
or
jmp
testb
leave
sub
xor
jb
pop
mov
jae
jo
sahf
ja
cmpl
pop
mov
pop
and
cltd
cmc
mov
dec
jb
scas
pushf
push
push
xor
scas
pop
mov
pusha
int3
mov
dec
or
cmp
mov
sbb
and
aaa
cmc
cmp
into
mov
lret
outsl
test
lcall
in
add
call
jns
scas
inc
cmp
jg
in
pusha
ret
jge
mov
lock
add
xchg
xchg
enter
pop
sbb
scas
movsl
sbb
les
je
pusha
orl
or
adc
sbbl
and
and
das
hlt
jne
icebp
loope
xor
jno
push
add
push
fmul
mov
leave
ficoml
dec
push
sub
loop
pop
mov
cmp
pop
inc
cmc
sbb
ret
loopne
mov
icebp
or
cld
pop
sahf
add
call
jmp
pusha
sbb
fmull
dec
jns
movsl
cld
imul
stos
std
pop
lock
xor
arpl
dec
pop
sbb
adc
xor
mov
cmp
push
cwtl
add
insb
mov
xor
pusha
lret
and
xchg
mov
pop
addr16
test
sub
data16
dec
sub
sbb
mov
add
subb
add
add
push
cmc
in
or
sbb
ljmp
loope
cmp
adc
movsl
inc
clc
testl
dec
push
ret
add
call
mov
cmc
cltd
dec
popa
shl
into
cmp
push
xchg
push
lods
dec
es
daa
test
fstpt
ret
mov
and
mov
jbe
and
andl
cmc
fcompl
iret
pop
outsl
add
add
cmp
add
cmp
dec
shl
mov
add
push
mov
fsubl
or
movsl
add
xchg
xor
int
ljmp
mov
pop
in
sti
test
adc
add
stos
sub
test
add
call
outsl
insl
or
aam
inc
test
hlt
add
or
push
or
outsb
fcmovne
out
lcall
outsb
gs
adc
xchg
ds
leave
pop
push
jnp
xchg
aad
scas
mov
or
lods
mov
jge
xor
int
pop
stc
cmp
je
daa
sub
push
mov
repz
call
pop
lock
dec
shlb
imul
or
stc
inc
in
sbb
cld
cmp
out
iret
inc
or
lret
das
add
call
cld
xor
movb
pusha
jg
adc
and
jae
cmp
pop
lock
push
mov
iret
jge
shl
adc
jbe
fs
pop
enter
mov
and
ret
in
mov
cmp
addb
mov
shll
stos
das
jle
insl
mov
mov
gs
xor
mov
pop
repz
mov
xchg
mov
xchg
and
and
mov
or
xchg
sbb
add
call
shlb
out
popa
insl
frstor
daa
mov
ds
xor
lods
rorl
sbb
test
or
xchg
mov
xor
movsl
sbb
cltd
mov
mov
xlat
arpl
sub
or
aaa
lea
cmpsl
pop
mov
xor
lods
mov
lea
sahf
addr16
fsubp
inc
outsb
add
inc
fcompl
ret
mov
add
inc
movsb
push
pop
rcll
jnp
xor
dec
stc
pushf
pop
push
or
stc
dec
pop
jbe
sub
add
call
mov
shl
add
mov
sub
jg
push
jo
inc
jne
rcll
rcl
call
std
in
iret
icebp
rcrb
mov
and
aad
mov
lret
xor
js
sub
sbb
ror
out
sbb
ds
pop
sub
jl
jno
pop
lret
fs
xor
sbb
ss
js
xor
jne
xlat
xor
xlat
adc
push
push
and
mov
mov
jnp
add
call
aas
push
out
dec
sbb
popf
or
and
xchg
das
test
in
loopne
lods
jecxz
and
mov
dec
or
shll
pop
ficoms
ds
out
sbb
cmp
call
lea
pop
sbb
andb
out
call
xor
push
stc
out
lods
repnz
add
loope
jg
lahf
mov
jbe
cmc
inc
jl
inc
in
sbb
pop
int3
arpl
add
call
add
xor
inc
xchg
mov
xor
lock
in
xchg
push
pop
data16
jnp
test
pop
xor
xlat
fisttps
xchg
sub
test
mov
jne
mov
adc
stc
fistl
out
inc
int3
mov
xor
mov
aaa
mov
fxch
inc
inc
js
jb
shr
push
rol
dec
js
mov
cmc
jae
sub
ror
jne
notl
push
aam
sbbl
clc
dec
leave
add
push
dec
mov
add
call
pushf
jmp
repz
shll
les
sub
ret
mov
push
jnp
aad
dec
ret
jle
scas
bound
movsl
sti
enter
jmp
stos
xchg
sbbb
xchg
lds
xor
aad
out
mov
pop
and
sub
cltd
jmp
mov
sbb
das
icebp
dec
jo
sbb
sub
inc
pop
pop
sahf
cmpsb
addr16
testl
adc
addr16
aad
fwait
dec
jno
pop
inc
pusha
fiadds
push
jns
adc
add
call
mov
shrb
mov
std
push
push
sub
mov
imul
rclb
push
sub
adc
pop
add
in
bound
sbb
push
mov
or
movsl
aas
in
fistl
mov
jb
xchg
hlt
mov
pop
pop
mov
lcall
sub
push
gs
cmpsb
insl
stc
xor
clc
ret
and
push
mov
mov
loop
ljmp
call
pop
movsl
inc
roll
inc
call
test
jl
std
jge
stos
movsb
mov
inc
xchg
xchg
mov
xlat
sbb
scas
sub
cmpl
jecxz
iret
ret
into
loopne
mov
es
addr16
xor
xchg
sti
add
cmc
xchg
movsl
pusha
jle
lret
mov
mov
or
jne
roll
es
imul
addr16
insb
jns
add
mov
cmp
and
pop
popl
je
divb
outsb
or
pop
add
jle
xchg
sub
add
call
outsl
jmp
outsb
pop
ret
repz
xor
cmpsb
adcb
fs
rorb
inc
js
idiv
in
inc
mov
inc
test
std
imul
mov
sub
jecxz
adc
mov
cltd
subb
scas
mov
mov
call
cli
cmp
dec
leave
and
pop
loope
ss
fld
arpl
bound
add
or
inc
dec
mov
dec
loopne
mov
aaa
xor
mov
test
jecxz
add
call
and
mov
or
aaa
dec
mov
push
hlt
div
xorl
call
je
mov
lcall
das
fs
dec
push
arpl
mov
ffreep
jnp
pop
lcall
push
dec
xchg
inc
fsubrl
mov
imul
scas
add
and
daa
sbb
ds
mov
mov
xchg
mov
clc
pop
mov
or
mov
jle
and
leave
fdivs
pushf
mov
mov
add
call
inc
out
rol
lcall
outsl
ficompl
fldl
add
gs
call
aas
push
xor
decb
push
xchg
dec
sub
mov
adc
sub
inc
outsl
insb
xchg
jns
hlt
sub
fistl
push
cmc
ror
pop
jecxz
das
inc
outsl
daa
xor
out
dec
mov
xor
xchg
dec
lea
loop
jo
lret
xor
ds
push
test
aaa
adc
testb
lods
insl
xchg
call
inc
je
or
js
das
mov
in
push
call
mov
shll
jbe
cmpsl
mov
sub
mov
daa
out
sub
ljmp
sub
call
das
movsb
je
subb
int3
dec
hlt
inc
loope
repz
arpl
xor
pop
cmp
daa
cmp
popf
jp
and
lea
scas
jg
movsl
mov
or
decb
xor
cmp
jno
in
pop
les
push
leave
mov
mov
sub
into
add
cmp
jmp
aas
add
call
scas
dec
popa
cld
out
subl
sub
xor
jl
mov
movl
in
movsb
dec
inc
call
dec
mov
idivl
add
or
inc
int
xchg
dec
enter
fistpll
adc
in
xor
jecxz
ret
cld
pop
push
mov
cmc
mov
sub
cs
adc
ja
add
dec
jmp
inc
xor
insb
jmp
xlat
loope
int
jo
push
pop
sbb
sub
push
enter
cmp
iret
add
call
fstps
fs
jle
mov
sub
dec
aam
rolb
add
or
sbb
cwtl
in
movsl
jmp
and
xor
int
xor
dec
lea
fstpt
mov
mov
and
rcrb
jmp
mov
push
jo
ljmp
test
adc
push
aam
ret
jecxz
mov
mov
push
loop
lret
or
jb
add
mov
repnz
int3
push
sbb
daa
add
call
adcl
out
cmpsl
dec
fwait
cmp
aaa
out
jp
or
imul
cmp
push
cmp
int
jl
popa
mov
dec
adc
ret
gs
aam
fisttpll
pop
mov
xchg
fidivs
into
aam
push
mov
cmp
mov
enter
push
push
gs
insb
and
inc
cli
inc
rolb
outsl
inc
lods
lret
out
cmp
xchg
fildl
and
ds
fnsave
push
sub
cs
or
call
inc
xchg
int
mov
mov
sub
mov
mov
mov
dec
shrb
jns
push
cmp
cltd
mov
scas
std
inc
mov
push
inc
lods
pop
or
rcl
add
ds
or
dec
subb
sahf
test
add
mov
outsl
cwtl
add
push
nop
fsubrl
shlb
fidivs
in
sub
movsb
lods
stc
pop
test
pop
sub
mov
push
mov
adc
stc
pop
pop
cs
sbb
add
call
popf
push
cmp
jns
add
pusha
fwait
jmp
test
jns
int3
adc
repnz
mov
adc
ljmp
xchg
push
shr
xor
jns
roll
imul
cmp
pop
xchg
or
xchg
es
inc
out
leave
rol
imul
aas
adc
or
fs
test
xlat
mov
pushf
addr16
repz
mov
mov
cmp
lret
xorb
cmp
sahf
mov
call
addl
xor
mov
cmc
cmp
in
jge
movsb
add
push
sub
inc
sub
push
addr16
push
sti
xor
inc
into
inc
sti
jae
les
cli
sbb
xlat
mov
inc
sub
dec
mov
ret
pushf
loop
jl
fs
nop
movsb
jbe
ret
mov
pop
cmpsl
xor
hlt
stos
jge
syscall
mov
arpl
add
hlt
push
adc
xchg
xor
cmp
arpl
pop
mov
mov
or
jp
push
in
enter
call
fadds
out
xchg
fildl
pop
lods
dec
dec
fistl
mov
repnz
ss
and
iret
in
xor
jns
mov
or
js
pop
lea
iret
inc
jnp
xor
xor
inc
push
orb
push
into
jle
movsb
daa
shlb
cli
cmpb
sbb
xchg
mov
shrl
gs
shrb
mov
dec
test
sarl
ja
jo
andps
push
push
les
add
call
sbb
sbb
fs
mov
fxch
bound
out
jne
andb
les
aad
hlt
push
sbbb
pushf
pop
sarl
mov
push
mov
lahf
rolb
and
and
lret
or
nop
aad
xchg
in
nop
xor
and
push
pop
movsb
sahf
fwait
out
jmp
fidivrl
jmp
xchg
adc
mov
mul
loopne
sbb
in
sarb
sbb
aas
pop
cmpsb
lods
lcall
subl
add
call
mov
add
cmp
sbb
stos
pop
ficoms
inc
jno
sub
popa
insl
jge
lea
test
cmp
xchg
inc
sub
sub
xlat
add
mov
cld
rcll
in
fsubp
lea
stc
xor
xchg
xor
mov
fs
adc
and
lret
push
and
and
xchg
dec
mov
lds
test
cmp
insb
add
repz
xor
cmp
cmp
or
mov
sbb
inc
or
out
test
add
call
jo
arpl
xchg
out
adc
mov
add
cmp
xor
jp
jbe
add
stos
mov
std
cmp
in
addr16
outsl
or
xlat
jno
lcall
cmp
and
and
xor
cwtl
stos
test
cli
pop
test
mov
push
outsl
pop
add
mov
adc
push
and
push
daa
idivb
iret
mov
adc
gs
mov
push
imul
push
and
pop
pusha
sbb
inc
hlt
idivl
stc
mov
jo
stc
pop
xchg
shll
call
leave
mov
xor
sub
pop
push
fs
sub
in
ss
subl
cli
fidivl
cmpsl
je
and
jae
in
cmc
inc
iret
fwait
jg
movsl
int
test
pop
push
xor
and
pop
adc
in
inc
cmp
jne
out
push
jbe
icebp
sti
rolb
or
scas
movsl
movl
jo
add
inc
jmp
fisubs
mov
pop
int
aas
xor
in
add
sub
bswap
addr16
test
add
call
inc
bound
in
add
mov
jge
adc
lret
adc
push
daa
sti
jns
add
mov
inc
pop
enter
mov
dec
sub
lock
pop
in
jae
hlt
xor
dec
std
popa
mov
mov
std
in
ss
ljmp
or
inc
pop
xorl
xor
lcall
mov
ud0
xor
outsb
pop
push
cmc
mov
loop
cmp
nop
adc
and
fwait
jle
fstpl
addb
dec
ret
leave
add
call
dec
ja
dec
xchg
fildl
jbe
dec
idivb
and
xchg
sbb
xchg
mov
repnz
push
ret
imulb
pop
lock
bound
dec
or
fwait
data16
popf
cltd
std
mov
sub
in
jge
push
and
pop
cmp
add
sub
sbb
inc
cwtl
divl
dec
sub
fadds
and
int3
fstp
or
into
xchg
int
imul
mov
dec
xor
call
mov
push
std
jne
loope
xchg
push
jmp
mov
pushf
cmp
divl
push
out
mov
dec
out
jmp
clc
pop
add
hlt
adc
ljmp
mov
lcall
outsb
sarb
mov
into
outsl
icebp
xlat
in
pop
sub
stos
and
push
cmp
insb
shll
mov
in
mov
mov
sbb
fdivrs
lods
or
mov
jb
xor
lret
rep
andps
add
call
cmp
bound
cltd
adc
ret
repnz
lds
dec
xor
xor
and
mov
sahf
jl
mov
es
es
lea
mov
cwtl
lods
cmp
jbe
or
cmp
inc
fldcw
and
xor
jnp
xchg
lcall
shl
test
adc
xor
or
inc
push
adc
ret
pop
movsl
lahf
jne
mov
ret
rcr
mov
dec
stos
push
outsl
test
inc
add
call
stos
dec
cli
jo
mov
mov
pop
cli
jmp
push
ja
out
sub
mov
mov
pop
xchg
das
jge
addr16
js
cmp
imul
pop
push
mov
xor
lds
xor
fwait
jecxz
jp
push
and
cmpl
cli
push
adcl
mov
sbb
mov
sub
adc
adc
jmp
aam
loopne
inc
dec
in
fisttpll
call
add
mov
add
rcl
pop
push
inc
clc
mov
es
psubsw
lock
cwtl
or
mov
mov
stc
clc
push
lahf
out
pop
add
ficoml
or
nop
inc
mov
lret
les
mov
sbb
adc
sub
fs
or
jg
sbb
cs
push
fidivl
js
roll
mov
pop
test
out
jge
push
push
stos
in
cmc
add
call
pop
xor
fildll
aad
imul
and
inc
mov
mov
or
mov
mov
icebp
aad
pop
pop
rorb
and
faddl
or
mov
outsb
push
xor
outsl
mov
push
pop
mov
ja
jo
inc
arpl
imul
jmp
xorl
cli
mov
xor
sub
jecxz
shl
ljmp
mov
movsl
cld
xchg
inc
cmc
adc
jno
in
add
lret
xor
andl
test
call
les
lods
addr16
inc
ret
or
push
push
add
cmp
stos
shll
or
stc
mov
inc
inc
inc
cmp
sti
adc
call
cmpsl
push
and
cmp
dec
cmp
xchg
or
out
iret
push
mov
je
mov
gs
mov
dec
adc
or
push
mov
adc
arpl
pushl
sarb
jo
cld
gs
and
mul
jns
add
call
sbb
inc
out
sahf
fcmovne
aas
shr
mov
leave
out
addb
mov
jbe
xlat
scas
sub
and
movsb
out
lret
xchg
mov
mov
inc
aad
loopne
mov
mov
nop
dec
cmpsl
repnz
cmp
fs
mov
in
push
xchg
push
sub
or
hlt
gs
or
rclb
or
jecxz
adc
push
out
sbb
je
inc
push
pusha
mov
pop
mov
sbb
sarb
xchg
cmpsb
add
dec
sub
add
call
rclb
cwtl
add
add
cli
adc
lds
push
outsb
lret
cwtl
cmpsl
cli
lods
inc
js
sub
pop
mov
out
mov
pop
rorl
cld
push
and
mov
dec
or
addr16
gs
or
xchg
test
addl
fwait
addl
lret
lea
pop
mov
les
ljmp
jp
adc
jge
outsl
jae
push
shrl
loopne
cltd
add
pusha
mov
mov
push
fnsave
add
call
add
sbb
push
inc
adc
cmp
push
push
push
dec
mov
cmp
mov
pop
rcr
push
sbb
dec
call
adc
sub
pop
xor
dec
cmc
push
fldcw
cwtl
stos
ljmp
arpl
adc
dec
out
and
sub
adc
jbe
pop
cmc
pop
and
cli
mov
sub
or
jecxz
xorb
and
sub
test
in
shll
push
filds
add
call
into
mov
out
pop
test
adc
inc
cli
push
mov
std
jg
dec
andl
adc
nop
sub
dec
call
daa
xor
fidivrs
loop
bound
lahf
enter
es
cmp
sub
sti
outsb
and
xor
lcall
sub
adc
aad
jb
cs
cmp
xor
sub
in
inc
xchg
mov
or
scas
add
rolb
cwtl
pop
leave
sub
rclb
call
pop
cmp
in
mov
mov
and
test
add
jmp
les
popf
into
fs
lods
dec
aad
mov
inc
sbb
test
pop
nop
mov
and
add
xor
ficomps
and
fstpl
cmp
adc
and
cmpb
push
and
inc
aaa
push
lock
and
lret
jecxz
dec
lret
mov
je
jo
shll
bound
ret
xchg
cltd
push
nop
in
scas
scas
mov
jmp
test
add
call
insb
aam
dec
pushf
cmpsb
cli
and
ss
push
and
pushf
push
push
xor
inc
mov
push
insl
xor
jnp
cmp
adc
outsb
xchg
push
pop
jb
test
push
mov
adc
ret
xchg
push
lods
loopne
push
pop
sub
inc
sbb
cld
adc
jge
pushf
popf
ja
popf
imul
in
inc
int3
xchg
sub
push
xor
addr16
sub
lcall
scas
popa
mov
lock
ror
fst
and
sub
loopne
add
call
cmp
cwtl
jbe
shrb
in
loop
sbb
mov
sub
fstpt
jmp
cmp
mov
jb
outsb
pop
jecxz
loop
fdivr
pop
mov
lcall
cwtl
push
xor
fldt
cltd
add
lret
testb
xchg
cld
loop
rorb
test
push
rcr
outsb
xchg
or
dec
or
mov
push
test
sti
add
push
ljmp
call
push
mov
mov
jns
lods
shll
dec
mov
xchg
sub
dec
mov
dec
iret
stos
or
outsl
lret
pop
pushf
rclb
jo
xchg
jl
lds
lock
cmpsl
pop
pop
jecxz
jmp
fbstp
pusha
dec
popf
xchg
lds
loopne
jb
sub
mov
inc
sbb
push
sbb
bound
mov
add
pop
mov
or
pop
test
ljmp
imul
call
sti
rcr
add
popf
sti
loop
sub
clc
mov
mov
fbld
push
pusha
push
dec
shll
jnp
xchg
cli
jae
out
ret
out
scas
pop
add
push
xchg
cmp
mov
push
test
xor
sbb
jmp
hlt
xor
xor
mov
add
cltd
inc
sahf
push
in
aad
cmpsb
xor
jl
lahf
lock
cmp
aas
fwait
out
nop
mov
lds
insl
mov
cmpb
decb
or
adc
jle
add
call
lahf
outsb
iret
jge
sub
ljmp
and
and
push
mov
or
loopne
hlt
inc
jnp
xor
test
pop
loopne
in
mov
stos
inc
loop
pop
cmp
jg
lahf
add
mov
add
es
icebp
sti
pop
mov
sbb
cmpsb
mov
test
push
dec
jno
scas
loope
out
or
push
mov
mov
test
push
call
and
add
insb
xchg
fstpt
addb
popa
add
call
xchg
not
cmp
rolb
cmp
pop
scas
out
jg
mov
add
stos
loop
push
or
jb
cmp
jle
imul
push
pop
xor
and
sbb
fsubrl
push
jae
jo
cmp
clc
pop
std
fs
arpl
out
loopne
les
pop
xchg
push
mov
jbe
fisttpll
push
leave
mov
fisubrs
inc
fnclex
negb
pop
lea
fisttpll
arpl
sub
iret
inc
sbb
add
call
enter
popf
mov
repnz
mov
sbbl
movl
sbb
je
mov
inc
sub
xchg
into
fwait
inc
cmp
jo
cli
test
mov
sub
repnz
mov
fistpll
xchg
inc
adc
jge
jns
das
inc
dec
push
movsl
in
mov
cmp
mov
inc
mov
popf
and
cmp
adc
lahf
cmp
mov
mov
xchg
pop
sbb
jne
add
call
jg
xchg
mov
mov
mov
rcrl
mov
mov
cmpsl
dec
sti
mov
xchg
fs
cmp
daa
mov
cmp
dec
test
mov
ds
mov
clc
das
inc
push
fistps
mov
mov
scas
lahf
cmp
loopne
or
sub
mov
mov
adc
bound
xlat
inc
lret
insl
jno
fiadds
stos
cmpsb
mov
js
in
movsl
leave
adc
add
call
fstl
test
jne
sbb
cmpsl
inc
int
sub
dec
sbb
sbb
and
or
inc
mov
xchg
ret
outsl
test
pop
mov
sub
or
pop
push
xchg
jg
fcoml
nop
nop
test
shrl
sbb
pop
mov
mov
adc
xchg
jae
stos
test
jg
scas
cltd
sub
xchg
xor
or
inc
sbb
ja
xchg
sub
out
cli
bound
icebp
movsb
cmp
add
call
mov
add
jecxz
in
jb
int
jo
aad
ss
lds
sub
hlt
stos
movsb
popf
mov
pop
cmc
jbe
push
push
lea
adc
sub
sbb
subl
movsl
jge
aas
notb
and
cmc
aam
lahf
pushf
sbbl
fcmovnu
fstpt
pusha
test
mov
pop
addr16
pop
push
sbb
in
xchg
test
or
xchg
scas
inc
jmp
pop
xchg
inc
xchg
dec
inc
mov
aad
loop
sub
dec
das
fcompl
and
add
call
out
ljmp
pop
arpl
cld
roll
shrl
mov
mov
jb
pop
xchg
push
arpl
push
lret
add
aam
ds
stc
dec
mov
and
mov
cmp
rcr
xacquire
fwait
cld
push
mov
dec
imull
sbb
jae
out
add
insb
xchg
fwait
mov
movsl
out
lea
dec
mov
lods
pop
push
clc
pop
and
fs
add
call
and
cmp
movsl
push
mov
push
loope
pop
pop
loope
add
pop
sbb
xchg
mov
out
dec
and
int3
mov
push
inc
adc
cmp
pop
daa
adc
je
fsts
add
movsl
add
sti
inc
icebp
gs
jge
inc
mov
std
adc
push
push
push
xor
sub
test
add
je
sti
sbb
jge
das
lret
adc
xor
hlt
jg
or
push
out
sahf
and
mov
xchg
or
pop
push
jae
sub
add
call
xchg
pop
push
subl
lret
xchg
xor
push
fistpl
inc
or
or
aas
add
fiaddl
andb
and
xor
jl
mov
xor
scas
nop
gs
sub
popf
adc
enter
xchg
mov
in
leave
mov
out
add
fdivl
jl
fucomi
movb
inc
xchg
pop
into
mov
xor
lret
sub
mov
cld
fdivrl
out
cmp
sbb
add
call
mov
mov
dec
jmp
mov
dec
sub
sbb
je
std
into
daa
dec
add
push
add
push
adc
lock
lds
repz
mov
sub
mov
popa
push
pop
jo
pop
fwait
cmp
cld
pop
mov
lahf
mov
jecxz
test
and
ljmp
cmp
cmp
cmpsb
push
mov
cmp
dec
adc
pop
stos
xlat
lea
dec
push
lods
rol
mov
lea
add
call
aas
mov
mov
mov
mov
pop
js
adc
mov
lds
dec
aam
jmp
mov
inc
rolb
adc
pusha
clc
scas
test
scas
lock
neg
or
in
insl
cmp
mov
ret
mov
loope
sti
out
lret
push
ljmp
mov
out
movsl
fwait
rclb
adc
leave
mov
mov
pop
pop
push
loope
aaa
test
mov
lahf
add
add
mov
add
call
jp
adc
nop
fs
jo
xor
and
in
sub
into
mov
jns
inc
adc
loop
jne
mov
dec
cli
mov
jl
add
mov
insb
and
cmpsl
push
or
mov
mov
das
popf
mov
fwait
pop
fcmovnu
sub
or
aaa
int
mov
mov
push
loope
negl
outsl
cmpsl
mov
cmp
mov
mov
pop
ficomps
es
jl
cmp
call
ss
sbb
repz
jno
and
fptan
stos
ret
gs
dec
push
test
xlat
out
dec
and
xor
cmpsb
mov
cmpsb
mov
imul
test
jbe
jns
movsl
push
dec
jne
inc
loope
pop
adc
mov
outsl
jmp
dec
outsl
dec
or
cmpsb
adc
inc
or
repnz
pop
xor
inc
mov
les
cwtl
mov
dec
and
cmp
jmp
mov
jne
jg
add
call
and
dec
aaa
sbb
sbb
mov
stos
xlat
rcll
push
popa
loop
gs
fistl
sbb
xor
xor
das
imul
sahf
cmp
sbb
rol
icebp
pop
sbb
jmp
fwait
je
movsb
add
fwait
xor
test
lahf
jg
xchg
data16
adc
push
push
mov
loop
rcrl
mov
testl
lret
divl
shrb
mov
call
adc
arpl
mov
or
mov
int
inc
jne
out
aas
cmp
enter
imul
addb
fldcw
add
pop
sbb
mov
mov
rcll
jae
mov
and
in
pop
sub
push
std
push
sub
negl
movsl
fists
inc
cs
lock
pop
add
or
pushf
in
cli
outsb
int
adc
add
lcall
push
mov
xchg
das
jl
repnz
add
call
mov
push
out
jb
rcll
xchg
push
int3
in
cwtl
dec
fidivrl
imul
cmp
movb
and
test
mov
mov
or
mov
loopne
adc
aam
cmp
jl
sbb
out
iret
dec
or
jg
or
mov
outsl
stos
inc
jle
icebp
jl
mov
jne
cmp
mov
outsl
rorb
jge
mov
daa
jle
jmp
jecxz
mov
jg
inc
sbb
adcl
or
dec
lea
call
stos
mov
fwait
adc
dec
xchg
in
int
stos
mov
out
shl
or
loop
cmpsb
pop
dec
jne
js
mov
adc
std
bnd
mov
loop
enter
pop
pop
lods
aam
test
outsl
in
push
jae
in
jae
inc
pop
sbb
pop
or
inc
mov
sbb
sbb
push
sbbl
adc
imul
or
sbb
ret
lcall
push
mov
mov
mov
add
add
call
pop
fmulp
fdivs
cmp
adcl
push
jae
stc
or
inc
mov
jecxz
out
add
fstps
cltd
and
ja
adc
movsl
adc
jmp
cli
cmp
int3
scas
lods
lods
hlt
int3
cmp
adc
shlb
outsl
sbbb
mov
push
jb
cli
mov
lds
ret
jge
outsl
cltd
and
pop
ret
insl
ljmp
cmpsb
push
sub
ja
aas
idiv
mov
ffreep
addr16
call
movsb
cmp
fisubrs
xchg
out
fsubs
sti
add
push
in
add
jp
or
and
mov
fcompl
clc
xchg
mov
arpl
jmp
clc
jecxz
aaa
std
jg
idiv
mov
sub
stos
cmp
push
sbb
fdivrl
or
pop
ret
cmpsl
flds
add
pop
lea
pop
into
push
ja
pop
add
or
xchg
dec
adc
pop
outsl
adc
nop
mov
push
xchg
or
sub
mov
dec
sti
in
push
sbb
add
call
loop
sub
and
add
adc
push
mov
xchg
cmc
movsb
out
jns
aas
movsl
xchg
cmp
jl
mov
addr16
mov
lods
das
lods
int3
mov
ret
inc
or
shr
std
mov
test
sbb
pop
lods
sarb
sbb
jmp
pusha
cmc
push
jnp
fadds
cs
aas
sub
lea
nop
sbb
decb
mov
push
cli
xchg
push
mull
xchg
sub
in
or
add
call
stc
dec
iret
mov
add
jne
loop
adc
sbb
stc
push
repnz
or
xchg
rorl
shlb
or
mov
repz
mov
mov
adcb
or
lret
push
jo
sub
mov
add
leave
ja
shll
mov
rolb
cmp
inc
icebp
mov
popf
outsb
pop
xchg
test
iret
sbb
add
adc
jle
in
add
call
test
mov
mov
inc
cltd
add
sbb
mov
sub
cmp
add
out
sub
sbb
mov
and
insl
into
cld
ljmp
orl
inc
ret
xorb
jns
dec
sub
outsl
or
lret
repz
fcompl
add
xor
or
cwtl
arpl
fs
push
inc
and
inc
outsb
shlb
cmp
mov
imul
lret
mov
pop
xor
sbb
out
sbbb
push
inc
icebp
call
aas
xchg
cmp
jg
lods
xchg
pop
popf
cmpsb
dec
dec
pop
pop
out
pop
pop
gs
hlt
cmpsl
push
je
pop
push
mov
sub
movsl
cltd
jno
sti
mov
jg
sbb
add
adc
movsl
hlt
dec
jne
ss
sbb
sub
or
dec
ljmp
xchg
sub
mov
mov
jg
jle
fistl
pop
lcall
aas
add
mov
adcl
jno
out
adc
jb
add
call
mov
movsb
movsl
mov
imul
add
movb
stos
inc
lea
mov
mov
out
xchg
mov
adc
clc
inc
jnp
sbb
adc
repz
xchg
cltd
push
loope
fs
movsb
and
add
and
pop
rol
add
jp
ficoml
mov
outsb
ss
mov
fs
push
mov
inc
pushf
in
imul
fldenv
test
iret
dec
jge
add
call
fsubrs
test
icebp
push
lcall
rclb
gs
cltd
mov
enter
imulb
mov
das
xchg
repnz
push
jno
add
xor
mov
int
push
mov
clc
sub
xor
adc
dec
imul
rcr
and
repz
dec
lock
push
jle
mov
push
andb
xchg
imul
out
loope
adc
inc
mov
mov
adc
add
call
add
push
imull
jg
hlt
sub
lea
shll
and
sbb
add
adc
sub
mov
mov
jb
push
xlat
test
lret
jns
mov
mov
pop
jecxz
pushf
adcb
lock
adc
fsubrl
dec
lds
rcll
and
mov
test
mov
lds
cmpsl
inc
adcl
movsb
sahf
and
cmp
rcrb
ljmp
shrl
frstor
or
or
call
scas
pop
inc
cmp
out
mov
ljmp
mov
dec
adc
mov
sub
popa
in
cli
add
popf
xchg
dec
adc
fildl
lret
and
mov
sbb
jae
mov
xor
mov
pop
fxch
pop
xchg
pop
dec
xor
jns
repz
inc
or
rep
imul
mov
pop
repz
mov
mov
or
cs
xor
out
add
sub
int3
push
scas
jns
mov
aad
and
out
add
call
mov
mov
pop
sbb
sbb
add
dec
fldcw
into
push
mov
dec
sbb
in
icebp
or
insl
test
das
lds
subl
xchg
lahf
inc
scas
pushl
mov
ds
in
add
test
mov
mov
sbb
adc
fwait
shlb
pop
sub
cmc
outsb
inc
jbe
or
jbe
test
adc
mov
or
pop
mov
ds
outsb
xchg
cmp
fidivs
inc
mov
cwtl
and
add
call
test
rcrl
add
xor
mov
and
pop
add
popa
popa
pop
xchg
adc
repz
mov
mov
iret
xor
rorb
mov
test
xchg
dec
mov
imul
scas
jnp
pop
sub
mov
or
inc
xchg
ss
pop
pusha
mov
aaa
inc
dec
cmp
fs
cltd
data16
sub
jg
ds
cmp
imul
xor
idivb
aad
pop
pop
mov
sub
add
call
scas
je
leave
cmp
add
mov
xlat
add
sbb
or
int
push
mov
push
stos
xor
pop
in
in
cli
mov
imul
xchg
call
cmc
push
xchg
popf
ja
adc
push
push
mov
jbe
les
jbe
or
jnp
adc
or
inc
xchg
fldl
pop
dec
jp
ja
fisubrl
and
add
mov
jb
into
inc
adc
into
std
inc
int
pop
xlat
jmp
add
call
or
sar
pushf
shr
ret
cmp
jp
out
push
push
mov
imul
sub
push
aas
mov
jae
dec
or
mov
aam
int3
into
inc
sub
cld
sbb
repz
sahf
xor
sub
aaa
dec
std
and
add
mov
popf
pop
mov
jmp
jb
das
lret
in
mov
and
shll
sub
cwtl
aaa
test
shll
aad
lods
scas
lahf
or
cwtl
mov
flds
imul
call
lea
sbb
repz
pop
adc
test
outsl
ss
mov
xchg
movsb
jmp
jno
push
sub
sub
or
dec
add
fwait
aad
inc
sub
fstpl
roll
add
and
and
and
pop
mov
mov
jno
scas
xor
in
add
je
mov
push
jbe
lea
add
movsb
sub
pushf
pushf
xchg
or
movsb
or
xor
xor
mov
cmp
cltd
stos
adc
fisubs
call
fnclex
inc
mov
inc
xchg
repnz
push
and
stc
mov
or
loop
gs
xchg
popf
lods
insl
fldt
call
xor
sti
fcmovnbe
rcr
mov
inc
popa
mov
incb
add
dec
add
push
mov
fwait
stos
xchg
pop
cmc
sub
out
jns
cmc
or
setle
je
out
fildl
movsl
inc
mov
sbb
lret
dec
xor
sub
mov
mov
dec
inc
into
pop
xchg
lret
insb
xchg
jge
add
call
mov
cmpsb
push
jg
inc
mov
aam
popa
jecxz
imul
mov
movsb
sbb
inc
xchg
scas
adc
in
sarb
jle
sbb
movq
ficompl
cmp
insl
lock
arpl
outsb
mov
mov
sbb
arpl
adc
ljmp
or
repz
enter
mov
adc
imull
and
enter
inc
pushf
jb
movsl
mov
sub
pop
adc
mov
push
and
add
call
xor
add
dec
negb
jo
repz
fcompl
in
jge
ss
inc
mov
mov
push
mov
fcoms
mov
jns
mov
jecxz
pop
mov
shl
pop
in
int
loopne
pop
xchg
mov
cmp
popf
mov
xor
in
leave
enter
or
ss
sub
pusha
jmp
daa
push
fistps
clc
fstps
jmp
ja
nop
push
scas
popf
and
cmp
sbbl
add
call
mov
jo
xor
xor
jae
mov
mov
ror
push
aad
insb
orl
xor
inc
xor
leave
jg
into
loopne
mov
sbb
pop
subl
cmpsb
xchg
in
movsb
ret
test
cmp
roll
xchg
jb
insl
push
jg
lcall
xchg
mov
mov
dec
dec
push
mov
fwait
test
add
scas
in
or
gs
pop
xacquire
jge
lods
sbb
in
out
cmc
add
cmc
add
call
jns
shrb
inc
out
enter
cmpsl
mov
or
sti
jo
sub
movb
scas
cmp
enter
ja
pop
add
push
xor
mov
xlat
out
xchg
mov
js
sub
sub
jns
rdmsr
push
or
push
stc
cwtl
cmp
xchg
aas
push
bsr
into
pop
rolb
mov
lcall
add
sub
and
mov
call
call
mov
inc
stos
fdivrp
mov
xchg
cmp
xchg
mov
xor
addl
mov
jno
je
aaa
and
xor
cmpsb
scas
fdiv
xchg
pusha
outsl
jmp
pop
imul
movsb
pop
or
sbb
push
scas
add
out
lea
out
das
insb
js
push
pushf
mov
mov
dec
adc
ja
pop
pop
cmc
dec
adc
imul
pop
and
scas
pop
cmp
sub
lods
popf
push
out
and
adc
in
jnp
je
out
sti
es
imul
add
call
hlt
add
mov
adc
hlt
or
fsubrl
fcoml
imul
jnp
lods
fnstcw
cmp
sub
ljmp
inc
sahf
int3
adc
push
inc
dec
sbb
stos
jne
nop
cmc
sti
mov
movsl
mov
fucom
jmp
es
lahf
xchg
sub
cld
mov
loop
scas
out
mov
orb
sbb
mov
sbb
jge
das
test
or
lret
lret
pop
xchg
push
clc
scas
mov
and
lods
leave
test
mov
nop
dec
add
call
inc
jp
repz
xorb
dec
jp
inc
popa
shlb
add
sar
pop
or
das
scas
jmp
sub
and
aad
aas
cld
pop
xor
scas
mov
mov
outsl
pop
mov
aad
push
out
js
lahf
push
inc
cmp
xchg
jns
mov
pusha
into
sbb
sbb
shlb
add
inc
or
stos
cs
jne
sbb
inc
scas
out
xchg
sbb
out
loop
mov
lcall
ret
add
call
add
nop
jmp
hlt
or
mov
loop
ds
rclb
scas
adc
outsl
adc
js
stos
push
jnp
xchg
and
inc
xor
dec
js
bound
sbb
stos
mov
or
ret
cltd
mov
push
pop
loop
mov
add
orb
subl
mov
mov
sub
mov
push
stos
mov
aas
xor
xlat
scas
or
adc
sbb
loopne
aad
sub
call
jbe
dec
sub
mov
jg
sbb
das
sbb
or
js
out
dec
das
daa
or
aas
jmp
sbbb
xchg
mov
ffreep
lahf
aam
pop
jmp
gs
xchg
jb
cmp
lret
jae
push
jge
shld
addr16
inc
test
outsl
loopne
stos
xor
cltd
sbb
push
cmp
pop
mov
mov
xlat
mov
test
inc
dec
imul
inc
test
adc
loopne
pop
loopne
add
call
jmp
cmp
test
rclb
jo
sbb
enter
lods
or
dec
sbb
outsl
test
inc
clc
movsl
imul
mov
lahf
jp
lahf
subl
cmpsl
mov
arpl
mov
inc
add
sub
dec
repnz
mov
mov
jns
mov
adc
push
repnz
out
sbb
out
adcl
insb
loope
xchg
mov
inc
adc
dec
incl
mov
add
call
or
pop
test
mov
push
outsb
push
pushf
lret
xor
mov
clc
data16
mov
sub
sbb
in
rcrl
jmp
shlb
xor
sbb
subb
lds
sub
popa
into
sub
jp
mov
test
scas
idiv
xor
mov
fcmove
jo
jne
cmp
sti
dec
data16
adc
inc
add
shrl
xchg
cmc
mov
push
clc
jecxz
cmp
pop
loopne
loopne
add
call
int
popa
add
dec
sbb
scas
jns
jb
loop
ds
lods
jns
jo
in
mov
ljmp
mov
and
arpl
sub
int3
insl
insb
pop
sbb
ret
push
out
mov
js
pop
test
jbe
push
inc
iret
jae
int3
test
in
jl
and
das
ret
jge
loopne
int3
xchg
dec
xor
mov
jl
fwait
ja
push
out
movsl
dec
xlat
mov
popf
inc
adc
xchg
pop
sti
repnz
lahf
clc
out
sarb
add
call
xchg
push
jb
cmp
mov
xchg
mov
frstor
xor
lods
pop
mov
outsl
push
sub
or
xchg
add
adc
dec
cltd
sbb
lock
addb
mov
adc
inc
lea
fldl
or
dec
or
sub
notb
push
shr
negb
push
out
shll
loop
add
sub
test
lret
jo
add
xchg
xor
mov
rorb
sbb
call
call
call
sbb
cmp
dec
or
xchg
add
xchg
and
mov
cltd
cwtl
mov
scas
scas
and
sub
jnp
jge
cmpl
lods
or
imul
lret
jo
mov
mov
mov
inc
xchg
cwtl
lahf
xlat
ret
mov
inc
lea
push
leave
jne
mov
xor
shrl
jo
pop
mov
push
sub
and
jg
pop
dec
fmuls
jnp
xor
lret
call
cmpl
ds
loop
jp
sub
es
mov
xchg
js
ret
nop
push
push
add
sbb
mov
lret
shll
jae
jne
or
fs
and
std
xor
pop
mov
lcall
js
push
pusha
sub
in
or
adc
rorb
enter
and
testl
mov
xor
out
xor
pop
das
enter
jno
pop
lods
loop
fidivrl
lock
fidivs
pop
xchg
arpl
roll
call
xchg
jle
jge
ljmp
sti
repnz
pop
add
lcall
aam
and
mov
int
mov
inc
arpl
xchg
jg
in
test
pop
ja
adc
jecxz
scas
fbstp
sub
repz
sub
inc
shll
xchg
jnp
in
jmp
sub
js
fst
xchg
imul
or
adc
add
scas
mov
icebp
push
sbb
xchg
mov
mov
xor
add
call
ja
sub
cmpsb
push
iret
in
pop
sub
cmp
xchg
dec
sub
shr
loope
jb
mov
jnp
ljmp
adc
jbe
arpl
aas
cmp
nop
xchg
fldl
adc
xchg
mov
fstl
std
movsl
mov
aad
out
and
xchg
adc
pusha
jae
add
subb
and
cmp
sarl
rcl
ffree
in
fmulp
adc
divl
mov
push
dec
cmp
xchg
jg
add
call
leave
mov
mov
xchg
pop
in
loopw
jmp
aam
xor
or
loop
fs
cmp
mov
fwait
mov
stc
push
fsubr
scas
out
out
jnp
out
repnz
fisubl
lea
bound
loope
jge
in
cmp
add
sub
sub
add
adc
mov
jns
inc
fildl
lcall
je
int
push
rol
jbe
mov
loopne
arpl
js
pop
xorl
dec
ljmp
xchg
add
call
ret
call
pop
mov
je
cmp
mov
and
xchg
repz
aam
sarl
sbb
hlt
insb
cmp
ds
and
push
cwtl
ficoms
clc
push
mov
or
loop
out
cmp
cwtl
mov
mov
pop
add
divb
out
pop
cmpsl
in
jl
lahf
ss
jne
inc
test
roll
imul
pop
sbbb
push
xchg
loop
inc
and
dec
cwtl
sbb
push
stos
push
mov
nop
jg
inc
mov
pop
sub
dec
pop
add
call
jge
scas
dec
icebp
push
loope
push
pop
sbb
addr16
sbb
pop
int
je
mov
add
push
xlat
cld
mov
test
adc
jne
or
enter
daa
jmp
int
sbb
lock
jmp
push
push
ret
sahf
test
mov
sub
cmp
dec
incb
aas
mov
fsubp
mov
cli
push
gs
xorl
int3
sub
mov
xor
mov
push
loopw
cmpsl
aaa
mov
mov
shlb
call
add
stos
jle
ret
pop
xchg
js
jle
hlt
rcrl
sahf
or
fsts
mov
lods
insl
cmp
sbb
or
cltd
jo
popa
xchg
jg
add
sub
mov
into
mov
loope
xor
sub
fsubl
push
push
add
xor
scas
outsl
mov
jmp
add
pop
jmp
inc
inc
adc
mov
mov
nop
mov
in
and
xchg
inc
pop
js
mov
aas
dec
push
push
aam
cmc
push
push
add
call
test
mov
cwtl
loop
sbb
repnz
mov
cmp
pushf
sub
xchg
mov
pop
mov
dec
les
jne
push
push
pop
out
fwait
push
js
out
sub
cmp
push
xchg
or
mov
aam
addr16
mov
push
cmp
inc
cmp
lea
bound
or
loopne
pop
push
sbbl
cmp
ficoms
stc
lock
repz
xchg
and
jp
cmpsl
push
mov
jnp
enter
call
inc
ret
test
mov
or
mov
add
mov
xchg
int3
xor
movsb
mov
mov
in
cmp
das
xchg
jp
sti
mov
adc
cmp
div
loop
icebp
ja
int3
jno
test
adc
fcmovnu
add
or
repz
out
sahf
in
push
mov
dec
lock
sbb
push
dec
insb
mov
std
sbb
mov
icebp
sbb
and
jg
sbb
inc
iret
subl
mov
in
sbb
sbb
add
call
jb
xchg
mov
push
popf
mov
int3
add
push
push
xchg
or
pop
mov
mov
stc
outsb
pusha
inc
clc
pop
mov
xchg
push
mov
stos
out
xchg
fucom
enter
dec
int
jae
andb
cmp
movsb
sub
mov
lock
add
aam
in
inc
jns
test
movl
sub
adc
xor
or
scas
dec
jnp
jae
add
add
pushf
jl
std
cmp
rcrb
sahf
mov
das
add
insl
push
add
call
pop
stos
ja
test
inc
stos
arpl
lcall
jae
shll
sub
stc
movsb
mov
jg
scas
sub
rcrb
loopne
lods
stc
inc
cmp
xchg
mov
fistps
sub
popa
test
xchg
mov
or
pop
and
test
mov
in
pushl
adc
pop
mov
cli
xor
pop
fsubrl
xchg
dec
xor
sbb
adc
les
mov
subl
rcll
call
sub
in
mov
cltd
andb
cmc
dec
lret
popf
jmp
les
mov
je
mov
ret
push
sub
push
jne
adc
pop
adc
ljmp
mov
push
xor
repz
mov
cmp
psrad
lods
dec
aam
jl
aad
sarl
add
push
add
mov
jnp
push
and
inc
mov
insl
outsl
sbb
push
jmp
les
mov
popa
lcall
dec
xor
fldcw
add
call
sbb
repnz
daa
bound
in
imul
ss
shll
cmp
test
push
sub
sub
ret
cltd
mov
into
mov
fwait
aad
add
ljmp
xorb
mov
icebp
lods
dec
imul
ss
int
js
xor
sub
mov
push
inc
push
or
xor
cmp
dec
in
jge
jno
mov
cmp
jecxz
add
fisubs
iret
int
dec
xor
ret
add
call
fcmovne
push
jmp
pop
and
notb
sahf
loop
mov
rorb
mov
cmp
mov
adc
int
data16
jbe
add
mov
addb
cmp
loopne
sti
fistl
push
mov
lcall
cs
cmp
loop
loope
fwait
adc
lds
sarl
xchg
loop
dec
fcomi
push
push
leave
mov
lock
iret
mov
xchg
lock
mov
add
call
xchg
sbb
sbb
imul
cld
std
adc
or
sub
cmp
mov
sub
lret
loop
rcll
repz
xor
rcr
mov
jle
cmp
xchg
cmp
add
xchg
gs
lds
pop
sbb
cmp
stc
lahf
out
sahf
ret
add
aam
ds
mov
popf
xchg
fcompl
in
adcl
clc
lahf
mov
or
addr16
cmpsl
mov
fsubrp
pusha
pop
pusha
pop
mov
xorl
call
sbb
jnp
cmp
push
mov
and
mov
negb
sbb
fadd
out
inc
loope
je
hlt
js
scas
iret
sbb
mov
js
in
loopne
out
ljmp
in
cs
jb
mov
sub
sahf
xchg
adc
push
movsl
insl
adc
cmp
cmp
dec
fs
inc
rcll
test
stc
aaa
shlb
push
dec
sub
and
clc
roll
sub
movsb
movsl
jle
out
dec
and
enter
mov
add
call
stos
cmp
pop
pop
or
out
mov
and
ret
mov
hlt
popa
aam
xor
int
sbb
push
adc
mov
mov
jmp
pop
pop
roll
test
inc
push
cltd
bound
inc
sbb
sbb
jo
adc
inc
mov
push
mov
or
lret
call
loop
lock
or
mov
int3
call
movsl
out
sub
add
pushf
sbbl
rcrl
test
add
call
rcl
js
lcall
adc
sti
inc
das
push
ja
jo
pop
mov
aam
jle
xlat
rcrl
daa
add
lret
xor
daa
sub
sbb
pushf
xor
test
sbb
leave
pop
sbb
fadds
and
pop
loopne
negl
imul
jae
rolb
inc
aas
add
aaa
in
js
nop
fidivs
icebp
divl
movb
jl
cmp
adc
in
add
call
fwait
sub
pop
int3
inc
mov
jp
aad
push
test
mov
mov
js
cli
add
sbb
pusha
mov
mov
dec
pop
ficompl
dec
mov
jl
daa
arpl
popa
mov
out
push
sub
push
xor
push
adc
roll
test
sub
add
dec
outsl
insb
in
sarb
insl
push
mov
and
pop
inc
stos
ds
test
cmc
leave
xor
loopne
fidivs
call
out
sbb
add
in
imul
xor
mov
mov
sbb
mov
mov
int3
mov
repnz
push
les
dec
mov
sarl
inc
in
sub
fwait
adc
fisubrs
pop
pop
daa
mov
rorl
adc
pusha
push
nop
lock
fucom
test
mov
aas
test
xchg
add
or
cld
stos
mov
ret
scas
and
call
fdivs
xchg
stos
hlt
dec
sbb
ljmp
in
ficompl
int
adc
mov
mov
orl
sahf
inc
mov
sbb
adc
gs
in
mov
ret
mov
data16
adc
shll
cmp
xor
and
lock
je
pusha
loope
jo
mov
out
fwait
sbb
insl
push
out
cmp
div
outsb
inc
jae
add
adc
shl
andb
jl
add
call
xchg
mov
pop
jl
adc
add
jge
mov
cli
jmp
cmp
adcl
mov
popa
or
popf
lret
cli
aam
cltd
out
test
or
push
pop
shll
push
xor
imul
adc
push
jle
bound
mov
sbb
push
mov
rorl
gs
nop
or
fiadds
mov
xchg
ret
cmp
sub
ret
or
out
aad
sbbb
lret
rcll
mov
add
add
call
push
jmp
push
aam
lds
les
prefetch
or
cld
inc
movsb
adc
hlt
fisttpll
xlat
pop
lea
fisttpl
fstpl
addb
jne
mov
xor
test
popf
stos
adc
xor
sub
and
push
push
push
mov
push
jns
fsubr
xor
insb
mov
mov
dec
nop
jle
jge
jno
xchg
jmp
adc
hlt
insb
add
add
call
jb
insl
jns
inc
xchg
cmp
mov
jle
or
or
ret
pushf
mov
sti
es
xchg
repnz
ret
outsl
xchg
lea
scas
jmp
jbe
shr
or
adc
mov
inc
sahf
shll
or
cmp
filds
add
push
jae
ror
mov
ret
scas
sbb
packssdw
aad
and
scas
leave
jno
cwtl
cld
sub
mov
sub
jle
or
push
mov
dec
cmc
stos
pop
movsb
mov
inc
sbb
push
jns
in
mov
add
call
cmpsl
mov
decb
lods
sarl
ss
adc
pop
xchg
dec
ret
andl
mov
adc
aas
sub
sbb
outsb
xor
xchg
push
pop
xor
add
movsb
add
in
and
adc
in
rcll
mov
aas
add
sbb
loope
mov
lret
or
outsb
add
imul
sub
mov
sub
mov
pop
mov
add
call
push
mull
mov
popa
test
test
xor
push
jge
add
xchg
pop
xchg
je
in
or
andl
scas
xchg
mov
xchg
pushf
out
shll
xchg
cs
sub
mov
out
pop
aam
push
lods
repnz
loope,pt
xchg
mov
dec
aad
dec
ljmp
xchg
jno
shll
fstps
popa
test
inc
mov
dec
arpl
or
into
pop
sbb
repnz
sbb
cmp
cmpsb
lds
inc
mov
add
call
fs
fiaddl
in
in
add
call
adc
or
jnp
dec
les
adc
inc
rcr
enter
inc
cwtl
test
clc
push
inc
jg
add
mov
sbb
insb
loope
mov
mov
inc
jno
fwait
xchg
sbb
sbb
mov
enter
adc
xchg
mov
sbb
inc
es
lods
sbb
notb
add
inc
cltd
insb
push
sbb
loop
sbb
imul
mov
cmp
lcall
call
call
fistpl
sub
scas
aaa
xchg
stc
xchg
sbb
pop
cmp
arpl
xor
jnp
mov
cld
dec
add
add
sahf
pop
inc
sub
cli
mov
fldt
fistps
je
dec
jg
adc
imul
in
jae
leave
push
stos
aaa
mov
idivl
dec
xor
mov
loopne
daa
sbb
adc
and
imul
stos
or
insb
and
sti
jns
out
mov
add
call
into
movsb
movl
shrb
pop
mov
dec
aad
mov
cmpsb
mov
test
loope
enter
aam
xchg
adc
ss
and
movsb
es
hlt
jle
repnz
cmpsb
bt
jmp
lret
mov
lahf
out
add
add
test
jmp
jno
ret
xchg
rcrl
movsb
repz
pop
icebp
inc
pop
popa
mov
mov
cmp
push
add
lret
aam
sbb
pop
xchg
sbb
popa
rcrl
cld
lahf
push
scas
hlt
ss
cmp
add
call
lock
mov
cmp
in
mov
cmp
enter
test
dec
add
out
xchg
cmp
mov
ljmp
iret
sbb
out
out
push
fwait
sbb
push
pop
dec
push
pop
stos
inc
fbld
movsl
sub
cmp
pop
adc
popa
mov
insl
jl
and
dec
push
ljmp
addr16
pop
lock
nop
cltd
stos
xchg
jbe
gs
jg
mov
xchg
pop
cld
add
xchg
loopw
inc
popf
add
call
jne
in
leave
push
or
call
outsb
aad
outsl
aas
push
nop
stc
lcall
inc
pop
loope
mov
dec
push
adc
jb
push
sti
jecxz
pop
fistpll
nop
push
xchg
je
mov
gs
stc
add
addl
fucom
jb
cmp
mov
cmovns
mov
cmc
mov
in
cli
lcall
popf
ret
mov
push
sbb
push
popa
test
ret
adc
stos
shrb
cmp
int3
les
add
call
push
xor
xchg
mov
int
lahf
or
mov
sub
sbb
call
inc
dec
in
cmp
insl
jl
fnstsw
out
xchg
fsubp
cmp
add
rorb
adc
pop
clc
aam
push
cltd
add
in
mov
sarb
mov
das
in
fs
push
ja
or
sti
jl
and
inc
mov
push
xchg
insb
rorb
add
rol
inc
dec
bound
mov
and
add
cmp
sarb
add
call
or
fiaddl
test
push
mov
stos
jg
hlt
aaa
xor
in
rclb
fwait
mov
lret
hlt
mov
pushf
aas
fmull
xlat
test
rcrb
out
dec
jl
lds
lods
push
or
jno
inc
pop
mov
jmp
jecxz
xchg
call
fsub
mov
xchg
scas
cmp
push
cmp
adc
push
fwait
xor
mov
xchg
xchg
insb
in
icebp
pop
aad
outsl
sbb
cli
push
mov
faddl
add
call
in
dec
es
mov
mov
cmp
sub
bound
jecxz
and
gs
cmp
or
mov
cmc
xor
sbb
push
mov
gs
add
rorl
in
or
sbb
push
lock
lock
lods
pop
fcomi
shl
dec
stos
inc
aam
xor
or
fidivl
mov
movsl
push
gs
fcomps
je
and
push
lret
scas
scas
pop
loope
stos
sub
shl
je
sbb
or
or
mov
add
call
and
loopne
mov
xor
sbb
addr16
jmp
test
xchg
pop
lcall
push
cmpb
mov
or
scas
or
outsl
lock
xor
or
add
inc
mov
fnsave
ja
lods
mov
sub
or
mov
and
cmp
test
shrb
out
sub
mov
subl
repz
lds
call
dec
mov
jg
ficompl
and
mov
test
lods
mov
adc
and
mov
scas
cmp
popf
arpl
sti
mov
push
cmpsl
adc
sbb
mov
sub
test
add
mov
in
and
and
jne
or
xchg
sub
sti
insl
imul
pop
into
inc
lret
lea
mov
lret
add
mov
ja
les
icebp
push
jne
shlb
dec
stc
add
add
call
jb
idiv
xchg
mov
ficompl
jp
adc
push
dec
mov
sbb
test
adc
clc
xchg
mov
mov
mov
test
push
cmp
scas
add
es
and
adc
xor
inc
jo
inc
or
sbb
lret
mov
aad
sub
rcll
add
aam
cmc
inc
mov
push
stos
xchg
repz
pop
shrl
cmp
xchg
sbb
imul
mov
pop
aas
push
icebp
jno
add
call
outsl
sbb
mov
mov
mov
add
bound
mov
int3
iret
or
add
fcomps
inc
mov
inc
xchg
inc
xor
mov
jl
jb
lods
andl
mov
les
adc
test
out
and
daa
mov
in
push
test
jg
movsb
inc
add
or
xchg
sub
pop
push
adc
push
pop
aaa
mov
scas
lcall
jne
cmp
je
add
call
lahf
pop
fs
sti
mov
cmp
and
out
add
outsl
jb
push
mov
pop
lock
cmp
sub
add
push
test
adc
out
pushf
xor
mov
lcall
pop
push
add
jno
out
xor
hlt
cmpsl
adc
mov
mov
scas
xchg
mov
mov
cmpsl
jle
ds
std
lods
ret
sarl
jge
mov
pop
lods
pusha
dec
push
pop
mov
cmpsl
out
fisubs
add
mov
push
dec
pop
add
call
adc
mov
jbe
mov
add
les
pop
notl
xchg
xchg
bnd
mov
andl
xchg
in
jecxz
lahf
mov
rcll
mov
jp
fiaddl
out
push
cmp
ret
ret
movsl
jns
xor
into
stos
dec
pop
sub
xchg
push
dec
pop
push
mov
cltd
or
cmp
scas
aas
lock
lock
mov
leave
cmp
fs
mov
jo
push
and
lods
test
sub
jg
pop
or
add
call
push
or
xchg
cmpsb
xor
mov
add
scas
int3
bound
cmp
or
jae
mov
iret
pushf
inc
ja
ss
mov
fs
xchg
pop
mov
or
adc
nop
out
cmp
pop
ss
ret
arpl
icebp
sub
packssdw
sub
push
dec
and
xchg
mov
pusha
iret
sub
dec
jb
sbb
cmp
sahf
or
add
dec
push
and
jmp
movntq
imul
push
lods
test
call
pushf
inc
add
xlat
and
mov
add
div
add
mov
popf
dec
mov
inc
ja
testl
sub
test
mov
repz
iret
mov
xchg
aas
mov
arpl
sub
inc
xor
xchg
lock
ljmp
mov
xchg
lds
xchg
sub
jmp
imul
lock
out
push
jg
jnp
out
gs
hlt
in
mov
mov
and
call
pop
int3
into
cmc
mov
aaa
xchg
xchg
ret
xchg
jl
clc
push
sbb
gs
push
nop
fiaddl
sbb
out
xchg
adc
repz
cmpsb
and
mov
fistps
aad
daa
sub
into
imul
jl
fisttpll
insb
dec
mov
les
mov
or
enter
xchg
js
xchg
subb
lock
lea
test
cwtl
lret
ficoml
movsl
pop
inc
imul
sti
inc
mov
das
loope
jnp
adc
les
lea
push
in
dec
test
adc
les
cmp
add
call
outsl
rclb
lcall
mov
cmp
inc
fisubs
lods
aaa
and
aam
push
fsubrs
lds
int
clc
popf
sub
mov
inc
cmp
in
mov
adc
loope
fcom
push
lcall
imul
xchg
adc
inc
hlt
leave
lret
sti
loopne
icebp
push
jae
int3
mov
cli
daa
sbb
pop
ret
dec
pop
cltd
and
movsl
stos
lock
push
mov
cmp
out
sbb
push
mov
insl
jle
xor
and
in
stos
filds
add
call
lret
mov
xchg
dec
mov
test
adc
mov
and
fwait
add
jne
sbb
xlat
cli
lds
mov
push
outsl
pop
dec
mov
sahf
addr16
pop
lcall
shrb
dec
cmp
xorb
mov
shll
sbb
sbb
inc
sub
push
lcall
xor
sub
rcr
sahf
sub
in
ljmp
xor
pop
lea
cmp
add
call
mov
lret
rorl
pop
sarb
mov
ret
adc
mov
xor
pushf
in
test
cmp
test
push
mov
adc
lds
roll
mov
mov
jnp
or
pop
jecxz
sub
loope
aad
bound
es
movb
leave
dec
and
lea
in
cmp
js
aam
push
cmpsl
clc
mov
add
pusha
dec
movsb
fwait
xor
add
insb
xor
xor
add
call
cli
xor
mov
jae
daa
mov
es
jno
or
test
out
jle
clc
enter
lea
inc
loop
mov
lret
divb
sar
jne
ret
mov
filds
jle
jmp
fwait
stos
mov
lcall
insb
iret
psllq
mov
sub
xchg
and
mov
mov
xchg
xor
popa
ja
loopne
push
mov
mov
std
clc
mov
add
call
lods
mov
lds
aam
int3
jae
sub
sbb
lods
subb
subl
enter
shrl
cld
mov
push
and
das
and
rcll
or
cmp
rol
xchg
jnp
shrl
adc
clc
in
mov
arpl
jge
sbb
repz
sti
rolb
push
jae
out
push
cmpsl
mov
fwait
inc
cwtl
loopne
push
xchg
iret
add
mov
mov
push
pop
mov
and
mov
call
xchg
outsl
jbe
loope
ljmp
or
or
je
jne
sbb
mov
movsb
fldcw
aam
sbbb
shll
pop
cmp
lods
popa
mov
jns
iret
shlb
sbb
aas
jne
stos
xor
dec
dec
sarl
ja
rcl
jmp
mov
push
jb
stc
mov
mov
jb
stos
adc
dec
daa
or
dec
sub
js
jb
mov
loop
and
pop
and
js
loop
jle
sub
and
stc
outsl
mov
data16
call
lds
mov
in
inc
dec
das
xor
popf
call
mov
pop
or
arpl
dec
cmp
jp
fdivs
sub
shlb
add
loop
rclb
add
xor
out
imul
enter
mov
sbb
mov
gs
add
jno
xchg
push
add
or
cmpl
ljmp
out
mov
call
pop
paddsb
aad
fwait
push
bound
jle
test
mov
jecxz
add
and
inc
push
pop
add
rorb
push
push
inc
pop
add
cmpl
add
adc
data16
sub
add
jp
out
add
push
ljmp
push
ret
xchg
sub
add
mov
nop
popf
fcomps
jmp
enter
and
ret
and
lea
push
ror
mov
call
mov
notb
or
xchg
push
fs
jns
out
mov
je
bound
mov
ja
add
pop
xor
xchg
out
pop
test
stos
ss
mov
fs
ljmp
sub
aad
dec
pop
ret
adc
or
das
sbb
lahf
imul
add
jle
xor
subl
js
and
jbe
push
jne
add
fwait
jl
and
or
inc
add
sub
and
test
add
call
jb
leave
or
xor
mov
mov
or
cmpsb
lcall
jne
decb
xor
push
jbe
jno
inc
xor
jl
xor
inc
insb
pop
pop
js
nop
outsl
or
iret
mov
jmp
mov
sub
push
mov
jbe
mov
cltd
dec
xor
and
sub
stc
enter
fidivrl
sub
test
adc
ret
movsb
jecxz
rcrb
stos
lods
push
cmp
sahf
in
shrl
xchg
add
call
cmp
push
push
js
in
lock
les
or
sbb
sbb
test
gs
mov
outsb
adc
repz
cmp
sub
fnsave
into
cld
out
or
into
mov
bound
push
frstor
jmp
sbb
and
cmp
pop
cmp
add
aam
push
lahf
fwait
in
lods
frstor
push
loope
lock
in
jge
insl
adc
cmpb
in
mov
call
sahf
aam
aaa
push
jp
imul
cli
fcmovu
sub
mov
add
mov
mov
inc
adc
pop
fstpt
dec
hlt
jnp
in
push
jl
adc
in
add
rorl
cmp
inc
stos
fnstcw
leave
mov
lret
xor
stc
aam
cmp
pushf
pop
insl
out
movsl
mov
test
lahf
mov
fadd
ss
push
ret
popf
out
fdivrs
movsb
or
or
jl
sbb
aad
insb
ja
adc
fwait
mov
adc
call
daa
pop
aaa
cli
outsl
call
pop
leave
idiv
psubb
sti
jg
movsb
mov
cwtl
mov
sub
testb
push
lret
jle
rorb
inc
out
pop
jns
cwtl
clc
fistpll
push
mov
mov
outsl
jb
cs
aad
xor
pop
push
inc
jnp
lods
out
imul
sub
mov
mov
cmp
dec
mov
mov
mov
clc
testl
jmp
xor
push
shl
jge
push
push
std
cmpsb
insl
inc
mov
rorl
mov
stos
xor
roll
call
lahf
fistpll
stos
push
je
add
mov
stos
adc
imull
sub
scas
xor
push
ffree
out
mov
lea
imul
xchg
cwtl
inc
icebp
in
shlb
mov
ret
cltd
cld
in
mov
jge
fldcw
mov
out
pop
mov
push
stos
dec
cmc
cmpsl
and
add
movb
push
rclb
adc
fimull
lds
sbb
xor
and
inc
fiaddl
add
call
movsb
mov
pop
test
popa
iret
loope
pslld
cmp
popa
xorb
cltd
in
xchg
call
and
call
icebp
mov
je
mov
lea
sub
test
and
mov
fs
test
gs
jle
push
fldl
xchg
test
pusha
cltd
mov
aam
filds
push
mov
and
dec
int3
ret
dec
inc
xlat
add
sbb
inc
pusha
and
imull
aad
add
call
sbb
push
pushf
push
dec
pop
insb
xor
pop
jmp
pop
mov
pusha
or
inc
std
xchg
divl
or
lods
stos
dec
les
imul
fnstsw
test
xchg
push
jecxz
enter
or
and
jecxz
inc
fisttpll
lahf
loope
xchg
jecxz
stos
jb
test
hlt
fistpll
mov
push
rolb
out
jmp
daa
jb
mov
dec
movsb
scas
jge
es
fisubl
cwtl
rol
cmp
inc
jge,pt
fmuls
add
push
dec
add
call
imull
ss
mov
repz
and
sbb
inc
test
jno
push
jnp
lds
dec
pop
inc
mov
ja
mov
std
stos
push
insb
aas
aas
enter
fs
in
setae
outsb
aaa
mov
call
mov
arpl
scas
nop
dec
mov
sub
subl
mov
scas
cmp
addl
jmp
stos
in
cmpsl
das
lods
adc
outsl
jge
stc
test
in
jno
xchg
add
add
call
cmpl
pop
sahf
sub
gs
movsl
cli
mov
insl
xchg
cld
mov
mov
or
ss
dec
sub
jb
sbb
aaa
cli
fistl
cmpsb
js
sub
test
mov
mov
dec
gs
push
test
mov
adc
ds
mov
pop
xor
shll
pusha
sarb
mov
insb
cmpxchg
daa
mov
jb
dec
andb
mov
sbb
ja
pop
sbb
mov
ja
xor
call
cmp
dec
mov
or
dec
xchg
mov
cli
aad
mov
insb
jnp
lcall
add
sbbl
cmc
rcrl
xchg
adc
pop
xchg
pop
xor
shl
jae
mov
popf
shl
and
mov
js
mov
inc
lcall
test
jp
fs
inc
adc
pop
scas
imul
scas
test
mov
scas
mov
sub
in
adc
jb
in
jp
add
add
call
add
mov
mov
pop
cmp
inc
pop
xchg
push
ret
cmp
pop
inc
push
out
xor
in
mov
push
or
mov
or
stos
sbb
das
pop
jmp
mov
icebp
lahf
or
clc
pop
mov
sbb
xor
mov
inc
add
jg
decl
xchg
jo
jmp
inc
mov
sbb
pop
inc
and
decb
cwtl
ret
pop
jg
mov
sbb
aam
push
mov
jo
inc
push
out
ss
jns
add
call
ret
out
mov
mov
adc
lcall
push
push
inc
mov
lret
lods
popf
mov
mov
jno
adc
and
mov
cs
not
xor
dec
pop
push
xchg
out
push
mov
nop
mov
in
fcoms
and
data16
mov
push
roll
add
jb
jne
lret
ret
repz
pushfw
call
inc
mov
push
rcrb
cmove
cmp
ds
fs
mov
call
push
mov
add
out
pop
mov
jo
lods
repz
loope
call
xchg
sbb
pop
sbb
pop
les
imul
out
daa
cltd
cld
popf
dec
mov
xor
add
pusha
ds
pusha
cmpl
xchg
int
in
fdivs
xor
sub
adc
mov
sbb
iret
lret
add
inc
inc
pop
cli
xchg
addl
inc
mov
cmpb
popa
fadds
add
call
and
lods
sub
mov
and
je
add
es
mov
mov
cld
test
add
push
mov
scas
addb
jo
sub
je
mov
fs
sahf
cmp
jecxz
js
xchg
call
sub
sub
mov
roll
jl
mov
mov
rcll
loop
mov
and
into
adc
pop
sarb
daa
aam
push
outsb
add
call
out
add
mov
push
pop
out
aas
sub
mov
adc
mov
add
popa
idivb
or
sbb
adc
push
sahf
pop
fs
inc
jmp
into
pusha
push
mov
setl
cwtl
subl
mov
pop
mov
imul
push
aad
pop
jg
xchg
je
jne
ret
les
cmp
and
push
inc
push
cmpsl
scas
scas
pop
inc
and
inc
and
xor
push
scas
outsb
shlb
ret
xchg
aam
add
call
sub
cwtl
xchg
aam
xadd
int
or
repnz
outsb
flds
ds
inc
jg
and
jb
call
outsl
out
pop
mov
sbb
js
xchg
sub
sub
inc
mov
iret
jg
mov
arpl
dec
leave
je,pn
xchg
add
int
mov
loope
pop
or
xlat
adc
cmp
sbb
pusha
popa
movsb
int
lcall
cs
sbb
adc
xchg
out
cs
fidivs
cmpsl
stos
add
call
inc
shll
test
int3
adc
ret
lcall
cmpsl
or
sbb
mov
pop
xor
daa
cmp
sbb
iret
dec
and
cld
or
cmpsb
xchg
cmp
inc
stos
add
and
movsl
rol
hlt
test
push
xchg
shll
push
sbb
mov
movq2dq
push
stc
popa
pop
pop
inc
out
mov
into
sub
das
push
cmp
dec
mov
dec
lods
repz
sbb
pop
rcll
bound
addr16
pop
insl
xchg
repz
cmp
call
mov
pop
push
pop
jb
add
or
cmp
shll
add
push
xor
mov
scas
leave
xor
aad
stos
loop
imul
call
loopne,pt
sar
jle
mov
ja
cmpsl
lahf
mov
test
pop
shrb
xchg
or
cmp
pop
push
push
and
xor
fwait
decl
fstps
scas
ret
popa
movsl
and
div
out
jp
push
rcrb
dec
mov
push
outsb
jns
pop
cmp
mov
call
ret
and
je
cwtl
roll
push
lods
ja
sub
stos
jnp
pop
dec
adc
jae
xor
dec
push
inc
shlb
aad
mov
mov
xchg
mov
cmp
xor
hlt
dec
mov
icebp
les
inc
pusha
mov
cmpsb
cmp
dec
fldt
imulb
push
and
adc
repnz
lds
jmp
popa
out
mov
cmpsb
fsubrl
int3
jnp
cmp
add
call
int3
outsl
flds
movsl
imul
sbb
fimuls
imul
or
add
and
mov
clc
lcall
rclb
popa
sarb
push
jbe
pushf
sub
xchg
icebp
ss
ret
lcall
cmp
adc
dec
and
outsl
and
cmpsl
popa
imul
in
ret
jp
mov
add
cmp
mov
popf
ret
aas
and
push
sbb
stc
xor
add
call
push
sti
andb
push
scas
incb
in
dec
inc
shl
ja
xlat
sahf
push
mov
mov
lcall
push
jno
adc
sbb
add
cmp
sbb
sub
int3
jp
loopw
mov
iret
push
mov
mov
cmpl
dec
sub
popa
pop
aas
cmp
push
popf
jl
mov
lea
push
test
sbb
shl
inc
loope
or
cltd
pop
std
mov
cmpsl
sbb
mov
fisubrs
jb
push
xor
shrl
add
call
or
pushf
mov
lcall
in
cmpb
scas
cwtl
inc
jmp
and
dec
sahf
in
ret
lea
int3
leave
addr16
sbb
test
dec
stc
jle
mov
ret
cmovge
jb
rclb
xor
jmp
and
sbb
mov
inc
mov
add
cltd
scas
mov
sti
pop
imul
lods
mov
mov
cltd
jns
jno
pop
push
mov
pop
cli
lods
je
xor
call
dec
sub
jno
aaa
sub
lods
insl
cld
rcpps
pop
stc
adc
jne
fsubrl
cmp
out
outsb
cltd
out
pop
inc
sbb
jl
xorb
int
jns
insl
int3
xchg
push
lahf
xchg
sub
fbstp
stos
sub
mov
aas
rcl
adc
and
mov
cld
sub
xchg
imul
jno
add
mov
jmp
mov
xchg
cltd
or
imul
fwait
xor
rcll
sub
add
call
adc
std
sbb
and
xchg
push
fs
and
jns
or
cmp
cmp
push
sub
fisttpl
cltd
mov
jecxz
push
cmp
int3
out
cmp
dec
das
push
push
sahf
test
loop
xor
xor
popf
ret
or
jns
jns
mov
push
sahf
inc
rcrb
lods
xchg
dec
push
pop
and
jge
and
fs
pop
and
jno
and
sbb
fistps
sti
movsb
ja
sub
add
call
fldcw
in
fisttpll
mov
sub
pop
movsl
test
dec
ret
xchg
jnp
and
pop
imul
fcoms
pusha
pop
and
leave
jnp
leave
jle
sub
and
movsl
lcall
lods
test
or
add
test
scas
sbb
imul
push
cwtl
sbb
fs
jle
cmp
push
jns
push
cltd
mul
inc
and
dec
jp
mov
mov
xor
push
adc
cmp
psrld
add
call
mov
pop
mov
in
insb
xor
gs
or
push
and
or
jae
aad
dec
xchg
mov
sub
jae
jle
int3
and
cmp
inc
mov
and
ja
cmp
testb
and
lods
or
mov
ret
adc
cltd
ja
xlat
push
mov
pop
push
out
adc
cmpsl
movsb
lds
repz
loope
dec
out
std
sub
mov
adc
or
fisubl
out
cli
sub
mov
mov
mov
add
call
jo
sub
cmc
mov
cmpsl
es
movsl
and
mov
adc
pop
bound
xor
add
fnstsw
mov
enter
sub
hlt
sub
aaa
mov
repnz
mov
inc
mov
xchg
icebp
scas
aas
addr16
int
pop
out
bound
dec
add
js,pt
sbb
pop
ret
loopne
fisubrs
lods
leave
sub
popf
push
mov
loope
push
mov
loope
add
ret
xchg
jmp
je
stos
add
call
shll
inc
ret
pop
cmpsb
gs
lret
mov
insl
jbe
outsl
xor
cmp
mov
push
insl
xchg
lcall
insl
sbb
shll
aam
cld
xlat
jecxz
rcl
outsb
inc
pop
fwait
pop
aam
std
xor
cld
mov
sub
xor
xor
inc
imul
jne
lods
xor
xor
outsl
push
xchg
arpl
mov
mov
ja
aam
popf
push
mov
inc
adc
or
sbb
aas
xchg
add
call
xchg
in
or
decb
lds
adc
repz
push
sub
push
sub
cmpsb
lcall
pop
cmovno
cmpsb
adc
iret
outsb
adc
push
mov
call
push
outsb
xor
lea
xchg
ja
lods
sub
pusha
aam
xor
inc
roll
fwait
pusha
sbb
movsb
pop
adc
jl
push
mov
add
sbb
sbb
mov
and
add
xor
loop
xlat
mov
iret
inc
pop
xchg
mov
ret
call
jno
pop
xor
and
jmp
mov
lods
or
sub
scas
push
aaa
imul
xlat
cmpsl
xor
loop
xlat
mov
iret
inc
pop
xor
cmpsb
dec
jne
cld
or
aad
mull
aas
mov
subl
lret
inc
xchg
pop
fistpl
or
fsubl
rclb
lods
cltd
sub
add
dec
jge
cld
pop
ret
jle
js
sbb
loope
mov
lods
pop
push
xchg
stos
std
pop
insb
add
scas
lret
add
inc
add
call
or
adcb
out
sahf
mov
sub
inc
lea
les
dec
dec
sbb
mov
sub
fiaddl
fwait
aaa
shrl
int3
xchg
out
test
flds
fld
adc
cmp
push
divl
popf
stos
cmpsl
movb
shll
imul
adcb
jo
pop
lahf
loop
mov
sub
movl
cmp
push
repz
push
mov
dec
shl
arpl
add
call
mov
dec
pushf
mov
sub
aad
fistps
sub
xor
xlat
mov
cmp
loop
cld
ss
dec
adc
rolb
cmc
mov
dec
popa
mov
rol
push
gs
arpl
adc
scas
sub
icebp
imul
cltd
movsl
movsb
cmpsb
outsb
push
inc
push
dec
pop
mov
jmp
rorb
mov
popa
imul
cmc
jns
or
ljmp
xchg
aam
add
call
scas
das
ljmp
cmc
loopne
sbb
adc
andb
mov
adc
xlat
xchg
leave
test
std
push
xor
jb
sahf
xlat
dec
shrl
jg
cli
xor
sti
inc
xchg
mov
stos
ss
int
in
mov
push
mov
xor
popa
loope
je
mov
push
inc
push
in
sti
loop
xor
negl
jne
xor
sbb
jecxz
fcompl
push
call
cmp
test
add
pushf
insl
add
call
jle
nop
mov
jb
orb
or
push
cmpsl
cmpsb
inc
fildl
adc
sub
les
mov
jns
jge
movsl
std
cltd
loope
cmp
out
push
out
mov
dec
adc
jb
or
mov
mov
repz
lea
aad
jmp
xor
sbb
fists
repz
daa
xchg
shl
icebp
push
cmp
into
mov
dec
cmp
cld
int3
xchg
fmull
push
pop
out
xchg
jnp
cmp
jae
xchg
jo
shll
call
add
adc
dec
loop
xor
cmc
mov
jo
into
push
scas
push
test
in
xchg
clc
shrl
adc
sahf
sub
repz
xchg
mov
loopne
or
fstl
insl
test
cwtl
cmp
lcall
mov
fists
lret
stos
lods
les
mov
lret
lock
xchg
les
add
movsl
push
jae
dec
neg
ret
adc
lret
popf
jo
std
mov
mov
mov
cltd
divb
call
pop
and
and
xor
jbe
mov
fsubp
mov
imul
mov
cmp
testb
aad
mov
sarb
or
pop
push
das
call
mov
xchg
xor
movsl
mov
jns
dec
idivb
rol
lods
mov
mov
ret
push
call
pop
cmp
pop
mov
out
pop
add
lret
xchg
jo
cld
push
repz
adc
sarb
sbb
mov
stc
insl
adc
imul
lock
xor
pop
add
call
and
and
repz
inc
repz
mov
xor
fcomps
imul
mov
nopl
pop
enter
addr16
aaa
cmp
mov
lret
push
or
ret
lret
push
adc
and
arpl
stc
xchg
jb
push
cmp
inc
xor
dec
in
outsb
inc
in
sub
fs
xchg
dec
mov
mov
sti
sub
shrl
mov
sub
cli
bound
xor
sahf
mov
xchg
push
cwtl
or
lock
inc
add
call
rorb
lds
movsl
mov
pop
or
sbb
mov
leave
dec
aas
imul
push
mov
negl
sbb
jae
in
pop
lea
sub
xchg
outsl
dec
dec
das
pop
inc
call
mov
mov
push
jl
sbb
cmpsl
shrb
ja
sbb
adc
and
test
or
xor
mov
rolb
pusha
jae
notb
sahf
fisubl
das
rcrl
mov
rcrl
or
add
call
or
cwtl
or
daa
mov
das
push
mov
sahf
dec
sub
in
add
xor
sbb
mov
cmpsb
mov
jmp
aam
jle
insb
lock
fwait
aam
sub
sub
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
aas
inc
cmpl
push
sarl
pop
sbb
mov
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cld
fisttps
jae
and
jno
in
or
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
daa
les
out
xlat
fsub
pusha
or
rorl
pop
adc
sarl
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jnp
mov
fdivrl
push
repnz
arpl
pop
pop
or
xchg
or
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jl
sub
inc
mov
push
aad
cmp
lea
popf
xor
pusha
and
sbb
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
data16
dec
fsts
in
dec
and
jno
sbb
dec
dec
mov
fs
bnd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
hlt
pushf
scas
xchg
icebp
stos
ds
pop
ret
cmpsb
or
fxch
movsl
pushf
add
cmp
popf
jbe
into
jge
pop
popf
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
cli
clc
jae
or
adc
cli
lret
cltd
f2xm1
cmpl
in
fcmovb
enter
mov
xor
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
test
dec
jecxz
mov
xchg
cmp
push
adc
adcb
cmp
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
inc
sub
fwait
test
inc
cli
loop
imull
sbb
pusha
xor
jp
xor
dec
mov
sti
xchg
popf
or
es
leave
ljmp
outsb
push
inc
push
ret
add
call
mov
ljmp
in
fisttps
ret
pop
cli
ljmp
jns
jae
and
push
sub
sub
arpl
movsb
ljmp
fsub
pusha
mov
cvtps2pi
mov
ljmp
dec
adc
pusha
push
aam
out
mov
sub
sbb
int3
sbb
loope
fbstp
jb
movsl
movsb
cmpsb
outsb
push
inc
dec
shrl
fnstsw
push
jmp
loopne
adcb
xor
pop
mov
pop
xor
fbld
add
enter
xor
push
int3
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
or
cwtl
xor
lea
rolb
push
call
iret
int3
mov
inc
shll
push
mov
dec
rorb
add
cmpsb
outsb
push
inc
pop
sbb
sahf
movaps
pop
sub
fwait
cmp
fisttpll
nop
test
sbb
cmpsl
out
cmp
jb
movsl
movsb
cmpsb
outsb
push
inc
xorb
mov
arpl
pop
pop
push
mov
arpl
pop
pop
sti
pop
leave
jmp
push
push
arpl
lods
out
sbb
jb
movsl
movsb
cmpsb
outsb
push
inc
sbb
pop
jle
insb
add
call
addr16
mov
es
inc
fcmovnu
arpl
insl
jmp
push
stc
in
cmp
jb
movsl
movsb
cmpsb
outsb
push
inc
sub
arpl
out
mov
imul
add
nop
icebp
rorl
in
cli
stos
adc
pop
iret
push
xor
ret
rcrl
xorl
movsb
cmpsb
outsb
push
inc
push
jp
and
stos
ds
cwtl
cwtl
dec
xor
arpl
xchg
iret
clc
inc
clc
inc
into
xchg
mov
iret
call
movsl
movsb
cmpsb
outsb
push
inc
test
mov
adc
loope
lods
push
add
call
cmp
ja
pop
jge
aad
or
ss
adc
mov
mov
movsl
movsb
cmpsb
outsb
push
inc
pusha
dec
cmp
stc
inc
jp
jge
and
ljmp
pop
out
jmp
dec
push
cs
movsl
movsb
cmpsb
outsb
push
inc
sbb
sub
filds
test
and
sub
fsubl
adc
push
popa
setae
out
aas
popa
rolb
cltd
movsl
movsb
cmpsb
outsb
push
inc
addr16
popl
xor
sbb
dec
mov
mov
call
jb
mov
mov
fldt
mov
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
je
je
inc
test
or
cmp
int
in
movsl
and
push
lods
test
int3
jb
jl
aas
sub
popl
cmpsb
outsb
push
inc
inc
dec
ljmp
sub
les
cli
cmp
decb
push
inc
je
sub
imul
push
xchg
sbb
jb
movsl
movsb
cmpsb
outsb
push
inc
enter
mov
pop
lock
addr16
icebp
int
pop
and
add
add
call
add
shll
pop
dec
cwtl
insb
sub
jb
movsl
movsb
cmpsb
outsb
push
inc
cmp
lods
cmp
jg
push
or
add
call
out
and
adc
sub
fdiv
jl
jne
cltd
movsl
movsb
cmpsb
outsb
push
inc
mov
les
pop
push
push
jbe
out
imul
fcmovnb
jle
sub
xor
or
cltd
movsl
movsb
cmpsb
outsb
push
inc
aaa
pop
mov
ljmp
xlat
test
lods
movsl
adc
arpl
add
call
add
sbb
jb
movsl
movsb
cmpsb
outsb
push
inc
scas
pop
sbb
call
or
rorb
ljmp
in
idiv
jnp
pop
fdiv
jb
movsl
movsb
cmpsb
outsb
push
inc
pushf
or
mov
adc
mov
pop
push
sar
lcall
loopne
mov
mov
arpl
movsb
ljmp
outsb
push
inc
cmovs
cli
dec
or
movsl
sbb
or
dec
xor
in
pusha
dec
push
icebp
add
call
loopne
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
xor
jmp
push
jnp
inc
cwtl
or
loope
in
or
movsl
sti
inc
sbb
movsb
cmpsb
outsb
push
inc
push
lds
ficoml
add
ror
mov
sbb
pop
aad
sub
pop
and
xor
dec
das
repz
cmpsl
push
loop
mov
cmpsb
outsb
push
inc
addr16
sub
mov
shll
lds
dec
popa
int
icebp
sbb
sub
inc
xchg
jb
movsl
movsb
cmpsb
outsb
push
inc
enter
call
int
jnp
loope
xor
adc
stc
imul
into
fistps
dec
imul
out
and
negb
insl
stos
sbb
cmc
insb
in
lahf
pop
dec
mov
xchg
cmp
push
add
or
je
popa
dec
xor
mov
or
mov
and
push
pop
mov
cmc
pop
clc
mov
nop
lods
mov
or
push
imul
sahf
andl
cmpsl
imul
xchg
pop
pop
lock
add
cltd
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
scas
push
push
cld
les
fmuls
add
inc
enter
xchg
jb
movsl
movsb
cmpsb
outsb
push
inc
std
loope
scas
add
in
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
or
sub
push
dec
ja
pop
jb
movsl
movsb
cmpsb
outsb
push
inc
js
mov
aas
inc
mov
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
cmp
lcall
xlat
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
je
cmc
pop
xorb
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
arpl
jb
add
inc
mov
out
lock
mov
cwtl
adc
ljmp
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cs
ja
xchg
mov
jp
push
jnp
push
or
xlat
mulb
xchg
flds
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
int
jb
movsl
movsb
cmpsb
outsb
push
inc
lahf
lahf
in
cld
adc
add
pop
ja
pop
inc
sahf
insl
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
push
xchg
jb
fisubl
movsb
cmpsb
outsb
push
inc
movsb
jne
pop
ja
hlt
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmp
xchg
adc
mov
sbb
dec
in
stos
lods
pop
icebp
mov
or
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xchg
js
les
adc
mov
inc
jne
cmpb
jmp
fstpt
inc
fisttps
jns
es
pop
xor
add
call
out
cmp
and
mov
out
push
js
push
fsub
dec
push
js
push
fsub
dec
push
add
fs
fs
int
movsb
ja
out
sbb
xor
dec
scas
pop
int
push
and
or
jns
jno
jne
mov
iret
add
sbb
jge
fildll
stc
aaa
and
les
xor
ret
addb
enter
rorb
roll
adc
add
call
dec
imul
adc
ljmp
push
ljmp
push
ljmp
push
hlt
inc
push
cs
mov
inc
push
cs
mov
outsl
lods
ret
jg
bound
jg
bound
and
jbe
stc
jno
push
xchg
xor
subb
not
inc
jne
push
jns
rcll
stos
pop
mov
fcmovu
sbb
adcl
sti
inc
inc
inc
cltd
sbb
adc
sbb
icebp
in
popl
push
inc
aaa
cmp
xchg
test
add
rclb
or
dec
add
call
jo
outsl
es
insl
notb
pop
and
icebp
fwait
mov
incl
push
fistpll
xor
lret
icebp
into
jns
or
in
adc
xchg
nop
add
adc
inc
ja
stos
stos
and
ret
dec
int
int3
gs
arpl
outsl
movsb
cmc
adc
scas
sub
icebp
imul
cltd
movsl
movsb
cmpsb
outsb
push
inc
add
daa
clc
push
mov
jne
outsl
mov
cmp
push
sbb
les
xorb
mov
add
cmpl
jecxz
add
call
loope
arpl
jge
push
push
in
shlb
inc
push
stc
xchg
loop
add
cwtl
mov
add
inc
push
mov
adc
dec
sbb
pop
adc
mov
movsb
ret
mov
or
adc
fcmovbe
stc
and
jbe
mov
mov
xchg
fsts
jne
sub
decb
jns
fldz
lret
push
stos
and
fdivl
and
lods
daa
sbb
xor
arpl
ret
fildl
jae
xor
add
call
test
push
push
sbbl
sub
es
aam
aas
pop
ss
ljmp
movsb
aas
add
push
out
dec
loopne
mov
clc
lods
push
adc
out
push
ss
aam
mov
jg
xchg
sbb
or
mov
add
out
fucomi
out
cmp
cmp
and
fwait
stc
lcall
idivl
xchg
xchg
popf
pusha
into
fsubrs
out
inc
dec
xchg
adc
xchg
lahf
ljmp
xchg
xor
add
call
xchg
iret
pusha
sti
aaa
hlt
add
xorb
mov
ret
and
mov
pop
push
adc
inc
xchg
cmc
outsb
aas
xchg
insb
sub
cmpsb
ret
das
xorb
enter
cld
jae
outsb
imul
dec
mov
cmp
sbb
and
pushf
pushl
jns
add
pop
dec
ja
mov
into
daa
movsl
cmp
jbe
dec
roll
jb
cmc
sbb
inc
out
mov
fsqrt
mov
mov
dec
fnstenv
scas
rcrl
add
call
inc
test
aad
dec
out
mov
sub
int
int
lcall
lcall
mov
lahf
xor
jecxz
out
lea
mov
adc
gs
outsl
xchg
xor
fs
ljmp
lds
fldl
cmpb
hlt
aam
sub
xchg
mov
xorb
pop
inc
and
scas
inc
ficoml
fsubrp
das
fldl
push
scas
adc
pushf
xchg
icebp
cltd
xchg
lea
add
out
adc
pop
xchg
lcall
call
or
stos
int
adc
wbinvd
mov
add
mov
push
jae
cmpsb
push
pop
jg
jae
insb
lods
lret
push
sub
xchg
and
dec
outsl
jb
push
pusha
sti
jae
addb
data16
inc
loopne
iret
hlt
in
cmpl
fistpl
mov
fcmovu
push
xchg
ja
push
jno
cmp
jecxz
aad
lea
dec
negb
or
std
mov
mov
insb
movsb
pushf
xchg
fldenv
mov
scas
nop
jg
mov
insb
addr16
popl
mov
xchg
call
aaa
adc
sahf
push
insl
cmc
push
movl
push
inc
icebp
je
jnp
rcl
mov
inc
jecxz
push
inc
pop
adc
push
sti
sbb
leave
mov
pop
mull
lods
lahf
xorl
mov
inc
and
xchg
ret
push
cmp
int
add
ss
imul
xchg
cmp
jno
data16
arpl
mov
cltd
jne
sbb
sbb
outsb
sbb
fwait
aas
icebp
lods
sbb
movsb
add
mov
call
xchg
icebp
or
bound
call
mov
js
and
in
sub
push
push
aam
rorl
push
mov
mov
cli
mov
shrb
movsl
loop
hlt
mov
loope
and
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
imul
cmp
lahf
sub
movsl
movsb
cmpsb
outsb
push
inc
lret
jmp
mov
pop
lret
add
call
orb
pop
sub
int3
jb
cltd
movsl
movsb
cmpsb
outsb
push
inc
stos
sbb
jne
sub
and
ret
mov
inc
dec
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
testl
or
mov
xchg
cmp
lret
rcrb
movsl
movsb
cmpsb
outsb
push
inc
and
push
inc
jns
popf
test
lret
jmp
xor
push
push
inc
cmp
jb
movsl
movsb
cmpsb
outsb
push
inc
pushf
js
cmpsb
aam
xor
xchg
ljmp
cltd
movsl
movsb
cmpsb
outsb
push
inc
lret
mull
add
call
push
mov
sarl
and
or
mov
bnd
cltd
cli
adc
pusha
cmp
repz
mov
movsb
fldcw
xchg
orb
stos
mov
dec
sahf
jb
movsl
movsb
cmpsb
outsb
push
inc
pusha
sbb
lcall
inc
cmp
and
movsl
movsb
cmpsb
outsb
push
inc
push
test
fwait
call
scas
mov
xor
loop
xchg
mov
xor
and
pop
lea
mov
jg
xchg
js
pop
add
call
cwtl
das
out
fiadds
movsl
and
fwait
movsb
jg
push
mov
sub
aaa
push
pop
add
cmp
or
lret
lea
push
lock
in
and
push
sti
test
out
das
xchg
jl
mov
test
pop
ret
pusha
inc
cmc
cmp
pop
test
scas
cmp
add
dec
sbb
sub
outsl
aam
test
mov
lock
push
test
fsubr
adc
push
sbb
iret
xor
and
sub
jb
cmp
call
mov
movsl
mov
stc
sbb
jle
fldenv
xchg
imul
push
inc
xorl
mov
sbb
add
or
out
imul
gs
fstpt
pusha
pop
push
push
clc
addr16
ret
je
and
daa
and
dec
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
ss
loope
push
xchg
sub
xchg
cltd
push
test
fildll
stc
into
jb
movsl
movsb
cmpsb
outsb
push
inc
aam
les
leave
mov
jg
aaa
inc
fsubl
test
jp
into
push
aaa
add
call
movntq
out
pop
pop
incl
or
or
xor
in
das
xor
adc
pop
mov
roll
mov
adc
test
mov
jge
out
aam
aas
jge
push
rcll
sub
je
arpl
js
shll
int3
mov
repz
pop
jg
fldcw
push
adcb
pop
xchg
shl
sub
mov
adc
push
scas
mov
add
mov
lea
adc
push
ljmp
cld
bound
test
mov
call
dec
popa
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
neg
loop
adc
push
fsubl
int
mov
push
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
cmp
movsb
mov
jae
ret
cmpsl
loope
movq
movsl
movsb
cmpsb
outsb
push
inc
xchg
fistl
insb
jge
add
cltd
movsl
movsb
cmpsb
outsb
push
inc
out
xor
jb
movsl
movsb
cmpsb
outsb
push
inc
repnz
pop
rol
mov
insl
dec
push
mov
daa
or
push
and
out
mov
cmpsb
outsb
push
inc
adc
call
pop
loope
lods
out
lock
mov
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
fdivp
mov
mov
mov
or
je
xor
cmpb
jmp
and
insl
arpl
mov
sbb
xchg
daa
inc
insb
es
push
faddl
test
cmp
add
xchg
mov
sahf
in
loopne
inc
mov
aam
pop
pushf
dec
jge
dec
push
sub
lcall
rcr
notl
and
add
call
lret
cmp
pop
mov
sbb
inc
dec
test
or
adc
dec
mov
gs
mov
xor
mull
inc
arpl
test
scas
sub
icebp
imul
cltd
movsl
movsb
cmpsb
outsb
push
inc
or
cmp
cmc
cltd
mov
movsl
xchg
adc
or
sub
scas
adcl
in
sub
aad
mov
cmp
mov
pop
or
call
ret
call
jp
add
cs
pop
push
and
inc
lock
adc
popa
aam
mov
movsl
ja
adc
cmp
add
push
inc
mov
mov
mov
iret
inc
dec
add
jae
or
sub
cmp
arpl
fsubrs
mov
push
xor
jno
push
sbb
pop
roll
pop
or
repz
inc
ljmp
fcmovbe
mov
push
dec
xorb
loop
pop
out
jecxz
adc
arpl
mov
cli
movsl
dec
movb
pop
add
call
sub
jne,pn
aam
mov
mov
mov
sbb
sbb
in
pop
pop
mov
add
movsb
push
insb
mov
xchg
std
mov
mov
les
test
jecxz
je
out
ss
or
into
pop
jno
js
jp
push
int3
inc
pushf
jno
flds
jnp
shl
fmull
mov
adc
je
inc
adc
mov
inc
pushf
or
hlt
insb
pusha
sahf
test
int3
add
call
push
inc
mov
shrb
dec
push
mov
xor
imul
pop
int3
mov
cmp
pop
pushf
das
mov
sarb
dec
dec
fistl
movsl
insb
pop
scas
dec
mov
push
mov
pop
inc
add
push
dec
sub
mov
pop
ret
lods
mov
dec
cmp
pushf
mov
or
dec
gs
add
dec
inc
filds
pop
lret
push
jo
lahf
cld
push
enter
jne
xchg
stc
mov
ja
cmc
add
call
into
sbb
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lods
cmp
mov
pop
sbb
rcrb
stc
pop
icebp
xor
loop
into
or
fmuls
sub
pop
sub
dec
inc
push
cld
ja
sbb
gs
cld
out
adc
fs
or
jno
mov
jb
divb
push
sub
inc
lock
push
ret
enter
and
rorl
out
iret
iret
out
pop
jae
pop
jns
fistpll
call
fucom
lods
sub
jle
out
bound
pop
jns
es
push
inc
arpl
lret
mov
xchg
or
pop
clc
les
mov
jg
and
mov
das
int3
or
fimuls
dec
sahf
push
sub
inc
mov
push
dec
xor
minps
mov
xchg
mov
popa
hlt
mov
jbe
pop
rol
das
push
inc
daa
inc
clc
and
mov
and
xchg
sbb
mov
mov
fcoml
sti
add
call
aad
mov
add
fistps
push
mov
fpatan
mov
lea
push
and
hlt
dec
pop
push
inc
rcll
jecxz
int3
dec
out
cmp
outsb
imul
int
lea
sbb
aam
into
loop
push
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
inc
pop
shll
shr
xor
or
sbb
ret
test
adc
or
insl
push
inc
lds
or
je
shll
mov
vpcmpeqw
mov
vpcmpeqw
mov
vpcmpeqw
mov
vpcmpeqw
mov
vpcmpeqw
mov
or
adc
fisubrs
sarb
sbb
cmpsl
jg
sbb
pop
nop
or
add
or
cmc
add
or
cmc
jp
insl
dec
mov
divb
shrb
divb
add
call
shrb
mov
clc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
ret
ret
imul
sti
adc
push
int
mov
imul
xor
jge
mov
lcall
inc
out
sbb
mov
test
dec
les
and
call
pop
je
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
stos
jmp
call
jecxz
xlat
sti
inc
sub
jo
push
loope
test
icebp
xor
sti
adc
jns
sbb
jp
test
addr16
lcall
out
push
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
popf
int
sbbl
fisubs
or
push
xor
pop
sbb
add
or
adc
fidivl
mov
aas
dec
jno
mov
push
aaa
scas
adcb
stc
inc
sbb
dec
cwtl
jbe
push
test
dec
les
and
les
and
les
and
les
and
call
dec
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
call
pop
je
les
and
les
and
daa
dec
imul
xchg
out
int
add
outsl
roll
adc
jbe
jns
inc
shll
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
or
dec
mov
add
call
fidivrs
sbb
inc
sub
and
jp
mov
data16
sahf
iret
rcrb
cltd
repnz
das
bnd
pop
incb
ss
popf
dec
insl
leave
cmp
cltd
cmp
test
int
icebp
repz
and
lret
jnp
push
aaa
scas
es
cld
mov
sub
or
add
les
and
les
and
les
and
les
and
les
and
add
call
dec
add
mov
sbb
push
ret
test
dec
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
call
dec
les
and
les
and
jnp
xor
popf
adc
leave
cld
fbstp
aas
les
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
imul
push
xchg
xchg
xor
dec
sub
out
cltd
jecxz
enter
cs
data16
insb
andb
or
add
test
add
call
in
jmp
cmp
ljmp
sub
jne
repz
pop
push
pusha
pop
mov
xchg
jmp
mov
popa
arpl
pop
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
inc
outsl
pop
cli
or
add
mov
into
jge
add
call
lret
mov
movsb
loop
push
sub
sub
addr16
stc
pop
aad
outsl
cs
or
xorb
jg
xchg
lret
in
adc
push
fs
sbb
dec
xor
pushf
orb
xor
mov
loopne
rcr
aaa
jecxz
int3
add
push
in
mov
pop
je
les
and
les
and
les
and
les
and
les
and
les
and
add
call
dec
add
les
and
outsl
xlat
dec
fsub
add
mov
ds
std
fiadds
jle
xchg
pop
pop
je
outsl
mov
aas
xor
repnz
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sahf
lret
mov
mov
je,pt
add
xor
outsl
add
lret
mov
push
add
push
jge
out
mov
cmp
jle
aad
sahf
rol
or
jge
out
mov
les
mov
or
push
push
adc
inc
xchg
aam
add
stos
shlb
jecxz
lods
stos
rolb
call
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
or
jae
leave
jp
cwtl
outsb
lods
addr16
js
cli
sub
jle
dec
push
out
xchg
pop
fidivrl
test
mov
stc
sbb
add
call
mov
mov
orb
in
xor
adc
lods
loop
lahf
ja
pop
adc
mov
mov
mov
sbb
add
xor
xor
mov
outsb
outsl
jb
movsb
repz
xor
inc
icebp
push
sub
add
jge
adc
lea
pop
je
les
and
les
and
les
and
les
and
les
and
sbb
call
cltd
and
and
sbb
cmpl
pop
es
jno
ds
je
add
mov
mov
adc
nop
mov
insl
mov
dec
in
imull
add
push
insb
jl
mov
movsl
jle
push
push
cltd
pop
jge
mov
mov
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sahf
push
mov
into
adc
cmc
enter
jp
push
xchg
xchg
cmp
push
cmp
ret
jecxz
movsb
and
or
mov
ret
imul
sbb
push
shll
cmpsb
aam
das
sahf
pop
aas
jns
int
push
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
add
call
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
xchg
jnp
push
iret
sub
outsl
jno
pop
movsb
push
mov
or
jp
popa
pop
cmp
out
fists
xchg
mov
jg
xchg
lret
aaa
add
and
testl
add
mov
mov
xchg
aam
pop
in
ss
jo,pt
mov
stos
xor
call
xor
in
jbe
adc
cltd
mov
imul
cmc
das
das
or
cmp
sarb
dec
out
cmpl
dec
in
push
mov
cmp
outsb
dec
lea
xor
je
les
and
les
and
les
and
les
and
jno
jle
int
dec
je
sub
call
push
adc
daa
outsb
dec
mov
jge
hlt
leave
pop
loope
jecxz
push
cmp
xchg
jp
ret
jo
mov
xchg
push
dec
xor
sub
into
sbb
pop
fsub
jge
add
es
mov
cmpsb
pmullw
cli
je
lock
inc
in
mov
xchg
das
cmp
ret
adc
hlt
mov
xlat
aas
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
mov
sbb
pop
out
clc
pop
push
imul
add
call
test
jns
mov
bound
lcall
pop
jne
cmp
imul
pop
sti
jl
jbe
mov
loopne
lods
inc
out
cmp
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
add
call
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
dec
add
and
lds
push
clc
xlat
jne
test
cmc
rol
in
out
sub
loopne
or
xorb
mov
in
in
mov
xchg
cmp
negb
pop
loopne
xor
bound
lahf
in
and
call
iret
mov
pop
push
aaa
mov
mov
popa
pop
into
outsl
je
push
lcall
lds
pop
adc
pop
in
shll
push
sub
loopne
mov
xchg
sbbl
shr
icebp
scas
sub
js
out
xor
aad
push
mov
xor
inc
pop
popf
insl
shlb
dec
add
les
and
les
and
fildl
fnstcw
push
movsb
adc
cs
cmp
imul
mov
pop
cmpsb
gs
add
call
mov
lea
pop
scas
mov
daa
out
xchg
mov
enter
cmpsb
imul
outsb
dec
xor
xchg
add
mov
imul
stc
mov
das
mov
add
push
insb
or
mov
mov
aas
xor
repnz
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sarb
fidivrs
cmp
xchg
mov
sti
js
pop
dec
mov
mov
fidivl
mov
cmp
leave
imul
and
add
call
icebp
dec
popf
int
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
add
call
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
inc
outsl
pop
cli
or
inc
mov
rolb
pop
dec
lret
pop
push
pop
das
aam
lcall
pop
jg
es
sbb
ret
orb
in
xor
lea
push
sar
daa
jle
xor
sbb
and
adc
ror
pop
mov
repnz
call
std
pop
ret
push
mov
in
ljmp
lahf
mov
arpl
roll
or
shl
orb
add
mov
xchg
lahf
mov
in
scas
mov
inc
icebp
outsl
add
outsb
stos
cmp
pop
je
les
and
les
and
cmpsl
rcrl
xchg
mov
cmp
imul
mov
pop
cmpsb
gs
insb
mov
lea
pop
scas
mov
daa
out
xchg
mov
call
mov
andb
outsb
jne
test
inc
mov
outsb
add
leave
decb
andl
shrb
inc
lret
dec
call
and
inc
das
mov
add
push
insb
sbb
shlb
pop
nop
aas
xchg
pushf
inc
les
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmp
iret
sbb
gs
repz
and
sti
stos
jno
and
insb
dec
dec
xchg
les
adc
pop
enter
mov
call
flds
add
jmp
xchg
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
add
call
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
rolb
call
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
inc
outsl
pop
cli
or
into
jge
lret
jo
pop
imull
pushf
insb
dec
ficoml
and
lcall
dec
mov
jnp
xor
mov
xchg
aam
clc
inc
xor
aaa
jmp
test
jmp
fadds
add
hlt
pop
scas
mov
das
and
insb
xor
ds
jne
test
and
xchg
addr16
add
add
call
mov
mov
call
data16
jno
sti
sub
fisttpll
fwait
mov
mov
pop
inc
push
lret
adc
outsb
in
mov
push
add
pop
je
les
and
les
and
lret
push
inc
divl
ret
jae
outsl
into
dec
mov
jge
hlt
leave
pop
loope
jecxz
push
cmp
xchg
push
lea
pop
scas
mov
daa
out
xchg
mov
enter
cmpsb
imul
test
inc
mov
outsb
add
add
call
leave
decb
andl
shrb
xchg
pop
and
mov
xor
das
adcl
inc
cmp
inc
sub
adc
jg
cmpsb
and
ret
cmc
xchg
ss
sti
jbe
mov
or
pop
jge
mov
cli
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
aad
jno
jne
sbb
stos
lcall
dec
and
cmp
sbb
out
iret
rol
sub
std
mov
or
fimuls
in
das
rorb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
add
call
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
add
call
jecxz
lods
stos
shlb
jecxz
lods
gs
sub
inc
add
outsb
lods
addr16
js
jmp
sub
pop
xor
dec
icebp
ja
fdivl
jns
pop
mov
push
fistpl
sbb
scas
fwait
loopne
in
popa
mov
fmul
sbb
xor
dec
sbb
jp
push
cmp
cmc
adc
adc
gs
and
add
in
and
sti
fsubrl
adc
in
loop
bound
mov
cmp
push
jns
cmp
add
call
or
inc
shr
ret
add
jb
and
cli
sub
daa
arpl
cmp
dec
and
int3
sub
test
dec
les
and
les
and
pop
push
divl
push
inc
stc
dec
aas
jae
in
push
jecxz
push
cmp
xchg
push
lea
pop
scas
mov
daa
out
stos
cmp
mov
xorb
std
adc
test
inc
mov
outsb
add
leave
je
roll
add
push
testl
and
mov
add
call
subb
push
pop
es
cmp
jle
add
std
inc
cmp
xlat
or
icebp
pop
bound
imul
stc
push
adc
cmp
ja
xor
lea
cltd
pop
jge
mov
mov
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
dec
fists
inc
fistpl
push
call
aam
mov
push
arpl
mov
fistps
rcrb
mov
inc
call
dec
pop
fmuls
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
add
call
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
push
push
xor
lods
add
call
sarb
push
mov
or
jp
push
mov
or
cwtl
mov
insb
dec
inc
add
dec
mov
cld
enter
dec
in
mov
aas
clc
divb
pop
pop
addl
dec
in
jbe
adc
dec
mov
cmp
sti
fucom
push
jmp
inc
jg
inc
jp
jne
int
xor
call
test
mov
jmp
dec
das
sub
or
push
daa
into
outsb
pop
lds
add
call
sub
pushf
outsl
fsubrs
sti
test
dec
les
and
les
and
mov
fimull
push
jecxz
push
cmp
xchg
push
lea
pop
mov
jecxz
mov
xlat
sbb
adc
xorb
std
adc
test
inc
mov
aam
jl
je
roll
add
push
testl
and
mov
xor
das
adcl
inc
cmp
pop
ret
clc
lahf
inc
cmp
add
call
xlat
or
icebp
pop
bound
jb
or
je
pop
stc
cs
pop
adc
mov
insl
mov
dec
in
in
mov
xchg
das
cmp
lods
pop
imul
repnz
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
les
sub
pop
pop
fucomip
inc
in
mov
ss
int3
cld
ret
ss
mov
iret
aad
in
pop
dec
adc
call
cwtl
sub
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
rolb
call
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
xchg
jnp
push
iret
sub
or
aam
popl
daa
xlat
push
add
call
jle
mov
and
mov
pop
mov
cmp
in
inc
and
mov
mov
sbb
fsubp
push
push
lahf
cmpsb
test
jmp
fadds
scas
sub
jmp
mov
popa
pop
into
outsl
je
sbb
mov
sub
sahf
repz
jecxz
popf
push
test
jg
inc
jp
jne
fildll
xor
subl
add
dec
inc
cmp
add
mov
lahf
sub
mov
jnp
or
lods
inc
jne
in
cmp
xor
jae
test
dec
les
add
call
and
les
and
test
push
scas
push
cmp
xchg
push
lea
pop
mov
jecxz
mov
xlat
sbb
adc
xorb
std
adc
imul
aam
jl
je
roll
add
push
testl
and
mov
and
jae
jno
ds
inc
scas
rclb
pop
pop
ret
clc
lahf
inc
cmp
xlat
or
icebp
pop
bound
test
or
je
pop
add
call
cs
pop
jecxz
movsl
jno
std
daa
imul
mov
scas
mov
mov
rorb
jno
ret
pop
dec
add
inc
les
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sbb
cli
jl
cli
jg
loope
cmp
cmp
xor
out
mov
or
pop
imul
jnp
sbb
pop
add
out
pop
mov
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
add
call
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
dec
add
and
cmp
std
rcll
cwtl
and
inc
add
mov
jl
mov
repz
js
lods
lea
int3
test
lcall
call
cmpsl
in
enter
aaa
addr16
inc
shlb
bound
lahf
mov
movsb
js
subb
sub
adc
xorb
je
jge
push
cltd
mov
mov
dec
mov
mov
fwait
push
das
fisubrl
ficoms
push
mov
jnp
movsl
repnz
sub
ss
inc
and
jl
sbb
es
xor
sbb
adc
pop
je
les
and
les
and
repnz
pop
loope
jecxz
push
cmp
xchg
add
call
lea
pop
mov
jecxz
mov
xlat
sbb
adc
xorb
std
adc
imul
aam
jl
je
roll
add
push
testl
and
mov
and
jae
jno
ds
inc
scas
rclb
pop
pop
ret
clc
lahf
inc
cmp
xlat
or
hlt
add
test
test
or
je
pop
stc
cs
pop
jecxz
movsl
jno
std
daa
imul
mov
in
push
stos
add
call
xor
nop
mov
xor
leave
sub
and
rorb
cmp
ss
xor
repnz
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
dec
mov
dec
jns
stos
int
xchg
insb
es
rorl
ds
pop
push
mov
ficoms
push
fnstenv
clc
andb
push
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
add
call
xlat
inc
outsl
pop
cli
or
xor
hlt
imul
pushf
imul
inc
hlt
imul
pushf
imul
inc
hlt
imul
pushf
imul
jmp
and
cmp
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
add
call
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
test
jns
and
pop
adc
mov
das
enter
imull
test
and
movsl
cltd
mov
and
fistpl
sbb
scas
fwait
loopne
in
popa
negb
pop
loopne
xor
add
call
addr16
in
push
sub
jae
mov
pop
push
aaa
mov
or
popf
push
xchg
fcomps
mov
rolb
loop
inc
pop
icebp
loop
fbld
xchg
and
mov
cli
test
arpl
pop
ljmp
mov
add
cmp
rcrb
pop
xchg
outsb
xchg
out
pop
rcrb
pop
je
les
and
mov
mov
repz
clc
testl
inc
adc
jecxz
mov
xlat
sbb
adc
addb
call
shlb
adc
imul
aam
jl
je
roll
add
push
testl
and
mov
and
jae
jno
ds
inc
scas
rclb
pop
pop
ret
clc
lahf
push
iret
jle
add
std
and
add
test
test
or
je
pop
stc
cs
pop
jecxz
movsl
jno
std
daa
imul
fstpt
push
stos
outsl
xor
nop
mov
push
xor
mov
add
call
or
cmc
xor
rcrb
mov
pop
pushf
std
data16
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
testb
sub
pop
pop
mov
test
lea
sti
divb
or
leave
pushf
dec
mov
pusha
push
mov
xchg
scas
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
xchg
imul
pushf
imul
jb
or
loopne
xor
sbb
sub
mov
fcomp
mov
rcr
fstpt
call
rcr
fstpt
fcomp
mov
rcr
fstpt
fcomp
mov
rcr
fstpt
adc
arpl
loopne
xor
divb
loope
jno
stos
jns
in
dec
push
sbb
imul
pushf
imul
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
add
call
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
orb
inc
mov
lock
fdivr
add
mov
rdtsc
sub
clc
test
sbb
xchg
mov
in
in
mov
inc
stos
add
or
xor
ja
adc
mov
xor
fistps
pop
daa
add
call
mov
in
jbe
adc
or
sahf
jmp
cmc
push
inc
adcl
and
mov
cltd
cmc
divl
into
sarb
dec
cmp
lea
pushf
mov
dec
dec
addr16
xchg
int
fstps
test
dec
les
and
enter
cwtl
insb
nop
mov
lea
pop
mov
jecxz
mov
xlat
sbb
adc
xorb
std
adc
imul
aam
jl
je
roll
call
aas
add
push
testl
and
mov
and
jae
jno
ds
inc
scas
rclb
pop
pop
ret
clc
lahf
push
iret
jle
add
std
and
add
test
test
or
je
pop
stc
cs
pop
jecxz
movsl
jno
std
daa
imul
fstpt
push
stos
outsl
xor
nop
mov
cld
xchg
int3
push
or
mov
punpckldq
dec
xchg
add
jae
inc
mov
jecxz
xchg
sbb
add
call
sti
fwait
xlat
aas
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
rcr
push
mov
sbb
or
sbb
daa
sbb
fs
mov
call
fs
and
fs
clc
mov
test
dec
es
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
inc
outsl
pop
cli
or
add
pusha
xor
cwtl
mov
mov
push
clc
pop
and
fldcw
xor
push
shrl
sar
and
sbb
iret
adc
sbb
adc
sbb
adc
push
shll
pop
movsl
iret
fldenv
or
fildl
sbb
add
call
nop
and
adc
sbb
adc
leave
or
ret
jnp
aam
fsts
pop
and
mov
mov
xor
scas
test
adcl
mov
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
rolb
call
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
gs
sub
inc
add
out
xor
rol
stc
fwait
jg
or
jp
in
or
jle
mov
jbe
movsl
mov
ror
dec
mov
in
xor
cs
imull
insl
mov
loop
mov
sub
push
outsb
or
fwait
inc
add
xchg
dec
bound
lret
cli
pop
fsubl
add
add
call
in
inc
outsl
mov
bound
jo
mov
mov
fimuls
test
pop
test
xor
pop
aaa
inc
cmpsb
pop
ljmp
aaa
cli
push
pop
je
les
and
and
sub
inc
bound
decl
adc
push
sbb
daa
out
stos
cmp
mov
xorb
std
adc
imul
aam
jl
je
roll
add
push
testl
and
mov
and
jae
jno
add
call
inc
inc
scas
rclb
pop
pop
ret
clc
lahf
push
iret
jle
add
std
and
add
test
test
or
je
pop
stc
cs
pop
jecxz
movsl
jno
std
daa
imul
fstpt
push
stos
outsl
xor
nop
mov
cld
xchg
int3
push
or
mov
punpckldq
dec
cli
lret
push
sahf
outsb
stos
pop
aad
jecxz
je
lock
mov
push
aaa
pop
lods
lcall
iret
dec
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
inc
xchg
mov
insl
out
outsl
hlt
call
fiadds
pusha
mov
shlb
jp
xor
jecxz
lods
stos
shlb
jecxz
lods
add
call
inc
hlt
imul
pushf
imul
rcrl
dec
sbb
sub
adc
clc
pop
and
sar
and
sbb
iret
adc
pop
movsl
iret
fldenv
cmp
ret
lods
mov
cmc
cwtl
aas
xchg
mov
mov
aas
xchg
jbe
sbb
movsb
mov
push
xor
mov
and
add
push
mov
cmc
call
add
push
mov
cmc
call
add
push
mov
cmc
decl
push
jmp
cmc
xchg
jbe
sbb
movsb
mov
mov
mov
aas
lods
mov
cmc
cwtl
add
call
xchg
xor
mov
mov
or
and
adc
adc
in
adc
pop
and
mov
mov
loope
jno
stos
fistpll
push
push
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
add
call
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
or
iret
fs
fdivrs
movsb
push
mov
jp
test
jg
inc
popa
arpl
nop
outsb
sub
and
pop
xor
js
mov
xchg
jl
mov
or
bound
xlat
push
push
sarb
add
cli
mov
xor
addr16
jmp
mov
mov
and
add
call
push
pop
cmp
sbb
mov
jp
jne
fistpll
inc
fnstenv
rorl
test
dec
les
and
adc
dec
xor
adc
decl
adc
push
sbb
daa
out
xchg
mov
enter
shlb
adc
test
inc
mov
aam
jl
je
roll
add
push
testl
and
mov
and
jae
jno
ds
inc
scas
rclb
pop
pop
ret
clc
lahf
push
iret
jle
add
std
add
call
hlt
add
test
test
or
je
pop
stc
cs
pop
jecxz
movsl
jno
std
daa
imul
fstpt
push
stos
outsl
xor
nop
mov
cld
xchg
int3
push
or
mov
punpckldq
dec
cli
lret
push
sahf
outsb
stos
pop
sbb
xchg
inc
inc
insl
lret
mov
ljmp
mov
ja
in
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
clc
aam
mov
outsl
add
notl
repz
and
mov
stos
shlb
jecxz
lods
mov
inc
outsl
pop
cli
or
push
iret
sub
mov
mov
xor
push
shrl
cld
inc
sub
push
add
add
call
dec
lret
mov
lods
mov
cmc
cwtl
aas
xchg
lods
mov
pop
out
add
push
mov
cmc
call
add
push
mov
cmc
incl
shlb
inc
push
shlb
stc
in
cmpsl
leave
adc
in
cmpsl
leave
adc
in
cmpsl
leave
adc
in
cmpsl
leave
adc
in
cmpsl
leave
adc
in
cmpsl
leave
adc
in
cmpsl
leave
adc
sub
mov
shlb
adc
sub
lock
call
add
push
mov
cmc
call
cmp
add
call
lods
mov
cmc
cwtl
aas
xchg
sub
inc
ljmp
mov
pop
ret
jnp
aam
fstps
fstpt
or
inc
hlt
imul
pushf
imul
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
add
call
lods
stos
shlb
jecxz
lods
mov
mov
sub
je
cmc
aam
popl
daa
xlat
push
mov
xchg
movsb
lods
pop
adc
addr16
inc
sbb
and
je
mov
loop
cmpl
jne
mov
fistl
xor
sub
enter
inc
mov
std
adc
or
sahf
nop
out
aas
scas
mov
cmpb
cmp
or
ss
dec
xchg
es
inc
stc
dec
inc
push
inc
das
mov
filds
call
dec
add
movl
adc
jo
push
lea
pop
scas
mov
daa
out
xchg
mov
enter
shlb
adc
test
inc
mov
aam
jl
je
roll
add
push
testl
and
mov
and
jae
jno
ds
inc
scas
rclb
pop
pop
ret
clc
lahf
push
iret
jle
add
std
and
add
test
test
or
je
pop
stc
cs
pop
jecxz
add
call
jno
std
daa
imul
fstpt
push
stos
outsl
xor
nop
mov
cld
xchg
int3
push
or
mov
punpckldq
dec
cli
lret
push
sahf
outsb
stos
pop
sbb
xchg
inc
inc
insl
aad
jecxz
je
lock
add
or
pushf
push
ss
iret
ret
mov
pusha
test
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jge
popa
test
fbld
ja
rcl
or
inc
xor
sub
mov
or
adc
pop
cli
or
fcompl
fcompl
sub
sub
icebp
push
shrl
cld
inc
sub
push
mov
loop
imul
push
andb
push
mov
and
int
pop
jg
ffreep
aaa
pushf
sti
inc
lret
mov
ljmp
call
jl
out
pop
and
outsl
inc
jge
and
jmp
inc
sbb
pop
test
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
iret
mov
je
mov
outsb
into
pop
and
outsl
inc
jge
es
test
mov
sub
mov
inc
sti
ja
add
push
mov
cmc
decl
jae
pop
in
in
mov
roll
call
inc
aaa
daa
lret
and
adc
iret
jnp
aam
fldenv
fbld
ret
fcomps
add
jmp
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
dec
add
and
add
call
adc
mov
ljmp
mov
jl
dec
xor
xchg
and
shll
mov
lahf
cs
idivl
enter
dec
dec
adc
loop
cmpl
add
arpl
lea
pop
pop
icebp
and
testl
cmp
mov
pop
push
aaa
mov
test
cli
imulb
jne
cltd
and
mov
aam
orl
loop
pop
je
les
and
movl
adc
jo
mov
jecxz
mov
add
call
xlat
scas
mov
daa
out
xchg
mov
enter
cmpsb
imul
test
inc
mov
outsb
add
leave
je
roll
add
push
testl
and
mov
and
jae
jno
ds
inc
scas
rclb
pop
pop
ret
clc
lahf
push
iret
jle
add
std
and
add
test
test
or
je
pop
stc
cs
pop
jecxz
movsl
jno
std
daa
imul
fstpt
push
stos
outsl
xor
add
call
nop
mov
cld
xchg
int3
push
or
mov
punpckldq
dec
cli
lret
push
sahf
outsb
stos
pop
sbb
xchg
inc
inc
insl
aad
jecxz
je
lock
cmp
loop
iret
aad
std
push
dec
pop
mov
les
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cmpsl
es
clc
aam
stos
dec
enter
std
incb
outsl
dec
xlat
sub
movsl
mov
jnp
add
jne
arpl
in
loopne
stos
or
cs
into
jge
lret
mov
add
je
lret
mov
push
push
andb
push
mov
cmc
incl
shlb
popa
pop
cmp
out
inc
sbb
push
sbb
pop
test
sbb
scas
es
lcall
repz
dec
pop
dec
das
fwait
in
lods
cli
mov
add
call
jle
imul
lods
push
xor
addr16
or
test
mov
cmp
xchg
fcoms
ss
fcoms
addr16
or
mov
in
sub
je
push
stos
imul
int
push
and
mov
sbb
stos
cmp
inc
xor
mov
mov
rorl
es
test
mov
sub
mov
add
push
mov
cmc
decl
jae
pop
in
in
mov
add
stos
xor
addl
call
lods
rclb
fistpll
lock
adc
arpl
cmp
push
push
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
insb
jl
push
in
pop
aad
enter
imull
testb
xor
add
call
popa
and
lcall
pop
lods
rcrl
in
inc
and
mov
jns
enter
dec
negb
pop
loopne
xor
gs
ret
in
stos
pop
test
and
es
jmp
mov
into
roll
mov
pop
and
out
pushf
mov
xor
sbb
les
and
test
xchg
mov
xchg
mov
jecxz
mov
xlat
sbb
adc
mov
andb
add
call
outsb
jne
test
inc
mov
outsb
add
leave
decb
adcl
sub
xchg
pop
and
mov
xor
das
addl
xchg
sub
in
sbb
pop
ret
clc
lahf
push
iret
jle
add
std
and
add
test
test
or
je
pop
stc
cs
pop
jecxz
movsl
jno
std
daa
imul
fstpt
push
stos
outsl
xor
nop
mov
cld
xchg
int3
push
or
mov
punpckldq
add
call
and
lret
push
sahf
outsb
stos
pop
sbb
xchg
inc
inc
insl
aad
jecxz
je
lock
cmp
loop
scas
push
sub
outsb
popa
icebp
nop
iret
ret
mov
pusha
test
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pop
jns
imul
push
cmp
sub
pop
mov
nop
or
call
in
imul
fcompl
sub
sub
icebp
push
shrl
jb
sbb
and
push
andb
push
mov
and
push
shlb
popa
pop
cmp
out
int
dec
mov
push
inc
loope
jo
sbb
scas
es
cs
fwait
in
lods
cli
mov
jle
test
mov
cmp
xchg
fcoms
iret
incl
das
loope
sbb
mov
stos
mov
mov
adc
adc
in
daa
icebp
xor
add
call
adc
in
daa
icebp
xor
adc
in
daa
icebp
xor
lcall
jmp
pusha
ljmp
call
sbb
xorl
aas
or
mov
mov
or
sbbb
inc
push
in
push
push
jne
mov
sbb
stos
cmp
je
mov
outsb
es
test
mov
sub
mov
add
push
mov
cmc
stc
dec
aaa
sbb
repz
movsl
cltd
adc
inc
cmp
ja
or
aaa
cmpsb
sub
push
adc
add
call
dec
mov
and
push
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
inc
outsl
pop
cli
or
inc
mov
das
enter
imull
inc
cmp
push
popa
and
lcall
lahf
inc
lret
test
call
mov
cld
enter
dec
negb
pop
loopne
xor
gs
ret
pop
lock
loop
mov
sub
push
outsb
jg
push
push
sarb
inc
shrb
leave
fnsave
loope
aad
pop
je
les
and
test
lret
shrl
push
sbb
daa
out
stos
cmp
mov
xorb
std
adc
imul
aam
jl
adc
dec
outsb
add
leave
decb
adcl
add
call
sub
xchg
pop
and
mov
xor
das
addl
xchg
sub
in
sbb
pop
ret
clc
lahf
inc
cmp
xlat
or
hlt
add
test
test
or
je
pop
stc
cs
pop
jecxz
movsl
jno
std
daa
imul
fstpt
push
stos
outsl
xor
nop
mov
cld
xchg
int3
push
or
mov
punpckldq
dec
cli
lret
push
sahf
outsb
stos
pop
sbb
xchg
inc
inc
insl
aad
jecxz
je
lock
add
call
mov
push
jl
loop
scas
push
sub
outsb
popa
icebp
popa
xchg
cld
jne
jne
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jp
iret
rolb
pop
adc
add
xchg
shrb
jg
cmpsl
cmc
adc
mov
ja
mov
mov
loop
imul
xchg
mov
add
call
fcomps
int
pop
jg
ffreep
popa
pop
cmp
out
out
dec
xchg
pop
outsb
jbe
push
jo
sbb
scas
rcll
in
add
imul
lods
xchg
ret
cs
loope
sbb
mov
or
pop
inc
cltd
leave
subb
int3
test
stos
cli
mov
addr16
add
push
or
aad
mov
mov
cmpsl
shlb
ret
mov
mov
cmpsl
shlb
ret
mov
mov
cmpsl
rolb
call
mov
mov
addr16
add
push
or
iret
inc
fistps
cltd
leave
subb
int3
test
lcall
pop
bound
test
dec
dec
or
sbbb
inc
push
stos
imul
int
push
and
leave
popf
or
stos
cmp
je
mov
outsb
es
test
mov
inc
sti
ja
sbb
push
add
xchg
xchg
add
stos
xor
lds
jns
insl
fistpll
lock
pop
cwtl
mov
xchg
jecxz
lods
add
call
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
orb
inc
mov
cwtl
outsb
lods
addr16
js
jmp
sub
pop
xor
dec
icebp
insl
ds
popa
and
lcall
lahf
inc
lret
jmp
push
idivl
enter
dec
dec
clc
es
push
pop
add
call
gs
adc
jmp
pop
adc
mov
outsb
jle
nop
mov
rsqrtps
shlb
out
out
jne
pop
je
les
and
aad
dec
push
add
icebp
mov
pop
xlat
insl
scas
mov
daa
out
xchg
mov
enter
shlb
adc
imul
aam
jl
je
roll
add
decb
andl
shrb
xchg
pop
and
mov
xor
das
adcl
inc
add
call
test
and
pop
ret
clc
lahf
inc
cmp
xlat
or
hlt
add
test
test
or
je
pop
stc
cs
pop
jecxz
movsl
jno
std
daa
imul
fstpt
push
stos
outsl
xor
nop
mov
cld
xchg
int3
push
or
mov
punpckldq
dec
cli
lret
push
sahf
outsb
stos
pop
sbb
xchg
inc
inc
insl
aad
jecxz
je
lock
cmp
loop
scas
push
sub
outsb
popa
icebp
iret
aad
std
push
dec
pop
mov
filds
add
call
cli
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lret
cmp
das
fdivs
pop
push
ret
sbb
test
push
sbb
ja
mov
cmp
ret
push
xor
mov
and
pushf
sti
inc
lret
mov
ljmp
notl
into
mov
pop
test
jmp
add
call
jb
pop
sub
mov
hlt
mov
jg
out
out
mov
stos
mov
leave
subb
int3
test
out
imul
xor
mov
mov
loop
jns
test
adcb
xchg
mov
jg
adc
insl
aas
out
mov
aas
out
mov
aas
out
mov
aas
out
mov
aas
out
mov
into
sbb
adc
insl
divb
movsb
sbb
setne
mov
pop
inc
add
call
imul
shlb
ret
mov
push
cltd
leave
subb
int3
test
or
stos
xorl
aas
or
pop
sbbb
inc
push
cmp
adc
leave
popf
or
stos
cmp
mov
rorl
and
mov
adc
sub
lock
incl
jle
es
mov
pop
fistpll
lock
pop
cwtl
mov
and
cmp
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
rolb
call
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
gs
sub
inc
add
jmp
ret
pushf
test
push
cld
insl
and
xor
je
stc
std
inc
add
push
out
enter
out
lods
push
xor
mov
popa
cmpsb
sub
jb
mov
roll
outsb
aam
stos
cmp
fistpll
cs
mov
add
call
jge
and
pop
xor
mov
scas
test
dec
les
and
mov
outsl
push
jl
lock
test
sbb
adc
mov
andb
outsb
jne
test
inc
mov
aam
jl
je
roll
add
push
testl
je
or
pop
and
mov
xor
das
adcl
inc
cmp
jle
add
std
inc
cmp
xlat
or
icebp
pop
bound
call
mov
test
or
je
pop
stc
cs
pop
jecxz
movsl
jno
std
daa
imul
fstpt
push
stos
outsl
xor
nop
mov
cld
xchg
int3
push
or
mov
punpckldq
dec
cli
lret
push
sahf
outsb
stos
pop
sbb
xchg
inc
inc
insl
aad
jecxz
je
lock
cmp
loop
scas
push
sub
outsb
popa
icebp
iret
aad
std
push
dec
pop
mov
fcomip
cli
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xchg
ljmp
test
inc
popf
adc
mov
cld
inc
sub
push
jbe
mov
add
push
mov
cmc
pushl
pushf
sti
inc
lret
mov
ljmp
outsb
jbe
addr16
test
pop
test
sub
jp
ret
cs
mov
xor
mov
inc
out
scas
sbb
push
add
call
in
jmp
push
mov
xchg
push
xchg
mov
push
stc
jmp
mov
loope
int3
test
and
in
xchg
adc
adc
mov
push
dec
mov
push
andb
jmp
inc
mov
andb
sub
es
mov
push
dec
mov
and
ss
mov
test
and
dec
mov
loope
xor
mov
movsb
shl
mov
xchg
push
xchg
mov
pop
inc
aam
add
call
mov
jns
sub
js
push
and
aaa
inc
push
or
pop
rclb
test
push
adc
dec
das
xor
iret
fstpl
ljmp
dec
aam
mov
inc
sti
ja
dec
aaa
sbb
repz
mov
push
into
fistpll
lock
pop
cwtl
mov
and
cmp
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
add
call
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
push
push
xor
lods
mov
fwait
pop
movsb
push
mov
or
jp
and
xor
je
stc
or
push
arpl
mov
dec
nop
pop
lods
ror
hlt
pushf
fildll
aaa
adcb
push
andb
jmp
xor
aaa
imul
inc
dec
cmpsl
fs
and
pop
je
les
and
call
sub
jno
mov
popf
out
cmp
sbb
mov
jb
addr16
adc
imul
test
inc
mov
outsb
add
leave
je
roll
add
push
testl
and
mov
and
jae
jno
ds
xor
das
adcl
inc
cmp
jle
add
std
inc
cmp
xlat
or
icebp
pop
bound
test
or
je
pop
stc
cs
pop
jecxz
movsl
jno
std
daa
imul
call
cmp
push
mov
in
push
stos
outsl
xor
nop
mov
cld
xchg
int3
push
or
mov
punpckldq
dec
cli
lret
push
sahf
outsb
stos
pop
sbb
xchg
inc
inc
insl
aad
jecxz
je
lock
cmp
loop
scas
push
sub
outsb
popa
icebp
mov
push
aaa
pop
lods
lcall
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lds
sti
sti
push
js
and
mov
adc
sub
out
pusha
xor
push
andb
pop
jg
ffreep
popa
pop
cmp
out
stc
pop
aad
outsl
test
outsb
push
ret
scas
stos
int
daa
pop
sub
mov
hlt
mov
loopne
adc
pusha
add
lods
cwtl
stos
mov
rcrb
addr16
xor
pusha
je
popf
cmp
adc
lcall
and
adc
mov
add
call
or
dec
xor
faddl
outsb
mov
push
add
mov
xchg
push
insl
jmp
sub
in
fstps
in
fstps
in
fstps
in
fstps
in
fstps
test
or
xchg
or
shl
xchg
faddl
push
or
or
dec
adcb
cmp
int3
test
and
dec
mov
loope
divb
movsb
sbb
inc
pop
daa
jmp
fwait
pop
vmwrite
pop
mov
call
fists
cmp
add
cmp
xor
pop
sbbb
inc
push
cmp
adc
xor
mov
es
test
mov
inc
sti
ja
jae
pop
in
in
mov
mov
push
into
fistpll
lock
pop
cwtl
mov
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
add
call
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
xchg
jnp
push
iret
sub
outsl
jno
pop
movsb
push
mov
or
jp
and
xor
je
stc
stos
fmull
cli
dec
push
and
sarl
and
pushf
inc
aaa
adcb
mov
mov
xchg
aam
xchg
faddl
inc
sahf
add
pop
je
les
and
lock
mov
mov
xchg
mov
enter
cmpsb
add
call
add
int
filds
int
in
enter
daa
adc
dec
outsb
add
leave
decb
adcl
sub
xchg
pop
and
mov
and
jae
jno
ds
inc
scas
rclb
pop
es
cmp
jle
add
std
inc
cmp
xlat
or
icebp
pop
bound
jb
or
je
pop
stc
cs
pop
jecxz
movsl
jno
std
daa
imul
mov
in
push
stos
outsl
xor
nop
mov
add
call
push
xor
mov
push
adc
outsl
punpckldq
dec
cli
lret
push
sahf
outsb
stos
pop
sbb
xchg
inc
inc
insl
aad
jecxz
je
lock
cmp
loop
scas
push
sub
outsb
popa
icebp
scas
in
or
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
gs
pop
xchg
popf
and
inc
jno
add
call
ret
movsb
or
pop
pop
dec
out
lods
cmpl
add
stos
mov
into
mov
pop
test
sti
mov
sarl
ret
cmp
pop
mov
inc
push
ss
mov
popa
rcrb
imul
cmp
adc
lcall
xchg
loope
mov
ljmp
lock
faddl
sbb
and
xchg
push
insl
jmp
jmp
inc
cmp
xor
inc
jl
pop
sbb
adc
scas
add
call
sti
push
push
in
pop
push
mov
in
pop
push
mov
in
pop
push
mov
in
pop
push
mov
in
pop
push
mov
in
pop
push
mov
outsl
pushw
mov
mov
bound
cmpsl
add
arpl
movsb
mov
sahf
lret
or
lock
faddl
push
or
or
dec
andb
fs
mov
loope
divb
movsb
sbb
inc
clc
dec
push
test
cli
jecxz
cmpsb
dec
ds
dec
mov
call
or
mov
out
sub
sbb
popf
or
stos
cmp
es
test
mov
inc
sti
ja
jae
pop
in
in
mov
insl
inc
xor
fistpll
lock
stos
xchg
mov
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
add
call
shlb
jecxz
lods
fstpt
test
mov
sbb
icebp
out
stc
fwait
jg
or
jp
and
xor
je
stc
aam
xor
cmc
push
nop
dec
push
and
shr
dec
popa
rcrb
cmp
dec
fwait
clc
adc
call
mov
sub
je
les
and
or
mov
enter
shlb
adc
imul
test
inc
mov
aam
jl
je
roll
add
call
iret
decb
andl
shrb
xchg
pop
and
mov
xor
das
addl
xchg
sub
in
sbb
pop
ret
clc
lahf
push
iret
jle
add
std
and
add
test
icebp
pop
bound
jb
or
mov
es
out
jno
std
daa
imul
mov
orb
js
cs
scas
mov
mov
push
xor
mov
push
adc
outsl
punpckldq
dec
cli
lret
push
add
call
outsb
stos
pop
sbb
xchg
inc
inc
insl
aad
jecxz
je
lock
cmp
loop
rcl
cs
pop
aas
les
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
adc
mov
int3
daa
bound
ja
jecxz
scas
jne
sub
ret
pmulhuw
add
inc
push
dec
idivb
lret
call
xor
sti
cmp
aam
ljmp
out
fwait
jbe
adc
repnz
decb
rcrb
test
jbe
and
stos
or
out
dec
sub
movsb
or
ljmp
outsb
mov
push
add
mov
in
fstps
jl
pop
sbb
sti
push
push
int
cmp
arpl
sbb
inc
into
xchg
int3
fisubrs
push
leave
pop
es
mov
and
mov
mov
push
mov
mov
push
mov
add
call
sub
mov
mov
mov
push
mov
mov
push
mov
mov
cwtl
push
leave
pop
es
mov
jl
jns
fdiv
aad
cmp
dec
nop
aas
xlat
dec
jbe
mov
bound
cmpsl
add
arpl
movsb
mov
adc
shlb
jo
pop
xchg
cmpsl
es
ss
mov
cmp
pop
insl
mov
sub
pop
mov
jns
out
inc
cmc
cmp
bound
xor
popf
or
add
call
stos
cmp
es
test
mov
inc
sti
ja
jae
pop
in
in
mov
aad
orl
rclb
ret
ds
repz
xor
mov
and
push
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
test
jns
and
pop
fildll
lcall
ss
add
call
mov
ljmp
in
push
push
icebp
and
xor
je
stc
or
push
arpl
mov
dec
nop
pop
lods
rorl
repz
push
popa
mov
and
loop
mov
pop
je
les
and
pushf
in
mov
sbb
mov
andb
filds
int
in
enter
daa
adc
dec
outsb
add
leave
je
roll
add
push
testl
je
or
pop
and
mov
add
call
subb
push
pop
es
cmp
pop
ret
clc
lahf
push
iret
jle
add
std
and
add
test
test
or
jb
or
mov
es
out
jno
std
daa
imul
mov
orb
js
cs
xlat
cmp
xchg
int3
fisubl
je
mov
cmpsb
rdpmc
mov
sub
adc
outsl
punpckldq
dec
cli
lret
push
sahf
outsb
stos
pop
sbb
xchg
inc
inc
insl
aad
jecxz
je
lock
add
push
add
call
insb
scas
in
or
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
jnp
pop
jl
mov
pop
arpl
inc
iret
pop
int
xchg
jmp
mov
jmp
mov
comiss
in
loopne
movsb
push
call
fwait
jbe
adc
repnz
inc
out
scas
sbb
push
jns
add
call
pusha
mov
or
jge
add
in
xchg
adc
divl
icebp
sbb
and
xchg
push
insl
jmp
xor
inc
jl
pop
sbb
in
pop
push
mov
inc
into
xchg
int3
fisubrs
sbb
push
arpl
fucomp
stos
pop
test
pop
sahf
rolb
and
jnp
sti
cmp
jnp
push
cmp
jnp
push
cmp
dec
enter
in
lret
cli
in
sbb
cmp
sbb
or
push
or
push
cmp
jnp
push
cmp
call
into
jnp
sti
cmp
test
pop
stos
fldt
jns
stos
iret
out
xchg
inc
add
bound
jl
jns
fdiv
aad
cmp
mov
bound
cmpsl
add
arpl
movsb
mov
jmp
adc
pop
fs
sbb
pop
xchg
es
pop
sub
lods
aad
xor
jb
movsb
sbb
sbb
jne
fists
cmp
add
lcall
push
adc
leave
popf
or
stos
cmp
es
test
mov
inc
add
call
ja
shll
mov
pop
sbb
insl
cmpsb
sub
push
adc
arpl
jmp
and
cmp
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
inc
outsl
pop
cli
or
inc
mov
pop
and
outsb
cmpl
push
loope
cmpl
call
je
loope
inc
xor
cmc
push
nop
ljmp
out
sahf
daa
jg
cmpsl
sahf
push
xor
and
int3
sub
test
dec
les
and
jmp
gs
filds
int
filds
int
outsb
jne
test
inc
mov
aam
jl
je
roll
add
decb
adcl
sub
xchg
pop
and
mov
and
jae
jno
ds
xor
das
adcl
inc
cmp
jle
add
std
inc
cmp
add
call
xlat
or
hlt
add
test
test
or
je
pop
stc
cs
pop
nop
mov
es
out
jno
std
daa
imul
mov
orb
js
cs
xlat
cmp
xchg
int3
fisubl
je
mov
cmpsb
rdpmc
mov
sub
adc
outsl
punpckldq
dec
cli
lret
push
sahf
outsb
stos
pop
sbb
xchg
inc
inc
insl
jnp
popa
stos
daa
test
pop
std
push
dec
pop
mov
in
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xor
in
mov
push
aaa
daa
add
adc
andb
xchg
int3
adc
mov
jae
dec
lahf
popa
outsb
int
sbb
ja
dec
in
pop
int3
sub
pushf
fildll
popf
cmp
adc
push
stos
movsb
or
ljmp
outsb
mov
push
add
mov
add
call
sub
imul
jecxz
into
xchg
int3
fisubrs
sbb
push
arpl
fstpl
inc
and
and
push
xor
mov
dec
enter
in
lret
ss
gs
adc
mov
enter
inc
xor
das
in
stos
add
xchg
xor
das
in
stos
add
xchg
xor
das
in
stos
add
xchg
xor
das
in
stos
add
xchg
xor
das
in
stos
add
xchg
frstor
push
call
push
adc
shlb
lret
ss
fstpt
sbb
or
and
add
call
cld
imul
test
pop
stos
fistl
mov
mov
mov
bound
jl
jns
fmuls
aas
xlat
dec
jbe
push
sub
jno
jbe
into
adc
shlb
jo
pop
xchg
es
pop
sub
lods
aad
xor
pop
push
adc
adc
shrl
pop
ja
icebp
or
pop
mov
mov
stc
pop
lcall
or
test
test
in
test
mov
push
jmp
cmc
xchg
add
stos
xor
ja
or
aaa
add
call
ja
loope
jno
stos
mov
jmp
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
int3
mov
loope
or
stos
jmp
xchg
sub
pop
out
jb
std
push
jmp
mov
jo
roll
fisttps
pop
adc
inc
shl
cmpl
aam
xor
cmc
push
nop
fisttps
add
call
mov
add
adc
dec
xor
into
xchg
mov
iret
filds
int
outsb
jne
test
inc
mov
aam
jl
adc
dec
outsb
add
leave
je
roll
add
push
testl
je
or
pop
and
mov
xor
das
addl
xchg
sub
in
push
pop
es
cmp
jle
add
std
inc
cmp
xlat
or
icebp
pop
bound
test
or
je
pop
add
call
cs
pop
jecxz
movsl
jno
std
daa
imul
fstpt
inc
push
mov
orb
js
cs
xlat
cmp
xchg
int3
fisubl
je
mov
cmpsb
rdpmc
mov
sub
decb
test
sahf
outsb
stos
pop
sbb
xchg
inc
inc
insl
jnp
popa
stos
daa
test
bound
jg
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
imul
pop
xchg
out
cmp
decl
add
mov
lahf
push
test
sub
or
push
fucomip
mov
pop
lock
rolb
js
je
lret
dec
sub
movsb
or
test
pop
cli
roll
fisubs
xchg
push
insl
jmp
xor
inc
jl
pop
sbb
ljmp
pop
sbb
push
arpl
fstpl
inc
and
and
push
xor
call
jp
aam
or
getsec
sub
or
cmp
das
in
stos
add
xchg
cli
out
inc
jne
loopne
sti
sbb
ljmp
hlt
mov
jno
mov
mov
pushf
add
xchg
xchg
lods
xchg
xchg
lods
xchg
xchg
jno
adcl
pop
insb
adc
dec
jge
test
sbb
ljmp
cli
out
inc
jne
loopne
sti
xor
das
in
stos
add
xchg
repnz
push
adc
shlb
lret
ss
or
push
cmp
test
add
call
pop
stos
fildl
mov
ljmp
imul
cmpsl
arpl
sahf
lret
or
xor
mov
rorb
iret
push
cli
mov
cmp
mov
shrl
pop
ja
fists
cmp
rclb
push
dec
pusha
out
mov
xor
adc
fstpl
ljmp
or
pop
mov
sbb
push
add
xchg
cmc
movsl
cltd
adc
inc
cmp
mov
mov
and
push
stos
shlb
jecxz
lods
stos
rolb
call
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
int3
mov
loope
or
cwtl
dec
lcall
dec
lds
pop
cs
out
add
sbb
dec
out
add
sbb
dec
out
add
sbb
dec
out
add
sbb
push
sbb
gs
inc
gs
mov
std
mov
pop
push
push
mov
shlb
mov
mov
arpl
pop
je
les
and
pushl
dec
and
add
call
outsb
jne
test
inc
mov
aam
jl
adc
dec
outsb
add
leave
je
roll
add
decb
adcl
sub
xchg
pop
and
mov
xchg
xchg
pop
and
mov
xor
das
addl
xchg
sub
in
sbb
pop
ret
clc
lahf
push
iret
jle
add
std
and
add
test
icebp
pop
bound
test
or
je
pop
stc
cs
pop
jecxz
movsl
jno
std
daa
imul
fstpt
push
stos
add
call
xor
orb
js
cs
xlat
cmp
xchg
int3
push
or
mov
int
pop
arpl
leave
test
shl
subb
pop
lds
lret
popa
stos
daa
test
push
aaa
pop
lods
lcall
insl
pop
outsb
adc
pop
aaa
sarl
enter
repnz
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
imul
add
call
pop
xchg
out
cmp
enter
cmp
loop
inc
add
scas
inc
inc
mov
cmp
mov
push
in
lea
xchg
xor
repz
cltd
sbb
sbb
jg
repz
icebp
push
sbb
orl
scas
pop
sti
push
push
sbb
inc
into
xchg
int3
fisubrs
rcr
aas
mov
loope
jp
aam
or
getsec
sub
or
cmp
dec
rclb
mov
sbb
ljmp
sbb
pushf
add
add
call
mov
push
mov
in
or
pop
sbb
jecxz
shlb
cwtl
pop
cmp
and
daa
shlb
cwtl
pop
cmp
and
daa
shlb
cwtl
pop
cmp
and
mov
sti
stos
mov
push
jno
adcl
pop
insb
sbb
ljmp
sbb
cltd
mov
and
add
ficomps
imul
cmpsl
mov
pop
cld
imul
jns
stos
iret
out
xchg
bound
jl
jns
add
call
fmuls
aas
xlat
dec
jbe
add
arpl
movsb
mov
jmp
adc
pop
cmpsl
es
ss
mov
pop
push
adc
adc
cmc
outsb
lret
gs
jns
out
inc
cmc
cmp
ret
or
cmp
inc
cmc
imul
dec
xor
fwait
xor
jae
pop
in
in
mov
pop
sbb
insl
cmpsb
sub
push
adc
arpl
jmp
and
cmp
stos
shlb
jecxz
lods
int3
mov
loope
or
pop
dec
lds
pop
xor
aad
add
call
push
push
push
cs
out
add
sbb
mov
or
adcl
adcl
xor
and
insb
xor
and
insb
xor
and
insb
or
jne
gs
pop
add
pop
nop
or
lods
daa
xchg
lcall
lahf
xchg
cmp
sbb
pop
je
les
and
lea
das
mov
xchg
js
mov
or
aam
jl
mov
or
aam
jl
je
roll
add
je
add
call
inc
inc
aas
add
push
testl
je
or
pop
and
mov
and
jae
jno
ds
xor
das
adcl
inc
cmp
pop
ret
clc
lahf
push
iret
jle
add
std
and
add
test
test
or
jb
or
je
pop
stc
cs
pop
jecxz
movsl
jno
std
daa
imul
mov
in
push
stos
outsl
xor
nop
mov
cld
xchg
int3
push
or
mov
call
mov
sub
decb
test
shl
subb
pop
lds
lret
popa
stos
daa
test
sub
outsb
popa
icebp
jl
mov
movsl
jle
push
xor
fs
inc
xchg
fsubrs
les
cli
mov
push
push
jmp
sub
lods
sub
xchg
fmuls
movsb
dec
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jg
dec
pusha
pop
and
stc
icebp
fistl
sar
rclb
push
xchg
add
call
jno
out
icebp
push
xchg
std
jno
out
pop
sub
and
mov
xchg
xlat
ficoml
mov
ds
imul
jecxz
into
xchg
int3
fisubrs
rcr
aas
mov
loope
jp
push
out
xchg
dec
rclb
mov
jmp
int
dec
ret
hlt
and
aas
mov
sahf
dec
bound
lret
cli
jecxz
shlb
cwtl
pop
cmp
add
outsl
bound
adc
addb
jecxz
movsb
mov
bound
add
call
shrb
cwtl
pusha
shrb
cwtl
pusha
shrb
cwtl
pusha
shrb
cwtl
pusha
shrb
pop
jecxz
movsb
mov
bound
adc
addb
pop
inc
jnp
mov
jecxz
shlb
cwtl
pop
cmp
xchg
and
sti
sti
les
mov
dec
jge
test
sbb
cltd
mov
mov
ret
hlt
ja
cmp
sbb
or
ja
test
pop
stos
fisttpl
aaa
outsb
inc
leave
inc
ret
orl
jbe
add
arpl
movsb
mov
call
dec
jmp
adc
pop
inc
ljmp
divb
movsb
sbb
icebp
jne
sbb
adc
inc
mov
adc
pop
out
lods
ret
jae
mov
push
pop
loop
loopne
add
xchg
add
stos
xor
ja
or
aaa
ret
fcomps
add
outsb
dec
or
js
xor
aad
cli
push
push
push
cs
out
add
sbb
adc
jge
insl
or
insl
stc
lods
ds
mov
fiadds
cltd
push
aam
jle
add
call
scas
jae
sub
jae
sub
mov
push
es
sub
fiadds
test
fiadds
test
subl
jno
pushl
mov
fdiv
or
mov
dec
add
test
dec
les
and
loope
jmp
push
jne
test
inc
mov
aam
jl
je
roll
add
je
roll
add
push
testl
sub
xchg
pop
and
mov
xchg
xchg
pop
and
add
call
mov
xor
das
addl
xchg
sub
in
push
pop
es
cmp
jle
add
std
inc
cmp
xlat
or
hlt
add
test
test
or
je
pop
stc
cs
pop
nop
mov
es
out
jno
std
daa
imul
mov
in
push
stos
outsl
xor
nop
mov
cld
xchg
int3
push
or
mov
punpckldq
arpl
leave
test
shl
subb
add
call
lds
lret
popa
stos
daa
test
inc
xchg
pop
and
nop
aaa
notb
xor
clc
imulb
subl
insb
sub
add
pop
sti
cs
xor
fs
inc
xchg
fsubrs
les
cli
mov
fstl
fmuls
movsb
dec
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
ret
jo
ret
rcll
adc
pushf
insb
mov
scas
jmp
in
clc
sbb
shrl
mov
mov
daa
sub
inc
add
call
cmpsl
aas
jle
ret
lea
cmp
repnz
mov
xor
jae
sahf
rolb
and
dec
enter
in
and
scas
dec
push
stc
dec
icebp
jmp
int
dec
ret
cmp
mov
inc
std
bound
lret
cli
clc
or
pop
and
scas
outsl
out
out
pop
jnp
pop
sti
mov
mov
rolb
loop
push
rolb
sbbb
sti
into
outsb
cmp
xor
sbb
adc
scas
sbb
adc
scas
sbb
call
add
rep
cmp
xor
pop
pushl
ja
iret
lods
push
dec
shrb
dec
sarl
or
loope
es
addb
cmp
mov
mov
adc
pop
mov
mul
cld
xor
cmp
add
fisubs
sahf
pop
ret
ja
test
pop
stos
fildl
mov
ljmp
xlat
dec
jbe
add
arpl
movsb
mov
jmp
adc
pop
push
pop
sub
lods
aad
xor
add
call
ret
or
or
bound
shlb
test
push
adc
xchg
mov
aas
mov
sbb
push
add
xchg
mov
fst
dec
jo
jo
push
sahf
dec
lcall
repnz
mov
or
jmp
fs
popa
inc
inc
mov
fdivs
jae
sub
ljmp
mov
jns
popa
das
add
cwtl
sbb
and
fdecstp
and
es
adc
or
add
call
std
iret
pop
mov
fprem
insb
adcl
dec
in
test
dec
sub
mov
insl
push
lock
xor
dec
rorb
je
les
and
push
test
cmpsl
jo
ret
push
aas
mov
roll
add
je
roll
add
push
testl
sub
add
and
shrb
xchg
pop
and
mov
and
jae
jno
ds
xor
das
adcl
inc
cmp
pop
ret
add
call
lahf
push
iret
jle
add
std
and
add
test
icebp
pop
bound
test
or
je
pop
stc
cs
pop
nop
mov
es
out
jno
std
daa
imul
mov
orb
js
cs
scas
mov
mov
push
xor
mov
push
adc
outsl
punpckldq
dec
cli
lret
push
sahf
outsb
stos
pop
movb
shl
subb
jecxz
je
lock
jnp
popa
stos
daa
test
inc
xchg
pop
and
nop
aaa
notb
xor
call
js
insl
clc
imulb
subl
insb
xchg
punpcklwd
dec
pop
mov
pop
mov
pop
mov
rolb
pop
sti
cs
xchg
ret
adc
push
outsl
mov
aas
xor
repnz
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
ret
jo
xchg
jmp
and
gs
movsb
adc
xor
or
outsl
movsl
lea
add
dec
loop
xlat
and
sti
rol
sub
push
test
adc
add
sbbl
call
add
sbb
call
pop
sub
and
scas
dec
push
stc
dec
icebp
jmp
int
dec
ret
hlt
and
aas
mov
sahf
dec
mov
or
pop
sbb
imulb
jne
jnp
pop
sti
mov
scas
ret
lahf
inc
imul
pop
pop
pop
divb
shrl
push
push
aaa
xchg
jbe
mov
gs
mov
lea
inc
fidivl
pop
or
push
pop
nop
or
push
pop
nop
or
push
pop
nop
or
rorl
lock
mov
sub
mov
adc
adc
add
call
mov
sbb
pop
int3
lret
or
sub
iret
lods
push
dec
sarl
or
loope
pop
sahf
lcall
ds
cmp
je
les
mov
cld
xor
cmp
pop
call
stc
inc
sbb
xchg
test
pop
stos
fisttpl
aaa
outsb
inc
leave
inc
ret
orl
jbe
lods
cmp
pop
in
jae
fs
sbb
pop
xchg
lds
scas
addr16
add
push
xchg
add
loope
or
pop
mov
xor
call
sbb
nop
jo
fists
test
push
xchg
movsl
pop
test
mov
mov
outsb
and
mov
add
out
bound
and
insb
mov
jnp
mov
je
xor
mov
int3
sbb
das
add
cwtl
sbb
and
cmp
inc
bound
mov
call
repz
imul
imul
jnp
and
mov
scas
mov
sbb
scas
xchg
jnp
and
jnp
and
push
add
call
pop
xchg
xchg
adc
pop
cli
lcall
dec
call
in
or
outsb
xchg
sti
jbe
mov
je
roll
add
push
testl
sub
add
and
shrb
xchg
pop
and
mov
and
jae
jno
ds
xor
das
addl
xchg
sub
in
push
pop
es
cmp
jle
add
std
push
iret
jle
add
std
and
add
test
test
or
add
call
jb
or
je
pop
stc
cs
pop
jecxz
movsl
jno
std
daa
imul
fstpt
inc
push
mov
orb
js
cs
xlat
cmp
xchg
int3
fisubl
je
mov
cmpsb
rdpmc
mov
sub
adc
outsl
punpckldq
dec
cli
lret
push
sahf
outsb
stos
pop
sbb
xchg
inc
inc
insl
aad
jecxz
je
lock
cmp
loop
mov
and
nop
aaa
notb
xor
clc
imulb
subl
insb
xchg
punpcklwd
dec
add
call
mov
pop
mov
pop
mov
pop
mov
pop
mov
xchg
fmul
nop
loopne
lods
push
cmpsb
or
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
mov
pop
mov
in
scas
pushf
fimull
dec
jo
jg
jmp
aas
outsb
cltd
jp
or
jns
sarb
jns
sarb
mov
cmp
xlat
cwtl
jmp
sbbl
out
sub
int
dec
ret
test
cmp
or
call
pop
and
cmp
jle
push
dec
adc
mov
rolb
loop
sahf
mov
pop
pop
inc
ja
popf
in
inc
popf
fisubl
scas
mov
push
sub
mov
data16
pop
dec
insb
xchg
sub
inc
lret
lods
xorl
mov
leave
mov
out
leave
mov
out
leave
mov
rolb
pop
aam
daa
data16
insl
inc
fwait
xor
xchg
mov
add
scas
inc
gs
ficoml
les
pop
mov
add
call
das
jp
icebp
pop
pop
xor
lahf
inc
imul
xlat
aam
xchg
int
movsl
mov
arpl
sub
xor
adc
dec
jge
test
frstor
push
call
stc
inc
sbb
xchg
test
pop
stos
jl
jns
fdivs
ds
xor
xor
into
adc
rorb
dec
shlb
push
pop
pop
inc
adc
sbb
jne
mov
adc
pop
out
lods
ret
sbb
popa
stos
mov
push
dec
out
add
call
inc
push
or
lods
dec
pop
add
adc
jbe
and
xor
jl
icebp
sbbb
icebp
cmp
inc
bound
jo
jge
cmp
and
mov
jmp
and
pop
je
sti
aaa
and
push
cmp
sub
jns
popf
nop
sarb
add
rclb
fwait
nop
mov
or
stos
mov
aam
push
xchg
divb
test
dec
les
and
add
call
icebp
or
repnz
sub
lcall
sub
pop
out
adcl
sub
add
and
shrb
xchg
pop
and
mov
xchg
xchg
pop
and
mov
xor
das
xorl
test
adcl
inc
cmp
pop
ret
clc
lahf
push
iret
jle
add
std
inc
cmp
xlat
or
hlt
add
test
test
or
jb
or
mov
es
out
jno
std
daa
imul
call
inc
push
mov
in
push
stos
outsl
xor
orb
js
cs
xlat
cmp
xchg
int3
fisubl
je
mov
cmpsb
rdpmc
mov
sub
adc
outsl
punpckldq
dec
cli
lret
push
sahf
outsb
stos
pop
sbb
xchg
inc
inc
insl
aad
jecxz
je
lock
cmp
loop
mov
and
nop
aaa
notb
xor
stos
inc
lods
and
subl
insb
xchg
punpcklwd
dec
pop
mov
pop
mov
pop
mov
pop
mov
add
call
punpcklwd
dec
pop
mov
pop
mov
or
mov
out
ljmp
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xor
clc
or
add
jno
inc
cmp
gs
inc
inc
clc
push
nop
push
dec
or
sbb
nop
push
dec
or
sbb
pop
cmp
imul
add
cltd
in
pop
cmp
imul
int
loopne
add
push
lret
sub
out
mov
iret
pop
scas
pop
sub
inc
rol
movsl
lods
aas
scas
mov
cmpb
cmp
push
rolb
sbbb
jno
add
movsl
sbb
add
call
pop
outsl
mov
in
imul
pop
dec
insb
xchg
sub
mov
push
mov
and
imul
xor
add
jge
push
movsl
sti
xlat
call
or
rcrl
mov
pop
jle
pop
jge
push
ja
packuswb
mov
leave
lret
add
jmp
mov
out
jl
lea
data16
insl
inc
fwait
and
scas
sub
jg
gs
ficoml
les
fcompl
or
stos
sub
sub
pop
push
dec
add
call
cmp
or
fistps
fldcw
dec
jno
stos
ret
adc
dec
jge
test
frstor
push
call
stc
inc
sbb
mov
cmp
movsl
dec
or
and
fs
pop
int3
or
cmp
insb
jnp
out
dec
inc
int
aad
inc
ljmp
leave
popa
stos
icebp
or
cmpsl
insl
or
jg
idivb
arpl
mov
mov
cmp
xchg
sub
int3
shlb
out
test
sub
rcll
es
in
data16
insl
lea
sbb
call
xor
sub
adc
add
add
inc
xchg
jnp
and
or
icebp
dec
xchg
int
pop
pusha
add
pop
popf
nop
mov
sbb
aas
push
pusha
mov
andb
movsl
nop
mov
aas
aaa
daa
lods
rol
out
in
das
cli
pop
xor
rol
out
aas
aaa
daa
lods
rol
out
pop
cmp
out
sbb
cmc
mov
pop
je
les
and
leave
sbb
fdivs
outsl
mov
aaa
in
or
pop
out
add
call
andl
shrb
xchg
pop
and
mov
xchg
xchg
pop
and
mov
xor
das
xorl
test
adcl
inc
cmp
es
cmp
jle
add
std
push
iret
jle
add
std
and
add
test
icebp
pop
bound
test
or
je
pop
stc
cs
pop
nop
mov
es
out
jno
std
daa
imul
mov
orb
js
cs
scas
mov
mov
cld
add
call
inc
imul
in
push
mov
int
pop
arpl
leave
test
sahf
outsb
stos
pop
sbb
xchg
inc
inc
insl
jnp
popa
stos
daa
test
sbb
int
bound
outsb
popa
icebp
aaa
notb
xor
stos
inc
lods
and
xchg
punpcklwd
dec
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
xchg
add
call
iret
pop
jbe
xor
repnz
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmp
sti
add
call
jl
shrb
sbb
inc
test
sub
leave
in
es
ss
fs
fldenv
loope
ss
fs
fldenv
loope
ss
fs
bound
xor
push
xor
cmpsb
scas
pop
mov
aaa
out
pop
xlat
or
test
shll
pop
stos
pmulhuw
aad
in
add
jle
dec
cltd
and
mov
aam
cli
sahf
push
push
aaa
xchg
jbe
inc
add
cmp
mov
dec
jbe
lret
and
xchg
xor
add
movsl
sti
xlat
call
call
insb
jmp
mov
mov
inc
insb
mov
cwtl
xchg
mov
js
mov
js
mov
js
mov
js
mov
aas
cld
hlt
and
iret
repz
aad
bound
sub
leave
ret
jnp
shlb
push
out
testb
data16
insl
inc
fwait
mov
xchg
pop
xor
adc
adc
fnsave
pop
xor
add
push
dec
sarl
or
loope
outsl
sub
lcall
dec
jno
add
call
ret
hlt
inc
enter
cmc
pop
mov
xchg
mov
test
rorl
adc
shl
leave
ds
loope
cltd
clc
lea
lods
cmp
pop
in
jae
fs
sbb
pop
xchg
es
cmp
pop
inc
pop
mov
cmp
test
jo
dec
test
pop
mov
jns
xchg
fisubl
pop
cmp
outsb
add
das
jb
clc
and
xor
fwait
ja
mov
adcl
loope
sbb
sbb
movsl
mov
xlat
mov
add
call
lahf
cltd
ja
mov
dec
roll
pop
push
adc
cs
or
pushf
xor
popa
mov
test
push
lret
mov
call
sbb
int3
and
adc
push
ljmp
mov
mov
iret
xchg
pusha
shll
cli
cmp
xor
jae
test
dec
les
and
pusha
add
xor
movsb
std
or
ljmp
es
push
dec
xor
xchg
pop
and
mov
xchg
xchg
pop
and
mov
xor
das
addl
call
subb
inc
scas
rclb
pop
es
cmp
pop
ret
clc
lahf
push
iret
jle
add
std
inc
cmp
xlat
or
hlt
add
test
test
or
jb
or
je
pop
stc
cs
pop
jecxz
movsl
jno
std
daa
imul
fstpt
inc
push
mov
orb
js
cs
scas
mov
mov
cld
xchg
int3
push
or
mov
punpckldq
arpl
add
call
test
shl
subb
pop
lds
lret
popa
stos
daa
test
inc
xchg
pop
and
nop
scas
push
sub
outsb
popa
icebp
aaa
notb
xor
stos
inc
lods
and
xchg
punpcklwd
dec
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
sbb
data16
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
ret
scas
ds
and
jo
out
arpl
addl
jae
adc
ljmp
jo
sub
add
call
add
add
xchg
fwait
sbb
adc
jnp
fsubrs
dec
cltd
clc
pop
daa
mov
sbb
test
jecxz
cmc
int
sti
jl
jecxz
cmc
int
sti
jl
adc
rcrl
in
or
les
pop
push
cli
in
imul
jg
inc
jp
jne
fbstp
das
mov
and
imul
jmp
dec
mov
lea
mov
test
in
mov
out
test
xchg
aas
in
scas
cld
lds
call
mov
fcmove
mov
fcmove
mov
fidivl
aas
in
scas
cld
lds
xchg
jne
cli
jns
and
jge
mov
je
adc
dec
xor
mov
je
test
test
xor
xchg
push
mov
mov
cmc
out
inc
shl
sti
jne
lret
in
ja
pop
xor
add
push
dec
sarl
or
loope
movsl
mov
arpl
fstpt
sbb
and
jecxz
xor
cmp
xchg
sub
add
call
hlt
sbb
and
cmpsb
xor
xchg
aaa
outsb
inc
leave
inc
ret
xorl
hlt
xor
into
adc
ror
out
dec
inc
jmp
dec
mov
inc
dec
jle
xor
ret
pop
push
sbb
pop
jmp
or
fs
jne
sub
ljmp
jl
cmp
aam
mov
scas
cltd
sub
ret
pop
mov
movsb
mov
mul
scas
mov
int
cld
aad
jmp
jmp
inc
add
add
fadds
das
dec
add
call
sub
jge
mov
lret
push
mov
cmp
ret
sub
shrb
lea
xorl
mov
test
dec
les
and
push
xor
xchg
mov
ljmp
xchg
push
dec
xor
xchg
pop
and
mov
xor
das
xorl
test
addl
xchg
sub
in
push
pop
es
cmp
pop
ret
clc
lahf
push
iret
add
call
and
inc
cmp
xlat
or
hlt
add
test
icebp
pop
bound
test
or
je
pop
stc
cs
pop
nop
mov
es
out
jno
std
daa
imul
mov
in
push
stos
outsl
xor
orb
js
cs
xlat
cmp
xchg
int3
fisubl
je
mov
cmpsb
femms
or
mov
punpckldq
dec
cli
lret
push
sahf
outsb
stos
pop
movb
shl
subb
pop
lds
lret
popa
stos
daa
test
call
movl
scas
push
sub
outsb
popa
icebp
clc
imulb
ds
inc
lods
and
xchg
punpcklwd
dec
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
xchg
iret
pop
jbe
xor
repnz
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
andl
mov
sub
loop
cwtl
jne
out
pop
push
add
not
out
pop
push
add
not
out
pop
push
add
not
shrb
cmp
lret
insl
and
add
call
cli
lret
jne
xchg
xchg
mov
cmc
jmp
in
fidivrs
nop
stc
ss
push
fidivrs
nop
stc
ss
push
adc
inc
fsubl
and
lret
daa
inc
jne
lcall
mov
xchg
xor
add
adc
jg
mov
mov
fadds
add
push
fdivrl
push
int3
xor
out
cmp
imul
out
cltd
cmpl
gs
cwtl
cmp
xor
gs
cwtl
cmp
xor
gs
cwtl
cmp
xor
gs
cwtl
cmp
add
call
xor
gs
cwtl
int3
push
hlt
ret
cltd
cmpl
test
jecxz
jns
sub
xor
jge
mov
iret
repz
aad
bound
packuswb
mov
leave
xor
xchg
push
mov
mov
imul
xor
jne
lret
in
adc
cli
add
jle
aam
xchg
int
fs
adc
pop
mov
mov
cltd
mov
fdivr
inc
sbb
mov
cmp
movsl
lock
cmp
add
call
pusha
cs
cwtl
mov
dec
mov
ss
shl
adc
movsl
push
sbb
stos
push
int
mov
lods
jle
push
inc
or
int3
ret
sub
xchg
xor
arpl
aad
mov
dec
js
sti
dec
xchg
fwait
mov
fsubr
mov
and
insl
divb
pusha
repz
mov
pop
mov
cld
out
push
fdivl
outsl
sbb
sub
outsl
sbb
into
mov
jle
cli
mov
sbb
add
call
scas
xchg
inc
sar
jle
std
jmp
or
xlat
jecxz
lcall
les
and
test
xchg
and
repnz
imul
subb
xor
das
xorl
test
addl
xchg
sub
in
push
pop
es
cmp
pop
ret
clc
lahf
push
iret
jle
add
std
push
iret
jle
add
std
and
add
test
hlt
add
test
test
call
inc
or
jb
or
je
pop
stc
cs
pop
jecxz
movsl
jno
std
daa
imul
std
daa
imul
mov
orb
js
cs
scas
mov
mov
cld
xchg
int3
push
or
mov
int
pop
push
adc
outsl
punpckldq
dec
cli
lret
push
sahf
outsb
stos
pop
sbb
xchg
inc
inc
insl
aad
jecxz
je
lock
jnp
popa
stos
daa
test
inc
xchg
pop
and
nop
aaa
notb
xor
clc
imulb
subl
call
out
inc
nop
insb
xchg
punpcklwd
dec
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
rolb
pop
sti
cs
addr16
jg
shr
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
adc
aad
dec
cmp
mov
push
sub
lret
jp
hlt
ficoml
icebp
hlt
rcrl
into
pop
jb
push
shlb
into
pop
jb
push
aam
pop
and
pop
xchg
imul
pop
dec
test
out
out
aaa
inc
in
dec
aas
and
jge
leave
add
call
cmp
push
cs
aaa
mov
push
mov
mov
and
add
stos
mov
mov
mov
cmpsl
not
sarl
mov
adc
xchg
push
fnstsw
and
cmp
clc
or
sbb
push
sbbb
shl
scas
sub
js
out
icebp
scas
sub
js
out
icebp
scas
sub
js
out
jmp
mov
inc
jmp
or
or
lahf
jbe
lahf
push
cmp
arpl
push
xor
add
call
gs
cwtl
jge
mov
lret
or
cmpsb
fldl
leave
jns
repz
ja
packuswb
mov
leave
dec
in
js
pop
scas
test
mov
pushf
pop
adc
adc
lods
stos
sub
sub
pop
xchg
std
dec
cld
adc
scas
cmp
inc
enter
cmc
pop
mov
xchg
mov
and
pop
cld
imul
mov
ljmp
pop
mov
xor
bound
or
push
movsl
push
mov
cli
xor
add
call
push
mov
or
in
cmpsl
inc
cmp
cmp
cmp
js
fsubl
sbb
enter
divb
inc
in
lret
cli
jge
jmp
daa
outsb
icebp
inc
popa
and
pop
mov
mov
add
cli
mov
movsb
test
ljmp
ds
aas
mov
or
leave
lret
lods
mov
push
xor
and
xor
cli
repnz
push
dec
or
push
incb
adcl
sti
push
enter
sub
add
call
pop
je
les
and
pop
inc
in
sbb
push
sti
mov
dec
adc
jl
ja
lcall
test
xorl
test
adcl
inc
cmp
es
cmp
pop
ret
clc
lahf
push
iret
jle
add
std
push
iret
jle
add
std
and
add
test
hlt
add
test
test
or
test
or
je
pop
stc
cs
pop
nop
mov
es
out
jno
std
add
call
imul
fstpt
inc
push
mov
orb
js
cs
xlat
cmp
xchg
int3
std
xlat
cmp
xchg
int3
push
or
mov
punpckldq
arpl
leave
test
sahf
outsb
stos
pop
sbb
xchg
inc
inc
insl
aad
jecxz
je
lock
cmp
loop
mov
and
nop
aaa
notb
xor
clc
imulb
subl
insb
xchg
punpcklwd
dec
pop
mov
pop
mov
call
dec
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
pop
je
std
data16
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
ret
and
fmuls
mov
xchg
and
loop
int
sbb
xor
jle
xchg
push
stc
test
out
decw
popf
xchg
push
ret
movsb
inc
sbb
add
fdivrl
aas
jae
stc
sbb
jns
jo
movsl
out
jecxz
jns
mulb
jns
js
out
daa
and
cmp
add
call
mul
sbb
push
ret
and
mov
xchg
mov
push
fnstsw
and
cmp
movsb
mov
icebp
dec
xchg
xchg
cmp
sbb
inc
sub
adc
test
mov
imulb
orb
repz
add
loope
sbb
and
stc
pop
mov
aad
jns
jbe
lahf
push
cmp
arpl
sub
cmp
call
or
iret
adc
sub
or
je
adc
dec
ja
packuswb
mov
leave
fwait
mov
pusha
xchg
aas
shrb
fisubl
mov
popf
mov
cli
sbb
shrb
sub
lcall
jl
inc
sbb
and
aad
nop
or
fdivr
inc
sbb
sub
loopne
sub
xchg
popa
xor
jge
aam
mov
cltd
cmp
iret
leave
push
jl
push
cli
test
add
popf
pop
das
arpl
jmp
fiadds
jp
add
call
or
cmp
add
or
out
add
sbb
add
sub
push
popa
js
jecxz
pop
imul
sahf
sbb
daa
mov
push
lds
pop
or
sub
cmp
xchg
in
loopne
daa
testb
push
imul
xchg
je
mov
inc
pop
stos
push
and
nop
push
outsl
fisubrs
mov
pushl
lock
imul
xor
js
pop
je
les
and
xlat
mov
idivb
lret
mov
sub
ds
jo
add
call
ret
scas
pop
xor
jp
sbb
push
pop
es
cmp
es
cmp
es
cmp
pop
ret
clc
lahf
push
iret
jle
add
std
push
iret
jle
add
std
inc
cmp
xlat
or
hlt
add
test
icebp
pop
bound
test
or
jb
or
je
pop
stc
cs
pop
jecxz
movsl
jno
std
daa
imul
std
daa
imul
mov
in
push
stos
outsl
xor
orb
js
add
call
xlat
cmp
xchg
int3
fisubl
je
mov
cmpsb
femms
or
mov
punpckldq
dec
cli
lret
push
sahf
outsb
stos
pop
movb
shl
subb
pop
lds
lret
popa
stos
daa
test
sbb
int
bound
outsb
popa
icebp
aaa
notb
xor
stos
inc
lods
and
subl
insb
xchg
punpcklwd
dec
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
add
call
mov
add
shlb
pop
hlt
mov
xlat
aas
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
je
stos
mov
xor
incb
mov
lods
push
mov
or
mov
pop
xchg
fldt
cmpsb
adc
add
enter
cmp
add
enter
pop
xchg
fldt
cmpsb
adc
hlt
fbstp
es
ficoml
imul
push
sub
fisttpl
push
pop
sub
js
xor
cld
ja
push
and
mov
jl
add
repz
sarl
inc
in
or
or
jmp
add
call
xor
lcall
cmp
mov
pop
loopne
pop
insl
dec
jge
mov
call
out
hlt
cmpsb
outsl
mov
xor
dec
push
cmpsb
rclb
push
cmpsb
rclb
push
cmpsb
rclb
adc
hlt
int
ret
or
les
pop
xchg
rclb
adc
and
stc
pop
jbe
xchg
xor
aaa
inc
imul
cld
cmp
xchg
fwait
or
je
adc
dec
add
call
inc
inc
lds
or
stos
xor
fwait
xor
out
xor
adc
jmp
aam
sub
js
sti
jle
aam
xchg
int
int
cltd
jp
or
mov
add
xor
sahf
xchg
imul
aaa
aad
pop
mov
aas
inc
cwtl
and
ffree
mov
xor
adc
imul
cwtl
lods
mov
test
mov
pop
mov
int3
jo
out
jl
mov
inc
faddl
cmp
xchg
jmp
lret
add
dec
sub
and
add
call
subb
push
sub
iret
jns
mov
jnp
cwtl
cmp
xchg
in
loopne
cmp
dec
sub
mov
js
fdivs
jno
jns
jne
mov
push
cs
jmp
or
data16
cmp
xchg
cmp
xchg
scas
mov
addb
mov
test
dec
les
and
cmpsl
rcrl
mov
adc
in
push
nop
arpl
push
mov
insb
fwait
sahf
rcrb
push
pop
es
cmp
es
add
call
test
and
iret
jle
add
std
push
iret
jle
add
std
push
iret
jle
add
std
inc
cmp
xlat
or
hlt
add
test
icebp
pop
bound
test
or
jb
or
je
pop
stc
cs
pop
nop
mov
es
out
jno
std
daa
imul
fstpt
inc
push
mov
orb
js
cs
scas
mov
mov
cld
xchg
int3
push
or
mov
int
pop
push
adc
add
call
outsl
punpckldq
dec
cli
lret
push
sahf
outsb
stos
pop
movb
shl
subb
pop
lds
lret
popa
stos
daa
test
inc
xchg
pop
and
nop
scas
push
sub
outsb
popa
icebp
aaa
notb
xor
stos
inc
lods
and
xchg
punpcklwd
dec
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
add
shlb
pop
hlt
mov
xlat
aas
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lds
outsl
jns
sldt
call
cld
fnstcw
imul
test
xor
mov
lods
jae
int3
sti
xchg
scas
mov
push
push
lods
scas
ret
or
pop
mov
mov
mov
divl
pop
mov
mov
mov
inc
test
mov
pop
lret
fists
cmp
mov
test
adc
call
xchg
jge
or
aaa
andl
movsl
mov
or
xchg
sub
or
outsl
js
xchg
in
sub
add
call
lods
in
jecxz
hlt
xchg
mov
cmp
fstpt
vandnps
jge
cmp
lret
push
dec
mov
lret
push
dec
mov
lret
push
dec
mov
xchg
mov
mov
jne
fcomip
int
ret
or
les
pop
xchg
rclb
inc
in
jbe
xchg
xor
aaa
inc
imul
cld
cmp
fsubrl
sbb
jns
fnstenv
cmp
je
jle
jne
subl
mov
pushf
pop
inc
incl
add
call
push
mov
mov
push
mov
sub
sub
lcall
or
fidivl
sub
mov
bound
mov
addr16
rolb
pop
hlt
or
pop
and
and
movsb
push
mov
jg
clc
jae
add
mov
lods
push
out
inc
mov
cmpb
push
and
adc
dec
cmp
fmull
sbb
jmp
jne
in
clc
pop
pop
ret
mov
mov
xchg
ljmp
sub
lock
add
call
shrb
mov
lret
ret
in
pop
dec
cli
nop
pop
xchg
stos
xchg
mov
jne
mov
pushw
subl
rcr
xor
mov
and
in
cmp
add
bound
or
add
xor
mov
fwait
xorl
setb
iret
jle
add
std
push
iret
jle
add
std
push
iret
jle
add
std
push
iret
jle
add
std
and
add
add
call
test
hlt
add
test
icebp
pop
bound
test
or
test
or
je
pop
stc
cs
pop
nop
mov
es
out
jno
std
daa
imul
std
daa
imul
mov
in
push
stos
outsl
xor
orb
js
cs
xlat
cmp
xchg
int3
fisubl
je
mov
cmpsb
femms
or
mov
punpckldq
arpl
leave
test
sahf
outsb
stos
pop
sbb
xchg
inc
inc
insl
aad
jecxz
add
call
jmp
popa
stos
daa
test
inc
xchg
pop
and
nop
aaa
notb
xor
clc
imulb
ds
inc
lods
and
xchg
punpcklwd
dec
pop
mov
pop
mov
pop
mov
pop
mov
rolb
pop
sti
cs
xchg
ret
adc
hlt
mov
xlat
aas
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmp
mov
mov
movsl
pop
test
ss
pop
xchg
jbe
stc
das
popf
xchg
iret
popl
xchg
sarl
add
call
jb
push
or
sbb
ret
lret
aaa
and
xchg
jge
or
aaa
and
xchg
jge
or
aaa
and
xchg
jge
or
aaa
fcom
stos
mov
dec
fwait
imul
or
aaa
andl
movsl
mov
or
add
jle
cmc
cli
xchg
loope
cmc
ja
nop
in
data16
imul
mov
cltd
into
mov
lret
sub
lret
mov
fidivs
gs
push
es
fmuls
test
es
lahf
andl
add
call
jmp
gs
incb
jmp
gs
incb
jmp
test
es
lahf
fcomi
imul
xor
stc
pusha
fidivrl
jmp
push
xor
mov
and
les
pop
xchg
rclb
inc
in
insl
mov
fisttps
aaa
inc
imul
or
cmpsb
fldl
xchg
data16
jae
pop
xor
mov
pusha
push
decl
lea
and
sub
js
sti
jle
aam
xchg
int
insl
adc
leave
add
call
xchg
sti
or
add
dec
bound
xchg
test
adc
pushf
jo
mov
gs
sub
jl
lods
imul
adcb
sub
xchg
imul
adc
cmpsl
inc
sarl
sbbl
push
js
in
mov
call
dec
repnz
div
outsb
jecxz
test
cli
push
orb
stos
xor
mov
fsub
lahf
pushl
js
dec
add
call
out
dec
addl
dec
mov
sbb
mov
pop
jo
add
xor
push
inc
push
jb
pop
je
les
and
jmp
popf
adcb
jo
mov
cmpsb
shl
jbe
out
xor
in
xchg
push
iret
jle
add
std
push
iret
jle
add
std
push
iret
jle
add
std
inc
cmp
xlat
or
hlt
add
test
hlt
add
test
icebp
pop
bound
test
or
test
or
add
call
je
pop
stc
cs
pop
or
stc
cs
pop
jecxz
movsl
jno
std
daa
imul
std
daa
imul
mov
inc
inc
push
mov
orb
js
cs
scas
mov
mov
cld
xchg
int3
push
or
mov
int
pop
push
adc
outsl
punpckldq
dec
cli
lret
push
sahf
outsb
stos
pop
movb
shl
subb
pop
lds
lret
popa
stos
daa
test
sbb
int
bound
and
nop
aaa
notb
xor
call
insl
clc
imulb
subl
insb
xchg
punpcklwd
dec
pop
mov
pop
mov
pop
mov
xchg
fsubrs
cltd
pop
jge
mov
movsb
dec
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
aad
push
add
movsl
mov
add
push
xchg
sbb
mov
and
mov
xchg
shlb
or
mov
mov
pop
leave
jo
add
call
and
aaa
pop
leave
inc
mov
jmp
xor
pop
cmc
ja
mov
cmpsb
sbbl
xor
jo
cs
mov
mov
lods
lahf
inc
in
lds
and
push
xchg
or
xor
fs
mov
and
sahf
jbe
and
data16
call
insl
dec
ljmp
insb
mov
sbb
inc
shll
mov
or
fwait
jb
dec
int3
and
shl
mov
mov
mov
mov
call
pop
sbb
push
xorl
iret
dec
sub
leave
mov
iret
pop
jp
adcb
test
dec
xor
rol
and
stc
pop
lahf
jbe
lahf
push
cmp
arpl
mov
lret
adc
sub
leave
xchg
mov
inc
add
iret
dec
das
jne
popf
and
fildll
pushf
pop
inc
mov
mov
ds
pop
ja
adc
and
push
stos
rcl
insl
pop
inc
aas
int
out
jmp
repnz
or
xlat
mov
movsl
add
call
lds
xchg
mov
pop
pop
fsubp
shlb
cltd
pop
stos
icebp
push
ljmp
cmpsl
gs
adc
cmp
jo
sbbl
pop
mov
movsl
les
les
cmc
lcall
lods
jns
addr16
sbb
ljmp
mov
and
inc
pop
stos
push
and
nop
push
outsl
fisubrs
mov
nop
jnp
pop
mov
dec
xchg
mov
xor
sub
and
mov
les
add
call
idivb
dec
les
and
mov
ret
xor
test
insl
jle
cmp
es
pop
mov
and
add
enter
push
iret
jle
add
std
filds
pop
mov
mov
gs
mov
gs
mov
gs
cltd
xchg
cmp
cmp
or
test
or
je
pop
stc
cs
pop
or
stc
cs
pop
jecxz
movsl
jno
std
daa
imul
std
daa
imul
call
jo
fstpt
inc
push
mov
in
push
stos
outsl
xor
orb
js
cs
xlat
cmp
xchg
int3
std
xlat
cmp
xchg
int3
push
or
mov
int
pop
push
adc
outsl
punpckldq
dec
cli
lret
push
sahf
outsb
stos
pop
sbb
xchg
inc
inc
insl
sbb
xchg
inc
inc
insl
jnp
popa
stos
daa
test
inc
xchg
pop
and
nop
scas
push
sub
outsb
popa
icebp
aaa
notb
xor
stos
inc
lods
and
subl
insb
xchg
punpcklwd
dec
pop
mov
add
call
rolb
pop
sti
cs
push
xchg
test
clc
aaa
aam
xchg
insl
pop
outsb
xor
repnz
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
ret
scas
ds
and
jo
push
iret
dec
adc
and
inc
cmp
mov
pop
sbb
call
jecxz
xchg
aad
lret
fs
lods
outsl
pop
cmpsl
sbb
push
lods
outsl
pop
cmpsl
sbb
push
inc
jnp
push
add
sbbl
sarb
sbb
cmc
je
dec
add
call
mov
rorb
aas
adc
sbb
and
xchg
nop
jle
xor
lahf
and
test
mov
pop
jecxz
mov
pop
add
lret
dec
aad
xchg
mov
popa
les
and
xchg
je
and
aad
mov
jo
frstor
jo
frstor
jo
frstor
mov
cli
mov
lret
mov
mov
dec
lret
icebp
ret
add
call
or
xor
jp
adcb
adc
es
adc
aad
jns
cmpsl
js
das
push
faddl
mov
cli
js
shlb
insb
pop
xor
or
stos
xor
fwait
mov
xchg
mov
fidivrl
cmp
cmp
sti
push
fucomp
faddl
mov
outsb
push
shrb
add
stos
cmpsl
jg
mov
inc
or
xor
loop
dec
and
cmp
sbb
faddl
add
call
mov
leave
sub
scas
inc
mov
xor
int
popf
das
jle
test
xchg
sbb
pushw
lods
sbb
test
or
push
data16
pop
inc
pusha
dec
hlt
aad
out
lcall
jecxz
sbb
inc
xchg
loopne
arpl
addr16
xor
ja
xor
pop
imul
adc
lods
ret
iret
arpl
xchg
das
mov
in
xchg
shrb
je
les
and
movl
cli
mov
add
call
inc
sub
fsubrs
or
push
notl
aad
pop
and
movsl
push
cmpsl
inc
test
dec
les
and
les
and
les
and
les
and
les
and
les
and
les
and
cmpsl
int
shl
add
rclb
adc
jb
dec
jmp
and
xor
rclb
fld
popf
movl
push
stos
outsl
xor
orb
js
cs
scas
add
call
nop
mov
cld
xchg
int3
fisubl
je
mov
cmpsb
femms
or
mov
punpckldq
arpl
leave
test
sahf
outsb
stos
pop
sbb
xchg
inc
inc
insl
aad
jecxz
je
lock
jnp
popa
stos
daa
test
inc
xchg
pop
and
nop
aaa
notb
xor
aaa
notb
xor
stos
inc
lods
and
sub
add
pop
sti
cs
push
xchg
test
jl
aad
pop
mov
movsb
dec
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cld
lock
push
sar
push
popf
mov
mov
movsb
cli
mov
cmpsb
mov
sub
leave
pusha
pusha
ret
inc
xchg
orl
pop
and
test
xchg
int3
icebp
nop
sahf
out
popa
ret
pop
xchg
jge
jg
stos
or
push
sbb
cltd
js
dec
mov
jle
popa
ret
pop
xchg
jge
jg
stos
or
push
fimull
add
call
pop
popa
ret
pop
xchg
jge
add
lret
dec
aad
mov
and
cmpl
push
jg
cwtl
loopne
gs
mov
push
stc
stc
arpl
dec
enter
mov
lock
aam
push
inc
loopne
and
jmp
and
mov
and
mov
fsubs
loop
negl
inc
sbb
stos
pop
sti
sbb
mov
xchg
pop
or
lret
icebp
ret
dec
push
lea
jmp
push
xor
mov
add
call
sub
xchg
pop
pusha
pop
jns
in
leave
scas
scas
mov
lds
cmpl
pop
pop
cmp
lret
mov
shlb
cwtl
out
test
out
call
jne
subl
or
cli
cld
not
pop
push
ja
mov
mov
inc
jae
cwtl
lret
scas
mov
or
aam
pop
lds
pop
adcb
adc
dec
jne
mov
jl
loop
in
rclb
jb
cmpsl
aas
push
xchg
pop
inc
push
mov
int
fwait
mov
movsb
fs
lahf
nop
scas
add
call
sahf
cmp
cmovns
dec
sbb
leave
in
pop
negl
jne
xor
test
test
inc
pop
inc
adc
pop
jge
cli
xor
sub
push
int3
jns
adc
ljmp
push
and
sub
cmpsl
and
pusha
push
mov
push
das
lahf
mov
mov
sbb
pop
je
les
and
les
and
les
and
les
and
les
and
les
and
les
and
call
pop
je
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
sbb
sbb
jnp
xchg
cmp
cmp
fsubl
fbld
test
mov
mov
cmpsb
femms
or
mov
int
add
call
pop
push
adc
outsl
punpckldq
dec
cli
lret
push
sahf
outsb
stos
pop
movb
shl
subb
pop
lds
lret
popa
stos
daa
test
sbb
int
bound
and
nop
aaa
notb
xor
inc
in
mov
xchg
das
cmp
cmc
fs
inc
xchg
fdivrs
mov
lea
push
test
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
aaa
test
aaa
dec
jle
fnstcw
imul
test
pop
add
daa
mov
sub
stos
fbstp
inc
stos
fbstp
inc
divb
test
cmp
lods
imul
cmp
xchg
xchg
push
adc
mov
popa
xchg
sahf
xor
es
inc
adc
sub
std
je
shll
cmpsl
push
js
subl
call
mov
push
sub
sub
inc
adc
out
arpl
lea
decb
xor
test
mov
pop
sub
insb
scas
and
orl
cmp
dec
cmp
in
mov
cmp
je
pop
movsl
addr16
cltd
sti
sbb
mov
xlat
cmpsl
sbb
cltd
repz
jge
sbb
mov
mov
jge
pop
test
sarl
jge
outsl
xchg
inc
mov
pop
cmpsl
js
das
push
add
call
fmull
imul
mov
and
jecxz
push
or
or
cmpsl
add
push
xor
cwtl
adc
movb
mov
mov
outsb
into
push
pop
lret
adc
xor
mov
insl
in
testb
mov
stos
pop
nop
and
ss
das
push
and
and
cs
icebp
aaa
lock
mov
inc
add
and
pop
repnz
lods
jnp
xchg
popa
sub
mov
push
cwtl
dec
outsl
add
call
addb
mov
sbb
push
add
xor
lods
cmp
scas
bound
jp
inc
pop
xor
push
aaa
and
test
dec
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
call
dec
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
push
in
push
stos
fnstcw
pop
adc
xor
push
adc
outsl
punpckldq
arpl
leave
test
sahf
outsb
stos
pop
sbb
xchg
inc
inc
insl
add
call
pop
jecxz
je
lock
jnp
popa
stos
daa
test
inc
xchg
pop
and
nop
inc
in
mov
xchg
das
cmp
cmc
fs
inc
xchg
fdivrs
mov
lea
push
test
xor
repnz
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
rcll
call
jnp
xchg
mov
insl
lods
icebp
adc
out
pop
xchg
jns
aaa
lcall
cmpsl
in
cmp
mov
push
roll
gs
int3
je
test
jmp
adc
xor
lds
dec
enter
test
loope
cs
mov
cmp
sahf
mov
dec
enter
adc
test
mov
popa
xor
jbe
mov
test
les
dec
aad
sub
sarl
push
cmpsl
or
cmp
call
in
in
lock
add
jbe
jbe
push
in
add
and
sti
lods
xchg
in
outsb
movsl
outsb
mov
sbb
out
add
loopne
dec
jns
fcoml
and
in
and
mov
pushf
or
fwait
mov
push
aaa
dec
imul
sbb
inc
xor
mov
out
dec
out
lock
sti
int
pop
push
cld
mov
arpl
sub
push
xor
inc
out
das
jbe
lds
cmp
pop
stos
test
xchg
mov
sub
inc
xchg
or
add
call
dec
jecxz
lods
lcall
andl
jbe
jge
lret
imul
mov
and
inc
jno
fwait
test
popa
pop
jmp
fidivl
in
loope
shlb
sub
aad
aaa
and
xor
in
and
and
out
mov
ljmp
pop
sbb
dec
dec
jp
ss
int
xchg
xor
cmp
sub
aas
mov
daa
inc
ss
xchg
lret
pusha
clc
or
in
mov
sbb
call
jb
pop
je
les
and
les
and
les
and
les
and
les
and
les
and
sbb
or
das
mov
sbb
inc
mov
adc
stc
push
xorl
xor
adc
rcrl
repnz
inc
xor
loope
pop
mov
and
icebp
inc
pop
jae
mov
leave
loop
rolb
mov
cmp
sub
paddusb
pop
inc
rcl
into
jle
inc
lods
fildl
add
call
inc
xlat
fldt
ss
add
outsb
mov
xchg
mov
dec
push
pop
je
les
and
les
and
les
and
les
and
les
and
les
and
les
and
les
and
dec
xchg
lret
jae
fnstcw
xchg
push
fnstcw
movb
shl
subb
pop
lds
push
sub
outsb
popa
icebp
jl
mov
movsl
jle
push
push
xchg
test
jl
add
call
mov
hlt
mov
xlat
aas
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
icebp
jnp
out
lea
jbe
shlb
pand
pop
test
add
call
arpl
test
bound
test
enter
pop
pop
sub
rcll
or
je
ret
or
push
clc
sar
push
cmc
jbe
adcl
cld
les
les
mov
inc
mov
add
dec
aad
sub
sarl
insb
sbb
es
jle
pop
push
cmpsl
or
cmp
orb
push
push
popa
fidivrs
dec
jmp
inc
add
and
sti
mov
insl
arpl
in
testl
rcl
inc
add
call
lods
inc
cs
sti
jnp
inc
and
js
cli
mov
outsb
mov
sbb
out
pop
dec
sub
push
into
fwait
push
pop
ss
je
and
lods
sbb
cmp
dec
mov
dec
lahf
fidivrl
mov
xor
cltd
cmp
and
jne
jns
pushf
xor
mov
mov
lret
imul
pop
pop
mov
jp
jo
inc
sbbb
and
xchg
out
cmp
sbb
call
push
jmp
stos
jns
dec
js
das
pop
fisubl
mov
cli
popa
pusha
inc
enter
pop
mov
and
pop
in
sub
in
cld
loope
outsl
inc
fs
out
jg
inc
lods
pop
mov
cmp
xchg
xchg
mov
loope
sbb
cmp
mov
mov
stos
fwait
pop
aam
mov
les
and
les
and
les
and
les
and
les
and
sbb
call
fistpll
jp
int
movsb
add
and
scas
clc
jecxz
xor
rcrb
xchg
pop
mov
loope
data16
je
and
shll
call
mov
sbb
movsl
sbbb
leave
fnsave
mov
gs
sub
out
das
jg
lahf
mov
sub
das
xchg
imul
sub
jmp
adc
inc
sbb
xchg
or
dec
adc
jno
add
fnstcw
in
mov
in
xor
add
call
add
dec
aad
cmp
dec
mov
jae
dec
adc
push
test
dec
les
and
les
and
les
and
les
and
les
and
les
and
iret
rcl
dec
jo
fcomps
xor
mov
xor
ljmp
cli
mov
inc
jge
outsl
aas
xor
repnz
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jae
test
mov
dec
out
sub
cld
insb
and
jge
imul
test
pop
xor
inc
mov
mov
fidivrl
cmp
outsl
cmp
sub
add
call
sbb
stos
adc
outsb
scas
jo
cltd
lds
daa
outsb
mov
sbb
out
rol
negl
popa
mov
out
xchg
jle
pop
push
cmpsl
or
cmp
fadd
sub
adc
add
outsb
movsl
push
push
popa
fidivrs
dec
lcall
mov
fisubs
push
jbe
jp
pushf
and
notb
into
jp
testl
xor
out
testl
cmp
adc
dec
inc
and
js
cli
add
call
shlb
jnp
in
inc
andl
stc
add
adc
stc
cltd
in
xchg
dec
jns
or
xchg
pusha
out
push
sub
jle
jne
mov
jne
sarl
jge
outsl
xchg
mov
jns
mov
hlt
hlt
inc
repz
xor
xchg
and
push
sub
or
inc
test
sbb
adc
loope
mov
dec
adc
aam
pop
cmpsl
add
lret
cmp
jno
push
inc
das
rolb
or
or
leave
sarl
add
call
mov
lret
sbb
jp
mov
shll
push
mov
jb
lods
jle
adc
xchg
sub
ja
adc
adc
mov
jno
mov
xor
cmp
int3
sub
les
and
les
and
std
lock
mov
and
test
stc
jmp
int
sub
movsb
or
ljmp
aas
adc
fwait
fwait
pop
pop
push
out
add
call
sarb
mov
cmpsl
pop
adc
rcl
pusha
std
xchg
out
loop
xor
fucomip
sbb
mov
push
sbb
push
mov
aas
gs
mov
xchg
ret
sahf
and
in
fildll
out
adcl
loop
fnstcw
test
bnd
loope
or
lahf
lcall
xchg
push
add
inc
popf
fisubl
scas
dec
pop
push
cli
in
imul
xor
xchg
mov
cmpsb
cs
hlt
pusha
push
and
add
call
push
cmp
pop
dec
out
repnz
dec
mov
add
les
and
les
and
les
and
les
and
les
and
loope
add
adcb
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
fcmovu
call
jge
mov
xchg
xchg
je
std
leave
sbb
cmp
lahf
call
fisubrl
mov
pop
cmp
int
sub
ret
ja
pop
rorl
lcall
fsubrl
jnp
add
call
jmp
pop
call
push
inc
xorl
cmp
stos
adc
outsb
cwtl
pop
adc
mov
pop
inc
or
mov
push
jbe
jp
aad
jmp
adc
jp
testl
neg
add
push
sahf
imul
cmp
mov
dec
sbb
addr16
mov
dec
sbb
addr16
cmp
adcb
push
andb
adc
mov
nop
in
inc
xlat
fimuls
popa
add
call
mov
cld
andl
xchg
jns
inc
dec
sub
inc
push
dec
daa
xchg
push
leave
cmp
dec
popf
pop
inc
clc
or
ja
fstl
fildll
loop
jmp
lret
jge
mov
xor
loop
push
nop
mov
insl
rolb
mov
nop
and
int3
mov
pop
mov
jge
xor
movsb
bound
push
subl
inc
mov
bnd
sub
outsb
out
add
fsubrl
xchg
outsb
mov
call
or
jge
aas
mov
mov
in
fisubl
mov
aam
addr16
pop
pop
mov
addr16
arpl
scas
adcb
stc
pop
lods
je
popa
dec
shrl
ljmp
repnz
sbbl
loop
js
fidivrs
aam
and
sbb
imul
xor
nop
imul
push
xchg
mov
sbb
add
out
outsl
std
push
ja
sub
mov
mov
sbb
into
or
and
aam
add
pop
popf
sbb
call
aam
dec
jbe
cs
inc
pop
out
sub
orb
add
and
cmc
inc
mov
lret
cltd
subb
xchg
rcr
mov
icebp
inc
pop
mov
mulb
js
mov
shrl
or
out
cmp
xchg
lds
dec
xchg
dec
adc
fmul
outsb
cmp
xor
sahf
push
push
aaa
xchg
jbe
popf
fisubl
scas
inc
adc
dec
pushf
jg
inc
jp
jne
fistps
jecxz
mov
addl
mov
out
xchg
dec
cmp
jae
add
call
add
xor
cmp
int3
sub
les
and
les
and
les
and
les
and
les
and
out
cmpl
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
andl
imull
xor
shr
test
cmp
test
ffree
lds
push
sarb
sub
xor
sti
loop
loope
jno
mov
push
xor
repz
xor
insl
das
aaa
loopne
mov
loopne
push
dec
and
and
mov
add
call
cmp
mov
add
iret
pop
pop
mov
clc
test
cmp
push
jp
fprem1
pop
cmc
in
push
popf
aad
jmp
sbb
addr16
inc
add
xor
sahf
cmp
cli
adc
outsb
pop
scas
dec
adcl
sub
loopne
inc
pop
xchg
test
sbb
testl
cmc
and
mov
nop
push
dec
mov
pusha
push
filds
mov
pop
pop
adc
jg
stos
or
push
add
call
push
mov
test
cltd
dec
mov
or
inc
xor
fwait
in
mov
stc
icebp
pusha
pop
mov
mov
insl
jae
in
int
inc
ficomps
dec
push
xor
mov
in
xchg
and
pop
mov
insl
popa
mov
or
sub
or
cmpsl
jmp
mov
jl
xor
pop
mov
call
mov
clc
jg
jp
clc
pop
xlat
pop
push
cltd
rcrb
add
dec
jno
mov
mov
imul
add
call
push
aaa
scas
aas
gs
xor
int3
std
add
fwait
in
lods
cli
mov
jle
test
mov
cmp
jge
mov
push
fwait
jbe
adc
repnz
decb
rcrb
aaa
hlt
andl
cld
push
in
inc
inc
pop
outsl
cld
or
fimuls
xchg
mov
cmp
adc
test
add
mov
sub
pop
insl
cs
jge
inc
movsl
xchg
push
xchg
dec
xorb
mov
add
call
in
ds
push
or
mov
push
lret
sub
jl
cmpsl
test
mov
mov
mov
pop
sub
scas
outsl
out
out
pop
jnp
pop
sti
mov
vshufps
inc
movl
add
sahf
push
push
aaa
xchg
jbe
push
imul
mov
data16
xor
int3
call
test
xor
add
jmp
mov
out
daa
data16
leave
ret
test
shll
fidivs
test
add
call
dec
add
les
and
les
and
les
and
les
and
mov
cmp
imul
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
inc
cmc
loopne
jle
dec
fnstcw
imul
test
repz
into
ror
or
or
add
ffree
lds
push
ror
push
test
mov
insl
pop
xor
cmp
pop
sarb
jbe
test
dec
test
push
add
jmp
jno
mov
push
icebp
mov
fstpl
es
pop
mov
mov
pop
cltd
test
shll
add
call
mov
mov
dec
sbb
addr16
mov
or
pop
nop
lretw
inc
test
popa
cmp
sbb
popa
cmp
push
loop
scas
out
mov
cmpsb
jg
mov
ret
lret
dec
cmc
in
push
popf
aad
jmp
sub
mov
inc
das
dec
dec
lock
dec
rolb
shl
mov
lea
pop
pop
xor
roll
cs
loopne
dec
fwait
add
jecxz
insl
push
mov
inc
push
pop
cmpsl
adc
dec
and
add
call
mov
mov
pop
push
in
jle
icebp
jge
std
push
or
mull
js
ret
push
xchg
xor
sub
dec
popa
les
cmc
adc
and
inc
scas
sub
aaa
clc
dec
loopne
jnp
sar
or
cmpsb
mov
mov
loop
and
pop
jns
mov
mov
dec
jb
nop
popa
push
cld
imul
bound
jge
mov
pop
cmpl
sbb
pop
test
call
jnp
scas
inc
lods
pop
test
sub
xchg
fcoms
sbb
mov
xchg
lods
cwtl
stos
mov
out
aaa
fwait
mov
fsubl
std
lret
adc
pop
or
out
mov
sbb
int
imul
add
cmpsb
cmpl
and
add
xchg
out
adc
rcll
pushf
insl
and
mov
mov
mov
xchg
in
xor
push
xor
and
sbb
cmpsb
add
call
jno
mov
test
cmp
or
and
scas
outsl
out
out
pop
shlb
loop
dec
enter
or
mov
popa
fnstcw
in
mov
cmp
mov
mov
inc
cwtl
test
lret
and
mov
pop
jle
pop
jge
push
leave
adc
jg
mov
ret
or
inc
gs
xlat
push
test
dec
les
and
les
add
call
and
les
and
les
and
testb
jns
inc
shll
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
cmp
repnz
ror
es
movsl
enter
mov
jge
imul
test
jge
pop
ret
sbb
jp
adc
sub
mov
je
adc
push
xor
dec
cwtl
cmp
clc
jb
stc
xchg
push
ret
inc
cs
mov
and
and
test
dec
mov
sti
inc
mov
sti
inc
pop
jbe
test
dec
test
test
cmpsb
pop
cmpl
push
inc
sub
add
call
int
enter
arpl
cltd
mov
mov
cltd
mov
mov
push
jne
ljmp
or
fcompl
sahf
imul
sbb
add
dec
dec
lock
out
fimuls
cmp
out
push
xor
test
lods
push
inc
xchg
in
jbe
out
out
jb
lods
enter
cmp
movsl
mov
jnp
out
mov
shlb
xchg
pop
ds
inc
xchg
cmc
lcall
outsl
xchg
in
out
jecxz
add
call
jg
sub
fdiv
and
cmpsl
sub
pusha
or
scas
add
jno
fisttpl
test
mov
mov
jge
outsl
pop
adc
pop
sbb
push
cltd
repnz
das
bnd
pop
popf
insl
push
out
jne
and
pop
jns
mov
adc
mov
inc
insb
mov
dec
roll
xor
mov
and
int
pop
jg
ffreep
stc
in
cmpsl
leave
adc
inc
sbb
push
mov
mov
dec
aam
xor
cmc
push
nop
imul
lods
ljmp
call
jae
out
mov
pusha
push
mov
pop
lods
or
pop
pop
mov
test
icebp
lock
in
xchg
xchg
jnp
mov
jbe
pop
inc
dec
mov
out
or
sahf
push
mov
sub
jg
stos
insb
mov
jo
popf
outsl
adc
mov
mov
pop
cmp
int
test
les
pusha
fidivrl
ret
hlt
leave
scas
and
adc
adc
dec
int
dec
ret
and
cs
icebp
call
push
pop
mov
rolb
call
xor
mov
cmpb
cmp
pop
pop
cwtl
movsl
mov
addr16
cmp
pop
inc
ja
popf
in
inc
mov
gs
mov
lea
sub
cmp
and
data16
jg
inc
jp
jne
fcomip
imul
std
xchg
jle
pop
cltd
mov
fadds
jmp
mov
mov
inc
insb
test
loope
lret
jg
test
andl
int
pop
je
les
and
les
and
les
and
les
and
call
inc
mov
jne
ja
popa
lds
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pushf
dec
lock
movsl
stos
pushf
mov
xchg
sub
pushf
fnstcw
imul
call
out
test
bound
pop
arpl
lea
jle
sub
inc
or
int
insl
sbb
lea
mov
cmp
mov
pop
pop
pop
scas
add
outsb
sbb
mov
inc
cmpsl
lods
lods
xchg
xor
pushw
cld
jp
jns
pusha
test
sbb
pop
sarb
ja
and
pop
test
and
mov
loop
adc
in
or
dec
loopne
xlat
es
push
jg
xchg
outsb
jl
jno
in
ljmp
mov
mov
add
call
cmpsb
jg
mov
mov
enter
xchg
test
sbb
movsb
stos
pop
cmp
loop
out
xchg
das
mov
in
fndisi(8087
pop
aad
nop
fldt
fwait
cmp
cs
mov
add
sbb
je
jge
pop
pop
jne
jg
pop
int3
clc
xchg
adc
xchg
mov
mov
sarl
add
lods
mov
xchg
stc
cmp
aaa
out
movsl
insb
jle
jnp
xor
sti
test
inc
pop
repnz
push
inc
add
call
or
lds
jecxz
leave
push
pop
sbb
pop
xor
iret
rcrb
pusha
add
std
bound
ja
mov
add
xchg
repnz
add
push
and
jb
cmp
mov
lods
mov
cmc
cwtl
aas
xchg
push
xor
mov
and
fistpl
clc
andb
loope
jl
out
inc
sbb
push
loope
jo
sbb
scas
rcll
in
add
test
mov
cmp
iret
jp
lods
rcl
pop
xchg
imul
repz
add
call
leave
mov
pop
push
fcmovu
lods
dec
xchg
inc
std
call
jne
inc
mov
ret
imul
jno
pop
sbb
dec
xor
shrl
imul
mov
rcll
push
cmpsl
or
jp
into
add
and
aad
inc
push
xor
mov
lret
or
lock
out
mov
sbb
ljmp
xor
faddp
movsb
cltd
mov
or
pop
sbb
add
int3
test
bnd
arpl
xor
dec
push
and
bound
call
decb
cli
cmp
pop
cli
sahf
push
push
aaa
xchg
jbe
outsb
iret
jge
inc
aas
decl
lods
xchg
imul
mov
data16
jg
inc
jp
jne
filds
push
inc
dec
jne
rcrl
icebp
movsl
sti
xlat
call
pop
aaa
inc
cmpsb
pop
ljmp
xchg
sbb
sbb
dec
xchg
mov
add
les
and
les
and
les
and
lods
mov
xchg
dec
insb
incl
and
mov
cltd
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
test
push
xchg
imulb
fnstcw
imul
test
iret
push
and
std
stos
lea
call
fistps
testl
push
iret
jne
ret
sbb
jp
adc
sub
mov
nop
cmp
fcomps
push
loopne,pt
and
and
lret
in
enter
mov
cli
aam
pop
xchg
lret
in
enter
mov
dec
push
outsb
scas
outsb
sub
es
push
jg
push
xor
dec
or
sahf
mov
rcrl
stos
mov
ljmp
or
and
fldt
lods
lret
mov
dec
sbb
addr16
fcoms
add
call
inc
mov
push
push
mov
xor
xchg
in
outsb
movsl
push
dec
mov
pusha
push
fbstp
enter
call
lods
je
imul
movsl
mov
mov
cltd
inc
lds
jbe
mov
out
fidivrs
and
jbe
push
in
adc
pop
jns
loop,pt
lods
out
pop
cmp
xchg
pop
jb
aam
push
mov
scas
mov
inc
fstpl
mov
xor
cmpsb
sbb
sbb
iret
rcrb
leave
lods
add
call
adc
jg
jmp
das
add
arpl
mov
into
jge
lret
sub
icebp
push
shrl
add
xchg
push
add
je
lret
mov
push
push
andb
push
mov
and
pushf
sti
inc
lret
mov
ljmp
insb
out
stc
pop
aad
outsl
cs
push
jo
sbb
scas
es
repz
dec
pop
dec
das
dec
xor
stc
gs
insl
mov
mov
cmpsl
daa
test
ljmp
mov
push
dec
es
jne
bswap
shll
mov
xor
call
pop
out
or
fcmovu
lock
iret
adc
aaa
adc
repnz
cld
mov
loopne
pushf
ds
int3
arpl
pop
sbb
push
arpl
fstpl
inc
and
and
jnp
push
cmp
popa
inc
pop
xor
inc
jmp
mov
mov
jp
sub
nop
xchg
test
cmp
or
cwtl
pop
cmp
test
bnd
arpl
xor
dec
push
and
mov
add
cmpsl
jne
ja
popf
in
add
call
stc
movsl
sbb
pop
outsl
mov
cmp
inc
push
mov
jp
jne
fildll
xorl
pop
add
mov
fadds
leave
adc
jg
mov
dec
xchg
imul
cmpl
dec
les
and
les
and
les
and
les
and
repnz
mov
cmp
or
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
adc
aad
dec
inc
gs
fnstcw
imul
test
and
jmp
bound
or
dec
sbb
je
jnp
xlat
lret
mov
xchg
sub
call
popf
mov
cs
sbb
jp
adc
dec
sub
dec
add
nop
adc
repz
mov
nop
cmp
fsubrs
cmp
loope
loop
repz
popf
cltd
test
cmp
lret
in
enter
mov
dec
push
outsb
scas
outsb
inc
add
fucom
outsb
adc
mov
fcomps
jge
and
fstps
popa
cmp
imul
arpl
daa
addr16
cmp
addb
mov
imul
pop
test
scas
jae
add
call
pop
push
ds
xlat
sbbb
cwtl
cmpsb
dec
int
pop
nop
push
loope
cli
test
ret
out
loope
lds
or
xorl
sbb
lods
decl
lret
loope
sbbl
lret
lret
jl
enter
push
addl
inc
bound
call
xchg
push
lahf
gs
gs
out
push
leave
popa
mov
pop
mov
aas
lds
pop
shrl
sbb
sub
mov
add
call
jge
lret
cltd
stc
gs
dec
inc
and
adc
push
scas
inc
ret
mov
rol
pop
pop
ja
add
push
mov
cmc
pushl
pushf
sti
inc
lret
mov
ljmp
mov
aad
outsl
test
int
pop
test
pop
loop
movsb
xlat
sbb
dec
arpl
sbb
ret
dec
sarb
ss
jp
mov
or
rcrb
xor
insl
adc
cmp
mov
adc
rcll
jge
scas
add
sub
call
cmp
insb
jnp
and
xor
aaa
imul
jecxz
into
xchg
int3
fisubrs
jbe
mov
subb
nop
mov
xorb
test
scas
dec
push
stc
dec
icebp
jmp
int
dec
ret
and
cs
icebp
test
cmp
or
out
fistps
aad
test
bnd
mov
rolb
loop
cltd
and
mov
aam
pushl
movsl
les
cli
sahf
push
push
aaa
xchg
jbe
outsb
iret
jge
inc
aas
decl
pop
nop
or
add
call
adc
dec
pushf
xor
xchg
mov
lcall
mov
cmpsb
add
add
jmp
mov
out
daa
data16
leave
ret
popf
mov
mov
inc
insb
movsl
hlt
ret
ret
fldl
add
les
and
les
and
les
and
pop
sub
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
inc
fisttpl
mov
mov
cmp
loope
in
push
fnstcw
imul
test
adc
inc
les
loope
fisubl
cmp
mov
xor
add
out
inc
jno
loope
add
into
stc
push
push
inc
cmpsb
loopne
rol
add
call
les
jmp
cmpsb
sub
dec
fcmovb
ss
xor
lds
mulb
addr16
mulb
jo
lea
test
jno
inc
repz
jne
jno
inc
repz
mov
fcomps
jge
add
roll
pop
jae
daa
pop
adc
sti
scas
daa
insl
cmp
cmpb
stos
adc
cmp
pop
js
cli
mov
cwtl
cmc
push
pop
loop
fndisi(8087
xchg
out
arpl
cs
push
mov
cmp
inc
test
add
call
mov
popf
lods
es
jae
xchg
movsb
stos
rcr
pop
addr16
add
mov
jno
ljmp
push
fs
fiadds
repz
xchg
das
xchg
nop
dec
lods
sbb
xor
xor
insb
andb
mov
adc
cmp
dec
mov
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
mov
cmp
add
fcompl
sub
mov
into
jge
lret
cltd
stc
gs
dec
inc
and
adc
call
xor
inc
ret
std
mov
adc
in
cli
and
inc
pop
jg
ffreep
aaa
pushf
sti
inc
lret
mov
ljmp
notl
push
add
addb
ret
xor
ss
pop
push
xchg
iret
inc
je
push
shrl
popa
stos
mov
push
test
inc
incl
cmpsl
repz
push
inc
jno
or
repnz
sarb
inc
mov
roll
mov
aaa
stc
adc
outsb
aam
stos
cmp
ljmp
call
fs
mov
xchg
int3
fisubrs
in
mov
add
loope
jp
adc
lcall
inc
in
mov
pop
push
aaa
mov
mov
push
call
push
pop
mov
push
and
out
fistps
cmp
jle
push
dec
adc
mov
rolb
loop
sbb
sub
xchg
dec
adc
xchg
sub
inc
popf
in
inc
ja
inc
pusha
inc
jle
mov
xchg
push
push
dec
push
sub
in
mov
pop
jns
and
dec
insb
xchg
sub
xlat
add
call
adc
imul
jmp
mov
out
mov
fadds
scas
sti
shl
std
shlb
dec
cmp
add
mov
pop
je
les
and
les
and
les
and
fs
pop
cmp
dec
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cld
lock
push
sar
popa
movsl
sub
das
or
dec
fnstcw
imul
test
imul
test
orb
ljmp
sub
outsb
jecxz
dec
mov
jle
xchg
push
loop
cmp
mov
add
out
inc
jno
xor
out
sub
loop
inc
cmpsb
loopne
mov
add
cltd
dec
jp
aas
add
call
loopne
pop
nop
lods
pop
or
insl
xchg
push
lret
cltd
stc
push
xchg
in
leave
lret
ja
sub
dec
lea
push
bound
jno
inc
repz
mov
fcomps
jge
fwait
adc
ja
mov
test
dec
mov
push
icebp
fs
dec
add
cmp
pop
js
cli
mov
sahf
cli
jno
lock
dec
jae
into
jmp
mov
xchg
sbb
xchg
or
add
sub
out
add
mov
into
scas
sbb
dec
das
cwtl
push
add
sbb
add
call
imul
and
mov
data16
xor
dec
jbe
lcall
pop
lahf
sub
stos
dec
jge
data16
fisttpll
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
mov
cmp
sub
and
pop
pop
sub
mov
into
jge
lret
jg
imul
sbb
and
mov
cmc
cwtl
aas
xchg
push
xor
mov
and
add
call
int
pop
jg
ffreep
xchg
add
and
ja
outsl
je
cmpsb
shl
cmpsb
inc
fdivrl
ret
in
insb
arpl
into
push
mov
out
sbb
sbb
pop
jmp
jno
push
rorl
cmp
dec
fwait
clc
dec
mov
loope
dec
cmc
fldenv
divl
icebp
dec
sahf
jns
scas
xchg
xor
inc
jl
pop
sbb
ljmp
pop
sbb
push
arpl
fstpl
inc
and
add
call
fs
dec
enter
in
and
scas
dec
push
stc
dec
icebp
lock
out
mov
hlt
mov
jno
mov
mov
xchg
push
call
push
pop
mov
scas
outsl
out
out
pop
jo
int3
jle
push
dec
adc
dec
shrb
jmp
jne
xchg
fidivl
mov
ja
popf
in
inc
mov
dec
mov
stos
rorl
lock
mov
imul
xor
xchg
mov
scas
inc
lret
lods
xorl
xorl
sbb
dec
add
call
cmp
bswap
add
jmp
mov
out
movsl
sti
xlat
call
fidivs
add
sti
mov
les
and
les
and
les
and
pop
lea
add
incl
and
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
hlt
xchg
loopne
fdivr
xchg
data16
dec
in
sub
or
fnstcw
imul
test
add
add
daa
rol
clc
out
les
out
int3
push
sbb
fs
add
scas
adc
ds
jbe
jl
inc
push
fbld
mov
dec
add
out
inc
jno
xor
out
sub
aaa
ss
sbb
les
jmp
cmpsb
dec
jp
aas
test
test
cltd
stc
push
xchg
in
add
call
lret
addr16
mulb
jl
stc
ret
sub
jne
jno
inc
repz
xchg
xchg
adc
bnd
and
sub
int
inc
sbb
mov
std
and
test
imul
adc
in
inc
sub
xchg
sub
mov
hlt
and
mov
and
mov
loope
lods
adc
mov
and
arpl
dec
and
je
add
scas
pop
jns
dec
mov
iret
sarb
call
ja
mov
mov
pop
xchg
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
xchg
imul
pushf
imul
rcrl
dec
sbb
sub
adc
clc
pop
and
cld
inc
sub
push
or
push
push
andb
push
mov
and
pop
xchg
xor
xchg
cmp
lcall
iret
push
add
call
sub
or
push
gs
dec
mov
nop
jmp
add
bnd
outsl
or
cmp
and
decb
rcrb
jnp
xor
test
dec
fwait
clc
sub
movsb
or
xchg
aam
mov
push
add
mov
xor
aaa
imul
sbb
jp
mov
scas
inc
or
and
into
jnp
sti
cmp
sub
and
scas
dec
push
stc
dec
icebp
add
call
mov
mov
mov
test
cmp
or
xor
imulb
jne
jo
int3
jle
push
dec
adc
mov
rolb
loop
push
rolb
sbbb
cmp
pop
xchg
cmp
cmp
aas
decl
inc
fidivl
pop
or
xchg
lods
xchg
imul
ficompl
arpl
lahf
popf
pop
dec
insb
xchg
sub
xlat
stos
adc
test
xor
add
jmp
mov
out
in
repnz
sub
add
call
push
and
adcl
xchg
test
dec
les
and
les
and
les
and
mov
xor
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
test
push
xchg
out
mov
jge
imul
test
aaa
cltd
lcall
pop
lret
mov
jb
loop
add
insl
push
icebp
test
ja
fs
add
pop
cmp
mov
xor
inc
push
fbld
mov
dec
loope
add
into
stc
push
push
inc
cmpsb
loopne
push
adc
sbb
dec
jp
adc
sub
dec
fcmovb
ss
cmp
and
dec
dec
lea
push
bound
add
call
test
test
mov
insl
bnd
and
xor
push
aas
sarl
into
sub
dec
xchg
out
jae
stos
add
jmp
sbb
cmp
xlat
or
sbb
dec
negl
push
adc
mov
push
jg
jmp
sub
mov
aaa
mov
idiv
es
es
fucom
shll
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
add
call
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
sahf
gs
lea
inc
push
loopne,pn
stos
or
mov
mov
xor
push
shrl
add
xchg
push
add
je
lret
mov
push
push
andb
push
movsl
addr16
lret
stos
push
fisttps
mov
xor
imul
enter
je
add
call
data16
mov
pop
push
aam
shl
mov
leave
subb
int3
test
inc
out
scas
sbb
push
jns
test
adcb
lcall
sub
movsb
or
fcomi
pushf
mov
leave
aaa
stc
adc
jo
fs
mov
xchg
cltd
movsl
negl
inc
into
xchg
int3
fisubrs
rcr
aas
adc
pop
push
mov
lret
or
mov
in
pop
pushf
fucomp
push
jmp
int
dec
ret
dec
clc
xchg
mov
test
add
call
fsubrl
pcmpeqd
xor
mov
pop
adc
add
mov
add
pusha
shrb
pop
xchg
sub
xor
mov
pop
pop
scas
sbb
adc
cli
sahf
push
push
aaa
xchg
jbe
popf
fisubl
scas
mov
push
sub
mov
data16
pop
dec
insb
xchg
sub
scas
lods
adc
adc
test
sub
and
adc
xor
sahf
pusha
xorb
test
cs
pop
je
les
and
call
pop
je
les
and
insb
popf
loopne
pop
jbe
loope
adc
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lds
outsl
jns
pmulhw
stos
sub
push
add
call
ja
xchg
fnstcw
imul
test
pop
mulb
mov
or
loope
fisttpll
pop
sbbl
xor
rep
mov
jb
fs
xor
stc
dec
mov
stos
cmp
addl
rclb
ja
pop
mov
mov
fwait
testl
push
push
inc
cmpsb
loopne
mov
add
cltd
dec
jp
aas
test
test
nop
adc
repz
mov
and
loopne
negl
dec
imulb
inc
rorl
test
add
call
add
jmp
or
nop
jl
jmp
shl
nop
wrmsr
inc
daa
test
jle
bound
test
pop
inc
fisttpll
into
scas
add
lods
and
js
mov
out
or
aas
inc
mov
aad
dec
mov
shl
xchg
fcmove
mov
push
pop
mov
lahf
imul
stos
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
add
call
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
test
jns
and
pop
sahf
gs
lea
inc
push
cs
sbb
or
or
push
outsb
movsl
inc
jle
adc
fldcw
xor
push
shrl
and
adc
cmp
and
push
call
adc
movsl
cmp
and
xchg
add
lods
fmuls
pop
gs
bound
fistps
adc
xchg
sti
xor
mov
into
jp
lahf
ljmp
out
mov
stos
mov
call
xor
stos
cli
cmpsl
shlb
ret
mov
push
xchg
mov
sbb
add
in
xchg
adc
and
jecxz
aas
sub
out
fisttpll
incb
jmp
sbb
mov
push
cmp
lret
ja
fstpl
inc
and
and
js
push
gs
adc
mov
rclb
mov
sbb
ljmp
and
cs
icebp
test
cmp
or
cwtl
pop
cmp
adc
add
call
loop
add
pushf
lret
mov
shrb
scas
ret
lahf
inc
imul
xor
add
xchg
ds
sahf
push
push
aaa
xchg
jbe
popa
fnstcw
in
mov
dec
push
sub
lea
mov
xor
xchg
mov
jg
inc
jp
jne
filds
mov
sub
dec
inc
cmpsb
xchg
testb
cmp
mov
xor
pop
je
les
and
les
and
jl
mov
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
jae
adc
enter
cmp
out
test
ss
jge
imul
test
fucom
mov
add
call
mov
ss
addl
lods
nop
into
inc
sub
sbb
cmpsl
sbbl
std
out
int3
push
sbb
fs
add
jecxz
dec
mov
dec
mov
or
push
fbld
mov
dec
add
out
inc
jno
xor
out
sub
aaa
ss
sbb
xor
xlat
cmp
nop
adc
repz
mov
cmp
je
and
stc
xchg
test
push
add
jmp
mov
pop
je
jle
add
call
add
sub
push
pop
bound
mov
adc
in
pop
add
out
enter
add
imul
insb
mov
dec
popf
int
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
rolb
call
xchg
jecxz
lods
test
jns
and
pop
andl
sbb
add
push
cs
into
jge
lret
cltd
stc
gs
dec
out
in
pop
mov
mov
cmpsb
mov
cmp
mov
dec
cs
insl
aad
adc
hlt
lcall
stos
mov
fnstcw
mov
dec
aam
xor
cmc
push
nop
pop
test
sub
jg
out
out
fwait
jbe
adc
repnz
add
iret
inc
fistps
xchg
in
jmp
push
add
call
ja
cmp
adc
cmp
movsl
and
xchg
adc
divl
icebp
mov
dec
lods
xor
aaa
imul
mov
cmp
jp
lock
adc
lret
mov
adcl
cmp
and
leave
scas
and
adc
adc
enter
out
mov
hlt
mov
jno
mov
mov
cs
icebp
stos
mov
push
mov
or
pop
sbb
jno
inc
cmp
push
es
addb
pop
sti
mov
add
call
call
lahf
inc
imul
sub
push
pop
fistpll
lcall
sbb
les
dec
mov
stc
movsl
sbb
pop
outsl
mov
cmp
jge
and
mov
push
ficomps
scas
inc
lret
lods
xorl
mov
leave
mov
jns
dec
mov
sbb
pop
je
les
and
les
and
fsub
clc
nop
adc
imul
lock
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
hlt
inc
fidivs
out
jge
sub
sbb
loope
shr
test
imul
test
and
jge
ljmp
cmp
pop
add
call
int
dec
lret
push
jb
loop
add
insl
push
pushf
mov
push
sbb
fs
add
inc
push
je
mov
or
dec
sbb
je
jnp
xlat
lret
mov
cltd
xchg
ljmp
lods
shrb
insl
sbb
lea
jmp
add
mov
dec
pop
sbb
xor
jl
dec
sub
xchg
bsf
bound
scas
xor
clc
in
mov
xor
in
cld
push
xor
xchg
jmp
call
xchg
ljmp
sbb
loop
push
push
je
aad
pusha
cmpsb
cmp
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
inc
outsl
pop
cli
or
add
call
sbb
pusha
xor
arpl
mov
into
jge
lret
das
mov
inc
jne
aad
push
loop
xchg
andb
stos
sub
xchg
pop
xchg
addr16
stos
push
dec
push
adc
mov
jecxz
inc
mov
inc
sbb
push
loope
jo
sbb
scas
es
xor
cmc
push
nop
push
xor
addr16
or
cld
or
pop
icebp
push
fwait
jbe
adc
repnz
decb
rcrb
push
lds
push
test
dec
fwait
clc
sub
movsb
or
ljmp
xchg
add
add
pushw
lods
jmp
stc
adc
mov
dec
lods
xor
aaa
imul
jecxz
into
xchg
int3
fisubrs
rcr
aas
mov
loope
jp
or
or
test
or
int
dec
ret
scas
out
xchg
bound
push
mov
test
cmp
or
xor
cs
or
pop
and
aad
test
bnd
xchg
pop
sti
mov
mov
rolb
loop
push
rolb
sbbb
call
mov
pop
pop
pop
divb
shrl
push
push
aaa
xchg
jbe
popf
fisubl
scas
inc
add
cmp
sub
jg
mov
data16
xor
xchg
mov
and
data16
ja
and
mov
pop
test
dec
les
and
les
and
sub
shll
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
dec
pop
push
add
mov
mov
sbb
mov
xchg
xchg
je
fnstcw
imul
test
add
xchg
loope
inc
jecxz
xchg
adc
adc
xlat
cmp
sub
sbb
cmpsl
pop
aas
lret
inc
xchg
pop
push
nop
jb
add
call
xor
rep
mov
jb
fs
sbb
fs
add
arpl
ret
cmp
mov
add
out
inc
jno
loope
add
into
pop
insl
sbb
lea
mov
cmp
mov
jns
xlat
sbb
xor
jl
dec
sub
mov
add
push
or
or
mov
lahf
dec
lea
sbb
cmpl
xor
pop
lahf
mov
mov
out
lods
sbb
stos
shlb
jecxz
lods
add
call
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
inc
outsl
pop
cli
or
add
pop
cmp
mov
clc
data16
add
call
jp
insl
mov
dec
mov
cmp
dec
fimull
out
stos
or
or
cmpsb
xchg
repz
inc
pop
jg
ffreep
lret
dec
jg
out
aam
int
dec
mov
push
inc
loope
jo
sbb
scas
es
repz
dec
pop
dec
das
test
mov
cmp
xor
fnstenv
in
decb
rcrb
pusha
mov
aaa
stos
or
out
dec
sub
movsb
or
fcomi
pushf
mov
leave
aaa
stc
adc
xor
inc
add
call
jmp
sbb
sub
arpl
lret
ja
fstl
es
xor
mov
lret
or
in
stc
enter
inc
lock
out
mov
sbb
ljmp
and
cs
icebp
stos
mov
push
mov
in
or
or
pop
and
aad
test
bnd
cmp
jle
push
dec
adc
mov
rolb
loop
adc
dec
jmp
sbb
mov
pop
pop
jnp
xchg
sub
add
call
push
aaa
xchg
jbe
mov
dec
mov
and
nop
or
push
add
dec
sub
inc
push
and
sbb
cmp
mov
pop
je
les
and
les
and
outsl
jecxz
xor
and
and
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jp
orb
mov
int3
in
nop/reserved
insl
lods
icebp
fnstcw
imul
test
mov
imul
fcmovbe
xor
fimuls
lock
das
ror
inc
sub
sbb
cmpsl
sbbl
std
out
int3
push
rep
mov
add
call
sub
adc
fs
dec
sbb
insl
fsubrs
mov
loope
add
into
popf
push
iret
jne
rol
les
jmp
cmpsb
cmp
out
mov
adcl
mov
xchg
push
or
mov
lock
inc
and
adc
lcall
insb
lods
sbb
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
rolb
call
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
test
jns
and
pop
push
xchg
push
fisubrs
cmp
ss
mov
push
adc
dec
push
mov
arpl
pop
out
ja
in
adc
add
call
push
push
andb
push
mov
and
push
shlb
popa
pop
cmp
out
stc
pop
aad
outsl
cs
adc
mov
pop
test
sub
xchg
fcoms
repz
imul
cli
cmpsl
shlb
ret
mov
pusha
mov
or
jge
add
in
xchg
adc
divl
icebp
scas
sub
in
fstps
jl
pop
sbb
ljmp
pop
sbb
push
arpl
add
call
fstpl
inc
and
and
jnp
push
cmp
lret
or
lds
sahf
stc
sub
xor
enter
out
mov
jmp
int
dec
ret
or
lret
sub
xchg
push
xor
push
lds
xchg
jecxz
shlb
cwtl
pop
cmp
xchg
mov
adc
addb
pop
sti
mov
pop
xchg
sub
xor
push
rolb
sbbb
cmp
pop
adc
jno
add
sahf
push
push
aaa
xchg
jbe
insb
adc
mov
add
call
cli
test
fidivl
pop
or
mov
add
in
cld
pop
sub
mov
je
les
and
les
and
mov
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cld
lock
push
sar
inc
int3
mov
in
add
mov
movsb
cli
enter
adc
cmp
cld
loope
add
shlb
iret
das
addr16
das
shrb
aam
push
inc
xchg
push
rcr
jge
xchg
cmp
push
sbb
fs
add
ret
sub
cmpsl
add
call
adc
fistpl
cltd
xchg
ljmp
cld
or
int
scas
or
lret
out
inc
pop
push
push
leave
mov
cmp
xchg
mov
ret
cld
and
xlat
daa
hlt
sbb
mov
aaa
adc
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
add
call
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
fidivs
insl
dec
dec
das
inc
inc
fsubs
inc
jl
jns
lcall
jge
push
adc
cmp
push
add
je
lret
mov
inc
pop
add
or
adc
sub
lock
pushl
pushf
add
call
inc
lret
mov
ljmp
insb
out
stc
pop
aad
outsl
cs
inc
xor
cmc
push
nop
imul
lods
ljmp
out
add
mov
inc
push
movsb
imul
cli
xchg
in
jmp
push
je
popf
cmp
adc
push
stos
movsb
or
xchg
adc
divl
icebp
mov
dec
lods
xor
aaa
imul
jecxz
into
xchg
int3
fisubrs
rcr
aas
jl
jnp
sti
cmp
jnp
push
cmp
call
aam
or
getsec
sub
or
cmp
fldl
jnp
inc
in
dec
int
dec
ret
hlt
mov
jno
mov
mov
and
loop
orl
mov
xchg
mov
or
pop
sbb
inc
rol
movsl
lods
aas
es
addb
pop
cmpb
cmp
shlb
loop
out
call
sub
mov
pop
pop
mov
xor
aaa
xchg
jbe
cli
sahf
push
push
aaa
xchg
jbe
mov
gs
mov
lea
push
pop
nop
or
call
insl
pop
aam
std
sub
je
les
and
les
and
testb
pop
jle
lock
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
shrb
sbb
in
push
out
mov
movsb
rcrb
push
cmc
push
rclb
jbe
into
icebp
sarb
gs
iret
dec
push
gs
or
inc
stos
xchg
fwait
mov
lret
push
jb
loop
add
insl
push
stos
mov
jb
fs
xor
stc
dec
mov
rcrb
xor
pop
push
pop
sbb
add
call
imulb
mov
je
out
es
repnz
add
push
add
out
or
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
add
call
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
xchg
xchg
push
lods
cmp
jnp
adc
mov
ljmp
mov
mov
stc
xchg
outsl
jne
sbb
js
xchg
push
mov
loop
imul
rol
pop
pop
ja
add
in
jo
pushf
sti
inc
lret
mov
ljmp
pop
loope
mov
mov
add
call
cmp
rcll
in
add
pop
sub
mov
hlt
mov
jg
out
out
fwait
jbe
adc
repnz
decb
rcrb
push
lds
push
test
dec
fwait
clc
sub
movsb
or
jbe
fsub
push
fldl
adc
out
mov
ljmp
jecxz
into
xchg
int3
fisubrs
mov
mov
packsswb
push
popf
sahf
pushf
adc
pop
push
mov
outsb
getsec
sub
or
cmp
add
call
enter
inc
jmp
int
dec
ret
hlt
mov
jno
mov
mov
and
aas
mov
sahf
dec
test
cmp
or
leave
push
pop
mov
int3
xor
xchg
jle
dec
add
int3
test
bnd
cmpsb
out
into
lcall
pop
dec
loop
adc
dec
jmp
sbb
pop
pushl
pushl
movsl
les
pop
divb
shrl
inc
popf
in
inc
movsl
es
inc
stc
dec
inc
push
push
imul
out
loope
jne
or
les
and
call
pop
je
les
and
fistps
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
inc
xchg
loope
cmc
jp
mov
dec
dec
scas
sub
ds
aam
cmc
bound
and
shl
inc
or
push
xor
cmc
mov
cltd
push
mov
push
cld
adc
ret
push
mov
mov
xchg
stos
loopne
into
sbbl
fcoms
mov
jb
fs
push
adc
adc
xchg
sub
loopne
fwait
add
sub
and
xchg
mov
loopne
add
call
int
mov
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
add
call
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
push
cmp
bound
cmp
mov
and
xchg
xchg
mov
mov
mov
xchg
jecxz
lods
stos
shlb
jecxz
lods
dec
add
and
pop
cld
inc
sub
push
cmp
ret
lods
mov
pop
out
int
pop
jg
ffreep
lret
dec
jg
out
aam
inc
sbb
push
mov
mov
dec
rcll
in
add
pop
sub
mov
add
call
mov
jge
mov
push
fwait
jbe
adc
repnz
inc
out
scas
sbb
push
cmp
shrl
jmp
test
and
enter
pushw
lods
jmp
movl
mov
cmp
ljmp
cwtl
push
leave
pop
es
mov
scas
inc
or
and
dec
adc
pop
push
mov
dec
enter
in
xor
xchg
int3
push
lock
out
mov
sbb
ljmp
call
cs
xchg
mov
sub
stos
mov
push
xor
push
lds
xchg
and
roll
int3
mov
jb
outsl
bound
int3
jle
push
dec
adc
mov
jecxz
ret
lahf
inc
imul
sbb
add
mov
mov
ja
movsl
les
inc
ja
popf
in
inc
popa
fnstcw
in
mov
nop
push
sbb
pop
je
les
and
les
and
lods
dec
xchg
cld
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
inc
rcr
jecxz
dec
xchg
pushf
xchg
push
inc
xchg
or
cmp
mov
inc
xchg
loopne
jge
fcomip
leave
sub
mov
aaa
cmpsb
or
add
shlb
lcall
dec
daa
mov
sbb
cltd
aad
int3
sub
dec
js
popf
dec
aas
mov
mov
les
adcl
daa
mov
mov
jle
stc
std
push
imul
or
mov
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
add
call
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
call
push
mov
shl
ret
mov
loop
pop
test
sub
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
gs
sub
inc
add
jno
pop
movsb
push
mov
inc
ret
lods
mov
pop
out
int
pop
jg
ffreep
popa
pop
cmp
out
mov
outsb
lods
loope
stos
loope
jo
sbb
scas
es
repz
dec
pop
dec
das
test
mov
cmp
mov
leave
subb
int3
test
add
call
mov
cli
fdivrl
test
adcb
lcall
xchg
loope
mov
or
or
dec
subb
fstps
stos
cmp
test
adc
jecxz
into
xchg
int3
fisubrs
sbb
push
arpl
fst
jno
ret
pop
int3
mov
loope
jp
add
cmp
and
xor
xchg
repnz
stc
sub
xor
out
inc
jne
loopne
sti
and
outsl
push
insb
sub
xor
dec
jno
mov
mov
xchg
add
call
push
bound
lret
cli
jecxz
shlb
cwtl
pop
cmp
pop
and
aad
test
bnd
int3
shrb
push
into
repnz
mov
rolb
loop
adc
dec
jmp
sbb
outsl
jae
or
mov
pop
pop
pushfw
ss
shll
sub
pop
loop
outsl
gs
lods
sub
lret
test
dec
les
and
cmc
adc
pop
sti
jge
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jae
test
mov
dec
pop
xchg
ret
pop
or
call
adc
shr
cmpsb
scas
mov
xor
je
push
clc
xor
xchg
adc
jp
jae
call
imul
les
jecxz
in
cmp
popa
xor
jbe
icebp
popa
rcrl
inc
orb
pop
js
stos
xchg
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
add
call
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
xchg
shll
jae
xchg
jecxz
lods
stos
shlb
add
call
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
outsl
sti
ss
jg
or
ret
push
xor
mov
and
fistpl
clc
andb
loope
jl
out
stc
pop
aad
outsl
cs
push
jo
sbb
scas
es
in
lods
cli
mov
jle
lods
sub
jg
out
out
mov
stos
mov
sub
mov
popa
rcrb
imul
push
xchg
mov
add
call
jge
add
in
xchg
adc
divl
icebp
mov
addl
xchg
push
mov
mov
movsl
divl
mov
pop
sbb
push
arpl
fnstsw
in
aad
aam
mov
mov
dec
enter
in
xor
xchg
and
adc
adc
enter
out
mov
jmp
int
dec
ret
hlt
mov
jno
mov
mov
and
loop
orl
cmp
or
xor
add
call
or
pop
and
aad
test
bnd
cmp
jle
push
dec
adc
pusha
shrb
dec
shrb
push
mov
ret
or
inc
inc
jno
add
pop
or
testl
pop
jnp
cmp
in
cltd
push
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cld
lock
push
sar
shlb
icebp
ds
push
xchg
mov
call
mov
jmp
sbb
fs
lcall
clc
sub
sub
mov
xchg
xor
jb
mov
cmc
sub
in
das
rorb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
add
call
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
add
call
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
sahf
cmp
mov
in
jbe
mov
xor
mov
and
pushf
sti
inc
lret
mov
ljmp
mov
aad
outsl
cs
adc
mov
pop
test
sub
jg
out
out
push
idivb
std
mov
popa
rcrb
imul
cmp
dec
fwait
clc
or
icebp
sbb
aad
jno
ljmp
or
add
call
rcr
shrb
in
fstps
jl
pop
sbb
sti
push
push
cmp
cmp
jp
sbb
push
arpl
fucomp
stos
pop
test
adc
lret
mov
adcl
push
aam
or
getsec
sti
gs
adc
mov
rclb
mov
cli
out
inc
jne
loopne
sti
cmp
mov
inc
std
shll
out
cs
or
leave
push
pop
mov
daa
shlb
cwtl
pop
cmp
rol
mov
add
call
out
out
pop
std
cli
mov
dec
add
pusha
shrb
scas
ret
lahf
inc
imul
push
test
addb
and
push
mov
cmpsb
into
test
dec
les
and
popw
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xchg
int
mov
arpl
pop
xchg
mov
out
lock
out
mov
add
call
pop
mov
data16
out
dec
sbb
xchg
sti
add
jg
or
jl
stos
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
rolb
call
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
add
call
shlb
jecxz
lods
inc
mov
cwtl
fisubrl
pop
xor
add
push
mov
cmc
pushl
pushf
sti
inc
lret
mov
ljmp
mov
mov
pop
test
pushf
cmc
push
nop
push
xor
addr16
or
ljmp
out
fwait
jbe
adc
repnz
decb
rcrb
jnp
xor
test
dec
fwait
clc
sub
movsb
or
ljmp
divl
icebp
xchg
sbb
aaa
lret
aam
stos
cmp
add
call
mov
mov
add
push
or
push
leave
pop
es
mov
test
pop
sahf
rolb
and
jnp
push
cmp
sub
xor
xchg
in
pop
pushf
fucomp
push
mov
fwait
in
pop
dec
add
sub
test
shll
sbb
scas
shll
int
and
loop
orl
mov
xchg
mov
or
pop
sbb
jecxz
shlb
cwtl
pop
cmp
cmp
enter
adc
addb
sarl
add
call
and
ret
lahf
inc
imul
pop
xlat
or
jbe
fdivrs
scas
popa
push
addb
and
cmp
jne
stos
mov
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
clc
aam
mov
outsb
stc
cmpsb
test
mov
out
add
jae
xchg
jecxz
add
call
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
or
iret
fs
fsubs
fadds
add
call
add
mov
inc
pop
jg
ffreep
aaa
pushf
sti
inc
lret
mov
ljmp
notl
jo
sbb
scas
rcll
in
add
test
mov
cmp
nop
pop
lods
rorl
jbe
adc
repnz
decb
rcrb
xchg
sbb
mov
or
out
dec
sub
movsb
or
mov
ret
jecxz
push
push
out
fisttpll
adc
add
sti
push
jmp
ljmp
add
call
push
leave
pop
es
mov
and
dec
aam
scas
dec
cmp
loope
jp
pop
sub
xor
xchg
stc
enter
inc
cli
out
inc
jne
loopne
sti
and
outsl
push
insb
sub
xor
dec
jno
mov
mov
cltd
cmp
imul
push
mov
in
or
push
and
mov
pop
adc
add
pushf
lret
mov
cmpb
cmp
shlb
loop
lahf
mov
bound
call
loope
pop
je
les
and
or
xchg
sbb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
aad
jno
jne
sbb
insb
sbb
or
pop
mov
push
lock
in
pop
cmc
sahf
mov
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
add
call
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
gs
sub
inc
add
incb
mov
inc
pop
jg
ffreep
stc
in
cmpsl
leave
add
call
inc
cmp
int3
inc
sbb
push
loope
jo
sbb
scas
es
xor
mov
test
mov
cmp
mov
imul
cli
in
decb
rcrb
test
jbe
and
or
jmp
int
sub
movsb
or
jbe
fdiv
mov
lods
xchg
jecxz
sbb
and
xchg
push
insl
jmp
push
mov
ljmp
mov
int3
arpl
sbb
inc
into
xchg
int3
fisubrs
mov
mov
shll
add
call
ret
pop
int3
mov
loope
jp
add
cmp
and
call
stos
scas
lahf
aas
push
lcall
push
adc
jnp
inc
in
lods
fwait
in
pop
dec
add
sub
test
fdivl
mov
pop
jg
inc
inc
shlb
outsb
lahf
mov
in
or
pop
sbb
and
jle
dec
imulb
jne
jo
int3
jle
push
dec
adc
pop
jmp
leave
fmuls
mov
add
pop
je
les
and
fisttpll
lahf
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmpl
xor
xchg
ds
jbe
jne
fs
mov
testl
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
rolb
call
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
inc
outsl
pop
cli
or
xor
hlt
imul
pushf
imul
inc
hlt
imul
pushf
imul
inc
hlt
imul
pushf
imul
inc
hlt
imul
pushf
imul
inc
hlt
imul
pushf
imul
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
add
call
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
push
in
in
fdivr
add
mov
inc
pop
jg
ffreep
popa
pop
cmp
out
int
dec
mov
push
inc
or
pop
test
call
mov
cmp
aam
lret
jo
ss
fcoms
repz
imul
cli
or
mov
sub
js
into
jbe
and
out
mov
sub
movsb
or
mov
ret
jecxz
sbb
and
xchg
push
insl
jmp
push
mov
ljmp
mov
int3
arpl
mov
adc
xchg
mov
pop
sbb
push
arpl
fisttpll
mov
add
lcall
jnp
add
call
cmp
stos
or
getsec
sub
or
cmp
in
pop
pushf
fucomp
push
cli
out
inc
jne
loopne
sti
sbb
ljmp
hlt
mov
jno
mov
mov
xchg
push
test
cmp
or
mov
shlb
cwtl
pop
cmp
sub
sahf
lcall
dec
or
pop
out
test
dec
les
and
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
loop
jp
out
xchg
xor
sub
jno
scas
or
add
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
inc
outsl
pop
cli
or
xor
hlt
imul
pushf
imul
call
push
sbb
ja
push
sbb
xchg
jbe
push
movsl
or
push
push
movsl
loopne
stos
or
loopne
xor
xor
pusha
xor
xor
pusha
xor
xor
pusha
xor
xor
pusha
xor
or
push
push
movsl
or
push
push
movsl
scas
test
adcl
push
sbb
push
push
hlt
imul
pushf
imul
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
rolb
call
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
or
iret
fs
fdivr
fwait
jg
or
jp
fcmovnu
pop
xchg
andb
loope
jl
out
stc
pop
aad
outsl
test
addr16
test
fwait
in
lods
cli
mov
jle
mov
sarl
ret
add
call
shl
mov
imul
cli
cmpsl
shlb
ret
mov
pusha
mov
or
jge
add
sub
movsb
or
mov
ret
jecxz
push
push
out
fisttpll
dec
lods
xor
aaa
imul
jmp
sbb
add
or
lcall
int3
fisubrs
sbb
push
arpl
fnsave
add
jp
add
lea
lret
iret
ds
or
push
cmp
stos
or
getsec
call
stos
scas
lahf
aas
add
call
lcall
or
dec
rclb
mov
jmp
int
dec
ret
cmp
mov
inc
std
jne
cltd
cmp
imul
push
mov
in
or
pop
sub
sub
test
cmp
clc
sarl
pop
je
les
and
push
shrd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
repnz
daa
push
push
jb
add
call
mov
xchg
imulb
mov
hlt
dec
fimuls
in
das
rorb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
xchg
imul
pushf
imul
jmp
sbb
xchg
jbe
push
movsl
xor
pusha
xor
xor
pusha
xor
xor
pusha
xor
sbb
sub
mov
fcomp
add
call
adc
fstpt
fcomp
mov
rcr
fstpt
fcomp
mov
rcr
fstpt
fcomp
mov
rcr
fstpt
fcomp
mov
xor
xor
pusha
xor
xor
pusha
xor
divb
loope
jno
stos
or
push
push
movsl
jns
in
dec
push
sbb
imul
pushf
imul
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
add
call
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
inc
mov
cwtl
ret
xor
aaa
pushf
sti
inc
lret
mov
ljmp
mov
aad
outsl
cs
adc
mov
pop
test
sub
jp
ret
cs
fwait
jbe
adc
repnz
imul
cli
cmpsl
rolb
call
mov
jns
test
adcb
jmp
loopne
sahf
insl
inc
pop
aaa
in
xchg
adc
push
or
or
dec
and
leave
aaa
stc
adc
mov
dec
lods
xor
aaa
imul
cmc
ljmp
sbb
jp
sbb
push
arpl
fucomp
stos
pop
test
cmp
jecxz
pop
sbb
inc
mov
loope
jp
pop
sub
loope
add
data16
dec
and
scas
dec
push
stc
dec
icebp
mov
in
pop
pushf
fucomp
push
add
call
mov
mov
push
insb
sub
orb
mov
push
test
cmp
or
imul
and
out
test
dec
les
and
cmc
int3
inc
pop
gs
push
daa
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jae
test
mov
dec
inc
mov
mov
jns
jae
fwait
int3
dec
or
shlb
jecxz
lods
stos
rolb
call
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
inc
outsl
pop
cli
or
xor
in
dec
push
sbb
xchg
jbe
push
movsl
xor
pusha
xor
xor
pusha
xor
cwtl
mov
mov
rcr
fstpt
fcomp
mov
push
clc
pop
and
pop
and
pop
and
pop
and
pop
and
pop
and
add
call
sbb
push
clc
pop
and
pop
and
pop
and
pop
and
pop
and
pop
and
mov
lock
fcomp
mov
rcr
fstpt
adc
arpl
loopne
xor
divb
loope
jno
stos
scas
test
adcl
push
hlt
imul
pushf
imul
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
add
call
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
in
jmp
fstl
add
push
mov
cmc
pushl
pushf
sti
inc
lret
mov
ljmp
mov
sbb
pop
test
pushf
cmc
push
nop
imul
lods
ljmp
out
mov
adc
movsb
imul
cli
popa
rcrb
imul
pusha
mov
out
mov
call
mov
dec
sub
movsb
or
mov
leave
or
dec
subb
push
add
mov
in
fstps
jl
pop
sbb
sti
push
push
push
cmpsb
inc
in
ljmp
pop
es
mov
scas
inc
or
and
sahf
rolb
and
jnp
sti
cmp
jnp
push
cmp
int3
ss
adc
lcall
pop
xchg
lock
out
mov
lods
clc
sti
lret
xor
dec
clc
add
call
mov
jne
cltd
cmp
imul
push
fstpl
aas
sbb
aam
insb
and
xchg
call
jbe
loope
adc
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
inc
scas
cmpsl
add
inc
sub
test
or
imul
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
inc
outsl
pop
cli
or
add
call
mov
in
dec
push
sbb
or
loopne
xor
sbb
sub
mov
fcomp
mov
push
clc
pop
and
pop
and
fldcw
xor
push
shrl
mov
rorl
sbb
or
pop
cld
inc
sub
push
inc
and
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
add
call
iret
adc
leave
or
jns
leave
or
popf
notb
in
popa
mov
rorl
pop
and
pop
and
mov
lock
fcomp
mov
push
adc
arpl
loopne
xor
or
push
push
movsl
fistpll
push
push
hlt
imul
pushf
imul
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
add
call
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
in
cli
lock
pop
pop
sahf
xchg
int
pop
jg
ffreep
aaa
pushf
sti
inc
lret
mov
ljmp
notl
into
mov
pop
test
add
pop
sub
mov
hlt
mov
jg
out
out
mov
adc
ss
mov
cmpsl
shlb
ret
mov
pusha
mov
or
jmp
ret
jns
repnz
xorb
adc
call
insl
hlt
fcomi
pushf
mov
faddl
mov
addl
outsb
aam
stos
cmp
filds
sti
push
jmp
ljmp
cwtl
push
leave
pop
es
mov
push
arpl
and
jl
jnp
sti
cmp
js
push
aam
or
getsec
call
stos
scas
lahf
aas
push
lcall
xchg
out
inc
jne
loopne
sti
jmp
int
dec
ret
lods
clc
sti
lret
xor
bound
cvtps2pd
push
add
call
out
ja
lea
inc
lret
cmp
das
repz
pop
dec
sar
loop
add
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
and
imul
jae
cli
loopne
pop
out
cmc
aam
call
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
xchg
imul
pushf
imul
sbb
or
loopne
xor
cwtl
mov
mov
insb
into
jge
add
call
lret
adc
clc
pop
and
fldcw
xor
push
shrl
sar
and
sbb
sub
push
inc
and
adc
sbb
adc
push
shll
pop
movsl
iret
fldenv
or
fisubl
clc
xor
and
fisubl
clc
xor
and
fisubl
clc
xor
and
incb
or
and
iret
fldenv
or
fildl
sbb
add
call
nop
and
adc
sbb
adc
leave
or
popa
mov
rorl
pop
and
pop
and
mov
mov
push
adc
arpl
loopne
xor
or
push
push
movsl
fistpll
push
push
fbld
push
jmp
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
rolb
call
xchg
jecxz
lods
stos
shlb
jecxz
lods
mov
push
cmp
popf
rol
int
pop
jg
ffreep
stc
in
cmpsl
leave
adc
inc
sbb
push
mov
mov
dec
rcll
in
add
pop
sub
mov
hlt
mov
jg
out
out
fwait
jbe
adc
repnz
mov
cmpsl
shlb
ret
mov
pusha
mov
or
jmp
int
sub
movsb
or
xchg
adc
hlt
fcomi
pushf
mov
fldl
adc
call
jmp
inc
cmp
xor
inc
jl
pop
sbb
lcall
arpl
sbb
inc
into
xchg
int3
fisubrs
sbb
push
arpl
fisttpll
mov
add
inc
and
and
js
push
add
cmp
and
xor
xchg
in
adc
mov
rclb
mov
cli
out
inc
jne
loopne
sti
aad
adc
pop
in
test
mov
jno
mov
mov
in
jle
rcll
les
add
jmp
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
or
xchg
lcall
addb
stos
dec
nop
nop
lods
inc
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
inc
outsl
pop
cli
or
or
cs
push
push
movsl
xor
pusha
xor
cwtl
mov
mov
insb
into
jge
lret
adc
clc
pop
and
mov
rorl
clc
pop
cmp
adc
sbb
adc
call
lcall
xor
and
adc
scas
inc
ret
lods
mov
cmc
cwtl
aas
xchg
lods
mov
cmc
cwtl
aas
xchg
lods
mov
cmc
cwtl
aas
xchg
lods
mov
cmc
cwtl
aas
xchg
mov
mov
aas
mov
mov
aas
mov
mov
aas
mov
mov
aas
stc
dec
aaa
sbb
rep
mov
cmc
cwtl
aas
xchg
lods
mov
cmc
cwtl
aas
xchg
lods
mov
cmc
cwtl
aas
xchg
lods
mov
cmc
cwtl
aas
xchg
xor
and
incb
or
and
iret
flds
add
call
fildl
sbb
adc
sbb
adc
adc
in
ret
jnp
aam
fsts
pop
and
mov
mov
push
adc
arpl
loopne
xor
scas
test
adcl
mov
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
inc
outsl
pop
cli
or
add
call
movsb
mov
int
pop
jg
ffreep
lret
dec
jg
out
aam
mov
outsb
lods
loope
stos
loope
jo
sbb
scas
rcll
in
add
test
mov
cmp
jg
out
out
push
idivb
std
mov
cmpsl
shlb
ret
mov
pusha
mov
and
cmp
dec
fwait
clc
dec
mov
loope
int3
test
and
hlt
fcomi
pushf
mov
ret
jecxz
scas
sub
in
fstps
mov
xchg
ljmp
call
sub
ljmp
mov
adc
xchg
mov
pop
sbb
push
arpl
fisttpll
mov
add
arpl
push
popf
sahf
pushf
adc
pop
push
mov
dec
enter
in
mov
outsb
getsec
sub
or
cmp
stc
enter
inc
lock
out
mov
jmp
int
dec
ret
cld
jge
rorb
pop
je
les
and
mov
and
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
testb
sub
cwtl
cld
mov
call
int3
xchg
cmp
add
das
xchg
adc
das
or
mov
lret
stos
shlb
jecxz
lods
xchg
imul
pushf
imul
adc
pusha
xor
sbb
sub
mov
into
jge
lret
adc
clc
pop
and
sar
and
sbb
sub
push
inc
and
adc
pop
movsl
iret
fldenv
xor
and
lods
mov
cmc
cwtl
aas
xchg
lods
mov
cmc
cwtl
aas
xchg
xor
push
andb
push
imul
add
call
sbb
movsb
mov
push
xor
mov
and
add
push
mov
cmc
call
add
push
mov
cmc
call
add
push
mov
cmc
call
add
push
mov
cmc
call
add
push
mov
cmc
call
add
push
mov
cmc
call
add
push
mov
cmc
call
add
push
mov
cmc
call
add
push
mov
cmc
call
movsb
mov
xchg
jbe
sbb
movsb
mov
mov
mov
aas
stc
dec
aaa
sbb
rep
mov
cmc
cwtl
aas
xchg
xor
mov
mov
or
and
les
call
and
adc
leave
or
ret
jnp
aam
fsts
pop
and
mov
mov
xor
divb
loope
jno
stos
fistpll
push
push
fbld
push
jmp
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
inc
mov
cwtl
fidivl
pop
ja
int
pop
jg
ffreep
lret
dec
jg
add
call
aam
out
dec
xchg
pop
outsb
jbe
push
jo
sbb
scas
es
repz
dec
pop
dec
das
test
mov
cmp
jg
out
out
fwait
jbe
adc
repnz
imul
cli
cmpsl
shlb
ret
mov
pusha
mov
and
cmp
dec
fwait
clc
dec
mov
loope
in
xchg
adc
enter
pushw
lods
jmp
xchg
jecxz
push
push
out
fisttpll
mov
inc
adc
push
mov
mov
lret
test
adc
mov
call
arpl
adc
out
xchg
jle
inc
in
cmp
sub
std
scas
dec
cmp
adc
rcrl
cmp
dec
enter
in
call
stos
scas
lahf
aas
push
lcall
push
adc
adc
mov
scas
cmpsb
dec
inc
into
lret
test
dec
les
and
push
sub
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
adc
xchg
insb
andl
dec
xor
scas
cld
loopne
xlat
inc
outsl
pop
cli
or
or
add
call
cs
push
push
movsl
xor
pusha
xor
cwtl
mov
mov
push
clc
pop
and
mov
rorl
fstps
push
inc
and
adc
je
lret
mov
adc
scas
inc
ret
lods
mov
cmc
cwtl
aas
xchg
xor
push
andb
mov
xor
mov
and
add
push
mov
cmc
call
add
push
mov
cmc
call
add
push
mov
cmc
call
add
push
mov
cmc
incl
shlb
inc
push
shlb
call
ss
mov
push
shlb
inc
push
shlb
inc
push
shlb
inc
push
shlb
inc
push
shlb
inc
push
shlb
mov
inc
sti
ja
add
push
mov
cmc
call
add
push
mov
cmc
call
add
push
mov
cmc
call
add
push
mov
cmc
call
movsb
mov
xchg
mov
and
cmp
stc
dec
aaa
sbb
rep
mov
cmc
cwtl
aas
xchg
xor
and
mov
push
into
inc
and
adc
add
call
pop
push
dec
in
ret
jnp
aam
mov
lock
fcomp
mov
xor
scas
test
adcl
mov
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
cmpl
icebp
lea
xor
mov
and
push
shlb
popa
pop
cmp
out
out
dec
xchg
pop
outsb
jbe
push
jo
sbb
scas
add
call
repz
dec
pop
dec
das
test
mov
cmp
jge
mov
push
fwait
jbe
adc
repnz
imul
cli
cmpsl
shlb
ret
mov
xchg
sbb
mov
cmp
dec
fwait
clc
push
or
jge
add
ja
jl
enter
enter
pushw
lods
jmp
xchg
jecxz
dec
sahf
jns
scas
xchg
xchg
scas
mov
xchg
ljmp
pop
sbb
aad
gs
int3
loop
arpl
adc
in
mov
and
call
sub
mov
add
adc
rcrl
xor
mov
dec
enter
in
xor
xchg
in
adc
mov
jge
packsswb
ss
rcll
hlt
lahf
mov
pop
cmpsl
mov
movsb
xchg
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
testb
sub
xchg
xor
push
pushf
mov
xchg
aam
push
in
jno
insb
xor
sahf
gs
lea
inc
push
loopne,pn
stos
or
and
pop
pop
sub
mov
into
jge
lret
sub
icebp
push
shrl
add
call
adc
or
inc
and
adc
pop
movsl
iret
fldenv
cmp
ret
lods
mov
cmc
cwtl
aas
xchg
mov
mov
aas
push
xor
mov
and
add
push
mov
cmc
call
add
push
mov
cmc
jmp
int
pop
jg
ffreep
inc
push
shlb
inc
push
shlb
aaa
pushf
sti
inc
lret
mov
ljmp
cmp
stc
in
cmpsl
leave
adc
in
cmpsl
leave
adc
in
cmpsl
leave
adc
in
cmpsl
leave
adc
in
cmpsl
leave
adc
call
and
in
cmpsl
leave
adc
in
cmpsl
leave
adc
in
cmpsl
leave
adc
in
cmpsl
leave
adc
in
cmpsl
leave
adc
push
shlb
inc
push
shlb
inc
push
shlb
adc
sub
lock
call
add
push
mov
cmc
call
add
push
mov
cmc
call
movsb
mov
stc
dec
aaa
sbb
rep
mov
cmc
cwtl
aas
xchg
xor
and
mov
push
into
inc
and
adc
adc
in
adc
add
call
pop
and
mov
mov
xor
scas
test
adcl
mov
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
fwait
shld
sub
push
mov
and
pushf
sti
inc
lret
mov
ljmp
insb
out
int
dec
mov
push
inc
or
pop
test
rcll
in
add
test
mov
cmp
call
stos
jg
out
out
or
jns
pop
inc
movsb
imul
cli
adc
inc
out
scas
sbb
push
sbb
popf
inc
in
fldcw
adc
dec
fwait
clc
dec
mov
loope
push
not
push
sbb
jns
adc
mov
leave
or
dec
adcb
out
fisttpll
addl
xor
inc
jl
pop
sbb
sti
push
push
cmp
cmp
jp
jecxz
into
xchg
int3
fisubrs
sbb
push
arpl
fucomp
stos
pop
test
pop
sahf
rolb
and
call
inc
push
xor
mov
dec
enter
in
mov
outsb
getsec
pop
or
rcl
into
cmpsl
sub
pop
inc
sahf
cmc
movsb
gs
arpl
scas
adc
or
push
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
nop
dec
xor
and
jne
xor
cmc
or
lods
xchg
adc
adc
pusha
xor
cwtl
mov
mov
push
clc
pop
and
mov
rorl
fstps
push
mov
push
shll
push
scas
inc
ret
lods
mov
cmc
cwtl
aas
xchg
lods
mov
call
mov
xor
mov
and
add
push
mov
cmc
call
add
push
mov
cmc
incl
shlb
inc
push
shlb
stc
in
cmpsl
leave
adc
in
cmpsl
leave
adc
pop
cmp
out
pop
and
outsl
inc
jge
into
pop
and
outsl
inc
jge
into
pop
and
outsl
inc
jge
int3
inc
sbb
push
out
xor
loope
stos
out
xor
loope
stos
out
xor
loope
stos
out
xor
loope
stos
out
xor
loope
stos
mov
rorl
add
call
pop
and
outsl
inc
jge
into
pop
and
outsl
inc
jge
into
pop
and
outsl
inc
jge
es
test
mov
in
cmpsl
leave
adc
in
cmpsl
leave
adc
push
shlb
mov
inc
sti
ja
add
push
mov
cmc
call
add
push
mov
cmc
call
movsb
mov
stc
dec
aaa
sbb
rep
mov
cmc
cwtl
aas
xchg
sub
inc
ljmp
sbb
adc
mov
pop
ret
jnp
aam
mov
lock
adc
add
call
dec
divb
loope
jno
stos
fistpll
push
push
fbld
push
jmp
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
orb
inc
mov
mov
xor
mov
and
pushf
sti
inc
lret
mov
ljmp
mov
aad
outsl
cs
push
jo
sbb
scas
es
in
lods
cli
mov
jle
test
mov
cmp
jge
mov
imulb
or
push
idivb
fnstenv
call
xchg
stos
cli
cmpsl
shlb
ret
mov
test
jbe
and
cmp
adc
lcall
sub
movsb
or
mov
ret
jecxz
lods
rorb
xlat
scas
sub
in
fstps
stos
cmp
fisttps
adc
dec
stos
rcll
cmp
cmp
jp
push
leave
pop
es
mov
and
jno
ret
pop
int3
unpckhps
push
sbb
popf
adc
pop
push
push
or
add
call
fwait
push
cmp
call
pop
jge
inc
jge
daa
pop
pop
jae
pop
sti
jge
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cld
lock
push
sar
addr16
cmp
outsb
cmp
in
dec
adc
icebp
fnstcw
xor
pusha
xor
cwtl
mov
mov
push
clc
pop
and
sar
and
sbb
iret
adc
je
lret
mov
lods
mov
cmc
cwtl
aas
xchg
xor
push
andb
push
mov
and
add
push
mov
cmc
jmp
int
pop
jg
ffreep
inc
push
shlb
aaa
pushf
sti
inc
add
call
mov
ljmp
cmp
into
pop
and
outsl
inc
jge
into
pop
and
outsl
inc
jge
int3
inc
sbb
push
and
jmp
inc
xlat
cmp
sbb
pop
test
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
iret
mov
xlat
cmp
out
add
call
outsb
lods
loope
stos
mov
rorl
into
pop
and
outsl
inc
jge
es
test
mov
in
cmpsl
leave
adc
sub
mov
shlb
adc
sub
lock
call
add
push
mov
cmc
call
cmp
stc
dec
aaa
sbb
repz
mov
mov
les
mov
pop
ret
jnp
aam
mov
lock
adc
arpl
ja
loope
jno
stos
fistpll
push
push
call
jmp
and
cmp
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
lods
mov
mov
pushf
inc
pop
add
or
push
xor
mov
and
pushf
sti
inc
lret
mov
ljmp
insb
out
stc
pop
aad
outsl
test
addr16
test
xchg
and
rolb
xchg
stc
test
mov
cmp
jg
out
out
push
idivb
fnstenv
adc
inc
out
scas
sbb
push
sbb
popf
inc
in
flds
add
call
adc
dec
fwait
clc
push
or
jge
add
jb
mov
in
xchg
adc
hlt
fcomi
pushf
mov
faddl
scas
sub
in
fstps
pop
fdivl
mov
mov
xchg
cmc
ljmp
sbb
jp
loope
cmpsl
xchg
jle
inc
push
mov
mov
nop
cmp
lret
loop
sahf
rolb
and
jle
nop
mov
jb
push
pusha
push
stos
sbb
pop
xor
bound
add
call
xor
pop
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
stos
xchg
dec
add
call
sub
in
sbb
hlt
sti
jp
xchg
xor
pusha
xor
arpl
mov
into
jge
lret
sub
icebp
push
shrl
cld
inc
sub
push
mov
push
shll
push
scas
inc
ret
lods
mov
cmc
cwtl
aas
xchg
lods
mov
pop
out
add
push
mov
cmc
call
add
push
mov
cmc
incl
shlb
stc
in
cmpsl
leave
adc
pop
cmp
out
pop
and
outsl
inc
jge
int3
inc
sbb
push
and
jmp
inc
sbb
add
call
test
xor
sbb
xor
loop
mov
jecxz
mov
lcall
mov
jae
mov
lcall
movsb
cs
fdivrs
mov
imul
jae
mov
lcall
mov
jae
daa
jecxz
mov
popf
or
stos
cmp
mov
mov
dec
mov
mov
dec
xlat
cmp
je
mov
call
cmp
into
pop
and
outsl
inc
jge
into
pop
and
outsl
inc
jge
stc
in
cmpsl
leave
adc
sub
mov
shlb
adc
sub
lock
decl
push
jmp
cmc
xchg
mov
and
cmp
lods
mov
cmc
cwtl
aas
xchg
sub
inc
ljmp
sbb
adc
adc
in
adc
pop
and
mov
mov
loope
jno
stos
fistpll
push
push
fbld
push
jmp
jae
xchg
jecxz
lods
stos
rolb
call
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
xor
jae
inc
pop
add
or
adc
sub
lock
pushl
pushf
sti
inc
lret
mov
ljmp
insb
out
stc
pop
aad
outsl
cs
push
jo
sbb
scas
es
and
rolb
xchg
stc
test
mov
cmp
jg
out
out
mov
adc
movsb
imul
cli
cmpsl
shlb
ret
mov
out
ffree
ljmp
mov
jno
into
mov
call
loopne
sahf
insl
inc
pop
aaa
in
xchg
adc
repz
fstpt
stos
mov
pop
cmpsl
scas
sub
in
fstps
mov
xchg
ljmp
mov
xchg
cmc
ljmp
sbb
jp
jecxz
into
xchg
int3
fisubrs
mov
mov
in
stos
pop
test
sub
std
scas
dec
cmp
xchg
push
jl
cltd
cli
mov
iret
rcl
dec
mov
pop
test
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xchg
bound
nop
dec
and
and
jbe
push
loope
cs
into
jge
lret
add
call
xor
push
shrl
cld
inc
sub
push
mov
push
shll
push
scas
inc
ret
xor
push
andb
push
mov
and
add
push
mov
cmc
incl
shlb
aaa
pushf
sti
inc
lret
mov
ljmp
insb
out
pop
and
outsl
inc
jge
out
xor
loope
stos
xlat
cmp
mov
mov
dec
loope
jo
sbb
scas
es
adc
mov
mov
lcall
mov
mov
dec
pop
dec
das
add
call
and
rolb
xchg
stc
fwait
in
lods
cli
mov
jle
arpl
lods
arpl
lods
arpl
lods
arpl
lods
arpl
lods
arpl
lods
arpl
in
push
push
xchg
and
rolb
xchg
stc
stos
imul
int
push
and
mov
xorl
jecxz
mov
sbb
xor
sbb
xor
mov
outsb
mov
rorl
call
jne
pop
and
outsl
inc
jge
stc
in
cmpsl
leave
adc
push
shlb
mov
inc
sti
ja
add
push
mov
cmc
call
cmp
lods
mov
cmc
cwtl
aas
xchg
xor
mov
mov
les
adc
in
adc
pop
and
mov
mov
loope
jno
stos
fistpll
push
push
fbld
push
jmp
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
orb
inc
add
call
mov
lcall
mov
outsb
pushf
inc
pop
add
or
adc
sub
lock
pushl
pushf
sti
inc
lret
mov
ljmp
mov
xchg
stc
pop
aad
outsl
test
jecxz
mov
lods
cli
mov
jle
test
mov
cmp
incl
jmp
pusha
ljmp
imul
cli
adc
inc
out
scas
sbb
push
xchg
in
jmp
push
mov
xchg
push
xchg
mov
stos
or
out
dec
in
xchg
cmp
in
xchg
adc
enter
call
andb
jmp
xchg
jecxz
push
push
out
fisttpll
addl
xor
inc
jl
pop
sbb
sti
push
jmp
inc
push
adc
jb
jecxz
into
xchg
int3
fisubrs
push
leave
pop
es
mov
and
cmp
fisubl
push
sbb
add
sarb
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sub
es
rorl
test
or
imul
mov
into
jge
lret
sub
icebp
push
shrl
cld
inc
sub
push
add
je
lret
mov
lods
mov
cmc
cwtl
aas
xchg
lods
mov
call
fcomps
add
push
mov
cmc
jmp
int
pop
jg
ffreep
inc
push
shlb
stc
in
cmpsl
leave
adc
pop
and
outsl
inc
jge
int3
inc
sbb
push
sbb
pop
test
xor
loop
mov
mov
jae
fdivrs
mov
rolb
xchg
stc
lods
arpl
push
xor
addr16
or
test
mov
cmp
xchg
fcoms
ss
fcoms
ss
fcoms
add
call
ss
fcoms
ss
fcoms
ss
fcoms
ss
fcoms
ss
fcoms
ss
fcoms
ss
fcoms
ss
fcoms
addr16
or
mov
in
sub
je
push
stos
imul
int
push
and
mov
xor
stos
xor
stos
cmp
mov
mov
dec
je
mov
outsb
mov
rorl
es
test
mov
add
call
in
cmpsl
leave
adc
push
shlb
adc
sub
lock
decl
push
jmp
cmc
stc
dec
aaa
sbb
repz
mov
mov
les
mov
pop
adc
pop
and
mov
mov
loope
jno
stos
fistpll
push
push
fbld
push
jmp
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
add
sbb
pop
dec
add
je
lret
mov
or
shll
add
call
ja
add
push
mov
cmc
pushl
pushf
sti
inc
lret
mov
ljmp
mov
mov
pop
test
push
in
mov
fwait
in
lods
cli
mov
jle
test
mov
cmp
jg
out
out
mov
adc
movsb
imul
cli
in
decb
rcrb
push
stos
xor
sub
mov
dec
cmp
dec
fwait
clc
sub
movsb
or
test
and
mov
jbe
fdiv
mov
lods
xchg
jecxz
loopne
leave
aaa
add
call
adc
mov
addl
outsb
aam
stos
cmp
fbstp
lcall
arpl
cmp
cmp
jp
push
leave
pop
es
mov
add
pop
je
les
and
pop
inc
sahf
insl
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jecxz
iret
out
fdivl
jbe
cmp
xchg
mov
cli
stos
bound
icebp
push
shrl
and
adc
je
lret
mov
lods
mov
cmc
cwtl
aas
xchg
lods
mov
pop
out
add
push
mov
cmc
jmp
int
pop
jg
ffreep
aaa
pushf
sti
inc
lret
mov
ljmp
add
call
out
inc
sbb
push
xlat
cmp
mov
mov
dec
daa
jecxz
mov
cs
icebp
repz
dec
pop
dec
das
fwait
in
lods
cli
mov
jle
xor
addr16
or
lret
jo
ss
fcoms
ss
fcoms
sarl
ret
loop,pn
scas
out
mov
in
dec
ret
mov
js
dec
ret
mov
das
loope
sbb
mov
add
sbb
call
sbb
call
sbb
call
call
and
sbb
call
sbb
in
dec
ret
mov
js
dec
ret
mov
stos
xorl
aas
or
loop
scas
out
mov
jo
ss
fcoms
ss
fcoms
pop
add
inc
push
mov
in
sub
je
push
fdivrs
mov
lcall
popf
or
stos
cmp
mov
mov
dec
je
mov
outsb
into
pop
and
outsl
inc
jge
stc
in
cmpsl
leave
adc
sub
mov
call
add
adc
sub
lock
decl
jae
pop
in
in
mov
shll
xchg
mov
push
into
jle
mov
pop
ret
jnp
aam
fstps
fstpt
or
cmp
push
push
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
daa
out
out
xor
rol
mov
loop
imul
xchg
mov
int
pop
jg
ffreep
aaa
pushf
sti
inc
lret
mov
ljmp
xchg
add
add
pop
and
outsl
inc
jge
xchg
stc
pop
aad
outsl
test
addr16
test
xchg
and
rolb
xchg
stc
test
mov
cmp
jge
mov
jmp
pusha
ljmp
leave
subb
int3
test
decb
rcrb
aaa
hlt
andl
mov
or
jmp
test
and
test
and
mov
ljmp
mov
lods
xchg
jecxz
andb
mov
addl
jle
xchg
pop
faddl
add
call
add
lcall
aas
test
add
push
or
insl
outsb
push
or
pop
je
les
and
pop
dec
into
cli
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
scas
xor
xchg
add
inc
imul
sub
fsubrp
movsl
stos
mov
das
aas
inc
and
adc
je
lret
mov
lods
mov
cmc
cwtl
aas
xchg
push
xor
mov
and
add
push
mov
cmc
incl
shlb
stc
in
cmpsl
leave
adc
pop
and
outsl
inc
jge
and
jmp
inc
sbb
pop
test
sbb
scas
es
cs
add
call
repz
dec
pop
dec
das
lods
arpl
test
mov
cmp
xchg
fcoms
sarl
ret
cs
or
pop
icebp
das
loope
sbb
mov
add
sbb
mov
adc
movsl
or
jns
pop
inc
adc
in
daa
icebp
xor
adc
in
daa
icebp
xor
and
lods
cwtl
stos
mov
sub
subb
int3
test
mov
xchg
fwait
scas
mov
sub
scas
daa
icebp
xor
adc
in
daa
add
call
xor
mov
adc
push
add
ja
add
sbb
in
dec
ret
mov
loop
scas
out
mov
jo
ss
fcoms
ss
fcoms
fistpl
je
push
fdivrs
mov
lcall
sbb
xor
iret
mov
mov
rorl
es
test
mov
sub
mov
inc
sti
ja
add
push
mov
cmc
call
add
call
cmp
xor
mov
mov
les
mov
pop
adc
pop
and
mov
mov
loope
jno
stos
fistpll
push
push
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
or
iret
fs
fadds
sbb
adc
push
scas
inc
ret
lods
mov
pop
out
int
pop
jg
ffreep
stc
in
cmpsl
leave
adc
inc
sbb
push
xchg
stc
pop
aad
outsl
test
jecxz
add
call
mov
scas
dec
pop
dec
das
test
mov
cmp
jg
out
out
mov
adc
cltd
leave
subb
int3
test
decb
rcrb
nop
imul
pusha
mov
and
cmp
dec
fwait
clc
dec
mov
loope
push
not
push
sbb
jns
adc
mov
leave
or
dec
subb
fcmovbe
dec
sahf
jns
scas
xchg
xchg
scas
mov
xchg
ljmp
pop
sbb
adc
call
les
mov
xor
add
adc
push
jae
push
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pop
or
add
call
mov
inc
out
ret
dec
jp
notl
sbb
adc
je
lret
mov
push
push
andb
push
mov
and
add
push
mov
cmc
incl
shlb
stc
in
cmpsl
leave
adc
pop
and
outsl
inc
jge
and
jmp
inc
mov
mov
dec
stc
adc
mov
icebp
repz
dec
pop
dec
das
fwait
in
lods
cli
mov
jle
test
mov
cmp
xchg
fcoms
out
mov
in
add
call
ret
mov
and
mov
xor
rclb
inc
adc
in
daa
icebp
xor
mov
subb
int3
test
mov
add
iret
inc
fistps
mov
add
iret
inc
fistps
mov
add
iret
inc
fistps
push
sbb
imul
xor
pop
add
push
or
iret
inc
fistps
mov
add
iret
inc
fistps
mov
add
iret
inc
fistps
push
and
aaa
cltd
leave
subb
int3
test
mov
xchg
fwait
scas
mov
call
adc
in
daa
icebp
xor
mov
adc
lods
call
sbb
xorl
aas
or
mov
mov
or
jo
ss
fcoms
fistpl
je
push
jne
mov
sbb
stos
cmp
mov
mov
dec
je
mov
outsb
into
pop
and
outsl
inc
jge
stc
in
cmpsl
leave
adc
loopne
add
adc
sub
lock
call
cmp
lods
mov
cmc
cwtl
aas
xchg
xchg
mov
add
call
into
jle
mov
pop
adc
pop
and
sub
push
adc
arpl
ja
loope
jno
stos
xchg
imul
pushf
imul
shlb
jecxz
lods
stos
shlb
jecxz
lods
enter
repnz
and
sbb
adc
push
scas
inc
ret
mov
rol
pop
pop
ja
add
in
jo
pushf
sti
inc
lret
mov
ljmp
notl
pop
aad
outsl
test
addr16
test
xchg
and
rolb
xchg
stc
test
mov
add
call
es
ljmp
out
mov
adc
cltd
leave
subb
int3
test
out
imul
xor
push
lds
push
cld
js
into
jbe
and
dec
fwait
clc
dec
mov
loope
push
not
push
sbb
jns
adc
mov
leave
or
dec
xor
faddl
dec
sahf
jns
scas
xchg
mov
addl
jle
xchg
pop
fdivl
unpckhps
dec
and
lret
test
dec
les
and
lret
pusha
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmpsl
fwait
out
dec
mov
or
push
jg
jge
daa
scas
sahf
lods
add
je
lret
add
call
pop
xor
push
andb
push
mov
and
add
push
mov
cmc
pushl
pushf
sti
inc
lret
mov
ljmp
insb
out
inc
sbb
push
sbb
pop
test
sbb
scas
es
cs
fwait
in
lods
cli
mov
jle
imul
lods
lret
jo
ss
fcoms
out
mov
loope
sbb
mov
stos
mov
adc
in
daa
icebp
xor
mov
subb
int3
test
add
call
inc
fistps
mov
addr16
add
push
or
scas
sbb
push
cmpsl
shlb
ret
mov
mov
cmpsl
shlb
ret
mov
mov
cmpsl
shlb
ret
mov
mov
cmpsl
shlb
ret
mov
mov
cmpsl
shlb
ret
mov
mov
cmpsl
shlb
ret
mov
pop
add
push
or
ds
and
aaa
cltd
leave
subb
int3
test
mov
add
call
xchg
jbe
sbb
push
add
ja
add
or
mov
mov
or
sbbb
inc
push
mov
in
sub
imul
int
push
and
fstp
lcall
sbb
xor
mov
outsb
into
pop
and
outsl
inc
jge
stc
in
cmpsl
leave
adc
push
shlb
adc
sub
lock
call
cmp
xor
mov
mov
les
sbb
insl
adc
pop
and
add
call
sub
push
adc
arpl
adc
add
jmp
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
orb
inc
mov
sar
and
sbb
sbb
and
push
scas
inc
ret
xchg
jbe
sbb
movsb
mov
and
inc
pop
jg
ffreep
aaa
pushf
sti
inc
lret
mov
ljmp
pop
loope
stc
pop
aad
outsl
test
jecxz
mov
lods
cli
mov
jle
pop
sub
mov
hlt
mov
jg
out
out
shl
mov
call
addr16
add
lods
cwtl
stos
mov
rcrb
pop
imul
jns
test
adcb
ds
fwait
clc
push
or
jge
add
jb
adc
aaa
in
xchg
adc
repz
fstpt
divl
icebp
loopne
leave
aaa
stc
adc
scas
sub
in
fstps
inc
fwait
add
je
les
and
mov
sarl
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
mov
shl
xchg
jo
outsl
iret
pushl
sar
addr16
jl
mov
push
xor
push
andb
push
mov
and
add
push
mov
cmc
pushl
pushf
sti
inc
lret
mov
ljmp
xchg
add
add
cmp
out
inc
sbb
push
sbb
pop
test
push
in
mov
fdivrs
mov
lods
cli
mov
jle
test
mov
cmp
jp
ret
js,pn
dec
ret
mov
and
mov
xor
adc
in
daa
icebp
xor
mov
fnstenv
push
sbb
imul
xor
mov
cmpsl
shlb
ret
mov
nop
imul
push
stos
xor
sub
popf
inc
in
flds
add
call
adc
popf
inc
in
fldcw
adc
mov
xchg
push
xchg
mov
xchg
push
xchg
mov
xchg
push
xchg
mov
xchg
push
xchg
mov
xchg
push
xchg
mov
cmp
or
popf
inc
in
fldcw
adc
pop
inc
aam
or
push
adc
loopne
cmpsl
shlb
ret
mov
mov
vmwrite
pop
mov
addr16
cltd
leave
subb
int3
test
mov
aaa
xchg
jbe
sbb
lods
call
call
and
sbb
xorl
aas
or
lret
jo
ss
fcoms
xor
dec
or
ret
lahf
mov
or
xor
stos
pop
testl
cwtl
aam
stos
push
mov
add
and
repz
shlb
adc
sub
lock
call
cmp
xor
mov
mov
les
adc
in
fistpll
lock
adc
arpl
mov
jmp
and
push
mov
call
and
cmp
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
test
scas
fdivp
mov
mov
sbb
and
mov
cmc
cwtl
aas
xchg
push
xor
mov
and
int
pop
jg
ffreep
xor
sti
inc
mov
pop
cmpl
sbb
pop
test
test
xchg
and
rolb
xchg
stc
push
xor
addr16
or
ljmp
out
mov
adc
cltd
leave
subb
int3
test
out
imul
xor
call
shlb
ret
mov
test
jbe
and
cmp
adc
lcall
xlat
popf
insl
adc
enter
pushw
lods
jmp
inc
mov
xor
faddl
fdivrl
sub
mov
pop
je
les
and
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
fwait
and
fstpt
aaa
sbb
fxch
bound
icebp
pusha
imul
rcrl
lods
mov
cmc
cwtl
aas
xchg
push
xor
mov
and
add
push
mov
cmc
pushl
pushf
sti
inc
lret
mov
ljmp
insb
out
out
dec
xchg
pop
outsb
jbe
out
dec
xor
arpl
icebp
repz
call
dec
pop
dec
das
imul
lods
lret
jo
ss
fcoms
iret
incl
lods
call
sbb
or
jns
pop
inc
cltd
leave
subb
int3
test
stos
cli
mov
addr16
add
push
or
aad
mov
nop
imul
addr16
xor
pusha
jns
test
adcb
xchg
mov
xchg
push
xchg
mov
popf
cmp
adc
adc
insl
decl
push
stc
jmp
out
mov
add
call
out
mov
aas
out
mov
aas
out
mov
aas
out
mov
into
sbb
adc
insl
into
sbb
adc
insl
divb
movsb
sbb
setne
mov
xchg
push
xchg
mov
popf
inc
in
fldcw
adc
adc
loopne
cmpsl
shlb
ret
mov
mov
shr
addr16
ficomps
popf
mov
stos
mov
call
jmp
and
push
cmp
int3
mov
aad
imul
call
pop
add
pushf
push
call
push
cli
add
jl
mov
pusha
fnsave
sti
loop
sbb
loope
push
cmpsb
repnz
pushf
pop
lcall
cwtl
pop
mov
movsl
inc
jb
jecxz
cmp
push
aas
lret
add
cmp
xor
mov
mov
les
aam
aam
mov
mov
xor
pusha
xor
fistpll
push
push
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
test
jns
add
call
js
pop
arpl
mov
into
jge
lret
ja
loop
mov
mov
push
shll
push
scas
inc
ret
lods
mov
pop
out
int
pop
jg
ffreep
aaa
pushf
sti
inc
lret
mov
ljmp
jge
sbb
pop
test
test
icebp
repz
dec
pop
dec
das
test
mov
cmp
jg
out
out
insl
nop
cs
add
lods
cwtl
stos
mov
iret
inc
fistps
cmpsl
shlb
ret
mov
addr16
xor
pusha
mov
add
call
push
xchg
mov
sbb
add
dec
mov
loope
in
xchg
adc
mov
jbe
fcoml
leave
or
dec
sbbb
adc
les
and
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
ret
ja
pop
push
or
dec
jno
aaa
stos
and
jmp
fnstsw
out
cmp
mov
sub
lock
pushl
pushf
sti
inc
lret
mov
ljmp
insb
out
out
dec
xchg
pop
outsb
jbe
out
dec
xor
arpl
icebp
repz
dec
pop
dec
das
test
mov
cmp
jp
ret
cs
loope
sbb
mov
stos
add
call
mov
xor
and
lods
cwtl
stos
mov
out
xchg
stos
cli
mov
addr16
add
push
or
aad
mov
nop
imul
inc
in
fldcw
adc
mov
xchg
push
xchg
mov
jg
adc
insl
aas
out
mov
dec
mov
loope
dec
mov
loope
dec
mov
loope
dec
mov
loope
sub
movsb
or
test
and
int3
test
and
int3
test
and
dec
mov
call
xchg
jp
loope
dec
mov
loope
dec
mov
loope
dec
mov
loope
and
rdtsc
xor
mov
movsb
shl
into
sbb
adc
insl
mov
xchg
push
xchg
mov
cmp
or
mov
inc
enter
imul
js
cmp
psrld
mov
cmp
pop
xchg
and
push
fdivr
pusha
loope
inc
mov
xchg
lret
adc
out
dec
mov
sahf
rorb
call
mov
ret
jno
jecxz
es
jmp
popf
test
inc
pop
bound
add
mov
mov
adc
pop
add
mov
daa
and
fdivs
out
add
xor
mov
mov
adc
iret
jnp
aam
fstps
fstpt
or
inc
hlt
imul
pushf
imul
shlb
jecxz
lods
or
iret
fs
fsubs
mov
into
jge
lret
ja
loop
add
call
dec
mov
push
shll
push
scas
inc
ret
push
xor
mov
and
int
pop
jg
ffreep
stc
in
cmpsl
leave
adc
inc
sbb
push
xchg
stc
pop
aad
outsl
test
jecxz
mov
scas
dec
pop
dec
das
push
xor
addr16
or
ljmp
out
loope
sbb
mov
subb
int3
test
out
imul
xor
mov
push
push
jae
push
rol
mov
xchg
push
xchg
mov
jno
into
mov
mov
call
adc
and
adc
mov
cmpl
pop
je
les
and
cmc
and
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
hlt
pop
int
lds
lea
mov
mov
pusha
sarl
aam
xor
push
es
adc
sub
lock
pushl
pushf
sti
inc
lret
mov
ljmp
insb
out
out
dec
xchg
pop
outsb
jbe
out
dec
xor
arpl
fwait
in
lods
cli
mov
jle
test
mov
cmp
jp
ret
cs
loope
sbb
mov
or
pop
inc
cltd
leave
subb
int3
test
out
imul
xor
mov
popa
rcrb
imul
call
mov
in
fldcw
adc
mov
popf
cmp
adc
into
mov
mov
dec
mov
loope
int3
test
and
int3
test
and
int3
test
and
adc
mov
push
dec
mov
push
dec
mov
push
dec
mov
push
dec
mov
push
dec
mov
push
dec
mov
push
dec
mov
and
ss
mov
test
and
call
call
or
push
pop
sub
lods
aad
xor
mov
jmp
inc
inc
push
mov
jne
testl
lret
mov
lfs
push
mov
insb
inc
push
add
xchg
sbb
sbb
inc
xorb
cld
shrl
push
push
aam
jo
nop
cmp
addr16
lcall
jl
int
pop
jns
int3
test
cmp
adc
xchg
xor
jmp
cmp
xchg
or
cmp
call
test
inc
pop
fimuls
lods
insl
mov
mov
lahf
push
inc
stos
adc
xchg
and
pop
imul
push
shll
inc
ljmp
mov
pop
ret
jnp
aam
fldenv
fbld
ret
fcomps
add
jmp
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
fildll
lcall
adc
pop
and
mov
mov
push
shll
push
andb
call
xor
mov
and
fistpl
clc
xorb
sti
inc
mov
pop
cmpl
xchg
stc
pop
aad
outsl
test
addr16
test
xchg
and
rolb
xchg
stc
test
mov
cmp
jp
ret
cs
loope
sbb
mov
xchg
lods
cwtl
stos
mov
out
xchg
stos
cli
cmpsl
shlb
ret
mov
out
ffree
ljmp
mov
push
stc
jmp
or
jge
add
rorb
add
pushf
inc
cld
mov
push
out
jae
add
call
inc
test
dec
les
and
mov
sarl
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cltd
inc
add
push
mov
mov
aad
std
mov
notb
orb
add
call
push
mov
cmc
incl
shlb
popa
pop
cmp
out
out
dec
xchg
pop
outsb
jbe
out
dec
xor
push
ret
scas
stos
int
fwait
in
lods
cli
mov
jle
test
mov
cmp
jp
ret
cs
mov
xor
and
lods
cwtl
stos
mov
out
xchg
stos
cli
adc
inc
out
scas
sbb
push
cmpsl
shlb
ret
mov
addr16
xor
pusha
mov
xchg
push
xchg
mov
popf
cmp
adc
into
mov
mov
add
call
int
sub
movsb
or
test
and
in
xchg
adc
adc
mov
push
dec
mov
leave
or
dec
adcb
or
dec
adcb
or
dec
adcb
or
dec
adcb
or
dec
adcb
or
dec
adcb
or
dec
adcb
or
dec
adcb
or
dec
adcb
or
dec
adcb
or
dec
adcb
cmp
adc
mov
addr16
inc
add
call
sbb
hlt
xor
push
push
out
arpl
in
inc
fchs
popf
testl
lea
in
aad
mov
in
aad
int
outsb
push
push
aaa
sub
xchg
sbb
jg
jb
jg
mov
and
sub
xchg
nop
lds
into
push
pop
in
cmp
dec
xlat
jnp
xchg
push
mov
testb
mov
outsb
into
stos
insb
jp
pop
nop
jno
pushf
std
cwtl
dec
add
data16
test
test
inc
pop
cmp
mov
or
imul
call
mov
in
es
pop
test
add
insb
add
psubsw
inc
xchg
movsl
cltd
adc
inc
cmp
lds
jns
insl
fistpll
lock
adc
arpl
mov
jmp
and
push
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
gs
sub
inc
add
fcompl
sub
adc
clc
pop
and
mov
pop
and
outsb
lods
mov
cmc
cwtl
aas
xchg
push
xor
mov
and
int
pop
jg
ffreep
stc
in
add
call
leave
adc
pop
and
outsl
inc
jge
xchg
stc
pop
aad
outsl
test
jecxz
mov
xchg
rolb
xchg
stc
imul
lods
xchg
ret
cs
shl
mov
fwait
jbe
adc
repnz
imul
cli
adc
inc
out
scas
sbb
push
imul
sub
ffree
ljmp
mov
popf
cmp
adc
jp
loope
out
imul
sub
pop
je
les
and
incl
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xor
push
test
test
sbb
jae
int
pop
jg
ffreep
popa
pop
cmp
out
inc
sbb
push
mov
add
call
mov
dec
stc
adc
mov
fwait
in
lods
cli
mov
jle
test
mov
cmp
incl
and
mov
xor
and
lods
cwtl
stos
mov
out
xchg
stos
cli
adc
inc
out
scas
sbb
push
popa
rcrb
imul
pusha
mov
ja
cmp
adc
jmp
mov
loope
sub
movsb
or
test
and
adc
mov
push
andb
jmp
inc
mov
adcb
add
call
or
dec
xor
faddl
lock
faddl
lock
faddl
je
sub
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
or
shl
xchg
faddl
lock
faddl
leave
jnp,pn
outsl
in
mov
leave
dec
fdivr
jle
flds
adc
jge
pop
adc
dec
pop
adc
dec
add
call
adc
dec
sub
and
loop
stos
xlat
and
fsts
xor
push
mov
stos
mov
movsb
cld
fimull
or
int3
xor
push
mov
sbb
mov
and
das
add
loop
enter
dec
inc
mov
jge
fdecstp
adc
out
imul
jb
xchg
out
mov
faddl
mov
shl
inc
jno
sub
mov
push
lods
hlt
xor
mov
inc
sti
jp
mov
call
in
xor
clc
ret
pop
pop
call
mov
into
inc
call
ja
or
aaa
fistpll
lock
or
inc
hlt
imul
pushf
imul
shlb
jecxz
lods
jno
aas
mov
and
pop
pop
sub
adc
clc
pop
and
cld
inc
sub
push
pop
and
outsb
lods
mov
cmc
cwtl
aas
xchg
push
xor
mov
and
int
pop
jg
ffreep
stc
in
cmpsl
leave
adc
inc
sbb
push
sbb
call
cmp
loope
jo
sbb
scas
es
repz
dec
pop
dec
das
push
xor
addr16
or
xchg
ret
cs
shl
mov
fwait
jbe
adc
repnz
imul
cli
adc
inc
out
scas
sbb
push
popa
rcrb
imul
xchg
sbb
mov
push
xchg
mov
scas
or
mov
idiv
xchg
out
cmpsl
rcrl
clc
push
sahf
sahf
sub
pop
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
repnz
or
jo
jl
fdivr
fmull
pop
test
and
or
stc
in
cmpsl
leave
adc
inc
sbb
push
sbb
pop
test
push
in
mov
mov
xor
mov
test
mov
cmp
incl
call
icebp
and
mov
xor
and
lods
cwtl
stos
mov
pop
or
mov
mov
loop
mov
xchg
push
xchg
mov
jg
adc
insl
push
or
jge
add
sub
movsb
or
test
and
adc
mov
push
andb
jmp
inc
mov
xor
faddl
lock
faddl
je
sub
adc
sub
in
fstps
in
fstps
add
call
in
fstps
in
fstps
inc
adc
push
ficomps
sub
cwtl
inc
adc
push
ficomps
sub
cwtl
inc
adc
push
scas
sub
in
fstps
in
fstps
sbb
nop
pop
jns
shrb
inc
xchg
mov
jb
fidivrl
and
stos
jg
and
stos
jg
and
stos
jg
and
jp
lret
inc
loope
or
push
outsb
cmpsb
mov
lcall
add
call
xchg
test
mov
push
loopne
add
cmp
mov
and
sub
js
ljmp
jo
shlb
sub
test
push
mov
out
dec
lds
in
subl
xchg
fimull
out
adc
jecxz
out
cwtl
rclb
lret
pop
jg
addr16
es
aad
outsl
inc
xchg
outsb
xor
cld
bound
mov
xorl
repz
mov
xor
push
dec
icebp
inc
stos
xchg
jge
jle
mov
pop
add
call
pop
iret
jnp
aam
fldenv
fbld
scas
test
adcl
jmp
jae
xchg
jecxz
lods
mov
inc
outsl
pop
cli
or
test
mov
mov
xor
push
shrl
cld
inc
sub
push
add
je
lret
mov
push
push
andb
push
mov
and
fistpl
clc
cmp
cmpsl
leave
adc
inc
sbb
push
sbb
pop
test
sbb
scas
es
and
rolb
add
call
stc
imul
lods
lret
jo
ss
fcoms
sbb
mov
dec
adc
repnz
imul
cli
in
decb
rcrb
ja
cwtl
dec
sub
popf
inc
in
fldcw
adc
mov
repz
dec
les
and
pop
dec
into
cli
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
rcrl
cmp
inc
pop
les
mov
aaa
pushf
sti
inc
lret
mov
ljmp
jge
sbb
pop
test
test
mov
xor
mov
test
mov
cmp
jg
out
out
mov
stos
mov
add
lods
cwtl
stos
mov
pop
or
mov
add
call
mov
loop
mov
xchg
push
xchg
mov
push
stc
jmp
mov
loope
int3
test
and
adc
mov
push
andb
jmp
inc
mov
xor
faddl
outsb
mov
push
add
mov
in
fstps
in
fstps
inc
adc
push
xchg
scas
mov
xchg
ljmp
jo
mov
mov
mov
mov
mov
mov
mov
add
call
jnp
xchg
push
mov
mov
mov
mov
mov
mov
mov
inc
push
cmp
lret
aam
insl
mov
pop
rolb
cmpsb
pop
aaa
stc
les
insb
xor
outsl
fwait
les
insb
xor
outsl
fwait
les
insb
xor
outsl
fwait
les
insb
xor
outsl
fwait
dec
jne
fisubl
lret
jnp
sub
shll
fistpll
out
ljmp
cld
push
jmp
add
sub
jns
or
loope
pushf
rcrb
aam
stos
mov
movsb
cld
fiaddl
add
call
jbe
mov
fldl
mov
mov
stos
cmovno
xchg
mov
dec
add
idiv
test
hlt
xchg
mov
mov
nop
or
mov
int
add
xor
jmp
mov
into
rcll
out
lock
mov
push
push
fiaddl
mull
stos
push
mov
xchg
repz
cmp
dec
inc
sbb
and
mov
mov
enter
lds
jns
insl
fistpll
lock
adc
arpl
cmp
add
call
push
push
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
lock
jmp
jb
or
cs
into
jge
lret
sub
icebp
push
shrl
and
adc
je
lret
mov
push
push
andb
push
mov
and
int
pop
jg
ffreep
stc
in
cmpsl
leave
adc
inc
sbb
push
xchg
stc
pop
aad
outsl
test
jecxz
mov
movsb
addr16
rcr
ficompl
mov
into
jp
lahf
lret
jo
ss
fcoms
call
in
dec
ret
mov
jmp
pusha
ljmp
leave
subb
int3
test
decb
rcrb
mov
jmp
dec
mov
lret
add
enter
sub
cmp
in
fstpl
cmp
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
bound
cld
push
add
lods
mov
insl
lds
push
jl
out
int
dec
mov
push
inc
loope
jo
sbb
scas
es
repz
dec
pop
dec
das
daa
pop
sub
mov
hlt
mov
jp
ret
cs
mov
xor
and
lods
cwtl
stos
mov
pop
or
mov
cld
js
into
jbe
and
cmp
adc
lcall
sub
movsb
or
xchg
add
call
xchg
loope
mov
adc
dec
mov
leave
or
dec
xor
faddl
outsb
mov
push
add
mov
in
fstps
cmp
push
mov
ljmp
pop
sbb
adc
scas
pop
sti
push
push
in
pop
push
mov
in
pop
push
mov
in
pop
push
mov
in
pop
push
mov
in
pop
push
mov
in
pop
push
mov
in
pop
push
mov
in
pop
push
mov
call
aam
push
add
aam
fidivrs
or
dec
arpl
adc
gs
pop
popl
pushf
jge
or
pop
mov
mov
pop
mov
mov
pop
mov
mov
pop
cli
loop
jmp
shll
fistpll
out
ljmp
shll
fistpll
out
ljmp
jb
and
or
dec
jbe
in
addr16
mov
mov
ja
push
loopne
add
cmp
lahf
int3
add
dec
aas
lcall
inc
jae
jge
add
push
add
call
cmp
jmp
pop
loopne
mov
sbb
pop
test
and
sbb
or
mov
adcl
mov
adcb
cmp
leave
lret
push
mov
scas
push
sbb
xor
es
mov
cwtl
idivl
or
mov
push
into
inc
call
ja
or
aaa
fistpll
lock
or
jmp
and
cmp
stos
shlb
jecxz
lods
stos
shlb
add
call
jecxz
lods
sahf
gs
lea
inc
push
loopne,pn
stos
or
sbb
js
movsl
sub
clc
fldcw
xor
push
shrl
add
xchg
push
add
je
lret
mov
inc
pop
add
or
push
xor
mov
and
push
shlb
lret
dec
jg
out
aam
inc
sbb
push
xchg
stc
pop
aad
outsl
test
addr16
test
rcll
in
add
imul
lods
lret
jo
ss
fcoms
ret
mov
jmp
pusha
ljmp
leave
add
call
subb
int3
test
inc
fistps
push
mov
enter
cld
stos
sbb
pop
xor
or
repnz
cmp
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cld
push
outsl
pop
hlt
add
and
arpl
cld
mov
call
fidivrl
in
loopne
add
inc
out
dec
xchg
pop
outsb
jbe
push
jo
sbb
scas
rcll
in
add
imul
lods
xchg
ret
cs
shl
mov
add
lods
cwtl
stos
mov
pop
or
mov
jns
test
adcb
arpl
sbb
add
sub
movsb
or
xchg
adc
enter
pushw
lods
jmp
xchg
jecxz
outsb
mov
push
add
mov
add
call
in
fstps
cmp
jle
xchg
pop
fdivl
mov
mov
lea
scas
pop
sti
push
push
in
pop
push
mov
in
pop
push
mov
cmp
jp
sbb
jp
sbb
jp
push
leave
pop
es
mov
pop
es
mov
pop
es
mov
pop
es
mov
pop
es
mov
repnz
ljmp
int3
data16
leave
in
lcall
xchg
icebp
loop
xchg
add
call
sbb
gs
xor
gs
xor
gs
xor
gs
les
mov
lcall
cmp
mov
test
ja
xor
jp
out
ljmp
shll
fistpll
out
ljmp
notb
ret
loop
pop
cmp
sub
ficomps
rolb
sbb
ret
loopne
sbb
pop
popf
push
nop
xchg
popa
fmul
pop
jecxz
leave
pop
addb
ds
roll
jae
xor
out
push
fcmove
and
subb
push
xor
sub
xchg
mov
xchg
add
call
mov
out
push
inc
es
sub
adcl
jp
push
arpl
das
push
dec
aaa
pushf
ss
jp,pn
rcrb
jp
pop
inc
stos
enter
xchg
push
mov
mov
fs
mov
sti
int
jmp
jns
aam
jle
mov
pop
ret
jnp
aam
fldenv
fbld
mov
and
push
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
andl
sbb
stos
or
call
dec
cwtl
mov
mov
stc
gs
dec
jne
sbb
js
xchg
push
mov
loop
imul
push
andb
push
mov
cmc
fcmovnu
pop
xchg
cmp
cmpsl
leave
adc
pop
and
outsl
inc
jge
xchg
stc
pop
aad
outsl
cs
push
jo
sbb
scas
es
repz
dec
pop
dec
das
pop
test
sub
xchg
fcoms
iret
incl
and
mov
xor
mov
nop
inc
jb,pn
push
sbbb
add
call
in
add
push
add
mov
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
out
push
or
xchg
sub
lahf
mov
mov
test
ror
inc
sbb
push
sbb
pop
test
scas
stos
int
add
call
test
sub
jp
ret
cs
loope
sbb
mov
xchg
lods
cwtl
stos
mov
dec
add
test
ret
mov
pusha
mov
ja
cmp
adc
lcall
and
adc
mov
leave
or
dec
xor
faddl
sbb
and
xchg
push
insl
jmp
sub
in
fstps
mov
xchg
ljmp
mov
lea
scas
pop
sti
push
push
in
pop
push
mov
call
lret
cmp
jp
sbb
jp
push
leave
pop
es
mov
pop
es
mov
push
arpl
fstl
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
shll
ret
mov
int
jb
out
dec
mov
int3
xor
xorl
mov
inc
loop
and
sti
pop
sub
pop
mov
das
cli
cmpl
cli
orl
mov
add
call
pop
jp
xchg
push
gs
fisubs
mov
xchg
popa
dec
lods
fdivs
adc
es
cmp
stos
xor
fistpl
mov
sbb
mov
add
jnp
mov
mov
push
daa
fldcw
test
push
jne
adcb
push
movsb
andl
insl
pushf
mov
jae
xor
out
push
push
jo
cmp
xor
mov
scas
nop
sbb
addr16
ret
pop
fdivrs
jne
shlb
add
call
pushf
pop
nop
popf
and
dec
lahf
xor
insb
inc
sub
outsl
mov
xchg
cld
jp
add
mov
or
movl
inc
cmp
lds
jns
insl
fistpll
lock
or
inc
hlt
imul
pushf
imul
shlb
jecxz
lods
test
jns
and
pop
andl
sbb
pusha
xor
arpl
mov
into
jge
lret
cltd
stc
gs
dec
add
call
and
adc
loop
imul
push
andb
push
mov
and
fistpl
clc
cmp
cmpsl
leave
adc
pop
cmpl
xchg
stc
pop
aad
outsl
test
addr16
test
rcll
in
add
imul
lods
test
mov
cmp
jg
out
out
mov
adc
aaa
sub
cmp
mov
cmp
mov
stos
lahf
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jl
out
or
call
scas
jl
push
jnp
mov
lcall
mov
sbb
fistpl
jo
ss
fcoms
dec
loopne
adc
push
fwait
jbe
adc
repnz
imul
call
mov
xchg
stos
cli
cmpsl
shlb
ret
mov
test
jbe
and
cmp
adc
lcall
and
adc
mov
leave
or
dec
xor
faddl
sbb
and
xchg
push
insl
jmp
jmp
inc
cmp
xor
inc
jl
pop
sbb
sti
push
push
in
pop
push
mov
cmp
jp
jecxz
into
xchg
int3
fisubrs
push
leave
pop
es
mov
and
mov
mov
add
call
stos
pop
test
shll
ret
pop
int3
shll
ret
pop
int3
shll
ret
pop
int3
jl
jnp
sti
cmp
jnp
sti
cmp
sub
lahf
lods
mov
push
movsb
ds
mov
das
cli
cmpl
cli
cmpl
cli
cmpl
cli
cmpl
cli
cmpl
cli
addl
pop
mov
dec
call
add
fisttpll
test
adc
leave
lods
fdivs
call
popa
dec
lods
fdivs
imulb
in
insb
lret
ds
sahf
notb
ret
mov
dec
loopne
leave
lahf
fdivs
in
sbb
xchg
jl
cwtl
insb
mov
push
dec
inc
and
adc
aaa
cmp
test
stos
dec
push
jne
mov
xor
sbb
cmp
mov
lds
cmc
pop
push
dec
bound
inc
push
add
lods
xor
pop
inc
lds
pusha
rcr
mull
xor
fmuls
add
call
js
into
push
dec
das
cmp
adc
scas
in
in
jb
fdiv
jb
dec
cmp
sarl
ret
push
adc
mov
push
into
ret
jnp
aam
fldenv
fbld
mov
and
push
mov
jmp
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
test
jns
and
pop
shrl
sbb
sub
mov
into
jge
lret
push
movsb
and
shlb
sbb
adc
push
scas
inc
ret
mov
add
call
shll
pop
ja
xor
mov
and
push
shlb
ja
mov
pop
int3
inc
sbb
push
sbb
pop
test
sbb
scas
es
imul
int
push
and
mov
into
jp
lahf
test
mov
cmp
jg
out
out
pop
data16
dec
mov
int3
jnp
xor
jl
stc
inc
adc
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
dec
xchg
lea
fnstcw
daa
cmpsb
cld
jmp
add
lret
addr16
rcr
ficompl
sbb
imul
sti
cld
or
pop
icebp
movsl
or
jns
pop
inc
movsb
imul
cli
adc
inc
out
scas
sbb
push
mov
loop
je
popf
cmp
adc
add
call
add
int3
test
and
adc
mov
ret
jecxz
outsb
mov
push
add
mov
in
fstps
mov
xchg
ljmp
mov
in
pop
push
mov
cmp
arpl
sbb
inc
into
xchg
int3
fisubrs
push
leave
pop
es
mov
and
stos
pop
test
shll
ret
pop
int3
pop
sahf
rolb
and
jnp
sti
cmp
jnp
sti
cmp
jnp
push
cmp
add
call
fwait
push
cmp
jnp
push
cmp
jno
in
inc
sbb
dec
insl
stos
cmp
pop
inc
jl
fadds
sarb
cli
sbbl
and
adc
fsubrl
andl
fsubrl
andl
fsubrl
andl
fsubrl
andl
push
leave
add
jno
in
lds
fsubrp
lds
fsubrp
lds
fdivrp
leave
lods
fdivs
leave
lods
fdivs
adc
es
clc
outsb
frstor
out
mov
add
call
cmp
jbe
unpckhps
push
in
mov
mov
mov
fucompp
faddl
ret
lret
aas
jecxz
sti
lea
xchg
mov
mov
or
sarl
sub
pop
call
test
and
xor
popf
cli
out
dec
subl
jbe
out
fsubrp
jnp
xchg
rorl
sub
inc
dec
sbb
push
xchg
fs
mov
push
sub
sti
dec
adcl
in
dec
inc
cltd
fists
gs
add
add
call
loope
lds
imul
or
and
push
jns
insl
fistpll
lock
or
inc
hlt
imul
pushf
imul
shlb
jecxz
lods
stos
shlb
jecxz
lods
test
jns
and
pop
shrl
sbb
sub
mov
into
jge
lret
cltd
stc
gs
dec
inc
and
adc
push
scas
inc
ret
mov
rol
pop
pop
ja
add
push
mov
cmc
fcmovnu
pop
xchg
add
call
cmp
cmpsl
leave
adc
inc
sbb
push
xchg
stc
pop
aad
outsl
cs
push
jo
sbb
scas
rcll
in
add
in
lods
cli
mov
jle
test
mov
cmp
dec
sub
adc
mov
jecxz
adc
pop
jle
lock
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lock
das
aaa
dec
pushf
lret
or
daa
cmpsb
cld
lret
insl
negb
out
mov
addb
inc
push
push
subl
notl
out
mov
sbb
mov
inc
out
scas
sbb
push
mov
loop
je
popf
cmp
adc
lcall
and
adc
mov
ret
jecxz
outsb
mov
push
add
add
call
mov
in
fstps
mov
xchg
ljmp
mov
in
pop
push
mov
cmp
jp
push
leave
pop
es
mov
and
stos
pop
test
shll
ret
pop
int3
jl
jnp
sti
cmp
push
xor
push
or
push
cmp
jnp
push
cmp
in
sbb
stos
or
getsec
lret
ss
stos
popa
lret
mov
xor
cmp
shl
scas
push
call
sbb
jmp
daa
add
andl
insb
dec
bound
cmp
mov
cmp
jge
xlat
inc
mov
cmp
jge
xlat
inc
mov
cmp
jge
xlat
inc
mov
jnp
call
dec
pop
inc
aas
cmp
xor
or
push
call
add
or
ficomps
fisttpll
test
adc
leave
lods
fdivs
mov
aam
stc
mov
cli
into
push
inc
ret
xchg
negb
shlb
pop
sbb
mov
add
call
ss
xchg
popf
pop
fsub
xchg
addr16
out
cmp
pop
jnp
aas
pop
mov
stc
jne
fs
add
pop
into
ror
push
jne
pop
mov
mov
out
out
mov
mov
mov
addr16
sbb
aam
rorl
inc
cmp
mov
adc
and
jecxz
rolb
test
lret
adc
gs
sbb
in
and
push
pop
jb
cmp
sub
pop
add
xchg
mov
push
into
add
call
pop
iret
jnp
aam
fldenv
fbld
scas
test
adcl
jmp
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
inc
outsl
pop
cli
or
add
fcompl
sub
mov
into
jge
lret
jmp
sbb
sbb
and
loop
imul
push
andb
push
mov
cmc
incl
shlb
lret
dec
jg
out
aam
inc
sbb
add
call
push
xchg
stc
pop
aad
outsl
cs
push
jo
sbb
scas
rcll
in
add
and
rolb
xchg
stc
sbb
dec
ja
inc
xchg
pslld
jg
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
loopne
or
adc
add
call
pop
loope
popf
mov
in
jb
jecxz
mov
mov
lret
or
outsl
mov
pusha
mov
jae,pt
dec
lods
stos
clc
adc
int3
in
decb
rcrb
nop
imul
push
xchg
mov
sbb
add
sub
movsb
or
mov
ret
jecxz
outsb
mov
push
add
mov
cmp
xor
inc
jl
pop
sbb
sti
push
push
int
cmp
arpl
add
call
jecxz
into
xchg
int3
fisubrs
sbb
push
arpl
fstl
mov
mov
mov
shll
ret
pop
int3
jl
jnp
sti
cmp
push
xor
push
or
push
cmp
in
sbb
int3
ss
or
es
push
out
xchg
in
adc
mov
mov
cmp
test
mov
in
mov
shrb
sbb
cmpsb
and
rcl
inc
mov
cmp
jge
xlat
inc
nop
mov
add
call
inc
stos
out
add
push
shll
push
shll
push
shll
sar
pop
jp
or
push
mov
call
or
push
mov
call
or
push
call
add
lcall
repz
orl
aam
roll
pop
jns
imul
mov
loopne
cmp
mov
rorb
daa
in
sbb
adc
sbb
pop
and
mov
xchg
popf
adc
ds
pop
mov
call
mov
sub
shl
je
and
pop
loopne
xchg
pop
out
outsb
mov
mov
xchg
movsl
sbb
fldl
xor
imul
jle
and
jne
inc
jae
in
cmp
jb
pop
fdivr
stos
mov
adcl
mov
xor
cmovno
popa
aas
push
sub
out
movsb
push
inc
aam
cli
xchg
add
stos
xor
orl
rclb
fistpll
lock
or
inc
add
call
imul
pushf
imul
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
inc
outsl
pop
cli
or
push
iret
sub
and
pop
pop
sub
adc
clc
pop
and
sub
loop
mov
mov
push
shll
push
scas
inc
ret
mov
rol
pop
pop
ja
add
push
mov
cmc
incl
shlb
stc
in
cmpsl
leave
adc
pop
and
outsl
inc
jge
xchg
stc
pop
aad
outsl
cs
push
jo
sbb
scas
add
call
pop
in
add
sub
idiv
call
jmp
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
jnp
pop
test
sub
cmp
clc
sub
jmp
push
push
inc
stos
adc
call
test
pop
dec
and
sbb
push
push
jg
mov
je
sarb
andl
pop
mov
mov
aaa
stos
or
out
dec
sub
movsb
or
mov
ret
jecxz
outsb
mov
push
add
mov
cmp
xor
inc
jl
pop
sbb
sti
push
push
int
cmp
arpl
cwtl
push
leave
pop
es
mov
and
stos
pop
test
pop
sahf
rolb
and
add
call
xor
push
or
push
cmp
stos
or
getsec
lret
ss
push
out
xchg
out
xor
stc
enter
inc
xor
das
in
stos
add
xchg
xor
das
in
stos
add
xchg
dec
mov
loop
cmpsl
in
add
add
mov
out
lret
stos
es
dec
fildl
sbb
out
add
push
shll
push
shll
push
shll
lods
aam
push
cltd
pop
lcall
add
call
ret
test
in
push
push
jae
out
cmpb
lea
or
push
mov
call
or
push
jo
sub
je
pop
aam
push
jle
int3
mov
sbb
jle
int3
mov
sbb
or
inc
aam
jnp
pop
pushf
fwait
out
roll
add
xchg
sub
jmp
mov
adc
jp
mov
fcomi
adc
mov
clc
mov
in
or
pop
std
pop
inc
aam
lods
lcall
and
mov
dec
add
call
hlt
push
cmpsl
sbb
out
mov
repz
fsubrl
adcb
shrb
or
push
push
loope
or
iret
jg
inc
test
in
inc
loopne
jns
loopne
mul
repz
and
xor
push
stos
cmp
xacquire
mov
mov
int
push
aas
arpl
dec
aaa
sbb
repz
mov
push
into
inc
call
ja
or
aaa
cmpsb
sub
push
adc
arpl
mov
jmp
and
push
mov
jmp
jae
xchg
jecxz
lods
stos
shlb
add
call
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
lock
incl
iret
sub
and
pop
pop
sub
adc
clc
pop
and
sub
loop
mov
inc
and
adc
push
scas
inc
ret
lods
mov
pop
out
add
push
mov
cmc
incl
shlb
stc
in
cmpsl
leave
adc
pop
and
outsl
inc
jge
xchg
stc
pop
aad
outsl
cs
push
jo
sbb
scas
es
movsb
enter
dec
xlat
out
inc
sub
cltd
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
gs
fdivs
cld
insb
popf
sub
and
push
mov
js
and
sub
popf
leave
loope
imul
jge
sub
orl
mov
aam
add
call
je
js
into
jbe
and
dec
fwait
clc
sub
movsb
or
xchg
adc
push
or
or
dec
subb
push
add
mov
cmp
xor
inc
jl
pop
sbb
sti
push
push
cmp
cmp
jp
push
leave
pop
es
mov
and
jno
ret
pop
int3
jl
jnp
sti
cmp
jnp
push
cmp
in
sbb
int3
ss
gs
adc
mov
enter
call
or
das
in
stos
add
xchg
lock
out
mov
cli
out
inc
jne
loopne
sti
cli
out
inc
jne
loopne
sti
aas
imul
lret
ret
lcall
mov
ret
or
dec
fildl
sbb
out
add
push
shll
cwtl
push
dec
jg
inc
movsb
lock
or
cmp
scas
or
cmp
push
icebp
and
rcl
push
mov
fistpl
mov
mov
aaa
mov
mov
jae
out
cmpb
iret
mov
add
call
mov
pushf
shrl
mov
push
jle
int3
mov
sbb
jle
int3
mov
sbb
or
inc
aam
orl
aam
roll
pop
jns
cmpsl
iret
and
mov
ret
testb
adc
jb
mov
sti
aad
push
addl
mov
fcomi
add
cmp
push
leave
pop
add
ja
in
jb
out
add
fisubs
jl
mov
out
jle
jne
inc
clc
std
aam
and
add
push
faddp
mov
je
and
xchg
add
call
stos
icebp
sub
scas
mov
into
mov
mov
or
xlat
dec
mov
sub
cltd
add
lods
cwtl
dec
mov
mov
movsl
cmp
add
add
repz
sbb
push
add
xchg
xchg
add
stos
xor
orl
rclb
fistpll
lock
or
jmp
and
cmp
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
add
call
lods
lock
pushl
aas
mov
and
pop
pop
sub
adc
clc
pop
and
popa
jg
imul
sbb
and
push
scas
inc
ret
mov
rol
pop
pop
ja
xor
mov
and
push
shlb
stc
in
cmpsl
leave
adc
pop
and
outsl
inc
jge
xchg
stc
pop
aad
outsl
cs
mov
cltd
mov
xchg
sti
pop
xor
addr16
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
subl
lods
scas
dec
lock
iret
mov
ds
push
in
or
cld
cmp
mov
cmp
jo
inc
cwtl
cs
in
fadd
sbb
popf
inc
in
fldcw
adc
cmp
adc
jp
loope
in
xchg
adc
add
call
ljmp
outsb
mov
push
add
mov
in
fstps
jl
pop
sbb
sti
push
push
cmp
cmp
jp
push
leave
pop
es
mov
and
sahf
rolb
and
push
xor
mov
dec
enter
in
mov
outsb
getsec
xor
xchg
stc
enter
inc
xor
das
in
stos
add
xchg
cli
out
inc
jne
loopne
sti
cli
out
inc
jne
loopne
sti
sbb
ljmp
sbb
ljmp
call
xchg
push
pop
inc
fildl
sbb
add
or
fildll
loopne
out
xor
jg
xchg
xor
cmp
lahf
and
fcoml
lock
or
cmp
scas
or
cmp
push
int
lods
xor
js
int
lods
xor
stc
xchg
out
mov
clc
aam
popa
inc
mov
mov
aaa
mov
mov
aaa
mov
mov
subl
and
push
in
mov
cmp
ds
mov
mov
sahf
jnp
push
jle
add
call
mov
sbb
frstor
push
cmp
orl
aam
jnp
pop
pushf
fwait
out
roll
add
xchg
in
jb
lret
in
and
loope
scas
xor
push
lods
xor
cmp
repz
out
xor
rcll
mov
cmp
adc
add
xlat
insl
outsl
mov
imul
clc
inc
loopne
pop
mov
test
pop
jbe
iret
push
aad
outsl
das
sbb
vmwrite
out
pop
or
dec
push
jg
add
call
in
add
loope
sbb
jne
cs
lea
lds
mov
clc
imul
pop
test
daa
stc
dec
aaa
sbb
repz
mov
push
into
ret
jnp
aam
fldenv
fbld
mov
and
push
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
sahf
gs
lea
inc
push
loopne,pn
stos
or
add
call
and
pop
pop
sub
adc
clc
pop
and
cld
inc
sub
push
mov
push
shll
push
scas
inc
ret
mov
rol
pop
pop
ja
add
push
mov
cmc
fcmovnu
pop
xchg
cmp
cmpsl
leave
adc
jmp
scas
and
fisubs
mov
jae
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
loopne
int
cld
rcrb
aaa
cmpsb
or
cwtl
push
sub
pop
fsubrl
add
test
add
sbb
ficomps
add
jg
pop
nop
lock
insb
mov
inc
dec
cmpsl
jo
or
jge
add
int3
test
and
enter
pushw
lods
jmp
popa
pop
cwtl
negb
fisubs
xchg
push
insl
jmp
outsb
aam
stos
cmp
fisttps
call
scas
pop
sti
push
push
cmp
cmp
jp
push
leave
pop
es
mov
test
pop
sahf
rolb
and
push
xor
mov
dec
enter
in
lret
ss
xor
or
cmp
das
in
stos
add
xchg
lock
out
mov
jmp
int
dec
ret
sbb
ljmp
dec
clc
xchg
mov
lods
xchg
xchg
stos
mov
push
jnp
iret
test
rorb
lods
xchg
icebp
jp
xchg
fwait
xlat
sub
add
call
orb
movsb
lock
or
cmp
push
int
lods
xor
stc
xchg
out
mov
clc
fdivs
or
frstpm(287
dec
arpl
and
dec
arpl
dec
arpl
rorl
dec
clc
xor
dec
ret
mov
subl
and
or
ljmp
pminsw
enter
test
ds
jle
int3
mov
sbb
jle
int3
mov
sbb
or
inc
aam
jnp
pop
pushf
movl
call
out
roll
add
xchg
cli
roll
pop
orb
lods
xchg
and
sub
xchg
push
push
cli
push
dec
pusha
xchg
fisttpll
mov
lods
xor
cmp
lahf
push
push
fstpt
ja
fwait
mov
xor
push
adc
dec
popa
iret
inc
fimull
ret
or
stos
icebp
js
stos
bound
stc
jmp
inc
ret
loope
mov
cmp
adc
daa
and
rorl
jns
in
mov
in
sub
add
call
mov
mov
and
pop
and
fsub
mov
aad
into
push
add
xchg
xchg
add
stos
xor
lds
jns
insl
fistpll
lock
or
jmp
and
cmp
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
sahf
gs
lea
inc
push
loopne,pn
stos
or
mov
mov
xor
push
shrl
cld
add
call
sub
push
mov
push
shll
push
scas
inc
ret
test
sbb
or
add
push
mov
cmc
fcmovnu
pop
xchg
andb
fistl
int
cmpsb
test
dec
les
and
push
or
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
pop
inc
std
popf
test
rdmsr
push
outsl
js
sbb
sbb
into
sbb
xchg
lock
xchg
gs
push
es
lea
jne
mov
lds
cmp
jns
adc
push
sbb
cmp
pushf
dec
ss
mov
dec
sub
movsb
or
mov
ret
jecxz
sbb
and
xchg
push
insl
jmp
push
mov
ljmp
push
push
int
cmp
arpl
cwtl
push
leave
pop
es
mov
test
pop
sahf
rolb
call
cmp
fs
loope
jp
pop
sub
xor
xchg
stc
enter
inc
xor
das
in
stos
add
xchg
cli
out
inc
jne
loopne
sti
sbb
ljmp
dec
clc
xchg
mov
hlt
and
aas
mov
sahf
dec
stos
mov
push
test
cmp
or
mov
fimuls
jmp
idiv
das
out
lea
lock
or
cmp
push
int
lods
xor
stc
xchg
out
mov
clc
adc
dec
arpl
and
call
mov
in
arpl
sub
in
in
mov
sbb
in
mov
sbb
insl
out
mov
dec
dec
clc
xor
icebp
adc
fisubl
add
out
or
ljmp
pminsw
cmpsl
jne
push
in
mov
cmp
ds
mov
mov
sahf
jnp
push
jle
int3
mov
sbb
frstor
push
cmp
orl
aam
roll
pop
jns
adc
cli
roll
pop
orb
into
sbb
std
sub
and
add
call
out
mov
shl
sub
icebp
imull
xchg
lock
adc
xor
aad
out
stos
dec
lret
fwait
int
nop
push
dec
pop
jmp
or
and
dec
loop
mov
inc
inc
es
pop
jae
imul
pop
bound
enter
push
stos
scas
lcall
jb
stos
gs
dec
mov
push
insb
mov
pop
das
out
adc
into
xchg
xchg
push
int3
xchg
pop
or
sub
testb
scas
cmp
mov
push
mov
add
call
stc
dec
aaa
sbb
repz
mov
push
into
ret
jnp
aam
fldenv
fbld
fistpll
push
push
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
test
jns
and
pop
sahf
gs
lea
inc
push
cs
sbb
or
or
mov
mov
push
clc
pop
and
cld
inc
sub
push
mov
push
shll
mov
add
call
cwtl
aas
xchg
lods
mov
pop
out
xor
mov
and
lcall
and
sub
fsub
clc
nop
ss
ja
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
or
push
cmp
enter
in
in
pop
push
adc
adc
mov
add
call
xchg
ficomps
or
adc
aaa
mov
adc
mov
push
loope
sti
pop
dec
mov
or
pop
sub
lods
aad
xor
xchg
adc
divl
icebp
loopne
leave
aaa
stc
adc
mov
dec
lods
xor
aaa
imul
ljmp
cwtl
push
leave
pop
es
mov
test
pop
sahf
rolb
and
push
xor
mov
outsb
getsec
xor
xchg
stc
enter
add
call
inc
lock
out
mov
jmp
int
dec
ret
hlt
mov
jno
mov
mov
mov
push
xor
push
lds
xchg
mov
or
pop
sbb
jecxz
shlb
cwtl
pop
cmp
rolb
cmp
sarb
cmpsb
add
lods
xchg
or
cmp
jg
jae
mov
fdivs
or
cmp
sbb
sub
in
mov
sbb
in
mov
sbb
sbb
fnstsw
cmp
call
add
adc
cmp
inc
adc
inc
fisubl
add
sub
movsl
ljmp
xchg
pop
add
out
or
ljmp
pminsw
enter
test
ds
jle
int3
mov
sbb
frstor
push
cmp
orl
aam
roll
pop
jns
roll
add
xchg
sub
and
jns
rclb
loop
dec
mov
lcall
jne
pop
in
dec
add
call
addr16
push
inc
pop
aad
mov
dec
cmp
add
mov
dec
xor
lds
cwtl
push
adc
hlt
sub
mov
mov
xchg
inc
call
aaa
popf
nop
frstor
mov
jnp
sbb
daa
push
sub
not
mov
adc
pop
xchg
test
push
mov
or
call
mov
inc
sti
ja
jae
pop
in
in
mov
add
stos
xor
lds
jns
insl
add
call
mov
lock
pop
cwtl
mov
and
cmp
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
test
jns
and
pop
andl
sbb
add
push
mov
mov
xor
push
shrl
cld
inc
sub
push
mov
push
shll
push
scas
inc
ret
mov
rol
pop
pop
ja
push
fnstcw
call
push
sbbb
jnp
xor
push
add
mov
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jg
dec
pusha
jo
shll
or
aam
mov
scas
imul
sahf
fcmovbe
and
mov
imulb
jns
mull
add
call
cmpsb
inc
bound
gs
gs
outsl
jge
xchg
loopne
int
pusha
push
andb
jmp
add
mov
cmp
xor
inc
jl
pop
sbb
ljmp
sbb
inc
into
xchg
int3
fisubrs
mov
mov
pop
sahf
rolb
and
push
xor
mov
outsb
getsec
xor
xchg
stc
enter
inc
cli
out
inc
jne
loopne
sti
sbb
ljmp
sbb
pushf
add
mov
push
add
call
cs
or
xor
jecxz,pn
shlb
cwtl
pop
cmp
in
jle
dec
jno
repnz
outsb
mov
sub
mov
cmp
cmpl
stc
xchg
out
mov
clc
adc
dec
arpl
fsubrs
in
mov
sbb
in
mov
sbb
jno
aam
or
or
or
or
mov
aas
pop
xchg
hlt
or
ds
outsb
xor
fisubl
add
call
popf
fisubl
add
sub
punpckhdq
sbb
daa
out
or
ljmp
mov
cmp
ds
mov
mov
sahf
jnp
push
jle
int3
mov
sbb
or
inc
aam
jnp
pop
pushf
fwait
out
roll
add
xchg
sub
and
jns
rclb
add
icebp
cmp
xchg
cmp
js
mov
jg
sahf
rolb
in
cmc
shr
loope
inc
test
bound
jo
or
push
xor
lods
jp
das
cwtl
add
call
or
mov
adc
in
adc
cmp
js
jne
addb
scas
sbb
jae
push
mov
test
imul
outsb
xchg
push
test
andb
ret
fbld
cmp
mov
adc
fcomps
mov
pusha
mov
daa
dec
and
mov
push
push
jmp
cmc
xor
mov
mov
adc
iret
jnp
aam
fldenv
fbld
fistpll
push
push
add
call
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
inc
outsl
pop
cli
or
fcompl
pusha
xor
arpl
mov
into
jge
lret
sub
icebp
push
shrl
add
xchg
push
pop
and
outsb
lods
mov
cmc
cwtl
aas
xchg
inc
decl
fldcw
xchg
ficoml
inc
dec
or
xor
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
insl
mov
push
xchg
fcmove
push
xlat
stos
pop
push
push
inc
in
orb
jno
add
or
into
and
lahf
push
cmc
loopne
std
pusha
fs
xchg
mov
xchg
cmpsl
insb
xchg
jbe
xchg
ja
inc
push
divl
call
jecxz
sbb
and
xchg
push
insl
jmp
outsb
aam
stos
cmp
fisttps
sti
push
push
sbb
inc
into
xchg
int3
fisubrs
sbb
push
arpl
fst
jno
ret
pop
int3
mov
loope
jp
aam
or
getsec
xor
xchg
das
in
stos
add
xchg
cli
out
inc
jne
loopne
sti
sbb
ljmp
sbb
pushf
add
mov
push
mov
in
or
daa
shlb
cwtl
pop
cmp
in
jle
dec
imulb
jne
mov
add
call
jne
mov
mov
push
xor
pop
xchg
imul
add
mov
jnp
lcall
cmp
sbb
sbb
in
mov
sbb
jno
aam
or
or
pop
aam
out
inc
mov
cmp
xchg
loopne
lea
jp
mov
ss
sub
sti
jno
outsb
pop
xlat
xchg
jno
outsb
pop
xlat
ja
push
sub
fisubl
add
sub
add
call
mov
pminsw
daa
out
or
ljmp
enter
mov
fbstp
out
imul
sub
mov
shrb
int
or
shrb
int
pop
arpl
mov
stos
dec
jnp
dec
sbb
cwtl
xchg
sti
dec
loop
or
fsub
add
icebp
cmp
xchg
cmp
clc
push
sub
out
adc
fisubl
xchg
push
add
sbb
mov
pop
js
dec
loopne
int
sbb
cs
popf
xchg
xchg
test
sub
or
push
xor
lods
mov
movsl
add
call
negl
push
insl
aad
fiaddl
gs
movsl
or
fistpll
xor
int3
or
aad
dec
das
push
movsb
push
and
mov
xor
test
mov
inc
sti
ja
jae
pop
in
in
mov
movsl
cltd
adc
inc
cmp
ja
or
aaa
cmpsb
sub
push
adc
arpl
mov
jmp
and
push
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
add
call
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
inc
outsl
pop
cli
or
add
fcompl
sub
mov
into
jge
lret
sub
icebp
push
shrl
add
xchg
push
or
fistpl
int
fstps
loopne
jle
sub
test
stos
push
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
ret
xchg
daa
mov
or
mov
das
dec
xchg
jae
bound
negl
into
in
leave
or
cmpsl
cli
sbb
ffree
je
rorl
mov
xchg
outsl
cmp
aad
mov
in
mov
out
dec
inc
int
aad
loopne
leave
aaa
stc
adc
mov
dec
lods
xor
aaa
imul
sbb
add
call
jp
sbb
push
arpl
fucomp
stos
pop
test
mov
loope
jp
pop
sub
xor
xchg
stc
enter
inc
cli
out
inc
jne
loopne
sti
sbb
ljmp
hlt
and
aas
mov
sahf
dec
test
cmp
or
xor
cs
or
pop
and
jg
pop
mov
pushf
inc
es
addb
jecxz
movsb
mov
hlt
mov
inc
fistpl
pop
mov
push
popf
mov
neg
mov
lods
mov
call
loope
test
in
mov
sbb
sbb
fnsave
fistpll
pop
push
test
jbe
mov
cmp
xchg
leave
ljmp
mov
xor
cmpsl
sarb
out
mov
outsl
pop
pushf
enter
addb
pop
xlat
xchg
jno
outsb
pop
xlat
xchg
jno
outsb
pop
xlat
xchg
jno
outsb
pop
xlat
ja
push
sub
fisubl
add
cmpsb
sub
mov
fwait
roll
ja,pn
hlt
data16
call
xor
and
loop
imul
daa
call
mov
dec
rcr
pusha
xor
or
aad
sbb
enter
test
add
inc
pusha
out
sub
call
outsb
xorl
mov
out
mov
xor
xchg
mov
addl
jno
mov
sti
mov
dec
pop
mov
pop
in
inc
leave
xchg
push
sbb
cmp
sbb
call
xchg
aad
and
push
and
mov
jp
out
ljmp
xchg
add
fistpl
xor
cs
mov
sahf
dec
mov
inc
sti
ja
push
jmp
cmc
xor
mov
mov
shrd
pop
fistpll
lock
or
jmp
and
cmp
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
add
call
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
mov
cmp
add
fcompl
sub
mov
into
jge
lret
sub
icebp
push
shrl
and
adc
pop
loopne
xchg
inc
cmp
sbb
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
in
mov
lea
xchg
loopne
jge
fcomip
jo
mov
inc
addl
loop
add
mov
icebp
xor
cltd
sub
cld
dec
lods
jno
xor
xor
pop
test
aam
imul
leave
xchg
xor
inc
jl
pop
sbb
ljmp
cwtl
push
leave
pop
es
mov
test
jl
jnp
sti
cmp
dec
enter
in
add
call
push
out
xchg
stc
enter
inc
cli
out
inc
jne
loopne
sti
hlt
mov
jno
mov
mov
and
aas
mov
sahf
dec
test
cmp
or
xor
cs
or
pop
and
scas
outsl
out
out
pop
jo
int3
jle
push
dec
adc
pusha
shrb
popf
mov
fisubs
jecxz
hlt
cli
mov
push
ret
jl
dec
fsubrs
in
mov
sbb
inc
jl,pn
sub
fiadds
test
jbe
mov
cmp
add
call
fimull
sbb
xorb
dec
lret
xor
in
dec
lret
xor
mov
in
dec
dec
jae
mov
fs
sbb
sti
jno
outsb
pop
xlat
xchg
jno
outsb
pop
xlat
xchg
jno
outsb
pop
xlat
xchg
jno
outsb
pop
xlat
xchg
jno
outsb
pop
xlat
adc
in
repnz
inc
ljmp
mov
jg
cld
cmpsl
fcoms
xchg
repz
pop
xchg
xchg
dec
pop
sub
in
lods
inc
subb
call
or
test
test
lock
add
mov
xor
aas
sbb
push
mov
cmp
popa
insb
repz
mov
push
jnp
leave
and
sub
pop
gs
lods
pop
in
jl
mov
pop
push
stos
push
xor
call
das
js
out
inc
fisubrl
fwait
mov
mov
sbb
into
push
icebp
push
mov
sbb
in
out
bound
mov
fnstcw
in
cld
push
jmp
add
fistpll
out
ljmp
shll
call
popf
out
xchg
out
sbb
rcrl
fmull
sub
and
mov
adc
sub
lock
stc
dec
aaa
sbb
repz
mov
push
into
ret
jnp
aam
fldenv
fbld
fistpll
push
push
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
add
call
mov
mov
cmp
add
pusha
xor
arpl
mov
into
jge
lret
mov
mov
push
jb
sbb
stc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
add
call
repz
clc
ffreep
push
insl
sbb
xor
gs
sub
loope
adc
out
xchg
loope
das
dec
int3
xor
inc
xchg
add
sbb
es
add
jge
rclb
outsb
aam
stos
cmp
fisttps
sti
push
push
sbb
inc
into
xchg
int3
fisubrs
mov
mov
pop
sahf
rolb
and
jnp
push
cmp
int3
ss
test
mov
rclb
mov
sbb
ljmp
hlt
and
add
call
aas
mov
sahf
dec
test
cmp
or
cwtl
pop
cmp
add
outsl
bound
adc
addb
pop
sti
mov
mov
rolb
loop
jecxz
ret
lahf
inc
imul
or
out
push
popf
mov
jns
fldcw
in
mov
sbb
inc
jl,pn
sub
fiadds
test
jbe
cmp
add
lret
xor
in
dec
lret
xor
dec
nop
stc
test
and
xlat
cmp
out
add
call
cmp
out
jecxz
dec
shrb
or
sti
jno
outsb
pop
xlat
mov
in
xchg
les
xchg
les
xchg
les
pop
outsb
pop
xlat
clc
std
mov
lds
xchg
sub
cmp
or
mov
lods
test
lahf
xchg
bound
mov
add
orl
mov
cmp
insb
inc
adc
mov
divb
fsts
rcrl
scas
jnp
pop
xchg
mov
pushl
dec
mov
and
xchg
push
add
call
adc
jle
enter
mov
ficomps
mov
cmpl
sbb
lods
pop
in
jl
cwtl
imul
bnd
push
xor
call
das
js
out
inc
fisubrl
fwait
mov
cld
sti
jne
sub
push
mov
sbb
in
out
bound
mov
fnstcw
in
cld
push
jmp
add
fistpll
out
ljmp
rcrb
in
push
dec
push
inc
or
add
xchg
inc
loop
mov
decb
inc
ljmp
add
call
aam
mov
inc
sti
ja
sbb
push
add
xchg
xchg
add
stos
xor
lds
jns
insl
fistpll
lock
pop
cwtl
mov
and
cmp
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
mov
cmp
jbe
push
movsl
sbb
call
pop
pop
sub
test
xchg
push
je
les
and
sti
scas
loope
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jae
test
mov
dec
lea
mov
ja
inc
dec
fwait
test
and
nop
cmp
mov
add
call
push
sbb
jb
out
cmp
cwtl
jmp
imulb
sub
loop
into
jno
ret
mov
test
and
dec
mov
push
int
cmp
arpl
pop
sbb
push
arpl
fst
jno
ret
pop
int3
mov
loope
jp
aam
or
getsec
sub
or
cmp
dec
rclb
mov
sbb
ljmp
and
cs
icebp
test
cmp
or
cwtl
pop
cmp
add
outsl
bound
adc
addb
call
jnp
pop
sti
mov
mov
rolb
loop
push
rolb
sbbb
movsb
popf
cmp
cwtl
lock
into
dec
pop
xor
push
mov
sbb
inc
jl,pn
sub
fiadds
add
loopne
fimull
sbb
xorb
dec
lret
xor
dec
nop
stc
test
and
xlat
cmp
out
xlat
cmp
out
and
push
xchg
scas
add
and
lahf
adc
orl
or
mov
add
call
xchg
les
xchg
les
xchg
les
push
inc
pop
jp
sti
cmc
mov
dec
push
out
repnz
adc
mov
mov
clc
pop
adcl
mov
mov
in
mov
xor
mov
adc
or
bound
sub
jmp
dec
out
mov
dec
popf
insb
mov
cmp
cmp
call
cwtl
jns
push
fwait
mov
into
mov
inc
inc
or
sti
cmp
mov
or
add
call
pop
dec
scas
mov
inc
add
pop
gs
lods
pop
in
jl
cwtl
imul
bnd
push
xor
pusha
sbb
jge
inc
imul
sub
fwait
mov
and
push
mov
sbb
mov
jmp
push
cmpsl
mov
fnstcw
in
cld
push
jmp
add
fistpll
out
ljmp
mov
mov
fadds
mov
icebp
cwtl
data16
adc
out
sti
scas
out
mov
rorl
and
mov
push
push
jmp
cmc
xor
mov
add
call
mov
shrd
pop
fistpll
lock
or
jmp
and
cmp
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
xchg
imul
pushf
imul
rcrl
dec
ss
out
dec
sti
fcomps
lods
cmp
in
add
call
cltd
push
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
int3
int3
cmp
sbb
sbb
jmp
dec
fdivrs
mov
scas
lds
mov
sub
cmp
mov
jne
xor
cmp
imul
jae
sahf
push
add
call
mov
movsl
test
ljmp
ljmp
sbb
inc
into
xchg
int3
fisubrs
rcr
aas
jl
jnp
sti
cmp
sub
call
stos
scas
lahf
aas
push
lcall
mov
jmp
int
dec
ret
sbb
pushf
add
cs
or
xor
cs
mov
jo
int3
jle
push
dec
adc
pusha
shrb
scas
ret
lahf
inc
imul
jae
or
ja
movsl
les
call
sarl
in
out
movsb
or
mov
cmp
ss
cmp
jl,pn
sub
fiadds
add
loopne
lea
jnp
leave
ljmp
mov
xor
mov
aam
loop
sbb
xlat
cmp
out
and
in
dec
lret
xor
in
dec
lret
xor
lret
jl
xor
ja
shrb
or
mov
in
xchg
les
xchg
les
xchg
les
push
inc
pop
jp
insb
mov
iret
add
call
and
mov
add
lcall
ret
cmpl
lea
mov
adc
pop
cli
push
movsl
fcomp
jg
fisubl
test
jo
lahf
mov
das
fidivl
movsl
pusha
cmp
fldcw
lret
or
imul
int
out
push
shlb
jo
xchg
jecxz
jg
add
or
mov
ret
pushf
mov
mov
imul
jno
outsl
das
ret
dec
push
mov
inc
xchg
sarl
jge
js
xchg
repnz
call
jo
push
xor
pusha
sbb
jge
inc
imul
sub
fwait
mov
mov
daa
xchg
lret
bound
int
jmp
shr
pop
or
jne
cld
push
jmp
add
fistpll
out
ljmp
test
push
mov
clc
cmpsl
jno
jecxz
xor
popf
add
push
ljmp
dec
aam
mov
inc
sti
ja
jae
pop
in
in
mov
movsl
cltd
adc
inc
cmp
ja
or
aaa
cmpsb
sub
push
adc
arpl
add
call
mov
jmp
and
push
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
sahf
gs
lea
inc
push
cs
out
fsubrl
nop
loop
insb
cmp
fucomip
sbb
push
into
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
mov
ljmp
mov
dec
mov
jae
jge
pop
jmp
call
xchg
pop
divb
fadd
mov
mov
mov
adc
adc
dec
mov
dec
inc
sti
push
jae
sbb
sbb
lcall
jecxz
into
xchg
int3
fisubrs
sbb
add
call
push
arpl
fstpl
inc
and
and
dec
enter
in
xor
xchg
stc
enter
inc
jmp
int
dec
ret
cmp
mov
inc
std
test
cmp
or
xor
cs
mov
jo
int3
jle
push
dec
adc
pusha
shrb
scas
ret
lahf
inc
imul
jae
or
ja
movsl
les
inc
ja
popf
in
inc
xchg
xor
mov
pop
dec
out
cmp
jl,pn
sub
fiadds
add
call
mov
cmp
xchg
mov
xor
arpl
or
xlat
cmp
out
cmp
sub
dec
and
cltd
popf
ljmp
mov
xor
push
int
sbb
dec
pop
gs
mov
cmp
xchg
mov
lods
push
shrb
or
mov
in
xchg
les
xchg
les
rclb
dec
inc
int
dec
rorb
inc
add
jb
stc
rcr
loopne
lret
shll
jne
imull
sbb
adc
add
call
mov
mov
inc
pusha
ficoml
pop
loopne
add
negl
dec
lret
aad
mov
push
lret
pop
sub
je
lcall
aaa
dec
or
mov
incb
enter
mov
mov
mov
fistpl
adc
xlat
mov
popf
mulb
jg
gs
or
mov
mov
xchg
bnd
push
xor
pusha
sbb
jge
inc
imul
jge
js
lods
leave
and
call
mov
sahf
ret
call
jmp
shr
pop
or
jne
cld
push
jmp
add
mov
pop
fadds
out
rcrb
cli
add
push
dec
xor
xchg
xor
push
inc
xor
mov
es
test
mov
inc
sti
ja
sbb
push
add
xchg
xchg
add
stos
xor
lds
jns
insl
fistpll
lock
pop
cwtl
mov
and
cmp
stos
shlb
jecxz
lods
stos
rolb
call
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
test
jns
and
pop
push
cmp
outsl
out
pop
mov
adc
push
pop
dec
insb
incl
and
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
fists
test
xchg
lret
das
mov
jge
dec
fisttps
fdivs
jns
push
int3
stc
clc
cmp
add
push
nop
add
out
rcll
sub
test
jle
mov
xor
add
imul
cwtl
push
leave
pop
es
mov
test
mov
loope
jp
aam
or
getsec
and
scas
dec
add
call
stc
dec
icebp
lock
out
mov
hlt
mov
jno
mov
mov
xchg
push
call
push
pop
mov
rol
movsl
lods
aas
es
addb
pusha
shrb
scas
ret
lahf
inc
imul
pop
pop
pop
divb
shrl
push
push
aaa
xchg
jbe
std
int3
inc
ljmp
xor
cs
sub
add
loopne
in
dec
lret
xor
arpl
or
xlat
cmp
out
jns
add
call
mov
adc
ret
dec
lret
xor
test
mov
mov
add
loopne
lea
les
and
fistpll
pop
ret
jmp
and
xchg
les
xchg
les
stc
out
aam
mov
mov
insb
pusha
test
mov
insl
or
aad
push
or
pushf
fwait
or
sbb
iret
fistpl
push
call
or
lods
lods
outsl
pushf
sub
call
dec
in
test
dec
jb
cli
push
pop
out
add
mov
fs
loopne
in
rcl
cld
and
xor
std
in
lcall
call
push
loope
push
leave
mov
xchg
adc
inc
call
or
pop
lock
pop
cwtl
shll
scas
mov
mov
stos
push
xor
pusha
sbb
jge
inc
imul
jge
js
lods
leave
and
sub
xchg
test
out
pop
int
jmp
shr
pop
or
jne
add
call
cld
push
jmp
add
mov
pop
fadds
out
rcrb
cli
add
clc
cmpsl
jno
aam
leave
int3
scas
jmp
into
mov
les
cmc
imul
mov
adc
sub
lock
stc
dec
aaa
sbb
repz
movsb
fistpll
lock
or
jmp
and
cmp
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
add
call
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
int3
mov
loope
or
sahf
enter
ficoms
clc
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
cmp
sti
inc
adc
idivb
pop
mov
inc
dec
stos
cmp
adcl
cmpb
mov
pop
popa
xchg
insl
mov
push
fwait
sbb
dec
adc
jle
repnz
sbb
push
mov
xchg
add
cmp
mov
mov
mov
pop
sahf
rolb
and
dec
enter
in
call
stos
scas
lahf
aas
push
lcall
mov
jmp
int
dec
ret
hlt
and
aas
mov
sahf
dec
mov
in
add
call
or
or
pop
and
adc
addb
pop
sti
mov
scas
ret
lahf
inc
imul
pop
pop
pop
divb
shrl
push
push
aaa
xchg
jbe
lcall
mov
sub
xor
test
add
sbb
or
aaa
sbb
jnp
leave
ljmp
inc
insl
or
xlat
cmp
out
insl
add
lahf
daa
in
dec
lret
xor
push
int
sbb
dec
pop
gs
mov
and
fistpll
call
or
aam
ret
add
dec
inc
mov
xchg
les
rclb
sub
mov
pushf
mov
stos
mov
mov
mov
cmp
add
arpl
sbb
pop
decl
dec
fldenv
xchg
dec
jge
inc
fcompl
lds
mov
dec
pop
aas
or
mov
mov
sbb
lea
enter
hlt
jecxz
lret
mov
and
call
icebp
xchg
inc
inc
sbb
dec
mov
cmpsb
mov
inc
icebp
xor
lods
inc
inc
pop
orl
fisubs
lret
jbe
sbbb
xchg
pop
mov
or
das
mov
das
loop
orl
cmp
inc
imul
jge
js
lods
leave
and
sub
pop
cmp
jmp
sti
pop
int
jmp
shr
pop
or
jne
cld
push
jmp
add
mov
pop
fadds
stos
shll
call
sub
fsubl
cmp
xchg
pop
cli
sub
idivl
pop
aad
das
xor
iret
fstpl
ljmp
dec
aam
mov
inc
sti
ja
jae
pop
in
in
mov
movsl
cltd
adc
inc
cmp
ja
or
aaa
cmpsb
sub
push
adc
arpl
cmp
push
push
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
add
call
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
inc
dec
les
add
sub
jl
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmp
sti
pop
xor
mov
pushf
clc
add
call
jns
enter
rep
shll
mov
sub
cmpsl
inc
dec
cwtl
mov
cwtl
mov
int3
mov
js
jmp
jbe
lahf
dec
insl
cltd
int
and
adc
rorb
aam
in
stos
pop
test
mov
loope
jp
or
es
test
mov
in
ret
sbb
pushf
add
cs
or
cwtl
pop
cmp
out
out
pop
jnp
pop
sti
mov
scas
ret
lahf
inc
imul
call
insl
push
inc
mov
divb
shrl
mov
and
pop
clc
stos
mov
inc
dec
pop
sarl
mov
outsl
dec
addl
push
and
lds
insl
mov
pop
xorb
shrd
or
xlat
cmp
out
dec
and
cltd
popf
ljmp
mov
xor
inc
mov
cmp
xchg
xchg
jo
and
addb
jne
push
mov
sbb
in
mov
sbb
pop
or
lds
shrb
or
mov
call
popa
mov
in
xchg
les
stc
out
aam
les
jle
cmc
mov
cmp
mov
cmpsl
ds
and
imul
or
xor
iret
loope
or
lahf
outsb
jns
js
ret
in
push
or
push
dec
adc
sbb
pusha
jg
mov
cmp
push
repnz
out
jo
lcall
and
pop
stos
cwtl
dec
loopne
fisubl
add
push
cmpsb
and
pushf
dec
clc
inc
shll
adc
add
call
call
repnz
scas
dec
sbb
movsb
shlb
sub
sti
test
jne
xor
dec
movsb
dec
mov
sub
inc
mov
mov
jecxz
push
or
bnd
push
xor
call
das
js
lods
leave
and
sub
push
nop
push
mov
sbb
in
out
cld
push
jmp
add
mov
pop
fadds
hlt
mov
xchg
xor
cmpsb
pushf
add
and
out
sub
sbb
add
call
or
stos
cmp
mov
rorl
insb
lcall
dec
xor
fwait
xor
sbb
push
add
xchg
xchg
add
stos
xor
lds
jns
insl
fistpll
lock
stos
xchg
mov
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
std
or
sub
testl
call
pop
je
les
and
sbb
fxch
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lea
xchg
push
sbb
int3
test
push
es
pusha
push
mov
std
dec
pop
and
cmp
in
out
shlb
mov
sbbb
add
call
hlt
pop
lods
push
cmp
mov
in
test
push
clc
adc
sbb
leave
cmpl
das
pop
cmp
pop
sahf
rolb
and
sub
call
stos
scas
lahf
aas
push
lcall
mov
hlt
mov
jno
mov
mov
xchg
push
mov
or
pop
sbb
es
adc
jp
pop
scas
mov
cmpb
cmp
shlb
loop
out
jae
or
divb
shrl
mov
and
pop
clc
stos
mov
add
call
sub
pop
sub
sbb
add
clc
mov
or
mov
mulb
cmpb
shrd
or
xlat
cmp
out
dec
and
cltd
popf
ljmp
mov
xor
inc
mov
cmp
xchg
mov
cmpsb
mov
lods
popf
push
fcomps
xor
fidivrl
and
dec
arpl
enter
repnz
pop
mov
in
xchg
les
mov
fwait
pop
push
mov
mov
call
jle
clc
fwait
xchg
xchg
mov
push
mov
pop
mov
or
mov
andb
imul
mov
dec
adc
enter
cmc
and
fyl2xp1
sbb
cmp
lahf
sub
int
mov
ja
jge
outsb
push
xchg
or
aas
push
lret
fistps
loop
inc
pop
lcall
mov
pop
dec
sbb
and
gs
inc
sub
js
das
and
mov
sub
add
add
call
push
push
inc
mov
ljmp
orl
or
stos
push
xor
call
das
js
lods
leave
and
sub
sbbb
mov
sbb
in
out
cld
push
jmp
add
mov
pop
fadds
jb
push
mov
sbb
or
movsl
sbbl
test
push
adc
push
aas
into
mov
les
cmc
imul
mov
adc
sub
add
call
lock
incl
jle
es
mov
pop
fistpll
lock
or
jmp
and
cmp
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
aaa
mov
jl
adc
or
or
popa
pop
jg
insl
mov
inc
lods
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
flds
push
jp
jle
out
movsb
rcrb
push
cmc
push
shrb
mov
data16
js
lret
popf
cmpb
in
mov
mov
mov
jl
popw
xlat
cmp
add
inc
mov
xchg
adc
mov
call
into
test
xor
push
pop
jmp
xor
xor
xchg
stc
enter
inc
jmp
int
dec
ret
and
cs
icebp
mov
in
or
or
pop
and
cmp
jle
push
dec
adc
mov
rolb
loop
cltd
and
mov
aam
adc
jno
add
sahf
push
push
aaa
xchg
jbe
lcall
mov
mov
sub
dec
insb
xchg
sub
data16
jnp
mov
fadd
ljmp
add
call
cs
xlat
cmp
out
insl
add
lahf
daa
in
dec
lret
xor
inc
mov
cmp
xchg
mov
cmpsb
mov
lods
popf
push
fcomps
mov
push
push
ret
push
xchg
flds
xchg
arpl
dec
or
mov
add
xchg
adc
shrb
or
mov
in
xchg
les
push
dec
lahf
divl
xchg
sbb
aas
movsl
xchg
adc
les
inc
pop
adc
push
or
mov
call
clc
aad
into
mov
add
cmp
fidivrl
jne
sbb
mov
leave
jae
xchg
in
mov
arpl
push
int3
sbb
mov
push
inc
outsb
fldl
iret
iret
or
adc
push
stos
and
test
lret
jmp
aaa
sbb
clc
mov
xchg
pop
xchg
in
or
lods
push
mov
aam
mov
pop
push
int3
test
outsb
or
adc
xor
sbb
stos
inc
push
js
test
cli
insb
cmp
add
call
xchg
sbb
aaa
stc
call
das
js
out
inc
fisubrl
fwait
mov
sbbb
shll
xchg
lret
bound
jne
bound
mov
fnstcw
in
jnp
mov
pop
fadds
mov
cld
push
popf
xchg
les
push
mov
pop
sbbb
inc
push
idivl
nop
jo
fists
push
ljmp
dec
aam
mov
inc
sti
ja
jae
pop
in
in
mov
movsl
cltd
adc
inc
cmp
jnp
aam
add
call
fldenv
fbld
fistpll
push
push
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
int3
xchg
sub
pop
aaa
in
pushf
insl
js
ficoml
inc
dec
or
xor
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
dec
add
cmpsb
inc
mov
push
lcall
sahf
xor
shlb
clc
sub
jge
inc
pop
lcall
xchg
adc
mov
jo
dec
dec
ret
adc
inc
inc
pop
sahf
jo
rclb
mov
and
jno
inc
test
xor
or
cmp
call
enter
out
mov
hlt
mov
jno
mov
mov
jbe
jecxz
shlb
cwtl
pop
cmp
out
out
pop
jnp
pop
sti
mov
vshufps
inc
movl
jne
sahf
push
push
aaa
xchg
jbe
nop
cld
fmul
inc
lahf
xor
push
nop
mov
sub
dec
insb
xchg
sub
mov
xor
mov
cmp
jnp
xchg
jl
add
cmp
fwait
cli
pop
cmp
test
sahf
mov
adc
ret
dec
lret
xor
inc
mov
cmp
add
call
lea
addb
jne
push
mov
sbb
xor
fidivrl
and
dec
arpl
xchg
out
mov
clc
js
int
lods
xor
lock
or
cmp
test
dec
add
shrb
or
mov
adc
jge
mov
mov
call
mov
xor
dec
addr16
aas
jl
lcall
lret
dec
and
pop
jmp
lods
mov
out
push
lret
movb
call
in
es
sbb
sub
in
mov
adc
aad
cld
adc
jmp
mov
hlt
adc
inc
and
cltd
and
xor
cmc
mov
and
lods
rcl
push
shll
ret
mov
adc
and
push
xchg
xchg
or
ljmp
pavgw
mov
xchg
out
int3
sub
scas
cs
lret
js
lods
bound
jle
lret
imul
adc
fisubrl
fwait
mov
add
call
popf
test
push
incb
int3
int
mov
mov
jne
bound
mov
fnstcw
in
jnp
mov
pop
fadds
lret
dec
loopne
or
mov
adc
dec
dec
or
mov
out
sub
sbb
popf
or
stos
cmp
push
pop
loop
loopne
add
aad
into
push
add
xchg
xchg
add
stos
xor
test
sub
push
adc
arpl
mov
jmp
and
push
stos
shlb
jecxz
lods
add
call
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
dec
xorl
xor
cmpsl
or
jno
adc
les
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lds
outsl
jns
pmulhw
fnstcw
imul
test
or
xor
add
add
cltd
pop
adc
mov
xchg
fimull
jb
es
sahf
adc
das
adc
lea
call
sbb
clc
sub
lret
push
out
xchg
stc
enter
inc
jmp
int
dec
ret
hlt
and
aas
mov
sahf
dec
call
push
pop
mov
int3
add
call
add
outsl
bound
mov
shlb
loop
imulb
inc
mov
ja
popf
in
inc
popf
fisubl
scas
dec
pop
push
cli
in
imul
pop
dec
insb
xchg
sub
mov
push
mov
in
sub
inc
inc
js
cs
adc
fnstcw
sahf
mov
adc
ret
dec
lret
xor
inc
mov
cmp
xchg
mov
in
mov
sbb
xor
fidivrl
and
dec
arpl
add
call
fidivrs
add
shll
icebp
inc
or
icebp
icebp
xlat
shrl
shll
scas
and
or
mov
arpl
stc
in
or
add
sub
push
scas
or
or
push
in
fcmovnu
popa
ds
stc
in
push
bound
mov
and
cmp
addr16
pop
cmc
mov
cmp
xchg
cmp
int3
or
pop
nop
insb
pop
adc
test
cld
cmp
inc
leave
xor
mov
cmpsl
xor
aaa
mov
loope
xorb
call
and
imul
add
insl
mov
sbb
rcr
sub
sti
out
icebp
sbb
aam
push
and
movsb
xchg
fcomp
stos
notl
push
mov
ja
dec
mov
lcall
cmc
scas
sub
or
insl
mov
enter
inc
shll
mov
mov
mov
mov
out
xchg
cwtl
imul
adc
fisubrl
fwait
mov
sbbb
ficompl
sub
jne
bound
mov
add
call
jge
in
cld
push
jmp
add
icebp
xchg
and
frstor
mov
push
inc
arpl
and
rclb
test
push
adc
push
aas
into
mov
les
cmc
imul
mov
push
push
jmp
cmc
xor
mov
mov
shrd
pop
fistpll
lock
pop
cwtl
mov
and
cmp
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
rolb
call
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
leave
push
out
stos
sub
roll
add
jno
xchg
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
rorl
push
bound
push
fstpt
pop
into
sbbb
mov
dec
adc
ss
nop
in
cmpsw
jge
insb
xlat
aam
cmc
fnstsw
dec
stc
fstl
les
mov
cmp
xor
ja
jp
sub
mov
xor
or
or
rorb
js
jns
enter
out
mov
cmp
mov
inc
std
test
cmp
or
and
scas
outsl
out
out
pop
shlb
loop
cltd
and
mov
aam
adc
add
call
jno
add
iret
jge
inc
aas
decl
push
push
dec
push
sub
xor
xchg
mov
lcall
mov
and
imul
decb
sbb
out
xlat
cmp
out
dec
and
cltd
popf
ljmp
sbb
gs
mov
pop
cmpsb
mov
lods
popf
push
fidivrl
flds
xchg
arpl
dec
or
mov
add
scas
or
cmp
jnp
xchg
cmpsb
sub
stos
out
add
push
shll
call
mov
dec
std
mov
dec
jge
fisttpl
xor
mov
ficomps
pop
jb
push
inc
shlb
lods
gs
inc
mov
fcoml
xchg
aam
mov
out
xor
add
lcall
insl
mov
fcmove
test
cmpsb
addr16
out
clc
xor
push
xor
mov
pop
repz
aad
cmp
pop
loopw
sbb
je
mulb
imul
icebp
fdiv
add
faddl
xor
sahf
add
call
jb
fimull
lods
xchg
push
test
sub
clc
sbb
addr16
daa
mov
adc
sub
jle
jecxz
fmull
sarb
mov
sbb
or
pushf
aad
add
push
sbb
imul
out
inc
fisubrl
fwait
mov
mov
sarl
jns
orb
out
bound
mov
fnstcw
in
cld
push
jmp
add
cmc
inc
pusha
lcall
inc
js
add
call
cs
leave
orl
cmpl
xor
insl
ficomps
out
lods
ret
pop
aad
das
xor
iret
fstpl
ljmp
dec
aam
mov
inc
sti
ja
dec
aaa
sbb
repz
mov
push
into
lret
in
cmp
add
loope
jno
stos
mov
jmp
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
add
call
jecxz
lods
nop
cmp
sahf
xor
and
pop
je
les
and
xchg
sti
dec
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
out
mov
lcall
jbe
pusha
pop
dec
ljmp
call
mov
adc
rorl
pushf
dec
and
pop
mov
jnp
mov
stos
xchg
addr16
mov
leave
out
cs
push
outsl
push
imul
jo
pop
fs
sub
dec
ret
hlt
and
aas
mov
sahf
dec
call
push
pop
mov
jo
adc
jp
pop
scas
mov
cmpb
cmp
push
rolb
sbbb
mov
push
aaa
xchg
jbe
lcall
mov
mov
scas
inc
lret
lods
addl
call
xor
das
mov
and
imul
lahf
mov
dec
dec
stc
and
xchg
cmp
fistpl
inc
pop
adc
lahf
daa
sub
into
cmp
mov
and
cmpsb
mov
lods
popf
push
fidivrl
flds
xchg
arpl
dec
or
mov
add
scas
or
cmp
out
add
push
shll
push
shll
cmpsl
iret
ja
push
pop
mov
xchg
jno
outsb
pop
xlat
mull
jo
or
add
add
call
les
ds
inc
cmp
js
sub
pop
push
add
mov
into
mov
lods
add
dec
jl
dec
or
mov
sbb
or
cmp
jo,pt
div
add
sarl
mov
mov
cmc
scas
dec
imul
mov
dec
inc
cmpsb
insl
sub
mov
jle
xchg
push
lret
pusha
sbb
test
jecxz
mov
jmp
mov
gs
dec
std
hlt
mov
mov
femms
dec
aas
jmp
in
push
and
add
call
insb
fnstcw
mov
es
dec
fdivs
ss
cltd
and
mov
iret
push
shlb
mov
jge
push
mov
adc
or
mov
adc
fisubrl
fwait
mov
mov
sarl
jns
orb
out
bound
mov
fnstcw
in
cld
push
jmp
add
inc
in
es
movsb
or
mov
jl
pop
mov
nop
dec
ds
dec
mov
mov
or
add
call
dec
pusha
out
mov
xor
inc
xor
mov
es
test
mov
inc
sti
ja
jae
pop
in
in
mov
movsl
cltd
adc
inc
cmp
ja
or
aaa
cmpsb
sub
push
adc
arpl
cmp
push
push
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
cli
mov
cmp
cmp
les
lods
jb
add
sarb
call
imul
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pause
pop
sbb
call
push
ds
pop
adcb
mov
sbb
cld
das
adc
add
mov
mov
mov
out
dec
pop
add
call
loop
and
cld
pop
loop
dec
cmp
lret
or
push
cmc
sub
daa
mov
outsb
jecxz
mov
jno
mov
mov
jbe
clc
or
pop
and
adc
addb
dec
rolb
loop
out
jae
or
divb
shrl
mov
scas
push
nop
mov
sub
inc
jp
jne
fisttps
jp
pop
add
mov
fadds
lods
sbb
sti
movsb
or
mov
call
cmpsl
push
rcll
mov
xor
cmp
mov
and
stos
xchg
sub
xor
fidivrl
and
dec
arpl
fidivrs
add
scas
or
cmp
out
add
push
shll
jbe
or
mov
cmp
jge
xlat
inc
sarb
test
push
std
xchg
and
mov
pop
outsb
pop
xlat
or
pop
push
mov
hlt
inc
fcompp
mov
lods
gs
inc
lea
ja
or
or
testl
add
add
cli
fisubrl
cmc
and
dec
and
mov
inc
lods
pusha
or
clc
or
or
loopne
fisubl
insl
pop
popa
decb
sbb
int
sub
sub
add
loope
jecxz
in
inc
sbb
cmp
clc
jo
cmp
pusha
xor
andb
push
lret
rcrb
inc
mov
dec
push
std
sbb
add
repz
add
inc
or
cmp
ljmp
call
mov
fimuls
sbb
pop
or
lds
lods
or
add
add
out
arpl
ljmp
addr16
adc
fisubrl
fwait
mov
mov
scas
loop
addr16
xchg
cmpsl
push
in
out
bound
mov
fnstcw
in
add
sbb
inc
out
sbb
mov
mov
ja
ficomps
fcompl
adc
gs
jns
out
inc
cmc
cmp
bound
xor
and
aas
into
mov
les
mov
rorl
and
add
call
mov
aad
into
push
add
xchg
xchg
add
stos
xor
lds
jns
insl
cmpsb
sub
push
adc
arpl
mov
jmp
and
push
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
adc
push
movsl
adc
xchg
sbb
scas
movsb
adc
cwtl
push
cmpsl
std
loopne
cmp
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
je
stos
mov
xor
stc
mov
and
fistpll
xlat
call
orb
cmp
out
add
push
iret
outsl
cwtl
pop
xchg
fldt
cmpsb
adc
aad
in
sub
cmp
mov
add
call
push
pop
lret
cmp
push
mov
call
push
pop
mov
jo
adc
jp
pop
scas
mov
cmpb
cmp
push
rolb
sbbb
dec
ja
mov
dec
mov
mov
push
sub
xor
xchg
mov
dec
jbe
lret
and
xchg
xor
add
pop
ljmp
jbe
mov
ds
add
mov
sbb
int
sbb
dec
pop
gs
insl
addb
jne
push
add
call
fcomps
mov
push
push
ret
push
or
mov
add
scas
or
cmp
out
add
push
shll
jbe
or
mov
dec
add
fsubrl
andl
outsb
push
imul
mov
jbe
xchg
mov
push
leave
or
and
scas
mov
pop
or
iret
nop
repz
divl
stc
lahf
add
sbb
mov
mov
and
mov
lock
add
push
push
call
add
call
jno
pop
cmp
cmpsb
jl
jmp
and
dec
mov
movsb
jl
fsubl
loop
add
sbb
loopne
jp
loopne
call
dec
iret
mov
jnp
movsb
push
pushf
cwtl
enter
jbe
jmp
out
lahf
sbb
push
jne
gs
and
mov
stc
mov
xchg
stc
pop
imul
lcall
inc
orl
adc
in
jno
imul
stos
xchg
jp
add
mov
call
test
rorb
inc
fisubrl
fwait
mov
mov
scas
loop
addr16
xchg
cmpsl
push
in
out
bound
mov
fnstcw
in
iret
fstpl
pushf
jbe
and
mov
or
mov
push
shrl
pop
ja
icebp
or
pop
mov
popa
out
fcompl
out
lods
ret
pop
aad
das
xor
imul
mov
push
push
jmp
cmc
xor
mov
mov
add
call
lods
rclb
fistpll
lock
pop
cwtl
mov
and
cmp
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
in
sti
xor
test
dec
les
and
push
shrd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
je
stos
mov
xor
adc
push
and
mov
xlat
call
pop
outsl
shlb
test
ja
into
sub
and
dec
pop
les
or
mov
imulb
or
ret
sub
inc
out
out
mov
mov
jbe
clc
or
pop
and
call
aaa
imulb
jne
shlb
loop
imulb
inc
mov
ja
popf
in
inc
nop
cld
fmul
inc
lahf
xor
stos
mov
inc
mov
loope
daa
pushf
xor
mov
and
imul
jmp
dec
mov
sub
movsl
push
and
rcl
arpl
xchg
ja
pop
into
cmp
mov
and
cmpsb
mov
lods
popf
push
push
push
ret
push
or
mov
add
scas
or
cmp
out
add
add
call
shll
jbe
or
mov
dec
add
sub
add
hlt
mov
das
cli
cmpl
add
and
insl
push
add
loope
sub
int
pop
adc
jg
fiadds
adcl
out
pushf
adcl
sub
inc
mov
jge
pop
orl
inc
push
push
or
sbb
push
mov
out
inc
cmp
inc
xor
add
call
mov
cwtl
sub
arpl
xchg
icebp
cwtl
sub
arpl
xchg
icebp
sarl
adc
into
jl
xchg
xchg
push
pop
rcrb
cmp
jp
addr16
test
bound
inc
xor
aaa
ljmp
xor
jo
xor
pop
push
xorb
or
aad
push
mov
les
cs
in
add
or
xor
rolb
lock
int
push
insl
mov
adc
fisubrl
fwait
mov
mov
call
out
loop
addr16
int
jmp
shr
pop
push
cmpsl
mov
fnstcw
in
dec
mov
stc
arpl
inc
les
or
inc
inc
inc
rcr
or
clc
dec
push
test
cli
jecxz
cmpsb
cmc
xor
pop
sbbb
inc
push
cmp
adc
iret
fstpl
ljmp
dec
aam
mov
inc
sti
ja
dec
aaa
sbb
repz
mov
push
into
fistpll
lock
or
jmp
and
add
call
ret
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
and
sub
add
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
inc
cmc
loopne
jle
dec
mov
xchg
and
jb
test
fldl2e
inc
adc
jnp
pop
rep
sub
mov
cmp
cmpsb
adc
stos
aaa
mov
rclb
shr
fs
rcrl
mov
dec
mov
xor
mov
inc
bound
lret
cli
inc
rol
movsl
lods
aas
scas
mov
cmpb
cmp
push
rolb
sbbb
jno
add
add
call
aam
in
dec
mov
dec
pop
push
cli
in
imul
pop
dec
insb
xchg
sub
jne
rcrl
icebp
cltd
mov
fadds
leave
adc
jg
mov
lret
xor
lods
push
and
cld
dec
rorl
mov
jb
cmp
mov
and
stos
xchg
sub
xor
fidivrl
flds
xchg
arpl
dec
add
movsl
push
sbb
adc
cmpsb
sub
je
adc
imul
mov
push
sub
add
hlt
mov
das
add
call
orl
cmp
xor
gs
sbbl
outsb
push
les
daa
push
jecxz
out
jns
negb
stc
into
sbbl
add
cmp
xlat
sbb
adc
icebp
sub
mov
bswap
clc
test
sbb
pop
mov
cmpb
jmp
xor
xor
pop
xlat
int3
out
ljmp
mov
mov
mov
sub
adc
int
imull
add
mov
push
fdivp
fdivl
add
call
bound
fbld
mov
lods
fcomip
mov
rcll
cwtl
popa
mov
pop
pop
pop
add
daa
jno
push
clc
enter
mov
cmp
enter
jmp
out
push
lods
in
cmp
fincstp
iret
xor
jns
mov
imul
push
inc
jg
jo
sahf
mov
sub
fwait
mov
mov
scas
loop
addr16
int
jmp
shr
pop
push
cmpsl
mov
fnstcw
in
sti
push
add
call
cmpsb
pop
pop
rolb
push
pop
in
push
sbb
out
subl
daa
jmp
fwait
pop
pop
icebp
jne
sbb
adc
inc
mov
adc
or
mov
out
sub
subl
mov
clc
dec
aam
mov
inc
sti
ja
jae
pop
in
in
mov
movsl
cltd
adc
inc
cmp
jnp
aam
fldenv
fbld
push
les
shll
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
add
call
shlb
jecxz
lods
stos
shlb
jecxz
lods
hlt
mov
shll
sub
fsub
clc
nop
ss
ja
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
inc
cmc
loopne
add
call
add
stc
sbb
cmp
repnz
mov
push
pop
push
div
push
xchg
inc
incl
xorl
dec
mov
jnp
mov
add
or
mov
or
add
sbb
cwtl
pop
in
dec
outsl
repz
mov
cmc
mov
or
pop
sbb
imulb
jne
shlb
loop
imulb
inc
mov
divb
shrl
fmul
inc
lahf
xor
mov
data16
in
mov
daa
pushf
cltd
mov
call
jnp
xor
add
pop
ljmp
or
mov
inc
inc
js
jbe,pn
sub
jp
cli
mov
addb
jne
push
mov
sbb
and
dec
arpl
shll
in
xor
cmp
lahf
and
mov
mov
dec
add
sub
add
hlt
mov
das
cli
cmp
xchg
dec
dec
bound
fistps
cltd
je
sub
xor
sti
sub
loop
pop
ljmp
loopne
add
call
int3
cmpsb
mov
pop
das
xor
rorl
out
es
and
int3
nop
out
repnz
lret
js
sahf
and
mov
pop
jle
mov
daa
cli
xchg
dec
sbb
sbb
jb
push
jno
insl
pop
mov
inc
inc
loope
cltd
lock
jg
out
xchg
mov
cltd
movsb
mov
pusha
outsl
dec
push
loopne
mov
pop
decb
data16
and
in
div
and
imul
ret
repnz
dec
jge
pushf
fsubrl
in
add
call
mov
jnp
xchg
sbb
movsl
mov
mov
push
and
lahf
cmpsl
ja
sarb
scas
stos
and
ljmp
xor
test
fimuls
sub
lods
jecxz
xchg
fucomi
push
sub
dec
lret
out
inc
fisubrl
fwait
mov
mov
sarl
jns
addb
jg
mov
jmp
push
cmpsl
mov
fnstcw
in
in
jge
or
xchg
jae
cmp
add
sbb
cmpsl
mov
insl
mov
call
mov
inc
sub
js
fists
cmp
rclb
test
push
adc
push
aas
into
mov
les
mov
rorl
and
mov
aad
into
push
add
xchg
xchg
add
stos
xor
ja
or
aaa
cmpsb
sub
push
adc
arpl
cmp
push
push
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
or
add
add
test
dec
les
and
call
int3
jnp
xor
sbb
leave
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
je
stos
mov
xor
incb
xchg
stc
sbb
dec
mov
es
push
aas
add
xor
add
call
popl
in
push
xchg
mov
in
hlt
cs
pop
pushf
xchg
mov
dec
sbb
int3
andl
fpatan
push
rclb
sub
cmpsb
pop
add
insl
test
and
xchg
aas
int3
inc
rol
movsl
lods
aas
jo
int3
jle
push
dec
adc
mov
rolb
loop
lret
jecxz
push
cli
mov
in
dec
mov
dec
pop
push
cli
in
imul
pop
dec
insb
xchg
sub
jne
rcrl
icebp
mov
jle
pop
jge
push
stos
mov
mov
mov
push
jmp
add
call
xor
xor
cs
jp
scas
cmpsb
mov
lods
popf
push
dec
in
and
or
mov
add
inc
or
icebp
icebp
xlat
shrl
shll
jge
xlat
inc
push
sub
add
hlt
mov
das
cli
cmp
xchg
dec
dec
bound
mov
mov
pop
xchg
in
rcrb
add
int
int3
sbb
lret
pop
cmp
arpl
cwtl
add
outsb
and
shrd
sti
sarb
pusha
nop
xchg
fisubl
push
js
add
call
mov
shlb
mov
adc
or
xchg
push
addr16
imul
imulb
xor
mov
subb
sbb
imul
adc
lods
pop
daa
sub
jle
mov
mov
arpl
cmp
nop
outsb
mov
sbb
lret
subl
fmull
jns
shll
mov
jg
cmp
popf
jbe
xor
xchg
pop
jae
and
push
dec
jns
add
call
fnstenv
cs
pop
pusha
and
dec
aaa
aas
jns
incb
or
push
ret
pop
or
sbb
mov
mov
pop
lahf
jp
rcrl
test
faddl
leave
and
sub
jge
jnp
jns
addb
jg
mov
jmp
push
cmpsl
mov
fnstcw
in
cmp
stos
sbb
mov
jb
test
flds
push
adc
adc
shrl
pop
ja
xchg
and
aaa
adc
popa
out
add
call
cwtl
insl
ficomps
out
lods
ret
jae
mov
cmc
imul
mov
push
push
jmp
cmc
xor
mov
mov
push
jns
insl
fistpll
lock
push
and
push
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
xchg
jmp
fstpl
les
and
mov
movsb
xchg
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
inc
sub
cmpsl
not
mov
xchg
stc
sbb
cmp
fcomps
arpl
jb
out
and
push
out
fimuls
inc
mov
ret
jns
pop
cmp
add
call
pushl
leave
sub
fwait
ss
sarb
lret
test
enter
xlat
lods
mov
test
dec
cltd
jnp
pop
sti
mov
and
mov
aam
pop
divb
shrl
fmul
inc
lahf
xor
mov
data16
in
mov
daa
pushf
cltd
mov
fadds
leave
adc
jg
mov
sub
adc
lods
mov
mov
out
xlat
ds
add
aaa
xchg
inc
sbb
cmp
mov
fnstsw
movsb
inc
xor
fidivrl
call
fsts
imul
sbb
adc
push
shll
cmpsl
iret
ja
neg
andl
hlt
mov
das
cli
cmp
xchg
dec
dec
bound
mov
mov
pop
xchg
in
rcrb
add
mov
test
push
sbb
jmp
dec
sbb
fwait
push
imul
insl
aam
dec
push
xchg
push
jg
sti
xor
mov
jno
data16
and
sbb
cli
gs
repz
inc
fwait
cwtl
mov
mov
add
call
jb
push
pop
jnp
push
xlat
inc
add
mov
xor
inc
xchg
into
je
mov
loop
dec
xchg
jnp
xor
sub
imul
xchg
cmp
aas
add
notl
addb
inc
or
inc
shrb
js
enter
pop
js
fnstsw
push
clc
jg
xchg
jg
cs
xchg
cmp
std
pop
dec
cmc
arpl
pushf
mov
shll
cmp
jno
lahf
add
mov
loopne
cmp
adc
fildll
add
call
sub
ds
jp
inc
test
mov
sbbl
mov
sub
imulb
mov
sahf
ret
call
jmp
shr
pop
jp
mov
dec
ret
leave
xor
mov
mov
xor
cs
sub
pop
clc
cld
mov
jp
jns
pop
or
clc
dec
push
test
cli
jecxz
cmpsb
sbb
pop
pop
add
inc
push
idivl
nop
jo
fists
push
ljmp
call
and
out
adc
sub
lock
stc
dec
aaa
sbb
repz
mov
pop
fistpll
lock
pop
cwtl
mov
and
cmp
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
xchg
stos
cld
bound
pop
je
les
and
xor
insl
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pause
pop
sbb
call
pop
clc
in
es
mov
lock
push
pop
test
add
iret
in
cmp
xor
repnz
mov
pop
fmulp
sbb
mov
jecxz
mov
loope
add
push
jmp
inc
jle
add
call
push
ret
cld
jecxz
sub
cmpsl
shlb
loop
lret
jecxz
push
cli
mov
push
aaa
xchg
jbe
inc
add
cmp
xchg
sub
jne
rcrl
icebp
movsl
sti
xlat
call
mov
mov
insl
cli
cltd
inc
ret
fadds
add
sbb
dec
and
xor
xlat
jne
or
sub
popf
push
push
push
ret
push
or
mov
add
xchg
xor
cmp
lahf
and
mov
add
call
sbb
sar
outsb
push
imul
shll
push
jecxz
or
pop
int3
cltd
je
sub
xchg
in
rcrb
add
mov
push
add
dec
push
sub
sbb
mov
mov
repnz
mov
add
inc
shll
aas
inc
insl
cmpsb
jne
mov
dec
push
loopne
ds
xchg
test
stos
sub
sub
xorb
cmp
adc
cld
scas
arpl
push
leave
adc
fists
les
scas
stc
mov
cmp
in
add
call
inc
pop
adc
jg
and
add
hlt
imul
test
pop
loope
mov
lret
add
cwtl
mov
insb
out
adc
cmp
outsl
in
sti
imul
js
xchg
lret
jp
push
pop
or
add
mov
xchg
dec
cmp
jmp
aad
subb
shlb
adcb
aad
enter
fisubs
stos
pop
outsl
dec
inc
js
ljmp
cld
mov
in
rorb
std
sbb
int
jg
jno
addl
call
pop
lods
inc
pop
addl
imulb
mov
int3
int
mov
mov
int
jmp
shr
pop
and
push
rcr
mov
mov
out
cmc
xchg
inc
inc
jle
push
stos
jmp
clc
and
rdtsc
dec
inc
pop
daa
jmp
fwait
pop
pop
icebp
jne
sbb
adc
inc
mov
adc
or
dec
pusha
out
mov
xor
inc
xor
mov
es
test
mov
inc
sti
ja
jae
pop
in
in
mov
mov
call
les
sbb
cmp
add
loope
jno
stos
mov
jmp
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
lea
dec
lods
lock
xchg
inc
aas
test
dec
les
and
xor
mov
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
out
mov
lcall
sarl
mov
into
pop
cli
aas
mov
iret
mov
push
in
cli
dec
cmp
insl
imul
add
sahf
rolb
mov
jmp
add
imul
push
xchg
int3
mov
mov
pushf
fistps
dec
xor
sub
mov
in
jmp
push
rolb
sbbb
add
call
jno
add
movsl
sbb
pop
outsl
mov
or
mov
daa
pushf
cltd
mov
fadds
leave
adc
jg
mov
sub
adc
jnp
movsl
repnz
sub
aad
popf
out
mov
lea
stc
daa
cmp
dec
shrl
push
inc
xor
fidivrl
flds
xchg
arpl
dec
lock
or
cmp
out
add
push
shll
dec
xor
int
rep
jns
adc
push
sbb
int3
cltd
je
sub
inc
adc
call
jb
pop
add
mov
subl
xchg
sbb
mov
mov
and
inc
icebp
or
dec
repz
pop
call
test
rol
nop
stos
leave
jge
pop
inc
sbb
popa
adc
loope
ljmp
in
lahf
fwait
pop
mov
dec
xor
jne
pop
hlt
sbb
jbe
andl
mov
pop
push
popf
je
sbbl
jb
mov
xchg
jo
or
push
dec
mov
rcrb
shlb
add
call
es
fisubs
leave
push
xor
cmp
inc
mov
leave
pop
test
cmpsb
loope
popa
popa
mov
rcr
mov
or
inc
cs
push
imul
pushf
mov
lods
jb
or
push
clc
enter
mov
cmp
jl
inc
lods
iret
enter
lahf
ret
push
mov
into
shll
lahf
inc
and
jno
pop
dec
stos
mov
test
lods
leave
and
sub
daa
xchg
lret
add
call
bound
int
jmp
shr
pop
or
add
sbb
pop
dec
xor
test
adc
sarb
jo
pop
xchg
es
pop
sub
lods
aad
xor
cmp
or
inc
sub
js
gs
jns
out
inc
cmc
cmp
bound
cmp
or
leave
popf
or
stos
cmp
push
pop
loop
loopne
add
or
push
adc
movsl
cltd
adc
inc
cmp
jnp
aam
fldenv
fbld
mov
add
call
jmp
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
fnstsw
adc
pop
je
les
and
or
jno
mov
push
leave
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sub
insb
xchg
mov
mov
mov
mov
mov
into
pop
cli
aas
mov
lods
es
out
clc
sbb
sti
pushf
xorl
inc
loopne
dec
push
pop
dec
incb
cmp
or
in
xchg
inc
sub
fiaddl
mov
xchg
add
push
repz
aam
cmp
sbb
arpl
cltd
and
mov
aam
push
pop
notl
push
mov
sub
cmp
xchg
sub
jbe
lret
add
call
mov
mov
fadds
stos
mov
mov
insl
cli
cltd
inc
ret
out
test
xchg
fimuls
movsb
or
mov
cmp
push
adc
push
ret
push
or
scas
dec
cmp
xor
cmp
lahf
and
push
sbb
push
insl
add
daa
add
dec
mov
cli
subl
movsl
or
test
cli
or
adc
cmp
outsl
adc
std
mov
sbb
test
mov
call
push
and
mov
or
jns
stos
push
inc
mov
je
fwait
enter
push
push
mov
push
inc
scas
mov
sub
fcomps
jae
out
jmp
adc
add
pop
mov
dec
mov
xor
cmc
jns
loop
dec
rcrl
inc
movsl
in
dec
std
aam
adc
bound
jne
ret
cmp
in
xor
movsb
mov
scas
out
jnp
jmp
test
fwait
push
push
lahf
inc
push
mov
push
popa
sahf
pop
xchg
cld
cmpsb
inc
jle
enter
call
lock
push
mov
loop
pop
ljmp
add
adc
jle
sbb
lahf
push
xchg
jmp
add
xchg
arpl
push
and
push
insb
je
inc
test
sbb
testb
jle
mov
cmpsl
cli
push
outsb
mov
or
cmovae
cmp
sbb
mov
xchg
aas
and
fbstp
adc
or
mov
popa
js
add
add
call
adc
xchg
pop
pop
rolb
sbb
pop
xchg
es
pop
sub
lods
aad
xor
jb
movsb
sbb
push
shrl
pop
ja
fists
cmp
gs
out
fcompl
cmpsl
mov
aas
into
mov
les
mov
rorl
and
mov
aad
into
push
add
xchg
xchg
add
stos
xor
ja
or
aaa
cmpsb
sub
push
adc
arpl
cmp
push
push
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
movsb
dec
shll
call
mov
les
and
mov
sbb
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
in
push
fucomi
add
dec
movsl
mov
add
call
inc
mov
test
push
mov
push
and
cmp
fcoml
lahf
ret
loopne
dec
push
adc
and
stc
and
mulb
adc
jecxz
roll
stc
xor
xchg
out
popf
mov
pop
pop
mov
arpl
push
xchg
push
int
and
xor
jecxz
push
cli
mov
in
dec
mov
dec
pop
push
cli
in
imul
jg
inc
jp
jne
fbstp
das
mov
and
imul
pop
ljmp
adc
jnp
movsl
repnz
sub
call
dec
ss
dec
inc
cmp
xchg
jno
xor
xor
jp,pn
test
decb
xchg
flds
xchg
arpl
dec
lock
or
cmp
int3
adc
imul
mov
stc
outsb
push
imul
dec
xchg
dec
dec
bound
mov
inc
pop
xor
jp
lahf
sub
repnz
push
sbb
jmp
sbb
test
mov
orb
and
outsl
fidivrs
repnz
sbb
mov
inc
test
add
call
shlb
pushf
adc
out
jl
in
leave
sbb
sbb
mov
mov
lea
subl
mov
mov
out
sub
mov
add
inc
push
imul
out
movsb
sbb
in
dec
pop
ds
imul
cmp
or
dec
xlat
lods
ss
enter
insl
mov
cmp
cmc
mov
jae
ja
pop
mov
jmp
inc
pop
push
enter
mov
movsb
dec
rcl
jns
ficoms
movsl
add
call
xor
js
and
adc
lret
mov
das
popa
hlt
jmp
sub
pop
push
mov
push
fstpl
rclb
pop
and
inc
cmp
cs
and
lahf
shrl
jge
jecxz
aaa
or
cmovae
cmp
sbb
fsubs
test
mov
sbb
mov
cs
sbb
icebp
xchg
mov
push
out
push
int3
xor
mov
rorb
ss
mov
pop
add
call
adc
adc
clc
dec
push
test
and
aaa
mov
xor
insl
ficomps
out
lods
ret
pop
aad
das
xor
imul
mov
push
push
jmp
cmc
xchg
add
stos
xor
lds
jns
insl
cmpsb
sub
push
adc
arpl
mov
jmp
and
push
stos
shlb
jecxz
lods
inc
call
lret
lods
mov
xor
dec
les
and
inc
pop
add
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
dec
add
cmpsb
dec
xchg
cli
mov
or
mov
add
jmp
rcr
sti
pushf
add
call
mov
mov
jge
imul
stc
and
ret
icebp
roll
lcall
inc
aaa
scas
sbb
jmp
lretw
or
mov
inc
shr
ja
popf
in
inc
stc
movsl
sbb
pop
outsl
mov
or
es
or
mov
fadds
stos
mov
mov
mov
fadds
add
jnp
ss
inc
and
popf
jnp
cmp
or
mov
add
call
sub
fxrstor
scas
fs
in
xor
cmp
lahf
and
xchg
cmpsl
iret
ja
push
sub
add
lds
push
push
and
fistps
cltd
je
sub
inc
adc
add
inc
mov
popf
or
stos
jb
push
and
push
adc
dec
push
push
or
sub
push
std
cmpsl
add
xor
jnp
fisubrl
add
outsl
pop
fnsave
mov
mov
cli
lahf
sbb
pop
and
call
mov
popf
imul
movsb
outsl
xchg
dec
stos
and
adc
and
mov
sbb
loop
aam
cmp
stos
orl
leave
leave
out
pop
shlb
mov
hlt
xchg
cmp
mov
push
and
push
outsl
mov
push
rcrb
mov
xor
lock
pop
push
insb
movsl
mov
inc
scas
pushf
jnp
stos
das
mov
fs
mov
cmpsl
hlt
inc
test
rolb
in
cltd
js
add
call
std
xlat
into
addb
mov
add
pop
stc
push
mov
gs
add
rcl
imul
or
cmovae
cmp
sbb
and
push
mov
sbb
or
xorb
jnp
mov
jg
movsb
or
mov
cmpl
pop
cmpsl
es
ss
mov
cmp
pop
xchg
add
pop
cli
jecxz
cmpsb
add
call
xor
pop
pop
add
inc
push
idivl
nop
jo
fists
push
ljmp
or
pop
mov
add
push
mov
cmc
pushl
shll
aam
sbb
insl
fistpll
lock
stos
xchg
mov
xchg
jecxz
lods
mov
or
je
les
and
xor
adc
loop
push
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
flds
push
jp
jle
out
pop
mov
sub
sub
sbb
add
lahf
push
popf
dec
stc
gs
xchg
addr16
ljmp
in
and
lods
xorb
mov
aaa
mov
call
pop
push
movsl
fadds
jnp
jle
les
sbb
and
or
pop
aaa
sti
repz
xor
shll
inc
add
cmp
xchg
sub
jne
rcrl
icebp
movsl
sti
xlat
call
push
mov
lods
mov
mov
std
dec
ss
dec
inc
cmp
xlat
jbe
mov
dec
inc
lahf
lret
push
adc
inc
js
or
ds
or
cmp
int3
adc
imul
mov
call
add
sar
outsb
push
imul
dec
xchg
dec
dec
bound
xor
cli
or
ja
sti
and
rcl
sub
in
stos
lock
shl
je
cld
gs
adc
es
imul
add
pop
ja
cltd
adc
insb
mov
cld
cmpsl
test
jg
mov
pop
fwait
out
xor
sbb
mov
inc
repz
sub
sbb
xchg
push
push
loop
jno
inc
rcrl
mov
cmp
lcall
xchg
add
call
ret
gs
fnstsw
add
icebp
lahf
pop
cmp
jnp
jnp
mov
fadds
addr16
test
mov
scas
shll
dec
call
sahf
pop
sub
add
sub
cli
xchg
std
xor
cwtl
and
arpl
ja
sbb
push
sbb
lds
sahf
sub
push
lds
insl
dec
lret
loop
cwtl
jl
xlat
into
addb
cmp
cmp
repnz
shr
lock
pop
add
call
in
jle
inc
jo
rcl
imul
or
cmovae
cmp
sbb
dec
ret
or
fs
mov
sbb
fistps
cmc
int3
add
mov
or
mov
cmp
scas
ret
xchg
or
rorb
dec
shlb
cmp
xchg
jmp
xor
pop
daa
jmp
fwait
pop
pop
icebp
jne
sbb
adc
inc
push
or
mov
mov
or
mov
xchg
cmp
adc
xor
mov
call
les
in
test
mov
inc
sti
ja
dec
aaa
sbb
repz
mov
pop
fistpll
lock
pop
cwtl
mov
and
cmp
lds
rcrl
sbb
test
dec
les
and
fisubl
jg
push
ret
loop
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
pop
mov
imul
test
add
jl
pop
test
mov
repz
sbb
repz
in
jb
sub
movntq
sub
or
je
fsts
push
arpl
xor
or
pop
mov
nop
mov
add
lcall
call
pushw
fcom
dec
and
inc
outsl
sub
sbb
cli
in
imul
jg
inc
jp
jne
fbstp
das
mov
and
imul
pop
ljmp
icebp
test
fadds
add
jnp
ss
inc
and
push
fnstsw
cld
ds
js
pusha
sub
and
cmpsb
or
popa
in
xor
cmp
lahf
and
push
sbb
push
insl
add
subb
add
lds
push
push
and
fistps
cltd
je
sub
sub
add
call
mov
pop
inc
jmp
stc
les
lcall
adc
popa
push
pop
insb
add
inc
and
adc
insb
mov
fsub
sbb
xchg
cltd
iret
pusha
jns
sbb
pop
lods
lcall
cs
or
add
test
imul
mov
outsb
sbbl
test
xlat
shrb
add
das
lret
bound
out
andl
imul
call
movsb
sub
xchg
inc
out
lods
loopne
or
fnstenv
fcompl
dec
dec
push
jb
cwtl
jmp
mov
lahf
or
xchg
jbe
sar
js
popf
jecxz
fidivrl
popa
push
rcrb
mov
mov
pop
data16
add
cwtl
loop
les
inc
div
mov
notb
push
stc
pop
adc
mov
lcall
ss
test
pop
and
inc
cmp
cs
mov
xor
rcl
imul
or
cmovae
cmp
add
call
test
pop
cmp
pop
pop
sbb
movl
das
cli
xor
mov
or
imul
sub
jno
jbe
into
adc
shlb
jo
pop
xchg
es
pop
sub
lods
aad
xor
cmp
or
inc
sub
js
gs
jns
out
inc
cmc
cmp
bound
out
sub
subl
mov
clc
dec
aam
mov
inc
sti
ja
jae
pop
in
in
mov
add
call
mov
push
into
lret
in
cmp
add
loope
jno
stos
mov
pop
std
xor
and
int3
sub
test
dec
les
and
scas
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
aad
push
add
movsl
mov
je
cld
jne
jo
dec
je
mov
fisubs
int
mov
mov
add
mov
dec
ret
test
ret
test
mov
pop
jle
mov
mov
dec
jmp
jmp
popf
in
cmp
push
pop
cmp
cmc
stos
mov
inc
mov
call
js
arpl
pushf
cltd
mov
fadds
stos
mov
mov
insl
cli
cltd
inc
ret
cmpsl
not
sarl
mov
adc
xchg
adc
cmp
inc
sub
out
scas
imul
shll
stos
out
add
push
shll
pop
add
sar
outsb
push
imul
dec
xchg
dec
dec
bound
xor
cli
or
ja
sti
and
aaa
jmp
mov
sub
dec
imul
cmpsb
cwtl
fdivs
imul
call
insb
add
mov
dec
arpl
fisubl
ret
xor
cmp
or
cmp
push
xchg
cmpsb
sbb
push
lods
jge
rcr
jb
ss
rorb
jl
pusha
jmp
loop
xor
inc
dec
out
addr16
fs
pusha
sub
into
imul
jmp
mov
adc
mov
gs
xchg
bound
xor
pushf
xchg
sbb
and
inc
cmp
fdivl
adc
arpl
sbb
addr16
in
cmp
cld
pop
addr16
in
cmp
add
call
cld
jl
aas
out
test
loop
lcall
rcll
pop
imull
cmp
fucompp
into
jp
repnz
push
fbld
test
out
in
movl
rolb
push
mov
xorb
pop
pop
mov
cmp
cmp
repnz
push
mov
shll
or
push
shlb
mov
or
cmovae
add
xchg
stos
lods
adc
lods
aas
mov
or
aam
add
call
lock
insb
loop
pop
sub
lret
sub
sub
mov
lods
bound
cmpsl
arpl
sahf
lret
or
fs
sbb
pop
xchg
es
pop
sub
lods
aad
xor
jb
movsb
sbb
sbb
jne
fists
cmp
rclb
test
push
adc
leave
popf
or
stos
cmp
push
pop
loop
loopne
add
or
pop
in
in
mov
movsl
cltd
adc
inc
cmp
jnp
aam
fld
xchg
scas
inc
lret
out
data16
add
call
icebp
addr16
mov
add
les
and
xor
mov
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
dec
lcall
mov
loopne
xchg
aas
in
cmp
push
std
xchg
frstpm(287
pop
out
xor
fs
stos
sub
jns
das
test
mov
dec
loopne
je
sub
or
add
rcrl
adc
std
jecxz
pop
movsb
mov
lahf
mov
ljmp
xorl
xchg
mov
data16
dec
jne
rcrl
icebp
movsl
sti
xlat
call
push
mov
lods
mov
mov
call
pusha
in
repnz
dec
ss
dec
inc
cmp
push
fnstsw
push
mov
add
imul
push
cmpsl
cmp
test
std
popa
jle
cltd
in
xor
cmp
lahf
and
push
sbb
push
insl
add
subb
add
lds
push
push
and
fistps
cltd
je
sub
sub
mov
add
stos
lock
shl
je
sub
cltd
xchg
mov
dec
cmp
sub
fsub
sbb
add
xchg
imul
sub
repz
add
call
push
aam
bound
inc
jae
cltd
xchg
or
stos
imulb
and
aad
lds
and
mov
bound
jo
mov
loopne
in
call
push
pcmpeqb
dec
cwtl
imul
loopne
xchg
push
ds
and
cmp
xchg
outsb
sbb
push
sbb
cmp
js
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
jnp
sub
sahf
pop
loope
push
in
add
push
pop
and
add
call
add
or
jge
mov
add
into
out
in
repz
in
dec
dec
daa
mov
or
mov
xorb
pusha
loop
std
mov
nop
mov
shrl
fistps
and
lahf
and
jno
adc
adcb
or
jo
xor
scas
rcr
mov
or
jecxz
lds
daa
adc
js
or
mov
pop
divl
rorb
aas
xlat
dec
add
call
rol
cmp
pop
in
jae
xor
mov
rorb
iret
push
cli
mov
cmp
mov
shrl
pop
ja
icebp
or
pop
mov
popa
out
fcompl
jg
fdivl
and
aas
into
mov
les
mov
rorl
insb
lcall
dec
xor
fwait
xor
sbb
push
add
xchg
cmc
movsl
cltd
adc
inc
cmp
ja
or
aaa
cmpsb
sub
push
adc
arpl
cmp
sahf
repz
dec
les
and
pop
pusha
popf
xchg
lret
add
call
test
pop
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
push
stos
push
xor
pop
xchg
sub
jle
add
call
cwtl
ljmp
mov
jne
pop
sub
mov
cmp
into
mov
mov
push
test
xchg
lods
adc
outsb
mov
or
jecxz
push
adc
lods
xchg
cli
xlat
adc
jl
mov
dec
xor
dec
in
pop
cltd
inc
ret
hlt
rcrb
and
imul
pop
ljmp
adc
fadds
add
jnp
ss
inc
and
push
fnstsw
jns
add
call
jnp
mov
mov
repz
push
mov
mov
call
push
fcoms
stos
xor
sbb
movsl
jns
adc
dec
xchg
dec
dec
bound
xor
cli
or
ja
sti
and
sbb
test
aam
mov
or
sbb
in
insb
fisubrl
jno
hlt
sahf
ljmp
mov
dec
sbb
mov
dec
sbb
mov
dec
sbb
mov
dec
sbb
data16
sub
scas
icebp
xchg
roll
call
pop
jne
mov
arpl
cltd
cwtl
in
imull
filds
cmp
xlat
pop
out
lcall
jb
adc
mov
in
mov
push
mov
fstps
mov
ret
repnz
cltd
mov
adc
xchg
jno
insb
cmp
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
xor
xor
dec
or
scas
push
lret
pop
imul
add
and
xchg
add
xchg
loopne
cld
lret
movsl
sbb
into
dec
hlt
add
call
out
add
xor
mov
or
dec
mov
inc
pop
test
mov
mov
scas
lahf
pop
fsubrl
lret
push
in
rorb
std
sbb
xlat
push
push
adc
adcb
or
sub
inc
sarl
adc
sbb
sarl
sahf
stos
insb
movsb
or
mov
pushf
movsl
cmp
xlat
dec
jbe
add
arpl
movsb
mov
jmp
adc
pop
cmpsl
es
ss
mov
add
call
or
adc
inc
clc
dec
push
test
and
aaa
bound
shlb
insl
ficomps
out
lods
ret
jae
mov
cmc
imul
mov
aad
into
push
add
xchg
xchg
add
stos
xor
ja
or
aaa
add
in
xchg
stc
add
xor
je
les
and
iret
mov
xorl
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
ret
scas
ds
and
jo
ljmp
arpl
imul
test
xchg
push
jecxz
js
or
loopne
mov
add
call
jae
mov
cld
out
xchg
imul
lds
out
aaa
xor
scas
mov
iret
xorl
push
ret
cli
aad
std
adcb
mov
jmp
mov
das
sbb
test
cltd
mov
fadds
leave
adc
jg
mov
insl
cli
cltd
inc
ret
cmpsl
not
sarl
mov
adc
xchg
adc
cmp
inc
movsb
mov
and
cltd
cmp
fcmove
jnp
mov
je
adc
add
call
sbb
sarl
das
cli
sbb
int3
cltd
je
sub
lcall
pusha
mov
outsl
fwait
sbb
dec
jb
lock
shl
je
jbe
pop
insb
pop
loopne
loop
cli
jg
in
jecxz
mov
xchg
sbb
ret
pop
xchg
jle
gs
loop
out
lods
inc
mov
xchg
jo
cltd
in
sub
push
std
ja
cmpl
xor
sub
add
negb
push
push
push
dec
scas
or
mov
or
jg
mov
ds
mov
hlt
sub
add
call
imul
insl
lcall
out
popl
jo
cld
cmc
and
push
pop
jp,pt
icebp
mov
jne
bound
inc
les
dec
jne
int3
jp
mov
cmpsb
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
jnp
sub
sahf
pop
loope
test
es
pop
inc
seta
and
jne
mov
jl
fdivrs
push
cmpsb
sysret
pop
repnz
movsl
sbb
add
pop
inc
cli
pop
mov
aas
scas
push
je
jo
bound
jo
adc
outsb
rcrl
add
call
mov
dec
in
jp
aad
jno
daa
adc
xchg
or
pop
mov
add
jnp
enter
or
sub
inc
mov
mov
popf
out
adc
mov
clc
mov
addr16
or
roll
gs
xlat
sbb
jbe
inc
mov
push
inc
outsb
scas
outsl
cmp
cltd
clc
lea
rcl
and
xor
push
out
dec
inc
int
aad
cmpsl
es
ss
mov
cmp
pop
xchg
add
pop
cli
jecxz
cmpsb
call
cmp
xor
insl
ficomps
out
lods
ret
pop
aad
das
xor
das
jmp
outsb
cmp
jb
sub
mov
push
jmp
cmc
xchg
add
stos
xor
lds
jns
insl
dec
jle
sbb
test
dec
les
and
or
ficomps
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
ret
scas
ds
and
jo
push
iret
dec
adc
and
imul
adc
fiadds
xor
aaa
xchg
or
outsb
ficoms
orl
stc
mov
adcl
cltd
cmp
jg
add
call
mov
jo
mov
mov
mov
sub
sub
mull
gs
std
pop
mov
std
jno
mov
fadds
stos
mov
mov
mov
std
dec
ss
dec
inc
cmp
xlat
jbe
mov
mov
add
imul
push
sbbb
shll
rcrl
cmc
inc
int
int
push
jp
push
sbb
push
insl
add
movsl
jns
adc
jno
push
jecxz
or
ljmp
call
xor
and
push
test
mov
sub
into
mov
test
xchg
or
cmp
push
cmc
mov
and
and
repnz
pop
femms
adc
or
xor
pop
femms
adc
xor
pop
femms
adc
mov
loop
out
lods
inc
mov
mov
jp
aaa
sub
jg
stos
jnp
fists
jl
test
sbb
negb
hlt
or
je
xchg
sub
mov
or
ret
mov
push
fsubrl
nop
jo
add
call
jge
sarl
in
or
cmc
rcrl
pop
mov
mov
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
cli
xchg
aam
xor
dec
add
xchg
in
das
insb
imul
push
adc
cltd
mov
scas
pop
sbb
jbe
mov
imul
rclb
cmp
stos
lret
rorb
sbb
andb
fldcw
in
movsb
cmp
loopw
sub
jne
push
aaa
aas
jns
incb
pop
aad
adc
call
cltd
lods
sbb
pop
inc
movsl
loop
dec
or
pop
lret
jae
orl
mov
adc
lahf
sbb
out
sub
mov
je
scas
and
addr16
movl
pushf
push
sub
jno
or
rorb
dec
shlb
cmp
xchg
jmp
xor
pop
daa
jmp
fwait
pop
xlat
ja
cmpsl
insl
or
jg
push
or
pop
sbbb
inc
push
idivl
nop
jo
fists
add
call
ljmp
or
pop
mov
push
jmp
cmc
xor
mov
mov
push
jns
insl
cmp
imul
and
ret
cld
lods
mov
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pushf
dec
lock
movsl
stos
pushf
mov
ja
push
jmp
lret
test
sbbb
loop
out
push
adc
shrl
mov
mov
sub
fnstcw
dec
mov
jb
lret
shrl
mov
scas
jge
ret
dec
mov
xchg
pop
cwtl
or
mov
clc
push
inc
call
adc
add
call
cld
push
out
addr16
jns
clc
mov
aas
mov
enter
sti
xlat
call
push
mov
xor
movsl
repnz
sub
out
mov
push
fnstsw
jns
add
dec
xchg
xchg
cmp
mov
scas
jp
adc
popf
push
xchg
mov
dec
add
outsb
push
imul
andl
adc
adc
xchg
xor
inc
sub
lahf
push
out
mov
adc
leave
jge
adc
sub
add
call
or
xor
ret
scas
push
push
jecxz
jne
loop
inc
or
xchg
dec
xorb
or
ret
shll
or
xchg
dec
xorb
or
ret
shll
pop
ret
orb
aas
jp
xchg
inc
adc
cmp
stos
nop
xor
iret
out
addl
outsl
mov
jae
lods
dec
and
push
adc
gs
xchg
sbb
pop
sbb
outsb
jne
add
call
iret
jg
outsl
mov
std
in
sbb
out
movsb
or
pop
add
pop
fdivr
adc
push
push
dec
push
enter
aad
add
dec
inc
push
mov
jno
add
sbb
mov
pop
cli
dec
das
out
test
sbb
lock
fstpt
jp
neg
pop
push
adc
lods
inc
aam
push
sbb
lret
addr16
stc
pop
cmp
stos
cmp
in
cmpsb
xchg
in
out
aaa
test
enter
fnstcw
dec
push
xor
add
call
lret
mov
xor
pushf
inc
sbb
mov
pop
call
mov
inc
shl
leave
lock
cmp
push
sub
jno
jbe
into
adc
shlb
jo
pop
xchg
lds
scas
addr16
add
push
insl
mov
sub
sbb
adc
inc
mov
adc
or
mov
xchg
cmp
adc
iret
fstpl
ljmp
dec
aam
mov
add
push
mov
cmc
incl
jle
add
call
es
mov
lahf
xor
cmpsl
or
jno
adc
les
and
mov
dec
out
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xor
jb
xor
jmp
repnz
push
mov
inc
xchg
dec
ljmp
inc
push
xor
inc
cld
push
push
insl
fldt
inc
loop
call
in
xchg
xor
jns
mov
into
push
cmpsb
lods
pop
test
fdivl
inc
cmp
out
sbb
mov
add
call
in
sub
adc
fadds
add
jnp
ss
inc
and
adc
cmp
xchg
lea
ss
icebp
dec
xchg
xchg
cmp
pop
cwtl
lods
jns
inc
aas
fstpl
imul
pop
add
sarl
push
sbb
int3
cltd
je
sub
push
mov
mov
cmp
ret
scas
sub
sbb
addb
xchg
xor
xchg
xor
dec
cmp
leave
or
dec
test
xor
call
mov
popf
mov
add
call
push
call
mov
popf
mov
mov
popf
mov
mov
cmpsl
sbb
and
rorb
mov
cld
jl
pop
inc
push
jmp
mov
flds
cmp
add
mov
dec
mov
mov
popf
xor
cld
aam
test
xor
pop
add
fdivs
mov
sub
stos
or
and
je
cmp
nop
rclb
idivb
xor
call
jecxz
or
lcall
mov
or
outsl
jle
pop
pop
xchg
nop
popf
mov
frstor
mov
mov
mov
jl
mov
mov
jne
or
rolb
fdivs
mov
repnz
cwtl
stc
sub
std
fimuls
mov
cltd
aaa
scas
push
or
adc
mov
jno
bound
aaa
xor
cltd
push
or
scas
dec
cmp
stos
xor
es
cmp
mov
rolb
xor
jo,pn
add
call
fistpl
dec
inc
xor
jns
stos
iret
out
xchg
dec
or
and
fs
pop
mov
bound
cmpsl
xor
into
adc
shlb
jo
pop
xchg
es
pop
sub
lods
aad
xor
cmp
or
jne
sbb
adc
gs
jns
out
inc
cmc
cmp
ret
or
dec
pusha
out
mov
xor
inc
xor
mov
es
test
mov
inc
sti
ja
dec
aaa
sbb
repz
arpl
fiaddl
test
dec
les
and
jnp
xor
add
call
icebp
jne
adc
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
adc
xlat
push
dec
into
or
push
or
xlat
jg
pusha
int
ljmp
ret
sti
pop
in
lret
sahf
xlat
sbb
ret
ret
jo
mov
add
es
sbb
lds
or
sub
gs
xor
xchg
xor
push
push
cs
lahf
add
scas
outsb
add
xor
pushl
mov
add
call
dec
das
sub
movsb
mov
jp
mov
cmp
or
dec
aas
mov
adc
xor
sbb
movsl
jns
adc
add
inc
mov
inc
pop
xor
jp
push
xchg
jecxz
cmp
imul
lods
dec
daa
sbb
icebp
dec
ja
push
mov
mov
and
and
repnz
loopne
push
inc
mov
push
aad
je
xchg
push
aad
je
xchg
push
aad
je
xchg
push
aad
je
xchg
push
aad
je
xchg
add
call
push
aad
je
xchg
push
aad
je
xchg
adc
inc
cmp
sti
sub
repnz
inc
or
inc
and
sarl
leave
cmpsl
shrl
cmp
add
decl
test
and
int
mov
lock
xchg
push
aad
clc
mov
out
mov
lcall
add
mov
adc
lods
sub
mov
and
fsub
pop
xor
sahf
jo
inc
testb
add
and
add
call
push
push
outsl
push
push
fiaddl
jecxz
mov
sbb
and
fldt
lods
movsl
pop
les
insb
ror
dec
and
mov
ud0
test
or
ljmp
mov
cmpsl
mov
add
testl
mov
fxrstor
scas
fs
xor
xor
movsb
or
mov
pop
dec
cmp
sti
test
rorl
mov
gs
jl
jns
fdivs
add
call
shlb
hlt
arpl
sahf
lret
or
fs
sbb
pop
xchg
es
pop
sub
lods
aad
xor
jb
movsb
sbb
jns
sub
js
gs
jns
out
inc
cmc
cmp
bound
out
sub
subl
mov
clc
dec
aam
mov
inc
sti
ja
dec
aaa
sbb
repz
xchg
adc
jl
test
dec
les
and
jle
icebp
xor
inc
shll
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
inc
xor
jb
pop
out
push
scas
hlt
mov
add
call
in
aaa
xchg
outsl
mov
and
out
jmp
gs
xchg
or
xor
pop
ror
cmp
call
push
rcll
mov
adc
or
xlat
sarl
rcll
mov
jb
mov
out
test
out
stos
call
test
test
icebp
insl
cli
cltd
inc
ret
std
dec
ss
dec
inc
cmp
xlat
jbe
mov
mov
add
imul
push
sbbb
rcll
or
aad
mov
pop
xorb
call
pusha
rcr
movsb
or
mov
push
pop
or
xchg
dec
dec
bound
pop
mov
sbb
xor
movsl
mov
jp
adc
xor
pop
insb
pop
loopne
cmp
dec
sahf
pop
leave
or
dec
test
xor
push
aad
je
xchg
lea
ss
sub
je
xchg
lea
ss
sub
je
xchg
sbb
and
jg
test
xchg
or
movsl
ljmp
push
aad
je
xchg
add
call
pushf
ret
xchg
je
loopne
lret
push
push
or
rcll
jle
xor
outsb
mov
fwait
cmp
push
xchg
hlt
loopne
fcmovnu
inc
pusha
pop
inc
mov
fisttpl
gs
xorl
jbe
inc
xor
dec
cmp
push
das
imul
jecxz
pop
jecxz
jle
fisttps
mov
jle
sbbl
fsubp
ror
sbb
and
mov
test
xchg
jnp
clc
or
dec
test
push
out
xchg
mov
mov
out
sbb
cmpsb
dec
lret
add
call
lcall
jg
adc
andb
adc
mov
dec
test
stos
or
rolb
jecxz
push
aad
cmp
aaa
add
push
and
fidivl
arpl
or
scas
dec
cmp
cmp
les
xor
cs
mov
mulb
fs
cmp
sbb
or
outsb
in
mov
gs
jl
jns
fmuls
aas
xlat
dec
jbe
arpl
sahf
lret
or
inc
push
daa
sti
add
push
pop
sub
lods
aad
add
call
xor
jb
movsb
sbb
sbb
jne
fists
cmp
rclb
xchg
xlat
cmp
or
leave
popf
or
stos
cmp
es
test
mov
inc
sti
ja
lret
lock
popa
xor
add
les
and
push
sub
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
dec
clc
dec
repz
test
popf
push
push
int
hlt
mov
xchg
xchg
xor
dec
xchg
push
sub
fildll
inc
jae
xchg
lock
call
mov
movsl
sub
ljmp
inc
ret
dec
cltd
outsb
loope
inc
xchg
push
sbb
jge
dec
cmp
ret
jne
jmp
fildll
je
es
mov
je
or
cmp
push
pop
adc
adc
xchg
mov
pushf
in
fnstsw
push
mov
add
imul
xchg
xchg
cmp
out
push
aaa
push
rcll
inc
repz
mov
fcom
lds
inc
js
cs
dec
push
cmp
pop
int3
cltd
je
add
call
inc
push
mov
mov
pop
xor
imul
loope
fwait
into
aad
mov
fadd
outsl
jmp
mov
xchg
sbb
ret
and
mov
cmc
lahf
pop
lea
push
mov
arpl
cmp
sub
cmc
jo
inc
and
das
sti
cmp
pop
loopne
jo
inc
and
inc
and
inc
and
ficomps
dec
mov
push
inc
scas
mov
pop
stos
push
fnstcw
outsb
mov
subl
add
add
jg
or
sarb
dec
rcll
or
push
mov
cmp
stc
ret
scas
xchg
dec
mov
or
jmp
sub
add
adc
outsb
mov
add
subl
imul
sub
push
pop
aaa
pop
xor
shll
mov
jg
loope
jae
sub
lea
inc
jo
cmpsl
cltd
shrb
insl
stos
icebp
sub
jecxz
daa
jge
push
or
mov
popf
cmpb
call
xchg
and
sti
inc
inc
adc
andl
int3
cwtl
pushf
idivl
and
dec
in
and
add
mov
xchg
mov
mov
mov
or
mov
je
cmp
fbld
sahf
pop
ret
ja
test
pop
stos
jl
jns
fmuls
aas
xlat
dec
jbe
add
arpl
movsb
mov
jmp
adc
pop
inc
ljmp
flds
push
adc
adc
shrl
pop
ja
fists
cmp
add
call
add
lcall
push
adc
leave
popf
or
stos
cmp
push
pop
loop
loopne
add
xor
test
add
add
les
and
in
lock
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
or
out
and
adc
mov
fcmovnb
or
push
add
mov
jbe
cmpsb
jo
mov
mov
jnp
ret
bound
js
push
das
mov
and
add
call
inc
scas
mov
out
test
or
clc
mov
test
icebp
enter
push
movsl
add
xor
push
bound
push
cmp
xchg
add
insb
sbb
mul
add
cltd
clc
in
fnstsw
sub
pop
xchg
icebp
dec
xchg
xchg
cmp
scas
xchg
cmp
ret
mov
test
or
mov
lcall
inc
pop
xor
jp
psrlq
fadd
jb
cwtl
cmp
adc
dec
movsl
sub
and
add
call
ja
push
mov
lods
lock
ljmp
movsb
pop
loopne
jo
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
mov
loop
mul
pop
mov
and
aaa
push
sbb
fisttps
mov
sti
cwtl
out
sbb
mov
addr16
imul
push
jb
dec
jmp
das
pop
jne
scas
jb
push
lret
mov
call
mov
leave
adc
and
rcrb
inc
rcrb
imul
aaa
es
mov
mov
pop
clc
cltd
dec
in
or
test
ss
fstps
mov
push
inc
and
xchg
jmp
mov
mov
mov
sub
inc
cmpsl
mov
mov
xor
addr16
sub
std
lret
les
imul
adc
icebp
dec
add
cmpsl
mov
xlat
aas
rol
pop
aad
clc
stos
xchg
add
call
sub
mov
push
push
ret
push
cmpsl
mov
inc
mov
xor
cs
dec
xchg
loopne
add
je
ljmp
sbb
xchg
test
pop
stos
fisttpl
aaa
outsb
inc
leave
inc
ret
orl
jbe
add
arpl
movsb
mov
jmp
adc
pop
cmpsl
es
ss
mov
pop
push
adc
adc
clc
dec
push
test
icebp
or
pop
mov
popa
out
fcompl
cmpsl
mov
aas
into
mov
les
mov
add
call
mov
sbb
adc
adc
or
sar
ja
mov
je
les
and
jmp
mov
loopne
cmp
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xchg
paddusw
arpl
pop
adc
sub
test
jecxz
push
aam
mov
sbb
mov
mov
cmp
and
das
push
insb
pop
jbe
sub
idivl
lret
mov
mov
sbb
cmp
sbb
gs
shl
mov
add
call
sbb
jns
sub
jb
push
mov
loopne
int
inc
scas
into
xchg
inc
jnp
ss
inc
and
mov
addr16
and
jno
lea
ss
jp
mov
cmp
mov
insl
dec
jge
mov
cli
push
or
mov
andl
sahf
out
add
cli
or
aad
out
fistpll
push
scas
aaa
shlb
lea
pop
or
push
jge
hlt
adc
adc
push
scas
push
push
jecxz
jne
movsb
pop
loopne
jo
inc
and
call
cmc
jo
inc
and
inc
and
inc
and
inc
and
fdiv
lea
fdiv
lea
lahf
imul
test
sub
and
iret
push
enter
loopne
jo
inc
and
lret
add
outsl
popa
sbb
jne
sub
jecxz
cmpsl
xor
mov
ret
psubusb
cmc
aas
add
imul
sub
push
rcpps
jno
cmp
rcrl
xchg
or
adc
add
call
sbb
scas
and
movl
inc
dec
ds
mov
pushf
cli
xchg
stc
mov
push
stc
xchg
cld
and
mov
decl
out
sbb
xchg
fidivrl
mov
jbe
jg
or
jae
pop
sub
mov
bound
jecxz
pop
daa
cs
mov
jnp
sub
xor
stos
ja
lock
push
add
cmp
push
int
sbb
dec
pop
gs
mov
lods
popf
push
mov
ficomps
aad
jp
popf
movsb
or
add
call
xor
pop
sbb
cwtl
push
call
stc
inc
sbb
xchg
test
pop
stos
fildl
mov
ljmp
xlat
dec
jbe
xchg
rcl
and
xor
xor
mov
rorb
ss
mov
or
adc
inc
clc
dec
push
test
and
aaa
adc
popa
out
fcompl
jg
fdivl
and
aas
into
mov
les
mov
rorl
or
out
insl
inc
test
dec
les
and
add
call
dec
add
adc
push
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
icebp
jnp
out
lea
jbe
shlb
cmp
jnp
inc
lods
mov
shll
cmp
push
dec
add
sbb
sub
pop
mov
idivl
lret
cmp
jecxz
inc
lahf
enter
xchg
cmpsl
ss
leave
pop
jb
stos
mov
push
mov
pop
ficomps
jl
stos
test
ja
push
in
iret
rolb
add
call
push
xor
pusha
xchg
loope
loopne
xlat
xchg
cmp
inc
movsb
mov
jp
mov
cmp
mov
insl
dec
jge
mov
movsl
imul
andl
push
mov
pop
mov
sbb
int
int3
sbb
lret
pop
push
pusha
add
dec
arpl
lods
and
mov
decl
rorl
scas
mov
jmp
or
enter
das
ljmp
cmc
jo
inc
and
fdiv
lea
fdiv
lea
add
call
or
enter
das
ljmp
push
pop
push
clc
mov
iret
push
enter
sub
and
iret
push
enter
loopne
pop
push
clc
mov
inc
mov
rol
addr16
sub
xchg
lods
fidivl
call
pop
test
inc
mov
pop
xchg
hlt
pop
cmp
adc
mov
mov
std
lods
inc
jg
add
push
test
hlt
mov
cmc
add
mov
pop
pop
push
testb
in
add
add
call
xchg
xor
idiv
dec
into
sub
pusha
jne
lods
or
mov
adc
pop
add
addl
lcall
push
je
mov
cwtl
stos
test
mov
outsb
jp
js
aas
stc
inc
out
push
stc
fisubrs
or
add
loopne
lea
cmpsb
mov
lods
popf
push
sub
movsb
or
mov
cwtl
mov
and
fidivrl
add
pusha
sarl
imul
cmpsl
mov
call
xchg
test
pop
stos
fildl
mov
ljmp
cltd
clc
lea
rcl
and
xor
xor
mov
rorb
ss
mov
cmp
pop
or
clc
dec
push
test
and
aaa
bound
shlb
insl
ficomps
out
lods
ret
and
aas
into
mov
les
mov
arpl
mov
adc
push
jae
aad
test
dec
les
and
or
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
movsb
cmpsb
outsb
push
inc
and
adc
aad
dec
cmp
mov
pop
stos
xlat
imul
shll
jg
pop
adc
test
and
pop
popa
mov
dec
loopne
jo
add
std
lret
push
xchg
ss
lret
push
xchg
ss
lret
popf
test
in
xor
and
das
adc
fidivl
pop
adc
xchg
arpl
call
mov
and
rolb
inc
movsb
mov
add
call
sbb
inc
push
xor
outsl
js
xchg
bound
cltd
and
cld
mov
das
xchg
inc
push
cmp
les
insb
xor
outsl
fwait
aam
mov
es
dec
in
pop
roll
mov
add
mov
orb
mov
cmp
ljmp
ljmp
or
cld
out
lahf
imul
test
scas
lcall
scas
lcall
sub
and
iret
push
add
call
and
xor
xchg
stos
adc
cmp
sbb
mul
es
sbb
adc
mov
xlat
mov
xchg
push
xchg
in
cmc
scas
add
sub
mov
jle
popf
sbb
in
xor
out
aam
cmpsb
outsl
jno
std
dec
les
jnp
pop
lds
fcoms
enter
inc
movsl
dec
gs
lds
ret
fwait
or
adc
rorb
fdiv
adc
adc
sarl
int3
mov
push
mov
add
call
pusha
out
dec
xchg
rorb
sbb
int3
sbb
pop
xchg
jecxz
bound
dec
push
pushf
adc
cmp
sub
out
and
sbb
or
cmp
push
dec
and
cltd
popf
ljmp
xchg
jo
and
or
sub
repnz
mov
movsb
or
mov
pop
lahf
lahf
div
xor
sbb
sbb
cltd
mov
imul
cmpsl
mov
and
cmpsb
xor
xchg
mov
ljmp
imul
call
call
push
out
dec
inc
int
aad
cmpsl
es
ss
mov
cmp
pop
or
clc
dec
push
test
cli
jecxz
cmpsb
cmc
xor
insl
ficomps
out
lods
ret
jae
mov
jnp
in
stos
lret
fiadds
add
les
and
inc
mov
lods
stos
mov
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
inc
xlat
outsl
mov
or
add
call
push
pushf
jnp
push
xchg
adcl
xchg
jl
imul
pop
flds
jnp
dec
divl
pop
nop
mov
rcrl
jmp
lahf
xor
ret
ss
lret
lahf
xor
adc
outsb
dec
cmc
addr16
jo
mov
insl
js
cs
mov
or
mov
sub
mov
push
and
rolb
push
sbbb
rcll
or
aad
mov
push
xor
outsl
js
xchg
in
sub
lods
in
add
call
push
outsl
sbb
and
mov
xor
insl
shrb
lahf
mov
dec
lds
lock
sub
mov
int
jp
mov
jecxz
inc
ljmp
jb
sub
and
iret
push
enter
sub
and
iret
push
enter
sub
and
iret
push
enter
mov
jecxz
mov
push
xchg
stos
adc
inc
xor
xchg
sbb
sbb
pop
jns
mov
and
sbb
add
call
mov
loop
mul
sbb
insb
push
out
lret
fidivs
jle
push
cmpsl
enter
movsb
mov
xchg
lds
stos
or
push
mov
imul
push
xchg
movsb
lret
jo
mov
movsb
lret
jo
mov
test
popa
mov
jno
ja
in
inc
mov
shl
inc
sub
or
xchg
rolb
xor
rcrl
je
push
inc
mulb
sub
or
mov
loop
negl
cmp
mov
add
call
in
xchg
add
test
mov
sbb
dec
pop
cmp
test
stc
cltd
popf
ljmp
xchg
jo
and
inc
aam
mov
xor
movsb
or
mov
xor
mov
inc
sbb
jg
jle
cltd
mov
dec
lods
subb
and
cmpsb
xor
xchg
mov
ljmp
imul
jnp
or
shlb
mov
mov
cmp
call
jns
pop
xchg
add
pop
cli
jecxz
cmpsb
cmc
xor
insl
ficomps
out
lods
ret
jae
mov
mov
mov
and
les
and
les
and
or
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
faddp
sbb
mov
sub
test
mov
lods
ds
dec
int3
cmp
lods
and
mov
xchg
popa
add
call
mov
int3
mov
xor
and
sbb
or
mov
arpl
rcrl
mov
dec
jbe
fs
add
pushf
std
dec
and
pop
or
or
jecxz
mov
pop
push
das
or
rcll
jns
add
push
sbbb
roll
rcll
inc
push
xor
outsl
js
xchg
bound
in
sbbb
adc
pop
movsb
or
mov
dec
add
test
outsl
add
call
loop
push
adc
fistpl
mov
insb
pop
jno
mov
pushf
in
add
imul
enter
sub
and
iret
push
enter
sub
and
iret
push
enter
mov
jecxz
mov
add
inc
or
pop
jmp
xchg
xorb
out
mov
mov
das
stos
xchg
sub
es
push
xchg
stos
adc
mov
loop
mul
mov
push
rclb
or
and
call
inc
xor
rcrl
ss
loopne
test
scas
cld
jns
add
out
add
or
adc
sub
jae
cli
enter
add
sub
mov
fs
or
sub
out
sbb
and
mov
and
std
mov
sub
push
ds
and
cli
mov
push
adc
inc
fimuls
mov
sub
mov
bound
mov
imul
test
xchg
mov
cmp
and
scas
fimull
sbb
xorb
jg
test
call
mov
xor
xchg
das
ss
jg
sbb
inc
mov
movsb
or
mov
pop
int
xchg
pop
roll
in
cs
sbb
jg
jle
cltd
mov
dec
lods
subb
pop
cld
imul
mov
ljmp
imul
jnp
or
shlb
mov
mov
cmp
pop
xchg
add
pop
cli
jecxz
cmpsb
cmc
xor
add
call
mov
out
lods
ret
jl
and
push
test
dec
les
and
les
and
arpl
cwtl
imul
leave
or
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
flds
push
jp
jle
out
fnstcw
imul
test
cmp
xchg
in
shll
outsl
xor
nop
test
jge
mov
and
lret
cmpsb
fs
das
add
call
incl
int
int3
mov
and
inc
and
mov
and
inc
gs
mov
pop
fst
ror
push
sbb
xchg
icebp
cwtl
sub
insb
movsb
lods
xchg
xor
xor
mov
adcl
js
xor
rcll
inc
push
xor
outsl
js
xchg
sarl
fisubrs
or
arpl
mov
jnp
call
inc
dec
cmpl
jo
fnstenv
sub
jmp
lock
call
pop
mov
aaa
or
xchg
push
in
repz
xor
sub
and
iret
push
enter
sub
and
jecxz
mov
push
repz
xor
testl
inc
xor
pop
addr16
in
cmp
cld
sub
es
jecxz
js
xorl
outsl
and
mul
in
mov
jmp
sub
and
insb
test
cwtl
pop
jne
xor
fs
sti
mov
sti
push
ret
pop
je
pusha
add
call
push
lds
jns
xchg
xor
popf
push
push
inc
cmp
aaa
rclb
ja
mov
pop
inc
enter
lods
jae
test
or
or
je
jns
das
mov
mov
mov
mov
roll
lock
rep
mov
test
cmp
mov
call
jle
test
jl
sub
dec
pop
sbb
xorb
aam
loop
sbb
in
dec
lret
xor
adc
movb
adc
mov
add
call
inc
inc
js
cs
incl
ss
cltd
jp
or
mov
mov
cltd
mov
or
rcl
into
cmpsl
and
pop
cld
imul
mov
ljmp
imul
jno
or
rorb
dec
shlb
cmpsb
jp
jns
pop
dec
inc
pop
daa
jmp
fwait
pop
pop
cli
jecxz
cmpsb
sbb
ficomps
out
lods
ret
das
xchg
clc
loopne
lret
movsl
add
sub
or
add
call
pop
je
les
and
sub
shll
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
aad
push
add
movsl
mov
cmp
subb
mov
pop
int3
lret
gs
xchg
ljmp
xor
aam
inc
sbb
xor
arpl
jle
mov
dec
out
icebp
in
fwait
je
push
adc
and
shrl
into
pop
add
sbb
call
fisubrs
mov
pop
push
nop
imul
pop
pop
push
mov
lcall
push
cmp
dec
xchg
xchg
cmp
out
push
aaa
push
rcll
inc
mov
mov
in
jecxz
test
xchg
mov
mov
gs
xchg
jg
imul
mov
dec
push
jp
imul
adc
fistpl
and
shrb
dec
mov
pop
inc
pop
in
add
imul
or
imul
add
add
repz
xor
mov
rclb
ret
mov
jecxz
mov
push
repz
xor
testl
mov
mov
das
stos
xchg
pop
addr16
in
cmp
cld
sub
es
jb
sub
and
loop
mul
jecxz
sbb
lods
rcll
je
aas
mov
enter
leave
popa
xor
xchg
or
jnp
and
fs
mov
push
out
clc
out
mov
stos
rcrl
scas
xchg
addr16
into
divb
adc
mov
jge
xchg
call
and
jl
dec
pop
add
sahf
and
lahf
iret
stos
xchg
mov
or
stos
xchg
adc
lds
mov
mov
cltd
lds
jp
inc
ret
outsl
icebp
lock
xchg
arpl
push
insl
xchg
movb
dec
fsubrs
test
jbe
mov
jmp
lods
jmp
scas
out
jae
mov
jmp
addr16
push
movsb
or
mov
push
ret
mov
das
cmp
xor
cltd
jp
or
add
call
jp
inc
sbb
cltd
mov
or
rcl
into
cmpsl
and
pop
cld
imul
mov
inc
shl
leave
lock
cmp
push
sub
jno
or
rorb
dec
shlb
cmp
xchg
jmp
xor
pop
daa
jmp
fwait
pop
pop
cli
jecxz
cmpsb
sbb
ljmp
sub
bound
cs
sbb
dec
cwtl
jbe
push
sahf
cltd
pop
sub
or
popa
pop
jg
insl
mov
inc
lods
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
data16
out
repnz
fimull
fimuls
mov
mov
xchg
adcl
or
push
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sub
aad
mov
cmp
xchg
inc
cmp
push
or
mov
clc
mov
mov
negl
push
push
clc
int3
push
std
inc
jg
scas
mov
sub
call
and
lret
pop
push
mov
jne
push
cmc
out
adc
push
xlat
dec
pop
mov
ss
in
movsl
leave
xor
icebp
add
call
bnd
inc
gs
bound
js
test
pushf
or
aaa
push
rcll
inc
mov
mov
in
jecxz
test
xchg
mov
arpl
mov
test
fisubs
mov
stos
aad
stos
lods
cli
dec
sbb
fidivrl
push
mov
push
cli
rorl
incb
mov
and
xchg
shr
jnp
pop
mov
stos
adc
repz
xor
mov
imul
push
repz
xor
mov
add
call
imul
add
inc
or
pop
jmp
xchg
xorb
out
addr16
in
cmp
cld
mov
in
push
test
pop
push
clc
mov
mov
roll
jae
cs
fcmovu
xchg
notl
arpl
xor
push
push
fmul
cli
xor
ds
mov
out
mov
ljmp
mov
jle
in
shll
fs
mov
ret
sub
fldcw
popf
adc
in
xchg
xchg
jns
mov
mov
jmp
loop
faddl
add
call
and
int3
mov
ja
int
pop
out
pop
sahf
adc
dec
mov
mov
add
icebp
lods
les
movb
mov
sbb
test
jbe
popf
shrd
or
jns
sahf
mov
adc
ret
xchg
add
jl
sub
mov
inc
inc
js
cs
stc
imul
sahf
lcall
popa
cltd
jp
or
cmpl
sbb
cltd
mov
or
rcl
into
cmpsl
and
pop
cld
imul
call
loopne
add
leave
lock
cmp
push
sub
jno
or
rorb
dec
shlb
cmp
xchg
jmp
xor
pop
daa
jmp
fwait
pop
pop
cli
jecxz
cmpsb
sbb
pop
cmp
xchg
stos
lret
adcb
stc
pop
lods
je
popa
dec
shrl
lods
ds
test
stos
mov
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cld
out
add
call
faddl
cmp
gs
adc
jmp
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fiaddl
push
add
mov
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
add
inc
xchg
loope
jl
in
adc
mov
mov
cmc
xlat
jle
mov
fistps
int3
add
and
icebp
dec
mov
nop
inc
out
ja
out
nop
loop
cmp
test
dec
std
dec
or
sub
lahf
inc
int3
adc
cmpsl
leave
mov
shlb
xor
fwait
insb
push
dec
push
add
push
sub
sub
mov
xorl
stc
mov
shrb
ds
roll
add
call
inc
mov
mov
in
jecxz
incb
movsb
sub
jb
js
mov
icebp
iret
nop
mov
or
mov
fstps
leave
mov
push
xchg
icebp
call
jbe
mov
cmp
pusha
imulb
in
jo
ljmp
add
inc
or
pop
jmp
dec
imul
mov
repz
xor
mov
imul
add
inc
or
pop
jmp
adc
jbe
adc
add
call
mov
sub
and
jo
inc
and
es
mov
out
fwait
aam
jecxz
test
cli
inc
movsl
out
scas
ror
inc
adc
lods
cli
mov
cmpsl
cmpsb
mov
jae
ja
mov
mov
and
dec
scas
inc
lahf
call
lock
mov
pop
mov
andl
mov
int
lock
mov
sahf
rclb
stos
stos
loopne
pusha
leave
pop
cmp
das
sarl
jns
jl
test
call
jg
inc
movsb
lock
or
repz
push
fldl
test
jbe
popf
shrd
or
sahf
mov
pop
xchg
mov
mov
cmpsl
movsb
or
mov
scas
xchg
in
je
or
mov
pop
sahf
lcall
popa
cltd
jp
or
cmpl
sbb
cltd
mov
or
rcl
into
cmpsl
and
pop
cld
imul
mov
inc
shl
leave
lock
cmp
push
sub
jno
add
call
or
rorb
dec
shlb
cmp
xchg
jmp
xor
pop
daa
jmp
fwait
pop
pop
cli
jecxz
cmpsb
movsb
inc
testl
stos
jbe
xchg
sbb
es
cld
mov
imul
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pusha
pusha
mov
test
push
subl
out
dec
out
dec
fsubp
push
add
call
out
dec
fsubp
push
dec
out
dec
fisubrl
ret
sbb
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
das
push
add
cmpsl
jo
add
call
xchg
mov
in
mov
jnp
pop
arpl
in
inc
call
pop
repz
cmp
leave
rorb
mov
pop
xchg
inc
sbb
int
cmpb
cld
fwait
xor
shlb
mov
push
pop
daa
stc
sub
outsl
in
xchg
ror
cmc
les
xchg
iret
dec
mov
ss
in
movsl
leave
xor
mov
iret
aas
insb
lods
mov
push
xchg
push
test
in
addr16
sub
in
jecxz
incb
movsb
sub
jb
js
mov
add
call
push
aaa
aam
je
pop
jge
out
movsb
or
mov
sbb
jo
fcompl
mov
lret
aad
adc
imul
push
jecxz
jne
adc
lahf
pop
lea
push
ljmp
jb
sub
and
iret
push
enter
sub
and
shll
push
sbb
rclb
xchg
stos
adc
mov
enter
imull
in
fs
or
xor
andl
testb
call
push
out
lahf
add
loope
rcrl
stos
xchg
jle
or
xchg
add
lods
test
imul
leave
loop
xchg
pushf
test
in
and
push
mov
cmpsl
mov
mov
dec
dec
mov
adc
int3
ficoml
push
jne
mov
ljmp
addl
clc
mov
jne
sub
aas
sti
pop
sub
pop
out
inc
fwait
int
imul
fildl
sbb
push
icebp
and
rcl
push
mov
sbb
repz
push
fisttpll
cmp
add
call
pushf
in
or
fldt
call
ret
movsb
or
mov
inc
inc
js
subl
and
repnz
shrb
sahf
lcall
popa
cltd
jp
or
cmpl
sbb
cltd
mov
or
rcl
into
cmpsl
and
pop
cld
imul
mov
inc
shl
leave
lock
cmp
push
sub
jno
or
rorb
dec
shlb
cmp
xchg
jmp
xor
add
call
daa
jmp
fwait
pop
pop
cli
jecxz
cmpsb
subl
scas
in
outsb
scas
jno
mov
sbb
push
loope
xchg
lret
flds
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jbe
jmp
bnd
sub
lcall
icebp
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
ficoml
fldlg2
mov
sahf
xchg
mov
push
ljmp
mov
call
cmpsl
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
push
sbb
loope
shr
test
incl
xor
xor
ss
stos
lds
add
call
jne
int
xchg
inc
xor
inc
lds
push
sbb
dec
mov
movsb
jne
xor
sbb
cld
fwait
xor
shlb
mov
push
cli
and
add
or
inc
je
adcb
mov
jp
stos
mov
jg
push
adc
bound
dec
jae
lods
mov
mov
in
jecxz
test
xchg
mov
arpl
inc
xchg
dec
test
push
scas
hlt
xor
or
mov
add
call
or
lods
xchg
cmp
mov
aas
mov
adc
adc
pusha
sub
mov
and
and
repnz
xchg
movsb
pop
loopne
jo
inc
and
fdiv
lea
mov
lods
ljmp
imul
clc
mov
iret
push
enter
imul
test
outsl
and
mul
xor
mov
andl
out
popf
fwait
aam
jecxz
insb
mov
ss
ss
mov
loope
rclb
dec
mov
call
or
inc
ds
jae
and
push
mov
cltd
sti
outsb
int
xchg
push
pop
jns
lds
icebp
lea
sbb
lahf
push
in
mov
aad
xchg
mov
push
sub
in
imul
xchg
icebp
loop
xchg
dec
mov
cli
sub
fwait
int
imul
cmp
mov
pop
xchg
subps
cmpsb
cs
mov
pop
cmp
jbe
test
dec
pop
sbb
xorb
in
out
pop
aaa
jle
movsb
or
mov
inc
inc
js
add
call
cs
and
aas
jno
aad
loopne
out
jle
repnz
shrb
sahf
lcall
popa
cltd
jp
or
cmpl
sbb
cltd
mov
or
rcl
into
cmpsl
and
pop
cld
imul
mov
inc
shl
leave
lock
cmp
push
sub
jno
or
rorb
dec
shlb
cmp
xchg
jmp
xor
pop
daa
jmp
fwait
pop
imul
jle
mov
add
call
pop
pop
pop
dec
and
repnz
orl
in
adc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
aaa
andb
test
mov
xor
fsubp
push
dec
out
dec
ficoml
xor
rep
pop
mov
push
fsubp
push
dec
out
dec
fidivl
rol
sahf
sub
sbb
push
sahf
push
jne
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
std
imul
daa
or
mov
push
inc
jb
daa
mov
xchg
scas
inc
sub
mov
stc
xchg
movsb
adc
test
repnz
shrb
sub
and
pop
icebp
push
add
call
sub
sbb
dec
mov
and
fbld
push
push
push
pop
sti
xor
inc
repnz
or
or
or
lea
into
repz
fstpt
mov
xor
push
push
dec
rcr
dec
adc
sub
hlt
xchg
mov
arpl
inc
xchg
dec
test
jg
dec
cwtl
sub
lahf
add
pop
xchg
popf
sbb
adc
cli
data16
mov
pop
mov
fadd
outsl
jmp
adc
add
call
and
jle
xchg
pop
add
push
aad
je
xchg
mov
movsb
pop
loopne
jo
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
and
fcmovnu
in
movsl
call
and
fiadds
cli
mov
mov
or
daa
and
loope
loop
sbb
mov
shll
and
xor
mov
mov
dec
jg
push
and
into
sbb
int3
int3
popf
pop
ljmp
call
push
sub
cmpsb
int
push
test
pop
fdivr
adc
pop
test
xor
adc
rcrl
nop
dec
int3
pop
lret
idivb
scas
lea
push
mov
inc
ret
ja
pushf
sub
cmp
call
call
icebp
lods
les
sbb
mov
pop
cmp
xor
jl,pn
sub
ficoms
out
scas
rorl
scas
movsb
or
mov
inc
inc
js
mov
mov
or
jae
call
dec
shrb
add
call
sahf
lcall
popa
cltd
jp
or
cmpl
sbb
cltd
mov
or
rcl
into
cmpsl
and
pop
cld
imul
mov
inc
shl
leave
lock
cmp
push
sub
jno
or
rorb
dec
shlb
cmpsb
jp
jns
pop
dec
inc
pop
daa
jmp
fwait
pop
out
pop
in
inc
aas
dec
jno
mov
adc
jne
fisttpll
mov
pop
stos
mov
mov
adc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
loop
pushf
adc
rorl
icebp
fsubp
push
dec
out
dec
fisubl
leave
cs
mov
push
shlb
mov
in
xlat
notl
add
lock
jg
addr16
fsubp
push
dec
out
dec
fiaddl
push
add
mov
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
hlt
xchg
loopne
fdivr
xchg
data16
lahf
xor
pop
pop
sbb
xchg
cmc
movl
adc
test
enter
movsl
pop
icebp
or
dec
cli
push
fbld
test
mov
repnz
jmp
rcll
inc
sub
hlt
xor
pop
hlt
xor
call
inc
sub
hlt
xor
lods
test
outsl
mov
xorb
xchg
xlat
icebp
and
pusha
mov
jb
imul
outsb
cmp
add
bound
sarl
arpl
inc
xchg
dec
test
dec
sbb
mov
js
out
int3
adc
or
lods
jbe
dec
dec
add
out
cmc
ja
lcall
pop
and
jno
hlt
sahf
iret
daa
mov
leave
or
dec
test
xor
call
add
call
push
push
aad
je
xchg
and
fcmovnu
in
movsl
incl
std
pop
jns
cmpl
lret
aam
mov
fwait
push
stos
or
mov
jmp
pop
and
fiadds
cli
mov
mov
in
lahf
sub
pop
mov
cmp
jo
mov
push
adc
pop
mov
xor
mov
mov
dec
leave
xchg
xchg
and
mov
ss
sub
push
mov
jg
sbb
ret
icebp
xchg
sbb
cld
adc
pop
test
int3
sbb
add
call
cli
push
mov
addr16
sahf
and
sbb
pop
sti
into
pusha
leave
pop
cmp
das
sarl
jns
jl
aam
jmp
rorl
insl
xchg
movb
dec
fsubrs
push
dec
fsts
movsb
mov
sbb
mov
add
inc
inc
js
movsb
or
mov
dec
xlat
mov
xlat
push
mov
or
pop
pop
xor
dec
imul
add
rol
popa
cltd
jp
or
mov
mov
call
push
jle
cltd
mov
or
rcl
into
cmpsl
and
pop
cld
imul
mov
ljmp
imul
jno
or
shlb
mov
mov
cmp
pop
aaa
push
dec
mov
mov
cmp
jmp
dec
scas
cld
imul
sub
and
aam
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
sbb
addr16
dec
out
mov
inc
jge
enter
sub
je
and
aas
aam
cld
cltd
push
jns
mov
xor
sti
stos
fs
mov
mov
mov
test
inc
nop
imul
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
inc
cmc
loopne
jle
dec
imul
inc
arpl
enter
xchg
push
jmp
sub
ret
dec
pop
fwait
push
xor
cmp
int3
fs
jnp
cmp
inc
icebp
test
mov
repnz
jnp
mov
xor
or
push
addl
js
jge
out
push
push
push
pop
sti
jbe
add
call
inc
or
mov
ljmp
mull
cmp
sub
sbb
jp
push
mov
fidivs
gs
dec
jmp
mov
bound
sbb
mov
rcrl
dec
sub
insb
add
aad
iret
xchg
pop
lahf
repnz
mov
fadd
outsl
jmp
idivb
pop
cmp
push
mov
dec
sbb
xor
pop
femms
adc
loop
inc
or
inc
xlat
push
cbtw
cmp
popa
and
and
add
call
cmp
xchg
and
and
push
pop
and
fiadds
cli
mov
mov
imul
sub
adc
push
in
dec
sbb
mov
shll
and
mov
inc
fisubl
dec
lods
aad
inc
jae
ds
jae
and
push
mov
push
sbb
pop
push
iret
test
loope
add
aaa
fwait
and
mov
mov
or
pop
xor
das
lock
aad
xchg
pop
mov
cltd
shll
sbb
jns,pn
add
call
mov
jmp
fildl
sbb
orb
movsb
lock
or
jmp
std
addr16
mulb
adc
mov
inc
inc
js
movsb
or
mov
cmc
out
iret
shll
or
scas
or
pop
pop
xor
dec
imul
pop
mov
stos
xchg
popa
cltd
jp
or
mov
mov
cltd
mov
dec
lods
subb
pop
cld
imul
mov
add
call
ljmp
imul
jnp
or
shlb
mov
mov
cmp
pop
cli
fsts
push
leave
cmp
cltd
cmp
test
int
in
ficomps
inc
inc
jb
rcr
stos
popa
adcl
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
adc
xchg
mov
jg
pop
arpl
mov
testl
call
jg
jle
scas
loopne
jge
and
cmp
jge
and
cmp
call
adc
insb
mov
add
cmp
fisubl
aas
cmp
outsl
pop
out
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
fists
pop
xlat
push
add
adc
mov
xchg
xchg
je
test
inc
mov
mov
mov
test
pop
es
sarb
cmpsb
loope
mov
inc
pop
fdiv
aam
adc
jb
je
add
and
cltd
jno
cmp
int3
rclb
mov
out
test
out
test
rsm
data16
cmpb
lret
rcrl
sub
add
mov
add
call
dec
shl
xchg
pop
lret
out
xchg
cmp
test
ljmp
imul
je
adc
push
lods
pushf
rclb
rcll
js
jbe
dec
dec
add
aaa
aam
loopne
or
push
ss
mov
adc
mov
cli
dec
aaa
adc
cmc
je
inc
ljmp
sbb
ret
jne
cmp
repnz
loop
out
lods
inc
mov
arpl
outsl
fildll
fwait
ljmp
loop
out
lods
inc
mov
fiadds
cli
mov
mov
repz
add
call
push
aam
bound
or
and
pop
mov
loope
push
adc
pop
mov
xor
mov
mov
dec
sub
mov
inc
sti
loop
push
jecxz
add
int3
int3
popf
pop
ljmp
push
cmpsb
int
push
test
insb
xor
xor
adc
rcrl
pop
lcall
xlat
xchg
icebp
loop
xchg
dec
mov
cli
sub
fwait
int
imul
cmp
mov
sbb
and
rcl
push
pushf
idivb
add
call
jl
mov
movsb
or
mov
inc
inc
js
movsb
or
mov
jbe
pop
subl
and
push
cwtl
or
scas
jmp
aam
sub
js
repnz
shrb
flds
mov
stos
xchg
scas
cmp
addr16
sbb
jg
jle
cltd
mov
imul
cmpsl
mov
and
cmpsb
xor
xchg
mov
ljmp
imul
jnp
out
dec
inc
int
add
call
cltd
cmpsl
es
ss
mov
fmul
fcmove
rcrl
lock
leave
cmp
cltd
cmp
rcrl
stos
mov
cmp
lods
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pusha
pusha
mov
test
push
icebp
fsubp
push
dec
out
dec
fisubrl
sbb
daa
adcb
and
jge
and
cmp
jge
and
cmp
les
call
bound
daa
hlt
ret
xlat
adc
imul
lock
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sub
aad
mov
cmp
add
call
xchg
inc
mov
cmp
mov
repz
rclb
movsl
add
int3
out
outsb
outsl
aam
push
mov
test
je
xchg
add
call
inc
xchg
mov
hlt
add
test
icebp
test
mov
repnz
gs
aad
outsl
dec
loope
test
lcall
sahf
or
clc
pop
push
inc
xor
xchg
cmc
or
cmp
jbe
jne
dec
mov
fidivl
imul
call
loop
insb
enter
lret
les
sbb
lret
inc
loopne
or
or
mov
adc
test
movsb
push
inc
out
negb
data16
mov
fsub
sbb
mov
inc
inc
jae
cltd
enter
daa
xchg
push
sbb
mov
dec
sbb
add
ss
ss
mov
inc
inc
jae
cltd
adc
push
in
xchg
jo
mov
ja
cltd
adc
insb
mov
add
call
add
leave
aad
inc
jae
ds
jae
and
push
mov
jns
nop
divl
xchg
inc
ja
or
or
ret
icebp
xchg
sbb
cld
adc
pop
test
hlt
and
stos
jg
and
pop
lret
idivb
scas
lea
push
mov
into
pusha
leave
pop
cmp
das
pop
call
call
int
mov
jno
or
call
test
xor
movsb
or
mov
inc
inc
js
mov
call
or
hlt
mov
and
out
mov
shl
sti
jne
lret
in
ja
pop
xor
add
mov
out
popf
flds
mov
stos
xchg
dec
jno
stos
ret
xor
sbb
sbb
cltd
mov
imul
cmpsl
mov
test
pop
stos
fildl
mov
ljmp
imul
stc
push
out
dec
inc
int
aad
cmpsl
es
ss
mov
mov
sbb
insl
push
xchg
add
call
and
pop
jns
mov
xchg
or
lret
cmc
mov
add
lock
xchg
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
in
icebp
and
pop
mov
ljmp
mov
movsl
fcomp
sbb
leave
dec
add
inc
and
cmp
jge
and
cmp
jge
and
cmp
mov
rcll
and
mov
xchg
adc
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
fimull
or
icebp
or
adc
mov
mov
or
decl
and
mov
add
call
mov
nop
add
in
divl
xchg
popf
imul
outsl
sub
add
ljmp
data16
pushf
aas
clc
stos
fildll
and
xchg
adc
push
sbb
or
int
mov
leave
push
mov
xor
mov
xor
cmp
mov
in
add
jns
and
mov
repz
ss
enter
lret
push
gs
mov
lret
add
call
xchg
inc
xchg
in
mov
insb
fnsave
add
mov
cltd
jmp
ss
cmp
push
in
pushf
dec
out
jge
or
sub
hlt
sahf
fnstcw
fsub
sbb
or
xor
cmp
adc
push
in
js
fsub
sbb
stos
fsub
sbb
mov
loope
ja
cltd
adc
insb
mov
es
lods
dec
sub
push
sub
mov
inc
sti
loop
push
jecxz
add
int3
int3
popf
add
call
ljmp
pop
out
cld
cmp
insb
ret
sti
push
leave
in
out
aaa
fwait
and
mov
mov
or
pop
xor
addr16
sahf
and
sbb
pop
sti
into
pusha
leave
pop
cmp
das
sarl
jns
jl
packssdw
lods
jmp
movsb
xchg
and
mov
inc
inc
js
movsb
or
mov
inc
inc
js
cs
cmc
xchg
inc
inc
jle
xlat
and
pop
cmp
xor
mov
cmc
out
inc
shl
sti
add
call
test
in
ja
pop
xor
add
push
dec
sarl
or
loope
outsl
sub
lcall
dec
jno
stos
ret
adc
dec
jge
test
pusha
sarl
fdivr
inc
sbb
xchg
test
pop
stos
fildl
mov
ljmp
cltd
clc
lea
rcl
and
xor
xor
mov
rorb
aaa
cwtl
cmp
sti
scas
fwait
testl
push
out
jne
push
popf
add
mov
adc
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
inc
mov
mov
or
aad
cwtl
dec
mov
int3
std
dec
mov
push
call
and
cmp
jge
and
cmp
in
shrl
pop
push
jne
sub
pop
push
ret
jae
mov
imul
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
lock
popa
jns
push
fnstcw
imul
test
int3
sub
or
sbb
mov
xor
jb
dec
adc
push
fidivl
out
add
call
in
mov
shlb
sub
xchg
lahf
sub
das
inc
bound
clc
push
out
add
pop
xor
outsl
cmc
mov
lods
pminub
das
cmp
test
and
push
les
pop
rcrb
ret
dec
and
mov
shrl
sub
rolb
jns
fisttpll
pop
roll
sbb
aas
inc
xchg
dec
test
inc
dec
inc
mov
js
dec
push
xchg
lret
lock
addb
rcr
or
mov
sub
push
add
call
mov
hlt
pop
incb
daa
outsb
pop
aas
daa
push
jb
fimuls
test
test
imul
leave
dec
out
jge
or
cltd
adc
insb
mov
cltd
adc
insb
mov
cltd
adc
insb
mov
cltd
adc
insb
mov
cltd
adc
insb
mov
push
inc
mov
mov
ja
xor
mov
mov
dec
jg
push
and
in
and
push
mov
jns
nop
divl
push
push
mov
push
adc
push
sub
jecxz
inc
xor
mov
add
call
call
jbe
rcrl
pop
lcall
xlat
xchg
icebp
loop
xchg
pop
sub
pop
out
inc
fwait
int
imul
ret
cmpb
dec
jno
movsb
or
mov
inc
inc
js
movsb
or
mov
inc
inc
js
cs
in
push
movsl
mov
packuswb
mov
leave
fwait
mov
pusha
add
scas
inc
adc
adc
jne
sar
add
dec
sarl
or
loope
movsl
mov
add
call
or
dec
jno
stos
ret
hlt
inc
enter
cmc
pop
frstor
push
call
stc
inc
sbb
xchg
test
pop
stos
fildl
mov
ljmp
xlat
dec
jbe
xchg
rcl
and
xor
xor
mov
rorb
add
cmp
bound
ja
mov
add
xchg
imul
cwtl
and
mov
mov
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
addr16
fsubrl
in
cltd
inc
icebp
fsubp
push
dec
out
dec
fisubl
or
cmpsb
aas
sub
and
cmp
jge
and
cmp
jge
and
cmp
add
iret
dec
dec
leave
test
xor
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
sub
data16
add
lods
idiv
sub
inc
ret
loope
mov
add
dec
sti
jbe
pop
sub
scas
lcall
pop
leave
mov
inc
cmova
sahf
xchg
mov
or
scas
icebp
add
call
xchg
sti
xchg
dec
add
sub
cltd
in
icebp
pop
cmp
add
imul
push
stos
cmpsl
cmp
cltd
jno
cmp
int3
rorb
fisttpl
mov
push
ret
stc
jp
mov
or
test
repnz
rcr
fs
fdivrl
dec
sbb
mov
pop
push
lods
pushf
rclb
mov
sbb
lock
ret
insb
lcallw
push
jbe
in
or
mov
inc
inc
js
movsb
or
mov
cmp
add
call
jecxz
xchg
mov
test
mov
xor
jge
or
stos
rcll
mov
lret
popf
enter
lods
test
imul
leave
dec
sub
push
jg
push
and
in
ja
mov
mov
loop
push
jecxz
add
int3
int3
popf
pop
ljmp
pop
out
xchg
cli
add
aaa
fwait
and
mov
pop
insb
adc
int3
sbb
cli
push
mov
dec
int3
pop
lret
mul
xor
shll
call
enter
inc
out
test
test
cmpsl
movsb
or
mov
inc
inc
js
movsb
or
mov
inc
inc
js
cs
lret
cmpsb
pop
rolb
cwtl
sbb
jae
inc
lds
or
stos
xor
fwait
mov
xchg
pop
xor
inc
mov
mov
stos
sub
sub
pop
sti
jle
aam
xchg
int
movsl
mov
arpl
jle
insb
ja
lahf
std
ret
jecxz
xor
cmp
add
fiadds
add
call
fdivr
inc
sbb
xchg
test
pop
stos
fisttpl
aaa
outsb
inc
leave
inc
ret
orl
jbe
add
arpl
movsb
mov
jg
fistpll
pusha
sbb
cmpsb
jl
fsubrl
outsb
jmp
add
xchg
loopne
mov
xor
lods
outsl
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sbb
addr16
dec
out
mov
inc
jge
enter
sub
add
call
adc
aas
lods
jmp
lret
lea
pop
mov
push
call
and
cmp
jge
and
cmp
mov
data16
das
adc
sahf
inc
mov
and
jge
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
fimull
or
icebp
or
adc
jo
pusha
shl
cwtl
fmull
cmp
in
incb
sub
out
or
and
sti
cmpl
sub
jge
xchg
push
mov
outsb
sbb
cmp
mov
test
rcll
mov
rcll
movaps
sub
add
call
cltd
in
icebp
pop
cmp
loop
jle
adc
inc
mov
rcrb
or
mov
arpl
sbb
xor
push
xchg
push
push
sbb
mov
gs
mov
lret
add
jmp
lcall
jo
sub
fwait
test
or
inc
inc
js
movsb
or
mov
inc
inc
js
cs
ficoms
addb
sti
or
popl
and
add
add
call
leave
test
test
imul
leave
mov
ljmp
sub
push
jg
push
and
in
ja
mov
mov
into
sbb
fidivrl
sbb
test
push
adc
push
sub
jecxz
inc
xor
mov
call
jbe
rcrl
add
pop
xor
das
lock
aad
xchg
sbb
push
shrl
add
cli
movsb
movsb
or
mov
inc
inc
js
movsb
or
call
js
movsb
or
mov
inc
inc
js
cs
cli
scas
cmpl
and
cmp
je
add
add
insl
inc
fwait
cld
leave
lret
sub
sbb
fcompl
or
iret
lods
push
jle
aam
xchg
int
jmp
adc
jmp
and
jecxz
xor
cmp
add
fisubs
sahf
pop
ret
ja
test
pop
stos
jl
jns
fmuls
add
call
aas
xlat
dec
jbe
int3
loopne
out
addr16
pop
pop
adc
mov
cmp
ljmp
pop
cmc
xchg
mov
lret
pushf
cld
loop
push
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
push
jge
lret
xchg
cwtl
ret
mov
rcl
sbbl
lahf
push
rcrl
jge
and
cmp
jge
and
add
call
pop
jge
and
cmp
arpl
jle
and
inc
and
or
xlat
push
mov
scas
adc
pop
popf
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
flds
push
jp
jle
out
sbb
mov
xchg
xchg
je
mov
hlt
pop
aaa
adc
push
mov
xor
jmp
test
je
push
repz
cld
outsb
fsubl
sbb
dec
std
js
xchg
mov
out
imul
xchg
mov
sub
fs
mov
test
rcll
rclb
dec
ja
clc
dec
stos
es
ds
xchg
jle
add
call
or
pop
pushf
loope
icebp
adc
lods
xchg
insl
les
pop
xor
cmp
leave
xchg
dec
cmp
rcll
jp
xchg
mov
dec
push
xchg
lret
push
icebp
jo
frstor
ret
insb
lcallw
fsubrl
adc
or
mov
inc
inc
js
movsb
or
mov
inc
inc
js
cs
pop
pop
add
mov
fbstp
das
push
mov
pop
xorb
into
adc
call
in
ja
mov
mov
into
sbb
lret
rclb
push
push
mov
dec
push
sub
cmpsb
int3
ficoml
push
in
out
aaa
fwait
and
mov
pop
insb
adc
cmp
ja
or
xor
inc
cmp
push
sti
insl
jb
cwtl
mov
inc
js
movsb
or
mov
inc
inc
js
movsb
or
mov
inc
inc
js
movsb
or
mov
js
mov
dec
mov
call
sahf
mov
adc
xchg
data16
xor
mov
je
test
jne
popf
and
cmp
enter
insb
popf
mov
cli
sbb
iret
lods
push
imull
sub
popl
les
mov
cld
xor
cmp
mov
cmp
sbb
or
outsb
in
mov
gs
jl
jns
fmuls
aas
xlat
dec
jbe
add
fisubrl
dec
or
add
test
add
call
loop
cs
iret
rcrb
test
aas
aam
ds
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
decl
icebp
fsubp
push
dec
out
dec
fisubl
jo
jp
mov
test
jno
aas
sub
and
cmp
jge
and
cmp
jge
and
cmp
outsl
shlb
jmp
xlat
or
xchg
adc
cltd
add
call
lods
rclb
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
ret
scas
ds
and
jo
push
sbb
into
lret
and
imul
cmp
out
divl
scas
cmp
push
lods
add
fcmovu
adc
pop
addr16
xor
int3
jnp
movsb
mov
mov
inc
push
loopne
push
mov
mulb
jge
out
imul
xchg
dec
out
imul
xchg
dec
out
imul
xchg
mov
rcll
inc
jb
mov
jnp
xchg
fimuls
adc
cmp
jnp
xchg
lds
ss
inc
leave
push
add
call
les
int3
xchg
insl
push
fsubrl
adc
stos
pop
push
lods
pushf
rclb
sbb
lret
inc
loopne
or
daa
cmc
jmp
lcall
xor
sti
in
ret
xchg
std
mov
mov
pop
or
jne
leave
sbbb
xor
movsb
or
mov
inc
inc
js
movsb
or
mov
pusha
int3
inc
cmp
xchg
aad
pop
fmul
dec
pusha
shll
mov
sti
jl
mov
pusha
fnsave
and
add
call
push
pop
mov
cltd
sbb
jmp
dec
and
mov
or
or
inc
pop
loop
pop
sub
lret
xor
movsb
or
mov
inc
inc
js
movsb
or
mov
inc
inc
js
movsb
or
mov
inc
inc
js
cs
cmp
push
movsb
sbbl
cmp
pop
xlat
iret
adc
sub
or
je
adc
dec
pop
daa
data16
leave
ret
jl
lea
call
pop
std
arpl
lahf
popf
or
sbb
jae
call
dec
shrb
std
dec
cld
adc
and
cmp
je
adc
pop
mov
aad
nop
or
mov
ret
hlt
and
pop
cld
imul
jns
stos
iret
out
xchg
bound
jl
jns
fdivr
xor
repnz
sti
imul
jnp
add
test
pop
iret
xchg
xchg
jecxz
insb
fs
add
int
sbb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lahf
in
mov
loop
push
insb
pop
dec
insl
xor
rorl
shll
pop
imulb
add
stos
mov
mov
push
call
and
cmp
jge
and
cmp
ja
sbb
xchg
arpl
cmpsl
fsubrs
and
sbb
leave
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lea
std
fnstcw
imul
test
call
lret
or
pop
pop
xor
jge
jp
in
pop
push
add
push
mov
das
adc
pushf
and
xchg
pop
in
or
loope
xor
hlt
pop
mulb
jge
out
imul
xchg
mulb
jge
out
imul
xchg
sub
enter
jae
mov
ljmp
push
cli
data16
cli
movsb
xlat
std
lret
xchg
les
dec
dec
pop
jg
sub
mov
notl
add
call
fnstcw
dec
push
xchg
lret
mov
sbb
lock
ret
insb
lcallw
dec
negb
outsl
jle
fnstcw
adc
clc
sbb
xor
cmc
test
adc
je
or
mov
inc
inc
js
movsb
or
mov
inc
inc
js
movsb
or
mov
inc
inc
js
movsb
or
mov
inc
inc
js
movsb
or
mov
inc
inc
js
movsb
or
mov
inc
add
call
js
movsb
or
mov
inc
inc
js
movsb
or
mov
inc
inc
js
movsb
or
mov
inc
inc
js
movsb
or
mov
fidivrl
xor
inc
shll
jl
aaa
inc
imul
or
cmpsb
fldl
leave
jns
repz
ja
packuswb
mov
leave
dec
in
js
pop
scas
test
pop
loopne
out
mov
shl
sti
jne
lret
in
das
jp
icebp
pop
pop
xor
call
scas
dec
imul
add
rol
popa
cltd
jp
or
cmpl
sbb
cltd
mov
or
rcl
into
cmpsl
and
pop
cld
imul
jns
stos
iret
out
xchg
dec
or
and
fs
pop
add
dec
xor
lret
enter
inc
bound
imul
or
jb
iret
xchg
popa
out
add
fcompl
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pop
sbb
lahf
imulb
xchg
repnz
dec
sbb
xchg
sbb
in
stos
lahf
push
rcrl
jge
and
cmp
jge
and
cmp
jge
and
cmp
jge
and
cmp
xchg
or
jb
xor
and
pop
test
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
or
add
pop
lea
and
inc
aad
aaa
scas
pop
sub
inc
and
test
jns
jnp
dec
add
call
push
pop
inc
jno
repnz
ret
pop
test
ret
pop
out
xlat
push
xor
sbb
pop
icebp
mov
loopne
jge
mov
mov
mulb
jge
cmpsl
das
stos
loope
ss
sbb
cmp
lock
inc
mov
rorb
or
scas
mov
int3
mov
ljmp
leave
dec
scas
inc
mov
test
lods
xor
ret
out
mov
add
addb
call
inc
ret
insb
lcallw
dec
negb
xchg
std
mov
mov
popa
pop
insl
pop
jb
adc
movsb
or
mov
inc
inc
js
movsb
or
mov
inc
inc
js
movsb
or
mov
inc
inc
js
movsb
or
mov
inc
inc
js
movsb
or
mov
inc
inc
js
movsb
or
mov
inc
inc
js
movsb
or
mov
inc
inc
js
add
call
movsb
or
mov
inc
inc
js
movsb
or
mov
jg
pop
or
lods
les
aas
filds
pop
ficoml
jb
sbb
jge
mov
lret
sub
push
mov
andl
xchg
xor
out
push
ja
packuswb
mov
leave
fwait
mov
pusha
add
scas
inc
shl
sti
jne
lret
in
ja
pop
xor
add
mov
out
popf
flds
mov
stos
xchg
dec
jno
stos
ret
xor
add
call
sbb
sbb
cltd
mov
dec
lods
subb
pop
cld
imul
mov
inc
shl
leave
push
and
push
testb
dec
insl
cmpsl
xor
fwait
push
or
mov
xchg
enter
inc
sbb
pop
popf
jecxz
mov
popa
lds
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lods
into
ficompl
sub
push
push
adc
fld
lret
pushf
int3
add
call
fsubp
push
dec
out
dec
fisubrl
sbb
daa
adcb
and
jge
and
cmp
jge
and
cmp
jge
and
cmp
push
std
stc
mov
std
dec
and
imul
addr16
mov
mov
mov
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pushf
dec
lock
movsl
stos
pushf
mov
lods
rcrl
mov
or
fmuls
mov
shl
jae
xchg
scas
xor
push
cmpsl
mov
repz
inc
rorb
dec
or
aam
sub
std
jbe
add
call
adc
jle
vcomisd
pushf
xlat
dec
vcomisd
pushf
xlat
mov
push
hlt
pop
popa
pop
stos
cli
cmp
pop
ss
aaa
cmp
mov
xchg
andl
andb
xor
lcall
ret
fldl
jp
sbb
cmp
test
stos
dec
divb
daa
imul
in
ja
inc
fisubrl
xchg
subw
sbb
lret
inc
loopne
or
sbb
addb
pop
mov
mov
mov
in
add
call
push
fsubrl
mul
jns
add
push
aaa
or
sti
sbbb
movsb
or
mov
inc
inc
js
movsb
or
mov
inc
inc
js
movsb
or
mov
inc
inc
js
movsb
or
mov
inc
inc
js
movsb
or
mov
inc
inc
js
movsb
or
mov
inc
inc
js
movsb
or
mov
ret
dec
push
cmpsb
testl
sub
call
bound
sbb
gs
mov
or
pop
insb
dec
add
std
out
mov
cli
jns
and
inc
inc
loope,pn
in
xor
mov
je
test
test
push
or
stos
xor
fwait
mov
xchg
pop
xor
inc
mov
mov
stos
sub
sub
pop
sti
jle
aam
xchg
int
movsl
mov
arpl
sub
xor
adc
dec
jge
test
pusha
sarl
imul
cmpsl
mov
test
pop
add
call
fldt
adc
xor
xchg
out
popa
inc
pop
lahf
sub
stos
dec
jge
in
btc
fildl
xor
and
dec
ror
arpl
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
mov
or
cmp
sar
ja
or
sbb
stos
aam
sbb
inc
and
cmp
jge
add
call
push
push
call
and
cmp
jge
and
cmp
mov
dec
mov
mov
mov
add
mov
push
leave
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
andl
sub
xlat
rcl
pop
pop
cmpsb
xchg
addr16
mov
outsl
cmp
pop
add
sahf
lds
pop
pop
mov
idivl
mov
xor
xor
push
hlt
sub
call
movb
cmp
addb
call
mov
cmpl
sub
cmp
mov
xchg
andl
xchg
andl
and
mov
lea
push
jb
pop
inc
push
sar
push
xor
js
push
es
adc
stos
dec
divb
jae
push
ja
inc
fisubrl
out
popa
add
xchg
sbb
sbb
lock
addb
ret
insb
lcallw
xor
mov
and
mov
and
mov
call
fs
jmp
push
andl
cmp
cmp
push
xlat
fnstcw
or
mov
inc
inc
js
movsb
or
mov
inc
inc
js
movsb
or
mov
inc
inc
js
movsb
or
mov
pushf
mov
outsb
rcrb
sbb
cmp
or
dec
sbb
lret
inc
push
xchg
es
adc
cmpsl
sbb
mov
jbe
lahf
push
cmp
arpl
sub
add
call
cmp
iret
adc
sub
mov
adc
xchg
data16
pop
daa
data16
leave
ret
das
jne
popf
and
cmp
enter
insb
push
sub
fcompl
or
iret
lods
push
jle
aam
xchg
int
jmp
adc
insb
ja
lahf
std
ret
jecxz
xor
cmp
pop
call
stc
inc
sbb
xchg
test
pop
stos
fstpt
pop
adc
xchg
hlt
cmp
jle
aad
sahf
rol
or
jge
add
call
stos
pop
xchg
sti
clc
rcr
sub
xor
jg
push
ret
loop
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pop
jns
mov
fsubp
push
dec
out
dec
fidivrl
fwait
je
mov
in
hlt
jne
xor
inc
and
cmp
jge
and
cmp
jge
and
cmp
jge
and
cmp
or
testl
call
cmpsb
int3
add
pop
mov
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
cld
jg
mov
in
add
or
fdivrs
lea
inc
insl
xor
out
mov
sarl
iret
sbb
and
xchg
mov
pop
bound
push
jns
in
cmp
inc
jnp
sbb
lret
popf
je
lret
jle
xorb
cmpl
add
call
icebp
lret
jle
subb
pop
ss
aaa
cmp
nop
sbb
repz
mov
lea
push
jb
xlat
mov
ficomps
xor
lret
fnstenv
xchg
or
xor
out
hlt
out
popa
add
xchg
sbb
sbb
push
icebp
jo
frstor
jnp
pop
sbb
pop
inc
insb
lcallw
xor
mov
xor
mov
xor
mov
adc
jbe
pop
leave
pop
xchg
add
call
mov
adc
mov
adcb
out
sub
mov
dec
sbb
mov
repz
or
gs
je
push
pusha
cmc
xchg
lcall
sub
lods
jle
jns
inc
ljmp
cmc
test
adc
xor
rol
xchg
pop
pusha
pop
jns
in
mov
aad
jns
push
adc
sbb
jge
mov
lret
or
cmpsb
fldl
leave
jns
fldenv
iret
repz
aad
bound
packuswb
add
call
mov
leave
sub
mov
pop
loopne
out
mov
or
sbb
mov
cli
sbb
shrb
imull
sub
ds
cmp
je
les
mov
cld
xor
cmp
add
fidivs
cmp
sbb
or
fisubs
lret
jns
in
cmp
xchg
pop
setbe
cmp
jle
aad
sahf
rol
or
jge
lods
sub
xchg
jmp
push
add
mov
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
or
pop
hlt
ss
jle
popa
icebp
fsubp
push
dec
out
dec
fisubrl
jb
ljmp
aaa
popa
mov
fwait
jge
and
cmp
jge
and
cmp
jge
and
cmp
cli
dec
lea
mov
mov
pop
movb
pop
out
dec
data16
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
push
sbbb
mov
xchg
xchg
je
pop
add
pop
ret
lahf
push
sbb
cmp
mov
adc
shll
mov
pop
rclb
and
push
sti
insb
mov
and
sub
ja
repnz
leave
sub
push
inc
jnp
sbb
cmpl
jle
stos
fs
jno
je
lret
jle
xorb
cmpl
ret
mov
das
pop
push
adc
add
call
es
out
mov
mov
ljmp
dec
jge
ficomps
xor
ret
inc
dec
xchg
adc
xor
test
aam
xchg
mov
or
dec
fistps
xor
jnp
sub
icebp
lahf
sti
in
mov
adc
sbb
push
icebp
jo
frstor
jo
frstor
jo
frstor
jo
frstor
jo
frstor
mov
cli
les
cmp
sbb
mov
into
fwait
mov
mov
call
pop
sbb
push
xorl
jmp
lock
xor
stc
pusha
fidivrl
jmp
push
xor
mov
rclb
cmp
sub
xchg
es
adc
cmpsl
sbb
mov
mov
or
pop
insb
dec
add
mov
lret
pop
loope
mov
and
inc
inc
loope,pn
in
jle
sbb
ja
packuswb
mov
leave
xor
xchg
push
mov
mov
cmc
out
inc
shl
sti
jne
add
call
in
das
jp
icebp
pop
pop
xor
dec
imul
add
rol
popa
cltd
jp
or
and
aad
nop
or
mov
ret
hlt
out
out
lret
mov
inc
xorb
mov
out
addr16
push
jge
out
mov
sub
lock
roll
dec
pop
inc
mov
flds
test
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
aaa
andb
outsl
lret
xchg
cwtl
ret
pop
sub
int3
dec
fmul
xor
jge
and
cmp
jge
and
cmp
jge
and
cmp
push
std
stc
mov
adc
in
push
js
adc
or
xor
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
dec
pop
push
add
call
xor
xchg
add
imul
test
outsb
inc
jmp
jns
enter
pop
lods
outsb
xchg
scas
dec
loopne
test
xor
push
outsb
mov
mov
lods
mov
hlt
mov
popa
pop
jae
push
lcall
pop
mov
in
cmp
inc
jnp
sbb
lret
popf
dec
clc
push
clc
lret
popf
je
lret
jle
xorb
cmpl
jae
mov
jns
pop
fstl
ss
out
mov
jmp
icebp
jno
inc
add
call
and
dec
sub
ret
inc
dec
xchg
adc
xor
ds
adc
fisubrl
sub
add
mov
dec
daa
mov
lret
jmp
lret
dec
fnstenv
sub
lahf
sti
in
mov
ds
or
test
ja
jg
cmp
sbb
lret
cpuid
mov
fmull
fwait
mov
mov
sbb
push
xorl
jmp
test
es
lahf
dec
sub
leave
mov
iret
pop
jle
add
call
push
inc
ljmp
stos
xor
push
pop
fcoms
lods
and
les
pop
xchg
rclb
inc
in
jmp
mov
inc
jmp
jbe
lahf
push
cmp
arpl
sub
cmp
iret
adc
sub
mov
adc
xchg
data16
xor
mov
je
test
test
mov
data16
insl
inc
fwait
mov
xchg
pop
xor
adc
adc
jne
sar
add
dec
sarl
or
loope
popf
flds
mov
stos
xchg
add
call
dec
jno
stos
ret
xor
sbb
sbb
cltd
mov
or
rcl
into
cmpsl
pop
pop
cmp
push
xor
xor
stos
fdivl
fcompl
nop
dec
mov
out
mov
jnp
xor
ja
popa
lds
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
outsb
jp
ret
add
call
addr16
jno
fsubp
push
dec
out
dec
fisubl
xchg
leave
cs
in
hlt
jne
xor
inc
and
cmp
jge
and
cmp
jge
and
cmp
js
cmp
inc
neg
data16
es
pop
divb
jns
inc
shll
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
lock
popa
jns
push
mov
fsubl
ret
repz
fmull
mov
add
call
xor
jns
lret
leave
and
test
cltd
rorl
or
cmpsl
sbb
movsl
dec
xor
rorl
pop
pop
fnstsw
popf
leave
mov
addb
sub
cs
push
sbb
add
mov
cmp
or
lret
popf
je
lret
jle
xorb
cmpl
dec
xlat
in
pop
rolb
ss
out
mov
mov
push
jno
inc
int3
and
filds
mov
fisubs
lret
fnstenv
call
push
push
loope
in
les
imul
in
ja
inc
fisubrl
adc
mov
lret
mov
lret
cpuid
mov
fmull
fwait
fwait
jb
dec
int3
and
inc
int3
inc
cli
cmp
sbb
inc
shll
push
insb
mov
gs
incb
jmp
test
es
lahf
dec
sub
leave
mov
iret
pop
jle
jns
inc
ljmp
inc
jp
jge
fcoms
lods
and
cmp
sub
xchg
es
call
add
and
stc
pop
jbe
xchg
xor
mov
dec
add
mov
lret
or
cmpsb
fldl
leave
jns
repz
ja
packuswb
mov
leave
sub
mov
pop
std
arpl
lahf
popf
call
sub
insb
push
sub
fcompl
or
iret
lods
push
jle
aam
xchg
int
movsl
mov
arpl
jle
insb
ja
lahf
std
ret
inc
dec
jge
test
pusha
sarl
dec
add
call
cmp
fstpl
mov
shl
xchg
fcmovu
mov
aaa
mov
xor
test
cli
scas
sbb
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
inc
mov
movsl
out
pop
jnp
and
lods
rorl
shll
pop
es
sbb
aaa
popa
mov
add
call
fwait
jge
and
cmp
jge
and
cmp
sti
stos
fs
mov
aad
mov
dec
or
loopne
mov
hlt
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
mov
lahf
repnz
ret
sbb
imul
test
outsl
pop
mov
sub
fimull
mov
fadds
cmpsl
fnsave
add
call
sbb
icebp
repz
idivl
dec
in
sbb
mov
lods
js
mov
addb
push
into
dec
fsub
and
frstor
jbe
std
cmpsb
es
clc
push
clc
lret
popf
je
lret
jle
xorb
pop
lret
jg
push
int
xor
xchg
gs
nop
sbb
repz
sahf
and
jno
inc
int3
and
filds
mov
fisubs
push
imul
xor
aam
xchg
adc
push
iret
lret
add
call
or
fdivp
insb
sbb
imulb
dec
jno
and
sbb
shll
xchg
sbb
inc
shll
push
insb
mov
pop
dec
lret
icebp
ret
test
incb
jmp
test
es
lahf
dec
sub
leave
mov
iret
pop
fstpt
vandnps
jge
notrack
push
xor
mov
stos
xor
push
mov
cmp
sub
dec
xor
rol
xchg
pop
pusha
pop
jns
in
jmp
mov
inc
jmp
jbe
lahf
push
cmp
arpl
sub
add
call
popa
or
out
mov
cli
jns
and
inc
inc
loope,pn
in
jle
sbb
ja
packuswb
mov
leave
xor
xchg
push
mov
mov
out
mov
cs
cwtl
cmpsb
out
adc
mov
fadds
xor
shrb
imull
sub
popl
les
mov
cld
xor
cmp
mov
rorl
andb
push
out
enter
add
ret
jecxz
movsb
and
push
add
call
xor
stos
mov
jo
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
nop
add
xchg
test
fsubp
push
dec
out
dec
ficompl
mov
xchg
sbb
in
stos
lahf
push
rcrl
jge
and
cmp
jge
and
cmp
jge
and
cmp
add
adc
int3
inc
jb
add
call
xchg
fwait
xchg
in
insl
xchg
out
dec
jle
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
fists
pop
xlat
push
add
adc
subb
xor
add
out
mov
jo
push
lods
scas
addr16
es
dec
dec
jp
or
stos
cmp
xchg
jnp
jbe
imul
call
shll
or
les
sub
fwait
mov
pop
push
into
dec
push
pop
pop
pop
mov
je
mov
lret
popf
jle
stos
fs
jno
call
cmp
sub
xor
dec
out
nop
sbb
repz
adc
fwait
add
cmc
mov
gs
push
daa
sub
addr16
and
cmc
mov
daa
imul
in
dec
scas
inc
mov
jmp
jne
les
xchg
sbb
add
call
inc
shll
or
lea
xor
andl
jmp
jg
cmp
push
mov
fcomi
imul
dec
sub
leave
mov
iret
pop
fstpt
vandnps
jge
or
xchg
mov
mov
jne
pop
fcoms
lods
and
les
pop
xchg
rclb
adc
and
stc
pop
jbe
xchg
xor
mov
dec
add
mov
lret
or
cmpsb
fldl
leave
jns
fldenv
fistpll
cld
hlt
and
call
cmp
je
push
clc
cld
push
cmp
sahf
mov
sbb
push
add
add
pop
dec
lods
mov
mov
shrb
sahf
lcall
popa
cltd
jp
or
and
mul
cld
xor
cmp
push
sarb
fs
jne
imulb
bound
push
sar
mov
repz
jne
mov
in
mov
inc
jb
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
sahf
mov
ja
mov
push
icebp
fsubp
push
dec
out
dec
fcmovbe
dec
loop
mov
sbb
aaa
popa
mov
fwait
jge
and
cmp
jge
and
cmp
sti
stos
fs
mov
dec
int3
cltd
pop
sbb
icebp
movsb
cmpsl
cmpsb
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jp
orb
mov
xor
out
sbb
loope
shr
test
into
repz
rcll
dec
dec
inc
subb
mov
int3
ja
in
sub
mov
xchg
cwtl
sbb
mov
or
push
mov
stc
push
fists
out
dec
rorl
mov
mov
push
pop
add
call
in
lea
insb
pop
pop
in
inc
fcomps
mov
mull
cmp
sbb
hlt
pop
call
loop
jno
lahf
stos
outsb
imul
movsb
mov
sub
pop
test
pop
xchg
or
add
rorl
cwtl
mov
mov
roll
mov
gs
cwtl
sub
xor
jnp
add
mov
adc
fcompl
movsl
aas
filds
fldenv
cmpb
scas
call
sub
jne
sub
mov
and
cld
sbb
push
add
call
loope
xchg
adc
sub
xchg
fstpt
vandnps
jge
or
xchg
mov
mov
jne
pop
fcoms
lods
and
inc
cli
mov
rorb
flds
adc
fwait
mov
mov
adc
jmp
mov
inc
jmp
jbe
lahf
push
cmp
arpl
sub
mov
out
test
xchg
push
or
xor
pop
xchg
cmp
jle
pop
test
mov
out
xchg
add
sbb
subb
sbb
pop
add
mov
addb
call
and
sbbb
push
cli
lds
mov
xchg
jmp
xchg
cmp
and
sub
xor
xor
sbb
test
push
clc
xor
pop
inc
mov
dec
fistpl
faddl
lock
sbb
cmp
push
cmp
es
jge
mov
pop
sbbl
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xor
jge
out
cmpsl
inc
negl
int3
ficomps
fcomp
sbb
in
push
call
and
cmp
jge
and
cmp
out
mov
ficompl
dec
inc
js
lahf
push
push
test
ret
jnp
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sub
not
jge
insb
ljmp
mov
fnstcw
imul
test
jle
mov
jne
fcoml
stos
fnstsw
inc
in
push
pusha
in
xchg
fidivl
js
mov
fwait
inc
enter
push
jl
push
adc
jmp
les
or
lea
repnz
into
stc
lret
loopne
pop
nop
add
mov
fwait
test
cwtl
add
call
js,pn
mov
addb
ja
cmp
std
sbb
rol
pop
test
stos
outsb
imul
push
mov
enter
mov
pop
aaa
cmp
aaa
sahf
scas
xchg
test
jle
test
dec
mov
pusha
jno
in
sidtl
fsubrl
mov
xor
mov
or
popa
jns
sbb
bound
loope
aad
inc
xchg
mov
inc
sub
jne
sub
add
or
leave
and
pop
cwtl
dec
mov
in
mov
jne
sti
fistl
popf
add
call
mov
pop
or
lret
in
test
lret
in
aaa
cmp
jmp
xor
pop
sub
xchg
cmp
xor
sbb
insl
mov
fisttps
cmpsl
aaa
lds
mov
insb
and
das
sbb
int
cmp
incl
stc
jno
jnp
dec
jae
test
aad
ds
movsl
jbe
icebp
or
xchg
mov
bound
lods
ret
and
insl
and
pushf
mov
sub
adc
and
add
call
xchg
int
jmp
adc
insb
ja
lahf
std
ret
fistl
fdivl
xchg
pop
push
ja
in
mov
popf
repnz
mov
pop
inc
jmp
jp
sub
test
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xchg
mov
test
addb
call
imul
ss
movsb
icebp
fsubp
push
dec
out
dec
fidivl
inc
mov
push
push
aas
mov
lock
push
push
call
and
cmp
sti
stos
fs
mov
shlb
jle
lock
mov
lret
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lds
outsl
jns
pmulhw
mov
fsubl
ret
repz
xchg
mov
popa
xchg
sbb
xlat
ljmp
xor
cmp
inc
rolb
cltd
pop
sbb
fsts
daa
xchg
pop
lcall
mov
xor
sarb
inc
fs
sub
js
sub
hlt
mov
xorl
addb
xor
jecxz
mov
add
call
shrl
adc
pop
shl
cmp
or
repz
cmp
enter
inc
scas
xlat
lea
shrb
pop
add
fisttpl
cmp
dec
pop
icebp
adc
lods
xchg
fdivrl
cmp
data16
test
in
das
hlt
mov
lret
push
or
jge
test
adc
pop
push
cli
divl
popf
loopne
xchg
je
xchg
or
movl
mov
scas
stc
jecxz
add
call
xchg
pop
mov
adc
mov
je
aam
int3
out
inc
adc
mov
nop
inc
add
jmp
repnz
adc
or
das
mov
inc
daa
xchg
lods
xor
cs
xor
fmuls
fcmove
sbb
arpl
clc
jb
repnz
aad
aam
in
inc
sbb
sub
cmc
xchg
cmp
jl
mov
add
sar
or
aad
and
cmp
je
jl
js
push
cld
mov
add
add
call
into
jns
sbb
loopne
sub
jb
xor
push
inc
mov
dec
fistpl
lcall
scas
adc
sub
shll
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
out
xor
fists
xchg
repnz
rorl
shll
pop
es
sbb
add
call
aaa
popa
mov
fwait
jge
and
cmp
jge
and
cmp
add
adc
int3
inc
jb
adc
cmp
lea
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jp
orb
add
call
fiaddl
add
add
loope
shr
test
maxps
fwait
sub
mov
add
cwtl
andb
adc
push
sbb
push
cmpsl
in
add
push
pop
mov
arpl
adc
popa
xorb
in
mov
sub
loope
repnz
mov
adc
sbb
aaa
insb
pop
pop
in
pop
dec
sbb
or
sbb
jne
lea
mov
shlw
xor
outsl
pop
xor
push
and
push
out
pop
push
push
mov
mov
call
adc
sub
cmp
dec
mov
rcrb
ret
add
xchg
fimuls
rorl
idivb
adcb
cwtl
mov
fwait
sub
je
and
add
ljmp
push
ret
jmp
mov
orl
and
rcrb
push
mov
mov
movsl
sub
movsb
into
xchg
sbbb
lcall
add
js
repnz
popf
andb
sbb
clc
sub
add
call
out
pushf
lcall
int
psubq
loope
imul
jecxz
sbb
adc
mov
xchg
pusha
or
icebp
pop
jae
int3
push
xchg
mov
mov
lret
inc
dec
fisubs
and
ljmp
and
jg
inc
es
push
xor
or
jl
daa
push
mov
pushf
nop
pop
pushf
sub
cmp
pop
mov
out
ss
loope
ret
cld
and
cmp
cwtl
sbb
ret
call
jl
stc
inc
adc
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
fstps
jge
mov
outsb
jle
fsubp
push
dec
out
dec
fidivl
outsb
les
or
arpl
push
rcrl
jge
and
cmp
jge
and
cmp
and
mov
fdivrs
inc
push
add
call
jle
xor
xchg
sub
jg
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
shrl
fnstsw
and
sub
inc
cltd
fnstcw
imul
test
call
mov
fs
xlat
push
sar
xchg
push
mov
add
cmp
pop
jbe
test
out
out
fildll
sbb
and
mov
and
bound
cmpsl
or
test
jb
aas
in
mov
sub
out
dec
rorl
mov
mov
lret
loopne
pop
lea
insb
pop
pop
in
out
lds
fwait
mov
call
cwtl
and
push
out
pop
push
push
lahf
stos
outsb
imul
mov
shrl
adc
push
mov
enter
adc
ret
rcll
es
add
call
mov
push
push
dec
inc
stos
fdivl
repnz
aas
cmp
jl
insb
pop
in
aad
les
jo
push
and
mov
push
xchg
arpl
aas
neg
cld
mov
popf
in
and
lret
sbb
je
ds
test
and
ja
xchg
cli
xchg
mov
push
sub
cmp
jns
out
sti
fwait
mov
rcrl
xchg
mov
sbb
jecxz
mov
jns
sbb
push
repz
ret
test
lods
shrb
add
call
popf
aas
lods
xchg
push
das
dec
roll
loope
cli
add
ret
push
jo
mov
push
or
push
fbld
mov
lcall
lds
sub
jb
cmp
in
out
mov
iret
loopne
orl
pushf
dec
lret
int3
les
mov
clc
ret
cld
push
stc
jp
ja
outsb
push
addr16
mov
xchg
lds
or
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
mov
lcall
out
dec
out
dec
ficompl
or
lds
lcall
popa
mov
fwait
jge
and
cmp
sti
stos
fs
mov
push
inc
mov
and
xorb
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sarb
inc
repnz
cmp
push
push
fnstcw
imul
test
scas
fiadds
and
and
cli
ficompl
and
add
call
cs
mov
jno
push
adc
push
dec
fcomps
pop
mov
clc
xchg
and
mov
inc
shll
jp
mov
cmpsl
xchg
jae
icebp
bound
cltd
mov
lcall
into
stc
lret
loopne
pop
mov
cmpsb
test
out
gs
sti
je
cmp
xor
sbb
xor
outsl
pop
xor
push
and
push
out
pop
push
push
push
xor
outsl
pop
xor
push
sub
inc
cmc
arpl
mov
pop
push
mov
into
dec
jecxz
inc
int
lock
insb
pop
in
aad
add
call
jl
insb
pop
in
aad
loopne
dec
xor
mov
out
or
inc
lcall
mov
xchg
sbb
imul
dec
pushf
and
scas
mov
es
scas
iret
popa
loopne
or
add
and
mov
and
xor
and
jns
loop
shll
in
std
push
pop
subps
or
fcmovu
mov
push
shl
test
cmpsl
nop
scas
ljmp
cwtl
add
fisttps
pop
mov
cmp
add
call
adc
inc
dec
scas
jne
jmp
jmp
jb
test
mov
stos
fs
jmp
aas
jns
pop
addr16
sub
les
les
adc
jp
mov
cmpsb
or
push
push
addl
inc
loope
ret
cld
cwtl
sub
pushl
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lods
into
ficompl
sub
push
lcall
mov
fsubp
push
dec
out
dec
cmc
adc
inc
sahf
popa
inc
insb
push
jno
push
in
push
jge
and
cmp
jge
and
cmp
out
mov
ficompl
lods
jae
mov
or
mov
nop
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
clc
aam
push
push
xchg
push
stc
xchg
pop
sub
mov
xchg
xchg
je
fnstcw
imul
test
add
inc
pushf
mov
add
jecxz
push
push
pop
inc
hlt
ja
xchg
out
inc
add
mov
insl
and
sbb
add
call
fadds
jle
push
inc
inc
mov
jecxz
mov
sbb
inc
shll
loop
sbbl
lahf
addb
shrl
scas
inc
out
gs
sti
je
cmp
out
cmc
add
divl
xor
sbb
xor
outsl
pop
xor
push
lahf
stos
outsb
imul
cwtl
cmpsl
add
icebp
add
repnz
jl
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
pop
in
aad
mov
sub
push
in
movsb
lock
cmp
call
adc
and
sub
cltd
lea
or
push
cmpsl
and
fnstsw
outsl
lea
mov
std
mov
or
stos
ss
adc
adc
out
jnp
jge
jo
pop
movsl
jmp
in
andl
xchg
or
movsl
je
jmp
inc
sbb
and
or
pop
cmpsb
ret
and
dec
push
push
push
int
add
fidivrl
insl
and
pushf
mov
sub
add
call
cmc
jns
dec
or
data16
pop
pop
mov
mov
repz
std
mov
or
mov
js
push
jae,pn
test
lret
das
in
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
adc
pop
add
call
xchg
lds
std
adc
icebp
fsubp
push
dec
out
dec
fcmovb
mov
xorl
aaa
popa
mov
fwait
jge
and
cmp
cli
dec
lea
mov
movsb
cld
mov
xchg
mov
jl
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
dec
or
sub
shld
xor
fnstcw
imul
test
and
mov
pop
fldln2
insl
mov
and
xchg
insl
jns
pop
sub
rol
cmp
aas
sbb
fs
mov
int
out
pop
mov
jne
mov
xchg
not
sub
add
call
sub
and
rorl
pop
mov
stc
in
fisttps
jle
gs
cmp
sti
je
cmp
sbb
or
sbb
mov
shrl
adc
pop
push
push
push
popa
xor
jmp
xor
jbe
lock
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
pop
in
aad
push
scas
add
and
je
xchg
stos
sahf
fcomps
addb
pop
adc
cmc
dec
std
repnz
call
ss
sub
push
out
icebp
in
fwait
je
push
dec
test
ficomps
mov
loop
mov
test
cmpl
mov
mov
push
xor
sub
mov
int3
inc
lods
and
mov
xchg
hlt
and
aaa
or
push
xor
push
add
int
ret
lods
push
inc
lods
push
arpl
pop
pop
adc
xor
popf
push
das
fiaddl
ss
mov
stc
fsubl
call
inc
mov
std
mov
sub
fldpi
imul
repz
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lods
into
ficompl
sub
push
push
mov
scas
push
ds
out
dec
out
dec
and
jbe
pop
inc
cmp
cs
add
call
dec
jge
and
cmp
push
std
stc
mov
fsubrs
sub
int
popf
rorl
cli
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
andl
into
loop
in
fnstcw
imul
test
jmp
jl
pop
sahf
jbe
addl
lods
jle
mov
dec
lret
loop
adc
sbb
fs
mov
aam
aam
pop
nop
cmp
and
orb
lret
dec
fsubl
mov
bound
cltd
mov
call
lods
add
xchg
jge
xchg
push
push
out
lds
fwait
mov
out
cmc
add
divl
xor
sbb
mov
shrl
adc
push
sbb
mov
cmpsb
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
pop
in
aad
test
scas
mov
and
xor
lds
je
ror
sbb
out
inc
adc
mov
xchg
inc
sub
ss
jae
out
sbbb
fwait
sbb
and
data16
pop
push
pop
out
or
packssdw
add
call
jmp
mov
clc
add
cwtl
xor
add
mov
ja
mov
adc
mov
pop
mov
fbstp
mov
push
sub
ret
and
int
pop
xchg
mov
add
aas
push
pop
stc
jbe
sub
sbb
xor
and
stc
adc
dec
push
add
insl
mov
add
rcrb
lods
cmpsb
shll
wrmsr
fstpl
out
iret
rol
imulb
jecxz
jle
sahf
xchg
cmp
cmp
or
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
fcmove
test
insb
sub
push
and
out
dec
out
dec
ficoml
test
add
les
insb
daa
adcb
and
jge
and
cmp
js
cmp
inc
notl
xchg
call
jl
imul
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jmp
and
cmp
call
fnstcw
imul
test
sub
xchg
mov
shlb
xlat
jno
mov
cli
dec
lret
loop
adc
ja
in
sub
mov
ds
mov
mov
jle
divb
shll
cmpsb
cmpsb
popa
dec
push
je
mov
xor
rcll
lods
js
mov
lret
jge
ss
add
call
sbb
cmp
lea
mov
sti
and
xor
sub
lock
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
pop
in
aad
mov
loop
sti
xchg
xchg
scas
mov
mov
cltd
jbe
jno
aas
push
pop
cltd
jbe
jno
aas
push
ror
sbb
out
inc
adc
mov
xchg
inc
cwtl
mov
dec
js
jb
dec
dec
aam
insb
into
push
imul
sbb
pushf
js
sbb
jb
cmp
add
imul
call
sub
outsb
sbb
fs
dec
roll
outsl
loope
sbbb
mov
mov
xchg
or
pushf
pop
movsb
int3
jmp
fsubrs
fstps
xchg
inc
lods
jnp
test
out
loop
sub
popf
xor
cmp
lods
lds
cmpsl
repz
in
pop
adc
fnstcw
cmp
inc
push
ret
loop
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
xchg
lds
push
in
data16
or
fsubp
push
dec
out
dec
fidivl
rcrl
imul
popa
out
in
inc
and
cmp
popf
cmp
push
push
and
out
or
scas
jno
sbb
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
loope
mov
inc
lds
or
and
jge
imul
test
and
add
jnp
sbb
testb
outsl
push
mov
cmp
jno
sub
hlt
mov
pop
inc
outsb
in
inc
in
jbe
lahf
popf
mov
scas
mov
push
mov
inc
dec
out
cwtl
sbb
cmp
mov
push
sub
pop
mov
fidivs
int3
mov
pop
mov
cmpsl
ss
dec
clc
push
clc
lret
popf
popf
add
filds
add
call
push
repnz
lock
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
pop
in
aad
and
push
cmp
ds
xor
xchg
scas
mov
mov
cltd
jbe
jno
aas
push
inc
pop
loopne
lods
pminub
divb
push
mov
xchg
in
mov
cltd
jmp
stos
or
cmp
in
and
out
mov
adc
inc
iret
inc
in
fcoms
pop
setnp
adc
or
out
gs
xor
sub
aam
fchs
in
lret
dec
pop
mov
call
call
and
xchg
or
icebp
shl
push
jns
xchg
jmp
insb
inc
out
jg
daa
dec
jge
xor
jbe
xor
insb
out
jnp
mov
push
xor
pop
adcl
xchg
aad
fstpt
arpl
push
mov
sbb
cltd
fstpt
push
ret
loop
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
stc
xchg
mov
xchg
stc
mov
dec
out
dec
ficoml
test
add
les
insb
daa
adcb
and
sti
stos
fs
mov
push
lcall
xchg
fcomip
cli
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
jle
lret
call
aaa
and
sub
jge
imul
test
xchg
stc
insb
push
pop
mov
cmpsb
stos
mov
add
and
pusha
add
mov
sbb
dec
adc
shlb
cmp
mov
bound
push
and
inc
add
add
addb
outsb
or
sub
pop
nop
push
cld
push
jns
fimull
insl
flds
sti
pop
jg
inc
xchg
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
pop
in
add
call
aad
std
push
in
add
pop
mov
rcll
ret
aad
inc
or
out
icebp
test
mov
repnz
xchg
nop
fwait
cwtl
dec
cmp
fnstcw
sahf
cs
xchg
inc
and
sub
or
filds
loop
les
rcrl
add
mov
mov
xchg
cmp
or
movsl
and
jecxz
arpl
test
fnstsw
daa
mov
icebp
shl
push
jns
or
out
or
jbe
pop
lret
fcmovb
cmpsb
sbb
push
and
call
test
sbb
jns
xlat
shll
ror
cld
ret
ss
adc
add
hlt
xchg
test
mov
push
and
stos
mov
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
data16
out
add
call
cmp
out
movsl
cmp
fsubp
push
dec
out
dec
fidivl
rcrl
imul
popa
out
in
inc
and
cmp
out
mov
ficompl
aas
loopne
or
test
mov
mov
cmp
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmp
sti
sbb
mov
xchg
das
fnstcw
imul
test
add
call
imul
test
sub
je
ljmp
leave
testb
cli
outsl
sahf
cmpsl
push
xor
mov
cmpsb
pop
add
in
lods
lods
pop
fsubs
add
pushf
mov
pop
cmp
inc
add
lods
jne
mov
and
adcb
mov
xor
jae
mov
cmpsb
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
pop
in
aad
lea
fcmovu
sbb
std
xchg
test
add
fisttpl
add
call
xchg
imul
scas
jl
hlt
mov
sbb
mov
js
fsubs
sub
push
inc
out
aas
xorb
lds
jns
dec
ror
test
mov
push
cs
lret
test
add
fsubs
shll
mov
into
rol
jns
ret
fwait
dec
enter
and
mov
mov
inc
cmovnp
and
dec
xchg
xchg
ret
gs
pop
push
mov
xor
out
mov
add
jmp
mov
mov
nop
sbb
xor
and
call
pop
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lea
aam
sahf
mov
or
xor
fsubp
push
dec
out
dec
fcmovu
test
adc
shrb
call
push
stc
and
and
mov
enter
mov
das
ljmp
xchg
add
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jp
orb
mov
push
mov
ja
hlt
imulb
fnstcw
imul
test
enter
add
pop
icebp
add
call
push
pop
inc
mov
in
jmp
xchg
outsb
orb
outsl
pop
int3
inc
fwait
shlb
shlb
inc
push
push
xor
in
push
pop
fisubl
jge
push
ret
xchg
push
sti
iret
fdivl
testl
call
lret
push
jb
pop
ffree
pop
adc
cmpsb
insb
pop
in
aad
jl
insb
pop
in
aad
sub
mov
sub
cmp
xchg
inc
pop
mov
outsl
fucomip
push
jo
mov
ret
aas
xorb
lds
mov
call
push
ds
int3
jae
in
outsb
ja
xchg
push
sbb
lods
cmp
sbbb
loop
cli
test
movsl
push
mov
inc
out
addr16
je
mov
imul
push
iret
mov
or
pop
rcrl
or
pop
push
mov
xor
out
mov
or
pop
inc
ja
push
repnz
aas
rol
jno
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
int
jp
outsb
fmul
outsb
mov
movsb
mov
dec
out
dec
and
jbe
pop
inc
cmp
pop
int3
clc
lret
sti
stos
fs
mov
loop
dec
fisttpl
mov
movsl
movsb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sahf
icebp
shl
adc
inc
mov
sub
fnstcw
imul
test
std
jmp
adc
and
push
stos
sbb
sub
adc
sbb
or
call
lods
cli
rclb
add
shrl
pop
out
leave
mov
out
mov
insb
dec
sbb
sbb
scas
cmp
loop
jmp
fs
shlb
or
int
add
pop
in
aad
jl
insb
pop
in
aad
jp
sbb
mov
fimuls
add
add
lcall
pushl
nop
mov
pop
mov
adc
mov
mov
test
mov
push
adc
pop
mov
mov
add
call
pop
push
mov
hlt
lret
scas
cmp
data16
enter
in
gs
mov
stc
popa
push
mov
pusha
add
rorl
ds
sbb
testb
mov
imul
out
jb
add
inc
icebp
inc
pop
out
dec
data16
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pusha
pusha
mov
test
push
icebp
fsubp
push
dec
out
dec
fcmovbe
dec
sub
je
and
sbb
jl
adc
push
or
and
mov
out
cli
mov
insb
bound
ret
jnp
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jns
test
mov
pop
dec
shll
das
mov
mov
arpl
mov
lods
jne
out
icebp
pop
and
mov
mov
sahf
mov
sbb
mov
cwtl
or
jno
xor
push
cmp
mov
sub
add
call
adc
adc
jo
jg
and
lds
insl
pop
pop
fcompl
mov
lock
insb
pop
in
aad
jl
insb
pop
in
aad
push
sub
sbb
jbe
lds
jl
imul
push
xchg
pop
ret
out
movsl
popa
cmc
sub
les
out
or
add
lahf
aad
int3
mov
call
adc
push
mov
jge
clc
xchg
cmp
rorb
int
xor
sub
imul
movsl
jo
add
call
cmpl
popf
sbb
into
sub
in
and
rorl
ds
hlt
repnz
out
xchg
mov
stc
and
push
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
aaa
andb
test
js
cltd
lret
icebp
fsubp
push
dec
out
dec
fisubl
daa
inc
inc
cmpsl
pop
inc
inc
cli
ret
lret
cwtl
mov
mov
out
arpl
loopne
rclb
or
hlt
cmp
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
loope
sub
sub
sti
loope
jnp
hlt
testl
test
icebp
sarb
lea
sub
jecxz
fisttpll
pushf
lods
mov
mov
push
loop
sub
rorl
leave
rclb
bound
add
call
xchg
fs
inc
stos
lock
insb
pop
in
aad
jl
insb
pop
in
aad
cmp
roll
adc
sbb
jg
ss
cltd
lds
das
mov
lcall
mov
mov
std
iret
or
push
mov
das
push
sub
dec
in
js
pop
scas
test
arpl
mov
in
loope
add
and
test
and
fs
xchg
pop
push
nop
scas
dec
in
and
sbb
fs
mov
out
test
cmpsl
xor
testb
call
enter
sub
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
in
icebp
and
pop
movsl
lock
call
stos
push
icebp
icebp
fsubp
push
dec
out
dec
fcmovbe
dec
sub
je
and
jb
aad
inc
jecxz
xor
sahf
mov
and
cwtl
xchg
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
clc
aam
mov
test
ja
xchg
xor
inc
dec
jl
push
push
call
cld
lea
inc
mov
std
mov
in
xchg
mov
adc
lods
mov
mov
or
adc
ja
mov
jl
insb
pop
in
aad
jl
insb
pop
in
aad
xor
call
mov
clc
xor
aad
or
cwtl
in
sbb
inc
loope,pn
in
xchg
push
adc
dec
jmp
ja
mov
jno
cld
push
push
jmp
xor
repz
into
dec
sub
ja
subb
shl
notl
repz
and
and
pop
out
int3
lcall
in
call
inc
dec
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
popf
arpl
push
lods
mov
or
lret
fsubp
push
dec
out
dec
fidivl
outsb
les
or
arpl
fwait
cmc
add
call
sub
fistpl
mov
xor
repnz
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cwtl
push
sub
adc
jmp
mov
xchg
xchg
mov
or
sub
mov
sbb
mov
shrl
lret
sti
mov
js
push
push
mov
icebp
lock
insb
pop
in
aad
jl
insb
pop
in
aad
in
mov
or
shl
enter
rorb
push
daa
data16
std
int
add
call
mov
and
insl
loop
vpmuludq
pushf
mov
jae
or
push
and
imul
adc
sbb
repz
fimuls
jg
shll
sbb
ret
je
shlb
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
out
xor
push
mov
icebp
fsubp
push
dec
out
dec
fimull
mov
movsl
fcomp
sbb
stos
lret
insb
inc
adc
jno
in
and
push
pop
int3
inc
out
ret
xor
repnz
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
inc
mov
push
pop
mov
mov
movsb
mov
dec
xor
mov
and
push
or
pusha
jle
mov
xor
lock
insb
pop
in
aad
jl
insb
pop
in
aad
mov
push
dec
mov
xor
mov
or
lret
sbb
test
pop
adc
add
xchg
ds
jno
aaa
stos
and
cmp
push
imul
call
push
fs
cmpsl
aaa
jae
cmp
mov
test
mov
pop
movsl
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
test
dec
mov
mov
jmp
inc
mov
pop
icebp
fsubp
push
dec
out
dec
fcmovbe
dec
sub
je
and
inc
lods
sbb
inc
add
mov
mov
mov
sti
int3
ficoml
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
test
dec
sbb
push
lock
insb
pop
in
aad
mov
stos
enter
ret
mov
mov
fbld
mov
fbld
inc
mov
jne
jle
cmp
cld
xchg
xchg
dec
cld
xlat
icebp
fsubp
push
dec
out
dec
fidivrl
rorb
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xchg
mov
test
cmp
inc
inc
out
stos
mov
dec
out
dec
fsubp
push
dec
out
dec
fisubl
daa
inc
inc
jne
lods
xchg
jo
cltd
pop
lcall
jne
test
cwtl
fidivl
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
clc
fnsave
mov
lret
dec
cmc
jmp
and
insb
pop
in
aad
cmp
push
pop
sub
aad
mov
stos
lahf
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
inc
mov
movsl
out
fldcw
mov
lods
shll
cltd
dec
mov
dec
cmp
fcmovb
nop
cmp
cmpsl
scas
xchg
loopne
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
cmp
stc
repnz
dec
add
call
fsubp
push
dec
out
dec
fimull
mov
movsl
fcomp
sbb
fmulp
jbe
mov
inc
and
xchg
and
pop
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jg
mov
add
call
xor
sub
sub
lock
insb
pop
in
aad
test
mov
mov
push
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
fs
inc
cld
leave
ficoml
cmp
sarb
xchg
outsb
push
sub
gs
jmp
loope
inc
in
decl
flds
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
inc
xchg
mov
ja
jg
pop
arpl
out
dec
out
dec
fcmovbe
dec
sub
je
and
xor
pop
push
icebp
js
add
call
dec
lcall
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
dec
mov
and
jbe
inc
jl
pop
sbb
push
jl
insb
pop
in
aad
jl
insb
pop
in
aad
loope
add
call
clc
mov
push
jnp
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
bound
xor
les
test
mov
icebp
fsubp
push
dec
out
dec
fidivl
jb
cmp
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xlat
dec
loope
ret
pushf
mov
mov
jecxz
mov
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fcmovbe
xlat
jl
test
push
repz
and
aam
jl
jbe
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
dec
push
out
mov
enter
pop
xchg
lret
fstpl
ljmp
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
in
xor
pop
fs
add
into
subb
push
pop
out
lock
adc
lock
insb
pop
in
aad
call
sub
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
mov
outsl
decb
lods
pop
mov
add
and
sub
or
dec
cmp
fcmove
in
xor
repnz
fstpt
push
ret
loop
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmc
mov
std
mov
int
cmp
cltd
adc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pop
add
es
jp
jmp
unpcklps
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fimull
out
and
fisttpll
and
adc
pop
in
adc
insb
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
bound
in
jne
inc
mov
inc
push
mov
add
je
fmuls
in
push
adc
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xor
xlat
sbb
mov
push
lock
insb
pop
in
aad
adc
pop
mov
jg
push
ret
loop
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xchg
mov
test
orb
out
xor
inc
cmp
and
add
call
xchg
imul
pusha
sti
ss
or
cmpsb
hlt
stos
idiv
scas
in
pop
jge
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pop
pop
repnz
push
and
into
jmp
lea
outsl
lret
adc
push
dec
out
dec
fsubp
push
dec
out
dec
fcmovu
dec
and
daa
jl
shll
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pop
sbb
add
call
es
lock
mov
push
rcrl
clc
inc
icebp
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fiaddl
cmpsb
push
lods
push
shrb
mov
mov
inc
icebp
cmpsb
push
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
xlat
lea
mov
adc
add
outsb
into
cmpb
or
rcrl
mov
jl
adc
test
les
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
inc
add
jle
jnp
pop
sbb
call
testb
inc
int
test
test
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xor
mov
jns
jle
cmp
mov
pop
jbe
fsubp
push
dec
out
dec
fcmovbe
add
and
call
jbe
jns
inc
shll
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
or
pop
hlt
ss
xchg
jle
jbe
shrl
sbb
fldenv
sub
icebp
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fcmovbe
dec
sub
je
and
push
dec
out
dec
fcmovbe
dec
sub
je
and
popa
adcl
or
out
jb
inc
pop
iret
dec
pop
icebp
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fimull
mov
movsl
add
call
ficomps
test
inc
test
ret
pop
inc
je
jb
cmp
xor
repnz
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
jecxz
adc
push
cmpsl
in
sbb
xchg
iret
lcall
call
ret
mov
mov
jecxz
jl
stos
xor
inc
pusha
loop
mov
jge
rorb
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
cs
mov
lcall
gs
insl
scas
out
sbb
pop
out
lock
adc
or
ret
mov
xchg
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
mov
or
jmp
or
outsb
cmc
inc
adcb
mov
out
jb
icebp
fsubp
push
dec
out
dec
fidivl
jns
xlat
xor
mov
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sub
sbb
je
add
call
fs
into
mov
inc
ss
pop
icebp
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fidivl
jnp
xchg
inc
dec
test
mov
push
add
mov
dec
out
dec
fimull
pop
xchg
xchg
lods
xor
sub
icebp
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fimull
mov
movsl
fcomp
sbb
call
jbe
pop
call
fcomip
cli
cld
jns
fs
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
inc
dec
aad
stc
adc
add
mov
lret
xchg
call
sub
cmp
inc
cmc
js
mov
pop
out
jns
outsb
shlb
xor
jne
add
call
gs
push
roll
insb
pop
fldcw
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xchg
mov
add
call
adc
dec
sub
repz
jp
dec
xlat
out
sub
test
push
pop
jp
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lods
into
ficompl
sub
push
lcall
mov
scas
jo
sbb
sub
jbe
sahf
pop
arpl
jnp
out
push
dec
cmp
fsubp
push
dec
out
dec
ficoml
sub
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xor
and
stc
pop
movsl
in
xor
scas
sbb
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fcmovbe
dec
sub
je
and
add
call
push
lods
push
shrb
xor
stc
movsl
aad
out
add
xchg
mov
movsl
xor
out
sub
mov
mov
sbb
hlt
ret
xlat
icebp
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fidivl
jnp
xchg
xor
push
add
in
outsl
out
test
fcomip
cli
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
test
aad
inc
push
addr16
stc
adcl
dec
xchg
jnp
sub
pop
fdivrl
addr16
mov
jo
mov
pop
jg
repnz
cmp
cmpsl
mov
jno
enter
dec
je
add
xor
subl
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
or
fwait
loop
mov
sbb
or
aam
scas
add
call
pop
and
xchg
rcrl
and
and
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
fcmove
test
inc
xchg
sub
xlat
nop
xchg
bound
rcl
icebp
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
ficoml
add
imul
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sbb
addr16
dec
out
pop
stos
sub
pop
jns
fimull
subl
out
dec
out
dec
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
aas
test
fmuls
sub
pop
dec
nop
pop
or
mov
xor
mov
adcb
cmp
lea
dec
add
call
push
sub
push
call
lret
movsb
sub
loope
sahf
pop
idiv
cmp
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fisubl
xchg
and
test
push
ret
fdivs
adc
fcomip
cli
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
push
push
mov
aam
sbb
shl
sub
pop
or
lret
iret
jmp
into
sbb
mov
jno
fwait
sbb
or
addb
mov
fbld
cmc
sbb
add
inc
addr16
sbb
jp
clc
aaa
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pop
dec
xor
inc
ljmp
jbe
in
outsb
test
es
pop
out
lock
adc
sti
and
mov
loope
push
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lods
into
ficompl
sub
push
xor
and
xacquire
scas
ljmp
fsubl
movsl
dec
fwait
in
iret
xchg
shll
icebp
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fidivrl
js
sbb
stc
test
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
pushl
mov
scas
loope
xchg
xchg
aaa
jmp
fdivs
jg
pop
arpl
out
dec
out
dec
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fcmovbe
dec
sub
je
and
push
pushl
mov
mov
mov
pop
add
nop
and
in
dec
cli
int3
and
ror
sbb
mov
mov
aaa
popa
mov
fwait
jge
and
cmp
jge
and
cmp
jge
and
cmp
out
lods
fdiv
mov
loope
xchg
cmpl
call
mov
fsubp
push
dec
out
dec
fiaddl
mov
jge
push
or
movsl
fwait
adc
or
mov
fcomip
cli
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sar
dec
nop
add
call
push
inc
jb
call
out
jo
repnz
or
xchg
lret
mov
inc
es
or
addb
sub
push
push
aam
lods
sbb
mov
in
and
repnz
andb
push
inc
dec
lcall
and
jno
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
mov
mov
mov
xor
out
imul
or
jmp
test
jg
test
pop
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
jae
mov
call
or
jp
lret
out
call
fcompl
repz
inc
jno
jne
xor
notb
icebp
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fisubrl
mov
lods
pop
in
jl
mov
test
cli
pop
fidivs
stos
sarb
sbb
and
dec
lods
xor
cmc
popf
sbb
cld
enter
shll
call
push
daa
mov
add
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fiadds
add
call
push
dec
out
dec
fcmovbe
dec
sub
je
and
push
lods
push
shrb
xor
stc
movsl
aad
pop
cmpsb
xor
pop
subl
addl
xchg
mov
arpl
xchg
nop
shlb
jge
and
cmp
jge
and
cmp
jge
and
cmp
jge
and
cmp
jge
and
cmp
sti
stos
fs
mov
stos
je
jno
adc
xchg
mov
fnsave
mov
popa
dec
es
xor
lods
or
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
shr
sbb
test
mov
rolb
jne
repz
loopne
enter
decb
xchg
call
or
xor
ret
aas
inc
jp
cmpsb
stos
insb
xor
test
mov
dec
test
inc
popf
mov
fnstenv
cmp
les
mov
in
sbb
push
push
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
or
lret
data16
jno
xor
jp
pop
ret
repz
fwait
cmp
sub
cmp
push
pop
sub
aad
inc
jbe
int3
lret
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
inc
insl
inc
lret
dec
shlb
fwait
cwtl
jmp
push
add
or
push
add
call
xor
xchg
mov
sub
cli
pop
data16
mov
mov
das
into
outsb
jnp
xchg
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
fcmovbe
dec
sub
je
and
xchg
data16
mov
les
testb
cmp
mov
call
inc
mov
out
loopne
loopne
lea
dec
xchg
push
sub
push
call
and
cmp
jge
and
cmp
jge
and
cmp
jge
and
cmp
jge
and
cmp
jge
and
cmp
jge
and
cmp
lds
cmp
repz
std
inc
dec
jae
cmc
popa
jo
add
add
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xor
cmpsl
pop
sbb
or
test
stos
jo
pop
sbb
fidivl
add
inc
in
add
xlat
push
aas
popl
dec
mov
mov
sub
pop
inc
pusha
jmp
in
inc
and
sbb
add
call
xchg
stos
mov
push
jnp
dec
pop
test
xchg
lea
xor
xor
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
loope
fildl
xor
mov
push
cmc
mov
sbb
push
mov
xor
mov
outsl
or
or
dec
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pop
inc
xor
mov
cwtl
cmp
pop
dec
cltd
push
xor
xchg
mov
sbb
pop
mov
pop
js
in
mov
sar
xchg
add
call
sub
rcl
mov
add
cmp
fcmovbe
dec
sub
je
and
into
outsb
jnp
xchg
fsubp
push
dec
out
dec
fidivl
jnp
xchg
jnp
xchg
fsubp
push
dec
out
dec
fidivl
jnp
xchg
push
fndisi(8087
hlt
orb
jo
outsb
divl
cmp
subl
cmp
xchg
data16
xchg
xchg
cli
xchg
sbb
jne
out
mov
aaa
popa
mov
fwait
jge
and
cmp
jge
and
cmp
jge
and
add
call
pop
jge
and
cmp
jge
and
cmp
jge
and
cmp
jge
and
cmp
jge
and
cmp
jge
and
cmp
lods
test
mov
in
fistl
mov
cld
lds
xchg
add
loopne
out
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
fcom
fidivrs
je
push
adc
lahf
push
inc
aam
filds
jmp
jmp
push
aas
popl
dec
mov
imul
aad
xchg
pop
push
mov
push
cmpsb
movlps
push
jb
loope
sub
and
add
nop
cwtl
cmp
jno
inc
cmc
adc
mov
popf
lock
fmull
es
lret
add
call
cld
loop
push
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
outsb
push
inc
adc
sahf
ret
in
inc
cltd
push
into
cmpsb
xor
repz
je
ja
jle
popa
ja
pop
lcall
in
aad
adc
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
or
adc
push
jae
repnz
fmul
jp
popa
push
or
dec
mov
mov
adc
out
fisubl
and
in
jae
mov
cmp
add
call
add
mov
inc
int
lret
cwtl
inc
cltd
jne
cmp
sbb
dec
pop
jbe
or
addr16
mov
mov
shrb
fisubl
mov
out
and
lea
dec
xchg
push
sub
push
call
and
cmp
jge
and
cmp
jge
and
cmp
jge
and
cmp
jge
and
cmp
jge
and
cmp
jge
and
cmp
sti
stos
fs
mov
call
jle
rorl
movsb
clc
loope
xchg
or
jae
in
lods
xor
pop
rorb
and
divl
lods
loope
dec
rol
ret
sbb
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
dec
ret
ret
cs
orl
add
or
adc
pop
les
mov
pop
je
pop
mov
repz
mov
and
outsl
das
in
fcmove
pop
or
sub
insl
cli
in
loopne
hlt
enter
mov
jno
out
stos
cmpsb
pusha
lods
ltr
push
ljmp
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
repz
enter
mov
cmp
add
call
iret
cmp
rcrl
and
fsubrs
rolb
mov
jo
lea
pop
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lahf
in
mov
loop
push
pop
dec
daa
push
int
sarb
test
pop
ret
rcll
sub
mov
test
clc
subb
std
push
clc
subb
std
pop
fwait
test
sub
bswap
xor
inc
cmp
add
lret
add
call
test
add
popf
test
xor
dec
or
pop
pop
cs
or
jge
and
cmp
jge
and
cmp
jge
and
cmp
jge
and
cmp
jge
and
cmp
jge
and
cmp
jge
and
cmp
jge
and
cmp
lods
test
mov
dec
xchg
mov
fstps
fisttps
cmp
add
sarb
lret
je
js
fstl
pop
cmc
dec
into
mov
jae
add
push
mov
xor
add
call
jns
addr16
adc
test
sarl
rcll
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
std
cwtl
leave
push
or
lahf
gs
test
add
call
dec
stos
rcll
sahf
sqrtps
je
or
sbb
sbb
mov
in
add
fdiv
xchg
mov
jns
mov
cld
jne
sub
movl
jmp
je
imul
lods
sub
inc
aas
sbb
xchg
mov
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
das
or
std
push
rcll
jo
lahf
mov
mov
fs
pop
jae
push
pop
out
lock
adc
add
call
dec
cli
push
aam
sbb
inc
insl
push
sahf
push
jne
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
or
adc
xlat
cmpsl
push
xor
pushf
std
mov
roll
lods
arpl
jl
add
dec
js
sub
sbb
jne
out
sub
dec
xchg
push
sub
push
call
and
cmp
jge
and
cmp
jge
and
cmp
jge
and
cmp
jge
and
add
call
pop
jge
and
cmp
jge
and
cmp
jge
and
cmp
jge
and
cmp
imul
cmpsl
jbe
or
pop
pop
push
fstps
fisttps
cmp
jae
in
lods
xor
mov
mov
jle
daa
je
xchg
jle
pop
inc
pop
pop
xchg
cmpsb
and
mov
mov
jb
imul
jno
mov
push
and
loop
enter
sub
sub
add
add
and
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
rorl
mov
cs
orb
shlb
mov
cmp
adc
outsl
and
dec
sbb
pop
fistpl
and
add
call
pop
xor
je
and
negl
sbb
sarb
out
mov
xchg
dec
adc
das
dec
adc
mov
push
jnp
dec
pop
test
cmp
xor
mov
and
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
addl
dec
cmp
jno
icebp
mov
add
jecxz
pop
mov
fistpll
and
mov
pop
in
aad
scas
lcall
ja
mov
cltd
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pop
inc
xor
mov
mov
push
fwait
ret
inc
mov
mov
jno
fs
cwtl
adc
add
sarb
sbb
adc
insb
out
cmp
cmp
sub
push
fstps
fisttps
cmp
push
fstps
fisttps
cmp
or
pop
pop
dec
or
pop
pop
dec
or
pop
pop
mov
loope
or
push
fstps
fisttps
cmp
cli
int
adc
loopne
add
call
pop
ret
dec
cmp
pop
and
xorb
call
push
pop
stos
ffreep
sti
or
xor
jbe
add
icebp
pop
add
ss
push
inc
cli
mov
fnstsw
and
clc
or
cld
cli
xor
add
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
decb
inc
xor
ljmp
jo
repnz
or
xchg
lret
iret
jmp
into
dec
or
sbb
mull
pop
add
mov
mov
enter
sub
mov
cld
jne
pushf
mov
aad
lcall
add
call
enter
sub
imul
jl
dec
xchg
jl
add
and
js
sub
pushf
cmovg
and
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pop
xchg
cmp
xchg
lahf
fstpt
aam
mov
sub
sahf
ficompl
fld
or
sbb
push
push
or
fsubrs
sbb
pop
in
aad
out
insb
mov
fs
shll
mov
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
or
adc
jns
push
mov
cmpsb
jb
aaa
movsb
lock
jno
hlt
data16
stc
movsl
adc
inc
push
dec
or
push
mov
pushf
jnp
mov
and
insl
jp
icebp
mov
jp
icebp
mov
jp
icebp
mov
jp
icebp
mov
lea
push
xchg
sbb
mov
push
dec
subb
repz
dec
fstps
xchg
dec
rclb
push
enter
xchg
add
call
xor
inc
out
imul
jae
jns
std
in
cmpb
in
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
call
mov
jne
push
roll
ret
mov
mov
xor
cld
dec
xchg
mov
mov
leave
mov
fcmovnbe
sbb
ret
adc
sar
cmp
push
cmp
adc
dec
pop
dec
and
add
imul
stc
sti
jle
ja
pusha
cmpl
je
xchg
stos
jo
mov
clc
xlat
pop
fnsave
call
rcll
jae
scas
adc
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sub
mov
jle
int
stos
shll
addr16
mov
inc
insb
xor
sub
aaa
sbb
mov
dec
mov
dec
pop
hlt
faddl
and
jl
insb
pop
in
aad
or
adc
sub
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
fstps
jge
add
push
adc
add
inc
repz
dec
iret
push
sahf
xor
pop
std
enter
cmp
movsb
push
rep
push
rep
push
rep
push
scas
lret
sbb
push
andb
jmp
and
jmp
popa
xchg
iret
mov
and
dec
repnz
fstpt
push
ret
loop
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
call
call
fs
jne
mov
mov
and
inc
xor
in
orl
and
sub
cwtl
ljmp
and
jne
je
aaa
adc
adc
lret
movsb
in
fcmove
pop
or
mov
jmp
imul
mov
jmp
dec
fidivl
jne
or
push
mov
es
cmp
mov
pop
test
inc
pop
xchg
pop
inc
mov
popw
movsl
add
push
or
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
dec
add
and
jle
mov
add
pop
mov
incl
enter
jl
ljmp
mul
lds
hlt
faddl
and
jl
insb
pop
in
aad
push
and
test
cmp
pop
push
mov
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
shr
sbb
test
adc
xor
mov
movsl
lcall
ret
ljmp
call
shr
loopne
shl
mov
sub
mov
xor
test
imul
inc
add
mov
lret
xlat
sub
mov
jo
xorl
insl
imul
icebp
add
outsl
push
sub
stc
mov
pop
jae
adc
fildl
xor
fwait
nop
cmp
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
rcrb
call
dec
ljmp
out
mov
sbbb
xor
sarl
pop
lret
dec
mov
repz
enter
insb
pop
in
aad
jl
insb
pop
in
aad
cmp
or
mov
cmc
pop
mov
sbb
pop
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
popf
jl
scas
inc
into
adc
and
addl
mov
out
stos
aaa
sub
push
fldl2e
iret
cld
jae
je
mov
ret
ret
outsl
sbb
leave
mov
dec
inc
int
xor
add
call
dec
mov
xchg
dec
adc
das
sub
add
push
icebp
push
pop
stc
pop
fildll
cmc
inc
cmpsl
inc
stc
lret
jb
lods
and
ret
into
insl
nop
push
ja
add
into
and
les
jae
pop
sti
jge
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cli
in
mov
inc
push
jno
test
inc
loopne
xor
mov
jge
inc
int3
push
pop
orl
call
sbb
mov
adc
pop
mov
inc
and
ds
lods
pushf
jge
cmp
out
lock
adc
lock
insb
pop
in
aad
jl
insb
pop
in
aad
xchg
decb
or
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
es
or
insb
jg
push
cmp
pop
movsb
or
lret
mov
scas
xchg
xor
ss
cltd
js
lret
mov
out
sub
mov
cld
jne
jno
lea
in
mull
repnz
fstl
jb
add
mov
lret
dec
push
xchg
cmp
test
add
call
push
fwait
add
inc
mov
jbe
adc
imul
jnp
sbb
bound
clc
lret
cmpsb
jbe
clc
adc
and
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
dec
insb
mov
aas
and
xchg
cwtl
mov
xchg
xchg
ret
and
cmpb
std
mov
sbb
arpl
adc
adc
movsl
sub
rolb
call
inc
mov
pushf
jo
repz
jp
dec
xlat
mov
sub
jl
jl
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
pop
in
aad
pop
cld
ds
lea
pop
bts
out
mov
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sar
dec
nop
jge
inc
jb
loope
ret
or
mov
mov
pop
mov
out
enter
jecxz
pop
inc
add
jo
jp
sti
push
cmp
adc
dec
pop
dec
and
add
imul
stc
sti
jle
ja
pusha
cmpl
jmp
or
jno
sar
pop
in
sar
push
jbe
lock
pusha
and
mov
lods
adc
dec
into
inc
je
stc
add
call
pop
cli
rcrb
aad
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
inc
or
cmp
mov
test
repnz
cmpl
lahf
push
aaa
inc
and
push
ds
pop
mov
sbb
arpl
or
sub
push
orl
add
cmp
mov
outsb
imulb
lret
jl
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
pop
in
aad
imul
inc
jbe
scas
push
xchg
cmpsl
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
rclb
inc
jb
pusha
addr16
jmp
jle
ret
pusha
outsb
add
call
lods
nop
test
stc
data16
push
mov
fdivs
popa
dec
fstp
cmp
dec
loope
sub
and
pop
aad
adc
xor
lock
jmp
cld
mov
adc
and
push
inc
push
jge
push
pusha
xchg
xchg
icebp
mov
add
movsbl
ljmp
fildll
xchg
and
test
pop
pop
push
lds
adc
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sbb
aas
xor
mov
dec
sub
add
mov
lds
aaa
jo
int
das
sbb
mov
sbb
dec
out
ficoms
pop
inc
xor
xchg
adc
dec
cmp
xlat
jge
aas
pop
lcall
in
xor
jbe
call
and
push
mov
outsb
testb
call
call
cmpsb
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
pop
in
aad
cmp
push
pop
sub
aad
je
cmc
pop
cwtl
xchg
jo
daa
mov
stc
test
loopne
cmp
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
inc
jno
fwait
mov
xor
fiaddl
ret
adc
mov
scas
xor
xor
shrb
sub
fmull
and
outsl
das
add
call
cmpsb
and
addr16
lods
mov
lret
xlat
sub
out
pop
sbb
push
loope
xchg
xor
cmp
es
mov
jno
sahf
fidivs
push
xor
and
bound
enter
push
mov
popa
lds
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
loope
jmp
jo
int3
sbb
lods
jnp
iret
fs
sbbb
js
inc
lds
cmpsl
sbb
adc
jo
mov
popl
push
jecxz
jge
scas
cld
scas
dec
inc
push
int
xchg
push
int
enter
iret
jecxz
push
mul
fbstp
jecxz
jl
stos
xor
inc
mov
out
or
out
mulb
sbb
add
call
adc
jl
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
pop
in
aad
or
das
aas
jnp
shufps
jg
push
rclb
pop
aas
les
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
jecxz
adc
push
ret
fnsave
pop
mov
fiaddl
ss
movsb
sbb
je
push
inc
mov
shrl
stos
out
enter
or
ja
inc
mov
inc
std
cld
jne
sub
movl
jmp
repz
jo
rcl
ljmp
push
fsubp
pop
cli
jle
add
call
sbb
pop
ljmp
and
cmc
or
mov
stos
sub
in
adc
aam
xchg
inc
mov
cmp
sub
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmp
xchg
or
pop
inc
call
je
insb
imul
dec
and
arpl
mov
mov
dec
lods
sbb
dec
out
pop
cwtl
fcmove
jno
pop
mov
xor
in
sti
inc
jo
xor
dec
jno
cmpsl
inc
jp
mov
lss
stc
push
sbb
les
sbb
jl
mov
xor
gs
pop
out
lock
adc
lock
insb
pop
in
aad
add
call
jl
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
pop
in
aad
stos
mov
sub
mov
xchg
mov
adc
sbb
leave
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
out
fwait
jl
jne
inc
push
dec
push
pop
int
jmp
inc
adc
mov
rorb
test
in
add
xlat
cld
lahf
push
and
mov
add
fldt
xchg
hlt
push
outsb
mov
jns
insb
xchg
add
mov
loopne
sbb
int3
shlw
mov
lods
pop
mov
jg
pop
rcl
inc
out
pop
push
adc
sbb
adc
clc
mov
lods
mov
jb
and
add
call
bound
out
repnz
cmp
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
outsb
push
inc
aam
dec
cmpb
push
lahf
and
adc
cmpsb
bound
cltd
dec
and
gs
mov
mov
sbb
dec
out
pop
cwtl
fcmove
jno
pop
mov
addr16
add
cltd
push
adc
ljmp
out
daa
add
ret
adc
mov
js
mov
cwtl
push
push
cmp
aam
push
sub
cli
adc
add
fists
mov
inc
in
xchg
out
lock
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
pop
in
aad
jl
add
call
insb
pop
in
aad
jl
insb
pop
in
aad
push
and
test
fyl2x
rclb
shll
push
dec
and
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lret
xchg
call
adc
inc
or
dec
out
dec
mov
add
call
mov
and
iret
fs
aas
inc
mov
ret
sahf
popa
cmp
lods
dec
sub
sub
pop
dec
sub
cmp
icebp
xor
sub
push
mov
cmp
inc
cmp
sub
cmpsb
xor
xchg
lahf
pop
into
or
fdivrs
call
inc
mov
and
dec
popa
jge
jmp
mov
dec
fs
fsubs
mov
sub
shll
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xlat
pop
imul
nop
ret
add
call
or
mov
mov
or
scas
mov
ss
sub
jge
pop
cwtl
fcmove
jno
pop
mov
addr16
add
lcall
arpl
jb
and
scas
call
mov
push
int
enter
iret
sbb
cli
mov
mov
mov
into
fldenv
jle
movsl
stc
xor
sbb
jl
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
add
call
in
aad
cld
cmp
jl
stc
inc
adc
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
pop
arpl
xor
arpl
and
das
xor
inc
adc
mov
je
push
mov
in
adcl
into
jl
test
xor
xor
fmul
xchg
cltd
js
lret
mov
mov
call
lcall
cli
subl
rorb
outsb
lock
cmc
frstor
add
pop
sbb
mov
jbe
dec
mov
hlt
sbb
out
repz
jp
dec
xlat
mov
sub
jl
or
xchg
outsl
imul
leave
or
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
addr16
or
push
cld
jno
jmp
add
sarb
scas
push
rcrb
pop
xor
add
call
pop
xchg
xor
cwtl
fcmove
jno
pop
mov
addr16
add
lcall
imul
fs
sub
xor
cltd
rcr
cld
in
out
aaa
addr16
fcoms
fldt
inc
out
inc
leave
scas
jecxz
gs
mov
dec
mov
lret
sbb
punpckhdq
mov
out
lock
adc
lock
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
pop
in
aad
push
cmpl
cltd
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lea
inc
mov
dec
pop
xchg
sbb
loopne
pop
and
and
stos
rcrb
pop
or
jno
push
pop
lcall
jle
dec
adc
aas
push
pushf
jle
lds
xchg
pop
jp
pop
je
pop
ret
rcrb
ljmp
xchg
jno
push
pop
jae
push
shr
inc
jo
add
mov
iret
cwtl
push
ljmp
xchg
add
add
cmp
xchg
sarb
ljmp
mov
mov
outsb
inc
outsb
test
sub
pop
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
inc
jne
lods
out
pop
mov
and
jns
and
mov
add
loop
lods
sub
js
mov
cmp
add
inc
add
call
mov
adc
xchg
lock
fs
sub
xor
cltd
rcr
and
sbb
pshufw
lahf
fldt
ja
add
jecxz
push
mul
fbstp
outsb
cmpsl
imul
outsb
xchg
fstps
adc
lock
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
pop
in
aad
mov
popa
push
push
jbe
mov
out
dec
loop
icebp
push
mov
sbb
jne
aam
bound
or
adc
add
call
inc
aad
xchg
dec
cmp
sub
mov
add
movl
cli
repz
jno
push
movsl
xchg
aad
sbb
or
test
test
aad
mov
mov
sbb
lds
inc
test
sub
adc
push
rolb
and
jno
xor
test
scas
daa
mov
rorb
testl
and
mov
test
adc
and
xlat
stos
sub
cmp
mov
fldenv
add
call
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jmp
aas
shll
and
imul
dec
mov
jp
fwait
xor
xlat
fwait
iret
out
aaa
ret
adc
inc
xlat
dec
mov
mov
add
lcall
imul
add
call
inc
sub
xor
cltd
rcr
and
sbb
pshufw
lahf
fldt
ja
add
inc
add
and
aam
sub
fsubl
cltd
enter
or
lock
adc
lock
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
pop
in
aad
test
mov
mov
movsl
enter
movl
lds
sbb
mov
dec
mov
add
call
ret
mov
les
pop
ds
std
loope
push
dec
adc
cmp
sbb
scas
mov
cmp
jecxz
dec
fwait
mov
adc
or
mov
mov
mov
lds
daa
xchg
dec
shr
mov
mov
or
push
jecxz
sbb
push
gs
aad
push
sbb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sbb
aas
xor
sbb
adcb
pushf
cmc
outsl
add
outsb
pop
jp
divb
fisubs
xchg
add
lods
pop
jge
push
adc
xchg
lock
fs
sub
xor
cltd
rcr
and
sbb
pshufw
call
out
fldt
ja
add
inc
add
and
aam
sub
fsubl
sbbb
push
pop
out
lock
adc
lock
insb
pop
in
aad
jl
insb
pop
in
aad
jl
insb
pop
in
aad
test
mov
test
sub
cmp
iret
movl
lds
sbb
jg
jmp
cmpsl
add
mov
inc
or
out
imul
lret
andb
xchg
stos
push
out
notb
out
mov
sahf
or
call
jns
xor
xor
cltd
pushf
iret
addr16
push
sub
cli
adc
add
cmp
cmp
jge
popa
mov
mov
push
and
aas
dec
lcall
ljmp
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jae
push
adc
jns
xor
dec
dec
ret
add
lahf
dec
ret
xchg
pop
inc
add
xorl
ds
mov
xchg
fsub
push
inc
mov
in
sbb
into
adc
xchg
lock
fs
sub
xor
cltd
rcr
and
sbb
pshufw
lahf
fldt
ja
add
inc
add
and
add
call
sbb
add
mov
sbbb
push
pop
out
lock
adc
lock
insb
pop
in
aad
test
mov
test
sub
in
ja
push
sbb
adc
movl
push
insb
jae
ficoms
or
and
add
and
cmpsb
pop
add
xchg
jle
jnp
pop
sbb
sbb
jp
push
in
or
xchg
ret
xlat
lock
xchg
push
mov
inc
nop
add
call
sti
ss
cmp
ficoml
cmpsl
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
adc
mov
ja
decb
cmp
outsl
stos
pop
or
imul
call
mov
loop
mov
add
imul
fs
sub
std
mov
cmpsb
stos
and
sbb
pshufw
lahf
fldt
ja
add
inc
add
and
aam
sub
fsubl
sbbb
push
add
call
out
lock
adc
lock
insb
pop
in
aad
jl
insb
pop
in
aad
test
sub
in
ja
push
sbb
cmp
test
xchg
dec
out
cmp
test
xchg
dec
mov
inc
in
xchg
out
cmp
cmpsl
lock
enter
jae
mov
in
push
lcall
jge
add
shrl
lcall
int3
gs
inc
repnz
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
addr16
or
push
cld
jno
cld
out
popa
outsb
movsl
or
sbb
js
mov
mov
aam
outsb
stc
dec
pop
and
sar
lret
test
or
shlb
outsb
pop
sar
mov
cmpsb
stos
and
sbb
pshufw
lahf
fldt
ja
add
inc
add
and
mov
loop
dec
cmpsl
mov
repnz
ret
push
sub
pop
aas
les
jb
movsl
movsb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
adc
ljmp
fcmove
repnz
cmp
sbb
add
rcr
dec
jne
xor
inc
idivl
sub
add
pop
cmpsb
pop
push
push
dec
lret
mov
dec
shll
add
jo
out
fldt
ja
add
imul
pop
mov
shrl
or
xor
cmp
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
adc
call
notl
mov
pop
dec
imul
loopne
mov
and
jno
ljmp
arpl
mov
add
or
movsb
mov
lock
rol
mov
adc
inc
dec
aam
sbb
push
dec
mov
xchg
imul
push
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
insl
xor
inc
call
call
adc
sbbb
sbb
push
cmp
lods
dec
test
lea
mov
cmp
out
dec
out
or
mov
xchg
dec
pop
adc
and
cmp
sub
sbb
imul
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
enter
incl
push
push
stos
mov
popa
mov
add
call
lods
cli
and
imul
xor
xlat
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pop
mov
rorb
pop
cmp
mov
cmpsl
adc
cld
jns
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmpb
jmp
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
sbb
sbb
adc
shll
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
xchg
pop
cmc
imul
call
xchg
jo
cmp
mov
adc
daa
cmp
cld
pop
addr16
in
cmp
cld
jnp
or
rolb
imull
jae
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
add
or
pop
sub
pop
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
xchg
ja
loop
rcrl
jmp
cld
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
aaa
dec
jns
das
mov
movsl
movsb
cmpsb
outsb
push
inc
loope
mov
xchg
xchg
lods
inc
pop
add
call
in
cmp
cld
in
xor
je
cltd
movsl
movsb
cmpsb
outsb
push
inc
jae
loopne
mov
addr16
in
cmp
cld
dec
or
movsl
movsb
cmpsb
outsb
push
inc
mov
xchg
aaa
add
addr16
in
cmp
cld
dec
mov
push
jb
movsl
movsb
cmpsb
outsb
push
inc
add
or
insb
insb
mov
daa
cmp
cld
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
neg
sbb
add
pop
or
into
ror
cld
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
jg
or
pop
ret
push
inc
dec
movl
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
imull
jae
scas
data16
test
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
bound
or
inc
ja
push
pop
cltd
adc
push
pop
fdivs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
into
rcrb
cs
data16
rcr
xchg
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmp
xor
inc
pop
mov
in
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
addr16
mov
cmpb
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
or
jmp
stc
inc
cmp
cmovno
xchg
push
or
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
stos
sub
mov
push
lcall
dec
sub
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
addr16
lods
pop
in
lods
in
cmp
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xor
sti
mov
add
call
les
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
insl
fistpll
popa
subb
out
xchg
imul
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
insl
fistpll
popa
subb
out
xchg
imul
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
shlb
je
mov
outsb
test
pop
aaa
out
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
shlb
je
mov
cmp
out
nop
sub
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
add
call
fistpll
popa
subb
fsub
cld
nop
sub
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
insl
fistpll
popa
subb
fsub
cld
nop
sub
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xor
sti
mov
sub
fisttps
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
addr16
lods
pop
in
lods
std
fwait
cmp
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
stos
sub
mov
push
lcall
xchg
fisttps
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
hlt
in
inc
adc
xor
sub
fisttps
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
shlb
je
mov
cmp
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
enter
test
cmp
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
std
fwait
cmp
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
lods
add
mov
call
xchg
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
scas
bound
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
gs
cld
xor
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
mul
sahf
push
push
and
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
mul
sahf
push
push
and
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
push
mul
sahf
push
push
and
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
gs
cld
xor
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
ret
dec
mov
mov
pop
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
pop
outsl
add
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jge
cmpb
aam
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
stos
xlat
cmp
out
nop
sub
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jbe
test
mov
aaa
out
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sub
decb
pop
aaa
out
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xchg
scas
adc
push
lea
hlt
pop
aaa
out
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
insl
fistpll
popa
subb
out
xchg
imul
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
stos
sub
mov
push
lcall
xchg
imul
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
fadd
pop
aas
in
sar
xlat
insl
pop
cld
or
sbb
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lret
je
cmp
insl
pop
cld
or
sbb
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
out
mov
and
cmp
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lret
je
cmp
add
call
push
xchg
ljmp
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
into
rcrb
cs
jmp
pop
jbe
repnz
jp
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmp
xor
jmp
pop
jbe
repnz
jp
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
pop
pushf
inc
insb
cmovno
xchg
push
or
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
or
jmp
stc
inc
cmp
pop
ss
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
stos
sub
mov
push
lcall
ror
in
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
addr16
lods
pop
in
lods
repz
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
insl
fistpll
popa
subb
rcr
xchg
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
shlb
je
mov
lods
cmp
loop
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
into
push
fdivs
scas
data16
test
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
or
mov
cld
pop
ret
push
inc
dec
movl
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xchg
scas
adc
push
sar
loopne
push
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
scas
and
jp
add
in
cmc
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
bound
dec
mov
addr16
in
cmp
cld
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sub
incb
add
call
addr16
in
cmp
cld
dec
mov
push
jb
movsl
movsb
cmpsb
outsb
push
inc
enter
test
cmc
in
cmp
cld
sub
dec
inc
mov
sarl
cmpsb
outsb
push
inc
add
sub
aam
test
daa
cmp
cld
jns
ret
or
shlb
movsl
movsb
cmpsb
outsb
push
inc
jbe
test
pop
addr16
in
cmp
cld
mov
ror
mov
movsb
cmpsb
outsb
push
inc
jbe
test
pop
addr16
in
cmp
cld
jae
mov
or
movsl
movsb
cmpsb
outsb
add
call
inc
jmp
xchg
fsubl
pop
test
addr16
in
cmp
cld
cld
add
xor
movsl
movsb
cmpsb
outsb
push
inc
jmp
xchg
fsubl
pop
test
addr16
in
cmp
cld
add
or
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pop
addr16
in
cmp
cld
jnp
or
rolb
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
loope
mov
xchg
xchg
lods
inc
ja
bound
arpl
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
loope
mov
xchg
xchg
lods
inc
jo
adcb
call
and
push
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
loope
mov
xchg
xchg
lods
inc
push
scas
daa
inc
dec
dec
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
mov
jae
cli
xchg
test
sbb
sbb
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
mov
jae
mov
call
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
repnz
push
lea
dec
jmp
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
repnz
call
xchg
xchg
or
stos
das
fimuls
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
repnz
push
gs
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sahf
adc
xlat
aaa
les
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sahf
adc
xlat
aaa
les
mov
or
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sahf
adc
xlat
aaa
les
mov
xor
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
sahf
adc
xlat
aaa
les
pop
and
inc
loop
xor
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
rcrl
out
mov
or
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
rcrl
cld
add
xor
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
rcrl
cld
add
xor
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
rcrl
xchg
ja
loop
add
call
pop
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
rcrl
xor
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
rcrl
jae
mov
or
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
rcrl
aaa
dec
jns
das
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
rcrl
mov
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
rcrl
call
lods
popf
jbe
ficompl
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
rcrl
mov
ror
mov
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
rcrl
mov
and
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
rcrl
mov
and
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
rcrl
in
xor
je
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
push
rcrl
jns
ret
or
shlb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
rcrl
jns
ret
or
shlb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
rcrl
sbb
or
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
rcrl
sbb
or
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
rcrl
dec
or
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
rcrl
dec
or
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
rcrl
sub
dec
inc
mov
sarl
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
rcrl
sub
dec
inc
mov
sarl
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
rcrl
in
xor
sti
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
rcrl
call
jbe
xor
sti
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sahf
adc
xlat
aaa
les
mov
push
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sahf
adc
xlat
aaa
les
mov
push
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sahf
adc
xlat
aaa
les
subl
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sahf
adc
xlat
aaa
les
subl
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
sahf
adc
xlat
aaa
les
subl
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sahf
adc
xlat
aaa
les
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
repnz
push
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
repnz
push
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
movb
adc
add
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
movb
adc
add
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
adc
add
xchg
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
adc
add
xchg
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
inc
frstor
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
adc
push
cmp
add
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
adc
push
cmp
add
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
adc
push
cmp
add
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
push
shl
cmpsl
cmc
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
push
shl
cmpsl
cmc
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
pop
or
into
ror
cld
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jmp
xchg
fsubl
pop
test
or
into
ror
cld
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jmp
xchg
fsubl
pop
test
or
into
ror
cld
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jbe
test
pop
or
into
ror
cld
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jbe
test
pop
or
into
ror
cld
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jbe
test
pop
or
into
ror
cld
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
sub
aam
test
ror
cld
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
sub
aam
test
ror
cld
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
enter
test
leave
into
ror
cld
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
enter
test
leave
into
ror
cld
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sub
pop
or
into
ror
cld
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sub
pop
or
into
ror
cld
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
bound
dec
mov
or
into
ror
cld
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
bound
dec
mov
or
into
ror
cld
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
scas
and
jp
add
call
or
into
ror
cld
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
scas
and
jp
add
ror
cld
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xchg
scas
adc
push
or
into
ror
cld
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xchg
scas
adc
push
or
into
ror
cld
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
or
mov
cld
pop
or
into
ror
cld
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
or
mov
cld
pop
or
into
ror
cld
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
into
push
fadds
push
shl
cmpsl
cmc
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
shlb
je
mov
push
shl
cmpsl
cmc
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
shlb
je
mov
push
shl
cmpsl
cmc
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
insl
fistpll
popa
subb
shl
cmpsl
cmc
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
insl
fistpll
popa
subb
shl
cmpsl
cmc
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xor
sti
mov
in
cmc
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
addr16
lods
pop
in
lods
sub
es
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
addr16
lods
pop
in
lods
sub
es
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
stos
sub
mov
push
lcall
call
or
es
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
hlt
in
inc
adc
xor
pop
es
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
hlt
in
inc
adc
xor
pop
es
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
or
jmp
stc
inc
cmp
addr16
in
cmp
cld
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
addr16
mov
cmpb
in
cmp
cld
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
push
mov
addr16
in
cmp
cld
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
pop
pushf
inc
pop
addr16
in
cmp
cld
xchg
subl
jb
movsl
movsb
cmpsb
outsb
push
inc
fadd
pop
aas
in
sar
xlat
pop
addr16
in
cmp
cld
xchg
subl
jb
movsl
movsb
cmpsb
outsb
push
inc
cmp
xor
pop
addr16
in
cmp
cld
xchg
subl
jb
movsl
movsb
cmpsb
outsb
push
inc
and
push
mov
outsb
push
ss
addr16
in
cmp
cld
dec
mov
add
call
push
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
into
rcrb
cs
out
bound
dec
mov
push
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
into
rcrb
cs
adc
dec
inc
add
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
cmpb
jmp
and
and
pop
in
xor
sti
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lret
je
cmp
push
insb
sbbb
xlat
pop
in
xor
sti
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
bound
or
inc
ja
xor
sub
add
call
mov
sub
dec
inc
mov
sarl
cmpsb
outsb
push
inc
cld
inc
mov
dec
xor
sub
les
dec
inc
mov
sarl
cmpsb
outsb
push
inc
out
mov
cmp
xor
fimuls
dec
or
movsl
movsb
cmpsb
outsb
push
inc
imull
jae
rcrb
dec
or
movsl
movsb
cmpsb
outsb
push
inc
inc
xchg
xor
push
stos
jmp
xorb
xchg
rcll
xorb
movsb
cmpsb
outsb
push
inc
and
call
das
inc
sub
int
cmpl
aam
sti
sbb
or
jb
movsl
movsb
cmpsb
outsb
push
inc
push
scas
cltd
add
lahf
imul
test
ret
or
shlb
movsl
movsb
cmpsb
outsb
push
inc
dec
jg
or
add
push
mov
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
or
mov
mov
push
adc
loop
dec
xor
mov
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
pop
or
pop
inc
cmp
adc
xchg
mov
and
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
cmp
mov
adc
fstl
jecxz
mov
ror
mov
movsb
cmpsb
outsb
push
inc
neg
sbb
add
clc
inc
arpl
inc
out
mov
mov
movsl
movsb
cmpsb
outsb
push
inc
cwtl
stos
inc
fsts
clc
pop
fsubr
xchg
add
repz
mov
movsl
movsb
cmpsb
outsb
push
inc
push
adc
push
xchg
mov
or
cmp
dec
dec
test
aaa
dec
jns
das
mov
movsl
movsb
cmpsb
outsb
push
inc
js
popa
mov
dec
cwtl
jb
and
sbb
call
xor
mov
or
movsl
movsb
cmpsb
outsb
push
inc
mov
daa
cmpsb
xor
xor
dec
inc
cmpsb
mov
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
dec
aad
arpl
shl
popf
adc
xchg
ja
loop
rcrl
cltd
movsl
movsb
cmpsb
outsb
push
inc
jmp
les
ret
mov
insb
add
cmp
xor
movsl
movsb
cmpsb
outsb
push
inc
imul
xor
out
mov
or
cltd
movsl
movsb
cmpsb
outsb
push
inc
inc
nop
push
daa
add
call
popa
test
cmp
push
xchg
pop
and
inc
loop
xor
cmpsb
outsb
push
inc
sbb
clc
dec
push
mov
inc
mov
mov
xor
jb
movsl
movsb
cmpsb
outsb
push
inc
sub
stc
cmp
or
jmp
add
or
cmpsb
outsb
push
inc
adc
shll
mov
sbb
xor
test
movsl
movsb
cmpsb
outsb
push
inc
shl
cmpsb
lods
cmp
or
stos
das
fimuls
add
call
movsb
cmpsb
outsb
push
inc
xchg
and
call
out
out
push
pop
lea
dec
jmp
movsb
cmpsb
outsb
push
inc
xchg
sbb
lods
mov
cmpsb
jbe
jnp
or
rolb
jb
movsl
movsb
cmpsb
outsb
push
inc
xor
and
jbe
sub
jb
cli
xchg
test
sbb
sbb
cltd
movsl
movsb
cmpsb
outsb
push
inc
mov
push
test
jbe
je
in
xchg
scas
daa
inc
dec
dec
mov
cmpsb
outsb
push
inc
sahf
adc
xlat
aaa
les
repz
nop
add
call
aas
bound
arpl
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
mov
jae
js
aaa
add
pop
in
sbb
movsl
movsb
cmpsb
outsb
push
inc
adc
scas
sub
stc
cmp
push
cmp
fsubl
pop
test
ss
shl
cmpsl
cmc
fistl
cmpb
sbb
stos
xchg
cmp
loop
cld
aam
test
ror
cld
add
out
push
lods
dec
mov
lods
sub
pop
sar
loopne
add
call
push
xchg
and
sbb
sbb
xchg
scas
adc
push
ret
push
inc
dec
movl
test
cmp
mov
into
push
fcomps
mov
subb
inc
push
imul
test
ss
imul
sub
sti
mov
jmp
xor
pop
in
cmp
stos
sub
mov
push
lcall
push
pop
fdivs
xlat
pop
push
mov
sbb
mov
add
call
mov
out
rcr
xchg
sahf
adc
xlat
aaa
les
sbb
rcr
xchg
and
push
mov
outsb
push
repz
mov
mov
push
inc
dec
movl
inc
ja
mov
sbb
mov
xchg
xchg
lods
inc
pop
addr16
in
cmp
cld
mov
add
insl
cli
fdivl
cmc
in
cmp
cld
pop
addr16
in
cmp
cld
xor
xor
mov
jmp
daa
cmp
cld
pop
add
call
in
cmp
cld
in
shrl
fsubrs
cmp
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
adc
cmp
cmpsb
shrb
jge
add
daa
cmp
cld
pop
addr16
in
cmp
cld
dec
sarb
fdivs
xchg
test
xor
pop
addr16
in
cmp
cld
daa
inc
and
in
jmp
cmpsb
dec
mov
movsl
or
xor
insl
jno
addr16
in
cmp
cld
sahf
mov
rcl
sbb
cmp
loopne
xor
add
call
and
push
push
test
lea
addr16
in
cmp
cld
aas
popf
fcoml
inc
pop
loopne
push
dec
icebp
sub
lcall
cmc
in
cmp
cld
repnz
sub
add
call
jnp
ds
out
icebp
pop
addr16
in
cmp
cld
aad
out
icebp
adc
add
cmp
inc
aad
scas
aaa
mov
xor
mov
pop
addr16
in
cmp
cld
push
pop
or
adc
lods
ror
mov
ds
stos
xchg
addr16
in
cmp
cld
and
addl
call
out
cmp
xor
cmp
ja
rcll
cmc
in
cmp
cld
lods
mov
sti
mov
test
mov
xchg
mov
sbb
into
vmovhps
in
cmp
cld
push
mulb
test
stos
or
inc
ja
ret
cmp
orb
daa
cmp
cld
and
ret
xchg
andl
aam
pop
addr16
in
cmp
cld
mov
xchg
std
sti
fisubrs
cmc
inc
xchg
xor
push
stos
jmp
vmwrite
test
addr16
in
add
call
cmp
cld
bound
shrb
add
cwtl
stos
inc
fsts
clc
pop
pop
addr16
in
cmp
cld
mov
repz
mov
push
dec
fadds
fsts
clc
pop
pop
addr16
in
cmp
cld
inc
es
lea
dec
mov
rclb
adc
push
xchg
mov
pop
addr16
in
cmp
cld
sbbl
fmulp
pusha
popa
inc
test
pop
xchg
add
popa
mov
dec
cwtl
jb
addr16
in
cmp
cld
and
leave
fdivl
pop
dec
pusha
xor
outsl
add
call
daa
cmpsb
xor
pop
addr16
in
cmp
cld
mov
int
shll
out
rcr
xchg
add
or
insb
insb
mov
daa
cmp
cld
dec
mov
push
ljmp
ret
in
dec
aad
arpl
addr16
in
cmp
cld
mov
ret
mov
insb
cmovno
xchg
push
or
lcall
pop
addr16
in
cmp
cld
jnp
dec
jns
dec
sub
cmpsb
and
dec
sub
inc
nop
push
daa
push
popa
test
pop
addr16
in
cmp
cld
xchg
mov
mov
add
call
int
out
xchg
imul
mov
push
pop
addr16
in
cmp
cld
jle
addb
adc
cmp
out
nop
sub
xchg
not
out
push
pop
addr16
in
cmp
cld
jnp
or
rolb
mov
sub
loopne
mov
addr16
in
cmp
cld
test
sbb
sbb
test
orl
inc
push
imul
test
daa
cmp
cld
jo
adcb
and
lahf
loopne
mov
rcrl
pop
addr16
in
cmp
add
call
cld
xchg
pop
cmc
imul
lret
pop
ret
push
loope
mov
xchg
xchg
lods
inc
pop
addr16
in
cmp
cld
cwtl
pop
in
sbb
mov
iret
pusha
dec
mov
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
sbb
stos
xchg
cmp
gs
dec
mov
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
lods
dec
mov
lods
and
into
push
fcoms
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
sbb
sbb
stos
sub
mov
push
lcall
add
call
cmp
cld
pop
addr16
in
cmp
cld
std
fwait
cmp
mov
rolb
in
sar
xlat
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
or
sbb
ss
imul
xchg
adcl
cmc
in
cmp
cld
pop
addr16
in
cmp
cld
sub
cmpsb
and
dec
sub
add
out
push
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
inc
pop
mov
in
shl
cmpsb
lods
cmp
daa
cmp
cld
pop
addr16
in
cmp
cld
push
pop
cltd
adc
push
pop
fadds
call
dec
enter
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
ret
push
inc
dec
movl
leave
and
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
sub
es
jae
loopne
mov
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
in
mov
push
repz
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
bound
ss
xchg
loope
repnz
ljmp
call
lret
adc
into
loop
jecxz
jno
push
hlt
mov
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmpsb
popa
adc
xacquire
mov
dec
pop
insl
push
inc
lds
cwtl
mov
call
shll
mov
inc
out
repz
jge
arpl
movb
mov
jne
cmpsb
movb
sub
cmc
adc
stc
pop
or
stos
jmp
dec
jg
dec
ds
mov
xchg
stc
fdivs
sbb
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
movsb
cmpsb
outsb
push
inc
jb
xor
xchg
in
jle
pop
nop
dec
dec
mov
dec
out
in
xchg
sbb
pop
loop
pusha
imul
icebp
repz
and
lret
jnp
xor
cmp
int3
sub
les
and
les
and
ret
cltd
xchg
fistpl
sub
frstor
clc
xchg
sbb
test
dec
les
and
les
and
les
and
les
and
les
and
lods
les
or
jns
sbb
add
call
mov
cltd
bound
pop
leave
aad
jecxz
je
lock
dec
sti
jbe
mov
or
pop
jge
mov
cli
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sahf
lret
mov
mov
ds
jl
pop
sub
jmp
sub
sahf
xor
jl
and
ljmp
mov
xor
add
mov
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
or
iret
fs
fadds
xchg
add
call
mov
sbb
mov
idivl
aas
pop
add
push
mov
pop
in
adc
mov
inc
mov
mov
in
add
mov
pop
stos
popf
mov
dec
xchg
lret
jae
mov
mov
jle
lods
cmp
sbb
mov
daa
jns
jg
or
cmc
xor
rol
insb
fcoms
mov
xchg
pushf
inc
les
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
dec
pop
inc
push
mulb
push
pop
adc
enter
jle
push
mov
mov
testb
xchg
jecxz
lods
stos
shlb
add
call
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
sahf
cmp
mov
out
push
inc
sti
insb
in
xchg
pop
mov
push
add
cmp
iret
xchg
add
cmpsl
jmp
jl
or
or
lods
rclb
sbb
cs
popf
insl
shlb
mov
or
cli
add
call
dec
dec
ret
or
sbb
xor
xchg
repnz
jp
jo
sub
mov
cld
loope
std
and
mov
jne
mov
xor
repnz
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jae
test
mov
dec
lret
addr16
aam
cld
sub
fldl
loopne
mov
or
in
pop
cmc
sahf
mov
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
movsb
cmpsb
pop
icebp
popa
pop
pop
push
lahf
add
fisttpl
sub
imul
call
mov
mov
iret
or
out
ret
test
ja
adc
movl
sub
insl
jns
pop
sub
cld
or
push
daa
into
push
adc
shll
cmp
rcll
hlt
lahf
stos
cltd
lds
popa
js
sub
adc
mov
loope
cmpsb
gs
xor
push
jne
test
inc
mov
mov
dec
lret
lock
jo
mov
inc
inc
mov
lods
pop
imul
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
clc
aam
mov
fistps
cmpsb
xchg
out
ficompl
xchg
jmp
mov
pop
inc
sub
mov
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
add
call
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
jae
cmp
mov
daa
ficomps
pop
pop
popf
je
jnp
sbb
add
jp
xor
sarb
dec
sbbb
fiaddl
xor
or
sub
push
loope
int3
push
sub
fsubrs
cltd
orb
jge
mov
pop
cmpsb
gs
jecxz
add
call
inc
cli
xlat
push
jne
test
inc
mov
pop
out
andl
ss
ds
jo
sub
aam
inc
jnp
outsl
inc
sub
lods
lcall
iret
dec
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jecxz
ret
xor
shll
cmpsb
psubb
ds
fwait
xchg
jne,pn
shlb
jecxz
lods
add
call
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
inc
outsl
pop
cli
or
or
cltd
cmp
adc
scas
and
test
fs
es
mov
add
call
bound
mov
dec
mov
out
test
lret
mov
and
pusha
pushl
fs
pop
jb
aad
not
push
mov
gs
jecxz
mov
xlat
push
jne
test
inc
mov
pop
out
andl
ss
ds
sbb
pop
ret
clc
lahf
and
pop
bound
ja
shlb
je
rcl
cs
hlt
mov
xlat
aas
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
out
jl
dec
negl
clc
shlb
hlt
inc
push
pop
or
shlb
jecxz
lods
mov
inc
outsl
pop
cli
or
pop
sub
sub
icebp
push
shrl
cld
inc
sub
push
inc
and
adc
sbb
adc
mov
pop
ret
jnp
aam
fldenv
fbld
fistpll
push
push
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
add
call
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
or
iret
fs
fdivrs
jmp
cmp
lock
jno
pushf
in
sbb
inc
xchg
out
lods
fimuls
dec
int3
mov
mov
xchg
xchg
popl
ret
cmp
lock
movsl
int
mov
lret
test
or
int3
jo
lods
jo
or
int3
insb
mov
stos
cmp
mov
outsb
jne
test
inc
mov
pop
out
andl
ss
add
call
inc
sbb
pop
ret
clc
lahf
and
pop
bound
mov
adc
lea
insb
sub
arpl
lods
jne
pushf
std
data16
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
clc
aam
test
cmpb
or
cmp
mov
call
mov
pop
and
outsb
cmp
mov
inc
pop
jg
ffreep
popa
pop
cmp
out
pop
add
call
xlat
outsl
inc
jge
into
pop
and
outsl
inc
jge
es
test
mov
sub
mov
push
jmp
cmc
jmp
dec
out
lret
in
cmp
add
dec
pop
leave
call
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
lods
mov
mov
cmp
pop
out
cltd
divl
add
cmp
rclb
in
lcall
and
add
call
push
mov
pushf
nop
pop
sbb
mov
roll
int3
insb
mov
stos
cmp
mov
outsb
jne
test
inc
mov
pop
out
andl
ss
ds
sbb
pop
ret
clc
lahf
and
pop
bound
mov
adc
nop
mov
loope
stc
mov
sub
out
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
or
lds
add
call
fldenv
mov
adc
mov
ljmp
mov
and
and
xor
je
stc
or
pop
test
imul
lods
xchg
ret
js,pn
dec
ret
mov
js
dec
ret
mov
pop
rclb
insl
ficomps
out
lods
ret
pop
aad
das
xor
imul
add
jmp
dec
out
xchg
test
add
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
rolb
call
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
loope
clc
sbb
mov
mov
pop
jb
push
mov
aam
pop
lea
xor
jne
sub
scas
mov
fidivrs
in
fstps
jl
notl
cmpsl
icebp
pop
cmp
std
mov
lea
pop
sbb
adc
outsb
jne
test
inc
mov
pop
out
andl
ss
ds
sbb
pop
ret
clc
lahf
and
pop
bound
mov
adc
add
call
stos
scas
mov
mov
ret
int
pop
adc
sahf
pushf
std
data16
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jmp
inc
push
rcl
loop
andb
es
add
mov
sub
adc
push
popa
and
lcall
arpl
ss
mov
xchg
in
jmp
push
je
popf
cmp
adc
into
mov
jno
into
mov
stos
movsb
sbb
inc
pop
daa
add
call
out
pop
xlat
ja
cmpsl
insl
or
jg
mov
dec
fwait
mov
pusha
out
mov
xor
push
pop
loop
jbe
xchg
insl
push
adc
imul
mov
jmp
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
movsb
shlb
adc
mov
ss
loop
stos
and
sub
call
mov
mov
pop
pop
maskmovq
decb
sbb
leave
adc
js
add
call
mov
xlat
sbb
adc
test
inc
mov
pop
out
andl
ss
ds
sbb
pop
ret
clc
lahf
and
pop
bound
fwait
jo,pt
fstpt
scas
mov
mov
ret
int
pop
mov
mov
les
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jae
test
mov
dec
fwait
mov
std
cmc
sub
mov
adcl
lods
fimuls
sub
xorb
pop
push
jns
add
call
inc
and
in
adc
xchg
adc
divl
icebp
scas
sub
in
fstps
mov
xchg
ljmp
in
ret
arpl
movsb
mov
adc
rorb
dec
shlb
push
pop
pop
inc
adc
ja
cmpsl
insl
or
jg
clc
test
dec
cmc
ss
lods
cli
jns
sub
jb
jbe
xchg
insl
push
adc
imul
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
add
call
jecxz
lods
stos
shlb
jecxz
lods
fwait
shld
sub
xchg
popa
mov
xchg
jne
stc
andl
addb
xchg
mov
outsl
cmovae
push
sbb
daa
out
xorb
std
adc
outsb
add
leave
mov
or
rclb
iret
jle
add
std
sub
pop
movsb
pusha
adc
mov
scas
mov
mov
ret
int
pop
cmpsb
xchg
lods
push
imul
add
call
mov
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sbb
cmpb
adc
cmp
call
add
jmp
mov
inc
sbb
and
pop
xor
loopne
leave
aaa
stc
adc
lea
scas
pop
sti
push
push
pop
sbb
push
arpl
fstpl
inc
and
and
jnp
sti
cmp
jnp
sti
cmp
test
pop
stos
fildl
mov
ljmp
imul
sub
push
cltd
dec
jge
add
call
roll
aas
add
jge
ja
shrl
pop
sbb
adc
xchg
test
add
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
test
jns
and
pop
jae
cmp
mov
jg
xchg
popa
mov
mov
cld
jecxz
mov
sti
testb
mov
mov
inc
mov
jne
test
inc
mov
outsb
add
leave
mov
add
call
or
rclb
cmp
xlat
or
jb
or
fwait
jo,pt
fstpt
scas
mov
mov
loope
stc
mov
sub
out
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jno
xchg
xchg
sahf
lds
mov
cmp
loopne
sti
mov
prefetchw
cld
dec
inc
xor
sbb
fsubp
push
push
lahf
pop
lock
push
pop
sub
jg
push
push
sarb
call
sub
test
sbb
pushf
add
xchg
xchg
adc
dec
jge
test
sbb
cltd
mov
fdivr
inc
sbb
mov
cmp
movsl
je
sub
sbb
xor
inc
push
daa
sti
add
dec
xor
sbb
shll
stos
call
test
dec
pop
movsl
mov
or
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
cld
cmp
cwtl
dec
lcall
add
sbb
push
sbb
add
call
inc
stos
lock
in
add
lock
movsl
scas
ret
test
pop
pop
lods
out
movsl
stos
cmp
xchg
sbb
xorb
std
adc
test
inc
mov
pop
out
adcl
mov
inc
scas
rclb
cmp
xlat
or
jb
or
fwait
jo,pt
fstpt
scas
mov
mov
mov
pop
aas
les
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xor
clc
or
dec
add
call
push
adcb
frstor
ds
cmpl
mov
bound
sub
cmpsb
test
jmp
fadds
and
mov
or
out
into
roll
mov
popa
pop
into
outsl
je
xchg
pop
sti
mov
scas
ret
lahf
inc
imul
ret
lahf
inc
imul
shrb
flds
mov
stos
xchg
dec
jno
stos
ret
icebp
arpl
out
dec
mov
xor
ret
lods
ds
cwtl
enter
das
and
jb
aam
mov
mov
divl
add
call
jae
sbb
nop
xor
xor
movsb
fcomps
shlb
dec
mov
add
cld
fs
popa
jae
sub
cli
fiadds
test
js
push
es
sub
adc
into
pop
mov
push
cmovae
out
iret
filds
int
outsb
jne
test
inc
mov
outsb
add
leave
push
testl
ss
ds
sbb
pop
ret
clc
lahf
inc
cmp
xlat
or
jb
or
call
pusha
adc
mov
scas
mov
mov
sbb
dec
aas
mov
stos
cmp
fmuls
movsb
dec
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmp
sti
dec
jne
in
out
and
cltd
jp
or
out
fistps
test
or
mov
xchg
dec
mov
cmpps
std
mov
mov
lods
adcb
dec
adc
inc
jge
push
cltd
mov
mov
dec
mov
dec
pop
push
cli
in
imul
xor
xchg
mov
mov
data16
insl
inc
fwait
pop
pop
add
call
hlt
out
mov
pop
push
push
cwtl
or
scas
jne
sar
add
sub
lcall
sbb
outsl
add
mov
hlt
movsb
mov
and
dec
jge
inc
roll
mov
xlat
mov
and
mov
aam
fidivrl
jg
and
call
mov
scas
pop
fildl
cmp
fildl
cmp
hlt
mov
imul
out
cmp
dec
push
sub
fs
in
mov
add
call
outsb
jne
test
inc
mov
aam
jl
decb
andl
shrb
subb
sbb
pop
ret
clc
lahf
and
pop
bound
mov
adc
stos
outsl
xor
xlat
cmp
xchg
int3
push
adc
cmp
ja
imulb
sbb
shlb
pop
jl
aad
pop
mov
ret
enter
cli
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
in
fiadds
mov
gs
into
lea
adc
jbe
xorb
test
add
call
or
lods
adc
lret
mov
inc
inc
in
lret
mov
das
das
or
push
push
mov
lea
mov
js
mov
je
adc
dec
jae
pop
xor
pushf
shl
and
add
sti
dec
or
repz
push
subl
jecxz
cs
push
lea
add
push
fiaddl
pop
mov
pusha
mov
push
jnp
movsb
cmp
jae
mov
lea
fnstsw
add
call
ljmp
enter
repz
ret
mov
pop
add
aad
lea
add
addr16
cmp
sbb
fnsave
jnp
adc
dec
outsb
add
leave
je
roll
add
push
testl
ss
ds
inc
scas
rclb
cmp
xlat
or
icebp
pop
bound
mov
adc
stos
outsl
xor
es
mov
cmpsb
packsswb
leave
test
call
pop
jecxz
je
lock
scas
push
sub
outsb
popa
icebp
jl
mov
movsl
jle
push
push
xchg
test
int
loopne
lods
push
cmpsb
or
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cs
stos
cmpsl
cld
out
leave
push
jne
aaa
push
mov
fisttpll
dec
nop
loope
sub
xchg
pushl
lods
cmp
sarl
out
decb
jmp
mov
ja
cmp
mov
pop
in
fnstsw
jns
add
pushf
pop
push
and
push
fistpll
dec
add
pop
cwtl
mov
xchg
andl
call
fldenv
cmpsb
ret
push
sbb
out
das
mov
in
das
sbb
lods
add
test
push
mov
lock
daa
fidivrl
test
mov
jb
jo
sbb
inc
js
sbb
imul
aas
aaa
daa
lods
rol
out
aas
aaa
daa
lods
rol
out
aas
aaa
daa
lods
rol
out
inc
fdivrs
xchg
shrl
mov
cmp
fnsave
decb
adcl
sub
xchg
pop
and
mov
xor
call
or
das
sbbl
ret
clc
lahf
inc
cmp
xlat
or
jb
or
out
jno
std
daa
imul
es
mov
cmpsb
packsswb
leave
test
je
lock
scas
push
sub
outsb
popa
icebp
subl
insb
xchg
punpcklwd
dec
pop
mov
rolb
pop
sti
cs
nop
aas
xchg
pushf
inc
les
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
scas
lcall
jbe
push
data16
inc
rorl
mov
xchg
fldt
cmpsb
adc
xchg
ja
push
and
dec
xchg
or
call
adc
scas
jle
sub
xchg
cmp
hlt
int
ret
or
adc
xor
rol
inc
clc
or
outsb
cld
fs
sti
or
scas
in
mov
xchg
pop
inc
and
vphadduwq
mov
jle
jbe
das
and
or
daa
popa
shl
and
js
and
push
sub
fidivrl
pop
add
add
fdivrl
pop
aas
aaa
daa
lods
rol
out
aas
aaa
daa
lods
add
call
out
aas
aaa
daa
lods
rol
out
and
js
movl
add
add
cmp
mov
or
pop
and
mov
and
jae
jno
ds
inc
scas
rclb
iret
jle
add
std
and
pop
bound
jb
or
fwait
jo,pt
fstpt
scas
mov
mov
mov
arpl
leave
test
je
lock
scas
push
sub
outsb
popa
icebp
subl
insb
xchg
sldt
call
dec
pop
mov
rolb
pop
sti
cs
nop
aas
xchg
pushf
inc
les
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
js,pt
orl
sub
fstl
int3
imul
lock
add
pusha
fidivrl
cmp
adc
loope
cmc
ja
push
out
cmpsb
add
cmp
mov
repz
bound
aaa
push
inc
popa
andl
jmp
gs
incb
jmp
jns
push
lea
js
ds
mov
bound
int
hlt
adc
adc
mov
icebp
xchg
push
popa
cmpb
and
jle
mov
call
sbbb
xor
jle
stos
pop
out
jnp
les
pop
loopne
mov
pop
push
mov
mov
cmp
mov
int
xlat
sarb
mov
lods
rol
out
aas
aaa
daa
lods
rol
out
and
push
lcall
mov
out
push
dec
aad
fiaddl
jp
xchg
xchg
pop
and
mov
xchg
xchg
pop
and
mov
xor
das
addl
xchg
sub
in
sbb
pop
ret
clc
lahf
inc
cmp
xlat
or
test
or
mov
call
adc
cmp
push
mov
scas
mov
mov
ret
int
pop
movb
shl
subb
sbb
int
bound
notb
xor
subl
insb
sub
add
pop
sti
cs
push
cltd
pop
jge
mov
cli
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
stos
jno
filds
in
aas
mov
inc
jmp
imul
xorb
push
das
ljmp
lret
xor
cli
cmpsl
pop
xchg
mov
push
adc
fstl
jnp
iret
dec
xchg
sbb
add
call
andb
adc
jbe
imul
sbb
inc
sarb
jge
fmull
inc
mov
mov
out
loope
gs
pop
mov
mov
in
xchg
lods
add
mov
sub
sbb
pop
outsb
ds
insl
push
int3
dec
idivb
ja
push
loope
inc
les
popf
mov
mov
hlt
pusha
xchg
mov
sbb
lds
pop
aas
aaa
daa
lods
rol
out
int
mov
xchg
xchg
push
mov
adc
fisubs
add
call
dec
xor
das
addl
xchg
sub
in
push
pop
es
cmp
pop
ret
clc
lahf
inc
cmp
xlat
or
icebp
pop
bound
jb
or
out
jno
std
daa
imul
es
mov
cmpsb
rdpmc
mov
sub
inc
xlat
push
shl
subb
sbb
int
clc
imulb
ds
add
pop
sti
cs
push
cltd
pop
jge
mov
mov
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
push
stos
push
xor
bound
xor
add
call
in
dec
mov
imul
jge
call
and
lock
sub
inc
adc
dec
aad
sub
sarl
insb
sbb
es
inc
xchg
and
mov
fsubr
inc
xlat
inc
aad
adc
dec
sub
inc
mov
and
shlb
sub
fadd
push
sbb
pop
sahf
mov
mov
scas
push
rolb
jno
inc
pop
jp
daa
icebp
loopne
push
out
adc
pop
rcr
cmpsb
pop
mov
ret
sub
int
push
jo
ja
mov
call
mov
cltd
xlat
cmp
or
add
xor
sbb
jbe
mov
or
xchg
xchg
fsubrs
xor
stc
das
and
pop
push
mov
ret
adc
addr16
xor
dec
gs
xor
push
xchg
cltd
or
and
je
les
and
les
and
fsubs
rcll
inc
addr16
mov
call
mov
and
adc
lret
inc
or
xchg
fisubl
je
mov
cmpsb
packsswb
add
call
test
xchg
inc
inc
insl
cmp
loop
or
mov
loopne
lods
push
cmpsb
or
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pushf
dec
lock
movsl
stos
pushf
mov
sub
adc
inc
xchg
cltd
cmp
int3
pop
and
sbb
stos
adc
outsb
xor
mul
push
cmpl
dec
test
out
xchg
jb
out
sarb
cltd
in
cmp
test
sub
ds
dec
addb
pop
inc
or
adc
dec
repz
call
pop
ljmp
jl
inc
add
and
jns
dec
pop
shll
mov
ja,pn
call
cmp
sub
sub
fisubrs
addr16
lret
scas
test
mov
daa
pop
lcall
sbb
inc
sub
arpl
sub
out
mov
adc
test
dec
les
and
jo
test
movsl
aad
pusha
pop
sub
xchg
lcall
mov
and
in
ficoml
call
es
mov
out
rcrb
ja
sbb
in
mov
xchg
push
lock
dec
test
dec
les
and
les
and
imul
cmpb
rol
xor
mov
loop
cs
add
ret
adc
lea
push
test
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
dec
add
cmpsb
push
mov
cmp
sbb
xor
jl
dec
sub
pop
sub
test
push
add
add
call
jmp
pop
es
pop
mov
fstpl
es
pop
mov
ja
push
push
incl
pusha
push
inc
sub
xlat
jecxz
test
xor
shrl
into
outsb
inc
mov
pop
push
jecxz
sbb
xchg
ret
jno
xchg
test
mov
out
adc
jnp
gs
std
enter
clc
cwtl
mov
and
shr
mov
mov
sahf
xchg
in
repnz
gs
xchg
xchg
jmp
add
inc
nop
mov
repz
fidivrl
cmpsb
add
call
pushf
subl
ffreep
insb
aaa
jb
stos
pop
fs
cmp
movsb
add
xchg
push
inc
jmp
mov
lcall
loope
dec
adc
push
aam
or
insl
mov
sbb
jno
pop
inc
imul
mov
test
arpl
jnp
sahf
sub
out
jnp
cltd
mov
push
mov
mov
test
add
xlat
sti
dec
add
test
test
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
ret
scas
ds
and
jo
sbb
loop
call
vxorps
pushf
jge
push
add
and
push
loopne,pt
negl
dec
imulb
push
test
rcr
gs
sub
es
push
jg
xchg
outsb
jl
jno
in
mov
call
imul
dec
roll
pushf
stos
pop
pusha
lahf
test
lcall
push
lea
andl
add
call
mov
out
aam
mov
lea
push
xor
fistl
push
fisubrs
fwait
add
sub
imul
or
xchg
mov
cmc
lock
jne
mov
mov
inc
pop
jne
or
xorb
jg
xchg
lret
pushf
sub
aaa
rorl
or
stos
push
lds
jo
lret
pop
or
jl
cmp
loope
add
notl
subb
cmp
clc
in
notl
add
call
xchg
imul
xchg
dec
or
js
xor
xor
dec
mov
mov
pop
je
les
and
cli
je
pop
jmp
cli
mov
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
in
push
fucomi
add
dec
mov
test
fistpl
stos
jmp
xor
testl
fwait
mov
xor
aas
dec
je
loope
jo
lea
add
call
test
push
loop
repz
popf
cltd
loope
sub
sub
dec
pop
mov
clc
inc
cpuid
cmp
into
cli
xor
mov
add
jnp
sub
xor
dec
mov
stos
pop
pop
and
repnz
ret
dec
movl
pop
dec
stos
mov
dec
sbb
pop
stc
movsb
or
mov
rol
pop
pop
ja
sub
sbb
mov
and
movsl
dec
and
lret
mov
inc
xchg
pop
sti
fiaddl
add
call
daa
addr16
je
in
call
mov
jl
xorl
js
imul
std
mov
pop
test
aad
dec
ja
mov
jnp
and
lcall
pop
cwtl
movsl
mov
addr16
and
push
mov
in
popf
jne
test
fldcw
ret
and
mov
fadds
mov
aaa
sub
mov
fwait
jbe
dec
jecxz
add
test
aaa
cmpsb
sbb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
sub
mov
outsb
push
adc
fiaddl
stos
dec
xlat
xor
stc
dec
mov
and
decb
mull
pop
cmpsl
fidivl
pop
inc
jnp
lret
cltd
stc
push
xchg
in
leave
lret
imul
nop
fcmovne
rcl
mov
insl
stos
gs
fidivrs
dec
pop
jb
pushl
test
add
aas
mov
pop
cmpsb
push
cltd
sub
out
sbb
loope
inc
adc
dec
push
call
and
int
out
mov
xchg
inc
mov
cmp
sbb
icebp
out
stc
fwait
jg
or
jp
popa
pop
cmp
out
sbb
xor
movsb
inc
push
in
cmpsb
sub
mov
mov
fisttps
adc
clc
fwait
popl
mov
pop
pop
sarl
aam
pop
xor
xchg
gs
push
sti
mov
adc
mov
popa
pop
into
outsl
je
and
mov
aam
cli
sahf
push
push
aaa
xchg
jbe
dec
pop
push
cli
in
imul
in
mov
call
arpl
pushf
sub
dec
testb
sbb
ljmp
sub
sub
scas
pop
mov
sahf
push
jne
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sub
not
jge
insb
ljmp
insb
mov
movsb
dec
scas
mov
fidivrl
out
adc
fs
push
fbld
mov
dec
and
adc
cmp
mov
and
add
call
icebp
outsb
lods
mov
pop
add
push
push
aaa
and
adc
pop
cmp
add
push
stos
lods
dec
lcall
cmpsl
roll
add
push
dec
push
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
push
aam
rorb
mov
into
jge
lret
mov
outsb
js
adc
push
mov
fs
inc
jp
inc
ljmp
pusha
ror
clc
pop
inc
ljmp
les
idivl
enter
dec
negb
pop
loopne
add
call
mov
cmc
mov
adcb
mov
push
sarb
add
cli
mov
out
out
pop
inc
jge
push
cltd
mov
pop
divb
shrl
or
lock
mov
les
fildll
popf
mov
push
mov
insb
mov
test
cmp
mov
xor
je
les
stos
mov
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
add
call
inc
cmp
les
xlat
dec
lds
scas
hlt
and
cmp
out
std
rcrl
xchg
jbe
pop
push
stos
jmp
xor
testl
cmp
aad
push
pop
leave
mov
mov
add
fwait
mov
out
jns
xor
mov
stos
lcall
pop
pop
outsl
cmc
js
aam
nop
sti
mov
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
or
jae
leave
jp
add
call
lock
fcoms
clc
mov
inc
fistps
xor
push
into
bound
mov
loop
outsl
dec
outsb
fstps
cli
jg
xchg
lret
aaa
jnp
xor
cmp
mov
inc
jo
fs
mov
inc
aaa
mov
std
mov
pop
test
aad
dec
int
dec
ret
bound
lret
cli
stos
iret
xor
movsl
shlb
loop
lret
jecxz
push
cli
mov
leave
inc
lahf
xor
jne
cltd
fwait
das
mov
fnsave
call
xor
xlat
push
pop
je
les
and
movsl
lea
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
fstpt
int
idivl
out
jnp
aas
cltd
or
call
fsubrs
stos
insl
add
aas
scas
pop
test
sub
mov
stos
mov
jb
fs
dec
xchg
mov
push
imul
fs
cwtl
jl
popl
and
aam
fs
sub
call
cmpsl
je
test
popa
gs
mov
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
mov
sub
shlb
jbe
jg
aad
mov
jbe
pushf
pop
fimuls
xchg
call
pop
fs
and
aaa
or
jno
js
pop
shrb
push
xor
push
cs
cli
lret
test
js
int
xor
lea
add
add
call
pushf
testl
jmp
int
dec
ret
stos
mov
push
and
roll
arpl
xor
dec
push
and
insl
push
inc
mov
aam
in
dec
mov
mov
push
sub
or
cltd
lods
dec
or
adc
add
sbbl
mov
test
stos
mov
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
hlt
inc
fidivs
out
jge
not
roll
add
call
gs
dec
cmpsb
aaa
cld
je
stos
xchg
das
xchg
iret
inc
push
std
gs
popa
push
mov
push
xchg
dec
cwtl
adc
aam
add
sub
std
aaa
and
btcl
loope
ret
das
outsl
add
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
pop
xor
jg
sbb
out
xchg
movsl
add
jmp
add
call
sub
pop
xor
xchg
pop
fidivrl
test
insl
ds
popa
and
lcall
sbb
ror
dec
mov
rorl
mov
pop
cmpsl
test
inc
xor
aaa
jmp
jo
mov
and
es
pop
jecxz
pop
daa
pusha
mov
rclb
cs
icebp
mov
int3
popf
push
xchg
fcomps
mov
cmpb
cmp
push
rolb
sbbb
jno
add
fisubl
scas
jp
cld
lahf
jmp
xchg
out
cmpsl
rcrl
add
call
stc
loope
mov
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
movsb
icebp
sbb
loope
fldt
pop
stos
outsl
stos
push
xorl
inc
push
scas
in
adc
lock
gs
fcmovbe
fsubr
jle
cmpl
push
and
sbb
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
add
call
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
test
mov
scas
popw
xchg
js
dec
bound
jne
mov
fistpl
adc
fwait
jg
or
jp
and
xor
je
stc
insl
ds
popa
and
lcall
pop
lods
shl
and
movsl
cs
jns
enter
dec
xchg
adc
int3
psubsw
fidivrs
cs
mov
mov
xor
fcmovnbe
and
es
sbb
add
call
push
test
test
inc
mov
pop
sub
es
adc
jp
pop
outsl
test
mov
insl
push
inc
mov
push
or
dec
cmpsb
and
mov
popa
jnp
scas
sub
hlt
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmc
dec
cmp
dec
ret
add
call
mov
stos
ret
fidivrs
adc
jns
scas
int3
push
jle
xlat
pop
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
push
les
shll
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
test
scas
fdivp
stc
fwait
jg
or
jp
and
xor
add
call
je
stc
or
push
arpl
mov
jg
xchg
lret
aaa
jnp
xor
mov
in
aaa
mov
loop
lahf
ja
add
arpl
addb
in
aad
std
mov
pop
test
aad
xlat
push
push
sarb
dec
mov
inc
std
popf
cmp
mov
push
cmp
xorb
je
mov
cmpb
cmp
push
rolb
sbbb
test
mov
rorb
gs
push
daa
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sarb
fidivrs
dec
test
sbb
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
add
call
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
or
iret
fs
fadds
push
popa
cmc
sub
out
sub
loopne
xor
ret
std
cmp
and
or
ja
mov
adc
loop
cmpl
loopne
xchg
gs
ret
dec
jbe
mov
mov
loope
jp
imulb
icebp
jmp
int
add
call
ret
cmp
icebp
loop
orl
or
pop
sbb
shl
punpcklbw
daa
adc
jp
push
adc
loope
push
lds
sarb
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
or
fstl
mov
cli
or
in
int3
lock
insl
stos
stos
shlb
jecxz
lods
add
call
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
inc
outsl
pop
cli
or
xor
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
or
iret
fs
fcomp
jns
xor
test
mov
and
fimuls
sub
xorb
call
cmpsl
popf
jg
shr
mov
cmp
cmpsl
in
fdivrl
cmc
fldenv
dec
adc
loop
cmpl
xchg
lods
xchg
sti
push
jmp
sbb
push
arpl
fstl
cltd
dec
int
or
or
cli
out
inc
jne
loopne
sti
sti
mov
adc
daa
pop
xor
insb
inc
xchg
mov
inc
scas
push
ss
aad
mov
sti
dec
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
fidivl
test
nop
repnz
lret
adc
imull
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
xchg
imul
pushf
imul
adc
pusha
xor
sbb
sub
mov
fcomp
mov
rcr
fstpt
fcomp
mov
xor
divb
loope
jno
stos
fistpll
push
push
call
jmp
and
cmp
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
inc
mov
cwtl
fimull
inc
add
mov
jl
cmp
and
nop
outsb
sub
pop
repz
cs
in
xchg
adc
loopne
leave
aaa
stc
adc
lea
scas
pop
sti
push
push
pop
adc
mov
sahf
rolb
and
or
mov
in
add
inc
in
shll
rorl
call
in
test
cmp
or
int
jmp
sti
scas
sub
hlt
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xchg
iret
mov
xor
or
rcr
sahf
mov
stos
shlb
jecxz
lods
sahf
gs
lea
inc
push
loopne,pn
stos
or
mov
mov
push
clc
pop
and
rolb
add
call
and
sbb
iret
adc
sbb
adc
sbb
adc
sbb
adc
mov
pop
popf
notb
in
adc
pop
and
sub
push
adc
arpl
adc
add
jmp
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
cmpl
icebp
out
xchg
pop
fidivrl
test
push
xor
mov
adc
es
sbb
ror
dec
mov
call
cltd
push
xor
push
bound
loope
lea
negb
pop
loopne
xor
inc
mov
inc
into
xchg
int3
fisubrs
fdivs
rclb
sub
leave
scas
and
adc
adc
dec
int
dec
ret
out
out
shll
stos
jge
or
dec
mov
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pop
jbe
arpl
add
call
fdivl
or
dec
scas
mov
sbb
inc
outsl
pop
cli
or
push
iret
sub
cs
into
jge
lret
jmp
sbb
sbb
and
push
scas
inc
ret
xor
push
andb
mov
jbe
sbb
movsb
mov
xchg
jbe
sbb
movsb
mov
xchg
jbe
sbb
movsb
mov
mov
mov
aas
lods
mov
cmc
cwtl
aas
xchg
sub
inc
ljmp
sbb
adc
iret
jnp
aam
fldenv
fbld
mov
call
jmp
and
push
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
movsl
and
js
sub
adc
xor
pop
js
lods
pop
jg
es
sbb
ror
dec
mov
aam
inc
icebp
in
adc
adc
je
mov
inc
sbb
outsb
aam
stos
cmp
fistpll
dec
xor
mov
addb
in
aad
push
xor
stos
pop
stc
and
testl
xor
scas
fdivrl
jg
mov
adc
dec
pop
filds
add
call
aas
les
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
nop
aaa
roll
mov
cld
rclb
dec
lock
lcall
sub
cltd
stc
gs
dec
mov
push
shll
mov
cmc
cwtl
aas
xchg
push
xor
mov
and
add
push
mov
cmc
incl
shlb
stc
in
cmpsl
leave
adc
in
cmpsl
leave
adc
in
cmpsl
leave
add
call
inc
cmp
stc
in
cmpsl
leave
adc
sub
mov
shlb
adc
sub
lock
call
cmp
xor
mov
mov
shrd
pop
fistpll
lock
or
jmp
and
cmp
stos
shlb
jecxz
lods
test
jns
and
pop
jle
fldl
cmp
and
pop
cmp
out
ds
popa
and
lcall
sbb
std
mov
and
in
adc
int
add
call
sub
movsb
or
and
fs
mov
cmp
arpl
pop
sbb
push
arpl
fldl
mov
xorb
test
mov
shl
jbe
jns
inc
shll
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
int
push
mov
xchg
js
ljmp
xor
ja
mov
cmp
ret
call
out
xor
mov
and
int
pop
jg
ffreep
popa
pop
cmp
out
inc
sbb
push
sbb
pop
test
xor
sbb
xor
loop
mov
out
dec
xor
sbb
xor
mov
outsb
into
pop
and
outsl
inc
jge
and
mov
mov
inc
sti
ja
mov
and
cmp
jmp
dec
out
inc
call
ja
or
aaa
cmpsb
sub
push
adc
arpl
jmp
and
add
call
jmp
jae
xchg
jecxz
lods
inc
mov
cwtl
fwait
jg
or
jp
and
xor
je
stc
insl
ds
popa
and
lcall
jae
out
sub
mov
push
lret
xchg
sbb
mov
sub
movsb
or
jecxz
aas
sub
lods
xor
aaa
imul
adc
mov
sahf
rolb
and
repz
inc
insl
push
sahf
push
jne
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cld
lock
push
sar
in
ja
jne
xor
pusha
adc
mov
sbb
jbe
ficompl
dec
mov
out
xor
push
andb
pop
jg
ffreep
popa
pop
cmp
out
int
dec
mov
push
inc
loope
jo
sbb
scas
es
cs
fwait
in
lods
cli
mov
jle
xor
addr16
or
lret
jo
ss
fcoms
ss
fcoms
ss
fcoms
fistpl
je
push
call
push
jne
mov
cmpl
lret
rorl
and
mov
push
push
jmp
cmc
xor
mov
mov
push
jns
insl
cmpsb
sub
push
adc
arpl
jmp
and
cmp
stos
shlb
jecxz
lods
js
push
mov
imul
mov
pusha
scas
and
xor
je
stc
aam
xor
cmc
push
nop
ljmp
out
imul
cli
cld
js
into
jbe
and
jns
enter
dec
enter
add
call
push
lods
jmp
xor
jnp
mov
add
push
jecxz
into
xchg
int3
fisubrs
fldenv
push
xor
stos
addr16
test
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sbb
gs
xchg
add
lret
pop
mov
ficompl
dec
mov
out
stc
fwait
jg
or
jp
and
inc
pop
jg
ffreep
int3
inc
sbb
push
loope
jo
sbb
scas
es
repz
dec
pop
dec
das
test
mov
cmp
call
or
pop
icebp
and
mov
xor
rclb
inc
pusha
add
lods
cwtl
stos
mov
sub
xchg
fwait
scas
mov
aaa
xchg
jbe
sbb
pop
bound
test
dec
dec
or
insl
ficomps
out
lods
ret
cmp
adc
xor
mov
es
test
mov
inc
sti
ja
shll
mov
pop
sbb
insl
cmpsb
sub
push
adc
arpl
jmp
and
cmp
test
jns
and
add
call
pop
pop
cmp
fs
xchg
and
call
and
xor
je
stc
aam
xor
cmc
push
nop
ljmp
out
imul
cli
mov
aaa
jnp
xor
push
or
jge
add
enter
pushw
lods
jmp
movl
inc
jl
pop
sbb
xchg
push
pop
shll
pop
arpl
cmp
cmpsl
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
out
or
sub
add
call
ds
jg
or
jp
aaa
pushf
sti
inc
lret
mov
ljmp
outsb
jbe
outsb
push
ret
scas
stos
int
daa
pop
sub
mov
hlt
mov
loopne
adc
push
fwait
jbe
adc
repnz
imul
cli
adc
inc
out
scas
sbb
push
popa
rcrb
imul
push
stos
xor
sub
adc
loopne
push
adc
loopne
cmpsl
shlb
ret
mov
sub
js
push
and
aaa
inc
push
or
push
gs
jo
popa
xor
add
call
jmp
lcall
xchg
sbb
jb
cld
xor
push
daa
and
jmp
dec
adc
jle
es
test
xchg
scas
inc
lret
out
stos
shlb
jecxz
lods
inc
mov
cwtl
fisubrl
enter
imull
add
daa
xlat
push
loope
cmpl
aam
xor
cmc
push
nop
ljmp
out
into
mov
out
in
jmp
push
push
or
jge
add
in
xchg
adc
dec
clc
es
push
pop
add
call
gs
push
jecxz
lock
add
fistpll
cmp
outsl
pop
out
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xchg
jp
test
pop
cmp
lret
mov
rol
pop
pop
ja
pushf
sti
inc
lret
mov
ljmp
adc
rcll
in
add
mov
sarl
ret
cmp
pop
mov
inc
push
ss
mov
popa
rcrb
imul
push
xchg
mov
push
stc
jmp
mov
loope
dec
mov
call
xchg
jp
loope
dec
mov
loope
dec
mov
loope
and
rdtsc
divb
movsb
sbb
leave
xchg
hlt
adcb
xchg
data16
fdivrp
pop
and
xchg
js
cwtl
sbbl
iret
cltd
sbb
xor
mov
cld
or
cli
cmp
mov
mov
fsub
mov
adc
gs
call
ja
or
aaa
jecxz
push
stos
xchg
mov
xchg
jecxz
lods
mov
fistpl
adc
enter
imull
call
mov
xlat
push
loope
cmpl
aam
xor
cmc
push
nop
pop
jg
es
sbb
nop
shr
mov
popa
rcrb
imul
cmp
dec
fwait
clc
jb
adc
aaa
xchg
es
sarb
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
mov
shl
xchg
jo
push
loopne
or
lock
inc
add
mov
jl
jle
mov
and
stos
fmull
cli
ljmp
call
jae
out
add
lods
cwtl
stos
mov
scas
sbb
push
jns
test
adcb
lcall
and
adc
mov
leave
or
dec
adcb
or
dec
xorb
jmp
adc
pop
push
or
or
dec
orb
iret
push
dec
sbb
ljmp
fcoms
stos
mov
imul
sub
mov
mov
mov
push
test
xchg
adc
and
aam
add
call
movsb
push
rorb
add
es
xor
pop
shlb
sub
xor
imul
fistpll
lock
shll
sub
inc
add
adc
enter
imull
pop
jg
ffreep
loope
cmpl
sub
ret
scas
stos
int
test
mov
cmp
adc
repnz
inc
out
scas
sbb
push
je
popf
cmp
adc
cmp
mov
cmp
cmpsl
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cwtl
mov
mov
pop
xor
out
dec
xchg
pop
outsb
jbe
fmull
cli
pop
adc
addr16
into
mov
out
in
jmp
push
pushf
inc
aaa
adcb
adc
enter
pushw
lods
jmp
add
mov
in
fstps
inc
adc
push
mov
adc
add
fdivl
mov
inc
jmp
or
jmp
add
call
mov
sbbl
cli
clc
mov
xchg
xchg
xor
and
pop
sbb
and
xchg
mov
inc
xor
loopne
mov
jnp
jbe
push
out
cwtl
add
push
dec
inc
mov
test
enter
insb
sti
adc
in
xlat
loope
inc
jle
sti
xor
or
pop
adc
xchg
scas
inc
lret
out
stos
shlb
jecxz
lods
mov
mov
sub
cltd
stc
gs
dec
mov
loop
imul
dec
add
daa
xlat
push
and
add
call
xor
je
stc
insl
ds
popa
and
lcall
es
pop
lret
cli
jg
xchg
lret
dec
popa
rcrb
xchg
push
xchg
xchg
and
fisubrs
xchg
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pop
mov
or
lods
mov
mov
jo
ficompl
xchg
jmp
and
lcall
jae
out
into
mov
out
iret
aaa
jnp
xor
push
or
jge
add
mov
xchg
aam
mov
push
add
add
call
mov
cmp
xchg
push
mov
in
pop
push
mov
cmp
jp
jecxz
into
xchg
int3
fisubrs
add
sti
jmp
pop
inc
sub
stos
leave
repz
or
dec
jg
xchg
lods
insb
cmc
mov
ror
mov
test
ja
mov
xchg
mov
jmp
push
sub
outsl
dec
lods
mov
adc
pop
ja
dec
adc
pop
inc
cmp
lret
add
movsl
pop
aam
pushf
cmp
inc
test
add
call
pop
fnstcw
mov
insb
fincstp
lret
cld
scas
add
mov
mov
xchg
jecxz
lods
mov
mov
sub
cwtl
outsb
lods
addr16
js
mov
int
pop
jg
ffreep
and
xor
je
stc
jo
xor
pop
js
lods
daa
pop
sub
mov
hlt
mov
lds
aaa
jo
sub
mov
test
pop
loope
adc
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
inc
and
push
cmpsl
mov
cmpsl
xor
mov
add
call
push
stos
loope
mov
jg
movsl
sbb
imul
shr
mov
mov
aaa
jnp
xor
idivl
enter
dec
enter
pushw
lods
jmp
stc
adc
xor
inc
jl
pop
sbb
ljmp
pop
sbb
push
arpl
fucomp
stos
pop
test
shll
ret
pop
int3
rcrl
test
mov
int3
repz
adc
xchg
cmc
adc
das
cli
andl
sbb
jbe,pt
xchg
dec
lods
fdivs
call
popa
loop
mov
fsubl
repnz
xor
cmpsl
xchg
pop
cmpl
mov
xchg
subps
scas
cmp
pop
sahf
ja
pop
lds
adc
mov
jbe
addr16
insl
lret
stos
test
inc
out
lret
in
jnp
ret
ds
repz
xor
mov
jmp
jae
xchg
jecxz
lods
xchg
jnp
push
iret
sub
pop
cltd
stc
gs
dec
mov
loop
imul
inc
pop
jg
ffreep
and
xor
je
stc
or
pop
add
call
fs
daa
pop
sub
mov
hlt
mov
cli
lret
adc
sbb
leave
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
or
sub
leave
push
push
aas
xchg
xchg
fiaddl
cli
xchg
push
cltd
leave
subb
int3
test
lds
push
dec
aaa
stos
or
out
dec
enter
pushw
lods
jmp
orl
scas
pop
sti
push
push
sbb
inc
into
xchg
int3
fisubrs
rcr
aas
mov
loope
jp
add
cmp
and
add
call
or
es
lock
or
pop
sbb
inc
mov
and
mov
cmp
jge
xlat
inc
nop
mov
sbb
adcb
pusha
and
mov
insl
out
sbb
mov
or
xorl
movsb
mov
sbb
sarb
mov
nop
jae
add
mov
adc
mov
test
sti
adc
jno
pushf
lds
outsb
inc
push
jb
add
push
adc
lret
test
call
add
mov
mov
xchg
jecxz
lods
stos
shlb
jecxz
lods
xchg
jnp
push
iret
sub
stos
push
movsb
and
shlb
loop
imul
inc
pop
jg
ffreep
es
lock
loop
cltd
pusha
or
pop
test
push
mov
ds
cltd
fstpt
push
ret
loop
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jle
lea
adc
dec
mov
and
int
xchg
dec
xchg
cmp
pop
sbb
mov
inc
aaa
adcb
add
call
andb
jmp
orl
fisubl
ret
ret
pop
sbb
push
arpl
fstpl
inc
and
and
sub
sub
or
cmp
dec
rclb
mov
fldl
sarb
push
mov
dec
repnz
daa
mov
stos
out
add
push
shll
bound
lock
test
jb
and
icebp
pop
add
pop
scas
mov
mov
sahf
jnp
orl
aam
pop
jno
les
data16
cwtl
mov
add
call
movsl
dec
jle
fistps
int
sub
test
lods
shrl
push
jg
fisubs
movl
xchg
mov
dec
xor
aas
lret
ss
sbb
or
inc
and
xchg
pop
test
add
cwtl
repz
xor
mov
jmp
jae
xchg
jecxz
lods
test
jns
and
pop
dec
add
and
cmp
movsb
push
mov
imul
inc
pop
jg
ffreep
outsl
cmp
addb
mov
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
add
xchg
icebp
outsb
fistpll
mov
mov
xor
sbb
in
xchg
adc
loopne
leave
aaa
stc
adc
loopne
xchg
gs
ret
pop
sbb
push
arpl
fnstsw
loope
jp
push
out
xchg
dec
rclb
mov
hlt
mov
jno
mov
mov
test
insl
jge
insl
ds
pop
test
inc
movsb
lock
mov
adc
call
mov
in
arpl
and
jno
sbb
jo
jle
and
movsb
sbb
daa
out
or
ljmp
enter
and
sbb
inc
pop
pushf
fwait
out
adc
push
pop
mov
shll
push
dec
xor
ret
adc
push
or
cmp
push
jmp
stos
test
addb
aas
aaa
or
cmpsb
inc
jae
or
dec
mov
test
lret
test
mov
mov
xchg
jecxz
lods
add
call
shlb
jecxz
lods
mov
inc
outsl
pop
cli
or
test
outsl
jno
pop
movsb
push
mov
mov
pusha
int3
mov
mov
imul
outsb
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sub
mov
mov
test
pushf
pop
adc
cmc
xchg
orl
inc
lock
xchg
dec
clc
es
push
pop
insl
gs
popl
mov
lret
ja
fnstsw
loope
jp
xchg
call
mov
out
jmp
int
dec
ret
hlt
and
aas
mov
sahf
dec
call
push
pop
mov
dec
out
sbb
cmc
das
mov
jbe
je
lods
mov
sbb
sbb
leave
and
negl
shl
je
or
movsl
ljmp
xchg
pop
add
cmpsb
sub
ds
in
mov
btr
jnp
jnp
pop
pushf
fwait
out
adc
cli
roll
pop
orb
sbb
idivb
jno
or
sti
jno
mov
sub
call
pop
lods
cltd
ret
mov
inc
cmp
shlb
adc
fisubl
pushf
hlt
mov
test
xchg
pop
test
adcb
call
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
inc
outsl
pop
cli
or
pop
sub
mov
movsb
cmp
or
ss
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
adc
aad
dec
out
je
dec
icebp
add
call
add
adc
and
nop
insb
adc
iret
jb
push
es
enter
shlb
fs
mov
inc
aaa
mov
jo
xchg
xor
sub
mov
out
jmp
int
dec
ret
test
cmp
or
movsl
lods
aas
cmp
lods
push
push
jb
fcoms
dec
mov
xlat
repz
jl
dec
fsubrs
inc
jl,pn
sub
fiadds
add
loopne
loope
rcr
call
jno
outsb
pop
xlat
xchg
jno
outsb
pop
xlat
fisubl
call
pop
add
add
pop
fldenv
jbe
add
divb
popa
cwtl
lods
dec
das
pusha
push
mov
je
add
enter
xchg
loope
inc
outsb
xorl
lahf
push
cs
dec
arpl
out
xchg
aad
and
mov
inc
add
addr16
push
jnp
leave
outsb
or
push
adc
jge
gs
or
inc
mov
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
orb
add
call
inc
mov
mov
xchg
inc
mov
ret
jns
pushf
xlat
ret
jbe
test
adcl
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
dec
pop
push
xchg
mov
and
push
and
add
sbb
mov
lret
stc
fstps
ljmp
fs
mov
or
in
and
testl
jmp
int
dec
ret
bound
lret
cli
es
adc
jp
pop
shlb
loop
mov
sub
pop
sub
call
mov
add
test
jbe
mov
xor
mov
aam
loop
sbb
mov
ss
shrb
or
mov
jo
mov
sbb
repnz
or
insl
das
cld
loopne
jl
dec
shll
test
mov
fwait
in
sub
ficoms
repnz
cld
ret
popf
insl
or
pop
js
jnp
mov
pop
push
jge
js
cmpsl
push
or
lods
mov
push
cmpsl
mov
fnstcw
in
mov
call
dec
mov
fcomps
sar
sub
sbbb
sbb
fwait
xor
imul
or
adc
push
jmp
adc
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
push
aam
rorb
sub
and
or
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
mov
lods
insl
lea
xchg
push
pop
pop
inc
hlt
jmp
leave
lahf
sahf
cmpsb
xor
lcall
add
call
lock
push
pop
sub
jl
jecxz
pop
daa
pusha
mov
subl
es
adc
jp
pop
shlb
loop
pop
jnp
out
dec
inc
clc
inc
int3
test
jmp
mov
xchg
push
test
jbe
add
inc
pusha
in
imulb
lea
ja
pop
into
sbbl
in
xchg
les
cmp
imul
ret
je
inc
les
and
push
sub
add
call
lods
cld
addr16
and
dec
mov
and
sti
xchg
dec
pop
mov
orl
cmp
inc
imul
dec
out
cltd
push
cmpsl
mov
fnstcw
in
rorb
push
add
rclb
adc
cmp
aas
mov
jo
jb
add
ret
ds
repz
xor
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
sbb
sbb
sahf
nop
rcrl
mov
call
call
into
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmp
sti
insb
int
fcoms
ret
leave
mov
push
sub
jl
or
std
add
cmp
sub
xchg
xor
sub
jne
mov
or
out
sti
mov
adc
mov
popa
pop
into
outsl
je
mov
rolb
loop
adc
jno
add
loope
cld
and
adc
mov
sets
mov
fwait
add
inc
pusha
in
testb
cltd
popf
ljmp
xchg
jo
and
add
call
or
add
shrb
or
mov
imul
ja
xchg
roll
mov
pop
mov
xor
mov
xchg
push
and
pop
sub
rorb
fstl
call
hlt
loope
mov
insb
or
mov
or
push
pusha
sbb
jge
inc
imul
sbb
dec
push
cmpsl
mov
fnstcw
in
xchg
jnp
or
pop
into
in
ds
push
stos
loopne
lahf
das
jmp
outsb
cmp
jb
jbe
xchg
insl
push
add
call
jne
jge
gs
or
inc
mov
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
dec
xorl
mov
fs
xor
gs
push
daa
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
aad
push
add
movsl
mov
sub
ljmp
cld
sub
pop
mov
shl
ss
or
and
es
mov
pop
push
aaa
mov
inc
sbb
pop
movb
call
xor
dec
push
and
jno
add
dec
push
aas
outsl
adc
pop
data16
roll
jbe
in
add
inc
pusha
in
testb
cltd
popf
ljmp
pushf
jecxz
inc
inc
xor
fidivrl
fldl
push
shrb
or
mov
rcrl
mov
mov
push
mov
frstor
cwtl
jge
stos
fbld
dec
fsts
inc
shrb
adc
adc
sub
inc
insl
lea
jo
push
idivb
pop
add
and
mov
and
call
js
iret
pop
mov
and
inc
imul
loope
or
jne
bound
pop
sbb
inc
pop
stos
adc
inc
dec
fwait
mov
clc
mov
dec
xor
fwait
xor
aad
mov
sub
push
stos
xchg
mov
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
or
adc
pop
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
aad
push
add
add
call
movsl
mov
dec
movsb
jnp
out
aaa
jle
adc
pop
and
cmp
imul
pushf
and
mov
or
out
cmp
outsl
sbb
mov
push
sti
ret
out
cmp
push
pop
fistpll
lcall
in
pop
leave
cmpsl
sbb
push
sbb
cmp
push
shr
mov
mov
pushf
add
test
mov
sub
and
fidivl
arpl
or
scas
dec
cmp
xrelease
and
xor
mov
std
dec
pop
leave
mov
call
xor
pop
subb
mov
xor
or
xor
test
les
mov
or
loop
push
mov
int3
popf
mov
cmpsl
call
dec
adc
xchg
push
add
mov
jns
aas
xchg
insb
xchg
jl
fldcw
jg
mov
jmp
and
mov
jecxz
maxps
out
xor
mov
mov
add
mov
cmpsl
xlat
or
mov
sbb
xchg
jmp
shlb
jecxz
lods
add
call
shlb
jecxz
lods
stos
shlb
jecxz
lods
xor
lea
es
sarb
aad
mov
adc
push
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmp
repnz
ror
or
jnp
cmp
call
push
popa
or
sub
jge
dec
imul
test
adc
adc
insl
loopne
jle
xorb
fsub
mov
and
fdivrl
dec
ficomps
add
call
cmp
les
adc
jno
arpl
add
movsl
push
sbb
adc
jbe
or
inc
xor
dec
dec
mov
xchg
jo
das
mov
sub
inc
in
mov
sub
xchg
inc
movsl
repnz
pop
movsb
imul
test
aad
test
cmp
push
push
mov
xchg
pop
pop
push
and
ljmp
or
or
mov
pop
out
fistps
sub
sub
dec
ljmp
fldcw
add
call
jmp
shr
pop
sbb
sub
xchg
insl
sahf
mov
sbb
xorb
dec
push
call
adc
outsb
ja
movsb
xchg
aaa
mov
jmp
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
adc
or
dec
sbb
ret
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmp
mov
mov
movsl
pop
testb
xchg
xlat
xchg
push
daa
add
add
lahf
xor
push
mov
adc
add
call
cmp
lods
loope
sahf
pop
and
adc
shrl
inc
cmp
cmc
push
inc
adcl
lret
mov
das
das
or
enter
roll
sub
into
inc
xor
fidivrl
fxrstor
scas
fs
ljmp
add
movsl
jns
adc
fdiv
cmp
pop
and
or
mov
mov
cltd
adc
or
dec
popl
pop
push
push
sbb
push
and
mov
call
push
pop
mov
notb
inc
xchg
les
add
add
scas
mov
adc
aam
out
rol
iret
push
popa
jg
scas
sub
dec
pop
fsubs
test
int
jmp
shr
pop
subl
and
fs
and
adc
insl
xchg
ds
xchg
gs
mov
mov
cs
test
xor
call
xchg
jecxz
lods
lea
dec
lods
lock
push
adc
rclb
call
loope
adc
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
inc
fisttpl
mov
mov
movsl
and
inc
or
je
and
shl
mov
sbb
or
xchg
mov
mov
dec
adc
push
adc
insl
loopne
jle
pop
ret
push
mov
in
xchg
insl
ds
test
arpl
pop
cmpl
sbb
inc
add
stos
xchg
sub
fists
mov
pop
ljmp
add
movsl
jns
add
call
adc
cltd
scas
ret
popf
enter
mov
jge
insl
stos
gs
hlt
adc
xlat
call
cmpsb
rcrb
cltd
lock
mov
gs
test
cs
insb
clc
js
and
loope
xor
jmp
push
insb
shlb
mov
mov
leave
xchg
fnstcw
popf
sbb
scas
pushf
into
lea
adc
mov
mov
add
push
mov
faddp
mov
out
add
call
outsb
sahf
mov
xchg
pop
inc
stos
popa
push
mov
xor
fwait
xor
sbb
mov
jecxz
push
stos
xchg
mov
xchg
jecxz
lods
fnstsw
adc
popf
mov
insb
pop
aas
les
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmp
repnz
ror
fiadds
ljmp
push
popa
fmuls
pop
test
hlt
sti
and
lea
int3
jle
push
dec
adc
in
notl
call
push
mov
dec
sub
dec
testb
gs
jnp
cs
add
ss
movb
in
xor
cmp
lahf
and
jl
add
test
dec
hlt
cltd
scas
ret
popf
enter
adc
add
dec
add
pop
out
mov
pop
aas
test
jae
inc
add
push
psraw
fnstenv
out
cmp
push
sub
adc
push
pop
lcall
sub
mov
inc
xlat
cli
stc
out
lahf
out
mov
unpcklps
add
call
jb
aad
mov
mov
add
mov
cwtl
lcall
cmp
dec
cmpsb
and
add
shrl
inc
aaa
ret
cmpsl
iret
jg
add
mov
lcall
dec
push
push
out
sub
adc
aas
push
mov
or
mov
mov
fldt
jecxz
lods
add
cltd
in
rcr
movsl
sti
pop
xor
addr16
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
or
out
and
adc
adc
shll
stos
sbb
pop
push
cs
fistpll
mov
sub
in
add
test
mov
roll
mov
lret
adcl
xchg
nop
leave
mov
lahf
jns
mov
clc
sahf
call
lods
mov
outsl
scas
iret
ss
roll
sbb
and
jge
dec
ds
lret
mov
call
js
enter
or
arpl
mov
add
call
xor
fnstsw
enter
test
or
cmpsb
jne
aas
xor
roll
dec
fldenv
daa
xchg
pop
jne
cmpsb
adc
push
xchg
pushf
xor
jle
xor
dec
mov
clc
xchg
int3
mov
or
xchg
jne
insl
and
imul
sbb
jmp
int3
pop
xchg
inc
push
mov
adc
xchg
xor
push
adc
adc
push
jno
jno
ljmp
call
arpl
int
add
call
push
ret
ds
repz
xor
int3
mov
loope
or
inc
pop
insb
mov
inc
jns
add
iret
je
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
aad
push
add
movsl
mov
push
mov
jmp
adc
pop
and
dec
push
or
cwtl
sub
daa
fcomi
inc
push
and
pop
pop
fiaddl
lret
or
das
or
cmp
sarb
xchg
cld
cmpsl
add
data16
add
call
pusha
sbbl
xchg
mov
xchg
adc
pop
add
shll
push
xchg
and
in
or
mov
dec
data16
cmp
jbe
inc
or
es
js
in
xor
cs
mov
and
filds
jmp
pop
dec
and
sub
cmpsl
mov
test
lahf
pushf
fsubl
in
add
pop
pop
xchg
pushf
shll
insb
mov
repnz
sub
mov
mov
incb
add
call
cmp
pop
mov
xchg
pop
push
push
jmp
jae
push
and
dec
jge
inc
shl
divl
fnstenv
pop
push
pop
lods
cli
jns
sub
jb
jbe
xchg
insl
push
adc
ja
movsb
xchg
aaa
incl
jne
and
mov
js
ficoml
inc
dec
or
xor
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
std
imul
daa
mov
mov
add
call
jo
outsb
cmpsb
add
push
mov
das
mov
sub
ja
push
xchg
mov
xchg
adc
in
ss
xchg
adc
mov
pop
cmpsb
add
push
ret
or
and
lahf
sub
sub
fmul
fildll
cpuid
xor
popa
dec
in
in
mov
mov
fistpll
fsub
sbb
mov
cmpsb
insl
ds
gs
jp
mov
out
mov
jge
push
inc
jo
add
jmp
call
cmpsb
and
cmp
nop
jne
sub
je
push
fdivrs
jp
out
test
aam
mov
adc
scas
fnsave
ds
jno
das
sub
test
adc
push
sbb
imul
lock
outsb
xlat
push
sub
and
push
mov
test
in
mov
xor
sbb
ja
shrl
inc
gs
mov
in
cmp
scas
cld
movsl
jge
gs
or
fldt
sbb
cmp
sbb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
push
stos
push
xor
fwait
mov
scas
ss
xchg
ljmp
stos
xor
int3
pop
inc
dec
adc
inc
shl
int3
jmp
loope
lret
adcl
sbbl
stc
fucom
sbb
xor
stos
cmp
aaa
outsl
xor
pop
adc
fldl
es
xchg
sbb
mov
jecxz
shrb
call
outsb
into
gs
orl
push
dec
sbb
or
fstpl
arpl
fwait
das
inc
loop
out
or
pop
iret
in
mov
cs
shlb
inc
push
dec
jecxz
push
daa
into
loope
inc
mov
jle
jno
popf
fstl
xor
cmp
pop
or
cmp
adc
push
cmc
sbb
push
jae
mov
dec
mov
push
push
cmp
dec
cli
test
inc
sbb
pop
repz
jecxz,pn
inc
lods
push
lret
shr
or
add
call
call
xor
clc
inc
gs
arpl
outsb
sahf
mov
inc
sbb
push
bound
dec
xor
fwait
xor
jbe
out
stc
push
sarb
pop
icebp
fdivr
fcmovne
fistpl
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
inc
xchg
loope
jo
fimull
popa
repz
xor
xchg
popa
cmp
je
inc
mov
in
sub
push
inc
call
push
push
cmp
call
lods
adc
dec
movsl
dec
cmp
sarb
jmp
mov
imul
fistl
out
mov
test
xor
push
lcall
xchg
lea
jp
adcl
adc
outsl
cmpsl
sti
inc
or
aas
xchg
insb
jmp
loop
mov
jge
add
js
int
mov
inc
es
pop
sbb
ds
sub
iret
ljmp
dec
daa
mov
mov
out
mov
sub
mov
add
call
adc
std
clc
insb
xchg
xchg
pop
pop
mov
xchg
sub
jmp
or
lahf
add
sbb
inc
scas
xor
scas
int3
cwtl
inc
xor
repz
rcl
add
je
add
in
or
adc
cs
mov
fsts
push
mov
xor
fwait
xor
in
fisubrs
fwait
jp
loop
insb
cmp
fucomip
sbb
push
into
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
mov
lahf
cld
xor
addr16
jmp
xchg
test
dec
cmc
out
add
test
mov
add
push
insl
fldt
inc
loop
in
insb
repz
cmp
testb
mov
xchg
lahf
scas
dec
clc
cmc
dec
popf
insb
dec
stc
adc
test
sub
cmpb
cmp
ffree
xchg
mov
sub
push
jns
mov
sbb
and
and
and
call
push
cld
std
into
mov
and
es
in
inc
imulb
xlat
std
ret
bound
std
cmp
lret
jmp
das
push
movsb
pushf
or
or
xchg
mov
iret
ds
sbb
xor
nop
aad
pop
punpckhdq
fwait
cld
add
nop
pop
cmp
sbbb
bound
out
addr16
mov
cmpsl
lods
frstor
jno
cmp
ret
outsl
push
xor
call
in
xchg
shl
aad
xlat
test
inc
add
mov
lcall
mov
add
call
icebp
adc
sub
je
cmp
lds
pop
stos
daa
sti
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
clc
aam
jg
stos
xor
mov
mov
jge
add
clc
jg
pop
mov
jbe
cmp
push
nop
jecxz
dec
pop
add
sbb
sbb
jecxz
cmp
pop
xchg
xchg
les
cmpsb
pushf
dec
mov
call
add
or
mov
mov
loop
push
fwait
adc
sbb
ret
das
loope
xchg
cmpsl
cmp
inc
inc
ljmp
out
and
fcmovnu
in
movsl
jmp
test
movsb
pop
loopne
jo
inc
and
xchg
cmp
xchg
xor
cld
shlb
push
jmp
sbb
xchg
or
lods
xor
pop
mov
loope
pop
jge
fcomps
sahf
cmc
ss
mov
fs
mov
cs
xchg
jmp
icebp
jl
call
pop
cs
inc
and
call
loope
stos
ljmp
fstl
mov
les
fs
xchg
sbbl
xor
movsb
test
gs
js
jmp
push
mov
mov
jbe
push
push
out
sub
jno
cmp
or
push
mov
sub
and
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
test
add
call
cli
push
addb
and
lcall
mov
jg
lret
adc
adc
rcrb
or
out
sub
inc
lods
xor
push
insl
call
call
dec
inc
pop
bound
ret
mov
scas
clc
sbb
dec
leave
fs
movsb
pop
loopne
jo
inc
and
inc
and
inc
and
mov
lods
mov
clc
fiadds
add
jge
cmpsb
or
jmp
mov
mov
cmpsb
add
call
aas
adc
mov
adc
popa
mov
mov
cmpsl
pop
popf
sbb
sub
sahf
jbe
xor
jae
sbb
pop
add
out
fidivrs
shrb
or
or
mov
or
sti
das
sbb
lods
add
xchg
testl
push
jns
mov
hlt
xchg
xor
push
adc
adc
push
dec
rcll
std
push
icebp
cli
mov
sbb
lahf
lahf
out
and
call
cmp
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
divb
mov
jle
shrl
push
pop
add
popf
xchg
jge
loop
mov
aad
sbb
push
xchg
testl
push
jo
mov
ret
xor
inc
aaa
xor
adc
ljmp
mov
adc
popf
inc
clc
add
add
call
icebp
lods
leave
lret
jb
sub
and
iret
push
enter
sub
and
aad
jmp
bound
mov
jp
dec
repz
ss
add
js
push
sub
push
cmp
or
mov
cmp
mov
inc
push
xor
nop
call
js
lea
push
push
aaa
mov
out
pop
enter
mov
in
xor
pop
dec
paddusw
add
das
sbb
lods
add
call
loope
xchg
testl
sub
adc
inc
inc
ljmp
push
adc
adc
push
pushf
lcall
enter
stos
xor
add
sub
out
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
stos
jno
filds
in
aas
add
int3
decb
pushl
xor
inc
lret
cmpsb
add
call
mov
das
mov
lret
lret
lahf
repnz
test
push
js
adc
fstpt
add
mov
pop
js
add
rolb
dec
mov
dec
jb
enter
jle
sbb
rclb
mov
enter
mov
jecxz
mov
adc
ret
xor
and
int
or
pop
std
scas
or
lock
push
inc
or
pushf
repnz
or
and
mov
pusha
std
xor
into
stc
xor
call
push
pop
jecxz
adc
and
inc
es
and
push
mov
inc
xchg
pop
stos
mov
jne
xlat
dec
in
mov
sub
dec
pop
mov
mov
add
mov
sbb
aam
xchg
pop
sub
adc
inc
and
dec
jge
inc
shl
fimull
loope
pop
bound
fs
sbb
mov
add
enter
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
or
aaa
xchg
jmp
sbb
push
repnz
lret
flds
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
std
imul
daa
xchg
and
jbe
mov
int
mov
jne
lods
xor
push
jae
jge
sarb
cmpb
shl
xchg
or
sub
test
pop
and
les
jmp
mov
or
xor
scas
outsb
loop
nop
inc
fnstsw
sbb
ret
mov
jecxz
mov
push
repz
xor
mov
imul
call
stc
shlb
xor
imul
leave
ljmp
aam
jecxz
adc
cmpl
mov
pop
das
movl
ja
pop
adc
sbb
sahf
lods
cs
in
fwait
pop
mov
xchg
ret
pop
shll
std
sub
mov
imul
xor
jmp
jns
jp
in
mov
aad
test
lea
add
push
fiaddl
adc
inc
and
dec
jge
inc
shl
fiaddl
add
call
jl
jnp
loope
pop
fsubs
sub
jo
or
bound
scas
adc
sub
shll
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
bound
adc
nop
movsb
enter
sbb
inc
xor
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
dec
pop
push
add
dec
mov
aad
in
dec
fildll
movsbl
arpl
cld
fwait
xor
shlb
mov
pushf
lret
jl
insl
or
mov
call
pop
sub
and
inc
daa
les
les
jmp
dec
mov
dec
and
cld
rclb
ss
and
mov
cmp
mov
aaa
or
xchg
push
in
mov
enter
scas
lcall
dec
mov
jne
int
adc
daa
mov
int
cmc
sub
rcll
and
mov
in
repz
fucomp
push
mov
outsb
hlt
and
movsb
pop
orl
daa
dec
shlb
adcl
or
add
call
pop
out
test
mov
inc
push
jbe
cmp
icebp
jo
je
in
inc
in
mov
aad
test
lea
add
push
fiaddl
adc
inc
and
dec
jge
inc
roll
or
or
lret
out
jns
push
pop
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jmp
push
or
xchg
test
sbb
sbb
rep
pop
mov
lcall
test
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
fistpl
push
shll
rep
insl
jg
fsts
fisubs
xchg
scas
js
jge
out
hlt
push
mov
mov
ss
cmp
push
and
pop
imulb
adc
fcmove
mov
mov
pop
mov
inc
pop
inc
jns
dec
sbb
popf
adc
pop
and
push
cbtw
cmp
popa
sub
je
xchg
lahf
mov
jmp
dec
popf
fisubl
jg
lahf
adc
rolb
call
push
bound
ss
fidivrl
sbb
es
rcrl
xor
jg
pop
inc
lret
cmp
push
xor
test
jp
or
mov
push
jae
bound
vphadduwq
jp
in
mov
aad
test
sbb
aam
xchg
pop
sub
adc
inc
cmp
aam
push
mov
xchg
jmp
int3
inc
dec
pop
lret
enter
ljmp
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
stc
addr16
jmp
mov
add
ret
pop
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
movsb
mov
enter
and
mov
and
or
jle
imul
cltd
jno
cmp
int3
shl
and
insl
inc
xchg
into
call
sub
push
push
orl
call
in
push
add
mov
scas
cmpsb
cld
andb
cltd
inc
inc
pop
mov
lea
jp
mov
adc
fsubp
mov
sbb
push
jnp
nop
mov
xchg
add
sbb
mov
and
cmp
add
cli
pop
fistps
pop
sahf
and
cmc
iret
and
gs
mov
push
test
cmpsl
psrlw
sbb
push
pop
cli
xor
mov
imul
inc
nop
or
push
jg
inc
sbb
add
call
iret
das
sbb
lods
add
xchg
testl
sub
adc
inc
xor
in
xchg
ljmp
shll
or
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sti
lock
jecxz
pop
sbb
lods
sbb
fcom
out
pop
mov
add
call
jmp
pop
addr16
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
and
addr16
xchg
mov
pop
add
call
xor
pushl
mov
mov
pushf
gs
js
fdivrl
dec
sub
xchg
inc
add
and
dec
mov
push
outsb
dec
adc
lods
les
jae
fldcw
hlt
xorb
push
shrb
iret
les
scas
pop
jns
mov
aaa
movsb
dec
sub
int
and
xor
sub
mov
cmp
mov
or
xchg
add
or
inc
ds
jbe
lret
xor
jno
mov
xchg
mov
fisttps
pop
add
call
outsb
or
scas
sbb
push
or
dec
aas
dec
imul
adc
lea
fldcw
and
sbb
jle
dec
pop
shrl
test
and
jmp
xchg
sbb
sbb
lods
add
xchg
testl
push
lcall
call
cmp
scas
mov
pop
divb
jns
inc
shll
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lahf
in
mov
loop
push
xchg
loopne
fnsave
xchg
mov
mov
mov
les
sti
push
or
pop
shl
or
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cld
lock
push
sar
in
fs
repz
popa
dec
inc
adc
dec
xchg
sub
cmpsl
mov
outsb
sbb
mov
rcll
rclb
dec
ja
clc
inc
pushf
or
sub
out
outsl
cs
je
sbb
sub
dec
int
pop
popf
enter
pop
pop
in
jmp
or
call
inc
inc
js
cs
mov
rorb
xchg
lods
add
fwait
sbb
jae
ds
sbbl
aad
push
iret
test
nop
testl
jge
pop
xchg
mov
jne
inc
movsb
or
mov
sbb
fwait
mov
mov
pop
cltd
dec
dec
test
imul
popf
cmp
mov
pop
cmp
sbb
daa
imul
xchg
mov
cmpsl
add
leave
pop
mov
dec
and
push
call
jle
xchg
jae
out
movlhps
xor
int
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
dec
les
sub
xchg
ds
lods
in
hlt
ret
or
mov
jnp
cmpsl
xor
lahf
ja
test
pop
pop
scas
daa
and
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
andl
sub
push
ds
clc
clc
testb
bound
js
pop
add
call
ds
inc
sub
sahf
and
sub
sahf
and
mov
int
add
rolb
scas
outsl
pop
or
movsl
pop
cld
scas
fcompl
or
packssdw
popa
xchg
nop
jbe
mov
add
pop
xor
or
mov
push
je
pop
cmpsb
mov
fadds
jns
adc
sbb
rcrl
fmull
inc
inc
js
movsb
or
mov
js
test
adc
nop
fidivl
aaa
jle
mov
add
call
lea
jmp
add
lret
sub
cmc
push
jl
mov
test
mov
inc
out
mov
jle
aam
repz
mov
sub
mov
pop
sub
fwait
add
jg
test
pop
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
lods
into
ficompl
sub
push
jmp
add
rclb
out
or
mov
jmp
sbb
lods
mov
gs
jmp
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
dec
pop
push
add
push
xchg
xor
or
into
decl
dec
pop
inc
pop
sti
cmc
push
loop
jp
ret
xchg
push
js
sahf
adc
mov
inc
jno
ret
rcl
jecxz
jno
jae
stos
xchg
lret
mov
mov
add
add
or
test
mov
and
int
imul
repnz
call
das
inc
hlt
movsb
or
mov
inc
inc
js
movsb
or
mov
js
rolb
sarb
fstpl
mov
xlat
pusha
sbb
testb
andl
jg
arpl
mov
mov
cltd
and
loop
mov
int3
cmp
pusha
sub
popf
xchg
mov
shl
pop
xchg
cmp
addr16
in
inc
lds
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
inc
mov
movsl
out
or
jo
xor
mov
je
mov
inc
mov
mov
aas
mov
push
insb
imul
jp
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
mov
sub
shl
lds
cwtl
dec
in
sub
sbb
insb
jmp
or
std
cmpsb
es
lret
jle
add
call
or
xor
xchg
gs
mov
lea
clc
mov
outsl
out
xchg
xchg
cmp
cmc
adc
fistps
or
lds
icebp
cmp
inc
insb
lcallw
xor
mov
cmp
in
jmp
xchg
cmp
xchg
loope
repnz
xor
cltd
fadds
cmp
jge
outsl
xchg
popf
add
jb
pop
or
cwtl
out
test
out
call
mov
xchg
popf
jmp
movmskps
nop
outsl
sub
incl
add
call
fistps
fstps
cmpsb
xchg
pop
mov
insb
cmp
insl
in
mov
and
or
mov
stos
mov
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
ljmp
cmp
jb
sub
in
movsl
fildll
xchg
loopne
mov
call
aas
popa
pop
testl
push
jno
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
andl
pop
scas
mov
mov
adc
mov
mov
jmp
leave
add
sbb
add
inc
dec
cmp
xlat
in
pop
rolb
stos
xchg
or
add
mov
xchg
leave
sbb
mov
movb
push
pop
mov
cmp
cmp
sbb
mov
into
fwait
mov
mov
or
clc
push
mov
xchg
fst
push
xor
call
shr
test
icebp
push
xor
cmpsl
js
das
push
fcompl
fcmovnbe
sbb
pop
imull
and
dec
pop
shrl
sti
inc
nop
or
jge
mov
mov
pop
scas
cmp
fcmovb
bound
xlat
mov
xchg
and
jne
je
scas
cltd
lds
jg
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
in
icebp
and
pop
inc
inc
testb
jp
xchg
or
loope
push
subb
mov
adc
inc
icebp
ret
gs
push
daa
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
in
push
add
mov
int3
lods
nop
jb
xor
ret
xor
mov
mov
cmpsl
lods
add
cmp
clc
or
push
pusha
dec
clc
push
clc
lret
popf
jmp
loope
loope
mov
call
negl
and
test
inc
mov
xor
aam
xchg
push
nop
push
fnsave
insl
pusha
outsb
xchg
mov
lcall
mov
mov
xor
cltd
cmp
mov
sbb
es
adc
add
push
push
xlat
pusha
sbb
insb
jg
out
icebp
popa
pop
dec
cmpsb
jecxz
jmp
leave
repnz
test
test
jmp
mov
sub
pop
xor
out
enter
inc
cld
ljmp
call
adc
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pop
add
es
insb
or
adc
fstpt
xchg
jle
sbb
fwait
in
add
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
xchg
pop
inc
xchg
loope
or
sahf
dec
lods
adc
pop
add
xor
lahf
inc
xchg
dec
mov
loop
adc
or
adc
push
dec
inc
aas
push
add
sbb
sbb
jmp
loope
loope
mov
cmpsb
mov
je
mov
data16
dec
inc
xchg
jnp
xchg
lds
fisubrl
adc
int3
cmp
sub
push
adc
adc
inc
ror
fcmovnbe
sbb
push
pushf
pop
inc
loope
outsl
inc
xchg
je
ja
loop
bound
cmp
xor
add
call
or
and
jl
fisubs
and
loope
aas
out
cmc
dec
xchg
mov
pop
in
ds
int
or
aad
daa
nop
test
dec
loop
xchg
xchg
test
mov
les
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pop
inc
xor
mov
call
in
xchg
mov
add
dec
loope
out
fisubrs
test
lahf
imul
ret
fldt
aas
les
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sub
not
jge
insb
ljmp
loop
pop
push
xchg
sub
jmp
into
mov
cmp
jb
push
mov
rolb
lret
ficompl
xor
adc
out
lds
fwait
mov
xor
out
pop
push
push
sbb
inc
pushf
out
sbb
iret
shll
dec
call
call
inc
xorb
lods
sub
mov
inc
ss
push
scas
jbe
push
xor
mov
in
push
out
mov
repz
add
ds
jbe
jg
jp
loop
int3
sti
int
hlt
xor
iret
jae
xchg
mov
insl
aas
addr16
outsb
les
call
push
addl
xchg
pop
inc
enter
ljmp
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
jnp
push
mov
fcoml
xchg
roll
repnz
cmp
repnz
popa
and
fwait
or
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
lock
popa
jns
push
lods
pop
xor
call
test
xchg
insl
push
pop
sub
popa
xchg
cltd
aaa
data16
popa
cmp
test
popa
and
sub
and
pop
jae
add
jl
and
or
or
mov
push
gs
mov
add
push
push
push
pop
sti
xchg
paddusw
js
cmp
out
mov
push
mov
ljmp
cmc
mov
add
stos
mov
int3
and
add
push
aad
shlb
test
je
mov
call
fildl
cmp
sub
add
pop
lea
push
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
xchg
scas
cmp
subb
arpl
inc
push
nop
push
adc
jmp
outsl
outsb
inc
int3
lcall
les
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jae
test
mov
dec
fcoml
data16
das
pop
stos
cmp
cmc
jecxz
in
add
mov
pop
pop
push
mov
jnp
mov
inc
movsl
mov
jge
jns
mov
xchg
jge
mov
push
insb
mov
sub
outsb
insb
cmpxchg
repz
cltd
jbe
jno
aas
push
out
inc
adc
add
call
mov
scas
sti
mov
mov
push
gs
divb
int3
jecxz
rcrl
sub
je
add
jae
and
data16
out
out
mov
mov
sub
pop
movsl
pushf
sbb
dec
arpl
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
out
xor
mov
ret
cmp
sbb
xor
daa
push
insb
imul
jp
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cld
lock
push
sar
mulb
sbb
mov
mov
sti
icebp
fwait
repnz
test
shlb
call
sti
dec
orb
mov
pop
rclb
repz
lahf
mov
and
inc
dec
loop
loop
ljmp
popf
jge
das
into
fcoms
arpl
cmp
push
cli
data16
mov
push
repz
add
hlt
das
or
sahf
pop
mov
addl
addr16
cld
mov
data16
adc
fs
insb
or
shlb
push
lock
xor
cmp
ficoms
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xchg
mov
test
addb
push
loopne
test
stos
shll
dec
sub
sub
rcl
or
mov
es
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
clc
cmp
ret
jmp
inc
hlt
stos
addl
in
cmp
mov
mov
data16
lcall
popf
xchg
jns
dec
dec
adc
shll
xorb
ljmp
orl
jbe
pop
adcb
or
add
stc
add
call
cld
sbb
pushf
roll
rcrl
or
lret
loopne
add
repz
inc
adc
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
mov
cmc
pop
sub
add
call
ja
sbb
sbb
cmp
test
nop
ja
pop
jge
xlat
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
or
clc
lock
add
cmc
out
lret
mov
in
and
mov
sbb
xchg
add
call
pop
xor
fnsave
cmpsl
xchg
gs
cmp
or
xchg
movsb
arpl
pop
mov
xor
test
push
hlt
gs
jno
mov
cmp
dec
movsb
aas
jae
daa
jle
pushf
adc
mov
sbb
cwtl
ljmp
cmp
or
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lods
add
lods
or
lcall
sub
aas
test
fcom
jbe
scas
pusha
xchg
dec
jo
aas
les
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sub
add
or
enter
sub
mov
int3
push
adc
testl
insl
mov
lods
adc
movsl
call
mov
inc
cmp
test
andl
xchg
popa
std
jg
stos
add
cmp
imul
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pop
inc
xor
mov
mov
push
xor
fsubp
push
dec
out
dec
fiaddl
fadds
in
push
imul
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sbb
movsb
daa
fstl
push
ds
outsl
mov
add
call
ficompl
cs
sbb
mov
cltd
testl
jbe
mov
inc
jbe
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
xor
mov
jns
negl
int3
ficomps
xchg
push
icebp
or
xor
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
mov
pusha
mov
fld
and
cli
shlb
adc
out
cmp
test
dec
dec
xchg
mov
popf
xor
pop
jle
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jp
enter
sbb
jne
mov
cmp
push
fimuls
xor
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
rorl
mov
scas
jecxz
in
mov
inc
jb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmp
pop
loopne
out
xchg
cmp
adc
shr
imull
vprotd
jns
push
or
ja
data16
push
push
xchg
popa
add
call
mov
pop
sub
dec
fisubs
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
data16
jbe
inc
out
inc
aaa
imul
xchg
mov
cmc
xchg
das
sbb
notb
sub
add
xchg
fwait
mov
cmc
push
jbe
loope
adc
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
decb
inc
xor
clc
xor
mov
leave
add
push
fcoml
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jnp
jb
stos
popa
out
mov
mulb
push
xor
jb
movsl
movsb
cmpsb
outsb
push
inc
pop
jns
mov
lods
push
test
pop
mov
into
mov
loopne
cmp
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
or
aaa
xchg
jmp
mov
mov
pop
std
xorl
xchg
repz
adc
call
and
fcoms
mov
sahf
inc
sahf
out
les
jne
xor
notb
dec
sub
loope
ja
mov
rorb
shll
mov
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
adc
into
add
mov
cmc
das
in
pop
insb
loope
not
or
jge
sahf
push
push
add
push
ljmp
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
in
xor
pop
into
mov
movsl
mov
mov
pop
sub
dec
fisubs
fmul
outsb
fs
mov
xchg
icebp
fsubp
push
dec
out
dec
fisubrl
int3
cmpsl
pop
stc
call
loopne
push
add
call
or
push
daa
mov
mov
mov
movsl
in
movsb
xor
mov
push
jo
rorl
pop
xor
popa
xlat
test
cmp
stos
sub
add
push
pushf
leave
pop
jo
shrl
push
sub
xor
lods
rorl
dec
pop
mov
dec
inc
pop
ds
jae
pop
sti
jge
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
dec
push
cmp
call
push
push
movsl
in
in
mov
push
mov
fs
mov
inc
and
addb
push
push
daa
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
jge
aam
or
xor
out
push
mov
out
iret
in
jb
movsl
movsb
cmpsb
outsb
push
inc
lea
aam
sahf
mov
ds
sti
adc
in
inc
pop
sbb
mov
das
into
outsb
jnp
xchg
fsubp
push
dec
out
dec
fcmovbe
dec
sub
je
and
and
pop
in
jne
fcomi
fsubl
add
jp
aam
mov
or
jo
and
mov
cmc
sbb
sub
rorl
push
mov
hlt
test
jns
and
add
sub
call
call
mov
push
insb
imul
jp
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
in
out
movsb
aad
and
call
jp
icebp
or
cwtl
dec
sbb
xchg
and
mov
push
std
outsl
into
mov
lods
cmp
dec
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmc
xor
lcall
sbb
imul
jo
dec
outsl
xor
jbe
clc
adc
and
fstps
jge
xchg
push
fs
or
mov
push
pop
jmp
xadd
ret
pop
mov
in
fistpl
int
int3
push
sar
shlb
push
jnp
add
add
call
sub
sarb
rcll
popf
dec
inc
rorb
jbe
mov
cmc
cli
sub
jl
jl
imulb
jecxz
add
xchg
push
pop
ljmp
inc
aas
shll
jo
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
rorl
mov
add
adc
in
mov
cli
mov
add
popa
mov
outsb
xchg
lock
push
mov
ret
jge
add
call
decb
repnz
shrb
mov
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xchg
adc
sbb
fadd
jne
mov
add
call
loope
pop
ljmp
stos
cmp
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
int3
xchg
push
add
sbb
into
jnp
mov
rorl
fsubs
fidivrs
fsubs
fidivrs
jle
or
cmp
and
or
mov
push
push
icebp
sub
cld
subl
add
cld
out
movsl
jnp
xchg
or
ret
lds
loopne
cmp
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
push
adc
aas
and
test
sub
pop
pushf
sbb
xchg
in
fmuls
xchg
mov
in
lahf
mov
movsl
push
cmp
sbb
xchg
subl
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
in
xor
push
mov
push
lret
stos
sub
xor
punpckhdq
lret
fnstenv
popa
mov
pop
popf
inc
jns
xchg
insl
lahf
aad
jb,pt
movsl
movsb
cmpsb
outsb
push
inc
pop
inc
xor
mov
mov
rcrl
out
fistl
pop
fidivs
adc
cmpsb
push
aaa
repz
repz
jns
inc
shll
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
decb
inc
xor
insl
fwait
sbb
orb
stos
adc
shlb
insb
mov
pop
test
sub
movsl
in
repnz
icebp
sub
imul
mov
cmp
hlt
popa
std
push
pop
aas
les
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
leave
push
movsl
and
jbe
fldenv
fwait
jno
outsl
repz
int3
cli
jle
dec
mov
dec
or
push
sbb
pop
out
lock
adc
and
jo
add
call
mov
bnd
test
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
scas
jmp
mov
dec
sar
sub
or
mov
mov
mov
or
cmp
add
call
jo
das
add
sbb
adc
rolb
mov
aad
fisttps
sub
inc
stos
inc
push
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
inc
mov
mov
xchg
push
lods
stos
cmpl
shlb
pop
jne
inc
xchg
sahf
shl
cli
out
jno
pop
inc
jmp
mov
mov
iret
jge
movsl
and
mov
jno
leave
push
insb
imul
jp
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jno
sub
mov
out
iret
xchg
or
pusha
ljmp
pshufw
mov
push
push
pusha
xchg
adc
pop
inc
or
or
test
xchg
int
ret
inc
movl
icebp
mov
bound
jmp
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
dec
repnz
xchg
das
sbb
shrl
jae
repnz
or
loopne
push
cmp
add
jg
sarl
cltd
enter
or
pop
in
add
call
aad
stos
lods
xor
aaa
lret
sub
sbb
cmpsb
jbe
sbb
xor
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmpsl
xor
xchg
int3
pop
add
jbe
mov
push
div
out
call
test
cs
xchg
ds
cli
ds
pop
ficomps
cmpsl
or
ret
ss
fsub
dec
cli
xchg
adc
loop,pn
in
mov
inc
jb
cltd
movsl
movsb
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
xchg
scas
adc
push
or
loop
repz
stos
loop
mov
lcall
arpl
into
mov
add
call
push
fsubrl
inc
out
sub
test
jl
insb
pop
in
aad
jl
insb
pop
in
aad
pop
cmp
push
add
aas
les
jb
movsl
movsb
cmpsb
outsb
push
inc
shr
sbb
test
test
xchg
not
and
arpl
iret
outsl
fists
and
scas
jle
ljmp
add
call
mov
and
and
and
push
pop
dec
xchg
pop
mov
jmp
test
jle
gs
into
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xchg
scas
adc
push
scas
pop
ret
push
imul
lods
clc
insb
imul
push
outsb
leave
cli
dec
in
mov
sub
mov
sub
imul
xchg
dec
lock
insb
pop
in
aad
add
call
maxps
jle
mov
daa
inc
cmp
cmpsb
loope
shrb
pop
xchg
mov
pop
rcl
stc
xor
test
popa
outsl
xlat
jecxz
lods
inc
movsl
push
test
sub
or
pop
icebp
jp
cmp
mov
jae
loop
sub
push
movsl
xor
shll
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
movsb
cmpsb
outsb
push
inc
inc
aas
scas
test
test
ror
xchg
int
and
inc
stos
cmp
or
and
ror
test
in
into
lds
pop
jne
popa
push
clc
lock
insb
pop
in
aad
jl
insb
pop
in
aad
mov
movsl
enter
lahf
xlat
cli
int
cmpsl
shrl
sub
pop
cmp
jae
mov
mov
mov
push
sbb
push
fisttpl
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cli
in
mov
inc
push
jno
and
insb
push
add
scas
pushf
add
dec
mov
out
jle
imul
test
add
adc
inc
cli
cmp
dec
ret
enter
sbb
ret
lret
push
insb
roll
call
sub
das
jno
mov
popa
and
mov
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
outsb
push
inc
out
outsl
inc
je
lcall
and
add
shl
dec
push
or
cmp
cmp
push
imul
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xchg
lea
rcrl
cmp
xchg
inc
mov
mov
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmpb
jmp
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
add
call
cmp
cld
pop
addr16
in
cmp
cld
pop
mov
mov
in
cmp
cld
or
sub
pop
addr16
in
cmp
cld
and
into
push
fcomps
or
into
ror
cld
sub
sbb
subb
test
sub
lods
cmp
loop
jb
movsl
movsb
cmpsb
outsb
push
inc
xchg
rclb
jb
movsl
movsb
cmpsb
outsb
push
inc
iret
data16
and
dec
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
out
inc
pusha
fucomi
sti
insl
cwtl
jb
movsl
movsb
cmpsb
outsb
push
inc
push
push
add
call
inc
xlat
stos
inc
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
pop
push
add
adc
movsl
movsb
cmpsb
outsb
push
inc
mov
pop
cmp
cmpsb
outsb
push
inc
mov
pop
cmp
cmpsb
outsb
push
inc
in
and
inc
jle
jb
movsl
movsb
cmpsb
outsb
push
inc
jle
push
stos
jae
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
lds
cmpsl
out
jb
movsl
movsb
cmpsb
outsb
push
inc
dec
mov
test
cltd
movsl
movsb
cmpsb
outsb
push
inc
fldl
and
outsl
sbb
movsl
movsb
cmpsb
outsb
push
inc
cmp
leave
mov
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
cmp
leave
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
iret
adc
dec
imul
push
inc
mov
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
mov
add
cltd
movsl
movsb
cmpsb
outsb
push
inc
frstor
and
movsl
movsb
cmpsb
outsb
push
inc
mov
cmp
out
jb
movsl
movsb
cmpsb
outsb
push
inc
cld
ror
leave
fadds
in
jb
movsl
movsb
cmpsb
outsb
push
inc
ss
inc
lret
out
hlt
lods
jb
movsl
movsb
cmpsb
outsb
push
inc
adc
lcall
xchg
mov
cltd
movsl
movsb
cmpsb
outsb
add
call
inc
dec
ret
test
int
pop
and
cltd
movsl
movsb
cmpsb
outsb
push
inc
orl
outsl
jb
movsl
movsb
cmpsb
outsb
push
inc
add
out
push
jb
movsl
movsb
cmpsb
outsb
push
inc
add
out
push
in
xor
sti
inc
adc
shll
in
xor
je
mov
cmp
mov
ror
mov
dec
inc
xchg
stc
cmp
xor
je
mov
push
jns
ret
or
shlb
or
push
sbb
or
sbb
add
call
clc
dec
push
dec
or
xchg
inc
mov
sarl
add
xor
sti
inc
mov
xchg
aaa
add
mov
push
mov
xchg
aaa
add
mov
push
mov
xchg
aaa
add
subl
mov
xchg
aaa
add
cltd
movsl
movsb
cmpsb
outsb
push
inc
mov
xchg
aaa
add
cltd
movsl
movsb
cmpsb
outsb
push
inc
imul
jnp
jb
movsl
movsb
cmpsb
outsb
push
inc
imul
jnp
jb
add
call
movsb
cmpsb
outsb
push
inc
std
sbb
fdivrp
and
movsb
cmpsb
outsb
push
inc
std
sbb
fdivrp
and
movsb
cmpsb
outsb
push
inc
daa
add
je
cltd
movsl
movsb
cmpsb
outsb
push
inc
sbb
inc
int
ds
movsl
movsb
cmpsb
outsb
push
inc
sbb
inc
int
ds
movsl
movsb
cmpsb
outsb
push
inc
gs
or
cltd
movsl
movsb
cmpsb
outsb
push
inc
gs
or
cltd
movsl
movsb
cmpsb
outsb
push
inc
jl
mov
adc
movsl
movsb
cmpsb
outsb
push
inc
jl
mov
adc
movsl
movsb
cmpsb
outsb
push
inc
add
call
test
adc
movsl
movsb
cmpsb
outsb
push
inc
incl
icebp
push
fidivs
movsl
movsb
cmpsb
outsb
push
inc
push
dec
xor
cmp
xorb
movsb
cmpsb
outsb
push
inc
testl
movsl
movsb
cmpsb
outsb
push
inc
testl
movsl
movsb
cmpsb
outsb
push
inc
testl
movsl
movsb
cmpsb
outsb
push
inc
cmp
sbb
movsb
cmpsb
outsb
push
inc
jmp
cs
jb
movsl
movsb
cmpsb
outsb
push
inc
jg
cmp
or
movsl
movsb
cmpsb
outsb
push
inc
jb
jbe
mov
add
call
scas
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
jbe
mov
scas
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
fmuls
cltd
movsl
movsb
cmpsb
outsb
push
inc
mov
sub
cmpsb
outsb
push
inc
shl
jae
leave
cmp
cltd
movsl
movsb
cmpsb
outsb
push
inc
jne
pop
pop
addr16
jb
movsl
movsb
cmpsb
outsb
push
inc
cmpsl
insl
jg
cwtl
in
in
jb
movsl
movsb
cmpsb
outsb
push
inc
out
loop
sub
or
cmpsb
outsb
push
inc
sti
rclb
stc
xchg
jb
movsl
movsb
cmpsb
outsb
push
inc
or
out
mov
dec
inc
jb
movsl
movsb
add
call
outsb
push
inc
mov
rcll
inc
lret
jb
movsl
movsb
cmpsb
outsb
push
inc
sarl
push
stos
popf
pop
int
cltd
movsl
movsb
cmpsb
outsb
push
inc
adc
ret
xor
movsl
movsb
cmpsb
outsb
push
inc
cmc
mov
call
or
cmp
jo
jmp
mov
jo
jmp
mov
xchg
mov
subb
test
mov
mov
push
or
mov
xlat
xchg
mov
mov
pop
popf
pusha
insl
jno
push
pop
dec
xchg
inc
loopne
add
call
sub
outsl
ds
test
pop
pop
ljmp
cmp
aam
popf
adc
loope
jae
imul
hlt
push
and
lahf
xor
mov
mov
push
cmpl
insb
cltd
pop
sub
pushf
hlt
lcall
cmpl
cwtl
push
dec
out
nop
xorl
pusha
pusha
data16
imul
jg
mov
aas
stc
pop
into
push
and
enter
ret
xchg
xor
fmuls
and
cmp
push
mov
push
repz
add
call
and
cmp
inc
ds
fdivl
xchg
fistpl
pop
inc
ret
inc
cwtl
adc
cmc
jl
mov
popa
or
stc
loopne
xchg
scas
insl
movsl
pop
adc
and
cmpsb
add
int3
pop
add
popf
inc
fwait
cs
stc
cs
cwtl
sbb
dec
dec
adc
fucomp
pop
aaa
fisttpl
mov
loop
xor
pop
sub
lods
aaa
in
fs
push
movsb
xor
sub
sbb
fsubs
mov
mov
and
dec
test
stos
ret
add
xor
call
inc
mov
pushl
pop
xchg
sbb
and
ss
clc
dec
push
dec
jmp
popa
mov
xchg
not
out
push
xor
in
or
inc
loop
jg
push
imul
test
hlt
pop
aaa
out
loope
mov
xchg
xchg
lods
inc
stc
arpl
fnstenv
cmp
daa
cmp
cld
out
fldenv
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
add
call
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
pop
addr16
in
cmp
cld
bound
ss
xchg
loope
popa
mov
rol
push
aad
adc
into
loop
xor
inc
aad
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
shll
stos
movsl
and
cli
pop
loopne
mov
and
in
dec
incl
fstl
lret
sahf
inc
and
lds
out
fsubrs
ss
dec
lcall
dec
lcall
adc
and
stos
dec
inc
inc
inc
xchg
pop
gs
pop
aas
les
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
shll
mov
pop
sbb
enter
xor
ljmp
xor
iret
shlb
loopne
cmp
sarl
fwait
sarl
les
and
pushf
insl
ret
fisttps
add
inc
dec
sbbb
dec
xchg
xchg
pop
push
mov
xor
faddl
call
loop
sub
insl
cld
in
pop
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
iret
orl
or
mov
cs
adc
or
shl
or
subb
aam
cmpsl
push
scas
and
jae
xchg
jecxz
lods
or
shll
add
call
shll
sbbb
insb
fisubl
xrelease
mov
or
xor
sbb
fsts
cmp
outsl
adc
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
loope
adc
les
popl
pop
dec
loopne
icebp
add
call
pop
insb
xor
gs
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
outsb
adc
inc
imul
loop
mov
mov
pop
mov
cwtl
pushf
mov
repnz
push
or
dec
prefetch
pop
leave
sti
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lock
pop
sbb
test
push
stos
shlb
jecxz
lods
sahf
gs
lea
inc
push
cs
push
push
movsl
mov
jmp
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
std
add
imul
je
pop
mov
out
mov
test
subl
pop
int
push
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jbe
mov
psllq
and
pop
out
cmp
pop
pop
mov
loopne
pushf
insb
dec
ficoml
pop
js
lods
xchg
and
rolb
xchg
stc
es
or
fidivs
xorb
bound
test
push
inc
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
call
or
mov
push
shrl
push
mov
pop
add
push
xchg
pop
jnp
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
repz
sahf
ds
add
jl
in
pushf
jb
xor
fisubl
addb
mov
lods
xchg
jecxz
arpl
sahf
lret
or
dec
xor
call
shlb
dec
cmp
pmulhuw
movsl
mov
jge
mov
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
jmp
push
idivb
xchg
mov
sub
out
dec
sub
daa
arpl
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
daa
and
jl
std
inc
cltd
add
call
dec
inc
xchg
add
rorb
vaddsubps
ja
mov
jnp
lods
xchg
xchg
das
sbb
lods
add
int3
hlt
cld
add
mov
pop
call
incb
sbb
ja
sbb
enter
mov
cmp
jnp
insl
cmp
jno
stc
test
aas
mov
es
and
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
in
inc
fsubp
adc
dec
sahf
push
jns
cmpsb
clc
icebp
sbb
fwait
jmp
mov
xor
jp
loopne
dec
push
out
testb
sub
inc
ret
addr16
xchg
pop
mov
ficoms
xchg
mov
test
fnstcw
cmpsb
aad
call
es
dec
mov
ret
pop
dec
addr16
adc
cmp
cmp
xlat
adcl
add
decl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
or
aam
int
pop
int3
pushf
jmp
or
dec
pop
test
or
fdivr
fimuls
gs
dec
xchg
pop
pusha
pop
jns
in
das
les
push
dec
repnz
movsb
or
mov
mov
xchg
add
call
ja
aas
call
add
and
imul
xchg
pop
icebp
jo
out
les
stc
js
popa
int
lret
xor
sbb
mov
or
pop
scas
jl
sub
mov
lock
sti
jbe
xor
xchg
shlb
fcomip
cli
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
call
ljmp
shrb
push
cmp
enter
adc
push
das
ljmp
call
mov
shll
xor
or
cwtl
fcmovnb
pop
sbb
push
arpl
and
adc
push
sbb
sub
outsl
sub
push
rorl
mov
outsl
jmp
xchg
nop
push
jne
in
xchg
repz
add
les
jmp
mov
sub
xchg
test
xchg
loop
fwait
shrl
add
mov
cwtl
pushf
or
int
mov
pop
xchg
popa
fldenv
insb
inc
arpl
xor
pop
aas
les
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
rolb
xlat
dec
in
cmc
or
mov
mov
movsl
icebp
loop
lock
xchg
sbb
out
testl
sub
test
jo
inc
xor
xlat
movsl
sti
or
rcl
movsb
and
int
push
gs
dec
cld
loope
cmp
cmp
and
nop
rcll
mov
add
cwtl
sbb
imul
xchg
cmp
cmp
enter
cmpsb
or
add
call
arpl
sub
xlat
dec
addr16
mov
enter
dec
jl
jae
insl
push
push
xor
repnz
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jle
hlt
cmp
inc
cmp
mov
lods
xchg
mov
in
lods
gs
jne
in
enter
mov
inc
or
fistpl
lret
test
leave
pop
jo
test
xor
call
and
jge
add
or
addr16
outsl
popf
or
call
pop
sbb
mov
fxch
popa
cmpsl
inc
cmpsb
imul
sbb
scas
fdiv
push
jmp
and
aam
add
pop
jo
or
jp
stos
adc
rcrb
aas
mov
sbb
lods
aad
jge
mov
push
clc
lds
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
sub
je
cmp
mov
add
sub
inc
imul
repz
dec
sub
cmpsl
cld
loopne
inc
inc
dec
cltd
add
popl
aad
xchg
add
call
cwtl
xor
pop
mov
cmp
xor
ss
mov
jecxz
lods
push
in
in
lods
push
dec
adc
inc
push
pop
pusha
push
sub
mov
pop
mov
cwtl
push
imull
fdivp
cmp
jle
repnz
jbe
ret
fidivrl
outsb
sbb
fimuls
test
divb
dec
pop
pushf
mov
idiv
outsl
es
mov
test
mov
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
xchg
mov
ja
rorl
add
lahf
mov
fcoml
cmc
pop
fcoms
push
xchg
inc
shlb
repnz
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
xor
sarl
in
pop
add
int
add
sbbl
pop
push
mov
and
push
xchg
insb
insb
mov
mov
or
mov
and
adc
shl
gs
imul
sub
cmpsl
ljmp
add
call
mov
testl
ret
jnp
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lods
in
add
and
loop
cmp
into
data16
dec
mov
mov
pop
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
mov
fwait
inc
mov
icebp
aad
cmp
add
call
pop
rcl
in
adc
jne
cmp
dec
mov
xor
cmp
subb
sti
ret
out
cmp
mov
lods
rcrb
sub
sub
jns
push
ljmp
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
adc
lahf
push
push
mov
sbb
mov
int
sbb
xchg
jecxz
lods
mov
inc
outsl
pop
cli
or
push
iret
sub
loopne
xor
add
call
ja
loope
jno
stos
mov
jmp
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
hlt
jg
jge
push
pop
jle
outsl
sbb
adc
adcl
pop
rcl
in
cmp
lret
fsubp
push
push
lahf
cmpsb
test
jmp
fadds
neg
in
std
inc
sbb
pop
popf
test
mov
outsl
pop
mov
data16
jae
push
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
aas
jno
lss
add
call
dec
lods
mov
push
int
mov
xchg
inc
mov
pop
and
outsb
mov
rol
pop
pop
ja
xor
mov
and
mov
and
cmp
jmp
dec
out
lret
in
cmp
add
mov
orb
inc
mov
lods
ja
xor
pusha
xchg
pop
mov
cmp
jl
fsin
jmp
push
adcb
mov
inc
rcrb
xorl
dec
hlt
je
dec
rcrb
jb
cltd
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmpsl
xor
xchg
lea
jp
ss
jbe
je
cmc
aam
popl
daa
xlat
push
inc
out
dec
xchg
pop
outsb
jbe
addr16
test
fdivrs
mov
lcall
jmp
outsb
cmp
jb
loopne
add
lret
sbb
inc
cmp
movsl
mov
or
push
pop
bound
fs
push
insb
int3
pusha
xchg
pop
mov
cmp
add
call
loopne
in
popa
xchg
adc
int3
psubsw
fisubrs
std
inc
fcomps
popf
fstl
nop
mov
nop
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cmpsl
inc
inc
push
sarl
stos
imul
cltd
mov
insb
dec
ficoml
cmpsl
inc
sbb
jb
jmp
ss
mov
cmpsl
shlb
ret
mov
push
into
xor
adc
in
add
call
xlat
in
pop
pop
dec
roll
cli
adc
pop
movsl
mov
or
xchg
xlat
jb
jae
fs
push
fdivr
sub
pusha
xchg
cmpsl
in
enter
xchg
repnz
sub
or
adc
mov
pop
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
gs
xchg
or
cmp
insl
or
mov
in
ror
dec
mov
aaa
adcb
call
ror
push
andb
jmp
inc
mov
cmpb
sub
and
in
cmpl
cmp
xor
jge
insb
imul
ficoml
inc
div
jnp
xchg
imul
pushf
imul
lret
mov
mov
inc
mov
add
sarb
mov
jns
call
in
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
fisubl
rclb
stos
pop
cmc
fcmovb
push
xor
push
cmp
sub
fsubr
push
shl
mov
xchg
aam
mulb
mov
cmp
arpl
sti
jb
incb
movsl
loop
out
mov
jecxz
fs
sbb
inc
test
popa
adc
pop
stos
and
inc
rcrb
or
lret
imul
scas
addr16
sub
inc
add
cmp
in
or
jle
mov
jge
or
pushf
roll
add
call
jno
jle
lret
test
stc
in
sbb
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
xor
clc
jle
push
ret
inc
sbbl
cwtl
cltd
push
mov
cli
lret
test
inc
shlb
bound
lahf
xchg
jo
xchg
xor
sub
ret
ljmp
mov
test
push
sbb
mov
sub
jae
imul
mov
cmc
sahf
mov
js
or
push
pop
or
call
stos
cmp
pop
clc
push
les
shll
stos
iret
fs
fcoms
and
jp
sbb
mov
sbb
pusha
add
ficoms
insb
incl
and
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
loope
add
pusha
adc
aas
xchg
xlat
mov
dec
adc
repnz
popa
inc
mov
sbb
jp
push
pop
cmpsl
notb
sbb
jo
outsb
mov
pop
cmp
and
aas
cld
pop
add
call
cmp
sub
push
cmp
bound
popf
aam
adc
scas
out
hlt
out
std
xchg
adc
inc
adc
sbbl
js
sbb
stos
shlb
jecxz
lods
inc
mov
cwtl
ficompl
mov
xchg
in
pop
push
pushf
cmc
insb
lret
or
mov
nop
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
xchg
push
jnp
dec
out
pop
ret
inc
aam
ss
xor
addb
call
fldpi
mov
fdiv
push
jmp
and
pop
sub
xchg
push
sahf
sub
outsb
lds
jbe
cli
rcr
xor
shrb
or
mov
inc
fmuls
mov
lods
cli
inc
scas
fisubrs
popa
ljmp
scas
jne
lods
into
in
pusha
cmpsb
sub
push
or
inc
or
rcrb
mov
scas
out
lret
jae
xchg
jecxz
lods
stos
shlb
jecxz
lods
pop
jnp
pop
lret
ljmp
fwait
sbb
rol
clc
test
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
aas
mov
xor
jle
jg
pop
xlat
cmpsl
mov
test
push
xchg
pop
xor
pop
sub
jecxz
gs
imul
ljmp
mov
pushf
add
test
test
cmp
stos
xor
inc
dec
loopne
jge
pop
and
lret
inc
in
loope
mov
and
std
pop
stos
xchg
xor
push
sub
fst
enter
mov
gs
pop
push
push
mov
add
pop
movsl
mov
or
call
shlb
jecxz
lods
xlat
lret
nop
push
pop
pop
cmp
inc
ds
fisttpl
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
ja
ljmp
push
cwtl
adc
push
cld
fldl
icebp
std
outsb
mov
jp
fcomi
push
rol
push
iret
mov
jecxz
xchg
jmp
mov
test
push
xchg
adc
mov
xchg
add
mov
fildll
test
push
sbb
mov
out
rorl
clc
add
call
jb
fildll
cltd
in
adc
or
cld
sbb
mov
inc
mov
in
movsl
mov
sub
jmp
out
adc
popa
jmp
repnz
mov
mov
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xor
idivb
jo
arpl
out
cmp
aad
adc
add
ja
jg
ficompl
sbb
cmp
test
mov
add
call
pop
adc
aas
mov
popf
xor
or
popa
das
xor
pop
adc
les
inc
mov
push
mov
mov
outsl
jecxz
pop
mov
nop
xor
push
icebp
dec
js
popa
shlb
imul
aas
inc
mov
or
cmp
add
cmp
lret
sbb
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
test
inc
mov
call
les
push
mov
loope
jle
fdivrl
into
lods
mov
js
cwtl
jnp
movsl
pop
les
push
sub
xchg
sub
mov
fcmove
add
in
sub
sub
jle
sub
addr16
lods
xor
push
test
push
add
push
aam
test
shr
sub
test
cmpsb
sub
jnp
dec
add
movsl
aam
in
lcall
in
stc
adc
adc
mov
and
cwtl
sub
sbb
imul
add
add
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
imul
xchg
adc
jp
aad
push
cmpsl
lret
pusha
in
jb
or
ret
push
in
cmp
je
aam
sub
xchg
cmpsl
cmp
inc
loop
add
js
jge
popa
lcall
lcall
enter
cmp
mov
push
es
bts
adc
out
out
or
sub
paddusw
test
iret
mov
call
mov
cltd
push
cmpsl
adc
aad
xchg
push
xor
sti
cmpsb
mov
mov
pop
cltd
in
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
fstps
sub
mov
fisubrs
mov
adc
cmp
fisubl
sub
push
push
fistl
jle
xchg
pop
add
hlt
pop
dec
xchg
js
icebp
gs
lods
stos
stc
ljmp
call
mov
mov
jno
push
fwait
ret
adc
lock
ss
cltd
pop
andl
mov
rolb
fisttps
stc
in
push
adc
pop
add
ds
or
into
pop
cmp
push
lret
push
iret
dec
sub
clc
shl
cmp
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xchg
inc
data16
xchg
stos
jecxz
push
popl
push
jns
inc
aaa
xchg
hlt
sbb
loop
push
adc
add
call
xchg
mov
jp
hlt
js
cmp
movsb
pop
loopne
jo
inc
and
mov
lods
jmp
cs
mov
ljmp
add
and
cmp
mov
xor
lds
ffreep
push
xchg
cmc
dec
jl
lock
cmp
pop
cmp
or
pop
rolb
sbb
sub
push
out
stos
mov
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
shll
mov
mov
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
call
aas
push
cvtps2pd
push
or
stos
scas
mov
icebp
aaa
lret
out
sub
jb
xchg
adc
jmp
pop
xchg
xchg
lcall
mov
mov
lods
and
js
xchg
adcl
pop
or
pop
pop
pop
mov
test
aaa
insb
mov
cmp
sbb
hlt
or
cwtl
xlat
inc
loopne
jmp
sbb
lea
cli
lods
dec
arpl
push
pushf
jnp
sbbb
adc
call
nop
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
dec
pushl
clc
aad
clc
rcll
pop
jb
notb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
outsl
sub
cmc
lods
sbb
or
jns
mov
mov
jo
lahf
xchg
repnz
stc
jmp
pop
mov
sbb
aaa
dec
xchg
je
imul
and
fstpl
insb
jne
loop
mov
jo
pop
pop
call
push
push
cmp
add
call
fistps
or
cwtl
xlat
inc
loopne
jmp
sbb
nop
rorl
mov
fisttpll
mov
nop
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
jno
fistpll
push
add
or
cmp
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
and
lea
shll
scas
lea
push
jb
outsb
mov
out
adc
int3
mov
cli
call
fadd
cli
scas
ja
add
call
shr
and
out
scas
mov
or
sbb
fstp
push
push
or
sbb
in
and
cli
and
adc
mov
mov
push
hlt
xchg
mov
mov
add
jnp
jl
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jnp
test
mov
and
inc
loop
or
hlt
cmpsl
mov
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jp
cmc
and
sbb
pop
add
call
inc
sarl
sar
out
lcall
mov
inc
jl
prefetch
mov
je
lods
sbb
cltd
sbb
and
cmp
sbbl
xlat
mov
dec
ss
jecxz
int
xchg
sbb
loope
push
push
mov
sbb
push
stos
push
mov
in
test
mov
ljmp
divl
out
in
int3
test
xlat
xchg
push
add
in
jge
push
xlat
xchg
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
dec
daa
sbb
fistpl
and
call
fnstcw
adc
sub
fmul
iret
xchg
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
fisttpl
adc
ljmp
movsl
sub
std
jecxz
or
pop
mov
cmpsl
adc
ja
mov
cmpsb
sub
fwait
dec
aad
mov
pop
testl
adc
jge
lods
or
std
andl
lock
test
adc
lods
ljmp
mov
ss
loopne
push
arpl
add
call
xchg
push
push
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
out
xor
and
popa
or
sbb
add
mov
xchg
sbb
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
es
lds
aad
scas
jno
popa
adc
jns
data16
inc
lahf
push
stc
cmpsb
cmpsb
ljmp
decb
push
fsubrs
mov
and
inc
xor
imul
cld
repnz
call
sub
xor
pop
jae
add
adc
fdivs
mov
aad
fcompl
push
sbb
insb
pop
aas
les
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
push
lock
pop
subl
jp
lahf
mov
test
adc
scas
lcall
iret
dec
mov
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
leave
mov
aaa
adc
adc
push
add
call
push
jo
bound
out
outsb
jbe
aam
data16
repnz
lcall
out
fsts
inc
rclb
test
and
scas
add
adc
cs
xchg
pushf
cmc
add
hlt
add
inc
xor
jbe
or
xchg
rorl
ret
or
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
shrb
subl
sub
arpl
push
pop
loop
push
push
mov
pop
and
sar
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
in
subb
out
and
aas
sbb
cltd
fisttps
ss
incb
mov
xchg
fsubrl
sbb
ret
std
int3
shrl
push
mov
xchg
cwtl
insl
push
mov
add
int3
ficoml
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
fwait
sbb
lret
xchg
xor
add
call
movsb
add
dec
jge
lahf
repz
cmp
dec
mov
mov
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
scas
inc
cmpsl
popf
sbb
pop
ror
adc
daa
shll
hlt
movsl
inc
mov
fsubl
sti
mov
and
jge
test
push
xchg
lds
std
xor
repnz
cld
jns
fs
add
call
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lea
int3
out
mov
ja
add
cmp
inc
mov
lods
in
inc
aaa
adc
daa
rcl
xor
in
mov
xor
loope
lea
inc
fidivl
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
decb
in
add
call
or
mov
cmpb
push
insb
jp
ret
add
fdivp
mov
arpl
mov
mov
fdivrs
mov
mov
loope
pop
jnp
int
xchg
inc
sub
insb
fistpl
pop
and
or
xor
and
sbb
and
mov
addb
test
popf
inc
shll
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
hlt
jp
jecxz
out
lds
pop
addl
sub
ret
pop
push
repz
jb
fsubl
mov
sbb
xchg
xor
and
test
test
in
outsl
sar
daa
cmp
sub
cmc
frstor
jne
sarl
xchg
pop
in
inc
es
les
cmp
mov
mov
fisttpll
inc
pop
std
inc
add
call
mov
xchg
rol
std
mov
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jge
xor
mov
por
jns
pushf
cmc
je
sbb
test
cld
jge
shll
dec
cmc
sahf
stc
icebp
fsubp
push
dec
out
dec
fsubp
push
dec
out
dec
pop
adc
es
lock
cmp
add
call
xchg
and
cmp
stos
mov
mov
cmpsb
add
jae
dec
das
rclb
jns
sub
xlat
xchg
cwtl
add
not
test
jge
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jmp
fstp
arpl
fs
or
xchg
jg
fildl
cltd
loopne
add
call
push
imul
add
adc
out
jns
add
jo
add
loopne
pop
aas
les
jb
movsl
movsb
cmpsb
outsb
push
inc
add
jle
pushf
sub
xchg
push
mov
mov
addr16
mov
aam
adc
add
push
test
ret
jnp
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
aas
ljmp
imul
and
scas
imul
aad
xorb
and
inc
inc
dec
push
lret
js
sbb
push
pop
fisubl
je
mov
cmpsb
pmaxsw
movsb
jae
xchg
xor
lret
dec
jecxz
adc
lds
jg,pn
add
push
jno
pop
push
mov
stos
mov
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
scas
aas
mov
inc
loop
inc
cmp
lods
sbb
neg
adc
fcmove
rcrb
or
fisubl
xchg
dec
loop
clc
xchg
test
ljmp
add
pop
adc
add
bound
int
pop
mov
out
mov
call
push
pop
loope
xor
repnz
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
adc
ljmp
iret
data16
sub
in
sub
xor
bound
lods
push
add
call
lret
sbb
sub
pop
push
push
push
popf
push
mov
xchg
notb
inc
ljmp
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
ja
jo
test
dec
pop
popa
mov
fsubs
mov
push
inc
lret
and
push
jmp
or
sbb
jmp
or
sbb
jmp
or
sbb
scas
or
add
call
push
repnz
jnp
mov
inc
adc
aam
add
into
std
mov
lods
dec
push
dec
hlt
adc
into
xchg
sbb
inc
sub
jne
dec
xor
into
xchg
sbb
inc
sub
js
add
js
add
and
adc
mov
stos
adc
mov
mov
xchg
push
jo
repnz
mov
xchg
push
jo
repnz
mov
xchg
push
jo
repnz
mov
xchg
push
jo
hlt
adc
dec
hlt
adc
dec
hlt
adc
ljmp
call
jae
push
hlt
inc
push
cs
mov
inc
push
cs
mov
or
fsubrs
jbe
pop
out
xchg
sub
push
aas
pop
mov
aam
aad
pop
dec
or
enter
shrl
inc
outsb
cltd
inc
outsb
adc
mov
into
mov
fadds
or
dec
sahf
mov
dec
jmp
sub
pop
add
inc
hlt
or
int
inc
dec
fsub
roll
sahf
in
push
cmpsl
hlt
cmp
add
fdivrs
add
call
imul
ret
dec
int
int3
aad
adc
into
loop
shl
xor
or
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lea
int3
out
mov
cmp
or
xchg
scas
adc
sahf
ret
daa
ljmp
mov
dec
fsubrs
ss
dec
lcall
dec
lcall
ds
xorb
push
lods
add
in
push
cmp
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
shll
stos
jp
dec
aad
xor
cmp
pop
insl
and
add
push
divb
sarl
jecxz
shl
es
and
aam
push
loop
xor
insl
ret
neg
mov
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
inc
fisttpll
inc
imul
in
inc
fistpll
decl
ss
fs
pop
lahf
push
xchg
jecxz
lods
in
imul
dec
je
test
cmp
cmpb
icebp
xor
dec
int
popf
outsb
sub
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
cld
xlat
out
sahf
xchg
pop
pushf
arpl
shlb
cmpsl
push
scas
and
jae
add
call
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
stos
shlb
jecxz
lods
loop
cmp
lahf
imul
leave
lahf
cwtl
out
pop
outsl
fcomp
or
pop
in
jp
adc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
insl
sub
adc
es
or
out
decb
cs
pop
sub
mov
hlt
mov
cs
adc
dec
data16
rolb
call
xchg
jecxz
lods
lcall
mov
movsb
sbb
into
repnz
xchg
adc
xchg
xchg
aam
icebp
and
mov
and
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
xlat
jl
out
xlat
xchg
stos
pop
mov
or
mov
mov
xor
scas
jle
aam
scas
mov
adc
lock
sbb
data16
xchg
fisubrl
idiv
pop
add
call
pop
rcll
in
insl
xchg
out
dec
jle
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
xor
xor
dec
adc
sti
or
gs
jmp
cmp
lret
sbb
fbstp
mov
push
xchg
mov
gs
dec
cmc
cs
mov
gs
mov
mov
xchg
or
xor
sbb
mov
call
enter
mov
shrb
and
jnp
xor
repnz
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
xchg
aas
scas
push
push
cmp
cmpsb
test
dec
jmp
xor
out
ds
fwait
xchg
mov
or
mov
inc
scas
test
dec
inc
pushf
push
jecxz
in
sub
push
or
sub
pop
shl
mov
lahf
pop
push
sub
mov
loope
push
add
and
in
sbb
jge
mov
sub
add
call
jns
popa
xor
repnz
cld
jns
fs
movsl
movsb
cmpsb
outsb
push
inc
cli
mov
jl
ret
test
adc
cmc
add
cltd
es
pop
cld
hlt
add
add
imul
cltd
and
jne
aad
shrl
dec
dec
les
icebp
loope
inc
push
stc
dec
jp
lret
xor
jnp
aam
dec
mov
xor
mov
lds
and
in
sbb
jge
mov
xorl
movsl
movsb
cmpsb
outsb
push
inc
shrb
call
xchg
insl
out
push
cmp
jns
in
imul
insl
jno
test
daa
test
repnz
out
dec
cmp
imul
hlt
es
je
sbb
movsl
cmpsb
push
mov
push
bound
sub
mov
into
mov
mov
mov
fistpll
mov
pop
orl
mov
pop
lret
dec
lret
bound
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
outsb
push
add
stos
addb
cld
jecxz
fwait
jne
repnz
add
call
mov
push
and
mov
aam
cmpsl
push
scas
and
jae
xchg
jecxz
lods
xor
and
aad
push
aam
dec
ficoml
xchg
insb
add
jle
fdivr
arpl
movsb
aas
and
leave
sbb
sub
lea
mov
fidivrl
cmp
aaa
push
in
xchg
test
data16
mov
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
out
mov
jle
xchg
jno
pop
scas
cld
xchg
sub
xchg
jecxz
lods
mov
inc
outsl
pop
cli
add
call
mov
mov
stos
shlb
jecxz
lods
lods
mov
mov
mov
test
xchg
pop
fs
mov
daa
inc
dec
jno
push
aaa
push
push
lods
mov
idivl
loope
adc
sbbb
sbb
imul
inc
in
xor
pop
js
sub
cmp
mov
fdivr
add
mov
inc
pop
jg
ffreep
mov
inc
sti
ja
cmpsl
xlat
or
mov
cmpsb
into
add
call
sub
pop
daa
mov
or
push
sub
mov
jnp
inc
xor
shlb
into
stos
xor
pop
jecxz
nop
es
repnz
fstpt
push
ret
loop
cltd
movsl
movsb
cmpsb
outsb
push
inc
xchg
fs
lea
xor
bound
push
and
into
scas
dec
out
nop
outsb
sub
and
lods
cwtl
stos
mov
xchg
xor
fs
sbbb
cmpsl
inc
jnp
shll
add
daa
add
push
or
ret
jge
mov
xor
add
call
mov
push
pop
leave
push
imul
divb
mov
jmp
mov
xchg
jb
movsl
movsb
cmpsb
outsb
push
inc
rorb
sbb
sahf
push
scas
jmp
imul
xor
sbb
push
pop
leave
add
movsl
ss
lods
rorl
rorl
adc
popf
nop
or
dec
pushf
ds
sub
xchg
adc
adc
daa
xchg
jno
sbb
xor
shll
cmp
mov
add
call
inc
mov
sub
sbb
imul
inc
mov
stos
pop
insl
arpl
leave
sbb
adc
out
ss
aaa
sbb
divb
mov
or
mov
push
xchg
lahf
mov
popa
mov
mov
movsl
lea
push
fbld
lret
neg
jb
cmp
mov
push
lahf
sub
sbb
flds
dec
loop
std
data16
mov
data16
jb
add
call
cmp
out
aaa
movsb
aad
lcall
dec
rep
xchg
xor
jl
xchg
fs
sub
jnp
adc
mov
lods
ficomps
movsl
push
pop
xlat
aad
push
dec
lods
xchg
xchg
icebp
mov
adc
out
push
ds
dec
stos
xor
mov
into
test
push
inc
inc
enter
pop
xchg
cmp
xchg
subl
cmp
outsl
adc
movsl
movsb
cmpsb
outsb
push
inc
adc
adc
ret
test
mov
mov
mov
call
div
add
fldt
push
addr16
xchg
and
xor
mov
mov
add
fidivrl
sahf
das
sbb
jnp
jl
mov
out
js
andb
lret
jle
sahf
mov
sbb
outsl
test
cli
xor
xchg
stos
shlb
sbbb
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pop
jl
pusha
iret
mov
push
xlat
and
jmp
loopne
xchg
cmp
jbe
xlat
loop
sbb
cwtl
adc
loope
mov
inc
dec
shll
add
test
call
rorl
push
cmpsl
lcall
mov
jmp
mov
adc
testl
std
cmp
shrb
pop
outsl
push
ljmp
xchg
lcall
xlat
adcl
add
add
jp
into
aad
insb
out
lcall
xchg
scas
pop
cmp
int
sub
andb
ljmp
push
movsb
fwait
sbb
or
imul
in
mov
mov
aaa
fwait
and
push
adc
mov
call
es
and
mov
sahf
iret
fidivrs
out
out
out
ret
daa
frstor
cltd
pop
adc
dec
cmpsb
stc
dec
and
int3
jo
call
aas
in
push
js
pop
push
jge
or
lahf
jno
sub
mov
fists
fsubs
jb
add
shll
icebp
rcrl
xchg
les
pop
mov
lret
in
insl
aad
scas
inc
cmp
or
and
insl
orl
add
call
into
push
aad
adc
mov
sbbl
jbe
into
imul
pop
test
scas
out
dec
movsl
jb
movsl
movsb
cmpsb
outsb
push
inc
pop
or
sarl
sahf
sub
dec
in
ja
push
inc
std
add
pop
mov
xor
push
pop
jb
sub
and
call
sub
adc
mov
adc
adc
dec
jp
inc
or
mov
xchg
mov
sub
lock
pop
jmp
xchg
test
add
add
call
lods
push
cltd
cltd
jecxz
flds
push
jb
movsl
movsb
cmpsb
outsb
push
inc
cmc
jmp
repz
xchg
dec
sub
movsl
sub
pop
mov
scas
xor
insb
cmpl
mov
xchg
lds
fdivrs
ret
xchg
adc
sub
jnp
stos
popa
cs
mov
push
ljmp
cld
push
gs
xlat
rcrl
jle
fldt
into
sub
add
pop
loope
dec
jg
daa
mov
adc
jb
movsl
movsb
cmpsb
outsb
push
inc
or
call
rolb
divb
mov
adc
call
ret
dec
adcb
adc
inc
lahf
mov
and
pop
cmp
in
jne
xchg
ja
xchg
lret
sbb
std
cmpb
call
xchg
mov
sub
enter
neg
enter
jge
sub
push
xchg
lds
std
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
or
jo
pusha
xchg
icebp
jns
fmulp
or
add
call
lret
adc
dec
aaa
add
cmp
xchg
xchg
jge
jae
dec
mov
inc
jge
and
fwait
cmpsb
std
out
push
add
xor
out
push
pop
sbb
out
cmp
in
ja
cwtl
add
mov
std
into
popa
insl
mov
sahf
jl
xlat
xor
rol
clc
test
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
andl
pop
mov
mov
cli
cwtl
dec
mov
je
push
shrl
mov
add
call
lods
es
stc
pusha
xchg
sbb
lock
sub
enter
lret
out
cmpl
mov
int
loopne
lods
push
cmpsb
or
fistpll
xchg
loopne
lds
xchg
scas
mov
sub
cmp
rclb
jns
add
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
lcall
outsb
fldl
adc
or
cmp
lods
mov
inc
xchg
xchg
aaa
add
pop
popf
nop
in
jle
add
call
mov
lahf
dec
jo
inc
xor
sub
pop
jo
test
test
push
andb
mov
mov
mov
pop
out
repz
push
jle
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
bnd
push
insl
aam
inc
cmp
or
jmp
rcll
mov
cmpb
and
xchg
mov
outsb
addb
jp
repnz
mov
add
call
int
jo
sahf
dec
outsb
mov
xchg
xorb
jno
fistps
add
add
pop
jo
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
and
call
mov
xchg
or
gs
out
add
xchg
jge
push
imul
int
cmpsl
ja
imul
pop
jge
ja
repnz
sub
int
outsb
in
outsb
xor
add
call
shll
sub
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pop
pop
push
rclb
cli
imul
insl
insb
push
mov
add
out
aaa
fs
cltd
int3
adc
shl
lods
cmpsb
and
fadds
xlat
iret
decb
add
ffreep
fs
out
adc
adc
xor
movsb
xchg
add
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
add
call
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
jecxz
adc
push
push
mov
enter
cmp
inc
adc
or
and
jns
add
ret
push
ret
mov
lcall
in
sbb
xor
fsubrl
mov
lods
pop
aas
les
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
mov
jecxz
adc
push
or
pop
pop
and
pop
andl
outsb
sub
fs
rorl
lcall
sub
out
jb
movsl
movsb
cmpsb
outsb
push
inc
std
sub
dec
ficomps
sbb
and
cli
pop
inc
enter
cmp
icebp
mov
push
jne
cmp
mov
pop
sub
xor
jecxz
lods
xlat
scas
data16
add
call
and
shl
iret
mov
dec
dec
sbb
jle
push
add
nop
cmp
mov
jl
dec
and
pusha
cltd
xor
and
cmpsl
mov
jne
or
cmp
in
mov
inc
adc
push
mov
mov
aad
inc
mov
xor
lret
adc
into
loop
mov
inc
jmp
fadd
mov
movsl
movsb
cmpsb
outsb
push
inc
insb
dec
out
bound
mov
xor
adc
mov
mov
jle
jg
outsb
mov
mov
mov
cmp
adc
adc
call
gs
push
cmp
cmpsb
outsb
push
inc
pop
mov
mov
cs
mov
js
lret
in
and
daa
inc
fisubl
leave
enter
dec
cmp
mov
out
leave
popl
push
test
ret
jnp
cltd
movsl
movsb
cmpsb
outsb
push
inc
popa
xchg
jne
dec
jle
push
adc
push
mov
in
iret
ss
adc
inc
arpl
jae
cmp
mov
out
mov
add
cmpsb
imul
sub
les
push
mov
call
in
xor
arpl
lods
sub
imul
cmp
and
enter
inc
dec
sub
mov
sbbl
dec
insb
add
in
and
adc
scas
xchg
fdivl
push
popf
cli
jp
sbb
cmpsl
shll
and
lcall
push
ret
es
sub
fbld
into
sbb
mull
lods
jp
sub
cmp
pusha
sub
xchg
xor
mov
jae
add
call
jecxz
lods
gs
aad
sub
jecxz
cmpsb
jno
mov
cmp
cmc
adc
mov
sub
push
adcl
jecxz
mov
loopne
loop
movsb
pop
sti
xor
stos
pushf
jmp
aas
jp
or
jge
xchg
fwait
aas
push
fistps
aad
pop
aas
sbb
inc
scas
in
shrb
inc
cs
or
sub
or
push
fucomi
orl
pop
add
je
sbbb
je
popf
add
sub
add
call
iret
sub
lret
insl
imul
cmp
pusha
adc
shll
pusha
add
mov
loop
mov
popa
les
pop
mov
jp
inc
aaa
mov
insb
call
jmp
lods
ja
jle
addr16
mov
inc
cwtl
jo
adc
lahf
out
lds
push
and
fcoml
jno
out
test
xor
mov
push
cmp
xor
in
ficoms
push
push
ss
dec
loop
inc
mov
mov
call
jecxz
mov
inc
mov
in
test
push
stc
popf
sub
inc
shlb
pusha
shl
jbe
mov
add
jae
aaa
mov
pop
ficoms
out
ret
es
fidivl
clc
std
add
pop
movsl
pop
or
add
dec
mov
loope
jge
ds
mov
sbb
fs
push
inc
inc
sub
rclb
adcl
stos
enter
or
popf
xchg
aas
scas
push
push
in
fmull
sahf
cwtl
jge
lock
add
call
adc
sarb
and
dec
and
aam
adc
lock
lock
mov
fwait
pop
cld
mov
movsl
movsb
cmpsb
outsb
push
inc
outsb
push
add
stos
addb
xor
push
jo
popf
cmp
jge
xor
das
andl
sbb
loopne
cmp
repnz
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
pop
hlt
lahf
and
mov
and
jae
aad
data16
outsl
fcmovnb
push
add
insl
orl
call
pusha
mov
cmp
or
adc
mov
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
lods
into
ficompl
sub
push
sbb
shlb
mov
imull
mov
test
cmp
sti
mov
sub
bnd
add
pop
push
sarl
adc
jo
dec
leave
or
or
push
mov
or
push
mov
in
enter
dec
sbb
call
mov
shrb
out
sub
add
add
call
mov
jnp
pop
add
enter
pop
inc
in
fwait
push
sbb
stos
cwtl
sbb
dec
push
and
gs
xor
iret
mov
jae
movsl
scas
push
ret
or
in
cmpsl
adc
test
mov
push
ljmp
lcall
movsl
inc
sbb
and
lea
and
adc
sbb
ret
adcl
mull
and
int3
push
jecxz
mov
loope
xchg
nop
subl
mov
or
aaa
lret
push
out
cwtl
add
call
push
fsubr
inc
push
sub
scas
or
sarb
ss
neg
fadds
or
lock
or
mov
loope
fs
outsl
inc
cmc
ror
arpl
movsl
movsb
cmpsb
outsb
push
inc
fisttpll
inc
fstps
sbb
push
or
xor
nop
popf
and
jle
icebp
add
mov
shld
test
adc
aad
lock
dec
mov
outsb
rcl
mov
lock
xor
popf
arpl
mov
jp
sbb
add
nop
incb
add
call
adc
cmpsl
iret
xor
dec
inc
push
jecxz
cmp
in
mov
and
adc
or
sub
rep
pop
jl
jmp
jg
push
jge
mov
shrl
pop
jno
lcall
pusha
or
ret
stc
jle
mov
imull
jo
add
sbb
xchg
sub
fisubs
mov
hlt
mov
js
mov
and
and
nop
jp
xor
dec
mov
and
xor
fidivs
loop
les
adc
add
call
daa
add
dec
test
lcall
cli
testb
sbb
shr
std
lock
xor
pop
xchg
mov
lock
fisttpll
push
clc
dec
addr16
jle
out
int3
cmc
bound
out
js
arpl
std
insl
xor
cltd
lret
and
and
aaa
mov
fnstcw
or
or
pop
inc
loope
dec
sti
cmc
xchg
popf
fdivrl
mov
stos
fstps
xchg
ror
mul
jno
add
call
movsb
fldenv
push
shlb
clc
out
cmpb
ret
loope
xor
jnp
push
mov
or
out
fisubrs
dec
imul
aas
jmp
xchg
or
xchg
jae
mov
mov
maxps
mov
push
movsl
xchg
inc
push
mov
sbb
add
nop
notl
sbb
mov
push
gs
dec
cmp
add
js
and
lcall
xchg
cmc
ret
add
call
loopne
ficomps
cmc
or
cmpb
mov
mov
testb
or
inc
lahf
mov
push
pop
mov
inc
dec
insl
ret
les
xlat
gs
add
jo
fs
pusha
mov
pop
sbb
fmull
jnp
repz
mov
mov
repz
outsb
repnz
pop
xchg
and
out
imul
mov
in
test
cli
xchg
and
and
out
xchg
push
add
add
call
adc
jp
movl
outsb
cltd
es
xor
mov
int3
mov
cs
notl
push
shl
or
decb
jnp
inc
pop
push
mov
ss
mov
dec
movsl
inc
dec
iret
jbe
cmc
cld
fcoml
addl
sub
add
mov
lods
arpl
cmp
lock
shll
fimull
add
into
jne
xchg
les
popa
mov
mov
rol
cmpsb
jo
add
call
xchg
int3
lods
in
xor
mov
int3
mov
cs
notl
sbb
mov
push
gs
dec
cmp
add
js
and
lcall
dec
mov
leave
test
mov
rol
sarl
gs
aas
je
aam
int3
pop
test
cmpb
add
mov
pushl
test
in
movsl
addl
xchg
mov
mov
mov
lds
mov
xchg
push
nop
loopne
insb
lods
adc
add
call
add
fldl
decb
jnp
jle
cli
xor
rcr
out
js
arpl
std
jle
nop
cs
es
jl
and
std
inc
jne
cltd
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
add
call
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
jb
movsl
movsb
cmpsb
outsb
push
inc
or
jle
sub
jae
ljmp
sarl
push
jp
xchg
pushf
jb
push
jp
sarl
push
jp
xchg
pushf
add
pushl
add
add
push
jp
sarl
push
jp
xchg
pushf
jb
push
jp
sarl
push
jp
xchg
pushf
jb
push
jp
sarl
push
jp
xchg
jl
dec
sub
cli
mov
or
xor
repnz
dec
dec
sub
mov
ret
mov
push
push
push
add
mov
mov
xor
mov
sub
call
cmpl
jne
mov
mov
mov
and
mov
push
shr
pop
add
push
add
lea
mov
mov
add
lea
cld
xchg
xchg
cmc
push
and
pop
clc
stc
test
cmp
mov
mov
add
mov
add
nop
push
cmp
pop
or
cmc
stc
stc
mov
add
mov
xor
xchg
cld
mov
add
mov
mov
cld
or
cmc
mov
dec
test
jb
inc
mov
mov
movzwl
xor
or
shl
test
push
sub
pop
or
stc
sub
cmc
mov
cmp
jbe
add
push
add
push
push
test
pop
pop
cld
test
cmc
nop
inc
cmp
ja
mov
mov
cmp
ja
add
cmp
jb
mov
mov
add
push
push
xchg
pop
pop
test
cmc
mov
call
mov
mov
xor
call
inc
dec
push
mov
pop
push
add
stc
cmp
jne
cmp
or
xor
cld
nop
mov
add
mov
jmp
addl
push
add
pop
push
push
push
or
pop
pop
pop
cld
nop
fnop
addl
decl
jne
mov
add
pop
pop
pop
ret
mov
push
push
push
push
push
mov
push
push
test
pop
pop
stc
test
or
nop
xor
mov
shr
clc
cld
call
mov
push
pop
test
or
push
dec
pop
test
jne
push
inc
pop
cld
test
mov
mov
mov
jmp
sub
push
push
mov
pop
pop
rol
or
mov
mov
lea
push
mov
pop
push
inc
pop
dec
inc
push
test
pop
push
push
pop
pop
add
mov
jmp
and
shl
test
xchg
nop
xor
add
mov
sub
test
je
cmpl
je
push
xor
pop
sub
nop
shl
shl
movzwl
mov
xor
call
cmp
jne
mov
mov
jmp
mov
test
je
cmp
jne
mov
pop
pop
pop
pop
pop
ret
lea
push
mov
xor
push
push
push
push
push
push
mov
xor
push
push
pushl
mov
movb
push
pop
test
or
push
dec
pop
mov
call
mov
push
or
pop
push
and
pop
sub
nop
mov
call
mov
test
lea
add
test
sub
nop
cmc
lea
mov
mov
call
mov
call
push
call
mov
cld
xchg
xchg
cmc
push
and
pop
clc
stc
test
cmp
lea
mov
mov
call
mov
call
push
call
mov
push
not
not
pop
cmc
nop
lea
mov
mov
call
mov
call
push
call
mov
and
test
test
lea
mov
mov
call
mov
call
push
call
mov
push
push
lea
pop
pop
clc
sub
clc
and
push
add
pop
cmp
or
cmc
mov
mov
cmpl
je
add
dec
jne
cmp
cmp
ror
ror
push
add
push
cmp
pop
add
mov
mov
call
mov
nop
rol
push
not
not
pop
or
cmp
push
pop
cmpl
je
sub
push
test
pop
test
mov
mov
call
mov
cld
xchg
xchg
cmc
push
and
pop
clc
stc
test
cmp
cmpl
je
test
lea
add
test
sub
nop
cmc
mov
mov
call
mov
rol
test
test
stc
cmpl
je
push
push
add
pop
pop
push
inc
pop
mov
mov
call
mov
test
dec
inc
test
sub
add
clc
cmc
add
cmpl
je
test
push
add
sar
add
xor
xor
cld
stc
mov
mov
call
mov
push
add
clc
shl
stc
cld
cmpl
je
ror
and
mov
mov
mov
call
mov
push
push
mov
pop
pop
nop
push
add
nop
dec
inc
sub
stc
cmpl
je
push
shl
pop
xor
nop
mov
mov
call
mov
add
or
sar
cld
add
cmpl
je
push
push
lea
pop
pop
clc
sub
clc
and
push
add
pop
cmp
or
cmc
mov
mov
call
mov
test
and
add
stc
push
test
pop
ror
clc
nop
cmpl
je
cld
push
push
push
add
pop
pop
pop
cld
cmp
xor
lea
mov
mov
call
mov
nop
mov
cmc
neg
neg
push
push
mov
pop
pop
sub
cmpl
je
push
push
push
mov
pop
pop
pop
push
cmp
pop
push
add
nop
mov
mov
call
mov
push
not
not
pop
cmc
nop
cmpl
je
not
not
cld
or
push
mov
pop
clc
mov
mov
call
mov
push
push
mov
pop
pop
push
or
pop
push
and
pop
cmpl
je
sub
and
xor
xchg
xchg
clc
rol
cmc
cmc
stc
nop
mov
mov
call
mov
push
add
pop
push
dec
pop
cmpl
je
test
push
and
pop
or
cld
nop
mov
mov
call
mov
push
push
inc
pop
pop
push
push
pop
pop
cmpl
je
or
mov
mov
call
mov
push
mov
pop
push
inc
pop
dec
inc
push
test
pop
push
push
pop
pop
add
cmpl
je
push
push
test
pop
pop
rol
push
push
add
pop
cld
mov
mov
call
mov
and
sub
sub
rol
push
push
mov
pop
pop
and
lea
cmpl
je
cmp
add
test
cmp
xchg
nop
mov
mov
call
mov
push
or
pop
cmpl
je
push
push
mov
pop
pop
nop
push
add
nop
dec
inc
sub
stc
mov
mov
call
mov
or
and
test
inc
dec
fnop
clc
cmpl
je
stc
nop
and
cld
push
pop
mov
mov
call
mov
or
xor
push
dec
pop
cmpl
je
and
add
cld
mov
mov
call
mov
add
cld
cld
cld
cmpl
je
push
push
push
mov
pop
pop
pop
rol
xchg
xchg
mov
mov
call
mov
not
not
cld
or
push
mov
pop
clc
cmpl
je
rol
push
push
test
pop
pop
ror
mov
mov
call
mov
sar
nop
nop
cld
cmpl
je
nop
sub
push
push
push
pop
pop
pop
push
push
pop
pop
cld
mov
mov
call
mov
or
rol
cmp
ror
sub
clc
cmc
cmpl
je
add
clc
xor
or
test
stc
clc
mov
mov
call
mov
push
shl
pop
cmpl
je
push
push
inc
pop
pop
push
push
pop
pop
mov
mov
call
mov
and
cld
cmpl
je
push
cmp
pop
mov
mov
call
mov
push
xor
pop
sub
nop
shl
shl
cmpl
je
inc
dec
lea
xor
or
std
cld
mov
mov
call
mov
add
clc
xor
or
test
stc
clc
cmpl
je
movb
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
mov
pop
ret
add
decl
add
add
jne
imul
decl
add
add
push
jp
es
arpl
add
decl
add
add
dec
imul
add
decl
add
add
outsl
inc
insl
cmp
xor
jp
add
decl
add
add
inc
inc
jns
jne
inc
push
add
decl
add
dec
jl
dec
jns
and
jo
je
add
add
decl
add
add
push
inc
insl
outsl
imul
decl
add
add
jge
inc
dec
pop
sub
push
add
shlb
leave
jle
push
push
xor
lea
mov
shr
xor
xor
inc
dec
jne
pop
pop
ret
add
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
or
and
or
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
stc
add
mov
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
pop
popa
mov
into
push
mov
je
mov
aam
movsl
fisttps
xchg
fdivrs
sti
hlt
shrl
imul
mov
sarb
add
in
add
pop
dec
or
cmp
add
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
or
lret
pop
or
adc
sahf
gs
clc
sar
imul
insb
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
imul
jo
jb
addr16
sub
xor
cmp
and
and
outsb
and
fs
popa
outsb
outsb
mov
shlb
add
add
ret
lea
push
push
push
mov
mov
nop
cmp
push
push
mov
pop
pop
sub
add
mov
mov
mov
mov
call
add
dec
jne
test
push
pop
shr
clc
pop
pop
pop
ret
nop
push
add
mov
push
lea
push
push
call
mov
mov
mov
call
add
pop
ret
mov
push
mov
add
push
mov
mov
call
xor
push
push
pushl
mov
test
add
rol
clc
and
cmc
lea
push
mov
call
push
call
cmp
setne
push
xor
pop
sub
nop
shl
shl
test
je
push
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
or
add
or
add
or
inc
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
hlt
sub
adc
add
jo
jns
inc
push
fs
jo
pop
jae
inc
pop
push
pop
jae
imul
dec
inc
inc
dec
dec
imul
mov
test
je
add
call
test
je
call
popl
add
ret
xor
mov
mov
call
ret
nop
mov
cmpl
jne
mov
mov
mov
mov
movl
ret
nop
push
push
push
push
add
mov
mov
mov
mov
mov
lea
movzbl
mov
and
jns
dec
or
inc
test
jns
add
sar
mov
mov
and
setne
mov
inc
inc
dec
jne
xor
mov
mov
mov
mov
xor
lea
movzbl
add
cmp
jge
mov
mov
mov
mov
jmp
mov
mov
mov
mov
inc
inc
cmp
jne
lea
xor
mov
call
xor
mov
xor
mov
cmpb
je
mov
mov
cltd
idiv
mov
mov
mov
cltd
idiv
xor
mov
shr
or
inc
inc
cmp
jne
cmpb
je
xor
mov
shl
xor
mov
shl
or
xor
mov
shl
or
xor
mov
or
mov
mov
xor
mov
shl
xor
mov
shl
or
xor
mov
shl
or
xor
mov
or
mov
mov
jmp
xor
mov
shl
xor
mov
shl
or
xor
mov
shl
or
xor
mov
or
mov
add
mov
inc
mov
sub
mov
mov
xor
mov
shl
xor
mov
shl
or
xor
mov
shl
or
xor
mov
or
mov
sub
mov
mov
incl
addl
inc
cmpl
jne
mov
mov
mov
add
pop
pop
pop
pop
ret
mov
push
push
mov
mov
mov
rol
shr
mov
mov
mov
pop
mov
mov
mov
rol
shr
mov
mov
mov
pop
ret
mov
push
mov
mov
rol
shr
mov
mov
mov
mov
mov
rol
shr
mov
mov
mov
pop
ret
push
push
mov
mov
shr
xor
and
xor
shl
xor
mov
shr
xor
and
test
push
push
push
pop
pop
pop
push
test
pop
nop
clc
stc
xor
shl
xor
mov
shr
xor
and
xor
shl
xor
push
xor
pop
test
sub
push
cmp
pop
mov
shr
xor
and
xor
shl
xor
mov
add
mov
shr
or
mov
mov
xor
and
push
rol
pop
xor
xor
mov
add
mov
shr
or
mov
pop
pop
ret
mov
push
mov
mov
mov
shl
mov
shr
or
mov
mov
xor
and
xor
xor
mov
shr
mov
shl
or
mov
mov
shr
xor
and
xor
test
rol
shl
xor
mov
shr
xor
and
xor
shl
xor
mov
shr
xor
and
xor
shl
xor
mov
shr
xor
and
xor
shl
xor
pop
ret
lea
push
push
push
push
add
mov
mov
mov
and
or
clc
lea
lea
mov
call
lea
lea
call
add
cld
cld
cld
mov
mov
mov
shr
mov
shl
or
xor
add
push
test
pop
add
push
inc
dec
pop
push
push
or
pop
pop
mov
and
mov
xor
mov
shr
and
mov
xor
mov
shr
and
mov
xor
shr
and
mov
xor
and
nop
cmp
clc
cld
mov
xor
add
mov
and
mov
xor
mov
shr
and
mov
xor
mov
shr
and
mov
xor
push
or
pop
clc
shr
shr
and
mov
xor
mov
shr
mov
shl
or
xor
add
mov
and
mov
xor
mov
shr
and
mov
xor
push
push
test
pop
pop
shl
push
mov
pop
test
push
inc
pop
mov
shr
and
mov
xor
shr
and
mov
xor
mov
xor
add
mov
and
mov
xor
xor
push
push
or
pop
pop
push
or
pop
mov
shr
and
mov
xor
mov
shr
and
mov
xor
shr
and
mov
xor
dec
jne
lea
lea
call
push
push
mov
pop
pop
sub
mov
mov
mov
call
add
pop
pop
pop
pop
ret
push
add
mov
mov
mov
call
push
sar
pop
push
mov
pop
clc
cmp
test
mov
mov
xor
call
and
add
cld
lea
lea
mov
call
add
pop
ret
nop
push
push
mov
mov
push
mov
pop
push
mov
pop
mov
mov
call
mov
lea
call
push
push
inc
pop
pop
push
push
pop
pop
mov
mov
call
pop
pop
ret
lea
push
mov
add
push
push
push
mov
mov
cmp
nop
mov
call
mov
mov
call
mov
stc
nop
and
cld
push
pop
mov
call
mov
xor
push
push
pushl
mov
push
dec
pop
or
push
test
pop
or
xchg
lea
mov
call
test
jns
add
sar
mov
or
shl
test
push
sub
pop
or
stc
sub
cmc
mov
sub
test
jl
inc
xor
mov
shl
add
lea
mov
call
lea
lea
call
push
pop
test
or
push
dec
pop
lea
mov
shl
add
mov
call
inc
dec
jne
add
cld
cld
cld
mov
dec
mov
shl
add
lea
mov
call
or
and
test
inc
dec
fnop
clc
lea
lea
call
lea
movzbl
lea
mov
shl
add
mov
call
test
rol
mov
dec
mov
shl
add
mov
mov
call
test
push
sub
pop
push
inc
dec
pop
push
push
ror
pop
pop
cmc
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
push
xor
mov
mov
mov
mov
xor
push
push
pushl
mov
push
push
inc
pop
pop
and
cmc
mov
call
mov
call
mov
test
push
xor
pop
clc
shl
cmpl
jle
mov
call
test
jle
mov
call
mov
test
jle
mov
test
push
and
pop
or
cld
nop
mov
dec
cltd
idivl
mov
mov
mov
cmp
add
test
cmp
xchg
nop
mov
cmp
jb
mov
and
xor
mov
jmp
cmp
jb
mov
and
xor
mov
jmp
cmp
jb
mov
and
xor
mov
jmp
mov
push
cmp
pop
push
pop
lea
mov
call
mov
mov
call
mov
inc
dec
jne
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
push
shl
pop
cmpl
jbe
mov
add
jmp
and
push
dec
pop
xor
xor
cmc
mov
add
mov
mov
add
cmp
nop
mov
sub
mov
xor
mov
fildll
fdivs
call
dec
test
jb
inc
mov
movzwl
shr
mov
and
movzwl
push
or
pop
cmp
jne
mov
add
test
or
test
clc
mov
add
add
dec
jne
mov
add
mov
cmpl
ja
pop
pop
pop
mov
pop
ret
add
add
add
push
push
add
mov
mov
mov
mov
add
fnop
push
push
add
pop
pop
stc
mov
call
mov
mov
mov
call
lea
push
or
pop
nop
cmc
push
dec
pop
lea
mov
mov
mov
call
mov
dec
test
jb
inc
mov
xor
mov
mov
add
add
movzwl
shl
lea
add
push
push
xchg
pop
pop
test
cmc
mov
add
mov
add
mov
xchg
call
inc
dec
jne
mov
pop
pop
pop
pop
pop
ret
push
mov
push
push
add
pop
push
sub
pop
rol
push
inc
pop
push
dec
pop
nop
push
push
push
push
push
call
mov
mov
test
or
or
push
add
pop
cmp
cmpl
je
jmp
inc
mov
mov
mov
and
test
jne
pop
ret
lea
push
mov
add
xor
xchg
cld
lea
xor
mov
call
mov
add
xor
mov
call
add
cmp
nop
push
test
pop
stc
test
stc
movl
mov
movzbl
mov
push
mov
pop
push
mov
pop
mov
add
push
lea
push
push
push
push
push
push
push
mov
mov
call
push
mov
mov
call
push
call
cmp
sbb
inc
mov
pop
ret
push
mov
add
push
push
push
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
push
mov
pop
shl
push
dec
pop
cld
push
cmc
pop
clc
shr
nop
cmpl
je
push
pushl
push
pushl
lea
mov
call
movb
mov
sub
test
rol
cmp
push
pop
cld
mov
cmpw
jne
mov
mov
add
test
cld
cld
or
cmc
cmpl
jne
shr
clc
cld
push
call
pop
test
je
lea
call
mov
push
push
xchg
pop
pop
test
cmc
test
jne
push
mov
push
call
jmp
movl
nop
and
push
push
push
pop
pop
pop
or
push
or
pop
cmc
lea
push
mov
push
call
test
jne
push
push
mov
push
push
call
push
mov
push
call
jmp
push
ror
pop
add
push
cltd
pop
lea
push
push
lea
push
mov
add
push
mov
push
call
shl
push
push
or
pop
pop
clc
push
pop
rol
nop
mov
cmp
jne
mov
push
mov
push
call
test
jne
push
push
mov
push
mov
push
mov
push
call
mov
jmp
push
push
mov
push
push
mov
push
call
mov
jmp
push
push
mov
push
mov
push
mov
push
call
mov
inc
dec
lea
xor
or
std
cld
cmpl
jne
push
push
mov
push
push
call
push
mov
push
call
jmp
push
or
pop
clc
nop
nop
mov
call
mov
mov
cmp
je
lea
push
test
pop
cld
and
stc
mov
sub
push
push
push
call
mov
mov
ror
and
mov
mov
mov
add
mov
mov
call
sub
test
rol
cmp
push
pop
cld
lea
push
mov
push
push
mov
push
mov
push
call
lea
push
push
lea
push
mov
add
push
mov
push
call
push
or
pop
push
and
pop
sub
nop
mov
add
mov
push
mov
push
call
or
lea
shl
push
xor
pop
inc
dec
mov
push
call
cmpl
setne
rol
mov
push
push
mov
push
push
call
cmpb
jne
push
mov
push
call
push
push
mov
pop
pop
cmc
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
incl
add
add
add
add
incl
add
add
and
add
in
push
push
mov
mov
mov
mov
add
lea
mov
call
mov
addl
cmpl
je
mov
mov
call
mov
call
mov
mov
mov
add
mov
call
mov
mov
add
pop
pop
pop
ret
nop
push
mov
push
mov
mov
mov
add
lea
mov
call
mov
incl
mov
pop
pop
ret
lea
push
mov
xor
push
push
push
push
push
push
push
push
mov
xor
push
push
pushl
mov
cmp
add
test
cmp
xchg
nop
xor
mov
push
lea
call
pop
mov
lea
call
cmc
or
push
push
pop
pop
sar
push
call
pop
mov
test
jne
add
or
sar
cld
add
lea
call
push
lea
call
pop
mov
lea
call
cmp
je
push
push
test
pop
pop
stc
test
or
nop
mov
call
test
jne
lea
call
push
lea
call
mov
mov
call
push
shl
pop
xor
nop
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
mov
pop
ret
lea
push
mov
push
push
xor
push
push
pushl
mov
xor
mov
mov
sub
je
inc
cmp
jne
inc
jmp
push
add
nop
push
ror
pop
xor
xchg
and
cmp
xchg
test
or
or
push
add
pop
cmp
push
push
mov
pop
pop
cmc
lea
call
cmpl
je
push
add
cmc
nop
cld
lea
mov
call
mov
lea
call
mov
nop
cmp
push
push
mov
pop
pop
sub
add
add
or
nop
or
lea
call
call
push
push
shl
pop
pop
push
sub
pop
cmc
nop
xor
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
ret
nop
push
mov
cmpb
je
incl
pop
ret
mov
push
mov
cmpb
je
mov
cmp
jl
movb
movb
call
pop
ret
push
mov
movb
push
push
push
push
call
mov
pop
ret
mov
push
mov
movb
push
push
push
push
call
mov
pop
ret
mov
push
mov
xor
push
push
pushl
mov
mov
mov
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
lea
push
add
add
popf
dec
add
cmp
inc
add
inc
add
cmp
inc
add
ds
add
ds
add
inc
add
inc
add
add
add
add
in
add
push
mov
call
mov
call
call
test
je
push
push
add
pop
push
push
test
pop
pop
movb
movb
movl
movl
mov
call
mov
call
jmp
push
call
push
call
push
push
push
push
call
test
jne
cmp
cmp
ror
ror
push
add
push
cmp
pop
add
pop
call
nop
