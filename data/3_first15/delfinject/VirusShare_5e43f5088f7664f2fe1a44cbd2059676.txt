mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
outsl
testl
pop
dec
outsb
je
addr16
and
rcrb
xor
add
jns
insb
daa
push
outsl
jb
add
pop
jns
incl
outsb
fsub
sti
pop
add
scas
adc
std
mov
nop
mov
or
jae
jb
or
push
out
or
aas
add
mov
mov
les
sub
jns
pop
push
dec
bound
arpl
pop
sbb
lock
pushf
insl
xor
int
jl
dec
jmp
arpl
sar
cmp
int3
addl
jmp
fdivrp
and
adc
int3
popa
mov
ja
ja
xchg
subl
pop
push
cld
sbb
out
aas
addw
add
add
cmp
adc
adc
std
lods
dec
jo
loope
adc
or
movsb
fldcw
insl
cmp
mov
push
pushf
in
in
cwtl
xchg
nop
adc
in
in
mov
adc
in
in
jo
push
in
pop
pop
push
in
in
or
dec
dec
jns
xor
cld
daa
clc
hlt
inc
sub
daa
call
sahf
cmp
cmp
icebp
loop
dec
sub
add
mov
mov
add
movzwl
mov
ss
pop
ret
addr16
sub
and
stos
cmp
add
popa
lcall
je
jb
inc
and
je
outsl
outsb
and
xor
in
in
adc
push
imul
push
jb
data16
push
mov
push
push
je
popa
clc
adc
gs
insb
outsl
jo
repnz
cmpxchg
ret
lods
jge
jmp
mov
mov
dec
add
inc
or
shll
or
or
or
in
push
dec
adc
push
adc
scas
xor
rcll
adc
fildll
fildll
mov
mov
add
sbb
cs
jp
add
imul
aas
inc
and
dec
in
pusha
cmpsb
sub
inc
dec
ror
xor
sub
xor
xor
cs
pop
xor
cmp
mov
mov
pop
cmp
das
rorl
sub
add
add
neg
std
insl
mov
mov
jl
push
cmp
add
js
enter
and
mov
inc
pop
add
mov
mov
cmc
mov
add
nop
fildl
rorl
push
sub
mov
shr
out
jg
add
mov
mov
and
pop
mov
out
clc
jge
add
ljmp
ja
mov
sbb
and
add
xchg
mov
dec
mov
mov
add
jbe
rol
sti
shl
or
sbb
in
push
stc
ret
cmpl
sbb
scas
loop
adc
inc
cld
add
orl
adc
dec
add
sbb
push
add
cmp
dec
pop
mov
jle
and
sub
test
push
mov
pusha
push
mov
inc
not
add
push
and
add
jbe
push
add
push
int
add
rclb
or
push
jbe
pop
mov
lods
mov
loop
mov
out
mull
cmpb
mov
sub
mov
mov
sub
sbb
xor
stc
out
mov
nop
cmpb
jmp
fstpt
imul
mov
add
add
clc
test
push
xor
add
add
push
push
push
mov
lea
movb
or
rorl
fwait
and
xchg
or
add
sub
mov
or
ja
push
jle
jg
pop
or
or
imul
lret
outsb
ret
adc
pop
pop
icebp
sti
pop
dec
mov
mov
sub
jae
in
mov
fidivrs
adc
mov
push
and
or
test
jne
in
std
dec
xchg
loop
jns
add
jmp
or
sbb
or
mov
mov
and
push
push
lea
or
push
jg
in
inc
or
push
jne
push
push
mov
cmp
rorb
pushl
sub
add
jmp
test
jne
lods
fimull
and
fisubrs
in
std
add
and
inc
loopne
repnz
sub
pusha
mov
adc
jecxz
jmp
fidivrs
loope
pop
pop
mov
mov
sarl
jbe
ljmp
shl
adc
xchg
xor
push
mov
call
cmpl
test
jo
fs
mov
xchg
adc
cmp
jae
mov
push
aas
dec
and
jae
fmuls
add
lods
iret
lea
movsb
sbb
es
sbb
mov
rolb
pop
or
pusha
jmp
lds
mov
jmp
mov
push
std
sub
add
add
inc
ret
push
mov
iret
fcomip
pop
mov
or
sub
shr
cmp
jb
sub
mov
addb
das
dec
and
out
mov
subl
cwtl
and
cmp
pusha
bound
dec
les
je
mov
dec
jo
push
mov
lock
mov
mov
push
add
idiv
je
sti
jg
test
add
movzwl
add
cmp
ja
dec
jbe
mov
cmp
adc
inc
loope
es
mov
lahf
jno
rorl
xorl
pause
jns
aas
jb
imul
jae
lods
cmp
ljmp
adc
je
xchg
or
jg
loopne
mov
sub
mov
add
or
mov
leave
cld
mov
cmp
push
ja
push
test
add
mov
xlat
jne
mov
test
btr
loopne
sarl
or
add
or
dec
jnp
sub
lea
mov
inc
jmp
sbbb
add
scas
fildll
cmp
jb
mov
xchg
in
idiv
int
enter
iret
sub
sub
cmp
and
inc
or
mov
rclb
mov
mov
movl
dec
cld
xor
das
mov
mov
pop
pusha
add
adc
scas
fsubrs
adc
push
or
imull
iret
mov
addr16
sub
dec
jecxz
xor
mov
lds
fucomip
movsb
or
faddl
pop
jle
xor
jne
lea
hlt
add
cld
or
pushl
and
inc
mov
fmuls
rol
or
jmp
mov
lahf
insl
pop
mov
add
push
bsf
mov
push
loopne
rol
loopne
xor
sbb
sub
xor
cmp
pop
cld
jmp
mov
dec
mov
ret
pop
or
inc
bound
cmp
cmp
adc
test
push
pop
xorb
jb
out
subl
or
testl
fisttps
jns
shll
test
roll
out
sbb
mov
jne
subl
icebp
leave
ds
inc
inc
cmpsb
leave
adc
fadds
data16
xchg
dec
cltd
sarb
pop
mov
test
adc
aad
push
aad
xchg
inc
adc
cmp
jne
outsb
fs
cwtl
and
push
cld
iret
push
icebp
push
dec
rorl
sub
xchg
scas
ljmp
mov
pop
leave
outsl
xor
dec
mov
jmp
aaa
inc
add
call
roll
fmull
scas
testl
sub
xor
testb
dec
ret
lahf
lock
cmp
inc
fiadds
mov
popa
ret
xor
xchg
mov
xlat
mov
mov
je
add
cmp
das
ret
pop
dec
clc
sub
sub
mov
xor
xchg
mov
lahf
mov
stos
flds
pop
out
add
movsl
movl
in
movl
loopne
add
jno
shr
dec
roll
pusha
aad
popa
in
or
in
or
cmp
jb
sbb
sbb
lret
jb
pop
inc
popa
jo
cmp
rorb
mov
ret
jg
or
decb
movsb
test
lea
push
mov
loop
roll
jne
and
add
hlt
sub
jbe
clc
iret
mov
call
xchg
xor
ljmp
cmp
push
and
cmp
push
fsts
sub
cmp
jb
sbb
push
pop
sti
adc
sub
adc
add
jp
jnp
and
stos
jmp
sbb
loopne
lds
add
sub
cmp
xchg
dec
das
push
jge
inc
mov
push
cmp
pop
cld
icebp
dec
or
or
mov
push
mov
add
or
popl
pop
data16
mov
roll
xlat
jno
pop
pop
sub
clc
addl
sahf
sub
add
mov
cmp
stc
call
icebp
inc
cld
test
mov
sbb
xchg
sbb
add
ljmp
cmpsb
imul
cmpsb
sarl
je
iret
ja
cmp
pop
es
pop
mov
call
ljmp
rolb
xlat
add
test
add
shlb
push
ret
andl
push
add
push
ss
adc
jb
lea
jl
inc
sbb
mov
push
pop
add
outsb
mov
dec
add
pop
sarl
jl
test
dec
iret
push
gs
add
xchg
aas
loop
cmp
ds
cmpsl
and
imulb
push
lea
jecxz
ja
fucomip
lea
or
jae
mul
xchg
fcmovnu
out
fstl
add
js
or
sar
mov
mov
das
ss
mov
faddl
rorl
ret
inc
incl
rolb
sbb
push
aad
adc
adc
jmp
jae
rclb
adc
aad
sub
and
jle
cmp
jne
mov
cmp
jbe
mov
mov
sub
sbb
test
sub
mov
stos
push
lods
pushf
jno
mov
cmpsl
push
mov
mov
cld
mov
fs
mov
loop
pop
shr
sbb
mov
add
enter
mov
fadds
insl
rcr
incl
aas
wbinvd
shrl
xchg
add
jbe
aaa
sbb
pop
push
nop
lret
sbb
sbb
add
jb
sbb
test
jg
aas
insb
dec
add
js
adc
inc
add
icebp
mov
loope
inc
inc
and
addr16
mov
push
aaa
loopne
cs
cli
mov
arpl
push
ljmp
jbe
or
mov
lock
push
jae
ss
mov
push
adc
mov
icebp
add
push
mov
inc
sbb
add
push
adc
hlt
jne,pn
push
testb
je
adc
hlt
pop
dec
sub
jmp
mov
pop
pop
push
bound
out
or
loop
call
mov
jge
push
data16
ret
lcall
mov
push
cmp
jne
test
daa
dec
movb
jnp
out
pop
lea
mov
and
lock
push
rcrl
pop
testl
and
shlb
jno
fstpl
pop
mov
dec
scas
mov
mov
stc
es
sbb
xor
inc
setne
xchg
sti
movsb
sub
aas
inc
sbb
inc
icebp
ficoms
adc
add
jp
and
xchg
mov
out
mov
or
outsb
lock
push
push
rorl
jl
inc
pop
mov
cmp
jne
fldt
push
mov
and
sti
jbe
or
jne
mov
ja
loopnew
cld
mov
cmp
sub
call
loopne
fists
ret
decl
inc
in
adc
shlb
mov
jns
adc
mov
adc
fcomps
push
rorb
movb
data16
test
pop
mov
je
mov
push
sub
jnp
push
or
cmpl
mov
xor
int3
or
dec
or
mul
clc
mov
inc
out
adc
test
jle
sbb
cmpb
out
fwait
enter
cmpb
jb
jo
mov
add
dec
loopne
test
mov
push
sub
cli
cmp
je
or
sahf
jge
cmp
in
movq
or
push
inc
fiadds
add
adc
mov
andb
xchg
aam
icebp
or
in
xchg
push
mov
pop
mov
mov
push
dec
jne
data16
test
push
xchg
ret
lea
sub
sti
push
and
inc
add
jo
lock
clc
push
cmp
lcall
or
inc
push
jb
call
jle
inc
les
add
or
push
cmc
inc
scas
loopne
pop
jmp
mov
and
xchg
fisttpll
sub
mov
and
fdivr
or
in
int3
loope
xchg
cmp
cmp
jecxz
jne
mov
int3
sub
jb
ss
mov
sbb
aaa
adc
daa
mov
jae
in
xchg
scas
ds
or
sti
mov
jge
dec
jl
cmpb
cmpsl
adc
negl
xchg
mov
xchg
dec
mov
fadd
test
jp
mov
adc
dec
jb
sahf
mov
cmpsb
cld
dec
loopne
shrl
add
scas
in
scas
mov
mov
xlat
mov
or
ds
repz
xchg
fcomps
cmp
rolb
movb
inc
push
or
pop
inc
loopne
int
dec
adc
and
sbb
mov
imul
fs
out
pop
sbb
pop
jmp
mov
xorl
push
and
sarb
xchg
movzbl
scas
fldcw
dec
das
js
pop
pop
jno
pop
dec
pusha
or
xor
push
pop
incl
add
andl
fdivp
push
lcall
sub
stos
push
sbb
filds
imul
lds
js
outsl
mov
testl
mov
or
imul
into
mov
push
xchg
push
push
xor
insb
adc
mov
push
ss
outsb
and
gs
ljmp
loopne
enter
insl
gs
outsl
jb
pop
popa
imul
popa
jae
outsl
add
arpl
fs
incb
pop
jae
popa
insb
insb
and
dec
imul
or
or
es
mov
addr16
outsb
imul
outsb
add
idivb
jae
xchg
jp
mov
cltd
xorl
nop
outsb
and
jo
mov
lahf
mov
das
cmp
dec
cli
push
push
xor
xor
mov
jb
movl
in
pop
mov
into
add
add
clc
jbe
mov
add
inc
add
cmp
jne
mov
xchg
mov
cmpsb
push
mov
cmp
jl
in
inc
clc
or
sbb
movl
jmp
add
out
into
dec
xor
jae
mov
rolb
cmp
jbe
ja
dec
mov
pushl
push
in
loopne
add
mov
mov
xor
loope
lea
add
shll
mov
mov
aaa
lret
jbe
mov
cmp
xlat
mov
push
pop
int
xor
div
imul
mov
or
mov
icebp
mov
in
dec
inc
xor
hlt
sbb
movl
mov
mov
mov
jnp
inc
add
or
repz
cmp
xor
lods
jb
push
mov
out
ficoms
jne
mov
jmp
mov
sarl
cmp
xchg
push
mov
cmp
jne
mov
ret
out
mov
dec
adc
insb
inc
or
or
or
and
stos
sbb
cmp
imul
dec
mov
outsl
push
sbb
mov
mov
push
out
lea
cmpl
jg
mov
jge
mov
sub
mov
iret
popf
iret
or
pop
sbbb
sbb
pushf
movl
dec
adc
repz
ret
mov
add
call
sub
mov
xor
adc
addr16
sar
jg
add
xor
mov
inc
xor
or
xor
mov
test
cld
pusha
jo
arpl
ss
pop
mov
mov
mov
lds
sbb
mov
mov
inc
mov
mov
enter
cmpsl
lock
out
adc
test
xchg
add
jecxz
sahf
or
in
aam
in
or
hlt
jne
mov
push
cwtl
lahf
cwtl
push
jmp
cmp
ja
movzbl
add
inc
movsb
neg
or
pop
nop
scas
push
add
fucomp
or
loopne
push
push
xor
pop
pop
jne
ds
js
mov
out
call
iret
pop
testb
inc
or
je
ljmp
outsl
pop
jle
cmp
jg
sub
inc
fdivrl
sarl
mov
inc
repz
decl
mov
jmp
mov
jmp
mov
insb
adc
pop
repz
cmp
fmull
cmp
je
cmp
ja
sub
mov
jmp
and
in
sub
sub
or
adc
adc
int3
inc
push
push
or
int3
rorl
dec
dec
sahf
out
sahf
pop
popa
insb
jns
push
mov
lea
dec
or
adc
flds
fsubrp
push
add
cmp
jle
loopne
fisttpl
or
shrl
lret
adc
jbe
adc
mov
add
and
sub
pop
inc
cmc
pop
incl
insl
aas
fmuls
mov
or
xlat
fucomp
ja
inc
add
mov
push
and
add
mov
into
dec
add
pop
cmp
push
add
stos
mov
adc
ret
mov
jbe,pn
fucomp
or
inc
lock
or
jbe
and
cmpb
add
xor
std
in
mov
jmp
sub
mov
fimuls
fisubrs
ret
add
js
inc
mov
adc
push
out
mov
outsl
mov
inc
nop
mov
pop
jne
pusha
push
nop
arpl
loopne
or
out
add
inc
sbb
iret
frstor
orl
pop
clc
mov
fidivl
mov
jo
divb
push
add
fisubl
fnstsw
jmp
mov
fbstp
and
mov
add
dec
jmp
mov
clc
ljmp
or
mov
add
movsl
out
das
pop
xor
imul
dec
cmc
mul
xor
cmp
ja
sub
call
mov
fldcw
cmp
pop
outsl
ja
insl
push
sub
adc
or
fstps
testb
fwait
orw
insb
fistps
add
pop
xchg
stos
neg
sub
pop
inc
lods
sub
repnz
or
or
nop
daa
sbb
dec
add
jmp
data16
mov
or
call
lods
sbb
pop
cmp
js
cmpsb
pop
cmp
and
mov
inc
and
cli
mov
sbb
cwtl
aas
mov
mov
imul
ja
and
adc
xor
add
sbb
fcomip
adc
lahf
jmp
cmp
dec
shr
mov
pushl
ds
mov
mov
xor
mov
inc
add
jb
cmp
ja
mov
push
shll
pop
add
xlat
xor
mov
sub
std
in
pcmpeqd
mov
sub
inc
xchg
xchg
stc
mov
sbb
lret
jbe
mov
mov
inc
inc
loopne
test
mov
add
push
xchg
inc
inc
in
mov
ret
je
mov
mov
cmp
jne
dec
je
mov
add
pop
add
aaa
add
sahf
loop
sti
scas
fidivl
add
push
cmp
jne
push
mov
mov
cmp
jne
adc
add
jne
add
jmp
dec
in
adc
cmp
jne
shr
sarl
add
push
mov
shr
or
test
cmp
pop
cmp
mov
rol
pop
and
mov
cmp
int
or
dec
dec
dec
and
andb
xlat
add
cli
clc
int
cmp
das
movsb
pusha
push
add
ljmp
or
cmc
add
push
add
outsl
fistpl
neg
sub
or
rcl
push
mov
ss
add
idiv
cmp
push
sub
xchg
jmp
sahf
out
iret
cs
sbb
sbb
push
adc
sahf
out
adc
push
or
adc
es
push
or
ret
pop
mov
mov
mov
push
inc
cmp
out
sti
and
add
je
and
rcr
int
je
pop
je
xor
dec
and
std
pop
mov
test
jmp
or
or
cmp
ja
test
and
fcoms
out
int
or
incl
jmp
inc
mov
fdivrs
js
pop
sub
jmp
inc
inc
sub
popf
cmc
jmp
mov
xorb
cmpsb
popf
mov
xchg
and
add
or
pusha
xchg
scas
leave
shl
stos
aad
cwtl
pop
cmp
sbb
xor
mov
mov
push
cmp
sbb
mov
dec
jne
pop
testb
mov
and
xchg
dec
cs
shr
fs
jl
pusha
xor
cmp
cmpl
adc
in
fldt
leave
enter
loop
jns
pcmpeqb
cmp
adcb
push
and
jmp
pop
xchg
lret
xchg
jge
mov
xor
pop
push
cltd
stc
sbb
jmp
fstp
fldt
adcl
adc
out
mov
xchg
arpl
mov
adc
mov
push
repnz
inc
pushf
or
pop
stc
in
ret
mov
adc
xchg
jl
mov
out
sbb
add
clc
repnz
mov
lock
test
push
xor
out
sub
pop
jecxz
add
leave
sbb
cld
lret
lds
mov
jbe
imul
cmp
dec
cld
mov
mov
bound
cmpb
xlat
fadds
rep
nop
lods
outsb
xor
xchg
push
or
push
push
jmp
dec
into
sbb
rorl
mov
push
pop
test
enter
mov
inc
mov
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
jmp
int
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
in
dec
pop
js
inc
mov
stos
mov
cmp
or
mov
pop
out
loop
ljmp
mov
imul
divl
jl
xor
cmp
call
mov
mov
jle
push
inc
mov
push
sbb
sarb
repnz
test
nop
decl
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
call
repz
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
pop
or
pushl
xchg
leave
dec
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
cld
rclb
popa
pushf
mov
and
addr16
repz
mov
incl
mov
push
pusha
les
outsb
bound
xor
jmp
inc
xor
sub
xor
insb
sarb
sbb
add
and
or
and
rcr
mov
dec
js
sbb
movzwl
fwait
std
inc
clc
lea
push
push
inc
or
hlt
mov
jne
xor
push
push
mov
pushl
mov
movl
data16
pop
ja
roll
and
pop
pop
std
ljmp
in
sub
ret
sub
jmp
fidivs
jecxz
and
pop
aas
or
clc
mov
push
dec
inc
push
push
inc
push
inc
pop
lcall
gs
jo
imul
push
dec
popa
jae
push
scas
jo
loop
insb
jne
fninit
fwait
in
clc
sbb
mov
idiv
call
stos
lret
aas
xlat
mov
xor
mov
inc
rep
mov
add
or
cld
int3
leave
out
cmp
push
push
ja
xchg
cmp
daa
jl
inc
sbb
push
movnti
das
and
and
pop
sbb
dec
add
xchg
ret
xor
fnsave
and
mov
rolb
addb
sti
sti
std
sub
or
cwtl
mov
sbb
jle
lock
push
mov
rcr
test
mov
les
xchg
push
btc
fcoml
in
fs
mov
cmp
push
stos
insb
xor
in
pop
mov
push
add
jl
call
ret
sahf
subb
fdivs
rclb
add
stos
pop
and
rep
mov
mov
sub
pushf
add
pop
fsubrl
clc
in
cmp
je
jbe
add
jae
ss
push
loope
std
mov
mov
push
sbb
jne
jne
sub
add
mov
jbe
pop
loop
adc
inc
movsb
fdivs
cmp
fidivs
paddd
shufps
add
mov
mov
add
sbb
push
and
outsl
clc
mov
ja
pop
out
pop
clc
mov
mov
inc
mov
test
subl
sub
and
adc
add
mov
shr
mov
push
callw
pop
lea
push
in
mov
sub
insb
clc
mov
push
dec
lds
cmp
shll
outsb
and
add
mov
in
inc
sahf
xor
xor
jb
jo
jne
push
or
aaa
or
or
push
inc
sbb
push
inc
fcoml
mov
scas
add
jmp
pushf
add
cmp
dec
aas
lods
rorl
mov
cld
inc
fistpll
jne
mov
in
push
xchg
jmp
lret
test
test
add
scas
je
pop
in
test
call
sbb
pop
add
sub
mov
pop
cs
xchg
les
pop
add
cmp
pop
ljmp
mov
mov
xor
das
mov
or
es
loop
out
les
jle
xchg
pop
push
data16
sub
cmp
test
fstpt
inc
push
stos
fiaddl
pop
pop
gs
cld
in
popa
lock
ds
mov
adc
pop
int3
xchg
adc
mov
std
add
sbb
add
dec
jne
icebp
fucomi
sbb
ret
incl
mov
xor
and
jne
dec
cmp
fists
push
popf
enter
inc
pop
sbb
fcompl
sbb
pop
mov
lahf
in
push
pop
add
mov
lcall
push
hlt
xor
lea
mov
mov
mov
movl
sarl
inc
or
or
pop
cmpsb
cmp
inc
sub
or
jmp
mov
push
mov
xor
or
adc
push
clc
addr16
sub
sarb
inc
xor
imull
xchg
inc
in
jae
gs
testl
sub
mov
idivl
shlb
out
ja
pop
pop
xchg
pop
addl
cli
in
push
pushl
adc
aaa
lock
add
in
pop
xchg
dec
sahf
dec
cs
add
add
jae
xor
pop
push
push
and
sbb
jmp
mov
or
jne
movsbl
inc
inc
jmp
add
mov
popa
addr16
jecxz
cmp
cwtl
xchg
or
sbb
loop
fdivrl
adc
jecxz
pop
movb
clc
cmp
inc
add
jne
pop
sbb
cmp
inc
mov
adc
outsb
pop
loopne
cmp
adc
test
cmp
add
shlb
out
jg
xchg
lcall
into
cli
out
push
je
dec
jge
dec
inc
push
test
lea
add
inc
xchg
fidivs
clc
add
stos
mov
jo
leave
cmc
adc
xor
jne
jbe
adc
cmp
je
orl
and
add
sbb
pop
sbb
cmp
sub
push
cmpsl
sarb
sub
mov
cld
adc
lock
pop
mov
jecxz
lods
fisttps
dec
adc
xor
push
xor
mov
xor
or
add
pusha
sub
repz
cwtl
push
or
and
cltd
pop
add
lds
aas
cltd
orb
mov
lods
aas
jb
add
dec
fdivrs
dec
fadds
rclb
loope
mov
or
push
std
mov
and
fsubl
jne
outsb
ljmp
adc
push
mov
arpl
sbb
enter
push
adc
xor
adc
mov
mov
jno
mov
pop
adc
es
or
dec
pusha
inc
movsb
jmp
pushf
adcb
outsb
jb
inc
mov
sub
enter
aaa
add
cmp
shrl
add
push
push
in
call
std
lods
adc
and
jmp
dec
test
inc
in
push
dec
imulb
pushf
loopne
inc
in
loopne
push
out
mov
outsl
or
fdivrs
call
push
push
or
sbb
leave
mov
dec
das
adc
idivb
inc
sahf
sbb
incb
inc
or
pusha
add
inc
or
jo
cmp
dec
sahf
test
fwait
negb
inc
adc
adc
add
repz
pop
mov
push
sbb
cld
pop
and
adc
loop
xor
add
shrl
jo
sbb
or
ja
ss
mov
cmp
je
sbb
mov
adc
push
sub
scas
adc
dec
je
jmp
add
add
je
jmp
cmp
out
push
adc
xchg
cs
adc
jmp
sub
sbb
es
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
or
inc
inc
lret
movzbl
push
or
adc
movswl
xchg
sbb
jo
leave
je
push
mov
dec
or
xor
dec
lahf
icebp
push
outsb
inc
sbb
fldl
insb
cli
sub
addl
popf
inc
pushl
xor
push
xchg
jo
cmpb
pop
cs
sbb
fidivs
inc
mov
addb
mov
enter
push
lret
int
sbb
mov
cmp
or
add
or
cmp
jne
orb
cmc
and
loop
lock
sbb
js
dec
jle
jge
test
jle
dec
mov
je
add
fmuls
pop
and
sub
mov
jmp
mov
fisubrl
or
dec
leave
fisubrs
or
ds
mov
in
sti
jle
jbe
fadds
dec
ds
xlat
iret
cmp
jg
cmpsb
push
mov
add
xchg
cmpb
xor
or
popf
mov
sub
jb
fldl
clc
ss
lahf
xchg
ret
dec
xor
mov
sbb
push
mov
mov
add
js
ljmp
cli
dec
jne
pop
pop
dec
add
mov
out
movsl
imul
pop
mov
mov
sbbb
stc
add
cwtl
mov
and
and
mov
icebp
mov
dec
mov
add
loopne
and
test
rorl
jbe
mov
pop
push
scas
adc
out
mov
fcomps
rolb
mov
cmpsb
outsl
jbe
outsl
fwait
in
ja
add
mov
mov
or
push
xchg
xor
push
bound
out
loopne
mov
cmp
mov
add
or
inc
dec
push
push
sbb
bnd
push
out
xor
inc
pop
xlat
test
jne
mov
mulb
fs
cmp
mov
pop
sarb
fsub
pop
gs
sub
je
lock
jnp
lcall
icebp
cmp
cs
fsub
sti
mov
mov
cmp
daa
data16
faddl
lret
xor
ds
xor
jnp
sub
test
sahf
sbb
push
sbb
js
filds
je
loopne
aaa
test
pop
mov
insl
or
dec
adc
sbb
test
in
cwtl
sbb
scas
pop
add
adc
add
add
add
mov
push
test
popl
push
ficoml
adc
jb
adc
cwtl
lods
sub
xchg
push
xor
push
out
sbb
and
mov
mov
pop
pop
pop
mov
dec
add
or
push
mov
rolb
into
xor
mov
or
jmp
mov
movsb
sbb
repnz
add
push
push
or
push
mov
push
push
lret
cmpsl
push
cmpsb
add
mov
cmp
lahf
adc
pop
pop
pop
mov
pop
mov
dec
clc
dec
jl
lock
clc
rorb
pop
jg
jb
scas
adc
push
sbb
add
or
add
sub
dec
jne
dec
push
push
fbld
inc
jg
sbb
cmp
push
pop
mov
pop
push
dec
and
out
inc
insb
xchg
adc
adc
xchg
das
xchg
jle
aas
insb
cli
cmp
add
ljmp
lea
mov
or
movl
cld
inc
push
xorb
mov
mov
das
js
nop
test
sahf
les
sarb
mov
aaa
ret
cmp
pop
adc
popa
xor
je
add
out
inc
cmp
add
sub
sbb
add
outsl
inc
aas
sub
xchg
jmp
lea
cmp
xchg
cmp
push
cld
pop
rorb
loop
decl
iret
cmp
push
jl
sti
lahf
rorb
mov
int
mov
add
sbb
cmpsb
into
rcl
push
fisubl
mov
jge
xor
ret
pop
cmpsl
push
mov
mov
loopne,pn
mov
push
cmp
je
and
aam
push
cmp
add
jo
sti
in
cs
mov
pop
sub
jmp
in
lahf
pop
sub
and
pop
pop
or
push
mov
addr16
in
add
popf
je
int3
mov
inc
xchg
inc
add
add
push
xor
push
jl
das
lock
rcrl
mov
jle
scas
outsl
push
je
pop
cld
and
cmp
jl
orb
xchg
aas
idiv
cld
dec
js
pushf
push
pop
inc
out
test
outsl
js
inc
jmp
jns
push
cld
add
mov
inc
lock
cmp
push
sub
es
cmp
jo
repnz
sub
arpl
xor
adc
or
lahf
cmp
scas
mov
ds
rorl
add
das
lcall
rorb
sbb
mov
add
pop
push
xchg
in
popa
mov
pop
lret
mov
lret
cmpsb
mov
jbe
lds
pushl
cmp
cld
and
inc
cld
dec
jmp
jbe
or
push
fs
data16
pop
cmp
nop
push
dec
jne
mov
idiv
lahf
loopne
add
cld
popf
cmp
pushl
add
dec
jmp
inc
xlat
bound
pushf
jb
jg
scas
xchg
add
jne
addb
sahf
in
loopne
adc
adcl
and
jmp
and
jle
pop
xor
out
cli
or
or
movsb
pop
cld
sub
push
adc
and
sub
sub
sub
mov
xor
je
js
mov
mov
jmp
add
jns
mov
cmp
icebp
in
add
pop
and
or
mov
mov
ret
cmp
push
into
push
clc
inc
or
sub
mov
in
add
sti
cmp
jmp
push
cmpsb
movsl
bound
gs
cmp
dec
inc
lret
shlb
dec
shlb
jae
adc
push
in
adc
jg
mov
cmp
jge
sub
roll
sarb
add
loope
mov
aas
adc
shr
in
jmp
and
cmc
adc
iret
xchg
jp
dec
jl
int3
jge
incl
push
mov
icebp
ss
stc
add
lea
clc
mov
pop
inc
dec
cmp
out
mov
or
dec
cltd
mul
mov
mov
push
cmove
lods
cmp
subb
imul
add
gs
cmp
fimuls
add
loopne
adc
lock
push
add
mov
test
std
mov
mov
cmpsl
out
jg
add
sahf
dec
enter
cld
fdivrl
sub
jl
sbb
add
add
mov
fcoms
neg
scas
xchg
jp
je
test
or
inc
jl
je
dec
movsb
cmp
jb
or
jb
stc
pop
sub
jmp
outsb
and
movsl
sbb
dec
add
ret
mov
shrb
js
adc
jbe
imul
xor
push
xor
inc
push
or
dec
push
shll
shll
mov
ss
jo
sbb
xor
jne
mov
shr
sbb
jne
push
icebp
adc
xor
arpl
loopne
sub
mov
xchg
adc
js
scas
sbb
adc
stos
loopne
int3
pop
cmp
gs
in
sub
arpl
out
push
cmp
and
daa
push
pushf
dec
cmp
xlat
jle
loop
int3
cltd
pop
xor
cmp
mov
lods
mov
cli
or
fs
adc
push
push
das
and
mov
push
push
sub
pop
cmpsl
cmp
inc
sub
or
lcall
xor
popf
push
sbb
insl
add
inc
adc
inc
push
jmp
and
jle
inc
jmp
mov
nop
add
adc
inc
pushf
mov
js
pushf
inc
pushf
aas
data16
xor
aaa
enter
data16
pop
pushl
mov
sub
pusha
sub
add
add
add
mov
add
push
xor
adc
mov
cld
shr
pop
sbb
les
inc
push
xor
ljmp
or
mov
fistpl
add
inc
and
mov
push
cmpsb
or
pop
das
or
cmp
sbb
adc
stc
xchg
mov
pusha
clc
movsl
lock
jge
pop
dec
cmp
nop
jle
outsl
negl
ret
cmp
push
lods
add
add
dec
or
inc
jp
fistpll
js
sti
sbb
sub
cmp
cmp
jle
mov
add
xchg
aam
inc
lea
sbb
loop
push
popf
inc
pop
inc
and
mov
cwtl
into
inc
aaa
push
mov
lea
mov
mov
pop
call
adc
xor
lds
fisttps
xchg
ret
add
push
cld
out
cli
or
or
cmp
je
cmp
je
cmp
lret
je
and
or
fistl
jp
clc
jmp
adc
dec
imul
adc
jmp
push
mov
mov
mov
stos
or
cs
cs
adc
popf
sub
jmp
cmp
inc
sub
jns
add
xlat
push
jmp
lahf
inc
sbb
jmp
fstpt
jp
adc
mov
mov
cmp
adcl
sahf
out
push
and
inc
adc
mov
pop
fstcw
inc
mulb
lcall
lret
cmp
loopne
jmp
push
cmp
sub
jmp
inc
sbb
sub
jb
shr
sub
or
sbb
cmp
and
ret
pushf
icebp
jmp
fisubs
adc
dec
push
shlb
pop
jle
jno
enter
cmp
mov
push
sub
cmp
outsl
jp
jb
xchg
mov
xchg
lock
or
out
inc
loopne
dec
inc
enter
push
dec
pop
xor
xchg
dec
adc
rcll
and
pushf
ret
sbb
adc
enter
add
cld
dec
dec
clc
push
aam
aaa
add
sub
jle
ret
addr16
mov
adc
mov
out
lock
cmp
xor
or
je
cmp
out
or
jo
adcb
push
push
pop
or
xor
inc
push
dec
mov
jmp
and
insb
lea
adc
adc
js
jo
sti
popa
pop
iret
pushl
or
push
pop
jmp
aas
popa
in
fcomp
add
sarl
xor
mov
xchg
enter
ds
lock
or
adc
pop
add
fimull
rorb
sbbb
xchg
pop
mov
and
mov
in
cs
dec
in
push
popa
jg
sbb
nop
inc
sahf
mov
jmp
and
out
sub
cmp
inc
mov
jl
sbb
lcall
les
push
loope
xor
add
or
pushl
lock
pop
add
inc
call
out
js
cmc
mov
cmp
add
je
cmp
pushf
iret
push
cwtl
adc
or
sbb
pop
ret
es
dec
inc
mov
adc
hlt
test
movsb
pop
outsl
mov
xchg
add
mov
mov
pushl
cmp
and
add
xchg
adc
pop
pop
ret
clc
sub
pusha
inc
in
mov
mov
lock
bound
iret
xchg
popa
push
or
lcall
adc
mov
repnz
les
jl
ficomps
mov
inc
sbb
in
out
sbb
inc
jmp
cmp
jne
mov
inc
and
sub
je
jle
sub
xor
das
and
testl
mov
mov
add
sub
jb
outsl
mov
sub
jb
add
or
jmp
xor
sub
jmp
getsec
movsl
fadd
lret
jmp
push
subl
or
jb
jmp
jl
andl
mov
pushl
jmp
jg
mov
cltd
sbb
bound
movsb
loop
mov
inc
add
lock
ret
or
xor
enter
inc
insl
and
test
insb
xor
cmp
add
ficoml
stos
shlb
adc
inc
jns
movsb
sbb
dec
inc
js,pt
and
jne
adc
int3
and
jg
jp
inc
mov
dec
js
xor
mov
dec
daa
jmp
cltd
sub
pop
sbb
add
je
sbb
setb
jmp
setl
cmp
je
push
nop
ret
add
rorb
pusha
mov
mov
mov
sub
adc
or
and
es
dec
aam
dec
loopne
and
int3
decl
push
cs
pop
push
mov
repnz
iret
push
cmp
sbb
fiadds
dec
or
mov
sbb
sbb
loope
sbb
xchg
out
sahf
mov
add
push
fs
sbb
sub
push
jo
adc
fmuls
testb
dec
ss
fbld
into
in
idiv
cmp
je
andl
ljmp
or
xor
jge
jge
fildl
out
xlat
imul
sti
mov
sub
push
lea
mov
pop
mov
aad
pop
jmp
decl
stos
pop
inc
cmp
lret
in
jge
or
push
in
test
in
push
mov
adc
into
stos
in
mov
push
mov
sub
jge
sub
mov
mov
cmp
push
sub
lahf
test
insl
xor
add
cmpsl
cmpl
jle
cwtl
or
ja
xchg
xchg
fidivrs
int
mov
jl
lds
cmp
clc
test
push
dec
jne
insb
icebp
insl
jl
mov
push
aaa
push
addl
cmp
decl
dec
clc
jne
scas
add
lock
push
int3
xchg
inc
mov
inc
pop
ja
in
data16
aaa
in
rcrl
push
push
mov
incl
shlb
cmp
pop
lahf
cltd
test
lock
in
inc
ret
inc
sbb
sahf
nop
add
push
add
ret
inc
outsl
push
or
popa
insb
inc
sub
jnp
jne
clc
ret
pop
mov
arpl
mov
mov
mov
cwtl
push
inc
fs
sbb
je
out
sbb
cwtl
push
and
jae
or
add
cmp
clc
jmp
ret
and
cmp
xor
insb
sub
aas
scas
clc
lret
and
sti
pop
jne
les
add
out
enter
mov
jmp
push
andb
movsb
gs
shl
out
inc
push
lods
mov
add
das
popf
test
call
and
idivb
sub
sbb
sbb
test
pop
sti
sbb
repz
mov
sbb
and
dec
fidivl
jne
push
mov
sub
fdiv
outsb
clc
lea
mov
rorl
inc
cmp
mov
push
push
addr16
xlat
into
xchg
imul
lahf
insb
inc
lock
je
fdivrp
fmull
cmpsb
add
lods
jg
movb
imul
in
ret
dec
push
push
movl
roll
cld
imull
shrb
pop
or
pushl
cli
ljmp
jb
gs
xor
cs
insb
movl
addr16
popa
je
sub
insl
gs
and
loopne
jecxz
pop
jle
jecxz
daa
pop
sarl
sti
movb
int3
push
mov
nop
data16
add
add
xor
repnz
cmp
xchg
push
test
sbb
push
cmp
dec
cwtl
jns
push
sub
out
xchg
into
pusha
addl
fldcw
iret
adc
add
or
mov
repnz
mov
cmp
mov
xchg
sti
xor
jecxz
push
lods
repz
ret
std
xlat
sbb
mov
xor
rep
or
push
rcll
stos
imul
sbb
add
negb
lock
cmp
jne
adc
out
sahf
popf
inc
xorl
ret
daa
js
push
or
push
les
icebp
je
das
outsl
mov
add
repz
cmc
add
test
mov
fstps
mov
mov
and
inc
cltd
push
and
nop
cmp
push
inc
idivl
es
adc
mov
jb
mov
mov
cmp
pop
loopne
fidivrs
lds
mov
push
mov
cmp
mov
daa
mov
mov
pop
adc
loopne
pop
mov
push
aad
sub
mov
fiadds
mov
aam
fxch
dec
je
jecxz
mov
dec
es
inc
push
add
jecxz
push
sti
or
shl
cmp
mov
dec
cmp
or
addl
inc
add
in
ficoml
jg
cmp
ret
push
mov
pop
mov
pop
jo
push
cld
jne
je
or
pusha
ljmp
lcall
add
push
or
loop
sub
test
push
or
outsl
pusha
pop
mov
pop
fldt
push
inc
rcrl
ret
cmp
data16
call
push
push
mov
adc
xchg
sbb
mov
pop
pop
inc
ret
ret
sbb
rorl
fnstenv
js
add
ret
add
pop
sub
pop
pop
test
add
lock
adc
sub
lret
cwtl
add
insb
outsb
sbbb
pop
or
push
fidivs
or
jb
lcall
loope
cltd
ja
stos
and
xchg
pop
outsb
pop
sub
inc
mov
lea
dec
fldl
cmp
xchg
cs
loopne
xor
dec
inc
cmp
ja
jg
sub
inc
jmp
inc
pop
xor
cld
in
xorb
shr
or
mov
adc
sbb
mov
and
lret
add
pusha
add
mov
and
rolb
fscale
aaa
cmp
jae
cmp
jb
or
dec
movb
loopne
adc
loopne
dec
rcrl
add
cmp
lea
lret
push
ret
mov
andb
dec
pop
js
bound
adc
mov
out
cld
loopne
lahf
hlt
mov
mov
xor
roll
mov
xlat
dec
loope
and
je
cmp
ja
outsl
mov
and
cmp
jne
fidivrl
shl
or
mov
push
lea
jg
inc
dec
cld
mov
out
adc
lahf
add
nop
or
xorb
out
adc
or
movl
pusha
jmp
inc
mov
ret
aaa
inc
or
stos
sbb
adc
pop
idiv
xorb
sbb
or
jb
inc
dec
test
adc
pop
sbb
packsswb
nop
mov
cld
lods
mov
int3
je
add
dec
add
xor
pop
mov
ret
cwtl
fisttpll
cmp
mov
lods
test
test
sbb
dec
ja
or
aam
push
xchg
imul
imul
inc
jb
xchg
pop
imul
jo
pop
cmp
mov
mov
push
lcall
xchg
pop
inc
pusha
add
jae
push
xorl
mov
pop
je
test
enter
inc
push
inc
mov
imul
and
inc
push
mov
lock
sbb
popa
popa
outsl
rorb
rorb
xchg
arpl
pop
mov
jbe
add
sbbl
ret
cmpl
cwtl
mov
rorb
roll
int3
or
push
clc
add
pop
sub
jmp
sarb
pop
dec
xor
orl
push
sub
rorb
adc
mov
push
sub
inc
jo
mov
out
or
xchg
xchg
mov
into
mov
mov
xor
sbb
test
or
rclb
cmp
pop
clc
sbb
fnsave
cmpl
push
adc
loop
add
pop
testb
push
push
cs
aaa
push
rorb
or
cmp
lcall
insb
add
jns
push
dec
push
mull
loop
mov
ret
mov
loop
mov
push
xchg
mov
adc
mov
mov
insb
idivb
movsb
or
mov
cmp
aaa
cld
pop
daa
push
push
or
or
or
add
movsb
xchg
or
mov
xchg
sub
dec
rcrb
out
jle
shr
push
insb
xchg
sub
ja
enter
sti
outsb
add
push
or
insl
ja
add
dec
push
dec
inc
aaa
mov
std
ja
testl
mov
fs
gs
aas
jnp
sub
adc
jb
jns
es
imul
bound
inc
push
outsl
arpl
out
mov
jne
je
dec
outsl
je
imul
jge
std
mov
ds
outsl
inc
arpl
or
insl
int
ret
or
jb
xor
xor
jg
loopne
outsl
insl
bound
outsl
js
pop
push
imul
outsl
ja
nop
outsb
cmp
andps
outsb
dec
inc
xor
mov
mov
push
sti
add
dec
cld
sub
jb
lock
jb
aam
jb
jb
int3
enter
jb
sarb
mov
test
jb
jb
mov
jb
jb
mov
jb
jl
je
jb
jb
insb
push
jb
pop
pop
push
jb
jb
push
dec
dec
inc
jb
jb
inc
cmp
xor
jb
jb
sub
and
jb
jb
sbb
adc
jb
jb
or
add
sbb
add
sub
hlt
cmp
cmp
lock
call
cmp
aam
cmp
cmp
int3
enter
cmp
sarb
mov
test
cmp
cmp
mov
cmp
cmp
cmp
cmp
insb
cmp
cmp
push
cmp
cmp
push
dec
cmp
cmp
dec
inc
inc
cmp
cmp
cmp
xor
sub
cmp
cmp
and
sbb
cmp
cmp
adc
or
cmp
cmp
add
cld
sub
lock
pushf
pushf
pushf
pushf
call
pushf
pushf
pushf
fcom
ror
pushf
pushf
pushf
pushf
enter
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
test
mov
pushf
cwtl
xchg
nop
mov
cmpb
pushf
js
jo
pushf
pushf
pushf
pushf
fs
push
dec
pushf
pushf
pushf
pushf
inc
inc
push
dec
pushf
pushf
pushf
pushf
pop
pop
cmp
pushf
pushf
pushf
pushf
xor
sub
pushf
pushf
pushf
pushf
and
sbb
pushf
pushf
pushf
pushf
adc
or
inc
sahf
pushf
pushf
add
cld
sub
dec
dec
dec
dec
hlt
lock
call
in
fmull
dec
aam
int3
mov
pushf
sarb
mov
test
pushf
pushf
pushf
movsb
mov
pushf
pushf
xchg
nop
mov
test
pushf
pushf
je
insb
push
fs
pop
pop
pushf
pushf
pushf
pushf
push
push
dec
dec
pushf
pushf
pushf
pushf
inc
inc
cmp
pushf
pushf
pushf
pushf
xor
sub
pushf
pushf
pushf
pushf
and
sbb
xchg
xchg
fildl
enter
or
cld
sub
lock
pushf
pushf
pushf
pushf
call
pushf
pushf
pushf
fcom
ror
pushf
pushf
pushf
pushf
enter
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
test
mov
pushf
cwtl
xchg
nop
mov
cmpb
pushf
js
jo
pushf
pushf
pushf
pushf
push
pushf
pushf
pushf
pop
push
push
dec
leave
leave
test
leave
leave
cmp
xor
leave
leave
leave
leave
sub
and
leave
leave
leave
leave
sbb
adc
leave
leave
leave
leave
or
add
in
fs
sub
hlt
lock
in
in
call
in
aam
in
in
int3
enter
add
test
addl
xchg
mov
adc
lock
and
or
adc
sahf
out
sbb
and
aam
loopne
and
imul
cltd
and
cmp
jl
cmp
xlat
add
shrb
jp
and
ret
in
inc
cmp
push
mov
push
mov
push
sbb
pusha
or
jne
push
gs
and
sti
in
sub
cmpl
pop
lods
str
or
lea
popa
gs
sar
aaa
add
and
push
dec
inc
inc
dec
add
outsl
scas
std
in
mov
pop
push
dec
dec
dec
push
inc
push
dec
sti
fdivrp
mov
push
push
dec
push
push
pop
sub
push
inc
dec
pushf
dec
popa
mov
inc
push
das
pop
cmpsl
jp
xor
out
call
or
inc
scas
mov
cmpsb
psrld
jo
icebp
jb
jb
repnz
cmc
jb
jb
div
clc
stc
jb
jb
cli
sti
cld
std
jb
jb
jmp
loope
jb
jb
jecxz
in
jb
jb
out
jmp
ljmp
jb
out
rcl
jb
jb
rcl
aam
jb
jb
xlat
fcomp
jb
jb
fcmovu
jb
jb
rol
jb
jb
ret
lds
jb
mov
leave
jb
jb
lret
int
jb
jb
iret
mov
jb
jb
mov
mov
jb
jb
mov
mov
jb
mov
jb
mov
jb
jb
mov
jb
cmpsb
cmpsl
test
jae
jb
stos
stos
lods
lods
imul
push
push
inc
outsl
out
jo
add
adc
add
adc
je
insb
jae
fmull
or
fbld
sbb
nop
in
push
push
or
popa
jb
push
nop
pusha
js
fsubrs
adc
jle
loopne
mov
in
scas
data16
fnstsw
push
mov
movl
js
gs
mov
mov
mov
aas
xchg
push
inc
inc
bound
je
adc
das
js
mov
fdivs
dec
inc
jnp
or
insb
mov
push
leave
leave
insb
les
mov
push
outsl
testl
or
outsb
mov
inc
jb
mov
subb
movsb
jb
shr
es
xchg
sub
js
jg
mov
fdivrs
add
push
sbb
cs
sub
xor
mov
aas
xchg
or
imul
mov
jb
scas
mov
mov
popa
outsb
gs
loopne
data16
or
dec
outsb
jbe
jb
insb
outsl
ja
dec
xor
cmp
cmp
inc
and
dec
in
inc
sti
gs
xchg
scas
xchg
lock
jbe
imul
outsb
scas
in
fstl
push
xchg
insl
jle
gs
andl
jb
scas
inc
addl
adc
pushf
scas
mov
pusha
mov
fs
inc
sbbb
scas
ds
lock
mov
orl
add
daa
push
test
fcoms
or
inc
and
in
inc
push
push
pop
xlat
push
or
scas
sbbl
add
inc
fdivs
push
adc
sbb
popa
sbb
test
inc
dec
dec
push
push
or
lock
push
nop
shrb
push
inc
or
arpl
nop
sbb
xchg
sub
je
mov
or
je
ds
or
imul
shlb
pop
mov
pop
pop
js
fsubl
xchg
xor
cwtl
and
or
cli
dec
out
mov
or
mov
sub
jo
push
mov
bound
adc
stos
push
inc
mov
add
push
addr16
mov
es
stos
mov
data16
pop
jle
add
xor
das
rorb
jo
xor
jns
dec
mov
sbb
lahf
and
cltd
mov
divl
rcll
push
push
gs
outsb
addr16
inc
daa
daa
mov
or
adc
daa
daa
daa
sbb
push
mov
out
and
push
test
mov
rorb
outsl
dec
psllw
nop
int3
mov
fstpl
imul
test
inc
out
gs
cld
fldt
push
adc
jb
popa
fs
mov
jne
int3
add
loop
or
adc
movsb
das
push
sbb
ds
aam
repz
js
mov
adc
jns
jmp
mov
jnp
sbb
fisttpl
push
loopne
sbb
ja
mov
aas
xor
andl
adc
xor
roll
push
dec
push
imul
loope
jne
inc
push
mov
add
add
lods
outsb
arpl
ljmp
pop
fimull
shr
div
mov
mov
add
dec
jb
scas
xchg
mov
mov
aad
mov
xorb
ret
xor
push
aas
jo
lock
cmpsl
mov
add
ja
mov
or
xor
or
addr16
pop
popf
xchg
inc
pop
or
js
sbb
mov
mov
adc
and
les
loopne
push
jl
add
and
adc
sarb
mov
sbb
mov
or
sub
adc
jle
sub
les
rorl
cmp
sub
sub
das
stos
insl
sub
jmp
or
mov
jae
data16
jo
adc
pop
add
and
push
leave
add
adc
orl
dec
dec
loopne
out
add
or
inc
ljmp
dec
lret
add
invd
or
push
add
lods
movsl
aaa
pushf
adc
rcrb
cmp
fcompl
stos
cmp
inc
cld
out
add
lcall
ret
or
inc
sahf
cmp
cmp
sub
pop
add
pop
adc
and
or
sub
mov
stc
add
or
sub
cmpsb
jmp
and
add
jg
or
test
ss
pop
cmp
jne
pop
inc
xchg
xor
ds
sarb
xorb
inc
neg
ret
pusha
add
push
inc
fdivr
push
push
mov
mov
ffree
jmp
mov
je
mov
xor
fstpt
adc
fdivs
push
sub
add
cmp
jg
into
fiaddl
outsb
cmp
or
sbb
xchg
jmp
sub
jne
pop
cmp
je
hlt
or
stmxcsr
pop
pop
pop
jl
mov
pop
pop
dec
add
pop
movsl
aaa
cmp
or
cmp
jne
rolb
mov
add
pop
subb
jno
pop
or
xor
fisubrl
xchg
add
shlb
outsl
sbb
push
enter
inc
inc
xor
fbld
out
sub
push
test
ss
in
popa
add
mov
cltd
leave
std
bnd
fsincos
add
cwtl
insl
mov
mov
xor
repz
jl
in
xchg
fdivp
jmp
jbe
adc
or
fcoml
dec
add
mov
sub
clc
jb
sub
lcall
push
and
movsl
jb
push
push
mov
divb
jne
xor
adc
xchg
xchg
imul
int3
and
clc
leave
add
add
or
jb
cwtl
push
adc
jne
jle
pop
mov
pop
imul
sbb
inc
jne
push
inc
das
mov
in
or
mov
mov
rcr
sbb
mov
dec
decl
jne
mov
dec
jb
jnp
xorl
dec
icebp
cs
call
fucomp
aas
daa
mov
sub
mov
xor
mov
add
xor
notb
jb
sbb
push
cltd
cmp
jl
ret
mov
jl
imull
test
sub
push
inc
fsubs
mov
inc
mov
addb
sarl
or
or
ss
mov
add
xor
out
test
mov
dec
jp
and
inc
mov
add
dec
call
push
sub
or
mov
inc
inc
mov
pop
sti
dec
jne
jmp
test
rolb
shll
push
fcmovu
jmp
inc
pop
mov
jns
mov
incl
mov
inc
dec
mov
ret
push
sbb
xor
dec
jle
cli
decl
add
pop
mov
adc
pop
pop
sub
sub
jbe
sti
jg
incl
shll
add
push
mov
sub
xor
push
outsb
push
rol
cmp
push
xor
test
xor
dec
cmp
pushl
dec
loopne
sbb
rcrl
pop
ja
or
mov
ljmp
mov
add
sbb
add
xor
adc
movb
mov
sti
ret
sbb
andl
insb
and
fistps
shlb
fadd
faddp
add
mov
sti
push
add
rorl
fdivr
mov
push
mov
xor
add
push
sub
rcrl
loope
pop
daa
add
outsb
ffree
frstor
ffree
ffree
pop
aad
add
push
sub
push
frstor
push
dec
repnz
ss
subb
push
or
add
aam
inc
push
push
scas
aaa
aad
mov
and
hlt
or
cmp
push
loop
mov
adc
or
scas
insl
aad
clc
mov
sarl
pusha
or
push
das
push
and
insl
imul
push
pop
xchg
xor
cmpsl
mov
jg
mov
sete
pop
outsl
xchg
lea
js
pop
inc
add
mov
out
fs
je
cmpsb
sbb
dec
cmp
push
inc
cld
iret
mov
cmp
rcll
mov
stos
sub
pusha
sub
mov
adc
fists
orb
sti
idivl
les
test
jl
cmpb
add
test
fstl
and
pushf
push
xchg
pushl
pop
popa
call
mov
cwtl
adc
out
rclb
sbb
lock
mov
call
out
aas
mov
add
push
cmp
xor
addb
pop
and
subl
jp
dec
hlt
jne
ret
lock
xchg
decl
loopne
mov
andl
insl
lock
data16
lock
setne
jmp
cmp
dec
pop
mov
sbbb
ss
cwtl
or
add
mov
clc
mov
pop
add
ds
fsubs
in
xchg
stos
and
ret
adc
out
pop
jmp
and
dec
mov
push
mov
or
or
pop
sub
decl
add
mov
and
pop
cmp
inc
ja
xor
scas
ret
push
adc
adc
and
in
fnstsw
push
push
mov
mov
jl
pop
rclb
xor
lods
fstpt
push
pusha
mov
repnz
pop
enter
iret
pop
insb
cwtl
mov
xchg
out
lret
clc
test
pop
shll
cld
repz
inc
pop
lret
notl
add
fcmovne
lea
cmpl
adc
imul
mov
emms
push
push
jge
mov
push
loope
mov
jg
mov
or
jbe
or
movl
gs
call
add
out
inc
je
sub
mov
js
movb
pop
mov
loopne
not
mov
pop
add
and
jne
aas
cmp
loope
in
adc
and
hlt
cwtl
xchg
shrl
jmp
pop
lods
xchg
imul
pushf
mov
or
lahf
or
or
dec
jp
xor
sbb
adc
jnp
or
cld
repz
mov
add
cld
mov
mov
out
lea
pop
ret
cmp
xor
push
add
daa
jnp
push
inc
aas
jne
cltd
mov
aaa
mov
and
stos
test
inc
or
mov
and
ret
clc
dec
call
mov
test
mov
mov
dec
jmp
addr16
mov
jp
and
mov
jp
cwtl
rorl
inc
jne
cmp
lock
test
out
in
fistl
iret
loope
inc
pushf
cltd
lock
inc
xor
sbb
mov
jmp
nop
aas
mov
sbb
mov
mov
add
push
push
fsubr
pusha
andb
sub
add
sti
xchg
push
andl
pop
sub
mov
mov
enter
inc
sbb
pop
sub
lock
sarl
sahf
xor
inc
sbb
push
inc
xor
push
lret
popa
add
adc
mov
fdivrs
xor
push
jp
or
testb
fwait
inc
stos
mov
push
or
add
out
and
adc
push
dec
mov
std
mov
pop
pop
mov
ss
not
and
pop
sbb
movl
mov
lcall
lea
mov
jmp
push
movsb
xchg
pusha
mov
mov
add
int3
call
pop
mov
and
repnz
incl
arpl
push
ja
inc
outsl
clc
sti
cwtl
mov
sub
mov
pushl
mov
pop
add
fcomps
cmpsl
jne
push
rolb
dec
pop
jg
mov
out
pop
les
sbb
not
mov
inc
dec
sti
and
add
mov
or
jns
mov
pop
mov
pushf
clc
adc
add
xor
cs
cmp
sarl
pusha
out
lock
aad
or
jg
fwait
test
pop
push
mov
jle
je
loopne
pop
pop
jne
inc
cmp
sbbb
loope
fdivrs
insl
sub
nop
paddsb
push
adc
xchg
pop
xor
outsl
jle
jb
in
aam
jne
jo
ret
xchg
lret
outsl
decl
jp
xchg
inc
out
out
int
adc
add
imul
xchg
loopne
aad
add
push
jge
mulb
fs
push
hlt
clc
cld
push
aad
lock
fdivrp
imull
mov
dec
scas
stos
call
sbb
loope
dec
or
scas
enter
lock
ret
fdivrs
pusha
jo
pop
pop
sarb
rolb
ret
inc
je
mov
neg
das
add
cwtl
hlt
cs
incl
test
jne
test
je
test
jne
mov
decb
dec
xchg
lods
mov
dec
dec
cmc
pop
pushl
cmpsb
lea
mov
xor
les
pop
push
inc
mov
sub
test
cmp
mov
iret
cmp
adc
jo
jo
mov
fnstenv
lret
call
adc
pop
enter
mov
mov
incb
lret
mov
mov
ljmp
movsb
cmp
pop
pop
rclb
hlt
ficomps
mov
arpl
jg
mov
nop
cmpsl
iret
cmp
push
fisubs
data16
rorb
jne
cli
jb
jns
test
add
cmp
jne
sbb
mov
jne
push
add
jne
outsb
fldln2
test
cmp
jns
jns
sbb
or
cmp
add
lret
nop
mov
xor
or
mov
and
inc
call
mov
cmp
or
sbb
sub
sub
je
xor
mov
push
ja
cmpb
jne
es
je
pop
xchg
xchg
mov
sti
outsl
mov
cs
mov
pop
sub
jbe
sbb
pop
fwait
loopne
sub
enter
pop
mov
mov
loop
jne
call
inc
inc
in
add
and
push
test
add
aas
lds
xchg
and
fisttpll
das
or
inc
pop
add
int3
imul
push
pusha
fsts
or
jbe
pop
xor
orb
dec
insl
js
ret
pop
adc
mov
add
cmp
outsl
ss
mov
and
popa
rcrb
lcall
push
mov
inc
cmpl
sbb
shrb
dec
fs
pop
inc
adc
add
cmovl
lret
aad
adc
or
pop
cmp
pop
mov
mov
rclb
es
ds
push
or
jge
adc
xorl
ret
cld
lods
cmp
je
stos
in
mov
sub
xchg
test
bnd
push
outsl
mov
mov
xor
sub
lods
rorb
int
xchg
es
bound
hlt
and
lods
jmp
iret
cmp
xor
sub
mov
fisubs
sub
mov
lret
xchg
outsb
pop
scas
call
jae
fildl
add
or
lret
roll
mov
and
stos
sbb
pop
sti
xchg
mov
sbb
mov
adc
cmp
data16
cmp
ja
add
imul
fistpl
fs
and
in
dec
jle
rolb
sbb
cmp
sbb
dec
cmpb
ret
je
int3
add
pop
xchg
ret
and
mov
xlat
cmp
cld
dec
rcll
pop
jne
lea
mov
ret
pop
les
jmp
mov
in
cmp
xchg
or
das
pop
ja
mov
ss
push
xchg
xor
mov
adc
dec
dec
fsubrs
rcr
jecxz
lea
push
sub
ret
inc
pusha
and
xchg
mov
xchg
xor
sbb
or
popf
imulb
jmp
push
pop
outsb
adc
sub
out
fdiv
xchg
data16
xchg
flds
jl
mov
push
ret
sbb
add
jg
loope
mov
aad
or
jmp
xor
inc
inc
shrl
cld
lods
and
jmp
mov
jl
testl
xlat
mov
inc
jp
call
pop
js
mov
addb
lret
add
jp
adc
dec
fdivl
or
jmp
jecxz
stos
mov
stc
fcomps
push
leave
loopne
dec
cmp
lods
cmp
ljmp
add
mov
push
inc
je
mov
or
je
mov
cmpsl
mov
adc
dec
jl
popf
lock
divl
pop
cmp
jbe
mov
shlb
xchg
adc
cmpb
sub
dec
cvtpi2ps
adc
push
loopne
mov
inc
iret
dec
lcall
clc
xchg
ret
xor
and
add
push
dec
sub
out
adc
daa
xchg
pop
cwtl
daa
xchg
sahf
add
sahf
xchg
out
pushf
add
in
testb
sub
adc
mov
cmpsb
mov
cmpsl
mov
andl
pop
sbb
lahf
fcomi
xor
sahf
ljmp
in
out
cwtl
pop
lods
jmp
sbb
add
enter
jmp
ljmp
xchg
push
mov
pextrw
je
in
push
add
divl
enter
and
pop
adc
mov
loopne
mov
test
sahf
das
cltd
test
push
jbe
fists
pop
mov
sub
sub
mov
jg
iret
push
or
xchg
shll
xor
das
cltd
xchg
sarb
pop
or
cmpsb
int
mov
cmp
ret
test
sub
cmp
and
sbb
dec
cld
lea
mov
jmp
push
mov
push
dec
dec
cmp
enter
jg
jmp
add
orl
rclb
mov
pop
movsl
mov
jle
push
hlt
insl
enter
loope
mov
mov
add
xor
dec
dec
adc
cmp
push
inc
or
xchg
mov
mov
stos
out
add
or
jne
xor
or
jge
mov
neg
jmp
or
je
mov
stos
xchg
push
mov
into
mov
and
inc
inc
int3
aam
adc
enter
jg
or
jg
dec
mov
stos
cmp
jne
pop
pop
aam
pop
loope
mov
cld
mov
sti
mov
mov
cs
mov
repnz
dec
popf
add
test
jne
lcall
fcoms
lock
stos
imul
add
loope
shrb
sahf
mov
add
and
push
sub
jge
jae
mov
mov
fsubrl
test
xchg
scas
subb
or
sti
add
pusha
decl
add
or
mov
add
sbb
enter
sbb
call
xor
movsl
cld
add
popf
mov
xor
lods
push
and
lahf
xchg
mov
dec
dec
inc
dec
inc
dec
lods
or
and
jp
xor
jge
cs
ret
divb
jo
ret
std
mov
aam
cmp
push
jg
sbb
sbb
dec
stos
add
outsb
mov
xor
stos
jmp
mov
jp
mov
loop
movlps
pop
pop
pop
popa
subb
dec
mov
jnp
ja
mov
fimuls
sbb
dec
ret
sub
sub
jbe
pop
jl
mov
mov
mov
movsb
insl
sbb
mov
cli
adc
mov
or
es
or
or
enter
repz
inc
test
dec
je
dec
jne
sbb
in
stos
xor
mov
call
add
je
inc
jne
fldcw
mov
ret
xchg
repnz
repz
jecxz
or
repnz
loop
adc
mov
add
lea
and
ja
add
push
push
push
cmp
divl
sbb
inc
jmp
or
xchg
mov
pop
inc
loop
ret
push
call
sbb
sub
sub
and
jbe
fcomi
adc
and
sub
inc
sub
sub
sub
sbb
and
sub
pop
sub
or
mov
jns
sub
sub
sub
fucomip
popl
call
adc
movsl
jne
inc
stos
test
xor
mov
and
pop
push
cltd
inc
adc
add
jns
sahf
mov
or
adc
mov
mov
sub
orl
adc
mov
mov
adc
int
in
scas
or
mov
and
mov
add
and
bnd
mov
loopne
sbb
loopne
mov
add
lret
mov
or
mov
shlb
ret
ljmp
jne
testw
jl
mov
cmpl
sbb
movb
mov
aas
inc
sub
adc
clc
adc
clc
out
fabs
push
ja
mov
pop
frndint
rcr
scas
fs
add
neg
jge
fwait
mov
testb
je
fidivl
clc
sbb
lea
mov
inc
sub
nop
shr
and
scas
jo
dec
out
push
cmp
xor
stos
insl
popa
pop
pusha
mov
lret
enter
or
out
outsl
or
cmpb
jb
movb
js
decb
loopne
loopne
and
pop
data16
pusha
xor
jmp
mov
cmp
inc
xor
push
adc
shr
mov
push
add
inc
int3
out
inc
out
sbb
add
daa
std
iret
push
push
rorl
je
add
add
neg
or
or
or
fisttps
das
sbb
adc
jl
mov
cmpsl
adcl
mov
or
sbb
popf
jb
pop
decb
or
mov
shl
cmp
mov
shll
sbb
mov
push
sub
cwtl
call
and
jne
dec
sub
cmp
ja
jae
and
inc
ljmp
sub
add
enter
cmpb
divl
sub
sub
pop
jmp
mov
sbb
mov
aaa
ret
jp
jae
dec
inc
ret
scas
mov
lock
sarl
loop
je
fldz
cmpsb
mov
ljmp
lods
xor
jne
inc
mov
daa
xorb
aaa
mov
or
cmp
icebp
je
and
fistpll
jmp
sti
inc
jne
inc
push
sub
cwtl
jne
mov
and
fdivrl
mov
adc
aas
jmp
fistpl
cmp
pop
and
inc
js
hlt
test
insl
and
push
int
cmp
mov
test
or
fimull
cmpsb
adc
add
jmp
aaa
mov
aas
adc
es
push
inc
mov
rorb
push
cmp
aaa
add
or
outsl
rcl
insb
add
push
int3
push
cwtl
je
and
rolb
dec
pop
add
push
rolb
pop
add
and
and
or
leave
rclb
pop
sbb
aam
lock
test
fldt
fstpl
fwait
out
bound
ficoml
out
fistps
mov
xchg
xor
ret
push
in
fldl
inc
js
adc
adc
mov
xor
push
dec
and
add
inc
test
sbb
add
clc
out
dec
repz
cmp
jae
or
cmp
inc
stc
inc
cmc
dec
push
or
shrb
out
add
shrb
pusha
jb
ret
enter
call
fistl
jle
mov
mov
or
sbb
mul
pop
adc
push
testb
jo
andl
test
sbb
mov
fisubrl
cmp
inc
fcom
dec
jg
dec
ret
add
adc
add
jp
fimull
mov
mov
mov
push
cmp
fdivl
and
call
imul
and
add
adc
and
sbbl
add
jp
adc
pop
fwait
jge
subl
adc
inc
dec
mov
sbb
pop
push
aam
dec
enter
addb
fwait
orl
push
jb
or
jb
add
insb
je
mov
push
pop
dec
fnsave
adc
mov
add
inc
dec
jne
sub
dec
mov
aas
cltd
stos
loopne
clc
idiv
imul
jns
push
in
mov
cli
add
repnz
ds
ds
add
test
mov
out
sti
jne
inc
inc
pusha
test
std
std
mov
lds
xchg
rcll
movsl
cmc
inc
pop
cmp
add
pop
pop
dec
add
sbb
inc
loope
sub
dec
in
test
jg
mov
sarb
ljmp
inc
pop
or
lods
inc
test
pop
pusha
mov
pop
inc
xchg
ret
in
mov
mov
add
jl
addl
mov
and
jl
repz
mov
cltd
mov
decw
jnp
insl
xor
sub
imul
fcoms
or
insl
movzww
add
inc
push
xchg
sbb
dec
pop
lock
push
shlb
adc
lret
add
dec
cmp
dec
lods
pop
mov
or
jp
sbb
fistps
sbb
clc
roll
pop
hlt
imul
push
add
loopne
scas
jbe
sbb
loope
mov
mov
cmp
cs
addr16
xchg
inc
xlat
nop
in
rcll
adc
sub
push
or
out
int3
and
sub
cli
sbb
push
push
cmp
js
inc
add
sbb
lret
jne
push
loop
push
xchg
and
add
mov
sub
cltd
js
rcrl
sub
fisubrl
pop
push
xchg
adc
fcomi
or
adc
add
and
js
pop
cs
pop
push
dec
test
push
in
push
loopne
push
jb
inc
adc
mov
add
in
add
adc
subb
mov
mov
adc
popf
xor
cmpsb
jle
or
and
inc
dec
cmp
je
mov
add
das
inc
inc
hlt
pop
sti
repnz
add
pushl
add
push
lea
idivl
out
or
xchg
repnz
movb
jo
inc
lcall
push
in
mov
ljmp
jecxz
pop
in
jns
fmull
mov
inc
jo
pop
int
repnz
adc
loope
out
repnz
mov
push
lret
push
sbb
or
jmp
and
mov
mov
lea
adc
popf
push
fldt
mov
mov
or
push
mov
xchg
mov
sbb
pop
add
fs
pop
andl
lods
add
sbb
clc
aam
jbe
add
sbb
lods
ljmp
dec
adc
push
cmp
data16
aam
ret
mov
insb
xor
ljmp
sub
sub
and
addr16
imul
push
enter
add
mov
mov
jmp
adc
js
or
inc
cmpb
jne
lahf
nop
mov
add
sub
les
or
vmwrite
pop
add
mulb
aam
mov
add
adc
and
sbb
cltd
cmp
lods
mov
stos
xchg
mov
pop
incl
in
add
shl
loope
mov
mov
push
jne
mov
pop
or
repnz
add
xchg
jae
pop
xchg
shlb
adc
test
int3
popf
sub
push
add
sub
jae
pop
mov
out
mov
jge
dec
add
stos
and
loop
outsl
loop
mov
fmulp
cmp
xchg
fadds
out
dec
jmp
adc
mov
or
divb
or
or
rorb
or
or
add
add
add
or
pop
dec
loope
outsl
or
jl
out
mov
dec
rcr
sahf
cmpsl
jge
jecxz
ret
sbb
and
lock
call
stos
sbb
mov
nop
or
jo
inc
mov
or
mov
pop
bound
das
popf
dec
push
cmp
push
out
adc
lods
adc
scas
nop
aam
dec
rolb
jo
pop
adc
jmp
sbb
cmpsb
idivl
add
sub
xchg
sub
jae
xor
mov
fmull
dec
add
jmp
out
orb
aad
push
cmp
lock
mov
or
xchg
dec
movsb
sub
in
mov
adc
sub
and
loopne
push
sahf
jbe
mov
push
lahf
adcl
adc
push
mov
jl
add
adc
and
cli
out
jae
je
sbb
pusha
sub
je
pop
je
jmp
sbb
icebp
es
jne
mov
jmp
xchg
sub
push
dec
in
mov
into
add
add
cmpsl
adc
inc
sahf
add
push
inc
ljmp
adc
or
inc
cmpsb
fnstsw
or
or
add
pushf
sbb
repz
popa
add
call
js
add
jb
lret
push
pop
dec
es
addb
pusha
jmp
daa
sub
jbe
jb
add
shlb
pop
add
mov
ja
add
and
add
hlt
loopne
adc
sbb
jmp
and
dec
imul
mov
xor
xchg
cmp
test
mov
inc
sub
add
shr
out
inc
iret
mov
pop
xor
xor
or
or
mov
lret
loopne
popf
cmpb
and
push
int
out
imul
cmp
mov
cmp
lea
cmp
mov
shll
pop
sub
fsubrs
mov
adc
stos
pop
push
cmp
cld
clc
xchg
xor
and
aam
add
sbb
scas
dec
das
push
dec
bound
adc
push
add
mov
and
fsubl
aam
test
sub
xchg
push
push
mov
mov
xchg
pop
mov
jo
and
inc
add
bound
cmp
jg
je
mov
inc
mov
mov
or
mov
lods
flds
mov
cwtl
push
pop
or
in
mov
add
mov
pop
or
push
pop
and
jl
pusha
jb
push
sbb
xchg
adc
ret
add
mov
test
mov
push
loop
in
mov
pop
xchg
mov
dec
dec
cmp
sbb
outsl
push
repz
inc
ret
push
xor
into
cmp
and
test
pop
lock
in
ret
push
mov
fucomi
add
cmp
adc
jge
xchg
xchg
addb
mov
mov
sub
pop
jl
mov
cli
aaa
push
inc
push
cmp
jne
sub
das
imul
sub
and
sub
je
dec
mov
and
sub
je
jmp
mov
jmp
push
push
push
jnp
outsb
and
out
clc
jle
out
in
rol
pmullw
xlat
hlt
sbb
mov
popa
shll
mov
jl
jnp
jl
pop
and
pop
mov
and
into
adc
mov
add
testl
add
or
pop
or
aad
push
jmp
sbb
or
shlb
fwait
cmp
or
jl
jne
cmp
jg
sbb
mov
push
xor
cltd
xor
sub
add
pop
fldcw
imul
add
dec
mov
add
mull
popf
insl
push
inc
push
popa
dec
cld
gs
xchg
ret
scas
fcomp
sub
sbb
mov
xor
sub
shrb
repz
jl
call
push
fiadds
dec
pusha
dec
fdiv
inc
sub
dec
addr16
add
xchg
dec
das
mov
fmull
test
sub
dec
pushf
jbe
adc
jge
mov
fidivrl
push
mov
or
rcrb
mov
fildll
cmp
push
rorl
fisubrl
das
mov
and
das
nop
add
or
add
in
fldenv
mov
sub
jb
and
xchg
jge
es
in
aas
scas
sub
lock
cmp
in
out
lock
out
in
cmpl
adc
dec
pop
les
jge
add
fnstenv
test
pusha
sub
push
mov
pop
data16
out
jnp
mov
jbe
cmpb
jle
and
fs
jne
adc
jne
or
cmpsb
ss
push
rorl
adc
mov
pop
popa
inc
cwtl
inc
dec
repnz
and
pushf
mov
clc
and
stc
ljmp
or
jl
and
ret
mov
pop
fsubl
fs
ds
adc
fcompl
jle
mov
outsl
cmp
das
push
jne
mov
dec
notb
daa
push
adc
mov
fs
jle
mov
cmp
jecxz
repz
xchg
dec
xchg
jno
xlat
fs
xlat
xor
repnz
xchg
fcmovb
fistl
decb
popa
in
mov
or
and
fwait
dec
jnp
test
inc
and
sub
and
push
and
clc
insl
cli
test
jp
sub
cli
lods
pop
jge
and
add
push
or
or
dec
mov
sbb
out
je
test
push
cmp
add
pop
jb
inc
xlat
add
sbb
sbb
and
test
xor
or
and
push
and
add
inc
ja
jne
jo
xchg
adc
pop
daa
shlb
adc
rcll
je
dec
cwtl
movsl
movsb
adc
adc
push
xor
mov
mov
mov
nop
xor
cmp
pushf
pop
add
mov
cmp
mov
jns
pop
scas
sbb
adc
adc
push
shl
dec
outsl
mov
add
lock
imul
push
adc
xor
out
ffree
cltd
mov
add
and
fcomps
or
pop
sbb
or
rcrl
fstl
rsqrtps
cmpsb
add
push
xlat
fimull
push
push
push
push
push
sbb
add
add
sarl
sti
sub
jb
or
xchg
push
out
xchg
test
fwait
ror
test
lea
push
jo
out
mov
shr
outsb
adc
mov
cmp
les
popa
cmpsb
fdivl
fprem
push
push
xorl
mov
loope
or
push
hlt
xor
lods
mov
jno
or
add
add
js
nop
xchg
dec
jo
ja
test
jnp
xchg
xor
pop
rcrb
repz
sub
mov
or
and
dec
lea
dec
push
mov
sub
pop
mov
nop
inc
lcall
mov
xchg
or
or
jne
rorl
dec
push
cld
xchg
push
in
popa
aaa
and
in
add
loope
fnstcw
dec
call
cmp
ret
in
or
and
out
sbb
sarb
lds
xchg
push
ljmp
sub
pop
je
xchg
cmp
push
and
sub
adc
adc
cmc
mov
dec
inc
and
mov
rorl
pusha
inc
xchg
sub
incl
pop
pop
out
mov
mov
xchg
shr
pusha
enter
out
in
xlat
add
pop
imul
mov
pop
mov
aam
fiaddl
ss
les
orl
add
mov
fldt
dec
push
rol
cmp
push
mov
adc
hlt
push
push
sub
fidivs
sub
pop
cmpl
sub
and
rcl
mov
mov
fcom
or
test
orb
pop
insl
lcall
jecxz
dec
mov
mov
ljmp
cmpsb
incb
sbb
je
mov
push
add
pop
sahf
mov
jnp
jle
test
mov
popa
lcall
loope
push
fistl
lock
add
jge
mov
rorb
sbb
xchg
adc
call
repz
xor
mov
out
call
add
jmp
mov
fwait
daa
cmp
adc
jmp
icebp
pop
je
jne
inc
push
push
jns
sbb
or
daa
or
mov
out
inc
push
shr
ret
xor
mov
mov
popl
add
sub
and
pusha
lea
icebp
ds
stc
insb
xchg
test
sub
push
test
cmpsb
in
out
pop
dec
or
loopne
pop
jne
movsl
subl
pusha
iret
pop
mov
aam
inc
pop
shlb
aaa
or
loope
and
push
les
jmp
sub
mov
mov
mov
inc
push
loope
test
repz
mov
dec
scas
sub
ret
sub
and
sub
mov
fwait
and
or
jo
inc
mov
cld
cmp
insl
push
loopne
inc
add
adc
xor
fbld
mov
sti
push
test
mov
cld
pop
faddp
jae
test
jg
in
hlt
push
inc
push
mov
rorb
jl
les
sahf
fiadds
mov
mov
pcmpgtd
test
push
or
pop
dec
sub
cld
push
and
int3
pop
mov
inc
das
xchg
loopne
hlt
test
mov
dec
pop
mov
dec
mov
addl
ret
js
inc
xor
dec
and
push
xchg
pop
fdivl
adc
test
cmp
pop
dec
adc
stos
pop
or
xor
rcr
add
adc
fistpl
sub
mov
adc
ljmp
cmpsl
cwtl
mov
inc
les
sbb
sti
test
or
ja
dec
adc
ja
add
or
fwait
test
stos
xchg
xchg
inc
repnz
inc
out
pop
clc
lock
lods
or
mov
sub
ret
sbb
or
pop
push
or
and
add
and
pop
sub
faddl
cmp
jg
cmp
mov
adc
jns
xchg
jmp
mov
push
jle
xchg
cs
fdivs
or
pop
out
xor
mov
add
sar
lret
lods
incl
adc
ljmp
mov
dec
pop
cld
jmp
push
sbb
push
push
push
fwait
mov
cmp
adc
nop
in
loopne
pop
outsb
adc
lods
int
mov
jmp
test
loopne
cld
fstpl
repnz
pushf
mov
test
iret
aam
roll
cld
mov
sar
add
call
or
jge
inc
outsb
cmpsl
mov
push
in
push
loopne
lock
loopne
test
adc
loopne
loope
adc
ret
mov
in
js
aam
add
xchg
pop
in
push
leave
jo
imulb
leave
lods
daa
adc
push
fs
add
pop
push
push
cmp
je
cs
aas
enter
je
jmp
xor
push
push
jmp
and
ret
mov
dec
shll
or
aad
dec
rorl
or
push
push
jb
or
dec
mov
out
nop
mov
adc
mov
leave
pop
xorb
inc
fcoml
sbb
cld
cmpl
movaps
jb
leave
xor
inc
hlt
mov
sbb
cld
sub
pop
outsb
inc
or
pop
pop
and
mov
inc
ret
and
jne
in
adc
add
mov
and
lea
sub
mov
jae
rcrb
iret
les
push
push
enter
lret
ja
mov
lods
aam
cmp
lods
mov
push
cmp
xchg
test
pop
sub
cwtl
mov
mov
cs
add
sbb
jns
fcoml
aam
cld
aad
ret
cmp
mov
bound
cld
std
rolb
ret
ljmp
jae
imul
cmp
cmp
lret
adc
sbb
ret
hlt
addl
add
mov
or
enter
adc
sbb
das
push
push
jbe
xchg
push
repnz
pushf
mov
mov
movsl
dec
pop
es
cmpsb
call
mov
sub
mov
add
insb
add
cld
mov
adc
mov
adc
push
cli
mov
nop
das
je
inc
enter
rcr
or
div
fsubrl
sbb
mov
fistpl
mov
add
and
adc
test
es
in
pop
inc
sbb
adc
xor
out
aaa
insl
jbe
push
dec
xor
mov
mov
enter
fdivl
cmpsb
sbb
loopne
scas
jo
or
xchg
daa
cmp
xor
int
mov
push
sub
xchg
pop
pusha
and
xchg
mov
and
adc
rorb
les
das
out
mov
out
add
and
dec
idivl
xchg
jp
adc
into
ss
add
int3
mov
addr16
pcmpeqw
cmp
mov
or
jno
adc
clc
dec
xor
or
lret
mov
sub
enter
cs
jp
jae
nop
xor
mov
jo
sbb
das
dec
call
dec
imul
inc
push
inc
sub
xchg
adc
addr16
mov
sbb
fistpll
std
mov
cmp
rorb
bound
test
adc
dec
ljmp
jb
inc
mov
dec
jmp
dec
test
jl
nop
xor
xchg
cmpsb
cmp
or
sub
and
sub
dec
or
inc
push
mov
jmp
out
mov
mov
fadds
loope
fisttps
dec
pushf
add
je
insl
sti
or
iret
loopne
xor
cmp
fadd
jl
lods
fwait
out
lret
sub
inc
test
pop
movsl
cmc
inc
mov
xor
test
jg
lods
inc
ds
adc
ret
and
mov
ret
add
push
or
and
in
push
xchg
xor
jge
mov
dec
ja
add
inc
int
pop
mov
in
leave
and
cmp
fucom
and
and
push
dec
or
mov
mov
lea
or
movb
ret
push
imul
push
add
dec
xchg
shl
pop
add
jle
adc
dec
jno
setle
mov
add
mov
adc
pop
mov
add
inc
cmp
repz
or
or
add
stc
out
fcmovb
lods
icebp
adc
mov
mov
daa
xchg
adc
push
mov
call
or
arpl
sub
cs
mov
daa
push
out
int
popa
fcomps
rclb
add
adc
test
push
or
xor
loopne
and
movsl
pop
fs
imul
outsl
rol
inc
js
std
popf
sbb
push
daa
mov
mov
test
pop
adc
aam
jge
stc
cltd
sub
mov
push
pop
in
pop
jl
xchg
int
add
ljmp
cwtl
int3
pop
push
xor
shlb
fimuls
jmp
inc
inc
lods
xchg
cmp
adc
shll
cmp
je
cmp
std
stc
inc
nop
pop
addr16
scas
mov
call
test
iret
add
insb
sub
inc
sub
mov
pop
jae
scas
adc
sub
ficomps
pusha
test
loop
sbb
lea
inc
inc
jmp
dec
test
inc
adc
jl
mov
cmp
cmp
adc
jle
pop
adc
je
sar
out
je,pt
cmpb
and
loope
adc
iret
sub
js
or
stos
or
inc
outsb
mov
adc
scas
push
push
push
dec
clc
sub
dec
fiadds
lret
inc
inc
add
lods
dec
mov
sub
popa
sbb
mov
cli
jbe
sbb
push
stos
imul
jp
and
jbe
adc
lods
sbb
out
push
addr16
pushf
fs
pushf
add
xlat
dec
test
je
mov
inc
inc
jne
push
xor
outsl
test
pop
push
add
mov
mov
fdivs
inc
mov
pop
pop
pop
sbb
stos
sbb
lret
jne
mov
fildll
jge
pop
or
pop
jne
lret
js
xchg
in
jg
add
inc
push
or
inc
add
xorb
mov
pusha
arpl
divl
push
adc
data16
push
sub
add
push
add
jp
mov
shr
mov
mov
jmp
jecxz
cmp
movsl
pop
cmpl
add
movlps
movb
jmp
push
mov
and
sub
cwtl
pop
push
test
push
pop
lods
pop
sbb
xchg
call
dec
jne
push
scas
ljmp
mov
iret
adc
pop
imul
fcoml
cltd
in
cs
lock
mov
xchg
pop
inc
subb
sub
jb
push
shlb
in
iret
and
call
jl
fdivrl
mov
push
or
pushf
sbb
or
movsl
mov
sbb
es
mov
fwait
in
loopne
adc
pop
js
in
inc
aam
fdivrs
pop
mov
mov
jle
dec
repnz
sarb
dec
movsl
inc
pushf
sub
mov
test
leave
sbbb
add
cmp
cli
test
sbbb
and
xchg
ss
les
ret
adc
enter
hlt
mov
aaa
sbb
push
jbe
push
hlt
mov
out
jns
add
in
sub
pop
ret
adc
in
jo
dec
ljmp
sbb
popl
scas
fildl
mov
iret
scas
insl
add
mov
and
fs
daa
add
pop
lock
aaa
cltd
jo
push
mov
add
call
cmp
jmp
push
cmp
out
and
mov
mov
out
or
xchg
or
inc
or
xchg
icebp
jmp
std
adc
outsl
lock
fnstcw
hlt
sub
mov
add
or
popl
dec
cmp
cmpsb
insb
cmp
rolb
popf
out
aas
push
pushl
mov
mov
aas
roll
in
adcl
fs
insl
lods
popf
loope
pop
cmpsb
ret
arpl
nop
mov
jmp
in
sbb
cwtl
sbb
mov
popa
mov
add
jge
xlat
add
dec
jmp
sahf
in
in
sti
mov
dec
jg
adc
adc
push
push
outsb
imul
pop
xchg
test
sbb
out
mov
cmovg
decl
push
dec
outsl
fs
gs
outsb
outsw
fsts
inc
jmp
rol
add
mov
inc
jl
pop
jg
or
xor
inc
jmp
pop
pop
ret
add
mov
jp
scas
xchg
adc
inc
add
mov
pushf
clc
adc
cmc
movsb
jne
int
ret
pop
sbb
fadd
xor
or
out
pop
xchg
adc
mov
paddw
add
test
jl
std
inc
xor
lea
cmpl
adc
roll
adc
outsb
mov
jmp
cmp
lea
push
enter
inc
ret
mov
pusha
add
lea
mov
nop
inc
cmp
ret
popf
sub
mov
add
xchg
cmp
xchg
or
xor
adc
xchg
or
neg
ret
and
pop
inc
dec
pop
addb
lret
and
push
inc
mov
cs
mov
addr16
or
hlt
cmpsl
leave
pop
inc
daa
paddsb
sub
mov
aaa
mov
hlt
cli
or
loop
cmp
fs
loopne
adc
jb
jecxz
add
inc
or
or
insb
sub
push
test
inc
in
mov
pop
push
push
dec
scas
and
xor
aad
and
call
inc
rolb
ficoms
dec
icebp
fdivrs
mov
repnz
inc
daa
loopne
add
bnd
int
test
sub
pop
add
push
push
sub
sbb
imul
divb
or
incb
imul
gs
jo
cli
scas
push
add
lock
inc
mov
xlat
mov
call
dec
ret
xchg
xor
aaa
cs
xor
call
xor
or
je
jmp
push
inc
cmp
jne
test
push
and
pop
sub
cmpb
loope
mov
stos
daa
inc
test
xchg
js
pusha
push
xor
clc
xor
and
inc
out
test
mov
fistpll
dec
and
xchg
add
sbb
sub
call
jne
push
loopne
fnstenv
mov
mov
movl
push
mov
inc
iret
js
cmp
fists
mov
daa
mov
rcl
jge
loop
or
or
stc
add
loope
mov
push
outsl
in
lea
aaa
xchg
cmp
rol
lds
std
lret
jg
arpl
sarb
inc
ds
push
ja
imul
inc
adc
mov
mov
aas
adc
jb
and
xor
out
sub
movsb
mov
pop
mov
mov
imul
pop
cwtl
mov
inc
push
cmp
enter
push
sbb
inc
mov
adc
dec
popa
mov
clc
cmp
dec
loope
mov
lret
push
mov
mov
orb
xchg
ret
xchg
je
and
or
cmp
sbb
mov
cmp
xchg
mov
insb
je
sahf
xor
mov
or
jge
sub
fnstsw
incl
xlat
jg
pusha
xor
or
decl
cmpl
jnp
popa
xchg
ds
jo
stc
push
lods
sbb
mov
or
jp
or
push
pop
fbld
sbb
inc
incl
mov
xchg
cmp
je
mov
popl
inc
jecxz
arpl
mov
pop
xor
push
add
hlt
int
jg
inc
mov
fisttpl
cmp
sbb
in
inc
xor
ror
cmp
or
adc
decl
pop
js
adc
or
push
scas
cltd
or
xchg
out
inc
aad
dec
repnz
hlt
cmp
or
mov
sub
cmp
mov
jne
pop
mov
xchg
jp
in
cs
cld
mov
dec
dec
or
push
mov
imul
and
pop
jo
mov
inc
inc
jmp
add
es
out
outsl
sbb
rep
je
and
loope
cwtl
fs
inc
adc
orl
sbb
adc
loope
sbb
add
mov
jns
je
pop
jo
mov
xchg
push
jge
ja
mov
adc
out
jns
cmpsl
dec
rorb
js
pop
fdivp
sahf
jnp
mov
cld
test
or
sahf
out
mov
add
sahf
repnz
out
mov
jns
cmpsl
stc
pop
or
lahf
out
out
pusha
push
dec
pop
push
fs
clc
mov
repz
ja
push
addb
cmp
mov
dec
repz
mov
es
out
xlat
add
call
adc
mov
ds
or
cwtl
mov
mov
cmp
add
cld
js
fldenv
sbb
lods
mov
popf
cmp
lock
in
push
mov
call
loopne
in
stc
push
clc
mov
push
dec
sahf
xchg
mov
js
adc
cmp
pop
dec
enter
les
push
mov
mov
mov
nop
mov
pop
xchg
addr16
mov
insb
mov
hlt
addr16
popf
mov
das
mov
mov
test
pop
fcompl
in
xchg
sbb
je
in
mov
mov
jns
jo
pusha
inc
jg
add
addr16
xor
fs
jmp
or
dec
add
ret
stc
js
int3
and
xor
in
out
mov
int
mov
adc
pop
daa
cmp
adc
nop
inc
push
sbb
and
jp
cmp
sub
mov
cld
lods
test
mov
xor
sbb
test
cwtl
add
lahf
pushf
push
enter
xor
and
in
add
adc
sub
enter
push
xchg
nop
nop
ret
pusha
aas
push
stc
in
imul
fidivrs
dec
dec
loopne
je
pop
sub
fs
inc
dec
outsb
sbb
adc
gs
imul
jo
ret
dec
rclb
cwtl
mov
jnp
aas
or
lea
sti
sbb
jo
xchg
adc
sbbl
test
jp
xor
xchg
ljmp
fsubl
xlat
xchg
movsb
jl
or
dec
popf
add
nop
push
jb
push
or
leave
adcl
or
pop
jne
mov
test
jl
pushf
adc
ds
jae
sub
lcall
cld
xchg
jl
add
jge
add
sbb
adc
mov
xor
cld
clc
or
inc
xlat
mov
xor
cwtl
or
adc
jae
xor
mov
add
sbb
leave
xor
jecxz
sub
filds
nop
pop
ds
sbb
mov
loopne
call
movsb
nop
std
adc
sbb
mov
rcrl
into
pop
or
dec
jmp
mov
in
jmp
jb
gs
into
sub
orl
inc
fildl
fs
jns
clc
adc
pop
gs
jne
jmp
cmp
fists
scas
adc
aam
inc
pop
jb
mov
add
loopne
mov
push
imul
and
lret
and
mov
leave
sbb
dec
xor
and
push
and
leave
and
pop
sub
xchg
dec
sub
xor
dec
xor
lret
and
lret
cmp
test
lret
and
rorb
xchg
lret
and
test
lret
and
lret
dec
adc
mov
xchg
or
in
fsubl
lret
and
insb
cld
in
lret
and
lret
pop
fdivr
pop
sbb
nop
iret
push
std
or
pusha
or
lret
jne
xlat
and
adc
inc
inc
push
sub
fsubs
dec
add
jl
repnz
je
fs
jne
dec
jne
mov
pop
mov
adc
mov
pop
outsb
dec
jb
pop
outsl
jb
fnstsw
repnz
insl
jo
inc
jb
insl
push
je
pop
push
sub
inc
cmp
mov
dec
and
fcom
mov
inc
jae
pop
inc
pop
cwtl
sbb
jns
pop
outsl
ret
and
or
pop
sub
inc
test
dec
add
jecxz
nop
into
xlat
jnp
imulb
add
and
cmp
sbb
dec
bound
call
pop
imul
add
sbb
push
dec
js
add
inc
daa
iret
shll
nop
sub
sbb
xor
sbb
mull
aaa
xorb
push
fs
es
popa
xor
push
adc
sub
sbb
testb
adc
mov
xchg
or
jae
add
pop
xchg
cld
test
sub
ret
dec
and
fcmove
pop
sbb
sbb
xchg
test
and
lods
nop
adc
jnp
in
mov
out
mov
pop
push
inc
jb
lret
inc
add
fstl
daa
inc
add
popa
fs
inc
sarb
test
mov
xchg
fs
pushf
push
or
ss
dec
sbb
outsl
or
addr16
je
je
jb
xchg
popa
scas
gs
iret
add
inc
adc
in
mov
insb
xchg
inc
push
adc
mov
xchg
or
iret
test
bound
cmp
sub
xchg
cld
xor
or
or
inc
adc
es
nop
pop
outsl
arpl
out
outsb
pop
pop
stc
es
dec
cld
or
sbb
int3
add
dec
faddl
jne
jae
jge
cmpsb
mov
in
in
rcrb
cmpsb
add
in
pop
or
or
pop
mov
in
and
es
in
pop
add
in
test
mov
loopne
sbb
cmp
fistps
aam
inc
and
nop
push
nop
push
and
mov
add
jb
decb
sbbb
inc
or
or
aad
or
fstpl
add
sbb
xchg
cs
std
cltd
int
sub
pop
add
cmp
int3
incb
aas
dec
je
sbb
push
lcall
es
dec
mov
loopne
jbe
add
and
inc
ss
mov
add
leave
testl
clc
mov
jns
clc
xor
mov
iret
and
pop
add
mov
iret
and
shr
js
leave
out
mov
nop
add
xchg
out
mov
hlt
jb
mov
jnp
jae
cmpsb
pop
sbb
inc
xchg
loopne
pop
push
mov
loopne
push
mov
xor
in
fwait
enter
pop
rorb
xor
icebp
xor
add
fcomp
enter
movsl
ffreep
mov
jno
jns
xor
nop
add
mov
pop
fidivrs
enter
xchg
sub
in
inc
lock
push
sub
je
jbe
mov
aad
mov
adc
xchg
inc
push
enter
or
mov
in
repnz
or
les
xchg
aam
sbbb
add
scas
jo
push
roll
rcrl
stos
cmpl
dec
xchg
add
inc
adc
add
jae
repnz
in
pop
mov
and
pushf
xchg
add
pushf
xchg
cmp
jmp
push
mov
insl
adc
mov
lods
xchg
mov
decl
lret
call
or
inc
add
hlt
mov
add
andb
sub
pop
mov
je
xchg
pop
add
and
pop
imul
lock
addl
mov
clc
jmp
and
loopne
sub
xchg
mul
scas
sub
xor
lea
and
and
or
dec
and
clc
in
enter
cld
and
pop
push
xchg
mov
sub
inc
pop
dec
inc
pusha
cmpsl
xor
sbb
inc
rclb
cltd
sbb
push
ret
repz
dec
cmp
lds
push
call
mov
in
fdiv
cltd
mov
insl
xorb
push
push
lret
xchg
cld
jmp
adc
push
stos
jo
lods
insb
pushf
notb
or
cmp
jge
loopne
adc
shlb
or
jmp
jmp
div
and
fsubr
and
das
add
mov
push
das
sti
mov
add
jo
jmp
mov
sbbl
push
mov
daa
add
mov
je
aas
sahf
pop
enter
loopne
clc
xchg
nop
mov
mov
aaa
cmp
push
add
or
xchg
inc
pop
in
or
adc
nop
in
loopne
or
adc
stc
or
test
xchg
std
cmp
out
outsb
stc
push
push
jno
lds
jecxz
sub
jae
adc
pop
or
adc
mov
imul
cmp
sub
ret
outsl
cmp
daa
mov
inc
call
xchg
jmp
sbbb
fldt
and
adc
addl
popa
mov
sahf
data16
push
push
adc
call
loopne
and
or
or
pop
cmp
loopne
add
mov
les
cld
rcll
test
adc
dec
push
jmp
or
push
inc
inc
sbb
sub
xor
cmp
je
movsl
loopne
ss
jne
push
cmp
cmpsb
pop
inc
add
xor
rorl
or
or
int3
rcll
and
add
cmp
enter
fwait
mov
je
test
mov
cmc
mov
sbb
sbb
outsl
sbb
loopne
or
pop
xchg
es
nop
jns
insb
adc
push
mov
movzbl
and
and
inc
inc
add
add
adc
cld
push
test
jae
sti
inc
mov
lock
jnp
mov
mov
add
test
mov
fbld
call
and
adc
jmp
sub
sbb
mov
ret
ret
add
push
cmp
cltd
mov
or
movsb
dec
pop
or
and
add
push
jno
push
cmpsl
lcall
adc
sub
fstp
inc
cmp
dec
and
inc
push
push
xchg
adc
jmp
push
mov
and
add
leave
movsl
lds
inc
jae
enter
ret
adc
mov
add
jmp
pushf
movsb
mov
and
fisttps
cmp
adc
fcompl
addb
outsl
pop
rcll
pusha
sbb
filds
inc
and
cmp
ja
mov
ret
cmp
repz
adc
sub
lcall
popf
int3
push
jnp
fnsetpm(287
jae
daa
out
sbb
iret
cmp
add
subl
or
test
push
sbb
rcr
mov
les
mov
and
inc
xorl
sub
fistl
xor
test
stc
mov
xchg
pop
lock
test
pushl
add
xor
add
inc
imul
js
es
push
add
xor
xchg
dec
push
loopne
mov
and
loopne
movsbl
enter
fdivrs
sbb
aam
xor
sbbb
movsb
mov
clc
rcl
shlb
int3
cmp
jne
je
in
in
int
in
add
xorl
add
dec
je
jmp
fcom
mov
les
vextractps
je
loope
int3
and
push
in
imul
pop
rcrl
pop
dec
sbb
jns
out
cmpsb
leave
call
jnp
pop
sbb
pop
pop
xor
push
outsl
mov
ljmp
ret
or
mov
in
in
pop
flds
jno
mov
pop
fnsave
mov
jb
cmp
nop
ret
pusha
cmp
jae
cmp
dec
orl
fwait
test
aad
xorl
mov
fnstenv
and
mov
xchg
stos
cwtl
jno
inc
outsb
push
lock
adcl
ds
nop
pop
mov
fcoms
gs
push
mov
mov
iret
and
aaa
sbb
mov
cli
or
add
sbb
push
test
mov
add
inc
mov
sbb
pop
xchg
push
leave
std
sbb
add
popa
jno
adc
in
push
mov
add
and
in
and
cmc
nop
mov
jle
or
shl
inc
jb
sbb
push
xor
mov
aad
sbb
add
sbb
xor
inc
dec
fists
loopne
adc
in
loopne
sbb
xchg
adc
dec
sbb
and
test
inc
aas
lret
xchg
cmp
cmp
int
mov
in
adc
cmp
repz
mov
test
daa
stc
dec
clc
mov
dec
push
leave
out
push
adc
or
fcoms
fiadds
cmp
dec
cmp
popa
sbb
inc
fcomps
xor
inc
mov
lcall
aaa
fwait
es
xor
and
gs
adc
pop
mov
test
dec
fdivs
and
test
aam
mov
dec
dec
pop
pop
jne
or
add
xor
add
loopne
insb
push
and
es
or
sbb
ret
and
pop
out
into
jbe
in
pop
pop
pop
jns
mov
sbb
sub
pop
pop
inc
addl
and
xlat
test
and
in
inc
pusha
aaa
and
inc
cwtl
add
arpl
test
mov
pop
cmp
sbb
fwait
inc
xor
popa
test
test
lods
sub
cmp
dec
daa
pop
mov
popa
jb
xor
pushf
jno
lock
test
jae
and
xchg
popf
xchg
jb
dec
cwtl
and
or
nop
push
nop
jmp
mov
aad
mov
dec
cmp
sbb
movsl
sub
pushf
in
nop
aas
mov
fidivl
pop
sub
mov
jo
hlt
add
inc
sub
pop
and
sbb
add
push
enter
push
mov
adc
ficomps
inc
cmpsb
gs
mov
or
or
loop
push
pxor
out
pop
xchg
xor
fstpl
fwait
scas
fimull
mov
pop
push
add
lea
cmp
lret
cmc
or
inc
jnp
inc
mov
and
add
pop
xor
aas
enter
jo
jb
sub
ficoms
mov
aas
jmp
adcb
inc
insl
jo
jns
sub
es
dec
jne
pop
push
nop
scas
add
push
add
ret
dec
and
pop
dec
stc
adc
inc
push
ds
dec
jle
insb
add
inc
outsl
jne
xchg
fs
ljmp
cmp
jmp
mov
pusha
dec
addr16
xchg
test
rolb
adc
arpl
jbe
ficompl
das
aas
inc
cmp
shl
arpl
aas
and
inc
adc
adc
push
fcmovbe
cmp
pop
xchg
xor
ret
xorb
aad
into
shlb
jae
movsl
mov
idiv
icebp
dec
mov
andb
sti
and
ss
mov
sub
push
dec
leave
lods
jbe
aas
inc
sti
inc
or
sbb
cwtl
insb
das
add
test
push
inc
pop
jmp
push
add
cmp
cmp
ret
movsl
lea
jne
and
lcall
aam
popa
pusha
test
add
sub
push
xchg
clc
dec
dec
mov
and
or
sub
mov
mov
pop
xor
test
pop
inc
outsb
jns
and
push
push
gs
push
and
test
ret
add
andb
add
hlt
cli
xor
add
cmp
inc
jecxz
adc
scas
mov
push
jle
nop
imul
sbb
inc
push
icebp
fisttpl
xorl
sbb
add
cmp
imul
pushl
out
aam
cmp
pusha
jae
test
ja
add
push
cmp
loope
or
outsb
xor
dec
cli
sbb
movsb
add
ss
push
xchg
xlat
pop
push
cmpsb
clc
sbb
pop
lds
ja
xchg
cmp
jnp
mov
pop
adc
into
xchg
add
add
or
pop
pop
dec
mov
inc
lea
fsubrl
dec
inc
test
mov
add
cmpb
mov
insb
push
incb
mov
call
mov
add
push
inc
mov
jg
orl
bound
idiv
out
daa
xor
xor
add
pop
jl
adc
push
orl
aam
repz
orb
mov
xchg
mov
lods
jle
das
in
dec
icebp
or
aam
mov
cmp
mov
ljmp
in
xchg
fdivrs
cmp
inc
idiv
adc
sti
call
add
aaa
adc
enter
or
gs
and
loopne
cmp
adc
or
xor
ljmp
cmp
push
sub
in
mov
mov
mov
jno
loope
ja
inc
mov
push
fnstenv
jns
imul
pop
sub
inc
ja
sub
leave
lock
stc
dec
leave
mov
leave
sub
sub
sbb
xchg
jl
inc
xor
dec
mov
mov
xor
sahf
lock
sbb
adc
hlt
jl
adc
jle
or
and
sbb
inc
inc
dec
jne
cltd
cmp
inc
push
xor
cmp
adcb
dec
lods
pop
add
jle
push
stc
mov
sub
adc
xor
or
call
dec
jecxz
jno
cmp
jp
push
sbb
lock
sub
fisubrl
insl
in
les
scas
bswap
leave
leave
leave
nop
xchg
xchg
xchg
leave
leave
leave
leave
xchg
xchg
xchg
xchg
leave
leave
leave
leave
cwtl
cltd
lcall
popf
sahf
lahf
leave
leave
leave
leave
addb
leave
test
leave
leave
mov
leave
leave
mov
mov
add
das
inc
push
add
and
push
add
imul
add
jge
pop
add
lea
jl
cld
inc
les
mov
add
mov
xchg
add
sbb
test
jne
xchg
jmp
push
mov
dec
xor
cmp
jle
mov
imul
dec
adc
hlt
push
adc
jge
scas
mov
jmp
cmp
sub
movsb
add
mov
test
hlt
push
lods
mov
rorl
gs
mov
sbbl
cmpsb
fisttpl
mov
int3
jo
clc
jl
or
sbb
icebp
call
pop
sbb
je
mov
and
sub
out
add
and
jmp
mov
and
je
jmp
cmp
sbb
test
xchg
movsl
or
out
jne
mov
push
int
sub
sti
imul
or
stos
mov
push
dec
inc
push
or
sbb
pop
sbb
lcall
or
bndstx
jmp
and
lds
mov
mov
mov
cmpb
je
std
outsl
outsl
xor
dec
and
decb
ja
pop
sbb
or
jmp
or
inc
inc
imul
adc
pop
movsb
push
add
add
ret
or
movsbl
and
or
jle
add
mov
jo
aaa
iret
xchg
daa
add
fisttpl
cmp
sahf
jne
mov
mov
cmpb
ja
jb
jl
sahf
das
add
add
call
out
mov
sbb
mov
and
inc
outsl
cli
jmp
dec
stc
mov
outsb
fisttps
adc
por
adc
or
jmp
movsl
mov
sub
sahf
push
add
cld
loope
inc
imul
xchg
bound
and
out
sbb
int
jle
jb
sbb
cmp
pop
mov
xlat
or
rol
ljmp
sub
cmp
fimull
mov
fsubr
and
gs
les
or
adc
or
adc
dec
testl
mov
xchg
add
inc
mov
sidtl
xor
add
and
jae
cmc
and
xor
cld
icebp
sbb
fistps
pop
mov
inc
push
push
or
incb
pop
adc
sbb
mov
adc
idivb
pop
xor
loope
sbb
sub
push
sub
dec
or
call
inc
fsubs
out
dec
hlt
icebp
and
jmp
clts
fmuls
and
push
loop
jne
and
add
fdivrp
scas
hlt
inc
imul
cmp
or
push
loopne
rorb
idivl
cld
xchg
cmp
int
imul
pop
adcl
ret
test
outsl
sbb
mov
xor
xchg
pop
inc
jnp
inc
xor
inc
xlat
lcall
xchg
push
lods
call
iret
fcmovu
insl
or
sbb
fsubl
sub
in
sub
add
or
pushw
or
cmp
mulb
fmuls
sub
pop
lret
add
mov
mov
jge
dec
and
pop
jae
or
or
push
rcrb
xchg
inc
clc
fnstenv
and
xchg
pop
out
sub
ret
adc
push
aam
test
fistpll
outsl
xor
sub
shl
push
mov
cmp
pop
xor
xor
push
add
jmp
sbb
sub
sbb
adc
push
or
push
mov
pop
push
mov
add
mov
jp
enter
jl
jno
pushl
int3
fildl
sbb
adc
roll
adc
fs
or
rcrb
inc
pop
testl
cmpsl
xchg
dec
ret
xchg
mov
stc
fs
jbe
fnstcw
or
and
jmp
cmp
and
xlat
sbb
aaa
cmc
xchg
in
mov
std
inc
mov
pop
cwtl
push
call
adc
mov
xor
mov
out
xor
pop
mov
xor
pop
jb
aad
xor
int3
sbb
or
arpl
ljmp
or
cmp
gs
lods
mov
sbb
data16
sbb
push
xor
inc
pusha
gs
inc
insb
popa
add
jae
sbb
imul
jl
add
test
fnstcw
adc
dec
outsl
dec
bound
mov
dec
outsb
insb
jns
data16
mov
fwait
mov
mov
ss
push
mov
cmp
or
jb
or
cmpsl
or
dec
inc
lock
insb
gs
xchg
cmp
pop
jle
push
or
rol
lahf
out
hlt
add
dec
movsb
dec
test
mov
add
nop
adc
out
aaa
outsl
cmp
xchg
or
or
dec
gs
rclb
jae
mov
outsb
add
jne
rcr
nop
shll
ret
in
mov
adc
inc
jbe
dec
or
push
fmuls
lds
in
ds
add
insb
loop
pop
das
xor
mov
insl
wrmsr
aaa
lret
test
and
dec
inc
sub
mov
and
nop
imul
and
mov
inc
inc
jae
or
outsb
enter
cmp
inc
cmp
lret
adc
jb
pushf
cmp
aaa
or
testb
pop
mov
scas
es
nop
hlt
pop
cmp
jle
jae
dec
cmp
popf
add
inc
and
inc
frstor
nop
test
mov
push
adc
sarl
add
mov
cmp
inc
ficoms
je
scas
inc
jle
jb
inc
imul
mov
addb
push
cmp
adc
mov
adc
mov
add
pmaxsw
jo
xor
mov
cmp
ret
push
and
add
nop
jb
or
outsl
sbb
pop
int3
adc
xor
sub
mov
cmp
cmp
les
popa
in
jne
inc
push
arpl
js
shrb
add
loop
and
mov
fisttpl
sub
fldcw
call
or
cmp
push
push
add
icebp
imul
push
adc
lock
add
sub
inc
sbb
in
xor
jae
test
xchg
jmp
pop
and
js
test
je
xchg
or
hlt
mov
adc
int3
lea
push
movsl
cmp
test
jnp
mov
sbb
cmp
push
and
dec
ds
fildll
jecxz
nop
inc
pop
imul
xchg
push
iret
xor
adc
nop
fucom
pop
xor
cmp
shll
pop
push
push
aas
test
inc
mov
out
sub
outsb
push
cmp
test
stos
in
or
repnz
insb
cwtl
jp
ficoml
cmpsl
push
xorb
sub
sub
cwtl
dec
shl
push
lock
outsl
shr
sbb
outsb
and
xor
cmp
cmp
xor
or
roll
aaa
sbb
cld
sti
stos
inc
ds
push
adcl
lea
push
pusha
adc
and
fidivs
pop
mov
xchg
push
pushf
movsl
add
push
sbb
dec
aas
cmpsl
lea
add
push
adc
sbb
pop
xor
aas
jns
add
orl
sahf
fs
shll
add
xor
pushf
jae
push
rclb
sahf
cmpsb
fdivrs
pop
sbb
sbb
inc
pushf
sbb
or
cli
inc
jae
adc
test
out
jbe
in
daa
imul
les
cld
jle
jg
adcb
ja
or
jbe
push
and
mov
addr16
ja
mov
adc
out
sub
jl
sbb
ss
mov
jns
loopne
hlt
cmpb
add
popa
xor
inc
jp
xor
xor
shr
cli
adc
leave
push
or
sub
cwtl
dec
inc
inc
and
sahf
mov
xor
outsb
adc
sahf
jbe
dec
addb
ss
xor
outsl
in
mov
sbb
sbb
fadds
fdivl
xchg
xor
xchg
enter
rorb
or
inc
mov
insb
xchg
hlt
mov
nop
mov
mov
idivl
lcall
inc
popa
aad
mov
jmp
nop
movb
lea
cmp
rcl
mov
push
push
das
fsubr
rolb
push
aaa
push
lock
inc
daa
pusha
lds
and
xchg
push
call
mov
push
dec
inc
push
cltd
add
arpl
dec
int3
insb
sahf
je
sub
adc
pop
in
das
inc
sub
inc
aas
int3
xor
mov
add
or
xchg
mov
sub
into
pop
and
pop
ret
push
lahf
xchg
inc
mov
pop
mov
add
cltd
movsl
xchg
xchg
inc
cmp
adc
movsb
adc
shll
das
push
mov
inc
enter
rclb
inc
jnp
mov
hlt
xchg
lahf
repz
xorb
test
mov
aaa
repnz
xchg
or
dec
push
adcb
cmpsl
or
icebp
pop
adc
mov
pop
pusha
cltd
inc
ljmp
cltd
inc
inc
jne
dec
dec
fs
addr16
or
cmp
adc
cmp
add
nop
and
rcrb
push
add
xor
jo
in
in
jns
mull
in
out
mov
jns
dec
pop
imul
sub
icebp
jns
mov
jmp
xchg
cs
mov
adc
int3
dec
add
loope
sarl
push
shrb
lods
adc
jbe
jns
out
push
and
cmp
les
rcll
dec
je
aas
or
mov
pop
xchg
push
outsb
mov
stos
in
xchg
sub
cltd
loope
mov
sbb
aam
rolb
jp
jg
fisttps
mov
fisubs
es
cmp
fsubs
cmp
push
jo
nop
dec
mov
lcall
dec
and
xlat
adc
mov
adc
dec
pop
mov
dec
pop
inc
or
shlb
jns
jl
roll
rorl
js
fidivl
icebp
roll
sbb
dec
mov
inc
nop
ds
mov
inc
test
das
pop
call
bnd
mov
rorb
mov
xchg
fmuls
int
pop
fsubr
mov
das
mov
loopne
nop
add
aam
dec
iret
repz
or
dec
sub
jg
add
xchg
pop
inc
int
dec
addb
jns
jp
test
out
ss
mov
adc
and
add
jnp
out
push
aam
add
les
xor
leave
xchg
addr16
fldl
inc
add
pop
pop
dec
fldenv
fidivl
fmuls
sub
jl
out
imul
fs
jo
loopne
mov
ljmp
clc
push
push
push
push
push
push
stc
mov
push
call
mov
clc
sub
iret
repz
cmpsl
cld
add
push
adc
aam
iret
sarl
hlt
fdivrl
add
rolb
sbb
sbb
mov
sub
arpl
lcall
xor
push
decb
add
cmp
mov
mov
incl
add
cmc
add
testb
push
dec
adc
push
fs
cmpsl
stc
cmp
les
subl
push
inc
push
arpl
inc
test
stos
dec
cli
imul
dec
xchg
xchg
in
dec
push
push
push
push
mov
pushf
dec
and
mov
fisubrs
push
loopne
in
addb
shl
repz
test
add
out
pushl
add
pop
sub
rorb
mov
jp
push
dec
dec
fs
test
mov
add
jb
out
xor
or
pop
pop
push
lretw
sbb
in
dec
pop
push
lea
mov
insl
gs
xlat
rcrb
xor
dec
jl
cmp
jne
in
mov
xor
je
sbbb
dec
sbb
dec
and
mov
mov
jb
jne
fsubrl
out
jl
or
push
cmp
mov
pushf
push
enter
push
add
add
in
push
mov
dec
ret
ja
sbb
bound
ss
xchg
cmp
test
and
and
or
in
and
jmp
dec
pop
and
lret
mov
incl
pop
or
pop
adc
lock
add
je
sub
sub
inc
fsubl
test
and
and
jmp
sbb
adc
jno
jbe
add
out
adc
dec
fistps
stc
mov
stos
inc
ret
sbb
sub
scas
loopne
pop
xchg
add
push
inc
xlat
and
mov
or
pusha
pop
pop
stc
add
xor
add
jo
or
adc
stos
cmc
pop
lods
sub
push
push
or
jl
mov
xor
shlb
xbegin
xor
sub
dec
jne
pop
or
xor
push
mulb
xlat
rorl
or
sbb
pushw
or
and
rolb
inc
jle
or
push
inc
int3
sbb
int
dec
ja
mov
in
mov
and
inc
ds
inc
inc
hlt
mov
lods
in
in
inc
pop
je
adc
push
adc
sbb
sbb
add
xchg
out
and
mov
add
add
or
inc
sub
rcrb
pop
imul
adc
jl
push
test
sbb
sub
mov
cmp
mov
decl
cmpl
pusha
sbb
inc
in
sbb
xchg
aad
nop
cmp
pop
imul
pop
jle
shll
outsb
je
dec
cmp
mov
fnsave
mov
dec
jne
rolb
dec
jne
rolb
mov
xor
adc
add
and
or
pop
mov
dec
ret
std
les
jecxz
xchg
daa
sbb
mov
add
inc
or
pusha
or
cmpb
dec
add
inc
ret
fcmovnbe
movb
test
mov
or
sbb
pop
into
add
push
sbb
loopne
pop
fsubr
xor
cwtl
jmp
popa
dec
lret
cmpsl
test
aam
call
inc
mov
and
xchg
out
cmp
inc
dec
jne
xor
xchg
mov
loop
js
sub
ljmp
scas
mov
es
into
sub
loopne
clc
and
mov
xlat
add
inc
cmp
loope
hlt
push
or
push
jecxz
cmpsb
dec
mov
mov
cs
aaa
sbb
pusha
call
cwtl
rcl
add
ret
sbb
inc
pusha
adc
add
in
inc
aaa
or
dec
push
jl
inc
fidivs
push
push
in
or
hlt
cmp
cmp
je
and
dec
dec
cmp
inc
fldt
add
es
stc
fcompl
pop
push
dec
lock
fbstp
faddl
jmp
decl
jne
lods
or
adc
jbe
inc
mov
fistpll
leave
lock
adc
enter
sbb
push
xor
mov
out
cltd
out
mov
test
ret
mov
fnstsw
sbbb
pop
push
int
rorb
shrl
mov
punpcklbw
pop
xor
xchg
inc
mov
in
js
add
sti
sbb
pop
pop
dec
lahf
lret
mov
test
outsl
hlt
mov
add
test
add
pop
sbb
add
popa
pop
mov
or
jae
lods
adc
adc
fadds
mov
xchg
cmp
xor
cmpb
add
adcb
jecxz
or
mov
dec
jae
je
push
scas
imul
or
test
test
xlat
add
imul
arpl
jb
stos
or
mov
cmp
and
cmpsl
scas
pop
movsb
scas
ss
imul
dec
dec
mov
hlt
jmp
push
test
arpl
mov
sub
mov
dec
sub
adc
mov
sub
loop
adc
loope
or
adc
jbe
adc
ret
xor
inc
jge
je
les
xbegin
ret
dec
sub
pop
sbb
xor
dec
in
in
imul
sbb
sbb
es
sbb
cmp
push
rcll
in
and
or
lds
mov
jb
inc
sbbb
or
and
bound
and
fwait
in
into
mov
or
sbbb
dec
pop
in
mov
inc
mov
xorl
adc
dec
inc
or
or
rorl
jl
jae
addr16
icebp
and
or
or
rolb
add
sub
mov
pop
outsb
dec
mov
mov
xchg
xlat
and
cld
cmp
xchg
pop
pop
popa
and
mov
or
rclb
fbld
leave
xchg
out
pop
mov
pop
divl
push
in
xor
sub
lea
xchg
rolb
aam
lahf
push
cmp
cld
mov
mov
cli
loope
and
inc
add
mov
jne
sbb
sub
mov
or
out
fmull
int3
add
jp
les
add
fcoml
daa
mov
push
sbb
adc
addb
ja
jmp
rclb
ret
divl
mov
test
xor
pop
dec
call
dec
jl
mov
push
and
subl
jecxz
xchg
andb
jcxz
daa
mov
add
mov
arpl
jge
push
nop
pop
xor
hlt
or
mov
inc
xchg
dec
pop
sub
dec
mov
push
sub
push
xor
adc
dec
cmp
inc
push
es
mov
ret
cmpl
cmpsb
add
cwtl
dec
nop
outsl
jl
and
adcb
arpl
in
or
inc
cltd
sbb
insl
xchg
or
out
add
sbb
pop
adcb
mov
xor
push
outsb
lock
test
mov
dec
cs
jnp
mov
push
arpl
movsb
into
xchg
dec
sahf
fwait
shlb
les
xor
cmp
pop
pop
mov
clc
je
lret
aam
jbe
sub
mov
xchg
or
addl
and
dec
rorb
fldenv
or
arpl
jno
sub
ja
xchg
popa
movsl
sbb
and
movsb
es
test
cmp
mov
testb
dec
push
imul
push
dec
mov
push
lods
lea
add
jp
das
fmull
aas
cltd
sub
andb
inc
push
pop
xchg
push
and
xchg
and
lods
das
cmc
sub
incl
or
insl
mov
mov
lahf
nop
jnp
inc
dec
add
adc
stos
outsb
pop
mov
add
dec
mov
roll
xchg
outsb
rolb
lods
stos
pusha
leave
sbb
mov
mov
std
dec
pop
add
sub
lea
or
mov
lods
and
push
cmpsl
daa
sbb
push
inc
popf
jo
mov
push
test
sbb
pop
and
add
insl
jp
mov
mov
into
test
and
dec
jmp
sarb
inc
inc
js
cmp
outsl
push
mov
push
adc
fdivs
shr
test
aaa
cmpl
leave
hlt
or
add
stc
add
adc
dec
loope
sub
stos
jmp
lahf
add
mov
cmp
jmp
inc
fisubrs
movsb
lock
jge
add
adc
jne
sbb
popa
mov
psubw
inc
dec
scas
std
jle
add
adc
pop
sbb
inc
or
daa
aaa
and
add
idivl
fstpl
mov
adc
and
mov
jmp
inc
ret
pusha
sahf
popf
push
mov
mov
and
mov
shlb
cli
addr16
mov
push
dec
lret
jl
shrb
enter
rorb
cmpsl
and
andl
add
add
xchg
fdiv
mov
mov
jo
test
push
fstpt
mov
and
test
push
movsb
fs
in
ret
fidivs
mov
sub
jg
dec
mov
dec
and
and
xlat
mov
inc
mull
adc
imul
or
mov
jmp
mov
leave
add
leave
movl
push
data16
scas
rorb
movsl
aas
xor
movsb
in
fimull
cmpb
pop
and
xor
popf
inc
jne
loop
addl
jne
mov
inc
cmp
or
xchg
and
iret
jb
add
fiaddl
dec
adc
and
aaa
inc
sbb
sbb
add
inc
push
dec
outsb
movsl
loop
push
scas
filds
pop
lods
mov
pop
add
adc
inc
enter
jne
dec
xchg
insb
rcll
add
test
dec
xchg
push
mov
fdivr
xchg
push
xor
rcrb
clc
add
add
sub
cmp
je
push
ss
xchg
jecxz
pop
push
rclb
fstl
inc
pop
push
loop
shll
addb
aad
push
mov
mov
clc
adc
pop
cmp
jae
add
dec
mov
inc
stos
adc
btr
cmp
jl
frstor
rol
add
jmp
pop
fadds
test
mov
and
out
sbb
enter
cmp
je
push
sbb
xor
push
orl
dec
std
loop
bt
jb
shl
cmp
aas
push
inc
mov
jl
adc
push
inc
fnsave
cmp
jne
inc
decl
jne
les
and
and
xor
dec
mov
fdiv
adc
and
jns
popf
adcb
imul
sbb
inc
dec
adc
movsl
adc
mov
test
rcrb
xchg
and
enter
cmc
imul
outsb
imul
adc
xchg
fs
pop
test
sub
mov
mov
sub
inc
mov
incb
push
and
mull
aaa
js
push
rorl
and
push
out
push
loopne
inc
mov
les
mov
and
adc
or
sub
adc
fmuls
ljmp
into
rcll
dec
aas
or
sub
jb
clc
adc
cmp
test
cwtl
cmpw
sahf
dec
inc
inc
testb
pusha
cmp
adc
push
push
pop
enter
and
jmp
pop
push
adc
pop
jl
lds
movsb
mov
fldenv
cmc
or
mov
stos
or
ret
push
mov
xchg
xchg
jl
push
xor
xchg
mov
rcll
inc
sar
adc
mov
fistpll
jo
mov
dec
xor
cmpl
out
test
sbb
cmp
or
push
mov
pop
xchg
sbb
dec
testl
in
add
xor
pop
in
cltd
jnp
xchg
push
fcomps
mov
adc
jecxz
lods
sub
pop
or
test
mov
insl
cwtl
mov
xorb
in
cmp
ja
insl
in
push
mov
pop
jmp
pop
push
popa
add
dec
and
lock
jge
xor
pop
fldenv
jle
mov
add
pop
call
js
pop
sbb
jbe
mov
fimuls
adc
pop
and
mov
mov
xchg
fsts
aaa
pop
push
inc
mov
mov
jno
adc
lea
sbb
fadds
daa
xor
repnz
sbb
dec
das
mov
xchg
dec
sbb
xchg
dec
jl
jne
aas
push
and
das
fs
outsl
pandn
jl
stos
pusha
ljmpw
mov
inc
pop
cld
pop
rorl
faddp
in
mov
pop
scas
mov
js
lahf
inc
and
test
testl
inc
and
hlt
jnp
ret
outsl
xchg
cli
rolb
inc
es
mov
or
or
cmp
shll
call
jo
dec
testl
jecxz
xor
sbb
adc
pop
sbb
shl
sub
ficompl
push
xor
xor
push
das
popf
sbbl
out
add
xchg
addr16
cmc
cmp
scas
nop
or
clc
inc
daa
add
aas
popa
push
test
push
push
clc
add
ss
pop
inc
adc
pop
mov
loope
pop
aas
add
dec
sbb
cmpsb
sub
sbb
out
je
mov
xor
xchg
mov
mov
pop
pushf
mov
lcall
fwait
adc
add
dec
mov
jmp
xchg
sub
lahf
adc
xor
cltd
arpl
aaa
inc
jbe
sub
fs
mov
jb
cmp
jne
sbb
shr
push
xchg
cmp
push
xlat
adc
mov
xlat
inc
dec
jne
push
adc
jns
jb
hlt
jmp
ret
inc
scas
pop
pop
inc
sub
mov
mov
mov
notb
aad
mov
adc
decl
fnstcw
jnp
sub
sbb
call
or
jne
sbb
mov
pop
push
mov
inc
inc
xchg
push
fnstcw
sbb
jmp
fld
xchg
insb
test
aaa
pop
push
incl
cs
jb
mov
mov
iret
dec
jne
loope
ret
adc
adc
add
loopne
daa
pop
fnstcw
data16
xchg
push
sub
cmp
mov
mov
mov
or
jne
repnz
pop
loop
xchg
lock
cmp
shlb
stos
xor
std
ja
daa
add
je
mov
stos
clc
repz
adc
jp
sub
cs
jns
sbb
ja
mov
mov
cmp
dec
loopne
popa
shlb
int
je
dec
push
push
or
nop
add
push
cmp
push
add
dec
imul
pusha
mov
cmpsl
xchg
xor
adc
mov
or
add
add
in
push
push
add
leave
and
add
es
mov
sub
out
adc
inc
sahf
popl
jo
inc
divl
mov
mov
sbb
xchg
rcrl
xor
jp
pushf
add
jmp
and
mov
les
test
inc
mov
xchg
or
xor
sar
int3
or
in
adcb
pop
jo
shll
jbe
icebp
xor
inc
add
test
mov
adc
arpl
xor
xchg
adc
xlat
cmc
jbe
add
sub
mov
mov
cmp
icebp
movsb
jb
jge
lock
lock
or
rcrb
or
gs
jne
adc
lods
xchg
pop
loopne
jbe
in
das
add
push
nop
daa
addr16
inc
push
and
sub
dec
adc
cli
imul
sub
xchg
ja
or
enter
lock
aaa
mov
shll
xchg
sub
sub
cld
roll
xor
dec
xchg
and
mov
das
sbb
aad
int
hlt
and
pop
js
adcl
and
arpl
sub
mov
test
cmpb
pop
lea
pop
adc
lock
adc
cli
or
fisttpl
andl
or
stos
clc
mov
imul
inc
std
inc
push
push
pop
mov
push
ret
sub
pop
icebp
mov
test
mov
fcomi
in
add
sbb
or
xor
jns
mov
vcomiss
cmp
ljmp
jp
shll
and
push
fidivrl
mov
testb
iret
aas
inc
add
mov
lea
sbb
fisubrl
mov
sub
lsl
add
lahf
push
mov
dec
jge
pop
repz
fildll
mov
dec
orb
cld
cld
rcll
sub
add
inc
add
clc
inc
clc
test
test
hlt
jp
enter
gs
adc
fcomip
cld
mov
cmp
and
pop
sbb
data16
jl
lods
jne
gs
faddl
js
push
add
jo
sbb
popa
sbbl
and
add
xchg
lahf
sub
clc
call
ret
sbb
mov
xor
or
mov
lods
jno
ret
pop
jl
add
call
movsl
dec
and
mov
imul
nop
mov
loopne
test
in
in
push
and
mov
mov
into
jmp
nop
outsl
clc
test
ud0
fbstp
xchg
faddp
outsl
jle
mov
inc
pop
jecxz
add
or
nop
lret
outsb
adc
adc
sbb
or
stc
mov
test
es
ret
icebp
mov
popa
sbb
lock
mov
inc
xor
or
dec
mov
xchg
jge
fldt
loope
xchg
fwait
jge
insl
leave
or
mov
cmp
lock
lock
jge
sub
stos
push
es
xor
loop
into
aas
pop
pushf
enter
out
fwait
daa
jle
mov
push
inc
cmp
pop
aaa
or
rclb
leave
sub
popa
sarb
or
push
adc
or
hlt
je
mov
scas
adc
jecxz
jo
addr16
mov
les
enter
or
scas
jg
push
loope
cmpsb
and
push
mov
pop
mov
cmp
lcall
int
xor
mov
inc
mov
cs
push
and
cmpb
add
add
adcb
sub
jg
pop
and
cmpb
mov
mov
mov
adc
sbb
inc
jno
push
inc
inc
xchg
pusha
dec
fsts
adc
add
adcl
mov
aaa
pop
jmp
nop
add
shrl
sub
mov
addr16
aad
int
hlt
jno
fldl
outsl
mov
xor
push
js
xor
push
int
mov
ljmp
xor
adc
decb
sub
stos
add
addr16
mov
lret
sub
jns
cmp
cmp
add
push
stos
and
or
xlat
mov
jmp
mov
mov
rorb
movsb
push
in
and
push
mov
adc
mov
push
lock
fisttpll
jns
cs
jne
cmp
loopne
je
add
sub
scas
nop
adc
add
aas
stc
je
fcmovnb
or
or
movsb
xchg
bound
je
adc
rorl
call
je
adc
sbb
adc
xor
shlb
lea
cmpsb
incb
sub
push
pop
sbb
push
pop
add
lock
repz
add
shlb
sbb
fistps
dec
sub
jb
loopne
mov
jne
pop
aas
imul
in
jmp
sbb
aaa
jge
cmp
mov
ja
pop
je
cmc
cmpsb
in
xchg
xchg
push
xchg
pop
cmp
jne
insb
inc
push
scas
bswap
lea
adc
mov
push
sbb
mov
inc
shrb
imul
jecxz
sbb
test
daa
lock
fisubs
in
fucomip
fidivrl
or
mov
inc
popa
pusha
mov
in
fists
repz
or
adc
sarb
icebp
mov
push
das
cmp
jne
xorb
into
dec
or
test
add
roll
push
orb
mov
or
pop
mov
aaa
push
adc
add
mov
int
inc
leave
mov
mov
mov
dec
sahf
xchg
cmp
out
add
rcrb
scas
aad
lods
pop
clc
sub
wrmsr
xor
dec
cld
mov
call
push
enter
adc
lcall
sub
sarb
aaa
test
dec
cmp
scas
mov
dec
cmpb
dec
shrb
pusha
loop
das
sbb
xchg
mov
push
push
jo
cmp
inc
xchg
ret
add
call
imul
testb
xchg
mov
xor
push
cmp
jbe
adc
sub
push
cmp
enter
aaa
xor
mov
mov
pop
out
sbb
xor
roll
aam
sbb
inc
pop
xor
ret
push
subb
cltd
add
sbb
repnz
test
fldl
push
into
add
lock
fisubrl
frstor
decl
iret
inc
fisubrl
mov
aaa
pop
not
mov
fmuls
pop
sar
sbb
pop
je
add
xchg
sbb
aam
cmp
dec
divb
leave
ret
mov
cmp
dec
mov
or
shr
sub
pop
or
mov
xor
aas
and
jge
lea
jmp
cld
imul
cmpb
stos
repz
inc
adc
mov
insl
es
mov
push
repnz
xor
aaa
aaa
mov
mov
ret
push
in
xchg
ja
dec
mov
push
mov
repnz
int
test
sar
mov
lcall
popa
mov
lret
sbb
cmp
dec
lretw
bnd
pop
push
or
xor
dec
mov
lahf
adc
jle
fimull
cmp
add
hlt
adc
add
and
cwtl
sbb
aas
dec
and
orb
nop
jne
call
sub
jno
in
cwtl
lods
ret
out
incl
aad
sub
and
push
mov
push
mov
cs
test
nop
jne
xchg
clc
pop
int3
add
rorl
shlb
xor
adc
ljmp
popa
jg
jl
pop
add
jne
mov
add
and
mov
jge
sbb
jle
mov
ficompl
dec
in
hlt
jl
adc
cmp
inc
cmp
cmp
and
or
and
adc
jmp
sub
nop
pusha
inc
and
pusha
and
in
loope
add
or
das
push
mov
cltd
adc
loope
movsb
into
xor
inc
mov
or
xchg
xchg
pop
popf
sub
add
push
cmp
or
cmp
jp
add
test
es
loope
or
stos
add
aaa
orb
sbb
roll
imul
int
pop
dec
pop
or
mov
and
xchg
fisubrs
xchg
outsl
xchg
test
mov
inc
pop
subb
pop
subb
push
fcmovnb
pop
xor
inc
out
xchg
cmpl
cmpl
xorb
adc
inc
lret
push
imul
mov
mov
dec
and
mov
shl
cmpsl
pop
and
xchg
mov
test
fst
mov
or
sbbl
daa
icebp
lea
mov
xor
sbb
sbb
out
addb
repnz
negb
or
cmp
push
imul
pop
les
sbb
xchg
stc
jne
dec
or
and
xor
clc
scas
aam
sbb
cmp
ror
push
sarb
adc
inc
shlb
sub
inc
cmc
fisubs
fiadds
jmp
cld
cmp
cmp
dec
and
push
cmp
mov
adc
sub
sbb
in
rol
sbb
inc
insl
sub
adc
fists
mov
add
lock
jbe
or
sbb
adc
pop
ret
add
call
outsl
nop
nop
cmp
add
int
dec
or
jbe
add
pop
jmp
pop
push
stc
jg
adc
imul
push
mov
mov
mov
inc
call
adc
dec
sub
movsb
mov
add
dec
xor
mov
cmpb
pop
repnz
and
sbb
mov
outsl
nop
mov
std
dec
movsb
jmp
inc
xchg
pop
jo
inc
inc
inc
xlat
or
and
cmp
je
xchg
out
scas
mov
adc
xchg
scas
sub
pop
pop
cli
imul
inc
add
rcr
daa
adc
xor
adcb
or
fcoml
add
in
and
aas
icebp
ds
xchg
andw
or
adc
or
jecxz
jno
or
jns
or
jge
lea
popa
or
cwtl
mov
jecxz
in
in
or
imul
and
mov
xchg
push
jmp
xlat
xchg
test
enter
sarl
enter
test
pusha
adc
enter
movsb
sbb
insl
mov
ljmp
out
mov
cs
push
daa
xchg
push
fadd
ffreep
mov
outsl
adc
or
pop
mov
sbb
mov
sub
ficoms
cmp
mov
icebp
dec
add
into
or
inc
jle
pop
or
cmp
je
dec
or
nop
out
iret
out
mov
add
add
sbb
mov
pusha
and
ret
cmpb
ret
fwait
negl
nop
inc
add
pop
add
lret
test
or
pushf
cmpsl
addb
or
mov
rolb
add
loopne
and
incl
xchg
adc
dec
leave
push
call
pop
jns
test
clc
dec
or
in
adc
inc
mov
scas
shlb
movsl
stos
cmp
jge
data16
rclb
adc
push
mov
movsb
pop
adc
push
stos
adc
out
push
loopne
inc
mov
jmp
mov
je
nop
psraw
ss
mov
mov
imul
mov
or
sbb
orl
clc
pusha
jne
mov
xor
aaa
clc
and
jbe
and
pop
cmpsb
and
jnp
or
sbb
and
and
sub
or
and
movsb
sbb
push
dec
stos
mov
mov
dec
xchg
addb
add
sbb
sub
push
xlat
sbb
xchg
jge
lods
sti
jg
inc
pop
inc
nop
outsl
lea
mov
lcall
ffree
sbb
adc
pusha
cwtl
add
sub
sbb
mov
sarl
pop
sarl
and
and
stos
dec
add
je
das
push
pop
cmp
adc
xor
jne
in
call
ret
enter
cs
mov
gs
pop
fs
out
das
shlb
inc
call
dec
in
jmp
or
or
arpl
adc
enter
pop
loop
push
and
cwtl
fstpl
pop
mov
aaa
test
dec
ljmp
fldcw
lock
mov
jle
loop
aas
mov
divb
pusha
js
in
xchg
push
adc
sbb
dec
shrb
mov
pop
aaa
sub
dec
sbb
pop
dec
pop
pusha
pop
cld
mov
push
pop
dec
jae
push
ficoml
mov
cmp
dec
or
ja
xor
add
pop
adc
imul
sbbb
push
mov
xchg
jg
inc
add
xchg
fwait
pop
adc
sub
mov
inc
imul
push
repnz
shr
sbb
inc
cmp
lret
mov
pop
add
lcall
adc
mov
outsb
or
inc
jo
adc
test
adc
icebp
xchg
push
add
pushf
scas
lcall
in
stos
ja
fimuls
lret
ljmp
inc
and
int
fiadds
and
push
int
sbb
jmp
adc
mov
mov
pop
ret
add
add
daa
bound
push
ds
sbb
xor
xchg
rolb
xchg
fs
ret
add
push
aaa
in
sbb
push
pop
pop
jecxz
mov
in
inc
sbb
negb
xchg
inc
gs
and
outsl
pop
or
rcr
push
ljmp
sbb
mov
jmp
mov
inc
push
add
sub
jae
jbe
scas
jbe
dec
hlt
hlt
dec
mov
lret
adc
dec
lret
mov
cld
testl
sbb
or
stc
sbb
or
mov
fs
mov
test
mov
out
or
pop
inc
sarl
push
and
jl
push
cmp
inc
push
enter
add
xchg
mov
jmp
jge
dec
stos
and
adc
xor
loope
xor
sbb
fmuls
xorb
and
xor
popa
sbb
dec
mov
adc
and
ljmp
sbb
out
push
add
push
sub
cmp
inc
sbb
jne
push
lcall
std
fstps
loop
lock
adc
or
pop
inc
jmp
xchg
sbb
xchg
sarb
ja
jl
or
cmpsl
sahf
and
adc
xchg
sub
jg
sbb
addr16
cs
stos
cmp
cld
cmp
inc
and
push
fdivs
mov
out
cmp
popa
push
xchg
inc
mov
inc
mov
lock
or
jecxz
push
sub
and
or
push
hlt
daa
inc
sbb
adc
sbbb
lret
mov
inc
popa
fucomi
in
lock
imul
sub
add
xchg
xlat
push
test
and
test
or
mov
in
and
insb
push
mov
mov
mov
adc
cwtl
push
pop
scas
cmpl
lea
ss
jle
sub
js
xchg
xchg
scas
ret
add
mov
xchg
mov
fdivrl
ffree
cmp
decb
sbb
and
sbb
test
sbb
adc
jle
xlat
dec
imul
and
jo
dec
out
dec
mov
nop
add
push
mov
xlat
dec
imul
mov
and
push
movb
add
ljmp
mov
loope
add
xchg
je
testb
cltd
push
loopne
hlt
aaa
scas
stos
addl
cmp
cmp
mov
pushf
nop
cmp
pusha
jne
decl
xorl
shrb
push
inc
lret
sbb
or
cmp
fldt
sbb
sub
data16
inc
stos
cs
cwtl
or
or
mov
addl
inc
notl
outsb
fiaddl
roll
push
mov
jmp
aaa
adc
es
jge
sahf
push
in
sbb
mov
push
fs
dec
pop
daa
adc
in
push
push
pop
jecxz
pop
mov
dec
cmp
add
mov
int
cmp
add
test
int
daa
clc
sbb
nop
cmp
outsb
ficompl
cmp
jne
push
or
jne
pop
vmwrite
sar
mov
outsl
loope
rclb
imul
jae
mov
or
xchg
movsl
adc
mov
cs
int
add
inc
and
lea
mov
cmpsb
sti
sbbl
mov
xor
js
aad
pusha
push
aas
pushf
mov
inc
jl
js
clc
jecxz
fisttpll
loopne
xor
adc
xorl
ja
pusha
xor
leave
xor
adc
mov
in
or
movsl
xchg
fs
lods
nop
inc
cmp
mov
mov
popa
xchg
adc
pop
push
push
sub
mov
cmpsl
pushf
nop
xor
ja
inc
add
or
jo
ret
call
dec
insb
sub
xchg
xor
mov
jge
decl
adc
add
and
jnp
mov
jne
jp
cld
das
loopne
mov
sub
out
dec
sbb
xorb
je
sub
or
in
mov
pusha
fistpl
sub
sub
xlat
xorb
out
in
ficoml
nop
nop
inc
movsb
push
mov
mov
jmp
mov
dec
adc
mov
xchg
pop
adc
outsb
fsts
lret
ror
xor
dec
sub
sub
jo
clc
xchg
rcrl
pop
xlat
sbb
mov
fcomps
push
out
les
roll
jne
cmpsl
loopne
cmp
push
cmp
jl
jns
sahf
inc
cmpsl
inc
mov
mov
cmpsl
mov
jle
add
adc
adc
imul
sar
or
sbbl
push
pushf
sub
add
jo
out
dec
xor
mov
inc
jge
adc
inc
js
sub
jae
mov
mov
mov
xor
movsb
js
je
cmp
push
pop
xor
mov
ja
adc
ret
subb
xor
loopne
xor
out
in
lea
lods
unpcklps
adc
xor
pushf
inc
insb
mov
mov
hlt
xchg
mov
and
pop
jg
enter
je
ljmp
xor
jl
inc
imul
cmc
pop
xor
cld
add
call
pop
ret
decl
xor
es
add
jge
jnp
or
cmp
sbb
or
xorl
shlb
test
data16
int3
ret
add
rorl
fs
mov
addl
adcb
push
push
sbb
jne
aaa
cmp
add
sbb
int3
xchg
insl
iret
mov
jae
sub
sbb
aam
mov
pop
call
add
sarb
in
sub
jb
aas
jl
ror
in
xchg
jo
imul
fdivl
xchg
in
xor
mov
push
jno
push
hlt
repz
sub
adc
in
mov
out
dec
sbb
adc
imulb
pop
dec
sub
lret
ret
inc
jmp
sub
pop
arpl
adcb
daa
inc
nop
arpl
push
and
jl
call
push
add
addr16
movsb
mov
rol
adc
clc
sbb
push
sub
xchg
das
mov
sarl
mov
add
pop
in
addb
cmp
in
inc
dec
inc
sub
lods
adc
sub
adc
roll
xor
dec
cmp
mov
sbb
sub
inc
sub
lret
cmp
adc
xor
pop
sbb
sub
add
adc
fcoml
pop
inc
sub
sbb
fadds
cmpl
mulb
or
std
pop
mov
call
cmp
xlat
aam
sbb
cmp
lock
jno
inc
xchg
scas
xchg
std
pop
push
mov
add
xlat
insl
mov
pop
lahf
jne
fwait
dec
ds
sub
sahf
xchg
sbb
sub
in
push
sbb
add
pop
cmpsl
sbb
in
call
stc
sbb
push
xor
jecxz
adc
mov
jnp
sbb
fldt
xor
fisubl
mov
pushf
pop
aaa
adc
aam
sbb
out
mov
push
xchg
or
inc
sub
mov
setp
orl
fcomps
sbb
daa
out
xchg
cmp
sub
fisttpll
rclb
mov
add
sbb
push
int
shrb
scas
loope
cld
lahf
cmp
xchg
cld
and
sub
cld
pop
fldt
int3
pop
or
out
or
scas
adc
or
and
dec
push
and
adc
cwtl
xor
push
or
xor
sub
mov
cld
mov
mov
add
jge
add
sti
popa
sub
xor
pushf
mov
or
sarl
sub
add
movsl
aam
inc
je
push
xchg
test
inc
hlt
ret
movsb
inc
sbb
xor
outsb
lock
mov
dec
nop
push
mov
fs
ds
adc
add
flds
xchg
sbb
movups
lcall
cmp
loope
or
fildll
or
adc
mov
fnop
aaa
mov
out
mov
negl
jo
faddl
add
mov
sub
xchg
cmpl
icebp
dec
push
or
push
dec
pop
xorb
jo
fcmovnbe
sub
mov
ret
sub
das
sbb
nop
out
cmp
dec
adc
not
stos
add
outsl
push
xchg
test
xchg
inc
push
jle
sub
loopne
ljmp
inc
cmp
mov
cs
xor
mov
cmpsl
ret
and
test
mov
gs
cltd
and
push
loope
addr16
adc
lock
dec
mov
pop
fstpt
push
mov
jne
ret
aam
add
and
testb
mov
pop
jns
pushf
aad
fcompl
xchg
cmpsl
frstpm(287
push
mov
and
cs
fists
adc
and
mov
data16
dec
frstor
outsl
scas
repnz
lods
xchg
fsub
push
or
call
in
mov
in
inc
sub
js
fdivl
mov
inc
daa
lds
jnp
dec
pop
xchg
aad
add
lods
mov
setno
test
fs
xor
movsl
leave
les
push
popa
xor
xor
cmp
xor
popf
or
dec
and
pop
movsb
test
hlt
push
mov
mov
mov
insl
push
test
or
mov
imul
jmp
int3
mov
les
popa
jge
sbb
flds
mov
outsl
add
in
add
mov
adc
push
jmp
xchg
test
xlat
rcl
shlb
and
or
pushf
sub
lock
arpl
pop
aad
pop
pop
testl
add
out
sbb
mov
inc
stos
sbb
mov
inc
sub
pusha
cmovl
sbb
mov
incb
dec
js
repz
xchg
ret
and
lret
mov
mov
adc
add
nop
into
out
mov
sbb
sarb
inc
rcrl
pop
mov
dec
dec
fld1
push
test
or
jge
lcall
sarb
xor
dec
sub
gs
pop
add
mov
pop
pop
enter
xor
hlt
in
cmpl
dec
pop
mov
add
or
call
mov
lods
add
std
or
pop
imul
rol
mov
adc
clc
jge
loopne
mov
out
xchg
and
adc
cmp
test
les
jno
cmp
xchg
push
adc
push
sub
outsl
jmp
daa
mov
lcall
sub
xor
dec
fs
les
adc
sbb
cmp
ja
sbb
test
mov
push
popl
out
ds
mov
fcompl
sub
add
mov
mov
dec
call
ljmp
xchg
cmp
enter
xchg
dec
push
bound
xor
jo
fcmovu
in
or
adc
cmc
mov
push
lret
insl
mov
inc
loopne
mov
mov
cmp
cmp
clc
fsubrl
adc
in
scas
and
cs
xchg
ret
mov
dec
sub
push
xor
shl
int3
inc
push
mov
ds
fcomp
cmpsl
sbb
ret
ret
add
fwait
mov
fdivrs
and
sbb
and
out
or
ret
sbb
aaa
add
daa
push
iret
pop
pop
cmpsl
insl
or
adc
push
push
aas
jmp
inc
mov
xchg
mov
dec
fsubrl
adc
or
mov
dec
cmpsb
das
xchg
enter
inc
cmp
jne
test
mov
mov
std
push
and
lods
mull
jge
mov
dec
cmp
fsubrs
cli
in
xchg
in
adc
or
hlt
popa
out
mov
sbb
sub
out
xchg
sub
xor
inc
xchg
loopne
addb
ljmp
lods
clc
add
adc
sbb
pop
cmp
ja
cmp
jne
aaa
or
or
jmp
sub
outsl
xor
lar
ror
mov
mov
aam
sbb
mov
shlb
fmull
loopne
sub
mov
adc
nop
push
mov
outsl
sbb
shlb
cmpsl
mov
inc
aaa
das
cmp
xor
adc
fidivl
xor
das
jbe
dec
mov
enter
inc
leave
pop
lret
adc
add
xor
dec
das
ss
das
xchg
add
inc
shlb
jp
pusha
and
xor
cltd
inc
and
insl
cmp
push
sub
xor
cmp
cs
fistps
cmp
sub
popa
dec
sbb
ret
add
stos
ret
cld
jmp
mov
mov
sarb
daa
pop
loopne
cmp
inc
mov
idivb
jge
roll
sbb
push
dec
imul
cwtl
inc
arpl
pop
pop
or
inc
stos
bound
inc
jbe
nop
sub
mov
pop
inc
in
in
mov
cs
push
mov
loopne
stos
ret
loopne
add
movsl
lock
stos
rcl
lods
lret
les
push
arpl
sarb
add
jg
or
ret
aas
xchg
jno
mov
in
xchg
xchg
test
jle
shl
mov
mov
push
jmp
mov
cmp
push
xor
push
je
push
and
dec
pop
scas
or
adc
inc
sbb
xor
fwait
mov
shrb
xchg
xchg
clc
pop
xchg
inc
mov
pushl
rorl
sbb
push
push
mov
int
sarl
xor
clc
adc
je
jmp
push
cld
or
inc
inc
pushf
adc
dec
fdivrl
addl
push
mov
sahf
sbb
or
add
sahf
inc
dec
inc
shl
dec
adc
jnp
stos
andl
inc
jb
pushl
ret
mov
adc
repz
ret
fadds
cld
scas
andl
lock
adc
pop
push
adc
and
jo
mov
and
scas
rcl
xor
scas
cmp
pop
bound
pusha
cltd
adcb
inc
adc
lahf
push
add
les
ja
or
daa
ret
inc
jg
test
xchg
out
ficoms
fdivrs
jns
ja
pop
call
push
fdiv
cmp
sbb
cmp
loope
loopne
repz
jb
je
push
stos
cmp
mov
dec
aam
mov
jb
add
mov
pop
mov
popf
shll
cmpsb
jnp
push
xor
nop
enter
gs
jmp
mov
fwait
movsb
dec
cmp
adc
in
pusha
rorl
cmp
dec
push
ffree
or
adc
les
xchg
mov
or
push
xchg
or
mov
mov
out
sub
inc
ds
rclb
fadd
ret
pop
pop
xchg
dec
ret
jmp
cmp
push
loope
cmp
xchg
add
push
test
xchg
dec
jo
pop
repnz
jae
sub
sahf
mov
xchg
add
push
dec
pop
push
lods
xor
sbb
std
inc
pop
call
cmp
aas
popf
test
and
inc
cmp
adc
inc
js
mov
and
clc
lret
rclb
shll
test
push
clc
out
dec
push
mov
mov
inc
dec
call
adc
and
mov
ret
inc
push
xchg
mov
cmp
xor
inc
and
push
test
int
xor
push
sub
insb
push
imul
and
xchg
add
dec
mov
jae
lods
js
jle,pn
adc
enter
sub
fistl
push
and
inc
xor
jmp
scas
test
outsl
cmp
mov
sub
pop
add
cmp
loope
subb
shr
sbb
fmull
jb
adc
shlb
inc
sbb
ret
in
mov
addb
enter
test
ret
or
mov
pop
or
aam
sbb
jecxz
or
inc
loope
pop
mov
jno
inc
inc
add
imul
popa
sbb
enter
out
add
cmp
or
into
and
dec
call
bound
addr16
mov
sub
aas
sbb
xor
adc
xchg
push
lret
inc
iret
and
mov
dec
lcall
sahf
testb
lret
fstpl
clc
adc
in
push
loope
mov
cmp
sbb
pusha
mov
sti
pop
test
add
fmull
mov
mov
dec
cmp
adc
mov
cld
mov
pop
leave
shlb
inc
sbb
enter
sbb
test
or
inc
lcall
hlt
clc
hlt
pushf
jmp
mov
aas
ret
jmp
push
outsl
aam
mov
sbb
rcrl
hlt
add
jmp
das
and
sahf
ret
lods
adc
and
mov
push
inc
sub
inc
adc
fwait
out
jae
dec
or
dec
clc
mov
jno
addr16
faddl
adc
popa
testb
adc
cmp
pop
mov
mov
cmpsb
push
subl
sti
not
pop
shrb
or
mov
inc
push
sub
scas
cmpb
and
or
sbb
cmp
sub
add
and
idivb
mov
push
add
add
pusha
and
mov
sbb
jb
and
cmovs
mov
lret
aas
cwtl
je
mov
cmovb
cmpb
xchg
shrb
notl
pop
add
push
scas
xchg
cmpb
xor
sbb
inc
add
inc
pusha
cmp
pop
and
orb
daa
cltd
inc
jl
dec
inc
push
sub
push
mov
mov
cmpl
pushf
add
addr16
call
dec
dec
xchg
sbb
mul
or
popa
rcrl
xchg
movb
int3
mov
push
je
cmpsb
mov
dec
pop
push
pop
inc
scas
adc
adc
je
jo
mov
xchg
lods
jo
out
call
ret
dec
shl
jmp
rclb
sub
jnp
sbb
xchg
pop
inc
cltd
iret
push
push
mov
cmp
jp
or
adc
cltd
lock
dec
xor
ret
adc
mov
sbb
rclb
stos
js
mov
outsl
movsl
das
mov
jne
mov
pop
mov
lods
jbe
add
pop
sbb
or
orl
pop
fucomp
sbb
add
jnp
pop
es
cmova
les
lods
hlt
and
mov
enter
jg
inc
sarb
or
iret
mov
sbb
dec
or
dec
push
mov
jno
lea
jne
scas
pop
or
adc
inc
adc
movb
or
jns
dec
cmpsl
xchg
call
pop
xchg
shrb
and
f2xm1
jnp
cwtl
rclb
aad
mov
fneni(8087
xor
cwtl
ds
push
add
cmp
and
shlb
lock
add
push
and
xor
push
xchg
icebp
addr16
and
and
call
or
or
shr
test
in
dec
pop
and
push
xor
icebp
jo
orl
std
lods
jp
dec
push
jae
ret
lahf
or
add
or
in
rolb
dec
pop
rorb
and
aaa
shl
in
add
sbb
rolb
in
and
adcl
es
nop
bound
scas
imul
or
cmp
popa
add
fwait
xlat
jno
adc
xor
mov
mulps
insb
and
test
push
movsl
movsl
cmp
cmp
aaa
fisttpll
sbb
or
and
xchg
jge
jno
sub
ret
cwtl
jp
js
xchg
popf
icebp
mov
xchg
rolb
call
mov
scas
sbb
loope
mov
mov
dec
cmp
icebp
push
addb
jmp
daa
test
adc
jle
cwtl
inc
or
cmp
addr16
roll
mov
add
pop
popf
or
adc
pop
push
enter
mov
add
add
push
out
call
fstl
loope
arpl
push
loopne
cmp
sub
aam
repnz
arpl
js
jbe
jno
or
dec
push
les
xchg
inc
xchg
outsb
or
or
jne
ret
aaa
add
inc
and
and
bound
mov
es
jecxz
sbb
sub
sub
aad
lcall
popf
xchg
ret
jne
movb
or
test
outsl
lret
add
fcomp
or
push
mov
push
add
sti
push
adc
dec
filds
notl
cmc
push
and
xchg
sbb
dec
inc
setne
and
sbb
xchg
rol
or
shlb
xchg
jo
mov
mov
rolb
mov
xor
or
inc
add
inc
and
push
sub
xor
out
sbb
push
inc
inc
xor
push
jae
hlt
sub
cmpsl
jno
or
daa
mov
mov
mov
loopne
push
push
push
jg
inc
out
enter
cmp
add
aam
in
push
adc
xchg
xchg
mov
push
dec
pushf
jle
in
loope
jmp
je
int3
shrb
mov
insl
adc
mov
sti
mov
dec
sbb
mov
cmpsl
fldenv
sbb
and
sbb
mov
sbb
loopne
or
adc
faddl
popa
jb
adc
and
sub
popa
addl
sub
xlat
mov
mov
mov
push
arpl
cmp
mov
int3
test
dec
rcrl
pop
pop
rcl
cltd
shl
shlb
fisttps
or
adcl
out
or
aas
mov
inc
xor
rcrb
cmp
push
lock
adc
cmp
jne
add
mov
ret
aam
mov
pop
adc
sbb
adc
mov
or
inc
loopne
or
xor
int
ds
adc
sbb
xchg
pop
adc
sbb
cs
mov
movsb
xchg
sbb
adc
xor
cmpsb
or
pushf
imul
loopne
xchg
rclb
lahf
cs
xchg
jb
test
outsb
jnp
cmp
pop
push
push
jge
nop
pop
or
and
fcoms
out
push
push
xlat
aaa
ret
mov
js
xchg
sarl
fstps
pop
add
hlt
adc
dec
gs
incb
int3
adc
add
mov
dec
dec
gs
outsl
jo
dec
out
add
add
pusha
pop
nop
or
jae
out
inc
inc
daa
leave
lahf
aaa
sub
pop
arpl
lcall
sahf
int3
xchg
movsb
inc
mov
dec
das
mov
mov
or
mov
or
adc
mov
das
lret
and
jne
jl
andl
or
cmp
push
daa
jecxz
add
mov
dec
movsl
add
rorl
je
mov
hlt
pop
dec
outsl
lods
cwtl
shl
sbb
xor
inc
jae
and
lcall
or
sbb
dec
jne
rclb
push
je
or
les
hlt
outsb
and
sub
in
stos
mov
cli
push
das
jmp
sbb
and
inc
sbb
lret
mov
cmpsl
add
pusha
xchg
cmc
push
adc
adc
shll
push
adc
inc
or
xor
mov
stc
and
jo
int3
rdtsc
and
and
jnp
aad
jge
cmp
jg
push
dec
cmp
ja
push
add
gs
xchg
lret
add
out
cmp
mov
sbb
or
sbb
subb
push
test
sahf
sti
xor
push
clc
mov
add
incb
mov
dec
jne
push
adc
pusha
popa
adc
dec
or
xor
inc
cmp
xchg
or
inc
jmp
adc
mov
or
xchg
push
or
or
dec
cmp
mov
adc
and
repz
sbb
das
dec
pop
test
int3
pop
or
cmpsl
andl
sub
push
mov
rclb
mov
imul
shlb
cmp
aam
aas
or
shll
adc
mov
shl
inc
jge
addr16
out
fs
push
or
ljmp
mov
shlb
pop
push
fidivrs
scas
sbb
rcll
push
adc
repz
add
test
add
adc
mov
add
loopne
mov
dec
xchg
js
loope
adc
stos
inc
xor
xlat
adc
push
jge
push
cmpsb
mov
insl
rorb
mov
push
dec
out
inc
push
sub
pop
inc
out
fld
lds
ljmp
xor
push
inc
push
negb
imul
inc
cmp
inc
inc
lahf
aaa
dec
mov
lcall
setbe
inc
inc
insb
or
inc
je
shll
push
mov
popa
cmp
inc
adc
out
mov
outsb
lret
stc
and
rcrb
cmp
or
sbb
sbb
test
in
xlat
jg
add
ror
cmp
jne
xlat
testb
sbb
adc
pop
xor
mov
data16
mulb
sub
and
push
scas
or
rcrb
lods
mov
sub
rorl
adc
xlat
pop
test
sub
push
inc
dec
loope
jle
je
mov
add
xor
add
mov
or
adc
sub
or
pusha
sub
addr16
repz
setb
nop
loop
add
pushf
cltd
dec
leave
add
repnz
sub
or
inc
pop
sbbl
fiadds
dec
adc
lret
ss
add
xchg
jne
xor
rorb
cmpsl
add
jo,pn
mov
mov
scas
lock
jbe
pop
push
push
or
xchg
and
add
rorb
dec
out
jmp
hlt
shl
int3
add
cld
movl
xchg
nop
lahf
or
in
sbb
in
pop
fsub
lret
push
stc
and
adc
add
hlt
add
adc
fstpl
incb
clc
jne
sbb
movsl
and
outsb
rcr
int
pop
mov
xor
mov
popf
hlt
mov
cwtl
repnz
clc
or
repnz
lock
in
pop
mov
jmp
push
in
and
movsb
test
faddl
cmp
adc
push
jno
mov
ret
cld
aam
pop
loopne
scas
cmpsl
shl
aas
push
and
fadds
test
push
pop
imulb
sub
lret
sbb
or
cmp
pop
push
jp
or
add
jo
ja
adc
add
dec
rorb
xchg
dec
movsl
cltd
jecxz
pop
sbb
in
cmpsl
sbb
xchg
sub
or
mov
adc
jae
test
in
push
or
or
cmp
inc
rcrb
es
mov
and
pop
add
sbb
fdivrs
in
mov
inc
stos
in
movl
testl
out
or
into
push
test
bound
scas
es
aaa
or
inc
pop
sub
jne
sub
test
enter
ja
xor
adc
and
lock
pop
leave
and
out
pop
jg
mov
adc
xor
inc
stos
adc
push
xchg
test
call
test
or
aam
divl
xorb
inc
ret
aaa
mov
add
push
test
mov
mov
call
push
lea
mov
pusha
daa
cmpl
add
fisttpl
adc
movsb
outsl
lahf
cmp
and
or
xchg
mov
je
fisttpl
fimull
cmp
push
or
xchg
or
or
in
xor
mov
push
xchg
xor
pop
dec
inc
inc
jnp
sbb
dec
clc
xor
jnp
xchg
imul
daa
mov
fcmovb
jbe
sub
and
insl
outsl
fs
jp
pop
ds
pop
jmp
push
dec
cwtl
push
push
and
push
push
mov
push
mull
divb
cmovo
unpcklps
push
outsb
imul
push
cld
push
test
fdivl
add
sarl
lods
push
push
pcmpgtb
sti
xor
loope
xchg
test
or
jae
test
mov
jge
lret
or
subb
fdivrs
adc
enter
cltd
cmp
mov
mov
leave
ja
mov
sbb
pop
cmp
mov
es
mov
icebp
jmp
lret
fstps
in
int3
and
jg
push
ljmp
jb
push
sahf
orl
test
addb
push
mov
or
imul
addb
adc
pop
xchg
pop
pop
and
cmpb
dec
or
pop
pop
andl
addb
cltd
or
test
adc
sahf
mov
ds
prefetchw
cmp
jb
pop
xchg
gs
push
pop
rcll
mov
or
int
bound
nop
outsl
or
cmp
push
and
iret
adc
les
dec
nop
fnstenv
sub
push
imul
jl
mov
add
adc
adc
xor
mov
jnp
clc
sbb
int
inc
data16
jmp
push
xor
je
adc
in
mov
mov
dec
fsubr
lock
or
mov
mov
fcoml
push
cmp
push
les
ljmp
mov
sbb
ror
test
xchg
stos
fcomp
out
adc
leave
fcomps
fildll
mov
mov
iret
repz
movsl
lods
or
adc
pop
fucomi
jecxz
push
repz
xor
sti
add
shll
cmp
inc
aas
jns
rolb
ret
dec
inc
cltd
icebp
sbb
jg
sti
rcll
and
outsb
xor
dec
loop
push
inc
mov
or
aam
sub
cmp
incl
mov
stc
dec
and
pop
and
sub
jg
dec
xchg
add
int
add
sub
out
out
jmp
mov
sar
sub
adc
outsb
popa
out
xlat
jbe
nop
fmul
fsub
ljmp
adc
xor
dec
sbb
leave
leave
dec
addr16
jb
push
sub
je
hlt
pop
add
sahf
cli
loop
in
popf
mov
add
call
dec
test
mov
push
sbb
xor
cmpl
add
inc
xor
inc
xchg
push
cwtl
xor
sbb
mov
addl
movsl
sbb
mov
mov
dec
and
addr16
push
jecxz
sub
dec
sbb
js
jne
xchg
mov
adc
xchg
test
push
mov
inc
jb
xchg
js
lock
iret
dec
mov
add
jo
pop
sbb
ret
movsb
movb
icebp
ret
jl
jecxz
lds
jp
rcr
push
sub
clc
mov
imul
mov
or
add
adc
adc
sub
ljmp
jno
repnz
or
mov
enter
inc
mov
and
mov
js
and
and
in
sbb
sbb
jge
mov
fsubrl
outsl
cmp
dec
jne
jecxz
and
ret
fnstsw
jmp
inc
xchg
jo
xchg
mov
popf
mov
xchg
nop
divl
popf
xchg
in
or
inc
pop
testl
mov
pop
clc
loop
jmp
nop
dec
call
add
inc
pusha
shld
push
mov
xchg
pop
mov
and
or
dec
push
mov
loope
ret
orb
adc
jne
mov
jmp
mov
xlat
ret
repnz
mov
and
jnp
scas
push
adc
cmp
clc
testl
test
rolb
ja
add
xchg
or
cwtl
lea
pop
je
pop
add
xor
loopne
ftst
xchg
push
cmc
pop
sub
fdivl
aad
pop
loopne
dec
add
iret
dec
push
inc
fcompl
mov
xor
and
aam
fcomps
mov
add
mov
sub
mov
in
add
loopne
mov
and
sub
or
xor
sub
or
fnstenv
xchg
lcall
inc
sub
rcrb
xchg
jmp
ja
mov
sbb
jns
mov
add
sbb
jne
rorl
inc
fwait
test
scas
call
loope
pop
cld
sbb
sub
loope
and
dec
xor
nop
out
adc
cmc
call
pop
cmp
mov
sahf
add
cmc
shrb
cld
aas
pop
fsubl
popf
cmp
adc
clc
fdivs
mov
xchg
and
in
sbb
dec
sbb
push
sub
xor
push
ja
int3
adc
test
push
scas
cmp
xchg
inc
in
mov
cs
mov
test
sub
inc
jmp
mov
inc
pop
fcomi
and
mov
pop
bnd
push
incl
enterw
mov
divb
mov
mov
adcb
in
cmp
fistpll
test
aaa
mov
lock
mov
or
popa
filds
xchg
cld
xchg
cwtl
cmpsl
and
clc
mov
adc
add
mov
faddl
rolb
mov
push
adc
sub
subb
aaa
pop
aaa
roll
aad
iret
jnp
cs
int3
pop
jmp
leave
and
or
mov
push
dec
push
jno
in
mov
adc
sbb
fwait
inc
sbb
lock
lds
jmp
idivb
lret
stos
sarb
ret
sbb
mov
inc
add
inc
cwtl
fs
mov
or
xor
adc
add
cmp
dec
cmp
pushf
stc
add
xor
adc
pop
sub
push
sbb
inc
inc
push
pop
push
sti
adc
adc
in
mov
lea
pop
hlt
cmp
push
sbb
lahf
imul
and
dec
je
or
rclb
adc
xor
rolb
xor
ffreep
jle
jmp
sbb
jmp
mov
jmp
push
and
add
shlb
insb
test
shl
xor
aad
push
and
sar
cmp
add
out
push
loope
push
mov
hlt
pop
lods
orb
scas
loopne
jmp
push
mov
mov
mov
xor
adc
popa
ret
out
popf
xor
xchg
cld
jle
cmp
aaa
xor
outsb
add
jmp
ret
jmp
or
cmp
adc
test
test
sti
jo
movsl
cmp
cmp
imul
lahf
jecxz
dec
jne
pop
shl
popa
daa
and
roll
inc
fs
add
push
cld
sbb
cmp
fistps
cmpsb
xor
popa
sub
je
sub
pop
adc
pop
xorl
popf
xlat
lods
cld
xchg
and
or
nop
xlat
mov
shrb
inc
jg
jne
or
mov
and
js
and
sbb
movsb
mov
dec
dec
xor
sub
mov
out
arpl
mov
pop
aas
mov
or
mov
push
add
xchg
int3
add
idiv
mov
movb
jb
cmpsl
dec
movsl
jl
movb
mov
dec
nop
pop
xor
adc
pop
stc
movsl
and
and
test
cs
rclb
jmp
or
shll
mov
je
dec
sbb
jae
je
cmp
jmp
les
add
daa
or
test
scas
push
push
sbbl
push
aad
adc
sub
notb
dec
adc
arpl
in
push
pop
jg
sbb
jno
mov
xchg
dec
add
pop
push
sbb
pop
mov
xorl
fisubl
cs
cmpb
or
push
popa
inc
ret
mov
adc
pop
inc
add
add
sub
or
shlb
mov
mov
and
das
dec
sbbl
cmp
or
or
pop
dec
ds
sub
sbb
or
sbb
shr
sub
shr
mov
jmp
push
lock
push
adc
or
add
adc
inc
sub
xchg
push
dec
sar
dec
add
add
jo
sub
add
mov
fsubr
ss
es
lock
loope
dec
lock
pusha
jl
pop
lcall
test
das
adc
mov
mov
cmpsl
ret
jge
mov
pusha
stos
testl
ret
call
jne
ljmp
stc
lock
and
arpl
jl
mov
dec
insl
or
insl
std
or
push
adc
jle
lea
movsl
jl
jg
add
inc
and
ds
jb
push
sub
push
jmp
push
inc
shrb
adc
daa
push
or
pusha
fcompl
inc
dec
push
movsb
pop
cmpsl
push
test
add
or
test
nop
and
dec
cmovno
cmpsb
es
add
push
adc
pop
lcall
xchg
pop
push
out
jge
cmpsb
daa
cs
rolb
pop
add
aad
mov
pop
lods
xchg
js
repz
adc
pop
xor
xor
gs
bound
ss
sbb
dec
ja
movb
test
es
into
inc
call
pop
sbb
adc
cwtl
push
dec
ss
sub
divl
out
dec
pop
xor
add
adc
cld
push
mov
push
push
shlb
push
adc
dec
rcrb
insl
insb
popa
jns
sbb
push
lock
mov
pushf
in
sbb
adc
mov
add
repnz
ds
and
dec
decl
in
lahf
out
or
add
mov
adc
dec
fistpll
ret
push
push
inc
push
lret
xchg
hlt
inc
dec
dec
add
and
sbb
sub
cmpl
jns
push
das
out
xor
repz
push
mov
inc
sub
arpl
add
pusha
dec
inc
es
out
push
nop
inc
mov
loopne
jle
pushf
pushf
pushf
fmull
mov
pushf
pushf
jl
je
pushf
pushf
pushf
pushf
insb
push
pushf
pushf
pop
pop
push
push
add
inc
cs
xor
dec
jne
mov
cld
xor
inc
or
xchg
push
mov
sub
dec
ret
pop
inc
xor
add
push
and
or
adc
ss
jp
insb
outsl
add
adc
mov
addb
pcmpeqd
daa
daa
daa
js
jp
daa
daa
daa
daa
jl
jle
daa
daa
daa
daa
pusha
popa
bound
daa
daa
daa
fs
daa
daa
daa
push
daa
daa
daa
insb
insl
outsb
outsl
daa
daa
daa
daa
push
push
push
push
daa
daa
daa
daa
push
push
push
push
daa
daa
daa
daa
pop
pop
pop
pop
daa
daa
daa
daa
pop
pop
pop
pop
daa
daa
daa
daa
inc
inc
inc
inc
daa
daa
daa
daa
inc
inc
inc
inc
daa
daa
daa
daa
dec
dec
dec
dec
daa
daa
daa
daa
dec
dec
dec
dec
daa
daa
daa
daa
xor
xor
daa
daa
daa
daa
xor
ss
daa
daa
daa
daa
cmp
cmp
daa
daa
daa
daa
cmp
ds
daa
daa
daa
daa
and
and
daa
daa
daa
daa
and
es
imul
pop
aad
add
out
lods
xchg
mov
cmp
adc
jns
test
mov
inc
insb
pop
mov
add
adc
addr16
jb
xchg
fisubrl
sbb
push
test
test
or
pushf
or
xlat
adc
mov
rolb
cmpb
dec
popa
mov
sub
add
push
add
mov
jmp
add
add
or
pusha
adc
gs
orb
sar
loopne
add
lcall
mov
push
icebp
xchg
dec
xchg
and
call
adc
push
add
add
inc
adc
or
sbb
insl
push
movb
jae
movsl
or
fchs
mov
nop
leave
jb
sub
daa
dec
jnp
fiaddl
xchg
jbe
push
xchg
push
mov
rcrl
mov
loop
adc
addb
and
sbb
pop
xor
or
inc
ficoms
pop
xor
dec
aam
nop
pop
xchg
mov
cmp
pop
mov
test
je
inc
and
mov
adc
push
and
inc
jl
mov
sbb
lcall
mov
daa
jmp
flds
ret
movsb
push
in
or
iret
dec
movsb
sbb
xor
pop
inc
sub
add
xchg
adc
xchg
jo
and
or
inc
add
cwtl
rclb
rsm
ret
xor
mov
xor
push
vpaddb
pop
nop
cmc
inc
popa
xor
int3
or
dec
inc
mov
push
jge
outsb
sbb
jne
test
push
jne
clc
movsb
or
cmp
mov
addb
int3
or
loope
idivl
mov
iret
pushf
xor
in
mov
pusha
rol
inc
xlat
test
mov
push
mov
mov
jae
nop
xchg
inc
dec
push
je
cmp
outsl
inc
pop
and
test
add
xchg
lea
push
outsl
add
mov
add
insb
jecxz
das
lar
cwtl
xor
pop
dec
arpl
mov
push
xor
int3
cmc
xchg
fbld
inc
es
outsl
outsb
je
imul
nop
lods
adc
jo
adc
enter
xchg
and
or
fwait
jae
movsb
xchg
or
mov
add
and
sub
jae
je
les
push
je
insb
jno
int3
lock
xor
data16
enter
je
push
cmpb
rorb
mov
outsb
gs
xchg
outsl
cwtl
add
cmc
fisubs
adc
rcr
imul
daa
dec
push
outsb
int
xor
pop
sub
xchg
outsl
sbb
push
inc
xchg
outsl
je
sbb
or
push
pusha
out
add
inc
jl
or
push
les
sbb
add
sub
dec
aaa
or
mov
push
cmp
jnp
loop
inc
insb
sahf
push
push
push
push
jnp
dec
outsl
jo
call
sbb
xor
mov
gs
and
mov
sbb
int
xor
adc
gs
mov
loopne
sbb
adc
cmpsl
je
cltd
push
ret
dec
add
jne
jnp
jge
enter
bound
xor
adc
jl
jp
data16
push
fcmovbe
lea
or
addr16
cmpb
jb
jae
es
pop
outsl
cmp
out
push
pop
inc
push
dec
push
add
add
testl
decl
andps
into
sarb
sub
arpl
ss
sub
lea
fbld
out
imul
lahf
ss
xchg
xchg
insl
dec
nop
jae
dec
rorl
sbb
cmp
sub
cmp
iret
xor
in
cmpsl
stos
les
push
addr16
iret
mov
pop
std
fdivl
add
jne
pop
adc
mov
adc
push
in
xor
hlt
add
outsl
orb
sub
call
ss
inc
ret
sbb
das
nop
das
and
scas
les
addb
movb
rolb
subl
sub
xor
cmp
out
add
dec
pop
dec
mov
cwtl
ss
mov
mov
mov
push
add
push
push
or
inc
cs
jl
jl
int3
addb
nop
lods
adc
les
mov
aaa
leave
mov
cld
leave
mov
lahf
pop
sbb
or
sub
leave
call
xor
pop
scas
leave
add
or
xor
add
mov
int3
xor
cmp
in
xchg
add
ds
add
dec
test
add
inc
shrb
adc
xchg
sbb
xchg
mov
pop
sbb
add
leave
add
loopne
call
sahf
in
sbb
les
dec
es
add
jo
cmp
xchg
pop
mov
and
outsl
cmp
inc
insb
outsb
xlat
test
mov
push
inc
popa
nop
jae
push
mov
icebp
push
movsl
shl
test
adc
cmp
out
or
and
pop
aas
push
or
call
stos
cmp
inc
test
shlb
rclb
and
add
pop
ss
and
je
sarb
or
cmp
jo
jnp
add
push
xchg
hlt
push
jne
outsb
adc
pushf
push
int
inc
insb
adc
orb
leave
push
add
pop
stos
mov
arpl
int3
add
jnp
inc
dec
or
fs
dec
outsl
ja
clc
sub
adc
push
inc
mov
add
dec
jae
push
mov
dec
push
mov
push
xorb
adc
mov
or
sbb
xchg
ret
sbb
and
push
xor
iret
repz
test
push
aas
or
pop
or
jp
aam
sbb
mov
dec
mov
jnp
push
pusha
push
add
cmp
pop
xor
push
sub
add
loopne,pt
dec
push
inc
outsl
sub
inc
fcoml
cmpsl
cwtl
push
bswap
into
sahf
jle
in
adc
pop
jo
paddq
pop
repz
pop
add
movsb
outsb
lock
jl
testl
imul
or
inc
mov
sbb
popa
arpl
cmovge
sbb
and
ds
jnp
jge
mov
xchg
insl
jne
jb
sbb
fst
sub
and
mov
xor
fs
push
ret
jnp
add
push
push
sub
jle
dec
call
mov
dec
pop
inc
cs
aam
out
mov
imul
js
pushf
push
mov
loopne
jne
jbe
pop
jo
or
and
das
rol
js
insl
ss
or
outsb
xchg
sub
or
push
les
dec
insl
push
popf
mull
ficompl
mov
test
mov
dec
xchg
pusha
ds
sbb
popa
inc
dec
in
lds
nop
nop
mov
inc
rol
jmp
xor
pop
repnz
inc
in
inc
js
inc
out
js
testb
push
adc
dec
or
add
inc
insb
push
hlt
ds
xchg
mov
fs
push
mov
imul
push
pop
pop
and
push
jl
popf
dec
jne
je
push
dec
jae
xchg
je
mov
mov
mov
inc
aam
push
sbb
xor
xchg
repz
fs
push
cwtl
push
out
jl
int
dec
orb
pop
fwait
xchg
mov
cmovs
mov
mov
push
and
sub
mov
push
cld
xchg
pop
mov
sub
ret
xchg
xor
xchg
scas
xchg
out
les
hlt
lahf
add
or
outsl
outsb
pop
sbb
hlt
pop
insb
inc
nop
pop
test
daa
jns
pop
int3
xchg
cld
xchg
sbb
in
xchg
mov
pushf
mov
in
xchg
inc
loopne
inc
sbb
enter
xchg
and
sbb
out
jo
pop
add
nop
xor
jae
dec
pop
inc
cmp
mov
or
xchg
adc
adc
and
popf
jle
push
dec
mov
inc
test
xor
mov
out
in
jl
push
inc
mov
sub
mov
add
data16
das
ss
add
jne
cmpps
pop
mov
sbb
pop
popa
pop
xor
pop
test
out
push
or
popl
fbld
movzwl
add
nop
lcall
adc
hlt
and
sahf
or
enter
scas
adc
je
sbb
or
bound
inc
mov
sar
in
push
ljmp
and
adc
xor
dec
outsb
adc
adc
pop
xchg
sub
lock
and
jno
sbb
push
inc
gs
cmp
dec
xor
daa
loope
out
push
adc
popa
loopne
test
jge
push
outsl
and
mov
decl
lock
prefetchnta
enter
or
and
cmp
rolb
or
cmp
lahf
push
idiv
adc
xchg
and
mov
pop
adc
and
jb
xor
xorl
pop
and
daa
scas
mov
inc
jnp
xor
mov
and
enter
je
adc
xlat
cmp
rcll
dec
cmp
xchg
shlb
lds
lahf
icebp
mov
stos
clc
sti
je
incl
jle
fnsave
cmpsl
or
jle
cmpb
inc
sbb
pop
mov
inc
daa
out
and
push
ficoms
cmp
fstl
repz
adc
push
or
or
stos
sbb
jmp
and
mov
cwtl
or
inc
inc
shr
xchg
mov
jmp
cmpsl
jns
and
cld
adc
pop
xchg
push
jg
mov
decl
xchg
adc
aam
nop
pop
into
dec
push
call
dec
sub
test
add
sarb
mov
mov
sub
daa
arpl
popa
add
mov
jb
outsl
outsb
inc
inc
ljmp
jg
lods
outsb
pop
dec
insb
imul
jbe
fbld
call
jo
gs
push
gs
pop
push
and
push
add
push
stc
imul
pop
ret
dec
in
iret
push
sub
add
insb
insb
outsl
ja
jne
in
faddl
inc
jne
push
jno
mov
shll
pop
pop
es
jns
add
pop
test
push
imul
inc
jo
ret
inc
dec
data16
testb
das
sysret
out
mov
jo
or
mov
pop
imul
or
addr16
fisubs
subb
je
inc
push
xchg
dec
adc
sbb
or
ret
add
mov
cld
pusha
jg
gs
or
sub
push
xor
pop
xchg
fs
push
push
fwait
or
in
or
lods
loopne
fsts
rcrb
mov
gs
push
push
jg
sub
xor
adc
dec
adc
adc
adc
out
mov
cwtl
andb
daa
or
adc
or
ja
xchg
sbb
or
sbb
lahf
dec
cs
mov
pusha
aas
push
arpl
mov
inc
xor
shrl
ss
and
or
or
lock
pop
rcr
cmpb
push
jnp
rcrb
aam
mov
clts
or
mov
cmp
mov
testl
dec
inc
push
push
inc
push
add
adc
push
dec
push
xor
inc
dec
dec
pop
jnp
shlb
dec
inc
inc
push
adc
dec
inc
push
dec
dec
push
mov
lods
jge
data16
dec
and
fwait
nop
aas
insb
out
inc
inc
xor
xor
adc
jg
mov
inc
dec
inc
and
inc
xor
inc
dec
leave
fbld
mov
push
push
dec
dec
push
dec
fcmovnbe
lcall
das
sbb
stc
aam
inc
mov
dec
push
jae
bnd
push
push
push
push
dec
inc
dec
or
push
fwait
aas
inc
inc
dec
pop
adc
push
push
push
dec
jg
push
ret
push
inc
scas
dec
inc
dec
push
mov
insl
sbb
gs
dec
or
fcoml
sti
mov
pop
lcall
adc
add
and
adc
mov
sub
or
add
jl
rcr
cld
add
dec
or
jne
add
add
or
or
lock
mov
sarb
push
mov
sbb
inc
cmpxchg
and
dec
sbb
mov
lock
xor
jmp
pop
aas
mov
add
mov
mov
xchg
jg
in
sbb
mov
les
jl
adc
mov
insb
push
xchg
pop
push
adc
ljmp
sbb
rolb
popa
movsb
cltd
xlat
stos
mov
cmc
adc
push
fisubl
pop
and
es
sub
inc
ret
das
dec
je
mov
dec
sbb
inc
rcrb
aaa
xor
clc
fldl
sbb
adc
xor
adc
iret
xchg
loop
insb
out
cmp
nop
outsl
jns
cld
notl
inc
bound
cmp
lea
cli
inc
jno
push
xor
add
or
jne
lret
jae
sub
notb
jmp
loope
sub
je
cmp
je
or
cld
inc
loop
clc
cmp
pop
lods
jne
mov
or
int3
ret
lret
imul
dec
mov
mov
ss
mov
das
imul
inc
adc
test
jb
sub
sbb
mov
cmp
je
scas
les
sbb
push
int3
movsb
push
dec
cmp
je
divb
jo
aaa
jmp
adc
mov
mov
inc
aam
add
sub
mov
rcrl
cmp
adc
pop
mov
cmp
jmp
or
cwtl
add
jnp
xchg
jne
sarl
mov
jnp
sbb
jg
mov
sbb
sbb
in
lahf
or
shr
xchg
xor
mov
or
cmp
jo
in
adcb
nop
cmp
push
insb
addb
mov
jb
fs
sbb
jmp
out
push
int
add
add
fiadds
push
or
loop
fildl
or
dec
fistl
jecxz
in
enter
mov
sbb
mov
pop
imul
xor
dec
dec
dec
je
pop
dec
mov
dec
popa
and
pop
mov
shlb
mov
push
adc
push
inc
sbb
xor
inc
or
mov
cmp
pop
test
mov
sbb
pop
jl
mov
fsubs
jne
adc
xor
cmp
rcrb
sbb
push
and
xor
es
mov
ja
sub
inc
xor
dec
adc
mov
neg
fldcw
push
das
outsb
neg
push
in
xor
push
sbb
daa
add
mov
hlt
pusha
insb
cmp
imul
jbe
adc
and
and
push
xchg
and
pop
pop
loopne
fcoms
mov
sbb
push
sub
xchg
and
push
and
and
sbb
and
xor
dec
rolb
inc
sbb
pusha
add
je
xorl
inc
test
xor
dec
xor
sbb
push
xor
enter
lock
nop
ljmp
xchg
sbb
push
pushl
nop
sbb
lock
and
and
scas
lock
in
push
lods
jne
out
fldenv
inc
inc
cmp
sbb
arpl
and
add
cs
in
loopne
pop
leave
rep
xor
mov
mov
and
shrl
lock
mov
sub
and
mov
lock
aas
mov
add
mov
mov
xchg
adc
je
mov
xor
sbb
adc
xor
push
mov
add
or
sbb
xchg
mov
in
lock
mov
mov
xchg
jmp
out
clc
xor
or
adc
insb
pop
xor
adc
adc
or
add
adc
adc
dec
in
add
and
imul
clc
in
and
rcl
add
das
rolb
mov
push
jmp
add
loop
cmp
jmp
into
sti
leave
mov
sbb
push
adc
iret
test
dec
imul
nop
dec
jae
hlt
lock
adc
xchg
lahf
lcall
push
xor
xchg
cmp
sahf
pop
jo
sarb
sbb
dec
mov
mov
add
xor
mov
enter
fs
cmp
add
adc
mov
mov
mov
pop
aas
es
pusha
inc
pusha
adc
sbb
js
and
adc
cmpsl
andb
jb
adc
inc
lock
or
and
imul
jo
nop
fldcw
fwait
push
push
adc
jno
or
nop
inc
jge
jo
loop
stc
and
cmpsb
scas
add
cmp
fistps
cwtl
push
mov
sub
or
sub
or
xor
jns
push
push
int
or
push
push
pop
movsb
int
in
arpl
or
push
cmpsb
mov
inc
mov
cmp
xchg
or
enter
mov
sub
sub
and
xor
dec
nop
and
sub
mov
xor
iret
push
ds
in
aas
pop
add
adc
or
loope
aaa
adc
pop
outsl
or
es
push
in
loopne
or
mov
fidivrl
push
insl
enter
rep
or
push
push
push
mov
mov
adc
fisubrl
pop
call
nop
push
mov
cmpsl
add
adc
push
rorl
sub
inc
dec
dec
aaa
inc
popa
cmpsl
add
sub
iret
mov
ret
movzwl
in
lds
hlt
pop
ret
inc
xorl
sbb
je
cmpsl
jnp
cwtl
pop
popl
cmpsl
insb
and
cmp
sub
aaa
xor
mov
mov
xchg
sub
hlt
add
dec
pop
ret
mov
out
dec
jb
pop
arpl
xchg
pop
int
xchg
pop
lds
dec
lea
pop
dec
pop
addl
adc
mov
inc
xor
jle
add
movsl
add
adc
outsl
sub
je
mov
mov
xchg
jmp
sti
dec
add
iret
push
push
scas
sbb
xchg
lret
dec
outsw
pop
std
insb
ja
mov
dec
add
add
push
or
shlb
dec
bnd
sahf
push
ret
sbb
push
sbb
rolb
mov
or
imul
or
test
push
lahf
or
add
arpl
fprem
cmp
adc
push
push
insb
aaa
fistpll
jae
pop
or
shll
sbb
push
ds
je
dec
add
push
neg
push
adc
add
lock
mov
add
cmp
shrb
lahf
jl,pn
add
or
imul
or
sub
call
xchg
or
fs
or
movb
sbb
xchg
arpl
imul
ficompl
add
and
adcl
and
sbb
or
push
movsl
xor
sub
cmpsb
xchg
sbb
lahf
idivb
jns
mov
add
jb
jl
mov
push
repnz
adc
hlt
push
inc
js
ret
add
cwtl
mov
mov
push
jbe
mov
pop
inc
mov
pop
in
orps
push
mov
cmp
mov
inc
inc
sbb
jb
xchg
and
sar
add
pop
push
xor
jne
push
xchg
dec
add
dec
mov
test
or
add
or
aaa
rdpmc
mov
or
add
gs
push
out
mov
add
pop
jecxz
adcb
push
jge
push
add
enter
call
in
inc
int3
push
add
dec
push
push
add
xor
add
hlt
adc
cmp
add
add
fwait
aad
shl
insl
inc
imul
lcall
cld
faddl
addr16
dec
mov
call
in
insl
mov
lock
int
int
jle
push
out
pop
push
mov
xor
xchg
loop
push
jle
and
adc
inc
popa
lock
sub
cmp
test
cmpsb
andb
ljmp
or
enter
call
scas
fiaddl
fincstp
shll
fnstenv
adcb
xor
cmp
das
sbb
push
das
fdivl
pop
xchg
movsl
std
add
test
adc
push
pushf
xchg
sbb
add
add
pushf
adc
pop
push
adc
stos
int3
sub
jbe
push
jecxz
and
sub
je
pushw
repnz
shlb
ret
fwait
mov
shlb
test
and
cmp
dec
gs
lock
push
push
arpl
cmpsl
insb
and
fcoml
ljmp
lods
insl
ja
lock
jmp
jns
sbb
in
pop
bound
enter
negl
cmp
test
add
inc
ljmp
push
jp
sub
push
fidivrl
inc
add
stos
xchg
jns
pop
dec
jmp
lods
xchg
loopne
pop
or
mov
dec
hlt
push
xacquire
shll
push
ficoml
sbb
lods
jge
shrl
xchg
lea
add
dec
pop
add
mov
or
add
mov
add
dec
sub
movb
dec
rclb
mov
insb
cmp
adc
dec
adc
jecxz
cmp
repz
mov
push
pop
pop
pop
pop
clc
xchg
pop
push
inc
dec
jne
and
sti
dec
adc
jge
adc
adc
or
loopne
adc
mov
add
jo
pop
inc
frstor
jae
mov
or
cmp
outsb
das
in
push
cmpsb
pop
sub
fists
testl
or
jo
or
mov
and
mov
sub
shl
mov
mov
jmp
inc
xchg
movw
add
cli
and
cld
push
lods
adc
push
mov
inc
ss
aad
inc
push
loope
or
jl
xlat
mov
jnp
or
nop
cmpl
ds
add
xchg
inc
pop
out
fisttps
mov
lea
inc
fcmovu
pop
push
cmp
cs
and
fwait
imul
push
addr16
data16
ret
sub
inc
cld
add
jecxz
icebp
fdivs
loop
sahf
xchg
in
fiaddl
add
xchg
cmp
push
out
inc
add
and
xchg
clc
push
jl
or
jo
dec
sub
movzwl
lea
or
and
clc
add
jp
pop
icebp
cmpsb
loopne
out
mov
sub
test
inc
pop
fidivrs
int
pusha
add
clc
lods
pusha
or
inc
xor
test
mov
ss
je
inc
mov
dec
mov
mov
mov
bound
iret
adc
pop
add
movups
add
in
fs
imul
mov
xor
add
mov
sub
pop
add
aas
adc
je
push
push
or
test
or
ds
add
cs
push
dec
jo
inc
sbb
jge
shlb
icebp
sbb
or
push
push
lahf
rcll
testl
lret
adc
out
and
cmpl
popa
xor
ljmp
jge
add
loope
add
xchg
ret
push
pop
loopne
pop
gs
xlat
mov
test
cmp
out
push
jo
imul
adc
add
outsb
or
push
inc
sub
xor
add
bound
mov
shrl
and
stc
into
mov
and
xorl
sbb
pop
cld
push
push
test
mov
das
mov
sub
push
repnz
dec
cmp
insl
out
push
and
add
mov
push
pop
push
mov
clc
push
or
fldt
enter
orl
pop
in
pop
mov
pusha
jne
ss
add
cmp
push
cmc
decl
in
mov
cmp
jg
test
jle
cmp
jl
ret
int3
cmpsb
aaa
enter
jg
adc
cmp
jle
pop
jle
sbb
movsb
or
ret
hlt
shl
jno
movsb
imul
dec
dec
mov
mov
dec
dec
imul
pop
nop
test
or
jne
push
mov
add
inc
gs
xor
and
pop
test
mov
hlt
mov
cli
push
add
inc
lcall
flds
xor
test
mov
imul
cmp
or
inc
mov
or
sbb
xchg
sbb
das
inc
pop
sub
xchg
dec
fdivrs
push
movsl
iret
shrl
cmp
jge
mov
mov
inc
movsb
mov
js
sti
add
sub
loopne
es
cmp
mov
dec
add
dec
rcrb
shlb
mov
inc
dec
jne
jbe
mov
cmp
loope
cmp
cltd
lea
fdivl
sbb
sub
dec
ss
repnz
add
sub
add
or
add
loope
les
dec
xor
call
enter
mov
add
nop
nop
mov
mov
jbe
pop
inc
inc
pushf
nop
pop
pusha
mov
mov
mov
push
mov
add
adc
rclb
popf
movsb
or
inc
rolb
repz
ret
ficomps
push
push
shrb
mov
icebp
or
cmpsl
push
inc
or
out
loop
aaa
imul
add
imul
add
xor
or
aam
test
ljmp
cmp
mov
xor
cmp
jl
xor
out
lods
lret
mov
push
lea
inc
mov
jmp
and
sbb
sbb
jb
sti
lea
push
stos
les
xchg
jmp
push
and
or
sub
add
sub
pop
shrb
dec
or
jle
lock
jb
jmp
pushf
push
bound
cs
jmp
setb
jmp
adc
mov
insb
and
sub
or
push
sbbb
inc
and
jae
insb
imul
and
and
push
sub
sub
or
sub
mov
pusha
aaa
addl
insb
ror
dec
sbb
je
orb
out
adc
add
lds
addl
jmp
pop
push
add
mov
push
add
ret
rolb
in
push
sbb
hlt
cmp
out
dec
mov
xchg
imul
or
push
repz
aaa
or
push
sub
ljmp
sahf
ret
mov
ja
push
clc
clc
mov
cmp
hlt
lcall
push
adcb
les
inc
nop
lahf
lods
jl
cmc
mov
leave
roll
lods
adc
mov
gs
jg
push
sbb
add
cmpsb
imul
push
push
in
hlt
ret
repnz
int3
scas
and
add
insl
pushf
mov
stos
cmp
adc
in
sub
hlt
loopne
fcompl
loop
loope
dec
shll
int3
lea
mov
jg
inc
push
add
push
add
mov
xor
fmuls
fisubl
mov
xor
testl
or
lods
fldl
test
or
push
orb
fildl
push
jb
lods
mov
adc
jl
add
mov
into
push
xchg
dec
hlt
lods
sbb
in
adc
dec
jae
lock
mov
lods
push
je
std
hlt
loopne
dec
jae
adc
adc
sub
fwait
les
push
add
dec
imull
movb
sbb
or
out
adc
adc
add
aaa
popf
add
pop
mov
rcrl
lods
sbb
roll
dec
pusha
push
sbb
cmpb
xchg
sbb
xor
inc
push
xchg
lahf
sbb
add
nop
push
inc
xor
xchg
or
popa
mov
stos
xchg
xor
sub
adc
pusha
xor
xor
pusha
cmp
push
je
sub
add
inc
rolb
int3
jnp
push
pop
push
mov
xchg
clc
pop
xchg
push
dec
mov
dec
hlt
mov
ret
lret
mov
or
rorb
and
imul
cmp
ja
in
push
jl
add
shrb
fists
cmp
or
arpl
and
sub
inc
and
dec
in
xchg
cld
push
sarl
push
cld
or
jns
shlb
inc
jno
rorb
lock
andl
mov
imulb
sbb
sbb
pop
into
sub
lods
sbb
jmp
inc
cmpsl
xor
leave
lcall
mov
and
rcrb
daa
pop
adc
push
fbstp
adc
sbb
mov
cwtl
ds
push
dec
mov
cmp
push
inc
push
push
scas
pusha
adc
dec
and
cvtps2pd
inc
dec
bound
dec
scas
pop
xor
mov
sub
in
clc
mov
les
sbb
mov
cmp
sbb
mov
jns
pop
xchg
mov
add
mov
adc
insl
popw
rolb
arpl
insl
jo
jge
pop
je
dec
movsl
cmpl
loop
push
dec
pop
ljmp
push
test
test
jg
insb
add
icebp
cmc
scas
pop
jecxz
fsubl
popf
mov
pop
popa
loope
fidivs
adc
test
es
imul
cltd
mov
test
sub
pop
addr16
ds
inc
jno
inc
or
cmpsb
dec
jge
inc
xchg
lret
fidivl
fcompl
ret
jno
jne
pop
dec
repz
add
fidivrl
cmp
ljmp
rol
fwait
lahf
xor
add
imul
xor
pop
and
mov
mov
mov
dec
pop
and
daa
sbb
mov
xchg
adc
xchg
xor
mov
push
mov
lea
sarl
shll
cmp
and
sbbb
and
ja
cmp
scas
sti
mov
test
daa
mov
lret
push
pop
dec
lods
mov
adc
mov
mov
inc
or
test
push
loopne
movsb
inc
push
addl
pusha
adc
adc
pop
add
aas
xlat
pop
loope
test
jne
mov
or
dec
loope
repnz
test
pusha
test
xor
dec
movsl
and
sbb
js
xor
adc
sbb
dec
movsb
xor
popa
and
das
rcrb
out
dec
stos
dec
test
push
adc
rcrl
sub
in
shl
mov
das
sbb
xor
xchg
jno
scas
int3
pop
les
mov
scas
pop
adc
jecxz
mov
mov
mov
out
mov
cmp
push
or
das
xlat
inc
or
out
push
daa
sbb
xchg
dec
fcomps
or
cmp
and
orl
aaa
and
pop
and
test
popf
scas
jnp
shlb
fistps
sbb
mov
and
add
mov
xor
and
mov
imul
sbb
or
mov
xchg
aam
popf
cmpsl
push
lds
pop
jg
fiadds
adc
inc
sub
cmp
xchg
xchg
addr16
mov
xor
xor
sbb
inc
mov
sbb
ja
jmp
les
daa
jecxz
dec
jecxz
and
or
test
inc
shll
cmpsl
adcl
push
mov
push
xor
fisubs
or
dec
cmp
add
sbb
sbb
js
pop
sbb
adc
lods
adcb
test
adc
and
enter
push
loop
fcompl
adc
stc
ret
hlt
pop
ja
mov
lods
adc
cmp
lret
lds
das
and
adc
iret
xor
arpl
scas
add
xlat
jg
add
xchg
add
movb
jb
sub
push
and
and
lahf
xchg
andb
popa
cmp
mov
inc
inc
fsubrs
in
sub
cmp
or
push
sub
mov
inc
sub
adc
push
mov
pop
es
xor
int3
cld
inc
leave
and
clc
adc
and
xchg
xchg
ret
cmp
or
mov
sbb
je
sub
in
or
push
enter
sbb
add
push
test
cwtl
out
fcmovnbe
test
dec
adc
insl
cmp
out
in
pusha
pushf
arpl
test
sub
xor
push
movsl
mov
stos
pop
xor
movsl
pushf
pop
jne
jb
imul
sub
sbb
or
jge
xchg
cs
xor
stos
pop
imul
rcrl
adc
call
and
icebp
jmp
push
pop
rcl
sub
mov
je,pn
mov
lcall
orl
insl
pop
call
sbb
jno
mov
lock
inc
fisubl
mov
add
loopne
daa
and
mov
xchg
or
dec
inc
jb
cmp
or
jl
adc
add
sub
hlt
shrl
push
dec
jmp
adc
jge
pop
sub
aaa
push
sbb
mov
push
mov
cwtl
fsubrl
xchg
xor
push
or
add
add
cmp
add
bound
fadd
inc
pop
adc
or
cwtl
mov
inc
or
mov
cltd
lea
cli
iret
fs
mov
cmpl
je
jmp
cld
sub
popf
in
mov
pop
sub
or
lea
lock
ja
dec
enter
subl
lea
dec
cmp
arpl
sbb
mov
adc
mov
enter
mov
lods
push
int
int3
push
xor
orl
lcall
fsubp
pop
les
subl
sar
hlt
and
sahf
mov
mov
mov
mov
in
push
xor
cld
cmpsb
mov
ljmp
adc
lret
jbe
push
push
in
fsubs
sub
int
cmp
pusha
xchg
xchg
in
cmp
or
rorb
fimull
add
jo
nop
js
test
sub
or
xchg
pop
mov
or
enter
cld
add
inc
aam
mov
adc
pop
pop
insb
mov
outsb
or
loopne
addr16
inc
sti
das
lret
push
les
pop
insl
push
mov
aam
sarb
rolb
inc
sbb
sbb
add
sub
sahf
sub
push
les
lcall
add
mov
push
add
je
pop
inc
scas
and
and
pop
shl
pushf
out
or
inc
js
out
out
mov
mov
jmp
push
es
pop
fs
adc
cld
adc
arpl
sbb
sub
std
and
jo
je
daa
pop
inc
in
adc
or
fidivl
or
inc
mov
or
sbb
nop
lret
push
pop
sub
cmp
fiaddl
aas
xor
sub
nop
rcll
loop
es
inc
xchg
popa
inc
adc
xchg
movsb
adc
sub
push
mov
jo
add
sbb
add
jmp
xor
jle
xor
add
pop
ret
popa
nop
inc
dec
jae
inc
pusha
adc
adc
jbe
push
sbb
sbb
ret
xchg
sbb
and
or
nop
lock
loope
adc
inc
insl
or
inc
dec
in
adc
xor
pop
mov
aaa
pop
inc
lock
fadds
data16
sub
insl
and
sbb
push
dec
dec
ljmp
or
stos
ss
adc
loopne
insl
shrl
pushf
test
adc
xor
adc
cmp
fimuls
add
dec
lret
pop
pop
mov
and
cwtl
pop
les
shr
sub
lea
pop
jl
lods
popf
addl
ljmp
repnz
push
mov
jl
inc
mov
nop
fsubr
imul
cmp
test
jae
add
cmp
imul
sbb
and
mov
pop
mov
icebp
inc
mov
mov
jge
mov
mov
ds
imull
sarb
pushf
mov
test
or
xchg
jnp
ret
enter
xchg
and
je
adc
lret
out
pop
mov
int
or
js
jmp
rorl
xor
shl
push
xor
pop
mov
mov
push
pop
leave
dec
add
push
inc
push
nop
add
or
sbb
add
movl
add
adcb
das
pop
mov
movsl
sarb
outsb
aas
push
dec
lea
subl
adc
adc
jecxz
mov
sub
pop
outsb
ja
xchg
xor
hlt
pop
cmp
sub
stos
dec
rcrl
rcrb
sub
lods
cmpsl
or
sbb
outsb
cmpsb
xor
test
mov
pop
xchg
add
nop
jbe
cli
fidivrl
outsl
lds
movsb
cwtl
mov
mov
or
xchg
xchg
test
xchg
xchg
leave
pop
sub
jo
cs
add
dec
fs
sub
cvttps2pi
xor
mov
mov
mov
jo
ss
push
cld
cmpsl
xchg
cmp
lods
pop
inc
pop
sar
pop
xchg
cmp
pop
xor
adc
add
and
aaa
imul
dec
inc
inc
loop
jo
or
push
das
fadd
inc
js
jmp
cmp
dec
lock
adc
int3
push
and
jae
pusha
push
jae
pusha
push
push
xor
sub
aad
xor
mov
idivl
add
mov
add
dec
lea
jns
add
shrl
ja
insl
or
mov
lods
push
stc
adc
and
lea
rorb
popa
sub
enter
insl
xchg
cmc
or
xor
and
fmuls
adc
dec
inc
and
insl
fstl
mov
sti
and
sahf
pop
jns
or
xchg
adc
lahf
imul
cmp
mov
fsubrs
sbb
mov
push
sub
xor
jb
sub
xchg
push
loopne
pop
push
adc
jb
dec
test
jge
cmp
push
mov
inc
not
add
or
cmp
es
nop
in
pop
data16
adc
movl
fmull
loopne
dec
pop
dec
sbb
mov
jne
add
add
or
inc
aaa
fnstsw
pop
push
mov
in
iret
cmp
jle
je
adc
and
dec
sahf
and
inc
jne
sub
mov
cmc
add
add
dec
sbb
js
ret
leave
push
sbb
test
ljmp
xor
mov
xchg
insb
jne
mov
jns
cmp
ljmp
jae
jp
dec
loopne
jp
or
inc
es
je
pop
or
out
or
dec
mov
ret
adc
push
data16
fildll
clc
mov
add
popa
pop
mov
jbe
inc
inc
mulb
add
sub
das
bound
xchg
lahf
stc
mov
mov
dec
mov
out
push
fmull
jmp
sbb
cmp
bound
lods
sub
fistpl
int3
sub
push
lods
jge
push
or
or
loop
push
adc
mov
mov
push
mov
rcrb
fdivrl
cld
pusha
stos
add
in
nop
add
je
scas
xorl
cmp
fcoml
xchg
insl
fisubrl
inc
aaa
sbb
std
sub
dec
jmp
outsl
cmp
je
out
rcll
daa
sub
push
adc
add
inc
bound
or
sub
xchg
xchg
push
mov
inc
icebp
in
jne
iret
lock
daa
pop
inc
push
mov
test
addr16
fmull
cmp
jne
adc
jbe
mov
xor
test
movb
je
pop
movsb
jnp
enter
inc
pop
adc
sbb
adc
and
or
jbe
jns
cli
js
pop
das
ss
xor
imul
jg
mov
sbb
imul
mov
adc
cmpsb
inc
stos
and
out
dec
test
dec
in
jb
insb
jnp
ret
sub
mov
inc
adc
and
sub
pusha
pop
or
mov
adc
mov
dec
pop
push
rorb
add
jmp
push
bound
and
shlb
mov
ret
cmpl
fnstsw
push
sbb
fcoms
in
cmp
std
loopne
jo
fiadds
dec
and
jnp
jns
mov
mov
in
stc
push
inc
xchg
mov
mov
insb
out
cmp
sub
fsubrs
popl
jns
xchg
pop
xchg
loope
cmp
mov
lock
loope
cmp
popa
xchg
jo
es
and
add
ja
pop
pusha
into
lock
or
adc
mov
cmp
mov
inc
push
fwait
xor
aaa
or
add
into
push
pusha
test
pop
fwait
lods
int3
xor
or
subl
pop
nop
push
mov
adc
dec
rcl
cmp
fwait
sub
adc
and
iret
mov
mov
loopne
jb
add
adc
pop
pop
inc
imulb
jb
mov
nop
imul
hlt
mov
jnp
push
daa
or
mov
add
subl
or
xchg
js
cmp
jno
movsb
paddb
xchg
shll
aaa
fldt
lock
sub
sbb
cmpsb
lock
imul
popa
or
adc
test
add
jo
or
in
test
cmp
popa
rorl
jmp
mov
aaa
mov
pop
iret
or
or
call
add
sub
les
lods
dec
cmpb
mov
sub
loopne
pusha
xor
and
and
icebp
adc
adc
adc
jge
scas
push
xchg
sbb
mov
or
aaa
outsb
jmp
adc
sub
sahf
mov
and
and
xor
dec
test
inc
inc
jbe
xchg
push
sbb
es
mov
inc
fldl
lahf
lods
movsl
ffreep
frstor
or
add
scas
or
fcmovnb
movsb
mov
push
stos
push
mov
adc
fcoml
or
adc
cmp
movsl
ret
test
insb
arpl
stos
movsb
pusha
sub
or
sub
sub
test
mov
movsb
leave
les
scas
bound
jo
lock
dec
fdivr
cld
sub
push
loopne
pop
jno
or
sbb
push
add
scas
cmp
mov
fsubr
fcoms
fs
orl
push
sbb
dec
mov
movb
add
xor
adc
lock
lret
scas
push
test
add
pop
test
or
jp
mov
movsl
pop
cmovge
fcmovnb
inc
lcall
and
hlt
mov
cmp
insb
mov
lret
add
imul
add
imul
push
sub
dec
in
scas
shl
sbb
sub
lods
es
lds
or
pusha
cmp
push
dec
arpl
pop
adc
sbb
insb
add
push
enter
mov
imul
sub
sub
pop
leave
adc
orb
dec
lods
inc
ret
ret
pop
pusha
sbb
adc
and
scas
call
lock
dec
inc
or
inc
mov
or
push
pop
and
mov
movsl
out
nop
push
sub
pusha
pop
add
mov
sbb
sbb
mov
add
icebp
adc
mov
jmp
adc
adc
jmp
cmpl
call
fadds
jl
add
sub
stos
and
scas
xor
sar
insl
jl
pop
and
dec
and
or
sub
mov
jo
adc
test
cmc
aas
sub
and
cli
insb
add
andl
clc
inc
fcoms
sbb
out
subb
mov
sub
pop
sub
add
fists
movl
insb
jecxz
das
rorl
adc
pop
ja
test
xor
push
into
ss
mov
pop
sbb
scas
add
add
pop
popa
ss
sbb
push
inc
out
je
mov
inc
scas
mov
xchg
pop
add
pop
or
test
iret
xor
dec
jne
test
stos
jo
call
dec
arpl
push
test
testb
or
mov
nop
ja
jb
imul
gs
pop
fists
je
sbb
add
or
sbb
pop
add
dec
lods
dec
or
or
push
cwtl
adc
xor
dec
fcomp
subl
adc
loopne
or
xchg
xlat
sub
ret
add
sahf
dec
iret
jne
cmovae
subl
mov
or
sbb
orl
ss
dec
insb
adc
out
and
pop
sub
test
jmp
out
push
mov
loop
loop
data16
xor
pop
sub
pop
jg
lds
push
dec
push
popf
jecxz
sbb
adc
or
fildll
dec
movb
push
xor
mull
aas
xor
sub
jno
xchg
mov
outsb
mov
lock
cmp
mov
add
fmuls
sub
inc
mov
ss
insb
lds
adc
test
push
push
loope
add
gs
js
and
adc
ljmp
dec
cmp
pop
jno
push
mov
inc
cmp
mov
push
adc
movb
add
xchg
das
jno
lock
add
sbb
icebp
xor
jo
lods
jecxz
add
mov
rcrb
sub
sub
mov
jo
or
icebp
inc
and
xchg
adc
mov
dec
loope
ret
addr16
lea
adc
icebp
mov
in
xchg
shr
push
or
or
lea
das
test
xor
jo
ja
sbb
orb
push
mov
adc
dec
mov
jbe
xchg
dec
cmpl
inc
gs
and
jno
xchg
jmp
xchg
pop
inc
sub
fidivl
and
dec
pop
ficoms
lods
pop
push
fst
or
push
pop
and
call
cmp
mov
sbb
loopne
pop
ja
fucom
dec
or
add
and
sub
pop
mov
and
dec
mov
enter
lds
mov
mov
pop
mov
or
or
pushw
or
pop
mov
jg
sub
data16
test
jbe
add
cltd
sub
or
jecxz
cmpsl
jmp
call
push
enter
xor
mov
jo
adc
aam
inc
dec
enter
pop
adc
sbb
inc
or
jle
or
cmp
and
adc
sub
xchg
dec
add
mul
mov
test
sahf
inc
cmpsb
inc
call
loop
push
push
adc
call
and
add
pop
jl
in
sub
outsb
push
mov
push
addr16
push
push
sbb
cmp
test
sub
sub
inc
jge
pop
addr16
inc
inc
gs
mov
or
xchg
out
dec
inc
test
cs
mov
jbe
dec
sub
push
enter
sub
pop
cwtl
cmp
jbe
mov
mov
cmp
mov
adc
xchg
pop
imul
or
push
enter
add
sbb
in
jno
mov
into
imul
jae
push
add
xchg
add
loopne
sub
pop
pop
jne
scas
rclb
int3
inc
or
inc
sub
pop
or
add
mov
cs
pop
adc
sbb
movsl
ja
mov
inc
sub
sub
xor
and
xlat
sub
loope
je
add
es
cmp
ss
test
mov
je
xor
pop
fadds
es
jb
mov
jno
push
in
out
push
or
and
sbb
aad
fadd
pop
dec
and
push
test
push
and
loop
jmp
xchg
adc
rcrb
cwtl
and
mov
lock
jo
mov
test
jne
jmp
fsubs
fsubs
mov
movsl
dec
das
mov
inc
mov
je
nop
push
lds
ss
jb
and
mov
cs
int3
mov
xlat
push
jbe
das
mov
sub
jle
inc
movsl
in
lcall
loope
test
or
pop
push
add
fists
sbb
mov
sbb
jae
in
or
pop
lcall
mov
or
pop
cld
or
add
lods
scas
jb
cmp
mov
add
sbb
imul
sbb
dec
sbb
js
fmul
push
adcb
or
xchg
mov
xchg
cmp
add
dec
loop
in
jnp
mov
xchg
loop
push
out
sbb
dec
outsl
adc
adc
loopne
push
notb
push
cwtl
int
loopne
loopne
xchg
mov
lea
sahf
mulb
out
dec
adc
rorb
add
adc
jne
xchg
lea
push
sbb
sbb
test
sub
test
movsl
mov
push
jecxz
xor
addb
lahf
inc
mov
xchg
or
jmp
push
pop
push
push
lcall
or
mov
packsswb
sub
dec
adc
and
lods
and
add
repnz
jge
jbe
movb
test
shrb
and
adc
adc
and
jns
pop
or
das
or
mov
inc
js
setl
int
lock
sbb
cmp
jl
jb
loopne
sbb
mov
rcrb
sub
fiadds
xchg
push
iret
mull
cld
inc
lea
mov
push
scas
fcmovbe
add
jle
mov
xlat
dec
and
inc
mov
insb
subb
add
addr16
jo
or
inc
xlat
xchg
fisubrl
push
ja
cmp
inc
mov
add
dec
pop
insb
popa
cmp
sbb
aam
icebp
leave
mov
orl
outsb
sub
call
push
loope
push
push
dec
inc
mov
loope
jge
leave
cmp
push
xor
dec
lahf
dec
xor
ja
add
addb
cmpsb
sbb
xor
add
lcall
lods
and
fsubs
dec
fisttpl
jae
bound
push
mov
imul
inc
or
ss
add
jne
lfs
or
je
xorl
sub
adc
or
sahf
rcrb
and
addb
or
stos
adc
pop
adc
lds
rol
out
and
mull
daa
and
pusha
addr16
stos
out
or
out
mov
and
in
dec
jbe
mov
pop
xor
insb
loopne
cli
movsb
xchg
inc
push
outsl
sub
jbe
fists
push
push
mov
aas
inc
fimull
sbb
inc
add
rcr
pop
jns
jo
cmp
mov
mov
fildl
sub
push
fs
sbb
mov
pop
iret
or
xchg
fidivrl
mov
jmp
subl
push
or
pop
cmp
mov
sbbb
iret
or
pop
jp
inc
aaa
lcall
adc
lods
sbb
or
add
mov
adc
adc
scas
lods
and
add
add
inc
push
jae
add
insb
and
sbb
push
push
test
xor
cmpsl
pop
ds
lods
xchg
or
pop
push
jg
cmp
ret
push
fs
icebp
test
or
das
movb
and
sbb
out
das
and
sub
out
ss
mov
fstpl
adc
mov
mov
mov
popf
push
xchg
jmp
add
inc
xchg
pop
fcoml
jbe
test
mov
jnp
mov
adc
add
jnp
subb
jb
idivl
add
test
test
inc
adc
and
adc
add
test
or
or
test
dec
xlat
cmpsl
in
push
sub
clc
inc
cmp
add
inc
cld
outsl
xor
lock
and
mov
mov
xor
cmpsb
not
sub
push
lock
cwtl
dec
fst
jg
or
xchg
cmp
sub
loopne
inc
jbe
stc
xchg
pop
cmp
add
inc
testb
imulb
push
adc
mov
or
mov
jns
lods
scas
xchg
fs
push
insl
pop
sub
add
mov
addb
sbb
sbb
fisubrl
scas
or
bound
adc
mov
pop
lcall
outsl
sbb
sub
or
cmp
and
jmp
inc
shlb
xor
sbb
xchg
jle
push
movntps
aam
mov
cwtl
sahf
test
clc
loopne
rcrb
fwait
push
aam
mov
imul
hlt
clc
call
orl
add
cmc
mov
inc
inc
das
dec
adc
mov
sti
in
add
cmp
dec
xor
in
inc
push
or
adc
or
sub
mov
fnstcw
dec
or
enter
mov
xchg
not
cltd
jle
inc
cmp
cmp
dec
mov
dec
aaa
out
mov
int
push
dec
shrb
xor
imul
rolb
mov
and
or
xchg
cmp
clc
dec
das
fwait
dec
out
lock
and
lcall
or
fwait
inc
inc
jle
add
sbb
add
in
lcall
out
xchg
and
idiv
test
xor
push
dec
mov
sbb
loope
das
out
lcall
add
and
add
sbb
and
mov
fwait
sti
int
or
outsl
insl
popa
pop
loope
mov
cmp
pusha
mov
jbe
lahf
rcll
pop
sbb
push
clc
add
pushf
sub
fsubrs
popf
mov
cmpsl
subl
or
dec
dec
push
and
cli
and
and
xorl
add
aad
jne
and
pop
push
push
les
or
sbb
push
aaa
mov
inc
jno
fisttpll
xchg
push
push
add
mov
mov
and
adc
lret
sub
ljmp
loop
jne
add
andl
xor
sbb
pop
jo
mov
jmp
out
lfs
aaa
lret
sti
lock
pop
dec
xchg
mov
inc
sahf
pop
add
pop
sahf
push
mov
push
mov
rolb
loope
pop
clc
out
or
ret
pop
and
inc
sbb
add
mov
mov
add
and
mov
and
push
jbe
push
and
inc
dec
or
inc
xchg
inc
in
int3
sbb
inc
cmp
mov
cmp
sub
add
mov
push
cmp
ret
xor
pop
les
ret
or
and
push
movb
fcoms
mov
insl
lock
push
dec
leave
mov
push
dec
jmp
xchg
xlat
and
stc
add
pushf
or
pusha
into
or
cmp
xor
sub
pop
mov
fsubs
pop
adc
push
dec
out
cltd
inc
adc
repnz
mov
loopne
cwtl
pop
mov
nop
add
ds
ss
ret
adc
or
scas
mov
hlt
jl
adc
rcrb
mov
pop
sbbb
push
xchg
push
push
push
movsb
nop
add
jae
or
xor
les
pop
clc
cmpsl
push
adc
push
inc
jb
lahf
push
popa
test
mov
pop
add
jecxz
adc
dec
pop
pop
call
lahf
ss
sub
add
pop
xor
testl
les
aaa
out
push
push
adc
push
int3
mov
frstor
adc
cmp
mov
mov
insl
gs
inc
sub
movsb
push
cltd
and
aaa
jo
sbb
jo
inc
loopne
aas
xchg
xor
push
mov
inc
adcl
inc
inc
clc
or
or
data16
popa
pop
dec
sbb
inc
inc
cmp
je
xor
testl
or
ret
movsb
dec
inc
pusha
xor
ja
jns
jnp
fnstsw
push
fistpll
jmp
mov
sub
mov
das
sbb
mov
daa
loope
push
push
or
sub
mov
or
xchg
push
fs
sbb
add
adc
push
decl
sub
test
and
sbb
or
lods
mov
mov
mov
and
and
rcl
fsubs
and
and
loopne
call
in
lock
clc
and
or
and
and
or
adc
and
and
sbb
and
and
and
sub
xor
and
and
cmp
inc
dec
and
and
dec
push
push
pop
push
stos
fs
sub
push
loope
push
and
mov
mov
cmp
test
jnp
or
push
jmp
arpl
push
out
mov
dec
fmull
sbb
mov
and
test
lods
and
mov
mov
inc
mov
add
push
movsb
xor
mov
rcrb
lret
rcl
and
fmuls
push
sbb
sub
inc
sub
in
call
dec
in
pop
movsb
xor
xchg
lock
hlt
or
push
push
clc
nop
cld
add
sbb
mov
nop
lret
shlb
sbb
adc
mov
adc
push
sub
test
dec
and
xor
xchg
add
insb
sub
push
push
movsb
jl
mov
nop
lret
cmp
cmp
inc
add
clc
dec
in
xchg
dec
adc
or
inc
push
pusha
insl
fnsave
pop
xlat
xchg
add
stos
rcll
adc
js
push
loopne
loop
aad
xchg
adc
lods
std
inc
insb
outsl
jae
and
or
in
pusha
mov
adc
or
jo
lods
aas
push
fcoml
jnp
and
daa
or
pop
daa
mov
and
mov
xchg
gs
addr16
sti
inc
fcomps
dec
arpl
jae
xorb
cld
test
push
mov
daa
lea
push
inc
mov
push
jp
ret
jb
push
outsl
xchg
pusha
int
das
pop
pop
pop
dec
mov
fnsave
dec
lcall
test
ret
xchg
jns
or
in
movsb
rclb
adc
or
lods
or
inc
fisubrl
cmpsl
mov
stos
jns
jbe
adc
mov
or
fldt
jns
in
lcall
pop
cmp
pop
in
pop
insl
pop
cmp
pop
pop
ret
addl
andl
push
jg
dec
mov
fidivrl
jne
insl
outsb
das
sbb
xchg
pop
fs
inc
mov
leave
push
das
pop
mov
cmp
popl
jno
and
ret
loope
push
popa
add
outsl
adc
sbb
lea
xor
cmp
mov
xchg
loopne
mov
fwait
inc
pop
jne
xchg
mov
in
mov
xchg
dec
sbb
daa
jb
inc
sbb
xlat
out
xchg
adc
test
sub
lods
cmpsl
mov
mov
lods
xchg
addb
inc
push
dec
inc
push
dec
xlat
mov
ja
iret
adc
mov
sbb
or
mov
ds
xor
mov
hlt
daa
push
add
xor
jne
add
jl
scas
cmc
loope
daa
outsl
push
mov
jl
mov
adcl
cltd
sub
pop
ret
push
es
push
inc
ja
jl
push
dec
rcll
or
pop
in
scas
test
and
popa
jns
add
out
sub
xor
add
dec
aad
lcall
fdivrp
or
push
jae
les
push
inc
insb
mov
xorb
cld
cmp
mov
rolb
jo
imul
lods
or
xchg
sbb
sbb
mov
and
dec
jnp
jmp
mov
add
add
push
and
movsb
fidivrl
pop
dec
jmp
inc
aas
sbb
inc
add
cmove
pop
add
outsb
xor
inc
add
mov
addb
shll
fnstcw
clc
addb
stc
rcr
loope
divl
add
xor
cmpsb
mov
in
flds
jbe
lret
push
sub
push
movsb
out
lcall
nop
sti
loopne
loopne
imul
fmull
mov
into
out
sbb
adc
inc
jmp
push
cwtl
push
in
push
sahf
enter
rcll
gs
mov
mov
xor
sub
stos
mov
and
jno
test
pop
sahf
mov
test
and
inc
push
push
add
mov
sbb
xor
or
orb
test
fildl
add
dec
dec
pushf
add
clc
inc
outsb
ds
leave
inc
push
add
int
sbb
xchg
fsubr
dec
mov
lret
flds
pmuludq
scas
push
movlps
popf
mov
adc
and
adc
xor
inc
mov
push
push
movsb
jnp
mov
je
ljmp
dec
adc
negl
sub
shl
mov
mov
xor
pop
fiadds
mov
mov
fsubl
inc
adc
pop
in
adc
daa
mov
orb
jb
sbb
into
ret
jae
es
dec
hlt
inc
pop
pop
push
inc
or
sub
jae
fcoml
inc
daa
call
dec
dec
push
inc
xchg
outsb
add
inc
pop
enter
movsl
cpuid
mov
xor
ja
shrb
push
sbb
xor
cmp
cwtl
insb
mov
sbb
cltd
jo
lods
dec
cmp
int3
push
and
mov
mov
xchg
jmp
fs
sbb
sahf
jbe
rolb
mov
or
out
cmp
call
mov
add
out
xchg
inc
in
sbb
cmp
pop
push
mov
xchg
jl
pop
ss
sbb
out
xchg
and
jo
xchg
jmp
mov
inc
fisttpll
and
push
jnp
dec
jmp
and
pop
xchg
and
jnp
fstpt
fstl
mov
bound
xchg
and
inc
subb
call
mov
lock
push
adc
push
shrb
es
inc
lahf
test
lret
es
push
mov
pop
xor
xor
daa
mov
outsb
push
imul
mov
xor
cmp
mov
out
loope
cmp
sbb
aas
inc
repz
add
inc
sbb
aam
pop
mov
push
dec
sub
xor
xchg
dec
dec
loopne
add
nop
loopne
test
dec
clc
clc
push
inc
add
sub
or
subb
jmp
inc
or
add
mov
or
inc
sub
add
xor
mov
sbb
mov
les
xor
fwait
loop
das
outsb
push
out
outsb
test
pop
enter
enter
or
rorb
xor
or
mov
mov
or
push
dec
xor
xchg
xor
cmp
lock
lret
orl
dec
pop
arpl
cwtl
add
shlb
in
pop
xchg
inc
sub
inc
add
mov
mov
aam
sub
inc
push
rcrb
pop
inc
adc
dec
repz
sbb
push
push
inc
enter
push
inc
jns
cmp
pushf
nop
push
rorb
push
and
out
mov
in
cld
jle
hlt
or
jnp
jns
mov
add
or
mov
mov
adc
cli
outsb
or
and
sbb
imul
mov
repnz
push
cmpsb
aas
push
fmull
jo
push
test
inc
cs
pusha
add
jl
movhps
sbb
jnp
xor
int3
outsb
data16
inc
test
mov
dec
inc
cmp
cmpl
inc
inc
jge
movsb
int
out
popf
in
stos
pushf
outsb
pop
addr16
push
bound
pushf
mulb
insb
mov
push
nop
das
lods
into
xchg
sub
cmp
push
push
sub
sub
dec
loopne
cs
mov
inc
js
out
mov
enter
mov
addb
lcall
loope
negl
xchg
push
push
mov
sbb
popl
sub
xlat
hlt
lret
xchg
adc
pop
push
adc
lahf
data16
mov
mov
and
into
add
les
xchg
inc
cmp
inc
je
lds
jecxz
xchg
add
mov
out
std
jmp
ljmp
push
pusha
rorl
pop
loopne
icebp
xor
mov
dec
iret
jo
adc
and
mov
sbb
push
pop
push
aaa
and
xchg
sbb
movsb
jo
jae
dec
fs
push
jno
les
xor
repnz
xor
addr16
leave
adc
xor
sub
stos
movl
dec
shll
pusha
add
ljmp
xchg
orb
mov
inc
sbb
sysret
xchg
lret
lods
inc
sbb
dec
jo
sbb
mov
inc
pop
jae
jae
dec
lods
in
daa
lods
stos
push
jns
sbb
lods
rcrb
push
jnp
enter
lds
adc
ret
push
imul
push
mov
outsb
inc
mov
adc
mov
roll
repnz
in
push
add
call
into
and
xchg
sbb
and
leave
add
xchg
pop
and
xor
lock
lock
mov
das
in
clc
sub
push
js
je
cwtl
int3
add
lahf
dec
sti
or
inc
adc
xchg
mov
or
and
dec
sbb
add
nop
or
push
jo
das
sub
nop
and
push
inc
push
inc
xor
add
or
sbb
xor
mov
mov
int3
mov
mov
lahf
filds
into
int3
mov
movb
ret
insb
mov
in
divl
jbe
shlb
jp
jmp
popf
add
sbb
push
adc
add
inc
push
mov
call
int3
pop
das
mov
add
sub
lea
push
orl
movsb
fld
and
push
sbb
or
add
jae
pop
push
les
lods
pop
sbbl
adcb
inc
sti
inc
les
add
mov
add
add
cmpb
jne
mov
test
mov
call
push
add
mov
add
xchg
out
ret
inc
push
bound
leave
adc
xchg
sahf
adc
or
push
dec
push
xchg
mov
jmp
add
aas
sub
add
or
sbb
mov
fadds
mov
cld
adc
fiaddl
pop
arpl
lods
or
sbb
pop
jmp
xorl
imul
movsb
shl
lret
cld
pop
mov
rol
nop
pop
dec
iret
add
test
je
sub
sub
test
std
clc
cmpb
jne
vmread
inc
mov
cmpsl
push
jne
or
mov
add
sub
stc
mov
mov
addb
or
mov
lock
mov
fbstp
sbbb
test
dec
lahf
jge
scas
xchg
xchg
jbe
inc
lret
and
pop
sub
jge
movsl
add
aam
jg
mov
pop
sub
sub
inc
push
cmc
xchg
hlt
xchg
xchg
shll
movnti
int3
xchg
hlt
ret
push
dec
in
js
movsl
lods
sub
xchg
mov
xchg
jns
loopne
and
jle
cmpb
mov
inc
inc
push
xchg
and
rorl
push
inc
or
push
dec
push
dec
rorl
addl
gs
add
sbb
jmp
or
mov
jae
push
hlt
gs
sub
adc
cwtl
cmpsl
dec
lock
cmp
or
testb
int
add
clc
stos
andl
lock
std
add
and
adc
jmp
pop
inc
popa
jns
and
inc
sbb
movsb
hlt
xlat
fsts
ret
add
or
inc
sbb
dec
call
je
mov
or
enter
cltd
cs
fdivs
and
sbb
xchg
xor
dec
int
xchg
popa
xchg
fistpll
lret
andb
push
shll
ret
gs
or
jmp
fstpt
nop
jmp
adc
mov
mov
call
mov
ja
mov
push
rcl
add
jb
adc
and
xchg
js
hlt
or
dec
jmp
adc
push
jle
xchg
mov
aas
or
cltd
shll
push
imul
orl
adc
popa
ror
inc
pop
ds
push
cmp
inc
andb
inc
and
or
xlat
fldt
xor
cmpb
je
push
fldl
nop
lret
add
nop
aad
leave
sbb
mov
inc
xchg
lds
mov
inc
sti
sub
sub
sbb
mov
aaa
jmp
sub
clc
in
rolb
ficoml
pusha
cmp
xchg
jne
inc
ret
ljmp
add
pop
dec
push
add
jl
movsb
xchg
icebp
mov
sahf
add
in
sub
out
cld
sbb
cmp
sbb
loopne
mov
or
dec
enter
fiadds
leave
fwait
lock
and
cmp
enter
cltd
leave
rcrb
pushf
push
in
adc
in
sbb
lea
mov
adc
sub
add
outsl
and
inc
adc
popa
push
adc
cmp
cmovae
fs
jge
xchg
lahf
aas
mov
mov
push
cmp
push
inc
andb
mov
push
inc
cs
mov
cwtl
inc
fwait
mov
iret
mov
push
sub
add
gs
dec
jnp
and
sbb
cmp
sub
lods
add
push
dec
dec
ds
sahf
sahf
mov
sbb
xchg
lahf
inc
sbb
flds
xchg
adc
pmullw
add
cmp
jbe
dec
xchg
aaa
bound
and
mov
push
or
les
out
sarl
sub
mov
loop
xor
addb
add
fbstp
fwait
insb
stc
mov
adc
dec
dec
sub
rolb
pop
aaa
adc
sub
pop
test
mov
sarb
adc
test
faddl
sarb
jecxz
into
mov
fcoms
pop
sbb
inc
inc
bound
icebp
pop
cmp
iret
js
mov
inc
mov
jecxz
sbb
push
xor
addr16
int3
sar
fcompl
fcomps
or
arpl
arpl
int3
mov
push
outsl
push
sub
mov
lea
or
mov
or
add
pop
xor
mov
test
test
sarb
fcoml
and
sbb
sbb
aaa
or
clc
inc
push
pop
sub
call
sub
jmp
loope
mov
dec
jne
mov
jne
movb
add
xchg
xchg
enter
xor
test
das
jne
rol
loope
sub
mov
mov
sarb
popa
mov
mov
cmp
sub
sbb
jmp
mov
ret
addb
jne
repnz
xlat
popf
add
adc
imul
mov
test
push
sbb
push
mov
add
inc
fildll
or
mov
cmovle
push
std
and
mov
inc
iret
sbb
leave
or
sbb
mov
pop
adc
mov
and
sub
xchg
outsb
jae
mov
xchg
or
bnd
mov
mov
in
mov
insl
or
mov
inc
adc
mov
cmp
ss
jbe
push
push
or
decb
pop
sbb
and
adc
lock
mov
mov
ljmp
add
ret
sbb
andl
inc
add
push
arpl
inc
push
push
push
dec
dec
out
sbb
mov
or
sbbl
add
push
cmpsb
cmpsb
jmp
jl
sub
or
pop
cmpsl
je
mov
pop
orb
mov
fcomps
cmp
insb
outsb
and
jne
insl
adc
lods
inc
xchg
add
jns
mov
jns
xchg
mov
add
or
les
shll
mov
shl
jle
fs
ds
les
insl
xor
sbbl
pop
pop
jge
or
in
roll
cmpsb
int3
addr16
pop
pop
aad
xor
dec
sub
sbb
movb
inc
pop
inc
push
jne
mov
int3
push
inc
push
jle
adc
jb
ja
shr
inc
je
shr
xor
icebp
test
rolb
sbb
data16
test
js
ljmp
out
stc
in
ja
mov
ret
icebp
dec
pop
push
bound
dec
sbb
jb
popa
mov
adc
dec
or
stc
push
les
fdivs
or
insb
lcall
or
jns
push
inc
and
xchg
mov
inc
pop
cmpl
gs
adc
je
jno
and
and
mov
push
push
mov
gs
setb
out
pop
inc
push
cmpsl
or
mov
push
mov
aaa
mov
lock
jno
lods
leave
test
push
popa
in
ss
jo
jns
enter
popa
push
stc
test
mov
dec
cmpsb
dec
add
ret
popl
jb
in
adc
out
jo
jg
jp
jb
dec
pop
mov
hlt
mov
sub
je
ja
or
bound
outsb
iret
dec
adc
into
inc
data16
pop
push
and
adc
cmp
jnp
fs
fs
or
lcall
adc
push
sbb
xor
mov
xchg
mov
mov
popa
jb
dec
jb
jg
icebp
push
bound
lea
das
sbb
js
mov
pop
push
push
popa
mov
ret
imul
mov
iret
dec
add
mov
daa
sbb
mov
pop
insl
jae
mov
add
ja
and
cmp
lods
test
cmp
es
jns
decl
pop
call
jno
xlat
nop
or
push
daa
xchg
inc
pop
das
inc
imul
mov
in
pop
jo
addb
inc
outsb
popa
push
push
gs
xor
into
jb
scas
xlat
dec
or
push
xor
lahf
lcall
mov
nop
or
sbb
mov
push
hlt
mov
xor
mov
cmp
aaa
sub
mov
xor
jbe
je
cmp
mov
fidivs
lods
fsubrp
cmp
insl
shrb
stos
fists
and
push
cmpsl
insl
mov
mov
push
mov
pop
insb
dec
dec
adc
sbb
addr16
out
adc
ss
adc
pusha
sbb
addb
test
jbe
iret
adc
xlat
jl
dec
in
lahf
addr16
imul
das
filds
ret
ret
cmp
loop
push
in
pop
add
inc
call
inc
jne
add
adc
mov
push
jne
xchg
push
inc
xorl
add
xor
cmpsl
adc
or
xor
movlps
repnz
mov
ja
or
outsl
unpcklps
aaa
xor
sbb
xchg
lea
enter
sbb
pop
or
je
and
add
or
arpl
adc
outsb
push
loopne
inc
ljmp
or
pop
or
and
adc
jae
out
aaa
mov
inc
inc
outsl
fs
and
add
pushf
add
outsl
loopne
pop
dec
adc
arpl
xchg
jno
and
or
cld
lods
mov
aaa
hlt
test
lret
lahf
dec
xorl
inc
inc
mov
inc
inc
sbb
jbe
aaa
cmp
sub
xor
xchg
add
push
nop
fmuls
xor
daa
push
dec
mov
or
dec
jae
fwait
and
push
sub
sub
addr16
adc
sbb
or
je
adc
push
ljmp
cmp
sahf
pop
mov
test
das
mov
pop
push
adcl
outsb
xchg
movhlps
pop
enter
outsl
imul
adc
xor
or
insl
subl
add
stos
or
gs
pop
cwtl
jo
pop
aaa
addr16
inc
mov
shlb
popa
push
adc
or
into
das
sbb
cmp
cmp
js
push
xchg
jecxz
shld
mov
jle
cmp
loopne
push
sbb
mov
idivl
test
push
cs
mov
stc
pop
sub
in
out
pusha
cmove
add
inc
add
jb
push
out
in
inc
sbb
inc
push
pushf
in
adc
xchg
mov
addr16
xlat
inc
lcall
adc
jmp
pusha
add
movb
add
xchg
mov
aam
fbld
nop
or
and
sbb
add
pavgb
mov
inc
in
inc
adc
iret
xchg
cmovno
pop
adc
leave
push
jb
inc
adc
andl
adc
push
loop
adc
dec
outsb
dec
push
and
sbb
insb
inc
pop
add
jns
mov
mov
mov
xorb
xor
or
mov
test
test
lock
jb
and
xchg
je
add
dec
test
insb
xor
add
sbb
mov
dec
addr16
inc
stos
test
pop
xchg
jno
and
jecxz
popf
and
add
and
leave
push
jb
and
inc
inc
dec
and
orb
sbbb
sub
mov
pop
ss
in
mov
mov
inc
push
inc
cs
loopne
imul
pop
mov
andl
loop
xlat
dec
pop
movb
inc
out
lock
push
add
testl
lret
das
xchg
add
sarb
repz
mov
inc
xor
mov
dec
cmpsl
aam
rcll
lahf
add
lock
xchg
and
pop
sbb
inc
lcall
adc
fcomps
add
mov
cmpsb
mov
dec
js
inc
adc
adc
dec
cmp
and
or
cmp
int3
inc
fstps
push
pop
or
xchg
jge
ret
add
sbb
mov
xchg
pop
cmpsb
sbb
call
xchg
sbbl
push
test
jbe
inc
rcll
lock
add
xchg
mov
mov
lods
xchg
lock
lcall
or
in
test
jle
idivb
inc
aaa
mov
jb
mov
pushf
stos
dec
loope
mov
adc
stc
jo
fwait
pop
push
leave
ret
pop
je
ret
lret
inc
cld
and
lea
mov
push
add
dec
xor
jmp
sub
div
jle
xchg
pop
and
fsubs
mov
add
add
pop
jge
inc
loope
sub
test
dec
xchg
and
sbb
push
pop
dec
daa
mov
pop
adc
push
lahf
fadds
pop
fmull
insl
loope
ljmp
insb
dec
fcomps
mov
inc
sub
dec
sub
xchg
or
push
sbb
notl
sbb
push
adc
ja
push
push
cwtl
nop
mov
adc
adc
testl
jne
nop
jae
push
ret
sti
pop
jns
fwait
test
cs
or
ja
inc
std
inc
sub
adc
and
jno
and
movsb
pop
add
fldenv
ret
lds
mov
jne
jo
or
cmp
xor
mov
call
hlt
test
add
dec
jg
testb
jne
pusha
jno
jle
push
imul
adc
movsl
nop
pusha
and
pop
mov
mov
xchg
shrb
dec
cmpb
add
sti
push
aaa
cmpb
add
cmp
inc
add
jmp
and
orl
inc
adc
mov
cmpsb
rorb
and
fstpt
add
mov
andl
sbb
ljmp
sbb
adc
nop
mov
pop
adc
cmc
jbe
inc
test
cmp
xlat
cmpsl
rorb
dec
lret
gs
test
pop
enter
stos
stos
lods
add
pop
mov
mov
iret
arpl
push
adc
xorb
push
dec
inc
mov
fwait
add
sbb
insb
loopne
or
popf
scas
add
fcoml
jne
loopne
dec
pop
inc
je
cmove
pop
adc
xor
push
cmpsb
xchg
jne
rclb
pop
adc
imul
jl
adc
vmovdqu
mov
sbb
push
or
xchg
fsubrs
out
sbb
inc
test
mov
repz
test
out
inc
jmp
daa
testb
popa
inc
push
xchg
negl
shrb
or
xlat
pop
xor
dec
bound
jo
pop
xchg
xor
hlt
andb
shrb
xlat
add
orb
pop
xchg
addr16
out
mov
xchg
add
xor
adc
aas
mov
out
cs
dec
xlat
xorb
in
gs
cltd
js
clc
std
sbb
push
dec
cmp
mov
dec
add
fmul
ret
push
les
push
repz
dec
dec
xor
inc
cmpb
jmp
negb
inc
push
loop
and
clc
mov
or
lret
cmp
mov
push
lods
or
or
cmp
push
mov
addr16
andl
push
jmp
cmp
loopne
test
jg
in
das
push
inc
movsb
or
inc
jns
loop
cwtl
lock
adc
rorl
push
pusha
pop
adcl
cmp
mov
into
insb
repz
repnz
sbb
add
jnp
mov
pushl
push
movsb
je
or
lcall
and
jno
pop
pop
sub
daa
or
movsl
mov
xor
test
inc
sbb
ret
add
pop
int3
inc
lock
popa
loopne
sbb
stc
inc
mov
lea
inc
pop
rcl
mov
insb
cmp
push
fnstsw
pop
nop
inc
push
cmp
fadd
lods
inc
aad
sub
push
xor
dec
adc
je
out
movsl
xor
mov
push
inc
adc
pop
mov
sbb
inc
push
xchg
icebp
add
mov
jmp
loope,pn
inc
add
mov
inc
fimuls
loopne
cs
adc
adc
mov
sbb
cmp
insl
push
pop
in
adc
xchg
jle
jo
or
and
shl
jo
pop
or
stos
fwait
imulb
push
push
push
add
or
cmp
rorb
repz
imul
adc
sbb
pushl
cltd
shlb
das
orl
les
adc
or
or
out
rolb
add
pop
sub
pop
and
add
inc
lret
ret
sbbl
and
pusha
cmp
pop
repnz
sbb
inc
sub
cmp
mov
jns
and
pop
hlt
pop
das
hlt
inc
xor
add
mov
inc
in
cmpsl
out
or
mov
lods
jmp
arpl
adc
mov
dec
push
push
ret
jmp
call
and
aas
int3
mov
inc
mov
inc
pop
aaa
xor
inc
cmp
jne
lcall
inc
push
push
orb
ds
cld
bound
add
xor
cmp
outsb
add
fcoms
inc
add
inc
inc
scas
cld
lea
cmp
xor
inc
sub
mov
xor
fs
inc
nop
cmp
mov
inc
push
or
nop
pop
nop
mov
mov
inc
jg
scas
cmp
inc
movsb
xchg
inc
dec
dec
inc
add
dec
cld
add
xchg
inc
dec
dec
inc
nop
ss
add
inc
callw
in
pushw
xor
push
inc
insb
inc
push
nop
pop
in
mov
inc
add
jo
sbb
inc
or
sbb
xor
and
lock
cmp
imul
xchg
cmp
adcb
jb
xchg
outsb
es
dec
pop
pop
mov
test
addr16
mov
push
xorl
sub
enter
loope
push
loopne
adc
sbb
mov
sub
test
jmp
mov
rcl
in
mov
sbbb
push
rcl
sub
jecxz
cmp
jo
movsb
jb
addr16
inc
sbb
pop
inc
lds
int3
jo
adc
inc
test
scas
inc
int3
mov
mov
hlt
call
cmp
imul
cmp
cmp
nop
jae
clc
inc
jns
cmc
ret
pop
pusha
out
xlat
inc
jecxz
push
jne
inc
pop
loopne
cmp
push
push
packsswb
dec
scas
arpl
addr16
sarl
and
ja
addb
int
ljmp
cwtl
push
nop
jo
and
iret
fstl
fldl
mov
adc
aas
dec
sbbb
mov
clc
cltd
mov
out
dec
ds
or
mov
sbb
adcb
adc
nop
add
in
or
push
in
loop
out
jae
ss
push
inc
mov
pop
add
mov
and
inc
xchg
fldt
mov
adc
inc
dec
mov
adc
lcall
adc
dec
arpl
jns
es
mov
and
cmp
and
rolb
mov
jecxz
scas
pushf
test
fstl
dec
loope
pushf
cli
cmpsl
fcmovu
daa
int
pop
in
sbb
movsb
xor
add
aaa
dec
mov
nop
pushf
mov
imul
or
mov
jae
aas
mov
mov
mov
xor
xor
clc
lcall
rorl
adc
pop
inc
test
inc
mov
jbe
repz
inc
mov
sbb
lock
sbb
mov
pop
shld
test
xchg
and
or
pop
loopne
test
pushf
testb
dec
dec
dec
push
inc
inc
shl
divl
pop
lock
push
into
jns
pop
dec
outsb
in
xor
test
inc
insb
insb
pop
or
in
push
outsl
pop
or
and
sub
pop
imul
nop
add
cwtl
aam
push
mov
inc
stc
and
push
inc
push
pop
fldcw
out
sub
adc
mov
mov
adc
fmuls
dec
sbb
push
push
dec
jbe
adc
push
add
inc
or
sub
orb
or
pop
test
add
cwtl
or
add
cwtl
pop
mov
push
jne
push
int3
dec
mov
pop
in
cmp
loopne
movsb
jb
xor
fdivl
hlt
pop
mov
jno
mov
or
mov
pop
inc
bt
jae
cmpsl
arpl
cmp
mov
add
or
and
push
mov
test
pop
inc
cltd
addr16
aam
pop
loop
sub
or
inc
cmpsb
pusha
jle
or
jbe
dec
loope
sbb
pop
lock
mov
fwait
sbb
lahf
pop
sbb
sub
clc
mov
add
xchg
lods
add
push
mov
sbb
xorb
jp
outsb
lds
mov
test
pop
test
lods
es
mov
add
and
inc
ret
sbb
or
sbb
jne
push
add
xor
roll
jne
xor
pop
adc
fwait
popa
dec
fmuls
insl
rolb
fdivrs
fidivrs
and
pop
bound
rolb
popf
add
add
push
cwtl
mov
add
add
das
pusha
popl
rcl
cli
rolb
jns
loopne
dec
icebp
sub
fsubs
dec
lea
or
je
cwtl
xlat
andb
add
mov
test
js
cmp
jmp
mov
add
and
sbb
dec
aaa
aas
jge
inc
loopne
xlat
push
mov
mov
movsl
sahf
jo
rclb
sti
jnp
cmp
and
mov
and
sub
movsl
xor
cmp
xchg
fildl
cmp
mov
and
pop
sbbl
rcl
push
shlb
adc
mov
cmp
push
xchg
out
rcll
xor
push
je
mov
jne
or
push
in
fcoml
adc
pop
and
inc
dec
push
push
aam
push
inc
fists
inc
testb
mov
outsb
push
int3
adc
add
ret
add
jb
mov
sbb
faddl
jmp
jae
pop
push
les
shlb
inc
adc
clc
ljmp
mov
xchg
inc
mov
into
jno
negb
jne
pushf
cmp
mov
mov
orb
add
popf
cmpsl
inc
lret
adc
mov
rolb
into
enter
and
add
add
add
dec
mov
or
push
lret
test
mov
pop
add
loopne
mov
nop
mov
inc
test
push
add
mov
pop
add
testb
das
xor
or
add
clc
lret
push
sar
lods
testb
out
push
dec
or
pop
inc
shlb
and
das
mov
mov
xchg
cmc
sarb
add
cmp
ret
int
neg
test
sbb
lea
mov
jmp
xchg
add
cld
call
jecxz
imul
lcall
jge
jge
shll
push
cmpb
jo
mov
sub
mov
push
jns
inc
sbb
dec
stc
dec
inc
addb
pop
sub
pop
and
cwtl
or
push
adc
jbe
dec
mov
mov
fiaddl
add
stos
and
mov
dec
cmpsl
ret
or
clc
int3
leave
pop
lcall
imul
xchg
fdivrl
push
add
lret
jo
xor
rcl
cld
out
in
jo
daa
add
and
jbe
js
or
add
sub
dec
test
pop
cwtl
push
inc
jecxz
or
add
xchg
add
out
addl
and
cmpsl
sbb
test
add
imul
loopne
push
movsl
jmp
das
push
lds
insl
jmp
xor
js
dec
test
adc
movsl
cmpsb
aad
aam
test
daa
lock
inc
push
xor
popa
jmp
movsb
aaa
and
aaa
and
addb
ljmp
push
cmp
jecxz
or
inc
cmp
push
add
call
xchg
hlt
mov
cmpsb
pop
je
hlt
sub
outsb
jp
arpl
mov
out
mov
cmpsb
lock
pusha
pop
jbe
lea
push
cli
xchg
adc
test
clc
mov
mov
or
mov
mov
sub
sbb
addb
jge
int3
int3
xchg
mov
sub
scas
imul
mov
lahf
es
mov
add
test
outsl
cs
add
mov
push
add
pop
add
es
rcrl
hlt
or
cs
negl
push
cld
or
ret
or
mov
cmpsl
mov
cld
mov
in
pusha
fs
sarl
or
pusha
dec
pusha
and
enter
push
testl
iret
or
insl
popaw
xorb
ficoms
sbb
mov
jmp
mov
xor
sub
or
dec
pushf
insb
push
sub
cmp
lea
inc
rcll
or
fistpll
ds
adc
sub
sbb
pop
mov
adc
jae
je
lds
add
xchg
dec
sbb
pop
aad
pusha
or
push
inc
pop
mov
enter
ret
outsb
add
pop
dec
or
xchg
mov
dec
aam
pop
movsb
popa
inc
loop
and
lret
iret
ror
cmp
test
mov
or
iret
or
test
add
cmp
xor
sub
adc
mov
je
mov
xor
and
push
add
add
cmp
sbb
mov
hlt
inc
add
pushf
lcall
dec
cwtl
ljmp
mov
gs
pop
js
add
test
movsl
mov
lock
hlt
js
rorl
sbb
adc
ror
enter
inc
hlt
sub
fdivr
shl
test
xchg
jb
enter
mov
rorb
sbb
lea
push
cmc
addb
xor
inc
or
pop
xor
inc
add
add
push
add
cltd
adc
cwtl
popa
not
popf
outsb
push
inc
dec
mov
adc
push
in
dec
popl
push
je
add
sub
or
cmpsb
es
test
add
imul
push
mov
xchg
fisttps
push
cmp
sub
test
lods
stos
sbb
icebp
push
aad
fisubrs
sub
pop
js
sub
xchg
out
outsl
push
ss
and
das
insb
lods
mov
jl
sub
movsb
ss
jbe
mov
and
fsubs
pop
push
push
rolb
jo
hlt
out
fildll
arpl
jb
cmp
ret
sbb
xor
loopne
jl
pop
outsl
sub
mov
in
pushf
and
and
and
sbb
sbb
xorb
cmpsb
hlt
mov
inc
or
repnz
or
rolb
push
mov
cld
mov
pop
add
outsb
inc
mov
ja
cmp
cmp
inc
or
sub
test
add
mov
xchg
inc
sbb
cmp
and
inc
shlb
bndstx
dec
test
inc
aam
cmp
cmp
sub
cmpsb
sbb
inc
leave
aas
and
pop
hlt
inc
add
add
and
jl
inc
mov
adc
push
inc
cmp
push
loopne
sbb
aaa
pop
and
xor
sub
outsb
jae
mov
lcall
push
push
xchg
pmulhuw
pusha
pusha
les
and
cmp
xor
arpl
test
neg
sbb
add
sbb
xor
inc
loope
push
jo
lret
push
sbb
imul
xor
adc
inc
or
dec
adc
jne
cmc
pop
shlb
mov
and
mov
lret
lock
adc
push
sahf
orl
jbe
sub
cmp
cmp
sbbl
cld
cld
cld
add
lods
pop
cmp
inc
push
push
pop
add
and
gs
or
ljmp
and
push
lcall
sub
pop
cmp
sbb
das
inc
outsb
out
dec
in
push
das
push
mov
adc
mov
or
jo
imul
jae
daa
mov
push
fists
mov
les
lods
fdivrs
and
add
add
outsl
dec
mov
outsb
jne
outsb
cmpsb
push
inc
xor
imul
cld
xchg
bound
iret
or
or
mov
movsb
in
lea
push
repnz
lret
add
jmp
call
jmp
les
bound
insb
sbb
or
push
imul
adc
popa
mov
test
pop
inc
push
and
out
stos
adc
pusha
fwait
inc
ret
int
ret
push
pop
push
fiaddl
lock
sub
sbb
jbe
fs
dec
dec
test
int3
and
icebp
pusha
cwtl
sub
mov
rolb
fs
in
sub
sub
xchg
out
or
pop
pop
mov
adc
adc
adc
fists
mov
or
or
mov
je
arpl
dec
aam
ds
lds
pop
ftst
pusha
dec
or
daa
xchg
inc
enterw
sbb
xchg
fwait
add
in
inc
cmp
cmp
daa
pushf
sub
fidivrs
sbb
jnp
xor
mov
jl
pushf
out
out
mov
push
lock
mov
cmp
pop
jl
sahf
sbb
addb
lahf
and
outsb
xchg
cmp
pop
test
push
cs
lods
daa
insl
test
aad
sub
push
test
inc
xchg
lock
push
mov
enter
push
push
test
xor
push
outsb
insb
pop
pop
mov
add
pusha
pop
inc
imul
sub
mov
addps
aas
std
roll
sbb
repnz
push
push
movsb
pusha
rcrb
jo
push
test
pusha
add
pop
cmp
pop
sbb
sahf
dec
sbb
and
xor
dec
lcall
dec
ret
imul
jge
pop
cmp
dec
imul
xchg
imul
xchg
daa
in
dec
cmp
insb
add
and
push
mov
or
mov
test
scas
dec
add
cwtl
cld
pop
inc
dec
add
xchg
or
push
sbb
add
andb
ds
add
jb
cld
mov
fsubl
ret
inc
add
or
bound
inc
mov
sbb
inc
or
es
rcl
cmp
sub
push
cmp
add
mov
dec
pop
or
mov
or
fs
pop
insb
gs
mov
xchg
dec
insb
or
vmread
pop
pop
add
dec
or
in
sbb
js
adc
pop
xchg
outsl
cltd
shll
inc
ss
fsubrl
adc
scas
loopne
fisttpll
out
adc
pusha
and
in
mov
sbb
xchg
in
adc
mov
rclb
ficoml
pop
shll
cwtl
cwtl
mov
out
push
add
and
nop
out
pushf
mov
pop
push
sub
shll
cmpsl
jmp
pop
daa
add
cmp
pop
adc
cmp
pop
inc
loopne
inc
xlat
roll
mov
sub
ds
out
jmp
and
mov
sbb
push
shlb
je
push
pop
sub
mov
push
pop
sbb
out
add
inc
inc
jne
test
clc
add
cmc
es
es
inc
mov
pop
cld
mulb
add
js
inc
pusha
jle
adc
cmpsl
pop
xorl
push
or
mov
or
cmp
addl
add
bnd
pop
insb
add
xchg
pop
stos
adc
push
jp
add
pop
adc
sarb
pop
jb
jne
rorl
dec
lea
and
je
pop
mov
inc
ja
inc
or
or
inc
inc
into
jb
add
aam
or
and
pop
pusha
push
stc
or
or
nop
pop
sbb
addb
decb
push
gs
ja
and
jo
inc
enter
jo
push
pop
inc
shrb
fstps
pop
sahf
add
dec
sarl
fsincos
or
bound
or
xchg
pop
loope
mov
jg
ljmp
outsb
imul
aam
add
inc
xor
aam
mov
xchg
mov
jo
iret
mov
rcrl
adc
sub
fstps
int
inc
sbb
push
push
inc
push
mov
movsb
sbb
pop
insb
clc
pop
call
mov
inc
test
push
test
or
inc
nop
pop
pop
and
movsb
sbb
jno
adc
xor
sbbl
dec
xor
mov
push
xchg
and
hlt
loopne
dec
cwtl
add
or
fistps
xchg
cmp
push
imul
jecxz
leave
adc
mov
sub
push
es
jns
dec
xor
cld
jo
jo
popa
test
paddb
out
push
lcall
sub
push
xor
sarb
lds
mov
neg
dec
nop
mov
rolb
pop
pusha
jle
jmp
sbb
cmpsb
xor
xor
xor
inc
mov
push
dec
mov
dec
dec
dec
dec
dec
dec
dec
xchg
das
cmpsb
dec
push
push
push
push
push
pop
pop
pop
and
repnz
fldt
mov
lahf
add
xor
addb
xchg
add
inc
test
rcrb
leave
xor
and
push
mov
into
in
cmovae
xchg
or
pop
add
xor
xchg
xor
jne
xchg
testb
repnz
pop
push
data16
adc
add
shlb
addr16
jns
int3
add
lock
dec
sub
loopne
lahf
add
pop
and
xchg
push
addr16
dec
lods
add
nop
das
xchg
dec
xchg
add
test
mov
adc
sarb
clc
sub
push
xchg
push
push
dec
out
jge
sub
push
or
orb
adc
inc
jge
shrl
xchg
or
mov
and
fwait
jns
mov
nop
cmpsb
push
sbb
and
scas
and
or
cmp
aam
shll
filds
jg
jmp
sub
fldenv
gs
ljmp
and
pop
jmp
inc
inc
aas
fsub
nop
popa
dec
pusha
sub
call
ret
or
pop
fdivrl
cmp
xor
mov
nop
xor
imul
sub
repnz
lock
inc
hlt
in
orb
push
mov
adc
pop
xchg
jnp
add
in
and
ret
movb
xor
insb
and
mov
xor
inc
cwtl
add
mov
jns
test
ret
aad
add
xor
pop
es
test
imul
repz
push
test
pop
sub
mov
nop
jg
adcb
mov
xchg
pusha
cmp
test
rcr
mov
orl
dec
mov
inc
jmp
gs
lock
pop
fidivl
mov
sub
test
mov
mov
jmp
pmulhuw
mov
sbbb
andb
out
or
subb
adc
jge
jmp
inc
call
jne
and
and
imul
pop
mov
aaa
outsb
insl
add
push
mov
and
xchg
jl
test
jle
shll
add
mov
adc
cwtl
jmp
cmp
adc
mov
dec
mov
scas
adc
fs
test
inc
pushl
int
mov
xor
fdivs
mov
icebp
mov
and
jne
arpl
push
pop
jb
imul
bound
popf
imul
test
js
add
or
inc
ret
pop
pusha
ljmp
sbb
or
incl
xor
insb
adc
cmp
inc
push
lock
jne
jle
aaa
push
aaa
mov
sub
cmp
push
fnstsw
or
xlat
cmp
enter
jmp
mov
repnz
cmp
je
in
dec
aaa
fwait
or
in
add
pop
rcrl
cmp
in
push
shlb
in
fists
in
mov
jg
pushf
jbe
adc
xchg
smsw
add
test
out
inc
cwtl
mov
inc
mov
cmp
fmuls
pop
lea
jbe
mov
sbb
mov
add
jmp
inc
and
ss
inc
imul
pop
xor
leave
in
push
pop
dec
addb
cmp
xor
inc
push
nop
popl
jl
mov
cmpb
xchg
out
cmpsb
insb
fiaddl
jnp
inc
push
aas
cmp
fistps
mov
sub
inc
pop
or
test
push
xadd
leave
push
icebp
sbb
or
adc
and
adc
dec
inc
inc
xchg
js
inc
sbb
cmp
sub
dec
lds
cs
jecxz
sbb
jbe
rol
and
cmp
sub
filds
je
mov
iret
jae
push
aaa
cmp
push
nop
fstpt
cmp
fcom
push
dec
cld
xchg
fcoms
pop
in
aas
inc
dec
in
test
or
inc
js
fwait
adc
sub
nop
sti
or
xor
mov
add
rcrb
dec
cmp
add
aas
test
mov
movl
outsb
xchg
roll
pop
inc
mov
fs
out
push
and
cmp
add
cmpsl
sbb
sbb
mov
inc
lock
jmp
and
lock
test
dec
jg
cmpl
cmp
push
and
dec
adc
inc
xor
mov
out
mov
mov
cmp
mov
adc
je
mov
test
mov
mov
sub
js
adc
jg
arpl
sbbb
jns
imul
loope
jle
adc
dec
pop
and
mov
leave
sbbb
js
inc
push
pusha
add
inc
insl
and
into
dec
push
out
or
pusha
mov
push
int
es
test
sbb
data16
les
or
pop
adc
mov
or
pop
xchg
cli
add
adcb
sbb
dec
sbbb
or
sub
xchg
inc
cmp
jo
das
je
repnz
push
cmpsb
add
add
mov
cmpsb
inc
ret
fimull
pop
jne
or
sub
xor
adc
adc
cmp
cmp
or
dec
or
push
testl
or
pop
rcll
pop
jle
aaa
jnp
outsl
inc
cmp
xor
push
xchg
xor
jb
rclb
sbbl
aam
cltd
or
mov
pop
inc
or
inc
and
pop
pop
test
dec
xchg
sbb
jae
push
and
test
adc
add
add
mov
outsb
mov
or
sahf
divb
or
push
in
jmp
xorl
es
gs
inc
mov
das
inc
sub
arpl
fildll
fisttps
jne
insb
cwtl
add
hlt
ja
clc
dec
shlb
adc
unpcklps
sti
fmuls
jnp
push
nop
adc
pop
fwait
and
push
or
push
mul
inc
inc
mov
popa
adc
add
adc
inc
fbld
xchg
cld
adcl
jl
clc
pusha
adc
add
push
dec
lds
pusha
test
cmpsb
add
xchg
ret
shlb
pop
pop
mov
ljmp
and
or
pop
push
daa
mov
sub
mov
sbb
mov
adc
mov
cmpb
and
cmpsl
mov
outsl
inc
adc
shr
mov
testl
arpl
pop
shl
insb
out
pop
and
mov
test
pop
sub
xchg
lret
push
in
decb
inc
shrb
stos
inc
mov
shlb
push
mov
xor
jo
popf
sub
cmpsb
cmpl
addb
jle
pop
cmpb
sbb
lds
pop
pop
fnstcw
es
inc
dec
rcrl
cmp
jge
outsl
cld
out
aad
cmp
jae
mov
arpl
jbe
cmp
xor
sbb
lods
ret
pop
pop
adc
and
adc
cmpsb
pusha
pop
sbb
cmp
push
add
jmp
or
push
ret
vpcmpgtd
dec
inc
and
xchg
leave
inc
push
push
jne
add
fsubrl
inc
inc
ljmp
sub
cmpsl
in
add
imul
icebp
mov
cwtl
loope,pn
lcall
mov
mov
xchg
add
inc
sarl
call
ljmp
pusha
aam
pop
push
and
adc
enter
cld
cld
mov
fdivrl
pushl
outsb
mov
filds
adc
movsl
addl
popf
mov
push
mov
js
jmp
mov
arpl
and
rolb
js
fldl
dec
mov
or
push
cmp
daa
xorb
das
adc
in
clc
lret
adc
mov
inc
mov
fwait
rorb
mov
mov
mov
sub
or
and
mov
lcall
lods
inc
data16
add
sbb
data16
imul
out
or
mov
pusha
and
push
or
push
xchg
pop
mov
mov
ret
inc
scas
je
pop
std
xor
push
movsb
jb
mov
ret
mov
aaa
xor
xchg
push
orb
xchg
pop
mov
cwtl
ret
dec
inc
pop
add
in
mov
inc
add
nop
clc
sbb
out
xor
jg
and
outsb
ja
or
cltd
push
lods
jl
or
xor
rol
std
adcb
test
pusha
xor
xor
inc
xchg
inc
jecxz
push
in
das
and
and
sbb
adcl
pusha
inc
mov
pop
adc
sub
inc
je
in
xchg
or
and
enter
adc
sbb
enter
cmpl
cmp
jb
clc
fisubl
or
jno
and
mov
inc
and
movsb
jl
mov
sbb
jge
mov
mov
lea
or
and
add
jl
mov
and
js
mov
ret
imul
add
aam
pushf
testb
xor
lsl
add
jne
scas
add
sbb
fsubrl
or
testl
bnd
clc
dec
sbb
fmuls
push
xor
jle
js
jbe
aam
jle
sbb
and
add
mov
aaa
ret
xor
jle
mov
stc
sbb
push
inc
call
ss
in
repnz
in
mov
rol
stc
and
mov
adc
cmp
out
pop
jo
mov
loop
adc
add
test
repz
lret
popa
leave
nop
sarb
scas
lock
int
out
xchg
mov
and
sub
fdivrl
das
push
rol
sub
mov
hlt
mov
cli
adc
push
addr16
xchg
sbb
dec
pusha
js
mov
insb
pop
cmc
push
icebp
js
mov
jo
int
bound
inc
jle
fsubrs
push
mov
push
into
jg
xor
push
movsl
adc
dec
mov
jl
pop
push
dec
or
imul
into
push
push
ret
mov
lods
pop
sbb
mov
sbb
jnp
push
pop
jle
decl
push
mov
push
fmull
mov
adc
popa
sub
int
add
inc
inc
push
pop
push
pop
iret
fstpt
lds
aad
enter
xor
stc
rorl
enter
test
sub
ljmp
xchg
dec
push
pop
mov
test
outsl
adc
jb
mov
adc
push
test
cltd
lds
leave
popf
fcoms
jmp
cltd
imul
sbb
jle
sub
jb
add
aaa
cmp
mov
mov
mov
pushf
cli
xor
in
pushf
aaa
je
movsb
dec
dec
pop
push
sbbl
xlat
int
cmpsl
dec
sbb
add
mov
sbb
push
repnz
lds
lods
dec
xchg
int3
or
and
pop
mov
lcall
mov
bnd
add
out
repz
lret
or
and
mov
mov
and
rcrb
adc
push
and
mov
push
js
jb
insb
fisubs
enter
mov
enter
je
cmp
fldl
mov
pop
int3
data16
cmpsl
icebp
int3
or
enter
push
pusha
and
jge
gs
fsubs
inc
ret
xlat
mov
pop
xadd
insb
les
adc
lret
in
dec
mov
jge
shrb
pusha
add
fwait
jmp
and
add
push
fidivrl
les
inc
js
push
and
sub
or
out
fsubs
xchg
push
dec
pop
mov
add
push
fcomps
pop
push
adc
mov
faddl
pop
inc
and
nop
aas
sub
pop
call
rolb
sarb
pop
test
and
sti
in
or
mov
or
sbb
cmp
xor
das
jle
push
mov
adc
movsb
and
xchg
popa
daa
jns
push
ss
dec
aas
adc
push
mov
mov
sbb
pop
sbb
pop
adc
outsl
mov
dec
shrl
push
adc
xor
inc
adc
xchg
out
fcomps
hlt
fsubr
xchg
and
out
shl
inc
popa
das
incl
jne
sub
lock
mov
xor
mov
cltd
pop
inc
cmp
xchg
and
test
test
cmp
or
movb
adc
fwait
add
xor
add
fildl
dec
cltd
mov
add
inc
clc
shlb
add
lds
enter
sub
xor
inc
dec
pop
push
push
sbb
push
movsl
pusha
pop
sbb
dec
inc
adc
sahf
jns
decl
stc
ss
sub
cmp
fmuls
pop
mov
rorl
push
jecxz
pop
and
psubusb
mov
mov
inc
fmuls
fsubr
nop
sbb
pop
imul
cwtl
loope
cmp
push
push
inc
adc
shld
std
fsubrs
adc
fldcw
adc
jnp
dec
jg
clc
jg
gs
insl
mov
fcomps
orl
lahf
enter
rcll
push
or
and
jno
sub
xchg
dec
incb
push
add
inc
push
sub
int3
push
enter
sub
roll
pop
add
cmp
sub
push
adc
xlat
mov
add
xor
fidivl
xchg
fsubs
cmp
shrb
sbb
add
lea
roll
ss
pop
adc
xor
cmp
les
add
dec
rcr
cmc
imul
loopne
loope
jp
repnz
jnp
fildl
mov
push
inc
sti
push
loopne
xor
leave
fmuls
or
out
dec
add
das
lock
jo
ds
sbb
sub
fistpl
imul
mov
imul
cs
aad
lock
add
clc
sub
lods
push
lods
cmc
pop
adc
and
test
or
push
bound
dec
leave
rorl
test
xchg
jne
fsubs
mov
ret
or
sbb
lock
clc
pop
movsl
dec
sub
sbb
sub
pop
dec
lock
movsl
inc
fmuls
call
les
lea
ret
sbb
or
cld
hlt
ret
and
popa
test
sub
and
sbb
mov
pop
adc
push
inc
sub
daa
call
sti
je
loope
addr16
clc
inc
add
test
out
iret
inc
pop
out
sbb
clc
jmp
push
jne
and
stc
enter
not
inc
inc
les
add
sbb
enter
push
adc
sbb
xchg
adc
dec
loopne
push
xchg
push
dec
dec
xor
pop
bound
loopne
dec
push
and
add
xchg
mov
enter
loopne
call
fdiv
dec
fmuls
xchg
add
dec
loopne
in
jb
xchg
orb
and
dec
mov
pop
xor
loopne
push
xor
sub
pop
xor
insl
adc
push
inc
jmp
inc
and
sbb
dec
sub
adc
ret
and
mov
add
orl
adc
push
jb
pop
lds
lock
dec
push
loop
jg
push
xchg
mov
das
xchg
idivb
mov
adc
push
push
push
pop
mov
inc
adc
ret
sahf
enter
jae
jg
adc
dec
xor
mov
xchg
jo
stos
cmp
movsl
je
imul
cmp
cmpsl
fisttpl
repz
aam
cld
sub
sbb
add
mov
mov
push
sbb
js
insl
jle
test
cmp
push
sbb
pop
pop
dec
js
lcall
xor
or
les
insb
lods
int
xor
repz
add
add
pop
mov
push
sbbl
shll
xor
mov
test
inc
mov
and
inc
pushf
pop
cmp
sbb
sbb
jmp
aas
adc
push
push
out
lcall
sbb
ret
cmpsb
jg
out
and
ffreep
inc
ret
incb
es
test
jl
or
cs
in
pop
dec
movsb
sbb
enter
es
add
daa
setne
sbb
orl
adc
cmp
dec
imul
fwait
adc
imul
mov
push
push
add
jg
rolb
je
cltd
arpl
loopne
jle
sbb
inc
xor
sbb
neg
pop
push
mov
add
or
push
lock
cs
push
clc
insl
or
pop
or
jo
pusha
data16
pop
hlt
xchg
loopne
add
push
out
icebp
xchg
inc
cmp
stc
call
push
jecxz
add
loopne
cld
xor
add
push
insb
adc
or
popf
rol
loopne
cmp
adc
inc
mov
xor
push
or
push
jo
mov
mov
fwait
movq
and
lods
cmp
or
pop
leave
leave
dec
fcom
fcomp
mov
xor
mov
pusha
or
into
adc
push
hlt
pusha
mov
push
adc
nop
sbb
sarb
testl
in
pushf
inc
push
and
jo
sahf
or
add
int3
addr16
int3
xchg
in
lret
sub
hlt
outsb
inc
or
sbb
push
jo
inc
fsubr
inc
add
and
jbe
add
in
mov
fcompl
jecxz
and
jo
or
pop
inc
pop
pop
outsb
loop
or
out
das
iret
les
outsl
loopne
mov
cwtl
test
call
sub
cltd
or
movsb
pop
inc
idivb
andb
out
ljmp
push
or
cld
xchg
stos
jno
popa
arpl
jg
sub
jne
sbb
sbb
fldenv
or
push
jmp
mov
jmp
push
gs
cltd
movl
in
negl
sub
push
inc
xor
add
fnstcw
insb
in
int3
and
add
je
sbb
xlat
mov
mov
sbb
pop
mov
xor
push
scas
or
aaa
lea
insb
pop
int3
xchg
sahf
ja
enter
push
fadds
subb
add
cmpsb
push
mov
pop
out
add
fildl
jb
sbb
dec
repz
jecxz
inc
rol
ret
cmp
ret
xchg
hlt
sub
xchg
push
dec
push
dec
or
adc
mov
out
in
leave
or
cmp
inc
ret
cmpsl
out
cltd
js
cmovl
hlt
inc
add
push
add
sub
fs
inc
stos
daa
pop
cmp
clc
and
arpl
aas
pop
sbb
xor
xor
jnp
sbb
cmp
or
jle
pushl
add
pop
nop
jbe
mov
shll
out
pop
inc
push
repz
stos
shlb
fsubl
repnz
scas
xor
mov
je
cmp
xor
inc
or
rcll
cmpl
mov
shr
add
mov
pushf
outsl
lahf
out
addr16
sti
aas
je
adc
dec
or
pop
or
clc
mov
sbb
sub
mov
lret
and
call
xor
sbb
mov
pop
call
xor
xlat
repnz
js
mov
inc
mov
pop
fmull
pop
lock
mov
outsb
lods
add
ds
inc
push
cmp
or
inc
inc
xor
or
adcl
inc
jl
out
les
sbb
jg
pusha
or
mov
add
or
or
in
or
lret
ret
dec
xor
pop
xor
xchg
dec
mov
daa
add
test
inc
adc
and
sub
ror
xlat
dec
popa
inc
addr16
in
out
or
pop
cmp
cmp
add
movsl
daa
mov
fs
add
xor
movb
sarl
fimuls
or
pop
daa
jle
and
fnstenv
outsl
jle
adc
push
sbb
pusha
push
dec
pop
mov
add
fists
or
out
add
inc
roll
jbe
and
push
dec
dec
adc
aas
add
push
iret
aad
or
pushf
mov
sahf
pop
sbb
ljmp
test
cmp
or
and
sub
test
sub
push
push
xor
pop
push
int
jnp
xor
or
push
xchg
jbe
mov
jmp
adc
inc
cmp
cli
add
push
pop
hlt
je
inc
and
jne
call
sub
cmp
mov
pusha
cmpw
push
sbb
js
leave
fst
cmp
mov
sahf
fimuls
xor
adc
push
ds
cli
scas
sbb
bound
pop
adc
lock
or
lods
enter
push
orb
je
push
mov
mov
and
mov
dec
sbb
push
call
loopne
test
js
push
cwtl
addl
pop
adc
js
test
xchg
andb
test
sub
sbb
push
imul
insb
mov
push
dec
inc
or
imull
lods
jmp
fcmovb
xor
imul
outsb
xorb
dec
mov
test
adc
jecxz
cmpl
push
sahf
mov
mov
mov
dec
or
mov
adc
ja
or
mov
aam
inc
dec
or
je
xchg
pop
and
xchg
sarl
mov
and
mov
xchg
addr16
inc
dec
push
or
jecxz
pop
mov
mov
gs
fs
lock
or
jo
xlat
pop
xor
pop
xchg
aaa
inc
rolb
enter
mov
and
sbb
imul
dec
mov
ret
inc
lret
fistpll
push
cmp
cmp
adc
sub
pop
pop
pop
lahf
mov
mov
cmpsb
add
mov
push
loop
lret
pop
xor
jle
xor
fs
cmp
or
cli
jne
in
fs
mov
jl
add
js
insb
sarb
mov
xor
jb
inc
pop
mov
loopne
test
mov
fimull
cwtl
sbb
cld
adc
pusha
add
xchg
test
fdivrs
add
mov
xchg
or
mov
adc
xchg
jo
push
adc
jmp
push
dec
jmp
fsubs
and
imul
or
test
sarl
and
inc
jb
pop
cmp
pop
and
leave
cmp
inc
adc
movl
pop
push
cmp
mov
fisubrl
adc
out
adc
jnp
pop
call
push
das
cmp
sbb
mov
mov
icebp
xor
jno
and
xchg
add
adc
movsl
or
in
lahf
cmp
jmp
cmp
pop
push
fsubr
push
push
loope
jns
push
ss
hlt
jl
push
js
into
mov
stc
ds
mov
adc
addb
jno
dec
push
dec
pop
cmp
adc
ds
add
pop
mov
inc
cmpsb
push
push
fisubrs
push
lds
push
jge
enter
inc
adc
mov
and
or
pushf
shrb
frndint
cld
mov
insb
test
dec
ret
andb
adc
sub
in
fnsave
inc
inc
sub
int
inc
sbb
sbb
cs
mov
rolb
lret
inc
jnp
call
stc
enter
push
sbb
add
cmp
jle
push
inc
in
push
xor
mov
and
xchg
adc
dec
decl
ret
inc
dec
jne
mov
inc
cmp
jg
jne
pusha
adc
adc
sub
inc
xor
dec
and
jmp
add
mov
dec
imul
pop
daa
dec
cmp
add
mov
push
or
push
out
lock
sbb
push
sti
int
jmp
pushl
dec
inc
add
adc
fbstp
lock
les
stc
out
callw
pop
push
add
lods
dec
jg
sub
dec
aad
pop
sub
xor
lcall
sbb
fidivrl
jge
mov
fucomi
int3
jne
or
sbbl
add
inc
int
andl
push
hlt
outsl
pop
add
in
mov
add
addl
aam
cmp
clc
cmc
or
mov
into
fsubs
es
mov
lea
and
mov
imul
test
cmpsl
and
test
push
add
or
add
mov
mov
and
sbb
in
push
pop
dec
xor
fsub
fs
sbb
pop
xchg
push
add
bound
sbb
shlb
out
inc
int
in
ja
mov
pop
out
xlat
lret
push
mov
pop
pop
es
push
cmp
cmpsb
dec
ds
aam
stos
rcll
int3
add
in
xlat
fildl
lcall
hlt
cmp
xor
mov
inc
jge
pop
mov
inc
sbb
rolb
jmp
insb
hlt
xor
inc
rclb
fwait
fwait
shlb
inc
or
pminub
ficoml
jmp
push
push
inc
imul
add
push
in
xor
fs
xchg
sub
inc
fisttpl
pop
test
sub
mov
mov
pop
aad
dec
sub
insl
xor
popa
xor
rclb
aam
and
cmpsb
rcrl
push
int3
push
mov
mov
xchg
pop
lds
int3
xor
add
add
pop
stos
add
xor
outsb
lret
pusha
push
push
push
sub
inc
imul
jo
xchg
mov
xor
test
sub
ja
sbb
fsubrl
jmp
pop
mov
dec
add
in
outsb
loopne
sub
in
inc
mov
and
and
inc
or
pop
fcompl
imul
lods
ficompl
ds
inc
cmpb
cmp
inc
lock
jno
or
wbinvd
sub
and
movb
xchg
inc
scas
bnd
and
pop
add
sbb
jecxz
sbb
xor
jecxz
jmp
sub
jl
inc
movsb
mov
cmp
sbb
je
push
inc
movb
cltd
inc
rolb
jmp
mov
cmp
inc
sbbl
in
ja
sbb
cmpb
movb
adc
lea
jbe
popa
pop
jne
loope
in
fcompl
add
adc
mov
jg
dec
and
dec
inc
jne
or
loope
cmp
insb
dec
sub
inc
cmp
mov
push
jb
sub
pop
xorb
into
mov
pop
cmp
test
xchg
jge
jg
add
les
mov
pop
mov
lods
lret
lds
test
or
inc
inc
mov
insl
insb
or
cld
call
inc
loope
mov
loopne
je
jo
adc
ret
nop
imul
adc
or
sbb
adc
lods
jae
mov
and
xor
or
inc
stc
dec
into
or
daa
pop
push
outsb
push
insb
loopne
push
mov
test
fsubrs
xchg
push
push
xchg
xchg
sbb
dec
sbb
mov
pop
jge
mov
ret
int3
xor
adc
sub
cwtl
inc
push
add
pusha
xchg
negl
pop
hlt
xchg
out
xor
lock
or
lret
jecxz
nop
pop
pop
js
jmp
daa
test
xchg
and
xorl
mov
push
sub
add
ljmp
js
push
inc
imul
scas
outsb
pcmpeqb
or
and
sarb
dec
je
cld
mov
aad
pop
sub
loope
fdivp
inc
fs
js
aam
popf
mov
jmp
out
mov
add
daa
pop
ja
in
test
stc
mov
add
mov
and
add
rorb
dec
popa
xchg
scas
adc
ljmp
dec
enter
dec
mov
mov
mov
mov
mov
push
sbb
add
bound
dec
cmp
mov
addb
inc
jmp
icebp
cld
mov
or
ret
lods
mov
or
dec
or
adc
cmpsl
loopne
add
shrb
loopne
jno
adc
jno
ljmp
aas
mov
das
jno
in
test
or
sbb
in
dec
sbb
dec
lea
adc
lret
dec
push
sarb
out
ss
call
sbb
inc
hlt
mov
add
mov
or
push
clc
mov
dec
dec
loope
call
push
xor
incb
loopne
pop
sete
cmpsl
add
adc
and
aam
repnz
dec
loopne
mov
repz
fidivrl
data16
xor
push
pop
push
add
mov
sbbb
sub
pop
push
std
and
jae
daa
sbb
and
dec
bound
gs
jb
jo
add
dec
xor
ss
inc
ljmp
pop
js
icebp
pusha
pop
adc
mov
je
shlb
push
dec
dec
test
call
les
mov
sbb
repz
cmp
cmp
ss
popf
add
push
and
out
or
je
cmp
dec
loop
repz
cmp
add
rcll
hlt
pop
repnz
cltd
mov
popa
sbb
mov
loop
or
add
pop
or
pop
xor
sub
push
add
sub
bnd
adc
xor
outsb
cld
movzwl
fwait
push
cmpsb
cli
mov
cmc
xchg
ss
push
cli
xchg
mov
mov
imul
add
and
fs
jge
lock
popa
mov
pop
xor
shrl
mov
popa
cmp
inc
lods
cs
jp
sub
mov
add
push
jo
dec
sbb
je
loopne
pop
mov
aad
adc
rolb
inc
push
add
orb
mov
lea
mov
shlb
push
hlt
push
sub
in
and
cmp
mov
jne
jo
fcomi
mov
push
cli
bound
adc
scas
mov
add
and
ja
adc
jno
inc
pusha
aaa
lea
test
fbld
je
pop
sub
arpl
push
or
popa
loop
mov
aad
inc
xor
ret
push
outsl
loop
xor
jae
jnp
hlt
inc
js
or
xor
dec
insb
dec
mov
push
or
daa
loop
xchg
push
sub
mov
push
dec
gs
adc
xchg
divl
and
pusha
mov
ss
je
xor
nop
shlb
dec
fcmovnu
aad
lahf
ss
ret
mov
add
test
mov
aam
clc
pop
fisttpll
add
cmpsl
imul
imul
lods
lahf
dec
sub
push
xor
or
xor
sbb
sbb
mov
adc
push
lahf
rclb
add
jb
jns
add
push
add
inc
inc
add
xor
and
inc
cmp
insl
movsl
cmpsb
fidivl
or
sub
jecxz
mov
add
sbb
sbb
sub
test
cmp
cmp
sahf
pmaxsw
sahf
popf
sub
xor
push
pop
jo
pop
filds
xchg
iret
mov
addr16
std
ds
push
inc
mov
and
ja
jo
loope
fildll
mov
sbb
adc
pop
adc
mov
mov
inc
xor
pop
aam
jp
out
jae
lock
dec
shll
sbb
cmpb
clc
mov
xchg
mov
frstor
lock
or
sub
sahf
pop
and
sub
cs
adc
xor
js
js
xchg
lahf
inc
jo
inc
or
dec
jge
outsl
std
lods
test
dec
mov
adc
pop
js
dec
inc
enter
dec
inc
dec
sbb
jl
js
addr16
cmp
mov
rorb
aas
cld
inc
bound
mov
adcb
scas
jnp
cli
inc
arpl
xchg
test
je
push
loopne
adc
and
mov
sbb
gs
or
adc
xor
test
das
adc
pop
push
xor
fcompl
xchg
mov
aaa
add
fldenv
testl
clc
push
clc
jmp
pop
imul
adc
inc
outsl
jge
stos
push
dec
xlat
xor
xchg
jg
lea
clc
cmp
divl
pop
hlt
jp
mov
mov
das
pop
hlt
xchg
mov
and
xor
pop
or
dec
or
mov
sbb
popa
add
movsb
nop
or
and
mov
xchg
xor
test
setnp
mov
and
imul
orb
add
adc
push
push
js
jns
and
imul
inc
or
add
stos
icebp
adc
fisubrs
push
sbb
decb
jmp
jge
cs
lock
ja
jmp
pop
cmpb
xchg
and
into
mov
cmp
jne
decw
jnp
es
lret
jp
mov
imul
or
sbb
and
test
stos
or
andl
sbb
adc
in
push
rclb
sbb
in
aaa
in
mov
cmp
fsubrs
jg
add
js
cmp
mov
imul
cmp
xor
dec
xchg
inc
repnz
jo
mov
test
addr16
push
andl
jo
add
dec
or
call
movsbl
sub
imul
enter
mov
inc
cli
and
movb
gs
fs
inc
leave
sahf
or
lock
out
sbb
mov
cmpsl
adcb
out
shrb
pop
push
sbb
insb
lahf
mov
push
sahf
je
add
push
cmpsb
cmp
test
push
adc
push
cmp
xchg
movsb
fstps
dec
fnsave
push
outsb
inc
cs
xchg
je
test
sub
cmp
cmovno
inc
push
xchg
lea
push
xlat
jo
push
in
mov
inc
lea
jne
arpl
cmp
xchg
or
jl
and
xor
pop
lods
rorl
adc
out
imul
ret
bound
nop
ss
decb
cmp
jne
xor
rorb
sbb
shlb
scas
js
push
cmpl
add
insb
outsl
xor
lahf
lcall
adc
adc
xchg
addr16
lock
jbe
push
sbb
jg
sub
sub
fistl
or
add
sti
jle
dec
daa
sub
inc
jae
sub
sub
je
inc
pop
add
xchg
and
mov
sub
es
mov
add
sub
addr16
enter
inc
xor
in
mov
push
pop
loop
testb
add
test
and
jno
rolb
adc
push
dec
js
hlt
pop
sbb
sub
push
push
adc
add
push
and
and
push
repz
and
cmp
popa
mov
pop
sub
or
sbb
sbb
mov
ret
xchg
push
pusha
sar
mov
hlt
lea
stos
push
loopne
inc
or
sub
shl
and
add
pop
xor
nop
inc
or
mov
ret
jge
or
add
insb
rorb
mov
push
andb
pop
testb
mov
adc
push
or
xbegin
xor
clc
xchg
push
bnd
xor
or
ret
cmpsl
movsl
xlat
sub
pop
xchg
xchg
in
and
movsb
rcrb
adc
call
or
out
adc
push
push
cs
out
pop
sub
inc
in
pusha
or
push
lea
xchg
jbe
out
sbb
lods
or
xorb
enter
fiaddl
add
adc
pop
leave
xchg
mov
jp
add
ret
test
lret
dec
sbb
dec
sbb
push
inc
out
sub
pop
inc
fadds
std
cmp
ret
xchg
cmp
and
loope
pop
leave
and
mov
lret
addr16
mov
dec
mov
and
mov
lock
adc
test
ds
aad
sbb
jmp
push
lds
add
inc
or
iret
and
into
test
popa
out
cs
sub
push
push
push
ljmp
pusha
sbb
mov
push
jbe
in
sub
aaa
add
movl
push
inc
pop
lcall
push
cmp
bound
xlat
xor
data16
inc
popa
add
int3
cld
lahf
push
sbb
popa
je
fists
adc
add
pusha
push
mov
je
leave
or
push
lahf
push
sbb
insb
fbld
lock
cmp
pop
xor
cld
push
cmp
adc
mov
sub
stc
push
jle
cltd
jns
cmpb
shlb
adc
or
inc
je
je
mov
pop
dec
push
ret
sbb
lahf
ret
int3
inc
inc
jge
or
jbe
or
sbb
cmp
inc
xor
je
cmp
xor
push
sub
sahf
lret
gs
and
mov
push
repnz
in
pop
and
inc
enter
sbb
shl
or
sahf
mov
dec
xlat
mov
push
movsl
imul
xor
and
pop
aad
in
xchg
inc
lahf
inc
out
sbbl
popf
push
add
push
sbb
ret
fs
nop
ret
add
jmp
add
inc
mov
push
dec
xchg
push
pop
xor
pop
arpl
pop
adc
sub
or
cmp
xor
xlat
sar
inc
adc
xor
rcl
mov
push
je
add
sbb
pop
jb
test
add
jmp
adc
mov
rolb
mov
xchg
sub
nop
loop
inc
mov
cmp
inc
xor
jno
jl
fcoms
test
sbb
or
dec
push
sub
insl
add
lods
xor
out
cmp
setge
add
movsl
shl
push
jb
mov
sub
xor
movsb
add
addb
pop
push
lret
orb
xlat
dec
bound
test
lahf
sbb
jmp
sbb
pop
inc
jle
ret
cld
xchg
xor
jle
fsubl
lock
arpl
imul
lahf
cmp
jl
mov
fnstsw
adc
and
push
jne
push
cmp
cwtl
dec
stos
add
or
inc
loopne
mov
lret
setg
cwtl
in
sbb
shlb
in
clc
sbb
mov
xor
clc
loope
rorb
cmp
xor
sbb
dec
and
push
add
in
sahf
mov
dec
or
out
xor
fisubl
add
push
hlt
push
inc
iret
repz
lock
mov
int3
lcall
loopne
xchg
mov
sahf
out
jl
mov
xorb
jnp
cs
push
sub
jle
out
out
les
cld
shrb
cmp
repz
dec
mov
out
adc
mov
xadd
imul
adc
and
and
insb
cmp
xchg
mov
add
scas
jg
xchg
or
inc
adc
aaa
pop
push
push
add
jge
add
lods
shl
add
ret
add
pop
das
mov
jnp
push
xchg
or
insb
push
insb
push
add
mov
add
fisttpll
gs
xor
inc
mov
sub
sbb
mov
push
sbb
out
dec
fistl
test
push
movsb
je
fdivs
push
cmp
push
les
int3
or
ret
fnstsw
pop
and
iret
inc
ljmp
inc
xchg
lahf
out
pop
mov
inc
sub
and
cs
mov
cmp
push
in
outsb
inc
or
rcr
pop
cmp
or
push
lock
test
lock
repnz
sbb
dec
loopne
adc
mov
cmp
sub
lea
jns
push
pop
test
mov
cmp
js
cmp
dec
mov
mov
stos
mov
mov
dec
leave
in
inc
mov
add
js
notl
push
cmp
inc
mulb
js
jl
pusha
testb
inc
je
xchg
cmp
in
rcl
adc
rorb
mov
mov
je,pt
mov
pop
mov
add
stos
jl
inc
test
push
push
fisttpll
or
and
test
bound
push
push
fwait
nop
pop
roll
nop
test
mov
lods
jg
sub
or
inc
jle
pop
lock
in
rorl
pop
cmp
adc
test
roll
nop
dec
nop
xchg
mov
enter
in
roll
repz
pop
stc
and
pusha
repz
inc
adc
fldl
jecxz
popf
nop
test
inc
mov
loope
lret
in
test
or
sub
insl
bound
arpl
call
adc
mov
add
insl
popa
pop
adc
mov
inc
adc
lcall
cmp
aas
fistps
or
movsl
add
mov
testb
push
or
or
adc
or
xlat
into
xchg
ja
sub
xor
fs
mov
sarl
scas
or
fcoms
loopne
rolb
cmp
push
dec
stc
sbb
imul
imul
test
xchg
sub
sub
and
or
push
lds
xchg
mov
clc
or
add
cmp
das
int3
add
cltd
imul
jmp
addb
or
dec
insb
mov
cwtl
pop
andps
rcl
aam
mov
or
pop
dec
shlb
pop
adc
aaa
enter
add
inc
fcoms
outsl
nop
out
enter
loope
dec
dec
shlb
xor
sbb
push
pop
inc
inc
adc
jl
and
and
pushf
add
fnsave
js
inc
or
divl
inc
xchg
dec
cmp
lea
add
and
add
adc
faddl
outsb
jbe
xchg
cmp
jl
push
push
test
dec
xchg
js
push
inc
mov
inc
clc
push
jo
cmp
ret
sar
push
arpl
xchg
movl
and
ret
in
into
arpl
cmp
cmp
cmp
add
add
nop
call
inc
pop
insb
bound
pop
addb
das
and
xor
push
popa
fs
out
pop
and
je
leave
push
ret
mov
xchg
sbb
add
lock
xchg
sbb
push
popa
addl
sub
xchg
add
and
pop
sbb
lods
add
pop
das
lods
mov
xor
sysret
add
rclb
add
lds
adc
enter
pop
pusha
xchg
or
ret
push
push
inc
enter
enter
mov
js
rcrb
mul
outsl
adc
inc
nop
adc
xchg
cltd
insl
add
jno
add
adcb
jp
add
push
ja
add
push
or
xchg
test
inc
adc
rolb
or
cmp
pop
sbb
psubusb
andb
mov
lcall
dec
dec
and
or
or
fcomps
lods
push
popf
into
orb
rorb
popa
addr16
bnd
gs
lcall
xchg
imul
jl
pop
pop
mov
fwait
iret
cmp
stos
out
stos
sbb
fsubrl
push
outsb
leave
jmp
inc
inc
lea
aaa
js
gs
push
addr16
pop
in
sub
jecxz
repz
jmp
flds
xchg
lods
paddusb
add
mov
scas
orl
adc
fdiv
and
jne
dec
loope
xor
adc
mov
test
push
adc
pop
add
sbb
add
sbb
xchg
popf
pop
lret
push
das
sbb
jo
int3
bound
xchg
fstl
inc
imul
fists
fs
adc
gs
add
mov
and
adc
js
push
xor
push
push
sahf
addr16
shlb
gs
flds
or
add
lret
adc
push
inc
jno
in
subl
push
inc
cmp
js
jo
cmc
ret
push
mov
repz
sbb
pusha
or
lods
jmp
mov
mov
mov
add
adc
mov
fsubl
nop
push
aam
inc
push
or
inc
inc
scas
dec
inc
es
pop
mov
mov
test
pop
add
in
fisttps
pop
add
add
add
inc
add
add
dec
add
add
add
mov
ljmp
testb
xor
mov
mov
mov
mov
mov
mov
mov
push
push
cmp
cmp
inc
in
in
jmp
ljmp
call
jmp
jmp
jmp
jmp
jmp
jmp
fdivrp
fdivr
decl
mov
call
call
call
call
call
call
loope
rol
iret
mov
dec
dec
dec
dec
adc
leave
dec
out
xor
lcall
add
stc
mov
rcrb
push
js
pop
in
repz
add
and
mov
fwait
lret
movsb
mov
sub
pop
fidivrs
fcomi
cld
push
in
or
adc
test
shl
out
ss
int3
cmp
pop
div
cmp
je
push
sbb
mov
push
ret
jnp
aam
add
dec
pop
add
mov
icebp
push
fs
push
push
push
dec
repz
lock
shll
cld
cwtl
push
mov
sub
adc
fsubs
js
ds
push
push
lock
fimull
push
lahf
mov
cld
ljmp
jge
sti
ss
out
sbb
push
cmp
dec
add
xor
mov
jg
sbb
mov
cmp
or
in
adc
push
addb
add
lods
and
inc
aaa
sbb
pop
inc
push
arpl
mov
inc
je
mov
cmp
add
repnz
adc
dec
add
sub
add
mov
add
in
or
add
pop
rolb
clc
xchg
inc
outsb
lcall
or
imul
jo
pop
xor
pop
mov
insl
lahf
and
js
or
mov
xor
adc
dec
rolb
mov
adc
sub
push
movsb
push
mov
and
mov
inc
clc
adc
inc
sbb
les
mov
daa
fsubs
dec
jge
call
movsb
outsl
lock
jecxz
sbb
push
jp
adc
dec
sub
cmpsl
add
std
sbb
or
or
dec
dec
mov
fisttpl
pop
pusha
mov
shlb
inc
mov
pop
add
xchg
nop
outsl
roll
faddl
push
sbb
sbb
jecxz
pop
in
mov
inc
mov
iret
adc
sub
add
loop
in
add
adc
jno
push
js
and
sbb
pop
pop
test
rorb
xorb
push
adc
nop
mov
jnp
cmpsb
inc
sbb
or
iret
stos
inc
dec
push
lahf
add
addl
inc
dec
push
dec
push
dec
cmp
inc
mov
add
mov
ret
imul
lldt
add
sbb
ljmp
sub
lods
es
mov
xchg
add
add
add
add
jbe
jg
sub
mov
add
jp
mov
add
add
sar
or
add
mov
mov
call
push
or
mov
mov
mov
mov
mov
mov
mov
mov
ljmp
xor
cs
mov
mov
mov
add
lock
clc
incl
mov
xor
cmp
mov
add
das
dec
scas
dec
in
decl
ret
outsb
movsb
or
mov
mov
jg
es
mov
test
fistps
push
mov
stc
mov
mov
mov
mov
mov
mov
fcmovbe
sub
and
jp
push
mov
repz
xor
js
sarl
rclb
je
enter
out
dec
sbb
push
lock
jge
int
sarb
dec
pop
hlt
adc
cmp
push
push
push
int3
call
push
xor
pop
mov
out
hlt
push
ds
sarl
push
cmp
jp
iret
shrl
lods
ror
int
out
repz
pop
fiadds
mov
negl
push
or
mov
mov
fsubrl
test
in
push
cmp
jge
hlt
cld
cmp
popa
push
jo
mov
mov
dec
jo
insb
xor
pushw
push
push
out
out
insb
inc
push
push
shlb
imull
je
je
push
sahf
push
mov
mov
xor
and
call
test
inc
outsb
jbe
inc
jmp
cmpsb
sbb
push
push
or
add
outsb
cmp
gs
loopne
and
add
insb
adc
or
outsb
scas
pop
and
lock
bswap
stos
imull
pop
push
fs
xchg
mov
mov
insb
lahf
pop
test
jl
jge
adc
add
jbe
movd
push
stc
iret
pop
sub
inc
in
stos
mov
lods
enter
xor
push
mov
pop
mov
and
mov
fwait
loope
pop
mov
mov
push
lds
sbb
xchg
nop
pop
pop
sub
cmp
pushf
sbb
scas
repnz
scas
pusha
mov
add
jg
in
adc
cmpb
push
add
insb
jl
movsb
clc
es
add
push
iret
adc
in
lret
xorl
mov
mov
icebp
sbb
mul
loop
outsl
inc
imul
shrl
adcl
lcall
in
clc
and
fmull
cld
sub
int3
xchg
inc
decl
adc
orb
and
mov
xor
pushf
jl
in
push
jl
adc
sub
nop
push
push
push
test
iret
sarl
std
add
ds
repz
inc
dec
pop
push
andl
ret
add
pop
xor
lock
cmp
jl
push
lds
lahf
nop
xchg
dec
fisubl
mov
xchg
jo
fwait
push
call
pushf
mov
in
lahf
es
jl
mov
push
adc
mov
je
addr16
lods
xchg
sub
mov
loopne
mov
stos
mov
adc
test
fs
dec
or
jmp
dec
aas
movb
pop
lea
pop
adc
shlb
push
movsl
and
mov
cmp
xor
xchg
data16
xor
dec
push
test
pusha
je
push
and
pop
dec
mov
out
and
js
and
xchg
dec
push
dec
jge
lea
inc
inc
xchg
dec
int
xor
lods
movsl
jl
movl
xchg
sub
mov
xor
push
push
push
idivl
rol
xor
call
adc
push
mov
pop
mov
fistps
test
or
dec
insb
ret
filds
cmp
adc
sbb
add
jno
jp
xlat
mov
push
leave
ja
add
or
add
push
dec
jle
iret
sub
xorl
sbb
adc
jno
imul
loop
nop
and
and
pop
jb
imul
popa
insl
or
jnp
fisubrl
push
mov
pop
push
push
inc
push
inc
cs
pop
daa
push
jo
daa
or
or
add
insb
popa
clts
add
jbe
adcb
sbb
xchg
daa
dec
push
jo
imul
sbb
mov
xor
ficoms
push
movl
push
add
sbb
das
cmp
sbb
mov
adc
add
adc
rcl
dec
cmpsl
pop
nop
ret
add
or
or
jmp
inc
lret
dec
fiaddl
outsb
jne
and
adc
sub
lea
push
mov
clc
lret
mov
jnp
add
push
cmovo
pushf
fsubs
enter
xchg
movb
push
dec
cmpsl
xchg
adc
roll
rclb
mov
fwait
adc
dec
mov
scas
cmp
push
mov
sub
and
dec
insb
ljmp
xlat
inc
call
pop
xor
add
inc
sbb
mov
mov
adc
add
pushf
daa
inc
mov
xchg
orb
jbe
or
arpl
call
sub
add
push
or
test
in
mov
jb
repz
lret
push
rorb
or
popa
repnz
cwtl
fs
push
xchg
dec
fistpl
lock
jmp
ljmp
mov
pop
js
add
xchg
mov
dec
add
std
leave
pop
inc
aam
adc
mov
jmp
in
or
enter
adc
pushf
rcll
adc
xchg
sbb
sbb
sbb
push
cld
add
cmpsb
add
or
jne
fistps
xor
and
cmp
cmp
jbe
inc
add
cmp
xchg
cmpsl
hlt
jnp
cmp
cmp
fdivs
and
cmpsb
sbb
or
cmpsb
imul
cmpsb
imul
cmpsb
imul
clc
xorl
push
mov
push
push
push
jg
int3
mov
dec
pop
pop
ret
xchg
mov
push
scas
fwait
dec
popa
jae
add
or
aam
sub
je
dec
pop
push
sub
std
dec
je
and
push
xchg
mov
cmpsl
or
or
rcrl
mov
in
xlat
jmp
push
mov
sbb
in
setbe
adc
add
das
pop
jp
sti
pop
fs
or
add
jne
mov
cmp
add
or
inc
inc
adc
rcrl
cmp
xor
mov
push
movsl
or
lret
aam
xor
xor
inc
sbb
divb
enter
hlt
jmp
or
incl
lahf
or
xor
add
fsub
stc
fsubrs
enter
les
inc
dec
push
test
inc
pop
cmpsl
aam
push
or
rclb
inc
inc
testl
jle
enter
inc
add
loop
mov
sbbl
add
popf
and
js
fisttps
dec
iret
jmp
sbb
inc
inc
mov
jle
and
loop
rorb
int
lret
pop
and
xchg
addr16
jl
mov
popf
pop
pop
inc
sub
cmp
inc
cmp
and
jecxz
jae
mov
sbb
fwait
test
add
inc
sub
dec
pusha
or
xchg
lods
pushf
stos
pop
rorb
jg
mov
pusha
mov
fisubs
stos
jns
je
repnz
lea
xor
adc
sbb
fs
test
sbb
or
in
lds
inc
sbb
pop
push
lock
enter
lea
add
es
cmp
mov
jae
push
pop
add
push
push
push
jle
push
dec
push
xor
pop
mov
pop
fildl
push
icebp
dec
adc
dec
dec
sub
in
jle
or
rorb
inc
add
push
ret
fimuls
test
cmp
push
push
dec
xchg
add
sbb
out
pop
rcrl
fs
lahf
and
sti
cmp
roll
and
lods
inc
and
fidivl
add
push
enter
ja
sbb
mov
or
movb
mov
pop
sbb
xor
mov
leave
cli
sub
dec
xchg
mov
mov
add
in
push
sarl
xchg
jo
lret
pop
in
xor
mov
call
jne
shl
nop
adcb
push
ljmp
mov
inc
or
jge
cmp
inc
loope
mov
mov
cwtl
or
jmp
push
testb
scas
rol
add
cwtl
mov
dec
fsincos
inc
mov
inc
mov
pop
lcall
cmp
sbb
adc
pushf
les
fimull
fwait
mov
sub
rolb
push
adc
and
cmp
sbb
fcmovbe
outsb
sbb
cmp
jecxz
cs
push
or
and
pop
pop
inc
sarl
mov
xchg
fadds
negl
push
push
mov
cmp
jne
cli
and
test
adc
xlat
xor
pop
add
mull
outsl
hlt
and
sub
and
jecxz
in
mov
add
cmpb
ja
lret
je
adcb
push
jno
bound
add
pop
jbe
dec
pop
push
fidivrs
sbb
fadds
pop
mov
ret
nop
cmpsb
push
and
add
and
adc
or
or
pop
jmp
inc
and
imul
or
in
xchg
add
adc
jl
mov
mov
jle
adc
cmp
push
or
push
dec
mov
inc
andl
inc
mulb
je
and
pop
and
loope
or
mov
rcl
and
add
js
rolb
cmp
sbb
cmp
ret
xor
and
ret
sub
or
je
test
rorl
jmpw
push
push
push
sbb
movsb
setbe
dec
push
push
mov
cmpl
dec
inc
adc
inc
push
fucomip
jp
xor
lds
dec
and
popa
sub
push
mov
ret
clc
jmp
aaa
mov
adc
jmp
push
js
leave
sub
cmp
imul
gs
mov
add
cmp
call
mov
add
pop
adc
add
fcomi
stos
outsb
les
and
add
mov
dec
dec
add
dec
das
add
xchg
out
std
xorl
sbb
in
dec
jbe
popa
insl
inc
mov
and
adc
fsubl
add
inc
std
ds
idivb
mov
jl
rclb
sbb
push
pop
or
mov
or
les
repz
jnp
mov
fcmovnbe
sub
inc
clc
push
sub
in
inc
jo
sbb
push
insb
mov
jp
jne
push
lock
add
leave
ret
adc
sbb
lock
lock
negl
or
xlat
mov
lcall
movb
mov
jmp
xchg
push
sbb
add
fimull
mov
mov
out
or
cmp
mov
lcall
aad
fwait
pushf
roll
inc
pop
mov
es
lods
sarl
js
fs
push
sbb
sbb
mov
or
cmp
ret
movsl
outsb
pop
pushf
bound
jne
pop
nop
nop
std
testb
jne
pop
je
ja
mov
adc
adc
sbb
sub
pop
or
sahf
add
jmp
cmpsb
adc
ja
xor
in
cmp
pop
pop
lods
movswl
std
sbb
push
mov
sbb
dec
add
adcb
inc
xchg
cli
out
inc
shl
jmp
movsl
lods
mov
mov
hlt
daa
mov
fcoms
inc
pop
sub
loope
or
sahf
pop
cmp
adc
dec
add
or
movsl
push
repnz
insb
xor
lret
test
andl
adc
adc
jno
adc
fs
xor
xor
dec
lea
enter
ljmp
jnp
adc
aaa
sub
testl
sahf
push
push
and
sbb
lea
mov
mov
sub
sbb
inc
sbb
adc
jne
mov
bound
icebp
sbb
fwait
jmp
jl
and
scas
push
add
jnp
mov
and
and
jns
sub
imul
pop
pop
mov
fisubrs
xor
adc
aam
push
adc
movsb
lcall
js
arpl
fidivs
jmp
sub
add
out
mov
mov
mov
subb
mov
push
xchg
pop
fnstsw
popa
jns
mov
jg
adc
stc
xchg
dec
leave
mov
sbb
in
mov
inc
xchg
inc
fsubr
aad
loopne
loop
inc
and
mov
int3
and
daa
add
and
lea
mov
cwtl
popf
add
xchg
jecxz
mov
lea
mov
add
outsl
sbb
inc
sbb
push
frstor
and
or
out
icebp
or
lret
rclb
sub
mov
test
adc
fadds
shlb
and
bound
imul
fwait
ja
js
add
dec
add
pop
jno
xor
sbb
or
pop
test
xor
gs
shlb
mov
add
movsl
cmp
mov
insl
jne
sbb
popl
and
faddp
sbb
or
js
mov
and
mov
xchg
mov
adc
add
add
lock
sub
fwait
enter
fwait
cmc
int3
or
push
jp
das
addl
add
pop
decl
aad
pusha
fwait
pop
mov
out
xor
roll
inc
test
movl
ds
adc
mov
out
mov
jmp
and
clc
sbb
push
or
add
xorb
adc
push
and
sub
arpl
movsb
or
je
xchg
fwait
and
dec
jecxz
rclb
js
jecxz
movb
mov
dec
sbb
xchg
or
jecxz
push
adc
dec
cmp
mov
or
and
loope
pop
sbb
sbb
mov
xor
adc
dec
decb
repz
clc
notb
sub
shll
jns
ret
or
xchg
push
cltd
test
ret
in
sahf
sub
mov
cmpsb
xchg
add
dec
xlat
cmp
cli
xchg
icebp
cmp
leave
xorb
loopne
mov
notl
xchg
jp
and
dec
out
adc
mov
pushl
pop
repnz
fbld
sub
cwtl
ja
adc
loopne
jns
mov
or
push
push
jecxz
outsl
daa
and
pop
stc
popa
or
sbb
cwtl
adc
mov
or
out
pop
xchg
loopnew
inc
xchg
mov
pushf
jno
fmull
jge
mov
lret
sbb
enter
movsb
movb
add
adc
push
add
sub
add
xlat
or
das
or
mov
notw
sub
push
or
and
lock
imul
into
inc
sahf
push
lea
subl
std
lock
lock
jnp
xor
rol
add
stc
dec
add
sbb
ret
adc
jo
mov
cmp
adc
sub
clc
outsb
iret
inc
add
in
inc
insl
hlt
imul
dec
iret
inc
jne
push
ja
xchg
add
mov
xor
jmp
test
outsb
inc
sub
or
sub
lock
jl
mov
pusha
adcb
dec
push
push
test
or
faddl
jns
jge
shlb
xchg
xchg
add
adc
cwtl
aaa
add
jmp
fisttpl
mov
inc
pop
push
push
pusha
mov
hlt
pusha
sub
sbb
or
jae
movsb
inc
popa
sarb
mov
pop
pop
adc
inc
add
fidivs
add
xchg
pop
or
andl
jg
lahf
mov
dec
push
testl
mov
shll
mov
insb
or
or
add
es
adc
add
pop
pop
add
js
add
sub
sti
outsl
mov
add
jmp
cmp
je
mov
fwait
xor
jbe
push
adc
pushf
jge
cmp
je
or
adc
imul
call
mov
and
je
cmp
or
orl
insb
lahf
lea
cmp
sbb
adc
mov
adc
add
dec
dec
clc
dec
jbe
dec
rorb
mov
and
scas
mov
push
cmp
sub
inc
aam
ljmp
xor
inc
stc
dec
dec
sub
adc
and
and
push
enter
add
adc
and
repnz
xchg
in
add
mov
cmp
and
push
sub
and
aam
pop
roll
inc
jbe
adc
test
jno
cld
push
xor
xchg
ret
outsl
lcallw
cmc
fmull
pop
orl
fisttpl
lods
fwait
les
popl
in
inc
and
or
pop
jnp
mov
and
lea
mov
les
or
cmpb
adc
pop
add
push
call
adc
ss
pop
add
lcall
lods
adc
sbb
ja
or
add
add
mov
je
sti
ss
addb
lods
mov
pop
add
fcompl
cs
xchg
mov
pop
decl
rcl
aas
mov
pushl
push
jb
lcall
xchg
sbb
addb
push
cmp
rcrb
fs
cmp
and
push
push
stos
adc
jb
cli
push
clc
cmp
mov
xchg
mov
jae
je
rol
je
sbb
and
xchg
add
push
aaa
sbb
inc
jo
inc
inc
push
add
pop
pop
pop
cmp
out
popf
pusha
adc
push
pop
add
jle
jmp
fisttpl
ds
add
stos
mov
xlat
lret
jg
sub
mov
popa
test
jo
inc
dec
jae
inc
inc
mov
stos
sub
add
sub
add
dec
mov
test
mov
add
push
aam
int3
int3
minps
or
insb
mov
in
je
push
push
dec
mov
cwtl
push
lret
nop
pop
dec
imul
jp
out
adc
das
xor
xchg
insb
inc
adc
jecxz
out
mov
inc
add
enter
xlat
std
dec
clc
test
aad
lock
imul
adc
push
push
mov
cmp
pop
sbb
imulb
cmp
sbb
fiadds
add
nop
pop
insb
ret
mov
cmp
sub
imul
pop
popa
and
into
add
or
flds
adc
orb
cmp
jne
adc
inc
jne
sub
dec
jne
mov
push
and
outsb
testl
stos
add
int3
loopne
and
cmp
outsl
jg
outsl
mov
adc
mov
mov
dec
push
xchg
test
test
movsb
fsts
insb
insb
je
inc
orb
mov
pop
loop
push
es
dec
enter
and
mov
sub
adcb
push
adc
adc
adc
and
add
inc
popa
and
js
push
clc
popa
dec
sub
inc
fcoml
mov
xchg
movsl
xchg
loop
xor
test
rcll
rcrl
ret
mov
mov
dec
mov
mov
fs
mov
dec
pop
sub
div
in
cmpsl
or
or
jp
or
jbe
mov
rcll
dec
adc
cmp
mov
adc
jmp
or
or
fists
cmpsl
sbb
push
xchg
jp
js
pop
jo
iret
cmp
pop
push
xor
or
ret
or
jmp
int3
jns
movsl
sbb
push
or
xchg
adc
adc
aad
test
fdivrl
sarb
ret
jne
xor
sub
clc
outsl
ficoml
adc
jbe
dec
push
push
dec
dec
inc
mov
mov
cmp
movsb
call
adc
in
xchg
pop
or
pushf
in
and
push
pop
xor
rcrb
or
xchg
mov
hlt
hlt
je
jmp
bound
cmp
ficoms
dec
add
sbbb
ficompl
mov
inc
mov
hlt
int3
xor
xor
clc
gs
and
shll
or
mov
mov
xchg
push
and
aaa
jmp
push
inc
std
lock
xlat
out
adc
cmp
mov
inc
js
adc
rcl
sbb
int
loop
clc
push
inc
add
xchg
sub
scas
inc
icebp
lods
pop
sbbl
rcr
xchg
adc
ja
or
fisubs
clc
dec
inc
jns
into
pop
mov
sub
adc
push
inc
push
jmp
fsubrl
and
rcr
mov
je
add
imul
cld
sub
daa
cmp
cltd
fcomp
mov
push
icebp
loop
mov
sub
xchg
dec
rcrb
inc
and
inc
sbb
and
pop
roll
cs
jl,pn
and
cmp
or
enter
fs
inc
imul
push
fstpt
leave
arpl
dec
lcall
sbb
and
or
addb
add
call
adc
je
or
sub
adc
insl
xchg
cmp
inc
and
pop
adc
call
rclb
cmpl
enter
test
push
mov
call
loopne
adc
imul
in
mov
aam
pop
or
mov
das
fs
les
push
jo
loope
fisttps
shrl
push
cmc
or
mov
adc
aas
pusha
push
call
decb
inc
arpl
ret
or
es
mov
xlat
ret
push
mov
push
mov
ret
dec
pop
inc
cmp
shrb
movb
xor
push
jecxz
or
cmpsb
mov
add
dec
dec
fdivrs
adc
fidivl
adc
xor
into
push
mov
adc
lcall
push
or
cmpl
inc
loop
imul
add
sbb
push
and
sbbl
int3
pop
add
mov
daa
xchg
call
nop
repnz
out
lcall
inc
xchg
sbb
mov
dec
push
enter
cmp
fs
add
cmp
adc
lock
fbld
add
in
lahf
or
stos
mov
add
mov
pop
mov
xchg
inc
inc
add
pop
icebp
imul
repnz
jbe
add
add
jnp
pop
sbb
enter
dec
cmp
sbb
in
nop
add
adc
lds
pop
xchg
nop
xchg
or
sub
mov
hlt
add
or
data16
add
jne
pushl
or
adc
inc
adc
xchg
subl
jecxz
jecxz
push
inc
dec
add
sbb
jae
lret
mov
and
cltd
rcl
push
and
sarb
or
mov
cmp
xor
lock
mov
sbb
jo
repnz
xchg
nop
xor
call
adc
test
mov
xchg
jo
ja
adc
add
inc
mov
sbb
inc
dec
pop
jb
popa
jmp
lds
xchg
subb
cmp
push
fstpl
and
es
or
scas
jb
dec
or
adc
sbb
rclb
fsubrs
dec
xor
sub
pop
xor
mov
and
xchg
pop
and
ficoms
cmpsl
daa
cmp
mov
pop
push
cwtl
jns
inc
fsubrl
loop
andl
push
pop
push
jne
rcrb
popa
sub
loop
pop
sbb
push
add
adc
mov
and
dec
shrb
or
or
idiv
xchg
das
add
dec
out
testb
je
pop
push
ret
jne
jno
clc
movsl
out
xchg
adc
int
add
inc
test
and
cmp
ret
clc
mov
or
mov
icebp
rolb
inc
push
inc
loopne
dec
or
fcomp
pop
cwtl
mov
popf
ficompl
pop
cli
mov
fadds
ret
leave
push
movsb
das
rolb
xchg
sarb
dec
pusha
mov
cmp
popa
mov
add
dec
cld
add
fwait
adc
cli
xor
das
clc
cmp
mov
adc
lock
push
and
sarl
inc
cwtl
aad
iret
scas
aam
loopne
push
sbb
mov
push
or
nop
lahf
dec
sahf
pop
push
add
or
pop
mov
nop
out
sar
scas
es
jae
mov
dec
iret
mov
jo
or
insl
or
dec
and
sbb
sub
lds
adc
and
arpl
xor
inc
mov
inc
int3
pop
cmp
sbb
es
push
scas
rolb
or
imul
bound
fistps
jae
test
dec
and
movq
pop
je
mov
movb
jg
mov
test
push
push
test
push
std
fwait
pop
xchg
adc
or
cmp
push
ss
adc
adc
adc
mov
cmp
xor
mov
mov
adc
pop
je
mov
cmpsb
add
jecxz
push
xor
push
aas
or
nop
lea
mov
mov
dec
and
pop
imul
fwait
push
or
and
sub
sar
or
add
mov
out
and
pop
sbb
mov
xchg
enter
dec
enter
pop
jns
mov
repz
test
push
pusha
cmp
pop
jl
mov
outsl
wbinvd
dec
outsl
and
movsl
in
xchg
nop
das
add
lock
cwtl
and
sbb
and
adcl
test
jae
rcrb
mov
jo
frstor
jnp
xchg
je
inc
xor
loop
xchg
jmp
subl
sbb
sub
push
add
or
sahf
fsubs
leave
paddd
je
mov
mov
sbb
xor
icebp
cmp
push
mov
jbe
inc
fdivs
jp
stos
add
or
scas
mov
adcl
and
adc
pop
add
mov
sbb
subl
jg
mov
lea
dec
dec
lods
push
popa
or
cmpb
rcll
bound
faddl
dec
and
mov
in
out
pop
fsubs
jecxz
fadds
mov
or
jmp
push
adc
test
cld
mov
push
add
pusha
test
adc
pop
pushf
or
dec
adc
add
mov
jmp
pop
aas
mov
cmp
test
enter
adcl
popa
jg
out
push
push
movsb
push
and
lock
mov
add
daa
test
lods
add
mov
je
jmp
add
test
testl
call
dec
fstps
cmp
sub
adc
ret
add
negl
in
inc
std
aaa
pop
push
aam
lds
xor
inc
push
xchg
add
inc
and
loopne
clc
fbstp
and
inc
fmull
xor
pop
movl
je
cs
call
xor
pop
test
or
dec
add
dec
cmp
xor
mov
int3
inc
call
pop
cld
add
push
popa
inc
mov
sbb
push
pop
sarb
xchg
mov
or
out
fnstcw
jecxz
adc
popf
adc
lahf
out
iret
dec
pop
insb
repnz
add
add
insl
inc
sbb
pop
scas
jb
js
test
adc
or
xor
jle
ret
aas
in
int
cmp
xchg
pusha
pop
stos
xchg
pop
adc
aaa
pop
and
cli
mov
fstps
adc
jne
lods
arpl
cmp
push
and
inc
in
adc
aam
adc
push
or
stos
push
outsl
loopne
out
in
or
sbb
or
xor
sbb
lods
add
popf
mov
sbb
mov
sub
daa
ror
into
mov
or
cmp
dec
or
lcall
loop
stc
sbb
xor
jl
outsl
and
sti
loopne
add
xor
fcmove
fcoms
iret
push
gs
inc
and
sub
pop
adc
push
jb
cmpsl
or
mov
xchg
add
add
or
push
inc
dec
popaw
rcrb
cmpb
mov
nop
adc
mov
mov
sub
inc
adc
loope
sbb
dec
sahf
mov
adc
lock
dec
clc
lea
fstl
clc
sahf
and
ffree
adc
mov
add
mov
movsb
aaa
cmpb
sub
inc
add
pushf
adcb
adc
mov
xchg
pop
push
outsb
push
mov
and
add
and
out
repnz
shrl
cli
cld
push
in
pop
clc
repnz
push
sub
stc
inc
lock
cwtl
roll
sbb
inc
push
fcomps
adc
or
or
xchg
aad
rorl
push
jle
sub
sbb
ret
inc
mulb
inc
xchg
jle
pop
lds
push
xor
sbb
inc
imul
int
push
jne
add
into
jbe
psadbw
fidivrs
imul
cs
les
neg
xor
enter
int3
loope
jmp
ds
xlat
sub
jge
mov
es
mov
xor
mov
les
pop
mov
push
or
inc
enter
mov
pop
mov
xchg
push
or
ret
aaa
loopne
sbb
xchg
in
insb
mov
iret
fs
push
es
or
or
sbb
push
mov
xor
aas
cwtl
pop
lcall
push
add
test
adc
mov
jne
sub
sub
jge
push
push
sbb
dec
loopne
fcoml
fisubrl
push
aaa
call
aam
ja
inc
loopne
in
or
inc
in
loopne
xorb
inc
stc
fs
cmp
xchg
bound
mov
sbb
and
orps
loopne
push
mov
nop
jge
ja
xchg
inc
and
adc
mov
jne
push
andl
jo
sbb
mov
pop
jle
add
je
mov
lock
lock
jbe
cmp
or
pusha
and
inc
or
ret
imul
in
push
push
cmp
inc
or
xor
pushf
mov
xor
xor
in
lea
lea
int3
js
mov
mov
orb
xor
inc
shll
sub
xchg
sub
adc
add
adc
imul
cmp
clc
or
mov
sub
faddl
or
pop
jp
push
sbb
mov
js
aas
aas
push
mov
cmp
push
pop
icebp
into
int3
inc
movsl
cs
xchg
clc
lea
sbb
inc
out
lcall
lret
sbb
mov
rorb
xorl
push
test
push
sbb
popa
ds
jb
lea
enter
jo
sub
lret
adc
sbb
jmp
cmp
ret
sbb
push
add
inc
push
mov
lock
gs
xlat
xor
hlt
xchg
fmul
sbb
dec
lea
push
imul
jns
push
sbb
xor
scas
add
insb
nop
into
rclb
add
clc
clc
mov
rcll
or
push
lods
cld
add
sbb
pop
adc
sbb
adc
xor
pushf
adc
fsubs
outsb
int3
and
pop
push
lods
xchg
xchg
and
hlt
add
add
mov
push
inc
in
cmp
push
sbb
rolb
pop
cmpsb
mov
and
sbb
sbb
or
add
loopne
cmp
xor
adc
out
testb
jp
pop
cmpsb
test
sbb
inc
inc
cmp
push
loope
push
cwtl
or
sbb
ljmp
mov
cmovbe
jns
push
xor
jmp
insb
pop
xchg
mov
out
xchg
cltd
mov
mov
out
lahf
push
xchg
int3
out
es
scas
andb
into
inc
ja
inc
jmp
xor
movsl
test
adc
or
bound
xchg
mov
dec
stos
sub
sbb
push
je
hlt
shlb
xor
out
or
adc
push
jmp
sub
sub
in
in
or
or
xchg
or
push
adc
sub
arpl
fs
adc
jle
pop
dec
subl
adc
xchg
and
or
repnz
faddp
jge
rcll
or
lcall
sub
push
add
push
add
lods
xchg
jg
adc
xor
movsb
push
movsl
cmpl
jg
mov
sahf
mov
cmp
inc
hlt
push
adc
push
inc
cmpb
jb
sub
jl
jae
imul
andl
sub
xchg
add
ss
out
add
or
sbb
sub
shll
cs
pop
pop
repnz
cmpsb
imul
sub
addr16
rorb
nop
dec
jbe
mov
cwtl
add
sbb
dec
ljmp
mov
push
jb
cmp
cmc
add
adc
out
add
xorb
jns
xor
out
inc
adcl
addb
mov
adc
xorb
add
or
add
pusha
faddl
bound
cmpb
ja
push
stos
std
ja
repz
stos
into
sahf
ss
outsb
and
xchg
int
test
lret
ss
rorb
pop
inc
mov
xor
push
or
imul
and
cltd
lret
jo
jge
rolb
sbb
repnz
add
pop
imul
push
insb
push
pop
mov
cmp
inc
xor
ror
jae
pop
out
sub
adc
sahf
mov
cmpsl
dec
into
loopne
xor
push
xlat
dec
subl
mov
add
js
in
sub
dec
push
add
sub
push
jmp
orb
cmp
popa
and
inc
sbb
push
lea
push
enter
and
or
inc
hlt
xor
imulb
rclb
cmp
push
or
or
xor
and
jo
in
push
sub
lea
ret
sarb
je
dec
dec
add
jmp
adcb
add
sub
mov
loop
adc
or
push
aas
and
outsl
adc
push
sbb
add
and
inc
inc
clc
xchg
es
push
sub
adc
sbb
adc
setbe
mov
insb
pop
aaa
jmp
mov
mov
mov
pop
pop
xor
lods
cmp
xchg
cmp
sub
xchg
pop
dec
jecxz
out
popa
test
and
sbb
lahf
popa
dec
push
add
or
cmp
daa
jmp
cwtl
shr
adcb
push
adc
jne
ret
sbbb
cmpsb
add
or
mov
gs
dec
push
dec
add
in
adc
sbb
inc
inc
dec
jmp
add
repz
test
pop
inc
mov
dec
push
push
sbb
xchg
or
pop
jb
in
mov
pop
mov
inc
jp
jne
push
cmp
roll
xchg
push
dec
imul
pop
daa
xchg
pop
mov
push
push
iret
xchg
and
add
add
lret
fnsave
into
add
dec
loopne
inc
popf
insl
add
or
inc
add
dec
sbb
jbe,pn
cwtl
outsl
mov
jb
inc
jb
add
jb
add
jb
daa
pop
enter
ss
faddl
inc
pop
pop
testl
das
movsb
jo
jne
js
arpl
adc
das
and
daa
mov
or
xchg
push
push
dec
sbb
and
sbb
loop
nop
xchg
adc
xchg
adc
adc
adc
adc
insl
ss
push
arpl
repnz
repnz
sbb
sbb
sbb
push
and
inc
add
mov
les
shrb
pop
cmp
adc
testb
cmpw
mov
jg
adc
xchg
or
inc
jecxz
jl
insb
ljmp
icebp
lods
sbb
in
test
scas
and
cmp
dec
icebp
xorb
xchg
rorl
cmpsl
test
loope
or
or
inc
fidivl
jle
dec
mov
jl
mov
sub
push
push
sbb
lods
xor
andl
xlat
xchg
push
les
cmc
jmp
fsubr
xlat
adc
sar
adc
xor
insb
mov
jmp
aaa
scas
out
outsb
add
daa
and
adcl
mov
rorl
aam
out
cmp
jle
call
xor
mov
or
add
dec
fwait
jne
popf
jno
or
sub
orl
js
add
mov
add
in
add
inc
adc
scas
fisubrs
leave
add
scas
inc
das
xchg
mov
enter
inc
out
test
mov
enter
arpl
jnp
pop
cmpl
sub
xchg
mov
push
or
mov
pop
addl
mov
in
mov
cmpsb
mov
leave
shl
and
enter
rolb
mov
mov
pop
xor
push
sbb
popa
and
jo
std
mov
lods
enter
filds
or
adc
pop
mov
movsb
push
adcb
jns
mov
jmp
je
inc
in
push
sbb
mov
ja
aaa
inc
sub
push
jb
loope
addr16
rolb
xchg
push
inc
sbb
add
rorl
jne
sub
rcr
jne
and
push
in
add
je
movb
adc
push
add
gs
pop
ret
aad
xchg
sbb
or
inc
in
or
mov
cmpsb
lcall
jl
jbe
push
adc
adc
jle
lcall
dec
dec
or
mov
es
mov
sub
enter
data16
inc
sbb
or
dec
dec
or
in
pop
add
incl
add
xor
add
test
xor
push
inc
inc
pushf
leave
jp
adc
sbb
pop
cmpsb
int3
in
pop
nop
mov
inc
jo
daa
adc
and
dec
pop
rolb
or
pop
push
dec
arpl
inc
imul
xor
inc
stc
rcrb
push
push
ss
and
add
push
fdivp
repnz
xchg
cli
mov
pop
nop
inc
rclb
je
js
add
iret
jne
sub
or
mov
lea
add
xchg
ljmp
sbb
lock
stc
and
cmp
mov
cs
push
push
ja
fwait
jne
loop
test
push
push
mov
pusha
mov
jbe
xor
inc
adc
mov
test
jnp
pop
outsb
jecxz
sbb
mov
jnp
sbb
inc
fadd
jmp
in
inc
jmp
inc
sbb
fsub
pop
push
fdivrl
test
cmpsl
in
inc
mov
cli
push
dec
adc
aaa
sub
jne
push
push
stc
lret
cmp
inc
fstpt
xor
mov
pushl
negb
fcomp
inc
and
xchg
mov
cs
dec
daa
mov
test
cmp
cwtl
sub
sbb
movsb
adc
scas
test
sub
shrl
sub
imul
loopne
xchg
pop
cld
inc
dec
pop
rcr
push
inc
or
jecxz
call
pop
xor
add
pop
das
inc
jle
dec
cld
test
int
cld
loopne
mov
pop
push
sub
mov
mov
push
hlt
or
dec
dec
push
mov
push
inc
add
sub
sub
add
add
repz
pop
adc
and
stos
lahf
pop
pop
or
insl
adc
lock
int3
cmpsl
push
inc
cld
test
fsubs
fdivrl
daa
mov
sbb
movsb
test
pop
inc
add
and
repnz
inc
leave
sub
inc
in
add
and
aaa
imul
push
inc
push
stos
xlat
sub
cmp
cld
icebp
or
mov
cmc
mov
xor
xor
or
lea
jns
or
jns
adc
adc
lock
orl
push
inc
sub
xor
cli
push
inc
pusha
ret
push
adc
xor
leave
add
aas
sub
pop
and
xor
or
fsubrs
push
mov
inc
and
mov
call
aas
mov
push
pop
inc
pusha
ret
mov
cmp
jb
add
push
lods
xchg
jl
adc
adc
or
movzwl
cmp
inc
lret
shlb
into
and
rorb
xchg
push
or
add
fcompl
lods
mov
dec
xor
fiadds
dec
pop
scas
mov
lods
ja
enter
push
mov
dec
pop
in
insl
jg
mov
rolb
and
lock
mov
jns
and
rclb
add
insl
cmp
push
add
gs
sahf
xchg
jo
and
and
xlat
inc
push
fwait
dec
sub
sub
aaa
iret
mov
xor
and
rcrb
clc
cmp
and
mov
in
add
call
divl
push
jmp
bnd
in
aam
int3
inc
dec
adc
ss
inc
sbb
cmc
sbb
lcall
jecxz
scas
dec
subb
call
dec
dec
inc
adc
loope
iret
loopne
hlt
add
push
ss
and
sbb
add
sub
sbb
je
push
mov
mov
adc
xchg
aas
pop
mov
inc
in
mov
mov
ja
gs
jbe
sub
test
mov
xor
iret
jg
daa
aad
cmpsb
push
ljmp
inc
mov
push
fwait
dec
add
push
jns
adc
adc
ret
adc
dec
cmpl
and
add
push
mov
add
sub
shlb
jne
push
imul
adc
nop
cmp
loope
push
adc
jne
xor
sti
and
push
push
dec
cmpb
xlat
jmp
andb
or
sahf
add
pushf
aam
xchg
mov
or
mov
incl
jo
aad
movl
inc
lret
aaa
and
mov
and
sub
flds
inc
push
push
xor
mov
or
mov
adc
add
mov
cs
adc
or
in
inc
bound
in
inc
cmp
mov
add
sbb
add
cmove
inc
and
jmp
or
jbe
mov
inc
add
cwtl
adc
in
repz
jb
das
call
scas
cmp
es
stos
adc
add
push
add
push
dec
jp
cmp
sbb
jle
jae
test
out
je
pop
mov
push
out
aas
int
dec
ja
add
sbb
jb
fsubrs
adc
cmp
mov
outsb
push
inc
jne
mov
int
imul
dec
mov
fisubrs
dec
mov
pop
push
pop
jo
mov
mov
jb
adcb
and
sub
inc
rorb
test
push
jb
pop
mov
xchg
call
subl
fsubs
sub
mov
pop
mov
cmp
push
adc
adc
rolb
arpl
sub
repz
add
in
sbb
movl
mov
fsubrl
add
or
shlb
loop
gs
movsl
or
les
fcmovbe
out
xorl
adcl
xchg
dec
xchg
in
cwtl
or
dec
mov
xchg
mov
mov
sub
dec
pop
inc
jns
add
pop
pop
sub
mov
fcoml
test
push
cmp
sbb
loopne
test
roll
jmp
lret
jp
adc
lahf
cmp
mov
pop
adc
fdivrl
dec
pop
mov
in
fisubrl
xchg
dec
push
jne
enter
imul
mov
in
inc
add
xor
nop
sbb
inc
push
mov
add
and
shl
adc
inc
repnz
stos
add
aad
ret
insl
add
or
push
mov
dec
and
sbb
outsl
bound
cmp
add
addr16
insb
push
outsb
lea
in
outsl
sbb
mov
bound
pop
mov
inc
out
sbb
inc
adc
jl
pop
pop
xorl
sbb
mov
sti
sbb
lret
imul
sub
adc
lahf
pop
or
mov
adc
fldl
dec
fs
and
ds
popf
insb
and
add
adc
mov
mov
movsl
data16
mov
test
lods
jge
mov
outsw
jge
xor
sub
call
inc
imul
jne
sbb
and
mov
adc
pop
pop
repnz
add
je
add
out
or
lcall
jbe
in
jmp
ret
inc
sub
jmp
pop
jne
lea
orb
roll
jb
jecxz
push
or
add
in
dec
xor
jns
in
jmp
fidivrl
inc
sub
jmp
arpl
dec
jns,pn
jg
imul
hlt
lret
jne
mov
pop
and
movsb
sbb
addl
test
nop
mov
jno
int
loope
adc
mov
add
adcb
sbb
lds
or
sub
adc
sbb
cmp
push
pop
or
dec
push
add
mov
pop
hlt
dec
cmp
ja
jns
shrl
das
sbb
mov
cmp
jbe
add
loope
inc
jmp
sub
loopne
inc
push
add
mov
lret
sub
addb
cmp
and
rcrl
xor
lods
adc
out
or
cmp
xchg
cmp
xor
cmp
xchg
ret
add
idivl
cmpsl
jge
sbb
push
clc
lds
push
and
shrb
push
push
lock
sub
jmp
add
push
sti
jmp
inc
sub
jmp
sub
subb
push
pop
mov
sub
pop
sbb
imul
push
lods
vcvttsd2si
pusha
cli
inc
mov
sub
dec
push
push
insb
push
sbb
jo
add
sub
fbstp
aam
je
sti
cmp
or
cmpsl
fnstenv
push
xchg
xor
ss
push
dec
push
ja
rcr
sahf
shl
and
gs
sahf
dec
vmread
and
pushf
rcrb
adc
adc
dec
adc
dec
inc
lock
jbe
or
jbe
frstor
xlat
dec
ficoml
add
and
ficomps
add
dec
dec
xchg
arpl
test
add
call
xchg
cltd
cmp
cmp
or
sbb
or
das
sub
push
mov
js
lock
fdivrs
pop
sbb
cltd
sub
add
sbb
cmp
jne
out
dec
jp
std
cltd
jno
imul
mov
es
xchg
je
cmp
bound
inc
clc
sub
fldl
jne
mov
sub
adc
iret
jp
in
or
negb
pusha
ja
roll
cmp
xchg
dec
mov
les
add
cmp
sub
and
xchg
mov
add
or
add
add
orl
mov
xor
icebp
and
hlt
jb
pusha
in
testl
sub
inc
cmpsl
jne
sahf
cmpsb
shll
xchg
adc
and
or
pop
sbb
inc
inc
cmp
sub
inc
mov
inc
imul
pusha
and
jne
add
adc
add
or
xchg
lock
loop
mov
fistpl
sbb
lds
aad
xor
ds
aas
sub
adc
adc
pop
mov
mov
fiaddl
sbbb
sbb
add
push
xor
int3
popa
inc
mov
das
pop
mov
and
mov
movsb
adc
xchg
fnsave
inc
insl
gs
mov
xchg
sbb
adc
push
and
and
movsl
daa
or
pop
or
dec
cld
popf
testb
mov
lahf
add
incw
or
sbb
std
jne
and
fisubl
and
lods
rol
mov
xor
clc
enter
ss
or
iret
jbe
jmp
inc
andb
push
imul
push
dec
sub
xor
loope
orl
mov
inc
icebp
push
in
clc
and
cmpsl
xchg
or
and
pop
mov
xchg
sbb
dec
outsb
xor
sub
and
movsb
xchg
mov
fs
xor
adc
shr
jle
and
sarl
outsl
mov
pop
add
mov
add
lret
mov
out
dec
test
adc
adc
inc
or
mov
std
inc
or
pop
fidivrs
and
xor
push
adc
push
loopne
js
xchg
pushf
test
mov
cmc
push
int3
popa
test
icebp
arpl
push
add
jp
jg
cmp
hlt
sbb
xchg
sub
mov
sahf
movsb
popf
jmp
sbb
mov
insb
pop
push
xchg
jne
test
rorb
fistl
mov
cmc
roll
push
push
pop
mov
inc
and
mov
mov
mov
nop
enter
xchg
movsb
subl
leave
aaa
adc
sbb
sbb
jmp
test
push
or
dec
arpl
xorb
flds
mov
pop
jb
jbe
inc
decb
xchg
dec
pop
adc
lods
out
add
xchg
sahf
icebp
jmp
das
sub
lea
or
cltd
hlt
shl
mov
sub
pop
sub
adc
adc
aas
add
stos
popa
jg
push
push
idivl
clc
je
or
sahf
inc
dec
xor
mov
test
je
add
sbb
or
push
subb
cmc
push
and
daa
sbb
dec
je
jnp
cmp
push
cmp
add
add
or
cmp
pop
cmp
adc
add
movzwl
push
or
or
jo
xchg
xlat
cmp
adcb
mov
pop
mov
xor
sbbb
ret
or
lods
enter
and
push
andb
dec
dec
push
imulb
pusha
sub
lock
sbb
enter
andb
xchg
orl
pushf
and
inc
inc
mov
sbb
add
inc
adc
sub
or
sub
xor
sub
sub
mov
add
inc
icebp
add
sub
lods
std
xor
je
orl
xor
insb
jle
inc
fld
sub
mov
popf
or
jae
pop
dec
fisttpll
lcall
adc
pushf
sub
mov
sbb
xchg
je
gs
sub
and
mov
pop
sbb
push
sub
fs
aas
push
dec
adc
testb
and
gs
sub
pop
and
inc
call
cmp
out
jo
xchg
je
jns
js
call
jae
test
inc
or
and
jmp
test
adc
inc
nop
adc
inc
pop
dec
cwtl
test
lock
js
dec
lcall
js
rorb
lea
imul
test
xchg
mov
js
xchg
or
into
jge
jle
xchg
push
inc
je
and
mov
loopne
aas
push
xor
and
cwtl
data16
ret
daa
mov
test
mov
popf
adc
add
and
sub
jecxz
in
sahf
nopl
repz
lock
pop
rolb
pop
cmpxchg
and
xor
fistl
adc
lock
xchg
pusha
sub
aas
xor
jo
ficoml
aas
in
or
pop
sbb
sbb
inc
ret
cmpsb
push
and
push
add
sbb
ret
stos
mov
and
push
mov
popa
cmp
add
sbb
pop
cwtl
dec
adc
mov
mov
dec
sbb
ja
insl
mov
mov
outsl
dec
inc
inc
sbb
sub
and
or
or
add
dec
and
xor
inc
jecxz
call
push
mov
xchg
add
xchg
and
cmp
pop
jnp
cs
cmp
and
icebp
clc
cmpb
push
mov
and
call
xchg
and
sbb
shrb
xor
cmp
xchg
add
out
imul
das
cwtl
gs
inc
loopne
inc
or
stc
stc
add
inc
js
inc
iret
adcb
xchg
sbb
adc
push
sub
popl
sub
mov
jle
push
ud2
arpl
adc
int3
dec
lahf
adc
fimuls
mov
sub
iret
pop
arpl
imul
xor
je
or
sub
fs
in
mov
loope
cmp
inc
cs
xor
mov
imul
or
sub
adc
call
in
loope
jmp
push
ljmp
popa
ret
orb
xchg
movsb
repz
frstor
sbb
add
inc
icebp
inc
sub
and
into
dec
in
cmp
pop
inc
les
fld
dec
nop
mov
add
adc
sbb
push
or
or
or
push
and
iret
in
mov
notb
lock
mov
pop
mov
bnd
dec
xchg
xchg
xor
iret
movsb
mov
ret
cmp
ret
inc
jne
push
loop
mov
fwait
cmp
je
popa
loop
push
testb
lcall
xor
je
popf
push
je
inc
and
sbb
pop
mov
cltd
adc
sub
enter
cld
ja
testb
setne
mov
pushf
xor
mov
mov
mov
sbb
mov
or
xor
or
sbb
insb
js
enter
and
sbb
sti
dec
add
mov
sbb
inc
xor
pop
bsr
xchg
and
test
xchg
push
push
je
cs
jle
and
sahf
pop
jne,pn
pop
push
lods
sbb
pop
popf
add
dec
mov
into
cwtl
and
lods
add
and
hlt
xor
xchg
xchg
xor
in
inc
jmp
dec
sub
jmp
cmp
mov
or
rcrb
mov
sbb
or
or
adc
ljmp
out
in
xor
xor
pusha
push
mov
inc
inc
fbstp
add
mov
cmp
cwtl
ljmp
cld
out
sbb
and
mov
jge
inc
add
adc
xor
andb
lock
testb
and
mov
add
subb
and
pop
das
dec
and
loop
pop
sub
or
adc
inc
ret
cmp
cmp
imul
pop
pop
pop
lahf
dec
jp
les
push
mov
inc
les
jl
mov
adc
inc
add
push
aad
lods
in
xor
add
cmp
fstl
lods
cwtl
leave
xchg
daa
add
jo
mov
les
stos
das
and
cmp
sbb
loopne
clc
sub
sub
sbb
jmp
or
or
sbb
jo
clc
push
imul
add
ret
clc
pop
inc
addl
xchg
arpl
adc
dec
loop
enter
imul
dec
pop
adc
lea
aam
mov
imul
adc
jecxz
clc
or
xchg
data16
sbb
pop
in
pop
andb
aaa
xchg
add
push
mov
adcl
pushf
push
add
gs
jl
pusha
inc
jmp
add
dec
mov
fiadds
or
cmp
and
in
fwait
adc
pushl
xor
sub
pop
enter
int3
loop
push
fadds
rclb
or
adc
rorb
pop
fs
cmpsl
repnz
mov
adc
and
add
dec
jb
jne
xor
jns
scas
add
icebp
jecxz
repz
loopne
cs
mov
test
dec
lret
lahf
sbb
xor
sub
pop
or
dec
sub
cmp
pop
lods
sarb
or
push
mov
push
sbb
gs
andb
arpl
lods
fcompl
add
adc
cmp
testl
adc
ds
and
or
icebp
js
mov
or
push
repnz
and
cmp
lea
pop
xor
sbb
arpl
xor
ret
and
adc
ret
sar
mov
les
xchg
mov
sub
addl
xchg
jge
push
mov
mov
mov
inc
inc
push
lcall
xchg
or
sub
cli
pop
jg
in
xor
orl
cmp
cmp
and
roll
mov
lods
arpl
jl
push
jg
into
clc
mov
mov
fisttpl
lret
fadds
sbb
int
mov
ljmp
xchg
dec
call
stos
ficoms
adc
or
pop
dec
xchg
std
push
dec
or
movsb
mov
arpl
mov
jg
insb
mov
pop
push
imul
loopne
adc
pop
add
js
push
push
mov
sbb
inc
cmc
jne
add
sub
add
pop
and
fcompl
fisubrs
clc
dec
cmpsb
jnp
cmp
arpl
and
das
push
pop
mov
mov
scas
adc
ja
and
ret
or
push
aad
cmp
dec
int3
lahf
push
test
inc
sbb
sbb
and
int3
jecxz
pop
cmp
xchg
dec
movb
add
std
xchg
in
jo
mov
mov
loopne
jl
test
and
dec
or
push
cli
or
mov
fs
cmp
shlb
lock
stc
or
cs
pushf
imul
adc
cmp
aam
add
sbb
mov
adc
cmp
sub
inc
pop
pushf
andb
adc
pop
sub
xor
cltd
outsl
mov
sub
xor
aas
mov
pop
cmpb
movl
push
fdivrs
adc
push
leave
fsubl
loopne
popl
cmc
sub
sub
inc
xor
pop
add
xchg
sub
or
mov
add
push
adc
jo
sub
lods
jnp
inc
mov
or
fiaddl
out
add
push
movsl
hlt
sub
sbb
and
push
mov
add
psubusb
inc
jno
fdivs
adcl
cmp
pop
inc
orb
jno
pop
and
jbe,pt
add
sbb
push
jo
cmp
xorb
xchg
btr
stos
movsb
mov
jne
rcrl
jns
imul
xlat
popa
or
imul
rcll
add
into
xor
jb
add
jmp
test
push
or
movl
mov
adc
inc
imul
frstor
dec
shll
cmp
mov
xor
cmp
sbb
lret
lods
mov
or
add
dec
test
mov
push
jne
mov
and
xor
out
pop
and
fistl
cltd
sbb
add
scas
ret
dec
popa
mov
mov
lahf
mov
ja
ret
adc
sbb
mov
inc
adc
cmp
push
adc
mov
mov
adc
add
leave
jnp
pushf
dec
and
int3
xchg
xchg
push
sbb
ljmp
xor
add
and
push
add
adc
push
push
push
add
adc
bound
into
and
pushf
imul
popf
dec
je
push
inc
cmp
lahf
int
dec
add
inc
lock
push
pop
cmpsl
cmc
arpl
or
adc
jb
dec
fstp
test
inc
dec
cwtl
ret
adc
fnstenv
mov
and
pop
sub
stos
repz
and
fisubl
or
sbb
stos
ret
xorl
adc
ret
push
push
shlb
sub
ret
jle
movsb
xchg
stos
hlt
or
jnp
test
daa
and
imul
out
fsub
sbb
mov
mov
in
mov
xorb
or
push
mov
test
gs
shlb
push
xor
mov
gs
adcb
add
fucomp
pop
jmp
cwtl
call
add
pop
idivl
or
xor
mov
jns
cmp
inc
inc
in
clc
xchg
jo
sub
jmp
ja
les
dec
add
cmp
xor
stos
orl
xor
mov
ds
mov
jne
jne
ficoms
push
sub
loope
xlat
mov
pusha
sbb
lock
xor
rorl
pop
andl
orb
insb
push
push
adc
fiaddl
mov
or
dec
and
dec
sub
sbb
pop
jmp
push
xchg
inc
insb
inc
ds
dec
push
adc
add
rolb
add
adc
add
sub
dec
sub
mov
lret
and
push
add
sbbb
sub
cmp
hlt
cmp
xor
aad
cld
pop
lahf
dec
pusha
ret
jno
add
clc
test
in
or
mov
push
divl
lods
inc
add
je
mov
lods
ret
sti
or
mov
test
into
dec
testb
test
push
or
add
xor
xchg
fsubrp
xor
and
pushf
jne
lcall
inc
xchg
ficoml
mov
in
in
mov
sub
repz
push
movsb
push
jno
or
push
push
adc
push
mov
adc
fstpl
pop
and
insl
add
jb
sub
xor
cmp
inc
jl
les
push
xlat
in
movsl
or
aaa
cld
inc
in
and
dec
daa
push
pop
mov
and
push
stc
add
aaa
xor
cmpb
cmpsl
jo
call
sbbl
sbb
dec
aas
jl
orl
push
dec
fmull
out
ljmp
dec
jae
das
stos
adc
sbb
add
mov
or
pop
pop
in
ss
inc
in
mov
arpl
aas
jns
inc
jg
and
push
test
orb
ret
clc
sub
out
jb
sub
cmp
xchg
dec
xchg
mov
pop
pop
and
cmp
dec
lods
mov
ss
std
mov
icebp
push
mov
push
mov
or
enter
rcll
mov
inc
and
and
push
lock
and
pop
pop
popa
lock
test
aam
mov
or
addr16
aas
mov
inc
pop
in
push
xlat
cmp
sub
nop
pop
add
sbb
jp
push
add
and
jo
xchg
pusha
add
daa
pusha
adc
test
inc
inc
nop
inc
xchg
add
add
je
mov
sub
sbb
push
shlb
mov
mov
aas
sar
mov
inc
push
add
sbb
dec
or
ds
cmpb
inc
jecxz
or
sub
add
add
sbb
add
loopne
loopne
pop
lret
push
rclb
or
xchg
sbb
mov
adc
ss
xchg
stos
sbb
mov
sub
jg
add
xchg
xchg
call
inc
add
inc
add
pop
adc
or
push
add
or
call
lock
fadds
sbb
shlb
data16
fistps
mov
rorb
icebp
push
and
push
inc
adc
add
adcl
sub
sub
cmp
jle
cmp
nopl
and
inc
dec
sbb
test
ja
pop
shll
pop
push
pop
mov
mov
adc
xor
xchg
ficoms
add
or
mov
cmp
inc
data16
dec
mov
jp
dec
sbb
ret
and
adc
loope
jbe
rclb
jl
sub
xor
add
clc
out
or
inc
jmp
cmpw
or
adc
mov
daa
mov
xor
inc
stos
push
nop
or
jl
test
or
aaa
xchg
imul
cmp
aaa
aas
test
add
xchg
mov
xchg
daa
add
cmp
clc
mov
fwait
dec
movb
mov
shr
mov
fstpl
mov
xchg
lea
jbe
subb
aad
sbb
push
je
xchg
sarl
js
cmpb
movsl
pop
in
and
push
adc
xor
clc
fcoms
in
jb,pt
jecxz
xchg
jb
mov
sub
push
inc
lahf
pop
lret
sbb
jnp
mov
insb
push
mov
popa
adc
int
sbb
push
mov
add
js
cmp
mov
cmp
orb
sub
jb
orb
xor
mov
hlt
lock
repnz
dec
into
cli
cld
xor
and
or
push
or
adc
cmp
jl
push
loop
pop
fiaddl
in
pop
or
addr16
aam
add
into
ja
jns
imul
out
lret
inc
add
push
out
adc
cmp
sbb
fwait
movsl
popa
and
cmp
pop
sbb
loope
cmp
rclb
add
push
xchg
inc
sbbl
iret
pop
and
subl
push
enter
nop
cmp
xor
or
pop
repz
lods
jmp
inc
pop
jae
adc
add
in
mov
push
and
xchg
or
lock
out
les
sbbb
push
inc
pusha
mov
or
push
xchg
nop
loope
jb
add
push
dec
and
mov
add
into
mov
es
inc
and
or
test
push
pop
mov
ja
xor
jns
fsubrs
and
jecxz
insl
sbb
addr16
notb
xor
daa
adc
push
push
jp
sbb
in
call
add
mov
push
adcb
adc
mov
fdivl
push
daa
fs
or
mov
mov
ja
fimull
stc
xlat
inc
push
mov
push
je
mov
call
out
jl
pop
add
jne
insl
xchg
and
fcmovnb
loope
jmp
mov
nop
push
dec
xor
dec
cmp
sbb
add
push
adc
pop
xor
mov
addr16
push
xchg
jge
push
fs
add
push
xchg
xchg
or
iret
pop
push
and
and
jecxz
lock
mov
aad
and
sub
mov
pop
or
inc
dec
nop
pop
add
or
in
gs
push
add
inc
cmp
push
ret
pop
dec
sbb
add
push
or
pop
std
push
ret
xchg
inc
into
xor
outsl
sub
and
and
dec
mov
jns
push
inc
add
dec
dec
cmp
jae
pop
or
ret
das
nop
sbb
ljmp
or
push
and
xchg
pop
add
fcomps
stc
xor
add
or
or
cwtl
push
pop
idiv
popa
and
push
jle
fwait
push
cmp
push
adc
nop
mov
inc
inc
and
or
adc
pushf
and
mov
outsl
and
insb
or
xor
or
and
nopl
shlb
leave
cmp
loopne
sbb
cwtl
and
inc
data16
fsubl
inc
imul
mov
pop
das
push
push
sub
into
jo
xchg
sbb
push
push
mov
sbb
addr16
sbb
inc
inc
adcb
xor
inc
cs
mov
adc
loopne
or
lock
mov
and
add
aam
popf
test
pop
adc
mov
mov
outsl
roll
subb
sub
dec
sub
je
sbb
jns
pop
test
pusha
add
je
ret
dec
js
cld
sub
and
add
mov
cmp
push
adc
add
dec
xchg
popl
jae,pn
sti
xlat
bound
dec
scas
out
cmp
jne
in
and
mov
or
push
adc
and
fcmovnb
push
imul
inc
cs
cmp
addb
mov
sub
sbb
or
adc
jne
scas
push
xchg
push
pusha
aas
jg
fsub
and
xor
subl
stos
mov
imul
push
shll
stc
ror
ret
lock
pop
inc
int
dec
inc
call
vpunpckhwd
adc
add
insb
lcall
mov
jne
xchg
xchg
adc
cld
dec
jle
cmpb
xor
lcall
sub
mov
enter
outsl
loope
jmp
cmp
test
push
or
test
rcrb
fcomps
inc
mov
fsubrs
dec
out
mov
adc
or
xor
cmp
shlb
jmp
xor
cli
enter
test
or
push
cwtl
inc
movsb
imul
mov
push
push
mov
es
jns
add
xchg
ret
movsb
cmp
loope
addr16
and
cmp
inc
jp
mov
cmpb
ss
cmp
nop
mov
clc
pop
adc
push
cmp
sbb
daa
inc
scas
stos
jns
rcpps
jp
nop
mov
fistl
js
add
cmp
adc
xchg
xchg
jb
out
push
out
inc
xchg
jo
push
cwtl
insb
push
loope
cmp
and
nop
cmpsl
inc
fistl
pusha
fistl
sbb
jne
push
pop
push
gs
ljmp
testb
in
or
dec
mov
imul
and
js
push
js
mov
xor
mov
cwtl
or
xor
mov
jb
mov
pop
outsb
xor
or
scas
loope
push
xor
lods
roll
hlt
loope
and
and
dec
insl
dec
pop
aad
dec
xor
addr16
ficompl
add
in
pop
pop
pop
adc
or
push
dec
pop
dec
jmp
fcmove
mov
sub
xchg
mov
insb
sub
ret
add
add
jb
loop
cltd
fs
cmp
jg
mov
cmp
and
es
imul
test
add
cs
push
push
addl
aaa
inc
js
sbb
mov
gs
dec
fsubs
adc
inc
pop
cmpb
lahf
pop
push
or
pop
ds
jo
push
inc
add
mov
or
loope
loope
ret
dec
adc
nop
movsl
sbb
pop
sarb
repz
jo
inc
or
xor
rorb
dec
pushf
xorb
adc
mov
dec
add
and
adc
adc
xor
mov
subb
cs
sub
push
je
loopne
mov
adc
pop
jmp
add
jb
xchg
imul
dec
add
pop
in
dec
cmp
jo
ds
add
add
test
pop
es
mov
add
gs
mov
add
or
dec
push
sbb
xor
int3
leave
jmp
add
add
adc
or
inc
test
mov
imul
xchg
idivl
ret
xor
jne
add
shrb
mov
and
das
addr16
imul
cmp
cli
sbb
je
mov
xchg
ret
push
leave
adc
push
addl
int3
push
sbb
xchg
cmp
sub
cmpsl
pop
adc
pop
bound
les
inc
push
sub
push
pop
dec
add
arpl
pop
pop
xchg
and
cmp
xchg
cmpsb
mov
xchg
jecxz
enter
aaa
icebp
push
call
mov
xor
decb
mov
inc
adc
je
push
sub
into
mov
subl
pop
inc
outsb
xor
mov
inc
movsb
push
sbb
add
pusha
in
addl
or
sbbl
jbe
mov
js
scas
addr16
dec
xor
dec
or
imul
or
cwtl
in
inc
push
insb
jge
outsb
or
jmp
lret
jne
inc
ret
es
jmp
scas
inc
add
push
inc
insl
fs
add
int
and
or
lock
xchg
int3
sbb
push
add
mov
jne
int3
cmc
add
jb
mov
loopne
cmp
dec
dec
aas
sub
daa
push
sbb
xlat
pusha
leave
adc
rclb
xchg
mov
sti
jmp
and
mov
and
sbb
cmp
add
in
adc
jle
xchg
or
daa
scas
dec
addl
and
test
and
adc
adc
lea
ret
testb
push
mov
cmp
mov
mov
push
ret
or
mov
out
lds
push
pop
lahf
push
inc
sti
stos
or
jecxz
push
sbb
movsb
mov
mov
and
leave
add
jne
push
testl
pop
fnstcw
inc
pop
jmp
nop
mov
push
negl
adc
sbb
orl
or
icebp
daa
sub
pop
add
sbb
inc
fsubrl
les
push
cmp
push
lea
loopne
loope
popf
push
stos
mov
gs
cmc
add
xor
and
jmp
shlb
xor
jne
xor
pusha
adc
test
dec
inc
stos
or
xor
packuswb
or
or
sbb
ja
or
js
daa
arpl
xchg
pop
insl
push
cmp
pushf
or
cwtl
das
lods
sbb
lret
sub
sub
push
dec
mov
or
sub
sub
popa
or
mov
pop
sbbl
enter
cmpsb
ds
inc
aaa
push
jge
sbb
mov
ljmp
jge
and
xor
mov
fucomi
leave
mov
aaa
add
cmp
jle
aas
pop
push
nop
mov
jae
fwait
sbbl
or
and
xchg
sub
sets
pop
insl
add
rcll
push
sbb
and
push
negl
adc
xchg
mov
aas
das
jae
xchg
or
jg
adc
das
nop
pushf
in
mov
and
cmp
ja
mov
pop
shufps
dec
adc
sub
cs
pop
xchg
mov
inc
inc
xchg
lea
popa
jecxz
ret
jl
sarb
and
ds
arpl
orb
out
xor
cmp
push
add
xchg
push
adc
dec
add
std
enter
loopne
pop
test
mov
mov
sbb
fcomps
mov
sbb
inc
js
xchg
loopne
push
movsl
or
js
les
cmc
stc
sub
adc
mov
imul
sti
sbb
fldt
mov
mov
xorb
test
je
cs
insb
loop
fs
fisttpl
add
adc
movsl
add
hlt
jae
roll
adc
xor
imul
add
xor
inc
mov
es
sub
add
insb
xchg
lds
xchg
inc
daa
push
ficoms
mov
sub
xlat
mov
push
inc
push
sub
testl
cmp
xor
push
ss
je
xchg
jmp
jne
fwait
pop
cwtl
and
psubq
in
pop
popf
loope
dec
push
push
pop
in
adc
outsb
mov
add
jle
gs
xchg
fimuls
in
call
mov
dec
or
jl
je
loop
cmc
rolb
out
negl
mov
dec
loope
vmread
aaa
sbb
aaa
jb
adcb
fisttpll
mov
or
sub
jp
inc
into
push
sbb
clc
dec
adc
add
adc
dec
enter
imul
adcl
or
cwtl
test
add
add
dec
lods
fucom
and
add
or
loop
push
dec
iret
sbb
push
mov
and
lahf
cltd
ja
dec
imul
icebp
push
call
je
pop
pop
adc
jbe
pop
je
pop
movsb
cltd
pop
pop
fs
sub
adc
pop
push
adc
xor
faddp
in
xchg
es
cwtl
xor
mov
xor
sub
cmp
push
add
xor
fdivrs
ljmp
jb
add
cmpl
jle
add
das
dec
insb
add
or
orl
jbe
cmp
mov
push
out
mov
add
mov
icebp
outsl
pop
mov
cltd
dec
dec
sbb
mov
ljmp
mov
mov
sub
mov
mov
pop
fldcw
add
sub
scas
cmpsb
lock
in
sbb
cmp
jno
std
inc
sub
push
clc
cmp
or
xor
dec
movsl
in
or
call
mov
je
pop
rorb
fmul
ss
pop
mov
enter
ret
aaa
pop
add
ljmp
dec
ja
das
add
fldt
mov
mov
roll
rclb
push
imul
jmp
movb
out
div
or
jmp
cmp
inc
jo
xchg
je
je
inc
push
mov
imul
shrb
cltd
shlb
mov
daa
add
sub
or
add
or
or
jo
pop
or
mov
and
pop
sahf
mov
dec
or
inc
mov
out
test
mov
pop
pop
jg
adc
pop
jmp
mov
insl
add
sarb
scas
add
mov
and
testl
push
fiaddl
or
jle
out
push
andl
and
jle
adc
loopne
mov
ficomps
int3
add
dec
movsl
jb
mov
push
test
clc
fsubrs
xchg
dec
mov
mov
mov
dec
movsl
push
or
or
cmp
xchg
add
pop
jmp
cld
stos
cmp
test
pop
shlb
inc
dec
jnp
add
sbb
rorl
scas
test
fmull
or
in
jmp
sbb
xchg
cmp
clc
daa
xchg
outsb
mov
xchg
or
or
imul
rorl
adc
repz
add
cmpl
mov
or
dec
add
xchg
and
add
dec
popl
pop
repnz
add
jo
mov
pusha
and
jo
fists
dec
sarb
push
pop
inc
call
inc
xchg
jge
dec
and
adc
add
xchg
arpl
sbb
add
mov
or
cmp
int3
notl
fnstcw
push
jbe
pusha
daa
test
es
sub
and
subb
push
dec
adc
add
dec
pop
les
lds
jae
jne
sub
cmp
mov
call
loopne
jge
lcall
jne
add
sub
in
and
mov
loopne
jne
ret
int3
sub
mov
push
inc
leave
adc
loope
mov
jl
mov
cld
add
or
cmp
sub
sub
push
cmpsb
add
adcw
cmp
test
jae
sarl
loopne
test
fcom
hlt
add
dec
inc
lret
or
xchg
cmp
cmpsb
adc
movsb
int
insl
mov
lcall
xchg
sqrtps
adc
imul
sbb
loope
loopne
mov
negb
rolb
push
adc
fwait
cltd
add
or
add
repnz
hlt
xchg
addr16
mov
jne
pushf
lret
xchg
sbb
jecxz
mov
push
cld
orl
bound
test
aam
andb
add
dec
jne
loopne
ret
loope
lea
lea
xchg
push
insl
pusha
mov
aam
adc
push
mov
mov
es
adc
testl
shrb
adc
sarb
xchg
rorl
lock
sbb
mov
dec
gs
sub
mov
cmpsl
ret
mov
testb
sub
sbb
in
push
mov
movsb
mov
stc
jbe
mov
fwait
xchg
or
inc
and
rolb
arpl
lods
aaa
or
mov
test
lcall
outsl
jnp
mov
shlb
mov
pop
and
inc
jmp
repnz
xchg
push
fcomip
jno
cltd
in
mov
dec
sbb
ret
mov
sbb
push
xor
or
ljmp
out
mov
icebp
lcall
sub
jb
aaa
mov
mov
push
test
inc
mov
imul
xor
gs
jo
jle
add
imul
inc
in
lock
add
fs
cmp
insl
dec
mov
jmp
inc
or
in
adc
and
imul
and
push
or
test
orl
addr16
or
imul
sub
jnp
sbb
xlat
push
jno
ret
or
xor
sbb
and
sub
push
add
insb
add
or
and
xchg
mov
inc
adc
sub
mov
sub
sub
sbb
sub
xor
add
mov
jne
out
adc
dec
or
mulb
inc
sbb
jo
cmp
adc
or
inc
aaa
in
aas
iret
mov
enter
cmp
fnstenv
inc
mov
dec
orl
adc
inc
loopne
andb
movsb
jo
mov
mov
dec
push
add
gs
fisttps
sub
and
sbb
xchg
fidivs
mov
add
pop
sarb
and
fdivs
mov
rcr
sbb
pusha
int
push
push
inc
dec
ret
sub
mov
push
repnz
mov
dec
insl
sarb
push
sbb
mov
push
and
sub
add
outsb
add
hlt
outsb
mov
orl
mov
rol
cmp
mov
and
cmp
adcb
pop
mov
pop
cmp
push
mov
xchg
xchg
movb
push
cwtl
push
dec
ljmp
jge
sub
mov
in
sbb
push
add
sub
push
pop
loope
nop
push
add
call
add
xor
jg
push
scas
lret
ljmp
ja
push
mov
xchg
fldcw
xor
mov
xchg
mov
cmp
lcall
cmp
push
jg
addb
cmp
sub
sub
leave
pop
xchg
in
push
push
ficoml
add
int3
xchg
mov
sub
test
in
fldl
push
rorb
test
stc
mov
mov
scas
jmp
pusha
push
sbbl
dec
dec
pusha
push
hlt
add
arpl
xorl
cmp
push
sub
adc
lock
fldenv
dec
or
sub
fs
lock
pop
sub
orb
aaa
pop
pop
xor
jbe
dec
scas
mov
outsb
adc
mov
add
cmpl
push
adc
pop
sub
add
adc
jmp
or
lcall
mov
int
lahf
fists
repz
cmpb
xor
pop
mov
pop
xor
jnp
dec
push
xor
inc
clc
xchg
lret
clc
js
iret
cmpl
xor
and
xchg
cmp
movsb
loopne
inc
leave
add
imul
cld
jl
sub
add
inc
push
rorb
cld
or
dec
add
xchg
loopne
fmuls
adc
int3
push
test
lods
dec
lods
out
enter
enter
loopne
je
clc
adc
bound
sbb
cltd
pop
clc
jae
loopne
aad
out
call
pusha
imul
fimull
pop
fwait
xor
ret
ss
hlt
push
xor
movsb
dec
mov
xor
inc
stos
pop
data16
push
ret
sub
cmp
sub
pushf
je
test
cmp
dec
add
xchg
jb
stos
xchg
test
cs
sbb
iret
push
push
sbb
jb
or
inc
es
or
sahf
sub
mov
cmpsb
or
lcall
fnstsw
rolb
or
and
cwtl
fnstenv
rorl
add
loopne
lock
pop
add
pop
popf
push
iret
iret
insl
js
cmp
dec
or
fbstp
xchg
or
mov
xchg
and
push
or
std
and
scas
loope
jmp
dec
loope
and
psubq
or
aas
daa
cmp
mov
mov
mov
ds
add
mov
push
ds
or
push
stc
xor
adc
loopne
outsl
aad
inc
and
pop
mov
fcmovne
lock
mov
jg
adc
fs
test
loope
in
pop
arpl
stos
push
pop
int
sbb
xor
cli
cltd
test
popa
je
mov
lds
lock
and
fcomps
sbb
jno
adc
pop
lret
mov
xor
push
xor
fsts
pop
add
cmpsl
xor
dec
fcmovnu
dec
cmpb
adc
mov
xor
shr
pop
or
mov
mov
pop
mov
inc
inc
faddl
sbb
ss
adc
and
test
xlat
test
cmp
ja
je
pop
or
pop
insb
mov
xor
xlat
add
sbb
insb
repz
aaa
movsl
inc
notl
xor
and
inc
enter
in
push
or
and
out
and
movsl
or
jl
clc
jae
sbb
push
jne
fs
xchg
js
add
add
xor
subl
aas
fcompl
loopne
inc
push
lds
mov
ret
sbb
pop
fldenv
jg
leave
or
push
sub
loop
subl
aas
add
mov
pop
add
push
shrb
mov
dec
mov
aam
adc
aaa
shrb
cmp
test
mov
fsubs
in
dec
mov
rorl
jle
xorl
mov
jno
jns
adc
lds
cmpsl
addr16
lds
outsb
js
fs
adc
sbb
adc
and
push
mov
and
inc
mov
xchg
fistl
add
adc
inc
pop
jg
inc
or
add
es
push
inc
push
jmp
mov
popa
pop
pusha
pop
ret
push
cmc
push
mov
push
mov
les
aaa
push
fiadds
xor
mov
jp
adc
nop
stos
xor
and
inc
mov
mov
or
xchg
push
movl
adc
in
inc
scas
mov
fimuls
or
inc
bound
inc
adc
or
push
adc
hlt
add
test
ljmp
jno
inc
sbb
adcb
mov
push
jne
ja
push
adc
mov
and
adc
fwait
sarl
jo
cmp
jne
dec
inc
das
adc
or
rorb
addb
out
cmp
es
xor
or
insb
lcall
cmp
es
mov
sarl
call
call
sbb
sti
ljmp
cmp
xor
sarb
push
lds
pop
lock
adcl
inc
xor
fadds
cmp
and
mov
or
and
sbb
imul
mov
cwtl
pop
mov
push
mov
adc
loopne
adc
cmp
gs
dec
jne
daa
jp
mov
pop
pop
leave
pop
popa
lea
das
xchg
xchg
lea
insl
add
mov
aam
push
adc
popa
les
loopne
lock
sbb
adc
cld
cld
mov
aaa
mov
cmpsl
inc
cmp
or
mov
push
pop
lea
and
push
mov
in
popa
loop
sub
sub
push
jmp
and
or
add
dec
roll
adc
adc
xchg
push
popa
test
pushf
out
into
pop
add
nop
in
popf
inc
out
cmpl
test
mov
push
adc
jecxz
bound
lock
push
adc
icebp
outsl
xor
sub
jo
flds
out
jo
imul
fincstp
pop
mov
ljmp
ds
dec
adc
push
xchg
add
aaa
add
xchg
jo
ds
mov
sbb
pop
mov
pop
vpsraw
mov
mov
sub
pushl
ss
pop
js
insl
jle
push
pop
xchg
mov
ss
and
jge
xlat
mov
add
mov
xor
loope
lret
dec
cmpsl
push
pop
imull
pop
imul
fsubr
sbb
adc
je
mov
add
jle
push
push
sti
pop
push
or
sbbb
gs
jns
iret
pop
dec
mov
sbb
dec
or
add
cvtps2pd
or
loopne
cmpsb
test
and
or
hlt
mov
cli
xor
cmp
mov
jns
in
in
adcb
call
loopne
xor
call
mov
les
jae
test
enter
add
xor
add
mov
adc
dec
aad
ja
pop
sti
jnp
cmp
lcall
mov
sub
mov
adc
or
bound
fnstcw
cmp
sub
and
or
push
pop
lea
pop
sbb
mov
add
xor
sbb
sbb
inc
adc
fisttps
lea
inc
outsb
inc
add
jle
ret
insb
ret
decl
out
or
add
popf
movsb
fisubl
add
iret
mov
fstp
clc
jp
imulb
pop
clc
add
shlb
in
imul
pop
aaa
or
push
sahf
bound
jg
push
cld
add
sbb
adc
lret
lock
clc
das
and
pop
mov
mov
aam
xchg
fsubr
push
sub
pop
mov
movsb
out
dec
lret
add
ret
popf
pop
mov
dec
and
les
dec
jmp
subl
je
sbb
mov
lds
dec
fsubr
lock
add
mov
push
test
or
mov
rolb
inc
cltd
testb
int3
or
or
test
fs
mov
pushf
push
insl
adc
imul
stos
add
ret
push
pop
pop
lds
test
je
fsubrl
sbb
dec
adc
dec
iret
inc
cld
inc
or
jg
lea
mov
push
mov
adc
ja
dec
mov
adcl
aaa
push
fs
push
pop
das
fadds
xlat
push
aam
add
xor
pop
xchg
cmpsl
ret
push
sub
cmpsb
add
in
dec
xchg
adc
pusha
loopne
dec
push
jnp
test
testl
push
pop
mov
jo
sbb
push
pop
jnp
and
es
sub
add
or
push
inc
inc
mov
cltd
xor
adc
xchg
pop
add
idivl
add
sbb
sbb
adc
push
xchg
in
jp
lea
je
xchg
cmp
ds
push
cmp
pop
mov
add
into
insb
mov
inc
cmp
sub
test
lock
push
enter
push
xlat
mov
sbb
dec
loopne
and
inc
pusha
add
or
pop
and
cmp
fmuls
cmp
clc
insl
insb
jmp
xor
adc
or
roll
inc
setns
add
lods
xor
sub
cld
test
shll
push
push
aam
orl
sbb
jbe
imul
or
pop
mov
adc
jne
or
pop
jo
ret
repz
cld
cmp
cmp
dec
shll
js
jne
outsb
shr
mov
or
inc
es
iret
clc
sub
add
imul
out
test
inc
adc
clc
push
lea
inc
mov
and
xchg
ss
inc
xchg
imul
or
inc
mov
or
pop
js
notl
adc
popa
xor
cltd
movsb
addr16
add
sbb
cmc
add
adc
jle
and
jg
lock
jp
cmp
and
add
adc
xchg
adc
and
mov
add
cmp
sub
fnstenv
pusha
loopne
mov
dec
sub
cmp
jge
and
sarl
jmp
adc
dec
or
jl
cmp
sbb
push
xchg
jg
idivb
imul
mov
sub
mov
ret
or
add
and
call
out
stos
cmp
fisubs
je
xlat
add
or
inc
fistps
push
add
sbb
pop
pop
sub
jne
mov
gs
push
push
jo
test
adc
pushf
test
fwait
ret
or
jne
inc
das
pusha
add
das
and
in
je
sub
es
and
das
dec
jnp
sahf
fnstsw
add
add
xchg
fadds
je
movsl
lods
and
aad
clc
pop
or
push
or
and
jne
jmp
lcall
or
sbb
and
fwait
cmp
lea
shll
xor
xor
call
shlb
adc
andb
push
mov
cwtl
jmp
decl
ds
daa
push
movsb
inc
and
lock
sbb
xchg
testl
test
xchg
jge
lcall
xor
iret
mov
popa
mov
movsb
adc
xor
and
and
arpl
bound
out
dec
or
jle
mov
outsb
loopne
fisubrs
jb
fldl
insl
in
inc
push
push
je
add
ficompl
hlt
pop
inc
imul
ds
xor
jl
sub
das
add
out
insb
inc
push
mov
xchg
imul
or
or
daa
and
lcall
lea
cmp
pop
cmp
fs
sub
inc
lcall
es
imul
clc
inc
inc
mov
dec
shlb
test
mov
hlt
cld
je
sbb
jo
mov
jnp
enter
movsl
adc
inc
push
call
cmp
cwtl
rcrb
hlt
xchg
sbb
insl
fistpl
and
insb
mov
pop
add
adc
inc
and
dec
std
rorb
mov
sbb
adc
imul
sbb
mov
add
out
aas
outsb
inc
mov
push
jle
push
icebp
xchg
out
mov
jbe
rcrl
ja
mov
addr16
rcrb
inc
fsubr
push
pop
jle
sub
mov
lcall
xchg
and
mov
sbb
sub
fiadds
mov
jb
leave
push
sbb
fstpt
lods
mov
adc
loopne
repz
jns
sahf
cmp
pop
hlt
fisttpl
sub
adc
sbb
push
push
dec
ret
sbb
in
mov
pusha
cmpsb
jmp
mov
xor
rclb
and
js
push
xchg
adc
ret
ss
in
xor
or
pop
gs
add
inc
and
leave
mov
shlb
insl
dec
and
and
dec
in
xlat
add
or
enter
adcb
xorb
in
lret
dec
and
mov
aaa
stc
cmp
ss
push
test
maskmovq
testl
push
sbb
mov
pop
jge
xor
outsb
or
dec
pop
out
inc
jb
jo
out
pop
sbb
or
or
lcall
inc
jae
nop
xchg
popa
jg
inc
movsl
mov
xchg
xor
sub
insl
lcall
adc
sub
dec
add
inc
nop
mov
int
push
xchg
push
pusha
lock
inc
sbb
sub
cmp
fisubrs
xchg
or
roll
sub
adc
mov
das
add
jo
jmp
push
aaa
add
imul
add
add
xchg
and
or
rorb
loope
adc
push
jmp
adc
adc
subl
inc
inc
inc
dec
rolb
iret
popf
lret
mov
fisubs
or
xlat
cs
loope
bound
fildl
cmp
jne
sub
xor
jecxz
xchg
in
pop
adc
ss
dec
arpl
mull
ljmp
lret
xor
add
inc
push
cmp
cmp
mov
imul
lods
adc
cmp
lock
adc
add
mov
dec
lock
dec
insb
scas
lret
mov
jb
stc
pop
sbb
and
bound
jne
mov
ds
jns
xchg
or
inc
push
push
or
mul
push
cmpsb
xchg
lret
cltd
nop
adc
cwtl
adcb
mov
xor
cs
and
rcrl
mov
enter
sbb
subb
leave
dec
cwtl
push
outsl
push
sbb
lods
or
or
sar
jns
xchg
inc
xor
dec
push
pop
and
mov
sub
fs
jne
add
add
sbb
hlt
add
xor
push
ds
inc
std
clc
imul
sti
pop
daa
test
or
lcall
push
mov
fsubrs
fcomp
adc
push
pop
push
outsl
sbb
sahf
data16
or
mov
push
or
sbb
out
cmp
insb
aas
movsl
fs
mov
jg
push
inc
scas
dec
daa
cmp
fcoms
rolb
push
pop
movb
fcoml
cmp
adc
xor
dec
cmp
push
mov
dec
add
ret
sbb
jo
inc
or
mov
inc
push
stc
xor
lock
push
xchg
hlt
pop
popf
sbb
cli
stos
stos
insb
js
out
xchg
lcall
mov
js
out
push
jnp
imul
pop
rorb
dec
test
jne
add
push
sbbb
xchg
arpl
mov
shrl
mov
mov
adc
cmpl
repz
push
adc
sbb
jecxz
test
popl
dec
mov
sub
cli
or
dec
mov
movsb
or
mov
push
adc
sub
mov
fdivrl
outsb
out
es
jecxz
cltd
inc
js
dec
loopne
enter
lods
xchg
jmp
xchg
xor
jecxz
pop
mov
mov
sub
sub
stos
shlb
loope
mov
push
mov
inc
mov
out
and
inc
lock
ja
inc
or
out
inc
sbb
mov
call
mov
cmp
pop
mov
or
cli
aad
mov
mov
mov
xorb
or
dec
jmp
pop
inc
cld
or
push
push
adc
lret
sbb
xor
pop
ret
movsl
push
popa
aam
push
xor
fimuls
mov
inc
std
popa
jmp
dec
push
jne
push
sub
daa
push
and
cs
sub
les
dec
scas
ret
add
mov
sub
inc
mov
xchg
xchg
mov
imull
and
sub
enter
repnz
add
pop
xor
pop
xchg
push
pusha
sbb
shll
lock
data16
adc
xor
cmp
popf
xchg
lea
and
add
fnstsw
mov
sbb
mov
add
xchg
mov
hlt
frstor
xorl
jnp
incb
cltd
add
ftst
jns
or
sub
stos
inc
pop
imul
dec
and
mov
adc
faddl
imul
shlb
xor
inc
mov
cmc
push
lea
cmc
xor
cmp
not
adc
sbb
sbb
add
cmp
pop
mov
jge
adc
sub
rcrb
stos
add
dec
ret
cmp
sub
sahf
or
lcall
loop
dec
push
andl
movsl
and
je
daa
aaa
jecxz
mov
test
imul
or
mov
popl
dec
mov
jns
insl
ret
push
ljmp
push
bnd
ds
add
cmp
sub
adc
jne
popa
sub
pop
pop
aaa
adc
fnstsw
aam
fwait
les
and
addl
mov
faddp
push
or
jo
or
adcl
inc
cmp
or
das
insb
adc
scas
pop
jb
pop
lahf
adc
xor
cmp
push
dec
cmp
or
fildll
insb
and
lea
es
xchg
insb
pop
push
dec
pop
inc
adc
push
inc
fwait
clc
pop
push
mov
mov
xor
xchg
cmp
sahf
pop
pop
pop
sbb
add
inc
pusha
dec
cmpb
lock
shl
add
jmp
daa
push
arpl
les
and
add
sbb
add
lods
xor
minps
push
or
dec
pop
loopne
mov
jp
xlat
pminsw
aam
out
mov
adc
cld
addb
inc
test
int3
adc
adcl
and
test
mov
inc
inc
xchg
inc
fcoms
addl
shlb
mov
push
adc
mov
outsb
inc
inc
inc
push
pop
out
mov
push
das
cltd
xor
push
adc
mov
xor
sbb
fiadds
adc
xchg
lret
sti
inc
loopne
push
dec
loopne
arpl
rcrb
aaa
rorb
je
xchg
je
jbe
cmp
jo
filds
jle
or
in
pop
mov
mov
pop
jecxz
cmp
clc
movsl
dec
das
and
sahf
fsubl
pop
popa
add
lahf
insb
rorl
sub
xor
mov
dec
rolb
les
lods
mov
push
outsl
mov
ja
push
mov
pusha
in
sbb
add
in
push
sbb
in
mov
sbb
nop
jl
cmpsl
imul
mov
mov
es
les
test
aad
sbb
dec
inc
in
cmp
lock
pop
aas
adc
and
int3
and
lods
sbb
adc
adc
pop
cltd
mov
and
cmovge
icebp
xor
pop
adc
mov
gs
mov
int
js
and
jo
xchg
mov
inc
mov
je
add
sbb
pop
fsubs
xor
dec
mov
cs
adc
insl
or
pop
adc
or
push
stc
pop
test
mov
mov
int
or
sub
cmp
add
cltd
mov
mov
lret
lock
adc
inc
push
inc
sub
flds
lock
xchg
insl
push
jo
nop
push
ret
pop
lea
push
cmp
jo
push
push
pop
jmp
adc
andb
cmp
cld
push
jb
cmp
push
or
filds
pusha
int3
push
xorb
pushf
sub
xchg
clc
sbb
inc
jb
push
cmp
int3
jg
xor
cmp
js,pn
ds
call
loopne
pop
jo
xchg
mov
scas
add
stos
cmp
add
xor
scas
and
add
adc
test
mov
add
sti
popa
or
mov
dec
shlb
xchg
imul
ret
sbb
push
adc
dec
testl
in
mov
stos
inc
xchg
lahf
sbb
mov
mov
pop
adc
adc
cmp
cmp
inc
lcall
jl
mov
and
insl
add
push
jne
inc
or
push
adc
sub
push
and
add
jae
aaa
mov
add
xor
or
or
sbb
sub
into
gs
sub
xor
sub
mov
pop
pop
cmp
addl
add
and
add
jo
pop
cwtl
jl
std
testb
stc
fmuls
dec
mov
cli
xor
orl
test
lods
testl
popf
mov
add
sub
inc
add
inc
push
adc
sub
add
sub
and
or
rorl
sub
dec
and
mov
ret
or
mov
lods
pop
or
jmp
or
lea
xor
cmpsb
test
xchg
aam
and
inc
xchg
ss
ficoml
sarb
fs
insb
movb
lods
orl
add
cmpsb
mov
mov
mov
sti
dec
adc
popa
mov
mov
jne
subb
fcompl
or
sahf
addr16
fldl
and
call
rolb
or
leave
lcall
cmpsl
rcl
nop
add
adc
or
mov
fmull
jo
aaa
ss
adc
add
ss
inc
pop
add
mov
xlat
cmp
push
pop
xor
sbb
push
push
push
mov
jg
adc
loop
ror
pusha
fisttpl
xor
in
jb
ret
or
lret
cld
push
push
insb
xchg
push
sub
cmpsl
or
sti
iret
icebp
mov
or
jne
cmpl
dec
ljmp
add
dec
adc
das
adc
mov
mov
fdivrs
mov
xor
shl
sub
pop
faddl
in
enter
inc
mov
mov
or
subl
xchg
push
mov
xchg
adc
jo
loop
pusha
mov
test
push
jo
inc
dec
sub
lcall
mull
and
pop
and
es
repz
mov
rolb
jns
scas
dec
mov
push
ja
add
add
add
jno
fwait
ljmp
fcomps
out
xchg
cltd
or
inc
or
mov
ret
xchg
mov
inc
sahf
xchg
mull
test
push
and
sub
inc
sub
pusha
sbb
or
cmpsl
mov
jl
add
fimull
popa
in
xor
ret
mov
fistpll
aaa
inc
cltd
inc
fmul
faddl
push
aas
adc
add
pop
add
inc
jmp
orb
cmp
inc
mov
jecxz
je
sub
push
sbb
dec
sub
pushf
and
sbb
imul
or
add
movsb
mov
add
and
outsb
pop
jmp
push
popf
add
ret
inc
inc
paddusb
add
mov
ja
pop
or
and
push
outsl
sub
or
fsubr
shr
cmp
mov
loopne
shlb
or
movb
xchg
cmp
add
pop
add
push
add
fstpl
mov
or
push
mov
add
or
mov
xchg
push
xchg
or
cmp
popf
dec
sbbb
fdivrs
test
int
mov
push
jnp
sub
movsb
jb
xchg
fs
nop
lret
jl
xchg
sub
push
mov
pop
dec
in
test
lods
nop
xchg
or
mov
adc
and
or
inc
add
dec
dec
dec
dec
push
add
lahf
dec
dec
inc
xchg
insl
insl
adc
push
inc
and
gs
mov
daa
inc
jbe
cmp
jne
das
push
add
xchg
nop
push
push
push
cmpsb
mulb
das
inc
xchg
xor
das
insl
xorl
jae
pop
sbb
pop
jno
mov
cmc
sbb
push
inc
sbb
into
sbb
je
push
xchg
outsb
notl
mov
inc
add
mov
push
xchg
mov
or
or
mov
mov
in
jae
jp
jnp
or
cwtl
push
cmpsb
and
ret
fisttpl
fisubrl
mov
aam
or
ja
push
adc
jbe
popf
out
loope
ret
mov
jne
sahf
pushf
push
add
xor
dec
or
loope
stc
lods
les
mov
xor
ss
popa
and
xchg
dec
sub
or
dec
or
push
lcall
cltd
sbb
imul
shlb
push
mov
mov
xchg
orl
or
dec
das
inc
pushf
stos
jns
ret
inc
fwait
fwait
js
mov
loopne
xchg
nop
cmpsl
mov
inc
inc
xor
inc
fwait
mov
cmp
je
loope
nop
mov
jp
fldcw
jno
rcrb
mov
xchg
adc
fwait
xchg
fisttps
movsl
add
mov
mull
adc
cwtl
clc
pop
mov
mov
push
xor
jmp
rolb
adcb
push
sbb
roll
push
jg
sbb
jnp
test
data16
mov
mov
mov
push
add
adc
push
sahf
add
in
xchg
push
add
dec
or
xor
mov
sub
call
aad
aas
movl
mov
adc
out
and
sbb
daa
dec
je
jmp
rolb
mov
je
or
je
inc
inc
jbe
adc
rcll
jg
push
pop
fsts
mov
dec
mov
ljmp
es
cs
ret
inc
add
scas
add
inc
pop
in
push
js
ret
adc
les
lahf
push
rorl
adc
dec
aam
adc
jp
adc
shlb
das
test
movsl
push
frstor
roll
fst
sbb
filds
pop
add
sbb
and
add
scas
push
cmp
repz
cmp
mov
loopne
lds
dec
pop
iret
cs
mov
aas
sub
inc
or
mov
sbb
pop
inc
or
cltd
xchg
popa
inc
sbb
inc
xor
dec
or
and
xor
dec
mov
cmp
movsl
or
push
in
mov
into
sbb
pusha
ret
mov
and
lea
and
das
mov
mov
and
repz
pop
notl
mov
or
scas
scas
adc
and
test
jns
imul
in
cmpb
sbb
hlt
jo,pt
fisttpl
daa
mov
dec
inc
leave
push
push
push
push
add
sbb
pushf
cmpsb
jae
aas
rcr
das
daa
sub
insl
xor
inc
or
pop
mov
xor
dec
imul
push
and
push
mov
add
repnz
roll
pop
arpl
insb
push
arpl
imul
out
testl
add
mov
jnp
jo
jb
jb
popa
or
adc
insb
bound
jbe
xor
fimull
es
imulb
neg
in
mov
jb
addr16
insl
iret
adc
mov
arpl
inc
pop
imul
into
fnsave
stos
outsb
insb
das
je
mov
mov
cmpsl
sbb
and
pop
fs
xchg
mov
daa
mov
fdivp
mov
pop
jb
arpl
mov
cmpsb
outsl
dec
pushw
das
jge
or
or
outsl
push
nop
icebp
mov
scas
sbb
xchg
add
and
loopne
dec
inc
ja
and
fs
sub
cmc
clc
or
push
push
outsb
je
fs
jbe
add
add
or
or
add
and
or
ja
or
adcl
movsb
add
test
xchg
shrb
insl
rcrb
and
dec
test
push
clc
movsl
inc
lea
andl
xchg
je
lock
icebp
adc
mov
mov
loop
cmp
cmp
mov
dec
or
int3
mov
rcrb
adc
add
repnz
mov
add
test
mov
or
mov
mov
xchg
jne
mov
loope
or
imul
or
cmp
mov
inc
and
push
push
sub
movsb
sarb
lea
pop
fsubs
jo
xchg
popa
push
divl
andb
adc
int3
adc
mov
cmp
mov
test
xor
out
clc
push
mov
dec
xor
jne
or
adc
sbb
xor
adc
add
rcll
in
dec
sub
or
sub
inc
mov
fcoml
ret
shlb
mov
adc
fisttpl
add
jge
add
push
lret
sub
push
sbb
repz
aas
push
sub
add
xor
add
push
push
test
add
subl
mov
test
add
add
add
iret
repz
add
pop
or
or
or
or
or
or
repz
adc
adc
cmp
repz
std
cmp
sbb
sbb
push
pop
and
and
and
loopne
out
sahf
mov
xchg
push
xchg
test
lret
jns
fucomi
std
push
int
xor
repz
push
arpl
cmp
repz
cmpsl
mov
ds
jmp
or
out
sahf
inc
push
bound
mov
jns
test
ror
sbb
xor
ljmp
insl
add
cmpsb
lods
pop
push
or
xchg
push
adc
adc
lret
or
or
movsb
jb
in
sbb
sbb
pop
push
mov
sub
movaps
and
adc
in
xor
xor
pop
push
mov
adc
inc
push
inc
pop
and
sbb
xchg
lret
sbb
movsb
jb
pop
sbb
in
cmp
xor
test
imul
dec
in
arpl
and
lret
and
movsb
xor
and
and
push
test
sti
lock
and
mov
test
xor
out
cmp
fsubs
push
xor
sarb
fdivrs
add
or
test
add
jne
dec
xchg
mov
and
add
adc
mov
adc
rorb
inc
call
push
clc
insl
out
sub
movsb
sbb
push
push
push
lock
push
repnz
mov
pop
add
dec
jae
in
fldcw
aaa
loopne
faddl
dec
fdivr
pop
dec
int3
mov
cmpsb
and
xor
shrl
push
xchg
cmc
shl
sbb
movb
mov
cmpb
scas
nop
mov
push
pushf
insb
mov
popa
loopne
mov
addr16
mov
fldcw
shlb
pop
je
xor
xor
imul
pop
or
dec
dec
nop
mov
xchg
add
xchg
lds
and
or
roll
scas
or
insb
push
movsl
dec
sbb
outsl
out
fistpll
push
or
in
sbb
add
mov
jg
fimull
rcrb
and
sub
dec
sbb
push
mov
push
fsub
repnz
push
lods
pop
jl
push
sbb
rcll
fidivrs
incl
sbb
movsb
push
adc
adc
aaa
pop
xor
pop
mov
and
mov
xor
je
dec
inc
inc
xchg
mov
sub
mov
adc
mov
push
aas
mov
outsl
xchg
data16
adc
inc
xor
or
je
ret
mov
scas
in
aam
outsl
add
lock
mov
arpl
lds
sbb
repz
sbb
xchg
add
dec
mov
adc
adc
inc
inc
jecxz
mov
dec
stos
push
jl
cmp
std
mov
add
fstps
and
mov
push
nop
add
cmp
cmp
into
js
inc
add
int
cs
jne
dec
ds
add
leave
popa
xor
aam
mov
pusha
or
mov
lock
pusha
cmpsb
test
inc
and
loopne
scas
or
orl
dec
lret
adc
jo
and
pusha
fld
fisttps
inc
mov
sub
inc
jo
or
jns
or
cmp
addl
sbb
nop
push
xbegin
fs
out
lods
push
sbb
scas
push
xor
dec
sbb
mov
pop
adc
inc
jl
pop
adc
test
adc
sub
scas
cmp
or
mov
addr16
add
xchg
movsl
out
addr16
pop
fs
in
xor
lock
dec
adc
add
push
cmpsl
nop
cld
xor
jb
icebp
push
jno
cmp
xchg
push
inc
mov
xor
pop
pop
mov
lahf
mov
loope
cmp
dec
jecxz
icebp
enter
sbb
xchg
jg
xor
ficompl
cmp
insl
pop
sub
adc
shlb
dec
xor
push
imul
mov
test
leave
sub
sub
mov
iret
and
sub
incl
jecxz
bound
mov
fdivrs
pop
sarb
mov
jl
or
adc
push
pop
lds
scas
sar
pop
pop
enter
fcoms
push
or
das
xor
ret
popa
rcll
loope
jmp
inc
mov
out
mov
mov
dec
xor
fadds
insl
mov
imul
add
enter
int3
fimuls
mov
and
leave
inc
push
adc
fwait
loope
jmp
lret
jnp
xor
push
daa
mov
jle
imul
movsl
adc
push
and
push
and
inc
mov
js
dec
sbb
xor
push
pop
xorb
pusha
aaa
add
add
inc
das
add
stos
aam
add
ss
mov
shlb
sub
adc
and
fs
ss
gs
movaps
pop
loop
push
lock
inc
mov
fwait
adc
xchg
xlat
inc
dec
cmpsl
fistl
inc
and
loop
pop
adc
test
inc
sbb
les
xchg
cmp
jl
fadds
test
cmp
lods
inc
or
dec
bound
mov
pop
push
adc
in
jne
push
pop
in
xlat
test
aaa
xor
mov
sub
sbb
xlat
leave
xor
sti
and
jg
test
xchg
xchg
lock
sbb
add
jl
push
add
fbstp
int3
decl
in
mov
sbb
mov
call
xchg
mov
sub
add
in
nop
sub
adc
fsubl
inc
mov
loop
icebp
leave
mov
dec
mov
add
insb
xchg
es
adc
jne
es
nop
aas
inc
push
xchg
roll
add
or
inc
or
mov
push
inc
add
inc
or
dec
and
adc
jmp
popf
adc
cmc
and
into
es
test
sbb
dec
test
int3
push
stos
outsl
and
adc
pop
mov
mov
mov
nop
mov
fstps
fisubs
lea
cmp
jl
pop
sub
and
xor
flds
or
ja
mov
push
mov
jecxz
pusha
adc
lret
fcoml
ret
ja
rorb
add
hlt
mov
cmp
dec
or
dec
and
inc
xor
addb
xchg
dec
mov
movsb
push
and
sarl
ret
xor
es
push
adc
xchg
pop
add
push
sbb
inc
dec
xor
dec
dec
add
sbbl
inc
inc
test
push
xor
les
loope
movsl
mov
pusha
out
insb
das
je
add
das
cmp
sbb
dec
fildl
in
mov
outsl
cmp
adc
cmpsb
mov
stos
adc
sub
hlt
dec
hlt
mov
mov
cld
pop
pop
clc
iret
dec
ds
mov
inc
jae
inc
sub
mov
fiadds
nop
scas
sub
xchg
roll
fists
mov
mov
adc
mov
leave
inc
dec
push
mov
jo
adc
jae
sarb
inc
cld
cmpsb
addl
rorb
aad
add
cmp
ret
jecxz
popa
arpl
xchg
push
ss
movsb
and
pop
fcmovbe
cmpl
inc
dec
inc
pop
orl
push
in
and
in
dec
in
imul
in
mov
scas
jle
and
adc
jne
xor
popf
or
data16
call
add
insl
notl
xor
daa
pushf
out
push
mov
push
movsl
daa
cwtl
pop
mov
rolb
scas
lods
mulb
jns
mov
inc
scas
adc
cltd
mov
lea
pop
sub
push
in
dec
in
jae
pop
sub
dec
in
and
cmpsb
pop
adc
inc
dec
push
cmp
test
orl
es
loopne
mov
inc
mov
add
inc
movsb
loope
jge
push
xchg
adc
rcl
gs
repnz
clc
sub
insl
adc
addl
sbb
in
in
test
movsl
sbb
repnz
jns
adc
mov
push
imul
xchg
adc
sub
out
les
add
dec
data16
adc
jmp
es
cmp
daa
push
mov
mov
or
xchg
insb
dec
cmp
add
stos
or
push
shlb
lock
in
and
sub
in
cmp
insl
push
sub
pop
push
sub
jmp
movl
cmp
cmp
and
sub
jp
scas
mov
test
or
out
sub
loope
jne
mov
repz
adc
sbb
adc
mov
push
dec
add
inc
pop
les
mov
push
out
mov
adc
cld
jb
push
cs
js
test
je
push
cmc
and
pop
dec
inc
into
inc
and
arpl
nop
or
push
cld
push
fcompl
or
adc
adc
jmp
outsl
add
scas
adc
push
add
mov
out
inc
ret
pop
push
dec
pop
jg
mov
incl
ret
mov
adc
add
dec
pop
cmpb
or
or
xor
xchg
dec
cmpb
add
xor
add
ja,pt
jnp
cmp
mov
shlb
mov
inc
push
inc
ds
inc
pusha
in
inc
adcl
out
mov
pop
mov
out
pop
xor
pop
push
inc
in
gs
imul
cmpsb
pop
xchg
push
inc
cmp
shlb
xor
dec
inc
and
add
fisubs
fcoml
or
inc
push
addl
lea
mov
bound
je
nopl
movsb
jmp
add
mov
mov
lock
pop
and
dec
sbb
or
inc
and
sbb
push
enter
and
lock
sub
push
adc
mov
loopne
shll
push
andb
and
pop
inc
adc
ljmp
pop
loopne
and
adc
cli
inc
andb
pop
and
nop
pop
pop
sub
outsl
xchg
xlat
aaa
fs
push
cld
pop
data16
mov
leave
clc
out
add
fdivl
vmread
add
out
popa
jo
test
and
push
cld
jmp
in
scas
loope
push
pop
fcoml
insb
mov
add
sbb
push
test
adc
out
fimuls
pusha
sahf
out
sahf
je
pushf
mov
fdivrs
out
fsub
in
in
mov
hlt
clc
jno
cli
out
xchg
or
enter
pop
loope
adc
sbb
pop
adc
daa
xor
test
lret
mov
outsl
mov
ret
test
add
adc
xchg
push
fwait
out
jmp
push
push
fiadds
movsl
gs
sub
and
cld
pop
mov
pop
mov
lcall
rclb
pop
push
lea
imul
sbbl
mov
xchg
loop
sub
mov
add
sub
enter
mov
cwtl
pop
add
and
sarb
ret
popa
loope
sbb
iret
xor
out
push
sbb
and
iret
mov
adc
add
xchg
add
in
sbb
lock
aas
xor
arpl
add
xor
xor
ds
add
mov
daa
test
ja
aaa
rcrb
or
jmp
xor
adc
and
sbb
or
or
inc
push
or
loopne
dec
and
xor
or
adc
clc
out
fdivrs
sbb
pop
adc
daa
rorl
mov
push
mov
xor
sbb
push
xchg
call
jle
js
cmc
or
cmp
std
mov
daa
enter
clc
out
add
inc
and
mov
adcl
aas
push
mov
sbb
cmp
mov
inc
lret
mov
dec
data16
subb
mov
push
imul
or
or
jne
jmp
sub
or
nop
adc
mov
or
decl
pop
or
arpl
jb
dec
jle
inc
or
dec
adc
push
inc
cmovnp
fmul
adc
sbb
jo
cmp
sbb
fwait
inc
push
inc
loopne
test
mov
sti
sbb
jg
ljmp
loopne
test
add
scas
jmp
ja
imul
int3
mov
sbb
insb
jo
xchg
push
push
orl
xchg
push
xorb
fadds
inc
mov
cmp
ja
pop
in
cmp
test
fadds
add
pop
mov
add
sbb
cmc
mov
mov
sub
mov
inc
inc
push
xchg
push
or
xchg
test
les
lds
jno
add
add
popl
or
adc
into
fsubr
or
xchg
add
inc
mov
and
xchg
test
xor
ret
enter
filds
cs
xorb
and
xchg
loope
imul
fsubr
aas
dec
inc
mov
mov
mov
mov
movsl
add
add
daa
cmpl
insl
dec
imul
push
inc
out
jb
scas
dec
jae
add
and
mov
dec
sti
inc
inc
dec
or
cmp
add
cmp
jne
sbb
pop
jae
mov
pop
inc
jl
cltd
imul
in
xorl
mov
cmp
stos
dec
push
fmull
adc
dec
pop
sub
push
repz
repnz
push
cmp
adcb
dec
mov
push
adc
rorb
mov
lock
xor
mov
scas
lret
lret
out
push
jnp
je
test
clc
movsl
inc
pop
dec
xchg
fcoms
mov
and
cld
je
and
lods
or
loopne
mov
ret
rcll
or
or
mov
dec
jmp
pop
les
sub
push
arpl
sbb
enter
xlat
or
add
sub
push
or
testb
or
cmp
add
cwtl
xchg
dec
insb
lret
cmpsl
xor
push
mov
xor
leave
pusha
lock
js
aad
iret
cmpl
cmp
aas
lea
jb
jge
xchg
sub
ja
jl
or
xchg
push
push
jne
jnp
jne
mov
mov
xor
mov
test
inc
mov
inc
movl
cmpl
pop
and
fstl
adcb
je
inc
ss
inc
jne
jae
and
inc
ljmp
rorb
adc
sub
xor
mov
add
add
sbb
add
into
movsb
add
add
pop
mov
inc
cmp
adc
and
dec
pop
pop
imul
xor
and
imul
or
pop
test
xor
lret
ror
dec
cld
jmp
repz
fld
mov
adc
adc
dec
dec
lods
add
testb
or
mov
scas
mov
dec
fcmovnb
sbb
xchg
add
xchg
popf
jmp
xchg
cmovnp
mov
sti
inc
int3
or
jmp
xor
add
ret
pop
lahf
push
sbb
mov
bt
and
adc
dec
cmp
push
in
addr16
ss
adc
je
sub
lods
add
push
jae
dec
add
js
ss
pop
in
sahf
jp
dec
aas
inc
and
dec
add
cmp
or
jmp
pop
xor
sbb
lock
push
orb
fdivrs
mov
je
test
or
je
out
push
pop
cmp
aas
or
or
xchg
adc
push
pop
and
push
in
xchg
movsl
add
enter
mov
or
pop
enter
or
add
add
outsb
ds
sub
sub
addl
std
adc
pop
and
out
pop
and
push
push
popl
movb
in
inc
fidivs
ds
inc
sahf
pop
imull
insl
bound
xchg
ds
or
arpl
pop
sbb
sub
inc
pop
in
cs
add
movsb
push
pop
add
xor
ja
dec
into
out
insl
dec
dec
sbb
dec
inc
imul
mov
popa
js
pop
je
js
fimull
pop
push
jle
setb
add
les
sub
adcl
nop
ss
add
inc
add
inc
adc
inc
lea
loopne
push
xor
lcall
pop
and
mov
push
adc
fidivl
xor
add
push
lcall
mov
xor
mov
adc
xchg
sub
into
mov
sbb
scas
dec
jo
dec
outsb
pop
repnz
xor
push
cmp
cmpsb
leave
add
inc
clc
xchg
pop
xlat
sub
xor
sysenter
dec
nop
jp
cmp
mov
mov
push
in
dec
insb
add
add
push
subb
imul
pop
inc
movl
andb
or
mov
adc
es
dec
arpl
push
outsl
mov
popf
or
nop
fistl
rorb
or
hlt
mov
decl
sbb
out
mov
das
mov
pop
or
in
add
invd
add
dec
dec
into
mov
inc
shl
int
divl
pop
add
or
adc
mov
add
or
fs
daa
shlb
jb
pusha
xor
data16
jns
inc
clc
loope
mov
pop
push
popa
xchg
xchg
mov
push
shlb
ret
out
gs
divb
mov
not
xchg
sarl
jnp
jne
sbb
push
cs
movsl
adc
adc
push
aas
add
sahf
push
xor
xchg
or
add
outsl
rol
sbb
or
cld
or
mov
test
adc
xor
mov
and
ds
push
push
gs
shr
lea
mov
loope
cld
xor
inc
or
dec
sbb
mov
leave
fdivrs
sti
sbb
insl
mov
push
jb
insl
popa
jb
or
or
mov
faddp
cltd
jnp
sbb
outsb
ds
mov
or
jo
push
mov
es
ja
sbb
lea
push
ja
push
sahf
mov
or
movl
setne
inc
push
or
out
sub
iret
pushf
mov
or
dec
add
push
rcr
xor
out
and
adc
jo
js
inc
mov
mov
add
add
pop
lahf
and
xchg
pop
fcompl
lahf
push
push
dec
and
mov
fisubrs
in
add
ja
enter
fnsave
test
or
add
popa
jae
xorl
push
pop
xchg
push
add
xor
add
add
dec
inc
aad
add
add
add
pop
lret
jo
dec
dec
lds
or
mov
inc
add
iret
xor
add
fsubl
sub
inc
es
or
testl
rorb
cwtl
push
add
lods
mov
cmp
mov
shlb
and
push
sub
adc
pop
das
addb
and
pop
lcall
mov
add
adc
push
inc
push
inc
add
jle
fs
add
sbb
ss
add
dec
adc
or
mov
out
sub
sarb
or
mov
scas
xchg
jnp
scas
ljmp
ljmp
xor
jg
jmp
and
or
jp
into
rorl
jb
push
shlb
repz
jge
jge
push
pusha
in
cmpb
ds
mov
add
lods
sub
xor
insb
ss
dec
pop
and
xchg
fnsave
cwtl
cltd
push
dec
andl
sbb
jns
jmp
pushf
mov
push
in
iret
repz
cmp
cmpsb
push
push
inc
lods
mov
fwait
dec
jnp
ja
pop
jne
push
mov
data16
xor
sbb
mov
push
pop
dec
out
inc
loopne
jp
je
out
rcr
rcrb
push
jl
lcall
aaa
or
inc
mov
and
mov
or
clc
fcompl
push
aam
popf
inc
rcll
push
mov
pop
add
or
shlb
inc
jle
hlt
add
add
push
outsl
int3
or
lds
push
inc
mov
lds
pop
and
adc
sub
inc
in
adc
enter
test
movl
xor
pop
jbe
mov
dec
inc
insb
lock
jns
push
dec
sub
adc
adc
and
mov
xor
int3
xor
test
clc
test
addr16
hlt
std
mov
inc
push
xchg
sbb
push
bound
add
pop
pop
dec
repnz
mov
or
pop
cmp
icebp
xor
in
in
push
add
outsb
or
aas
out
in
inc
fnstenv
push
dec
sub
dec
insl
push
mov
xchg
inc
xchg
xor
test
sbb
ss
loope
xor
inc
cmp
dec
inc
in
push
sub
dec
push
xor
add
frstor
xchg
daa
dec
cmpsl
add
pop
and
test
xor
dec
and
and
push
test
or
pop
and
adc
rcl
idivl
leave
and
push
je
mov
or
icebp
and
push
adc
mov
jo
xchg
pop
mov
lds
faddl
mov
push
es
test
add
popf
or
sbb
sub
sub
sub
sub
imulb
xchg
lret
adc
pop
in
aaa
xchg
sub
ja
cld
pop
mov
or
push
addb
xor
movsb
ret
xchg
test
js
hlt
push
addl
jns
push
pop
add
xor
mov
pop
aam
pop
dec
jle,pn
cwtl
fwait
jne
jne
add
push
in
aas
fldlg2
mov
mov
jl
add
jns
into
xchg
or
inc
nop
sbb
pop
loopne
push
mov
lret
sub
cs
jl
sbb
sbb
repnz
in
pop
xor
adc
mov
adc
and
pop
pusha
lcall
dec
ss
imul
push
js
shlb
test
bnd
xor
and
shrb
inc
fildll
xor
jmp
int
inc
push
loopne
or
les
add
mov
subl
xor
cmp
push
insl
rcrb
andl
cmp
xchg
aas
movsl
dec
fs
pop
adc
jne
mov
inc
aas
dec
push
hlt
jo
xor
rcll
jae
cmp
dec
or
mov
pop
push
push
or
pop
int3
pop
inc
aad
stc
push
mov
inc
jne
inc
cwtl
stos
xlat
shll
inc
scas
jae
push
es
bound
or
fwait
mov
fs
and
dec
test
mov
into
rclb
jo
and
les
jl
sbb
stc
inc
add
or
and
cmp
rcl
mov
xor
cwtl
pop
fmuls
fadds
mov
inc
loopne
inc
add
inc
and
test
mov
push
rorl
or
jb
stos
dec
je
popf
pcmpeqd
sti
dec
add
ljmp
dec
enter
add
cmpsl
pop
xchg
icebp
and
and
mov
xorb
pop
jns
call
adcb
popa
movsl
fcomps
add
inc
dec
fistps
dec
cmpsl
inc
fwait
dec
call
or
xor
loope
subl
push
sbb
cmp
daa
mov
add
push
add
push
or
push
jns
js
xor
nop
lock
mov
jno
lds
xor
push
pop
pop
or
insb
roll
xor
or
xor
inc
pop
jge
or
or
sbb
or
jge
pop
sub
test
pop
xor
pop
pop
cmp
jge
sahf
inc
inc
loopne
inc
shl
pop
das
in
push
or
push
adc
push
push
add
in
pop
enter
push
jb
fdivrl
add
or
js
mov
push
dec
movsl
sbb
dec
arpl
and
pushf
or
sub
adc
enter
sbb
aas
data16
imul
hlt
dec
or
sti
mov
test
cli
cmpsb
cmp
pop
lods
push
in
and
inc
xlat
rcrb
pop
popf
or
pop
push
jo
mov
out
mov
fists
or
xchg
mov
test
mov
ss
popf
sub
pop
sub
daa
pop
pop
push
stos
dec
enter
adc
sub
add
jb
adc
outsl
or
in
push
adc
add
sbb
jecxz
in
mov
mov
test
mov
mov
inc
cltd
cmp
scas
gs
xor
mov
mov
fcompl
or
xchg
jle
fcom
or
xchg
nop
js
jle
xorb
orl
in
out
sbb
jo
pushf
dec
ss
pop
sbb
and
add
pop
test
dec
ret
ljmp
push
andps
sub
inc
jo
popa
sahf
nop
ret
pusha
mov
ja
and
add
fdivrl
adc
jmp
pop
stos
pop
sub
shlb
xor
das
xchg
add
pop
and
repnz
inc
ss
push
add
or
daa
xlat
xor
mov
movsb
inc
insl
adc
popf
mov
lods
cmp
adc
mov
adc
in
jnp
dec
or
sbb
sub
es
lods
test
mov
mov
xor
cltd
mov
cmp
jno
xchg
ret
out
pop
add
xchg
add
push
lods
inc
cmp
sbb
popa
sub
or
je
and
push
push
inc
push
es
and
lea
jp
jle
or
xchg
push
jne
mov
xchg
shll
and
xlat
dec
movsb
xchg
dec
inc
add
negl
or
or
cbtw
in
mov
or
and
jmp
adc
jb
add
sub
sbb
or
xchg
lcall
mov
xchg
test
stc
jbe
lods
mov
enter
enter
mov
sbb
shl
dec
sbb
sub
fsubrs
scas
mov
adc
cwtl
dec
sbb
daa
hlt
xchg
bound
adc
inc
fidivs
hlt
mov
jnp
ds
pop
pop
inc
add
jo
push
mov
mov
xchg
inc
cld
shrl
adc
inc
dec
dec
sub
mov
jp
loop
adc
jbe
jno
add
jecxz
mov
sub
fdivp
or
mov
push
sbb
loopne
xor
sbb
xlat
inc
call
lret
jecxz
arpl
je
stos
ss
add
movsl
rclb
or
dec
jae
aaa
aaa
jne
mov
xor
jg
jl
fldcw
gs
push
mov
xorb
sbb
adc
daa
test
add
xchg
es
xchg
fisubrs
ret
in
mov
std
mov
sub
xchg
inc
or
add
iret
insb
in
xchg
mov
push
stos
adc
push
mov
xsavec
jl
les
and
shr
adc
mov
mov
dec
hlt
push
xchg
mov
notb
mov
jg
sub
jecxz
cmp
ljmp
faddp
xchg
daa
fnsave
fidivl
call
and
loope
push
loopne
outsb
xchg
push
insl
iret
sub
sub
inc
popa
iret
in
shrb
lret
jae
or
adc
inc
add
adc
push
push
jmp
push
xchg
mov
sbb
dec
es
push
mov
cs
cwtl
mov
add
subb
cs
add
in
rcrb
add
add
cltd
sbb
dec
arpl
addb
ljmp
or
int
pop
addr16
and
pop
int
movsl
nop
xchg
sub
xor
cwtl
mov
cwtl
or
mov
dec
sbb
loop
push
push
push
add
cmpsl
add
push
stos
movsl
lods
fistl
aam
subb
lock
ret
jb
mov
and
inc
lret
xchg
cmp
int
and
xor
sbb
cld
sbb
push
xchg
mov
push
sarl
jno
inc
or
cmp
and
or
add
or
sbb
push
lea
add
inc
add
add
pop
xor
daa
mov
or
inc
push
inc
inc
aam
popa
add
sub
or
movsb
xor
inc
or
fistpl
das
pop
rcl
scas
inc
subb
hlt
fwait
add
insl
and
push
adc
ds
fadds
lock
imul
outsl
testl
add
jmp
popa
pop
xor
inc
sub
xor
or
inc
add
int
inc
dec
dec
sub
pusha
add
or
push
xchg
imul
and
int3
es
pushf
movsb
sbb
mov
inc
scas
dec
push
movsl
mov
popa
adc
cmp
pop
jns
jmp
inc
aas
fdivs
pop
and
outsl
push
hlt
adc
cmp
cmp
adc
sarb
push
sbb
pop
mov
xor
adc
pop
jmp
sub
dec
ret
sub
flds
rolb
shl
adc
dec
gs
fdivrs
mov
iret
jo
and
push
daa
pop
add
inc
add
lock
pop
xchg
cmp
xchg
add
sub
outsl
push
sub
mov
test
sti
pusha
or
pop
sbb
push
fwait
inc
add
std
or
sub
neg
jmp
add
test
roll
scas
loopne
les
cli
add
mov
push
push
test
cmp
xor
pop
push
pop
and
push
mov
int
pop
or
xchg
and
jmp
adc
cmp
xor
inc
push
aaa
or
cs
or
pop
and
push
icebp
xor
inc
adc
dec
popa
test
and
mov
repnz
sarb
pop
mov
and
adc
test
mov
or
and
jne
es
sub
inc
sbb
pop
adc
insl
and
call
pop
shll
cmp
or
inc
mov
sub
add
shll
ljmp
inc
inc
or
pop
cmp
sti
adc
sti
jmp
mov
mov
lock
and
push
sub
cmpb
and
sbb
jne
fucom
mov
and
test
dec
sbb
xchg
sub
or
jmp
push
xor
imul
cmpb
and
mov
lods
xchg
xchg
jno
ret
mov
jge
pusha
push
outsb
mov
mov
or
in
lods
inc
jmp
sub
xchg
pop
add
test
shr
mov
adc
sub
inc
bound
movsb
aam
sub
cltd
lods
xchg
and
adc
rorl
or
and
jp
dec
sti
sub
jbe
mov
add
lahf
mov
jle
push
dec
int3
pop
dec
mov
xchg
imul
inc
xor
rcll
sbb
or
pop
pop
xor
adc
jg
gs
lret
fs
rcrb
hlt
sbb
cmpsb
rclb
pusha
movsb
jne
test
sahf
and
psraw
xor
pop
scas
cmp
je
mov
mov
iret
fdivrp
push
dec
inc
ret
iret
push
sub
sub
out
shrb
jo
push
or
ret
xorl
xor
cmp
mov
outsb
lcall
cmp
faddl
ss
or
dec
pop
das
inc
inc
inc
inc
ds
loopne
sbb
or
sub
sbb
fidivs
pop
cmp
mov
add
push
xchg
fwait
mov
push
test
mov
sbb
or
or
add
xchg
les
xor
or
je
mov
outsl
sbb
mov
mov
push
adc
test
add
arpl
sub
xor
insb
dec
clc
faddp
orl
ret
cmp
sub
mov
sbb
xlat
xchg
test
cltd
pop
imul
hlt
sbb
inc
in
push
and
pop
dec
sbb
mov
cmp
xor
inc
enter
cmp
test
cmp
xor
enter
fsubrs
or
push
sub
pop
ret
nop
fsubr
rclb
add
je
cmp
mov
mov
mov
leave
sbb
push
cmp
mov
push
jb
sbb
mov
push
mov
stos
ja
push
lret
les
pop
push
adc
out
sub
or
jecxz
push
or
pop
pop
shll
out
inc
or
add
push
mov
in
and
push
xchg
inc
xor
mov
loopne
mov
mov
adc
or
or
sbb
popa
rorb
push
aam
adc
cmpsl
lcall
scas
fadd
and
shrb
jp
inc
ljmp
into
test
aaa
push
sub
xor
inc
dec
and
lds
iret
aam
loop
and
es
sub
push
cmc
and
arpl
cmp
ss
cmpsl
cmp
je
out
jecxz
out
enter
sbb
push
sub
add
cmp
dec
adc
mov
jne
dec
inc
inc
imul
dec
mov
lock
jo
stc
cwtl
xor
cwtl
out
sbb
cmp
outsb
fdivrl
pusha
mov
loopne
adc
aaa
inc
and
loopne
add
mov
lock
xlat
add
dec
ja
je
aam
icebp
loopne
or
or
jmp
mov
lahf
xor
add
int
lahf
pop
add
pop
add
outsl
jns
mov
xchg
inc
sbb
push
pop
je
mov
lock
mov
outsb
push
sbb
das
enter
add
push
je
mov
pusha
sub
or
sbbb
inc
adc
movb
mov
or
mov
fistps
sub
fs
jmp
dec
outsl
push
insb
in
inc
mov
xchg
dec
shl
inc
icebp
sbb
cli
rcl
sbb
jp
mov
inc
outsb
push
cli
pop
mov
add
popl
cmpsb
push
or
push
mov
loope
xchg
loope
rcrl
pop
add
outsb
sbb
xchg
xlat
sbb
mov
sbb
xchg
dec
ret
mov
outsb
xchg
lea
push
mov
push
sbb
ss
mov
loop
call
fdivrp
popf
dec
outsl
or
lds
sbb
out
sbb
outsb
scas
jnp
pop
mov
push
nop
fstps
ja
mov
mov
sbb
sbb
sbb
xchg
xchg
xor
inc
xor
jge
sub
adc
inc
std
adc
pop
rcll
push
insl
lea
stos
inc
jge
jb
fcompl
lock
in
push
in
push
xchg
and
add
jmp
or
mov
jo
daa
leave
push
xchg
aad
xorb
xor
scas
mov
dec
mov
dec
je
lods
sbb
and
loopne
mov
mov
xchg
lahf
imul
imul
and
shlb
cwtl
ss
popa
cltd
popa
and
jne
sbb
lock
fildll
fimuls
mov
sbb
cmp
ret
cmp
push
xor
nop
jb
fbld
mov
push
adc
addb
add
iret
xor
push
jle
cli
push
cmp
dec
add
insl
cmp
negl
arpl
and
je
add
mov
or
scas
roll
fs
test
sbb
cmp
mov
ret
js
xchg
cmp
loop
add
dec
adc
mov
xchg
jb
push
jb
push
dec
sub
mov
cmp
add
mov
or
and
in
add
fistps
ret
mov
add
dec
out
mov
test
add
mov
mov
add
xchg
ds
or
sub
pop
adc
sbb
or
sub
sbb
add
xor
jl
scas
dec
and
and
jmp
add
out
push
cmp
cmp
xor
add
xlat
mov
xchg
cmp
ror
icebp
mov
pop
jo
frstor
test
xchg
daa
test
mov
xchg
call
push
fcmovb
fists
lea
inc
add
les
insl
loope
lock
push
rcrb
and
movsb
fadd
dec
lds
daa
orl
and
adc
mov
adc
movb
pop
cmpsl
add
mov
cmp
dec
repz
pusha
jno
jae
jns
pusha
add
mov
push
inc
es
inc
or
mov
nop
sbb
es
mov
push
loopne
cmpsb
mov
or
movsb
jmp
mov
jge
push
or
push
stos
cmpsl
push
int3
adc
adc
cmp
clc
fimull
or
aas
jb
xor
movl
adc
adc
iret
sbb
sub
mov
jp
push
jl
hlt
inc
sbb
cmp
lods
cmpsb
or
cmp
jp
mov
js
xchg
mov
test
and
cld
mov
stos
loopne
or
xor
test
cwtl
cmp
dec
or
inc
mov
add
jo
fadds
into
inc
aam
mov
lea
mov
add
jbe
in
cmp
and
enter
shlb
add
test
sub
imul
pop
cmpsl
push
adc
push
add
es
inc
adc
stos
pop
cmpsl
fists
addb
jg
arpl
in
mov
and
pop
xchg
and
mov
mov
pop
cltd
and
inc
mov
or
addl
mov
mov
nopl
sbbb
dec
int3
mov
ss
or
add
mov
testb
cmp
cld
dec
lods
das
push
jbe
sub
sbb
pop
mov
ljmp
fldl
dec
adc
iret
xchg
add
mov
xorl
int
test
call
adc
xchg
xchg
adc
sub
pop
inc
inc
jg
cmp
insl
and
cmp
inc
nop
int
xorl
xchg
sbb
in
cmp
sbb
scas
bnd
aaa
dec
pop
lods
inc
inc
mov
mov
mov
or
inc
cld
adc
lock
jne
mov
stos
fcoml
hlt
cmp
mov
sti
rolb
imul
mov
orb
ret
mov
xor
cmp
nop
xor
mov
inc
push
sub
push
cmp
inc
mov
out
mov
std
adc
cmp
cmp
xchg
ret
pop
mov
cmpsl
in
repnz
or
and
or
or
je
mov
nop
push
pop
mov
pop
enter
or
and
sub
adc
xor
int
push
xchg
shr
push
sbb
xchg
adc
mov
and
sub
jecxz
push
and
push
cmp
mov
xor
xchg
rolb
out
cmp
sarl
inc
push
sub
dec
mov
xor
and
push
jb
adc
sbb
inc
ljmp
or
pop
rol
add
and
mov
or
aaa
lcall
mov
mov
ret
inc
cmp
inc
inc
cltd
nop
add
dec
lock
in
mov
fwait
mov
inc
jge
call
je
out
add
cs
jmp
nop
add
xor
inc
jbe
lods
fwait
xor
push
cmp
cltd
push
enter
and
add
mov
add
ss
movsb
add
out
mov
or
nop
push
adc
les
cmp
aaa
adc
cs
xchg
mov
outsl
aaa
xchg
nop
outsl
adc
punpcklbw
pop
or
adc
dec
enter
pop
and
repnz
jns
push
inc
mov
push
cs
rcl
pop
push
in
fs
mov
xor
addl
adc
and
push
fisttpll
jae
push
or
push
ret
stos
ret
nop
xor
jl
adc
push
jns
cmp
mov
mov
test
push
int3
xor
adc
mov
jl
shlb
add
push
loopne
inc
js
xchg
out
pusha
in
xor
sub
push
and
imul
pusha
test
mov
fistps
adc
jecxz
cwtl
mov
lods
icebp
dec
rorl
cmpb
inc
movsl
addr16
inc
pop
pop
sub
ss
adc
jl
inc
or
test
push
pop
adc
and
mov
arpl
mov
imul
arpl
enter
and
sub
add
test
pop
adcl
xlat
fidivrl
xchg
add
fdivrs
cli
add
out
inc
mov
add
add
add
adc
frstor
daa
adc
or
into
pusha
std
adc
push
sub
sub
cmp
imul
sbb
or
cld
adc
add
dec
push
cli
mov
cmp
fmul
bnd
add
inc
pop
inc
mov
inc
add
int
add
lods
pop
ss
lahf
cmpb
add
rorb
aad
jb
lods
out
xchg
adc
popf
fmull
sub
add
lock
jno
push
push
mov
fldl
push
dec
inc
stos
adc
mov
xchg
adc
shrl
fs
dec
sub
test
cwtl
jl
stc
aaa
fwait
imul
xchg
sbb
pop
das
daa
adc
cmp
add
sub
dec
jne
jb
or
sbb
mov
mov
outsl
in
jne
fisubl
adc
ja
or
sbb
shrl
lret
mov
sahf
pop
mov
add
sbb
mov
inc
shl
add
lahf
testb
inc
orb
adc
jmp
cmp
xchg
movb
and
scas
add
out
dec
xchg
notb
sub
dec
daa
xchg
pop
and
mov
and
nop
leave
mov
enter
push
ret
add
ret
lret
rcrb
imul
or
cld
dec
inc
cmp
mov
jne
mov
out
insl
inc
push
push
sub
mov
inc
and
or
or
jmp
cmpsb
mov
cwtl
adc
andl
push
or
les
sub
adc
pop
add
imul
mov
push
add
and
test
fbld
sbb
push
push
and
ret
cld
movsl
movsl
cld
stos
add
cmpb
cmpsb
repnz
lret
add
scas
leave
out
cmp
sub
jo
icebp
inc
aas
sbb
mov
shll
ficompl
addb
fistps
add
not
hlt
test
ja
mov
int3
lods
mov
aaa
int
cmpb
sbb
add
pop
sbbb
in
insl
jecxz
add
mov
xchg
rorl
test
sbb
pop
xor
ja
cmp
fadds
cmp
add
add
mov
xchg
iret
and
cwtl
mov
outsb
xchg
rcl
popa
xor
imul
out
mov
add
xor
repnz
ja
push
adc
mov
mov
jo
and
mov
pop
adc
and
add
xchg
clc
jmp
imul
mov
xor
fldcw
xchg
cs
lods
push
inc
add
popa
scas
orb
xor
scas
jae
adc
sbb
inc
add
subb
outsb
lret
add
lcall
add
inc
fildl
sbb
mov
pop
lcall
push
mov
cltd
pop
cmp
or
cmp
add
add
hlt
out
inc
nop
outsb
xchg
inc
in
clc
cmp
sub
xor
std
mov
shlb
mov
xchg
dec
inc
sbb
wbinvd
stc
in
adc
sbb
xchg
adc
jae
ds
pushf
add
or
out
outsl
and
enter
leave
stos
popa
repnz
jo
shll
daa
shll
push
lock
lds
mov
dec
or
orl
dec
adc
or
and
dec
inc
nop
mov
and
cmpsl
push
push
push
outsb
cmp
sahf
pushf
push
and
leave
and
or
nop
or
cmp
adc
adc
sbb
out
repz
fcoms
add
adc
shlb
mov
and
push
xor
pushf
jg
dec
dec
aam
push
sub
jno
sub
adc
or
sub
mov
js
inc
in
call
cmp
sbb
inc
pushf
mov
scas
add
movsb
lods
push
and
push
inc
lods
pop
and
add
mov
inc
inc
adc
push
xchg
insl
jmp
xchg
push
pop
dec
fdivr
popf
fildll
add
ds
pop
add
loope
dec
movsb
add
mov
inc
xchg
or
sub
mov
push
imul
clc
xchg
add
popf
dec
test
push
idivb
adc
cwtl
lds
sub
popf
jp
cmp
fildl
nop
push
pop
inc
xchg
lea
mov
movsb
dec
jle
xchg
mov
nop
or
fprem
cmpsb
xchg
fstl
fldt
movsl
xchg
cmp
sbb
sbb
cmp
or
addr16
jmp
ja
push
jns
je
push
andl
or
add
cli
ss
andb
mov
push
push
lds
lds
mov
or
insb
dec
daa
mov
mov
dec
lds
or
cmp
es
and
and
mov
insl
shll
fldt
lahf
insl
or
sbb
xchg
push
das
jbe
add
out
je
jo
icebp
mov
add
or
orl
adc
gs
jmp
sbb
xchg
ret
jno
jo
and
sbb
cmpsl
push
mov
xor
test
sbb
xor
aad
lods
xchg
ds
rol
sar
dec
inc
out
sbbb
and
inc
xor
adc
lods
add
js
jno
or
daa
enter
add
or
mov
enter
adc
sti
adc
lods
add
sahf
ret
into
adc
or
stos
adc
insb
sbb
dec
ljmp
sbb
cltd
pop
fcoms
fsubr
or
faddl
jo
aaa
add
add
nop
push
or
cli
jns
fiaddl
add
add
sbb
or
dec
cmp
mov
lock
pop
mov
cmpl
pop
pop
mov
jnp
mov
jns
inc
subb
xchg
test
rdtsc
andb
jg
inc
inc
or
rol
dec
push
push
je
and
pop
stos
inc
push
adc
rorl
pop
mov
sub
les
mov
bound
and
cmp
push
adc
outsb
jle
andl
ret
sub
or
loop
inc
add
mov
add
cmp
cmp
scas
lea
leave
jnp
xor
push
push
pop
dec
jmp
test
sbb
or
movsb
cmpsb
repnz
jmp
xadd
jmp
les
or
adc
ja
rcrb
leave
mov
cli
mov
jnp
dec
or
jns
add
mov
adc
or
pop
pop
rorb
cld
inc
shrd
lret
movsl
inc
cmp
dec
inc
std
jle
inc
subl
add
sbb
mov
xchg
lret
repz
notl
dec
add
adc
xor
loop
adc
sbb
cs
sub
and
sub
sub
xor
xchg
test
xchg
orl
rcl
push
in
adc
dec
adc
hlt
and
sbb
das
push
mov
and
mov
pop
rcrl
and
xchg
test
add
add
inc
and
shr
xchg
lock
pop
mov
test
push
adc
push
hlt
xor
pop
rorb
sbb
or
daa
sbb
mov
or
jmp
sbb
ret
lods
dec
mov
movb
shlb
mov
fs
lea
test
and
addl
xor
daa
aaa
and
xchg
inc
call
movsb
hlt
and
loop
daa
add
out
or
mov
xchg
cmp
ret
and
add
loop
pop
jg
in
loop
movsb
inc
sbb
add
or
push
push
sub
add
xor
sbb
xchg
or
jbe
add
push
jmp
adc
cld
jno
xchg
push
xor
adc
pop
rorb
stos
and
movsb
dec
test
and
scas
add
je
lahf
mov
xor
nopl
push
scas
adc
cmp
lock
inc
cmp
jno
sahf
jbe
or
push
adc
jne
and
mov
sbb
insl
or
test
push
popa
aas
add
pushf
mov
add
js
or
fbstp
mov
fsubl
addb
lods
inc
outsl
push
xorb
add
push
xor
flds
adc
push
cmp
fldcw
inc
ret
test
imul
and
mov
mov
cmpl
mov
jle
pop
cmp
and
add
adc
xchg
or
ret
push
push
push
dec
lcall
sub
test
inc
adc
into
sub
jecxz
mov
rolb
mov
ljmp
js
mov
xchg
or
insb
lahf
xchg
jne
pusha
inc
icebp
add
pop
xorl
cmp
pusha
mov
daa
fdivs
mov
or
je
mov
lock
je
test
cld
jne
shlb
pop
addr16
inc
sbb
mov
xchg
or
add
mov
test
add
push
gs
inc
ja
call
or
push
cmp
lea
push
jno
popf
pop
jb
ret
mov
push
mov
xor
mov
pusha
jmp
cmp
or
pop
sub
xor
sbb
insl
and
aaa
jbe
test
sub
gs
sbb
jge
mov
or
dec
and
faddl
inc
or
inc
pusha
xchg
lock
incl
movsl
ret
aaa
sub
incl
sub
test
xchg
add
cmp
lods
orl
pop
sti
and
and
push
mov
outsb
cwtl
xchg
das
jecxz
cwtl
fs
xlat
dec
nop
ds
mov
cmp
nop
in
pmullw
add
das
xchg
xor
lods
dec
mov
imul
add
cmove
xchg
dec
pop
cmpxchg
adc
stos
insl
pop
addl
dec
jmp
jb
ds
adc
sub
rcll
add
xlat
stc
pusha
add
xor
xchg
mov
sub
jp
push
jg
je
adcb
sbb
push
push
jo
or
pop
push
pminsw
inc
filds
imul
or
adc
cwtl
add
jl
popf
cmp
jne
xchg
decl
xchg
cmpl
in
xchg
inc
push
xor
dec
inc
cmp
rorl
mov
dec
mov
dec
xor
push
xlat
setle
cmovg
ja
dec
and
mov
jbe
or
mov
pop
dec
movsl
pop
in
insb
gs
sbb
clc
pop
xchg
cmpl
xor
xchg
jp
and
es
in
lods
pop
addr16
jns
add
jo
pop
in
in
push
adc
mov
addb
jo
cs
icebp
push
mov
jbe
xor
pop
fmuls
cmp
mov
in
nop
sarb
push
enter
jno
cmp
js
jne
push
push
pusha
mov
imul
mov
lods
sub
insl
rol
movsb
xor
cmp
mov
loopne
mov
push
sub
pop
fidivrl
push
pop
cmp
sti
xchg
mov
mov
sbb
and
jae
sub
mov
xor
dec
push
add
mov
inc
inc
shrb
imul
mov
cmove
pop
sarl
or
ret
arpl
pop
push
sub
or
push
dec
mov
dec
add
cmp
popa
jne
push
xchg
shll
mov
mov
rcl
mov
or
in
add
inc
pop
push
andl
loopne
cmp
pop
inc
inc
and
dec
mov
push
jae
stos
adc
sub
pop
mov
xor
fisttps
dec
pop
cld
adc
fstps
inc
stos
mov
mov
jle
lret
or
pop
rolb
popf
pop
mov
inc
fnstcw
sub
sub
test
mov
ja
inc
add
sbb
pop
inc
ficomps
je
pop
push
xor
adc
lret
cli
push
and
push
rorl
mov
cmp
cmp
rcrl
mov
cmp
nop
fsub
je
mov
xchg
push
fdivl
sbb
add
call
bound
jp
jo
adc
lret
mov
push
inc
imul
mov
pop
pop
sbb
scas
xchg
and
sub
sbb
mov
or
sarl
pusha
mov
pop
push
fcompl
or
push
mov
mov
cmp
dec
pop
aas
fbstp
sub
add
popa
sub
jmp
push
cld
xor
sbb
aaa
mov
imul
mov
push
adc
sbb
pop
jl
bnd
or
jo
jmp
cmp
out
sbb
scas
loope
push
sbb
imul
pop
bound
sub
push
and
add
mov
mov
lods
or
js
je
aad
addr16
cld
mov
push
inc
push
and
dec
add
iret
mov
push
frstor
lods
sbb
jg
mov
cmp
adc
jne
add
or
sub
daa
mov
shr
imul
pop
xchg
sbb
dec
cmp
add
adc
ret
inc
xchg
push
add
cmp
imul
mov
dec
xor
mov
mov
xchg
negl
and
adc
sub
push
sbb
pop
mov
sbbb
aas
pushl
mov
xchg
dec
inc
sub
stos
repz
mov
inc
shll
add
pop
adc
adc
mov
add
push
sub
dec
mov
adc
or
mov
and
das
lock
jle
sarl
push
loopne,pt
inc
or
outsl
loop
push
xchg
fcos
sbb
dec
and
jbe
out
push
sub
push
adc
bound
test
gs
add
and
sub
leave
cmp
mov
jge
mov
inc
add
cld
mov
lea
mov
cmpsl
shlb
inc
xchg
incl
ret
jno
jns
outsl
cltd
dec
sbb
das
lds
ljmp
mov
into
popf
sub
cs
push
xor
dec
enter
or
xchg
pushf
or
gs
inc
iret
sbb
xchg
dec
dec
inc
dec
lret
mov
dec
decl
lcall
xchg
mov
mov
jo
and
mov
jne
lea
push
inc
mov
mov
das
or
push
lcall
call
push
hlt
add
and
data16
out
adc
xchg
xor
sub
xor
inc
mov
inc
das
pushf
pusha
testl
xchg
sbb
comiss
jb
cmp
mov
outsl
inc
dec
incl
jmp
nop
lahf
adc
push
pop
andl
sub
popf
mov
pop
sub
rolb
and
cmp
rcrb
outsb
shlb
popa
ret
nop
call
dec
sbb
clc
adc
mov
xchg
jo
cmp
dec
dec
imul
inc
mov
lds
and
xlat
sub
xlat
and
call
mov
adc
push
xchg
mov
lods
inc
gs
and
adc
loopne
test
push
xor
mov
repnz
shrb
rcll
inc
cmpl
jne
imul
or
jmp
cmp
cmp
or
js
xchg
cs
enter
fwait
cmp
cmp
mov
jmp
jmp
inc
cmp
je
push
adc
fstpt
insl
xchg
adc
adc
fisubrl
ja
ja
cmp
xor
jo
xchg
mov
and
fmuls
pop
stos
sbb
inc
xor
outsl
adc
xor
test
mov
sahf
jbe
xor
mov
xchg
dec
push
cli
decl
jecxz
jge
adc
add
push
jne
cmp
repz
xor
adc
inc
shlb
pop
sahf
fs
mov
push
mov
sbb
les
lea
nop
or
mov
xchg
mov
and
adc
leave
loopne
inc
add
add
popl
xor
fstpl
js
adc
add
ret
jo
cmp
cmp
cmp
das
or
mov
push
insb
push
mov
mov
inc
inc
mov
fwait
stc
jmp
and
sbb
mov
out
hlt
sbb
shrb
adc
adc
aam
ret
mov
ss
xchg
in
add
inc
enter
call
xchg
lock
sub
cmpsl
xchg
ficomps
and
or
xchg
inc
loope
xchg
xor
pop
or
inc
sub
loopne
and
lods
mov
sub
sub
add
mov
cmc
sub
and
mov
imul
rcrb
adc
mov
pop
or
sub
sahf
inc
sub
jbe,pn
and
sub
aam
lds
cmp
cmc
or
es
hlt
ret
sub
pop
xor
mov
test
xchg
sub
dec
aaa
cmpl
lcall
cmp
or
je
stos
inc
rolb
sahf
xor
mov
adc
scas
insl
sbb
adc
xchg
loopne
sbb
out
rorl
or
cmp
pop
push
adc
push
sahf
xchg
adc
or
sahf
dec
mov
or
pop
sub
dec
inc
cmpl
inc
je
mov
je
dec
cmpb
xchg
arpl
cmpsl
adc
stos
jns
pop
ds
outsl
shlb
push
jge
add
shr
popa
adc
outsb
adc
nop
xchg
jb
rol
adc
fimuls
std
daa
add
out
push
cmp
sub
push
je
inc
and
daa
fadds
inc
pop
into
xchg
push
mov
ficoml
push
rolb
aam
rclb
add
in
push
push
add
test
loope
mov
mov
xchg
stc
cs
fstl
jp
dec
xor
aaa
sub
cmp
inc
imul
xor
jmp
jp,pn
in
xor
push
adc
fsubp
push
and
ficompl
sub
mov
test
xor
or
adc
adc
jmp
outsl
mov
movsb
mov
jne
loopne
insl
xor
sub
push
jmp
adc
sub
add
push
es
mov
testb
jo
xchg
and
add
sub
cmpsl
scas
mov
push
add
sub
dec
push
clc
add
cmpsb
pop
sti
and
out
xchg
leave
cltd
adc
dec
cltd
leave
mov
sbb
sbb
cmp
fildl
jb
or
jne
add
mov
dec
dec
add
mov
xor
roll
dec
fldt
idivb
mov
and
dec
mov
xchg
std
fdivp
mov
dec
jne
gs
addr16
nop
add
adc
rcrb
xor
jnp
or
mov
loop
push
scas
xchg
mov
in
jmp
push
ja
pusha
outsl
ss
jae
fs
mov
mov
adcl
rcll
mov
cmc
mov
movsl
sub
inc
adc
movsl
add
movsb
fwait
aad
inc
shlb
cmc
xor
movl
add
inc
inc
dec
nop
dec
jne
lret
push
addr16
lcall
jo
int3
std
nop
xchg
add
mov
sub
fwait
cli
inc
sub
add
and
icebp
ret
xor
xchg
mov
pop
sbb
dec
lock
sub
mov
xor
jae
add
or
and
int
add
push
cmp
clc
dec
pop
or
pop
push
insb
adc
mov
or
imul
mov
fisttps
mov
lods
sub
jp
je
popl
imul
jno
dec
push
cmc
outsb
and
sbb
cwtl
sbb
mull
mov
aam
push
repnz
push
pop
pop
gs
add
jl
dec
cmc
shlb
fistpll
ss
dec
mov
out
rorl
sbb
sbb
aad
jmp
test
sbb
mov
or
inc
adc
xlat
jno
lea
xor
jle
movsb
mov
xlat
add
or
mov
dec
pop
inc
push
inc
popf
adcl
push
lock
sti
ficoms
xor
iret
addb
cmp
adc
lea
jmp
push
roll
fwait
pop
pop
clc
pop
sub
movsl
and
xor
mov
leave
dec
jo
and
cs
lds
outsl
adc
cmp
aas
sbbb
popf
adc
push
outsl
jno
enter
mov
sub
jl
add
dec
roll
arpl
mov
cwtl
pop
mov
loope
sbb
es
sbb
add
jp
cmpsb
dec
push
movaps
inc
add
inc
push
out
add
inc
or
inc
jno
es
pop
pusha
mov
and
sbb
pop
fucomp
lret
dec
jmp
call
lds
cmpb
and
orb
adc
lahf
aam
xor
push
scas
aad
push
mov
cmp
xchg
jae
cli
sbb
or
or
and
movb
test
jl
out
clc
mov
cmp
xor
or
push
xchg
out
lds
adc
jp
insb
cwtl
lods
pop
sub
push
cmp
xor
xchg
jle
mov
jecxz
dec
bound
mov
out
xlat
lock
rorb
pusha
mov
pop
lret
nop
orb
push
sbb
adc
or
sub
imul
pop
cmpl
test
mov
adc
adc
or
add
jb
lea
mov
je
and
int
xchg
shlb
adcb
rcrl
movsl
dec
jo
adc
adc
shrl
outsl
add
adc
imul
movsl
xor
and
and
jae
inc
or
mov
xor
jmp
add
xchg
adc
arpl
clc
dec
call
das
adc
dec
and
sbb
add
pop
adc
cwtl
aam
inc
fwait
ljmp
pusha
addb
in
sub
xlat
adc
fstl
aas
push
cmp
ret
pop
add
ss
cmpl
adcl
push
xor
jp
or
outsl
movb
add
mov
sbb
push
mov
jbe
loop
sub
repz
popa
sub
stos
fucomp
add
push
pop
popa
fdivs
lret
mov
roll
push
mov
dec
dec
xor
cmp
sbb
outsl
es
int3
lea
mov
inc
inc
out
cmp
push
jmp
jecxz
out
push
ror
jmp
cmpsb
inc
xchg
jl
sbb
xorb
adc
addb
repnz
xor
repz
xlat
testb
sub
add
cmp
pop
dec
out
inc
outsb
xchg
scas
rol
clc
and
mov
imul
sub
pop
sub
and
iret
jmp
add
clc
loopne
int
or
or
pusha
and
jl
push
jb
dec
lret
insb
inc
jg
dec
fnstcw
adc
cmpsl
add
mov
orl
sub
or
inc
inc
mov
icebp
sbb
inc
cmpsb
adc
xlat
sbb
sbb
add
shrl
es
or
roll
push
jge
sub
mov
mull
xor
fbld
in
or
mov
xchg
mov
hlt
sub
push
mov
jg
or
cmp
sbb
jg
jne
adc
dec
jne
jae
movsl
mov
push
xchg
sub
lret
add
jbe
pop
sbb
pop
imul
rol
dec
inc
and
push
movsb
and
dec
dec
and
inc
movsb
mov
lock
dec
lret
mov
imull
inc
dec
lret
mov
cmc
add
sub
sbb
or
ljmp
jle
cli
sbb
data16
sbb
es
sbb
aad
xor
mov
in
xchg
pop
dec
jp
sbb
xchg
sub
jns
mov
or
test
and
enter
mov
jae
lock
mov
adc
add
inc
pop
sbb
dec
add
in
mov
add
sbb
jle
sub
lahf
mov
in
jge
test
in
scas
mov
sub
fsubl
addb
mov
daa
sub
and
and
lds
xchg
push
inc
mov
jne
inc
add
xor
push
popa
add
notb
mov
scas
or
pop
dec
test
sar
jl
add
cmp
popa
push
rclb
jb
jmp
push
fcomp
adc
inc
pop
cmp
ds
jp
popf
rorl
es
js
lcall
daa
je
or
inc
bound
mov
add
imul
push
adc
imul
mov
jge
stos
add
iret
add
push
clc
mov
adc
pop
jbe
je
and
repnz
cwtl
adc
xchg
mov
add
popf
add
push
movsb
mov
xor
cmovl
pop
push
mov
dec
lcall
ss
jne
mov
mov
pop
dec
sar
roll
jecxz
in
aaa
xchg
mov
jo
sar
jns
adc
jmp
mov
lods
insl
xor
xchg
mov
mov
arpl
sbb
mov
mov
mov
adc
mov
dec
adc
dec
aad
sub
add
dec
es
fcmovb
cli
cli
xorl
dec
add
movl
add
mov
les
sarb
and
mov
jp
dec
psubusb
push
dec
ret
dec
sbb
or
js
jecxz
pushf
or
add
push
repz
pop
jo
add
leave
les
xchg
push
nop
and
notl
nop
repz
push
add
xor
sub
cmp
xor
cwtl
cmp
xor
sbb
enter
jecxz
pop
mov
jmp
testl
jbe
fistps
dec
shl
or
jbe
rcrl
movsb
cmpsl
nop
cmp
adc
mov
jg
in
fldpi
test
push
adc
or
insb
pop
add
or
nop
dec
jecxz
jno
jg
out
inc
and
xchg
sub
aaa
xchg
inc
pop
fldt
jo
xchg
adcl
mov
or
and
inc
das
mov
test
inc
cs
or
sbb
add
mov
dec
push
adc
lahf
sti
xchg
jne
sbb
cmp
pop
nop
pusha
jae
jno
xor
nop
cli
mov
mov
dec
fnsave
cmp
popa
jecxz,pn
sub
xlat
sbb
aaa
into
iret
mov
sub
pop
or
hlt
push
or
or
mov
in
sbb
leave
inc
or
mov
nop
inc
mov
shll
xchg
push
movsl
xor
pop
dec
sbb
test
push
cmpsl
xchg
cmc
mov
sbb
jl
and
or
mov
jmp
or
xchg
inc
sbb
movsb
cmp
cwtl
jmp
pop
add
jmp
sbb
push
jo
insb
mov
adc
add
push
sbb
mov
xchg
filds
lock
lock
xchg
arpl
dec
adc
repnz
mov
xchg
jb
add
jns
pusha
es
stc
push
xchg
imul
add
inc
mov
sub
dec
les
mov
roll
cmc
por
xchg
stos
sbb
dec
inc
jecxz
popa
test
xchg
add
sbb
add
repnz
bndstx
xor
dec
stc
or
jecxz
sbb
xor
popa
push
sub
leave
loope
inc
shl
and
scas
mov
xor
inc
or
xorb
clc
jmp
adc
add
adc
adc
xchg
or
jo
stos
jns
push
out
popf
sbb
mov
xor
loopne
les
add
out
add
sbb
aas
xor
mov
sti
mov
or
in
pusha
movsl
dec
mov
add
stos
dec
fwait
and
jo
mov
sbb
and
je
push
xor
je
adc
cmp
lcall
or
inc
sbb
int
sub
xchg
icebp
add
pop
sub
loopne
jecxz
inc
fwait
movsb
xchg
movl
push
roll
and
sahf
mov
lret
out
lea
mov
jge
xor
mov
cmp
mov
out
xor
sbb
lret
pop
jl
sub
xchg
and
pop
or
mov
pop
rcrb
js
and
or
adc
mov
idivl
inc
mov
outsb
test
test
jae
popa
insl
cmp
dec
xchg
or
dec
push
mov
dec
cmp
sub
in
pusha
xorb
add
push
jl
or
mov
je
inc
rcr
faddl
push
punpckhbw
adc
dec
lea
hlt
xor
andb
and
adc
fstl
xchg
dec
add
push
adc
ret
rclb
test
xor
and
adc
jae
lea
dec
lods
mov
dec
insb
adc
mov
add
das
js
push
xchg
addr16
mov
mov
cli
and
lret
add
fsubr
das
jne
loopne
or
aaa
sbb
cmpl
inc
or
push
xchg
aaa
pop
arpl
adc
fs
loopne
loopne
add
cmp
and
mov
in
inc
push
ds
sub
mov
push
rorl
sub
pop
insl
or
lock
dec
cmpsb
mov
mov
or
das
xchg
push
xor
xor
mov
mov
loope
adc
sbb
sbb
xchg
pop
push
dec
addb
adc
mov
or
pusha
or
adc
movsl
pop
out
add
mov
mov
lds
adc
inc
or
dec
cltd
adc
push
test
and
mov
je
mov
and
add
xor
push
pusha
repz
pusha
bound
or
adc
adc
rcrl
fnstsw
filds
addb
dec
sbb
lds
pop
mov
and
test
fwait
xchg
mov
ds
pop
pop
inc
push
negl
pop
or
dec
or
push
dec
push
xor
repz
inc
sbb
xchg
sub
and
mov
push
add
adc
and
sub
out
mov
jno
add
jnp
jo
sbb
add
nop
xchg
roll
mov
stc
cmp
or
sti
je
push
xor
mov
add
dec
dec
inc
fldl
shl
and
jbe
dec
mov
sbb
add
inc
addr16
inc
sub
fsubs
fsts
mov
mov
push
add
lcall
iret
or
jb
jbe
sub
negl
cmpl
insl
movsl
cmp
fs
pop
xor
add
pop
inc
aas
add
cwtl
mov
idiv
pop
xchg
adc
mov
gs
ja
mov
enter
pusha
pop
pop
mov
lret
jno
mov
mov
test
stos
dec
sbb
xor
ret
mov
fldl
inc
inc
and
push
pop
or
lret
pop
inc
jmp
mov
sub
push
cmpsl
sahf
or
sbb
or
push
jne
outsl
jecxz
pop
fcomi
dec
movsl
es
sub
and
pop
pusha
or
pop
out
dec
movb
fisttpll
sub
in
sub
jmp
ficoml
pop
add
mov
dec
repnz
adc
in
dec
neg
nop
lret
pop
jl
jae
call
xlat
jle
xor
pop
leave
nop
cmp
mov
add
sub
rorb
rorb
iret
imul
pusha
dec
fsubrl
mov
pop
and
test
mov
or
sub
mov
jb
fisubl
add
std
sub
sub
mov
mov
jmp
push
insl
adc
insl
sub
stc
inc
add
iret
sub
cmp
out
inc
inc
out
pop
je
pushl
dec
sub
dec
or
vpmovzxbd
repnz
sbb
adc
mov
mov
add
adc
das
in
movsl
test
cmp
in
adc
or
lahf
lods
push
or
neg
dec
sub
orl
scas
enter
out
enter
mov
adc
mov
pop
push
testb
dec
mov
ret
dec
mov
lcall
sub
jo
adc
out
mov
xor
xchg
cmp
sbb
and
nop
or
sbb
lret
pop
push
xor
xchg
es
adc
mov
add
mov
mov
pop
mov
lahf
adc
mov
mov
imul
mov
dec
mov
mov
mov
xor
inc
test
fs
notb
push
cmp
cmp
xor
pop
cmp
jl
dec
xchg
lds
dec
jmp
sub
xor
pop
shlb
mov
push
xor
xor
ret
pop
dec
leave
and
dec
and
and
pop
sbb
in
xchg
pushf
push
push
mov
push
pusha
jmp
inc
dec
mov
jg
aaa
push
cmpb
dec
inc
push
cwtl
xor
fcomps
lea
jo
orl
mov
pop
iret
push
enter
jmp
sub
fsubl
fisubrl
adc
adc
das
in
movsl
cmpl
xor
add
pop
xchg
mov
test
push
mov
lahf
daa
loop
lea
inc
pusha
mov
cmp
ja
cmp
jl
or
jle
daa
test
aam
cmp
ss
pop
dec
cld
jno
insb
cmp
xchg
push
dec
lret
or
insb
mov
pop
pop
xor
cmpsb
pop
rcrl
xor
adc
push
dec
cmp
push
add
inc
insb
jne
sub
push
push
fwait
les
aad
dec
enter
sbb
and
pop
push
push
pop
test
push
popf
push
jmp
pop
mov
add
sub
jg,pn
rclb
mov
test
cwtl
orb
insl
xorl
or
and
mov
cmp
out
nop
and
lods
and
add
or
xor
xor
xor
jge
test
fidivrl
rolb
outsl
lcall
movsb
std
dec
imul
sbb
adc
cli
adc
push
pop
shlb
sbb
pop
imul
mov
add
sub
sub
in
lds
and
sbb
cmp
or
cmp
cmp
adc
xor
mov
cmp
cmp
push
inc
or
pop
imul
out
orl
and
negb
cmc
insb
sbb
mov
inc
and
push
or
pop
repnz
test
xchg
fadds
lods
push
test
outsb
insb
sbb
jecxz
sbb
adc
xchg
push
sub
les
data16
ret
cli
lret
mov
das
cmpl
pop
mov
fsubs
adc
push
pop
xchg
xor
ficompl
add
das
xor
cmp
imul
or
ss
enter
adc
es
add
dec
adc
sar
sub
cmp
je
mov
sub
jne
lret
sbb
push
mov
jo
sbb
adc
jne
mov
inc
lds
shrb
or
rclb
fldcw
sub
and
mov
adc
incl
pop
mov
cltd
cltd
das
insb
movsl
andb
subb
mov
call
stos
pop
or
dec
or
outsb
xchg
mov
cmp
pop
scas
adc
cld
sbb
xor
insl
mov
or
cmp
movl
es
into
dec
lcall
in
fadds
imul
cmp
inc
out
push
and
dec
inc
pop
mov
push
pop
mov
test
clc
push
lods
inc
cmp
nop
xor
pop
jns
enter
mov
mov
mov
xor
push
imul
adc
add
jle
pushf
xor
js
cmp
pushf
addb
arpl
jmp
jae
add
imul
fldt
sbb
sub
pop
dec
inc
nop
cmp
addr16
mov
sbb
inc
mov
dec
dec
daa
lock
test
and
and
mov
xor
fwait
cltd
xchg
out
mov
or
xchg
xchg
add
cld
and
or
lods
dec
cmp
add
lcall
adc
cmp
pop
mov
jo
jae
pop
mov
inc
int
hlt
scas
cld
cmp
sbb
sbb
xor
inc
push
sbb
adc
push
or
or
loopne
les
jmp
sub
xor
mov
pushf
shlb
xor
jnp
ret
dec
jmp
or
jne
cmc
add
jb
cs
out
mov
je
adc
inc
in
and
add
scas
jns
out
xor
and
inc
push
sbb
inc
out
xchg
dec
push
pop
pop
xor
add
jmp
lods
cltd
loopne
sub
inc
sub
pop
add
jmp
sbb
push
mov
sbb
enter
mov
daa
hlt
add
insb
mov
cmp
xchg
movsl
lods
add
sub
mov
xor
xor
nop
leave
add
ret
and
xchg
dec
arpl
xchg
cmp
sbb
mov
nop
or
dec
add
les
pop
hlt
je
movsb
xchg
cmp
and
movsb
inc
sbb
push
inc
loopne
or
cmp
sub
sbb
scas
loopne
mov
xor
sub
xchg
dec
fidivl
push
jnp
sbb
subb
outsl
fsubrp
mov
xor
test
cmp
pop
mov
scas
mov
add
add
add
int3
dec
inc
pop
movsb
out
daa
test
add
cmpsl
jo
lahf
int3
addr16
sub
je
mov
add
jl
adc
inc
push
sbb
add
shrl
nop
push
decl
inc
je
sbb
dec
inc
cmp
dec
sub
push
sbb
mov
add
and
fnsave
and
xor
lods
repnz
mov
jno
mull
add
jecxz
dec
iret
push
mov
test
add
call
adc
lret
inc
add
fimuls
xchg
cmp
lea
out
jmp
xchg
shl
or
cltd
int
inc
jecxz
mov
test
dec
adcb
jge
arpl
add
lods
fildll
mov
in
jmp
cmpl
or
nop
ss
sbb
pushf
adc
shll
or
iret
adc
or
or
xchg
movsb
pop
xor
add
test
clc
stc
loopne
pop
pop
mov
in
push
arpl
test
add
les
xchg
js
pop
es
lods
bound
adc
lds
mov
addl
mov
mov
rcrl
dec
sub
add
dec
xor
lock
mov
xor
js
je
pop
into
leave
je
pop
loopne
mov
xorl
and
outsb
xor
shr
insb
lock
adc
fadds
or
or
aaa
or
sbb
or
xor
cmp
pop
cmp
fidivs
insl
add
push
pop
mov
sbbb
push
mov
insl
pop
adc
mov
mov
aaa
jmp
push
jbe
pushl
fidivs
sbb
pop
xchg
clc
xor
push
add
pop
add
sub
sub
xchg
mov
mov
sub
inc
scas
push
in
sbb
push
jecxz
shlb
mov
insl
call
loop
adc
sbb
lds
and
add
sub
loopne
or
andb
mov
fidivs
pop
and
sub
cmp
mov
aam
inc
xor
ret
pop
mov
xchg
mov
cwtl
mov
daa
into
mov
or
movl
adc
inc
js
test
add
sahf
and
les
and
or
aaa
add
jns
mov
pop
mov
adc
add
cmp
testl
std
in
fiaddl
jae
negb
or
add
gs
mov
push
add
cmp
push
cs
xlat
fsub
sbb
mov
rorb
je
rol
lea
cs
movsb
dec
inc
sub
cwtl
aam
dec
adc
sbb
or
repnz
loope
stc
test
iret
xchg
jo
pop
add
add
int3
cld
cmpsl
pusha
imul
mov
dec
dec
dec
inc
dec
dec
icebp
sbb
fstl
dec
outsl
test
dec
imul
scas
rorb
ja
or
mov
cmp
loopne
sub
xor
in
xchg
mov
movb
rolb
rorb
mov
rolb
jo
cmp
and
inc
popa
mov
orb
and
lret
add
adc
mov
in
push
add
add
mov
sahf
inc
dec
sub
cmpb
adc
jecxz
mov
es
movsb
inc
adc
cwtl
mov
cmpsl
pusha
or
and
mov
mov
inc
sti
push
jno
dec
add
dec
loopne,pt
rolb
roll
xchg
les
insb
sbb
inc
mov
mov
insb
imul
aam
fcmove
test
popa
add
sbb
test
mov
cs
adcb
insl
inc
xor
lods
and
fwait
jb
and
pusha
or
sub
bound
inc
es
pop
imul
push
jg
inc
or
xor
or
int
psubb
pusha
loopne
mov
xchg
push
aad
inc
adc
sbb
or
jmp
sbb
sbb
sbb
or
insl
pushf
ss
pusha
scas
adc
stos
add
aaa
add
stc
and
jne
fnstsw
adc
inc
gs
mov
jge
add
cld
push
inc
inc
cs
or
sbb
fnsave
aaa
sbb
mov
or
movsb
mov
add
lea
jne
adcb
mov
and
pop
imul
inc
inc
sahf
ss
sub
cmpsb
fs
pop
xchg
orb
pop
sub
push
add
push
inc
jecxz
jo
pop
push
add
sbb
movsl
aad
or
aaa
incl
push
dec
add
sahf
xchg
or
push
pusha
leave
gs
mov
adc
aas
stos
aam
push
cwtl
lret
nopl
fsubs
xchg
sub
jecxz
cwtl
jl
inc
inc
lea
mov
add
ret
adc
insb
add
sub
mov
pop
fidivs
adcb
inc
sub
cmpsl
jle
dec
or
shlb
xchg
lds
sub
loope
push
aaa
fsubrs
jg
test
adc
in
insb
fbstp
add
les
dec
pushf
insl
inc
aaa
mov
pusha
punpckhwd
push
xor
or
or
jg
mov
sbb
cwtl
sahf
and
mov
inc
jo
mov
add
or
inc
push
cmpl
outsb
outsb
dec
cmp
mov
mov
pushf
mov
mov
adc
cltd
popa
mov
rorb
cmp
dec
das
les
in
lock
pushf
jl
rcll
jecxz
faddl
or
xor
xchg
mov
gs
dec
sbb
and
push
sti
or
test
in
and
loop
dec
mov
pushf
psraw
pop
jle
fdivr
mov
and
push
and
les
lock
sti
sbb
ss
inc
xor
imul
sbb
add
incb
pop
cmpb
subb
sub
std
mov
mov
divb
test
mov
cmp
sbb
xchg
fmuls
pop
addb
inc
out
pop
pop
orl
popa
pop
jbe
add
enter
push
mov
pop
xchg
add
adc
rol
or
nop
xchg
rolb
or
and
xor
xchg
mov
in
es
dec
arpl
popa
mov
fidivrl
fs
add
lock
xor
mov
xor
lea
mov
in
mov
sbb
loope
pop
jb
sbbb
aam
cmp
fwait
push
add
ss
jge
cmp
clc
adc
pop
xchg
je
hlt
add
mov
scas
movl
notb
mov
dec
iret
out
iret
enter
sbb
es
call
adc
pop
add
add
cmpsb
xor
and
daa
fwait
sbb
cmp
fstpl
fisubl
add
xchg
imul
aas
lock
shl
pop
jb
sbb
subl
stos
faddl
adc
out
fnstenv
push
add
dec
out
add
jl
add
xor
shl
add
outsl
cmpb
sbb
mov
sub
mov
sub
sub
mov
sub
inc
add
sub
xchg
je
lret
add
adc
jge
or
xor
inc
sbb
inc
pop
scas
movl
sub
push
data16
aaa
lcall
iret
inc
movsl
addr16
add
mov
xchg
lods
sahf
pop
mov
movsl
scas
or
sub
test
pop
stos
rol
mov
repnz
add
cmp
pop
repz
stos
lock
dec
inc
adc
in
daa
andl
sbb
mov
mov
sarl
mov
pop
cmpsb
jbe
inc
clc
xlat
and
adc
jo
push
cltd
xchg
push
mov
add
push
mov
cmp
adc
pop
lods
sti
movsb
dec
or
das
xlat
sbb
mov
xchg
mov
fisubrl
adc
xchg
jb
aas
dec
cmp
and
int
sub
bound
in
call
sbbb
push
gs
sbbl
push
cmp
xchg
add
cmp
add
xchg
rolb
pusha
mov
xor
or
pop
sub
add
xchg
bound
and
icebp
mov
sub
jle
adc
xor
sub
jmp
xor
adc
add
push
fs
dec
cmp
sub
rorl
fdivrp
xchg
js
sbb
les
and
jo
and
xlat
cmp
push
scas
les
jmp
sti
ret
cltd
lea
fwait
out
push
sub
mov
dec
mov
mov
das
and
push
xorb
aas
jmp
cmp
movsb
cmp
push
add
call
or
pop
test
leave
cmp
or
fnstsw
lods
inc
mov
mov
jo
jne
adc
mov
outsl
adc
je
sub
xchg
adc
add
in
addr16
inc
sbb
xor
sbb
and
mov
nop
push
loope
int3
lds
inc
shr
daa
lock
or
sbb
or
adc
add
out
inc
roll
mov
mov
shll
mov
subb
jecxz
and
push
icebp
or
cmp
inc
fcompl
push
or
pusha
mov
mov
test
shr
in
xchg
out
nop
push
int
mov
lret
pop
pop
gs
mov
dec
dec
pop
shll
bound
adc
dec
pop
adc
sub
sbb
pop
jo
popa
imul
xlat
and
sbb
xchg
popf
int
pop
std
sbb
jne
mov
rcrb
mov
push
cmpsl
xor
inc
mov
ret
in
movsb
mov
sbb
call
adc
sub
mov
xor
sub
mov
xor
and
push
scas
or
xchg
add
dec
movsl
xorb
and
mov
xchg
fsts
enter
push
imul
add
or
or
sarb
mov
jo
jnp
sbb
test
lock
mov
sahf
sbb
sbb
pushf
into
nop
or
and
jmp
pop
mov
inc
add
ljmp
pop
cmp
call
js
mov
mov
jo
pop
cmpb
xorb
cmpsl
cli
and
xchg
mov
mov
cs
fimuls
adc
fdivrs
add
aad
cmp
sub
or
jnp
jne
dec
dec
and
dec
je
mov
sub
jecxz
xchg
test
int3
sub
inc
and
sub
out
or
pop
mov
cmp
dec
sbb
jl
fstps
lods
dec
sub
sbb
mov
pop
jp
jmp
daa
mov
sbb
or
hlt
popf
mov
shll
push
cs
pop
mov
sbbb
jmp
xchg
loopne
ffree
mov
push
enter
adc
push
cwtl
jle
icebp
adc
adc
test
mov
mov
cli
adc
push
call
out
loope
mov
push
push
mov
dec
jne
into
daa
mov
iret
and
call
shl
out
shrl
or
fs
jmp
addps
cmp
adc
es
pop
xchg
in
sbb
repz
das
or
leave
pop
rorl
push
inc
ljmp
mov
lea
sub
add
inc
pop
xorl
cs
dec
test
outsb
rolb
pop
rcll
dec
xlat
mov
pop
add
inc
data16
cmp
fwait
cmp
bound
shlb
cmp
inc
add
pop
xchg
xlat
mov
test
xor
adc
xchg
nop
sbb
sbb
pop
dec
sub
jne
sbb
les
ret
push
push
data16
fiadds
adc
push
stc
inc
pusha
xlat
iret
lret
hlt
dec
call
ret
test
push
adc
fdivs
loop
sbb
mov
sbb
and
xor
add
or
mov
xor
push
adc
jmp
pop
sahf
sbb
loopne
or
or
ss
cli
jne
pop
jg
sub
sbb
lods
add
mov
mov
inc
dec
sbb
mov
stos
nop
jge
rorb
test
jl
pop
loope
mov
mov
ja
out
adc
xchg
cmp
je
add
or
mov
and
and
lea
mov
push
lock
xchg
outsb
call
rorl
inc
xchg
mov
add
rcll
pop
inc
jns
push
test
mov
subb
or
or
aam
mov
adc
fs
and
outsb
loopew
mov
sbb
pusha
xchg
negb
or
xchg
push
mov
repz
add
jo
cmp
jo
inc
sbb
pop
cmp
pop
push
mov
por
sub
ffree
adc
jno
inc
sub
jns
inc
cli
scas
add
or
xchg
arpl
ljmp
mov
lock
jbe
jae
outsb
and
sub
dec
xor
movl
nop
and
inc
jecxz
xor
push
insl
or
and
sar
clc
mov
xor
test
or
insl
adc
outsl
xchg
pop
fcmovb
xchg
dec
into
dec
jle
cmp
aam
daa
mov
cs
inc
insl
cmp
mov
mov
sbb
lret
loopne
adcb
dec
lods
scas
add
or
nop
inc
into
push
loopne
inc
sbb
inc
push
and
cwtl
sbb
pop
push
pop
mov
dec
or
mov
pop
mov
xor
andb
push
notl
push
adc
or
das
imul
and
imul
add
or
adc
nop
scas
adc
and
mov
loopne
adc
fidivrs
xchg
out
add
inc
inc
cmp
or
cmp
es
sbb
ja
in
int3
sbb
and
mov
inc
dec
mov
pop
fwait
aas
aam
cmpl
cmp
orl
mov
dec
push
addl
jne
jb
push
jmp
push
pop
adc
add
mov
stc
xchg
adc
xchg
inc
idivb
push
and
int
or
movzwl
xchg
mov
sti
lods
data16
sub
sub
dec
test
fwait
in
push
sbb
pop
inc
imul
jns
mov
mov
test
decl
sbb
add
add
mov
mov
stc
or
ret
add
imul
es
enter
push
jmp
inc
push
dec
iret
adc
add
test
nop
and
fs
push
imul
repz
push
movsb
ret
out
gs
test
or
mov
inc
rcrb
movsl
or
add
xor
inc
cs
xor
and
pop
fsubr
mov
test
movsl
in
xor
popa
enter
and
inc
ffree
cwtl
rcl
lret
mov
inc
dec
mov
add
lahf
xor
frndint
into
nop
in
add
mov
jns
loope
enter
mov
mov
jno
fisubl
scas
xor
les
mov
xor
dec
cmpsl
repnz
and
jmp
adc
dec
xchg
xor
xchg
jo
mov
and
inc
fcoms
cmp
sbb
xchg
pop
pusha
jmp
cmp
cmp
sar
mov
push
lahf
push
jnp
cmp
pop
jecxz
inc
dec
mov
sub
setg
fsts
outsb
syscall
mov
xchg
loop
pusha
pusha
or
cmp
sbb
and
clc
adc
or
sub
push
pop
adc
sub
stos
dec
sbb
movswl
mov
jbe
inc
push
rorb
xchg
and
clc
jmp
push
mov
or
jnp
cmp
daa
dec
dec
cwtl
out
rcr
xor
fcomp
pop
pusha
xor
sbb
mov
pop
or
cmp
sbb
out
stos
xchg
dec
sti
sub
mov
es
jge
sbb
jno
cmpsl
test
pop
test
sub
inc
lods
jmp
popf
movsb
aad
int
inc
dec
cs
push
addb
ljmp
push
jl
inc
loopne
adc
and
clc
dec
dec
push
fsubl
mov
sbb
les
adc
dec
dec
cwtl
loope
jg
xor
mov
outsl
addr16
push
xor
dec
push
mov
aad
in
push
pop
jle
xlat
nop
push
out
cmp
shll
test
sub
test
jl
aad
in
add
orl
push
push
xchg
and
daa
mov
dec
sub
imul
nop
fstl
clc
xor
or
inc
cmp
or
cltd
cmc
xchg
mov
jle
jecxz
mov
dec
sahf
lret
sbb
and
push
insl
dec
mov
fs
mov
testl
in
pop
rorb
call
sbb
xchg
js
lock
jmpw
inc
push
dec
mov
xchg
mov
js
jo
or
push
add
adc
push
inc
push
mov
int
dec
add
xor
rcrl
xchg
lds
test
sarb
daa
into
loopne
seto
cli
add
test
adc
lods
mov
test
shlb
imul
adc
mov
inc
sub
lock
imul
insl
shlb
in
js
and
xchg
mov
js
out
xchg
lret
nop
and
add
add
jmp
mov
pushf
pop
repz
mov
mov
and
xor
daa
push
aas
ds
adc
adc
or
ficomps
shl
sub
loopne
pop
add
xchg
clc
jecxz
shlb
ret
pop
movsl
push
pop
add
and
in
lea
shl
adc
mov
jne
int3
shlb
push
sub
push
xchg
mov
xor
add
mov
mov
popa
sbb
aam
icebp
xchg
dec
iret
jl
loopne
inc
call
mov
aam
inc
pop
sub
movsb
xlat
jno
inc
popa
inc
shrl
add
sub
dec
cmp
mov
and
cmp
sbb
cmp
in
xchg
sbb
faddp
cmpsl
inc
lods
nop
mov
xor
push
hlt
mov
je
cmp
mov
lock
clc
loopne
lahf
add
add
xor
sub
outsb
mov
loope
push
test
out
arpl
push
sub
call
pop
imul
add
mov
mov
cltd
in
loope
pop
sbb
testl
and
mov
movsl
jmp
sub
pop
nop
push
fsts
xchg
add
popa
mov
notl
mulb
inc
sub
add
xchg
fsubp
fisubrs
stos
adc
add
imul
adc
add
sahf
test
lcall
enter
mulb
add
loope
pop
push
xlat
sub
push
pop
dec
add
adc
addr16
aam
push
adc
push
sbb
push
movsb
or
add
add
sti
lcall
pusha
je
and
mov
jl
xchg
dec
stos
loopne
lock
or
or
mov
lea
int
jb
sub
mov
cld
rclb
jl
lea
xor
mov
pop
sub
test
push
test
push
je
out
ficoms
add
inc
mov
cmpl
lea
mov
mov
cmpb
inc
daa
sub
push
pop
dec
pop
pop
out
int
xor
xorb
pop
jge
push
mov
push
add
lcall
cwtl
js
lods
add
push
and
adc
sti
or
je
shl
pop
repz
cmp
push
sub
push
sbb
imul
inc
les
in
popa
push
dec
add
lcall
data16
sbb
add
cmpsl
loope
popa
sbb
sub
xchg
enter
stos
push
adc
fcompl
shll
insb
jo
push
rcrb
addl
add
in
mov
ljmp
sub
sub
insb
lods
jbe
sub
sbb
into
mov
in
ljmp
sbbb
add
mov
out
daa
add
mov
js
push
rclb
dec
and
pusha
mov
insl
in
mov
les
aaa
call
cmp
or
inc
cmp
test
rolb
je
lea
lahf
lods
xor
enter
mov
add
pop
mov
jle
mov
sub
xchg
das
push
inc
sbb
mov
mov
sbb
push
pop
addr16
xchg
inc
sub
sub
lods
mov
sbb
push
and
fisubrl
pop
xlat
cli
and
cltd
cld
clc
adc
shlb
out
or
popf
mov
jo
sbb
inc
or
cmp
push
call
insb
rorb
outsb
inc
lcall
in
aaa
lds
stos
loopne
sbb
and
test
dec
insb
push
or
xlat
jb
test
sbb
movsb
and
call
dec
pop
cmp
inc
mov
movsb
jbe
inc
add
and
xchg
mov
adc
fs
mov
fcmovbe
jns
adc
stos
shll
idivl
loop
mov
mov
ret
mov
sbb
addr16
dec
mov
mov
push
sbb
add
ret
inc
out
mov
adc
je
push
sqrtps
or
mov
es
adc
inc
add
movsb
cmp
divl
jnp
mov
xchg
cld
push
xor
inc
insb
pusha
xor
aaa
push
enter
cmpsl
sub
sub
stos
test
jg
jo
ret
addr16
xor
mov
xor
pop
sub
jb
sbb
mov
adc
inc
adc
sbb
das
imul
or
inc
les
xchg
test
es
sar
jmp
sbb
jmp
pop
push
test
pop
outsl
adc
push
xlat
sub
push
adc
daa
and
xor
movzbl
mov
mov
jb
outsl
or
adc
adc
nop
sub
dec
xor
dec
fldcw
fnsave
sarb
adc
adc
rorb
or
iret
inc
arpl
sbb
sbb
push
or
shll
adc
sbb
lcall
xor
out
dec
mov
push
and
or
and
jne
push
imul
push
or
lds
sbb
or
aad
and
cld
jne
inc
insl
pop
sub
mov
sbb
jb
xchg
movsb
popa
ljmp
and
sahf
push
jo
pop
inc
shr
mov
or
inc
or
iret
mov
es
push
add
dec
ds
sbb
lea
outsl
mov
test
push
sbb
inc
add
popf
sbb
ret
sub
adc
sub
jno
or
cmc
mov
xchg
arpl
xchg
lahf
and
ss
sub
mov
cwtl
aam
dec
cmovns
jmp
in
cmp
inc
sub
jmp
cmp
adc
adc
sbb
nop/reserved
add
mov
movsb
sbb
loopne
sbb
dec
cmp
or
adc
push
push
cli
pop
dec
sbb
push
mov
sub
loop
out
je
out
pop
push
inc
push
movsb
xchg
jecxz
cmp
xor
stc
lcall
mov
cmp
cmp
mov
push
and
sub
add
mov
and
ret
lret
dec
push
addr16
repnz
lret
aam
scas
out
inc
xor
dec
dec
mov
mov
fs
pop
gs
repnz
or
mov
xchg
pop
mov
pusha
mov
inc
ds
enter
mov
out
in
call
shlb
loopne
mov
pop
fadds
dec
fmulp
xchg
aam
add
je
xorl
add
cmc
fisubrs
jnp
aaa
aam
popf
cmp
inc
push
add
mov
ss
lret
xchg
mov
jmp
bound
pop
xor
or
orl
push
into
in
ja
arpl
rolb
jns
mov
sahf
add
jb
dec
outsl
ja
jmp
pop
sbb
imulb
dec
pop
or
lea
xchg
dec
jnp
adc
adc
and
out
stos
addb
stc
leave
add
or
push
dec
push
popa
js
push
inc
ja
int
push
insb
push
cwtl
xor
rclb
add
inc
sbb
xchg
mov
inc
inc
mov
imul
test
jge
cmp
mov
sbb
sbb
or
fsts
push
mov
xor
dec
inc
loop
add
movsb
pusha
adc
adc
push
ret
inc
lea
add
sub
rcrl
inc
outsl
test
sub
mov
enter
pop
aam
fs
flds
or
orl
sub
pop
ret
and
pop
pop
out
fimuls
test
add
cmp
aad
aaa
in
sbb
les
cmc
outsb
repz
add
push
nop
movb
es
or
push
mov
sbb
add
add
pop
adc
mov
inc
push
push
jae
cmc
sub
push
add
fldl
jne
push
ret
mov
xor
inc
sub
or
int3
mov
cmp
testb
cwtl
imul
mov
jmp
cmp
pop
test
ljmp
pop
sbb
xor
xor
jp
and
and
cmp
or
ret
jo
mov
shll
sbb
jmp
clc
or
pusha
mov
add
sub
lcall
js
int3
pop
bnd
add
out
les
orb
in
pop
sbb
repnz
mov
or
fs
sub
sahf
add
mov
clc
nop
xor
or
jbe
std
or
push
sub
add
jb
movaps
sub
jae
jb
cs
ficoml
test
mov
pushf
mov
adc
rol
jbe
mov
push
cli
imul
popa
pushl
leave
and
in
negb
movsb
jno
xchg
pop
inc
sbb
add
add
cmp
mull
sbb
stos
orl
push
imul
sarb
iret
repz
mov
dec
aaa
repnz
mov
sbb
jb
jo
js
push
test
mov
inc
sub
inc
or
jno
sub
and
das
or
or
hlt
xchg
jge
icebp
xor
and
sub
nop
inc
push
or
xor
sbb
push
push
inc
fucomp
mov
and
clc
popa
pop
adc
sbbb
xor
adc
xor
cmpb
je
adc
ficompl
jo
aaa
inc
fs
sbb
or
ja
mov
fsubr
adc
in
mov
cmp
add
cmp
xor
loopne
cmp
mov
jp
lock
out
pop
push
adc
inc
dec
adc
jmp
add
xlat
loopne
loopne
ret
pop
mov
jge
stos
aam
sub
or
mov
jle
mov
sub
inc
jo
push
inc
leave
mov
mov
and
or
lcall
insb
jmp
xchg
sub
add
ljmp
stos
pop
sub
call
mov
xchg
mov
or
or
andl
das
inc
js
sub
test
adc
mov
decl
imul
push
enter
dec
pop
pop
cmp
int3
enter
add
int3
mov
cmp
popa
dec
js
mov
fwait
orl
pop
movsb
cmp
cld
jo
jge
jmp
scas
enter
pop
xchg
fs
in
pop
adc
pop
test
cmp
push
cld
movsb
incb
notl
imul
rclb
xchg
mov
push
ds
mov
mov
mov
dec
mov
jne
cwtl
mov
sbb
xchg
jecxz
push
push
call
cmp
test
mov
insl
xor
sbb
fisttpll
mov
push
push
fmull
inc
pushf
shlb
pop
or
fistl
loopne
push
pop
adc
out
les
jne
lahf
aas
xor
sbbb
xchg
mov
test
pop
test
jecxz
mov
and
mov
cs
loopne
and
pop
int
jne
mov
jae
xchg
js
popa
pop
je
dec
dec
push
xor
iret
inc
adc
bound
dec
mov
jno
inc
push
aad
xchg
fcomps
xchg
cmpsb
mov
enter
out
jg
mov
cld
insb
cmp
jmp
jae
lahf
inc
pop
push
sbb
dec
and
mov
add
cmp
dec
pop
sbb
dec
xchg
mov
bound
orl
xchg
jp
xchg
loop
rorb
xor
xchg
sub
filds
mov
cs
roll
xchg
std
sbb
rclb
or
xlat
faddl
mov
push
incl
or
pop
mov
sub
inc
sbb
sbb
jecxz
mov
mov
push
subb
sbb
loopne
cmpsb
jo
and
jbe
push
mov
push
jne
add
push
ret
loopne
and
insb
call
mov
cmp
out
dec
lcall
mov
les
or
test
pop
std
repz
popf
xchg
push
push
push
inc
inc
dec
pop
or
pop
push
cmp
inc
aaa
and
dec
fsubs
sar
popa
mov
pop
inc
dec
dec
inc
cmp
dec
addb
mov
xor
jg
or
enter
inc
dec
mov
test
and
and
mov
cmpl
inc
or
or
sub
icebp
add
and
rcr
mov
cmp
mov
jmp
inc
cwtl
int
out
mov
repnz
out
mov
jo
dec
std
cmp
shrl
cmp
jae
push
mov
jp
repnz
ret
pop
push
nop
out
test
mov
or
ret
or
test
stc
xchg
mov
or
cmp
cltd
add
hlt
mov
adc
icebp
movsb
or
inc
xchg
sbbb
mov
xchg
nop
test
pop
lcall
or
add
scas
mov
jns
mov
adc
dec
push
daa
sub
and
adc
add
rcrl
pop
add
in
test
push
imul
je
add
pop
loop
mov
lods
insb
xor
pop
pop
pop
gs
inc
inc
xor
or
inc
push
test
and
add
jb
ret
jmp
adc
mov
pop
pop
xchg
daa
data16
push
add
mov
xchg
cmpb
or
or
xor
sub
stc
popf
xchg
inc
sbb
push
and
mov
adc
shll
cld
and
decl
sub
dec
aam
dec
sbb
mov
push
inc
insb
clc
cs
mov
mov
enter
add
cli
cmp
mov
adc
repnz
pop
push
and
mov
adc
and
fisubl
mov
jbe
lods
out
mov
mov
mov
mov
mov
cmp
negb
mov
xchg
adc
faddp
inc
add
or
lret
decb
sbb
add
lret
or
dec
and
add
push
sbb
xchg
push
xchg
mov
ja
lahf
out
add
pop
push
add
xchg
sub
push
cmp
mov
jne
cld
or
pop
idiv
sbb
nop
push
mov
das
popa
aaa
or
inc
aas
roll
rcl
or
ret
enter
mov
fimull
adc
mov
adc
sbb
stc
in
push
mov
pop
add
push
adc
jl
cmpsl
xchg
out
ds
jl
sbb
dec
jl
shll
rcr
mov
cltd
lcall
ret
pop
or
push
rcl
outsb
push
outsb
mov
fsubrs
loop
loopne
por
push
xchg
xor
jns
add
jbe
aas
push
mov
ljmp
je
cmp
jbe
and
enter
aam
fneni(8087
and
push
add
push
imul
mov
mov
mov
sbb
or
sarl
push
sbb
xor
xor
mov
test
es
pushf
add
shl
repz
decl
push
mov
shl
add
push
sbb
or
shlb
sbb
mov
test
into
sbb
arpl
sbb
or
dec
sbb
outsl
inc
jno
aas
xchg
inc
mov
inc
sbb
outsl
dec
add
imul
inc
push
adc
add
or
and
pusha
add
rorl
imul
add
shrb
sub
push
insb
jae
or
jmp
pop
dec
push
je
push
mov
mov
or
jmp
lock
or
std
jmp
xor
mov
mov
cltd
mov
cmp
mov
rcrl
xlat
fnstenv
fucomi
mov
mov
cmp
mov
out
sub
sti
cmpsb
int
jg
call
loop
bnd
mov
mov
out
add
xor
mov
cvttps2pi
scas
addl
pop
lret
pop
popf
adc
push
lea
icebp
jae
or
sti
jae
cmp
add
add
jmp
mov
mov
jne
inc
jmp
sbb
pop
xchg
adc
cltd
nop
pop
add
aad
inc
or
dec
pop
cmp
inc
mov
lcall
sub
mov
xor
mov
mov
lods
pop
adcl
imul
dec
push
adc
push
ret
pop
stos
inc
stos
roll
push
loop
dec
aam
lea
ret
jp
orb
xor
out
push
clc
pop
or
pusha
inc
or
dec
push
sub
mov
incl
inc
ljmp
push
sub
or
mov
lcall
cmp
xchg
ret
dec
fdivl
add
mov
xchg
sarb
pop
push
pcmpeqd
cmp
cmp
jbe
sub
sbb
paddsw
dec
jmp
mov
mov
mov
jbe
insb
jmp
adc
adc
lret
sub
je
cmp
fistpll
xchg
push
shll
adc
mov
sub
out
loopne
imul
jge
add
sub
les
ret
pop
add
in
ja
mov
shlb
push
sub
mov
xor
jg
in
sub
rcr
adc
shr
ret
ret
push
push
mov
shll
nop
loope
mov
push
jp
add
mov
aam
rolb
jo
adc
decl
enter
addb
adc
xchg
xor
inc
pop
test
test
mov
mov
neg
inc
addl
enter
aam
and
addl
movsb
jg
fisubrs
cmp
xor
dec
call
enter
jle
inc
mov
push
std
ret
cmp
sbb
faddl
push
enter
mov
mov
jbe
out
jmp
add
mov
and
inc
cmp
jbe
sub
cli
rorb
out
xchg
mov
or
divb
sbb
sub
inc
es
jo
stc
mov
lret
cmp
movsb
mov
loop
push
sbb
push
add
mov
push
add
or
adc
mov
mov
xchg
xchg
hlt
mov
mov
mov
sub
in
call
xor
sub
in
adc
sar
or
movsl
scas
fwait
loopne
mov
adc
add
enter
cmp
add
loopne
jl
lds
push
mov
movsb
clc
push
xchg
mov
add
ja,pn
int3
mov
js
and
hlt
jae
lock
sub
mov
fsubs
rcll
jo
add
jmp
push
sub
sbb
adc
add
mov
addr16
testb
jo
repnz
roll
mov
out
mov
nop
dec
sub
in
cmp
pusha
dec
insl
jmp
xor
cs
notb
sub
call
fsubrp
sbb
ret
in
in
mov
inc
jg
fwait
add
push
xor
cmp
xchg
dec
pop
aam
and
dec
lock
or
subl
push
les
ds
pop
lea
rolb
pop
lock
loopne
inc
mov
sub
nop
adc
jl
addb
xchg
pop
mov
pop
mov
add
push
adc
pop
push
mov
xor
cmpsl
or
lcall
sbb
sti
add
xchg
das
loopne
loopne
xchg
sub
mov
sub
out
inc
test
cmp
jecxz
sahf
and
add
in
adc
decl
inc
movsb
jns
outsb
push
lock
inc
adc
xchg
ret
jmp
mov
shrl
das
cmp
inc
sbb
movsb
loopne
stos
adc
cld
je
add
outsl
in
jmp
xlat
insb
mov
mov
sbb
std
or
xor
loopne
pusha
lcall
sbb
insb
cmp
mov
enter
and
testb
sbb
cmp
ret
xor
xchg
pop
mov
out
es
sbb
add
sbb
adc
mov
lods
pop
sub
push
aam
ljmp
xchg
cmp
jmp
mov
mov
in
add
mov
jae
adc
inc
ficoml
loop
push
mov
clc
mov
mov
add
adc
sti
add
mov
fdiv
add
or
sub
pop
sub
add
xor
and
and
and
ret
xor
jae
sbb
bound
mov
and
xor
pop
mov
push
in
dec
ret
out
shll
rcrl
xlat
xchg
push
push
inc
ret
ret
sbb
sbb
cmp
add
fadds
adc
or
inc
jle
push
adc
sbb
scas
or
inc
cmp
pop
sub
adc
xor
pop
cmp
les
outsl
mov
stc
mov
or
imul
xor
andb
mov
repz
jmp
iret
jae
add
adc
imul
pop
sub
or
xlat
ds
or
mov
jecxz
cmp
leave
int
pop
lahf
push
and
stos
inc
les
sahf
push
adc
mov
dec
shlb
int
sub
or
fwait
adc
cmp
jae
imul
dec
xchg
xchg
jbe
jmp
push
sub
or
fbstp
shrb
inc
add
add
or
int
rep
iret
push
sbb
add
imul
incl
jae
xor
jne
lock
cmp
or
or
push
scas
and
mov
or
push
out
push
addl
int3
ret
ret
pop
ret
mov
inc
jmp
or
add
idivl
cmp
shl
or
or
jb
mov
aaa
fcoms
loope
mov
mov
lahf
mov
fcmovbe
ljmp
mov
dec
out
or
pop
popa
mov
add
insb
push
jne
aam
jnp
shrl
sub
inc
fisttpl
push
and
and
cmp
negl
push
pusha
mov
fwait
sbb
mov
test
push
xor
mov
out
out
dec
inc
inc
push
push
sub
add
add
push
mov
push
or
rcrb
push
inc
rolb
inc
push
push
addr16
pop
mov
xor
mov
cmp
std
xorb
xchg
and
push
jbe
in
decb
not
shr
and
dec
ror
dec
mov
or
jno
mov
push
test
jne
inc
nop
stc
mov
shr
or
mov
fiadds
les
fiadds
pusha
ret
add
stos
fst
loop
push
shrb
adc
fists
sti
mov
loopne
add
call
jb
je
stos
xor
movsb
jns
adc
push
inc
cmpsl
je
mov
ret
cmpsl
iret
or
add
mov
fstpl
roll
ret
mov
leave
fld
mov
insl
push
mov
aam
or
in
daa
cmp
jae
insb
aaa
add
xor
clc
je
rclb
in
mov
fistpll
jl
shll
sbb
cmp
repz
sbb
rolb
push
adc
cltd
push
push
aas
adc
or
xor
clc
sbb
outsb
jo
add
sbb
arpl
hlt
aad
pushf
mov
jo
out
cmp
xor
or
xor
add
test
add
push
push
or
add
lret
cmc
jo
pop
xchg
data16
js
sub
lods
les
ret
mov
inc
sub
or
push
ljmp
dec
or
inc
push
fs
add
cmp
clc
adc
movl
rclb
xchg
out
out
loope
enter
add
loope
test
and
aam
loop
jp
jne
test
sbb
or
icebp
xor
clc
jae
sub
je
or
mov
sbb
mov
shl
or
loopne
jo
cli
jb
mov
push
xchg
mov
mov
loope
pop
push
add
sbb
jge
mov
mov
adc
xchg
or
test
and
imul
inc
loop
mov
xor
push
push
adcl
dec
sub
in
loopne
add
iret
shl
or
inc
or
outsl
add
cmp
jb
imul
sarl
add
add
lcall
test
loope
ror
and
movsb
pxor
add
add
or
jne
sub
aas
lret
sbb
xor
sbb
dec
sub
call
sub
popl
leave
gs
sub
sbb
movsl
jno
roll
inc
inc
fildl
cmp
push
inc
mov
les
push
ss
or
ds
and
push
mov
scas
sbb
rclb
add
stc
inc
sbb
mov
popf
test
cmp
inc
push
mov
cmp
inc
cmp
divb
aad
inc
sub
mov
test
loopne
dec
push
shrd
push
adc
inc
in
pushf
sbb
cmp
push
push
inc
lea
mov
or
les
jo
or
lahf
lret
or
pop
pop
lds
dec
rorl
add
adc
shlb
xor
and
push
pop
or
add
insl
inc
lea
mov
jmp
cmp
and
shrb
lea
pop
mov
imul
addb
pop
inc
mov
sub
jbe
mov
add
mov
dec
ret
mov
xchg
xchg
sbb
je
inc
std
lcall
adc
adc
mov
jl
incl
and
mov
mov
das
mov
ds
adc
mov
push
pop
jae
fsubrs
enter
push
sub
test
xor
push
bound
fisttpll
sub
and
xor
or
mov
data16
push
mov
es
daa
and
scas
out
popf
sub
mov
andb
xchg
or
xchg
rclb
js
lret
stos
iret
xchg
cmp
call
push
cmp
push
dec
sbb
popa
fwait
and
inc
scas
push
adc
push
jns
lea
inc
adc
pushf
push
lock
mov
xor
sbb
xlat
test
out
loopne
sbb
adc
loope
mov
cmp
sbb
or
push
in
xor
add
mov
adc
ljmp
adc
xor
je
inc
sbb
mov
lret
xor
or
inc
xor
out
jmp
inc
sub
xchg
pop
imul
mov
push
test
and
push
pusha
or
jo
movsb
cmp
loopne
jp
negb
je
sub
int3
insb
lret
and
testl
mov
es
shl
adc
rcrl
je
xchg
leave
dec
fadds
xor
mov
popa
test
cmp
inc
pop
imull
jo
push
mov
xor
adc
dec
test
adc
mov
lds
mov
cmp
sbb
je
or
and
add
jne
mov
mov
adc
aaa
rorl
dec
sbb
inc
testb
or
push
inc
and
pop
testl
mov
jbe
fisttpll
adc
rcll
das
push
xchg
push
mov
or
inc
and
or
nop
mov
sbb
in
js
sbb
fmull
subl
cmp
jbe
sub
push
push
cmp
push
sub
push
adc
xchg
xchg
sbb
adc
lea
add
popf
and
inc
lcall
mov
rorb
rcrb
outsl
xchg
jo
bound
imul
and
sahf
leave
push
shlb
faddp
sub
jae
push
sbb
mov
adc
sbb
sbb
push
ljmp
cmp
inc
movsb
decl
jo
int3
sbb
loope
aas
push
mov
fsubs
inc
cmp
and
incb
sub
adc
jnp
sarl
xor
or
push
rcll
pop
and
sub
leave
mov
jmp
lods
data16
sbb
xchg
aad
push
sub
dec
jg
and
xchg
mov
cmp
xlat
jmp
ja
imul
add
inc
fistpll
inc
pop
or
sub
add
push
mov
jne
xchg
or
fisubrl
pop
outsb
add
xlat
and
hlt
inc
adc
jbe
sbb
lcall
mov
daa
mov
and
push
push
mov
outsl
adcl
sbb
lahf
fdivs
movsb
cli
mov
shll
mov
cwtl
cld
repnz
or
sbb
mov
cmpsl
aam
sbb
arpl
leave
or
and
aas
test
mov
push
jb
xor
call
or
pop
xchg
pop
jbe
jmp
cltd
loope
mov
mov
std
inc
push
cmp
jae
ljmp
mov
rcl
loopne
shlb
jb
cmpsb
pop
fsubs
inc
and
lcall
xor
add
mov
ret
daa
adc
dec
mov
shr
sbb
fsubs
xchg
sub
adc
mov
or
loope
in
sbb
lods
and
cld
lcall
insl
pop
repnz
or
loopne
rcrl
xor
mov
sbb
push
inc
insb
lret
and
cmp
or
ss
cmp
stos
and
js
mov
dec
add
and
sub
jecxz
fmuls
jb
add
cmp
jae
scas
add
fnstenv
mov
jb
mov
js
call
and
rcr
xor
scas
inc
loopne
or
jns
sub
push
call
inc
iret
dec
dec
aam
aam
or
not
push
push
pop
dec
jmp
jge
cmp
push
pop
imul
xor
fsubrs
ret
jb
push
xchg
dec
mov
or
jne
jmp
inc
jne
test
sbb
adc
add
mov
inc
popa
bound
es
sbb
or
adc
out
loopne
jmp
jmp
push
cmp
push
hlt
add
lock
rorb
dec
rclb
jo
std
imul
sub
add
xorb
xchg
xchg
mov
imul
in
inc
push
jae
inc
loopne
movsb
arpl
mov
add
push
and
test
fdivrl
adcb
push
test
pusha
adc
inc
sbb
jmp
pop
pop
or
jae
pop
xor
or
cmpl
sub
inc
cwtl
popa
adc
jmp
mov
mov
ja
cmp
mov
xor
xchg
sbb
adc
push
mov
or
insb
or
or
pop
cli
lock
jb
aam
push
popf
sub
lds
out
and
popa
pop
sbb
pop
cmpsl
inc
jge
cmp
add
dec
das
inc
adc
dec
and
testl
push
lods
mov
jo
dec
add
push
or
dec
inc
aam
clc
add
and
and
xorl
sub
inc
inc
imul
mov
ror
mov
pop
inc
add
xor
mov
inc
dec
jne
sbb
outsl
or
xor
bnd
mov
push
or
shlb
rolb
mov
dec
mov
das
and
pusha
mov
push
sbb
lock
push
in
xor
jp
shl
je
cmp
hlt
and
jl
pop
mov
dec
sub
mov
or
mov
pop
addb
push
mov
jecxz
pop
pop
aam
in
adc
pop
add
mov
out
xchg
add
mov
push
leave
mov
dec
push
xor
mov
inc
or
orb
jno
icebp
jnp
push
sti
push
rcll
sub
mov
fidivrs
and
add
jo
rcll
loop
cld
inc
add
je
loopne
or
xchg
outsl
or
and
fs
push
adcl
mov
mov
xchg
data16
dec
enter
popa
push
aas
inc
inc
push
cmp
pusha
cmp
cmp
fs
cmp
mov
cmp
loopne
and
cmp
xor
sbb
xchg
imul
pusha
sbb
xchg
subb
xchg
sbb
outsb
loopne
nop
xchg
add
inc
push
nop
inc
and
inc
push
nop
inc
jb
push
nop
inc
push
jae
je
push
nop
inc
mov
nop
shlb
enter
add
and
jns
and
enter
pop
enter
cmpb
pop
enter
enter
sarb
pop
add
nop
add
nop
pop
and
in
add
inc
pop
pusha
add
nop
add
adcb
xor
nop
add
shlb
add
nop
add
add
enter
xor
xor
inc
ss
add
add
or
jb
cmp
jb
inc
loopne
jns
add
cmp
add
fs
and
add
inc
inc
pusha
add
in
inc
and
cmp
inc
mov
cmp
dec
loopne
cmp
add
jb
sbb
dec
and
jb
sbb
dec
pusha
sbbb
push
xorb
jb
mov
sbb
push
loopne
push
jb
push
add
cmp
sbb
push
push
cmp
inc
pop
pusha
fisttpll
xor
or
add
aas
or
fs
and
push
push
stc
mov
or
scas
ds
cmp
js
sub
push
inc
dec
shll
jle
cmp
sub
aaa
and
push
add
cmp
in
and
and
mov
adc
xor
mov
sbb
mov
dec
sbb
and
mov
in
mov
xor
sahf
xor
push
mov
dec
inc
mov
jns
cmpsl
loopne
mov
mov
mov
daa
push
mov
pop
mov
in
pusha
mov
lods
pusha
push
mov
cmp
mov
js
push
xchg
xchg
mov
lret
pop
test
dec
xchg
mov
push
lods
xchg
mov
push
les
mov
xor
test
lods
or
push
es
xor
sbb
xchg
mov
sub
jne
addr16
jmp
xor
push
add
dec
and
add
jae
cmp
or
or
mov
insb
inc
movsl
and
sub
pop
iret
dec
popa
outsb
pop
inc
bound
dec
popa
jb
jbe
xchg
jb
ja
outsb
repnz
scas
pop
insb
pop
jne
pop
push
gs
repnz
dec
arpl
jbe
jl
jne
fwait
pusha
data16
or
jb
addr16
dec
jo
aaa
arpl
imul
add
movsb
adc
insb
jg
aas
mov
sbb
das
inc
stos
inc
imul
bound
inc
push
fadd
push
outsl
and
mov
mov
inc
daa
outsl
daa
sbb
xchg
int3
daa
push
add
push
jne
push
gs
jne
mov
fsubs
push
fs
pop
dec
outsl
inc
mov
jae
mov
push
lock
jb
outsl
xchg
sbb
out
inc
mov
movsb
and
dec
addr16
push
pop
repnz
dec
sub
in
mov
sub
adc
xchg
xor
or
mov
inc
push
data16
out
loope
adc
incl
xlat
mov
or
xor
add
mov
xor
sub
popl
xorb
loope
and
add
je
cli
jg
scas
or
insb
push
insb
jne
fucomi
pusha
xchg
push
push
outsb
test
add
aaa
push
pop
cmc
pop
mov
add
jg
xor
fstps
xchg
cld
inc
aam
mov
jg
inc
lods
add
xchg
out
mov
mov
push
inc
imul
daa
jg
repnz
lret
jg
daa
jnp
inc
mov
mov
test
jno
dec
push
jo
pop
outsl
flds
insl
or
pop
and
pop
mov
xchg
push
pop
add
cs
fstpt
ljmp
cmp
jae
xor
push
cmp
add
pop
or
movsl
js
pop
clc
outsb
outsl
xor
scas
dec
inc
or
jl
sbb
ret
xchg
es
xchg
add
mov
dec
stc
inc
and
enter
sbb
enter
add
je
cmpb
inc
xorb
aaa
pop
push
add
jg
les
iret
inc
fld
clc
lock
push
adc
add
nop
xor
in
or
xchg
out
mov
fadds
adc
aam
cld
add
fcomp
cli
mov
mov
fwait
inc
sub
sub
int3
xor
js
xchg
rorl
inc
xor
xor
call
sbb
dec
dec
and
and
and
jae
inc
dec
push
imul
and
jae
xchg
ror
jae
jne
mov
addr16
inc
xor
mov
and
enter
addr16
inc
lret
subl
xchg
inc
mov
cmpsb
xchg
mov
mov
xchg
les
out
addr16
adc
cmp
adc
cmp
cmp
cmp
cmp
sbb
sbb
cmp
cmp
cmp
cmp
add
add
cmp
cmp
cmp
cmp
or
or
cmp
cmp
pushf
pushf
pushf
mov
repnz
pushf
pushf
pushf
pushf
cmc
div
clc
pushf
pushf
pushf
pushf
stc
cli
sti
cld
pushf
pushf
pushf
pushf
std
jmp
pushf
pushf
pushf
pushf
loope
jecxz
pushf
pushf
pushf
pushf
in
out
pushf
pushf
pushf
pushf
jmp
pushf
pushf
pushf
in
out
out
rorb
dec
testl
insb
dec
push
inc
jbe
add
jg
mov
lods
cld
dec
inc
fcoms
jle
lret
inc
xor
mov
xor
jb
adc
dec
pop
xchg
sahf
pusha
flds
jmp
add
or
data16
jns
or
js
push
mov
inc
adc
pop
lods
push
xchg
cs
fcompl
pop
and
cmp
inc
inc
sbb
dec
iret
cmp
mov
popa
cwtl
xchg
adc
sahf
pop
inc
imul
into
inc
adc
sbbb
pop
push
mov
inc
or
push
adc
dec
cs
dec
adc
mov
shrb
rorl
cmpsb
mov
iret
js
sub
lods
comiss
icebp
pop
test
outsb
xlat
in
fs
mov
inc
dec
lahf
dec
dec
or
xor
and
push
dec
add
ret
test
test
inc
inc
fsubs
mov
xchg
cmpsl
add
cmc
add
mov
les
lock
pop
add
and
push
ds
bnd
test
cmp
jg
sub
ret
or
jp
ja
adc
pop
outsl
into
adc
inc
pop
add
arpl
andl
dec
mov
sub
leave
addb
pop
mov
mov
call
pushf
mov
xlat
mov
cli
and
gs
adc
or
ret
push
cmp
outsb
inc
sub
adc
or
and
cmpb
arpl
fisttpll
loope
sub
dec
je
add
nop
and
xor
inc
lea
mov
lock
pop
call
lock
cmp
ss
jbe
jmp
jp
fcmovb
adc
inc
inc
push
rorb
mov
adc
adc
sarl
es
and
test
pop
jo
test
flds
clc
and
jae
sub
sub
jmp
add
or
add
mov
inc
push
push
mov
push
adc
cmp
pusha
add
ret
nop
sbb
add
nop
adc
pop
stc
pop
add
mov
mov
xchg
push
cmpsl
rclb
sbb
cmp
movsb
fnsave
aam
mov
adc
movsl
sub
pop
xchg
push
daa
test
out
add
ret
sbb
pop
add
jne
xchg
dec
xchg
add
insl
loope
stos
lods
gs
adc
xor
pop
inc
xor
push
jae
push
jo
mov
sbb
fs
inc
nop
mov
rorb
bnd
jae
cmp
xor
stos
and
fsubs
outsl
xor
push
xor
push
dec
push
cmp
ljmp
lret
mov
push
sub
xchg
sub
or
sub
mov
push
iret
dec
pop
pop
ds
cwtl
inc
rclb
push
pusha
sub
xchg
sbb
dec
push
dec
call
sub
das
fimull
iret
mov
add
sub
dec
push
jbe
sbb
and
aam
add
add
pusha
inc
jle
mov
pop
or
or
cmp
or
pop
push
fcmovnu
jp
sub
outsl
bound
adc
or
ja
xor
fsubr
mov
xor
xor
outsl
xor
mov
jge
adc
add
mov
push
jns
cmp
pusha
aam
push
xchg
sbb
xchg
dec
pop
and
adc
push
jne
push
cmpl
das
pop
jle
loopne
sarl
scas
xchg
jp
sbb
adc
les
xchg
subb
mov
cmp
mov
xlat
or
and
ret
shlb
ljmp
mov
adc
pop
ds
rcrb
fwait
jl
stos
or
mov
push
mov
mov
cmpsb
jo
nop
pop
cmp
fildl
mov
data16
shlb
arpl
insl
mov
leave
mov
sub
mov
sub
subb
mov
inc
mov
enter
insl
inc
dec
xchg
out
lcall
lock
clc
fs
and
pop
or
data16
shlb
dec
sub
dec
jecxz
inc
sub
mov
ds
enter
cmp
cmp
inc
mov
xchg
pop
add
jnp
push
jno
aaa
nop
push
jne
and
mov
lock
aas
aam
nop
inc
mov
clc
lahf
xor
adc
pop
jo
and
test
sub
into
cmp
adc
push
adc
enter
fbstp
ret
inc
pusha
cmp
es
adc
dec
push
cmp
lock
ret
pop
sub
inc
add
cmpl
insb
bound
ja
pop
mov
and
enter
popf
adc
addr16
or
fisubs
pop
add
and
xchg
cli
jb
cmp
jbe
mov
mov
clc
mov
add
imul
add
xor
inc
dec
cwtl
jg
pop
inc
xchg
inc
push
inc
jbe
cmp
sbb
mov
rclb
out
add
or
sbb
inc
sub
out
pop
pop
and
inc
bound
pop
mov
cmp
mov
aaa
push
fs
ljmp
xor
imul
nop
xchg
pop
inc
xchg
add
xchg
push
sti
mov
sub
push
std
add
and
aas
mov
xor
dec
lmsw
fcom
jp
shlb
ficompl
dec
or
retw
sub
mov
mov
stos
test
and
cli
cmp
je
sub
out
mov
insl
ret
or
jbe
lea
mov
push
jb
push
out
sub
mov
out
inc
fwait
add
lea
insl
xchg
sar
inc
xchg
mov
hlt
or
hlt
popa
add
enter
repz
shlb
jecxz
inc
pushf
jne
xlat
rcll
test
les
je
mov
add
adc
or
shrl
sub
je
inc
popa
xor
jmp
inc
push
cmpsl
add
dec
int3
aad
jl
dec
mov
sbb
jmp
mov
push
add
adc
mov
aas
xlat
fistpl
mov
or
imul
sahf
add
iret
test
call
in
lea
and
jg
bound
cmp
jne
mov
or
inc
fs
jo
add
sub
jle
jp
jo
addl
sub
sarb
dec
dec
jne
xor
bound
mov
addb
mov
orl
jl
fwait
jle
sub
dec
sar
scas
test
test
pop
pop
xchg
sbb
add
subl
jle
push
mov
add
mov
or
mov
or
pushf
mov
arpl
jae
push
cwtl
pop
movsb
or
xor
hlt
cwtl
push
adc
xchg
sbb
cli
xchg
enter
nop
les
nop
nop
pop
addl
inc
push
mov
fmuls
leave
pop
les
addb
insb
in
orb
adc
dec
jmp
mov
xchg
mov
fwait
cmp
pop
dec
and
lock
out
mov
mov
into
mov
sbb
loopne
xor
dec
pop
and
inc
add
push
cmpsl
sbb
inc
cmp
xchg
aad
inc
dec
ret
incl
dec
mov
adc
inc
sarl
mov
dec
push
pop
enter
xchg
cmc
pop
aaa
mov
jge
jg
push
pop
jo
add
xchg
fisttps
adc
adc
mov
fcomps
cmpsb
jmp
call
add
imul
jp
dec
movsl
ret
outsl
fcompl
or
test
fidivrs
aaa
add
adc
pop
xchg
cmpsb
pop
jmp
dec
add
rcll
xor
cmp
popa
aad
jg
mov
add
jle
mov
cmp
fsts
fidivl
adc
movsb
push
push
and
xor
or
and
mov
xor
cld
jno
pusha
icebp
dec
jecxz
add
mov
insl
inc
sub
out
mov
sub
lahf
or
sub
jge
test
jo
mov
out
orl
int
test
and
mov
and
add
lods
add
xchg
sub
jae
gs
in
and
fs
cmp
mov
or
or
aaa
cs
faddl
pop
inc
lcall
pop
mov
sbb
inc
add
dec
fiadds
leave
push
ret
pusha
dec
fmulp
inc
imul
xor
push
pop
push
mov
leave
jge
mov
lret
fsubl
arpl
inc
or
pop
lahf
sub
mov
sub
pusha
arpl
movzbl
pop
leave
lret
add
or
sbb
roll
rorl
mov
adc
or
or
add
and
int
inc
pop
jns
add
xor
or
inc
fidivrs
push
sbb
xchg
sub
ss
aam
add
inc
or
lods
xchg
sub
fwait
push
push
sub
pop
pop
push
add
xchg
sub
jg
sbb
les
subb
mov
cmp
jecxz
add
popa
add
lret
call
add
mov
sub
lahf
lcall
or
pop
add
mov
add
pushf
outsl
data16
push
sbb
cs
fmul
and
scas
mov
addr16
sub
movd
shlb
pushf
jl
dec
test
in
and
adc
fldt
jg
ficompl
xchg
addr16
xchg
push
cld
sbb
enter
inc
mov
and
add
push
fs
mov
repnz
push
mov
ret
push
add
insb
add
mov
sub
test
int3
lahf
pop
mov
outsl
and
push
ret
daa
and
mov
jbe
sbb
ljmp
shlb
aas
out
out
cmp
btcl
mov
mov
mov
push
ja
push
add
inc
fs
sub
je
outsl
pusha
push
cld
jae
cmc
xor
bound
test
inc
stos
sbb
nop
push
dec
incb
adc
adc
inc
test
push
jne
add
mov
jo
push
push
push
clc
jl
jae
xchg
pop
dec
xchg
ret
test
lret
imul
loop
jno
pop
cmp
mov
cld
mov
jecxz
xchg
push
cmp
inc
add
cmp
daa
or
movsb
mov
ret
add
cmp
cs
lock
add
lcall
outsb
sub
mov
jne
mov
pop
xchg
mov
pushf
aas
mov
push
clc
push
and
aad
ret
cmpsl
push
push
repnz
loopne
add
jne
lahf
mov
adc
cld
sub
push
test
aaa
lods
int3
leave
es
popa
cmpsl
outsl
and
xor
dec
out
inc
inc
xchg
pop
mov
pop
dec
add
dec
aaa
add
xchg
mov
push
pop
ja
push
mov
fmuls
pop
xor
outsl
arpl
sbb
mov
pop
fists
ret
data16
gs
ja
sub
and
sbb
jmp
pusha
xchg
cltd
fdivs
sub
xchg
cwtl
in
adc
outsl
aaa
dec
push
xchg
insb
fs
inc
shrl
push
insb
add
xor
movzwl
pop
nop
mov
jae
sub
sub
cmp
adc
mov
addr16
dec
lcall
mov
shlb
je
and
or
cmp
js
in
cs
js
test
push
dec
leave
jl
jae
dec
push
lds
inc
addb
mov
nop
adc
jbe
ja
fwait
mov
push
iret
test
sbb
data16
pop
stc
loope
push
mov
outsb
add
dec
jae
add
jnp
mov
stos
insb
and
jbe
in
fldenv
xchg
nop
sbb
push
xchg
xlat
subb
cmp
jae
dec
idivb
cwtl
and
mov
jne
subb
pushf
hlt
outsl
jl
push
jb
sub
subb
test
fsubs
jmp
movsb
jg
outsl
movsb
or
iret
cmp
test
xchg
out
mov
outsl
fcomps
out
jbe
sub
out
ja
and
adc
mov
dec
mov
dec
iret
mov
loopne
mov
outsl
pushf
mov
jo
mov
test
push
and
mov
xor
and
cmpl
pop
lock
fs
scas
pop
inc
les
jb
inc
es
or
bound
mov
sbb
fs
push
enter
es
push
bound
addr16
push
add
push
nop
jb
adc
orl
mov
add
mov
leave
lret
aam
jae
cmp
mov
cmpsl
inc
jae
test
push
push
dec
mov
dec
fsubs
cltd
fcoms
fmull
xchg
mov
pop
loopne
mov
lahf
push
ja
lahf
xchg
andl
je
sbb
in
leave
inc
shlb
xor
lahf
fwait
bound
dec
mov
scas
cmp
sub
sbb
in
push
out
iret
in
clc
je
cltd
incl
mov
jno
xchg
mov
test
movhps
push
push
sbb
pop
push
pop
hlt
xlat
xorb
cli
ds
or
pop
jp
inc
dec
push
xchg
iret
clc
enter
cs
or
pop
cld
cld
jne
imul
iret
sub
mov
jbe
and
add
push
pop
enter
pop
data16
js
insb
dec
push
jns
push
push
pop
stc
ficoms
mov
inc
pop
or
adc
dec
sbb
push
mov
or
xchg
lret
push
xor
adc
dec
push
nop
ja
adc
test
test
adc
fs
add
scas
ja
lret
pop
std
sub
sbb
sbb
ss
push
ja
jae
jb
lods
faddl
nop
lret
push
and
or
and
and
cwtl
dec
cs
inc
and
pusha
aaa
xor
adc
push
dec
push
xor
sub
inc
xchg
and
jo
fs
jns
sbb
cwtl
mov
add
push
mov
push
cmpl
lea
xor
dec
inc
sub
inc
ja
test
sbb
sub
jae
cld
cmp
push
jbe
test
cmp
dec
in
mov
dec
cmpsl
cmp
jp
pop
cmpsb
ficompl
or
lods
pop
enter
aas
inc
mov
jb
xor
leave
add
enter
add
jae
adc
sbb
push
dec
push
jmp
dec
addr16
jb
or
or
mov
push
jle
dec
in
fs
movsb
jnp
imul
pop
or
mov
push
add
sub
bound
enter
pop
daa
sub
dec
leave
pop
fmulp
xchg
lods
jl
pop
pop
jl
sub
dec
addr16
pusha
mov
and
mov
fabs
jbe
outsl
cmpsl
fs
in
jl
xchg
xchg
or
addr16
xor
dec
sbb
sbb
popl
xchg
lret
insb
push
push
sbb
push
jo
and
jb
jo
add
adc
or
je
icebp
xchg
es
ljmp
daa
dec
ja
inc
dec
vmread
adc
dec
push
adc
das
dec
es
dec
mov
xchg
jl
jl
cmp
dec
push
das
xor
mov
pop
leave
lret
test
test
sub
test
xchg
lret
mov
mov
push
mov
or
das
nop
iret
es
nop
sub
ja
dec
add
inc
lret
push
and
xchg
mov
dec
xchg
push
cwtl
mov
cwtl
adc
add
push
addr16
xchg
adc
js
inc
mov
push
jb
push
movsb
nop
dec
cmpsb
nop
nop
movsb
adc
push
dec
add
jmp
inc
push
fs
add
subb
pop
fwait
dec
mov
dec
in
or
mov
push
mov
and
push
test
add
ret
adc
cltd
loopne
bsf
mov
nop
cmpl
xchg
push
dec
movsl
lods
daa
xchg
shlb
pop
and
mov
pop
xor
in
add
hlt
xchg
push
sub
enter
adc
xor
aam
lcall
nop
and
test
xor
test
push
sub
push
nop
mov
sbb
xchg
aas
lods
inc
jns
inc
push
ds
lds
cltd
or
fcoms
pop
xor
jl
and
sbb
loopne
jbe
or
cmpsl
push
xchg
in
adc
in
and
dec
gs
inc
xor
dec
push
nop
xchg
pop
cmpl
js
insl
xchg
in
xchg
and
and
or
rcll
add
insl
enter
insl
adc
add
cwtl
mov
int3
dec
add
cs
in
dec
cmp
jo
lahf
lret
jae
test
in
and
jns
pusha
pop
fs
push
shrb
adc
sub
in
je
js
insl
jl
push
test
adc
mov
jmp
adc
jns
pushf
les
lahf
movsb
cmp
test
lods
stc
pop
sahf
lret
lods
mov
mov
jno
sahf
lret
push
mov
sahf
lret
rol
add
xor
push
scas
jb
dec
jae
faddl
aam
sub
pop
sahf
call
lock
jae
sub
push
clc
nop
cmpsl
mov
mov
push
or
add
mov
mov
mov
adc
push
sbb
in
sbb
and
cs
in
and
sub
jns
xor
jns
je
jae
cmp
cs
inc
pop
inc
xchg
dec
jns
lahf
lret
aam
sbb
push
pop
pop
sahf
lret
jae
mov
call
stc
xor
fs
lret
pop
push
out
repnz
sahf
jo
je
js
and
repz
mov
test
jg
push
mov
pop
sahf
lret
mov
sbbb
cwtl
jl
les
adc
lret
pop
lods
in
and
out
repnz
sahf
mov
mov
movsl
bnd
rcr
add
enter
jns
int3
fildl
in
aam
fdiv
fmul
in
jl
test
cwtl
in
in
jl
call
scas
cwtl
cmp
lock
inc
stc
add
add
dec
add
cld
inc
mov
push
lock
dec
or
inc
mov
bound
int
jo
mov
add
mov
movsl
and
mov
lahf
push
imul
push
and
adc
les
mov
stos
imul
push
insl
mov
clc
js
movsl
sbb
mov
dec
push
adc
bound
mov
mov
or
pop
daa
stos
add
push
ja
jne
sbb
inc
iret
dec
popa
pushf
xor
jae
outsl
popa
jecxz
rclb
outsb
inc
pop
dec
enter
inc
adc
jae
lahf
testb
mov
mov
add
xor
sub
adc
mov
xor
not
rclb
sbb
sub
or
popw
and
xchg
xlat
xchg
push
jge
nop
movsb
push
outsb
pop
shlb
jae
or
insb
push
shrl
add
sbb
sub
cmp
jge
cmp
das
mov
icebp
hlt
inc
add
enter
lea
add
ja
iret
repz
push
push
aas
inc
dec
push
cmp
repz
pop
insw
je
and
repz
mov
ja
aaa
sbb
inc
mov
mov
aas
scas
fcoml
sub
mov
cld
and
out
aaa
sbb
or
cmp
fisttpll
out
lcall
push
jns
cmc
and
mov
dec
xor
hlt
sahf
xchg
ja
or
adc
inc
aad
pop
stc
xor
sbb
mov
movsl
or
or
nop
das
inc
push
xchg
or
and
pop
pop
mov
icebp
add
jle
push
xchg
jae
ss
and
addr16
adc
daa
jb
pusha
push
xor
mov
pop
data16
dec
repnz
add
cmp
in
cmpsl
popf
push
mov
nop
and
fs
adc
ret
movsl
test
push
or
ja
jl
push
xchg
lock
inc
pushf
inc
scas
repnz
sbb
mov
shrl
cmp
xchg
push
lock
js
in
xor
mov
mov
pop
push
push
test
fsubs
filds
xor
ltr
sbb
pop
adc
xchg
divl
daa
mov
aas
adc
jns
xchg
or
inc
rolb
into
js
add
xchg
sbb
or
add
popa
in
push
mov
das
fbld
pop
and
pop
repz
cmc
rol
mov
add
cmpsl
xchg
iret
loope
dec
dec
jge
outsb
jae
jo
add
arpl
into
xchg
push
or
add
lods
fs
add
jl
jg
adc
jns
cmp
ja
mov
jne
cmp
xor
rcrb
lock
and
and
cwtl
inc
add
jmp
jo
add
clc
fs
imul
adcl
int3
xchg
sbb
adc
jo
loope
ljmp
adc
add
lret
bound
xchg
add
adc
sbb
add
or
lock
inc
cld
shl
inc
shll
xchg
js
cmp
mov
lock
sti
popa
jb
add
xchg
js
push
subl
cmp
fldl
mov
pop
hlt
hlt
cltd
xchg
out
add
lock
dec
or
in
in
mov
jmp
cmp
ss
hlt
in
loop
pop
add
inc
lea
sti
movsl
add
xor
ds
sub
in
test
enter
sub
inc
fisubl
xchg
mov
cwtl
and
mov
mov
ljmp
jl
inc
sub
outsl
pushf
leave
jl
cmp
jle
add
or
jmp
nop
or
inc
dec
jne
data16
add
fcmovnbe
ficoms
inc
lds
push
mov
adc
shlb
push
pop
aaa
lahf
mov
xchg
xchg
cmp
adc
sub
les
fwait
jno
inc
lret
jb
mov
sub
dec
clc
dec
adc
cmp
and
leave
ret
gs
xchg
inc
andb
enter
push
inc
movsb
fwait
pop
jg
mov
add
ja
xchg
add
mov
fwait
cmc
dec
leave
mulb
push
cltd
dec
pop
cltd
xadd
cmp
cmp
rcrl
insb
jge
repz
repz
mov
shl
out
lcall
cmp
pop
imul
sahf
out
scas
ror
ljmp
fwait
adc
xor
insl
xor
ds
clc
mov
mov
mov
pusha
mov
mov
sbb
mov
sbb
mov
mov
or
jo
in
test
mov
mov
les
mov
cmp
test
or
cmp
leave
lds
push
mov
hlt
sbb
dec
cs
inc
xchg
mov
fsubs
lods
in
pop
mov
out
leave
and
jl
addr16
iret
mov
sbb
mov
sbb
xor
clc
mov
in
inc
mov
jae
hlt
ss
sub
nop
ja
mov
mov
inc
aas
xor
pop
repnz
jne
jmp
add
push
call
lret
add
fwait
and
stc
sbb
mov
xchg
loope
or
sbb
add
add
adc
mov
and
and
add
shrb
or
rorl
adc
jg
int3
aam
mov
push
mov
mov
roll
jb
or
jmp
pop
dec
sub
mov
xchg
aaa
mov
jge
push
adc
pushf
cwtl
mov
aad
test
xchg
push
es
jle
repz
mov
mov
aas
movsl
aaa
and
rorb
mov
xchg
lahf
mov
or
ret
sbb
lret
sbb
dec
xor
movsb
jmp
leave
and
mov
push
push
mov
aas
lret
jmp
sbb
bound
pop
or
push
lock
and
push
inc
dec
dec
mov
jnp
adc
cltd
push
dec
les
add
jbe
xor
leave
add
ss
sub
scas
or
push
stos
or
movl
or
sub
clc
and
pop
xchg
sub
testb
int3
enter
xor
add
hlt
shlb
shl
adc
add
adc
xor
cwtl
lahf
add
xor
push
outsb
popa
jbe
iret
mov
sbb
nop
clc
and
add
lahf
dec
ss
add
push
jnp
fdivrs
scas
xor
divb
fstpt
pushf
push
mov
mov
shlb
jp
xchg
out
push
je
mov
nop
fwait
in
cmp
mov
test
mov
cmpsl
fldcw
lods
sub
pusha
mov
int
mov
es
insb
out
fs
push
mov
adc
jnp
in
push
in
inc
lock
xchg
mov
pop
test
pop
cwtl
jnp
jmp
pop
je
fisubl
cmpsb
out
cmpsl
out
add
and
test
push
negb
les
scas
add
push
insb
insb
or
and
enter
adc
inc
add
aam
or
sub
and
jb
cmp
jnp
inc
jne
insb
xchg
xchg
xchg
insb
sub
je
jo
movb
das
dec
and
fcomps
fcomps
insb
sub
or
das
dec
cmp
mov
aaa
xchg
rclb
call
imul
std
inc
mov
lret
and
dec
add
jp
sub
sub
addb
xchg
sub
sbb
movsl
or
call
pushf
call
paddq
std
fcompl
data16
loope
fidivl
or
add
or
jl
cs
push
rol
shlb
test
adc
inc
sbb
loope
jmp
lods
aam
pop
ret
mov
popa
mov
pop
adc
fstpt
add
loop
push
test
mov
inc
movsb
inc
out
mov
ret
pop
das
aam
out
nop
fistps
mov
or
xchg
je
mov
dec
shl
or
push
jno
fs
addl
aad
add
jnp
call
sbb
call
cwtl
mov
lahf
add
fcoms
ds
jo
mov
rolb
inc
adc
add
fadds
xor
mov
jno
mov
push
cli
aas
jge
loop
jmp
mov
mov
and
movsb
push
and
cltd
or
cmp
pop
aad
and
loop
pop
lods
cltd
or
imul
rorb
aam
pop
mov
cli
add
mov
jnp
mov
ss
rol
mov
adc
xor
or
mov
add
jecxz
and
and
test
mov
enter
cltd
and
montmul
cmpsb
adcl
or
lock
adc
nop
testl
lahf
and
fdivs
sub
dec
sbb
jae
add
enter
xorb
in
xchg
jno
js
sbb
je
out
mov
push
das
push
dec
jge
cltd
out
sub
clc
sbb
cwtl
pop
lods
and
and
mov
and
out
or
jbe
nop
or
addr16
rcrb
pop
add
sarl
sar
sarb
mov
cmp
dec
cmp
lea
push
jns
mov
hlt
andb
dec
mov
and
and
mov
add
or
pop
dec
out
test
inc
push
push
dec
lds
andl
cmpsl
and
or
add
xchg
and
mov
lds
sbb
pop
jl
sub
dec
and
rol
mov
mov
orl
xor
decl
lcall
inc
mov
lods
lock
pop
and
mov
or
or
pop
lea
cmc
pop
mov
in
xchg
push
inc
xor
adc
adc
nop
mov
xchg
inc
or
jno
aam
inc
xorl
cmpb
cs
and
push
gs
addl
xchg
shrl
add
stos
inc
jg
adc
cmp
xlat
xchg
mov
push
jb
push
adc
cmp
adc
fisttpl
es
xor
mov
mov
ja
add
mov
add
scas
pop
inc
jne
dec
pop
cmpl
mov
push
mov
stos
fisubrl
cmp
test
push
fcoms
cltd
in
mov
mov
or
daa
mov
into
into
and
hlt
push
sbb
in
mov
push
or
lods
mov
mov
js
and
aas
dec
sbb
mov
es
push
xor
cli
jge
loope
xor
adc
cmp
pop
popa
sbb
mov
adc
lods
pop
push
stos
ss
andb
fsubl
dec
clc
rcrb
leave
xor
and
inc
xchg
ret
cmp
cmc
mulb
lods
and
pop
daa
pusha
add
cmc
outsb
xor
and
out
ljmp
inc
push
mov
and
xchg
cld
movb
adc
sbb
call
or
adc
pushw
sub
fisttps
or
pop
fmull
outsb
sarb
mov
and
jmp
cmp
call
fsubrs
loop
cmp
add
fsubrs
pop
and
movsb
lret
mov
cmp
push
push
xchg
xchg
jns
sub
ds
movsb
stos
xchg
mov
shrb
sub
and
push
fs
call
clc
aas
out
and
outsl
fs
orb
inc
or
inc
mov
mov
jecxz
inc
push
mov
dec
mov
mov
jg
xchg
leave
mov
loope
or
mov
cltd
push
scas
inc
adc
cmp
dec
or
add
dec
mov
sarl
test
and
ss
leave
cmp
stos
xchg
push
nop
or
sbb
sti
jb
mov
cwtl
or
jmp
hlt
mov
add
inc
ficoml
dec
push
divl
adcb
mov
lea
dec
and
and
inc
mov
andb
idiv
addr16
mov
jne
shlb
adc
push
lods
sbb
mov
jns
add
mov
dec
jg
dec
cld
push
pop
xchg
or
push
dec
push
inc
xchg
leave
mov
into
jae
stc
xor
enter
addr16
cld
push
push
sub
add
push
repnz
sar
movsb
jmp
test
rorb
mov
push
dec
sub
aas
inc
sub
movl
mov
test
xchg
rol
add
sarb
or
mov
pop
dec
pop
fmuls
loope
loopne
outsb
ret
push
push
or
fidivs
js
mov
sahf
xor
sti
imul
pop
dec
out
cli
jge
pop
inc
shlb
mov
dec
add
mov
pop
js
mov
stc
xchg
push
xchg
pop
push
ret
add
pop
shlb
or
dec
pusha
xchg
ja
xchg
nop
mov
push
cmpsl
orl
jnp
dec
stc
test
push
xor
adc
movsb
push
aas
ja
in
mov
or
add
xchg
call
int
mov
push
lock
in
loopne
pop
pop
sahf
cld
mov
ss
cmp
mov
cmp
adc
xchg
and
and
loop
inc
loopne
gs
clc
add
mov
or
jns
aad
mov
les
in
pop
adc
fs
cmpsl
dec
imul
addr16
add
adc
mov
data16
push
mov
addb
pop
inc
subb
inc
lods
lahf
lea
sub
loopne
mov
cmp
adc
add
insb
pop
pop
push
xor
lret
or
xchg
adc
mov
fcomps
xchg
cmpsl
std
cmp
mov
sbb
inc
test
push
or
mov
mov
int
or
add
inc
add
xor
iret
mov
adc
imul
pop
pop
enter
loopne
lock
stc
cli
mov
mov
mov
push
test
inc
mov
or
ret
and
adc
or
push
push
sbb
ss
orl
rorl
mov
shlb
int
sub
add
nop
jbe
fsubrl
lods
pop
pop
pop
imul
inc
in
pop
adcb
mov
mov
jle
insl
movsb
das
xor
js
cwtl
out
or
in
aam
enter
mov
dec
dec
add
ja
mov
mov
rorb
xor
outsl
jg
xor
mov
mov
push
and
enter
mov
mov
sub
aaa
dec
aam
sarb
jp
pop
jns
aaa
outsb
std
lock
jne
or
movsl
mov
xlat
or
mov
orb
xchg
inc
pop
lcall
pop
orb
int
jno
pop
lea
je
jnp
pop
lods
andb
xchg
push
and
pushf
cmp
pop
and
arpl
mov
adc
add
orl
push
push
mov
mov
mov
popf
test
sub
enter
mov
sub
adc
and
ret
pusha
pop
push
xor
cmpsl
sbbb
icebp
add
das
mov
stos
out
inc
jae
nop
or
int3
mov
push
jl
push
inc
lods
into
xchg
lods
les
das
inc
cmp
inc
test
xchg
test
mov
sub
mov
shl
test
cmpsb
stos
dec
jmp
inc
inc
dec
mov
ret
cmp
daa
push
lret
inc
add
test
dec
mov
fisttps
mov
ret
adc
repz
or
clc
dec
push
repz
aad
sbb
lret
xor
push
mov
add
dec
add
sbb
sbb
xor
sbb
xchg
inc
sub
loop
insb
inc
sub
gs
mov
xchg
inc
push
adc
dec
cs
inc
sahf
addb
dec
mov
mov
roll
inc
or
mov
mov
sbb
adc
ret
adcl
cmp
mov
push
sub
ret
lods
gs
inc
bound
adc
aas
nop
aaa
cmpsl
mov
cmpsb
shrb
cmpsb
test
mov
push
clc
outsl
movsb
lcall
inc
outsb
enter
mov
xor
fwait
sarb
js
pop
sub
pusha
add
sub
add
add
lret
mov
ret
insb
mov
inc
cltd
fsub
rcrl
mov
mov
xchg
dec
mov
inc
js
pop
pop
sbb
and
adc
xor
adc
and
je
push
imul
and
or
loopne
xchg
out
pusha
gs
out
or
notl
bound
jne
and
repnz
inc
insl
sbb
popa
aad
in
xor
sbb
add
mov
js
stos
call
push
daa
cmp
cmc
in
cli
mov
sub
movsl
je
orb
mov
dec
aad
rcl
jae
daa
adc
adc
xor
or
inc
shlb
xlat
push
lcall
cmp
movl
or
nop
sar
ds
jo
pop
je
mov
adcb
call
outsl
pop
ret
cmpl
and
cs
loopne
push
push
push
jbe
adc
movsl
es
les
aaa
push
add
loope
ja
cmp
into
mov
dec
aam
daa
out
push
adc
add
cmpl
das
lock
push
mov
or
or
sub
dec
sub
push
jne
les
xor
and
mov
mov
mov
les
out
bound
push
inc
add
orl
pusha
add
jno
add
lods
lahf
inc
jmp
stos
xchg
push
fisttps
imul
ja
in
ret
movb
jns
jae
mov
cwtl
fwait
and
cmp
test
stos
xor
hlt
hlt
add
jnp
shl
cmpsb
inc
jg
lock
add
push
adc
jge
aam
sbb
cmovnp
jecxz,pn
xchg
imul
rorl
pop
adc
aas
int
arpl
lcall
jo
add
fisttpl
sbb
inc
fld
mov
sbb
xchg
in
pusha
pusha
cmp
out
mov
mov
add
sbb
jo
gs
xor
pusha
loopne
pusha
pop
push
sub
test
sub
jb
mov
jb
sub
mov
push
out
sub
sub
insl
insl
add
lea
add
mov
jmp
push
hlt
jns
int
hlt
or
pop
outsl
sbb
lods
and
inc
push
dec
imul
push
daa
sbb
mov
add
rol
fwait
int
add
pop
cmp
enter
sub
aad
and
fs
jns
addl
mov
inc
and
adc
cmc
cmpsb
fs
orb
in
lods
inc
mov
push
or
push
and
inc
pusha
pop
bnd
mov
imul
iret
or
ret
mov
fadd
sarb
in
adc
xchg
mov
nop
xchg
xlat
add
cmpb
adc
shrb
lret
pushl
or
fstl
dec
mov
rolb
mov
push
add
inc
aas
enter
dec
movsb
pushf
cld
pusha
and
pushf
cmp
and
bound
orl
stos
lret
cmpsl
les
add
add
ret
jne
xrelease
int
push
add
jo
ret
or
xor
sub
ret
xchg
sub
adc
adc
pushl
ffreep
inc
or
enter
inc
int
rcrb
and
lcall
pop
cmpl
js
mov
push
add
mov
clc
xor
or
add
les
lods
inc
idiv
or
ja
push
pop
test
sub
jge
sbb
test
cmp
sbb
popf
xor
lret
ret
adc
sub
push
addr16
mov
mov
push
mov
aas
pop
push
scas
dec
dec
inc
inc
dec
sarb
push
daa
xor
aaa
xor
xor
sbbl
gs
aaa
xchg
xchg
inc
or
mov
or
pop
xchg
iret
int3
iret
scas
movsl
daa
fsubl
iret
mov
cmp
or
sbb
xor
push
pop
or
and
iret
push
xchg
lret
sub
push
or
add
lods
dec
rcrb
push
rolb
lock
jl
rolb
aad
scas
xor
repnz
cmp
nop
loop
test
pop
cmp
push
movb
ljmp
lds
add
dec
push
push
and
fidivl
sarl
xchg
popa
sbb
enter
shl
add
or
es
cmp
xchg
pop
jo
and
xchg
or
out
push
jo
jno
insl
es
inc
testl
outsb
and
sbb
adc
pop
inc
test
dec
imul
ljmp
jl
add
or
push
enter
inc
sub
xor
pop
jg
aam
loope
add
test
fcomp
dec
cmpsb
cmp
or
add
inc
lcall
testl
addr16
sbb
sbb
aas
mov
rol
pop
movsb
push
inc
sub
xor
sbb
mov
scas
cmp
pop
push
add
push
aas
jb
bound
cmp
jle
shlb
arpl
xor
add
call
cmpsl
nop
aam
test
js
and
inc
adc
sbb
adcb
pop
xor
or
mov
or
daa
adc
xchg
test
sub
dec
inc
mov
adc
mov
movsl
cmpsl
push
cld
es
cmp
aad
and
pop
or
and
lock
inc
fimuls
or
pop
in
adc
and
shll
push
mov
xor
lods
xorl
mov
push
mov
cmp
das
in
mov
inc
xor
add
mov
movsl
test
sub
push
mov
je
inc
cli
sub
mov
insb
lods
cmp
or
or
dec
loope
hlt
adc
inc
lods
push
lahf
fs
bound
or
add
pop
xchg
pop
jb
sub
push
mov
jne
shrb
imul
push
aad
mov
pop
not
xlat
add
pop
mov
or
bound
in
mov
adc
xchg
xchg
cmp
movb
ret
popf
insl
mov
inc
xor
adc
dec
dec
add
popa
and
int
in
cmp
enter
inc
movsl
and
addr16
push
add
add
or
in
inc
pop
dec
xchg
or
movlhps
mov
push
pop
outsl
or
out
cmp
mov
push
sbb
xlat
or
adc
mov
or
cld
jns
pop
inc
mov
roll
or
inc
out
and
pop
inc
or
and
lea
dec
jnp
or
iret
es
bnd
out
or
arpl
sbb
ja
xor
or
cmp
nop
sbb
outsb
or
mov
or
int
or
enter
lret
lret
dec
add
roll
cltd
fldenv
or
movsl
sbb
or
or
cmp
ficoml
mov
pop
test
aaa
imul
frstor
push
cwtl
sbb
out
adc
or
addr16
pop
imul
shrl
sub
sub
lds
mov
test
and
cmp
add
mov
inc
pop
and
xchg
test
xlat
mov
push
test
sub
lret
inc
ret
dec
call
repnz
fistpl
xor
add
add
lea
mov
push
inc
lods
sbb
loop
xchg
xor
sub
cltd
pusha
lahf
dec
insl
iret
pop
lock
cmp
mov
fildl
nop
xor
or
add
adc
rol
out
inc
int
out
rolb
fsubrs
shll
jl
inc
mov
push
rcrl
pop
movl
push
add
and
cld
filds
sar
cmp
pop
je
push
mov
outsb
inc
inc
add
pop
cmp
nop
lret
lock
pusha
add
mov
jmp
push
icebp
push
out
push
sbb
and
add
and
mov
stos
mov
fstpt
xor
dec
push
clc
loop
test
pop
addr16
pop
jmp
mov
subl
xor
push
into
mov
ret
lods
sbb
add
cmovo
fldl
stos
adc
mov
repz
pushf
push
push
mov
int
stc
xor
nop
mov
dec
mov
mov
mov
scas
js
test
adc
pop
add
xchg
dec
ficoms
shlb
jns
in
add
filds
loopne
mov
or
push
or
imul
pop
int3
fiaddl
mov
test
xchg
xor
rclb
add
add
in
sahf
into
loop
adc
add
mov
inc
sbbb
lock
add
sub
xor
add
push
push
shlb
and
nop
push
sbb
and
lds
and
mov
pop
xor
xor
push
aam
divb
push
or
push
dec
ljmp
mov
test
dec
add
andb
pop
jmp
ret
in
add
int3
movb
iret
into
inc
mov
movsl
dec
mov
xchg
and
cwtl
pop
sub
add
lea
pusha
dec
ja
dec
and
dec
or
xchg
mov
inc
mov
jbe
test
les
mov
inc
sahf
mov
push
xor
add
test
mov
cs
dec
adc
js
adc
push
sahf
dec
inc
mull
dec
adc
lret
imul
mov
inc
adcl
mov
adc
xchg
mov
sub
or
mov
jnp
jbe
imul
test
sbb
inc
adc
mov
add
js
and
pop
dec
adc
repnz
add
dec
mov
sarb
aad
jns
in
xchg
dec
jle
mov
or
jns
dec
scas
sbb
fsubl
jo
xor
scas
sbb
dec
scas
and
add
dec
and
fisubs
push
stc
inc
pop
add
mov
sub
dec
sub
dec
imul
pop
sbb
sbb
sbb
or
push
inc
inc
xor
inc
pop
scas
xor
std
mov
dec
test
sbb
and
adc
outsb
leave
iret
inc
ret
jecxz
push
in
aad
jp
xchg
sbb
push
jnp
mov
xchg
pop
cld
mov
dec
push
push
ret
pop
mov
mov
loopne
sbb
in
pop
push
mov
and
scas
push
shl
imul
cmp
xorb
sub
aas
push
jne
pop
divb
push
sub
cmp
xor
jae
sub
mov
mov
push
sbb
inc
and
dec
lcall
lock
push
movsb
inc
xor
lea
push
mov
popa
xor
push
and
test
das
jp
lea
in
and
push
jl
sbb
sub
loopne
jae
xor
jg
leave
mov
in
push
sub
rol
mov
sarb
add
andb
fldt
mov
iret
pop
cld
cmp
idivl
dec
mov
add
jne
lds
add
fists
ljmp
sub
add
jbe
or
leave
xchg
sbb
outsb
push
xchg
rol
push
mov
ljmp
sbb
add
addr16
mov
pop
pop
sbb
pop
out
cmp
xor
or
cmp
dec
mov
or
movsl
in
out
xchg
fcmovne
xor
rorb
rcll
aad
xlat
xchg
xchg
xchg
xchg
fcomp
fcmovu
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
rol
ret
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
int3
int
iret
punpckhwd
xchg
mov
incb
testb
add
sbb
loop
xlat
jmp
push
mov
sti
push
in
inc
mov
shr
mov
fstp
jnp
in
iret
sub
inc
push
mov
lods
test
jmp
xchg
fists
push
rcr
inc
add
sub
pop
sbb
test
add
and
shrb
inc
or
out
addl
or
and
rcrb
xor
clc
push
fmul
aas
aam
add
inc
xor
push
dec
cltd
aas
out
out
mov
mov
xchg
arpl
imul
push
fildl
sbb
out
mov
aad
jae
sar
in
adc
fiaddl
or
mov
push
and
sbb
or
or
sbb
sbb
cmp
jmp
nop
jne
inc
insl
pushl
push
into
setnp
data16
xchg
or
cmp
or
lcall
and
push
xor
dec
loop
jo
pop
add
sbb
addb
jns
mov
les
xchg
adc
ret
add
jae
inc
mov
mov
arpl
jo
fsubs
in
outsl
xor
or
jmp
mov
and
jae
popa
in
repnz
fcoml
inc
xchg
push
push
or
push
cltd
or
jne
mov
and
les
ret
insl
sub
push
mov
js
push
dec
sbb
or
xor
les
mov
pusha
popa
pop
sbb
lods
mov
jb
and
sub
jg
jae
pop
iret
jecxz
shrb
sub
dec
xchg
xor
adc
add
outsb
push
cs
pop
pusha
and
adc
jg
incl
outsl
jne
push
pop
dec
mov
mov
mov
js
jne
sarl
lock
lock
out
inc
sbb
enter
out
clc
and
or
jge
dec
inc
flds
lcall
sub
sub
daa
add
aas
cmpsb
add
adc
mov
adc
add
jl
dec
in
mov
inc
out
cmpsl
jne
addl
push
leave
mov
outsb
xchg
shr
outsl
dec
mov
clc
push
ljmp
js
push
das
jb
pop
out
push
jae
pop
push
xchg
lahf
shr
test
loope
dec
outsb
jecxz
push
and
and
push
xchg
scas
adc
add
xor
call
and
push
in
inc
push
and
push
ret
inc
pop
adc
xchg
das
or
es
add
pop
push
lock
dec
cwtl
adc
adc
icebp
fildl
jle
xchg
push
leave
insl
mov
pushf
jno
sete
or
mov
cmpsl
clc
inc
cmp
mov
mov
add
bound
repz
adc
and
andb
mov
lea
sbb
mov
mov
sub
jmp
pusha
push
int3
inc
and
pop
mov
push
dec
pop
push
cmp
mov
and
add
loop
jmp
cmp
or
xchg
aas
hlt
leave
mov
repnz
cmpsl
push
add
and
add
outsb
push
hlt
mov
mov
dec
add
pusha
dec
hlt
dec
push
js
pusha
addb
aaa
xor
dec
cld
xchg
dec
push
mov
xchg
clc
lret
and
std
enter
jmp
add
add
adc
rorb
jle
inc
or
or
rcrb
pop
loope
xchg
jle
pusha
push
and
dec
dec
pop
dec
lock
adc
popa
push
testb
inc
ret
adc
mov
inc
shrb
test
aaa
adc
push
jb
aaa
inc
add
mov
push
add
fbstp
enter
adc
adc
push
addl
rol
push
hlt
and
pushf
mov
in
dec
mov
sub
out
fsubrl
push
test
dec
or
fldt
mov
xor
xorl
cmp
adc
mov
imul
test
push
mov
test
mov
ss
stos
add
test
adc
aad
cmp
or
lret
sbb
cvtps2pd
push
cmpsl
rcr
and
aad
dec
and
fucomip
add
mov
fadds
fyl2x
pop
lock
mov
mov
pop
adc
dec
mov
int3
adc
push
cs
jmp
pop
clc
sub
sbb
arpl
or
sbb
pop
shrl
push
adc
sbb
hlt
xchg
or
or
rorb
stos
xchg
xchg
out
int
cmc
faddl
orb
mov
aas
ret
fisttps
or
roll
pop
aam
inc
arpl
add
cwtl
jl
testl
add
pop
loope
push
loope
inc
sbb
adc
add
clc
cwtl
push
add
loopne
out
xor
pop
shrb
orb
adcb
adc
push
dec
jp
outsl
mov
xorl
das
xlat
sub
mov
push
lret
inc
lock
add
rcl
or
jnp
inc
sbb
pop
sub
inc
cmc
add
es
pop
xor
lret
in
loopne
lahf
cmp
sub
clc
divl
cld
neg
dec
or
or
addb
pushf
sbb
sahf
pop
push
inc
popa
push
lret
in
adc
push
leave
push
inc
popa
lcall
pop
stc
xchg
in
xchg
andl
cmp
add
add
inc
idivl
mov
aaa
nop
in
insb
cli
scas
push
cwtl
sbb
sarb
pop
cmp
xchg
inc
stc
pop
pop
mov
jo
sub
or
call
rolb
loope
scas
inc
mov
inc
cwtl
xlat
inc
rorb
je
dec
in
sbb
jno
push
mov
push
add
adc
mov
scas
inc
clts
orb
adc
adc
dec
hlt
jne
rorb
xor
aaa
xor
and
or
pop
jnp
pop
push
xor
push
ret
push
mov
push
jns
push
dec
xor
pop
jno
add
inc
dec
or
mov
lea
add
mov
sub
outsb
pop
xchg
adc
or
scas
push
test
movsl
nop
mov
sub
pop
mov
subb
pop
xor
jne
or
adc
mov
mov
sti
inc
imul
in
clc
nop
pop
cmpsb
mov
jb
mov
loope
xlat
notb
pusha
and
movsl
addr16
inc
cld
adc
or
movsb
adc
and
test
mov
test
xlat
add
mov
or
addr16
cmpb
sbbb
fs
jb
dec
outsb
xor
rorb
je
add
lock
notb
imul
xor
mov
inc
jb
outsl
jae
cwtl
push
jl
inc
adc
mov
add
addr16
enter
sbb
inc
lods
es
test
push
pop
inc
enter
push
aaa
subl
ret
shlb
mov
iret
aam
push
mov
outsl
test
out
add
xor
inc
add
inc
sbb
sarl
mov
cs
mov
inc
out
push
push
dec
aas
fimull
mov
push
out
pop
add
cmp
and
pusha
add
sarl
jbe
xchg
mov
rol
jb
jb
adc
in
push
cwtl
mov
add
sub
mov
dec
add
inc
sbb
inc
imul
nop
xlat
xchg
aad
rolb
ja
out
xchg
mov
mov
loope
loopne
mov
in
loope
pop
add
inc
pop
add
cltd
sbb
fistpl
mov
xlat
enter
mov
sbb
nop
xor
fs
inc
xor
adc
dec
adc
mov
ja
iret
pushf
add
adc
sbb
jno
in
dec
test
add
xlat
nop
mov
divb
push
and
insl
insb
iret
jo
inc
mov
out
test
aam
outsl
inc
adc
in
cmp
popa
insb
outsl
cmp
xlat
inc
push
fisubs
and
jae
in
sbb
mov
and
in
test
xchg
repnz
xchg
mov
pop
and
adc
cltd
or
in
sbb
xchg
out
inc
and
and
cwtl
int3
fdivs
data16
out
cmp
or
lahf
adc
test
ds
push
dec
jbe
dec
pop
mov
push
jl
orb
dec
sbb
incl
aas
movsl
xlat
test
in
adc
sub
das
xlat
push
or
pop
or
mov
dec
mov
imul
loopne
and
mov
std
mov
scas
outsl
and
cmpb
mov
inc
dec
lea
dec
mov
lahf
nop
mov
push
or
orb
outsb
push
sar
and
gs
sbb
in
or
in
in
mov
inc
jo
inc
mov
push
push
pushf
pop
push
push
push
mov
xchg
dec
push
cmp
imul
fisubrs
aam
push
shlb
ds
clts
mov
cmp
insb
mov
fs
insb
and
push
push
je
lods
sbb
adc
adc
jns
push
enter
xchg
mov
and
xchg
xchg
nop
dec
pop
and
xchg
mov
push
xchg
push
or
lcall
mov
cmp
mov
push
jo
mov
addr16
out
push
mov
cmp
add
mov
sub
adc
mov
push
add
add
add
mov
or
jmp
mov
push
or
inc
dec
ja
cmp
sbb
mov
jl
or
std
push
push
add
xor
repnz
add
push
imul
sbb
adcb
insb
aam
inc
pop
sub
cwtl
enter
or
lret
add
push
adc
pop
fldenv
mov
push
push
ret
ds
inc
loope
out
imul
inc
scas
sub
out
cmpsl
sub
pushf
add
and
inc
mov
lret
sbb
mov
inc
inc
fs
lahf
mov
inc
mov
cltd
dec
add
push
ret
sub
adcb
inc
xor
cmp
sbb
sub
xor
lods
jge
xchg
lea
loopne,pn
sarl
inc
pop
lods
cmp
mov
sbb
and
or
bound
repnz
adcb
jl
add
adc
insb
push
mov
scas
popf
pop
fmuls
adc
and
pop
push
mov
jle
xlat
loopne
mov
jno
jno
push
enter
adc
add
rorb
loope
adc
mov
push
mov
ret
sbb
enter
ret
ljmp
nop
out
test
push
dec
adc
test
pushf
push
adc
nop
outsb
mov
mov
shlb
cmp
jno
dec
addr16
mov
fld
fadd
rcll
and
pop
xchg
cs
mov
sbb
jmp
pop
jbe
add
dec
sbb
test
adc
dec
mov
xor
adc
jo
add
and
or
lahf
cmpsl
fs
std
or
or
jmp
inc
mov
add
lret
xchg
clc
sub
lret
fsub
into
adc
aaa
jns
xchg
arpl
inc
push
aaa
sbb
es
pop
dec
xchg
inc
pop
imul
push
cltd
push
and
adc
je
popa
adc
sub
shlb
inc
fwait
cmp
test
pop
push
in
adc
daa
mov
repz
adc
addr16
ret
ret
xchg
xor
js
lock
aaa
imul
adc
imul
addb
mov
add
add
movsb
jg
pushf
sbb
xchg
call
add
dec
inc
cmp
adc
jg
jge
mov
cmp
imul
xchg
out
fadds
xorl
lret
into
add
jns
sbb
inc
test
test
xchg
jle
cmp
jle
xchg
jecxz
dec
ja
mov
jle
cmp
mov
xchg
mov
mov
aas
in
cmpb
out
mov
aam
loope
lds
je
test
or
mov
test
or
scas
call
mov
call
pop
jbe
movsb
lea
std
cmpsb
movswl
dec
jl
or
adc
fisttpl
and
pop
dec
add
in
inc
fnstsw
insl
outsl
mov
lahf
pusha
aad
test
add
dec
xor
pop
shll
mov
push
mov
es
pop
pop
push
aaa
cmpb
ljmp
and
adc
movl
pop
add
scas
clc
add
adc
sub
and
jns
add
sbb
pop
add
adc
xor
imul
and
inc
outsl
mov
add
sbbl
xorb
sub
cld
dec
add
sbb
dec
adc
orl
mov
sub
sbb
dec
stos
pop
mov
add
adc
sub
dec
cmp
aam
fs
sub
aam
jge
sbb
sub
loopne
xchg
mov
clc
les
or
xorl
or
xor
sbb
test
mov
mov
and
in
hlt
xchg
int3
test
push
in
addl
add
imul
sbb
sbb
cmp
loopne
call
sbb
cmp
filds
cmp
lods
repnz
inc
andl
test
add
pop
hlt
mov
loopne
jg
test
push
ror
jg
daa
jl
xchg
jmp
inc
jne
inc
mov
roll
fwait
pop
mov
dec
movsb
ljmp
inc
xchg
or
mov
aad
sub
cwtl
mov
jg
in
les
and
mov
lods
iret
inc
sub
aad
sbb
inc
dec
enter
test
aas
add
cmpb
imul
inc
stos
daa
out
inc
push
arpl
xlat
push
dec
insl
fbld
sahf
lods
shlb
xor
clc
xchg
enter
js
mov
loopne
hlt
negb
sbb
jnp
stc
jl
push
cmp
xor
cmp
push
add
xor
push
mov
popf
push
mov
fs
and
fiaddl
adc
add
adc
push
sbb
pop
sub
pusha
hlt
mov
push
sbb
insb
sub
xor
pop
call
aaa
jmp
dec
jnp
je
loopne
jne
loopne
sbb
xchg
sbb
xor
jle
pop
rorb
inc
dec
sti
mov
idiv
insl
inc
cmp
loope
rcrb
mov
inc
aaa
inc
jle
sbb
nop
push
pop
inc
sbb
inc
stos
cmpsl
add
jno
repz
mov
or
jle
sbb
or
push
in
imul
lea
mov
push
sub
rorb
xchg
and
je
clc
pusha
pusha
stos
nop
test
inc
loop
dec
les
and
les
hlt
push
lcall
jno
je
sbb
push
outsb
in
loopne
es
mov
lods
dec
mov
movsl
cmp
mulps
fiaddl
fs
in
xchg
or
jmp
or
xor
rcr
stos
andl
add
setp
fstl
les
mov
add
das
jg
mov
jne
or
daa
pop
or
pop
adc
cmpsb
scas
cld
cli
mov
movsb
mov
jno
push
insl
dec
aaa
sbb
mov
fdivs
pop
xor
xlat
pusha
pop
lock
rorl
pop
sbb
push
ss
into
mov
idivl
inc
xor
popa
jmp
stc
in
les
jg
mov
popa
shll
out
mov
movsl
xchg
add
jg
and
fucomip
xor
fs
pop
inc
pop
lea
lock
lahf
icebp
dec
sbb
nop
aaa
lods
and
and
cmp
xor
imul
adc
stos
in
mov
and
pop
bnd
add
or
inc
sub
cmp
aaa
les
call
cwtl
hlt
stos
add
addl
dec
sbb
jecxz
adcl
sub
imul
push
es
jnp
push
and
enter
sub
and
xchg
sbb
cmp
movb
sbb
inc
fwait
cmpsl
in
test
mov
push
jae
sahf
and
movsb
cmp
inc
pop
sub
cmp
mov
dec
push
cs
xchg
inc
dec
lods
add
adc
hlt
lock
adc
outsb
and
loopne
add
jle
and
mov
and
pop
push
and
add
add
or
jae
ret
jge
adc
mov
jge
ret
adc
cwtl
jne
daa
jle
push
adc
xor
and
jnp
lret
dec
dec
xchg
inc
xchg
in
cmp
or
cmp
jbe
xchg
adc
inc
imul
outsb
iret
mov
sbb
inc
lcall
call
call
dec
fidivl
hlt
xorb
mov
xor
pop
inc
xor
jle
mov
dec
jae
inc
filds
jle
les
push
aaa
adcb
or
push
cmp
ret
xlat
pop
je
scas
jb
push
call
push
inc
cmpsl
inc
rolb
outsl
or
adcb
sbb
pop
jg
jp
sub
cmp
test
pusha
and
jle
add
mov
mov
mov
dec
arpl
movsb
add
dec
andb
pop
xchg
xchg
adc
or
mov
push
les
cmp
mov
mov
loope
jp
js
and
add
xor
xchg
push
xchg
inc
call
hlt
sbb
push
xor
and
pop
jl
inc
inc
xor
xor
xchg
pop
mov
dec
add
or
cmp
pop
jo
push
jmp
jne
add
push
jno
movb
mov
inc
sbb
lret
inc
mov
cmpb
test
lcall
pop
sarb
add
sub
sbb
jb
and
cs
sbb
push
leave
push
xor
jb
repnz
mov
xor
hlt
fists
and
pop
icebp
push
inc
push
add
fwait
or
pop
out
mov
scas
decb
adc
jns
clc
sub
mov
cmove
lock
int
flds
pushf
sub
pushf
sub
outsb
pop
daa
mov
mov
sbb
xor
sbb
lods
pop
cmp
outsl
xor
jo
sub
sbb
decb
or
jb
push
xchg
and
cmc
mov
addb
movsl
push
cwtl
cwtl
inc
sub
fs
dec
mov
rcl
sbb
js
add
shll
mov
cmp
pop
orl
add
test
or
shr
aaa
push
pop
adc
inc
mov
sub
enter
ja
add
sub
test
inc
scas
out
ret
xchg
lret
and
rolb
cmp
nop
fildl
push
into
mov
sub
sbb
mov
cltd
fists
addr16
hlt
leave
cmp
cltd
nop
cmpsb
pop
hlt
lock
push
enter
mov
divl
mov
rol
addr16
and
lock
and
cmp
mov
in
es
inc
sub
bound
dec
push
and
inc
scas
out
bound
mov
scas
inc
pushf
or
addr16
sub
sub
or
orl
mov
inc
leave
pop
mov
sub
inc
enter
pop
xor
imul
das
mov
jge
inc
rcrb
pop
addl
and
or
inc
adc
aas
cmp
test
lods
xor
or
in
pop
inc
ret
xchg
nop
vmread
insb
push
sub
xchg
mov
pop
cmpsl
dec
jge
push
sbb
push
and
add
fsub
out
movsl
and
das
cs
xor
sub
test
sub
lods
fs
sti
loopne
sub
add
xor
inc
inc
ss
adc
xchg
jo
das
addb
mov
lock
int3
loope
push
mov
fiaddl
imul
scas
outsl
jl
push
sub
test
jbe
xor
pushf
cli
mov
sbb
sbb
in
lods
stos
and
sbb
arpl
fcom
and
arpl
inc
push
call
jmp
push
sub
pop
or
inc
and
sbb
xor
xchg
or
pop
add
jbe
dec
pop
fcmovb
adc
fsubs
inc
gs
hlt
fcoml
xor
cld
mov
xor
fadds
add
mov
or
push
iret
enter
jle
sbb
pop
and
movb
jp
cmpsb
mov
jg
jne
pop
aas
fists
jo
and
push
lods
push
lahf
xchg
test
cltd
add
sub
movsl
jae
les
add
pop
sub
sub
mov
in
aam
mov
loopne
ds
xor
mov
mov
dec
lret
movsl
sub
add
movsl
xor
push
adcb
iret
inc
xor
jl
sub
iret
push
push
lock
jb
pop
rorb
and
hlt
nop
loopne
test
rep
mov
push
xchg
dec
jnp
nop
push
xchg
jle
push
xchg
movsb
and
fidivrs
rclb
cs
data16
mov
cmp
test
aaa
jecxz
sahf
mov
clc
xchg
cmp
add
test
mov
jl
fcoml
push
jmp
cmp
mov
push
jmp
pop
xor
or
or
mov
mov
cmp
mov
ds
mov
cmp
sub
and
adc
push
or
cmp
jg
ucomiss
push
cmp
or
insb
add
enter
inc
jnp
mov
xchg
out
sbb
rorb
test
cmp
add
mov
adc
push
dec
or
nop
push
loope
or
push
cmp
mov
loopne
and
js
not
loopne
dec
push
test
fstp
mov
and
xchg
fsubs
adc
inc
movsw
aas
add
push
movl
dec
pop
inc
insl
cmpl
dec
and
mov
mov
test
hlt
sti
jae
shlb
aam
mov
xchg
outsl
movsl
dec
xor
mov
popf
adc
stos
aaa
movsl
movsb
sahf
dec
add
pop
dec
orb
or
nop
add
add
cmp
and
dec
jae
mov
in
push
rorb
mull
subl
cmp
or
test
cmpl
lods
mov
inc
mov
loopne
fdiv
testl
cmp
nop
add
cmp
in
add
jb
fdivl
test
insb
jl
orb
xor
or
adc
test
add
mov
int
sbb
fistl
cmpsb
gs
adc
or
js
movsl
mov
mov
pop
and
push
xchg
movsl
aas
inc
sbb
loopne
sar
mov
mov
mov
nop
mov
sub
ss
js
dec
out
mov
mov
ror
std
pop
push
mov
mov
jp
test
adc
push
mov
je
mov
sub
push
fs
push
fadd
mov
cmp
shll
xchg
rcrl
inc
pop
aas
push
cmp
lods
ret
aas
fs
mov
mov
jne
mov
js
mov
mov
sub
and
cmpsb
inc
sub
dec
leave
and
mov
hlt
ret
or
das
dec
pop
subl
sti
je
cmpsb
xlat
or
into
je
shl
xchg
fstpl
cmpsb
fwait
iret
xchg
leave
jo
lods
dec
xlat
xor
mov
xchg
xchg
movsb
sub
repnz
lahf
nop
add
lret
nop
clc
negb
cmp
inc
or
incb
xchg
and
mov
mov
sbb
jo
cs
je
iret
dec
and
mov
lds
hlt
movsl
pop
cmp
in
andb
jno
leave
cmp
inc
xor
xor
push
xor
fldl
or
xchg
sbb
adc
sbb
pop
jo
popf
cld
stos
mov
fs
mov
pop
sbb
cmp
adcb
dec
and
xchg
pop
dec
int3
test
pusha
jg
jl
xlat
cld
jmp
push
jne
popf
add
fdivrp
adc
dec
rcl
dec
imul
and
mov
and
nop
add
rol
pop
inc
cld
popf
ss
xor
push
dec
jne
out
sub
and
test
jmp
and
aaa
inc
inc
sbb
add
pop
mov
xchg
inc
add
dec
addl
rcl
lock
push
and
inc
aas
movsb
add
mov
or
clc
jno
je
jae
and
clc
pusha
pop
adc
xor
add
mov
orb
add
dec
cwtl
lret
or
loope
in
shl
jmp
mov
or
dec
push
push
jge
repnz
mov
lods
out
or
aaa
sub
enter
xchg
fwait
sub
adc
and
mov
test
pop
sub
outsb
test
pushf
jnp
push
dec
fdivrs
xor
push
loopne
inc
mov
mov
pop
fists
pxor
push
rep
inc
and
jo
dec
aas
xor
cmp
dec
xchg
cmp
adc
add
fwait
adc
pop
jl
dec
pop
pop
xor
pop
xchg
push
test
lods
adc
inc
invd
dec
xchg
sub
push
lea
mov
jmp
and
xchg
xchg
mov
addb
sbb
add
lret
jg
add
fcmovbe
push
cmp
and
adc
xor
insb
mov
int3
je
movsl
add
mov
dec
add
dec
xor
or
sub
rcrb
or
in
mov
adc
or
xor
gs
nop
mov
mov
inc
jle
push
and
enter
inc
and
inc
inc
cmpsb
dec
inc
inc
and
xchg
repnz
add
sub
lret
add
loopne
add
pushf
sbb
push
mov
add
inc
cmpsb
in
push
add
pushf
test
popf
pop
add
push
add
loope
nop
aam
and
cmp
inc
iret
add
add
jb
pavgb
and
or
dec
je
dec
daa
and
inc
cwtl
mov
jns
jg
in
inc
inc
pop
xor
pop
adc
add
adc
pop
mov
pop
ss
xchg
cmpsl
nop
xchg
inc
inc
in
xor
push
mov
push
adc
or
push
pushf
pushf
inc
repnz
sub
sbb
dec
xor
inc
imul
pop
xchg
inc
pop
sbbb
and
cmp
inc
inc
fsts
push
and
mov
ret
pop
inc
jns
cltd
mov
inc
loopne
inc
lds
loope
dec
jecxz
and
mov
pop
fistpll
and
and
cmpsl
jns
jns
dec
inc
dec
push
rcl
cmpsl
jnp
shrb
shlb
es
mov
lahf
std
cmp
jbe
cmp
adc
mov
ss
xor
adc
xor
cmp
xchg
repz
lods
jne
add
adc
aas
and
jae
mov
cmpb
and
lods
mov
aam
nop
cmp
sahf
shrb
nop
aas
or
inc
add
dec
enter
jge
pop
mov
in
jo
sbbb
cmp
pop
jns
push
jl
aaa
push
push
xor
ja
jle
mov
push
jnp
sub
add
imul
xchg
pop
lods
outsb
pop
outsl
jb
lret
push
enter
popa
sbb
mov
sarb
mov
shll
adc
pop
test
cwtl
cwtl
or
test
orb
nop
mov
adc
and
push
orb
adc
fildl
sbb
mov
xchg
cs
dec
pop
sbb
fmuls
or
add
mov
enter
dec
push
dec
push
clc
add
mov
aam
sub
dec
imul
sub
add
icebp
push
push
fmulp
faddl
ret
dec
mov
das
add
xor
les
enter
and
xor
loopne
nop
xchg
inc
cmp
loopne
in
pop
nop
or
in
fsubs
daa
add
fcomp
fdivl
and
rcl
aam
and
enter
add
jge
rolb
or
xchg
jbe
ret
fsubl
mov
pop
push
popa
sub
in
hlt
imul
push
outsb
mov
sbb
mov
pop
pop
jmp
xor
insl
inc
enter
xor
shrb
aam
inc
dec
push
fcomp
loopne
mov
in
in
cld
inc
ret
xor
loope
fcmovnbe
dec
pusha
and
jl
imul
cli
repz
daa
mov
adc
lret
cmp
lea
lcall
cmc
lock
sub
aaa
lock
dec
adc
sub
dec
jmp
sbb
adc
clc
mov
add
addr16
ret
cmp
add
inc
inc
and
cmp
add
mov
lock
dec
imul
shr
inc
in
inc
and
jne
dec
adc
add
mov
lods
pop
push
shlb
pop
jecxz
xorb
inc
or
adc
or
or
and
test
mov
notb
imul
imul
aaa
movsb
jecxz
movsb
adc
shll
addr16
or
dec
dec
loop
mov
dec
cmp
aad
adc
jle
out
or
leave
jae
mov
lods
dec
cld
add
dec
sbb
pop
sahf
inc
repz
sub
nop
jo
jmp
push
xor
dec
imul
push
sbb
sub
inc
adc
dec
jno
ja
and
mov
imul
popa
mov
das
and
dec
inc
sub
push
push
mov
push
test
xchg
and
add
call
idivl
gs
lahf
clc
and
test
in
add
push
or
or
push
sbb
js
add
cmp
and
add
pop
cmpsl
add
fistps
jg
js
dec
test
fwait
mov
pop
or
sub
fnstsw
xor
loopne
pop
aas
lea
enter
ja
mov
add
mov
inc
scas
scas
mov
ja
push
decl
mov
iret
jnp
rcr
lcall
and
or
cmpsb
inc
mull
shlb
add
cmp
mov
push
repnz
in
mov
loopne
in
in
xor
loopne
sub
sbb
fsubl
pop
mov
or
rolb
jae
pop
aam
cld
aam
or
das
shlb
or
int3
xchg
shrb
lret
or
je
cmp
imul
mov
rol
xor
inc
out
adc
push
and
mov
and
bound
in
push
enter
push
mov
xchg
xchg
scas
es
repnz
add
js
xor
push
xor
inc
fdivrs
cmp
or
int3
aad
xchg
fmuls
adc
lahf
mov
shrb
aas
and
nop
cmp
push
add
jbe
or
xchg
push
pop
push
jne
mov
pop
jb
hlt
hlt
xor
in
inc
xor
pop
in
call
leave
call
roll
xchg
bound
adc
loopne
nop
cmpsb
clc
loopne
test
fsubrl
fs
faddl
sbb
nop
fcomp
add
aam
in
ds
mov
push
sar
push
sub
pop
mul
mov
test
insb
jae
add
xor
fs
mov
xor
mov
sbb
push
and
sub
xchg
lahf
popf
sbb
jae
sarb
or
outsl
adc
add
test
cmc
dec
sub
aad
loope
hlt
nop
mov
adc
rcrb
inc
push
xor
fnstcw
cmpsb
scas
movb
fldenv
popf
fs
xchg
inc
adcb
add
push
adc
mov
nop
mov
pop
mov
and
jle
cmpb
mov
dec
call
xchg
lds
push
sub
aam
adc
enter
inc
push
push
leave
ja
aaa
mov
push
and
or
add
out
dec
sub
push
push
fwait
mov
out
roll
lea
or
mov
fdivrl
subl
mov
sbb
add
outsl
and
sbb
jne
fstpt
outsb
movsb
cli
mov
xor
loop
lock
pop
sahf
adc
dec
cld
inc
add
pop
pop
mov
jmp
cmpsb
insl
ret
mov
add
scas
stc
cmpsb
sbb
call
dec
adc
mov
inc
ds
xchg
hlt
pop
in
adcl
lods
loopne
jl
roll
mov
sub
add
movsb
add
pop
add
xorl
arpl
lods
xlat
push
repnz
cmpl
in
mov
stos
ret
sti
mov
popa
lock
cmpsl
xor
lock
push
popa
nop
test
lock
pop
dec
test
mov
lea
aad
call
and
bnd
je
pop
add
movsb
test
imull
mov
das
inc
pop
jo
pop
push
imul
cmp
push
dec
insl
pop
dec
cs
imul
push
loopne
cmp
imul
dec
dec
scas
sbb
imul
scas
sbb
dec
aam
aam
dec
dec
scas
sbb
imul
scas
sbb
dec
int3
imul
inc
cs
enter
inc
cs
rol
scas
cmpsl
inc
mov
test
iret
adc
hlt
hlt
push
or
daa
xchg
bound
sbb
or
loop
jge
pop
push
xchg
out
dec
xor
mov
rorb
xor
push
enter
dec
mov
xor
and
lea
mov
in
daa
add
ror
clc
jns
mov
loop
movsb
hlt
sub
inc
add
add
add
ds
jl
xchg
stc
sub
std
xor
hlt
mov
nop
cmpsb
mov
sbb
push
mov
lock
loopne
xor
sbb
xchg
cmp
jno
enter
jg
aaa
push
test
inc
add
push
or
sub
aas
icebp
mov
imul
or
jmp
adc
adcb
jmp
mov
push
test
daa
push
jnp
lahf
test
aas
add
add
add
repz
testb
mov
push
outsb
fs
mov
loopne
push
sub
dec
jb
sbb
mov
or
jns
call
in
mov
sbb
or
jns
call
in
jb
mov
loopne
sbb
or
add
add
fmul
add
aam
rorb
adc
div
push
adc
xor
xchg
mov
in
and
pop
in
aad
stc
jbe
cld
xchg
enter
push
inc
push
les
rolb
add
lea
int3
add
dec
pop
jo
pop
dec
rcrl
mov
mov
adc
and
xchg
mov
mov
or
inc
loop
repnz
adc
add
pop
add
rclb
aas
imul
dec
dec
xor
and
xor
enter
in
imul
in
pop
imul
inc
lcall
lcall
int
or
addr16
inc
mov
imul
or
fdivrs
shlb
mov
adc
enter
fistps
mov
jmp
add
and
mov
nop
cmp
push
jmp
das
push
xchg
iret
imul
cwtl
leave
das
jns
or
outsb
lds
ficompl
jne
push
jmp
push
mov
insb
jp
pop
jmp
inc
nop
inc
lcall
sub
lock
lods
push
arpl
aaa
pop
jb
imul
jo
outsb
push
dec
insl
cmp
xchg
mov
mov
push
pop
mov
call
sbb
loopne
pop
leave
adc
loop
out
mov
mov
fsubs
fmuls
and
aam
enter
ror
int3
xchg
addl
mov
mov
imul
push
jmp
add
sbb
sub
add
mov
sub
pop
push
sub
mov
stos
rolb
int
add
sub
xchg
push
les
nop
outsb
lods
push
sub
xchg
mov
pop
jo
les
sbbb
mov
rolb
add
jle
inc
in
jo
hlt
nop
and
ljmp
sub
lahf
cld
lock
dec
pop
pop
pop
pop
and
shlb
pop
dec
orb
fmuls
dec
sub
add
and
xchg
scas
movsb
push
push
bnd
lock
xchg
xchg
loopne
pop
rcr
fimuls
test
push
arpl
xor
add
pop
adc
das
mov
push
fdivrl
xchg
dec
fdivrs
arpl
pop
insb
add
xor
andl
cmp
add
xor
rolb
ss
cltd
add
pop
mov
pop
adc
dec
imul
jns
orl
ja
adc
adc
sbb
pop
in
xor
sub
icebp
lret
in
adc
das
mov
out
xor
or
xchg
scas
adc
pop
lods
xchg
les
orl
sbb
xor
adc
lret
add
dec
insl
push
clc
jae
addl
int3
mov
xor
mov
inc
das
cli
ja
add
dec
push
sti
stos
sbbl
pop
in
add
sbbl
lock
nop
inc
push
mov
or
popa
rorb
jns
inc
ds
hlt
loop
hlt
or
add
das
test
or
mov
jmp
popa
adc
mov
add
subb
jge
jbe
xor
add
call
nop
jbe
test
addr16
or
pop
pop
jno
stos
movsl
and
fsubl
pusha
in
inc
add
loopne
mov
sbbl
mov
hlt
and
mov
pop
xor
xor
ret
ljmp
adc
and
add
lock
je
or
mov
mov
cmp
inc
jns
es
jae
push
adc
and
rorb
les
xor
add
add
mov
adc
jmp
adc
and
inc
faddl
lea
pop
mov
icebp
jns
xchg
push
shlb
loopne
clc
dec
jns
or
rorl
push
or
bound
add
mov
cld
mov
or
sbbl
add
inc
mov
mov
add
push
or
in
mov
or
or
cmp
jp
jnp
add
fistpll
or
js
repnz
incl
setb
push
repnz
jg
jge
jl
add
inc
int3
jle
sbb
out
and
scas
fmul
clc
push
sbb
or
xchg
stos
xor
mov
stc
push
xchg
or
popa
mov
xor
adc
adc
inc
push
cmpsl
incl
add
and
test
cmpsb
or
dec
adc
dec
mov
movsl
sar
imul
in
loope
inc
inc
ds
fdivrs
dec
jne
add
and
imul
inc
rorb
insb
pop
dec
and
scas
rolb
mov
gs
in
mov
xor
gs
popa
xchg
std
fdivrl
lahf
sbb
orb
mov
lea
sbb
inc
add
mov
dec
jae
xor
loopne
jns
pop
adc
pusha
mov
inc
divb
mov
inc
out
or
adcb
pop
push
orb
daa
mov
ja
sbbl
adc
add
es
pop
dec
sar
call
repnz
cs
lock
xchg
lcall
xchg
mov
jle
inc
sbb
mov
xchg
sub
sub
pushl
test
les
adc
pusha
mov
cmc
mov
mov
js
xchg
test
pop
std
dec
fistps
push
or
es
das
mov
inc
adc
dec
aam
pop
leave
push
or
scas
xor
adc
adc
rclb
mov
or
sti
and
xor
cmc
jg
cld
mov
adcb
mov
dec
xor
jo
lret
das
pusha
lods
add
push
sbb
mov
hlt
hlt
mov
cmp
rclb
mov
orb
mov
jae
pop
adc
xor
cwtl
add
inc
mov
push
sbb
push
or
and
jno
loop
scas
add
jmp
adc
mov
push
add
adc
repnz
adc
test
fs
fisttpll
je
rcrl
jo
lea
ret
stos
inc
in
dec
lds
xor
xchg
sub
push
jge
jae
imul
adc
prefetch
ss
push
sbb
pop
out
sub
adc
xor
and
ja
push
push
adc
in
movsl
loopne
xchg
pop
or
jne
add
mov
fwait
shll
and
aas
push
test
push
xor
les
jo
push
inc
nop
add
lea
push
pop
nop
cmpsl
add
nop
stos
xchg
fwait
adc
lods
cmpsl
or
testl
sbb
or
dec
test
roll
andb
sub
addl
adc
test
jns
cmp
dec
mov
cmp
jns
mov
xchg
les
lods
add
jbe
pop
xor
sub
xchg
adc
and
xchg
scas
scas
mov
in
pmuludq
add
pop
pop
inc
outsb
test
test
fmull
cmovs
ret
dec
dec
mov
mov
jae
in
je
shrb
repnz
andb
jne
mov
and
dec
adc
insb
in
jecxz
mov
push
aad
inc
mov
lret
mov
push
add
adc
mov
loopne
xor
dec
rclb
lock
jge
xchg
inc
mov
jge
stos
mov
nop
sub
cmp
jbe
ficompl
negl
adc
add
mov
jno
mov
cmpsl
andl
ret
xor
sub
add
xor
mov
pusha
insl
cmp
jmp
in
lds
and
ffreep
negl
and
mov
and
and
faddl
inc
mov
cmp
daa
adc
test
mulb
rorb
mov
divl
mov
and
xor
push
add
mov
out
xorb
mov
fcmovu
xchg
xchg
cmp
inc
sub
jae
add
pop
adc
dec
mov
outsl
jne
das
fidivl
push
aam
add
xchg
jne
and
pop
dec
jns
pop
mov
shrb
xchg
test
dec
rclb
xchg
ss
add
imul
mov
push
push
mov
push
pop
xchg
stos
and
cmp
mov
inc
and
xor
pop
push
push
mov
ljmp
pop
jmp
mov
sbb
pusha
das
pushf
outsb
xchg
stos
popa
xor
xor
sub
mov
cmp
pop
notl
inc
mov
push
lret
std
orl
lods
test
mov
xor
xchg
mulb
aam
dec
pop
int
xchg
inc
adc
jp
leave
and
mov
push
adc
add
fs
cmp
aam
mov
aad
mul
je
jl
nop
sub
out
add
or
xchg
mov
mov
inc
mov
rclb
sub
aad
lea
add
add
sub
xchg
dec
push
pushf
js
add
xchg
lods
pop
pop
nop
xchg
mov
in
addr16
mov
test
xor
sub
pop
adc
in
rcrb
arpl
enter
sar
out
push
push
push
int3
add
cmpsl
pop
into
imul
fiadds
jg
adc
orl
leave
mov
jge
sbb
or
addb
pop
cmp
xchg
sbb
addl
lds
sarl
rorl
dec
repnz
cmp
or
sub
lret
ss
mov
cmpsl
add
loopne
jbe
daa
inc
scas
mov
int3
out
and
fwait
inc
mov
lret
fsubl
adc
out
pop
mov
mov
jge
mov
add
xor
mov
gs
xor
dec
lahf
jmp
sbb
cmp
mov
xor
lret
or
cli
repz
push
dec
pop
div
xor
sbb
push
inc
pop
leave
xor
or
mov
pop
add
aaa
jo
mov
adc
jo
push
push
xchg
jbe
inc
pop
cmp
push
and
add
add
jl
pusha
mov
and
jno
add
loope
cmpsb
nop
xor
and
les
mov
or
popa
lods
or
push
lds
sbb
mov
cmp
jno
lea
pop
pushf
add
or
add
adc
notl
bound
sub
sub
and
pop
pop
push
lahf
adc
sbb
cwtl
add
xor
arpl
inc
mov
ja
sub
rorb
xchg
ret
jecxz
je
pop
push
gs
add
inc
cld
ss
sbb
xchg
push
or
push
sub
jl
sahf
sbbb
cmp
dec
add
push
xor
xchg
mov
sbb
mov
testb
sbb
cmp
daa
adc
fldcw
pop
sub
xchg
mov
sbb
adc
mov
add
xor
xor
lods
mov
pop
sub
testb
fldl
pop
mov
inc
aas
mov
pop
movsb
jb
movsl
es
vpcomd
or
mov
sbb
and
xchg
pop
imul
dec
xchg
pop
pop
nop
add
pop
jmp
inc
sub
jmp
sbb
gs
inc
aam
and
aaa
sbb
fsubs
xor
xchg
hlt
outsl
xchg
inc
roll
or
or
dec
or
adc
call
jl
xchg
cmp
cmp
mov
adc
push
or
and
out
jae
repz
mov
mov
nop
mov
es
dec
nop
jecxz
and
fwait
push
mov
push
jmp
movsl
imul
adc
inc
insb
or
std
sbb
and
push
das
and
jmp
movsb
or
cld
pusha
inc
icebp
or
xchg
test
ret
cmpsb
mov
cmpsl
and
cmp
add
push
sbb
add
and
hlt
insl
push
jb
push
cmp
jne
shl
add
jne
je
sub
icebp
xor
mov
gs
adc
movq
loope
loope
sbb
int3
test
sbb
mov
rcrl
inc
add
inc
ds
dec
xchg
sub
jp
xor
xchg
cmp
test
push
daa
sub
pusha
mov
add
sub
iret
jno
or
inc
pusha
sub
in
xchg
cs
inc
adc
pop
std
je
jns
sub
inc
sbb
rorl
mov
sbb
and
adc
xor
pop
dec
inc
popf
and
js
movaps
mov
mov
add
adcl
add
push
into
mov
pusha
clts
pushf
jl
orl
mov
pushf
pushf
pushf
mov
mov
jg
mov
push
push
sub
fcomp
inc
dec
sub
idivl
in
scas
pop
push
push
cs
xor
cmp
jae
sub
in
sub
ja
dec
push
dec
pop
ss
cs
jbe
xor
xor
fistl
das
loope
or
sub
xchg
or
push
inc
dec
xor
aaa
jg
daa
test
xchg
add
bndldx
movsl
push
inc
js
xchg
iret
adc
xor
xor
bound
orps
fiadds
data16
push
dec
dec
push
lock
xchg
inc
push
dec
inc
dec
push
or
sub
sarl
xor
dec
call
push
sbb
adc
xchg
dec
or
andb
xor
xor
xor
lahf
xor
xor
inc
inc
addr16
out
sub
enter
xor
and
or
dec
bound
jl
outsl
insl
dec
inc
push
jb
inc
inc
fdivl
ss
cmp
daa
xchg
mov
or
insb
inc
inc
jg
push
jg
in
jnp
incl
dec
cmp
pop
dec
push
pushl
lcall
ss
add
pop
cmp
popf
js
inc
mov
mov
mov
scas
mov
loop
sub
inc
push
or
inc
and
jb
xor
or
add
xchg
push
xor
int3
mov
repnz
push
iret
dec
push
pop
inc
pop
xor
fcoml
in
mov
push
das
or
xlat
xor
mov
cs
dec
int
or
pop
xor
xor
daa
iret
and
sub
inc
pop
mov
sbb
dec
push
jbe
mov
daa
or
pop
or
and
daa
paddq
xor
sub
mov
add
xor
adc
cmpsl
xor
imul
outsb
popa
rolb
out
aaa
lock
addr16
stos
xlat
call
jb
xchg
inc
shrl
add
xor
ja
mov
mov
pop
dec
xor
xor
xchg
push
ss
sub
test
lret
push
jb
mov
nop
pop
stos
cs
daa
aaa
push
jo
outsb
jge
push
out
mov
aaa
sub
loopne
cmp
idivl
pop
dec
pop
xchg
out
adc
sub
push
dec
pop
cmpsb
scas
push
lock
addr16
dec
ss
xchg
push
lds
xor
mov
mov
bound
pop
mov
add
xor
inc
in
pop
outsl
add
pop
pop
lock
sub
inc
sub
xor
inc
push
xor
in
stos
jg
call
xor
ja
fcoml
xor
cs
xchg
xor
rolb
leave
out
push
cmp
ss
cmp
bound
push
les
mull
or
pop
pop
xchg
fs
xchg
or
and
push
subl
xchg
mov
addb
mov
push
cmp
daa
sub
sub
xor
mov
das
xchg
pushf
test
xchg
cmp
sub
pop
loopne
sub
sbb
test
cmp
jecxz
test
sbb
inc
inc
pop
jp
sub
in
das
arpl
dec
jle
into
sub
pushf
fwait
add
je
cmp
addr16
data16
loop
jnp
iret
push
subb
mov
inc
pop
add
mov
add
push
and
ja
xchg
cltd
mov
adc
push
jne
pop
xor
sub
mov
xor
ja
test
pop
jnp
xor
xor
mov
cmp
das
cmp
ljmp
push
test
dec
sub
pop
insb
xchg
aaa
outsb
insl
int
iret
and
push
test
movsb
incl
xor
push
ret
or
xor
dec
sbb
dec
pushl
push
xor
xor
dec
pop
dec
incl
outsl
cmp
xor
mov
aaa
cmp
inc
cmpsl
ss
cmp
push
outsl
bound
outsb
addr16
jb
das
cltd
adc
cmp
aaa
pop
add
cmp
daa
ja
jmp
cmp
lahf
push
xchg
pop
cmp
jae
adc
addl
das
mov
clc
cmp
xor
shlb
mov
cmp
jae
mov
pop
nop
pop
and
sbb
adcl
gs
iret
or
daa
jnp
popf
test
xchg
xchg
aas
daa
add
add
imulb
inc
push
sub
gs
xor
aas
add
fs
pop
mov
push
push
jnp
popf
arpl
xor
add
iret
jnp
dec
mov
dec
repnz
pop
xchg
xor
iret
push
sbb
adc
cmpsl
ja
insl
lea
or
and
addr16
xor
lds
cmp
mov
cltd
push
jns,pn
adc
xor
aam
xor
push
inc
scas
jl
negb
xor
push
dec
push
push
add
pop
push
outsl
jb
fists
sbb
sbb
sbb
daa
cli
aaa
pushl
jg
div
cmp
cmpsl
xor
enter
cmp
sbb
or
lds
dec
cs
sub
xor
xor
pop
mov
push
cs
nop
push
aam
xchg
xlat
sahf
mov
push
pop
pop
in
ss
sarl
daa
add
xor
jnp
push
jb
daa
xor
cmp
fs
cmp
pusha
add
add
xor
and
xor
xor
int
xchg
pop
xor
outsl
andb
inc
fbstp
sub
addr16
xchg
adc
xor
arpl
lahf
mov
push
inc
out
popa
aaa
jo
inc
inc
mov
clc
push
inc
andb
fildl
jb
xor
test
xor
xor
adc
mov
push
and
leave
push
jne
xor
inc
sub
sbbl
outsb
jg
mov
sub
popf
sbb
cmp
jae
mov
pop
xor
jbe
xor
sub
inc
das
pop
out
or
fnsave
ss
xchg
ret
add
dec
dec
pop
aaa
leave
add
loope
xchg
pop
aaa
dec
dec
push
pop
cmp
cmp
arpl
push
jge
jg
cmp
addb
adc
xchg
pop
aam
icebp
fsubrs
mov
and
pop
daa
nop
sub
stc
push
jno
cmp
push
ja
mov
dec
xor
cmp
add
mov
add
testl
push
stos
cmpsb
sbb
jg
clc
jg
jbe
pop
fisttps
push
pop
dec
cs
xor
xor
je
xor
mov
pop
xor
jae
jns
out
imulb
mov
icebp
jp
sahf
push
cmp
in
les
mov
or
orb
xor
or
out
and
jb
push
xor
in
xor
xor
inc
jge
adc
or
xor
adc
push
stos
add
inc
mov
mov
push
das
adc
insl
popa
arpl
sbb
add
cmp
outsl
mov
pop
and
ja
cmpsb
movsb
jb
cmp
cmp
and
pop
cmp
xor
dec
cld
je
lret
push
pushf
xor
aas
rclb
inc
dec
cwtl
and
lods
add
and
addr16
cmp
add
jne
stos
nop
fiaddl
xlat
ficompl
lcall
fmuls
xor
mov
pop
xchg
mov
cmp
aaa
ss
mov
push
aaa
xor
sub
push
xor
cmp
mov
pop
adc
xchg
xchg
xchg
dec
cmpsb
add
sub
pop
test
scas
mov
lcall
sbbl
add
ss
bound
scas
cmp
inc
push
pop
insl
inc
jle
decl
xor
aaa
scas
movsb
rcll
pusha
vmovntdq
mov
fimull
jo
sbb
mov
and
push
loop
xor
enter
divl
pop
and
fwait
sbb
inc
push
mov
push
pop
add
dec
mov
imul
les
jne
sub
jmp
enter
sub
inc
aas
cmp
fisubs
pop
push
and
mov
dec
popa
insb
pop
and
orl
outsl
ret
or
add
es
scas
inc
push
cmp
fcomps
push
xchg
inc
arpl
push
sbb
or
push
sbb
dec
and
mov
loopne
mov
push
push
adc
aas
xor
sub
pop
loopne
xchg
push
push
aas
or
fcoml
jae
es
cmp
pop
xor
lock
add
fs
adc
push
sub
popa
in
jb
ja
outsb
insb
or
add
or
nop
xlat
inc
ss
rclb
dec
pushf
dec
dec
push
dec
cmp
cmp
aaa
xor
inc
mov
and
xor
adc
testl
push
xor
shll
sbb
aam
inc
xor
mov
cmp
das
push
cmpsl
aaa
lds
cmp
in
imul
enter
cmp
sbb
xchg
imul
xor
or
push
xchg
inc
xor
lcall
and
fidivrl
gs
xor
add
bound
and
xor
mov
sbb
mov
fstl
cwtl
nop
aaa
aaa
das
data16
das
in
cmp
xor
repnz
xor
xor
add
xor
addr16
and
jb
xchg
xor
test
dec
push
push
and
fstpt
je
fists
cmp
mov
bound
hlt
push
repnz
xor
in
cmpsl
bound
push
test
ja
aaa
or
pushf
sub
popa
insb
je
cmp
sbb
sbb
mov
flds
xor
xor
inc
es
cmp
add
push
xor
cmp
adc
ss
jg
fs
push
fs
aaa
aaa
add
ss
daa
jbe
jg
xor
mov
xor
sub
inc
push
lahf
lahf
and
xor
ss
pop
jo
adc
xor
xor
xor
and
shll
bound
nop
mov
inc
mov
xor
dec
push
ss
pushl
dec
leave
popa
jb
pop
cmp
jbe
adc
cmp
dec
cmp
xchg
cmpl
outsl
arpl
and
jns
test
xor
mov
xor
push
push
pop
cmp
and
jns
aaa
jbe
cmp
add
mov
cmp
xor
fiaddl
addr16
mov
or
sbb
test
ficompl
push
test
sbb
fcomps
push
xchg
xor
push
mov
stc
ficoms
pop
adc
jae
ss
sbb
je
addr16
push
fnstenv
outsl
push
cmp
xor
mov
je
push
or
andb
cs
movsl
insl
xchg
lods
das
pop
xor
push
cmp
pop
adc
das
push
pop
pop
es
add
dec
insb
lcall
push
pop
notb
mov
xchg
stos
movl
jns
push
jb
push
nop
push
push
inc
push
adc
or
insl
cwtl
daa
dec
inc
push
xchg
sbb
xchg
push
out
push
dec
or
inc
mov
push
loop
andnps
push
dec
sub
push
sbb
popa
xor
pop
shrl
cmovge
dec
dec
dec
xchg
scas
mov
outsb
jb
mov
imul
pop
shlb
push
dec
jno
and
xchg
push
push
and
dec
dec
dec
cmp
idivb
push
movsl
loopne
inc
pop
xor
or
mov
aaa
and
inc
sub
and
scas
les
sub
mov
das
mov
mov
xor
dec
jp
mov
and
adc
in
fisttpll
inc
cmp
xor
sub
repnz
adc
aaa
push
in
sbb
cmpsl
xor
rclb
fs
js
cmpsl
xor
xchg
or
xor
imul
in
and
xchg
add
enter
imul
mov
aaa
fbstp
xchg
and
cmpsl
imul
xor
xchg
sbb
adc
add
leave
bound
sbb
aaa
or
lahf
data16
aaa
gs
push
nop
cmp
cmp
arpl
sbb
and
sbb
shll
inc
xor
imul
test
xor
inc
adc
repnz
loopne
or
add
mov
mov
aas
xchg
lods
push
rcrb
xchg
inc
rolb
push
in
lds
xor
xlat
dec
jb
dec
xor
xor
adc
inc
xor
mov
pop
vmptrst
aaa
scas
clc
aad
orl
xor
add
dec
shlb
cmp
xchg
out
pop
xor
aaa
jnp
pop
shr
cmpsl
mov
gs
pop
insl
andb
xor
mov
dec
mov
pop
daa
jg
pop
mov
fnsetpm(287
dec
push
jg
das
enter
sub
push
pusha
sub
mov
pop
inc
orl
or
pop
rcrb
fbld
cmp
outsl
stos
ret
pop
and
lods
dec
popa
outsb
push
mov
pop
lahf
xchg
fucomip
mov
mov
pop
cmp
lcall
or
popa
push
popa
es
mov
xchg
push
imul
cmp
inc
inc
imul
xor
call
inc
adc
inc
das
bound
push
sub
fbld
insl
sbb
add
insb
xor
fsubrl
dec
push
das
adc
mov
lock
mov
mov
cmp
ja
xchg
sub
aaa
ss
pushf
out
aaa
ss
ficoml
pusha
cmp
push
push
mov
fildll
es
mov
inc
cmp
push
xchg
mov
xor
push
in
xor
add
cwtl
inc
cs
cmpsb
out
bound
je
adc
sub
test
push
sbb
dec
mov
jmp
sub
adc
and
sub
mov
jp
fildll
lret
aas
mov
or
or
pop
cmp
ds
movsl
negl
push
xchg
push
jns
bound
push
pushf
push
sub
nop
andb
xchg
sahf
push
daa
xlat
sub
addl
in
lock
sub
push
imul
fisubrl
inc
daa
lahf
dec
popa
je
cmp
pop
pop
sub
dec
lds
mov
and
cmp
jnp
add
or
fs
pop
pushf
je
or
sub
mov
push
xor
inc
xorb
lods
les
insb
call
movb
leave
jne
sub
xor
sub
shlb
or
fbld
xchg
or
fistl
xor
pop
enter
enter
xor
sbbl
jo
push
push
cld
je
push
jno
xor
fistps
sub
aaa
addr16
xchg
andl
insb
movsb
pop
add
sub
movsl
add
das
fwait
aam
push
pushf
inc
pop
subl
aaa
lea
add
add
fstps
push
jnp
push
pop
sbb
nop
cmp
or
dec
rol
enter
sub
and
test
jmp
xor
in
xlat
movb
lods
lods
add
push
adc
decl
daa
in
cmp
jg
mov
rcrl
sub
add
ja
xor
cmp
arpl
push
pop
pop
mov
xlat
cmp
jne
cmpb
inc
or
test
and
adc
and
imul
stos
or
mov
loop
inc
adc
lock
mov
jmp
jl
xchg
sbb
push
mov
or
and
fcmovne
jne
dec
xor
aam
in
sub
push
adc
pop
jecxz
or
jmp
imul
mov
stos
nop
rorb
push
cmpsl
pusha
stos
loop
jne
lea
mov
or
mov
pop
and
pusha
lods
dec
inc
push
xor
sub
shl
mov
shll
adc
sub
cmp
xchg
enter
xchg
jne
jmp
jno
dec
call
mov
dec
push
lock
loopne
add
xor
push
gs
icebp
ja
jo
cmpb
push
sbb
adc
mov
div
adc
std
rcll
inc
push
rolb
sub
add
bnd
fld
mov
or
and
or
push
push
adc
adc
bnd
inc
cmpsl
mov
ret
jb
inc
xchg
xchg
je
xor
mov
repz
xor
jecxz
sbb
dec
push
js
or
mov
aad
fildl
out
mov
pop
js
add
test
or
lods
pop
shlb
imul
xor
xchg
out
and
in
inc
aaa
lcall
push
inc
es
adc
hlt
mov
das
xchg
and
or
jne
mull
inc
cmp
aam
adc
adc
jne
out
inc
inc
or
mov
in
jb
cwtl
cld
mov
mov
sbb
xor
sub
pop
sar
xchg
dec
movsl
pop
decl
add
sub
mov
inc
rorb
repnz
add
mov
xor
popa
xor
dec
loopne
dec
shll
arpl
cmp
mov
lcall
xlat
dec
jle
daa
int3
or
and
loopne
cmp
das
pop
mov
or
les
mov
pop
jbe
push
adc
sbb
lret
jmp
or
insl
adc
pop
loopne
insb
pop
jb
mov
adc
cmp
mov
push
dec
stos
in
jae
ret
call
push
insb
stc
popf
cwtl
rcl
pop
mov
jae
lods
adc
push
adc
xor
call
sbb
hlt
add
imul
xor
fcoms
and
and
insl
mov
cwtl
dec
dec
int3
sbb
mov
daa
mov
mov
xor
sub
les
dec
mov
cltd
in
jnp
out
mov
mov
movsb
call
lods
mov
or
sub
ror
hlt
mov
jecxz
jae
int
jle
pop
rorb
pop
or
pop
jb
and
fsubl
aas
test
and
mov
test
lods
pop
fistps
xchg
cld
cmp
fildll
pop
fisttpll
push
test
sub
mov
dec
dec
pop
add
xor
movsb
popa
xchg
sub
add
inc
jo
fwait
add
cltd
cltd
push
sbb
lock
pop
out
inc
mov
xchg
pop
sahf
adc
dec
cmp
loopne
jno
loopne
inc
push
test
aas
popa
inc
pop
repnz
loope
jno
imul
insb
popa
and
ret
add
or
adc
mov
jge
sbb
xor
mov
pop
and
jmp
sti
mov
outsb
ret
add
sbb
adc
fdivrs
loope
insl
sub
adc
dec
in
add
adc
add
sub
xchg
jbe
push
pop
inc
sub
daa
ret
addb
pop
imul
mov
xlat
dec
add
ds
mov
les
in
shr
cld
repnz
mov
lock
jecxz
push
andb
pop
xchg
inc
jl
push
imul
loop
notl
dec
dec
dec
push
inc
enter
inc
inc
dec
push
push
dec
sbb
jp
push
setne
shl
into
jecxz
in
test
paddq
repnz
in
xor
cmp
enter
in
in
in
and
mov
cmpsl
xchg
jecxz
inc
inc
inc
inc
das
mov
inc
push
inc
push
push
pop
ja
push
dec
xlat
push
dec
scas
in
vmwrite
inc
push
inc
push
leave
ret
dec
push
xchg
fiaddl
sub
call
in
pop
pop
out
nop
or
or
js
xchg
push
fcmovb
stos
dec
cmp
mov
add
inc
repnz
add
xchg
sub
inc
arpl
das
push
add
add
push
stos
mov
or
pop
add
inc
xchg
in
sub
pop
xor
push
addb
fwait
mov
inc
ljmp
xor
icebp
loopne
xor
out
outsb
cmp
adc
adc
mov
jo
cmp
addr16
cld
movsb
adc
setl
lock
pop
inc
push
inc
aam
nop
out
push
mov
lcall
sbb
loope
xchg
jnp
or
popa
jo
or
gs
cmp
jns
in
out
adc
xor
lret
dec
test
mov
sub
out
cmc
add
push
push
fadds
cmp
jno
add
mov
insl
out
mov
xor
mov
or
loopne
sahf
mov
fildl
ljmp
or
aam
shrb
scas
sbb
cmp
adc
inc
dec
nop
push
shll
in
xchg
jo
mov
xchg
inc
sahf
fcomi
pop
jmp
lds
rorl
sub
push
negb
je
xor
dec
and
fimuls
fbstp
rcll
das
lock
cmovno
inc
push
sub
xor
or
mov
xchg
adc
mov
adc
pop
aad
in
loop
push
fcmovbe
les
sbb
lea
adc
nop
pop
xchg
jne
sbbl
and
popa
jne
int3
jecxz
nop
je
push
adc
mov
loopne
push
lahf
push
pop
push
scas
les
arpl
bound
jmp
and
sbb
mov
lahf
xchg
and
fdivrs
mov
ret
test
mov
fsubr
adc
push
jo
add
aam
adc
inc
or
rorb
jb
shr
sub
sub
es
int3
ret
ret
dec
mov
cmp
sub
sub
push
and
enter
fs
orb
repz
jmp
test
dec
arpl
arpl
stos
push
gs
iret
inc
add
push
repnz
sbb
mov
sub
or
test
cs
pop
les
push
in
inc
xchg
and
sbb
pop
pop
or
ret
daa
mov
addr16
dec
ljmp
stos
add
pushf
je
sub
adc
adc
push
push
dec
lea
je
or
add
cltd
shlb
mov
notl
js
sbb
pop
sbb
or
mov
sub
dec
push
ja
push
dec
adc
inc
ja
or
push
or
outsb
stos
aam
push
dec
push
lock
pop
jne
rclb
add
cmp
cmpsb
faddp
nop
das
lods
jmp
pop
and
or
movsl
jp
xchg
pop
nop
outsl
out
insl
repnz
mov
lea
add
mov
rcl
push
pop
int
cmp
mov
or
cmp
cmp
sbb
adc
cmp
movb
push
inc
sub
fiaddl
xor
jbe
sbb
clc
aad
xchg
dec
xor
add
push
repnz
repnz
nop
ss
int
mov
sbb
cld
jb
in
mov
mov
mov
push
push
test
or
mov
mov
lock
sub
mov
jp
test
inc
sbb
imul
add
xlat
mov
xchg
lock
movsb
test
ds
and
pop
imul
sub
sub
push
sahf
in
xchg
stos
or
loope
inc
in
sahf
sarl
fadds
cmp
int3
mov
mov
cltd
mov
adc
push
or
cmpsb
jnp
jmp
inc
sbb
ljmp
mov
or
test
sub
inc
mov
pop
test
out
sbb
aaa
inc
adc
shrb
sub
and
fadds
sub
les
xchg
ret
ja
repnz
ljmp
insb
add
xchg
dec
inc
pop
xchg
dec
cs
cs
pop
add
lea
repz
call
push
push
xor
jns
aam
in
add
in
out
xor
or
enter
repz
xor
mov
incl
xor
insb
in
bound
jge
es
lea
outsb
sets
add
xchg
out
sbb
jp
out
cwtl
mov
mov
fldt
imul
test
push
and
adc
inc
ret
hlt
push
sub
mov
int
sbb
mov
sub
ljmp
leave
add
and
and
pop
add
inc
sti
push
in
cmc
xor
mov
and
inc
xor
pop
push
adc
add
js
or
add
lea
fldenv
ficompl
cmpsb
ss
cmp
loope
addb
adc
jae
lea
sbb
push
sbb
lock
xchg
mov
mov
jno
sub
adc
call
in
cs
add
xor
add
sbb
or
xor
jns
sbb
dec
fwait
insl
jge
repz
and
mov
sbb
cmp
fisubrl
test
mov
sbb
push
inc
push
add
pop
insl
adc
inc
dec
inc
and
and
mov
roll
lcall
sbb
imul
and
xor
adc
add
insb
jg
xchg
movb
push
cmp
movsl
xchg
jo
test
orl
clc
inc
jge
and
adc
push
cmp
sub
add
test
mov
in
inc
cwtl
lret
clc
push
imul
add
and
fadd
sub
out
sub
test
add
cmp
leave
rcrb
jnp
es
sbb
call
shll
gs
movsb
lock
aam
push
stc
and
pop
push
cmp
or
clc
insl
add
inc
pop
ja
mov
add
jo
loop
pop
jnp
popf
test
mov
pop
sbb
inc
pop
dec
es
mov
xchg
pmulhuw
jg
xchg
sbb
inc
dec
fdivrp
or
adc
or
push
pusha
imul
fcoml
loop
pop
sbb
leave
mov
pop
das
push
inc
repnz
cld
and
or
sbb
in
jmp
sbb
adc
mov
add
dec
dec
xchg
lock
jecxz
in
mov
jmp
cmp
jnp
andb
or
dec
inc
inc
xchg
inc
or
mov
and
decl
jle
outsb
adc
jne
movsl
dec
loop
pop
insb
push
daa
push
sub
push
cmp
scas
jno
fcoms
ss
adc
inc
sti
dec
jmp
cmpl
dec
sbb
call
jb
shl
dec
hlt
xor
call
mov
fiaddl
mov
push
jb
mulb
inc
cmp
aaa
fwait
ret
pop
test
push
jnp
in
mov
sbb
sub
dec
push
stc
cmpsb
xchg
add
adc
mov
inc
ja
push
push
sbb
inc
cmp
add
mov
mov
fwait
lea
xchg
xor
jg
dec
dec
jecxz
std
sbb
xchg
xchg
xchg
or
outsl
fsts
test
dec
aam
and
loope
adc
mov
mov
add
std
adc
adc
testl
imul
mov
cmp
lret
movsl
bound
mov
sub
out
push
decl
inc
shlb
clc
pusha
sti
xlat
push
or
ds
adc
or
enter
sub
jmp
rcrb
lods
or
adc
repz
xchg
mov
aam
fadd
negl
dec
pushf
and
cwtl
xchg
clc
xorb
les
or
push
mov
pop
and
pop
push
loopne
arpl
inc
les
js
ljmpw
mov
mov
push
ja
sub
and
ja
daa
add
xchg
and
mov
out
ror
xchg
push
sbb
ret
and
mov
daa
ret
cmp
push
out
xor
mov
dec
ret
dec
push
ficompl
push
push
inc
jle
push
cmp
xor
push
push
icebp
lds
outsl
xor
push
inc
xorl
add
pop
fucomi
pop
sub
mov
or
pop
ret
out
mov
add
lock
xchg
jmp
jno
rcrl
push
jp
ds
cmpsl
mov
add
xor
dec
xor
cmp
mov
pop
nop
pop
sub
xchg
jle
dec
cs
pusha
mov
mov
add
mov
jg
sbb
outsb
ffree
add
mov
fists
dec
sbb
shll
or
mov
test
stc
jle
inc
pop
and
add
mov
or
mov
popa
scas
das
enter
pmuludq
pop
pop
sub
inc
xor
add
or
mov
sbb
das
fldl
gs
add
push
xor
sti
ljmp
aaa
in
adc
mov
sbb
push
sarb
les
jecxz
mov
stos
aam
nop
add
or
mov
add
adc
inc
sbb
inc
or
pop
mov
and
push
and
inc
or
mov
lock
subl
add
sbb
xor
lock
or
icebp
fs
es
add
add
adc
and
add
pushf
and
push
inc
pop
aaa
shl
cs
icebp
dec
cmp
sub
ss
pop
loop
or
xor
sbb
push
repz
loop
or
mov
pusha
xor
es
divl
xor
sbb
cmp
xchg
test
adc
and
in
xor
jno
add
mov
and
inc
jecxz
fneni(8087
inc
sbbb
jmp
and
cmp
jne
add
xchg
sub
std
jne
xor
push
cmp
loope
fs
lds
mov
push
pop
and
pop
pop
dec
scas
pushf
sub
or
push
add
je
mov
aad
lock
and
pusha
add
les
push
cmp
mov
or
push
jb
jns
jnp
or
sub
stc
xchg
add
clc
cmp
dec
hlt
or
repnz
add
pop
or
push
adc
cmpsb
push
inc
test
por
push
add
cwtl
mov
xlat
dec
xor
mov
loopne
dec
mov
sahf
jge
sub
xchg
stc
inc
add
pop
arpl
sub
testb
ja
repz
lock
pusha
mov
mov
rcll
stc
add
insb
add
in
pop
mov
fadds
stc
or
jmp
cmpsl
and
test
or
add
jo
add
mov
cltd
dec
loopne
mov
pop
ret
outsl
jle
call
sub
scas
cmp
add
aam
pop
mov
add
mov
pop
outsl
in
and
out
hlt
jo
lock
rolb
out
and
or
xor
cmpsb
xor
jl
cmp
adc
lods
pop
les
sbb
rorl
or
fdivs
push
shlb
imul
fsubrs
lea
add
mov
adc
lret
lret
ja
leave
or
mov
and
shrb
xor
mov
add
int3
fsubrs
mov
in
sbb
lods
push
dec
lods
pusha
decb
jmp
nop
push
in
adc
test
sbb
inc
rcrb
dec
cmp
leave
add
sbb
call
call
dec
xor
add
add
negb
mov
add
sub
xchg
movsb
push
cwtl
fistpll
and
jb
xor
les
movsb
repnz
push
pop
repnz
push
push
repnz
sbb
push
ret
enter
xchg
sub
inc
movsl
mov
aam
sysenter
xchg
arpl
test
mov
or
cmp
test
and
movl
aad
sub
dec
inc
inc
adc
popa
bound
enterw
and
aaa
sub
lock
add
ja
xchg
in
inc
dec
cmp
mov
sbb
jmp
enter
frstor
loop
das
sbb
pop
xchg
fwait
cmp
out
movsb
add
adc
in
add
adc
push
lods
adc
dec
mov
pop
pop
sub
dec
movsb
push
dec
cmpsb
lahf
xchg
enter
fildll
inc
xchg
or
arpl
addr16
mov
bound
jb
je
jbe
js
jp
mov
sub
xlat
scas
pusha
push
cs
shlb
sub
std
adc
nop
dec
adc
or
add
dec
push
cmp
sbb
push
add
push
add
adc
adc
fisubrs
rclb
push
or
adc
mov
mov
insb
aam
shl
push
testl
addl
jne
mov
xor
aam
push
jo
pop
push
adc
adcl
pop
sbb
lock
jnp
xor
fcompl
jo
fcomps
or
adc
movsl
inc
pusha
sub
cwtl
pop
mov
xchg
popf
mov
push
out
jbe
nop
scas
mov
clc
adc
rclb
dec
adc
dec
mov
adc
and
and
aas
mov
push
fmull
push
leave
es
cmp
das
push
inc
dec
and
xchg
or
movsb
ja
fsubl
or
stos
mov
mov
andb
repnz
dec
mov
mov
and
mov
insl
mov
pop
sbb
test
pop
push
enter
test
adc
add
add
mov
xor
xor
mov
flds
sub
repnz
sbb
or
lods
xchg
inc
inc
fistl
pop
out
inc
or
and
mov
dec
cs
test
inc
rorb
add
sub
in
call
mov
and
ret
test
push
imul
adc
sub
or
inc
movsb
mov
sahf
mov
les
inc
pusha
test
adc
xor
cmp
xchg
jp
inc
adc
sub
or
push
je
or
popf
ret
jg
xor
nop
shrl
movb
push
adc
in
push
mov
and
inc
and
cmp
jno
ss
or
je
jg
stc
or
dec
aaa
jp
pusha
mov
cmp
push
iret
sub
or
mov
jle
cs
mov
pop
rclb
pop
loope
out
lock
xchg
bound
adc
imul
cmp
rorb
push
pop
jo
pop
mov
pop
iret
mov
pop
and
and
lock
outsb
andb
les
lods
sbb
jb
or
sub
in
cmp
push
inc
mov
sbb
sbbb
es
push
add
lcall
ds
xor
ds
pop
iret
adc
jnp
fimuls
push
sbb
call
sbb
mov
push
mov
jns
and
or
subl
in
aam
push
push
ret
inc
cmp
xor
pop
add
fsubrl
and
addr16
test
insl
dec
cmp
inc
push
add
cmp
pop
mov
nop
bound
adc
add
jmp
scas
add
outsb
fadds
ljmp
rcll
pusha
add
loopne
sahf
mov
pop
rclb
push
lds
mov
mov
test
or
out
cmp
mov
scas
pop
xor
nop
lahf
or
pop
scas
fs
sahf
or
sub
lret
inc
aaa
enter
inc
and
mov
cld
fnclex
in
inc
or
rorl
inc
push
sahf
adc
ja
fistps
les
and
sub
adc
push
scas
mov
sub
das
pavgb
les
xchg
sbb
push
push
adc
shl
add
outsl
outsl
imul
cmpsb
jno
lods
pop
sub
xchg
mov
fcoms
sub
fists
push
sub
daa
jns
je
pop
and
lcall
push
test
in
push
arpl
and
enter
fidivs
adc
fbld
nop
pusha
push
xchg
pop
jae
jo
mov
jg
sub
repnz
pushf
push
aam
add
faddl
push
js
fwait
add
sub
arpl
inc
cmp
push
sub
mov
adc
test
cld
xor
nop
aas
pop
sub
pop
roll
nop
xor
into
mov
cmp
cmp
adc
scas
pop
pop
and
int
pop
dec
push
push
jb
js
les
sub
add
sub
inc
lea
sub
andb
mov
add
lds
mov
mov
xor
jnp
inc
or
and
and
pusha
pop
mov
add
inc
test
inc
lret
aam
add
lcall
loope
push
xor
outsl
and
cmp
xor
pop
or
les
insb
inc
cmp
aas
push
push
clc
adcb
push
rorb
xchg
jbe
sbb
push
xorb
sub
sbb
outsl
or
pop
mov
mov
and
push
sbb
xchg
movsb
mov
out
inc
sahf
dec
clc
adc
mov
add
pop
pop
aaa
sub
sbb
ret
outsl
pop
addb
dec
adc
push
inc
sbb
mov
and
scas
inc
dec
pop
or
leave
push
lahf
gs
sti
push
and
xor
pop
add
push
stos
sub
mov
mov
lds
mov
sbb
adc
sarb
inc
jne
xor
pop
adc
cltd
inc
jmp
mov
mov
mov
or
adc
dec
sbb
mov
and
or
cwtl
in
sub
pop
dec
shll
adc
jbe
rcr
sbb
adc
mov
xor
jmp
test
xorb
sbb
dec
shrl
gs
hlt
imul
mov
xor
repnz
sub
fmuls
test
lds
lret
push
mov
inc
int3
cmp
je
lcall
es
pushl
push
mov
stos
rolb
imull
mov
fmul
shlb
test
adc
femms
adcl
call
dec
jmp
or
sbb
cltd
in
mov
adc
cmp
mov
mov
push
insb
sbb
push
mov
push
push
add
nop
out
and
pop
xchg
pop
shll
mov
scas
jbe
or
arpl
inc
adc
inc
pop
pop
sub
inc
daa
dec
sbbb
push
cmpsl
cmpb
shld
sub
push
sbb
push
push
mov
loopne
pop
pop
jns
sub
pop
sub
outsl
cmc
addr16
clc
mov
or
in
daa
dec
inc
clc
mov
int3
mov
xor
xor
mov
cli
aam
pop
push
dec
daa
fisttps
mov
push
cmp
testl
push
inc
dec
dec
inc
gs
dec
dec
push
inc
inc
push
ds
add
andl
mov
push
or
test
xor
and
add
sbb
sub
push
mov
pop
test
test
pop
add
daa
aaa
rclb
xor
call
jg
pop
xchg
xchg
add
in
cmp
jae
push
cmp
in
mov
cltd
sbb
mov
sbb
bound
shrb
aad
sbb
fsub
xorb
jmp
fdivrs
mov
aam
mov
sbb
sbb
mov
pop
imul
xor
dec
mov
xor
dec
mov
mov
dec
push
fiadds
int3
mov
rcl
adc
ret
gs
je
scas
subl
mov
dec
cmpsl
cmp
sbb
push
notl
inc
imul
xor
and
test
in
roll
mov
ret
mov
push
xchg
hlt
sub
jne
adc
xor
inc
sbb
xor
mov
push
inc
xor
daa
insl
lods
sub
adc
xchg
sub
outsl
fdivrl
jo
xchg
jnp
loopne
xchg
addr16
je
cmp
sub
push
adc
fidivs
jnp
pushl
or
adc
fimull
fmull
movsb
pushl
jae
push
inc
cmp
cmp
push
mov
cmp
movsl
test
mov
cmp
dec
sbbl
adc
pop
js
inc
imul
adc
les
mov
jbe
and
sbb
iret
aam
lock
push
inc
cld
sbb
sbb
sub
sbb
push
mov
test
pop
push
sahf
gs
mov
sub
arpl
in
inc
sub
lock
jb
jl
push
push
movsl
outsl
and
aas
and
lahf
insl
call
push
mov
subb
xor
push
lret
fistl
rol
shr
in
xor
prefetchwt1
xchg
daa
inc
pop
sub
es
jg
inc
push
push
dec
dec
dec
inc
dec
dec
dec
adc
daa
mov
or
cmovo
push
sbb
adc
push
adc
das
ja
dec
inc
jae
sbb
lock
or
cld
das
inc
in
loope
imul
dec
and
mov
pminsw
push
xor
push
arpl
pop
xor
dec
push
in
rclb
loope
inc
jo
push
xor
mov
xor
mull
mov
inc
popf
sbb
addl
pop
cmp
out
xor
mov
sbb
and
scas
das
clc
loopne
out
fldcw
pop
jns
adc
push
xchg
push
xor
js
pop
push
push
dec
mov
jno
cmpl
inc
sbb
rcrb
inc
dec
add
lcall
inc
int3
push
mov
cmp
inc
pop
jne
test
and
bound
dec
dec
mov
mov
mov
xchg
xor
adc
fcoms
add
add
mov
cltd
hlt
mov
arpl
int
push
pop
mov
loopne
mov
cmp
adcl
sbb
pop
je
pop
pop
cmp
dec
mov
xor
mov
mov
ficomps
sbb
push
pop
les
in
mov
daa
outsl
or
out
es
je
sar
dec
xor
loope
push
aam
mov
jne
pusha
sbb
mov
inc
mov
rclb
sbb
and
outsb
adc
sub
inc
aad
or
into
adc
cmp
loop
push
shlb
add
pusha
jo
push
call
pop
aam
mov
lds
pop
adc
mov
aas
cwtl
xchg
mov
rcrb
loop
jmp
adc
movsb
in
inc
or
dec
inc
or
adc
jbe
adc
adc
push
out
or
xor
das
sbb
in
lods
sbb
cmp
adc
push
leave
adcb
add
addr16
sub
add
mov
cmc
rorb
xchg
jbe
dec
scas
inc
orb
xchg
adc
int
add
or
cmpsb
adc
movsl
pop
mov
cmp
cmpb
jo
aad
cmp
push
push
test
ss
adc
imul
push
cwtl
pop
sbb
pop
pop
xor
enter
cmp
addb
xor
jl
xor
and
ja
xchg
jo
jg
and
popf
mov
inc
inc
lods
sub
sub
push
aaa
sahf
mov
lea
dec
mov
stos
mov
movsl
inc
adcb
add
fwait
xchg
push
gs
addl
push
push
mov
movsl
add
adc
and
dec
sub
sub
lock
adc
fmull
sbb
mov
push
sarl
dec
dec
add
fldt
push
pop
nop
inc
test
loop
inc
in
or
inc
pop
mov
adc
dec
jne
xor
adc
and
push
mov
sub
cmpb
jg
add
inc
stos
push
sbb
and
cmp
fidivs
inc
out
add
idiv
stc
adc
scas
dec
cld
pop
cld
mov
and
pushl
push
mov
or
ja
cmp
ljmp
cmp
push
cmp
rorb
sub
pop
dec
addl
pop
xor
testl
je
and
ret
add
add
mov
stos
xor
scas
add
or
movsl
lret
clc
ds
push
xlat
addr16
ds
mull
sbb
inc
dec
xchg
dec
pop
cmpsb
and
sbb
ret
ret
scas
add
pop
push
sub
or
add
in
adc
and
ficomps
jl
js
push
sub
shrl
mov
mov
cmp
test
or
inc
push
cmp
mov
xlat
add
call
dec
rclb
or
push
imul
cmp
scas
addl
pushf
cld
pop
repnz
cmp
mov
lock
lock
scas
lea
xchg
inc
in
mov
jmp
shlb
pop
inc
pushf
lret
adc
cltd
push
adc
pop
mov
loopne
sbb
jne
sbb
sub
and
mov
clc
add
sbb
nop
sbb
and
cmp
or
int3
inc
iret
mov
bound
outsb
jmp
mov
xor
fadd
scas
adc
insb
push
or
out
adc
adc
rclb
call
decl
pop
dec
imul
inc
add
and
add
aad
dec
dec
shrb
adc
or
cmp
xor
ds
lods
dec
mov
hlt
push
orl
in
fs
in
xchg
adc
aaa
ds
jno
add
adc
pop
sub
sub
rolb
add
test
or
sub
cmpsl
mov
hlt
sub
fmuls
sbb
push
add
jne
repnz
ds
add
push
aad
mov
inc
decb
aas
dec
cld
in
add
lea
add
inc
push
cli
sub
add
or
push
cmp
stos
or
sub
js,pn
mov
pushf
nop
sub
cld
roll
inc
ret
adc
movsb
cmpsb
pop
aam
add
cmovns
and
dec
sahf
inc
or
out
aas
clc
lea
dec
dec
and
pop
sbb
push
addl
sbbb
popa
addl
add
rolb
push
jecxz
enter
inc
mov
test
sbb
adc
lret
orl
outsb
inc
ja
inc
push
xor
mov
shlb
push
adc
mov
cmovae
jae
jmp
fidivs
nop
inc
inc
inc
pop
pusha
push
test
jmp
pop
add
lcall
adc
add
or
dec
push
shll
scas
aas
pop
sub
cmp
das
mov
data16
push
dec
push
sahf
mov
inc
sbb
imul
out
sub
clc
lds
and
mov
subl
out
ljmp
and
and
inc
jnp
lock
dec
inc
inc
das
pop
push
rcrb
repz
sahf
cmpsb
push
push
sbb
pop
push
jmp
dec
inc
push
sbb
mov
dec
sub
es
jg
pop
shr
push
inc
dec
punpcklbw
in
xlat
scas
mov
flds
mov
mov
imul
xchg
xor
rcll
push
push
push
xchg
sbb
incl
nop
gs
sbb
add
aad
or
push
or
xorl
adc
test
jge
popf
push
push
adc
movsl
add
nop
add
sub
pop
lcall
pop
repz
or
jb
scas
and
mov
sub
and
sub
add
mov
push
jecxz
add
mov
sbb
sub
mov
mov
sub
push
test
leave
pop
repnz
cmp
cmp
add
gs
and
loope
add
cmpsl
jo
icebp
popf
jae
adc
arpl
fdivs
mov
cmp
imul
subl
adc
inc
dec
cmp
ret
sbb
xchg
dec
pop
cmp
push
jb
dec
fwait
sub
popa
lea
hlt
mov
ret
cmpsl
mov
jns
push
sub
aad
push
cmpsl
or
push
inc
sbb
loopne
rclb
pop
pop
cmp
pop
inc
add
fadds
adc
or
inc
repnz
xor
pop
dec
rorl
js
dec
cld
mov
faddl
add
fistl
rcll
and
push
sbb
sub
loopne
enter
aam
mov
and
hlt
inc
dec
sub
pop
inc
ss
xchg
or
cwtl
pop
or
ror
in
fs
cs
sqrtps
test
cmpsb
dec
ja
xchg
add
adc
pusha
or
mov
in
xor
mov
jb
pusha
or
sahf
out
add
test
insb
adc
or
mov
dec
jo
adc
or
push
and
insl
inc
nop
or
pop
nop
or
sbb
lea
dec
popa
jl
jl
insb
rcrb
imul
test
test
sbb
pop
pop
add
add
inc
mov
inc
movsb
outsb
sub
push
jno
das
in
inc
movsl
inc
xchg
xchg
sbb
cmp
aas
popf
enter
lahf
xor
out
pop
dec
dec
nop
dec
jbe
test
sub
in
fbstp
mov
dec
bound
push
push
inc
add
inc
subb
popf
fdivrs
adc
pusha
push
pop
xor
push
jns
push
in
enter
jns
or
icebp
adc
jae
or
ret
and
adc
jnp
in
inc
js
and
jge
push
or
pop
shrl
gs
jns
add
addb
cltd
jl
adc
push
add
outsl
or
dec
test
mov
or
inc
aad
or
gs
adc
push
outsl
or
sub
cld
gs
hlt
inc
dec
popf
sub
ror
push
or
or
imul
adc
cmp
mov
in
or
and
shll
sub
xor
xor
dec
xor
shll
dec
dec
push
push
shll
pop
pop
sub
inc
inc
pop
out
or
adc
lahf
cmpsl
adc
dec
push
cltd
cmp
sbb
or
lcall
sub
addb
and
xor
xlat
int3
cli
popf
test
dec
addps
pusha
sub
or
mov
or
inc
or
ret
or
jl
pop
sbb
lret
or
in
mov
int
cmp
mov
jl
adc
mov
or
daa
loopne
loopne
cmp
mov
ss
incl
test
loope
sbbb
or
setae
popf
pop
fs
test
xorl
fsubl
arpl
xchg
dec
lcall
enter
hlt
push
xchg
out
push
fnsave
sar
inc
adc
or
xor
mov
sub
sub
and
inc
sub
xchg
int3
mov
add
pop
pop
dec
fwait
xor
mov
and
pop
les
dec
cwtl
les
cmp
rorb
shr
jge
movl
fildl
fdivs
xchg
mov
mov
sbb
lock
push
mov
mov
dec
fistl
test
inc
sbb
cmp
mov
sbb
int3
or
jg
sub
pop
das
adc
aaa
arpl
ret
push
pop
jb
add
push
fs
and
test
testl
cmpsb
lahf
xchg
aad
outsb
jl
sub
jge
sti
adc
test
dec
adc
pushf
push
aas
leave
pop
push
lock
fcomps
mov
dec
jnp
jo
inc
in
in
cmp
mov
adcb
mov
leave
adc
mov
xchg
jl
mov
mov
adc
fs
das
or
ljmp
fdivrl
in
add
add
fldl
fcomps
out
adc
mov
add
or
popa
push
push
pop
mov
add
popa
hlt
mov
mov
stc
pusha
pusha
cmpsb
xor
inc
subl
push
inc
mov
inc
push
mov
jb
or
sub
adc
add
sbb
adc
sub
or
push
add
fwait
jbe
adc
or
orl
cmpl
dec
mov
call
and
and
rol
lahf
push
daa
xor
push
or
add
add
addb
mov
sbb
or
adc
xor
fiaddl
xchg
xor
pop
leave
inc
cmp
push
push
mov
repnz
loope
and
fstpl
clc
xorb
or
or
scas
push
ret
pop
dec
inc
jp
inc
dec
daa
xor
and
insl
add
fcmovb
jmp
lret
cmpsl
sub
mov
xor
cmc
pushf
dec
fcoms
push
or
inc
push
maxps
cmp
scas
xorb
and
les
fists
stos
push
out
pop
mov
or
or
andb
push
mov
add
imul
push
mov
mov
dec
pusha
inc
mov
dec
sbb
lds
xchg
in
icebp
cld
aas
mov
pop
repnz
ljmp
and
insb
mov
jo
sbb
inc
enter
mov
cmpsl
movsb
sbb
xchg
adc
insl
loopne
cwtl
xor
cld
fdivrl
dec
xor
fmuls
cld
mov
mov
pop
mov
and
sbb
mov
push
jo
in
inc
push
pop
push
sub
push
das
punpcklbw
push
sbb
ss
add
lahf
lret
movsl
inc
lahf
addr16
sbb
cmpsl
pop
loop
pop
rdpmc
xchg
mov
stos
sub
out
daa
push
dec
jae
adc
jo
je
lahf
dec
xor
xchg
addb
test
jl
dec
and
cli
mov
or
push
dec
adc
or
dec
adc
dec
pop
pop
dec
jno
cmp
mov
das
stos
add
inc
and
popa
xor
sbb
fsub
das
push
and
das
sub
pop
or
cmp
das
in
jbe
dec
and
mov
adc
cmpsb
cmp
inc
aaa
lock
loopne
les
pusha
jns
decl
fistps
mov
cmp
adc
pop
mov
pop
inc
nop
dec
xor
adc
and
sub
and
insb
insb
mov
add
mov
repnz
cltd
nop
sub
jl
jl
dec
test
inc
mov
pushf
cwtl
and
mov
inc
cwtl
mov
in
psubw
jp
pop
pop
fcomps
dec
lods
or
ret
pop
repnz
jns
cmpsl
cmp
cmpb
sbb
pushf
stos
adc
sbb
or
lret
and
rolb
push
dec
pusha
cmp
pop
bts
adc
sbb
add
mov
add
xlat
push
or
jmp
push
adc
daa
xor
pusha
inc
roll
xlat
ss
and
mov
inc
fists
or
ds
test
cmp
add
cmp
xor
fistpll
decl
ja
orb
jl
jns
inc
sbb
mov
pop
jl
or
push
lods
in
bound
bound
cltd
in
dec
cld
clc
mov
xor
pmuludq
sti
cli
rclb
pusha
and
js
mov
loopne
push
in
bound
add
push
repnz
add
xor
aas
mov
jo
cmpsb
mov
xor
mov
push
outsl
cmp
and
jae
add
sbb
or
sar
push
or
insl
add
mov
shrb
test
add
xchg
sub
adc
push
add
in
call
es
adc
sarb
bound
sub
rorb
pop
jle
mov
jbe
mov
inc
fcoms
rclb
dec
fs
shll
push
rcr
adc
jo
cmp
sub
inc
sub
dec
sbb
sbb
push
or
fildll
aaa
push
pop
add
aaa
pop
and
push
mov
pop
pushf
inc
gs
loop
xchg
bound
testl
dec
repz
lahf
mov
movsb
sbb
sub
add
sbb
cld
shlb
cltd
dec
jo
xlat
and
xbegin
dec
outsb
rorl
xor
and
subb
test
inc
cmp
das
adc
add
push
dec
sbb
mov
push
gs
push
push
jae
mov
js
pop
inc
fsub
add
fwait
idiv
ja
jo
xor
or
mov
pusha
cmp
mov
or
adc
lods
inc
adc
sbb
js
add
add
pushf
popa
test
pop
out
mov
dec
imul
and
pop
adc
pushw
sbb
inc
push
fldt
inc
dec
mov
add
or
push
pusha
adcb
fstpl
xlat
sbb
sbb
sbb
addl
mov
adc
sub
pop
add
mov
sub
adc
or
fnstenv
fiaddl
mov
das
xchg
adc
addr16
lcall
xchg
lods
push
pop
push
cwtl
pop
in
pop
adc
push
sub
jg
mov
pop
rorl
test
dec
push
incl
sub
mov
sbb
push
jb
dec
out
pop
fnstsw
outsl
rolb
and
loopne
add
mov
lods
cmpxchg
xchg
adc
int3
loopne
call
dec
loop,pn
or
pop
imul
inc
jne
push
cmpsl
mov
mov
push
pusha
pusha
add
mov
outsl
dec
nop
pop
xchg
xchg
dec
sbb
push
insb
xchg
dec
cwtl
mov
lock
pop
push
push
imul
mov
sub
dec
or
in
adc
imul
cmp
addb
fistps
pop
xchg
push
sbb
xchg
adc
add
add
pop
lods
and
loopne
adc
add
ja
push
mov
jo
lahf
or
mov
gs
mov
or
push
adc
test
jno
xor
adc
and
repz
repnz
push
sbb
or
mov
insl
fcoml
out
mov
cmpsb
sub
in
add
test
or
addl
cmovb
pop
mov
and
cmpsb
or
pfadd
ret
push
and
inc
adc
stos
or
xor
add
mov
movsb
mov
mov
pop
dec
adc
or
adc
sbb
add
jbe
imul
add
or
mov
lcall
xor
mov
or
pop
lock
cld
mov
sub
hlt
cld
or
fld
cmp
push
mov
movsb
outsb
dec
push
mov
outsl
cmp
add
and
imul
add
push
outsl
lahf
adc
add
pop
and
add
mov
pop
xor
lods
add
jne
in
fnsave
adcl
add
ss
pop
jb
daa
sub
push
and
adc
pop
jl
add
stc
pop
jle
pop
mov
rolb
jo
fs
push
jo
jo
enter
lret
pop
add
nop
xchg
mov
bound
das
fidivl
rcr
dec
sbb
xlat
and
addb
jnp
mul
mov
ficoml
rcll
nop
xchg
fneni(8087
add
imul
adc
adc
test
jl
mov
cli
out
ret
jmp
call
adc
mov
push
repnz
xorb
and
sub
jge
xchg
cld
and
pusha
sbb
jae
lcall
jae
jae
pop
test
out
insb
movsb
hlt
cld
ss
jge
lods
cld
mov
and
inc
in
call
pop
adc
or
adc
inc
add
add
in
jecxz
push
pop
mov
lock
and
push
leave
ret
sub
adc
sbb
lds
sbb
fidivrs
outsl
and
dec
push
movsl
inc
hlt
fdivs
or
cmpsl
fiaddl
clc
or
fisttpll
push
fidivrl
push
mov
adc
sub
sub
pop
les
dec
inc
pop
pop
sbb
push
push
jmp
pop
hlt
adc
pop
jp
ficoml
sub
mov
imul
sub
push
fildll
ds
pop
repnz
jne
add
mov
decb
inc
sbb
xlat
sbbl
sbb
mov
xchg
adc
shrb
add
je
or
scas
dec
mov
cmp
mov
pusha
mov
pop
aas
jne
jae
movsb
lds
aam
cmp
scas
or
popa
mov
js
ja
inc
inc
insl
aaa
es
sub
fs
sbb
or
sub
imul
cltd
insl
jno
and
push
fs
loop
int3
jmp
or
rcr
push
je
pop
mov
ret
scas
test
or
cmp
cmp
mov
inc
sbb
pop
dec
and
xor
sub
and
xor
pop
rcrb
pop
add
outsb
push
mov
sti
push
xor
shrb
pmuludq
or
aaa
dec
js
mov
inc
sub
and
aas
mov
xchg
lea
or
fwait
xor
mov
or
jne
test
push
js
ret
push
adc
and
dec
int
xchg
test
out
in
stos
imul
adc
rcrb
cmp
inc
cmp
arpl
add
dec
lret
fdivrs
ljmp
fwait
nop
test
push
dec
or
adc
xor
mov
inc
insl
dec
cmp
lcall
adc
clc
sbb
adc
or
add
xchg
arpl
lods
fnstenv
sub
and
and
and
push
sub
pusha
insl
add
mov
and
push
inc
mov
add
or
cmp
jno
cmp
pusha
aaa
push
xchg
adc
mov
nop
xor
inc
loopne
filds
xor
fcoms
nop
inc
add
pop
ja
aam
mov
add
loope
das
jmp
mov
jno
pop
add
das
jl
push
mov
inc
cld
scas
shrl
mov
pop
aad
adc
sbb
sbb
xchg
xchg
out
mov
fmul
push
leave
add
in
lcall
or
cmp
add
jmp
push
dec
pop
add
sbb
mov
sbb
xor
xchg
pop
or
adc
jmp
or
xchg
jle
test
js
sti
sarl
sub
cmp
cld
mov
stos
add
sahf
std
mov
icebp
test
pop
or
inc
js
cmp
dec
push
sbb
adc
rcrb
lds
fsubs
insl
xchg
push
repz
dec
jo
js
add
cmc
or
jge
pushl
sbb
add
xor
mov
outsl
jle
and
push
ret
sbb
ret
xchg
mov
mov
mov
mov
stc
and
lock
imul
adc
push
mov
push
inc
jmp
aaa
push
cli
push
mov
or
pop
in
jle,pt
xchg
push
push
and
xchg
dec
push
adc
add
rorb
jo
sub
nop
sub
inc
out
outsb
sbb
or
and
psubusb
push
or
jbe
mov
cmc
lds
testl
mov
add
xchg
sub
fsts
push
mov
sbb
jns
orb
mov
or
dec
push
repnz
test
lds
cld
mov
push
mov
sub
xchg
push
and
xor
and
pop
outsb
fstpt
fistpll
ret
into
mov
loopne
test
fcoms
adc
mov
pusha
addl
daa
sub
enter
pop
sbb
sbb
or
mov
lret
and
or
aas
sub
cmp
pop
xor
adcb
outsb
push
adc
cld
adc
xor
and
adc
jo
fisubs
outsl
and
add
fdivrs
insb
jno
cs
ds
cwtl
aam
enter
and
in
pop
xor
outsb
or
mov
add
sub
je
push
loop
sti
xchg
rorb
and
addl
jnp
adc
push
lea
jno
lds
push
mov
or
mov
jge
hlt
or
mov
fcmovbe
pop
in
je
lock
pop
mov
mov
or
push
jmp
das
sbb
aam
mov
and
jne
loopne
cmp
push
cmp
sarl
adc
sbb
test
shll
cld
iret
add
and
xchg
aam
mov
inc
daa
fbstp
xchg
pop
add
daa
imul
dec
push
push
les
test
push
inc
inc
inc
cld
push
add
push
jg
dec
inc
push
inc
lock
push
jmp
lcall
test
push
loopne
subl
rorb
pop
or
jg
cmpb
lcall
shlb
adc
and
icebp
xchg
adc
xchg
cltd
ret
jns
pusha
mov
out
pusha
jmp
push
mov
add
add
and
fstl
push
add
sbb
xchg
add
or
aaa
fiadds
das
jmp
pop
ficompl
outsb
cs
jne
cmpb
fstps
sub
and
fisubl
pop
xchg
sub
jmp
ja
inc
cltd
imul
mov
cmp
mov
or
mov
inc
pop
gs
sbb
cld
ds
pop
push
dec
pusha
das
pop
loope
inc
cmpsl
sub
or
lock
sub
adc
jp
add
and
nop
div
push
and
inc
cmp
inc
add
mov
rcl
stc
pop
jae
sub
adc
pop
sub
lds
inc
jae
mov
xchg
in
xor
adc
ret
inc
jb
jae
and
hlt
hlt
enter
xor
push
jmp
pop
pop
dec
jbe
and
sub
cmp
popf
pop
mov
xchg
add
mov
pcmpeqd
adc
or
xorb
cmp
cmp
cwtl
or
pop
xchg
mov
ret
xor
adc
cltd
add
cmp
mov
loop
or
xlat
dec
xchg
dec
test
and
inc
call
insb
js
imul
cmpl
loopne
xchg
mov
aaa
sbb
in
push
mov
icebp
orb
or
cmp
int3
in
repnz
xor
ljmp
gs
popa
dec
mov
aas
sub
ss
inc
out
or
xor
js
jno
cmp
test
cmp
daa
data16
xchg
inc
push
mov
das
cld
sub
dec
add
dec
shlb
dec
dec
jg
nop
or
add
adc
mov
cld
or
mov
push
ja
clc
stos
jne
or
mov
xchg
int3
xor
loope
push
jp
gs
out
push
insb
adc
pop
adc
aam
inc
cld
sbb
test
mov
add
inc
push
test
outsl
mov
mov
cmp
dec
sbb
clc
inc
sub
js
jne
xchg
clc
in
clc
inc
in
dec
in
in
fisttpll
loope
decl
pop
fdivrp
and
les
sarb
pop
daa
or
add
pop
xor
mov
adc
adc
and
adc
movsl
shlb
adc
adc
or
out
aad
nop
push
out
sbb
clc
mov
ret
add
xor
fildl
out
add
dec
or
shll
dec
mov
sbb
test
xchg
jl
inc
mov
stos
mov
dec
fs
push
jno
fbld
lcall
pushf
xlat
push
pushf
fwait
jne
xchg
in
ret
pop
or
rclb
push
imul
mov
lock
sub
add
xchg
inc
in
sbb
pop
jb
call
ja
ret
insb
mov
push
cltd
sbb
inc
jg
sub
test
jnp
cmpsl
or
or
and
popf
xor
ret
cmp
mov
mov
jo
sarb
nop
xchg
sbb
inc
xchg
ja
adc
test
mov
fistpl
aam
mov
inc
mov
mov
lcall
sarl
xchg
push
push
dec
dec
arpl
xor
add
repz
lods
lea
push
test
shrl
cmpsl
and
outsb
in
ret
rcrb
add
add
adc
mov
jmp
and
in
loopne
in
mov
inc
pop
sbb
mov
cmp
les
rcrb
lret
push
data16
js
or
or
xor
dec
xchg
lds
repnz
fldt
jg
pop
ja
out
bound
pop
mov
sbb
out
adc
andl
mov
or
mov
cmp
pop
rorb
call
shll
and
adc
xchg
in
push
js
ret
inc
inc
add
lret
pop
mov
push
in
je
stos
adc
shll
or
das
dec
add
pop
mov
xchg
pop
pop
cld
push
imul
cmovle
mov
pop
leave
and
sbb
xchg
inc
and
mov
or
add
dec
aad
push
rcrb
sub
dec
out
pop
iret
sbb
or
imul
test
mov
xchg
imul
adcb
daa
push
adc
fisubl
shll
cmpsb
pop
nop
lods
std
jne
mov
xor
xor
pop
dec
and
sti
dec
cmp
fldcw
pop
or
push
xor
or
push
jb
or
add
pop
or
mov
sub
and
stos
scas
mov
push
cmp
mov
movlps
fstpt
aaa
ljmp
xor
sti
shlb
fiadds
pop
mov
mov
test
fs
loope
ss
addr16
ds
inc
mov
adc
pop
enter
mov
push
jg
push
test
push
in
out
iret
and
lock
mov
inc
inc
mov
fcomip
jmp
mov
dec
lcall
call
call
pop
rolb
or
and
test
inc
dec
dec
push
fdivrs
inc
inc
push
sub
sub
test
daa
jae
xchg
les
adc
inc
pop
lock
es
xchg
or
inc
adc
cltd
out
xchg
add
dec
and
mov
cmp
inc
test
xchg
add
subb
cmovp
shrb
sbb
push
push
adc
xchg
subb
ret
imul
adc
mov
xchg
pushf
push
pop
mov
mov
aaa
adc
pusha
xchg
mov
lods
or
scas
sbb
xor
push
addr16
shlb
pop
or
xor
dec
movsl
sub
lods
les
jmp
pushl
jmp
pusha
sbb
or
sbb
push
inc
adc
mov
shlb
jbe
cmp
rcrb
mov
subl
das
cmpsb
xor
bound
and
les
and
push
xchg
inc
jb
and
xorl
inc
and
daa
or
outsl
cmp
rcrb
test
push
add
ret
push
dec
cmp
xor
test
ja
cmp
jg
lea
adc
add
ret
push
xchg
and
and
or
aad
andl
and
cmovl
add
inc
test
js
shrl
adc
push
mov
jmp
lcall
or
adc
push
dec
int
test
cmp
popa
jnp
lahf
shr
cltd
dec
xor
popa
push
dec
insl
jnp
imul
pop
add
jle
pop
add
popf
outsl
jl
inc
xchg
aas
dec
xchg
add
xor
movswl
mov
lock
jne
adc
cmp
cmovo
hlt
sbb
unpcklps
mov
push
sub
sbb
xor
fs
mov
cmp
out
or
lcall
add
cld
inc
in
and
cld
jnp
push
mov
lcall
mov
add
clc
pop
scas
enter
mov
out
dec
xor
xor
nop
dec
push
adc
stos
mov
push
fwait
push
sahf
test
xor
mov
loope
add
add
inc
lcall
push
andl
out
pop
mov
test
mov
or
adc
xor
pop
ficompl
ss
testb
adc
dec
sub
loopne
daa
jne
and
xlat
pop
sahf
je
sbbb
cmp
pop
sbb
das
dec
cmpb
dec
fstl
shll
pop
or
lea
and
popa
mov
push
pop
inc
sub
test
test
xorl
push
xor
lods
xchg
lahf
outsl
cs
xchg
das
and
data16
cmp
inc
add
int
fdivl
hlt
mov
push
adc
sbb
jmp
push
cs
add
les
jnp
lds
popf
sbb
outsl
dec
int
insb
mov
dec
dec
test
add
mov
popf
aam
add
lock
nop
cmp
pop
mov
inc
test
xlat
test
mov
insb
mov
in
xchg
addb
add
jl
push
or
jo
addb
cmp
xor
inc
data16
mov
push
aam
sbb
push
dec
pop
xor
sar
add
aad
and
rorl
fstpt
adc
jmp
aad
sbb
dec
loopne
mov
sub
pusha
int3
fnstsw
mov
jae
or
cmp
jmp
jge
mov
mov
int
popa
and
pop
loopne
add
loope
call
and
iret
cmc
int3
cmp
push
out
add
jns
rcll
hlt
mov
movl
adc
sbb
fisubl
dec
inc
dec
cmp
mov
xorb
js
movl
fsubl
add
cltd
in
dec
pop
int3
jns
mov
outsl
cmp
mov
sub
loop
pusha
add
xchg
sbb
pop
outsb
mov
sbb
adc
hlt
or
lcall
mov
mulb
push
enter
mov
pop
and
out
loop
mov
push
adc
into
dec
je
sbb
pop
push
repnz
sub
xor
xchg
add
sbb
inc
and
sbb
mov
adc
les
sbb
jbe
add
adc
mov
aam
dec
int
test
dec
ja
stc
clc
xchg
rcr
jae
cld
sub
fcmovu
inc
repz
inc
adc
mov
cwtl
cmp
pop
mov
int
dec
pop
rclb
outsb
xlat
cmp
push
sbb
rolb
clc
loop
jbe
adc
lret
push
movsl
pop
adc
inc
cwtl
sbb
jg
inc
jo
mov
and
sub
repnz
fimuls
pop
cmp
or
dec
ss
jge
int
stc
or
testb
movsb
das
stos
mov
cmp
jmp
add
fbld
jno
nop
sub
push
lret
xchg
jno
das
inc
les
cmpsl
call
sbb
mov
push
dec
add
xlat
clc
aaa
fists
lods
movsb
cwtl
dec
mov
sbb
ss
pop
in
shll
int3
lahf
xchg
clc
push
sub
xchg
sub
dec
dec
and
pusha
cwtl
sub
or
rcll
cld
test
jmp
jns
outsl
pop
dec
cmp
dec
jns
mov
dec
push
test
or
push
dec
sbb
inc
out
divb
and
hlt
inc
adc
mov
inc
xor
lea
mov
jb
add
lds
sub
sti
out
lds
inc
dec
jne
mov
or
mov
aaa
adc
sbb
scas
mov
divps
mov
and
push
mov
lods
test
rcrb
imul
in
mov
mov
mov
out
fimull
push
mov
jl
and
cltd
xchg
or
imul
notl
mov
rcrb
mov
rolb
cmp
jl
sarb
push
jo
push
js
je
aaa
and
popa
jo
and
outsl
xchg
insb
das
push
jb
fs
loopne
sbb
imul
inc
mov
mov
int
inc
push
push
push
dec
nop
dec
jae
dec
and
dec
dec
and
imul
mov
sbb
xchg
cmp
inc
add
cmp
or
gs
xor
and
xchg
pop
cs
inc
inc
inc
enter
and
and
sbb
sbb
in
and
adc
nop
lret
sbbb
add
or
or
enter
add
xchg
xchg
xchg
mov
clc
std
push
pop
mov
clc
std
hlt
std
hlt
std
lock
jns
lret
std
in
std
in
std
and
std
call
mov
loopne
loopne
fsubr
cmp
std
xchg
fmuls
add
nop
aam
and
or
enter
lcall
in
cmpb
rclb
add
push
mov
test
std
int3
std
pop
aaa
fs
std
sar
adc
mov
movsb
repnz
std
mov
lods
lods
nop
lret
sbbb
add
movsb
mov
gs
pushf
cwtl
cwtl
and
nop
pop
push
in
nop
mov
mov
or
xor
jmp
sbb
cmp
push
scas
int
ds
pop
pop
inc
push
lods
jb
or
mov
add
adc
aaa
add
and
adc
cmp
incl
jbe
lea
mov
xacquire
and
lods
enter
jnp
lret
jbe
push
cmp
mov
adc
xchg
lret
js
jnp
and
mov
push
mov
in
xor
xor
mov
and
cmpl
mov
xor
jl
imul
int3
add
ss
cmp
mov
mov
lock
fdivl
fadd
pop
mov
nop
cmpsb
or
clc
inc
pop
fbstp
sarb
mov
insl
out
jnp
xor
popa
xor
loopne
push
imul
xor
add
or
gs
rcrl
add
popa
or
pusha
out
sahf
inc
mov
xor
nop
pop
mov
rolb
cmp
int
add
test
dec
and
dec
dec
ja
fwait
loop
int3
scas
shrl
das
test
insb
xchg
lock
loop
lock
scas
mov
push
shrl
iret
enter
xchg
js
pop
add
mov
jmp
lods
lahf
ljmp
mov
fildl
cmp
loopne
push
popl
pop
pop
xor
scas
popa
xor
pusha
in
mov
dec
ror
je,pt
push
dec
loope
mov
cmp
push
mov
jle
shlb
mov
int3
push
adcb
sbb
rcrb
mov
xor
enter
xor
lock
mov
pop
add
push
inc
jle
daa
mov
mov
adc
push
mov
xchg
xchg
mov
dec
adc
shlb
idivl
mov
adc
clc
jmp
inc
and
mov
je
or
adc
sub
fs
ret
loopne
pop
push
mov
movsl
xor
lahf
add
push
dec
push
sbb
jl
inc
mov
lock
insl
or
cmpsb
jo
rcrb
in
pop
push
enter
sbb
vpermil2pd
rcl
mov
mov
fcmovu
xlat
int
fistps
sub
fistpll
mov
mov
xchg
inc
lcall
or
mov
xor
dec
movsb
xor
scas
mov
lock
sahf
sub
imul
ficoml
dec
jae
mov
cwtl
pushf
pushf
dec
xor
dec
mov
xor
mov
adcb
dec
cmpsl
movsl
xchg
fildll
test
call
negb
test
nop
xchg
test
fs
xchg
out
fs
loopne
jb
nop
pusha
push
jb
pop
push
subb
rclb
add
and
or
pop
int
and
dec
inc
mov
and
inc
add
dec
movsb
cmp
xor
xor
movsb
cmp
xor
sbb
xchg
pop
cmp
sub
and
lret
test
pusha
and
xchg
add
sub
enter
adc
add
mov
adc
sbb
cmp
sbb
add
aad
or
lea
mov
mov
mov
inc
fisubs
lods
xor
ds
repnz
cmp
loop
or
insl
lods
or
xchg
dec
sub
add
ret
push
sub
loop
xchg
je
and
or
xchg
cmp
mov
or
adc
out
mov
sub
adc
imul
insl
ja
inc
sub
cltd
insl
ret
adcb
pop
icebp
sbb
push
or
mov
sbb
rcrb
enter
mov
inc
mov
daa
int
int
lods
mov
mov
movsb
mov
mov
mov
stos
pop
mov
add
cmp
xchg
cwtl
cwtl
addb
cmp
dec
shlb
jl
xchg
test
xor
lcall
inc
insb
dec
lcall
add
cmp
imul
fs
pop
push
push
adcb
and
dec
add
in
push
pop
pop
adc
mov
xchg
pop
mov
push
loopne
sbb
push
test
jmp
outsb
dec
fiaddl
push
fistps
roll
jp
mov
or
mov
es
push
push
nop
dec
inc
and
in
adc
sub
leave
add
sub
inc
es
xchg
add
cmp
adc
add
enter
inc
cs
lods
xchg
in
add
sbb
dec
add
pop
notl
adc
daa
popa
leave
adc
jecxz
sbb
lock
sub
loop
sub
sti
sub
cwtl
or
inc
cmp
push
jo
jecxz
cmp
adcb
sbb
rorl
lock
jne
xchg
push
sbb
mov
lahf
lock
std
int3
sub
mov
or
sub
add
xor
push
adc
ja
push
pop
adc
xorb
addr16
pop
popa
movsl
in
iret
dec
jns
leave
fisttpll
aaa
sub
ficomps
movsl
and
shlb
rorb
xor
lea
inc
data16
jge
dec
lods
mov
pusha
movsb
imul
mov
data16
inc
leave
aaa
bound
mov
call
in
pop
lea
scas
sub
xchg
outsl
sub
nop
pop
adc
push
pusha
pushf
out
test
xchg
enter
js
js
add
nop
je
pop
add
mov
in
cmp
and
sub
and
add
mov
sub
push
stc
xchg
pop
pop
xorb
imul
mov
mov
les
dec
fistl
data16
push
jno
dec
in
nop
dec
dec
dec
dec
and
sbb
inc
inc
shlb
and
cmp
cmpsl
add
and
aad
rcrb
mov
sub
sub
enter
push
and
js
inc
ds
sbb
pusha
xor
dec
rcll
mov
movsb
mov
adc
enter
mov
add
outsl
dec
or
push
leave
mov
inc
mov
clc
and
pop
sbb
mov
add
push
lock
call
in
enter
and
add
in
aas
sbb
popf
pop
add
fcomps
sbb
in
popf
fcoms
or
mov
in
testl
cwtl
push
loopne
jo
addl
ret
xchg
shrb
pop
push
test
int3
int3
stc
imul
nop
outsl
add
xchg
xchg
out
sarb
mov
into
movsl
cmp
repz
popa
mov
adc
or
shll
add
in
push
leave
and
and
addb
test
pusha
and
bound
xchg
shlb
and
loopne
dec
push
leave
shlb
and
nop
sbb
inc
and
and
jb
mov
and
sbb
inc
and
and
andb
fmull
adc
sub
pop
xor
xchg
lods
push
bswap
mov
and
push
movsb
sub
inc
dec
inc
mov
xor
inc
cmp
sbb
fwait
lods
push
sub
adc
adc
dec
push
leave
sub
mov
or
daa
mov
sub
sub
push
and
adc
xor
pop
jb
xor
cmp
jnp
loopne
mov
sub
mov
push
and
and
leave
and
and
andb
mov
xchg
or
and
xchg
adc
sar
and
mov
xchg
push
and
mov
nop
sbb
shlb
xor
inc
sbb
addl
add
mov
nop
and
addl
or
pop
xorl
leave
xchg
sbb
and
mov
push
and
and
pusha
fiadds
sub
add
cltd
adc
and
inc
push
push
scas
sub
jns
mov
ficoms
jo
lret
js
call
insb
fcoms
je
add
push
and
enter
insb
std
pop
insb
iret
push
aam
xchg
loopne
xchg
sub
fs
jae
pusha
pusha
and
pop
mov
dec
push
push
push
ret
pusha
mov
dec
xor
setle
dec
dec
add
jb
push
cmp
xor
xchg
cmp
xor
sbbb
sub
jb
nop
sub
and
enter
and
sbb
add
adc
in
and
adc
or
mov
inc
inc
or
enter
jmp
sbb
repnz
std
xchg
pop
mov
cld
xchg
push
clc
cld
cs
sub
sbb
fbld
lock
pop
push
imul
cld
and
push
cmp
inc
or
sub
cld
jae
cld
loopne
jl
push
jns
cld
and
xchg
sbb
aam
inc
pop
and
jb
jbe
mov
enter
sbb
or
les
shlb
aaa
in
sarb
and
outsb
cld
cld
xor
push
mov
lods
test
daa
test
cld
jnp
sbb
pop
movsb
and
in
cld
cld
gs
cmpsl
adc
add
cld
xchg
iret
dec
ds
cld
nop
cld
mov
in
in
mov
mov
mov
leave
adc
and
xchg
inc
pop
nop
outsl
mov
xchg
mov
mov
dec
test
dec
rorb
inc
sar
add
sub
je
sbb
cld
sub
cld
cld
pop
add
and
jno
inc
lea
nop
fs
cld
xlat
dec
push
jns
pusha
sbb
in
xchg
test
into
push
pop
mov
pop
out
faddl
ja
sbb
aad
data16
xor
push
pop
sahf
insl
cmpsl
sub
push
or
add
or
or
pop
fcompl
dec
addr16
out
decl
pop
jne
shlb
insb
ret
xchg
or
mov
dec
mov
dec
xchg
pop
sub
xchg
mov
or
es
les
addr16
push
xchg
sbb
in
aaa
or
shlb
add
sub
fdivs
pop
or
and
sbbb
inc
jb
dec
add
pusha
jns,pn
pop
andb
mov
and
rcll
sub
mov
push
dec
out
pop
clc
punpcklwd
hlt
push
lea
mov
mov
push
ss
outsl
test
loop
pop
cwtl
flds
xchg
lea
jne
xchg
pop
mov
test
mov
sbb
fstps
imull
and
test
mov
xor
dec
mov
movsb
mov
and
sbb
jne
dec
repnz
sti
hlt
sti
hlt
sti
lock
dec
ss
sbb
in
sti
mov
and
in
in
push
add
loopne
outsl
dec
movsl
nop
push
sti
sti
dec
inc
mov
fdivrs
lcall
pop
add
dec
int3
int3
push
enter
sbb
jecxz
les
or
pop
fisubl
fisttps
mov
and
xorb
jns
lods
sbb
push
je
popf
or
ss
iret
inc
seto
jmp
and
dec
add
xchg
jne
mov
xor
cmp
jecxz
and
push
xchg
inc
jg
add
jo
shlb
test
call
jg
mov
outsb
pop
mov
add
outsl
sbb
cmp
xlat
sub
pop
repnz
xchg
sub
shrb
das
jns
dec
daa
mov
pusha
and
call
inc
and
leave
dec
dec
jb
inc
and
and
and
and
xchg
dec
pop
add
adc
pusha
iret
nop
mov
jbe
sbb
mov
dec
pop
add
loopne
jb
push
and
and
cmp
xor
cmp
and
and
and
das
cmp
in
add
shlb
nop
sbb
and
and
and
and
xchg
sub
lods
notl
add
fst
dec
and
add
mov
xchg
adc
das
andb
fucomp
push
jle
dec
mov
rorl
xchg
int
call
orl
repz
push
decb
or
enter
add
ret
dec
lock
adc
pop
or
or
add
push
add
not
dec
testl
mov
fs
xor
dec
test
pop
jb
dec
mov
push
dec
and
cmp
or
mov
enter
or
adc
xor
sbb
mov
jl
repnz
and
mov
insl
insl
pop
or
adc
sti
lds
sarb
les
filds
cwtl
test
pusha
mov
fistl
addb
jnp
lock
or
jno
sub
adc
jmp
pop
pop
add
dec
cli
cltd
pop
hlt
loop
arpl
es
in
or
stc
emms
or
and
push
mov
cmc
cmp
nop
jb
shlb
or
dec
push
cmpl
test
rcll
push
in
je
test
push
cmp
test
mov
mov
add
int3
push
mov
loope
lret
push
mov
add
mov
add
cwtl
or
sbb
inc
add
push
adc
bound
add
nop
inc
in
js
inc
push
jae
stos
and
inc
xor
movsl
cltd
add
test
fdivl
movsl
loop
popf
and
call
mov
enter
dec
je
add
mov
daa
inc
ret
roll
xchg
pop
push
mov
loopne
int
adc
inc
jmp
cmpsl
push
adc
cmpsb
in
clc
xchg
mov
fisttpll
data16
mov
and
adc
leave
rclb
ret
fldl
push
pop
mov
leave
mov
lahf
cli
dec
dec
repnz
mov
inc
and
sub
mov
dec
dec
repnz
inc
and
and
sub
xchg
push
cmp
and
pop
mov
cld
cld
arpl
and
cmp
dec
daa
mov
or
sub
daa
mov
sub
sub
cmp
xchg
daa
mov
mov
mov
and
test
xchg
mov
push
leave
daa
mov
and
xchg
inc
and
jb
push
leave
sub
sub
pusha
dec
cs
pop
ret
fwait
xor
xchg
xchg
pop
daa
sub
sub
and
and
and
mov
xchg
sbb
sbb
cmp
fldenv
andb
mov
and
mov
leave
mov
daa
mov
jb
sub
and
mov
jb
sbb
pusha
daa
add
mov
and
add
cs
add
aam
cmpsl
dec
jo
mov
and
and
daa
mov
push
leave
nop
es
inc
sbb
pop
jecxz
sub
xor
push
pop
push
mov
mov
xchg
lret
inc
push
mov
ret
or
sub
jb
push
pop
mov
dec
pop
xchg
inc
sub
xchg
leave
and
sub
andb
sbbl
test
daa
mov
sub
sub
jns
push
daa
sub
leave
and
xchg
sub
andb
mov
nop
xchg
dec
adc
repnz
mov
and
and
and
and
mov
movsb
or
test
nop
subb
hlt
mov
jmp
and
leave
and
and
inc
and
and
and
and
in
movsl
and
lret
and
and
and
sbb
lea
xchg
stos
icebp
hlt
push
scas
popa
les
test
loope
hlt
adc
mov
cmp
jg
sbb
cltd
dec
and
and
inc
add
leave
xchg
sbb
mov
ret
and
sbb
inc
jb
and
sbb
nop
and
rclb
call
mov
mov
mov
leave
lds
sbb
inc
inc
and
add
and
and
xor
movsb
mov
mov
lret
sbbb
sub
and
xorb
sub
and
shrb
dec
and
and
shll
add
in
and
push
and
and
jg
js
xchg
dec
sub
inc
dec
push
in
inc
dec
dec
leave
gs
cs
cmp
inc
popa
and
push
leave
and
and
and
and
inc
jb
and
and
sarb
add
jo
inc
pop
adc
and
sbb
popa
lods
and
and
and
and
and
and
push
leave
and
call
dec
in
pop
or
in
or
fdivr
fdivr
and
lods
loopne
loopne
dec
push
pop
jb
cld
aam
sar
dec
cmpsb
push
jo
loope
sbb
inc
repnz
andb
and
in
and
and
nop
punpckldq
in
mov
lods
lods
dec
test
pshufw
fcomp
cld
gs
push
cs
movsb
mov
enter
fs
inc
jb
mov
and
xchg
and
and
and
js
pop
push
in
je
or
sbbb
insb
mov
jo
xor
xchg
add
pop
add
cld
or
xchg
gs
jle
push
push
dec
jecxz
cmp
dec
decl
add
nop
inc
inc
inc
inc
enter
cmp
cmp
push
or
xor
xor
sbb
xchg
xor
cld
test
cld
cld
cld
pop
inc
pop
sub
pop
jb
sub
xor
nop
lret
adcb
inc
add
or
gs
lret
sub
sub
mov
add
or
xchg
add
jb
xchg
and
and
shlb
and
loopne
pusha
leave
xchg
sbb
and
mov
push
and
dec
inc
pop
xchg
rorb
pusha
add
jb
sub
sti
enter
cmc
xchg
sbb
or
das
mov
or
cmp
and
orl
insl
lods
aad
gs
ds
inc
movsb
movsb
add
pushf
in
and
nop
out
dec
or
in
cs
jb
nop
xchg
xchg
loopne
dec
push
imul
push
mov
orb
cmp
or
addb
cmp
ret
sbbb
je
insl
mov
shlb
inc
loop
push
movsl
sub
rcrb
jecxz
shlb
pop
add
or
mov
push
or
dec
dec
nop
lsl
jecxz
dec
cmp
push
sbb
inc
pop
sahf
inc
push
sbb
cmp
push
in
cmpb
xor
pop
je
stc
mov
nop
outsl
leave
sti
jecxz
sub
rcrl
and
and
and
mov
jp
pop
inc
sbb
mov
clc
lcall
or
daa
or
or
add
jb
sbb
js
inc
mov
add
cli
xchg
int
andl
lret
fcompl
jle
cli
hlt
cli
das
pop
jns
lock
lock
in
cli
in
cli
mov
cli
sbb
jecxz
sbb
cli
outsl
test
fbstp
push
dec
sub
nop
fcomps
cwtl
adc
dec
ss
dec
adc
sar
lret
lret
aam
clc
aam
mov
aam
ror
lret
add
cli
sub
pop
jns
cli
sar
cli
mov
and
mov
test
xchg
mov
xchg
test
xchg
dec
mov
bound
and
rcrb
push
cwtl
and
push
xchg
nop
nop
add
nop
mov
das
int3
cli
adc
cli
int3
nop
lret
xorb
test
dec
jae
test
enter
adc
sbb
enter
cld
decl
pop
pushf
movsb
xor
xor
std
es
push
mov
or
and
adc
or
inc
loop
inc
fnstcw
pop
and
jmp
dec
aas
out
inc
nop
scas
and
mov
sub
shll
movsl
or
hlt
es
data16
xor
jne
sbb
and
orb
mov
adc
mov
and
and
and
and
adc
mov
test
leave
dec
dec
jb
pusha
shlb
and
and
leave
bound
ja
push
or
jb
loopne
and
inc
and
and
mov
mov
and
pusha
add
leave
add
and
andb
dec
and
mov
inc
and
and
sub
test
in
and
and
movsl
shll
dec
jb
mov
nop
sbb
inc
daa
inc
and
in
and
fidivrl
mov
jmp
int
push
or
and
xchg
xchg
inc
jb
jmp
and
sbb
sub
and
xchg
nop
and
and
repnz
cs
and
inc
cs
and
in
add
and
dec
push
leave
and
pusha
and
and
cs
in
iret
and
popa
cmp
mov
and
add
mov
and
inc
xchg
nop
or
and
inc
jb
pusha
and
jmp
sub
and
mov
sbb
mov
add
loopne
or
nop
and
xchg
inc
and
subb
mov
xchg
and
and
pusha
and
adc
cmp
in
loopne
and
rorb
and
and
jb
inc
and
and
cmp
test
dec
inc
es
sbb
loopne
pusha
addb
mov
shlb
nop
sbb
shlb
daa
dec
cmpsl
nop
dec
inc
jle
inc
jb
or
and
or
adc
insl
in
sbb
rolb
jmp
jg
jmp
sub
xchg
ss
inc
xor
add
xchg
inc
xchg
and
and
shlb
add
mov
mov
leave
pusha
xchg
pop
repnz
into
je
sbb
ret
iret
mov
pop
jbe
insl
insb
imul
outsb
xor
outsl
outsb
jo
xor
outsb
ss
cltd
stc
bound
bound
xor
push
aaa
or
push
mov
arpl
push
insl
push
push
imul
xor
imul
or
jo
imul
xor
outsb
dec
adc
imul
xor
mov
add
or
js
and
jb
xlat
adc
sbb
enter
inc
sbb
enter
push
dec
test
xchg
repnz
add
repnz
insb
cmp
sbb
inc
pop
push
lock
pop
into
wrmsr
pop
add
ret
dec
inc
out
adc
insb
jo
pushf
pushf
pushf
pushf
js
orb
nop
xchg
cwtl
pushf
pushf
pushf
pushf
pushf
mov
adc
add
pop
inc
jp
lea
pop
push
nop
clc
or
pop
imul
popa
iret
pop
pop
mov
adc
push
xor
or
lea
daa
dec
lods
js
addr16
mov
or
sub
jl
inc
js
cmovns
and
add
inc
mov
fdivr
insb
mov
mov
sahf
fcoml
mov
lcall
lea
pmulhuw
and
enter
iret
cwtl
or
in
and
int3
dec
or
fmuls
repnz
jo
sarb
leave
repz
xor
or
in
mov
sahf
xchg
cmp
adc
aam
adc
sub
dec
aam
mov
pop
and
pushf
aaa
frstor
mov
xor
test
mov
xchg
add
dec
leave
loope
xchg
mov
in
out
or
adc
xor
js
mov
lea
mov
int
sbb
add
imul
repnz
sub
and
xchg
stos
andb
mov
shlb
cltd
sub
mov
mov
add
mov
test
lcall
or
je
cld
add
aad
mov
iret
orb
mov
sub
or
dec
sub
sub
movsl
sbb
xor
dec
dec
sub
aad
rclb
add
mov
aas
out
xchg
inc
subb
mov
ss
mov
arpl
out
int3
pushl
ret
pushl
inc
xchg
pushf
in
and
pop
jb
pushf
fistpll
daa
and
pop
dec
outsb
outsl
cli
xor
clc
pop
nop
sbbb
jo
je
xor
and
in
andb
add
mov
in
mov
repz
mov
or
push
add
adc
sbb
xchg
ret
dec
dec
pusha
mov
cmp
gs
popa
js
lock
cmpsb
scas
arpl
push
mov
jae
loopne
and
in
das
and
and
and
inc
dec
push
fdivrl
lods
or
mov
adc
or
movsb
sub
nop
dec
add
inc
call
mov
daa
aaa
jg
and
sbb
add
xchg
nop
or
xor
leave
int3
xchg
mov
adc
hlt
inc
jns
lea
adc
and
addr16
int
orl
mov
movsl
pusha
and
lea
pop
and
add
rcrl
scas
pop
sbb
in
mov
ret
mov
pop
jbe
ss
add
rcrl
fcoml
inc
jb
out
pusha
push
push
adc
nop
fcomp
scas
cmp
lds
enter
gs
ret
leave
and
inc
adc
xchg
xchg
pushf
and
pusha
and
dec
push
inc
jmp
xor
dec
in
add
jecxz
mov
cld
lea
cmc
faddl
add
loopne
add
outsb
pop
enter
int3
int3
les
and
rolb
enter
or
adc
xchg
jg
cmpsl
xchg
mov
xchg
dec
dec
xor
add
xor
adc
pop
popa
aad
in
adc
add
daa
cmp
pusha
ret
cmp
and
xchg
mov
int3
xchg
cld
outsb
mov
xchg
mov
sub
add
imul
jmp
sub
sub
xchg
jno
dec
rcrb
push
or
push
mov
xchg
cmpsl
test
js
push
inc
daa
jo
andl
mov
cmp
pop
and
dec
sbb
xorb
inc
enter
call
rcl
xchg
push
add
sub
fisubrs
mov
fdivrl
and
xchg
and
nop
sub
inc
xor
jecxz
and
int
pop
mov
and
and
pop
jmp
sbb
inc
and
and
cs
add
and
inc
xchg
cmpsb
imul
add
lea
xchg
out
addb
mov
sub
nop
sbb
inc
daa
mov
sbb
daa
gs
add
push
or
mov
xchg
dec
push
loopne
jo
and
repnz
daa
sub
and
nop
sbb
add
mov
shr
test
and
pusha
and
mov
rclb
sub
mov
sub
xor
xchg
sub
xor
dec
shl
xchg
sub
sub
add
mov
pop
out
loopne
hlt
lret
mov
clc
decb
leave
cld
cld
decb
xchg
lods
sub
and
fs
sub
add
jo
cmp
mov
xchg
pop
sub
movsb
jb
or
shlb
cs
aam
ret
add
leave
mov
and
add
inc
and
gs
lret
movsb
add
ret
test
mov
add
and
imul
push
jb
and
push
mov
test
xchg
add
mov
adc
and
addb
jns
and
and
jb
push
and
and
push
and
xchg
shlb
xor
lret
push
pop
pop
pop
xor
jl
and
and
sbb
and
and
rolb
inc
loope
and
or
in
sub
sub
and
add
in
push
mov
and
and
and
movsb
loop
and
rolb
es
loopne
push
jo
mov
pop
mov
xchg
std
clc
std
cld
std
cld
std
add
jns
shlb
push
sti
and
inc
and
xchg
addr16
sbb
and
daa
add
mov
enter
lret
enter
dec
mov
dec
stos
shlb
and
pusha
xchg
rolb
andl
pusha
or
and
sarb
adcl
add
nop
xchg
xchg
cwtl
cwtl
dec
gs
cs
pushf
mov
add
and
leave
and
shlb
adc
and
sbb
imul
test
inc
inc
fs
nop
lret
fs
sub
insb
lods
leave
and
push
xchg
and
dec
push
and
xchg
sbb
pusha
and
pusha
sbb
nop
sbb
es
push
mov
or
xchg
add
daa
mov
popl
lret
and
inc
cmpb
addb
rolb
cmpb
sbb
xor
pusha
dec
push
leave
and
and
lds
pop
xchg
pop
test
and
lods
mov
clc
cld
clc
cld
cld
cld
xor
xchg
xchg
cld
cld
fistpll
and
in
andb
mov
mov
orb
fisubrl
xchg
inc
and
mov
and
push
pop
and
es
cs
mov
mov
xchg
add
sub
and
pushf
jo
jno
pop
jne
mov
and
add
and
andb
nop
and
rclb
lea
in
and
xor
sbbb
leave
mov
pop
arpl
pusha
inc
cmp
sbb
mov
ss
cld
cld
add
inc
mov
inc
mov
jb
push
pusha
and
daa
sub
cld
cld
jb
gs
cld
cld
cld
dec
push
mov
enter
cld
cld
sbb
mov
mov
or
mov
and
and
in
and
and
leave
and
and
daa
and
and
sti
dec
sub
cmpsl
sti
sti
sti
add
sbb
xchg
pop
dec
ret
sbb
cmpb
and
and
pusha
xchg
push
and
orb
and
movsl
nop
mov
mov
mov
mov
add
movsb
inc
sbbl
lea
pop
sub
and
in
and
and
push
leave
and
and
and
adcb
and
sbb
mov
xchg
and
and
and
mov
nop
cmp
and
add
and
jb
and
and
add
inc
and
xchg
inc
jb
and
and
loopne
nop
sbb
loopne
add
stc
rcll
js
and
pop
and
mov
rorb
or
add
leave
and
inc
and
and
and
and
and
in
and
and
push
leave
and
and
in
sbb
in
rolb
jns
das
int3
sbb
and
add
and
sbb
and
xchg
and
nop
cmp
and
and
cmp
in
andb
add
loopne
or
sbb
and
and
or
addl
loope
xchg
js
cli
js
je
inc
add
inc
cs
shrl
pop
nop
outsl
push
stc
xchg
sbb
cli
dec
pop
add
loopne
lock
pop
lcall
push
push
push
in
adcb
dec
and
dec
inc
and
or
ret
and
cmp
nop
dec
push
in
cmp
cmpb
sbbb
sub
jns
and
sub
and
and
and
push
add
outsl
adc
repnz
mov
adc
nop
push
iret
or
and
xchg
sbb
cli
stc
add
inc
in
add
andl
sbb
test
ja
xchg
xchg
add
sahf
sub
sbb
push
add
mov
stc
stc
and
lcall
jo
pop
or
cld
stc
push
loopne
addr16
add
push
orl
ficoms
dec
sarb
push
add
loopne
insb
dec
stos
or
add
xchg
out
pop
lret
les
xor
sarb
push
stc
or
mov
pop
rorl
pop
xchg
pop
mov
sub
nop
pop
add
std
test
jecxz
outsb
and
pop
jb
nop
adcb
pushf
cwtl
gs
add
or
nop
nop
mov
jo
xchg
mov
and
mov
rcr
add
loopne
addb
stc
stc
and
xchg
outsb
stc
arpl
sub
cs
shrl
xchg
xor
fstpl
push
loopne
xchg
and
adc
ss
popa
leave
stc
iret
push
jo
lret
lods
hlt
fstl
sub
stc
in
lret
stc
stc
sbb
dec
dec
sub
pop
fcoms
mov
and
cmp
push
in
cmp
cmp
nop
lret
xorb
pop
jo
test
mov
and
dec
mov
stc
stc
pusha
inc
mov
sbb
out
movsb
repnz
add
push
xor
fisttpll
adc
mov
dec
pushf
movb
sbb
dec
cmc
adc
mov
sbb
dec
sub
loopne
in
and
inc
int3
mov
mov
or
gs
add
clc
fcoml
clc
clc
sbb
roll
orl
lock
mov
cs
sub
sbb
and
leave
rorl
lock
lock
dec
in
mov
pop
sbb
shlb
rclb
mov
sahf
orl
clc
and
fdivl
push
shrb
and
cmp
ficompl
das
and
pop
aam
or
dec
mov
add
xchg
add
and
in
add
or
xchg
xchg
mov
int3
mov
mov
enter
xchg
add
les
inc
xor
xchg
sub
push
sub
add
test
mov
mov
mov
dec
enter
mov
or
gs
lods
movsb
movsb
add
adc
or
sub
and
pushf
mov
js
or
cwtl
cs
cs
xchg
out
push
les
and
nop
cwtl
and
push
xor
adc
mov
pop
push
in
mov
leave
nop
test
or
js
in
mov
dec
leave
nop
jl
nop
je
mov
fs
inc
jo
js
in
and
insb
insb
fs
nop
pop
push
fs
add
sub
or
pop
sub
cltd
in
pop
test
and
cmp
mov
jb
nop
lret
push
dec
dec
dec
add
and
dec
inc
xchg
xchg
call
inc
sub
inc
xchg
cmp
xchg
or
movsb
cmp
mov
inc
xchg
in
mov
cs
xor
sub
or
gs
xor
xchg
sub
cmpsb
sub
and
or
inc
mov
dec
dec
out
gs
cmp
lcall
or
sbb
daa
int3
stc
mov
xchg
jne
stc
test
add
xchg
out
out
cmp
push
lock
add
out
fstpl
or
std
pop
movsb
xor
jae
incb
pusha
or
push
cltd
nop
push
aad
sub
xchg
or
cs
nop
xor
xor
daa
lods
dec
or
pushf
mov
clc
call
aaa
dec
inc
inc
lea
cmp
fildll
mov
test
and
pushl
pop
iret
aaa
push
adc
xor
dec
aas
push
xchg
mov
wbinvd
mov
mov
arpl
mov
sbb
dec
inc
dec
pusha
or
jmp
ret
mov
or
pushf
cmp
sbb
mov
call
test
adc
add
icebp
leave
and
pop
mov
inc
pusha
and
pusha
imul
movsb
inc
sub
push
inc
add
roll
jge
daa
sbb
pusha
es
and
pushf
sub
and
or
daa
mov
push
push
lahf
lcall
add
and
or
scas
enter
mov
lahf
mov
ret
stos
push
lret
fwait
rclb
sub
sbb
and
push
adc
cli
mov
ret
or
lods
stos
or
pop
ret
or
in
and
and
mov
sbb
insb
ljmp
mov
cmp
adc
fs
mov
or
popa
sbb
cmp
pop
sbb
jb
movb
adcb
fs
scas
orb
mov
sbb
xchg
and
sub
xor
roll
adc
and
jb
push
and
and
and
mov
xchg
loopne
rolb
jb
movsb
or
adc
mov
jo
push
popa
pop
nop
sahf
cmpsl
or
xchg
and
push
jmp
ret
inc
xchg
sub
call
or
inc
jb
add
and
jno
in
and
shlb
push
adc
xchg
lret
jo
pop
and
xor
data16
aaa
mov
arpl
mov
push
jl
cmp
and
adc
mov
push
and
movsl
inc
dec
push
and
roll
nop
and
scas
repnz
in
cmpl
js
jl
dec
es
pop
push
in
push
mov
pop
xor
adcl
fwait
dec
or
shrl
nop
and
add
xchg
jnp
xchg
sbb
xchg
mov
insl
jg
lea
inc
xchg
jno
and
mov
jge
dec
inc
stos
jne
adc
movl
mov
cwtl
sbb
loopne
nop
push
jno
lcall
xor
subb
jb
push
leave
and
sarb
xchg
inc
and
inc
xchg
push
and
lcall
sub
mov
rorl
and
mov
lret
sbb
sub
xchg
icebp
or
imul
inc
adc
push
sbb
cmp
shlb
inc
mov
loopne
jb
xchg
add
push
xchg
pop
dec
or
out
add
pop
jnp
jno
iret
sbbb
gs
mov
in
bound
imul
movsl
mov
cmc
test
dec
push
mov
xchg
int3
and
divb
loop
fnstcw
nop
inc
push
cmp
inc
push
cmp
js
orb
in
test
mov
nop
inc
push
sbb
fs
mov
mov
dec
xchg
fdivl
mov
mov
jnp
enter
dec
add
imul
jle
pop
cwtl
insb
jp
fidivl
fisttps
xor
push
sbb
ja
jnp
inc
loopne
inc
aas
lock
xor
js
clc
adc
movsb
bound
jo
push
mov
out
add
aaa
mov
lock
inc
add
mov
dec
cwtl
lods
clc
dec
repnz
andb
inc
scas
cmp
cmp
mov
js
enter
rcl
int
cmp
aaa
leave
adcb
jl,pt
aam
inc
mov
int
rclb
cmovae
add
test
jl
je
sahf
sbb
divb
lock
push
dec
or
inc
int
pushf
lods
pushw
out
inc
add
dec
filds
and
add
inc
imul
mov
pop
mov
les
mov
dec
ds
aam
rol
push
sbb
pop
aad
scas
aam
test
dec
loopne
les
ja
shrl
dec
scas
xor
jo
inc
iret
inc
clc
and
dec
mov
push
stc
sbb
les
das
push
mov
je
add
adc
loopne
fists
jl
inc
int
xor
ja
add
push
push
adc
mov
addl
inc
add
stos
or
data16
mov
pusha
stc
fnstenv
and
adc
fisttps
data16
repnz
mov
adc
call
ds
push
mov
call
or
es
repnz
ss
stc
addr16
out
pop
xor
mov
ss
popa
dec
adc
dec
mov
mov
mov
cmpb
imul
call
jl
out
mulb
inc
pop
and
call
cmp
xor
and
cld
in
idiv
xchg
or
into
pushf
nop
test
xchg
or
in
inc
jns
filds
mov
or
mov
aas
out
mov
mov
xchg
mulb
push
inc
mov
inc
fsubs
sbb
mov
mov
adc
lock
sbb
mov
mov
sub
xchg
sub
or
push
sub
test
pushl
leave
or
bound
clc
pushl
repz
mov
add
es
aam
mov
add
nop
dec
push
mov
and
xchg
out
inc
cmp
add
mov
add
aaa
mov
mov
mov
loope
enter
mov
clc
cmp
scas
sbb
fstpt
inc
in
mov
lahf
add
je
insb
call
pop
call
dec
push
je
push
mov
call
aad
xor
jae
aaa
xor
sbb
lcall
inc
xor
and
sub
outsl
nop
repz
lret
pop
pop
xchg
and
test
or
loopne
dec
fstpt
arpl
adc
pusha
mov
shl
orb
push
stc
push
mov
sub
pop
pop
or
adc
out
in
mov
es
jl
sub
nop
or
xchg
popa
jle
adc
mov
sbb
xchg
and
test
imul
stos
jae
pop
xor
pushf
add
inc
xlat
imul
mov
push
xchg
sbb
test
iret
add
testl
adc
mov
mull
jb
fs
lcall
test
xor
mov
addr16
into
movsl
xchg
out
dec
lock
sbb
daa
push
adc
and
jo
pop
mov
test
rcl
jne
jmp
les
mov
push
das
or
push
pop
sahf
ja
cmpsl
stc
sub
jnp
test
sbb
jb
adc
idivb
repnz
push
adc
adc
repz
xor
hlt
loope
cmp
push
lcall
cld
sbb
imul
clc
and
dec
aad
ja
data16
pop
cwtl
popa
add
in
sti
xchg
add
pop
sti
cmp
cmc
dec
repnz
xor
out
sbb
push
push
aad
dec
fnstenv
xchg
fldl
and
or
or
and
mov
das
xchg
mov
fsubrs
mov
xor
inc
or
jp
addr16
add
repz
faddl
push
pop
shl
sub
scas
movsb
repnz
or
ds
mov
sbb
cld
enter
sub
into
imulb
xchg
jb
xchg
xor
push
sbb
pop
push
xor
pop
add
mov
nop
xchg
sbb
enter
and
mov
fdecstp
dec
xor
jl
ds
pop
ljmp
push
stc
mov
hlt
push
cmp
std
cld
jne
mov
xor
add
inc
loopne
rcrb
call
sbb
add
mov
xchg
sbb
mov
adc
xor
adc
dec
adc
in
lock
or
filds
sbb
test
push
sbb
ret
cltd
movsl
push
or
jge
aaa
leave
push
mov
fdivrs
shlb
hlt
fisubl
cltd
orb
mov
mov
iret
jne
loop
cmp
push
and
mov
or
cltd
imul
dec
imul
add
comiss
pop
sahf
sbbb
xchg
mov
div
mov
sub
add
xor
mov
js
test
aaa
mov
dec
test
sarl
mov
dec
sbb
sub
pushf
mov
inc
dec
push
inc
push
push
inc
add
lret
adc
mov
faddl
dec
cli
cwtl
imul
pop
adc
adc
pop
fnstcw
xchg
subl
xlat
xchg
sbb
jle
fisttpll
dec
pop
jno
cld
repz
test
xlat
stc
adc
ret
pop
dec
popa
imul
adc
inc
adc
and
cmp
es
mov
pavgb
test
arpl
mov
in
psubq
adc
pop
push
pop
xor
and
add
or
lds
fisubrs
or
bound
mov
aaa
xor
mov
add
mov
adc
cs
dec
ja
adc
sbb
and
jb
inc
cmp
pop
mov
cmp
in
test
xchg
aam
mov
inc
pop
in
pop
aas
pusha
in
mov
cs
mov
mov
and
cs
cwtl
mov
and
shlb
mov
pop
leave
inc
repnz
adc
jb
pop
and
inc
and
leave
inc
pusha
addb
pop
mov
leave
loopne
add
add
inc
xor
leave
inc
pop
and
rorb
pop
and
inc
repnz
xchg
pop
leave
loopne
push
adc
jns
dec
and
orb
inc
jb
push
or
or
sbb
sbb
push
and
cmp
fsubs
lret
xor
dec
enter
enter
fcomp
fxch
loopne
jecxz
in
lea
cli
pop
lret
rclb
inc
xchg
jb
mov
pop
and
loopne
out
add
and
ds
mov
dec
jmp
add
sahf
pop
add
push
adc
das
add
pop
dec
add
push
lock
andb
cmp
dec
jnp
test
add
cmp
jb
aas
sahf
pop
es
xlat
incb
js
inc
addb
nop
cwtl
out
sahf
out
test
mov
sahf
enter
call
jns
add
adc
repz
repz
xor
inc
iret
repz
dec
push
pop
pusha
push
cmp
orb
repz
test
enter
leave
enter
push
leave
enter
loopne
sub
repnz
sbbl
cmp
pop
shlb
cltd
mov
sarb
mov
minps
or
xchg
mov
sbb
push
daa
pop
iret
out
loope
push
adc
adc
adc
movb
adc
cmp
out
dec
pop
push
sahf
out
mov
shl
iret
repz
lock
and
inc
jnp
in
cmp
call
shr
fcmovne
hlt
sub
push
add
adcl
sbb
mov
nop
fsubrl
je
and
pusha
sub
jl
cmpsb
insb
push
sub
xor
inc
lds
push
cs
dec
orb
imul
jg
and
fsubrp
out
cmpsl
push
adc
and
push
sbb
in
cmp
add
pop
xor
pop
into
cmp
push
push
call
mov
nop
pop
push
mov
incl
cmpsb
imul
incl
fmuls
call
out
clc
cmpsb
lret
adc
mov
cmp
dec
push
add
or
out
sahf
js
nop
push
adc
sahf
out
mov
imul
and
sbb
jae
sub
sbb
push
adc
cmp
repz
sbb
rolb
adc
sahf
cmpsl
stc
cmp
sbb
pop
sub
jns
out
inc
push
push
sbb
out
jl
fistps
nop
push
add
push
adc
loop
cmp
loopne
hlt
or
repz
fwait
cmpsl
mov
add
cmp
dec
rolb
jns
out
push
sbbb
xor
dec
mov
out
sahf
mov
mov
mov
jns
hlt
out
call
sub
loopne
loopne
es
add
and
outsb
jg
add
out
mov
or
pop
punpckhdq
pop
cmp
shll
add
fsubrs
or
adcb
sbb
mov
ret
or
ret
andl
sbb
inc
mov
pop
jb
popf
add
ja
inc
ret
cli
cli
xchg
shl
cli
in
lock
add
int
sar
cmc
out
shrl
pushl
repnz
stc
mov
cmc
cmc
pusha
push
cli
jmp
add
dec
mov
mov
push
lock
incl
movsb
clc
mov
outsb
out
cli
add
cmc
mov
loopne
scas
cld
adc
aad
and
lods
add
in
imul
add
xchg
push
lret
cld
cmc
cli
add
lock
enter
inc
por
jg
add
aad
fidivrl
hlt
aad
add
push
pop
push
jl
mov
push
mov
aad
dec
int
daa
pop
stc
out
add
cli
xorb
jg
pop
cmpsb
stc
pop
xlat
inc
mov
adc
sub
cltd
fwait
movsl
sub
push
shrb
outsb
mov
popf
mov
mov
ds
rorl
push
cmovne
mov
std
cld
repz
add
mov
add
mov
jg
or
incb
xchg
jp
inc
mov
stc
out
pop
out
call
cli
rolb
mov
lock
repz
mov
and
ljmp
add
jg
stos
cld
ja
cld
push
nop
out
nop
add
aam
push
mov
cld
repz
add
and
pop
lock
add
and
mov
jne
add
add
cmp
add
data16
add
stc
out
mov
push
mov
mov
negl
das
add
mov
xor
movsb
pop
mov
cli
lcall
mov
fisubrl
cs
jg
scas
out
out
add
pusha
push
lods
fsub
add
repz
aas
xchg
cli
add
lods
add
ljmp
mov
int3
add
inc
loopne
fcomi
add
push
mov
jle
or
jmp
fildl
loope
xor
add
sbb
jo
xlat
sub
mov
pop
sahf
mov
lock
imul
rorb
sahf
mov
stc
sarb
push
addb
xchg
add
add
cmp
add
add
iret
mov
test
jo
into
fmull
sub
push
xor
xchg
jo
add
mov
adc
jl
iret
aas
ljmp
mov
out
sub
lods
fidivl
add
fisttpll
stos
cld
repz
mov
aas
cld
push
dec
fimuls
ror
sbb
jnp
out
iret
leave
fxch
add
mov
sarl
dec
popa
add
inc
or
shll
mov
jo
nop
add
cmc
jnp
push
popa
add
fbld
mov
fistpll
cmp
imul
mov
test
rcr
shrb
pop
sub
push
and
inc
jg
fsubp
imul
and
iret
imul
loopne
cld
or
iret
jnp
cmpsl
sbb
cmp
pop
xor
out
pop
push
inc
dec
pop
pusha
out
sahf
out
jo
adcb
push
mov
fiadds
add
dec
js
das
add
imull
incb
std
add
jle
or
fcomps
inc
push
lret
sahf
out
nop
sub
add
mov
pop
sub
adc
daa
outsl
insl
subl
and
add
adc
pop
jae
pop
rclb
add
fisttpll
or
add
dec
jns
idivw
add
or
nop
pop
hlt
mov
iret
sarl
or
sub
cmp
repz
cmp
dec
clc
iret
repz
pusha
divl
cmc
cmp
repz
hlt
mov
shl
iret
repz
call
iret
cld
out
adc
sahf
in
xor
dec
jmp
js
in
ljmp
js
xchg
and
ret
flds
adc
fisubrl
aaa
adc
jmp
mov
inc
lock
pop
xor
mov
or
or
or
iret
repz
push
xor
push
fs
cmp
xrelease
stc
cmp
fsub
clc
add
sbb
out
sahf
sub
dec
pop
push
jns
movsb
mov
inc
out
pop
sub
xlat
mov
adc
sbb
add
sbb
jae
mov
filds
xchg
mov
inc
pop
pop
int
cmp
rcrl
jg
stc
mov
repz
sti
cld
std
dec
repz
incb
add
addb
xchg
jg
add
hlt
pop
add
mov
rolw
sahf
or
push
mov
jns
rcr
enter
add
mov
std
or
sahf
mov
add
add
mov
popf
aaa
add
or
stos
push
jb
and
addl
cltd
test
add
gs
cmp
lcall
pop
pop
dec
fcomip
add
out
or
or
movups
pop
sbb
xor
cmc
cmp
sub
shrl
arpl
xor
jae
mov
cmp
or
dec
sahf
or
inc
scas
or
pop
or
mov
inc
popa
and
addb
out
sahf
add
or
sbb
sahf
out
and
inc
pusha
mov
xchg
daa
daa
mov
pop
pop
or
or
daa
daa
daa
or
outsb
pusha
jns
push
add
adc
idivb
pop
das
jo
xchg
out
cmpl
push
or
adcl
bnd
inc
loopne
aas
cmp
in
pop
sbb
pushf
pushf
pushf
js
rclb
leave
leave
leave
adc
mov
leave
leave
leave
or
fcmovne
add
unpcklps
pushl
jb
sub
jb
jb
or
jb
jb
test
in
jbe
aas
pop
sbb
dec
dec
dec
sahf
push
push
jl
fsub
in
sub
pop
ljmp
in
in
or
dec
in
in
clc
add
in
in
mov
in
in
or
in
in
movsb
add
in
pop
pop
sbb
in
in
inc
jp
in
in
aam
push
in
in
mov
mov
in
in
add
dec
sahf
rolb
jbe
dec
dec
dec
dec
int3
pcmpgtd
dec
dec
dec
dec
lods
push
xchg
dec
dec
dec
in
or
dec
dec
dec
dec
pushf
arpl
pushf
fmull
fcompl
aas
outsb
jb,pn
mov
aas
mov
lds
cld
call
adc
leave
inc
jne
pushl
pushf
pushf
pop
enter
mov
add
leave
test
xchg
test
leave
leave
leave
leave
imul
leave
leave
mov
push
adc
lret
das
incb
add
and
daa
xor
jb
and
pop
jb
inc
ljmp
lcall
fisubrl
mov
or
jb
and
ret
and
daa
pop
jae
jb
jb
arpl
cmpsb
add
jb
jb
inc
out
jb
daa
daa
sbb
jb
imul
daa
daa
daa
mov
mov
jb
daa
notb
enter
ja
into
pushf
pushf
pushf
pop
addr16
scas
pop
test
pop
enter
pop
sahf
jg
test
dec
outsb
mov
das
mov
dec
xor
dec
inc
and
leave
inc
mov
dec
xchg
rcll
and
leave
xor
and
leave
inc
cltd
fsts
xchg
dec
mov
xor
movsl
in
xchg
dec
and
aad
adc
inc
mov
xchg
dec
and
int
adc
inc
xor
popf
fnsave
xchg
dec
and
std
leave
inc
xor
mov
jecxz
pop
leave
inc
xor
mov
es
es
mov
stos
jmp
dec
es
fstpt
sti
dec
es
mov
cltd
xchg
xlat
es
es
mov
iret
and
es
mov
cltd
mov
in
inc
outsb
push
pandn
adc
repnz
adc
pop
add
push
jns
push
inc
pop
inc
jg
push
pop
xchg
out
sub
push
and
lret
push
or
push
xchg
pop
in
add
fs
xchg
sbbl
sbb
push
popa
pusha
add
nop
xchg
inc
add
xor
sbb
shll
fldl
cmp
jns
mov
push
cmp
xor
dec
mov
and
add
cmc
dec
or
xchg
jne
jbe
andb
pushf
mov
xchg
cmpsb
xchg
inc
pushf
fwait
add
sub
and
mov
cmp
pop
testb
adc
inc
lea
lods
ss
pop
add
ja
in
or
movsb
daa
mov
fmull
cmpsb
cmp
adc
xchg
xchg
pop
push
add
lret
add
add
add
adc
fistpl
inc
out
jo
and
add
mull
outsl
push
or
lret
cwtl
push
cmpsb
rolb
pop
ret
xchg
xor
mov
bound
mov
pop
fmuls
jns
sbb
out
add
clts
pop
iret
push
sahf
out
jg
inc
cmp
repz
incl
or
in
mov
add
xchg
xor
cli
fstl
inc
jmp
sbb
jge
add
cmpsl
adc
push
or
sub
sub
add
iret
in
xor
xor
cmp
cmp
xchg
cmp
push
in
adc
jge
xchg
and
shlb
test
add
sbb
imul
and
dec
in
mov
mov
dec
xor
mov
and
pushf
aam
rclb
push
push
lods
enter
shlb
add
jecxz
adc
cld
mov
and
pshufw
imul
sar
cmp
mov
inc
rolb
addr16
insl
xor
push
dec
mov
mov
ss
mov
xor
mov
sarb
jmp
sub
jne
mov
icebp
add
int3
lret
push
fwait
mov
push
test
mov
stc
xchg
or
or
loope
xorl
mov
imul
rcrl
sub
movsb
mov
insb
jo
in
add
pusha
idivb
loopne
dec
add
pop
or
xchg
dec
xchg
sbb
push
loopne
or
sbb
add
mov
xchg
out
into
inc
jb
enter
out
mov
adc
outsb
imul
and
and
pop
push
fisubrl
sub
outsl
psrld
inc
rcll
inc
inc
xlat
pop
lcall
iret
mov
sti
enter
das
or
add
cpuid
shr
lcall
adc
fcompl
pushf
add
jnp
fimull
rorl
mov
dec
movsb
dec
dec
scas
cs
inc
sub
imulb
mov
or
fimuls
cmp
repnz
inc
push
fninit
add
movb
mov
or
add
fsubrl
xor
push
daa
pop
iret
rclb
imul
xor
gs
mov
xor
xchg
in
xchg
in
push
sub
jns
jmp
push
sub
fildll
push
imul
push
and
test
movsl
or
xor
mov
xor
fsubr
adc
xor
mov
jle
xchg
insl
gs
sub
aam
sub
mov
xchg
jmp
or
xchg
ss
adc
insl
popa
mov
sbb
cmp
movsl
movsl
jmp
or
dec
mov
mov
jmp
nop
dec
or
out
xor
pop
jmp
adc
nop
and
inc
out
sahf
out
cmp
push
pusha
insb
sahf
out
sahf
js
nop
pushf
test
jns
out
ror
in
jmp
cld
add
xlat
mov
pop
outsl
imul
in
jecxz
ret
and
popa
xor
rclb
pop
das
pop
and
iret
add
pusha
js
movsb
cmp
repz
aam
hlt
jns
cmpsl
stc
or
and
dec
push
jl
lods
ror
fidivrs
in
cld
adc
out
sahf
out
insb
adcb
fsubr
add
repz
pop
jo
nop
repz
rep
mov
jns
out
cltd
sbb
dec
pusha
sahf
out
sahf
je
mov
dec
repz
add
cmp
repz
push
sti
cmp
enter
fwait
mov
iret
repz
pop
insb
mov
mov
repz
mov
inc
pop
jo
repz
test
sahf
out
ds
and
pop
jns
out
jo
pushf
mov
pop
popf
sahf
ja
out
popf
sahf
push
cmp
jns
out
push
repz
out
in
add
cmp
cmp
push
cmp
in
push
mov
iret
cmp
test
test
aam
cld
jns
cmpsl
stc
or
out
sahf
out
mov
jl
in
or
iret
repz
je
movsb
mov
ds
repz
fdiv
add
sbb
jns
out
cmp
sahf
out
sahf
nop
test
shl
cld
cmp
sarl
and
dec
pusha
repz
repz
mov
cmp
call
xor
cmp
repz
jns
out
cmpsb
adc
push
push
andb
iret
repz
xor
repz
repz
mov
incb
and
inc
repz
repz
insb
test
iret
mov
test
sbb
inc
push
insb
cmpb
jns
lods
rcl
test
popf
out
stos
push
xor
sahf
out
pusha
je
mov
out
lock
adc
iret
repz
cmp
insb
adcb
enter
lods
sub
out
cmp
fs
repz
out
mov
iret
repz
sbb
pop
insb
cmpb
cmp
test
enter
out
hlt
or
jns
out
je
mov
sahf
shl
cld
adc
sub
iret
repz
insb
test
repz
mov
jns
cmpsl
and
dec
fs
out
sahf
nop
movsb
mov
cmp
repz
sub
jo
cmp
repz
jns
iret
hlt
add
adc
sahf
out
sahf
dec
pusha
jl
movsb
mov
int3
in
pop
mov
push
inc
cmp
repz
insb
mov
clc
enter
mov
out
sahf
out
xor
pop
push
sahf
cwtl
lods
mov
iret
sarl
sbb
dec
pop
repz
repz
xchg
movsb
mov
repz
aam
clc
adc
repz
repz
cmp
nop
iret
repz
mov
hlt
repz
add
dec
iret
repz
pop
push
sahf
out
cmp
in
add
out
xor
pop
push
out
mov
mov
outsl
mov
iret
repz
pop
je
mov
repz
in
cld
adc
jns
inc
push
insb
and
sahf
out
mov
repz
in
add
sbb
cmp
iret
repz
je
pushf
mov
cmp
repz
cld
or
out
sahf
cmpsl
sbb
dec
pop
push
je
mov
dec
repz
add
adc
cmp
cmp
repz
pop
je
xchg
iret
sti
cmp
mov
jbe
mov
mov
iret
repz
push
pusha
je
xchg
mov
mov
aam
lock
jle
push
and
dec
pop
cmp
repz
js
pushf
lods
stc
cmp
repz
in
add
out
sahf
cmpsl
adc
sub
push
sahf
out
sahf
pusha
jo
xchg
movsb
mov
sahf
out
rcl
hlt
or
sahf
out
fsubrp
push
cmp
jo
jns
out
xchg
movsb
mov
int
lock
adc
cmp
repz
dec
pop
fs
cwtl
cmp
repz
aam
cld
jns
cmpsl
stc
adc
and
inc
pop
out
sahf
out
mov
lahf
in
add
sbb
dec
fs
repz
xchg
test
ror
mov
or
mov
xor
cmp
repz
jo
cwtl
lods
imul
in
add
sbb
jns
out
cmp
pop
jo
out
sahf
adcb
int
jns
clc
sbb
xor
iret
repz
jo
cwtl
test
sti
cmp
fsubr
cld
into
enter
repz
inc
push
insb
mov
rcr
or
sahf
out
sahf
and
dec
pusha
je
jns
out
mov
repz
repz
sbb
dec
pop
iret
repz
jo
test
shl
sahf
cmpsl
stc
cmp
adc
and
dec
jns
out
pop
insb
adcb
mov
fsubr
or
iret
repz
and
inc
pop
insb
mov
repz
lods
ror
jns
out
hlt
or
adc
xor
jns
out
pop
jo
pushf
dec
repz
mov
aam
into
sub
repz
xchg
lods
shr
iret
repz
repz
adc
xchg
push
push
jo
mov
enter
fiadds
iret
repz
inc
push
sahf
out
ds
sub
push
jns
mov
lock
repz
shll
inc
pop
jo
iret
repz
pushf
mov
fsubr
add
adc
dec
pop
jo
sahf
out
test
dec
repz
and
push
iret
repz
fs
lods
fcompl
or
and
dec
jns
out
mov
repz
out
add
adc
iret
repz
xor
dec
pop
fs
iret
repz
mov
mov
fsubr
cmp
repz
add
or
and
cmp
repz
push
pusha
in
repz
insb
js
nop
pushf
xor
inc
outsl
es
outsl
scas
je
sbb
or
cmpsb
pop
adc
or
and
out
out
inc
pop
xchg
sbb
inc
xor
xlat
push
movsb
push
pusha
push
push
mov
es
sub
xchg
xchg
jno
sub
xor
pop
jnp
and
adc
dec
cmpsl
inc
adc
jmp
dec
push
or
mov
inc
neg
enter
push
insb
push
mov
out
pop
push
dec
ss
into
cwtl
dec
hlt
dec
into
and
adc
sahf
lock
push
sbb
push
repnz
call
inc
rcrl
or
mov
clc
push
nop
xchg
dec
mov
jnp
idivb
mov
call
es
jle
int3
inc
js
je
dec
outsl
lock
ds
sbb
faddp
sbb
pushf
inc
adc
pop
mov
jl
xchg
es
cwtl
mov
daa
hlt
jnp
push
dec
fcomps
dec
out
jp
lahf
mov
fcoms
loopne
aaa
clc
cmpsb
fmuls
data16
cmp
repz
fmull
or
or
jo
out
loopne
rorb
pop
jecxz
mov
decb
push
jnp
sub
test
fcomip
ficoms
sub
dec
mov
mov
add
pushf
push
dec
push
rorb
cmpsb
or
ss
sub
enter
clc
shlb
sub
fs
sub
add
xchg
or
jnp
loopne
or
pusha
push
push
pop
push
push
fmulp
cmp
into
rolb
add
mov
mov
push
cmp
push
sbb
into
pushf
idivl
fs
xor
xor
popa
and
or
push
sub
push
pusha
pop
es
jnp
adc
cs
pop
inc
xorl
mov
push
sarl
mov
je
inc
movsb
es
sti
faddp
xorl
cmpsb
cmp
into
cmp
mov
loopne
in
or
jno
stc
cmpsb
adc
neg
sar
xor
in
es
push
pop
lods
cmpsl
mov
or
jnp
enter
int
or
inc
inc
idivl
outsb
outsb
hlt
mov
sarl
mov
ficomps
ds
into
jo
push
es
call
aam
pop
lock
push
faddl
jns
es
mov
das
pop
push
adc
push
pop
scas
insb
imul
aas
jle
inc
orl
cmpsl
dec
and
sbb
xchg
push
mov
lahf
js
movsb
out
ds
pop
jnp
push
push
dec
repz
push
and
xorl
es
stos
ja
fmul
push
out
lods
push
out
and
cld
icebp
sahf
add
inc
ds
sbb
addr16
push
mov
xchg
mov
push
push
sbb
mov
and
shlb
jae
pop
mov
push
pop
push
xchg
outsb
cmp
icebp
lock
mov
xlat
push
hlt
mov
into
movsb
es
and
sbb
into
mov
or
push
mov
rcrb
mull
push
out
stos
test
or
jp
imul
lock
add
pushf
shll
dec
mov
inc
hlt
fiadds
push
jp
push
mov
dec
push
jge
aaa
xchg
sahf
movl
mov
nop
dec
repz
jo
mov
mov
mov
inc
push
push
push
fidivrs
xor
xchg
push
lock
mov
out
xor
scas
sub
outsl
scas
jns
sbb
inc
sbb
inc
shlb
js
negl
enter
test
jo
inc
out
cmp
or
fidivrs
mov
jl
je
mov
enter
push
outsl
pop
xchg
inc
out
in
xchg
jno
sbb
mov
xchg
hlt
nop
push
xchg
clc
lret
js
pop
jbe
pusha
es
into
neg
ss
fadds
jnp
push
rclb
notl
mov
js
loopne
into
sub
jbe
push
call
jle
xchg
mov
and
aad
and
push
push
or
inc
adc
mov
add
inc
pushf
syscall
push
dec
add
add
jle
add
pusha
dec
cmp
inc
add
sub
add
and
add
nop
stc
mov
pusha
add
add
add
out
inc
push
dec
push
add
pop
dec
add
pop
inc
sbb
inc
and
sti
mov
push
and
pop
dec
aaa
push
pop
mov
add
inc
add
xchg
xlat
insl
out
adc
dec
xchg
push
loop
fisubrs
inc
mov
dec
dec
add
neg
jnp
es
dec
push
inc
cmp
ja
ja
mov
aaa
or
add
mul
rcll
inc
xchg
push
add
xor
push
dec
xor
or
cmp
pop
mov
push
pop
push
aaa
push
sbb
pop
cmp
iret
add
negl
inc
or
dec
mov
dec
repz
xchg
addb
mov
cmp
or
inc
inc
dec
cs
sbb
inc
or
sub
sbb
push
push
enter
xor
mov
incb
add
lret
xchg
cmpsb
incl
addb
rolb
lcall
add
or
add
xchg
or
xchg
push
incb
cld
jg
repz
clc
aas
push
pop
jmp
shr
sub
cld
add
pop
or
push
aas
or
in
and
jg
add
xchg
cmp
pop
addb
mov
into
push
or
push
mov
add
add
add
int
push
psubb
addr16
insb
inc
out
push
out
ficompl
ds
out
cmp
add
push
sbb
loopne
lock
sbb
pop
in
popf
dec
mov
aas
pop
cs
pop
add
mov
xchg
negl
lock
xor
pop
std
sahf
push
ss
cmp
add
add
insb
jl
pushw
mov
jl
jbe
jg
sbbb
in
clc
inc
add
jo
iret
inc
inc
jle
rolb
incb
lock
push
sahf
pushl
or
push
add
lea
es
jecxz
sahf
out
add
nopl
xlat
movsl
or
into
push
add
add
sahf
or
mov
daa
add
add
mov
das
aas
dec
pop
push
mov
outsb
daa
add
pop
fwait
int
mov
loopne
rcrb
mov
and
dec
add
push
xlat
mov
insl
inc
pop
outsl
clc
popl
adc
sbb
add
arpl
add
xlat
pop
sbb
outsl
ss
test
inc
nopl
ds
jg
les
fs
pop
or
in
les
test
cmpl
in
out
mov
add
sbb
add
scas
jbe
cld
pop
cmp
fadd
push
inc
mov
aaa
pop
push
addr16
lock
inc
sbb
inc
cs
f2xm1
mov
std
or
jle
or
into
data16
push
sub
inc
add
inc
addl
inc
shll
xor
sbb
push
xchg
mov
sbb
sbb
aad
jbe
lock
js
cmp
push
sbb
repz
int
push
sbb
or
test
loopne
enter
loope
xchg
lods
gs
adc
push
add
orb
add
rolb
and
add
or
add
or
mov
mov
cmp
pop
push
ficoml
subl
mov
daa
sbb
mov
repz
xor
daa
and
xchg
mov
lahf
and
daa
and
out
push
adc
cmp
clc
dec
push
ficomps
mov
push
fdivrl
cmp
daa
xchg
mov
sbb
ja
dec
addl
or
ja
push
jae
jnp
daa
clc
push
cmc
sbb
xchg
inc
inc
test
and
lahf
adc
inc
enter
cmp
inc
and
cmpl
xor
and
int3
jl
pop
daa
inc
push
movsl
fcomip
lods
mov
cmp
aas
xor
jg
in
mov
dec
sub
clc
xor
in
xchg
aas
jbe
and
push
testl
and
push
es
pop
cmp
cmp
push
cmp
incl
idivl
in
mov
pop
push
incl
enter
fs
xlat
cld
insl
out
ficoms
cmpsl
daa
push
and
xor
ret
sub
mov
push
xsavec
jns
push
xbegin
xchg
test
addb
ja
testl
cs
inc
inc
or
dec
ljmp
dec
push
pop
xor
outsb
daa
inc
aad
sub
sub
jb
dec
fisubs
mov
out
in
xchg
adc
incb
stc
out
dec
clc
add
insb
xchg
jecxz
add
mov
pop
push
stos
mov
push
dec
inc
aad
aas
sbb
xchg
mov
arpl
push
ss
mov
shll
xor
arpl
lods
dec
dec
clc
add
sbb
xchg
push
dec
sahf
mov
out
fs
sahf
shll
jb
loopne
in
es
in
fisubs
dec
lret
ljmp
inc
inc
es
daa
dec
ja
inc
out
add
jle
xor
in
xchg
popa
dec
xlat
repz
sub
jecxz
aad
xor
test
adc
cmp
or
xor
in
inc
add
mov
or
stos
movsb
out
mov
mov
or
daa
xor
pop
jns
mov
arpl
das
insb
jo
fldenv
js
bound
in
pshufw
inc
ret
xor
and
repz
sub
pusha
addl
push
xor
cmp
shlb
mov
sbb
cmpl
and
inc
aas
call
mov
daa
fsubrs
sbb
or
lock
leave
and
and
jbe
dec
xchg
daa
mov
xchg
stos
xor
ja
xchg
mov
sub
or
jne
adc
cmpsl
fsubrl
cmp
sbbb
adc
cltd
test
jo
xchg
xchg
sbb
loop
fwait
addl
clc
mov
daa
out
fs
jl
and
clc
or
in
bound
sbb
xchg
fcoms
daa
fldcw
mov
xor
dec
daa
test
fdivl
daa
dec
daa
clc
dec
rcr
jae
or
dec
sarb
dec
jl
and
rorl
out
and
daa
xor
xorl
cltd
cltd
push
mov
mov
cltd
and
mov
mull
repz
cwtl
aaa
cmp
jb
inc
push
mov
daa
ss
jb
test
rcrb
bound
push
insb
aaa
sbb
insb
push
xchg
arpl
and
push
push
push
adc
mov
pop
adc
fbstp
pop
mov
cmp
aad
cmp
or
js
sub
pop
and
cmp
aas
daa
aaa
jl
int3
shrl
daa
and
push
jbe
stos
sub
sbb
aaa
fs
mov
scas
subl
jbe
pushf
mov
push
imul
sbb
fstp
rcr
xor
push
and
out
jmp
pusha
and
xchg
add
jb
ret
jns
and
stos
stos
shrl
repnz
mov
sahf
or
adc
push
and
mov
emms
push
jo
jnp
xchg
pop
pop
push
pop
jg
add
pop
push
arpl
lahf
test
jg
js
in
push
push
add
ja
or
adcb
stc
or
mov
pop
sbb
es
cmpsb
lds
fiaddl
push
ja
test
ud2
jnp
cmp
or
add
mov
and
popf
mov
gs
setl
pop
add
push
jo
mov
movq
jo
divl
sub
pop
push
out
add
cmpsb
adc
loopne
mov
xchg
rcrl
aas
test
aam
pop
mov
jo
repz
aas
pop
jnp
ss
pop
lock
bound
int3
iret
mov
add
popl
jo
mov
mov
cmp
aas
jo
inc
and
ds
or
add
mov
lock
mov
and
dec
bound
out
jg
loope
stos
aas
pop
add
jo
cwtl
ficomps
aas
jg
sub
mov
add
data16
data16
sub
mov
push
push
scas
and
fnstsw
outsb
and
or
jbe
insb
out
bound
js
fs
sbb
push
jp
mov
jns
inc
push
fs
pop
push
outsl
push
sahf
aaa
in
fwait
arpl
ss
out
jbe
add
insb
xor
add
in
fldl
push
inc
xor
push
cmp
cmp
push
add
inc
add
xor
jge
cmpsl
ja
repz
push
cmpsl
push
jb
push
arpl
out
jge
push
fwait
jno
jae
insl
adc
fsubrp
or
imul
sbb
inc
xchg
xlat
push
pop
xor
push
inc
cmp
mov
jb
dec
outsb
scas
arpl
mov
shll
shll
push
out
mulb
jns
addr16
fistps
push
xchg
fnsave
jb
arpl
jae
pop
pxor
fists
pop
fstpt
inc
insb
jecxz
data16
js
data16
mov
rorl
xchg
add
push
inc
push
gs
pop
sub
sub
ret
outsl
cmp
faddl
inc
mov
mov
sub
outsl
lcall
inc
insb
lahf
inc
jnp
mov
sbb
xchg
push
pop
hlt
loope
shll
or
xchg
mov
negb
inc
push
outsl
mov
arpl
inc
cs
ja
pop
push
adc
mov
outsl
cmpsb
leave
shrl
xor
gs
imulb
js
je
dec
stos
push
dec
push
xorb
adc
fcomi
pop
dec
inc
or
push
ret
aas
jg,pn
push
add
repz
dec
mov
js
adc
jg
fstpt
fists
jae
jnp
sub
dec
inc
sbbw
arpl
daa
testl
bound
jb
aaa
mov
sbb
mov
pushf
je
jo
jnp
ja
mov
js
inc
cmpsl
bound
sbb
sbb
pop
cmc
fisttpll
xchg
andb
cli
js
aaa
insl
ret
cmp
insb
mov
lret
jo
imul
cmpsb
push
ljmp
sub
inc
sbb
push
mov
sub
push
fimull
push
test
cmpsb
dec
mov
mov
imul
mov
jb
call
jb
popa
push
stos
in
jmp
outsb
xor
push
incb
gs
mov
mov
dec
jnp
sub
vmread
daa
imul
outsl
add
stos
fs
ret
or
fwait
fs
insb
lds
lret
lret
push
sub
sarb
add
shrl
repnz
sbb
adcb
fs
stos
lock
pop
imul
add
ret
or
in
push
and
pop
adc
jae
sub
out
xor
xor
xlat
shll
jne
ret
pop
dec
and
ret
xchg
scas
push
jb
aaa
movsbl
andl
imul
adcb
outsb
and
pop
push
adc
sub
daa
push
mov
push
not
cli
dec
out
sti
ret
jo
xor
addl
sbb
fisttpl
fidivs
jns
sbb
fisttpl
jnp
mov
sbb
rolb
rcl
sti
adc
inc
push
jbe
popa
insl
addr16
sbb
or
push
xor
add
xchg
dec
ss
filds
mov
inc
pop
or
popa
inc
pop
sbb
adc
es
sti
es
pop
push
mov
inc
xor
push
add
fwait
and
add
fnsave
imul
inc
inc
sub
cmp
das
inc
inc
jae
jbe
daa
inc
mov
jnp
call
ja
adc
fidivl
lahf
and
push
xchg
and
jecxz
cmpsl
add
bnd
bound
jb
sbb
jae
stos
xchg
stos
pop
sbb
xchg
adc
mov
ja
popa
pop
loop
push
sbb
popa
adc
into
cmp
mov
jno
das
shll
das
lods
pusha
adc
or
adc
ss
scas
push
xor
lock
paddusw
outsb
outsl
adc
xor
add
dec
lret
inc
and
adc
add
mov
addl
add
and
xor
insl
pop
xchg
sbbl
outsl
stos
scas
adc
fadd
out
and
out
fildl
addb
pop
pop
jp
mov
jnp
int3
mov
iret
dec
and
mov
imul
xor
sbb
stos
jae
arpl
or
sub
daa
out
mov
xchg
jbe
mov
mov
arpl
xchg
movsb
inc
push
and
loop
mov
pop
sub
aam
xor
inc
insb
sti
adc
imull
jo
adc
and
stos
jno
into
insb
iret
insb
dec
jae
adc
xor
pop
jae
imul
mov
imull
or
imul
fcomp
mov
orl
addr16
adc
jo
add
xchg
out
repnz
jae
push
loopne
xchg
pop
repz
cmpb
mov
pop
fucomip
mov
out
mov
test
pop
dec
filds
cvtps2pi
xchg
sbb
xor
imul
inc
mov
pop
adc
add
pop
and
and
stos
and
pop
outsb
adc
rolb
jo
xlat
shrb
add
aam
cwtl
test
sbb
push
sub
xsavec
addb
cmp
xchg
sub
inc
xor
mov
sti
call
pop
xchg
mull
mov
sbb
cli
xor
jge
bound
fdiv
push
inc
xchg
je
imul
jnp
jp
addr16
ja
cwtl
bound
outsb
jae
arpl
mov
push
imul
xor
add
and
add
mov
mov
es
or
dec
mov
sub
bound
out
arpl
push
fdivrs
movsl
dec
push
push
jb
jbe
xchg
sar
adc
sbb
roll
dec
mov
or
push
and
fisttps
cli
outsb
stos
cmp
scas
adc
ret
jg
or
sbb
inc
stos
mov
ds
cmpsl
stos
insl
adc
adc
fwait
jle
dec
mov
ret
mov
jecxz
ja
inc
rorb
cmpsl
xchg
js
jg
mov
and
fidivrs
fs
ss
push
xor
adc
sbb
push
cmp
arpl
test
lock
arpl
fistpl
push
or
dec
jg
xor
push
adc
push
lcall
push
xchg
push
loop
mov
jno
mov
roll
adc
add
cmp
imul
push
movsb
push
sub
sbb
push
sub
or
dec
arpl
fs
addr16
xchg
pop
cs
mov
cmpsb
pop
jo
fildl
sub
xchg
stos
add
fisubs
add
imul
xor
add
push
push
inc
jp
mov
inc
dec
stos
mov
push
dec
scas
jle
xchg
add
push
adcb
and
xchg
mov
dec
cmp
and
jne
mov
scas
mov
fiadds
out
stos
rcrb
or
add
xor
movsb
xchg
call
shll
stos
add
dec
popf
stos
push
sub
add
mov
push
inc
lret
sbb
jo
push
dec
jns
es
sbb
jle
sarl
push
push
or
mov
jecxz
or
sub
xchg
pop
mov
fisubrs
sub
xchg
inc
shrl
dec
pop
adc
sbb
outsl
add
mov
dec
pushf
mov
add
pop
ljmp
sub
adc
push
pop
xchg
dec
add
rorl
je
jo
push
mov
pop
hlt
out
subl
jne,pn
fcomps
push
or
dec
cmp
cmpsb
push
cmp
pop
orl
pusha
adc
pop
aad
mov
xchg
int3
shlb
or
xchg
aaa
loopne
lds
mov
je
xor
or
jne
fwait
and
add
adcl
xchg
push
push
jae
pusha
aaa
addr16
outsb
dec
fisubl
pop
out
inc
pop
sub
adc
cs
jne
add
sub
push
pop
or
sub
pop
in
jbe
mov
dec
out
and
push
xchg
imul
outsl
cmpsl
ss
adc
es
jp
cmpsb
js
into
lds
jae
xchg
xor
mov
mov
inc
cli
sub
jo
pusha
lret
cmp
rcll
pop
mov
out
pop
push
mov
jo
add
push
cli
jg
or
xchg
mov
les
fimuls
mov
xor
add
cld
xchg
outsl
dec
xor
dec
stos
or
add
adc
cmp
je
sub
sti
xlat
pop
cs
test
push
daa
rcrl
andl
data16
pop
inc
push
aas
shlb
xchg
pop
mov
in
movsb
pop
and
sub
fistpll
or
jecxz
and
cmp
addr16
jo
out
bound
pop
xor
fsubl
push
addl
pop
pop
cs
cmp
adc
inc
push
and
loop
xor
push
or
movsl
mov
sub
rorl
pop
sub
and
mov
arpl
dec
mov
add
fwait
xor
rorl
ret
arpl
adc
sbb
lahf
xchg
dec
dec
fstpl
jmp
scas
ljmp
sub
push
adc
or
jecxz
or
pop
sbbl
mov
and
ret
jae
bound
inc
je
pusha
and
lods
add
call
insl
push
mov
imul
mov
mov
fdivrs
mov
mov
ficoml
addr16
pop
adcl
jo
pop
mov
js
sub
pop
test
pop
cmpsl
mov
mov
push
xlat
dec
push
adcl
xlat
pop
test
lcall
es
movsl
testb
pop
iret
out
xchg
pop
push
mov
mov
rcll
push
bound
cmp
es
out
bndldx
outsl
xor
mov
or
lods
sbb
pop
sbb
xor
and
unpckhps
shrl
inc
inc
jnp
adc
bound
xorl
pop
sarl
add
out
cmp
sti
cmp
adc
icebp
mov
roll
push
loopne
cmpb
adc
movsl
out
jae
outsb
dec
pop
mov
add
push
lds
cmp
mov
ret
outsl
stos
mov
loop
or
bound
add
outsl
jecxz
insl
inc
ret
lahf
push
adc
vmovapd
xor
lock
arpl
jecxz
pop
inc
daa
and
je
mov
orb
adc
adc
sbb
ret
mov
lock
inc
jmp
dec
or
pop
cmpsl
mov
jmp
or
pop
pop
les
adc
xchg
xor
movsl
add
dec
fimuls
push
push
dec
pop
sti
js
pop
push
push
push
fwait
out
mov
sbb
jbe
pop
xchg
or
push
xchg
sbb
inc
and
sub
sbb
and
push
mov
pop
scas
daa
negl
sbb
popa
sahf
mov
arpl
pop
mov
lods
into
clc
sti
add
cmp
cmp
push
mov
loopne
outsb
and
jo
inc
data16
jo
push
inc
ret
xor
add
push
cli
jo
aaa
adc
sub
or
pop
add
inc
pop
pop
pusha
fiaddl
das
inc
or
scas
cwtl
mov
and
mov
loopne
imul
mov
test
mov
push
icebp
adc
adc
lods
inc
pop
and
sbbb
dec
mov
cwtl
aas
movups
lcall
ss
add
cmp
testl
push
fs
jp
cmp
sub
push
add
outsl
inc
movsl
arpl
sub
rclb
jecxz
imul
add
pop
xchg
enter
jae
imul
ja
testl
out
outsl
mov
jnp
dec
ret
jp
or
ljmp
pusha
rcrl
cmpsl
add
add
pop
or
lahf
dec
orl
movsb
dec
mov
sbb
arpl
sbb
pop
cmp
shrl
shlb
data16
mov
jmp
cmp
push
cmpsl
mov
jge
mov
aas
testl
adc
int
adc
ret
daa
or
xor
sbb
adc
aad
das
mov
add
fwait
outsb
and
pop
xchg
pop
push
out
mov
mov
cmp
das
aas
add
xchg
mov
jnp
jbe
sub
sbbl
jg
mov
mov
sbb
arpl
movsl
lods
cmpsb
dec
pop
dec
sbb
rcr
push
lods
mov
xor
scas
adc
ret
push
scas
mov
or
outsb
sub
mov
dec
dec
cmpsl
stos
sub
inc
xchg
fs
adc
xor
jae
pop
das
xorl
in
jo
pop
adc
xor
xchg
das
adc
jnp
pusha
fisttpl
lods
mov
inc
push
and
inc
xlat
add
popw
and
bound
mov
inc
jmp
xchg
test
or
and
rorl
sub
pop
daa
in
xchg
adc
imul
lea
jg
loopne
adc
sti
or
das
ds
dec
mov
inc
xor
outsl
pop
iret
pop
push
adc
xor
sbb
iret
sub
pop
daa
nop
sbb
sbb
jns
adc
fnsave
or
sbb
outsb
cwtl
sbb
arpl
jo
dec
jo
adc
jne
xor
adc
or
xchg
dec
aad
jne
sub
and
pop
aas
decl
cmp
cmp
aaa
mov
pop
fwait
cmp
out
jle
mov
loope
insl
sahf
outsl
pop
adc
pop
outsl
jae
inc
push
xchg
xorl
xor
adc
mov
push
and
sub
and
push
xchg
in
pusha
and
add
or
push
xor
dec
insb
aam
and
push
rolb
dec
popf
es
mov
mov
inc
jo
adc
js
cmp
dec
ds
pop
rcl
jp
push
push
dec
push
jae
mov
mov
nop
icebp
xor
or
testl
shrl
daa
sbb
sbb
sub
sub
cmp
sub
mov
dec
mov
dec
sub
mov
repnz
push
push
dec
fdivrl
fisubrl
lods
gs
mov
imul
sub
inc
push
dec
je
and
mov
shll
dec
push
test
sub
adc
xchg
sub
inc
addr16
adc
adc
xchg
dec
inc
cmp
mov
rolb
fldt
dec
inc
insb
insl
fs
inc
adc
jbe
data16
sahf
lock
push
push
xchg
imul
push
jo
in
xor
rorb
ds
mov
sbb
dec
and
mov
push
push
adc
insl
add
mov
rorb
dec
sbb
stc
xchg
outsb
adc
sub
fldcw
xchg
push
repz
sbb
pusha
test
rclb
and
in
aas
dec
or
sub
das
mov
imul
cmpsl
inc
mov
cltd
xchg
push
dec
mov
rclw
inc
and
push
jae
cmp
xchg
repz
add
mov
pop
dec
fcoms
mov
sahf
xor
or
insl
mov
dec
and
les
xchg
and
and
adc
sub
out
inc
push
add
xor
push
and
jp
adc
gs
cmpb
and
jne
mov
gs
add
pop
xor
sti
mov
pop
in
inc
sbb
test
or
imul
shrb
test
rcll
xchg
loopne
xor
das
xlat
inc
jae
addl
outsl
es
xlat
inc
push
adc
jnp
rcrl
shll
scas
sbb
sbb
adc
pop
adc
je
add
iret
mov
add
test
movb
or
dec
push
movsb
and
adc
stos
mov
or
adc
xor
dec
adc
lea
cmpsb
addl
fbld
ret
lock
enter
sbb
sbb
xchg
imul
adc
test
sub
jmp
inc
insb
add
popf
or
add
int3
add
cmp
sub
pop
add
xchg
or
add
loop
mov
or
inc
cmpb
or
cmovo
add
cmp
mov
or
cmc
or
or
sbb
push
inc
addl
jg
adc
xchg
mov
rorl
xorl
pop
push
adc
add
fcmovne
test
adc
inc
add
inc
or
xor
add
dec
scas
in
add
dec
scas
in
push
pop
adc
shlb
push
push
mov
push
push
or
mov
insb
lock
fnstsw
dec
or
mov
sbb
arpl
inc
jmp
pop
mov
and
aam
test
sbb
sbb
test
fisubl
sbb
gs
fisttps
add
gs
mov
test
ret
push
mov
fcoms
mov
mov
or
rolb
dec
xor
and
and
cmpb
fs
iretw
and
mov
ret
testb
and
add
push
adc
adc
or
push
xchg
push
jns
inc
inc
push
mov
jnp
pushf
inc
imul
add
imul
jmp
push
outsl
adc
fs
mov
xchg
insl
cltd
inc
pushf
das
fidivrl
insb
lret
xor
jae
outsb
insb
negb
dec
dec
insl
sub
pop
lods
pop
adc
pop
inc
and
test
rcrl
orb
sbb
mov
push
pop
mov
push
fildl
je
shlb
orb
sbb
test
leave
inc
and
fs
xchg
cmp
cltd
inc
and
push
stos
xchg
test
inc
pop
jns
jbe
pop
daa
fnsave
pop
mov
rorl
lds
mov
cmpb
rcrl
mov
inc
mov
push
cmp
sbb
add
outsb
jbe
mov
sti
arpl
adc
and
and
popa
pusha
gs
cmp
dec
fs
mov
mov
xchg
sub
add
add
ss
adc
mov
sub
lret
mov
push
inc
gs
mov
shrl
popa
push
cmpl
xlat
sbb
sub
es
mov
push
rcrl
imul
inc
push
push
sub
into
inc
push
mov
inc
pop
notl
mov
outsl
lea
outsb
dec
int3
xchg
pop
pop
mov
xchg
sbb
dec
mov
cmp
mov
sub
mov
sub
test
push
insb
testl
rcl
scas
dec
inc
dec
jmp
adc
stc
push
sbbl
pusha
add
inc
push
mov
fldt
stos
sbb
sbb
push
shlb
push
es
adc
adc
sub
test
cltd
adc
pop
test
loopne
enter
and
or
test
add
out
ja
lods
test
cmp
inc
add
push
rclb
dec
dec
xor
adcb
pushf
ja
dec
mov
cmp
sub
sbb
or
push
movl
mov
shrl
popa
popf
push
dec
and
movl
popa
inc
lods
push
sbb
pusha
sub
cmp
hlt
pop
or
push
push
push
inc
pop
push
imul
sbb
shrl
sahf
and
fisubrl
inc
pusha
and
and
push
jnp
lods
adc
xor
imull
add
add
das
and
popa
sub
or
sub
insl
ja
and
add
adc
imul
insl
xor
sub
dec
mov
ljmp
insl
inc
and
and
repz
insb
sbb
popf
js
mov
bnd
inc
xor
repz
insb
or
mov
out
add
sub
mov
popf
sub
loop
sub
mov
cmp
sti
push
and
sbb
xor
fwait
adc
mov
or
inc
inc
dec
inc
lea
mov
dec
push
pop
rcr
pop
ret
imulb
xorl
je
sbb
mov
cmp
xor
adc
jne
lods
loopne
push
xor
dec
add
dec
aam
adc
add
jp
fisubs
jae
enter
mov
test
pop
mov
and
push
sub
arpl
or
nop
cmp
sub
shll
and
sbb
mov
out
push
push
outsb
inc
outsl
or
mov
aad
adc
out
mov
pop
push
cmp
rorb
push
sub
mov
dec
dec
cmp
popa
jo
dec
xchg
insb
xor
and
sub
sbb
stos
sbb
rclb
sbb
addr16
subl
insb
sbb
adc
mov
lret
sbb
and
imul
push
jae
add
mov
dec
pop
pop
fcmovb
inc
mov
inc
bound
daa
jnp
inc
roll
inc
frstor
xchg
xlat
add
pusha
cmpsl
add
jg
xor
mov
sbb
sbb
and
lcall
dec
data16
sub
fwait
rol
or
ja
xchg
mov
dec
cmp
adc
and
sbb
out
pop
lea
mov
in
ficoms
cmp
loopne
and
cmp
dec
and
cltd
adc
pop
push
loope
shrb
outsb
fwait
jno
jg
push
jo
push
inc
call
lods
xor
jp
fwait
push
mov
cmp
jbe
add
and
cmp
sub
insb
or
add
and
out
rorl
dec
or
sbb
or
sahf
xchg
inc
loop
popa
mov
roll
sbb
dec
fadd
dec
mov
insb
clc
sub
adc
mov
in
sbb
bound
addl
bound
cltd
pop
nop/reserved
sbb
fs
jo
sub
or
mov
pop
stos
iret
and
mov
adc
arpl
add
mov
mov
xchg
cmp
and
mov
loop
push
pop
inc
movsl
mov
inc
push
sbb
data16
push
outsl
sub
jns
test
sbb
fdivs
inc
adcl
mov
cmpsl
shrl
jecxz
inc
add
xor
or
ret
imul
sbb
cli
clc
je
jne
and
sbb
pop
jb
gs
inc
aaa
mov
icebp
sbb
andl
loopne
rcl
cld
dec
dec
jae
xchg
cmp
mov
xchg
inc
add
fisttpll
inc
scas
rorl
aad
jae
push
outsb
cmp
or
mov
test
dec
shrl
mov
in
sbb
sbb
jge
loop
imul
adc
sub
imul
and
pop
jnp
or
adc
test
aaa
mov
xchg
mov
inc
ret
add
adc
out
xor
jae
adc
fadds
sbb
pop
cmp
mov
cmpsl
mov
dec
inc
pop
sub
xlat
inc
test
sbbl
test
outsl
mov
js
imul
and
sbb
mov
mov
jne
push
xchg
inc
jecxz
nop
add
jg
adc
xor
imul
fdivrs
mov
jmp
push
mov
int
insb
inc
sbb
imul
inc
hlt
daa
insl
ret
xchg
aam
xchg
das
push
or
jbe
and
loope
lret
and
jb
stos
add
adc
pop
inc
daa
aaa
mov
lods
enter
lods
dec
outsb
inc
sbb
inc
add
push
pop
and
mov
aad
stos
lea
ret
repz
inc
les
lods
xchg
mov
sub
scas
mov
inc
jno
adc
or
pop
jnp
jmp
add
mov
xor
jg
fstl
pop
cmp
jmp
push
outsl
rol
pop
mov
adc
xor
pop
mov
and
jbe
and
shl
mov
mov
fildl
mov
sbb
fs
sbb
jae
ss
data16
pop
fisubl
cwtl
sar
loop
fildl
sbb
adc
and
jmp
inc
aaa
adc
ds
push
inc
pop
imul
lods
loopne
adc
hlt
lods
jo
inc
dec
sti
dec
pop
cwtl
jne
int3
aaa
inc
adc
and
push
pop
adc
in
aaa
push
jo
add
inc
je
jg
fs
std
bound
jl
mov
sbb
aaa
test
inc
push
add
inc
shll
aaa
sbb
add
js
push
gs
rorb
push
push
pop
sbb
inc
decl
add
dec
add
add
add
mov
inc
popl
cmp
add
lret
push
jo
inc
pop
add
mov
nop/reserved
mov
inc
movups
and
sub
jo
mov
repnz
je
sbb
add
daa
mov
jae
loopne
scas
mov
cmp
negb
aam
xlat
inc
or
xchg
push
sti
inc
or
jns
pushf
xchg
inc
dec
dec
push
fiadds
lds
or
bound
lret
pushf
dec
add
stc
movsl
divb
aaa
clc
sub
lahf
je
push
xor
cmp
push
bnd
sbb
add
pusha
mov
gs
jo
outsb
jae
iret
cmpsb
lret
jb
inc
mov
pop
lahf
dec
js
cmp
pushf
cs
xor
or
push
dec
xchg
and
pusha
mov
lea
movl
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
inc
lret
dec
add
dec
add
