jbe
out
imul
scas
aad
inc
adc
xchg
mov
scas
jbe
dec
lahf
invd
mov
mov
push
adc
or
sahf
pop
test
bnd
or
adc
loop
xchg
outsb
hlt
or
imul
stos
sbb
stos
rolb
setp
cli
sbbb
test
push
and
fsubr
xchg
push
pop
decb
push
mov
mov
xchg
mov
mov
add
outsb
pop
mov
in
jbe
or
ja
pushf
pushw
pop
fs
pop
push
push
push
ja
add
push
leave
rol
jo
lods
dec
mov
inc
jne
aaa
int
push
xchg
leave
hlt
inc
notl
or
in
mov
jno
push
inc
pop
outsb
std
lahf
in
xchg
mov
jecxz
jl
jle
dec
sbb
xchg
add
mov
add
mov
cmp
gs
sbb
rol
xchg
mov
int
fs
cmc
jae
xchg
dec
and
fsubp
repz
inc
fadd
xchg
into
addl
xchg
out
fdivrp
test
fbld
mov
mov
mov
xor
lods
cwtl
push
xchg
loope
pop
lret
xor
cmpsl
cmpsl
in
cmpsl
int
stos
jae
mov
push
mov
scas
and
mov
nop
orb
push
mov
push
mov
add
test
test
or
nop
enter
add
or
pop
popl
shlb
pop
daa
arpl
mov
outsb
push
dec
add
or
push
mov
test
sar
add
icebp
icebp
xchg
dec
sbb
lea
nop
xchg
xor
mov
addr16
mov
jp
pushf
inc
mov
mov
js
hlt
push
lret
pop
mov
outsl
push
push
mov
ficomps
les
sahf
mov
dec
repnz
iret
cmp
test
adcl
adc
push
fmull
xchg
in
mov
mov
rorb
cwtl
jns
es
in
fs
mov
mov
mov
inc
dec
mov
mov
inc
enter
push
je
out
pop
and
stos
outsl
lds
xchg
xchg
push
xor
pop
inc
mov
call
pusha
or
or
sub
cmp
insb
pavgb
lods
lcall
adc
xchg
xor
xchg
sar
adc
sti
std
lret
and
and
nop
test
loopne
add
sub
xchg
pop
lock
mov
xlat
push
sahf
call
inc
loope
sti
mov
loop
sbb
movntq
aad
les
xchg
mov
adc
xchg
inc
add
mov
test
mov
jno
inc
cmp
mov
int3
xchg
pop
cmc
bound
ret
mov
mov
xor
insb
mov
or
in
dec
jne
in
mov
jl
movsl
shll
in
in
int3
lods
stos
mov
sti
jns
int
mov
xchg
sub
test
pop
cli
repnz
mov
andb
push
mov
xor
sbb
dec
inc
jo
pop
push
loop
flds
mov
mov
xorl
push
sub
mov
dec
or
add
les
xchg
dec
pop
inc
cs
outsl
ja
cmc
sub
std
dec
loopne
sahf
stc
mov
xchg
jp
jne
dec
add
sbb
dec
imul
pop
in
mov
jmp
sub
add
dec
js
mov
pop
mov
xor
ljmp
stc
push
ds
pop
call
mov
js
cld
lahf
enter
ret
mov
mov
sti
fnsave
out
mov
and
cmpsl
sub
insb
nop
xchg
loopne
cmpsl
repnz
inc
stos
stos
shl
and
lahf
imul
cltd
push
jmp
jae
dec
std
pop
mov
gs
lock
fidivl
movl
int
insb
xor
jecxz
out
jne
ficompl
fistpl
in
adc
aaa
mov
sub
xchg
cli
xchg
pop
rorl
out
das
sbb
das
lea
mov
inc
xchg
test
cs
insl
or
repnz
sbb
xchg
dec
mov
lods
push
mov
out
push
cs
pop
jne
and
and
in
adc
hlt
xchg
cmp
ret
lcall
inc
fsubrl
xchg
adc
add
outsb
addb
sbbl
and
mov
push
xor
lds
sbb
inc
xchg
jno
orl
orl
dec
orb
mov
out
mov
repz
sub
ret
adc
sbbb
insb
sarb
inc
inc
mov
push
xchg
repnz
xor
orl
push
jae
movsb
mov
loopne
cmp
mov
in
pop
and
pop
xchg
xor
mov
fisttpl
hlt
fiadds
mov
mov
nop
mov
insl
push
cld
pop
jp
call
lea
adc
in
in
mov
jmp
insb
add
js
add
push
lds
aad
xchg
cltd
clc
mov
mov
mov
call
pop
mov
mov
jno
adc
add
rcl
inc
or
xlat
gs
call
mov
push
cmp
mov
addr16
mov
ret
mov
xchg
movsb
lods
mov
sbb
mov
hlt
shl
push
adc
ficoms
fistpll
xchg
or
and
sub
pop
and
je
dec
or
nop
cltd
stc
cmp
stos
push
xchg
mov
out
cs
aaa
pop
in
jbe
push
xlat
push
or
inc
mov
xchg
pushf
pusha
popf
stc
loope
mov
push
push
adc
xchg
jecxz
shr
andb
mov
push
push
call
dec
jnp
mov
lea
xchg
and
pushf
mov
std
popf
jg
cmp
push
push
add
and
ja
fistl
bnd
adc
or
dec
test
in
push
mov
loope
push
pop
add
seta
xor
das
stos
pushf
push
into
ljmp
inc
adc
imul
ss
push
iret
bound
iret
imul
test
mov
xor
cmc
flds
aam
push
or
add
mov
popa
into
fisttpll
int3
and
scas
mov
jmp
ja
std
push
dec
jns
cmp
mov
mov
lret
lea
xor
imul
cmp
mov
das
int3
sbb
sbb
mov
pop
repz
jp
cld
test
stos
mov
test
mov
xchg
fistpll
sbb
xchg
adc
fstp
cmp
popf
arpl
cmp
test
mov
fstps
loope
dec
jmp
mov
arpl
and
mov
xor
hlt
jmp
push
xchg
lahf
aad
inc
repz
cmpsl
dec
pushf
int
push
insl
int3
lfs
leave
pop
jnp
imul
movsb
add
test
mov
ret
outsb
inc
cmp
scas
stos
push
mov
int3
xchg
mov
scas
mov
xlat
add
cmpsb
mov
loope
jmp
push
nop
cmp
ret
cmp
imul
mov
jae
cmp
adc
lcall
out
fisttps
inc
or
cmp
add
mov
test
adc
jmp
test
mov
mov
repz
sti
data16
call
xchg
push
fnstsw
mov
sbb
into
pop
sub
pop
cmc
and
jne
xchg
or
push
dec
loop
lret
xchg
jp
and
je
lcall
ds
dec
in
loop
test
daa
dec
and
dec
add
adc
pop
dec
je
push
jbe
sarl
push
push
dec
sahf
mov
or
into
sbb
ljmp
mov
ljmp
scas
mov
test
inc
inc
cwtl
call
sub
in
sub
insb
xor
jge
mov
pop
xchg
mov
and
mov
adc
push
in
out
sbb
mov
jp
pop
lock
in
adc
loop
and
add
mov
mov
fcoml
cmc
out
sub
adc
mov
xchg
dec
jmp
cmp
cmp
in
sub
pusha
push
dec
adc
or
repz
jno
push
cmp
mov
push
lret
mov
cmpb
xchg
aas
mov
xchg
js
or
adc
push
scas
bound
ss
and
sbbb
stos
inc
cmc
cmp
imul
mov
orb
mov
std
js
jecxz
leave
fs
leave
aas
arpl
cwtl
jge
dec
xor
loop
std
sbb
enter
lock
mov
pop
call
lock
xchg
mov
push
repnz
push
cmpsb
mov
xchg
push
and
cwtl
push
xlat
insb
in
inc
int
and
mov
pushf
lock
pop
mov
mov
mov
sbb
loopne
les
movsb
sti
jmp
push
das
dec
ja
rorl
adc
push
cmpb
divb
jecxz
xchg
test
mov
and
icebp
mov
cmp
mov
mov
jae
inc
call
adc
xor
insl
jge
jle
out
inc
aam
out
int
out
mov
adc
or
bound
into
inc
aam
movsb
sbb
jne
adc
insl
fs
sti
mov
push
dec
inc
pushf
xchg
xor
sub
sbb
add
imul
in
pop
cld
hlt
es
xchg
lea
xchg
dec
inc
push
lea
out
and
mov
or
pushf
cmp
and
jbe
dec
adc
subps
add
cltd
pop
int
jge
xchg
aad
aad
add
ljmpw
xor
dec
xchg
mov
mov
push
jge
pushf
xchg
mov
push
jmp
ss
shlb
lcall
scas
sub
jecxz
mov
jp
clc
or
cmp
push
mov
xchg
mov
notb
std
push
loop
mov
xchg
xchg
jge
pusha
xor
nop
push
cmpsb
cmpb
push
cmpsl
hlt
xchg
mov
jns
ja
in
cmc
push
pop
xchg
clc
cmp
stc
gs
mov
xchg
icebp
inc
jne
cld
in
mov
fildl
sub
mov
ja
xchg
faddl
sarb
dec
test
pop
dec
xchg
xlat
push
test
or
mov
push
sbb
inc
das
movsb
lock
jp
fildl
insl
push
hlt
cltd
adc
cmpsl
sub
call
xchg
cwtl
inc
xchg
inc
notb
xchg
add
lahf
fs
push
mov
mov
lcall
fisttps
cmp
dec
mov
cmc
cltd
fcoml
pop
pop
inc
fdivl
daa
imulb
hlt
xor
enter
add
jmp
adcb
mov
cmp
addl
pusha
mov
dec
add
cld
stc
sbb
mov
adc
fdivrs
add
lcall
daa
and
sbb
lret
lret
std
nop
mov
imul
call
inc
test
cld
lock
fmuls
in
jnp
mov
xchg
jne
or
xchg
int
and
xchg
add
xchg
push
cmp
cmp
clc
cmc
mov
xchg
push
loop
rcrb
clc
add
movsb
xor
or
mov
lahf
rcll
sub
xchg
push
mov
sub
mov
mov
lahf
popf
sar
xor
cmp
mov
adc
jo
pop
mov
or
push
push
mov
repz
insb
sub
and
push
call
sbb
push
out
ret
sub
push
mov
push
dec
popa
iret
das
push
push
pushf
push
jns
out
push
mov
jl
add
call
sub
or
clc
dec
add
xor
neg
pop
cmp
or
idivl
mov
xor
lock
addb
mov
loopne
test
jae
mov
adc
mov
addb
cli
je
and
out
xchg
ljmp
push
mov
imul
dec
dec
jmp
repz
mov
mov
sbb
pop
call
movsb
insb
pop
std
mov
repz
xchg
sbb
paddsw
mov
ret
jne
call
outsb
call
push
lods
aas
scas
mov
fnstenv
xchg
fcomip
notl
push
lret
jae
xor
lods
push
in
loope
mov
sub
mov
push
pop
xchg
shrb
push
sbb
pop
std
das
mov
cmpsb
fmull
sbb
sbb
cltd
mov
and
enter
mov
outsl
inc
sbb
cwtl
cltd
and
xchg
add
repnz
mov
out
sub
test
pop
xchg
lods
sbb
xchg
in
push
push
xchg
pop
pushf
sbb
repz
in
jns
mov
jns
pop
fadds
stos
mov
data16
xchg
js
mov
inc
inc
mov
add
outsl
movsb
stos
add
push
jo
repnz
jl
push
iret
jg
adc
mov
pop
sub
insl
rorb
xchg
lahf
pop
mov
ret
sub
loop
jmp
mov
cld
pop
push
mov
adc
cmc
mov
int3
xchg
hlt
pop
mov
bound
loopne
push
xchg
lcall
scas
pop
lcall
insl
mov
lea
push
mov
outsb
adc
push
test
xlat
lcall
loopne
shrl
mov
mov
std
jb
add
sarb
xchg
sbb
xchg
xchg
jecxz
repz
lea
cltd
cmc
cmp
mov
xchg
loopne
and
xchg
out
inc
fwait
and
rolb
int
xchg
gs
jge
xchg
scas
jns
sbb
gs
fs
or
incl
dec
jecxz
test
fs
xchg
sub
imull
adcl
jecxz
lea
sbb
jnp
sub
jb
test
ret
cld
cmp
lcall
aaa
mov
xor
push
xor
cltd
fisubs
int3
adc
dec
subl
rolb
ljmp
mov
dec
inc
cmp
push
xor
pop
add
jnp
pop
sahf
scas
push
cmpl
fisubrs
shlb
mov
js
leave
dec
ret
fs
fwait
cmc
sub
inc
jae
popf
dec
out
pop
mov
aaa
pop
test
xorl
cmpsl
aad
inc
and
repz
sbb
pop
ret
call
mov
test
iret
or
pop
adc
mov
mov
jno
xchg
pop
jle
js
dec
lahf
and
pop
imul
lods
repnz
mov
mov
hlt
mov
into
push
loop
je
fcoml
add
mov
xor
ja
fisubrs
popa
jecxz
popf
cld
adc
sarb
lea
mov
iret
push
das
ftst
lret
aas
ja
xchg
pop
xor
push
xchg
fistpll
sub
lock
push
test
aaa
or
sti
shrb
aas
out
orl
or
pop
lret
dec
jns
xchg
filds
mul
lcall
sub
jg
dec
aam
push
enter
xchg
cli
out
fimuls
sub
mov
xchg
pusha
add
popa
jne
mov
mov
mov
gs
cmc
jae
dec
arpl
aam
pop
sti
and
pusha
iret
and
push
add
jo
dec
out
mov
mov
pusha
fwait
sar
in
xor
push
push
or
push
aaa
adc
mov
mov
add
cld
stc
in
rclb
push
clc
loop
cs
mov
inc
xor
mov
enter
push
pop
dec
xchg
scas
sub
pop
repz
xchg
in
xor
mov
mov
cmp
xchg
sti
or
pop
cld
mov
mov
lock
dec
dec
mov
jbe
lcall
xchg
mov
mov
mov
repz
ja
xor
mov
or
nop
sti
lea
mov
jae
mov
lods
int3
hlt
mov
add
jle
dec
jbe
imul
stos
out
data16
mov
sub
adc
outsb
shrb
add
dec
inc
pop
pop
lcall
inc
mov
inc
fcoml
xchg
fdiv
mov
cld
sub
clc
mov
stos
lods
test
jne
lcall
pop
mov
cmc
push
test
scas
bound
xor
fistpll
insb
fwait
out
arpl
mov
shrl
adc
imul
subb
mov
addr16
int
push
pop
mov
sub
int
jbe
sub
add
pop
test
repz
cmpsl
or
mov
sbb
jb
jnp
stc
and
cmp
arpl
or
sbb
sti
sti
pusha
loop
cmp
js
inc
aas
pushl
jge
popa
out
xchg
mov
ja
mov
shlb
or
inc
call
ret
fdiv
mov
rcr
lods
mov
fistpll
pop
xchg
mov
arpl
nop
dec
in
test
adc
mov
shl
imul
mov
lret
outsl
dec
mov
pop
loop
call
xchg
and
fstpt
sub
xchg
cmp
xor
jl
jns
mov
aam
xchg
inc
outsb
cmp
lea
dec
xchg
dec
in
hlt
or
xchg
imul
loope
test
mov
sub
scas
call
bound
fisttps
dec
movsb
xor
mov
or
jnp
movsb
arpl
xchg
dec
loop
dec
iret
lcall
fiaddl
fwait
xchg
lods
xor
adc
adc
nop
dec
aaa
sbb
jmp
adc
xchg
dec
dec
movsb
or
and
and
jns
lods
nop
stos
jo
mov
pop
ficoms
ja
mov
nop
ljmp
add
lea
pop
loopne
mov
pop
clc
ja
jmp
jl
inc
movsl
repnz
test
or
add
push
sbb
dec
push
or
jcxz
pushl
add
ficompl
dec
icebp
fldl
nop
in
stc
push
xchg
stc
inc
jg
cmc
jg
xchg
cld
scas
xlat
mov
add
jle
sub
fiadds
fidivs
push
pop
aaa
push
sub
enter
xor
cli
out
loopne
mov
pop
mov
movsb
mov
call
pop
jp
cli
mov
xchg
cltd
inc
jae
aaa
mov
clc
and
jbe
xor
pop
pop
xor
lret
lods
xchg
ss
int3
lret
inc
sbb
push
lcall
psubb
pop
rol
jl
rolb
sub
xlat
mov
popf
xchg
ret
iret
scas
mov
pop
rcll
cmp
sahf
shl
xchg
mov
sub
jp
lea
test
mov
pop
in
rorb
pop
lods
xchg
loopne
subb
test
mov
push
jge
and
cli
xchg
push
out
aad
nop
cld
popa
cli
in
add
enter
pop
cmc
pushf
cmp
sbb
in
dec
jbe
xlat
fs
loopne
out
mov
je
pop
xchg
scas
xor
xorl
xchg
or
jp
cmp
mov
xlat
mov
das
push
cmp
and
sub
call
xchg
test
cmp
mov
cmc
popf
outsb
sbb
cmc
cmp
in
inc
aam
inc
rclb
push
stc
xchg
loopne
imul
xchg
or
push
nop
mov
xchg
dec
sub
xlat
add
ja
and
cltd
bound
xchg
stc
addr16
mov
xchg
lea
xchg
pushf
in
repz
sub
stos
dec
ret
out
iret
cld
lods
xchg
rorl
mov
pop
sub
cwtl
push
hlt
inc
les
xchg
and
push
cmc
cmp
mov
addb
pusha
iret
loope
sbbl
mov
mov
or
je
sbb
pushf
rorl
adc
jbe
pop
sub
stc
sbb
cld
sbb
adc
sahf
test
xchg
fistpl
mov
shll
mov
hlt
dec
sbb
xor
jmp
adc
dec
hlt
ja
out
arpl
aam
test
jne
cmpsl
pop
add
jmp
pop
xor
fdivrs
loopne
dec
lahf
notl
push
dec
movsl
mov
xor
jecxz
sarl
repz
cmp
imul
and
sub
jge
jbe
loop
orb
bound
sub
out
cmpl
sbb
pop
arpl
addl
pop
dec
mov
dec
in
cmc
aas
cmpsb
enter
imul
adc
test
and
pop
xor
dec
jp
jae
push
fldt
and
xor
cli
adc
int3
std
mov
xor
cld
cli
stos
andb
mov
add
std
shl
stc
jb
cwtl
cmp
test
ficoml
mov
test
ja
xchg
data16
pop
call
je
in
jp
in
stos
enter
fdivrl
fnsave
mov
and
push
stos
je
insl
popa
cltd
fstpt
xchg
xchg
xchg
test
sarb
and
test
inc
cltd
mov
jnp
cmc
xchg
scas
bound
enter
int
aas
aaa
sbb
push
sbbl
imul
dec
in
sahf
outsl
mov
adc
and
aaa
jnp
arpl
inc
mov
test
adc
pop
loope
aaa
loopne
cmp
dec
jne
arpl
cli
mov
hlt
push
mov
in
lret
stc
in
js
ljmp
cmc
sti
xchg
pop
inc
xor
mov
sti
cld
in
scas
mov
ds
pop
repz
jmp
js
pop
xchg
fwait
adc
shr
mov
add
push
push
cli
sub
dec
mov
orb
xchg
cmp
mov
test
lods
pop
mov
rolb
mov
sbb
sarb
dec
cs
movsl
orb
ret
dec
mov
iret
repz
mov
mov
unpckhps
loopne
fimull
int
xchg
fwait
sbb
fidivl
andl
xor
cld
sbb
mov
xchg
pop
loop
or
fsubr
call
or
out
cmp
adc
movsb
sbb
push
stos
decl
fnstcw
dec
sbb
jb
mov
inc
add
in
xchg
lcall
cmp
repnz
pop
push
cmp
movsb
dec
mov
inc
loop
cwtl
jb
rorl
xchg
push
daa
dec
and
testb
xlat
movsb
xchg
aas
outsl
popf
or
aas
xor
inc
and
mov
int3
fwait
arpl
flds
or
test
inc
pop
pop
or
mov
iret
inc
pop
inc
adc
out
adc
imul
jo
sti
outsb
and
push
adc
xchg
dec
cwtl
sub
mov
out
repz
stos
mov
add
dec
sbb
add
pusha
sbb
cli
jo
adc
sub
in
icebp
sbb
dec
fwait
jno
movsl
push
pusha
loope
jle
sti
jle
and
inc
inc
sbb
int3
loopne
addr16
cmp
out
push
sub
add
cmp
adc
dec
call
in
in
iret
es
and
sti
mov
mov
xor
xor
fwait
mov
mov
xor
data16
lahf
cmc
gs
clc
sarl
jb
mov
call
mov
jg
bound
jl
and
aaa
pusha
loope
rcrb
push
mov
shrb
adc
into
ss
inc
jne
mov
push
dec
mov
mov
jbe
add
aad
jmp
cmpsb
mov
adc
jmp
and
pop
mov
push
jbe
adc
pop
xchg
and
roll
push
nopl
popa
jnp
dec
add
call
pop
loop
repnz
scas
pop
add
mov
jb
call
adcb
dec
test
jp
sarb
xchg
jecxz
adc
push
mov
bound
aas
cwtl
shr
lea
in
out
data16
ret
and
aam
out
xor
add
loop
add
idivb
lret
stos
shrl
mov
push
mov
shlb
movsb
inc
mov
aad
mov
fadds
jp
push
ds
sbb
jbe
sbb
and
lock
mov
sub
sub
aaa
pusha
mov
cmp
jle
and
or
push
repnz
shl
sbb
fcmovu
ja
hlt
test
popa
xchg
rclb
cli
ret
jae
mov
push
add
push
mov
in
icebp
shlb
mov
in
pop
push
sub
mov
add
push
mov
in
push
fs
shrb
loope
fs
imul
lea
mov
jle
mov
mov
sub
in
xor
movsl
mov
clc
dec
inc
repz
cmp
ljmp
stos
jecxz
xor
in
xchg
imul
sahf
or
cmc
or
lock
sub
in
pop
lock
test
fcmovnu
or
fstl
jge
out
cltd
in
pop
daa
adc
subl
daa
mov
loop
aaa
mov
adc
repnz
cmp
sahf
push
dec
pushf
mov
sub
mov
cld
jle
xchg
fists
xchg
jl
lcall
ljmp
in
imul
xchg
in
push
adc
sub
xchg
push
cmc
xchg
bound
dec
pop
popf
mov
mov
mov
cmp
sbb
imulb
mov
cmp
movsb
xchg
sub
inc
push
call
std
jp
mov
dec
notl
cmpsb
dec
sbb
and
out
inc
in
arpl
pop
fwait
xor
dec
xchg
xor
dec
pushf
inc
arpl
gs
xor
mov
jp
xchg
jae
xchg
mov
sub
or
rcr
sahf
sub
push
or
loop
or
and
push
mov
test
mov
outsb
adc
sbb
pop
or
mov
sbb
or
jle
call
pusha
xor
test
push
out
mov
loope
lods
sbb
or
lds
dec
xchg
xchg
scas
lock
scas
adc
jne
jnp
je
pop
popa
inc
lea
jecxz
lods
adc
lods
jno
lahf
mov
and
shl
jne
sub
dec
aaa
dec
ret
fstl
inc
hlt
jge
mov
lcall
sbb
out
or
fdivs
es
out
fwait
xchg
je
jbe
cmp
mov
das
stc
mov
xchg
dec
and
mov
cmp
sbb
fldenv
in
mov
and
test
ds
in
dec
fcomps
loope
jne
cmpsl
jmp
jmp
push
pop
out
in
mov
fisubrs
in
push
cli
dec
jecxz
dec
mov
je
sbb
xchg
dec
movsb
mov
nop
push
clc
loope
lret
or
aas
lret
jl
hlt
rolb
dec
dec
lods
daa
insl
out
adc
dec
stos
cli
insl
push
sti
lea
test
dec
cwtl
or
in
andl
sar
shll
mov
outsl
call
std
mov
fldl
push
scas
addr16
outsb
inc
jge
cwtl
and
shlb
out
mov
idivb
movsl
fucomip
scas
xchg
insb
outsl
xchg
xchg
mov
test
sub
add
mov
in
in
sub
stos
xor
mov
add
rorl
xchg
movsl
shrl
fmuls
repnz
fdivl
mov
hlt
adc
mov
out
mov
jl
out
jae
jmp
xchg
jbe
push
outsb
sahf
movsb
mov
movsb
pop
adc
inc
sbb
cmpsb
xor
ljmp
lods
or
decb
dec
pusha
es
clc
or
cmpsl
sub
fwait
andl
sbb
or
sub
xor
xor
push
xchg
jp
xor
js
inc
clc
insl
sbb
mov
push
xchg
xor
pop
push
and
mov
pop
sti
lds
imul
jmp
outsb
sbb
inc
bnd
and
bound
xchg
popa
mov
movsl
cltd
aas
outsb
xor
mov
dec
hlt
xchg
cmc
mov
dec
add
sti
mov
jge
adc
loope
insb
fdivr
repnz
mov
xor
jae
cltd
mov
jecxz
lret
ldmxcsr
sbb
cmp
jbe
ss
inc
or
je
clc
adc
outsl
or
xchg
pop
cmc
sbb
mov
lcall
cmc
aaa
lcall
mov
sub
int3
or
bound
push
push
shlb
inc
pop
pusha
sub
cmpsl
xchg
iret
fnsave
jle
mov
dec
cld
shrl
push
cld
ss
out
stos
lods
xor
je
icebp
mov
sbb
notb
add
je
stc
cmp
je
scas
pushl
inc
or
rolb
loope
std
mov
pop
mov
imul
pushf
mov
push
sub
mov
pop
sub
jno
repnz
mov
mov
add
fpatan
pop
jb
lret
xchg
dec
push
inc
fldl
data16
scas
dec
mov
imul
imul
mov
arpl
sub
or
push
add
mov
mov
rcl
or
cmp
push
idivb
sub
lahf
push
xlat
aad
dec
mov
adc
xchg
ss
das
xchg
lcall
sub
add
arpl
scas
or
pop
mov
repnz
xchg
pop
and
lea
test
dec
mov
mov
sbb
mov
adc
sarl
call
cli
push
out
rcr
orb
adc
pslld
flds
mov
xchg
inc
fld
fbstp
xor
int
cmp
lahf
mov
loopne
mov
xchg
mov
idivl
pop
shlb
pop
nop
jb
leave
adc
push
jg
repz
cwtl
add
add
mov
jae
lods
scas
or
ret
dec
pop
addr16
lods
xchg
scas
jne
push
divb
imul
cmc
or
in
addb
dec
xor
aam
lds
int3
popa
xchg
mov
hlt
out
in
push
push
gs
orl
cmp
mov
inc
dec
loopne
rclb
jnp
xchg
mov
pop
stos
xlat
sbb
cmpsl
jge
test
into
addr16
fwait
rorl
sbb
arpl
shlb
cmp
mov
cmp
dec
xchg
shll
dec
nop
mov
jo
dec
jo
inc
jo
cld
jo
lods
ret
les
sub
aam
arpl
xchg
repz
dec
dec
sub
or
add
lahf
lds
test
push
jns
out
jle
pop
mov
mov
xchg
iret
popl
repnz
ficoms
sub
andl
or
jbe
xchg
dec
push
pop
and
cmp
repnz
fdivrs
das
data16
jecxz
mov
lret
enter
popf
mov
xchg
inc
test
xor
xchg
call
lret
mov
cwtl
mov
cmp
idivl
in
mov
stc
out
movsl
fs
fdivl
mov
mulb
fsubrp
cli
xchg
fs
push
loop
jmp
fists
fs
jbe
daa
shlb
xchg
sub
pop
add
ljmp
jb
int3
movsl
scas
fcomip
leave
fstpt
xchg
lods
xchg
mov
int
iret
out
or
fisttps
ror
je
xchg
dec
add
mov
inc
dec
rcr
fs
scas
xchg
into
mov
andb
dec
aaa
repnz
cld
in
xchg
push
out
push
js
pop
fcompl
addr16
dec
imul
push
lret
push
xor
or
sub
int
xor
jns
mov
pop
fwait
call
in
in
xchg
lock
ljmp
bound
ds
aaa
cmpb
int
xor
xor
adc
or
test
stc
adc
ja
rcrb
scas
or
adc
ja
push
sti
cli
cmp
bound
xorb
loop
jmp
push
or
in
jae
fnstcw
enter
cmp
imul
xchg
xchg
orb
das
inc
cmp
dec
stos
push
and
jo
mov
clc
adc
mov
call
pop
insl
and
das
mov
loopne
xchg
test
dec
xor
dec
std
cmp
push
lcall
je
fs
mov
ss
adc
fildl
xchg
lahf
mov
mov
mov
cmc
imul
or
and
out
pushl
js
mov
mov
jp
xchg
lahf
inc
adc
dec
add
push
dec
pop
sub
call
sti
stos
popf
imul
mov
fimuls
bound
xchg
pmuludq
and
lahf
push
mov
cld
gs
popf
mov
lods
mov
dec
leave
stos
adc
orb
mov
xchg
xchg
aam
jo
mov
pushf
add
pop
mov
mov
test
cmp
mov
sub
ds
dec
dec
ss
dec
mov
stc
or
repz
inc
rorb
push
pusha
cltd
repnz
push
jnp
dec
and
cwtl
dec
pusha
aam
mov
test
je
les
out
xchg
js
int3
aad
bound
mov
popa
mov
sbb
cs
mov
and
mov
jne
ret
xchg
and
push
jns
lcall
out
inc
xchg
stc
movsb
xchg
dec
add
dec
or
lods
pop
or
adc
es
mov
cmpsl
shrb
mov
push
pop
jg
sahf
and
sbb
mov
insb
dec
popa
rorb
repz
roll
jo
xor
mov
test
sub
adc
xchg
es
cmpl
xchg
push
mov
pushf
fisubs
mov
inc
jo
adc
mov
stos
idiv
mov
dec
dec
rclb
jmp
fimull
cmp
xchg
mov
or
sahf
jne
xchg
dec
jnp
insb
jp
push
loop
push
movsl
jl
dec
mov
cli
bound
xor
pop
and
sbb
loop
adc
iret
es
rclb
xor
adc
mov
inc
xchg
ja
shll
fisubrl
push
lret
mov
push
movsl
gs
mov
rol
shrb
hlt
mov
icebp
sbb
adc
bnd
xchg
mov
psrlq
inc
adc
lret
mov
fmuls
orb
clc
orl
xchg
jl
xor
rol
inc
dec
jbe
jmp
ja
daa
icebp
daa
in
pop
push
lret
or
stos
std
xchg
je
xchg
int3
mov
repz
std
push
sub
movsb
adc
pop
bound
std
inc
loop
sbb
idivl
out
xor
mov
add
xchg
js
cmp
cli
mov
in
and
sbb
inc
pop
scas
mov
jle
pop
adcb
dec
popa
nop
mov
push
fadds
mov
pop
jg
insb
push
leave
lea
addr16
cwtl
in
pusha
push
les
mov
insb
in
shlb
inc
dec
sahf
inc
xor
adc
fwait
int
mov
fwait
jg
mov
fcompl
sub
enter
icebp
sub
js
rcll
dec
fimuls
scas
sub
idiv
and
jl
sahf
pop
or
mov
cmpsb
inc
mov
add
incl
fwait
int
and
nop
mov
int3
sbbb
js
or
movsb
fcoml
add
cmp
hlt
jle
mov
sahf
mov
ret
scas
repz
push
mov
stos
dec
nop
adc
out
xor
fwait
in
test
sub
dec
out
push
xor
mov
cmpsb
and
jl
fstpt
in
xchg
and
sarl
ret
or
outsl
jp
lock
inc
int
sahf
xchg
pop
fwait
ror
dec
movsl
dec
xor
out
js
and
mov
arpl
xor
adc
mov
jb
sbb
loop
and
test
dec
sub
aaa
lds
jl
jne
inc
popa
in
out
aam
out
in
mov
sbb
sbb
std
lahf
mov
stos
add
sahf
xor
aam
inc
jae
sub
sahf
ds
dec
cmc
int3
arpl
jne
and
lds
push
stos
lret
aad
dec
add
rorl
std
jmp
sahf
jbe
mov
gs
pop
aad
sub
inc
pop
mov
sub
test
addl
push
stos
add
dec
into
pop
push
orl
mov
hlt
xor
std
mov
cli
inc
mov
xchg
pop
cli
xchg
push
fists
and
jle
packssdw
xchg
stos
dec
daa
test
insb
ficomps
sahf
lret
mov
insl
pop
xchg
jmp
jns
std
popf
fwait
pop
xchg
gs
xor
adc
and
or
out
fistps
arpl
push
pop
enter
adc
push
xorb
xchg
jno
jmp
je
sub
adc
lds
push
xor
xchg
out
sbb
jg
loopne
mov
push
insl
mov
movsb
stos
push
stos
dec
jno
pop
pop
inc
cmp
cmp
movsl
or
adc
test
inc
mov
mov
pusha
cld
addl
lret
mov
pop
pop
pop
sbb
mov
stos
ljmp
cltd
or
mov
pop
add
mov
adc
mov
mov
arpl
jnp
stos
cmp
das
dec
out
jmp
xchg
and
outsb
ss
rcll
mov
sahf
push
fmull
mov
in
repnz
adc
or
sub
xlat
mov
addb
stos
push
pushf
add
ror
mov
dec
outsl
dec
mov
jmp
xchg
pop
sahf
stos
ja
fisubs
into
ljmp
test
rorb
stos
fldl
test
lret
dec
sbb
jg
lahf
rcll
or
adc
loopne
lock
xchg
dec
and
jge
outsl
test
lea
pop
aad
sub
clc
subb
add
dec
outsl
xor
add
mov
data16
pushl
rorl
sbb
fidivrl
add
inc
cli
jp
push
and
dec
fdivrs
scas
popf
nop
push
aaa
in
out
mov
sti
push
dec
gs
mov
ret
xchg
sub
sub
ds
dec
cld
daa
in
mov
xor
adc
notl
dec
cwtl
das
pusha
ret
movsb
inc
jge
sti
push
inc
lret
in
jae
push
and
xor
lcall
and
sub
mov
leave
jp
pop
adc
push
xchg
cmp
mov
sub
dec
jo
push
and
adc
mov
dec
and
lds
out
xchg
cwtl
push
pusha
outsb
rolb
jb
push
push
in
repnz
cmp
push
aad
fs
movsl
cmp
mov
sahf
inc
fstps
xchg
cmpsb
sub
fimull
xchg
lods
test
mov
pop
packssdw
push
push
mov
add
fwait
rcr
mov
mov
out
jne
sub
aaa
lea
adc
xchg
ret
fistl
mov
popa
or
sub
mov
lods
cmp
sbb
push
pushl
das
dec
insl
insl
pop
shl
dec
ja
jl
or
ljmp
arpl
xor
xlat
ret
push
mov
leave
adc
or
xor
gs
stc
ljmp
dec
push
push
mov
sub
leave
in
mov
int3
int
js
push
xchg
addr16
clc
dec
repnz
lea
fimuls
jae
decb
shlb
ljmp
loop
add
dec
xor
jp
out
mov
push
mov
jecxz
mov
test
pop
push
test
orb
mov
movsb
test
fs
dec
mov
dec
jae
xlat
pushf
push
insl
dec
push
out
addr16
xchg
dec
fcoms
hlt
fucomp
sbb
dec
pushf
ljmp
cmp
repz
xchg
adc
xlat
out
mov
mov
fs
cwtl
mov
pusha
mov
bound
loopne
jne
ja
insb
repnz
push
in
inc
adcl
call
add
sahf
in
and
insl
push
pop
les
divb
insb
mov
xlat
ret
in
push
clc
sub
mov
dec
mov
nop
idivb
xchg
call
pop
ljmp
push
xor
in
rcrl
cld
insb
arpl
add
mov
mov
addl
cmp
dec
xchg
out
inc
sti
pop
fs
iret
lods
imul
mov
mov
xchg
sub
shl
adc
hlt
aad
rolb
xchg
incb
sahf
ret
mov
push
jge
sbbl
shll
cwtl
xchg
push
loopne
jle
sub
jp
movsl
or
xor
sbb
ljmp
ss
xchg
sub
nop
jge
xchg
jecxz
nop
into
insb
sbb
lret
int3
stos
fstpt
ljmp
push
jbe
rol
cld
cmpb
jb
adc
icebp
mov
out
loope
movsl
and
in
push
push
cmp
les
jnp
rcr
in
mov
xchg
stos
std
adc
scas
jb
test
fbld
adc
sahf
xchg
mov
arpl
call
jp
adc
rorl
pop
mov
mov
xchg
xchg
inc
in
push
jle
out
push
mov
aad
test
mov
dec
dec
es
movsb
mov
sbb
out
jo
pop
repz
ret
mov
and
jnp
xchg
adc
xchg
je
dec
lock
je
pop
ja
fcmovnu
push
push
popf
xchg
mov
dec
jb
push
cmc
mov
mov
cld
fimull
test
lret
es
notb
mov
xor
iret
dec
mov
sbb
fisubs
ficoml
js
enter
repz
dec
stos
daa
adc
jl
adc
mov
pop
hlt
cld
sub
lahf
push
push
fwait
mov
dec
not
and
fistps
pop
popf
cltd
aas
mov
mov
cmpsl
in
mov
mov
push
mov
adc
popa
ds
imul
push
inc
scas
lret
and
dec
ljmp
mov
sub
call
jns
movsl
jae
mov
cltd
clc
push
mov
test
dec
call
inc
mov
push
pop
mov
sub
in
iret
mov
test
pusha
xchg
dec
fnstenv
pop
push
fdivr
xchg
out
cmp
and
and
lock
mov
dec
adc
xchg
ret
test
dec
lods
add
jle
test
in
arpl
push
out
jp
movsb
or
cwtl
xchg
mov
hlt
fsubrl
mov
jecxz
rolb
iret
and
add
and
mov
mov
div
pcmpgtd
cwtl
aam
jno
or
lret
add
in
cltd
xchg
bnd
in
jbe
sbb
jnp
mov
fcoml
mov
aaa
push
andl
xchg
dec
psubsb
std
push
arpl
and
mov
dec
mov
or
incl
mov
jge
and
into
dec
mov
lret
jge
push
jo
mov
xor
push
jge
dec
std
dec
ds
cld
add
outsw
jp
aaa
leave
or
lahf
rcrb
nop
pushf
xchg
jo
fisubrl
addl
les
mov
repz
mov
and
adc
cmp
mov
dec
outsl
pusha
movsb
or
outsb
nop
arpl
push
loope
in
jnp
inc
sub
add
pushf
fidivrl
xor
mov
stc
cmpsl
nop
mov
cli
es
inc
dec
xchg
rcll
mov
jle
arpl
xchg
jle
aam
movl
mov
mov
lldt
add
pushf
testb
addr16
into
rorb
cmp
in
mov
leave
outsb
into
mov
movsb
insb
cld
test
lods
addr16
xchg
jmp
add
inc
adc
es
mov
inc
inc
push
pop
xchg
pop
dec
or
loop
xchg
mov
xchg
addr16
mov
jmp
out
xchg
mov
jge
pop
je
sar
ss
add
std
mov
insb
sbb
insb
loope
add
sbb
mov
jo
sub
lods
mov
cmpl
imul
pop
cmc
imul
inc
icebp
dec
mov
int
sub
cmpsl
ret
and
fsubrl
lods
js
js
faddl
out
sub
js
mov
pop
xchg
je
cmp
fs
jns
insb
int3
sahf
and
cmp
movsb
or
and
cmp
stc
lods
sbb
int
nop
inc
bound
mov
adc
imul
inc
jns
jle
mov
pop
cld
sub
test
fs
pop
dec
mov
mov
dec
gs
gs
lahf
pop
dec
lock
insb
lret
sbb
movsb
cmpsb
shrb
in
sahf
div
push
jne
jg
dec
and
xlat
push
push
mov
sahf
mov
outsb
lret
stos
stos
je
lcall
inc
mov
push
pop
stos
fidivl
es
mov
jl
or
stos
add
int
mov
mov
jmp
sub
mov
dec
fwait
jne
cmp
xchg
ret
xchg
mov
insb
pop
scas
psubd
dec
pop
push
sbbl
add
jp
xchg
pushf
sub
jbe
imul
xchg
orl
mov
mov
test
inc
adc
jmp
jecxz
cltd
or
pushf
push
decb
jecxz
inc
cmc
stos
mov
cli
xchg
fnop
js
hlt
mov
orb
gs
shlb
ja
jbe
xchg
sarb
inc
cli
out
cmp
leave
arpl
fcmovnb
push
subl
imul
mov
or
dec
aam
idiv
or
imul
test
roll
lods
xchg
leave
pop
sti
scas
repnz
insb
dec
xchg
nop
dec
dec
mov
add
xchg
and
clc
xchg
psubsw
shl
movsl
inc
sub
pop
sub
jns
cmp
jp
out
fadds
out
and
lret
icebp
lea
pop
lret
xchg
enter
or
xlat
cld
mov
insb
bound
sbb
lahf
push
ljmp
aad
ffreep
mov
out
or
xchg
loop
or
mov
push
sub
jno
sbb
add
lods
xchg
cmp
shrb
lret
data16
mov
dec
xchg
mov
add
mov
pop
pusha
les
mov
mov
mov
add
mov
cmp
fnstsw
cmp
mov
lods
lcall
sbb
mov
ljmp
or
sub
mov
daa
fnsave
sbb
ret
daa
adc
fsubl
pop
cwtl
mov
cli
and
fdivrs
push
dec
pop
int3
sub
cltd
pop
rorb
jbe
loop
adc
pop
mov
jns
dec
xchg
xor
loop
stc
mov
sbb
cmp
add
out
bnd
dec
sbb
mov
jg
jmp
push
and
in
xchg
push
jmp
dec
mov
rcr
cmp
pushf
push
inc
adc
insl
adc
add
jo
test
loop
negb
lods
mov
or
roll
sbb
pop
test
cs
jmp
xchg
cli
jne
mov
add
ret
adc
in
mov
cmpsl
dec
jbe
dec
and
mov
call
lahf
outsb
adc
jae
int3
mov
shlb
insl
imul
adc
ret
sub
lahf
cmpsl
bound
adc
mov
daa
add
in
inc
fldenv
dec
xchg
xchg
scas
mov
stc
fwait
or
cmp
mov
adc
xchg
out
stos
xchg
and
sti
mov
into
rorb
fmul
mov
push
pushf
lahf
jmp
jge
rcl
out
jbe
test
jbe
pop
fs
jo
cli
sti
cmpsw
je
mov
sti
inc
incl
inc
sbbl
add
hlt
adc
sahf
pop
mov
outsl
xchg
add
je
sbb
inc
les
sbb
xor
cmc
inc
dec
add
xchg
enter
pushf
ds
pop
jae
lret
add
xchg
and
andl
pop
ret
jns
ljmp
jmp
repz
adc
mov
cltd
mov
push
ret
mov
jb
test
mov
xor
xor
mov
loopne
sbb
nop
mov
jg
adc
inc
fmull
dec
mov
mov
lods
xchg
div
clc
mov
xchg
js
jle
bound
xchg
bound
mov
pop
lcall
mov
jnp
jne
push
adc
cmp
dec
xchg
mov
repnz
out
imul
test
mov
mov
loop
mov
test
mov
iret
int3
mov
outsb
movsb
mov
ror
cld
sbb
push
mov
cltd
mov
jmp
xor
push
outsb
jmp
sub
mov
je
incb
mov
xchg
lret
mov
pop
aam
jmp
mov
xchg
jge
xchg
pop
sub
adc
jne
test
jl
push
xchg
xlat
sub
lcall
aaa
roll
mov
pop
jmp
inc
dec
icebp
jmp
mov
test
insl
and
xor
fdivl
mov
push
subl
hlt
leave
ljmp
pushf
xlat
add
aad
ljmp
and
aam
jg
mov
mov
jge
loop
xor
lods
xchg
fnstenv
push
lods
xor
jbe
mov
bound
cmp
shrl
cltd
fcomps
es
fcomip
sub
mov
test
shr
aaa
cmp
ljmp
inc
fbld
dec
aaa
mov
mov
dec
cmpsb
movsl
pusha
ds
push
stos
sub
mov
add
xchg
mov
push
iret
ret
pusha
mov
and
mov
dec
sarl
insl
rorb
jecxz
sub
repz
mov
pop
pop
movsl
push
fiadds
inc
lods
adc
pop
lds
add
xchg
mov
ja
jnp
shl
dec
fnstenv
scas
sub
fsubrl
mov
add
arpl
xor
pop
cmp
insl
sub
jb
pop
sbb
jp
mov
imul
mov
sub
out
adc
imulb
enter
shlb
sub
xlat
push
xor
push
cmp
adc
ret
xchg
dec
fdivl
mov
add
mov
push
cmp
dec
rclb
sub
fdivrl
outsb
mov
add
or
xor
mov
pushf
std
pop
fwait
pop
out
or
ds
sbb
ja
scas
inc
push
aaa
xor
mov
movsl
mov
pop
shll
aas
mov
mov
mov
pop
ljmp
aad
ss
or
jl
or
jge
cld
out
aad
fwait
mov
xchg
lds
and
jne
pop
bnd
test
dec
pop
cwtl
push
pop
shlb
jge
je
repnz
lds
xchg
push
mov
movlps
scas
mov
lret
pop
popf
or
fs
sub
cli
fwait
lcall
lods
adc
leave
les
fwait
fs
xlat
int
in
into
mov
mov
or
dec
fnsave
outsl
dec
inc
cmpsl
push
xor
cmc
lea
clc
ja
jge
sub
inc
loope
addr16
sub
dec
int3
push
movsb
mov
dec
jge
pop
cmp
lcall
mov
pop
add
stos
shl
movsb
int3
loopne
fistpll
daa
push
push
jno
ljmp
xor
fxch
rclb
xor
sbb
jl
les
popf
js
xchg
push
out
data16
in
sahf
push
xchg
adcl
push
inc
jae
inc
mov
leave
xor
sub
ficoms
out
int
loop
pop
add
arpl
xchg
mov
sub
popf
pop
mov
out
jle
cli
sub
push
inc
cmpsb
mov
iret
jno
ss
mov
out
test
mov
in
mov
cmpsl
pop
cwtl
mov
int3
push
mov
mov
fdivs
shll
and
xchg
mov
xchg
movsl
mov
mov
add
fdivrl
in
jmp
stos
shll
repz
test
xchg
cmpsb
lret
and
stos
mov
lock
dec
mov
dec
or
or
add
lea
jns
pop
mov
mov
xchg
and
xchg
fiaddl
cmpl
jae
stos
loop
sbb
pushf
cmp
push
lahf
dec
pop
mov
cli
nop
xor
push
push
add
dec
dec
neg
popf
dec
pop
fdiv
dec
or
and
call
lea
lret
leavew
and
sub
pop
gs
fistpl
sub
stos
cld
fwait
xor
push
stc
dec
xor
push
cmp
aaa
add
dec
sub
mov
sub
int
inc
sub
fadds
leave
lea
sub
add
or
cmp
fstpt
mov
fwait
push
in
cmp
push
mov
push
sbb
pop
add
dec
or
push
mov
or
sub
jge
sbb
add
inc
sbb
nopl
mov
mov
leave
inc
testl
hlt
leave
jb
sbbb
push
insb
inc
stos
adc
sbb
lds
test
inc
xor
dec
pop
mov
add
push
adc
jbe
in
test
and
outsb
subl
stos
fs
xchg
add
inc
mov
lock
sbb
xchg
mov
push
test
scas
push
sbb
push
fisubs
aam
mov
jo
xlat
daa
xor
pop
rcrl
outsl
push
mov
sub
xchg
add
sbb
mov
cs
push
movsb
out
ficompl
or
sbb
movsb
fcmovnbe
push
bound
mov
pop
push
jbe
xchg
nop
lock
in
mov
xchg
mov
or
arpl
pop
jb
stos
mov
jno
mov
lret
and
cmpsb
sahf
mov
pop
movsb
ret
dec
dec
pushf
gs
je
or
mov
pop
loop
push
mov
repnz
mov
xchg
insl
add
xor
aam
hlt
sub
insb
outsb
push
ret
pusha
mov
shlb
or
lods
jmp
imulb
push
out
adc
add
shl
js
jp
icebp
push
int
aad
lret
ret
mov
aas
dec
lea
mov
loop
or
int3
in
cs
mov
in
inc
aam
into
jnp
xchg
mov
rol
dec
movsb
push
adc
lods
addb
out
push
test
insl
jne
loop
js
fimuls
popf
mov
stos
mov
push
push
inc
lods
rolb
lods
or
jnp
fldt
pop
dec
xor
push
inc
inc
cmp
push
movsb
lcall
mov
dec
ljmp
sub
mov
popf
xchg
cmp
into
int3
out
inc
fs
ficoms
and
out
das
xchg
js
cmpsl
inc
scas
add
jle
adcb
add
jo
and
dec
mov
fidivl
ja
test
shrb
in
inc
jnp
mov
cmpsb
adc
xorb
popf
repnz
and
rcll
mov
mov
mov
test
loope
or
mov
lock
in
xchg
mov
cmpsb
data16
fs
cwtl
jo
jmp
mov
mov
outsb
mov
dec
xchg
cs
gs
mov
outsl
xchg
int3
ret
fidivrs
lock
dec
mov
or
jp
les
lods
roll
xor
into
jnp
es
lret
scas
hlt
xchg
pushl
out
dec
arpl
repz
test
xchg
ss
mov
ljmp
clc
mov
in
pop
mov
lret
dec
xor
adc
divl
push
fs
shll
xor
mov
cmp
sub
cmp
out
cwtl
loope
dec
xor
int
add
scas
jae
dec
loop
out
push
xchg
xor
loopne
sahf
ret
sbb
and
aaa
mov
aam
cmovl
jp
jle
cmp
addr16
je
repz
adc
movsl
lods
in
xor
xchg
jl
aaa
addr16
mov
adc
push
adc
mov
xor
xchg
fucom
inc
jbe
loop
ficoml
fists
pcmpeqw
mov
movsb
pushf
mov
imul
pop
push
jmp
dec
loopne
mov
mov
sbb
mov
lds
lea
repz
repz
mov
ja
xorl
ja
push
inc
ds
mov
jb
mov
adc
sarl
lods
pop
mov
sti
xchg
mov
mov
push
jle
jmp
cmp
decb
outsl
ljmp
cmpsl
ljmp
shll
sub
std
aaa
sbb
inc
bound
cld
inc
jle
dec
es
popa
clc
push
push
in
and
fdivrs
imulb
sbb
out
imul
into
call
push
push
adc
pop
bound
hlt
dec
ja
sub
xorb
cwtl
shll
fwait
jbe
fildll
push
cli
push
push
out
jnp
push
jecxz
mov
pushf
call
ljmp
add
cli
adc
std
jae
inc
sub
fsub
dec
sbb
dec
sbb
push
xor
insl
jnp
cmp
xchg
mov
lret
pop
pushl
mov
loope
mov
pop
test
fucom
fistpl
stos
fcomps
ljmp
cld
sbb
aas
xor
je
and
ret
ret
mov
addr16
outsb
xchg
imul
xchg
adc
mov
sbb
jnp
addl
mov
dec
je
dec
sahf
lahf
outsb
out
cltd
mov
jne
rcll
mov
cltd
add
out
aad
pop
sbb
std
addr16
pop
out
stos
jmp
pop
in
pop
sbb
aaa
adc
jp
or
sahf
test
lds
cmp
outsl
into
clc
inc
adc
shlb
fmul
adc
mov
mov
xor
jge
xchg
pushf
cmp
in
leave
cwtl
mov
adc
rclw
xor
pop
orl
inc
xchg
xchg
nop
xor
out
icebp
mov
into
mov
ret
fstpl
loop
or
scas
and
jae
push
in
movsb
sbb
dec
add
and
fmuls
out
cmp
arpl
or
gs
or
movsl
sti
mov
dec
cmp
pop
in
notl
jp
in
out
inc
rorb
call
xlat
shll
stos
ficompl
xor
xor
inc
out
mov
out
inc
mov
ret
xchg
cld
repz
cs
aam
lods
orl
push
jno
rol
fistpl
adc
fimuls
in
push
cwtl
xchg
mov
pop
dec
repz
jge
pop
add
and
sahf
mov
add
cmpsb
in
jae
push
pop
lcall
movsl
call
aas
lea
lods
xor
lea
shll
loope
add
sarl
shrb
xchg
mov
xor
les
loopne
mov
lods
mov
ret
or
div
mov
dec
mov
out
mov
inc
repnz
dec
push
pop
mov
jns
andb
mov
inc
decl
movsl
or
lcall
dec
pop
add
in
adc
and
dec
push
enter
and
push
jbe
fcompl
mov
je
sti
movsb
inc
test
push
lret
xchg
mov
test
pop
dec
or
cwtl
inc
dec
sub
subl
pusha
cld
stos
push
ds
jg
test
repnz
roll
imul
loopne
test
stos
mov
adc
lods
or
fstpl
std
mov
sub
fcompl
iret
jno
add
cltd
inc
jbe
stos
jl
jnp
xchg
in
testl
rorb
push
test
add
or
clc
pop
movsb
fcomp
xlat
dec
jno
xchg
lcall
push
mov
ljmp
mov
xchg
pusha
bound
repz
inc
adc
pop
aad
push
cmpsb
sbb
lock
or
or
aaa
jge
cli
dec
stos
mov
pop
xchg
jmp
adcb
xor
dec
xor
outsl
cli
dec
rclb
sbb
fldt
add
mov
add
mov
mov
and
sbb
rclb
vrsqrtss
test
jo
or
dec
push
jnp
out
popa
int3
lods
hlt
push
bound
mul
mov
dec
movsl
out
lea
push
or
dec
dec
fcmove
int3
leave
rcrb
push
add
sub
jg
mov
inc
mov
and
insl
mov
push
ficoml
ret
ss
or
shll
sub
add
icebp
jl
lret
shrl
dec
das
and
adc
in
mov
xor
mov
out
mov
and
pop
xchg
adc
cmp
push
mov
or
or
in
mov
stos
xchg
mov
outsl
rcll
sti
xchg
cmp
popa
in
pop
pusha
jno
aad
cmp
xor
jo
jae
out
in
xchg
cmp
aad
repnz
shrl
lahf
lods
mov
and
cmp
popf
pop
rol
inc
cmpsb
outsl
dec
insl
and
cld
inc
or
xor
and
fsubrl
cmp
push
data16
dec
enter
pop
push
push
call
sbb
dec
out
sub
mov
ljmp
pop
push
add
xchg
out
and
mov
lret
or
xchg
jecxz
inc
lods
fildll
adc
push
test
enter
in
sub
mov
xchg
inc
xor
scas
test
dec
adc
sub
test
dec
loop
jp
push
xchg
cmp
out
xchg
lods
mov
cmp
xchg
leave
add
push
test
repz
shlb
and
arpl
sub
dec
mov
arpl
repnz
or
mov
in
mov
movsb
mov
mov
jge
cmp
cmc
je
movsl
shl
jns
fstps
aam
iret
orb
rcrl
and
xor
xor
js
fnsave
push
sub
in
dec
gs
cltd
jl
dec
cli
pop
dec
add
sub
shl
pop
mov
repz
xchg
clc
cmovp
cmpsb
arpl
lods
insb
inc
sahf
test
in
ljmp
mov
repnz
call
push
pushf
movsb
pop
test
call
add
inc
cmp
xchg
dec
ljmp
add
sub
rol
test
nop
test
and
mov
xorb
pop
mov
mov
ret
ja
leave
sti
or
dec
cmp
div
mov
jns
jne
mov
stc
mov
pop
jns,pn
push
dec
mov
lock
dec
mov
dec
loopne
sbb
inc
sbbb
add
xchg
mov
pop
sub
bound
push
mov
xchg
jl
gs
enter
mov
mov
outsb
xchg
int3
xlat
out
xor
movsl
push
test
imul
fists
add
arpl
jbe
inc
shlb
cmp
mov
jmp
jb
and
scas
add
mov
pusha
int
mov
mov
loope
movsb
jecxz
dec
jl
lock
mov
clc
stc
clc
test
xchg
mov
sbb
in
lods
nop
xchg
inc
movsb
pop
mov
pusha
movsl
cmc
insb
outsl
jne
ja
jbe
int
nop
stos
add
movsl
in
lret
push
scas
and
repz
repnz
pop
jne
leave
rcrb
push
xchg
push
xor
cmp
cmpsl
cmpb
mov
lock
jno
aaa
cwtl
push
or
bound
add
icebp
mov
mov
add
push
test
xchg
in
rorl
hlt
shl
inc
decb
and
in
cmp
inc
push
jne
andb
pop
mov
mov
push
enter
movsb
iret
push
mov
add
xor
inc
mov
jecxz
ja
dec
test
jns
mov
stos
xchg
mov
jo
jmp
sahf
add
rorb
and
inc
bound
push
pushf
ljmp
pusha
fdivl
lret
pop
pop
outsl
inc
add
lret
push
fmuls
ljmp
cmp
mov
dec
pop
cld
adc
ds
mov
dec
jl
push
push
mov
sub
dec
adc
sti
orb
inc
inc
xchg
xchg
iret
xchg
jle
jo
scas
test
int3
lods
jb
pop
sub
inc
shlb
ljmp
fstpt
pop
in
jns
loop
cmp
sub
pusha
mov
jbe
and
mov
jne
aaa
shl
or
shll
aam
xor
push
cltd
pop
roll
cli
push
div
dec
push
not
dec
or
call
into
cli
popa
icebp
in
lea
aad
aas
repnz
mov
xchg
and
jle
loope
add
xor
shr
push
sbb
jg
nop
or
shrb
ljmp
adc
dec
or
dec
inc
cmp
movl
or
imul
mov
mov
pusha
sub
rclb
rclb
cltd
mov
push
mov
stc
shl
mov
mov
mov
ds
stc
mov
inc
xchg
push
daa
andb
icebp
loop
or
or
daa
clc
inc
negb
jne
mov
mov
loop
xchg
mov
movsb
mov
adc
fisttpl
or
enter
pop
push
or
or
gs
cs
insb
int
subl
loope
xchg
clc
fstps
aam
inc
xor
repnz
scas
mov
and
pop
mov
cli
adc
inc
std
lcall
dec
shlb
xchg
inc
lods
and
mov
jo
dec
xor
mov
int3
xlat
mov
mov
and
mov
sub
push
add
aas
mov
inc
aam
daa
out
push
sbb
movsb
xor
subb
iret
mov
out
adc
out
lahf
lcall
mov
push
pop
xchg
mov
cmp
ja
lret
xchg
ret
mov
fs
aas
and
add
dec
jno
rcrl
ret
aam
pop
dec
in
mov
dec
jbe
jbe
cmp
into
cld
dec
iret
push
inc
push
js
std
xchg
pop
ds
insl
xchg
fbld
fimuls
in
dec
or
add
jl
test
call
or
jo
sub
int3
clc
mov
stos
sbb
push
pop
test
xchg
call
xchg
inc
sti
mov
int3
add
out
and
fs
mov
mov
xchg
add
mov
mov
xor
test
in
push
loopne
jl
test
stos
xorb
sub
jge
test
sbb
test
xchg
cs
aam
scas
test
cmp
in
ficomps
test
xchg
mov
mov
sbb
sub
and
inc
sub
jl
mov
fdivl
negl
insb
inc
clc
or
and
faddl
dec
adc
mov
ljmp
fcmovb
popa
jbe
sbb
jmp
pop
test
daa
repz
out
mov
pop
mov
cli
mov
pop
jle
jo
ljmp
pop
stos
inc
jbe
xchg
lahf
outsb
btr
push
dec
jne
fcoms
or
icebp
mov
add
fcoms
outsl
in
clc
test
std
into
adc
cld
or
test
stc
insb
pop
lods
pop
inc
push
lahf
insl
mov
cmp
mov
iret
arpl
xor
pop
stos
cmp
sar
sbbb
cld
jo
in
or
mov
add
mov
and
mov
lds
repnz
sbb
aam
pop
lea
push
cmp
repnz
ret
lds
pop
insb
adc
out
mov
testb
sti
xchg
dec
sub
sub
mov
fnstsw
sahf
xchg
fistps
adc
lea
imul
cltd
mov
mov
cmp
inc
loope
loopne
div
imul
out
sbb
dec
lret
call
lcall
adc
sub
sub
pop
pop
pushf
xchg
leave
pop
imull
pusha
push
dec
fcoms
out
and
or
mov
and
mov
mov
aas
mov
push
and
fwait
cltd
xor
notb
push
ja
orl
mov
in
into
and
cmpsl
sub
cmp
dec
test
cld
pushf
or
lock
mov
dec
mov
fsts
bound
data16
lahf
pop
adc
jns
loopne
bound
add
mov
jecxz
adc
subl
adc
fwait
bound
bound
sub
insl
fcomps
repnz
adc
jl
dec
into
inc
or
movsl
gs
insb
out
pop
mov
les
jge
ret
out
pop
cmp
pop
cwtl
js
adc
pop
in
or
in
adc
mov
sbb
sub
loopne
mov
enter
xchg
inc
xchg
dec
clc
int3
das
pop
xchg
je
mov
push
jns
fneni(8087
rolb
repnz
outsl
imul
lret
imul
xchg
or
push
ror
adc
adc
ficomps
xor
cmpsb
push
lret
xor
mov
pop
pop
inc
test
pushl
jl
mov
pop
cld
icebp
scas
in
push
les
dec
lock
out
and
loope
stos
imul
aad
in
mov
scas
fwait
push
enter
xchg
mov
fdivrl
aaa
or
std
loop
pmuludq
lods
jmp
jnp
adc
cmpsl
mov
mov
sbb
jmp
mov
inc
arpl
divb
mov
jl
jle
dec
jae
or
sti
fadds
xor
repnz
sub
outsb
outsl
dec
xor
gs
xchg
ret
bnd
push
sub
push
addr16
mov
add
test
push
movsb
mov
sub
lods
shlb
dec
dec
bound
jbe
lods
mov
add
cmp
inc
scas
mov
nop
adc
or
jb
lods
pop
or
lret
mov
sub
jmp
mov
leave
push
shlb
outsl
sbb
lea
dec
jge
or
jmp
je
sti
and
fwait
mov
dec
mov
aaa
cmp
int
out
xchg
test
je
xchg
xchg
shl
inc
xchg
lret
invd
lret
jle
dec
mov
lods
push
jecxz
adcl
hlt
pushf
outsl
xchg
dec
or
das
mov
pop
xchg
push
hlt
adc
mov
add
sub
lahf
les
xchg
faddp
std
sub
lods
dec
mov
or
pop
loopne
jb
xchg
pop
dec
cld
addl
pop
mov
xor
xchg
xchg
xchg
jp
jno
in
jge
mov
mov
mov
movsl
into
cmp
mov
test
aad
push
ljmp
jl
loop
lds
adc
sbb
add
outsb
lods
push
pop
lret
pop
sbb
std
cmpl
xchg
cmp
test
fisubrl
repnz
arpl
imul
push
ljmp
jl
stos
cli
iret
sbb
jg
mov
cwtl
adc
push
dec
add
pushf
adc
pop
call
fmull
xchg
fwait
sbb
sub
pop
loope
jge
leave
inc
adcl
aaa
add
add
xchg
xchg
xchg
inc
mov
and
adc
and
movups
xor
cmp
pop
mov
mov
adc
or
mov
shufps
je
mov
sub
ljmp
insb
cwtl
ljmp
adc
fwait
loope
jnp
lods
pushf
pop
adcl
sbb
lods
mov
hlt
imul
pop
lock
mov
adc
jge
insb
xchg
lahf
in
pop
sti
fistps
cld
adc
stos
and
loope
pop
test
jno
mov
sbb
in
sub
xchg
cmp
call
push
or
pop
daa
mov
sbb
stos
ret
bound
out
or
shr
aaa
aam
add
push
in
push
mov
xchg
xor
push
dec
hlt
mov
js
xchg
scas
out
fprem
xchg
xor
cmp
je
mov
imul
jnp
mov
lea
sbb
inc
ss
mov
pushf
sarb
icebp
pop
test
jecxz
xor
int3
mov
push
add
pop
hlt
xor
jge
insb
jecxz
stos
dec
incb
push
cmp
cmp
or
dec
pop
daa
notl
sar
dec
sub
sbb
jb
in
push
add
dec
hlt
push
dec
xchg
ja
arpl
jb
out
mov
shrb
lcall
sti
add
and
mov
jp
fs
nop
cltd
aas
filds
cmp
cmp
icebp
add
test
enter
test
jl
fsts
orb
dec
and
scas
mov
xor
cwtl
stos
adc
int3
out
ljmp
out
pop
or
add
and
sbb
xor
pop
cmp
pop
cld
or
mov
xchg
xchg
fldenv
outsb
pop
adcl
in
lret
imul
xlat
lods
rorl
cmpsb
lods
mov
sbb
push
test
push
mov
jecxz
lea
cwtl
add
mov
lea
sub
push
test
insl
in
popa
mov
hlt
adc
dec
jmp
lea
call
sbb
sbb
lock
add
xchg
push
xchg
repnz
in
xchg
scas
pop
or
push
int
mov
sti
clc
mov
ds
in
sub
call
mov
jae
outsl
cmp
push
mov
fstpl
sub
cmp
dec
or
mov
cmpsl
out
xchg
lcall
movsb
repnz
cld
in
mov
lret
divl
xchg
cmp
sbb
fnsave
clc
xor
sbb
jne
xor
and
jns
mov
jne
or
ud1
xchg
jno
aam
xor
dec
aaa
xchg
mov
movl
loop
mov
ret
or
mov
xchg
fs
mov
mov
xor
pushf
enter
ret
xchg
or
cwtl
sub
push
sub
inc
dec
add
jge
dec
sbb
xorl
pop
adc
or
sahf
adc
jl
mov
cmp
mov
jge
mov
push
jge
cltd
jecxz
adc
fwait
aaa
nop
cmp
xor
push
sbb
or
int3
adc
jge
pop
adc
ss
inc
mov
and
pop
or
decb
mov
jg
mov
pop
clc
mov
push
outsl
sbb
cmp
out
orb
pushf
dec
aam
push
int
mov
add
aad
test
push
xchg
in
inc
rcll
push
sub
in
ds
shll
fistps
and
dec
cld
xchg
rcr
lcall
mov
in
nop
das
aaa
mov
inc
mov
dec
add
sub
enter
je
xchg
xor
jbe
arpl
push
or
jecxz
push
adc
pop
adc
mov
dec
sbb
jecxz
data16
and
jns
rol
stc
scas
cmp
sbb
push
xor
or
xchg
pop
push
call
push
lahf
adc
mov
iret
in
fisubl
sub
sti
ss
mov
gs
push
inc
sets
dec
into
jae
xchg
sti
inc
xchg
dec
sbb
adc
arpl
lret
fcoms
mov
inc
push
cmp
jbe
insb
fsubrl
cwtl
jns
ja
xchg
jo
out
xchg
call
and
rorl
mov
movsb
clc
rorl
cwtl
in
mov
enter
push
push
fbstp
jo
mov
das
lods
or
insl
xchg
lcall
jae
sbb
ja
icebp
xor
and
cmp
insb
mov
es
dec
mov
pop
cmp
mov
push
mov
mov
ss
rclb
lcall
jmp
cmc
scas
int3
jno
and
shll
dec
xor
dec
mov
xchg
addr16
cli
repnz
sub
out
dec
mov
shlb
jne
add
popf
aad
test
xchg
mov
dec
inc
lds
xchg
fmull
sbb
clc
imul
mov
inc
outsb
cmp
cmp
lods
popf
popa
out
push
pop
imul
clc
aam
cmp
mov
movsb
mov
sahf
in
jno
daa
fisubs
cmp
mov
mov
imull
fs
cltd
push
popf
hlt
fs
ret
xor
sbb
xchg
mov
ret
jne
mov
cwtl
out
out
xor
stos
les
jl
push
sub
mov
lods
fmul
ds
mov
xor
pop
mov
and
je
pop
in
mov
mov
dec
mov
sbb
xchg
mov
or
jmp
xchg
inc
lock
add
xchg
add
dec
inc
lahf
les
das
repnz
mov
ficompl
lret
rcrb
inc
mov
std
xor
popa
jl
cwtl
mov
es
adc
adc
push
xchg
aas
mov
stos
pop
fisttps
outsb
fstl
mov
stos
jbe
xor
std
jbe
add
xchg
pop
add
jg,pn
in
lret
dec
and
xor
cmpsl
mov
mov
adc
xor
dec
pop
es
xchg
xchg
pop
push
jmp
push
adc
xchg
in
push
enter
sub
repnz
cmpb
inc
mov
loope
movsb
es
in
sub
push
and
adc
push
mov
push
movsb
data16
mulb
popa
jp
out
popf
mov
push
add
push
sbb
ret
mov
loop
movsb
xor
cli
cmp
push
and
outsl
shrb
les
out
jmp
test
outsl
fdivl
in
pop
lock
jns
in
jns
lea
push
sarb
push
std
add
and
and
fimuls
lock
push
cmpsb
loop
sub
mov
out
insb
xchg
out
in
cmp
and
cmp
xchg
ret
pop
and
adcb
mov
push
xchg
ret
dec
fs
outsl
mov
sbb
cld
je
andl
scas
or
mov
cmpsb
dec
jg
inc
loope
dec
inc
fmuls
aad
fldenv
lods
xchg
push
mulb
neg
push
stc
add
in
and
pop
cwtl
inc
call
mov
mov
push
or
lds
shlb
out
divl
fdivr
repnz
lods
inc
out
loope
arpl
mov
mov
mov
divb
lds
xchg
ja
add
shll
jnp
les
bound
aam
mov
or
es
or
cmpsl
jae
mull
mov
aas
movsb
imul
jno
gs
mov
sbbb
sbb
jns
mov
dec
repnz
popa
push
mov
ljmp
jge
imul
add
sbb
fstl
gs
imul
test
std
out
sahf
mov
pop
push
je
dec
fldl
shll
bound
or
scas
in
popf
mov
test
dec
lods
lahf
loopne
jo
stos
pop
mov
dec
into
lds
out
mov
aam
nop
xchg
je
jae
js
pop
mov
cli
insl
xchg
adc
push
jecxz
outsb
xchg
push
jp
nop
pop
add
xchg
pop
push
push
jnp
jne
les
jnp
mov
lret
movsb
mov
adc
je
lcall
imul
inc
fdivl
call
pop
cwtl
in
jne
mov
jle
cmp
loopne
in
repnz
lods
repz
push
mov
sub
aaa
out
andb
push
loope
pushf
insb
out
jno
dec
push
mov
adc
xchg
subb
inc
lahf
jle
dec
jg
or
push
out
sbb
in
scas
jb
xchg
out
and
mov
sub
test
xchg
insl
dec
scas
out
or
mov
or
test
xchg
lods
repz
cld
jno,pn
pop
mov
pop
in
lret
call
cmpsb
mov
jb
stos
flds
lods
xchg
loop
xor
dec
ret
int3
stos
or
fs
ljmp
bound
or
adc
lahf
lcall
pop
lea
xor
xchg
sbbb
aam
mov
stos
stc
jnp
in
sub
cmpsb
ret
adc
dec
xchg
pusha
stc
lcall
sbb
mov
jnp
or
cmp
inc
ds
sbb
xchg
test
stc
sub
sbbb
dec
imul
xchg
pop
test
lods
lret
and
xchg
mulb
gs
rorb
stos
push
iret
jp
mov
rorb
pop
rcrb
andl
inc
repnz
jno
test
cmpl
mov
je
sbb
in
add
sarb
mov
or
cmp
mov
sub
in
pop
xorb
mov
mov
rorb
cmp
test
xchg
xor
ljmp
add
push
sbb
popa
xchg
stos
push
mov
xchg
sbb
ds
dec
dec
adc
pop
xchg
repnz
js
or
insb
loope
mov
mov
je
hlt
jecxz
xor
in
bound
les
sbb
fimull
push
and
mov
mov
sti
sti
pop
xchg
lret
mov
xor
push
xchg
pusha
test
and
jmp
jbe
into
xchg
sti
into
mov
lods
jne
dec
addb
gs
push
pop
jb
in
repz
mov
enter
sbb
arpl
clc
add
sub
or
cmp
mov
mov
mov
or
or
push
in
repz
pusha
scas
icebp
sub
rolb
sub
shl
or
xchg
pushf
ja
cli
in
dec
dec
mov
mov
fst
and
lods
sub
xor
lea
gs
adc
mov
addr16
int3
dec
mov
push
push
cmp
jmp
in
push
push
cmc
idivl
pop
bound
loope
adc
or
pop
imul
push
test
pop
add
and
outsb
and
mov
inc
lret
mov
inc
sub
repz
xorb
cld
sti
cltd
outsl
adc
movsl
mov
pop
test
pop
sub
repz
jge
jae
adcl
add
aad
movhps
repnz
jg
cmc
xchg
ret
stos
cwtl
push
dec
xor
xchg
cmpsb
dec
xchg
xchg
clc
in
test
mov
mov
fdivl
xchg
dec
subb
js
lea
lock
imul
je
orl
aad
pop
shl
cmpsl
and
aas
out
imul
sub
xchg
clc
cmp
or
out
clc
pop
test
push
pop
in
lret
stos
aam
leave
imul
bound
ret
mov
sbb
jle
lds
cmp
das
sub
out
xchg
out
jge
jecxz
arpl
cld
and
sbb
xchg
lods
ljmp
outsb
dec
cwtl
sub
xchg
jl
imul
xchg
mov
out
stc
leave
cmovnp
hlt
ss
mov
ficompl
jae
out
addr16
push
scas
rcl
fwait
xor
cmp
outsb
loop
push
dec
mov
adc
mov
xchg
inc
cli
sti
out
push
int
mov
loop
inc
das
in
cmp
push
hlt
imul
xlat
sbb
sub
mov
jae
xorl
in
xor
repnz
aaa
inc
shrl
and
lods
aad
mov
and
pop
sti
jno
and
jle
cmpsl
hlt
push
lods
mov
and
ret
ljmp
xor
push
pop
pop
stos
aas
test
and
pop
xchg
xchg
repnz
and
push
dec
inc
clc
jnp
aam
out
ja
sahf
push
cmp
outsb
xor
add
lea
xlat
mov
sbb
rol
or
mov
lret
movsw
jnp
aaa
in
fcmovu
in
ret
fsts
sbb
and
dec
adc
cmpsb
or
in
jb
dec
repz
enter
mov
push
ret
sbb
mov
sbb
ljmp
in
xchg
and
sbb
inc
mov
dec
or
shr
pop
or
sub
jecxz
aaa
std
mov
pushl
jmp
xchg
xchg
xchg
xchg
adc
mov
loopne
cld
fildl
or
dec
lret
in
mov
mov
in
stos
sbb
dec
shl
fs
data16
dec
adc
adc
dec
push
cmpsl
mov
mov
in
mov
and
idivl
je
sbb
inc
mov
and
das
xchg
add
les
dec
adc
fcoms
fs
fdivr
aad
cwtl
sbb
repnz
fmuls
mov
mov
inc
mov
sub
inc
sub
dec
push
mov
nop
dec
aam
mov
lock
xchg
xor
in
std
loope
lcall
inc
xchg
dec
add
inc
mov
popl
test
sub
mov
test
insl
out
mov
dec
je
aaa
hlt
scas
in
fs
mov
out
repz
fucomi
cmp
repnz
je
xchg
addr16
jo
dec
arpl
jle
adc
bound
jne
mov
test
lcall
mov
fistl
xor
push
sub
in
lods
popf
test
push
cmp
pop
test
jle
sub
aam
jmp
or
insl
dec
mov
or
ss
dec
add
imul
sti
pop
fstpl
mov
daa
rcl
pop
sub
sahf
adc
inc
dec
sti
xor
js
sbb
loop
fidivrl
mov
mov
insb
sub
mov
jbe
popf
jmp
mov
pop
sbb
stos
clc
push
outsb
shrb
popa
popf
std
mov
scas
test
add
mov
inc
cld
add
int
pop
push
popf
test
mov
cld
lock
mov
add
xlat
dec
sahf
aam
loop
mulb
subb
inc
xchg
pop
and
int3
fistpl
fwait
add
movsl
mov
insb
loopne
sbb
aam
mov
int3
add
out
imul
xchg
bswap
or
cmp
or
ljmp
es
icebp
test
les
aam
test
mov
dec
mov
add
cmp
ss
jae
adcb
mov
jmp
rclb
xorb
enter
jmp
jmp
xchg
je
shlb
xlat
subb
ja
add
sub
pop
insl
fsubrp
loopne
subb
aas
es
arpl
inc
hlt
mov
shrb
fbstp
fldl
ss
jbe
ljmp
push
out
mov
pop
mov
das
jmp
lcall
out
jecxz
xchg
jbe
sub
mov
pop
mov
cmp
aam
sbb
inc
stos
scas
movsb
andb
fdivs
mov
shlb
pslld
cmp
popa
data16
sub
inc
xor
cmpsb
push
mov
popf
mov
dec
mov
xor
or
aaa
mov
lret
int
push
and
sbb
pop
sbb
sub
pop
xchg
push
adc
mov
or
fwait
push
or
pop
inc
leave
test
bound
pop
test
popa
ret
jbe
adc
popa
xlat
jae
or
dec
fwait
loop
call
pop
push
mov
sub
aam
xor
sbb
inc
out
stos
outsl
scas
cmp
mov
in
lods
jg
sub
sbb
bound
mov
push
ret
pmuludq
push
test
arpl
rclb
mov
les
jmp
sti
mov
push
test
or
outsl
mov
ljmp
xchg
add
jge
and
xchg
cmp
mov
loopne
mov
sub
xchg
imul
sbb
bound
xchg
std
push
and
fdivrs
jb
and
pop
icebp
dec
lods
and
mov
insb
cmc
push
mov
shrl
cmp
hlt
xchg
movsb
icebp
fstl
cmpsb
iret
xchg
adc
in
insb
bound
popa
jge
test
jmp
cltd
jnp
pop
mov
adc
inc
divb
je
jno
xor
aam
cmp
pushf
jle
aam
pop
int3
mov
fsubr
out
mov
mov
fs
insl
add
orl
hlt
repnz
clc
lret
inc
or
mov
sub
jo
add
stc
add
in
cwtl
out
push
xor
or
push
xor
mov
push
repz
jecxz
cli
jno
pop
out
pop
xor
insl
shl
xchg
jle
int3
dec
push
and
clc
aaa
mov
xchg
lods
fiaddl
out
mov
lahf
add
cmp
mov
xchg
xchg
adc
mov
sub
xor
jb
rorl
scas
bound
jbe
dec
xchg
or
rcll
mov
mov
test
dec
icebp
and
jbe
jmp
ja
fwait
or
or
ja
shll
jmp
lods
shrb
dec
sub
ljmp
jecxz
test
daa
jnp
xchg
jmp
div
in
aaa
xchg
mov
fcmovu
cwtl
cmp
arpl
int3
or
lock
xchg
test
out
test
lret
in
jnp
pop
jno
sbb
rcll
xchg
add
xchg
fldt
cli
icebp
daa
mov
out
mov
add
loopne
mov
imul
imul
rorb
call
lret
xor
jmp
jo
cmc
sbb
sub
stc
rcrl
cld
fs
stos
or
cmp
xchg
xor
xchg
nop
andl
fistps
arpl
mov
std
xchg
cmp
movsl
add
pop
fimuls
movsl
imul
or
pop
js
outsb
and
sub
push
xchg
sbb
inc
leave
cmp
sbbb
inc
push
and
fmull
sarl
iret
xchg
fnstcw
add
fprem
add
mov
in
imul
cli
and
add
xor
cwtl
push
ficoml
mov
xchg
mov
sbb
loope
fs
nop
outsl
cmp
insb
xchg
xchg
adc
lret
sarb
fs
inc
clc
adc
pop
loop
mov
jle
mov
jno
mov
xor
mov
sbb
push
cmp
andb
adc
jo
adc
cmpsb
cmp
faddp
xchg
insl
je
adc
gs
adc
xchg
ftst
fiaddl
enter
adc
and
shrb
lea
aas
adc
insb
push
and
jle
push
es
les
cmpsl
xor
insb
and
adc
inc
fsubl
jnp
les
rclb
orl
clc
test
ficoms
out
lock
mov
ss
sub
push
fwait
push
xlat
or
insb
mov
add
jno
jmp
push
aas
into
xor
and
xchg
pop
sbb
sub
ljmp
lods
add
lret
out
add
insl
movsb
sub
out
das
lock
cmpsb
int
xchg
scas
outsb
lock
shlb
mov
mov
and
sbb
inc
outsl
sbb
scas
or
iret
and
inc
scas
movsb
loope
cmp
popa
fcoms
les
fdivl
js
sti
pop
call
es
dec
cmpb
enter
movsl
cltd
add
ja
sbb
int
jns
pop
fdivs
out
cmpsb
addr16
shrl
das
mov
adc
jle
inc
xchg
fwait
mov
or
add
add
jmp
push
cltd
or
icebp
adc
dec
mov
cmp
out
lret
push
or
inc
add
and
in
scas
sahf
jne
cmc
fisubrs
push
sub
and
bound
dec
addl
lcall
hlt
mov
cmp
or
scas
inc
mov
sub
inc
filds
jns
mov
test
in
push
out
divb
cmpsb
or
vmovapd
and
xlat
cmp
mov
add
pop
cmp
sahf
aas
jl
test
inc
fwait
jmp
xchg
cmp
ds
dec
or
and
enter
outsb
sub
push
scas
xor
pop
mov
mov
fistps
pop
mov
sub
cmp
repz
inc
push
mov
or
xchg
push
push
inc
xor
lret
loop
dec
in
inc
loope
outsl
cmp
xor
fsubrs
mov
cmp
mov
push
rcrl
stos
jecxz
xorb
xchg
aaa
add
push
mov
loopne
mov
divl
aad
or
xchg
decl
bound
loop
outsb
xchg
loopne
pusha
mov
and
clc
cltd
loop
xor
mov
jnp
push
idivb
sbb
insb
movsb
jecxz
popf
loopne,pn
idivb
in
outsb
lret
ret
stos
sbb
insl
sbb
xor
lods
push
gs
mov
ss
lcall
add
das
or
repnz
inc
push
add
jmp
add
push
sub
inc
mov
test
jno
pop
fstpt
arpl
adc
or
es
pop
add
push
mov
lods
dec
mov
jl
test
popa
sbb
ja
jl
cmp
repz
or
dec
aas
xor
in
fmull
jl
push
insb
int3
fidivrs
jle
adc
lods
je
addr16
push
xchg
sti
loop
ljmp
addb
pop
cmp
lcall
xchg
jnp
jecxz
arpl
xor
ljmp
sub
test
pop
mov
push
dec
dec
xchg
movl
insb
gs
call
icebp
cld
xchg
rcr
aam
jnp
jne
adc
subb
hlt
repz
mov
ss
std
inc
ja
mov
jno
fsubr
mov
scas
test
insl
out
cmp
mov
sub
mov
test
jbe
out
leave
loopne
insl
sub
fcomps
hlt
mov
in
sahf
test
in
sub
loop
pop
cmpsl
das
out
cs
adc
aaa
in
mov
shrb
mov
fwait
and
mov
cli
push
mov
aas
dec
ror
cmpsb
or
mov
add
xchg
sbb
mov
mov
adc
push
mov
test
adc
test
ficoms
xor
into
ss
into
push
mov
xor
jmp
rolb
and
dec
pop
dec
cmpsl
mov
inc
daa
lods
jecxz
or
pushf
rcrb
les
hlt
jle
add
mov
jo
pop
mov
or
lcall
xchg
imul
cmp
clc
lcall
cmp
push
ret
mov
cli
cmp
jecxz
mov
jmp
sub
fsubrl
mov
mov
incb
nop
addr16
in
jl
in
pusha
jne
and
adc
cmc
cmp
pop
mov
js
ds
dec
jne
mov
adc
cmp
sbb
iret
in
mov
shr
fsubs
test
mov
jo
cwtl
jge
lcall
loop
push
pop
shr
cmpsb
pushf
or
movsb
mov
int3
jp
insb
jmp
mov
sub
inc
xchg
js
jb
hlt
xchg
out
bound
adc
jae
xchg
loopne
fsub
pushf
cmp
or
jne
aam
mov
sub
sub
out
mov
sbb
in
push
decb
cld
dec
mov
in
arpl
enter
cwtl
hlt
nop
std
xchg
mov
jns
push
cld
bound
aad
mov
bound
js
test
push
push
rcl
cli
dec
add
cs
std
mov
mov
fmull
popf
adc
mov
mov
mulb
push
sub
clc
aad
sbb
mov
in
popf
add
add
js
lahf
daa
repz
add
int3
add
loopne
jmp
ficomps
xchg
xchg
loop
jle
or
cmp
xor
mov
mov
push
cmp
repz
mov
stos
jge
and
xchg
cmp
movsb
sbb
lcall
mov
aas
and
scas
lock
mov
inc
sub
jo
sbb
ljmp
fs
mov
push
adc
repz
mov
pusha
mov
stos
sbb
adc
jno
ljmp
or
mov
add
xchg
test
jbe
inc
xor
out
out
and
hlt
mov
in
imul
xchg
addr16
in
in
fs
cld
addr16
lods
cli
jne
or
mov
ss
mov
jne
mov
gs
push
movsl
clc
adcb
mov
xchg
les
xor
xchg
cli
dec
push
xchg
sbb
mov
push
ficoms
fildll
mov
in
mov
add
pusha
jg
mov
ret
push
add
mov
pop
out
xor
movsb
pop
in
fdivr
xchg
dec
mov
clc
xchg
test
pop
mov
test
jo
pop
add
test
ret
xchg
outsl
lret
out
in
mov
js
iret
insb
xchg
shr
xchg
mulb
dec
cwtl
repz
cmp
stos
test
sbb
mov
push
dec
cmp
jbe
clc
mov
lods
lock
inc
mov
in
add
fistps
sbb
cwtl
data16
add
pop
mov
push
cmp
vpinsrw
xorl
xlat
int3
popa
xchg
pop
sub
mov
and
stos
inc
inc
or
scas
push
jb
mov
in
mov
adc
addr16
mov
xchg
sbb
cmp
pop
ljmp
inc
push
es
es
xchg
or
push
mov
jmp
cld
test
addr16
mov
es
test
push
test
xor
fldt
and
mov
and
leave
push
test
stc
mov
or
xchg
jp
add
aam
out
aaa
push
out
in
mov
sub
mov
gs
int
dec
mov
orb
div
cs
dec
lds
xchg
jo
or
xchg
dec
xchg
pushf
outsb
sbb
sahf
xor
sbb
push
push
pop
xchg
xchg
in
jne
fists
cmp
or
arpl
fimull
sub
push
in
inc
clc
or
xor
and
pop
pop
xor
sahf
jg
mov
lea
mov
jge
fiadds
push
loope
mov
in
push
sahf
push
imul
jo
push
add
aad
mov
dec
jp
fptan
std
ds
fwait
sub
test
push
dec
jmp
ret
imul
insb
mov
lods
dec
pop
jecxz
in
lahf
das
out
mov
shll
mov
dec
call
sub
jle
jbe
repnz
js
pop
fstl
rorl
or
inc
jl
xchg
jbe
mov
mov
mov
pop
arpl
xchg
dec
gs
shlb
or
ljmp
out
sub
fs
ljmp
nop
testb
pop
adc
or
pop
fcmovnbe
push
ret
sti
or
idivb
xchg
jo
mov
sub
fadd
adc
cld
ljmp
out
test
jbe
or
push
pushf
mov
sbb
mov
xchg
cmp
lea
or
xchg
mov
mov
imulb
js
push
dec
frstor
sbbb
adc
in
js
push
push
dec
cmpsl
jl
pop
cmp
ss
pop
shll
fwait
dec
imul
pop
sbb
loope
adc
push
ja
dec
xchg
sarb
arpl
into
lock
add
or
ficompl
iret
cs
push
mull
mov
sbb
mov
jbe
dec
dec
das
negb
xor
aaa
in
jo
cmp
aam
nop
jg
andl
push
mov
scas
ror
add
cld
aad
loopne
ret
lret
sbb
mov
xchg
add
es
pop
in
ljmp
and
ljmp
xchg
ja
sarl
loopne
cmp
pusha
jge
sub
inc
fdivr
fwait
in
jmp
scas
test
or
lea
imul
mov
jmp
and
fbld
or
stos
bound
sub
dec
fsubrp
push
arpl
das
xor
lret
pusha
insl
imul
jae
lods
test
nop
inc
es
mov
or
or
mov
insb
rcll
and
cwtl
dec
iret
std
mov
jg
daa
into
mov
and
mov
inc
mov
jns
mov
icebp
jnp
dec
nop
rcr
jbe
hlt
mov
jle
jle
das
mov
adc
stos
mov
imul
mov
xchg
inc
std
inc
subb
js
jl
aam
xor
cmpsb
dec
inc
adc
addr16
scas
lods
push
ficompl
push
hlt
test
xor
jecxz
in
mov
std
sar
pop
cld
mov
das
mov
fcom
fistpll
popa
les
mov
fsubs
int
pop
mov
add
xlat
fstps
je
pop
insl
cwtl
mov
and
nop
mov
icebp
xchg
jno
push
sub
outsb
xchg
lret
mov
inc
dec
sub
roll
push
push
xchg
push
int3
or
call
mov
inc
and
les
jge
push
inc
xrelease
ja
daa
ds
pop
es
add
pop
xchg
loop
xor
jl
cmp
sub
and
in
bound
sbb
inc
cmpsb
sub
jge
push
push
dec
push
jbe
pop
xchg
inc
xor
cmp
sub
popf
addr16
call
mov
pusha
inc
or
mov
and
bound
xchg
fdecstp
jg
dec
jmp
incb
push
sub
xchg
repz
sbb
stos
jne
pop
push
outsb
push
mov
dec
xchg
in
fimull
fmull
push
inc
cmpsl
mov
mov
shll
sti
loop
add
ret
mov
int
mulb
insl
add
testb
ficompl
ss
test
xchg
test
icebp
push
clc
stc
push
cmp
das
pop
cmp
and
fcompl
dec
or
push
jo
mov
pop
mov
fsubl
mov
jl
push
mov
int
mov
sbb
mov
les
pop
and
cmpsb
cmc
addb
adc
inc
loopne
push
adc
loope
push
add
or
rcl
adc
mov
xchg
cmpb
jl
arpl
stos
movb
in
mov
mull
mov
mov
add
inc
je
push
lahf
jp
in
out
test
jbe
lahf
dec
lds
push
mov
into
out
je
or
push
adc
xlat
push
stos
bound
int
adc
bswap
adc
and
fwait
cmp
outsb
and
std
pop
mov
mov
lahf
lods
mov
fs
jl
mov
mov
movsb
enter
mov
out
aas
dec
addb
mov
comiss
jp
out
call
mov
ret
jnp
inc
mov
xchg
repnz
pop
addr16
xchg
xchg
and
jnp
xchg
in
subl
dec
mov
dec
xor
and
shrb
mov
xchg
and
jnp
bound
shrl
das
mov
scas
dec
in
dec
adc
xchg
shr
xchg
mov
mov
xlat
fdivl
mov
mov
clc
je
and
aam
xchg
notb
xchg
add
mov
rdpmc
jmp
lods
inc
push
test
fxch
das
clc
outsb
cmc
jns
mov
movsl
ret
sahf
mov
mov
pop
pop
pop
xor
int3
subb
mov
mov
icebp
mov
dec
int
ljmp
dec
lods
les
fwait
icebp
inc
imul
dec
fcomi
xor
jno
ret
xchg
sbb
fdiv
dec
adc
mov
dec
mov
les
or
in
mov
aas
pushf
arpl
cmpb
aaa
xor
cmp
jae
xchg
int
mov
mov
jl
mov
fs
xchg
xchg
cmc
lock
fldenv
mov
ljmp
insb
jp
mov
outsl
mov
xchg
loope
xor
jb
call
stos
in
shl
xor
shrl
hlt
ja
add
stos
sub
jle
sbb
cs
mov
int3
inc
imul
xchg
jmp
iret
push
push
push
add
xchg
push
ljmp
sbb
stc
mov
cmpsb
sub
inc
outsb
mov
outsb
int3
xchg
mov
cli
jmp
fisttpl
jl
cmp
ja
push
xor
push
nop
inc
mov
inc
movsl
add
cmpsb
add
sbb
xor
dec
movl
scas
popa
arpl
pop
mov
in
sub
jle
mov
sub
jns
sti
xor
jmp
dec
or
push
test
sbb
aaa
mov
stos
stc
dec
cwtl
je
data16
adc
push
scas
sub
icebp
cwtl
in
ss
iret
iret
rclb
test
adcl
in
lahf
mov
fldt
cmpsl
notb
into
cmp
cmpsl
and
lahf
mov
stos
mov
bound
ds
dec
mov
fcompl
sub
scas
adcb
sub
sahf
cmpxchg8b
lret
test
in
xor
inc
sub
fildll
adc
mov
cmp
xor
and
fs
mov
je
cmpsb
aaa
add
movsb
jmp
out
mov
lret
testb
mov
test
gs
and
jbe
loopne
jnp
repnz
mov
mov
inc
sbb
mov
int3
xchg
aas
insb
sbb
jl
add
sbb
xchg
mov
xchg
fwait
les
outsb
mov
jecxz
mov
pop
lcall
dec
sbb
push
outsl
imul
push
test
in
xor
cwtl
and
dec
mov
into
idivb
lret
lds
mov
xor
xchg
stos
lods
pop
push
jo
aam
cltd
inc
sti
ds
sti
xor
int3
sub
loopne
and
push
xor
or
in
int3
cmp
push
loopne
es
mov
mov
sbb
push
push
popf
lea
mov
pop
dec
and
push
mov
repnz
lea
testb
sbb
and
mov
jno
jl
cli
out
cld
jge
out
fstpl
mov
outsb
xor
push
mov
outsl
and
mov
icebp
cmp
push
add
divb
or
jmp
jmp
loopne
in
data16
add
mov
jg
mov
xchg
dec
gs
in
fdivrs
orps
mov
divb
push
xchg
mov
push
popf
mov
movsl
js
call
add
push
mov
lcall
cli
mov
mov
lcall
imul
lods
jmp
arpl
mov
sar
je
jl
xchg
aas
rorl
clc
push
pop
in
clc
mov
pop
push
mov
xchg
movsb
push
adc
int
shl
leave
int3
xchg
sub
push
leave
mov
aas
int3
xchg
ss
pop
out
cld
loop
adc
jmp
repnz
sub
mov
xchg
sub
cmpsl
fstp
loop
movsl
mov
cmp
adc
in
subl
mov
pop
movsb
leave
xchg
outsb
movsl
arpl
add
loopne
ds
stos
loope
push
sahf
mov
into
xchg
notl
mov
subl
jae
dec
outsl
adc
jne
xchg
push
mov
sub
ljmp
stos
cwtl
or
fstl
dec
aas
pushf
les
jmp
push
xchg
push
hlt
cmc
inc
lret
daa
dec
pop
addr16
sub
xchg
dec
popf
jg
lret
gs
mov
aaa
inc
xor
loop
adcb
add
mov
dec
in
shl
sbb
jno
insl
dec
lock
xchg
push
pop
test
mov
clc
mov
jne
in
fiaddl
push
mov
daa
dec
orb
mov
push
fdivrp
in
sahf
repnz
dec
int
push
jg
lcall
cmc
xlat
xor
or
imul
mov
sbb
data16
addr16
mov
cmp
inc
js
adc
sti
mov
mov
xchg
mov
gs
hlt
jmp
dec
mov
push
mov
mov
push
js
ja
orl
adc
jle
push
adc
lods
xchg
xchg
fsub
out
jl
mov
mov
popf
loop
pop
notb
xchg
call
xchg
xchg
loop
cmp
mov
lcall
loopne
mov
xchg
sbb
pop
mov
lcall
jmp
out
jmp
shrb
xchg
popf
icebp
or
adc
das
sub
test
push
call
dec
fdiv
xor
lret
xchg
pop
mov
cmc
xchg
or
data16
xchg
addr16
cli
jns
shl
push
jl
push
mov
mov
stos
xchg
cmpsb
pop
xor
scas
mov
shrl
xchg
mov
les
stos
push
bound
jns
xlat
and
mov
push
ljmp
add
movsb
cld
out
enter
fcomps
pop
int
cmp
mov
hlt
push
and
jae
push
dec
xchg
add
adc
aad
repnz
sbbb
out
inc
ss
cltd
push
outsb
adc
push
adc
jno
adc
fs
dec
icebp
popa
or
pop
xchg
pop
mov
xchg
xchg
mov
and
mov
push
mov
and
aam
nop
xchg
or
mov
test
test
call
pusha
push
lods
jecxz
sti
faddl
inc
cwtl
or
ss
push
jg
cmpl
cs
jmp
push
push
popa
jle
stos
pop
enter
jo
mov
xchg
movl
in
push
addr16
xchg
js
pop
mov
lock
ror
fwait
scas
lret
jb
scas
stc
jbe
cmpsl
loope
mov
out
ja
inc
inc
lret
xchg
sub
pop
incl
ja
mov
leave
mov
mov
mov
or
adc
xchg
add
inc
loope
jbe
cmpsl
dec
aas
jae
xchg
ds
mov
pop
pop
and
clc
adc
imul
fisubrs
stc
lret
shrl
jb
or
mov
std
test
fwait
inc
jge
out
fwait
xchg
xchg
xor
test
push
xchg
mov
cltd
inc
cs
push
std
xlat
jb
lods
inc
push
repz
push
ljmp
mov
xchg
lret
mov
aas
pop
cwtl
jb
mov
aaa
add
insb
jb
push
les
sbb
daa
inc
hlt
push
pop
xchg
inc
xchg
test
mov
loopne
sub
scas
cmpsb
adc
push
ss
not
daa
int3
ds
mov
mov
xchg
int
ret
xor
lds
lret
fmull
les
fistpll
test
test
mov
js
repz
pop
loop
xchg
xchg
xchg
add
mov
aam
xor
push
gs
es
cmp
jbe
pop
outsb
sbb
arpl
loope
stos
mov
pushf
rolb
test
adc
push
js
stc
pop
cmp
and
dec
mov
ja
mov
xchg
loopne
xchg
scas
out
adcl
xor
fsubrl
push
dec
shrl
mov
add
cmp
aas
std
das
xchg
jbe
int
jle
pushf
lret
adc
push
stos
sub
subb
pop
mov
and
sbb
sub
xchg
xchg
mov
arpl
jo
push
test
mov
sti
sbb
pop
aaa
enter
xchg
inc
test
std
ss
clc
inc
xor
and
xor
scas
jnp
jae
mov
and
push
in
into
fcoms
cmp
cmp
gs
repz
divb
mov
hlt
lds
outsb
stos
imul
ss
pop
mov
or
or
mov
jns
notb
mov
mov
sub
inc
outsl
lock
inc
pusha
jbe
pop
movb
add
and
mov
orl
mov
xlat
aas
ja
push
popl
in
stos
pop
add
sbb
cmp
xor
dec
in
mov
shll
dec
cmpsl
pop
dec
gs
in
inc
jne
sbb
mov
jnp
xor
and
movsl
bound
pop
mov
dec
xlat
push
or
and
xchg
dec
test
gs
mov
lahf
insb
mov
or
adc
movb
je
mov
xchg
cli
cld
inc
lcall
and
mov
push
icebp
cmc
scas
pushf
movsb
aad
mov
jb
cmc
push
fwait
jl
and
mov
sub
in
cli
je
dec
pop
cld
mov
sbb
dec
out
pop
js
adc
hlt
mov
fbld
mov
push
imul
inc
dec
test
bound
loopne
out
jne
cmpsl
and
inc
stc
or
repnz
aad
out
xor
adc
cs
jnp
outsb
jmp
repnz
and
stos
cmp
movb
sub
add
test
ljmp
push
xchg
testb
push
shl
decb
insl
mov
jnp
shrl
dec
scas
mov
mov
push
cmc
jl
cmp
imul
mov
lret
outsl
popl
fwait
hlt
push
mov
sbb
mov
sbb
xchg
mov
bound
pop
jge
ret
jle
mov
sbb
sbb
lock
flds
int3
fcoms
les
test
lods
and
data16
loopne
lcall
mov
inc
into
test
xchg
movsl
repnz
mov
mov
lcall
rcr
ret
mov
jecxz
cmpsb
in
jmp
dec
mov
gs
fildll
cmpl
cmp
jmp
and
jl
test
mov
dec
adc
jl
daa
add
aas
dec
out
pop
sbb
loopne
add
mov
nop
push
mov
jae
lahf
xchg
adc
pop
add
lock
nop
xchg
into
int3
lret
xor
adc
dec
enter
test
cmpsl
cld
cmc
mov
jl
ror
and
sub
mov
popf
addr16
mov
shll
jno
mov
xabort
pop
cmpsb
call
mov
ret
fidivrs
aam
push
mov
xchg
enter
mov
xchg
shlb
ja
xlat
cmpps
xchg
jnp
sub
push
in
jbe
and
sub
test
dec
mov
push
je
ret
std
cmpsl
ja
testl
sub
xchg
add
idiv
jp
ja
jo
cmp
test
lods
out
mov
push
fadds
sub
arpl
inc
dec
lea
adc
fnsave
jbe
test
inc
ljmp
fwait
std
les
mov
aaa
out
mov
int3
mov
test
out
mov
dec
cwtl
and
mov
dec
cli
out
mov
pop
pop
pop
in
in
aad
jns
jnp
dec
out
add
pop
add
mov
sub
lahf
mov
pop
xlat
in
cld
or
test
cld
nop
mov
and
pop
and
call
adc
add
aas
pop
mov
sbb
push
push
mov
sahf
push
mov
loope
dec
mulb
xor
shrl
jl
fcomps
mov
mov
mov
ficoml
lret
xor
jp
jmp
dec
mov
xor
cwtl
out
sbbb
cwtl
repnz
cmp
mov
sbb
jo
loopne
sbb
test
ret
push
int3
jmp
jne
xchg
lcall
nop
lds
mov
jns
mov
fs
dec
shr
cmp
jmp
daa
fnstenv
enter
fwait
insb
cld
mov
inc
adc
adc
je
jmp
dec
lahf
std
dec
sti
iret
pop
jb
cld
lds
repz
xlat
mov
jae
repnz
or
out
inc
repz
loop
add
cmp
dec
dec
mov
lret
pop
jl
dec
push
push
adc
jge
and
adc
ds
pop
mov
add
sarl
adc
cs
test
sub
out
xchg
and
aad
pop
jne
test
mov
arpl
push
lahf
nop
icebp
bound
sub
push
jnp
lods
mov
push
loop
scas
das
ja
xchg
call
adc
jno
stos
xchg
adc
push
xchg
fldt
cmp
sbb
cmp
out
mov
dec
ljmp
inc
negl
fisttpll
jle
das
ret
mov
add
mov
jg
and
mov
test
out
sti
pop
pmulhuw
xchg
push
mov
ror
jge
std
inc
sbbl
repnz
mov
pop
ss
jmp
jo
fs
jmp
sub
lret
pop
xor
mov
ss
cmp
push
sarl
mov
testl
pop
pop
test
sub
rcrl
lcall
push
mov
sub
xchg
jmp
mov
lock
ss
pushf
mov
or
int
jg
jp
mov
mov
mov
sub
sbb
sbb
in
mov
fiadds
cmp
mov
xor
fwait
jbe
enter
mov
mov
or
cli
ljmp
xchg
ret
sbb
sbb
fsubrl
xchg
lods
dec
mov
into
movsb
inc
dec
inc
pushf
notl
repnz
mov
jbe
or
lods
maxps
dec
mov
add
lahf
pushf
mov
std
dec
mov
testl
shrl
icebp
flds
lock
cltd
push
add
cmpsb
jnp
addr16
xor
cltd
aaa
cmpsb
cmpsl
mov
decl
jg
clc
scas
les
mov
out
test
std
daa
or
jb
sbb
xor
mov
mov
shl
sbb
adc
adc
dec
xor
or
cmpb
or
fstpl
and
jbe
push
mov
mov
imul
repz
or
and
int3
enter
cmp
jne
loopne
mov
sbb
inc
call
sub
and
xchg
test
ror
xchg
ss
jmp
loop
cmp
mov
cld
rol
lret
xchg
mulb
and
fwait
mov
xor
adc
stc
js
ljmp
in
pop
push
xor
mov
mov
adc
loop
imul
sbb
adc
push
push
ret
mov
into
call
add
mov
cmp
push
outsl
mov
mov
push
call
pop
adc
mov
jp
std
sbb
data16
sbb
and
fisttpl
adcb
stos
cwtl
jmp
ljmp
inc
inc
mov
inc
mov
cwtl
inc
push
mov
mov
into
lods
inc
xchg
or
sahf
cmp
xor
lcall
in
xor
loope
lods
dec
jae
data16
push
push
fwait
add
xor
lock
bound
insb
or
in
outsb
hlt
pop
clc
in
jmp
mov
ljmp
lea
mov
sti
fmuls
mov
mov
add
lret
scas
add
dec
out
pop
js
repz
add
lds
in
jecxz
nopl
lcall
in
les
addl
and
inc
fnstenv
add
xchg
repnz
or
lret
repnz
pop
push
mov
push
test
mov
call
shll
scas
mov
mov
cwtl
adc
push
push
mov
lret
rolb
add
stos
sbb
dec
inc
adc
adcl
pop
pushf
add
lahf
dec
inc
mov
ljmp
popa
cmpl
mov
fs
sub
leave
popa
adc
xchg
dec
mov
fs
dec
sub
pop
lea
push
lret
fdivr
mov
pop
lea
push
nop
int3
cs
jle
xor
in
or
pop
dec
mov
fistpl
xchg
xorl
sti
adc
mov
cmc
jbe
push
jb
mov
ret
addl
xchg
push
std
imul
adc
fs
sahf
mov
test
lds
fists
repnz
jg
mov
ljmp
mov
ljmp
stos
cmp
add
dec
movb
mov
mov
lret
mov
xchg
xchg
call
mov
add
hlt
ljmp
test
ljmp
movsb
jl
mov
repz
cmpl
clc
sbb
jne
loop
scas
xor
test
sahf
mov
mov
jp
insb
jae
xchg
loope
mov
fcomi
mov
xchg
cmp
dec
in
xor
setne
orb
lods
xor
sbb
fists
jl
test
sbb
in
sub
adc
fldt
cld
outsb
mov
stos
aad
add
push
pushf
test
xchg
dec
dec
push
and
jl
cmpsl
fisubs
imul
test
test
movsb
fisubs
add
nop
push
add
inc
or
push
pop
shlb
bt
mov
add
or
inc
je
xchg
fwait
and
xchg
ds
or
rcr
addl
dec
push
mov
push
pop
leave
data16
cmp
mov
add
outsl
sbb
out
fbld
xor
cli
mov
fwait
push
mov
jnp
test
push
xchg
jae
pushf
aam
jmp
dec
xchg
popa
lds
mov
leave
sub
or
xchg
mov
cmpsb
mov
fstpl
rorl
and
jmp
pop
into
outsl
les
scas
mov
inc
aad
add
clc
or
orb
inc
xor
xchg
setbe
sub
mov
addr16
xchg
mov
les
pop
hlt
adc
mov
loop
xchg
nop
mov
cmpl
xchg
xchg
test
jne
jno
jbe
popaw
scas
jae
pop
mov
loop
cmp
ja
sarb
cwtl
jecxz
pop
xor
imul
mov
loope
and
fs
sti
sbb
mov
cmpxchg
mov
mov
xchg
test
mov
sbb
adc
mov
xchg
and
ja
or
cli
call
xorb
test
mov
sub
jl
mov
pop
cmp
mov
scas
in
sub
sub
inc
subb
les
mov
inc
inc
sbb
mov
dec
jle
pop
cmp
scas
mov
stos
scas
enter
dec
mov
pop
and
inc
and
add
adc
repnz
mov
jle
clc
or
jl
push
and
outsb
mul
push
fldenv
xor
andb
adc
ljmp
scas
aam
mov
clc
push
mov
stc
hlt
mov
xchg
mov
dec
outsl
inc
adc
repz
dec
loop
mov
push
je
mov
add
sub
mov
jae
out
inc
push
arpl
lcall
int
inc
mov
pop
pop
inc
dec
sahf
in
dec
add
push
pop
and
icebp
sbb
mov
lret
bound
dec
mov
int3
jmp
cmpsl
jl
mov
fsubs
scas
push
test
pop
push
adc
outsl
nop
mov
pusha
cld
movsb
sbb
mov
jmp
int3
mov
leave
mov
mov
add
cltd
test
ret
ds
bound
inc
and
mov
repnz
dec
insb
xchg
fwait
push
fwait
xor
jbe
sahf
cmp
sub
movsl
andb
pop
iret
mov
mov
cld
push
into
xchg
mov
and
adc
mov
bound
sahf
lods
loopne
mov
jp
xchg
jl
sahf
push
fcmovb
loop
dec
pusha
jnp
in
pop
addr16
adc
sbb
ret
out
push
lret
mov
scas
adc
call
inc
jb
lret
jae
xor
fiadds
pop
idivl
sbb
js
fs
arpl
or
lret
lock
jnp
lods
xor
adc
cmpsb
fisubl
adc
sarb
pop
fldt
xchg
mov
push
or
fistl
cmpsb
push
jo
adc
push
icebp
rorl
pop
in
mov
jns
bound
test
xor
ds
dec
inc
cltd
adc
mov
aam
out
mov
push
cmp
or
mov
dec
mov
hlt
cmp
enter
xchg
sti
in
cmpsl
inc
inc
inc
pop
loope
dec
push
out
push
insl
dec
lcall
fisttpl
jl
in
mov
jbe
mov
sbb
repnz
sbb
jle
sarb
js
sbb
mov
dec
in
testl
fbstp
push
lods
iret
or
sahf
jns
sbb
xchg
sub
popf
mov
idivb
repz
fdiv
subb
jmp
arpl
sub
fdiv
sahf
xchg
mov
adc
mov
dec
sbb
pop
fs
in
mov
jl
add
jns
add
leave
sbb
adc
adc
fcomi
mov
fwait
in
cmp
push
adc
mov
push
in
out
or
loope
data16
dec
mov
clc
push
hlt
sub
outsb
repnz
decb
xchg
add
stos
test
std
loope
push
jns,pn
into
push
push
aas
ret
ret
addr16
add
mov
xlat
dec
imul
loopne
dec
test
jne
iret
xchg
push
add
and
or
add
int3
sysret
pop
fwait
out
cli
sahf
jno
loop
mov
inc
shll
adc
xchg
pop
jnp
cmpb
fxam
adc
in
push
and
adc
mov
aas
insl
ljmp
rcrl
ficompl
push
push
inc
nop
in
nop
in
scas
pushf
mov
adc
arpl
push
pop
and
loopne
loopne
xchg
cmpb
jbe
xchg
rorl
cmp
repnz
xor
sbb
mov
addr16
leave
dec
dec
mov
int
dec
loop
adc
mov
dec
jmp
or
inc
cs
sar
jnp
mov
mov
ja
roll
adc
fwait
loopne
in
mov
arpl
adc
roll
mov
pop
pop
int3
rclb
xchg
dec
or
in
rcl
mov
test
dec
lcall
lea
sti
dec
pop
jge
and
fdivr
xor
ja
jns
mov
test
and
popf
xchg
js
addr16
push
add
pop
out
pop
stc
mov
shlb
inc
jno
stc
or
pop
push
movsl
fincstp
or
shl
stos
test
bound
repnz
int
dec
pop
in
int3
fstpl
clc
cwtl
in
add
xchg
jne
ja
xchg
cwtl
sbb
and
xchg
ds
outsl
out
dec
inc
cltd
stos
pop
and
adcb
add
sub
std
std
ret
scas
icebp
dec
dec
pop
les
mov
scas
rcrl
mov
sub
jle
sbb
ret
mov
sub
test
push
test
aam
mov
stc
or
sti
lock
and
xor
divb
mov
hlt
sub
cs
leave
scas
dec
outsb
shl
cmpsl
icebp
fucomp
sub
mov
enter
dec
cld
or
dec
inc
mov
xor
ds
pop
push
cmp
jbe
adc
icebp
cmp
subb
cld
push
or
ds
mov
repnz
mov
jecxz
enter
push
fdivs
ret
pop
xchg
test
cmp
test
call
sub
mov
jnp
sub
dec
pushf
dec
cmpsl
mov
cli
out
mov
cs
ret
mov
mov
sub
or
repz
sub
pop
cld
pop
mov
sub
sub
mov
sbb
cmp
je
out
movb
std
adc
fmul
cmc
hlt
fcomps
mov
shrl
push
and
xorb
xchg
loope
pop
lahf
and
xchg
mov
lret
add
xchg
mov
idivl
add
in
out
or
fwait
dec
out
das
inc
push
jmp
push
in
sub
popf
imul
bound
cmpsb
and
ljmp
cmp
dec
insl
ljmp
lcall
pop
in
jnp
jbe
ror
cli
aaa
pop
pop
je
mov
fisubl
push
add
push
enter
fcmovu
ss
pop
mov
push
xchg
in
mov
sti
inc
inc
test
icebp
or
arpl
outsl
jae
ds
mov
xchg
mov
add
sub
loopne
clc
and
cltd
cmp
int3
ljmp
rclb
decb
pop
lods
ja
cmp
lahf
xchg
add
testb
xchg
xchg
xchg
data16
push
dec
dec
fs
add
pop
ret
stc
mov
push
scas
mov
dec
add
push
mov
shll
test
fdivrl
add
fs
inc
test
pop
xor
push
fsts
push
aad
jne
in
fstl
push
enter
lret
in
lahf
out
clc
sub
addr16
mov
or
es
push
push
inc
and
das
sub
adc
aad
jecxz
jne
mov
mov
js
and
adcl
shlb
mov
jmp
pop
fwait
inc
push
dec
dec
dec
repz
add
icebp
cmp
adc
or
cmp
xchg
test
hlt
shl
xchg
mov
lock
loope
mov
mov
push
xor
les
je
leave
jo
mov
pushf
push
xchg
out
mov
out
mov
push
mov
shll
dec
or
ja
in
lcall
jecxz
nop
jl
sbb
pop
stos
xchg
out
loop
ss
out
dec
sub
mov
dec
jg
outsb
pop
addr16
push
pop
jmp
loop
popa
insb
fisttpll
mov
and
dec
stos
adc
imul
inc
js
jg
or
jecxz
loop
hlt
arpl
inc
test
dec
cltd
adc
xor
sbb
pop
cld
mov
mov
fdivs
movsl
mulb
scas
add
or
sub
cmpsb
mov
aas
dec
pop
shrd
pusha
test
daa
xchg
rcrl
ret
popl
cmpsl
rcrb
pop
test
add
aad
jecxz
lods
cmp
test
jp
movsb
jge
nop
push
jmp
pop
cmp
add
xor
push
cmpsl
cmp
scas
cmp
outsl
adc
sub
imul
insb
sti
loop
aam
mov
mov
add
pop
call
mov
pop
add
mov
add
stos
push
mov
neg
mov
xor
jg
xor
jae
pushf
aad
mov
sbb
xchg
mov
movl
js
loope
jecxz
cmpsb
mov
pusha
shlb
aam
mov
dec
ret
outsl
inc
mov
rorl
ss
lock
fcompl
inc
jmp
mov
fimuls
sbb
cmp
in
es
mov
pop
sub
aam
fnop
jp
clc
mov
ss
jp
call
nop
jp
jne
sbb
xchg
test
inc
rcll
mov
movsb
rcl
lea
mov
add
dec
stos
mov
lret
fs
cli
fs
in
popf
movsb
cmp
mov
jne
mov
out
add
adc
in
jp
ja
xchg
mov
cmp
loop
test
jo
ja
or
jns
or
mov
cmp
enter
loope
pop
xor
push
addb
sti
sar
xchg
add
iret
fwait
loope
mov
pop
sub
fimull
sub
and
hlt
or
les
xorb
inc
jno
rclb
sub
cltd
frstor
mov
fs
lea
mov
adc
sbb
pop
in
pop
pop
scas
sub
rcrb
xchg
push
pop
mov
mov
test
cmp
js
out
pop
iret
cmp
add
ja
add
push
xor
ds
push
aas
into
mov
push
pop
mov
in
popf
clc
cmp
hlt
int
jl
xchg
ds
lods
adc
cmc
xchg
insb
test
push
inc
mov
pusha
lahf
notl
lods
popf
jnp,pn
push
add
cmpsl
lea
inc
push
or
movsb
cmp
push
mov
jle
jo
sti
cli
xchg
push
hlt
popf
mov
jns
gs
enter
bound
jbe
sub
or
or
or
mov
xor
out
lods
and
pop
mov
xor
sete
and
lret
or
rcrb
push
out
ret
sub
fbstp
xor
lcall
jb
sbb
lods
data16
dec
or
pusha
in
xchg
pop
sar
push
arpl
mov
jnp
lods
sub
pinsrw
loop
pusha
lods
cltd
in
jnp
gs
or
ret
stos
sbb
jo
jle
loop
adc
sub
push
or
cwtl
mov
in
ret
orl
fdiv
jp
movsb
enter
add
shl
lds
xlat
mov
in
in
mov
xor
xchg
add
push
lods
ss
ret
mov
pop
or
frstpm(287
lock
int3
cmc
mov
jl
adcb
xchg
mov
inc
pushf
popf
lahf
cwtl
fcomps
or
mov
lods
mov
cld
mov
push
ljmp
mov
add
in
push
mov
push
xlat
mov
out
subl
hlt
lock
mov
mov
mov
lcall
out
add
xchg
cmpsb
out
sub
std
ret
add
mov
pushf
pusha
adc
cmpb
adcl
xchg
push
cld
shr
push
pop
ljmp
shl
pop
hlt
cmp
cmp
inc
mov
sbbb
sbb
and
jns
mov
jo
sbb
pusha
stos
pop
aam
jecxz
jle
orb
xor
or
mov
xorl
pop
int3
pop
or
push
add
or
lea
mov
sti
add
inc
fadds
or
clc
cmp
sarl
sbb
shrb
cli
push
fcom
mov
bound
pusha
arpl
cmc
xchg
mov
into
andb
and
fidivrs
lcall
repz
sub
sub
call
inc
lahf
mov
and
xchg
lds
cld
outsl
pop
mov
fbld
jecxz
fsubl
lcall
add
mov
push
ret
xor
lcall
sbb
push
mov
int3
mov
jecxz
cmp
push
sahf
sahf
or
shrb
stos
inc
ss
movsl
mov
in
lret
push
and
jle
adc
mov
add
push
mov
lods
scas
scas
adc
fnstenv
jmp
jae
ret
orl
sub
adc
add
in
xor
dec
xor
add
into
mov
jmp
insb
add
int3
pop
and
sbb
push
xchg
mov
and
inc
pusha
shlb
mov
xchg
stos
and
ss
sbb
pop
sbb
push
jg
pushf
mov
and
shlb
cmp
jmp
mov
fbld
and
arpl
insb
int
shlb
mov
cmp
fildl
cmpsl
sbb
sbb
lds
mov
mov
test
in
and
imul
hlt
xchg
mov
je
and
xchg
mov
movsb
daa
push
movsb
lahf
jmp
inc
pop
mov
lock
sti
mov
int
int3
mov
das
sub
repnz
cltd
adc
xor
sub
adc
dec
in
js
mov
popf
dec
push
cs
lock
mov
stos
push
push
dec
loopne
test
or
aas
sbb
fistps
dec
out
sbb
in
jecxz
lahf
les
mov
push
jge
fs
cwtl
lods
stos
outsb
mov
push
pop
std
scas
fmulp
pop
repz
dec
std
fsubrs
stc
cmp
gs
inc
fmull
cli
pop
or
movsl
adc
push
idivb
je
in
xchg
fs
mov
cltd
clc
cld
jne
sbb
pop
xchg
stos
mov
mov
sub
jg
fs
sahf
pop
add
ret
mov
fwait
in
ja
or
iret
std
fcomps
and
scas
leave
mov
cli
into
sbb
sbb
mov
xor
sub
fstps
cld
or
clc
test
in
mov
in
outsb
sub
ds
or
add
adc
mov
push
mov
mov
jmp
mov
jl
cld
sarl
sar
xchg
in
cmp
movsl
jge
push
out
cld
mov
loop
adc
adc
sub
lahf
adc
mov
dec
adc
nop
fstpl
add
push
jb
mov
mov
clc
xor
dec
cli
or
fs
lahf
ret
int3
lods
inc
push
sub
push
dec
jne
fiadds
adc
or
in
aas
leave
sarb
out
cltd
fidivrs
pop
out
mov
mov
adc
sub
je
lods
sbb
jo
sub
aad
pop
push
push
cmpps
sahf
dec
cmp
mov
push
sub
cld
jae
push
rorb
add
je
pushf
pusha
lods
add
out
cmp
std
data16
adc
pop
xchg
repz
push
jmp
mov
add
xchg
mov
sbb
fwait
movsl
sbb
jle
pop
enter
jl
or
das
sub
les
mov
pop
ror
mov
lret
aaa
lcall
cmpsb
cmp
sarb
dec
dec
insl
rcrb
pop
cmp
lods
out
and
push
movsl
xor
or
mov
add
sub
xchg
mov
repz
fbstp
add
sti
dec
mov
das
imul
mov
xchg
push
hlt
orl
test
mov
enter
sub
cmp
cmp
ret
shlb
shll
inc
cld
ljmp
out
pop
repz
or
lret
mov
lds
lock
pop
aam
add
in
out
inc
outsb
dec
cwtl
daa
mov
mov
add
mov
add
xchg
cmp
lret
dec
jp
popa
lds
iret
insl
mov
ss
movsl
mov
or
jle
push
loop
fdivp
sbb
xchg
outsb
notb
or
mov
mov
lret
mov
mov
jbe
jb
gs
push
mov
mov
push
or
push
add
mov
cwtl
cltd
aad
lcall
test
mov
stos
lock
sbb
in
mov
ds
add
xchg
test
imul
xchg
cld
xchg
xor
cmpsl
jle
sub
adc
mov
cmpsb
rorb
sti
cld
lcall
adc
clc
push
mov
aad
inc
mov
pop
outsl
xchg
loope
mov
test
cmp
scas
and
ret
add
arpl
insb
pop
repnz
add
jb
mov
jne
sahf
cmp
mov
add
fdivr
xchg
sbb
cs
shrl
mov
out
inc
test
shll
push
in
repz
or
idivb
mov
leave
in
cmp
dec
subl
andl
push
and
daa
mov
test
adc
jl
in
sahf
cld
cld
or
negb
rcrb
das
push
cmpl
mov
or
test
call
adc
hlt
test
mov
cwtl
aam
jb
dec
int3
loopne
inc
mov
mov
shrl
push
jecxz
mov
dec
sbb
hlt
repnz
and
fldenv
jbe
leave
cld
fstpl
fcoms
mov
jnp
push
pop
xchg
xchg
cmp
add
cwtl
lods
shlb
jl
popf
adc
out
daa
jg
fsubr
dec
mov
sub
jmp
lds
pusha
sub
insb
sahf
pushf
testl
xchg
mov
xchg
sub
or
xor
push
cmp
inc
les
jo
sub
pusha
outsb
into
mov
inc
mov
jno
mov
sbbl
xchg
mov
push
sub
dec
dec
sub
or
add
test
stos
jo
jnp
imul
cmpsb
add
test
push
jg
cmpsb
cli
stos
icebp
adc
incb
insl
mov
xchg
arpl
in
outsb
cmp
iret
xchg
sahf
pop
fcoms
and
mov
jecxz
inc
xor
adc
xchg
jle
add
fstpt
xchg
ljmp
adc
push
add
push
cltd
ret
insb
movsb
inc
scas
jg
test
scas
lret
cmp
cwtl
dec
enter
ljmp
ret
popf
mov
loope
unpckhps
les
push
cmpsl
dec
xlat
lret
stos
notb
mov
lret
adc
xchg
mov
lods
jge
xor
xor
push
cmp
pop
jp
pop
push
lret
stos
lods
jg
aad
jae
xor
mov
cltd
dec
lret
push
sbb
cmp
sbb
dec
test
and
inc
jne
ljmp
xchg
iret
aam
push
sbb
pop
cmpsb
dec
enter
pushf
inc
mov
sarb
pushf
lret
pop
fbstp
lahf
lret
sub
stos
pop
out
lods
xchg
jmp
sub
out
cli
fstps
cmp
inc
jns
mov
in
and
sub
mov
pop
ljmp
mov
std
push
pop
push
outsl
adc
lret
imul
test
mov
int
into
fwait
pop
adc
stc
mov
cmpsb
mov
lret
sbb
inc
cmp
test
adc
hlt
cmpsl
out
into
int3
pusha
jne
sbb
ljmp
xchg
mov
popf
add
push
movsb
jmp
lret
test
cs
cmp
lahf
xchg
fs
mov
arpl
fs
dec
mov
jne
jl
push
cli
cmp
mov
dec
ret
dec
mov
bound
jge
test
repz
xor
sbb
cwtl
push
shrb
or
xchg
dec
cmp
lds
xlat
gs
scas
mov
xchg
xor
mov
adc
push
push
mov
inc
mov
add
and
sbb
and
jne
sbb
jge
sbb
xor
ret
in
xor
into
mov
mov
ret
mov
mov
mov
ljmp
or
mov
mov
or
and
mov
push
stos
stos
lret
xchg
stos
dec
adc
fildll
mov
fs
dec
inc
jns
rorb
add
inc
dec
nop
mov
jbe
loope
sub
add
add
cmpsb
push
and
mov
andl
mov
stos
out
cmpsl
sbb
jp
shr
mov
leave
xchg
jbe
pusha
mov
outsl
testb
jne
or
test
loop
jp
faddp
mov
xchg
sbb
js
aam
loop
pop
pusha
jno
cltd
sub
stos
push
dec
dec
jb
cmpsb
mov
and
les
add
imul
pop
nop
jmp
inc
aad
jae
xchg
imul
mov
imul
in
shlb
cmp
fiadds
inc
movsb
mov
push
jl
jbe
sahf
dec
jae
cmp
nop
arpl
push
daa
sub
cmp
cs
jmp
bound
lds
aas
sbb
mov
pop
stc
sub
fs
and
xchg
inc
insl
xor
jecxz
stos
mov
dec
cltd
xchg
inc
enter
dec
arpl
push
cmpsl
arpl
stc
subl
psrlw
cmpl
aad
dec
outsl
in
mov
jp
out
add
loope
jnp
xchg
push
popa
test
xchg
cmp
decl
call
sub
aad
lcall
lock
xchg
test
jns
mov
xchg
ds
mov
mov
es
lahf
sub
push
insb
mov
cmc
cld
stos
lods
pop
mov
lret
pusha
mov
mov
divl
repnz
xchg
gs
sub
dec
pop
hlt
fildl
in
paddq
ja
repz
pop
mov
test
hlt
cmpsb
loope
cmpsb
and
stc
adc
xchg
js
mov
loope
xor
jno
in
sub
push
mov
ja
stos
sahf
lods
sti
sub
aam
sub
in
inc
xchg
add
insl
xchg
sbb
fs
xlat
adc
in
or
sbb
fstpt
pop
in
imul
ljmp
sbb
jno
in
jmp
addb
dec
cmp
mov
ljmp
enter
mov
addb
cmp
iret
inc
xchg
adc
sbb
mov
cli
xorb
push
push
add
sub
pop
sub
pop
push
test
mov
fldl
pop
add
insl
bound
outsl
movsl
cmp
xor
clc
in
xchg
or
das
incb
or
in
lods
mov
sub
aaa
enter
mov
movsb
jmp
push
sti
cmp
xchg
in
fdivr
movsb
jbe
pusha
call
mov
pop
lock
je
add
xor
xor
dec
pop
pop
js
push
add
stos
fucom
mov
std
je
dec
fnstcw
ljmp
mov
shl
ss
push
in
int
jecxz
add
enter
mov
mov
idivb
fdivrs
cmp
fldt
cmpsl
fisubrs
rcll
jo
and
add
mov
outsb
adc
out
sub
cmp
jno
jecxz
and
insl
aaa
test
faddl
lahf
or
fwait
lret
add
mov
push
jne
ficoml
lret
gs
mov
into
test
repz
rolb
ljmp
push
jge
imul
out
arpl
mov
sub
jo
cmp
dec
mov
loope
ja
push
push
std
pop
pop
ja
cld
cmpsb
and
push
mov
pop
push
dec
dec
mov
xchg
xchg
jl
add
sub
xchg
push
push
push
and
xchg
push
mov
and
sub
push
fdivs
push
orb
inc
dec
bound
stc
adc
out
xchg
pop
out
cmc
push
fmuls
in
cld
mov
sbb
mov
dec
popa
push
cli
inc
daa
imul
pop
pop
mov
lock
xchg
out
pusha
cmovb
xchg
adc
stos
lods
aas
xchg
aaa
xchg
aaa
jo
and
sub
mov
sbb
ror
mov
pop
scas
jecxz
stos
addr16
xor
mov
rolb
dec
mov
loop
arpl
push
lods
fnstcw
fiadds
mov
iret
xchg
push
jnp
jecxz
sbb
imulb
int
or
cli
mulb
push
mov
inc
int
cli
cmove
jecxz
imul
jge
xor
jge
sub
xchg
mov
cli
mov
ret
push
dec
fdivrs
pop
jae
fisttps
mov
cwtl
fs
dec
add
jge
addl
bnd
ret
mov
aam
xchg
lret
mov
mov
pop
mov
push
or
les
mov
push
mov
jo
jbe
jge
je
lcall
gs
jmp
lahf
pop
lods
add
out
mov
mov
lds
clc
xor
xchg
hlt
inc
or
fdivrs
xor
xlat
mov
lret
ret
rcr
inc
inc
imul
xchg
push
jmp
clc
add
push
mov
test
dec
aaa
imul
xchg
lock
lods
xchg
xchg
xchg
push
jp
sbbl
stc
std
repnz
daa
jbe
lahf
mov
cltd
push
cs
mov
mov
test
pop
inc
test
out
pop
das
mov
pop
idivl
cmpb
jbe
lods
ret
mov
fldl
ret
insb
lea
in
adc
xchg
rcr
leave
sbbb
jg
out
je
cmp
add
rorl
or
push
xchg
mov
repnz
fnstsw
dec
std
ret
ret
sbb
xorl
js
and
sarb
jno
xchg
xchg
xor
push
xor
repnz
lcall
pop
adc
dec
adcb
scas
xor
xchg
fs
adc
mov
stc
mov
loop
rclb
pop
mov
in
fcmovnbe
inc
scas
loopne
lret
mov
mov
leave
pop
into
jns
loopne
gs
mov
cli
in
add
enter
adcl
mov
mov
xchg
fists
dec
test
mov
xchg
push
orb
jae
shrb
out
mov
pop
jns
push
inc
leave
aad
sbbl
popa
jmp
add
imul
popa
adc
js
xchg
fimuls
jo
mov
and
stos
into
jle
fmull
bound
gs
fwait
insl
fwait
push
push
test
or
mov
pop
sahf
jp
add
sbb
inc
xchg
fs
xchg
in
movhps
call
cld
popa
in
enter
push
ljmp
cmp
sbb
jge
iret
or
xchg
inc
aaa
jns
pop
scas
jne
out
push
xchg
repnz
dec
movsb
push
jmp
pop
mov
sbb
push
movsl
mov
or
orl
mov
xchg
adc
inc
das
push
jecxz
fisubs
adc
fwait
repnz
mov
push
pop
mov
and
lods
cld
dec
ret
mov
mov
jae
mov
ror
pop
scas
mov
mov
lcall
div
in
lret
adc
push
imul
sub
sbb
adc
nop
shll
es
fiaddl
mov
sbb
out
into
in
enter
xchg
mov
testb
into
mull
adc
sub
roll
daa
push
mov
test
cmp
cmp
jnp
in
subl
fwait
adc
sub
mov
test
mov
mov
mov
sub
rolb
mov
ja
pop
cmp
fs
adc
les
pop
bound
aam
lret
pop
data16
data16
shll
orl
leave
push
inc
xor
adc
les
adc
lds
lock
sub
pop
lret
mov
dec
idiv
jbe
std
sbb
xchg
mov
mov
ja
pop
or
clc
pop
push
push
gs
ljmp
das
jp
sub
inc
fsubl
mov
loopne
and
popf
jp
cmc
lds
sub
xchg
pop
xor
jns
sbb
ljmp
jb
jnp
jbe
cmp
cmpsl
into
movsb
adc
xor
mov
leave
mov
sti
mov
les
dec
lahf
sub
enter
push
mov
pop
cwtl
lds
movsl
pop
movsl
stos
mov
jbe
cmp
sahf
fs
lret
cmp
mov
mov
mov
pushf
cwtl
repnz
cmp
dec
pop
mov
and
ljmp
fdivr
add
push
int
cmpb
test
sti
dec
mov
add
dec
jle
int3
mov
mov
sti
fidivl
sub
ret
orl
sahf
gs
or
je
insb
pop
xchg
pop
lods
jge
mov
test
jl
lret
sub
xchg
and
mov
xchg
jbe
sbb
mov
xchg
xor
push
ss
lcall
outsb
add
jno
aaa
lds
add
push
push
loope
xchg
lret
insl
movsl
imul
scas
adc
popa
test
xchg
lock
mov
sbb
jno
daa
or
arpl
out
movsb
jecxz
adc
in
or
mov
cwtl
sbb
add
mov
out
adc
push
insb
fcomi
xchg
xor
jns
sbb
sub
ret
dec
stc
popf
loopne
mov
test
xor
jbe
call
cmpsl
popa
add
cmp
mov
std
bound
in
out
pop
and
mov
sub
adc
ds
movsl
sbb
test
sbb
cmovp
push
jae
cmp
outsb
outsl
sub
push
mov
rcll
or
mov
clc
jns
int
push
mov
pop
pop
enter
subb
loop
imul
bound
stos
aad
daa
dec
push
ds
mov
loope
xchg
jmp
mov
cwtl
lahf
cs
pop
sub
mov
pop
lret
xor
push
fiaddl
sub
in
enter
and
rorl
dec
imul
adcl
aad
in
nop
fstp
stos
mov
adc
mov
scas
cld
stos
ror
pop
sbb
inc
mov
xor
in
lea
sbb
pushf
jmp
imul
mov
dec
aaa
out
loop
shll
imul
insb
jge
cmp
les
clc
repnz
mov
ret
pop
fwait
sub
sub
or
mov
bound
and
loope
xchg
adc
and
pop
lret
repz
les
loopne
and
mov
and
mov
xchg
or
cmpsb
gs
scas
xchg
sbb
leave
popf
sub
test
in
jno
dec
test
mov
add
sub
sbbl
push
inc
pop
pop
mov
sub
arpl
mov
adc
mov
mov
sub
iret
mov
fwait
push
lods
pop
fnstsw
jns
or
pop
pop
iret
cmp
sub
dec
mov
fs
fs
mov
mov
in
add
mov
cmp
mov
outsb
sub
repnz
cld
and
shr
loop
inc
mov
aaa
int
ljmp
mov
cmp
test
fadds
in
and
repnz
scas
or
arpl
and
push
call
sbb
fmul
pop
jnp
adc
sbb
or
or
nop
pop
sub
xor
ret
xorl
mov
inc
das
xchg
subl
jbe
push
stc
idivl
addr16
rolb
cli
add
subb
jmp
out
int
jg
adc
ljmp
stc
mov
test
lock
xchg
sub
les
imulb
out
ficomps
inc
in
mov
inc
jae
mov
popf
push
leave
adc
aas
ds
mov
pop
daa
jmp
jg
cmp
xor
sbb
and
lock
repz
stos
insl
repnz
std
and
cwtl
xchg
repz
outsb
stos
sub
rclb
mov
aas
adcl
daa
xchg
in
jg
mov
xchg
out
in
add
aas
mov
lods
testl
scas
insl
xor
in
jbe
gs
and
sub
fcmove
lds
dec
xor
jg
add
sub
int3
test
push
std
negb
lcall
lcall
idiv
sbb
sub
sbb
mov
add
js
and
lods
fldenv
movsb
imul
movl
xchg
dec
in
lahf
dec
fcmovbe
out
mov
ljmp
insl
or
dec
add
inc
xchg
pushf
cmp
xor
dec
in
dec
ss
in
int
jo
mov
repz
xchg
mov
sub
pop
pop
or
adc
mov
mov
test
pop
or
sti
push
fsubs
xchg
mov
dec
cmp
cwtl
stos
ret
dec
add
movb
insb
push
add
addl
jnp
dec
mov
mov
lods
arpl
mov
jp
adc
loopne
push
cmc
add
loopne
movb
in
fwait
push
cmc
jp
lcall
add
in
jle
or
insl
hlt
fstps
push
or
leave
push
jae
shr
jmp
fbstp
dec
aaa
je
cmc
fsubl
mov
icebp
sub
jae
test
mov
mov
pop
push
cmp
mov
aas
cmp
cmp
cld
out
or
jnp
hlt
ret
sbb
mov
pop
lock
xor
cmpsl
xchg
hlt
dec
arpl
pop
shl
mov
out
int3
or
gs
sahf
fsubl
mov
and
pusha
inc
fucomi
out
shl
iret
sub
jns
aad
bound
setg
cltd
icebp
pop
mov
pushf
sub
xor
cs
sub
aas
and
push
mov
insl
cmp
cwtl
loop
cli
jge
stc
into
mov
inc
sub
pop
je
jp
fs
ljmp
lahf
push
rclb
es
jnp
negb
add
stc
sbb
in
iret
jmp
push
mov
lock
fmuls
addr16
jg
mov
pop
out
shl
outsb
adc
rorl
sarl
or
addr16
popa
mov
sbbb
enter
add
shrd
adc
outsb
dec
mov
cmp
movb
lahf
stos
adc
push
mov
ror
dec
ljmp
lds
inc
or
dec
mov
dec
sub
in
leave
cmp
clc
inc
or
loope
add
and
mov
dec
push
xor
sub
test
xor
lods
sbb
pop
xchg
arpl
mov
xchg
mov
cwtl
ret
pop
in
push
scas
test
add
sbb
arpl
arpl
or
mov
dec
mov
mov
cmpsl
ljmp
aaa
and
mov
jl
push
xor
jb
jecxz
or
add
test
push
testl
mov
lods
xor
out
jl
mov
mov
cld
xor
mov
into
adc
cmp
mov
sub
clc
mov
jb
idivb
cltd
cmp
push
gs
jb
enter
stc
fs
out
cld
cs
out
jo
push
inc
sub
sub
jg
fs
jb
das
lds
sub
dec
or
and
int3
xchg
xor
and
jl
pusha
cmp
and
add
div
inc
lcall
orl
jmp
popf
stos
out
cmovle
gs
dec
xchg
stos
clc
jno
pop
in
push
lahf
hlt
into
pop
xor
adc
das
jbe
rorl
mov
mov
ljmp
js
and
ret
ljmp
gs
mov
xchg
sbb
into
popf
or
inc
push
outsl
in
daa
in
xor
mov
mov
push
pusha
negb
jne
adc
iret
add
imull
std
divl
cwtl
lahf
dec
nop
and
and
and
aad
addr16
mov
mov
pop
jns
nop
clc
xor
push
add
ds
outsl
ljmp
insb
jns
jnp
sbb
mov
inc
xchg
mov
xchg
loope
jp
dec
idiv
in
mov
adc
fnstcw
bound
dec
sub
repz
js
lcall
mov
or
add
or
jnp
bound
rorb
mov
fdivrs
out
pop
call
test
push
aas
jg
pop
xor
and
xchg
mov
push
dec
lock
pop
jge
repz
shrb
loop
mov
xchg
sbb
imul
test
push
add
imul
push
mov
push
ja
cli
inc
mov
jb
xchg
jnp
add
js
dec
add
dec
imul
inc
inc
nop
adc
mov
and
ret
sub
adc
pop
sbb
ds
jmp
or
pop
lret
mov
enter
fxam
sbb
xchg
jmpw
out
sub
pop
lods
stc
mov
mov
mov
push
call
jne
xchg
mov
xchg
fsub
loop
test
mov
ds
sbb
rorb
push
or
mov
ja
test
lds
rcrl
dec
xchg
loope
or
xchg
je
mov
push
mov
hlt
lahf
insl
lock
mov
mov
pushf
lods
cmc
mov
xor
rcrl
test
in
jmp
mov
stos
cs
and
xchg
dec
loopne
lcall
out
std
insb
nop
mov
loopne
into
notb
movb
cmp
mov
push
adc
nop
scas
mov
inc
inc
imul
mov
mov
mov
dec
lea
pushf
and
div
push
clc
ljmp
mov
call
in
or
gs
ljmp
and
push
jmp
mov
aad
call
mov
mov
cli
cmc
daa
div
leave
mull
in
mov
in
sbb
test
xor
ja
hlt
dec
lahf
cmp
xorl
andl
aas
and
xorb
xchg
xchg
add
and
or
div
jbe
xchg
and
jp
lahf
out
es
adc
fmul
lock
pop
mov
adc
sar
mov
sahf
mov
push
iret
jle
mov
enter
push
sbb
pop
in
mov
hlt
test
fcoml
mov
pushf
xor
movsb
int
dec
scas
hlt
inc
fs
dec
and
cwtl
and
test
shr
cld
mov
inc
mov
rorl
je
xchg
loopne
mov
aad
jno
jns
mov
cmp
inc
data16
test
pushf
mov
loope
test
movsb
dec
mov
lods
mov
sti
or
mov
in
mov
out
dec
push
push
stos
in
mov
mov
push
xchg
cwtl
xor
sub
sahf
push
jge
outsb
stos
mov
push
mov
or
mov
or
push
sub
mov
negl
cld
nop
icebp
xchg
pusha
pop
fwait
ret
xchg
adc
iret
mov
dec
lock
and
add
cmpsl
dec
sbb
or
or
mov
push
stos
icebp
cmp
mov
and
dec
dec
add
orb
dec
movsb
lock
stos
inc
jge
cli
sahf
sarb
sub
jb
movsb
push
shrl
js
hlt
std
add
lret
pusha
jbe
jb
out
fcomps
in
cs
or
pop
fs
and
aam
loopne
jbe
push
xchg
sbb
ret
push
add
lea
mov
xchg
lods
jae
repnz
mov
nop
xchg
es
fs
mov
test
push
call
and
scas
in
cs
in
push
loop
lds
inc
mov
and
pop
int3
xchg
mov
aam
xlat
out
adc
sahf
andb
xor
push
aad
mov
notl
add
mov
add
std
jne
fisubs
cs
dec
mov
mov
aaa
inc
push
jo
imul
dec
paddsw
test
pop
lret
or
setbe
mov
mov
fsubrl
sub
or
enter
xchg
and
and
xchg
mov
repnz
mov
mov
out
in
mov
push
insb
cmp
filds
mov
mov
rcr
aam
or
jmp
sub
shrb
add
std
cld
jp
inc
fmul
mov
pop
pop
ljmp
stos
bound
mov
repz
lcall
hlt
mov
sub
lret
jp
cli
mov
and
repnz
cmp
sti
aam
test
mov
jl
fwait
push
push
test
add
ss
jb
and
pop
pushf
sbb
mov
sbb
insl
fsubrl
decb
push
stos
sahf
clc
push
sub
call
out
lea
cltd
xchg
js
mov
xchg
pushf
sub
push
cmpsl
out
push
std
lods
mov
test
adc
imul
adc
je
push
out
or
incb
fwait
dec
clc
mov
bound
mov
scas
ja
xor
test
and
xor
in
int
add
pop
jno
bound
repnz
add
pusha
add
stos
mov
pop
xchg
sub
addl
pslld
inc
ds
mov
or
ja
ret
inc
daa
add
fcomp
cltd
outsl
popa
lahf
dec
mov
in
shll
fnstsw
jb
cli
bound
adc
add
sub
cmp
jp
imul
gs
xor
xor
mov
fwait
xchg
inc
jbe
stos
aaa
out
push
ret
loope
sarl
outsb
jmp
cmpl
sub
add
xor
inc
repz
push
mov
xchg
fsubs
xchg
mov
or
bound
and
xchg
jo
out
or
das
mov
add
lret
and
shrb
test
and
ljmp
adc
xchg
push
call
pop
ss
mov
mov
out
adc
mov
mov
std
test
pop
stc
mov
dec
or
test
jmp
pushf
sti
in
dec
sbb
outsb
cltd
lcall
push
mov
push
sbb
sub
jnp
mov
push
ficoml
adc
in
lds
jae
sti
push
adc
sbb
dec
enter
xor
femms
jo
sub
add
lret
add
data16
ret
ficoml
mov
gs
push
test
sbb
or
push
jno
pusha
cld
or
lds
iret
jb
bound
cwtl
pop
xor
mov
loopne
icebp
test
xchg
dec
dec
in
inc
rorl
push
jnp
test
movsl
mov
cmp
cmpsl
addr16
roll
aaa
pop
scas
dec
sbb
loop
scas
xor
fisubl
ds
cmp
sbb
sub
not
adc
and
stc
sub
inc
adc
jo
or
insb
clc
mov
jne
inc
pusha
jbe
push
mov
test
xor
sub
imul
repz
jno
movsl
loopne
test
int3
mov
mov
xchg
pop
stc
fistps
mov
cwtl
add
xlat
push
xchg
xchg
icebp
push
jecxz
dec
mov
ficoml
movsb
mov
xchg
push
mov
lods
dec
adc
jg
mov
mov
push
fwait
add
push
leave
sbb
mov
add
pop
adc
jo
mov
xchg
xchg
mov
mov
sbb
inc
mov
rcrl
test
pop
xchg
mov
test
xor
add
pop
pop
pusha
add
mov
aam
das
popf
xchg
add
mov
mov
in
dec
vgatherdpd
add
and
add
xchg
sbbb
loope
cmp
sbb
fs
ficoms
leave
jb
fwait
dec
lds
sub
enter
imul
cmc
insb
in
in
gs
adc
mov
shll
mov
xor
mov
negl
add
stc
lock
add
test
addr16
xchg
mov
pop
mov
outsl
ret
push
add
je
xchg
aas
sahf
fs
push
add
pusha
pushf
decl
cmp
pop
stc
add
pop
add
xchg
push
sarb
dec
insb
lods
xchg
movsl
jbe
shrl
inc
sub
test
in
lcall
and
or
push
xchg
int
pop
mov
jge
arpl
inc
pop
inc
rorb
xchg
mov
sub
add
push
fs
sub
inc
mov
cwtl
pop
loope
add
ja
dec
mov
cmpsl
pop
clc
test
sbb
scas
xor
aam
inc
pop
fimull
xchg
stc
lahf
outsl
mov
add
test
add
push
xchg
jbe
push
mov
and
sub
jo
push
mov
and
dec
std
add
dec
xchg
jg
gs
or
inc
popf
ret
loopne
bt
cmpsb
pop
data16
jne
lock
mov
push
in
cld
mov
add
lahf
adc
pop
sahf
and
idivb
mov
push
ds
in
fiaddl
cmpsb
je
mov
pushf
add
or
insl
mov
fdivrl
std
sub
add
loopne
out
or
push
mov
in
mov
dec
loope
fistps
nop
js
push
xor
mov
inc
dec
mov
ljmp
jmp
mov
rcrb
add
mov
push
xor
inc
cmp
sub
sbb
push
lret
dec
lods
rcrb
jno
or
insb
shl
dec
ret
mov
out
cmpb
in
into
jmp
add
mov
insb
das
popa
mov
sub
push
adc
xor
outsb
subl
fcom
aad
xchg
roll
loop
outsb
fisubrl
add
dec
into
xchg
addr16
add
cwtl
cmc
and
push
stos
lock
or
data16
push
stos
xchg
daa
lods
decl
pushf
cmp
mov
mov
add
divl
adc
mov
mov
fwait
and
popf
mov
repz
out
dec
mov
cs
bound
jl
loop
xor
stos
push
add
adc
lock
sub
aad
jge
out
push
call
aaa
mov
adc
nop
es
inc
push
outsb
mov
mov
inc
test
mov
xchg
mov
cmp
packuswb
add
mov
fs
jns
push
cltd
xchg
imul
dec
clc
mov
jae
xlat
test
cltd
outsb
mov
add
sub
fisttps
xor
je
and
xlat
cmp
cmpsl
push
mov
jl
scas
aaa
cmp
in
jnp
lods
out
ljmp
xor
inc
cs
push
lea
mov
pop
push
adc
sbb
push
adc
add
fcomip
outsb
call
es
cmpb
std
or
popf
adcl
arpl
sub
fsubr
push
das
sbb
in
into
cmc
daa
addl
out
leave
pop
cmp
mov
xchg
xchg
aaa
jmp
and
jno
in
sbb
inc
and
add
jno
shrl
xchg
mov
sahf
enter
into
arpl
pop
jp
mov
cmp
lret
arpl
outsb
mov
repnz
inc
inc
add
jnp
cmp
or
xor
into
cwtl
adc
fidivrl
xor
lea
push
push
sbb
in
add
not
int3
daa
std
jl
into
das
inc
decl
fildl
popf
fistpl
adc
xchg
int3
or
aad
cld
mov
push
imul
mov
decb
or
mov
int
add
ljmp
popf
xchg
fldcw
loope
jbe
mov
rcr
fstl
or
ret
cmp
sbb
push
mov
andw
scas
dec
imul
std
sub
test
cltd
push
loope
sub
cmp
aad
fsub
pop
push
movlps
cmp
push
push
dec
stos
dec
mov
andb
iret
sbb
sub
inc
or
sbb
movsb
ffreep
sub
sbb
cli
mov
popa
shlb
sub
pop
sbb
pop
mov
mov
sbb
ljmp
int3
jnp
lret
pop
push
mov
cltd
sbb
in
mov
ret
call
mov
sbb
mov
in
adc
xorl
mov
lods
mov
in
loope
mov
sub
jne
mov
andl
aaa
lods
aad
xchg
add
add
mov
dec
or
push
mov
push
in
shll
xorb
mov
repz
jo
mov
gs
sbb
repz
or
cld
stos
sub
mov
gs
mov
mov
push
call
mov
sub
mov
int3
or
xchg
movsl
pop
mov
call
rclw
mov
lock
shlb
ljmp
mov
shr
aaa
in
xchg
sbb
ljmp
jb
adc
ds
add
movsb
cmp
mov
rcll
outsl
mov
iret
mov
or
fisttpl
xor
out
sbb
xor
push
xor
cmp
sarl
cmp
in
pop
sti
mov
push
pop
cli
sbb
sub
cmp
dec
cmpsl
cltd
enter
nop
and
xor
fdivrp
push
add
fnstsw
mov
pop
push
jp
jp
pop
pushf
clc
jae
js
cli
sbb
int
icebp
pop
call
lds
push
loopne
hlt
aad
sbb
push
inc
fistpll
iret
dec
lods
ss
mov
cmc
sbb
repz
cmpsl
push
js
add
cwtl
cmpsb
inc
xor
enter
je
push
shl
xchg
mov
xchg
bnd
mov
sbb
les
sbb
inc
mov
shlb
xor
test
out
popa
dec
jne
fists
or
sub
dec
jno
add
jle
jge
fwait
int
shl
out
mov
or
loope
outsb
push
adc
or
cmp
pop
in
adc
mov
bound
mov
sub
stc
add
push
jbe
cmp
das
or
adc
stos
fnstcw
mov
mov
xor
jl
fsubrs
mov
test
incb
rclb
ficoml
mov
mov
cld
test
push
cli
int3
shl
mov
loop
test
into
stc
mul
pop
scas
std
jae
xchg
insb
dec
push
jge
repnz
enter
popa
or
lds
jl
lea
insl
mov
imull
fisubrl
cmp
inc
jbe
int
adc
stc
clc
cmp
jl
test
xchg
xchg
imul
jbe
sub
sub
xor
mov
pop
push
fdiv
and
push
ss
std
jno
push
push
inc
outsb
adc
in
sbb
fcompl
out
in
push
jbe
and
xorl
aad
inc
mov
lock
loope
mov
lods
add
add
add
jne
jae
aad
subl
mov
fsts
mov
cmp
mov
adc
out
ds
mov
dec
cli
aaa
sub
testl
icebp
xchg
lcall
sti
out
psrad
int
mov
addr16
std
das
ljmp
call
pusha
add
mov
in
jge
mov
loopne
cmp
lods
inc
in
movsl
mov
ret
dec
aad
push
stc
outsb
or
hlt
fldl2e
jae
mov
jmp
int3
mov
lods
and
pop
rcrb
stos
push
add
scas
aam
add
mov
xor
stos
inc
push
xchg
in
lret
mov
nop
in
add
adc
dec
add
pushf
pop
lret
xor
ret
mov
adc
and
sbb
lds
pop
cmp
dec
scas
adc
icebp
pop
mov
mov
divb
inc
sub
popa
test
cld
mov
mov
bound
inc
or
push
add
in
xchg
ds
jns
jl
dec
sbb
xchg
and
add
cli
jne
xchg
loop
es
icebp
test
scas
lock
aad
push
mov
jp
lahf
add
sbb
idivb
jbe
scas
pop
sub
xor
ret
dec
rcrb
dec
jmp
les
ret
rcrb
das
aam
or
mov
in
cli
idivb
sbb
rclb
push
gs
inc
xor
out
lahf
lds
stc
jns
sub
iret
test
ficoms
in
jg
mov
pop
popa
popf
add
es
and
and
outsb
subl
lock
sub
out
push
xchg
xor
xorl
pop
into
jp
leave
adc
pop
inc
outsl
xor
out
push
jl
add
add
sub
and
add
pop
movsl
lret
and
shrb
ret
push
mov
jbe
cmp
gs
test
add
jnp
xchg
das
xor
pop
or
dec
mov
inc
insb
test
and
cmp
add
addr16
mov
gs
sbb
out
jmp
jl
in
jmp
fisttpll
popf
ret
pop
test
mov
xor
jg
negl
add
daa
pop
and
jno
push
ja
mov
hlt
xor
and
outsb
mov
loop
test
pop
jmp
shll
adc
insl
mov
and
cwtl
mov
les
jo
mov
pop
sub
inc
pop
ss
jl
jno
xor
mov
xchg
inc
xchg
adc
shrl
jno
jmp
pop
insb
lock
push
xchg
hlt
enter
adc
and
jnp
pop
test
lods
xchg
movsb
and
mov
ret
ss
pop
pop
push
cmp
xor
adc
repz
dec
or
jg
sbb
aas
int3
mov
out
mov
pushf
cwtl
outsl
loop
and
imul
jmp
shlb
adc
icebp
bound
jns
mov
test
mov
mov
leave
mov
mov
jmp
cmc
in
push
test
sbb
cmpsl
jecxz
inc
inc
dec
push
repz
mov
or
sbb
jge
xchg
add
popa
cltd
loop
stos
mov
nop
cld
je
jl
pop
mov
enter
lea
idivl
sbb
pop
pushf
mov
jno
es
add
xchg
mov
xchg
mov
neg
int
adc
xchg
mov
pop
in
xor
mov
out
scas
loop
movsl
or
push
fcomps
int3
add
shlb
popa
cmc
jno
pushf
xchg
dec
loopne
dec
int
shr
sub
imul
cmp
sub
push
adc
dec
cli
in
shrb
enter
loop
in
inc
sbb
lods
lret
pop
stos
imul
shr
dec
test
pop
jae
jp
je
jmp
push
mov
scas
ljmp
and
xchg
hlt
or
iret
test
rorl
push
dec
inc
xchg
loop
or
out
popa
rorb
xchg
mov
sbb
jbe
ss
lret
inc
js
jmp
xchg
popa
cmp
xchg
pop
in
fwait
xchg
add
pop
jae
push
sub
mov
inc
fs
mov
imul
xchg
pop
push
push
sub
and
sar
xchg
movsl
je
sub
jmp
dec
gs
cmpsb
mov
mov
je
data16
std
sahf
lahf
test
test
outsb
push
repnz
xor
rcrl
das
mov
sub
in
add
pop
inc
xor
sbb
mov
ret
mov
outsb
xor
sbb
mov
out
sub
push
add
nop
lods
mov
sbb
pop
adc
adc
fists
lods
lcall
hlt
cmp
mov
lret
push
das
ret
or
cmc
pop
faddl
stos
and
loopne
dec
mov
popa
out
push
cmp
and
or
leave
and
jp
movaps
mov
mov
inc
push
jp
sub
loopne
mov
mulb
clc
negb
pop
mov
cld
in
imul
loope
sbb
jg
scas
jl
mov
or
sub
lock
mov
out
mov
lea
add
xor
testl
or
mov
std
inc
dec
pushf
cmp
push
insl
cs
fnsave
dec
movsb
in
mov
or
lret
in
ret
lds
popa
mov
mov
iret
je
cmpsl
or
xchg
xchg
mov
or
fs
into
sub
xor
sub
loopne
mov
or
iret
leave
jmp
xchg
jbe
bound
test
sti
add
lahf
mov
xchg
jg
pop
mov
ud1
and
lcall
mov
in
gs
shl
je
pop
in
andl
data16
xchg
rolb
psrld
popa
mov
sbb
and
cwtl
je
out
imul
cltd
cli
in
mov
lahf
in
mov
adc
and
or
mov
in
stc
adc
mov
add
das
out
rcrb
adc
sub
jo
or
xchg
ss
pop
xchg
pop
in
fs
loope
xchg
shrl
subl
stos
add
test
push
dec
add
xchg
lock
mov
mov
lods
int
daa
inc
xorb
sub
mov
pop
je
sub
xor
ljmp
dec
rorl
outsb
ficoms
sub
pop
lds
mov
scas
mov
adc
in
addl
daa
inc
pop
or
mov
jns
jo
dec
cmp
hlt
xchg
xchg
lahf
mov
inc
pop
mov
jp
das
out
js
popf
dec
enter
adcl
mov
pop
push
inc
mov
cltd
push
adc
cmp
and
and
aas
divb
stos
push
cmc
sub
fs
sbb
sub
jo
in
addr16
xchg
insl
imul
pop
jle
adc
les
cmp
push
inc
lock
push
inc
call
out
inc
data16
mov
jae
decl
iret
push
loope
add
adc
sbb
mulb
fdiv
push
inc
sbb
adc
jb
mov
cmp
sbb
shll
or
mov
sbb
mov
arpl
popf
pop
arpl
and
icebp
testl
int3
cmpsb
xor
push
in
adc
adc
sarb
adc
sub
mov
inc
js
add
adc
in
iret
mov
daa
dec
sub
mov
adc
sub
gs
adc
or
xor
rol
popf
ret
into
add
clc
out
es
or
mov
sbbb
jl
mov
adc
inc
cltd
push
push
push
xchg
aas
mov
test
into
rorl
mov
fstpl
push
inc
adc
pop
imul
mov
mov
adc
testb
mov
sub
sub
lock
arpl
or
mov
ljmp
fdiv
dec
adc
and
push
mov
pop
jae
arpl
push
pop
repz
inc
fldl
cmp
mov
lret
pop
fs
pushf
mov
dec
dec
and
cs
xor
sahf
dec
mov
pop
andb
lock
dec
scas
mov
ljmp
imulb
stos
std
sub
inc
inc
xchg
jmp
insb
dec
adc
pop
mov
mov
lcall
js
add
test
inc
mov
fwait
ret
pop
ret
out
xchg
lods
inc
cwtl
adc
aam
addr16
in
xor
out
cmp
js
adc
movsl
hlt
lahf
cwtl
sbb
dec
mov
jg
imul
jl
xchg
ja
in
int3
int
test
xor
sbb
jo
mov
js
push
jl
pop
push
in
andl
xor
adc
mov
xchg
and
ror
fs
mov
addr16
out
lods
sub
lahf
std
hlt
sub
in
sbb
loop
orb
out
add
push
jecxz
aas
sbb
jg
shl
xor
jmp
clc
jo
jnp
std
out
xchg
stos
add
push
int3
das
pop
and
xchg
scas
pop
xchg
push
or
in
push
mov
aam
cmp
adc
jae
add
xchg
lods
jno
fdivl
jne
xchg
sub
pushf
push
mov
xchg
in
xor
jg
push
aad
pop
push
loopne
jecxz
enter
mov
dec
and
mov
lahf
xchg
jb
hlt
js
into
jne
adcb
test
in
push
mov
subl
ret
xchg
sbb
push
clc
clc
sti
push
lret
scas
loopne
inc
test
mov
out
xchg
aam
sub
adc
jno
and
in
movsl
pushf
icebp
cld
outsl
lods
xchg
imul
repz
mov
jb
jne
xchg
or
add
enter
fwait
repnz
push
ja
jp
mov
lods
pop
jecxz
pushf
subb
pop
mov
in
jbe
fimuls
lods
sbb
loopne
cli
ret
xchg
xlat
push
je
insl
les
mov
and
sbb
xor
cld
pop
jp
scas
iret
adc
adc
adcl
push
sbb
repz
adc
in
ficoml
jmp
dec
pusha
sub
mov
pop
mov
adc
adc
flds
push
jo
and
cmp
nop
je
je
icebp
cmpb
pop
xchg
mulb
prefetchw
sub
push
lcall
call
jp
add
imul
adc
xchg
dec
sub
mov
pop
mov
cwtl
pusha
repz
in
lods
lahf
das
popf
shlb
inc
add
inc
pause
mov
stc
shl
mov
loop
pop
pop
add
pop
test
sub
mov
pop
inc
lods
pop
fsubrl
rcrb
mov
mov
in
or
mov
push
xchg
or
and
adc
jge
push
add
test
push
subb
std
fbld
div
mov
sbb
mov
pop
jl
outsl
add
mov
adc
fiadds
or
repnz
in
repz
mov
hlt
bound
loope
dec
imul
pop
mov
negb
mov
outsb
rorb
adc
lea
push
out
pop
mov
arpl
movsl
mov
ss
pushf
cmpsb
xchg
pop
fsubl
fcmovnbe
mov
pop
cmp
push
mov
cmp
ret
mov
in
dec
adc
js
ja
jg
imul
dec
mov
ljmp
pop
sub
in
adcb
shlb
dec
push
aam
bound
mov
xor
or
pop
imul
lcall
jmp
lea
sti
jmp
aas
push
xor
outsl
paddusb
data16
jle
sub
mov
sti
cli
out
aaa
mov
xor
cs
out
dec
pop
into
daa
xor
xor
sbb
arpl
cmp
jno
mov
cld
pop
in
dec
fcmovbe
xor
ret
cmpsb
movsb
and
fs
stc
inc
repnz
adc
push
cmp
xchg
jns
sub
sbb
adc
mov
xchg
jmp
in
pop
dec
sbb
sbb
and
cmpsb
xchg
call
test
decb
dec
mov
mov
push
cmp
and
mov
stc
pushf
mov
pushf
cld
loop
daa
mov
mov
movsb
xor
shl
enter
inc
sub
fstps
sbb
fwait
jle
dec
dec
es
add
mov
pop
xor
cmpsb
decl
out
ss
xorl
jle
push
ljmp
mov
push
xchg
in
adc
je
sbb
xor
test
mov
and
fwait
xchg
inc
add
icebp
mov
movsb
arpl
mov
xor
push
xor
sbbl
pop
mov
add
adc
test
mov
add
cmp
jno
sbb
pop
inc
les
cmc
fdivrl
xchg
inc
mov
xchg
out
jmp
cmp
dec
ss
xor
test
fwait
and
aad
mov
lret
add
into
push
adc
stos
xchg
cwtl
ficompl
addr16
fsubrs
sub
mov
or
lret
jno
hlt
jl
push
jl
arpl
xchg
fsubrl
pusha
shll
lahf
outsl
dec
in
loopne
xor
or
fmul
shll
xor
dec
dec
rcr
loop
or
mov
dec
pop
movsb
add
mov
loop
arpl
jo
sub
add
lea
or
fucomp
outsb
popf
sar
shrl
ljmp
push
clc
mov
insb
or
lahf
sbb
xchg
js
mov
imul
in
ret
xchg
scas
mov
adc
scas
fidivs
shll
pop
push
out
notb
cmp
mov
in
fldt
mov
loopne
in
popa
and
jbe
push
push
mov
push
imul
aaa
mov
mov
xlat
fs
mov
enter
mov
cmc
lods
inc
or
push
sub
popa
jp
mov
cmp
mov
pushf
mov
hlt
repnz
jns
gs
pop
dec
test
insl
jmp
cltd
roll
dec
add
xchg
arpl
dec
es
adc
out
add
jnp
ss
ja
pop
movsb
cmpsb
ljmp
movsb
adc
xor
jmp
push
push
fs
and
push
fdivl
aam
mov
jl
push
adc
xor
adc
inc
push
pop
add
push
popf
lret
fsubrs
idivb
bound
insl
test
mov
stos
rcrl
cwtl
dec
fadd
pop
mov
ljmp
pop
jnp
int
rcrb
les
jo
filds
mov
mov
cmp
addr16
mov
sub
fwait
cmp
lock
fildll
inc
jo
outsb
loop
mov
sbbb
inc
repz
xchg
les
call
push
mov
sub
add
jnp
push
popa
push
or
mov
gs
mov
adc
out
mov
insb
dec
ror
pop
xor
pop
push
jle
and
sub
aad
sub
sar
sbb
sbb
jecxz
pop
loope
inc
or
add
and
mov
shrb
jl
mov
leave
sub
add
inc
jns
aad
and
xchg
pop
add
dec
repz
out
xor
aam
das
popa
push
cmp
data16
pop
xchg
mov
mov
lock
dec
cmp
addr16
or
aad
sub
addb
repz
cmc
cld
test
add
or
loop
aas
out
outsb
push
shr
int3
arpl
push
sbb
in
inc
divl
mov
cmovl
gs
add
and
out
sarb
mov
jb
jecxz
mov
add
xchg
hlt
rcrl
sbb
cmp
mov
dec
inc
xchg
test
pop
dec
popf
decl
jmp
dec
cmpsb
loope
push
mov
insl
jp
cwtl
pop
xor
mov
test
push
pusha
enter
repnz
lods
mov
mov
lcall
push
cmc
insl
push
mov
and
repz
adc
test
leave
lahf
mov
add
or
dec
stc
dec
in
shrb
jl
jg
xchg
push
or
dec
shlb
cmp
sub
mov
ficoml
in
push
pop
jo
add
lea
aas
js
imulb
imul
mulb
inc
sub
sbbb
out
pop
jle
adc
mov
fs
adc
xor
in
add
mov
mov
out
leave
subl
mov
jno
inc
mov
ret
lds
adc
int3
fwait
pop
aaa
iret
jo
cld
or
mov
or
sbb
divb
enter
dec
pusha
dec
loopne
ret
inc
nop
test
and
pusha
push
cld
or
and
int
push
jp
jns
es
dec
fildll
outsl
or
filds
cli
dec
jns
cld
add
lods
pop
sbb
mov
out
cmp
mov
jae
xlat
dec
cmc
fdiv
lods
xacquire
sti
test
xchg
bound
mov
mov
repnz
xchg
bound
out
in
xchg
mov
pop
xchg
cld
sub
pop
lahf
push
mov
test
mov
jl
mov
pop
shr
mov
add
call
mov
lret
into
cmp
shl
cs
push
ret
popf
mov
gs
popa
test
jecxz
mov
and
jno
cvtps2pd
lods
jbe
orl
scas
push
mov
mov
jo
adc
jecxz
ljmp
push
adc
and
cmp
fcmovu
xchg
or
sbb
jp
sahf
nop
cwtl
mov
push
xchg
ds
pop
lods
xchg
cmpsb
and
rcrb
int
mov
stos
or
or
jle
pop
lcall
lret
les
or
fdivrs
fsubl
mov
fst
je
dec
jmp
hlt
xchg
sbb
mov
cmp
adc
add
arpl
inc
les
jmp
ret
add
int3
sbb
dec
fidivs
sbb
ljmp
hlt
cmp
mov
adc
sarb
pop
ret
cltd
stos
pop
jnp
xchg
ja
mov
loopne
out
xchg
lahf
jnp
js
sbb
or
adc
sub
cltd
ljmp
add
pop
cmp
inc
in
loop
jae
pusha
rorb
aam
push
mov
push
mov
or
insl
sahf
fs
out
pop
ret
cmc
pusha
mov
loope
addr16
fs
pop
push
xchg
mov
adc
aad
scas
stos
mov
pushf
pop
aad
fstl
push
imul
ret
sub
jo
or
iret
push
or
sbbb
mov
add
pop
and
mov
int3
adc
arpl
jmp
and
jns
mov
dec
bound
pusha
pop
sub
inc
adc
ret
rcl
test
dec
mov
and
mov
sbbb
inc
dec
cltd
scas
cmpsl
rorb
js
sub
inc
stos
jnp
push
xchg
lret
cwtl
in
add
js
mov
enter
and
movsl
jae
scas
sbb
or
jbe
ret
xchg
mov
fsub
and
jno
in
js
push
std
mov
das
push
jle
add
out
xlat
stos
mov
js
push
je
mov
bts
xchg
sbb
bnd
jbe
mov
in
jno
int3
repnz
jle
cmpsb
dec
mov
insl
push
add
mov
xor
and
ljmp
jo
sbb
das
movlps
sbb
imul
sbb
lahf
xor
ret
shl
adc
add
pop
jbe
fcmovb
dec
mov
shrl
mov
and
sub
ret
jnp
dec
inc
movsb
out
mov
imul
jae
ret
fdivrs
movsb
dec
mov
push
pushw
or
outsb
dec
mov
sbb
int3
dec
aad
xchg
out
mov
js
mov
xor
push
in
imul
hlt
je
std
test
inc
adc
push
les
repnz
pop
scas
aad
sub
jb
data16
xlat
mov
cmp
xchg
dec
test
lods
in
mov
pushl
jge
xor
mov
add
fsubrs
cli
mov
movsb
out
mov
or
ljmp
push
aaa
cmc
fiadds
adc
sub
bound
lds
lahf
nop
pushf
inc
inc
dec
inc
jl
mov
test
rcrl
into
pop
and
scas
cmp
movsl
push
fs
add
aaa
in
aam
ja
jmp
mov
int3
add
jns
dec
mov
mov
daa
stos
cmc
bound
movsb
xchg
xor
fstps
mov
lock
rol
lods
jo
sarb
idiv
popa
neg
inc
enter
mov
jmp
pusha
outsb
mov
adc
inc
mov
mov
jl
xchg
int3
add
aam
fisubl
mov
movsl
dec
imul
pop
xchg
mov
jnp
and
push
mov
cmp
cs
mov
hlt
lea
aam
sti
mov
push
mov
jl
mov
int3
sub
insl
sbb
scas
pusha
adc
cwtl
popf
xor
inc
enter
lcall
scas
out
cmp
jno
mov
push
push
pop
mov
cmp
add
sub
data16
cmp
sbb
mull
xchg
fs
imul
fcompl
lea
pop
xor
gs
bound
adc
in
xor
insb
sub
pushf
xchg
in
push
movsl
sbb
test
dec
loopne
into
xor
mov
test
outsl
jmp
cmp
aas
into
enter
sub
add
ret
cmpsb
pop
sbb
test
adc
add
adc
mov
xchg
mov
or
pop
jl
movsl
repnz
pop
mov
pop
test
mov
lods
ret
inc
cld
lret
inc
test
js
daa
fnstsw
dec
xor
stc
pop
rol
fistps
adc
push
pop
outsl
sqrtsd
mov
cld
mov
mov
mov
fisubs
aam
or
and
and
into
pop
stc
enter
mov
fwait
sub
dec
dec
pusha
sub
cmp
mov
mov
call
lds
or
mov
rcr
jg
xor
jg
mov
push
xchg
ljmp
enter
in
cli
cmc
adc
or
add
hlt
sbb
dec
adc
adc
scas
aaa
inc
mov
out
lods
mov
sbb
movsl
and
or
sub
sub
jo
push
push
jbe
inc
mov
or
cli
inc
sub
ret
xchg
xchg
mov
stos
test
hlt
xor
xlat
mov
jl
mov
icebp
lcall
push
xor
test
mov
fmuls
mov
jne
and
cmpsl
push
int3
cmp
fwait
jns
mov
xchg
push
pop
hlt
cwtl
xchg
fst
movsb
gs
dec
outsl
inc
jmp
cltd
sbb
dec
mov
insb
pop
and
test
sar
or
roll
popa
adc
pop
dec
or
jmp
scas
jge
bswap
push
popa
cmp
call
or
mov
xchg
loopne
mov
cmp
ret
call
mov
aad
jl
mov
and
sbb
add
repnz
xchg
jge
imul
ficoml
in
scas
mov
rolb
mov
cmp
jns
pop
xor
test
test
sbb
shll
sbb
mov
in
pushw
mov
mov
sub
xchg
or
mov
mov
adc
ljmp
pop
jne
lahf
adc
nop
mov
int
sbb
or
in
repz
popa
outsb
xorb
and
fimull
mov
adc
fidivrl
jo
pushf
les
stos
cmp
roll
lahf
push
inc
imul
lock
mov
mov
sub
stc
dec
or
ljmp
push
out
xchg
and
push
xchg
add
add
push
add
xor
test
aaa
fidivrl
je
sbb
mov
sbb
mov
pusha
mov
xrelease
pop
mov
int
out
out
pop
repz
mov
rorb
cmpsl
and
push
push
pusha
sbb
out
aam
dec
das
ljmp
shrl
inc
push
jmp
mov
fdivl
or
push
fsubrs
push
xor
bound
and
cmp
in
loope
arpl
adc
arpl
jnp
mov
sbb
pop
icebp
insl
test
mov
add
fbstp
shlb
mov
dec
popa
cwtl
stos
jle
mulb
mov
xchg
push
fwait
sbb
in
mov
mov
jae
movsb
or
xchg
inc
jne
js
xchg
jno
in
ds
scas
push
roll
out
jp
and
test
loope
mov
fwait
ljmp
or
dec
nop
push
and
and
js
sbb
outsl
repz
ljmp
inc
lahf
gs
jmp
stos
dec
dec
sub
ja
call
shlb
inc
mov
sbb
jg
fisttpl
in
les
dec
xchg
jl
mov
stc
and
js
fldenv
ss
popf
cmpl
pop
outsb
scas
lret
mov
mov
rcl
mov
sub
in
push
xor
dec
andl
pusha
push
add
ret
jae
fimuls
imul
inc
int
repz
fistl
sub
js
outsb
test
mov
mov
mov
pusha
insl
xchg
idiv
lods
add
aam
xchg
jno
jp
test
lods
test
lahf
add
lods
scas
test
out
fisttps
bound
cmc
loope
jb
imul
add
xchg
popf
mov
test
cmp
fisttpl
in
ss
lahf
mov
filds
mov
clc
mov
mov
inc
out
adc
sub
add
push
out
mov
push
sub
enter
js
out
rcll
fcoms
shll
jge
jecxz
mov
push
mov
movsl
cs
stc
aam
movsl
imul
add
rcrb
js
jnp
in
cmpsb
pop
arpl
dec
or
outsb
dec
jne
es
pop
inc
cld
cmp
jbe
iret
cs
mov
or
seto
mov
inc
movsb
lock
out
push
jne
xchg
xchg
push
fisubrs
dec
nop
dec
scas
mov
subb
mov
add
mov
rcl
nop
jmp
movsb
xchg
imulb
repnz
imul
jno
test
mov
mov
sub
pusha
mulb
movsl
push
lods
movsb
mov
ror
pusha
nop
das
je
push
dec
aad
addr16
mov
dec
pop
pop
test
rcrl
mov
xlat
loopne
cmp
clc
jae
mov
add
and
lods
lahf
mov
mov
cs
lds
inc
cld
mov
jno
push
loopne
gs
cmp
sti
popl
les
daa
les
int
jmp
xchg
and
mov
jbe
pop
into
addr16
mov
cmp
lret
mov
sbb
mov
aas
imul
ja
mov
out
mov
push
jnp
inc
arpl
ret
adc
mov
pushf
jp
cmp
sub
into
mov
push
fidivl
daa
int3
sbb
add
js
dec
rcrl
pop
sub
fs
repnz
adc
pop
lock
cmc
xchg
in
leave
adc
dec
popf
pop
popf
in
pusha
repz
bound
sub
or
outsb
mov
out
xor
lock
roll
inc
fsubr
arpl
xchg
add
js
in
popf
xchg
xor
lods
inc
mov
xchg
cld
pop
cmp
stos
fbstp
movsb
jno
inc
outsb
incl
movsl
ret
cli
repnz
mov
nop
cmp
mov
cli
pop
and
xor
push
jecxz
enter
mov
xchg
push
mov
add
sub
ds
cmp
xchg
xor
stc
fwait
incl
loopne
push
lds
or
push
icebp
leave
ficoms
sarl
inc
repz
jno
pop
daa
fildll
aaa
cmp
xchg
das
test
arpl
cld
xchg
mov
cmc
inc
notb
push
pop
or
mov
sub
aad
pusha
enter
xchg
cld
jg
cmp
enter
in
inc
in
sahf
sti
int3
mov
mov
in
in
pop
lds
mov
jl
orl
nop
out
sahf
test
lcall
out
xchg
dec
dec
and
sub
test
sbb
jnp
jo
repz
scas
andl
repnz
cmc
jle
ret
lret
pushf
clc
lcall
lods
popf
and
dec
addr16
lods
mov
xchg
jle
bound
inc
xchg
sbb
push
push
adc
lahf
xor
aaa
cli
fldt
push
clc
sbb
push
mov
out
outsb
sub
out
mov
pop
in
fisttpll
imul
mov
movsb
mov
jmp
pop
mov
aas
nop
in
outsb
adc
cmc
in
inc
sub
dec
mov
mov
and
dec
aam
xlat
sub
xlat
call
push
cmp
cltd
insb
in
in
xchg
cs
inc
call
test
inc
ljmp
xchg
addb
mov
xchg
pop
xor
into
insb
mov
movsl
pop
lcall
xchg
bound
adc
nop
pusha
mov
daa
inc
std
sub
xor
pop
cmp
xchg
add
mov
xchg
or
xchg
dec
ret
aas
dec
fs
nop
push
cmc
jnp
mov
xor
mov
dec
mov
repz
push
rorl
mov
pop
out
sahf
mov
sbb
mov
cmpsl
mov
insl
push
sarb
movl
xchg
aam
gs
push
push
sbb
jp
adc
fs
sbb
pop
subb
roll
xor
gs
mov
loopew
repnz
lahf
inc
pop
sub
lret
pop
jl
xorb
jae
sub
pop
mov
cld
out
mov
test
mov
push
inc
bound
inc
inc
push
cmpsb
pop
xchg
out
aaa
rcr
mov
mov
jge
stos
out
in
je
lods
add
sbb
dec
ja
hlt
adc
out
in
push
cmc
or
icebp
dec
arpl
scas
sti
cmp
into
lahf
jecxz
adc
inc
dec
test
xor
orl
das
repz
js
and
aam
outsb
or
cmc
push
add
aaa
shr
xchg
cltd
fwait
adc
push
cmp
adc
adc
cltd
add
or
pop
aas
bound
dec
sub
repnz
adc
rcrb
or
xchg
insl
xchg
jecxz
mov
lods
and
mov
xor
pause
call
add
arpl
mov
shll
dec
dec
das
ja
sbb
and
cmp
jge
adcl
cmp
sub
xor
jge
lret
jl
popa
push
push
addl
cld
lret
xor
pop
fsubrl
sub
push
xchg
add
rorl
jno
das
pop
cmp
xchg
dec
scas
mov
pop
mov
cmp
xchg
ret
lods
mov
xchg
bound
push
rol
or
xchg
mov
or
mov
imul
pop
mov
loop
add
sti
inc
inc
fiadds
fs
popf
scas
fsubrs
cltd
mov
xor
ffreep
mov
test
std
int
mov
pushf
fnsave
pop
inc
xchg
xchg
and
push
inc
mov
xor
dec
xchg
iret
inc
div
push
aaa
inc
push
fcmovnbe
sub
mov
lods
sbb
std
and
or
mov
ret
jp
pusha
push
xchg
jno
incb
test
into
popa
mov
stos
xchg
scas
jbe
jnp
xor
ja
adc
dec
fldenv
cmp
sbb
cli
testl
test
imul
xchg
xchg
adc
mov
pop
mov
test
addl
fs
in
stc
xor
aaa
dec
mov
ss
inc
sbb
jmp
sub
mov
loopne
jmp
cmp
icebp
push
mov
mov
mov
sarb
test
in
mov
loop
push
cmp
jmp
inc
jmp
cwtl
lret
loop
push
mov
rcll
push
rorb
pop
fcompl
mov
cltd
sub
sahf
std
adc
add
imul
sub
lds
cld
leave
les
jp
or
nop
dec
dec
adc
fdivrl
xchg
xchg
fbld
jo
aaa
out
cltd
pop
repz
and
mov
pop
pand
pop
inc
jnp
loopne
push
jb
mov
xchg
cmpsl
and
dec
mov
andb
or
xchg
cmp
bound
lcall
pop
xchg
imul
cltd
subb
push
scas
insb
add
xchg
cld
dec
sbb
orl
lds
out
mov
sub
fsubrl
xor
inc
mov
xlat
ja
loope
pop
xchg
cmc
ljmp
ljmp
rcl
lods
push
add
flds
xchg
repz
mov
sbb
mov
push
sbb
das
push
ret
jno
cltd
sub
clc
dec
aad
in
shll
xchg
loopne
cmp
fcompl
sbb
ret
das
fdivrs
xchg
jbe
inc
daa
cmp
das
cmp
jmp
mov
jg
pop
mov
push
lods
mov
and
adc
sti
push
mov
add
popf
pop
pushf
movsb
loop
fstl
daa
aas
xor
lds
sbb
inc
dec
inc
pop
inc
call
roll
jge
mov
testb
xchg
in
test
add
addr16
push
in
popa
in
out
insl
les
std
gs
aas
aam
pusha
cmpsb
loope
rcl
mov
cwtl
or
mov
dec
clc
repnz
mov
xchg
mov
and
orb
and
xchg
mov
test
outsl
bound
movsb
test
outsl
ds
jns
xchg
insb
jg
and
ja
ds
mov
leave
dec
sbb
adc
leave
mov
adcb
stos
jle
test
fistpll
shrb
into
les
addb
insl
iret
outsb
cs
dec
mov
push
fsub
inc
fldl
movsl
inc
mov
inc
ret
push
rol
and
mov
xchg
lock
filds
jmp
es
fadds
and
xchg
xchg
jb
add
addr16
xor
mov
imul
ljmp
aad
lret
fdivrs
ss
cmp
imul
cld
aas
mov
xchg
xor
fsubl
or
mov
sahf
in
dec
mov
mov
mov
sub
data16
adc
and
orl
mov
test
or
rorb
sub
mov
add
jnp
pushf
je
mov
lea
pop
pop
ljmp
mov
ja
addb
and
pop
mov
stos
addr16
jmp
sub
jbe
clc
sbb
xchg
mov
sbb
cwtl
jmp
inc
xor
aam
rcrl
test
out
push
push
ljmp
inc
cltd
mov
mov
mov
cmp
mov
sbb
push
ret
pop
fwait
push
inc
lods
sub
inc
lock
or
jnp
lock
mov
loope
mov
adc
repnz
pop
push
mov
xorb
mov
pop
je
jns
cs
xchg
divb
imull
and
scas
inc
jp
insl
js
pop
scas
inc
xchg
mov
sub
jnp
jmp
fmuls
lods
movsl
inc
pop
cld
sbb
dec
dec
dec
adc
pop
movaps
mov
push
scas
mov
es
notb
popa
sub
cmp
xchg
inc
push
out
int3
pusha
inc
cltd
rclb
frstor
xchg
movsl
addb
sub
pop
xor
pusha
ss
adc
xor
movsb
add
insb
add
out
jecxz
in
test
push
scas
lock
or
mov
dec
fistps
shl
aad
mov
loop
cmp
hlt
jge
cwtl
mov
test
mov
adc
int3
mov
mov
ljmp
cli
ret
nop
xchg
ret
mov
shrb
add
outsb
insl
or
jl
add
outsb
mov
pop
mov
mov
clc
das
sub
mov
push
mov
dec
sahf
popf
sahf
cmp
dec
mov
out
mov
mov
sbb
insl
jo
sbb
push
jmp
iret
subl
loop
aas
inc
dec
mov
rol
lahf
divl
mov
and
ror
bound
out
lods
mov
mov
jg
pop
xchg
pop
inc
dec
repz
adc
push
or
xchg
xchg
mov
es
bound
jmp
push
inc
test
adc
stc
cltd
dec
jae
cmp
cmpsl
loopne
adc
mov
dec
repnz
add
shlb
and
fistl
jg
jb
cli
stos
lock
add
inc
push
jnp
pop
cli
jl
movsl
sub
pop
xor
push
int
lods
push
les
jl
inc
adc
popf
or
test
sbbb
mov
add
jecxz
dec
clc
fsubr
cld
sbb
dec
call
ret
pop
jmp
dec
pop
adc
mov
outsb
push
sub
daa
xor
enter
int3
mov
sahf
mov
add
xchg
pop
mov
enter
mov
clc
mov
aam
enter
movb
jg
hlt
add
pop
test
inc
pop
inc
sbb
repz
inc
add
test
sbbb
mov
subb
loopne
jp
jo
lods
add
or
mov
leave
sub
cmpsb
jb
std
sbb
int3
sbb
mov
ljmp
out
mov
add
lret
iret
sub
imul
imul
xchg
push
cmp
or
out
shr
les
pop
xor
dec
out
xchg
fisttpll
imul
dec
das
cmp
imul
or
cmc
sub
push
push
shl
leave
js
ds
push
push
push
mov
dec
mov
out
fdivrp
pushf
cwtl
mov
adc
push
inc
dec
data16
mov
xchg
stos
lods
js
enter
jno
aam
lahf
enter
or
call
mov
and
mov
outsb
mov
mov
jb
sahf
mov
scas
mov
fdivl
xchg
scas
out
adc
faddl
sbb
jmp
gs
scas
sti
shr
ja
cwtl
mov
push
inc
xchg
jnp
sbb
inc
cwtl
inc
out
insb
jo
out
test
cmp
dec
jge
sarb
mov
inc
test
js
jecxz
pop
decb
and
cmc
sbb
xor
negl
nop
insl
mov
xchg
repnz
pushf
pop
fmul
cmp
jmp
mov
rep
insl
outsb
adcl
cmpsl
add
cmp
adc
arpl
cwtl
jge
pop
cmp
mov
jecxz
push
xchg
btc
cwtl
xchg
test
sbb
sbb
dec
call
mov
mov
push
ret
mov
adc
fnsave
or
sub
cwtl
jne
mov
stos
dec
mov
ret
rolb
pop
jb
cli
mov
lods
jge
sbb
push
ret
push
jb
or
push
inc
sub
nop
in
dec
cld
add
in
testb
add
mov
xor
sbb
in
cmp
mov
pusha
call
loopne
jmp
sahf
cmpsl
lahf
push
adcl
pusha
xchg
xchg
mov
nop
nop
insb
aad
add
test
or
xchg
xor
je
in
pop
int3
repnz
or
clc
cmp
and
lods
push
rorb
popf
mov
mov
cwtl
sbb
outsb
mov
ret
aad
push
data16
or
cmpb
lods
inc
mov
mov
loop
loopne
in
sbb
inc
jecxz
inc
repnz
pop
or
out
mov
subw
mov
cmp
jl
sti
add
lcall
mov
or
std
jns
dec
sahf
fimull
jge
cwtl
mov
and
or
decb
orl
in
pop
repnz
je
push
negb
push
movsb
pop
jle
cltd
aas
sahf
or
sub
aad
stos
jg
lock
or
push
shlb
jnp
sbb
hlt
insl
dec
lods
repnz
dec
mov
pop
jecxz
les
mov
xor
xchg
test
mov
jge
mov
adc
fwait
out
loope
call
outsl
ja
aas
sbb
push
dec
push
lret
xchg
loope
pushf
lock
xchg
or
and
js
fimull
mov
rcr
dec
sub
outsb
mov
sub
shlb
adc
mov
testl
test
or
mov
mov
push
dec
xchg
cmpsb
adcl
in
iret
sbb
jl
jg
mov
mov
lahf
mov
or
jno
call
adc
fistpl
pushf
bound
pop
test
aad
push
push
add
mov
xor
out
pop
sbb
and
push
fldl
pop
cli
jp
push
push
jnp
push
jle
sub
sub
adcl
popa
mov
inc
cs
mov
push
lret
movsb
cli
or
test
rcrl
xchg
mov
jl
ret
cltd
inc
pop
repnz
adc
fldl
int3
addr16
out
cmpsb
stc
outsl
add
out
mov
xor
xor
stc
ds
xchg
lods
rcrl
mov
out
sub
dec
mov
or
push
mov
lock
lcall
shl
xchg
aaa
inc
hlt
mov
adcb
aaa
pop
ficoms
lcall
bnd
mov
test
xor
lock
push
cmpsl
pusha
cld
in
sti
or
divb
jmp
mov
mov
je
lods
les
lods
sahf
ja
leave
enter
lret
sub
fs
fcmovne
mov
fwait
mov
push
inc
dec
mov
loopne
scas
in
fisttpl
lods
dec
push
mov
rorl
mov
shrb
push
fmul
les
int3
sahf
push
leavew
test
mov
subl
stos
lcall
cmpsl
inc
fistpll
lret
enter
fadds
cmp
shr
or
add
clc
sub
test
adc
jnp
jne
mov
mov
loopne
mov
popf
outsl
fs
sbb
mov
popf
jp
movsl
sbb
out
push
test
or
arpl
lock
fdivl
mov
sbb
or
repz
cmp
push
in
or
test
adc
lods
fbld
xchg
and
adc
lea
test
sub
mov
mov
icebp
pop
out
xchg
sbb
jne
sub
xorb
adc
mov
xchg
adc
repnz
stc
cli
bound
test
ret
rcr
sbb
mov
enter
movsb
push
xchg
mov
int
inc
pop
into
sub
out
in
gs
ds
sub
push
cmc
add
jns
mov
out
cs
pop
push
pop
fs
mov
jns
outsl
stos
lock
loopne
cmp
add
mov
js
dec
cmpsb
insb
stos
sbb
aaa
add
sub
lock
and
jecxz
data16
jo
ljmp
pop
orl
dec
daa
out
enter
xchg
lds
push
sub
sub
das
push
test
lock
xor
add
mov
shrl
daa
lea
insl
mov
aas
xchg
cli
or
push
imul
iret
cmp
mov
lret
or
leave
cmc
jg
push
jp
addl
stc
shrb
fisttpll
fdivrl
cmp
popf
adc
pmaddwd
dec
jl
add
nop
sub
xchg
push
inc
and
or
sub
dec
popa
fldenv
dec
test
jo
lret
dec
out
xor
sarl
ret
stc
sub
jns
sahf
popf
jne
int
mov
sahf
jl
mov
cli
insl
jmp
sub
cmpsl
cmp
imul
icebp
xchg
movsl
orb
jmp
pop
adc
cmp
mov
xchg
ret
mov
dec
or
sub
inc
xchg
jg
mov
cwtl
mov
jp
popf
sbb
lea
shlb
jl
jae
pop
out
push
pop
dec
loopne
in
xor
into
lods
cmp
mov
out
test
rcll
shrb
dec
pushw
sbb
mov
adc
fwait
adc
lock
movsl
inc
or
sbb
call
mov
dec
test
stos
fs
mov
push
push
add
in
dec
es
cmp
push
xchg
pushf
mov
jb
mov
jmp
xchg
mov
stc
outsb
sub
cs
cmp
ja
outsb
mov
inc
loop
or
sub
xchg
fwait
jecxz
mov
pop
movsb
ja
enter
xorb
movsl
mov
push
les
scas
movl
lret
sub
outsl
test
inc
fucomp
rcl
adc
adc
popa
dec
decw
inc
loop
xchg
inc
add
jne
cmp
mov
sti
jl
dec
pop
cmpsb
lret
dec
cld
std
mov
movsb
inc
arpl
or
xchg
loopne
cltd
mov
cmp
mov
pop
bound
and
imul
mov
ret
mov
loop
push
das
imul
jp
add
sbb
cmpsl
cmpsl
outsb
sbb
enter
and
cwtl
mov
inc
mov
outsb
push
in
fwait
insl
sub
or
jecxz
cmp
pop
out
jecxz
xchg
cmp
xchg
cmp
inc
lahf
mov
in
xchg
mov
sti
insb
cmc
lods
loopne
xchg
add
cmpsl
test
or
jnp
mov
imul
or
je
add
push
jbe
cld
add
jae
lea
cli
fdivr
xchg
and
cli
lret
stos
fwait
add
mov
fadd
leave
cmpsb
pop
lea
xor
jmp
xorl
shl
sub
aad
adc
jge
arpl
inc
icebp
test
rclb
push
mov
shll
lock
subl
lods
in
cmp
mov
xchg
mov
icebp
or
and
push
lfs
push
daa
inc
jnp
adcb
dec
jnp
in
loopne
and
in
mov
adcl
xchg
shr
cmp
nop
es
sbb
sbb
xchg
in
lret
add
scas
xchg
and
ljmp
cmc
stos
jle
lret
and
sub
mov
outsb
lcall
cld
stos
push
sbb
cmp
into
aam
add
mov
rclb
fidivl
cmpsb
dec
cmpsl
adc
pushf
dec
xor
xchg
into
mov
jbe,pt
or
test
cmp
ret
fiaddl
pop
add
pop
loopne
pop
jo
imul
loopne
or
pop
cmp
mov
mov
push
lahf
test
cmp
jae
pusha
shlb
jg
add
out
insb
leave
movsb
pop
call
daa
pop
adc
cli
push
popf
mov
rcrb
pop
inc
xchg
jl
jae
adc
cli
sbb
leave
lea
cli
or
mov
sub
push
mov
mov
clc
jb
jbe
mov
pop
sti
push
dec
popf
or
sub
je
xchg
sbb
mov
or
out
jae
jns
sti
push
shl
xchg
xchg
fistpl
sbb
pop
lods
arpl
or
sbb
fdivs
adc
xchg
lret
ljmp
lret
mov
pop
mov
push
icebp
push
shlb
cwtl
punpckhbw
es
imull
in
cmp
pop
leave
repnz
scas
jecxz
push
adc
push
iret
jbe
and
iret
xchg
test
add
lahf
jl
cmp
push
fwait
inc
jg
jbe
cmp
ljmp
imul
sahf
fst
mov
outsl
insb
push
mov
sub
movsl
or
push
popf
cmpl
and
mov
add
jns
push
jp
aaa
int
test
les
jbe
push
cwtl
cwtl
ret
outsl
outsb
mov
popf
fimuls
stos
push
jns
addb
or
mov
or
mov
mov
mov
inc
inc
mov
ffreep
adc
mov
dec
cld
pushf
ja
mov
add
mov
sbb
mov
jge
mov
dec
pop
ss
xchg
jecxz
cmpsl
pop
dec
scas
jle
inc
and
add
xchg
pushf
test
shlb
push
test
pop
ret
jl
xchg
std
bound
in
mov
cs
fcoml
lret
push
adc
dec
jge
jae
rcll
imul
pop
shll
js
scas
inc
cmpsb
gs
cmp
aad
xlat
mov
mov
xchg
jo
or
mov
test
loope,pn
pop
pop
pop
add
dec
lock
negb
mov
push
stc
or
lods
jmp
push
mov
dec
call
fsubr
push
lds
mov
mov
mov
hlt
push
enter
mov
cmpsb
jle
lcall
les
and
mov
stos
mov
movsl
rdmsr
in
rorb
lods
incb
xchg
rcrl
fimull
enter
mov
insl
popa
xchg
jg
dec
loop
call
cli
es
cs
ljmp
mov
push
rorl
adc
xchg
xchg
sahf
pop
sub
outsl
and
loope
iret
jnp
rorl
lret
mov
test
test
mov
dec
mov
xor
lods
push
scas
in
dec
cmpsl
lock
push
pop
xchg
fsubrl
and
dec
adcb
adc
jmp
push
popf
stos
jnp
in
dec
cmpsb
jecxz
cmpl
jnp
xchg
lcall
mov
inc
imul
inc
not
cmp
push
xorl
dec
ljmp
out
mov
inc
add
repz
push
xor
pusha
orl
sbb
pop
push
sbb
mov
jne
mov
popa
jae
xchg
mov
daa
lods
std
pop
lea
out
dec
jg
dec
mov
pop
inc
mov
ljmp
xor
add
scas
int
fwait
pop
js
jl
dec
out
fadds
cli
xchg
push
out
or
bound
lds
mov
mov
in
adc
xor
xor
push
xor
adc
mov
aas
inc
sub
aad
fmuls
or
sub
inc
stos
stc
out
loopne
xchg
cmp
pop
pop
adc
in
xchg
mov
out
push
out
or
fcomps
mov
add
xchg
clc
mov
arpl
dec
scas
push
imul
insb
sub
lea
push
pop
icebp
jo
jl
rclb
loop
outsl
push
push
icebp
cld
jl
sbb
mov
std
mov
pop
idivb
in
aad
adc
mov
jbe
not
sbb
cld
mov
dec
mov
repnz
pop
lret
clc
jbe
sahf
jo,pt
ret
pop
mov
or
xor
xchg
pop
cld
inc
xlat
jbe
in
in
push
xchg
xchg
outsl
dec
scas
sbb
lret
icebp
mov
mov
pop
push
test
das
lea
push
ret
push
pusha
cli
mov
mov
xchg
mov
mov
inc
cwtl
lret
test
jp
imul
xchg
jl
mov
jg
add
sbb
xlat
stc
push
adc
and
out
jns
mov
add
cmp
pop
movsb
xorb
lock
dec
mov
jmp
ja
cmpsb
mov
dec
scas
push
pop
js
xchg
dec
push
xor
mov
scas
mov
lcall
jnp
add
stos
stos
dec
xor
xchg
cmpsl
int3
imul
mov
sti
jl
shlb
pusha
push
in
mov
mov
inc
xchg
pop
popf
int
sub
lds
inc
xor
loope
sti
or
adc
inc
dec
aam
iret
arpl
mov
pop
insb
int
jnp
outsl
xchg
push
mov
xor
aad
push
test
mov
call
mov
mov
loopne
push
mov
add
call
gs
mov
pop
js
push
dec
cmpsb
test
scas
pushf
js
mov
or
add
ds
mov
daa
pop
xchg
pop
pop
add
xor
fwait
mov
lods
sbb
in
lock
xchg
repnz
inc
pop
das
or
xor
pop
addl
bound
fcoml
cmp
xor
xchg
jp
mov
xor
xor
dec
mov
pop
lock
call
pushf
lcall
lock
inc
fiadds
mov
mov
mov
pop
and
loopne
mov
in
mov
loope
push
jecxz
je
push
sub
lcall
add
dec
push
scas
jl
xchg
pop
fnstsw
push
push
ficoml
pop
mov
xorb
mov
pop
jg
xchg
push
xor
jns
inc
faddl
leave
movsl
mov
push
cmc
shll
push
sarl
xchg
pop
daa
int3
push
push
mov
scas
inc
push
cmc
in
cmpsl
nop
fisttpll
shrl
mov
repz
mov
mov
adc
rcll
leave
mov
mov
push
arpl
test
mov
and
inc
mov
and
nop
xchg
dec
fcoml
scas
add
enter
scas
loopne
scas
stos
nop
out
div
add
mov
mov
xchg
aam
adc
js
cli
push
and
lods
lock
add
test
mov
or
add
ja
loop
fcom
jnp
and
addl
ret
pop
mov
mov
addr16
sbb
js
cmp
cmpsb
mov
aam
cs
inc
int3
cmp
xchg
mov
mov
pop
inc
lock
xchg
dec
loope
xchg
jecxz
stos
xchg
and
fcmovnb
clc
ljmp
insl
cmpsb
ret
nop
pop
mov
dec
sub
subb
arpl
xchg
sbb
daa
hlt
mov
enter
cmp
pop
xchg
dec
and
jbe
ljmp
cwtl
jecxz
sar
insb
and
mov
aas
cld
cmp
ljmp
xchg
xor
in
xor
enter
mov
jnp
push
nop
sbb
xor
pushf
xchg
cltd
cmp
lds
mov
xchg
cld
push
scas
mov
xor
popa
stos
in
xchg
jecxz
fst
cmp
incl
ret
xor
dec
sbb
pop
ljmp
mov
clc
jmp
jp
inc
outsb
lcall
cmp
aam
push
jnp
inc
out
lret
dec
inc
out
enter
test
hlt
nop
pop
int
push
ljmp
lea
lods
pop
or
push
stos
shll
sbb
loope
mov
dec
repnz
xchg
and
lods
aas
cmp
adc
or
jl
adc
aad
dec
in
pushf
pushf
mul
inc
cld
xchg
or
mov
inc
cli
sarl
jmp
cmp
cmp
push
fdivrl
mov
pushf
std
movsb
mov
inc
repnz
xchg
push
push
pop
or
cmp
clc
jmp
mov
mov
mov
shll
aam
jmp
aaa
adc
inc
setg
mov
out
negb
cmc
je
xchg
sahf
xor
movsb
mov
push
sub
arpl
jno
enter
jl
dec
jo
std
loop
mov
mov
aaa
sub
popa
xchg
in
aas
lcall
xor
sbb
add
adc
dec
mov
lea
ds
arpl
lea
rcl
xor
cmp
cmp
sub
ljmp
and
push
sahf
test
in
into
push
add
dec
sub
stos
in
mov
lock
fs
pop
xchg
xchg
pop
dec
sbb
cld
add
lahf
insl
jmp
jle
jbe
push
call
sahf
stos
pop
mov
imul
jo
lcall
je
push
push
addb
pop
mov
aad
add
jmp
add
xchg
ret
std
dec
adc
mov
adc
rcll
cld
jle
mov
sahf
sbb
mov
sbb
mov
cwtl
or
mov
imul
cmp
scas
fstl
test
push
and
cwtl
loope
jmp
push
mov
mov
pop
dec
xchg
orl
mov
xchg
or
out
lahf
std
sbb
in
cwtl
pop
push
inc
mov
pop
mov
sub
cmc
push
fs
fcoms
repnz
or
negb
test
test
test
ret
shll
mov
cmpsb
sub
movsl
insb
add
stos
mov
pop
ljmp
push
sbb
and
sarb
repnz
xchg
mov
scas
cmc
dec
sbb
fidivl
dec
neg
sbb
cwtl
popf
repz
jns
movsb
ljmp
daa
cmp
add
push
jne
paddw
pop
mov
test
add
and
in
mov
mov
xchg
mov
shlb
mov
rcrb
stos
enter
or
divb
les
jmp
imul
xor
mov
jae
adcb
popa
jg
inc
or
lods
sub
clc
outsl
mov
jge
inc
test
xchg
adc
lret
fwait
incl
mov
sahf
push
cli
xchg
xchg
pop
pushf
dec
insl
jle
jae
stos
hlt
ret
mov
dec
and
icebp
movsb
or
adcl
mov
mov
push
mov
xchg
mov
ljmp
add
in
mov
ret
lods
bound
scas
lea
adc
lahf
repz
mov
pop
daa
jmp
sub
adc
shlb
mov
xchg
push
bound
enter
sub
pop
push
or
push
mov
mov
lock
and
mov
shrb
movsb
dec
aam
inc
je
xchg
xchg
jno
ret
stos
push
and
xorl
xchg
push
mov
or
out
pop
fcoms
jmp
hlt
ljmp
cmpsl
cltd
mov
jmp
bound
push
lret
xor
xorb
lods
dec
clc
loop
fdivrs
test
push
jb
mov
inc
fsub
js
bound
mov
and
cmp
jp
mov
aad
in
adc
sub
xor
push
jle
es
pop
test
mov
test
mov
imul
sub
leave
enter
scas
out
push
mov
repnz
mov
and
outsb
cmp
sti
sbb
les
out
ds
js
jo
cmpsl
sub
orb
mov
pop
mov
mov
sbbb
mov
push
icebp
mov
mov
in
cmc
mov
dec
mov
aad
and
xchg
andl
pop
dec
pop
faddl
ja
push
pop
lds
inc
and
testb
and
call
inc
xchg
stc
lret
jbe
cmpsb
mov
dec
enter
mov
mov
popf
in
xorl
or
mov
divl
pop
sub
sub
lea
lcall
roll
xchg
dec
pop
outsl
push
inc
sbb
outsb
mov
cld
inc
shll
mov
icebp
jns
jge
xchg
add
xchg
int
mov
push
add
pop
mov
sbb
ret
movsl
jmp
xor
pop
das
jns
mov
in
fldenv
and
sti
pop
jnp
mov
dec
pop
cmp
mov
imul
rcl
fwait
cmpsl
xor
adc
lock
icebp
xchg
push
into
pop
sub
jp
mov
push
rorb
mov
and
testl
or
daa
add
insl
out
mov
out
mov
cmpsl
and
and
in
push
std
outsb
popf
insl
out
mov
cmpsb
insb
sbb
push
cltd
data16
mov
pop
cli
xor
or
test
clc
and
add
hlt
ret
or
push
js
outsb
cmp
sbb
sub
ror
push
mov
cmp
out
sbb
arpl
outsl
ss
push
and
fsubrl
pop
sbb
push
ja
cmp
adc
repz
lods
ss
or
fdivs
dec
lret
lds
push
fdivl
call
pop
mov
xchg
adc
fmul
jbe
sti
bound
int
jmp
mov
pusha
lods
dec
cmp
jl
pop
dec
mov
stos
fistps
cmpsl
roll
adcl
lds
rorl
test
les
loope
arpl
cmp
and
cmp
pop
test
push
jo
jp
xchg
push
mov
clc
mov
mov
scas
push
je
fsubr
xchg
pop
or
mov
scas
fs
inc
ret
int
callw
in
aad
fs
ret
lods
ret
xchg
xorb
stos
lahf
lea
inc
lock
xchg
je
cmp
imulb
mov
push
out
test
mov
pusha
cmp
bound
pusha
fidivs
call
dec
mov
sahf
add
xchg
popa
mov
cld
outsl
pop
and
push
cmc
mov
inc
cld
test
dec
icebp
mov
or
xor
and
pushf
daa
and
aam
adcb
mov
dec
mov
loop
imul
push
mov
cld
and
cmp
in
cld
dec
enter
incb
cmp
adc
int
and
jg
sub
sahf
mov
int
subb
adc
jp
jnp
xor
iret
mov
mov
enter
lds
adc
lock
sahf
mov
jns
dec
sahf
test
sbb
mov
sbb
dec
xlat
and
jns
aad
push
jne
addl
adc
and
sub
jnp
jnp
lcall
lcall
mov
cwtl
push
xchg
sub
mov
push
xor
fisubs
cld
frstor
movsl
adc
lret
xor
rolb
push
push
insb
ficompl
push
into
mov
js
sub
jbe
loopne
dec
gs
fistpl
xor
in
pop
clc
fisttps
and
in
scas
or
push
push
in
jmp
stos
mov
loope
jb
bound
out
mov
fs
lea
cwtl
int
xchg
fisttpl
jecxz
push
inc
adc
fwait
and
lahf
ljmp
cmc
lods
add
loopne
ss
cwtl
insl
or
xor
or
popf
xchg
jae
jbe
cmpsl
sub
lock
inc
sarb
bnd
adcl
jmp
xchg
out
test
adc
push
fcomip
push
ret
mov
mov
ja
push
mov
fucom
fs
or
adc
cmp
movsb
cmp
mov
push
cmpsb
ds
sbb
adc
gs
pop
call
test
adc
rorl
jae
cwtl
sub
or
add
call
loope
sub
mov
dec
mov
clc
out
popa
mov
jl
test
cwtl
int3
cmp
cmp
rclb
test
mov
leave
pop
sub
push
loopne
mul
and
popf
adc
cmp
inc
cld
push
adcl
jmp
mulb
or
movsl
cltd
adc
stos
cmp
mov
insb
pop
clc
xor
mov
sbb
push
popl
out
pop
mov
push
mov
cmpxchg
lods
lret
xchg
dec
mov
and
mov
lock
xchg
out
ss
stos
lret
aam
js
loop
add
sbb
inc
push
jp
or
mov
mov
test
in
mov
jne
jbe
arpl
andb
insb
inc
stos
lret
xor
lock
scas
hlt
add
mov
sub
bound
mov
mov
popa
or
inc
pop
je
add
nop
fstpl
jbe
aad
sub
aam
adc
lret
mov
xchg
sub
and
pop
jnp
jecxz
push
jg
sbb
add
dec
push
dec
shll
cmpl
sub
out
or
aad
scas
in
push
mov
out
add
dec
mov
dec
imul
cmp
mov
cmp
push
pushw
cli
add
mov
and
test
mov
fisubrs
scas
or
pop
addr16
pushf
cmp
sti
scas
lret
insl
cmp
mov
ss
in
mov
mov
cltd
add
pop
xchg
mov
mov
dec
call
xchg
sahf
es
xchg
push
cmpb
jle
sahf
ds
lods
arpl
sub
or
mov
jp
je
and
test
xchg
mov
mov
insb
andl
out
negb
mov
mov
sti
adc
inc
push
cmp
and
insb
call
subl
stc
dec
call
in
in
jg
jg
jecxz
adc
xchg
adc
stc
mov
mov
ror
gs
fcmovnu
xchg
das
in
insl
scas
sub
push
mov
push
mov
les
add
movsb
nop
push
push
lods
inc
cli
mov
icebp
add
jne
inc
xchg
cmp
mov
or
cmp
ljmp
add
in
pop
ljmp
mov
or
push
adc
lods
nop
jmp
mov
cmp
not
addr16
dec
xor
xchg
je
lea
or
jne
inc
xchg
ja
or
dec
pop
repnz
cld
stos
lods
dec
cwtl
test
mov
sahf
not
push
call
test
cwtl
cmpl
movsb
jne
out
xor
mov
test
cmp
sbb
xchg
jecxz
in
mov
sbb
cmc
test
xor
inc
call
mov
lods
mov
sbb
and
push
out
jne
sub
lahf
pop
aad
pop
mov
xor
mul
mov
or
xchg
or
cltd
shll
cmpl
xchg
xlat
sahf
ret
dec
mov
xchg
mov
add
cmpsb
mov
mov
sbb
loope
xor
pop
decl
nop
or
into
mov
jae
dec
mov
decl
cwtl
movsl
iret
pop
cmpsl
arpl
sub
movsb
mov
sbb
inc
insb
fsubrl
and
adc
jmp
mov
inc
lock
popa
cmp
jne
je
mov
xor
in
iret
or
pop
jnp
jbe
jae
loope
int
cmc
dec
and
xchg
notl
adc
loop
movsl
mov
out
push
scas
push
push
mov
mov
call
mov
sbb
movsl
add
leave
lods
jbe
cmp
adc
je
add
mov
push
pushf
repnz
sti
dec
push
cwtl
movsb
lock
jne
popl
push
adc
out
cmp
stos
adc
inc
enter
cmp
pop
clc
xchg
or
movsl
imul
mov
mov
lock
cltd
sbbb
stos
hlt
aad
pop
sti
jle
inc
lcall
dec
ds
dec
out
out
lods
push
std
dec
mov
pop
mov
push
icebp
int
mov
cwtl
lock
repz
mov
loope
xchg
xchg
adc
push
mov
mov
lods
ljmp
addr16
pop
adc
in
pop
sbb
jp
push
xor
jo
mov
test
pop
lds
enter
test
pushf
jnp
int
xor
mov
popfw
inc
fs
je
sub
push
xchg
or
mov
jnp
mov
push
clc
and
cmp
adc
mov
js
out
out
push
movb
push
int3
mov
add
inc
andl
pop
fsubrl
lods
stos
xchg
lret
dec
repnz
sbb
sbb
xchg
push
js
mov
repz
mov
mov
out
test
jl
divb
xorl
push
mov
inc
jp
sbb
adc
sbb
ljmp
out
xchg
je
sub
mov
jnp
mov
addr16
sbb
fwait
push
divb
insl
fnsave
push
or
pop
cmp
xchg
nop
hlt
test
sahf
rcrb
insl
mov
jb
inc
js
sbb
clc
call
mov
and
fcmovnbe
xorps
clc
sub
call
and
mov
mov
mov
xor
dec
cmc
clc
insb
subb
sbb
jp
sbb
sub
push
push
repz
mov
popl
sub
bound
mov
int3
cmp
adc
add
mov
arpl
adc
mov
adc
test
aaa
adc
pusha
mov
sub
sahf
cmpsl
ljmp
scas
and
fwait
mov
out
dec
scas
fdivrs
sub
mov
xchg
repnz
push
pop
sahf
mov
enter
fwait
pop
mov
call
push
dec
mov
icebp
xchg
inc
adc
pop
test
rolb
in
aas
fwait
iret
sub
int3
mov
rorb
push
fcmovb
pop
mov
sti
sub
lods
loop
enter
scas
shll
jg
in
daa
adc
pusha
sub
lret
or
rorl
test
xchg
in
ds
dec
add
test
nop
or
shrl
aad
and
sub
sbb
dec
jnp,pt
and
sbb
dec
mov
lret
adcb
xchg
inc
push
xchg
jno
decl
enter
testb
cmp
pop
sbb
xchg
stos
inc
or
xor
mov
inc
icebp
jbe
andb
and
mov
test
in
mov
adc
adc
sub
cmpsb
mov
ret
push
mov
inc
imul
mov
mov
xor
das
xor
pop
add
and
push
adc
xorl
ret
mov
std
sar
sbbb
mov
add
loopne
xchg
add
aaa
out
out
aaa
inc
push
rorb
sar
sbb
andl
mov
ds
jne
dec
add
scas
ss
jmp
int
or
xchg
xchg
and
adc
and
push
loopne
cli
test
add
push
rcr
cmp
and
gs
repnz
jl
xchg
shlb
jecxz
jbe
scas
sub
fisubl
dec
call
mov
add
dec
in
or
fnstcw
js
lock
lods
jp
outsb
scas
ret
xor
pop
insb
pop
mov
scas
mov
or
sbb
push
bound
sbb
dec
mov
daa
rcr
sub
shll
mov
pop
mov
cli
xchg
andb
scas
cmp
cmpsl
bound
push
dec
in
cmpl
dec
sbb
mov
les
or
and
jno
ret
xor
stc
xchg
push
push
xor
cmp
sub
in
jle
ret
push
fwait
scas
mov
je
jle,pt
stc
or
jmp
out
rolb
out
rorb
cmpb
leave
adc
or
xor
sub
ret
and
rorl
aam
xor
mov
sbbl
aam
dec
mov
lret
mov
xor
addr16
testl
mov
fs
push
cmp
lret
adc
cwtl
xchg
inc
lea
icebp
sbbb
cwtl
pushf
jmp
fwait
jns
mov
js
pop
fdivr
fcmovnbe
mov
fmull
jbe
test
addr16
or
cmp
int
xor
es
test
sbb
cwtl
addr16
xchg
and
or
cltd
scas
add
out
test
mov
pxor
adcb
push
dec
dec
stos
sub
add
xlat
sub
js
scas
iret
andb
add
jp
fmuls
mov
sub
mov
lods
dec
ja
test
and
sbb
push
or
xor
test
inc
xor
ret
jb
fwait
mov
mov
mov
mov
out
cmp
mov
jecxz
xor
add
ret
dec
sub
repnz
push
incl
jmp
or
mov
ret
and
loop
jae
dec
decl
subb
sub
fmul
aad
idivb
jl
mov
sbb
hlt
add
sbb
imulb
popf
mov
addr16
popf
pushf
fincstp
mov
mov
ret
adc
mov
pop
mov
fdivrl
and
into
sbb
cmp
pop
mov
inc
orb
or
mov
enter
mov
inc
mov
ret
xchg
cmp
les
in
jl
pop
nop
cmp
dec
push
gs
lock
mov
fsubl
jge
les
sbb
imull
adc
inc
cli
mov
repz
data16
arpl
dec
lret
int3
scas
mov
and
movsb
and
jns
pop
je
int3
faddl
enter
out
pop
dec
sub
mov
ljmp
aaa
xcrypt-cbc
cmpsl
adc
outsl
xchg
inc
inc
xlat
and
lea
test
push
cli
add
test
mov
xchg
nop
in
insb
add
push
movsl
sub
pusha
scas
in
inc
xchg
pop
sub
subl
pop
loope
mov
pop
ja
push
dec
dec
pop
loopne
xchg
loopne
leave
and
pop
lods
xchg
call
add
outsl
sub
fdivrl
or
cltd
and
or
mov
out
push
pop
mov
cmpsb
pop
andl
lds
xchg
jbe
fnstcw
cmpsl
mov
les
repz
push
lcall
mov
sub
push
xchg
dec
adc
push
leave
push
clc
lret
xorl
in
popf
ss
aas
dec
mov
gs
inc
dec
cmp
ds
lahf
or
add
mov
popa
sub
cld
push
mov
jo
int3
adcb
dec
mov
jno
loop
cli
inc
adc
push
push
add
cli
imull
mov
popa
movsl
cmp
mov
cwtl
xchg
dec
jae
or
movsb
mov
fdivl
xchg
insb
push
sti
stos
sbb
dec
insl
idiv
mov
addl
test
adcb
sarb
push
js
pop
adc
inc
push
and
out
sahf
fcomi
mov
sbb
mov
loope
inc
popa
jecxz
jmp
xor
mov
push
pop
call
xor
in
cld
mov
mov
in
fwait
icebp
pop
mov
lcall
jb
cmpl
imul
jmp
out
shll
outsb
inc
jns
and
test
xor
sub
sub
popa
lahf
sub
repnz
daa
movsb
add
repz
divl
test
mov
hlt
adcb
sub
mov
jle
out
push
outsl
mov
sbb
mov
icebp
jmp
rclb
sub
std
mov
mov
pop
xchg
add
jge
sbbb
out
xchg
stos
cs
and
add
iret
cwtl
leave
adc
xchg
adc
loope
int
ss
jbe
jo
fwait
mov
mov
pop
mov
cmp
jae
mov
ja
add
pop
sahf
push
loop
mov
pop
jns
push
popa
jecxz
into
dec
cmc
push
sbb
mov
test
repnz
xchg
add
sub
mov
sbb
xchg
cltd
pushf
mov
mov
andl
pop
jl
sbb
sub
js
mov
push
stos
mov
call
xchg
addr16
notl
fmul
stos
jl
push
fstp
jns
addb
mov
mov
mov
lahf
mov
mov
adc
add
pop
loop
sbb
sahf
mov
mov
dec
push
int3
loope
pop
jne
push
inc
push
and
lcall
imul
cmp
cmp
xchg
pop
scas
dec
repnz
pushf
popf
rolb
mov
add
out
adc
mov
adc
fstpt
or
push
js
out
stos
sub
aas
jl
xchg
les
jnp
pop
in
mov
lock
xchg
xchg
shrl
cmpsb
mov
jp
scas
push
pop
xchg
inc
cmc
or
rcrb
dec
insb
outsl
xor
jb
mov
fidivl
xchg
xchg
andb
mov
loopne
xchg
int3
cld
mov
stos
push
pop
xchg
dec
mov
mov
lret
jno
adc
push
pop
frstor
subb
pop
cmpsb
cmp
out
icebp
dec
fcompl
daa
pusha
push
add
aaa
out
mov
loop
dec
out
rolb
iret
test
adc
sbb
sub
mov
scas
fistpll
iret
in
dec
pop
mov
add
or
stos
mov
jmp
mov
sahf
mov
in
inc
xchg
in
push
icebp
pusha
jbe
cli
addr16
cmpsb
mov
hlt
pop
xchg
xor
cmc
frstor
jnp
aaa
mov
fcompl
incb
daa
aaa
adc
sub
mov
mov
sbb
mov
cmpsb
add
dec
sti
cmpsl
mov
subl
std
jl
test
sbb
int3
outsl
outsl
hlt
xor
xchg
mov
out
out
mov
and
pop
and
cmc
add
xchg
shrb
mov
loopne
in
xchg
mov
push
cwtl
stos
daa
cld
shll
sahf
rclb
cwtl
lret
sahf
test
mov
mov
sti
jp
fisubrl
in
shr
or
mov
cs
pop
jg
shr
add
addr16
test
insl
mov
mov
dec
int3
addr16
popa
push
out
pop
stos
mov
dec
mov
mov
sbb
adc
lret
adc
ljmp
sbbb
mov
addb
repz
dec
lea
outsl
dec
cmpsb
mov
xchg
dec
loop
fsubl
test
outsl
popf
int3
out
push
push
icebp
ljmp
cmp
sbb
xchg
push
ljmp
stos
insb
inc
mov
mov
sbb
sbb
push
scas
scas
mov
mov
daa
cmp
gs
or
jl
add
adc
mov
mov
lcall
sbb
dec
cwtl
imulb
js
mov
mov
dec
scas
jnp
jns
sar
mov
mov
mov
mov
ret
insb
fs
bound
push
dec
les
rol
js
mov
test
mov
int
mov
into
mov
test
xor
mov
cmpsl
cs
xor
insl
lret
xor
cld
fs
arpl
clc
int
cli
out
xchg
cld
sbb
mov
and
push
inc
outsl
or
ret
mov
gs
lahf
mov
inc
mov
xchg
aaa
repz
push
sub
add
idiv
ss
jl
xor
sbb
xchg
cli
pushf
mov
inc
out
xchg
lahf
sahf
lods
pop
rolb
rolb
out
dec
loop
movsb
das
and
inc
and
inc
mov
outsl
aad
call
mov
cmc
or
mov
xchg
mov
cmpsl
pop
mov
sbb
ljmp
push
test
addr16
mov
cmp
lods
adc
stos
cmp
bound
shr
inc
xchg
sub
mov
mov
pop
stc
add
addr16
filds
repnz
icebp
mov
lds
mov
push
insl
pop
or
push
jecxz
sahf
aam
mull
mov
pop
lcall
add
rcl
push
cs
inc
push
outsl
aaa
in
xchg
movsl
hlt
mov
imul
pop
mov
mov
cld
adc
xor
shll
lock
idivl
or
mov
stos
inc
scas
aam
add
call
push
jmp
ja
push
cltd
xchg
jb
push
ljmp
aad
enter
test
pop
gs
sahf
xchg
jmp
gs
inc
xchg
dec
mov
int
repz
inc
mov
add
jbe
arpl
mov
cltd
adc
add
cmpsl
add
push
push
mov
mov
sub
push
mov
pop
mov
out
add
xchg
and
bound
fidivl
fcmovnu
out
inc
cltd
into
lods
mov
sub
sahf
mov
insl
xchg
mulb
mov
shlb
fnstsw
adc
xchg
es
imul
pop
xor
out
sbb
ret
mov
loop
jo
cmp
pop
into
arpl
aaa
push
subb
rorb
pop
fwait
sahf
pusha
push
pop
shrb
mov
repz
je
pop
addb
insb
pusha
sub
dec
jp
mov
int
mov
or
loope
clc
mov
addb
cli
gs
dec
sub
jl
pop
ret
push
cli
les
stos
scas
int3
sub
andb
push
in
fistps
vmovmskpd
rolb
pusha
jge
sbb
jecxz
jecxz
ret
mov
add
cmp
icebp
push
pushf
add
fdivrl
std
mov
xchg
pop
or
and
jb
sbb
xchg
fildl
sub
js
mov
mov
xor
call
add
push
ss
iret
and
arpl
mov
inc
sub
jnp
test
imul
jne
aam
insb
scas
push
xchg
mov
push
mov
xor
stc
mov
stos
shlb
shll
add
mov
dec
pusha
jl
adc
mov
mov
int3
inc
and
xchg
add
fwait
out
add
je
pop
jns
or
mov
mov
ret
aam
loopne
int3
cmp
loope
push
in
pop
rolb
xor
mov
test
cltd
sub
dec
loop
fwait
lds
and
push
aaa
push
xchg
sub
xchg
idivl
mov
inc
cmp
or
push
sbb
jmp
fildll
mov
jg
jp
test
test
rcr
in
cli
popf
shl
dec
adcb
cmc
out
lock
orb
out
bound
pop
jns
movsb
xor
xor
xchg
hlt
fsubrs
mov
lock
or
add
test
lock
pusha
mov
fcoms
fsub
add
nop
out
jmp
out
push
or
mov
add
orl
add
sub
in
lahf
sub
int3
scas
insl
mov
in
js
ja
cmp
test
jmp
out
xchg
jle
pop
sub
insb
adc
push
cmp
mov
dec
sub
mov
xchg
mov
data16
stc
loopne
out
orb
insb
inc
nop
push
loopw
lret
clc
mov
shl
mov
xchg
es
bound
add
ret
roll
insl
cmpsb
mov
or
push
aaa
add
arpl
sysenter
gs
ret
fstl
push
dec
sub
jnp
test
xor
jb
xchg
mov
cli
out
scas
inc
js
mov
mov
jb
add
adcb
xchg
out
bound
mov
adc
jbe
mov
sub
sbb
fcmovnu
pushl
add
in
push
push
pop
mov
mov
cmp
mov
inc
test
movsb
in
pop
test
mov
add
out
sbb
adc
sbb
jp
out
test
movsb
shlb
push
push
mov
decb
push
pop
mov
scas
dec
inc
movsb
addr16
mov
je
jbe
lds
sbb
push
pusha
jne
push
cmp
and
ja
test
lock
sub
idivb
call
mov
cltd
cli
imul
sub
mov
pop
testl
or
fisubrs
repnz
out
adc
in
bound
jmp
mov
cmp
sbb
lock
bound
xchg
mov
cltd
dec
test
fmuls
shlb
inc
les
jb
in
xchg
vpmaxsw
mov
adc
mov
add
jbe
add
ds
fisubl
mov
popf
outsl
push
mov
ret
cmp
repnz
inc
dec
pop
mov
add
adc
imul
jne
imul
xchg
jae
out
xor
inc
scas
jp
xchg
mov
adc
pusha
dec
mov
imul
push
adc
sub
aam
pop
inc
shl
cmp
repnz
neg
cmpsb
fxch
add
xlat
pop
sbb
les
mov
push
scas
enter
add
add
and
mov
xchg
pop
pop
cmpsl
xchg
lods
or
xchg
inc
add
jns
shrb
popa
lcall
out
add
cltd
pop
pushf
lret
data16
std
movsl
mov
sub
sbb
or
or
xor
rclb
popf
mov
sbb
jns
lret
jge
in
adc
iret
jb
call
cmp
xor
sbb
imul
int3
dec
imul
mov
loop
jp
mov
daa
dec
in
out
ror
hlt
jns
cwtl
sbb
ljmp
sub
into
and
add
mov
push
dec
xor
xor
xor
adc
sub
scas
inc
ljmp
aad
cmp
pop
cs
mov
adc
pop
xchg
push
xchg
pop
enter
push
cmp
fs
cld
lods
ret
xchg
push
dec
cmp
inc
pop
mov
sbb
add
out
push
arpl
mov
mov
loope
inc
loope
ret
and
jmp
xor
outsl
mov
subl
sbb
scas
imul
rcrb
cmp
js
repnz
mov
jl
mov
sbb
ja
jno
lret
out
mov
fsub
outsb
aas
push
cmp
bound
push
dec
ds
sub
fnsave
insb
pop
cmc
sbb
adc
cmpsl
jmp
gs
pop
mov
repnz
mov
xchg
loopne
and
insb
sar
addr16
adcb
setno
inc
xchg
sub
in
fcomps
dec
scas
fnstcw
jae
xchg
out
in
jo
repnz
lret
adc
lea
xor
jmp
aad
adcb
lahf
repnz
leave
in
push
fwait
add
adc
cld
and
pop
pusha
repz
lret
dec
mov
clc
xchg
lock
push
insb
sbb
es
mov
inc
gs
add
dec
inc
insl
sub
xor
cmpsb
arpl
push
loope
stos
mov
icebp
sbb
subl
mov
imul
das
and
mov
outsl
bound
adc
mov
jmpw
fwait
sahf
xchg
xchg
dec
ljmp
dec
aas
mov
jge
int3
leave
movsb
and
stos
adc
fnsave
test
decl
addb
adc
dec
lcall
rorb
aaa
mov
and
xor
push
out
jnp
out
popa
bound
loopne
push
ret
add
std
addl
mov
push
and
xchg
cmp
mov
std
iret
pop
iret
push
jg
or
or
add
mov
mov
cmpsb
mov
xchg
cmc
adc
cltd
test
loopne
leave
icebp
rclb
adc
addl
or
mov
mov
push
pop
xor
pop
push
xlat
lcall
xchg
iret
add
mov
ljmp
xchg
fldcw
jle
int3
adc
cmpsb
or
jge
xor
out
leave
loope
jecxz
dec
lcall
int
mov
fwait
lret
imul
add
or
aad
fimull
int3
mov
dec
cmp
gs
sub
fs
cmp
sahf
adc
out
sbb
sbb
pop
fs
call
fsubrp
out
add
out
push
xchg
nop
inc
push
mov
lcall
int3
jle
outsb
sti
dec
dec
inc
xchg
setb
aam
xlat
push
movq
int
sub
insl
jp
sbb
filds
call
cmpsb
xor
iret
movsb
jae
adc
sub
jno
fs
push
jbe
scas
sub
out
and
into
mov
or
iret
pop
imul
and
push
movsb
mov
pop
cltd
inc
mov
stos
mov
jno
jno
cmp
pop
pop
adc
jbe
jnp
sbb
mov
cmpsl
mov
aad
xorl
leave
jecxz
pop
ret
inc
int3
jne
cld
call
xchg
mov
adc
jns
mov
sub
mov
add
out
push
notb
stos
xchg
sub
pop
xchg
and
fisubrl
popl
mov
movsl
mov
aas
loope
in
ret
les
out
in
pop
loop
sub
punpcklwd
lcall
mov
stos
xchg
dec
arpl
xchg
out
stc
hlt
and
dec
cltd
mov
insl
dec
and
loope
fadds
mov
jb
mov
cmovnp
lahf
stos
or
fldl
loope
or
fwait
adc
ret
sub
dec
popf
ljmp
pop
jmp
jo
xor
fnstenv
sub
ror
push
sti
mov
into
push
jbe
adc
mov
mov
dec
xchg
jg
cmp
inc
imul
pop
mov
sbb
hlt
sbb
mov
jl
push
in
push
or
test
xchg
push
cli
mov
sub
testl
orl
and
or
outsb
dec
inc
dec
mov
fstl
push
inc
push
gs
and
adc
loopne
inc
ss
sub
jle
jns
xchg
out
out
mov
xchg
pop
or
dec
lret
jae
mov
mov
outsl
mov
pop
dec
pop
push
inc
mov
xchg
scas
mov
int3
cmc
inc
cmc
sub
daa
dec
fldl
inc
outsl
enter
fwait
add
cmc
test
pop
rcrl
jge
repz
jecxz
and
dec
dec
out
sub
push
lods
les
inc
out
jbe
insb
fwait
dec
pop
mov
and
add
push
loope
arpl
maskmovq
testl
ss
outsb
mov
or
mov
repz
popa
in
lea
mov
mov
sub
inc
dec
mov
scas
inc
dec
xor
clc
ss
push
scas
cmp
ret
lds
movsl
push
add
lods
icebp
aad
adcb
loopne
dec
stc
xorl
icebp
sti
insb
insb
pop
fcmovnb
dec
lcall
push
call
insl
stos
int3
and
out
daa
cmpb
clc
inc
icebp
mov
clc
mov
es
xor
push
mov
sub
cli
mov
sarb
iret
data16
ftst
data16
jmp
in
mov
enter
daa
xchg
fsubl
push
push
jnp
bound
dec
addr16
push
lcall
adc
push
mov
mov
mov
or
ljmp
mov
ja
movsb
mov
repnz
push
adc
out
mov
aaa
push
ret
mov
rol
jbe
fnstenv
andl
pop
sub
outsb
cmp
hlt
psrlq
fucom
mov
xor
sub
sbb
mov
xor
lock
pop
imul
jge
stc
xchg
sub
bound
sub
jns
push
subb
in
sub
lret
pop
xchg
test
dec
enter
lds
or
mov
scas
imul
ficompl
jnp
xchg
data16
adc
jmp
adc
in
mov
inc
into
and
add
dec
clc
mov
out
jo
dec
mov
daa
es
stc
int
int3
or
pop
movsb
fimuls
add
mov
push
push
cld
or
mov
lcall
push
pop
xor
and
js
sbb
add
push
cmp
mov
into
imul
cmp
jno
loop
dec
and
mov
loop
or
ljmp
testb
jnp
mov
les
inc
or
into
test
or
ljmp
pusha
mov
jne
add
into
mov
xchg
lock
pop
mov
leave
xorb
aam
bound
xchg
pop
add
hlt
push
adc
fistl
adc
mov
push
adc
cmp
fwait
jle
sub
imul
sub
jp
roll
mov
inc
cmp
dec
mov
pop
sbb
repnz
icebp
sub
mov
dec
jmp
mov
inc
xor
push
xor
pop
dec
mov
cld
jecxz
fstpt
out
stos
push
shll
push
pop
ret
push
dec
call
lret
xor
mov
xor
xchg
ja
out
in
sub
push
sbb
shrl
shl
out
xlat
rcrl
mov
addr16
add
push
icebp
xor
fstps
stos
cmp
pop
std
aad
testb
lret
cmpsb
adc
xor
xlat
or
cmp
cwtl
adc
push
lcall
adc
mov
push
sahf
add
jl
xor
adc
lods
daa
sbb
icebp
fnsave
mov
data16
idivl
into
or
inc
ficoml
mov
pop
or
int
aas
sub
in
dec
icebp
pop
push
xchg
call
cmp
push
dec
inc
or
push
repz
jbe
mov
in
mov
cmpb
mov
mov
mov
jl
dec
and
dec
pop
call
mov
scas
cmpsl
sahf
sahf
stos
jo
cwtl
movsl
fsubrl
mov
xchg
cwtl
in
mov
or
enter
mov
push
addl
mov
scas
push
mov
xor
cmp
mov
repz
fnstenv
pop
push
imul
jae
outsb
rcll
adc
ja
mov
imul
enter
idivl
mov
in
cli
fildl
push
lahf
shl
aam
loopne
in
in
aam
dec
fsts
pop
xor
adc
push
int3
jmp
mov
inc
mov
sti
lock
sub
jb
lods
mov
xorl
cltd
xor
or
test
pop
jl
xlat
mov
push
push
mov
xor
lcall
mov
shlb
and
pushf
mov
dec
arpl
sti
stc
mov
rdmsr
and
jl
ds
insl
dec
cli
mov
pusha
sub
sbb
arpl
enter
aaa
xchg
mov
jnp
test
pop
mov
pop
and
sbb
es
push
dec
mov
cmp
jne
dec
add
test
addl
int3
push
add
arpl
pop
inc
inc
sbb
sbb
mov
clc
loope
fs
or
adc
sbb
and
dec
bound
lds
mov
dec
outsb
mov
aad
mov
leave
sub
xchg
or
fldl
sub
mov
shrb
cmp
shll
add
inc
cmc
mov
mov
data16
icebp
fbld
mov
rcll
jo
notl
aam
icebp
and
pop
push
insl
lahf
adc
sbb
notl
cli
and
fidivs
xchg
in
addl
mov
adc
movsb
mov
xlat
aam
shrb
jp
fldl
pop
mov
lods
lret
cmp
mov
mov
jge
jl
jne
dec
sbb
mov
sub
pop
fmul
hlt
jl
or
cmp
es
add
nop
cld
xchg
mov
add
mov
out
adc
xor
pushf
adc
sbb
mov
lcall
dec
ds
aad
into
mov
arpl
pop
push
sub
push
flds
xchg
mov
push
rcll
dec
dec
outsl
dec
cmp
lcall
popf
jae
adc
cmp
pop
in
xor
pop
and
push
pushf
popa
imul
inc
pop
xor
xchg
sub
push
in
cwtl
ss
dec
and
sbb
or
xchg
push
mov
cltd
out
icebp
stos
in
push
pop
jle
cmc
hlt
out
lods
stc
and
cmp
int3
popf
shlb
mov
jg
cld
lahf
sub
and
outsb
aam
mov
mov
inc
mov
jae
mov
in
les
sbb
jp
mov
loop
jmp
cwtl
cwtl
push
pop
int
out
inc
movl
push
push
aas
inc
mov
mov
jne
iret
and
mov
in
dec
jle
ret
adc
in
loop
jnp
xchg
jne
jae
xor
push
mov
in
icebp
fstpl
inc
push
jnp
je
inc
ficompl
mov
aas
jno
cwtl
je
mov
inc
mov
fnstsw
int3
loopne
testb
mov
dec
scas
sti
out
cmp
or
xchg
mov
jg
or
sub
xor
ja
push
dec
outsb
cmp
mov
test
jne
repz
fs
subb
sub
lret
xchg
lcall
jns
aad
xchg
addb
pusha
inc
stos
add
out
sti
or
lods
mov
xchg
pop
nop
test
ret
pop
ss
insl
push
int3
add
mov
push
cmpsl
pop
xor
loope
push
jno
add
push
clc
add
xchg
scas
xor
inc
xor
scas
xor
ljmp
dec
fstpt
loop
mov
add
push
mov
ds
sbb
jecxz
jp
cmc
mov
in
shrl
lret
mov
and
sbb
inc
shlb
sub
ljmp
jmp
mov
mov
dec
pop
pusha
clc
enter
aad
test
leave
outsl
and
lods
idivl
repz
or
sub
push
pop
clc
dec
pop
or
jmp
mov
int3
push
mov
cwtl
in
cmp
jae
cmpsb
mov
xchg
xor
aad
add
jnp
jb
add
mov
cltd
ljmp
dec
xchg
or
adc
mov
mov
insb
or
ret
push
inc
cld
popa
inc
mov
filds
jb
xchg
jmp
outsb
and
ljmp
dec
lds
push
sbb
pushl
cs
adc
fistl
mov
int
add
push
jbe
movsl
cld
add
mov
dec
xchg
mov
mov
mov
jmp
mov
add
mov
in
jo
push
sbb
or
mov
movsb
xor
dec
movsb
cmp
sub
mov
cmp
ret
aam
test
repnz
into
dec
mov
add
int3
dec
jle
loop
sub
jecxz
bound
mov
hlt
ljmp
in
stos
arpl
xchg
mov
mov
mov
shlb
jp
or
push
clc
push
jno
shll
xchg
xor
sahf
push
dec
pop
adc
aad
das
pop
or
mov
adc
jle
js
xor
lret
repz
jecxz
rcrb
test
xorl
xchg
or
sub
test
jl
mov
lcall
xchg
popl
gs
cmp
mov
lcall
push
jo
add
adc
xor
dec
xchg
es
ljmp
inc
xchg
ljmp
ljmp
add
stos
mov
imull
js
cmpb
xor
cwtl
sub
rcr
sub
in
push
data16
mov
add
rolb
fistl
xchg
iret
stos
ss
xchg
jl
push
push
lahf
or
push
and
mov
lcall
xor
xchg
mov
jg
mov
inc
pop
dec
test
add
ret
xchg
in
gs
dec
mov
xchg
xchg
mov
push
pusha
xchg
notb
or
mov
mov
cmpsl
xchg
pop
in
sub
rclb
test
fsts
mov
les
outsl
outsl
push
dec
jecxz,pt
call
loop
enter
push
mov
cmc
lahf
cli
lea
pusha
test
movsb
mov
jl
loope
lock
int
imul
or
es
jae
in
inc
gs
push
ljmp
xlat
mov
dec
xor
inc
outsl
data16
adc
roll
repz
push
cld
and
push
inc
fmuls
xchg
and
jno
add
push
pop
gs
daa
and
mov
inc
in
xchg
stos
mov
loopne
cmpsb
push
int3
pushf
ret
insl
test
outsl
and
sub
add
mov
inc
ret
je
sbb
sub
fdivr
cs
sub
iret
add
push
in
rcll
dec
mov
mov
xchg
ds
dec
mov
mov
nop
mov
jg
aad
mov
inc
dec
popf
inc
aaa
jno
jmp
into
lcall
sbb
mov
mov
and
push
inc
imul
addr16
leave
icebp
fidivl
xor
mov
or
stos
call
pop
xchg
jae
repnz
inc
adc
push
je
jae
mov
rcll
imul
pop
sub
push
sub
idivb
das
clc
jbe
call
jne
outsb
outsb
loop
xchg
adc
in
mov
jmp
fcompl
movsb
iret
stc
mov
filds
out
sbb
arpl
add
inc
in
xchg
sahf
pop
xor
mov
divb
fildl
mov
lahf
arpl
adc
fdivr
dec
xor
movsl
adc
jne
sub
bound
int3
arpl
shll
jmp
cmpsl
cmp
test
push
cmpl
mov
sahf
add
outsb
roll
sbb
repnz
mul
xchg
mov
notl
cmpsl
rep
jb
out
fidivl
ds
enter
jae
dec
xor
orl
stos
add
rolb
call
push
jg
ret
js
lea
cmp
js
jne
or
push
bswap
mov
push
jae
dec
push
xchg
int
pop
lds
arpl
push
nop
adc
ja
mov
jns
mov
lea
push
aad
push
neg
sahf
loopne
mov
mov
addb
in
push
stos
test
sarl
mov
fwait
sub
out
stos
mov
popf
into
dec
pushf
int
mov
xorl
sub
add
shl
ljmp
mov
sub
xchg
pop
fwait
daa
loopne
mov
mov
and
dec
arpl
push
pushf
jmp
inc
popa
test
shll
mov
lods
dec
xchg
jns
mov
es
pop
mov
mov
jns
sbb
rcrb
fcmove
dec
inc
repz
jg
xchg
stos
shlb
shl
inc
fistpl
xor
xchg
cld
aam
sbb
dec
jbe
ffreep
jl
jle
enter
or
jmp
jecxz
jae
mov
xor
pusha
add
test
ds
mov
lret
shl
pusha
sub
mov
dec
andb
jecxz
pop
daa
dec
inc
addb
fwait
pop
mov
int3
aad
inc
movsl
mov
insb
mov
inc
mov
and
inc
xor
ja
pop
stos
lret
in
inc
push
and
or
aas
incb
lret
sub
dec
insl
xchg
jb
cmp
cmpsb
mov
sbb
call
sbb
fwait
lods
stos
xchg
nop
push
addr16
into
cmp
in
pop
data16
loop
mov
push
mov
fs
and
cmp
test
fcoms
je
and
aad
cmp
jb
movb
or
stos
push
addr16
pop
les
jle
and
pop
xchg
scas
in
inc
movsl
jns
or
xor
sub
shrb
daa
cmc
fbstp
popw
xor
jl
clc
jno
inc
cmpsl
or
fiaddl
xchg
add
andl
dec
les
dec
xchg
ror
scas
pop
mov
and
flds
cmpsb
add
clc
mov
pushf
xchg
add
pop
jmp
outsl
shlb
mov
lock
hlt
adc
lods
test
outsl
mul
imul
push
movsb
addb
mov
or
sbbl
mov
inc
cmp
das
nop
jg
into
enter
test
fs
lret
sub
icebp
ret
jae
imul
out
mov
lcall
or
sbb
jae
test
lods
or
and
inc
mov
in
lea
std
jno
inc
xchg
xchg
and
iret
fmuls
lea
cli
adc
or
das
in
adcb
ss
and
push
dec
enter
mov
push
push
addr16
push
mov
mov
mov
dec
dec
call
aam
inc
clc
movsl
push
daa
jae
gs
dec
fmuls
loopne
jg
out
and
mov
fsubr
inc
pop
or
fistps
jnp
movsb
stc
mov
inc
aam
jbe
inc
hlt
shl
mov
test
lret
xchg
pop
rcll
dec
arpl
addl
push
sbb
mov
jnp
mov
fwait
out
inc
push
shlb
mov
mul
add
mov
in
dec
xor
sar
jecxz
dec
dec
pushf
or
jmp
stos
int3
es
sbb
inc
cmpsl
inc
push
xchg
in
inc
movsb
jge
lea
lods
stos
sbb
pop
inc
pop
sbb
jae
inc
mov
jmp
xchg
out
in
pop
mov
sub
pop
cmpsl
outsl
inc
movsl
jnp
loopne
or
sub
push
hlt
pop
cmpsl
rorl
pop
fwait
aaa
cwtl
sub
mov
out
fists
int
fwait
rcrb
cmp
test
pop
adc
int
pop
js
mov
ja
out
lods
cwtl
push
inc
cmp
xchg
jg
pushf
cli
pop
mov
add
aam
xor
xchg
xchg
push
sub
lods
sbb
call
fstpl
add
jle
jo
mov
jo
sti
cmp
mov
js
pop
dec
aas
in
lds
fs
xchg
loopne
sbb
mov
mov
adc
inc
popf
cmp
clc
in
adc
push
mov
shlb
xchg
push
test
nop
cmpsb
or
add
jecxz
pop
or
adc
xlat
xchg
jge
rorb
xlat
mov
cmp
pop
cmc
xchg
negb
or
dec
mov
dec
xchg
cmpsl
push
in
lods
and
sbb
mov
ds
mov
and
das
xor
lahf
jns
xchg
sub
ret
jnp
xchg
jo
movsb
popa
stc
pop
mov
fs
add
mov
dec
dec
dec
sbb
cmp
push
stos
aam
add
repz
sub
arpl
jle
or
jbe
scas
inc
cmpxchg
cmp
jecxz
xchg
mov
adc
shlb
mov
int3
sub
pop
pop
lea
out
mov
movsl
pop
mov
jbe
push
clc
xchg
xadd
jmp
nop
sub
push
pop
push
lock
add
push
mov
jno
lcall
xchg
ficoml
adc
sub
cmp
loopne
adc
dec
inc
leave
jg
and
imul
cmp
dec
pop
push
loope
add
out
mov
test
cld
mov
adc
xor
gs
adc
inc
add
scas
xor
adc
mov
ror
mov
push
icebp
mov
imul
lret
fisttpll
mov
xchg
out
sarl
mov
adc
pop
pop
insl
out
test
fidivl
jl
shll
mov
xchg
add
inc
jge
cmp
cld
or
inc
lods
shufps
adcl
jge
pushf
jns
push
pop
imul
mov
rorb
push
jbe
scas
mov
repnz
clc
push
imul
or
scas
sarb
out
sub
aam
xor
fs
test
sub
jo
addb
shlb
clc
int3
adc
mov
dec
adc
adc
adc
inc
mov
in
adc
in
or
jp
pusha
testb
shll
add
ret
adc
cmp
nop
cmp
pop
or
xorl
outsl
lahf
mov
xor
iret
loop
pop
stc
std
push
fistps
pop
jmp
jae
mov
sbb
fs
dec
dec
fcompl
add
fstpt
pop
dec
aas
adc
pop
xchg
push
sub
cwtl
fldt
jnp
popa
lds
shrl
inc
jbe
jns
mov
cmpb
xchg
test
in
add
adc
in
ljmp
inc
jmp
dec
cmp
mul
shl
in
xchg
cwtl
xor
fdiv
sub
icebp
and
sub
fucomp
mov
out
mov
mov
test
or
dec
mov
and
mov
rcll
cwtl
mov
inc
jp
mov
jp
dec
sbb
push
std
mov
fidivrl
roll
gs
sbb
inc
mov
aaa
call
test
jp
pusha
sbb
sbb
ficoml
les
outsl
push
ss
out
sbb
sub
or
push
add
jl
mov
inc
pop
popf
sbb
cmp
dec
cmpsb
lds
int
shrl
jo
mov
mov
movb
lret
std
aaa
test
lods
jno
mov
pusha
pop
inc
loop
cmp
je
inc
add
cltd
xchg
ja
or
add
sbb
xor
mov
adc
adc
cmp
jl
pop
dec
push
mov
push
iret
cmp
mov
mov
pop
iret
cs
mov
pop
fbld
pop
insl
lods
sbb
cmp
add
xlat
fsubl
outsb
pop
mov
cmpsb
dec
mov
push
pop
xchg
mov
cs
ds
sti
push
or
iret
jbe
pusha
in
dec
shlb
aas
dec
in
js
jae
xor
in
xchg
mov
adc
sub
push
mov
fnstcw
inc
mov
xor
xchg
rcrb
out
inc
cmp
sbb
js
out
push
ror
adc
xchg
sarb
push
pop
sub
int
insl
ljmp
xlat
in
sbbl
insb
cmp
js
orb
jp
lods
jbe
or
mov
mov
stc
insb
mov
mov
xchg
sbb
add
js
adc
aam
fidivs
ficoml
mov
xchg
fcoml
sbb
jo
shr
xchg
adc
xor
test
repnz
test
aam
jbe
jp
js
push
jecxz
sbb
bound
or
inc
mov
aad
les
jmp
mov
mov
ret
loop
loopne
cmpsl
pop
jmp
mov
jl
or
aam
sbb
mov
insl
pop
mov
sub
mov
mov
data16
pop
shrb
add
dec
push
push
aam
pop
push
sbbb
sbb
cmp
ja
add
mov
outsb
mov
call
sbb
mov
sub
push
sbb
lret
jmp
mov
test
xor
cmp
js
mov
adc
out
mov
mov
into
push
sahf
and
popf
adc
jb
ret
lea
mov
cltd
lock
mov
push
pop
mov
pop
dec
mov
xor
outsb
push
icebp
or
adc
cld
mov
mov
dec
insb
mov
lock
mov
repz
push
jmp
ficoml
andb
test
imul
fnstenv
pop
leave
or
sahf
mov
jecxz
adc
fs
fldcw
loop
stos
orb
shll
inc
xchg
mov
push
mov
add
dec
test
jmp
mov
ret
mov
or
out
cmp
mov
push
jne
cmpsl
push
adc
lahf
insl
mov
mov
push
fs
fwait
xor
mov
dec
loop
loopne
cmpsb
stc
cmpsl
aam
lock
pushf
xchg
loope
sahf
mov
daa
dec
xor
movq
cmpsl
ljmp
mov
add
stc
mov
cmpsb
cmp
mov
cmp
lods
data16
aam
pop
movsb
cli
jbe
and
lcall
cmp
test
mov
fmull
inc
insl
ljmp
rol
inc
test
dec
xchg
add
push
pop
jb
mov
cmpsl
mov
add
jne
stos
rcl
pusha
mov
clc
aaa
dec
mov
cs
inc
test
mov
mov
adc
cltd
cmp
sub
jmp
inc
adc
int
xchg
fcomps
push
int3
pop
add
push
sbb
lcall
test
push
cmp
inc
stos
imul
outsl
push
insl
lcall
add
shl
adc
sub
push
push
mov
lods
adc
sub
add
and
xor
mov
push
ror
push
cmp
stos
rcll
pop
xchg
in
xor
fcoms
jbe
adc
test
pusha
and
in
repz
sar
push
xchg
mov
int3
shlb
lret
testb
jo
or
sti
dec
push
scas
les
dec
mov
cmpsb
aaa
lods
lahf
fs
roll
in
in
or
cltd
adc
xchg
jl
pop
test
mov
in
jle
push
fs
dec
in
outsb
repz
subb
adc
xor
xchg
fistps
push
sub
or
test
mov
or
jmp
in
jg
sbb
adc
adc
inc
mov
jbe
stos
or
pushf
outsl
lods
into
in
jmp
lahf
push
xchg
std
jmp
iret
fs
inc
scas
ljmp
fucom
mov
sahf
or
movl
and
mov
in
inc
jae
cld
leave
arpl
xchg
pop
fwait
les
lock
sbb
push
adc
std
mov
outsl
and
add
jne
jecxz
cmp
stos
jmp
mov
idivl
dec
sbb
push
push
or
ret
lcall
mov
cmp
or
xchg
and
jns
insb
and
add
lds
popf
lods
mov
sub
enter
mov
repz
hlt
jp
cmpsb
or
insl
popa
adc
xchg
lock
outsl
lret
lods
push
dec
lcall
push
pop
scas
mov
call
sbb
pop
int3
push
mov
adc
cmpsl
mov
iret
int3
xchg
add
out
adc
push
jecxz
in
insl
inc
push
lods
insl
pop
in
xchg
stos
mov
icebp
out
nop
adc
cmpsl
lods
jb
xchg
mov
mov
subl
iret
neg
jae
push
add
jmp
push
cmpsb
mov
clc
outsl
mov
shll
clc
and
hlt
insl
fs
add
enter
std
or
add
xor
stc
xchg
push
lods
clc
orb
lds
push
jp
mov
stos
push
xor
xchg
push
in
pop
mov
push
mov
inc
push
bound
stos
loopne
pop
popa
mov
mov
dec
sub
jne
ljmp
aas
movsb
jp
sti
jmp
out
fs
or
int
lods
popf
cld
fs
add
add
push
mov
adc
repz
mov
std
mov
es
jnp
or
add
ret
pop
add
pop
inc
mov
or
gs
xchg
fadds
xchg
jmp
cli
jne
push
es
xchg
into
mov
pop
add
cld
push
mov
mov
out
sub
mov
add
int3
lcall
mov
mov
fiadds
out
dec
sbb
cmpsb
mov
sbb
and
or
movsb
scas
aam
xor
mov
mov
lret
mov
inc
into
test
mov
push
clc
jmp
push
pop
int
or
or
sbb
cmp
mov
add
sahf
mov
mov
lahf
mov
add
cmp
stos
pop
mov
je
mov
mov
xchg
mov
cltd
and
rol
aaa
adc
addr16
pop
repnz
imul
jne
cwtl
sub
scas
or
bnd
bnd
sub
sbb
test
xorb
insb
add
push
or
test
rorl
pusha
jp
lds
dec
jl
ds
jbe
add
pushf
cmp
icebp
mov
daa
insl
in
imul
inc
ljmp
jge
iret
mov
add
dec
cmp
or
or
push
int3
outsl
lods
aas
add
jbe
and
popa
cmp
dec
and
pusha
negb
adc
or
imul
outsl
lret
bnd
shlb
pop
mov
push
push
add
js
sbb
cli
std
int3
scas
orl
mov
push
mov
fs
and
loopne
push
lea
imul
movsl
mov
mov
not
mov
mov
lret
lods
dec
mov
shlb
scas
stc
fiaddl
and
add
shll
ds
cmpl
jbe
das
mov
mov
fstpl
inc
clc
inc
add
std
dec
jg
mov
sub
movsb
jno
mov
jno
jo
fsubl
out
lahf
xor
jbe
xor
add
cltd
lahf
pop
cmp
mov
xchg
pop
mov
mov
mov
je
je
and
ret
pop
pop
in
lea
out
pushf
fnstsw
xor
mov
movl
jae
add
jne
in
repz
or
int
into
in
xor
mov
mov
daa
push
push
push
cmp
pand
popa
out
pop
or
lcall
adcb
sbb
pop
fisubrs
daa
jl
test
push
fs
insb
mov
ljmp
je
fstpl
aad
xchg
sbb
xlat
cmp
or
push
call
sub
mov
dec
fdivrl
pop
mov
or
adc
add
sub
or
pop
mov
and
xchg
dec
mov
lea
or
in
test
xor
fists
or
lods
dec
sub
push
out
sbb
mov
mov
outsl
cwtl
cmpsl
pop
mov
add
sti
dec
xor
outsb
jl
sub
fisubrl
or
addr16
mov
cmpb
lods
mov
in
clc
repnz
mov
mov
lock
call
and
jne
inc
cwtl
fs
push
popa
jge
or
add
xchg
in
or
out
jns
and
adc
sti
and
and
enter
jae
sbb
mov
inc
leave
mov
mov
jne
mov
pop
cld
pop
push
add
popa
jg
dec
lods
std
ljmp
adc
sub
shl
out
fidivrs
enter
adc
mov
decb
enter
lcall
dec
int
xchg
fcomps
sub
pop
push
xchg
sub
cld
nop
dec
cmp
cmpl
int3
push
push
fidivrl
xchg
mov
add
push
xor
lahf
xchg
insl
stc
sahf
ss
and
mov
dec
ret
mov
mov
xchg
mov
and
push
sub
insl
inc
cli
lahf
adc
sti
and
addr16
fmulp
jg
gs
cmp
jmp
cmp
stos
pushf
push
and
mov
mov
mov
jne
mov
das
jbe
test
iret
int3
testb
test
mov
divb
or
pop
mov
jb
mov
jae
cwtl
xor
pop
roll
mov
xchg
sbb
push
leave
push
mov
repz
xor
sub
int3
jns
jl
and
lret
mov
push
or
int3
mov
xor
in
insb
scas
mov
xchg
bound
jae
aas
test
clc
xchg
gs
mov
in
out
jbe
sbb
insl
push
cltd
jle
and
xor
dec
cld
fsts
test
xchg
mov
xchg
pop
push
cltd
sub
adc
js
clc
out
mov
fbld
call
and
push
call
sub
xchg
fisttpll
arpl
lods
movsl
test
inc
push
jmp
pop
cs
lret
cmp
outsb
in
cld
sub
mov
mov
xchg
or
jmp
xor
ja
sbb
adc
jo
lock
cld
push
pushf
dec
pop
repnz
pop
dec
mov
adc
fcoml
xchg
iret
pop
pop
xchg
lret
pushf
shll
js
insb
in
fldt
dec
popf
mov
dec
mov
pop
mov
loopne
adcb
movsl
aas
mov
sahf
jbe
loopne
mov
xlat
fsub
mov
gs
jbe
mov
rcll
pop
inc
mov
xor
inc
jg
movsl
lds
sbb
int3
sbb
shlb
mov
out
jp
repnz
gs
add
mov
xchg
out
sub
xchg
mov
in
cmp
mov
adc
test
test
ljmp
shlb
bound
mov
or
xchg
adc
and
dec
inc
test
mov
lock
adc
jmp
jg
rorb
test
push
sub
cltd
testl
mov
int
pop
sbb
rclb
cmp
lock
pusha
mov
xchg
cltd
push
add
fwait
mov
test
jns
inc
mov
adc
out
mov
mov
cmc
or
pop
fsubrl
subl
cmp
mov
stos
lods
adc
clc
sbb
push
stc
push
bound
jae
sahf
xchg
cmp
daa
cmc
out
push
xor
in
mov
dec
int3
sahf
or
movsb
aam
ret
cmc
mov
cmpsb
popf
insb
in
in
cwtl
dec
loopne
dec
push
jbe
movb
sahf
dec
clc
xlat
sbbb
lds
movsl
mov
push
iret
scas
icebp
inc
gs
cld
lods
push
and
jne
jo
dec
fs
out
push
lods
adc
clc
add
ss
sahf
jae
jmp
sbb
sarb
fcoml
push
mov
iret
xchg
rclb
nop
repz
aam
divb
adc
jl
add
cmpsb
cmpsb
and
outsb
sbbl
cld
negl
push
dec
jbe
arpl
sbbl
repz
add
xchg
popf
jnp
stos
mov
xor
stos
jp
add
jbe
sbb
or
or
mov
add
inc
inc
adc
mov
add
pop
pop
and
push
add
pop
jmp
outsb
sbb
mov
ljmp
cmp
mov
mov
cld
xchg
dec
enter
pop
push
cwtl
jg
addl
lock
stos
jecxz
xchg
aad
andl
or
lods
or
push
idiv
ja
jbe
adc
lds
mov
out
adc
rorb
add
pop
jbe
test
lcall
lods
sub
jo
mov
pop
jge
movsb
mov
lret
mov
scas
sub
mov
fdivr
fs
xchg
pop
lea
mov
adc
mov
sub
pop
ror
mov
cs
in
jle
fmuls
or
aad
test
stos
mov
mov
push
movsl
test
loop
das
mov
adc
outsb
dec
pop
das
shrb
inc
hlt
or
dec
jbe
call
and
shll
fdivrs
insl
jb
xor
cmp
out
lods
popf
jno
filds
fisttpll
fcoml
std
fisubrl
icebp
mov
cld
push
iret
in
cld
ret
and
mov
test
dec
and
mov
jg
xchg
ror
cmp
mov
push
cmp
mov
out
push
shrb
nop
sti
lcall
sar
or
test
jns
shrb
fwait
nop
leave
int
pop
inc
push
aam
mov
jl
add
mov
arpl
jb
imull
clc
nop
mov
adc
sbb
dec
xchg
xsha1
cmpsb
mov
xchg
sub
notl
int3
mov
sbb
jl
pop
loop
jge
mov
dec
into
into
inc
mov
push
je
std
dec
push
mov
sub
and
ds
or
ret
sbb
vunpcklps
mov
jp
or
aaa
loop
lods
jecxz
jo
scas
int
adc
lahf
cltd
mov
xchg
insl
add
ja
add
mov
inc
mov
imul
jnp
jge
pop
cld
mov
fs
pop
decb
inc
int
jl
fbld
cmp
jl
pop
mov
push
clc
push
sbb
add
lock
rcl
mov
dec
push
rcrb
mov
sahf
jae
test
xor
dec
push
xchg
cltd
out
lods
dec
add
push
pop
mov
push
cmpsb
std
stc
aad
dec
stos
std
jmp
xor
cmp
jo
sbb
mov
mov
mov
movsb
std
sarb
mov
lret
mov
ror
xchg
jno
adc
pop
andl
cmp
movsl
call
inc
into
les
sub
lods
sub
jecxz
mov
add
xor
lods
shl
push
lahf
push
fstpt
dec
mov
shlb
xchg
stc
in
jno
jns
insl
mov
add
add
sub
push
out
divl
mov
xchg
dec
adc
fisubrs
push
and
nop
pop
xlat
out
adc
add
adc
mov
fwait
add
or
xchg
movsl
fldt
adc
aam
push
les
les
testl
stos
jge
sbbb
fisubrl
nop
std
bound
mov
mov
test
add
push
int
jge
stc
testb
daa
and
cmp
outsb
fsubr
shrl
dec
fisubrs
jae
out
lock
ja
stos
loopne
inc
ss
xchg
js
ja
sahf
mov
iret
push
pop
in
hlt
mov
scas
xadd
ret
iret
cmpsl
ljmp
mov
jb
jns
inc
xchg
add
dec
pop
cmpsb
fsubrs
in
repnz
jg
xchg
sub
shll
mov
cmp
adc
mov
cmc
jo
pop
in
mov
mov
out
pop
xchg
sub
out
mov
loop
loope
xchg
ss
xor
xchg
xchg
rcrl
fcoms
and
push
dec
jmp
sub
mov
ja
cmpsb
insb
sbb
sub
cmc
push
push
lods
out
les
dec
or
dec
or
push
sbb
and
jae
aas
imul
bound
jl
repz
jae
fcmovb
push
test
lods
mov
inc
jmp
jo
lcall
out
aaa
dec
repz
sbb
pop
je
and
lcall
adc
add
icebp
mov
insl
ja
out
addb
ss
push
cmp
ss
into
and
fs
sub
xchg
inc
sbb
add
loope
sahf
insl
dec
idivl
loopne
repz
jecxz
and
mov
mov
shll
mov
lret
xchg
test
push
sbb
adc
inc
cmpsl
ljmp
push
mov
adc
mov
lcall
in
or
pop
loopne
inc
shll
xor
mov
stos
or
lcall
xor
fsubrl
lds
lods
addr16
add
test
call
test
inc
pop
mov
out
ss
cmp
stos
or
mov
xchg
xchg
in
loopne
adc
xor
test
xchg
scas
xor
jb
inc
xchg
jp
mov
mov
inc
cmp
xchg
lret
mov
pop
fwait
shll
inc
lea
out
add
mov
ja
out
jmp
inc
dec
mov
pop
mov
test
fdivrs
mov
in
mov
cli
mov
jbe
or
jns
mov
cld
out
rorb
mov
sub
orb
leave
ds
cmovl
leave
addr16
inc
mov
jno
adc
dec
jl
mov
fs
push
inc
cmpsl
popf
mov
cmc
rclb
xchg
fdivl
jbe
xor
and
lea
sub
ret
pop
cmp
inc
test
mov
sti
lea
add
repnz
xchg
jb
jle
mov
xchg
pop
or
in
in
dec
pop
adc
adc
push
mov
in
lahf
out
add
in
test
loop
stos
mov
cmp
loope
std
aam
loope
arpl
sbb
push
testb
sub
movsl
jg
push
dec
stc
inc
test
adc
shlb
cmpsb
daa
and
mov
call
lock
inc
jmp
stos
pop
test
cmp
iret
fisttpll
arpl
inc
bound
push
cmc
mov
cltd
jbe
mov
fsubrl
sbb
cli
pop
xchg
leave
mov
nop
add
test
ja
add
out
sti
mov
mov
out
mov
add
sahf
ret
mov
shl
adc
outsb
jns
lock
fwait
loop
mov
xor
jecxz
cmp
test
cmp
mov
mov
lods
add
jae
in
lods
cli
ret
dec
rolb
dec
in
and
xchg
aas
mov
push
push
add
adc
dec
outsl
imul
push
int3
es
jbe
lea
adc
lods
or
fcomp
outsl
adc
leave
stos
pop
cld
xchg
repz
jno
hlt
js
lods
rorb
popa
notb
mov
cmpsb
adc
mov
xchg
imul
add
and
mov
mov
adc
mov
adc
push
insb
fstp
cmp
in
rclb
insb
mov
xlat
repnz
mov
mov
js
test
mov
sub
pop
leave
xchg
in
out
cli
push
mov
cltd
mov
repnz
or
mov
pop
pop
xchg
data16
scas
dec
jns
nop
ljmp
rcrl
lahf
mov
add
loope
xchg
xchg
imull
pop
cld
add
adc
sbb
jmp
add
inc
cmpsl
mov
jae
lahf
dec
pop
mov
sbb
dec
sub
mov
push
test
xchg
sbb
adc
cmpsl
mov
es
jb
jnp
ror
in
push
jecxz
jb
push
pop
mov
jne
loop
cmc
push
idivl
mov
xchg
inc
xchg
movsb
pop
cltd
inc
lcall
inc
scas
movsb
aaa
stos
inc
test
push
rcr
lods
js
jl
gs
mov
xchg
insl
push
pop
mov
pop
cmp
inc
shrl
mov
adc
mov
xchg
lods
push
je
dec
mov
or
sub
cmp
in
popa
cmp
stc
sub
cmc
cwtl
addl
addl
xor
or
addr16
jge
sbb
mov
ja
mov
sahf
xchg
in
and
pushf
fidivl
and
adc
mov
ficoms
lcall
imul
test
xchg
or
stc
stos
fwait
lret
push
fidivrs
inc
push
jl
stc
push
loopne
sahf
lahf
xchg
push
insb
or
out
cmpsl
mov
cmp
rcrb
lret
decl
daa
gs
jb
push
xchg
push
add
cltd
pop
dec
mov
imulb
mov
scas
jl
pushf
sub
fs
inc
inc
or
push
popa
rolb
jg
mov
test
inc
outsl
std
stos
sub
sbb
mov
mov
cwtl
jne
xchg
lock
jle
ljmp
xchg
fildl
insl
fcmovb
repnz
pop
cltd
clc
shll
xchg
jnp
aaa
in
mov
xorl
fsubl
in
fisubs
cmp
cmpsl
pusha
fimull
fs
push
pushf
mov
rolb
lods
incl
mov
in
mov
out
push
fsubrl
xor
mov
pop
or
out
cltd
jl
push
push
int3
imul
mov
int
add
lcallw
ret
push
insl
mov
test
mov
mov
fiadds
mov
xchg
data16
aas
pusha
or
mov
sbb
cwtl
out
test
hlt
xchg
out
fs
mov
adc
lea
enter
add
push
in
je
sbb
mov
xchg
push
shlb
shrb
pop
mov
jp
or
je
push
stc
icebp
push
dec
ret
dec
imul
aad
ljmp
cmp
sbb
adc
inc
jp
push
xlat
and
or
jbe
lods
cmp
push
inc
mov
adc
add
ror
cmp
push
stos
fs
popa
std
xor
repz
xor
in
dec
sub
xor
mov
stos
dec
mov
out
loopne
test
jbe
sub
xor
outsb
ja
xor
jb
imulb
roll
push
shlb
ds
fadds
outsb
jl
stos
inc
aam
sbbb
mov
mov
insb
add
subl
lods
fists
les
pop
xchg
mov
mov
loopne
cltd
lahf
mov
sbb
scas
shll
push
xchg
push
pop
out
mov
pop
dec
add
shll
lods
push
ss
ljmp
stos
sub
pop
xchg
sub
cwtl
and
jg
sbb
push
nop
and
js
fcmovnb
outsb
adc
push
mov
dec
mov
aaa
sbb
mov
mov
nop
xor
cltd
sub
insb
pop
ds
stc
mov
mov
push
adc
sbb
sbb
mov
imul
or
or
ljmp
mov
imul
mov
jae
ds
cmp
inc
pop
cld
pop
xorl
bound
repz
stos
add
mov
mov
test
pop
add
cmp
in
dec
push
mov
sahf
pushf
ret
test
aam
ljmp
or
stc
cli
shr
push
pop
mov
inc
cwtl
mov
adc
pop
loope
push
sub
xchg
in
scas
inc
add
jmp
test
imul
testb
push
inc
call
mov
dec
lds
mov
jle
sbb
cwtl
scas
hlt
jmp
sbb
pop
cmp
mov
test
sbb
push
in
dec
test
cmpsb
xchg
cmpsb
push
addr16
adc
fdivr
test
aaa
enter
jge
in
jnp
in
test
add
movswl
xchg
ret
dec
repz
mov
jge
test
push
xor
push
iret
dec
lods
test
or
mov
out
gs
cmpsb
xchg
decb
aam
gs
push
gs
repz
add
aam
push
xchg
push
mov
push
mov
xor
inc
cld
sub
xor
stos
xor
sbb
cmp
mov
scas
add
in
mov
xor
xchg
ss
repz
xchg
dec
pop
push
out
je
xlat
jmp
fldcw
dec
in
out
sahf
or
mov
call
sbbl
aas
leave
mov
cmp
push
mov
jbe
adc
imul
mov
movsl
xchg
jecxz
mov
xor
push
mov
jne
mov
loope
stos
and
add
test
and
ja
pop
adc
dec
in
pop
pop
inc
subl
push
fdivl
mov
xor
inc
rcl
dec
cmp
or
xchg
jne
sub
inc
and
and
push
stc
or
sbbb
nop
mov
xor
and
jbe
dec
iret
mov
adc
pop
imul
pop
in
sahf
push
mov
testl
stos
imul
mov
sahf
sbb
shl
jle
sbb
rorl
les
cli
mov
sub
jmp
movsl
push
xchg
aam
and
dec
sahf
mov
arpl
pusha
pop
aaa
jp
in
xchg
mov
aad
test
out
jp
dec
outsl
mov
inc
aaa
or
or
xor
push
pop
mov
xchg
inc
insl
ja
mov
adc
add
pop
xor
cwtl
xor
sub
push
mov
cld
mov
ret
ds
mov
inc
inc
xor
scas
sarb
and
xchg
push
ja
fisubs
push
je
cld
push
test
fsub
ret
or
in
push
lock
mov
shll
xor
cmc
add
in
mov
xchg
and
mov
das
mov
sahf
aas
dec
pop
aam
mov
out
push
enter
pop
outsb
add
js
aaa
sahf
enter
stos
mov
int
mov
add
ja
iret
addr16
fistpll
fsubs
out
mov
es
xor
into
cmp
in
stos
loope
jbe
fdiv
ljmp
push
lea
pop
pop
dec
cmp
outsl
and
mov
jp
xor
pop
fcoml
add
pushf
add
dec
shl
add
jbe
sbb
dec
lret
push
dec
xchg
push
fcmovnbe
insb
adcl
lahf
int3
adc
sub
idivb
xchg
xor
mul
lcall
sbb
xor
mov
shl
insb
out
loop
and
jbe
xchg
jns
inc
inc
test
mov
jbe
sub
jns
rol
pop
es
mov
out
rorb
aaa
mov
inc
icebp
sar
in
pusha
xor
dec
sub
pop
ret
pop
xlat
rol
mov
stc
xchg
jo
and
jo
or
add
add
loopne
xor
add
jp
and
addr16
push
mov
add
rcr
mov
push
nop
test
jbe
dec
jg
daa
push
xor
jnp
sub
mov
mov
inc
lahf
mov
movsb
hlt
cmp
jp
jle
or
repz
movsb
mov
inc
dec
clc
mov
cwtl
jbe
fistl
cltd
push
cmp
adc
dec
loopne
outsl
sarb
test
push
jg
mov
jae
mov
jne
xchg
pop
mov
push
mov
insl
jl
test
loope
jbe
pop
xchg
cmp
add
push
xchg
je
jmp
dec
roll
push
push
lret
out
in
inc
pushf
push
add
mov
neg
mov
nop
ja
insl
adc
and
test
enter
int3
in
jg
dec
pop
push
jg
cmp
sti
inc
int3
rcrl
mov
repz
insb
lods
outsl
inc
nop
sbb
data16
mov
push
adc
call
ja
shrb
sbb
outsl
lret
pop
adcb
scas
cmp
lahf
ficoml
pminub
push
or
mov
les
adc
add
xchg
sub
pusha
xchg
push
movsl
scas
stc
xchg
jge
and
sbb
rcll
pop
xchg
pop
lahf
in
cmp
adc
jmp
stos
mov
rorb
adc
test
xchg
fmul
sub
lretw
rolb
xor
jmp
dec
dec
xchg
lods
or
cmp
mov
out
testl
insl
add
movl
add
mov
xor
lahf
imul
popa
sub
cmpsb
pop
push
cmpsl
popf
shll
bound
or
adc
jnp
dec
js
jmp
ret
aas
mov
pusha
add
mov
mov
xchg
jae
outsl
push
mov
mov
push
mov
loop
lock
and
jne
test
cmpsb
data16
push
dec
or
sbb
mov
xchg
ret
jmp
loope
lock
stos
pop
in
jo
jbe
out
jbe
test
testl
outsb
jbe
push
clc
jecxz,pt
mov
int
popa
les
data16
mov
stos
jecxz
mov
sbb
pop
and
das
cmpb
imul
and
jo
clc
mov
sub
pop
ljmp
cmp
push
adc
xchg
mov
mov
inc
dec
ficoms
mov
ss
int3
fdivp
subb
pop
movsb
mov
clc
or
ret
rorl
pop
xchg
int3
dec
in
lea
mov
sub
xor
cli
call
cmp
mov
cmpsb
shlb
adcb
fisttpll
add
sbb
loope
jbe
add
das
mov
jo
outsb
mov
pop
sub
lahf
cmp
xor
or
mov
sub
mov
es
repz
sub
push
dec
ljmp
out
mov
rcll
dec
lret
jmp
insb
loop
loopne
jo
int3
lret
mov
push
pop
les
imulb
push
mov
into
popa
dec
dec
ss
out
sbb
mov
sti
repnz
sbb
xchg
call
dec
enter
pop
fwait
je
and
inc
idiv
sbbb
lret
call
dec
adc
sub
rcrb
dec
popa
stos
jmp
dec
outsb
mov
mov
mov
inc
sub
sbb
aaa
pushf
xchg
mov
in
js
clc
adc
add
adc
sub
cmc
mov
lcall
inc
in
mov
ss
jge
fisttpll
test
pop
add
insb
or
push
cmp
xor
test
mov
mov
scas
lods
nop
mov
lea
stos
addr16
and
lods
insb
xchg
mov
mov
jae
imul
shlb
sbb
mov
mov
cmc
push
push
lock
sbb
adc
cli
push
cmpsl
mov
rcl
jg
jmp
jecxz
mov
adc
jb
test
out
push
int
jnp
adc
repz
call
dec
stos
ret
movsb
add
inc
add
clc
popf
js
add
mov
mov
mov
ret
shrb
mov
or
js
xor
or
push
inc
fwait
cltd
mov
adc
in
jb
or
or
cmp
das
int
push
cmpsl
mov
mov
pop
roll
sbb
fdivrs
gs
lret
jge
adc
cld
enter
push
test
aas
in
stc
subb
mov
leave
call
mov
cs
imul
mov
cwtl
xchg
mov
out
js
arpl
ljmp
dec
daa
imul
mov
loope
and
test
inc
mov
movb
shld
repz
jmp
in
inc
sub
mov
movsb
mov
ror
enter
dec
xor
inc
sbb
ss
fdivrl
adc
mov
push
push
fldcw
imul
jp
addr16
jl
push
in
cltd
movsb
cltd
dec
fs
orl
mov
dec
pop
xchg
adc
lods
dec
or
repnz
icebp
das
inc
loope
aas
sub
cmp
test
cmpsb
mov
js
ljmp
mov
cmp
idivb
xor
jnp
add
fidivrl
loop
xchg
push
loope
and
fsubrl
loop
test
push
and
inc
adc
dec
xor
pushf
xor
mov
and
adcl
in
jg
test
xchg
mov
or
orb
cmp
pop
add
sbb
pop
add
adcl
shrd
xchg
sub
andb
in
movsb
fs
push
inc
xchg
loopne
sbb
int
fwait
xchg
pop
loopne
jp
lea
outsl
pop
xchg
andl
test
outsl
into
call
push
out
mov
pop
jge
ljmp
jle
inc
scas
and
loope
les
ror
and
sbb
mov
add
dec
xor
hlt
mov
xchg
push
cwtl
and
stos
data16
sbb
repz
scas
ljmp
mov
test
bound
mov
gs
cmp
out
cmpsb
mov
lea
jmp
mov
mov
ss
jbe
or
pusha
js
cli
arpl
scas
add
add
inc
in
out
mov
mov
popf
xor
cli
daa
mov
xchg
sbb
xchg
das
lock
mov
fwait
addb
pusha
mov
jmp
adc
rcrb
stc
adc
mov
xchg
or
cmp
add
cmpb
cmp
js
xchg
cmpl
add
and
sbb
sarl
jne
inc
ds
mov
inc
cmpb
orb
into
inc
or
mov
icebp
adcb
arpl
not
icebp
das
dec
stc
push
xchg
test
fidivrl
mov
dec
insl
test
fidivs
shll
cltd
and
ja
xchg
test
xor
dec
or
jl
loop
mov
dec
push
repz
ja
jp
pop
add
sub
add
jnp
aas
xchg
pop
cmp
cld
xor
fnstsw
sub
icebp
lea
lock
sbbb
mov
out
sbb
test
bnd
and
lods
sti
ret
sar
push
cmp
pop
cmpps
or
notb
out
movsb
and
pop
dec
sbb
dec
sahf
stc
inc
cmpsb
fiadds
incl
in
sti
lahf
pop
and
pop
inc
stos
add
in
mov
pushf
cmpsb
sbb
ror
leave
dec
sti
and
mov
call
jp
popa
in
dec
jecxz
cmp
jbe
ret
fcomip
or
inc
fwait
icebp
mov
mov
adc
outsb
mov
bound
pop
or
aad
cwtl
movsb
pop
mov
or
xchg
mov
lock
xchg
inc
dec
mov
adc
iret
jae
push
jns
test
les
sbb
jle
sub
int3
jns
or
cmpsl
ja
data16
sub
jno
push
icebp
pop
push
mov
nop
test
call
xchg
addl
xchg
daa
rorb
stos
mov
imul
jmp
jl
push
jge
inc
shll
dec
sahf
nop
int
bound
rorb
test
lock
push
loope
mov
xchg
mov
dec
lret
mov
sub
mov
sbb
jbe
movsl
mov
xlat
movsl
xchg
sbb
mov
inc
repz
scas
sbbb
dec
in
sarb
and
inc
repz
mov
xchg
sub
jmp
mov
mov
mov
push
xor
inc
aam
mov
pop
les
sbb
mov
scas
adc
push
in
jp
rol
jns
aas
or
mov
mov
or
cmc
jl
fwait
repz
iret
xchg
lods
xor
jecxz
cmpsb
enter
aam
in
jmp
adc
jae
add
in
faddl
arpl
inc
inc
das
into
mov
inc
pop
ret
xchg
nop
adc
in
in
mov
nop
gs
mov
mov
xchg
stos
in
in
hlt
push
sub
loopne
stos
cs
aad
insb
jmp
test
stos
xchg
pop
fistl
jns
mov
lret
lret
movsb
adc
or
mov
push
sbb
stos
lock
ss
ret
inc
test
xchg
jae
add
sbb
data16
cmp
gs
movsl
add
ror
movsl
bound
mov
push
sbb
cmp
ljmp
mov
jmp
jmp
ljmp
imull
mov
outsl
or
jnp
inc
add
pushf
bnd
mov
mov
mov
mov
rol
in
push
shl
cmp
add
add
pop
cmpl
or
iret
pop
sbb
mov
pop
mov
mov
fnstcw
sub
jbe
shlb
xor
lods
pop
xor
stos
cmp
push
xchg
jl
test
jmp
ror
test
jp
aad
jbe
or
int
into
idivb
pop
push
xlat
mov
std
jl
jmp
add
arpl
jg
rorb
push
xchg
stos
dec
jmp
addl
inc
adc
push
clc
mov
pop
pop
push
rcrb
ret
jmp
mov
cld
xor
cmp
fnstsw
jne
sub
xorb
nop
icebp
dec
movsb
push
mov
inc
aam
lahf
outsl
popa
insb
pushf
xchg
lcall
lock
inc
loop
aaa
stos
jecxz
aad
cmp
repz
mov
xchg
mov
mov
outsl
pop
xor
fs
dec
dec
popf
add
mov
pop
js
arpl
int
sar
lahf
and
repnz
out
fdivrl
pop
or
nop
jle
clc
std
insb
adc
or
in
mov
and
movsl
mov
pop
dec
ret
test
add
into
fnsave
dec
mov
dec
jno
aaa
fsubs
jns
mov
mov
jmp
mov
sub
insl
lret
add
in
mov
bound
lds
xchg
push
jle
mov
fldt
sarb
dec
fldl
inc
mov
cmpsb
pop
fistps
in
and
xchg
fildl
mov
inc
aaa
inc
mov
mov
mov
outsb
push
sbb
aas
int
mov
arpl
push
dec
push
rorb
notb
and
in
mov
ret
sbb
mov
test
jns
enter
push
stc
jl
loopne
mov
mov
js
mov
stc
in
pop
cli
call
jmp
jp
dec
outsb
adc
inc
cmp
sbb
cmc
xlat
inc
xchg
cwtl
xchg
in
dec
mov
enter
adc
or
nop
mov
mov
cmp
js
inc
inc
jl
jae
sahf
js
or
clc
or
jno
xchg
jns
lock
in
in
cmp
xchg
outsb
aaa
xchg
xchg
pushf
daa
sub
xchg
xor
jb
mov
cwtl
add
mov
ja
incl
mov
xchg
sbb
sub
cwtl
lods
inc
adc
cld
dec
shrb
out
and
inc
mov
add
pop
push
mov
and
mov
cmpsl
jg
and
or
int
pop
das
sbb
scas
xchg
sahf
jmp
ret
addr16
repnz
ret
mov
loop
push
xchg
xchg
call
push
loopne
int3
sbb
mov
rolb
dec
cld
ja
xchg
out
jl
std
repz
xor
jae
stc
cmpsb
fimull
cmpsl
push
arpl
sbb
mov
stos
mov
ret
mov
jecxz
cld
jae
add
xchg
cmpb
roll
loop
shlb
or
xor
push
test
iret
fcoms
std
ffree
jmp
rol
int3
inc
xor
out
insl
sar
fwait
test
out
lea
mov
repz
jp
in
mov
orl
xchg
sarb
pop
out
insb
sbb
mov
sbb
lret
test
mov
xor
testl
pop
sbb
xor
scas
jecxz
sub
daa
cmp
jo
fnsave
iret
push
push
jle
inc
pop
scas
mov
xchg
iret
sbb
and
fnstenv
mov
imul
in
shrb
js
stc
mov
mov
jp
sub
movsl
mov
mov
push
cmp
fldenv
pop
pop
aad
pop
lock
shll
stc
dec
mov
les
enter
gs
jae
icebp
push
mov
test
jne
stos
ret
pop
xor
adc
lret
or
jae
xor
xchg
jo
int3
cmpb
jbe
les
sbb
stc
popa
gs
loopne
mov
inc
cmp
push
xchg
lea
sbb
je
insb
in
mov
cmpsl
lahf
imul
add
in
mov
stc
int3
xchg
lea
je
das
stos
or
adc
and
pop
sar
dec
mov
fwait
imul
jnp
test
xchg
stmxcsr
and
and
repnz
loop
xchg
out
adc
jl
push
adcb
lock
sbb
add
inc
or
jle
jmp
dec
jge
lock
and
sub
xchg
fldenv
sub
ja
mov
loopne
repz
outsl
dec
bound
outsb
lret
sub
test
inc
jo
xchg
sub
xchg
test
in
outsb
ss
stos
js
pusha
xor
fildll
dec
bound
mov
xchg
sbb
imul
out
pop
push
adc
jp
or
pop
push
push
push
mov
in
lods
cmpb
scas
mov
pmulhw
scas
pop
sbb
dec
inc
adc
sub
jns
pushf
push
and
insb
dec
push
test
mov
mov
and
pop
fstps
cs
insl
or
test
nop
mov
fsubs
mov
pushl
sub
subl
test
cwtl
push
mov
xor
out
and
sub
lods
mov
stos
push
xchg
pushf
cmc
mov
push
and
subl
subb
inc
mov
push
jae
xchg
xchg
sbb
rclb
push
adc
in
gs
in
xchg
into
add
fs
rcr
pop
jl
push
push
into
mov
mov
xchg
push
xchg
push
outsl
mov
pop
cmp
mov
push
aad
pusha
or
push
cwtl
adc
cmp
fnstenv
and
lret
test
inc
ljmp
mov
sbb
loop
and
xchg
fdivl
jmp
mov
mov
or
movsb
cmpsl
repnz
in
and
dec
mov
icebp
dec
lret
lds
lcall
mov
xlat
sbb
sub
cli
in
mov
jns
mov
dec
xchg
nop
mov
imul
or
sub
mov
and
mov
imul
dec
lea
add
pop
test
aad
stos
cmpb
mov
scas
jo
shld
out
pusha
test
mov
xorl
pop
xchg
mov
mov
cmp
mov
loope
loope
ljmp
js
lret
jmp
shl
xlat
inc
jmp
inc
push
test
xchg
outsb
stos
add
out
mov
mov
stos
cmp
bound
cld
filds
out
js
insl
or
cmpsb
insl
xor
adc
in
shrb
adc
mov
sbb
lea
ret
dec
test
movl
jge
jbe
and
imul
out
insb
jp
xchg
lret
je
jo
jecxz
sub
push
push
inc
out
testl
insl
ss
std
mov
cwtl
cmpsb
pop
prefetch
push
lock
xor
cmpb
daa
push
enter
cmp
sub
dec
sbb
cmpsb
cmp
inc
cmp
or
dec
loop
jmp
mov
arpl
loop
fimull
mov
movsl
adc
mov
mov
add
mov
arpl
stc
loop
and
rorb
cs
mov
es
sbb
adc
inc
test
xchg
push
lret
test
jns
shl
add
jns
testb
loopne
push
xchg
popf
scas
into
popa
int3
addr16
loop
in
test
sbb
cld
jle
adc
xor
xchg
outsl
add
and
and
xchg
push
mov
xchg
mov
dec
les
fadds
xchg
fistps
pop
push
vmovntps
jo
fsubrp
clc
mov
in
fmul
andb
pushf
shll
loop
data16
fistpl
cli
jecxz
xor
mov
test
jecxz
push
lret
pop
inc
stos
out
mulb
pop
stos
incl
push
popf
bound
xchg
ret
sub
lea
dec
test
fdivs
sub
xor
xchg
cwtl
fldt
cli
lret
lret
xor
ds
ss
mov
ret
jmp
ljmp
pop
mov
fldcw
test
add
adc
sub
leave
int3
test
push
nop
popa
xchg
mov
xchg
xchg
adc
aad
sti
out
cwtl
out
fidivl
pand
in
frstor
jle
mov
fcmove
push
ss
dec
test
push
cmpb
cmp
outsl
cltd
aas
xchg
lock
jmp
push
shll
jbe
dec
jg
ret
add
movsb
fdivr
push
mov
lahf
rcrb
sahf
push
or
outsb
xor
cmp
fs
mov
xchg
std
mov
in
push
test
and
or
test
jo
cmc
and
addr16
xchg
jge
xor
outsl
push
add
mov
ret
mov
cwtl
mov
stc
pushf
out
addb
gs
and
inc
xorb
lahf
adc
fisubl
scas
mov
jns
sbb
dec
sub
mov
int
popa
pushf
add
dec
mov
push
scas
out
aad
sbb
js
mov
ja
in
in
fildll
xorb
jg
stos
cs
lcall
test
jmp
dec
lods
inc
push
movsb
cmpsl
and
push
fcompl
enter
cmc
int3
jge
or
cltd
test
inc
in
inc
fs
jg
jg
dec
sahf
add
mov
inc
rolb
fildl
in
dec
xor
bound
pop
out
add
add
stos
sbb
cld
stc
mov
lods
pop
ljmp
mov
ffreep
sbb
jl
push
and
adc
xor
sahf
xor
mov
cmpl
jbe
mov
inc
and
mov
dec
hlt
mov
ja
mov
out
mov
pop
mov
loop
sahf
loop
pop
fstl
cltd
pop
leave
mov
push
jmp
sbb
mov
fs
sub
sbb
vpminsw
rorb
mov
scas
addr16
dec
outsl
mov
shll
test
mov
xor
test
push
rorb
mov
pop
sbb
mov
cwtl
addl
mov
nop
jns
test
inc
call
andl
int3
mov
xchg
jb
xchg
xchg
lret
imul
xchg
ds
nop
fmull
movsb
push
sbb
das
shll
dec
testl
xchg
cmp
inc
jl
fsts
jg
fwait
push
adc
pop
clc
push
ljmp
mov
out
sub
dec
lahf
lods
dec
in
iret
mov
mov
mov
adc
jecxz
clc
xor
adc
jmp
into
sbbl
imul
or
hlt
inc
adc
xlat
cmc
jno
cmp
sub
push
dec
ret
cmpsl
stos
ret
push
leave
mov
dec
mov
imul
mov
push
push
adc
popf
inc
inc
cld
fmuls
cli
dec
jl
mov
out
test
out
xchg
jnp
iret
inc
shrb
inc
adc
xchg
push
dec
mov
call
sti
adc
scas
cmpl
orb
stos
mov
sub
adc
test
dec
dec
dec
push
sub
xchg
xchg
jg
mov
sahf
pop
orl
push
les
test
add
cmc
and
push
cld
cmp
mov
jecxz
xchg
mov
icebp
push
lock
es
push
xchg
lret
jmp
add
testb
mov
dec
push
mov
add
or
xchg
mov
mov
out
clc
test
loopne
push
cmp
or
xchg
mov
jl
or
mov
xor
scas
daa
mov
lock
mov
clc
mov
cmp
data16
int
cld
negb
lods
sub
dec
mov
mov
stc
pop
push
cmpsl
fildll
mov
mov
jecxz
or
repz
jp
fs
mov
out
push
loope
imulb
imul
jle
xchg
adc
stos
daa
data16
loope
gs
pop
and
and
xchg
pop
sbb
pop
rep
jae
fisttps
sub
sbb
jl
adc
jg
push
aaa
jge
fisubrl
mov
cld
into
fimull
mov
aas
jp
in
sub
repz
adc
pop
gs
inc
call
dec
dec
je
es
mov
in
lock
mov
mov
cmp
aad
rorl
rcr
jl
cmp
pop
fisttpll
inc
divl
rcll
popf
jb
dec
nop
adc
inc
jl
in
jbe
add
mov
pusha
nop
sbb
sub
sbb
pop
mov
sbb
ja
fsubrl
inc
mov
fwait
mov
mov
lods
sbb
push
pop
enter
adc
lret
fadds
fiaddl
mov
inc
jg
addr16
enter
jbe
mov
fucomp
clc
jns
and
test
popa
sbb
int3
xchg
std
int
imull
pop
push
mov
inc
test
movsb
xchg
lods
ss
outsb
das
test
push
loopne
gs
xchg
cmc
sbb
shl
mov
iret
lcall
stos
xor
imul
ss
les
inc
xchg
cld
or
fildll
adc
sbb
ds
lods
loope
push
clc
push
negb
xor
in
sub
mov
addr16
andb
addr16
enter
sti
push
push
inc
movsl
sub
ret
mulb
sub
push
filds
cmp
mov
test
or
cmpb
test
jno
into
pop
shr
out
xchg
cmpsb
mov
add
repnz
dec
dec
mov
xchg
or
enter
aam
cli
les
sbb
lret
shll
dec
or
jp
or
mov
insl
sub
mov
push
das
arpl
fnstsw
cmpsb
cltd
dec
roll
lods
negl
mov
jmp
adc
xor
mov
repz
cmc
lods
xor
sahf
add
jnp
and
ficomps
cmp
jo
cmp
pop
xchg
jmp
push
popf
lcall
in
add
mov
jmp
dec
xor
xor
mov
outsl
inc
xchg
push
je
fwait
scas
aaa
add
lahf
imulb
adc
lock
or
cmc
sbb
inc
mov
fadds
xchg
xchg
ds
push
sub
push
mov
sbb
js
bound
sbb
pop
fadds
cs
mov
xor
inc
sbb
cli
inc
and
jae
movsl
xor
xchg
mov
push
ja
leave
xchg
in
jle
sbb
outsb
test
or
add
outsl
aad
ljmp
ret
mov
jne
or
dec
xchg
andl
or
jnp
push
in
fs
lcall
mov
clc
xor
loopne
pop
xor
ljmp
push
je
cltd
movsb
gs
xchg
les
movsb
xchg
sbbl
call
out
push
test
or
out
adcl
ss
in
mov
cmp
out
addr16
mov
test
std
sbb
arpl
mov
pop
jmp
mov
push
cmpsb
loopne
push
arpl
mov
inc
xor
gs
inc
je
ficoml
popa
xor
outsl
stos
cli
push
cmpsb
push
mov
aam
mov
jnp
addr16
movsl
clc
push
cmpsb
fistpll
scas
outsb
fildll
mov
sub
mov
outsl
in
cmp
dec
int
fadd
jo
repz
mov
xchg
pop
mov
push
dec
hlt
xor
dec
div
fimull
and
cli
xchg
mov
add
mov
xchg
add
jo
lea
test
cmp
psubb
gs
movsb
insl
cmp
mov
add
testb
xchg
mov
xchg
sti
shlb
stos
rcl
gs
insb
adc
data16
lods
xor
mov
cmp
push
or
aad
test
jle
and
or
dec
xor
cmp
cmc
test
mov
inc
sub
push
cmp
mov
out
pusha
mov
mov
push
dec
hlt
cmp
cltd
and
add
xor
adc
or
dec
cmp
sti
lcall
cmp
xchg
filds
outsb
inc
lcall
imul
imul
add
mov
cmpsb
or
mov
cmp
mov
xlat
add
in
adc
or
xchg
loop
pop
jle
scas
or
jo
aad
push
test
cmpsb
mov
mov
xor
xchg
incl
inc
jl
sbb
sbb
jle
repnz
add
mov
sub
push
jns
out
cs
mov
arpl
xchg
nop
mov
les
pop
dec
xchg
lea
pushf
add
mov
push
lret
enter
adc
cmc
mov
cs
xchg
or
sti
test
xchg
mov
movsb
test
les
or
gs
push
xchg
push
mov
subb
pop
in
rcr
push
mov
mov
jne
insl
jge
cmpsl
push
fisttpll
inc
dec
mov
xchg
call
add
lret
ja
ja
push
cli
add
stc
cmpsl
aam
or
pusha
xor
jge
mov
outsb
fldenv
adc
int
xor
out
push
sarb
pop
or
push
lcall
jbe
push
aam
xchg
mov
jmp
mov
push
dec
cwtl
xchg
mov
cmp
in
inc
imul
mov
out
movsb
lea
std
mov
mov
jle
pop
rol
mov
pop
and
loop
sar
in
in
in
adc
mov
push
mov
push
cmp
cmpl
dec
pop
jo
push
fs
outsl
inc
xlat
push
test
test
sti
repz
xchg
push
movsl
gs
mov
inc
daa
xlat
mov
out
xchg
mov
xlat
loop
jecxz
arpl
dec
dec
inc
es
leave
xchg
push
stos
sub
int3
jmp
bnd
repnz
out
scas
lahf
xchg
pop
jb
mov
mov
mov
data16
ljmp
mov
pop
scas
cs
jno
das
insl
subb
xchg
xchg
mov
pushf
loopne
in
lods
lods
fmull
in
rcr
jecxz
jns
bound
push
enter
xchg
out
ficompl
cmp
bound
bound
xor
cmpsl
aaa
mov
mov
scas
int3
std
or
insb
mov
add
mov
mov
or
inc
cld
icebp
outsb
sbb
mov
stos
xchg
pop
add
jge
xchg
xchg
push
adc
test
in
es
fbld
xchg
jg
xchg
pop
int3
dec
ja
gs
jp
sub
in
mov
js
xchg
xor
hlt
jl
je
loop
xchg
push
sbb
std
jp
cltd
and
cmpsl
mov
stos
adc
aad
dec
fisubrl
lods
pop
jecxz
push
push
insl
es
rcll
pop
lock
add
test
mov
lret
push
pop
mov
test
adc
fcmovbe
test
mov
loopne
stc
aaa
mov
or
sbb
mov
cs
mov
jmp
fwait
cli
scas
mov
idivl
mov
leave
fsubrl
fs
adc
fiadds
mov
aam
add
mov
push
dec
sub
jp
sbb
in
push
xchg
mov
movsb
ret
jbe
cld
push
push
lahf
xchg
or
or
push
insl
enter
out
jp
pop
cmpsb
push
adc
clc
or
dec
out
aam
in
jns
jg
fildll
dec
icebp
lods
xor
adc
scas
add
sahf
int
xlat
loop
xchg
fstpt
pop
sahf
or
lret
es
repnz
cmpsb
outsl
mov
scas
loope
pop
popf
stc
scas
lea
mov
enter
stos
rolb
sub
push
dec
dec
stos
pop
stc
mov
mov
mov
cmc
shrb
jle
aaa
cmc
test
inc
insb
leave
scas
fldt
roll
iret
insl
fiadds
mov
xor
and
and
push
shlb
mov
adc
mov
mov
push
mov
int
sbb
inc
xchg
out
mov
mov
popa
or
push
popf
and
or
andl
cli
push
stc
sub
pop
xchg
cwtl
lret
cmp
lcall
adc
adc
mov
inc
jno
sub
mov
mov
enter
stos
js
rcll
sub
or
mov
test
vsubps
inc
cld
in
mov
sub
push
mov
mov
loope
sarl
mov
mov
shr
les
sbb
mov
fwait
adc
mov
jbe
cmpsl
into
outsb
rcrb
add
arpl
outsl
in
call
fs
jl
xchg
add
cmc
mov
jae
sar
js
sbb
or
inc
mov
in
icebp
orb
sbb
adc
push
cmc
mov
or
mov
pop
push
sarl
fimuls
xchg
dec
cli
jae
pop
mov
mov
xchg
mov
out
jle
repz
push
aam
mov
pop
loope
scas
pop
cld
mov
pop
test
insb
pop
jmp
pop
nop
sarl
mov
out
inc
push
shrb
rcr
sub
fisubrs
dec
repnz
push
repnz
push
repnz
push
repnz
sub
shrb
pop
repnz
pop
repnz
pop
repnz
sub
daa
repnz
and
repnz
sub
repnz
repnz
sub
movsl
sub
int3
pop
jp
adcb
mov
or
test
ficoml
push
std
fs
into
jl
adc
repnz
dec
mov
inc
mov
xor
repz
out
push
xchg
xchg
pop
int3
push
fbstp
lods
xchg
jl
gs
in
jmp
add
mov
test
xor
nop
arpl
push
in
sti
xchg
pop
les
daa
lods
in
arpl
call
adc
gs
arpl
mov
sbbb
js
mov
sbb
stos
insb
js
inc
in
mov
inc
adc
andb
jecxz
pop
dec
addb
cmp
push
jmp
addr16
scas
xor
pushf
arpl
fldt
sbbb
pushf
ds
sub
inc
icebp
lods
inc
bound
in
scas
adc
test
mov
jle
add
and
icebp
mov
inc
icebp
adcl
enter
out
cmpsl
adc
xchg
dec
cmp
mov
scas
je
int
sbb
cli
push
push
cs
mov
pop
rcr
mov
jne
dec
xor
or
dec
mov
insl
and
into
push
mov
in
cltd
sbb
sub
adc
pop
cs
scas
pop
loop
out
enter
jp
jl
mov
enter
popa
or
mov
jl
movsl
mov
and
shlb
mov
test
bound
mov
sbb
leave
lods
test
mov
xlat
mov
cmpsl
lret
aas
mov
repz
cmc
out
outsb
inc
sub
or
outsl
leave
and
andb
std
arpl
or
scas
in
and
std
lahf
in
add
sbb
inc
leave
sub
adc
sbb
into
push
arpl
in
in
stos
enter
adc
xchg
mov
out
mov
jecxz
imul
jmp
mov
lods
je
or
test
js
mov
lods
sbb
cmc
or
mov
mov
stos
adc
fsubrl
mov
mov
xchg
or
lods
mov
insb
inc
test
mov
sub
push
cmc
or
mov
loop
adc
add
mov
ret
cli
std
cmp
jmp
push
adc
adc
xchg
es
cmp
jb
pop
push
inc
sub
adc
xchg
push
add
iret
cld
mov
lret
mov
repnz
in
mov
enter
pop
adc
js
and
push
pushf
jo
cmp
dec
push
xor
in
fisttpl
mov
mov
je
cmp
push
mov
in
lock
arpl
mov
push
leave
mov
outsb
add
mov
xor
out
gs
cmpsb
dec
js
icebp
cmp
pop
testl
lcall
xor
int
adc
std
inc
stos
sbb
test
jp
hlt
and
xchg
in
pushf
cli
xchg
xor
mov
jae
mov
push
test
popa
mov
out
mov
in
popf
pop
lcall
mov
jnp
sahf
sahf
adc
sahf
xchg
xor
cmc
sub
repnz
and
ljmp
xchg
mov
mov
hlt
in
or
clc
rorb
jo
lock
push
lock
lock
inc
ds
cmp
or
pop
jge
jmp
inc
and
pop
inc
es
pop
inc
and
xchg
clc
lods
adc
ljmp
mov
int3
stos
outsb
jge
gs
adc
cs
add
mov
xchg
push
xchg
in
inc
push
enter
pop
or
and
jne
lea
test
jg
ljmp
adc
sub
fisubl
mov
mov
movsb
mov
jo
testb
stos
shlb
bound
or
cmpsb
and
insl
xchg
call
and
andb
or
mov
mov
lods
aas
pop
ja
leave
mov
push
xchg
sti
insl
cmpb
jg
sti
sub
std
clc
into
in
mov
sbb
xchg
imul
cmp
movsb
dec
xor
fdivs
jmp
add
and
sbb
push
pop
cwtl
je
in
mov
or
pop
jl
inc
mov
mov
jl
push
les
cmovne
mov
sub
popf
cli
push
sub
jg
cmp
mov
inc
mov
iret
xchg
mov
cmp
fildl
mov
pusha
cs
in
mov
shl
mov
sub
pushf
push
mov
mov
mov
hlt
dec
push
push
sbb
add
andb
mov
dec
test
test
loope
xor
push
mov
cmpsl
in
lods
mov
adc
add
push
add
mov
clc
insl
xchg
test
pop
adc
mov
xchg
cmp
movsb
cld
enter
fidivl
cmp
sub
inc
ljmp
mov
hlt
sub
lock
push
cmp
pop
sub
mov
div
jl
dec
loop
popf
jbe
lret
cli
loope
jno
cltd
add
push
and
lds
test
pmulhw
adc
sub
int
lock
fildll
in
adc
insl
outsb
xorb
ja
or
leave
jp
mov
subl
jmp
mov
push
sahf
test
ljmp
add
mov
stos
fistps
xor
and
repnz
xchg
mov
cmp
xchg
mov
and
movsb
hlt
mov
lea
sti
inc
pop
lods
lds
fwait
arpl
jne
lcall
inc
dec
scas
xorb
enter
sti
inc
dec
add
mov
cmp
jle
adc
jl
imul
inc
sar
dec
addb
stos
sbb
jecxz
lods
pop
adc
mov
sbb
shrl
mov
lret
insb
enter
andb
test
in
mov
xchg
xchg
in
call
ja
loope
lods
adc
ljmp
insl
push
pusha
pop
cld
push
mov
bound
lods
test
mov
es
idivb
and
sub
std
mov
mov
adc
jno
aaa
sti
popf
jge
and
jp
ret
sti
xchg
push
mov
dec
xorl
cmp
push
nop
nop
push
mov
aad
or
xchg
xor
mov
lcall
neg
cmp
mov
adc
div
lods
mov
idiv
jle
popa
test
test
or
xchg
test
mov
lea
pop
fcomps
imul
roll
mov
add
dec
mov
cmp
jbe
mov
pop
inc
cmp
mov
mov
mov
fistl
jl
inc
inc
pop
hlt
push
rep
cmp
enter
in
jnp
subb
or
out
mov
sbb
enter
in
int
cmp
in
test
movsl
mov
pusha
xchg
mov
hlt
lea
mov
loope
ss
add
ss
xchg
jle
or
sahf
push
push
push
mov
out
fs
push
xchg
out
cltd
and
adc
pop
test
movsb
xchg
pop
and
lds
sbb
lods
out
dec
fldcw
mov
std
outsl
mov
add
out
jne
dec
aaa
clc
cltd
inc
es
ds
mov
ja
inc
jns
cld
xchg
sbb
out
xchg
dec
into
mov
lock
or
mov
and
dec
insb
mov
pop
data16
into
xor
orb
test
cwtl
or
dec
rcrb
ds
jbe
push
dec
sti
sbb
ljmp
lfs
std
and
mov
lret
mov
es
sti
fs
dec
jbe
push
pusha
in
in
mov
cltd
enter
aaa
scas
dec
inc
mov
mov
out
mov
enter
js
mov
cld
mov
call
xchg
jg
mov
xor
xchg
inc
mov
test
xchg
push
iret
push
pusha
std
fmull
jae
addr16
pop
scas
cld
dec
mov
push
sub
sub
jecxz
xchg
movb
or
pop
notl
xor
cmp
jmp
mov
mov
xchg
pusha
movl
pushf
mov
mov
and
or
xchg
xor
cmp
in
loop
das
lods
mov
xchg
jmp
aad
and
mov
cmpl
and
movsb
fsub
mov
push
xlat
add
cltd
lahf
popa
clc
mov
lea
fcomps
mov
mov
sbb
fwait
setns
pop
int
pop
mov
or
loop,pt
scas
or
xchg
xor
pop
imul
fs
push
and
int3
insl
subb
xchg
bound
jne
imul
or
stos
fsubs
dec
outsb
pop
mov
lods
pop
or
imul
add
shlb
or
xchg
cltd
outsl
cltd
in
jp
xchg
mov
jle
cwtl
ljmp
daa
cli
cmp
lahf
xchg
inc
jae
xchg
out
mov
push
movsb
add
lds
loopne
push
mov
push
outsb
push
push
or
pop
out
dec
mov
mov
dec
inc
push
cmpsl
add
sti
fimuls
les
into
frndint
push
dec
or
or
sbb
xor
jns
iret
mov
push
insb
in
loope
xchg
xor
ds
into
jmp
leave
xor
pop
mov
fmuls
aas
fnstenv
push
mov
cld
xchg
stc
add
pop
adc
iret
dec
dec
jmp
nopl
idivb
xor
xchg
mov
pusha
sarl
jnp
xchg
jmp
mov
sub
lcall
jbe
rcr
inc
xor
push
insb
call
cltd
shlb
cmp
insl
dec
arpl
pop
inc
je
or
scas
mov
lret
fimull
ljmp
loopne
push
les
and
jmp
leave
out
add
pop
aaa
daa
fisubrs
les
in
inc
push
popa
lods
inc
test
xchg
add
sub
cmpsb
and
mov
fdivrp
arpl
lahf
stc
adc
test
xchg
and
test
jge
adc
lock
dec
loopne
lea
pushf
mov
addr16
xchg
jo
aaa
popa
repnz
mov
add
rorb
push
mov
loop
xlat
in
and
mov
inc
ds
in
push
sbb
push
xchg
fidivl
cmc
pop
gs
and
out
arpl
movsl
outsb
add
push
sub
xchg
add
andb
adc
dec
cmc
popa
pop
xor
pop
cltd
stc
popf
stos
fsubrl
ljmp
dec
out
sub
xchg
test
dec
bound
fstps
dec
cmp
loopne
mov
fldl
movsl
push
inc
negl
test
jns
into
cwtl
cmp
mov
push
mov
push
mov
adc
lahf
jmpw
fmuls
inc
les
fisubrs
xchg
push
sti
adc
mov
sub
or
lds
stos
pusha
xchg
push
data16
pop
sub
dec
outsb
shrb
pop
or
mov
push
mov
and
inc
xor
jge
fcmovu
aam
pop
jo
mov
sub
shr
jecxz
js
lods
dec
push
dec
movsl
mov
jmp
popa
hlt
test
imul
mov
push
mov
out
pop
inc
cmp
jg
daa
xchg
xor
jge
adc
cld
xchg
fwait
scas
js
lret
cmp
das
lret
ljmp
popa
inc
adc
adc
popa
clc
pop
and
lds
sti
loopne
sarb
lahf
push
outsb
mov
int3
scas
mov
scas
in
popa
jg
daa
pop
dec
mov
sbb
mov
hlt
and
fisubrl
cmp
lods
xchg
shll
ret
jge
fwait
scas
lahf
inc
dec
jne
inc
repz
loopne
cmpsb
lahf
dec
insl
es
xchg
xor
outsl
data16
ss
mov
xchg
fldl
out
loopne
insb
iret
stos
mov
push
fs
ja
inc
lcall
gs
or
add
int3
dec
xchg
xor
movsl
adc
or
sub
lods
sbb
push
xor
mov
out
int
sbb
lock
jp
scas
push
jg
popa
in
jae
mov
addr16
les
in
lds
cmc
aam
movsb
xor
dec
add
idivb
jo
xlat
add
lods
push
or
les
mov
dec
lea
or
scas
cmp
lcall
out
add
cmp
sub
fbld
cmpsb
or
and
sub
inc
and
push
fcomip
mov
jnp
push
xor
inc
outsb
pusha
inc
mov
lods
sbb
scas
and
add
jno
xor
jbe
das
sub
adcb
call
jo
out
repnz
xchg
jl
mov
xchg
int3
je
stos
enter
xlat
push
mov
xchg
mov
sub
xchg
outsb
mov
inc
sub
ja
pop
adc
mov
stos
dec
cmp
push
mov
into
icebp
in
data16
push
cld
cmp
jge
shl
push
or
cmp
fnstsw
mov
lods
push
sub
ss
repnz
cmc
pop
lock
pusha
repz
mov
icebp
mov
sub
loopne
push
repz
dec
popl
insb
xchg
push
cmp
das
bound
or
in
add
pop
mov
data16
movsl
cmp
in
cmpsl
push
insl
sbb
xchg
mov
std
and
lahf
xchg
test
imul
lretw
les
or
scas
sub
cmpsl
lock
jl
nop
add
cmpsb
lret
pop
jle
xchg
mov
xor
je
imul
int3
andl
ret
stc
ret
aad
bound
xchg
mov
dec
add
mov
mov
xor
sub
cwtl
mov
add
fidivrs
ficoml
loope
repnz
jb
pop
insl
movsl
pop
jno
hlt
repz
out
loopne
in
jo
push
mov
inc
jl
jbe
mov
repnz
icebp
push
inc
ljmp
pop
loopne
cmpsl
test
notb
dec
xor
in
nop
pop
mov
aam
sti
bound
enter
mov
dec
and
rcr
mov
in
fistpll
pop
ret
add
stos
mov
repnz
push
mov
mov
testb
ljmp
dec
bound
jge
mov
mov
xor
lahf
pop
out
jnp
push
xor
cmpsl
mov
xchg
xchg
rorl
stos
addr16
xor
adc
dec
fistps
adc
imul
dec
mov
push
jp
stc
mov
mov
iret
jmp
mov
ret
jnp
sub
stc
inc
mov
sub
sub
inc
mov
clc
cmpl
imul
lahf
pop
in
jae
xchg
jmp
jbe
call
adc
nop
scas
mov
adc
dec
fxch
add
arpl
mov
inc
test
rcrb
sub
jl
lods
pop
adc
repnz
push
or
inc
ret
lahf
pusha
mov
cmpxchg
bound
les
adc
lea
aad
lods
bound
xchg
and
inc
cld
jne
mov
lock
out
loop
xchg
out
call
fdecstp
lret
cmc
pushf
xorl
sub
leave
jg
xrelease
testb
in
add
xchg
and
add
cwtl
repnz
ljmp
popa
lock
mov
pushf
inc
fsubl
movsl
mov
dec
andps
dec
dec
je
shlb
sbbb
cli
fisttpl
lahf
popf
pop
movsb
sub
andl
ljmp
std
gs
xchg
mov
out
pop
lods
leave
insl
repz
xor
inc
push
lahf
mov
bound
or
hlt
ja
or
das
sti
dec
mov
push
stc
mov
repnz
in
push
mov
mov
ljmp
lods
jp
push
xchg
xor
xchg
jle
adc
clc
js
adc
fimuls
iret
xchg
push
pushf
lahf
inc
loope
jp
loopne
ret
cmpsl
inc
pop
aam
dec
repnz
loope
jne
loopne
jecxz
jae
aaa
neg
popa
mov
xchg
push
rcl
repnz
cmpsl
mov
pop
mov
repnz
dec
sbb
push
adc
stos
cld
call
xor
and
mov
cmp
cmp
inc
jo
xchg
mov
xchg
xchg
out
jb
xor
clc
sub
or
pop
inc
jae
ss
shlb
and
lds
scas
lea
dec
clc
or
lock
inc
inc
sbb
daa
jl
mov
xor
inc
popl
in
push
xchg
ret
loop
notb
mov
or
or
xor
adc
inc
cmp
jne
ss
arpl
stos
xchg
js
or
into
mov
add
mov
xor
push
shll
scas
jecxz
add
sub
xchg
xchg
mov
xor
iret
les
dec
out
adcl
cltd
mulb
addr16
fnsave
cmpsb
stos
js
cltd
or
cltd
add
dec
cmc
sub
mov
mov
push
jmp
stc
cmpb
pop
push
call
push
or
loope
call
fistps
pop
out
arpl
test
mov
in
mov
aad
fs
js
pushf
mov
das
dec
mov
mov
enter
fst
cmp
neg
and
push
dec
jno
or
pusha
xchg
xchg
fdivrs
jmp
mov
rclb
mov
in
adc
xchg
ds
jle
pop
add
sub
cwtl
repz
fidivrs
ds
jmp
adc
dec
jne
jmp
inc
ja
dec
or
lahf
dec
xor
fsubrs
mov
stos
adc
ret
outsl
sub
rcrl
mov
in
dec
add
andl
adc
dec
adc
jmp
inc
lahf
ret
ja
cltd
cli
xchg
jge
jae
jmp
or
cmp
out
pop
dec
pop
das
dec
cltd
pop
stc
adc
sbb
outsl
cltd
jl
je
jmp
or
and
xchg
cmc
dec
dec
push
lcall
loope
subl
lods
pop
ret
mov
ljmp
rcr
xchg
mov
loopne
cmpb
loopne
imul
out
xchg
adc
jp
lods
jo
push
scas
jmp
movsl
mov
adc
iret
add
or
es
mov
ja
or
fs
fs
mov
mov
imul
xor
fdivl
sub
sub
into
outsb
add
mov
sub
add
xchg
dec
out
jl
mov
add
add
pusha
ja
out
xchg
xor
std
or
lret
loop
jae
insb
jb
xchg
clc
sbb
push
push
add
lods
mov
jp
cld
pushf
cwtl
xlat
sbb
orb
pop
sub
das
dec
mov
lret
sar
insb
sbb
decl
sahf
dec
shrb
insb
mov
ret
insl
sbb
mov
dec
mov
mov
jnp
pop
add
adc
clc
xchg
cltd
jmp
dec
and
mov
cmp
movzbl
ret
and
fidivrl
lahf
pop
iret
hlt
call
sbb
mov
xchg
loop
dec
sbb
mov
hlt
bswap
fsubr
testb
test
cmp
test
sbb
outsl
cltd
xor
xchg
inc
jge
xor
das
pop
jmp
mov
sub
loop
mov
ljmp
popl
jmp
lea
test
jne
into
aaa
mov
mov
imul
adc
adc
add
xor
loopne
ja
clc
js,pt
push
sbb
mov
jle
out
popa
insl
aam
jcxz
aaa
lds
mov
lret
popa
mov
ljmp
xorb
ljmp
jle
adc
sbb
fdiv
add
jo
push
pop
enter
jle
sbb
in
and
enter
or
mov
jno
aas
std
inc
cwtl
call
outsl
in
mov
shrl
inc
clc
cmp
push
push
jbe
jmp
sbb
out
mov
dec
pusha
jno
mov
xor
sbb
mov
pop
sbb
push
insb
bound
iret
push
adc
xchg
scas
mov
fsubl
pop
int
inc
and
xchg
lret
rcll
pusha
xlat
mov
sarb
sbb
or
pop
jecxz
rol
mov
gs
dec
push
or
push
insb
mov
daa
das
inc
idivl
jp
lahf
cs
fcompl
lods
mov
enter
sbb
jno
push
ret
les
rorl
movsb
mov
loop
cmc
push
ja
jg
scas
mov
push
xchg
out
jns
add
push
sbb
and
int
call
xchg
adc
icebp
mov
sub
sbb
std
mov
into
jmp
mov
cltd
push
cli
cmp
jbe
jp
dec
fwait
mov
fdecstp
jecxz
stc
xorl
mov
push
xchg
xchg
dec
std
sub
cmp
lock
mov
and
repz
aaa
sub
in
mov
inc
enter
sub
fs
popl
pop
cwtl
jecxz
psadbw
mov
scas
xchg
mov
mov
sub
mov
adc
outsb
mov
jb
bound
lods
ljmp
adc
mov
lods
stos
lret
xchg
push
dec
cld
sbb
jne
or
rcl
jbe
test
sbb
xor
sbb
aaa
xchg
push
dec
mov
pop
cmp
insb
data16
out
push
jb
clc
sbb
ret
xor
xchg
sbbb
xchg
cmp
mov
gs
dec
jnp
mov
mov
fnstsw
ret
pop
mov
cmp
push
bound
test
stos
jmp
stc
mov
out
shll
movsl
mov
shlb
insl
fstl
bound
or
xchg
or
and
rorb
mov
push
inc
fstpl
adc
jecxz
pushf
les
sub
cltd
push
push
shll
roll
cltd
mov
sarl
xchg
mov
xchg
pop
jns
push
repz
fimuls
faddl
test
cld
out
dec
inc
cmp
popf
test
sub
lcall
push
stos
cwtl
mov
adc
mov
push
push
inc
call
mov
inc
fldenv
lea
jecxz
bound
insb
xchg
jmp
jle
hlt
mov
in
mov
mov
inc
add
sub
inc
mov
pop
mov
xorl
imul
xor
lret
jb
test
jno
cs
push
into
add
lods
mov
loopne
lcall
in
pusha
sbb
push
cmp
pop
repnz
aas
lock
inc
out
into
jle
scas
mov
push
mov
add
fsubs
notb
lahf
inc
into
inc
jg
test
sub
mov
sub
ret
out
insb
pop
and
add
adc
push
cmpsl
push
dec
and
push
dec
test
pop
jle
rorb
fsub
mov
dec
xchg
jle
sbb
mov
je
stos
push
mov
inc
mov
rorb
mov
xchg
fsubrl
cwtl
jl
jmp
scas
lret
fists
cltd
and
ficompl
iret
jmp
dec
gs
add
test
adc
aam
jp
fistps
sub
inc
stos
mov
sub
sub
or
xchg
gs
inc
rclb
ret
icebp
imul
sete
mov
hlt
mov
mov
fidivs
xor
dec
sti
dec
sub
xchg
int
mov
mov
fldl
dec
fwait
jp
or
mov
lock
lret
adc
adc
pop
mov
int3
xchg
adc
sbbl
dec
repz
add
aaa
sbb
loopne
jg
adc
sar
lahf
test
xchg
mov
mov
mov
int
inc
push
cmp
movsb
push
dec
cmp
inc
std
inc
cs
inc
sbb
pop
add
test
fldt
mov
sub
fisttpll
pop
and
adcl
and
xchg
dec
cmp
push
push
cmpsl
ja
or
std
movlps
dec
lods
popa
pop
xor
xor
xchg
out
stc
jge
pushf
imul
leave
ljmp
outsl
arpl
ja
ss
inc
xor
sbb
rorl
inc
int3
push
daa
jmp
in
cmp
cli
rcr
faddl
ja
pop
cmp
cli
pop
in
loop
sub
mov
aas
stos
mov
imul
outsl
incb
push
pop
outsl
adc
cmp
push
pop
negb
or
adc
lahf
ret
rorb
xchg
lea
js
add
jbe
je
mov
cmpb
push
mov
ljmp
mov
dec
out
cwtl
or
add
in
outsb
mov
icebp
es
push
jbe
sbbl
mov
out
xchg
hlt
rcll
xchg
xlat
dec
mov
out
scas
das
scas
icebp
jns
jg
out
icebp
inc
jne
cmp
and
mov
pusha
xlat
sahf
aaa
mov
jecxz
jp
pop
pop
cmpsl
mov
push
pushf
mov
mov
fstl
cmp
hlt
bound
add
lds
jmp
mov
out
stc
sub
pop
and
addr16
iret
clc
cmp
mov
xchg
sbb
jl
push
in
in
sbbb
push
in
push
into
or
adc
mov
lds
mov
arpl
scas
and
das
lock
aad
mov
jo
shrl
sub
rdpmc
mov
pop
adc
sahf
mov
in
out
push
xor
mov
pop
mov
push
add
jecxz
ja
clc
mov
dec
xlat
arpl
inc
loopne
mov
push
das
rcrb
jmp
xchg
inc
push
outsl
cltd
loope
lock
mov
outsb
push
cmp
ljmp
dec
push
cmp
dec
jmp
movsb
cli
stos
push
mov
andb
xchg
xchg
fsubl
je
enter
jge
and
cvtpi2ps
stos
jl
sub
orb
cmc
pusha
sub
ds
mov
filds
into
mov
adc
imul
mov
adc
lret
lahf
in
mov
sub
or
mov
aas
pop
adc
jle
mov
jp
mov
std
pop
mov
xchg
stos
test
mov
lcall
cmc
pusha
cmpsl
inc
push
mov
mov
adc
mov
xchg
sub
mov
leave
push
mov
bound
in
in
addr16
xor
js
les
lods
inc
cld
pushf
imul
loop
jl
add
bound
xchg
xor
movsb
xchg
out
xor
out
cmp
cwtl
mov
adc
test
pusha
push
xchg
cld
mov
cld
shll
or
or
fcomp
addr16
jl
push
xorl
mov
std
adc
inc
daa
xor
xor
sub
mov
push
pop
mov
sbb
in
jge
xor
xchg
lret
xor
pop
test
adc
adc
jmp
scas
add
out
lds
pop
rorl
movsl
mov
pop
fstp
loope
push
int3
push
adc
in
je
pop
stc
push
scas
fsqrt
out
decl
negl
sub
into
sub
cmpl
push
jne
popf
xchg
mov
out
loopw
xchg
adc
test
xor
xchg
out
mov
jp
sbb
pop
pop
jl
test
pop
sbb
mov
xchg
out
fs
lock
stos
mov
add
push
lds
xor
lcall
and
mov
enter
test
scas
dec
xchg
movsl
lods
add
das
lea
aam
dec
lea
movb
and
fcompl
movsb
pop
stos
sbb
scas
es
mov
xchg
adc
pop
sub
jge
test
test
cli
mov
xlat
int3
xlat
pop
or
jo
xchg
stos
adc
fstl
lret
sahf
and
dec
inc
dec
adc
pop
call
jns
scas
jnp
lea
addr16
jecxz
bound
popa
loop
push
push
jbe
std
aad
into
or
sbb
mov
movsl
cmovle
fistps
pushf
fmulp
adc
push
xor
ret
jae
mov
mov
cmpb
into
pop
fs
sub
fs
cli
add
outsl
sbb
mov
inc
arpl
out
test
mov
daa
xchg
lods
aad
or
pop
xchg
cwtl
mov
movsl
adc
push
cs
xchg
dec
in
loopne
mov
sahf
or
icebp
das
sbb
lahf
testl
jmp
mov
sub
into
stos
aas
sti
sub
call
popf
cmp
add
insb
pop
jo
xor
push
and
add
push
mov
jb
jns
push
bound
pop
int
sub
jno
and
js
idivb
or
cmc
push
andb
jbe
cli
faddl
stos
and
dec
in
lret
sahf
addl
imul
leave
lret
mov
fisubl
movsb
popw
rcrl
lcall
loop
jmp
movsl
outsb
mov
push
popf
popf
mov
in
cli
mov
mov
jbe
enter
fists
aam
jg
mov
sbb
pusha
in
shr
sub
movsl
decl
fisubs
mov
xor
test
mov
dec
xor
and
xor
pop
pop
mov
jge
or
mov
jb
data16
pusha
out
dec
xchg
push
adc
lock
pushf
std
jno
pop
cwtl
xor
das
fnstsw
jge
in
arpl
fisttps
cs
repz
mov
aas
and
xor
jno
jo
adc
scas
adc
jp
dec
lea
add
and
dec
outsb
leave
inc
xor
mov
shl
aad
xchg
lock
sahf
xchg
or
or
mov
call
leave
ja
mov
jecxz
xlat
cmpsl
or
sbb
sub
jge
inc
test
loopne
adc
lahf
xchg
inc
cmc
insb
jbe
les
mov
into
pop
movsb
adc
test
jnp
sub
pop
mov
sub
mov
cmpsl
sub
push
pushf
adc
adc
or
int
lret
and
push
shrb
outsb
mov
std
or
xchg
fstl
in
nop
stos
push
test
add
jo
cmp
inc
lahf
pop
adcb
sub
stc
int3
ljmp
and
in
icebp
insl
xchg
sahf
pop
xchg
in
fiadds
mov
loope
je
xor
xor
adc
iret
add
jle
rorb
mov
int
loopne
pushf
mov
inc
dec
mov
push
add
or
and
call
jbe
push
jno
mov
into
xchg
cmp
xchg
cmp
dec
jmp
mov
test
fs
cs
notl
jb
pop
add
stos
cmp
mov
inc
pop
movsl
scas
das
sub
es
mov
push
negb
cmp
clc
push
cs
lds
ja
xchg
and
push
lret
mov
push
pusha
out
push
cmp
adc
lahf
ljmp
div
test
daa
in
ret
pop
add
mov
loop
mov
les
mov
mov
jl
xchg
insb
popf
sub
jbe
inc
std
rdtsc
iret
out
fiadds
pop
fisubl
adc
jb
stos
jecxz
dec
dec
or
adc
push
gs
loope
xchg
scas
xchg
test
in
sbb
xchg
jg
sub
xchg
enter
mov
sbb
or
add
ret
fcoml
and
repnz
fs
inc
push
inc
cli
xchg
xor
fwait
out
xchg
dec
or
arpl
lods
jmp
imul
leave
rcl
shlb
pop
lods
jbe
mov
add
push
aam
pop
out
stos
and
stos
pop
clc
hlt
and
push
test
mov
enter
pushf
mov
sub
jnp
bound
test
jb
xchg
insb
mov
sarl
pop
call
sbb
call
mov
add
jb
aas
out
adcl
dec
push
push
dec
mov
fcoml
jp
mov
dec
idiv
add
sbb
clc
cmp
xor
inc
fcompl
cmp
mov
cmc
ljmp
mov
cmp
and
fdivl
push
add
mov
xor
in
sbb
push
or
cltd
and
jge
and
mov
or
mov
in
stc
pop
pop
xlat
xchg
sub
scas
mov
pop
mov
mov
cwtl
jnp
ljmp
sbb
jge
jbe
fsubrl
loop
lret
roll
mov
xchg
into
push
inc
mov
mov
clc
mov
or
cmp
push
rolb
or
pop
data16
or
jnp
gs
xor
addr16
leave
imul
shl
stos
mov
dec
inc
jle
sub
cmpsb
sahf
add
pop
mov
dec
cli
sbb
jnp
xchg
xchg
and
clc
pushf
outsl
mov
and
jle
and
out
push
jne
sub
mov
orb
stos
or
mov
aad
inc
out
aaa
adc
test
mov
xor
sbb
dec
mov
sbb
push
fnstsw
mov
scas
leave
or
xchg
sti
scas
mov
fwait
loope
ljmp
test
js
lods
push
push
mov
ja
push
in
bnd
pop
es
fmul
push
xchg
mov
xchg
or
sub
fs
push
std
repz
in
mov
fstp
sti
hlt
inc
xchg
xchg
mov
fucomip
rolb
add
jae
xor
sbb
pop
push
div
mov
adc
out
xor
mov
dec
lods
pop
or
clc
lahf
shlb
pusha
scas
fistpl
fists
hlt
mov
sub
xor
insb
xchg
lret
decb
neg
xor
int
int
push
std
outsl
std
rcrl
cs
les
cmp
fcomi
ja
in
jl
arpl
sub
cwtl
cmpsb
push
imull
in
movsl
mov
jecxz
push
pusha
std
jo
adc
mov
mov
outsl
cmp
sub
je
notl
dec
js
test
dec
loop
pop
into
and
js
daa
mov
out
insl
jo
in
pop
or
push
in
sbb
out
fs
pop
xchg
dec
sbb
mov
mov
mov
outsl
add
push
or
cmpsb
aam
xchg
and
push
cmp
in
hlt
out
inc
mov
ret
add
jnp
xor
xor
sbb
std
mov
inc
fdivrs
xor
lret
mov
and
mov
mov
cld
repz
stos
int3
in
dec
mov
xchg
mov
adc
aad
adc
lahf
std
lds
fdivs
sarb
xor
adc
cmp
push
dec
and
in
jp
insb
fcmovnu
decl
stc
loop
int
lock
xchg
add
ja
cmp
push
mov
mov
scas
inc
lahf
add
inc
push
jecxz
push
cld
addl
and
inc
out
imul
xchg
push
or
jge
and
fmuls
inc
and
inc
mov
in
inc
mov
add
inc
jecxz
jno
and
insl
push
negl
js
test
cld
push
jnp
dec
call
sbb
outsl
scas
jae
out
rcll
out
bound
or
je
insb
outsb
aad
pusha
sar
test
or
das
sub
lea
pop
dec
mov
cmp
cmp
add
jle
sub
jnp
dec
push
mov
lock
fwait
pop
mov
inc
mov
push
aad
xor
mov
xchg
mov
cltd
ficompl
sub
scas
or
jo
repz
xchg
add
int3
or
mov
xor
les
mov
addr16
dec
das
mov
add
xlat
mov
nop
cmp
adc
stc
outsl
xor
push
int3
xor
gs
mov
push
mov
pop
xchg
mov
scas
mov
int3
dec
stc
aad
push
mov
call
sbb
movsb
jne
mov
mov
sub
pop
ret
xor
mov
lock
cmpsb
jnp
loopne
addl
xchg
mov
fcmovb
scas
sahf
mov
call
xchg
cmp
pusha
outsb
mov
stos
mov
sub
outsl
or
push
xchg
xor
or
orb
xchg
loop
lods
sahf
in
scas
inc
push
cwtl
and
sbb
insl
fcoml
pop
andl
cmp
ss
mov
cmp
out
in
dec
cmp
stc
pop
lock
xchg
mov
loop
fnstcw
aaa
popf
jmp
mov
sub
mov
shlb
pop
xchg
movsb
cmpsl
sub
add
dec
xchg
mov
dec
adc
pop
mov
lea
jge
or
push
cmp
cld
or
pop
fidivs
push
out
jmp
dec
test
jno
mov
outsb
mov
inc
je
adc
sub
lret
xchg
dec
add
xor
mov
call
sahf
lds
inc
or
imulb
rclb
popf
and
fcomps
movsl
shr
adc
jnp
mov
sti
mov
imull
push
dec
pop
xor
inc
int3
mov
std
inc
repz
mov
lods
imul
lods
dec
fs
cli
orl
jle
icebp
imulb
out
test
mov
dec
mov
sbb
push
subl
mov
and
inc
sbb
jg
sbb
cmp
inc
xchg
repnz
add
aam
cli
ror
xchg
xchg
int
mov
dec
dec
mov
scas
push
mov
fmull
jmp
mov
dec
fwait
lds
pusha
pusha
dec
sahf
push
jns
out
push
enter
or
in
addr16
mov
test
hlt
or
stos
sub
loope
inc
add
loopne
pop
orb
repz
push
adc
fmull
mov
mov
notl
sub
leave
or
in
xchg
mov
sub
ss
lds
mov
imul
and
clc
push
mov
cli
cmp
push
jnp
xlat
and
sub
mov
push
push
fmuls
xorl
xorl
lds
sbb
insb
push
adc
sarb
repnz
mov
js
dec
xchg
ret
jle
push
mov
mov
test
mov
or
in
nop
popf
aaa
mov
sub
imull
iret
ljmp
inc
or
test
inc
xchg
xor
or
pop
pushf
mov
mov
scas
orb
cmp
xchg
mov
adcl
jnp
and
shr
loope
ret
add
inc
fs
loopne
andl
push
or
scas
jl
out
mov
bound
int
mov
or
ljmp
mov
mov
add
mov
xchg
add
sub
pop
pushf
jle
lahf
add
mov
inc
addb
aad
stos
jne
mov
ds
orb
cltd
add
into
and
jae
shrl
cwtl
sub
and
push
dec
nop
add
ljmp
lret
sub
adc
inc
xchg
xor
dec
add
add
push
add
cwtl
push
xchg
inc
imul
inc
fnstcw
test
mov
xchg
xchg
cli
stos
aaa
dec
scas
mov
mov
in
mov
or
and
in
pop
ds
adcl
rolb
dec
mov
jae
imul
push
xchg
out
adc
ss
scas
cmp
fiaddl
jge
xor
lret
add
xchg
nop
lock
pushf
rorb
fmull
mov
add
repz
stos
sub
aad
shlb
fbstp
cmc
mov
cwtl
and
je
dec
or
lods
dec
mov
in
icebp
dec
xchg
push
push
pop
inc
dec
xchg
lret
push
loop
out
cwtl
and
push
into
add
stos
mov
les
data16
xor
and
cmp
xchg
dec
scas
push
and
cltd
and
hlt
cwtl
jbe
bnd
inc
mov
mov
shll
ja
mov
sbb
fdivr
popa
sbb
sbb
cmc
cwtl
rorl
imul
mov
out
stc
adcb
or
and
mov
enter
cld
bound
push
or
dec
cwtl
mov
or
adc
sub
add
pop
push
inc
addr16
fimuls
push
out
or
sbb
push
dec
test
jno
addb
jno
imul
stc
loope
jne
test
jmp
fstps
sbb
imul
jl
mov
mov
icebp
addl
add
stos
loope
inc
mov
insl
mov
roll
adc
dec
lret
shll
in
outsb
call
mov
cli
and
shl
adcb
lea
in
xchg
pop
cmc
pushf
bound
lock
ss
mov
xor
in
mov
insb
int3
outsb
xchg
orb
xchg
add
mov
cmp
aad
jae
jecxz
push
outsl
mov
sub
in
js
outsl
or
mov
fwait
adc
inc
jae
aaa
or
std
cmp
cli
lods
andl
jbe
rcrl
ret
or
les
mov
or
add
xchg
pop
cli
out
pop
xchg
movb
xchg
mov
in
mov
mov
jne
popa
loopne
jo
adc
sbb
outsl
shl
call
pushf
insb
inc
cmp
lahf
jno
fistl
ljmp
into
js
in
jmp
movsb
jg
movsb
push
in
cli
adc
xchg
add
lahf
in
push
pop
repz
jne
pop
mov
push
cmp
cmpsb
sahf
mul
jg
push
test
jbe
and
mov
xchg
pop
cmp
inc
add
mov
push
out
bound
xchg
push
dec
push
push
push
xchg
add
pop
aas
insb
and
or
or
pop
mov
idivl
push
movsb
arpl
push
lcall
cmp
mov
mov
mov
push
dec
sbb
enter
das
testl
cmovle
repz
shl
push
shll
scas
xor
imull
cmpsb
sub
cs
adc
dec
test
dec
push
push
mov
idivb
sti
movsl
jecxz
cli
mov
pop
hlt
cwtl
jnp
orb
aas
aad
cli
dec
mov
adc
sub
gs
in
inc
js
int
stos
aam
mov
rolb
dec
repnz
xlat
es
cmpsl
lret
xor
dec
out
jge
mov
dec
sub
in
cmpsb
add
cmc
sub
mov
push
mov
pop
cltd
ss
and
out
dec
and
pop
dec
fldenv
insb
mov
lcall
je
push
mov
test
mov
xchg
ret
push
insb
insb
xchg
dec
push
jge
sub
cmpsl
js
test
out
adc
inc
outsl
call
mov
into
xor
dec
dec
inc
loopne
mov
xchg
lds
sbbb
xchg
cmpsl
out
jns
mov
inc
stos
cmp
lcall
adc
mov
testb
repnz
mov
sub
in
inc
xchg
dec
stc
les
mov
dec
imul
test
mov
cmp
repnz
xchg
js
inc
mov
xor
dec
stc
lahf
add
mov
sub
mov
push
inc
inc
xchg
lcall
out
mulb
add
hlt
xchg
dec
ljmp
adc
int
arpl
cmpsb
cltd
sub
jae
mov
pop
aas
mov
arpl
std
outsl
cmp
xchg
fnstcw
mov
pop
cli
popa
scas
scas
mov
push
or
xchg
cmpsl
test
rol
andb
mov
cmp
in
repz
mov
xchg
mov
jp
mov
add
mov
orb
sub
pop
add
in
cmp
and
pop
sub
rclb
cmp
sub
sti
lea
push
lahf
fistps
pusha
cmp
push
aas
sahf
lret
push
push
dec
data16
int3
test
jne
pushf
repz
lahf
mov
loopne
out
fldcw
xchg
sub
push
inc
cltd
and
enter
push
xlat
cmpsl
out
mov
add
cmp
add
into
jae
movsb
cli
adc
das
push
nop
in
pop
mov
mov
js
mov
das
je
outsb
lds
movsl
aaa
add
imul
push
pop
mov
insl
or
sbb
js
xor
insl
test
into
sub
mov
cwtl
cmpsb
jge
fcmovnbe
cmovp
push
sti
xor
call
sub
ss
and
test
cmpsl
add
jmp
orb
push
mov
sub
cli
and
cli
push
outsl
push
jle
dec
int3
push
and
jno
xchg
sub
dec
fstps
pop
hlt
mov
cltd
xor
loope
jae
mov
shrb
bound
rcrl
inc
dec
andl
cmc
sbb
out
jge,pn
fisubs
xchg
mov
aad
in
pop
sbb
out
pop
sub
js
aam
xchg
inc
sbb
push
push
fcoms
imul
sbb
cmp
ja
lock
into
inc
lret
jmp
stc
mov
or
xchg
stos
cmp
push
or
stc
gs
pop
loope
cwtl
scas
jge
push
enter
outsl
push
and
pop
rcrb
xchg
sub
das
int3
hlt
push
scas
das
imul
adcb
shr
jbe
mov
fidivl
mov
mov
dec
mov
popf
ret
pop
add
and
add
cmp
mov
sub
int
mov
sbb
push
addb
lret
cmc
clc
ficoms
test
stc
or
lock
cmp
and
push
subl
push
test
lret
into
fld
or
inc
decb
imul
sbb
cmpsl
push
push
and
mov
cmp
or
fildll
dec
cmp
cmc
bound
dec
xorb
out
adc
mov
mov
sub
repz
mov
pop
adc
not
fdivl
hlt
and
leave
pop
decb
xchg
int3
je
jle
fnsetpm(287
fistpll
jg
clc
popa
pop
ret
fstpl
mov
loope
int3
push
int
pop
rcrb
adc
decl
lahf
lods
sbb
test
je
ud1
ds
mov
leave
push
out
out
stos
inc
push
pop
mov
cmp
fadds
add
pop
bound
mov
cmp
lock
or
sahf
stos
shrl
xchg
and
mov
jno
push
push
sahf
imul
lcall
mov
pop
sbb
data16
pop
xor
nop
rcrb
in
xchg
in
lcall
pop
sub
push
sbb
movsb
stc
mov
inc
dec
mov
scas
adcb
xchg
fldl
or
in
je
push
call
mov
mov
daa
jmp
push
bswap
and
push
jmp
aas
sti
mov
xchg
clc
mov
jmp
xchg
cld
sub
mov
sbb
dec
add
fcoml
fisubl
mov
sbb
addb
stc
push
xchg
mov
leave
lret
bound
xor
outsl
out
push
mov
mov
mov
das
mov
std
inc
insl
frstor
jmp
adc
jmp
pop
scas
ret
or
xor
das
pushf
jmp
gs
lret
and
mov
insb
and
inc
adc
xchg
int3
orl
stos
lret
int
lea
outsb
data16
mov
xchg
cmove
fiadds
fwait
sbb
adc
cmp
add
je
popa
les
mov
jo
stc
jecxz
pop
dec
pusha
dec
rolb
clc
cmp
pop
mov
inc
test
mov
cmpb
outsl
in
fisttpll
jnp
cwtl
jnp
lock
sahf
lahf
push
jno
fdivrs
push
xor
push
call
repz
mov
sbbb
pop
mov
fnstsw
jmp
fisubrl
int3
iret
xor
lea
pop
and
call
or
dec
inc
in
jmp
int
jnp
inc
or
mov
sub
pushf
aas
xchg
add
add
shlb
movsb
sbb
adc
outsl
pop
mov
lcall
sbb
xchg
pop
bound
js
stc
rcr
dec
xchg
adc
inc
stc
jp
test
ja
nop
addl
cli
jne
jmp
mov
or
std
mov
sub
outsb
pop
std
push
adc
xchg
or
push
ret
nop
sub
mov
push
mov
push
sub
movsb
push
mov
outsb
and
popf
sub
add
pop
pusha
lds
repnz
adc
push
jb
ror
outsb
push
sbb
xchg
add
ja
mov
fs
sbb
ja
fldenv
and
cld
pop
roll
dec
rcr
inc
out
mov
aaa
jle
jge
jmp
cld
lea
insb
jno
inc
or
pop
sbb
adc
loope
mov
outsl
jl
and
pop
bound
data16
aaa
mov
call
arpl
adc
jge
jo
enter
xor
sti
lret
and
add
pop
adc
imul
or
into
or
cmpsl
inc
and
out
lcall
fmuls
xchg
aad
xor
adc
and
mov
popf
xor
outsb
fst
nop
cmp
jl
mov
fwait
mov
cmc
js
out
add
in
pop
outsl
jmp
loopne
in
jl
sbb
jecxz
pop
testl
adc
mov
dec
fwait
xor
mov
adc
pushf
add
cld
push
loop
lcall
adc
daa
cmp
das
push
pop
cli
aam
movl
xchg
aam
push
outsl
dec
clc
pop
jnp
ret
cwtl
scas
pop
mov
mov
lcall
repz
xchg
sbb
xor
stc
lcall
in
adc
mov
and
in
jge
and
jne
push
push
jg
lock
cwtl
dec
pop
mov
xchg
int3
sbb
addb
jb
repz
and
lock
lcall
or
dec
loopne
and
push
sbb
out
fisttps
and
cli
inc
sarl
or
outsb
push
dec
cmpl
xchg
push
outsb
adc
sbb
jp
shr
cmc
out
enter
sti
jbe
push
mov
dec
cwtl
jo
sbb
imul
subps
pop
sahf
ficomps
out
cmc
jmp
shrb
in
insb
pop
imul
leave
fwait
sbbb
jns
push
sub
loop
push
outsb
test
int3
add
or
fdivr
enter
mov
mov
lods
test
iret
dec
dec
out
cltd
jo
inc
cmpsb
movsl
and
jge
mov
sahf
jge
and
adc
inc
clc
mov
or
enter
sbb
sbb
adc
fdivrp
lret
pop
lret
addr16
mov
mov
sub
inc
xchg
in
sbb
aad
jbe
js
xchg
xor
sbb
xor
test
mov
js
adc
sub
into
jl
pop
lret
jno
and
shrb
push
mov
cwtl
mov
scas
pop
or
pop
fs
ss
add
sbb
mov
sub
jl
outsl
repz
pushf
sahf
push
rcrl
fbld
push
pop
lods
add
xor
fsub
fisubs
mov
dec
ja
adc
mov
jecxz
mov
std
adc
sti
jne
mov
aas
mov
mov
insb
jge
adc
in
loop
xchg
mov
dec
lcall
add
add
bound
fsqrt
jge
loop
pop
jbe
mov
lcall
mov
xchg
mov
cmp
imul
fcomps
and
fwait
shl
adc
repz
pop
add
mov
mov
bound
mov
popa
sbb
out
cmp
rorb
mov
adc
lock
stos
mov
xchg
ret
pop
mov
dec
push
fildll
sbb
mov
sub
ficomps
jmp
pop
and
scas
loop
lods
cmp
mov
shll
sbb
mov
loope
out
lcall
xor
test
decb
cs
jno
cmp
loope
xor
je
push
mov
dec
mov
jno
fwait
out
and
inc
xchg
enter
lret
addr16
pop
mov
sbb
in
sub
sub
xchg
xor
adc
sarl
insl
cs
ja
add
mov
pusha
js
inc
pop
shrl
push
addr16
fdivs
mov
push
push
pop
imul
daa
pop
cmpb
fbstp
add
lods
adc
and
call
xchg
cmp
sbbb
push
or
xor
mov
adc
aas
add
cmpsb
cmp
ret
xchg
out
mov
dec
mov
and
pop
and
mov
inc
xchg
lds
enter
andb
push
nop
scas
cs
out
push
faddl
aad
ror
pop
jae
xchg
xchg
out
pop
mov
loopw
xchg
js
decb
loop
sub
add
lds
mov
pop
mov
dec
jb
rorl
andl
movsb
sub
ss
repz
inc
inc
jae
adc
sbb
inc
sub
fwait
std
xchg
xchg
add
dec
iret
or
ljmp
in
push
push
imul
jge
jb
popa
bound
pushf
and
hlt
xor
sub
lods
in
adc
lahf
add
inc
jecxz
js
scas
or
mov
in
outsb
mov
mov
movb
bound
dec
xchg
xor
cmp
lock
xor
jp
xchg
mov
mov
mov
lea
xor
imul
fwait
scas
fsubrl
add
cmp
iret
dec
loope
or
data16
jg
in
inc
add
int
aam
mov
pop
jmp
jae
addr16
pop
cs
ror
push
repnz
push
and
loop
inc
cmpl
pop
je
jge
sub
shlb
out
mov
out
adc
addr16
mov
sub
out
jg
inc
sahf
sub
stc
repnz
add
lcall
or
test
cmp
aam
aaa
incl
xor
xchg
sbb
aaa
or
scas
inc
dec
push
inc
or
inc
scas
cmpb
or
popf
dec
mov
mov
pop
in
dec
xchg
cmc
mov
xor
les
dec
sbb
mov
aad
jae
mov
mov
pop
jnp
add
test
int3
or
mov
std
lods
stos
insl
gs
lea
call
adc
shll
repz
cld
xor
jl
inc
stos
xorl
rcll
jge
pop
dec
lods
mov
jle
pop
vpunpckhqdq
cmp
insb
addr16
dec
pop
pop
clc
sbb
dec
mov
insl
mov
mov
in
fs
mov
xchg
inc
mov
rcrb
stc
in
lods
scas
or
imul
add
ja
adc
ljmp
cwtl
mov
outsb
stc
adc
stos
out
jns
test
and
aaa
les
hlt
loope
loope
inc
aaa
pop
push
test
push
adc
pop
es
int3
repnz
add
push
test
add
bound
clc
sbb
outsl
xchg
sbb
mov
mov
out
add
divl
loop
mov
mov
or
insl
ret
xchg
dec
sub
sub
stos
cltd
mov
xchg
pop
mov
push
dec
pop
push
xor
test
or
aam
mov
ja
out
dec
mov
push
int
outsb
jns
fsubs
pop
test
jne
adc
adc
jge
gs
cmp
lods
cmp
cmp
iret
stc
push
push
pop
test
mov
sub
push
jae
adc
pop
sub
in
add
pop
addr16
inc
cli
bound
stc
mull
cmp
push
inc
jbe
mov
adc
push
push
add
mov
add
sarl
sbb
mov
fucomip
in
dec
push
mov
imul
std
ds
cld
int3
jp
adc
lcall
mov
jmp
mov
xchg
inc
pop
xchg
jae
fiadds
xchg
push
shr
cltd
xchg
push
aad
stos
jecxz
js
or
mov
nop
sti
stc
push
add
roll
adc
xchg
arpl
inc
rorb
cld
inc
cmp
ljmp
cmp
mov
sbb
jo
add
cmc
add
sti
imul
xlat
sbbl
sarl
xor
pop
insl
jns
divb
insl
mov
mov
dec
dec
mov
adc
pop
in
out
and
or
mov
mov
mov
mov
cmp
ds
aad
cld
ja
cltd
js
xchg
xor
scas
add
or
mov
mov
inc
shlb
xor
mov
inc
in
pop
jo
jnp
mov
cmovb
xchg
xor
in
or
dec
movsl
mov
cmp
loop
push
mov
or
xchg
lahf
xchg
sub
cmp
fwait
daa
insb
lods
enter
jl
mov
mov
je
test
stc
add
mov
cli
push
call
decb
test
jl
cmp
mov
fnsave
cmp
fwait
loopne
cmpsb
mov
push
imull
xchg
or
dec
jo
xchg
cltd
cltd
mov
dec
push
daa
ret
xchg
mov
pusha
lret
push
enter
and
test
jl
les
mov
jbe
movsl
lea
js
stc
sahf
fiadds
pop
pop
cmpsb
cmp
jnp
insl
and
push
icebp
js
movsb
cwtl
bound
jge
adc
shr
rcrb
enter
sbb
inc
cwtl
stc
xchg
mov
inc
xchg
jge
insl
mov
inc
mov
lock
fimuls
pop
pushf
fisttpl
icebp
pop
insl
cmp
pop
adc
cmpsb
fiaddl
add
add
lea
pop
gs
daa
mov
pop
or
lock
lods
es
sub
cmp
stc
pop
jle
stos
faddl
pop
xchg
loope
std
test
mov
mov
out
mov
cld
gs
mov
or
dec
dec
cmp
scas
ss
sub
insl
mov
mov
loope
mov
push
insl
push
and
ja
adc
mov
mov
xchg
ret
lahf
out
mov
pop
scas
in
adc
xchg
mov
cmc
test
jle
lds
dec
or
ss
inc
mov
mov
adc
and
in
mov
mov
sar
cmpsb
xchg
push
sub
push
clc
lret
xor
mov
out
movsb
out
addr16
loope
jns
cmp
push
idivl
jg
mov
mov
je
or
aas
cwtl
and
mov
sub
hlt
loope
and
test
push
pop
call
mov
loop
mov
mov
stos
adc
popa
scas
jecxz
out
gs
cli
xchg
std
mov
or
mov
stos
insb
std
in
mov
sahf
stos
jne
adc
and
xchg
adc
sbb
sbb
addb
in
adc
jo
mov
test
push
push
pushf
jl
sub
mov
push
pop
lcall
dec
sbb
jae
ret
hlt
sub
sbbl
outsb
rclb
out
inc
dec
sti
xchg
in
jb
add
add
mov
jl
adc
cwtl
add
in
cmpsb
adc
fiadds
daa
in
nop
in
xor
stc
lods
rol
insl
popf
in
imul
dec
addl
ret
sub
cmc
inc
fdiv
mov
mov
insl
sbb
arpl
call
iret
add
dec
or
inc
xchg
xor
mov
arpl
arpl
repz
jnp
jecxz
daa
push
add
insl
outsl
das
push
scas
cld
lea
fdivrl
mov
lret
jl
jmp
dec
or
pushf
lret
lret
sahf
add
mov
gs
push
mov
ja
mov
jmp
push
rcrl
mov
dec
or
lahf
call
dec
mov
test
jo
jg
xchg
inc
jg
nop
int3
mov
jbe
out
jae
ret
sbb
repz
lods
aam
repnz
cmp
jmp
gs
testw
mov
mov
pcmpeqb
xchg
int3
mov
add
in
ljmp
mov
outsb
pop
sbb
adc
lock
fidivrl
xor
jne
ss
out
scas
cmpsl
cmp
popa
push
les
push
and
adc
push
movsb
pcmpeqw
xchg
scas
mov
adc
jp
insl
lahf
mov
and
xchg
ja
pop
and
out
xchg
in
loopne
rorl
cli
cld
jbe
std
clc
cmpsb
roll
mov
push
add
lcall
xchg
cmpsl
add
in
and
call
or
aam
or
mov
cs
xchg
imul
mov
dec
dec
fwait
xchg
sub
scas
adc
mov
mov
iret
insl
jmp
test
mov
sbb
xor
out
xchg
insl
je
adc
dec
push
jmp
inc
test
jg
mov
popf
dec
rcrb
loop
imull
pop
inc
dec
test
add
movsl
xchg
test
inc
gs
push
es
xchg
push
adc
mov
cmp
sbb
dec
mov
imul
mov
jg
dec
mov
lret
fsubrs
mov
insb
js
inc
push
xchg
enter
dec
ficompl
pop
ss
xor
insb
les
cli
pushl
repz
cmp
add
ljmp
jecxz
jns
call
jge
xchg
mov
lret
mov
pop
cmp
cmp
flds
push
fwait
push
xchg
nop
into
lcall
repnz
mov
dec
rcll
popf
fsubl
xchg
out
data16
out
sahf
fldcw
lock
cld
sub
inc
adc
mov
mov
mov
mov
pusha
xchg
scas
cmpsl
push
loope
or
scas
xchg
mov
sbb
cmpsb
mov
test
jge
mov
sar
outsl
dec
push
mov
test
loope
ljmp
jecxz
xchg
mov
insb
cwtl
jecxz
jbe
mov
jb
inc
and
xchg
mov
mov
imul
aad
lcall
fcmovnb
aad
arpl
test
fistl
cmp
add
pop
and
pop
cmp
mov
push
out
xchg
jp
aam
daa
pop
lods
or
dec
cmp
ja
filds
int3
ja
addl
mov
clc
pop
fistps
lret
adc
xchg
arpl
icebp
add
sbb
sbb
das
insb
pop
mov
mov
and
aas
mov
pop
mov
addr16
sti
repz
mov
mov
pop
fsub
pop
sbb
in
xchg
pop
mov
cmc
test
mov
add
mov
xlat
jle
add
call
stc
add
out
test
and
sahf
jmp
adc
iret
test
add
flds
pop
orb
mov
aaa
inc
add
sbb
loope
adc
adc
sbb
iret
aad
mov
in
das
xchg
int
dec
je
test
dec
sahf
xchg
sub
xchg
jmp
xchg
sbb
mov
inc
inc
testl
jae
das
mov
jne
jmp
xchg
lds
loop
jge
jmp
cmpsl
xchg
lcall
mov
add
adc
jae
sub
fld1
aam
sbb
xorb
pushf
in
xchg
das
loope
stos
lds
aaa
mov
fmuls
clc
mov
add
push
sub
xchg
sbb
sahf
aam
loope
imull
push
lds
ljmp
shll
jl
add
push
das
pop
pusha
mov
mov
movsb
add
shrl
mov
pushf
fmull
repz
mov
negb
xchg
filds
cwtl
rol
aad
dec
add
sbb
xchg
leave
leave
fnstcw
dec
push
repnz
stos
test
xlat
mov
in
imul
cmp
lods
jnp
sbb
inc
or
jmp
fsubrs
push
pop
mov
enter
cs
mov
mov
dec
sarl
pop
pop
outsb
and
loope
inc
lock
xchg
inc
flds
lahf
dec
js
arpl
mov
sub
sub
scas
iret
adcb
add
fwait
or
pop
mov
dec
test
adc
test
cwtl
int
cmpsl
xchg
mov
stos
dec
jle
stc
lea
jmp
fs
mov
sti
fs
or
push
adc
scas
pop
mov
sub
jl
adc
stos
jecxz
out
aas
xchg
pop
dec
jl
cltd
notb
mov
ljmp
mov
xor
aam
dec
lahf
pusha
dec
shlb
into
inc
xchg
jl
xchg
lret
out
dec
jb
jo
repz
paddsb
jp
hlt
repnz
and
ror
lods
push
mov
bound
je
je
pop
iret
fnstsw
xchg
cmp
cmp
mov
pop
scas
push
xor
movsb
leave
and
jns
je
cli
push
sub
subb
xchg
or
cmp
cmp
mov
cli
imul
sarl
in
xor
icebp
test
decb
mov
xchg
pop
or
andl
lea
lret
test
stc
cmp
and
push
push
mov
bound
lcall
test
outsb
xchg
lods
stos
inc
sub
test
imul
fdivr
jbe
or
in
fwait
lret
add
shrb
add
stos
lods
testb
jp
xorl
das
int3
call
or
mov
pop
sub
push
and
testl
data16
pop
lea
sti
cmp
adc
push
and
jno
dec
or
sub
sbb
cmc
and
jg
int
enter
cli
ret
stos
int3
lcall
mov
fcompl
popa
xchg
aaa
mov
xchg
pop
mull
cmp
shlb
test
jne
dec
out
push
sub
icebp
imul
jns,pt
or
sub
std
inc
mov
adc
adc
xorl
sbb
dec
loop
lret
dec
cmp
adc
push
jns
pusha
and
jmp
dec
jle
arpl
mov
out
fxch
scas
out
loop
scas
enter
out
xor
ljmp
jmp
shl
stc
xchg
stos
cs
xchg
inc
mov
add
lds
or
imul
enter
in
mov
in
xor
pop
xchg
mov
xor
stos
cmp
sub
ret
mov
mov
hlt
xor
xchg
fdivr
xchg
ss
negb
cmpsl
xor
and
sbb
outsl
mov
sti
add
into
popa
addr16
sub
add
int
mov
scas
sub
dec
cmp
push
mov
sbb
xchg
les
not
call
hlt
in
and
cltd
cmp
test
cld
stc
sahf
adc
jecxz
inc
insb
pop
repnz
sbb
psrlq
inc
gs
shrb
ret
cltd
icebp
sbbb
loopne
test
js
mov
nop
outsb
insb
sbb
leave
fs
enter
inc
inc
push
xor
seto
dec
mov
add
test
xor
jns
test
mov
cmc
in
push
aaa
jb
cld
leave
xchg
loop
inc
or
jbe
stc
mov
in
push
mov
adcb
jg
in
into
cmpsl
mov
cmp
mov
out
lods
sub
scas
mov
and
push
insl
mov
call
int
xchg
repnz
ds
mov
pusha
inc
in
push
xor
cmp
and
mov
lret
jne
push
dec
sub
rcrb
ljmp
ss
popf
add
pop
movsb
xchg
xlat
popf
add
pushf
outsb
jae
mov
mov
pop
adc
int3
insb
sahf
jp
movsl
xchg
out
popf
hlt
pop
jne
imul
lahf
mov
push
pop
add
bnd
push
inc
pushf
pop
movsb
std
rcll
clc
mov
fistpll
pop
fiaddl
xchg
jb
cmp
mov
sub
test
adc
test
sbb
fidivs
pop
add
pop
xchg
fisubs
pusha
test
repz
pop
fimull
xchg
or
sbb
mov
add
outsl
cmp
add
in
sbb
mov
inc
pop
lock
jge
fs
or
out
movsb
mov
adc
test
cld
dec
pusha
mulb
repnz
lods
mov
push
mov
or
jmp
push
lret
popf
dec
pop
movsl
or
sub
enter
sti
sbb
nop
mov
pop
movsb
inc
cmpsl
jne
mov
inc
xor
add
mov
loopne
repz
imul
pop
inc
pop
fcoml
fwait
or
push
mov
adc
dec
pop
in
ja
bound
or
sbb
cmp
cld
test
mov
addr16
cmp
test
push
sub
jae
lcall
or
dec
ficompl
jo
xchg
fs
lods
popf
jae
scas
mov
dec
mov
out
stos
or
xchg
daa
mov
lcall
xchg
sbb
addr16
out
jge
pop
adc
push
rol
xchg
or
cli
adc
mov
les
test
stc
movsl
xchg
subb
ds
mov
pusha
ret
dec
mov
in
not
jge
cli
or
in
adc
mov
push
cmp
dec
xchg
std
leave
dec
xchg
cltd
ret
subb
jne
lock
jg
cwtl
jecxz
fstps
mov
repz
sti
imul
pop
rcrl
inc
shlb
arpl
sbb
jne
stc
sub
movsb
xchg
test
inc
mov
xor
test
ss
sub
dec
mov
insl
mov
cwtl
repnz
push
scas
mov
aad
std
lret
xor
mov
push
jmp
leave
mov
xchg
xchg
inc
mov
loop
push
xchg
mov
cmc
je
inc
jmp
pop
ret
jl
loope
icebp
aam
lcall
mov
sbb
stos
subb
mov
sar
scas
jbe
sub
jmp
push
ljmp
daa
dec
mov
ds
js
dec
insb
sbb
sbb
add
jb
clc
xor
rclb
ja
bound
jmp
test
lds
mov
mov
pusha
stc
and
jno
and
fildl
mov
pusha
xor
outsb
cmp
sbb
xchg
mov
or
cltd
ss
xor
xchg
fsub
push
addr16
cmc
inc
test
push
lods
xchg
movsb
aam
vcmppd
mov
push
fcomp
xor
add
popf
iret
shlb
push
into
push
xchg
lahf
cltd
movntps
or
add
mov
sub
mov
jmp
fwait
mov
inc
xchg
cltd
sub
adc
mov
das
add
push
dec
das
hlt
add
sbb
dec
loopne
popl
movsl
add
mov
sbb
lahf
mov
orl
pusha
ret
mov
pop
je
loopne
imul
cmpsl
pop
pusha
fiadds
sbbl
dec
aas
rorl
dec
shl
subb
pop
and
inc
pop
loope
and
negb
call
pop
mov
mov
push
out
clc
pop
cmp
lahf
dec
loope
jl
mov
out
xchg
mov
cmpsl
sub
stos
out
cwtl
jne
dec
push
ret
dec
lea
std
leave
add
jae
push
sub
cmp
pop
mov
pop
cmc
jp
jne
sub
mov
mov
or
inc
cmp
fwait
jb
mov
bound
jnp
jae
cmpsl
push
je
ret
jbe
fstpl
icebp
test
cmp
mov
and
and
ss
iret
sub
adc
jle
mov
div
sbb
repnz
mov
js
pop
cmpsb
mov
mov
jmp
mov
ret
add
xor
loopne
popa
adc
gs
xchg
mov
push
inc
add
andb
fs
or
addr16
fldt
test
movsb
jns
jns
in
inc
dec
mov
out
scas
outsl
sub
lahf
adc
das
fisubrl
sti
xchg
aas
push
push
jb
pop
or
ss
lods
cmpsb
mov
loop
movsb
enter
or
adc
or
jp
clc
pop
shlb
test
mov
test
add
inc
jg
test
mov
jge
or
push
cmpsl
push
mov
xor
mov
scas
addr16
pop
push
mov
and
jecxz
mov
inc
scas
outsb
leave
sub
lock
out
xor
add
int
adc
iret
jmp
mov
inc
xor
inc
cmpsb
daa
aaa
rcll
je
mov
popa
mov
cmp
cltd
mov
xor
leave
ret
pop
and
sbb
pushl
imull
jbe
pop
ljmp
adc
xor
add
les
stc
mov
push
imul
inc
and
dec
cmpsl
popf
or
sbbb
mov
mov
xchg
aam
aas
outsb
mov
sub
ja
enter
sub
insb
enter
lea
jmp
push
scas
pop
sbb
xor
outsl
and
addl
sub
sbb
add
pcmpgtw
das
add
fsubl
fstpt
dec
movsb
popf
imul
cmp
out
icebp
pushf
lcall
test
popa
inc
dec
in
xchg
popf
enter
cmp
nop
dec
sbb
stos
mov
fsubr
xchg
orb
test
xchg
lods
ret
adc
js
sbb
ret
jl
xor
mov
or
push
orb
mov
and
shlb
int3
sub
mov
add
mov
xchg
cmpsl
pop
pop
sahf
sahf
push
pusha
push
inc
inc
fnsave
shrb
sub
divl
call
movsb
xchg
adc
lcall
popa
ljmp
xchg
movsl
pop
xchg
xchg
inc
pop
sub
pop
xchg
inc
js
push
inc
mov
xchg
add
js
xchg
mov
out
jge
xchg
rorl
pop
je
test
cmp
dec
popf
adc
fadd
sbb
in
push
mov
or
movsl
dec
dec
aam
push
sti
popa
add
arpl
and
aam
add
mov
lret
lods
shl
mov
repnz
dec
pop
mov
fldcw
sbb
rorb
fidivrl
cmp
jae
xchg
imul
xchg
mov
into
or
jg
ret
cld
das
push
inc
mov
repnz
pop
pushf
adc
ds
xor
test
mov
pop
movsb
sub
cld
pop
sbb
rcr
mov
jge
cmp
mov
jl
cmc
decb
sub
mov
mov
pop
jge
mov
or
mov
sub
addr16
push
jmp
stc
push
loopne
insl
cmpsl
dec
xor
xchg
rcr
fcomps
sub
mov
push
pop
into
gs
test
add
and
cmp
cltd
loope
ficompl
mov
out
repnz
add
adc
push
mov
pop
jno
std
dec
insl
mov
mov
jmp
xchg
jmp
xor
cmp
xchg
and
xchg
scas
int
decl
xchg
pushf
pushf
add
xchg
pop
inc
les
mov
sarl
fdivr
aaa
adc
rcll
outsl
loopne
ret
int3
xor
inc
clc
dec
adc
in
movsl
les
pop
push
inc
jp
in
mov
and
loopne
xor
adc
or
jns
cmpsb
pushl
lret
jbe
or
sub
in
xchg
int3
movsl
jbe
loop
push
pop
loopne
inc
pop
je
add
out
outsl
outsb
andb
add
dec
clc
cmp
insb
enter
sbb
test
dec
mov
pop
jle
pop
jo
cwtl
jge
mov
jecxz
jge
inc
and
add
mov
popf
fcomp
call
in
inc
and
popa
test
loope
fmul
in
mov
fsts
cmpsb
std
mov
jns
hlt
pop
pop
into
sti
scas
iret
push
mov
inc
loop
push
adc
cltd
cld
dec
inc
mov
pop
add
lea
dec
ja
push
lea
test
xor
dec
jo
push
adc
mov
test
nop
jle
daa
adc
in
sar
cld
ret
cmp
arpl
push
cmp
jnp
jo
lret
xchg
pop
add
sbb
int3
scas
jo
push
imul
data16
and
mov
js
dec
xchg
aam
xor
decb
dec
xchg
jbe
jbe
int
sbb
cs
into
add
insl
repz
mov
or
enter
mov
jns
mov
jbe
push
gs
push
xchg
mov
sub
mov
dec
nop
cmp
test
fcom
decl
hlt
and
or
mov
jb
cld
inc
mov
push
out
ds
testb
stos
idivb
rcrl
stos
stos
inc
lea
fbstp
stos
fsub
adc
test
mov
das
aas
mov
jae
shlb
int
pop
mov
iret
fdivrl
mov
lods
dec
mov
xchg
jnp
add
rol
push
call
jecxz
repnz
movsb
scas
call
cmpsl
xchg
sub
sub
insb
jecxz,pn
mov
insl
cmp
out
sbb
adc
orl
dec
adc
test
sub
test
pop
mov
int
test
mov
rorb
stos
sti
mov
movsl
in
or
in
cmp
push
ljmp
adc
cmp
clc
xor
xchg
dec
lahf
pusha
lret
sar
lcall
xor
jecxz
jo
in
ss
mov
shl
bound
pop
cs
or
inc
jecxz
and
movl
and
stos
mov
mov
leave
xor
push
lods
push
push
lds
jecxz
mov
call
mov
leave
cli
xor
fimull
add
gs
mov
rorl
iret
dec
insl
sbb
in
int3
out
out
and
jne
lods
or
movsb
mov
xlat
pop
loopne
xchg
push
jbe
lods
es
arpl
in
xchg
dec
icebp
jo
add
mov
mov
leave
add
adc
loope
arpl
out
or
dec
iret
js
sbb
sub
leave
fs
stc
xchg
jmp
dec
cld
imul
mov
push
cmp
lods
sbb
outsl
or
jecxz
ss
mov
int
test
cld
inc
jnp
loope
and
fisttpll
sahf
mov
out
jns
adc
stos
insb
pop
clc
mov
pop
xchg
pop
sti
xchg
or
jl
jge
mov
jnp
test
cld
cs
xor
dec
xchg
push
push
icebp
sahf
incb
push
xor
sbb
and
testl
xor
cli
mov
xor
adc
adc
int3
mov
xchg
pop
ja
ret
divb
and
loope
or
mov
jle
int3
scas
add
jecxz
call
into
pop
mov
push
push
jo
add
pushf
dec
xchg
sub
int
adc
mov
in
lock
mov
jnp
out
dec
jp
and
lret
loope
add
out
and
stc
test
stc
push
mov
nop
xchg
xlat
jb
adc
mov
lret
dec
fnstsw
mov
mov
sbb
xor
sbb
add
or
xchg
int
dec
pushf
cmove
jg
mov
out
cwtl
and
insb
cmovne
out
int3
es
push
mov
cmp
mov
mov
cld
push
aad
insl
test
mov
adc
enter
or
ret
jp
es
inc
daa
shlb
sub
xlat
sbb
stos
call
inc
iret
ja
adc
loopne
dec
mov
mov
pop
loopne
adc
add
pusha
test
jmp
jb
inc
mov
loopne
lods
cld
dec
jle
js
bound
movsl
clc
mov
stc
push
cmpsl
adc
push
cwtl
and
push
cld
xchg
loope
or
dec
push
mov
js
push
call
inc
jl
out
push
sub
ss
leave
cmp
and
xchg
stc
pop
dec
nop
sub
xchg
jmp
inc
sbb
inc
pop
dec
cmc
repz
and
jo
pop
mov
movsb
sbb
lahf
scas
push
loope
lcall
ljmp
and
dec
dec
jno
and
dec
repnz
sbb
jb
mov
sub
pop
out
in
push
dec
lcall
aad
pop
mov
sbb
stos
xor
addr16
xchg
push
iret
sbb
sar
testl
xchg
test
mov
and
and
ja
or
pop
les
aas
clc
pop
inc
sahf
ljmp
popf
repnz
push
out
mov
jmp
cmp
mov
cmpsl
cltd
out
fildl
xor
add
jae
sbb
lret
es
sbb
popf
mov
shr
sarb
push
leave
mov
pop
stos
xchg
lret
shlb
aaa
sarl
shlb
sbb
xor
sub
adc
testl
into
jbe
aam
fsubs
filds
pop
arpl
xchg
pop
in
jg
ficoms
data16
fs
cmp
or
xchg
inc
popf
sarb
jp
shrb
jmp
popf
pusha
mov
frstor
enter
movsb
lahf
mov
out
inc
lcall
stc
js
jo
cld
cld
xchg
data16
and
aad
jmp
mov
pop
scas
xchg
test
mov
mov
xor
dec
xor
cwtl
in
add
xor
int3
push
inc
push
clc
sub
cmp
lods
mov
outsb
aaa
pop
push
xchg
outsb
fnstcw
insb
gs
addr16
loope
push
xchg
test
jmp
test
int
divl
in
fcmovu
int
mov
loope
or
jge
pop
sbb
jmp
out
test
nop
mov
mov
sbb
xchg
shrb
iret
sar
ljmp
xor
repz
jbe
mov
iret
test
insb
das
cld
mov
mov
cmpsb
mov
dec
xchg
int
lret
jmp
jmp
icebp
dec
mov
sahf
push
and
sbb
nop
xchg
push
arpl
stc
mov
jp
add
mov
dec
je
pop
stc
mov
daa
cmpsb
ljmp
and
or
incl
xor
adc
lea
or
jp
sbb
mov
jmp
sbb
rcr
mov
ljmp
int3
pop
pop
decb
push
in
push
mov
push
mov
pop
push
out
int3
fwait
pop
aam
add
add
or
cmpsl
pop
cmc
and
cmc
and
mov
scas
jge
push
xor
scas
cmpb
pop
out
shll
pushf
pop
mov
pushf
je
xcrypt-cbc
cmpsl
adc
or
dec
xchg
fmul
mov
sub
into
or
inc
pop
or
xchg
ret
dec
rcrb
int3
jl
mov
inc
call
loop
out
cld
fptan
jp
movsb
jg
and
iret
dec
mov
inc
dec
or
and
imul
lahf
push
jns
dec
clc
mov
movsl
les
pop
mov
mov
mov
xchg
js
mov
clc
lldt
or
cwtl
cmp
fcoms
jl
push
test
mov
loop
sbb
lods
dec
mov
popa
cltd
mov
dec
add
jbe
lds
cmp
lea
shrb
test
xchg
lods
mov
pop
fsts
cmp
xchg
cmp
mov
dec
and
mov
icebp
pop
test
sarl
dec
bound
bound
shll
jmp
xchg
fs
dec
xor
dec
push
sub
ja
and
jo
jmp
sahf
push
mov
jmp
sbb
adc
sbbl
addr16
xchg
maxps
add
dec
lods
outsb
mov
jge
sbb
cmpsb
out
add
js
pop
sub
andb
inc
outsb
xorl
cmovp
jecxz
jmp
js
xlat
mov
gs
xchg
hlt
shl
stos
xchg
ds
loop
jg
dec
push
stc
cmovp
jmp
sub
and
call
adc
aas
lea
xchg
call
sbb
or
addl
xlat
mov
lcall
sub
mov
mov
popf
sti
cmp
push
inc
cmp
imul
sbb
jbe
or
fstpl
stos
flds
jge
hlt
fsubrl
sbb
out
test
ret
loop
mov
xchg
ret
fistpl
cltd
fs
insb
xchg
add
xchg
fucom
inc
cli
jecxz
sbb
add
inc
or
or
lahf
xchg
xor
xor
sub
push
xor
mov
fwait
negl
in
xchg
fdivrs
mov
movsb
sbb
div
push
in
repz
out
xchg
fs
repnz
xchg
dec
arpl
lods
les
push
and
mov
insl
push
push
xchg
int3
or
mov
stos
fsts
lcall
pop
dec
jno
mov
pushf
leave
fstps
insb
mov
mov
mov
or
pop
call
fsubrl
jecxz
jecxz
pop
dec
sti
sbb
add
pop
packsswb
sbb
fs
js
push
sbb
clc
mov
loop
xor
ja
dec
inc
test
enter
mov
scas
lea
jns
mov
ljmp
sbb
lahf
cmp
mov
mov
sbb
sub
sahf
add
jno
pop
dec
or
mov
push
adc
xchg
ficoms
ss
dec
dec
int
fnstsw
psrlq
call
andb
adc
push
inc
add
mov
inc
xor
push
jo
pop
lret
xor
pop
movsb
or
fistps
jp
lods
mov
je
xor
hlt
mov
cli
sub
jae
xchg
out
fisttpll
cmp
jp
xorb
dec
cmpl
xor
out
lea
pop
movsl
ja
or
bound
or
and
test
shll
dec
std
and
fwait
out
xchg
push
fildl
lret
push
jecxz
insl
call
mov
pop
sub
imul
scas
stc
lods
sub
aas
dec
jl
sbb
test
test
jo
mov
jo
fdivr
inc
dec
or
add
xor
inc
cmp
stc
loop
adc
xchg
sub
xchg
push
movsb
je
fcoml
xlat
lea
mov
test
jl
push
lods
fmuls
call
lahf
data16
repnz
mov
push
or
and
aad
icebp
stc
in
pushf
shrb
fisubs
daa
dec
mov
xchg
das
enter
mov
mov
xchg
clflush
dec
xchg
flds
jns
mov
pop
or
nop
imul
fwait
std
pushf
adcl
pop
or
pop
and
hlt
pop
mov
inc
dec
loopne
push
jle
cmp
sub
div
ja
mov
in
dec
call
dec
pop
inc
jns
std
int3
test
xchg
arpl
push
xchg
cmpsb
xor
aam
jo
or
lcall
dec
imul
xor
nop
imul
sbb
clc
sti
inc
sbb
fdivrs
cld
imul
sbb
rcl
push
jle
cld
incl
mov
push
mov
or
dec
dec
fwait
jmp
imul
sbb
add
push
cmpsl
lahf
pop
mov
aad
fwait
jge
loop
loopne
aam
jae
push
aaa
pop
loop
mov
mov
or
dec
cmp
pushf
iret
add
xchg
pushf
xor
fistpll
sub
push
mov
scas
and
add
or
push
sbb
lahf
test
out
in
add
cmp
repnz
adc
mov
mov
pop
cwtl
fisubl
sbb
push
push
loop,pt
data16
lock
aad
movb
dec
mov
xchg
in
cmp
pushf
popa
repnz
mov
add
lahf
lods
adcb
imul
push
jae
mov
mov
bound
xor
add
mov
movsl
and
mov
dec
icebp
fadds
xor
imul
cmp
ja
jge
loop
mov
loop,pn
ja
addr16
push
xor
arpl
mov
add
dec
jge
rcll
xchg
jae
sub
mov
adc
sti
jbe
push
sub
in
mov
shrl
jno
xchg
lret
jge
in
call
jb
cmpsb
testb
mov
pop
or
add
adc
jno
sahf
xor
movsl
mov
in
pusha
add
rcll
test
cmpsl
inc
fwait
sbb
jns
cwtl
cltd
daa
nop
scas
fisubl
mov
jle
jecxz
or
sbbb
dec
cld
in
aas
pop
add
adc
adc
cmc
ljmp
xor
jnp
mov
jnp
mov
mov
jecxz
pop
lret
shr
ss
pop
xchg
xor
pavgw
sub
pushf
and
mov
mov
adc
cmpl
xchg
cwtl
insl
cmpsb
and
and
xchg
out
lahf
ficoml
pop
add
mov
add
int
push
push
or
fildll
fstpt
xor
gs
jle
push
js
out
jb
jl
lock
in
call
cmp
test
or
mov
dec
add
scas
in
and
dec
mov
add
adcl
jge
das
mov
pop
in
or
loope
aam
std
repnz
ljmp
jge
sahf
stos
jp
jmp
add
sub
loope
jecxz
lds
xchg
adc
push
lahf
add
sbbb
shl
dec
mov
sbb
jns
es
pop
sarl
xchg
mov
dec
adc
jmp
push
pop
mov
dec
int3
add
mov
hlt
push
shr
stc
lret
clc
ret
popf
mov
sbb
icebp
adc
sbb
aad
dec
pop
pop
and
jns
aaa
lcall
push
dec
mov
adc
stos
lea
rolb
inc
out
mov
out
mov
sub
push
js
mov
cmp
and
pop
stc
fldcw
xor
jae
scas
sbb
cwtl
push
dec
aaa
fistpl
sbb
ret
std
repz
imul
mov
and
out
jl
repz
inc
imul
sahf
scas
mov
xor
addr16
mov
mov
mov
out
lret
and
adc
cmc
jmp
dec
cmc
ja
jg
sub
jnp
lock
daa
addr16
aad
inc
pop
xorb
cli
cmc
xchg
lahf
push
lods
xchg
hlt
int
pop
or
subl
stc
std
pop
loope
sti
dec
cltd
lcall
jne
xchg
or
mov
cmp
lcall
mov
pop
xchg
and
outsb
mov
jmp
in
cmc
push
xchg
jecxz
popa
cld
aam
movsb
adc
sbb
or
enter
fildll
idivl
sbb
sbb
inc
int
cs
lea
dec
xchg
sar
int
push
mov
lock
hlt
das
adc
test
xchg
out
inc
inc
xchg
sbb
xchg
insl
sarl
push
repnz
roll
mov
mov
push
mov
jecxz
push
clc
in
aaa
fstl
or
mov
mov
ja
movsl
mov
orb
lock
mov
call
les
push
and
sarl
loopne
mov
mov
dec
int
in
pop
imul
rolb
in
mov
loop
add
mov
mov
in
dec
pop
aas
cwtl
cmc
repnz
dec
rcrb
add
imul
cmp
xorb
loope
cmp
sbb
data16
push
bnd
cmp
adc
out
and
add
or
pop
fs
or
mov
sbb
cmp
std
cltd
xor
leave
mov
andb
xchg
sbb
cmpsb
xchg
ret
push
sub
lret
shlb
mov
ss
inc
or
call
test
loopne
push
mov
or
mov
ret
add
sub
cli
cmpsl
in
mulb
daa
jns
add
and
cmpsb
movsl
xor
add
or
lods
aaa
gs
xchg
and
or
cmc
pop
or
pop
test
cld
stos
sbb
mov
xchg
mov
mov
pushf
mov
rcrl
sbb
lods
cli
lock
and
call
mov
adc
add
subb
sub
xorb
add
sbb
mov
jae
jns
jg
fs
leave
dec
pop
lret
stos
dec
lea
movsb
in
ljmp
addr16
and
dec
cmp
push
or
icebp
fisttpll
sti
clc
clc
xchg
pop
sti
imul
sbb
jl
add
icebp
adc
pop
xchg
or
and
popa
mov
dec
cmc
loop
pop
popa
xchg
xchg
cmp
push
cld
cltd
dec
mov
xchg
out
adc
cmp
push
sbbb
div
xchg
idivb
stos
and
cld
lock
ds
cld
inc
repz
cltd
xor
adc
dec
stos
andl
mov
xor
add
mov
stos
push
cmp
pop
mov
call
dec
mov
stos
out
jbe
dec
push
divl
mov
jne
cwtl
dec
or
pop
push
mov
test
mov
pop
inc
outsl
test
pop
ljmp
xor
mov
add
and
movsl
push
push
add
lahf
mov
data16
pop
js
insb
push
orl
sbb
mov
pushf
add
push
stos
mov
inc
mov
push
add
cwtl
popf
push
xchg
dec
xor
cmpsb
and
cmp
mul
scas
cli
enter
bound
test
cmp
mov
in
test
out
and
fcmovb
stc
dec
fs
push
loop
mov
dec
bnd
and
mov
sahf
pop
mov
fs
and
mov
push
scas
test
fnstenv
stos
shl
cmp
add
fidivs
sbb
movsl
mov
imul
sub
rorb
jns
scas
mov
lret
add
std
int
lret
xchg
push
dec
or
test
stc
add
out
sbb
je
jge
xchg
sub
jp
insb
fadds
sbb
pushf
movsl
dec
les
ja
jge
in
imul
into
pop
lds
imul
cmp
ja
mov
stos
loopne
inc
push
loopne
cmp
jge
jbe
mov
stc
loop
out
cmp
aad
jl
icebp
into
out
push
int
inc
jo
mov
dec
test
pop
xchg
lret
sti
in
test
stos
je
call
and
inc
fsubl
mov
push
loope
jbe
lret
add
pop
addr16
sbb
jne
xchg
fxch
jae
negb
mov
jle
push
cmp
pop
lcall
mov
jae
sbb
push
cwtl
mov
jmp
xlat
or
jnp
push
push
mov
in
imul
negb
ss
cli
pusha
sbb
push
test
push
fldcw
out
mov
loop
adc
xchg
mov
ljmp
or
cld
repnz
scas
sbb
xchg
jg
jecxz
bound
mov
int3
xchg
sbb
sbb
cld
sbb
testb
push
add
movsb
dec
inc
push
mov
push
sub
popf
and
lret
es
outsb
sbb
aas
pop
lea
xchg
shrl
je
lds
ss
idiv
jmp
cmp
or
dec
ljmp
dec
xchg
dec
mov
test
sub
aaa
addr16
cmp
icebp
pusha
lea
sub
ret
cmpsb
add
fs
mov
scas
lock
rol
xor
sbb
and
cmpsl
fstps
cmp
push
addr16
mov
or
push
movsl
jle
and
sub
dec
ljmp
in
dec
sub
xchg
or
gs
xor
adc
fidivs
rcrb
add
stc
xchg
sahf
stos
cmp
addr16
dec
ficompl
fwait
sub
pop
out
in
les
mov
mov
js
movsl
aam
mov
lret
dec
int3
or
add
adc
mov
imul
jne
mov
mov
pop
fiadds
or
cld
mov
adc
test
popf
int
loopne
in
fnsave
fnstenv
mov
pop
adc
push
movsb
mov
mov
in
arpl
nop
xor
int3
dec
or
leave
dec
loop
or
test
ret
dec
xchg
lret
sub
ds
sub
dec
iret
shl
sarb
cmp
add
dec
test
mov
mov
inc
push
shrl
or
jo
push
inc
jecxz
scas
hlt
out
mov
loope
mov
pop
shl
repz
je
xor
int3
loopne
mov
sub
pop
repz
in
cmp
mov
orl
es
rcll
stc
dec
cmp
mov
sub
sahf
bound
mov
sub
mov
in
lcall
inc
mov
test
or
test
jbe
fsubrs
sbb
jl
mov
lahf
xchg
insl
mov
jmp
and
scas
ret
loop
push
loope
xor
mov
outsl
dec
repz
movsb
sub
add
and
iretw
arpl
jb
cmpsl
frstor
cmp
loop
fstp
dec
fbstp
sbb
scas
repz
fildl
sti
jno
aaa
ds
adc
push
pop
rcll
mov
aaa
cmp
jle
gs
loope
lock
mov
cwtl
pop
push
lock
icebp
inc
sbb
sub
out
push
lock
test
xchg
popf
push
je
sub
je
xorb
push
ljmp
or
mov
jl,pt
fs
sarb
add
pop
arpl
mov
adcb
movsl
and
dec
mov
test
push
mov
notl
adc
enter
je
mov
pop
cli
add
scas
out
jle
jl
out
loopne
lea
mov
add
addr16
adc
mov
pop
cmp
xchg
push
xchg
cmpsb
daa
pop
loope
cmpsb
jl
xor
ljmp
jbe
in
imul
xchg
ret
dec
test
add
mov
cld
xchg
cmpsl
insl
movsb
jl
push
jg
jne
jg
les
scas
dec
add
aam
push
pop
adc
sarl
pop
dec
push
mov
fdiv
mov
jns
inc
sbb
stos
ficoml
jns
stos
in
and
mov
into
pop
pusha
mov
jge
les
mov
aad
rorl
sarb
imul
xchg
sub
mov
add
mov
jecxz
sbb
jge
fwait
mov
ficoml
dec
aaa
or
adc
add
jo
sbb
mov
loope
xor
cmp
push
sub
fwait
or
inc
addr16
cmp
stos
pop
in
xchg
ja
inc
mov
mov
or
mov
clc
sahf
push
js
test
xchg
add
sbb
mov
cmpsl
mov
jno
xchg
scas
lock
std
mov
fidivrl
mov
mov
mov
jecxz
inc
jbe
in
pop
lock
int3
jmp
dec
call
cwtl
inc
int
sub
aam
aas
dec
mov
int
xchg
add
rorb
pop
inc
iret
jno
jmp
adc
ror
jp
out
ror
push
xchg
std
mov
hlt
lock
add
das
adc
fiaddl
movsl
pop
int
xchg
bnd
jns
neg
stc
bound
ret
scas
scas
fmul
mov
or
repnz
sar
dec
ret
xor
test
fisubrl
jbe
std
push
jmp
jmp
jns
cmc
in
pop
ret
fistpll
lods
das
insb
ficoms
gs
lods
sbb
sub
scas
mov
ss
xchg
push
test
repnz
mov
faddl
sub
jp
sub
or
push
daa
push
fisttpll
jnp
scas
fmull
mov
fcoms
adcb
sti
or
ljmp
in
xchg
jecxz
inc
in
sbb
mov
push
scas
push
sbb
cmpsl
mov
xor
lahf
gs
out
pop
push
scas
sub
test
and
jns
out
dec
mov
mov
sub
aas
stc
test
cmpsb
dec
dec
scas
mov
iret
add
movb
add
aaa
ss
xchg
stos
cld
adc
jl
insl
rclb
test
xchg
in
rcr
sub
imulb
fsubl
xchg
aad
mov
into
add
push
fisttpl
scas
jg
loope
loope
mov
mov
test
stos
cmp
shll
jb
sub
jmp
cwtl
stos
daa
test
mov
out
and
pushf
push
in
mov
mov
push
push
mov
ret
xchg
and
adc
test
xchg
mov
cli
jo
loope
mov
add
push
and
mov
mov
das
pop
push
add
in
add
jmp
inc
rcrb
aad
outsb
add
cli
mov
jbe
rorb
mov
mov
sbb
outsb
repnz
xor
fs
mov
sub
fnstenv
loope
xchg
jne
sub
imul
add
push
stos
sub
and
or
jae
sar
adc
sub
out
or
cld
mov
in
mov
sbb
into
js
dec
in
dec
cld
inc
jg
repz
inc
push
sti
xchg
mov
sub
jae
stc
sbb
mov
dec
ret
push
test
sub
xchg
pop
mov
out
rcll
insl
dec
adc
loopne
cwtl
push
into
mov
pusha
dec
scas
in
lds
shlb
dec
pop
fcomps
movsb
xchg
pop
fsubl
repnz
pop
push
mov
inc
and
in
movsb
test
cmp
jne
outsb
shll
pop
andl
mov
cwtl
and
mov
mov
imulb
imul
popa
cli
pusha
inc
mov
out
xchg
stc
adc
adc
xchg
negb
xchg
mov
iret
dec
sub
mov
ja
jmp
xor
gs
push
or
subl
add
push
pop
and
mov
outsb
push
das
outsl
in
xchg
adc
push
inc
push
mov
aam
in
jp
jbe
cmc
movsl
leave
sub
mov
into
dec
cmp
scas
out
xchg
pop
faddl
loope
and
jae
test
das
clc
mov
push
dec
jmp
add
pop
xlat
push
xchg
lods
mov
xor
bound
xchg
fbld
stc
dec
loopne
ret
add
mov
int3
xchg
mov
mov
fwait
mov
enter
leave
sbb
cli
int3
test
mov
xor
mov
test
pop
lcall
sbb
ret
jl
or
sub
lods
add
sahf
jbe
and
jmp
mov
dec
cmc
sub
dec
add
dec
insl
xchg
pusha
push
sub
sahf
push
out
loopne
cltd
push
aad
leave
push
ja
jl
mov
add
aas
pusha
movl
test
jo
mov
pushl
mov
loop
into
inc
out
loop
ret
xchg
fsub
adc
mov
aaa
xchg
inc
mov
pop
mov
push
std
lret
insb
pop
in
out
sahf
rorl
xchg
cmp
lret
mov
xchg
ret
fdivrs
push
xor
inc
add
pushf
lea
dec
out
inc
jno
leave
int
inc
movsl
fsubs
repz
ret
xchg
push
in
sbb
xchg
push
aam
lcall
bound
ret
std
loop
js
xchg
loope
push
cld
aaa
jne
sub
inc
sbb
sub
imul
cmp
je
and
add
adc
ret
hlt
push
lods
out
insl
fwait
cmp
inc
jno
push
mov
scas
mov
mov
sub
test
sbb
xor
or
pushf
mov
push
adc
xchg
inc
movsb
pop
cld
lods
inc
jbe
es
mov
mov
sbb
jge
add
sbb
cmp
dec
xchg
nop
push
mov
arpl
mov
aad
adc
insb
mov
adc
jmp
outsl
test
or
mov
lock
arpl
out
int3
shll
cmp
js
and
cmp
sub
shll
cmp
cmpsl
or
pusha
cmp
out
dec
jno
ret
mov
or
fwait
jg
fstpt
cmpsb
jb
shl
sahf
adc
js
movsb
insl
cmpsl
jo
adc
loopne
daa
ss
sub
jne
out
stos
mov
int
in
mov
jp
jmp
inc
loopne
mov
mov
es
scas
fwait
xchg
and
mov
loop
jbe
push
jns
in
in
mov
mov
mov
popf
sbb
stos
stc
lods
dec
bound
repz
xchg
push
imul
xchg
fstpl
repnz
das
jge
jns
imul
push
jge
pop
clc
jae
jmp
fs
push
testb
mov
aam
bnd
jmp
scas
mov
insl
loop
test
push
xchg
jp
xor
mov
push
push
shrb
fdiv
push
adc
aaa
add
mov
in
xchg
insl
cmpsb
lahf
fisubl
gs
shr
out
test
inc
movsb
mov
adc
ja
push
stc
mov
push
cmpsl
mov
repnz
jno
ss
pop
cwtl
push
push
call
out
lods
pop
hlt
out
mov
dec
dec
leave
in
mov
add
fidivrl
lods
clc
sbb
xor
testb
movsl
mov
pop
jg
jne
mov
fistpll
stc
test
ss
pop
pop
mov
xchg
or
push
loop
outsb
push
xchg
sbb
xchg
push
dec
inc
adc
iret
je
sar
lahf
stc
hlt
add
mov
int3
adc
and
add
nop
mov
in
insb
add
mov
cmpl
and
ret
mov
out
jne
and
int3
add
fsub
rolb
shl
ret
and
cmp
jecxz
pop
mov
loope
xchg
xchg
push
inc
repnz
inc
mov
and
shll
xor
sub
mov
call
push
mul
mov
inc
mov
std
mov
insl
jecxz
stos
push
dec
cmp
mov
xchg
mov
xchg
imul
add
add
xor
hlt
int3
out
inc
fidivl
inc
loop
out
popa
mov
icebp
maskmovq
negl
cmp
outsb
fmul
dec
cwtl
dec
xor
sbb
mov
sbb
iret
xchg
pop
lahf
int
loopne
lret
iret
and
inc
aas
push
subb
inc
mov
mov
lds
repnz
mov
inc
adc
mov
sbb
mov
scas
mov
pop
xchg
push
sbb
inc
jecxz
jmp
ret
jbe
out
cmp
movl
xchg
js
lock
sbb
test
mov
inc
xchg
dec
jmp
mov
icebp
lock
add
push
mov
jp
pop
xchg
add
in
cld
fwait
test
nop
fstpt
mov
sahf
cwtl
outsb
sbb
push
test
inc
repz
and
xlat
inc
inc
movsl
fildl
sub
jbe
mov
testl
add
adc
out
xchg
int
dec
ret
test
sbb
pushf
leave
xchg
popf
add
cmpsl
jo
lods
mov
sub
je
nop
cli
pushl
mov
dec
je
or
stc
gs
lods
sub
dec
popa
movsb
repnz
xchg
lret
fildll
cmp
mov
das
rclb
or
out
mov
push
and
sub
pop
jno
mov
fimull
pop
not
in
cmp
and
inc
cwtl
jl
jp
mov
repnz
outsb
mov
adc
sbb
xor
cmp
xor
jnp
jg
bound
ret
aad
inc
cltd
or
cmp
cli
pushf
sar
int3
pop
inc
mov
inc
fucomp
push
xchg
test
lods
test
in
adc
int
adc
adc
mov
push
xlat
inc
leave
add
and
scas
push
outsl
push
xchg
ds
enter
pushf
clc
cwtl
stos
xor
adc
dec
dec
out
xchg
fisttps
sbbl
cmp
movsl
adc
push
sahf
sbb
sub
dec
bound
sbb
push
cmp
xchg
jge
push
mov
imul
aas
push
rcrb
xor
xchg
sub
mov
mov
ficoml
in
int3
lods
cmp
mov
xlat
adc
mov
push
xor
in
inc
inc
mov
or
daa
jo
jg
sub
std
sbb
mov
lea
dec
pop
hlt
pop
push
lock
dec
fnstsw
pop
in
mov
icebp
popa
mov
lret
std
cli
stos
testb
and
mov
jno
inc
loope
lcall
stc
pop
fcoml
and
stc
inc
push
ror
arpl
sub
cwtl
inc
out
out
push
adc
mov
cmp
lcall
xlat
sbb
fsubp
adcl
inc
jae
addr16
sub
subl
jle
mov
mov
test
mov
repnz
jno
inc
mov
aad
push
cmp
testl
jne
ret
repz
andb
ja
adc
mov
mov
xchg
jnp
or
sbb
mov
ja
in
aad
mov
jb
out
rcrb
outsl
dec
je
out
xchg
cli
push
mov
iret
mov
xchg
fwait
mov
std
icebp
jb
hlt
push
in
cld
mov
xchg
mov
and
aas
pop
lcall
sarb
cmp
or
jl
jp
lahf
xchg
mov
andl
sbb
cwtl
add
add
popf
inc
add
cld
iret
jmp
cmp
test
ja
sahf
lds
mov
fs
dec
aaa
mov
mov
xchg
sbb
sub
xchg
mov
or
test
inc
andl
lods
popa
and
dec
pop
gs
repnz
xchg
fstpl
scas
push
adc
mov
and
out
cmp
pop
xchg
cmc
out
sbb
pop
sbb
clc
sub
inc
lods
ret
xchg
cmc
lahf
mov
jae
je
aaa
out
xlat
insb
or
xchg
mov
popf
xchg
add
mov
xchg
test
in
cmp
es
dec
hlt
in
fnstenv
mov
aad
loop
shrl
xchg
adcl
mov
adc
dec
or
cmp
sbb
mov
out
lea
lock
ja
fsubrs
addr16
mov
xchg
sub
in
pop
jmp
repnz
ret
insl
push
scas
int
lcall
push
dec
cwtl
mov
jne
xchg
jecxz
repnz
cli
dec
and
sub
pop
scas
imul
pop
movsl
pop
aas
arpl
fmuls
cmpsl
mov
pop
mov
push
fadd
insl
loope
xchg
shrb
adc
xor
test
jo
pop
test
clc
test
fcomip
mov
jne
icebp
idivb
stc
and
pop
xor
mov
repnz
fcomps
mov
cmpsl
add
jmp
pop
test
pop
jno
xchg
ss
adc
popf
shr
inc
cld
es
cmp
push
mov
stc
adc
mov
mov
bnd
xchg
sub
std
xchg
push
out
sbb
daa
dec
mulb
sbb
outsl
mov
outsb
imull
inc
dec
mov
pop
out
cmp
nop
cmp
fmull
subb
mov
es
and
stc
sub
jg
or
aad
dec
jge
mov
fcomps
imul
push
pop
pop
dec
mov
test
jno
pop
repnz
loopne
push
xchg
push
push
and
xchg
mov
mov
dec
inc
int3
add
cld
xchg
cld
dec
xchg
mov
jp
sahf
jb
xchg
out
lret
idiv
push
in
push
rolb
in
mov
and
mov
or
and
outsl
fidivrs
push
insl
addr16
lock
data16
std
pusha
adc
jne
pusha
data16
repz
mov
ret
mov
cmp
push
in
xchg
mov
rcl
sub
add
sti
pop
ds
movb
xchg
fwait
pop
mov
int
mov
xor
push
cmp
mov
mov
pop
and
push
cmp
test
cmp
test
pop
test
jecxz
in
pushf
roll
loop
repz
fldt
dec
dec
mov
cmp
dec
ja
repz
ret
inc
mov
daa
xchg
das
sbb
pop
mov
or
inc
push
cld
mov
mov
test
push
sbb
call
adc
ljmp
lret
mov
hlt
scas
fcoml
jae
fnsave
jb
mov
jmp
clc
daa
fisubrs
or
sub
roll
data16
add
ret
inc
scas
mov
fstpt
iret
mov
cld
das
dec
jmp
xchg
jp
add
enter
cld
xchg
dec
push
in
scas
mov
in
movsl
jmp
xor
sahf
inc
add
lcall
xchg
cmpsb
jb
adc
mov
mov
lcall
icebp
or
jbe
mov
push
mov
cmpb
movsl
enter
or
scas
adc
adc
xchg
scas
fdivl
in
jmp
ds
mov
loopne
adc
xor
in
push
repnz
pop
cld
push
loop
ja
dec
add
mov
xor
push
in
shrb
popa
push
movsl
mov
popf
jg
sarb
xchg
dec
mov
lcall
add
add
inc
nop
lods
imul
cs
movsb
sbb
jg
dec
push
lcall
and
add
add
adc
fbld
stos
dec
cmp
sti
mov
out
and
sahf
icebp
mov
clc
sub
in
int
add
pop
push
jl
in
pop
lock
push
int3
movsb
test
mov
pop
pop
cmp
scas
stos
mov
stc
stos
mov
and
std
int
cmp
dec
stos
aad
jbe
scas
xchg
das
xor
xchg
inc
fildll
add
les
lods
add
popf
adc
rolb
cwtl
lret
fucomip
test
add
lcall
xor
adc
ret
fsubs
mov
add
lahf
mov
sub
jae
push
add
fdivp
dec
idivb
cmc
in
dec
clc
cmp
jmp
stc
and
mov
mov
outsb
ja
cmp
xchg
or
cmp
pop
cmp
fmuls
std
add
mov
dec
xchg
mov
adc
jl
jo
adc
sub
fmul
push
cmp
mov
sub
dec
test
outsb
imul
adc
jbe
jbe
mov
pop
mov
push
or
cmpsl
inc
mov
add
in
add
std
mov
out
in
or
outsl
mov
xor
mov
xchg
dec
add
dec
mov
sbb
pushf
mov
test
orl
push
aad
inc
adc
mov
insb
mov
aam
sarl
rol
sub
dec
mov
enter
inc
clc
cwtl
lret
cltd
pop
popf
stos
or
pop
mov
enter
out
mov
mov
xchg
dec
mov
or
in
cmp
push
xor
mov
or
lds
jle
xor
mov
stc
xchg
or
push
ret
lods
aad
popf
adc
sbb
dec
lcall
jbe
lds
mov
adc
sbb
pop
push
jne
inc
orl
ret
in
call
pop
add
in
xchg
lods
gs
int3
xor
cld
dec
lret
mov
ds
xchg
cmp
bound
sbb
push
mov
test
xor
xchg
mov
mov
jl
xchg
icebp
jnp
ljmp
imul
xor
push
inc
xor
fucom
pusha
lret
mov
xchg
dec
stc
mov
fidivl
arpl
lock
push
jg
mov
repz
addr16
and
push
add
sub
aas
incb
sti
mov
lahf
cli
sbb
mov
les
lahf
test
loop
test
cmp
movsb
test
add
jp
mov
pop
out
inc
jge
call
xlat
mov
rolb
idivl
mov
cmpsl
test
lahf
inc
jns
mov
inc
xchg
push
jo
cmp
sub
sbb
imul
and
arpl
pop
pop
dec
lret
test
out
push
mov
lcall
jmp
sub
dec
es
or
jl
mov
icebp
inc
add
in
aaa
ret
lcall
inc
fdivrs
mov
daa
decb
subl
scas
cltd
faddl
movsb
mov
or
imul
imul
repnz
and
push
xor
test
xchg
sahf
cmp
mov
hlt
lret
cli
inc
sub
push
jp
xchg
and
mov
repnz
mov
inc
call
in
test
mov
sbb
pop
sub
pop
movsl
loop
dec
roll
push
adcl
jno
or
popf
mov
pop
cmpsl
sub
and
xchg
mov
mov
into
stos
addr16
ja
sbb
push
xor
jp
iret
sarl
push
sub
lds
adc
and
scas
sbb
jge
mov
push
fisubs
lock
dec
dec
cmp
push
pop
std
mov
adc
add
xchg
mov
data16
pushf
pop
hlt
dec
sub
dec
push
pop
popf
xchg
in
int3
push
outsb
and
pop
pop
dec
or
dec
clc
outsb
mov
das
mov
scas
popf
test
or
jge
ja
xor
sbb
sbb
push
mov
lret
int3
jg
fadds
inc
gs
push
push
bound
mov
in
cmp
jmp
lds
ret
sbb
in
xchg
or
xor
or
fisttps
mov
int
or
add
cmp
ljmp
es
pop
in
adc
adc
lea
enter
or
push
ror
add
movsb
ret
psllq
xchg
jbe
aaa
inc
shl
cmpsb
dec
fcoms
jg
vpextrw
sbb
and
jg
mov
inc
int3
je
in
movsb
inc
call
int3
xor
lret
push
add
mov
pop
idiv
push
je
iret
jg
mov
jmp
inc
sub
shll
or
mov
test
dec
cmp
cmp
dec
outsl
pushf
mov
xor
mov
mov
outsb
and
imul
in
sub
lahf
lods
lds
in
cmp
mov
push
stc
lock
test
divl
pop
ds
fs
in
jge
in
push
xchg
add
jne
sti
scas
mov
and
cmp
aas
add
addr16
inc
and
jns
inc
adc
repnz
or
aaa
cltd
jl
cltd
push
push
rcll
aaa
dec
nop
jl
mov
leave
cwtl
cwtl
mov
imul
lret
push
or
cld
jl
aam
in
sahf
jnp
mov
xor
loop
add
mov
popf
fidivs
pop
stos
mov
mov
inc
xorb
mov
sti
cmpsb
frstor
dec
mov
fndisi(8087
jb
mov
and
xor
sbb
call
add
sbb
mov
dec
aad
dec
test
xor
imul
imul
push
push
push
mov
mov
push
add
mov
pop
fldt
scas
cmp
enter
imul
push
push
das
add
arpl
jp
mov
rolb
dec
test
xor
insl
add
mov
lret
mov
jge
xchg
pop
aaa
test
xor
cld
cmp
mov
mov
jg
out
xchg
mov
addb
movl
mov
imul
jo
add
ds
and
or
xlat
aam
mov
cltd
mov
lds
mov
mov
or
dec
mov
pop
xchg
push
andl
das
add
push
cli
push
repnz
jle
lret
in
dec
add
xchg
test
inc
adc
sub
jbe
dec
pop
repnz
and
mov
ja
cmp
mov
push
mov
daa
aam
pop
ss
push
dec
aas
leave
xchg
or
rol
pushf
pop
add
cmp
mov
push
dec
aam
adc
std
pop
stos
xor
push
aas
sub
mov
psubsw
pop
xor
xchg
imulb
out
lahf
in
icebp
outsb
loopne
mov
add
ljmp
mov
xchg
ret
scas
clc
and
sbb
jns
mov
jns
pop
test
jge
dec
fwait
std
sbb
and
int
jb
js
inc
arpl
mov
inc
add
mov
movsl
fistps
xor
pop
sub
sbb
cmpsl
insb
xchg
dec
inc
dec
push
sub
cmpsw
mov
inc
mov
into
cmp
mov
addr16
sti
shrb
nop
fnsave
inc
push
and
ret
jle
cmpsl
out
cmp
xor
jns
mov
pop
stc
mov
inc
or
shlb
ret
fsubr
cmp
inc
icebp
push
cmpsl
scas
clc
scas
xlat
inc
push
jmp
push
push
push
jmp
add
cmp
outsb
mov
and
dec
push
and
lret
jo
fldcw
jp
leave
xchg
sub
cmp
push
in
ljmp
and
pushf
cmp
mov
aam
aam
cmp
sbb
sub
bnd
jge
inc
ja
mov
and
cmp
sub
sbb
fisubrl
sub
repz
iret
mov
cmpsl
pop
push
fs
jmp
adc
out
pushf
or
out
loop
call
mov
sbb
repz
aam
mov
out
sub
mov
and
jmp
xorb
movsl
aam
jae
mov
fs
icebp
addr16
jns
mov
xchg
xor
jmp
xchg
je
outsl
sub
test
mov
or
ret
cltd
aad
xchg
jb
or
jmp
lods
mov
mov
test
test
loopne
stos
rcrb
int3
jmp
and
int3
fistpl
cmp
or
mov
imul
mov
mov
fwait
mov
dec
jnp
mov
notl
sbb
movsl
xor
mov
xchg
jbe
jmp
and
lahf
adc
pop
adc
ret
gs
cmp
xchg
in
fdivs
sbb
enter
mov
jns
add
hlt
test
les
push
mov
fldt
inc
or
push
mov
sbb
xor
es
ja
cmp
sub
xor
push
fsubrs
mov
xchg
enter
lahf
xor
mov
scas
popf
fcompl
stos
push
mov
push
push
int3
dec
xchg
push
xchg
adc
loopne
jecxz
pop
lret
inc
jno
inc
insb
mov
jnp
adc
pushf
cmc
lahf
fs
sub
mov
aam
sub
outsb
xchg
xchg
negl
aaa
jmp
divl
pop
bound
lods
enter
add
mov
aam
movsl
les
rorl
mov
cmp
dec
sub
push
dec
cmp
les
test
dec
sahf
call
out
fwait
mov
mov
iret
daa
mov
rclb
and
test
repnz
ss
inc
adc
in
mov
int
cmpsb
add
mov
repz
cmp
push
xchg
testl
mov
leave
jmp
jb
out
jnp
xor
imul
leave
pop
dec
mov
jnp
jns
cmp
xchg
sbb
mov
cmpsl
cmp
insl
in
cli
jg
add
in
out
shll
mov
dec
mov
mov
sbb
jle
outsl
scas
inc
mov
mov
and
in
pop
sub
mov
sbb
lea
movsl
xchg
sbb
mov
and
bound
rolb
pop
cmp
mov
cmp
inc
filds
add
mov
jno
decb
into
outsl
pop
out
fimull
lahf
pop
popf
into
and
jp
jb
xor
ffree
int
mov
cmp
roll
adc
cmp
rcrl
xchg
mov
aad
mov
lods
ja
xchg
subl
mov
add
insl
cmp
push
lods
movsl
adc
mov
lcall
cmpsb
cld
push
and
mov
xorl
imul
inc
mov
sbb
or
rol
mov
cmp
movsl
jo
inc
sbb
ficoms
dec
push
mov
and
mov
push
mov
or
mov
push
mov
stc
mov
cmp
movsb
das
mov
xchg
jecxz
out
mov
mov
repnz
xchg
fmuls
xchg
add
or
in
test
adc
dec
fmul
lods
add
dec
ror
jecxz
inc
inc
inc
lods
mov
repz
pop
leave
mov
jecxz
jne
push
pushf
mov
dec
add
xchg
cmpsl
scas
jmp
shll
add
test
sbb
shlb
sbb
out
movsb
mov
scas
mov
pop
lock
jns
in
test
int3
imul
jbe
imul
scas
xor
sbb
in
jmp
jle
stos
lods
pop
cmp
cmc
mov
loope
ds
xor
das
xor
push
mov
pusha
sub
pushf
pop
or
and
and
xchg
stos
cmp
fdivrp
int
jge
popl
mov
int
js
and
mov
adc
repnz
jle
push
xchg
jmp
xchg
sub
mov
out
bound
dec
xor
sub
lahf
gs
fsts
rcrl
imul
lret
mov
insb
add
mov
push
pop
fnstsw
imul
pop
fwait
cmpsl
subl
push
dec
scas
xchg
mov
adc
ficoml
or
push
out
call
xor
daa
in
fnsave
xchg
sahf
adcl
repz
inc
cmpsl
inc
dec
loop
negl
add
sub
popf
sub
fsubr
pop
jmp
shlb
sbb
and
movsb
je
test
call
jne
ss
mov
adc
gs
xchg
mov
in
orb
mov
mov
pop
or
push
mov
lods
ljmp
int
adc
hlt
mov
xchg
mov
xchg
test
mov
xchg
in
ja
test
sub
inc
push
lret
jge
in
pusha
in
nop
stos
iret
movsb
movsl
test
sahf
inc
mov
cmpsb
aad
push
movsb
leave
clc
mov
mov
js
push
lret
lcall
stos
xchg
mov
popf
daa
xchg
in
loopne
cmp
jg
inc
lahf
and
sub
roll
es
adcb
push
shl
data16
add
lret
inc
mov
movl
mov
pop
pop
fwait
sbb
mov
ja
out
inc
movsb
lahf
jl
gs
push
xor
xchg
mov
and
jg
push
in
jl
jns
cmpsb
mov
dec
rcr
jno
sbb
xchg
test
lods
ret
xor
out
imul
cmp
cwtl
adc
in
jb
rolb
scas
add
movsb
jns
push
jecxz
loop
xchg
gs
lds
pop
popl
pop
out
adc
mov
cmp
sub
inc
arpl
pop
dec
inc
les
add
push
xor
jge
mov
gs
adc
mov
add
out
leave
mov
fldcw
xchg
pushf
movsb
cmp
pop
jge
mov
and
call
dec
jmp
les
sbb
push
andl
bound
dec
cltd
nop
xor
test
fwait
mov
push
mov
adc
test
enter
imul
lock
push
in
scas
push
pop
fadd
sub
xchg
dec
test
sbb
mov
ret
in
ljmp
data16
ret
cmp
pusha
push
out
int
mov
pushf
xor
cld
lock
mov
testb
dec
leave
sbb
jns
mov
pop
add
lock
inc
mov
das
test
inc
mov
push
sbb
sub
dec
mov
test
lea
xchg
xor
aas
xchg
and
call
cltd
lcall
and
cmpsl
adc
sub
mov
and
arpl
int
dec
addr16
pop
push
repz
movsb
ret
out
andb
std
lea
stos
push
insb
jo
clc
xchg
mov
inc
pop
mov
xor
leave
sub
loopne
ds
mov
repz
imul
xchg
mov
pop
lods
and
jno
pop
repnz
scas
out
mov
sahf
aaa
aaa
cmp
int3
pop
sbb
cmp
pusha
popa
aaa
inc
cmp
pop
jns
cmp
or
ss
push
cld
fs
daa
push
mov
ret
pop
iret
adc
dec
sbb
repnz
in
adc
mov
loope
push
xlat
push
inc
jle
and
sub
call
int3
divl
mov
sub
jecxz
pop
fldpi
mov
mov
push
mov
outsb
and
jnp
cmp
adc
movsb
test
add
leave
add
les
xchg
clc
add
add
pop
pop
into
fcoms
or
pop
mov
xor
xor
decw
ja
in
jl
cmp
or
hlt
adc
or
push
in
in
in
fistl
adcl
cmp
outsl
stos
and
dec
mov
std
adc
mov
jmp
pop
inc
fs
push
push
cli
add
stos
jmp
inc
mov
add
push
xchg
mov
mov
add
cmp
push
push
icebp
push
fucomip
push
inc
test
repz
mov
sbb
sub
aam
sarb
gs
les
lea
xchg
loopne
iret
popa
out
rorb
mov
mov
subl
repz
std
mov
jge
inc
pop
add
jnp
popa
lods
shlb
mov
pop
jle
rcrb
inc
xlat
or
loop
xchg
std
loopne
sbb
lcall
repz
inc
or
int3
mov
into
xchg
xchg
sub
test
mov
jl
mov
in
cmpsb
push
pop
scas
shll
lods
inc
push
subb
lahf
jb
gs
jg
xchg
dec
or
movsb
subl
and
fsubrl
mov
lods
pop
bnd
mov
push
adc
outsb
insl
loopne
outsw
mov
mov
int
cltd
add
inc
inc
loopne
in
frstor
jb
cld
dec
call
popf
mov
popa
stos
cld
shll
stc
dec
loopne
shll
add
aaa
jae
inc
or
sti
fisubs
lods
add
cmp
inc
fwait
sbbb
push
cld
lahf
or
push
aam
cld
jg
insl
mov
mov
cmp
pushf
lcall
push
add
jb
dec
std
xor
clc
lcall
add
xor
mov
icebp
sbb
negl
push
jb
out
dec
jge
sub
sub
lods
sbb
int3
xor
jbe
js
inc
xor
xchg
mov
stos
mov
in
jbe
dec
daa
loopne
and
push
mov
sbb
ljmp
push
stos
sub
mov
sbb
cwtl
sbb
test
cltd
pop
mulb
jl
sbb
mov
xor
xor
mov
cmp
add
inc
popf
shrl
out
push
or
pop
cltd
push
pop
xchg
cmpsl
addr16
push
xrelease
mov
jle
add
mov
fprem1
push
negl
jle
int3
lds
adc
jbe
push
lods
scas
fs
sarb
inc
pop
push
in
push
or
repz
repz
adcb
push
sti
ljmp
out
ror
jb
xor
imul
mov
jbe
in
lahf
push
jp
and
and
push
int3
loopne
jmp
adc
cwtl
push
test
in
pop
mov
and
int3
ret
orl
les
add
dec
pop
int3
and
testb
sub
or
jmp
repz
mov
cmpsl
into
std
in
test
mov
outsb
fsubl
add
in
cli
loop
jae
js
in
dec
push
lock
jp
mov
and
fbstp
inc
call
xchg
imul
ja
addl
aaa
dec
jle
movsb
or
aam
ss
jbe
bound
cmp
jmp
fwait
cmc
or
out
cmpsl
push
in
iret
mov
insl
lea
sti
popf
xchg
sahf
mov
xchg
mov
cmp
out
sbb
push
mov
stc
sbb
jae
xchg
mov
and
les
je
sti
lods
adc
xchg
aad
push
mov
add
push
mov
mov
add
out
add
or
divl
xchg
lock
mov
in
mov
push
subl
mov
test
in
push
push
movb
mov
test
leave
mov
enter
repnz
ljmp
mov
mov
movsb
in
sbb
mov
and
cltd
in
repz
ljmp
mov
xchg
pop
mov
in
or
in
pushf
repz
in
push
push
popf
sub
out
ljmp
or
mov
ljmp
dec
lcall
add
nop
int3
or
add
xchg
lock
jl
mov
xchg
popf
test
pop
repz
in
orb
fcoml
mov
in
push
arpl
cltd
mov
addr16
ljmp
enter
rcrb
dec
xchg
in
popf
mov
mov
mov
hlt
xchg
jle
mov
in
dec
divl
xchg
icebp
bound
loop
jg
mov
mov
test
mov
scas
insb
mov
cltd
add
mov
outsb
fstpl
inc
lods
call
mov
mov
stc
loope
push
add
mov
fwait
addl
mov
sbb
adc
nop
sbb
xor
mov
mov
mov
repz
ret
sub
fidivrs
mov
dec
aad
jecxz
add
push
lock
filds
pop
sbb
add
adcl
outsb
xor
inc
out
pop
dec
arpl
fs
mov
cmp
insb
out
sti
arpl
outsl
cmpsl
dec
mov
jp
inc
movsb
cli
call
pop
mov
add
mov
mov
or
aad
sbb
jge
sti
jo
dec
mov
int
mov
fsubp
pop
add
repnz
sahf
imul
div
int3
stc
adc
push
bound
push
jp
mov
dec
push
lcall
push
fists
mov
out
jp
mov
mov
sbb
psraw
cld
and
mov
out
pop
push
xchg
sbb
notb
mov
or
cmc
mov
push
sub
mov
xor
jbe,pt
insl
dec
rcrb
xlat
dec
mov
mov
lea
cmpsb
lret
ja
pop
cld
movsl
push
xchg
jne
xchg
lret
rcll
mov
sbb
je
cmp
cwtl
scas
out
pop
or
mov
adcb
stc
jle
jo
pop
inc
test
ret
popf
jne
inc
adc
pusha
enter
js
test
fs
fists
mov
sub
adc
imul
adc
scas
mov
xchg
sbb
scas
or
push
sbb
test
xor
sarl
jecxz
cmc
inc
dec
lea
xchg
ret
adc
mov
fldcw
test
into
cmp
xor
mov
sub
sub
mov
or
loopne
sahf
popa
xor
jg
add
push
test
mov
mov
or
movsb
stos
roll
popa
mov
sub
pop
sbb
cmpsl
loopne
xchg
bound
xchg
out
and
addr16
mov
xor
add
mov
mov
scas
and
sarl
jg
mov
xchg
lea
loope
iret
repz
out
push
pop
xchg
mov
cmp
jg
fdivl
testb
mov
mov
inc
xor
stc
popa
popf
cmp
mov
mov
pusha
push
mov
nop
inc
in
pop
pop
gs
std
jp
int3
cmc
xor
fcoms
pushf
rcrb
xlat
sbb
test
push
loop
lahf
lahf
dec
dec
cmp
fs
pop
cmp
lock
movsb
arpl
pop
sbb
imul
sbb
jns
or
fidivrs
mov
mov
sarb
jae
fwait
mov
sbbl
imul
xchg
mov
fdivrl
inc
pop
lret
fnstsw
jecxz
call
push
cltd
out
dec
ret
loopne
add
stos
sbb
iret
dec
xchg
inc
dec
movsb
mov
adc
sub
addr16
push
repnz
inc
mov
sbb
lahf
fdivr
in
loopne
mov
jb
cwtl
mov
out
gs
das
push
add
and
movb
enter
sbb
popf
cltd
stos
jge
mov
xchg
sub
or
daa
test
mov
push
std
jge
mov
sub
movsb
or
addr16
pop
push
xor
mov
std
repnz
scas
in
stos
push
inc
std
push
add
fmull
jae
fwait
mov
stos
jmp
inc
int3
or
dec
je
jmp
push
xor
xchg
or
dec
jmp
clc
push
mov
cmc
movsb
push
pop
jge
std
arpl
pop
add
jne
dec
xor
jae
sbb
xchg
pop
test
cld
sub
mov
and
jno
in
insb
mov
push
out
aas
adc
add
sahf
pop
cmp
mov
ss
ljmp
xlat
or
pop
icebp
pop
cs
adc
add
sub
sub
imull
fdivl
arpl
xchg
rorb
jge
jb
scas
ret
jl
sbb
sbb
add
and
fwait
cmc
add
jle
xor
or
xor
sbb
mov
push
inc
xchg
adc
push
mov
mov
dec
fimull
int
inc
cmp
jno
cli
ficomps
shll
cli
xchg
or
jecxz
test
sub
jg
cmp
lret
pop
pop
adc
stc
and
sbb
lahf
fildll
data16
mov
xlat
test
and
pop
mov
lahf
mov
repnz
lds
lahf
repz
nop
fists
mov
loop
xchg
outsb
mov
push
push
or
fldenv
insb
lds
adcb
lods
shrb
lcall
mov
sti
xchg
pop
gs
addb
int
sbb
pop
aam
inc
jp
lods
jl
sti
jo
mov
cmp
das
add
insb
bound
inc
cmp
jno
lods
dec
mov
cmp
ss
dec
andb
cmp
ja
icebp
adc
lods
test
and
les
jle
not
addr16
sahf
and
cmp
mov
mov
jo
jae
loopne
xchg
jecxz
sbb
imul
aad
icebp
xor
fbld
lret
movsb
bound
mov
push
xor
mov
mov
test
aaa
add
lds
mov
pcmpgtw
xchg
push
fdivrl
sub
into
xchg
mov
sub
lret
jae
xchg
xchg
push
in
rcrb
not
jmp
scas
sbb
out
mov
inc
mov
enter
xor
mov
rorl
add
cmpsl
sar
test
mov
mov
dec
scas
push
lock
imul
push
inc
mov
adc
inc
xchg
mov
xor
xchg
mov
inc
sbb
icebp
adc
pop
cltd
aam
jbe
mov
stc
outsb
daa
lock
sbb
add
sbb
clc
push
push
hlt
mov
dec
je
stos
insb
mov
cltd
xor
xor
mov
fwait
add
les
jl
in
pop
mov
in
mov
jno
dec
inc
mov
movsb
mov
ljmp
inc
outsb
andb
loop
sub
push
aam
int3
add
inc
out
dec
xchg
and
adc
mov
sbb
push
dec
mov
jbe
popf
and
lcall
add
pusha
out
ss
test
mov
and
addr16
mov
sbb
insl
decb
leave
sub
sahf
stos
mov
movsl
pop
xor
jmp
out
int3
dec
popf
bound
sub
cmpl
aam
lock
xor
dec
and
xlat
popa
rolb
int3
xor
push
out
aaa
stc
and
testl
push
cwtl
sbb
iret
int
or
nop
movsb
stc
loope
xor
loop
stos
int
js
in
jo
fiaddl
mov
dec
add
iret
insb
daa
mov
rorl
xor
mov
mov
push
cmpsl
xchg
inc
inc
or
mov
xchg
dec
pop
mov
pusha
mov
icebp
inc
and
add
lcall
mov
pop
lods
int
lret
sbb
inc
loopne
outsl
cmpl
mov
icebp
cli
pop
xchg
push
cmpsl
lahf
dec
sahf
imul
push
adc
cmpsl
jp
cmp
arpl
ljmp
pushf
and
in
push
add
pop
adc
in
pop
into
or
jnp
adc
xchg
lret
sub
xlat
psraw
fs
movsb
into
sub
dec
lcall
out
cmc
out
std
sbb
fwait
push
in
adc
pusha
xor
iret
syscall
sbb
lcall
and
test
xchg
cmc
repz
shr
lahf
pop
fs
outsl
xchg
xchg
adc
push
mov
call
repz
andl
jmp
xchg
test
mov
inc
xchg
jg
std
mov
popf
pop
mov
inc
add
add
int3
mov
notl
mov
fstpl
ret
out
es
mov
or
push
and
sbb
aaa
or
inc
adc
add
cmp
cmp
les
rcrl
xor
fldz
jmp
dec
rol
pop
xchg
mov
jbe
pop
cmp
mov
rol
mov
xor
push
and
or
cmp
xorb
negb
add
lret
idivl
insb
sahf
lret
mov
mov
rcrb
insb
fisubl
shrb
add
pop
movsl
fldt
js
call
sub
adc
push
push
je
sub
ret
jns
in
inc
loop
movsl
dec
dec
pop
pop
add
cld
hlt
es
jb
roll
fisubrs
sub
mov
push
aad
xor
divb
hlt
out
mov
jns
xchg
call
outsl
call
push
sbb
arpl
das
cli
xor
ljmp
mov
rcrb
or
sbb
ss
pusha
jae
push
lods
into
mov
lahf
dec
stos
ret
inc
push
divl
push
push
cmpsb
add
pop
and
stos
adc
mov
mov
sahf
dec
xor
cld
pushf
arpl
int3
xchg
mov
push
test
lea
stos
mov
and
mov
aaa
stos
mov
test
jmp
test
jg
dec
sub
push
jl
cmp
shrb
stc
inc
pop
lock
repnz
scas
inc
mov
pop
pop
ljmp
sub
dec
lock
adc
xlat
mov
ljmp
jbe
adc
jno
sbb
std
lahf
rcrl
jp
adc
mov
cmc
enter
xchg
inc
xchg
sub
loop
mov
mov
mov
and
dec
dec
in
ja
loop
xchg
cli
idivb
in
push
dec
jae
adc
mov
cli
jnp
dec
push
mov
cwtl
mov
sbb
push
add
mov
cmpsb
es
fpatan
xchg
pop
jg
add
inc
mov
xorl
or
test
test
jg
mov
mov
mov
ds
pusha
mov
nop
push
jb
jo
aam
or
fistpll
js
mov
daa
test
inc
repnz
lret
push
das
push
mov
push
jno
and
outsl
xchg
xchg
adc
outsl
mov
imul
fdivrs
sbb
add
mov
negl
js
push
mov
push
add
hlt
pop
or
lock
sub
hlt
loope
mov
je
lcall
int3
cmc
mov
or
movsb
stos
dec
xchg
inc
loopne
xchg
xor
push
mov
jae
sbb
lods
sub
lcall
add
mov
testb
sti
notb
mov
dec
cwtl
mov
in
mulb
or
and
mov
dec
xlat
stc
mov
xor
mov
dec
and
pushf
push
sub
roll
pop
rcll
cwtl
lea
scas
data16
xchg
xchg
ja
mov
pop
js
mov
inc
and
aaa
add
cmp
shl
imul
loope
iret
mov
mov
sub
jl
cs
mov
mov
push
or
mov
cmpsb
inc
inc
jl
sub
lock
enter
enter
inc
repz
pop
movb
lods
inc
push
cmpsb
fadds
sbb
sbb
push
mov
in
push
pop
stos
nop
push
jecxz
and
js
mov
pop
aam
mov
out
or
fwait
shrl
lret
cmp
dec
shrl
xchg
xchg
or
jnp
adc
add
or
mov
test
out
fidivrl
or
sub
jg
mov
adc
shlb
and
push
mov
lea
pushf
imul
pop
and
outsb
scas
addl
dec
fwait
xchg
in
xchg
xor
fwait
xor
filds
fidivrl
cmp
test
pop
data16
push
leave
pop
pusha
lock
inc
jo
adc
gs
scas
dec
add
push
jle
push
push
pop
push
gs
jg
into
pminsw
sbb
adcb
push
jnp
pusha
cld
sar
dec
sti
jo
pop
pop
popf
xchg
dec
lods
gs
mov
mov
jno
fwait
mov
lods
mov
cld
shll
stos
test
iret
dec
andb
sbb
lcall
mov
mov
nop
dec
mov
mov
mov
ljmp
jmp
pop
in
mov
iretw
push
ret
and
std
pop
mov
lret
cltd
push
lret
lds
pop
lods
jmp
xadd
ss
mov
ja
fldlg2
ja
pop
mov
subb
data16
pop
clc
push
xlat
pop
push
inc
gs
dec
push
cmp
fmulp
das
xchg
fisttps
into
std
int3
and
jge
data16
sar
idiv
add
inc
jg
add
popf
sti
pop
leave
idivl
fstpl
push
and
mov
cltd
insb
xchg
movsl
loopne
repnz
inc
mov
lea
inc
xchg
or
xchg
xchg
dec
fldenv
pop
dec
pop
test
mov
sbb
adc
jl
stos
aaa
mov
adc
push
in
jg
shll
xchg
fistl
or
adc
insb
and
test
cmpsl
jle
xchg
addb
ljmp
lock
pop
jne
movsb
enter
ffreep
lcall
nop
mov
out
xchg
push
aas
int
int
loopne
ret
push
out
push
test
mov
addb
in
popa
out
inc
fsubs
xchg
xchg
popa
pop
push
jnp
stc
mov
das
push
loopne
bound
popa
inc
xchg
mov
jns
push
xchg
push
lret
push
lahf
stos
enter
btr
enter
add
sbb
mov
dec
mov
jo
mov
sbb
fistps
mov
cmp
and
rcr
push
pop
call
mov
mov
or
xor
iret
lods
mov
nop
mov
push
add
mov
push
mov
xchg
mov
fdivl
repnz
scas
jl
js
push
ret
imul
pop
sub
jl
mov
add
pop
dec
pop
out
mov
mov
adcl
mov
lods
push
fcmovu
mov
adc
imul
fnstenv
in
cld
cmp
adc
push
xchg
data16
mov
pop
stos
scas
push
outsb
xorb
push
stos
fcomps
pushf
fwait
jo
mov
es
jge
gs
pop
push
into
out
sub
mov
outsb
jp
inc
push
insb
inc
aad
dec
jecxz
xchg
and
hlt
pop
dec
fidivrs
cmpsb
mov
sbb
call
cmp
xor
daa
cmpsl
jmp
cli
mov
mov
mov
pop
sub
push
mov
ret
inc
imul
jo
lret
fimull
pop
iret
inc
pop
scas
fisttpl
mov
mov
push
int
mov
lea
loop
and
insl
pop
mov
xchg
xor
in
mov
lock
xchg
push
test
ffreep
test
movl
je
mov
jecxz
jb
test
adc
int
in
mov
mov
inc
xchg
in
mull
pop
addb
mov
aad
out
popl
xchg
or
sbb
add
lret
ljmp
dec
lret
adc
xchg
rcll
fbld
test
lock
mov
lock
cmp
addr16
xchg
fimull
std
cmc
notb
mov
rorb
mov
xchg
xchg
adcl
dec
sub
pop
pop
adc
jne
sub
push
pop
cmp
mov
push
notl
imulb
in
nop
mov
push
call
les
mov
cld
or
xchg
orb
in
scas
cmp
mov
adc
mov
ror
rclb
pop
andb
data16
shrl
sbb
jbe
add
mov
jle
shll
ds
sahf
gs
push
aaa
or
jne
xchg
jns
xchg
repz
mov
jbe
or
mov
xchg
cmp
mov
sub
popa
les
mov
jp
loop
stos
or
add
push
pop
out
jg
mov
bound
stos
sub
rclb
insl
mov
mov
push
mov
mov
or
mov
fists
sub
out
cmp
jle
jge
negl
xlat
mov
daa
enter
lahf
mov
pop
outsb
fidivl
mov
inc
test
jle
cmp
mov
ljmp
lahf
nop
call
sbb
add
jp
or
mov
mov
pusha
jae
repnz
stos
lods
mov
jle
mov
cli
jb
or
lock
shlb
in
lea
inc
pop
ljmp
int
lea
xchg
fidivrl
arpl
ficompl
jle
popa
call
scas
pushf
push
cld
add
xchg
push
sub
dec
sti
popf
lods
mov
pop
pushf
xchg
mov
push
jns
mov
jge
push
or
in
inc
aas
xor
push
mov
iret
add
mov
dec
sti
mov
adc
inc
jp
and
scas
dec
fisttpl
fisubrl
inc
pushf
xlat
lock
lods
lahf
mov
pop
or
jns
stos
dec
dec
nop
mov
call
jns
mov
ljmp
cltd
xor
inc
fildl
scas
xlat
int
cli
repnz
ret
mov
jecxz
inc
cld
rorb
repz
repnz
mov
aas
mov
push
insb
jge
jnp
cli
xchg
xchg
sub
jg
enter
int
hlt
mov
stos
ljmp
stc
adc
stos
xor
jbe
xchg
jae
loop
orl
ss
xchg
push
xor
mov
pop
dec
sar
js
data16
inc
jl
dec
jnp
sbb
mov
sub
pushf
jns
ss
push
mov
bound
pop
xchg
mov
cmpl
dec
call
sbb
lea
rorb
test
leave
stos
ljmp
stc
sbb
std
out
jne
pop
movsb
mov
repz
sar
leave
push
fs
fwait
cwtl
pop
in
mov
jp
or
push
lcall
cmpsl
filds
loop
add
mov
inc
jmp
fisubrs
test
jecxz
shr
cli
andb
stos
sub
in
mov
es
orl
mov
mov
popf
insb
or
pop
mov
maskmovq
mull
iret
push
or
or
ror
mov
out
aad
iret
scas
icebp
xchg
es
lock
popa
xor
int3
cld
addr16
cmpsl
fwait
jp
sub
fildl
mov
inc
in
iret
pushf
xchg
imul
into
stc
jns
int3
cltd
and
dec
dec
mov
int3
fstpl
imul
xchg
inc
jmp
sbb
lea
ja
jnp
lret
rclb
add
jo
mov
adc
arpl
and
mov
inc
popf
push
outsb
mov
pop
hlt
xchg
push
stos
imul
movsl
imul
xchg
push
loopw
push
popf
pop
std
adcb
jbe
std
xchg
and
sub
cmp
inc
insb
jle
sti
cmpsb
push
jnp
mov
inc
pop
jmp
pop
in
xchg
sub
das
xor
sbb
cli
shrl
iret
out
int3
fwait
xchg
sub
scas
inc
out
mov
imul
push
or
add
lock
mov
dec
xor
fs
lret
cld
bound
cltd
xor
mov
jbe
jecxz
pop
push
jns
iret
sub
push
mov
sub
ret
dec
sbb
push
cmp
test
pop
mov
jb
repnz
xchg
pop
sub
cmpsb
mov
xchg
cmpsb
cld
push
loope
cmc
sarl
fidivrl
mov
or
dec
xchg
fdivrl
loop
mov
xchg
mov
out
jo
mov
and
fmuls
cmp
loope
inc
int
or
rorl
vpmadcswd
adc
outsl
test
stos
js
sbb
adc
mov
movsb
mov
mov
in
in
mov
jbe
xor
or
sub
mov
sub
aam
data16
lock
movsb
mov
daa
shrl
xchg
out
pusha
dec
hlt
xor
out
mov
and
insl
ljmp
callw
and
adc
xchg
xchg
lcall
in
adc
shll
testl
je
jmp
shlb
jge
gs
data16
mov
cmp
ss
jge
dec
xlat
push
insb
dec
mov
cmc
leave
push
push
das
movsb
mov
cmpsb
adc
lock
mov
inc
mov
out
cli
add
mov
inc
xchg
mov
mov
pop
mov
push
inc
scas
leave
xchg
loope
fucom
mov
mov
jp
aad
xor
nop
push
lock
pop
add
inc
pop
insb
test
loope
xchg
in
fs
mov
fs
insl
push
iret
rclb
outsl
jb
mov
pop
pop
test
xchg
mov
or
or
sbb
inc
cltd
aas
leave
repz
or
and
push
outsb
jne
push
xlat
hlt
call
and
lcall
adc
in
paddsw
xchg
in
cld
test
push
mov
xchg
push
xchg
cltd
rolb
icebp
loop
mov
mov
lods
insl
xor
loopne
jmp
add
sti
inc
jge
mov
jg
xchg
loop
aad
mov
ret
loop
je
int
dec
popf
add
lea
insb
mov
pop
inc
pushf
nop
jmp
jo
idivb
popf
movsl
fwait
mov
mov
or
int3
enter
bound
data16
lea
fiaddl
in
pop
insb
out
dec
sbb
lahf
gs
or
add
lret
adc
and
mov
jmp
push
insl
enter
shrl
push
mov
add
cmpsl
mov
pushf
adc
sbb
adcb
lods
sarl
mov
sbb
pop
xchg
outsb
out
pop
sbb
cmpsb
adc
lods
inc
cmc
aaa
push
fdivrs
neg
jmp
nop
jge
pop
mov
xor
addr16
add
or
adc
xchg
stos
adc
fcompl
inc
inc
std
mov
add
cs
mov
and
mov
lods
push
push
int3
mov
imul
add
gs
stos
push
aad
inc
cmp
int3
adc
ret
stc
fs
imul
insb
callw
addr16
or
push
data16
jns
jb
cli
mov
out
mov
ljmp
mov
xor
xor
repnz
xchg
cmp
shll
or
das
jg
jns
mov
iret
jno
dec
pop
pop
xchg
jmp
inc
idivb
cmp
test
out
mov
std
jae
push
flds
in
xchg
xchg
js
fidivrs
lret
jne
dec
cmpsb
add
or
pop
jbe
inc
xchg
mov
inc
mov
and
jbe
mov
test
and
xor
into
mov
pop
adcl
and
bound
or
scas
and
pop
popf
inc
xchg
mov
in
fistps
adc
adc
je
rorb
and
jle
mov
iret
fcmove
jmp
lcall
dec
lea
inc
shlb
add
nop
out
cmpsb
mov
call
jbe
js
add
dec
push
mull
push
mov
jl
pop
sti
test
sahf
cli
lahf
xor
test
out
adc
dec
lcall
adc
mov
pusha
push
std
jmp
addr16
stc
cli
pop
jb
xchg
inc
pop
sub
out
cltd
leave
in
inc
xchg
leave
xchg
inc
fs
popf
inc
mov
cld
inc
stos
leave
mov
pop
cld
pushf
dec
data16
das
jo
lock
jbe
lock
lock
jo
xor
outsl
dec
int3
pushf
mov
push
rclb
push
mov
mov
jl
cs
xchg
add
mov
cwtl
mov
popl
lcall
or
jmp
sti
cmpl
lret
cli
movsb
subl
loop
out
lock
cmpsb
insl
push
adc
sahf
or
test
std
inc
sub
imul
in
gs
jge
fs
push
xchg
aas
sbbl
or
adc
or
enter
fucomp
sub
movsl
aam
lods
and
pop
xor
jbe
les
push
rclb
scas
add
or
or
mov
mov
out
pushw
dec
cli
lods
call
stos
sti
sbb
sbb
jmp
pop
int3
adc
push
ds
aam
adc
adc
mov
sub
inc
iret
insb
pop
push
push
adc
popa
push
pop
and
sarl
mov
push
mov
insl
cwtl
mov
jb
inc
mov
and
push
cltd
cs
iret
xchg
enter
rcrb
in
mov
jecxz
lret
ret
ds
xor
mov
shlb
lock
ret
mov
int
fwait
cmpsb
dec
popf
mov
imul
sti
addr16
cmp
enter
pop
inc
push
push
int3
ja
pop
and
insb
add
or
mov
popf
jecxz
sub
adc
mov
addr16
rclb
pop
or
stos
cs
rcll
add
sbb
hlt
mov
mov
cmp
imul
xor
stos
in
out
ljmp
dec
cmp
sub
sahf
mov
add
pop
je,pt
push
divl
lods
cwtl
mov
mov
jae
sbb
sbb
inc
in
int3
inc
cwtl
ljmp
sub
push
mov
push
inc
rcll
icebp
push
mov
mov
subb
ss
js
ja
fwait
aaa
jge
sbb
mov
clc
adc
outsb
dec
test
mov
testl
push
or
cmp
cld
lret
out
cmp
jne
repz
in
adc
push
xchg
xor
fdivrs
dec
scas
icebp
pusha
btl
fwait
or
fisttpll
push
mov
xchg
push
fmull
out
add
inc
mov
ljmp
pushf
inc
stos
and
test
mov
mov
das
lea
push
js
jb
enter
std
mov
pop
mov
arpl
ret
movb
jge
jecxz
call
dec
sbb
sub
cmp
mov
enter
movsl
sbb
clc
or
and
adc
push
sub
cltd
cltd
mov
adc
xchg
into
int
test
cli
cs
sbb
jl
adc
mov
int3
add
mov
shll
pop
mov
dec
std
pop
clc
sbb
cltd
push
test
sbb
mov
ficompl
dec
arpl
mov
xchg
jo
or
and
sbb
mov
movsb
out
xor
xchg
or
movsb
and
rcll
notb
cld
fisttps
inc
add
cmpsl
inc
imul
std
xchg
frstor
pop
cwtl
mov
pop
xchg
insl
es
cltd
insl
rorl
ds
add
jnp
outsl
mov
aad
cwtl
cmpsb
lcall
lea
das
in
fistpl
sti
aad
fiaddl
inc
sub
xor
stos
cmp
add
push
inc
or
mov
leave
mov
sub
mov
push
pushf
daa
sbbb
mov
jmp
mov
ljmp
sbb
inc
mov
mov
push
dec
scas
sub
test
das
jo
loope
inc
add
mov
adc
adc
xchg
fadds
stos
push
lods
insb
xchg
in
mov
inc
dec
in
and
test
mov
mov
leave
inc
cld
orb
mov
aas
mov
dec
addr16
inc
mov
imul
mov
xchg
mov
mov
dec
lcall
sub
stos
push
test
bound
pop
fst
mov
scas
pop
lods
ds
aam
xchg
icebp
mov
push
in
or
cmp
push
inc
push
mov
mov
jnp
hlt
mov
pop
dec
sbbl
loopne
push
lcall
lods
aam
stos
adc
mov
adc
fwait
lret
add
and
mov
ret
mov
scas
adc
fisttps
mov
imul
test
xor
push
idiv
stos
outsl
mov
jne
mov
mov
push
test
sbb
cmp
in
cmp
or
cmpsl
xchg
repnz
adc
pop
cli
lcall
dec
jl
jp
imul
je
adc
push
mov
orb
addr16
push
mov
dec
test
test
popa
jmp
sbb
mov
mov
and
xor
fcoms
mov
lcall
shlb
popa
call
fdivrl
stos
mov
dec
dec
loopne
gs
jecxz
lods
add
test
mov
or
pop
fiaddl
jge
lock
loop
push
js
pusha
pushf
out
fbstp
xchg
add
sarb
push
cld
outsb
mov
iret
pop
out
jne
addb
les
in
cmp
xchg
notb
out
dec
jp
lret
xor
and
or
cld
lock
fs
inc
pop
inc
mov
sbb
mov
jp
movsb
mov
cwtl
sub
cmpsl
pop
stos
enter
lret
test
mov
je
or
dec
pop
pop
scas
mov
adc
push
mov
mov
and
aas
xor
xchg
and
push
adc
dec
enter
push
das
dec
fistps
fnstenv
cmc
add
mov
lret
push
addr16
xor
add
or
sub
test
idivl
xchg
ret
scas
pop
shl
mov
notl
filds
into
movsb
jl
push
adc
xchg
mov
or
push
and
outsb
jle
repz
inc
mov
cmp
add
sub
daa
imul
stos
xchg
incl
lods
js
mov
in
or
cli
xor
test
xchg
js
mov
mov
imul
fdiv
push
mov
jle
out
insl
inc
xorl
mov
lods
or
mov
out
jae,pt
out
push
mov
roll
cli
mov
pop
xchg
test
fwait
sti
retw
sbb
mov
or
inc
mov
andl
and
mov
out
mov
adcb
jle
xchg
xor
add
xchg
fcomi
and
dec
insl
lea
into
rorb
push
test
mov
pop
bound
loop
in
sbb
out
push
movsb
cmp
jbe
push
cmp
jle
pause
adc
add
mov
loopne
sti
xchg
movsb
add
in
ja
clc
insl
fs
inc
push
std
jns
test
cmp
imul
pusha
xchg
xchg
es
loopne
lea
or
out
push
cld
xor
paddq
adc
int3
mov
es
stos
dec
loope
stos
rorb
mov
data16
adc
add
mov
jp
mov
mov
sub
sbb
ljmp
xor
or
push
stos
dec
das
arpl
lcall
dec
mov
sbb
sbb
ret
jecxz
test
push
lods
xchg
jne
push
sbb
mov
push
ret
icebp
popa
imul
js
addr16
or
adc
or
pop
cmp
dec
aas
stc
push
cmp
adc
cli
jl
mov
jno
int3
loopne
cmp
mov
add
xlat
or
in
rcll
mov
sub
xlat
mov
pushf
scas
aas
cld
sbb
aam
repnz
lcall
mov
call
daa
mov
movsb
inc
out
inc
inc
pusha
mov
mov
ret
mov
insb
imul
call
jmp
pop
jmp
dec
add
or
popa
gs
adc
fcom
push
fisubl
or
fdivrs
orl
mov
xchg
xchg
bound
test
aad
cmp
xchg
push
rsqrtps
jle
xor
lcall
mov
adc
scas
mov
xchg
mov
dec
shrb
mov
loopne
pop
mov
rcll
mov
int3
push
lods
lret
or
push
mov
pop
xor
jl
xchg
xchg
xchg
add
mov
outsb
bound
stos
shr
sahf
inc
fs
jns
ljmp
in
push
xor
mov
mov
dec
pop
dec
inc
fmull
add
add
lds
mov
shll
jp
dec
cld
sti
mov
rcrb
push
sbb
fisubrl
adc
dec
insb
pop
mov
stc
mov
push
jmp
sti
insl
lcall
lar
cmp
jno
add
dec
mov
fcompl
xchg
jmp
arpl
stos
mov
adc
pop
scas
sbb
out
cmp
xor
jnp
pop
cmpsb
and
pusha
iret
lea
fs
mov
and
xchg
mov
sub
inc
sbb
call
outsl
xchg
lods
adc
adc
or
cli
imul
inc
pop
les
adc
lret
jmp
adc
lret
loop
aas
add
mov
das
xor
pop
scas
add
xchg
ja
xchg
push
mov
mov
mov
add
mov
into
jbe
cmp
bound
vmread
nop
mov
mov
cmc
int
mov
je
outsb
mov
out
out
mov
and
imul
dec
and
lock
mov
mov
fsub
clc
enter
mov
sub
sub
xor
loopne
push
fidivrs
lcall
add
dec
orb
xor
xor
sbbl
cmp
sub
cwtl
mov
lahf
sub
mov
inc
inc
xchg
jo
test
lods
dec
sub
mov
xchg
test
and
dec
cmp
push
sahf
mov
clc
mov
mov
test
test
repz
xor
rcll
xor
mov
out
mov
out
mov
or
mov
inc
mov
sub
add
push
iret
and
rclb
clc
mov
mov
jmp
jae
adcb
xchg
mov
ds
sub
push
mov
mov
adcl
sarb
pop
push
sub
xchg
mov
add
add
int
lock
xchg
imul
out
rcrl
scas
add
sarb
or
cmp
dec
test
das
jmp
cmc
fdivr
mov
lods
aaa
popf
sti
loop
je
or
outsb
pop
ret
enter
or
bound
sbb
xchg
push
push
cld
dec
xchg
sbb
add
loop
add
xchg
stos
push
stos
lea
jnp
adc
insb
mov
rolb
dec
imul
mov
stos
fwait
test
xchg
mov
mov
out
jg
push
nop
sarl
mov
xor
in
and
sbbb
dec
ret
movsl
mov
in
hlt
faddl
cwtl
dec
les
or
subb
push
xchg
or
and
pop
dec
stc
in
out
icebp
push
push
xor
pop
arpl
les
xchg
lret
pop
pop
sub
shl
fadds
adc
adc
xchg
aas
stc
xchg
add
pop
and
popa
movsb
lds
popl
daa
sbb
pop
lea
js
movsl
and
mov
mov
and
cmpsb
cmp
mov
ja
bound
je
repz
rorb
sbb
popf
ret
push
insl
jns
add
out
dec
mov
in
adc
out
xchg
mov
out
in
js
cltd
pop
jo
aaa
and
je
jl
jl
inc
adc
mov
int
push
popf
lret
or
mov
repz
xchg
mov
cmc
jns
shrl
cli
ss
sti
cli
aaa
out
jge
loopne
js
jne
pusha
add
popf
mov
andb
mov
mov
jg
dec
test
in
fmull
lahf
mov
mov
cld
cltd
bound
test
loope
movsb
mov
mov
adc
mov
fwait
movsb
cmp
btr
cwtl
mov
xchg
mov
sbb
mov
sbb
push
xchg
xchg
test
aaa
test
sbb
jno
cld
adc
test
addb
add
pop
repz
ss
in
loopne
jae
fimuls
xor
out
adc
ja
jmp
scas
dec
mov
push
mov
xchg
gs
in
nop
insb
fadds
push
mov
out
pop
jp
mov
push
mov
adcb
scas
cmpsl
add
dec
test
lret
ljmp
dec
sahf
repz
or
fxch
cmpl
xchg
inc
mov
xchg
nop
call
mov
push
push
mov
fwait
sub
pusha
out
in
ja
flds
push
jns
cmp
mov
fprem
push
xor
fwait
in
insl
in
xor
mov
mov
xlat
push
js
push
mov
into
jge
mov
inc
adc
hlt
cmp
sti
repz
mov
enter
in
push
int
adc
frstor
push
orb
xchg
pushl
call
rclb
mov
lock
in
xchg
mov
sub
pop
ret
scas
jl
inc
call
mov
scas
xchg
sti
sahf
cli
mov
sub
lret
lcall
dec
call
pop
xor
aad
mov
pushf
mov
adcb
lcall
in
sbb
lret
jle
mov
iret
aaa
xor
popa
fchs
loop
sub
aad
mov
std
dec
lea
push
mov
invd
mov
mov
dec
add
mov
mov
fisttpll
adc
stos
mov
adc
xlat
xor
dec
in
cwtl
dec
add
lcall
pop
sub
icebp
test
dec
mov
in
test
add
cmpsw
jb
sub
aam
mov
add
sub
mov
sbb
mov
push
in
mov
jg
jp
xor
shl
fdivr
jo
mov
jmp
aad
ret
dec
sti
jns
rol
movsl
mov
mov
mov
data16
addb
lea
or
outsb
sbb
push
in
leave
scas
push
cmc
dec
in
push
in
sub
pop
and
pushf
movsb
mov
dec
cmc
imul
fadd
sahf
xor
xchg
jmp
stos
stos
aas
lds
ret
sahf
push
jp
rolb
or
jns
fsubrl
or
xchg
sbb
xor
jns
in
cmpsb
xchg
adc
nop
jmp
mov
pop
mov
sub
loop
loope
cwtl
xor
subl
pop
xor
sub
pushf
jmp
mov
and
push
in
out
scas
inc
cli
outsb
cmpsb
jge
jp
xlat
push
push
repnz
loope
xchg
push
mov
mov
adc
jno
cwtl
adcl
push
test
sub
pop
out
outsb
cld
adc
jp
jecxz
or
clc
insb
pusha
push
cmpb
inc
fiadds
xchg
lock
rolb
les
inc
push
lcall
inc
jns,pt
fstl
add
dec
inc
push
mov
push
inc
lods
push
mov
mov
xor
dec
xchg
cmp
ljmp
xchg
movb
sbb
fcmovnbe
shrl
jmp
pop
mov
in
and
jg
inc
sbb
and
sub
sarb
into
icebp
jmp
dec
jno
aam
test
out
add
xchg
ljmp
mov
cmp
insb
cmc
call
cmpsb
rol
mov
bound
addr16
pop
and
cmpsb
xor
pop
pop
lret
shll
and
jg
stos
pop
xchg
repz
pop
mov
rol
out
movsl
jp
xchg
sahf
or
shlb
xchg
mulb
sbb
xor
mov
mov
fwait
mov
bound
scas
lahf
incb
jb
push
aaa
call
jo
xor
fsts
mov
fldcw
movsl
adc
pop
stc
clc
pushf
ret
cmpb
pop
lahf
dec
inc
decl
dec
notb
scas
int3
jnp
loop
cmp
inc
xchg
mov
bound
fdiv
sarl
arpl
lods
push
mov
in
fs
push
or
out
lods
xor
dec
jmp
mov
lods
xchg
outsl
rcl
push
xchg
inc
and
xchg
pop
inc
lcall
push
ljmp
mov
mov
ds
repz
test
jg
lret
gs
jb
mov
dec
out
xchg
fldcw
pop
lods
xor
cltd
orw
in
jae
cwtl
aaa
xchg
mov
or
ss
out
dec
test
mov
push
in
les
lods
fisubl
push
push
icebp
push
jns
fs
pop
mov
int
cmp
mov
dec
inc
shll
fwait
insl
sbb
adc
sub
mov
xchg
mov
mov
lret
dec
jg
in
lea
cmpsl
ljmp
les
mov
fwait
ss
cmp
sub
jno
inc
icebp
mov
push
rclb
into
fcomp
push
imul
add
push
cmpsb
fucom
jle
sub
jl
sbb
add
scas
int3
out
jmp
xchg
hlt
leave
push
sub
jns
inc
data16
jl
shl
xchg
inc
and
ljmp
mov
push
mov
sarb
scas
push
mov
dec
jmp
sub
push
mov
pop
inc
or
mov
xchg
int3
outsb
push
jl
imul
pop
lret
pop
pushf
fldl
aaa
fdivs
arpl
sti
xchg
mov
cmpsl
ljmp
ficoms
scas
mov
pop
cmpsb
jg
cli
enter
xchg
mov
arpl
pop
push
lods
inc
call
adc
into
lcall
jns
jbe
sti
cld
fildl
inc
push
repz
push
sub
test
bound
xor
pop
cltd
push
js
inc
and
scas
push
cmp
stos
jns
loopne
inc
dec
xchg
add
adc
ds
cmp
xlat
jns
add
xchg
imulb
lods
dec
loop
fistl
push
outsl
test
mov
in
aam
add
add
and
adc
inc
mov
jmp
mov
add
ficompl
cmp
push
dec
cwtl
pop
pop
test
mov
dec
int3
xchg
fisubrs
mov
arpl
pop
xchg
enter
mov
push
dec
sub
ljmp
pop
xchg
int
jae
addr16
mov
popf
imul
dec
mov
cltd
out
or
test
stos
insl
ret
ljmp
inc
adc
pop
jbe
ljmp
push
loope
jo
inc
fwait
adc
faddl
in
lock
pusha
pushf
mov
pusha
sub
int
not
es
push
push
int
test
mov
movsl
xchg
idiv
dec
adc
sub
xor
mov
int3
mov
shlb
jp
mov
add
daa
orl
out
popa
sbb
sbb
jb
stos
fstpl
adc
push
hlt
mov
notb
adc
jae
sbb
out
sub
or
jo
sbb
mov
jecxz
push
aad
test
push
std
xchg
jo
jmp
adc
das
insb
dec
call
loop
ljmp
ss
shrb
mov
jmp
dec
in
jmp
popf
push
rolb
xlat
xor
stos
icebp
mov
out
dec
popa
add
mov
push
fwait
int3
mov
pop
nop
movsb
cmp
jo
cld
mov
or
add
and
sbb
scas
push
test
int
aam
cmpb
mov
cwtl
xchg
and
repnz
mov
cmp
cli
dec
cwtl
inc
shlb
jo
mov
sbb
std
loopne
lea
xchg
pushf
fs
jecxz
sub
les
mov
inc
fsubp
aas
mov
and
mov
sub
adc
fidivl
es
lock
push
movsb
data16
mov
mov
bound
imul
les
stos
mov
mov
sbb
mov
pop
ljmp
inc
fldt
call
sub
cmpsb
loop
in
inc
call
cmp
pushf
ds
cli
mov
jns
shlb
or
jecxz
mov
jp
cmpl
jge
je
in
jmp
arpl
gs
lock
xchg
add
sbb
cs
sbb
setb
iret
xchg
sbb
push
loope
gs
popf
lret
loop
inc
pop
cmp
loop
das
inc
fucomp
xchg
stc
ss
mov
cmp
int3
lcall
lret
jns
addr16
inc
mov
addr16
jne
cmp
xchg
lock
inc
clc
in
add
sbb
int3
int
add
fldl
cmpsb
or
fidivs
sti
dec
cmc
xchg
bound
ret
leave
xchg
xchg
add
cmp
divb
nop
lcall
cli
leave
daa
outsb
scas
mov
sub
add
sub
inc
movsb
or
pop
mov
pop
mov
fcompl
xchg
aad
test
gs
inc
push
push
outsb
xchg
orl
push
mov
ret
xchg
push
scas
mov
bound
js
roll
iret
test
lock
daa
test
data16
xorl
stos
outsl
rcll
or
inc
and
xlat
mov
dec
dec
adc
fidivl
sahf
cs
xchg
addb
ret
cld
dec
jne
jnp
xchg
push
imul
stc
pushf
insl
stc
ljmp
sbb
je
push
mov
sarl
mov
push
jo
xchg
movsb
mov
movsl
lret
xchg
mov
lcall
push
cwtl
pushf
bound
mov
xchg
jl
push
mov
test
movsb
enter
push
movsb
xchg
xchg
dec
aad
xchg
clc
jl
rdpmc
add
push
shll
fcomps
cs
jg
xorb
adc
mov
repz
rorb
jp
aad
lea
or
es
loopne
lock
in
in
addr16
sbb
outsl
xorl
dec
mov
sub
pop
movsl
lahf
std
or
fcomps
adc
fdivl
test
xchg
aaa
jg
sarb
inc
je
fdivl
sbbb
push
fsubl
or
test
adc
fwait
mov
je
inc
mov
dec
mov
mov
adc
add
popa
cmp
test
repz
dec
ja
lock
cltd
cmp
inc
mov
addb
inc
add
fwait
push
shrl
test
lret
mov
gs
bound
cld
cmp
push
cmp
lods
push
mov
pop
lret
jmp
stos
sbb
in
or
mov
jp
push
in
mov
push
mov
test
sti
xor
sbb
xchg
mov
movsb
popf
pxor
and
movsb
jecxz
leave
sbb
jmp
clc
cltd
dec
mov
aas
push
lcall
outsb
sub
add
out
or
mov
xor
mov
xchg
mov
adc
int
test
pop
orl
adc
in
push
push
mov
cwtd
loop
add
jo
insb
daa
insb
xlat
lea
sbb
cwtl
sbb
gs
outsl
pusha
inc
aas
mov
ljmp
in
cmp
daa
cmp
inc
clc
cmp
popa
add
fwait
mov
and
in
dec
jp
mov
push
adcb
dec
dec
jns
cmp
pop
mov
push
inc
outsl
jae
test
or
repz
and
in
aad
js
std
aas
mov
xchg
push
xor
sub
mov
cmp
fwait
add
and
in
lcall
pop
gs
call
xor
cmp
jne
dec
daa
jo
or
andb
sub
enter
adc
cmp
adc
pop
popa
push
in
mov
and
test
push
aam
and
jae
test
mov
xor
sbbl
mov
or
push
sbb
lcall
xchg
insb
jbe
cmpsb
dec
clc
test
addb
shlb
fs
rcrb
fs
jne
mov
je
xchg
and
sbbl
outsl
nop
popa
inc
push
or
mov
lret
inc
imul
outsl
fdivrp
xor
ss
iret
gs
arpl
mov
mov
jae
mov
movsb
sbb
jbe
xacquire
pop
mov
out
sbb
sbb
push
xchg
fs
dec
xor
pop
push
add
or
xchg
sub
xor
pop
gs
jecxz
in
lahf
mov
mov
mov
pushf
test
pop
imul
cwtl
cmpb
xchg
bound
mov
loop
xchg
add
notb
cld
jae
int3
cmpsl
inc
outsb
scas
out
dec
ffree
adc
jle
hlt
cmp
xchg
push
adc
push
dec
jmp
xchg
cmp
icebp
mov
enter
insl
test
stc
cmp
je
test
decl
jp
xchg
dec
stos
sbb
cmpsl
lods
sub
test
cmp
test
cmp
not
or
mov
daa
test
fwait
pop
mov
movsb
je
push
shl
addr16
cmp
shl
shlb
mov
int
dec
ret
xlat
nop
xchg
fdivl
scas
push
repnz
sub
test
fstps
cmp
xchg
xlat
pushl
into
jge
divl
mov
lea
add
stc
xor
div
in
fidivl
lahf
decb
mov
popf
add
outsb
iret
dec
loop
in
xchg
jno
cmp
stos
popf
sbb
pop
and
sub
ja
lock
shll
neg
and
aas
shrl
and
stos
lret
add
jo
dec
outsb
xchg
mov
aad
mov
push
int
std
push
push
loope
stos
add
jg
in
or
and
bound
pusha
loopne
push
mov
aad
sub
jbe
pop
push
dec
out
jns
ljmp
jmp
xchg
xlat
out
xchg
pop
pop
lret
hlt
scas
sub
pop
fidivl
les
fwait
push
pusha
call
icebp
shlb
mov
or
inc
or
clc
ret
aam
outsl
mov
iret
ljmp
jecxz
or
testb
pop
adcl
movsl
push
aam
jmp
add
fcmovnbe
mov
sbb
das
xor
sub
mov
or
imul
sti
jecxz
out
mov
js
dec
sbb
outsl
dec
dec
inc
pop
outsl
mov
inc
shrb
inc
dec
cmp
lahf
bound
shlb
or
cmpsb
xchg
dec
std
lahf
adc
cwtl
ljmp
lgs
or
lods
push
push
lds
in
cwtl
scas
mov
out
cltd
dec
cld
or
jge
shr
repnz
jg
in
fwait
mov
cmp
xchg
adc
lret
push
cmp
sub
push
mov
dec
cmc
push
lods
xchg
lods
scas
add
xor
cmp
cmpsb
fnstsw
loopne
pop
je
out
inc
lret
aas
nop
or
push
push
jmp
ja
mov
sbb
pop
cld
lahf
addb
push
hlt
pop
sub
arpl
adc
test
sub
pop
testb
pop
clc
loop
nop
lea
xchg
xor
test
dec
ret
add
test
sbb
gs
jae
xor
inc
sbb
sub
push
xchg
scas
jg
dec
daa
loop
pop
std
aaa
into
js
xlat
insb
loop
and
icebp
xchg
data16
push
cs
cli
pop
ljmp
jmp
jl
push
xor
or
adc
cmp
test
xchg
lods
mov
ja
in
xchg
dec
or
sub
adcl
in
cli
jl
sbb
fwait
mov
adc
scas
fnstenv
fs
addl
mov
mov
shrb
push
xchg
xchg
or
jbe
sbb
pop
scas
js
gs
add
add
lret
jo
mov
xor
pop
sarb
mov
aad
adc
cs
or
push
jnp
mov
movsb
andl
repnz
and
and
cmp
mov
mov
push
dec
inc
push
cmc
ret
dec
mov
push
jmp
dec
mov
lret
stos
hlt
aad
add
or
addr16
or
pop
pop
sbb
sub
psrlq
and
cwtl
cwtl
push
or
outsb
jns
add
je
test
or
add
in
cld
dec
testb
aas
in
cmp
dec
jbe
js
push
or
je
jb
push
mov
popf
mov
mov
shl
scas
rclb
xchg
xchg
add
mov
out
mov
not
and
xor
lahf
test
push
test
mov
xchg
lea
scas
hlt
mov
das
mov
scas
lcall
adc
mov
mov
adc
outsb
adc
bnd
adc
adc
out
jo
repnz
enter
test
jno
in
jp
cmp
scas
fsubs
vpaddb
cmpl
cld
or
loopne
dec
sub
mov
stc
cmp
orb
or
xchg
sahf
inc
dec
lret
imul
jnp
fldenv
iret
dec
sub
sub
or
ss
or
mov
xchg
popf
imul
in
into
loop
rorb
repnz
mov
cs
jo
cmc
mov
push
scas
inc
es
add
bound
gs
leave
sub
sub
mov
mov
add
mov
mov
cmc
call
les
test
sbbl
imul
lahf
in
and
ja
insb
es
xor
jnp
mov
push
rcrb
or
xor
aad
mov
mov
lea
mov
jb
mov
or
add
sbb
pop
mov
dec
or
ret
lods
sar
gs
pop
dec
fmull
or
aam
or
rcll
ret
popa
shlb
rorb
mov
repz
mov
in
dec
imul
pop
xchg
adc
test
or
test
mov
pop
cwtl
test
into
out
adc
sub
xchg
test
shufps
pause
push
mov
and
inc
jbe
hlt
pop
mov
loope
mov
movsl
jg
sbb
push
dec
mov
push
pop
dec
insl
test
loop
mov
rclb
lahf
or
pop
pop
push
mov
sbb
clc
outsb
ljmp
inc
inc
push
xchg
or
jns
cwtl
adcl
in
lds
fcoml
dec
and
add
rcr
mov
sbb
or
adc
test
out
jns
repnz
test
out
xchg
loopne
xor
lds
rcrl
addr16
in
inc
jnp
xlat
jnp
sub
pushf
sahf
repnz
call
and
inc
inc
clc
pop
jne
mov
pop
add
xor
popf
cmc
adc
cmp
or
ds
stos
pop
inc
cld
fnstsw
sti
xchg
jbe
es
stos
test
push
fildl
sbb
push
cmpl
fmuls
test
push
add
mov
lret
cld
mov
dec
jae
or
jge
fadds
jo
testb
repz
or
out
das
ljmp
stc
mov
cmp
push
cmp
rclb
pop
jecxz
or
cmc
cwtl
ds
pop
or
push
cld
roll
xor
fistl
mov
imul
jge
hlt
dec
scas
imul
in
dec
jg
jno
data16
fists
out
cs
jns
mov
lods
cltd
cmp
in
loopne
fdivrs
in
mov
scas
sbb
or
in
ficoms
pop
in
push
mov
mov
sub
shrb
mov
add
fs
leave
xchg
or
jmp
cltd
sub
dec
int3
les
rcrb
call
sub
xchg
aam
ret
stc
cwtl
stos
iret
cmc
ljmp
xor
push
sub
pop
nop
xor
mov
jnp
lea
adc
mov
push
mov
sti
cmp
in
push
xrelease
pop
cwtl
fs
jnp
jl
aas
cmc
xrelease
imul
das
or
nop
je
arpl
filds
cmp
lcall
push
inc
test
cltd
mov
loopne
into
lds
adc
add
fdivrl
push
cmp
out
or
cmp
jg
add
lahf
int
in
in
jo
xor
mov
lret
movsb
loop
negl
std
xchg
jp
xchg
in
add
out
mov
in
pop
xor
inc
data16
push
cmp
or
scas
pop
xchg
bnd
test
in
js
mov
sub
cmc
push
cld
aaa
call
jae
dec
or
sbb
repz
ret
movsb
jge
pop
out
sarb
mov
stc
insb
dec
and
adc
stos
or
jecxz
rclb
in
clc
push
dec
pushf
or
jge
fldenv
js
cmpsl
aaa
sbb
jbe
jmp
repnz
lret
int3
push
jg
shll
pusha
adc
test
nop
mov
in
mov
testl
adc
mov
sbb
call
test
add
push
jne
in
jle
lcall
stos
fwait
or
std
sbb
shl
ud2
jp
outsl
mov
cmpsb
adc
nop
sbb
xrelease
ds
ret
xor
std
mov
mov
shlb
cmc
repz
inc
ljmp
and
sbb
mov
stc
test
mov
xlat
pop
in
push
movsl
xchg
add
leave
test
ljmp
cmc
sub
es
and
mov
leave
or
ror
sbb
mov
lret
dec
flds
lahf
lret
sub
adc
cmp
test
pop
lock
xorl
aaa
jae
mov
repz
or
jmp
inc
test
arpl
popf
xchg
mov
add
mov
in
lea
mov
sub
repnz
mov
sub
add
xlat
or
and
pop
add
std
mov
mov
sub
adc
in
mov
icebp
pop
xchg
mov
test
xchg
sub
mov
pop
push
sub
or
pop
lret
adcb
dec
xchg
arpl
shll
repz
jae
outsl
lcall
sub
jge
dec
mov
mov
in
add
sub
mov
cld
pop
cmpl
stos
es
decb
xorl
mov
popa
lods
repz
lret
push
push
adc
inc
call
fs
pop
mov
in
stos
fwait
popa
daa
in
mov
xchg
loope
xchg
jmp
sbb
jne
inc
insl
cli
mov
adc
dec
jecxz
mov
inc
mov
sbb
xchg
xchg
add
aad
xchg
in
adc
clc
mov
enter
xor
mov
pushf
xchg
mov
test
ljmp
and
lds
jns
sub
rcrl
jno
lret
dec
out
cmpsb
mov
mov
xchg
stos
jae
jnp
aam
sar
dec
mov
jmp
js
popa
pushf
dec
cmpsb
sub
insb
aaa
lods
in
jg
dec
stos
rorl
jg
aad
out
xchg
dec
lahf
xchg
dec
fimuls
std
mov
push
cmpsb
les
mov
sarb
test
xor
adc
mov
sbb
mov
cltd
inc
int3
xchg
les
cmp
adc
in
pop
jo
call
ds
jns
adc
sub
rcll
jge
loop
aam
jge
mov
jae
pop
ljmp
ljmp
bound
stos
pop
jo
inc
nop
xor
pop
std
ficoms
loop
push
out
clc
pop
lods
inc
lahf
sub
dec
inc
das
pop
int
cmp
or
mov
in
mov
inc
scas
test
push
popl
or
fucomi
mov
inc
out
movsl
mov
ljmp
in
add
test
scas
inc
out
aam
into
das
pushf
mov
add
jge
xchg
call
aas
xor
std
jae
nop
das
xor
scas
aad
xchg
int
xor
bound
mov
sbb
pop
fsubs
shrl
add
mov
add
inc
pusha
mov
data16
in
fnstcw
shll
stos
jb
push
xor
arpl
arpl
stos
mov
arpl
adc
aaa
bound
mov
cmc
cmp
ds
int3
and
cmp
loop
arpl
jae
and
in
and
imul
nop
add
jb
mov
mov
add
mov
icebp
lods
inc
loop
jno
push
sub
faddl
fisttpl
in
incl
xchg
scas
mov
sarb
fisubrs
cmc
adc
call
and
mov
out
adc
or
in
and
sahf
mov
sti
mov
dec
lock
adc
js
push
gs
lret
rorl
ljmp
push
lods
call
push
push
push
ret
jns
ss
test
add
mov
sbb
and
cmovp
movsb
gs
addl
sbb
sub
fcompl
ret
mov
out
aaa
mov
gs
mov
rcrb
sub
or
pop
hlt
maskmovq
negl
sarl
das
or
and
lcall
mov
mov
sti
xchg
lods
mov
pop
cmp
and
fistps
push
mov
or
xchg
outsb
fcoml
ljmp
pop
stos
or
cmp
test
mov
xor
les
inc
cmpsb
mov
dec
push
jecxz
ret
pop
xorb
push
adc
xchg
jl
popa
popf
adc
inc
jo
ljmp
jle
push
push
loope
testb
mov
out
push
mov
clc
lret
lds
aaa
repnz
lahf
mul
negl
scas
dec
outsl
pushf
les
cmpsl
xchg
inc
sub
mov
push
sbb
add
mov
sbb
and
inc
jg
std
int
addr16
jge
idivb
xchg
mov
in
pandn
sbb
or
lods
dec
sub
stos
test
sti
mov
cmc
pop
pop
cmp
shrb
xor
pop
scas
jae
imul
push
popf
cmp
mov
imul
mov
imul
fs
add
sarl
sahf
movsl
loop
mov
filds
mov
mov
negl
addl
jmp
xor
jmp
dec
pop
sub
sub
call
enter
mov
sbb
orb
pop
lods
sarl
pushf
xchg
les
and
dec
out
add
mov
iret
ja
xchg
sarl
repz
rorl
sbb
int3
jecxz
add
aas
lret
shrb
out
cmpsb
mov
jne
js
push
ds
mov
or
lds
mov
hlt
dec
add
mov
jno
mov
inc
xchg
dec
std
mov
jmp
enter
and
dec
pop
mov
jg
lods
mov
repz
stos
pop
ljmp
in
add
jg
jg
lcall
std
pushf
xchg
es
mov
andl
ret
movsb
je
push
xlat
push
pop
cmp
mov
cmp
mov
cmpsl
insl
add
js
int
adc
and
sbb
fcomp
xor
into
mov
scas
cmp
insl
scas
enter
ljmp
mov
repz
sub
loopne
gs
aam
into
repnz
jge
jl
mov
test
int3
cmpsb
xlat
mov
ret
sub
insl
push
movsb
mov
xchg
addr16
in
dec
test
sbb
inc
xchg
push
call
lds
shll
and
lret
mov
daa
mov
jb
push
push
pusha
mov
mov
ds
lods
mov
pushf
push
stos
dec
mov
mov
mov
shlb
xor
gs
add
mov
pop
mov
filds
jl
sub
mov
adc
test
out
xchg
pop
adc
sbb
and
scas
cld
mov
cmc
shrl
cmp
insl
or
roll
sub
mov
mov
add
dec
mov
push
sub
mov
jmp
and
nop
pop
pop
mov
popf
inc
xchg
mov
or
leave
jge
sahf
rep
fs
bound
push
loop
test
inc
jmp
lock
mov
idivl
pop
pop
in
loop
shl
loope
xchg
xor
cld
add
push
shlb
cmpsl
and
sarl
nop
repz
lret
xchg
jo
nop
jecxz
cmpb
adc
addb
enter
xorl
fcompl
sti
popa
xor
xchg
outsb
stos
mov
pop
in
xchg
lock
inc
jmp
pop
sbb
add
dec
jecxz
xor
mov
xchg
call
imul
pop
dec
lret
inc
mov
add
jmp
add
push
inc
lahf
ss
in
in
jae
pop
loop
pop
test
jmp
sbb
mov
sarb
jp
lahf
ljmp
jnp
mov
jecxz
xorb
andl
andb
jp
sbb
pop
fsubs
fs
ret
out
aas
pushf
mov
setl
pop
or
out
out
jae
cwtl
xor
movsb
adc
pop
jnp
sub
fcomps
outsb
mov
xorb
shr
je
jmp
sbb
mov
js
adc
mov
je
push
sub
adc
adcb
add
sbb
iret
rolb
xchg
nop
gs
pop
and
inc
add
push
pop
xchg
dec
mov
xchg
loope
sbb
inc
sbb
xchg
arpl
les
in
shl
sti
test
push
movsb
lods
pop
dec
xchg
mov
sbbb
into
mov
push
into
test
push
cmp
js
mov
sbb
dec
mov
iret
pushf
inc
xchg
cld
dec
imul
jne
adc
cli
or
orb
jnp
pop
xchg
push
outsb
cmp
fdivr
or
dec
dec
shl
rcrb
pop
cld
lcall
scas
sbb
inc
xchg
pushf
loopew
out
insb
cltd
stos
mov
jne
cltd
push
daa
inc
iret
into
jg
push
sub
in
fistl
std
pop
jo
push
cmpsl
test
jo
cwtl
testb
rolb
icebp
mov
cmpsb
pop
dec
jno
xor
push
int3
aas
push
cmp
push
arpl
call
pop
lea
sub
jb
adc
jns
pop
xchg
mov
jl
jae
fcoml
int
mov
fdivr
adc
aad
sub
cmp
mov
mov
xor
aaa
jmp
in
push
dec
out
fiadds
cmc
in
push
ror
popf
fxch
pusha
or
inc
es
in
mov
ficompl
movsl
xchg
pop
mov
sti
push
out
sub
cmp
int3
call
fdivrs
call
xchg
inc
lahf
and
xor
test
hlt
fsqrt
arpl
pop
push
xchg
pushf
sahf
test
loope
icebp
js
push
push
jae
sti
adc
pop
lcall
xchg
movsl
cmp
rcll
pop
iret
mov
sbb
sbb
push
arpl
mov
xlat
je
mov
mov
cmp
cmp
popa
sub
mov
jg
push
adc
repnz
or
adc
lret
repz
push
decl
loope
mov
adc
mov
mov
jecxz
cmc
mov
and
xchg
and
xchg
sbb
xchg
iret
xchg
xchg
fwait
xrelease
rclb
fadds
or
jne
cmpsb
test
fcmove
xchg
jne
pop
cmp
xor
fiaddl
imul
xor
stos
xor
fistps
cltd
push
test
mov
mov
inc
pop
repnz
test
fwait
into
jo
sti
or
repz
addr16
and
repnz
cmp
mov
xor
add
cmp
xchg
push
inc
cmp
nop
mov
ret
adc
test
fbstp
lret
das
loopne
mov
sbb
out
fsubl
mov
je
or
push
jne
test
cld
cltd
lcall
xchg
andb
jno
pusha
push
testb
or
or
repnz
pop
push
cmp
inc
imul
mov
mov
jle
jno
inc
out
test
dec
jb
dec
cmovae
es
icebp
and
imulb
pop
stos
fwait
xor
in
mov
in
mov
pop
les
fs
out
aaa
cmp
in
es
popf
push
cmp
imul
and
in
test
loop
adc
push
loopne
xorb
in
into
mov
mov
add
notb
cmpb
and
dec
cwtl
lock
ljmp
repnz
xchg
std
add
xchg
scas
sbb
add
cld
loopne
mov
pop
movsb
xor
and
mov
jge
fnsave
and
in
push
dec
mov
add
or
inc
aaa
bound
adc
pushf
inc
sub
mov
stc
xchg
mov
ljmp
pop
jo
and
xchg
lret
in
add
cmpsb
or
mov
ret
mov
xchg
lahf
add
fwait
lret
test
push
sub
push
hlt
mov
push
sti
je
aaa
cmp
dec
clc
cwtl
pop
jno
adc
pop
sub
add
push
cmp
inc
push
ja
cwtl
mov
inc
jecxz
adc
dec
stos
mov
sub
aas
mov
mov
outsb
les
lods
add
fldt
mov
cwtl
cmpsb
xor
fsincos
scas
outsl
xchg
popa
popa
jmp
ret
mov
sbb
adc
adc
in
and
pop
inc
xor
enter
in
orl
cltd
repz
adc
mov
int
xor
out
or
mov
clc
push
mov
push
mov
ret
mov
testl
cmp
mov
xchg
mov
cmp
loop
push
cld
ds
ljmp
cmc
iret
sbb
xchg
scas
sbb
adc
cwtl
adc
xsha256
cmpsb
xchg
mov
pop
or
cmp
stos
loop,pn
cli
addr16
jg
inc
pop
outsl
jbe
dec
mov
cmp
mov
out
ljmp
jno
mov
xchg
lods
std
testb
adc
add
xlat
adc
test
pop
fucomip
cld
ljmp
cmp
jmp
push
sbb
mov
aaa
out
push
mov
push
mul
add
mov
scas
mov
icebp
repz
xchg
ja
in
shlb
mulb
sbb
popf
ret
testb
adc
xchg
add
arpl
mov
cmp
sbb
jne
out
fcom
test
imul
aam
cwtl
pop
dec
lea
pop
xchg
mov
jnp
adc
and
fldl
mov
xor
nop
nop
pop
lcall
push
push
jne
mov
lods
jns
add
stos
lods
mov
cmp
fwait
mov
test
sbb
js
jo
popf
add
and
mov
pop
pop
pop
xchg
dec
scas
pop
popf
pusha
cld
mov
add
mov
xchg
out
call
push
jnp
loop
pop
cli
fs
mov
mov
pop
xchg
lret
loop
add
mov
pop
mov
dec
into
aam
mov
mov
pop
mov
jae
sbb
dec
mov
adc
loopne
jo
call
pop
fcmovbe
int
shl
xor
push
sub
push
mov
cmp
in
scas
addb
fnstenv
hlt
and
push
xchg
icebp
das
repz
push
pop
subb
lds
adcb
cltd
imul
stos
out
ljmp
mov
loop
lret
mov
inc
pop
call
lock
sbb
lret
dec
sub
add
cmp
push
mov
lahf
pop
sarl
mov
ret
cmp
cmp
push
int3
sbb
pop
adc
jmp
xlat
sub
pop
mov
lcall
iret
dec
sbb
repnz
fcom
adc
dec
add
stos
pop
xchg
sbb
repz
push
mov
call
add
add
leave
sbb
push
add
inc
jo
mov
cli
jbe
icebp
into
push
les
inc
push
dec
out
outsb
pusha
enter
pop
and
pop
call
sub
and
cmovp
std
mov
test
scas
or
inc
mov
jne
xchg
lahf
fists
inc
jne
inc
xchg
inc
lods
mov
sub
xor
lahf
and
mov
stos
pusha
pop
les
and
outsb
jecxz
lahf
adc
mov
cltd
sub
jae
jmp
mov
repnz
mov
sbb
mov
or
arpl
jp
inc
outsb
adc
stos
lock
pop
fnop
cwtl
mov
push
dec
sub
aam
and
idivb
lahf
mov
pushf
ficoms
mov
test
mov
cmp
pop
stc
iret
mov
stos
xchg
dec
sbb
push
or
jl
pushf
fimull
inc
jecxz
pop
and
jb
addl
nop
lahf
in
pusha
cli
cltd
scas
outsl
jnp
mov
xchg
addr16
jp
lcall
aad
stos
mov
pushf
inc
ja
aaa
gs
jmp
add
push
std
scas
xor
inc
test
inc
addb
gs
aam
ficompl
push
push
stos
push
insl
orb
sub
pop
or
xchg
pop
icebp
inc
mov
out
insl
stc
aas
sub
xor
test
mov
cmc
jae
mov
inc
lret
outsb
cmc
mov
xchg
mov
xor
fmul
jmp
fs
mov
je
cmp
rcl
xchg
add
je
ret
inc
outsl
jle
shlb
or
int3
xchg
sub
in
inc
xorl
lahf
rcll
test
jmp
xor
call
xchg
inc
or
mov
shr
mov
mov
mov
sbb
dec
mov
call
dec
inc
xor
dec
jbe
xchg
mov
scas
dec
dec
xor
orb
mov
adc
and
fstps
push
and
testl
dec
test
or
sbb
mov
sub
mov
ja
mov
rcll
in
fstps
adc
test
mov
xor
and
mov
sbb
mov
mov
push
xor
or
or
outsb
sub
push
mov
adc
cmp
pop
int3
sub
mov
sbb
xchg
pop
dec
in
stos
jmp
loope
jmp
clc
pop
out
cli
push
jl
sbb
and
scas
pop
fwait
xchg
stos
arpl
cmp
sbb
and
xchg
repz
hlt
adc
insb
pop
out
cmc
andl
push
dec
mov
mov
push
test
mov
out
pop
jno
xchg
shrb
push
adc
mov
out
sahf
cwtl
imul
je
mov
push
cmp
js
enter
sbb
fiadds
inc
adc
or
in
test
inc
sbbb
mov
repnz
and
sub
cld
push
in
bound
jo
sar
lea
or
movsb
xchg
xchg
mov
mov
std
pop
dec
jnp
mov
daa
pop
fs
iret
ret
and
rol
dec
out
xchg
push
dec
sarl
or
sti
pusha
aaa
lock
add
jg
ja
shl
repz
nop
xchg
pop
xchg
cld
nop
addr16
in
loope
dec
xor
ljmp
cmp
push
enter
adc
push
les
sbb
frstor
xor
mov
or
bound
mov
mov
pop
dec
push
mov
mov
or
repz
icebp
cltd
push
cs
jno
inc
insb
insb
arpl
push
cmp
imul
cmp
add
out
arpl
ljmp
pushf
imul
pop
aam
orb
mov
rol
popa
add
ret
ror
stos
mov
bound
aad
fcoml
cmp
mov
xchg
scas
jb
lods
outsl
lds
and
pop
and
fbstp
mov
sub
in
inc
pop
test
cmpsb
and
xchg
dec
clc
int3
adc
or
les
in
sub
inc
ja
adc
add
jo
and
cmp
into
and
stc
test
add
lahf
adc
or
adc
or
mov
sbb
ds
ror
and
mov
cmp
ja
push
insl
fwait
inc
mov
les
ja
repz
add
mov
cmp
sub
lahf
xor
sub
push
test
fs
or
sub
xchg
push
shrb
xor
adc
jbe
jmp
addr16
dec
out
jno
call
xchg
xchg
outsl
lahf
mov
jnp
dec
pop
mov
xchg
adc
push
xchg
fwait
or
lcall
inc
pop
lds
es
push
sbb
aas
xor
popa
add
and
or
outsl
popf
xor
dec
and
cmp
push
cmc
mulb
push
mov
pop
negb
xchg
xor
fwait
in
adc
mov
jmp
add
rcrb
xchg
in
pushf
rorb
jge
mov
rclb
out
sbb
cmp
pop
clc
lea
aaa
add
cmc
mulw
js
jae
add
test
jecxz
aaa
iret
push
fisubrs
pop
mulb
repnz
aad
inc
add
mov
mov
jmp
jle
test
mov
jae
xlat
test
cmc
in
divl
and
lods
nop
cmc
xor
popf
lds
inc
bound
xchg
clc
fistps
add
and
fucomip
cwtl
cmp
adc
mov
mov
ja
or
cs
je
push
popa
ja
cmovp
stos
rolb
pop
push
aas
jp
in
pushf
in
mov
pusha
mov
in
movsl
mov
xor
pop
loope
out
push
lods
mov
xlat
inc
clc
xchg
loop
sbb
movsb
out
popl
test
arpl
sub
pop
gs
aam
sbb
mov
popw
cmp
dec
mov
or
xchg
xchg
jecxz
push
stc
leave
xchg
dec
rcrb
mov
in
jl
mov
and
push
fs
or
xchg
pop
in
icebp
pop
popf
adc
xchg
andb
movsl
inc
inc
jle
and
inc
push
mov
jmp
sahf
pop
xchg
inc
cwtl
sub
sbb
shl
jae
mov
lods
rol
sbb
jge
xchg
cmc
bound
jmp
cmp
sub
jae
xor
jp
imul
or
fs
outsb
or
test
leave
jbe
mov
lock
ret
insl
sbb
movsl
mov
pop
cmp
xor
cs
repnz
cmp
push
aam
popa
out
shlb
insb
jg
in
cmp
sbbl
lret
or
adc
subl
mov
stc
push
in
and
cmp
ret
fsub
hlt
js
rolb
aam
push
ja
rcrb
negl
jge
mov
mov
cmp
push
test
shl
mov
mov
stc
les
divb
sarb
fisttpl
mov
andl
or
cwtl
in
mov
push
fcoml
dec
fisubl
lret
jecxz
fidivs
push
scas
mov
sub
pop
mov
jl
das
push
jmp
in
rclb
push
pop
mov
jne
in
test
lcall
mov
fucomip
out
aas
lods
mov
rorb
mov
mov
insl
insl
mov
ret
imul
jae
cmpsb
ret
sub
dec
or
and
or
add
dec
xor
fmull
jne
dec
test
inc
pop
sub
arpl
pushf
lahf
and
call
dec
xchg
ja
mov
sub
dec
popa
fdiv
jmp
enter
cmp
jg
xor
cmpb
mov
in
mov
cmpsb
or
xchg
clc
cmp
jge
movsb
call
les
lcall
adc
cmp
or
fs
mov
jp
testb
loopne
xor
push
fidivl
scas
mov
add
dec
cmp
insb
xor
xchg
pop
and
aam
sub
mov
rclb
testl
lret
repz
jbe
pop
mov
in
scas
sbb
jp
outsl
in
push
cs
in
add
mov
mov
mov
xchg
mov
mov
lret
xchg
repz
push
cmp
sub
pop
mov
shll
adc
stos
sbb
das
or
jecxz
push
or
aam
popa
xchg
popf
cmp
rol
gs
aad
dec
cmc
iret
and
shr
add
xchg
mov
fildll
or
test
cmpsl
adc
mov
push
cmpb
ljmp
les
fisubl
cld
das
mov
xor
popf
out
mov
in
icebp
ljmp
leave
ss
fs
cmpsl
jno
jmp
cmp
in
popf
jge
mov
mov
inc
fwait
sbb
jbe
repnz
fsubr
push
sub
sbb
iret
jbe
push
lds
iret
xor
roll
push
addr16
xor
imul
dec
fs
mov
xor
aaa
jge
orl
in
xchg
cmp
clc
mov
and
push
xchg
pushf
cmp
mov
test
das
lods
enter
push
mov
push
clc
fisubrs
xchg
lods
stos
stos
sbb
cmp
mov
mov
push
popf
test
sbb
sbb
mov
sarl
xchg
test
xor
aad
pusha
push
add
xchg
cmp
jle
cli
push
jl
xchg
test
imul
jns
add
sub
cmc
fstpl
push
lcall
dec
sub
int
adc
pop
inc
cltd
jbe
cld
lock
xor
adcb
dec
insl
adc
popa
fimull
in
mov
jmp
sbb
movsb
jae
fsubrs
in
in
mov
mul
shr
divb
nop
add
sub
pusha
cmp
dec
arpl
pop
or
ss
sbb
out
xchg
adc
xchg
or
mov
xchg
inc
xchg
out
sub
dec
ja
scas
dec
mov
ret
or
test
push
add
int3
cmp
jecxz
add
xor
roll
mov
adcl
xchg
mov
clc
outsl
dec
pop
mov
dec
enter
mov
jns
mov
push
ret
xchg
lret
dec
push
push
inc
push
mov
push
lds
in
test
jle
inc
fcompl
in
outsb
jnp
sbb
push
shrl
jbe
xchg
insl
in
sub
pop
sbb
in
insl
lock
cmp
ret
pushf
sbb
arpl
test
mov
mov
shr
mov
push
clc
sbb
popa
xchg
push
cmp
or
or
and
mov
ljmp
rcrb
sbb
sti
mov
sti
outsl
repnz
insl
xchg
movsb
jns
mov
inc
loope
fwait
xchg
dec
rcrl
or
add
shld
mov
add
pop
pop
jns
aas
je
icebp
mov
lods
xchg
mov
cmp
or
sahf
fstpl
shrl
push
in
sti
icebp
aam
xchg
repz
hlt
mov
cwtl
cmp
mov
or
adc
fdivr
cmp
adc
lahf
mov
sub
and
sub
test
aad
dec
lret
jno
outsl
loope
push
cwtl
movsb
cmp
out
mov
lods
insl
jns
adc
mov
xchg
cmpsb
fwait
jge
imul
cli
out
mov
xchg
mov
sub
cs
jge
out
sti
sub
dec
out
jle
jae
test
jl
push
xor
loopne
pop
pop
repz
lds
lods
dec
mov
out
popf
or
push
fs
mov
loopne
xchg
cmp
push
xor
fbstp
icebp
mov
idiv
add
outsl
ss
mov
int3
pop
icebp
js
xchg
xchg
loopne
out
bound
shll
xor
dec
pop
inc
and
int
cld
cmpsb
mov
iret
icebp
pop
hlt
es
mov
adc
insl
mov
and
jne
ffreep
jge
mov
adc
jl
gs
dec
pop
mov
mov
jle
pushf
pop
ja
jp
cmp
scas
xchg
push
pop
mov
es
iret
shlb
pushf
jae
cwtl
jae
js
scas
call
sbb
mov
xchg
dec
cmpsl
jg
je
jecxz
dec
loop
and
in
add
roll
ret
mov
bnd
lock
xor
sbb
js
push
dec
sbb
mov
mov
dec
sbb
in
test
addl
jae
js
rorl
cld
gs
mov
lahf
bound
out
xchg
out
enter
js
addl
hlt
ss
lret
fcoml
fmuls
dec
rcrl
shll
adc
cli
adc
aaa
adc
in
ds
jl
dec
sbb
jecxz
je
pushf
adc
addb
mov
enter
lods
mov
stos
xchg
cli
fdivr
xchg
xchg
sbb
pushf
jl
stc
fwait
cwtl
daa
jo
add
inc
nop
stos
movsl
sti
dec
adc
push
jae
loop
test
movsb
nop
ficomps
sahf
sbb
sub
xor
call
pop
sbb
push
fldl
fwait
loope
cwtl
lds
jno
stos
mov
stos
js
clc
sar
jae
insl
repnz
ret
xchg
xchg
cmp
ret
out
sbb
xor
aad
scas
fcos
xchg
dec
cli
xchg
ljmp
aam
sub
pop
ficompl
imulb
inc
cltd
dec
stos
fildl
jne
in
insl
jecxz
mov
insb
and
add
sbb
aaa
sub
mov
push
stos
adc
mov
les
test
and
clc
jns
push
aad
push
and
dec
xor
pop
mov
movsl
mov
lock
jle
test
mov
xchg
mov
js
fnstcw
repnz
adc
daa
mov
or
lea
push
pop
pushf
fildll
test
dec
repnz
push
pop
mov
int
xchg
sbb
repz
in
stc
mov
jbe
dec
sub
pop
sbb
out
call
xchg
or
cmc
mov
andb
or
popa
cmc
in
xchg
push
sti
cmp
ret
jge
stos
push
and
data16
cmp
add
insb
xchg
jp
loope
leave
outsl
jg
push
add
cltd
imul
mov
loop
cltd
mov
negl
pop
fsubs
call
push
add
jmp
mov
addb
add
stos
jg
pop
cltd
mov
aas
int3
fiadds
push
das
push
repnz
lods
fildll
mov
repnz
xor
xlat
xor
dec
movsb
mov
pop
shll
xor
aad
daa
call
fsubrs
shll
sbb
pop
fdivrl
popf
push
or
test
xchg
add
jo
leave
adcl
out
daa
movsb
in
subl
movsb
inc
push
sbb
mov
test
sbb
repnz
nop
jge
mov
xchg
and
bound
xchg
fs
adc
je
repz
mov
xchg
jb
or
inc
or
xchg
dec
movsb
rcr
jl
push
jmp
call
jne
mov
cmpsb
cmpl
rcll
out
pop
fiaddl
sub
cld
push
jbe
inc
stos
dec
push
repz
cmc
imul
sbb
cmpl
mov
jecxz
sbb
pop
out
mov
enter
pop
call
int3
jge
lods
pop
or
scas
into
add
jns
test
popa
push
mov
insl
stos
pop
subl
push
mov
aam
insl
or
dec
and
es
xchg
lcall
cmp
cmc
mov
and
or
push
push
rorl
test
shl
push
pop
and
cwtl
cmpsb
pop
aad
test
push
rorl
push
push
push
dec
cltd
jno
add
mov
push
popa
jns
movb
loope
mov
sbb
or
and
and
mov
xchg
jle
push
add
jae
mov
jae
ret
adcl
or
cmp
int
outsl
ror
jns
sbb
outsl
add
mov
filds
adc
mov
pop
push
mov
sub
std
ja
jl
push
lods
loope
stos
out
push
mov
adc
js
sub
arpl
repnz
lock
ljmp
inc
pop
pop
int3
rcrl
shlb
adc
xchg
jmp
sub
cmp
popa
lea
mov
mov
mov
xor
cwtl
out
out
dec
clc
lods
push
pushf
mov
push
orb
or
mov
adc
lcall
push
push
dec
mov
jno
shrl
jns
mov
leave
iret
fwait
xchg
fs
and
and
scas
leave
je
jge
shrl
repnz
jb
loopne
mov
xor
mov
adc
cs
std
mov
sbb
out
arpl
xorl
cmp
js
into
ljmp
pop
jecxz
lds
and
mov
adc
xor
push
cwtl
inc
outsl
repnz
jae
fsubs
dec
sahf
mov
mov
push
inc
adc
clc
callw
push
or
aas
sahf
ss
lods
insb
jl
mov
orb
fs
out
in
out
sub
movsb
mov
cmp
fildl
lock
fists
sahf
rcrb
dec
mov
mov
popf
or
fcomi
mov
sub
mov
pop
insl
xchg
fwait
xchg
cld
movsl
movsl
sbbb
and
mov
dec
popa
aam
in
dec
gs
nop
pop
imul
mov
subb
mov
inc
sub
xchg
jle
in
loopne
xor
out
mov
cmp
mov
dec
mov
cmp
inc
mov
xchg
inc
dec
inc
pop
ss
cltd
and
sub
cltd
xor
mov
pop
lods
jg
push
mov
mov
pop
in
sub
lds
cmp
movsl
xor
and
sbb
call
mov
andl
sarb
shll
cmp
gs
sarl
ljmp
push
scas
sahf
mov
imul
dec
mov
pop
aam
push
xchg
je
or
dec
add
repnz
fcomi
test
mov
adc
sub
mov
mov
or
or
dec
in
and
jnp
test
mov
adc
dec
arpl
fistpl
mov
ret
out
lahf
mov
test
subl
les
shl
adc
jg
ds
cwtl
inc
cld
imul
flds
or
shrl
dec
das
push
mov
std
dec
sub
sbb
mov
sub
fisttpll
inc
push
je
push
subl
stos
xchg
rorb
pop
xchg
mov
mov
mov
imul
adc
push
xchg
outsl
pop
dec
cmp
into
ret
in
in
imul
push
sbb
insl
loope
mov
adc
daa
ds
dec
lahf
mov
mov
dec
cmp
cmp
sti
mov
mov
nop
mov
pop
mov
cmp
outsb
mov
push
out
lret
repz
inc
pop
jns
rcr
xor
xor
push
xorb
adc
insb
out
lret
dec
jns
stc
mov
or
push
mov
jp
dec
inc
inc
cmpsb
cltd
nop
mov
or
and
and
mov
icebp
enter
or
push
popa
push
ljmp
pop
addr16
outsl
lret
enter
call
jb
mov
out
nop
movsl
jcxz
jecxz
mov
push
xor
movsl
les
cltd
jge
pusha
sub
mov
or
xchg
dec
push
pusha
or
stos
fistpl
mov
icebp
les
popf
mov
in
dec
out
std
cmpsl
jle
cmp
xchg
lods
or
cli
mov
adc
cmp
cmpsl
loope
jg
shl
jnp
out
pop
xchg
cmpsb
mov
push
push
adc
xchg
xor
add
xchg
xchg
push
mov
sbb
push
ficompl
mov
mov
sub
rcll
out
xchg
ja
jmp
and
lret
adc
cld
mov
insb
mov
mov
and
pop
mov
adcb
aaa
push
and
movsl
push
insl
repz
and
stos
fwait
push
frstor
test
push
cmpsl
movsl
clc
test
pop
add
sub
xchg
ret
mov
cmp
sbb
pop
mov
insl
jb
mov
cmp
adc
pusha
out
bound
mov
subb
stos
in
cmp
xchg
mov
jp
dec
dec
int
loope
daa
sbb
or
mov
mov
lods
scas
fdivl
fildll
imul
loope
call
or
push
dec
mov
jae
mov
jle
mov
aam
push
jae
mov
dec
pushf
jle
out
andb
lock
cmpsl
or
cmp
loop
pop
pop
jg
mov
mov
test
loope
dec
mov
mov
adc
pushf
inc
mov
mov
mov
add
pop
imul
stos
adc
mov
mov
or
clc
movswl
xor
ljmp
mov
mov
insb
aad
gs
add
cli
jle
leave
xor
loopne
popf
xor
pop
cmpl
pop
inc
mov
loop
mov
iret
fidivrs
dec
fisubs
int
mov
or
xchg
arpl
stos
push
mov
dec
adc
testl
out
int
cmpsl
sub
orl
add
test
push
and
mov
les
adc
mov
xor
mov
orb
sahf
push
push
popf
int3
sbb
in
add
lcall
sbb
les
dec
pop
cmpsl
stc
out
mov
pop
push
jg
jne
mov
jmp
sbb
xchg
pushf
lds
int
fcmovnbe
sbb
int
mov
fucomp
adc
out
mov
mov
ret
cmp
out
in
mov
lods
fwait
test
pop
jo
xchg
mov
push
in
pop
xlat
sbb
jns
jne
je
icebp
in
repnz
add
add
pop
mov
bound
js
aaa
pop
testl
repnz
les
jmp
jne
lods
add
xor
xchg
push
sar
repz
std
dec
jno
outsl
and
pop
sbb
scas
fnstsw
mov
mov
enter
sbb
jle
cmpsb
pusha
in
lcall
push
mov
enter
push
lret
aaa
xchg
pusha
pop
inc
mov
and
leave
loop
jnp
jecxz
jno
mov
imul
lods
cwtl
shlb
pop
mov
int
cmpsl
xchg
movsb
cs
xor
sbb
inc
mov
orl
add
sbb
pop
movl
shll
sub
enter
mov
in
out
repnz
mov
jle
push
push
lock
add
ret
dec
and
jne
pushf
ljmp
mov
daa
inc
sub
aaa
add
scas
push
dec
jns
xchg
mov
jmp
sbb
bswap
ljmp
pop
cmpsb
cmpsl
adc
mov
or
rcll
mov
xchg
movsb
scas
shrl
fwait
std
stos
mov
loopne
pop
cmp
in
lods
clc
and
arpl
xchg
les
xor
jmp
mov
xchg
pop
lret
cmp
and
repz
cmp
cmp
insb
mull
sbb
lods
stos
cld
inc
imul
add
fstps
push
and
push
mov
lock
aaa
dec
stos
imul
fdivl
inc
loope
lds
shll
mov
leave
fildl
cltd
dec
popf
xchg
xchg
cmp
mov
lods
je
sbb
inc
jmp
lret
insb
mov
inc
mov
inc
scas
jo
and
mov
mov
adc
nop
jbe
rcll
jg
nop
dec
dec
xchg
cltd
les
loop
lods
adc
dec
xchg
int3
sbb
fsubs
or
vmovhps
or
push
or
pop
shll
jg
ret
sub
ret
in
test
cltd
pop
mov
lds
ss
repnz
and
jmp
jle
fstpl
leave
xor
out
add
fistps
hlt
addr16
mov
sub
stos
sub
les
add
arpl
into
imul
mov
lods
mov
and
dec
cmp
dec
xor
mov
dec
pop
adc
testl
pop
or
ret
repnz
out
jns
mov
push
call
mov
imul
and
icebp
loopne
jno
pop
lret
adcb
repz
bnd
fisubl
je
dec
mov
xor
in
push
add
or
push
inc
not
in
jno
push
add
xor
out
out
lahf
test
mov
sbb
xor
lret
sub
std
stos
mov
loop
clc
push
popa
jmp
cmc
push
adc
fnsave
mov
int3
and
mov
push
dec
add
and
mov
cmp
pop
mov
fildll
and
ss
or
sahf
inc
cmp
in
jmp
jo
pop
orb
movsb
add
push
mov
mov
je
insl
aaa
push
mov
arpl
mov
mov
or
mov
jo
cltd
mov
movsl
push
and
popf
jmp
cmpsb
leave
arpl
int
mov
std
sub
bnd
lea
mov
test
stos
push
popf
mov
push
fcoms
mov
xchg
mov
mov
sbb
std
test
ret
xchg
xchg
xchg
mov
lea
popa
int3
testb
xchg
pushf
rol
inc
pop
bound
lahf
cmpsb
mov
aad
xchg
popl
adc
xor
mov
push
cmp
mov
add
das
stos
repnz
mov
out
imul
nop
lods
mov
clc
xlat
out
inc
test
in
cmp
mov
fsubr
cwtl
dec
pop
sbb
dec
fdivl
sbb
hlt
inc
aaa
cmc
fildl
aam
dec
jmp
mov
cmp
js
cmpsb
pop
js
fmul
jae
daa
loopne
cmp
xor
loope
sub
fstpl
outsl
push
lods
mov
iret
mov
inc
xor
push
daa
fldcw
stos
mov
xor
mov
sbbb
add
mov
fdivr
lahf
lret
sub
shll
mov
int3
rcrb
dec
aaa
and
mov
mov
xor
jecxz
mov
pop
mov
mov
lock
loope
icebp
incl
xchg
test
lea
ja
xor
in
xor
sbb
int
cmpsb
imul
loop
ljmp
loopne
jmp
sub
xor
js
loop
mov
into
mov
and
pusha
mov
add
data16
or
sbb
jne
js
inc
mov
rclb
add
sbb
sbb
pop
pusha
inc
hlt
ja
jae
or
jmp
movsl
cmp
imul
rolb
pushf
sbb
xor
enter
fsubl
in
or
adc
sahf
leave
sbb
xchg
cmp
sub
jbe
sub
inc
xchg
jl
rcll
or
test
popa
xchg
jns
cmp
push
test
push
or
sbb
es
sahf
dec
or
mov
incb
dec
test
push
jl
into
daa
imul
mov
dec
dec
mov
hlt
popa
ror
mov
mov
mov
lahf
cld
jnp
cmp
stc
clc
mov
mov
and
dec
inc
icebp
scas
fsts
out
adc
push
test
xchg
ja
cwtl
adc
adc
test
iret
pcmpgtd
fidivrl
rol
jmp
mov
and
xchg
nop
inc
pop
or
push
mov
push
andl
repnz
call
mov
add
andl
test
jae
fidivl
test
jae
push
sbb
adc
leave
ss
xchg
jl
jo
dec
bound
inc
gs
insl
std
dec
push
ja
sbb
dec
and
mov
in
fnstcw
orl
std
int
and
sbb
das
popa
iret
pop
stos
jns
mov
ja
add
xor
loop
outsb
mov
cmpsl
pop
and
aam
jl
cmp
cmp
mov
mov
pop
icebp
sub
aam
js
lods
test
int
mov
dec
cmpsl
cs
push
jmp
test
loop
or
and
sbb
enter
jo
push
or
lock
sbb
cmp
jmp
les
test
sbb
sbb
icebp
push
pushf
sbbb
or
jp
sbb
fisubs
fs
mov
cmp
repz
mov
jnp
ja
push
clc
xor
dec
mov
cltd
fcmovbe
call
sti
xor
pop
inc
rcr
fistps
dec
data16
xchg
jb
push
adc
into
xchg
cltd
rorb
mov
inc
cmp
or
sbb
jp
and
dec
pop
fdivrl
and
jne
jge
mov
sub
pop
or
scas
dec
int3
jno
test
lods
cmc
inc
loop
negb
adc
push
popaw
js,pt
or
mov
mov
mov
mov
pop
shll
xor
mov
pop
push
xchg
mov
xor
movsb
int
xchg
pop
mov
lea
adc
and
push
dec
pop
ret
mov
xchg
jns
fcoms
jl
push
xchg
cmp
loopne
lahf
addl
mov
cs
leave
arpl
gs
lods
inc
stos
or
inc
pushf
nop
ss
movsb
pop
push
adc
or
jns
gs
mov
push
cmp
ljmp
cld
icebp
adc
adc
ret
cwtl
clc
sahf
cltd
movsb
or
cmpsb
add
add
inc
pusha
ss
mov
sahf
jecxz
mov
xchg
pop
mov
add
add
mov
adc
idiv
dec
jecxz
lret
sub
jae
imul
pop
xorb
adc
mov
call
sbb
sbb
push
cmpsl
jbe
mov
out
stos
sti
push
out
addr16
rolb
cld
nop
loope
cmpsl
xor
add
sbb
mov
add
subb
mov
ss
mov
adc
aas
push
in
popa
push
cmp
test
jae
mov
jb
jge
mov
push
sbb
pop
jo
cmp
push
and
mov
outsb
loope
sahf
pushf
mov
in
shlb
xchg
mov
jae
mov
mov
adc
add
fildl
packuswb
ds
cmpsb
xchg
test
in
aad
jae
es
out
jb
mov
dec
fwait
out
dec
cmp
mov
jno
orb
int3
mov
shr
push
fs
sti
rcrb
dec
inc
sub
data16
out
xchg
fmul
xor
mov
add
je
repz
fsub
mov
pop
pop
xchg
jg
dec
cmp
std
xchg
loope
mov
xchg
and
cmc
pop
xchg
adcl
fiaddl
lcall
mov
clc
fwait
popa
jg
cmp
pop
imul
mov
ficomps
ja
mov
fcompl
out
addr16
scas
and
stc
scas
jmp
aaa
in
or
pop
int
pusha
addb
test
lea
push
lds
shr
mov
sub
int3
loope
or
mov
mov
test
push
dec
xor
xchg
add
or
push
inc
bound
push
mov
andl
add
fdivrp
cltd
xchg
out
xchg
pop
sub
aas
rolb
lahf
add
xor
jl
push
mov
mov
mov
aas
or
and
pop
dec
ss
movsb
add
imul
arpl
mov
daa
or
sbb
fcomip
mov
add
xchg
popf
sub
lret
add
sbb
out
mov
adc
and
mov
idivl
aam
adc
test
fcoms
push
sbb
cltd
cwtl
lcall
or
jge
cwtl
fnstenv
cld
leave
jnp
clc
jle
inc
pushf
jb
mov
or
xor
sbb
jmp
shlb
or
mov
stos
xor
cli
outsb
dec
stos
sub
jno
xlat
fwait
xor
cwtl
gs
ljmp
scas
scas
mov
popa
jnp
push
aam
or
mov
call
xchg
lods
jbe
mov
stc
mov
cltd
test
cld
lods
repz
xchg
mov
clc
pushf
mov
mov
in
adc
sbb
lret
adc
es
sahf
fnstsw
insl
jmp
ret
in
shll
mov
jae
mov
add
lea
icebp
xlat
lds
mov
push
test
sub
cs
js
mov
dec
add
push
inc
ljmp
nop
dec
sahf
mov
pushl
push
mov
rorb
dec
arpl
mov
jno
scas
pop
cmp
lret
ret
ja
es
xor
rorl
jnp
rcrb
pop
xor
xor
dec
xchg
xchg
fldenv
imul
cltd
inc
out
ret
or
pop
sbbl
mov
mov
addr16
and
pop
dec
sbb
mov
out
xchg
fnsave
or
mov
stc
loopne
mull
int
pop
leave
addl
int3
push
sahf
adc
in
mov
mov
cs
out
shl
adc
xchg
stos
sahf
and
or
xor
dec
mov
cmp
lds
int
out
push
add
cmpb
data16
jle
mov
inc
movsb
cmp
jp
les
sbb
jg
aas
imul
scas
lahf
scas
test
sbb
jns
mov
adc
sbbb
push
lods
add
pop
out
sub
mov
in
jne
add
mov
adc
adc
cmpsl
fwait
insb
inc
aaa
sub
push
push
pop
in
add
ljmp
xchg
push
js
lahf
mov
repz
xor
xchg
push
jp
xchg
test
pushf
pop
stc
push
stos
data16
mov
push
jne
sub
xchg
cld
cwtl
je
loop
sub
and
stos
scas
or
inc
imull
sbb
mov
fmuls
cmp
pop
iret
rcr
repz
jge,pn
arpl
fcmovne
outsb
add
movsl
pusha
sub
clc
scas
push
mov
ret
loopne
xlat
mov
clc
nop
xchg
mov
repz
pop
xor
or
dec
jno
lret
pushf
cs
stc
dec
cmp
mov
testb
sbb
ret
push
jo
and
jg
push
loope
inc
pushf
sub
int3
lock
loopne
je
les
movsl
decl
aam
mov
stos
adc
adc
movsb
mov
or
fiaddl
jmp
xchg
pavgb
repnz
push
out
js
flds
test
push
fnstenv
testb
inc
jmp
dec
mov
addr16
xchg
mov
mov
adc
jnp
lahf
mov
fucomip
sbb
xchg
sbb
insb
mov
test
repz
icebp
adc
in
cmpsb
lea
fsubrs
mov
jb
loope
push
pop
cmp
adc
cmp
ss
aam
mov
std
mov
dec
xchg
pusha
lahf
push
and
dec
xchg
add
xchg
jnp
add
mov
in
ljmp
mov
push
xchg
cmp
cmp
pop
push
ret
xor
test
ljmp
dec
nop
repz
cltd
adc
lods
lock
cmp
mov
fadd
sbb
inc
pop
inc
sbb
jbe
push
stos
pop
jb
sti
adc
gs
test
lods
adc
les
push
sbb
or
sbb
xorl
in
insl
icebp
in
sti
push
std
lcall
jg
sti
icebp
mov
cli
inc
test
bound
jae
pop
inc
pop
cli
and
test
ljmp
xchg
pop
insb
stos
sub
ljmp
pop
jge
fistps
jmp
divb
adc
test
dec
hlt
cld
lds
mov
jmp
jp
xchg
sbb
jo
xor
popa
fldl
jmp
ljmp
loop
addr16
mov
cmp
push
push
bnd
call
test
stos
out
in
add
mov
inc
int3
adc
imul
in
bound
jbe
test
cmp
arpl
dec
and
or
adc
mov
xor
xlat
jle
ds
out
push
cld
xchg
popf
pop
sbb
movsb
xchg
dec
sub
stos
lahf
sub
add
fnstsw
fnsave
fstp
insl
xchg
pop
fimull
mov
and
xchg
mov
jnp
mov
rcll
imul
ja
mov
mov
nop
mov
jge
test
pop
daa
xchg
mov
mov
mov
mov
fnstsw
je
in
mov
cmovg
lds
inc
movsl
inc
in
mov
test
jno
aad
push
les
inc
cmc
adc
cmpsb
ret
popa
fstps
stc
mov
mov
into
sar
add
rol
push
cmpsl
cmpb
inc
jns
jg
sbb
push
popf
cmovns
mov
insb
dec
leave
das
and
push
out
inc
xchg
fsubp
mov
outsl
add
mov
mov
jo,pt
mov
aaa
xchg
add
fdivl
push
mov
jo
adc
je
cmp
or
dec
xchg
iret
insb
adc
mov
cld
mov
cltd
push
lret
dec
icebp
adc
jbe
xchg
ds
mov
jmp
xor
test
jnp
sub
clc
cwtl
daa
sbbb
cwtl
sbb
mov
dec
lods
jmp
mov
add
insl
cmp
test
int3
jmp
mov
push
mov
loopne
loope
xchg
ljmp
outsb
jo
shl
sub
mov
loope
das
loopne
cmc
movsl
xchg
mov
cmp
int
addb
and
bound
out
jmp
std
sub
sbb
and
mov
aaa
stos
push
loop
xchg
push
nop
push
pop
jae
fs
insl
pop
popa
or
inc
sbb
cmp
iret
sbb
sarb
lock
mov
std
mov
in
insb
mov
cmpsl
lret
or
cltd
mov
leave
jo
sbb
int
mov
addb
cmp
add
add
mov
cmp
jp
cmp
test
and
xchg
add
lahf
dec
inc
inc
xorl
mov
pop
mov
cmc
jae
pop
adc
xor
dec
push
push
dec
mov
in
dec
in
and
push
hlt
xor
adc
arpl
movsb
mov
cmp
pop
mov
repnz
jne
mov
mov
and
xor
scas
in
or
decb
in
hlt
lock
in
lds
out
jecxz
pop
mov
cltd
push
movsb
and
hlt
sahf
add
sti
ret
sbb
pushf
addb
lods
in
insb
call
sbb
sub
imul
hlt
rclb
popf
lock
cltd
in
mov
jne
cmc
jmp
pop
or
mov
pop
dec
mov
dec
bnd
mov
inc
clc
mov
mov
aaa
mov
pop
leave
sbb
insb
sti
test
lea
push
insb
cmp
add
dec
int3
loopne
add
push
ds
push
cmp
pop
lea
pop
dec
add
ret
mov
dec
push
mov
aad
inc
push
stc
test
jb
repz
or
sub
lret
popf
lcall
push
in
xor
sbb
addr16
mov
lock
xor
push
xlat
sarl
cs
test
jmp
icebp
in
add
adc
cmp
divb
sub
insl
or
pop
jmp
arpl
mov
mov
pop
xor
cmc
add
xchg
mov
aad
popa
repnz
rcrb
call
pop
mov
add
mov
ss
dec
add
mov
mov
addr16
call
mov
push
icebp
imul
push
stc
dec
loopne
inc
mov
in
dec
xchg
mov
mov
xchg
mov
clc
cmpsb
lret
adc
insb
dec
sub
mov
imul
out
jle
pop
xor
jno
sub
add
in
iret
push
out
jno
loop
mov
dec
cltd
inc
fadds
pop
push
dec
sub
imul
sub
scas
mov
insl
push
imul
fsubs
add
xlat
xchg
push
adc
ss
cmpsb
push
lock
mov
xchg
dec
aam
lret
mov
xlat
xorl
ret
cmpb
push
cmpsb
pop
mov
jecxz
add
mov
mov
les
daa
jno
add
mov
fwait
fs
push
xchg
adc
adcb
insb
stc
xchg
xchg
aaa
out
ret
sbb
mov
and
mov
lret
sarb
mov
pop
or
hlt
mov
mov
cmc
mov
enter
push
sbb
daa
fisubs
or
lods
adc
dec
mov
arpl
in
sbb
inc
scas
ja
add
mov
call
cmpsl
subb
repz
cwtl
fisubrs
inc
popa
in
int3
fisttpl
inc
cmp
jbe
movsb
xor
mull
mov
push
dec
push
xor
lahf
pop
push
outsb
mov
mov
movsl
testb
adc
lods
jae
or
pop
out
jl
sub
jne
test
rcll
jle
bound
andl
out
mov
xchg
and
data16
push
rorl
xchg
outsl
adc
push
jnp
mov
mov
cld
das
movsl
out
pop
pop
mov
mov
mov
incb
xchg
call
xchg
adc
rcrb
mov
push
lea
inc
mov
inc
add
stc
orb
ja
out
sub
icebp
mov
sub
add
jo
addl
aam
repz
dec
icebp
cmp
mov
test
add
jecxz
sahf
rol
fnstcw
xchg
ljmp
imul
dec
mov
clc
add
mov
repnz
into
xor
mov
inc
pop
xor
pop
sahf
dec
xorb
mov
mov
cs
push
out
stos
lret
repnz
subb
xchg
popf
push
mov
je
jb
jle
data16
or
call
lcall
dec
add
xchg
add
mov
xchg
outsb
in
cli
adcb
popf
xchg
xchg
xchg
mov
loop
xor
loope
lahf
push
fsubp
push
or
in
adc
xchg
dec
fidivrl
pop
mov
gs
test
dec
repnz
fs
pusha
sub
fs
addr16
xor
jnp
decb
adc
sub
xor
aad
gs
cli
scas
sahf
std
jg
loope
and
push
ljmp
lahf
cmp
xchg
add
out
pop
xchg
scas
mov
mov
adcl
sub
out
inc
xchg
mov
imulb
shlb
mov
sbb
out
pop
mov
mov
cltd
and
mulb
call
push
ret
sub
pushf
shl
movsl
pop
mulb
mov
adc
or
lea
and
faddl
push
push
adc
movsl
es
sar
pop
fisttpll
cwtl
stos
jmp
stc
aad
jns
mov
ret
and
jmp
xor
repz
jle
add
xchg
sub
movsb
lahf
in
test
cmp
dec
jns
mov
loop
mov
test
dec
out
lret
cmc
mov
push
loop
ss
repz
in
jmp
in
xchg
jmp
je
and
aad
push
lahf
rcl
fwait
push
jns
add
cmp
or
repnz
or
mov
lahf
and
cmp
push
push
repnz
clc
shrb
mov
cld
mov
sub
cmpl
arpl
mov
outsl
jecxz
pop
test
scas
xchg
mov
ret
lret
call
pop
in
call
fwait
or
std
pop
int3
data16
cmp
pop
cltd
leave
in
adc
dec
cs
dec
jg
adc
lods
dec
xchg
jae
adc
mov
lock
stos
lods
fmull
clc
pop
push
push
push
ss
hlt
dec
hlt
pop
outsb
jl
rcrb
popf
test
inc
jl
mov
pop
xchg
pop
enter
jbe
movsl
es
inc
ljmp
xchg
out
imul
adc
pushf
leave
sahf
fs
cmp
lods
ja
fwait
jnp
repnz
out
mov
or
nop
dec
test
mov
pop
push
lret
mov
mov
aad
mov
xor
ss
pop
fldenv
sub
in
shrb
cmp
push
dec
pop
sub
cmpb
call
xchg
cmpsl
add
sub
ljmp
out
dec
aas
or
and
nop
imul
daa
rcrb
add
dec
loopne
xchg
pop
sar
cmpl
in
roll
int
fcmovb
or
pushl
cmc
in
cli
push
xchg
call
mov
jmp
fisttps
pop
inc
imul
leave
aad
fs
es
frstor
push
mov
inc
push
xchg
add
mov
data16
sbb
mov
push
iret
nop
lock
inc
or
or
push
or
fldenv
in
fldcw
pop
cmp
xchg
aad
jp
sub
inc
mov
xchg
orb
xchg
or
andb
pop
mov
mov
push
inc
sbb
mov
insl
sub
adc
dec
fwait
aad
and
lods
bound
jp
cltd
push
xchg
mov
adc
std
imul
ss
sub
inc
scas
incl
push
inc
mov
dec
mov
scas
push
test
adc
scas
aas
sbb
adcw
clc
add
mov
dec
mov
sbb
xchg
fnstsw
movsl
and
jmp
fisttps
mov
fnstcw
in
mov
xchg
out
mov
jmp
xlat
inc
inc
popl
ja
and
jmp
cmp
icebp
pop
cmpsl
data16
cmp
mov
xor
mov
inc
fdivrl
cs
pop
outsb
daa
and
fs
adc
std
push
notb
das
data16
cmp
dec
or
sbb
and
mov
mov
xor
add
data16
sub
neg
cltd
and
repz
sbb
shll
rcrl
dec
fldcw
sbb
aaa
dec
and
xchg
sub
sbb
sahf
cmc
pop
pusha
fwait
dec
mov
lret
adc
inc
push
sti
xchg
imul
pop
jl
cmp
jp
jo
out
xchg
lret
in
fdiv
or
cltd
cmp
sti
bound
lea
push
jbe
and
addr16
lods
ds
ret
lods
mov
stc
pop
sub
jnp
int
sub
popf
gs
jns
movb
pop
add
xchg
ljmp
lods
in
fwait
sub
mov
sub
push
jno
mov
sub
js
or
cmp
jg
and
daa
mov
mov
jb
insb
sbbb
dec
xchg
nop
mulb
ret
arpl
stos
sahf
dec
cmp
add
jge
mov
and
pop
mov
pop
sub
shlb
adc
jnp
or
out
hlt
add
lea
cld
in
pop
mul
cmc
repnz
enter
sarb
lret
mov
es
ds
daa
sub
jb
nop
loop
dec
adc
mov
or
xor
js
and
out
adc
xchg
push
jl
outsb
adc
mov
pmulhw
addr16
push
orb
jecxz
cmp
cli
jp
dec
mov
pop
xchg
out
sar
xlat
cwtl
jns
in
sbb
cmp
fbstp
mov
and
push
es
inc
adc
inc
repnz
mov
cmp
adc
xchg
aas
sub
sub
adc
arpl
addr16
cmp
popf
lock
and
cmc
lea
rorl
sbb
push
int
add
aaa
mov
mov
adc
sbb
subl
jg
mov
xchg
lock
xor
mov
je
or
imul
fs
sub
xchg
add
shrb
or
addr16
dec
fldl
xchg
add
adc
xchg
imul
mov
push
fsubr
pop
lret
aam
outsl
dec
add
push
sbbb
inc
dec
push
fbstp
aas
out
jp
and
insb
push
xor
nop
int3
xchg
add
out
pop
sbb
dec
and
xchg
jbe
in
clc
test
mov
xchg
outsb
mov
push
add
bound
ljmp
xchg
and
movsb
call
sbb
push
and
dec
pop
mov
pop
adc
xor
shrb
in
sub
and
or
sub
movsl
mov
out
push
mov
adc
imul
call
cmc
imul
xor
jne
call
lods
loop
jae
lret
xor
cmp
ror
or
ja
mov
movsb
xchg
daa
lret
cmp
jnp
add
pop
test
ds
lods
add
lret
cmp
sub
and
fldl2e
xchg
rclb
xchg
repnz
fwait
or
test
mov
dec
les
mov
jne
das
idivb
and
pop
out
jae
add
push
and
lds
jl
into
lea
cmp
sub
dec
lea
cmc
adc
pop
int
cmpsb
xchg
cmp
cli
dec
lahf
imulb
mov
sub
hlt
xchg
cld
mov
ljmp
lahf
cmp
lock
loope
sbb
imul
and
outsl
cmp
add
xchg
push
push
test
lcall
mov
adc
ret
add
popf
inc
in
jbe
mulb
movsb
mov
mov
sahf
out
cld
inc
in
nop
movsl
xchg
filds
fs
and
jmp
adc
adc
adc
jecxz
add
or
ret
push
mov
pop
mov
gs
stos
pop
mov
push
hlt
scas
stos
add
icebp
rclb
inc
sbbb
stos
loopne
xchg
aam
mov
sbb
and
es
sbb
mov
icebp
jbe
popf
imul
les
movl
enter
lcall
cmp
jns
adc
gs
outsb
cli
popa
or
out
sbb
pop
xor
pop
xor
push
fwait
insl
pop
out
jo
stos
xchg
cld
popf
leave
fs
sub
xchg
sbb
sbb
add
mov
sub
xor
mulb
jecxz
jl
dec
ret
shlb
cli
hlt
pushf
sub
call
cmp
or
lods
lret
dec
iret
loopne
push
lcall
mov
ret
jecxz
shrl
mov
dec
sti
lret
pop
popa
mov
or
and
xor
sub
imul
xlat
loopne
sub
iret
jecxz
stos
arpl
lahf
add
fnstsw
lds
lods
inc
nop
mov
xchg
xor
and
outsb
outsb
mov
pop
mov
pop
jmp
xchg
mov
movsl
mov
bound
imul
add
mov
out
sbb
add
fnstcw
mov
loopne
xor
ror
xchg
push
or
daa
daa
cmp
add
push
rolb
ret
fs
push
and
or
in
clc
in
ss
out
cld
jmp
out
out
inc
xchg
sbb
cmp
and
or
jl
mov
aas
mov
and
loopne
nop
gs
push
jae
sbb
mov
sub
in
push
ljmp
sbb
lods
pop
jl
mov
inc
mov
sbb
cld
leave
pop
inc
sub
gs
jno
mov
lahf
cmp
push
test
jg
xor
mov
add
nop
xchg
clc
sub
out
sbbb
xor
fyl2xp1
cmp
mov
test
sahf
adc
xor
mov
mov
fistpll
mov
ljmp
pop
mov
or
je
repz
cmp
fnsave
mov
lahf
sub
add
gs
add
adc
std
fcomps
push
inc
xchg
jecxz
mov
sub
push
ja
out
adcb
out
jae
cltd
daa
fcmovne
push
mov
dec
test
lahf
adc
scas
dec
repnz
mov
lock
lahf
sar
test
lcall
xchg
pop
addr16
mov
xchg
rcrb
popf
mov
loope
xchg
mov
mov
jns
outsl
shrb
cld
pushf
scas
dec
lret
cmpsl
xor
iret
adc
and
sbb
lret
jmp
aad
popf
xchg
js
out
sbb
xchg
cmp
ret
fisttps
insb
test
adc
dec
aam
popa
jae
dec
aam
jns
xor
inc
outsl
loopne
dec
xchg
call
or
jns
adc
pop
stos
push
sbb
nop
es
adc
xchg
loopne
pop
sbb
push
fimuls
push
push
xlat
popf
sub
imul
enter
mov
mov
orb
or
in
notb
leave
xorb
outsl
mov
pop
loop
jl
cmpsb
push
pop
dec
push
push
in
ljmp
cmp
sub
ret
jmp
xchg
fs
add
and
add
push
cld
fwait
jmp
push
mov
shl
mov
xchg
insb
bound
cmp
or
mov
mov
enter
pushf
sub
dec
lods
mov
dec
jmp
or
inc
js
mov
ss
popf
xor
mov
in
sub
xchg
mov
xchg
cmp
push
xchg
pop
movsl
mov
insb
push
ljmp
add
xor
loop
jl
cmpsb
push
push
dec
push
push
in
ljmp
ds
xchg
stos
pop
sub
ret
jmp
fs
add
jg
fstl
fwait
jmp
push
mov
shl
mov
xchg
insb
bound
cmp
or
mov
mov
enter
fldt
mov
jnp
mov
dec
jmp
or
inc
js
mov
ss
popf
xor
mov
mov
stos
sarb
mov
orb
or
in
notb
scas
xorb
outsl
mov
mov
push
in
ljmp
cmp
ret
test
movsb
clc
mov
rcrb
mov
cltd
mov
or
inc
lods
mov
js
fisubrl
sbb
push
dec
icebp
imull
pause
dec
repnz
mov
adc
jp
adc
sub
mov
jae
sti
rolb
sti
mov
mov
std
or
mov
xlat
cmc
mov
in
mov
mov
push
add
inc
outsl
dec
add
ja
mov
sub
or
inc
sbb
fisttpll
and
and
fstpt
and
dec
testb
jg
mov
scas
sarl
or
cltd
nop
sub
jne
lahf
push
loope
or
leave
sti
ja
cmp
cmpsb
sbb
lcall
aaa
adc
mov
movsb
mov
or
cmp
add
scas
push
xchg
mov
push
push
push
shlb
dec
xchg
and
imul
movsb
xchg
add
xchg
idiv
jbe
idivl
insb
repz
adc
call
mov
cld
cld
lret
mov
xchg
and
fisubrl
cmp
sbb
js
nop
outsl
and
jmp
inc
push
ljmp
jl
pop
in
mov
sbb
mov
cli
dec
mov
sbb
in
in
push
rcr
insb
xchg
lds
jo
push
mov
cli
jp
loope
in
std
xor
in
arpl
dec
lea
mov
jp
sub
repz
push
aad
sti
out
jnp
movsl
mov
jbe
ss
rolb
lods
mov
xchg
dec
lcall
orl
or
mov
mov
or
cwtl
or
xchg
paddb
xchg
jne
ret
mov
mov
lret
shll
out
add
push
shll
cmp
sub
mov
inc
cmp
pop
sub
dec
adc
xchg
push
clc
lcall
mov
rcl
stos
pop
andb
lods
dec
and
addb
inc
mov
dec
ret
and
popa
adc
faddl
push
xor
jo
mov
xchg
outsb
fsubl
test
push
mov
push
mov
pop
test
nop
or
testb
xchg
pushf
sub
out
in
and
mov
mov
and
and
mov
inc
jecxz
cli
xchg
loopne
dec
push
jmp
xchg
mov
icebp
push
mov
enter
cmp
dec
sub
jns
cld
push
call
and
ret
cli
pop
or
mov
jp
dec
xchg
or
jbe
out
iret
shll
jle
into
push
fdiv
cmp
adc
adcl
loope
mov
jo
mov
in
dec
iret
adc
push
mov
mov
jle
add
test
ljmp
xchg
cli
fs
sbb
test
jle
push
mov
add
rcll
push
mov
mov
loop
pop
add
xchg
ja
mov
xchg
cmp
push
pusha
mov
es
mov
subb
andb
mov
cld
int
test
sti
outsb
push
jmp
xor
xor
test
or
mov
jmp
mov
test
outsl
fildl
xlat
xchg
pop
mov
push
les
in
loop
xchg
jmp
mov
push
cmpsb
cmp
cmp
aad
out
repz
and
std
pop
jns
stc
push
pop
shll
add
leave
push
mov
mov
pop
lods
outsb
xchg
add
out
xchg
cld
sub
adc
jb
add
cmp
or
pop
mov
dec
xchg
pop
jo
gs
leave
lcall
daa
push
dec
add
add
xlat
pop
shlb
mov
leave
pop
push
mov
lret
jl
sarl
out
cmp
add
in
imul
xchg
lea
scas
xor
adc
mov
or
cld
xchg
cld
ffree
lcall
cwtl
pop
add
add
and
mov
fstpt
scas
sahf
xor
lods
cmp
in
add
xchg
pop
daa
xchg
int
push
cmpsl
ja
dec
fmull
or
adc
jno
jae
movsl
xchg
pop
arpl
push
adc
rol
mov
jle
adc
in
imulb
push
je
test
mov
arpl
mov
call
std
jae
pop
xor
jno
cltd
dec
xchg
idiv
xor
mov
out
stc
cmp
lock
adc
mov
mov
or
xor
add
cltd
enter
loop
xchg
sub
jmp
bound
pop
cmpsl
sbb
bound
popa
jmp
mov
push
out
std
xchg
loope
ljmp
cmp
insl
pop
jo
mov
in
xor
add
pop
xor
add
movl
pop
out
mov
add
aad
repz
ss
mov
cld
mov
mov
lcall
gs
fcompl
jmp
cmp
xchg
mov
add
mov
jb
or
cmp
mov
test
lahf
and
push
jo
repnz
mov
pop
in
mov
fs
sub
mov
mov
lea
cmpsl
movsl
lcall
xchg
cltd
or
jecxz
loope
mov
leave
pusha
fldenv
push
popw
mov
jg
popf
mov
xor
clc
imul
jo
test
cmp
ljmp
mov
je
add
push
mov
sbb
xlat
inc
jo
xchg
push
inc
repnz
shl
inc
psubusb
subl
mov
imul
cs
jecxz
test
cld
jne
pop
sbb
pop
xchg
shr
jl
jbe
int3
fisubs
adc
xchg
xor
pop
dec
iret
lea
xor
fsubrl
push
adc
outsl
add
add
test
insl
dec
and
mov
mov
mov
test
dec
or
pop
cltd
popf
mov
pop
or
jmp
mov
jg
cs
sub
dec
arpl
dec
cmc
add
cmp
add
mov
scas
add
and
push
incb
fistl
jbe
jl
cmp
dec
out
pop
mov
jp
stos
clc
js
add
and
repz
repz
sbb
push
fwait
mov
mov
fcom
les
xlat
sahf
pop
leavew
mov
xchg
adcl
cwtl
fisttpl
mov
call
push
scas
inc
in
scas
xchg
out
push
xchg
bound
in
fs
mov
cwtl
or
sti
sub
mov
sahf
mov
leavew
jne
cmc
xorl
sub
fs
fldt
incl
in
aas
add
mov
mov
cwtl
fwait
and
in
sbb
push
loope
pop
in
mov
push
incb
iret
xchg
lods
outsl
dec
xchg
lods
sub
and
fnstcw
fwait
pushf
jecxz
adc
aas
mov
cmpsl
jae
data16
dec
loop
jae
xchg
ret
xchg
push
mov
sbb
js
enter
inc
enter
std
pop
adc
mov
jl
or
mov
fstpt
pop
bound
mov
inc
lods
iret
ja
pushf
cmp
bound
shl
xchg
mov
pushl
lret
out
mov
cmpsl
mov
push
es
shlb
and
adc
mov
jecxz
dec
mov
jae
cmp
adc
ja
cmp
scas
xchg
cmp
push
pop
adc
imul
jbe
jae
clc
mov
out
arpl
fbld
mov
loopne
fs
bound
ds
push
movsb
int
pop
test
dec
mov
inc
push
xchg
xor
pushf
shll
in
dec
cmp
adcb
mov
inc
add
dec
sbb
mov
jecxz
dec
jmp
pop
ss
dec
test
push
into
cmp
lfs
insl
imul
cmp
lods
jmp
push
push
test
xchg
popl
pop
and
mov
cld
pop
dec
push
sbb
mov
jne
inc
repz
add
and
test
out
lret
les
aad
test
ret
xchg
outsb
pop
in
fs
push
mov
adc
fwait
and
mov
notl
stos
push
push
push
enter
test
xchg
sub
dec
fsubl
cmp
test
mov
mov
cmpl
adc
push
xchg
dec
jl
pusha
add
cmp
imul
cltd
pop
inc
push
adc
aam
subb
into
int3
movsb
loop
adc
lahf
xchg
mov
les
inc
into
outsb
sti
mov
push
aam
lret
mov
ds
cld
xor
jecxz
dec
pusha
test
sbb
lock
sub
jle
and
add
jg
and
sub
je
jne
out
dec
push
fbstp
xchg
push
in
aad
cmpsb
xor
adc
inc
ficompl
ljmp
jbe
push
pop
push
cmp
outsl
pushf
jns
int3
mov
sbb
sub
fists
or
lahf
movsb
jns
fldl
sub
aaa
xchg
adc
mov
pop
fists
insb
mov
push
ds
add
push
xchg
push
cmc
das
sbb
testb
lret
mov
or
adc
jmp
enter
or
adc
lret
orl
dec
addr16
loope
mov
bound
mov
push
dec
lea
dec
sub
std
add
add
shl
ret
repnz
in
mov
dec
mov
jb
lock
stc
dec
dec
fmuls
out
loopne
mov
imul
mov
jecxz
lcall
xchg
andl
inc
cmpsb
ss
out
lods
inc
cs
out
mov
aaa
lret
cli
push
jl
fs
or
fisubrl
mov
leave
mov
test
push
pusha
adc
and
ljmp
and
sub
cmp
add
frstor
leave
or
movsb
data16
jbe
sahf
pop
mov
xchg
mulb
cld
sbb
sar
int
jae
xlat
jnp
mov
mov
vpmullq
js
inc
mov
fchs
cmp
add
mov
aad
mov
movsb
push
clc
js
lea
test
ljmp
pop
aam
rorb
ss
mov
pop
jno
loop
sti
stos
fsubrl
mov
or
int
in
insb
xchg
lods
xor
cmp
addb
enter
imul
jp
loop
pop
add
jae
test
xor
jb
les
sti
and
mov
adc
int3
xchg
push
push
stc
sbb
inc
mov
xchg
sbb
mov
xabort
cmpsb
inc
mov
xor
enter
loop
std
ja
lock
push
icebp
jo
inc
dec
fisttps
cmp
fld1
mov
dec
icebp
cmp
pushf
sbb
pusha
push
rcrl
add
lcall
push
jl
pop
push
pop
push
rolb
xchg
add
aad
leave
xchg
cld
mov
ljmp
push
shlb
ret
inc
jl
cli
inc
cmp
adc
lods
movsb
stc
mov
push
and
pop
pusha
add
out
cmp
pop
dec
ljmp
enter
imul
ret
addb
sub
lahf
cmp
testl
lods
test
notl
dec
cmp
popf
xor
maskmovq
notl
stos
lea
iret
in
xchg
dec
popf
sub
shlb
pop
jl
in
out
push
adc
and
sub
mov
pop
ret
sub
xor
push
loope
adc
mov
cld
jmp
scas
fcompl
std
fdivrl
les
adc
mov
cmpsl
je
loop
enter
pop
in
xchg
adc
gs
movsb
scas
jb
mov
push
push
repz
les
js
inc
in
cmp
xlat
mov
arpl
xor
mov
and
lret
mov
in
bound
in
xor
outsl
push
jecxz
adc
sub
xor
movsb
std
jle
or
test
push
or
repz
stos
pop
jae,pt
push
std
stc
pop
loope
mov
fs
mov
jge
pop
and
inc
lds
sbb
add
xor
adc
into
sahf
pop
lods
ja
push
mov
sub
dec
lea
gs
jg
ss
scas
ficomps
in
jno
lret
xor
movl
jge
inc
daa
mov
inc
sbb
sub
dec
jo
fmuls
sarb
lret
jg
mov
pop
fiaddl
push
sub
dec
mov
sub
cli
pop
xlat
push
es
add
fmuls
sub
test
js
ljmp
ljmp
mov
pop
gs
sub
rclb
sbb
inc
jo
sbb
inc
xor
jnp
icebp
push
or
lahf
bound
insb
xchg
cltd
repnz
jb
xor
mov
jae
loope
xchg
mov
jmp
mov
mov
dec
jp
push
mov
dec
adc
pushf
mov
data16
dec
test
push
push
bound
pop
pushf
fnstenv
jns
add
test
lea
jno
xchg
mov
icebp
outsb
movsl
push
mov
xor
and
mov
mov
mov
out
dec
xchg
aas
mov
lcall
out
push
leave
pop
mov
out
xchg
xchg
pop
roll
mov
and
push
push
sbb
push
mov
mov
or
fstpl
xorb
inc
xchg
inc
push
mov
dec
lcall
repz
adc
dec
or
cmp
data16
sbb
push
insl
push
je
sub
shl
jg
aas
jmp
mov
lahf
mov
cwtl
jle
or
adc
fwait
xchg
inc
mov
jno
icebp
adc
loopne
inc
dec
cmp
xor
insb
lds
cld
adc
fs
mov
cmp
in
xchg
sub
inc
adc
bound
jae
add
or
add
xchg
scas
mov
adc
sub
xchg
lret
push
scas
hlt
xchg
and
test
mov
mov
sbb
jo
mov
je
fisubrs
testb
in
cmp
push
push
dec
fsts
push
adc
test
jae
bound
pop
jne
repnz
and
jo
outsb
ljmp
inc
hlt
mov
jl
sbb
jae
pushf
push
shl
lods
jb
push
lret
fistpl
roll
in
lods
jno
loop
mov
mov
pop
xchg
adc
fdivr
loop
jge
pop
lock
test
js
or
cmovo
sub
adc
ljmp
fiadds
mov
jns
push
mov
mov
fsubr
cmp
push
nop
outsl
mov
sub
mov
mov
shlb
out
daa
in
in
and
xor
mov
les
and
in
adc
aas
sub
pusha
xchg
mov
test
cli
mov
jne
push
inc
jge
cli
add
stc
cwtl
mov
les
sbb
jne
aaa
test
mov
arpl
xlat
mov
mov
sbb
movsb
stc
mov
ret
adc
jae
lods
ret
mov
mov
out
add
shr
jg
cld
popf
pop
mov
sbbb
test
push
sbb
dec
push
insl
cmc
lock
jne
add
loop
js
xchg
sub
lret
xor
mov
ja
es
int3
shlb
mov
stos
insb
mov
mov
fadds
jp
test
mov
fs
ficomps
push
in
pop
call
stc
xchg
push
mov
gs
cmp
cmp
push
sbb
xchg
sbb
lods
out
std
pusha
ljmp
sbb
jmp
mov
cmp
ret
sub
sub
fmull
xchg
lcall
fdivrl
pop
add
xor
cmpsl
ds
pop
je
jl
rcrl
xor
in
loopne
arpl
or
movsb
popf
mov
int
inc
pop
sub
lahf
pop
jle
mov
xor
inc
cmpsb
dec
es
test
subb
jmp
jo
mov
jl
push
pop
xor
ds
insb
lods
icebp
test
adc
call
nop
xchg
mov
dec
int
rorl
inc
ret
add
push
out
gs
nop
mov
fwait
ljmp
clc
push
outsl
mov
lods
push
inc
fcoms
out
xchg
xor
inc
sub
xor
cld
rcll
aaa
add
push
cli
cwtl
fcoms
cwtl
jno
stos
add
andb
sbb
mov
and
dec
push
fidivrl
sub
xchg
jo
cmp
sbb
nop
cmp
cmp
test
push
aad
test
rcll
aam
mov
pushf
pop
mov
add
add
xchg
icebp
imul
xchg
add
adc
in
cs
sub
cmpsb
ret
jg
mov
cltd
pop
mov
enter
imul
push
push
std
repnz
call
data16
fs
pop
sbb
ss
ljmp
inc
out
insl
xchg
arpl
mov
jl
xor
dec
addr16
test
jbe
sbbb
mov
out
shll
mov
sahf
pushf
sub
stos
test
jno
add
jmp
or
cmpsb
add
and
xlat
sbb
inc
ja
pop
dec
xchg
add
jb
lds
stc
ds
shll
out
ljmp
sbb
pushf
icebp
sub
cmp
xor
jecxz
outsl
cltd
jo
cmp
cmp
or
and
loop
xchg
loope
or
andb
sub
push
icebp
scas
andl
mov
jne
testb
sub
cmp
jae
cmpsl
test
xorb
adc
arpl
sub
sub
add
in
repz
insl
cmpsb
or
lret
or
cmp
mov
pop
outsb
jo
cmp
dec
sarl
dec
add
mov
aaa
bound
pop
int3
mov
lock
mov
add
xor
stc
into
fcoms
push
repz
xchg
or
cs
pushf
lods
mov
push
ret
xor
mov
inc
cmp
lahf
outsl
jne
mov
jno
icebp
cmpsl
or
fdivrl
insb
or
repnz
movsl
mov
mov
push
daa
lods
mov
pop
push
les
fwait
jecxz
sahf
ja
mov
or
push
xor
es
movsb
stos
mov
cmp
insb
into
jp
mov
cmp
arpl
mov
jo
enter
lcall
sub
xchg
xchg
cld
xor
dec
push
jns
dec
lahf
lods
je
jecxz
sahf
mov
lret
cs
mov
lahf
push
xlat
repnz
fnstsw
loop
or
mov
inc
fisttpl
or
sbb
fcoms
sbb
test
pop
scas
add
je
mov
push
add
sub
dec
or
les
testl
jns
add
xor
lahf
mov
pop
xchg
cli
std
jp
sub
mov
push
ficoms
adc
lahf
jb
sahf
movsb
jae
xor
push
divb
mov
jne
inc
flds
jl
or
push
xor
addr16
loop
ficomps
inc
mov
mov
mov
xor
jp
sahf
mov
cmp
cmp
in
ljmp
add
mov
or
inc
stos
mov
addr16
pop
lea
inc
in
loopne
jl
or
mov
sahf
addr16
cmp
aad
or
xor
js
jo
xchg
xor
mov
cmp
lea
cmpsl
jmp
push
ja
loop
mov
pop
movsb
dec
lahf
mov
dec
push
pop
repnz
fadds
dec
sar
adc
mov
mov
mov
mov
int
lahf
into
scas
dec
and
push
shl
push
movsl
pop
test
cmp
movsb
pop
enter
jl
jno
mov
hlt
mov
mov
sbb
push
jl
xchg
mov
dec
sbbl
lock
loop
mov
adc
jbe
bswap
push
dec
jmp
outsb
push
dec
xorb
cltd
jno
insl
xchg
enter
lods
lods
jbe
xchg
mov
aam
jns
mov
insb
mov
push
lahf
push
in
and
and
jae
cmp
loop
jg
lods
ljmp
or
cwtl
je
outsb
pop
je
xchg
ljmp
je
mov
rcrb
mov
dec
xor
out
pop
cmp
gs
mov
sub
push
or
orl
imul
or
xchg
mov
jl
bound
pop
inc
cmpsl
stos
adc
fwait
push
in
sub
jl
movsb
mov
loop
shlb
cmp
or
cwtl
and
pushf
call
lock
and
push
sbb
notb
in
push
in
and
insb
stos
out
lds
sbb
loopne
mov
dec
pushf
sbb
ret
jl
mov
lcall
inc
int3
adc
lret
or
int
mov
push
pop
xchg
pop
fwait
jecxz
xchg
aam
scas
xor
je
pop
and
jns
out
add
pop
js
lret
insl
movb
aam
dec
pop
int3
push
pop
int3
mov
mov
mov
fdivrl
xchg
imul
pop
lret
push
mov
dec
jp
sbb
nop
push
in
ret
mov
push
repz
mov
and
lcall
test
ljmp
add
mov
mov
cli
pop
fimull
mov
adc
mov
flds
mov
or
iret
repnz
loope
lods
gs
mov
lahf
pop
shrb
xor
ror
gs
push
pop
fsubrl
jbe
mov
and
dec
fs
xlat
mov
pop
loop
jle
xchg
sahf
and
jae
mov
pop
pop
les
mov
inc
ffreep
arpl
mov
xor
jbe
lret
ret
dec
out
cld
into
pop
cmpsb
mov
mov
popf
ss
mov
test
aam
subb
or
mov
cli
xchg
sub
sub
cli
arpl
add
outsb
cmp
divb
mov
jecxz
mov
nop
addr16
cld
rol
xchg
mov
fdivrs
push
mov
testb
sub
cli
inc
lahf
jnp
test
ljmp
jns
js
mov
arpl
out
push
mov
aam
movsb
xchg
mov
sbb
push
mov
mov
mov
pushf
aas
in
loop
pop
or
es
dec
mov
push
fsubrl
imul
cmpsl
pop
push
ds
or
mov
adc
sbb
push
test
sbb
loop
mov
pop
les
mov
cld
mov
lcall
push
out
add
mov
jo
sbb
lds
mov
cltd
int3
stc
inc
gs
pop
and
mov
rclb
inc
mov
xchg
cmp
pop
in
int3
or
mov
mov
fs
lcall
stos
mov
cmp
sti
in
xchg
mov
or
cmp
mov
movsb
in
mov
add
pop
jo
scas
repz
lds
ds
movsb
mov
adc
lods
ds
out
push
mov
mov
negb
fsub
push
jge
test
dec
outsb
push
les
mov
stc
out
shlb
mov
adcb
jle
inc
movsl
roll
fucomi
sarb
or
pop
cmp
in
enter
aam
xchg
inc
mov
pop
cmp
inc
xchg
xchg
rclb
in
outsb
mov
cltd
xchg
add
xchg
lret
cmpsb
hlt
mov
add
pop
call
out
lock
xchg
cmp
mov
mov
les
pop
shlb
aam
ret
mov
mov
in
or
and
pop
shlb
lcall
pop
cmp
out
or
rclb
out
fs
mov
cs
int3
mov
inc
add
jl
dec
mov
shlb
repz
outsl
jle
into
cmpsb
lods
xchg
mov
mov
mov
dec
pop
sarb
out
dec
and
js
je
dec
mov
loopne
imull
enter
jae
sbb
rorb
or
cmp
jp
movsl
or
pop
test
test
add
xchg
cltd
mov
cmpsb
mov
jbe
hlt
xchg
lds
nop
loop
or
enter
int3
and
bound
mov
xchg
xchg
out
ljmp
gs
int3
and
mov
mov
jae
pushf
test
dec
adc
jo
mov
jne
xchg
lret
dec
mov
cmp
sbb
pop
jmp
mov
sbb
mov
inc
add
mov
scas
dec
lcall
clc
inc
test
or
jl
dec
stos
hlt
sbb
sahf
int
adc
call
add
call
repnz
mov
sub
mov
jnp
push
test
sub
pop
in
nop
hlt
out
jecxz
lods
clc
xchg
stc
push
popa
int
pop
cltd
mov
pop
jb
out
or
ljmp
inc
pusha
rolb
test
cmpsl
xchg
push
gs
lret
mov
mov
testb
pop
xchg
fcom
push
scas
repz
pusha
mov
xor
mov
jo
push
mov
jbe
sub
mov
mov
aam
mov
mov
cmp
xor
movb
xlat
mov
mov
enter
cmp
rcr
shll
xor
fisttpl
mov
in
adc
add
in
shrb
shrb
dec
cmpsb
sbb
inc
xchg
mov
jl
cmpsb
adc
in
ljmp
outsb
mov
xor
dec
inc
mov
ficoms
or
jbe
repnz
mov
in
push
ret
dec
inc
imul
loopne
sbb
popf
mov
shl
dec
dec
mov
mov
ljmp
cmp
sbb
or
xchg
notb
mov
push
in
pop
pop
ljmp
das
or
and
mov
adc
dec
mov
mov
js
out
movsl
mov
movsl
sub
popa
std
popf
cmpsb
dec
test
xchg
test
jle
xchg
jnp
cmp
sub
loop
bnd
or
mov
mov
jle
mov
mov
out
orb
std
test
jg
mov
call
inc
arpl
outsb
sbb
jbe
and
inc
lret
sbb
aas
rdpmc
xor
test
push
lcall
imul
mov
push
ljmp
mov
sub
sub
jecxz
in
xor
lret
lret
fwait
cmpsb
add
or
into
loopne
out
adc
add
mov
bound
sti
lcall
push
push
jl
outsb
mov
subb
inc
outsb
scas
jg
xor
adc
fdivs
adc
repnz
loopne
in
data16
in
sub
in
out
loopne
ljmp
mov
jle
mov
jbe
shlb
mov
int
pusha
jge
outsb
push
sbb
jl
sub
mov
xchg
inc
adc
repnz
repnz
mov
push
adc
mov
xchg
shrb
mov
int
mov
int
mov
int
mov
repz
shl
pusha
xchg
jbe
pop
xchg
xor
xchg
out
gs
bound
inc
dec
fidivrl
mov
lret
test
test
mov
cli
jge
outsb
mulb
test
lcall
add
add
int3
mov
push
mov
fistpl
inc
insl
cld
cwtl
rolb
and
xchg
add
adcl
loop
jl
loop
cmp
loop
cmp
loop
cmp
ljmp
lods
mov
push
cwtl
cmp
test
test
and
dec
lcall
subl
jp
push
add
or
lods
in
ret
ljmp
cli
ret
sti
mov
cmp
jge
outsb
push
jge
outsb
sbb
outsb
push
jl
pop
pop
mov
notb
add
sbb
push
adc
test
in
pushf
mov
dec
or
inc
and
jmp
or
scas
push
mov
and
adc
sbb
sub
testb
push
outsl
sub
mov
stos
fisttps
bound
fdivrl
in
sahf
rol
ficompl
mov
sub
fildll
dec
test
in
and
into
sub
loope
xchg
dec
shrb
js
dec
add
subb
js
sbb
mov
jae
lds
test
cmp
es
leave
or
dec
lods
push
push
movsl
lods
mov
push
nop
int3
scas
ja
dec
dec
xchg
mov
and
iret
pop
pushf
pop
test
push
movsb
pop
aaa
addb
jnp
lods
xchg
add
mov
adc
sbb
inc
jle
jo
sub
cmp
inc
mov
jle
inc
xchg
call
push
in
adc
mov
and
cld
fmull
movsl
aaa
jmp
xchg
icebp
mov
iret
ss
push
sbb
inc
lods
pop
xor
jecxz
ds
shlb
rorl
push
pusha
stc
ja
dec
mulb
jnp
fadds
xchg
rcr
pop
adcl
jp
call
jbe
pushf
dec
ret
cs
iret
sub
mov
loop
sbb
jns
test
cli
jg
out
mov
clc
xor
call
jecxz
jmp
jnp
mov
cmp
xchg
fwait
add
xchg
mov
mov
mov
xor
mov
dec
int
mov
shll
mov
mov
repz
sbbl
xchg
dec
int
popf
sahf
jno
sahf
test
xlat
mov
loop
call
cmp
xchg
mov
jmp
mov
fsubl
popa
sbb
fcoml
adc
hlt
cmpsl
out
pop
ds
in
arpl
rorb
aam
sub
fdivrl
inc
add
lea
iret
sub
push
stos
nop
cltd
loopne
xchg
jb
dec
xor
cwtl
test
mov
ret
dec
adc
inc
mov
mov
lret
mov
xchg
dec
test
push
push
cmpsl
pop
xchg
fnstenv
mov
dec
and
sti
dec
in
xchg
gs
gs
xor
notl
pop
std
or
and
xchg
push
sahf
pop
cmp
mov
insl
into
jmp
pop
mov
add
mov
dec
out
xchg
aad
push
pop
loop
push
ja
pop
pop
mov
inc
dec
je
inc
and
mov
call
lcall
cmpsb
pavgb
scas
ret
cmp
sar
cmp
stos
jmp
lret
sahf
ljmp
mov
mov
lea
outsl
les
mov
jg
mov
mov
sub
cwtl
lock
in
mov
cmp
jnp
xor
les
fcmovnu
test
mov
cs
mov
iret
push
setne
push
pop
stos
hlt
sub
stos
push
add
cld
cltd
stos
xchg
aas
cmpsb
push
xchg
mov
push
stos
pop
jmp
aam
clc
clc
dec
push
das
dec
insl
pop
orb
mov
dec
ret
dec
mov
and
repnz
pop
pusha
int
push
fimuls
clc
pop
jno
push
ljmp
jo
lahf
cmp
dec
xor
mov
cmc
dec
mov
ret
ret
adc
fldenv
sub
push
out
xchg
xor
push
mov
dec
push
hlt
lea
xor
pusha
adc
pop
pop
push
sbb
pop
add
add
repz
add
das
jne
lret
xchg
out
jmp
dec
shl
loope
jae
or
dec
icebp
pop
stos
pop
nop
or
dec
je
sub
xor
adc
lea
stc
or
paddsb
jo
fldenv
cmp
push
fldenv
sbb
push
inc
push
enter
test
dec
nop
jae
sub
mov
lds
pop
outsl
stc
sbb
fs
sub
xor
mov
mov
mov
inc
cli
mov
test
jle,pn
inc
mov
and
stos
in
adc
in
and
sar
int3
dec
jae
mov
cmc
adc
ja
loop
loope
and
mov
cmp
mov
orb
mov
fs
xchg
lods
or
push
pmulhw
ret
sti
sbb
add
pusha
adc
push
xchg
cmp
lahf
fsubl
insb
mov
jbe
adc
pop
xor
xor
out
rcr
pop
push
add
decb
lock
call
adc
inc
movsb
pushf
movsl
dec
inc
xchg
scas
sub
sti
sbb
mov
sub
cmp
inc
fdivl
scas
outsl
sub
push
xor
jae
mov
jmp
mov
sbb
jbe
lret
scas
lods
je
movl
pop
adc
jg
dec
popfw
addr16
xchg
cwtl
enter
js
sbb
jno
xor
cmc
popf
mov
jbe
sbb
mov
mov
sahf
out
jo
dec
mov
push
push
xabort
sub
movsb
push
mov
jo
and
and
mov
push
jg
jle
mov
push
cmp
jmp
sti
pop
pop
vmwrite
das
pop
sub
rcl
fucomip
inc
and
mov
fucomi
pushf
insb
mov
insb
mov
dec
add
repnz
push
dec
mov
cmp
gs
fidivrs
push
out
jne
fs
jo
cltd
ljmp
enter
repnz
push
ret
nop
test
add
cli
test
cltd
cli
add
xchg
jecxz
push
xor
fcoms
push
xchg
mov
subb
xor
xor
mov
xchg
in
mov
cmc
sti
xchg
push
mov
add
push
ss
push
and
add
sbb
mov
lcall
out
shlb
fisubs
adc
or
sub
cwtl
popf
lahf
xor
adc
xchg
pusha
shlb
jae
test
xchg
adc
insl
jl
ss
xchg
mov
mov
mov
in
push
mov
jne
mov
popa
and
add
bound
or
test
push
gs
cltd
data16
in
push
xchg
mov
jne
jnp
fnsave
fucomip
pusha
xchg
in
jo
xchg
push
pop
rclb
mov
push
mov
or
testl
div
ficomps
and
mov
repnz
jle
call
mov
mov
cmpsb
push
mov
inc
push
xor
test
jmp
stc
in
movsb
dec
or
fcoml
push
sbb
test
pop
pop
ss
push
push
repz
fdivr
cmp
ds
call
mov
dec
idivl
mov
insb
sahf
fdivrl
jl
out
imul
lods
push
jp
aam
movsl
pushf
jg
and
cmpsl
push
stos
test
mov
movsl
sbb
push
lods
movsb
cmc
xor
pop
sbb
pushf
push
mov
movsb
adc
loop
movsl
cmp
lods
pop
ljmp
dec
inc
ljmp
and
imul
cmp
xchg
bound
xchg
je
xor
dec
cmp
mov
jo
stc
adc
mov
ds
iret
add
repnz
sbb
movsl
stc
pop
adc
and
cmp
cmpsl
pop
adc
push
ja
mov
orl
add
cmp
sbb
jg
add
lea
lret
and
in
and
pop
jl
cmpb
mov
mov
test
das
not
mov
pusha
add
cmc
enter
out
jecxz
xchg
dec
xchg
cmp
dec
int3
sub
lcall
sub
and
mov
std
jnp
cmp
ja
fdivr
ljmp
add
ljmp
icebp
sahf
shlb
repnz
xchg
ds
fsts
xchg
sahf
inc
jecxz
mov
adcb
fsubrs
loope
mov
cmpb
fnsave
int3
ret
mov
add
leave
fs
mov
mov
push
test
adc
sbb
jne,pn
dec
xor
addr16
paddsw
fucomi
data16
int
out
call
mov
ljmp
dec
jge
test
inc
inc
lahf
aad
std
add
lret
loop
pop
cmp
hlt
xchg
subb
shrb
and
lcall
or
pop
cli
dec
lods
xchg
add
std
mov
mov
movsl
in
cmpsb
pushf
adc
scas
and
jno
les
movsl
out
and
cmp
push
sbb
mov
push
daa
mov
ss
mov
jbe
repnz
mov
std
fcom
mov
in
popa
xor
xchg
mov
sti
push
jns
lahf
fs
cmp
pop
lods
inc
add
cs
int3
xchg
xchg
inc
mov
movsb
xchg
lods
outsb
jnp
std
dec
cmp
mov
mov
or
int3
and
or
repz
mov
jle
pop
and
stos
mov
or
imul
or
inc
xor
icebp
jecxz
lret
ror
lods
cmp
fisttps
cmp
movsb
idivb
stos
mov
mov
andb
outsl
movsb
test
xchg
or
shlb
popa
orl
cwtl
jl
xor
sbb
and
into
repnz
cmpsl
xchg
mov
stc
int3
insl
fwait
jl
sbb
push
xchg
fists
mov
pop
ret
jns
outsl
sub
xchg
lahf
add
fistps
repz
or
dec
inc
leave
cmp
lds
test
insb
inc
fwait
repnz
mov
xor
fisubrs
sub
dec
cmp
and
in
sbb
sbb
ret
adc
add
ret
cmp
jle
mov
inc
mov
adc
rcl
mov
rorb
es
mov
pushf
fidivrs
adc
inc
xchg
imul
ja
out
int3
daa
dec
mov
cmp
int3
outsb
pop
push
add
jae
into
jbe
jle
dec
jno
add
insb
pop
inc
cltd
jae
clc
fxch
mov
fs
sbb
popa
es
data16
stc
ljmp
incb
imul
adc
out
pop
cmp
roll
movb
and
cmp
fucomi
dec
in
cmp
js
cmp
sbb
dec
or
cltd
dec
icebp
popf
cwtl
cmp
xchg
scas
push
xor
ret
stos
aad
out
fstps
xchg
sbb
or
and
sbb
or
mov
negl
mov
mov
fnstcw
add
mov
cmpsl
mov
andb
mov
std
dec
fistl
cmp
lock
pop
dec
xor
loope
test
les
pop
pop
aas
lods
jo
push
mov
aaa
mov
sub
inc
ret
pushf
mov
fwait
inc
adc
mov
sti
adc
lret
dec
mov
mov
or
orb
xor
testl
in
sub
push
push
das
xlat
jle
fs
or
bound
loopne
inc
dec
dec
stos
mov
movsb
xchg
add
mov
mov
fadd
sti
push
sbb
xor
scas
xchg
dec
pop
test
add
add
icebp
jmp
mov
sub
insb
scas
rcrl
mov
call
sub
dec
push
sub
jno
and
mov
int3
shlb
jno
mov
insb
clc
adc
ljmp
dec
out
test
ret
mov
dec
jnp
popa
sahf
inc
and
ljmp
xchg
rcrb
stc
call
mov
sbb
sbb
dec
xchg
ss
stos
repz
sahf
pop
fmuls
cwtl
cld
data16
ja
lcall
mov
jns
pushf
dec
dec
mov
fmuls
sbb
andl
pop
sub
ljmp
mov
add
fcmovb
in
mov
aas
mov
jae
pop
push
es
jns
fistpl
xchg
pop
adc
or
pop
in
fists
mov
and
xchg
ret
dec
cld
mov
xchg
and
mov
mov
ret
lahf
mov
mov
and
xchg
fwait
push
repnz
lcall
test
jne
hlt
cmp
mov
xchg
aas
jae
push
cmp
adc
repnz
mov
sbb
ret
ds
xchg
addr16
jl
mov
mov
fisubrs
cmp
add
fbstp
mov
mov
cmp
mov
pop
enter
inc
jnp
dec
adc
ds
xor
dec
insl
pop
xor
mov
or
cmp
in
testl
cmpsl
or
push
dec
push
mov
jmp
xchg
cmp
and
mov
outsl
sbb
add
mov
enter
xchg
dec
inc
movsb
lea
imul
imul
jl
pusha
sub
nop
inc
or
lret
mov
xchg
sub
jle
push
sahf
ss
sub
gs
add
inc
sub
test
mov
mov
ds
add
mov
push
int3
imulb
fmull
sub
jno
mov
cmc
popf
cmpsb
out
xchg
sbb
add
inc
aaa
and
shr
mov
aad
lret
mov
fcomi
mov
xchg
sub
stos
je
mov
xlat
mov
xchg
xchg
dec
cmp
call
aam
mov
mov
mov
sbb
sub
adc
pop
insb
mov
and
gs
int3
sbb
cmpb
sub
pop
sbb
mov
jns
es
jae
shrb
stos
lds
or
repnz
or
out
push
and
dec
mov
cltd
dec
out
in
outsb
arpl
fisttps
dec
mov
movsb
bound
pop
testl
add
lods
ret
adcl
loopne
jne
ret
mov
insl
loopne
adc
ret
pop
ret
pop
arpl
mov
push
fistps
insb
xlat
cltd
pusha
loop
mov
add
or
cmp
pop
mov
mov
xorb
push
mov
ss
jmp
inc
fnstsw
add
sahf
clc
loopne
jecxz
lds
or
dec
add
xchg
add
or
mov
stos
shrb
outsl
repz
cmp
dec
je
jae
je
nop
push
test
push
stos
xchg
call
or
orl
mov
icebp
sbb
cmpsl
lds
dec
int
xor
dec
frstor
and
jmp
arpl
ret
in
push
gs
mov
in
add
add
repnz
rolb
pop
fimull
and
pop
test
pop
stos
xchg
add
sahf
push
cld
roll
xor
mov
adc
and
in
mov
fistps
sub
xor
shlb
out
adc
dec
mov
inc
or
sbb
mov
jmp
fisubrl
pushf
andb
fstpl
std
mov
je
mov
sbb
out
and
jne
cli
xchg
mov
pushl
xchg
rcr
dec
in
int
js
push
push
call
mov
sub
sbb
inc
cmc
test
jle
add
pop
xchg
adc
sbb
gs
push
mov
mov
les
test
xchg
lods
xchg
not
and
pop
jl
dec
mov
fcoml
aam
dec
dec
mov
ss
int
mov
rorl
cs
call
rol
cmp
movsb
and
mov
insb
jl
jb
inc
adc
dec
jl
test
pop
jmp
ja
js
addr16
mov
cmpsb
and
or
lea
jg
mov
xchg
nop
mov
cmpb
add
sub
add
cmpsl
dec
dec
es
lds
pop
pop
or
ror
test
jae
cmpb
lret
push
fcomps
xchg
fnsave
pop
sub
fucomi
insb
or
clc
nop
jbe
pop
cld
xchg
or
ror
pextrw
or
inc
lcall
jmp
jecxz
add
mov
dec
and
leave
addr16
movsl
pushf
inc
push
lahf
or
cmp
in
in
inc
inc
fmuls
sahf
xor
addr16
add
add
ja
push
lock
jecxz
xchg
inc
shl
dec
fistpll
jbe
pop
xchg
lahf
dec
pop
insl
test
cmp
jl
sbbl
sub
out
outsl
ja
nop
test
mov
lods
data16
cmp
into
arpl
stos
dec
mov
mov
nop
mov
jecxz
lahf
loope
or
xor
loope
cwtl
jno
das
sti
sub
dec
sbb
push
pop
push
sti
sbb
sub
and
or
dec
cld
les
adc
xor
fildl
test
or
lcall
stos
mov
jmp
aam
push
inc
add
mov
mov
fistl
mov
fsubrs
sub
es
aaa
mov
xor
int3
inc
aam
cmc
add
lea
lds
aad
cli
pop
sarl
outsl
dec
test
cmp
mov
lret
outsb
jns
jns
movb
ja
jl
daa
cmpsb
mov
fucomi
cli
lock
jo
stos
mov
xor
sbb
outsl
cmp
cmp
in
push
cwtl
in
dec
sub
sbb
sbb
xchg
jns
out
ss
ljmp
jo
mov
lret
push
pop
popf
xchg
lds
in
mov
mov
sbb
scas
in
shll
jne
pop
add
xchg
out
movsl
imul
push
push
jae
or
and
repnz
cltd
or
push
ficompl
push
in
inc
cmp
in
or
push
xor
bnd
sbb
xchg
jmp
hlt
xor
outsl
bound
sub
inc
or
jb
repnz
push
sbb
adc
cmpl
cmp
dec
int3
inc
jb
xchg
repnz
lahf
sub
lahf
iret
xor
cs
xchg
mov
push
cltd
pushf
or
arpl
ss
dec
aad
repz
pop
push
bound
pop
sbb
cmpsl
adc
cwtl
adc
jecxz
ja
cmp
jb
xor
outsb
and
lret
iret
mov
or
mov
aad
push
and
and
dec
fdivr
leave
sub
nop
gs
push
push
push
ljmp
bnd
mov
sub
push
cmp
mov
in
push
xchg
std
inc
cwtl
and
jmp
sub
daa
adc
clc
fidivl
cld
cmpsl
stos
and
add
nop
movsl
sub
xor
into
mov
repnz
xor
pop
sub
adc
mov
dec
jge
mov
pop
inc
outsl
pop
lcall
data16
fcmovnb
inc
or
stos
push
pop
scas
adc
ljmp
rcrb
sarb
mov
add
jecxz
es
cld
mov
sbb
js
pop
imull
sbb
xor
cmp
daa
and
xor
sbb
xchg
repz
add
jle
fcomi
push
mov
sbb
out
out
jle
jns
icebp
adc
repnz
xchg
sub
dec
sarl
xchg
std
lahf
daa
outsb
faddl
in
aam
decb
mov
dec
addr16
push
imul
inc
sbb
push
lahf
insl
sbb
lret
xchg
mov
or
cmp
std
dec
iret
xchg
and
mov
testb
notb
ret
lods
inc
popf
out
lock
xchg
adc
stc
mov
inc
lcall
push
pop
push
ss
mov
fnsave
mov
cmp
gs
add
jp
loope
sub
jnp
and
lret
fdivrl
jmp
popf
js
add
push
push
out
pop
mov
mov
aad
mov
cmp
outsb
pop
int3
cmpsb
or
loopne
les
xchg
dec
fstpt
fs
in
fdiv
cs
loopne
loope
cld
mov
push
add
cli
jle
sub
cmpsl
jl
mov
xorb
xchg
push
mov
cwtl
arpl
add
mov
jnp
and
cmp
les
jp
test
xor
lods
and
add
inc
xchg
sahf
pop
mov
je
in
mov
out
push
subb
pop
cmp
or
jns
cmp
cld
test
adcb
add
test
adc
cs
int
jae
xor
out
or
mov
or
bound
call
inc
je
out
jae
mov
rcll
ljmp
ljmp
xor
inc
leave
loopne
sbb
shlb
xchg
mov
jo
mov
dec
in
mov
xchg
aam
cltd
std
push
inc
mov
dec
jbe
lea
cmp
negl
lcall
fdivs
in
cmpsb
and
add
and
sub
sub
inc
jns
cmp
or
mov
sub
lods
repnz
cwtl
sub
arpl
push
pop
xlat
and
ljmp
mov
jae
pop
aad
mov
mov
sbb
notb
ffreep
mov
sahf
or
and
mov
pop
popf
mov
jge
add
dec
sub
leave
sub
xchg
test
loopne
adc
dec
in
mov
and
sbb
int3
ja
inc
popa
xchg
adc
lods
insb
mov
sbb
adcb
cmpsb
aas
ljmp
pop
or
sub
or
int
and
ja
test
lods
and
dec
mov
jae
fnstenv
or
mov
and
dec
outsl
and
push
sarb
dec
dec
push
repz
cmpsb
mov
push
and
adc
and
push
in
sub
out
std
clc
pop
mov
cmp
lds
add
enter
cli
sub
jmp
push
out
ljmp
dec
fdivr
testb
and
dec
add
mov
adcb
leave
jbe
in
push
leave
fwait
dec
outsl
xchg
cli
and
repnz
insb
test
adc
mov
lahf
dec
in
cli
add
cmpsl
jb
mov
add
cltd
and
repz
lock
mov
aas
lcall
xchg
adc
add
mov
in
cmp
repnz
xchg
pop
shl
dec
adc
mov
xlat
pushf
fcoms
mov
and
out
or
stos
ljmp
testb
mov
xor
push
arpl
cmp
sbb
jbe
sti
add
clc
sbb
sub
xchg
adc
dec
ja
in
shll
out
lods
cwtl
push
xchg
xchg
out
mov
xchg
add
add
mov
mov
mov
xchg
xor
push
fisttpl
pop
clc
jecxz
add
gs
inc
fistps
or
xchg
call
jl
and
xchg
cmp
das
sbbl
sbb
or
and
scas
jbe
cld
out
out
inc
bswap
enter
loop
or
daa
out
xchg
cmp
popf
jbe
out
push
dec
xor
mov
andb
push
mov
push
test
mov
fdivl
pop
jb
rcrl
repz
lock
stos
mov
ljmp
cmp
fisubs
mov
clc
mov
jmp
popa
enter
rcr
out
xor
sub
insb
push
pushf
fwait
shll
mov
xchg
ret
inc
fbld
in
jle
pop
lret
outsl
scas
fildll
arpl
xchg
adc
in
test
cmc
add
jecxz
or
mov
inc
jle
adc
fidivl
loop
or
xor
int
mov
jg
daa
or
in
call
jmp
pusha
jnp
push
mov
int3
enter
arpl
dec
mov
in
or
xchg
cmp
pop
bound
outsb
pop
sbb
xchg
das
fimuls
mov
mov
iret
das
jle
int
aas
outsl
arpl
mov
push
in
cmpsb
aam
lcall
loope
loopne
xor
mov
scas
mov
loope
adcl
fisttps
cld
dec
xchg
loopne
fisttps
out
ss
pop
jge
pop
enter
gs
out
loopne
add
pop
sbbl
dec
mov
cwtl
repnz
fucomp
sbb
push
add
lods
call
les
xchg
xchg
ss
mov
ja
xchg
pop
xor
loop
cmpsl
stos
sbb
sub
daa
push
mov
and
imul
in
movsb
xchg
inc
fisttps
dec
pop
jbe
cmpsb
add
mov
out
in
mov
cs
scas
xchg
shrb
addr16
call
or
loop
vscatterqps
loop
cmp
cmpsb
sub
ret
adc
add
adc
sub
movb
xchg
mov
movsl
lods
push
das
or
roll
sbb
inc
jb
adc
js
add
sbb
cmpsl
push
mov
fcomps
inc
or
orb
xor
pop
mov
push
sbb
and
clc
push
add
sbb
lock
or
std
ror
pop
inc
mov
mov
pop
or
sbbb
pop
pop
std
outsb
iret
test
das
or
pop
pop
cs
xchg
pop
cmp
xor
inc
dec
mov
in
add
lods
mov
inc
cld
out
fsubr
adc
mov
adc
or
into
xchg
xchg
loop
faddl
out
repz
popa
dec
adcb
adc
push
adc
mov
in
ja
sar
lcall
xchg
repnz
out
in
enter
mov
movsl
jmp
dec
pop
xlat
mov
push
filds
pop
clc
xchg
popa
mov
xchg
inc
push
in
shll
pop
stos
dec
bound
sti
xchg
cld
cld
shlb
int3
lret
movsl
xor
cld
mov
out
cmpsl
ret
fdivl
jl
rolb
lea
pop
add
stc
xchg
jns
jmp
mov
jl
stc
js
loope
sub
pushf
mov
sbb
aam
nop
cmovl
aam
stc
mov
mov
scas
ja
scas
xor
push
test
andb
mov
arpl
cmpsb
loope
int
add
mov
dec
and
mov
in
hlt
scas
xchg
mov
fnstenv
add
xchg
push
out
ret
vunpckhps
out
aam
cmp
jne
add
xor
in
js
inc
loop
pop
mov
jg
lock
adc
jmp
je
and
jge
or
push
sbb
mov
mov
insl
adc
xchg
sbb
jmp
das
dec
loope
inc
pop
adc
test
test
add
mov
mov
adc
repnz
lahf
xchg
insl
cmp
dec
lds
adc
mov
jge
push
dec
jae
or
cmpsl
int
push
mov
cld
push
stos
clc
and
fcmovb
nop
fstpl
pop
and
les
jbe
in
popa
loopne
pop
add
cli
xchg
das
inc
fcomps
push
push
dec
adc
rcr
mov
dec
sub
js
jae
jl
mov
adc
sbbl
idivb
dec
popa
pop
mov
hlt
dec
mov
or
sub
fwait
and
in
push
push
jp
push
mov
test
push
add
lods
fstpt
in
pop
cld
mov
insb
cmp
push
sub
and
xchg
repnz
mov
repz
pop
and
aas
pushf
je
inc
or
movsl
adc
mov
scas
sub
jle
fidivs
sub
jp
fs
not
cli
push
cmc
push
ret
xchg
sbb
mov
sbb
lea
fwait
jmp
incb
mov
in
inc
and
jle
into
sbb
ja
cld
cli
push
fwait
mov
push
aaa
sub
cli
xchg
xchg
insl
ret
movl
rcl
jne
jecxz
in
mov
inc
lock
push
push
pop
mov
xlat
lret
shll
cmp
jl
cld
in
pop
gs
push
loopne
iret
test
cmp
xor
in
testl
cs
dec
dec
orl
dec
jmp
shll
fs
xchg
push
les
mov
pop
dec
add
repz
inc
xchg
stc
push
mov
pop
jge
xchg
jb
cmc
lea
mov
mov
jns
mov
xchg
test
xchg
ficoms
pusha
inc
mov
mov
aam
add
cmc
inc
add
mul
rclb
push
mov
addb
mov
cmp
ss
bound
fdivl
loop
ds
jl
bound
inc
repnz
mov
add
scas
rorb
scas
into
mov
mov
push
pop
add
mov
popf
add
add
mov
mov
adc
pusha
jbe
cmp
fwait
push
jg
mov
xchg
pop
xchg
adc
bound
xchg
push
mov
mov
jae
rcl
mov
cli
inc
adcb
inc
in
mov
test
inc
shl
insl
sbb
repz
sti
inc
mov
mov
iret
cmp
inc
in
xchg
mov
adc
dec
shl
popf
das
out
xchg
sub
bound
sub
cmp
jae
test
sbb
xor
cmpsb
xor
mov
filds
add
cwtl
aam
ficompl
push
ret
test
test
in
sti
pop
fs
out
or
add
xchg
mov
mov
jecxz
cwtl
xchg
cmp
idivl
repnz
adc
js
lods
fsubs
scas
xchg
stos
bound
xlat
stc
xor
mov
les
mov
xchg
das
lods
outsl
cwtl
inc
push
shlb
iret
mov
mov
mov
xorb
stos
test
mov
stos
in
bswap
insl
add
adc
cwtl
outsb
lods
ret
data16
in
jnp
adc
lods
adc
pushf
sbb
jnp
or
dec
push
sti
aaa
xchg
incl
loop
mov
and
ljmp
cwtl
add
fsubp
test
sahf
enter
mov
jle
cltd
xor
fwait
das
adc
ja
mov
jecxz
rcrl
fcomps
lods
scas
outsb
lea
out
adc
fxch
pop
bound
jns
mov
pop
pop
mov
cld
xchg
jae
mov
jmp
stos
pop
jecxz
jb
jno
scas
ljmp
mov
stos
js
pop
cmc
outsl
scas
and
shrl
pusha
mov
shll
fs
jge
sub
mov
js
cld
sti
ds
fwait
aam
ljmp
faddl
push
orb
mov
mov
ja
push
mov
js
cmpsb
andl
xchg
mov
loop
lods
pusha
mov
and
and
mov
mov
cs
inc
xchg
and
dec
mov
repnz
or
lods
imul
inc
loop
sbb
push
jb
jg
xchg
cld
roll
call
incl
jnp
fisubrs
out
and
inc
std
push
sub
mov
pop
int3
je
and
in
push
mov
adc
es
js
bound
add
scas
push
lock
adc
jecxz
ret
cmpsb
xchg
test
call
jns
push
adc
out
mov
test
scas
gs
push
in
scas
mov
call
sbb
lret
xchg
inc
test
dec
std
cld
cmp
je
stos
stc
addr16
and
and
lcall
mov
xchg
test
xchg
stos
inc
out
mov
push
pop
mov
inc
jp
xor
jmp
fdivl
mov
push
mov
loop
scas
jo
es
and
xchg
arpl
ljmp
cli
aas
js
popl
mov
push
test
dec
jle
je
enter
dec
mov
loopne
dec
jno
movsb
lods
fimull
mov
loope
fwait
push
xor
mov
mov
andb
out
sub
mov
pop
insl
pop
cmc
fwait
mov
xchg
in
dec
sti
push
jp
mov
ficompl
clc
pop
inc
fldenv
or
mov
mov
add
push
lds
rorl
in
or
bound
xchg
mov
sahf
arpl
aam
mov
dec
mov
lahf
cli
cmc
cmpsb
mov
pop
mov
lret
xchg
lret
dec
mov
cwtl
mov
aaa
loop
cmp
mov
fdivr
xchg
cltd
and
inc
cmp
ret
jle
mov
xchg
adcl
data16
mov
scas
jns
loop
push
xchg
pop
js
push
lea
mov
aaa
or
adc
xor
shlb
clc
cmpb
lds
mov
fisttps
dec
movsb
dec
or
jno
mov
sbb
jecxz
xchg
mov
cld
outsb
sbb
loopne
xchg
add
push
push
stc
mulb
test
in
and
popf
xor
xor
and
out
int
jae
jg
dec
mov
lahf
sub
jnp
cwtl
adc
divl
mov
shlb
movsl
mov
jg
insl
cwtl
clc
ret
cwtl
mov
int
sub
pop
push
loopne
mov
xchg
lcall
and
jecxz
enter
call
inc
cmp
loopne
test
jns
movsb
pcmpeqb
cmp
inc
mov
test
sbb
shlb
push
inc
push
fbstp
xchg
gs
cmp
lret
jne
mov
mov
mov
daa
icebp
fsubl
lds
outsb
insb
stos
call
sbb
mov
fucom
xor
sub
test
adc
sub
or
mov
mov
cli
stc
inc
pop
mov
loope
jle,pt
pop
xchg
lret
out
daa
rcrl
and
mov
push
pop
fidivs
flds
push
outsl
xchg
cld
in
jge
pop
lock
inc
cmpsb
cld
mov
and
mov
xchg
fwait
in
aad
jmp
dec
scas
cld
jmp
orb
and
into
mov
pop
xchg
nop
ss
das
shl
js
or
scas
jae
sahf
pop
idivb
dec
add
out
stc
mov
test
mov
xor
repnz
inc
test
sub
xchg
lock
std
in
cltd
sub
sbb
les
dec
push
addb
xor
jbe
and
mov
jbe
mov
ret
aad
adc
xor
sub
rolb
mov
scas
sbb
pop
push
adc
enter
negb
out
push
sbb
xchg
mov
pushf
add
adc
add
nop
int3
js
xchg
in
mov
nop
xlat
xchg
aaa
loop
jg
test
mov
mov
test
jle
mov
push
jae
mov
push
xchg
or
shrb
or
mov
scas
int3
scas
mov
lcall
loopne
dec
call
adc
lret
jl
cmp
test
lcall
bound
jg
or
insb
iret
inc
xchg
adc
repnz
adc
movsb
push
mov
int
jp
insb
lods
mov
out
or
dec
lods
mov
mov
mov
jmp
sbbb
mov
fstl
lods
scas
loop
inc
xchg
fs
sbb
shrb
jb
mov
std
std
pop
lahf
pushf
outsl
arpl
or
lods
mov
sbb
dec
mov
lock
in
and
dec
dec
in
mov
scas
adc
movsb
in
movsb
repnz
loopne
mov
mov
cmp
jmp
je
es
test
and
adc
pop
mov
test
cld
sub
cmp
lret
outsb
xor
push
pop
fldl
xchg
orb
nop
loope
mov
add
std
dec
and
mov
fdivrl
mov
lret
lods
into
nop
fwait
dec
jge
xchg
pop
xchg
add
cltd
mov
pop
fs
dec
sub
inc
mov
mov
pop
xorl
dec
cs
push
and
push
roll
out
cwtl
push
adcl
sbb
into
ss
and
push
mov
mov
inc
or
je
inc
or
shlb
adc
out
pusha
mov
xorb
jle
out
mov
int3
adc
loopne
and
orb
test
outsl
in
pop
dec
dec
and
xchg
jl
xchg
aas
sbb
dec
adc
lahf
xchg
push
mov
push
aad
push
add
dec
push
neg
popf
dec
pop
fcomip
dec
or
and
call
leavew
and
shrl
sub
gs
das
mov
mov
adc
inc
test
movsb
leave
hlt
xchg
hlt
adc
xor
repnz
popa
pop
test
inc
mov
xchg
mov
pop
mov
repnz
outsl
mov
push
scas
push
jae
bound
or
mov
fs
dec
loopne
mov
dec
subb
cmp
lahf
test
mov
cltd
movsb
xlat
push
nop
sub
insl
xchg
mov
aam
xorb
push
or
hlt
bound
mov
push
mov
add
out
bound
pop
sti
lods
xchg
jecxz
cmp
and
dec
repz
and
popf
adc
ljmp
add
jl
push
add
mov
or
sahf
lea
popf
out
iret
push
movsl
cld
lahf
add
dec
stc
dec
mov
ret
mov
std
lea
and
mov
wbinvd
clc
sbb
mov
push
push
jb
xchg
xchg
sti
jg
mov
add
jl
clc
lods
aas
rcrb
test
out
or
mov
dec
add
jbe
fxch
push
add
repz
mov
pop
fs
add
iret
inc
xor
aam
test
arpl
xchg
jno
inc
jle
or
movsl
jp
mov
ret
jge
in
sbb
cmp
cmp
pop
out
xchg
adc
daa
adc
pop
push
in
pop
inc
out
inc
inc
fucompp
mov
mov
cmp
xchg
xor
les
push
jl
lret
movsb
add
pop
test
or
adc
divb
jecxz
dec
mov
push
bound
insb
mov
gs
xchg
push
sub
mov
rol
pop
test
cmpsb
sbb
fbstp
mov
jno
mov
movsl
jno
xchg
and
jmp
sub
mov
sbb
or
loope
popa
out
mov
pop
push
cwtl
aad
loope
cmp
lods
and
aam
add
int
ss
push
inc
les
cmc
adcb
test
mov
and
inc
mov
movsl
fadds
xchg
test
movsl
outsl
jno
es
lcall
shll
in
jmp
or
out
sbb
lret
sbb
push
jno
cmp
outsl
cld
mov
sahf
inc
inc
iret
mov
or
pushf
imul
out
or
and
xchg
dec
mov
pop
repnz
hlt
mov
es
leave
rorl
fadds
dec
cmc
xchg
xchg
mov
aas
add
aad
jae
add
push
lods
jns
jmp
outsb
mov
sti
insb
jo
in
int
jecxz
mov
loope
push
repnz
rol
mov
ljmp
test
jg
inc
or
push
stos
adc
ja
ret
mov
in
ljmp
jno
jecxz
nop
mov
lds
xlat
adc
add
out
mov
call
xor
xor
mov
push
push
out
sbb
add
pusha
and
ss
je
push
popa
xlat
ret
nop
cld
cs
jb
sub
mov
icebp
sbb
push
clc
outsb
mov
hlt
cmp
repnz
xchg
int
sahf
std
arpl
popf
inc
data16
jns
sbb
and
lock
aas
jecxz
cld
cmp
and
cmp
mov
cmp
cld
mov
jle
dec
pop
xor
adc
shlb
xchg
fwait
mov
aam
jle
rolb
xchg
cmp
xchg
mov
jmp
cmp
shl
sar
jno
in
incb
jmp
mov
repnz
es
xor
aas
sbb
xor
sub
jae
fldcw
sbb
mov
inc
int
into
sbb
dec
hlt
outsb
in
mov
xchg
mov
mov
icebp
pop
inc
testb
jno
fildl
subb
pop
xchg
mov
lock
aad
ljmp
xor
scas
sbb
fsubrs
push
mov
push
pop
pop
ss
test
jg
subl
jnp
cld
xor
add
gs
jg
out
popf
or
mov
repnz
mov
mov
mov
xor
cld
push
mov
lahf
xor
mov
mov
rorb
adc
fstl
lret
mov
inc
test
cltd
into
stos
cld
aad
mov
cs
xchg
cwtl
adc
xchg
test
loope
jmp
jne
fidivs
adc
bound
add
cmc
sahf
fcomps
sbb
or
add
test
add
rorl
test
aam
int3
inc
add
xor
mov
and
popf
aas
xchg
mov
out
sbb
cmp
xorl
out
cld
cmc
pusha
lods
std
mov
adc
mov
je
cld
outsb
or
dec
cmp
popf
pop
les
xchg
or
mov
arpl
jnp
push
sbb
cli
mov
idiv
push
test
cs
std
cmp
hlt
roll
jg
lahf
sbb
add
xor
punpckhbw
inc
pop
push
dec
xchg
xlat
and
aas
xchg
inc
leave
test
aas
mov
adc
in
mov
push
or
push
cmp
dec
movhps
pop
subl
sahf
xor
cmpsl
lock
cld
ljmp
mov
push
gs
cwtl
test
cmp
movsl
inc
test
xor
mov
out
clc
es
jl
or
ljmp
cmp
in
rclb
add
add
push
xchg
push
fmuls
out
dec
mov
out
fdivrs
mov
sub
mov
cmp
cltd
mov
pop
push
cld
inc
sbb
xor
dec
addr16
rclb
sbb
mov
testb
mov
cmp
dec
arpl
sbb
and
mov
xor
lods
sub
std
shll
outsl
ret
adc
test
mov
xchg
lcall
dec
es
js
mov
xorl
dec
loop
mov
xchg
hlt
les
sub
dec
mov
mov
pusha
out
dec
cld
dec
js
mov
push
add
mov
mulb
daa
orb
fstpl
gs
jmp
inc
mov
xor
imul
adc
mov
nop
mov
popa
movsl
je
rorl
xor
cltd
mov
or
inc
mov
and
cmp
or
sbbl
mov
mov
repz
lret
push
and
cmc
test
adc
imul
inc
cmpsl
xchg
pusha
xchg
or
mov
mov
xchg
icebp
hlt
leave
subl
cltd
imul
mov
gs
fldcw
js
adc
jno
frstor
mov
mov
loopne
add
jno
and
insl
lret
mov
mov
jmp
negl
dec
inc
mov
pop
inc
aaa
insb
jg
add
push
inc
stos
pusha
aas
xchg
mov
dec
std
cmpsb
iret
xor
sub
xchg
stc
cmpsb
mov
cltd
scas
std
inc
pop
xorb
lret
test
xchg
dec
je
mov
pop
testl
pop
xchg
add
lcall
insl
cmpsb
ss
in
sub
and
mov
jns
mov
push
mov
scas
jb
or
push
jl
xor
test
imul
outsl
mov
push
repnz
sub
push
insl
jle
xor
ds
shrb
cmp
cmpsl
push
arpl
outsb
dec
bound
pop
cmpsb
mov
rclb
jmp
movsb
push
mov
mov
mov
push
int
push
scas
idivb
xchg
leave
xchg
ljmp
or
mov
dec
ret
leave
dec
cmp
pop
mov
jg
jb
lds
imul
rolb
mov
lods
imul
lahf
mov
sub
fdiv
pop
sub
inc
and
idivb
jnp
mov
stc
inc
outsl
adc
jne
and
jo
in
call
loope
sbb
imul
dec
adc
lock
inc
fcompl
mov
testb
addr16
add
inc
sbb
fistpll
shl
stc
ds
xor
jnp
sbb
jns
lods
repnz
push
and
jnp
dec
inc
in
gs
loopne
inc
outsb
add
cltd
adc
sti
cmpb
jmp
adc
jmp
mov
push
ja
pop
or
mov
jno
or
fidivrl
addr16
dec
sub
cmp
mov
pop
mov
jge
rep
ret
inc
xor
inc
jae
loope
sub
dec
in
mov
dec
xor
gs
sbb
popf
fsubrl
not
fs
push
jo
push
out
cmp
addr16
xchg
xor
pop
mov
xchg
stc
mov
test
mov
sbb
mov
mov
jns
dec
sub
in
fstpl
mull
imulb
cmp
dec
lock
fwait
shll
shlb
jmp
mov
jmp
sub
mov
in
jnp
adc
out
dec
mov
adcl
mov
mov
mov
cmpxchg
out
lcall
jae
or
cwtl
mov
cmpsl
cwtl
lea
and
in
jbe
test
jmp
adc
pop
repz
cltd
mov
mov
pushf
test
cwtl
std
push
xchg
jno
fdivrs
cmpsb
fxtract
jns
xor
lock
pop
inc
add
dec
fbld
push
mov
adc
imul
lds
cwtl
int
loop
addl
mov
test
outsl
xorb
daa
sahf
sti
inc
mov
or
lock
xchg
xor
sarb
push
scas
adc
jbe
cmp
lea
pop
ja
cmpsb
loop
push
movsb
sub
ja
fwait
xor
push
adc
mov
stos
jmp
mov
lret
mov
rclb
xchg
bt
enter
in
aad
mov
inc
mov
push
ja
xchg
outsb
sbb
xchg
nop
inc
stos
mov
andb
inc
lods
cli
pop
cmp
inc
loopne
int3
outsl
pop
mov
xlat
jb
mov
dec
in
lock
mov
fdivrs
dec
push
loop
lods
cmp
xor
aam
xchg
lods
mov
jo
xchg
push
adc
mov
fcmovb
arpl
mov
fimuls
mov
sub
hlt
push
arpl
add
into
mov
adc
stc
in
test
push
nop
mov
xchg
xchg
mov
sub
int3
dec
imul
shr
xchg
jb
mov
into
loopne
add
push
mov
shl
mov
adc
icebp
not
outsl
lds
lret
lahf
ds
lea
mov
lcall
inc
ljmp
pop
rclb
add
jns
fcmovnu
popa
into
jmp
orl
ljmp
push
rorb
mov
cmc
mov
pop
cld
mov
push
lock
cwtl
gs
pop
adc
xchg
arpl
insb
cli
mov
xchg
sbb
cmpsb
inc
mov
enter
insl
push
push
rcrl
lcall
add
xchg
movsb
adcb
int
scas
mov
outsl
xchg
cmp
sub
mov
call
outsl
js
fildll
and
pop
adc
xchg
cmp
mov
cmp
addr16
out
or
das
or
jo
mov
mov
repz
test
pop
rclb
dec
push
repnz
xchg
mov
pushf
or
int
push
mov
jp
cwtl
ret
mov
mov
mul
std
or
rclb
mov
jecxz
or
js
push
pushf
into
movnti
xor
mov
popf
shl
repnz
or
and
imul
int
pop
pusha
call
push
popa
jge
jns
lods
mov
pop
add
adc
mov
lret
rorl
xchg
xchg
mov
xor
fwait
dec
xchg
out
cmp
jg
cltd
jmp
icebp
mov
jge
call
or
aaa
pop
cltd
test
jae
jnp
sub
stos
push
enter
jnp
dec
movsb
xor
ss
push
or
fistl
xor
out
jle
push
jge
or
push
clc
push
dec
aaa
std
pusha
lahf
roll
push
clc
sbb
and
xor
fcom
push
push
push
imul
xor
pop
incl
in
and
dec
or
rcr
xor
es
daa
xorl
pcmpgtb
jb
push
cmp
mov
aad
jle
out
mov
in
gs
test
push
mov
adc
cli
jae
fcmovnbe
cmc
es
mov
cmc
ljmp
adc
lahf
sub
cmp
outsb
das
cs
test
mov
mov
rclb
scas
cmp
repz
stos
movsb
loop
dec
dec
cmp
popf
push
inc
pop
cltd
je
jno
xchg
dec
mov
inc
subl
sub
push
inc
lcall
and
cmpsl
inc
pop
sub
leave
jecxz
mov
add
dec
je
stos
sub
cmp
lret
clc
cmp
popl
lahf
lock
sbb
push
popa
mov
mov
mov
icebp
push
sbb
xor
pop
mov
jnp
fiadds
push
dec
std
xchg
and
add
sub
cmc
in
jno
jb
add
fidivs
leave
push
enter
jle
lahf
add
sub
popa
in
or
push
mov
jp
int
mov
jbe
mov
inc
cltd
sub
int
mov
mov
int
leave
mov
lcall
inc
mov
out
adcb
rol
sbb
sub
mov
xlat
in
out
into
scas
mov
imul
gs
xchg
iret
push
lahf
sub
xchg
ds
cmp
test
pushf
mov
sbb
leave
leave
adc
mov
push
in
insb
jno
xor
mov
jle
xchg
ja
call
inc
mov
rorl
in
pop
and
or
xchg
adc
mov
insb
sti
cmp
mov
inc
js
shr
mov
jb
jg
cmp
xchg
bound
pushl
loop
pusha
popa
dec
push
test
es
jle
mov
inc
jmp
roll
or
sub
cli
mov
pushf
or
adc
bound
ret
or
jbe
out
jno
into
mov
or
pop
adc
dec
push
sub
repz
jae
cmc
mov
jmp
add
fistps
stos
xchg
popf
fwait
icebp
int
dec
mov
dec
sbbb
mov
pop
fimull
mov
test
iret
in
add
xor
cltd
sub
mov
mov
pusha
inc
pop
shr
fidivrl
popa
sbb
mov
sbb
xor
pop
dec
lret
jmp
or
sbb
mov
push
dec
sub
cs
icebp
mov
sub
add
and
sbb
mov
add
xor
aad
mov
cli
nop
jp
pop
stc
cmp
inc
mov
and
mov
ds
mov
scas
xchg
adc
mov
addr16
iret
ja
clc
or
cs
add
imul
addl
jge
jp
and
lret
pop
mov
outsb
lahf
ljmp
sbbl
dec
mov
xchg
dec
dec
lahf
adcb
fmul
or
xchg
inc
mov
mov
xor
sub
pop
cmp
hlt
push
dec
ret
xchg
je
mov
adc
sub
pop
insb
cmp
inc
sbb
or
xchg
mov
jmp
mov
mov
xchg
mov
fistpll
mov
jecxz
ja
in
mov
add
in
pusha
in
pushf
sbb
add
sbb
enter
and
ds
sbbb
mov
sbb
adc
sub
adc
int3
sub
pop
leave
lcall
jecxz
xorl
mov
lahf
mov
movsb
jmp
gs
and
push
dec
cmpsb
cli
xor
roll
jbe
scas
mov
dec
jge
sahf
xchg
mov
call
stos
mov
inc
add
imul
pushf
fs
cmp
int3
push
arpl
test
push
out
dec
push
mov
mov
xor
mov
pop
call
push
loopne
mov
out
or
andb
stc
sti
jmp
aad
cmpsb
addb
ljmp
data16
and
pop
xor
cmpsb
sub
pop
ffreep
dec
xchg
rol
pop
ret
cli
int3
fwait
imul
mov
jg
xchg
sbb
pop
cmp
inc
es
sbb
adc
mov
xor
add
mov
mov
mov
stos
xor
mov
imul
dec
je
into
inc
dec
ss
dec
aaa
outsb
popf
enter
divl
incl
ss
mov
cli
int
mov
shll
std
loope
pop
aad
testl
xlat
mov
out
xchg
xchg
xchg
shr
rcl
push
push
xchg
jmp
or
push
and
add
push
shll
fwait
cmc
jg
add
ljmp
faddl
sti
xchg
sbb
pop
mov
or
mov
lock
push
in
mov
dec
lret
push
inc
call
imul
adc
mov
xor
xor
repz
enter
daa
and
aas
pop
cmpsl
add
dec
jmp
mov
mov
icebp
jbe
and
pop
or
movsl
mov
jne
insl
mov
adc
xchg
movsl
push
pushf
aaa
sti
push
mov
repz
test
mov
or
enter
jp
push
inc
mov
jg
sbb
inc
gs
fcmovu
xor
arpl
dec
scas
jne
cmp
mov
xor
mov
and
or
adc
clc
sub
or
int3
xlat
xor
fucom
and
mov
lea
mov
mov
xchg
daa
push
bound
insb
cwtl
shlb
push
sbb
xchg
les
xchg
dec
mov
lds
xor
test
jnp
aad
jne
sbb
sbb
xchg
sbb
fistps
xor
arpl
repnz
dec
add
adc
data16
jmp
lea
push
rclb
mov
sub
mov
faddl
arpl
fcompl
out
ret
lock
test
push
lcall
xchg
mov
push
lahf
popa
ljmp
jmp
push
sub
lods
popf
jnp
xor
dec
ljmp
andb
cld
faddp
mov
rclb
fnsave
in
jo
or
add
cli
shlb
mov
push
sbb
sarb
daa
adcb
mov
repnz
int
inc
je
inc
gs
pop
sbb
cmp
xchg
inc
inc
mov
dec
push
fdivs
int
sbb
add
cmpsb
push
inc
jp
push
add
lds
repz
pop
or
cltd
push
push
lods
push
jle
outsb
pusha
into
mov
fisttpll
dec
or
ja
popa
cmp
les
add
jo
imul
xchg
mov
mov
outsl
repnz
inc
shr
les
jecxz
jp
les
arpl
test
sub
pop
add
fistpl
sub
gs
mov
in
stc
ret
jecxz
xchg
mov
in
arpl
xor
ret
cmc
xor
repnz
cltd
pushf
jge
test
cli
mov
imul
rcll
out
sbb
sahf
mov
jno
popa
mov
sub
cmp
adc
cltd
aad
pop
xchg
push
adcl
push
loopne
int3
jecxz
push
cmc
inc
fadd
lret
sub
gs
loopne
in
mov
push
aam
push
pushf
arpl
scas
dec
mov
pop
add
lcall
inc
test
sub
rcll
or
ds
je
gs
stos
sub
mov
in
fcompl
vorps
in
test
mov
mov
incb
pop
jbe
pop
cli
inc
insl
mov
insl
aaa
test
mov
sub
inc
mov
inc
aas
push
inc
jge
push
ret
cmp
scas
and
jno
mov
fstps
sub
mov
xor
mov
aam
sub
cmpl
push
jge
push
std
mull
test
cmp
out
je
iret
add
jge
shrl
dec
out
xlat
add
or
and
jecxz
push
arpl
int3
push
popf
enter
nop
pusha
arpl
sbb
xor
sub
orl
or
bound
into
mov
xor
mov
jb
sub
loop
cmp
dec
mov
jns
pop
in
in
sub
test
mov
fwait
inc
jg
xchg
scas
mov
mov
sub
outsb
xchg
push
sub
test
jae
mov
repnz
loop
jmp
pop
and
push
dec
add
imul
les
lock
loop
xor
mov
dec
sub
stos
sbb
pushf
pop
lcall
hlt
mov
dec
mov
bound
orl
outsl
dec
jg
cli
fwait
in
pop
xchg
into
ds
imulb
xchg
xchg
mov
or
pop
dec
or
mov
push
sbb
jbe
push
inc
xor
pop
ret
mov
aad
push
ror
dec
xchg
mov
sarb
nop
dec
arpl
in
xchg
daa
push
outsl
aad
add
fs
insb
ret
and
pop
and
bound
inc
pushf
in
dec
xor
and
rorl
imul
cltd
cmp
aaa
mov
mov
rol
imul
mov
xchg
rcrb
or
je
push
bound
pop
call
das
cwtl
push
cmp
cmp
lret
xor
xchg
mov
das
fstpl
mov
lods
sbbl
test
mov
xchg
lods
and
add
jg
adc
pop
cmpsb
inc
mov
sub
mov
lret
lret
or
jne
add
pop
cmp
test
in
fnstenv
repnz
xchg
push
pop
arpl
lcall
in
popa
dec
in
cmovb
out
inc
inc
push
ja
daa
xchg
push
add
loope
out
punpckldq
or
fcomi
loopne
fadds
pop
ljmp
sub
cmp
ljmp
scas
jns
ss
iret
movsb
rol
cs
scas
hlt
push
outsl
or
push
add
push
mov
lcall
xchg
xor
pushf
lret
push
in
cmp
push
lds
mov
and
and
mov
xor
jle
lahf
loope
jp
sar
jecxz
icebp
mov
xchg
scas
and
jecxz
test
lcall
add
loopew
dec
popf
imul
imul
bound
push
in
mov
aam
call
data16
push
cmpsb
lods
sbb
push
loope
mov
push
dec
fs
mov
fxch
push
push
mov
ja
call
arpl
pop
cltd
icebp
adc
push
xchg
inc
insb
push
mov
mov
mov
inc
adc
lahf
jb
jno
clc
js
mov
fstpl
jno
or
movsb
insb
ljmp
xlat
scas
enter
jne
mulb
adc
push
fcompl
push
cmp
dec
fdivrs
dec
adc
mov
int3
iret
xchg
or
mov
lret
mov
inc
dec
lock
push
or
sub
mov
loopne
add
pop
and
mov
addr16
bound
pop
mov
test
daa
fistpl
add
pop
xchg
or
push
mov
test
out
stc
stc
cltd
lret
sub
jle
lret
mov
fscale
push
lahf
es
sbb
std
faddp
fsubl
int
inc
hlt
cmp
inc
fisubrs
xchg
cli
mov
repnz
pop
out
cmp
dec
jnp
fsub
jae
std
adc
adc
add
xchg
and
es
push
repz
jg
mov
sub
aam
adc
inc
and
cmp
inc
es
mov
repz
rcr
or
stos
push
mov
in
inc
sbb
fisttpl
fwait
ljmp
rorb
decb
jbe
push
pop
lds
push
inc
outsl
adc
test
jg
push
sub
add
aam
movsb
push
mov
and
xlat
ljmp
xor
sti
outsb
push
jbe
xchg
and
pop
bound
hlt
in
inc
pop
mov
xlat
aam
scas
sbb
loop
mov
sbb
sbb
sbb
inc
mov
add
inc
push
mov
aam
out
sbb
lret
sbb
mov
push
mov
xor
jnp
lods
push
fimull
add
adc
lcall
divb
hlt
push
shl
adc
popa
xchg
jbe
push
inc
adc
and
xchg
mov
xchg
incb
inc
lock
inc
lret
push
loop
negl
push
adc
aas
mov
ret
shrl
test
nop
aad
pop
inc
push
fbstp
inc
imul
mov
lds
insb
sub
mov
jns
test
adc
in
and
movsb
mov
scas
mov
xchg
push
add
loop
nop
lcall
mov
popf
push
pop
inc
imul
enter
in
test
xchg
push
sub
les
dec
xor
jg
lods
sbb
sahf
hlt
in
cwtl
xor
jge
mov
dec
sbb
popf
pop
lcall
sti
mov
lcall
movsl
leave
jg
int3
out
jecxz
xchg
lock
pop
pop
pop
nopl
inc
lea
clc
xchg
mov
movsb
jns
mov
sbb
lods
shlb
shr
and
add
mov
cmp
sbb
icebp
repnz
mov
push
insl
jns
mov
xchg
mov
ret
mov
jbe
jnp
stos
ja
repnz
mov
imul
push
pop
inc
hlt
div
xor
stos
test
mov
cmp
test
and
scas
notl
dec
mov
cmpsl
sub
lods
in
cwtl
test
insb
xchg
bound
std
nop
and
imul
mov
mov
push
pop
cmp
add
mov
out
xlat
mov
int
or
pop
test
sub
ret
xor
push
int3
test
loopne
insl
outsb
mov
lods
test
js
sub
data16
repnz
aas
push
int
push
mov
int
push
or
pushf
inc
dec
pop
sub
sbb
push
cmp
arpl
lds
lods
push
push
or
push
push
shll
out
xchg
xchg
je
mov
lds
ja
mov
dec
mov
test
fsub
inc
mov
test
mov
push
or
mov
js
fidivrl
add
pop
xchg
or
pop
push
ljmp
cwtl
and
lock
xchg
xchg
pop
xchg
push
dec
xor
xchg
inc
ret
das
test
pop
imul
cmpl
push
clc
and
fidivrs
rcrb
movsb
call
cltd
xor
add
sahf
add
cmp
pxor
inc
cs
lret
mov
add
sub
sti
mov
sub
pusha
fadds
fsubrp
test
outsl
out
stos
push
xor
dec
mov
fs
outsb
out
dec
xchg
mov
mov
rcrb
mov
es
pusha
lret
mov
inc
sbb
xchg
add
xchg
pop
inc
xor
sub
push
call
repz
jl
xchg
sahf
sub
and
in
mov
jmp
stos
stos
stos
shrb
push
cmp
xlat
sub
and
call
in
inc
scas
or
mov
dec
xchg
push
fidivl
xor
xchg
stc
out
decb
sbb
mov
fcmovb
gs
loop
out
mov
cmpsl
push
push
iret
mov
mov
outsb
pop
xchg
mov
add
adc
je
scas
sub
fldt
out
repnz
loopne
movsb
stos
stos
andb
out
add
dec
dec
andb
pushf
and
sub
lcall
xor
test
cld
jle
inc
jns
sub
mov
cld
mov
xorl
mov
dec
pop
aam
pop
in
mov
ljmp
rclb
jg
adc
mov
adc
pop
andb
enter
or
mov
adc
int3
mov
push
lea
xor
push
adc
negb
outsb
hlt
mov
mov
enter
cmp
outsl
dec
mov
push
fmull
aas
stos
stc
aas
sbb
push
movsb
or
sbb
in
insl
cmp
enter
jae
or
jnp
pop
jo
or
gs
adc
fucomip
jle
jle
repz
pop
ret
bound
cmp
inc
cs
pop
mov
cmc
rorl
in
or
ficomps
jmp
and
add
xor
mov
adc
adc
loopne
jmp
out
int3
cmc
inc
or
cmpl
sub
push
adc
in
add
xor
movsb
std
movsb
ret
ss
dec
in
hlt
mov
inc
outsl
int3
push
inc
loop
test
cld
jno
lahf
inc
movb
dec
sbb
iret
dec
pop
sar
push
mov
cmpsl
sahf
xchg
inc
push
enter
ss
rol
jl
adc
mov
sbb
push
xor
xchg
movsb
cli
push
jecxz
sbb
dec
popf
dec
or
adc
pushf
cli
enter
jo
out
xor
jo
mov
hlt
shl
pop
mov
scas
lods
mov
inc
adc
sbb
dec
sub
adc
adc
mov
stos
cwtl
js
jg
cmp
xchg
jae
addr16
psubb
loopne
pop
xor
dec
shll
and
push
jmp
loopne
dec
push
lahf
outsb
out
mulb
out
std
shll
out
xchg
addr16
dec
imul
stos
inc
and
scas
and
dec
movsb
aas
jns
adc
mov
std
add
pop
jnp
cmp
add
mov
sub
scas
pop
in
cmp
mov
mov
mov
and
lcall
cmp
rclb
or
or
inc
xorl
sbb
imul
fadd
or
xor
pop
cli
inc
scas
insb
in
mov
std
scas
adc
push
mov
push
or
nop
btsl
jge
xchg
fs
clc
outsb
push
push
or
fisttpll
cwtl
into
dec
iret
adc
xchg
pop
push
nop
rorb
test
cmc
test
sbb
add
andb
xor
pop
lahf
cmp
push
dec
mov
pop
nop
fcomps
in
popa
mov
cli
adc
xchg
mov
add
lcall
xchg
mov
sbb
push
inc
adc
lods
xor
mov
jmp
push
push
jbe
out
sub
adc
icebp
ret
fsubrs
mov
xor
lods
adc
xor
dec
fisttpll
js
push
orb
mov
cli
mov
push
mov
add
push
test
or
imul
cmp
sbb
and
adc
pushf
dec
sahf
arpl
hlt
sub
sbb
lods
inc
int
mov
add
les
shll
icebp
ret
or
push
lea
scas
repz
mov
xchg
xor
and
sbb
test
push
or
aam
scas
dec
fcoms
rolb
dec
loopne
shll
int
dec
ret
mov
jle
loop
imul
pop
stc
test
fldcw
mov
add
loopne
mov
test
lock
push
loopne
pop
sbb
les
addl
lea
or
push
in
push
outsl
adc
dec
mov
cmp
xor
ret
sets
rolb
stc
xchg
fmuls
mov
mov
fmull
icebp
insl
cmp
pop
lea
cmp
dec
repnz
xor
mov
mov
fs
jbe
and
cmp
xchg
mov
arpl
je
push
dec
js
cmp
pop
mov
jne
psadbw
or
mov
test
jg
lds
xor
jae
mov
pop
fmull
adc
xchg
gs
pop
sbb
mov
lret
or
xor
fsubrs
mov
and
sbb
jmp
pop
cmp
push
xchg
xchg
push
into
mov
mov
xchg
mov
push
add
xchg
call
gs
sub
sti
or
aad
popl
push
sbb
mov
mov
out
inc
push
push
pop
aad
push
mov
mov
pusha
mov
out
in
test
xchg
mov
pop
mov
cmp
cmp
cmp
cmp
push
jne
push
xor
inc
mov
aaa
enter
cmp
push
jmp
out
fnstenv
mov
or
cmp
add
dec
lahf
neg
xchg
add
push
bound
sbb
add
adc
sbb
mov
push
mov
lahf
out
andb
pop
xchg
leave
js
jle
mov
jge
aas
push
jne
lock
and
mov
in
pop
push
pop
jle
scas
into
ja
pop
notb
mov
dec
pop
movsb
add
test
cltd
nop
repz
popa
jl
jnp
or
repnz
cltd
mov
adc
into
fdivrp
cld
repz
mov
xchg
mov
stos
lea
mov
popf
and
inc
test
int3
mov
sbb
repz
out
ffreep
int
mov
imul
pushf
enter
lret
daa
and
inc
aam
jge
cmp
xchg
mov
les
pop
jge
fistpl
jno
push
push
ret
or
fnsave
mov
dec
enter
sbb
push
movsb
mov
jae
xchg
dec
mov
clc
out
fimull
mov
dec
mov
loopne
mov
jmp
push
call
or
xchg
inc
movsb
adc
js
dec
ffree
mov
pop
repz
dec
iret
je
cmpsb
dec
mov
insb
xchg
je
inc
rcll
clc
movsb
and
add
dec
stc
ss
jp
add
in
lcall
jne
inc
je
adc
or
jo
call
aad
enter
dec
aam
or
cmp
adc
add
or
add
jmp
xchg
cmp
push
movsl
sub
xchg
in
cmc
adc
shrb
mov
out
loopne
rcrl
mov
xchg
sarb
stc
dec
stos
mov
aam
jl
ja
lods
lcall
cmp
push
or
push
xor
idivl
and
or
mov
stos
and
stos
or
ljmp
outsb
xchg
mov
dec
pop
sub
mov
das
mov
mov
xchg
jl
out
xchg
cmc
adc
mov
mov
jno
mov
pop
mov
pop
out
pop
add
add
push
mov
sbb
repnz
fwait
stc
pop
test
and
mov
sub
sub
orb
add
arpl
test
dec
test
jecxz
cmpsb
push
push
aam
pushf
repnz
xchg
je
out
adc
push
loop
adcb
lahf
repnz
mov
loop
fsqrt
dec
bound
test
idivl
shlb
mov
jbe
mov
adc
and
daa
int3
int3
movsb
daa
jecxz
mov
and
sarb
inc
jns
dec
inc
mov
dec
fs
call
repnz
pushl
out
inc
mov
dec
push
test
andl
sub
mov
and
mov
scas
call
sbb
iret
mov
add
shrb
js
adc
pop
cmp
sbb
ss
push
cmp
xchg
push
das
js
fmull
push
push
and
cmp
lret
ret
test
lea
cli
les
inc
fdivs
notb
stos
and
sbb
and
push
imul
sbb
push
aaa
push
mov
xchg
jl
jb
insb
ds
cs
outsb
sahf
sbb
fs
hlt
sub
ds
mov
sub
cmpl
rorl
rep
in
pop
cmpsb
mov
in
push
mov
and
cmpsb
test
jo
xchg
sub
insl
cmp
xor
stos
push
ss
es
mov
int3
sahf
ljmp
ljmp
iret
push
mov
and
lock
lret
push
push
xchg
sub
js
dec
iret
aas
mov
sub
repz
ljmp
mov
out
pop
push
dec
hlt
xor
xchg
test
sbb
cmp
les
mov
test
mov
cmp
jb
add
aas
mov
pop
std
xchg
add
lds
mov
ficoms
xor
mov
ds
out
and
inc
scas
dec
ret
ljmp
hlt
int3
fs
lret
and
mov
add
mov
inc
loop
insl
popa
mov
hlt
andb
mov
xchg
mov
xchg
jp
push
sub
mov
fimull
inc
std
mov
lret
stos
push
daa
int
mov
mov
xor
push
les
in
push
sub
adc
out
inc
or
repz
in
insb
shr
icebp
jnp
xchg
mov
rolb
and
subl
and
sbb
add
jno
cmpsb
pop
or
sub
ja
mov
js
bound
clc
scas
lahf
mov
int
add
adc
aad
lret
cmp
push
mov
fsubrl
jl
jbe
mov
test
scas
sbb
push
es
mov
mov
adc
push
mov
cmp
pop
fbstp
xor
fsubrl
nop
lahf
mov
loope
xchg
pop
push
pushf
jp
es
jns
and
je
outsl
scas
add
hlt
adc
and
pop
xor
fistpl
jns
pop
sub
stc
test
inc
xchg
pop
inc
xor
in
pop
adc
aas
mov
dec
data16
mov
add
fucomp
mov
cltd
outsb
clc
negl
or
scas
rcrl
imul
xchg
cld
dec
mov
jmp
lea
in
stos
cs
xorb
fistl
adc
in
cmpsb
jge
dec
mov
push
push
mov
add
lods
mov
xchg
cltd
bound
fdivs
test
js
lahf
mov
adc
mov
xor
push
in
dec
loope
xchg
ds
xchg
shll
fbld
jne
add
push
stc
repz
mov
pop
xor
push
gs
cmp
js
jg
push
out
sahf
add
push
bound
ljmp
xor
cmpsl
push
mov
and
push
ss
mov
xchg
mov
imul
cmp
ljmp
inc
in
dec
inc
add
movsl
push
sub
and
xor
fidivrl
cmc
enter
fsubl
pop
xor
push
test
rcl
mov
push
push
sbb
mov
cmp
dec
add
aas
jecxz
ret
cmp
jecxz
in
or
cmp
outsl
aaa
jne
inc
jb
add
and
mov
aas
ljmp
add
mov
cmp
inc
adc
add
in
xchg
psllw
xchg
or
movsb
psubd
dec
push
out
sub
out
icebp
fbstp
out
out
lea
and
loopne
outsl
mov
iret
ljmp
pop
jge
push
cli
je
or
cli
inc
aas
xor
mov
push
rorb
enter
iret
aam
outsb
cld
fidivrl
and
xlat
rcl
mov
cltd
cmpsb
repnz
outsl
dec
sbb
test
call
sbb
mov
je
out
and
out
ljmp
push
sbb
cmp
push
adc
jo
add
in
jecxz
and
sub
xchg
xlat
fstps
clc
ljmp
fisttpll
js
clc
or
lods
cmp
xor
into
adc
xchg
imul
mov
dec
gs
in
fsubrl
test
mov
dec
in
stos
fwait
cmovg
cld
inc
repz
and
push
xor
add
inc
lcall
mov
js
pushl
cmp
sbb
aad
add
jg
or
sub
jb
mov
insb
jecxz
adc
daa
call
fimull
les
insl
jp
repnz
cli
adc
and
add
shll
pop
mov
int3
or
mov
push
orb
pop
mov
lea
inc
fisubs
mov
orl
mov
jl
ljmp
movsb
fidivl
pop
cmp
mov
decl
cld
mov
jp
or
mov
mov
scas
ljmp
mov
pusha
ljmp
jg
jg
ljmp
mov
repnz
bound
and
ret
cmpsb
inc
addb
fists
mov
inc
dec
mov
inc
add
test
fldcw
xchg
xchg
xlat
addr16
insl
lods
xchg
push
loop
mov
mov
cwtl
scas
xchg
cltd
mov
mov
or
in
mov
pop
cmc
cli
arpl
and
out
mov
xchg
lret
insl
pushf
mov
test
pushf
push
push
pushf
pop
stc
mov
mov
outsb
cld
add
jno
fstps
stos
push
decb
int
inc
test
adc
dec
repnz
cmpsl
ftst
nop
icebp
loope
and
outsl
push
dec
ficoml
sbb
loope
lock
sbb
inc
scas
lea
add
clc
mov
jp
push
mov
shl
faddl
xchg
push
int
dec
xor
mov
adc
push
xor
idivb
xor
add
push
xorl
fs
fmuls
outsb
or
mov
inc
mov
mov
push
xchg
mov
add
add
xchg
leave
adc
xchg
gs
mov
xchg
jp
in
pop
imul
and
add
or
mov
mov
jns
adc
and
dec
adc
inc
or
shl
repnz
jmp
test
and
mov
fnstcw
orb
fdivs
dec
pop
dec
lret
mov
mov
js
sub
add
push
jbe
adc
call
pop
je
ret
clc
cwtl
cmp
fcomi
repz
cmp
jmp
inc
jg
push
lock
and
lock
in
insl
push
jno
in
shr
and
fimuls
ret
push
cmp
aas
cmpsb
sbb
test
and
push
loop
push
add
fimull
cmp
cmp
dec
int3
pop
rorl
jne
mov
or
push
cmp
and
std
push
cs
cmp
out
outsb
xchg
pop
mov
lret
rcr
add
push
rcll
fnstcw
movsl
inc
popf
iret
xor
lea
sahf
push
data16
dec
and
cmp
or
and
rclb
lds
xchg
lcall
mov
jge
xor
fwait
mov
add
loopne
ljmp
inc
xor
in
or
ljmp
les
loopne
mov
popl
mov
mov
adc
sub
adc
or
and
push
mov
stos
outsb
scas
or
sbb
loop
ljmp
and
xchg
call
jecxz
mov
in
stc
call
ss
pop
ret
mov
mov
bound
jg
push
dec
out
mov
cmp
mov
jno
or
out
in
mov
jmp
inc
xor
insb
add
ljmp
adc
sub
or
bound
jb
mov
jns
outsl
jmp
insl
mov
push
jae
nop
pop
dec
mov
adcb
int3
fwait
std
cli
loop
mov
das
adc
loope
push
inc
mov
xchg
push
in
xchg
xchg
mov
call
sbb
push
pusha
movb
stos
and
out
xor
mov
inc
mov
js
mov
pop
sbb
mov
xchg
xor
out
add
cmp
jno
notl
test
pusha
js
jp
mov
outsb
xor
in
clc
adc
jge
insl
fdivl
rcl
and
test
repz
daa
insl
ds
or
xlat
push
ret
cmp
dec
push
sub
xor
mov
mov
nop
lods
sub
shlb
stos
lret
push
jmp
movsb
outsb
sub
add
and
fiadds
pop
enter
fcompl
nop
jg
and
or
hlt
jl
loopne
stc
ret
dec
adc
push
decl
cmpsl
push
push
pop
push
sub
jle
mov
pop
imul
or
push
add
push
add
stos
push
add
xor
cltd
lret
aam
add
jg
xor
or
xchg
mov
push
lods
push
stc
cmp
or
sti
push
mov
cmp
cwtl
or
ljmp
push
lret
pop
ljmp
mov
xor
inc
jmp
lea
nop
xchg
sbb
stc
rep
in
mov
rcr
into
testl
lret
sbb
in
gs
push
xor
loop
sub
pop
nop
cmp
jmp
hlt
dec
cmp
in
sub
call
dec
fbld
xchg
adc
pop
in
out
ror
in
cmp
sbb
jp
lods
adc
rorb
push
cmpsl
mov
pusha
shll
and
fs
sbb
pop
ljmp
gs
push
cmc
pop
cmp
mov
popa
push
sahf
mov
push
enter
and
sub
inc
xor
sub
push
mov
in
fdivl
adc
pop
icebp
ljmp
aaa
js
in
push
roll
mov
or
xchg
mov
imulb
popa
push
adc
mov
imul
xlat
adc
fwait
sub
adc
fwait
sub
sarb
fcmove
pop
xchg
dec
fwait
lret
neg
outsb
jo
sub
scas
jecxz
lcall
insb
sub
idivb
pop
mov
test
mov
lds
sti
or
fcoml
xchg
xlat
ljmp
xchg
sub
pushf
mov
mov
movsb
in
leave
xchg
xchg
adc
xchg
xchg
xchg
dec
xchg
std
fs
test
xchg
adc
xor
notb
data16
push
sbb
push
adc
jne
xchg
test
inc
in
xchg
arpl
into
js
dec
cmp
sub
sbb
xchg
push
stc
shrl
repnz
push
mov
call
xor
or
mov
sbb
aas
nop
in
push
jb
xchg
fnsave
xchg
adc
je
xor
mov
test
std
cmp
push
xor
mov
and
out
push
nop
ret
mov
int3
in
sahf
xchg
inc
sbb
xchg
mov
lret
push
cmp
inc
scas
fsubrl
mov
lret
jbe
or
jbe
cmpb
cs
jno
and
xor
push
ss
sub
inc
xchg
in
xor
rorb
decl
pop
add
mov
adc
mov
adc
mov
nopl
aam
ljmp
cmp
loop
xchg
xor
or
jbe
repz
push
sahf
in
push
add
pop
rolb
push
imul
xchg
jg
lret
aaa
addr16
aaa
sbb
out
sub
inc
inc
jmp
psubb
pop
or
jl
addr16
and
jbe
mov
push
je
clc
sub
push
or
lahf
add
inc
in
push
mov
stos
pop
push
and
xchg
lret
mov
loopne
xchg
pop
jg
mov
sbb
pop
push
cltd
and
pop
xchg
dec
shr
fistl
iret
cmpsl
mov
cmp
movsl
push
icebp
xor
mov
rclb
sbb
mov
add
lret
cmp
ds
sbb
cwtl
fldl
xchg
xchg
test
or
inc
jl
push
adc
or
push
cs
lods
js
call
repz
repnz
decb
push
xchg
in
push
mov
insl
mov
mov
sub
inc
jae
cmp
push
popf
dec
movsb
sbbb
outsl
insb
addr16
sbb
hlt
dec
je
cmpsb
mov
dec
mov
lret
xor
push
lds
or
gs
push
push
jp
pop
mov
cmpb
add
and
mov
dec
fwait
jecxz
push
xor
rorb
dec
inc
push
notb
jbe
test
push
cmp
fldt
mov
cld
imul
shrb
jae
jp
mov
je
mov
andl
fsubrs
push
dec
mov
imul
xchg
mov
repz
jecxz
nop
lea
ret
js
jp
dec
or
mov
jbe
mov
in
add
xchg
or
add
mov
pop
ftst
data16
test
int3
sub
push
cmp
notb
mov
lea
sahf
int3
sub
add
aam
xor
dec
add
mov
pop
fildll
test
repnz
mov
dec
scas
scas
xor
and
aas
and
push
and
daa
sti
stos
ss
enter
xchg
ja
push
dec
in
inc
jl
mov
dec
adc
inc
addr16
add
fimuls
test
jl
adc
in
ret
xor
lods
inc
out
pop
lods
addr16
or
incb
mov
movsb
iret
bound
mov
push
inc
lahf
test
xchg
dec
sbb
repnz
int
xchg
mov
xchg
lods
cs
cmp
adc
xor
cltd
pop
cmc
testb
cs
movsl
lods
outsl
dec
jns
mov
jno
gs
in
lret
pop
jnp
ja
mov
xchg
sbb
jae
pop
iret
imul
outsl
iret
dec
test
adc
in
inc
xchg
mov
mov
or
mov
adc
mov
mov
pop
pusha
mov
mov
shr
mov
out
addr16
and
inc
sub
sub
mov
dec
popf
fsubr
jl
repz
xchg
in
push
pop
dec
arpl
ljmp
int
and
mov
dec
add
imul
xchg
adc
stos
adc
push
fisttpll
mov
cld
sub
sub
icebp
xchg
push
sub
stos
jne
push
jne
xor
sbb
stc
push
test
add
mov
cmp
xor
stos
pop
sbb
hlt
shrb
add
cmc
xchg
ret
mov
clc
xchg
fisttpll
inc
stos
fisubs
add
inc
nop
mov
push
mov
push
int3
push
push
push
sub
inc
adc
in
call
mov
mov
jmp
mov
out
xchg
imul
mov
inc
pop
aas
cmp
loope
je
pop
adc
xchg
addr16
fs
xor
pop
sarb
inc
insb
dec
js
shld
insb
lret
fidivrl
filds
data16
in
pop
cltd
jmp
cld
loop
cmp
nop
aas
ret
and
jmp
mov
inc
daa
or
dec
inc
dec
out
cmpsl
add
shll
jns
mov
pop
test
dec
bound
cmpsb
inc
push
in
lret
mov
popf
aaa
scas
adc
mov
scas
xor
and
iret
jge
fdivrs
insb
sub
rcll
mov
push
rcrl
inc
push
cmp
iret
in
out
sbb
inc
roll
js
push
arpl
mov
cmc
adc
add
or
js
and
cmp
push
cmp
ss
jl
std
push
shl
fldenv
js
cld
repnz
int3
add
dec
or
cmc
sub
into
adc
sub
xchg
gs
cmpsl
add
sbbl
fstl
dec
mov
pusha
jle
cltd
pushf
repnz
pushf
movsb
aas
rclb
jl
jo
addl
inc
mov
cmpsl
bound
jle
ss
mov
inc
out
int3
pop
stos
lds
cli
jns
hlt
cwtl
jle
cmp
and
push
inc
repz
cmp
push
insl
cli
ljmp
in
dec
fisubrs
orb
iret
mov
mov
push
or
clc
hlt
inc
xchg
add
jae
rcll
dec
jecxz
cmpsb
xor
out
mov
or
fstl
mov
add
add
leave
jo
mov
outsb
dec
sahf
cmp
stc
adc
fwait
dec
pusha
pop
inc
mov
mov
fiadds
in
mov
mov
mov
dec
xchg
fwait
jns
mov
mov
fcoms
add
stc
aad
inc
and
add
es
or
shlb
dec
dec
jnp
idiv
orb
xchg
stos
shrl
fs
aam
ljmp
pop
inc
pushf
pusha
psrad
sahf
or
sub
adc
add
lock
jg
xorl
insl
xchg
jnp
sub
sub
push
mov
adc
andl
add
decl
lods
adc
cmp
movsl
adc
mov
adc
in
notb
jnp
xchg
lret
cltd
xor
mov
jns
mov
out
ret
out
sub
xchg
xchg
and
mov
insl
jle
iret
xchg
cmp
push
cmp
and
inc
iret
dec
imul
ret
or
shrb
dec
andl
loop
push
mov
mov
jp
das
push
dec
mov
xchg
push
and
aad
jb
push
mov
mov
pop
repz
pusha
inc
xchg
mov
lahf
scas
addb
test
xchg
ss
loop
lcall
loopne
sbb
in
bound
loop
push
xchg
push
pop
ljmp
xor
jecxz
popa
cltd
sub
fidivs
and
xor
push
or
adc
push
out
nop
gs
int3
loopne
cld
mov
sub
mov
clc
jbe
shr
mull
cmp
xchg
out
scas
xchg
test
sub
es
iret
gs
mov
mov
bound
mov
js
sbb
sub
repz
nop
add
loopne
sub
push
or
push
fs
mov
cmpsb
fcomip
push
mov
pop
mov
stos
fsubrp
in
mov
sar
adc
push
jnp
int
dec
repz
mov
repnz
pop
push
daa
cmp
out
mov
push
push
in
mov
loop
jecxz
ret
lahf
aad
lods
fucom
sub
push
xor
lret
jmp
insb
out
sbb
inc
insb
fwait
lock
insb
jns
pop
test
inc
cmp
mov
pop
sub
mov
jmp
lods
test
jbe
test
adc
les
mov
lahf
test
fldt
int3
sahf
lahf
data16
sbb
jl
push
movsb
pop
push
xorb
jl
sbb
push
sahf
into
inc
push
fwait
adc
lcall
jno
dec
mov
fsubrl
and
cwtl
dec
jb
push
and
out
push
arpl
sub
sbb
lea
imul
test
mov
cmp
addl
mov
add
sahf
jg
pop
rcrl
test
call
in
in
cmp
sarl
jns
loope
pop
in
pop
or
lods
in
ret
push
comiss
cmc
mov
inc
lds
mov
inc
dec
leave
outsl
and
pop
stos
adc
push
and
mov
fs
mov
mov
pop
into
test
mov
mov
and
jae
imul
test
int3
and
ficoml
in
daa
mov
call
imul
js
out
add
cmp
repz
fistps
imul
decb
popa
repz
mov
mov
pusha
or
aas
push
jg
jg
jo
pop
enter
add
jb
jl
dec
in
stos
icebp
add
js
jl
push
jle
movsl
mov
icebp
push
jns
and
sti
lods
es
jae
pop
and
dec
ss
or
mov
jnp
push
or
out
shll
inc
sbb
pushf
pop
jmp
xchg
mov
out
test
mov
pushf
xchg
std
shrb
inc
mov
cmpsl
jge
outsl
dec
outsb
push
adc
mov
push
popf
fistpll
in
mov
call
mov
pushf
xchg
int3
imul
movsb
das
ret
cmpl
cmp
pop
cmp
outsb
shlb
jge
xor
sub
stos
scas
push
fstps
out
adc
add
jns
out
xchg
fistpll
mov
xor
enter
inc
fimull
push
mov
and
popa
cmp
pop
into
xchg
jne
in
mov
cli
mov
xchg
dec
sbb
inc
add
mov
xrelease
outsl
imul
in
and
xchg
inc
mov
mov
dec
add
clc
push
aas
sub
mov
inc
push
mov
or
loop
add
mov
pop
loope
xchg
testl
cli
les
mov
xorl
mov
dec
loopne
test
jecxz
xchg
rorl
cmpsl
dec
pushl
das
leave
idivb
fmuls
mov
rclb
or
mov
stos
xchg
pop
push
lods
addr16
lods
bound
sub
add
inc
ret
mov
xchg
cltd
sbb
add
lods
or
dec
jmp
lret
ljmp
stc
dec
xor
mov
pop
and
pop
inc
lock
in
mov
mov
jbe
loope
rcll
pop
ja
out
dec
cwtl
cli
lds
jp
repnz
pop
int3
dec
aam
push
jnp
loope
mov
leave
mov
sbb
scas
and
imul
movsl
scas
lods
jp
ja
js
inc
mov
xor
sub
sbb
push
idivb
pusha
add
movsl
ja
lcall
pop
adc
sbb
pusha
out
js
sti
mov
loope
mov
fwait
rolb
aaa
jns
mov
shr
cmc
js
in
inc
imull
jmp
mov
sbb
xor
xchg
lods
je
adc
fadds
sbb
jns
repnz
decl
int3
data16
sub
add
xor
out
pop
fldl
fistl
mov
or
aas
out
std
jp
push
stc
mov
nop
je
jge
mov
stos
sbb
clc
mov
rclb
ljmp
mov
pusha
lahf
mov
jo
fs
fbld
icebp
add
in
jecxz
mov
inc
shrl
and
jg
dec
popl
ljmp
xor
cmpsl
push
and
lahf
in
repz
xchg
xor
into
push
cld
call
mov
pop
dec
stc
mov
enter
dec
in
cmp
jecxz
repnz
iret
mov
hlt
out
push
movsl
test
jp
cmp
inc
clc
js
pop
out
add
push
enter
cmp
jb
xor
pushf
loopne
test
xchg
test
mov
or
fsubs
or
ljmp
mov
xor
lods
mov
or
dec
add
pusha
cmp
lea
xchg
push
sub
ret
and
mov
xchg
sbb
popf
mov
out
mov
clc
enter
roll
jg
push
out
pop
adc
sbb
sbb
shl
fisubrs
mov
nop
cmpsl
loope
mov
mov
call
xor
inc
clc
out
dec
arpl
sbb
fstl
in
xorl
enter
cltd
jmp
pop
sub
jb
push
cmp
fs
rcl
ja
notl
stc
dec
lods
das
mov
lahf
cltd
es
testl
std
add
mov
fistl
aaa
mov
pushf
sar
cmp
jmp
jg
and
repz
mov
andb
ljmp
pusha
out
jmp
cmp
push
lods
adcl
ss
jno
dec
jge
popa
fbstp
jns
push
mov
cld
sbb
xorl
je
test
test
into
mov
pop
rcrb
jl
gs
push
sub
add
add
enter
subb
cmp
push
cmp
push
int
push
movsl
fsubrs
adc
lret
jecxz
int
fadd
inc
repnz
xchg
pop
mov
das
test
mov
dec
test
xor
adc
iret
into
movsb
mov
lock
clc
cmp
je
pop
insl
mov
in
sbb
loop
add
test
imul
rol
lret
mov
imul
test
mov
incb
rclb
mov
out
imul
xchg
xor
jecxz
dec
aad
and
loop
mov
stc
inc
nop
xor
outsl
int
or
test
and
lods
adc
jne
pop
es
rcrb
xor
sub
shlb
sbb
in
adcl
ljmp
call
adc
xchg
push
ljmp
adc
pushf
icebp
sbb
test
add
out
test
popf
les
aam
in
or
xchg
and
outsl
adc
jmp
imul
jmp
push
or
stc
cmc
scas
lcall
in
inc
xor
cld
repz
lret
inc
fs
idivb
mov
add
mov
xor
sub
xchg
jmp
repnz
aas
cltd
ljmp
cmc
in
lret
push
cli
mov
pop
sbb
out
iret
push
xchg
xchg
mov
ds
jmp
movsl
leave
ss
clc
aad
sbb
mov
lods
mov
andb
jne
clc
xlat
test
lahf
xor
or
and
int
in
js
dec
lret
push
stos
push
cltd
test
xor
sahf
jnp
not
icebp
mov
inc
cmp
outsl
jle
sub
fsubr
push
and
sahf
mov
pushf
push
xchg
outsb
fs
test
mov
testl
push
filds
mov
push
shr
popf
mov
lock
inc
insb
int
loop
inc
outsb
mov
sbb
ja
roll
push
enter
mov
sub
mov
pushf
repz
or
adc
insl
data16
mov
mov
cmp
imul
pushf
iret
xor
negl
xchg
popf
sahf
pushl
mov
pop
shlb
dec
xchg
test
push
insb
sbb
pop
shlb
popf
mov
push
jne
pop
adc
lret
aad
adc
lret
pop
hlt
jg
rcr
jns
cmpsl
xchg
scas
imul
dec
push
mov
loop
sub
mov
in
pop
add
dec
push
not
popf
push
pop
xor
add
lods
xchg
flds
shrl
push
mov
xchg
mov
mov
mov
mov
pop
popf
ret
sbbw
out
add
push
stos
shll
test
sahf
mov
cmpsl
mov
mov
push
sub
out
lods
dec
fldt
inc
lahf
ss
push
movsl
mov
mov
stos
ret
cwtl
ret
insb
movsb
pop
neg
cs
adc
mov
cmp
fistps
or
fs
je
inc
jae
data16
mov
mov
leave
jo
and
je
or
lahf
jmp
fcomps
inc
out
test
movsb
lea
sub
push
push
test
in
int
push
adc
test
jle
adc
rorl
and
push
mov
cwtl
inc
outsb
test
fisubrl
std
fldcw
testl
cmpsl
stos
sti
cmpsb
shll
push
gs
test
in
test
cmpsb
jg
mov
mov
sub
mov
in
scas
mov
stc
push
mov
out
mov
nop
and
out
lock
push
imul
andb
popa
push
xchg
scas
mov
sbb
into
fwait
lcall
leave
add
fcomps
push
out
int
fsubrl
ret
rorb
push
or
lods
lds
ljmp
lock
cmpsl
mov
test
fdivr
mov
cmpsb
mov
clc
testl
sub
xchg
sub
and
ror
mov
rcrb
addb
adc
mov
mov
mov
mov
test
mov
rorb
push
out
int
outsl
jl
data16
mov
pop
lods
dec
mov
mov
jp
ret
movsl
shrb
and
aam
insl
lea
iret
es
cli
mov
inc
into
xor
mov
push
gs
scas
mov
mov
jae
incl
sub
xchg
fsubl
push
test
or
cmpsl
sbb
mov
pop
int3
dec
mov
shr
mov
xchg
dec
mov
adcl
dec
leave
popf
imul
push
mov
lods
fldenv
pop
add
insl
out
outsb
pop
lret
mov
bound
fsubrs
mov
xor
ret
stc
stos
shrb
jg
or
mov
lret
jmp
xchg
jecxz
jbe
scas
add
or
scas
les
in
lcall
outsl
lret
pop
mov
mov
bnd
cld
pop
dec
out
mov
jmp
sahf
cmp
xchg
pop
lods
fstps
mov
nop
inc
mov
jns
push
xchg
int3
or
mov
out
fbld
repnz
xchg
es
movsb
dec
adc
stos
sbb
lods
jp
sahf
int
pop
cltd
dec
pop
int3
inc
scas
arpl
push
nop
iret
jbe
daa
fsubr
into
fcmovu
mov
xchg
out
fidivrs
aam
daa
and
mov
in
and
xchg
mov
push
test
movsl
or
cmpsb
imul
mov
data16
xchg
orl
int
jno
add
add
push
jbe
ljmp
push
mov
movsl
test
pusha
int
test
push
inc
jle
mov
mov
scas
es
sub
mov
rcrb
dec
mov
imul
mov
push
mov
dec
ja
xor
jmp
pushf
push
aad
add
cmp
mov
rolb
in
jbe
jecxz
scas
mov
jecxz
mov
mov
cmpsl
jle
in
jo
sbb
pop
movsb
sbb
ret
lock
lret
cmp
pop
or
lret
mov
shrb
stos
loop
aam
fsubrl
cs
movsl
sbb
ljmp
fists
sahf
fwait
xorb
jecxz
movsb
loop
mov
mov
xor
mov
push
test
jle
out
lods
stos
addr16
test
mov
in
dec
mov
push
shr
or
cwtl
pop
jg
pushf
mov
aaa
jle
jb
mov
xchg
inc
mov
roll
cmpsb
imul
xorl
movsl
mov
sbb
movsl
mov
dec
push
in
testl
outsb
cmpsl
or
stos
orb
xchg
push
jl
jg
fildl
scas
inc
cmpsl
xlat
mov
repnz
mov
lret
mov
out
ljmp
divb
repnz
movsb
call
push
pop
test
lds
arpl
mov
data16
sub
mov
test
ja
pop
push
push
pop
inc
xchg
lods
mov
or
mov
pop
int
mulb
mov
scas
in
mov
cmpsl
data16
movaps
in
cmp
cmp
mov
mov
int3
xchg
popa
lods
scas
adc
scas
test
and
push
mov
lret
inc
fcomip
nop
or
int
pop
push
mov
repnz
inc
sahf
pop
movsb
les
inc
jno
pop
addr16
in
lds
mov
int
cld
lods
jae
fmuls
pop
dec
mov
test
dec
and
outsb
imul
mov
mov
mov
mov
push
inc
mov
pop
mov
mov
mov
ljmp
xchg
mov
nop
jmp
inc
stos
in
mov
inc
shrb
inc
or
xchg
xchg
mov
fadds
mov
xchg
movsl
fcmovnu
mov
xchg
cld
xchg
or
jmp
push
test
xchg
fcoml
and
test
xor
fwait
mov
inc
push
inc
mov
and
scas
dec
jp
test
std
mov
das
and
nop
bound
dec
aad
subb
push
or
loop
loope
sbb
sbb
jp
xchg
in
push
jecxz
sub
inc
sub
test
pop
fcomp
cmp
pop
mov
in
stc
loop
iret
fnsave
inc
xor
stos
out
fsubrl
pop
out
push
mov
out
mov
mov
loopne
or
iret
lcall
and
movsl
mov
adcb
inc
imul
test
mov
aas
fsqrt
dec
cmpsl
or
jns
loop
jae
int3
mov
jno
push
mov
frstor
mov
mov
push
xor
js
sub
in
cmpsb
jns
mov
js
add
imul
leave
je
enter
lret
or
icebp
cmp
sbb
add
cmp
mov
push
fnstsw
jmp
fildl
jnp
dec
ret
mov
adcb
movsb
mov
andb
nop
int3
inc
dec
add
arpl
and
adc
add
add
andb
mov
xlat
ret
arpl
pop
add
in
lods
sarb
sub
mov
shrl
dec
mov
mov
pop
nop
in
scas
jne
add
cmp
push
das
lods
jae
xchg
cmpsb
inc
out
mov
setno
mov
add
inc
out
aad
in
xchg
pop
lods
ret
push
pop
jg
cwtl
movl
aam
fistpl
mov
mov
push
inc
test
loope
inc
fildll
or
jmp
add
push
lret
mov
pusha
pop
mov
jbe
lods
stc
je
fimull
inc
fildll
dec
mov
out
jbe
push
sbb
loop
es
out
mov
push
push
cmpsl
mov
mov
cmpsl
mov
iret
fcom
xchg
ffreep
stos
faddp
ficoms
mov
scas
jl
jl
ss
push
fiadds
in
enter
mov
adc
xchg
sahf
add
aam
dec
mov
xorl
ficomps
iret
push
loop
stos
push
mov
xchg
inc
dec
mov
mov
sub
iret
xchg
or
or
enter
jle
rep
sbb
mov
mov
mov
lock
inc
rclb
lcall
fisttpl
push
ffreep
out
push
pushf
leave
push
mov
jmp
push
cmp
dec
leave
push
lock
mov
nop
insb
adc
mov
mov
adc
jae
stc
jb
xor
fldcw
mov
mov
inc
xchg
mov
jl
mov
and
cwtl
lahf
imul
pop
dec
cli
xchg
sub
arpl
in
adcl
add
adc
xor
test
int3
js
in
divb
mov
or
inc
popf
lret
jmp
jb
xchg
pop
adc
sbb
mulb
pop
mov
jbe
or
inc
xchg
or
aad
in
jecxz
push
dec
pop
xchg
xchg
adc
push
out
rclb
mov
pop
push
mov
movsl
xor
js
data16
or
fcmovnu
push
jl
ficoms
mov
mov
in
add
mov
lea
incb
in
mov
add
enter
loope
lods
sub
inc
adc
or
dec
test
lea
xchg
sbb
scas
mov
test
out
out
loop
xor
jmp
cwtl
xchg
jbe
cmp
insb
push
loopne
addl
mov
scas
lret
scas
les
jnp
jmp
mov
mov
outsl
xchg
in
negl
cmpsl
push
scas
les
cmpsb
lret
stos
addr16
xor
js
push
dec
shrl
pop
pushf
scas
das
and
push
mov
xchg
fadd
mov
sbb
out
fmull
outsl
les
jle
dec
sbb
das
inc
mov
mov
test
adc
aaa
add
sbb
dec
mov
xchg
adc
pop
xchg
and
xchg
stc
gs
xlat
mov
in
dec
jecxz
push
std
ficompl
shll
out
cwtl
loop
pop
mov
push
xor
mov
rclb
sub
sub
rcrl
cli
pop
mov
xchg
jae
mov
jl
and
aam
mov
subl
inc
lahf
inc
sbb
and
push
mov
mov
xor
rorb
xrelease
div
getsec
mov
push
mov
pop
clc
fadds
clc
cmp
leave
jecxz
push
xor
fistl
dec
jl
rclb
mov
mov
inc
mov
das
push
cmp
mov
jbe
sbb
add
dec
xchg
jecxz
movhps
repz
add
mov
pop
mov
fildl
sbb
in
repnz
xchg
aam
xor
mov
push
push
push
mull
cmpsl
popf
rolb
jecxz
adc
mov
and
test
inc
rclb
mov
mov
or
mov
sbb
mov
mov
arpl
mov
outsb
xor
mov
pop
movsb
rcr
loop
adc
fsubrl
mov
cmp
adcb
bound
adc
push
test
std
mov
stos
mov
push
mov
movsl
into
insb
mov
in
inc
jno
and
xor
inc
add
jmp
movsb
out
push
stos
push
mov
mov
xchg
jl
imul
push
mov
and
adc
rcll
rcrb
jns
movsb
test
mov
test
adc
scas
rcrl
lret
xlat
insb
jo
sti
xchg
bound
dec
lds
mov
push
mov
dec
stos
pop
mov
ljmp
push
mov
mov
xchg
add
sub
fcmovnb
cmpsl
add
clc
mov
leave
inc
in
gs
repnz
aaa
mov
leave
fnstcw
cld
fildl
push
in
adc
cwtl
leave
mov
inc
outsl
arpl
adcb
adc
xor
cmp
icebp
mov
push
mov
jmp
inc
sbb
dec
mov
sub
dec
and
nop
add
xchg
mov
mov
xchg
pop
xor
in
mov
xorb
int3
mov
cmpsl
std
ja
xchg
faddl
loope
mov
jb
enter
flds
call
rol
mov
nop
cmpb
push
mov
shrl
loope
xchg
lahf
jp
fistpl
loop
mov
cmp
push
repz
mov
pop
filds
aas
rol
fsts
jno
movsb
or
fisubrl
fnstenv
cmpsb
pop
fmulp
in
test
xchg
nop
orb
dec
loop
fldcw
in
xchg
xchg
or
cmp
cld
into
inc
in
adc
fdivrs
mov
outsl
adc
movsl
jmp
xchg
jmp
jbe,pn
mov
lds
xor
cmp
and
ja
fsubs
jge
in
scas
mov
mov
add
jb
repz
sbb
out
mov
and
cli
int
jecxz
mov
lret
jne
inc
out
movsl
mov
vmovhpd
mov
enter
lret
rcrb
test
aad
sahf
stos
int
and
shl
and
cli
aam
push
adc
push
mov
insb
ffree
subl
addr16
ljmp
pusha
fiadds
rcll
dec
dec
fsubr
outsb
sbb
inc
pushf
cmp
clc
hlt
pop
test
test
dec
repz
cmpsl
mov
cmp
mov
subl
pop
and
popl
sub
add
dec
mov
pop
dec
push
sahf
cld
in
shrb
not
ja
in
rorb
lods
mov
nop
cmpb
jno
mov
mov
jnp
xchg
mov
sarl
fldt
fldl
mov
xlat
push
mov
into
mov
cmp
test
aas
cli
and
mov
mov
push
mov
dec
dec
mov
mov
pushf
inc
fdivs
stos
inc
pop
push
call
std
mov
mov
andl
in
sub
fsubrs
inc
jecxz
lahf
xchg
inc
pushf
mov
repz
lahf
shll
test
fld
sbb
enter
lret
pop
push
push
iret
pop
lret
sbb
test
dec
sbb
repnz
dec
cmpsl
aam
inc
ret
sub
xor
sub
ret
into
push
jmp
shlb
roll
lahf
test
xchg
popf
int
outsl
jb
loopne
xor
lods
mov
orb
jmp
xor
xor
mov
inc
inc
mov
push
dec
imul
ret
mov
sti
or
cmovp
mov
dec
mov
add
jl
imul
xchg
mov
repz
imul
stos
mov
xor
dec
mov
outsl
nop
push
add
xlat
push
lcall
inc
clc
dec
imul
mov
cmpsl
mov
jmp
mov
xchg
mov
test
repnz
mov
orb
dec
fsub
out
les
push
sbb
inc
repz
pop
stos
subb
sub
sub
fsubr
xchg
fimuls
cli
xchg
bound
sbb
lea
dec
cmpsb
std
fidivrl
js
inc
pop
add
inc
adc
lahf
ret
mov
gs
inc
lods
adc
test
mov
mov
sahf
rolb
addb
loop
testb
mov
lods
cli
add
cmpsl
clc
mov
xchg
jne
fisttps
test
jp
aas
and
sbb
mov
and
inc
push
push
xchg
mov
mov
dec
mov
ret
xchg
jmp
subb
pop
je
lahf
movl
or
lcall
imul
xchg
jmp
mov
movsb
xor
cwtl
add
cld
addb
out
mov
sbb
movsb
push
or
pop
xchg
adc
scas
int3
jmp
aad
fdiv
clc
add
pusha
xorb
push
jecxz
mov
xchg
pop
push
adc
push
je
adc
mov
test
es
xor
or
or
pop
ljmp
sahf
mov
test
xchg
cld
rclb
push
test
push
xchg
pop
inc
dec
rol
nop
pushl
jo
cmp
jo
mov
cmpsb
in
call
enter
pushf
rorb
push
sub
insb
in
std
xchg
jg
lcall
dec
in
sti
psubusw
aad
xchg
push
mov
adc
pushf
pop
mov
jmp
add
or
mov
aas
test
shl
mov
das
insl
mov
push
inc
mov
daa
in
jbe
call
push
outsl
pop
lods
cmp
pop
cltd
int3
adc
mov
fld
jle
shlb
jmp
sbb
int
adc
stc
inc
ret
mov
bound
sarb
mov
ss
in
mov
push
cmpsb
dec
add
push
pop
stos
dec
cmp
sub
int
pusha
lret
inc
jb
je
mov
jge
adc
pop
cwtl
cmp
xchg
lret
das
xchg
mov
or
aaa
mov
lahf
ja
fptan
hlt
xor
addr16
add
ror
xor
xchg
mov
pop
cld
mov
in
jmp
mov
mov
rcr
lods
aaa
test
cmp
scas
movsb
icebp
sbb
xor
movsl
xchg
jno
mov
outsb
cmp
test
push
add
repz
xchg
sbb
add
outsb
lods
imulb
fldt
jmp
pop
pop
sbb
mov
jne
push
fcos
cwtl
cmp
mov
jno
mov
pusha
mov
loop
js
mov
inc
fs
nop
lret
lret
lret
jle
xor
adc
repz
add
scas
ret
push
test
inc
out
jae
fisubrl
lret
cmpsb
mov
and
mov
sti
iret
out
adc
out
push
jmp
sahf
inc
jne
dec
mov
or
mov
push
mov
mov
lods
lock
sub
cmpsb
sub
inc
pop
push
jbe
and
scas
sbb
nop
or
pusha
mov
xchg
scas
cwtl
pushf
movsl
dec
inc
mov
es
sub
in
lahf
rep
addr16
pop
mov
push
xchg
mov
cld
shr
in
mov
cmc
cmp
mov
push
push
jnp
add
js
std
fsubrs
sub
cmp
cmp
jge
push
mov
rcrl
cltd
das
sbb
inc
cld
push
testl
idiv
inc
mov
outsl
je
dec
mov
jge
mov
fs
jl
sub
fstl
mov
adc
pusha
in
dec
negb
fst
out
mov
out
mov
mov
inc
aam
insb
icebp
mov
movsb
lcall
lods
adc
fcoml
test
movsl
ljmp
push
jmp
out
lret
test
adc
into
mov
shll
inc
mov
mov
xor
ror
mov
push
arpl
mov
movl
je
shr
adc
cmc
lea
vprotd
cmp
icebp
dec
push
cmp
fists
fists
mov
mov
cwtl
data16
mov
cmp
jbe
jmp
mov
push
hlt
int3
scas
and
mov
mov
stos
add
xchg
jecxz
es
popl
jp
test
addr16
faddl
dec
ret
mov
mov
sbb
hlt
popa
push
ja
mov
add
addr16
mov
sub
lahf
xchg
jb
jmp
jge
dec
test
mov
aad
jne
pop
add
jmp
stc
mov
shlb
js
mov
sub
add
pop
addr16
movsb
xchg
push
daa
mov
stos
or
pop
add
jle
int3
fs
inc
aaa
cld
stc
mov
scas
scas
clc
xchg
sti
cmp
adc
outsb
mov
cmp
xchg
movsb
mov
out
jne
mov
gs
add
mov
mov
adc
pop
push
add
add
das
inc
in
stos
loop
rclb
daa
divb
push
xchg
mov
xchg
repz
adcl
rol
adc
push
sbb
pop
push
jns
jo
push
mov
ljmp
sub
mov
pusha
ret
in
pop
cmp
dec
imul
xchg
cltd
into
cltd
mov
add
mov
andl
xchg
jg
jb
out
into
stos
idivb
fldt
call
insl
mov
hlt
dec
jns
stc
ret
cld
outsb
js
inc
repz
clc
mov
in
icebp
lret
xchg
rcr
xor
pop
in
leave
inc
js
sbb
xchg
aam
pop
clc
imul
pop
jecxz
sub
div
xor
cs
imul
pop
addr16
stos
sbb
mulb
push
outsb
js
xchg
divl
push
push
movsb
pop
repnz
mov
push
jmp
imul
jnp
repnz
ror
pop
repnz
add
int3
int3
sbb
scas
add
fdivr
popa
negb
out
xor
push
hlt
push
leave
lcall
in
or
cmpsl
inc
cmpsb
push
testb
outsb
xchg
stos
mov
mov
mov
movsb
push
mov
cltd
fsubs
mov
add
ljmp
int
ret
adc
in
push
fists
or
mov
lcall
push
and
stos
shlb
jecxz
lds
mov
out
pusha
repnz
iret
mov
out
mov
mulps
lea
clc
scas
jno
dec
stos
scas
stos
repz
inc
jecxz
mov
sub
shl
push
dec
dec
shlb
jecxz
mov
mov
in
imul
xor
mov
or
push
popf
xchg
bound
in
push
in
add
or
xchg
aam
mov
icebp
sub
in
cmpsb
js
mov
popa
jp
add
mov
lret
outsl
sahf
xchg
int
push
jb
sub
mov
shl
xchg
ds
push
xchg
and
jl
cmc
sti
add
jg
push
mov
mov
xchg
mov
lahf
sti
push
cmp
sti
stos
pop
fsubr
adc
stc
push
enter
imul
add
pop
xor
clc
orb
popl
jnp
and
jns
push
pop
repnz
int3
hlt
loope
inc
icebp
mov
push
out
loopne
fwait
cwtl
icebp
adcl
cmp
aaa
mov
outsb
dec
inc
loop
inc
jo
insl
outsb
sub
aad
lret
pop
jge
mov
xchg
mov
xchg
push
mov
ljmp
out
push
mov
nop
ret
pop
lods
fsubs
dec
lret
stos
inc
fsubl
rorb
jecxz
std
cmp
cwtl
cmp
imul
sbb
push
jecxz
dec
dec
push
or
arpl
mov
xor
push
insb
inc
xor
andb
movsl
cmp
jge
jae
dec
jmp
jl
ror
mov
cmp
and
scas
clc
jnp
push
daa
pop
subl
xor
je
fiaddl
ljmp
pop
scas
mov
add
fsubs
rclb
lret
xlat
stos
push
push
jmp
sbb
and
decb
lret
xchg
lahf
sti
inc
jmp
dec
sbb
jmp
and
insl
cmp
dec
xor
lods
scas
sbb
mov
adc
aam
iret
jnp
insl
cmp
scas
jb
dec
rclb
int3
xchg
sbb
lock
jmp
cmp
loop
out
inc
lods
inc
dec
outsl
test
push
jl
iret
xchg
xorb
fnstcw
sub
loop
data16
bound
mov
add
ljmp
daa
dec
movsl
notl
test
dec
mov
fcoml
pop
jecxz
cli
and
insb
adcb
repz
scas
ret
or
adc
adc
call
movsl
adc
pop
jae
in
out
sub
gs
sub
cld
push
jl
addr16
sbb
push
sub
sbb
mov
add
mov
stc
jb
aad
aad
int3
or
pop
incl
mov
add
test
ljmp
xor
inc
inc
clc
push
dec
ja
mov
cmp
repz
in
and
scas
inc
cli
and
aaa
mov
iret
loop
push
jb
cwtl
cld
xor
leave
cltd
aad
xchg
aad
jo
add
inc
cmp
jbe
mov
mov
adc
mov
test
inc
mov
repz
in
addl
stos
xchg
mov
out
jns
dec
stos
pusha
push
and
mov
xchg
das
jge
es
clc
pop
js
dec
test
out
inc
pop
xchg
outsb
sahf
xor
mov
lret
mov
imul
rcrb
mov
push
call
xchg
mov
mov
inc
popa
cmpsb
and
push
cwtl
lds
mov
in
adc
sbb
loopne
pop
inc
pop
fisubrs
mov
fdivl
scas
inc
rclb
mov
sahf
mov
fwait
orl
test
out
call
pop
es
jecxz
into
pop
xor
mov
je
mov
mov
dec
mov
mov
cmp
negb
dec
sarb
ja
aam
bound
scas
pushf
fiaddl
push
out
mov
xor
outsb
fldcw
in
pop
xor
mov
std
jecxz
adc
xchg
xor
xor
xchg
push
ret
mov
loop
xchg
or
jns
jp
sub
je
lcall
stc
ja
inc
pop
adc
stos
mov
popa
movsb
ljmp
orb
addr16
cld
fisttpll
xor
or
pop
mov
xor
in
or
movsb
jecxz
inc
lods
jns
sahf
push
xchg
aam
mov
in
mov
sub
cs
mov
cmp
inc
pop
test
adc
push
aaa
and
fcomi
sbb
scas
test
xchg
pop
mov
das
pushf
sti
cwtl
in
pop
fstpl
pop
xchg
test
dec
addr16
jne
mov
jo
xchg
pusha
jbe
in
in
in
lret
mov
outsb
or
mov
and
fimull
push
mov
mov
xchg
call
cmpb
repz
fisubrs
adc
fistpl
movb
idivl
hlt
xchg
pop
jo
mov
cs
in
imul
cmpsl
in
in
xchg
mov
loop
cmc
mov
pop
mov
mov
lret
aaa
aaa
int
mov
or
push
ljmp
paddusb
pop
orl
test
mov
mulb
mov
dec
aam
cmpsb
inc
sbb
jp
js
and
out
push
jecxz
cwtl
cmp
call
push
mov
js
pop
xchg
or
mov
packssdw
sarl
sbbb
lock
jle
mov
frstor
xchg
ret
addr16
jmp
nop
inc
stos
mov
pop
or
dec
jg
cmp
scas
fcmove
imul
arpl
xchg
mov
mov
in
or
das
fcoml
xor
jle
scas
push
sub
repz
out
scas
cmpsl
cmp
cmp
idivb
sbb
dec
fstps
pushf
mov
pop
aad
dec
pop
xor
inc
pop
xchg
int
iret
fwait
push
ret
fisttps
jb
lock
sub
xchg
fsubrs
scas
inc
jmp
lcall
shr
iret
inc
sbb
ret
aam
jp
sub
adc
xor
fs
push
mov
xchg
into
stos
dec
ja
in
cli
cmp
out
out
sbb
pop
mov
push
sti
pushf
js
mov
sub
dec
sarl
or
nop
jne
add
dec
out
mov
cmpb
mov
je
xchg
xor
mov
cmpl
ret
scas
or
xor
or
mov
mov
mov
and
dec
pop
pmulhw
add
out
push
mov
xchg
mov
sbb
test
inc
sbb
mulb
mov
xchg
jae
cwtl
repnz
pop
js
stos
fwait
pop
mov
push
lahf
mov
outsb
jp
push
cmp
data16
test
mov
pop
mov
cwtl
xchg
cmp
popf
dec
and
push
out
fs
mov
loop
pop
sub
arpl
and
stc
push
int3
mov
xor
and
adc
ljmp
push
into
mov
sub
push
jbe
lahf
sti
inc
mov
or
sbb
pushf
nop
fcompl
repz
jbe
mov
ficoml
cmpsb
push
in
mov
push
and
push
jl
sbb
fcomp
stos
cmpsl
xor
imul
sti
push
adc
mov
push
sbb
add
add
pop
pop
push
jge
cmc
jo
xchg
sub
insl
ret
mov
mov
notb
je
lcall
xor
gs
jg
mov
lea
inc
test
or
cld
fdiv
xchg
jae
push
dec
cmc
movb
or
jne
or
jle
scas
cmp
or
ret
dec
ja
push
push
xor
jnp
enter
inc
les
bound
les
lcall
fsubs
mov
lret
push
mov
cmp
outsl
inc
ficoml
mov
cmc
divl
dec
nop
out
stc
dec
int
aam
int3
push
cmp
hlt
ret
gs
adc
sub
call
fmuls
push
push
cwtl
mov
mov
adc
cltd
addl
add
sbb
loop
jo
mov
dec
cmc
negl
ss
xchg
jns
and
add
aas
outsl
push
sbb
repz
mov
mov
jl
pop
in
data16
lods
xchg
jl
into
jp
push
pop
add
roll
scas
test
and
xchg
jo
inc
push
rcr
outsl
push
cmpsb
lahf
sub
lret
pop
pop
fimuls
adc
mov
jge
out
sub
mov
mov
mov
pcmpeqd
mov
push
int
insl
mov
lahf
cmp
cmp
stos
fdivr
movsl
xlat
ss
inc
cmpsb
lods
lret
test
popa
mov
jp
repnz
das
xor
inc
add
jbe
pop
ret
cmp
inc
push
cmp
dec
int3
cmpsb
pop
or
xor
test
lcall
cmpsb
mov
sub
pop
cmpl
ja
repz
pop
cmpl
pop
cwtl
cmp
mov
inc
add
xlat
lahf
pop
lret
iret
push
jle
scas
adc
dec
in
fisttps
dec
bound
cld
stos
fmull
add
fldenv
mov
gs
pushf
add
std
sub
jecxz
dec
adc
ja
test
ljmp
fiaddl
insb
out
aaa
imul
jp
sub
pop
and
outsb
sbb
cmp
je
stos
mov
shll
pop
sbb
mov
mov
out
xchg
push
std
scas
out
stos
es
mov
or
pop
xchg
jg
mov
pop
or
inc
push
lds
xor
lock
jbe
jmp
cmp
push
push
dec
fdivrs
out
in
push
fisubrl
cmpsb
leave
push
adc
add
add
mov
and
or
pop
push
dec
jmp
mov
bound
outsl
scas
repnz
sub
lods
stos
xchg
iret
sbb
ficompl
out
pushl
sub
test
loopne
jecxz
bound
mov
iret
adc
insl
mov
push
sub
dec
and
mov
repz
jbe
and
popa
icebp
and
lods
adc
mov
pop
addr16
clc
xor
dec
mov
jg
dec
dec
mov
lds
mulb
cmp
cwtl
in
push
in
add
jo
in
pop
pop
sbb
adc
xchg
xchg
dec
out
fs
dec
gs
adc
imul
or
pop
pop
cmp
repz
out
cltd
sbb
sarb
and
or
dec
mov
into
push
add
pushl
pop
pop
outsb
or
test
nop
gs
mov
adc
pop
or
cltd
in
mov
sub
es
out
or
fcomip
cmp
xchg
in
nop
sub
scas
or
push
mov
in
es
push
in
pop
mov
sub
js
cmp
movsl
jb
add
stos
in
mov
je
jmp
sub
aas
leave
fs
repnz
incl
and
pop
pop
fstl
add
lods
arpl
inc
add
or
roll
lock
inc
sub
push
pop
test
mov
loopne
aad
stos
cli
lods
sbb
lods
xchg
call
sub
adcb
adc
lcall
xchg
xchg
sbb
popf
dec
jecxz
stc
stos
cmpsb
int3
incl
pop
ja
shlb
das
xchg
lretw
xchg
cld
mov
mov
in
repz
push
mov
leave
push
mov
loopne
mov
xor
xor
mov
dec
nop
mov
fsubrs
mov
out
adc
push
ja
dec
sub
adc
mov
adc
mov
inc
jbe
pop
add
pop
adc
add
and
subb
xchg
and
sbb
test
xor
push
repz
sub
imul
ss
cmp
cmp
xchg
jg
cmp
cmp
les
test
sbb
jb
cli
adc
fbstp
push
sbb
popf
pushw
pop
xchg
add
dec
cmp
add
jecxz
pop
jb
popf
rorl
int3
test
lahf
sbb
in
adc
add
mov
hlt
int
lods
out
or
jno
lea
xor
inc
pop
in
add
dec
adc
insl
inc
in
es
cli
movsb
jg
xchg
mov
enter
mov
fldl
add
push
fisttpll
ja
jo
fldl2e
mov
inc
inc
dec
mov
add
sub
das
push
shl
loopne
add
aas
push
mov
out
cmp
or
filds
add
loopne
daa
add
lcall
and
sti
lea
popa
dec
fldt
fadds
mov
je
sbb
jl
xchg
mov
jmp
sti
fadds
mov
stc
mov
sarl
xchg
jl
leave
or
repz
sub
adc
in
xchg
jle
add
icebp
addr16
sbb
sbb
scas
daa
mov
dec
mov
add
fstpt
mov
jmp
add
xor
loop
adc
inc
inc
xchg
pushf
sbb
and
in
sbb
jmp
sbb
mov
xor
or
jnp
lcall
stc
outsb
hlt
loopne
xor
lds
in
mov
push
shl
pop
cltd
cmpsb
push
fs
test
pusha
pop
xchg
bound
adcl
or
loope
jbe
test
fsubrl
or
sub
sub
sub
and
loop
cmp
jnp
mov
pop
bound
mov
lret
mov
lods
lret
push
insb
in
xchg
mov
dec
mull
inc
jg
cmp
into
lods
std
popf
std
adc
inc
out
mov
inc
lock
lcall
xor
xchg
push
lcall
dec
adc
push
test
nop
dec
bound
adc
push
cmp
jns
mov
pop
shl
add
jns
mov
test
fs
cmp
add
cmp
push
and
push
cmp
imul
or
dec
ficompl
sub
outsb
xchg
dec
insb
arpl
push
xchg
jne
mov
ja
idiv
inc
pop
dec
rclb
mov
repz
sub
dec
fcompl
dec
pop
dec
sbb
push
jno
lcall
outsb
outsb
mov
dec
sti
add
out
pop
mov
mov
push
xchg
add
pushf
dec
sub
movsb
xlat
pop
mov
push
xchg
push
jl
hlt
xor
shrb
jle
mov
xor
mov
xchg
push
mov
xor
cli
loop
inc
push
pop
jge
ficomps
andb
test
lahf
repz
xchg
xchg
iret
or
outsl
aas
xchg
mov
adc
pop
xor
adc
les
cld
or
repz
push
cmc
xchg
cmpsb
outsb
rclb
orl
cmp
xor
je
scas
mov
test
inc
aad
fidivs
xchg
lock
lods
loopne
mov
call
pop
lcall
sub
aam
cmp
cli
mov
cltd
mov
xor
lret
add
rcr
cmp
push
adc
shll
loop
add
or
push
inc
xchg
aaa
or
gs
divb
xchg
jnp
sub
mov
out
dec
add
jmp
fbld
sub
js
imul
push
cmp
or
arpl
or
ret
fnstsw
cmpsl
xlat
jmp
clc
incb
mov
test
int
mov
or
pop
clc
jmp
test
mov
push
rclb
cmp
jo
rcll
xchg
shr
sub
dec
lock
aam
arpl
lcall
rcrl
add
mov
mov
stos
cmpsb
je
rorb
mov
clc
in
cmp
test
test
mov
add
mov
push
xor
enter
data16
ja
mov
sub
loope
sub
sub
push
dec
or
push
insb
jecxz
cmpsb
cld
mov
fwait
dec
out
mov
mov
outsl
jg
movsb
pop
data16
pusha
test
test
cli
movsl
xchg
scas
sub
das
xor
sbb
lret
sbb
pcmpgtw
div
sarl
xlat
pusha
repz
push
int3
xor
scas
repz
pop
mov
sbb
out
ds
sbb
push
mov
sbb
fadd
jmp
hlt
cld
mov
pop
lock
dec
mov
loop
loopne
xchg
mov
fwait
int3
adc
and
cld
and
insl
mov
cltd
lret
sbb
sub
mov
mov
jg
pop
out
mov
movsb
sti
adc
inc
add
adc
std
jno
cld
ret
pushf
add
scas
jne
xchg
mov
imul
lret
nop
leave
neg
jne
call
jmp
cli
fwait
stos
push
push
mov
ljmp
jl
mov
leave
outsl
popf
das
lock
dec
add
jb
insb
pop
dec
mov
je
sub
jne
add
pop
push
mov
dec
adc
xchg
and
dec
fldcw
loop
js
add
stos
mov
pop
test
shl
push
mov
les
cmpsb
shll
test
fildl
mov
fidivs
test
insb
inc
in
into
outsl
mov
ret
popf
addr16
sahf
sti
bound
add
push
xchg
mov
addl
movsl
mov
sbb
or
fdivrl
inc
cmpsl
mov
xor
cmpsb
mov
push
cmp
mov
punpckhwd
insb
and
je
sahf
xor
jne
mov
stos
mov
iret
mov
pop
leave
sbb
mov
in
push
test
loop
sti
add
mov
testb
inc
push
jo
imul
fdivs
mov
rolb
ljmp
movsb
xchg
cld
mov
in
xor
shld
fucomi
adc
ss
mov
leave
sub
cmpl
insb
lfs
mov
mov
mov
ficomps
mov
jl
sbb
fisubl
in
xchg
aaa
dec
int3
push
push
lock
out
leave
fstps
out
icebp
xlat
insb
out
icebp
xlat
outsl
imul
in
int3
jb
jle
leave
ret
mov
sbb
ror
fcmovu
bound
imul
repz
pop
leave
jne
cs
xchg
bound
lret
pushf
sbb
shlb
mov
fwait
pop
clc
push
ljmp
push
inc
pushf
lds
jge
mov
push
popf
mov
nop
pop
push
scas
jbe
or
sub
cltd
and
or
std
push
inc
lods
jns
mov
sahf
push
xchg
into
pop
push
pop
pop
dec
push
cltd
mov
mull
and
filds
sbb
imul
ret
int3
imull
je
add
aad
popa
push
push
or
add
ret
xchg
dec
fcompl
pop
push
iret
pop
outsb
cmc
outsl
add
lods
inc
cli
lds
mov
or
loop
into
ret
jae
jl
negl
jo
add
popf
ds
dec
and
jae
js
bswap
repz
dec
add
mov
inc
cmp
test
mov
call
adc
cmp
xchg
mov
in
les
int3
sub
dec
push
sbb
pop
lcall
xorl
add
fsubs
popa
enter
adc
or
fcomps
mov
inc
push
mov
add
or
mov
lcall
inc
xchg
sub
mov
xchg
dec
mov
and
iret
sbb
sahf
push
call
sub
fbstp
ds
shll
xor
xchg
out
push
inc
int
negb
fsubp
pop
xchg
imul
add
lret
stos
sub
shl
rcr
pop
mov
sbb
sahf
inc
sbb
adcb
pop
lcall
and
addb
in
cmp
xor
and
aad
xchg
loope
cmpsb
cmpsl
sbb
xor
mov
xchg
sahf
fdivs
mov
lock
aam
inc
cld
add
adc
or
mov
mov
or
push
addr16
loope
insb
mov
sbb
scas
int
stos
dec
and
clc
adc
sbb
and
setb
lcall
popa
scas
and
cmc
imul
jge
insb
int3
shll
subb
lret
hlt
cmpsl
popa
mov
in
cmpsl
and
xchg
leave
push
ja
loop
icebp
adc
mov
jp
rcr
andl
mov
jmp
cli
or
pop
test
mov
sar
xorb
mov
xchg
popf
adc
add
mov
cmp
push
jns
arpl
mov
dec
scas
ret
rolb
outsl
popf
push
jle
outsl
int
xchg
addr16
testb
lahf
push
insb
repnz
loop
pop
nop
fcomip
pop
cli
pushf
sub
stos
pop
xchg
lahf
aam
bnd
xchg
jne
enter
lods
sbb
iret
fistpl
sbb
jmp
ret
pop
fcompl
mov
or
test
inc
xchg
cmpsl
pop
aas
mov
inc
mov
mov
test
ljmp
xchg
cmp
fidivl
pop
mov
outsl
inc
or
pop
and
stos
jb
jg
xchg
les
rcr
outsl
jns
mov
xchg
and
int3
mov
daa
orb
lcall
add
pop
push
insl
loopne
cli
testb
push
adcl
and
jecxz
fs
and
mov
stos
inc
push
or
jbe
hlt
sbb
cltd
das
add
adc
mov
les
push
xchg
mov
jecxz
loope
repz
pop
cmp
stos
mov
sbb
mov
mov
and
pop
into
in
int
mov
xchg
pop
lcall
aas
cmpsb
and
xchg
out
test
outsb
jno
sti
inc
dec
mov
cld
xchg
in
jmp
lahf
mov
inc
clc
mov
dec
dec
push
gs
mov
sti
dec
dec
sbb
ret
in
ds
mov
push
adc
out
lods
inc
push
ljmp
push
pop
mov
out
mov
and
testb
xchg
pop
pop
hlt
cld
sahf
icebp
mov
loopne
icebp
add
jle
sti
lcall
pop
mov
mov
jle
xor
movsb
push
out
loop
lea
adc
xchg
fwait
xchg
cmp
xor
int3
out
adc
fbstp
and
rorb
fcmovb
inc
leave
jb
mov
in
addb
aam
xchg
imul
and
jg
movsl
movsb
lret
ss
push
hlt
mov
mov
or
xchg
sarb
xchg
lcall
cli
mov
stos
mov
adc
fldcw
ss
inc
mov
and
rol
cmp
push
add
repnz
movsl
or
rorb
insb
push
add
mov
mov
dec
sbb
jno
repnz
dec
loop
push
enter
mov
adc
or
jecxz
popa
paddd
dec
mov
test
rep
fidivrl
fyl2x
mov
sarl
das
pop
sub
sarb
lret
cmp
push
lret
mov
mov
jne
cmp
fistpl
in
test
fs
add
es
cmc
xor
xchg
fwait
pop
out
out
int
pop
sahf
and
pop
out
sti
sbb
push
mov
push
and
sub
clc
mov
mov
lret
pushf
adc
mov
repnz
rclb
cmc
ret
fisttpll
inc
out
es
cmc
lahf
mov
inc
xor
stos
movsb
jo
dec
sbb
add
cmp
mov
or
push
mov
lods
sbb
dec
sbb
xlat
jo
jo
sbb
ds
loopne
and
mov
mov
push
add
jg
lock
enter
push
repnz
repz
lock
stc
cmp
xor
hlt
addr16
test
jns
mov
sub
or
pop
mov
stos
mov
mov
aas
pushf
mov
mov
dec
sub
xchg
cmpsl
sub
sahf
push
idivb
aaa
insb
fs
jmp
clc
arpl
xor
dec
dec
adc
vmovd
ficoms
stos
aam
push
xchg
inc
in
jecxz
jle
idivl
sbb
scas
out
imul
and
iret
clc
sub
das
mov
xor
jbe
fwait
sbb
jno
or
dec
mov
pop
dec
out
outsl
mov
cmp
js
out
xchg
xchg
adc
jo
fsin
popf
lcall
xchg
pop
or
jmp
xchg
cmp
sub
in
sub
stc
jne
sbb
xor
push
call
push
insb
pushf
pop
mov
mov
push
arpl
idivl
jmp
xor
jmp
and
test
lret
out
mov
mov
dec
ljmp
mov
test
push
adc
mov
icebp
sub
mov
je
imul
fidivrs
inc
push
push
jo
imul
iret
cmp
pop
cmpsb
insb
mov
pushf
leave
jne
std
icebp
out
cld
outsl
mov
mov
cmp
xchg
add
cwtl
int
jo
pop
sub
inc
jle
gs
aas
sbb
inc
mov
insb
lahf
loope
mov
push
dec
call
pop
push
jle
lods
cmp
adc
mov
fs
pop
enter
push
sub
cmp
push
jns
xchg
jge
xor
scas
aam
mov
adc
icebp
xchg
dec
xchg
movsb
testb
push
arpl
cmp
out
loope
mov
lods
inc
xchg
inc
mov
fwait
arpl
divb
jmp
mov
imul
mov
or
mov
xchg
cmc
inc
mov
xchg
add
les
out
pop
arpl
shrl
jae
outsb
mov
mov
lahf
mov
adc
les
out
test
aam
pop
movsl
xor
dec
pushf
xchg
shl
mov
outsb
adc
xchg
roll
pop
mov
push
mov
push
jno
add
popf
mov
cs
jl
sub
adc
and
loopne
mov
enter
stos
and
test
or
mov
sub
jmp
mov
mov
inc
cmp
xchg
xor
adc
sahf
pusha
jno
cld
and
jb
dec
sbbb
push
mov
push
ss
out
scas
mov
std
in
jbe
xchg
mov
mov
mov
data16
ljmp
mov
cmp
mov
mov
lods
mov
sbb
stos
adc
imul
cmp
js
ds
mov
push
xchg
dec
mov
jne
fucom
pop
lcall
aas
into
xorb
or
fwait
inc
push
jge
mov
cmp
dec
sub
cli
fiadds
xchg
mov
clc
mov
cmp
xor
lcall
pop
mov
decl
xchg
test
sbb
sbb
roll
outsl
out
or
xchg
insl
adc
sahf
and
pop
imul
mov
test
repz
outsl
shlb
inc
rcll
fdivrs
lcall
loopne
jne
mov
je
mov
xchg
scas
lret
sub
and
mov
mov
xchg
loopne
mov
and
cmp
out
mov
outsb
int
pop
or
lock
mov
pop
bound
mov
and
int3
icebp
push
inc
xchg
mov
push
fisubl
adc
aad
cmpsb
out
lea
xorl
mov
pushf
xchg
sub
es
pushf
add
lock
arpl
mov
ret
push
xchg
ljmp
mov
in
push
xor
cmpsl
cmpsb
mov
cs
ja
loope
mov
mov
sbb
lret
mov
push
inc
inc
lcall
fwait
xor
je
rcrb
mov
push
imul
mov
setg
in
dec
out
stos
dec
xchg
xor
mov
ds
or
mov
movsl
jg
pop
rcl
xor
mov
dec
mov
or
ss
cmpsl
bound
and
bound
inc
cmpl
loopne
or
push
vmovaps
mov
push
icebp
aaa
add
xchg
repnz
adc
push
shrl
dec
lea
mov
xchg
inc
mov
jne
jb
std
push
jbe
cld
inc
jbe
cmp
rcrb
push
jl,pt
rol
sbb
dec
lcall
enter
jns
xchg
shl
and
cmp
jae
jmp
jbe
lea
arpl
cld
cmp
mov
cmp
popa
lahf
lods
test
jo
bound
add
xchg
scas
mov
aad
add
adc
mov
and
mov
xchg
push
mov
dec
pusha
movsl
sub
icebp
mov
jp
dec
pop
mov
fimuls
jl
push
jp
adc
jg
aas
ja
out
aam
jbe
cmp
dec
or
cmp
rep
aam
mov
add
ret
inc
int3
ret
cmp
sar
inc
push
pop
fisubrl
rol
jge
xor
scas
mov
pop
scas
daa
jb
dec
or
mov
ret
jmp
xchg
adc
jo
stos
faddl
xchg
mov
enter
mov
loope
ret
mov
out
leave
repnz
int
insb
dec
cmp
inc
rcrl
adc
pop
pop
aas
pop
pushf
test
fsubrl
mov
xorb
adc
fsubrp
jae
xor
out
pushf
xchg
cmp
adc
test
mov
subb
cltd
push
jle
mov
mov
fdivp
insl
and
inc
setae
cmpb
pusha
jo
push
outsl
push
cmpsb
lahf
inc
pop
not
pop
out
pushf
push
xchg
repnz
daa
xchg
aad
xor
das
cmp
sbb
sbb
jmp
insl
sbb
fdivl
shr
aas
sbb
mov
cwtl
pop
jns
out
inc
in
aas
adc
sub
sti
sub
outsl
sub
std
fstps
jno
mov
xchg
int3
es
in
mov
fidivs
sub
and
lahf
clc
and
xor
push
sub
fisttpll
push
fists
mov
add
ds
xor
cmpsl
adcb
adc
ljmp
mov
movsl
xchg
std
repz
in
test
or
pushf
repz
ret
pop
lcall
cmp
std
sbb
sub
insl
lods
sti
fimuls
cli
hlt
mov
int3
mov
add
inc
mov
mov
leave
popa
int3
mov
ficompl
mov
mov
repz
mov
rcl
test
push
push
push
out
scas
movsl
mov
mov
fcmove
je
sub
in
arpl
test
cwtl
daa
adc
adc
sti
push
ja
jno
nop
jg
fs
push
dec
jle
loop
xchg
out
scas
in
cmpl
rolb
push
ljmp
js
enter
sti
adc
jnp
add
mov
mov
dec
fistps
mov
mov
in
sti
xor
mov
mov
adc
imul
cmp
loope
dec
add
clc
fsub
inc
mov
or
pop
pop
enter
xor
movb
cmpb
loopne
inc
mov
pop
jbe
insb
mov
and
pop
jmp
mov
lock
adc
add
cmp
or
jle
aam
push
sbb
mov
hlt
mov
or
xchg
rorl
je
xchg
idivl
cld
arpl
sub
lds
in
jg
out
out
xchg
call
mov
dec
ja
push
cld
inc
fldt
dec
repz
inc
sbb
inc
dec
adc
rcrb
cmp
stos
mov
cld
sbb
xchg
and
xchg
ja
clc
mov
jle
fwait
mov
sub
mov
adc
cld
xor
mov
test
fcomps
jge
jecxz
loop
jl
cmp
sti
xor
bound
pop
int3
cmpsl
jno
pop
or
sub
mov
cwtl
mov
imul
push
ja
inc
addr16
mov
add
scas
adc
popf
pop
sbb
inc
repz
out
icebp
out
fistl
lods
or
add
fwait
shll
sbb
rcrb
mov
add
movsl
xor
mov
dec
cmp
imulb
pop
imul
ds
mov
push
mov
pop
pop
test
and
test
and
sbb
push
or
pop
push
or
dec
inc
cltd
sub
mov
push
mov
loope
mov
and
addr16
incb
mov
sub
sarl
mov
sbb
adc
mov
and
fwait
lds
stos
fs
push
xor
or
movsl
in
outsb
add
pop
cltd
testl
xor
dec
rorl
pop
nop
jmp
outsb
gs
andl
pop
mov
aam
adc
ret
sub
jnp
mov
flds
cmpsb
iret
roll
pop
add
fcompl
stos
call
pop
mov
xchg
test
cmp
mov
jecxz
rorl
xchg
inc
loope
cmpl
movsl
jo
imul
mov
and
test
push
test
xchg
stos
inc
call
cltd
pop
scas
push
add
jecxz
test
and
xchg
xor
mov
je
push
sub
mov
aam
xchg
xor
ljmp
jp
mov
jg
scas
inc
int3
stc
xchg
cmp
test
jns
add
out
add
inc
iret
jo
pop
push
daa
outsl
cmp
xchg
bound
xchg
and
sub
repnz
add
mov
lds
lahf
jns
sbb
fcoml
outsb
push
push
add
dec
adc
push
or
add
outsl
scas
push
lods
int
aad
ret
sub
out
lahf
in
in
imul
daa
jp
and
xchg
mov
mov
dec
movsl
cmp
insl
loop
or
cmp
add
xchg
jno
pop
lods
xchg
clc
add
enter
pop
dec
ja
push
clc
lods
mov
adc
shrl
inc
daa
jb
add
outsb
mov
xlat
dec
pusha
push
jmp
mov
or
add
jae
test
sub
jns
arpl
xor
lea
inc
jle
hlt
push
jl
mov
cltd
into
fstl
mov
pusha
scas
cmp
pop
flds
les
cltd
mov
mov
out
jl
loop
enter
sti
add
sarb
stos
and
das
dec
push
frstor
jle
add
jg
sub
and
xchg
cmp
cmp
cmp
outsb
outsl
xchg
inc
outsl
adc
js
std
dec
and
mov
cmp
lods
out
mov
xor
push
into
push
ds
mov
mov
test
lods
add
test
mov
movsb
cmp
xor
out
and
inc
subb
jae
aas
xchg
pop
push
shl
add
fnsave
repnz
mov
loopne
or
add
pop
sbb
or
xorb
inc
test
clc
inc
and
rorb
pop
repz
add
shl
xchg
je
push
mov
insl
daa
sbb
jp
mov
cltd
sbb
push
push
bnd
loopne
inc
cmc
out
cmpsb
in
ret
sub
rcrb
out
push
in
imul
insb
test
dec
pop
repnz
add
adc
dec
mov
popa
pop
jbe
sub
sahf
or
sbb
mov
add
add
mov
pop
xchg
hlt
add
xor
std
push
mov
mov
in
mov
sub
inc
clc
in
lret
pop
xchg
loop
ret
test
or
jl
cmp
sub
xchg
sbb
mov
call
lret
dec
sbb
in
sti
cmp
sahf
pop
or
test
jg
jo
mov
outsl
xor
gs
xchg
outsl
cmp
pop
add
or
cwtl
pop
xor
loop
imul
test
sub
aam
or
pop
sbb
in
push
mov
movsb
insl
test
pop
jno
out
cmp
sub
adcb
imul
mov
test
out
scas
or
out
adc
add
mov
cmp
xchg
jbe
mov
jecxz
sub
push
out
jp
pushf
or
jmp
push
push
adc
cmpsb
sub
test
xchg
pop
xchg
xchg
pop
insl
sti
inc
inc
mov
movsb
outsl
lahf
xchg
test
lcall
outsb
push
push
lods
lret
lret
rolb
call
mov
and
add
cs
pop
jns
arpl
in
in
mov
scas
or
orl
xchg
jnp
and
mov
add
xor
js
xchg
mov
ret
gs
jne
mov
lahf
out
in
xchg
cmpsb
dec
mov
fst
dec
lret
in
in
mov
adc
sub
mov
fisttps
push
mov
mov
std
or
leave
test
dec
sub
out
stc
ljmp
bound
add
popa
mov
rol
and
mov
iret
pop
in
lcall
mov
fcmove
iret
inc
jae
lahf
pop
repnz
inc
les
or
fiaddl
mov
push
sbb
arpl
cmpsb
dec
add
es
call
shlb
ret
js
lret
push
inc
pop
stos
fnstcw
testb
push
xchg
mov
xchg
out
in
ss
sbb
xor
sub
add
push
loopne
notb
cmp
orl
dec
movsl
insb
fbstp
cwtl
lahf
fcomp
mov
mov
jbe
lret
jne
adc
test
mov
ss
bound
push
add
push
push
xchg
out
addr16
xchg
push
pushf
push
arpl
mov
or
fists
mov
add
lahf
sarl
cmc
adcl
cmc
lea
adcl
cmp
jl
mul
dec
push
lahf
cmp
leave
idivl
daa
loop
popa
mov
push
aad
jmp
cmp
push
lahf
lds
test
clc
stos
jecxz
mov
in
ds
lret
jmp
loope
add
idiv
or
inc
and
sub
mov
mov
rorl
adc
popf
inc
fidivs
imull
fbstp
dec
mov
jmp
dec
fldenv
xchg
sbb
or
push
in
mov
stos
sub
adc
and
cmp
xchg
in
clc
xchg
loop
test
lcall
jbe
sbb
and
mov
enter
bound
xchg
dec
ret
jae
mov
add
dec
aam
jmp
fs
mov
xor
xchg
mov
jg
test
cwtl
gs
or
stos
flds
es
call
inc
sub
xchg
xchg
sahf
fdivrp
inc
jae
adc
pop
jp
adc
jecxz
mov
lock
inc
or
or
sub
in
adc
sarl
cmp
dec
push
adc
ljmp
cli
mov
imul
pushf
mov
pop
push
mov
call
jge
push
sar
int3
mov
cwtl
fcoms
cwtl
or
jb
xchg
push
mov
jg
sub
int
cmpsb
push
jecxz
idivl
or
test
mov
call
mov
mov
mov
cli
loopne
push
fmull
mov
sub
mov
fimull
adcb
addr16
jge
dec
or
sub
sub
out
pop
or
cmp
push
adc
mov
mov
push
mov
movsb
loope
test
test
xchg
cld
jg
mov
int3
sbb
sbb
and
xchg
and
insl
or
jl
push
je
fs
cmc
push
jbe
mov
cli
xlat
sub
xchg
inc
in
ret
push
xor
aad
and
jl
ret
out
test
mov
pop
mov
xor
repz
and
jno
xchg
scas
inc
mov
inc
cwtl
cld
clc
cmc
mov
cld
add
sbb
jl
out
sti
sub
add
mov
pop
addb
loop
int3
gs
inc
dec
dec
test
mov
jp
and
enter
cmp
fistps
jmp
in
jmp
mov
or
jl
jbe
and
ss
or
mov
addb
adcb
mov
xchg
and
aaa
push
into
or
sti
iret
jae
data16
mov
mov
cmp
cwtl
mov
shrb
bound
jl
inc
mov
or
sbb
dec
inc
pop
das
ja
pop
les
icebp
xchg
sub
mov
adc
mov
xchg
test
arpl
sbb
scas
adc
ljmp
inc
lock
push
setne
bound
lahf
push
adc
mov
sti
dec
inc
jg
fcmovb
inc
insb
jns
lods
outsl
sub
mov
hlt
mov
xlat
movsb
insl
sahf
test
out
cli
fcmovnbe
call
lcall
fisubrl
add
insb
or
dec
lahf
lret
ret
push
out
push
not
jb
sub
shrl
in
and
push
incb
sbbb
add
out
xor
ret
jae
fmull
data16
rclb
scas
xor
or
mov
jl
int
iret
sti
mov
cmp
cmp
data16
loop
into
push
mov
jnp
or
mov
mov
add
mov
xchg
xchg
leave
mov
dec
insl
jb
adc
mov
or
push
jp
mov
aaa
mov
sub
pop
jle
dec
insl
or
rcrl
mov
scas
sbb
mov
pop
bound
mov
jg
jno
cmp
inc
sub
or
push
cmc
popf
sbb
fs
jns
xchg
pop
jmp
sub
and
xor
punpckhdq
insb
xchg
loope
rcrl
mov
out
loope
addb
jecxz
enter
or
fdivrs
cmp
and
lret
mov
clc
outsb
mov
hlt
mull
sub
xor
rcl
inc
dec
nop
mov
mov
scas
xchg
pop
ja
aad
jno
xchg
fsubrl
stos
scas
sub
xorl
jae
add
cmc
add
xchg
out
and
fisubrl
jl
sbb
jnp
hlt
sti
dec
pop
es
push
dec
adc
xchg
cmp
pushf
sub
and
push
aaa
fiaddl
add
loope
cmp
adcl
imul
jb
gs
or
mov
xor
mov
imul
jnp
fs
adc
gs
add
scas
ret
xchg
inc
arpl
loop
lock
imul
cwtl
inc
xchg
push
and
push
iret
cmpsb
add
adc
cmc
and
jge
or
or
mov
or
int
gs
sub
mov
or
jecxz
mov
fisttpl
jmp
add
add
and
xchg
jae
mov
fwait
movsl
mov
add
lahf
test
mov
adc
lea
fstps
mov
dec
xor
pop
sbb
aad
pop
push
push
xor
mov
lods
push
add
addr16
cmp
int
test
mov
add
jg
adc
jb
push
imul
mov
mov
inc
pop
xlat
mov
mov
jo
dec
pop
lods
stos
fistl
btc
repz
ja
mov
xorb
xor
mov
jo
fs
pop
sub
testb
jge
push
sbb
push
repz
stos
and
mov
push
and
cwtl
cmpsl
adc
mov
decl
push
jl
in
in
scas
adc
cmp
mov
xor
xchg
mov
jns
cltd
rcll
or
adc
mov
aas
lret
lcall
pop
jns
and
cmp
pop
inc
in
or
lea
lcall
and
mov
adc
rorl
mov
minps
cld
lret
fstl
xchg
mov
ret
rorl
pop
sti
xchg
mov
fdivl
hlt
jno
cmpsl
add
popf
sub
in
bnd
cmpsb
and
nop
stos
icebp
ret
pop
scas
outsl
mov
test
lahf
fwait
mov
adc
fdivrl
call
movsb
ret
inc
loop
push
push
fs
cmp
add
iret
sbb
cmp
mov
in
pop
lods
shrb
cmc
cs
xchg
bound
addr16
cwtl
dec
stos
dec
test
outsl
inc
in
lods
popa
ret
ljmp
xchg
adc
outsl
test
lock
inc
inc
lret
adc
jns
cs
enter
inc
sbbl
pop
cmpsb
sub
jne
cmp
fs
add
std
ss
js
pop
inc
jmp
les
push
jmp
jno
shl
iret
adc
fldt
js
mov
movsb
push
cwtl
sub
arpl
add
inc
xchg
popf
js
jp
mov
cwtl
mov
xlat
or
cmp
movsb
cmp
push
xchg
mov
pusha
int
mov
lcall
gs
lret
dec
aam
xlat
mov
jg
outsl
call
cmc
addb
cmp
jne
addl
cmp
loope
sbb
pop
push
mov
loope
or
fisttpll
jb
int3
cmp
test
repz
pusha
add
mov
std
xchg
sbb
sub
push
sbb
ret
lods
xchg
inc
andb
pop
shlb
push
imul
bound
faddl
adc
fisttpll
add
push
lea
sbb
lahf
mov
bound
dec
cmpsl
sbb
push
fcomps
lahf
test
xor
bound
andb
fldenv
mov
aaa
daa
push
push
sbb
mov
xchg
movsl
addl
add
pop
outsb
mov
fbld
cwtl
fsubrs
int3
mov
fadds
testb
ja
ds
dec
lahf
sti
loopne
add
dec
dec
sub
jb
mov
fs
arpl
and
cmpsb
cmp
mov
cs
pop
mov
orb
xor
andb
pop
js
xor
mov
scas
inc
xchg
or
mov
fildll
stos
mov
pop
xchg
add
xchg
add
add
cmc
mov
fwait
sbb
sub
push
add
adc
sub
fs
jp
cmp
adcl
mov
push
jecxz
cmp
mov
lret
jb
sahf
test
push
lods
xchg
repnz
pop
int3
movsb
mov
ficompl
inc
or
inc
adc
or
sub
fisubrl
scas
loope
mov
jb
jmp
sbb
out
dec
test
xchg
sti
das
mov
sbb
jecxz,pt
mov
sub
xchg
mov
cli
out
hlt
xor
into
mov
aaa
fbstp
jns
movsl
or
mov
cwtl
sub
pop
aas
sbb
lock
fwait
inc
test
xlat
ss
in
pop
test
push
xchg
pop
subl
mov
add
mov
mov
cmp
out
mov
add
repz
cli
inc
dec
imul
daa
xchg
or
mov
lret
pop
mov
inc
lods
int
cld
dec
inc
push
sbbb
icebp
test
notb
stos
inc
cmp
cmp
addb
sub
int3
cmp
jg
push
enter
jecxz
or
push
lret
fadd
push
jmp
mov
test
hlt
xchg
mov
cs
dec
fs
sti
pop
cmpsb
imul
sub
xchg
mov
lret
cmpsb
int3
or
movw
dec
rol
pop
cmp
lock
cld
push
int
mov
lods
mov
gs
movsl
jp
out
ret
and
jp
popf
jne
lods
inc
addb
in
ja
sbb
mov
mov
aam
xchg
inc
sahf
test
mov
mov
ja
loope
or
scas
ds
cmp
push
rcr
mov
or
mov
jecxz
stc
outsl
lods
jecxz
add
pop
std
fwait
push
ss
dec
sub
cld
lcall
jl
mov
and
cmpsb
insl
mov
je
clc
pop
je
in
cld
lods
push
dec
push
mov
loop
loopne
popf
rorl
test
or
mov
cmp
addr16
xor
test
adc
mov
movsb
and
inc
inc
sbb
xlat
cmc
std
jno
or
mov
inc
sbb
xchg
xchg
inc
jns
push
adc
rolb
in
lock
jecxz
in
jns
dec
int3
sarl
dec
sub
cmp
mov
mov
xchg
add
adc
jbe
ss
adc
lods
mov
cmp
adc
fwait
push
sbb
push
fcompl
pusha
jp
fidivrs
dec
inc
mov
aam
fidivs
push
add
sbb
jb
mov
mov
mov
inc
in
mov
xor
mov
sbb
outsb
push
aam
fsubp
mov
cwtl
paddb
xor
aaa
stos
mov
mov
xchg
mov
pop
cmpsb
and
cli
xchg
jmp
rcrl
lcall
cmc
call
xchg
bound
mov
ja
mov
sbbb
test
cmp
and
loope
popa
mov
movsb
add
cmpsb
mov
push
push
cli
push
mov
or
sub
fistpll
icebp
js
add
outsb
mov
mov
lock
bound
inc
add
lea
es
cld
push
dec
popf
ljmp
and
push
nop
mov
mul
outsb
inc
in
fwait
jnp,pn
stc
add
cmp
mov
add
cmpl
sub
sub
xchg
imul
out
lret
out
pop
adc
out
push
jle
rcr
imul
jg
sub
push
xchg
mov
sbb
addr16
stos
cmpl
cmpl
outsl
ret
stos
mov
lods
out
in
int
push
test
adc
pop
clc
movsb
push
cmp
loop
or
mov
pusha
repz
pop
xchg
inc
test
xor
push
out
ljmp
dec
fs
or
cmp
cs
movsb
add
pop
xor
push
pop
nop
push
jae
and
lcall
icebp
loop
stos
push
insb
mov
out
in
jbe
ret
cmp
push
jo
inc
mov
lret
or
inc
adc
imul
xchg
orb
outsb
call
cltd
lret
xor
add
mov
fs
shl
outsl
pop
out
int
ss
sbb
ljmp
xor
cmp
sub
inc
arpl
adc
push
stos
scas
je
test
push
sub
jo
negb
xchg
mov
test
inc
ja
addb
lahf
xchg
sub
cmp
int
mov
cmp
out
stos
std
jl
adc
xor
jecxz
fwait
jle
dec
call
adc
je
mov
jle
lret
sbb
add
movsb
fmul
in
push
hlt
cmp
jg
sub
xchg
jmp
dec
lcall
imul
cwtl
sub
test
stc
js
inc
in
cwtl
iret
add
rolb
cmp
dec
xlat
in
sub
frstor
add
dec
pusha
outsl
mov
sahf
xchg
pop
mov
jmp
sub
es
xchg
icebp
repnz
loop
add
and
repnz
divb
je
sub
mov
sub
inc
je
mov
js
pop
mov
fcmovbe
cmpsl
xchg
mov
fdivrs
sbb
mov
add
in
jecxz
jbe
or
repnz
lods
pop
es
ficomps
mov
dec
je
in
xchg
pop
xchg
daa
repz
adc
jbe
lret
mov
nop
xor
mull
pop
testb
iret
out
and
addb
inc
lahf
or
adcl
popl
sbb
push
add
and
mov
jp
add
call
stc
cli
pop
sbb
lcall
int3
mov
cmpsb
cwtl
add
mov
and
add
mov
adc
mov
cmp
push
push
jae
dec
jecxz
adc
jbe
xchg
psubsw
sbb
jo
sbb
shlb
imul
cld
dec
cmp
xlat
mov
paddq
cwtl
jl
fldenv
rolb
mov
pop
inc
xchg
fcoms
test
fcmovb
outsl
inc
adc
repz
dec
jle
dec
xchg
andl
cmp
mov
nop
fs
mov
mov
popf
leave
stos
mov
push
xchg
jecxz
or
shrb
ja
insb
dec
in
lret
repz
sub
subl
mov
xchg
mov
out
pop
ret
mov
mov
sbb
cmp
mov
outsl
jae
fbld
or
xor
in
call
xchg
scas
mov
dec
xor
sub
jp
faddl
aad
roll
mov
arpl
insb
lock
mov
mov
cld
push
and
jmp
xor
mov
lods
push
cmp
ljmp
mov
int3
rorl
mov
shlb
mov
push
adc
mov
cmp
inc
jo
jecxz
xor
div
push
mov
in
out
push
sbb
cmp
lods
int3
insb
ja
sbb
std
and
xor
sbb
cmp
outsb
adc
mov
jmp
xor
mov
push
imull
jle
xchg
add
pop
cli
sub
sub
mov
cmp
popa
xor
pop
add
js
jg
mov
mov
rorl
in
or
lret
sub
cmpsb
stos
movsl
dec
inc
jmp
mov
aaa
aas
loope
mov
hlt
rorl
rorb
adc
aaa
dec
mov
adc
shrl
aam
mov
icebp
mov
ja
mov
add
outsb
lret
mov
out
out
add
and
jecxz
hlt
cltd
fisubrs
out
ljmp
jecxz
inc
iret
add
dec
jbe
call
and
mov
out
flds
test
mov
ficoml
mov
mov
test
cmp
sahf
test
dec
movhlps
jg
inc
sub
aad
ret
mov
gs
xor
and
xor
fisttpll
add
push
mov
mov
in
sti
add
imul
jge
dec
lock
and
rcll
pop
push
or
mov
dec
mov
dec
ljmp
adc
adc
xlat
negl
inc
fwait
adc
repz
push
sbb
icebp
rcll
sarb
and
out
fstps
stos
pop
pop
jo
xchg
add
cmp
inc
push
push
nop
rorl
push
test
pusha
in
inc
ljmp
aas
push
lds
pop
lcall
insl
jns
lcall
or
push
lds
lods
mov
loop
jg
movsl
xchg
loopne
jnp
cmp
adc
js
jne
or
add
iret
out
push
xchg
sbb
xchg
loop
and
out
aam
fdiv
inc
movsb
xchg
roll
jg
cmpsb
bsf
adc
rcpps
stos
mov
adc
cli
adc
testl
fldz
mov
insb
add
loop
mov
test
cli
lods
cmp
idivb
pop
js
imul
sti
add
jge
data16
shll
sub
inc
fmull
sbb
repnz
xor
out
out
pushf
dec
dec
fmuls
dec
pop
fst
sub
pop
ljmp
cld
mull
negl
test
jnp
repnz
push
and
testb
pop
lahf
xor
imul
ljmp
dec
mov
fldl
xor
pushf
mov
jl
and
les
hlt
orb
mov
or
jp
push
ja
jge
cmp
cwtl
cmpsb
dec
dec
pop
xorl
call
aam
test
push
mov
int
scas
je
inc
push
adc
js
lret
jne
lahf
rorb
in
pusha
shr
jns
and
push
fmull
sub
push
or
or
lods
mov
and
iret
mov
insl
mov
cmp
in
imul
je
lods
pop
mov
or
jle
add
inc
pusha
and
xchg
or
lods
loopne
dec
movsl
cmp
iret
shrb
cmp
sahf
ja
icebp
mov
jle
inc
jbe
ret
adc
gs
fwait
xor
jnp
cmpsb
cs
sbb
je
pushw
repnz
loope
mov
notb
mov
call
lret
cld
dec
mov
pop
and
push
xchg
dec
mov
addr16
jecxz
pop
cmpsb
movsb
jmp
xchg
and
sub
in
lret
xchg
or
aam
jmp
push
test
mov
shl
push
jp
push
lcall
scas
daa
stc
in
cmp
adc
lods
loopne
int3
mov
xchg
shrb
sarb
mov
mov
xchg
push
subb
mov
push
shlb
inc
fildl
xor
jne
lods
inc
mov
sbb
test
andl
dec
sub
jnp
sbb
push
and
scas
ret
inc
jmp
mov
sti
xchg
jbe
lahf
and
mov
test
sub
mov
inc
dec
mov
cmp
mov
cmpsl
mov
clc
push
xlat
bound
mov
mov
data16
lcall
pop
int
inc
aas
mov
jp
xchg
xchg
dec
pop
test
scas
sbb
call
mov
xor
leave
and
and
adc
jns
ret
rcr
add
imul
call
fildl
mov
int
shlb
outsl
iret
insb
sbbl
mov
mov
cltd
xchg
data16
clc
mov
aas
push
sbbb
inc
mov
or
mov
sub
fnstcw
imul
lds
pop
mov
pop
lds
jge
push
xor
fmul
imul
dec
or
icebp
pop
pop
mov
mov
push
mov
mov
xlat
push
mov
daa
push
popa
test
daa
and
sbb
in
pop
pop
mov
dec
and
mov
mov
mov
rcr
sbb
inc
fiadds
sbb
pushf
scas
ja
xchg
dec
subb
pushf
inc
out
shl
add
repz
mov
adc
leave
in
cmpsb
movsb
outsb
jecxz
adc
jg
cmp
sub
cmc
test
out
jmp
imul
rclb
jecxz
in
inc
jp
mov
adc
addr16
je
pop
and
ljmp
std
mov
setb
jmp
aas
push
jmp
scas
hlt
mov
jo
in
shrb
ret
imul
sbb
insl
outsb
and
mov
fs
fsubrl
out
jge
in
jp
popa
scas
sbb
or
movsl
xchg
aam
lods
fidivs
outsb
push
movsb
mov
pop
je
fnsave
mov
es
push
xchg
push
lret
add
pushf
div
push
adc
ss
data16
adc
clc
jne
out
xchg
push
repz
sub
xchg
pop
idivl
mov
push
ljmp
or
cmp
popf
andl
push
mov
adc
adcl
idivb
insb
add
sub
and
arpl
arpl
popa
push
stos
add
sbb
pop
scas
jmp
dec
pop
fbstp
rcrl
fstps
jne
dec
outsb
mov
pop
outsl
pop
sahf
push
adc
cmpsl
cmpsl
sbb
xlat
jl
inc
imul
sub
adc
js
repnz
cwtl
repnz
in
stc
push
icebp
in
mov
pop
push
cmp
rorl
push
adc
xor
leave
mov
push
push
push
stc
mov
mov
insl
xchg
sbb
sbb
add
hlt
test
lods
outsb
mov
bound
mov
stos
and
dec
push
lret
xor
in
out
adc
cmp
sub
cld
pop
push
add
jne
in
and
int3
cld
pop
mov
jne
cmp
xchg
sub
fwait
mov
cmp
xor
pavgb
bound
mov
xor
jne
mov
mov
addr16
int3
and
dec
xchg
and
pop
cmp
imul
loope
pop
sbb
insl
outsl
push
jmp
jae
out
addr16
add
addl
push
xchg
inc
test
cwtl
fildl
enter
subl
js
pop
fwait
push
test
jae
movsb
dec
or
jbe
mov
and
mov
ljmp
cmp
push
mov
cmp
or
neg
int3
mov
xchg
mov
push
jle
int
test
or
sbb
outsb
xorb
mov
push
dec
mov
dec
lock
jo
shr
push
dec
and
push
add
loop
popf
orb
add
jmp
into
xor
loop
insb
push
cmpsl
in
enter
aad
pop
out
outsb
push
lods
stc
sub
mov
xor
cwtl
inc
jle
xor
jmp
sub
mov
push
icebp
or
jp
cmp
subb
pushl
imul
xor
mov
adc
xor
push
popf
dec
xchg
addr16
les
stc
mov
xchg
push
fdivrl
pushf
mov
call
mov
adc
ret
mov
das
pushl
dec
mov
repnz
cwtl
and
jp
insb
ret
jbe
sub
mov
and
jmp
iret
outsl
inc
popa
dec
add
or
in
or
aam
repnz
bound
js
outsl
and
xchg
mov
cmp
shll
jne
or
push
int
aas
mov
jmp
fucomi
mov
test
mov
fstl
xchg
xchg
cmp
inc
mov
int3
imul
jl
inc
pusha
shlb
enter
mov
cli
jae
mov
shl
mov
dec
dec
nop
push
jle
fldenv
jle
xchg
jp
xor
jp
inc
push
mov
fmul
in
adc
stc
xchg
cld
popa
push
pop
adc
je
xor
xor
outsb
cld
out
sahf
mov
inc
cwtl
cli
mov
xlat
call
mov
pop
sub
adc
adc
div
xor
jecxz
cmp
std
in
aad
inc
addr16
stc
mov
in
jl
movsb
jge
in
adc
push
mov
popf
lcall
rorb
adc
inc
stos
cmp
andb
jge
jl
mov
inc
loope
nop
lods
jmp
filds
repnz
pop
and
cmpsl
popaw
xor
imul
clc
loope
jbe
cmp
out
mov
pop
sbb
cmpsb
xlat
inc
push
decb
and
push
imul
xchg
mov
or
mov
add
adc
mov
aam
or
mov
mov
cmp
test
push
pushf
jmp
stos
loopne
mov
jb
add
clc
mov
mov
lret
dec
dec
shll
bound
sahf
pushf
data16
fwait
icebp
mov
clc
movsb
dec
stos
pop
movsb
mov
pop
mov
mov
push
add
sbb
add
xchg
in
repnz
xchg
ljmp
or
mov
enter
xchg
cmpsb
les
movsb
xchg
testb
mov
push
jae
js
cltd
pushf
outsb
cld
sbb
pop
xchg
mov
notb
dec
push
stc
repnz
lods
pop
inc
xor
fiaddl
pop
outsl
addr16
push
out
inc
repnz
xchg
push
aad
gs
xchg
sub
push
xchg
or
sbb
push
fcmovu
arpl
sbb
xor
daa
pusha
cmpsl
icebp
out
mov
aas
or
sbb
and
fists
cmp
popf
shlb
pop
out
pushf
addr16
fsts
addb
jp
ljmp
dec
sub
pusha
cltd
aas
ljmp
int3
adc
push
ds
test
xchg
int
push
pop
and
jo
sbb
icebp
jge
lahf
jge
mov
and
mov
aaa
mov
je
or
xor
push
mov
or
mov
adc
dec
loop
in
push
add
repnz
adc
cltd
add
dec
xchg
cld
int
sar
subb
mov
mov
stc
in
jl
es
add
mov
cld
repnz
sahf
ficoml
fwait
pop
mov
jo
jmp
fnstsw
test
dec
or
popa
xchg
mov
fadds
icebp
lret
xchg
data16
add
pushf
cmp
push
das
inc
xchg
dec
cmp
jmp
add
lods
aaa
out
dec
jecxz
outsb
xlat
cmp
inc
pushf
sub
bound
in
test
mov
loope
dec
mov
push
lock
pusha
leave
mov
in
rorb
arpl
jg
pusha
int
dec
cmpsl
mov
ds
repz
push
scas
ljmp
addr16
shl
add
jo
insl
mov
adc
push
sarl
test
insl
cmp
loopne
inc
pop
rolb
and
mov
in
jns
jb
dec
addb
ficomps
sub
rcr
inc
cld
and
pop
xlat
sbb
xchg
xor
xor
lods
stc
mov
cmp
dec
mov
cld
lods
dec
adc
jnp
push
and
inc
lds
bound
lcall
mov
lahf
js
bound
xchg
and
cmp
dec
sbb
fwait
cmp
jno
out
or
add
cmpsb
loop
or
and
sbb
dec
or
sub
xor
addr16
shl
shlb
xor
xor
std
mov
mov
cli
dec
sbb
loope
mov
stos
outsl
jp
mov
in
add
jne
cmc
lret
repz
cs
mov
push
jnp
das
jle
lds
leave
out
xchg
pop
jb
mov
mov
xchg
sbb
fistpl
xor
and
cmp
mov
or
int
aad
cmp
and
js
test
fwait
sub
or
pushl
insl
imul
sti
aam
mov
mov
add
cmpsb
pop
bound
fdivr
jle
ja
fistpl
ret
mov
push
test
jg
cmp
lods
xchg
mov
test
dec
clc
inc
shll
dec
ret
mov
mov
ret
jbe
sbb
push
ja
mov
xchg
scas
loopne
loop
adc
xor
arpl
hlt
ja
or
pusha
and
xor
imul
mov
in
ljmp
test
outsb
fsubs
lret
icebp
aas
and
cli
mov
je
nop
or
push
stos
fwait
jge
cmp
sub
and
ss
repnz
inc
or
scas
in
ds
jb
and
test
fiadds
or
lret
xor
pop
dec
dec
popf
xchg
mov
sub
lock
enter
jmp
inc
nop
movsb
aad
sbb
push
jge
test
jb
ss
pop
sub
ljmp
shlb
cmp
out
dec
imul
sbb
xor
sbb
sbb
inc
insl
aad
fbld
pop
add
inc
add
loop
push
scas
jg
cmpsl
shrl
xor
in
int3
xchg
mov
mov
cltd
and
or
lock
loop
out
lods
dec
and
mov
out
int3
out
aas
jbe
push
push
repz
test
mov
xchg
aam
mov
and
loop
mov
mov
pop
push
cmp
icebp
mov
fcompl
ljmp
cmpsl
imul
push
push
cmp
mov
and
scas
inc
mov
and
fstl
jmp
inc
inc
test
sub
pop
mov
repz
rcr
mov
push
mov
add
cmp
xchg
insb
push
ja
ljmp
push
dec
sbb
outsb
clc
pop
jg
xchg
xor
sbb
sbb
repnz
mov
shll
dec
test
je
into
mov
ljmp
mov
cltd
cwtl
lahf
adc
mov
gs
enter
dec
fisttpl
add
fs
and
xor
lds
test
jmp
in
loope
mov
cmp
cli
jne
push
ss
jbe
xor
pop
fldl
jge
sbb
jae
and
enter
sbb
mov
scas
fsubs
mov
mov
push
jmp
jmp
hlt
jbe
sahf
dec
mov
and
mov
cmp
das
test
in
inc
xor
adc
pop
sbb
icebp
inc
jb
or
lahf
pop
pushf
xlat
push
ret
test
mov
pop
jg
or
enter
mov
je
xchg
shrd
js
addb
xchg
stos
mov
jb
enter
mov
xchg
mov
mov
mov
lods
loopne
ja
outsb
test
jmp
dec
lcall
fs
xchg
pop
popa
insb
add
andl
aaa
popa
add
add
push
cld
push
jbe
movsl
sbb
mov
lret
mov
jbe
add
mov
fxch
push
xchg
dec
xchg
sub
test
mov
shlb
dec
fcoml
xchg
jecxz
scas
out
sbb
jno
xchg
dec
inc
sti
inc
mov
xchg
mov
test
fsubrs
jo
subb
sbb
mov
int3
fildll
jbe
ds
arpl
adc
imul
sbb
bound
pop
inc
cld
imul
push
lods
call
sbb
cld
in
jne
bound
ds
notb
adc
adc
cs
mov
cmp
mov
mov
xor
xchg
js
les
mov
push
jmp
cmp
into
movsl
jo
scas
mov
clc
imul
sub
out
cli
shl
inc
dec
xchg
movsl
push
mov
ret
lahf
mov
add
add
hlt
clc
stc
nop
push
sbb
out
ret
xchg
inc
push
test
jns
stos
or
jne
pop
add
rcll
fnsave
imul
sbb
and
cld
pop
xchg
lret
push
sets
aas
test
std
ljmp
je
jo
stc
les
adc
and
out
sub
repnz
and
sbb
daa
js
test
rorb
add
fcomp
jnp
cmpsb
js
icebp
das
cmp
push
jecxz
inc
push
cmp
cli
addr16
inc
imul
sub
lcall
push
jl
into
outsl
loop
push
adc
xchg
subb
call
repnz
jmp
movq
xor
iret
pop
test
pusha
es
adc
xchg
fnsave
sahf
shrb
pop
xor
cmpsl
or
sbb
xor
ret
xor
jo
mov
mov
sahf
stc
sbb
sbb
mov
insb
inc
pop
in
sahf
fdivs
pushf
lret
lea
imul
mov
test
xlat
mov
mov
sub
iret
jns
notl
mov
in
insl
push
lods
adc
int3
mov
push
xchg
jo
daa
xchg
mov
sbb
jne
pushf
test
data16
or
mov
nop
pop
or
pop
cs
pushw
fbld
inc
repnz
iret
adcb
mov
lock
cmc
repz
inc
add
push
jb
mov
out
out
jno
sbb
inc
xor
mov
xor
sub
lahf
inc
test
cmpsb
push
xchg
xchg
mov
mov
xor
hlt
fsubs
jge
das
bound
leave
lds
test
pop
add
pop
ret
cmp
adc
push
scas
ljmp
push
cmp
xor
adc
jbe
call
rcrb
push
cmp
lods
loopne
mov
sbb
div
inc
mov
icebp
leave
add
je
push
xchg
test
sbb
daa
mov
sub
pop
sti
idivb
pop
fldl
pop
dec
jnp
imul
fwait
add
sbb
mov
shll
dec
outsb
inc
inc
mov
dec
out
push
mov
xchg
jl
into
pop
or
dec
cmc
insb
xlat
mov
jne
ljmp
test
mov
inc
sbb
pusha
jg
stos
cmp
repz
in
pop
mov
in
test
in
in
cmp
push
pop
mov
inc
pop
fildl
rcll
dec
shlb
popf
cmp
push
testb
cmp
add
push
mov
sub
jnp
ja
test
rorb
pusha
int
sbb
mov
push
cli
xor
fwait
mov
mov
in
mov
pusha
repz
mov
xchg
call
add
mov
xor
fwait
mov
popf
outsb
in
pop
jbe
jne
aad
jg
js
push
clc
pop
lea
jle
sub
push
repz
fimull
mov
mov
outsb
dec
pusha
int
pop
jle
scas
lods
push
out
jg
mov
mov
or
pop
inc
ljmp
pavgb
shlb
mov
push
push
cmpl
fsubl
xlat
movsl
ret
push
test
dec
ss
xchg
scas
out
push
je
call
pop
push
jns
leave
dec
push
jmp
push
std
sub
test
fwait
jecxz
dec
insl
push
popf
mov
mov
xchg
push
mov
gs
adc
and
ror
jmp
mov
inc
xor
fwait
or
jns
aad
clc
mov
test
dec
ret
and
push
xchg
jle
test
in
jp
jmp
popa
loopne
sbb
mov
jmp
test
js
aaa
jmp
aam
pop
fildl
cli
pop
or
pop
cmpsl
pusha
sub
cmp
push
or
fwait
xor
negl
repz
in
mov
xor
xchg
mov
ret
les
bound
push
repnz
ret
pop
dec
aam
adc
mov
jmp
in
rcr
sub
icebp
push
popf
jg
xchg
xor
cs
movsl
ljmp
lods
xchg
inc
loop
inc
out
xchg
or
mov
lret
inc
pusha
sub
cmp
rorl
mov
xor
insb
out
popf
loope
bound
adc
addr16
jnp
jg
adc
add
add
popf
loopne
out
inc
push
std
js
addr16
insl
push
jle
call
mov
pop
ljmp
mov
or
sbb
outsb
push
fsub
jge
sub
push
mov
xlat
lret
jmp
xchg
lods
loope
inc
sub
fs
pop
arpl
stos
jmp
lds
jb
inc
jmp
push
je
cmp
mov
push
sahf
imul
out
jns
mov
shlb
mov
std
xorb
mov
xchg
imul
mov
or
mov
ljmp
push
dec
repz
inc
cmp
fsts
cmc
adc
mov
jnp
loopne
xchg
cmpsl
jp
sbb
rorb
loope
cmp
sub
pop
in
fimuls
adc
sub
sti
mov
add
subps
push
jle
add
movsl
loop
xor
aaa
or
pop
mov
mov
cmp
mov
les
int3
test
pop
lods
int
cld
jecxz
int3
pop
pop
cltd
lea
sbb
or
mov
push
sbb
sub
cltd
xor
lods
lcall
ss
int
data16
mov
xlat
shl
mov
lret
scas
lods
dec
lcall
popa
xchg
jmp
jmp
and
scas
fldcw
insl
scas
xlat
push
dec
daa
sbb
es
jb
enter
ljmp
scas
and
gs
out
jecxz
into
pop
xlat
xor
and
insb
push
jp
sbb
inc
mov
lds
iret
push
cmpsb
pop
adc
test
addr16
fsubl
in
or
cmp
sub
loop
mov
push
xchg
xor
negb
ss
jnp
test
and
pop
adc
or
inc
mov
xor
lcall
push
negl
sbb
dec
mov
inc
mov
jb
test
lods
adc
pop
add
sub
xchg
mov
jae
pop
shrl
push
andl
in
cs
inc
mov
jmp
push
xchg
pop
xchg
jo
leave
fistl
cmp
push
mov
sbb
dec
sbb
mov
xchg
xor
outsl
mov
and
imul
out
mov
or
jl
js
xchg
js
repz
pop
test
push
jge
outsl
sbb
and
dec
outsb
sub
out
fidivl
not
aaa
pusha
stos
loope
ja
fsubrl
push
mov
sub
lahf
jb
mov
xlat
in
pop
sbb
cmp
in
mov
mov
lret
jb
stos
lock
scas
sbb
xchg
sbb
leave
nop
fwait
mov
lcall
loop
mov
fiadds
ljmp
adc
lods
andl
scas
inc
shl
cmp
mov
pop
insb
ret
in
or
shrl
adc
iret
xchg
insl
in
clc
pusha
lods
or
jge
mov
and
and
aas
push
xchg
jle
mov
push
popa
clc
push
xchg
test
ss
nop
lahf
push
sub
sti
xchg
insb
pushl
mov
jg
add
test
jns
xchg
cmp
mov
mov
push
call
cmpsb
cmc
xchg
adc
lcall
mov
popf
adc
test
mov
inc
jmp
pop
dec
scas
push
mov
push
scas
pop
jns
push
inc
add
mov
xor
int3
incb
fwait
add
pushf
mov
add
adc
add
mov
pop
mov
fwait
inc
pop
mov
xchg
pop
sbbl
lods
repz
es
xor
dec
jne
jecxz
vpshlw
xlat
add
mov
mov
cmp
adcb
mov
mov
stos
jb
test
aas
call
lahf
out
pop
lock
mov
xchg
hlt
loop
aas
in
lds
pop
fs
pushf
mov
add
mov
dec
sbb
stc
js
lcall
cmp
pop
dec
jbe
out
jns
loopne
data16
lahf
mov
scas
mov
testl
push
dec
sbb
jp
mov
ret
test
fldt
dec
pavgw
mov
bound
inc
lods
jg
and
mov
add
jle
push
popf
or
lea
in
xchg
mov
stc
mov
mov
fwait
push
pusha
push
je
movsb
xor
outsl
push
sub
fistps
cld
cmp
xchg
mov
test
mov
push
mov
lock
xor
movsl
ljmp
fisubl
lret
jp
jp
movsl
mov
js
gs
xor
adc
cwtl
push
stos
bound
xchg
fidivrs
bound
push
mov
repnz
push
add
call
ss
std
movsl
inc
sti
push
xchg
psrld
mov
es
out
lcall
mov
in
idiv
pusha
xor
push
mov
cmp
xchg
push
js
out
into
jbe
jmp
jb
sub
es
sbb
lcall
dec
iret
popa
test
mov
dec
xchg
inc
mov
shlb
movsb
lcall
shlb
sub
fwait
cld
outsl
mov
shll
lret
jmp
push
dec
test
std
jl
jb
js
decb
mov
jns
lods
gs
js
mov
ret
testl
fwait
aam
push
xchg
pop
push
xor
popa
and
xchg
stos
push
xchg
adc
pop
aas
add
sbb
bound
test
std
arpl
lret
xor
aaa
push
jmp
mov
pop
scas
data16
cmp
iret
pusha
cwtl
push
popa
jb
xchg
cmp
add
dec
loope
add
test
repz
add
add
adcb
mov
outsb
mov
rorb
mov
lods
sahf
imul
lcall
or
cmpsl
mov
data16
idivl
xchg
call
fdivrs
in
pop
ja
outsb
ss
inc
popf
dec
jecxz
mov
xchg
sbb
jg
jo
cltd
lahf
addr16
lods
fsubr
inc
mov
xchg
mov
leave
push
mov
out
mov
iret
testl
fsqrt
jno
and
out
enter
nop
jg
dec
jmp
inc
clc
mov
lret
int3
cltd
pushf
add
dec
xchg
popa
pop
imul
lods
jecxz
in
xchg
into
inc
mov
cmp
add
mov
xchg
arpl
dec
xor
daa
shl
mov
cmp
xor
mov
mov
pop
adc
aam
mov
pop
mov
mov
jo
mov
and
cmp
dec
divb
push
or
outsb
stos
lods
jl
inc
xor
stos
cli
sbb
push
pusha
cmp
pop
subb
cld
jbe
mov
mov
adc
stos
lret
mov
incb
int3
pop
jbe
out
mov
jl
les
ret
inc
pop
jns
movsb
dec
jge
xor
cmp
and
ss
dec
aam
push
dec
dec
or
mov
int3
mov
sbb
outsl
mov
rorl
shrb
sub
into
mov
mov
lds
mov
cli
sbb
cmp
dec
pop
lods
xchg
out
scas
cli
cmc
push
sub
pop
mov
subb
test
out
sbb
fidivrl
and
shrl
and
xchg
mov
leave
mov
mov
ja
jae
mov
shll
in
lods
lcall
jecxz
inc
jmp
sub
push
in
or
mov
push
jl
xor
mov
std
push
daa
clc
mov
les
mov
sbb
je
test
mov
repz
xor
cli
mov
and
dec
xor
xor
popa
sub
sub
mov
lods
xchg
mov
mov
add
xchg
pop
mov
jae
ljmp
pop
and
lret
enter
adc
out
fwait
iret
inc
in
and
fidivl
popa
xchg
and
xor
push
repnz
mov
jle
jno
test
in
lds
mov
imul
inc
add
std
xchg
out
push
and
aam
repz
xor
adc
sbb
gs
cmp
jp
int3
test
adc
std
test
cli
pop
cmpl
lods
inc
mov
mov
xorl
mov
out
aaa
shll
dec
fcoms
fmuls
mov
mov
arpl
rcrl
xchg
mov
ds
std
jo
mov
lea
repz
mov
inc
aam
pop
std
add
cmp
mov
jmp
test
test
adc
xor
fwait
push
cltd
adc
dec
mov
jmp
aam
std
push
popf
sub
inc
lods
dec
les
es
bound
xchg
fisubl
data16
xor
mov
insb
arpl
lock
add
add
into
mov
shlb
rcrb
mov
outsl
jmp
repz
lret
pop
stc
roll
arpl
je
mov
fdivrs
inc
outsw
je
fadds
repz
push
push
jne
jecxz
jae
scas
mov
enter
add
outsl
push
mov
test
dec
pusha
loope
outsb
flds
inc
inc
ljmp
std
mov
jo
test
popf
mov
mov
enter
test
inc
xor
test
jno
mov
add
push
jg
xchg
add
fdivrs
add
out
push
lods
out
ret
ret
jg
into
inc
mov
add
mov
add
dec
inc
adc
xor
int
sub
mov
fs
or
sbb
pop
fs
push
pop
arpl
jae
dec
subb
jb
bound
jg
cmp
jmp
stos
jmp
dec
or
xchg
into
jmp
into
sub
adc
mov
lods
out
lret
cs
ror
sub
xchg
pop
arpl
jno
add
sbbb
cmpsl
lods
lock
movsb
sub
pop
cli
jp
aam
inc
ljmp
mov
cmc
jo
bnd
mov
loopne
jmp
out
aam
adc
dec
mov
movsl
cwtl
mov
nop
addr16
fldenv
and
xchg
call
test
or
test
fcoml
pushf
out
enter
jae
cmp
push
ss
xchg
leave
cli
into
and
adc
push
dec
xchg
call
push
jno
decl
or
mov
jg
push
ja
sub
mov
adc
out
pushf
jno
test
sbb
popf
loopne
out
push
xchg
call
test
pop
stos
cmp
cmp
mov
mov
dec
mov
or
mov
test
lcall
in
icebp
pop
jno
add
in
in
lcall
jecxz
inc
mov
adc
lcall
cld
test
out
repnz
es
js
js
add
mov
or
cmp
aad
or
adc
xor
and
repz
lahf
push
mov
xchg
cld
in
jae
mov
pushaw
insl
xor
test
jno
or
mov
push
xor
xchg
icebp
push
popf
mov
in
ljmp
cwtl
dec
in
cmpb
mov
or
push
xor
jno
xor
add
dec
es
aad
fadd
in
xor
out
xchg
mov
push
fstl
pop
jle
ss
push
aaa
sbb
negl
jle
lods
inc
fstpt
je
aaa
mov
or
sti
inc
xchg
adc
push
mov
loopne
lret
into
push
mov
into
adc
jmp
push
mov
adc
in
mov
imul
xchg
test
xchg
cwtl
xor
fwait
test
push
roll
jl
fs
mov
push
bound
push
dec
repnz
mov
out
mov
in
out
shl
xor
js
jecxz
out
xor
icebp
insb
repz
lahf
mov
push
mov
inc
mov
lods
into
jnp
scas
insl
loopne
test
xchg
les
js
pop
clc
sbb
lea
jp
or
fiadds
mov
xor
mov
dec
mov
xchg
inc
lcall
mov
subl
mov
push
and
push
test
xor
jmp
xchg
test
imul
xchg
fcmovb
incl
add
test
in
jo
test
mov
xchg
cltd
mov
push
or
jns
ficoml
lahf
adc
pop
pop
jge
jnp
push
movsl
out
and
mov
clc
xor
add
sbb
pop
pop
adc
cmp
idiv
rcll
xor
xor
pushf
inc
add
inc
gs
fsubr
lea
push
inc
add
loopne
mov
out
mov
test
sbb
stos
pop
mov
ret
ss
push
fistpll
aas
and
popa
fbstp
or
jp
repz
js
inc
aad
fwait
mov
and
or
aad
popf
mov
mov
push
notb
js
repz
aam
pop
xor
jns
xchg
bound
addb
jb
mov
xor
push
mov
pop
je
dec
fwait
sahf
sbb
xor
or
roll
jns
adc
ret
xchg
lahf
push
cmpsl
mov
pop
loope
dec
aam
orb
stc
cmpsl
xchg
inc
stos
add
fwait
repz
sub
loope
andb
dec
push
addr16
in
fwait
xorb
dec
pushf
rclb
test
xchg
lock
add
push
jl
mov
mov
adc
xor
addl
add
sbb
dec
popf
push
daa
add
adc
mov
push
std
dec
movsl
jecxz
jg
adc
aad
mov
icebp
push
mov
sub
std
push
jno
or
ja
jns
pop
pop
btc
icebp
adc
jno
or
mov
pop
ss
xchg
lret
push
je
inc
in
xor
cmp
popf
dec
sbb
cmp
js
xor
xchg
sub
test
loopne
pop
lcall
mov
push
addl
pop
js
jmp
mov
jb
loopne
les
pop
jns
rcrl
xor
dec
cmp
dec
lods
gs
dec
in
test
inc
or
pushf
mov
iret
ss
cmc
pop
or
sbb
gs
mov
hlt
outsl
sub
or
mov
mull
lock
mov
pop
inc
in
shr
push
mov
or
cmp
mov
push
push
stos
in
ljmp
jp
sbb
xchg
loope
push
mov
enter
push
mov
push
std
push
notb
inc
xchg
repz
imul
hlt
pusha
mov
push
test
xchg
pop
push
xor
jnp
ds
push
arpl
push
les
movsl
fwait
call
mov
cli
fdiv
sub
xchg
jle
and
mov
adc
insb
pop
mov
push
mov
mov
ss
lods
addr16
jecxz
pop
fcomps
insb
out
push
mov
or
push
lods
in
or
inc
mov
repz
addb
fiaddl
ljmp
ljmp
mov
xchg
int3
mov
adc
cmp
pop
mov
mov
sub
and
test
movsl
push
sub
jns
mov
dec
cs
in
jecxz
dec
mov
frstor
mov
test
push
sarl
pop
sub
adc
mov
sbb
push
icebp
cmp
sbb
mov
lea
lret
or
out
loop
pop
cmpsb
jl
pop
movsb
pop
insl
ljmp
jl
jne
sub
xchg
mov
fbld
xchg
mov
jp
push
mov
mov
adc
repnz
xor
outsb
sub
fldenv
sub
xor
mov
mov
int
scas
out
bound
out
dec
mov
enter
enter
jmp
repnz
pop
xchg
push
pop
sarl
xchg
xchg
arpl
jae
cmp
pushf
ret
mov
add
call
xchg
call
mov
mov
popf
jae
cld
iret
sbb
scas
imul
jno
mov
cmp
popf
mov
sarb
inc
jno
jle
out
mov
xchg
xchg
rcr
pop
std
jb
ja
out
fs
adc
inc
ss
out
dec
clc
push
xchg
push
outsl
lods
add
jae
mov
xor
xchg
mov
mov
inc
xchg
dec
mov
rorl
xchg
mov
std
adc
push
push
jl
xchg
cmc
xor
adc
repz
cmp
lock
push
or
or
cltd
lock
sbb
sub
fdivr
push
xrstor
andb
add
mov
mov
xchg
pop
mov
inc
push
lock
shl
daa
adc
movsb
jns
push
cmpsl
adc
xchg
pop
ljmp
xchg
in
jne
addl
dec
or
lock
notl
inc
rol
out
cmp
pop
insb
fistl
jmp
push
fdivrl
mov
in
ret
xor
pop
mov
icebp
out
rcrb
insb
mov
jge
pushl
adc
push
lahf
sarb
fdivrl
notl
xchg
sbb
lods
call
add
jo
shlb
mov
push
cld
movsl
or
mov
mov
jmp
cmp
subl
call
jns
loopne
call
movsb
mov
cli
test
pop
test
enter
pop
sahf
inc
aaa
sahf
sub
stc
fildll
mov
and
xor
in
jnp
adc
loop
push
pushl
test
cmc
movsl
ss
fwait
xchg
cld
rcl
sbb
pusha
sbb
xchg
mov
jmp
inc
jg
lock
dec
add
xchg
or
hlt
scas
ret
popf
rclb
xchg
stos
test
xchg
fcoms
jl
mov
sbb
mov
cmc
or
mov
inc
mov
aam
push
scas
mov
addl
inc
add
inc
add
xchg
fldcw
int3
int
xlat
mov
cmpsl
xchg
jge
push
or
loop
enter
and
ret
out
fsubrs
shlb
dec
ret
stc
mov
cmp
arpl
cld
sbbl
inc
xchg
mov
je
mov
fdivrs
test
std
test
or
mov
pop
ljmp
mov
aad
ss
mov
fs
jne
bound
push
std
movsl
lods
cmp
in
iret
test
mov
dec
loop
cmpsb
inc
addl
inc
sbb
add
int
sub
ret
pop
rolb
and
rorb
sub
addr16
adc
push
jmp
sub
xchg
pop
ja
mov
dec
orl
jle
push
mov
cmpsl
or
std
cmpsl
in
adc
call
fwait
mov
rclb
or
fwait
in
mov
ret
flds
scas
repz
dec
lods
adc
xchg
js
mov
cwtl
dec
jns
push
dec
test
fcoml
sub
ss
movsb
xor
addl
dec
add
mov
add
repz
cs
movsl
sub
push
sub
xor
inc
push
cmp
in
sahf
lods
dec
sbb
or
jmp
out
mov
sahf
mov
mulb
fs
or
mov
pop
mov
sub
adc
inc
push
mov
mov
push
scas
rep
push
lods
lods
pop
movsl
sti
mov
ljmp
xchg
or
mov
push
out
fucomip
scas
mov
test
mov
addr16
mov
or
into
lds
pop
mov
popf
add
out
fildl
int
and
inc
sbb
inc
xchg
aad
dec
mov
stos
mov
stos
mov
and
sahf
mov
sbb
inc
cmp
lods
out
lods
cs
shrb
repz
cs
std
subl
das
std
or
rolb
xor
enter
mov
mov
bound
stos
mov
sbb
shlb
jmp
out
mov
mov
mov
ljmp
mov
mov
push
lods
popl
loop
nop
mulb
jmp
push
inc
push
and
popf
loopne
loopne
jmp
jno
jnp
data16
out
pushw
adc
into
pushaw
out
push
push
dec
andl
xchg
mov
stos
fisubrs
mov
inc
xchg
xchg
stos
inc
and
jmp
adc
int3
ficoml
dec
push
pop
xchg
sahf
cmp
outsl
call
jl
gs
and
xchg
xchg
test
mov
movsl
aas
aam
xor
loopne
push
imul
cltd
adc
into
fdivrs
mov
ljmp
mov
jmp
push
in
mov
sub
scas
shll
mov
pop
cld
xor
call
fs
leave
add
mov
loop
xchg
push
lcall
mov
mov
push
jmp
repz
push
lods
in
test
xchg
mov
scas
fdivs
dec
mov
incb
mov
xor
movsb
add
insl
loopne
jmp
insb
test
std
mov
jl
xchg
cmp
cmp
divb
enter
out
jmp
lret
jmp
pop
push
cmpsl
pusha
sub
cmp
mov
imul
xchg
push
mov
mov
push
jmp
repz
mov
dec
xchg
shr
test
in
xor
adc
jnp
mov
gs
sub
inc
pop
cmp
cld
cwtl
xor
pop
push
or
jae
mov
mov
mov
insl
out
pushf
lods
inc
xchg
xchg
mov
addr16
je
rcrb
mov
mov
ljmp
std
fxch
sahf
push
bound
adc
imul
xchg
mov
jno
stos
push
sbb
adc
shrb
pcmpgtw
dec
in
mov
lahf
mov
lea
lods
std
push
mov
add
test
push
mov
frstor
sub
sub
mov
ja
add
mov
movsb
mov
jnp
shr
aas
lea
mov
ljmp
popf
cltd
mov
je
lods
mov
test
push
test
push
repnz
mov
cmpsb
cmp
mov
mov
jns
jnp
subl
jmp
je
sbb
test
in
sahf
ss
ds
mov
xchg
sub
mov
jle
data16
mov
jg
out
fsts
out
pusha
cmovg
push
mov
mov
loop
adc
xchg
dec
dec
mov
shrb
rolb
call
decl
mov
aam
or
ljmp
mov
mov
pop
scas
repz
pop
lods
sub
mov
inc
xchg
or
stos
inc
xor
pop
es
cmp
mov
shl
pop
mov
ljmp
adc
lds
out
icebp
inc
stos
lods
mov
jge
pop
cmp
mov
mov
jp
jmp
mov
addr16
aam
xchg
and
cmp
lods
push
jne
popa
mov
cmp
xor
mov
dec
mov
sbb
jnp
pop
push
movsl
add
mov
xlat
lods
aam
mov
lahf
loopne
adc
fwait
insl
or
mov
sub
mov
xchg
dec
mov
aaa
mov
cld
mov
pop
js
mov
cmp
sbb
pop
ret
rcr
stos
hlt
aam
popf
loopne
out
push
xchg
divb
rcr
icebp
adc
dec
xchg
outsb
mov
loopnew
test
je
gs
pop
test
dec
mov
xor
gs
stos
pop
pop
js
scas
clc
clc
push
lea
xchg
test
pop
mov
loopne
les
push
pusha
mov
mov
mov
out
mov
test
inc
js
shll
popf
mov
rcr
stos
and
addr16
mov
test
scas
out
pop
ja
mov
sub
sub
sub
xchg
je
popa
les
cmp
sub
push
mov
or
dec
lcall
iret
jp
jae
lahf
nop
loop
rclb
imul
js
jecxz
mov
push
cld
repz
cmp
jbe
cmp
sti
mov
push
repnz
pop
pop
xchg
xor
iret
or
out
ss
movsb
bound
js
ret
sti
sbb
enter
das
dec
test
or
mov
dec
push
shlb
xor
outsb
sahf
push
aaa
mov
add
xchg
and
dec
ret
pcmpgtd
add
ret
lods
inc
in
jb
xchg
push
pop
repz
and
mov
aad
aam
sub
nop
cmp
ret
idivb
pusha
lea
aaa
dec
repz
push
popw
cmp
test
jmp
mov
ficomps
lahf
out
mov
es
les
mov
xlat
inc
fstps
add
xchg
pop
sbb
addr16
adc
stc
mov
jmp
into
push
lods
out
jg
outsl
test
push
in
mov
push
outsb
fisttps
aad
fildl
sarl
jns
mov
pop
and
mov
shlb
bound
movsl
sbb
and
push
pop
repz
testb
je
pop
mov
bnd
push
lahf
push
jge
inc
cmpsl
fwait
leave
or
push
and
or
iret
push
mov
add
add
mov
xchg
fsts
mov
xor
shr
cmpsb
test
pop
adc
lret
mov
in
jo
call
push
mov
pop
pop
push
jecxz
in
fcompl
adc
or
aaa
in
cwtl
cmp
mov
inc
dec
adc
ljmp
imul
cmp
dec
je
movsl
jl
push
lds
ficompl
fs
int3
push
rclb
dec
push
lods
jno
lahf
je
xchg
cwtl
lahf
jp
pop
adcb
mov
lcall
fstpl
nop
mov
sub
cmp
add
test
jp
call
cmpsl
mov
xor
test
int
leave
dec
pusha
sub
sub
int3
in
js
ss
nop
jmp
test
inc
fists
and
cmp
inc
xor
sbb
loopne
sbb
aam
push
mov
mov
mov
and
loop
inc
adc
push
insl
cmp
push
mov
push
jnp
xchg
repz
mov
lret
je
fstpl
and
pop
cmp
sbb
add
mov
cmp
push
test
movsb
std
dec
out
lahf
pop
jge
push
mov
test
and
test
adc
mov
add
call
pop
dec
add
les
test
cmp
subb
int
sub
jecxz
mov
adc
mov
push
ljmp
aam
and
mov
add
mov
jmp
adc
loopne
and
outsb
out
mov
ret
xorl
mov
xor
push
cwtl
xchg
jmp
jp
inc
ret
lock
and
into
int
enter
push
or
pop
mov
mov
fldcw
js
andl
add
mov
add
iret
clc
popf
pop
push
in
pusha
stos
enter
xchg
xchg
adc
shrl
repz
cld
dec
rcll
or
xor
in
add
into
in
and
popa
je
cld
or
sbbb
cld
sahf
push
sub
xchg
sub
test
xchg
mov
or
ret
dec
lcall
mov
stos
stos
pop
push
push
sub
or
imul
dec
xchg
pop
push
imulb
mov
xchg
xchg
lcall
enter
adc
pop
into
mov
mov
fdivr
push
cmp
cs
je
jne
jl
test
mov
push
mov
cmp
mov
and
arpl
jae
mov
cmp
and
clc
out
incl
sbb
and
shlb
cld
mov
scas
fmull
or
xchg
push
pushf
sub
xchg
les
lea
loop
imul
gs
or
data16
mov
arpl
fdiv
push
pop
clc
cmp
fisubl
cltd
xchg
out
xchg
mov
je
rcrb
outsb
enter
push
pushf
pop
adc
shlb
sbb
in
inc
lahf
test
inc
in
into
fcoml
mov
adc
enter
cld
jbe
mov
enter
cld
stos
push
mov
xchg
notb
xlat
mov
pusha
in
testb
into
stos
mov
mov
inc
cmpl
les
add
mov
push
mov
mov
les
xchg
mov
leave
mov
pop
add
add
js
into
inc
data16
gs
xchg
mov
dec
pop
rol
inc
mov
push
lcall
int3
ja
or
push
les
pop
enter
rclb
push
test
pusha
insl
lret
ja
lret
repnz
sub
in
add
outsb
fs
fstpt
imul
dec
and
nop
mov
xor
lods
jle
add
inc
aas
imul
lea
lea
jmp
mov
fldenv
xor
pop
mov
dec
fbstp
add
popf
dec
popf
scas
mov
test
push
push
aad
sbb
stos
jo
pop
jge
xchg
lds
jg
ljmp
xchg
jb
dec
in
lods
loopne
rclb
jmp
sub
scas
jo
lock
jae
mov
jo
mov
or
inc
in
movsb
cmp
adc
test
setg
xor
notb
dec
add
mov
lret
push
test
cwtl
and
pop
hlt
scas
sbb
sub
jecxz
pop
sahf
pop
or
and
and
stc
rcl
test
xchg
mov
add
xchg
xor
daa
addl
in
js
imul
idivl
stos
jb
iret
mulb
mov
ss
stos
inc
sti
xor
stos
ret
cmp
ds
xchg
dec
lret
daa
ret
inc
push
ret
push
hlt
scas
mov
push
xor
enter
jle
xchg
mov
sbb
mov
lods
xchg
jecxz
in
decl
stos
mov
lcall
mov
add
lcall
push
popf
dec
outsl
mov
adc
ret
mov
adc
outsb
cmp
inc
int
mov
jl
mov
call
mov
mov
sbbb
das
in
dec
and
mov
jge
mov
push
test
je
aam
les
add
in
sub
les
push
add
push
ror
mov
adc
push
mov
dec
inc
clc
pop
inc
inc
lods
lcall
add
dec
push
lret
xchg
mov
cmp
in
dec
pop
addr16
mov
push
lahf
dec
push
orl
push
sbb
es
mov
or
push
pop
xchg
dec
jmp
xchg
out
inc
adc
sbb
adc
jo
jb
in
pop
in
dec
jno
insb
jne
adc
mov
add
test
xor
scas
in
xchg
dec
xchg
hlt
repz
xchg
pop
pusha
jno
adc
mov
add
adc
lock
sahf
rcrb
mov
call
sbb
stos
or
jmp
or
out
inc
fstpl
call
add
jle
std
push
jle
shll
mov
xor
pop
fdivs
or
push
cmpsl
decb
rcrl
push
mov
xchg
pop
or
cmpsb
lods
cs
int3
jp
outsl
je
mov
aad
lea
repz
hlt
and
negl
shll
pop
sbb
cmp
jns
ret
in
inc
xchg
int3
iret
dec
notb
decb
mov
loope
push
mov
aas
cwtl
sub
loopne
adc
popf
mov
jbe
imul
xchg
push
out
cwtl
div
stc
jg
and
filds
or
das
dec
fwait
mov
mov
sti
mov
mov
shll
push
and
push
imul
cmp
or
int3
and
lret
rcrl
and
pop
and
add
mov
push
push
mov
aad
jns
sbb
sbb
pop
data16
xchg
call
push
mov
mov
shr
out
mov
jo
fwait
bound
push
push
add
ficoml
dec
insb
push
loopne
notb
jns
xchg
sub
lahf
outsl
push
lahf
arpl
mov
dec
imul
sahf
or
fwait
jmp
sub
in
repnz
leave
jmp
stos
cmp
push
adc
jmp
sbb
int
sbb
mov
xchg
push
std
jl
arpl
adc
mov
mov
xchg
jg
fdivrs
cltd
aam
cltd
ljmp
loopne
jnp
inc
loop
add
ljmp
mov
mov
dec
dec
lret
ljmp
mov
add
add
into
scas
xchg
loopne
add
lahf
xchg
jge
mov
jns
call
test
push
cltd
aam
xchg
adc
adc
cltd
or
fs
xor
push
std
pop
mov
sbb
mov
pop
or
xor
xchg
mov
mov
lods
dec
xchg
and
dec
jmp
mov
adcl
movsb
push
jp
pop
lock
notb
xor
dec
jmp
in
ljmp
out
adc
repnz
popf
shrb
bound
push
sub
push
push
ret
daa
mov
iret
sahf
pop
push
das
cwtl
mov
repz
or
cwtl
mov
push
xchg
or
pop
ss
ret
pushl
dec
or
add
xchg
xor
adc
xchg
push
dec
jge
push
cs
lea
iret
pop
lret
xchg
test
xchg
bnd
movsb
jg
and
lcall
mov
add
test
test
in
or
mov
clc
imul
lret
xorl
testb
mov
add
pop
add
jne
pop
in
mov
insl
push
fldt
mov
cmp
rclb
push
hlt
mov
mov
loopne
outsl
in
mov
mov
sbbb
mov
jmp
hlt
es
mov
adc
mov
addl
add
lods
push
add
mov
add
pushf
mov
adc
pushf
sub
aam
and
adc
mov
mov
shlb
jp
xchg
dec
jmp
int3
fucomip
sbb
testb
push
mov
xor
in
ljmp
mov
mov
dec
out
dec
push
cmpsb
or
scas
scas
ds
push
outsl
adc
fistpl
mov
dec
stos
adc
test
jecxz
jl
and
cmpl
push
xchg
bound
rorb
and
mov
mov
xor
arpl
mov
cltd
clc
mov
stos
or
dec
cs
xchg
ljmp
inc
or
pop
repz
fidivl
inc
inc
and
movsb
loope
leave
mov
cld
xor
repz
adc
or
jle
or
xchg
js
iret
xchg
pop
mov
outsl
sarl
fsubl
adcl
pop
push
insb
push
aas
lahf
jg
cmp
xor
dec
pop
dec
mov
test
insb
in
and
push
test
loop
inc
loop
sbb
test
cmp
out
or
add
push
stos
loop
xchg
sub
mov
pop
xchg
jecxz
ljmp
sub
xor
mov
ss
test
sub
into
leave
lret
out
lods
dec
repnz
push
enter
loope
or
ljmp
shrl
xchg
lret
pop
lret
and
frstor
sar
mov
lahf
or
in
pop
mov
loop
repz
in
jne
int
jae
push
outsl
xchg
into
sbb
roll
clc
jmp
pop
movsl
add
cmp
add
lods
push
cltd
mov
push
mov
push
scas
mov
lea
mov
aaa
add
lcall
arpl
push
nop
dec
ret
xorl
stc
arpl
out
add
xchg
and
out
stos
add
addr16
push
pushf
dec
vucomiss
in
and
je
imul
and
xchg
pop
cwtl
pop
xchg
das
dec
repz
cmc
mov
loope
rcrb
or
sub
sbb
rcrb
dec
decl
test
setne
call
pop
cmp
daa
mov
inc
push
ret
adc
ss
inc
mov
shr
xchg
jo
out
mov
add
call
scas
aaa
and
adc
repnz
loope
xchg
sbb
in
fimuls
movsb
andl
xchg
or
jns
fcoms
mov
sub
dec
jmp
and
adc
adc
andb
pop
fistl
cmp
xchg
stos
pop
std
push
nop
aad
adc
ljmp
sub
popl
js
fs
bound
mov
in
ret
in
jle
loopne
insl
xlat
jle
push
cwtl
stos
jmp
or
rcl
mov
jae
aad
test
push
cltd
sbbb
jp
out
cmp
icebp
out
inc
es
adc
movsl
pusha
cmp
jo
imulb
push
idivb
push
outsb
mov
cld
dec
adc
jno
push
xor
adc
mov
jno
mov
and
xchg
inc
jns
or
fs
sub
cmpsb
in
lock
test
aas
sub
in
out
xchg
in
jmp
int
add
clc
inc
lock
movsb
sub
sbb
jge
test
je
jg
or
dec
ljmp
push
mov
adc
stos
test
or
push
mov
loopne
mov
dec
notb
cltd
adc
add
pop
dec
outsl
and
fnsave
mov
lahf
cld
decb
xchg
aad
popa
cwtl
cmp
jns
push
pop
dec
pusha
cli
and
xor
hlt
jbe
push
jnp
jno
mov
sahf
popa
mov
push
mov
mov
sbb
fistpl
jg
mov
sahf
mov
sub
xchg
stc
cmp
mov
or
mov
mov
popf
xchg
add
adc
cli
dec
mov
xchg
cli
jno
sub
jbe
cmc
cmp
out
in
gs
xchg
bound
fstps
mov
loope
sbb
adc
inc
xchg
imul
lods
repz
add
cltd
test
rcr
iret
push
insl
test
das
mov
int3
aad
out
mov
pop
push
popf
loop
jmp
std
cld
testb
mov
and
movsl
mov
gs
xor
test
fwait
mov
ja
sbb
and
rolb
fidivl
aam
loopne
ljmp
mov
jmp
cli
add
sti
mov
sahf
subl
aas
pop
loop
mov
cmp
mov
lahf
out
dec
movsl
sbb
push
and
lods
mov
icebp
push
mov
cltd
sbb
push
jg
lret
sub
out
popa
imul
sub
push
loop
gs
arpl
push
in
or
xchg
repnz
fwait
or
push
mov
push
xchg
addr16
in
mov
js
and
dec
mov
hlt
jmp
popa
in
mov
jp
mov
faddl
cmc
pusha
lea
into
imul
imul
insl
inc
ret
cmpsl
jno
call
decl
scas
stos
add
sbb
ds
cmp
xchg
mov
mov
mov
dec
outsl
pop
stc
cmp
outsl
or
mov
es
in
or
add
inc
je
lcall
mov
or
call
xchg
or
xor
aam
sahf
out
outsb
xchg
les
aaa
xlat
sbb
ss
jecxz
rclb
inc
in
sbb
divb
jecxz
jnp
out
dec
daa
aaa
add
inc
add
mov
out
outsl
das
xor
or
adc
leave
imul
shrb
inc
or
or
inc
sbb
jb
test
cmp
jmp
or
inc
mov
ret
xor
cli
inc
or
xchg
lods
push
inc
mov
push
fisttpll
sbb
js
and
mov
adc
jbe
test
jmp
pop
xor
xchg
dec
pusha
jne
pop
popf
mov
stos
inc
mov
mov
mov
popf
pushf
ss
jb
sub
popa
push
mov
das
sub
mov
lret
in
xchg
movsl
xchg
nop
lcall
js
outsb
mov
bound
sbb
mov
jnp
mov
cltd
sarl
cmp
xor
jp
sbb
mov
pop
bound
cmc
clc
add
movsb
xchg
in
sbb
stos
cwtl
push
js
sub
cs
xchg
test
or
cli
stos
pop
lods
jbe
cmc
mov
stos
cmp
outsb
out
xchg
push
push
into
xchg
fs
mov
mov
xchg
aam
gs
sbb
xchg
adc
and
add
sub
push
xchg
mov
mov
push
push
jl
xchg
adc
jle
fcoml
push
movsb
jg
test
aam
ficomps
mov
jo
rcll
or
jl
sbb
andl
test
add
stos
xchg
repz
addr16
iret
mov
test
fcoms
xchg
push
imul
pop
in
insl
dec
adcb
or
ss
mov
fdivr
mov
gs
pushf
stc
lods
stos
lds
mov
push
sar
jne
xor
fs
testb
addr16
mov
lret
and
dec
data16
mov
fcomp
xchg
fistps
cmp
in
mov
outsl
jo
aam
push
add
addr16
sub
mov
mov
lods
jmp
add
and
lret
in
fisttps
js
sahf
mov
push
pop
or
call
cmc
mov
data16
lret
fwait
and
test
mov
je
mov
jns
cltd
mov
loopne
xchg
push
sub
mov
sbb
andl
test
imul
jnp
sub
aad
stc
add
rolb
in
lret
adc
out
push
sti
loop
test
lods
fdivrs
adc
add
repnz
xchg
cwtl
xchg
lret
mov
in
jae
cmp
cli
push
in
xchg
mov
std
or
xchg
push
nop
xchg
loopne
aas
movsb
lahf
pop
push
sbb
xchg
jle
or
fistpl
fwait
ss
push
xchg
jb
rol
scas
rcrl
xchg
xchg
test
out
pop
cmc
push
jp
cmp
and
mov
pusha
xchg
sub
pop
aas
mov
sbb
push
mov
or
cmp
pop
or
loop
dec
cs
mov
test
repnz
mov
xor
push
cmp
push
and
xchg
push
mov
add
inc
jae
mov
xchg
mov
in
inc
sarl
ret
out
push
ljmp
stos
jne
mov
jns
push
loopne
gs
adc
or
std
lret
and
sbb
inc
mov
stc
or
test
sbb
shlb
push
imul
orb
repz
pop
cmp
ljmp
push
shlb
rclb
aas
mov
test
je
adc
mov
imul
sbb
adc
or
xor
clc
mov
rolb
mov
mov
pushf
nop
push
js
mov
mov
cld
push
je
lcall
xchg
jg
push
mov
sarb
stos
out
loopne
mov
xor
sbb
imul
insb
sbb
xchg
popf
lea
in
cwtl
mov
cmp
pop
test
sbb
repz
adc
rcll
cmpsb
jnp
movsl
je
mov
testb
push
adc
orb
pushf
push
mov
insb
push
js
shrl
and
lcall
xchg
enter
mov
mov
mov
aad
pusha
hlt
ret
leave
xchg
inc
mov
sbb
lahf
fs
add
sbb
lret
cmpsl
cmp
mov
int
inc
push
in
cmp
cmp
pop
pop
aad
incl
lret
stos
xchg
add
push
inc
cwtl
lret
pop
fnstenv
mov
jnp
mov
mov
lea
inc
mov
rclb
push
mov
sub
gs
mov
test
std
sub
into
repz
xor
mov
es
pop
sbb
repz
test
pusha
jle
icebp
fucomip
ret
lcall
mov
mov
sub
lock
cmp
andl
dec
lahf
repnz
fcmovnbe
sbb
pop
jle
stos
sbb
jne
sbb
out
mov
inc
loopne
sbb
jp
insb
adc
ja,pt
lods
test
outsb
mov
daa
insb
shll
add
mov
data16
fwait
inc
xchg
sub
outsb
shr
jb
shlb
jmp
shr
mov
movsb
pop
sub
in
inc
inc
test
xorb
jg
cltd
lds
xlat
pusha
push
xchg
add
sub
lods
sbb
cmpsl
jp
adc
xor
pop
dec
icebp
notb
or
lods
push
stos
std
pop
repnz
push
mov
adc
daa
pop
jge
jno
sbb
jno
adc
mov
mov
rcll
repz
lock
xor
or
sbb
insl
leave
ja
ja
push
mov
mov
sbb
addr16
rol
in
in
icebp
mov
mulb
jne
mov
and
jmp
jo
iret
sub
enter
mov
lods
pop
loop
fwait
mov
push
bound
js
push
mov
sahf
mov
jg
pop
jmp
lcall
xchg
ret
push
mov
xor
fstpl
mov
mov
jg
xchg
xchg
mov
xor
addl
and
gs
lods
jmp
cmp
mov
jo
in
push
mov
pop
in
sti
sbb
add
mov
data16
lahf
and
jno
stos
xlat
add
push
pop
add
sarl
aam
dec
in
int
jl
int
dec
jl
test
outsl
test
in
arpl
fiadds
or
xorb
push
inc
xorl
out
rcll
outsb
mov
nop
ljmp
sahf
rcrl
mov
cmp
push
aam
repnz
aaa
push
or
xchg
sub
scas
bound
push
sbb
xchg
push
insb
addr16
call
or
or
lock
in
in
xchg
inc
mov
addps
rorb
mov
mov
dec
pop
mov
inc
xchg
push
stos
jp
stos
mov
inc
adc
or
xchg
repz
sbb
mov
adc
add
push
jle
addr16
sbb
shll
repz
test
xchg
shlb
cmp
push
mov
aam
bound
xor
cmp
push
sbb
lock
inc
adcl
iret
xchg
jecxz
les
push
or
mov
imul
icebp
testb
bound
in
shl
scas
nop
mov
xchg
or
xchg
out
out
mov
int3
das
inc
and
adc
sarb
sub
shll
pusha
stc
aam
push
xchg
fldt
push
mov
mov
out
lcall
shll
pop
mov
or
dec
cmp
pusha
mov
push
pop
xchg
jns
add
fcomps
popf
movsb
adc
xor
mov
xchg
stos
fwait
aam
ljmp
clc
ficoml
mov
jne
cli
add
addr16
dec
fcmove
pop
jecxz
repz
adc
mov
lods
cwtl
and
fidivs
popf
lods
lret
enter
in
repnz
jl
loop
outsl
int3
adc
jge
and
inc
xchg
ret
dec
or
std
jp
call
adcb
mov
dec
jge
fs
test
push
cwtl
xchg
sbb
pop
gs
aas
or
pop
cltd
leave
mov
jle
mov
nop
mov
popf
cwtl
push
and
negb
pop
xor
cmpsb
jne
stos
push
jbe
divl
cmp
stos
pop
les
data16
hlt
lret
add
adc
jmp
sub
pusha
int
bound
sub
mov
bound
mov
xor
or
sbb
fs
pop
stos
cmp
xchg
clc
in
mov
fcoml
jb
xchg
and
cli
test
xchg
adc
jmp
in
xor
cmpsl
insl
cmp
clc
movl
jge
inc
or
test
hlt
imul
mov
push
cmp
enter
mov
sbb
mov
nop
pop
or
out
pop
xchg
add
add
add
xchg
lock
xchg
fdivl
xchg
in
sbb
cmc
test
mov
cld
mov
dec
in
mov
add
add
adc
sub
or
or
les
mov
adc
sub
xor
scas
push
cltd
xor
adc
arpl
pop
repnz
jo
in
push
ljmp
ficomps
xchg
jae
sub
xchg
test
shlb
test
pushf
mov
enter
bnd
adc
in
and
clc
xchg
ret
in
lcall
mov
or
dec
cmp
ljmp
mov
push
adc
push
into
sbb
loop
stos
testb
mov
gs
mov
insb
mov
xor
hlt
test
in
call
push
and
xor
aam
sub
in
cmp
js
cs
int3
push
daa
jge
fs
cwtl
adc
fildll
imul
es
pop
xchg
fninit
jnp
mov
mov
cmp
pop
movsb
sub
cmpb
jmp
fildll
pop
lods
push
mov
add
popa
xor
and
inc
xor
mov
mov
push
dec
jne
pop
bound
sbb
nop
add
clc
fdivs
cmc
add
cmp
popf
mov
sbb
pop
xor
ss
jge
sub
leave
icebp
mov
cld
and
rorb
imul
or
ret
mov
pop
jmp
mov
mov
out
xor
movsb
add
cmpsb
jg
bound
fs
loop
jne
dec
xchg
daa
imul
andl
daa
mov
mov
scas
call
jbe
mov
nop
mov
and
gs
je
hlt
sub
pusha
insl
xchg
cs
jmp
xchg
outsl
mov
xor
and
pop
divb
test
sbb
jnp
stos
gs
insb
lcall
dec
jae
aaa
adc
push
mov
sub
out
push
mulb
test
or
jns
push
rep
nop
lcall
loopne
call
in
adc
ljmp
mov
add
lcall
pop
jbe
add
call
jno
adc
jle
gs
mov
mov
std
les
inc
xchg
dec
push
gs
loop
push
pusha
xchg
jle
pop
mov
sahf
mov
sbb
cmp
or
lds
pop
add
adc
add
inc
test
test
lds
mov
jg
test
xchg
insl
xchg
adc
movsb
call
push
in
add
pop
int
sub
xorb
xor
das
sub
lcall
mov
mov
inc
mov
pop
gs
jecxz
adc
add
test
rclb
les
sbb
in
rorb
pop
pop
xor
inc
sbb
mov
push
je
subl
into
lret
testb
cmpsb
adc
mov
test
rol
jmp
int
or
mov
imul
sbb
fldt
into
or
test
es
nop
gs
bndldx
jo
std
inc
enter
add
lods
aad
decb
in
fldcw
rcrb
push
xchg
xchg
call
pop
xor
call
loope
ret
xchg
adc
lcall
js
mov
pop
adc
add
add
or
test
insb
mov
ret
add
cs
push
inc
gs
stos
hlt
lods
test
adc
into
hlt
into
je
gs
lods
mov
bnd
inc
sbb
enter
ljmp
xchg
mov
sub
sbbb
mov
in
mov
cli
sti
mov
push
mov
inc
or
lea
popf
mov
xchg
xchg
adc
cmp
insl
push
adc
in
fsubrp
inc
xchg
mov
or
mov
mov
repnz
pop
mov
add
mov
enter
repnz
cmpsb
push
pop
xor
or
testl
jb
or
xchg
fmuls
nop
cmc
movsb
xchg
jp
jmp
xchg
and
xchg
push
add
mov
or
or
jne
pop
loopne
subb
pcmpgtb
hlt
stos
push
movsb
or
loop
arpl
test
sub
les
pop
xor
lahf
mov
mov
lret
cwtl
lock
loop
fcoml
push
add
inc
enter
repnz
push
push
and
lret
mov
mov
shr
dec
clc
and
mov
mov
mov
sbb
ficoms
stos
inc
push
icebp
insl
xchg
adc
dec
fcompl
xor
je
movsb
cmp
in
add
or
test
cli
add
adc
ljmp
loopne
test
sub
outsl
int3
push
and
fs
stos
sahf
popa
add
sbb
mov
movsb
fs
cwtl
js
xchg
daa
fwait
jne
aaa
into
bound
data16
out
pop
pop
dec
subb
adc
and
or
lea
insl
push
clc
xor
pop
imul
inc
push
in
leave
jp
push
lods
pop
pushl
pushf
mov
sbb
in
sbb
popf
ljmp
cwtl
lcall
test
testl
push
xchg
xchg
push
hlt
rcrb
loopne
es
mov
adc
loop
sbb
inc
into
cwtl
rcr
adc
jg
sub
loope
add
add
jae
mov
test
sahf
gs
mov
mov
add
out
call
jp
cld
mov
and
rclb
outsl
test
shrl
jns
sub
lcall
movsl
lret
ret
fsub
sub
fbld
inc
adc
dec
adc
add
add
push
adc
add
adc
pop
adc
add
adc
adc
or
cld
ljmp
shrl
jns
add
lds
push
dec
jbe
fxch
idivl
sahf
shl
lret
pop
data16
incl
sub
test
test
mov
cmp
fsubs
or
icebp
sbbb
push
popf
dec
scas
jno
divb
mov
out
sti
shll
inc
mov
js
mov
stc
fs
mov
xchg
dec
add
mov
and
ja
cld
hlt
std
and
lret
jmp
adc
xchg
fdivl
xor
jp
adc
mov
mov
jbe
and
dec
add
xchg
push
and
lea
cld
pop
ljmp
iret
movsl
inc
arpl
mov
pop
jge
cli
mov
cltd
pop
mov
mov
lret
push
bound
and
mov
insb
and
jg
sub
dec
rcrb
hlt
mov
cmc
iret
xchg
lea
shll
test
xor
loop
loopne
in
dec
cmpsb
movsb
in
lahf
jge
sti
or
loope
mov
sub
in
lock
bound
orl
mov
out
jb
aam
jg
in
mov
mov
test
scas
xchg
push
xchg
popa
or
push
jl
mov
movsl
add
shll
fistpll
les
or
ret
stc
shlb
cmpsl
dec
in
jbe
sbb
lods
mov
loop
mov
test
in
repnz
mov
mov
ret
test
jecxz
repz
test
aas
sub
xchg
inc
or
mov
lret
or
pop
push
loop
out
ds
xorl
jne
mov
dec
push
jbe
adc
in
sub
sub
lock
insl
pop
fcmovnb
push
subl
lea
adc
aad
and
jns
lahf
jno
sbb
and
in
leave
push
fwait
push
stos
push
out
mov
cmpsl
pop
pop
fwait
mov
cmp
cmpsb
mov
dec
fcom
sbb
rolb
ja
push
movsb
lret
pop
inc
lods
pop
push
dec
repz
push
xchg
call
popf
mov
jmp
les
mov
pop
push
fbstp
or
xchg
out
adc
inc
dec
push
loopne
test
in
call
dec
subb
aad
mov
inc
dec
xchg
dec
sub
icebp
sub
shrb
inc
lods
stc
outsb
leave
xlat
jae
aad
rcrb
mov
mov
out
push
jo
xchg
jbe
stos
andb
jg
cmpsb
ds
or
jle
cli
int3
dec
insl
xchg
imul
mov
shr
dec
ljmp
push
lcall
test
in
ss
cmc
nop
sub
jge
xchg
lcall
mov
mov
shlb
push
jmp
jne
nop
sub
in
adc
xchg
xchg
mov
xor
arpl
push
das
jge
fs
cwtl
and
xchg
fildll
mov
scas
int3
adc
fs
dec
stos
ret
xchg
loop
or
push
xchg
fsubr
push
ljmp
cmp
mov
ljmp
add
std
fcoms
outsb
lcall
test
in
push
push
les
xchg
pop
mov
add
mov
enter
repnz
push
rcrb
out
in
adcb
fidivs
pop
rcrb
in
push
xchg
fsubr
dec
ljmp
ds
test
in
outsb
call
mov
xchg
mov
sbb
dec
push
enter
push
inc
mov
dec
in
loop
sbb
dec
xchg
mov
sahf
adc
or
push
or
ret
xchg
xchg
les
insl
jbe
cwtl
xchg
push
mov
cmp
mov
les
adc
add
hlt
outsb
in
repnz
cmpsb
mov
add
mov
enter
repnz
pop
ljmp
in
mov
mov
int3
adc
jge
fs
xchg
ret
stos
insl
cmpsb
jl
fs
cwtl
mov
xchg
cs
std
jle
out
shll
insl
dec
mov
add
mov
enter
add
lcall
test
push
push
cmp
pop
mov
repz
loop
loopne
adc
ljmp
repnz
lcall
in
stos
repnz
push
jo
in
xor
push
xchg
lret
in
lcall
cmpsb
jl
fs
pushf
stos
push
adcb
std
jp
call
in
lcall
test
in
cmp
adcl
fldcw
pop
or
test
ljmp
int3
pop
repz
jno
xchg
add
or
loop
sbb
ljmp
push
addb
push
jge
sub
sbb
xchg
negb
jns
dec
insl
jle
mov
or
add
mov
lret
jle
call
or
mov
int3
sbb
jge
fs
cwtl
and
or
pushf
in
sbb
test
lcall
scas
fwait
shrb
sbb
add
iret
push
in
in
xchg
les
test
in
ds
and
in
xor
sbb
inc
int3
repnz
jge
fs
cwtl
cmp
mov
test
push
ljmp
lcall
mov
loopne
dec
cwtl
mov
gs
xchg
push
mov
add
sti
or
mov
int3
mov
inc
mov
test
push
push
add
xor
insb
mov
mov
scas
int3
lret
mov
fs
fisubs
xchg
mov
or
mov
mov
xorb
das
in
dec
push
lock
pop
inc
mov
pop
in
cli
push
pusha
sbbl
pop
int3
xor
jge
gs
loop
data16
enter
repnz
mov
cmp
pop
xchg
mov
adc
mov
cmpsb
fwait
enter
test
sbb
add
mov
lret
inc
and
mov
push
dec
sub
outsl
int3
add
jge
negb
or
push
lods
test
ljmp
into
lcall
xchg
pop
cwtl
les
push
mov
add
mov
enter
in
jle
jecxz
mov
lahf
mov
push
pop
cmp
arpl
push
xor
fs
cwtl
xor
out
sbb
in
xchg
push
mov
in
inc
ljmp
add
mov
fucomip
inc
push
cld
add
fs
ficoms
inc
add
mov
enter
repnz
sub
adc
or
push
xchg
cmpl
jge
add
inc
xchg
mov
sub
adc
out
or
repnz
push
cmp
in
repnz
push
mov
cmpsb
mov
int3
idivb
jge
fs
cwtl
sub
sahf
popa
cld
cwtl
mov
push
int3
ret
js
cs
push
stos
sub
std
int3
mov
cbtw
mov
into
mov
clc
pop
int3
std
in
mov
gs
bound
add
mov
lret
jp
loopne
gs
push
mov
test
adc
xorl
xlat
iret
inc
xchg
mov
lcall
enter
repnz
push
xor
in
repnz
push
mov
scas
mov
int3
decb
jge
ficomps
sbb
mov
enter
mov
lcall
je
lock
cmpsb
mov
test
push
pusha
mov
test
in
and
cmpb
test
lods
or
push
jl
out
pop
int3
ds
jge
fs
cwtl
adc
mov
andl
jge
fs
cwtl
and
or
push
insb
pusha
in
ljmp
or
cmpsb
or
loop
add
in
out
in
xchg
xchg
xchg
scas
push
dec
and
or
and
jl
xchg
ret
mov
mov
push
insb
cmpl
das
int3
jp
mov
and
pop
repnz
push
pusha
jo
es
mov
in
jbe
xchg
xchg
ds
sub
mov
cwtl
mov
data16
rolb
mov
cld
xchg
push
mov
push
test
in
push
push
les
int
cld
lock
mov
push
test
jp
std
insb
xchg
sub
mov
rorb
mov
fcoml
pop
cld
jbe
jecxz
sbb
std
jns
mov
lcall
xor
adcl
addb
movsl
mov
in
fildl
and
stos
and
rorl
xchg
jecxz
sbb
sahf
in
shll
ljmp
sahf
rcrb
mov
adcl
adc
subb
lea
mov
add
or
arpl
ret
rclb
inc
gs
xor
sub
adc
mov
sarb
dec
imul
sti
jnp
cmpb
add
les
orl
lods
jb
or
push
je
push
iret
lea
int
inc
aas
mov
test
push
and
pop
enter
xor
push
inc
ljmp
pop
xor
andl
daa
les
mov
xchg
push
push
adc
xchg
sbbb
mov
ret
cmp
mov
push
lea
inc
frstor
xchg
mov
mov
push
or
outsb
insb
fldcw
iret
pop
xchg
popf
sarb
mov
lds
cmpl
inc
cmpsb
cld
inc
popf
jbe
jmp
sti
mov
add
sbb
or
movsl
int3
out
push
in
jecxz
add
or
in
mov
cmp
cmp
pop
inc
add
or
movsb
repnz
or
dec
pop
adcb
imul
cmpsl
mov
and
cmp
mov
push
or
mov
lea
frstor
ror
xlat
mov
shlb
push
mov
divb
or
test
mov
clc
sub
in
sbb
mov
add
rolb
clc
cmpsb
rcl
scas
adc
cltd
sbb
movsb
pop
xor
xchg
xchg
lods
mov
mov
xchg
mov
ret
dec
or
or
xchg
repz
es
cmp
or
ljmp
push
mov
sbb
or
inc
fsubp
sbb
push
cmp
pop
mov
mov
sbb
mov
adc
test
mov
aaa
inc
insl
ss
xchg
scas
jb
out
sahf
lret
push
cmove
ss
jle
lret
out
test
or
iret
pop
fsubrs
ror
pop
iret
out
cmp
loope
je
mov
jb
mov
rcll
stos
mov
jl
jno
jnp
stos
pop
test
inc
push
pushf
insl
mov
les
inc
andl
ret
dec
lds
insl
push
imul
std
inc
mov
xchg
scas
fldcw
out
mov
xor
lock
dec
ljmp
inc
inc
cmp
fdiv
xchg
movsl
je
add
inc
xchg
lock
mov
loopne
add
notb
orb
dec
negb
jmp
or
in
ds
aad
mov
arpl
lret
lret
cwtl
inc
dec
sbb
fcmovnu
shrl
dec
enter
mov
loopne
push
mov
insb
ret
cmp
js
mov
pushl
hlt
lods
jge,pn
cmp
xchg
cs
sbb
or
dec
or
insl
scas
mov
enter
xchg
mov
add
cs
jge
addr16
mov
data16
loop
mov
lods
stos
add
ss
and
enter
insl
jo
rorl
lods
iret
and
popf
pusha
scas
push
mov
je
mulb
sbb
lock
gs
insl
test
fisubrs
out
ss
add
mov
and
in
sbb
cmpsb
cmp
idivb
xchg
sub
xchg
loopne
add
fnstsw
movsb
sub
insl
mov
jo
or
xchg
or
movsb
hlt
xor
xor
xor
xchg
inc
bound
adc
daa
rcrl
mov
adc
xchg
cltd
xchg
icebp
loop
mov
or
push
into
cmpsb
xchg
or
in
and
add
jnp
adc
mov
mov
pop
dec
movsb
popa
sti
mov
cwtl
enter
add
ret
out
push
call
nop
roll
loope
icebp
out
push
aam
ss
gs
inc
stos
add
mov
dec
push
mov
cltd
lods
push
push
lcall
mov
jl
push
incb
ret
adc
adc
sbbl
fiaddl
pop
sarb
pop
lock
lock
jle
lock
jle
lock
jle
lock
jno
test
mov
testb
xchg
daa
adc
mov
lret
arpl
lret
inc
inc
ret
lret
aaa
inc
sti
lret
das
inc
repz
daa
inc
jmp
pop
inc
jecxz
les
lea
lds
sbb
in
sbb
in
adc
add
xor
and
rcrb
out
sbb
out
and
sub
repnz
and
ljmp
mov
mov
sbb
sbb
adc
add
xor
and
mov
mov
ljmp
xor
les
ja
mov
mov
pop
mov
mov
mov
mov
sti
les
into
adc
mov
cmp
enter
lock
pop
loopne
mov
mov
hlt
pop
adc
pop
pop
xlat
sarb
mov
fisttps
xchg
leave
jnp
in
dec
orl
lret
cltd
pop
jge
minps
repz
fs
inc
sub
repz
and
jmp
add
push
andl
movsb
bound
imul
jbe
mov
adc
mov
je
sbb
cmp
icebp
dec
cmp
jo
adc
fisubs
xchg
leave
xlat
jno
xchg
bound
fdivrl
xchg
mov
dec
sub
sar
mov
pop
lahf
mov
sbb
cmc
jle
mov
jno
stos
pop
addr16
dec
push
lds
jge
int
jge
int3
fnsave
pusha
mov
xchg
sti
sbb
adc
ss
mov
mov
mov
mov
lcall
and
es
sub
mov
mov
ja
mov
xchg
jb
decb
sti
jecxz
repnz
cmp
and
push
mov
mov
repnz
jecxz
pop
mov
hlt
cwtl
rcrl
pop
sarb
iret
xor
ja
mov
gs
mov
cli
jecxz
mov
les
les
jle
lock
or
sub
and
insb
sub
mov
pop
sub
mull
stos
mov
mov
mov
out
cwtl
sbb
mov
mov
adc
jbe
daa
sub
jmp
daa
pop
aaa
xchg
mov
nop
daa
das
fistpl
dec
sub
mov
push
mov
aam
loopne
movsb
jle
lock
jle
lock
f2xm1
cmp
jle
fisubrl
jbe
out
pop
adc
mov
mov
aam
mov
or
mov
cmpsl
xchg
cs
test
mov
inc
test
pop
adc
fisttpll
clc
in
roll
xchg
jl,pt
mov
in
pop
jg
or
aas
aas
dec
repnz
mov
mov
movsb
test
cmp
repz
jmp
sbb
jecxz
adc
lahf
lret
pop
push
xorb
mov
dec
jno
cmp
jge
dec
dec
cmp
cli
daa
sub
out
daa
and
lahf
cmp
mov
ja
push
xchg
adc
mov
jno
cmpsb
adc
xchg
adc
pop
xchg
add
jbe
xor
dec
dec
leave
fistpll
dec
stc
fildll
dec
jmp
aad
mov
cmp
and
test
dec
dec
fistpll
dec
imul
mov
sub
adc
push
sbb
xor
ds
push
dec
and
jge
int
jl
jecxz
push
nop
xchg
mov
and
ljmp
test
fdivl
cmp
sarb
jno
cmp
loopne
outsb
adcb
enter
daa
push
and
daa
inc
and
daa
ss
cmp
xor
loope
push
ret
jmp
jp
lock
jle
lock
jle
lock
jle
lock
lock
cmp
imul
lock
jle
lock
lock
lock
lock
pop
xchg
aam
pop
xchg
mov
pop
cmpsb
rcr
scas
push
mov
clc
pop
jbe
call
pop
push
rorl
pop
push
sarl
pop
shrl
pop
rcrl
rorb
sarb
icebp
sub
xchg
mov
push
ficoms
dec
cmpsl
lcall
dec
jle
sbb
xchg
or
push
xchg
cmp
ss
sub
es
pop
sbb
xchg
dec
sbb
xchg
js
div
push
mov
cmpl
dec
daa
mov
and
sahf
and
daa
mov
or
jle
cmp
outsb
and
daa
pop
and
daa
dec
and
daa
ds
jmp
cmp
mov
mov
ficompl
pop
lret
leave
inc
dec
lret
mov
lcall
mov
mov
push
sbb
pushf
push
sbb
pushf
fsubrl
icebp
lock
xor
mov
test
out
nop
test
adc
in
sbb
rcl
xchg
jge
pop
out
lahf
push
adc
lahf
push
adc
lahf
ss
lahf
es
lahf
push
adc
pop
js
notb
push
mov
adcl
sbb
xchg
enter
clc
sbb
call
mov
and
daa
pop
and
daa
dec
and
daa
ds
and
mov
sub
fdiv
pop
jl
out
sbb
add
jg
jecxz
sbb
add
xorl
lret
push
lret
inc
lret
pusha
pop
cld
bound
in
inc
xchg
lea
inc
mov
mov
inc
ror
pop
inc
ret
shr
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
data16
aas
in
lcall
icebp
mov
dec
adc
and
cwtl
or
sub
icebp
insb
sub
repnz
add
or
xor
mov
xor
lret
and
iret
or
xchg
push
pop
orl
aaa
mov
loopne
mov
lret
ret
inc
inc
lret
mov
jae
lods
cli
jecxz
sbb
mov
rcrb
pop
adc
cmp
rcrl
sarb
sti
xlat
lcall
add
leave
mov
leave
mov
mov
adc
xchg
int
jge
int
jge
int
jge
int
jge
int
jge
int
jge
int
jge
int
jge
int
jge
push
ljmp
pop
aad
dec
push
vhsubps
mov
jge
int
jge
int
jge
int
jge
int
jge
int
jge
int
jge
int
jge
pushf
outsb
mov
inc
out
mov
jle
outsb
jno
mov
icebp
mov
sub
icebp
push
sub
icebp
pop
sub
icebp
adc
push
repnz
push
repnz
push
cmp
push
jle
lock
jle
lock
jle
add
mov
push
xchg
filds
dec
mov
incl
iret
idivl
repz
push
iret
xchg
mov
out
jnp
into
in
and
dec
outsb
xchg
push
dec
add
pop
daa
push
push
outsb
adc
push
pop
xchg
cmp
mov
sbbb
mov
mov
push
sub
icebp
pop
sub
icebp
inc
sub
icebp
dec
sub
divb
sub
pop
jle
lock
jle
lock
jle
push
adc
cmp
dec
jg
cmp
xchg
lock
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lahf
push
imul
es
pop
repnz
inc
pop
cltd
fstpl
mov
in
stos
fmull
dec
dec
fbld
dec
sbb
dec
adc
xchg
fdivrs
lods
add
lahf
sub
lahf
rclb
push
lahf
fcoms
dec
lahf
rclb
lahf
enter
mov
lret
xchg
mov
mov
mov
sbb
icebp
pusha
sub
icebp
push
sub
repnz
or
add
xor
aam
dec
repnz
repnz
lock
sti
jmp
mov
sarl
cmpsb
icebp
lods
sub
icebp
push
sub
icebp
push
sub
negl
xor
lock
jle
lock
jle
lock
jle
icebp
push
mov
pop
add
lret
sti
jp
repz
dec
lock
jle
lock
jle
lock
jle
lock
lock
jle
lock
jle
lock
jle
lock
jle
outsb
cmp
mov
mov
hlt
or
adcb
test
adc
sahf
jns
out
sahf
adc
lahf
xor
adc
aas
js
dec
cmp
jo
adc
fsubrs
in
sahf
jbe
mov
icebp
test
sub
repnz
adc
sbb
sti
cld
pusha
jle
adc
mov
lret
mov
rorb
ffreep
dec
outsl
fistps
dec
sbb
dec
adc
xchg
les
mov
cmp
cmpsl
and
les
mov
fs
daa
push
add
push
adc
hlt
movsb
cld
sahf
xchg
mov
adc
adc
push
or
dec
shll
out
mov
xchg
dec
mov
or
les
dec
push
clc
fisttpl
shll
lock
jbe
lock
jbe
lock
jbe
lock
lock
pop
xlat
jecxz
shrl
add
jo
outsb
data16
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
inc
mov
adc
xchg
stos
outsb
lret
inc
imul
ud1
test
dec
inc
and
pop
push
int3
jecxz
mov
test
add
xchg
test
adc
inc
faddl
sub
sub
cmc
fsubrs
adc
fcmovne
mov
iret
les
cmpsl
cli
test
lahf
cld
arpl
fcompl
out
in
leave
popa
inc
in
imul
cld
sbb
fs
mov
mov
push
in
sbb
out
sarl
pop
das
aam
pop
not
test
mov
aam
mov
mov
fiaddl
xchg
repz
adc
fsub
jecxz
inc
xlat
jnp
or
repz
pop
rorb
dec
out
push
pop
pop
or
push
pop
fdivl
xor
lret
nop
or
dec
push
cwtl
nop
lds
das
xchg
sahf
jg
mov
fstps
cmc
xchg
mov
sub
test
add
pop
dec
pop
icebp
cmp
mov
inc
dec
mov
and
sbb
dec
stos
cli
sbb
fdivs
lock
nop
out
mov
adc
pusha
mov
mov
push
lds
scas
sahf
inc
sbb
sbb
shl
out
inc
xchg
jecxz
pop
out
dec
lret
insl
cmp
xchg
mov
scas
pusha
cwtl
lds
xor
adc
add
mov
pop
pop
jl
sbb
mov
and
mov
popf
mov
bound
mov
inc
adc
mov
out
scas
push
data16
sbb
cmpsb
adc
outsb
lods
xchg
xor
addr16
cmp
das
jge
add
repnz
sbb
mov
mov
sub
push
pop
lods
scas
lock
je
scas
add
shrb
pop
out
sbb
jmp
aad
testb
out
xor
pop
out
out
mov
cmp
adc
ret
test
sub
or
rorl
aaa
enter
jl
test
jle
xchg
and
iret
clc
imul
mov
ss
and
int3
push
sbb
adc
xchg
mov
outsl
xchg
or
mov
jge
lahf
jg
les
push
add
enter
mov
sahf
push
dec
mov
cltd
int3
inc
dec
xchg
in
out
mov
test
cmpsb
hlt
int3
in
outsb
jle
adc
movsb
movsb
loope
lock
mov
jne
mov
fcoml
popf
add
daa
int3
sub
mov
pop
cli
pop
clc
inc
repnz
mov
lock
sub
aas
fdivs
xchg
pop
jle
jle
add
popf
int3
sub
in
in
xchg
xchg
jmp
mov
sub
and
lret
ja
not
pusha
mov
add
ja
aaa
int
mov
jae
mov
and
pop
call
jle
cmp
jl
mov
loopne
jecxz
in
pop
mov
mov
jg
lods
in
cmp
mov
pop
adc
push
repnz
add
cltd
or
sbb
xchg
jg
call
mov
cmp
daa
inc
push
lret
mov
lret
jp
aaa
and
shll
std
cmp
je
sub
sub
repnz
and
add
addb
inc
and
xchg
pop
push
test
mov
out
xchg
cmp
dec
or
pop
inc
repz
push
jle
cwtl
xchg
sbb
icebp
sub
popa
insl
and
dec
js
pushf
lret
cmp
mov
jnp
scas
lock
loope
push
adc
sbb
xchg
cmp
inc
and
daa
xor
out
adc
xor
repz
sbb
daa
fwait
mov
mov
mov
xchg
xlat
sbb
rcrb
xchg
mov
xchg
push
cs
aas
pushf
xor
inc
pop
int3
rol
loopne
shll
lahf
jns
push
les
lea
mov
jle
cmp
fimull
in
jbe
mov
hlt
pop
jg
mov
sub
mov
mov
lahf
xchg
int3
out
cmp
cli
aam
mov
cmp
xor
sub
and
and
call
inc
xchg
ret
pushf
xor
or
mov
jge
int
mov
loop
push
mov
ljmp
dec
or
xor
repnz
lret
mov
mov
cmc
movsl
lock
mov
or
jns
pop
scas
ret
sahf
cmp
xor
cmp
repz
xor
xchg
push
cs
push
fwait
loope
mov
into
je
lcall
loopne
xchg
sahf
stos
mov
xchg
xor
cmp
adc
gs
mov
cltd
add
mov
cmp
repnz
mov
xchg
in
ret
pop
fisttpl
jge
dec
inc
and
mov
fisubl
mov
fdivrl
pop
sbb
cmp
idiv
xor
repnz
clc
adc
test
fs
cwtl
or
clc
lcall
cmpsb
push
or
cltd
dec
mov
sub
insl
push
rol
call
xchg
testl
fs
or
pop
clc
push
test
cld
out
mov
xchg
jecxz
mov
mov
scas
daa
cmc
inc
hlt
andb
jl
cmp
adc
xchg
adc
mov
pop
mov
pop
outsl
int3
clc
inc
sub
push
inc
adc
jmp
xor
rcrl
or
aad
jns
add
jno
add
xchg
orl
into
xchg
loopne
xor
mov
mov
pop
ljmp
xor
jae
nop
push
test
mov
fldenv
xchg
ljmp
outsl
out
decl
add
pushf
fsubs
sub
inc
fdivr
inc
xchg
inc
mov
or
std
xor
cmp
mov
mov
scas
clc
add
or
out
rcll
push
cmp
js
clc
jo
xchg
push
nop
mov
in
cmpsb
jp
mov
mov
mov
mov
js
xor
lock
aaa
or
ficoms
cs
adc
lahf
or
fisubs
pop
ljmp
mov
out
cmp
rol
or
pusha
test
xchg
aad
aaa
test
push
lahf
or
insb
pop
stos
xlat
pop
inc
idiv
enter
sti
jbe
fdiv
rolb
inc
iret
aam
jo
mov
shlb
inc
pop
std
push
dec
add
inc
sbb
adc
mov
xchg
push
push
ljmp
sub
cmp
pop
adc
push
lret
out
lahf
sarb
fnsave
dec
outsb
jno
mov
in
jo
scas
repz
jle
lock
jle
lock
jle
xor
push
jmp
movb
int
pop
lods
jno
lock
push
dec
arpl
rolb
pop
inc
ret
in
pushw
scas
icebp
sahf
mov
mov
les
lock
pushf
lock
rcrb
out
push
into
xor
int
mov
mov
cmp
xchg
mov
jmp
pop
test
and
cmp
ret
cwtl
inc
pop
jo
addr16
cmp
out
dec
push
lret
and
mov
mov
cwtl
xor
cmp
js
push
data16
mov
fsub
sarb
in
pop
mov
fs
sub
cwtl
dec
adc
cmp
jge
jecxz
dec
hlt
mov
push
xchg
or
jge
int
cli
or
test
fisubrl
sub
jle
lock
pop
or
outsb
xor
sbb
mov
inc
fstpt
mov
clc
imul
sub
jge
lret
jg
das
mov
mov
mov
mov
push
push
pop
jecxz
dec
push
or
jge
int
jg
lea
in
mov
mov
add
bound
sbb
adc
mov
xchg
ds
jo
cs
xchg
xor
icebp
pop
adc
mov
movsb
mov
pop
push
mov
mov
add
mov
and
test
sub
sbb
scas
mov
xchg
mov
add
xchg
jg
cmp
test
insl
or
loop
pop
in
lret
lahf
inc
bswap
insl
inc
xor
fs
aam
jle
scas
xchg
in
xlat
xchg
xchg
add
xchg
mov
js
xchg
jle
je
cltd
int3
xor
push
test
loopne
push
or
jbe
subb
outsb
add
cli
insb
mov
xchg
insl
test
aas
cmpl
sbb
or
out
jge
xchg
or
push
cli
cmpsl
es
xlat
xchg
add
add
inc
fstpt
pop
pop
ror
pop
inc
out
or
nop
jge
xchg
cmp
or
das
and
pop
clc
sub
repnz
and
ljmp
lret
rol
mov
mov
or
push
aaa
push
inc
fwait
lret
pop
in
mov
adc
xchg
fsub
push
or
inc
addr16
stc
lock
mov
inc
out
rcll
mov
lret
inc
add
jmp
xor
addr16
inc
sbb
out
fadd
ss
into
xorb
mov
out
add
or
mov
push
dec
std
cli
dec
lcall
lahf
mov
push
push
jnp
dec
das
lret
and
inc
int3
inc
cmpsb
les
xor
push
and
cmp
push
dec
cltd
inc
sub
cmp
and
in
fsubrs
fnstsw
jge
xchg
sbb
mov
mov
cwtl
aam
popf
push
cmpsb
insl
xor
push
or
int
jge
int
jge
int3
add
push
std
test
repnz
pushf
pusha
add
scas
and
mov
adcl
mov
ret
xor
ret
lods
mov
pop
xchg
push
shll
movsb
inc
cmpsb
leave
lods
and
leave
push
inc
leave
pop
dec
into
cld
mov
adc
xchg
pop
das
pusha
jns
subb
xor
sub
cld
int
stc
push
lods
adc
xor
mov
pop
fsubr
dec
cmp
pop
xchg
mov
add
push
xchg
stc
mov
movsb
xchg
das
out
mov
sub
pop
divl
movsb
pop
jmp
sbb
xlat
pop
mov
pop
or
mov
xor
cmpsb
clc
rolb
xchg
add
std
in
dec
loope
pop
jnp
aam
pop
sub
adc
pop
pushf
rolb
adc
lret
mov
clc
dec
push
lods
pop
pop
out
sbb
hlt
xchg
ss
fdivrs
inc
or
outsb
std
push
call
sub
clc
scas
push
das
pop
loope
push
push
call
jo
xor
sbb
cli
lock
pop
cmc
aad
cmp
xor
mov
cmpsl
out
adc
sahf
scas
mov
add
out
push
sub
cmp
mov
das
insb
xlat
jno
out
push
movsb
cmp
and
xchg
mov
in
mov
insl
lret
popl
mov
fdiv
call
and
out
orb
enter
and
or
cmp
btr
cmp
bound
faddl
push
repz
xchg
pop
jmp
scas
cmc
push
or
fnstcw
ja
xor
mov
ss
add
xchg
pusha
fwait
divb
js
and
stos
cli
mov
dec
lea
cmpsb
inc
lret
call
jecxz
insl
dec
add
loop
shlb
jle
mov
xor
std
fistpl
jge
lods
dec
sbb
jp
testl
scas
aas
add
mov
inc
cmp
mov
sarb
aam
push
fcomp
nop
lcall
push
cmp
mov
lret
testb
out
rcr
ja
dec
pop
pop
cmc
cwtl
call
jl
adc
or
mov
mov
outsl
enter
add
inc
jl
cmc
aad
dec
and
jb
dec
push
xlat
or
xchg
add
enter
pop
add
sub
adc
repz
mov
jns
inc
das
add
popa
mov
aam
jg
sub
ret
ret
jge
loopne
cld
cwtl
sub
add
loope
mov
das
dec
roll
out
cwtl
push
aam
add
clc
push
imul
icebp
add
jp
cmp
enter
cwtl
bound
lret
out
nop
mov
movsb
cmpsb
sub
fstp
mov
cltd
out
frstor
sub
mov
addb
addl
inc
call
mov
jns
jno
stos
fcmovb
pop
fstp
rclb
roll
dec
or
adc
scas
iret
add
pop
rol
jnp
rolb
rcll
movsb
in
cli
sub
fs
jo
icebp
pop
and
and
ljmp
mov
imul
repz
sbb
sbb
push
jecxz
imul
adc
lret
or
push
mov
repz
jp
and
lahf
xor
mov
out
in
pop
dec
sub
mov
fistpll
xor
push
sbb
jno
adcl
lahf
pop
adc
cmp
pop
sub
cmp
ror
inc
xrelease
and
daa
xor
xor
mov
mov
xor
faddp
mov
inc
mov
mov
xor
adc
xor
out
and
int3
lahf
movsl
mov
in
xor
sbb
orl
jbe
les
cwtl
push
lret
jb
dec
aad
and
sbb
fildl
dec
mov
mov
sbb
aaa
xchg
lock
sub
adc
mov
arpl
out
add
inc
dec
mov
push
xchg
nop
outsl
and
lcall
nop
mov
mov
lock
mov
test
int3
pop
mov
jne
je
mov
iret
pop
mov
pop
push
test
jmp
nop
dec
imul
jg
or
adc
sub
xchg
je
mov
and
pop
cmpsl
fdivs
dec
outsl
and
push
hlt
and
mov
adcl
ffreep
int
sarb
lret
xorl
movsb
sub
mov
push
popf
repnz
test
jecxz
adc
mov
sbbb
or
mov
aad
push
xchg
test
push
adcb
nop
sbb
pop
mov
cmc
and
stc
push
jg
and
fimuls
mov
ja
sbbb
adc
pop
out
add
push
inc
hlt
mov
dec
aam
dec
pushf
sbbl
cmp
enter
jmp
test
jae
aam
sub
shl
cmp
inc
sub
xor
adc
pop
sub
cld
fs
fcoml
cmp
out
dec
lods
in
enter
cmp
data16
addb
scas
xor
stos
mov
mov
and
push
dec
loopne
es
lock
jo
orl
fstps
mov
push
sub
scas
sbb
fs
pop
dec
test
dec
mov
sub
mov
dec
std
sub
mov
leave
jle
movsl
mov
push
lds
ljmp
negl
mov
xor
dec
shr
pop
loope
sti
mov
xchg
loopne
js,pn
mov
push
xchg
pop
cwtl
or
push
xchg
ljmp
test
xor
loop
cwtl
aad
pop
mov
xor
xor
xor
adc
sbb
outsl
data16
cli
int
test
sbb
ss
pop
jmp
jbe
les
dec
emms
fisubrl
ds
xchg
test
mov
jno
mov
sub
jl
stc
aam
add
lahf
dec
xlat
lds
loopne
sub
lea
xchg
or
mov
pop
jmp
inc
mov
mov
bound
pop
adc
lods
sahf
cmpsl
adc
sahf
inc
jg
test
and
mov
jb
push
clc
aad
test
mov
fdivrl
fidivs
sbbb
and
popa
js
je
xchg
lds
insb
cld
mov
cmp
loope
cmp
add
outsb
push
je
pop
jge
jp
jbe
jecxz
pop
je
and
or
test
xchg
in
iret
jecxz
lods
push
das
pop
bound
test
js
lahf
aam
pop
imul
into
add
lods
jl
fsubl
mov
sub
sbb
ds
stos
dec
popa
jbe
lods
xchg
popa
pop
stos
add
rolb
lods
ss
pop
inc
mov
mov
lods
mov
into
lock
jecxz
push
xchg
mov
pop
imul
dec
pop
filds
xchg
jbe
sar
cmp
push
add
call
fsubrl
sbbb
int3
and
mov
sbb
push
ds
add
or
jle
pop
loop
popa
or
imul
rcrb
out
es
sub
gs
cwtl
rcll
xor
dec
sub
sbb
or
loope
dec
push
pop
or
icebp
cs
jns
stos
jmp
fcomps
jns
leave
sub
inc
out
or
ds
jmp
test
cwtl
inc
divb
sbb
outsl
adc
scas
adc
cs
stos
mov
cmp
adc
mov
inc
cmpsl
sub
pop
push
or
xor
mov
cmpb
ds
mov
xchg
cwtl
cmp
cmpsb
or
jl
lea
and
sbb
jecxz
daa
mov
dec
sbb
xor
lret
xor
sbb
inc
mov
ret
lret
les
fdivs
inc
lods
push
fwait
mov
notl
xor
arpl
faddl
dec
lret
and
add
pop
rcrb
out
pushf
jne
sbb
stos
cmp
cwtl
xchg
mov
xchg
adc
popa
push
stc
xlat
xor
mov
jbe
les
lods
call
push
call
push
cmp
cmc
mov
adc
repz
xchg
lcall
out
dec
aad
aad
js
div
cs
hlt
xchg
aas
xor
xor
push
dec
adc
jg
and
outsl
inc
sub
xchg
fs
pushf
cmc
jg
je
std
xor
cmp
in
insl
int
ret
mov
pop
les
andl
lds
adc
scas
mov
std
nop
dec
loopne
xor
repz
pop
out
push
int3
mov
dec
dec
add
push
lods
pop
movsb
scas
enter
testb
dec
and
push
int3
jle
sbb
or
cmc
aad
je
fs
rorb
cmp
or
jge
cmpsb
imul
sbbb
sbb
pushf
scas
mov
xchg
xchg
mov
rorl
jne
aam
cli
mov
lea
inc
cmp
idivb
stos
addb
xor
orl
lret
inc
out
pusha
mov
cmp
cmp
cs
outsl
xchg
mov
aad
pop
cmp
pop
out
or
inc
popa
mov
mov
inc
xchg
hlt
xchg
movsb
jo
or
std
scas
sbb
loop
test
clc
lock
or
xlat
push
add
xor
xchg
rcr
nop
sub
mov
insb
das
mov
sbb
adc
pop
mov
faddl
jp
int3
xchg
add
mov
mov
or
cmpsl
cmpsb
mov
loop
push
sar
pushf
stc
mov
cwtl
or
mov
adc
test
push
inc
add
sub
enter
inc
mull
sahf
ret
jnp
dec
mov
mov
add
mov
cld
out
testl
cmp
xchg
mov
pop
and
rorb
pushf
sbb
mov
bound
call
mov
mov
int3
ss
sub
std
lahf
sub
xchg
push
je
mov
scas
inc
fs
xchg
inc
adc
and
mov
mov
mov
lds
fsubrl
cmp
cmpsb
jno
fcmovu
sbb
in
orb
sbb
cmp
jp
adc
xchg
adc
inc
xor
xlat
stc
inc
mov
sbb
cwtl
and
or
mov
mov
insb
fistpl
fisttps
std
mov
insb
xor
cmp
jmp
dec
in
sbb
in
lahf
or
mov
inc
les
aad
mov
xchg
sti
stos
and
dec
dec
sbb
dec
inc
out
mov
adc
push
xchg
push
aam
pop
ds
mov
mov
repnz
clc
cli
stc
fisttps
cmpsl
das
sbb
jp
adc
mov
add
pop
sti
push
pop
fwait
mov
inc
cmpb
and
aas
clc
lcall
test
jo
or
cmp
inc
repnz
mov
fdivrl
xchg
dec
orb
dec
pop
push
dec
push
or
xchg
je
enter
outsb
pop
push
cmp
push
test
fisubrs
sbb
mov
imul
or
dec
fisubrl
push
fcmovbe
sub
mov
nop
fwait
jns
mov
addr16
cltd
cmp
out
sbb
adc
outsl
fucomi
clc
pop
mov
fcoml
test
adc
out
inc
pop
push
in
aam
jo
lahf
jmp
mov
in
inc
int3
xchg
adc
ret
xor
sbb
push
adcl
inc
xchg
inc
push
cs
xor
add
mov
or
inc
jecxz
aad
test
and
sarb
out
or
fcos
lcall
cmpsl
test
test
mov
and
adc
shrl
aaa
movsb
mov
add
pop
pop
dec
push
fs
cmp
dec
js
arpl
push
sub
pushf
loop
xchg
mov
push
mov
mov
movsl
mov
dec
jg
dec
sub
adc
shrb
pop
jbe
fists
ljmp
cld
mov
aaa
mov
ds
dec
mov
dec
outsb
xchg
push
dec
xchg
xor
scas
cmp
out
adc
push
jp
or
sbb
inc
scas
dec
ret
js
fwait
test
and
std
mov
jge
int3
adc
stos
cltd
repnz
pusha
xor
xorl
daa
mov
pop
scas
xchg
jge
add
sbb
pop
jecxz
pop
hlt
and
jge
jo
insl
mov
frstor
daa
dec
shlb
cmp
fdivrl
nop
adc
adc
mov
sub
bound
loopne
test
dec
dec
shlb
xchg
adc
xlat
mov
ret
jmp
hlt
loop
mov
pop
outsl
mov
cmpsl
sbb
outsb
and
movsb
data16
mov
cltd
xchg
fldl
pop
push
sub
testl
mov
adc
or
and
test
les
insl
xchg
adc
jle
add
cwtl
push
mov
push
push
xchg
int
inc
push
cmp
imul
rclb
popf
mov
leave
mov
lahf
fcmovu
ja
push
sub
mov
jle
fbstp
xor
cmp
add
pop
mov
rcr
int
cmp
mov
loopne
jle
push
andl
lret
mov
pop
inc
ret
xchg
stc
jg
test
ret
sub
orb
and
pushf
repnz
sahf
push
xchg
add
adc
dec
dec
cltd
aam
sbb
cmpb
and
movsl
and
adc
mov
cld
xchg
movsb
shlb
rorl
cld
mov
insl
and
cmp
stc
and
push
faddl
pop
aam
ret
sub
fdivr
jp
bound
aam
stos
out
mov
dec
mov
call
cwtl
xchg
ficoml
add
imul
je
pop
mov
andb
mov
imul
cmc
mov
lret
xchg
pop
push
jmp
xor
jp
push
or
sub
dec
adc
js
push
fistl
or
push
mov
loopne
lahf
gs
out
push
add
pusha
push
je
repz
inc
lea
in
ja
adc
mov
fdivr
jmp
lods
fsub
ror
rolb
and
mov
inc
stc
repz
mov
push
push
and
mov
mov
icebp
dec
cmc
negl
jp
stos
in
xor
sub
add
mov
pop
cmp
adc
cwtl
scas
mov
dec
out
es
sub
mov
aad
test
sbb
mov
sbb
out
outsb
jo
pop
dec
pop
mov
sbbl
xor
loopne
pop
cmp
mov
mov
add
les
rolb
je
loop
push
mov
gs
mov
sub
repz
add
ret
repnz
rorl
outsl
in
xchg
pusha
pop
or
push
add
xlat
dec
add
sbb
xor
jmp
mov
inc
pop
daa
testl
ja
inc
jge
xor
idivb
xchg
lea
adc
xchg
push
lgs
xor
xchg
jg
sub
push
jge
fidivl
fcmovnbe
or
xor
and
mov
insl
mov
pop
in
pop
mov
cltd
aam
jbe
dec
add
scas
and
ljmp
sub
xchg
xor
dec
or
inc
mov
push
les
jae
aaa
mov
mov
xor
push
pop
or
ret
and
cmp
gs
mov
cmp
outsl
sub
movl
add
push
rcl
out
jge
mov
mov
divb
pop
sub
inc
ljmp
and
lock
frstor
dec
add
xor
dec
cmpsb
dec
push
out
cmp
sbb
ret
push
das
scas
add
in
add
mov
dec
pop
pop
or
push
mov
rcrb
and
lret
inc
pop
scas
push
mov
add
xchg
ljmp
adc
test
jo
imul
dec
adc
sbb
lcall
and
jbe
in
cmp
dec
arpl
fldt
or
mov
xchg
out
test
xchg
jp
lods
sbb
jle
loopne
mov
push
les
dec
jmp
scas
jp
in
mov
sub
repnz
mov
cmp
or
dec
sub
hlt
mov
popf
xchg
lret
jo
xchg
outsb
pop
pushf
rolb
cmc
imul
jge
jp
sub
cs
pop
int3
ret
inc
mov
push
loopne
mov
mov
je
or
ds
leave
sub
and
pop
aam
out
dec
lret
mov
mov
fucomp
lcall
and
inc
loope
test
stos
jne
inc
lret
or
mov
inc
xor
push
jne
clc
lds
push
dec
gs
fistpl
push
kmovd
jle
sbb
sahf
mov
cmc
sbb
dec
and
lret
cmc
dec
jl
cmp
mov
test
cmc
and
lahf
sub
and
inc
cld
fmull
aam
sub
sbb
xor
scas
mov
clc
bound
stos
enter
fldcw
add
pop
mov
cli
add
sbb
lds
scas
jg
push
dec
test
daa
in
divb
js
scas
mov
test
adc
rorl
imul
adc
jns
enter
mov
scas
decl
push
or
jecxz
sbb
sbb
jo
push
mov
out
lahf
jp
adc
inc
add
or
push
push
push
jge
int
jge
int
mov
mov
cltd
ss
call
repnz
popf
out
pusha
int
shrb
xchg
jo
mov
jmp
out
ret
jge
adc
shll
push
xchg
jp
sbb
cmp
mov
enter
xchg
lea
cmp
outsl
out
int3
pop
mov
add
mov
xor
mov
int3
pop
mov
xchg
push
int3
pop
daa
jp
cmp
loop
push
mov
xlat
out
pop
pop
imulb
or
add
sub
ljmp
insb
or
sbb
add
push
add
mov
lods
out
rol
xchg
jne
xchg
repnz
sub
andl
rcrl
loop
cld
and
scas
in
sbb
jge
and
lods
push
xor
movsb
inc
push
negb
call
dec
and
cli
nop
jno
fistpll
aam
aad
int3
jecxz
rcll
jne
hlt
or
mov
add
push
push
cmp
les
lahf
push
push
jbe
push
pop
loop
xor
xor
cmp
ficompl
sub
sbb
out
js
repnz
cmp
std
pop
adc
in
jle,pt
and
mov
jmp
dec
xchg
mov
mov
mov
add
sarb
inc
cltd
or
cmp
mov
jge
sub
repz
iret
std
scas
jmp
mov
es
mov
enter
call
je
addr16
xchg
out
fcoms
or
dec
push
ret
dec
xor
fmul
scas
sbb
xor
ret
cmp
adc
test
xor
cmp
inc
xor
mov
inc
xor
cmp
pushf
dec
lds
or
les
push
mov
ret
cmp
shrl
jmp
addr16
rcrl
and
int3
shll
push
push
jns
add
jno
add
test
aam
add
out
cmpb
jnp
add
xor
lock
push
inc
dec
xor
cmp
sbb
scas
sti
movsl
mov
out
es
adc
aam
jno
xor
push
call
imul
int
dec
negb
mov
mov
mov
lahf
arpl
and
aam
xor
dec
into
cwtl
cmpsl
cmp
fadd
pop
sub
push
xchg
mov
jns
push
test
mov
or
sbb
push
and
shl
les
mov
adc
insl
xchg
mov
outsl
jmp
hlt
movsb
xorl
cmp
test
ja
cmpsl
inc
pushl
jle
cmp
loopne
pop
xor
mov
mov
add
mov
into
pop
jns
mov
imul
lret
dec
mov
dec
inc
test
fbld
scas
or
or
les
xor
push
mov
test
xor
sbb
dec
mov
nop
fcompl
cmp
adc
sbb
mov
dec
test
mov
mov
mov
test
outsl
pop
jp
xchg
push
or
fdiv
aaa
push
shlb
cwtl
sbb
push
inc
lcall
orl
push
aas
cltd
cli
xor
mov
pop
pop
push
push
mov
int
push
cmp
jmp
call
cmc
pusha
adcb
orb
popa
or
mov
mov
inc
inc
mov
ss
sti
and
mov
xchg
and
lock
scas
cmp
sbb
xor
cmpsb
data16
mov
xchg
fistpl
aaa
pop
orb
or
pop
cmpb
add
xlat
jmp
xor
fcmovnbe
sahf
cmp
adc
test
sub
push
ret
sub
sbb
fwait
fs
lock
xchg
mov
push
arpl
mov
push
xchg
les
mov
clc
jne
xor
dec
xlat
pop
and
popa
bound
cltd
scas
in
sub
jle
jo
scas
or
mov
test
mov
jnp,pt
xchg
inc
lcall
push
sbb
repnz
in
adc
mov
faddl
rolb
ret
mov
and
cmpsb
pop
popa
jle
lock
je
and
mov
gs
shlb
out
outsb
add
rcl
pop
jne
lahf
int3
pop
mov
test
test
fldenv
dec
push
or
mov
cmp
sbb
sarb
mov
movsl
or
pop
outsb
dec
repnz
fcmovb
mov
pop
xor
pop
test
out
mov
lds
pop
out
add
jnp
sub
repnz
inc
pusha
scas
jp
nop
mov
jge
xor
sahf
adc
popa
cwtl
stos
cmpsb
fimuls
xchg
dec
add
rorl
mov
cmpsb
or
mov
adc
fcmovne
leave
cmp
lods
xlat
cmovne
jle
push
push
insb
outsl
push
push
mov
sbb
mov
pop
test
mov
xor
addr16
push
pop
int3
add
mov
jns
mov
push
fs
sar
cmp
mov
mov
mov
or
cmp
mov
xor
ds
in
xchg
mov
push
xchg
fcmovnu
scas
mov
hlt
adcb
mov
stc
das
lahf
dec
or
out
or
sub
or
std
aad
adc
pusha
jo
push
adcb
rcll
mov
push
pushf
cmpsl
cmp
cmp
mov
mov
stc
xor
jbe
test
jbe
in
lods
push
and
fsubrs
or
movsb
mov
add
aad
xchg
loope
mov
lods
pop
je
pushf
loop
mov
dec
xchg
dec
loop
shlb
cmp
add
out
mov
push
push
add
movsb
test
aaa
jmp
or
leave
fsubs
mov
movsb
sub
movsb
lods
xchg
pop
scas
fldl
push
outsl
mov
gs
jns
xor
and
mov
jecxz
out
mov
dec
mov
repnz
mov
lret
fidivrs
jae
movsb
lock
cltd
ljmp
bound
push
mov
or
pusha
mov
out
pop
arpl
int3
hlt
dec
ljmp
jo
jbe
orl
mov
int3
shrb
in
outsl
cmpsb
shll
aam
pop
cmp
lret
arpl
out
mov
icebp
jmp
jbe
push
enter
clc
push
ljmp
lock
xor
pop
out
shlb
push
jmp
and
sti
push
scas
sub
sub
ret
je
pushf
ja
loope
rolb
mov
mov
ret
ja
fcomps
or
jnp
jnp
jge
ds
cltd
cmp
loop
sub
repnz
push
mov
clc
jo
cmp
iret
jle
lock
xor
jo
adc
mov
sub
test
cmp
roll
push
add
lcall
jecxz
shll
lods
or
test
daa
loop
inc
jmp
movups
xchg
rolb
mov
clc
cwtl
add
dec
fidivl
mov
mov
add
mov
cltd
mov
in
std
pop
or
push
jge
jo
add
mov
jnp
sub
and
sbb
loop
in
scas
mov
jmp
arpl
xchg
inc
stos
movb
std
repnz
mov
adc
and
mov
pushaw
es
mov
sbb
insb
mov
out
cmp
xor
in
lret
lods
mov
mov
pop
pop
push
dec
mov
mov
dec
lret
or
mov
mov
dec
nop
xor
mov
out
movsl
adcl
out
cmpsb
sbb
fidivrs
lods
mov
data16
fidivl
test
cmp
aaa
shrb
xor
xor
hlt
xchg
out
mov
mov
sbb
cmpsb
shlb
jp
in
mov
push
xlat
pushf
fsts
pop
mov
jp
cwtl
mov
sbb
cltd
pop
arpl
loope
pop
cmp
lock
push
mov
mov
in
notb
out
ss
mov
ja
pop
lcall
mov
push
xor
insb
xor
add
lahf
mov
jg
fwait
or
ret
xchg
xchg
ja
mov
cmc
int
mov
add
cmp
es
in
dec
out
sub
pop
sub
repz
jl
add
pop
imul
push
out
xlat
test
push
add
rcll
xor
mov
loop
push
push
rcrb
sbb
mov
jnp
jle
ret
int
mov
mov
add
movsb
mov
shl
pop
stos
pop
sub
es
bound
lods
or
sub
sub
mov
mov
xchg
adc
fldt
add
test
lea
or
xchg
mov
stos
lret
add
outsl
sbb
sbb
mov
and
mov
inc
add
loop
mov
and
in
into
adc
cmp
push
lret
daa
enter
sub
cmp
in
lock
sbb
addr16
pop
jp
aam
push
add
jp
je
rcll
sub
popf
jecxz
pop
aam
clc
ret
mov
pop
lods
in
push
arpl
bnd
andb
aas
gs
add
aas
push
test
jno
lock
jbe
fsubl
mov
cmp
lock
cmc
mov
subl
inc
cld
dec
mov
or
fucom
call
add
pop
adc
jmp
inc
push
add
pop
lock
sub
enter
imul
jmp
loope
data16
push
pop
lret
adc
xor
imul
out
xlat
jbe
mov
pop
icebp
push
mov
adc
ja
push
push
out
je
and
ljmp
sbb
cld
push
dec
push
sbb
dec
je
xor
or
cmp
jno
cmp
jge
and
pop
repnz
push
fists
or
pop
stc
outsl
push
out
mov
mov
sahf
inc
push
xchg
fdivrl
inc
dec
mov
cmp
cmpsl
icebp
cld
outsb
xor
and
xchg
xlat
pop
inc
sbb
int3
mov
fimuls
shll
in
notb
push
xchg
enter
sbb
dec
cwtl
sub
mov
int
imul
jnp
sbb
mov
mov
push
pusha
popf
push
fdivr
pop
lahf
aad
fsubrl
mov
push
push
pop
test
insl
rolb
inc
push
mov
or
adc
add
dec
cltd
xlat
cli
out
dec
mov
ja
sub
mov
jae
mov
dec
and
cmp
add
cs
fisttps
out
or
sbb
xchg
inc
sbb
xchg
jae
out
xchg
in
lods
stos
fists
mov
or
in
int
push
mov
int
jge
jae
push
pushf
push
jo
test
lahf
mov
dec
push
pusha
push
sbb
test
lock
push
sbb
or
push
pop
shl
xor
mov
dec
movsb
lock
jbe
mov
xor
mov
outsl
dec
adc
mov
in
rcrl
mov
movsb
sbb
in
cmp
ljmp
out
mov
add
add
ret
movsl
hlt
in
mov
addl
fidivl
push
xor
test
inc
mov
mov
lea
xchg
lock
lods
cs
jmp
ljmp
rcrl
push
mov
les
dec
lock
inc
push
add
inc
int3
repz
mov
push
dec
mov
push
inc
dec
push
pushf
push
mov
and
out
push
hlt
shrb
cmpl
mov
mov
lds
call
aam
mov
insl
jb
mov
mov
add
and
and
out
aam
imull
test
mov
pop
push
sbb
and
mov
push
mov
xor
movsb
sahf
iret
pop
popa
mov
dec
add
push
sub
mov
mov
jmp
loop
insb
std
aaa
cmp
aam
daa
mov
arpl
out
bound
cmpsb
imul
fwait
mov
xchg
inc
jns
fwait
cli
fildll
adc
xchg
sub
cmpsb
in
xchg
sub
mov
xchg
inc
scas
xor
mov
jl
nop
gs
ret
repz
or
mov
add
inc
jnp
mov
sti
ret
fisubrl
shll
pop
aad
dec
dec
pop
cltd
or
mov
int3
sbb
aam
pushf
cmp
sahf
enter
pop
mull
xor
xchg
mov
add
push
dec
cld
jo
ljmp
xchg
inc
or
jnp
mov
insb
xor
sarl
mov
xor
xlat
cmp
ss
xchg
pop
ffreep
sub
push
inc
add
pushf
fildll
inc
and
cld
push
xor
aam
cmpsl
adc
mov
clc
test
dec
scas
lods
into
pusha
or
xor
addr16
or
imul
add
mov
mov
test
test
insb
sti
xchg
sahf
movsb
pushf
jge
xor
imul
cld
or
ret
mov
push
and
sub
je
out
je
inc
rolb
mov
mov
xor
aam
mov
fwait
js
dec
ret
iret
add
imul
xchg
jo
jne
test
ret
push
mov
push
mov
xorb
jno
push
xchg
and
mov
push
pop
shr
insb
xchg
lea
out
pop
int3
add
and
dec
arpl
repz
popa
loop
pushf
add
repnz
xchg
dec
insl
aad
cmp
jns
je
out
pop
sub
jbe
std
dec
mov
push
stos
data16
pop
mov
mov
mov
bound
lods
fsubrl
ds
movsb
push
mov
add
loop
xchg
jne
or
ds
inc
sbb
mov
aaa
push
sbb
icebp
or
mov
add
fs
jecxz
les
jb
jb
dec
dec
add
mov
stc
pop
aaa
dec
and
pop
js
push
out
bound
mov
stc
inc
movsl
movsl
pusha
fisubl
sbb
xchg
xchg
mov
repz
data16
mov
dec
cltd
fidivs
or
faddl
out
fwait
push
dec
out
lcall
pop
shlb
and
mov
jge
sub
loopne
dec
ficomps
js
jb
std
loopne
pop
push
inc
mov
js
pop
shr
mov
test
sbb
clc
mov
lahf
aad
mov
fs
jp
mov
and
fistpll
cmp
cmp
inc
xchg
mov
jo
mov
dec
frstor
js
sbb
add
enter
mov
sbb
pop
xchg
movsb
dec
dec
loope
imul
into
cs
ljmp
xchg
iret
lea
sarb
xchg
push
out
je
pop
cmp
inc
mov
mov
mov
cwtl
cwtl
scas
adc
mov
xor
add
mov
xor
or
xor
inc
or
ja
adc
and
mov
call
sub
jp
and
enter
mov
xchg
push
in
push
icebp
sub
mov
les
dec
or
es
pop
push
lea
shll
lods
mov
lret
adc
cmp
cltd
scas
int3
jg
jecxz
insl
ljmp
mov
mov
push
loop
dec
jge
hlt
out
adcb
iret
sub
sub
and
push
aaa
leave
insl
jb
inc
push
push
test
xchg
or
je
mov
notl
jmp
xchg
jbe
sbb
jb
sbb
nop
cmc
mov
lahf
xor
sub
cmp
cmp
pop
push
std
loopne
pop
in
mov
push
xchg
jge
jns
cmp
and
lea
and
lods
mov
xchg
test
sub
movsl
aad
adc
jae
xor
mov
add
or
mov
mov
pop
outsl
pop
aam
scas
je
or
sti
mov
mov
ficomps
out
pop
enter
xchg
inc
cli
sbb
cmp
stc
dec
mull
add
fstpl
push
mov
lea
sbb
pop
mov
mov
int
sbbb
and
test
push
push
nop
pop
inc
lock
pop
in
fisubl
inc
addr16
out
push
sbb
outsl
inc
lods
and
push
sbb
negl
xchg
ds
dec
lret
mov
xchg
in
jnp
mov
in
mov
or
repz
mov
loop
mov
in
push
xor
jns
cs
ret
add
fs
mov
mov
inc
adc
fwait
cmc
or
mov
pop
hlt
sub
xchg
inc
inc
mov
xchg
jb
adc
or
jo
aaa
mov
aad
xchg
insl
clc
es
inc
sbb
jns
add
call
sub
xchg
push
sbb
mov
les
scas
push
sbb
lods
and
test
inc
shlb
add
mov
mov
xchg
mov
jo
dec
fsubl
cmp
data16
aad
out
xchg
add
aad
mov
mov
mov
int3
pop
lds
in
dec
and
jecxz
cmp
sub
pop
testb
stc
stos
fnsave
call
xchg
lahf
imul
fistpll
test
inc
negl
push
push
loopne
jg
in
adcb
js
ja
pop
adc
pop
cmp
icebp
cmp
fwait
negb
push
fcomi
pop
xchg
sub
mov
loop
pop
std
lret
push
fcmovbe
insb
pusha
push
adc
jne
sbb
jge
repz
test
push
sahf
lret
bound
in
ljmp
adc
xchg
sahf
mov
cli
enter
in
push
cs
mov
push
lahf
out
cld
aaa
jecxz
dec
xor
mov
or
sbb
jae
stos
ss
push
adc
pop
add
hlt
roll
lock
loopne
or
cwtl
sbb
mov
lea
aad
test
into
and
incb
js
and
adc
cmp
adcl
out
insl
inc
out
xchg
test
movb
lock
mov
mov
iret
adc
sbb
mov
les
jbe
in
pop
das
adc
dec
inc
sbb
push
add
js
fistpl
out
adc
mov
push
lock
nop
dec
pop
fsubl
adc
lock
xchg
xorb
call
push
push
jno
hlt
and
loope
adc
or
push
adc
mulb
mov
test
sbb
sbb
cmovo
sbb
mov
adc
sub
les
adc
sti
inc
into
sbb
aam
mov
lods
cwtl
enter
xchg
push
pop
clc
bound
aam
enter
adc
ds
xchg
aad
mov
invd
repnz
mov
xchg
pop
es
stos
lcall
test
inc
dec
scas
lahf
les
cmp
nop
repnz
lds
mov
call
leave
addr16
cld
iret
and
cli
popf
add
cmpsb
dec
push
data16
xchg
cmp
lcall
shll
xchg
mov
jbe
aam
xchg
fidivl
add
jge
movsl
mov
dec
adcb
lcall
mov
xchg
stos
jle
jmp
scas
push
adc
mov
cmp
jp
push
mov
fisubs
fwait
sti
or
pop
xchg
pop
inc
lahf
cld
jp
dec
orl
repnz
xchg
xorb
mov
cwtl
dec
stc
mov
cwtl
xchg
je
cmp
and
pushf
cld
mov
loopne
push
mov
xchg
js
pusha
pop
lret
imul
mov
push
mov
or
lret
mov
mov
pushf
dec
test
cwtl
int
addr16
scas
ljmp
in
pop
push
outsb
fs
jo
add
cmpsb
pop
inc
sub
jo
inc
adc
ljmp
mov
mov
jne
mov
or
cmp
outsl
cwtl
jp
jge
pushf
mov
lret
sbb
pop
cmp
push
inc
jne
xchg
mov
push
ss
xorb
aaa
lock
cmp
mov
dec
xor
imul
lret
jbe
daa
fnstsw
arpl
or
jb
cmpsl
pop
sbb
lcall
push
add
out
dec
sbb
std
add
dec
pop
xlat
mov
mov
pop
orb
sub
pop
in
sub
xchg
fstpl
int3
out
or
mov
dec
push
pop
aad
mov
test
cmp
div
adc
dec
xor
mov
inc
inc
cmpb
dec
push
aad
add
cmp
mov
ficompl
int3
imul
pop
adc
push
es
std
jp
dec
out
sbb
dec
movsb
lods
imul
mov
dec
sbb
xchg
dec
imul
lahf
add
xor
dec
and
daa
fsubrs
mov
daa
cs
mov
adc
sub
aas
pop
hlt
adc
pushw
xlat
out
xor
repnz
stos
xchg
inc
lcall
xchg
fsts
shrb
sbb
subb
cld
or
add
outsl
cmp
adc
cmp
aam
bound
add
cmc
ds
xchg
push
or
pushf
lret
xchg
cmc
fldt
ljmp
es
scas
inc
inc
out
inc
rcrl
dec
adc
mov
aam
mov
mov
fadds
out
loop
movb
xor
or
xchg
mov
xlat
mov
pop
lock
loop
bound
xor
mov
repz
test
jmp
add
lods
xor
cwtl
out
das
cmpsb
dec
mov
mov
dec
cmp
cmp
imul
lcall
mov
movsb
or
outsb
sbbl
in
xorl
js
sahf
mov
sub
and
mov
in
jp
call
cmp
int
mov
push
sub
les
pop
dec
cmp
fidivrl
movsb
in
xchg
popf
arpl
adc
fidivl
dec
dec
rclb
pop
dec
adc
add
call
jl
push
xorb
xor
jns,pt
fisubrl
sbb
push
push
pop
mov
out
mov
jo
in
inc
and
ja
out
fstps
dec
pop
test
jbe
pop
mov
cwtl
loope
inc
bound
in
and
aad
iret
mov
in
add
pusha
lret
loopne
sbb
es
cmp
cmp
out
and
sbb
inc
push
lahf
or
jns
sbb
daa
jns
push
das
cmpsb
sbb
in
pop
push
mov
outsl
dec
sbb
leave
xchg
insl
clc
push
out
fldcw
sbb
stos
and
daa
fidivl
ds
mov
dec
adc
fsubrs
outsl
dec
andb
test
lahf
fsub
dec
scas
or
cmp
addb
dec
cmpsl
mov
dec
sbb
fisubrl
jecxz
lret
cmpb
cmp
call
lret
pop
jno
shlb
cltd
test
jg
or
xchg
and
adc
mov
lahf
and
cmpsb
aas
leave
sbb
mov
adc
lahf
pop
jns
dec
cmp
and
mov
or
mov
incl
sbb
out
or
out
orl
or
rcrl
ret
mov
js
emms
and
push
push
out
ret
pop
push
push
rcr
cmp
cmp
fsubrl
divl
or
or
add
mov
mov
imul
mov
test
xor
inc
and
jp
inc
pop
dec
pop
cld
std
push
stc
inc
mov
jl
mov
mov
add
aas
push
cmp
test
push
pop
pop
push
jno
and
sub
mov
cld
xchg
push
ljmp
or
in
xchg
jmp
pop
mov
add
loop
mov
xchg
mov
inc
dec
andl
dec
fisttpl
or
push
orl
add
pmuludq
sub
mov
out
je
cs
add
shll
fnstsw
lea
jle
lcall
mov
in
stc
pop
in
push
lcall
sub
add
or
cld
mov
shr
add
addr16
mov
dec
popf
mov
mov
jo
mov
mov
sub
testb
movsb
les
sub
insb
sti
cld
shll
mov
in
adcl
int
add
jne
cmc
or
cmc
mov
outsl
mov
add
xor
or
push
cmp
pop
mov
insb
xor
jp
jo
jo
orb
xor
aad
sub
loopne
fcmovu
pop
mov
fwait
adcb
pop
movsl
dec
ljmp
hlt
push
jp
jl
icebp
push
jb
ret
aas
clc
xchg
jmp
lcall
pop
sub
frstor
les
pop
sbb
sbb
dec
les
add
sub
ret
clc
pop
gs
mov
mov
mov
jns
enter
inc
lods
xchg
xchg
mov
xchg
push
pop
shlb
mov
ljmp
fdivl
das
sub
ljmp
pusha
sahf
push
fistpl
pushf
push
push
cmc
xchg
sbb
aad
inc
dec
adc
adc
adc
into
jb
xchg
sahf
push
aad
aam
and
sbb
addr16
xchg
inc
push
push
xor
mov
mov
push
push
and
inc
jae
in
ja
mov
fs
mov
mov
mov
sti
inc
and
lcall
fadd
add
push
mulb
mov
add
lock
or
xchg
aad
fisttpl
xchg
jbe
push
popa
outsl
sub
pop
jle
xchg
mov
jg
mov
xor
rcrb
xchg
cmp
cltd
jno
mov
and
movsb
mov
incl
idivl
xor
mov
push
imulb
sub
shr
adc
mov
stc
rclb
or
inc
je
int
lea
jae
jb
lods
xchg
call
cmp
les
xchg
imul
icebp
pop
add
dec
popa
cwtl
xchg
xor
pop
push
adcb
addb
xchg
mov
scas
dec
movsb
jo
jp
andb
sbb
xchg
adc
mov
ljmp
mov
out
sbb
in
fisubrl
pushf
pop
std
lret
dec
mov
mov
mov
ret
sub
or
call
cli
cltd
push
sti
pusha
adc
xchg
into
xor
test
pop
shrl
movsb
xchg
scas
mov
cmp
adc
pop
outsb
in
push
adcl
mov
push
pop
dec
mov
lret
sbb
incl
fmuls
push
inc
lahf
sub
out
xchg
xchg
push
rcl
sub
bound
mov
bound
jno
pop
imul
aam
mov
dec
mov
inc
pop
dec
sub
or
push
xchg
mov
jbe
sub
cwtl
and
scas
and
or
sbb
arpl
mov
popf
rcl
inc
xor
push
idivl
ja
adc
or
push
cwtl
cmp
xchg
cmp
xor
fiadds
xchg
je
cltd
jmp
lahf
js
jno
xchg
push
dec
clc
sbb
repz
mov
sbb
jl
mov
bound
fs
mov
adc
test
aad
pop
leave
fs
daa
mov
dec
sbb
sbb
daa
sub
addr16
ror
or
adc
es
scas
xlat
movsb
and
aad
pop
xchg
das
mov
sub
xchg
test
lret
aam
cmp
pushf
inc
stos
test
and
ds
mov
jb
adc
jge
sub
adc
push
xchg
push
js
xchg
mov
add
pop
lock
jb
enter
pop
mov
test
and
popf
sub
sub
mov
push
push
mov
inc
xchg
push
int3
pop
mul
mov
cli
mov
fsubs
in
out
cwtl
inc
arpl
fucomip
orl
push
loopne
lea
pop
out
dec
xchg
bound
daa
xorl
inc
adc
push
sub
xchg
cmp
aas
subb
insb
or
mov
sbbl
enterw
ljmp
mov
hlt
mov
inc
outsb
pushf
inc
dec
mov
mov
push
xor
lods
js
add
ljmp
or
mov
pop
xchg
sbb
sub
ja
fdivr
sbb
sbbl
faddp
cs
js
adcb
adc
inc
xor
int3
negb
cmp
and
push
femms
push
out
lods
jp
sub
pusha
sub
mov
cmpsb
lds
or
cmp
fistps
in
adc
sub
pop
cmp
and
mov
data16
jo
add
cmp
mov
mov
xor
loop
cmp
add
add
mov
cmpsb
xor
push
adc
mov
xor
jmp
test
loop
ljmp
mov
dec
idiv
mov
mov
dec
push
adcl
in
jge
xchg
push
inc
testl
in
jnp
notl
bound
mov
mov
loop
out
or
enter
pushf
xlat
lock
in
dec
jle
sbb
jg
add
xor
fstp
ja
ret
mov
mov
std
mov
add
jmp
xlat
or
pop
lods
lods
adc
fdiv
push
sub
push
jp
add
jnp
mov
dec
pop
inc
in
or
cwtl
test
mov
das
jmp
push
cmp
add
popf
lea
pusha
shrb
int3
and
mov
repnz
mov
jmp
lods
push
jo
mov
cmpsl
cmpsl
xor
enter
scas
xchg
test
push
xor
jle
ljmp
mov
xlat
pop
mov
cmp
dec
inc
pop
fildl
ss
dec
into
xchg
dec
test
arpl
mov
ds
sub
mov
insb
aad
mov
xchg
gs
mov
add
mov
lahf
clc
jecxz
stos
xor
adc
or
or
cld
or
stos
pushf
push
outsl
dec
out
xor
test
pop
adc
push
sbb
mov
pop
adc
pushl
pop
sub
cltd
sahf
push
aad
pop
scas
xlat
fcompl
rcl
test
pop
sbb
sbb
fnstcw
or
lods
inc
jle
lock
inc
nop
stc
sbb
sahf
mov
or
mov
outsl
mov
mov
iret
cs
adc
call
add
pop
push
mov
stc
fsubs
sahf
and
mov
aad
add
insl
nop
sub
lcall
std
xor
data16
adc
lcall
ja
ljmp
lea
mov
or
int
ja
jbe
js
jnp
push
or
cli
or
pop
adc
xchg
lret
out
scas
xlat
mov
mov
insl
ss
jb
pop
add
popa
xchg
sbbb
fiadds
and
push
dec
xchg
insb
xchg
cltd
adc
outsb
adc
dec
sub
repnz
xchg
shlb
in
jae
mov
mov
mov
jbe
lock
mov
mov
add
aas
lock
pop
int3
add
xchg
lds
les
sbb
out
negb
fldt
pop
or
mov
ret
std
dec
popa
add
popa
pop
cmpsb
cli
insl
xchg
jno
stos
pusha
js
adc
push
cmp
fs
cmpsb
or
rdtsc
xchg
fwait
decb
vmovhps
mov
push
lods
xor
es
loop
jnp
cwtl
mov
or
mov
rcll
loope
ret
mov
xor
mov
mov
aas
mov
and
mov
or
or
inc
or
jo
jmp
stos
loop
inc
lds
pop
cmp
mov
or
scas
not
pop
xchg
fcmovnb
lock
adc
push
mov
pop
push
les
push
add
mov
xchg
cmp
pop
stos
subb
mov
test
pop
adc
dec
mov
cld
shrl
addb
add
iret
add
outsb
mov
loopne
out
and
sti
pop
mulb
je
mov
ss
mov
push
and
out
jbe
rorl
pop
shll
dec
mov
sahf
fs
je
std
mov
dec
xor
imul
movsb
ja
pop
out
dec
pop
rol
add
push
jge
int
jge
int
aad
jo
sbb
adc
scas
adc
in
inc
insb
xchg
sbb
push
xchg
add
dec
clc
cli
xor
int
lods
rcll
push
mov
jo
addl
xchg
push
cwtl
and
lahf
adc
leave
dec
dec
jge
dec
adc
addb
fists
xor
adc
dec
pushl
mov
xchg
pop
jbe
mov
sub
mov
jge
dec
cmp
scas
adc
mov
stos
fidivl
push
sar
mov
loopne
cmp
call
repnz
mov
cmp
sub
loop
push
mov
cmp
sub
pushf
adc
xor
out
fidivs
loop
cmpsb
loope
lret
sbb
mov
test
jp
mov
out
push
xor
dec
ds
lret
mov
jns
cmp
push
push
mov
fisttpll
and
notb
xchg
sbb
leave
mov
sbb
mov
xchg
aad
push
inc
add
jecxz
imul
lods
push
fdivl
loop
std
or
ljmp
add
ljmp
or
inc
bound
enter
and
dec
dec
or
jge
mov
in
loopne
notl
lods
mov
mov
or
mov
add
sub
jle
lock
cmp
add
or
les
leave
mov
lock
mov
in
push
xchg
imul
ret
push
ret
shlb
jmp
sbb
jecxz
pop
jbe
cmpsb
jno
dec
jbe
mov
xchg
mov
aaa
xlat
out
sbbb
fcoml
xchg
adc
cld
not
imul
pop
in
xchg
adc
stos
mov
push
in
pop
incb
les
pop
gs
pop
rolb
mov
and
mov
divb
das
inc
pop
sahf
loop
jns
shlb
xchg
shr
push
jmp
incb
inc
repnz
mov
cwtl
and
fidivs
push
ret
mov
pop
mov
cmpsb
mov
lret
xchg
in
push
and
jo
xchg
adc
imull
into
xchg
push
pop
ret
push
les
test
and
cmp
jecxz
adc
xor
daa
push
and
cmp
int
push
mov
push
test
jmp
aam
movsl
imul
or
ret
mov
sahf
bts
xor
push
in
pop
fisubrl
push
adc
mov
sbb
pop
lret
xchg
dec
test
cmp
pop
xchg
mov
sbb
mov
mov
xchg
and
add
and
js
mov
loopne
or
jno
sub
add
adc
ret
xchg
aas
and
push
dec
loope
push
in
mov
int3
cmc
cs
in
sub
fists
aas
push
pop
in
pusha
std
in
add
pop
nop
dec
sub
lea
adc
pushf
and
arpl
leave
inc
bound
xchg
ljmp
mov
test
ss
add
mov
insb
mov
jecxz
fisubl
xchg
or
and
dec
fcomps
sub
lods
mov
cltd
push
addr16
aas
xchg
sahf
push
enter
mov
stc
lret
add
push
sub
test
roll
lahf
xor
mov
fiaddl
mov
into
test
pop
pusha
and
or
je
dec
lods
and
popa
aas
js
mov
xchg
jae
adc
shll
dec
or
mov
ljmp
jbe
sti
aad
add
jb
sarb
xor
daa
sbb
pop
jmp
lods
push
data16
nop
das
xchg
dec
sbb
dec
loope
adc
mov
cmc
xor
xchg
cmpsl
repnz
iret
and
lret
push
fs
mov
xor
out
pushf
dec
lods
mov
scas
adc
jbe
xor
test
out
fidivrs
addr16
push
packsswb
jecxz
push
das
push
out
dec
add
cwtl
cmpsb
add
mov
mov
adcl
mov
pop
or
sar
ljmp
aas
out
cltd
mov
jp
xchg
push
int
jl
test
and
aad
insb
cmp
cld
rcll
add
lcall
push
arpl
xchg
in
test
es
ret
pop
les
sbb
mov
sub
jg
out
pop
lods
push
fbld
lcall
jo
notb
data16
push
daa
pop
inc
mov
in
cs
jl
or
or
xorb
stc
pop
je
fildl
int
pop
scas
dec
inc
push
fs
dec
or
fcompl
mov
push
and
or
pop
sarb
mov
sahf
mov
xor
xor
pop
fwait
es
jmp
fiaddl
out
push
and
out
pop
in
aas
mov
rcll
inc
adc
aas
js
movsb
fdivr
out
dec
sbb
les
sarb
cwtl
push
fs
int3
punpcklbw
aad
cmp
aad
mov
pop
movsb
pushf
mov
xchg
pusha
int
fstps
arpl
push
out
inc
push
pop
inc
rcl
scas
xchg
or
inc
sbb
mov
lahf
and
mov
mov
rorl
imul
cwtl
add
mov
mov
loope
fs
int
les
jo
jmp
aad
mov
and
push
and
lret
aam
stos
xchg
cmp
sub
and
xchg
push
cmp
dec
nop
outsb
jmp
push
ret
adc
cmpb
mov
mov
dec
sub
pop
dec
out
scas
add
shl
mov
cmp
xor
push
hlt
sar
push
dec
inc
clc
dec
xchg
cltd
cmp
les
lret
dec
outsl
cld
ljmp
dec
mov
xor
ds
pushf
scas
dec
push
testb
add
inc
insl
xor
xchg
nop
fnstsw
push
shrb
mov
das
cmp
leave
mov
mov
mov
sahf
lret
fadds
push
push
push
or
sub
ret
xchg
sahf
mov
mov
js
repnz
lods
push
fdivl
inc
push
dec
fldl
dec
cmpsb
outsb
or
push
sahf
push
mov
jne
lea
mov
jge
push
or
int
out
out
add
stos
jb
scas
dec
xlat
push
int
gs
cmp
call
cmpsb
dec
inc
jo
scas
xchg
sarb
add
aad
jl
test
mov
or
lahf
jl
push
or
aam
xor
lock
stos
mov
mov
adcl
xor
cmp
cmp
lret
mov
push
es
pusha
mov
lods
fstpt
addr16
les
repnz
pop
mov
xchg
int
repnz
adc
xor
and
adc
jg
mov
mov
push
mov
nop
jl
xor
mov
push
call
into
movsb
inc
popl
test
mov
out
sbb
inc
adcb
cmp
out
mov
mov
out
adc
mov
scas
xchg
pop
lock
scas
xchg
lret
jae
shl
add
out
fldenv
pop
ret
out
push
imul
icebp
push
jns
lret
aaa
xlat
lret
and
fs
xor
fs
aas
cmp
mov
xchg
js,pt
xor
std
fs
cmp
and
mov
rcll
test
mov
ljmp
inc
addr16
adc
push
aad
push
xchg
outsl
cs
mov
mov
cmp
outsb
test
lahf
rclb
jmp
xchg
mov
cmp
pop
mov
std
scas
lods
loope
and
movsb
icebp
add
xchg
mov
mov
xchg
pop
inc
ja
pushf
adc
mov
scas
adc
push
stos
andl
jo
data16
lahf
cli
aas
pop
and
sbb
inc
int3
jge
or
push
push
stos
sahf
jns
mov
pop
test
xchg
ficompl
mov
mov
push
dec
sbb
mov
xchg
mov
pop
je
mov
pop
fmull
mov
mov
shll
sub
push
xor
shrb
jg
sbb
xor
les
aad
dec
shlb
sub
lock
pop
inc
aad
add
sti
mov
push
mov
mov
sbb
sub
jle
lea
les
lea
inc
aam
jae
push
in
fstl
jge
out
in
dec
add
ret
cwtl
add
mov
lea
sub
mov
push
mov
xchg
stos
or
mov
aaa
sbb
xchg
and
lahf
fdivrp
cli
xchg
mov
xchg
mov
push
jnp
pusha
lods
insb
rcpps
call
mov
lods
out
outsl
fcompl
add
clc
daa
push
add
lret
dec
cmp
xchg
xchg
sbb
mov
xchg
adc
aam
stc
xor
or
fwait
pusha
loopne
pop
mov
stc
enter
shll
stos
sti
cmp
cmc
les
or
loop
mov
movsb
mov
mov
mov
jecxz
fisubrl
fsub
inc
xchg
push
mov
test
sub
inc
popf
mov
hlt
pushf
leave
lcall
sub
xor
push
les
aaa
and
and
inc
outsl
cmpsl
std
pusha
ss
inc
test
xchg
mov
insl
sahf
fwait
push
cmp
adc
adc
dec
push
clc
les
cmp
ljmp
outsl
jle
sarb
push
push
test
stos
fs
add
nop
sub
pop
testb
xor
int3
push
lock
push
pop
in
push
xor
in
sub
jae
mov
dec
mov
inc
or
movsb
dec
sub
add
lret
jne
subl
aas
push
cmp
or
adc
bound
aaa
out
dec
jo
pop
add
or
daa
hlt
sbb
dec
push
and
or
jne
xchg
fcoms
jns
add
jmp
repz
int3
jmp
call
xor
out
and
pop
xchg
sbb
or
dec
lods
jnp
inc
std
call
mov
pushf
int3
sbb
adc
mov
fmul
push
jge
cmp
mov
push
lea
ljmp
xchg
dec
mov
jno
mov
fisttps
mov
sbb
mov
in
mov
add
sub
ss
mov
call
xor
push
out
je
repnz
inc
add
sbb
and
mov
outsb
lahf
push
xchg
scas
mov
push
out
fisubrl
testl
jle
mov
lock
out
sbb
shrl
inc
mov
sub
out
sti
cmp
daa
mov
jae
cmpsb
or
adc
int
mov
xor
sub
push
xor
movsl
in
add
push
xor
js
out
ret
ljmp
add
and
fidivrl
or
in
and
ficompl
int3
add
int3
push
insb
hlt
outsb
movsb
mov
cmpl
ret
je
ret
jge
inc
xor
shlb
les
dec
add
mov
pop
out
xchg
cmp
jnp
xchg
daa
push
inc
arpl
insl
push
rcll
push
test
dec
frndint
push
jo
lock
cmpsb
mov
in
or
pop
pop
orl
sub
cmp
das
push
mov
adc
aam
pushf
cmp
pushf
test
int
into
mov
jg
aaa
adc
sbb
jns
fisubrs
xchg
cmp
andl
or
stos
mov
sub
dec
push
das
shrb
fsubr
aam
jl
scas
stc
bound
push
mov
pop
push
notb
addl
sbb
sahf
or
dec
push
inc
mov
adc
push
mov
mov
imul
cmp
mov
jge
aam
mov
mov
push
mov
aam
mov
push
xchg
adc
and
ljmp
pop
pop
int3
test
dec
dec
leave
out
les
xor
push
je
pop
adcb
inc
cmp
push
push
dec
push
sbb
lahf
shll
lods
sbb
push
mov
cmpb
shrb
jp
push
jg
out
adc
xchg
dec
or
adc
add
test
es
popa
push
hlt
arpl
or
inc
repnz
fnstenv
out
mov
int3
or
push
popl
mov
xchg
or
jl
inc
pop
mov
sbbl
jbe
pushf
js
lcall
mov
stos
int
stos
pushf
push
ficompl
cmp
in
jp
mov
xchg
mov
adc
and
push
sub
lcall
xor
push
adc
rol
sbb
sub
inc
fcmovb
es
scas
or
add
pop
mov
push
lods
lret
pusha
inc
dec
dec
lods
loop
lret
test
and
enter
xchg
ds
int
mov
orb
imul
in
mov
repnz
inc
enter
cmp
mov
adc
xchg
js
mov
pop
and
mov
adc
sahf
lahf
in
push
imul
xor
arpl
out
inc
loope
pushf
lcall
mov
and
and
inc
popa
dec
push
lds
xor
adc
push
adc
loope
ds
inc
popl
inc
xrelease
xchg
cmp
cwtl
sbb
jmp
mov
repz
add
pop
mov
das
fbstp
inc
es
ret
mov
inc
sbb
sbb
inc
sbb
rcr
pop
cli
add
loopne
iret
cmp
outsb
cwtl
outsl
and
js
and
movsl
popf
jbe
cmp
ds
dec
xchg
inc
or
mov
je
jns
gs
addb
xor
and
sti
add
jb
push
add
add
add
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
sub
mov
movb
popa
jmp
insb
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
and
jl
sub
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
jmp
add
cmp
test
sub
add
sbb
mov
xchg
add
jp
rclb
imul
mov
mov
lock
xor
pshufw
mov
jae
jb
jo
mov
push
out
push
call
inc
cmp
dec
leave
mov
out
mov
aas
ficomps
sub
and
jo
test
xchg
jo
test
and
loope
jmp
xor
mov
sbb
pusha
call
in
pushl
xchg
cmc
and
test
and
or
pop
je
mov
and
mov
icebp
jo
and
adc
jno
push
push
call
lcall
or
aad
jmp
hlt
add
in
add
mov
pop
adcl
mov
movl
inc
mov
aas
cmpl
lahf
and
int3
adcl
ret
adc
loope
fsubl
mov
inc
add
jno
ss
add
pop
or
test
sbb
lea
add
ret
mov
inc
mov
push
pop
or
daa
push
lea
orb
pop
mov
aas
rcl
xor
or
imul
scas
adc
inc
inc
dec
xchg
inc
mov
inc
mov
popa
mov
mov
or
ja
sub
in
popa
jmp
inc
adc
mov
and
push
or
or
jl
adc
pop
cmpsb
dec
sbbb
push
xor
add
into
xor
sbb
mov
mov
test
bswap
cmpsb
mov
push
call
fcomps
push
ret
push
rorl
add
add
xorb
or
cwtl
ret
sub
xor
loopne
rorl
xchg
sub
xor
add
push
or
and
sbb
mov
mov
or
dec
adc
movb
test
loope
jns
aaa
mov
popf
adc
pop
lea
je
lret
adc
and
push
jmp
fimuls
mov
and
xor
add
push
dec
mov
repz
cmp
add
xor
lahf
lret
sarb
je
test
push
jge
mov
dec
shlb
add
cmpb
jne
and
rcl
and
pop
fimull
imull
repz
fadds
test
sbb
xor
ret
out
sub
int3
adcb
pop
mov
pop
divl
arpl
push
in
add
test
cmpb
xor
xor
cmpb
inc
sbb
or
adc
inc
adc
pop
mov
mov
clc
int
sub
jge
cmpl
or
dec
cld
inc
or
movsb
jmp
pop
clc
push
pop
insl
and
lock
hlt
mov
lock
or
cmp
loopne
ret
sub
fisttpl
int3
lock
cmp
shr
fimuls
adc
cli
or
mov
or
or
dec
fisubs
adc
pop
lock
hlt
in
xor
jb
mov
shlb
fs
es
sbb
jbe
cwtl
jge
cmp
jb
shrl
or
mov
mov
cmova
sbb
mov
mov
xorb
add
push
hlt
push
gs
std
pop
jae
es
pop
mov
addr16
mov
jne
add
bound
imul
jmp
pop
enter
and
pop
shlb
push
les
xor
popa
push
leave
push
ljmp
jl
out
bound
mov
xor
cmpb
pop
jbe
movups
icebp
cmp
inc
xchg
or
push
adc
add
nop
pop
xor
mov
push
add
dec
sub
jne
enter
incb
repz
or
out
iret
push
in
or
mov
push
mov
out
dec
lock
xorl
repnz
shlb
or
sub
bswap
nop
add
data16
add
xor
mov
or
xor
cmp
xchg
mov
aas
jmp
inc
movsb
adc
mov
les
mov
stos
stos
mov
adc
cmpsl
pop
test
pop
sub
push
aad
sbbb
adc
xchg
movsl
inc
or
adc
pop
outsl
scas
push
pop
lock
out
add
mov
pop
push
addr16
fnstcw
out
pop
in
clc
pop
jge
mov
add
test
cmp
pop
cmp
push
xor
in
inc
jne
sbb
inc
push
les
add
or
lahf
cld
sbb
xchg
ja
sub
es
jmp
xor
popa
iret
or
mov
les
es
cmp
ljmp
mov
xor
icebp
leave
cmp
xchg
or
inc
sbb
out
das
decl
add
stc
mov
sbb
mov
fnstsw
clc
push
push
pop
out
sub
pop
fcmovnb
sbb
or
sub
rcrl
add
lret
gs
pop
aam
xor
xor
popa
ds
test
sub
pop
nop
cmp
adc
stos
push
in
sub
dec
shlb
push
pusha
mov
subb
mov
addr16
int
cmp
xchg
cmp
add
cli
dec
push
loopne
jge
pop
scas
es
mov
sub
add
jmp
iret
popa
pusha
mov
in
add
int3
mov
test
cmp
pop
add
add
mov
lock
sbb
pusha
ljmp
xor
es
call
add
insb
test
add
cli
popf
xchg
cmp
ja,pn
inc
cmp
xchg
mov
sbb
rcll
and
inc
aaa
xchg
add
stos
into
outsb
xchg
inc
ffreep
inc
xchg
movaps
jbe
mov
fiaddl
enter
and
inc
aas
cmc
mov
lahf
mov
dec
jns
mov
xor
add
addl
and
push
cwtl
icebp
mov
bnd
scas
lock
sub
mov
inc
cwtl
in
cmp
popf
mov
cmp
add
adc
or
cmpsb
cli
shlb
add
mov
add
sub
scas
jge
aaa
aas
popf
test
or
adc
test
mov
js
arpl
push
cltd
sub
rcrl
movsl
pop
js
adc
dec
sub
cmpsl
mov
sbb
pop
imul
fiaddl
xchg
fsub
js
loop
sub
sbb
dec
sub
scas
test
fisubs
push
imul
sub
mov
sbb
inc
mov
test
aaa
cmpsb
xchg
out
mov
or
pcmpgtb
lea
inc
jae
call
lock
outsb
jnp
jbe
ds
out
xchg
cwtl
roll
pop
loopne
push
pop
inc
mov
dec
push
test
xor
pop
pop
dec
mov
and
lds
iret
jg
jle
call
int3
rol
scas
adc
mov
mov
sarl
jmp
push
js
pusha
iret
push
ljmp
jo
sub
mov
inc
xchg
mov
mov
daa
pusha
cmpsb
xor
outsb
ja,pt
sbb
mov
sub
sbb
push
cs
pusha
test
xor
sbb
dec
filds
lods
fidivrs
or
fiaddl
test
cltd
ljmp
xlat
xor
movsl
or
fisttpll
lret
add
pop
mov
mov
add
adc
outsl
cli
jb
fimuls
sub
movl
lock
loope
push
call
xor
adc
outsl
repnz
adc
jo
into
sub
fcomp
mov
sbb
out
scas
in
jecxz
inc
and
ds
pop
dec
add
mov
adc
pop
adc
aas
xchg
push
cltd
and
sbb
inc
call
lcall
cwtl
mov
add
imul
sbb
or
cmp
mov
addl
xchg
adc
xor
xor
jno
xorl
aaa
pusha
popa
fbld
mov
mov
mov
mov
push
xchg
cwtl
add
add
sub
js
fnstenv
lcall
in
and
or
xchg
add
xchg
push
jo
sbb
pusha
add
lods
sbb
add
xchg
pop
jge
xor
mov
cwtl
jb
and
push
add
mov
addb
icebp
adc
push
mov
mov
scas
mov
sub
push
mov
sub
das
dec
aam
out
and
test
xor
sbb
lods
andb
and
cmc
fiadds
call
sarl
bound
in
or
pop
subl
sub
add
vmovlpd
push
and
pop
mov
sbb
push
add
mov
dec
mov
mov
out
outsw
jo
pop
inc
inc
sub
stos
je
add
ret
jecxz
add
push
push
nop
roll
in
cmpl
rcrl
das
sbb
xchg
js
pop
mov
inc
mull
cmc
sbb
push
inc
pusha
dec
lahf
push
mov
push
jno,pt
adc
loope
pop
pop
das
mov
scas
and
loopne
jecxz
add
jmp
mov
sub
and
jp
or
adc
andb
jb
push
nop
push
and
xor
fisubrs
cli
js
rcll
inc
roll
cmc
sub
fmull
push
outsb
xor
mov
add
jae
or
movsb
xchg
faddl
sbb
orl
dec
lahf
int3
sub
enter
imul
mov
push
mov
add
shrb
inc
aaa
adc
and
add
inc
nop
xchg
mov
mov
mov
sub
xchg
rclb
pop
and
popa
repnz
and
sub
arpl
dec
fmull
fnstenv
mov
mov
shr
aaa
test
aam
rolb
mov
push
fs
hlt
push
call
pusha
xor
pop
incb
and
std
adc
call
aaa
lret
js
or
inc
mov
shrl
mov
add
cwtl
es
adc
stc
add
leave
push
cmp
into
addl
sbbb
fsubrs
adc
sbb
call
mov
cwtl
ret
jb
test
cmpsl
push
cmp
adc
mov
or
xor
aaa
movsb
loopne
jb
push
jnp
and
jno
add
sub
fsubl
decl
pop
cmp
adc
add
imul
sub
fadds
rcll
ss
mov
sbb
cld
add
sbb
sahf
and
jl
inc
std
leave
xchg
addr16
sbb
pop
sahf
cmpl
and
mov
sahf
rcrb
hlt
adc
das
es
test
or
inc
and
or
jle
jg
shrl
dec
fdivr
pusha
push
cmc
pop
mov
mov
or
cs
xchg
add
and
call
andb
lock
add
sub
js
mov
insl
fdivrl
inc
sub
test
xchg
mov
cmp
lret
push
sub
sbb
push
or
cli
dec
pushl
call
je
push
push
mov
ljmp
add
dec
inc
add
xor
dec
adc
sub
or
push
rcrl
lcall
fs
leave
sbb
scas
inc
sbb
je
push
ljmp
xchg
ds
and
sarb
dec
push
inc
jl
cmp
nop
mov
sbb
cs
push
xor
mov
test
push
cld
cmpsl
mov
mov
mov
add
sub
imul
sbb
fdivrl
test
rol
leave
push
les
enter
ss
inc
sbb
mov
dec
fxtract
push
mov
popf
and
or
in
push
mov
mov
add
jle
adcl
mov
add
cltd
popa
movsl
and
fdivrl
cs
sbbb
leave
mov
mov
inc
pop
mov
mov
dec
test
sbb
and
cmp
jae
cmc
mov
add
ret
adc
push
roll
jl
inc
or
rcr
ret
sbb
pop
lods
movb
mov
inc
or
inc
jmp
jnp
lds
stos
dec
js
nop
pop
lods
daa
icebp
data16
les
pop
jae
scas
xor
inc
das
ret
jnp
add
xchg
ud2
shll
divb
or
xor
cltd
dec
bound
inc
adc
test
repnz
push
shrl
sbb
bound
mov
out
pop
mov
dec
scas
lea
jmp
or
cli
lods
inc
add
cmpb
adc
daa
push
mov
xchg
sbb
stos
sub
and
cmp
cltd
mov
add
push
aam
test
xor
std
inc
shl
loopne
adc
shlb
add
xchg
or
jmp
pusha
test
test
inc
or
lcall
cmp
add
xor
dec
inc
lahf
inc
sbb
dec
cmpsb
jno
test
jge
push
fistps
jmp
mov
jo
xchg
mov
scas
pop
rep
jae
and
sbb
mov
mov
rorl
and
dec
and
repnz
lock
add
dec
and
cld
cmpsb
ds
xlat
pushf
rolb
add
mov
call
add
sbbb
push
popa
xchg
xlat
aam
mov
leave
int3
mov
push
dec
fwait
out
jp
or
mov
dec
test
mov
fmull
movsl
push
sahf
and
fcomps
lods
jne
push
outsl
movsb
add
dec
scas
fcmovb
fcoms
add
in
clc
cli
xchg
inc
dec
test
add
or
cs
push
xchg
out
jge
jecxz
lods
data16
sbb
xacquire
mov
jle
aam
rclb
add
jo
cmpsb
add
gs
and
add
jg
xlat
and
push
lcall
push
addl
inc
jbe
add
repz
add
sahf
and
or
decb
int3
lds
xchg
pop
cmp
mov
xlat
filds
pop
aam
and
push
xchg
cmp
push
aaa
jbe
add
mov
jp
std
xchg
pop
jo
into
xchg
mov
scas
or
add
or
add
xor
inc
test
push
subb
mov
aam
mov
nop
mov
test
ljmp
mov
push
jo
push
mov
ret
data16
add
imul
mov
jno
inc
out
push
pushf
int
stos
add
mov
jns
push
add
popf
pop
pop
sbb
pop
add
adc
addl
xchg
cmp
push
movsl
cmpsl
jbe
add
add
ljmp
ja
and
add
fsubp
test
mov
jo
pop
popf
shlb
nop
js
add
daa
dec
and
xor
mov
add
testb
pop
xor
push
push
xor
push
add
push
sub
or
imul
add
or
push
inc
add
movsb
mov
lds
dec
inc
aaa
adc
pop
ret
adc
mov
inc
in
das
push
lret
loopne
in
mov
pop
xchg
ss
out
mov
mov
leave
stos
mov
adc
popa
xor
inc
repnz
cmp
das
or
cld
jb
imul
in
dec
pop
cmp
inc
fisttps
mov
mov
nop
add
dec
or
cmp
loop
in
sbb
and
dec
cmp
add
sti
aad
dec
or
and
add
data16
mov
lds
jg
out
adc
mov
rolb
fsubl
mov
xchg
jno
lods
sbb
cmp
ficomps
ds
loopne
mov
pusha
or
jmp
and
push
lcall
clc
je
mov
sub
xchg
cmp
ret
cmp
in
jp
dec
pop
jbe
mov
sbb
mov
mov
ret
push
lods
xor
dec
stos
push
sbb
push
lret
cmpl
sbb
adc
push
ret
dec
fdivs
lods
cmp
push
popa
and
push
add
fsubrl
jb
in
mov
xlat
ljmp
stc
push
adc
xchg
push
xor
shlb
add
enter
pop
loopne
dec
int3
or
je
ss
jnp
adc
pop
adc
mov
mov
aad
nop
push
das
movsl
inc
add
fmul
mov
or
mov
add
or
stos
js
scas
nop
mov
fiadds
mov
inc
shl
or
enter
test
pusha
push
push
adc
mov
fcoml
pop
mov
pusha
push
mov
daa
insb
xor
ljmp
gs
daa
mov
jle
out
or
push
call
and
es
and
and
or
jns
mov
shr
pusha
cmpsl
sub
fsubrs
lret
out
or
pop
dec
mov
add
int3
int3
in
fwait
shlb
popa
and
add
dec
jmp
cmp
push
jb
dec
repz
xchg
pushf
and
shrl
jbe
dec
or
dec
inc
test
jmp
add
dec
in
testl
and
or
nop
scas
inc
dec
jg
add
mov
shl
mov
adc
subb
or
dec
mov
pop
test
sbb
movsl
push
cwtl
adc
lcall
sbb
lods
and
inc
idivb
pop
mov
shrb
add
cmp
mov
adc
ljmp
xor
adc
add
add
pop
push
jmp
ljmp
adc
add
add
movsb
or
leave
xorl
clc
jns
push
jmp
cld
xorl
dec
adc
popf
inc
xor
xor
cmp
jbe
stos
addb
add
testl
fnstsw
cmpsb
arpl
fidivrl
mov
icebp
jb
inc
out
ficomps
add
je
dec
sub
push
out
cmp
inc
add
or
hlt
rclb
in
dec
popa
into
pusha
and
mov
xchg
inc
pop
xchg
mov
xchg
and
or
out
sub
dec
les
or
push
fsubrs
and
cmp
aas
call
pop
dec
push
push
pop
mov
inc
pop
mov
adc
mov
ficomps
scas
les
lds
cld
ret
push
inc
and
add
mov
or
data16
add
dec
mul
in
call
cmpl
fcomps
addb
add
or
add
popl
mov
in
push
mov
lahf
inc
mov
mov
les
rol
push
dec
in
je
mov
and
aaa
inc
xor
mov
jns
xor
adc
mov
or
inc
scas
push
cmp
inc
push
dec
mov
outsb
mov
std
jo
add
cmp
cltd
popf
movsb
cmp
lret
xor
jecxz
fdivp
jno
xchg
or
inc
add
mov
out
js
and
adc
jle
push
cmp
add
inc
inc
mov
pusha
pusha
mov
inc
in
movsb
inc
sarl
cmp
sub
in
roll
sub
xor
enter
adc
jns
inc
sub
mov
or
shlb
incl
or
add
sub
adc
mov
inc
in
xor
std
pop
mov
and
adcl
clc
xchg
sbb
inc
or
push
test
sbb
mov
adc
ret
arpl
std
xchg
mov
push
pop
xor
or
adcb
cmp
or
and
nop
dec
add
mov
imul
mov
div
in
insb
fildll
arpl
cmp
lock
lock
js
adc
lcall
xor
or
inc
popa
clc
mov
dec
push
push
or
inc
mov
mov
cmp
aam
inc
ss
mov
jmp
shlb
test
repz
imul
cli
int3
dec
adc
inc
decl
stos
lods
adc
and
mov
mov
decl
cli
ljmp
xchg
add
sysexit
xor
stc
mov
mov
pop
adc
or
jae
push
pop
pushf
jecxz
je
pop
shrb
testb
push
jl
mov
sub
and
push
leave
push
xchg
push
cs
test
dec
in
adc
pop
shl
sbb
push
les
lcall
add
loope
jb
jmp
add
dec
call
jae
call
adc
cld
lret
or
pop
lods
aaa
add
xchg
add
push
mov
jo
push
sub
dec
add
push
in
pusha
xor
jl
add
testb
arpl
add
xchg
inc
sbb
xor
call
pop
in
rclb
and
jb
cmp
pop
leave
sub
sub
inc
adc
and
and
jae
inc
dec
loop
mov
inc
scas
icebp
adcl
dec
push
xor
add
insb
adc
adc
mov
adc
mov
cltd
adc
jnp
mov
nop
int
and
xrelease
add
test
mov
mov
into
inc
push
cmp
scas
mov
or
inc
repz
mov
aaa
mov
and
lret
aaa
pop
mov
pop
rol
pop
adc
add
test
jns
dec
jo
addb
ret
xchg
cmp
xor
insl
or
or
and
mov
push
ljmp
inc
sarl
push
stos
or
adc
in
add
dec
and
push
je
incl
outsl
lods
cmp
insl
jnp
mov
inc
aas
add
or
dec
mov
sub
test
mov
js
jns
mov
jne
loope
push
test
daa
testb
mov
and
inc
xchg
test
inc
cmp
mov
rolb
test
xchg
cwtl
or
adc
mov
mov
mov
jp
jmp
lea
dec
rorl
add
or
pop
mov
inc
xchg
nop
sub
lcall
test
add
shlb
mov
xlat
call
push
cmc
ja
inc
lea
mov
push
arpl
jmp
or
fs
repnz
pop
into
cmp
dec
lcall
sarb
arpl
imul
xor
push
jp
add
pop
xchg
jno
adc
ds
mov
mov
dec
jno
jo
jbe
jns
inc
push
repnz
es
or
adc
and
and
pop
mov
jne
psraw
adc
subb
sbb
jnp
mov
dec
int3
and
add
mov
dec
sub
add
add
mov
inc
cs
rolb
inc
sarb
adcb
jmp
lock
adc
stos
push
sub
mov
fisubs
rclb
in
jno
out
sbb
lods
ret
faddl
add
and
xorl
add
repnz
inc
jae
adc
rcrb
daa
inc
cwtl
popf
adcb
mov
adc
mov
and
sbb
add
test
nop
dec
in
in
mov
mov
jl
ret
fldcw
es
fdivr
xchg
or
mov
add
adc
stc
mov
mov
and
in
stc
aas
adcl
dec
shll
rorb
out
loope
frstor
xchg
test
jmp
lock
jb
add
mov
xchg
cld
or
jb
inc
xor
or
imul
mov
or
add
loop
jne
add
insb
sub
xor
call
test
rcrb
decl
sub
addl
mov
and
repnz
sbbl
adc
jo
test
sti
xchg
or
dec
inc
add
mov
push
push
or
cld
sbb
int3
xor
mov
mov
dec
lahf
mov
lods
sahf
mov
stc
or
cltd
insl
mov
loope
add
dec
stc
or
jnp
xchg
sbb
xor
orl
push
mov
jge
nop
dec
xor
int3
pop
in
loopne
orb
adc
mov
shrl
gs
cmp
call
fiaddl
jne
and
push
das
cmp
mov
std
adc
adc
and
cwtl
hlt
mov
xchg
dec
add
jmp
add
jae
lcall
sub
push
dec
inc
pop
adc
jb
nop
mov
cwtl
pop
pop
or
repnz
or
jb
pop
adc
inc
les
adc
ljmp
insb
pop
jge
test
mov
test
add
movl
mov
in
push
rolb
mov
dec
jp
dec
or
cmp
cmp
test
pop
cwtl
sahf
js
cmp
sldt
add
mov
dec
fs
xchg
addb
inc
mov
inc
daa
jmp
dec
sub
in
add
popa
add
cmc
inc
and
mov
cli
test
inc
or
sub
rorb
das
mov
test
rol
add
in
fdivrl
adc
pop
das
pop
and
add
test
cmp
mov
mov
add
push
jo
dec
es
test
sub
outsl
cmpsl
push
jno
sbb
add
dec
in
xor
icebp
xor
cs
dec
les
jl
mov
in
cwtl
and
subb
add
mov
adc
loopne
inc
and
pusha
sub
fidivl
cmc
mov
mov
sti
add
stos
ret
or
dec
add
push
mov
jnp
out
mov
test
roll
push
out
out
cltd
jecxz
cmp
loopne
mov
out
adc
lret
mov
testb
pushf
dec
and
in
or
loope
inc
test
in
pusha
xor
inc
jg
inc
or
repz
int
dec
xchg
mov
shll
faddl
adc
xchg
lcall
fimuls
xchg
in
js
xchg
mov
daa
movsb
movb
mov
mov
adc
inc
sub
mov
mov
decl
xor
sbb
cltd
shl
inc
inc
mov
add
es
inc
in
adc
nop
enter
divb
pusha
pushf
or
mov
cld
inc
adc
xchg
popa
inc
add
xchg
push
mov
xchg
push
add
mov
mov
ficomps
dec
add
adc
inc
xchg
inc
test
faddl
pop
call
hlt
push
pop
pop
pusha
inc
fsubrs
xor
adc
les
xor
push
cmp
mov
fdivrl
xor
shrb
and
add
dec
int3
rclb
movsl
pop
inc
adc
inc
push
sbb
bound
je
mov
shrb
js
mov
or
mov
xor
hlt
sub
xchg
adc
pushf
int3
enter
les
les
inc
push
jae
inc
fwait
inc
xchg
add
inc
sub
sub
inc
sub
and
inc
gs
adc
arpl
xor
mov
test
pop
cmpb
pop
sub
mov
outsl
es
inc
ret
sbb
or
sbb
std
xor
cld
inc
ficomps
in
adc
dec
adc
mov
or
test
and
les
sub
inc
pop
lcall
push
xchg
sub
dec
sub
inc
imul
ljmp
mov
push
jo
icebp
ljmp
push
lret
cmp
push
cmp
fstps
or
mov
dec
add
dec
jo
std
scas
mov
mov
add
ljmp
fxch
scas
xor
add
and
mov
adc
rcrl
and
or
in
jno
mov
sub
pushf
aad
and
into
dec
jl
pop
sub
and
and
sahf
cmp
jo
ret
sahf
and
pop
pop
pushl
inc
je
rep
adc
test
pop
js
add
mov
arpl
ds
add
frstor
sbb
cltd
pushl
jecxz
insb
push
mov
pushf
int
mov
dec
push
or
test
jp
repnz
mov
cmp
or
fsubs
addb
sahf
push
xchg
pop
imul
jno
jae
mov
mov
rolb
push
clc
in
xchg
sbb
or
cmc
push
push
add
repz
aas
mov
adc
adc
sbb
data16
add
xchg
xchg
loopne
add
xorl
adc
in
inc
lock
cmp
cmp
rolb
add
lock
pushf
fmull
sbb
dec
or
lock
add
inc
pop
lods
jae
xor
jl
jno
sbb
std
inc
mov
dec
es
test
cwtl
inc
push
sbb
inc
sbb
das
xor
mov
sbbl
and
cld
sub
lds
clc
andl
jo
sbb
pop
cwtl
fldenv
fs
xor
sub
mov
add
mov
je
jns
test
xchg
xchg
sbb
enter
movsb
mov
xchg
add
test
mov
push
push
add
ret
std
jo
movsb
inc
and
leave
jo
inc
jae
lods
cmp
adc
sub
mov
shll
nop
cs
mov
dec
mov
bound
adc
or
xor
adc
mov
xorb
sub
popf
inc
and
jo
inc
stos
and
and
adc
jo
cwtl
xor
test
popa
sub
inc
mov
cmpsb
insb
je
aas
add
ss
pop
add
xorb
jle
add
mov
add
push
negl
les
add
ret
add
mov
test
mov
fdivr
or
inc
add
std
xor
or
or
cmp
and
test
add
inc
out
pop
and
mov
lret
cmpsl
mov
add
aaa
pop
dec
xor
xchg
dec
movsb
push
inc
leave
movsl
cwtl
adc
pushf
mov
sub
xor
xor
orb
inc
sub
xchg
int3
inc
popa
es
mov
mov
mov
icebp
ret
int
add
fisubrs
mov
add
or
and
fldenv
cmp
jle
sub
dec
add
push
pop
push
xchg
sti
daa
push
xor
dec
mov
pusha
sub
pushf
mov
sbb
pop
lahf
mov
daa
push
or
dec
paddsb
dec
test
sbb
rclb
out
push
and
pusha
cmp
cmp
test
or
adc
and
jmp
sbb
sbb
mov
in
jo
and
xor
add
cmp
jmp
scas
loopne
cmp
and
mov
or
rorb
sbb
push
jns
adc
jae
nop
push
inc
shrb
mov
imul
mov
cmc
inc
in
or
add
pop
ss
add
xor
stc
pop
sub
aaa
movsb
in
in
arpl
cwtl
gs
pop
imul
sbb
mov
out
add
mov
adc
add
scas
lcall
or
jns
lods
leave
fnstenv
addb
push
sbb
in
or
daa
add
inc
jle
pop
push
aas
add
lcall
or
aaa
mov
loop
mov
add
mov
pop
inc
mov
repnz
xor
mov
jns
sbb
insb
pusha
cli
and
mov
in
add
in
call
lock
cmp
cmp
jns
add
in
rolb
inc
cmp
mov
lods
aam
adc
jmp
aam
dec
push
fcomps
test
inc
dec
and
jne
int
mov
cmc
push
jl
push
mov
or
push
sti
andb
xchg
dec
aaa
pop
inc
mov
call
inc
and
inc
rol
sub
test
adc
xchg
das
or
testl
mov
outsl
adc
push
lock
rcll
js
sbb
xlat
add
lret
inc
inc
js
lods
mov
add
les
cmp
xchg
in
add
test
cmp
daa
add
push
inc
or
in
clc
lods
jo
or
push
add
push
test
idivl
and
xchg
add
push
jb
and
or
arpl
dec
add
movsb
add
xchg
adc
dec
cmp
push
test
xor
jno
pop
sahf
or
iret
lcall
js
xchg
push
cli
outsb
push
pop
testb
loopne
push
movsb
inc
push
or
cmpsb
add
sbb
jmp
cmp
pop
dec
dec
rorb
mov
sub
add
insb
add
pop
xchg
mov
loop
jne
mov
inc
adc
xlat
lcall
ja
imul
int3
rcll
test
rolb
sub
insl
inc
jnp
add
aaa
jnp
mov
pop
test
shl
mov
clc
dec
pop
shlb
cld
outsl
mov
push
mov
add
vrcpps
mov
dec
cmp
dec
std
fs
je
sbb
inc
add
pop
cmpsb
inc
jmp
jne
andb
mov
sub
fidivrl
shlb
shrb
cli
and
push
shl
pushf
dec
mov
inc
sub
and
shr
and
inc
push
jae
aas
loopne
xchg
adc
dec
lods
ds
push
xchg
sbb
cli
das
jmp
xchg
add
ss
idiv
jnp
or
push
fsubr
bnd
jp
aam
dec
dec
jne
push
out
and
icebp
jno
jge
mov
jae
in
mov
push
add
leave
dec
lock
mov
cmc
adc
xchg
sbbl
pop
lods
mov
adc
add
nop
les
mov
pusha
mov
add
jecxz
lods
xor
adc
pop
popf
outsb
push
or
pop
dec
andb
mov
jp
add
or
xchg
stc
test
idiv
call
lret
gs
subb
and
in
cmp
aaa
dec
jne
repnz
and
leave
movl
dec
aad
jmp
rclb
jl
inc
repnz
add
pop
mov
in
push
clc
les
jo
inc
arpl
mov
out
rolb
mov
push
adc
mov
loope
push
sub
out
in
lds
mov
or
jnp
or
inc
inc
addr16
cmpxchg
mov
add
and
xor
xchg
sbb
inc
stos
jno
or
mov
mov
outsb
int3
adc
adc
dec
js
movsl
mov
lods
imul
rolb
pop
adc
in
or
addb
mov
lret
sub
adc
dec
nop
mov
enter
and
mov
lret
aaa
push
test
sahf
fs
inc
pop
lods
and
mov
ds
ret
inc
js
push
or
sarb
leave
sub
jns
xchg
sub
and
les
repnz
dec
dec
movsb
and
and
inc
fcomi
scas
xor
dec
add
or
and
xor
dec
addb
cmp
jns
cmp
hlt
shlb
xorl
dec
adc
add
adc
mov
movsb
and
test
and
icebp
lods
adc
orb
add
xchg
adcb
xchg
sbbb
sbb
loopne
in
or
adc
cmp
scas
pop
cmpb
add
pop
dec
and
dec
pop
push
je
adc
dec
outsb
inc
sbb
cmp
inc
jno
add
mov
and
clc
mov
scas
cmp
mov
aaa
andl
add
push
inc
add
mov
adc
push
int3
test
aaa
pop
push
adc
lods
mov
in
xchg
insb
and
ds
loopne
and
xchg
xorl
xchg
add
enter
mov
lahf
fwait
sub
loopne
fs
ret
jns
shrb
mov
pop
inc
add
adc
add
xor
mov
push
push
or
negb
lods
in
cmp
add
ja
test
adc
xchg
inc
imul
sub
or
fbstp
jo
leave
jmp
sub
pusha
js
pusha
add
outsl
and
or
mov
ret
test
sub
mov
sub
rolb
stc
lods
pusha
fdivrl
and
sub
xchg
stos
xchg
popa
arpl
sbb
setns
xor
and
in
jl
inc
jle
cs
push
mov
push
pop
pop
pop
test
add
lods
and
std
add
and
ss
cwtl
call
mov
mov
filds
cwtl
xor
pop
mov
nop
xchg
mov
js
sub
pop
lods
pusha
xor
jne
hlt
aad
rorb
add
loope
mov
sbb
sbb
pop
orb
lahf
sti
push
js
es
ljmp
add
mov
insl
sub
loopne
adc
mov
pop
pop
add
test
adc
mov
sbb
dec
rcrl
int3
je
in
pop
inc
in
mov
and
sbb
jecxz
jle
movzwl
fimuls
mov
pop
shrb
inc
pop
fwait
add
jne
xchg
or
push
cwtl
add
add
decl
sub
pop
hlt
add
rolb
pusha
hlt
lcall
mov
inc
pusha
or
mov
ss
and
in
test
popa
mov
das
movsb
jmp
or
into
ds
mov
sbb
add
rdtsc
out
add
shll
in
ficomps
sub
jecxz
xor
jne
xchg
cmp
iret
xor
sar
or
inc
xchg
adc
into
orl
call
cmp
int3
mov
xor
sub
sarb
mov
mov
jb
or
xor
add
mov
mov
cmp
int
mov
and
pop
cld
sbb
insl
cmp
adc
push
xchg
adc
jp
shrb
adc
mov
subb
lock
mov
call
pusha
or
sbb
in
aad
add
dec
jb
pop
in
mov
push
popf
and
out
sbb
cmp
subb
or
rolb
das
and
loope
test
sbb
sub
xor
inc
fstpl
or
aas
clc
stc
leave
cwtl
pop
insl
insb
inc
in
xor
adc
dec
dec
repnz
stos
xor
add
push
popa
mov
mov
xor
push
xchg
mov
inc
mov
cmp
std
add
mov
pushf
xor
lret
call
adc
xchg
mov
and
fnsave
mov
loope
add
xchg
dec
ljmp
mov
rclb
das
adc
and
jo
nop
lock
lds
add
dec
fiaddl
xchg
cmpsb
push
dec
daa
in
les
and
inc
add
iret
xor
xchg
rclb
aad
inc
in
ret
add
dec
xor
mov
test
imul
inc
mov
nop
cmp
loopne
inc
fisttpl
orl
shrl
or
add
mov
dec
sub
lods
dec
loope
pusha
push
nop
test
movsb
jle
loope
mov
pop
push
xor
adc
cmp
add
mov
fisttpl
or
cmp
movb
cmp
xchg
mov
insl
lret
or
mov
faddl
jp
push
fdiv
mov
test
movsb
lock
cmp
add
adc
scas
xchg
adc
push
add
cli
sub
or
push
add
add
bound
push
add
pushf
add
or
lea
and
add
xchg
sahf
aam
jl
inc
ja
movsl
add
pop
lahf
lret
imul
jns
jae
jmp
scas
add
mov
mov
clc
and
add
or
dec
push
popf
movsb
xchg
mov
leave
loopne
xchg
in
nop
shrb
rcl
sbb
sbb
add
mov
pop
jo
jmp
mov
mov
sub
mov
cmp
in
jns
mov
unpcklps
outsl
loope
add
inc
lahf
or
aaa
push
pushf
sbb
push
xlat
sbb
xchg
enter
add
cmp
mov
repnz
dec
cltd
stc
and
pop
out
add
mov
or
mov
js
andb
jae
int3
mov
rclb
add
dec
outsl
push
orb
or
mov
std
outsl
xchg
xchg
dec
insb
icebp
pusha
nop
add
mov
lds
ficoms
push
scas
pop
es
and
push
movsb
mov
mov
je
in
add
lods
add
imul
ljmp
dec
inc
add
les
es
mov
dec
inc
shl
adc
sbb
jle
push
test
pusha
sahf
mov
int3
adc
int3
or
pop
jb
pop
les
dec
hlt
add
mov
sti
rorb
les
push
pusha
lods
movsl
pop
mov
cmp
movl
enter
shrl
add
dec
shl
jecxz
or
inc
movsl
adc
dec
dec
push
insb
cmp
cmp
pop
aam
mov
repz
pushf
sbb
bound
xchg
cmpsl
call
lds
jmp
jne
pop
rorb
mov
push
lahf
add
loopne,pn
sarl
xor
inc
mov
mov
or
and
addl
xor
jg
cmp
pop
add
cmp
mulb
xchg
faddl
andl
jnp
fs
xchg
in
adc
push
xchg
hlt
push
cmp
pushf
out
and
and
aaa
cwtl
je
mov
aam
inc
push
inc
adc
xchg
jb
xchg
cmp
and
sti
out
faddl
inc
jns
or
mov
pop
aad
sub
sbb
dec
out
ljmp
or
fiadds
lret
push
es
notl
mov
xchg
pop
lds
outsl
and
test
cwtl
enter
das
pop
and
add
and
jbe
das
or
push
cmp
mov
cwtl
pop
sbbb
int3
loop
loopne
push
xor
jl
dec
loop
add
mov
dec
les
hlt
in
cwtl
cltd
jg
aam
enter
fsts
mov
andb
add
or
sub
aaa
or
mov
scas
aas
mov
incb
add
fmull
mov
xchg
push
push
icebp
jb
inc
in
clc
xor
addb
mov
xor
inc
mov
jo
and
dec
inc
in
adc
adc
add
scas
into
movsb
cld
xor
les
scas
add
adc
repz
jno
sahf
js
mov
imul
mov
pop
test
test
dec
sub
lds
jne
push
cmp
dec
mov
fs
sub
and
xor
inc
or
add
fdiv
push
or
hlt
sub
in
rorb
and
add
mov
add
or
movsb
jae
jo
loopne
fsts
insl
sub
mov
cmp
es
jl
add
shrb
add
push
jge
lahf
daa
in
and
inc
cltd
sarb
sub
inc
pop
xor
andl
sbb
xor
pop
les
int
fsts
movsl
pop
ss
rorl
das
push
ret
ds
cmp
lds
mov
mov
add
dec
mov
mov
cmp
dec
xchg
ljmp
mov
jae
cwtl
psrlq
adc
lods
dec
inc
mov
jae
loopne
shrl
inc
inc
inc
out
lahf
sbb
ret
add
mov
lods
or
jp
inc
mov
out
mov
rorb
in
rcrl
lcall
add
or
xor
inc
xchg
mov
xorb
sub
add
pop
je
cmp
add
into
xchg
add
test
mov
pop
inc
pusha
mov
pop
mov
mov
ja
je
in
cmp
leave
mov
in
pusha
add
enter
and
or
push
jl
out
insl
pop
dec
call
mov
iret
mov
shlb
fstpl
adc
scas
pusha
in
pop
cmp
addl
mov
insl
inc
sbb
cmp
sbbl
inc
ret
add
inc
sbb
pushf
adc
subb
or
cmp
xor
sbb
mov
cwtl
and
mov
sub
aas
adc
cmp
adc
jge
ror
sbb
pop
xor
xor
stos
and
adc
dec
adc
jb
xorb
int3
or
mov
inc
jno
movsb
xchg
inc
ret
sub
stos
mov
adc
insl
bound
dec
dec
mov
movsb
sbb
mov
adc
testb
les
outsb
add
lods
or
dec
pop
gs
mov
push
aas
mov
xor
shrb
adc
add
add
add
sbb
adc
inc
out
sbb
or
or
push
cwtl
out
stos
add
sbb
inc
dec
nop
bound
push
xchg
push
incl
add
ja
add
push
sbb
dec
inc
dec
adc
mov
xor
movsb
xchg
pop
add
mov
adc
sbb
inc
mov
push
call
sub
or
rcll
add
add
mov
cmp
in
insb
push
mov
lock
adc
push
roll
lcall
fsubl
lea
das
xor
mov
rclb
sub
arpl
stos
cmpsl
sbb
dec
cmc
cmp
aaa
or
adc
jl
adc
in
or
and
xor
push
jle
test
xchg
jp
mov
sub
sbb
and
pop
and
dec
in
jg
aam
push
subb
xor
cmpb
and
or
orb
sbb
mov
sub
dec
jge
sbb
icebp
xor
mov
scas
fwait
or
xchg
test
sbb
adc
sbb
sbbl
dec
sub
mov
dec
jecxz
xchg
pop
inc
add
stos
lods
fs
out
jp
sarl
push
ret
add
and
pop
mov
push
sets
mov
sbb
pop
dec
dec
and
mov
xchg
pop
fs
xchg
mov
push
xchg
pusha
mov
pop
dec
setnp
pop
loopne
data16
sahf
daa
cmpl
pushf
ss
repz
mov
jp
sub
push
jnp,pn
test
pop
scas
test
mov
bswap
sub
inc
ficompl
daa
shrl
ret
inc
sub
and
push
jo
or
sahf
cmovle
stos
jg
mov
sub
mov
push
mov
in
and
lock
add
pushf
test
sub
add
or
loop
inc
pop
rcll
pop
jl
clc
pop
rorl
cmp
lock
add
push
xchg
pop
xor
outsb
inc
xor
pop
adc
push
dec
inc
pop
stc
iret
stos
jne
mov
add
or
and
out
inc
movsb
add
sub
insl
add
ljmp
shll
popf
fwait
add
inc
lahf
xor
push
and
push
lret
imul
inc
jo
adcb
lods
and
insb
cmp
add
test
lock
dec
testl
call
lahf
es
adc
cmp
dec
add
ljmp
dec
dec
cmp
sub
jnp
mov
jl
sub
lret
pushf
in
dec
scas
rolb
nop
nop
test
or
inc
pop
xor
jb
ds
sbb
push
add
stos
rolb
jo
cmpsl
add
push
cmp
call
test
ljmp
cmp
loopne
xlat
add
pop
lods
sub
mov
pusha
dec
lods
add
jnp
inc
sbb
test
xchg
fsubl
sbb
lods
lock
repnz
test
xchg
mov
inc
cwtl
call
cmpsl
xor
sbb
insl
cmp
inc
fmuls
sbb
nop
pop
lods
lock
mov
inc
sar
out
push
fsubrs
fldl
mov
add
mov
mov
jae
add
aam
pop
inc
roll
pop
in
add
add
xchg
add
inc
inc
or
add
mov
popa
push
rcrb
push
mov
xor
aaa
test
pop
pop
xchg
test
xchg
test
fs
sbb
das
test
push
cld
inc
pop
nop
enter
push
in
xchg
nop
add
adc
iret
lock
add
fstps
insb
sbb
cmpb
subl
push
jo
add
popa
fidivrs
hlt
inc
push
scas
lret
lods
jg
and
frstor
ljmp
addl
or
inc
sub
sub
lds
test
adc
adc
mov
xor
int
or
jb
push
or
orb
daa
mov
movsb
xchg
loopne
xorl
mov
iret
xor
mov
or
mov
pop
fmuls
cli
mov
mov
xchg
mov
jno
movsb
es
adc
les
push
sahf
mov
add
pop
je
call
push
fistl
in
gs
push
aam
lods
and
inc
push
and
lds
sbb
sbb
rclb
lock
fists
push
jl
sbb
movsb
or
mov
or
out
fisttps
sub
mov
or
dec
add
jae
lods
add
dec
cmp
cld
jnp
pop
out
dec
xor
jl
andb
pop
in
and
jae
pop
jnp
xchg
xor
inc
or
leave
js
pop
je
nop
xor
pop
sbb
js
jmp
cmp
xchg
fs
or
push
inc
loopne
add
cmc
jae
xchg
inc
add
push
jo
sub
test
sub
mov
and
mov
in
and
xchg
hlt
cld
sub
mov
cwtl
mov
jmp
add
lds
pop
xor
rol
add
xchg
xor
pushl
sub
movsl
push
xorb
leave
pusha
jo
or
dec
sub
sub
lods
xchg
clc
cmpsb
mov
lods
add
push
inc
outsb
xchg
mov
inc
jae
js
pop
cmp
pop
cmp
out
outsl
cli
roll
pop
or
dec
inc
lret
test
sbb
lods
mov
lods
dec
xchg
mov
cmp
fsubrs
pop
jg
and
xchg
adc
mov
inc
aam
pop
jmp
pop
imul
mov
das
rcrb
popf
fadd
or
pop
push
xor
mov
mov
stc
test
add
in
jmp
pop
cmp
jb
inc
arpl
jns
mov
jo
sub
lods
add
mov
pop
ret
insl
inc
add
inc
call
push
dec
nop
pop
sbb
xchg
pushf
dec
cwtl
lock
int3
adc
sbb
jo
add
mov
vmwrite
ret
loop
sub
das
shll
cld
adc
mov
shld
or
add
push
dec
and
xchg
call
dec
mov
lret
fsubs
inc
jo
loopne
leave
aaa
jmp
and
add
jmp
push
test
stos
pop
mov
out
inc
adc
jg,pn
rolb
std
xor
sub
fdivrs
les
mov
add
lock
push
cltd
and
sub
clc
sub
icebp
sbb
add
push
bound
into
les
dec
rolb
cltd
clc
iret
je
add
push
mov
test
cwtl
lods
and
inc
daa
or
push
cmc
sbbb
int
outsl
adc
incl
movsb
cmp
xchg
movsl
lods
testb
cli
addl
shlb
mov
pop
adc
aam
jmp
mov
sbb
stos
inc
inc
int
dec
adcb
sub
call
inc
add
mov
sub
dec
mov
mov
push
lods
push
pop
outsb
push
add
das
je
add
inc
insl
cmp
mov
jno
mov
add
jnp
mov
or
mov
scas
xorl
lcall
lods
pop
add
push
daa
mov
jb,pt
dec
fsubr
aam
pushf
call
pop
into
dec
push
dec
jb
push
add
mov
push
loop
xchg
add
sub
or
mov
hlt
inc
rolb
cmp
add
push
aam
and
out
xchg
lods
add
sub
js
movl
lods
jb
add
jg
inc
or
xchg
sbb
out
lock
mov
pop
pop
adc
push
jae
xor
rorl
push
call
ret
add
push
sarl
cmp
add
cld
insb
cmp
add
clc
lds
jb
xchg
sub
and
mov
stos
xor
adc
aam
jae
add
cvtps2pd
mov
mov
dec
je
or
cltd
in
add
xor
pop
xchg
andl
mov
inc
and
das
xchg
shrb
je
dec
jb
inc
mov
nop
add
movsb
xor
mov
jb
xor
in
adc
push
mov
xlat
mov
loopne
fcoms
rclb
xorb
xchg
rolb
jae,pn
leave
in
jmp
add
mov
dec
pop
pop
push
adc
adc
ljmp
adc
out
jmp
cli
xchg
mov
addb
out
data16
shl
fstl
pop
lds
adc
cmp
mov
sbb
sub
inc
movsl
dec
jo
mov
add
inc
push
adc
mov
or
nop
inc
dec
arpl
add
inc
mov
or
or
add
add
xor
roll
dec
insb
or
fdivs
andb
and
sbb
sub
push
enter
rcrb
ds
jbe
dec
mov
or
mov
dec
je
int
cmpps
jo
nop
mov
mov
movsl
orb
dec
push
shlb
sbb
int3
pop
jno
cs
les
out
inc
add
dec
pop
xchg
movaps
sbbl
mov
inc
or
mov
fsubrl
bound
cmpsb
xchg
cmp
lods
mov
mov
add
mov
inc
rcrb
pop
add
jp
or
mov
mov
or
in
add
gs
cli
mov
aaa
jp
dec
mov
and
pusha
popa
stc
dec
fwait
imul
and
push
rolb
xor
sbb
loopne
cmp
mov
and
das
ljmp
cmp
cwtl
add
fs
pop
jns
nop
pop
xor
in
and
pop
scas
lds
imul
sub
add
inc
add
jo
mov
sbb
mov
daa
mov
mov
inc
add
data16
fcmovnb
dec
xorb
adc
mov
jo
dec
mov
call
cltd
xchg
adc
cmp
xchg
faddl
shl
cmc
fsubs
jb
jno
cmpsb
dec
fwait
cmp
push
xor
mov
lods
push
jl
dec
and
cmp
in
out
rcll
sbb
addr16
dec
mov
shlb
jge
sbb
cs
mov
or
mov
mov
adc
inc
popl
sub
jns
dec
jae
sub
sbb
lods
mov
cmpsb
sahf
sub
jmp
mov
pop
or
out
pop
mov
xchg
lods
xchg
mov
mov
ljmp
inc
or
xorb
aam
mov
fmuls
iret
movsb
mov
clc
inc
xchg
movsl
mov
inc
or
lock
sbb
cwtl
mov
xchg
rorb
jmp
dec
sbb
ficomps
test
sub
loop
cltd
pop
add
jb
in
pusha
loopne
xor
jecxz
add
mov
dec
enter
in
jle
ret
adc
dec
int3
mov
inc
pop
pop
sahf
and
fidivl
pusha
push
sbb
pop
xchg
add
cmp
adc
or
jp
js
xchg
or
cmp
cmp
dec
ljmp
inc
in
dec
std
loopne
mov
scas
mov
add
jb
mov
fs
dec
add
mov
test
orl
stos
push
js
sbb
inc
or
enter
mov
push
call
fs
inc
call
lahf
sub
add
mov
test
adc
jne
enter
sbb
idiv
in
mov
mov
sub
sbb
mov
ljmp
xchg
call
mov
sub
iret
add
int
xchg
cmp
mov
jbe
sub
lods
ljmp
add
sbb
clc
mov
stos
xor
mov
or
xor
inc
les
insl
sub
xchg
adc
pop
pop
mov
fmuls
inc
lods
adc
mov
adc
test
int3
js
js
into
mov
pusha
add
dec
inc
and
jne
push
js
add
mov
xchg
ret
xor
test
ret
ds
rcll
jo
loop
cld
sti
jnp
add
pop
dec
ret
dec
lds
fdivr
gs
into
mov
xchg
push
inc
sbb
adc
fwait
repz
push
sub
or
inc
aam
push
es
cmp
pop
adc
rcl
cmp
dec
cmpsl
cmp
pop
sbbl
mov
icebp
and
test
inc
add
pusha
stos
sahf
inc
pop
mov
gs
xchg
lods
xchg
fsubl
add
test
mov
cwtl
insb
adc
cwtl
adc
ret
loopne
rcrl
xchg
push
pushf
xchg
pop
xchg
and
outsl
mov
fsubrl
pusha
in
rol
and
adc
adc
test
jo
xchg
pop
push
dec
add
jae
inc
mov
adc
push
rclb
int3
and
lock
sub
mov
pop
mov
sbb
nop
lret
rclb
test
loopne
add
push
jo
cmp
repz
shlb
sbb
add
test
out
addl
and
add
leave
mov
ret
mov
mov
inc
cmpsb
jo
lods
loopne
loopne
jle
mov
popa
pop
insb
jmp
xor
mov
or
pop
cltd
imul
jge
sub
and
gs
add
inc
jp
test
sub
inc
pushw
es
inc
inc
lods
pop
sub
adc
add
in
pop
or
and
or
pop
or
mov
cmp
dec
lret
mov
cmp
mov
adc
rcrb
call
pop
mov
jmp
xchg
mov
gs
jne
push
inc
mov
loopne
insb
js
fs
gs
cmp
fidivrs
mov
cmpsb
nop
lods
addb
stos
mov
or
rol
enter
out
or
js
loopne
in
lret
xchg
call
in
push
add
mov
xor
fadd
iret
iret
push
addl
in
les
test
adc
xor
cwtl
mov
fistl
es
sti
daa
fstps
pop
pop
rcr
shl
lret
cmp
loopne
es
add
or
test
mov
popa
inc
pop
xchg
outsl
sub
mov
cmpsl
mov
push
roll
cltd
lods
and
nop
enter
aaa
or
addl
adc
push
cli
cltd
fsubrl
or
test
mov
cwtl
ss
jne
mov
push
popa
jl
lock
cvtps2pi
aad
insb
sbb
jp
and
data16
jo
scas
push
leave
test
pop
and
add
enter
xchg
sub
inc
sar
adc
adc
les
subb
orb
jecxz
mov
and
test
dec
rolb
xor
in
sub
or
or
nop
or
or
ds
loopne
cmp
mov
and
ds
mov
addl
mov
cwtl
and
adc
test
in
jle
popa
and
arpl
xor
jo
lods
cmpsb
out
test
popa
test
pop
bound
push
or
daa
adc
mul
aas
jae
in
fldcw
xor
ret
pusha
add
fwait
sub
pushf
cmpsb
mov
push
sti
cmp
roll
and
les
cmp
nop
sub
insb
repnz
pop
addr16
mov
aam
mov
push
andl
mov
and
nop
shlb
das
sub
inc
pop
loopne
shll
les
jne
movsl
inc
or
repnz
add
mov
inc
adc
xor
and
ret
movsb
add
aaa
rclb
out
mov
fistpl
les
push
cwtl
arpl
aaa
pop
mov
icebp
pop
xchg
sti
mov
sbb
lret
lods
stc
dec
mov
cmpsl
add
pop
fwait
lret
nop
in
jge
loopne
adc
xor
outsb
lods
out
lods
dec
mov
mov
call
pushf
or
sub
aam
jnp
push
cld
cs
jmp
sub
jge
aas
aam
add
test
jl
fs
push
insl
fsubs
arpl
out
or
adc
call
ljmp
pusha
sub
cltd
dec
inc
clc
adc
insl
adc
out
or
js
insl
sahf
adc
lcall
in
ljmp
sbb
addb
outsl
testl
outsl
xor
enter
xor
enter
jle
out
int
or
lods
ds
sbb
out
jg
add
out
inc
popa
dec
ds
adc
add
ret
shll
aam
or
add
test
cld
daa
cwtl
mov
popa
inc
shl
mov
inc
inc
testb
jo
fmul
xchg
mov
dec
pop
stc
and
sbb
rorb
mov
jmp
sub
push
popf
cmp
dec
push
pusha
sbb
mov
pop
cmp
clc
insb
call
iret
inc
jl
dec
pop
icebp
xor
jecxz
pop
cmp
push
sub
xchg
push
js
stos
lock
or
jno
dec
pop
pop
push
js
rcrb
stc
sub
adcb
in
and
nop
cmp
xchg
enter
cwtl
rolb
adc
xchg
or
rcrl
pushf
push
hlt
add
out
out
ret
mov
ficoms
sub
xor
stos
cld
push
and
mov
mov
mov
cmp
icebp
push
ud1
or
add
push
xchg
mov
xor
xor
mov
add
adc
lock
js
call
addb
sub
inc
push
icebp
rol
pop
cmp
and
cld
mov
dec
test
mov
and
pushf
int3
jl
mov
je
add
pop
dec
mov
sbb
add
arpl
cmp
mov
adc
aaa
mov
pop
xchg
test
lret
in
subl
loopne
push
mov
sub
add
xchg
add
jg
sub
shll
sbb
mov
dec
cmp
test
xor
shrb
mov
fcmovnb
adc
dec
lock
outsb
dec
and
fs
inc
in
shlb
popa
mov
xorb
push
imul
enter
jmp
daa
fcoml
pop
or
jb
cs
fdivrl
ret
or
dec
sbb
adc
mov
movsl
lret
int
and
std
pop
adc
in
jns
adc
call
lods
fcomps
in
cmp
ds
mov
xor
sub
add
cmp
xor
jmp
icebp
xchg
inc
add
xor
nop
mov
sbb
mov
dec
jno
add
mov
or
imul
push
lds
lock
out
addb
sahf
or
xchg
lods
mov
cld
mov
cmp
seto
adc
test
lods
push
mov
xor
adc
adc
mov
xchg
lret
xlat
jmp
iret
shrb
push
sbb
xor
xor
lahf
mov
loopne
icebp
and
adc
mov
sub
loop
cwtl
fwait
cld
xor
or
rolb
and
daa
sbb
fiadds
dec
insl
out
pop
fsubrl
in
int
mov
imul
mov
cmp
call
aas
lock
bound
dec
inc
jp
sbb
adc
add
xchg
imul
inc
inc
ficoml
cmp
ret
insb
pop
add
push
dec
lods
aaa
test
inc
or
mov
jo
pop
inc
lock
sub
mov
mov
les
je
dec
call
out
call
and
jp
fsubl
xchg
inc
pop
repz
icebp
jmp
xlat
and
rolb
sub
icebp
and
sub
push
xor
xchg
mov
in
mov
cmp
and
and
pop
dec
les
movsb
pop
and
repz
clc
imul
push
fsubrs
inc
adc
cmpsb
xchg
push
jp
cmp
in
add
xchg
mov
jo
pusha
and
adc
lods
sbb
add
xchg
pop
lods
sub
sbbb
xchg
jg
sub
or
xchg
mov
jmp
sbb
ret
add
fxch
jns
xchg
xchg
int3
and
or
stos
mov
jl
pop
movswl
pushf
adc
aas
mov
mov
call
loop
leave
mov
xor
or
test
or
jecxz
loope
dec
xorb
lahf
enter
fiadds
mov
sbb
xor
inc
aad
adc
sub
mov
cli
pop
rclb
sbb
push
push
and
jg
xor
dec
andb
repnz
add
xor
in
in
push
xchg
clc
pop
add
cli
pop
cwtl
int3
je
add
xchg
push
mov
andb
test
and
das
dec
jb
sbb
cmp
xor
mov
movsl
fidivrl
test
ja
movsb
pop
and
adc
cltd
mov
sub
call
scas
jno
jl
sbb
jne
and
and
in
sbb
rclb
mov
mov
add
jmp
dec
aam
jg
shll
and
sub
repz
cmp
nop
cld
cmp
loop
popa
call
test
adc
mov
jp
loopne
adc
add
in
jae
lock
jae
test
jle
xchg
jg
lcall
mov
sbb
add
jno
enter
hlt
leave
xor
loope
sbb
out
testl
pusha
rolb
adc
sti
outsb
push
enter
icebp
and
dec
lock
int
dec
shlb
xchg
inc
add
mov
push
addb
outsl
and
sbb
add
aad
adc
pop
lret
sub
xor
stc
jmp
xchg
add
inc
adc
sbb
sbb
stos
int
xchg
dec
ror
test
adc
inc
inc
push
repnz
push
out
gs
mov
or
push
sub
sbb
inc
adc
sub
push
enter
jecxz
mov
sarl
ljmp
jns
out
movsb
enter
xorb
insl
pusha
jmp
pop
jnp
addr16
xor
rclb
sub
push
cli
sbb
add
add
push
aad
jne
sbb
pop
cld
mov
pop
outsl
fs
aaa
xor
jb
cwtl
dec
repnz
push
gs
jne
out
dec
xchg
inc
cmp
ficoml
pop
or
inc
push
wrmsr
mov
addr16
jae
fcmovb
decb
jnp
jl
cltd
adc
lahf
sti
jl
es
cli
pop
mov
inc
ficoms
xchg
adc
cmp
or
dec
and
pop
push
movsl
movsb
aam
jge
and
pushf
inc
clc
dec
nop
cli
mov
jno
push
nop
adc
cmp
icebp
call
xchg
add
push
cmp
shr
lds
nop
mov
enter
dec
dec
cli
call
divb
add
jo
and
pop
jbe
push
js
sub
add
ljmp
ret
fmuls
sbb
add
stc
cmp
cltd
and
and
leave
jecxz
jge
add
out
dec
add
mov
orb
push
cmp
enter
adc
addr16
pop
popa
cmp
out
psllw
xchg
adc
test
xor
popa
or
push
cmpsb
xchg
adc
cld
decl
cmp
subl
add
cmp
repz
daa
mov
and
mov
rcrl
lea
fistps
mov
push
dec
jecxz
add
out
fistpl
push
lea
jns
push
adc
or
cwtl
addb
shlb
repz
dec
pop
nop
int
or
adc
fcoml
jbe
cwtl
xchg
test
lahf
ficoms
enter
cmp
sbb
and
pop
js
jmp
ret
jo
lret
shll
sub
push
push
push
pop
mov
addl
sbb
nop
and
and
aaa
add
scas
jg
enter
leave
mov
sbb
int3
repz
call
fisubl
sub
js
movsb
mov
popf
ret
sahf
ror
mov
jecxz
test
adc
add
call
rclb
int3
pop
sti
jecxz
pop
push
stc
dec
in
and
addr16
lods
push
or
add
mov
or
sub
pop
jae
pop
rclb
jns
rclb
cwtl
mov
es
in
jns
pop
pop
dec
and
pushf
dec
aaa
es
mov
sub
lds
add
pop
enter
fiadds
in
inc
ds
or
add
sub
adc
add
xlat
mov
xchg
sahf
or
aam
mov
enter
pop
xchg
xchg
orl
out
leave
or
nop
outsb
shl
add
jg
ss
mov
repz
loop
bound
aaa
inc
sbb
inc
inc
pop
mov
ja
lock
ss
jb
xor
add
mov
pop
dec
stos
add
pop
add
addr16
add
bound
rclb
movsb
xorl
pop
jae
pop
aaa
pop
mov
ss
pop
cltd
icebp
mov
hlt
cmp
lret
gs
lock
rcrl
fcomps
xor
add
mov
add
pusha
mov
xchg
push
insl
nop
pop
pop
ja
icebp
and
call
jae
aaa
mov
orb
divb
mov
adc
fisubl
mov
test
outsb
dec
sbb
push
subl
rclb
add
cli
test
push
and
and
adc
pusha
lds
subb
das
jecxz
lds
xor
lahf
aad
insb
and
and
mov
loopne
out
inc
xchg
and
xchg
pop
inc
cwtl
pop
repz
add
cs
aam
add
ffree
inc
andl
xchg
sbb
push
shrb
xlat
lret
stc
pusha
mov
sbb
lret
addr16
cmp
clc
sub
push
add
rcrl
sahf
adc
mov
push
jp
ficoms
les
xchg
shlb
mov
xchg
pushw
mov
sub
mov
inc
cltd
lret
outsb
and
sbb
add
movsb
aaa
and
and
sub
push
test
ror
rcll
aam
push
es
pop
or
fisubs
mov
pop
pushf
push
into
cmpsb
add
test
movb
dec
pushf
pop
or
gs
xchg
insb
jbe
mov
xor
lahf
add
rolb
mov
mov
or
jo
mov
add
fbld
xor
fsubs
fdivrs
push
dec
lahf
and
test
mov
jo
and
das
pop
add
rcr
adc
mov
cld
pop
fnstenv
pop
outsb
and
pop
je
hlt
sbb
or
adcb
inc
sub
inc
rclb
test
iret
enter
call
cmp
mov
push
mov
cli
xlat
nop
testl
sbbl
or
insb
lock
add
jno
inc
pusha
mov
mov
clts
les
popa
ds
fwait
add
push
jae
fisttpll
add
js
push
in
sub
and
pop
add
data16
push
mov
and
mov
sahf
dec
inc
out
pushl
out
shlb
push
js
bound
push
xchg
push
out
lock
fdivl
pop
dec
jb
pushf
lahf
mov
add
dec
mov
xchg
test
fadds
data16
sub
stc
pop
ffreep
clc
pop
lret
push
cmp
ficomps
scas
add
data16
mov
lahf
sbb
pop
jns
imulb
aam
adc
in
dec
jae
test
jnp
test
inc
enter
add
sbb
fsubs
pop
jae
jo
xchg
test
xlat
add
cmpsl
lahf
mov
and
add
nop
sbb
ficoms
pop
sub
mov
or
adc
jnp
sub
jmp
mov
sarb
sbb
dec
or
mov
fsts
lds
sahf
jo
and
add
xchg
into
pop
loopne
rcll
sbbl
mov
mov
fs
loop
and
xchg
dec
mov
mov
lock
mov
bound
inc
rcrb
pop
sbb
sbb
push
sahf
adc
xor
mov
decl
clc
in
or
xor
aas
jno
andb
xchg
dec
enter
loopne
pop
inc
inc
fildll
add
adc
mov
je
dec
pop
test
mov
cmpsb
inc
andb
int
dec
inc
cmpsb
loope
outsb
insl
in
jecxz
push
cmc
dec
dec
rolb
add
sbb
sub
arpl
nop
adc
enter
testl
add
xchg
push
lds
gs
mov
rclb
cmp
sbb
pusha
outsl
pop
rolb
jl
add
ss
in
into
sahf
iret
cmp
dec
inc
push
mov
std
cwtl
mov
nop
orb
or
mov
adc
jnp
add
ja
enter
mov
jno
mov
je
xchg
dec
sub
dec
push
rcrb
jbe
fsts
cli
sarb
jecxz
outsb
outsl
add
fidivl
mov
push
mov
loop
pop
pop
cld
sahf
fs
lret
lock
addr16
add
jmp
add
add
ja
or
iret
adc
adc
add
inc
cmp
shr
jo
loopne
aaa
add
push
jmp
pop
mov
mov
mov
lock
or
push
mov
push
mov
mov
sub
pop
test
shr
aaa
xor
adc
jmp
or
and
sbb
inc
or
jecxz
jmp
int3
cmp
mov
mov
and
fstpt
mov
pop
and
flds
rcll
adc
push
mov
or
incl
ja
popf
pop
adc
and
icebp
xchg
ficompl
ret
loop
cwtl
jne
or
std
fwait
mov
or
pop
adc
popa
adc
int
adcb
icebp
pop
add
cmp
lret
mov
loop
mov
sar
xchg
or
sbb
sub
arpl
sbb
fwait
daa
dec
shll
add
push
sub
adc
sbb
adc
enter
pop
clc
in
mov
or
pusha
loopne
arpl
aad
jmp
aad
pop
push
push
out
in
add
sbb
mov
push
sub
test
or
sub
or
or
add
jnp
clc
out
jne
xor
or
sbb
jl
jnp
call
repnz
xor
mov
sbb
or
not
lock
movl
push
push
jmp
out
add
push
add
sbb
adc
notb
neg
shl
aam
jmp
xor
inc
mov
or
add
pop
call
rorl
ds
rolb
sbb
mov
mov
dec
in
cmp
pop
adc
mov
xchg
nop
pop
and
push
push
repz
push
push
insl
xchg
sub
xchg
repnz
or
cmp
jmp
je
push
lcall
and
jbe
inc
xor
adc
mov
add
into
cld
ffreep
iret
push
data16
dec
cmpsb
sub
adc
add
add
mov
out
inc
push
lods
ds
dec
xchg
leave
cmp
sub
mov
or
lcall
out
pop
neg
subl
jmp
push
xchg
push
jns
ljmpw
shlb
xchg
shll
inc
add
jns
pop
add
daa
ljmp
sbb
pop
add
adc
ret
sbb
pop
aam
cmp
dec
push
adc
je
push
push
addl
mov
cld
inc
pusha
std
jmp
cmp
repnz
jo
add
enter
and
xor
xorl
xlat
push
repz
jae
call
or
push
imul
adc
add
stos
cmpb
dec
and
and
xchg
dec
or
and
or
lret
pop
sub
push
xor
xor
push
or
dec
adc
ret
inc
scas
jnp
out
push
add
cmp
stc
push
and
lock
xor
fadds
push
push
icebp
iret
fldl
sti
cmova
xor
inc
fwait
addl
mov
adc
cmpb
orb
jns
push
add
test
push
push
add
or
ja
or
das
xor
mov
pop
jne
or
adc
sub
lods
add
push
mov
rorl
roll
aam
xor
jb
sub
pop
pushl
out
or
aas
test
and
push
pop
and
dec
mov
lds
or
imul
or
addr16
in
std
es
call
jmp
push
xorb
in
movsb
adc
add
pop
stos
cmp
sbb
mov
mov
or
jae
fldl
arpl
add
ja
and
pop
jmp
lahf
pop
xor
loop
mov
pushl
pop
dec
sbb
movsbl
or
pop
sbb
cmp
mov
push
rorl
or
jmp
mov
push
mov
inc
or
sub
lods
popf
nop
inc
cmp
lds
or
sub
sub
jne
xor
sbb
inc
push
adc
or
adc
jecxz
iret
rcrb
mov
in
pushf
cli
test
mov
and
lcall
push
mov
and
sbb
cld
cwtl
sarb
pop
pusha
xor
and
cmp
mov
sub
pop
pop
stc
pop
or
data16
xchg
mov
aam
pop
add
cmpsl
loopne
jbe
xchg
push
cwtl
adc
in
push
mov
and
sub
cltd
pop
and
xor
push
xchg
and
out
add
cmc
testb
jmp
rclb
sub
push
and
push
enter
scas
jae
mov
shl
pop
mov
shr
push
push
jmp
dec
outsl
jnp
repz
adc
fcoml
ret
jmp
lahf
jecxz
push
aad
add
push
out
and
push
sub
xor
or
sti
call
ds
add
pop
or
shl
dec
rclb
sbb
cmp
and
push
xchg
pop
in
test
daa
pop
push
les
pop
lock
adc
push
jecxz
shlb
xchg
xchg
pop
shr
xor
push
lret
pop
mov
lock
sub
add
mov
fisubrl
mov
movsl
pop
mov
add
mov
push
mov
bound
fstpt
rcrb
add
mov
xchg
shr
xor
pop
pop
or
push
fisubrs
push
les
and
test
scas
or
dec
fsubs
mov
jb
pop
es
out
imul
ja
and
jns
and
and
out
dec
jle
sub
sub
xchg
inc
sbb
sub
pop
jmp
jnp
or
pop
xor
push
pusha
xorb
add
mov
add
rcl
inc
sbb
sbb
jo
push
push
pop
mov
mov
and
jmp
push
mov
ss
or
or
or
adc
sub
xor
shr
std
push
sbb
and
inc
dec
call
lcall
inc
sbb
and
mov
xor
call
fisttpl
mov
insl
repz
shlb
fisubrs
add
add
pop
or
rcr
jmp
test
cld
add
dec
add
ret
push
mov
jmp
xor
cltd
cmpsb
lcall
or
add
sbb
or
sub
pop
cmp
or
push
sbb
mov
push
mov
cs
add
mov
pop
mov
pop
pop
or
test
dec
inc
repnz
pop
jno
dec
jno
ret
inc
adc
sub
cwtl
movsl
mov
sub
popf
mov
mov
dec
neg
in
add
aaa
and
out
adc
or
cmpsb
mov
adc
jmp
push
push
push
loopne
inc
es
xor
or
shrl
mov
sub
add
bound
push
mov
cmc
in
enter
sub
loop
push
subl
cmpsl
aaa
or
ja
lret
mov
es
push
pop
add
int3
fwait
push
xchg
mov
and
or
mov
push
rorb
pop
mov
lock
bound
add
dec
hlt
loop
sbb
pusha
and
pop
or
and
lret
push
pop
sahf
sbb
dec
mul
add
in
or
add
sti
fisttps
scas
sub
push
js
inc
or
mov
add
or
cmpsb
add
push
sbb
orl
dec
pop
notl
or
std
jnp
pusha
inc
or
and
cmp
adc
sbb
jle
pop
popa
xchg
and
arpl
es
mov
mov
push
daa
sub
cwtl
jle
aad
lds
insl
sub
add
stos
push
ss
dec
xlat
xor
jp
push
and
pop
dec
iret
ljmp
add
jno
add
ficompl
mov
push
mov
pop
jp
cs
faddl
and
sbb
decl
mov
insl
add
push
or
dec
jmp
cmp
pop
sub
movsl
jns
push
push
inc
adc
xchg
and
test
jmp
imul
repz
ret
push
pop
loopne
sbb
sub
xor
and
mov
loop
js
std
loope
je
pop
sub
cwtl
cmp
cli
pop
cld
xchg
les
shl
lret
aaa
and
sbbb
adc
sub
into
pop
adc
push
mov
dec
push
imulb
fsubrp
xor
xchg
and
push
add
out
dec
pop
mov
fsubrs
popa
cmpsb
mov
cmp
enter
mov
leave
sbb
sub
les
or
xchg
pop
gs
loopne
test
es
jb
xchg
call
das
dec
inc
pop
dec
push
xchg
or
add
aas
dec
stos
inc
rorb
sbb
fisubs
and
jae
xor
hlt
push
mov
pop
imul
fnstcw
addb
push
test
sbb
sub
pop
inc
pop
jmp
sub
xchg
in
and
xchg
icebp
rclb
jno
adc
add
cmpsl
in
sbb
dec
and
cli
xor
cmc
cmp
cmp
pop
and
andb
scas
mov
cltd
ds
cmp
or
addr16
or
xor
mov
lock
pop
add
pop
sbbb
xor
jns
push
iret
pop
xor
add
adc
jmp
xchg
adc
adc
or
add
jae
mov
and
push
cs
and
or
shr
sub
push
xor
mov
jmp
inc
cmp
je
xor
and
mov
das
jns
lock
bound
xor
mov
add
repz
xchg
xchg
pop
jge
lret
add
rclb
xorb
xchg
lods
xchg
pop
lock
jmp
xor
or
add
pusha
jmp
out
imul
stc
test
repnz
push
dec
push
pop
adc
sahf
inc
or
push
xchg
cltd
mov
inc
or
xchg
test
fcoml
dec
bound
dec
aaa
lahf
xchg
push
ljmp
in
and
addb
or
clc
mov
xchg
aam
xor
push
or
hlt
adc
add
and
dec
cmpsb
adc
dec
neg
out
add
sbb
xor
mov
int3
push
jge
mov
jmp
xor
sub
mov
and
inc
adc
subl
outsl
dec
mov
pop
add
jmp
mov
rep
sub
sbbl
bound
inc
dec
sbb
xchg
xchg
mov
sbb
xor
fwait
jmp
adc
cld
out
mov
lods
outsb
push
dec
inc
add
xor
daa
mov
adc
add
outsb
fisttpl
iret
push
xchg
js
mov
pop
pop
sub
ret
push
mov
add
push
cmp
sub
cld
in
int3
mov
mov
rclb
divl
clc
pop
mov
loope
xchg
xor
mov
mov
rcrb
inc
nop
push
or
pop
push
orb
cmpb
andb
fldl
adc
sti
and
fiaddl
fidivs
lret
ss
cwtl
inc
and
lods
cmp
dec
sbb
gs
xor
xor
add
add
clc
leave
dec
insl
imul
or
cli
popfw
sbb
repz
or
fsubr
mov
jmp
lahf
xchg
push
rclb
hlt
add
jl
inc
jecxz
popa
test
xor
shlb
jmp
sub
nop
call
pushw
adc
adcl
mov
ljmp
fcoml
add
data16
sqrtps
cmc
cld
cwtl
in
jmp
sbb
adc
imul
adc
jecxz
dec
push
pop
mov
scas
mov
ss
aas
mov
push
in
or
pop
or
and
cmp
mov
push
add
bound
sbb
push
push
push
test
sub
mov
pop
add
xor
sub
jmp
xchg
inc
mov
es
neg
rclb
mov
cli
jmp
adc
cmpsb
xor
negl
insb
sbb
add
repz
jns
or
or
jno
and
or
and
or
pop
push
xor
xchg
fisttps
call
push
pusha
xchg
pop
js
inc
mov
jae
add
pop
adc
movsl
rcll
addl
into
or
iret
cmp
push
subb
ret
push
mov
push
arpl
not
mov
xchg
data16
or
mov
repnz
rorb
es
das
fwait
mov
ret
je
pop
xchg
mov
push
mov
lahf
sub
leave
add
lret
jg
and
xor
jns
inc
pop
pop
jae
jge
cmc
pop
not
xchg
call
in
orb
cmpsl
add
je
lds
add
sbb
mov
push
divb
lcall
mov
inc
sub
sub
pop
or
shlb
or
cmp
shrl
xor
cmp
and
xor
push
nop
fcomps
divl
adc
sub
shll
or
pop
orb
mov
sub
adc
pop
pusha
popa
mov
insb
xor
inc
andl
mov
jecxz
ljmp
push
cmpxchg
jmp
outsb
js
lock
mov
adc
sbb
iret
pop
and
jmp
xor
pusha
sbb
fs
aas
add
gs
inc
iret
rolb
imul
xchg
ss
test
push
pop
add
jl
movhlps
int
pop
add
and
aaa
inc
lahf
dec
fisubl
and
jbe,pt
push
sbb
xchg
pop
push
push
sbb
push
pop
or
insb
jg
jb
jp
repz
dec
les
lds
call
mov
jmp
inc
mov
loope
js
xor
or
jmp
jle
dec
pop
mov
arpl
xor
out
dec
add
jns
lret
roll
movsl
inc
aas
andb
or
add
jno
or
jmp
xchg
push
add
pop
mov
loopnew
push
arpl
in
xchg
and
popl
divl
rcrb
pop
popf
jl
xor
add
pop
clts
push
push
mov
add
push
add
lock
imul
cmpl
add
ficomps
add
cs
add
and
dec
mov
stos
inc
sarb
popa
xchg
push
jo
xor
stos
dec
xchg
add
jmp
inc
jae
ret
pop
ds
repz
fs
push
call
inc
adc
push
imulb
xchg
pop
lds
mov
not
out
pop
repnz
dec
xor
cmp
into
xchg
jne
orl
addr16
cmp
mov
xor
cmp
jmp
dec
add
sub
stc
add
pop
sahf
xorb
in
iret
insb
xor
jmp
mov
out
xor
cwtl
hlt
popa
pop
xchg
sbb
push
sub
seta
cwtl
pop
xor
jbe
cmp
cmc
lret
rolb
jno
ds
push
mov
add
jmp
xor
ret
xlat
and
stos
adc
adc
das
incb
lcall
shr
and
inc
cmpb
fstpt
mov
jae
into
inc
ss
mov
xchg
push
lock
push
pop
cmp
or
push
and
pop
push
test
inc
nop
movsb
sbb
daa
or
mov
sbb
mov
dec
sarl
cmp
push
scas
mov
in
sbb
jnp
iret
xor
jle
pop
xor
sub
or
xor
das
jmp
sub
add
negl
fucomi
add
sbbb
mov
insl
bnd
pop
lahf
and
stos
inc
jge
sbb
add
add
xor
call
pushf
push
enter
add
in
xor
ret
int3
or
mov
cmpsb
pop
push
arpl
ss
cmp
push
cs
xorl
cli
lods
jae
mov
sbb
in
pop
dec
xor
mov
mov
pop
sbb
scas
xchg
es
mov
aaa
sti
iret
sub
sbb
divb
jae
or
je
ret
or
shll
dec
jo
out
pop
add
jns
sbb
mov
sub
cmp
aad
lds
pop
jae
pop
mov
adc
std
sub
ror
pusha
push
shr
cmp
rorb
fildll
lods
push
hlt
sub
or
rorb
loopne
mov
mov
push
push
push
pop
mov
mov
arpl
mov
xchg
or
arpl
push
imul
imul
cwtl
or
jl
movsb
shl
jae
pop
and
sub
jge
ss
adc
out
adc
lcall
or
jmp
call
addb
dec
add
and
or
pop
jae
pop
xor
bound
add
jb
inc
or
pop
add
cmpb
ljmp
sub
fwait
add
and
pop
xor
adc
test
gs
imull
roll
jne
push
sbb
dec
fldenv
sub
inc
jl
aad
test
stc
in
bound
mov
mov
pop
stc
call
pusha
pop
sub
call
and
test
adc
mov
ss
add
daa
outsb
xor
ror
jl
pop
loope
into
int3
push
push
adc
xchg
repnz
and
xchg
sub
adc
push
dec
stc
and
jecxz
sub
mov
jmp
push
adcb
sub
and
add
shll
xchg
xchg
lahf
push
imul
add
pop
outsb
push
mov
pop
add
add
push
mov
enter
testl
sbb
sub
popw
pop
add
pop
lret
popa
test
jg
and
loop
add
repnz
lret
pop
mov
cld
sub
sar
add
mov
cld
pop
add
sub
les
fisttps
je
add
jmp
mov
ret
inc
cmp
ss
shr
add
push
sub
std
sub
push
loop
and
xchg
sub
mov
add
in
imul
xchg
pop
add
mov
cld
mov
sub
add
leave
adcb
sub
and
and
push
pop
push
inc
jmpw
adc
inc
leave
and
mov
bound
xor
mov
and
out
pop
adc
not
adc
lret
stos
dec
adc
xor
das
and
push
xchg
sbb
or
xorb
push
mov
jmp
js
lret
lds
mov
pop
add
int3
cmp
inc
jb
movsl
pushw
or
out
add
imul
dec
mov
mov
fisubs
sarb
loopne
add
xchg
adc
pop
inc
adc
nop
js
daa
ds
push
out
or
pop
inc
mov
push
test
imul
out
or
cmp
dec
data16
mov
mov
nop
addl
inc
je
push
shr
loope
pop
and
or
insl
mov
pop
movsb
bound
cld
xlat
dec
pop
mov
xor
lret
nop
xchg
inc
push
scas
mov
sub
lret
xchg
add
int3
push
add
aas
adc
xor
adc
and
cltd
xor
cltd
add
or
add
jnp
fs
mov
and
adc
inc
rorb
push
push
mov
add
outsb
test
dec
mov
pop
icebp
push
dec
aam
rorl
sbb
movsb
popa
jae
or
xor
dec
mov
jne
jg
pusha
popl
pop
sti
out
ret
jmp
leave
or
pop
xchg
pop
pop
xchg
shl
add
xor
mov
test
add
ds
push
sub
jl
mov
mov
xor
es
push
and
mov
repnz
adc
push
mov
pop
ds
xchg
subb
aam
pusha
xor
inc
adc
sbb
test
lods
out
pusha
fldt
sbb
js
sahf
mov
pop
xchg
gs
push
push
call
or
jns
sub
cmp
or
jmp
out
jg
jbe
add
lcall
rclb
sbb
and
add
add
pop
pop
xchg
outsl
jg
faddl
dec
add
pop
cld
not
mov
movsl
push
subb
push
adc
mov
pop
add
cmp
cltd
push
fs
shlb
stos
inc
add
jbe
sub
lods
add
mov
fcompl
or
ja
call
add
push
add
xor
or
or
mov
and
and
adc
popf
add
int3
pop
roll
out
fsubr
xor
out
subl
mov
push
push
test
lock
dec
push
sub
add
pop
xchg
pop
rol
mov
add
dec
leave
pop
fabs
loopne
icebp
push
pop
mov
mov
shll
inc
mov
lret
insb
lock
or
fiaddl
pop
jmp
cmc
dec
js
mov
or
jmp
cmp
insl
sub
ret
push
sub
or
inc
inc
or
jmp
inc
lock
and
call
and
and
pop
sub
push
add
jmp
andb
pop
inc
int3
lret
xchg
mov
xor
pop
and
add
sbb
sbb
pop
call
xor
mov
inc
inc
add
sbb
popa
and
shll
push
or
push
push
shrl
and
xor
jns
xchg
add
pop
mov
xchg
pop
push
mov
movsb
mov
xor
push
push
dec
mov
mov
add
pop
cli
iret
mov
es
rorb
add
inc
push
mov
imul
les
xchg
add
shr
push
jge
rorb
fcomps
mov
pop
repz
sbb
add
push
lock
ret
cs
xor
inc
jle
es
push
push
es
rcrb
pop
xlat
les
sub
xor
pop
insb
outsb
lahf
sbb
fsts
adc
insl
mov
push
jmp
pop
xor
or
hlt
gs
les
stos
xor
rorl
mov
into
adc
push
pop
mov
nop
lret
cli
pop
fmull
push
subl
dec
xchg
es
test
push
mov
xchg
jecxz
test
inc
add
addb
sub
push
enter
ret
cwtl
les
dec
push
pop
and
mov
bnd
push
sub
mov
and
shr
mov
xchg
lods
add
aaa
sbb
sahf
add
pop
xchg
lahf
in
push
or
aas
enter
mov
popa
inc
xchg
xor
or
sub
shl
neg
sub
push
xor
and
inc
jnp,pt
cmp
cmpsb
sbb
sub
push
pop
mov
ja
adc
adc
pop
push
clc
out
nop
sldt
jecxz
xor
mov
mov
push
imul
adc
pop
mov
mov
push
outsb
sub
stos
nop
mov
mov
push
add
mov
pop
fiadds
rcrb
push
rcll
adc
cltd
mov
lods
push
mov
cmp
add
adc
mov
icebp
jmp
out
jl
dec
and
cmpsl
inc
int3
add
xor
icebp
or
push
and
adc
pusha
mov
addr16
sbb
add
aad
xchg
dec
xchg
out
lcall
rolb
jae
xchg
insl
subl
popf
mov
mov
fs
inc
inc
jo
or
push
sub
movsb
and
mov
movsb
orl
aam
sti
pop
fwait
add
lcall
mov
pop
jmp
push
testb
icebp
mov
push
add
cmpsl
mov
mov
xor
add
lret
pop
xor
dec
mov
fists
pop
shlb
js
and
jmp
xchg
dec
sub
and
ret
and
pop
cwtl
repnz
adc
pushf
insb
repnz
or
mov
rcrl
add
and
push
and
popa
push
pusha
cmpsl
mov
and
divb
cmc
cs
or
sahf
sbb
mov
cmp
dec
mov
mov
mov
fcoms
add
sbb
inc
inc
xor
xorl
insb
adc
adc
add
shr
aaa
ret
add
loopne
test
std
adc
jecxz
or
insb
sub
dec
mov
jns
dec
or
inc
out
cmpsb
test
into
pop
xchg
and
aas
xlat
mov
mov
xor
aam
repz
adc
dec
jp
fwait
push
jns
mov
fsubs
add
sbb
jne
cld
mov
pop
cwtl
lcall
pop
and
pop
sub
mov
arpl
mov
add
pminsw
or
shl
call
push
xor
inc
pop
cmp
je
lahf
addb
shr
or
mov
mov
sti
fildl
jle
xor
addb
add
stc
xlat
inc
xchg
add
fsubrp
xchg
mov
jnp
add
pusha
push
sub
pop
insl
popw
push
push
rclb
inc
push
mov
das
shl
add
in
rclb
sub
pusha
loope
add
aas
push
aad
xor
pusha
pop
dec
jle
jns
cmp
jl
mov
mov
push
push
mov
cmp
imul
icebp
enter
xchg
inc
mov
imul
idivb
mov
push
loop
shlb
jno
jmp
shll
sbb
das
inc
daa
or
inc
hlt
out
pop
adc
mov
fnstenv
cwtl
and
pop
mov
sbb
ret
test
and
xchg
popf
pushf
movsl
jmp
lea
scas
pop
add
inc
sub
jg
jmp
jl
cmp
or
mov
fiadds
pop
dec
addb
add
and
shrb
mov
push
add
popa
xor
pop
push
add
pminsw
test
in
pop
repnz
andl
pop
push
or
jae
shr
andb
lock
sbb
xor
or
sbb
fisttps
sahf
cltd
xchg
fmul
xchg
inc
push
push
lahf
cmp
icebp
and
jge
loop
push
ja
and
mov
mov
outsb
add
or
jle
out
add
das
sub
sbb
add
movsb
arpl
push
icebp
lretw
mov
xor
imul
out
xchg
sub
push
dec
pop
lea
add
mov
add
clc
sbb
lahf
and
leave
xchg
push
scas
jnp
inc
sahf
sub
pop
pop
sub
mov
shll
and
mov
gs
sub
sbb
dec
mov
dec
mov
mov
push
cmpsb
and
push
lcall
push
jmp
push
rorb
pop
gs
or
fwait
or
clc
les
nop
fdiv
stc
out
add
in
sub
pop
lods
clc
sbb
xor
or
adc
xor
aas
arpl
sub
sub
xlat
psraw
inc
in
sub
lea
das
push
add
jnp
loop
movsl
enter
dec
and
lods
scas
iret
pop
pop
lods
rorl
inc
xchg
dec
cwtl
mov
and
leave
and
mov
dec
sub
xorl
or
int
pop
or
add
pop
sub
bound
pusha
xchg
or
xor
jecxz
and
or
jmp
push
pop
pop
stc
xor
shlb
or
mov
sub
add
cmp
out
add
push
adc
inc
mov
inc
shrl
movsl
fldenv
in
dec
maxps
cmp
or
cmp
outsl
xor
mov
jg
add
jo
sub
insl
imul
leave
sub
inc
jmp
and
test
sbb
xor
add
subb
and
sti
popf
sti
cwtl
shrb
mov
cmpsb
int
xor
arpl
faddl
add
arpl
js
and
mov
ss
sbbb
pop
inc
push
push
push
pop
test
xchg
add
inc
testl
jmp
ja
out
popf
das
fldenv
sbb
rcrb
and
mov
mov
outsb
dec
sub
fsts
or
adcb
add
push
inc
lds
mov
mov
and
or
std
jmp
ret
movsb
adc
movsl
dec
mov
jmp
mov
bound
pop
icebp
sub
mov
and
ret
and
adcl
int
jb
pop
push
push
push
mov
adc
xor
out
ret
push
and
mov
lret
adc
mov
or
jbe
cmp
mov
add
je
sub
mov
add
push
mov
insl
out
xchg
leave
add
jle
in
push
or
leave
xchg
lock
push
lods
xor
jmp
mov
aam
pop
pop
ds
pop
mov
or
ja
insl
mov
imul
out
popf
in
jno
xlat
mov
mov
adc
out
sub
add
in
and
add
shrb
xor
push
std
test
or
xor
hlt
inc
dec
add
inc
cmp
icebp
pop
andl
jmp
movb
into
xor
dec
mov
pop
mov
imul
jmp
sub
cli
pop
mov
push
xor
inc
add
mov
dec
dec
xor
sub
sar
lret
xor
or
xchg
xor
adc
add
xchg
das
mov
sbbl
popa
xor
js
in
nop
mov
add
sub
les
pop
shr
add
fwait
testb
jb
cltd
sub
ret
mov
and
je
or
cmp
lea
pop
test
xorl
add
pop
and
xor
fsubl
sub
ret
subl
and
outsb
mov
loop
jg
sbb
push
adc
lock
mov
xchg
movsl
jmp
push
and
insl
adc
loopne
mov
add
add
lret
pusha
ja
sub
xchg
daa
dec
and
mov
sbb
sub
cwtl
xchg
orl
popa
sub
add
jo
dec
push
push
jp
inc
clc
test
add
repnz
mov
or
cs
push
or
lcall
ds
jnp
shl
sub
push
arpl
loopne
push
xchg
inc
js
mov
mov
nop
popf
imul
cmp
or
out
ds
and
incl
mov
and
dec
add
lods
xor
nop
cmpl
sbb
jmp
ljmp
leave
xchg
dec
pop
stos
mov
mov
or
or
push
inc
mov
and
jmp
lods
push
fcoms
pusha
or
add
sub
xlat
jle
loopne
pop
dec
stos
fxch
cmp
pushf
ret
or
mov
and
lds
jmp
or
push
cmpsl
or
or
ret
jae
jbe
orl
je
idivl
pop
loope
jb
gs
in
lods
fnstsw
mov
xor
out
out
add
pop
pushf
movsl
imul
sub
pop
pop
dec
jmp
call
mov
mulb
ss
xchg
cmp
lds
call
adc
xchg
push
mov
jne
sub
lahf
push
mov
mov
add
and
rorl
data16
sub
sbb
jnp
sub
mov
test
xchg
and
and
add
mov
push
dec
add
xor
sub
push
jg
jnp
pop
and
xchg
aad
and
clc
push
sbb
add
arpl
push
mov
idivb
movsl
ret
lds
lock
and
add
sbb
jg
xchg
in
and
add
push
xorb
jo
xchg
shrl
mov
mov
push
add
pop
or
das
rcll
add
push
fnstcw
mov
add
sub
jbe
add
insl
mov
pop
mov
hlt
jbe
daa
test
repnz
mov
xchg
imul
jo
data16
or
iret
lock
inc
bound
push
push
mov
push
jne
cmpsl
add
repnz
insl
scas
pop
lcall
fwait
cmp
faddl
inc
adc
inc
inc
and
sub
push
loope
js
fmuls
repnz
enter
or
out
xor
sub
dec
mov
enter
loop
sub
mov
inc
orl
xor
std
ljmp
mov
and
push
stos
mov
jb
dec
dec
xor
xchg
adc
stos
js
xchg
add
push
push
jae
xchg
ljmp
sub
dec
cmp
rcrl
xlat
bound
lds
and
sbb
daa
loope
push
mov
in
inc
push
xor
pop
push
mov
cmpsb
lret
pop
decl
mov
psubsw
cltd
jl
in
imulb
fcoms
jle
adc
shl
jmp
cmc
sti
or
add
add
jmp
mov
add
dec
inc
insb
add
sbb
push
pusha
in
mov
push
mov
dec
int3
loope
and
jo
rolb
fisttps
adc
sbb
inc
jl
daa
ds
pop
stos
lods
sarl
push
fiaddl
pop
pop
add
push
bound
imul
mov
mov
fstps
stc
jo
rcll
stc
test
lods
dec
shrb
lods
popf
call
dec
stos
push
scas
lock
add
repz
adc
inc
sbb
dec
out
add
jecxz
mov
cmp
into
xor
jb
daa
mov
clc
daa
add
add
xor
imul
push
stc
sbb
mov
ss
pop
not
shl
filds
shr
push
cmpsl
xor
push
clc
in
sub
inc
not
sub
mov
mov
dec
int3
mov
or
xor
add
or
xor
mov
pop
loop
xor
xchg
pushf
jmp
sub
xchg
rcrl
push
icebp
lret
enter
scas
ret
or
negb
mov
pop
mov
add
xor
xchg
cmp
push
cmpb
cmpsl
pushf
lods
and
or
or
adcb
cmp
ljmp
popa
and
and
sub
push
insb
mov
pushw
dec
push
mov
add
lea
cli
and
adc
cmp
hlt
in
push
pop
pop
push
cs
adc
repz
xor
add
pusha
push
leave
fs
movsl
push
push
mov
jmp
movsl
mov
cltd
js
mov
add
aad
push
sbb
testb
mov
cmp
dec
dec
mov
bnd
out
push
add
or
and
add
sub
pop
jo
adc
fistpll
ret
push
mov
xchg
into
inc
and
das
add
rorl
push
dec
gs
mov
sub
adc
add
fisubrl
mov
sbb
add
loope
add
lahf
movsl
sub
icebp
pop
test
cmovbe
mov
shr
add
inc
cld
not
ret
xchg
addl
mov
jg
sub
xchg
adc
xor
cmp
cmp
pop
adc
cmpsl
ja
inc
cli
cli
jl
std
int
sbb
dec
cmp
adc
outsl
loope
push
insb
add
loopne
movsl
subl
sbb
mov
xchg
test
in
xchg
push
push
pop
not
adc
xlat
cmp
fdivrs
pop
and
push
adc
push
test
add
nop
test
pop
xor
lock
sub
pop
push
test
push
add
repz
sub
sub
jmp
mov
shrb
cli
ds
pop
imull
jmp
pop
popa
xor
aas
jnp
dec
out
int3
inc
subb
pop
aam
xor
jnp
cmp
jne
notl
ret
cmp
into
pop
add
ret
push
mov
out
jge
ja
pop
cmpsb
and
cli
cmp
adc
popa
jp
outsb
or
mov
push
sub
adc
or
xchg
push
add
add
push
push
jmp
stos
imul
insb
adc
push
push
pop
push
sbb
sbb
orb
add
jns
sub
aaa
sbb
or
imul
mov
push
adc
add
jmp
add
xor
or
mov
cmp
mov
pop
adc
xlat
inc
repnz
xor
mov
inc
xchg
or
jle
mov
das
into
aad
and
insb
popa
cld
cs
notb
push
mov
hlt
ss
add
data16
les
loope
sub
lret
enter
cwtl
insl
dec
cmp
dec
rcrb
and
dec
push
mov
arpl
adc
push
sub
sub
and
testb
push
outsb
sub
call
push
sahf
aas
inc
ret
mov
call
pop
das
in
mov
rcrb
sub
stc
xor
push
inc
push
add
mov
push
or
push
mov
jmp
pop
cld
adc
filds
cmpsl
test
inc
adc
pop
or
mov
sarb
int3
jecxz
xor
push
jp
sbb
outsb
sub
clc
loope
sub
sahf
rol
mull
inc
out
sarl
in
sub
mov
popf
movsl
lcall
jbe
jmp
adc
inc
lahf
ror
and
adc
jo
and
pop
addl
inc
sub
aaa
push
or
daa
sbb
adc
push
sub
push
jo
ds
sti
loop
adc
out
add
push
hlt
loopne
inc
add
lods
enter
or
jnp
cmp
mov
pop
addr16
mov
cmp
and
mov
and
or
outsb
mov
mov
push
jp
push
pop
movsb
ret
or
call
or
or
in
or
mov
jb
add
icebp
dec
add
pop
push
inc
fistps
cs
pusha
jae
xchg
cltd
bound
mov
pop
pop
lcall
jle
mov
out
xor
pusha
cwtl
lds
jns
push
mov
icebp
sub
data16
jo
mov
ret
gs
imul
push
lock
mov
mov
daa
jmp
or
jbe
addr16
out
add
sbb
stos
data16
int3
repnz
dec
push
movsl
frstor
xor
mov
or
mov
in
sbb
add
idivl
mov
enter
cmp
jl
aad
add
dec
jmp
outsb
inc
push
mov
dec
jecxz
dec
pop
or
test
fwait
pop
mov
cmp
add
insl
push
xchg
add
ret
lret
jbe
pop
xchg
jp
mov
push
mov
addr16
sbb
ds
push
dec
mov
shlb
test
loop
cmc
push
test
push
int3
adc
or
fs
cmp
push
sub
popa
dec
and
cld
push
xchg
mov
mov
sbb
mov
shr
jmp
push
mov
icebp
dec
outsl
push
push
enter
inc
cmpsb
mov
xor
testb
mov
inc
dec
pop
sbb
out
pop
cltd
inc
inc
and
and
add
loop
pusha
popa
xor
push
inc
pushf
inc
enter
add
insl
dec
adc
js
xor
xor
xor
in
repz
lods
out
cmpsl
lock
push
pop
pop
cmpb
sub
lret
jae
dec
mov
pop
dec
push
roll
ret
ja
mov
cwtl
lds
std
mov
xor
fs
mov
pop
mov
icebp
xchg
lock
push
push
mov
jno
push
insb
add
test
jmp
imull
inc
dec
push
in
clc
pop
xor
lods
rorb
imul
and
xor
add
sbb
std
push
addl
mov
int3
adc
ret
jno
fldl
or
pop
adc
pop
dec
movsb
push
sub
sarb
or
mov
push
out
addr16
xchg
xor
repz
cmp
xor
push
jo
mov
add
jae
dec
push
mov
clc
inc
test
ljmp
repnz
pop
stos
jge
cmp
mov
sahf
mov
cs
and
insl
pop
jg
pop
sbb
jg
js
push
jmp
testb
adc
fistpl
jmp
rcrb
pop
out
mov
out
lcall
pop
cmp
and
sbb
xor
sahf
jmp
ss
push
push
lock
sub
fldt
stos
push
repnz
inc
inc
std
or
mov
and
inc
hlt
add
cmp
push
inc
and
roll
sbb
mov
not
js
sub
mov
inc
popa
sub
add
call
jnp
cmp
shl
data16
leave
sub
push
mov
xchg
sub
push
and
pop
inc
pop
test
sarb
stos
rorb
inc
clc
add
or
pop
insl
inc
or
jge
or
jmp
push
rol
and
adc
fildl
lods
inc
pusha
sub
jbe
cmp
or
out
add
incl
clc
or
jmp
lds
add
and
test
rcl
dec
daa
and
rolb
mov
add
xlat
dec
andb
sbb
pop
add
bnd
clc
pop
mov
xchg
jmp
shl
not
push
in
push
inc
rcl
xor
mov
cmp
lret
and
xchg
jbe
mov
in
mov
mov
hlt
ret
jmp
loope
das
in
pusha
mov
push
movsb
sahf
mov
cs
or
add
pop
cmp
daa
sub
push
or
push
add
insw
push
mov
push
mov
ja
mov
and
pop
pop
sub
pushf
aas
jbe
and
pop
adc
pop
mov
push
inc
adc
into
je
mov
push
mov
cmpsb
push
imul
xchg
sub
jne
popa
aad
pop
push
sub
pop
pop
mov
shlb
call
push
jae
add
fisubrs
andb
and
dec
ds
push
fs
push
dec
mov
sti
jns
bound
or
shl
sub
xchg
xchg
mov
mov
negb
test
push
jbe
pusha
sbb
cld
jo
pop
rcrb
lds
jmp
mov
add
sub
rorb
inc
mov
scas
outsb
int3
imul
scas
icebp
and
cmp
jmp
add
inc
xchg
cltd
sar
mov
pop
mull
in
jne
sbb
adc
out
push
sahf
dec
and
xor
mov
mov
outsl
add
incl
decb
sub
cmp
or
jno
jp
pop
and
pop
inc
stc
jecxz
std
sub
fs
fwait
adc
add
lahf
xor
fmulp
iret
inc
jl
addb
adc
sbb
ljmp
test
jmp
or
xchg
arpl
popa
cld
pop
ds
ret
cwtl
hlt
xchg
test
pop
add
push
sub
movsl
adc
mov
js
jmp
and
popf
mov
push
or
movsl
into
jb
xor
cmp
sub
sub
sbb
imul
push
xchg
jmp
xchg
sub
shl
ja
dec
push
xor
fnsave
or
sub
adc
lret
sbb
push
outsl
not
inc
nop
lea
jp
aas
adc
inc
dec
test
gs
test
in
sbb
push
and
add
daa
rolb
call
mull
push
nop
push
add
xchg
pop
pop
inc
rclb
inc
add
jge
or
xchg
repz
outsb
fcmovnu
jp
adc
dec
xor
or
push
add
inc
and
out
jecxz
add
sbb
neg
mov
jae
add
shlb
popa
jl
sub
jmp
push
out
rol
add
dec
inc
out
pop
in
clc
pop
push
aas
xchg
pop
pop
push
mov
jns
adc
jno
push
inc
add
mov
inc
dec
test
push
pop
dec
push
jbe
loop
pop
push
or
xchg
andl
addb
cmc
popf
data16
fwait
jge
lcall
cmp
dec
sub
ret
and
fldcw
xor
push
lret
lcall
add
inc
push
xchg
enter
mov
lods
mov
xchg
xor
jle
lea
outsb
cmp
sub
test
stos
fs
lods
imul
mov
ljmp
test
inc
aam
jae
fdivr
mov
push
int
xchg
xchg
mov
jmp
push
rcr
xor
shl
test
mov
push
xorl
and
mov
sub
add
daa
shr
rcll
into
testl
cwtl
adc
dec
pop
bound
xchg
repz
jns
call
jo
and
int
cld
daa
dec
jns
fistpl
pop
jmp
pop
add
addr16
addr16
ret
rol
push
sbb
movsl
jmp
int
rcl
push
xchg
inc
push
jmp
pop
push
mov
mov
lret
push
mov
inc
lods
nop
and
lods
fstl
out
or
push
mov
dec
es
cs
repnz
xchg
cmpl
pop
add
adc
push
add
pop
push
mov
loope
out
cwtl
push
mov
cmp
fs
pop
std
sbb
ret
pop
jns
in
lret
adc
inc
sub
or
js
dec
add
xchg
inc
mov
mov
rcrb
or
or
imul
mov
xor
adc
jbe
pusha
cmp
movzbl
or
or
clc
jmp
and
mov
cmpsl
push
das
rclb
loop
and
ret
xchg
inc
bound
push
mov
jne
das
mov
cmpsl
pop
fbld
inc
stos
xor
inc
inc
lods
aam
adc
outsb
sbb
mov
jle
sub
mov
movsb
dec
inc
arpl
or
and
adc
and
mov
popf
adc
xor
jbe
loopne
mov
ds
ss
sbb
add
imulb
in
jle
popf
clc
dec
mov
cmc
dec
cmc
xor
sub
pusha
sbb
or
hlt
xchg
int3
cmp
mov
mov
rolb
sub
add
xor
mov
inc
jae
jecxz
sub
outsb
sub
mov
sbb
mov
mov
sarl
dec
cmp
mov
and
lret
shl
js
inc
arpl
mov
incb
push
mov
shrb
push
dec
add
and
and
mov
xor
sahf
loop
dec
xchg
imulb
das
add
xor
push
mov
xchg
es
sub
xor
ret
xchg
push
or
dec
dec
mov
push
pop
sbb
xchg
jge
dec
push
mov
fisttpl
dec
clc
or
js
outsb
imul
mov
xchg
and
mov
inc
dec
dec
xlat
mov
add
call
sbb
lods
sub
fldenv
pop
and
adc
movsb
cwtl
cmp
scas
mov
icebp
mov
ds
pop
adc
icebp
roll
push
mov
inc
cmp
and
cmpsb
push
mov
mov
rcll
in
xchg
movsb
dec
lds
and
stc
pop
lcall
je
addr16
jmp
mov
stc
aam
jmp
mull
inc
or
dec
pushf
push
push
inc
ss
in
out
jge
adc
pop
pop
pop
mov
cmp
loope
in
pop
subb
pop
shll
adc
cmp
xchg
dec
push
cmp
dec
divb
or
pop
test
or
aas
les
push
les
inc
aas
sub
xor
rcrl
subl
es
push
and
or
in
shr
repz
dec
and
movsb
mov
and
jo
push
or
mov
sub
jl
mov
add
lret
gs
loop
and
repnz
sbb
push
shlb
add
push
add
push
repz
pop
test
loopne
adc
pop
and
movsl
pop
jno
test
sti
jno
adc
aas
fisttpll
xlat
addb
aad
push
or
mov
mov
scas
test
push
pop
add
mov
adc
push
and
leave
push
pusha
ret
push
cmp
stos
adc
push
add
leave
pop
dec
and
shl
xor
sbb
pop
inc
sub
adc
cltd
push
mov
insb
mov
shl
andb
mov
jo
lock
roll
jmp
das
shll
mov
and
pop
insb
add
aas
cmpsb
pop
sub
outsb
stos
sub
pop
cmpsb
insb
pop
add
les
pop
sbbl
mov
imul
or
out
ret
test
sbb
aas
andl
stc
imul
addl
sbb
flds
dec
or
and
clc
pop
xor
push
xchg
sub
in
mov
arpl
pop
dec
xor
pop
sub
das
mov
stos
jbe
xchg
sub
push
cld
imul
sbb
mov
sub
shlb
icebp
rclb
adc
jno
xor
cmp
push
add
adc
arpl
or
push
cltd
add
test
dec
data16
adc
adc
test
aam
xor
push
and
or
sbb
mov
sub
push
push
and
pop
pop
pop
push
clc
lock
in
nop
leave
rcl
fisttpl
movsl
jmp
pop
push
lret
pop
pop
jno
ljmp
push
push
mov
push
jl
jmp
xchg
pop
sub
enter
or
stos
mov
mov
negl
ret
push
es
adc
in
xchg
mov
rorb
test
js
fisttpl
jne
sbb
mov
adc
dec
dec
xor
fistl
fbstp
push
dec
xchg
or
sbb
adc
outsb
inc
jecxz
push
je
add
mov
lret
push
pop
loope
inc
subl
loop
mov
or
lcall
jl
mov
mov
jle
pusha
or
jmp
pusha
push
pop
shlb
mov
add
iret
mov
mov
or
dec
arpl
adc
test
add
inc
sbb
das
rorl
out
adc
push
pop
ja
jg
ljmp
sahf
inc
adc
and
xchg
repnz
repz
sbb
and
nop
imul
xchg
push
rclb
mov
jmp
and
jae
add
or
jg
push
add
vorps
test
imul
int
in
xor
pop
sbbl
loopne
lea
jbe
pop
sbb
jmp
push
stos
or
imul
roll
ljmp
mov
mov
icebp
mov
push
jp
jge
pop
inc
out
add
jmp
inc
mov
push
mov
cmpb
fdivs
bnd
clc
push
sub
loop
add
pop
pop
push
loop
lcall
inc
sbb
and
mov
pop
add
call
push
andb
jmp
pop
xor
pop
daa
sbb
xor
jmp
cmpsb
inc
or
dec
mov
daa
push
mov
push
sbb
mov
xor
faddl
psubd
push
je,pn
sti
sub
push
push
jmp
xchg
stos
and
xchg
ret
inc
clc
jg
push
int3
nop
or
cmp
add
inc
push
add
adc
mov
sub
push
jbe
adc
add
add
adc
bound
mov
popa
out
adc
ret
push
adc
dec
dec
add
cltd
cld
xor
xchg
addb
ds
pop
clc
push
push
bound
xchg
or
cmpsb
in
or
add
ret
idivl
pop
mov
fs
scas
mov
or
adc
gs
int
push
push
sbb
push
jbe
ja
je
and
mov
dec
or
imul
ret
rolb
jmp
fcmovb
jmp
or
inc
mov
pusha
mov
ret
flds
and
arpl
in
daa
inc
sub
fisubs
das
jo
insl
add
inc
pop
repnz
insb
or
mov
mov
add
push
into
or
in
fcomps
sbb
call
mov
xor
mov
mov
lcall
lahf
pushf
cld
adc
fiaddl
cli
pop
inc
test
mov
std
sub
shr
mov
rorb
neg
jg
mov
sub
popa
int3
jno
xor
repnz
movb
aad
stos
ds
and
sahf
cmp
lods
dec
cmpb
sbb
xor
leave
inc
dec
mov
inc
sti
shll
add
or
dec
mov
adc
sub
mov
cmp
addr16
inc
pop
adcb
jle
pop
mov
mov
jns
fs
jmp
adc
mov
add
pop
inc
adc
filds
jle
cmp
jle
xor
dec
jmp
shll
sub
clc
lret
sbb
das
hlt
push
inc
aaa
int3
mov
in
rcrb
xchg
jle
jmp
daa
push
push
insl
sbb
mov
hlt
sub
and
jmp
adc
test
hlt
or
xor
mov
mov
mov
jg
rclb
jmp
push
xchg
rorb
jne
jmp
push
sbb
inc
sti
mov
add
shl
push
lret
mov
mov
aaa
sub
test
movsl
dec
pop
loop
xchg
xchg
sbb
js
shr
gs
add
or
or
mov
xor
in
push
sub
xor
insb
imul
or
cld
stos
or
cmc
pop
or
mov
jmp
imul
dec
pop
repz
and
lea
icebp
mov
add
orl
add
jge
dec
lahf
addb
push
sub
jo
pop
das
xor
lret
pop
push
dec
sub
nop
ficoms
test
movb
mov
xchg
pop
push
imul
mov
je
pushf
out
jb
clc
mov
dec
pop
sub
fldl2t
pushf
pop
sbb
imul
inc
jle
data16
jmp
movsl
dec
jl
xor
out
pop
out
dec
cwtl
les
pop
add
push
pop
pop
jge
cmp
lea
aam
test
mov
sahf
pop
jne
dec
xchg
jl
sbb
sbbl
xor
cmp
dec
cmc
add
insb
pushf
jae
cli
lret
sarl
sbb
push
pop
xchg
jl
fwait
rolb
jmp
outsb
rcrb
hlt
rorb
ja
or
cmc
mov
xor
into
jo
in
xor
movsb
jle
add
addr16
or
movsb
aaa
addb
inc
inc
stos
cmp
or
out
imul
push
dec
scas
lods
pop
fwait
hlt
loope
cmpb
xor
cmp
lock
sti
add
in
push
xor
pop
push
pushf
and
pop
sahf
bound
jmp
jns
in
pop
rclb
rclb
mov
adc
mov
mov
js
mov
sub
lret
xchg
repz
repnz
inc
mov
ja
out
das
iret
and
int
rorb
testb
imul
fiaddl
pop
outsl
add
or
push
sbb
jbe
ret
out
mov
test
xchg
popf
mov
xchg
adc
pusha
push
jmp
adc
mov
pop
leave
enter
in
test
mov
mov
adc
adc
inc
push
inc
mov
in
mov
adc
cld
movsb
xchg
or
shlb
pop
std
mov
or
add
xor
cmpsl
mov
loopne
imul
or
insl
mov
cmp
fimuls
xchg
outsb
sbb
mov
popf
cmp
sub
jb
leave
fstpl
outsb
shl
and
push
loop
push
push
lods
jno
or
cmp
dec
out
xlat
cwtl
ret
pop
aad
push
rcrl
inc
fstpt
stc
add
stos
aaa
mov
movsb
xchg
pop
subps
ret
or
jmp
pop
lret
jb
pop
sub
notb
lret
aaa
outsl
repz
aam
test
rorl
cld
pop
push
push
pop
sub
push
mov
inc
add
push
mov
jg
fbld
fs
in
sub
mov
lods
cmp
cmp
sub
pop
ss
jmp
add
les
mov
mov
out
mov
mov
cmpb
jne
jns
xchg
lock
mov
cwtl
mov
roll
sbb
inc
xchg
or
testl
jb
into
xlat
mov
int
xor
pop
adc
and
or
xchg
mov
xchg
sbb
push
push
pop
jmp
int
and
jb
mov
or
mov
aam
dec
push
cmp
add
clc
add
movsl
jns
jb
call
adc
pop
xchg
mov
pop
cmpsl
movsl
fcmove
push
or
lea
sbb
rol
repnz
lahf
data16
mov
lea
xchg
or
imul
or
jmp
adc
adc
fdivrl
rcl
fld
mov
sbb
shlb
push
pop
mull
adc
scas
lods
add
dec
aaa
xor
push
dec
xor
jle
es
jbe
pop
pop
and
mov
jb
push
xorb
mov
lods
pop
and
mov
inc
ds
dec
add
mov
pop
adc
and
jg
shrb
push
add
in
add
cmp
pop
dec
gs
cli
dec
dec
dec
mov
add
fsubrp
pop
sbb
ja
fcoms
jnp
les
and
jecxz
pop
clc
jne
insb
lcall
bound
jae
cmp
sub
push
push
sbb
mov
lods
popl
pop
add
ja
fmul
aad
out
inc
jno
pop
not
push
outsl
leave
fmull
insb
mov
or
pop
cli
lret
adc
jno
or
sub
cmp
dec
cmp
cmpl
add
aam
jbe
fsubrl
push
adcl
jg
jmp
sti
pop
test
mov
daa
push
rclb
jmp
fsubrs
push
xchg
push
call
push
sbb
das
mov
add
inc
jae
jns
or
mov
jnp
sbb
clc
dec
xor
outsl
xor
xchg
js
shrl
adc
xor
jmp
into
jbe
cmp
xor
mov
and
push
jns
imul
inc
mov
cs
sub
pop
pushf
pop
sub
lahf
adc
sub
lea
xor
cwtl
add
mov
jg
repnz
clc
mov
lods
sub
test
sub
mov
xchg
mov
or
sbb
push
inc
movsb
sahf
cmpb
or
adc
bound
mov
loopne
dec
xor
fcomps
jl
std
push
incl
dec
sbb
or
in
add
out
jno
inc
xor
pop
rorl
nop
sbb
or
cwtl
inc
cwtl
sbb
out
or
add
popf
add
popa
pushf
push
ljmp
pop
mov
mov
ss
out
sub
adc
jmp
std
fldl
test
mov
mov
push
cmp
pop
ljmp
icebp
out
mov
inc
xchg
data16
push
mov
adc
rclb
rcl
dec
xchg
xchg
adc
or
js
push
ret
pop
ficompl
stos
icebp
jl
sub
sbb
bnd
aas
inc
aas
cs
out
lcall
add
xlat
mov
sub
xor
push
sbb
out
xchg
movb
sub
pop
out
sar
add
push
cld
decl
push
xchg
nop
clc
cmp
push
push
jmp
jns
sbb
sbb
sbb
sub
sub
mov
mov
jo
jmp
mov
int3
lcall
cwtl
jo
pop
aad
jmp
xor
pusha
xor
or
push
popa
adc
or
stos
lock
pop
jle
jmp
out
dec
mov
lcall
hlt
ret
mov
jg
or
pop
data16
xchg
sahf
cli
pop
out
adc
loope
jmp
cbtw
cmp
push
cmp
or
out
xchg
mov
xlat
and
inc
in
sub
sub
pop
add
sbb
and
test
jae
dec
sub
lret
dec
push
push
stos
out
pop
mov
mov
mov
subb
movsl
sbb
add
subb
mov
mov
mov
rcrb
jl
jmp
leave
push
and
push
cltd
fadds
push
xor
pop
pop
jnp
in
sub
add
or
repz
insb
pop
jecxz
and
jl
ja
leave
jle
add
daa
mov
rcrb
js
mov
push
jmp
push
sbb
and
pusha
daa
jns
pop
or
push
rol
test
add
inc
pop
sub
mov
cmp
cmp
add
jmp
out
sarb
jo
popf
inc
pop
int
daa
jbe
push
push
and
add
rclb
pop
imul
rclb
adc
and
stos
nop
lock
dec
and
scas
sub
ret
add
pop
andb
sub
xor
pop
pop
call
sub
aad
pop
lock
mov
addl
mov
sbb
jg
sbb
sbb
xor
daa
int3
sbb
cmp
out
fstpl
cld
add
scas
roll
cmp
xchg
cmp
into
in
imull
inc
out
daa
push
sub
sub
fadds
cmp
push
jbe
push
mov
mov
or
add
xor
subl
and
insb
rcrb
fildll
lods
test
push
mov
bound
shrb
pop
xor
sub
nop
rcrl
push
cmp
lret
call
adc
xchg
dec
dec
test
les
fucomp
imul
adc
adc
jmp
push
or
xchg
nop
jno
push
inc
adc
inc
jne
jg
cmp
xor
jge
inc
aaa
cld
addb
pushf
adc
add
aad
or
rol
push
push
push
mov
and
scas
popa
sub
jnp
ljmp
add
mov
lret
mov
pop
popf
pop
add
jo
movsl
les
sahf
mov
cmc
pop
cmp
xchg
add
repz
xor
jmp
xor
gs
ficoml
aas
test
daa
ja
loopne
insl
pop
sub
out
add
movsl
and
mov
or
movsb
or
pop
sub
call
fildl
jne
mov
push
inc
fstl
or
jb
mov
xchg
push
mov
push
fbld
sbbb
jbe
repz
pop
in
enter
jnp
xchg
dec
andb
sub
dec
pop
mov
add
dec
mul
xorb
mov
lret
repnz
mov
adc
xorb
jnp
jo
xchg
xchg
test
jae
daa
jp
shr
mov
ss
bound
mov
js
loope
mov
hlt
pop
push
and
add
inc
std
mov
dec
dec
or
sub
xchg
inc
lods
pusha
movsb
stc
jae
shl
or
add
mov
into
mov
jmp
xchg
push
jecxz
negb
push
xlat
popa
cmpsl
call
sub
add
pop
sub
lret
push
adc
imul
ret
aad
jb
inc
xchg
std
xchg
xor
rclb
push
iret
nop
add
pop
jp
aam
fidivrs
sbb
pop
push
or
push
cmp
into
imul
dec
add
xor
jo
jae
and
add
cmp
add
jl
sub
xchg
add
xor
dec
outsb
loop
lds
push
xlat
pop
divl
in
iret
repz
sub
xchg
push
ret
ret
mov
cmc
sub
pop
out
mov
add
scas
shlb
mov
scas
xchg
inc
mov
rclb
push
rclb
adc
sbb
push
out
add
repz
out
aas
leave
faddl
jmp
out
fmul
mov
inc
std
or
rclb
pop
inc
jae
mov
mov
jmp
dec
sub
mov
add
test
or
lret
mov
sti
pop
dec
orb
in
sub
lods
rolb
push
mov
inc
lret
jae
imul
int
in
jg
cmc
sub
or
stc
push
jmp
fs
nop
inc
push
add
xor
ljmp
dec
adc
in
or
icebp
in
sub
push
or
add
cli
dec
popf
add
push
mov
or
subl
inc
add
dec
pop
push
push
mov
leave
in
xchg
fwait
and
testl
push
mov
add
jmp
fs
in
aad
lea
xor
push
test
push
divl
cmp
inc
mov
divb
in
cmp
mov
nop
es
push
jmp
inc
add
inc
pop
xor
or
push
inc
xchg
adc
ljmp
outsl
sbb
sbb
lock
arpl
jo
fldl
roll
jnp
mov
sub
add
xchg
add
and
add
sbb
push
ret
sub
pop
pop
jno
pop
sbb
cwtl
or
mov
or
dec
push
int3
in
sbb
repz
and
or
mov
sub
sbbb
mov
jns,pn
dec
js
sbb
dec
dec
mov
dec
pop
mov
push
ss
stos
scas
jo
dec
cmp
repz
dec
sub
test
inc
incl
not
inc
add
xor
pop
add
adc
loop
call
mov
jmp
out
dec
mov
mov
lret
push
es
jo
push
repnz
mov
jb
add
test
mov
adc
je
test
inc
or
loop
fcmovb
ja
push
mov
call
dec
sub
mov
dec
sbb
into
lcall
adc
push
jbe
mov
jb
es
jge
fmull
cmp
jl
jecxz
das
jbe
jg
subl
dec
into
mov
mov
inc
imul
je
add
xorb
sub
or
pop
push
push
push
lahf
push
xchg
push
push
nop
sbb
pop
mov
pushf
loopne
mov
lock
nop
lcall
xchg
ljmp
or
add
jmp
out
cmp
lret
xorb
cs
sub
or
ljmp
pop
je
dec
dec
add
sete
jno
and
test
xorb
dec
and
xchg
fs
add
shrl
out
mov
inc
sub
or
push
sub
add
movsl
push
mov
mov
inc
jmp
and
xchg
ss
gs
add
iret
jp
adc
sbb
jmp
sub
leave
lock
inc
into
inc
add
pop
xor
cmp
pop
adc
sub
or
and
jnp
pop
int3
and
popa
adc
or
lcall
sub
mov
and
cmp
sarb
pop
push
pusha
push
inc
pop
xchg
cmc
pusha
cmc
mov
dec
xchg
sub
addb
jge
jbe
push
rcrl
mov
or
push
xor
icebp
jecxz
insb
sahf
and
loopne,pt
cmp
std
cmp
push
test
mov
mov
pop
mov
test
int3
daa
push
dec
pushfw
and
sbb
movsl
js
xchg
cmp
or
push
jle
imul
pop
sub
cld
pop
xchg
mov
add
out
ret
xor
add
movsb
jmp
dec
dec
xchg
int3
xchg
or
ja
xchg
mov
pop
jmp
divl
flds
adc
icebp
mov
or
jp
xor
inc
dec
add
gs
jmp
mov
call
add
dec
sub
mov
pop
mov
xchg
in
jge
shrl
testl
sub
adc
add
jb
rcll
scas
out
stos
xor
test
add
in
sbb
adc
push
or
pop
pop
jmp
fidivrs
mov
pop
mov
iret
es
mov
inc
ss
pop
xchg
push
movl
push
lds
dec
aam
imul
pop
popa
mov
adc
lods
push
cli
xor
mov
int
sbb
sbb
loopne
pop
jge
je
shl
and
fstl
dec
mov
mov
stos
mov
stos
mov
mov
jmp
and
xor
mov
lcall
jo
scas
add
sub
pop
addl
adc
adc
pop
add
inc
sub
imul
repz
das
iret
pcmpeqw
subb
sub
pop
loope
adc
cli
jb
and
adc
pop
pop
jns
xchg
ss
or
or
sbb
or
loop
and
lahf
xchg
icebp
pop
push
popa
pop
cmp
ss
jmp
ss
scas
xor
adc
sub
add
mov
neg
mov
xorb
jmp
shl
aad
jle
data16
or
push
je
das
jmp
mov
xchg
imul
test
add
shr
pop
sbb
cs
jp
imul
xchg
mov
inc
mov
das
sbb
std
xchg
in
push
loope
push
add
add
not
subb
in
add
sahf
ret
mov
sub
xor
lods
sarl
in
and
stos
and
cmp
jbe
adc
in
mov
xor
ss
jecxz
fcoms
add
inc
jnp
push
data16
xor
adc
adc
outsl
test
cmp
add
andb
arpl
dec
sub
into
rol
mov
lods
neg
in
out
adc
sub
lods
cmp
jl
fldl
data16
sub
mov
jmp
mov
and
sub
cmp
dec
and
xor
xchg
sbb
stos
shlb
imul
test
push
pop
adc
xchg
call
dec
mov
fmuls
clc
pushl
xchg
subb
push
divl
repz
fisubs
mov
pop
lock
rep
mov
nop
in
mov
mov
cmp
mov
dec
xor
in
mov
cmpsb
lret
js
and
adcb
pop
mov
add
out
pop
pop
cmpsl
repz
popa
push
mov
fldl
and
and
shll
xor
xor
xchg
movsl
xchg
and
fsubrl
xor
pop
in
enter
mov
push
loop
outsl
fnstsw
xchg
pusha
mov
cmpsb
xor
std
mov
aad
push
and
test
or
jo
repnz
xchg
fs
xchg
xor
gs
mov
inc
jne
pop
jns
inc
fbstp
dec
sub
or
fdiv
dec
movl
or
fiaddl
mov
pop
fcmovu
test
fadds
add
push
pusha
push
iret
cmp
lds
rcrl
test
sarb
mov
sub
or
dec
pop
rorl
push
mov
sar
mov
cmovne
xchg
push
js
andb
pop
movsl
mov
pop
xor
lock
jno
or
pop
push
pop
mov
lahf
shlb
and
adcb
and
pusha
add
sub
mov
jno
jp
or
or
push
push
fdivrl
xor
add
mov
pop
dec
loope
mov
and
and
jo
mov
add
inc
sbb
addb
push
sbb
or
adc
sbb
mov
dec
rolb
lcall
mov
and
or
cli
mov
cmp
dec
rclb
or
pushl
ja
lret
lods
dec
cld
mov
out
jge
mov
cmp
push
daa
lret
aam
pop
push
mov
je
leave
pop
icebp
inc
inc
pop
push
repz
dec
dec
sbb
adc
cmpsl
xchg
jno
in
mov
pop
and
dec
push
xchg
sarl
push
movsb
adc
cmp
lahf
adc
js
in
xor
adc
add
xchg
pop
bnd
sub
and
pop
imul
ret
ret
dec
or
mov
pop
hlt
add
pop
jb
jnp
pop
stos
lret
ljmp
xchg
add
mov
nop
insb
sbb
fs
sub
in
stos
popa
rcrl
js
pushf
das
enter
adcb
testb
jno
push
aam
scas
fidivl
push
lcall
sbb
xor
into
iret
orb
lahf
xor
push
sahf
add
pop
imul
dec
jo
cmp
fiaddl
adc
adc
cmpsl
sbb
xchg
pop
adc
pop
aad
or
pop
into
outsl
add
into
inc
lock
jmp
dec
pop
push
dec
jg
mov
aas
hlt
xchg
push
dec
or
mov
scas
shlb
adcb
jae
cmc
in
add
es
dec
add
add
push
push
sbb
clc
ret
xchg
xor
cmp
sahf
sarb
addl
clc
mov
xchg
push
jg
icebp
and
negl
loop
cmp
mov
pop
scas
pop
mov
int3
insb
ret
dec
fs
cwtl
andb
pop
jge
outsb
lret
lret
enter
pop
enter
movsl
xorb
sbb
dec
sub
stos
psrlw
mov
sub
mov
gs
and
pushf
jp
jmp
xchg
dec
and
xchg
pop
int3
out
and
and
mov
mov
mov
leave
sub
inc
cld
cmpl
mov
adc
mov
cmpsb
jle
dec
cmc
mov
sbb
les
loopne
mov
imul
jo
add
roll
fcoml
test
or
ljmp
cltd
es
add
add
aaa
jmp
adc
call
adc
sub
addb
or
mov
lock
sub
data16
mov
dec
loopne
in
jmp
sarb
imul
push
mov
mov
push
push
cmp
sub
rcl
jmp
push
jl
and
jg,pt
lods
repnz
xchg
or
and
xlat
cltd
iret
das
rep
dec
repz
dec
adc
rcl
adc
or
adc
sti
sbb
stc
xor
mov
lret
add
out
push
and
rolb
out
xor
mov
jle
sbb
sbb
cmp
mov
insl
sub
shll
cs
and
outsl
or
mov
pusha
pop
out
cli
stos
mov
or
mov
or
cmp
push
sub
jmp
mov
leave
push
pop
push
in
mov
or
aad
mov
cs
dec
pop
jb
sbb
adc
popa
xchg
jae
inc
xchg
sarb
pop
enter
lcall
push
pop
sub
jmp
aas
mov
daa
add
adc
rcr
xchg
xor
rcrb
pop
push
pop
xor
shl
lcall
and
dec
push
push
sub
insb
mov
adc
push
orb
xchg
stos
and
ret
mov
sbb
mov
jmp
xchg
arpl
fcoms
mov
in
pop
push
lret
xor
orl
scas
mov
sbb
pop
push
jnp
ret
jo
pop
xchg
into
fsubrp
cmp
push
mov
jmp
jnp
movsb
dec
jne
cli
in
mov
xor
lret
sub
arpl
jl
jne
add
aas
cs
or
andb
hlt
das
lret
imulb
dec
or
mov
push
lret
dec
shr
jb
mov
mov
test
fiaddl
adc
outsb
pop
mov
push
sbbl
push
and
push
loop
vcmppd
lock
add
cmpsl
mov
lods
or
dec
inc
loope
pop
xchg
idiv
add
ja
cmp
mov
rclb
dec
sbb
add
jo
push
pop
push
mov
mov
jp
iret
mov
adc
push
lret
jmp
add
and
orb
mov
call
mov
mov
loopne
cvtdq2ps
notb
dec
mov
daa
pop
inc
arpl
aad
jg
orb
pop
xor
ds
push
push
sub
cmp
lret
push
add
nop
aas
aaa
js
dec
cwtl
mov
sub
icebp
lcall
mov
jmp
aad
pop
xchg
test
es
inc
or
fadds
std
dec
xchg
or
sub
cmp
sub
sub
mov
xchg
imull
pop
test
mov
pop
or
cmp
push
test
push
pusha
jb
xchg
ds
and
not
inc
jnp
jmp
pop
adc
mov
insb
das
orl
xchg
insb
add
mov
dec
xor
xchg
imul
push
stc
shl
bound
sahf
lret
add
test
ljmp
jmp
pop
ljmp
sbb
cmp
orb
or
loope
subb
rcrl
int
add
xchg
loop
mov
mov
outsl
repz
jmp
test
mov
repnz
fadd
cmp
lock
jmp
add
adc
cmp
sub
and
add
std
mov
dec
pop
leave
and
movsl
pop
pop
mov
fsubs
stos
pusha
and
neg
sub
iret
inc
or
inc
adc
fwait
inc
out
jns
add
repz
dec
inc
cmpsl
pop
xor
mov
fbld
or
push
xchg
pop
push
std
pusha
jg
inc
aas
jp
fcompl
inc
shr
jne
cwtl
jmp
mov
subl
adc
inc
push
xlat
test
inc
aad
out
xchg
mov
fbstp
dec
sub
jmp
add
ja
mov
scas
push
movsl
cmp
imul
jno
std
cli
add
stos
pushf
xor
push
push
rcrl
jle
dec
cmp
pop
clc
ret
add
or
das
add
push
sub
sub
ret
jp
xchg
mov
sub
xchg
push
jmp
add
and
ret
or
push
stos
fdiv
shl
adc
test
ret
lahf
mov
lods
pop
mov
ret
pop
pop
push
and
inc
addl
icebp
pop
jno
dec
shl
cwtl
mov
test
add
fsubrs
das
mov
mov
addr16
movsb
shll
push
sub
add
xchg
inc
neg
inc
xchg
jmp
pop
ja
ret
insb
cmp
pop
ficoms
mov
std
xchg
mov
cmc
das
mov
fimull
mov
or
icebp
pop
scas
mov
cld
movb
pop
andl
adc
les
frstor
imul
adc
sub
movsb
and
push
mov
clc
dec
xchg
sbb
bound
lcall
mov
mov
jno
cmp
cmp
leave
or
decb
das
jl
pop
mov
adc
or
ja
pop
fs
fimuls
push
aad
movsb
push
pop
mov
rorb
pop
test
lret
aad
ljmp
mov
jnp
and
popf
mov
enter
popa
mov
decl
push
add
out
jp
or
push
cmp
ljmp
into
in
rorb
jge
dec
inc
call
in
test
outsb
adcb
xor
stc
pushf
jbe
sub
flds
jmp
sbb
add
dec
fs
jmp
repz
push
mov
xor
mov
push
dec
push
add
fwait
test
dec
pop
daa
or
pop
pop
mov
push
pop
imul
pusha
jno
scas
lock
xor
loopne
mov
sub
sub
je
cmp
push
jb
or
cmp
out
shrl
outsl
imul
and
lds
mov
cmp
aam
or
loope
mov
adc
push
lret
out
or
or
xchg
pop
sbb
out
out
jle
push
decb
xchg
pop
sub
cmp
lods
idivl
mov
cs
mov
xlat
xchg
and
pop
mov
mov
dec
ljmp
sbbl
iret
push
and
inc
and
ror
pop
xchg
outsb
insb
cmpb
adcb
dec
and
add
jmp
dec
insb
dec
das
push
popa
in
into
xchg
lret
in
xchg
push
xor
mov
pop
push
push
pop
pop
add
jo
movsb
lods
stos
xchg
jl
and
cmp
adc
fidivl
push
clc
push
xchg
mov
lahf
ret
lock
in
xor
into
cmp
inc
out
cmp
ficoms
mov
and
mov
xlat
loop
out
and
or
pop
jl
daa
sbb
and
xor
sub
gs
push
mov
add
or
pop
or
add
inc
add
mov
sbb
jo
lods
and
cld
nop
jp
pop
sub
test
mov
mov
xchg
popa
jmp
sbb
xor
sub
ss
add
iret
popf
push
cmp
inc
sti
sbb
cmpsl
and
cld
shlb
test
inc
add
leave
dec
or
dec
xlat
arpl
in
mov
nop
or
bound
int
imul
jbe
dec
repnz
orb
push
pop
stos
cmp
sub
sti
das
jbe
sbb
xchg
nop
hlt
ret
pop
mov
push
movsl
mov
popf
out
and
pop
xchg
out
cld
loope
shl
push
ds
inc
popa
mov
sbb
sub
mov
lahf
sub
sub
mov
ret
xlat
adc
and
popa
xchg
cli
aas
lahf
dec
dec
scas
scas
xor
xchg
sub
inc
cmp
mov
pop
adc
fwait
push
cli
mov
xor
mov
pop
subb
sub
xchg
sub
sub
push
movsb
icebp
out
sub
add
fidivrl
and
ret
repz
xchg
shl
sub
cmp
pop
xchg
sub
sub
lret
add
mov
jle
jg
sub
out
in
pop
xor
pop
mov
mov
fildl
push
movsl
sub
shl
mov
push
jl
pusha
add
pop
cs
test
inc
scas
sub
mov
jp
jle
popl
loopne
xchg
je
add
adc
imul
iret
bound
fimull
add
xlat
in
jge
and
outsl
dec
pop
sub
jmp
mov
mov
push
lock
lret
inc
test
mov
cwtl
xchg
mov
jnp
das
jne
adc
or
les
test
adc
test
push
fadds
add
push
add
add
sbb
adc
xor
jmp
pop
repnz
icebp
jb
test
nop
add
ja
jbe
push
xchg
sub
push
pop
sub
push
add
inc
xor
in
add
aas
movsl
les
icebp
sub
mov
ret
xlat
inc
fs
pop
mov
jae
or
lods
cmp
jbe
push
xchg
add
push
ret
jmp
out
fisubrs
xchg
jecxz
cmp
mov
loope
je
pop
leave
lods
xor
lahf
push
and
xor
or
ret
push
add
lods
dec
cmp
sub
or
lock
sbb
ds
push
xor
iret
iret
pusha
ret
movsl
pop
sub
test
mov
mov
inc
loop
clc
mov
and
pop
orl
push
daa
test
or
and
lea
pop
xor
movsb
in
gs
mov
pop
rcr
cmp
dec
xchg
hlt
push
adc
jmp
fnstenv
into
pop
push
and
cld
jle
je
arpl
data16
mov
adc
push
test
add
xchg
and
xchg
cmpsl
adcb
loopew
jle
xchg
or
aad
jbe
imul
and
sbbl
fistl
sub
loope
push
lods
sbb
femms
mov
or
cmp
pushw
and
testb
pop
push
add
xor
lcall
add
incb
fcoml
mov
dec
lret
adc
xor
outsl
hlt
adc
inc
inc
xchg
add
sub
lret
jb
pop
push
lcall
pop
loop
fwait
push
xor
add
rolb
dec
inc
pop
stos
mov
fwait
jns
or
add
inc
jnp
mov
inc
xor
shr
mov
rcr
in
sub
cltd
cwtl
cmpsb
cmp
insb
inc
cld
jnp
jge
add
repz
cld
xchg
dec
jmpw
lock
daa
lcall
pop
add
filds
iret
push
or
add
xchg
lods
cmpsb
add
test
shrb
psubusb
hlt
imul
inc
or
push
mov
repz
or
sbb
dec
aam
fadds
cmp
push
push
mov
or
loopne
push
xor
scas
test
pushf
sarl
out
or
cmpsl
push
push
jb
mov
or
push
js
lahf
int3
in
aam
or
mov
icebp
loope
push
jp
fildl
dec
test
cmp
mov
test
pop
adc
xchg
jge
mov
pop
jne
jb
mov
cmp
cmp
mov
xor
mov
mov
or
in
insb
repz
outsb
pop
mov
inc
sub
aaa
jns
xor
fs
in
adc
pop
shll
hlt
jl
mov
dec
mov
faddl
adc
add
push
lods
rorb
cs
dec
sub
loop
jge
cmp
and
popa
or
push
and
fstpt
outsb
stc
add
or
add
jmp
push
int3
sbb
out
out
xchg
mov
or
fdivr
adc
scas
and
cmc
icebp
and
inc
pop
pop
ret
outsl
aam
scas
cltd
pop
add
add
add
xor
scas
popa
sub
mov
repz
xchg
sbbl
adc
mov
ja
mov
dec
pop
inc
dec
sbb
pop
mov
jnp
or
and
and
or
push
adc
mov
and
cmp
icebp
mov
das
pop
pop
jns
and
cmp
filds
jecxz
cmp
inc
popf
rcl
nop
es
add
test
add
insl
lods
cmp
in
mov
rcrb
jmp
inc
pop
inc
push
or
mov
shll
xchg
adc
inc
add
out
jge
push
sub
rolb
shr
sbb
iret
adc
testl
inc
fadds
popf
ret
in
fwait
jge
sub
mov
add
insb
js
jmp
push
inc
jp
popf
adc
popa
les
fnsave
inc
xchg
sub
mov
or
divl
nop
sub
inc
test
inc
cmpsb
icebp
add
jle
jns
ret
pusha
mov
call
push
pop
jnp
lock
pop
dec
jae
in
loopne
data16
sbbl
dec
sbb
sub
and
ds
fs
inc
push
push
shrb
es
movsb
inc
push
mov
pop
sub
mov
popa
inc
imul
inc
rcl
push
xor
mov
shr
nop
addr16
cmp
xchg
rolb
pop
shll
cwtl
fmul
aam
jmp
into
adc
xchg
adc
push
jge
cmp
aam
mov
push
and
mov
lods
jo
hlt
daa
rolb
mov
loop
imul
je
mov
mov
dec
adc
add
aaa
aad
mov
mov
clc
and
jmp
mov
fcoms
jae
xorb
insl
rcl
xlat
xchg
cvtdq2ps
leave
sub
pop
pop
jmp
add
jbe
cmc
mov
xchg
sub
dec
addl
jge
adc
out
jb
add
test
ret
pop
xchg
and
or
xchg
pop
sub
or
push
fucompp
inc
mov
mov
mov
or
addr16
xchg
bound
stc
or
push
stos
push
pop
cmp
mov
out
cmp
fcoms
cmp
ja
pop
ret
inc
mov
xchg
ja
loope
pop
xor
and
pop
xor
pop
dec
or
jecxz
xor
mov
or
ficoms
cmc
mov
xor
daa
clc
xchg
cmc
scas
lret
dec
push
add
mov
rcrl
sbb
in
outsb
add
add
loop
in
xchg
iret
pop
dec
aas
lods
popa
into
in
cmpsl
push
clc
dec
inc
xor
mov
shrb
shrb
dec
sbbl
and
pop
stos
push
out
or
aas
fisubrs
ds
lds
push
pop
cmp
cmp
popa
dec
mov
dec
mov
mov
lock
aam
cmpsl
out
or
sub
pop
rclb
mulb
sub
jnp,pn
daa
adc
xchg
aam
or
jns
js
xchg
pop
jg
adc
out
pop
add
or
ljmp
adc
or
jno
aas
cmpsl
dec
rol
gs
insb
add
jb
clc
sub
in
and
jmp
inc
sbb
das
hlt
mov
pop
jo
jge
movsl
and
pop
xchg
jmp
popa
daa
xchg
or
ret
test
hlt
and
sub
sub
pop
xlat
dec
mov
inc
pop
add
sbb
movhps
cmp
cmpsl
push
dec
sub
push
lods
dec
add
andb
sub
sub
add
insb
xchg
sbb
adc
adc
or
jle
aas
ds
cwtl
sbb
inc
jmp
cwtl
sbb
addr16
in
mov
xchg
mov
dec
in
inc
inc
push
mov
mov
in
add
sub
pusha
jno
loope
sub
lock
xor
and
adc
insb
and
xor
fiadds
hlt
arpl
inc
push
pop
clc
enter
xor
pushf
push
fcmovu
clc
popf
push
scas
push
and
orb
sub
mov
cwtl
pop
enter
jge
sub
add
insb
jmp
push
inc
xor
jle
or
cmp
pop
push
adc
incl
repz
int3
into
dec
dec
incl
jmp
repnz
ret
scas
leave
aad
cmp
aam
adc
loop
lret
in
push
sub
loop
insl
andb
int3
push
pop
es
cmc
es
or
idivb
movsb
lret
in
add
or
or
loop
aad
dec
inc
cmpb
das
imul
xor
clc
sub
loope
fisubl
stos
xchg
cld
fbstp
out
pop
mov
mov
loop
xchg
inc
adc
loope
test
mov
out
adc
sub
mov
xchg
push
clc
push
sub
test
push
pop
push
rorb
js
imull
pop
int
loopne
leave
insb
daa
dec
mov
mov
mov
cmp
pop
push
cs
inc
std
stos
or
mov
divl
je
or
aad
test
adc
xchg
or
pop
pop
add
add
inc
push
pop
jp
out
roll
add
mov
les
inc
push
adc
iret
or
cmp
pop
imul
filds
cmp
clc
add
jmp
outsl
sub
adc
das
pop
push
inc
hlt
add
adc
movb
inc
or
fstpl
xor
mov
push
out
orl
pop
cld
mov
imul
imul
pop
push
mov
mov
xchg
iret
jae
or
div
jle
roll
pop
dec
sub
sahf
pop
fists
cmp
add
cs
jmp
mov
shll
mov
mov
mov
jge
sub
and
pop
rcll
shlb
push
add
xchg
ret
dec
xor
cmp
pop
fdivrs
andb
add
push
mov
cld
xchg
push
jmp
add
sub
leave
aas
rclb
sub
sarl
pop
test
or
push
add
mov
pop
mov
ja
mov
lahf
inc
jne
aad
dec
push
dec
xor
mov
jg
cmp
cmp
pop
fimull
lods
add
mov
loop
aam
and
mov
pop
sub
repnz
popa
popf
ret
jmp
dec
call
cmpsb
pop
pop
mov
in
mov
repnz
loopne
stc
imul
andb
dec
jmp
ret
adc
mov
scas
mov
pop
aaa
add
jbe
loop
pop
addr16
aas
in
add
stos
xlat
mov
mov
or
adc
and
paddusb
shl
or
jno
shr
dec
mov
out
add
testb
sahf
insb
jp
pop
leave
jae
or
mov
push
in
inc
sbb
ds
add
pop
xlat
dec
pop
shrb
stc
xchg
adc
mov
jno
data16
mov
scas
add
push
pop
xchg
aam
jo
sub
jg
inc
aam
nop
inc
xchg
in
lods
scas
add
or
addr16
mov
add
and
xor
in
incl
add
js
mov
shl
xchg
jl
inc
xor
mov
add
dec
imul
jb
mov
aam
sub
mov
mov
add
js
cmp
inc
ret
bound
or
pop
loopne
shll
cs
in
add
arpl
add
jns
ja
mov
dec
add
hlt
insl
mov
or
xlat
lret
mov
push
and
adc
enter
push
add
jb
pop
sub
adc
mov
shll
in
iret
sub
dec
idiv
subb
push
pop
hlt
or
inc
dec
mov
sub
dec
push
add
mov
int3
cwtl
hlt
or
ds
mov
cli
leave
cmp
pop
arpl
int
sub
sbb
push
cmp
jns
test
shr
xchg
mov
nop
jo
dec
jb
sti
xor
pop
les
push
int3
add
insl
mov
pop
or
popa
testl
les
mov
push
and
adc
inc
adcb
out
jmp
les
adc
cs
jmp
idivl
push
addr16
mov
enter
jnp
pop
cs
add
cmp
sub
call
sahf
lods
add
in
lods
inc
fimull
jmp
into
push
imul
jnp
mov
add
inc
jecxz
es
cmp
rclb
data16
pop
data16
adc
xchg
test
rol
jne
add
pop
or
sub
mov
jl
mov
dec
jo
je
push
jne
mov
rclb
js
or
nop/reserved
mov
ljmp
dec
add
push
movzbl
movb
int3
bound
les
ret
mov
pusha
lcall
add
xlat
or
jmp
mov
rcl
dec
leave
adc
lret
dec
aad
sbb
in
xchg
push
call
scas
cmp
aaa
sarb
adc
adc
popf
insb
and
fcoml
dec
jb
pop
out
xchg
jl
out
push
outsl
out
fwait
pusha
sub
stos
subb
cmp
sti
and
test
sbb
pop
dec
stc
sub
mov
outsl
mov
cwtl
or
pop
out
mov
jl
imul
or
push
mov
adc
and
xor
inc
ret
pop
push
inc
or
psraw
nop
gs
daa
inc
mov
add
cmp
lock
mov
hlt
xlat
scas
fistps
imul
movsb
in
sbb
rorl
sbb
jmp
adc
xor
das
or
adc
jmp
dec
adc
orb
inc
adc
in
or
xchg
mov
add
pop
mov
pop
lret
les
imul
jmp
adc
das
movsb
fcmovb
or
inc
push
add
push
add
into
les
pmaxsw
ffreep
cmpsb
add
cmp
or
fstpt
mov
faddp
push
pop
lret
aaa
incl
pop
sub
mov
test
test
pop
jmp
ja
inc
inc
mov
not
add
mov
xor
mov
or
mov
push
dec
movq
push
outsl
sti
je
lods
push
pop
in
into
adc
fs
test
hlt
ljmp
stos
mov
jns
test
add
jp
sub
pop
stc
or
inc
add
inc
push
mov
xchg
dec
push
jge
les
xor
sub
pop
sub
mov
add
roll
jbe
ja
gs
sbb
jle
jae
rep
sub
sub
je
test
add
mov
es
inc
or
sub
jb
ret
int
test
xchg
mov
dec
jo
dec
pop
add
iret
nop
mov
ljmp
xor
push
add
gs
dec
call
sarb
adc
stos
mov
dec
sub
outsl
add
and
incl
adc
push
arpl
shr
les
push
out
add
ds
mul
adc
jnp
outsl
pusha
insl
arpl
clc
ja
dec
inc
add
ljmp
leave
into
pop
jno
mov
pop
xor
pop
rcr
addb
push
dec
push
add
pop
pop
jmp
add
xchg
lock
inc
les
sub
mov
and
inc
dec
push
xchg
ret
std
hlt
adc
pop
fsubl
or
imul
or
add
cmc
cmp
imul
push
lds
sub
imul
and
pop
push
pop
js
sub
dec
push
insl
orb
into
sbb
arpl
or
add
cmc
pop
mov
fsubr
push
adc
out
jg
sub
mov
in
fwait
adc
add
push
and
daa
addb
lods
icebp
test
stos
popf
lock
ret
es
out
ret
jmp
dec
aad
add
xor
mov
fldl
das
or
pop
in
sbb
jmp
out
repnz
out
sub
fadd
mov
orb
dec
inc
push
sar
mov
out
adc
hlt
adc
add
pop
cltd
sub
dec
loopne
cld
sbb
dec
and
insb
addl
sub
or
inc
les
pusha
xchg
xchg
cmp
ror
xor
lcall
loopne
push
lahf
or
and
pop
lahf
leave
cmp
ret
in
lods
pop
push
cmp
into
test
inc
repnz
dec
xchg
jno
lret
out
in
mov
xor
call
sahf
jae
xchg
sbb
fnstenv
rorb
leave
pop
fisubrl
or
popf
pop
in
xor
dec
jae
jnp
xor
push
inc
not
push
sbb
out
inc
cs
push
jmp
enter
shrl
add
push
pusha
lea
xchg
push
sub
scas
adc
jl
push
push
add
xor
sub
sub
pop
jns
inc
lods
cmp
popa
mov
popf
or
outsl
xor
push
repnz
push
jo
pop
dec
push
gs
push
inc
mov
shl
jle
dec
xchg
jo
jb
xorb
shlb
cmp
sub
loopne
cmc
adc
es
daa
pop
mulb
dec
push
lds
cmp
cmp
rcrl
shlb
cmpsl
arpl
or
or
popf
neg
adcb
fistps
jle
mov
jne
insl
ja
jo
ds
cmp
fldenv
xor
jb
movsl
push
or
daa
mov
or
adc
cs
add
adc
push
mov
mov
add
sarl
rclb
scas
push
int3
add
popf
fcmovnbe
in
pop
cmp
das
jp
jb
je
lret
adc
and
repz
jbe
add
leave
fmull
lds
push
push
pop
mov
rcl
shrl
xchg
jbe
xchg
adc
or
rcll
push
sbb
adc
push
shlb
loopne
call
cwtl
xor
test
shlb
pop
loope
jle
les
cmp
shlb
ljmp
mov
jne
xchg
and
daa
rolb
jl
sbbl
sub
lret
or
or
adc
dec
dec
cld
jmp
mov
mov
hlt
and
pushw
push
fsubs
mov
or
cmp
push
jmp
or
int3
out
gs
repnz
sbb
clc
sub
jmp
jecxz
mov
pop
int
xchg
js
lock
pop
sahf
push
mov
push
push
add
mov
imul
or
add
jg
fldenv
fs
test
cmp
add
sbb
leave
aam
push
js
outsb
add
and
pop
jmp
or
pop
adc
and
adc
push
mov
adc
xchg
xchg
out
jnp
and
mov
shrl
mov
push
push
pop
in
jbe
test
mov
and
xor
scas
jl
mov
lds
adcl
cs
and
popl
lret
mov
or
sub
in
inc
loope
push
or
push
push
or
and
popf
fsincos
xchg
ret
shlb
cmp
inc
mov
lcall
add
subl
xchg
xor
leave
pop
test
push
mov
rcrb
inc
cld
dec
or
add
int3
testl
mov
push
add
ja
push
pop
dec
rorl
jns
es
incb
stos
cmp
push
pusha
add
jp
mov
dec
jp
inc
sarl
in
mov
mov
push
mov
add
jmp
sbb
push
or
xchg
cmp
xor
outsb
mov
sar
sti
pop
mov
inc
mov
aad
inc
rclb
xchg
sarb
xchg
and
pop
in
xlat
lds
dec
pushf
jae
bnd
add
xor
in
aas
mov
and
addb
pop
dec
arpl
cltd
mov
stos
push
mov
cli
or
jnp
mov
xchg
inc
jmp
jmp
pop
pop
mov
cmp
jo
pop
jle
jbe
fs
xchg
repz
add
sub
add
mov
jl
sub
fiadds
xchg
add
sbb
xor
add
roll
or
idivb
movsb
stos
or
jo
sbb
outsb
jmp
addb
sub
mov
incl
pushf
jmp
movsb
outsl
imulb
jnp
mov
fidivrs
test
les
stos
add
lret
mov
lock
mov
out
inc
cmp
dec
ss
push
or
pop
mov
mov
push
daa
mov
addb
test
call
xchg
mov
inc
andb
stos
cmp
jg
pop
cmpsl
mov
ficoms
add
mov
pop
inc
push
fiaddl
nop
lcall
shl
and
xor
mov
iret
shl
dec
fcomps
or
cmpb
sti
or
rcl
popf
and
xor
int3
mov
add
out
stc
inc
outsb
sub
or
jno
adc
push
decl
push
and
jp
test
adc
out
mov
xlat
mov
adc
dec
mov
addl
js
mov
push
pop
xchg
adc
mov
sbb
rcr
inc
mov
add
jp
fistps
lods
jae
or
pop
inc
push
enter
rclb
cmpsl
movsb
ds
adc
inc
mov
filds
pop
cmp
iret
mov
cwtl
pop
ljmp
test
push
in
xchg
dec
imul
test
push
dec
add
mov
adc
call
add
arpl
and
pop
mov
mov
jb
pop
inc
bound
adc
pop
iret
push
and
jp
cmp
or
and
xor
push
xor
popf
add
in
sti
adc
or
jmp
adc
cwtl
inc
aam
dec
cmp
lahf
pop
imul
aam
lret
sub
testl
lods
jge
xor
loope
mov
pushf
jno
jnp
sbb
or
push
in
lods
adc
mov
dec
repnz
pop
or
pop
pushf
or
sbb
push
add
dec
mov
dec
in
in
sbb
or
mov
jnp
adcb
jnp
hlt
lcall
dec
inc
movb
jns
sbb
fmuls
add
mov
mov
frstor
push
mov
push
push
xchg
inc
inc
ja
rcr
shlb
mov
repnz
mov
or
cmp
pop
xchg
jns
inc
jmp
fcoms
loopne
add
jl
ljmp
arpl
xor
and
add
testb
fs
dec
cli
and
push
or
adc
add
xchg
pop
sbb
sbb
jno
out
mov
mov
je
mov
pop
aam
repnz
stc
int3
mov
pop
hlt
scas
add
jge
addb
cmp
add
sub
sub
pop
cmc
mov
jnp
push
or
jmp
out
cmp
and
sub
or
test
push
and
or
or
push
dec
add
pop
push
ret
push
inc
mov
mov
or
test
push
movsl
pop
inc
mov
dec
and
adc
inc
mov
xor
insb
mov
adc
jge
mov
mov
xor
mov
pop
mov
push
jne
cmpsb
push
sbb
pushf
or
push
cmp
pop
ljmp
das
cmpsl
or
iret
jmp
orb
cs
adc
push
push
pop
subl
sub
push
xor
inc
sub
js
or
lcall
daa
loope
sub
cmp
lret
mov
dec
pusha
repnz
jl
cmp
insb
cmp
pusha
jae
sub
dec
pop
clc
push
jo
les
adc
add
mov
repz
mov
push
adcl
mov
pusha
ja
jecxz
or
and
rcl
push
xchg
or
movl
in
in
shlb
fsubr
iret
aaa
xchg
dec
call
sti
je
jmp
push
in
xor
in
mov
loope
mov
add
mov
xchg
push
push
mov
adc
cmp
cli
pop
xchg
test
inc
ret
mov
filds
scas
icebp
clc
adc
sub
std
xchg
mov
cs
stos
das
add
adc
ja
add
cs
out
addb
jbe
cltd
test
dec
xor
xchg
pop
sub
or
add
in
sbb
add
jle
sahf
shll
or
jmp
cmp
or
cmp
jg
movsb
inc
cmp
es
or
pop
mov
clc
dec
dec
mov
out
out
repnz
fs
outsb
inc
add
lods
popf
or
jbe
jge
pop
push
popa
add
cmp
xor
lods
push
pop
xor
mov
arpl
adc
pop
sub
and
mov
sahf
pop
dec
and
out
loop
pop
pop
gs
inc
jnp
adc
daa
inc
addr16
cmp
ror
mov
jmp
in
mov
and
sbb
push
jecxz
push
icebp
ljmp
and
push
ss
push
clc
lret
mov
bound
cmc
cwtl
dec
push
stos
cmp
ret
push
shll
push
cwtl
out
add
int3
jo
mov
mov
popf
es
mov
cmp
cmp
xchg
ficompl
hlt
sbb
lds
out
jp
dec
imul
mov
add
mov
xchg
hlt
mov
pop
stc
pop
mov
sub
mov
jmp
pop
popa
imul
sbb
push
or
jl
inc
je
add
out
sub
popf
fnstcw
leave
test
adcl
dec
mov
push
pop
or
inc
sub
pop
push
shrb
cmovg
xchg
xor
repnz
jno
outsb
leave
or
mov
and
shlb
push
adc
jge
add
aas
sub
push
or
sti
insl
fimuls
mov
pop
shrb
dec
push
dec
sub
cmp
pop
lahf
in
lods
and
dec
pmaxub
cmp
xor
cmpsb
push
mov
sub
stc
push
pop
es
pop
out
add
lea
ss
orl
jne
stos
xchg
cmc
les
adc
outsl
jle
in
andb
mov
and
daa
aad
and
xlat
daa
jns
imul
popa
call
push
mov
lea
inc
rclb
cld
fldenv
mov
negl
shr
or
add
fmuls
xchg
jecxz
sbb
mov
fistpl
enter
pushf
jns
dec
test
xchg
inc
inc
add
subl
cmp
test
out
fdivs
rorl
xchg
xor
dec
sbb
pop
scas
sub
or
les
mov
mov
push
sbb
arpl
mov
add
shl
lret
mov
pop
pop
aad
mov
daa
jno
pop
cld
das
pop
sub
lods
mov
mov
sti
adc
lret
ds
mov
mov
cmp
push
repnz
lret
xchg
test
shll
lahf
and
mov
inc
mov
push
inc
mov
mov
notb
jge
pop
das
jmp
out
int3
cmp
dec
lcall
aaa
test
cli
lahf
sub
dec
or
push
cs
inc
jl
inc
cmpsb
and
push
or
out
xor
mov
pop
sub
pop
or
aad
xchg
mov
fsubrs
inc
inc
mov
or
mov
aam
adc
out
lds
in
pop
test
xor
pushf
test
popf
roll
pusha
insb
test
adc
add
int3
jbe
repnz
insb
ret
jg
clc
lret
pop
mov
addb
ret
dec
dec
je
adc
pop
neg
sub
xchg
jmp
aam
jb
jl
mov
inc
repz
lret
xor
popa
jb
adc
cmp
ret
push
add
ds
imulb
add
mov
sahf
and
outsl
imul
sahf
xchg
pop
push
ret
ja
jne
lret
xchg
push
std
test
pop
cwtl
and
mov
sub
mov
adcl
pop
add
outsb
and
mov
jo
clc
clc
push
jo
popf
aam
pop
push
decl
pop
sbb
es
clc
sub
push
jmp
xchg
rol
inc
push
jmp
ljmp
or
call
pop
shr
jecxz
lcall
push
add
fistpll
xchg
xlat
testb
adc
in
and
push
cli
shlb
sub
sahf
and
loope
pop
aaa
addb
sub
mov
nop
out
pop
mov
sahf
pop
cmp
lock
mov
mov
sub
pop
cwtl
push
pusha
fwait
push
cwtl
shl
int3
or
push
dec
loope
sub
push
mov
adc
pop
xchg
mov
or
push
stos
lcall
cmc
aas
in
inc
insl
sub
or
xchg
or
test
or
popa
adc
movl
push
cld
insl
jmp
data16
mov
push
fsubrs
adc
cmpsl
sub
xor
mov
sub
add
into
and
xchg
mov
xchg
fstps
lcall
push
mov
or
lds
insb
out
aas
sbb
repz
frstor
and
popf
inc
in
xchg
jmp
test
jo
out
add
cltd
stc
mov
push
andl
rcl
das
je
sti
add
lret
fmuls
arpl
cmp
cmp
xchg
shll
or
or
dec
neg
pop
enter
addb
pop
incb
push
push
pop
and
jne
scas
js
or
pop
push
jne
xlat
push
scas
test
mov
aad
out
popf
xchg
dec
cld
mov
out
pop
gs
xlat
push
ljmp
pop
xacquire
adcl
ljmp
js
nop
test
adc
or
fs
pop
lret
add
pop
and
bound
shl
jle
dec
adc
fcmovnu
add
stos
jne
xor
pop
jno
movsl
mov
push
test
add
fisttps
notb
and
add
xor
dec
jl
sbb
push
movsl
loopne
in
popa
xor
mov
and
imul
andb
stos
pop
push
pop
pop
or
dec
aas
dec
rcrb
sub
aaa
pop
fidivrs
rcrb
xor
jle
subl
or
dec
jmp
test
fstps
xor
daa
xchg
arpl
mov
pop
nop
imul
and
stos
loop
jno
mov
jmp
push
xchg
imul
pop
mov
out
ljmp
mov
nop
dec
jl
mov
push
je
rolb
and
dec
or
xor
mov
pop
pop
and
cs
pushf
mov
adc
test
add
mov
cmp
insb
dec
lcall
mov
js
int
loopne
mov
pop
mov
add
and
xchg
sbb
sbb
xchg
hlt
pop
cld
xor
dec
pop
call
aas
mov
add
ret
cs
or
inc
inc
orb
and
adc
sbb
inc
push
add
add
sub
sbb
inc
sbb
pop
inc
ret
data16
outsl
push
xor
icebp
flds
or
add
outsl
add
aas
je
pusha
stos
inc
and
or
mov
dec
ljmp
and
test
enter
inc
pusha
das
xor
push
pop
xlat
aam
insb
dec
in
sbb
add
push
or
inc
loope
sub
mov
xor
gs
jp
mov
xchg
jb
pop
mov
stc
mov
dec
mov
insb
lods
sarl
pop
repz
add
or
inc
pop
jmp
jne
fs
ljmp
pushf
jl
outsl
stos
pop
fsubrl
add
lret
dec
hlt
mov
push
mov
sub
mov
push
jmp
imulb
cpuid
push
mul
add
sub
dec
cmpsl
adc
popa
xchg
adc
loop
jge
and
inc
and
pop
rorl
push
sub
and
xchg
dec
fildl
data16
div
push
inc
nop
sub
inc
out
negb
xor
add
fdivl
rorb
ljmp
loopne
iret
mov
sbb
adc
sbb
scas
ja
sub
jns
or
pusha
pop
and
push
xchg
lahf
or
mov
jo
or
pop
addl
push
adc
jns
cmc
out
leave
inc
mov
or
adc
bound
addl
inc
popf
jge
sub
cwtl
insl
lahf
addr16
fnsave
jbe
lret
adc
test
mov
push
jmp
or
push
in
ja
and
add
sub
lock
adcb
ljmp
push
daa
dec
cmp
mulb
out
or
js
and
push
es
icebp
xlat
loopne
in
and
adc
mov
fs
and
xchg
repz
clc
into
daa
mov
push
scas
bound
or
loopne
mov
adc
xor
outsb
push
and
mov
je
cmpl
ret
idivl
enter
push
ss
push
cmp
push
inc
scas
fxch
and
aaa
addr16
aas
movsl
or
xchg
popf
adcl
adc
mov
iret
pop
pop
popf
int3
mov
and
popf
cld
out
pop
jge
pop
push
push
inc
int
cmp
popa
pop
enter
jns
lods
in
ficompl
cmp
inc
stos
imul
test
jg
das
cwtl
cmp
pop
mov
or
push
mov
sarl
out
inc
adcb
shl
xor
insl
sub
add
add
push
sti
xchg
push
sbb
sbb
adc
mov
xlat
mov
add
push
and
cli
js
push
pop
nop
loop
aam
sbb
or
shr
mov
sub
clc
jmp
repz
dec
scas
pop
pusha
add
add
push
mov
sbb
mov
cli
aas
pop
and
test
lahf
scas
pop
lea
mov
hlt
xchg
inc
dec
xchg
pop
test
stos
adc
loop
push
dec
push
movsl
jg
test
stos
inc
cmp
push
mov
sbb
aas
in
xor
fistps
lcall
aam
imul
stc
or
mov
adc
lods
js
xor
push
mov
sub
mov
in
jmp
add
cmp
adc
xor
pop
rcrl
jb
in
cmc
lods
js
mov
loope
incb
cmp
fdiv
sub
and
movsl
test
add
jg
movsb
add
pop
jmp
mov
add
movsl
mov
sub
add
push
mov
in
cld
or
xor
jmp
test
lret
dec
mov
lahf
and
adc
pxor
jmp
pcmpeqb
push
in
push
mov
mov
and
push
jns
leave
jle
lret
jbe
push
xchg
js
push
mov
cmp
jno
add
dec
lock
mov
mov
outsl
lods
pop
mov
pop
sub
stc
cld
dec
addb
lcall
lods
imul
xchg
js
sbb
mov
jne
clc
and
adc
mov
xchg
cld
aam
dec
loopne
pop
push
dec
mov
xor
into
adc
jne
mov
bound
pusha
sbb
sbb
movzwl
in
hlt
pop
mov
idivl
sub
push
push
sub
push
mov
add
aaa
dec
incb
loopne
fisttpll
inc
rcrb
pop
into
je
dec
loop
add
cmp
loopne
ds
les
std
insb
mov
pop
js
add
jle
gs
add
jmp
mov
mov
fxch
or
into
sbbb
and
stc
imul
cli
xchg
xchg
xor
jg
and
or
sbbl
mov
push
and
pop
sub
clc
fidivl
test
jmp
push
adc
push
shrl
pop
cmp
lahf
sub
dec
mov
sub
pusha
cmp
into
cmp
mov
or
sub
ret
sbb
dec
inc
icebp
arpl
out
testb
push
xor
loope
jge
stos
xchg
lock
sbb
add
mov
push
xor
pop
outsb
gs
push
push
pop
push
push
jmp
nop
sub
test
aad
jmp
xor
ds
leave
je
push
push
jmp
out
idiv
jmp
xor
pop
jnp
jno
mov
pop
inc
add
mov
xor
mov
mov
subb
and
aam
cltd
add
sbb
xor
aad
xchg
jno
xorb
mov
ljmp
repnz
mov
jmp
or
mov
outsb
cmc
and
cmp
stos
mov
add
push
mov
mov
dec
mov
pop
mov
adc
ds
iret
mov
mov
sub
fildl
push
add
rcrb
shl
sub
push
jmp
in
cmc
mov
stc
jmp
fadds
es
add
rcrb
repnz
jae
xor
das
sbb
sub
pop
mov
mov
pop
mov
or
dec
clc
inc
loope
int
cmpsl
xchg
es
divl
call
test
aam
dec
pop
adc
ljmp
lret
hlt
fisubrl
das
aad
bound
adc
popf
mov
or
out
out
into
fmull
adc
lods
cwtl
mov
xchg
mov
ret
loope
std
pop
notb
dec
adc
jbe
cmovge
jne
cmp
sbb
or
jge
mov
repnz
xchg
mov
adc
xchg
pop
les
rcll
jmp
aas
pop
fwait
lods
add
fstpl
sub
cmp
or
add
sbb
add
push
out
xor
pop
insb
stos
jbe
mov
outsb
pushf
addl
push
pop
jl
rclb
out
fs
add
pop
or
dec
nop
add
leave
mov
clc
jmp
jns
fisttps
xchg
pop
push
stos
pusha
push
add
and
sbb
loop
std
dec
mov
jmp
pusha
aaa
and
push
js
pop
and
and
into
xchg
add
es
inc
mov
fadds
mov
add
push
xor
and
pop
xchg
mov
push
aad
movq
push
push
not
jmp
push
and
add
jbe
inc
inc
pop
push
into
pop
dec
outsb
rolb
sub
pop
ljmp
sbb
pop
std
adc
cld
inc
inc
or
insb
pushf
and
push
cmp
xchg
sbb
push
scas
mov
push
loop
or
aaa
cli
rorb
imul
movsb
jmp
push
sbb
rorb
lock
sub
sub
sub
lock
push
cld
add
sub
pop
xor
cmpl
jbe
out
mov
xchg
scas
add
jo
in
incl
sbbl
dec
and
push
inc
pop
call
mov
loopne
inc
push
rorb
ds
push
loopne
movsl
and
insl
pop
push
mov
push
das
jmp
xchg
jecxz
mov
sti
adc
aaa
xchg
add
fcomps
cmp
sub
idivb
push
jmp
push
add
aad
enter
fnstcw
add
xchg
imul
add
shrb
or
cld
dec
pop
and
jbe
push
mov
mov
clc
pop
push
mov
ret
pop
mov
stc
pop
stc
into
sub
mov
shr
ret
and
bound
jbe
or
sti
aas
push
testb
inc
mov
push
push
cmp
mov
mov
add
hlt
pop
sbb
jne
xchg
push
xor
mov
iret
sbb
jns
or
mov
shr
cmp
push
test
lret
pop
jbe
out
rcll
xor
out
imul
add
pop
sbb
jnp
daa
insl
shll
divl
clc
cmp
test
jmp
cld
adc
xchg
shr
in
cli
aam
lods
call
push
add
incb
in
jmp
dec
cli
or
sub
adc
scas
xor
push
inc
dec
push
mov
shl
add
xchg
push
lahf
aam
out
pushf
and
pop
jecxz
jnp
dec
add
ja
fsubrs
pop
lods
sbb
inc
pop
mov
xor
aas
gs
test
or
data16
xlat
cmpb
push
sbb
sub
mov
dec
in
mov
daa
rclb
int
daa
dec
inc
out
pop
cmp
add
jnp
mov
sarl
xchg
xor
outsb
xor
mov
decb
push
dec
xchg
out
sub
jg
jl
insl
andb
or
and
fmul
pop
loop
mov
jg
mov
cmp
in
insl
das
loope
add
push
and
inc
cmp
shlb
add
in
add
enter
cmpsl
lock
sub
cwtl
cmpb
ja
mov
lods
lea
pop
push
lret
addr16
faddl
shrb
pop
jg
mov
sub
sahf
or
jmp
lret
clc
or
or
dec
dec
pop
cltd
shrl
fs
add
dec
daa
das
call
cli
jb
mov
ret
arpl
inc
mov
call
cli
and
push
outsl
adc
inc
push
cwtl
dec
bound
sbb
sbbb
es
das
js
xchg
fstps
adc
sbb
sub
imul
cmp
cmpsl
pop
mov
out
or
jnp
sub
fsubrs
lock
cmp
dec
mov
dec
push
mov
shlb
shl
inc
scas
pop
pusha
jns
inc
pop
mov
pop
adc
sbb
shr
or
mov
lods
and
je
nopl
mov
sti
mov
add
dec
mov
xor
js
xor
push
mov
jmp
test
jmp
dec
push
mov
in
sahf
rclb
mov
push
or
xchg
jecxz
cmc
mov
push
add
jl
cmp
test
repnz
sbb
adc
cmp
jmp
nop
adc
sub
sub
xor
les
mov
loopne
js
add
push
mov
mov
imul
cltd
lods
out
inc
adc
mov
jne
xchg
jp
or
dec
pop
xor
sbb
or
dec
push
dec
and
dec
adcw
ret
mov
stos
inc
lret
loope
pop
rclb
sub
popf
addr16
shrl
or
xchg
enter
clc
jmp
in
mov
xor
pop
inc
sbbb
push
loopne
popa
push
jmp
cmp
dec
push
jns
jle
aas
and
jmp
ss
or
out
dec
ds
pusha
daa
dec
jp
aam
mov
pop
rorb
jo
outsl
inc
dec
adc
clc
sub
loope
stos
xor
pusha
sbb
popf
adc
adc
fsubr
fldl
data16
dec
pusha
lahf
pop
jae
ljmp
push
push
jmp
cli
test
jae
iret
es
and
push
in
in
aas
jp
xor
or
mov
xor
ljmp
or
repnz
and
ret
push
rorb
dec
mov
xor
add
adc
or
add
or
cmp
jmp
stos
cmp
rorb
das
insb
jmp
cmp
andl
cld
adc
pop
pop
out
adc
dec
add
stc
push
sub
popf
call
stc
mov
pop
daa
dec
mov
xor
sbb
jle
insl
push
frstor
fcomps
push
sbb
mov
dec
cmc
and
cltd
and
and
jmp
movsl
fdivrp
ret
popa
xchg
sbb
lahf
add
rorl
mov
add
cmp
out
je
jo
shl
dec
cmpsb
and
jmp
aad
xor
adc
mov
inc
call
clc
jge
or
push
fidivl
outsl
lret
ret
sub
sbb
add
mov
test
push
pop
mov
test
mov
add
dec
rolb
shl
dec
pop
std
mov
push
imul
push
cmpb
fbld
cli
das
push
movsb
xor
clc
hlt
fmuls
sub
add
cmp
fdivrl
out
push
fs
add
shl
xor
int3
inc
add
ds
inc
rclb
cltd
push
adc
addr16
sar
xchg
and
jbe
popl
pushf
jmp
lcall
popa
or
adc
cmp
dec
shl
sbb
or
adc
jnp
and
push
test
test
dec
dec
and
or
aaa
and
fsubl
pusha
mov
int3
adc
and
idivb
mov
jbe
in
addb
and
dec
or
adc
add
pop
add
push
mov
add
sarl
ss
sub
sub
pop
pop
lock
sub
or
and
push
pop
imul
jmp
mov
mov
mov
rdpmc
fwait
cmp
cmp
pop
add
out
orl
push
dec
dec
add
pusha
push
mov
enter
cmpsl
test
test
sahf
aam
push
xchg
push
sbb
sub
cwtl
xchg
push
andb
mov
pop
dec
sub
jp
push
adc
lret
jns
pop
sbb
ja
cmp
test
lret
mov
inc
or
adc
push
add
repnz
sub
bound
test
sbbl
mov
mov
push
mov
push
in
mov
mov
mov
rorl
cwtl
xor
xor
xchg
push
sbb
mull
jnp
cmp
mov
push
adc
adc
fcmovbe
push
add
and
es
xchg
dec
mov
or
orb
dec
call
call
scas
lock
inc
sbb
pop
or
loope
test
push
out
and
jg
mov
stc
notl
mov
aas
mov
xchg
pop
daa
push
jg
or
pop
das
xchg
jmp
data16
add
inc
iret
push
cwtl
imul
dec
test
loopne
into
xchg
pop
dec
and
dec
push
pop
mov
mov
or
ffreep
mov
or
out
aam
xor
jbe
xchg
fcomps
lahf
dec
push
sti
or
mov
push
pop
lahf
or
push
mov
stos
and
iret
adc
push
cmp
mull
in
popf
lock
mov
mov
pop
mov
in
inc
fimuls
call
clc
and
push
jp
enter
and
or
pop
ja
add
hlt
xchg
jo
mov
cmp
test
test
mov
jecxz
ja
adc
je
mov
pop
fisubs
aaa
push
test
sahf
shl
sbb
xchg
idivl
orb
test
das
pop
lds
lods
jo
mov
pop
xchg
cmpsl
push
lret
pop
sbb
test
inc
aas
and
push
cs
xchg
clc
imul
add
adc
test
pop
addb
xorb
outsb
sbb
shlb
add
push
jns
mov
pop
jmp
cmp
leave
sbb
dec
push
jne
int3
jp
dec
pop
push
mov
movsl
adc
pop
pop
pop
pusha
or
fdivrs
test
or
data16
sbb
add
lahf
add
push
jae
sarb
or
pop
or
inc
pop
add
push
jmp
sbbb
fs
adc
mov
icebp
jne
lret
pop
and
adcb
jmp
scas
push
fsubs
adc
dec
mov
push
incl
sub
or
loop
fdiv
jb
pop
inc
adc
sub
loopne
cmp
pushw
imulb
out
mov
cmp
add
mov
jo
jae
repnz
lahf
dec
pop
xor
jp
aaa
cmp
push
addl
test
dec
sub
loopne
clc
movsb
dec
or
dec
mov
xor
orb
das
loope
testb
jg
sbb
push
dec
mov
pop
xchg
inc
mov
lock
add
xor
lret
inc
lcall
inc
jge
sub
clc
jecxz
filds
cmp
mov
pop
pusha
fwait
and
in
add
or
shrb
call
push
mov
add
lock
mov
sub
repz
cmp
or
leave
sbb
fnstcw
cmp
push
out
aad
pop
lahf
das
jo
les
stos
mov
and
bsr
scas
pop
lcall
cmc
hlt
mov
sub
rclb
inc
mov
adc
jmp
or
inc
inc
mov
xor
fisttps
mov
sub
and
mov
xchg
or
arpl
cs
adc
push
add
pop
aad
fdivl
cmp
out
js
jo
loop
xchg
xor
dec
cs
and
push
sub
shl
push
das
or
jmp
adc
into
test
rclb
sub
cli
or
mov
and
mov
mov
mov
push
push
xor
inc
push
add
mov
pop
push
mov
aas
push
loop
inc
jo
cmp
lock
shl
mov
jo
jmp
sbb
push
bound
jno
dec
ja
mov
or
call
xchg
cmp
pop
insb
dec
dec
pop
xchg
pop
xor
sbb
pop
aaa
or
push
imul
jmp
pop
push
mov
lret
jg
in
sub
pop
stc
nop
movsb
out
mov
aam
cmp
pushl
add
and
dec
dec
sarl
adc
cmpsb
in
popa
sub
mov
pop
and
loope
sbb
pop
cmc
movsb
shlb
push
ss
pop
push
adc
pop
pop
std
in
adc
jmp
mov
or
add
iret
push
sysenter
and
and
loope
popf
xor
inc
xor
testl
sbb
clc
or
mov
mov
pop
push
in
adc
pavgb
xchg
clc
insl
mov
cwtl
cld
pop
dec
add
icebp
int
das
cmp
and
inc
add
inc
fsts
pop
inc
bound
sbb
jg
dec
or
lods
or
stos
lcall
sbb
sbb
xor
insl
not
jmp
or
mov
sarb
xchg
jno
push
mov
pop
push
mov
aam
push
jmp
rorl
repnz
stc
pop
push
and
xchg
les
fistps
pop
add
cmp
dec
cmp
outsb
fwait
dec
xchg
lea
mov
adc
jo
cmp
add
lock
add
movsb
les
js
cmc
add
inc
or
out
add
pusha
cli
addr16
mov
sub
dec
adc
sbb
hlt
mov
mov
js
out
sub
les
pop
and
xor
add
loopne
pop
push
notb
pop
outsb
pop
xor
lret
and
daa
xchg
in
out
ffree
mov
insb
cmp
pop
jno
push
cmp
ficompl
int3
jmp
lods
push
icebp
nop
aas
sbb
push
out
inc
mov
mov
das
xchg
add
dec
add
push
mov
cmc
popa
jo
pop
inc
push
xor
sbb
push
jmp
xchg
xchg
movsb
add
ret
xchg
and
adc
loop
ja
stos
xchg
movsb
hlt
ret
xor
imul
push
pop
xchg
xor
add
inc
es
subl
ds
jmp
in
sbb
dec
jmp
rcrl
add
loop
or
mov
xchg
sub
jg
repz
fimuls
pop
pusha
push
mov
and
or
and
jne
rcrb
lret
sub
jb
mov
push
push
inc
and
dec
popf
cs
sub
movsl
jns
jo
loop
pop
inc
and
sar
icebp
lahf
sub
push
movzwl
not
mov
mov
out
pop
dec
clc
sub
mov
clts
pop
subl
stos
xchg
jecxz
push
or
and
jp
mov
push
push
fistpl
inc
aam
pop
inc
pusha
add
pmaxsw
rorb
dec
dec
and
mov
out
movsl
jno
dec
jne
pusha
cmp
fstpl
cld
jns
das
scas
jbe
pusha
out
adc
pusha
adc
imul
cmp
jmp
jns
sahf
or
mov
push
sarb
xchg
iret
jmp
ret
lds
mov
insb
test
and
fdivl
add
imul
push
movsb
pusha
in
mov
lods
arpl
fucomip
adc
xchg
sub
xlat
adc
cli
pop
shl
add
testl
sub
mov
out
scas
test
mov
int3
push
pusha
stos
push
jp
shrl
mov
roll
mov
mov
aad
pop
mov
add
add
mov
xlat
add
mov
pop
sti
xor
jle
or
xchg
push
jg
xchg
mov
adc
call
jb
hlt
push
or
xchg
push
aas
ds
mov
cmc
int
adc
xchg
add
and
idivb
mov
in
aam
and
fnstsw
fs
faddl
out
sbb
mov
sti
push
or
hlt
bound
insl
mov
push
ffree
imul
cwtl
or
shl
jmp
mov
jb
call
sub
mov
jmp
pop
push
xor
xor
movsb
outsl
and
and
bound
push
inc
mov
sbb
pop
push
sub
cwtl
fistl
fisttpll
xor
jl
shlb
in
enter
cmp
or
push
xchg
and
pushf
pop
sti
arpl
loope
int
and
test
sub
sbb
sub
popaw
mov
and
push
aam
fldcw
leave
dec
movsb
pop
adc
mov
add
xchg
mov
xchg
aad
lods
ljmp
dec
clc
in
addr16
aad
push
mov
gs
gs
and
in
add
roll
das
mov
into
mov
inc
push
cmpsl
or
sar
pop
mov
sbb
jecxz
mov
push
sub
call
jp
mov
arpl
in
iret
and
test
dec
mov
pop
jge
cltd
cli
aas
mov
xchg
cmp
adcl
push
mov
or
sbb
pop
add
add
xchg
push
xchg
in
push
push
xchg
subb
insb
rorl
xor
notb
ja
push
shll
push
mov
mov
jo
cmp
or
mov
xor
sub
ret
pusha
ret
and
jmp
rcrl
pop
push
or
invlpga
repnz
cs
out
push
mov
pop
cli
push
add
pop
jmp
adc
test
in
mov
lods
jge
je
and
jnp
mov
or
inc
lea
inc
add
add
adc
cmc
jecxz
ret
lods
push
mov
xchg
neg
xchg
nop
mov
inc
cmp
cmpsl
imul
pop
push
adc
dec
arpl
mov
rolb
incl
jmp
out
mov
in
push
xchg
stos
call
jmp
xchg
mov
leave
ljmp
cmpb
decb
cmp
mov
push
pop
leave
ret
pushl
stc
push
in
xor
adc
ljmp
fidivl
cld
add
dec
and
dec
dec
or
push
pop
xor
push
dec
mov
gs
adc
adc
stc
and
or
add
push
xor
fldenv
int3
fcomi
repz
roll
xchg
jnp
or
arpl
sub
stos
clc
stos
pop
fdivl
sub
dec
push
in
in
fsubl
push
or
lock
sub
or
cwtl
push
cld
dec
add
out
inc
psubd
push
repnz
add
push
stc
inc
cmp
loop
jns
xchg
adc
leave
daa
xor
mov
repz
int3
mov
push
je
inc
mov
dec
or
and
or
jmp
hlt
sub
clc
or
scas
ret
ja
jge
sub
or
cmp
sub
in
sbbb
or
inc
pop
xchg
icebp
xor
mov
aas
mov
sbb
xorl
out
inc
negl
push
mov
divb
lahf
add
dec
mov
incl
lock
rolb
mov
pop
outsl
or
cmpsb
mov
mov
movsb
mov
add
push
mov
add
fsub
ret
incl
mov
pop
pop
nop
outsl
out
arpl
dec
jg
in
and
or
jbe
sbb
xchg
pop
xchg
mov
mov
ds
jb
mov
nop
inc
xchg
pop
rorb
xchg
mov
icebp
orb
xor
or
and
xchg
pop
or
enter
xchg
sbb
clc
dec
data16
stos
add
adc
mov
pop
sub
cs
sbb
cmpsb
adc
jmp
shl
and
and
dec
mov
push
pop
frstor
int3
cli
pop
sub
test
or
xchg
pop
call
pusha
xor
sbb
add
rcrb
cmc
adc
and
xchg
neg
push
fstps
jmp
mov
jmp
xor
add
inc
imul
pusha
mov
imul
js
sub
lock
mov
push
cwtl
cmc
leave
xchg
pop
pop
mov
mov
sub
xlat
xchg
pop
add
jmp
cmp
cmp
loop
push
scas
mov
imul
aas
mov
outsl
inc
jns,pt
jns
cmpsb
mov
xchg
sub
gs
cmpsl
add
js
push
shl
add
shl
lret
clc
jge
repnz
mov
fdivp
fadds
sub
push
lods
sbb
fstpl
xor
in
adc
or
xchg
jg
push
xorb
pop
cmpsb
sbb
mov
shl
in
daa
subb
leave
repnz
cwtl
rcrb
data16
insl
gs
and
testl
sub
pop
push
insb
or
out
sbb
ret
test
add
jns
leave
ljmp
add
daa
cmpsl
add
imul
push
dec
cmp
nop
add
cmp
jns
sub
push
sub
and
or
out
pop
xchg
mov
int3
fdivr
jne
fbld
inc
bound
and
add
xor
inc
test
repnz
add
ds
or
inc
dec
sub
inc
cmpsb
icebp
and
rcrb
pop
inc
sub
jmp
mov
xchg
jbe
xchg
dec
das
inc
imul
add
in
inc
mov
pop
jne
xor
fisubrl
clc
jo
pinsrw
push
outsl
ret
lahf
pop
in
xchg
pop
ss
cmp
es
add
adc
or
out
adc
cli
sub
adc
arpl
jae
notl
shrl
jmp
outsb
test
lahf
repnz
pop
and
or
lods
xchg
sbb
and
push
in
xlat
or
pop
scas
and
popf
inc
pop
and
repz
or
jg
xchg
stos
xor
fstps
incb
adc
mov
out
call
pop
mov
ret
mov
insb
rcrl
sbb
mov
inc
push
in
mov
lds
insl
inc
dec
mov
pop
jl
adc
cmp
inc
sbbl
sti
sbb
test
orb
jg
adcl
stos
cmp
cmp
pushf
jmp
shlb
fsubr
enter
add
jmp
mov
add
xchg
arpl
xchg
mov
insl
jg
xor
push
pop
icebp
lret
xchg
pop
pop
push
push
add
icebp
aas
dec
xor
cs
cmp
inc
cmp
xor
jne
push
mov
enter
aam
jp
icebp
push
mov
jno
xchg
imul
sti
nop
jecxz
or
stos
imul
inc
or
mov
adc
hlt
add
js
add
xor
jbe
xchg
or
out
xchg
popa
jge
lret
shlb
push
movsl
dec
je
sub
push
in
cmp
xor
push
mov
mov
fiaddl
popa
push
push
inc
cltd
into
pop
push
cmpsl
jno
bound
add
push
sbb
inc
arpl
jnp
add
adc
int
add
dec
test
loop
adc
popa
jb
in
jle
adc
push
lods
adc
enter
mov
xlat
xor
repz
push
fisubrl
mov
adc
and
push
aam
xchg
daa
rol
and
cmp
xchg
jl
loopne
out
push
popa
pop
adc
cwtl
inc
imul
fidivl
add
sarl
push
push
mov
dec
cmp
lcall
cmpsb
repnz
std
xor
ret
mov
or
pop
lods
dec
fs
in
cli
adc
in
pop
mov
push
pop
mov
add
ror
sub
push
sub
xchg
testl
mov
loopne
addl
mov
jl
sub
dec
mov
loop
scas
and
daa
mov
out
pop
push
mov
mov
aad
clc
decl
icebp
jns
clc
sbb
xor
mov
add
mov
push
push
push
sub
cmp
jno
rolb
jmp
test
unpckhps
rcr
jmp
iret
pop
loopne
scas
popa
in
pop
inc
pushf
add
push
and
in
add
add
inc
add
add
mov
bound
push
adc
repz
popf
enter
ds
popa
daa
out
xor
pushf
pop
mov
loope
cmc
jnp
jno
sub
push
popa
out
and
scas
cmpl
push
fmull
int
dec
add
lahf
push
inc
add
sarb
popl
loope
arpl
lret
or
push
dec
ds
orl
repnz
sahf
mov
cmpsb
dec
jp
or
into
fcomp
aas
ja
and
adc
xchg
sahf
js
mov
fsubr
pop
roll
jmp
push
arpl
daa
ds
lcall
shlb
sub
xchg
icebp
in
cli
mov
xchg
adc
jge
xor
push
ret
jle
push
mull
cld
pop
pop
push
aas
mov
lahf
js
mov
dec
or
push
in
es
or
push
pop
pop
loope
jg
mov
and
jp
dec
adc
cli
inc
sbbb
push
inc
mov
popa
adc
aad
inc
push
push
stc
sbb
andb
sub
bound
clc
jecxz
pop
mov
stos
lret
sub
push
ja
xchg
icebp
or
sub
test
mov
sti
mov
add
push
push
cmp
xor
test
in
dec
sbb
subb
pop
mov
imul
mov
and
insl
out
or
sbb
sbb
pop
daa
pop
out
sub
pop
ret
pushf
aad
lahf
sub
and
stos
sub
or
or
test
push
scas
jb
add
jbe
loopne
or
xchg
outsl
cli
dec
orl
scas
adc
and
lahf
adc
or
adc
pop
or
ret
push
push
jnp
xor
fildl
pop
jns
imul
mov
mov
cmp
popf
inc
loop
ffree
push
aas
adc
dec
dec
mov
mov
popl
or
adc
fbstp
rorb
iret
adc
push
or
aam
pop
and
mov
and
ds
push
clc
pop
add
sahf
insl
jmp
adc
mov
scas
and
xor
pop
clc
mov
sub
push
mov
outsw
mov
add
jg
std
xlat
mov
je
mov
int
sti
out
xor
icebp
in
mov
fmull
jg
xor
popf
inc
daa
or
or
mov
xchg
adc
push
mov
jg
shr
sbb
or
sub
xchg
loopne
jmp
cld
cmp
pop
iret
mov
das
and
mul
pop
std
in
mov
lret
and
sbb
inc
out
pop
enter
fwait
dec
add
imul
fwait
ja
adc
mov
mov
test
les
ja
or
push
add
rolb
mov
inc
loop
ja
dec
xor
pop
stc
sub
arpl
jno
pop
mov
push
cmp
cmp
mov
cmp
xchg
das
repz
or
in
add
jo
cmpsb
pop
and
fwait
and
push
push
loopne
pop
and
dec
bound
icebp
popl
out
push
sbbl
mov
sahf
mov
add
xor
jg
in
or
jns
dec
mov
dec
jg
mov
test
dec
mov
xchg
orb
xchg
ret
pop
inc
or
cmp
jp
sub
add
ljmp
testl
outsb
push
inc
jmp
push
add
movsl
mov
scas
lock
mov
mov
mov
mov
cmp
icebp
adc
xor
out
xchg
dec
and
xchg
cs
jbe
mov
xor
jmp
out
out
mov
or
std
xchg
or
mov
sub
scas
loop
push
fs
loope
fldt
sbb
push
daa
aam
add
jmp
add
outsl
pop
cs
hlt
mov
mov
repnz
subb
pop
std
outsl
jb
sbb
negb
dec
push
loop
repnz
and
mov
sbb
add
dec
mov
sbb
push
call
cs
jle
push
inc
inc
pop
push
push
mov
mov
xor
loopne
dec
loope
xor
clc
hlt
or
rolb
pop
lods
xchg
sub
cmp
cmp
adc
repz
out
addl
rorl
lret
test
cmp
test
outsl
stos
into
fmuls
dec
lret
stos
pop
mov
sub
test
aaa
dec
rclb
pop
cmp
pop
leave
sub
je
sub
or
xchg
xor
jne
add
mov
adc
lahf
rcrb
push
loope
mov
mov
or
jle
sub
sub
jle
cmpl
inc
xor
sub
add
xchg
sub
push
jmp
push
lret
adc
or
jg
and
sbb
faddl
pop
or
xchg
jb
out
ljmp
mov
repnz
mov
inc
or
shll
push
mov
fisubrs
mul
adc
jae
jecxz
and
adc
orb
xchg
or
sub
insl
cmpsl
or
mov
outsb
xor
add
push
push
xor
lahf
inc
scas
cli
jns
add
pop
cmc
rol
outsl
insb
cmp
push
cs
xor
cmpb
mov
cmpl
aaa
popa
nop
xchg
add
imulb
or
fcmove
pusha
in
jecxz
out
jmp
sub
mov
mov
add
or
scas
mov
push
and
leave
lret
inc
ljmp
mov
jmp
orl
lods
es
pop
icebp
out
scas
test
jbe
pop
in
or
mov
sbb
popf
xorb
push
ret
push
dec
mov
push
pop
sbb
xor
jp,pn
orb
sbbb
nop
sbb
sub
xchg
icebp
dec
push
fdivrl
imul
mov
pop
xor
mov
mov
sub
adc
mov
imul
loop
test
loop
pop
push
dec
lods
push
mov
jae
jecxz
call
int
xchg
dec
pop
nop
dec
je,pt
push
add
insl
jle
sub
arpl
test
push
mov
pop
inc
sbb
negb
xchg
in
adcb
lods
pop
pushl
and
xor
xor
sub
add
scas
shl
dec
popa
movsl
roll
adc
pop
push
and
pop
cmp
lret
bswap
and
lods
pop
xchg
or
sbb
pop
jnp
jns
das
mov
push
lods
jae
jle
mov
pop
loopne
dec
and
inc
or
jmp
popa
inc
and
psllw
in
fidivrl
xchg
push
lahf
cmp
pusha
sbb
pop
dec
aaa
xorb
sub
pop
out
cmpsb
sub
inc
dec
cwtl
mov
adc
add
inc
movups
push
jmp
dec
sbb
jp
iret
sub
out
shr
add
pop
and
jecxz
push
xor
pop
add
dec
aaa
aad
jo
xchg
fiadds
fistps
outsb
add
lds
nop
inc
jp
and
dec
pusha
dec
dec
jae
push
push
or
push
inc
xchg
ja
shufps
push
pop
or
jmp
les
jge
push
mov
mov
jno
adc
aad
add
add
mov
jo
mov
add
mov
and
pop
aas
lock
and
jmp
frstor
ficoml
test
or
and
or
gs
dec
add
insb
mov
outsb
add
in
jmp
cmp
xchg
jge
dec
dec
mov
loope
adc
bound
sub
int3
inc
dec
adc
pop
popa
hlt
out
outsl
aam
jo
mov
pop
mov
stos
idivl
out
jge
sub
pop
add
enter
icebp
pop
xchg
jg
jmp
dec
movzwl
xor
mov
sarb
push
fisubrl
dec
or
jno
test
les
and
outsb
addb
shrl
jmp
mov
in
arpl
jmp
ret
jno
mov
add
push
xchg
or
xor
inc
addr16
cmpsb
leave
sbb
sbb
adc
and
in
pushf
add
adc
inc
ds
loope
inc
inc
and
cld
xchg
mov
jae
add
rcrb
add
dec
and
xorb
or
shlb
adc
xor
lds
iret
aas
push
mov
neg
repnz
shl
jmp
int
push
adcb
adc
fsubl
cmc
cmp
mov
push
pusha
jecxz
mov
fxch
jmp
sub
mov
jo
pop
xchg
negb
dec
push
pop
jns
lret
push
and
aaa
inc
adc
leave
pop
add
imul
insl
out
out
shll
or
sahf
sbb
leave
pop
dec
xor
dec
add
lea
jecxz
stc
mov
in
popf
push
test
mov
add
xchg
addb
cmp
xor
xchg
test
lea
daa
pop
hlt
add
neg
pop
add
mov
jmp
outsl
jbe
out
and
dec
lahf
stc
roll
sarb
test
pop
cmp
clc
adc
pop
sarl
daa
subl
mov
jbe
add
dec
roll
shlb
stos
dec
mov
gs
jbe
push
dec
jo
iret
nop
push
jne
pop
lret
sub
stos
std
and
pop
rcrb
in
sub
pushf
or
jnp
add
ret
xchg
adc
scas
rolb
lret
pop
pushf
mov
push
or
add
mov
or
or
mov
movsb
andl
push
cli
ljmp
add
ljmp
jecxz
mov
sub
pop
xchg
or
out
jmp
lret
push
push
iret
push
add
dec
sub
jecxz
and
in
js
xor
loope
xor
dec
repnz
inc
aas
adc
push
lock
addl
je
adc
sub
dec
and
cwtl
rcrb
mulb
sbb
jo
mov
dec
inc
enter
ljmp
dec
add
push
leave
push
fiadds
pop
loope
sbb
int3
or
or
fstl
jmp
jb
push
popf
jmp
shl
sbb
cli
jge
pminsw
outsb
sbb
and
mov
and
dec
xor
gs
cs
or
fs
pop
push
or
add
sub
jg
loopne
sbb
insb
push
in
push
pop
or
lock
pop
push
and
pusha
loopne
fcoml
adc
pop
sub
test
mov
orb
enter
insl
mov
outsl
mov
nop
daa
mov
dec
jmp
loope
sub
pop
dec
inc
in
xchg
push
data16
push
xor
in
clc
imul
xor
ds
inc
xchg
ja
jecxz
push
mov
mov
aas
pop
pop
ret
int3
push
mov
daa
pop
push
push
lods
inc
add
or
xor
or
lds
rcll
and
in
mov
inc
stc
not
push
xor
sub
ret
add
mov
dec
cmpl
hlt
call
data16
cmpsb
adc
sbb
test
pop
mov
je
fs
xor
sbbb
adc
ret
lret
sti
ds
push
in
icebp
and
sub
dec
fisttpll
adc
and
repnz
sti
xor
imul
loop
sbb
pop
cmp
push
inc
gs
hlt
stos
and
or
pop
jmp
inc
xor
sbb
inc
test
daa
adc
pop
dec
jecxz
mov
add
jmp
dec
push
cmc
rorb
or
jmp
dec
push
movsl
and
shlb
fs
test
mov
in
add
inc
pop
push
sahf
out
sub
add
inc
cmp
movb
ss
jmp
mov
xchg
push
mov
vpaddq
inc
nop
fsubrl
inc
lds
dec
sub
lods
or
or
aas
loope
ret
and
outsb
mov
or
sbb
pop
pop
sbb
mov
rolb
stc
cwtl
jno
gs
cmpl
mov
loop
inc
je
add
pusha
out
xor
xchg
out
push
jmp
jmp
sbb
or
adc
stc
nop
icebp
xchg
das
and
xchg
lcall
jecxz
add
imul
xchg
xorl
pop
icebp
and
add
push
push
dec
adc
and
pop
shrb
add
inc
add
scas
add
sbb
pop
or
dec
pop
jmp
mov
jl
cmc
sar
fisttps
pop
fimull
aad
mull
daa
and
fcomps
inc
bound
cli
loopne
pop
pop
cmp
jnp
rclb
xor
pop
cmp
bound
jmp
loope
pop
or
dec
mov
ja
mov
or
push
pop
mov
pusha
lea
or
test
and
mov
ja
add
pop
mov
pop
sbb
adc
mov
and
sub
cmp
push
movd
dec
dec
xchg
xchg
jae
or
push
ret
jb
lret
jl
mov
adc
push
faddl
jb
out
sub
imull
sub
jmp
pop
lds
inc
xor
xchg
ljmp
scas
loopne
pop
pop
cmp
sbb
or
addl
jp
jmp
add
and
push
pop
ret
sbb
popa
into
fs
stc
pop
rolb
pop
pop
loopne
fiaddl
pop
push
shl
rcrl
inc
pushf
mov
pop
shll
xchg
or
mov
cwtl
or
pop
stc
loope
movsbl
jns
adc
movsl
and
pop
and
jp
push
mov
cmp
or
cli
adc
jo
or
jmp
add
adc
into
mov
jmp
pop
xor
div
sub
mov
popa
fstps
icebp
in
add
push
sub
pusha
jb
sbbl
sub
jo
ret
int3
in
inc
xchg
negl
shlb
movsl
aas
pop
push
cmpsb
dec
inc
movsl
arpl
adc
scas
aam
adc
jo
add
add
push
or
popw
ror
mov
add
push
add
mov
push
mov
inc
xor
mov
rolb
add
pusha
add
push
add
imul
mov
cmpl
das
cli
aaa
sub
or
sbbb
mov
orb
les
arpl
pop
ficoms
and
bound
nop
sub
repnz
push
xchg
and
jle
aam
and
and
and
nop
enter
mov
fidivrs
and
and
aaa
inc
mov
in
or
push
inc
int3
xchg
inc
rcrl
frstor
je
mov
lods
or
insl
sbb
inc
enter
les
jge
add
ret
xor
or
mov
sti
lods
sbb
or
fadd
xorb
inc
insb
push
stos
lock
test
jmp
and
adc
lods
sbb
mov
int
cmp
leave
cmp
push
jecxz
adc
or
orl
dec
adcb
cmp
lret
hlt
mov
push
or
dec
or
pushf
push
in
js
adc
mov
cmc
jle
mov
fimull
push
dec
adc
push
sbb
mov
xchg
loopne
add
push
out
pushf
fadds
popl
pop
inc
aaa
rolb
inc
mov
test
cs
adcl
sbb
nop
pop
xor
mov
pop
jmp
add
mov
scas
xlat
push
js
adc
fwait
sub
lock
add
loope
and
cmp
dec
test
sbb
mov
cmp
push
leave
lcall
fs
orb
mov
lea
push
les
push
and
rcrb
cld
call
add
ds
mov
stos
adc
cmp
jne
jmp
mov
push
mov
add
inc
leave
jne
testl
xchg
divl
shl
mov
dec
xor
jl
add
mov
iret
mov
shr
push
data16
sub
add
dec
loop
sbb
cmp
rclb
cs
xchg
out
lcall
je
xlat
xchg
mov
movsl
cmp
xor
pop
das
push
data16
dec
aam
mov
scas
mov
push
xor
aas
push
out
int
lods
xor
sbb
or
outsl
inc
test
not
add
sub
inc
or
push
sub
ret
adc
add
jecxz
or
pop
inc
push
inc
popf
push
xor
stos
rcr
out
mov
shl
inc
or
adc
pop
pushl
sub
jmp
add
jmp
out
adc
xlat
incb
mov
mov
nop
cmpsl
jns
push
mov
xchg
aad
shll
dec
jmp
faddp
aad
popf
fbstp
and
daa
xlat
xchg
xor
sbb
call
add
push
and
mov
jae
clc
repz
add
in
xchg
daa
mov
das
pusha
std
jae
and
xor
pushf
add
jle
dec
pop
jmp
sbb
or
pushf
add
inc
inc
or
movsb
imul
out
call
imul
inc
repnz
xchg
out
adc
std
sbb
fnsave
dec
jl
sub
add
mov
xor
pusha
mov
aam
sbb
push
lock
sub
pop
sti
mov
inc
movsb
and
or
mov
inc
push
pop
dec
jg
out
push
xchg
or
adc
push
and
jecxz
mov
inc
push
ljmp
loopne
push
lcall
jg
jns
sub
pop
jecxz
ss
sub
in
mov
add
adc
lock
sahf
mov
andl
or
xchg
clc
clc
nop
nop
or
loop
and
faddl
push
pop
scas
sbb
not
push
jl
js
loope
testl
xor
gs
cmp
daa
mov
das
add
lcall
sti
push
mov
xchg
shr
push
mov
add
sbb
hlt
out
in
sbb
or
jne
push
inc
iret
and
cld
push
and
addl
call
cmp
or
insl
flds
cmp
int
mov
in
aam
mov
leave
add
mov
add
or
and
mov
test
ret
jmp
mov
cmp
pop
mov
stos
mov
push
movsb
pop
sub
lret
dec
inc
sbb
imul
adc
push
add
xor
mov
fstpl
cmpsl
push
movsb
pop
xchg
ret
fdivrs
mov
push
push
push
xchg
inc
pop
jge
adc
enter
aas
mov
sbb
xor
mov
pop
or
das
add
loope
push
inc
andl
rclb
mov
push
test
push
add
dec
xor
inc
add
fiaddl
imul
in
aaa
push
pop
xorb
insb
ret
mov
negl
mov
mov
add
cmc
adc
cli
sub
sbb
daa
inc
scas
lret
fcom
xchg
pop
daa
je
mov
test
hlt
mov
mov
pop
add
pop
fadd
or
fsub
dec
loopne
insl
outsl
jo
inc
push
add
fwait
push
pop
daa
pop
push
in
lds
lahf
pop
je
les
testl
out
aaa
div
in
and
nop
mov
add
push
mov
mov
loope
and
idivb
aam
mov
pop
xchg
shr
mov
mov
adc
add
pop
inc
aam
push
sbb
cmp
jle
xchg
push
iret
adc
or
add
fnstenv
mov
pop
mov
arpl
cmp
add
cmp
add
pop
sar
push
mov
aas
shr
roll
repnz
pop
add
dec
sarl
pop
loop
shrb
je
and
mov
inc
push
fs
and
out
das
popa
pop
pop
jge
lock
mov
mov
xor
dec
adc
imul
adcb
jle
jmp
pop
adc
xor
rorl
push
ret
xchg
pop
clc
push
xor
in
or
imul
gs
or
outsb
cld
and
jmp
subl
nop
push
icebp
sub
dec
bound
mov
or
imul
push
mov
das
cmpb
pop
add
sbb
mov
mov
outsb
push
xlat
jmp
stos
cmpsb
into
pop
xchg
sti
cmc
inc
dec
stc
mov
icebp
in
push
or
cli
push
mov
decl
sub
mov
fnsave
push
incl
cmp
rolb
inc
repnz
dec
not
cld
loop
mov
mov
mov
sub
nop
sub
daa
add
notb
xchg
test
cmp
jo
loope
sub
cmp
rcrb
testl
clc
cltd
push
nop
ficomps
push
pop
pop
push
push
sbb
mov
enter
cltd
mov
fiadds
pop
call
imul
or
add
scas
ja
push
xchg
cld
and
push
jmp
add
xor
and
pop
pop
pop
push
rcrl
inc
imull
jns
mov
dec
bound
lock
pop
ret
pushl
fisttps
loope
adc
addr16
stos
mov
adc
lret
push
pop
add
xchg
out
add
dec
or
sbb
xor
or
adc
add
movq
into
loopne
or
bound
fxtract
pushf
pop
jo
inc
push
pop
cwtl
jecxz
inc
mov
sbb
add
jnp
jmp
mov
xor
das
int
pop
pop
mov
lock
repnz
cs
test
lds
fnstsw
test
xor
mov
and
mov
stos
cwtl
add
xchg
rcrb
xchg
rclb
popa
lret
repz
outsl
sbb
pop
in
jmp
loopne
mov
pop
daa
xor
and
or
sub
xor
imul
movsb
ret
cmp
jmp
out
loop
ror
jbe
cli
pop
inc
pop
jbe
loopne
push
mov
or
imul
sub
xor
add
icebp
js
in
pop
jmp
adc
dec
inc
sub
cmp
fs
add
lahf
or
aam
xchg
pop
adc
xor
gs
jo
out
popf
stos
and
ljmp
jnp
mov
loope
lods
pop
add
xor
stos
xchg
fwait
addr16
int
adc
inc
lahf
stos
jns
push
decb
xor
fildll
mov
movswl
idivl
jg
ds
lods
mov
pop
stos
clc
cmp
hlt
or
stos
pop
dec
jmp
enter
mov
jl
je
sbb
push
aad
test
jae
hlt
rorb
lret
sbb
jne
shlb
cmp
or
negl
fnsave
das
mov
hlt
mov
adc
and
jne
sbb
dec
idivl
cli
jecxz
xchg
or
rolb
repz
adc
or
popf
add
popa
test
mov
test
test
add
push
xor
adc
sub
fdivs
hlt
jbe
push
or
sbb
or
inc
cmp
sub
pop
ja
stos
ljmp
add
mov
inc
inc
sub
fidivl
or
push
xlat
cmp
or
repz
call
push
dec
xor
xor
roll
subb
iret
call
aaa
sbb
popa
les
and
das
or
xchg
xor
cwtl
or
popf
add
shl
adc
sbb
pushf
in
aaa
dec
lahf
shl
sub
in
mov
or
adc
jo
push
and
jp
add
jmp
xor
sub
sbb
mov
mov
inc
lret
xor
sub
inc
scas
test
cli
loop
shll
sub
and
cmp
rolb
flds
push
lahf
adc
add
add
mov
inc
push
icebp
fisttps
dec
add
lret
add
push
or
cmp
push
jmp
js
mov
stc
addr16
jg
xor
xor
jnp
push
adc
outsl
cmp
int3
test
ror
loopne
int3
push
xchg
mov
pusha
ljmp
int
push
mov
xor
ds
push
dec
jmp
mov
jne
popa
mov
jle
lret
aas
sub
xchg
aaa
or
mov
push
daa
hlt
push
js
dec
or
outsb
mov
cmp
addl
insb
xor
dec
imul
mov
cmp
push
rcl
cmpsb
stc
ljmp
sbb
sub
adc
jl
shlb
mov
jmp
mov
ja
pop
cmc
push
je
xchg
add
mov
fimuls
das
pop
in
or
call
jg
cmp
sub
add
pop
pushf
adc
je
repnz
jmp
push
mov
rclb
mov
mov
add
lods
icebp
push
push
punpckhbw
or
and
pop
cmp
mov
mov
or
pop
pusha
jl
xor
subb
movsb
inc
jbe
aas
pop
lock
call
push
lea
adc
dec
jns
sbb
ret
ss
mov
fisubs
repnz
xchg
subl
push
pop
push
and
lds
fcoms
push
movsb
inc
push
jae
push
or
and
inc
jmp
rorl
add
sbb
or
stos
xlat
sbb
iret
xlat
or
cmc
out
fldl
sub
pop
stc
push
test
imul
adc
and
jle
inc
cwtl
sbb
not
push
inc
push
jmp
out
stos
fstpt
push
adc
add
jmp
jge
shrl
push
lods
mov
add
push
add
imul
das
sbb
jo
dec
test
dec
mov
jmp
out
jl
mov
or
push
js
jmp
mov
add
push
xor
push
jmp
adc
cmpsb
cltd
or
sbb
mov
push
push
cmp
or
dec
ficoml
into
add
in
rcrb
sub
xor
cli
add
mov
adc
xchg
out
jmp
imul
mov
jmp
and
sub
and
xor
js
push
push
jbe
push
dec
push
adc
inc
push
in
jne
ljmp
sub
xchg
mov
orb
sub
push
push
pop
mov
sbb
jge
inc
cwtl
add
add
shlb
ret
cmpsl
pop
mov
jle
insb
rorb
push
setb
bound
lock
pop
or
das
sarl
jae
cwtl
mov
repnz
pop
xchg
adc
jnp
or
mov
inc
push
jmp
out
leave
pusha
sti
xor
push
xchg
or
test
daa
lds
jno
lcall
loopne
mov
ja
add
pop
xor
fucomip
or
data16
sub
sahf
jg
xchg
jl
loopne
int3
jmp
ret
into
pop
fisubs
jmp
mov
add
dec
int3
sub
adc
cmpsl
mov
shl
sbbb
sub
dec
add
roll
xor
dec
push
cwtl
push
pusha
sub
xchg
sti
scas
jecxz
mov
inc
cmc
push
add
sbb
int3
pop
mov
and
loope
sub
mov
fsubrs
adc
mov
add
sbbl
add
adc
xor
and
cld
pop
xor
aam
bound
lea
mov
push
das
nop
fs
pop
jae
in
pop
daa
mull
push
scas
in
jg
xchg
je
push
imul
mov
or
push
sbb
pop
mov
out
test
das
outsb
or
cmpsl
popl
push
pop
decb
les
pop
je
sti
es
adc
das
shl
test
push
faddl
sbb
adc
jmp
mov
jnp
push
or
xor
push
adc
adc
sbb
add
popf
push
xchg
add
fcoml
jmp
daa
stc
andl
or
sbb
add
scas
dec
or
addr16
mov
lcall
add
cwtl
or
sub
pop
add
add
push
fidivl
push
or
jmp
test
jo
loope
lret
rclb
push
mov
xor
testb
or
sub
push
mov
lahf
psubq
adcl
jmp
popa
rcrb
repnz
sbb
fnstenv
cli
add
and
into
mov
scas
inc
push
push
sarb
and
xor
gs
or
pop
cs
mov
push
xchg
pop
adc
add
jmp
xor
sub
sub
add
inc
rol
stos
sarb
or
jp
dec
outsb
cmc
shr
inc
cmp
inc
or
pop
mov
and
ds
inc
sub
lods
ret
inc
cmp
icebp
dec
mov
jle
call
mov
jo
sti
push
push
or
fwait
dec
cli
outsb
insb
add
out
cmp
add
or
add
fmull
rorw
imul
ss
mov
shlb
push
dec
xor
lods
cmpsl
fimuls
jo
add
in
dec
cmp
shrb
ret
scas
push
outsb
test
mov
mov
xchg
sub
add
push
ficoms
arpl
dec
adc
icebp
jbe
push
dec
pop
repnz
je
mov
pop
inc
shr
pop
insl
mov
sub
mov
sub
mull
je
pop
xchg
shll
jnp
add
frstor
mov
cmp
dec
hlt
sub
pop
add
mov
addb
sub
in
or
hlt
xchg
dec
ret
inc
xor
std
sub
adc
pop
add
pop
inc
loopne
add
cmp
addr16
ret
pop
mov
push
mov
es
xor
inc
insl
orb
and
or
pop
movsb
add
dec
repnz
loope
fldcw
jne
mov
neg
sar
ret
out
imul
push
incb
sbb
pop
ret
add
sub
or
sub
add
sub
push
push
call
mov
lcall
jnp
dec
xchg
sub
cli
adc
jo
sarl
mov
loopne
jmp
jge,pn
insb
pop
fsubl
subb
jbe
adc
dec
stc
and
push
or
jmp
jecxz
inc
add
sbb
xchg
lret
sub
jg
lahf
ljmp
pop
call
idivb
push
mov
das
push
add
std
popa
fstl
pop
add
dec
pop
push
add
adc
mov
mov
push
ss
cmp
cs
dec
xchg
push
lods
test
insl
sbb
daa
rol
aam
mov
leave
stos
mov
addr16
pushf
stos
sti
xor
imul
lcall
pushw
pop
and
mov
add
dec
out
shlb
xchg
aad
leave
scas
push
mov
and
jmp
in
jae,pt
in
push
js,pt
call
cmp
mov
rclb
inc
mov
aad
mov
dec
les
js
xorl
or
mov
push
xor
les
inc
hlt
xchg
fidivrs
test
add
pop
lret
cmp
pop
sub
aaa
add
in
mov
xor
mov
sub
or
jge
shrb
stos
test
mov
mov
ljmp
fdivrs
xchg
mov
sub
jge
in
sbb
sub
outsl
ret
pop
jb
or
sub
pusha
or
or
jno
pop
push
rcll
mov
mov
sbbl
dec
adc
add
cltd
mov
mov
sti
and
jns
ds
and
out
pop
mov
add
outsl
lret
pop
int3
aam
dec
add
ret
xor
cmp
icebp
cmpsl
rolb
sbb
dec
stc
mov
sbb
xchg
push
ljmp
xchg
repnz
mov
xchg
pusha
push
ljmp
dec
push
clc
jecxz
outsl
cmp
into
cmc
scas
fstl
sub
or
cmp
aad
pop
fistps
aam
cmpsl
sub
pushf
movsb
mov
es
add
movaps
sub
push
push
clc
mov
int
cs
and
or
adc
sbb
push
inc
inc
or
inc
sahf
sbb
mov
pop
ret
mov
not
add
subl
sub
xor
lret
jmp
or
dec
push
pop
xchg
jo
add
push
jmp
and
and
incl
sti
dec
or
pop
out
fimuls
enter
pop
and
pop
pop
shl
push
fcoms
lret
fnstsw
dec
pop
ja
dec
mov
add
sub
cmc
sarb
and
mov
xor
mov
rclb
dec
shr
ret
cmovs
dec
fdivs
jmp
mov
xchg
testb
in
push
test
inc
mov
jmp
gs
xchg
cmpsl
jl
cmp
cmp
popa
jbe
fdivs
adcl
into
xor
mov
xlat
cmp
push
inc
sarl
mov
jg
adc
je
test
test
popa
sbb
adcb
lds
jns
sbb
jge
lods
inc
jge
add
sbb
daa
mov
or
xor
add
pop
in
xlat
fdivl
or
add
mov
push
or
dec
icebp
repnz
fsubrp
push
jmp
aas
adc
or
push
test
adc
add
add
push
pop
pop
jbe
lock
pop
push
loopne
sub
rol
dec
enter
aad
mov
imul
and
sbb
add
pop
insb
pushl
jne
in
in
xchg
jne
outsb
repnz
mov
sbb
ret
cmp
dec
inc
add
mov
stc
add
std
pop
test
mov
sub
enter
mov
xor
sbb
push
mov
pop
xchg
call
dec
jne
loope
loope
call
pop
mov
jb
jo
cld
cmc
add
inc
pop
jmp
sbb
adc
push
test
stos
in
cs
push
jle
je
lret
inc
jecxz
sub
ja
or
sbb
jbe
stc
mov
jmp
orl
imul
mov
dec
dec
clc
je
fildll
sahf
negb
add
divl
add
lea
dec
xchg
fcoms
push
rolb
out
sub
jmp
mov
cli
mov
shlb
push
push
push
push
loopne
int3
mov
rcll
add
mov
fists
mov
dec
ss
repnz
enter
push
mov
jmp
call
ret
insb
mov
and
sub
add
mov
gs
loop
adc
push
addr16
data16
dec
inc
xchg
add
mov
sub
fsubrs
push
shrb
daa
push
loope
fisttpll
mov
push
incl
fs
rclb
rorl
push
push
or
insl
pop
push
sbb
test
and
or
inc
lahf
mov
or
jmp
jmp
mov
sub
dec
pop
add
pop
or
add
gs
daa
lock
lods
and
stc
ret
mov
loopne
fdivl
mov
in
out
dec
fimull
push
insb
push
mov
add
cmp
xchg
arpl
das
sbb
pusha
pop
dec
mov
and
jmp
test
mov
sti
js
lds
mov
jmp
add
cmp
push
sbb
jge
or
add
sahf
mov
fwait
push
shl
adcl
das
inc
pusha
xchg
andb
shrb
ficoms
cmp
jp
cltd
pop
ret
xor
and
mov
mov
jp
cmp
push
sti
ljmp
dec
or
sbb
and
mov
push
rcr
rol
pop
and
lock
add
je
fs
int
dec
lock
add
sbb
pop
add
dec
and
pop
imul
add
mov
adc
or
jmp
scas
bound
loope
cwtl
fcoml
add
popa
gs
sub
hlt
add
repnz
jmp
imul
add
les
clc
jl
push
cmp
rcl
movsb
adc
addl
mov
dec
cmp
cmp
and
mov
adc
adc
out
sti
cs
xlat
bound
fadds
mov
xchg
movsl
and
add
in
mov
pop
ret
ss
push
or
movsl
inc
out
dec
mov
data16
xchg
loopne
std
mov
add
gs
popf
adc
pop
sub
inc
add
push
xor
cmp
pop
jp
adc
dec
mov
sbb
test
orl
pop
enter
inc
stos
adc
xchg
xor
mov
sbb
fcoml
aam
mov
mov
lods
jnp
sbb
mov
mov
andb
ljmp
mov
cmp
call
pmaxub
testl
outsl
add
xor
push
jle
pop
shll
jecxz
or
gs
dec
dec
jge
add
jmp
sbb
imul
mov
jne
mov
into
xlat
dec
testb
lock
xchg
int
sub
loop
xchg
xchg
cmpsl
pop
ret
dec
popa
mov
arpl
enter
insb
pop
sub
and
or
push
jmp
add
and
ljmp
es
xchg
test
push
push
mov
jbe
push
dec
dec
ret
loopne
inc
sub
mov
and
in
lret
pop
pop
sub
xor
dec
push
mov
mov
fisttps
add
adc
push
mov
jne
and
xlat
jecxz
jmp
mov
push
rcrl
lret
ret
shll
xor
pop
push
mov
xorb
enter
add
dec
out
roll
fisubrl
adc
repnz
add
pop
mov
jle
lds
xor
inc
add
imul
and
xchg
or
call
push
push
jns
loop
cld
sbb
pop
pushf
jg
lock
pop
adc
out
addb
inc
cmp
aad
jmp
or
mov
out
pop
push
and
jmp
add
shr
popa
inc
pusha
addr16
xchg
testl
add
jl
cs
adcb
xchg
and
and
cld
or
adc
dec
pop
pop
xorb
dec
mov
clc
fldenv
xlat
rclb
lret
jmp
xchg
add
iret
or
jmp
mov
ss
add
xor
cmp
mov
es
push
jno
cmpsb
push
add
sbb
std
xchg
dec
xor
push
jbe
imul
jb
sbb
push
push
pop
fisubs
add
out
aaa
sub
out
in
inc
rolb
or
rcll
xchg
fcmovnbe
popa
mov
ljmp
fildll
xchg
dec
ret
ficomps
dec
or
or
cmp
or
fs
push
jns
shrl
mov
mov
testb
pop
add
cmp
loopne
aaa
dec
sub
adc
dec
lds
scas
sub
mov
cmpb
dec
jl
jb
adc
jmp
out
test
scas
daa
movsl
orb
cmc
xchg
or
cmp
lcall
pop
aam
fiadds
outsb
in
mov
out
mov
and
add
push
arpl
cmp
push
ficoms
pop
push
push
clc
lret
inc
scas
outsl
movsb
out
or
arpl
cmpb
fimuls
cs
aas
add
lods
loope
cmpb
mov
jns
cmpb
repz
add
das
jmp
mov
roll
jb
pop
ret
jmp
rcrl
and
in
or
rorl
mov
xlat
popa
inc
push
push
pop
lds
mov
test
mov
xor
jne
push
fdivrs
imul
dec
cmc
mov
fcoms
push
jne
sub
test
pop
lods
lods
iret
push
inc
push
adc
xor
arpl
dec
xchg
out
and
and
inc
dec
outsb
sarb
dec
insb
mov
dec
xor
push
lret
mov
jecxz
aam
clts
push
xchg
mov
jmp
lret
call
insb
pop
in
leave
lods
sub
js
sub
movsl
orl
movsb
dec
fisubrs
pop
xorb
sub
add
stos
add
xor
sub
dec
icebp
ss
or
aad
sti
xchg
rolb
leave
sbb
add
jge
das
jmp
dec
outsl
push
pop
mov
cmp
mov
mov
pop
mov
jp
out
adc
xor
mov
add
adc
jmp
fmul
mov
or
not
jmp
idivb
mov
push
std
movsl
mov
push
and
dec
pop
add
pop
aam
int3
cmp
aam
sub
jmp
xorb
mov
cmp
inc
imul
mov
jnp
sbb
loope
rorl
push
je
cmp
add
sbb
mov
cs
ds
adcl
test
add
addr16
and
rorl
add
mov
icebp
push
mov
cmp
pop
cs
inc
add
repz
mov
icebp
test
popa
pusha
call
into
mov
fnsave
in
mov
ret
mov
in
mov
mov
shlb
std
pop
sub
xor
orl
arpl
xor
add
insb
jo
mov
divl
push
ret
mov
sub
movsl
repz
dec
ret
cli
popf
inc
push
mov
std
ds
ret
xor
or
inc
sbb
push
rolb
push
or
daa
mov
fldl
fisubrl
vpor
cmp
mov
cmpb
xchg
add
shl
push
mov
or
int
stc
pop
shrl
les
clc
xlat
lds
test
lock
test
loopne
mov
cwtl
and
xor
pop
sub
jmp
sub
mov
xlat
adc
aaa
pop
popf
mov
fimull
mov
inc
pop
jns
mov
mov
push
in
push
sub
cmp
xchg
mov
mov
movsb
or
dec
pop
xor
push
adc
cli
mov
adc
les
add
sub
xchg
xchg
jae
and
jmp
add
loopne
sbb
jmp
stos
psrad
and
popf
rcll
leave
bound
int3
ret
scas
inc
into
pop
es
decl
mov
push
dec
inc
push
pop
imull
loopne
adc
repz
mov
sbb
pop
int3
xor
les
ja
add
leave
push
and
mov
jmp
adcb
adc
lods
push
div
adc
rclb
push
lods
inc
mov
ljmp
mov
pop
adc
mov
push
dec
mov
out
loop
cmpsl
fiadds
xlat
rorb
icebp
lods
sbbl
cmpsb
into
lret
imul
testb
dec
daa
mov
push
pop
jbe
jmp
jmp
cwtl
imul
orb
push
add
movl
or
and
lret
or
or
adc
push
push
pop
push
mov
pop
scas
sub
inc
out
lods
mov
cmp
out
or
std
and
stos
fucomi
and
outsl
mov
inc
pusha
mov
sub
enter
push
lcall
mov
sub
jmp
adc
jmp
es
insl
jmp
pop
xor
push
cld
sbb
add
fidivrs
push
mov
loop
ja
loope
pop
into
adc
or
fwait
cli
inc
inc
or
jmp
hlt
gs
ret
lea
push
dec
out
jae
dec
mov
into
cmc
xor
in
in
mov
ret
pop
lods
add
das
cld
cli
dec
mov
addr16
daa
fiadds
rcrb
xchg
xor
iret
jmp
pop
pop
cmp
clc
add
popa
jmp
push
ret
add
mov
push
icebp
inc
xchg
mov
xchg
das
push
and
shl
cmp
mov
add
jb
inc
add
mov
add
add
lds
hlt
ret
xlat
and
dec
push
into
sub
into
int3
mov
push
fwait
insl
dec
shl
inc
inc
xchg
sahf
dec
push
mov
call
mov
pop
or
test
das
mov
or
fisubl
icebp
enter
push
sub
jbe
scas
or
push
cwtl
cmp
rorb
adc
jb
xchg
test
and
dec
push
lcall
hlt
mov
sub
sbbl
pop
mov
aam
adc
mov
add
inc
jo
jmp
or
adc
mov
shlb
and
daa
sahf
daa
decb
and
stos
roll
add
add
cld
imul
jae
pop
sarb
adc
jae
adc
mov
leave
pop
cmp
or
js
push
push
sbb
gs
or
add
scas
rcrl
jno
pop
xor
cmp
lods
push
jecxz
add
icebp
stc
xor
dec
scas
add
xchg
outsb
add
leave
rolb
popa
xor
add
push
jae
ljmp
dec
mov
pop
jno
imul
pop
mov
fnsave
push
add
pop
xor
push
rcll
imul
hlt
xchg
mov
mov
popa
jmp
fidivs
das
arpl
push
pop
sub
int3
mov
jmp
mov
enter
pop
jmp
add
dec
add
jnp
inc
mov
or
mov
incl
push
stos
mov
add
and
jmp
repz
push
cs
addl
or
sub
mov
cmp
pop
subb
cwtl
mov
fldl
adc
push
mov
and
add
add
icebp
cli
or
test
and
neg
jle
pushw
push
add
sub
adc
push
mov
sbb
xchg
ljmp
sbb
rcrb
inc
mov
stc
mov
pop
mov
xchg
and
mov
jb
jno
stos
icebp
push
xchg
sbb
rorl
outsb
mov
pop
add
and
add
or
push
ljmp
and
sub
mov
scas
lret
jle
push
shl
dec
sub
sub
cmp
je
dec
not
iret
cmc
jg
lcall
mov
dec
adc
lods
pop
or
dec
cs
aaa
inc
rcl
movsb
mov
das
sbb
fnstcw
ret
cmp
daa
xor
xor
push
xor
or
push
and
add
and
ret
pop
pop
add
pop
adc
or
out
sub
adc
movsl
add
pop
pop
imul
cmp
jmp
xchg
cwtl
pop
scas
cmp
lock
cmp
lods
push
arpl
inc
dec
xor
push
pop
dec
dec
movsb
inc
add
nop
mov
daa
inc
daa
insb
add
mov
add
js
test
cwtl
fs
mov
and
enter
outsl
scas
stc
std
mov
aaa
out
and
inc
mov
xchg
cmpl
std
pop
xchg
in
addr16
lret
cmp
jae
repnz
test
inc
push
inc
and
add
add
out
and
mov
enter
lods
inc
xor
in
popa
inc
mov
jmp
or
or
fldenv
adc
loope
outsb
out
jle
addr16
cmpps
gs
fiadds
dec
bound
inc
repz
mov
cmp
inc
shlb
inc
xor
add
mov
out
lock
pop
in
dec
cli
mov
xlat
out
mov
xor
mov
jmp
cmpsl
xlat
mov
adc
xchg
mov
popa
or
sbb
shll
cmpsb
dec
and
inc
cld
sub
mov
inc
or
insl
push
or
or
push
orl
or
insl
in
and
and
push
addb
lock
inc
or
pop
jmp
xor
push
jo
and
adc
push
cmp
testl
pop
jl
pusha
push
push
push
push
jg
pusha
xlat
stc
popa
pop
les
mov
jns
inc
adcl
and
add
ss
add
cmp
fcmovne
pop
jne
mov
hlt
pop
fsubr
fimull
ljmp
test
push
les
out
add
outsb
cmpsb
xor
or
pop
jmp
shrb
jne
popa
imul
dec
pop
ljmp
dec
inc
lret
cltd
pop
mov
pop
sbb
push
xchg
jmp
inc
adc
add
mov
jbe
ja
push
insb
sbb
pop
xor
pop
test
incl
push
aas
cld
inc
rcrb
mov
pushf
push
mov
test
hlt
jl
mov
jg
arpl
sub
dec
push
mov
or
pop
xor
movsl
leave
mov
mov
and
pop
pushf
dec
popa
es
sbb
xor
mul
test
xlat
adc
mov
mov
repnz
into
fbld
xor
pushf
das
das
xlat
push
das
and
mov
push
mov
sub
into
daa
cmp
in
xchg
aam
daa
push
sub
push
push
nop
inc
add
jne
and
in
rorb
xlat
enter
test
mov
mov
inc
jmp
sbb
xor
repz
out
sub
das
push
push
jmp
xor
in
cmp
int
movsl
das
scas
or
in
push
loop
icebp
xorb
add
jno
orb
push
dec
add
cmp
cmc
popa
mov
das
lods
or
jecxz
or
adc
and
xchg
lock
out
sub
push
push
mov
les
loopne
jnp
or
cmp
pop
adc
adc
aad
inc
add
stc
dec
gs
mov
or
and
addr16
push
xor
imul
les
repnz
aam
call
repnz
ret
adc
sbb
stc
sbb
jle
pop
movsb
mov
mov
sub
jge
jmp
movsl
add
adc
dec
mov
je
rorb
cs
mov
adc
jns
rclb
sub
pop
sub
lods
and
cmp
fnstsw
jmp
dec
adc
inc
jecxz
call
jle
addr16
test
loopne
sbb
sub
pop
dec
dec
jae
adc
fiaddl
test
or
xchg
inc
data16
inc
jmp
int
cmp
push
mov
sub
cmp
pushf
xor
dec
jmp
jne
jg
repnz
cli
dec
pop
cmp
sahf
xchg
push
cli
mov
mov
xchg
shll
adc
inc
sub
pop
ds
sbb
loopne
nop
dec
ret
inc
clc
subb
push
enter
pop
scas
int3
mov
pop
orl
push
jmp
jecxz
aam
and
stc
pop
add
mov
lahf
push
push
imul
push
sub
adc
jmp
stos
push
cwtl
cmp
and
inc
mov
aaa
cmp
pop
mov
push
jmp
mov
inc
jl
sbb
test
mov
in
rcrl
rolb
push
daa
mov
rcr
jmp
lds
jg
nop
inc
add
sbb
pop
xlat
xchg
repz
jle
inc
jmp
pusha
cld
testb
dec
lret
in
icebp
or
cmp
rol
push
sbb
jg
dec
push
jo
mov
push
push
jg
or
ja
mov
mov
pop
cmp
aad
aas
outsl
xchg
adc
loop
add
ret
push
shr
mov
push
mov
out
enter
mov
inc
push
mov
push
ret
sbb
xor
xor
outsl
icebp
jbe
shrb
loopne
pop
dec
add
pop
mov
es
mov
in
sub
orb
jne
jecxz
pop
pop
pop
xchg
add
add
xor
add
out
ss
loopne
add
xchg
shr
push
shll
test
pop
neg
add
inc
push
sbb
sbb
sub
mov
and
inc
call
stc
ds
push
jg
fwait
popw
fists
xor
sub
leave
xchg
loope
ljmp
jmp
ja
jnp
xor
cmp
and
dec
jne
mov
inc
push
pop
mov
nop
or
pop
and
repnz
arpl
jg
xchg
adc
jmp
fisttpl
jmp
pop
fistpll
orb
dec
out
fidivrl
dec
sar
xchg
mov
pop
pop
mov
mov
das
jne
push
or
out
add
push
jno
jge
scas
add
dec
sbb
leave
inc
cmp
cmpb
loopne
mov
lahf
cwtl
sub
fidivl
test
or
or
mul
sub
shrl
mov
ja
jge
pop
mov
popa
jmp
add
gs
cmp
outsb
addl
out
out
dec
mov
jmp
xor
mov
pop
dec
pop
lods
mov
pop
in
fnstenv
jmp
push
shll
dec
jle
hlt
insl
adc
dec
not
popf
movsb
arpl
mov
jmp
sub
xor
fadds
stos
push
or
int3
push
xor
push
jae
gs
or
adc
pop
std
add
add
js
add
rorl
cmp
scas
or
add
xchg
lods
cli
fbld
xchg
cmp
shll
add
add
mov
cmp
repnz
xlat
jns
adc
mov
in
adc
jge
mov
inc
xchg
dec
out
cmp
shlb
pusha
outsb
push
in
ret
xchg
mov
rolb
pop
cmp
dec
push
push
ds
aas
pop
cmp
leave
add
dec
mov
and
lds
fdivs
call
sub
xchg
add
andl
xor
xchg
ss
iret
mov
clc
aam
xchg
lock
movsl
decl
loopne
dec
inc
push
cmp
and
or
imul
pop
pusha
rcll
xchg
and
aas
sti
gs
pop
mov
rorb
sahf
add
cmpsb
xor
push
orl
sbb
jge
and
ret
lret
shr
icebp
mov
in
xor
enter
gs
cmp
stos
je
mov
jb
mov
inc
dec
aas
mov
outsl
mov
pop
mov
push
add
push
mov
xor
pop
shrb
addr16
sar
and
push
fsubrl
inc
jg
push
loopne
addb
xor
sub
xor
cmp
cmp
sub
add
sarl
addl
jle
jmp
nop
mov
sti
sbb
xor
ja
cmpsl
mov
push
add
insl
mov
add
cmp
or
sahf
pop
pop
testl
decl
stos
mov
mov
mov
mov
ss
adc
sti
test
pop
cmp
add
jo
cmc
jae
pop
and
push
sub
fsub
xchg
cmp
dec
mov
cmp
negl
dec
out
add
fcom
add
shrl
pop
outsb
inc
testl
xor
xchg
clc
imul
sbb
add
dec
xchg
xorb
jns
add
sti
push
push
cmp
dec
mov
mov
mov
mov
cmpsb
lock
ja
push
faddp
xor
add
push
push
icebp
dec
das
out
bound
popa
mov
add
pop
or
sub
fwait
clc
dec
add
dec
sub
pop
pop
adc
nop
xor
push
xlat
ljmp
fs
addr16
sub
stos
sub
jo
popf
push
mov
addr16
add
dec
jmp
push
dec
push
or
popf
popa
in
mov
or
clc
jmp
mov
sub
push
les
dec
add
das
mov
or
out
add
or
jns
in
es
and
cmp
aad
imul
mov
cmpsl
adc
dec
xchg
fcompl
xor
xchg
and
mov
or
int
cli
mov
sub
psllq
jmp
pop
addr16
adc
sub
pop
mov
fsubrl
pop
pop
inc
psubw
insl
es
jmp
or
mov
cmp
pop
dec
jmp
shll
pop
push
add
jno
add
pop
jmp
cmp
fs
sub
das
cmp
arpl
out
repz
jp
stos
lcall
mov
jmp
outsb
add
push
push
mov
mov
add
inc
or
shr
out
jno
test
in
pushf
pop
imul
add
mov
push
inc
or
jl
pop
and
adc
push
dec
mov
sub
adc
lock
dec
add
ljmp
lock
lcall
pop
push
mov
pop
repz
jmp
push
roll
sub
pushf
cld
and
inc
or
sbb
push
pop
scas
ja
pushf
and
xchg
cmpl
pop
sub
push
and
mov
in
mov
ja
jge
popa
jp
repnz
test
pop
nop
mov
pop
shl
sub
sbb
jmp
ja
push
ljmp
pop
push
and
push
inc
push
pop
repz
add
ss
dec
or
dec
sub
or
mov
pop
push
push
xlat
push
mov
divps
pop
rcll
xor
je
cmpl
sub
stos
cmp
jmp
daa
addb
js
push
sti
popf
stos
push
push
xchg
mov
lds
cs
call
aam
xchg
add
push
mov
sub
nop
mov
jg
mov
int
arpl
push
fsubrl
sti
dec
push
jmp
mov
xchg
pusha
xor
iret
add
lcall
jb
mov
pop
movl
pop
add
ret
xchg
test
pop
sbb
adc
sub
fimull
in
mov
adc
and
dec
jno
loope
sub
shl
inc
mov
lret
rcll
mov
test
je
repnz
cltd
dec
pop
lss
aas
mov
xor
lock
enter
lret
fstpl
push
sub
push
pop
scas
cwtl
mov
pop
aam
sub
or
mov
jmp
add
je
jmp
shll
jge
clc
das
push
js
scas
cs
inc
push
push
ja
call
rclb
xor
loope
repz
mov
mov
add
in
xchg
xor
mov
les
mov
jp
push
les
addb
pop
scas
dec
pop
xchg
insl
cmc
fnstcw
nop
and
fcoml
add
add
out
inc
jp
adc
fists
ss
movsl
adc
dec
out
sahf
das
pop
sub
hlt
fs
xchg
sti
add
jnp
jmp
cmpsb
pop
mov
fs
add
jecxz
cmp
test
mov
cmp
xor
outsl
enter
mov
inc
push
and
mov
push
cld
mov
mov
adc
jne
or
bound
and
cld
rclb
cli
mov
sub
mov
loop
add
daa
ret
pop
inc
xchg
jnp
push
mov
xor
sub
jne
pop
xor
decl
int
add
adc
test
pop
das
push
pop
scas
cmp
aad
pop
stos
imul
jecxz
clc
outsb
push
mov
out
aad
mov
add
sub
sbbb
movsl
push
stos
adc
aam
pop
or
arpl
cltd
add
jl
mov
xor
add
nop
dec
push
sub
sbb
icebp
xchg
and
cmp
loopne
jl
push
add
sub
dec
xor
or
dec
out
dec
pop
shrb
sub
push
mov
sbb
adc
pop
shlb
cld
lahf
test
jns
iretw
xor
adc
mov
movsl
add
btr
rcr
popf
call
cmp
mov
cmp
jmp
dec
jg
pop
dec
fpatan
sub
jmp
mov
jmp
in
and
dec
loope
add
xor
std
int3
pusha
cltd
inc
add
aaa
shrl
push
fs
scas
ffree
xor
push
sbb
arpl
or
push
rcrb
pop
iret
jmp
in
adc
mov
pop
into
pusha
sub
xor
push
mov
sarb
test
jp
movsl
fdivs
stc
pop
xor
icebp
push
or
jno
or
aad
call
std
push
sub
bnd
push
push
pop
inc
movsb
ds
mov
or
xor
repz
cs
inc
push
in
add
add
mov
or
xor
addr16
sbb
and
add
imul
dec
lahf
dec
mov
test
in
mov
push
leave
testl
and
xor
inc
xchg
es
je
loope
mov
pop
push
xchg
leave
popf
iret
pop
xchg
pop
add
clc
lret
je
jb
xchg
aam
or
lods
sub
jge
adc
cmpsl
scas
cmpb
sbb
fisttps
push
push
adc
xchg
pop
pop
lcall
add
xchg
lret
jno
pop
fildl
sub
push
mov
sbb
sub
add
int3
or
clc
push
push
jle
stc
fs
arpl
mov
leave
add
ds
mov
jg
or
sbb
or
adc
inc
push
leave
test
add
jae
pushf
pop
cmp
mov
add
stc
call
xorb
cmpsl
push
addl
and
add
scas
fcmovnbe
mov
ficomps
sub
mov
fisubs
ljmp
mov
js
mov
outsb
push
add
or
fbld
pop
xor
int3
jo
jmp
sub
loop
jmp
jno
mov
add
xchg
dec
adc
mov
out
cmp
test
mov
and
push
adc
fld
lock
testb
xor
pop
push
mov
inc
mov
iret
jns
adc
repnz
call
jl
jl
sbb
clc
push
or
das
int3
add
add
cltd
xlat
pop
pop
jb
pop
repnz
ret
inc
mov
sub
push
adc
jne
psubd
scas
pop
jns
insb
add
cmp
adc
and
pushf
lahf
mov
popa
or
scas
repz
nop
push
lods
outsb
pop
mov
fbld
jbe
cmp
mov
sti
test
addl
add
mov
lods
ljmp
shll
inc
pusha
lret
aaa
mov
pop
lock
pusha
cmovb
in
add
notl
or
mov
testb
xchg
inc
xchg
inc
inc
push
jle
pop
adc
push
xor
sub
ja
jmp
lcall
outsl
jge
add
push
jno
adc
shrb
pop
sub
inc
sbb
mov
xor
jl
cmp
mov
pop
inc
dec
sti
jb
push
loop
ja
es
out
or
rol
jo
pop
pop
jecxz
adc
movsl
pushf
jnp
jo
loope
out
ret
jmp
xor
or
pop
add
xchg
mov
ds
aaa
inc
stos
xchg
ljmp
fptan
insb
jle
dec
roll
inc
lock
mov
add
and
add
mov
pop
sbb
movsb
adc
jno
or
inc
inc
sub
es
test
mov
lods
inc
lcall
cmp
xlat
xorl
dec
repz
lcall
jo
xchg
push
inc
jecxz
adc
pop
push
xchg
push
fsubrp
push
xchg
out
and
lods
mov
lahf
out
push
jmp
aam
icebp
and
sub
sub
jae
rolb
jmp
icebp
sbb
xor
push
ljmp
mov
cs
lock
ja
pop
add
aas
std
mov
movsl
fisttpll
dec
dec
sub
mov
mov
lcall
call
jo
pusha
sbb
int3
into
jmp
mov
mov
adc
jmp
scas
aas
dec
fdiv
or
mov
sbbb
mov
hlt
movl
sbb
or
sub
lcall
fildll
xchg
pop
mov
pop
jle
add
inc
jge
jge
mov
bound
imul
mov
daa
push
push
or
jecxz
push
cmp
jmp
mov
mov
out
movsl
enter
add
sub
add
sub
push
inc
or
pop
push
mov
push
push
cld
out
mov
sub
or
inc
mov
nop
pop
push
filds
fcompl
cmp
cmp
in
lods
testl
in
dec
mov
mov
jae
xor
data16
js,pn
pop
inc
cmp
lock
mov
fsubl
rep
loope
cmpsl
sbb
push
push
xchg
and
pop
pop
cmp
testb
pop
jl
sub
test
jno
mov
aaa
inc
loop
pop
roll
xchg
or
out
aas
inc
enter
imulb
or
push
mov
fs
leave
push
shlb
xchg
jmp
je
adc
push
add
push
adc
orb
out
and
scas
int
xor
sbb
mov
aad
in
mov
add
add
push
rorb
pusha
les
cli
rolb
mov
and
sub
push
mov
flds
call
push
mov
push
sarl
jnp
push
nop
pop
ja
adc
sub
push
mov
xchg
add
jg
xchg
push
push
xor
call
push
sbb
or
rol
das
sti
pop
jbe
shr
and
jnp
mov
cwtl
rol
out
adcl
add
mov
cmp
jno
pusha
dec
push
push
xchg
test
dec
xor
or
and
mov
sub
mov
add
jp
fmull
popf
sbb
xor
add
gs
scas
add
xchg
divl
es
sahf
add
in
or
imul
shr
pop
jge,pt
out
push
sub
scas
fnstsw
or
pop
push
je
pusha
lret
sti
jge
cmp
pop
push
inc
xor
cmp
xor
in
pushf
dec
in
mov
fwait
push
std
rclb
out
outsb
mov
mov
jmp
push
pop
dec
pop
sub
add
orl
and
outsb
pusha
jmp
pop
repz
dec
sbb
dec
and
daa
and
add
mov
sub
movsb
or
scas
or
testb
sbb
xchg
add
cmp
add
out
lahf
in
sti
xor
repz
xchg
sub
loopne
sbbb
test
and
sub
add
push
push
dec
jmp
rolb
mov
jno
cmp
mov
push
aad
mov
data16
leave
es
mov
out
lret
xor
cmpb
push
pop
add
sbbl
or
test
ret
flds
sub
adc
pusha
and
push
sub
or
fstpt
popf
repnz
imul
jg
incb
out
dec
sbb
adc
iret
and
add
out
mov
shll
ja
cmp
in
arpl
mov
xchg
jg
jl
xchg
out
imul
outsl
mov
mov
test
lahf
dec
mov
testb
adc
std
int3
sbb
mov
or
lods
dec
scas
push
mov
sbb
mov
cmp
lahf
in
adc
mov
add
pop
push
sbb
fidivl
push
jne
in
or
cmpsl
outsl
inc
ret
fs
cwtl
icebp
or
add
push
and
nop
out
xchg
add
sub
lahf
fsubs
add
ljmp
popa
adc
loop
add
and
dec
loop
fnstenv
test
lret
cmp
jmp
cmc
mov
jg
pop
or
je
sub
push
lcall
adc
mov
mov
and
adc
idivl
adc
lods
fdivp
scas
arpl
sub
sub
cmp
dec
sub
mov
ret
dec
pop
mov
xor
pop
out
xchg
or
push
add
pop
mov
dec
fldl
push
pop
mov
jg
aam
xlat
xchg
cmc
adc
mov
lock
les
jmp
out
dec
popf
jbe
push
dec
add
stos
adc
cmpsl
into
add
mov
jnp
mov
loop
mov
pop
jae
pusha
jecxz,pt
push
js
sub
pop
push
pop
out
outsl
add
ret
push
dec
ja
or
xor
mov
pminsw
push
movsb
popf
push
adc
push
add
jne
jmp
test
pop
mov
lea
sub
test
inc
pop
add
xor
jne
pop
movsl
ja
xchg
jae
test
je
xor
dec
fldcw
lret
test
into
mov
push
repz
pop
xor
sahf
gs
push
xchg
mov
je
movsl
push
xor
pop
xor
add
and
dec
test
jne
lods
into
adc
loop
adc
mov
push
packuswb
add
test
es
jp
out
dec
sbb
lds
or
jmp
or
ret
ret
sbb
shll
cmp
cmp
jg
sbb
fmull
add
push
loope
xor
addr16
sbb
pop
repz
pop
repnz
or
jge
cmp
push
jmp
inc
mov
int
stos
push
push
cli
dec
out
sub
pop
setbe
xchg
bound
and
test
or
mov
pusha
in
or
mov
adc
mov
mov
stos
cmp
shll
push
and
pop
xchg
rol
bound
mov
mov
scas
aaa
lcall
mov
mov
push
adc
mov
adc
lods
ljmp
add
pop
cmp
or
mov
cwtl
fiadds
pop
jae
add
add
inc
inc
test
cmp
add
adc
call
jecxz
jle
inc
sub
cmc
mov
add
cmpsl
fcmovb
iret
shrl
das
push
lock
dec
adc
hlt
mov
dec
sti
outsb
dec
addr16
jb
mov
mov
clc
mov
jmp
nop
xchg
adc
add
arpl
and
mov
fiadds
mov
adcb
shl
scas
movsl
insb
mov
pop
aas
mov
lds
push
push
pop
jnp
dec
mov
jno
mov
push
negl
cmp
dec
lods
cmc
and
add
xorl
sub
xchg
pop
or
out
popa
jnp
and
pop
push
pop
inc
clc
lret
dec
jle
ds
lahf
and
test
adc
xor
xor
add
fwait
aas
adcl
pop
bound
movl
mov
push
cmpb
nop
ficompl
orl
stos
xor
sub
lret
imul
insb
add
cmc
ret
fstpl
rorl
add
sbb
add
cltd
es
adc
ljmp
mov
add
jge
and
leave
pop
clc
xor
test
pushf
dec
orb
pop
mov
xor
invd
pop
in
adc
add
scas
mov
inc
sub
mov
stos
jl
jo
sub
xchg
pop
jmp
rolb
inc
call
or
insb
push
in
jnp
fwait
xchg
sahf
stos
insb
sahf
sbb
movsl
pop
push
into
test
es
das
out
sub
and
add
sub
lds
mov
or
out
push
aaa
lds
jmp
inc
push
xchg
mov
dec
or
mov
mov
or
push
mov
out
or
stos
sbb
inc
mov
call
jmp
sbb
xchg
inc
add
das
pop
cmp
popa
jmp
sub
stc
xor
sbb
out
stc
adc
sub
sub
jne
je
in
dec
jo
inc
jne
testb
int3
ret
mov
xor
pop
div
cmp
mov
out
sub
sub
adc
bt
movsb
add
sub
sbbb
push
pop
cmp
mov
xor
negl
xor
stc
sub
inc
push
nop
lret
add
lds
loopne
pop
cmp
and
loop
pop
or
fiaddl
jmp
lret
call
jmp
xor
dec
shl
pop
sub
add
jno
push
fdivrl
and
cmp
cli
jmp
imul
xchg
std
and
or
daa
sarb
or
pop
call
test
adc
push
call
das
pop
outsl
pushf
dec
add
mov
fwait
push
push
pop
fildl
scas
adc
add
jmp
xor
fwait
mov
mov
or
rcrl
outsl
enter
xor
imul
shll
jle
ds
ja
add
out
add
xchg
fadds
pop
dec
xchg
push
pop
mov
es
or
and
cmpsb
xchg
adc
stos
sub
and
pop
xchg
jno
js
pushf
arpl
mov
or
insb
addr16
inc
cmp
dec
mov
pop
bound
adc
pop
or
jecxz
or
dec
jne
inc
test
push
ja
jl
pop
dec
pop
in
sbb
xchg
adc
mov
mov
mov
ljmp
mov
cld
xor
out
jge
lds
cmc
pop
neg
push
push
aas
mov
test
jle
lret
test
mov
jg
push
or
and
nop
cmp
jns
sbb
mov
ja
stos
jl
jp
pop
dec
cli
fiadds
mov
mov
inc
cmp
out
xor
dec
repnz
dec
add
lods
stc
lahf
test
mov
mulb
std
add
int3
cmc
jg
popf
lds
adc
leave
pop
mov
mov
add
jno
lcall
lret
iret
sbb
cmp
dec
icebp
bound
mov
clc
pop
xor
fs
sbb
add
mov
lret
sar
dec
mov
push
fmull
xchg
cli
shlb
add
or
fsubs
orb
and
mov
jmp
mov
shll
push
fnstenv
pop
lret
and
ja
xchg
mov
cli
xchg
xlat
pop
push
cmp
cmp
cmp
cmp
dec
stos
imul
jl
out
or
inc
aas
mov
mov
cmp
sub
imul
idivl
xlat
rcll
jns
cmpsl
fcmovnb
lods
pop
push
push
jne
repnz
into
push
adcb
sbb
push
mov
fcomps
leave
cmp
xchg
or
ja
daa
cmpsl
jne
push
inc
aaa
and
decl
push
aas
and
outsb
lret
add
and
adc
loopne
mov
adc
imul
cs
das
stc
jecxz
loopne
pop
adc
xchg
ja
xor
jmp
outsl
dec
andb
xchg
add
test
push
fldenv
fidivrl
pop
dec
jmp
divl
lret
data16
bound
sbb
stc
jmp
mov
mov
int
loop
bnd
pop
inc
or
jne
sub
fimuls
cmp
cmp
push
and
iret
add
jno
fcoml
loope
jae
mov
test
pop
push
pusha
jno
in
xchg
ds
adc
or
sbb
cmpsl
xor
jo
flds
repnz
push
imul
mov
push
popf
add
dec
sti
pop
add
in
inc
jl
mov
jmp
or
pusha
lods
loope
call
pop
cmp
xor
sbb
daa
fldcw
test
mov
sub
ds
add
jae
and
out
imul
add
pusha
ffree
les
push
mov
imul
push
mov
inc
movsl
pop
add
jmp
mov
call
mov
push
pop
pop
pop
push
int
outsb
cmp
push
popf
pop
jns
jecxz
subb
sub
add
xor
inc
adc
sbb
stc
movb
push
mov
jo
jle
sub
inc
sub
or
pop
sub
and
pop
jne
mov
cwtl
das
sub
into
pop
imul
xchg
lret
and
push
push
xchg
fildl
jnp
scas
sub
dec
aad
jp
pusha
call
or
pop
inc
jmp
cmp
mov
in
mov
mov
xchg
jmp
cld
jg
push
jmp
pop
mov
jl
out
inc
and
pop
mov
fstl
pop
dec
idivb
mov
sub
add
dec
ficoms
mov
xor
adc
rorl
push
push
mov
push
fcomp
idivb
ficompl
ret
mov
arpl
iret
shlb
mov
repz
in
dec
stc
pop
outsb
xchg
xchg
xlat
ds
mov
daa
pop
pop
push
pop
cs
sub
fwait
jne
aaa
push
jmp
push
clc
ja
or
and
mov
sbb
fcomps
fdivrs
sbb
add
or
jns
cmpsb
sub
jmp
clc
push
adc
lcall
test
sub
fsubs
mov
das
inc
inc
loopne
xor
aad
adc
or
or
or
lcall
or
bound
addb
push
andb
sub
or
stos
adc
mov
ds
movsb
inc
or
or
fistps
xor
adc
jno
add
xor
and
or
push
jnp
sbb
lock
cmp
int
loopne
sahf
icebp
out
pop
leave
push
mov
jne
loopne
and
movsb
xorl
xchg
arpl
test
sbb
call
pop
inc
mov
push
dec
or
pop
adc
loop
jp
hlt
push
pop
out
pusha
lods
push
call
add
test
out
inc
adc
or
push
inc
lret
sbb
pop
sbb
cmp
fildl
lret
mov
mov
or
divl
inc
jbe
dec
daa
hlt
ret
sub
cltd
jmp
sub
shrl
pop
int
inc
xchg
pop
xchg
fsubs
roll
push
add
pusha
push
jge
jb
outsl
rolb
jmp
ds
mov
cmpsb
cmp
push
pop
pop
or
out
mov
xor
fsubrs
sub
adc
fisttps
shr
dec
xor
mov
scas
ss
scas
adc
jge
test
mov
ja
mov
lahf
xchg
stos
test
sti
loop
hlt
mov
dec
data16
sbb
ret
sub
dec
mov
sub
nop
aaa
nop
push
xor
or
pop
adc
adc
inc
pop
aam
xchg
and
xchg
addl
adc
jmp
add
outsl
out
add
aad
mov
cmp
loopne
shl
aam
pop
mov
cs
mov
cmp
jmp
pop
mov
es
or
add
add
push
aam
enter
rolb
std
adc
push
scas
fsubs
push
cwtl
pop
dec
sub
adc
push
cmp
or
xor
and
pop
sub
cmpsl
and
int3
ret
addl
shll
jmp
push
inc
jmp
fistl
cmp
push
cltd
push
rol
push
or
adc
mov
cmp
add
pop
add
or
loop
mov
xchg
and
or
add
insb
sbbb
pop
jecxz
stos
cmpsl
pop
cmpsl
lahf
and
fs
pop
sbb
adc
filds
xchg
cmp
ficomps
jbe
xor
and
pusha
cmp
shll
dec
push
mov
arpl
or
pop
dec
or
or
mul
jmp
pop
push
adc
adcb
mov
pushf
movsb
pusha
push
push
adc
fwait
lods
inc
jg
mov
adc
mov
cwtl
std
pop
cld
aad
push
insb
and
rep
push
mov
mov
pop
icebp
movsb
addr16
gs
test
stos
int
cmp
lahf
mov
push
xlat
xchg
lds
push
cmp
xor
inc
jecxz
int
sbb
cmc
dec
push
ficomps
orb
sbb
pop
or
mov
std
adc
mov
jge
dec
xor
adc
sub
aas
jmp
sti
popa
jmp
data16
cld
mov
add
sub
sbb
cmpsl
inc
sbb
push
jae
pop
or
out
les
clc
nop
icebp
cmp
push
inc
subb
dec
add
add
cmpb
jle
jb
in
mov
and
mov
je
lods
sub
jecxz
sahf
sub
loop
ljmp
push
addr16
mov
stos
jge
xor
xchg
dec
mov
call
js
adc
cmpsb
mov
cmp
fsubp
out
out
pushf
addr16
inc
fwait
dec
pop
cld
insb
adc
daa
pop
cmp
xorb
xchg
push
dec
xchg
push
clc
mov
pop
xchg
repnz
divps
add
fs
pop
std
loop
pusha
and
int
loope
data16
xchg
pop
aam
and
add
push
jmp
add
in
push
xlat
mov
xchg
pop
cmp
call
dec
jnp,pn
dec
pextrw
sbbb
sub
xchg
dec
jns
loope
add
pop
jmp
pop
shl
push
fdivl
cld
add
test
pop
jmp
fnstenv
jg
mov
out
hlt
outsl
xchg
pop
adc
neg
decl
pop
add
jmp
and
in
push
add
push
add
call
in
add
outsl
pop
adc
jg
enter
int3
shlb
adc
loopne
push
shl
ret
ljmp
add
and
in
icebp
mov
xchg
std
sbb
loopne
mov
outsl
sub
pop
aas
inc
adc
adc
scas
mov
jge
lret
inc
bound
cmp
mov
xor
sbb
ret
cmp
lret
shr
inc
inc
jmp
and
iret
cmp
loope
jbe
cmp
or
push
daa
jb
fs
xchg
xchg
sub
and
and
repnz
xchg
shrl
add
push
adc
jmp
mov
push
cmp
inc
mov
pop
add
outsb
test
test
in
in
hlt
xchg
jg
push
add
mov
insl
loop
add
add
clc
jge
xchg
xchg
and
sub
mov
adc
jae
and
nop
add
popf
test
pop
sub
mov
ret
add
stos
test
pop
mov
or
jl
ficomps
das
inc
jb
mov
loop
clc
xchg
add
stc
dec
test
in
mov
cmc
dec
ss
fs
pop
or
and
dec
cmp
xchg
rorl
addl
add
and
pop
pop
cmp
push
xchg
xor
and
sub
mov
subb
dec
movsb
aam
xchg
and
or
rclb
mov
sarl
jbe
aas
repz
adcb
sahf
cmp
sti
test
pop
jmp
or
inc
inc
test
sbb
mov
out
xchg
inc
std
shrl
lock
push
fiadds
add
jb
in
mov
mov
mov
xchg
jp
js
adc
push
sub
jb
add
repz
inc
hlt
mov
fldt
cmp
inc
adcb
popa
push
vxorps
cmp
out
xchg
push
pop
dec
in
dec
adc
mov
pushf
pusha
or
cld
push
mov
xor
or
adc
cmc
ret
stc
add
shll
dec
push
shr
je
and
cmp
pop
add
dec
jo
jne
data16
xor
out
jg
test
mov
jmp
pop
inc
and
dec
mov
push
dec
scas
lea
in
outsb
adc
push
pop
push
imul
xor
sbb
out
pop
jg
gs
scas
dec
mov
imul
jg
push
fmuls
push
enter
pop
aas
js
out
stos
xchg
dec
push
cmp
push
pop
push
mov
cmp
add
sub
pop
pop
pushfw
lds
lods
add
lds
repnz
out
add
scas
xchg
xchg
rcrl
test
jmp
adcb
lcall
movsl
loopne
loope
out
push
inc
daa
push
push
cmpsb
popf
or
data16
jecxz
incl
mov
shr
loope
jne
mov
push
xor
xor
inc
sub
push
jg
fsubrp
dec
pop
scas
push
sbb
fiadds
mov
inc
sbb
lret
jne
mov
pop
jg
sub
sbbb
adc
lds
cld
jo
xor
dec
aam
fs
xor
fiaddl
mov
mov
jo,pt
dec
mov
pop
das
add
pop
fwait
or
add
sub
inc
adc
inc
pop
inc
cld
sub
jne
or
dec
daa
cld
sbb
test
dec
lret
push
sar
imul
push
jmp
mov
push
jg
cmpl
add
or
pusha
inc
sub
adc
cli
pop
movsl
push
pop
xor
dec
or
xchg
or
sub
rcr
cmp
push
mov
mov
xchg
xor
inc
jle
pop
test
iret
dec
xchg
push
lock
mov
dec
movsb
or
inc
jno
rol
cmp
and
push
sub
adc
or
jmp
and
or
rsqrtps
adc
inc
jmp
call
lcall
push
aas
adc
dec
add
add
sub
mov
pop
jmp
cmp
or
or
add
mov
call
cmc
jmp
and
shrb
sbb
divb
sbb
jl
pop
and
add
add
fsubrs
arpl
shlb
loope
and
push
in
push
xchg
add
jmp
sarl
cmp
push
xchg
push
lea
cld
shr
jecxz
outsb
pop
ljmp
orb
dec
stc
sbb
adc
cs
nop
mov
fldl
dec
add
cmc
and
in
pop
push
imul
add
pop
neg
add
jle
hlt
clc
sbb
push
jmp
outsb
and
adc
popfw
add
int3
gs
jb
fcoms
inc
jmp
clc
sbb
push
out
xchg
fistpll
add
fmull
mov
or
pop
push
daa
jg
mov
push
sub
cmp
ljmp
or
pusha
rcr
add
fldcw
jmp
or
stos
lods
es
or
push
sub
in
push
or
fucom
adc
lahf
pop
jo
cmp
inc
sub
test
fiadds
or
jmp
push
adc
push
push
or
push
jp
mov
or
and
mov
push
dec
not
adc
imul
jbe
sarb
mov
test
shll
rcrb
decb
or
cld
incl
sti
sbb
adc
je
rcrl
jbe
inc
or
cs
dec
jmp
jno
push
hlt
pop
xor
lcall
mov
add
and
mov
in
push
sub
imul
sbb
ficompl
cmpsb
stos
sub
mov
add
push
lock
or
lods
lods
xchg
jb
in
mov
or
xor
sub
aam
jg
add
xor
add
add
pop
push
test
xchg
sbb
mov
nop
mov
inc
jmp
push
add
sub
mov
lret
and
jnp
xor
push
mov
xchg
stos
pusha
lahf
push
jmp
sub
sbbb
add
add
xor
cmp
xchg
push
sub
xchg
out
adc
pop
rol
jmp
add
addl
push
mov
xchg
xchg
sub
pop
pop
pop
push
outsb
rorl
int
imul
xor
mov
or
push
je
and
gs
movzwl
push
push
les
mov
push
leave
fnsave
mov
pop
loopne
rol
sub
rcr
mov
jno
lret
les
loop
fisttps
jle
jb
mov
mov
nop
std
scas
xchg
mov
lock
add
scas
pop
xchg
popf
jns
dec
mov
jb
adc
sub
or
inc
je
hlt
out
mov
add
xor
mull
or
jle
divb
mov
cmp
jp
or
jns
and
sbb
xchg
out
push
mov
push
adc
sub
lcall
lret
ja
call
fisttpll
popf
rorl
ja
mov
mov
cltd
dec
push
mov
movsb
into
pop
in
push
fcompl
and
movsb
scas
jns
icebp
out
fmuls
dec
xchg
lds
pop
xchg
adc
cmpsb
push
ljmp
adc
mov
sub
mov
movsb
mov
data16
cmc
xor
and
push
push
mov
movsl
loopne
xor
mov
push
mov
mov
adc
xchg
mov
xchg
add
push
imul
imul
bound
add
jge
stos
ja
jnp
jmp
jmp
jbe
repnz
loope
cwtl
sub
pop
xor
push
pop
or
pop
out
lock
mov
shr
mov
rclb
pop
xchg
dec
sti
inc
jbe
mov
jb
pop
div
adc
lock
dec
pop
push
dec
es
pop
xchg
imul
push
pop
dec
push
out
jb
aad
and
or
jmp
pop
test
pop
mov
sbb
pop
add
fstps
fs
push
rcl
or
popa
insb
fimuls
outsl
mov
pop
xchg
in
mov
jns
js
mov
rolb
and
mov
into
inc
add
pop
add
popf
inc
jmp
movsl
add
notb
sti
inc
imul
gs
sarb
movsl
sub
rclb
add
push
push
dec
push
dec
cltd
mov
fstpl
dec
and
and
notl
pop
loop
jnp
inc
test
mov
clc
xchg
pop
sti
popa
jecxz
sub
iret
push
mov
or
leave
das
in
inc
sub
add
and
movsl
nop
das
pushf
jmp
add
std
pusha
neg
push
mov
xor
in
lock
push
pop
jmp
sub
inc
popf
cs
inc
cmc
push
sub
shr
and
mov
dec
outsl
nop
cmp
je
sub
and
out
jae
mov
pop
and
pop
shlb
sbb
xor
push
sub
pop
dec
rolb
push
jb
cwtl
es
fsubrp
and
scas
lret
insl
dec
fadd
or
jmp
push
add
out
or
inc
js
sarb
inc
dec
hlt
cmp
xchg
outsl
dec
dec
std
je
es
pop
and
out
aas
movsl
inc
cmpsl
or
dec
scas
jae
das
lds
dec
mov
xchg
or
pop
xchg
dec
das
cmp
inc
sbb
daa
adc
fdivl
cmp
or
out
aad
sub
roll
sti
addl
int
mov
adc
xor
pop
bound
jp
cmp
fcoms
mov
adc
movaps
aas
lret
xlat
lods
dec
mov
xor
rolb
sahf
add
rorl
fildll
and
and
cli
push
xchg
test
jne
stos
and
or
fists
mov
xchg
or
jmp
inc
or
wrmsr
shr
add
mov
imul
sub
push
repnz
dec
cs
mov
xchg
not
or
dec
addr16
add
push
mov
inc
add
lods
scas
adc
jmp
std
sub
xor
cmp
pop
mov
jle
push
cmpl
clc
xor
xlat
jae
gs
jmp
test
adc
testb
push
sub
lret
decb
shlb
push
sub
adc
dec
mov
stos
lods
inc
mov
lock
lock
negl
fcoms
aaa
outsl
imul
out
cmc
mov
xor
jge
adc
adc
std
xor
push
testb
jnp
push
mov
jnp
jae
add
xor
loope
push
mov
imulb
cwtl
sti
push
cmp
and
jne
daa
pop
push
or
push
mov
jns
test
push
and
xor
sub
and
stos
stc
adc
cltd
shlb
stos
pushf
cmp
sub
add
dec
addb
outsl
fstpl
stc
pop
xor
in
pop
push
add
scas
push
sbb
and
ret
or
loopne
shll
dec
imul
lcall
dec
push
sbb
dec
push
ljmp
xor
jecxz
testl
mov
shl
aam
pusha
mov
and
sbb
adc
and
add
lds
shll
inc
adcb
cli
dec
jecxz
push
aam
mov
es
push
inc
cwtl
and
mov
stc
ss
or
xor
push
adc
ds
mov
sbb
repz
sub
fstpl
sub
dec
pop
scas
mov
xchg
mov
sbbb
sahf
leave
scas
ljmp
pusha
sub
pop
das
in
dec
dec
out
js
dec
inc
cld
dec
or
pop
or
sahf
cmc
xchg
mov
or
xlat
jg
jge
xor
je
test
pop
mov
push
mov
mov
out
aam
jno
or
or
insl
cmp
mov
mov
dec
das
loope
sub
lret
loop
js
fwait
into
imul
xor
in
adc
mov
rolb
dec
rcrb
xor
mov
cmpsb
and
inc
dec
mov
jmp
les
jne
push
xor
cmp
mov
cld
sbb
js
or
aam
outsb
or
and
sub
in
mov
xlat
mov
ret
add
sarl
jae
cmp
ret
mov
mov
dec
cld
jbe
rcrb
sbb
or
mov
jmp
decb
inc
jle
pop
jg
mov
xor
popa
lods
push
sbb
lret
xchg
pop
cld
in
dec
andl
lahf
sbb
fisttps
into
cwtl
xlat
in
repz
scas
loopne
adc
xlat
ljmp
and
les
sub
loope
jp
xchg
aaa
stos
push
or
cltd
cmp
mov
push
xlat
mov
pop
inc
jmp
scas
jns
pusha
pop
mov
sbb
jge
dec
dec
jne
das
jae
xchg
adc
lahf
sbb
push
sub
mov
js
jmp
pushf
pop
jg
pop
js
xchg
push
add
lea
clc
cmp
xchg
push
push
or
push
xor
sbb
movsl
loope
ja
pop
push
addr16
pop
leave
or
inc
cmp
and
mov
test
or
lcall
pop
push
shll
lods
mov
jmp
pop
lahf
rcr
push
and
adc
adc
pop
jnp
rclb
sub
and
jb
sbb
xor
xchg
cmpsb
pop
pop
pop
testb
or
mov
jnp
lds
sub
adc
not
bound
cmp
push
movsl
mov
in
pop
pop
sbb
movl
enter
ret
inc
cmp
stc
jge
xorb
adc
sahf
inc
or
push
cli
les
andb
movsl
push
aam
mov
jne
test
sub
or
popa
jo
sahf
sub
sarb
into
stc
mov
mov
jne
adcl
dec
push
pop
in
shl
dec
sub
daa
jmp
lahf
xorb
inc
pop
push
imul
jmp
repnz
adc
aam
or
rolb
push
xchg
xchg
pop
adc
fadd
ret
jae
stos
pop
xor
sbb
add
pushw
jmp
loope
ds
mov
jmp
stc
aad
push
insb
sarb
add
mov
inc
inc
jnp
cmp
cmpsb
cmp
pushf
jns
pop
fsubl
pop
pop
push
inc
push
arpl
out
out
in
stos
cmp
sbbb
loop
je
and
cmp
aad
enter
es
icebp
lds
shr
aam
inc
push
push
push
jmp
out
jle
mulb
adc
pop
dec
cmp
cmpb
int3
adc
jno
loopne
fstpl
nop
jo
push
ja
and
insb
mov
sbb
out
dec
push
push
adc
sub
fs
xor
push
pop
mov
addr16
mov
add
dec
push
push
mov
xorb
out
out
shl
push
jnp
cmpb
xlat
pushf
jmp
mov
or
xchg
add
sbb
jl
and
mov
pop
dec
mov
and
and
xor
mov
lds
lret
adc
imul
jns
bsr
in
or
mov
mov
daa
inc
inc
filds
stos
ret
imul
add
and
xlat
movsl
or
or
dec
repnz
aas
mov
std
inc
fidivrs
push
out
mov
inc
jae
add
and
jmp
mov
leave
mov
and
imul
mov
int3
es
inc
jb
inc
jnp
jg
add
add
insl
push
or
sbb
in
lret
out
push
mov
dec
test
cmp
jle
push
je
pop
and
jns
push
or
adc
fcoms
cld
test
push
jbe
jp
xlat
outsb
outsb
mov
cmp
or
mull
sub
mull
subl
and
inc
imul
add
aaa
not
flds
jmp
scas
add
add
fimuls
subl
repnz
faddp
bound
pop
repz
lock
cld
push
adc
into
push
pop
jle
push
shl
dec
dec
xor
neg
add
adc
push
outsb
jbe
push
push
inc
xchg
pop
dec
push
mov
push
sub
cltd
sub
add
push
push
push
push
mov
incb
sub
mov
pop
xor
cmp
sbb
cli
xchg
out
mov
xchg
sub
mov
and
lock
push
push
or
ja
rorl
rcl
mov
dec
pop
stc
push
mov
add
cmc
dec
shr
add
dec
aas
xor
testl
mov
pop
sbb
inc
inc
icebp
and
jmp
and
scas
bound
andb
jo
xor
jmp
pop
pop
loope
inc
or
xchg
sub
std
daa
pop
and
sub
leave
push
and
jne
imul
xor
xchg
mov
div
add
clc
in
pusha
inc
xchg
shl
push
xor
push
and
adc
ljmp
inc
rorl
add
jae
das
in
test
cmp
xchg
cwtl
inc
push
sub
sub
add
pop
mov
pop
pop
imul
pop
cld
pop
add
adc
jecxz
push
and
imull
decb
pop
mov
inc
jmp
ss
jg
icebp
dec
ds
mov
add
lods
jmp
mov
ret
ret
and
mov
cs
pop
push
call
add
and
jbe
jae
cmp
or
not
or
xor
into
and
int
push
jmp
mov
add
add
inc
in
pop
dec
test
testb
mov
push
data16
mov
es
xor
jmp
cld
mov
subl
shrl
js
insb
sti
jne
xchg
pop
push
xchg
popl
inc
mov
dec
fs
int3
mov
push
mov
inc
subb
or
jmp
xchg
pop
add
mov
push
inc
filds
add
inc
mov
orb
or
push
cmp
cwtl
adc
or
in
repz
cmpl
inc
add
sahf
neg
loope
les
cmp
push
or
icebp
enter
sub
dec
fimuls
push
mov
jg
mov
or
in
push
loopne
xchg
bnd
add
push
mov
cmc
push
cltd
mov
xor
xorl
dec
or
dec
pop
jecxz
addb
mov
inc
sbb
icebp
repnz
sti
andb
push
mov
test
push
out
call
clc
inc
ljmp
pop
sub
pusha
shrl
inc
cltd
jp
mov
pop
add
jmp
push
fwait
cmpsl
aas
and
jb
lret
inc
repnz
ftst
ret
jns
testl
aad
push
movsl
fnsave
xlat
lahf
xor
xchg
push
pop
mov
gs
inc
push
xchg
pop
stos
mov
or
pop
or
sti
xchg
bound
or
xchg
jae
sub
pop
clc
add
js
push
idiv
mov
jmp
loope
mov
sbb
imul
test
outsb
pop
cli
das
pop
idivb
and
hlt
sbb
nop
add
add
icebp
gs
add
xchg
sti
mov
cltd
sarl
pop
xor
add
mov
les
out
dec
pop
lods
fwait
mov
and
int3
lahf
pop
ds
movsl
rorl
frstor
stos
pop
sub
pop
mov
jmp
sub
test
dec
bnd
add
imul
in
xor
std
sub
inc
cmp
insb
arpl
lret
sbb
or
adc
les
in
ja
inc
xchg
inc
ljmp
inc
adc
add
stos
ret
insb
add
movswl
pop
sbb
cwtl
mov
sub
push
add
jle,pt
ret
or
and
out
adc
shrb
test
jnp
or
stos
push
add
mov
pop
and
lea
push
std
dec
and
bound
sbb
jmp
das
xlat
and
sbb
cwtl
inc
inc
pop
dec
std
scas
add
jmp
test
and
pop
add
lret
fiadds
in
es
mov
push
inc
test
addr16
std
cmpsl
xchg
loopne
bound
clc
push
add
mov
jmp
adc
lock
insl
push
andb
adc
stc
popl
sub
add
adc
lock
mov
push
cmp
jnp
das
cmp
fmuls
std
mov
jbe
je
or
cmc
fisttpll
fbld
daa
pop
or
adc
sbb
fdivs
push
fld
je
shll
mov
pop
push
or
shrb
jo
mov
dec
mov
data16
mov
pop
sub
xor
lahf
je
inc
jmp
cmp
inc
and
push
jne
and
fldcw
xor
adc
pop
cli
push
pop
ds
sbb
xchg
pop
or
sub
out
into
jb
push
nop
jno
jmp
cli
mov
add
sub
sbb
jnp
dec
jo
xor
and
int3
por
mov
fistpl
in
test
mov
mov
jg
jb
push
adc
lock
mov
or
shr
or
xchg
sbb
mov
movsb
fmuls
and
jbe
xor
repnz
cs
ja
scas
lret
stos
pop
repz
mov
loopne
ljmp
push
add
adc
mov
add
sbb
sbb
rcrl
xchg
ja
stos
pop
nop
into
dec
mov
mov
pop
pop
iret
dec
adc
mov
jbe
pop
sub
clc
or
in
or
jbe
xor
push
mov
clc
push
xor
pop
mov
and
xorb
adc
ret
mov
jmp
addr16
mov
add
mov
cli
push
dec
orb
outsl
add
outsl
cmovbe
aaa
fs
pop
push
and
sbb
outsb
inc
pop
jg
rep
sbb
lea
leave
pop
push
cmp
sub
xor
jmp
inc
mov
clc
push
push
inc
add
test
cmc
cli
outsl
loopne
pop
adc
add
popf
or
push
mov
jnp
sub
jp
adc
cli
adc
shlb
pushl
jge
adc
les
and
jmp
and
dec
adc
shr
or
jg
xor
jge
cltd
and
dec
push
or
sub
call
ljmp
daa
mov
adc
and
insb
push
sbb
pop
scas
jl
cmp
fcoml
icebp
pop
lret
jecxz
add
repnz
add
enter
icebp
jge
mov
pushf
cmpl
mov
xor
out
lds
add
lods
lock
addb
add
stos
mov
xlat
jae
lcall
jo
cmp
ficoml
xor
repnz
jmp
xchg
xchg
aaa
adc
sbb
push
push
push
cmp
test
out
daa
aam
mov
sub
cmp
xor
cli
pop
xor
enter
or
xor
mov
ljmp
popa
scas
push
push
pop
clc
repnz
andb
push
sub
dec
mov
inc
adcl
bound
push
popf
popa
pop
inc
cmp
pop
xor
or
mov
push
pop
and
dec
jmp
cmpl
and
test
mov
push
stc
inc
ficoml
das
jno
push
mov
add
ret
jmp
shlb
jmp
imul
adc
leave
lods
stc
mov
roll
imull
xchg
stos
sub
push
insl
pop
cmpsb
mov
and
xchg
mov
popf
cmp
enter
jns
mov
sub
ljmp
fdivrl
or
hlt
fs
in
addl
cli
dec
jecxz
add
sbb
loope
addr16
lods
sub
xchg
push
mov
mov
negl
mov
shlb
jbe
and
addb
arpl
jecxz
xor
fs
add
ds
adc
dec
mov
imul
in
push
sarb
push
mov
fstl
pop
push
add
fld
scas
lock
ret
shlb
cli
xlat
bound
imul
and
sub
and
out
adc
dec
sbb
add
inc
jbe
xor
or
adc
scas
aad
imul
xor
loopne
push
jo
sub
cmp
pop
aas
mov
dec
adc
sbb
pop
ja
xor
adc
add
lgdtl
dec
enter
cmpsb
and
ret
pop
xor
push
push
mov
mov
adc
pop
lret
xchg
sar
push
add
jne
pop
pusha
orb
out
mov
cmc
stos
mov
xor
jne
jmp
repnz
xlat
out
and
sub
sbb
jae
adc
aad
or
jno
lods
call
int
or
pop
cmp
push
and
fs
adc
and
orb
repz
dec
or
daa
repnz
shlb
xchg
lds
test
add
imul
add
test
pop
stc
sub
or
dec
sbb
dec
lods
sbb
daa
in
inc
mov
sbb
movsl
push
fs
out
ss
xchg
mov
mov
fmuls
mov
stos
cmc
inc
inc
ds
daa
popa
xchg
pop
push
inc
inc
stos
mov
pop
dec
ss
sub
mov
mov
jo
jl
fisttpll
adc
pop
pop
mov
in
jb
dec
pop
fs
inc
sti
cmp
rolb
push
push
int3
cmpb
mov
mov
dec
xchg
mov
mov
je
scas
aaa
stos
push
push
mov
fs
shlb
rcll
cld
popa
pop
cwtl
addb
outsb
mov
out
mov
loope
hlt
jge
or
xchg
mull
or
rclb
popa
adc
stc
adc
ljmp
rolb
fnsave
mov
cmp
mov
sahf
xchg
pusha
mov
add
jmp
dec
xorb
mov
pop
mov
push
bound
jo,pn
sbb
pop
add
and
cli
cmp
mov
test
adc
ret
mov
add
xor
fldt
fdivs
shrl
xor
xchg
add
adc
repz
inc
lret
loopne
sub
iret
adc
jo
adc
push
das
lahf
subl
dec
scas
dec
add
xor
subl
add
mov
pop
les
shr
sub
xchg
ja
xchg
sub
or
pop
mov
sti
jmp
xchg
cmpsb
pop
sub
cmp
adc
add
int3
xchg
ret
imul
push
inc
mov
cmp
sub
cs
push
push
lret
inc
bound
add
xchg
sbbl
xchg
mov
pop
add
dec
mov
aas
scas
mov
xchg
cmp
mov
outsb
jne
lcall
jo
xchg
jge
sarb
add
popa
jnp
pop
sub
shrb
out
xor
icebp
int3
lods
mov
shlb
push
push
test
fmuls
fsubr
xor
push
xorb
roll
push
push
aam
add
and
sbb
cmp
shll
cmpsl
lock
jno
xchg
add
adc
scas
das
xchg
jg
cmp
sbb
dec
sub
outsb
dec
adc
adc
std
std
roll
outsl
imul
enter
or
fidivl
cwtl
adc
adc
cld
inc
add
insl
clc
or
adc
pushf
or
inc
addl
sbb
push
aad
imul
and
int
push
inc
arpl
push
add
sub
bswap
push
pop
in
je
or
push
adc
ds
into
ljmp
push
dec
sub
mov
mov
int3
mov
flds
sub
mov
and
stos
ret
sub
sar
pop
aas
push
aas
dec
hlt
jne
xchg
loope
arpl
mov
push
xor
mov
imul
sahf
je
sub
xor
aaa
cmp
rorb
xchg
fisubrl
pusha
add
sub
lahf
mov
in
dec
adc
and
ljmp
jmp
mov
les
mov
mov
cld
into
add
lock
pop
pop
mov
rcl
in
cli
xchg
cmp
pop
testb
mov
mov
pop
xor
mov
inc
sbb
fstl
dec
mov
inc
data16
inc
ljmp
pop
sub
test
rclb
divl
inc
pushf
in
pop
add
jmp
jno
adc
push
mov
mov
dec
sbb
inc
pop
push
pop
and
or
rol
mov
mov
testl
xor
movsb
icebp
jnp
aaa
stc
stc
test
cmp
xchg
ljmp
hlt
lahf
fdivrp
jo
adc
lock
or
pop
nop
sub
fcomp
xchg
out
cltd
and
jmp
pop
enter
out
inc
sarb
mov
aam
dec
loope
aad
inc
cs
mov
movsb
pop
jmp
lret
add
push
aam
adc
ljmp
add
loope
add
lret
mov
std
fwait
xchg
mov
pop
pop
rcrb
sbb
jbe
dec
jg
mov
pusha
dec
adc
incb
or
xor
hlt
fdivs
int3
rcrb
mov
sahf
inc
popf
inc
mov
add
mov
or
loop
and
leave
push
popa
pop
push
test
popf
arpl
add
dec
xchg
inc
ljmp
or
cmp
pop
fldln2
leave
jl
and
cmp
fldcw
push
mov
lret
hlt
idiv
cld
xlat
add
testl
cs
inc
jb
rorl
aad
cs
dec
pop
pop
testb
mov
sub
popa
repnz
jl
mov
js
mov
in
loop
leave
pop
pop
mov
pushf
or
scas
adc
aam
dec
jns
add
ret
or
xorb
idivb
and
sbb
cld
sub
push
push
push
jmp
pop
dec
rcll
add
ja
loope
das
shlb
cmp
dec
jmp
jb
inc
popa
adc
ret
inc
test
outsl
cmp
push
cmpsl
pop
pop
pop
pop
pop
mov
mov
pop
push
mov
adc
xlat
sub
or
movsl
lret
pop
mov
or
sbb
xlat
sbb
dec
add
imul
add
roll
jle
mov
cmp
out
andl
testl
movsb
xchg
add
int3
push
mov
sahf
adc
stos
sar
add
mov
push
mov
xchg
inc
outsb
popf
dec
and
jle
out
pop
and
loope
in
mov
pusha
addr16
int
fldl
pop
add
stos
mov
pop
push
jbe
push
shlb
or
out
or
movsb
lds
or
ds
faddl
jne
add
dec
inc
insl
mov
popf
add
iret
jmp
dec
inc
shr
shrl
jno
sbb
aaa
insb
dec
shrb
cmp
rolb
cld
dec
subl
add
pushf
xchg
jp
mov
cmpsl
jae
jmp
push
ret
add
rcrl
and
ja
dec
dec
lock
pop
or
mov
push
popa
mov
imul
push
add
pop
andl
shl
cmp
cmpb
mov
aas
push
mov
aad
add
sti
addr16
jmp
push
jg
inc
addr16
movl
lock
daa
push
xchg
pop
jmp
lods
sub
mov
negl
xor
std
sahf
roll
dec
outsl
call
arpl
insb
dec
pop
sti
mov
dec
rcr
pop
push
or
mov
push
ds
pop
xchg
in
mov
aas
scas
inc
add
test
jnp
jae
dec
pop
jbe
jo
adc
pop
fdivr
add
dec
xor
ljmp
les
pop
add
mov
hlt
mov
jb
ds
shrb
pop
stc
inc
adc
xlat
xchg
add
inc
rolw
mov
loop
mov
pop
orb
push
and
nop
push
sub
or
pop
and
adcb
xor
cltd
jbe
xchg
sbb
fmulp
ret
jns
bound
ds
push
or
add
jnp
ja
ret
std
arpl
adc
adc
dec
into
dec
incl
mov
xor
push
mov
or
pop
add
ret
jecxz
and
outsb
mov
xor
int3
fsts
sub
ja
xlat
push
jmp
cmp
mov
nop
mov
je
stos
mov
mov
cwtl
or
jmp
or
or
cs
xor
outsl
pop
add
rolb
outsb
clc
xchg
push
xchg
jb
inc
and
shrb
mov
inc
clc
xchg
inc
js
add
fldl
jns
xchg
icebp
subb
lcall
and
cld
adc
out
ljmp
xchg
ss
incl
repz
xor
mov
int3
adc
pop
sub
inc
adc
pusha
daa
std
mov
push
subb
shrb
pop
pop
fisubl
push
push
jb
out
sbb
loope
mov
lock
jge
arpl
jmp
test
cmp
fstp
xor
push
iret
pop
xchg
pop
jmp
pushf
dec
mov
pop
sub
mov
xchg
jle
mov
lahf
push
mov
outsb
pop
test
mov
mov
sub
stos
leave
mov
repz
daa
sbb
add
jle
push
das
test
or
or
push
jg
mov
adc
js
dec
mov
mov
mov
das
in
add
jne
scas
add
subb
imul
test
inc
mov
sbb
popa
inc
jo
aad
sbbb
loop
loope
push
mov
jle
arpl
jne
bound
mov
pop
adc
fcomps
ja
cmp
cli
pusha
js
not
cmp
dec
ljmp
enter
idivl
out
or
insl
mov
inc
or
jb
mov
out
or
pop
push
mov
outsb
test
lahf
push
xchg
popa
mov
ret
add
mov
jmp
addb
or
and
cmp
stos
pop
ret
enter
loopne
mov
pop
test
add
cmovo
orb
into
dec
js
pop
lcall
mov
pop
jmp
cmp
negl
inc
enter
add
int
or
adc
sub
xor
xchg
pop
insb
mov
je
push
push
fdivp
pop
adc
mov
psubsw
inc
pusha
mov
push
mov
out
dec
pop
xor
pop
add
or
inc
add
add
arpl
into
aam
loop
decl
addr16
cmp
xchg
ret
jae
add
push
push
popa
jle
js
pop
inc
mov
adc
lods
sub
test
pop
aaa
xchg
xor
pusha
out
dec
test
cmpl
shl
jmp
dec
jl
or
mov
cwtl
sbb
and
add
mov
cld
daa
inc
mov
mov
ds
ljmp
adc
loopne
shlb
rorl
into
push
jno
aas
pop
cmpsb
cli
mov
call
daa
pusha
js
jmp
xchg
fmulp
ds
push
shr
out
mov
and
add
cmp
add
imul
out
ss
fnstcw
dec
movb
pop
or
and
rolb
push
inc
repnz
lret
add
mov
pop
jb
out
adc
cmp
xor
xchg
ret
sbb
repnz
cmp
adc
jl
movsl
outsl
cmpb
fmuls
and
pop
xor
mov
xor
and
in
fs
jge
push
sbb
push
fcomps
and
aaa
aad
fidivrs
cmp
cmpb
or
nop
add
and
push
pop
pop
push
testw
imul
add
adc
dec
pop
or
loope
int3
bound
add
jnp
dec
and
ja
mov
pop
arpl
push
or
or
mov
jb
icebp
pusha
push
aas
loop
jae
lret
pop
and
test
pop
pop
cmp
push
sub
cmp
or
xchg
and
mov
pop
jne
pop
adc
mov
jle
adc
adc
cmpb
jno
das
out
mov
out
push
sbb
shll
and
arpl
lcall
orl
icebp
std
inc
mov
mov
mov
xor
mov
xchg
or
adcl
cmpb
cwtl
add
lods
xchg
scas
push
pop
hlt
jmp
mov
mov
ja
movl
shl
add
fstl
cmp
push
rcr
icebp
or
fstl
dec
adc
or
loope
mov
adc
add
repz
lahf
xchg
push
dec
mov
dec
and
test
xor
inc
push
sbb
stos
sub
pop
inc
push
addl
dec
or
das
fcompl
ret
and
or
cmp
add
pop
push
js
mov
dec
mov
jne
jo
gs
outsl
adc
mov
add
inc
dec
and
jp
mov
add
and
pop
push
sub
adc
add
or
adc
dec
lret
cmc
jmp
add
mov
push
inc
out
push
push
or
adc
pop
stos
xchg
add
negb
xor
mov
and
jg
xor
sbb
pop
inc
jmp
or
ja
adc
adc
cmp
add
mov
jns
lock
push
and
lret
jge
inc
sub
aas
mov
mov
mov
sbb
mov
cs
mov
or
fs
testb
fidivs
lds
push
push
xor
and
jmp
mov
notb
and
or
mov
jg
cld
lock
mov
inc
ds
shl
push
movsl
je
mov
outsb
pop
aam
cmp
arpl
mov
shl
rcrb
jnp
movl
pop
incb
jmp
sbb
or
mov
cmp
add
and
lods
push
into
xor
push
in
dec
pop
in
nop
popf
push
xor
lds
and
push
pop
inc
or
arpl
jmp
popf
leave
nop
sbb
cmp
xor
add
jmp
add
add
mov
jp
lret
shlb
push
jmp
push
xlat
repz
imul
inc
lret
stc
lret
add
pop
or
cmp
sbb
pop
lahf
lods
int3
mov
movb
push
sub
nop
aas
orb
jns
outsb
sub
mov
sub
nop
ret
pop
add
ds
shll
jmp
pop
push
dec
add
adc
adc
fildll
jo
roll
xchg
mov
inc
rcll
imull
push
xor
pop
hlt
stos
in
daa
fstpt
push
sub
scas
mov
adc
pop
scas
jne
mov
adc
dec
clc
loope
repnz
movsb
xchg
add
jp
add
cli
jmp
test
icebp
jmp
xchg
lret
mov
adc
lods
add
pusha
xchg
neg
cmp
popf
or
xchg
xor
test
mov
dec
cmpsb
and
cmpsb
outsl
xchg
in
or
push
pop
and
rclb
imul
adc
fdivp
mov
orb
insb
mov
in
shr
xor
and
jb
add
fwait
div
add
jge
outsl
cmp
out
jno
sbb
jg
mov
or
or
scas
cmpl
adc
cmp
test
clc
jmp
test
inc
xchg
testb
mov
pop
push
pop
ds
into
or
and
lods
mov
cmp
ret
dec
test
loop
mov
xchg
jnp
ljmp
roll
out
mov
imul
jmp
mov
jge
insb
addl
adc
jmp
inc
add
sbb
jp
sar
into
lret
icebp
cmp
jno
sub
das
clc
push
pop
clc
add
adcb
push
pushf
iret
test
push
out
notb
sub
fildll
rorl
loopne
sub
dec
das
ret
in
es
paddb
mov
xchg
mov
inc
and
add
jmp
subb
jl
cmpsl
sar
das
std
inc
sub
testb
out
sub
hlt
push
in
rol
clc
js
xor
or
dec
push
and
pop
or
or
pushf
xchg
pop
enter
xchg
sub
jns
test
push
sub
aaa
mov
and
add
lcall
push
xor
imul
nop
repnz
add
jb
xchg
ljmp
mov
sti
js
push
push
xchg
push
xor
fldl
imul
mov
aas
shll
dec
and
inc
pop
xor
cli
add
imul
and
in
pop
mov
mov
jmp
shrb
xchg
aam
mov
or
lret
jne
cmp
jle
outsl
adc
adc
outsl
pop
push
push
movsb
ret
push
mov
xchg
xchg
push
loope
pop
hlt
iret
mov
cmp
adc
lock
mov
negl
add
xor
ljmp
xchg
jl
or
fsts
ret
or
adc
or
loopne
inc
jmp
dec
jecxz
out
and
push
cmp
loope
shll
adc
popa
sub
xchg
popf
pop
xchg
aam
mov
out
imul
call
pop
push
mov
inc
xor
fmuls
pop
sar
insb
sub
push
mov
adc
fistpl
loopne
push
rcrl
std
movsl
mov
mov
jne
adc
or
out
and
shrb
loop
push
or
mov
jo
and
add
scas
int
sub
jp
add
bound
push
test
scas
sub
fwait
sarb
insb
sub
cmp
mov
add
xchg
push
add
ds
xor
popf
and
das
repnz
hlt
adc
mov
jnp
dec
sbb
adc
mov
imul
pop
cld
roll
dec
xchg
fs
fimull
shl
mov
testl
or
fstps
iret
mov
sub
gs
pop
hlt
jmp
push
mov
dec
pop
rcrl
mov
dec
addl
sti
pop
dec
mov
neg
cmc
and
jmp
mov
mov
popl
int
or
jmp
xor
mov
test
cmpsl
or
pop
and
xor
xor
jmp
jp
mov
xlat
mov
outsl
movsl
stos
or
and
sub
or
fldl
sbb
test
in
jo
orb
dec
mov
leave
inc
and
cmc
sbb
jg
repz
aaa
xor
xor
pop
insb
sub
adc
xor
pop
sub
pop
test
and
xchg
pop
inc
cmp
idivb
or
push
add
sub
add
sub
lock
orb
jbe
and
or
jns
out
xor
repnz
test
xor
repnz
pop
mov
xchg
mov
jge
and
clc
repnz
ret
xchg
adc
pop
dec
addr16
sbb
jge
adc
ret
outsl
mov
das
dec
cmc
push
inc
div
jne
add
data16
nop
inc
pop
out
mov
jmp
and
add
dec
adc
incb
leave
push
test
add
pop
sub
jmp
add
jne
lods
push
pop
test
lcall
leave
je
sti
int
in
cmp
add
cmpl
push
or
pop
mov
sbb
pop
mov
mov
pop
subb
inc
xlat
and
aam
jae
dec
mov
inc
imul
subl
and
mov
imul
les
mov
cmp
pop
adc
mov
cmp
test
xorb
rcr
jp
adc
movsl
sub
adc
push
scas
out
pop
push
xchg
dec
sbb
fsubs
pop
dec
orl
rcr
dec
pop
mov
mov
jmp
inc
push
scas
psubsb
in
jb
loop
push
jmp
add
outsl
nop
push
adcb
es
add
shr
loopne
lret
xorb
push
adc
rcl
or
mov
sub
jae
jmp
jb
cmp
mov
mov
popf
leave
and
lds
pop
outsb
mov
jl
push
inc
adc
jmp
in
adc
mov
outsl
ljmp
cmc
ja
push
inc
xchg
lret
insl
pusha
shr
and
repz
pop
xchg
or
inc
xchg
push
xorb
push
or
int3
inc
cltd
daa
sbb
jl
cmp
sub
sub
minps
repz
sub
dec
cli
ja
mov
lret
je
pop
push
mov
fisubl
dec
pop
ret
in
dec
push
or
test
pop
movsb
sub
or
pop
jb
add
fmuls
dec
repnz
in
inc
and
cmp
repnz
inc
push
sarb
ror
pop
push
call
push
cmc
xchg
and
lcall
insb
inc
cmp
inc
add
jl
out
xchg
aam
mov
push
pop
pop
pop
je
stos
mov
mov
push
push
jmp
adc
pop
xor
lods
sbb
test
xchg
or
inc
sub
cmp
xor
inc
push
jmp
inc
out
dec
jne
add
inc
imul
push
insb
and
ljmp
stos
xlat
sarl
and
and
xor
pop
and
sub
dec
stc
adc
and
cmp
pop
dec
add
mov
or
and
mov
push
xor
les
dec
ret
pop
lock
jmp
xchg
jno
addr16
out
sar
cld
pop
xchg
sahf
cmc
jmp
imul
push
jns
xor
outsb
pop
rorb
push
push
or
outsl
cmp
pop
movsl
cmp
dec
xor
test
mov
je
sub
xchg
popl
cmp
add
push
int3
jne
sub
sub
mov
popf
pop
in
ljmp
adc
jbe
or
mov
push
dec
and
jg
mul
dec
mov
add
inc
aam
les
dec
stos
jmp
outsl
adc
inc
push
and
sti
ljmp
mov
jmp
xchg
sbb
in
into
adc
mov
push
movsb
push
add
popa
dec
sbb
xor
push
ss
sub
aaa
fcom
addb
lods
mov
mov
das
xlat
jmp
cwtl
loopne
mov
add
or
and
and
sub
push
push
pop
xchg
push
filds
or
mov
jg
mov
mov
xor
jmp
push
cld
aad
ljmp
ror
lret
push
or
add
xchg
das
xchg
jg
cmp
xor
inc
sbb
pop
out
cwtl
js
dec
sbb
push
add
inc
sbb
jbe
push
pop
mov
jmp
cmp
test
in
inc
add
mov
mov
push
mov
jmp
enter
imul
sub
das
sub
sub
iret
nop
les
xchg
or
sbb
adc
sub
pusha
out
jns
cmp
sub
or
jmp
pop
dec
mov
dec
or
adc
neg
leave
shrb
mov
repnz
xor
adc
or
push
and
push
lock
push
mov
fildll
subb
mov
inc
jmp
fadds
fnsave
or
push
add
iret
cmp
scas
out
jge
je
and
or
dec
call
jmp
mov
jecxz
stos
fucom
add
divb
repz
or
sub
push
push
ljmp
add
add
fdivrp
mov
or
pop
xchg
loop
push
sbb
shll
jns
sub
in
pop
sti
adc
dec
jecxz
sbb
and
lret
cli
repnz
les
fldenv
pop
push
in
cld
mov
out
xorl
add
bound
mov
jecxz
lods
out
adc
mov
popf
jmp
out
roll
push
push
ds
std
inc
jmp
cmp
movsb
dec
call
adc
pop
mov
pusha
sarl
repz
adc
mov
push
addr16
movsl
jl
push
and
jl
dec
add
or
add
mov
fdivs
mov
and
adcb
push
mov
or
mov
jg
stc
adc
dec
stos
sub
jmp
stos
push
push
mov
cmp
adc
mov
mov
inc
mov
inc
add
sbb
fsubs
or
sbb
add
push
jbe
add
hlt
js
mov
std
movsb
lea
fdivrl
cmp
rol
mov
das
mov
scas
mov
push
push
xchg
add
adc
ljmp
les
imul
in
stos
cltd
ss
and
adc
or
mov
adc
rclb
dec
mov
dec
inc
or
jmp
dec
pop
and
pop
sub
aas
icebp
das
dec
inc
xorl
shrb
mov
xlat
inc
cmc
xchg
xchg
jb
test
add
addr16
cmc
test
stos
in
add
jmp
mov
xor
lret
mov
mov
das
sub
leave
ret
je
push
shlb
int
in
and
and
inc
jmp
fidivrs
sahf
mov
push
lods
fistps
aad
lods
pusha
leave
cmpsl
pop
cwtl
xor
add
ds
dec
push
sbb
std
imul
divb
imul
int
push
aaa
popa
lock
rcll
test
divb
pop
jmp
sub
or
xchg
and
xchg
repz
jo
pusha
cmc
out
aam
imul
push
loop
rorb
add
dec
or
fidivl
gs
adc
adc
scas
pop
out
mov
push
fs
aad
cmp
add
dec
mov
push
test
xor
dec
lea
outsl
popf
dec
insl
nop
push
push
sub
packuswb
pop
inc
mov
push
enter
lods
and
aas
loope
jae
push
pop
mov
mov
cmp
mov
lock
aas
or
pop
les
xchg
aad
xchg
lods
ds
rcr
lcall
jmp
xorb
loop
int
rep
xchg
enter
push
lock
dec
or
sti
mov
dec
and
xchg
or
aas
and
fcoms
adc
popf
mov
xchg
add
sub
sub
add
dec
adc
dec
add
cmpb
pop
push
test
rcrb
dec
imul
nop
hlt
pop
pop
and
ss
mov
push
push
shlb
loopne
mov
andl
mov
pop
mov
aaa
inc
test
xchg
ja
addr16
gs
add
dec
inc
rclb
sbb
xchg
add
mov
sbb
sti
int3
out
jge
jne
jbe
negl
jb
add
sub
pop
shlb
push
dec
cmp
xchg
ds
out
lret
iret
add
jmp
jns
or
push
decb
pop
adc
xchg
adc
pop
mov
sub
loopne
enter
dec
out
pop
or
jbe
daa
jo
dec
mov
icebp
in
sub
test
mov
pop
inc
add
hlt
je
xchg
loope
push
addr16
jae
or
cmpsb
aad
pop
inc
jmp
aam
orl
repnz
pop
mov
xor
fidivl
xor
push
lahf
xchg
sti
int3
fcoms
push
mov
push
cltd
icebp
add
lods
and
iret
orl
sbb
jns
or
sbb
dec
out
out
jle
popa
aam
sub
cmp
or
inc
arpl
sub
ljmp
out
adc
jo
in
lds
negl
fcmovb
jmp
aad
cmp
js
arpl
add
inc
mov
and
add
push
jmp
sub
add
ret
or
daa
sub
jne
adc
incl
and
or
jb
adc
push
ss
int3
xchg
shll
ja
xadd
jg
btc
imul
imul
cmc
or
popa
xor
fcompl
pop
and
sub
push
out
inc
pusha
or
in
push
fs
ret
add
xlat
daa
adc
fs
add
cmp
add
fnstenv
sbb
pop
pusha
fucomp
or
or
sub
iret
mov
pop
xchg
js
xchg
pushl
inc
movb
mov
shll
adc
dec
jmp
insb
xor
inc
adc
sbb
flds
loop
nop
fiaddl
or
mov
mov
aam
lods
adc
dec
out
insl
cmp
jae
xchg
es
inc
arpl
and
les
sub
cmc
ljmp
mov
mov
pop
out
insl
cmp
and
ret
and
ret
sbb
pop
stos
xchg
lds
lahf
dec
or
mov
xlat
add
xchg
inc
std
and
sub
add
mov
cmp
mov
and
adc
xor
js
outsl
xchg
mov
daa
popa
inc
push
aam
sub
in
dec
xor
imul
fs
mov
jno
push
mov
int
cmp
fistpl
insb
jmp
pop
in
add
push
fwait
xor
xor
and
mov
stos
and
pop
mov
adc
ret
pop
or
cmp
icebp
or
push
das
add
jge
add
out
scas
adc
and
loop
stc
xchg
aam
and
adc
jg
mov
out
nop
scas
je
sub
pop
push
cltd
push
lea
xor
sbbl
dec
sbb
int3
sub
mov
or
int3
add
cs
popl
js
es
jg
out
andl
mov
flds
push
and
icebp
push
xchg
jns
loope
mov
lcall
fnstcw
mov
push
mov
nop
push
mov
or
or
fimull
neg
stc
sbb
es
popf
push
aam
push
and
imul
mov
push
pop
ljmp
and
jns
pop
cmp
and
stc
mov
jmp
cwtl
xor
lods
or
mov
jmp
push
mov
out
adc
ss
pop
and
pop
jle
push
mov
out
lods
dec
or
mov
lods
add
int
ljmp
jmp
inc
sbb
pop
test
lds
xorb
adc
jmp
lods
and
or
pop
pop
test
push
jmp
imul
ss
pushf
cmp
call
dec
cmc
mov
pop
add
adcb
pop
xchg
stc
inc
daa
cmc
mov
mov
mov
xor
dec
adc
xchg
sarl
dec
lcall
std
pop
pushf
cmp
jmp
icebp
sub
imul
rcrb
movsb
sbb
pop
testb
jae
fnstcw
push
add
jge
aaa
push
mov
sbb
push
xor
add
icebp
jns
inc
xchg
pop
sbb
add
pop
push
push
bound
lods
shld
and
sub
jmp
orb
lret
pop
jg
sbb
xchg
push
dec
add
call
dec
push
mov
ss
test
or
xchg
sub
test
fnstsw
je
xlat
daa
sbb
push
xchg
icebp
inc
mov
repz
adc
cmpsl
sbb
push
mov
add
xchg
jge
int3
mov
push
addl
add
push
add
test
xor
out
aas
adcb
aad
inc
dec
iret
or
idiv
stos
adc
inc
push
inc
mov
sbb
pop
push
sub
out
or
insb
or
adc
add
pop
pushl
mov
cltd
sbb
jne
jg
cmc
icebp
mov
mov
js
pop
and
lret
push
inc
lds
and
jecxz
or
push
push
add
in
aas
inc
pop
jmp
xchg
push
sub
dec
in
addr16
mov
jle
pop
or
sbb
loop
or
xor
xor
push
add
push
dec
dec
in
movsl
in
mov
jecxz
push
or
jmp
ss
adc
lds
ljmp
dec
lahf
jl
add
inc
push
rcrl
dec
jmp
mov
sbb
dec
jle
xor
repz
mov
jno
xchg
and
add
loop
cs
fcoms
pop
dec
clc
mov
push
sbbb
arpl
xchg
fidivrl
pop
ds
push
scas
dec
mov
dec
bound
xor
sub
mov
movsl
ja
sahf
notb
pop
lock
in
pop
pop
pusha
mov
shl
stos
mov
mov
in
das
shlb
lods
adc
dec
dec
lea
or
fimull
jbe
pusha
mov
add
mov
xchg
sub
mov
pop
dec
cld
repnz
dec
add
lahf
call
outsl
add
mov
xor
and
sub
jmp
or
jo
push
arpl
test
sub
test
dec
das
test
mov
inc
push
and
out
pop
pop
push
dec
lcall
sub
lret
jne
in
adc
add
pop
jg
enter
sti
mov
imul
sub
cwtl
in
xor
xor
jmp
xchg
fildl
jne
iret
test
mov
inc
push
push
push
jmp
dec
mov
and
pop
pop
es
jmp
dec
push
cmpsb
in
adc
adc
imul
dec
outsb
push
inc
pop
add
lods
sbb
sbb
adc
push
repz
or
test
cmpb
xor
dec
push
sub
neg
mov
fisttpll
cs
movsb
sub
andb
shr
rcl
imul
xor
pop
and
bound
lods
push
mov
xchg
outsb
push
les
and
xor
dec
add
rolb
or
jmp
mov
inc
jae
outsl
jnp
dec
enter
fists
not
add
jb
scas
lods
mov
jae
pop
cmp
movd
cmp
repnz
sub
popf
xor
out
out
mov
lea
nop
jge
jns
push
jmp
lock
dec
ficoms
sti
jmp
mov
jge
mov
imul
out
neg
repnz
push
xchg
test
or
pop
and
sub
add
aam
rcl
retw
lds
clc
push
mov
jmp
bound
pushf
and
add
pop
sbb
push
xchg
push
test
dec
ja
inc
push
jb
jge
loopne
fwait
xchg
mov
int
std
inc
roll
and
fstl
mov
lock
push
testb
xchg
sbb
sti
mov
shlb
test
pop
mov
sahf
and
fcmovne
inc
arpl
mov
push
shrl
push
sub
sarb
mov
out
movnti
pop
mov
sahf
leave
or
mov
xchg
hlt
push
and
div
icebp
xor
cli
push
aaa
jg
inc
lods
dec
fidivs
lock
les
repz
inc
ret
scas
cld
fbstp
pop
jno
push
and
xchg
rolb
lcall
add
pop
pop
test
rolb
into
push
cs
sub
jbe
pop
mov
jne
jl
not
push
add
dec
mov
lock
je
or
cmp
or
lret
push
inc
cmp
jb
jno
push
jmp
imul
xor
jbe
xchg
rcrl
ds
add
xor
jmp
loope
cs
xor
inc
jmp
outsl
push
sbb
add
sub
or
pop
inc
loopne
dec
loopne
adc
add
sbb
in
call
push
lods
cld
cmp
cmp
dec
add
sub
or
and
arpl
and
ja
inc
adc
pusha
out
idivb
std
push
jle
aad
cwtl
popa
cwtl
push
outsl
cmpsb
roll
addr16
push
das
mov
cmpl
enter
pop
in
push
test
lock
pop
and
insb
mov
in
pop
ja
lcall
cwtl
add
imul
in
pop
mov
popa
enter
roll
in
nop
push
pop
push
lock
inc
add
and
sub
push
push
popf
mov
addb
push
xor
jb
mov
dec
xor
add
pop
pop
mov
cmc
test
stc
add
popa
aam
adc
fptan
push
add
cmc
push
xchg
push
jp
dec
mov
xchg
outsb
inc
sub
add
xor
out
adc
or
add
mov
push
and
jae
pusha
or
pop
dec
out
ljmp
sub
in
add
dec
push
enter
cmp
add
in
mov
lods
xor
jle
repnz
pop
mov
pop
cmp
loop
je
push
xlat
dec
and
fucompp
mov
int3
lret
das
add
inc
and
add
lret
sbb
and
sub
and
imul
icebp
mov
cmp
sub
sub
enter
stos
sub
das
jo
jne
js
sahf
cmp
cli
inc
mov
adc
push
push
gs
sbb
fstl
xchg
je
pop
add
shr
int
push
xor
or
jae
jns
inc
lods
roll
sub
inc
mov
mov
and
je
sub
scas
sbb
repz
push
mov
cmp
cmpsl
popf
sbbl
xor
rcrl
push
mov
and
jae
pop
mov
pop
popa
enter
cli
push
xchg
mov
ret
push
andl
neg
fs
jae
fists
inc
mov
pop
sub
lret
test
out
fdivrs
imul
jmp
ficoml
mov
cld
adc
shl
sub
xchg
push
popf
lcall
push
dec
pop
or
xor
push
subb
xor
xchg
jno
xchg
mov
dec
add
dec
push
sub
sbb
in
enter
jo
xor
rclb
cmp
mov
add
sub
jmp
iret
cli
or
sub
jne
jne
ja
cmp
mov
adc
or
push
ret
and
inc
sbb
pop
sub
jbe
push
loopne
fs
or
iret
popa
sub
fnsave
pop
out
mov
sub
fsubrs
das
testw
adc
xchg
push
adc
sti
popf
bnd
pop
add
sbb
arpl
mov
sti
and
mov
rorl
call
fstl
mov
sub
mov
cmpsb
imul
in
adc
inc
test
sti
stos
stc
pusha
addl
sti
pushf
xchg
std
mov
adc
stc
inc
adc
jbe
aas
andb
out
or
jl
and
or
outsl
shufps
push
push
pop
cmp
jmp
mov
xor
and
pop
inc
mov
repnz
cli
dec
daa
xchg
push
mov
xchg
popf
outsl
and
outsl
add
jmp
out
movsb
roll
addr16
inc
fisubl
sbb
pop
fcmovu
dec
and
inc
mov
push
dec
push
orb
icebp
mov
les
add
and
jl
addl
std
pop
fmulp
cmp
fs
inc
xor
push
popf
xor
jne
ja
inc
push
inc
or
sub
pop
gs
aas
fidivl
lods
pop
cmp
jne
call
aam
and
jp
loope
pop
stc
add
scas
add
ljmp
sub
mov
jbe
and
ss
popf
mov
imul
adc
mov
pop
xchg
jmp
mov
jge
jnp
jmp
and
dec
testb
push
dec
jnp
and
xchg
inc
xor
jmp
sub
dec
addl
cmp
adc
sbb
jno
outsb
out
push
add
outsb
pop
movsb
add
hlt
stc
aaa
pop
add
push
arpl
out
clc
adc
aam
xchg
mov
adc
out
push
dec
inc
movsb
hlt
mov
sar
pop
arpl
orl
cmp
jmp
dec
pop
hlt
jns
dec
sub
and
mov
das
test
repz
call
cmp
ss
push
mov
daa
and
aas
or
dec
hlt
scas
inc
cld
ds
adc
and
sub
dec
jo
push
call
mov
ds
ficoml
sbb
inc
scas
sbb
fildl
sti
mov
and
sub
adc
adc
lret
leave
adc
out
or
pop
das
hlt
imul
cmp
sahf
dec
add
mov
addl
dec
add
add
sub
gs
inc
or
mov
stos
pusha
mov
sbb
inc
adc
pop
xchg
inc
adc
sbb
or
or
dec
les
cmp
add
jnp
nop
inc
push
popa
out
pop
push
iret
sub
pop
test
xchg
call
repnz
lea
jle
orb
push
xlat
dec
pop
or
and
insb
test
mov
inc
jmp
data16
in
xchg
in
mov
mov
leave
insl
gs
dec
mov
dec
loope
xor
repz
sub
jns
xor
std
dec
ljmp
mov
or
adc
stos
insb
lcall
in
pop
adc
pop
out
add
movsl
sbb
and
dec
sbb
mov
int3
or
and
aaa
xchg
mov
inc
add
mov
inc
sub
adc
loopne
xor
rclb
jle
sub
lods
fcom
and
js
pop
popf
push
push
repz
add
cmp
jmp
subb
mov
arpl
out
push
jb
push
cmp
add
dec
ljmp
cmc
and
mov
pushf
dec
cmp
jle
mov
adcb
and
or
or
adc
in
jp
push
push
dec
out
sbbl
enter
sarb
fs
push
std
sub
mov
add
loop
xchg
scas
fsubs
add
xor
loope
hlt
pop
sbbl
in
adc
jnp
test
dec
cmp
lock
popa
dec
lock
xor
imul
repnz
loope
xor
iret
sub
mov
sbbb
in
jge
mov
sahf
out
fs
ss
xchg
lock
and
int
popa
popf
or
test
push
das
mov
lahf
jnp
or
ss
sbb
js
mov
cld
fstps
inc
push
pushw
xchg
mov
pop
push
mov
add
int3
in
ja
mov
mov
add
loope
mov
pop
pop
sub
lods
lahf
xchg
jle
outsl
dec
ljmp
inc
mov
push
gs
push
pusha
cmp
sahf
das
add
and
jmp
subb
or
outsl
incb
add
orl
jmp
or
mov
arpl
sbbb
push
gs
imul
mov
jmp
out
and
and
mov
sub
sub
ds
pop
into
test
xor
ds
cwtl
lret
stos
sahf
in
movsl
xor
loope
paddq
push
mov
dec
xchg
xchg
cmp
aas
or
jmp
subb
push
sbb
xor
cltd
cld
jecxz
lds
jg
mov
and
aad
jno
mov
pop
pop
dec
adc
ja
js
in
and
pop
push
mov
push
rolb
xchg
xor
or
outsb
sub
test
ss
scas
xchg
jp
mov
imul
pop
aam
ljmp
jnp
lods
add
cmp
cmpsb
pop
popf
aaa
shrb
test
incl
dec
out
cmp
jg
shlb
test
add
popf
jne
mov
jae
jno
cmc
daa
fnsave
add
inc
std
push
push
orb
mov
or
dec
mov
jnp
fildll
cmp
mov
out
mov
sub
add
sahf
pop
out
inc
mov
popa
les
in
cmp
lea
xor
ja
adc
pop
sub
add
cltd
movsbl
rcrb
mov
and
fs
mov
sub
sub
sti
daa
pop
inc
rolb
pop
xchg
pop
sbb
sahf
pusha
cmp
cmp
pop
mov
test
or
or
push
and
orb
xlat
jmp
xchg
nop
push
pop
jns
cmp
jb
add
sbbl
cmp
pop
jnp
push
xchg
sub
fisubrs
sti
xor
sbb
dec
adc
out
mov
add
or
or
pop
and
pop
ja
stos
scas
pop
mov
stc
pop
xchg
push
loopne
xor
add
orb
jmp
add
mov
jns
jg
sub
sbb
sbb
dec
or
outsl
pop
mov
add
sbb
frstor
jno
push
jmp
shl
push
push
mov
sub
push
dec
mov
adc
imul
push
das
fbstp
jmp
aad
cmp
sbb
add
mov
dec
das
shl
les
add
push
in
dec
aas
jle
frstors
xor
aaa
pop
test
daa
xchg
or
insl
or
sbb
jg
bound
pop
push
std
jno
push
cmp
cs
hlt
pop
xor
not
sub
ds
aaa
push
cmc
dec
jmp
imul
dec
mov
xor
leave
add
jle
repz
out
es
negb
jmp
inc
push
jmp
aaa
xchg
dec
mov
push
sbb
enter
outsb
ret
sub
and
or
nop
push
int
and
shlb
loopne
inc
push
or
and
mov
fbld
fnstcw
lcall
push
mov
push
cltd
pop
add
mov
push
leave
ja
lods
push
add
dec
ja
xchg
dec
push
pop
cltd
cli
sub
ss
or
and
negb
mov
jmp
inc
outsb
scas
push
jp
orb
ja
stos
arpl
sub
jo
xor
pop
mov
pop
lahf
imulb
push
dec
mov
inc
jbe
or
es
mov
sbb
and
or
mov
or
vmread
dec
lods
sti
sahf
cmp
fs
or
les
add
push
jmp
fidivl
test
sbb
sbb
mov
or
dec
nop
movsl
nop
mov
xlat
mov
or
add
dec
stos
or
inc
nop
movsl
mov
pop
xchg
sbb
push
xor
pop
xor
jmp
mov
sub
add
push
lret
sarl
sti
outsb
add
int3
insb
ja
fsubl
add
jo
mov
add
lcall
xchg
in
or
mov
push
dec
mov
mov
jmp
pop
xlat
xchg
xor
mov
pop
arpl
iret
lock
in
push
push
dec
icebp
push
pop
mov
jne
jge
repnz
adc
mov
fistps
sub
cs
inc
add
jmp
add
mov
jmp
xchg
cmpl
popa
lret
addl
repnz
insl
add
dec
lret
xor
and
or
or
adcb
out
sbbb
mov
rclb
add
cmp
je
cmp
hlt
loopne
fstps
cmp
test
add
mov
insl
cmpl
lods
adc
or
add
inc
mov
cmp
push
pop
insb
jno
add
inc
leave
and
sub
rcrl
pop
test
jo
jmp
sub
ss
pop
es
push
inc
xchg
mov
push
fsubr
lret
dec
cmc
stos
bound
jb
xor
sbb
push
inc
movsl
cmp
mov
and
cmp
fildll
pop
pop
dec
or
mov
arpl
add
jmp
fcomps
or
pop
xor
rcrl
and
shrb
movsb
hlt
incb
mov
sub
hlt
shr
pop
push
add
jmp
or
sete
jge
pop
dec
push
in
rcrl
sub
repnz
repz
cmp
test
push
pop
xor
dec
dec
xchg
popf
xor
mov
pop
sbb
stos
mov
shlb
push
leave
add
lahf
add
push
or
jp
lds
in
jmp
rorb
ret
outsb
and
jg
push
mov
dec
shr
pushf
or
inc
sbb
ja
sub
mov
pop
add
or
stos
and
aas
test
and
stc
mov
inc
jb
mov
sbb
aam
inc
add
in
add
and
sbb
push
lods
add
sti
xlat
sbb
dec
mov
loopne
rcll
outsb
repnz
loopne
mov
mov
adc
lcall
pop
cmp
push
pop
sub
pop
pop
or
jae
into
dec
nop
sbb
aaa
pushf
imul
add
lock
jmp
jp
inc
add
repnz
out
or
pop
mov
sub
ret
shrl
push
push
xchg
mov
divl
add
inc
out
je
add
mov
std
pop
add
inc
jmp
fsubl
loop
add
subb
pop
rorl
rolb
cmc
loop
cmp
push
sub
dec
pop
aaa
or
pop
add
nop
jl
insb
add
pushf
pop
and
icebp
add
aas
inc
add
dec
pop
jne
push
mov
mov
dec
and
jns
bound
in
jno
ja
mov
cmpb
mov
adc
jecxz
mov
dec
shl
or
or
cli
lret
std
adc
dec
or
jb
cmp
psrld
dec
jp
negl
fsubrl
cltd
and
jns
jnp
mov
add
ret
jle
add
and
addl
adc
jmp
movsb
adc
je
ds
in
jl
pusha
clc
jnp
and
je
mov
mov
sbb
ds
pop
jl
mov
xchg
ja
jmp
push
push
fadds
push
imul
scas
imul
mov
ret
out
sahf
js
insb
fucomp
xor
dec
cmc
aaa
dec
jp
mov
pop
mov
shl
fwait
mov
dec
mov
mov
std
rcrl
fwait
jmp
mov
pop
out
or
stc
clc
mov
xor
out
dec
cli
mov
add
cmp
add
xor
int
xor
mov
xor
jle
sub
mov
aad
push
hlt
sub
inc
incl
in
outsb
mov
out
push
loope
or
adc
cld
xchg
mov
dec
adc
test
cmp
and
imul
pop
cmp
cmp
and
adc
mov
adc
add
fdivs
sub
es
jl
cli
pop
stos
stos
adc
movsb
ror
or
ds
mov
xor
pop
mov
in
pusha
into
out
mov
inc
test
push
sub
and
sbb
int3
lds
stos
popa
addr16
sti
add
xchg
add
mov
mov
es
pop
in
cltd
das
repnz
test
push
rorl
fwait
pop
sub
out
sub
xchg
pop
pop
rclb
add
int
sub
add
or
scas
pop
cld
inc
icebp
add
add
pop
mov
sub
ljmp
ror
xor
push
xchg
mov
and
xchg
dec
inc
mov
and
das
push
mov
pop
push
add
and
into
loopne
cmpsl
nop
push
lretw
dec
aam
dec
add
add
jp
lret
icebp
adc
hlt
popf
cmp
push
fs
pop
ret
inc
scas
clc
sti
sbb
cs
negl
inc
jns
xor
jbe
pop
ja
fld
stos
push
add
xor
dec
scas
stc
xchg
out
int
add
loopne
dec
xor
xchg
push
mulb
das
add
scas
movsb
mov
xchg
mov
int
jbe
and
or
inc
push
rcrl
mov
dec
xor
in
push
jle
mov
dec
sub
lods
sub
sbb
jno
mov
pop
pop
aas
xor
add
jle
and
fwait
sbb
mov
nop
xor
adc
and
or
popa
insb
xchg
cmp
or
push
adc
es
or
push
push
jmp
jg
js
xor
je
push
inc
scas
jp
pusha
inc
jg
sahf
push
mov
rcrb
and
xchg
imul
lcall
repz
push
xchg
out
xchg
xchg
sub
mov
add
out
div
scas
dec
or
mov
les
scas
lcall
dec
mov
or
jmp
rorb
loop
std
or
jle
sbb
ds
and
jmp
stos
les
pop
mov
or
sbb
xchg
inc
mov
mov
adc
mov
inc
adc
mov
jl
hlt
je
mov
sbbb
pop
sbb
daa
aas
call
xchg
pop
hlt
or
dec
xor
or
xor
push
sti
xchg
sbb
in
test
xor
push
add
mov
hlt
or
jmp
cwtl
cmc
pop
je
jmp
ss
jp
jle
pop
ljmp
movsl
and
test
add
sub
xor
inc
cmp
aam
lahf
enter
cs
xchg
cli
das
jo
xlat
push
icebp
sub
testl
fst
xor
pop
push
divps
shr
pop
dec
sub
jnp
shl
inc
add
test
call
sub
mov
pop
test
mov
or
inc
cmp
xor
leave
clc
decb
cltd
orb
sbb
and
scas
movsl
jge
mov
mov
inc
test
pop
push
int
or
pop
and
sub
fcoml
mov
mov
xchg
fldenvs
sbb
pop
in
std
xlat
imul
push
jno
push
jbe
out
daa
push
popa
pop
add
les
or
xchg
sbb
loop
aad
pop
push
push
push
mov
pop
cltd
or
imul
add
add
cmp
jne
push
sbb
jbe
or
aad
cmp
xchg
lcall
pop
int3
jb
push
mov
lds
or
inc
xor
cmp
mov
dec
jmp
push
mov
mov
xor
movsl
dec
jne
mov
jmp
push
dec
call
pop
imul
cmp
inc
stos
mov
jmp
iret
cmp
inc
ljmp
xor
mov
aam
shl
xchg
add
pushf
adc
fistpl
fcomps
movsl
fs
pop
roll
push
int3
inc
nop
cmp
outsl
sub
adc
dec
and
jmp
adc
idiv
cltd
testl
pop
popf
xor
push
and
sub
inc
mov
dec
stos
xchg
or
enter
aaa
sbb
iret
mov
lahf
loop
aad
cmp
sub
jnp
out
hlt
addr16
mov
outsl
repnz
mov
cmpl
out
jnp
sarb
call
xor
sub
add
add
or
jmp
fbld
mov
xor
cmc
sub
push
outsl
dec
push
push
add
add
sub
aaa
enter
mov
aam
add
out
sbb
or
loop
jmp
mov
jnp
jmp
jno
out
or
push
inc
jbe
movsl
adc
and
fiadds
push
fstpl
mov
rolb
cmpsb
dec
sti
fs
clc
in
movsb
test
loopne
pop
xchg
cmc
xor
add
int3
push
jmp
loopne
push
or
aam
jnp,pt
outsb
enter
xor
iret
push
ja
mov
inc
cmp
arpl
mov
inc
lret
mov
pop
cmpsb
fadd
sub
subb
or
pop
xchg
push
xchg
cmp
mov
add
jno
xchg
idiv
pop
push
pusha
shrb
inc
insb
cmp
or
addr16
gs
lock
mov
or
pop
and
out
cltd
ja
js
add
out
daa
mov
pop
lahf
xor
mov
adcb
mov
add
stos
pop
dec
daa
jmp
cmpsl
xlat
or
add
mov
cmpb
mov
adc
dec
stc
mov
rolb
ret
push
xor
rclb
sub
dec
sti
cmp
pop
nop
scas
mov
jmp
ja
mov
or
in
dec
movsb
adc
cmp
or
pop
lods
shll
adc
push
jo
leave
cmp
dec
rclb
arpl
adc
sbb
mov
mov
add
jmp
js
les
jl
inc
adc
pop
dec
and
adc
mov
mov
jo
pop
or
call
push
int3
inc
pop
push
mov
jnp
jmp
loope
outsb
popa
mov
push
sbbl
data16
bound
push
out
push
pop
test
popf
in
mov
stos
test
xorb
sub
fwait
daa
push
xchg
ret
or
loop
pusha
cmp
jno
pusha
mov
jg
push
insb
xlat
cmp
adc
or
and
ja
jns
or
loop
xchg
outsl
iret
das
ja
mov
push
and
and
pop
inc
add
add
aaa
sbb
push
aas
shr
fadds
xor
pop
pop
fst
xchg
jb
add
push
lds
cmp
add
cmpsb
xor
test
scas
lock
js
ja
insb
ljmp
pavgb
push
mov
or
jp
or
push
or
push
out
jbe
or
test
test
dec
mov
mov
jo
sub
dec
pop
jmp
mov
xchg
pop
les
xchg
or
push
test
adc
adc
jbe
add
lock
pop
cmp
ret
add
xchg
add
sub
dec
xor
jmp
sti
nop
or
or
fisubrl
div
pop
or
out
and
jne
add
out
int3
push
sbb
and
and
xchg
lret
add
cs
inc
sbbb
jmp
lods
jmp
in
and
daa
andb
cmp
fsubl
mov
and
inc
ja
push
lods
push
rcll
in
out
pop
rclb
stos
popa
jmp
pop
pop
rcll
fstl
pop
pop
adc
xor
cmc
ds
jp
sub
mov
and
sub
orl
shl
out
es
test
and
mov
and
fs
mov
jmp
dec
xor
add
fwait
mov
pop
test
lock
mov
dec
xor
daa
insb
or
cmp
push
add
or
jmp
adc
mov
jp
add
not
dec
fisttps
fstpl
rclb
incl
xchg
arpl
pop
cmp
pop
loope
push
or
aas
fnstsw
or
dec
mov
cmpb
cwtl
push
and
cmp
add
pop
xchg
orb
push
das
nop
repz
outsl
mov
orb
std
mov
rcr
stos
pusha
mov
adc
sbb
clc
mov
jmp
repnz
mov
and
jl
jo
or
mov
push
pop
test
out
aam
out
cmpsb
mov
jmp
pop
push
adc
scas
jns
push
lods
push
mov
adc
pop
or
inc
lret
pop
pop
push
movsb
imul
dec
xor
push
je
bound
or
popf
jle
aaa
or
cs
push
sbb
nop
push
add
inc
outsl
and
es
xor
ret
cli
sub
inc
insb
pop
lods
ss
enter
push
fmull
adc
std
cmp
xchg
addb
inc
mov
test
dec
insl
popa
das
or
movsb
cld
adcb
dec
xor
cmp
imul
add
or
sub
or
adc
and
daa
leave
push
icebp
xchg
inc
mov
dec
sahf
pushf
gs
add
lods
stos
gs
movsb
adc
push
inc
sti
sub
out
mov
stc
push
inc
repnz
lds
or
jno
dec
sub
test
popw
push
xor
stos
js
and
push
adc
in
pop
mov
test
fsubp
repnz
adc
push
fdivrs
int
out
sahf
push
mov
dec
lcall
cmp
addr16
push
sub
adc
sar
es
mov
daa
cmp
fsubrs
mov
and
test
les
stos
and
gs
add
aas
xor
jns
jnp
pop
sbb
enter
mov
xchg
ljmp
cli
or
in
cmpb
movsl
sbbb
pop
aas
ss
jmp
xor
hlt
push
sbb
jb
das
pop
and
inc
lock
adc
sub
test
inc
adc
dec
pop
bnd
pop
aad
in
js
xchg
or
enter
mov
ss
and
notl
dec
cmpsl
dec
repnz
clc
lock
and
ret
push
push
inc
cmp
roll
push
mov
inc
jo
pop
pop
pop
divb
xchg
jnp
popa
nop
mov
cmp
popa
aaa
cs
push
jmp
jle
fldt
out
std
jbe
jmp
cmpsl
mov
jg
testl
mov
pop
lods
aad
rorl
add
push
jae
pop
xchg
leave
inc
xorl
push
fwait
ja
mov
cmp
clc
xor
jge
fs
xchg
lods
andb
dec
fsubl
popf
pop
dec
or
push
stos
insl
add
pop
xchg
xchg
ljmp
pop
pop
mov
sub
and
sub
add
add
int3
pop
push
mov
inc
inc
movsb
loop
mov
xchg
fildl
adc
cmp
xchg
notb
xor
loope
lods
pop
or
adc
cli
sub
repnz
or
lcall
pop
dec
push
mov
ljmp
push
cmp
push
cmp
inc
add
add
dec
xor
sub
or
mov
movsl
push
iret
pop
add
mov
int
jbe
add
nop
daa
adc
sti
aas
les
push
pop
mov
push
adc
rcrb
dec
jp
xor
dec
scas
leave
cmc
and
enter
in
ret
pop
aas
clc
std
pop
add
repz
add
jne
idivb
jmp
cmp
and
pop
or
push
test
xor
sbb
dec
mov
es
in
orb
push
push
shll
xor
imul
pop
or
push
add
jmp
dec
adc
jmp
addr16
xchg
jmp
inc
ret
cmp
shrl
pop
pop
cmp
ficoml
push
mov
adc
loop
add
push
push
mov
push
push
and
sub
int
and
sub
push
jmp
push
es
pop
and
xor
push
stos
nop
ja
or
push
push
cwtl
inc
sub
dec
mov
dec
movsb
mov
mov
sub
out
inc
sbbb
add
jl
les
push
sbb
and
and
jmp
jmp
pop
mov
lret
pop
dec
push
push
pop
pop
in
cmp
stc
testl
or
dec
cmc
cmp
dec
stos
jb
jmp
stc
or
mov
pusha
jbe
push
es
dec
xchg
jmp
lock
lds
lock
sbb
rclb
ret
sbb
rolb
push
icebp
jne
lds
xchg
out
stos
lds
jmp
loop
adc
bound
push
fstp
fdivrs
dec
cmp
xor
pop
sti
movsb
xchg
cltd
cs
mov
push
sub
add
xchg
or
pop
fsts
push
outsb
adc
cld
mov
jmp
jmp
xlat
and
test
mov
daa
repz
xchg
mov
adc
jne
pop
imul
jo
ljmp
pusha
aaa
or
out
sub
repnz
test
test
mov
insb
fstps
push
dec
xchg
test
push
popa
inc
in
dec
in
aas
loope
mov
and
je
cmp
push
ret
adc
mov
sub
fistpl
adc
in
lret
sub
push
xor
push
pop
fcom
scas
clc
addr16
cmp
xchg
lods
xlat
mulb
out
mov
cmp
push
shrb
ljmp
bound
orb
pop
neg
mov
jg
sbb
cmpsl
stc
rolb
pop
xchg
jno
sbb
in
fdivrl
cmp
mov
insl
and
xlat
lods
cmpsb
add
lcall
lea
sahf
xchg
inc
sub
in
clc
fsts
in
xchg
mov
test
push
repz
add
mov
aas
call
cmpl
mov
sub
in
mov
dec
push
aad
mov
jbe
push
pop
mov
pop
mov
xchg
inc
cltd
jno
icebp
mov
pop
push
dec
pop
or
mov
pop
lock
repnz
push
jmp
and
imul
adc
and
cmp
movsl
sbb
add
js
mov
xor
xor
cmp
mov
pusha
jno
cltd
lcall
pop
or
inc
aam
hlt
fwait
xor
push
imul
xor
iret
jge
mov
mov
pop
cmp
adcl
inc
shl
and
push
shl
xor
push
xchg
scas
inc
push
add
sub
test
and
jecxz
ss
adc
xchg
loop
cmp
dec
or
testb
je
icebp
daa
sti
adc
outsb
push
jno
stos
je
out
movsb
in
push
jg
xchg
dec
sbb
pop
jo
adc
pop
stos
sub
or
imul
jno
imul
test
inc
xchg
dec
mov
pop
loopne
loope
push
add
xor
push
lcall
mov
adc
gs
lret
repz
cmp
out
shrl
sub
sbb
pop
push
pop
pop
imul
and
and
add
push
mov
and
jae
pop
add
js
aaa
int3
adc
or
pop
jmp
outsl
mov
add
adc
sub
or
push
mov
jge
xlat
jns
push
jmp
leave
cmc
in
sti
jp
mov
mov
sbb
mov
xchg
mov
jg
imul
or
loope
out
pop
adc
push
std
push
mov
sub
outsb
jmp
pop
mov
fs
or
add
pop
test
push
rsqrtps
sbb
aad
in
jg
or
and
ja
dec
mov
pop
cmp
jp
adc
mov
mov
std
or
add
push
mov
aas
jge
sub
adc
lods
fnsave
jne
orl
cld
dec
movsl
inc
mov
mov
xchg
lds
fadds
adc
push
fdiv
in
cld
mov
push
cmpsl
mov
fisubl
dec
add
sbb
dec
fs
mov
dec
mov
sbb
xor
pop
fidivs
inc
push
mov
jge
les
es
or
cmp
adc
mov
push
adc
cli
lahf
call
dec
and
add
push
pop
xchg
fiadds
pop
ja
out
and
xor
add
pusha
enter
mov
and
mov
xchg
sub
mov
dec
pusha
je
out
dec
arpl
push
scas
leave
push
movsl
int
insb
and
adc
sub
cmp
into
mov
add
xor
cmp
roll
popa
fisubrl
pop
inc
and
testb
cmc
imul
fmull
icebp
push
pop
jne
mov
xor
ljmp
mov
aad
jbe
js
stc
xchg
xchg
or
push
lret
inc
movsb
jl
lods
cwtl
xor
or
inc
fmull
add
pop
ja
push
pop
add
jmp
mov
sahf
out
lahf
jle
cmp
cmp
jle
push
push
mov
data16
add
mov
test
mov
pop
mov
fnstenv
or
mov
ds
fisttpll
dec
mov
fwait
mov
ffree
and
loop
mov
aad
mov
push
loope
testl
dec
dec
push
push
int
add
pop
jns
mulb
jne,pn
and
mov
mull
not
push
jmp
fisttpl
sub
mov
adc
in
ljmp
push
mov
iret
cmp
test
sub
mov
jns
insl
sub
movsl
ret
add
sbb
scas
lock
dec
jl
dec
lods
icebp
sub
in
or
cmpsl
test
xchg
push
xchg
push
sub
and
das
jmp
jae
stc
or
push
orb
mov
popa
daa
mov
mov
notl
push
sbb
xchg
repz
rcrl
mov
xor
push
push
push
sbb
xor
xchg
repnz
jne
js
xchg
push
mov
mov
test
rcrl
and
ror
jb
push
sub
mov
sbb
add
daa
vcvtss2si
out
bound
adc
jbe
pop
add
dec
cmpsl
pop
jns
pusha
out
lds
decb
and
into
or
clc
enter
ret
push
jmp
dec
lahf
ja
mov
in
mov
call
add
push
repnz
loopne
and
sub
je
lds
dec
and
adc
out
pop
add
out
adc
push
sbb
imul
lock
stc
add
sbb
jmp
cwtl
push
pop
dec
jb
gs
mov
push
inc
inc
adc
add
add
inc
cmpb
inc
icebp
jae
push
add
cwtl
rcll
stos
mov
popf
lahf
shrl
cld
jmp
in
add
pop
mov
xchg
lret
sub
das
add
stc
nop
xor
mov
adcb
pop
add
loop
jg
push
out
push
lret
mov
add
mov
mov
mov
jge
cmpsb
or
hlt
gs
pop
push
out
jl
pop
mov
sahf
testb
movsl
push
scas
dec
cli
jb
pop
jl
ret
or
sub
sbbl
cltd
push
push
in
in
test
int3
lret
xor
cs
or
jno
ss
mov
loop
mov
dec
mov
scas
lret
jns
fdivrl
jne
mov
and
xor
jg
push
shll
or
lods
psllw
adc
pop
imul
push
rclb
mov
arpl
sub
dec
adc
cmpsb
jae
out
mov
es
dec
sub
dec
push
lods
pop
icebp
and
inc
or
jmp
imul
adc
dec
popa
arpl
add
stos
cmc
inc
test
mov
mov
stos
repz
dec
mov
mov
sub
fistpll
scas
add
mov
das
pushf
add
cmp
push
push
lret
mov
iret
mov
or
dec
ret
shlb
ss
in
adc
dec
pop
mov
lds
sbb
test
lods
inc
mov
ds
cli
daa
loopne
xchg
and
push
or
popa
movb
sub
or
pop
add
aas
hlt
jmp
sahf
jecxz
jp
stos
push
sub
repz
jnp
push
dec
push
mov
shl
cmpsb
or
fimull
xchg
lcallw
pusha
adc
push
pop
and
repz
mov
and
dec
lods
add
dec
lea
mov
loope
fs
push
les
ja
push
xor
jmp
icebp
cmp
cmp
movsb
mov
and
push
add
sub
push
idivl
fs
inc
icebp
mov
pop
ds
dec
add
enter
das
testb
hlt
rolb
jge
jle
in
xchg
pop
pop
mov
mov
not
pop
xchg
cwtl
jnp
mov
imul
cld
mov
nop
repnz
inc
push
inc
mov
cs
xchg
xchg
popf
cmp
jmp
mov
mov
test
fists
es
sarb
inc
cs
clc
xchg
jne
xor
dec
jmp
adcb
jg
sti
movsl
jg
subl
add
mov
mov
jg
xchg
pop
pop
push
jmp
or
or
xor
mov
ds
sub
push
jmp
dec
inc
loopne
in
negb
mov
dec
push
add
or
es
movlps
jns
hlt
xor
notb
pop
push
jbe
inc
fwait
rorl
fildll
cmp
js
fnsave
testb
or
mov
pop
push
pop
ret
aam
pop
test
adc
shr
add
jno
add
pop
pop
cltd
pop
dec
add
jle
dec
int3
inc
or
sbb
xor
add
adc
xacquire
cmp
or
cld
pop
mov
imulb
daa
mov
jge
lret
sbb
or
int3
jecxz
stos
jg
arpl
pop
test
fcomp
add
jp
and
andl
popa
push
test
add
es
xchg
sbb
sarl
es
and
dec
push
mov
mov
add
pop
out
cmp
push
mov
push
jmp
add
dec
xor
orl
sbb
jge
sbb
fmuls
mov
movsb
leave
fdiv
stc
add
enter
push
nop
ljmp
jo
add
pop
pop
adc
testl
std
or
out
push
test
mov
mov
inc
outsl
rorb
cmp
adc
dec
dec
call
lcall
adc
enter
jmp
inc
pop
sub
xchg
mov
clc
inc
jg
jle
lock
lret
mov
lea
loop,pn
push
push
or
sbb
insb
add
cmp
test
lock
and
pop
pop
jecxz
aam
inc
call
int3
test
es
xchg
pop
aam
mov
sub
das
mov
fnsave
push
push
cmp
jns
xlat
or
fbstp
push
jns
sub
cwtl
mov
push
pushw
xchg
and
xor
inc
dec
es
pop
or
lahf
cmpsb
xchg
lret
lahf
daa
stos
add
dec
div
loop
inc
mov
hlt
mov
mov
js
dec
sub
cwtl
dec
dec
repnz
or
and
or
jb
fs
out
daa
cmc
pop
je
adc
shll
iret
push
mov
imul
cmpl
add
idivl
xor
lods
jnp
ss
cld
cmc
iret
test
cwtl
stos
add
ret
ret
stc
pusha
and
ja
roll
subb
popa
inc
and
mov
push
adc
dec
mov
negl
cmpsb
filds
sbb
pop
mov
push
dec
dec
rolb
mov
in
addb
inc
ja
les
xor
cmp
xchg
idiv
lret
mov
lods
jecxz
in
pop
pop
cmpsl
leave
xchg
repnz
pop
mov
mov
testb
inc
or
cltd
loope
fsubr
push
cmp
xor
pop
pop
inc
in
aaa
rorb
mov
add
shl
ds
ret
mov
js
and
mov
add
fdivr
pop
int3
xor
and
jmp
scas
jb
push
std
nop
jmp
mov
in
mov
mul
jl
std
jo
in
fs
scas
cmp
popf
and
rcrl
or
lret
hlt
pop
fisttpll
fwait
and
movsl
or
test
scas
dec
cld
ljmp
daa
push
dec
inc
add
or
mov
xor
clc
and
add
mov
pop
xchg
shll
push
rcr
pop
push
push
out
fwait
mov
lcall
sub
and
cmp
iret
movsb
mov
rclb
icebp
inc
lods
sarb
inc
loop
test
jmp
out
shl
andb
mov
jo
xor
mov
and
outsl
jle
loop
psubb
dec
jl
lods
dec
sub
adc
cmpsb
dec
add
pop
push
insl
gs
mov
hlt
push
sbb
add
push
daa
add
sarb
ljmp
rclb
clc
lock
vmovapd
and
aas
fs
pop
add
aam
or
int3
dec
xor
lret
ja
inc
add
pop
cmpsb
adc
ja
adc
jl
adc
adc
pop
mov
mov
cld
dec
fimuls
mov
add
jmp
xchg
test
jle
loop
out
cmp
push
jns
dec
jle
jle
leave
sahf
test
mov
sub
inc
mov
arpl
or
jecxz
pop
std
and
add
lea
icebp
sub
add
out
decb
aam
cmp
test
adc
or
lock
aaa
incb
mov
es
fdivs
or
test
jb
outsb
ss
or
sti
mov
dec
inc
push
xchg
loop
xchg
push
scas
fdivl
dec
mov
xor
sub
das
add
dec
jmp
pop
jnp
movsb
sub
add
add
stos
fnstcw
jmp
pusha
outsl
adcb
mov
push
push
adc
jno
jmp
lock
rclb
cmp
aad
pop
jno
push
push
pop
nop
out
lcall
xlat
subb
idiv
insb
push
and
clc
repnz
dec
nop
ficoms
sbb
push
mov
hlt
nop
pop
ja
stos
xchg
cmpsl
stos
popa
inc
stos
std
and
sub
popf
dec
mov
aam
mov
ret
popa
insl
and
lret
or
mov
test
xor
cs
jnp
or
pop
cmp
icebp
outsb
sub
xchg
clc
or
or
popf
push
adc
sub
shlb
push
adc
add
cld
dec
mov
cmp
call
sub
pop
xchg
arpl
out
rolb
mov
lret
filds
arpl
adc
jo
push
adc
jl
push
or
or
push
or
scas
rolb
scas
inc
jmp
xor
dec
lret
or
or
jg
and
mov
mov
cvtdq2ps
cmp
imul
iret
mov
out
jmp
fs
sub
xchg
sbb
movsb
push
lret
sbb
data16
adc
sub
push
cs
icebp
add
mov
sub
adc
and
shrl
lods
cmpps
sti
stos
daa
mulb
push
mov
push
pop
pop
loopne
inc
aaa
xchg
bswap
sarl
push
pushf
aam
add
pop
in
addb
cli
pop
dec
pushl
sbb
or
push
pushw
and
out
int3
hlt
scas
inc
xorl
cs
cmp
dec
rcll
or
pop
xchg
es
adc
fucomi
cltd
inc
mov
xor
shr
mov
cmp
scas
cmp
pop
cmpsl
dec
lret
call
daa
cld
int
cld
cs
lahf
fld
xchg
pop
out
imul
fists
js
inc
adc
les
lds
jns
ja
fs
push
add
add
les
push
push
add
xor
pop
mov
pop
pop
pusha
dec
repz
jmp
sbb
rolb
stos
sub
add
mov
stos
or
jae
xchg
popa
push
mov
and
and
daa
mov
xchg
not
out
dec
leave
andb
and
cmp
xor
add
leave
mov
jle
or
jns
cltd
inc
sbb
daa
addr16
pop
das
mov
adc
mov
ss
xor
ds
lcall
ds
mov
dec
add
out
ja
xor
imul
adc
cwtl
outsl
dec
push
jge
das
daa
data16
leave
push
ljmp
xchg
mov
mov
jns
push
pushw
add
add
out
cmpsl
lds
not
push
fsubrs
dec
mov
cmpl
cmp
into
pop
mov
fists
mov
lcall
xchg
dec
push
or
pop
jmp
and
dec
or
adc
inc
mov
or
pop
stos
sub
cmp
shr
sarb
add
adc
and
add
adc
scas
xchg
pop
bnd
xor
push
pusha
repz
sahf
add
inc
inc
lret
push
adc
outsb
jmp
xor
sub
hlt
jl
sub
push
ret
or
movsl
add
or
push
adc
and
pop
mov
mov
add
loopne
cli
mov
pop
xor
adc
lahf
int3
mov
cli
sbb
add
push
dec
fdivr
inc
lds
dec
xor
push
mov
mov
add
sahf
or
mov
inc
in
push
out
stc
cwtl
or
fs
cli
push
inc
add
lret
xor
pop
mov
stc
bnd
sbb
pop
push
dec
inc
orb
ja
int
xor
ret
and
inc
jb
stos
adc
ljmp
subl
pushf
add
push
push
push
and
pop
adc
dec
jmp
movsl
daa
pop
idivb
sub
sub
jne
sti
ds
add
or
shll
test
xor
ljmp
orb
lret
rorl
mov
mov
xchg
mov
pop
adc
sarb
sbb
cmp
faddp
pop
inc
cld
clc
dec
roll
bound
or
cmp
add
and
or
cli
daa
lods
incb
lods
cli
jp
push
mov
pop
cli
mov
dec
xor
push
add
shlb
popa
sahf
and
ja
sti
push
or
aaa
ror
and
mov
mov
out
rclb
adc
cld
dec
loopne
shr
mov
pop
jle
sbb
sub
enter
or
out
jae
push
cmp
inc
mov
sub
aam
mov
add
pusha
dec
imul
jle
jmp
movsl
pop
or
mov
mov
out
idivl
push
pusha
jmp
out
lods
ficoms
sbb
pop
xchg
nop
popf
mov
mov
cmp
mov
jmp
ja
je
movsb
dec
fsubr
push
push
mov
movsl
lock
sbbl
mov
subl
pop
lock
pop
mov
xor
popf
push
jp
fcomi
push
push
xchg
fstpt
push
in
cltd
jmp
cmc
bound
cmp
push
sub
add
adc
dec
sub
stc
inc
adc
imul
test
sub
and
push
or
mov
sbb
decb
pop
push
mov
dec
add
into
popf
push
clc
jle
shr
or
sub
adc
enter
orb
add
sbb
xor
push
pop
jno
mov
jb
add
loope
faddl
jmp
loopne
stc
mov
cmp
inc
mov
xchg
mov
sti
cmp
sbb
fsub
ja
mov
or
jle
push
lods
cmpb
add
xchg
stos
push
add
pusha
scas
call
xor
mov
dec
mov
xchg
pop
push
out
add
stc
cmp
in
or
sbb
xchg
test
in
jne
sbb
cmp
dec
or
dec
rcll
push
sbb
add
adc
rolb
push
jmp
mov
cmp
fdivrl
lea
test
daa
or
sub
mov
loopne
inc
outsb
cs
insb
jle
fnstcw
out
push
push
enter
add
or
sub
lods
stos
and
daa
or
jle
push
sbb
pop
rorb
fists
adc
cli
cwtl
cmp
inc
insb
push
aas
std
push
sar
mov
xchg
imul
das
xchg
pop
add
shlb
stc
sub
and
sbbb
add
jo
xchg
inc
pop
mov
jle
mov
repnz
cmp
lea
rorb
ret
cld
and
das
iret
fadds
enter
adc
jp
and
iret
sub
adc
pushf
es
mov
mov
adc
stos
test
in
and
loopne
hlt
jns
mov
adc
and
cmp
push
aas
or
or
or
test
addb
and
mov
mov
or
pop
push
mov
es
fistps
lcall
mov
add
cmp
xchg
aas
fnstcw
pop
jnp
xchg
mov
or
add
sbb
in
push
insb
out
adc
mov
lods
cli
fstpl
popf
jmp
sbb
adc
mov
iret
scas
movsl
jle
std
inc
repnz
mov
popf
pop
cs
js
cmp
or
push
rol
sub
add
sbb
dec
scas
jno
push
push
pop
ret
jno
or
cwtl
jo
popa
das
cmp
cld
dec
arpl
inc
mov
and
cmp
fcomps
aad
into
pop
adc
outsb
test
in
in
pop
shl
aad
shr
add
jmp
inc
mov
jmp
ljmp
iret
mov
cltd
sbb
cmp
loop
sub
or
fldenv
loopne
fs
pop
add
xlat
push
push
or
lock
cli
adc
bnd
not
lds
std
sub
dec
stc
out
xor
sti
push
and
jns
dec
jl
popf
push
inc
push
inc
loopne
adc
icebp
out
cmp
mov
push
jmp
dec
adc
je
adc
pop
inc
or
jnp
pop
shr
int
int
fsub
xor
stc
pop
ds
idivb
dec
dec
or
inc
je
xchg
xor
add
cmp
es
jno
adc
pop
jecxz
lret
rorl
addl
sbb
xor
test
xchg
xchg
movsl
lret
mov
xor
lahf
xor
xchg
out
mov
or
lret
or
pusha
in
inc
sub
pop
ds
es
lods
or
add
add
outsb
loopne
repz
orl
xor
mov
or
inc
divl
in
or
lods
inc
dec
lods
clc
jg
and
je
bound
scas
push
in
loop
pop
xchg
rol
repz
xchg
push
lahf
fsub
mov
std
jne
inc
or
pop
bound
push
enter
mov
push
mov
jbe
in
add
aaa
pop
push
xlat
shl
add
imul
jmp
loope
mov
pop
mov
ds
push
push
fnstenv
add
adc
subb
inc
dec
pusha
mov
adc
pop
and
imul
addr16
xor
lcall
mov
loopne
mov
pop
jp
mov
iret
adc
sub
insb
pusha
mov
xor
pop
sub
icebp
inc
or
cmp
popf
subl
imul
cmpsb
inc
xchg
push
sarl
mov
pop
cwtl
imul
popf
subl
xor
out
outsl
aaa
leave
push
or
roll
out
inc
loopne
push
mov
push
mov
or
or
xchg
push
mov
add
pusha
pop
lods
mov
xor
pop
pop
sub
pop
shlb
push
mov
mov
jmp
int
jo
fstps
sub
xchg
pop
xlat
pop
cmp
ret
cld
adcb
jns
pop
xchg
jnp
test
or
jle
jp
insb
loope
xor
xor
pop
or
push
mov
lret
pop
and
leave
sub
pop
jg
pop
pushf
sub
xchg
rol
js
in
xor
push
das
stc
test
jmp
cld
addr16
lret
mov
mov
xor
jbe
or
outsb
add
pop
fistpll
sub
or
aas
add
or
dec
gs
movsb
and
repnz
jno
testb
add
sub
dec
jb
test
adc
mov
clc
pusha
in
rorl
sbb
inc
xchg
loope
add
push
bound
xchg
or
pushf
push
mov
cli
xor
jp
push
mov
xchg
cs
and
add
push
add
push
jle
jg
or
divb
aad
push
inc
fadds
mov
enter
out
jno
jns
dec
mov
mov
mov
and
pop
adc
sarb
lahf
repz
scas
lret
int
push
movswl
sub
jl
sbb
or
std
testb
cwtl
pop
jo
mov
pop
js
pop
std
mov
lods
arpl
in
mov
sahf
cmp
pusha
out
cmp
out
scas
add
sub
imul
inc
mov
xchg
into
sti
in
into
push
icebp
mov
and
add
push
jmp
adc
sub
jnp
dec
je
and
rcrb
dec
dec
add
xlat
leave
or
cld
mov
frstor
mov
scas
lret
mov
out
add
pop
xchg
inc
inc
or
mov
sarl
out
dec
rcrb
and
mov
add
adcl
sub
pop
shl
dec
sub
pop
ret
add
loop
jg
cmpsb
sbb
stos
xor
add
add
jo
and
push
daa
ja
ret
pop
loop
mov
repnz
xor
mov
ja
xchg
daa
cmp
divb
dec
xor
cwtl
popf
dec
pop
sbb
test
dec
mov
lds
cltd
aad
lcall
pop
and
xchg
xchg
sub
pusha
inc
pop
jns
adcl
xchg
or
mov
pop
ret
aam
jle
cmp
dec
push
jmp
mov
add
and
loop
ret
mov
jp
sbb
push
add
adc
test
dec
jg
jmp
mov
int
jmp
lret
aaa
jbe
pop
loop
sbb
inc
scas
sbb
and
xor
pop
vpaddd
test
adc
jmp
loop
push
adc
push
xor
imul
addl
add
lods
xor
testb
sbb
and
push
out
sbb
jnp
inc
fwait
mov
sbb
add
push
int3
push
aam
cmp
pop
rcrb
dec
or
or
push
push
pop
testl
sbb
popa
or
out
pusha
sbb
push
roll
or
push
mov
dec
test
mov
or
and
dec
adc
lock
in
popf
ret
sbb
lock
inc
pusha
and
push
jb
dec
add
jp
add
aad
lahf
dec
inc
pop
pop
mov
pop
xor
repz
cmpsb
cmp
scas
inc
mov
sub
lods
jle
leave
jmp
cld
cmp
push
das
cmc
mov
and
pop
and
or
neg
add
mov
sub
xor
or
adcl
int
sub
jl
jae
stos
pusha
rcrl
fiaddl
ja
pop
push
ja
sbb
jmp
test
jg
testl
jg
stos
lret
push
lock
or
and
add
sbb
hlt
outsl
jle
mov
cmp
test
jbe
frstor
add
enter
leave
and
or
and
mov
push
lret
or
xchg
push
jne
pop
push
dec
pop
add
add
je
push
sub
sub
ljmp
iret
push
and
mov
enter
negl
dec
jmp
clc
inc
das
dec
push
movsl
xchg
add
and
cli
out
add
cmp
mov
imul
jb
adc
adc
fldl
add
pop
out
lret
jno
mov
or
pop
add
iret
mov
daa
push
xchg
dec
lock
inc
xchg
sbb
or
mov
push
loope
jmp
xchg
dec
mov
inc
adc
leave
cmpsb
push
adc
add
inc
xor
loopne
cmp
jmp
jbe
test
sti
jno
lret
inc
sub
or
jo
popf
jns
pop
in
lods
cwtl
lock
mov
sub
or
pop
mov
cmp
pop
xor
xchg
ret
or
push
and
insb
pop
in
mov
aam
cmc
push
add
sti
cltd
clc
addb
dec
inc
mov
sti
sub
jnp
icebp
push
or
pop
push
test
nop
mov
push
and
adc
inc
add
daa
testl
repz
cmp
cmpsl
pop
out
movsl
xor
or
shlb
cmp
dec
std
pop
inc
or
or
push
mov
or
xchg
push
xor
and
je
out
pop
rorl
add
add
int
or
push
and
repz
sbb
jge
outsl
mov
mov
xor
fisubs
or
dec
test
push
jl
mov
pop
jmp
shlb
and
or
sti
dec
andl
mov
sub
cli
rcl
adc
test
out
mov
je
testl
adc
test
adc
pop
and
inc
lods
out
adc
adc
sub
movsb
mov
sub
cmp
inc
add
mov
daa
inc
pop
pop
push
adc
fsts
and
xchg
mov
aad
cmp
mov
nop
inc
push
dec
and
incb
jp
adc
add
push
xchg
ljmp
mov
jmp
arpl
push
fdivl
stos
pop
leave
int3
inc
lock
out
popf
neg
into
mov
xchg
cmp
aam
mov
jmp
and
cmp
sbb
cwtl
adc
dec
push
jp
adc
sbb
int
hlt
mov
rclb
sbb
xor
or
dec
sub
int3
xchg
sti
mov
bound
repz
add
out
adc
cmc
daa
pop
sub
and
stc
adc
fs
adc
in
push
pop
mov
jne
fstl
xchg
jmp
mov
xorb
cmp
es
scas
fiadds
cmpsl
add
inc
call
sti
rcl
xchg
mov
ds
mov
adc
fs
mov
cltd
pop
hlt
sub
rcr
clc
sbb
push
dec
mov
xorb
fstpl
jns
cmp
mov
push
mov
into
push
push
or
push
scas
pop
pop
mov
addr16
push
or
jmp
lret
jecxz
sub
rclb
test
fucomp
inc
mov
rorl
mov
cs
and
xchg
push
push
pusha
test
inc
mov
sahf
out
aad
rclb
mov
add
sub
mov
mov
ljmp
adc
scas
orl
jg
scas
fdivrp
and
dec
cmpsl
lods
fisubs
ficompl
std
stos
push
stos
mov
add
sar
lods
nop
mov
data16
aas
int
fcomps
aas
mov
add
jns
or
test
push
cmp
in
rcrb
add
sbb
in
push
add
add
or
mov
mov
adc
arpl
xor
xchg
cmc
stos
mov
hlt
push
test
mov
or
sbb
or
and
inc
mov
xor
pop
mov
pop
ja
pop
popa
insl
jbe
mov
pop
mov
and
cmpsb
popf
push
scas
jo
sbb
jmp
cmp
popa
push
dec
xor
cld
into
loopne
mov
mov
cmp
jmp
pcmpgtb
imul
ljmp
in
sbb
icebp
aaa
push
mov
movsb
sahf
clc
sub
xchg
cwtl
es
cmp
or
push
lea
rolb
cmp
sub
pop
dec
hlt
pop
jp
mov
dec
add
pop
fiadds
pop
push
mov
pop
push
push
fnclex
in
orl
rorb
or
subl
hlt
and
subl
dec
ja
sbb
ds
mov
cmp
inc
xlat
rdmsr
jo
ret
jno
sbb
icebp
xchg
cld
sbb
incl
lods
ret
add
jle
int3
sub
cli
pop
shrl
aad
sbb
push
pop
les
ret
jle
xchg
lret
jns
addr16
daa
cmp
jmp
fisttps
mov
push
add
or
testl
jns
or
push
sbb
mov
inc
lcall
daa
dec
outsb
cld
mov
sbb
mov
nop
adc
adc
pop
pop
add
jmp
sarb
mov
xlat
mov
das
xor
ljmp
xchg
mov
andb
xorb
pop
xor
pop
pop
dec
push
mov
sub
inc
out
dec
push
sbb
pop
ljmp
mov
in
lret
mov
neg
rcrb
mov
stos
add
decb
push
mov
adc
insl
out
sub
cmp
mov
mov
jmp
shrl
das
inc
mov
mov
sub
popf
push
xor
gs
dec
leave
inc
sarb
fstpl
jp
jg
xor
pop
or
outsb
stos
imul
inc
nop
cmpsl
pusha
inc
movsb
adc
neg
fstl
xor
push
into
daa
pushf
xchg
push
inc
sub
pop
mov
cmp
pop
and
xor
mov
pusha
push
into
pop
imul
das
cwtl
loope
mov
jmp
jne
jge
sbb
sub
lods
mov
push
fdivrs
popf
sti
cmp
fstpl
rcrl
sbb
dec
leave
add
rcrl
jnp
les
mov
test
pop
mov
jne
pop
in
push
fstpt
mov
cli
add
mov
shrb
or
add
add
mov
jno
add
push
loop
jp
fs
movsl
dec
pmuludq
push
pop
mov
sbb
push
stos
in
scas
out
sub
and
loopne
das
rorb
or
jle
or
pushf
sub
in
fs
jecxz
in
xchg
in
and
jmp
sbb
push
push
scas
insl
add
repnz
ds
enter
sub
rorb
scas
dec
loopne
inc
out
stc
stc
andb
mov
fmul
xchg
and
fisttps
cmp
mov
sbb
sbb
pop
aas
jg
xor
out
je
mov
mov
cli
xchg
sub
mov
repz
push
xchg
inc
or
cmp
mov
mov
cmp
fimuls
push
mov
cwtl
clc
jmp
movsl
dec
aam
inc
and
in
lahf
aas
adc
movsb
sub
add
xor
pop
lahf
mov
insb
pop
cmpl
push
dec
jmp
out
or
jmp
mov
adc
jae
sbb
mov
sbb
mov
jg
out
test
adc
mov
sbb
out
jo
mov
or
pushf
dec
or
popa
ds
inc
fnsave
add
not
add
std
jb
pop
mov
or
in
aam
adc
or
repz
mov
jmp
pop
add
ret
mov
cmp
rorl
dec
jo
sbb
mov
sbb
add
cmp
call
adc
xor
adc
shl
jns
jnp,pn
call
aaa
cwtl
xchg
out
inc
push
sub
loopne
enter
mov
push
jmp
cli
aam
in
pusha
inc
in
inc
cli
inc
lea
pop
xor
mov
test
lahf
jp
cwtl
or
or
mov
je
cmp
movb
out
xchg
icebp
sti
in
call
loopne
clc
ja
popf
leave
xchg
scas
and
stc
cmc
pop
dec
ds
cmp
and
cmp
push
mov
push
stos
rol
jge
sbb
jmp
add
pop
pop
push
sub
lds
mulb
jne
test
les
add
das
in
add
pop
or
jmp
jp
pop
mov
push
mov
pop
jmp
xchg
mov
in
mov
ret
addb
xchg
test
jge
pop
gs
inc
clc
cs
aaa
ljmp
aam
xor
repnz
sbb
std
pop
dec
cmp
pop
mov
js
push
cmpsl
mov
leave
sub
adc
xchg
or
sbb
das
mov
or
jne
leave
xchg
push
clc
add
add
adc
sbb
cmp
push
push
lahf
inc
mov
jae
add
inc
push
mov
fs
leave
adcl
pusha
mov
and
push
incb
enter
inc
xor
pusha
or
aad
cli
xchg
lock
pop
test
jmp
pushf
ds
pop
jge
xchg
ret
jle
scas
jns
jmp
nop
ret
jmp
lret
mov
add
std
pop
or
jge
mov
cmc
push
push
fisubs
mov
and
or
jp
xor
add
hlt
pop
rorb
adc
adc
and
xor
add
popf
add
add
mov
pop
or
or
sbb
cli
dec
sub
enter
cs
push
dec
or
int3
addl
jl
xchg
jae
test
jno
nop
mulb
adc
jae
lcall
add
sbb
push
jp
pop
mov
cli
pusha
int
add
mov
popf
adc
stc
inc
sbb
lcall
xorl
add
test
dec
pop
add
dec
sbb
notl
jae
sub
les
in
push
cmp
mov
cmp
arpl
addl
mov
movsb
and
adc
push
or
popa
or
shl
adc
and
lock
dec
adc
sbb
adc
adc
sub
lods
jg
bound
pop
mov
mov
sbb
jmp
adc
add
sub
xor
and
xor
push
or
jnp
popa
sbb
sbb
rcll
lock
sub
test
loope
imul
or
sbb
cltd
cwtl
popf
sbbl
or
or
push
or
mov
jno
or
sti
adc
clc
icebp
sahf
xchg
mov
mov
add
add
mov
les
push
and
push
in
dec
pop
mov
mov
subb
and
or
ja
test
adc
pop
adc
adc
adc
mov
jecxz
and
popa
jno
push
aaa
dec
stos
lret
mov
and
pop
arpl
ljmp
inc
ret
ljmp
inc
sbb
mov
fcmovbe
xchg
xchg
pop
fisttps
mov
mov
leave
imul
je
pusha
pop
and
xchg
adc
adc
adc
add
mov
xorl
inc
cli
jmp
mov
xchg
sbb
jae
pop
iret
testb
inc
add
jmp
xor
jle
mov
sbb
xor
push
pop
push
push
fs
ja
pop
sub
xchg
ficoms
add
icebp
loopne
pop
adc
or
add
jmp
jne
repnz
xchg
pop
bound
ja
out
sbb
or
out
daa
jmp
and
pop
dec
rorl
mov
jmp
push
incb
ja
dec
and
cmp
in
xor
and
adc
mov
and
pop
or
add
xor
out
adc
imul
mov
lods
stos
add
add
loope
cmp
pop
test
hlt
or
push
scas
ret
and
pop
sub
inc
cmp
daa
mul
sbb
andb
jns
shrl
jl
inc
xchg
test
fbld
inc
in
xor
inc
inc
jns
mov
push
ss
jmp
shll
sub
hlt
pusha
and
jns
push
lahf
push
into
sbb
xchg
add
mov
or
adc
std
gs
push
adc
dec
out
cmp
imul
mov
ds
xchg
add
sbb
xor
mov
lods
shll
mov
cmp
pop
sub
adc
mov
add
or
inc
add
jmp
lock
dec
and
outsb
rorb
jnp
add
je
popa
aad
xor
fstp
test
cmpsb
or
cmp
shll
mov
sub
dec
inc
or
sar
mov
cmp
or
pop
xor
nop
out
pop
aas
fnsave
jl
push
xor
jle
imul
testb
sub
jnp
loop
mov
imul
fwait
out
adc
jnp
jns
mov
roll
cld
outsl
jl
pop
pusha
pushf
mov
inc
mov
jmp
inc
stc
jb
dec
aas
shll
dec
adc
cmpsl
stos
pusha
adc
int
push
cld
adc
mov
jmp
testb
loope
jnp
imul
add
inc
xlat
push
push
imulb
push
push
push
lea
fimuls
mov
loope
rcrb
sbb
jnp
add
adc
andl
jmp
xchg
dec
mov
ja
xlat
mov
sbbb
mov
dec
nop
adc
aaa
push
hlt
lods
lret
fdivrp
or
gs
mov
inc
xchg
test
jmp
bound
mov
jge
cmp
cmpsl
shrb
sbb
mov
xchg
fcoml
incb
popa
pop
test
sbb
testb
inc
scas
cwtl
es
mov
push
mov
add
pop
dec
dec
hlt
push
in
jo
popa
mov
add
cmpsb
fisubs
push
lret
mov
xor
ss
rcrb
sbb
fcomi
dec
pop
inc
inc
ds
add
pop
aas
push
push
jmp
testb
stos
inc
stos
ret
push
xchg
push
inc
test
sbb
jmp
in
rep
fs
xchg
das
pop
cmpsb
mov
popa
lea
adc
scas
pause
pop
shlb
std
iret
add
ds
imul
cld
ja
inc
test
outsl
lcall
mov
jl
rolb
ja
adc
stc
mov
fcompl
es
and
xor
pop
mov
push
mov
out
push
fs
mov
xchg
sbb
int3
les
jb
sbbb
sbb
jmp
daa
dec
pop
jbe
pop
adc
pop
inc
or
add
xor
sbb
outsl
adc
dec
cld
daa
rorl
addb
and
imul
jmp
mov
cmpl
out
or
dec
ds
fnstcw
add
push
enter
add
pusha
xchg
sbb
add
das
pop
out
fldenv
xchg
and
fimull
mov
adc
int3
mov
add
pop
add
or
xor
shlb
sti
sbbb
adc
ss
aaa
dec
mov
je
in
pop
add
ret
or
pop
adc
addr16
push
xchg
fsts
xchg
lcall
inc
repnz
push
push
xchg
sbb
fincstp
sti
movsl
dec
jecxz
jle
nop
add
mov
sub
enter
rolb
push
jmp
loop
addr16
jmp
and
lret
imul
cmp
pushf
shrb
mov
jne
cmp
inc
sti
add
lods
bound
test
inc
data16
mov
cmpb
push
mov
and
or
inc
popa
mov
adc
lods
push
push
fidivs
push
pop
mov
xor
das
sti
sub
add
clc
add
inc
fs
scas
add
xchg
inc
nop
push
dec
and
jl
sbb
push
mov
pop
cltd
adcl
xor
mov
push
fdivs
pop
lods
aad
add
jmp
mov
adc
pusha
adc
push
mov
imul
mov
xchg
pop
lock
cwtl
pop
les
addl
adc
or
xor
sub
mov
sub
les
mov
leave
push
add
lahf
inc
std
xor
push
inc
push
nop
dec
test
sub
or
sub
mov
or
or
jmp
andb
sub
cmp
cmpsb
stos
mov
daa
push
out
popf
cmp
pop
mov
mov
pop
ljmp
adc
icebp
xchg
stos
xlat
sbb
pop
inc
jle
xor
shrl
push
cmpb
test
sti
insl
fdivrl
pop
dec
stos
sub
sbb
dec
or
xor
jns
cwtl
fsubr
xor
outsb
add
sbb
cmp
cmp
add
dec
pusha
push
cmp
rol
cmp
repnz
lds
cli
xchg
imul
push
das
rclb
mov
sub
add
pop
sub
mov
xor
stos
cld
or
mov
push
test
outsb
arpl
dec
and
ja
aad
ljmp
sub
test
xchg
cld
icebp
lods
outsl
add
jmp
mov
jmp
mov
sub
mov
push
pop
data16
popa
lods
cmpb
mov
pop
push
ret
pop
or
push
sub
adc
push
jne
imul
loopne
and
mov
fwait
sub
movsl
popf
and
cmp
lock
test
xor
lock
xchg
and
arpl
sub
cmp
push
mov
out
xor
sub
clc
sbb
out
imul
or
push
cmp
or
pop
nop
sti
or
pop
push
push
or
and
mov
mov
pop
push
mov
or
psadbw
push
les
pop
xor
in
dec
push
mov
add
enter
rcrb
adc
mov
and
pop
test
sub
adc
cmp
ljmp
jae
leave
mov
les
outsl
xchg
push
ror
dec
inc
sbb
pop
pop
rcll
xor
adc
or
lret
icebp
dec
push
jmp
jbe
pop
aam
mov
push
orb
bound
rclb
xchg
or
fnstcw
cwtl
mov
arpl
and
sub
out
dec
mov
ljmp
mov
and
mov
lods
pop
les
push
call
xor
stos
push
das
std
add
dec
add
call
cmp
imul
jmp
xor
aas
dec
test
jmp
push
loope
ljmp
rolb
cmp
loop
pop
xchg
xchg
nop
shr
mov
dec
aaa
xorb
inc
in
push
add
in
mov
sub
dec
test
mov
mov
dec
lods
out
test
sti
mov
push
movsl
aam
jo
repnz
cs
mov
ret
js
push
aam
jmp
add
sub
xorb
stc
or
xchg
xor
xor
pusha
inc
cmp
jne
mov
shlb
loop
xchg
jno
or
xorb
js
sarl
jge
and
xor
sbb
mov
mov
iret
test
cmp
lret
cmpsl
jecxz
jbe
add
jle
sub
arpl
add
movsb
enter
inc
pop
push
mov
pop
adc
dec
lret
xor
lods
push
pop
and
sbb
adc
jmp
add
dec
jmp
or
lahf
aam
loope
xor
adcb
or
pop
subl
dec
push
and
xlat
or
jmp
aas
xchg
andl
jmp
iret
pop
sub
pop
les
pushw
lods
push
dec
or
mov
jo
and
inc
jg
inc
push
mov
jns
mov
xchg
sbb
mov
pop
loop
jno
loop
sub
and
lock
outsl
add
fildll
cli
mov
and
push
outsl
cmp
push
cmp
xor
leave
pop
arpl
and
mov
adc
test
pop
pop
sti
mov
mov
pop
and
js
or
and
lret
pop
jo
aas
ret
js
xchg
stc
stos
add
loop
sub
jmp
icebp
not
jo
int3
adc
and
push
test
adc
push
add
xor
mov
shll
xor
dec
add
jmp
xchg
fcmovu
stc
ret
test
cmp
sbb
jl
dec
stos
insl
mov
push
push
xor
sbb
push
push
sti
and
pop
xchg
rcrb
ss
ret
adc
or
scas
pop
add
out
or
push
rcr
xor
lahf
push
ret
icebp
mov
repnz
cmp
mov
cmc
or
add
fucomp
fcomi
inc
rorb
fwait
push
or
mov
sub
popa
add
ss
popa
and
inc
movsb
add
shlb
mov
pusha
dec
outsb
mov
xchg
loopne
stos
inc
xchg
mov
scas
aas
xchg
or
jne
enter
inc
ret
out
add
pop
insb
jg
push
or
cltd
sahf
or
jecxz
push
leave
imul
pop
and
xor
test
repz
mov
aas
out
adc
and
push
dec
mov
and
daa
lea
daa
add
pop
sub
mov
inc
and
shll
stos
pop
or
adc
push
pop
xor
cld
push
cmpb
or
mov
mov
out
jmp
jge
push
xor
or
inc
popa
push
add
adc
fld
icebp
daa
push
jg
std
push
fcom
cmpl
cwtl
push
jl
sbb
inc
rol
pop
inc
mov
scas
movsl
ja
adcl
inc
cmp
mov
test
sarl
cmc
jbe
in
push
mov
or
xchg
lret
mov
adcl
or
dec
jmp
mov
xor
xchg
sub
add
fdivs
cmc
add
cmp
jae
push
ud2
xor
daa
xor
fisubrs
adc
adc
mov
pop
insb
cmp
sub
adc
sub
xchg
outsl
pop
sbb
popf
icebp
popf
push
push
xor
shlb
aas
pop
pop
dec
pop
inc
push
push
data16
pop
mov
or
and
push
repnz
push
iret
push
out
push
lcall
popa
mov
pusha
adc
mov
sub
mov
mov
ja
lock
push
iret
sub
add
xlat
mov
adc
push
add
jg
lahf
or
pop
in
inc
push
hlt
sub
pop
cs
cmp
add
cwtl
xchg
imul
xchg
jg
lahf
icebp
mov
jns
pop
xor
data16
mov
mov
sar
ljmp
orl
popa
push
mov
cmpsb
mov
leave
jo
das
decl
xchg
xchg
push
lret
inc
add
and
mov
je
jmp
dec
and
add
xor
dec
inc
adcb
jno
dec
outsb
stos
mov
or
rcrb
push
dec
sbb
xchg
negl
lds
sbb
push
pop
jbe
push
or
imul
mov
push
test
jecxz
xor
jnp
out
je
mov
or
add
push
andl
in
in
cwtl
std
mov
clc
ljmp
scas
dec
mov
jae
sbb
test
scas
xchg
push
cmp
in
mov
imul
push
cmp
aas
inc
adc
dec
push
pop
sub
sbb
sub
mov
insl
jmp
into
in
dec
mov
add
dec
fiaddl
lock
xchg
mov
and
push
fidivrs
and
rcll
mov
stc
jge
subl
in
cs
mov
adc
xchg
push
mov
add
decl
pop
int
adc
outsl
xor
xchg
cld
adc
pop
jnp
in
push
or
adc
adcl
test
test
mov
mov
imul
jae
pop
push
lds
in
or
ljmp
sub
cmp
outsb
addl
or
pop
fdivrs
cmp
pop
or
notb
mov
nop
adc
or
dec
popf
ret
mov
xor
pusha
sub
pop
std
bound
jno
or
and
lret
jp
add
sar
sbb
and
daa
pop
roll
sti
mov
dec
cmpsl
movsl
xchg
mov
push
test
pop
movsb
inc
sub
in
sti
cmp
or
cmp
iret
adc
sub
mov
dec
push
xor
das
pop
and
rcl
adc
inc
xor
stc
pop
jmp
cld
loop
sub
fwait
lock
mov
adc
repz
int3
ret
dec
in
jmp
xchg
jmp
fdivrs
xchg
mov
fs
data16
imul
lcall
fstpt
push
inc
mov
and
jo
adc
fstl
js
orb
in
jno
out
cmp
dec
add
sub
and
jo
mov
ja
jnp
push
add
ds
loope
out
inc
mov
out
ret
adcb
lods
fcoml
je
nop
add
cltd
cmp
push
or
jmp
out
jb
sub
stos
pushf
mov
push
or
mov
out
push
add
cmp
adc
pop
inc
daa
adcb
cmpsl
pop
mov
sub
loope
repnz
push
hlt
shll
add
in
xchg
cmp
out
push
hlt
mov
jnp
pop
dec
stos
ret
inc
and
push
mov
mov
adc
add
dec
mov
scas
adc
mov
clc
shl
ljmp
pushf
out
out
or
out
jns
jmp
repz
out
push
roll
shll
lret
ljmp
fnstenv
jmp
dec
hlt
clc
loopne
cmc
ds
ds
cld
jg
adc
inc
xor
add
ljmp
ret
or
orb
inc
jo
add
xchg
mov
add
mov
rorb
stos
enter
mov
xchg
repz
std
pop
cmp
or
into
mov
inc
cmp
push
pushf
pusha
rcrl
daa
test
das
aam
add
pop
jmp
push
mov
push
lods
sub
or
aad
xchg
andl
xor
add
mov
and
in
xor
pop
mov
out
or
push
pop
negl
xchg
jmp
inc
adc
pop
ret
test
xorb
adc
bound
inc
push
xchg
ja
sbb
insl
push
or
into
mov
int
dec
imul
inc
fsts
jno
jg
std
or
jl
sbb
adc
bound
fmull
scas
xchg
push
jne
addl
jmp
mov
loop
xlat
out
mov
adc
dec
movsb
out
mov
sub
sub
jmp
inc
dec
mov
and
mov
outsl
shll
cli
dec
dec
mov
dec
pop
dec
lods
in
xchg
mov
mov
in
sub
rolb
pop
mov
lret
inc
lret
xchg
jo
xor
xor
rolb
lret
push
or
jmp
or
movsb
fimuls
dec
and
or
add
push
mov
lock
movlps
out
xor
in
mov
das
cld
pop
inc
or
xchg
push
push
mov
and
jle
fadd
pop
xchg
or
push
mov
jmp
jl
inc
mov
js
lcall
stos
mov
outsb
pop
inc
xor
lods
and
mov
sub
and
fcomps
pop
ret
rcll
sub
repz
mov
pop
lods
add
aas
cmp
ds
pop
mov
fwait
adc
jmp
sbbb
push
adc
or
push
xchg
jo
mov
inc
dec
pop
xchg
jle
addb
cmpl
sbb
subb
je
mov
mul
adc
dec
mov
adc
ficompl
xor
mov
xchg
push
mov
clc
arpl
call
jb
mov
je
pop
pop
test
push
rcrl
rorb
loopne
imul
call
mul
jmp
mov
sbb
andl
push
add
inc
sub
adc
adc
pop
xor
push
xor
divb
sub
stc
add
jbe
daa
nop
mov
mov
ret
cmp
andb
mov
add
push
push
sub
mov
add
jg
push
and
stos
iret
push
cld
lock
adc
aam
push
shrb
mov
push
sbb
pop
push
adc
imul
jle
push
andb
jbe
inc
jmp
je
push
dec
out
mov
sub
or
or
lods
dec
add
mov
in
pop
sbb
popa
mov
scas
xor
xchg
aas
inc
mov
cmp
lods
in
adc
sub
jmp
mov
adc
cmp
sub
test
ret
sub
sbb
push
or
pop
or
insw
and
mov
imul
lret
loop
xchg
scas
and
rep
dec
roll
adc
cmp
jbe
jle
add
cmc
jp
add
jp
mov
pop
shlb
clc
cmp
cmp
adc
push
lea
sbb
movsb
jmp
ljmp
clc
or
jge
inc
sub
movsl
cld
das
pop
mov
daa
mov
adcb
jp
sub
sub
fdivp
and
jmp
xchg
loopne
mov
xlat
lret
in
in
int
pop
pop
adc
filds
add
push
xor
jg
outsl
add
or
pop
in
adc
or
cmc
inc
jmp
dec
mulb
or
sbb
inc
sti
es
cld
xlat
in
dec
pop
out
add
rclb
push
lret
flds
adc
addb
pop
push
pop
jge
cmp
jmp
out
mov
fs
das
push
inc
mov
inc
mov
adc
jp
add
push
pop
push
jmp
mov
pop
mov
mov
insb
push
push
mov
dec
int
sub
xor
mov
jnp
enter
enter
mov
and
sar
gs
pop
in
jns
mov
push
jmp
inc
jp
xor
mov
dec
cltd
cmp
enter
inc
push
add
pop
add
push
pop
daa
cld
jne
sti
and
inc
orb
daa
and
fs
ljmp
adc
xchg
das
addb
cwtl
adc
cmp
dec
inc
aam
or
or
out
and
sbb
push
add
mov
pop
xchg
push
xor
or
mov
cltd
pop
pop
lock
sub
jmp
bound
push
sti
cmp
push
pop
dec
dec
xor
push
cmp
leave
push
and
inc
cmpsl
add
mov
imul
jmp
dec
cmpsl
add
add
cmp
js
mov
lds
rclb
sub
xor
inc
pop
mov
or
push
fistps
inc
mov
push
cmp
mov
add
sbbb
push
fistpll
and
mov
dec
mov
dec
push
lret
push
les
mov
leave
or
imul
lods
dec
and
mov
out
sbb
sbb
fmull
incl
inc
enter
nop
aaa
ja
jle
mov
or
ficoms
pop
clc
lret
dec
scas
add
and
clc
cmp
and
push
xchg
add
push
sarb
jmp
dec
mov
ljmp
daa
add
mov
lahf
sub
sarl
out
shl
shll
por
push
ficomps
and
push
sarb
and
es
and
cmpsb
pusha
stos
dec
add
inc
je
or
adc
movsl
pop
gs
cmpsl
jno
adc
mov
in
fdivrl
roll
data16
xor
les
add
mov
cmp
push
mov
leave
mov
ret
xchg
push
and
lods
je
or
add
xchg
sub
cmp
ljmp
and
lcall
xchg
mov
adc
add
push
mov
and
mov
arpl
repnz
mov
mov
jge
or
push
adc
jg
sub
xor
adc
adc
add
jmp
int
push
inc
dec
push
decb
dec
pop
mov
aad
inc
movsl
movsl
push
mov
lret
jecxz
test
add
jmp
shr
test
push
imul
push
loope
pop
repz
xchg
mov
repnz
push
mov
andb
test
sub
push
or
daa
add
jno
scas
sbb
int3
sub
push
mov
push
jmp
sarb
mov
jbe
or
hlt
xchg
jle
js
push
rorl
popf
jp
or
jecxz
sbb
mov
xor
or
mov
in
dec
and
lcall
add
dec
fwait
aaa
rorl
or
pop
and
sahf
xor
je
lret
adc
jbe
jmp
inc
mov
xchg
xchg
pop
inc
test
rcll
inc
mov
dec
and
pop
out
sub
and
mov
jmp
xor
inc
jb
sbb
xor
insb
add
pop
push
push
mov
xor
nop
lea
xchg
xchg
repnz
in
pop
out
and
lock
push
pop
add
push
sbb
mov
adcb
subl
clc
out
stos
pop
sbb
mov
pop
call
cmpsl
movsl
daa
sahf
sub
inc
pusha
int
pop
sub
jae
in
xchg
jg
out
jmp
adc
sub
sti
and
movsl
push
mov
xor
mov
adc
sbb
push
movsb
pop
pop
stos
xchg
cmp
sub
scas
jge
shll
xor
cltd
lds
mov
fldcw
sar
jno
lods
ja
push
push
sub
cmp
fwait
clc
inc
sbb
xchg
xor
mov
cs
jge
add
lock
mov
and
sbbl
jnp
xor
push
add
xor
cmp
into
push
out
jmp
cmp
std
dec
mov
popf
push
xor
in
imul
std
mov
mov
inc
add
insb
xchg
call
add
xchg
pop
pop
mov
push
rolb
inc
dec
xor
gs
dec
add
ret
in
pop
dec
xlat
in
lods
loope
stc
imul
outsb
or
addr16
xor
push
repnz
sbb
sbb
daa
dec
xor
jmp
xlat
push
add
inc
out
cwtl
dec
mov
sbb
rcll
mov
and
out
sbb
dec
sbb
std
ljmp
aaa
dec
stos
icebp
orl
jbe
rcrb
inc
xor
xchg
mov
jne
imul
hlt
xchg
subl
pop
psubusb
loope
inc
aam
jbe
dec
cltd
jo
jne
jmp
sbb
push
out
pop
fxch
adc
shll
fldcw
or
sub
inc
jmp
movsb
cmc
in
cmp
sbb
or
aad
cli
lds
push
cmp
add
jecxz
add
rcl
pusha
xchg
in
mov
pop
mov
stos
jae
adc
stc
xchg
std
sub
add
les
jmp
fcomps
pop
arpl
fnstenv
inc
xchg
lcall
xor
std
mov
xchg
cmpsl
faddp
add
je
mov
rcl
mov
jmp
and
cmp
jnp
adc
add
jmp
xchg
std
xor
and
mov
aas
aad
jmp
dec
jge
jp
loopne
mov
leave
add
loop
bound
subl
shll
shrb
arpl
arpl
jle
or
hlt
int3
mov
loope
push
or
pop
test
pop
hlt
cmp
imul
mov
add
in
inc
cmp
xlat
lret
mov
iret
or
mov
pop
or
inc
mov
sub
dec
mov
ret
add
push
add
jmp
daa
pop
add
sahf
jl
leave
dec
mov
lds
cmp
dec
scas
or
imul
int3
aam
pushf
mov
int
sub
xchg
add
jmp
xchg
mov
repnz
pop
add
sahf
jns
pop
push
sub
mov
and
push
bound
arpl
ljmp
pop
aaa
rorl
ficompl
orl
sub
lret
pop
push
pop
sahf
ljmp
ret
sub
xchg
mov
xor
add
lret
or
jb
insb
sbb
pusha
xchg
ret
mov
mov
pop
sub
sub
push
ret
pop
push
dec
xchg
push
test
mov
fprem
add
dec
mov
jbe
jne
mov
insb
xor
ret
and
or
mov
push
mov
ret
popf
call
sbb
cld
xchg
jae
adc
cmp
jg
mov
sti
ret
pushl
mov
outsl
sub
adc
sar
sub
repz
pop
mov
jl
out
sti
push
add
data16
int
inc
cmp
push
cmpsb
xchg
ror
lcall
and
mov
xorb
int3
adc
leave
ds
inc
dec
sub
inc
or
adc
add
and
les
call
into
daa
push
inc
push
add
sbb
and
jne
mov
pop
sbb
xchg
ror
shl
and
das
call
fwait
negl
add
pop
mov
or
arpl
xor
or
pop
pop
sbb
daa
jmp
cmp
mov
sarl
pop
push
out
or
push
pop
or
in
push
mov
inc
jg
scas
test
push
arpl
or
pop
cld
sbb
pop
repnz
rcl
push
or
xor
subb
inc
or
movsb
js
xlat
xor
cmpsl
mov
mov
add
adc
js
dec
mov
and
shlb
push
std
outsb
or
xor
outsb
mov
jg
les
add
add
pop
dec
cmpsl
jmp
dec
add
push
jo
imul
outsb
or
hlt
sub
cmp
mov
stc
adc
jmp
pop
mov
shlb
je
sbb
es
or
pop
push
pop
mov
push
lahf
incb
jo
pop
jns
add
dec
in
inc
jmp
jns
dec
roll
popa
jle
and
sbb
or
iret
cmp
scas
sbb
mov
pop
sbb
ljmp
int
or
add
jmp
adcb
jmp
daa
es
je
or
movsl
fs
mov
cld
shlb
jl
es
in
or
lock
xchg
ja
xchg
add
pop
jne
bound
divb
jne
jae
int
insb
int3
ret
inc
pop
movsb
lods
ja
fildl
addl
in
ret
div
dec
pop
mov
push
in
push
mov
not
ljmp
ds
mov
ljmp
xor
or
cwtl
add
adc
mov
sub
test
pop
mov
push
adc
rcll
pop
cmpsl
mov
mov
fildll
adc
cmp
jle
int3
ja
imul
mov
mov
cmp
push
orb
pop
imul
add
cmc
push
std
insb
daa
jmp
jp
pop
inc
fldl
adc
pop
lret
or
add
or
or
shlb
aas
imulb
cltd
jmp
popf
pushf
mov
cltd
jl
and
push
push
notl
loopne
out
add
insl
push
dec
xchg
not
rorl
or
and
push
and
ret
lahf
mov
mov
dec
push
mov
dec
jg
pop
sub
xchg
pop
pop
icebp
jno
push
ljmp
push
pop
cwtl
or
pop
ja
fists
cld
repnz
loop
add
jmp
lcall
cltd
nop
aaa
daa
jno
int3
push
cld
push
xchg
add
mov
out
cmpl
ss
mov
loop
dec
pusha
sub
notl
jne
pop
daa
or
sbbl
mov
mul
mov
adc
mov
jmp
mov
mov
push
dec
and
pop
lock
icebp
or
dec
dec
insb
lods
mov
movsb
jno
push
or
inc
adcb
jno
loopne
add
and
lahf
pop
dec
je
lcall
clc
push
mov
mov
dec
xor
ja
loopne
inc
xchg
fisubs
fwait
gs
jbe
and
test
pop
xor
jmp
in
stc
pop
int3
dec
idivl
addb
jp
sub
pop
inc
in
mov
push
out
and
pop
cmp
xor
orb
add
ds
loop
jmp
push
mov
adc
ds
sbb
add
fcomps
dec
mov
dec
add
pop
mov
test
mov
rclb
or
pop
shr
jmp
repnz
jl
das
push
push
pop
dec
inc
mov
les
loopne
jl
or
inc
loopne
ret
push
mov
or
insl
cs
add
add
aam
jmp
jb
sub
scas
cmp
sub
dec
jmp
arpl
inc
sbb
ljmp
addl
push
sub
dec
sub
jnp
mov
ljmp
bound
mov
cmp
notl
xor
dec
scas
lret
push
mov
jmp
repz
jns
or
stos
popa
add
clc
xchg
and
sub
jl
adc
imul
pop
pop
xchg
pop
xor
aaa
mov
pop
loopne
mov
pop
neg
push
repnz
icebp
jb
push
imul
or
cmp
mov
and
outsl
xchg
ds
jne
push
add
push
pop
pop
cli
into
push
mov
cltd
mov
clc
std
pop
cli
push
les
sbb
mov
shlb
lret
or
scas
pop
inc
loopne
subl
das
insb
or
add
enter
dec
pop
xchg
faddl
mov
push
jne
stos
cltd
aas
inc
jno
insl
jns
test
adc
mov
add
pop
xlat
jne
mov
xor
jle
loope
rclb
ds
or
add
xchg
xorb
ja
and
cmp
std
jbe
xchg
pop
pop
test
mov
scas
push
aam
fidivl
sahf
je
push
add
pop
sti
popa
ljmp
add
cli
cltd
loopne
push
inc
jmp
sbb
leave
pop
add
dec
clc
sub
ja
mov
add
sub
rcrl
adc
leave
sub
cmp
mov
adc
jmp
or
push
mov
lcall
mov
pop
adc
jae
xor
mov
lret
mov
mov
mov
cld
out
pop
pop
lret
lea
outsb
mov
cwtl
pop
push
negb
inc
jns
pop
loope
fs
fmuls
mov
leave
es
ret
sbb
lahf
rol
mov
push
adc
push
mov
add
int
std
ret
add
popa
xor
js
nop
xchg
or
and
xor
or
jle
xchg
stc
or
mov
add
sahf
ljmp
ret
outsl
push
cmc
subb
dec
or
or
dec
cld
aaa
or
pop
stos
inc
lret
das
and
inc
or
and
sub
ret
lahf
mov
mov
dec
add
iret
pop
cmc
in
cmp
pop
std
inc
mov
xchg
je
cmp
addr16
and
leave
pop
add
call
mov
bound
aad
add
jle
fsubrs
cmc
out
mov
dec
or
test
cmp
call
ja
fwait
lcall
cwtl
mov
cmc
dec
and
cmp
jmp
pop
sub
js
adc
inc
imul
dec
pop
mov
sub
icebp
test
add
cwtl
sti
cwtl
enter
cmpsl
mov
daa
fadd
mov
inc
adc
sbb
in
scas
shl
mov
pop
in
lcall
jnp
xchg
sbb
loop
xor
and
and
push
xchg
sbb
push
add
fidivrl
pop
lds
fcmovu
inc
jbe
js
mov
or
pop
shll
daa
sahf
and
pop
movsb
push
adc
and
cltd
sub
test
lahf
dec
roll
dec
mov
lods
adc
into
mov
sbb
push
test
mov
test
aas
add
in
jg
shr
fsubp
dec
push
sub
mov
mov
call
mov
and
imull
ljmp
scas
iret
out
xor
push
dec
pop
movsl
ret
movsl
sbb
add
je
add
fs
inc
cmp
jmp
iret
jge
push
notl
je
scas
and
xlat
scas
nop
pushf
xor
clc
insb
sub
rolb
add
repz
stos
ljmp
fdivrs
data16
pop
fwait
mov
push
jge
leave
pop
jns
imul
lret
ret
pop
sbb
outsb
dec
je
sub
lcall
lods
jne
ret
je
and
mov
lds
pop
ljmp
jo
sbb
stc
sub
in
xchg
mov
cwtl
push
sub
jmp
pop
cmp
test
sub
jge
into
scas
push
sub
in
lock
cltd
orl
mov
std
jecxz
sbb
and
gs
jecxz
push
lock
daa
loopne
mov
pop
pop
pop
jns
out
outsb
out
js
dec
fistpll
pusha
jae
idivl
add
sbb
pop
mov
ret
shl
xchg
and
dec
pop
gs
repnz
inc
adc
fidivrs
test
data16
add
and
mov
push
sar
sub
mov
lods
adc
cmpl
clc
imul
xor
pop
dec
inc
jle
xor
ficompl
fstpl
pop
aas
push
cmp
xlat
xchg
hlt
jns
adc
mov
mov
les
pop
int
xchg
dec
in
cld
lock
ljmp
andl
and
cs
stos
add
es
in
dec
addr16
ljmpw
sub
sub
and
sbb
mov
or
ret
jmp
dec
fistpll
xchg
call
push
mov
xlat
mov
pop
and
leave
movsb
cmp
icebp
jg
adc
notl
ljmp
mov
pop
repnz
movsb
adc
lds
xorl
adc
outsb
push
cld
pop
push
sbb
sbb
push
pop
test
daa
aas
insb
lock
dec
out
jmp
fldenv
xchg
shll
in
shrl
xor
xorb
arpl
pop
lahf
pop
pop
jae
push
push
pushf
push
jmp
insb
das
cwtl
xchg
cmp
pop
inc
lods
ss
inc
xor
sub
inc
xchg
aaa
mov
shrl
and
sub
sub
clc
add
call
add
cmp
inc
dec
pushf
or
push
repnz
in
adc
arpl
sub
push
jmp
or
jae
xor
lea
cmp
add
mov
push
push
pop
subb
jne
jmp
cmp
jmp
add
dec
push
or
add
jne
or
cld
sahf
rcrl
popa
loope
xchg
pop
push
fs
add
push
pop
add
pop
cwtl
fs
sbbl
sub
int
addr16
pusha
vpsubsw
pushf
cmp
jo
bound
je
inc
fucomi
add
adc
hlt
jns
cwtl
dec
scas
adc
paddb
leave
xor
dec
outsl
mov
fisubrs
add
ret
jecxz
jle
das
mov
call
lds
cmpsl
flds
adcb
add
inc
and
sub
outsl
mov
push
pop
push
test
fs
cltd
lret
add
cmp
fsubl
or
or
add
pop
mov
daa
cmp
popa
test
loopne
into
fistpl
jp
call
sub
pop
dec
cmpsl
pop
adc
ja
and
add
js
inc
ja
sub
jae
inc
inc
dec
cli
loopne
icebp
jo
testb
inc
pop
push
sarl
icebp
daa
lret
notb
pop
stc
pop
or
mov
dec
sti
inc
and
push
dec
adc
lret
xchg
pop
push
movsb
jo
test
stc
xlat
xchg
std
out
mov
test
cmp
adc
and
in
or
nop
xor
insl
mov
outsb
daa
sub
xor
lods
jmp
fbstp
decl
cs
lret
push
dec
sti
inc
cmc
inc
rclb
aad
dec
sub
subl
push
mov
sub
add
aam
sub
xor
inc
fcomps
dec
sbb
push
jge
inc
in
jp
pop
sti
imul
and
ljmp
pushf
pop
in
or
outsb
sbb
or
movsb
cmp
je
add
xor
xor
gs
sub
out
dec
pop
pop
mov
jnp
jne
cs
cmp
add
loopne
jmp
mov
inc
aaa
adc
or
add
sbb
pop
and
ret
shl
inc
hlt
push
addl
pop
imul
test
and
outsb
or
mov
gs
push
adc
add
pop
sub
roll
fdivs
cmp
insb
clts
push
jb
daa
or
lock
jnp
and
push
aas
mov
pop
lret
mov
jns
pop
rcrb
push
movsb
and
mov
ret
mov
add
fs
mov
int3
adc
jno
pop
arpl
fs
ljmp
leave
aam
inc
adc
popa
adc
and
pop
mov
xor
mov
and
inc
pop
adcb
xlat
les
sbb
jmp
out
das
push
fstps
icebp
mov
inc
add
dec
push
push
daa
imul
dec
pop
fdivrl
push
shl
fists
jg
jl
cmp
pop
or
add
stos
mov
add
pop
add
rcll
gs
mov
and
mov
mov
xor
stc
push
add
fstps
and
sbb
pop
arpl
bound
insb
and
add
fwait
or
ss
push
jle
jg
int
daa
out
pop
repz
pop
push
insl
inc
shr
aam
cmpsb
fsubs
sbb
xchg
lds
mov
and
add
jle
scas
sarb
shll
ljmp
pop
pop
push
mov
out
jecxz
in
out
or
pop
rclb
jmp
dec
add
add
xchg
mov
pop
cmp
jo
jmp
pop
push
xor
push
add
dec
pop
sahf
sub
and
adc
mov
push
in
popf
cli
sbb
test
sub
scas
nop
loopne
add
xor
fists
pop
hlt
or
popa
sub
arpl
jnp
or
pop
pop
fwait
push
sub
xor
pop
cmpsb
mov
push
cmp
aam
mov
lods
mov
jnp
mov
xor
mov
cltd
insl
inc
mov
jne
adc
icebp
fwait
leave
fists
add
shlb
xchg
jmp
mov
push
pusha
cmpsb
add
dec
mov
mov
sub
fisubrs
call
mov
fldl
inc
cmp
inc
jo
push
lock
jle
jns
shl
jmp
push
pop
push
pusha
xchg
jns
push
nop
test
movsb
lcall
fiadds
mov
andb
int
push
xchg
cwtl
sub
leave
ja
in
xchg
pop
mov
dec
pop
ret
mov
test
xchg
adc
pop
fisttpll
xor
pusha
push
jns
ljmp
pop
pushf
or
nop
and
movb
cmp
cmp
lret
sbb
cmp
ret
mov
and
mov
lods
mov
add
ljmp
sahf
inc
rorl
push
lods
mov
push
out
inc
and
fnstcw
nop
xor
test
mov
jle
mov
push
testb
jp
out
push
inc
ss
subb
aad
es
cvtps2pi
out
popf
out
jmp
or
sbb
add
lock
out
xlat
cmp
dec
call
in
fdivs
jno
dec
fstl
or
jns
mov
or
or
add
cmp
outsb
jo
mov
fdivrl
rorb
imul
bound
jns
xor
lods
xor
adc
imul
push
cmp
scas
mov
mov
jp
cmc
sub
cli
sbb
jns
lcall
add
pop
push
sbbl
inc
or
cwtl
pop
pop
push
stos
sarl
lahf
clc
das
add
shr
add
dec
xor
test
jno
scas
mov
inc
mov
das
cld
jle
aaa
std
outsl
or
mov
pop
loope
push
jbe
int3
stos
and
push
neg
inc
xor
add
and
pop
dec
jbe
add
mov
cwtl
or
daa
adc
jp
pop
sub
loop
push
aaa
ret
add
fwait
pop
sub
add
popf
or
inc
dec
dec
loopne
jg
mov
add
pusha
shll
mov
icebp
mov
addr16
jnp
push
sarl
sub
fcoml
pop
in
test
or
aaa
mov
mov
push
std
outsb
sbb
jne
push
imul
addr16
pop
psubd
jmp
and
cmp
push
xchg
or
push
in
scas
fnstenv
rorl
push
sub
orb
outsl
xchg
cmp
mov
add
es
shll
stos
ja
daa
mov
inc
cmpb
push
jmp
repnz
push
insb
popf
cmp
sbb
mov
sub
add
mov
push
mov
popf
jge
jb
push
pop
loop
push
shlb
xchg
sub
les
pop
lock
and
add
and
mov
and
aam
mov
sub
bound
cs
out
inc
aaa
arpl
lahf
jp
daa
or
adc
mov
clc
clc
std
add
insl
adc
or
mov
push
gs
jmp
push
cmp
inc
scas
aas
add
pop
lods
pop
test
addr16
leave
push
mov
and
outsl
jbe
roll
jae
aas
jne
fists
inc
and
sub
pop
push
test
ljmp
push
dec
xchg
lea
jmp
add
scas
xor
lret
mov
sbb
jo
aaa
ret
mov
scas
fsubr
shrb
mov
or
leave
js
pusha
test
cld
jg
repz
decl
mov
loopne
dec
or
sahf
push
dec
das
loop
pop
insl
jecxz
push
mov
je
jo
repnz
add
pop
pusha
fsubrl
pop
cmpsl
jg
fidivrs
cmpsl
xchg
add
xchg
push
dec
inc
lret
cs
sahf
pop
push
mov
arpl
xor
mov
test
fwait
cmpb
or
adc
add
aas
loop
sarl
mov
sub
mov
enter
cmpb
ret
sub
out
sub
or
pop
nop
outsl
orb
add
push
sbb
jno
and
sub
cmp
jmp
dec
ljmp
pop
ret
xor
into
mov
mov
pop
and
or
pop
pop
xor
in
stos
mov
leave
adc
or
inc
repnz
pop
pop
pop
das
mov
subb
stc
cmpsl
mov
adc
push
pop
incl
adc
pop
clc
int3
or
sub
or
or
mov
jmp
les
roll
or
pop
ss
add
add
and
movsl
sbb
add
push
int
das
aad
ljmp
lods
mov
pop
outsb
mov
push
sub
lret
pop
lods
ret
addb
dec
ss
sbbb
inc
add
cmpsb
jge
pop
add
push
sub
push
inc
inc
mov
fcompl
rcrb
notb
or
shl
aad
cmp
pop
mov
mov
pop
sbb
nop
or
or
push
je
sbbl
xor
call
mov
sbb
inc
dec
inc
push
fdivrs
jns
and
xor
adc
xlat
add
mov
inc
jmp
lea
dec
aas
cltd
push
mov
aam
lods
sbb
or
test
test
leave
lods
test
out
mov
xor
loopne
pop
jne
push
push
test
mov
push
adc
push
inc
loop
js
sub
jl
adc
push
sbb
add
push
outsb
mov
adc
movl
mov
and
or
add
adc
or
jmp
shlb
dec
aas
out
pop
mov
mov
pop
push
xor
sub
hlt
xchg
add
and
pop
ljmp
shrb
jb
jmp
ljmp
cmp
stc
add
nop
sar
call
jb
loope
stos
insl
mov
dec
or
add
dec
pop
ffreep
sbb
mov
out
pusha
rorl
mov
mov
push
adc
add
push
inc
outsb
jmp
fmul
sub
adc
cmc
add
imul
jo
mov
push
jmp
pusha
outsl
mov
or
sub
adc
std
addr16
xor
dec
mov
std
call
outsb
fs
mov
cs
cmp
arpl
push
mov
das
sahf
sub
int
ret
jecxz
xchg
insl
lods
aas
lea
cmpb
sub
cs
add
mov
and
xchg
and
pop
dec
fstpl
daa
push
jmp
mov
clc
out
sbb
fbstp
jmp
insl
pop
push
rclb
inc
mov
rorb
or
call
imul
jns
jbe
pop
dec
clc
daa
jmp
test
add
aad
pop
jg
cli
sbb
in
cwtl
push
sub
add
pop
push
pop
xchg
scas
sub
add
sub
mov
das
pop
hlt
dec
ret
add
loopne
cmc
add
iret
jl
fsubp
pop
cmp
jecxz
xchg
inc
pop
xor
andl
cmp
push
mov
jmp
fs
and
push
adc
xchg
sbb
pop
xor
jge
pop
push
add
adc
push
bound
push
mov
sbb
pop
icebp
loopne
jo
mov
inc
rclb
sub
das
xchg
fcmovb
out
sbb
aas
or
sub
dec
cwtl
leave
add
push
data16
dec
cwtl
cmpsl
dec
inc
inc
lds
cltd
jge
or
daa
jmp
fcompl
daa
mov
xorb
add
addr16
sub
and
push
mov
push
add
mov
push
jmp
lods
push
mov
lock
addr16
and
sahf
jp
enter
and
mov
cmp
les
mov
mov
add
addl
dec
jle
adc
dec
or
std
pop
jnp
pop
add
aad
mov
push
jmp
dec
mov
jg
loop
push
jg
push
mov
popa
xchg
add
pop
mov
push
jmp
movsb
push
test
mov
sbbb
push
push
int3
pop
call
outsl
daa
jmp
imul
jmp
cmp
ja
cltd
adc
stc
mov
xor
aam
test
pop
dec
add
push
pop
lret
in
dec
or
inc
jb
inc
xchg
in
shl
scas
mov
and
loop
jl
sub
pop
jnp
xor
std
add
rorb
dec
and
dec
ret
push
int3
cs
faddl
jmp
dec
aad
pop
xchg
or
je
bnd
cld
mov
pop
imul
mov
cmp
insl
pop
add
push
mov
orb
jmp
push
mov
pop
pop
clc
stos
pop
cli
sub
dec
xchg
nop
clc
lods
scas
jbe
xlat
adc
jmp
pop
ds
mov
and
mov
push
jmp
mov
ret
pop
or
and
and
pop
enter
lahf
mov
sbb
lret
mov
cmp
loop
fsubr
test
mov
dec
pop
cltd
and
hlt
jp
popf
data16
cmp
cmp
iret
mov
hlt
and
nop
dec
and
or
out
and
enter
jle
inc
mov
ja
jle
stc
mov
leave
repz
push
mov
mov
mov
mov
dec
sub
mov
scas
xchg
sahf
scas
and
mov
mov
sub
jnp
push
xchg
push
add
sub
jns
repnz
cmp
inc
call
sub
jmp
jns
sub
jmp
fcoms
dec
pop
rcll
jb
add
xor
mov
cs
cltd
out
stc
call
pop
cld
push
dec
dec
mov
out
das
popf
outsl
test
popa
cld
in
jmp
pop
vpextrw
lds
movsl
sub
sub
sbb
cmpb
cmpsb
or
sar
or
sub
jmp
and
cmpsl
mov
leave
mov
arpl
scas
les
aad
out
and
rolb
jmp
pusha
addr16
xchg
adc
xchg
push
lods
add
dec
test
mov
jmp
push
adc
mov
adc
inc
and
jmp
sbb
sbb
fists
xchg
leave
mov
xor
inc
fcomps
sbb
data16
mov
xor
sub
cli
xor
jmp
pop
mov
sub
cmc
push
xchg
sbb
push
push
push
mov
mov
lret
sbb
push
mov
dec
ljmp
sub
xor
scas
inc
mov
lret
nop
jns
pop
adc
or
das
xor
orb
pop
push
jmp
ret
mov
push
jmp
lret
mov
int
mov
dec
mov
or
or
stos
push
orl
mov
sub
xor
divl
jno
adc
icebp
in
jne
ja
ret
and
mov
test
ret
xor
push
mov
movsl
ja
cmpsb
fistl
repnz
and
and
push
jmp
in
xor
mov
jl
dec
or
out
jp
push
outsl
rolb
mov
jbe
push
mov
addb
xorb
jno
clc
pop
clc
dec
sub
pop
cs
jno
adc
dec
push
cmpsl
push
gs
add
popa
mov
mov
push
xor
and
inc
dec
adc
or
out
push
cmpxchg
cmp
ficoml
and
sub
aam
inc
jmp
mov
push
mov
movsb
inc
cmp
sub
xor
movsl
add
into
adc
mov
lock
hlt
into
push
add
adc
cmpl
sbb
pop
pop
mov
pop
in
jo
jb
addr16
or
fstpl
out
mov
push
and
sahf
fildll
jns
xchg
loopne
into
mov
roll
or
in
scas
je
and
imul
adc
inc
std
loopne
mull
in
mov
inc
mov
or
mov
or
add
mov
adc
pop
fs
sub
mov
mov
sub
or
sbb
inc
pop
push
add
push
cwtl
sbb
and
jb
jb
pop
shlb
rorb
inc
in
push
jne
cmpsl
pop
mov
mov
gs
sahf
sbb
arpl
lret
rcrb
inc
jmp
add
out
cli
inc
cmpsl
lahf
cmp
sub
neg
enter
bnd
jge
shrb
in
adc
insl
scas
mov
int3
xchg
jnp
test
loope
push
insl
rcll
jg
clc
mov
js
sbb
mov
dec
jge
das
loope
jmp
fs
sbb
add
out
xchg
ret
push
fdiv
jmp
add
jg
pop
lds
push
addl
jnp
push
in
adc
sub
test
or
add
sub
sbb
mov
js
dec
movsb
mov
das
push
adc
sub
adc
or
das
bound
jns
imul
add
mov
xor
stos
lret
pop
or
xor
xchg
jo
cmp
stc
filds
cmc
pop
xor
xchg
xlat
and
ja
in
fwait
pop
lds
inc
mov
sub
xor
add
pop
dec
jmp
lods
sub
popf
imulb
or
sbb
xchg
adc
inc
add
mov
mov
sbbb
jbe
sarl
in
add
pop
pusha
mov
xchg
jnp
cmp
out
lret
sbb
leave
mov
clc
sbbb
outsb
imul
adc
jp
lock
or
push
scas
mov
subb
insb
inc
daa
addr16
pop
insb
or
mov
imul
aaa
pop
cmp
jbe
cmpl
xor
pop
shl
push
sub
lods
mov
loope
cli
inc
sub
xchg
mov
add
mov
add
adc
push
mov
cmp
stos
pop
dec
sti
add
xor
sbb
jp
push
jae
inc
sbb
mov
adc
push
mov
mov
jo
push
inc
mov
inc
adc
pop
sub
pop
mov
cli
ret
hlt
call
dec
jp
and
mov
pop
loope
push
bound
sub
mov
mov
push
sub
and
pop
pop
adcb
mov
in
cmpsb
ds
cli
das
dec
popw
imul
stos
or
push
leave
pop
sub
imul
subb
mov
fs
cwtl
lret
add
and
imul
fs
sbb
mov
push
sbb
fistl
sbbb
dec
out
ret
shll
sub
lahf
shrb
push
mov
or
cs
sbb
xor
jge
pusha
test
inc
push
sub
mov
or
mov
outsb
pop
pop
shll
cmp
push
in
jbe
dec
or
mov
and
jmp
pop
lods
pop
sub
mov
cli
mulb
xchg
sti
sahf
inc
es
push
and
pop
add
and
inc
or
mov
jae
popa
or
jmp
mov
clc
daa
push
popf
and
int3
jp
jno
jno
and
xchg
fildll
and
jl
cmp
xchg
lock
dec
push
inc
add
or
clc
hlt
fistps
cs
mov
sub
inc
or
sahf
in
dec
movsl
rorb
push
add
xchg
test
ud2
stos
lret
inc
mov
push
mov
xchg
add
adc
outsl
add
inc
inc
out
mov
sti
loope
cmp
sub
mov
jmp
enter
jb
nop
mov
mov
fwait
lahf
sub
lock
jle
movsl
lret
inc
jb
xchg
dec
mov
inc
xor
shll
jmp
cmp
lret
sub
addr16
cwtl
pop
adc
aas
jmp
jmp
cmp
nopl
fwait
adc
add
lret
dec
pop
into
xor
ljmp
sti
xor
cld
scas
push
cs
xchg
and
or
xchg
push
mov
push
inc
filds
mov
mov
xchg
fisubrs
add
aad
add
inc
xor
adc
int
pusha
adc
adc
push
cli
cwtl
and
add
xchg
leave
xchg
push
enter
out
dec
scas
push
out
test
push
mov
mov
adc
pop
and
out
push
cltd
mov
lahf
and
test
faddl
mov
lahf
pop
fdivr
pop
sub
dec
inc
clc
add
sar
popa
test
pop
cmp
int3
mov
or
pop
rorb
mov
add
out
xor
and
or
and
push
lahf
or
and
mov
add
pop
mov
or
xor
ss
loope
xor
and
jg
aas
xchg
pop
xchg
rclb
shr
out
lock
xchg
push
push
jmp
xchg
cmpsb
jo
jge
sub
negl
inc
ficompl
dec
add
adc
inc
xchg
sbb
cmp
aad
pop
push
nop
shrl
mov
mov
pop
inc
or
dec
imul
out
xor
or
add
lea
pop
push
mov
es
ret
jb
inc
test
shl
ds
aas
and
mov
mov
and
gs
hlt
call
push
jmp
insb
xor
xchg
insb
push
mov
jmp
fmull
push
int3
xchg
and
pop
pop
xorb
adc
les
add
cmp
push
push
xor
add
subb
in
inc
pop
and
addl
jmp
jmp
and
push
sub
ret
mov
sbb
sbb
push
test
test
inc
icebp
pop
xor
ficompl
outsb
call
xor
push
cmpsl
push
dec
mov
add
mov
mov
das
push
sub
movsl
jmp
push
addr16
mov
push
imul
cmp
and
add
mov
add
in
xchg
fistps
roll
adc
in
or
out
inc
divb
out
mov
jo
daa
cli
pop
ror
add
idivl
or
add
inc
in
jae
icebp
test
xchg
xor
das
mov
and
loop
fwait
add
pop
lcall
insl
es
fldcw
loope
sti
stos
mov
push
add
andl
jo
cmp
std
fcmovbe
add
call
mov
rclb
add
push
scas
sub
push
pop
jl
loop
or
pop
sub
lock
push
int
pop
mov
jge
sbbb
ljmp
dec
jl
jge
mov
pop
mov
jp
pop
or
inc
lcall
pusha
aas
mov
add
jg
in
xor
jo
adc
pop
rclb
add
inc
mov
push
out
ds
push
leave
adc
dec
roll
fwait
pop
mov
sbb
roll
xor
daa
loop
aas
and
mov
push
shrl
inc
inc
mov
mov
or
pop
sub
push
adc
jmp
das
dec
jmp
sub
cmp
js
dec
sub
sub
push
jge
pop
out
adc
ret
push
gs
out
outsl
push
repnz
cs
adcb
inc
or
jl
or
push
cmp
xlat
mov
and
iret
out
stos
fs
sti
lret
dec
dec
clc
mov
mov
inc
pop
push
insl
cli
mov
imul
add
sub
testl
dec
sub
sbb
push
push
aaa
stos
jecxz
xchg
sbb
push
and
fnstsw
cmp
xor
xor
sbb
sub
dec
dec
pusha
adc
mov
and
lcall
loop
cmp
sub
lret
mov
add
pushf
imul
or
push
cmp
sub
imull
mov
pop
cmp
push
xor
sti
in
push
jb
shl
or
mov
or
xchg
daa
jge
sub
jmp
ljmp
dec
or
jmp
inc
fcoms
mov
add
scas
add
inc
pop
mov
push
mov
sub
aam
scas
push
inc
and
test
add
jnp
and
rcl
sub
and
popa
mov
rorl
shlb
cmp
ret
pop
pop
into
or
or
call
orl
sub
add
ds
adc
cmp
adcb
xor
sub
cwtl
out
stc
xchg
ret
shll
adc
cld
and
inc
sub
sbb
ljmp
adc
jmp
cld
xchg
hlt
jmp
daa
adc
mov
jne
jmp
pop
xchg
cmp
negl
pop
dec
xor
dec
adc
arpl
rcrl
sbb
cmp
dec
out
or
in
xchg
pop
pop
and
inc
push
aad
xchg
jp
cs
mov
insl
and
lahf
mov
cwtl
add
mov
popf
pop
jl
mov
push
neg
das
sti
mov
pop
mov
cmp
adc
cmc
inc
into
xor
mov
shl
pop
cmp
movsb
std
adcl
push
mov
xor
pop
mov
push
push
adc
xchg
in
sti
popa
push
and
mov
jae
mulb
add
sbbb
or
pop
repnz
call
popa
rol
ret
add
rcrb
aam
jno
inc
adc
add
lods
push
push
lret
loopne
popa
jmp
repnz
and
mov
adc
daa
push
rclb
dec
stc
xchg
dec
jp
and
and
xchg
mov
pop
sti
sub
inc
andl
sub
push
cmp
addb
out
push
test
sbb
sbb
imul
pop
and
ret
dec
or
jmp
sbb
xchg
sbb
push
shrl
dec
inc
mov
in
lret
js
add
fmul
loope
pop
fyl2x
xor
add
sub
cmpsb
pusha
ret
pop
pop
mov
notrack
mov
sub
in
mov
js
test
dec
shll
sub
cld
mov
in
push
push
mov
ljmp
add
in
push
scas
add
pop
repz
xchg
push
aas
push
dec
add
xchg
pop
aas
jns
push
xchg
leave
push
push
call
stc
inc
or
das
pop
sbb
hlt
ret
and
push
jmp
bound
jmp
rol
rol
in
inc
jo
mov
xor
fs
pop
jmp
imul
xor
jmp
push
leave
pop
dec
jmp
xlat
or
and
inc
push
cmp
pop
lahf
lock
bound
and
dec
cmp
popa
xchg
sub
lahf
push
jb
lcall
or
mov
fidivl
add
cld
arpl
inc
xchg
mov
xlat
mov
dec
sub
sar
addr16
insb
or
sahf
stc
dec
or
mov
mov
inc
cld
mov
xor
push
ror
sub
ffree
mov
and
xor
loope
outsb
in
jecxz
dec
popa
arpl
inc
jmp
jmp
ss
and
sarl
jbe
dec
mov
pop
dec
sbb
mov
shrb
pusha
cmp
push
dec
jmp
and
cmp
pop
adc
jmp
xor
pop
mov
mov
jge
popa
mov
xor
pop
or
sub
fcoml
loope
ss
pop
push
xchg
and
jmp
enter
xchg
outsb
push
hlt
push
pop
and
loope
inc
mov
jp
mov
notl
movsl
mov
and
push
addl
xor
jmp
or
mov
in
pop
dec
push
jmp
test
jl
xor
push
sbb
dec
add
hlt
pop
cwtl
aaa
pusha
add
sbb
xorb
add
or
and
sbbl
xchg
mov
adc
and
insb
jmp
int
or
fisttps
mov
and
iret
cs
in
sbb
sbb
stos
andb
sbb
testl
mov
inc
dec
pop
mov
test
scas
sub
sarb
xchg
repz
or
movsb
sbb
or
sarb
cmp
inc
lock
xchg
ret
or
mov
xlat
cli
cltd
pusha
jl
pop
mov
or
out
dec
dec
ret
mov
inc
xchg
add
stc
pop
sarb
negb
push
sbb
lret
jne
bound
sub
inc
jb
aam
pushf
popa
push
add
ja
push
adc
mov
cwtl
dec
xchg
sbb
mov
adc
in
push
or
ficoml
push
btr
loopne
mov
add
or
mov
cltd
in
xor
mov
iret
jbe
inc
cs
adc
inc
lea
mov
dec
cwtl
addr16
dec
adc
rorl
xchg
push
lods
jl
stos
pop
rcl
inc
pop
push
mov
push
push
sahf
adc
mov
cld
pop
add
dec
add
test
out
inc
sti
inc
or
outsb
xchg
cmp
jp
aas
push
add
addr16
dec
pop
arpl
neg
pop
sbb
xchg
ljmp
xor
mov
jp
or
xchg
xor
add
mov
pop
and
rol
jns
aas
dec
add
jne
pusha
pushf
cmp
xor
add
rorb
cmpsb
push
pushf
push
cwtl
dec
add
fwait
jnp
rolb
cmpsb
jg
cmp
sbb
jo
ljmp
aam
add
or
cwtl
test
add
dec
jo
inc
jg
xor
dec
jle
loope
icebp
lods
sbb
jmp
inc
adc
das
dec
mov
jg
xlat
pop
xor
popf
sub
push
cmp
mov
pop
repnz
les
inc
enter
xchg
ds
pop
pushf
push
daa
rcrl
testb
and
mov
sbb
dec
stos
mov
sub
mov
jg
push
dec
cmp
testb
add
pop
call
rorb
out
add
movsl
mov
in
jge
clc
xor
ret
sbb
lret
push
mov
push
arpl
dec
sub
cmp
pushf
pop
je
add
dec
imul
xor
inc
mov
int3
mov
jno
or
cmpsl
adc
jle
pop
jo
popa
xor
push
fnstcw
jge
jg
or
call
fildll
cmp
test
andb
adc
outsl
sub
lods
es
out
rolb
push
enter
mov
mov
push
mov
pop
iret
xchg
pop
sbb
bound
inc
push
std
cltd
cmp
jmp
xor
jg
pop
daa
jne
ds
xor
inc
add
or
pop
xor
in
movsl
pop
push
fmull
daa
dec
push
pop
add
negb
add
cld
andb
in
add
sub
add
stos
sub
rcll
sub
add
fs
out
and
leave
dec
shr
mov
and
pop
cltd
loop
repz
arpl
imul
mov
cmp
jl
push
outsb
out
xlat
mov
cmp
add
and
add
std
inc
dec
ljmp
cmpl
lds
stc
xor
pop
jmp
inc
pop
jle
daa
pop
sub
aaa
push
fldl2t
xor
pop
insb
insl
clc
adc
mov
xorb
jnp
add
or
push
ret
and
mov
dec
adc
adc
orb
pop
push
hlt
ret
push
iret
and
ljmp
adc
pop
call
int3
sbb
loop
icebp
lods
idivb
pop
gs
xchg
out
fbstp
xchg
jnp
aaa
movsl
out
int3
in
pusha
ret
pop
je,pn
gs
mov
push
adc
add
cmp
dec
mov
push
and
shlb
jmp
repnz
rcl
jl
popf
loope
mov
mov
sub
and
adc
mov
and
sbb
insb
or
movsb
sti
repnz
add
test
push
mov
jmp
negb
mov
sbb
sbb
bound
jmp
rolb
mull
fnstcw
ss
bound
pop
mov
xor
and
jmp
mov
ret
hlt
cld
mov
add
ja
neg
sub
inc
xchg
imul
popf
adc
push
or
sahf
adc
push
add
call
cs
clc
xchg
dec
sbb
and
popf
lahf
in
lret
scas
call
or
xlat
xor
xor
adc
repz
scas
adc
mov
jmp
push
dec
pusha
cmp
insl
mov
sub
add
js
mov
sub
pop
cmc
add
push
sub
lods
sbbl
leave
adc
jecxz
adc
fistps
xchg
mov
fcoms
dec
ret
and
or
hlt
pop
push
arpl
cs
mov
mov
jmp
pop
sbb
inc
jmp
ret
fisubs
add
pop
mov
mov
jb
popf
push
xchg
daa
jmp
mov
push
adc
sbb
ret
add
cmpsb
jnp
jns
jecxz
and
movsb
jns
sbb
es
mov
testl
std
pop
and
xor
add
push
test
pusha
hlt
in
or
out
xor
mov
add
not
push
mov
push
mov
inc
push
mov
hlt
fmuls
jecxz
ja
pop
xor
adc
xor
push
push
jmp
add
dec
add
jge
shrl
sbb
notb
mov
test
ljmp
push
mov
and
mov
or
js
jo
dec
pop
stos
mov
push
in
push
add
dec
push
pop
pop
dec
lret
mov
hlt
movb
enter
int
mov
bound
cmpsb
fmulp
and
fs
push
push
xor
jae
imul
dec
in
mov
or
push
adcb
or
gs
xor
dec
es
cld
sub
je
push
pslld
imul
or
pop
adc
jg
mov
pusha
pop
push
dec
cmc
mov
mov
inc
sbb
pop
add
ljmp
jb
xor
lret
sub
dec
lret
cmp
adc
cwtl
jle
add
ss
out
jbe
adc
push
sarb
xor
pop
jmp
lods
popf
push
mov
xorb
out
nop
jno
mov
push
and
mov
ret
shlb
adc
pop
xor
mov
inc
jo
fstl
push
jmp
sbb
ret
jl
add
repnz
or
inc
mov
jle
pop
pop
jl
leave
aad
mov
fucom
testl
cli
add
imul
or
xor
mov
aas
pop
notb
cmp
jo
sub
jae
and
mov
in
les
test
pop
push
push
icebp
imul
movsl
stos
loope
sub
cmp
push
rorl
mov
inc
pop
or
ret
std
push
add
add
lods
xchg
cmp
lcall
lret
mov
adc
sub
cmp
in
sbb
mov
add
loopne
cmc
and
xchg
mov
ljmp
jnp
xchg
pop
roll
lret
sub
dec
add
mov
mov
push
pop
or
ret
lds
cli
jo
sub
ret
insl
cwtl
pop
sti
mov
dec
sbb
sarl
orl
lock
es
or
pop
dec
and
aaa
pop
sbbb
outsb
aas
pop
test
jmp
pop
add
inc
es
ficoms
in
orl
sub
pop
sbb
sbb
sbb
jmp
pop
stc
push
jae
das
ret
adc
mov
xor
pop
pop
cmp
xor
inc
jecxz
scas
mov
or
mov
in
cmpsl
ret
jge
add
and
faddp
jmp
dec
clc
xchg
inc
push
daa
xchg
sbb
adc
bound
loope
repnz
adc
push
pop
ficomps
add
adc
jg
dec
cmp
or
add
lods
inc
out
jg
adc
jnp
pop
xchg
shl
dec
and
push
test
fistl
jecxz
jae
ret
push
mov
int3
or
gs
pop
mulb
mov
sub
pop
orb
xchg
xor
flds
push
inc
cli
mov
cs
inc
push
icebp
and
loopne
cwtl
pop
pop
loope
dec
das
sbb
and
fwait
adcl
pop
shr
jnp
push
xor
sub
or
pmuludq
mov
lods
sub
pop
and
xor
leave
cmc
mov
jmp
sub
and
aam
lods
shlb
or
xor
sub
push
in
adc
pusha
xlat
mov
jge
inc
jge
add
xor
std
shrb
cs
cmp
cmpsl
push
data16
jno
dec
pusha
pop
imul
ja
mov
cmp
in
movsb
scas
loop
adc
int3
test
xlat
pop
mov
cmp
mov
mov
and
mov
shl
push
jecxz
xor
adc
jmp
sar
fldcw
jp
mov
adc
ret
fs
andb
scas
jge
shl
jge
outsb
pop
pop
int3
xchg
adc
push
in
lahf
lret
pop
add
pop
clc
fisttpll
push
push
pop
imul
test
xor
mov
enter
loopne
repz
add
push
mov
sub
jmpw
push
dec
mov
mov
jo
daa
jno
pop
or
jecxz
fnstcw
insb
pusha
int3
lcall
mov
pusha
jb
pop
mov
inc
std
sub
enter
and
roll
pop
int
xor
add
pop
lock
and
or
xchg
pop
js
xchg
cmc
in
and
sub
jmp
arpl
xor
push
cmp
adc
addb
jecxz
push
add
leave
or
push
jg
mov
mov
sub
xor
jge
push
addb
add
jmp
les
mov
adc
adc
add
fadds
sub
push
sti
mov
ret
test
rolb
add
jge
and
cmp
pop
fnstsw
xchg
inc
out
mov
cs
in
out
test
add
cmp
or
stos
pop
in
adc
mov
pop
mov
mov
roll
js
ss
pop
dec
dec
push
sbb
pop
sub
mov
xchg
je
jp
loope
jmp
mov
push
mov
mov
xlat
addl
jnp
add
je
jmp
push
fstpl
mov
cltd
mov
adc
push
pushf
pusha
test
or
stos
fmul
test
add
loope
push
sub
add
inc
cmp
or
or
cmpsb
orb
sbb
pop
xor
pop
dec
xor
in
add
ja
aaa
ljmp
pop
sub
adc
das
push
in
jmp
push
mov
pushf
fiaddl
sbb
add
push
ffreep
aad
mov
sub
jmp
les
jmp
lock
mov
dec
or
sub
mov
xchg
xchg
fwait
xor
fidivs
jp
mov
adc
mov
dec
dec
push
mov
sub
mov
xchg
and
adc
clc
rcll
pop
sub
int
inc
and
lret
nop
dec
test
jae
int
mov
jae
dec
daa
pop
push
cli
and
push
jb
cwtl
pop
or
ja
fs
cmpsb
lds
jmp
mov
mov
incb
pop
test
int3
dec
or
jne
cwtl
dec
jp
and
adc
mov
pushf
jmp
and
decl
fmul
pop
or
mov
push
jge
push
add
inc
push
pop
cltd
adc
popa
pop
ret
and
fstl
mov
shr
adc
jg
and
ljmp
add
inc
andl
push
or
test
jmp
adc
cltd
xchg
stos
add
rcpps
pop
and
pop
mov
cmp
or
dec
jl
pop
fcoms
sub
fcoms
insl
inc
xchg
jns
sub
rolb
out
pop
out
mov
sti
rorb
cmp
imulb
ficomps
mov
pop
data16
jecxz
or
xor
jecxz
fcoms
popa
gs
dec
inc
mov
push
mov
rclb
add
jmp
ljmp
ja
ret
cmpsl
or
add
xlat
shl
andb
mov
push
fstpt
sar
lds
adc
sub
daa
loopne
mov
pushf
sbb
incb
outsb
sbb
mov
add
jmp
and
popa
jecxz
jno
push
sub
push
pop
push
dec
jge
mov
ds
je
mov
or
daa
add
sbb
stos
repz
not
cs
jmp
mov
popf
jg
xchg
add
xor
std
mov
cld
stc
push
adc
cwtl
mov
pop
test
jg
mov
cli
cwtl
push
dec
insl
push
push
adc
aaa
and
adc
xor
out
sub
dec
loop
pop
cli
aaa
jg
push
movsl
std
repnz
sub
xor
cwtl
pop
mov
inc
mov
cmp
mov
es
jmp
pop
mov
jge
sub
mov
shll
push
movsb
fldl
or
jmp
adc
or
and
push
mov
sub
ret
pop
push
dec
xorl
add
cmp
jne
clc
sub
sub
mov
subl
lahf
mov
sbb
xchg
je
mov
ss
test
movsl
sbb
cmp
pop
xchg
sarb
aas
add
cmp
jg
fbstp
daa
mov
fsub
sub
add
arpl
iret
sahf
std
into
pushf
cmp
add
in
das
in
in
xchg
cli
dec
enter
dec
push
dec
ficompl
sub
mov
inc
imul
popa
or
jbe
dec
jmp
mov
jae
mov
ds
dec
or
out
pusha
pop
and
xor
shl
push
sbb
pop
mov
add
addr16
neg
shl
push
icebp
push
std
shrb
gs
iret
mov
std
jae
or
push
adc
aam
inc
push
adc
popa
shlb
and
push
lock
mov
xchg
pop
cltd
subl
fsubs
sub
jnp
mov
addr16
and
jno
add
lret
lds
and
imul
loop
sti
mov
imul
les
pop
dec
xor
jne
ficoms
add
adc
jge
movsl
clc
mov
clc
js
sub
inc
jp
nop
daa
adc
scas
jo
mov
cmpb
mov
les
add
jmp
push
pop
pop
cltd
mov
and
push
push
adc
mov
and
cmp
jmp
dec
mov
xchg
push
adc
lret
mov
or
rolb
loop
xorb
add
xor
pop
dec
repnz
fcmovu
gs
mov
push
daa
stos
es
jle
push
jg
xorl
es
clc
pop
jmp
push
add
inc
and
cmp
push
xor
and
enter
jmp
filds
lods
mov
dec
scas
int3
or
movsb
mov
mov
shrl
jl
dec
pop
pop
xor
decl
push
sbb
or
xor
cs
out
sub
push
push
pushl
jmp
jle
idivb
testb
aad
ds
add
pop
test
daa
push
cmp
mov
jp
shl
push
push
rcrb
jp
ds
imul
adc
push
sub
adc
sarl
inc
popf
ficomps
sub
clc
inc
aaa
mov
pop
xchg
cli
push
rcrl
sub
push
cld
pop
movsb
jecxz
or
jmp
in
xchg
daa
iret
inc
dec
mov
and
xchg
sti
stc
xchg
pop
or
inc
push
add
sub
outsl
cmp
mov
out
loope
outsb
lods
dec
pop
das
xor
pop
nop
lret
call
xchg
mov
pusha
xchg
das
movsb
pop
call
fdivl
push
xchg
mov
inc
pushf
inc
and
out
mov
add
or
loopne
fstps
shr
cmp
mov
rol
mov
adc
stc
out
imul
test
mov
pop
popf
out
es
sbbb
add
mov
jmp
mov
rcll
int
cmp
push
push
or
wrmsr
jge
adc
pop
ror
cs
pop
adcb
repnz
adc
dec
dec
test
popl
and
dec
neg
mov
xchg
cld
loopne
dec
or
add
mov
push
loopne
leave
jmp
aad
pop
daa
out
push
jmp
addl
pop
or
jmp
cwtl
repz
stos
sub
mov
mov
push
ret
xlat
sbb
push
int3
xor
std
cwtl
jae
pop
add
add
or
inc
push
mov
rclb
pop
mov
add
ss
jg
inc
jmp
in
sub
inc
jnp
call
push
std
lods
das
adc
jmp
js
cli
inc
in
mov
dec
scas
movsl
iret
cmp
adc
cld
dec
fmuls
insb
or
mov
mov
push
inc
lock
inc
pop
dec
and
xchg
nop
cmp
sub
push
xchg
sti
mov
jp
and
bound
inc
fstpt
in
clc
aam
and
xor
jg
int3
xor
push
xchg
fnstsw
fwait
and
sahf
popa
jmp
ljmp
decl
mov
xchg
fstps
xor
cs
int3
add
pop
xor
dec
push
push
xchg
lret
xor
adc
cltd
out
pop
adc
popa
call
cmp
sub
scas
push
pop
iret
call
xlat
popa
xor
lret
testb
jp
pop
jmp
dec
adc
aam
daa
ja
add
scas
movsl
add
jecxz
push
mov
rorb
or
sbb
or
divb
pop
repz
or
pop
sti
mov
das
loope
push
mov
ja
movsb
xchg
sub
cmp
mov
dec
stc
mov
jl
xor
pop
adcb
mov
and
dec
dec
dec
pop
add
xlat
pusha
out
outsb
and
cmp
adc
adc
adc
stos
sub
add
pop
jp
xchg
ja
push
or
jmp
jg
jne
fists
mov
js
mov
cmpsb
cwtl
adc
inc
iret
sub
pushw
and
mov
cld
xorb
rcrb
add
cltd
dec
mov
adc
stos
sub
stos
stc
pop
pop
fmuls
cmc
pop
out
jmp
test
cmp
outsl
jg
pop
xor
or
js
dec
xchg
pop
aaa
jmp
push
mov
xchg
add
push
cld
add
lds
inc
test
and
xchg
add
and
mov
shll
daa
out
pop
inc
mov
cmpsb
sbb
test
data16
data16
or
dec
or
pop
rorb
push
pusha
or
xchg
cmp
xchg
nop
inc
sub
sub
push
sbb
fs
jl
call
jne
insl
es
mov
jmp
mov
or
fcomps
sbbb
cmp
lret
mov
pop
push
push
int
cmp
or
cmp
push
push
in
push
add
pop
shrl
pop
sub
sbbb
mov
dec
sub
out
xor
mov
push
adc
pop
jns
std
popa
push
and
cmpsl
xchg
cmp
lods
movsb
mov
outsb
jmp
or
aaa
ja
pop
sub
pushf
mov
cmpsb
adc
and
sbbl
pop
out
jmp
mov
sub
mov
dec
jbe
add
cmp
icebp
adc
stc
add
mov
push
jl
enter
cmp
sarl
sub
dec
cmp
and
mov
or
push
cmp
jle
enter
inc
mov
pop
lahf
jnp
dec
ret
pop
jns
jmp
sbb
cli
push
jbe
test
or
dec
mov
cmp
xor
icebp
movsb
push
push
sbb
repnz
pop
sub
mov
idivb
data16
int
inc
es
dec
jbe
push
loope
dec
cmc
inc
sbb
adc
shrl
inc
jb
addb
push
rclb
add
adc
pusha
or
aas
pop
inc
xchg
idivb
rcr
inc
lock
bound
mov
icebp
jmp
mov
sub
mov
inc
add
cs
and
sbb
sarb
stos
sub
dec
pop
lods
daa
pop
mov
enter
movb
adc
nop
les
push
pop
or
pusha
and
mov
push
out
inc
pop
jmp
add
rcrb
and
or
mov
ja
fs
sarb
add
pusha
bound
push
ljmp
pushf
hlt
inc
movsl
fisttpl
push
add
lea
mov
push
std
and
push
mov
push
decl
mov
rcr
test
mov
or
add
adcl
es
fadds
sbb
dec
addl
test
mov
int3
fstpt
or
push
lock
jns
push
push
sbb
fwait
scas
inc
lods
inc
test
pop
add
dec
loopne
jns
enter
insb
fcoms
lahf
lock
sub
sub
jge
inc
cwtl
sbbb
mov
popf
divb
mov
cld
cmp
mov
test
jae
test
cs
out
loopne
mov
mov
adc
mov
sub
inc
shlb
mov
push
mov
sbbb
sub
sub
add
inc
out
psubd
jmp
hlt
out
pop
jb
aaa
add
mov
nop
enter
xchg
adc
out
mov
les
pushf
inc
jl
adc
inc
cwtl
rcrb
stos
sub
dec
add
jb
arpl
or
mov
out
and
popa
jmp
lcall
lods
xchg
std
adc
mov
lret
mov
and
test
mov
mov
mov
movl
js
aam
and
rorb
adc
in
jno
aas
mov
jae
jnp
out
loopne
pop
shr
ss
mov
pop
stos
inc
push
push
mov
add
aad
call
jmp
inc
bound
push
push
push
push
inc
dec
js
mov
push
add
jmp
repz
stos
and
cmpsl
mov
mov
pop
nop
jns
cltd
xor
pop
jmp
jmp
xor
sub
mov
mov
cwtl
pop
add
push
out
jmp
cmp
pop
pop
lea
add
sbb
dec
rolb
xorb
jmp
jno
outsl
jmp
loope
sub
add
xor
fistpl
mov
mov
mov
mov
jmp
les
dec
dec
bound
std
fistpll
das
xor
push
fstpl
push
mov
inc
incb
mov
sub
push
push
pop
xchg
hlt
pop
test
das
stc
push
test
mov
xlat
shrl
push
cmpsl
pop
inc
popf
xor
pop
outsb
test
jg
test
aaa
and
test
dec
out
add
movsb
imul
add
out
and
or
inc
jg
inc
sub
imul
push
ja
jnp
das
fsubrl
leave
sbb
fucom
sub
lahf
pop
fcomps
out
jge
or
ss
les
xor
sbb
cmp
cmpl
inc
inc
out
das
xor
lcall
push
jmp
mov
inc
test
dec
scas
mov
test
add
mov
jmp
push
push
mov
and
jmp
cs
add
and
sub
add
rclb
test
or
fs
cmpsb
pop
mov
mov
fcoms
xchg
int3
std
xor
orb
arpl
and
out
fldl
add
inc
out
cmp
into
cwtl
nop
lods
adc
imul
and
loopne
push
iret
adc
movsl
inc
inc
mov
sbb
shlb
not
lret
dec
mov
std
ret
push
test
dec
cli
xor
pop
loope
imul
aas
push
shl
cmp
sbb
jmp
loop
and
xlat
sbb
jecxz
pusha
les
dec
jmp
stos
push
gs
push
adc
jl
cmp
or
adcb
dec
cmpsl
mov
lahf
in
out
out
int
ret
xor
test
pop
call
repnz
jmp
ljmp
addr16
mov
mov
mov
xchg
mov
jge
jmp
pop
sub
js
xchg
dec
mov
push
and
jnp
bound
pop
sub
xlat
xchg
mov
dec
out
sub
dec
jmp
das
cmp
jmp
movsb
daa
mov
xchg
adc
dec
mov
je
das
sub
aad
sbb
call
bound
mov
sbb
xchg
push
sbb
add
icebp
movsl
scas
cs
xor
mov
adc
jg
jae
or
pop
inc
xchg
and
imul
cmp
clc
movsb
dec
jb
push
push
in
mov
and
lds
xchg
sbb
or
inc
ja
inc
adc
lds
les
lods
int
push
push
pusha
xor
loop
pop
orb
test
inc
push
sarb
lahf
push
out
mov
pop
icebp
popf
pop
in
pushf
pop
xlat
push
cld
or
scas
js
mov
mov
popf
ljmp
dec
add
popa
inc
fwait
xchg
or
jge
je
test
lea
mov
fsubrl
bound
pop
pop
or
pop
mov
pop
sub
and
jmp
es
or
insb
rorl
sub
sbb
in
dec
imul
cmpsb
cvtps2pd
test
inc
jmp
sub
mov
push
fsts
push
mov
xchg
imul
add
mulb
push
sarl
imul
sub
in
xchg
jns
aas
scas
pop
dec
and
lret
repz
ljmp
add
sub
iret
rcrb
or
cmp
icebp
rcrl
push
push
xchg
xor
pop
shrl
add
sub
cmc
jmp
scas
mov
roll
sub
add
mov
pop
or
leave
je
scas
test
mov
dec
jmp
outsb
scas
mov
not
push
jo
and
add
std
cmp
inc
hlt
daa
outsl
sub
pop
pusha
xor
add
add
cwtl
add
aas
xor
or
pop
cmpsl
pop
jle
xchg
push
or
pop
dec
inc
add
jno
or
lds
cmp
stc
jb
mov
test
push
add
sub
out
or
fisubrs
dec
insb
lock
mov
add
lock
sbbb
scas
pop
cmp
ds
xchg
push
xor
or
leave
jmp
stos
mov
cli
mov
adc
and
and
mov
dec
loope
xchg
scas
mov
faddp
clc
add
fsubrp
inc
sub
xor
ss
pop
inc
scas
adc
fldcw
mov
sub
lret
push
or
das
fwait
xor
lahf
xor
daa
push
inc
jp
orb
jp
dec
mov
andl
shr
sarb
push
mov
orb
push
sbbl
test
dec
mov
cmp
cmp
divps
or
fld
rcrl
cmp
lea
out
imul
pusha
mov
addr16
mov
xchg
add
jge
ds
mov
sub
xor
sahf
cltd
ljmp
int
jmp
lret
jmp
fadds
push
cli
subb
out
popa
arpl
jp
xor
pop
add
fsubrs
fsubl
mov
std
dec
xor
jg
es
clc
dec
fimuls
and
push
inc
cmp
aaa
or
push
leave
sub
aam
movsb
and
test
dec
push
rolb
push
pusha
imul
cmp
or
sbb
adc
repnz
mov
sub
xchg
int3
insl
mov
xor
lret
in
and
or
dec
mov
shl
in
mov
lcall
mov
jb
fstl
push
sahf
pop
addr16
mull
imul
push
enter
and
inc
lock
vmovupd
mov
in
sbb
ret
jmp
addr16
cmpsb
jb
push
pop
pop
dec
jnp
imul
push
mov
mov
jnp
push
negb
in
insl
aam
jmp
nop
inc
mov
sub
insb
xor
stos
dec
imul
icebp
dec
and
pop
sahf
xchg
ret
mov
pop
cmc
ror
fldt
sahf
add
push
mov
or
mov
push
dec
mov
ret
cmp
sbb
mov
movsb
xor
mov
add
js
push
mov
rcl
dec
bound
adc
sub
std
rcrl
xlat
scas
shl
mov
ret
cmpsl
lock
or
dec
ljmp
ss
jmp
rcrl
push
sbb
sub
pop
and
lret
mov
mov
fdivs
jnp
or
stos
addr16
sub
mov
lret
fcomps
jb
pop
inc
cwtl
cmpsl
cmc
push
ljmp
adc
mov
inc
std
sub
mov
out
pop
sbbb
push
pop
out
ret
dec
add
add
and
jno
icebp
loop
adc
orb
jge
xchg
shlb
adc
jmp
fists
mov
and
aad
or
or
adc
ljmp
cmc
xchg
xor
mov
pop
popa
or
mov
sub
ret
cli
test
rorb
push
mov
in
les
in
pop
dec
or
jmp
pusha
popf
shl
das
fiaddl
pusha
push
pop
lods
sub
add
and
ja
scas
adc
inc
jne
jle
jge
sub
mov
in
fistl
add
xlat
imul
mov
jmp
out
sub
sbb
nop
test
mov
or
mov
and
outsl
xor
pusha
xor
xor
pop
sbb
sti
jns
jns
dec
bound
outsl
mov
lods
insl
in
les
and
std
jb
cmp
xchg
dec
test
mov
hlt
loop
fadds
push
xchg
rclb
cmp
lret
mov
jp
clc
sti
or
lods
mov
imul
lahf
jge
inc
jno
loopne
outsl
pusha
es
xor
push
sbbb
sub
and
fstps
add
pop
mov
push
dec
lcall
cmpsl
push
dec
mov
lods
fisttpll
repz
fdivp
not
mov
outsl
int3
mov
lahf
mov
fwait
sahf
push
or
sbb
icebp
mov
das
rcl
repz
adc
jecxz
test
sbb
jmp
stos
adc
lods
mov
xchg
xchg
pop
ljmp
pop
add
push
push
xchg
add
jg
das
lds
fs
ret
and
cli
in
pop
hlt
dec
mov
in
pop
jp
adc
dec
push
iret
or
int3
call
mov
loope
mov
push
sub
xor
sbb
cwtl
sbb
inc
bound
dec
adc
add
fstl
daa
gs
cld
and
push
mov
and
adc
lea
and
xor
mov
sahf
loop
jge
or
jge
push
es
xchg
repnz
in
jns
adc
sub
or
addr16
add
mov
mov
add
icebp
in
pop
mov
jg
mov
mov
pop
jmp
dec
mov
imul
pop
ljmp
push
mov
push
out
ljmp
pop
stos
mov
mov
jg
or
push
shrb
in
das
xor
jnp
loop
pop
pop
into
jge
aas
xchg
or
fists
jne
mov
cmp
sti
mov
pop
and
fldcw
mov
shl
add
xor
jne
stos
repnz
cwtl
mov
inc
pop
sbb
or
xchg
cmp
jb
out
mov
add
repz
jmp
leave
testb
pusha
inc
or
dec
cmpsl
inc
outsb
push
mov
mov
dec
adcl
divl
ret
hlt
jle
push
icebp
and
mov
adc
sbb
loopne
mov
fcoms
add
pop
pop
xchg
add
out
adc
or
fildll
fsubs
pop
mov
shlb
add
push
add
mov
mov
andb
fimuls
data16
enter
stos
cwtl
or
es
push
pop
in
mov
shl
mov
add
outsb
push
add
roll
fs
subb
push
pop
mov
push
and
xor
push
enter
pop
xor
and
pop
dec
sub
xchg
lds
ret
inc
dec
hlt
pop
or
xchg
andb
xchg
sub
call
add
ja
mov
cmpsl
inc
in
in
enter
std
or
pop
xchg
jo
xchg
push
hlt
pop
test
pushf
push
js
pop
sub
out
lods
jl
outsl
xlat
lock
packssdw
push
dec
in
test
adc
sub
pop
les
fnstcw
push
mov
mov
hlt
jge
lods
xlat
fisubrs
push
test
add
add
mov
cmc
es
xchg
inc
bound
stos
jge
add
add
jmp
arpl
pop
xchg
push
cmp
out
cmp
mov
and
jmp
dec
sbb
repnz
jmp
mov
out
mull
in
dec
xlat
stos
and
cmp
lods
jbe
pop
ljmp
daa
and
mov
xor
enter
hlt
jns
leave
add
out
test
xchg
add
push
jle
sbb
dec
rcrb
jo
jg
nop
pusha
mov
es
sub
pop
add
push
pop
and
outsb
cmpsb
popf
add
movsl
add
push
and
sub
mov
lods
insb
cmp
scas
nop
adc
lret
sbb
hlt
dec
dec
sbb
or
dec
and
pop
add
ljmp
jg
sub
ret
cmpsb
bound
sbb
jmp
pop
jge
daa
popf
js
pop
pop
add
cmp
or
data16
inc
ss
nop
lret
push
ret
pop
cmp
jmp
popf
jbe
xor
jmp
into
sub
jecxz
dec
pusha
arpl
in
push
mov
jecxz
cmp
and
rcll
push
aad
mov
xchg
out
adc
lcall
pop
jo
cld
pop
addr16
xor
popa
mov
adc
shll
jmp
pop
push
push
add
push
ret
dec
xor
jge
loop
test
push
dec
mov
cmp
das
and
dec
push
leave
clc
jo
pop
idivl
add
or
mull
add
pop
jmp
shlb
out
xchg
ret
leave
xorb
es
dec
std
lds
sub
or
pop
and
xchg
aad
aas
jne
push
jno
cmp
inc
jge
lret
outsb
dec
lock
jecxz
ret
repz
sbb
ficomps
push
not
mov
pusha
pop
je
push
repnz
add
cmp
and
jmp
cli
cmp
add
and
xor
xlat
ds
aad
pop
or
cmp
inc
mov
cmp
add
lcall
mov
sbb
in
sti
mov
test
push
or
les
push
punpcklbw
lahf
pop
adc
inc
out
mov
pusha
push
adc
cmp
aad
call
push
inc
mov
mov
sub
shl
push
sub
loopne
das
adc
loopne
mov
or
int
mov
test
dec
gs
add
insl
xor
fbstp
aad
inc
or
or
jge
cmpsb
push
mov
aam
mov
mov
mov
decb
dec
repnz
pop
in
inc
inc
aaa
add
xchg
inc
lods
in
or
sahf
mov
adc
and
sub
xchg
push
xor
add
xor
mov
mov
or
mov
clc
and
push
push
pop
xchg
inc
ret
add
and
fimuls
popa
push
push
mov
outsb
mov
xchg
xor
adc
push
outsl
nop
and
adc
adc
push
fs
sbb
adc
dec
neg
pop
add
insl
sub
or
adc
sti
inc
jnp
lods
inc
ja
sbb
mov
pop
xor
sub
or
pop
jmp
clc
or
pop
nop
push
cli
xchg
pop
sbb
sub
sbbb
mov
fisttpll
call
inc
mov
inc
adc
push
dec
icebp
sub
xchg
push
jae
and
jl
ret
lods
inc
loopne
pop
mov
or
aaa
not
rclb
pop
int3
cmp
imul
inc
or
xchg
push
stc
cmp
push
pop
inc
repz
insb
imulb
das
inc
stc
cmp
jns
pop
dec
push
sub
or
je
xor
sbb
adc
mov
sahf
lods
test
in
subl
xor
xchg
sbb
popf
dec
sbb
pop
adc
adc
and
push
mov
pop
mov
dec
adc
call
jle
or
in
je
in
jmp
and
mov
addl
pusha
out
or
sbb
and
push
mov
imul
stos
jecxz
sub
push
sub
and
addr16
hlt
pop
jbe
push
push
mov
adc
add
ds
out
add
je
mov
fistpl
pop
mov
pop
and
test
pop
jno
push
push
ds
jnp
test
mov
xchg
add
sbb
ret
fdivs
push
and
or
push
int3
jl
push
aad
add
adc
and
in
add
pop
push
add
jl
jge
ret
sbb
inc
adc
add
jp
pop
mov
push
pop
aad
jecxz
dec
js
mov
xchg
add
add
ds
into
hlt
out
cltd
dec
imul
cs
lock
cwtl
mov
jp
jl
and
daa
aas
adc
add
ficoms
fisubrs
push
mov
mov
xor
mov
jmp
push
test
sbb
popa
shrl
mov
or
xor
dec
pop
dec
dec
or
jae
outsb
sub
roll
inc
frstpm(287
ljmp
dec
orb
loop
inc
add
push
xor
cmp
sbb
dec
jp
push
push
or
adc
and
xlat
es
pmuludq
out
xor
jbe
bound
inc
sub
mov
pop
test
popa
gs
pop
mov
pop
jo
jns
mov
iret
and
sti
sbb
mul
sbb
fmulp
cmp
into
push
inc
in
fs
sbb
dec
sub
incl
outsl
jmp
dec
es
adc
inc
cld
jg
push
pop
add
cmpsl
adc
xor
push
add
sub
sbb
int
cmpl
jmp
arpl
xor
add
filds
enter
fcoml
xchg
rcr
shrb
fmulp
divl
popf
jle
add
push
cmpb
cmp
xor
fdivs
lds
add
push
mov
in
lret
mov
or
jp
loop
sbb
mov
pop
xor
insl
mov
in
stc
push
inc
fs
aaa
in
dec
push
mov
xchg
mull
in
push
mov
mov
push
das
push
fistl
jecxz
icebp
cmp
lret
out
sub
sti
mov
enter
bound
cwtl
add
xor
aas
punpckhwd
cmp
pop
notb
push
cs
call
jns
sbb
cmp
or
add
test
mov
repz
outsb
lds
inc
cs
in
sub
fiaddl
xor
imul
shlb
pop
out
cmp
mov
mov
mov
insl
in
sub
pop
fs
sub
lds
mov
mov
hlt
push
sbb
sub
lods
fs
cmp
test
fsubrs
dec
scas
mov
test
push
imul
jmp
push
sbb
in
inc
loop
add
shl
insl
scas
dec
pop
or
aad
or
mov
pop
pop
cs
cld
imul
dec
mov
insb
loop
movsl
jp
lcall
adc
mov
mov
add
repnz
push
mov
push
mov
and
popf
jecxz
mov
add
pop
fcmovbe
int
mov
or
inc
or
inc
sub
lods
loopne
push
push
cmp
add
cmpb
jmp
cwtl
rclb
inc
sbb
mov
adc
xor
rol
xchg
push
mov
js
das
pusha
jle
add
imul
mov
jns
and
repz
mov
jle
inc
movsl
out
adc
jmp
in
aaa
dec
icebp
pop
les
adc
scas
lea
sub
dec
push
xchg
dec
sub
mov
lret
mov
pop
insl
xchg
lahf
push
or
push
popf
dec
pop
stos
cmp
dec
or
or
mov
stos
jge
cmp
sub
test
cltd
stc
jl
lods
xchg
js
mov
push
cmp
pop
jmp
push
jle
mov
mov
sub
and
fcmovbe
dec
lds
loope
mov
lret
cmpsl
shlb
fldenv
cmp
mov
and
and
sahf
sbbb
mov
cs
fadd
iret
gs
adc
mov
pop
je
mov
jbe
xchg
pop
push
cmp
out
mov
jge
cmp
std
iret
jo
sub
add
add
xchg
rcrl
decl
loop
or
dec
xor
adcl
sbb
push
cmpsl
stos
push
pop
xorb
in
push
mov
rcr
jnp
outsl
mov
clc
dec
mov
stc
add
mov
scas
repnz
pop
lahf
rcl
add
out
jnp
or
mov
push
or
mov
and
pop
jmp
push
pop
cwtl
in
in
pop
jae
cvtdq2ps
lret
roll
cld
ds
hlt
rolb
dec
sbb
push
loopne
clc
push
jmp
mov
and
xor
sbb
loope
jl
add
and
push
fcoms
mov
sub
pop
xchg
sbb
jmp
push
lret
outsb
add
mov
incb
mov
sti
jl
pop
mov
in
pop
xchg
enter
testb
rcr
mov
out
andl
int
divl
in
pusha
jb
std
stc
ss
sub
or
add
add
pop
jle
push
movzwl
mov
out
mov
ffree
cwtl
scas
mov
lret
add
sbb
dec
sub
icebp
test
enter
add
push
neg
push
push
jg
das
dec
ficoml
mov
repnz
loop
jle
xchg
pop
and
jmp
lret
loopne
xchg
pusha
cld
jmp
pop
xor
inc
mov
jmp
repnz
clc
int
scas
mov
sub
jg
not
lahf
xchg
dec
insl
mov
mov
xchg
test
jmp
stos
aaa
sub
cmp
pop
movsb
rol
jp
movl
inc
cmc
les
pop
pop
dec
outsb
gs
aad
mov
aas
fwait
sub
jge
ds
lods
mov
je
mov
xor
add
xor
jo
add
mov
xor
pop
and
sub
or
pop
fsubrl
pop
push
sbb
fbstp
in
pop
loopne
clc
out
or
add
test
orl
pop
xor
sub
pop
xchg
pop
and
push
or
rolb
dec
jb
or
dec
out
cmp
cli
and
outsl
jg
xchg
shrl
xchg
cs
cli
sub
lock
movsl
or
push
enter
addb
xchg
push
subl
adc
mov
push
in
cmp
hlt
out
call
xlat
cmp
mov
addb
dec
and
sub
xchg
pop
xor
vpshaq
mov
dec
xchg
push
ds
push
daa
dec
mov
dec
loopne
add
adc
and
dec
fsubrl
pop
popa
es
cmp
mov
repnz
fs
adc
std
cmc
cmp
cmp
call
jae
aam
or
pop
cld
fsubrs
inc
pop
scas
pusha
or
ret
data16
and
shr
push
mulb
add
out
dec
or
test
or
sub
sti
xchg
insb
dec
faddl
out
pop
jae
jge
imulb
sbb
loop
sub
adc
cmpsl
out
repz
lods
ret
mov
mov
mov
sub
xor
xor
dec
or
das
inc
div
jnp
fsub
mov
daa
xor
dec
mov
mov
inc
std
add
sub
add
shlb
sbb
xchg
push
repnz
adc
in
pop
and
add
cmc
into
rcrb
std
lds
data16
fiaddl
orl
stos
xor
aad
clc
sbb
or
xlat
push
add
call
add
enter
rorb
adc
icebp
popa
adc
add
jns
push
mov
cmp
and
cld
mov
outsl
jbe
or
cs
in
mov
mov
rcrb
pop
repz
pop
add
test
push
popf
inc
sti
outsb
adc
cmc
push
jmp
cli
jo
and
xor
add
test
sub
jnp
lcall
and
add
mov
inc
dec
lea
xchg
test
inc
or
test
iret
push
call
popa
ljmp
mov
xor
lea
push
std
push
add
sub
mov
scas
sub
jno
imul
push
add
jl
add
jecxz
inc
jge
add
sbb
out
cmp
mov
stc
sbb
mov
push
aad
add
push
out
loop
out
add
int
mov
add
cmpsl
in
fistps
lret
mov
sub
cmpl
sahf
adc
and
or
mov
cmp
cmp
inc
pop
push
push
xor
mov
or
ss
stos
inc
pop
sub
sbb
int
rcr
adc
jne
mov
mov
mov
jo
mov
aam
jecxz
push
push
repz
mov
cmpsb
popf
mov
jnp
add
mov
movsb
lret
jl
mov
xor
xchg
lods
mov
dec
xchg
mov
push
sbb
push
shll
mov
and
les
ds
pop
pop
repnz
add
push
add
rorl
hlt
lret
xchg
aas
imul
mov
sbb
jne
mov
dec
jl
jno
pop
subl
adc
ds
add
push
insb
lcall
addl
and
cmp
add
loopne
call
add
mov
xchg
add
in
mov
outsb
add
sahf
jg
add
mov
mov
movsb
sbb
outsb
xchg
test
dec
push
xor
add
mov
or
sbb
jl
cmpsl
adc
ret
lods
or
test
ja
cmp
test
sub
divl
inc
adc
and
into
aam
out
les
ljmp
add
inc
loop
mov
sbb
pop
or
sub
lret
pop
stc
add
pop
inc
insb
adc
call
into
pop
sub
dec
xchg
notb
test
std
add
mov
jp
push
add
lds
addr16
imul
fucomp
add
pop
clc
xlat
xchg
je
add
sbb
rcll
or
in
lahf
and
push
stos
std
loopne
cltd
sbb
ret
pushf
adc
sub
cmp
aas
mov
sti
cmp
add
xchg
inc
jnp
popa
sbb
inc
inc
and
and
sbb
shlb
or
jns
test
int
lods
mov
or
enter
add
cmp
enter
imul
adc
or
int3
mov
or
sbb
imul
addr16
adc
xchg
jbe
jb
pop
cld
add
jp,pn
inc
out
out
std
mov
mov
mov
imulb
inc
subl
popf
jae
ja
mov
add
sub
in
fcmove
lock
mov
pop
cmp
enter
cwtl
out
mov
mov
jbe
cmpsl
or
adc
xchg
pop
sbb
push
pop
add
add
movsl
aas
push
inc
add
shr
jge
push
pop
adc
ss
jne
pop
add
lcall
fdivrs
andb
xchg
adc
sub
add
gs
xlat
xchg
cmp
push
add
mov
add
testb
adc
add
les
testb
jl
mov
dec
push
cmp
call
fwait
inc
ltr
repz
fcmovu
xor
xchg
testl
subb
dec
ljmp
add
push
sbb
jecxz
sbb
iret
add
mov
mov
jge
lea
lcall
mov
mov
xchg
ja
mov
cmp
enter
adc
mov
rolb
fnstcw
xlat
into
pop
std
lds
popa
iret
fs
xchg
js
mov
scas
lret
mov
js
lods
pop
add
or
inc
outsl
cmpsl
add
mov
stos
add
xor
add
inc
pusha
push
xor
xor
add
std
sub
inc
aas
in
and
cmp
loopne
push
aad
pop
imul
and
mov
mov
add
cli
movsl
adcl
pusha
push
cld
rcl
add
stc
push
jge
push
lahf
lock
loopne
add
stos
out
add
add
xchg
xor
into
rep
xor
cmp
loopne
cld
pop
xor
rcl
ja
add
clc
dec
insl
xchg
adc
push
flds
jns
pop
xor
andl
cmpb
rorl
loope
inc
adc
jge
dec
out
stc
add
sub
in
or
mov
add
hlt
call
push
cmp
out
std
xor
cwtl
cmp
arpl
push
inc
outsl
adc
pop
jmp
shll
aaa
and
and
outsb
sub
add
popa
pop
pushf
mov
lods
adc
jae
and
fs
sbb
dec
scas
add
inc
xchg
push
dec
enter
cmp
cmpps
mov
and
pop
sub
aam
xor
dec
es
in
and
out
mov
repnz
arpl
or
sub
mov
mov
add
fstpl
daa
adc
shrl
push
jp
add
adc
adc
mov
out
hlt
add
aam
adc
les
cmp
jbe
lcall
jnp
adc
lods
or
popf
subb
cltd
mov
fs
inc
lds
dec
xor
arpl
jns
sbb
jno
ljmp
mov
andb
dec
inc
sub
push
xor
or
insl
mov
mov
cmp
or
mov
mov
into
int3
push
dec
mov
xor
aaa
push
cmc
sti
add
repz
loope
pop
and
das
pop
dec
movsl
add
xor
nop
sbb
adc
leave
xchg
add
mov
sub
or
lea
iret
add
add
popf
xchg
adc
lea
movsl
inc
popa
cmp
cmp
add
push
les
add
inc
hlt
xor
test
mov
aas
cwtl
ljmp
mov
testb
cmp
mov
mov
add
pop
loopne
add
add
adc
jp
jno
sub
dec
fnsave
cld
dec
add
mov
pop
jg
mov
adc
ljmp
mov
add
aam
movsl
add
dec
mov
pop
nop
cli
cmpsl
cwtl
add
add
lret
cs
imul
cmp
cwtl
mov
loope
flds
mov
mov
pop
add
scas
add
icebp
cli
mov
cmp
test
add
mov
mov
iret
adc
xchg
add
push
mov
dec
aad
xchg
int
xchg
pop
adc
push
cmp
add
rolb
jp
or
sbb
orl
fs
icebp
xchg
sbb
xor
cmpsl
sbb
daa
or
fcmovnb
mov
xor
out
sarl
add
sbb
or
dec
adc
xchg
push
add
dec
in
pusha
mov
and
rolb
fnstcw
test
adc
pop
and
imul
into
add
pop
push
add
push
add
scas
mov
add
mov
ret
ficoml
mov
add
dec
add
push
cmp
add
daa
inc
push
push
sbb
mov
push
flds
push
cwtl
pop
mov
dec
mov
outsb
mov
add
ja
neg
mov
inc
add
dec
mov
add
sub
jge
repz
addb
addr16
aaa
xchg
xlat
add
aam
lahf
pop
jo
sub
test
push
vmread
add
into
in
in
loop
test
gs
cmp
leave
ficoms
jb
ja
add
test
out
fwait
adc
cmp
xor
jp
imul
pop
aas
jno
ficoms
fadds
ja
pusha
clc
insl
sub
add
mov
sub
mov
push
add
mov
dec
mov
add
ret
data16
in
add
gs
adc
jbe
push
aad
dec
and
loope
fistps
loopne
outsb
stc
sub
mov
rcll
add
ss
in
jnp
add
cmp
cmpsl
push
push
cmp
pop
adc
pop
add
stc
adc
add
cmp
scas
or
push
cmp
add
fwait
jb
push
aad
or
hlt
shrl
lcall
js
or
addl
loop
mov
aam
adc
cli
ret
adc
xchg
or
add
lcall
jle
iret
fiaddl
push
jno
adc
lock
shrb
cmp
andl
sbbb
push
leave
lcall
idivb
lcall
popa
inc
inc
jns
add
stos
sub
lock
mov
lds
inc
das
lret
insl
push
or
pop
dec
imul
jmp
les
mov
and
push
fcompl
inc
xor
add
xchg
add
xor
loope
sbb
mov
or
xlat
ljmp
add
add
add
add
scas
in
mov
mov
push
push
cs
adc
mov
and
ss
or
out
adc
test
js
mov
imul
jmp
jae
push
adc
ror
pop
aad
subl
in
jo
add
dec
xor
jb
jo
stos
lea
fcompl
mov
xchg
andb
add
fldt
push
pop
mov
call
add
insl
lds
xorb
jmp
into
jl
push
add
push
aam
adc
test
pop
cmp
hlt
xlat
jg
mov
arpl
mov
in
ret
clc
cwtl
enter
call
sub
xchg
push
xor
sti
mov
test
sbb
sbb
les
sub
add
lcall
pop
mov
cmpsl
inc
pop
mov
sub
cmpb
add
mov
add
and
inc
add
push
repz
pushf
mov
test
xchg
xor
and
sub
fiadds
sub
cmp
jno
add
ljmp
inc
and
adc
ljmp
call
push
sub
inc
nop
xor
cmc
mov
sti
add
sub
dec
add
negl
add
ret
cmp
popa
xchg
lret
mov
sbb
in
dec
jg
push
push
mov
inc
insb
push
or
push
sub
jne
add
adc
cmp
add
pop
xor
add
imull
das
xchg
into
js
dec
loopne
movsl
add
stos
push
and
movsb
mov
int3
loopne
add
in
adc
add
mov
mov
push
add
adc
and
leave
xlat
cmpsb
mov
add
mov
ret
mov
mov
adc
inc
or
mov
idivl
or
push
bound
xor
in
or
cs
int
lcall
jge
and
adc
leave
add
and
pusha
add
sub
dec
les
loopne
ror
ja
fldcw
shll
leave
filds
dec
gs
sbb
push
push
xchg
test
or
scas
stos
inc
push
lcall
or
dec
cmp
add
mov
push
add
dec
adc
mov
aam
xchg
pop
mov
add
jns
rcrl
popf
cmp
xor
add
scas
and
jae
push
jb
fbld
in
das
gs
and
lds
popf
testl
incb
jge
adc
aaa
int3
add
loopne
mov
sbb
sub
xor
fwait
mov
xlat
add
push
in
insb
lret
cmc
daa
aaa
mov
cltd
xchg
cs
inc
outsl
sbb
mov
jno
pop
adc
mov
mov
push
aas
push
cmc
jge
add
jl
pop
push
or
stos
dec
mov
pop
faddp
insb
sbb
ljmp
mov
and
jne
xor
xchg
stos
mov
push
add
push
dec
std
cs
add
xor
cmp
ss
jne
cmp
add
shl
shrl
xor
xor
fsts
orl
adc
push
xor
ret
shl
push
sub
add
aam
lea
ffree
push
pop
add
es
or
add
jl
add
pop
mov
mov
aad
cmc
pop
in
inc
nop
daa
jb
or
cmp
pop
repnz
add
mov
imul
sub
mov
and
jo
nop
sbb
xorb
fbld
jge
ret
xchg
jl
inc
add
in
mov
push
push
jns
pushf
push
xor
adc
ret
lret
sub
addb
rclb
mov
adc
sbb
loope
cld
and
add
loopne
popf
lcall
mov
push
adc
out
adc
pop
xchg
sti
cmp
fwait
xchg
cmpsb
imul
std
add
xabort
mov
mov
rcl
push
rcrb
add
fsts
pop
repz
mov
cmp
push
inc
les
xchg
adc
int
jmp
mov
cmc
jno
add
out
enter
int
add
adc
outsl
push
loop
dec
add
les
orl
sti
in
aad
pop
add
push
xchg
inc
sub
xlat
fcoms
add
adc
xor
mov
mov
mov
inc
add
pushf
data16
les
aas
ds
enter
dec
imul
fidivrs
jne
hlt
shll
pop
pop
test
inc
fidivl
lock
js
sbb
in
rcll
jg
add
cmp
push
push
cmp
lock
mov
jecxz
mov
add
push
pop
rcll
adc
aas
test
or
cmc
pop
mov
cmp
pop
push
jns
mov
lret
sahf
pop
xorb
and
xor
sub
shll
pop
movsb
add
sub
and
jge
lock
and
xchg
add
mov
pop
shl
jbe
push
cmp
scas
stos
les
mov
adc
lods
mov
test
inc
pop
icebp
lret
add
lea
add
cmp
negb
mov
add
add
pop
cmpsl
ret
lret
sbb
testb
sub
dec
ds
mov
push
jo
inc
xchg
sbb
out
shlb
mov
pop
push
add
pusha
lret
testl
pop
jae
fnsave
jecxz
jns
addl
pmovmskb
xorb
mov
or
inc
pop
xor
jns
test
adc
lcall
jo
into
push
pop
push
inc
pop
sub
dec
and
nop
add
sub
aad
inc
jbe
ror
cs
xor
sbb
jnp
lret
pop
xchg
ret
es
orl
push
in
incb
sbb
leave
adc
out
lock
or
xor
pop
imul
je
or
js
add
sub
jo
lock
sbb
sub
loopne
repnz
push
sub
add
sub
sub
addl
adcb
push
xor
cli
cmp
jnp
daa
shll
sbb
aas
sub
ret
pop
addr16
jg
rcrb
mov
or
push
xor
or
pop
or
jl
inc
sbb
in
adc
xor
inc
and
loope
js
sub
mov
daa
jns
or
rorl
xor
sub
pop
les
stos
mov
inc
sub
fwait
sbb
push
push
lret
sub
inc
pushf
mov
mov
xchg
insb
sub
or
add
in
lds
jb
js
sub
and
in
pop
lods
mov
jge
bound
jl
push
cmp
dec
fiaddl
das
add
sbb
insb
push
xchg
mov
or
and
in
sbb
pop
add
sub
and
pop
push
mov
add
rclb
rcll
sub
clc
and
xor
nop
dec
inc
stc
xchg
enter
cmp
mov
or
imul
leave
insl
shlb
sbb
xor
fs
jns
adc
loopne
jb
adc
or
mov
push
out
mov
das
jl
mov
clc
mov
cmpsb
mov
loopne
sbb
es
inc
sub
lock
jge
dec
jnp
stos
and
adc
jl
cmp
es
inc
inc
dec
push
andb
xchg
and
or
adc
sub
inc
push
sbb
dec
pushf
mov
gs
icebp
inc
or
xor
xchg
adc
cltd
fcomps
lea
push
adc
lock
jmp
xchg
jo
test
sbbl
push
mov
in
lahf
and
ret
xchg
jecxz
addb
leave
xor
in
jnp
stos
or
push
aam
dec
add
lret
jno
xchg
or
mov
aaa
in
or
and
sbb
mov
mov
enter
xor
sub
add
sub
add
mov
xchg
xchg
inc
jno
cmp
adc
cmp
in
call
mov
jns
je
cmp
adc
loope
xor
add
cmpsl
ja
sbb
xchg
test
fwait
aad
outsb
pop
mov
lods
inc
mov
fsubl
scas
sbb
mov
add
xor
xchg
rcrl
pop
add
das
outsl
ss
push
ds
arpl
inc
shlb
fsubrl
pop
xor
aas
call
and
les
xchg
nop
jl
aad
add
jb
xor
es
fdivs
mov
cwtl
or
loope
ret
imul
mov
out
add
pop
sbb
repz
mov
or
mov
mov
aaa
pop
fadds
sbb
cmp
nop
pop
ret
pop
movaps
sbb
popf
inc
popa
dec
out
jbe
movsl
nop
fsubr
sahf
inc
mov
pop
push
sub
push
or
sub
bound
test
addr16
inc
inc
in
jg
add
lcall
xlat
gs
sbb
inc
mov
lahf
xchg
mov
pusha
jno
xchg
mov
imul
adc
add
sub
push
in
in
xchg
repz
dec
jge
movsb
jl
daa
inc
loopne
push
repnz
fisubrs
cmp
das
jnp
aaa
mov
pop
add
fsubrs
hlt
add
cmpb
pop
roll
mov
imul
lcall
loope
jg
leave
shr
sbb
or
out
inc
fildl
add
push
pop
je
jns
add
adc
and
push
inc
in
pop
mov
inc
mov
jb
daa
sbbb
bound
pushf
adc
mov
mov
jl
add
stc
call
cmp
pop
pop
sub
add
sbb
cltd
cmpsb
mulb
cmp
and
and
setge
pop
loopne
inc
lods
push
insb
hlt
stos
jl
push
sub
add
loope
cmp
cs
pushf
scas
jb
xor
nop
sub
push
lret
icebp
push
adc
adc
sub
push
push
iret
dec
lods
adc
push
hlt
sub
inc
out
fsubrs
fwait
xor
aam
jmp
push
and
mov
aas
jns
adc
xchg
mov
lahf
push
mov
jge
loopne
pop
into
and
pop
test
add
push
push
mov
rcrl
fbstp
xchg
cmp
mov
adc
rol
lods
mov
dec
scas
ficompl
sbb
cwtl
cmp
xlat
adc
inc
lock
loopne
pushf
adc
dec
and
fldt
iret
in
jns
sbb
mov
xor
es
shrl
jp
mov
fldt
add
add
ljmp
and
push
loopne
push
stc
fs
xlat
das
outsb
and
fstl
pop
add
fildll
adc
mov
ljmp
es
adc
xchg
flds
and
fbld
push
pop
adc
add
fldln2
stc
or
cmp
inc
push
mov
cmc
xchg
add
fs
adc
jne
lret
dec
loopne
and
dec
mov
inc
loope
inc
push
movsb
fiadds
mov
lods
and
jbe
add
jmp
adc
fwait
in
add
sub
inc
pushf
dec
pop
cwtl
jb
add
jl
out
xchg
dec
inc
dec
stos
jo
and
shlb
sbb
add
shlb
push
sub
and
and
scas
push
jl
out
ljmp
sar
sub
xorb
adc
mov
mov
push
fcoml
out
xchg
lods
lret
iret
rol
lcall
mov
subb
insb
or
into
push
hlt
sbb
pop
mov
add
in
cmp
pop
enter
rorl
adc
cmpsb
push
arpl
add
dec
adc
rclb
test
lods
lock
adc
dec
or
cwtl
adc
enter
shlb
sub
test
lds
jecxz
outsb
add
addr16
jo
test
and
push
insb
loopne
lds
fwait
cmpsb
push
mov
sub
lds
xor
and
push
lahf
sub
les
ret
cmp
push
loopne
ss
enter
enter
sub
pushf
in
add
scas
mov
cmpb
jge
gs
xor
adc
mov
add
in
fldl
in
fldenv
jo
add
pop
xchg
cld
xchg
hlt
and
bound
loope
mov
clc
test
adc
ret
xchg
add
and
sti
xor
fs
fnsave
or
cmc
arpl
lock
cli
imul
je
cwtl
ror
arpl
in
int
mov
adcb
push
add
int
mov
or
scas
mov
mov
rcl
jns
dec
repnz
add
cmpsl
push
test
jo
xchg
mov
mov
jp
loopne
scas
sub
fwait
inc
outsb
jecxz
les
xor
mov
aaa
test
jmp
mov
rorl
in
ss
ljmp
dec
js
loop
push
cmp
add
jns
jae
cmpsb
in
idivb
xchg
dec
stos
push
and
call
pop
xchg
cs
test
pop
rcll
imul
jns
jle
jno
or
jno
movsb
sbb
push
cmp
jnp
fs
cwtl
mov
sub
lds
ret
adc
test
sub
nop
ss
test
sahf
arpl
cmp
mov
xchg
sub
sub
subb
movsb
or
cld
mov
sub
mov
pusha
leave
mov
test
push
mov
out
fidivrl
cmp
mov
int
xor
mov
fists
test
sbb
push
push
jnp
test
or
jle
add
fsubl
sbb
rcrb
loopne
pop
push
add
subl
jnp
pop
sarl
out
add
inc
loope
cs
and
add
or
call
add
bound
cwtl
sub
mov
paddusb
arpl
test
jp
or
and
mov
repnz
pusha
push
add
or
test
jns
mov
mov
jnp
fdecstp
xchg
jae
mov
jle
lcall
out
in
xor
rorl
mov
xor
insl
pop
loopne
sbb
cmp
or
and
xor
push
push
xor
mov
add
lock
jns
nop
add
adc
xor
cld
and
mov
xchg
fistpl
out
lret
xor
add
int
fcoml
sub
mov
hlt
push
add
push
lret
push
insl
popa
mov
movsl
out
add
cltd
in
add
xchg
popf
mov
movb
mov
inc
xchg
xchg
cmp
inc
int3
push
and
popa
cmp
lret
add
mov
mov
pop
lret
add
cmpsl
jae
mov
inc
and
scas
mov
sub
add
push
pop
xor
testb
imul
add
nop
mov
cmp
fs
std
rolb
xchg
adc
rclb
sbb
sbb
cld
orb
mov
pop
push
pop
cmpl
arpl
outsl
inc
int3
cmpb
sub
repz
in
lock
sbb
testl
fcoms
mov
pop
xchg
cmp
add
and
mov
jo
sub
in
add
fisttpll
mov
push
sbb
add
ja
dec
add
xchg
lods
or
cwtl
and
xor
xchg
pop
push
xor
call
add
jp
mov
lret
jl
add
mov
movb
push
push
jg
or
xchg
mov
hlt
add
sbb
int3
movsl
data16
push
cmc
sbb
popa
cli
cmp
sub
or
push
incl
into
xchg
add
mov
notb
and
incb
sbb
add
fadds
dec
shl
sub
add
data16
incb
je
add
in
add
push
and
add
imul
jne
mov
stos
add
add
mov
lea
xchg
pop
repz
and
into
enter
idiv
pop
repnz
inc
sysret
lea
push
jnp
pusha
xor
mov
mov
fsubs
add
shrb
aas
xchg
stc
addl
and
insb
jae
add
mov
data16
aaa
cli
fildll
hlt
out
mov
push
mov
mov
lea
roll
dec
fadds
repnz
popf
xchg
fcompl
inc
inc
add
dec
add
sub
cltd
sub
sbb
insl
mov
cmovl
add
push
dec
inc
push
add
jge
jnp
lods
push
inc
out
inc
add
imul
repnz
add
aad
in
lret
test
push
pop
loop
fs
daa
movsl
sub
xchg
add
xchg
sbb
std
pop
and
mov
dec
cmp
popa
sbb
int3
xchg
adcb
sub
add
lahf
data16
add
str
xor
and
add
repnz
inc
out
jbe
test
loopne
add
je
frstor
pop
test
dec
psrad
pop
cmp
mov
loopne
adc
test
aas
mov
lock
daa
incl
add
iret
idivl
lds
push
xchg
xor
out
add
jbe
dec
rorl
lods
icebp
loop
clc
dec
and
xorl
ja
test
ret
pop
adc
dec
dec
inc
and
into
out
mov
testl
ret
clc
jnp
xor
ret
xor
or
inc
roll
and
push
call
pop
fwait
dec
mov
jae
testl
pop
push
js
and
mov
inc
test
xor
jb
cli
push
xchg
cwtl
jo
pusha
mov
nop
cmp
addl
and
xlat
xor
cmc
nop
sbb
add
mov
int3
pop
mov
push
ret
iret
incl
hlt
mov
les
adc
xor
call
outsb
pop
adc
inc
adc
rcrb
rcrb
add
dec
push
lods
ucomiss
xchg
adc
into
es
sub
or
cwtl
push
stos
and
add
ss
aam
or
in
push
int3
push
push
outsb
in
sbb
call
mov
and
test
les
lret
aaa
fldenv
mov
das
std
stc
push
in
add
gs
cmc
add
imul
mov
out
vaddsubpd
lcall
mov
push
repz
aaa
add
pop
int
scas
pop
mov
sar
xchg
fcomps
jno
adc
add
rorl
add
mov
add
xor
xchg
dec
rorl
jg
add
pop
je
cmc
icebp
and
lcall
ja
and
stos
pop
mov
pop
inc
mov
flds
xor
add
fistpl
or
mov
into
dec
add
sahf
mov
pop
cmp
sub
loop
ret
fisubl
ds
hlt
fs
call
and
jb
aaa
sbb
dec
ljmp
xchg
test
dec
pop
test
pusha
xorb
in
add
pop
push
jb
dec
pop
add
jp
pop
leave
push
xor
js
adc
inc
test
arpl
push
scas
es
sbb
jns
mov
jae
std
sub
and
mov
je
mov
inc
and
arpl
insl
adc
xchg
addr16
add
mov
test
in
mul
add
push
sbb
or
jb
mov
imul
inc
hlt
xchg
sub
push
add
add
mov
xor
roll
dec
sbb
cmc
jmp
inc
push
sub
push
push
xorb
test
add
lea
push
mov
out
mov
fidivrs
jae
cmc
push
cmp
xor
xchg
test
mov
cwtl
add
jb
push
rcrl
and
xor
out
ljmp
adc
adcl
loop
mov
icebp
xor
xor
inc
pop
ds
cmp
daa
adc
fdivl
mov
jb
adc
nop
outsb
or
add
je
stos
sbb
push
leave
push
dec
sbb
push
ljmp
icebp
push
push
and
gs
loope
cld
mov
sub
lods
addb
dec
ss
iret
adc
or
test
rcrl
cmp
ret
or
push
test
frstor
adc
movsb
inc
je
gs
lock
push
mov
mov
add
xlat
inc
cmp
add
dec
ljmp
xchg
in
rep
jnp
sub
mov
insl
pop
or
xchg
cmp
or
into
or
cs
addr16
sar
lahf
ret
incl
dec
and
or
jge
adc
ja
lret
cwtl
add
cmp
leave
add
data16
add
pop
ret
or
iret
inc
jae
enter
out
mov
jnp
sar
xchg
mov
adc
ret
mov
outsl
mov
adc
sub
or
movsl
out
cmp
leave
add
dec
js
pop
incb
lret
pop
cmpb
cwtl
sub
pop
mov
loopne
mov
mov
movsb
inc
add
jmp
cmpsl
xor
orb
ja
lock
jnp
add
int
mov
adc
cmp
add
fs
mov
dec
roll
and
ljmp
cwtl
xchg
stc
jg
in
xor
leave
and
cld
mov
test
jb
call
rcrl
mov
jnp
mov
mov
jno
inc
roll
dec
sub
adc
imul
or
mov
mov
mov
mov
jge
lcall
add
jno
xchg
mov
gs
pop
xchg
pop
add
loop
stos
inc
repnz
sub
jns
sub
icebp
jnp
mov
int3
dec
add
add
cmp
das
mov
or
pushf
data16
fs
add
push
shlb
push
pop
pop
ret
xchg
mov
pop
mov
cmpsb
inc
add
jecxz
add
jne
lods
add
dec
and
sbb
or
filds
je
in
xor
icebp
pop
sbb
jl
inc
sbb
call
mov
fs
dec
mov
xor
add
jno
cltd
sbb
or
call
ret
leave
adc
mov
shll
js
cmpsb
mov
imul
aam
mov
or
and
aad
in
das
push
aam
clc
jge
dec
xchg
mov
lods
xor
or
and
dec
sub
adc
add
and
loopne
pusha
xchg
int3
sbb
insl
mov
adc
sbb
push
imul
sub
lods
add
push
xor
outsb
sbb
or
sbb
cmp
cmp
packsswb
add
pusha
xor
mov
call
add
ljmp
sbb
frstor
scas
add
jnp
incb
jne
mov
or
sub
and
jg
movsl
and
mov
jge
mov
lsl
cli
push
mov
and
xchg
cmp
call
adc
or
loopne
pop
sbb
and
ret
adc
add
test
cltd
movsb
sub
sub
pop
addr16
jns
push
bound
pusha
inc
insb
push
xorb
xor
add
sbb
mov
repnz
or
add
js
shrl
mov
pop
pop
dec
lret
inc
xor
sub
push
sub
das
sub
gs
idiv
push
sub
inc
mov
pop
sbb
loop
add
fwait
sti
inc
add
and
loop
es
add
xchg
mov
jb
addr16
imul
cmpsl
pushf
mov
jge
jno
loope
dec
add
inc
inc
dec
rcr
cmp
add
adcl
sbb
cwtl
add
or
push
cmp
or
jp
adc
ss
push
jecxz
and
pushf
adc
mov
str
loopne
mov
orb
add
or
mov
subl
xchg
ds
roll
mov
pop
jl
mov
ret
jg
mov
movaps
sub
pop
xchg
sub
aaa
jns
in
inc
jns
dec
xchg
xor
cmp
ja
xchg
cmp
dec
push
jg
push
jl
cwtl
jle
add
dec
mov
inc
cwtl
and
subb
inc
xor
das
mov
mov
or
sub
sub
ret
and
js
jle
lea
inc
adc
add
and
loopne
jbe
and
sbb
sbb
js
cmp
shll
mov
pushf
std
cmpsl
add
push
push
sbb
sbb
rcrb
jecxz
sub
mov
pop
sti
xorb
add
sub
push
test
sbb
repnz
pop
loope
mov
xor
shrl
mov
or
xorl
sbb
pop
sbb
add
loope
dec
inc
arpl
idivb
mov
adc
mov
inc
jno
aad
push
enter
add
in
pop
jb
std
enter
pop
movsb
push
add
lcall
jne
push
outsl
in
xor
ret
cld
add
xlat
testb
ret
stos
cltd
out
sub
icebp
push
and
pop
ret
xor
out
sub
fimuls
sbbb
sub
mov
imul
pop
mov
lret
sbb
ret
imull
jo
sub
movsb
mov
push
and
mov
sahf
ret
int3
mov
orb
mov
stc
or
inc
popa
or
mov
sbb
sub
loope
or
jbe
pushl
nop
cld
in
inc
push
mov
iret
mov
mov
and
adc
enter
pop
pop
mov
and
push
aaa
sub
mov
pop
out
and
lods
lock
cltd
test
inc
pop
sahf
sub
mov
add
fcoms
xchg
mov
and
into
ret
outsl
popa
inc
xchg
or
lcall
fs
or
lahf
jbe
xor
movsl
ret
sub
inc
mov
add
jns
cwtl
scas
ret
notl
jbe
cmp
pop
fsubp
gs
jns
or
cmp
movsb
jmp
pop
pusha
mov
dec
movsb
mov
xchg
push
es
or
adc
and
jl
xchg
lret
icebp
adc
icebp
int3
fwait
mov
insl
or
lock
lahf
dec
jne
in
rcll
in
ret
mov
add
push
xchg
ss
xchg
mov
cmp
jl
mov
aas
inc
add
daa
sbb
jbe
jle
jne
je
clc
xor
jge
pop
cmp
ret
cmp
add
jl
icebp
dec
xor
pop
aaa
sbb
mov
xchg
sub
pusha
or
sbb
sub
out
roll
inc
cmp
jle
jl
add
imul
adc
xchg
sub
mov
movnti
pusha
cmp
push
addr16
xchg
cmp
dec
movsl
adc
inc
add
push
mov
jg
addb
mov
mov
movsl
xchg
pop
cmp
pop
nop
scas
fisubl
mov
dec
pop
ret
mov
mov
xor
sahf
jg
pop
add
xorl
mov
mov
cwtl
add
jg
int
push
adc
sub
enter
int
inc
insb
push
mov
sub
xor
inc
je
into
out
xchg
imul
sahf
and
push
add
cmp
nop
stc
ss
aad
add
orb
call
adc
hlt
cmp
or
xchg
push
inc
cmp
rcl
inc
fwait
ss
mov
inc
mov
mov
jle,pt
mov
sbbb
push
testb
xchg
inc
lea
adc
pusha
test
lods
pusha
pop
aas
sbbl
idivb
mov
xchg
cwtl
inc
xchg
ds
sbb
xchg
add
push
xchg
aaa
adcl
stos
aam
mov
bound
imul
pushaw
add
shll
addb
mov
xorb
sub
push
nop
lock
mov
inc
jg
subl
xchg
cmp
xchg
cld
add
mov
add
scas
cmp
pop
lcall
test
cwtl
js
push
jg
je
nop
fsubr
lea
jns
and
daa
cwtl
or
or
in
fsubrl
das
rolb
and
dec
shl
mov
imul
mov
sub
cmp
imul
rcrb
xchg
dec
xchg
sub
mov
adcb
dec
push
jb
mov
add
sbbb
test
jne
jg
mov
enter
jne
xchg
sub
add
push
enter
push
add
push
fs
aas
pop
push
pusha
push
add
push
pop
stc
dec
sbb
push
aas
bound
and
push
pop
push
xor
data16
ja
and
mov
inc
pop
loopne
ja
sub
xor
jbe
mov
jl
neg
je
dec
push
pop
and
push
data16
jne
sbb
xchg
push
push
jb
ljmp
dec
dec
popa
pop
pop
inc
push
xchg
push
push
push
and
pop
push
pop
and
idivb
jne
push
push
push
jb
cmp
cwtl
insl
dec
pop
enter
pop
subl
jle
repnz
test
ds
inc
gs
inc
adc
ja
nop
or
test
imulb
dec
pop
add
mov
inc
cld
ds
push
jbe
aas
pop
pop
and
jne
cmp
push
pop
jb
push
addr16
and
push
gs
cmpsb
cmp
dec
push
jno
ret
call
sub
jp
xchg
sbb
dec
pop
xor
and
push
sbb
pop
stos
sbb
addr16
nop
gs
push
les
mov
mov
or
lock
add
pop
inc
push
jae
push
mov
mov
adc
fdivrs
pop
cmp
pop
pop
inc
push
pop
xor
cmp
sub
push
cmp
fistpll
pusha
dec
mov
lock
addr16
enter
pop
cmpsb
lock
jnp
test
ds
sbb
sbb
push
push
add
hlt
fidivrl
ds
out
inc
test
pop
enter
and
push
clc
bound
push
pop
xor
das
add
rclb
push
imul
adc
and
pop
inc
das
data16
xor
and
pusha
cld
dec
pop
pop
popf
aam
push
ret
jle
repz
mov
adc
push
or
push
lret
imul
push
jp
jle
mov
xchg
jb
das
iret
jmp
mov
cld
sbb
stc
add
inc
sbb
lret
js
cmc
push
out
add
ret
movsb
pop
xchg
sbbb
icebp
xor
adc
stc
movsb
or
push
push
ret
ja
add
js
jecxz
mov
mov
mov
lods
cmp
xlat
jl
and
jp
test
je
and
test
mov
cmp
inc
inc
int3
or
in
jnp
lret
cmpb
lret
cmp
ret
and
push
push
pushf
faddl
add
mov
andb
push
and
bts
pop
add
add
lods
lea
dec
in
cmp
addb
shrb
loopne
mov
addl
fisubrl
repnz
test
jle
cmp
popa
mov
pop
adc
dec
lahf
faddl
or
add
movsl
rclb
data16
mov
scas
fmull
lea
push
stos
stc
add
pushf
outsl
dec
stos
loope
or
scas
xchg
inc
add
lds
sub
inc
ja
arpl
imul
mov
cmp
es
mov
dec
inc
add
pop
jae
cmp
ret
add
jl
das
adc
sub
jnp
mov
fwait
insb
sar
add
add
in
es
leave
sbb
dec
inc
fildl
and
and
jmp
pop
bound
jmp
or
sarl
jle
shll
test
jae
and
in
and
dec
stos
xor
add
arpl
or
jne
or
xchg
cld
nop
xor
add
mov
adc
sbb
jmp
pop
in
or
insb
adc
in
xor
xchg
push
jmp
sbb
and
mov
add
outsl
push
push
add
arpl
pushf
pop
pusha
clc
mov
rorb
sub
fs
pop
bound
and
movsl
add
mov
inc
jg
jecxz
ret
push
xor
imul
mov
jno,pn
rcr
xor
mov
sbb
add
addb
sbb
mov
dec
add
xchg
mov
sbb
jae
inc
les
sbb
pop
pusha
add
pop
inc
and
lea
adc
add
aam
adc
mov
pop
inc
mov
loope
sbb
lock
popf
inc
or
or
cmp
jmp
and
xor
mov
lret
sbb
inc
or
lret
dec
add
push
fwait
lock
aas
adc
mov
push
lods
call
fs
mov
ret
sbb
lret
hlt
mov
orb
ss
mov
or
adc
dec
shll
dec
jl
cwtl
addb
jl
outsl
js
xor
adc
stos
pop
xor
lock
cmpsl
sbb
fisubl
fiadds
mov
xorl
adc
outsb
jb
jle
stc
and
xchg
mov
adc
inc
aaa
add
xchg
movsl
mov
les
xor
rolb
lcall
sbb
add
cmp
int3
test
js
add
pop
mov
and
cmp
jns
test
subl
fbstp
aad
jns
ljmp
outsb
jne
mov
and
jbe
pop
add
push
ret
push
xchg
and
insl
movb
and
adc
jne
xor
add
push
das
shrl
ds
mov
stc
inc
into
pop
and
mov
or
xlat
jmp
sbb
add
fisubl
clc
jg
rcll
mov
xchg
add
dec
dec
in
lock
cmc
push
aam
ss
scas
xorl
push
sub
test
mov
push
add
or
movsl
aas
lods
xchg
xor
lret
push
jno
orb
lahf
cmp
jge
adc
cld
rcll
sbb
scas
test
sbb
sub
push
lods
xchg
je
and
popf
cmp
cltd
sub
imul
add
lods
lods
mov
cli
insl
ret
jmp
and
lods
lahf
adc
mov
fst
jns
in
mov
mov
pop
call
mov
add
cmp
or
ret
clc
adc
adc
leave
sub
mov
outsb
ds
pop
daa
sbb
xor
xcrypt-ecb
cmpsl
dec
imul
lods
sbbb
clc
add
out
xchg
leave
xor
sti
push
fiaddl
shrb
mov
bound
lahf
std
stc
jbe
push
dec
in
jmp
es
mov
pop
add
xor
jp
sbb
add
mov
cld
incl
or
mov
stc
and
test
push
das
mov
cmp
add
mov
cwtl
frstor
test
dec
inc
hlt
gs
adc
jne
sub
bound
subb
or
rorl
data16
loope
add
cmp
test
enter
mov
dec
or
sbb
daa
je
xor
push
iret
fdivrl
sbb
pop
cmp
sub
inc
test
shll
inc
lods
stos
or
adc
cmpb
js
mov
add
cmp
add
xor
dec
mov
pop
nop
sub
or
lahf
nop
fs
cmp
pusha
add
sub
aad
pop
add
mov
add
clc
adc
fldl
es
mov
cmpsl
hlt
inc
inc
sbb
outsb
add
xchg
push
pop
jne
jae
add
inc
mov
xlat
dec
jae
jp
sarb
adc
cmc
fldl
xchg
cmp
fimuls
mov
mov
xchg
lods
push
inc
cmp
inc
cmp
mov
pop
inc
in
in
push
pop
inc
cmp
push
add
gs
mov
push
imul
add
in
lret
xor
in
inc
nop
adc
stc
cmp
mov
hlt
inc
lock
mov
or
pop
enter
mov
jl
popa
inc
or
je
cmp
dec
in
cmp
orb
add
mov
or
enter
xorb
dec
fcomip
fwait
and
xchg
les
pop
movsb
dec
push
ret
es
add
xlat
popa
js
or
pusha
or
sbb
fldenv
jno
add
sbb
roll
mov
cwtl
rcll
repz
in
or
shr
stc
popf
dec
sbb
inc
add
xchg
jl
cltd
shrb
push
shlb
push
mov
ds
sub
adc
and
cltd
test
mov
pop
enter
test
pop
mov
scas
shlb
or
push
xor
push
inc
mov
nop
lock
mov
repnz
sbb
sub
stos
or
adc
in
mov
hlt
add
clc
inc
or
imul
jno
dec
cmp
ljmp
mov
fwait
add
and
bound
sbb
imul
cmp
and
loop
or
adc
dec
pop
sbb
cwtl
les
dec
inc
bound
rolb
and
daa
sbb
and
out
add
or
hlt
mov
fwait
clc
and
dec
test
addb
leave
dec
fmul
sub
mov
dec
mov
sbb
add
ret
ret
adc
sti
add
sbb
arpl
icebp
shll
repz
xor
push
pop
inc
mov
jno
or
xchg
push
inc
fadd
gs
sub
push
stc
inc
cwtl
fisubs
or
je
loope
lcall
into
push
mov
por
jne
cwtl
aas
dec
or
cmp
inc
adcl
inc
aad
xchg
and
rcr
adc
scas
js
jbe
addr16
sbb
rolb
pop
lret
and
or
cld
loop
mov
movsb
subb
std
insb
add
xchg
in
sarl
pop
dec
lods
lret
mov
roll
mov
loope
cmpps
ja
ds
andb
mov
xrelease
adc
fsubrs
int3
adcb
loop
insl
and
data16
jae
int
inc
shlb
xlat
movsb
or
cmp
and
add
dec
pusha
movb
dec
push
cwtl
add
insb
cs
and
fbld
cmpl
leave
add
mov
outsl
dec
push
push
bound
les
add
test
mov
pop
sbbb
scas
shlb
add
cltd
or
lods
adc
test
data16
push
cwtl
lods
dec
inc
add
movsb
inc
movl
inc
mov
jno
adc
mov
and
inc
push
dec
nop
insb
inc
insb
add
or
dec
xor
adc
or
movsb
fsts
test
add
mov
dec
cltd
scas
lds
cmpsb
mov
mov
pop
xchg
push
add
lcall
lock
andb
cmp
xchg
lds
and
adc
adc
xor
ljmp
fs
inc
mov
aaa
ja
cmp
test
and
cwtl
xchg
push
mov
mov
hlt
dec
lods
jb
in
insb
inc
fadds
dec
pop
pusha
es
daa
adc
je
sub
rorl
hlt
out
jle
add
hlt
ret
sub
in
out
test
jae
jg
jmp
inc
in
add
xor
sub
cmp
jle
mov
push
add
dec
stc
jle
mov
dec
or
lds
push
jo
in
jmp
add
and
out
rcrb
sub
add
sbb
pop
and
or
mov
mov
mov
push
sbb
loopne
mov
xor
stos
pushf
shll
add
lcall
jg
adc
jo
fsts
cmp
add
andb
adc
mov
cwtl
pusha
ret
sub
cmp
std
inc
xor
stos
xor
test
and
adc
mov
gs
xor
cmovs
les
cmp
subb
in
add
test
lods
out
testb
test
movsb
mov
shll
data16
ds
insl
js
push
fcomps
jbe
stos
ds
ljmp
dec
dec
ret
add
mov
addl
icebp
adcb
jbe
jno
sub
dec
movsb
daa
mov
inc
std
sti
fistl
and
pop
lods
fwait
inc
roll
push
and
pop
mov
insl
rcrb
add
leave
mov
add
sarb
adc
fs
in
cmpsl
jmp
xchg
repz
test
in
rcll
lret
mov
mov
pop
add
rcrl
rorl
mov
adc
jno
enter
pop
inc
mov
mov
cmp
or
std
mov
add
loopne
and
fcmovnu
test
hlt
test
arpl
push
jno
dec
cmc
mov
loope
in
cmp
lret
jae
or
mov
jle
jmp
pop
or
dec
es
inc
jb
add
jl
outsb
daa
sbb
sub
movl
pop
sbb
test
mov
loop
xor
jp
dec
call
push
fildll
enter
sarb
jbe
jl
dec
imul
cmpsl
dec
or
add
in
xchg
pop
out
cltd
lods
sahf
mov
cld
mov
jns
sub
pop
push
xor
pusha
jb
mov
js
adc
cwtl
jne
push
sbb
inc
cmp
inc
out
jb
mov
sbb
cmp
pop
jns
lods
push
test
rol
fcmovnb
mov
test
lock
inc
movsb
jle
adc
add
fcmovnu
ljmp
and
push
pop
mov
add
mov
pop
nop
sub
sbb
lret
lds
loop
enter
cmp
xchg
pop
mov
add
nop
test
push
call
add
and
movsb
test
mov
push
jecxz
pop
out
or
adc
test
xchg
xchg
add
iret
loopne
push
lock
decb
jae
shrl
dec
pusha
movsl
jo
sub
imul
and
push
fildl
pusha
cmp
push
dec
test
clc
mov
ja
xor
fdiv
orb
and
add
inc
xchg
or
mov
call
imul
lea
shl
and
adc
mov
push
sbb
cld
push
stos
push
sbb
gs
inc
stos
xor
outsl
inc
push
push
and
enter
dec
sub
cmp
test
xor
add
repnz
mov
pop
pop
popf
xor
inc
pop
shr
icebp
shrl
inc
mov
add
outsl
inc
lret
adc
aam
adc
adc
mov
mov
ret
pop
cmp
or
ss
mov
dec
pop
mov
dec
xchg
dec
dec
je
mov
cmp
mov
push
fdivrs
bound
jae
imul
out
add
ret
dec
mov
mov
pushf
out
in
mov
sub
sarl
lcall
shlb
push
std
dec
pop
mov
cwtl
or
arpl
or
fimuls
add
adc
and
int3
pop
jae
insb
inc
mov
add
fs
xlat
xchg
loopne
andb
sbb
incb
sbb
xor
inc
pop
adc
movl
imul
loopne
dec
inc
mov
lock
inc
dec
in
and
inc
cmp
sahf
in
fcmovnb
pop
add
js
jg
jno
or
clc
push
inc
xor
in
mov
xchg
xlat
add
cmpsl
aaa
shrb
lret
dec
sub
mov
jno
xchg
inc
cltd
popa
adc
test
cmp
xor
ret
pusha
mov
or
lea
pop
cwtl
jb
arpl
inc
loopne
cmp
push
add
movsl
dec
outsb
mov
cmp
cmpsb
inc
or
sub
or
jne
imul
mov
scas
popf
sub
addb
mov
imul
jb
add
cmp
hlt
xchg
push
add
rorl
movl
sub
icebp
fisttpll
bound
or
jb
in
mov
lds
adc
pop
mov
lds
sti
test
push
jmp
nop
mov
in
and
pop
lea
popa
xchg
jl
adc
fs
push
ficoml
lcall
ja
jl
jno
or
and
jo
gs
or
loopne
mov
fmuls
xchg
sub
sbb
add
xchg
hlt
pusha
rcrb
test
rolb
fadds
cmpsb
xor
pop
leave
sub
cmpsl
lahf
shl
mov
rol
xor
mov
and
test
ficoml
push
shlb
cmpsl
jne
loop
jnp
sbb
pop
cmp
in
pusha
jne
adc
sub
xchg
adc
lret
sbb
mov
icebp
sbb
xchg
xor
adc
pop
push
imul
inc
fsts
adc
std
inc
pop
leave
or
or
fimuls
and
mov
dec
dec
sub
pop
inc
jae
fidivs
sarb
adc
inc
ds
xchg
fsubs
push
add
pop
xor
push
cmp
pusha
jae
sub
add
fwait
inc
mov
or
sub
cld
push
pusha
xor
cmp
dec
rorb
jmp
jb
lods
clc
lods
into
jo
inc
cmp
push
mov
jb
and
xor
jl
adc
mov
lea
add
test
mov
mov
push
clc
test
insl
aas
adc
enter
cltd
es
mov
call
or
inc
sarb
je
pusha
in
and
cmpb
aas
mov
gs
push
pop
cmp
enter
bound
aas
and
mov
leave
jle
repnz
pop
mov
mov
negb
pop
imul
lods
mov
inc
mov
mov
add
iret
push
lret
outsl
and
sti
rol
mov
adc
shlb
mov
dec
pop
popa
jg
rolb
jp
and
push
mov
inc
push
aad
arpl
test
dec
adc
ds
sub
lods
cmp
inc
xchg
inc
push
test
in
add
jge
orl
call
rcrl
inc
cld
sbb
fsubl
fsubl
sub
sbbl
push
or
and
orb
adc
cwtl
and
xor
loope
cmp
insl
mov
adc
mov
lret
cmp
or
jmp
pop
test
or
scas
aad
or
fsubr
or
scas
mov
and
and
test
and
jns
inc
nop
in
pusha
in
and
xchg
cli
or
sbb
out
push
je
hlt
lret
adc
data16
mov
mov
andb
jbe
pop
add
jl
dec
daa
lret
mov
addr16
add
cmp
push
adc
adc
pusha
pop
hlt
ret
dec
mov
pop
hlt
and
sbb
out
pop
dec
cmp
add
movsb
or
test
mov
add
add
mov
jne
inc
sub
jl
adc
mov
jno
lods
ret
adc
dec
cwtl
pop
shll
iret
nop
ficoml
adc
loope
jl,pt
cwtl
add
pop
test
push
add
mov
sbb
sbb
js
mov
mov
add
cmp
rorb
xor
sbb
jecxz
sbb
orb
hlt
mov
shll
fwait
xor
cmc
mov
mov
adc
in
or
lcall
dec
and
inc
push
data16
in
adc
in
and
fdivs
inc
or
cmp
xor
or
das
icebp
sbb
cmpsb
fidivrl
cmpsl
cmp
pushf
enter
jae
mov
mov
push
inc
fisubs
adc
xor
sub
inc
movsl
jmp
push
cwtl
les
jle
pop
pop
repz
xor
fadds
fisubrl
cmp
enter
jae
cmc
sub
add
loopne
lahf
inc
mov
sahf
adc
xorb
pushf
xchg
xor
cltd
push
mov
call
int3
mov
adc
mov
sbb
jb
in
or
daa
cmp
imul
or
shlb
dec
stos
pop
sub
or
imul
add
mov
xchg
sub
adcb
and
dec
shll
adc
push
adc
and
cmp
inc
pusha
pop
fsts
add
mov
es
sub
pop
xchg
mov
jge
shl
test
and
mov
fiaddl
inc
pop
inc
stos
xchg
push
or
ficoml
sbb
sub
add
scas
aad
imul
roll
pop
popa
cmp
push
add
jo
ja
lock
jne
cmp
lock
mov
add
or
xchg
fmuls
jl
sub
fs
xchg
popf
lods
adc
cmpsl
pusha
cmp
or
repz
adcb
cmpsb
or
mov
mov
pop
sbb
sbb
pop
in
fdivs
lock
insb
mulb
inc
in
add
sub
aad
inc
out
push
adc
and
pop
add
add
mov
call
sub
lods
arpl
cmp
cld
mov
add
dec
sub
aaa
in
movsb
add
pop
lahf
out
adc
xchg
std
lret
mov
int3
shlb
test
arpl
xchg
daa
ss
dec
fld1
sub
mov
mov
jmp
mov
dec
insl
adc
mov
ljmp
push
les
xor
enter
je
ljmp
pop
pop
imul
daa
clc
ret
inc
or
not
mov
cmpb
test
ficoms
sbbb
push
push
add
mov
and
lock
mov
sti
int3
mov
aas
fsubrs
push
ficoml
and
dec
flds
cmp
fsubrl
add
xchg
ss
movsl
dec
pushf
dec
je
imul
pop
pop
sbb
in
dec
loopne
add
repnz
aad
inc
jge
jae
fimuls
int3
aas
cmp
adc
je
push
cli
jae
sbb
fcmovnbe
and
addl
loop
addr16
push
outsb
inc
inc
lods
sbb
js
and
xorb
xor
mov
xor
dec
and
gs
mov
jmp
movsb
jo
shr
adc
add
adc
xor
mov
int3
add
rcll
sub
fisubrs
cwtl
shrb
pop
and
xor
inc
fsubr
or
lds
pusha
les
lea
popf
push
out
fnop
inc
adc
movl
adc
mov
or
aad
add
xchg
mov
test
add
sub
ficoms
mov
xorb
lahf
test
lcall
cmovae
mov
and
gs
adc
and
gs
pusha
cmp
push
add
cs
dec
sub
and
xchg
sbb
mov
ja
cmp
xchg
mov
daa
stos
fs
adc
pop
adc
outsl
or
stc
test
clc
in
mov
or
dec
shl
dec
inc
test
aas
nop
rcrb
and
pop
jne
mov
je
cmp
fwait
popa
mov
out
push
or
lret
arpl
add
scas
mov
enter
inc
test
in
jg
aam
mov
pop
mov
add
xchg
xchg
rolb
jno
cmp
cmp
mov
dec
imul
add
or
ficompl
push
outsb
andl
adcb
pop
inc
fs
push
jno
inc
push
mov
mov
inc
push
inc
mul
xchg
dec
bound
aam
dec
mov
dec
jbe
sti
fmuls
jb
adc
lea
js
scas
pop
xchg
dec
cltd
push
pusha
sarl
inc
cld
adc
data16
dec
add
pusha
mov
add
xchg
inc
sarl
inc
inc
or
adc
adc
cmc
xchg
or
mov
xlat
push
add
fnsave
fs
iret
add
push
lds
arpl
add
lea
push
inc
pusha
movsb
sar
imul
mov
add
in
clc
add
mov
dec
loopne
loopne
jmp
pop
test
cli
cmp
addb
xor
dec
in
lods
ds
pop
pushf
call
adc
push
ss
jb
and
adc
les
in
pusha
loopne
push
and
and
adc
cli
hlt
add
or
icebp
loopne
jo
xor
xor
aas
jge
sub
xchg
adc
cs
dec
test
cwtl
hlt
push
movsl
add
and
jo
pop
aas
add
sub
or
jns
pop
push
push
mov
sub
arpl
mov
pop
cmp
pop
popf
and
jno
in
pop
adc
mov
xor
pop
lods
and
in
in
pusha
out
sub
and
xor
fs
cmp
add
lcall
push
xchg
mov
jae
or
and
mov
insl
bound
lods
mov
pop
inc
popa
add
mov
sub
xor
and
jle
adc
and
xchg
pop
mov
daa
in
mov
in
icebp
pop
sbb
cltd
pop
adc
lock
addb
adc
or
dec
mov
jno
int3
add
jne
cmp
call
orl
fldl2t
add
pop
jg
bound
mov
es
add
add
shr
das
ds
adc
mov
cmp
mov
mov
nop
popa
sub
hlt
movsb
addb
xchg
jl
sub
and
mov
sub
ret
fldcw
cmp
sbbb
leave
sub
xchg
cld
xor
xchg
xlat
in
mov
mov
mov
sub
sbbb
cld
xorl
pop
jo
push
lock
lret
mov
dec
pop
xorl
add
jmp
repz
js
cmp
test
roll
cmp
adc
movsl
loope
or
stos
xor
push
mov
jl
mov
and
add
add
jno
fimuls
inc
js
add
rcll
out
nop
pop
push
jae
mov
cmp
sbb
dec
push
and
enter
or
lcall
lock
and
shlb
or
xor
or
mov
mov
pop
lods
ret
sub
mov
pushf
test
call
add
gs
cmp
nop
push
and
pop
mov
adc
jne
and
push
or
dec
aam
and
or
ficoms
test
mov
pop
mov
test
daa
push
sbb
inc
and
icebp
not
dec
cld
mov
fwait
add
sub
cmp
inc
subb
enter
pop
jae
mov
arpl
jo
mov
inc
movsl
repnz
pop
xchg
rcrb
xchg
and
fbstp
push
loope
add
adc
adc
jecxz
adc
jge
inc
jl
cmp
cld
or
lea
imul
add
jae
cmp
jl
and
pop
add
int3
xor
pop
imul
icebp
cmp
jno
mov
and
adc
xor
subps
mov
cld
enter
xor
lods
mov
les
idivb
add
or
and
pop
lods
stc
icebp
ret
fisubs
orb
sarb
xor
jo
arpl
outsl
or
or
mov
les
add
push
rcr
push
jnp
cmp
jle
inc
scas
add
xchg
int3
mov
mov
arpl
in
fsubs
pop
daa
or
sti
dec
daa
ror
add
xchg
push
fcomip
adc
scas
cltd
movl
repnz
aam
lds
jae
sarl
mov
add
push
add
clc
out
ljmp
mov
lea
lods
adc
jecxz
pop
pop
cli
inc
test
mov
repz
pop
stos
add
das
addr16
shrl
call
js
jmp
imulb
adc
mov
sbb
stos
sahf
ret
pop
push
loopne
xor
out
lret
push
inc
pop
leave
mov
mov
jg
add
movsb
dec
js
push
xchg
ds
gs
sub
fisttpll
xchg
add
pop
stc
inc
loopne
push
and
inc
inc
jge
imul
add
or
sub
add
sub
shlb
add
testl
xor
mov
push
mov
scas
ss
shll
lcall
insb
adc
mov
mov
pop
das
nop
movsb
out
clc
in
lods
fs
mov
inc
in
pop
push
dec
xchg
xor
mov
push
inc
jmp
cmp
fsubl
int
stc
add
outsb
sti
gs
aad
orl
cmp
pop
js
insb
rcll
fidivrl
add
fimull
cmpsb
xchg
fcoml
push
div
rcl
dec
lock
or
movsl
mov
add
les
pop
pushf
pop
inc
cmp
test
sahf
jns
lods
dec
mov
cmp
adc
push
xor
loopne
adc
in
add
mov
xor
faddl
sbbl
and
ret
scas
test
mov
aad
add
sarb
lods
mov
push
and
adc
idiv
sbb
gs
and
sti
pop
add
repnz
add
jmp
movsb
and
bound
loopne
mov
pop
push
arpl
mov
cmp
and
jne
inc
add
push
daa
push
loop
add
mov
orb
or
les
xchg
out
pop
xchg
addb
adc
aas
iret
adc
stos
or
xor
or
push
cwtl
or
rolb
add
push
xor
pop
fwait
test
inc
and
shlb
xchg
pop
lds
scas
inc
mov
sbb
jns
dec
shlb
xor
push
outsl
rorb
or
daa
fildl
jmp
dec
daa
xchg
mov
push
sub
mov
scas
xchg
pop
sub
fsubs
test
push
movsl
lret
js
or
loop
popa
xchg
or
into
repnz
xorb
mov
adc
add
dec
and
mov
mov
lods
clc
push
xchg
lret
push
mov
xchg
dec
pop
cwtl
adcl
mov
call
and
add
rcrl
popf
gs
dec
push
add
mov
add
loope
addr16
mov
in
push
les
inc
or
js
xchg
add
mov
mov
sbb
xor
xchg
pop
inc
ja
pop
xchg
popa
fcmovnbe
jl
pushf
cld
add
mov
movsb
or
test
add
mov
cmp
or
into
adc
xor
in
fcompl
roll
inc
hlt
mov
mov
dec
adcl
outsl
shlb
and
repz
call
iret
push
pop
adc
rorl
add
inc
cmp
pop
adc
pop
jae
adc
mov
add
fs
pop
jle
stos
sub
xor
add
hlt
sbb
adc
mov
xchg
int3
add
inc
adc
adc
mov
test
push
lret
insb
inc
sub
add
jmp
andl
jl
or
add
jecxz
or
push
pop
dec
jmp
shll
bound
and
jae
mov
adc
and
xchg
stos
int3
loopne
scas
fsts
and
cld
jo
pusha
sbb
cmp
dec
inc
jmp
add
xlat
cmpsb
out
adc
add
int
aam
aaa
and
inc
out
dec
adc
jle
lods
test
mov
lds
sub
mov
dec
aad
pop
leave
cmpsl
or
add
push
push
or
or
es
push
dec
into
pop
aam
loopne
push
ds
mov
add
mov
repnz
pop
sbb
nop
loopne
jns
bswap
lret
inc
gs
xor
in
add
and
xchg
inc
cmp
and
imul
jae
add
cs
xorb
pop
or
add
push
push
add
icebp
leave
bound
dec
jns
or
mov
adc
fwait
pusha
and
add
mov
loopne
fidivrl
test
lahf
adc
xor
cmpsl
in
in
in
pusha
mov
aam
jbe
adc
test
test
mov
inc
mov
das
add
mov
cmp
jmp
inc
testb
xor
pop
mov
insb
and
push
or
inc
or
cmp
jmp
add
loope
or
dec
lret
fmul
cmp
divb
sar
loope
lock
mov
adc
jle
test
push
jmp
xchg
enter
jl
pop
push
mov
mov
js
pusha
sti
cmp
lods
mov
xchg
loop
sarb
pop
int
rorb
jae
jle
aad
sarb
or
das
adc
push
inc
jle
cmc
xor
cmp
adc
sub
int
in
jns
fimuls
mov
cld
daa
loop
fisubl
jns
in
sub
sub
mov
repnz
pop
mov
adc
in
pusha
mov
enter
int3
xor
insl
scas
sbb
add
cmc
add
push
mov
xor
or
ljmp
mov
jae
mov
mov
cmc
dec
and
push
xchg
call
inc
xlat
test
clc
subb
fs
lcall
clc
movsb
insb
jns
bound
sbb
add
pusha
mov
mov
jnp
dec
mov
jae
sbb
add
and
leave
ja
shrl
mov
addl
lret
jno
loope
mov
fcmovnu
fisubl
cltd
or
xor
rorl
cs
push
jne
sbb
loopne
sbb
fsubrs
mov
inc
lret
sub
add
and
cs
ja
nop
cltd
test
cmpsb
mov
pusha
daa
push
adc
adc
xor
lret
inc
add
enter
add
test
push
xor
pop
jle
sbb
ja
sbb
push
push
pushaw
popa
push
lahf
and
ja
xchg
das
and
les
gs
add
inc
jo
ds
and
push
pop
cld
dec
inc
push
push
pop
dec
testb
mov
add
push
pusha
and
push
add
sub
push
or
adcb
sub
push
insb
mov
sbb
push
push
imul
inc
or
inc
xchg
cmp
orb
testb
xor
sub
inc
push
jp
cmp
dec
filds
mov
add
mov
push
inc
xchg
push
pop
negb
test
std
mov
push
cmp
stc
cs
pop
push
adc
inc
pop
sbb
jo
incb
push
jae
pop
iret
nop
mov
dec
and
adc
bound
sbb
inc
lahf
add
dec
nop
loopne
mov
in
js
lock
sbb
inc
fs
mov
pusha
adc
insb
mov
mov
mov
adcb
jle
mov
pop
inc
jecxz
pop
fsubl
inc
push
adc
xchg
jmp
or
jns
xor
adc
mov
sbb
les
test
push
cltd
mov
cwtl
pusha
call
jae
adc
lea
xchg
mov
and
insl
fs
imul
les
imul
ret
mov
pop
das
and
movsb
or
loope
add
add
and
mov
or
enter
mov
pop
ficoml
mov
xchg
dec
js
subb
testl
push
cmp
inc
repz
in
inc
pop
loopne
sub
cmp
mov
adc
js
in
add
pop
push
cs
test
sub
out
xchg
add
inc
adc
mov
orb
xchg
pop
mov
std
add
mov
mov
add
loopne
clc
adc
xchg
and
nop
sbb
nop
mov
xor
sub
test
test
jb
xchg
inc
rolb
xchg
test
inc
and
dec
test
inc
jo
adc
mov
adc
nop
mov
sbb
lods
arpl
loop
and
scas
mov
into
mov
sub
jmp
mov
cmpsb
push
push
sub
lret
or
adc
sbb
insb
rcrl
mov
inc
pop
sub
mov
xorl
push
cmp
test
mov
jmp
inc
dec
or
hlt
or
and
loop
aam
test
js
loop
or
sub
adc
hlt
add
mov
fchs
cmpb
add
mov
insl
lock
push
and
nop
add
daa
adcb
insl
jg
and
inc
add
gs
les
outsb
jo
scas
mov
push
and
or
add
loopne
loop
sbb
or
mov
out
lock
and
leave
leave
xor
test
into
or
int3
dec
enter
stos
nop
adc
xor
clc
xchg
cmp
mov
js
fs
nop
js
inc
dec
jns
les
adcb
jl
sbb
in
lock
andl
pusha
adc
or
sbb
mov
aad
pusha
add
jle
push
ss
jb
or
sahf
mov
imul
adc
icebp
adc
add
push
lods
mov
jge
dec
lret
push
inc
sbb
arpl
mov
pop
jecxz
lock
jmp
hlt
in
pop
pop
lods
jge
mov
fwait
idivl
sub
mov
and
pop
lods
stos
fs
jl
bound
jne
insl
stc
addb
adc
add
inc
add
test
pop
das
mov
adc
stos
pop
jg
adc
add
and
xchg
clc
jns
shlb
add
pushl
nop
stc
or
aad
cmpsl
leave
xchg
cmp
add
mov
cmp
or
adc
popl
xor
jno
and
ds
addl
test
inc
jbe
pop
repz
cld
fwait
cli
add
jl
inc
ret
add
mov
or
movsl
mov
push
add
jb
adc
aas
les
ljmp
sbb
in
xchg
and
mov
pop
add
lret
loop
mov
add
inc
es
call
cwtl
cs
les
inc
or
xchg
and
sub
dec
test
fsubl
cmp
lods
pusha
in
sti
daa
rol
inc
sbb
jbe
aas
or
pop
or
adc
jno
jns
sbb
add
and
test
pop
cmp
in
incl
outsl
in
add
pop
decl
rcl
inc
and
mov
pop
sbb
push
in
je
and
and
cmc
xor
ficoms
cmpsl
or
sub
fmul
push
jo
lods
add
fs
pusha
mov
or
add
sub
mov
ret
mov
mov
xchg
les
test
loopne
cli
ss
or
push
add
pop
arpl
xor
mov
jne
xchg
dec
jnp
fs
daa
mov
repnz
xor
aas
enter
cs
gs
mov
add
data16
in
sub
or
push
sub
rcll
and
or
push
add
adc
push
pop
mov
out
insl
loopne
jne
imul
popa
int
sub
mov
movsb
mov
out
and
rorl
xlat
push
sarl
sub
add
leave
inc
jle
dec
jae
dec
inc
and
mov
inc
or
pop
insb
je
stos
add
gs
adc
and
xchg
cmp
and
xor
mov
push
lcall
imul
cmp
sub
enter
rcl
addl
mov
pop
inc
and
cli
js
cld
in
inc
cltd
aam
add
mov
mov
loop
xlat
inc
aad
dec
pop
fldt
mov
mov
lfs
aas
sarb
lods
lret
orl
and
sbb
and
sbb
pop
jns
cmpb
xchg
notb
ja
jb
xor
and
push
jl
call
or
lret
outsb
ja
rcrb
pop
pusha
out
add
lock
push
or
sub
push
mov
jne
xchg
lds
les
aaa
jge
add
cmpsb
mov
fisubl
out
xor
mov
leave
mov
hlt
and
int
fwait
mov
inc
outsl
sahf
nop
andb
rcrb
daa
jb
test
cltd
adc
inc
jmp
in
mov
xor
fs
rorb
ds
sub
sub
test
mov
dec
sbb
push
aam
dec
repz
mov
add
cmp
dec
mov
sbb
test
sub
add
cs
mov
mov
incb
shl
mov
add
push
adcb
push
mov
mov
dec
lretw
dec
arpl
xor
loop
mov
and
sub
aad
xor
cmp
movsl
xor
mov
mov
add
int3
aaa
dec
ss
popl
jecxz
or
cmpsb
out
add
pop
xor
push
shlb
add
nop
and
add
ds
inc
jo
push
movsb
sub
xor
sarl
xlat
addr16
push
pop
push
or
sbb
add
stc
add
pop
or
mov
xchg
popf
mov
xchg
sub
dec
arpl
fldt
add
or
cmp
add
out
fidivrl
rorb
jl
enter
fs
and
and
adc
push
and
jle
push
setle
andb
xor
inc
cli
jne
pop
sbb
cmp
add
out
sbb
xor
adc
adc
pop
cmp
lock
fildll
fldl
mov
adcb
xchg
add
mov
cs
out
inc
xorl
sahf
jecxz
rolb
push
mov
repnz
pop
arpl
sahf
cld
or
dec
cmpsl
out
hlt
cmc
adc
test
or
dec
div
outsb
sub
jmp
push
xor
sbb
push
fimuls
dec
jbe
jns
loopne
sub
cmp
or
insb
sbb
add
movsl
add
or
jae
cwtl
je
add
mov
cmp
inc
out
adc
add
sub
or
andb
dec
mov
add
sub
add
int3
insl
push
or
jp
add
mov
add
mov
push
fsubs
pop
pop
adc
pusha
mov
dec
adc
jbe
jl
shlb
add
out
xchg
test
add
inc
popa
dec
fs
out
nop
testl
cmp
jle
add
loopne
in
aad
lock
enter
test
insb
jo
sub
sbb
pop
pop
cmp
fadd
adc
shl
lock
les
sub
add
cmp
sbbl
mov
xchg
add
mov
xchg
jl
bound
leave
ret
dec
popf
rcl
add
in
movsb
test
stos
imul
push
add
les
cmp
mov
imul
sub
nop
sbb
stos
dec
cmp
aas
orb
sbb
jnp
cmp
sbbl
inc
psraw
add
push
pushf
loop
arpl
jnp
imulb
jb
decl
xor
test
hlt
jno
add
jecxz
sbb
dec
sbb
shlb
dec
das
or
icebp
fldcw
repz
lock
xchg
add
in
mov
sbb
dec
es
push
lock
out
add
sub
cmp
lret
inc
lock
add
mov
imul
sub
mov
mov
hlt
lods
xor
into
or
ss
outsb
mov
pusha
lods
lock
enter
jg
clc
add
lret
inc
iret
jo
lods
push
push
inc
stc
loop
das
add
sub
jno
push
sbb
cs
lret
xchg
pop
popa
mov
imul
rolb
push
jns
insl
xlat
fidivl
cmpsl
dec
les
and
imul
popa
xor
add
mov
xchg
mov
lahf
aas
fsubrl
pop
or
sti
push
jb
add
sahf
outsb
dec
xchg
lcall
add
icebp
cmpb
arpl
xorb
in
cwtl
insb
es
xchg
cmp
or
push
mov
fcmovnu
lods
or
mov
add
aad
imul
aas
xchg
sbb
add
es
ret
mov
jg
jae
pop
inc
pop
movsb
xor
mov
xor
pushl
xchg
adc
int3
add
add
or
jle
in
repnz
sti
decl
mov
incl
add
lea
sbb
dec
clc
jno
in
add
or
cli
jl
js
add
pop
lods
add
repnz
mov
sbb
mov
lcall
jns
push
pop
sub
sbb
adc
int3
jmp
jno
icebp
xor
jle
sbb
add
push
je
outsb
lcall
stc
inc
push
cmpb
cmp
aaa
test
inc
aad
in
pop
je
popf
shlb
xor
xor
xchg
daa
mov
sub
sbbb
mov
xor
sub
pop
cmovno
lock
mov
xor
adc
popf
cmp
enter
imul
add
inc
icebp
mov
test
mov
iret
add
add
out
stos
je
nop
imul
add
ja
sbb
in
rcrb
mov
sub
inc
cmp
cmp
cmpsb
int
sub
pop
insb
cld
pop
cmc
dec
push
pop
push
cmpsl
hlt
pop
add
data16
addb
cs
bnd
mov
fwait
jge
add
cmp
lods
jae
mulb
add
xchg
jmp
sbb
xchg
sar
cwtl
jb
add
loop
rorb
fbstp
inc
push
dec
enter
loopne
dec
or
aaa
shlb
fwait
add
fadd
sub
fisubl
leave
dec
inc
repz
test
ja
jae
in
add
test
mov
mov
and
cmc
cmp
imul
mov
push
push
in
aas
shl
cli
sahf
and
pushf
or
or
xor
js
or
cmp
insb
cmpsb
sub
or
mov
adc
cmp
inc
xor
in
push
cltd
sbb
jbe
cld
out
sbb
cmp
out
out
int3
cmp
sub
cmp
fldenv
add
add
jge
jg
cmp
insb
gs
adc
in
add
pushf
cmc
jno
mov
cmp
imul
and
scas
loop
pop
adc
js
shll
xor
mov
out
movsl
ror
add
into
cmp
lock
add
adc
aam
nop
xchg
cwtl
je
cltd
xor
insl
fsubl
jae
mov
shrl
push
push
add
mov
test
pop
xchg
fstpt
mov
add
mov
fcoml
dec
jbe
nop
jl
repnz
pop
sbb
add
fucomi
pop
jle
and
push
popa
out
xorb
in
mov
hlt
imul
hlt
add
mov
adc
std
push
cmp
jl
mov
shll
mov
jo
mov
addb
mov
push
mov
call
add
xchg
push
jmp
add
mov
testb
lds
cmp
and
jb
sub
jae
outsb
jl
add
les
mov
cmc
lock
jl
iret
mov
mov
fwait
or
call
inc
mov
pop
les
lock
lahf
cmp
mov
icebp
or
fbstp
pop
fdivl
add
jmp
jmp
push
or
push
ljmp
cmp
mov
add
cmp
cmp
add
or
xchg
mov
xchg
push
lock
cmp
sar
add
cmpsb
pusha
imul
rcll
clc
negb
add
ljmp
add
cmp
shl
add
pop
dec
jae
push
mov
or
jle
xor
mov
push
aas
shl
and
mov
pop
and
pop
adc
pop
mov
push
and
sbb
jae
arpl
jo
lock
icebp
in
in
aas
ljmp
lea
out
add
adc
outsl
lcall
sbb
pop
ds
sbb
dec
ja
data16
mov
cli
outsb
jae
xchg
mov
movl
fildll
pusha
cmpsb
sahf
adc
dec
and
mov
gs
add
hlt
jg
cli
xchg
in
add
cwtl
in
add
xlat
and
pop
test
mov
andb
mov
mov
or
movsl
xor
mov
cwtl
loop
pop
sbb
mov
cmp
mov
sbb
jl
inc
into
push
push
xchg
ffree
sub
push
addb
sbb
mov
pop
movsl
mov
and
xor
cmpsl
addb
xchg
xor
mov
pushf
adc
jl
mov
out
push
xchg
je
mov
repnz
addr16
add
pusha
push
inc
add
das
icebp
or
add
adc
in
mov
pushf
iret
subb
mov
dec
pop
repz
arpl
fs
adcb
lods
inc
add
mov
lret
loopne
pop
addb
bnd
mov
add
int3
mov
cli
icebp
or
movsb
pop
push
outsb
adc
cmp
cmc
add
js
pushf
mov
jp
cld
or
rcll
jne
add
sarb
mov
cwtl
sbb
add
xchg
sub
std
add
and
rclb
rclb
mov
roll
and
jmp
lret
sbb
dec
movzbl
add
jo
loopne
rcrl
js
aaa
jl
flds
ss
mov
mov
jmp
and
push
cld
cmp
mov
and
mov
dec
int
dec
fimuls
sbbl
in
sbb
mov
pusha
cli
inc
jo
push
cwtl
xor
into
sub
mov
dec
jp
cmp
jg
add
pusha
sub
pop
sub
push
int3
daa
test
push
cld
clc
fsubr
or
in
pusha
add
mov
int
stos
push
aam
sub
lock
jl
push
pop
aas
in
pusha
adc
jns
verr
dec
mov
imul
pop
repnz
pusha
xor
push
inc
enter
sub
negl
pop
jne
jge
iret
pusha
jb
mov
mov
dec
aam
sbb
movsb
call
ss
js
push
stos
leave
sub
inc
sbb
jnp
or
jbe
and
cmp
scas
mov
das
push
addr16
push
jo
sti
aam
cmpsl
sbb
cld
mov
lcall
das
in
and
jb
mov
pop
mov
push
out
dec
fadds
sarl
mov
adc
jg
enter
in
movsl
push
loope
movb
dec
add
mov
rorl
cs
cmp
stos
stos
rolb
loope
cld
mov
nop
loope
xlat
fcmovu
cwtl
and
push
or
shrl
jp
adc
inc
and
inc
shlb
lcall
sbb
nop
pop
add
sub
test
mov
fwait
les
lahf
sbb
adc
lods
cs
fsubrs
lock
push
mov
jle
xor
movsb
imul
mov
lcall
sbb
xchg
add
std
out
adc
add
nop
cmc
leave
and
add
cmp
pushf
jl
fwait
push
mov
push
pop
add
ret
pop
add
add
fstl
jnp
cli
mov
fldcw
sbbl
adcb
mov
xchg
or
dec
int3
sub
jne
cmp
pop
hlt
out
fwait
and
push
xor
and
lds
mov
jmp
dec
add
mov
mov
jns
push
and
into
std
and
sbb
xchg
add
pop
mov
test
sti
cltd
aam
mov
fildll
add
inc
mov
sbb
push
adcb
int
sub
adc
fiadds
iret
jae
add
test
pusha
fstps
add
adc
and
cli
pop
xor
jecxz
lock
test
jge
sub
mov
add
mov
popf
scas
js
sub
incb
pop
sub
jbe
add
mov
mov
cmp
insb
nop
imul
xor
pop
pop
lods
aaa
push
test
mov
mov
add
sub
sti
sbb
pop
mov
fiaddl
repz
sti
push
les
push
mov
jo
push
push
test
dec
mov
fstpt
sbb
pop
mov
xorb
ret
mov
mov
add
ljmp
xor
arpl
xchg
xlat
push
dec
sbb
sti
sarb
jns
add
jmp
sub
hlt
in
push
arpl
pop
push
mov
out
movsl
out
test
add
or
insl
call
jo
push
add
scas
cmp
addr16
fwait
repnz
pop
pop
adc
xchg
fisttpl
dec
dec
repz
outsl
jmp
sub
lock
idivb
dec
adcl
pop
call
and
add
daa
add
sub
rolb
loopne
shr
cs
push
add
inc
mov
jg
push
inc
loopne
in
push
add
ja
pop
push
cmpsb
push
int3
add
lahf
xlat
mov
imul
push
sub
or
sbb
and
fbstp
mov
cmp
rcrl
mov
sbb
sahf
dec
xchg
jge
inc
mov
mov
mov
int3
aaa
call
xor
or
and
leave
push
lcall
mov
mov
add
xlat
shrb
jge
hlt
jbe
loope
mov
pop
xchg
sub
out
adc
add
sub
ret
idiv
add
jne
xor
in
push
xchg
mov
add
rorb
sub
xchg
add
sahf
dec
adc
jp
aad
cmp
xchg
rcrl
adc
pop
bound
mov
es
add
rcrb
pop
cli
push
les
cwtl
xchg
std
add
jg
jbe
push
jp
xor
test
cmp
push
jbe
jo,pn
jo
bound
adc
fdivrl
add
daa
js
push
add
shrb
gs
movsb
xor
jns
mov
div
adc
cmp
inc
or
add
mov
sub
add
fidivs
cwtl
ljmp
add
mov
sub
mov
fmull
rcll
js
movsb
xchg
mov
testl
fiadds
aas
mov
pop
inc
xchg
jae
or
push
loope
pop
pop
add
movsl
push
inc
je
lock
add
popa
xor
push
enter
stos
jmp
add
jne
sub
mov
daa
hlt
dec
sar
scas
pop
loopne
inc
and
sbb
xor
mov
jne
pop
xor
xchg
test
sbb
test
popf
add
mov
nop
dec
add
sarb
scas
das
call
add
or
clc
xor
add
cmp
mov
mov
loopne
js
sub
mov
mov
ret
cmp
imul
shlb
insl
daa
add
cltd
mov
cwtl
inc
mov
pop
fdiv
mov
or
aaa
nop
xchg
jo
stos
fcmovne
cld
cltd
add
fidivl
inc
lea
testb
shll
add
es
push
lahf
or
pusha
mov
ds
add
int3
or
add
ret
push
add
popa
shlb
ret
in
loopne
sbb
xor
test
add
clc
sbb
shl
cs
ud2
aad
push
mov
inc
pushf
add
rcr
ljmp
mov
mov
mov
inc
lea
enter
dec
in
cmp
inc
xor
and
dec
xorb
inc
scas
push
daa
repz
stos
add
cmc
or
lret
dec
add
inc
xor
movl
ud0
fcmovnb
dec
out
push
nop
jl
mov
ljmp
add
adc
add
push
mov
mov
and
call
out
dec
pop
jecxz
and
mov
adc
out
sbb
mov
cmpb
adc
mov
add
sbb
fmull
inc
mov
mov
sub
jle
std
add
in
or
add
xor
xchg
mov
faddl
stos
sbbb
inc
add
add
movsl
inc
insl
jp
repnz
lock
or
ds
add
xor
rolb
mov
enter
push
stos
stos
psadbw
xchg
fcoms
flds
je
cmpsb
es
outsl
cmp
hlt
xchg
add
stos
pop
cmp
mov
push
mov
ret
add
sub
fsts
add
rcll
dec
inc
and
sub
bound
data16
daa
adc
mov
add
dec
mov
cmp
cmpb
mov
scas
mov
fwait
out
mov
pusha
dec
adc
xor
popl
nopl
ss
or
fcmove
jmp
in
dec
rorb
or
or
jo
add
rcrl
pop
sub
pop
jle
mov
adc
or
gs
and
inc
cmp
pop
xor
loop
mov
mov
cmp
sahf
pop
add
sub
cmpsl
mov
into
mov
mov
mov
mov
or
inc
aas
nop
xchg
cmp
movsl
xchg
xchg
test
pop
pop
jmp
mov
xlat
lock
push
cmp
jge
outsb
mov
adc
inc
imul
imull
rcll
mov
mov
sub
movsl
mov
push
lods
jo
cmp
push
popa
add
cli
outsl
xchg
sub
arpl
in
add
sub
push
xchg
add
in
xchg
add
pop
cmc
jge
popf
mov
icebp
shl
sti
xchg
inc
loope
aas
popf
jne
dec
adc
add
push
inc
ret
add
fiadds
pop
imul
cmpsb
pop
je
add
push
and
add
xchg
mov
into
add
or
add
out
icebp
cmp
bound
xlat
aaa
mov
sbb
addl
shl
call
adc
add
fs
ss
jo
xchg
pusha
es
daa
lahf
clc
rolb
mov
pop
and
jmp
mov
setle
adc
add
dec
jge
adc
cmp
and
mov
pop
jns
xchg
xlat
fcmovnu
aas
add
and
shll
hlt
cmp
cmp
nop
push
or
dec
cmp
xor
shlb
stc
out
clc
ret
adc
cmp
add
mov
ficoms
rolb
scas
lods
lds
jb
jg
jbe
push
add
aaa
add
add
cmp
test
nop
in
cmp
mov
hlt
insb
xchg
out
add
pop
aad
xor
and
add
inc
iret
ds
adc
inc
call
stc
fldl
add
daa
xor
pop
or
hlt
cli
mov
xor
les
xor
enter
add
pop
and
pop
test
leave
or
pop
mov
jne
mov
cmp
and
or
jae
orl
test
ja
lods
inc
inc
cmp
js
mov
lds
and
jnp
rcll
xor
mov
or
outsl
ljmp
xor
and
push
in
or
inc
pop
adc
inc
mov
and
leave
pop
mov
jp
and
inc
inc
pop
mov
repz
into
mov
scas
aam
xchg
add
rolb
rorl
sbb
gs
ror
les
cwtl
sbb
cmp
inc
fiadds
dec
fildl
mov
and
cli
mov
add
add
imul
pusha
mov
add
js
in
insb
sub
pop
std
nop
inc
jp
push
add
dec
jge
add
add
push
lods
fisubl
rcrb
xor
jl
adc
cmpsl
roll
push
movsb
and
adc
in
sbb
mov
push
cmp
push
add
mov
or
add
or
xlat
dec
in
scas
shrb
xor
imul
mov
xchg
out
imul
mov
jl
ljmp
pusha
out
cmp
mov
mov
xchg
jo
aad
add
sbb
in
or
push
ljmp
cmp
dec
mov
xchg
pop
sbb
mov
int
or
stos
nop
add
inc
sub
mull
cltd
inc
int
lcall
pusha
pop
sbb
outsb
xor
sbb
mov
lahf
add
sahf
stc
jg
enter
mov
and
pop
or
add
data16
dec
popf
mov
nop/reserved
dec
stc
add
pop
out
call
sbb
xchg
inc
fiadds
test
lea
dec
lret
add
or
cmp
stc
mov
into
addb
js
hlt
jbe
cli
adc
dec
jno
xchg
shr
or
dec
mov
lret
xlat
xor
add
mov
xor
push
leave
jns
mov
mov
mov
inc
repz
inc
lea
add
rorb
iret
adc
loop
inc
imul
divl
inc
stc
push
in
cmpsl
pop
das
and
xor
mov
mov
faddl
ret
in
pop
adc
add
sub
hlt
add
jl
inc
jp,pn
lock
add
jo
xor
add
xchg
mov
into
add
push
lret
adc
fwait
add
imul
lcall
pop
add
dec
loope
sbb
mov
pop
add
sbb
loop
mov
push
mov
sbb
add
dec
fstpl
std
scas
inc
pop
insl
add
int3
cwtl
rorb
sbb
pushf
ficomps
pusha
and
inc
shlb
cmp
push
jl
pushf
cmpsl
lds
push
lock
or
mov
push
add
jnp
add
shl
arpl
dec
mov
mov
in
outsb
add
add
add
pop
jns
and
xchg
push
and
lock
add
and
lret
arpl
sbb
dec
xor
xchg
addr16
or
pusha
fcmove
add
jmp
clc
aad
pop
push
leave
movsl
ljmp
int3
mov
rcrb
mov
aaa
sub
lock
and
add
sbb
in
loope
es
sub
sbb
test
add
xchg
movsl
inc
xchg
jmp
pop
push
sarb
add
fnstcw
pop
arpl
jge
shll
and
cmc
pop
or
adc
or
ret
insb
popf
and
sahf
add
dec
rorb
push
add
pop
das
daa
push
mov
notb
push
add
pop
stos
jnp
push
push
xchg
and
mov
push
cld
je
mov
pushf
add
mov
fadds
jmp
add
xchg
jg,pn
add
ljmp
enter
fwait
xchg
mov
dec
sbb
jle
loop
jnp
hlt
or
sub
inc
or
pop
es
mov
push
sar
loop
std
stos
data16
adc
iret
sbb
out
push
fistps
pop
jmp
add
mov
daa
dec
sbb
pushf
cmpsb
cmpsl
cmp
lret
faddl
sbb
lea
outsl
xor
shlb
jbe
add
test
fadds
push
repnz
cld
nop
popl
mov
lods
and
xor
lahf
pop
enter
shll
inc
add
and
push
fmul
das
out
loopne
shlb
jp
mov
inc
and
dec
xchg
add
adc
add
add
lock
in
push
int
call
test
enter
add
lods
repnz
pop
lret
add
mov
adc
setp
in
pop
aaa
or
add
jmp
or
mov
lahf
and
cmpsl
out
repnz
add
ds
mov
mov
pop
loope
neg
push
dec
add
jmp
mov
inc
push
cmp
sbb
pop
sbb
rorl
shlb
add
ljmp
add
filds
fwait
push
or
add
ret
ljmp
xchg
popa
hlt
pop
mov
pop
stc
addr16
dec
sub
xor
sbb
or
add
inc
movsb
xchg
mov
mov
into
push
maxps
pshufw
and
and
adc
mov
mov
ljmp
pop
add
insb
add
flds
push
push
loopne
and
mov
outsb
cld
popf
pusha
jnp
sbb
xchg
and
lret
dec
inc
je
or
filds
rolb
add
into
add
lods
lods
push
cmp
rolb
cs
sbb
ss
dec
adc
insl
lret
add
cmpsl
inc
shrb
push
or
call
sbb
jae
daa
enter
icebp
add
dec
sub
mov
sbb
das
ja
xor
xor
bound
dec
add
rclb
xchg
paddb
dec
mov
and
add
inc
in
cltd
jo
mov
jno
outsb
or
or
rolb
mov
mov
jmp
dec
mov
hlt
mov
sbb
leave
cmp
mov
adc
das
pop
loopne
cmpsb
mov
mov
pusha
jl
sbb
add
ja
push
ljmp
xor
out
jae
subb
or
pop
pop
xor
hlt
stos
add
add
lods
add
inc
cmp
lahf
xchg
cmpsb
lea
add
in
inc
movsb
test
mov
or
dec
push
icebp
cmc
jo
add
and
cmp
movsl
popf
add
sbbb
test
cmp
imul
xchg
inc
stos
insl
cmp
add
xchg
cltd
xchg
mov
mov
adc
jg
cmp
in
mov
in
push
insl
xor
shll
add
shr
in
mov
pop
daa
mov
xlat
int
xor
shrb
add
cltd
aad
adc
adc
out
xchg
push
and
pop
xchg
adc
and
add
inc
mov
push
cmp
sbb
icebp
mov
dec
and
nop
adc
loope
in
inc
jbe
xor
fs
fldl
out
add
out
jl
in
ja
push
sub
shll
pop
push
jge
fsub
inc
repnz
sbb
push
inc
jb
add
mov
scas
int3
getsec
or
dec
rcl
and
shrb
add
rcrb
sbb
out
nop
fisttps
js
add
sub
push
into
or
push
or
out
outsl
cmp
pop
pop
ljmp
sbb
js
add
sbb
enter
mov
out
mov
setb
orb
adc
add
stc
sub
imul
jmp
mov
std
cmp
mov
call
adc
push
dec
push
adc
rcrb
sub
dec
fidivl
dec
add
cmp
adc
in
adc
xchg
mov
test
pushf
inc
hlt
jmp
pop
out
rcrb
fwait
xor
inc
fstps
imul
adc
push
shlb
pop
add
pop
xchg
dec
rol
jo
int3
add
fdivrl
sub
shr
and
roll
cmp
repz
jp
jns
xorl
cmp
aas
imul
sbbl
xchg
dec
loope
mov
jo
dec
or
lock
push
cld
iret
inc
cwtl
imul
lds
mov
adc
xor
lock
pop
xchg
mov
ljmp
xor
into
lcall
add
lea
and
pop
pop
inc
cwtl
pop
cmp
bound
out
push
dec
addb
jl
add
cmc
js
dec
xchg
scas
mov
mov
loop
inc
and
lea
lret
insb
and
insl
and
adc
nop
popa
pop
add
add
cmp
pop
mov
scas
rorb
or
push
call
aam
xor
loopne
sbb
sbb
jbe
cmpsl
push
adc
cmp
data16
add
in
adc
mov
pop
pop
push
add
pop
dec
in
adc
mov
sub
add
sbb
lock
in
iret
dec
and
imul
aad
pop
inc
dec
sbb
mov
mov
aad
test
flds
ret
stos
xchg
mov
add
sub
mov
add
inc
aas
jno
jo
cmp
fisubs
inc
xchg
dec
clc
or
cmp
sub
cli
push
dec
aas
jno
add
std
add
test
mov
xchg
or
mov
imul
add
jnp
sbb
pop
xchg
pop
or
ret
adc
icebp
je
in
stc
inc
cmp
push
das
and
lods
insb
pusha
inc
imul
jae
push
hlt
add
fcmove
ljmp
jmp
in
add
fdivrs
push
adc
scas
enter
arpl
repnz
stos
push
nop
cwtl
mov
add
ljmp
xor
in
or
popf
sbb
test
addb
fdivrs
pushf
add
aam
pop
pop
xor
add
pop
lock
negl
xchg
mov
pop
ret
lahf
test
addr16
nop
push
pop
cmp
push
push
mov
test
pop
insl
inc
outsl
int3
scas
and
pop
dec
add
and
loopne
mov
add
push
es
dec
or
lods
add
dec
sti
adc
push
mov
cmp
adc
enter
das
call
inc
add
js
jle
push
fs
call
popl
pop
mov
inc
lea
cwtl
into
xlat
or
dec
push
sbb
fld
pop
xor
out
add
mov
jl
pop
ret
jnp
cmp
lock
and
paddq
cs
jmp
incb
push
inc
mov
mov
mov
pop
push
stc
notl
jbe
sbbb
test
add
in
dec
mov
mov
adcl
fcmovnb
dec
sub
add
in
into
sahf
lahf
jne
lods
mov
inc
fildll
xchg
sar
and
flds
sub
cltd
ret
add
pop
outsb
rorl
sahf
nop
pop
lea
pop
mov
sub
test
add
pop
icebp
add
scas
shll
jl
sbb
sbb
rcrl
pmaddwd
out
or
test
add
xchg
cmp
fwait
and
loopne
ljmp
jecxz
rolb
inc
mov
cmp
aam
cli
mov
add
add
mov
out
mov
repnz
call
mov
arpl
dec
add
mov
mov
inc
mov
popf
xchg
int3
in
shlb
in
xchg
js
or
inc
scas
cmc
mov
add
jo
push
cmp
xchg
or
cmp
pop
aad
popf
icebp
push
push
pavgw
mov
inc
jns
in
or
rolb
es
add
test
loop
out
add
rolb
add
sub
in
or
dec
or
jmp
sbb
mov
roll
add
mov
fadd
enter
add
xlat
push
mov
fs
loope
pop
lahf
or
add
xlat
aad
imul
cmp
xchg
mov
dec
pop
add
jmp
cmc
sbb
mov
cmp
add
mov
cmp
jmp
or
push
jns
mov
mov
imul
loope
lret
in
sahf
add
stc
pop
insb
xchg
pop
jae
sub
fisttpl
push
imul
loopne
inc
add
das
cmp
sub
cwtl
add
cmp
fiaddl
mov
fisttps
add
push
push
loop
popf
jbe
iret
add
cltd
nop
adc
mov
add
jge
cwtl
roll
adc
leave
cmp
mov
or
jecxz
mov
lods
mov
stos
mov
inc
fwait
xor
inc
cmp
or
push
push
xor
adc
stos
add
stc
stos
imul
inc
test
pop
pmullw
add
push
lret
cmp
and
test
inc
les
shl
add
outsb
rol
shll
das
popl
xor
mov
inc
pop
jecxz
add
pop
dec
fildll
ja
int
sub
and
incl
xlat
stos
mov
insb
xchg
add
adc
bound
lock
cmp
out
rcrb
sub
xchg
dec
adc
lret
scas
mov
jnp
jno,pt
sub
add
pop
punpckldq
adc
jns
add
push
in
out
pushf
and
nop
xchg
or
ja
imul
xchg
add
cmp
add
enter
insl
add
call
rorl
lret
add
cmp
stos
addl
mov
ss
mov
add
mov
das
sbb
cmpsl
sbb
add
sub
mov
add
std
call
and
notl
xchg
sbbl
in
addl
jb
xchg
push
pop
mov
sbb
adc
cld
mov
rorl
push
xor
mov
aad
loopne
mov
push
push
roll
add
xchg
lea
js
mov
or
adc
sbb
repz
out
pusha
sbb
out
aaa
fs
cmp
xchg
xchg
enter
aad
dec
mov
pop
push
mov
jl
clc
cwtl
inc
add
add
add
dec
mov
xor
shlb
dec
xchg
mov
bound
cwtl
ss
and
cld
dec
mov
xchg
insb
or
rcll
add
jb
out
mov
scas
lahf
dec
stos
roll
ret
push
cmp
add
lea
test
mov
andb
lock
cmpsb
bswap
sahf
add
out
rcrl
into
mov
jecxz
push
jp
mov
xchg
add
push
loop
je
pusha
hlt
rorb
add
cmp
ss
push
pop
hlt
rolb
inc
cs
popl
hlt
push
pop
push
jnp
cld
push
add
xor
test
cli
roll
jbe
and
jae
add
add
cltd
dec
aas
into
or
mov
sbb
scas
xchg
mov
insb
mov
sub
and
adcb
pop
sub
adc
mov
cs
incl
cmp
sub
or
sbb
out
sahf
sub
or
imulb
push
sub
or
mov
dec
push
pop
clc
add
mov
hlt
sbb
movsl
cmpsl
lods
add
xchg
mov
push
je
pop
cmpsb
xchg
mov
bound
add
jb
inc
push
fmull
sbb
lret
ret
cmp
pusha
jnp
pop
mov
push
jbe
rorb
or
cmpsl
xorb
loope
pop
pop
mov
lea
mov
xchg
jp
add
pop
jnp
cmp
xor
dec
out
dec
push
cmp
into
repnz
aas
lds
clc
xchg
inc
imul
sbb
add
push
push
popa
outsl
ret
stos
adc
cmpl
rcl
lock
or
pop
dec
cli
sbb
leave
mov
dec
ds
test
push
push
sbb
or
adc
add
push
xlat
and
add
cmovge
jae
es
sbb
das
popa
mov
loope
outsl
mov
xchg
in
cmp
enter
nop
add
mov
or
add
or
sbb
lods
dec
ltr
sub
rorb
add
hlt
shl
sbb
lcall
loop
add
shlb
pop
sbb
mov
pop
aaa
sub
xor
sbb
push
cmpsb
loopne
lds
lock
jb
in
and
inc
mov
ds
add
stos
or
insl
xlat
movsb
in
shlb
or
dec
mov
sti
pop
int3
adc
sub
in
mov
out
mov
inc
js
pusha
mov
sbb
aad
in
push
mov
fidivrl
jp
adc
inc
jno
in
add
mov
fnstsw
sarl
pusha
lock
or
inc
gs
add
mov
pusha
movl
mov
lret
jno
jne
in
mov
add
pop
lahf
sub
test
sahf
nop
sti
dec
in
add
jne
pop
decb
add
cltd
orb
push
xchg
negl
dec
ret
out
enter
or
aad
sub
repnz
shll
add
lret
mov
push
add
test
mov
or
daa
imulb
add
int
push
les
push
adc
sub
js
add
mov
pop
inc
mov
int
fwait
icebp
push
lahf
jne
sbb
adc
inc
mov
imul
dec
popf
jg
scas
adc
pop
sbb
sub
movsl
and
sub
sarb
lcall
jo
repnz
xor
add
or
test
das
push
cmp
sti
hlt
pop
dec
daa
inc
std
enter
data16
fdivrs
adc
cmpsb
pop
lcall
sbbb
mov
sti
cmpb
xchg
or
xor
out
or
rorl
insb
add
xlat
lea
push
cmc
test
dec
cmp
lret
mov
jbe
pushf
inc
test
add
jo
dec
adc
out
mov
addb
sbb
sbb
xor
add
mov
mov
mov
lods
imul
xor
loopne
add
pop
sub
sbb
add
jg
push
jmp
js
xchg
inc
idivl
test
into
mov
jo
pop
out
add
mov
cltd
add
jbe
xchg
dec
push
add
aas
fcompl
add
icebp
xor
test
and
adc
adcl
add
xlat
sbb
lds
sub
icebp
cld
mov
enter
add
stc
iret
adc
roll
jle
xor
jl
mov
xchg
mov
pop
int3
push
adc
aaa
and
pop
inc
fisubl
mov
push
push
popf
pop
inc
inc
js
sbb
lea
mov
imul
inc
push
cmp
nop
enter
push
jno
add
aas
xchg
push
out
dec
ret
pop
ja
pop
adc
add
and
mov
out
xchg
fildll
insb
sub
int
xlat
mov
scas
js
orb
add
aam
sub
add
dec
jle
icebp
lock
imul
jns
sbb
mov
push
push
xchg
add
xchg
jnp
cmp
adcb
jae
add
loop
test
jge
mov
shlb
add
jne
cs
int3
adc
je
movsb
jo
mov
sti
rcll
rorb
lods
inc
fiadds
lods
push
mov
add
add
push
push
cmp
jle
aas
add
push
sbb
push
das
test
pop
subb
sub
add
pusha
iret
push
sbb
jge
inc
add
or
test
scas
xchg
addb
or
sub
inc
mov
pop
or
jl
sbb
add
jge
or
out
add
push
pop
mov
call
mov
cmpsl
add
gs
dec
pop
adc
cmp
add
mov
outsl
lock
out
push
xor
pop
mulb
mov
aam
je
rolb
xor
add
adc
jnp
add
bound
xor
pop
push
cltd
aad
jne
flds
dec
orb
fsub
jmp
fsubrs
pop
and
inc
mov
ror
add
adc
fbstp
push
insb
and
loope
pop
xor
faddl
clc
test
or
sub
dec
sar
add
dec
mov
add
ljmp
add
in
nop
add
add
add
addl
scas
loopne
cmp
dec
add
jmp
sbb
add
push
or
in
ficoms
add
dec
out
ja
and
call
mov
mov
pop
aam
sti
pop
movsl
lods
add
adc
jge
mov
push
in
sbb
lock
out
movsb
add
cmpsl
lcall
add
inc
clc
xchg
add
jbe
dec
stc
int3
jo
add
nop
sub
movsl
gs
and
outsb
cmp
add
sbb
mov
inc
add
jg
je
inc
add
jp
add
outsb
in
add
sbb
jge
dec
sub
and
fsubrs
inc
cld
cmpsb
pop
dec
sub
and
imul
add
stos
cmp
adc
aad
xor
je
add
add
das
js
add
clc
aad
or
test
out
dec
add
inc
pushf
mov
add
inc
mov
aas
add
inc
mov
add
inc
js
inc
lahf
mov
pop
cmpsb
int3
xchg
adcb
mov
xor
sub
lahf
notl
into
fbstp
pop
dec
ret
push
add
insl
cmp
cmp
jp
mov
scas
inc
lret
fcmovne
add
icebp
xor
testb
dec
fstpt
sbb
cltd
push
sbb
subb
and
test
add
xchg
shr
jbe
cmp
cmpsb
mov
mov
cmp
pop
sbb
cltd
jb
insb
out
nop
adc
dec
or
add
mov
push
pop
pusha
add
sbb
fptan
inc
loopne
and
or
aad
add
fldl
lret
stos
xlat
add
sti
imul
adc
rcrl
dec
add
or
jnp
loope
pop
flds
inc
mov
sub
repnz
lods
xlat
stos
dec
add
sub
aad
arpl
or
imul
jmp
xor
push
add
mov
les
xor
xchg
fisubs
pop
aaa
pusha
mov
adc
aas
mov
inc
sti
sub
pop
insb
jne
xchg
stc
inc
mov
sub
cmp
stos
jnp
pop
pop
pusha
cmp
and
adc
inc
sbb
dec
rolb
aaa
mul
scas
push
cmp
or
xchg
adc
cld
stos
imul
loope
xchg
fldt
shll
mov
sbb
adc
inc
add
jne
add
xchg
pop
fisttpll
and
sbb
adc
lods
add
insl
cltd
mov
add
fisubrs
rorl
adc
fwait
push
in
inc
sbb
add
test
adc
loope
sti
sahf
jle
sbb
push
icebp
dec
mov
stc
push
adcb
add
or
nop
js
adc
cli
and
jg
ja
cmp
rolb
sbb
xchg
mov
and
pop
mov
nop
add
pop
frstpm(287
shr
xchg
jb
add
sbb
mov
xchg
add
add
add
out
pop
popf
xor
leave
pop
loop
add
and
mov
ds
add
cmp
clc
loope
sub
adc
jg
and
xor
stc
sub
add
lret
push
lock
imulb
add
outsb
imul
cmpl
lods
aaa
fwait
push
mov
repz
or
clc
out
cwtl
mov
mov
xchg
jbe
add
xor
mov
cli
or
sahf
aaa
pop
loope
xor
pusha
nop
pop
adc
xor
mulb
addr16
adc
push
data16
push
sub
cmp
js
xorb
xchg
cmp
lods
sbb
jge
mov
mov
lret
sbbb
push
add
and
dec
lock
adc
add
ret
rclb
adc
sub
js
add
push
dec
or
inc
pushf
xchg
cld
mov
les
sub
push
in
xchg
jecxz
mov
mov
xorb
dec
dec
nop
xlat
jo
push
loopne
fimuls
push
jnp
cmp
ljmp
mov
dec
hlt
sti
cmp
stos
xor
jg
or
rol
es
cmp
xchg
stos
adc
test
mov
push
imul
data16
rcll
mov
lret
sbbb
out
pop
adc
rclb
loopne
add
in
jno
jle
mov
lock
pop
add
je
test
bound
jo
add
mov
pop
cli
add
mov
aaa
xchg
push
faddl
mov
sbb
xorb
ficoms
xor
and
cmp
push
jl
or
pop
add
add
call
xchg
add
or
lea
adc
out
mov
add
xchg
pop
xor
sub
or
mov
fadds
mov
pop
lea
add
mov
cwtl
mov
sub
add
xor
rorb
mov
and
jb
add
cmp
add
adc
xor
and
ds
push
call
and
add
inc
int
xchg
adc
out
add
adc
pop
add
xchg
movsb
fbld
add
fnstcw
mov
add
xchg
vfrczps
sub
call
add
fnstenv
insb
mov
icebp
movsb
subb
addr16
test
xchg
add
xchg
xorb
mov
jnp
scas
jno
fwait
ds
or
xor
sbb
pop
xchg
shlb
roll
xchg
in
lock
arpl
xor
and
loopne
js
add
mov
xchg
add
and
in
jb
pop
out
jbe
fcmovbe
xchg
push
cmp
negl
cmp
add
es
jb
xor
adcb
orl
sar
stos
add
out
jb
xchg
lret
pop
mov
cmpb
add
cmpsl
mov
push
add
jp
jo
or
sbb
sti
out
pop
or
in
stos
add
cmp
xchg
mov
and
cmp
in
xchg
addr16
add
dec
jmp
icebp
imul
enter
aam
repnz
subb
or
subl
inc
xor
lock
mov
enter
mov
add
test
out
sbbb
inc
fildl
les
pop
mov
cmpsb
mov
and
lock
add
ljmp
test
push
std
add
push
outsb
mov
or
add
mov
push
fucomp
mov
stos
xchg
imul
cmp
jp
sub
mov
fiadds
xor
in
mov
jmp
inc
xchg
adc
sbb
mov
inc
nop
pop
cwtl
add
ljmp
sar
rolb
mov
clc
les
mov
movsl
mov
mov
pop
addb
adc
add
pop
or
add
nop
fadds
loop
xchg
arpl
xor
adc
dec
mov
inc
add
dec
fiaddl
push
and
sub
jne
inc
push
sub
int3
lret
pop
inc
mov
in
push
add
cmc
add
in
sub
adc
les
dec
pop
rorl
jmp
andb
pop
nop
test
cmc
scas
sar
adc
pminsw
adc
sbb
or
xor
cmpl
jae
cmp
add
stos
inc
std
push
fdivrs
or
pop
jle
sti
sub
adc
ds
mov
cmp
xchg
shlb
add
and
inc
push
icebp
lock
shr
or
les
add
push
cmp
sub
pusha
ds
add
loopne
scas
sti
add
adc
sbb
cwtl
pop
add
dec
pop
and
dec
mov
mov
push
loope
pop
clc
adc
sahf
sub
dec
xorl
mov
push
sub
add
testl
pusha
adc
add
xor
cltd
sbbb
js
or
xchg
adc
sub
adc
rcr
test
pop
xor
mov
cmp
xchg
add
scas
jmp
pop
add
mov
rclb
sub
cmpsb
fsubrp
mov
mov
icebp
push
inc
jbe
pop
mov
cmp
lods
popa
les
add
pop
xor
es
sub
enter
outsb
shlb
dec
mov
lcall
jge
add
cmp
movsl
add
je
orl
sbb
push
pushf
sahf
in
pop
or
xchg
mov
add
ret
mov
add
jns
cmp
lahf
add
nop
fildll
or
insb
add
cli
jbe
mov
mov
adc
mov
mov
mov
testb
lcall
add
cltd
test
mov
inc
push
sbb
or
dec
cmp
lock
pop
lret
mov
cmp
fimull
and
adc
add
jnp
mov
int3
pop
cmpsb
lea
pop
shrl
xchg
add
pusha
xor
mov
sbb
test
push
or
cwtl
inc
add
adc
mov
add
sub
mov
int3
pop
lea
mov
mov
push
sbb
and
dec
mov
popa
push
add
add
aam
jo
imul
add
push
push
add
push
adc
add
mov
sti
add
loopne
popf
xchg
addb
mov
add
pushf
stos
mov
push
sti
mov
mov
notb
ret
inc
ss
ja
outsl
and
add
add
sbb
dec
sti
call
pop
addl
add
mov
xor
mov
clc
mov
push
add
xchg
cmp
pop
sub
int3
loope
inc
fsubrs
sbb
pop
cmp
rcll
bound
call
pop
sbb
mov
pop
testl
pop
jbe
in
cmp
inc
add
and
add
push
jecxz
add
add
cwtl
iret
mov
add
jno
cs
pop
ja
sti
lcall
add
jns
adc
arpl
daa
call
cmc
dec
clc
movsb
icebp
data16
add
xor
dec
cmc
sbb
inc
jno
incb
mov
mov
dec
pop
adc
out
push
jnp
loopne
lcall
sbb
jl
jecxz
mov
lds
nop
fcoml
cwtl
stos
add
fnstenv
mov
xchg
add
jp
xor
pcmpgtb
hlt
sahf
push
mov
add
data16
fnsave
add
mov
push
test
out
arpl
sahf
and
inc
in
stos
hlt
xor
mov
pop
adc
add
sahf
daa
mov
dec
cmpsb
mov
ds
and
push
mov
add
hlt
lret
xchg
in
jl
fucomp
loopne
in
aas
addr16
add
adc
add
in
xchg
shlb
add
sbbb
cmp
out
dec
stos
xchg
insb
and
dec
hlt
mov
flds
or
push
test
push
adc
or
xor
stc
arpl
mov
mov
push
rclb
scas
add
nop
std
add
xor
inc
add
and
clc
stos
popf
xchg
add
dec
mull
cmp
and
fcmovu
push
popa
out
jne
lock
add
lret
mov
icebp
add
adc
outsl
pop
jge
and
xor
insl
xor
add
mov
in
shrb
sti
mov
add
repz
ja
inc
add
mov
or
add
sbb
add
daa
rolb
sub
dec
in
xchg
add
xchg
dec
mov
lcall
and
add
and
insb
pop
jle
js
sub
sub
and
xorb
pop
pop
cli
movsb
orb
push
adc
repnz
push
rcrb
or
sub
mov
ljmp
mov
subb
xchg
test
sti
sub
push
inc
loopne
pusha
inc
jnp
dec
int
roll
js
dec
sub
push
cmp
clc
xchg
push
outsl
nop
rolb
hlt
in
stos
cmpsb
inc
xchg
popf
add
jmp
and
jbe
and
or
push
mov
push
popa
cmovp
in
lods
add
jle
imul
adc
iret
loopne
sbbl
add
mov
cmc
pop
lock
cmp
jb
xor
jp
mov
pop
nop
sub
pop
add
sarb
adc
xchg
mov
sub
mov
cmp
add
addr16
inc
sahf
cmp
nop
dec
add
mov
fiaddl
mov
or
add
mov
call
int
mov
xor
outsb
push
shl
cmp
pop
add
lods
cltd
pop
inc
adc
test
add
fwait
mov
inc
push
add
int3
or
push
cmp
and
sbbb
add
sbb
movsl
cmpb
das
jns
add
adc
lds
iret
repz
enter
cld
jge
cli
jo
test
inc
pop
cmp
fs
scas
mov
fwait
cltd
jl
fsubrs
loopne
daa
cmp
or
xchg
dec
pusha
mov
sub
add
in
mov
shlb
fs
fs
jns
add
mov
je
les
adc
orb
dec
pop
cmp
mov
push
ret
or
scas
and
cmp
aad
fs
stos
outsb
pop
push
jb
aaa
jo
mov
add
test
add
aas
stos
jbe
mov
sbb
aaa
lret
xor
xorl
mov
push
shrb
add
aam
inc
add
outsb
sar
mov
jo
adc
jp
adc
orl
jl
push
sbb
cmpsl
add
or
out
xchg
adc
int3
inc
hlt
push
lock
mov
pushf
cmp
movsb
dec
mov
mov
mov
cmc
add
in
in
ret
dec
das
mov
xchg
pushf
lock
or
sbb
and
dec
adc
xor
or
sbb
mov
add
int
rcrl
add
sbb
mov
lea
jmp
push
add
dec
mov
shlb
loope
adc
inc
push
pop
or
stos
adc
mov
push
jl
jge
sbb
mov
rcl
add
jo
sbb
xor
les
pushf
add
orb
insb
cmp
orb
mov
shrl
xor
sub
push
mov
repnz
shlb
xchg
jne
add
mov
popf
enter
adc
movsb
orl
xchg
rorb
inc
lods
cmpsl
pop
cmc
adc
in
rcrb
pop
add
xchg
cmp
sub
cmpsb
push
or
adc
and
adc
leave
push
or
jb
pop
jbe
bound
lea
movsl
scas
xchg
dec
push
lcall
pop
clc
in
add
mov
dec
add
hlt
sbb
add
lret
xchg
xlat
adc
subl
add
test
adc
cmpsb
call
subl
dec
or
pop
mov
jbe
adcb
fnstsw
les
shrb
sbb
lods
or
xchg
loopne
cmp
sbb
call
mov
test
or
ret
dec
mov
sarb
js
push
add
xchg
popa
ficoms
rep
xor
rolb
sbb
scas
inc
xchg
or
jbe
jecxz
aam
lods
fsubrl
sbb
add
mov
add
jp
inc
mov
mov
push
ret
jmp
lret
mov
testb
orb
inc
add
pop
push
iret
add
push
rcl
sbb
add
testb
das
test
or
adc
mov
lods
mov
mov
jp
jmp
jnp
bound
daa
inc
xchg
pop
jo
adc
and
mov
push
pusha
movsb
add
lret
shlb
xchg
push
inc
fdivrl
cmp
adc
roll
iret
addr16
dec
pop
clc
and
lret
cwtl
cmp
jns
push
wrmsr
daa
stos
push
sar
push
push
or
dec
testb
mov
jl
cld
pop
add
mov
rcll
roll
cmpsb
sti
dec
mov
add
mov
cwtl
stos
inc
pop
add
cltd
mov
sub
fidivl
jmp
clc
fdivrs
push
pop
aam
xor
xor
ljmp
mov
sbb
cmp
adcb
mov
movsl
in
sbb
xchg
fisttpll
jne
or
shl
je
loopne
addl
in
mov
jecxz
test
rolb
sub
push
cmp
ss
int
shl
fiadds
adc
cmpsl
mov
sbb
mov
xlat
pop
jp
aas
lcall
insl
push
or
add
and
divb
push
shll
loopne
jmp
mov
add
push
and
add
les
adc
sub
push
jmp
leave
mov
int
das
add
ss
mov
out
inc
std
add
adc
mov
stos
bound
sbb
jae
and
jg
ds
push
and
add
and
sbb
sbb
cld
adc
sbb
mov
movsb
hlt
jmp
gs
scas
rolb
aaa
xchg
mov
andb
xor
inc
add
addr16
test
shll
add
daa
pusha
ss
adc
push
add
cmp
mov
sbb
or
aad
mov
sti
addr16
or
add
les
into
repnz
mov
test
and
mov
mov
jns
lock
dec
push
loop
test
push
sbbb
cmp
inc
cld
imul
out
js
add
and
push
add
in
aas
std
mov
fisubl
push
les
pop
push
mov
ja
add
sbb
inc
sahf
push
add
das
out
popf
push
stos
lods
pop
xor
cmp
test
enter
scas
icebp
cmp
mov
cmp
add
mov
mov
inc
mov
cmc
add
and
xlat
inc
push
movsl
pop
dec
shlb
rcr
fs
es
test
add
add
cmp
jecxz
cmp
dec
in
add
fwait
add
xchg
cli
and
jmp
int3
add
mov
movsb
push
ret
mov
pop
lock
inc
insl
addr16
aas
cmp
cs
js
pop
mov
add
lret
faddl
outsl
out
push
push
mov
jno
add
test
mov
dec
prefetchnta
inc
repnz
movl
dec
add
movsb
add
inc
jne
push
mov
call
mov
nop
cmp
in
push
inc
stos
inc
inc
ficompl
add
pop
jmp
inc
xchg
mov
add
dec
in
or
xor
rcll
xchg
mov
test
mov
xor
out
scas
adc
push
std
in
loope
test
pop
add
fcompl
rcl
and
add
cmc
mov
scas
and
or
or
es
fildl
stos
insb
loopne
clc
inc
push
mov
ret
xchg
add
jne
lcall
xorb
rorb
in
insl
pusha
fisttpll
rorb
xchg
dec
mov
cmp
mov
fcom
mov
out
jae
mov
test
cs
std
daa
add
shlb
add
sub
mov
push
or
test
jle
add
or
add
pop
fistl
mov
dec
rorb
inc
fsub
inc
add
in
aas
je
add
mov
test
aaa
sti
add
mov
pop
outsl
enter
into
jno
gs
mov
sbb
jns
loope
push
inc
lods
in
mov
lcall
test
sub
pop
add
rcr
mov
add
push
out
mov
sub
test
mov
dec
add
int
jmp
or
push
dec
mov
aad
stos
inc
pop
sub
pushf
divl
popa
popa
movsl
push
push
mov
test
scas
mov
cmp
mov
adc
into
xor
js
jmp
lahf
dec
mov
mov
les
cltd
add
add
sub
jnp
cmpsl
xchg
cmp
push
lret
loope
pop
jge
cmc
int3
push
loopne
adc
mov
jb
add
cltd
adc
scas
dec
std
test
or
fidivs
aas
add
add
std
inc
cwtl
add
pushf
xchg
and
je
loope
or
test
xchg
sub
int
adc
insl
adc
sbb
lcall
add
fnstcw
ds
sbb
inc
xor
and
sub
add
cmp
jno
add
fsubrp
add
add
inc
jge
test
int
mov
dec
add
out
int
dec
enter
mov
sub
add
cmpsb
adc
lahf
out
jo
push
add
add
cmp
hlt
or
add
insb
adc
mov
mov
js
add
imul
jns
dec
sbb
dec
dec
add
pop
add
lock
lods
mov
call
rolb
in
pop
mov
sbb
sbb
test
sahf
sbb
jmp
or
cwtl
or
dec
mov
adc
clc
sub
js
pop
lods
pop
int3
add
jnp
js
adc
mov
mov
mov
xor
insb
sbb
es
jge
xor
mov
mov
mov
aam
jg
rcrb
or
xchg
sub
mov
and
call
add
xchg
test
cmp
add
mov
fdivp
jo
addr16
and
mov
ljmp
lods
dec
cmp
enter
sub
ficoml
pop
lcall
mov
jmp
add
push
pop
pusha
insb
push
push
jecxz
iret
xchg
push
nop
add
push
outsl
or
das
fildl
loopne
mov
test
push
xchg
inc
test
and
and
cmp
pop
push
test
ja
inc
mov
xor
js
add
lods
pop
push
int3
sbb
add
arpl
add
movsl
inc
sahf
outsb
adc
add
push
insl
cmp
clc
inc
inc
add
jp
je
shlb
add
sbb
sbb
jne
cwtl
pop
adcl
add
sbb
add
push
jl
cmp
pop
fs
cmp
mov
sbb
divl
inc
test
dec
pop
xchg
pop
js
pop
loopne
lahf
mov
jo
or
push
inc
das
add
push
push
subb
jp
add
xor
addb
push
add
movsl
mov
mov
push
inc
pop
xlat
push
pop
aam
sbb
pop
stc
mov
dec
sbb
jge
adc
add
mov
ds
pushf
add
test
lods
ja
add
test
cltd
add
shr
adc
add
add
pop
cmp
push
push
je
leave
lret
or
mov
add
and
add
add
filds
pop
xchg
mov
sti
testl
call
xor
add
xor
insl
and
xchg
insb
or
int3
add
cmp
aas
loopne
add
in
add
aaa
pop
xchg
lea
fstpt
fiadds
js
sbbl
dec
mov
add
or
fdivrs
push
mov
mov
add
cmp
push
nop
inc
nop
out
repnz
jnp
add
xchg
pop
sub
fdivrl
lock
xchg
movsl
add
aaa
shr
or
in
pop
in
clc
rcr
xor
icebp
add
cmp
rclb
sbb
test
add
push
out
dec
int
adc
mov
xor
pop
add
xchg
jno
fwait
hlt
add
bound
fadds
sbb
push
inc
dec
sub
add
xchg
pop
sti
xor
mov
movsl
lods
adc
negb
or
add
and
pop
sbb
lods
inc
jae
into
cmp
aas
cmpsb
pop
fwait
leave
std
dec
in
pusha
add
fistps
test
call
mov
sarl
lock
int3
addb
lock
loopne
or
aas
mov
add
shrl
xchg
jne
mov
pop
imul
repz
xchg
cmp
pop
lahf
cmc
pop
rcrb
movsl
jno
ret
add
sbb
mov
dec
push
and
lahf
add
mov
shr
or
mov
enter
add
add
cwtl
sbb
sarl
mov
dec
jge
adc
decb
or
cli
mov
jae
sbb
pop
mov
fsubrs
or
nop
adc
cmp
sbb
dec
add
nop
sub
pop
adc
addl
and
ja
add
add
add
in
fiaddl
xor
testb
aad
popa
pusha
mov
dec
or
push
shlb
add
in
mov
add
cmp
add
mov
cmp
cmp
test
add
adc
loopne
je
add
xor
enter
push
mov
insl
jle
jge
jp
jo
pushl
push
or
cmpsb
push
sbb
push
pop
enter
push
lret
lds
inc
sar
inc
push
adc
xor
rolb
ret
sub
mov
xor
or
jmp
inc
and
movsl
inc
sahf
sbb
mov
loopne
sub
add
jno
xchg
mov
mov
or
adc
add
mov
rcrl
push
shl
test
scas
and
push
add
pop
mov
push
subb
fnstcw
idivb
sbbb
test
xchg
or
add
cmp
dec
mov
lret
add
mov
push
cmc
popa
es
xor
dec
jecxz
add
sbb
ss
outsl
leave
sti
mov
xchg
loopne
pop
xor
cmp
repnz
jp
testl
sub
shlb
lahf
cmp
int3
mov
mov
pop
dec
push
xchg
loope
fnstenv
bound
adc
mov
das
pop
xchg
cld
insb
inc
mov
add
push
mov
leave
sbb
les
sbb
in
inc
inc
cmovo
dec
sub
pop
push
jbe
rcrl
insb
inc
enter
aaa
cmp
mov
andl
or
js
imul
ja
add
jge
fldl
or
xor
jne
popa
sbb
idivl
cmc
pusha
push
fidivl
jl
add
outsl
shlb
popa
test
xor
mov
push
dec
loop
lock
add
pusha
cs
push
in
push
add
lds
add
fisubrl
cmp
lahf
fadd
in
lods
mov
and
pusha
andb
mov
rcl
stc
mov
adc
add
addr16
cmpsl
xchg
mov
pusha
push
loop
add
test
in
cmp
aas
js
dec
inc
jnp
sarb
lret
insl
or
sbb
in
mov
lret
loope
cmpsl
jecxz
int3
icebp
fs
add
out
cwtl
call
dec
add
clc
mov
add
jl
lret
add
or
cs
add
shr
in
jl
pop
xor
mov
add
cld
jg
jmp
adc
xor
sub
in
mov
cmp
adcb
dec
add
shlb
jne
mov
mov
mov
cmc
or
loope
pop
adc
pop
daa
imull
xchg
mov
jl
or
jb
fidivrl
fists
rcrb
pop
mov
adc
bswap
rcl
shlb
lahf
inc
or
stos
push
test
sbb
ret
cmpps
pop
inc
fistpl
jae
cmp
int
dec
sub
add
pop
and
cmpxchg
pop
push
and
inc
cmp
add
clc
adc
sbb
push
cmp
jmp
test
mov
cltd
add
push
enter
out
test
push
scas
push
lods
pop
and
mov
push
xor
je
push
add
xor
scas
adc
aam
mov
jle
add
mov
inc
add
ljmp
xorl
iret
loopne
cmc
xor
sar
or
add
clc
out
pop
pop
lock
pusha
inc
out
pop
add
test
loopne
mov
cmp
popf
add
inc
mov
push
or
add
jne
jae
inc
in
sti
cmp
out
repz
pusha
movsb
clc
push
dec
xor
aam
test
pop
sub
into
jnp
cmpsb
xor
jo
jno
add
leave
ja
add
inc
xchg
jl
or
add
movsb
test
xchg
add
cmp
xorb
rorb
add
push
push
cli
inc
cld
xor
inc
int3
adcb
sbb
and
or
icebp
call
jg
add
mov
clc
jge
orb
movl
sbb
fcoml
lcall
or
add
out
xorb
add
jbe
loope
push
fisttpll
jg
lods
add
rcrb
leave
xor
mov
hlt
lret
or
das
outsl
add
mov
add
push
cmp
pop
test
cmpb
fnsave
les
jge
and
ret
add
sbb
loope
pop
cmp
and
in
pop
xlat
cmp
hlt
jmp
mov
push
enter
cld
add
rcrb
push
nop
outsb
cmp
sbb
fs
shrl
loopne
push
mov
in
mov
arpl
bound
shl
pop
lret
inc
add
cwtl
cli
out
mov
cmp
cmpb
mov
xor
pop
pop
fidivs
push
mov
loopne
sbb
movsb
or
outsb
inc
rolb
xlat
lods
loop
ja
filds
cmp
shrb
clc
loop
adc
pop
imul
cli
mov
mov
in
and
jo
push
push
inc
fidivrs
or
jb
jg
je
jl
cmp
xchg
loopne
adc
or
pop
lods
fisttps
jle
cmpl
add
pop
jmp
divb
imul
xchg
stc
mov
cwtl
jl
arpl
mov
xlat
insl
pushf
repz
xchg
das
ds
add
pop
pop
fcoms
adc
sub
xchg
jne
jo
pop
and
and
push
add
sub
mov
xchg
mov
mov
clc
mov
fadds
lcall
ja
add
outsb
add
pop
sarl
std
cwtl
push
add
in
stc
shll
lahf
add
add
dec
fsubrs
add
iret
popf
jecxz
mov
mov
xor
fsts
stos
fildll
ret
mov
inc
add
in
mov
mov
fs
sub
adc
sbb
iret
xchg
or
inc
dec
addb
mov
mov
js
add
punpckhdq
jg
clc
lcall
jl
and
out
dec
je
loopne
cmp
push
stos
divl
pop
loope
add
jno
jb
sub
add
ljmp
jg
add
pop
mov
decb
xchg
add
push
adc
or
arpl
pshufw
lahf
filds
lret
xchg
cmpsl
mov
and
xchg
dec
mov
mov
push
add
push
outsb
jnp
add
pop
push
faddp
pop
rolb
add
int3
mov
mov
xor
and
jb
cmp
fs
ficoml
or
cmp
cmpsl
jmp
xchg
cwtl
inc
jno
xor
nop
mov
mov
inc
cli
pop
call
test
sub
fs
cmp
add
sbb
mov
enter
mov
lods
lock
mov
jae
add
sbb
fs
pusha
push
add
scas
add
dec
int
jge
and
in
dec
aam
add
jns
add
dec
jae
push
shr
mov
dec
loope
and
and
or
test
iret
addb
loop
inc
dec
wrmsr
test
xor
call
dec
push
sbb
cmp
and
in
addl
iret
ret
das
ja
add
adc
push
mov
xchg
lret
add
sub
add
mov
inc
hlt
jmp
add
sub
movsl
sbb
xchg
divl
xchg
mov
aad
sbb
mov
sub
in
jo
xchg
dec
faddl
dec
loop
jle
out
mov
or
mov
out
aas
lcall
addl
mov
popf
cld
out
add
xorl
push
cs
ja
cmp
out
ja
dec
cmpl
lcall
jmp
scas
mov
shlb
call
jne
add
mov
je
adc
in
fs
inc
mov
nop
loopne
push
out
insb
jnp
add
xor
in
sub
int3
faddp
rolb
cmc
xchg
or
leave
insl
push
push
push
mov
and
fstl
jbe
pop
add
inc
sbb
mov
sbb
and
dec
ret
adc
adc
jnp
loopne
mov
inc
repz
push
xor
mov
add
fcoms
test
xchg
add
sub
mov
xchg
cmpb
or
outsb
leave
hlt
sbb
add
outsl
rclb
dec
ja
rorb
lea
sbb
jne
xchg
jecxz
out
mov
arpl
hlt
push
mov
lret
jno
pop
jmp
nop
push
pop
add
dec
inc
mov
or
xor
and
int
add
xchg
cmpb
daa
or
movsl
or
stos
movsb
in
add
lret
inc
cmp
sbb
cltd
addr16
mov
pop
rcll
cmp
filds
out
pop
xorl
add
subb
addl
jo
mov
inc
lret
loopne
lods
cwtl
ja
sub
mov
fsubl
xor
mov
cli
bound
lcall
shl
inc
scas
add
pop
cmp
cli
in
lcall
or
xchg
jle
shlb
arpl
lock
mov
subb
in
mov
mov
test
test
xor
xchg
push
cmp
mov
rcll
inc
movsb
jle
pushf
jne
add
adc
addb
add
sar
insb
lcall
dec
movsb
cwtl
xor
adc
loop
mov
pop
in
sbb
and
insl
sub
hlt
subb
loop
push
add
outsb
in
lock
pop
repnz
push
ret
cld
mov
jg
roll
xor
xchg
ret
int3
add
jns
cltd
add
and
outsb
out
add
psubusw
mov
filds
pusha
mov
jo
jbe
mov
subb
aad
js
pop
or
push
stc
mov
enter
adc
adc
pop
inc
test
rclb
jbe
add
cmp
inc
sahf
mov
adcb
pop
mov
sbb
cld
xchg
cmp
pop
in
repnz
add
push
loopne
add
xchg
add
dec
add
or
pop
scas
bound
lret
cmp
lock
loopne
add
shrl
sbb
mov
lret
icebp
imull
pop
cmp
jp
aam
insb
mov
fcoml
mov
pcmpgtb
mov
inc
xchg
cmp
shr
or
or
dec
aaa
add
ja
mov
pop
and
xchg
push
sub
add
aas
fiaddl
adcb
sbb
and
pop
cmc
push
mov
sti
jno
jnp
or
xchg
fcoml
cmp
adc
cmp
inc
ds
out
stc
mov
add
pop
xchg
xchg
rclb
add
jae
xchg
insl
pminsw
mov
and
and
fiadds
pop
cmp
cltd
int3
enter
xchg
inc
sub
jnp
sbb
add
cmpsl
mov
arpl
add
sub
jb
packssdw
push
mov
fwait
pop
dec
dec
sub
popa
cmp
pop
sub
mov
push
push
cmp
mov
repz
and
push
xlat
mov
dec
add
xor
mov
inc
add
shrl
cld
loop
push
outsb
pop
adc
in
xor
add
or
ja
add
outsb
lret
pop
testb
hlt
test
lods
jns
mov
cmp
gs
repz
aad
jmp
ljmp
pushf
ret
mov
popf
or
mov
cltd
push
jb
or
pop
fisttpl
aas
pop
lock
jo
add
stc
loop
sub
add
out
pop
ja
dec
popa
sub
xchg
mov
dec
addr16
shl
bound
adc
aad
add
pop
insb
and
pusha
or
popl
xchg
mov
mov
push
fwait
mov
testb
imul
mov
ret
push
adcb
negl
mov
rorb
mov
add
daa
aam
shll
xchg
mov
push
repz
sbb
sbb
push
sbb
push
popa
loopne
and
pop
xor
fistpll
ja
ss
js
sub
add
loope
mov
lds
fsubl
nop
cmpsb
xor
pop
add
push
mov
adc
clc
push
xor
or
mov
sbb
pop
mov
ret
mov
add
cmp
mov
out
mov
ljmp
insl
int3
xchg
push
mov
or
bound
scas
lock
add
adc
rclb
mov
in
mov
xchg
test
stos
push
rcl
fstl
cmp
inc
or
xlat
add
adcb
push
cmp
insb
ret
push
fcoml
adc
popa
fmuls
rcrb
mov
in
add
pop
sbb
pusha
fs
push
xchg
bound
xor
int3
xor
imul
test
dec
in
test
mov
pop
mov
jl
xchg
jle
lods
fcoml
pop
mov
inc
adc
insl
enter
sbb
mov
stos
loop
test
sbb
inc
out
add
nop
cs
inc
adc
pop
imull
add
in
inc
xchg
add
mov
clc
shlb
mov
cmp
aas
out
ja
dec
sarb
push
push
dec
imul
add
xchg
pop
mov
pushf
ret
mov
sahf
shlb
add
cmpsb
pop
mov
push
imul
leave
and
scas
add
xor
xor
insl
mov
lds
mov
xchg
inc
bound
pop
adc
push
ret
mov
fs
and
pop
push
xor
pop
add
xchg
lret
pushf
ret
les
pop
xchg
pop
xchg
push
push
pusha
sbb
repnz
test
jge
neg
xor
popf
push
push
sbb
sbb
cs
mov
sub
incb
clc
xchg
pushf
xchg
mov
inc
push
or
pusha
fs
fwait
inc
loope
std
pop
and
movsb
pop
into
popa
cld
sub
pusha
aas
cmp
roll
sub
jle
test
or
mov
xchg
xorb
inc
rolb
sub
mov
inc
push
push
dec
cli
dec
cmp
add
push
inc
or
or
inc
cmpb
jnp
add
mov
pusha
inc
pop
mov
add
sarb
arpl
das
add
mov
orb
add
dec
shlb
add
push
dec
lock
lock
sbb
das
fimuls
call
sbb
loope
mov
sub
add
mov
sub
add
outsl
push
insb
xor
loopne
sbb
pop
or
mov
jnp
xchg
pusha
sub
push
das
ss
call
xchg
mov
jl
cld
movsb
cltd
mov
push
pop
repz
dec
outsb
lds
xorb
call
adc
clc
mulb
jl
mov
xchg
popf
dec
jg
lret
rorb
add
mov
cmp
sub
stc
add
push
hlt
les
push
and
sbb
or
xor
cmp
jl,pt
scas
scas
mov
out
push
pop
push
xchg
shlb
sub
fcmovnbe
sbb
add
sbb
add
out
push
add
out
dec
add
and
add
xor
cmp
xor
sbb
repnz
mov
aad
cmpsl
mov
sahf
mov
jmp
test
pusha
inc
out
push
int3
add
adc
gs
xchg
add
into
enter
mov
xor
sub
jecxz
pop
clc
xor
push
fisttpl
add
int3
jnp
call
test
inc
mov
inc
movsl
stc
icebp
scas
sub
add
ds
stos
and
ja
xchg
cmc
pop
push
dec
loopne
andl
inc
sbb
mov
pop
pop
sbb
lret
sub
adc
and
daa
adc
cmp
add
scas
testb
in
add
js
das
sbb
nop
xor
aad
xor
adc
fs
psubd
pusha
out
xor
mov
orb
mov
push
ret
lahf
xchg
leave
test
aaa
jnp
push
xor
int
mov
test
jae
adc
adc
mov
add
lds
push
or
ret
aam
stc
je
aaa
add
or
push
les
cwtl
jne
stos
push
add
push
mov
cmp
stos
xor
add
in
xorl
das
pop
xchg
pusha
jmp
dec
aam
or
int3
pop
jle
inc
dec
shl
enter
jno
sbb
mov
mov
je
add
pop
xor
or
or
adc
sbb
fsubr
pop
dec
fnstenv
add
imul
ret
ja
incb
loop
and
sub
int
pop
cs
test
cmpsb
sub
sub
stc
pusha
sbb
jnp
xchg
mov
jp
cmp
push
lcall
shl
nop
pop
movsl
mov
jns
stos
mov
call
add
jno
sub
or
sub
lock
or
and
out
or
and
mov
sbb
repnz
out
and
push
or
cld
push
dec
xchg
inc
mov
push
xchg
pop
fwait
sub
sbb
push
cmc
loope
or
adc
loop
nop
add
add
lahf
dec
mov
or
sub
pop
adc
cmc
je
mov
jmp
popa
jmp
add
mov
adc
sub
xchg
call
rolb
test
or
mov
cli
push
popw
xor
or
das
mov
fstps
jns
in
adc
cli
call
imul
insl
sbb
inc
pop
bnd
subl
pushf
xchg
lret
movsb
stos
xorb
lods
add
lock
add
movsb
mov
inc
mov
fsubr
in
mov
xor
ffree
inc
fdivr
test
or
movb
and
or
add
aad
xor
add
sti
ficompl
scas
push
in
lds
loope
jmp
add
lea
push
push
cltd
push
jns
pop
sbb
test
js
add
push
cld
out
inc
mov
repz
lock
mov
jbe
in
adc
hlt
xor
add
les
cmp
push
ficoms
in
inc
inc
sub
test
and
icebp
fisubrl
jmp
sub
adc
cmp
cmp
cmp
lods
pop
call
imul
inc
cld
add
movsb
movntq
xor
add
fdivs
mov
popf
pop
rorl
and
idiv
push
adc
add
arpl
push
bound
sarl
stos
rclb
aas
add
rolb
mov
push
ja
cwtl
rcrb
push
sbb
dec
xlat
mov
in
sub
inc
adc
and
mov
das
or
loop
icebp
and
stos
testl
adc
cmpsb
lock
outsb
scas
add
fs
fcmovbe
mov
jno
sub
add
lods
xchg
xchg
inc
andl
rclw
movsbl
add
inc
mov
lahf
or
dec
loop
int3
mov
ds
stos
shl
adc
xor
push
das
xor
out
popf
test
cld
je
and
repnz
push
add
mov
mov
clc
sbb
dec
inc
mov
out
js
lahf
outsb
pushf
xorb
dec
shlb
andb
add
and
push
mov
adc
xchg
jne
insb
push
adc
jbe
add
outsb
cmp
xlat
out
inc
and
adc
jno
add
orl
hlt
cld
fdivr
mov
jl
daa
push
add
push
ljmp
js
sbb
lock
jb
out
add
pop
pop
dec
sub
adc
das
add
enter
mov
lea
hlt
lret
popa
cmp
nop
scas
mov
push
add
jl
inc
out
or
loopne
nop
rol
jo
test
pop
inc
ds
add
mov
mov
mov
dec
fistps
aad
mov
in
mov
clc
fldcw
dec
fwait
les
sub
adc
insl
nop
cmp
mov
clc
lods
xchg
sub
lret
add
rcrl
jbe
gs
pop
add
jg
lret
and
fldcw
mov
xchg
add
aas
loope
add
shrl
dec
push
aas
out
pop
sub
push
adc
into
jno
lea
cli
add
push
clc
or
xchg
ja
cmp
sbbb
or
add
imul
out
test
cli
dec
ja
enter
lock
out
mov
adc
mov
andb
cltd
or
jl
xchg
mov
lret
sbb
cmp
rcrb
add
movsl
push
int3
or
imul
mov
fs
cmovns
and
xor
add
aad
nop
mov
add
add
rol
mov
or
push
test
inc
add
lods
add
lret
push
mov
jmp
add
fcomps
inc
enter
add
sbb
rolb
xchg
or
popa
pop
std
loopne
loope
inc
inc
loopne
stos
pop
mov
add
and
add
fwait
xchg
push
jo
add
je
cli
push
pop
enter
mov
adc
dec
jp
ja
dec
pushl
push
aad
push
sub
add
out
bound
pop
jo
inc
pop
popf
rcll
repz
push
or
or
push
lret
jo
push
lret
jmp
imul
iret
adc
push
icebp
xchg
andl
sti
jo
out
add
pop
pushl
mov
cmp
pop
add
add
idivb
cmp
xchg
iret
mov
jecxz
xorps
lods
mov
xorb
scas
popf
adc
lea
icebp
fdivrl
adc
xchg
sbb
sub
xchg
scas
stos
push
or
inc
orb
adc
call
cmp
in
xor
pushf
jo
jp
add
movsl
imul
les
dec
out
nop
outsl
ljmp
push
sbb
add
mov
call
incl
sub
or
call
fisttpl
ss
nop
mov
fadds
and
add
vdivss
push
push
or
sbb
adc
dec
cmc
mov
adcl
add
out
in
cmp
add
pop
sbb
rcrb
push
add
cmpsl
or
or
lock
add
lret
scas
fisubrs
lcall
inc
ss
xor
jne
lahf
test
fnstsw
lods
mov
push
popf
mov
or
outsb
adc
fmuls
add
mov
add
jne
cmp
ss
lret
hlt
xchg
mov
aaa
imul
or
popa
sub
call
push
mov
sub
add
dec
sarb
cmpb
xor
cmp
dec
mov
in
nop
cmp
andb
xchg
rolb
add
and
je
and
mov
pop
sub
xchg
in
cmp
add
xor
add
hlt
mov
add
pop
addr16
test
enter
cmp
and
xadd
sub
sbb
stc
shlb
in
lock
pop
ss
xlat
add
cvtpi2ps
push
cmp
mov
jg
lock
sti
cwtl
cmp
fcmovb
pop
pushf
add
fstpl
scas
test
push
add
jo
dec
jnp
cs
stos
mov
shl
lods
add
scas
repnz
add
xchg
push
add
inc
dec
mov
jo
dec
mov
jecxz
inc
call
jne
add
cmp
call
or
bound
jmp
mov
add
mov
in
cltd
mov
ret
std
cmpsl
xchg
les
or
cld
lods
subb
repnz
orl
xchg
dec
mov
add
pop
cmc
cmp
push
xor
orl
out
add
in
nop
adc
test
enter
icebp
mov
xor
or
pop
scas
ret
jae
sbb
dec
sbb
add
in
inc
mov
cmp
lea
xchg
loopne
add
popl
pop
inc
je,pt
mov
rcrl
add
push
xor
add
popf
inc
out
or
cmp
mov
add
icebp
pop
xlat
in
cmpsb
pusha
movsb
fsubs
xor
dec
nop
test
out
andb
addl
popf
rcl
nop
xchg
pop
dec
push
addb
hlt
faddl
enter
mov
les
mov
or
pop
xchg
mov
cmc
cld
add
movsb
mov
inc
stos
loope
cmp
addl
cwtl
loopne
inc
jbe
add
insl
xlat
mov
addb
fbstp
cli
jge
jnp
shl
xor
sahf
mov
mov
sbb
jbe
out
aad
push
jg
adc
add
inc
cli
cmp
and
mov
sti
in
sub
lea
cwtl
push
cltd
cmp
adc
cmp
jbe
roll
add
dec
sti
adc
cmpsb
push
inc
popf
fwait
add
xor
xchg
inc
inc
add
lret
lret
sub
jno
leave
stos
and
cmp
repnz
add
aad
inc
pop
push
mov
push
add
lahf
movsl
push
jp
pop
lcall
sub
xchg
pop
sbb
mov
shll
or
imul
jae
aad
add
cmp
sub
dec
sbb
int3
add
sub
lret
xchg
fdivrp
mov
out
lea
pop
cmp
push
mov
inc
ja
add
mov
scas
xor
and
cwtl
xchg
test
mov
pop
jg
xchg
add
cmp
pop
ret
shl
out
loope
cli
insb
add
rolb
test
add
mov
mov
imul
add
mov
call
cmp
mov
sarb
add
roll
sarb
test
or
cmp
int3
in
mov
pop
leave
cmp
dec
shlb
push
rorl
dec
xor
add
dec
lock
push
sub
add
jle
sarb
xchg
add
inc
xor
in
dec
mov
in
mov
mov
xor
or
jecxz
mov
leave
ss
psrlw
jb
xchg
fs
popf
jns
fldl
inc
loopne
adc
sbb
cltd
and
aad
xor
and
xlat
add
mov
jo
loop
je
outsl
sbb
les
push
int
lcall
out
roll
ljmp
inc
test
xchg
mov
add
imul
jo
push
repz
negl
add
icebp
add
insl
jle
in
mov
sbb
jns
cltd
out
cwtl
or
and
add
sub
adc
push
xor
xchg
mov
iret
daa
gs
in
aad
add
ret
mov
mov
jecxz
test
movsl
push
add
lretw
and
clc
xchg
out
inc
shrb
into
mov
pop
ficoms
fldt
sub
sbb
and
add
jecxz
ss
lea
cmp
call
out
fcomps
outsl
movb
sbb
out
jle
iret
dec
add
fsubp
fwait
inc
dec
cld
and
mov
pmulhuw
mov
lea
cmp
lods
pusha
xor
loope
outsb
pusha
shll
dec
dec
scas
les
int3
nop
cmp
loop
iret
fabs
inc
sbb
xchg
push
int
fnstenv
jmp
sar
std
popf
cld
adc
insb
mov
add
xor
adc
mov
add
ljmp
mov
push
enter
adc
or
imul
and
jl
add
jae
pop
lret
pop
mov
dec
aas
and
js
adc
mov
loopne
clc
push
adc
movsl
test
outsb
sub
orb
test
stos
mov
jbe
orb
mov
and
or
cmc
imul
shr
je
and
add
adc
lods
loopne
push
nop
adc
and
lcall
lret
ja
ss
pop
mov
xor
add
loope
sbb
pop
loopne
pop
hlt
sub
mov
and
sub
push
jge
sbb
push
push
ret
jecxz
js
xchg
add
and
add
daa
push
cli
and
add
nop
push
adcb
add
mov
aam
mov
jecxz
mov
stos
call
add
mov
dec
xchg
fdivrp
mov
push
xlat
test
adc
cli
add
push
enter
roll
test
mov
and
rol
cld
adc
in
add
push
int
ss
or
mov
addl
xchg
mov
rolb
or
push
xchg
xor
hlt
data16
add
or
sub
int
or
cmp
and
dec
inc
sahf
inc
dec
xor
movsb
adc
loope
ja
lods
andb
mov
into
filds
dec
cmp
mov
cltd
cmc
jmp
ret
scas
xchg
add
inc
repz
pop
orb
dec
push
cmc
pusha
gs
xor
jno
pop
inc
cmpsl
add
mov
push
jb
ret
call
lret
jl
add
rorl
mov
inc
jl
sbb
cmp
cld
mov
loopne
add
inc
in
mov
pop
push
jmp
jno
xorl
sbb
xor
pop
xor
xchg
aaa
sbb
test
mov
mov
vaddps
fstl
sbb
mov
push
add
aam
pop
adc
loop
push
bound
addr16
mov
sub
sbb
cmc
movsb
lock
cmp
cmpsb
pop
outsb
inc
pop
pop
lret
sbb
sbb
sub
mov
daa
sbb
out
sub
add
out
adcb
add
pop
aad
decl
and
gs
out
roll
cmp
xchg
push
or
pop
sbb
dec
mov
adc
sbb
adc
adcl
sub
mov
lods
jnp
add
pusha
push
insl
shlb
add
imul
cmpsb
lcall
std
es
mov
cmc
dec
psubusb
aam
imul
xor
jge
add
testb
fcoml
scas
aad
pushf
adc
pop
jo
les
mov
fadds
add
test
cld
add
pop
dec
insl
test
ficomps
test
div
xchg
xor
add
push
mov
mov
dec
mov
xor
ret
mov
sbbl
xchg
jns
hlt
add
aam
sbb
lds
push
call
and
ss
outsl
lret
jmp
int3
push
fisttpl
xchg
into
es
les
fwait
ret
or
or
add
movsb
or
jmp
movsb
out
or
adc
call
dec
xchg
popf
adcb
xorb
in
dec
xchg
mov
enter
movb
pop
lcall
xor
movsb
sahf
xchg
and
popf
je
in
sbb
sbb
cs
std
dec
xor
jge
loopne
andb
hlt
xor
shrb
pop
add
pop
jle
sbb
adc
dec
ffreep
sub
jmp
out
fidivrl
jb
add
adc
xor
xchg
and
out
mov
fstl
sbb
mov
pop
inc
cmpsb
cld
pop
addb
push
sbb
in
xor
push
mov
cmp
cli
add
in
std
in
test
lret
and
or
fbstp
pusha
shlb
lcall
adc
test
cmpl
cli
xor
insb
and
inc
clc
xchg
mov
cmp
shlb
and
add
pop
jecxz
loope
fdivs
inc
out
push
mov
push
loopne,pt
push
jg,pt
pop
loopne
fucomip
call
ljmp
inc
xor
ja
clc
mov
sub
jg
out
mov
aaa
push
daa
addb
push
inc
mov
or
stos
jnp
mov
xor
xor
jo
fsubl
inc
repnz
fsubs
mov
mov
push
push
sub
flds
inc
mov
add
cmc
xchg
addr16
fistpll
jbe
or
inc
lds
lods
in
fisubrl
xchg
je
push
fistpl
pop
in
pusha
mov
ds
xor
das
lret
pop
xchg
cwtl
add
mov
lcall
inc
popa
shlb
rorl
fcoms
inc
stos
in
rclb
out
adc
jmp
and
dec
mov
add
ret
andb
pop
jl
jl
popa
inc
test
mov
jge
xrelease
or
test
add
pusha
xor
in
fisttps
mov
sbb
in
inc
xor
xor
sub
dec
or
and
add
xchg
fcmovb
xchg
je
jecxz
push
cmpsb
in
add
dec
ja
mov
mov
je
fs
add
sub
push
cmp
lods
ss
pushf
or
in
or
jbe
cmpsl
jmp
movsb
pusha
jle
sahf
in
xchg
and
cmp
sbb
lds
hlt
fnstenv
out
fisttps
cmp
enter
or
sbb
hlt
adc
mov
mov
pusha
std
icebp
add
or
mov
idiv
lret
sub
add
in
test
mov
arpl
cmp
jp
out
loope
enter
xchg
movsb
cmp
and
lahf
out
aam
or
sub
mov
xor
hlt
mov
add
in
inc
test
sub
xchg
sbb
les
ror
add
inc
loope
out
push
lock
shrb
cmc
rcll
mov
mov
fstpt
push
call
out
pushf
cltd
pop
xor
ror
push
pop
aas
and
ss
popa
jo
add
outsb
rclb
mov
add
gs
cmpl
push
add
pop
mov
add
xchg
insl
cmc
fmulp
sbb
xchg
jo
or
js
xor
mov
js
add
xchg
aam
mov
and
push
push
cmp
push
lret
int3
add
and
inc
mov
cmp
movb
or
outsb
pop
or
cld
or
add
out
inc
iret
sahf
test
sbb
mov
dec
dec
add
sbb
or
test
inc
js
cmp
test
add
push
pusha
stc
inc
mov
cwtl
add
dec
pushf
or
pop
jle
cmc
and
mov
mov
cmp
das
or
addl
adc
icebp
fs
pop
mov
pushf
sub
idiv
lods
pop
int3
inc
pushf
dec
ds
mov
sbb
inc
jns
jns
sbb
push
iret
test
xor
cwtl
and
int
in
xchg
lret
in
loope
fs
cltd
mov
in
adc
sbb
fcomps
pop
faddl
test
cwtl
pop
cs
jl
xchg
mov
dec
and
rol
sbb
fisttpl
jl
pop
push
je
add
mov
iret
dec
add
lret
cs
sub
xorb
shlb
xor
mov
sbb
xor
jo
leave
ret
push
jo
popl
clc
inc
lods
mov
int
sbb
cwtl
repz
aas
arpl
jno
mov
inc
movb
jne
push
cmp
insb
add
loop
pop
xor
push
cmp
ret
hlt
arpl
add
adc
inc
notl
or
mov
insb
les
movsb
add
mov
dec
ret
das
cwtl
jle
add
int3
es
xchg
or
out
adc
addr16
mov
mov
loopne
pop
les
lahf
cmpb
add
xor
lods
in
and
add
pop
inc
cmc
roll
mov
push
cmp
in
xchg
pop
jno
sub
ret
pop
mov
addl
test
shrl
scas
add
adc
jno
stos
test
neg
push
and
popa
out
ljmp
jns
and
fcoms
and
mov
jnp
pusha
pop
inc
movb
or
fdivl
sub
outsl
in
and
inc
mov
sahf
loop
sbb
dec
call
push
std
sbb
or
jbe
psraw
mov
jecxz
sbbb
nop
sub
shll
dec
iret
fsubrl
call
movb
sub
es
fcomps
push
dec
repz
inc
test
ds
mov
inc
and
enter
add
cs
adc
xor
push
pop
cwtl
cmp
outsb
bound
int
mov
xor
ss
jmp
shrb
add
fwait
or
xchg
add
add
js
mov
aad
add
push
mov
pop
sbb
das
in
adc
sbb
mov
adc
imul
sbb
push
jo
filds
add
es
negl
lock
lods
mov
mov
jge
push
out
pop
adc
lcall
repnz
push
xchg
pop
out
inc
les
pop
loop
sub
add
dec
pop
mov
dec
das
inc
mov
xlat
scas
inc
adc
loop
sbb
in
sbb
sub
out
xchg
in
xchg
jae
enter
dec
mov
outsb
add
xor
clc
jns
sbb
add
mov
inc
fwait
rcl
loopne
out
push
outsb
mov
or
pushf
bound
or
xor
cmp
or
jmp
lds
xchg
rclb
jo
pop
dec
mov
mov
test
xchg
mov
mov
cmp
or
sbb
je
sbb
subl
xchg
and
or
popf
sub
jo
sub
and
fwait
call
scas
test
in
loopne
add
sahf
mov
or
add
add
fwait
push
es
pushf
and
iret
inc
lahf
cmp
daa
scas
or
fdiv
sbb
clc
push
leave
adc
add
and
mov
adc
inc
xor
xchg
mov
and
addr16
xchg
push
outsb
or
lret
lock
adc
les
mov
lcall
test
xor
fisubrl
movsl
fxch
pop
jns
jns
sbb
mov
sub
cld
xchg
add
or
movsb
lods
in
mov
test
mov
sbb
mov
loopne
mov
mov
sbb
roll
mov
and
imul
imul
dec
and
stos
lahf
pushf
pop
or
jns
js
fcoml
xor
xchg
sub
std
xor
and
sbb
js
mov
lret
arpl
andl
js
int
add
xor
repnz
mov
shlb
push
push
pop
dec
push
pusha
sub
movsb
fbld
rolb
aam
fcmovnbe
addb
int3
test
pop
add
add
cld
loope
sbb
sbbb
push
pushf
pop
in
adc
insb
add
ljmp
mov
shll
in
adc
loopne
ljmp
adc
andb
lods
jmp
push
xchg
inc
mov
xchg
psubb
cmp
into
data16
cwtl
push
inc
insb
mov
push
dec
dec
movsb
int3
or
clc
dec
test
mov
fcomps
xor
and
lock
roll
pop
movsb
jae
mov
push
test
adc
ret
cmp
and
add
sub
mov
fcomps
inc
cmp
adc
or
pop
xor
and
adc
push
rcrb
leave
cmp
xor
xchg
xor
mov
jb
std
into
mov
roll
divb
jo
adc
mov
sbb
xor
xor
add
std
pushw
push
lods
mov
daa
lret
pop
adc
mov
das
sub
daa
mov
push
sbb
andb
jmp
pop
add
sbb
pushf
push
xchg
ja
add
mov
ret
mov
filds
add
or
pop
or
cwtl
and
jmp
adc
inc
or
addb
fs
xchg
pushf
add
aas
bound
icebp
fldcw
sbb
call
mov
lcall
sub
pop
and
mov
enter
mov
mov
add
dec
mov
or
outsb
out
add
ficompl
lahf
subb
addl
jns
sbb
add
int3
popa
js
adc
lret
xchg
pusha
shl
mov
or
in
popf
hlt
inc
lret
imul
dec
lods
lret
add
sahf
xchg
add
jno
mov
rcl
mov
pop
and
xchg
push
movsl
jl
push
mov
pop
jb
repnz
mov
or
adc
shlb
dec
fldl
jns
add
add
pop
insb
jecxz
aad
pop
push
enter
mov
pop
xchg
lds
jle
enter
ja
je
or
shlb
pop
jmp
ret
add
or
lea
mov
pop
inc
leave
add
cmp
int3
sti
in
pushf
lret
in
adc
stos
loope
inc
cwtl
xlat
daa
push
ret
addb
sbb
popf
ret
addr16
or
pop
scas
xor
data16
dec
or
jbe
cli
add
cmp
sub
jge
lret
add
adc
popa
pop
add
test
mov
and
mov
add
shlb
dec
dec
or
das
in
sbb
or
jb
divl
fs
add
lcall
jbe
add
test
loop
pop
dec
in
sbbb
sbb
and
ja
inc
lahf
daa
cltd
sub
jns
add
insl
and
add
out
add
xor
sub
push
sbb
xor
or
mov
adc
or
and
jbe
roll
adc
cs
inc
aam
xor
js
add
add
mov
push
shlb
inc
push
mov
aas
mov
add
aad
pop
add
xchg
sbb
sbb
push
imul
mov
push
cmpsb
mov
add
jge
add
int
jmp
adc
sub
enter
adc
push
jle
or
adc
sbb
fstpl
jl
jb
mov
lea
aam
std
inc
enter
ds
iret
sti
add
movsl
in
mull
mov
fcoml
or
jo
cltd
add
shll
lea
push
xchg
dec
into
jmp
dec
insb
pop
inc
dec
shll
adc
mov
fsqrt
mov
sub
adc
push
pop
inc
dec
fstpl
jno
lgs
inc
out
jp
inc
jmp
add
ficoms
insl
in
pop
mov
and
mov
mov
fdivl
nop
and
cltd
jl
mov
xchg
push
loope
pop
imul
out
rorl
daa
loop
cwtl
xor
add
lcall
sbb
ljmp
movsb
enter
mov
cmp
add
sbb
mov
inc
movsl
jmp
adc
or
jo
cmpl
loop
test
xchg
sbb
pop
xchg
in
xor
adc
xchg
out
cwtl
cltd
test
lcall
add
xlat
jl
xor
add
rorl
lret
sbb
fdivrs
sbb
in
into
xor
sbb
mov
shll
loopne
stc
inc
dec
adc
push
inc
rol
fildl
cwtl
test
imul
inc
xchg
mov
pusha
inc
mov
fadds
xchg
adc
imul
sbb
addr16
and
addb
sub
mov
in
lock
fsubl
dec
lds
xchg
push
insl
test
sbb
imul
add
mov
out
cltd
fsubs
call
inc
push
or
mov
ljmp
xchg
aam
pop
pop
and
xchg
jl
add
test
dec
push
es
lods
sub
or
mov
test
imul
jae
fisttpll
int3
or
rcrl
adc
and
dec
loopne
cltd
inc
mov
mov
lods
jmp
adc
pop
dec
add
sbb
iret
es
push
pop
clc
rclb
lahf
lock
inc
loopne
push
outsl
dec
cwtl
stc
nop
jns
sbb
add
in
and
cmp
test
mov
out
leave
add
repnz
lret
add
test
es
call
pop
mov
inc
outsl
lret
sbb
dec
push
cmpb
movsb
out
pop
sar
jp
mov
js
arpl
inc
cmp
push
jecxz
mov
push
int3
and
out
loope
or
mov
jge
hlt
sbb
dec
inc
cmp
mov
mov
js
pop
aaa
cs
mov
cld
adc
sbb
and
and
loop
xor
add
jo
repnz
js
xor
imul
inc
mov
clc
mov
cli
xchg
mov
sahf
inc
dec
mov
mov
loope
add
ja
dec
std
pop
push
inc
and
jp
jmp
bound
jg
mov
push
xchg
jmp
ror
and
mov
pop
in
incl
push
icebp
ret
scas
add
push
sub
sbb
data16
out
xor
in
dec
repz
lret
sti
out
cmp
dec
cs
stos
add
cmpsb
lahf
jl
pop
out
xor
jnp
movsb
add
or
mov
fadds
shrb
add
push
pop
imul
add
cmp
test
test
rorl
arpl
cltd
push
add
mov
mov
leave
std
sahf
loopne
rcll
imul
adc
xor
lahf
nop
cmp
or
and
adc
pop
daa
lds
pop
mov
add
mov
int
push
push
sahf
lea
add
adc
jge
nop
cld
ret
pop
loop
or
mov
add
jne
and
loop
mov
push
mov
mov
lock
and
imul
sub
dec
int3
imul
stc
xchg
stos
rcrl
aaa
pushf
sbb
insb
add
add
push
sbb
int3
ds
fcomps
fistl
aam
inc
sbb
fimull
dec
mov
jo
loop
dec
and
adc
rorl
je
int
sub
xor
push
pop
sub
dec
enter
lods
or
add
mov
mov
xor
adc
cmp
sub
aas
and
ret
fwait
cmp
daa
or
xor
data16
in
es
jg
lahf
int3
push
lret
mov
je
lods
lods
mov
xor
or
dec
or
data16
int3
xchg
mov
mov
clc
popa
xchg
and
cs
pusha
gs
xlat
mov
and
loope
arpl
sbb
pop
add
add
push
in
inc
ds
sbb
in
add
push
mov
and
inc
addb
into
rolb
pop
mov
cli
mov
aaa
popa
and
aam
mov
xlat
push
and
pop
mov
aad
lret
add
xchg
ror
std
mov
movsb
call
and
je
pop
cwtl
mov
div
push
add
mov
insb
subb
sbb
popa
dec
cmpsl
test
repnz
or
lahf
sub
jnp
inc
push
fwait
add
cmpsl
and
out
jo
push
or
jle
aaa
or
outsl
loopne
jnp
ss
andl
pusha
int3
pop
push
jmp
xchg
pop
dec
inc
add
push
jp
loop
dec
iret
js
rcrb
jb
add
lock
in
pushf
js
out
out
mov
popl
add
out
fwait
mov
dec
mov
add
push
xchg
push
jnp
inc
movzwl
mov
jbe
outsl
sub
xor
add
xorl
subb
fs
negl
add
or
or
sub
lret
xor
lods
shl
shlb
and
and
rolb
xchg
mov
xchg
cmova
popf
pop
es
in
aad
fcmove
and
setnp
jg
out
jb
pop
dec
pop
and
shl
and
add
mov
push
or
in
mov
lcall
add
adc
add
mov
add
incl
cld
sbb
add
sti
pop
mov
xchg
push
std
pop
push
dec
hlt
mov
stos
add
out
xchg
loope
jbe
dec
repz
repnz
shrl
add
call
pop
mov
xchg
mov
arpl
cmpsb
fucompp
out
sbb
sub
sub
call
add
ja
hlt
adc
imul
adc
andb
push
aas
imul
add
xchg
push
movsb
add
andl
loop
pop
ret
and
movsl
sub
jbe
sti
fsubrs
jge
adc
xchg
std
sub
jne
or
push
movsl
in
enter
add
ja
push
jl
pop
dec
sarb
adc
stos
pop
push
in
jmp
out
fnstenv
add
push
adcb
pop
and
xor
sub
adc
push
stos
add
mov
je
inc
adc
pop
jecxz
incb
inc
dec
add
insb
mov
jo
sysenter
jns
push
rol
mov
sbb
mov
shl
or
pusha
je
dec
cmc
int
cmp
add
pusha
adc
add
fistl
inc
push
shll
cmpsl
sbb
add
mov
lds
mov
addr16
adc
cmpsb
sub
add
mov
lret
pop
add
mov
mov
jbe
stos
dec
and
cwtl
add
jns
xchg
add
jne
and
add
pushl
repnz
addl
dec
lock
ret
jno
add
scas
icebp
add
and
add
out
out
push
rcrb
mov
dec
int3
les
mov
subl
fnstcw
xchg
add
adc
sahf
popa
mov
add
xchg
lahf
clc
pusha
pop
outsl
add
divb
je
stc
jbe
call
or
sub
in
push
and
pop
push
and
pop
xchg
jmp
test
in
push
mov
jb
jmp
push
ds
mov
jp
gs
add
lahf
fisubrs
aad
add
es
adc
pop
dec
arpl
js
test
sbb
jno
pop
lock
jmp
mov
cmpsl
fstl
dec
test
rorl
icebp
xchg
je
add
in
ljmp
in
shll
fsts
push
add
inc
pop
jl
xchg
aam
js
or
mov
push
loop
jb
adc
movsl
out
mov
scas
dec
test
loopne
std
jo
jnp
pop
cli
pop
shlb
xchg
lods
dec
add
popl
sub
mov
jns
or
stc
jl
fnsave
sbb
xor
cmp
fldt
stos
jbe
or
sarl
mov
arpl
inc
rcl
or
psubsw
outsl
sub
jbe
mov
repz
push
add
mov
add
pop
cwtl
add
pop
sbb
inc
icebp
call
dec
mov
rcrb
cmp
and
insl
int3
rorb
sbb
cmp
mov
les
add
sti
dec
pop
add
inc
sbb
rcrb
lock
mov
sub
adc
loopne
dec
push
mov
in
in
sub
mov
mov
dec
and
push
insl
shlb
push
rcll
inc
push
je
add
adc
sub
add
data16
add
dec
pop
sub
and
arpl
cli
stos
mov
mov
push
jge
xchg
add
push
lret
fs
imul
out
pop
xchg
pop
clc
dec
pop
xchg
nop
or
or
inc
cmp
xchg
add
pop
lock
push
fwait
in
imul
loopne
cmp
arpl
dec
sbb
cli
pop
rclb
push
es
in
data16
inc
mov
adc
add
pop
repz
sbb
ret
cmpsl
push
add
adc
es
mov
aas
insb
xchg
jl
shll
addr16
dec
add
hlt
lods
cs
mov
add
pop
subb
mov
or
addr16
add
and
dec
fs
push
subb
das
xchg
add
ret
push
push
lods
fistps
sbb
add
cmp
jne
stc
push
mov
cmp
jne
nop
incl
dec
cli
xor
outsb
jb
frstor
jne
fdivrs
aaa
movsl
sbb
in
xchg
enter
mov
andb
add
and
sbb
shlb
scas
jae
and
adc
out
push
outsl
and
add
dec
pop
pop
mov
fiaddl
add
neg
sbb
adc
repz
loopne
inc
and
ss
or
mov
mov
cs
enter
jne
ds
add
andb
and
mov
xlat
sbb
sbb
add
adc
inc
add
adc
lret
in
fiaddl
sarb
cmp
ret
xor
clc
sub
lock
ljmp
popf
mov
and
dec
push
xorl
adc
das
mov
mov
call
mov
dec
sbb
xchg
push
mov
pcmpeqb
jmp
cmp
test
test
cltd
loopne
fisttps
sbb
jne
pop
add
pusha
test
ret
adc
sub
cs
mov
imul
jns
stc
les
or
mov
xchg
inc
int
push
adc
push
cmp
pusha
cmpsb
enter
into
dec
add
mov
and
mov
xchg
push
rclb
mov
sbb
lahf
int
pop
push
cmp
test
add
or
and
add
daa
or
fiaddl
shlb
jmp
into
and
mov
push
sarl
push
stos
xchg
add
pop
sbb
dec
dec
je
es
scas
rclb
fcmovb
shl
loope
add
or
push
jge
std
xor
fs
jns
dec
in
jle
mov
adc
or
add
ds
mov
xchg
subb
idivl
mov
test
mov
fadd
jecxz
adc
push
hlt
sbbb
lcall
sbb
sub
outsb
jl
cld
in
jmp
repnz
aaa
inc
pop
into
sbb
ljmp
cmp
add
jne
and
add
xor
sbb
and
jne
daa
push
cmpsb
clc
mov
and
cmpb
mov
mov
fmulp
add
repz
jne
lea
pop
sub
jmp
int
dec
hlt
dec
mov
cmpl
push
jmp
movsb
mov
fmull
adc
repnz
mov
in
jbe
in
add
pop
mov
js
testb
fsts
frstor
mov
cmp
bound
sarb
add
mov
push
jnp
push
es
sti
ret
testb
or
add
mov
push
aaa
orl
or
insl
and
xorl
movsb
popa
inc
mov
jae
leave
inc
add
xchg
mov
sarl
std
fwait
mov
sub
pop
and
rorl
mov
xchg
movsb
cmp
pop
and
jmp
scas
pop
pop
loope
pop
add
testb
add
mov
add
jmp
or
mov
push
inc
js
ja
add
shrb
xor
mov
and
push
aad
jns
andl
sub
mov
push
div
and
adc
dec
aas
push
xchg
jb
fdivrs
pop
leave
mov
adc
xchg
adc
shrb
mov
sbb
mov
insb
leave
pop
imul
std
add
jecxz
jb
pop
xor
add
mov
data16
add
lock
or
outsb
mov
cmpb
push
and
and
add
outsl
inc
icebp
xchg
pop
pop
mov
push
push
mov
mov
sbb
mov
pop
int
nop
insb
add
ja
psrad
jo
repz
arpl
cmp
call
push
adc
add
or
lods
enter
inc
jbe
mov
int3
push
js
mov
into
insl
jb
mov
pop
imul
outsb
add
lds
ljmp
leave
ret
call
push
dec
or
mov
testb
scas
les
dec
xor
fcoms
or
mov
cmp
enter
ja
inc
add
or
add
cmp
pop
add
pushf
mov
xor
aas
mov
pop
xchg
scas
mov
leave
out
insl
rcrb
and
add
or
les
cmp
sub
add
jmp
das
jno
loopne
sahf
and
std
add
jo
dec
in
cli
jmp
jns
aaa
out
addb
jmp
fidivrl
fwait
das
movsl
hlt
shlb
add
dec
mov
popl
test
js
jno
sbb
mov
subb
mov
mov
xor
in
add
test
sbb
push
mov
orl
push
inc
addb
outsb
mov
or
nop
gs
sub
int
jnp
test
pop
jecxz
xchg
mov
mov
add
lahf
mov
sarb
addr16
scas
lret
xor
in
inc
lods
mov
call
scas
stos
je
mov
add
sbb
aas
push
sub
dec
mov
adc
adc
cmp
clc
sub
xchg
mov
imul
sub
fcoms
loopne
test
loopne
or
fisubrs
imul
add
int3
std
addb
lods
fdivrl
in
add
les
pop
adc
xchg
fcmovnbe
iret
sbb
sub
mov
mov
xor
inc
lret
shrl
jmp
cmpsb
cmpsl
add
sub
loopne
js
add
inc
rorb
xchg
ljmp
xchg
inc
adc
jecxz
mov
out
loopne
mov
add
aam
xchg
cmp
add
movsl
pop
xor
stos
push
andb
lcall
and
add
mov
push
xchg
add
out
pushf
rclb
lret
cmc
xchg
add
xor
lock
mov
orb
inc
pop
mull
sub
mov
cmp
and
or
jno
dec
jle
out
nop
pop
test
cli
inc
mov
dec
push
inc
mov
and
mov
mov
cli
add
fimull
adc
inc
in
xchg
aam
jg
jg
rcrl
add
and
ds
lock
push
fimuls
dec
jnp
mov
jo
mov
xorb
addr16
mov
lea
iret
add
jmp
mov
inc
or
and
mov
fdivrl
add
xchg
es
out
xchg
imul
lahf
add
cmp
xchg
mov
enter
add
cmpb
ret
lock
add
sbb
sbb
xchg
add
and
loope
ret
jns
adc
sub
out
sbb
inc
xchg
sahf
add
xor
pop
data16
imulb
imul
nop
add
mov
push
sub
mov
lock
push
pop
rclb
nop
pop
repz
jbe
in
adc
or
enter
mov
lock
cmp
hlt
testl
aas
icebp
add
jb
mov
pushf
xchg
mov
shlb
mov
cmp
pop
xlat
add
icebp
add
mov
jb
mov
adc
inc
jp
sbb
out
and
jl
repz
add
shlb
adc
cmpsl
xor
mov
loopne
sub
dec
test
rcll
movsb
jmp
xorb
xchg
xor
mov
or
je
addl
rorb
or
sbb
int
test
jge
cmc
or
xorl
mov
nop
inc
dec
or
mov
ficoms
mov
mov
jnp
jecxz
jl
popa
loop
add
xor
cmp
inc
or
icebp
cltd
xchg
add
or
rorb
xor
cmpsb
push
xor
ds
jo
cmc
and
push
sbb
dec
repz
ret
fldl
iret
and
cmp
fsubs
pop
add
mov
in
xchg
fsts
add
dec
push
mov
ljmp
add
mov
mov
sbb
add
cmp
pop
insl
add
shlb
bound
dec
pushl
pushf
push
lods
mov
mov
addr16
sbb
add
es
push
xor
int3
sub
push
sub
add
mov
fmul
or
aaa
mov
fstpt
cmp
cwtl
mov
std
add
add
jg
nop
cmp
sub
test
jle
mov
add
insl
ficoml
cltd
test
xor
mov
aaa
add
test
les
xchg
mov
pushf
add
arpl
mov
adc
mov
testb
pop
cs
sbb
xchg
pop
add
test
xor
add
sbb
mov
pop
add
popf
xchg
xchg
xor
mov
and
fwait
loope
sbb
jp
sahf
xchg
cwtl
pop
add
mov
rcll
add
enter
test
nop
mov
in
pop
fstps
in
bound
mov
mov
cli
jb
mov
mov
xor
pop
cmpsb
xchg
add
mov
out
ja
imul
lods
mov
arpl
out
loopne
cmc
jecxz
xor
mov
cmp
adc
mov
lcall
xchg
imul
sub
xor
faddl
pop
call
or
sbb
lahf
int3
add
xchg
mov
in
inc
push
inc
sub
or
fiaddl
jbe
push
lret
and
outsb
adc
add
or
mov
out
les
inc
xor
aaa
add
nop
or
push
xchg
adc
and
scas
sbb
fdiv
mov
adc
push
dec
into
xchg
mov
gs
cmpsb
add
imul
add
jno
stos
adc
jae
add
cwtl
nop
add
pop
jl
sahf
pop
scas
adc
lea
sarb
pusha
add
sahf
leave
push
cltd
and
add
fwait
or
mov
jge
pop
xchg
jmp
inc
mov
and
mov
push
sbb
push
jne
lock
scas
mov
mov
mov
out
or
xchg
adc
pop
add
popl
dec
shrl
xchg
add
fs
adc
xchg
mov
testl
sbbb
idivb
add
push
ret
mov
lcall
inc
push
inc
cmp
add
mov
arpl
add
add
fstpl
pop
push
adc
push
in
push
rcrb
pop
xor
cmp
pop
mov
push
add
push
jl
cmp
xor
bound
outsb
xchg
inc
mov
in
jmp
mov
lret
pop
sbb
pushf
push
push
jo
in
icebp
mov
hlt
push
push
les
pop
mov
cmp
push
fisttpll
and
inc
pusha
xor
rcrb
js
ficoml
gs
pop
or
scas
loop
add
shll
xlat
add
xor
mov
dec
hlt
fs
int3
add
pop
les
pusha
lods
lock
dec
push
mov
rolb
cmp
sar
xor
adc
dec
lods
pop
cltd
mov
adc
imul
mov
icebp
mov
aas
lcall
pop
pop
leave
arpl
xchg
push
jecxz
dec
xor
cmp
popa
fs
sbb
clc
jecxz
add
test
iret
jge
add
sub
mov
nopl
into
gs
mov
cmc
shl
sbb
adc
icebp
pop
mov
cmp
jbe
dec
adc
add
cli
invd
mov
push
adc
inc
pop
sub
fsubs
pop
pop
sahf
addb
pop
mov
pushl
jle
shlb
adc
pop
pop
xchg
in
inc
ret
jg
mov
mov
mov
pop
add
shlb
add
jle
jecxz
mov
pusha
loopne
outsb
mov
pusha
and
dec
fadd
push
adc
aad
or
imulb
mov
mov
leave
push
movsl
out
repz
add
adc
dec
mov
and
mov
and
pop
inc
xchg
iret
jmp
mov
jecxz
roll
leave
fadd
cbtw
cmp
in
add
stos
int3
ljmp
push
xchg
lret
dec
cwtl
in
inc
inc
add
inc
fstl
sub
pop
ss
add
mov
jno
ret
cmp
mov
pusha
mull
mov
pop
sub
lret
pop
or
stc
int3
mov
push
mov
movsl
add
mov
nop
inc
pavgb
mov
xorl
add
pop
add
hlt
push
push
adc
push
sbbb
push
loopne
jnp
pop
addb
andb
and
cmp
sub
mov
cwtl
nop
adc
push
push
adc
pop
inc
xlat
shr
in
xor
xor
insb
test
lock
lahf
lea
cmpl
fisttpll
loope
pop
add
dec
ljmp
xchg
addb
int3
pop
movsb
cmp
xchg
into
repnz
dec
bound
ljmp
fmull
rcrl
dec
cmp
fiadds
outsl
push
and
rorb
fucomi
mov
data16
push
add
loope
insl
das
and
fsubl
add
in
add
inc
mov
movb
enter
mov
aas
or
cmp
shlb
aad
cld
add
insb
push
or
add
sbb
stos
or
hlt
and
ret
pushf
jmp
push
sbb
imul
rorl
loop
or
loopne
pusha
fildl
mov
cltd
cmp
mov
sahf
add
push
sbb
mov
pop
xchg
add
mov
scas
push
pop
add
dec
add
sub
adc
rcrb
and
adc
pop
aas
sub
scas
mov
pusha
aam
movsl
add
push
call
pop
add
mov
cmpb
lods
scas
adcl
jl
add
mov
hlt
push
test
add
fsubr
adc
shl
fsts
mov
inc
adc
dec
clc
add
pop
stos
dec
mov
cwtl
mov
mov
popa
sbbb
add
addr16
mov
rorb
out
in
inc
xor
adc
mov
sub
xor
out
shlb
ret
mov
mov
mov
les
add
cmc
lret
mov
decb
sub
push
sahf
mov
adc
add
js
subb
movsb
in
lret
jle
imul
mov
jne
inc
xchg
adc
add
loopne
or
shlb
jle
movsb
and
pusha
inc
xchg
cmpsb
imul
cmpsl
dec
add
rcrl
fdivrs
and
sub
popf
and
dec
hlt
push
in
push
adc
and
movsl
sbb
push
xor
aad
fadd
repnz
ret
jecxz
lcall
add
mov
jo
xorb
xchg
inc
jmp
push
subb
popa
add
dec
ja
repnz
idivl
jmp
ljmp
add
push
mov
sub
xor
mov
popf
orb
and
cmp
int3
cmpsb
mov
dec
rolb
fisubrs
push
ja
repnz
sub
xor
adc
push
sti
dec
fldl
aam
jne
testb
iret
rorl
sbb
aad
pop
add
pop
cwtl
lahf
add
aam
shll
pop
out
inc
ljmp
cmp
inc
add
leave
and
xchg
xor
rcrb
orb
rcr
xchg
sbb
xchg
arpl
mov
out
add
je
add
mov
and
iret
insb
add
inc
pop
mov
insb
shll
divl
sbb
rorl
mov
cmp
xorb
xchg
pushf
jle
nop
pop
sub
add
inc
fdiv
bnd
xorl
sti
in
add
or
mov
out
repnz
sub
adc
roll
stos
cmpsl
sbb
dec
je
cli
xchg
xlat
pop
test
adc
pop
stc
mov
andl
cmp
into
pusha
mov
jbe
rcrb
fwait
roll
adc
cmp
push
add
dec
fdivrs
mov
push
cmpsb
int3
xchg
add
lods
aaa
or
roll
push
inc
mov
sub
pop
dec
cmpsl
push
idivb
add
pop
ror
jge
dec
lock
jnp
call
mov
dec
adc
subb
je
or
sub
shlb
push
push
push
rorl
rorb
pop
mov
pop
add
lock
jecxz
push
add
jo
add
out
cs
pusha
nop
stos
stc
aas
mull
add
in
xor
je
pop
mov
inc
jae
add
dec
in
or
sub
les
push
sub
sbb
sbb
aaa
add
pusha
addb
push
jle
roll
jb
mov
pop
daa
xor
xchg
pop
cmp
dec
inc
lea
add
clc
rorb
cmpsl
mov
hlt
mov
xor
clc
adc
jge
std
sarb
mov
aaa
and
outsb
push
add
loope
test
test
push
push
es
xchg
sarb
pop
cltd
lods
dec
nop
cmpsb
add
cmp
dec
iretw
cwtl
add
clc
testb
push
jg
jl
rcl
in
test
add
in
inc
int3
add
pop
dec
faddl
cltd
pop
push
fstpt
add
sbb
dec
outsl
cwtl
std
mov
out
daa
subl
adc
add
cmp
mov
ja
add
scas
mov
outsl
xor
nop
cmp
cmp
jnp
sbb
or
movsb
add
stos
add
ss
gs
jge
icebp
add
jmp
jns
aas
pop
sbb
in
add
inc
adc
lods
xor
pop
push
add
arpl
add
push
sub
add
sarl
pop
inc
jp
inc
inc
inc
mov
push
pop
jo
mov
scas
fdivs
dec
mov
xchg
lret
lea
nop
cmp
fs
mov
jecxz
add
and
inc
fcomps
mov
adc
cmp
mov
cmp
into
scas
push
imul
loopne
in
addr16
sub
outsl
and
pop
xchg
add
loop
movl
dec
jmp
pop
push
movsb
jns
push
fsts
rorb
or
push
push
imul
xchg
mov
add
cmc
into
fistl
sarl
push
mulb
mov
xchg
addr16
add
lcall
pop
in
mov
mov
add
mov
ror
or
dec
add
push
push
ljmp
xchg
adc
andb
or
jl
call
pop
paddusb
divb
popf
sub
and
clc
call
lods
movsl
popf
and
hlt
nop
adcb
scas
xor
sub
lcall
int
inc
inc
es
andl
jge
fsubr
pushf
mov
fcmovne
add
lods
jl
xor
mov
sbb
xor
mov
aaa
xor
dec
jno
sbb
mov
sub
enter
lret
jle
sbb
aaa
loopne
stos
add
insb
xor
into
jb
mov
pop
add
mov
pop
push
push
ljmp
leave
in
push
fcoms
push
add
jns
test
add
lret
adc
dec
jne
iret
dec
jg
lret
popa
aam
pop
icebp
scas
sbb
imul
stos
in
push
cltd
sarb
mov
aas
test
subb
dec
push
das
dec
add
mov
mov
xor
pusha
add
dec
inc
stos
insb
mov
fcoms
sub
add
aas
mov
mov
adc
outsb
roll
inc
int3
lahf
xchg
push
clc
lret
lods
sbb
lock
add
popf
inc
add
cmc
add
pop
int
stc
add
xor
cmpsb
mov
sti
push
and
mov
mov
aas
xchg
pop
mov
addr16
cwtl
cltd
in
mov
stc
sbb
xor
in
add
mov
mov
out
xchg
add
jne
test
cs
cmp
pop
fadd
and
je
and
add
cmpsl
mov
adc
pop
sub
jae
leave
mov
test
mov
push
and
add
or
inc
jno
dec
mov
adc
insb
popa
repz
sub
cwtl
mov
jnp
pop
bound
repz
test
pop
mov
mov
lods
jne
mov
add
das
test
add
fldt
into
push
fnstenv
add
xor
cmp
cltd
dec
add
test
inc
jg
mov
jbe
pop
mov
addr16
outsb
gs
sbb
aad
mov
inc
in
push
push
data16
push
add
mov
push
dec
repnz
add
cmpsb
sub
and
pop
das
addb
inc
sbb
jo
filds
push
add
inc
cwtl
mov
xchg
mov
cmpsb
or
add
add
loopne
es
or
loop
mov
mov
mov
cs
lcall
in
sti
pushf
add
push
or
stos
push
dec
repz
inc
add
fcoms
sbb
mov
sbbb
lcall
movsl
sbb
push
clc
add
cs
int
lock
fsubrs
add
mov
adcl
pop
es
lods
add
test
xchg
push
int3
ficoms
dec
xchg
mov
out
add
hlt
cmp
mov
add
pop
fbstp
imul
add
adc
push
cmp
mov
xchg
out
insl
add
into
add
jle
mov
movsl
icebp
cs
dec
hlt
add
sbb
in
out
sahf
pop
ret
cld
negl
int
cld
jae
cs
fcoml
dec
test
add
inc
inc
imul
push
idiv
dec
or
shll
inc
jno
xchg
cmpsl
add
mov
adc
add
add
notb
repz
add
data16
shlb
add
cmp
inc
pop
out
sub
pop
mov
ja
adc
jne
mov
push
pop
outsb
mov
add
pop
lock
data16
lahf
add
arpl
add
push
push
push
sarb
fdivrl
lcall
sbb
clc
outsb
and
popf
xchg
inc
test
add
aam
jl
das
loopne
mov
inc
lods
push
cmp
lock
dec
iret
outsl
fwait
jno
out
add
sbb
enter
add
cmpsl
rclb
add
fnsave
cs
lahf
sub
int
ljmp
jbe
mov
xor
clc
add
cmp
xor
mov
adc
imul
movl
jo
cmc
add
jnp
call
add
pop
sar
imul
int3
mov
cmp
test
adc
mov
add
dec
ss
cmp
sbb
jg
adc
inc
add
movsl
ss
mov
pusha
push
mov
mov
sub
sti
mov
cld
lock
das
lods
aam
add
cli
mov
mov
testb
lret
pop
xor
push
daa
jns
xchg
pminub
mov
sub
fbstp
adc
cld
je
add
sub
mov
dec
inc
loopne
xor
add
mov
add
mov
add
and
icebp
pop
outsb
add
mov
dec
dec
cmp
add
scas
mov
loopne
add
ficompl
and
adc
inc
and
inc
inc
orb
stos
and
lea
add
sbb
push
add
pop
pop
dec
add
mov
adc
inc
push
call
sub
sub
ja
mov
jns
js
or
pop
pop
push
push
mov
clc
loopne
cltd
add
arpl
mov
add
mov
add
push
fsubs
dec
movb
or
ret
add
fmull
adc
mov
add
aad
cld
add
adc
and
or
lods
dec
sbb
mov
sub
add
js
dec
inc
mov
mov
sub
idiv
sbbl
dec
ja
hlt
lods
jle
add
mov
xchg
add
pop
inc
or
push
jmp
jg
add
mov
or
adc
cwtl
lock
xchg
add
ficompl
cmc
test
jnp
sarb
aad
call
mov
je
dec
or
add
xor
aaa
loopne
rcll
mov
call
or
popa
xchg
out
cwtl
pop
sbb
xchg
pop
sbb
movntps
gs
cmp
mov
jmp
and
xchg
popa
clc
adc
mov
jge
inc
pop
flds
sbb
mov
pushf
daa
aas
and
add
jmp
push
cmp
add
adc
in
mov
push
das
xchg
jb
push
mov
inc
inc
std
jne
mov
jle
adc
test
rolb
leave
mov
adc
jnp
enter
adc
mov
fdivl
testb
sub
mov
add
fsts
cmp
adc
clc
dec
bound
in
push
mov
mov
loop
push
xor
loopne
push
pop
and
or
mul
mov
pop
push
and
into
push
or
dec
sbb
scas
lahf
push
rol
and
mov
int
pop
mov
lock
hlt
in
push
cmp
scas
adc
jmp
add
addb
adc
test
add
mov
test
add
pop
or
fisttpl
add
jecxz
ds
xchg
scas
push
cmpsl
xchg
stos
imul
clc
add
sub
xorl
outsb
arpl
add
jbe
repz
pop
add
jb
adc
mov
in
subb
loope
add
jae
adc
jo
lcall
movsl
and
add
xchg
pop
mov
add
mov
add
mov
push
scas
or
push
push
mov
sahf
sub
inc
pop
xor
pusha
rolb
aas
jne
sub
cltd
in
add
lds
sbb
add
xchg
lcall
jmp
bound
inc
adc
add
push
hlt
loope
int
rolb
pop
jo
inc
adc
add
ljmp
add
mov
adcb
inc
and
jbe
or
testb
subb
testl
dec
add
dec
inc
or
cmp
sahf
and
aaa
out
test
push
fucomip
mov
xor
cmp
loop
mov
dec
cmc
mov
inc
cmp
jae
dec
shrl
leave
lcall
mov
add
imul
pop
repnz
sub
dec
fiadds
dec
push
aaa
mov
xchg
icebp
data16
sub
jmp
adc
shll
xchg
mov
stc
pop
leave
jmp
push
inc
arpl
scas
bound
int
mov
cmc
push
out
add
mov
mov
xchg
mov
push
mov
sub
imul
mov
inc
cmpb
cmp
add
sbb
push
dec
clc
jmp
mov
lahf
jns
add
andl
pop
push
cltd
sub
add
mov
push
ret
mov
sub
clc
inc
push
add
hlt
shr
sahf
sub
push
cmp
stc
cmpl
insb
push
sbb
and
inc
push
adc
aad
lcall
adc
jnp
inc
sbb
or
mov
int3
adc
or
adc
lea
push
pop
lds
fmull
or
fs
add
in
lea
add
mov
mov
add
aad
scas
pop
adcb
mov
in
mov
fidivrs
arpl
rcrb
and
add
push
pop
mov
or
sbb
clc
stc
inc
dec
push
sub
shlb
xor
andb
lods
ret
rolb
lock
xchg
sbb
lcall
mov
or
pop
clc
test
pop
dec
sti
cmp
sahf
pop
negl
clc
mov
sbb
inc
repnz
test
add
loop
cwtl
filds
sahf
push
mov
dec
gs
push
jecxz
test
add
negl
inc
sbb
adc
cmp
inc
cmp
sar
outsl
xacquire
fidivrs
fs
sub
sbb
hlt
rcrb
jmp
out
pop
test
hlt
dec
cmp
ds
dec
jecxz
or
dec
fcmovnb
or
and
add
mov
js
shll
out
and
mov
xor
stc
inc
sahf
and
add
add
push
or
mov
mov
mov
repnz
insl
lods
and
jbe
cwtl
shlb
mov
sbb
jb
pop
push
xchg
pop
xchg
mov
add
xor
nop
sub
pop
cmc
push
popa
sub
addb
js
sub
add
or
jno
pop
int
and
mov
push
inc
repnz
lea
ret
repnz
mov
sbb
jmp
nop
imul
or
add
ret
out
pop
js
sarb
out
lds
fstpl
pop
scas
mov
int3
or
test
hlt
ret
int3
inc
in
push
into
nopl
xchg
clc
mov
push
mov
xlat
jbe
or
jle
inc
mov
xor
lahf
fisttps
outsb
jecxz
mov
fildll
cmpsl
mov
sub
adc
les
int
lahf
dec
and
sbb
xor
mov
pop
pop
in
imul
sarl
mov
and
pusha
imul
adc
imul
mov
add
out
popa
cltd
xchg
addb
cwtl
shrl
xchg
add
out
mov
push
sbb
add
popf
xor
imul
fisttps
ret
add
rcrb
xchg
je
call
ljmp
int3
mov
xor
into
mov
dec
push
xchg
clc
pop
dec
sub
xchg
out
jo
dec
inc
sbb
dec
cmp
cltd
xchg
adc
mull
scas
push
sub
add
aas
mov
loope
pop
push
adc
jno
cmp
adcb
ja
jnp
aas
in
fwait
xorb
out
imul
or
lock
mov
in
mov
inc
hlt
cmp
testl
mov
rclb
in
test
xchg
daa
jne
sbbb
add
iret
stc
pusha
mov
leave
lea
add
mov
fcmove
jecxz
add
cmp
mov
mov
add
and
cmpsl
dec
testb
jno
dec
repz
test
push
out
inc
int3
dec
xor
mov
addl
fwait
sub
mov
test
cmp
pop
stos
movsb
add
int3
arpl
xchg
sbb
aam
pop
dec
fdivs
nop
fwait
aas
pop
addl
fs
sbb
pop
roll
sbb
mov
int3
data16
fldl
jnp
dec
aaa
enter
add
sbb
lock
jno
sbb
pop
inc
lahf
out
std
dec
push
je
fbstp
shlb
popl
xchg
add
push
repnz
pusha
call
pop
or
sbb
sub
jo
movsb
ds
sbb
ljmp
jecxz
mov
sbb
test
mov
clc
xor
mov
pmulhuw
add
add
jno
or
lock
xchg
enter
jl
inc
insb
mov
in
push
pusha
imul
fdivs
mov
mov
call
imull
xor
mov
mov
add
mov
les
dec
inc
int3
adc
xor
push
cltd
loopne
add
inc
mov
call
xor
and
fmuls
xchg
lock
and
sbb
sbb
pusha
and
fsubrl
rcrl
mov
cmp
add
jge
inc
icebp
adcb
sti
rolb
decb
dec
add
mov
pop
inc
imul
add
jae
add
divps
movsl
pusha
leave
cli
test
add
sahf
sbb
cmp
mov
add
sub
in
lock
adcl
int3
js
movsb
sarb
adc
inc
je
sub
add
xchg
mov
sub
adc
xchg
sahf
fdivs
xor
js
push
add
lret
pop
xchg
mov
jns
and
adc
sahf
filds
add
cmp
popa
outsl
mov
add
scas
loopne
mov
xchg
inc
adc
sub
jns
bound
repnz
mov
xchg
pusha
dec
cmp
ljmp
add
cmp
daa
jp
jmp
jb
addr16
dec
ret
insl
inc
rolb
sub
cmp
popf
xlat
popf
fstpl
or
mov
subb
out
loope
pop
dec
or
mov
lea
fiadds
add
mov
dec
xor
inc
int
xchg
add
mov
rorl
push
dec
inc
jmp
sbb
enter
out
mov
xchg
hlt
leave
test
or
sub
or
pop
popa
int3
popa
enter
mov
dec
add
xchg
out
insb
lahf
inc
xor
test
dec
push
cs
stc
movsb
lock
add
insb
xor
imul
dec
int3
and
pop
dec
inc
mov
out
and
scas
cli
add
and
xor
stos
iret
xor
mov
adc
mov
inc
cltd
cmp
pop
inc
xchg
add
arpl
stc
xor
xor
or
push
pop
clc
and
inc
add
lcall
dec
add
popa
insb
scas
aas
add
push
stos
xor
lahf
pusha
sub
outsl
adc
cmp
mov
mov
rclb
and
add
or
pop
test
ret
add
daa
icebp
jae
data16
push
movl
adc
mov
mov
cmp
sub
add
push
shll
push
arpl
orl
add
leave
or
addb
testb
fsubr
test
xchg
stos
or
gs
shlb
arpl
pushf
sbb
xchg
jge
negb
inc
gs
dec
jmp
dec
xor
adc
dec
xchg
add
add
lldt
inc
dec
mull
cmp
cld
in
add
cli
nop
jo
xchg
sbb
push
hlt
sub
inc
cmp
outsl
add
adc
inc
int3
add
add
xor
and
push
mov
add
mov
inc
pusha
pop
jl
scas
lds
cltd
fsubl
sub
rorl
sbb
sti
rolb
orl
add
je
aam
add
mov
adc
rcll
mov
cwtl
push
add
xor
and
cwtl
sub
sub
xlat
les
jmp
je
sbb
daa
cmpb
hlt
jg
jno
nopl
push
jo
push
insb
addl
ret
xchg
add
add
loope
xchg
jecxz
cwtl
enter
outsl
testb
adc
in
shrl
xchg
pusha
inc
out
and
sub
mov
in
js
push
jg
adc
lods
sbb
pandn
cmp
test
shlb
push
inc
inc
xor
fwait
push
pop
cwtl
mov
xchg
arpl
and
imul
mov
roll
mov
push
sbb
lods
cwtl
sub
pop
dec
loopne
aam
lret
lods
jae
push
test
popa
adc
in
in
pop
mov
push
add
xor
or
es
xchg
push
adc
jle
push
arpl
push
sub
mov
rclb
inc
add
pop
sbb
adc
add
stc
hlt
fs
add
sub
aaa
clc
movsl
addr16
xchg
and
mov
dec
xor
or
add
sbb
ficompl
adc
int3
xchg
push
dec
outsl
enter
mov
mov
mov
xchg
xchg
lds
pop
in
jns
and
add
or
dec
cmp
push
popf
jp
add
sbb
outsb
push
or
mov
stc
or
mov
les
push
out
xchg
pop
and
pusha
andl
in
mov
or
lcall
inc
cmpb
fisttpll
in
or
jns
imul
daa
pop
es
or
out
out
nop
xchg
add
inc
sbb
aam
xor
or
push
xor
xor
and
add
les
or
lret
inc
shlb
mov
stc
mov
jb
dec
ja
test
xor
fs
add
or
loop
cwtl
outsl
add
or
cmp
xchg
xor
int3
dec
dec
xor
mov
add
or
insb
add
dec
push
test
add
and
mov
push
mov
sarb
cmp
jp
inc
hlt
or
mov
mov
icebp
jle
data16
and
lock
push
lods
mov
inc
jmp
cmpb
enter
lods
pop
push
and
mov
jl
adc
test
add
and
insb
jg
inc
inc
cwtl
hlt
and
or
cmp
in
in
and
and
int
pusha
lret
push
loop
cmp
loopne
sub
jne
add
or
test
add
pop
mov
rorl
mov
jl
or
nop
push
push
popa
xchg
and
cmp
mov
in
and
dec
repnz
lea
xchg
add
pop
cli
and
shrl
aas
rol
cmp
adc
dec
push
or
or
cs
xor
stc
pushf
mov
xchg
loopne
je
arpl
and
clc
lds
dec
sbb
into
add
push
cwtl
jb
pop
cmp
jp
inc
mov
jle
je
popf
adc
inc
fiadds
std
pop
mov
pop
inc
call
pop
lcall
inc
mov
mov
sbb
add
jne
pop
sub
and
push
mov
cltd
sub
inc
sbb
mov
test
insl
xchg
pusha
call
jae
or
jae
adc
xchg
mov
and
xor
mov
stos
add
pop
mov
push
lods
loopne
test
loop
pop
ljmp
xchg
xor
dec
mov
jmp
daa
loop
loope
adc
lcall
xor
push
cmp
sahf
fildll
mov
and
rclb
pushf
cmp
push
mov
call
fisubl
xchg
les
sub
cmp
jnp
jno
ja
add
sbb
xchg
pusha
out
and
jmp
add
push
xchg
sub
cld
inc
mov
add
testl
jbe
scas
add
cwtl
aas
pushf
add
jbe
xchg
push
push
or
lock
jecxz
mov
sub
cmpb
add
sub
arpl
inc
cmp
mov
insb
adc
test
xchg
and
pop
pop
daa
cs
adc
add
jmp
cmpsl
jnp
pushf
dec
mov
inc
dec
in
in
arpl
dec
inc
mov
mov
rolb
jmp
sbb
pop
inc
in
add
and
mov
jbe
xchg
call
mov
icebp
add
outsb
mov
or
inc
es
xorb
jmp
fs
xchg
inc
movsb
fmuls
push
pop
add
adc
xchg
dec
fmuls
ja
addb
ret
fcomps
addb
lret
mov
es
sbb
jns
popf
add
in
sahf
xor
adcb
mov
sbb
fsubrl
sbb
loope
pop
std
sub
sbb
and
ljmp
aam
dec
xchg
push
lahf
repz
mov
inc
xor
gs
add
movsl
mov
cli
jne
cmp
and
mov
dec
mov
aas
sbb
push
jecxz
mov
sarb
shld
sbb
loopne
jmp
cmp
or
pop
test
in
aad
ljmp
pusha
or
dec
test
loope
ja
push
imul
and
nop
xor
push
fists
add
inc
xor
pusha
push
jl
mov
cmp
das
popf
ja
int3
sbb
dec
sbbb
pop
xor
adc
unpckhps
mov
fiadds
clts
xorl
sbb
push
sbb
fcompl
hlt
add
aad
jecxz
int3
cmp
scas
sbb
int3
inc
shlb
gs
xchg
xor
inc
int
dec
inc
lahf
nop
sub
push
repnz
pop
or
fsubrs
xchg
sbb
or
and
adc
movsb
add
aam
nop
mov
dec
push
push
mov
cmp
out
mov
push
sbb
lret
mov
hlt
leave
add
mov
sbb
orb
daa
or
imul
push
mov
pop
sbb
mov
adc
sbb
popa
jle
cld
les
in
or
lock
mov
jae
xchg
pop
add
sub
mov
push
lahf
add
mov
xchg
loope
test
pop
addb
lea
sub
nop
dec
repnz
sub
or
ret
test
fbstp
adc
sub
mov
add
ret
sahf
sub
fadds
sbb
jbe
test
mov
add
push
push
movsb
lods
add
mov
sbb
jne
add
repnz
rorb
shr
pusha
aam
jecxz
test
sbb
ds
mov
or
sbb
or
mov
pop
pusha
leave
sbb
ss
dec
push
enter
inc
fwait
pop
sbb
or
jne
mov
xchg
aad
and
imul
add
push
xchg
jmp
repnz
lahf
lahf
xor
faddl
les
mov
popf
mov
pusha
imulb
mov
cmp
adc
push
add
mov
pop
add
fbstp
pop
gs
and
outsl
xchg
outsb
orl
addl
cmp
adc
pop
imulb
je
push
adc
ret
hlt
cmp
lds
mov
add
push
push
pop
inc
dec
push
mov
mov
cmp
cld
add
push
lds
fisubrs
push
pusha
push
divb
xchg
mov
sbb
inc
xchg
and
aaa
int3
test
add
jge
mov
scas
rorb
lahf
inc
jp
ret
loope
push
adc
dec
sub
bound
xchg
mov
nop
fldt
inc
inc
jno
shlb
rolb
dec
out
jmp
or
rorb
mov
imul
cld
add
call
popf
nop
dec
pop
pop
add
sub
add
xchg
into
std
aas
lock
add
and
xchg
addb
pop
ds
add
mov
loopne
adc
adc
lds
mov
sub
les
or
popl
adc
dec
je
rorb
and
lods
hlt
xchg
pop
cwtl
adc
hlt
sbb
or
ret
lods
pop
dec
fldt
push
cmc
subb
loope
jmp
pop
inc
test
les
push
jecxz
and
pusha
pop
fs
ret
mov
out
popf
je
hlt
jl
add
mov
out
pop
add
jg
fists
xor
orb
shlb
cmp
std
sub
call
or
movsb
clc
add
ret
add
fwait
sar
insb
add
out
cmpsl
pop
dec
or
sub
pushf
mov
pop
sbb
in
test
mov
in
and
dec
leave
xchg
dec
loop
shrb
jnp
outsb
sub
add
cwtl
pop
mov
push
out
pop
mov
sbb
sbb
push
jmp
sbb
cwtl
adc
and
call
and
or
mov
push
stos
nop
add
hlt
imul
cltd
add
jp
jb
adcb
push
mov
mov
jnp
inc
enter
and
inc
or
cld
ljmp
jl
pop
pushf
adc
imul
push
fistpl
pusha
insl
xchg
dec
fdivrs
xchg
cld
sbb
pop
cmp
push
imul
mov
pop
pop
inc
mov
and
pop
sub
xor
adc
sbb
sub
sbb
enter
cwtl
sbb
mov
pop
push
test
cmp
mov
arpl
icebp
and
xor
dec
xor
add
dec
mov
sbb
xchg
xchg
popa
xor
gs
push
cmp
or
adc
enter
cmp
in
sbb
mov
add
dec
inc
mov
ja
out
xor
inc
fs
clc
push
or
repz
push
mov
and
inc
xchg
and
in
mov
add
mov
daa
sbb
cmp
or
mov
out
add
xor
ret
or
mov
gs
dec
or
cmp
or
xor
mov
add
bound
int
cmpsl
jle
sub
dec
leave
add
mov
dec
dec
add
jne
and
push
js
int
inc
mov
js
fs
ja
xchg
out
push
and
xlat
fsubs
or
lret
xchg
bswap
ljmp
add
mov
imul
jecxz
sbbl
fsubl
xor
call
sbb
mov
dec
sub
iret
inc
sub
lret
cmpb
cmp
mov
adcl
in
dec
push
inc
dec
sbb
shlb
and
mov
and
cmp
sbb
xchg
xchg
push
icebp
adc
fdivl
push
add
shrl
jmp
mov
js
inc
xor
mov
andb
jecxz
test
js
hlt
sbb
add
fwait
push
mov
add
add
xlat
lods
mov
repz
sub
add
or
and
movl
sbb
fldl
mov
lods
sti
jae
loop
mov
push
cld
sbb
sub
btc
jmp
push
mov
adc
mov
adc
cmpsl
gs
dec
int3
cltd
pop
in
mov
enter
outsl
cltd
xchg
xchg
gs
and
lods
imul
fs
lcall
add
sub
out
xor
dec
mov
cmpsl
nop
in
andb
pop
lret
push
xor
mov
adc
dec
mov
add
sbb
js
inc
test
gs
inc
flds
jb
cwtl
sahf
sbb
mov
and
push
sbb
mov
push
lods
movsl
xchg
push
xchg
mov
repz
imul
mov
xchg
fmul
loope
add
pmaxsw
dec
xor
mov
loopne
lods
filds
dec
ds
or
inc
out
push
xchg
in
sub
inc
mov
push
fildl
mov
cltd
mov
test
mov
in
loope
enter
add
mov
out
clc
fcomps
sub
jne
push
lods
fmuls
je
mov
inc
test
lea
or
je
shr
lret
out
repz
mov
or
add
aam
fs
in
jg
dec
pop
sub
sub
mov
dec
pop
sbb
mov
sbb
inc
dec
inc
mov
push
inc
xchg
sbb
test
les
cmp
xchg
add
lods
push
icebp
jle
xchg
rclb
adc
popf
inc
cmovg
jmp
mov
mov
jns
add
pop
vcvttpd2dqx
cld
pop
bound
dec
push
and
cli
out
cmp
mov
rorb
cli
jmp
mov
jge
lret
ja
insb
loop
fdivrl
sub
mov
hlt
je
pop
jo
mov
test
dec
clc
movsb
mov
pop
push
add
pop
fadd
add
je
leave
add
jbe
cld
pop
out
and
cmp
dec
xor
mov
add
fimuls
pushf
inc
jns
jo
and
push
mov
popf
lcall
out
dec
inc
push
sub
jne
lods
xor
shrb
cmp
or
push
nop
mov
repz
push
xor
ret
movntps
or
adc
loopne
xor
adc
mov
mov
mov
or
hlt
or
add
sub
add
sub
dec
aas
nop
call
in
add
mov
scas
inc
pop
mov
jo
out
push
flds
fwait
push
clc
xchg
notb
and
lret
fisubs
jecxz
add
mov
mov
ss
orb
pop
xchg
add
dec
or
xor
add
mov
test
test
rorb
out
sub
and
cmp
sub
push
mov
push
mov
mov
or
sbb
xor
inc
add
xchg
loope
pop
xor
adc
jb
add
lods
roll
adc
jne
xchg
dec
sub
fld
inc
pop
enter
push
icebp
cmp
dec
adc
jmp
jg
movsb
popa
popa
lcall
imul
or
stos
mov
sub
xchg
push
out
sub
add
cwtl
mov
mov
sub
pop
aam
insl
dec
sbb
bound
adc
cmp
je
mov
pop
mov
adc
loop
addb
adc
rcrl
jae
out
and
push
movsl
xor
push
xchg
jo
clc
lret
pop
cmpb
cltd
mov
add
pop
and
in
and
dec
xor
or
js
add
out
fimuls
mov
xor
data16
aas
and
pop
ftst
xchg
dec
sahf
ret
jb
xor
xchg
mov
add
push
mov
es
movsb
or
push
aam
enter
and
loopne
roll
jg
fistpl
and
sbb
mov
les
mov
adc
adc
or
xchg
js
sbb
pop
ret
pop
ror
mov
mov
xlat
cmp
inc
sub
inc
xchg
push
lock
push
sbb
in
push
mov
cmp
aam
popaw
xchg
add
test
mov
addb
add
xor
add
subl
sbb
cmpsl
jno
inc
nop
lret
add
lods
xor
repnz
insb
icebp
add
add
call
jl
mov
loopne
movsb
or
sbb
in
lret
jecxz
fisubrs
scas
pop
nop
cltd
jns
idivb
sbb
xor
cmp
dec
jns
sbb
loope
repnz
dec
subb
cwtl
and
stos
add
mov
cmp
jmp
cmp
jne
mov
nop
bound
nop
sub
test
movsb
and
sbb
lods
inc
sbb
pop
out
jns
adc
incl
sbb
lods
lahf
dec
pop
mov
mov
outsb
adc
in
jno
js
jns
push
sbbb
out
mov
or
pushf
xchg
jo
mov
and
adc
cmpl
faddl
cmpsl
xchg
pushf
xchg
xor
jecxz
pop
lock
push
sbb
jecxz
jbe
dec
pop
nop
adc
pop
icebp
mov
call
jmp
in
and
jle
or
mov
sbb
std
lock
in
xor
jl
and
sbb
les
jge
jmp
pop
popa
adc
insb
xchg
adc
pop
test
mov
bound
mov
mov
adc
jbe
cwtl
mov
fdiv
imul
dec
mov
shl
lcall
xor
scas
aas
jae
testl
daa
adc
xchg
mov
add
icebp
push
add
ret
into
es
add
jo
xor
add
xor
jge
adc
push
push
cltd
lds
testb
icebp
cmc
scas
inc
xor
fld
inc
cmp
test
jb
push
movsb
add
jl
add
clc
pop
mov
xor
pusha
jecxz
shlb
fchs
and
and
dec
add
cmp
pusha
inc
xchg
add
jecxz
lock
cmp
push
ljmp
mov
add
push
pop
or
inc
push
mov
add
or
ss
sub
sub
jbe
sbb
mov
pop
jl
sbb
jmp
jp
test
ret
cltd
sbb
rolb
mov
mov
lahf
xchg
lods
mov
test
and
pop
add
cmpb
xchg
neg
in
sahf
xchg
rorb
inc
jl
and
pop
pop
sub
xlat
add
std
or
aam
clc
subl
lcall
adc
pop
mov
scas
add
lret
fdivrp
or
or
in
mov
insb
add
inc
cld
cld
or
lock
stc
mov
inc
inc
add
dec
jge
mov
and
je
inc
sarb
scas
or
dec
adc
cmpsl
and
loope
clc
dec
xchg
xorb
pop
cwtl
fs
adc
mov
xor
push
fsubrl
fadds
pop
je
jecxz
into
mov
pop
incb
add
mov
sbb
call
lock
arpl
cs
add
cmc
int3
dec
sub
mov
push
fstl
cld
cmp
jo
cmp
outsb
jnp
or
adc
sub
jg
mov
adc
aam
shrb
lock
outsb
inc
mov
add
push
and
cmp
imul
jge
bound
insb
jno
sbb
pushl
or
xchg
sub
fldcw
bound
mov
daa
pop
add
push
filds
rcrb
in
xor
andl
subl
subl
and
pop
adc
out
in
jp
pop
addb
add
imul
sbb
and
neg
inc
out
push
adc
test
push
dec
push
ret
int3
ret
xchg
push
sub
mov
push
dec
sbb
movsb
pop
or
sub
sbb
daa
sbb
popf
sbb
xor
int3
inc
sbb
and
mov
mov
aas
and
xchg
out
inc
and
mov
pusha
fsubs
es
cmp
testb
sub
pop
or
mov
add
mov
adc
iret
dec
lods
add
jo
pop
in
pop
xchg
sub
pop
add
add
mov
movsb
mov
and
test
inc
pop
out
jl
xor
in
sbb
fsubrs
mov
xor
add
or
sub
xchg
jo
clc
popa
ret
rolb
ret
movsl
mov
pop
scas
int3
mov
sbbl
cwtl
and
pop
adc
sbb
add
jbe
sbb
int3
jb
cmp
js
shlb
xchg
mov
jl
push
outsl
shl
xchg
add
inc
cmp
xorb
fcomps
inc
call
pop
jle
and
pusha
xor
pop
dec
add
rorl
xchg
lods
addr16
adc
xchg
sub
aam
clc
dec
mov
sub
cmpsl
mov
add
aaa
fidivs
int3
push
test
stc
pop
or
adc
call
lds
rclb
cmp
mov
mov
mov
xlat
sub
xor
scas
sarb
ds
outsl
inc
les
cmp
icebp
cmp
int3
sub
cmpl
mov
inc
xchg
rolb
insb
bound
mov
add
test
sub
dec
dec
xor
lahf
mov
sub
mov
fmull
in
and
movsb
loopne
add
fsts
sbb
adc
or
or
sbb
addr16
fs
pusha
xor
mov
fnstenv
sbb
mov
mov
inc
and
sti
mov
insb
push
add
lock
rolb
in
push
inc
out
enter
aam
cmp
sarb
sbb
and
dec
out
mov
idivl
and
pop
xor
addb
mov
inc
mov
int3
scas
fistpl
adc
sbb
sub
movsl
xor
fcomps
insb
dec
push
mov
jl
loop
lock
push
dec
lods
cmp
das
mov
gs
adc
inc
pop
xchg
dec
xchg
and
pop
pop
jl
repz
es
ljmp
outsb
mov
mov
inc
clc
pop
add
sti
in
and
fwait
div
cmpsl
pusha
and
imul
in
icebp
mov
fadd
pop
dec
push
and
cwtl
add
movsb
sbb
clc
adc
repz
inc
mov
mov
dec
jge
dec
int3
xchg
sbb
lds
scas
mov
jbe
hlt
push
pusha
test
and
xor
mov
dec
mov
sbb
pop
add
mov
sub
repnz
adc
call
test
sbb
and
lods
ret
sbb
adc
pusha
int3
inc
cltd
popf
shlb
jo
test
lods
test
in
xchg
enter
and
repz
cmp
mov
lret
nop
pusha
xchg
and
aaa
ret
in
push
pop
push
js
test
clc
cmc
inc
imul
out
adcl
mov
imul
out
adcb
stc
daa
add
dec
scas
lahf
dec
mov
lods
dec
mov
xchg
pop
mulb
sbb
out
fistl
pop
mov
and
ds
add
out
xlat
sbb
xchg
daa
dec
lock
clc
adc
daa
mov
sub
push
lea
add
lock
add
mov
incb
pop
das
jno
mov
jb
dec
sub
pop
xchg
sub
xor
mov
in
pop
lock
sarb
sub
jecxz
add
nop
dec
jne
mov
into
insl
mov
cmp
lcall
rclb
or
test
leave
aad
enter
lock
cmp
xchg
jb
jle
lock
add
nop
pop
and
add
adc
mov
pop
inc
pop
xchg
loopne
sbb
pop
dec
dec
xchg
enter
jmp
sbb
scas
sub
mov
mov
sub
push
int3
mov
aas
xchg
pop
jmp
push
add
call
push
pop
mov
and
sbb
dec
hlt
lret
sub
imul
mov
das
test
adc
rclb
push
sub
or
js
sbbb
mov
inc
sub
aaa
xchg
in
cmp
rcll
pusha
pop
xchg
sbb
push
add
insl
std
dec
mov
cmp
cmpsl
popf
pushf
subb
xchg
cmp
or
aam
loopne
pop
and
pop
push
add
pushf
aaa
and
push
mov
or
int3
cmp
cmp
push
adc
jns
cs
sbb
inc
and
popa
loope
jno
fdivrl
mov
adc
jae
ja
xor
int3
test
sbb
inc
cmpsb
lret
add
fistl
xchg
pop
cli
testl
inc
mov
fsubs
mov
inc
mov
mov
add
aaa
xlat
mov
xchg
jno
jbe
imul
incb
and
mov
sbb
push
movsb
sub
mov
add
adc
mov
mov
cmc
dec
mov
clc
ds
dec
movsb
add
andb
icebp
imul
add
xchg
push
inc
xchg
push
add
add
negb
inc
push
icebp
test
sti
mov
lock
add
adc
mov
push
hlt
mov
xor
mov
jo
pop
lahf
bound
and
notl
pushf
sbbb
cmp
mov
inc
mov
mov
add
notb
push
mov
mov
pop
jle
mov
bound
imul
js
stc
sarl
insl
pop
cmpsb
les
pop
fsubrs
nop
xchg
cmp
add
or
sub
enter
add
mov
insb
cmp
jns
mov
pop
inc
mov
dec
dec
add
clc
adc
sub
ja
outsb
dec
pop
sub
arpl
xchg
push
loop
repnz
repz
lret
das
mov
testl
xchg
jo
clc
jg
test
repnz
sbb
pop
mov
xchg
adc
lahf
ret
push
jnp
test
in
shlb
and
push
mov
sbb
gs
inc
stos
hlt
pop
mov
pusha
fcoml
or
lock
mov
or
std
daa
inc
int3
les
pusha
mov
out
cmpsb
lock
jecxz
push
sub
or
jb
mov
or
or
jl
daa
and
sub
and
test
aam
je
lret
or
icebp
inc
jne
dec
or
wrmsr
inc
call
clc
les
xchg
test
in
repnz
xor
mov
fs
cld
loope
push
mov
lds
inc
into
scas
test
fs
push
jle
cmp
pop
rclb
test
xor
add
divb
dec
pop
test
in
inc
mov
std
inc
aaa
and
xchg
mov
cmp
pop
mov
faddl
dec
sub
sub
inc
sbb
or
add
sub
mov
mov
popf
and
and
xchg
sub
stos
nop
sub
mov
xchg
push
ret
ds
dec
xchg
cmp
pop
fs
lret
inc
and
hlt
fwait
movl
leave
jecxz
pushf
faddl
add
and
or
push
sarl
add
mov
and
fs
xchg
cmp
mov
xchg
adc
dec
pop
orl
std
pop
xchg
fldcw
aas
xlat
call
jge
inc
es
movsl
pusha
or
add
incb
fnstenv
mov
jnp
ja
ret
xor
jp
mov
sbb
mov
test
sub
test
adc
mov
mov
cmc
lret
aad
dec
push
dec
test
rcll
push
pusha
movsb
jl
push
out
mov
scas
orl
fxch
pusha
enter
mov
ja
stc
inc
add
dec
incl
push
test
push
lcall
adc
add
and
loop
dec
bound
rolb
imul
clc
jl
je
jge
es
dec
and
jo
ljmp
dec
dec
xor
cmp
gs
xchg
mov
lods
dec
cmp
pop
push
add
ljmp
cmpb
in
je
inc
pushf
mov
cmpb
shll
sbb
clc
xchg
dec
xchg
add
fs
and
jno
sub
daa
loopne
ljmp
cmp
js
jne
pop
orb
dec
sub
or
addr16
fwait
jecxz
loope
cli
jmp
mov
pop
out
loop
dec
das
aam
cmp
andb
inc
cmp
and
in
pusha
nop
push
in
adc
mulb
pop
inc
xor
int3
jno
aas
xor
add
nopl
inc
dec
sub
cli
add
mov
push
jae
push
dec
in
adc
aam
test
xchg
push
popf
xor
or
adc
dec
add
mov
in
or
pop
pusha
jg
sbb
sub
push
hlt
cs
pop
cwtl
mov
lods
sbb
cmp
popa
icebp
jl
xor
dec
xorb
pop
movsl
mov
add
iret
les
das
enter
rcr
add
jmp
shlb
subl
sbb
addr16
push
scas
adc
xchg
inc
jg
pop
or
lret
dec
inc
xchg
add
jecxz
pop
mov
pusha
insl
in
pop
fwait
clc
jmp
int3
mov
mov
mov
mov
jle
clc
cld
les
mov
mov
pop
popf
mov
jle
movsl
pop
dec
fmul
fsubrs
add
insb
push
dec
sub
lret
mov
mov
lods
xchg
test
sub
daa
arpl
jae
stc
inc
shrb
lods
push
dec
outsb
ljmp
xor
dec
push
fs
repnz
popf
pop
scas
ret
or
cmp
mov
jb
arpl
sub
push
je
mov
adc
mov
jl
add
nop
fcmovu
add
iret
movb
lcall
and
pop
mov
pop
mov
arpl
and
push
popl
lea
or
int
out
add
push
jl
mov
stos
test
pop
mov
fwait
and
dec
jne
test
push
jg
xor
jbe
hlt
add
mov
or
insl
dec
pop
and
push
mov
pop
outsb
bound
je
cmp
mov
mov
fnstenv
je
and
cmpsb
gs
xchg
add
pop
icebp
and
mov
loope
mov
aas
mov
add
push
push
shrb
sub
flds
ja
adc
sbb
push
jp
nop
jmp
cmpsl
movl
pop
pop
mov
mov
iret
and
dec
push
or
ljmp
xor
cs
sbbl
push
daa
mov
cmp
sbb
aas
pop
andl
xchg
and
xor
repnz
jae
adc
mov
fldcw
add
fwait
pop
adcl
std
push
inc
sub
aam
inc
mov
loopne
stc
out
adcb
out
mov
fbld
add
xchg
push
inc
inc
cs
test
mov
call
sti
pop
mov
addl
lods
orb
les
mov
pop
fwait
mov
shl
incb
ja
push
ljmp
push
sbb
pop
scas
sbb
cli
adc
outsb
add
sahf
inc
or
lock
push
lcall
inc
jmp
das
mov
fisubrs
adc
xchg
and
test
mov
pop
and
sbb
xor
add
xor
and
push
push
dec
mov
xor
xor
inc
jle
sbbb
into
lcall
mov
adc
jno
pop
adc
fsubs
test
cmp
insb
push
dec
or
jbe
in
xchg
xchg
pop
fcomi
cmpb
mov
pop
pop
cmp
cmp
js
sti
or
test
pusha
jo
cwtl
add
adc
xchg
jb
fsubs
nop
xchg
mov
adc
in
add
stc
sbb
shlb
andb
enter
push
std
mov
mov
jmp
int
bound
and
popf
das
inc
or
ds
push
popf
iret
cmp
andb
mov
pop
sbb
dec
pop
push
sub
into
sbb
fsubrs
cmp
stos
cmp
or
mov
mov
dec
cmp
mov
mov
add
lret
adc
mov
mov
insb
pop
inc
and
sbb
aam
movsb
stc
or
or
xchg
jo
lret
push
inc
dec
jb
jge
add
adc
inc
dec
rclb
mov
inc
bndcl
pusha
iret
and
xchg
fnstcw
and
jne
loopne
decb
out
es
jns
sarl
nop
js
dec
stos
inc
add
adc
jnp
lods
fisubl
push
cmpsl
or
push
jg
in
lret
add
jno
mov
loop
xor
add
rolb
fsubrs
cmp
add
in
sahf
dec
icebp
mov
enter
adc
adc
or
jns
sbb
clc
add
xchg
repz
cmpsl
sub
dec
sub
cwtl
pop
js
mov
icebp
adc
adc
jb
dec
push
fdivl
sub
call
fsub
push
adc
jecxz
add
idiv
lret
add
mov
test
adc
xchg
jmp
fdivs
mov
adc
lock
or
lock
mov
scas
push
loopne
ret
ljmp
sub
ret
movsb
mov
movsb
push
pop
fnstenv
mov
in
mov
imul
lret
cs
aaa
addb
clc
into
adc
pop
cmpb
adc
je
mov
mov
jne
vcomiss
in
sarb
sbb
add
inc
add
out
cwtl
push
sbb
jmp
push
jge
les
cmpsl
sarb
or
test
mov
les
xchg
pop
repnz
adc
cmp
push
arpl
test
dec
hlt
ret
push
cs
jg
mov
add
push
outsb
lds
fisubl
filds
or
sub
mov
test
push
adc
inc
sbb
sbb
and
ror
movsb
jo
jnp
add
mov
cmp
incb
mov
xchg
mov
push
das
add
dec
or
inc
test
mov
lahf
fwait
mov
sbb
bound
xchg
inc
xchg
mov
aaa
test
aas
or
mov
popf
jo
push
sbb
icebp
sbb
adc
je
mov
inc
lods
and
cld
jg
add
jl
mov
push
fiaddl
adc
push
shrb
movsl
jge
je
insb
lcall
into
jmp
xchg
cmp
add
pop
shl
pop
movhps
add
cmpsb
ret
mov
roll
pusha
pop
cmp
sbb
int3
test
add
jge
pop
sub
cmp
pop
test
push
addb
cmpsl
leave
pusha
adc
add
loope,pt
push
lret
add
adc
popf
push
dec
or
adc
cmpsl
mov
pusha
ret
inc
test
adc
mov
cwtl
or
and
aaa
sub
hlt
xchg
or
int3
push
jb
lcall
inc
mov
lea
es
or
and
add
mov
mov
int
faddl
sub
jo
xor
cmpsb
xor
testl
xchg
test
xor
push
jg
dec
push
add
mov
add
test
mov
iret
pop
xrelease
or
sbb
jg
cmp
pop
int3
int3
push
test
inc
addr16
push
adcl
pop
push
jo
lds
cwtl
or
and
imul
stc
or
pop
add
mov
xor
mov
mov
cwtl
nop
add
push
in
outsl
cmp
xlat
adc
lahf
mov
or
mov
les
mov
orb
scas
add
xor
cld
pusha
mov
outsb
cmp
inc
sahf
jnp
add
mov
pop
ret
mov
cmpsb
mov
add
mov
int3
pop
sti
mov
test
cmp
pushf
cmpsb
pop
popf
fldl
sbb
mov
or
int
and
or
int
jg
nop
in
sbb
adc
repz
jb
xchg
xchg
add
pushf
add
sbb
add
mov
pop
lods
shlb
pushf
xor
ljmp
pop
roll
adc
test
and
push
loope
loopne
aad
testl
int3
push
ret
xchg
push
iret
adc
iret
sarb
movl
xorb
push
adc
push
sbb
xchg
cmp
and
push
pushf
mov
nop
xchg
xor
rcr
jecxz
inc
pusha
fmuls
mov
or
mov
xchg
add
data16
notl
xchg
sbb
dec
add
testb
cli
add
popa
std
mov
test
sti
scas
out
js
add
cmp
push
or
out
mov
mov
inc
popa
lods
sbb
mov
mov
inc
cmc
orb
push
jnp
sub
mov
mov
or
call
pop
pop
dec
cmc
aas
popa
mov
adc
fcomps
mov
mov
rorl
xor
mov
hlt
pusha
mov
test
roll
mov
lock
or
and
and
cli
out
pop
movsb
cmp
inc
pop
mov
popf
pop
cmpsl
and
jb
jge
loopne
gs
add
ja
pop
aas
pusha
cmp
rorb
xchg
or
add
inc
inc
inc
add
int3
sar
mov
mov
notb
and
mov
insb
jae
pop
cli
mov
shrb
aam
pop
cmp
mov
iret
dec
lcall
lods
ljmp
test
mov
sub
sbb
xchg
pop
hlt
inc
add
mov
popf
dec
adc
adcb
gs
sbb
or
loopne
daa
push
scas
push
pop
dec
orb
aaa
cwtl
in
add
xor
xchg
addr16
cwtl
insb
hlt
mov
jno
sbb
es
add
dec
icebp
inc
pushf
loop
testb
enter
cmp
mov
rolb
dec
mov
loope
adcb
inc
xchg
int3
mov
movlps
pop
adc
mov
aas
mov
pop
sub
jo
jo
mov
arpl
ret
test
pop
add
and
insb
cmp
or
std
mov
mov
popf
xchg
loopne
jle
clc
or
subb
sbbb
lret
and
or
fs
or
add
mov
testb
or
adc
aad
stos
mov
adc
sub
or
or
repz
ja
test
inc
loopne
hlt
xchg
mov
push
iret
insb
sahf
and
add
xchg
int3
adc
xor
ret
sub
movsb
gs
mov
rcr
xchg
jae
repnz
sbb
mov
mov
scas
add
push
std
mov
or
into
insb
aaa
pop
test
xchg
das
fdivrl
sbb
adc
inc
pusha
rcl
mov
test
xor
sbb
push
mov
pop
add
mov
lods
add
or
cmp
sbb
hlt
or
push
lret
dec
popf
pop
data16
mov
push
mov
popf
push
push
sbb
nop
or
push
js
sbbb
xchg
js
dec
addl
es
sub
movsl
push
ds
loopne
add
and
mov
shll
shlb
xor
add
add
rorb
add
xchg
cmp
add
adc
jb
sbb
cwtl
pop
cwtl
add
xchg
andb
cmp
sar
repz
sbb
lods
daa
fidivs
dec
dec
push
hlt
or
incb
test
out
fs
push
pop
jno
adc
add
enter
push
mov
sub
mov
jbe,pt
mov
mov
or
in
inc
add
mov
sbb
je
out
xchg
inc
je
loopne
inc
sbb
and
notb
int
jle
xchg
mov
adc
insb
js
pop
inc
cwtl
pushf
rclb
out
dec
pop
mov
aam
sbb
cmc
pushf
sarb
cld
mov
jbe
add
jge
lcall
lret
cmpl
push
push
push
push
loopne
mov
cmp
popl
mov
iret
mov
jo
sbb
cmp
inc
bound
lods
pop
rcrb
sbb
push
lret
cmp
mov
mov
rcll
jle
xor
push
inc
hlt
mov
addr16
out
movsl
pop
add
pop
push
stos
mov
sub
push
inc
sbb
cwtl
enter
add
pop
sbb
dec
loop
dec
pop
dec
push
adc
popa
iret
movsl
popa
loopne
clc
mov
or
nop
or
lock
push
lds
out
mov
das
lods
adc
call
cmpsl
adc
and
pusha
and
sarl
xorl
add
or
das
pop
cmc
ret
add
imul
and
pop
mov
sbb
cmpb
mov
or
add
inc
outsl
mov
pop
stc
or
addb
into
and
stc
pop
in
scas
cmpsl
add
push
rclb
add
jmp
xchg
mov
ds
push
leave
mov
adc
add
insl
mov
ds
push
xor
inc
pop
jmp
pusha
out
dec
add
sub
xchg
xchg
inc
fiaddl
xchg
xchg
aaa
sbb
bound
icebp
sub
mov
into
sub
jg
shrb
push
pop
pop
stos
cmpsb
push
jmp
pop
ret
inc
jg
data16
dec
and
adc
ret
imul
xchg
data16
jecxz
clc
shll
pop
pop
sub
sarl
mov
mov
call
or
fildll
je
add
mov
jl
and
pop
stc
or
mov
pop
add
stc
shll
lock
mov
jge
push
mov
scas
dec
daa
adc
xor
add
test
cmp
stos
adc
xor
dec
pop
mov
or
add
xchg
jmp
push
push
mov
cmp
pop
mov
or
add
into
and
rclb
or
and
rolb
xchg
je
test
into
add
push
notb
and
out
pop
sub
loop
rorl
or
js
test
pop
push
in
adc
wrmsr
cs
rorb
arpl
xor
dec
hlt
popa
sbb
xor
mov
pop
or
fnstsw
inc
inc
adc
movsb
add
or
mov
sbbb
rorb
mov
pop
adc
cwtl
shlb
jb
call
mov
inc
les
pop
mov
insb
mov
or
ds
loopne
and
popf
mov
sub
push
in
add
xor
xchg
pop
pusha
mov
mov
sbb
xchg
insl
or
sub
mov
out
shrb
xlat
mov
cmp
or
or
inc
push
stc
je
add
sbb
mov
adc
pushf
inc
sbb
movsl
jne
push
fsubs
cmpl
daa
int3
push
insb
mov
scas
leave
cmp
mov
inc
clc
sti
mov
test
call
or
adc
mov
push
stos
enter
addr16
fnsave
inc
inc
adc
push
ret
sbb
cltd
or
mov
mov
push
add
fs
jecxz
enter
aaa
jmp
jns
sbb
lea
inc
in
pop
ljmp
xor
add
stos
and
nop
bnd
and
add
push
and
inc
push
stc
sub
adc
pusha
mov
add
mov
sti
push
pop
imul
hlt
adc
lmsw
popf
inc
jmp
push
jo
xor
mov
outsl
mov
xor
fdivrs
cmp
cmc
rcl
shlb
mov
xchg
aam
add
fs
pop
mov
and
add
xchg
and
sub
sub
cmp
repz
mov
inc
or
or
sbb
sub
jnp
sar
mov
xchg
movsb
insb
mov
lods
adc
jne
out
push
stc
repz
push
mov
in
dec
out
mov
mov
or
xor
add
xchg
iret
mov
pusha
pop
stc
mov
pop
adc
add
stc
mov
push
roll
leave
pop
add
mov
sahf
inc
add
rorb
mov
into
cmp
sbb
es
scas
cmp
pushf
mov
and
sub
les
or
je
shlb
add
cmp
add
push
rcrb
add
mov
clc
add
idivb
mov
xor
icebp
inc
inc
mov
roll
arpl
pop
jb
sti
jg
push
sarb
mov
xchg
or
inc
mov
and
test
pusha
andb
roll
cltd
enter
inc
pop
inc
mov
loopne
sbb
les
mov
pop
aad
int3
mov
dec
add
and
pop
inc
dec
cmpsl
aam
adc
pop
inc
adc
jmp
mov
sub
mov
inc
jecxz
and
mov
push
ja
xor
nop
pop
rcrb
pop
adc
sbb
sbb
or
dec
cmp
or
xchg
inc
popf
inc
jge
gs
mov
push
inc
add
cmpsl
test
adc
call
sarb
loope
push
sbb
ljmp
addr16
insb
add
lcall
pop
loopne
pushf
push
rorb
mov
adc
add
add
imul
test
clc
cli
push
xlat
out
or
sub
test
dec
add
lock
stos
mov
sbb
jo
clc
cltd
aad
add
sbb
sbb
outsb
pop
mov
add
rorl
or
orb
push
push
lds
adc
add
loopne
ret
sub
add
adc
xor
add
enter
adc
add
mov
pop
xchg
mov
sub
and
dec
negb
add
mov
aaa
imulb
jecxz
adc
loop
movsl
inc
push
sbb
add
mov
das
xchg
xchg
add
hlt
mov
add
pop
addl
add
xor
je
add
icebp
add
add
xchg
mov
dec
add
pop
sbb
push
cmc
ss
orb
pop
xor
push
notb
roll
out
addl
add
call
xor
stos
jge
out
sub
aad
test
add
jns
sub
xorb
ljmp
mov
mov
jp
push
pusha
pop
pop
pop
pop
add
inc
mov
lods
add
inc
das
ret
shll
cmp
daa
cmp
cs
fisttpl
inc
loop
xor
xorb
xorl
bound
add
ret
cmpsl
shlb
mov
ss
jo
xchg
rcll
add
xor
call
cmp
sub
mov
lret
stc
mov
cmc
ret
push
mov
and
imul
jns
loope
adc
lcall
dec
sub
aas
dec
pop
add
inc
shll
add
adc
inc
dec
fidivl
je
popa
xor
fst
aad
and
filds
rclb
jle
jno
jbe
pusha
dec
xor
les
pop
inc
subb
mov
rcll
pushf
add
les
fsincos
and
mov
movsb
aaa
push
push
sbb
movsl
and
mov
xor
add
dec
xor
scas
leave
adcb
adc
les
fcompl
ljmp
iret
inc
cltd
dec
sub
xor
mov
mov
hlt
pusha
rcrl
shl
or
aaa
sbb
cmp
stos
ljmp
popf
xchg
mov
inc
mov
add
lahf
push
cwtl
imul
fwait
sub
xchg
lcall
cmpsl
cmp
adc
dec
mov
pop
sar
in
out
add
movsb
mov
inc
sub
into
cmp
mov
rclb
jne
jns
mov
push
push
sbb
add
pop
test
pushf
lock
addb
movsb
cli
cli
and
push
mov
sbb
scas
in
fmulp
push
or
in
jle
pop
dec
inc
rolb
xchg
sub
adc
pop
fildl
ret
scas
add
and
jle
push
int
aas
jb
nop
aam
push
js
pop
loop
mov
mov
dec
push
loope
jge
mov
lcall
add
mov
enter
lcall
pop
jecxz
mov
push
lock
repnz
dec
hlt
test
jns
add
mov
pusha
mov
rorl
gs
inc
xchg
in
cwtl
push
add
rorb
mov
test
jb
adc
push
sbb
sbb
scas
pop
add
xor
adc
test
cmp
jp
mov
or
leave
push
push
pop
daa
es
jno
pop
push
push
adc
idivb
nop
arpl
and
jecxz
cmpsb
sti
hlt
sbb
and
inc
push
jbe
dec
add
and
add
jmp
push
sbb
adc
movl
adc
add
sbb
shll
and
pop
add
popf
test
scas
dec
add
pop
pop
ss
dec
js
decl
pop
push
jmp
test
and
and
add
adc
cmp
int
pop
es
push
dec
leave
sub
test
outsb
mov
dec
xor
add
mov
lcall
xchg
hlt
and
jne
imul
adc
push
or
push
adc
add
push
push
sti
sub
lods
movsb
add
cltd
add
inc
push
insb
inc
add
dec
add
test
loopne
call
fcompl
mov
mov
add
push
xor
aad
pop
mov
jmp
rorl
mov
push
jg
push
and
aam
or
mov
mov
scas
lds
test
int
popf
aas
nop
fsubl
popa
je
push
mov
mov
cli
addb
loop
mov
mov
in
mov
int3
ljmp
mov
in
mov
pushf
leave
stos
loop
add
jmp
lret
xchg
loopne
pusha
add
mov
cmpsl
jmp
add
jmp
insb
xchg
inc
outsl
mov
imul
mov
push
add
add
push
insb
aaa
loop
inc
mov
xchg
popa
ret
pop
and
test
xor
jp
or
mov
mov
sbb
sbb
push
pop
cmp
popa
test
std
and
ja
xor
dec
ds
lcall
sbb
add
les
xor
in
inc
hlt
inc
push
ljmp
dec
in
add
test
fidivrl
hlt
adc
dec
cmpsb
cli
xor
testb
xchg
add
addb
fwait
int
or
arpl
int3
enter
push
nop
nop
mov
jo
loopne
lods
sysret
mov
nop
cmp
pop
cltd
sbb
xor
leave
pop
adcb
xorb
clc
jl
imul
fdivs
daa
dec
das
fs
insb
orb
aas
dec
push
pushf
stos
fadds
test
hlt
add
in
cli
ss
jl
loopne
cmpsb
xor
jns
lods
sub
add
cmpb
lds
add
pop
pop
mov
repz
inc
call
loop
call
mov
sbb
dec
ret
in
xor
lret
jg
shlb
das
adc
out
add
repz
and
dec
iret
jo
xchg
dec
mov
out
in
ret
cmp
scas
jno
pop
and
es
out
or
shlb
xor
outsl
movb
xchg
stos
add
daa
or
add
cmp
pop
jp
add
push
cld
dec
ret
js
jns
nop
jmp
pop
add
jmp
aad
add
insb
jge
call
inc
xlat
movsl
add
mov
add
jg
mov
add
push
push
push
xchg
xchg
lcall
xor
add
aaa
loopne
lret
hlt
push
add
dec
sub
shlb
std
adc
add
jno
pop
xor
add
in
cmc
cwtl
cmp
add
pop
sarl
inc
push
add
jbe
inc
jmp
cs
push
push
js
dec
add
push
fwait
nop
fiadds
add
mov
add
mov
mov
jo
ja
mov
dec
add
imul
push
call
jne
push
nop
pop
jge
add
push
test
loopne
packssdw
cmp
negl
je
lock
sbb
mov
ja
subb
xchg
fidivrl
mov
pushf
popa
xchg
in
lock
add
nop
inc
mov
or
ret
test
pop
mov
rsqrtps
pop
jle
insb
repnz
fisttpl
iret
test
xor
jno,pn
scas
sbb
repnz
sub
mov
push
adc
sbb
sub
es
cli
dec
add
dec
ret
movsb
in
push
cmp
pop
and
into
xchg
adc
iret
insl
inc
pop
add
scas
cld
aaa
ja
xor
add
xchg
mov
loop
add
inc
and
fcmovu
roll
push
inc
out
sbb
ret
loopne
add
add
addb
dec
cmpsb
mov
mov
add
add
lea
push
jb
je
cli
in
push
lret
lahf
sub
and
pop
incb
mov
cli
pop
fwait
xor
rcl
jecxz
xchg
call
add
in
cmp
push
es
mov
rclb
push
add
jb
lahf
loopne
mov
cwtl
xor
dec
mov
mov
fwait
insl
movsl
popf
mov
test
js
pop
lret
stos
dec
imul
pop
pop
sub
jno
push
insl
xchg
aaa
add
jb
enter
jge
subb
jg
sub
add
gs
jp
cmp
jo
fwait
ljmp
lods
mov
and
inc
das
mov
add
inc
mov
cmp
sub
jnp
adc
mov
in
cmp
inc
push
adcb
pop
out
cmp
popa
add
lret
jmp
cltd
jae
cmp
cwtl
and
loope
add
movsl
add
cmp
cld
sbb
xor
sbb
jge
cmp
push
rolb
mov
push
sub
ret
or
push
int
xchg
jb
add
jno
fidivrs
cmpl
sbb
sub
xor
push
adc
mov
lret
add
mov
sub
andl
sbbb
add
adc
jl
jo
add
push
addb
cltd
pop
xchg
ret
mov
pop
stos
adc
lcall
les
cmpsl
dec
sbb
idivl
push
or
mov
sbb
icebp
ret
mov
insl
stos
pop
addr16
std
push
jo
je
jns
outsl
js,pt
mov
jo
cmp
movb
inc
inc
shrl
and
mov
mov
and
or
gs
and
mov
jo
dec
sub
or
ljmp
sub
push
add
pusha
daa
pop
mov
rcrl
sbb
add
or
add
lds
mov
mov
lcall
int3
nop
push
jb
push
movsb
int
andb
push
into
cs
add
imul
add
push
add
push
test
add
sub
daa
shrl
add
fildll
xchg
cmp
jp
dec
fnstenv
add
cs
cmp
iret
lret
add
push
fs
add
rorl
push
cli
popa
enter
imul
sub
pop
clc
inc
fiadds
jne
and
mov
push
hlt
cmp
nop
add
inc
pushf
pmulhw
lock
pushf
inc
dec
fdivrl
xchg
ss
xor
or
add
fists
mov
insl
mov
add
inc
stos
lea
outsb
sbb
in
push
push
pop
push
xor
iret
add
push
mov
pop
sbb
imul
pop
stc
or
insb
jp
add
out
pop
jno
xor
ja
dec
imul
add
sbb
xor
sub
sbb
push
js
pop
xchg
aaa
clc
add
test
scas
adc
repnz
std
fcompl
rcrl
sahf
mov
mov
sbb
xor
mov
pop
cmpsl
andl
and
fidivl
fadds
int
icebp
jo
aaa
pop
call
jns
xchg
pop
movsl
pusha
inc
and
roll
stc
add
rclb
aam
jmp
imul
stos
or
pop
inc
pop
add
outsl
ret
ja
mov
leave
inc
lods
add
sbb
xchg
je
pop
add
add
cli
or
ljmp
inc
cwtl
addr16
roll
or
add
bound
mov
inc
push
std
pop
loope
mov
ljmp
mov
rcl
mov
mov
cmp
dec
xchg
pushf
jg
fs
ja
pop
sarb
fmul
push
rcrb
sbb
dec
daa
addb
int
call
add
sbb
jo
dec
jns
inc
cwtl
mov
imul
outsb
add
mov
sub
in
xor
stc
loope
push
jg
mov
dec
mov
inc
sbb
sub
pusha
jmp
inc
je
lahf
mov
pop
add
push
xorb
les
push
mov
jns
mov
mov
sbb
cmc
jp
clc
pop
aad
mov
pop
add
push
jnp
xor
lods
call
adc
les
mov
iret
test
outsb
dec
pop
test
inc
je
cmp
sub
test
and
adc
paddd
stos
cld
and
enter
dec
lods
cmp
pop
jae
push
add
pop
mov
enter
mov
loope
sbb
add
loopne
stc
push
or
push
xchg
xchg
push
dec
rorb
rcrb
mov
cmpb
jno
add
adc
add
add
mov
xor
mov
repz
sub
push
add
sub
mov
popa
mov
push
int
xor
push
mov
enter
pop
add
sub
cmp
push
call
add
mov
jle
ss
daa
xchg
ljmp
mov
shrb
xchg
stc
sbb
xor
dec
mov
xchg
out
push
add
inc
xor
and
pushl
in
repnz
dec
jge
fsubl
adc
dec
ja
daa
hlt
aas
out
cmp
sub
or
cmp
push
stc
sub
xchg
je
adc
xor
insl
ffreep
fidivrs
mov
mov
pop
inc
adc
xor
into
xchg
fldcw
adc
test
sub
cmc
lds
lods
mov
lret
mov
add
in
xchg
ja
pop
int
dec
nop
mov
popf
dec
sbb
add
iret
ss
es
jbe
jle
inc
add
mov
pop
pop
out
inc
adc
scas
dec
or
adc
sbb
and
ret
add
inc
xor
sbb
inc
push
ret
sbb
sub
or
bound
or
jo
rclb
sub
sbb
push
test
ja
xchg
sub
jmp
loopne
push
addl
fdivrl
jae
jp
xchg
and
inc
push
ret
add
mov
rcll
dec
push
rolb
pop
movzbl
or
mov
or
and
sbb
or
push
xchg
and
inc
push
ret
add
xchg
movsl
pushf
mov
arpl
adc
add
xchg
repz
cmpb
mov
push
mov
pop
mov
call
sbb
call
rorb
dec
push
push
pop
ret
inc
mov
pop
inc
push
ret
sub
test
mov
pop
jle
cmp
dec
jne
mov
inc
adc
js
mov
enter
push
jge
inc
xor
push
sti
mov
ret
pop
ret
xchg
mov
inc
push
js
sahf
pop
popf
sbb
add
sub
cmp
sbb
xchg
aaa
clc
popf
test
fstps
cmp
mov
cmpsl
out
inc
sbb
add
pusha
icebp
lahf
outsb
movsl
and
sbb
rorl
test
add
adc
pop
call
loopne
sbb
mov
push
test
sub
mov
fs
pop
push
cmpsl
ret
ret
xor
adc
ret
dec
pop
cmpb
mov
mov
sub
ret
cs
int
or
add
sbb
push
mov
inc
add
bound
std
fcomps
fwait
cmpsl
adc
mov
leave
pop
mov
cmp
add
rorb
icebp
push
imul
fmuls
inc
pop
add
adc
sbb
ja
push
or
pop
xchg
pop
lods
loopne
add
sti
xor
push
xor
jo
daa
add
sub
sub
sbb
insl
pop
movl
fists
push
imul
inc
and
and
shlb
fists
aam
adcb
jmp
ret
pusha
cmc
inc
divb
pushl
rcr
int
cwtl
dec
xor
fst
xor
nop
into
add
xor
add
pop
xor
mov
xchg
mov
adc
xchg
xor
xchg
sbb
scas
push
cmp
push
aad
and
sbb
aam
lahf
mov
rcrl
inc
shr
adc
sbb
cmp
ja
popa
xchg
jb
mov
lcall
les
test
pop
add
ljmp
xchg
and
insl
ss
or
dec
add
sub
xlat
ja
imul
push
or
xor
insl
jg
test
pop
sbb
mov
adc
sbb
cmpl
add
push
imul
mov
jno
or
mov
rcl
dec
add
jmp
mov
fsts
xor
push
mov
cs
mulb
fldl
adc
push
sbb
scas
jle
xchg
lea
call
push
and
add
bound
mov
rcll
mov
popa
sti
add
sub
sbb
xor
sbb
add
push
add
mov
int3
add
mov
pop
test
cmpsl
jmp
sbb
enter
push
pusha
sub
ds
push
daa
or
test
dec
add
add
mov
push
push
in
lock
pop
rdtsc
jmp
ja
push
adcb
lds
leave
jno
add
aaa
mov
movups
inc
mov
push
cmp
in
cmp
xor
push
jo
push
faddl
pop
pushf
fwait
add
ljmp
call
scas
adc
push
jo
dec
xchg
jp
dec
sti
aas
add
pop
mov
popf
ret
adc
das
sbb
sbb
xchg
stc
add
and
mov
cld
adc
shll
pop
mov
add
dec
popa
sbb
mov
jbe
lods
imul
in
inc
adc
lret
dec
es
and
cmc
jl
and
adc
adc
xchg
adc
bound
xchg
xor
aas
iret
mov
imul
and
and
lea
orb
cwtl
gs
inc
adc
adc
cltd
out
jo
xchg
sbb
dec
cmp
add
adc
jp
stos
mov
jne
pop
jmp
sbb
jge
pop
or
or
insl
adc
xor
dec
pusha
sbb
icebp
test
sub
dec
mov
or
aaa
push
lahf
jge
xor
and
dec
push
stos
rorb
outsb
lret
lret
mov
xchg
pop
test
mov
pop
lea
or
movsl
adc
add
xor
mov
dec
pop
sub
popa
andl
es
xlat
push
add
pop
pop
push
mov
idiv
sub
xor
sub
push
or
ds
mov
push
popa
xor
xor
sub
outsl
push
cmpsl
push
jo
pop
sbb
cmp
mov
jmp
in
sbb
lahf
ljmp
cmp
mov
mov
shlb
out
outsl
cmp
inc
sbb
inc
orb
xchg
adc
and
in
mov
xchg
mov
jns
jns
sbb
adc
imul
push
sub
sub
xlat
pusha
adc
add
ret
mov
mov
inc
pop
addr16
pop
adc
cs
add
lret
cwtl
fmull
stos
jb
sub
jmp
int
push
xchg
mov
dec
add
adc
pop
daa
cld
nop
gs
int
loopne
jge
in
add
mov
and
lcall
sbb
dec
push
js
inc
movsb
cli
fiadds
ret
mov
dec
cmp
pop
sub
push
hlt
add
sbb
pop
pusha
vmwrite
sbb
mov
insl
fisubrs
mov
or
lcall
pop
in
adc
and
mov
sub
push
mov
push
or
cmc
push
mov
jg
out
push
and
insl
setb
push
ja
lods
lret
icebp
lret
lock
mov
push
insb
arpl
scas
lcall
sbbl
adc
mov
dec
add
lret
sti
pop
insb
pop
mov
enter
movzbl
pop
pusha
adc
dec
xchg
jg
sub
xorl
repnz
in
addr16
mov
imul
jmp
imul
stc
bound
inc
ficoms
mov
and
mov
clc
xchg
cmc
dec
mov
daa
xor
add
dec
cmp
loop
pop
or
cli
xor
sbbl
jecxz
cmp
test
mov
push
mov
xchg
xor
mov
pop
mov
push
sub
clc
mov
and
adc
popf
xor
adc
jmp
or
bound
sbb
add
in
mov
add
leave
adc
mov
imul
mov
fs
mov
out
and
and
rorl
xor
sub
addr16
repz
sbb
decb
cmp
jp
sub
sub
mov
cltd
roll
aam
lock
or
mov
sarb
adc
and
mov
or
push
sub
sbb
add
in
sbb
mov
cmc
xor
insl
inc
and
lcall
mov
dec
aas
test
popf
and
push
scas
inc
inc
clc
sbb
or
cli
insl
inc
ret
adc
mov
mov
adc
inc
sub
or
in
pop
loopne
pop
sbb
xchg
xchg
stc
add
lret
add
clc
inc
popf
xchg
push
subb
rol
adc
data16
xchg
sbb
mov
nop
cmp
cmc
and
jmp
das
or
dec
mov
rolb
mov
mov
aaa
and
pusha
lahf
or
xchg
sub
or
inc
shl
insb
inc
fcoms
xchg
mov
xchg
loop
push
pop
jo
outsl
xor
sbb
jp
add
mov
sub
jp
and
push
faddl
mov
mov
scas
repz
xchg
sbb
mov
add
pop
js
sub
sbb
sub
pop
cwtl
inc
cltd
pop
daa
lcall
shrl
pop
dec
lcall
pop
mov
shrb
cmp
sub
mov
pop
fwait
mov
cltd
cmp
xor
and
dec
inc
mov
inc
cld
adc
or
js
push
add
pop
stos
mov
xchg
xchg
outsb
mov
iret
bound
mov
in
popa
js
add
xchg
pop
cmpl
sub
enter
mov
pop
jmp
lret
outsb
sahf
sahf
arpl
jmp
orb
nop
pop
push
push
lock
out
sub
fidivrl
hlt
cmpsb
jmp
mov
cmpsb
pusha
mov
xor
pop
sub
cld
pop
mov
mov
sub
js
xor
fldenv
dec
sub
rcll
mov
mov
movsb
inc
sub
sbb
jg
pop
cltd
fisttpl
and
cmp
or
addl
mov
popa
or
jnp
mov
scas
mov
or
mov
fwait
loope
ret
sub
clc
sbb
out
shrl
inc
ljmp
mov
add
aam
xchg
mov
call
stos
cwtl
sar
into
pushf
cli
dec
ljmp
mov
sbb
orl
add
test
out
adc
xlat
fwait
pushl
add
mov
in
pop
out
xor
add
sbbl
push
mov
sbb
je
or
jmp
test
and
inc
push
xor
xor
mov
inc
or
pop
dec
sbb
xchg
cld
sbb
rcl
add
sti
mov
and
dec
je
mov
in
ret
aaa
daa
adc
mov
shll
out
sbb
imul
jnp
dec
add
sub
xor
push
xchg
fcoml
sbb
mov
mov
sub
add
mov
sbb
sarb
out
push
push
pop
mov
xorl
xchg
enter
mov
cs
adc
push
add
and
xchg
sahf
ret
std
ret
push
test
jp
sbb
mov
shl
mov
popa
ljmp
inc
dec
icebp
xchg
push
xor
popa
inc
sub
or
jmp
outsl
add
mov
add
and
push
dec
sub
inc
mov
cmp
sub
pusha
movsb
push
cmpsl
int
fs
push
test
pushf
push
pop
mov
ret
xor
dec
and
add
fisubl
leave
sub
jns
clc
mov
xor
mov
mov
cmpb
lods
rcll
add
jae
adc
int3
test
mov
lods
xchg
inc
pop
pop
loop
nopl
aaa
or
pusha
insl
xor
push
cld
sub
cwtl
jecxz
xchg
and
jo
inc
add
jp
int3
sbb
push
lds
and
xor
sub
sbb
push
mov
pusha
mov
add
and
and
add
jg
sub
and
cld
xor
cmpsl
xor
mov
mov
pusha
add
pop
addr16
mov
cmc
daa
and
arpl
fld
and
pusha
mull
cmpsb
inc
xor
mov
loope
cmp
or
push
push
sub
das
test
pop
test
or
push
test
and
sbb
xchg
mov
inc
dec
add
cmc
je
icebp
or
out
mov
pop
or
mov
sbb
xchg
mov
cmp
shll
mov
inc
inc
fimuls
loope
add
jmp
ljmp
sbb
pop
add
inc
lds
cmp
push
add
inc
fcoms
mov
push
into
and
dec
movsb
lds
adc
jbe
add
in
cs
lret
hlt
imul
mov
bound
add
add
js
mov
fwait
enter
out
inc
loopne
fmull
movsb
pop
scas
dec
setbe
mov
cmp
push
call
mov
mov
int3
mov
addr16
push
stos
jl
add
fisubrs
outsb
lds
out
or
pusha
shl
sub
mov
in
and
mov
imul
andb
lds
add
loop
add
cmp
adc
xor
loope
je
add
xor
adc
rorl
js
add
dec
aaa
sub
aas
or
imull
add
inc
fimull
adc
bound
dec
push
sub
and
and
insb
xorl
arpl
scas
ja
mov
lret
imul
in
and
cli
add
dec
mov
aas
les
pusha
loop
mov
fadds
jno
add
push
rdpmc
add
or
add
cmpsl
cld
rclb
rclb
inc
cmp
icebp
jmp
cmp
rorb
dec
mov
and
add
ret
cli
mov
test
cmp
add
aam
fisttpll
loopne
sub
inc
rcll
adc
inc
adc
sahf
mov
fiadds
mov
outsl
mov
or
dec
sbb
pusha
pusha
aas
imul
jge
pop
sbb
pop
cli
push
xchg
mov
xchg
jno
add
sub
add
dec
loopne
and
push
cmpl
and
in
add
cmc
dec
or
dec
mov
add
ret
leave
mov
sub
xchg
or
jmp
fildll
add
add
fwait
test
sti
dec
push
rcrb
xorb
lods
arpl
std
add
jle
add
notb
es
mov
jne
add
imul
int3
addb
fstps
sbb
and
push
jno
adc
icebp
out
and
int3
outsb
jg
xchg
jbe
fidivrs
stc
sbb
sub
dec
in
push
orl
mov
subb
mov
add
testl
in
dec
lds
cld
aaa
outsl
mov
xor
flds
insb
lcall
inc
out
mov
repnz
pop
sbb
call
fs
mov
cmp
in
cmc
int
push
imul
add
inc
nop
in
lcall
pop
mov
dec
mov
mov
out
dec
jns
clc
fldl
sbb
mov
daa
add
push
and
andl
add
subb
jno
adc
jecxz
cmpsb
addl
push
xor
lods
dec
jb
xchg
push
idiv
sbb
push
sbb
sbb
scas
in
add
push
addr16
jns
xchg
mov
pop
iret
sub
rclb
or
shlb
push
jne
add
mov
iret
test
jecxz
jo
sub
loopne
es
in
sahf
inc
mov
out
pusha
xor
aas
mov
add
lds
push
in
in
mov
pop
mov
xor
jo
hlt
add
popa
mov
and
xchg
pusha
mov
mov
sub
inc
xor
dec
clc
xor
sub
pop
mov
push
mulb
aaa
sahf
or
out
inc
lds
push
pop
in
leave
jns
and
movsb
xor
add
push
gs
xorb
dec
sbb
lahf
mov
jg
add
pop
jbe
cmpsb
mov
dec
adc
jmp
dec
les
mov
mov
test
mov
sti
cmp
add
mov
inc
fldcw
jns
pop
inc
or
or
cmc
push
pusha
sahf
popf
ja
pop
jp
xchg
inc
push
and
ds
inc
inc
cld
inc
xchg
dec
fsubrs
add
dec
cltd
repz
add
shll
push
aaa
xor
xor
push
test
es
test
add
jl
adc
cmp
pusha
arpl
pop
sub
icebp
dec
jecxz
cld
mov
jo
sub
je
add
js
xor
mov
in
das
inc
cwtl
xlat
xchg
movsb
and
sbb
add
dec
ljmp
lds
adc
popf
fmuls
arpl
test
and
cmc
cld
mov
inc
ret
cmpsl
ror
push
aaa
add
cs
adc
mov
pop
jae
xor
cmp
push
jg
sbb
mov
and
jmp
in
add
pop
jg
add
jns
shlb
ljmp
out
sbb
xchg
mov
xor
push
jbe
adcb
mov
adcl
pop
cmc
or
xor
sbb
sub
gs
stc
jb
add
shl
fbld
push
popa
add
sarl
insl
int
xchg
lcall
bound
sbb
dec
fcoms
pop
add
movsb
ja
adc
nop
lock
fldl
in
ror
sub
cs
mov
cmpb
cmp
imul
test
inc
xchg
testl
inc
rorb
pop
dec
pop
outsb
cwtl
comiss
andl
sub
gs
adcb
rcrb
lret
sbb
mov
sub
cli
xor
out
push
sub
add
jns
xchg
inc
add
stc
js
loope
jp
mov
or
adc
sbb
add
andnps
sahf
push
sub
vmovlpd
jmp
mov
roll
dec
push
xchg
cmpsb
and
lret
add
adc
dec
push
inc
int
subl
mov
dec
cmpb
mov
add
and
test
or
enter
inc
loopne
mov
pop
lret
pop
sbb
sbb
andb
add
nop
or
cmp
cld
jl
fcoms
and
int3
or
lods
insl
add
mov
imul
add
xchg
gs
pop
jae
add
lds
dec
push
mov
call
icebp
sbb
cmp
inc
sahf
addps
scas
rol
or
cmpsl
and
daa
mov
xchg
aaa
or
dec
fldenv
adc
hlt
push
js
shll
add
inc
mov
cld
mov
cmp
inc
clc
pushf
inc
arpl
les
mov
ss
int3
outsb
add
pop
ja
xchg
rclb
or
pop
mov
scas
sti
movsb
scas
int3
and
sub
dec
mov
cld
daa
sar
decb
das
pusha
imul
mov
jne
or
pop
sub
mov
pop
insl
add
push
cmc
leave
push
mul
lds
sbb
jo
and
xchg
push
add
xchg
repnz
stc
and
adc
push
iret
sub
fstpl
mov
xor
std
add
testb
add
add
mov
sub
mov
mov
in
mov
and
and
ds
mov
mov
push
int3
insb
jns
imul
mov
out
icebp
push
nop
add
and
shr
testb
push
int
jns
and
sbb
mov
sub
seto
push
lods
mov
das
into
cmpsb
mov
jnp
daa
add
mov
je
mov
sbb
cmp
orl
stos
cmp
sub
add
out
sub
inc
loopne
add
aas
test
xorb
popf
in
fcompl
cs
mov
insl
mov
cmpsl
cmp
adc
jns
add
fwait
test
adc
leave
add
dec
ficoml
mov
mov
lds
xor
daa
push
nop
xchg
ficompl
jg
popa
subb
mov
shr
inc
icebp
sbb
xchg
sub
xchg
fiadds
out
mov
popf
rolb
mov
punpckldq
pop
in
andl
jmp
fs
xchg
push
bound
push
sbb
insb
xchg
inc
lahf
idivb
dec
add
call
mov
aad
jmp
push
clc
mov
adc
inc
pop
mov
loopne
sbb
xor
mov
push
xchg
add
inc
pushf
and
rcrl
out
or
sbb
clc
or
adc
adc
sahf
pop
add
dec
jmp
int3
mov
out
ss
adc
xchg
subb
jmp
movsb
jno
rcll
mov
dec
out
das
cmp
adc
lret
push
scas
push
push
mov
shlb
pop
inc
add
int3
inc
popf
sbb
enter
add
sbb
dec
xchg
sbb
add
jbe
lcall
ss
in
add
xor
sbb
mov
cmc
push
adc
popa
jns
hlt
push
cmp
jae
cmp
sub
lahf
mov
cld
push
dec
mov
sub
xchg
and
mov
sbb
jnp
je
sub
add
repz
repz
push
push
dec
pop
sub
inc
mov
sub
les
and
push
inc
orb
or
push
int3
movb
pop
pop
xor
clc
ret
mov
adc
jmp
or
mov
push
sub
add
sbb
add
pop
cmovbe
pop
or
mov
cmp
add
out
fdivrs
lret
jno
add
mov
mov
dec
pop
pop
add
and
dec
lods
bound
ret
or
cltd
inc
and
push
cli
add
mov
roll
fwait
cmp
jnp
add
adc
rcrl
jae
and
testb
out
imul
xor
pop
add
or
inc
addb
mov
cmp
xor
jle
les
popa
add
and
call
ljmp
mov
popf
push
push
lea
sub
stc
rol
nop
mov
push
sub
inc
adc
jnp
mov
and
adc
inc
mov
dec
mov
loopne
and
sbb
lea
movsl
ret
cmp
or
push
jb
clc
inc
frstor
decb
rorl
and
sbb
jns
loop
add
pop
push
testl
sarb
adc
add
pop
cltd
cmc
mov
imul
hlt
dec
mov
or
add
aad
xor
dec
mov
iret
fstp
push
adc
xor
push
fidivrl
repz
adc
cmpsl
cmpsb
dec
ficoml
cld
subb
cmp
scas
add
les
push
sbb
loope
daa
jmp
and
popa
scas
insl
out
rcrb
cmpsb
popa
pop
jge
cli
cmpl
dec
adc
inc
xchg
fdivr
inc
call
sbb
pusha
push
cld
mov
punpckhbw
push
cmpsl
ret
dec
lcall
xchg
add
ss
test
subb
cmpl
inc
xor
jmp
inc
add
mov
push
or
andl
fdivrs
adc
or
orb
cltd
inc
adc
mov
je
cmpsb
mov
addr16
adc
sbb
jle
imul
sub
mov
frstor
popf
xchg
je
les
adc
add
mov
xchg
imul
popa
gs
pop
test
sub
lea
add
pop
shlb
icebp
cmp
mov
dec
xchg
nop
mov
loopne
sar
dec
pop
enter
out
andb
cmp
pusha
mov
jno
mov
mov
inc
add
adc
jo
sti
sti
in
jno
mov
ljmp
and
jno
icebp
sbb
mov
lods
adc
push
xchg
incb
je
faddl
shlb
or
scas
push
push
std
inc
and
lcall
fistpl
mov
mov
and
mov
das
dec
jo
out
push
xchg
addl
or
rcrb
stos
das
in
dec
mov
fld
mov
mov
mov
add
sbb
insl
mov
xchg
mov
mov
jb
sub
jle
subb
dec
lods
or
fidivrs
mov
fstp
sbb
pop
nop
ja
mov
dec
xchg
jp
sbb
sbb
ja
or
and
pop
mov
or
pop
les
pusha
in
aas
lahf
add
repz
push
sbbb
xchg
adc
push
ret
adc
mov
adc
mov
sbb
lock
add
jge
mov
mov
adc
scas
addr16
jge
add
sub
xchg
sub
hlt
xor
adc
rorl
inc
xchg
popf
sbb
divb
enter
mov
cmp
loop
sbb
xchg
inc
dec
ja
fsts
pop
sbb
mov
pop
push
andl
add
pop
fwait
push
shlb
sub
outsb
push
add
mov
ljmp
inc
dec
xor
mov
adc
popf
mov
add
push
cld
push
and
jle
push
shrb
pop
add
xor
stos
rcrl
lcall
add
mov
or
xchg
xlat
hlt
aaa
cmp
mov
lea
inc
mov
and
xchg
push
inc
dec
mov
push
test
sbb
pop
sub
sub
add
xor
sub
sub
adc
js
xchg
insl
daa
fs
cwtl
popf
leave
pusha
nop
aas
outsb
imul
add
xor
mov
and
pop
adc
sahf
xchg
lahf
loope
test
inc
adc
test
or
push
sahf
and
jns
add
push
fwait
fs
add
outsb
jbe
mov
push
dec
jg
das
cmp
mov
imul
and
xor
and
imulb
dec
xor
dec
out
lock
xor
fdiv
rolb
pop
call
cmp
rolb
sbb
xchg
inc
xor
mov
fldt
jo
lods
or
lds
inc
jmp
jbe
orb
popf
pop
es
aaa
mov
fwait
xchg
mov
mov
stc
xchg
push
loopne
aam
rclb
mov
inc
sahf
rolb
mov
xor
dec
xor
cld
xor
mov
pop
cmpl
pop
mov
sbb
inc
mov
mov
stc
mov
add
fcmovnbe
add
bnd
test
insl
popa
pop
adcl
push
mov
push
insl
mov
mov
cmp
lds
sarb
jo
or
xchg
xor
add
jnp
ljmp
sbb
fldl
pop
push
lock
adc
and
repnz
fcoml
leave
sbb
jne
lcall
shll
add
loopne
sub
mov
adc
mov
jbe
inc
mov
pusha
test
mov
sub
or
mov
add
cmp
and
mov
jo
lods
orl
insb
push
sub
sub
xchg
add
adc
stos
loopne
jb
stos
adc
pusha
xor
mov
imul
sbb
mov
sub
std
push
jne
add
dec
sub
pop
adcb
stos
adc
cmpsl
sub
adc
sahf
or
cs
leave
dec
pop
mov
mov
pop
pop
orb
and
and
mov
push
test
dec
dec
xor
xlat
pop
lods
in
and
add
enter
shll
push
sub
mov
jmp
and
xchg
popa
rcrl
ret
mov
fisubs
mov
push
mov
insl
clc
cmpsl
push
imul
ds
pushf
fistps
pop
and
mov
dec
jno
jb
mov
aam
das
jmp
xchg
rcl
mov
and
orb
mov
xchg
mov
and
into
cmp
xchg
sbb
mov
pusha
mov
out
insl
pop
mov
ds
lret
jo
sub
in
jno
sbb
test
lret
mov
dec
push
negb
cmpsb
stos
mov
pop
pop
rcll
test
pop
jle
xchg
add
jmp
lea
jle
pop
mov
cltd
test
sub
js
xchg
pop
iret
jge
mov
movsl
sbb
xchg
loop
or
stc
popa
push
pop
int
jle
xchg
shlb
jno
add
mov
pop
xchg
addr16
push
add
mov
and
adc
sub
cmc
dec
sbb
orl
incb
icebp
sub
pop
cmp
xor
jge
imul
push
add
cld
insl
mov
mov
push
pop
add
lret
sbb
add
and
add
fs
das
lcall
and
lret
js
aam
add
add
inc
add
shll
and
push
outsl
or
dec
sbb
dec
in
ror
and
push
sub
pop
popa
sbbb
lods
xchg
bound
fnstsw
data16
inc
push
sub
sahf
sub
mov
add
pusha
or
sbb
push
pop
adc
adc
xor
enter
jnp
mov
int3
xor
jo
scas
add
lahf
mov
dec
sub
xchg
test
mov
pop
adc
add
mov
jg
and
push
jnp
push
mov
inc
fdivl
dec
pushf
stos
mov
mov
sbb
hlt
je
add
sbb
les
and
pop
sub
push
call
dec
dec
push
push
dec
pop
mov
loop
xor
cmpsl
pop
and
int3
fadds
shlb
xacquire
and
pop
es
or
in
dec
out
insl
jno
push
fwait
ljmp
test
inc
mov
cmc
dec
loopne
mov
leave
dec
add
lock
dec
insb
clc
cs
adc
pusha
call
mov
mov
adc
mov
push
jmp
aaa
adc
dec
leave
mov
movsb
and
pop
or
pusha
mov
fiadds
add
sbb
pop
cmp
mov
sub
int
sarl
inc
and
xchg
in
mov
js
jno
add
out
cmc
call
inc
add
or
cld
int
adc
dec
out
loopne
testl
inc
mov
data16
add
cmp
cmp
fs
lods
add
and
test
call
xchg
add
add
in
lock
push
mov
and
inc
shlb
rcrb
dec
mov
pop
add
add
ret
fcoms
sub
imul
push
push
jmp
mov
jb
cmp
add
mov
int3
jg
imul
add
or
mov
mov
pop
jmp
sbb
cmpsb
int3
add
mov
jg
xchg
cmp
adc
movsb
test
xchg
jnp,pn
rcr
mov
scas
sub
cmpsb
pop
push
adc
pushf
xchg
dec
imul
int
es
lock
mov
pop
adc
cmp
inc
mov
sbb
push
ds
out
xor
inc
insb
xor
and
jbe
fiadds
stc
lcall
add
or
pushf
sarb
add
repz
cmpsl
jns
leave
adc
daa
sub
fsubs
fsubrs
pusha
and
or
loopne
jno
add
cltd
pop
mov
andb
scas
xchg
push
push
sbb
daa
in
inc
or
fimuls
mov
sti
jecxz
bswap
cmp
push
add
outsl
bound
mov
push
stc
push
shlb
add
dec
push
stos
or
test
xor
inc
sbb
gs
out
inc
sarl
adc
imul
cmp
loope
mov
cli
inc
aam
add
cmp
cld
mov
lods
adc
add
test
jmp
mov
cmp
sub
xchg
or
aas
sti
inc
test
pop
mull
and
pop
cmpsl
cmp
scas
pmulhw
fildll
mov
lret
nop
inc
mov
push
icebp
inc
jno
fs
or
dec
and
sbb
add
adc
pop
pop
mov
mov
adc
jnp
add
fstl
jno
dec
out
dec
outsb
mov
xorb
and
adc
adc
mov
sub
sub
scas
xchg
and
pop
sub
fimuls
mov
dec
sub
add
push
inc
pop
repnz
xor
mov
enter
cmc
es
fistps
adc
cmp
jo
nop
cmp
aaa
dec
enter
sub
xchg
cwtl
or
movb
pop
or
mov
mov
adc
rcll
imul
andb
dec
and
dec
test
outsb
push
push
jne
or
shlb
add
test
js
test
imul
popf
jmp
xor
add
push
adc
and
les
add
xchg
dec
push
xchg
fdivrp
add
sbb
iret
faddl
stc
dec
xor
sub
pusha
or
fsubrs
add
pushl
fmul
sbb
shrl
inc
out
xor
cmp
and
xchg
or
xchg
sbb
enter
test
fbstp
lds
push
add
xor
add
add
shl
mov
sub
ret
push
mov
jo
loop
sbb
loope
mov
pop
sub
leave
sbb
js
or
push
adc
mov
cmp
rolb
sbb
mov
mov
std
inc
adc
dec
push
cmp
adc
repz
adc
add
or
add
and
or
jmp
mov
add
inc
push
add
test
add
rol
mov
loope
dec
std
add
shlb
sub
add
push
test
jmp
loop
lods
add
add
fsubl
les
adc
cltd
mov
sbb
push
jno
addl
jl
add
call
push
sub
sbb
mov
test
cmp
adc
inc
add
cltd
sbb
inc
inc
xor
jno
sbbb
and
stc
fisubrl
inc
or
ss
repz
jo
add
cmp
inc
xor
or
add
daa
push
dec
aaa
loopne
andl
int
and
xchg
pop
sub
push
and
leave
sub
sbb
pop
push
push
movsl
test
adc
sbb
pushl
popa
add
mov
jns
jg
loop
cmp
addr16
add
shlb
push
or
cmpl
jns
and
add
or
sbb
add
fsubrl
mov
add
push
push
mov
jge
xorb
mov
inc
pop
mov
cmp
sbb
movsl
mov
mov
lea
jmp
inc
and
stos
or
jnp
adc
mov
sub
inc
iret
sub
mov
jle
xchg
dec
adc
mov
jmp
adc
cmpl
fs
imul
lea
arpl
or
push
leave
or
mov
test
or
out
push
lods
add
add
pop
outsl
rolb
pop
call
add
add
adc
test
rcrl
pushf
or
xor
or
fimuls
rcrb
sbb
mov
into
sarl
pop
cmp
lret
xor
xchg
add
jmp
push
mov
push
inc
lds
and
push
add
pop
or
mov
mov
cli
add
pop
jmp
test
jb
cmp
push
and
add
mov
mov
or
pop
inc
jne
jp
xchg
add
or
mov
sub
cli
sub
or
movb
push
enter
iret
mov
cltd
or
adc
aas
xor
inc
jbe
repnz
cmp
sbb
pop
xor
xchg
xchg
push
adc
lret
xchg
fs
dec
or
or
add
pop
mov
push
jbe
clc
and
enter
dec
xor
and
inc
stc
pushl
mov
add
push
jmp
mov
jbe
test
push
sbb
xchg
and
ret
dec
or
xchg
jmp
pop
pop
pop
add
leave
ret
rcrl
adc
or
push
inc
pop
call
push
notl
add
mov
add
and
and
jg
push
ret
test
mov
inc
das
pushl
nop
sub
pop
xchg
in
xor
out
adc
xchg
in
in
pop
add
adc
out
adc
ss
es
jg
and
lods
mov
or
out
mov
inc
inc
test
out
or
shrb
dec
pop
pop
push
ud2
mov
popl
push
testb
cmp
add
ja
out
add
test
jg
mov
pop
xchg
xchg
or
fucom
cs
jbe
fstps
add
sti
imul
repz
or
mov
repnz
lcall
mov
add
jnp
xchg
mov
pop
out
sub
jno
call
jl
ja
xor
sbb
pop
inc
pop
xor
das
xor
leave
jbe
push
sahf
and
or
add
fsubrl
ljmp
je
pop
popf
mov
mov
lret
xor
inc
sub
pop
popf
mov
mov
mov
popf
mov
adc
pop
lcall
pusha
mov
sub
pop
jb
fidivl
adc
cmp
rorb
sbbb
sbb
fstpl
rep
cld
mov
jae
js
pop
push
ret
and
fdivl
call
loopne
or
and
sti
mov
sub
pop
inc
fsubrs
or
cwtl
add
mov
mov
hlt
cmove
mov
mov
sbb
or
xor
imul
mov
inc
bound
fildl
pop
mov
shl
addr16
fstpl
pop
arpl
xor
cmc
and
xor
inc
jne
add
mov
push
shrb
adc
loop
clc
mov
xor
mov
inc
sub
pusha
stc
mov
jno
push
icebp
lock
jb
pushf
and
sbb
sbbb
add
sub
call
mov
xor
repnz
mov
and
inc
sbb
add
push
push
pop
pop
xchg
inc
nop
call
out
les
push
dec
mov
and
add
notb
call
mov
ret
pusha
adc
adc
mov
ficoms
add
mov
test
cmp
fwait
clc
lahf
push
popa
rol
cltd
jns
or
dec
lret
call
lahf
decl
test
xchg
push
jne
out
mov
test
cli
pop
stos
mov
rolb
mov
cmp
rorl
add
and
dec
push
call
mov
xchg
add
inc
ljmp
dec
adc
shl
cmp
out
xor
cmpsb
leave
ret
push
cmp
jecxz
pop
mov
movsb
mov
mov
addb
in
das
dec
bound
add
xchg
push
cli
sbb
loopne
mov
add
pop
dec
addb
pusha
imull
add
int
cs
add
and
jmp
mov
pop
arpl
scas
xor
sti
mov
ja
enter
fldl
gs
orb
mov
mov
push
stc
sub
and
sbb
stc
and
jecxz
xor
adc
cmpl
add
mov
rcrb
dec
call
and
mov
sub
adc
and
int
test
test
je
repnz
inc
sbb
mov
and
insl
or
add
inc
rolb
mov
inc
jmp
and
mov
adc
sub
std
sbb
out
fs
add
enter
pop
arpl
xchg
pop
mov
sbb
jmp
cwtl
lahf
or
testl
add
jnp
in
cmp
cmp
and
test
sbb
inc
das
and
lock
ret
outsb
and
fildl
cmpsb
xchg
push
inc
add
add
and
jmp
xchg
cwtl
xchg
sbb
jns
mov
pusha
ret
cwtl
rol
sbbl
ficoms
cmpsl
or
add
pop
gs
call
cmp
pop
popf
mov
adc
bound
pushf
cmc
mov
call
push
ret
pop
add
lods
leave
popa
mov
mov
xor
into
cs
mov
xor
cli
adc
sub
lods
xchg
add
inc
push
dec
inc
push
es
push
pop
inc
adc
adc
add
mov
jge
imul
les
inc
in
testb
jle
js
cmp
inc
dec
pusha
pop
sub
dec
in
ljmp
xchg
mov
shl
repnz
add
jns
mov
jbe
pop
cmpsl
mov
mov
addr16
repz
cwtl
movsl
dec
in
pusha
add
cld
sbb
mov
jmp
mov
mov
rcrl
sbb
sbb
in
loope
rclb
add
fildll
push
inc
inc
scas
mov
and
adc
ret
pop
add
mov
mulb
add
jne
sub
xchg
xor
cmpb
mov
add
inc
repz
scas
xor
sbb
and
or
cmp
dec
pop
cld
adc
mov
hlt
add
popa
lock
mov
lea
data16
pop
mov
dec
push
xchg
xchg
mov
sti
das
or
or
xor
jmp
jne
jno
push
addr16
mov
or
adc
cmp
mov
daa
sbb
mov
or
das
mov
sbbb
xchg
dec
pop
nop
push
inc
in
lock
adcb
inc
xchg
mov
rol
repz
inc
mov
or
mov
shrb
sbb
push
fmul
clc
inc
push
cmp
mov
mov
inc
mov
push
mov
out
push
mov
add
mov
sti
inc
fmull
rcrl
push
lock
ja
jge
enter
outsb
add
inc
push
cltd
push
xor
cmp
push
mov
adc
loop
call
mov
les
outsb
sub
aas
push
and
add
lret
stc
cmp
in
adc
int3
loopne
shl
adc
mov
sbb
fistps
pop
cmp
icebp
sbb
mov
mov
sarb
pop
xor
data16
jmp
xchg
hlt
cs
movsb
in
pusha
bnd
repz
dec
movsl
sbb
test
les
jno
outsb
hlt
xchg
mov
in
xchg
add
xor
pop
sbb
sbb
js
jb
jecxz
jl
js
gs
sub
fiadds
sub
pop
in
movups
lods
mov
adcl
cmp
push
add
test
lcall
loop
nop
jmp
sub
mov
ret
lock
ret
shl
sahf
push
pop
dec
push
mov
push
arpl
mov
in
or
mov
loop
add
scas
pop
les
xor
das
add
test
mov
xor
xor
add
fildll
call
mov
sete
and
sub
leave
test
lcall
dec
data16
shl
in
lahf
hlt
lds
imul
xchg
hlt
je
sbb
xchg
push
sub
std
xorb
mov
loopne
insl
imul
fsubrl
inc
and
push
and
repz
test
fidivs
jmp
and
aam
push
xchg
test
and
pusha
gs
xor
xor
mov
ds
push
push
inc
sbb
xorl
jns
xor
mov
add
sub
jmp
mov
out
push
jne
add
mov
cli
ficoms
add
es
dec
mov
or
out
lea
cmpb
inc
add
add
and
add
lret
push
jo
in
mov
in
dec
in
xchg
add
sti
mov
aas
into
andb
fs
sub
lds
push
xor
movsb
jnp
test
push
icebp
mov
mov
fs
adc
push
negl
push
pusha
hlt
cwtl
pop
dec
lret
push
sarb
mov
rcr
adc
mov
jl
mov
jg
movsb
sbb
sbb
dec
adc
sbb
pop
cmc
dec
sub
aad
mov
mov
int
cmp
push
or
sbb
rcll
ljmp
fildl
push
xchg
or
ss
stos
xchg
scas
enter
aam
rcl
mov
or
aaa
and
add
dec
flds
and
cmp
mov
mov
int
pop
stc
sarb
add
mov
jno
add
mov
mov
add
insb
jb
jbe
pop
and
and
scas
movaps
add
aam
and
mov
in
mov
pop
dec
pop
adc
xchg
mov
jo
or
fnstenv
add
push
movb
inc
orb
and
mov
jo
lret
mov
aam
sub
insl
sti
in
add
out
in
call
testl
cmpsb
lcall
lds
insl
add
sub
add
mov
les
testb
add
rcl
lds
jo
dec
loope
inc
pop
jp
cmp
push
add
in
es
les
shrb
mov
push
jnp
and
xor
cwtl
cmpb
lea
imul
mov
mov
nop
adc
push
push
fnstcw
repz
cmp
loop
into
push
mov
jo
mov
add
push
dec
outsl
or
in
sbb
pop
add
sahf
add
add
js
lahf
enter
and
sbb
pop
sub
dec
mov
jecxz
mov
cwtl
loopne
pushf
pop
add
fs
imul
sbb
inc
pop
test
js
mov
xorl
imulb
fmul
sub
add
or
xchg
pusha
arpl
add
sbb
aas
mov
dec
fildl
cmpl
mov
mov
aas
push
xchg
mov
imul
decb
sti
sbb
and
pop
mov
ja
pusha
mov
leave
push
add
les
sub
mov
xchg
loop
int
jle
add
sbb
add
faddp
sbb
outsb
add
mov
dec
testb
cmc
push
mov
sbb
pop
aaa
mov
testb
pusha
test
in
sbb
enter
add
pusha
popw
add
pushf
mov
sbb
pop
rclb
repnz
loopne
roll
sub
pop
push
push
mov
lock
xchg
sbb
in
jb
dec
rorl
inc
cmp
pop
popa
push
aaa
insb
dec
add
mov
mov
outsb
sbb
mov
rcr
or
add
out
and
xchg
pushf
push
adc
in
imul
ret
insl
push
add
cmp
pop
leave
sbb
clc
sar
into
jg
push
rol
adc
lea
pop
xchg
xchg
lock
cmc
add
outsl
add
pusha
fidivs
mov
push
mov
jnp
jmp
and
mov
sbb
cmp
lods
add
into
dec
inc
push
loope
sarb
add
xchg
xor
sahf
fsubrl
rolb
sub
jmp
pop
push
xor
sub
inc
add
lcall
lods
mov
add
sub
loop
cwtl
pop
dec
repnz
add
jge
into
cmc
cli
add
insb
int3
or
inc
xchg
das
add
lahf
lret
rcrl
sub
sbb
fsts
push
dec
je
jecxz
dec
mov
push
fisubrl
jbe
es
xor
adc
ss
rclb
jge
mov
pop
aad
das
adc
mov
add
lods
movsl
add
or
dec
sub
lret
pusha
aad
sbb
or
sbbb
jne
add
cmpsb
mov
insl
xchg
shrl
add
adc
jno
gs
add
decl
lahf
out
or
jmp
fidivrs
adc
sub
lea
dec
lock
sar
inc
cli
dec
jo
adc
mov
insb
mov
mov
mov
jecxz
jmp
add
cli
out
clc
les
nop
mov
mov
mov
jp
push
cmpsb
test
jecxz
sub
adc
enter
fistpl
icebp
aam
pusha
in
insb
jmp
dec
hlt
adc
sub
or
push
push
incb
jo
movl
add
das
or
sub
shl
incb
xor
push
pusha
xlat
pushw
mov
repnz
and
add
pop
or
fsubrs
movsl
shrl
fadds
jp
lods
inc
mov
adc
dec
pop
mov
dec
add
stc
and
add
xchg
mov
adc
leave
jno
mov
mov
loop
mov
out
movsb
dec
ja
pop
iret
jae
out
or
inc
cltd
jl
insl
rol
dec
add
aad
sbb
adc
cmp
add
xchg
add
lock
fs
pop
add
rorb
test
jge
ficoml
hlt
stc
add
pop
or
rcrb
xchg
jbe
push
ss
and
mov
cmp
out
pop
jecxz
scas
loopne
add
jl
mov
pop
push
lds
jne
in
mov
pop
push
clc
add
add
cmp
rcll
mov
cmp
jo
push
dec
xchg
or
es
cmc
rolb
add
dec
push
and
add
or
cmp
into
push
stc
push
or
xlat
push
filds
fdivr
add
test
int
test
sbb
icebp
cltd
sbb
je
std
adc
jo
jae
mov
fcomps
cmp
add
pop
dec
test
sbb
push
orb
cwtl
cmp
cmp
pop
fdivrs
call
pushf
add
aad
mov
add
push
daa
int3
dec
add
scas
mov
dec
insl
cmp
ret
test
push
mov
push
mov
orb
fdivrs
dec
dec
add
jb
or
add
mov
add
iret
jl
jp
add
idiv
xor
nop
or
mov
pop
scas
aad
push
add
or
subb
and
add
sub
add
scas
pop
subb
inc
sub
cs
xor
push
lret
inc
int
add
or
sbbl
in
test
sub
mov
push
add
adc
cmp
or
mov
adc
dec
pop
inc
add
sahf
cmp
pop
xchg
mov
pop
mov
les
sbb
insb
outsb
and
ljmp
push
ja
mov
add
or
add
add
lock
mov
lahf
dec
add
int3
jns
movsl
push
sbb
popf
fdivrs
lods
pop
aaa
int3
lcall
add
or
outsl
add
enter
jecxz
mov
sbb
and
out
cmp
mov
mov
pusha
in
repnz
insl
xor
jns
cli
out
outsb
dec
mov
cs
xchg
jo
je
adc
scas
aad
add
dec
inc
insl
sub
movsb
add
scas
lods
sbb
decb
scas
and
fsubrs
add
inc
icebp
sbb
jae
fsubp
push
pop
dec
jno
add
mov
test
bswap
mov
inc
or
shr
loopne
in
test
adc
add
mov
lret
jae
subl
cmp
into
scas
mov
add
aad
int3
lods
mov
and
outsb
push
arpl
les
ja
mov
sahf
and
sbb
sti
fistps
sub
mov
pop
add
mov
sub
sub
sbb
sbb
repz
ret
pop
push
sub
cmp
mov
sub
lods
fcoml
fists
jo
push
cwtl
pusha
cmp
mov
xchg
and
call
pop
add
xchg
orl
xor
sbb
pop
xor
aas
js
sbb
sbbb
xchg
hlt
xchg
jnp
add
in
aaa
mov
inc
cmp
add
sbb
mov
xor
sti
out
mov
xchg
das
rorl
loop
sub
add
xor
or
nop
movhps
jo
out
loop
in
add
pop
clc
sti
jb
mov
cmp
gs
xchg
sbb
add
dec
inc
sub
lahf
int
cmp
sbb
aad
ja
add
lcall
add
sbb
jns
lods
xchg
inc
js
mov
xlat
lods
pop
loope
mov
js
pop
mov
cmc
sbb
jnp
mov
loopne
insl
stc
loop
inc
xchg
cmp
into
cmpl
movl
divb
lahf
ret
mov
pop
out
enter
add
pushf
pusha
fstpt
add
rcll
add
out
rcrb
enter
push
fucomip
mov
movsl
mov
repz
jns
mov
cmpsb
rcrb
mov
or
jmp
add
lahf
sarl
cmp
mov
or
js
lods
add
stos
mov
and
adc
into
and
scas
jl
addl
sub
xor
xor
mov
testl
test
rolb
andl
mov
aaa
loope
loop
xchg
jae
and
xor
mov
jmp
cmp
imul
sub
add
imul
mov
or
add
mov
outsl
push
in
push
test
mov
cmp
add
xorps
rcr
fistpll
je
inc
xor
test
pop
add
push
jmp
sub
lahf
adc
jge
negb
xor
sub
addr16
add
inc
xor
cmp
movsl
sbb
cmp
sub
fwait
add
adc
jne
mov
add
push
fxch
add
stc
in
rclb
jno
add
iret
in
movb
and
aad
push
loopne
pop
jg
or
jae
cmp
jne
or
sub
and
and
lds
call
mov
mov
and
cmp
adcl
push
incb
fisubs
sarb
fcoms
aaa
cmp
xchg
aam
jp
rorb
pop
in
xor
movsb
sbb
add
push
orl
xor
and
pop
mov
out
leave
ffree
mov
mov
cmp
in
mov
ret
pop
arpl
mov
in
rcrl
add
sahf
ret
jecxz
lret
imul
inc
fsubrs
out
inc
and
cmp
pop
or
pop
add
cmp
xchg
mov
loopne
sub
lods
loopne
aam
in
ja
incb
rclb
enter
jp
into
lret
das
sub
mov
jg
cld
sub
call
xchg
imul
mov
adcl
call
ficoms
and
mov
cmpsb
bound
and
add
add
dec
sub
aam
sub
inc
adc
ja
arpl
cmc
jo
scas
or
jmp
ljmp
das
in
add
xchg
int3
add
add
sarb
jb
push
dec
jae
inc
mov
and
pop
pop
xchg
ret
sahf
add
lret
mov
mov
add
mov
mov
clc
pop
mov
add
inc
out
pop
and
xchg
arpl
jmp
pop
mov
stos
rcrl
or
fcmovne
int
add
bound
jmp
in
int3
push
mov
xchg
in
push
mov
dec
mov
mov
xchg
jge
arpl
inc
pushf
jnp
pushf
sub
pop
hlt
push
mov
fcomps
xchg
mov
xor
mov
mov
out
and
lahf
test
movsl
xchg
mov
mov
jo
sbb
out
and
insl
or
in
and
add
stc
lods
enter
popf
push
add
aaa
xor
sub
push
jb
in
mov
mov
leave
mov
and
pop
xchg
xchg
pusha
aam
test
cs
add
mov
dec
orl
mov
add
xor
xchg
scas
insl
shrb
adc
or
push
sbb
ljmp
push
xor
dec
cld
add
inc
jbe
rcr
add
nop
jb
scas
jge
out
loopne
adc
jno
or
xlat
jl
mov
icebp
add
out
out
and
je
adc
mov
call
dec
js
inc
mov
inc
pop
xchg
add
addr16
mov
cmpsl
cmp
icebp
add
cs
or
xchg
push
cmpsb
scas
mov
push
sub
mov
and
mov
das
xor
shll
push
jmp
fwait
dec
sub
or
add
push
cs
imul
aam
shlb
or
lret
fiadds
rolb
xchg
add
or
fmull
and
xor
out
rol
pop
add
test
fstp
dec
in
lret
mov
jnp
add
stc
sbb
test
fiadds
fstp
mov
mull
and
or
push
movsl
lods
dec
sbb
icebp
mov
scas
pop
std
call
sub
cld
cmp
fcomp
push
and
sub
hlt
inc
cltd
les
cmp
pop
inc
sbb
add
adc
test
dec
push
xchg
insl
sub
in
repz
inc
mov
dec
push
fdivrl
adc
add
sbb
add
pusha
jl
or
fs
add
lret
push
stc
mov
clc
outsb
sti
lock
jae
or
cli
add
movsl
push
mov
add
sub
popf
lahf
xchg
cmpl
repnz
popf
sub
add
stc
inc
icebp
in
jo
pusha
add
inc
std
rcl
add
fwait
xchg
mov
add
pop
cmc
cmp
icebp
ret
cwtl
xchg
fwait
dec
enter
dec
jecxz
dec
add
fs
mov
inc
fbld
out
mov
add
int
clc
cmc
add
lcall
insb
or
or
out
add
shlb
mov
fistpl
push
cmpsl
popa
lcall
fldenv
movsb
jle
cs
adc
cmp
add
test
dec
outsl
pop
sub
nop
or
loopne
lret
lock
add
adcl
fldl2e
scas
mov
stos
jp
cmp
pop
sbbb
loop
mov
aas
mov
or
dec
fiadds
ja
leave
xchg
not
sbb
sub
hlt
cmp
dec
scas
ljmp
xor
or
loope
and
push
pusha
add
push
movsb
jbe
js
std
testb
iret
mov
sub
add
pop
xor
push
test
mov
add
cld
outsl
dec
mov
lods
add
adc
ret
sahf
add
xchg
cmp
rolb
jg
cli
xor
mov
xchg
xchg
pop
mov
testl
mov
add
mov
xchg
shlb
adc
stc
popa
add
mov
add
popl
jl
pop
push
arpl
xor
push
and
xchg
jno
in
add
subl
dec
push
iret
pop
mov
cwtl
mov
les
mov
std
loop
add
inc
cld
push
bound
add
mov
es
in
aam
jp
addl
aas
mov
xchg
lods
ret
push
std
push
sub
add
push
cli
mov
js
add
repnz
sub
pop
sysret
push
and
daa
add
or
xorb
push
and
inc
add
movsb
jb
push
into
outsb
popf
sub
push
dec
loopne
or
jns
sti
xorb
mov
add
call
mov
add
dec
mov
push
dec
mov
sub
jae
add
int3
je
push
add
and
lods
pop
cmp
cwtl
add
lds
clc
add
mov
push
xor
testb
stc
rolb
bound
neg
test
loop
mov
jno
sub
cmc
jle
mov
jb
mov
add
sub
pusha
jno
data16
ds
pop
dec
lret
add
movsl
popf
mov
daa
jno
cmp
lds
rcrl
or
push
add
ret
inc
add
call
xchg
loopne
sbb
cmp
or
das
or
movsb
enter
ret
out
ja
subb
add
popa
repz
pusha
clc
xchg
sub
aas
add
xchg
aaa
cmc
lock
testb
lods
pop
outsl
inc
add
les
rolb
jo
sbb
cmpsl
adc
xor
insb
add
leave
aaa
ficoml
test
sarl
and
addr16
clc
orb
stc
add
mov
mov
int
xor
xlat
adc
add
dec
call
or
push
add
sbb
xchg
adc
add
out
mov
push
loopne
jmp
dec
add
pop
scas
icebp
adcl
dec
cs
sbb
inc
jae
add
mov
push
daa
mov
cmp
add
push
mov
inc
or
test
dec
pop
cmp
pusha
pop
pop
lret
add
push
adc
xor
add
cmp
inc
iret
mov
push
rcrb
daa
add
xchg
loopne
popf
add
push
xor
rorb
sbb
inc
outsb
adc
dec
xchg
stos
int3
add
into
dec
call
ret
pop
add
cmpsl
xor
pop
test
fdivrl
xor
loope
dec
inc
lea
push
in
add
data16
mov
add
cmp
fs
icebp
mov
add
push
pop
push
add
sub
call
daa
cwtl
fcoms
mov
or
mov
xchg
imulb
and
jns
clc
push
add
mov
repnz
pop
imul
into
repnz
sti
and
loop
inc
fidivs
and
orb
enter
rcrl
add
or
add
sub
movsb
pop
xor
aas
push
mov
ror
pop
and
ja
out
into
call
xchg
in
add
inc
sbb
fadds
inc
lea
frstor
jb
or
dec
sbb
pusha
outsb
mov
xor
add
xchg
nop
imul
das
stos
out
sub
jne
pop
es
push
cmpsl
add
fistps
rclb
sbb
dec
arpl
inc
adc
nop
xor
adc
jo
call
iret
add
mov
inc
lret
mov
les
or
mov
push
xor
xorb
outsb
stc
pop
jl
mov
xor
push
rolb
adc
jns
mov
pop
repz
mov
std
adc
push
ss
shrb
or
divl
lcall
arpl
mov
clc
sbb
and
mov
test
xor
lret
jmp
in
pusha
mov
sbb
lcall
and
xchg
ret
xchg
lahf
cld
push
add
hlt
sbb
clc
xchg
sub
push
xchg
lds
jno
push
adc
sub
hlt
imul
xor
xor
js
sbb
and
jae
xor
add
popa
stos
stc
inc
loopne
cltd
in
sbbl
pop
push
pushf
jbe
mulb
shl
pop
mov
call
dec
push
cmpsb
sub
js
xor
xchg
mov
jb
mov
adc
sub
push
mov
enter
pop
daa
jmp
mov
ret
sbb
mov
sub
or
and
inc
mov
in
jo
mov
stos
cmp
sbb
test
sbb
push
mov
and
out
add
loope
clc
mov
stos
add
lea
repz
sub
and
push
daa
ret
cltd
push
orl
scas
pop
sbb
push
xchg
nop
xchg
js
outsb
cmp
data16
sbbl
lock
and
in
add
fisttpll
jg
rolb
adc
lods
sbb
dec
mov
jnp
es
inc
sbb
and
and
cmp
xchg
gs
mov
jo
jl
lds
add
pusha
imul
jno
add
jl
adc
sti
jae
pusha
bound
pop
push
ja
jl
in
loop
ret
pop
pop
std
mov
in
movsb
mov
add
push
adc
cltd
ja
jne
dec
test
add
xor
cmp
les
add
fiaddl
cmp
mov
add
add
adc
ret
jns
add
call
push
dec
add
adc
sub
add
mov
jno
jmp
and
adc
push
pusha
jmp
fwait
cmp
cmp
int
or
jbe,pn
pop
xchg
and
add
mov
add
inc
arpl
shrb
add
mov
enter
jg
mov
icebp
insl
pop
pop
sub
inc
dec
dec
xor
push
outsb
xor
stos
sbb
cwtl
cmpb
push
adc
inc
sub
ret
js
add
pop
inc
je
and
add
mov
adc
add
add
mov
adc
movsb
subb
call
lock
adc
or
inc
fs
or
je
add
ljmp
outsl
pop
or
pop
or
cld
xchg
fidivrl
or
dec
hlt
jl
je
xchg
add
call
jnp
and
inc
or
jns
call
lds
sub
or
pop
fsub
push
cld
adc
hlt
pop
inc
mov
enter
mov
or
push
pop
or
testl
shlb
insb
jmp
cmp
cwtl
mov
inc
jo
xlat
or
popa
jmp
mov
jmp
dec
out
sbb
inc
sub
in
adc
mov
xchg
xor
mov
ret
arpl
repz
sbb
sbb
inc
cld
mov
sbb
push
add
sub
adc
mov
push
mov
fists
push
sbb
dec
shlb
xchg
sub
sti
cltd
add
xor
sbb
inc
mov
push
sub
mov
pushf
inc
arpl
push
cmp
das
dec
add
mov
leave
pusha
pop
cmp
inc
aas
sbb
or
push
push
mov
fdivrs
push
inc
loopne
shll
repnz
pop
or
inc
enter
sbb
push
cmc
mov
outsb
and
icebp
adc
mov
push
shl
sbbl
cmp
sub
pusha
rcr
push
or
test
arpl
clc
jb
mov
or
jg
arpl
pop
pop
orb
cmp
pop
push
je
cmp
je
sbb
jp
sbb
cs
and
add
gs
dec
fmull
dec
jo
stos
adc
sub
andb
ret
movsb
sub
mov
rorl
ror
cmp
nop
int3
push
ds
push
xor
inc
dec
in
bound
rorb
mov
mov
rolb
mov
ja
test
push
cmp
andb
sub
stos
add
in
fists
cmp
mov
sub
mov
pop
clc
push
sbb
mov
add
xchg
mov
jno
jns
sbb
out
cmc
push
mov
cmpl
add
call
movsb
data16
sbb
dec
adc
mov
xor
or
fs
mov
mov
cld
shlb
lock
jno
hlt
mov
les
mov
clc
pushf
lret
imul
es
int
mov
cwtl
call
cmp
mov
mov
sbb
into
push
pop
jmp
clc
scas
or
sbb
xchg
clc
xchg
mov
in
push
loopne
xrelease
and
xchg
cli
cmp
lods
lahf
cld
and
jp
fldl
inc
cmc
and
arpl
movsl
jbe
je
sbb
loopne
pop
jae
ret
cmc
jnp
push
call
lock
add
mov
mov
sub
sbb
push
dec
adc
pop
adc
das
jne
idivl
sub
test
popa
xchg
add
decb
push
cmp
mov
call
movsl
enter
mov
call
clc
dec
and
sbbl
push
fs
push
gs
or
xor
sahf
add
jge
xchg
enter
cmp
outsb
movl
sahf
jg
adc
lods
ljmp
inc
xorl
data16
into
mov
cmp
shrb
dec
mov
pop
push
push
inc
ljmp
test
cltd
add
mov
jge
shrb
push
sub
pop
or
mov
add
sti
rolb
fs
inc
cltd
adc
data16
pop
add
sbb
jge
adc
xchg
mov
cld
sahf
sub
inc
lock
or
dec
repnz
imull
xchg
add
dec
push
sub
shlb
pop
sbb
push
lds
xor
pop
adc
hlt
adc
pop
mov
xlat
repz
pop
cs
jb
rorb
xchg
scas
jl
bound
enter
repz
cwtl
aas
movsb
mov
js
add
jle
fisubl
inc
add
push
jo
jmp
cmp
ja
rorl
or
add
cmp
outsl
mov
aas
je
lret
mov
ret
and
ds
das
fisubs
pop
xor
in
add
test
pop
xor
data16
loop
clc
add
push
sarl
mov
xor
ja
hlt
xchg
adc
sbb
add
in
pop
inc
push
pop
repnz
mov
add
stos
cmpsl
xchg
push
cmc
mov
or
fs
mov
xchg
int3
rclb
sub
adc
jns
lods
xor
hlt
pop
xor
jp
incb
and
add
cmp
std
mov
mov
mov
pop
pop
hlt
outsl
inc
mov
cwtl
or
and
and
pop
adc
dec
lock
nop
or
cmpsb
and
repz
lods
call
mov
data16
jbe
or
mov
add
mov
mov
dec
mov
pushf
mov
pushf
hlt
or
enter
push
inc
icebp
add
xchg
pop
sbb
test
hlt
jl
out
add
call
add
pop
cmp
sbbl
addr16
arpl
mov
jg
enter
pop
jp
mov
lret
push
mov
or
gs
imul
test
in
pop
cwtl
sti
test
dec
add
adc
add
cmc
jp
adc
add
flds
inc
mov
nop
cmp
mov
rorl
pop
in
add
xor
loopne
clc
in
add
pop
fs
pop
cld
fwait
sbbb
xor
icebp
cmp
add
dec
pusha
test
outsb
mov
xchg
pushf
arpl
rol
cmp
ror
jo
dec
adc
xor
loopne
in
orb
mov
mov
popf
mov
ja
xor
push
test
mull
mov
rolb
sub
ljmp
inc
mov
xor
adc
outsl
bound
fs
jb
add
pop
js
adc
les
cld
mulb
jb
mov
pushf
mov
incb
in
fbld
dec
hlt
add
adc
push
arpl
scas
mov
addr16
mulb
dec
pop
rcrb
cmp
leave
adc
cltd
fimuls
into
add
sbb
mov
mov
pop
ds
adcb
or
adc
and
inc
pushf
decb
sub
test
cmp
adc
es
push
pop
sub
andb
scas
pop
dec
outsl
addb
add
add
sub
ljmp
inc
and
jecxz
mov
xor
dec
push
aas
lret
je
sahf
jnp
mov
sbb
loope
sub
push
xor
add
shr
daa
xor
in
pop
jmp
es
mov
jge
jp
pop
mov
push
insb
cmp
xor
adc
clc
xchg
jl
in
stos
outsl
loope
das
out
add
sti
mov
sahf
loopne
push
pop
enter
arpl
inc
adc
jg
push
aaa
jmp
mov
pushf
or
sbb
enter
leave
inc
pop
or
inc
pushf
jbe
aam
sub
or
mov
in
sub
in
add
mov
sbb
xor
inc
mov
adc
jnp
add
sub
jecxz
adc
push
cmp
sbbb
dec
fmuls
cmpsb
mov
pop
fsubrl
test
cmp
hlt
loopne
mov
or
mov
add
and
fadd
add
pop
icebp
pop
movsl
es
arpl
fbld
rcr
out
test
insb
cmp
testl
xchg
das
pop
fisttpll
sbb
call
jbe
icebp
pop
jmp
outsl
or
enter
ja
adc
pop
mov
stos
out
andb
push
xor
add
in
insl
sti
test
mov
icebp
andb
or
call
lods
orb
insb
jl
addb
and
sub
test
dec
inc
insb
sub
push
or
into
mov
sbb
push
ja
cmpl
loop
add
sub
cmc
aam
sar
jle
aam
mov
outsl
test
cmpl
imul
xchg
rolb
add
mov
pop
cmp
and
jle
add
inc
adc
or
je
gs
add
ljmp
and
pop
fsts
sbb
notb
outsl
mov
pop
dec
sub
pop
pop
dec
das
inc
negl
fmull
mov
ret
test
clc
adc
jl
or
je
add
sub
movsb
sub
mov
push
stc
cmp
push
mov
sbbl
jno,pt
xchg
leave
jb
cwtl
mov
add
stc
jns
loopne
xchg
mov
js
les
xor
hlt
jo
mov
xor
mov
xchg
mov
je
in
mov
pop
xchg
add
inc
fucomi
dec
loop
movsb
dec
filds
push
cmp
xchg
adc
pop
push
and
test
pusha
adc
jae
sub
les
mov
dec
bound
pop
jo
nop
cwtl
xor
jg
add
nop
sbb
inc
pop
scas
rcrb
call
std
loope
sbb
sub
xchg
xchg
lods
add
inc
mov
or
and
mov
sti
xchg
xlat
inc
mov
xor
jg
cltd
je
call
cmp
orb
push
ljmp
add
pop
and
mov
popa
movsb
mov
add
pop
pop
add
mov
test
adc
add
push
aaa
pop
pop
jp
fcomps
add
xchg
mov
ret
in
add
lds
repnz
shrl
adc
inc
testl
jecxz
dec
iret
pusha
gs
sbbl
leave
inc
nop
add
outsl
loop
lcall
loopne
pop
add
inc
jo
dec
or
or
std
pushf
movsb
xchg
aam
add
sub
cmp
inc
clc
imul
jnp
xchg
in
push
in
cmp
stc
fistpll
cmp
sbb
and
cltd
in
std
stc
sub
xchg
pop
cmpsb
mov
mov
cmp
add
fcomps
outsl
pop
loopne
fs
mov
stc
xor
sbb
mov
shrb
add
cmovns
rcl
xchg
mov
jo
or
shrl
xchg
into
lods
mov
xchg
sarb
push
add
mov
cwtl
push
push
dec
adc
shr
add
add
or
std
test
mov
dec
fsubr
xchg
dec
dec
popf
add
clc
mov
lea
stc
inc
pop
out
sub
sbb
ret
jbe
push
dec
ret
xchg
in
inc
mov
jle
or
cmpsb
out
pop
inc
mov
jmp
push
pop
sbb
mov
sahf
sub
shll
add
xchg
mov
push
les
push
orb
test
or
clc
xchg
clc
mov
clc
les
repnz
sbbb
mov
or
mov
cmp
xor
jmp
ret
adc
mov
xchg
adc
ljmp
xor
lea
sarb
cld
sti
call
xor
mov
gs
orb
mov
jae
jbe
dec
add
sbb
sti
or
cmp
or
jae
push
cwtl
jp
repnz
and
arpl
sub
das
mov
pop
rorl
test
insb
pop
fdivrl
sbb
testb
into
data16
mov
inc
pop
jbe
push
fisubl
es
sti
push
fidivs
or
or
push
jmp
dec
mov
add
mov
fdivrl
ljmp
sub
movsl
call
xlat
push
push
pop
gs
insb
jno
ror
je
xor
push
aam
adc
cmp
or
clc
mov
imul
loopne
add
or
dec
inc
xor
je
push
cs
sub
cmp
xorl
mov
xor
repz
sub
or
mov
pop
dec
test
testl
and
ja
dec
cs
or
dec
push
loopne
repz
std
jg
push
dec
popf
test
jb
mov
je
popl
jo
call
sub
xchg
das
sbb
call
sbbb
add
leave
jge
add
mov
mov
and
jle
inc
gs
repz
add
inc
faddp
sub
mov
mov
sbb
xorl
aad
add
shr
mov
rcl
les
es
std
ljmp
push
and
cmc
ret
adc
mov
jg,pt
add
cltd
in
es
cli
out
call
or
jbe
stos
xor
jno
add
addr16
daa
lret
hlt
nop
movsb
push
cwtl
pop
sbb
mov
movl
loopne
add
jbe
int
cmp
cmp
call
cmp
in
testl
call
imul
jne
nop
das
dec
push
cltd
adc
lods
les
pop
inc
adc
mov
mov
inc
fs
jmp
not
test
or
push
xor
cmp
jae
mov
call
je
jecxz
fsubr
test
push
out
cmp
and
cmp
das
and
andb
cmp
ds
loopne
lock
and
pushf
lock
mov
mov
pusha
out
fisttps
add
leave
mov
mov
out
movsb
adc
flds
ret
push
push
xchg
jmp
dec
idivb
pushf
sarl
scas
mov
adc
or
mov
add
dec
inc
pop
sub
ret
inc
push
nop
cmp
sub
xor
sbb
movsl
dec
loop
pop
push
pusha
pop
std
mov
psubb
dec
jmp
xchg
or
inc
loop
add
mov
and
lock
inc
out
mov
jg
pusha
test
add
xchg
inc
outsb
icebp
xchg
add
clc
roll
stos
lods
out
aam
inc
inc
cmc
pusha
cmpsl
mov
sub
outsl
or
adc
and
pop
inc
movsl
cmpl
xor
outsb
loopne
sub
outsl
mov
adc
push
pop
mov
pop
xor
cmp
pusha
cmp
cmc
addl
testl
daa
jmp
dec
shr
cmp
or
fadd
push
arpl
loopne
in
or
sbb
adc
imul
ror
in
push
mov
or
pop
and
cmp
push
jecxz
mov
ljmp
add
cmp
or
ss
in
add
jmp
cmp
adc
add
push
btr
cmc
mov
es
mov
cmp
xor
xchg
loopne
xchg
jmp
pop
mulb
call
push
int
in
pop
and
les
xor
iret
push
sbb
lock
imul
sti
dec
cli
call
rclb
and
nop
mov
mov
sbb
push
jae
sbb
mov
mov
xor
adc
dec
andl
push
add
std
faddl
push
push
inc
mov
add
sti
mov
pop
cmp
mov
sbbl
in
mov
clc
mov
out
gs
jmp
aam
cmpb
arpl
out
fmul
xor
outsb
or
and
jo
mov
and
cmp
push
pop
in
add
xchg
in
mov
js
add
lea
or
mov
inc
push
adc
pop
add
cmp
add
imul
jmp
pusha
enter
mov
out
imul
cmpl
add
mov
or
or
stc
xchg
icebp
mov
push
into
cmp
enter
and
cltd
sti
mov
add
mov
arpl
push
push
push
cmpsb
les
test
and
adc
fs
or
sub
or
xchg
adc
in
enter
mov
hlt
lahf
jp
and
xchg
andb
addb
cld
xor
cmpb
adc
add
push
out
out
add
aas
adc
mov
cmpb
lods
ret
in
das
push
hlt
sbb
mov
mov
shlb
inc
push
push
aaa
add
xor
lock
pop
mov
fs
jnp
jo
sbb
jmp
mov
add
mov
rclb
in
shlb
lds
rclb
cmpsb
lock
jnp
add
rolb
lds
in
test
pusha
aas
ljmp
sbb
push
fnstcw
cmpb
mov
ret
push
mov
xchg
add
sub
mov
daa
fiadds
jmp
and
add
arpl
enter
cmp
push
jns
sbb
or
jns
pop
lds
scas
pusha
fdivl
xchg
pop
mov
data16
mov
rorl
add
mov
xchg
add
push
and
shlb
enter
xchg
adc
xchg
push
pop
daa
add
aaa
push
rcl
pusha
pop
push
or
stos
mov
gs
pop
mov
push
pusha
enter
subb
pop
in
ret
xor
sub
inc
fidivrl
test
add
dec
inc
or
cwtl
pop
filds
pop
cmc
fstpt
bound
and
pushf
std
insl
jg
test
dec
dec
jge
call
dec
push
icebp
enter
adc
mov
xchg
orl
jo
loop
ret
movsl
icebp
rsqrtps
adc
mov
push
les
sbb
shld
fs
adc
dec
or
pop
xlat
push
movsl
das
inc
pop
les
mov
sub
test
popa
push
cs
out
or
daa
ljmp
pusha
mov
push
loope
mov
divb
pop
add
dec
jg
cld
pop
bound
out
sbb
hlt
dec
mov
test
push
xchg
jl
add
jl
dec
dec
sbb
mov
pop
pop
enter
iret
clc
or
mov
inc
ja
cmp
fisubl
add
pushf
test
or
enter
add
lcall
cmp
incb
shlb
xlat
pop
rorb
nop
orb
cli
mov
fsts
sar
mov
push
xchg
pop
scas
pop
test
mov
pushf
daa
insl
outsl
inc
je
das
imul
pop
mov
shl
and
jnp
and
xchg
and
sbb
push
pushf
mull
jo
cs
test
jl
fstl
jns
leave
stos
outsl
call
add
in
stc
hlt
and
call
sbb
add
lods
add
pop
cwtl
mov
dec
push
hlt
add
pop
mov
inc
push
add
dec
sbb
insb
inc
test
movsl
fxch
and
push
rclb
add
jo
add
push
adc
dec
or
sub
add
pop
test
push
or
and
add
xchg
out
pusha
dec
sub
and
add
pop
das
dec
sub
dec
and
inc
ja
add
outsl
cmp
mov
iret
pusha
in
jo
mov
and
push
push
insb
add
inc
mov
add
adc
and
cmp
in
dec
cld
call
sub
mov
sbb
lock
in
jnp
mov
std
fstps
fnstenv
mov
xchg
xchg
push
call
mov
xchg
in
mov
inc
dec
add
add
imul
sbbb
test
mov
sbb
xorl
and
dec
testb
lahf
clc
sbb
pop
adc
rcl
mov
mov
movd
cmp
xor
fadds
pop
out
push
sub
mov
pop
gs
outsb
push
sbb
in
cmp
rclb
mov
vpsubw
ja
enter
dec
mov
and
cmpsb
shlb
pop
mov
cmp
add
paddsw
xchg
and
test
jo
jl
mov
jne
add
xor
jp
add
mov
push
fisttpll
mov
pop
pusha
xor
add
mov
in
dec
rcl
cld
imull
out
add
outsl
cmp
mov
mov
std
pop
or
cld
add
stc
insb
jns
sbb
add
sbb
leave
test
mull
xor
jo
in
mull
popf
mov
pop
push
lret
mov
adc
xor
hlt
or
enter
jnp
ds
jne
and
movsl
mov
inc
dec
inc
jno
je
pop
rolb
inc
cmp
jp
loop
and
inc
cmp
sub
xor
jmp
fistps
notl
xchg
lcall
rcr
mov
cmp
pop
pop
movsb
aas
adc
xchg
push
jg
push
cmp
dec
jge
das
mov
lea
mov
addl
fcoms
xor
lea
pushf
mov
sbb
xor
mov
negl
in
inc
inc
or
sub
sub
inc
push
mov
sti
test
mov
ds
mov
and
nop
mov
nop
jo
faddl
rorl
stc
ss
cltd
mov
push
loop
pop
push
in
movsl
adc
nop
dec
push
sbb
data16
jg
xor
xchg
add
cmp
adc
sub
daa
sub
mov
fdivrs
and
sbb
jl
fiadds
out
lahf
mov
data16
mov
rolb
cmc
xchg
mov
sarb
sub
adc
scas
iret
mov
les
loop
sub
mov
out
in
icebp
lret
sbb
add
sti
inc
je
rol
outsl
and
mov
lret
mov
call
pop
daa
sub
fcoms
inc
int
addr16
xchg
loopne
popf
adc
or
mov
mov
add
mov
loopne
movl
add
mov
cmp
adc
inc
popf
inc
mov
scas
into
rcr
lahf
mov
std
aas
dec
xchg
jnp
inc
in
nop
or
inc
jne
cltd
inc
cmc
gs
lcall
pop
xor
aam
test
loop
lret
dec
inc
nop
dec
mov
or
sahf
mov
outsb
push
xor
pop
rorl
repnz
nop
int3
inc
cmp
mov
ret
pop
push
nop
nop
mov
mov
jns
add
push
fiadds
or
shlb
sbb
call
lahf
mov
mov
mov
scas
sub
dec
add
pop
ds
xchg
out
enter
pusha
mov
mov
pop
fdivr
mov
sub
mul
inc
bound
lret
cmp
hlt
rclb
mov
pushf
movsb
fwait
arpl
mov
imull
dec
xor
in
lea
ljmp
inc
aad
cmp
pop
sbb
cld
add
pop
inc
push
orb
dec
jne
pop
gs
xor
xchg
inc
adc
mov
dec
pusha
adc
outsb
inc
xchg
addl
ret
jae
outsl
scas
pop
cltd
js
jno
mov
std
add
xor
xor
scas
enter
nop
or
outsb
repnz
ja
inc
mov
inc
bound
mov
ljmp
mov
adc
add
xchg
adcl
xor
out
sti
test
inc
add
xchg
gs
arpl
pop
mov
push
iret
xchg
loopne
mov
aaa
and
in
imul
pop
add
rcrl
jmp
sbb
and
loop
jno
pusha
xorb
add
mov
cmp
pusha
mov
pop
add
cltd
mov
je
outsb
cmp
xchg
sub
sbb
add
xchg
dec
loop
imull
addr16
inc
pop
pusha
and
sbb
in
daa
push
inc
jbe
xchg
loope
mov
add
into
icebp
inc
mov
jae
insb
in
rep
and
es
mov
inc
out
add
ror
adc
outsl
pushf
dec
je
jp
add
aas
aam
mov
mov
mov
pop
clc
push
sbb
ljmp
hlt
cmp
in
add
push
add
add
mov
fnstcw
inc
bound
ljmp
mov
inc
ss
xor
adcb
dec
sbb
adc
cmp
push
push
insl
sbb
sub
out
dec
imul
cld
jne
or
dec
push
jmp
shlb
movsb
sub
xchg
pop
xor
jmp
int
js
popf
xor
jl
jp
lret
add
outsl
mov
and
insl
dec
and
mov
cmp
aad
cmp
add
xchg
mov
adc
or
add
pop
dec
inc
loope
outsb
xor
fildl
cmp
hlt
add
add
push
and
cmp
lret
cmove
add
and
mov
sub
rcl
mov
rorb
repnz
insb
fcmovne
sub
cli
cwtl
jg
lods
mov
dec
into
dec
mov
xchg
and
lock
pop
add
fwait
outsb
outsb
mov
inc
push
shlb
mov
popa
dec
int3
sti
jle
popa
insb
sbb
clc
and
adc
pop
in
add
test
xchg
out
testb
loopne
pushf
pop
sbb
movsb
xor
jno
bndldx
xchg
mov
add
movsl
mov
sbb
add
push
pop
adc
mov
addr16
test
adc
idivb
lds
incl
mov
aam
sub
cmp
nop
ret
pop
jl
and
movsl
mov
int3
adc
push
call
test
or
push
arpl
jl
loopne
loop
push
sub
cmpsl
les
pop
add
fcom
leave
shll
add
jnp
loop
add
or
stos
jae
jo
stc
or
movsb
add
dec
mov
xchg
icebp
pusha
sti
je
sbb
sbb
mov
jl
xor
lcall
cld
add
sub
push
in
mov
cmp
call
add
fisttps
cmp
loopne
ja
mov
les
pop
and
les
mov
push
nopl
or
out
outsb
rolb
ss
ret
pop
test
and
popf
fildll
pop
adc
inc
cld
xlat
cltd
add
out
clc
mov
loopne
mov
aad
jmp
mov
das
dec
mov
sub
rorb
lret
pop
push
xor
stos
pop
mov
loopne
into
lock
pop
icebp
cld
push
sub
xchg
push
xchg
cmp
sbb
add
xchg
fwait
jecxz
xchg
pop
adc
arpl
and
mov
dec
add
stc
into
insl
pop
clc
js
mov
dec
add
clc
addr16
out
and
jns
or
test
cmp
xchg
mov
cmp
add
push
dec
adc
xchg
dec
repz
mov
and
out
lret
into
mov
clc
test
jno
mov
inc
int3
outsb
std
mov
add
xor
fdivrl
cs
jecxz
es
pop
xor
rcll
or
dec
dec
mov
mov
daa
inc
add
in
xor
xor
xor
aaa
fs
addl
ret
es
gs
outsb
sub
add
cmc
aas
adc
gs
test
inc
mov
xor
mov
loopne
sarb
sbb
push
xor
xor
lea
in
jp
pop
inc
test
mov
lea
arpl
xchg
loope
push
inc
dec
hlt
sub
add
fcomps
sub
or
cmp
addl
mov
lret
ret
popl
pop
sbb
adc
imul
movlps
and
or
lods
out
cs
addb
sti
xchg
stc
jnp
inc
fdivrl
adc
push
mov
mov
dec
pop
call
add
xchg
sbb
lahf
sbb
gs
les
xchg
add
es
pushf
xchg
cmpb
insb
loope
inc
sub
jl
daa
mov
or
pop
sub
sub
mov
stc
rclb
pop
and
add
mov
inc
dec
cmc
lea
jnp
addl
paddd
add
pop
lds
iret
scas
std
shll
jne
js
push
pushf
sbb
cmpsb
lods
loopne
enter
frstor
bound
adc
rcrl
xor
out
mov
add
vsubsd
inc
pop
scas
jb
add
or
cld
dec
push
shll
xchg
test
jno
pop
push
xor
out
mov
pusha
enter
and
pop
fs
clc
pushf
vmovntpd
lock
stc
pop
lds
pop
call
fmul
inc
das
out
pop
add
shlb
icebp
mov
out
xchg
add
cmp
arpl
mov
cs
movl
test
pop
dec
cwtl
xchg
test
pop
and
add
data16
or
mov
in
je
in
adc
cmp
aas
int3
jo
add
push
mov
adc
pop
lea
repz
fsubrp
push
or
movsb
inc
cmp
adc
mov
jne
sbb
mov
or
sub
and
mov
dec
lea
jne
fs
push
add
xor
pop
ret
fstl
lret
outsb
fdivrs
out
fdivr
or
jp
xchg
inc
jl
add
ljmp
adc
addr16
in
out
mov
sbbb
mov
adc
xchg
repz
push
aam
fstpt
jp
jbe
mov
add
or
into
and
push
movsl
aas
inc
orb
fwait
xor
std
and
shrb
xor
dec
loopne
les
jl
mov
dec
gs
adc
pop
adcb
test
js
sbb
or
mov
sbb
insb
movsl
dec
xlat
add
push
lahf
stos
sti
pushf
push
sub
rorb
mov
add
pop
or
inc
hlt
int3
lods
add
ljmp
shlb
jle
inc
outsb
inc
loope
add
pop
in
sbb
nop
push
mov
push
bnd
mov
push
bound
adc
inc
lret
add
mov
adcb
and
cli
xor
repz
add
mov
xchg
sub
push
loop
xor
add
adcb
fidivl
les
daa
add
cld
add
mov
mov
ktestw
fsubrs
clc
cmp
cmp
jo
adc
dec
jns
add
dec
pushf
push
lahf
mov
pushw
inc
inc
cmp
ret
sub
in
xchg
xchg
lods
inc
push
inc
dec
clc
arpl
pop
sahf
jo
stc
pusha
scas
jle
fdiv
test
es
lret
or
orb
arpl
pop
lret
inc
add
aaa
xchg
add
shl
adc
inc
mov
xor
rclb
xlat
out
add
dec
push
fdivl
lock
add
and
dec
pop
mov
fucomp
ret
sar
orb
adc
mov
lret
xor
pushl
and
and
mov
inc
mov
cmp
xchg
pop
cld
push
push
push
nop
mov
repnz
sbb
pusha
lods
stos
mov
pop
addl
add
lea
jnp
jo
rorl
jp
int3
pop
es
push
and
and
rolb
add
cwtl
int
add
mov
das
inc
pop
jl
addr16
add
pop
nop
std
mov
adc
xchg
mov
lds
cmp
pusha
or
sbb
pushf
add
mov
movl
inc
lock
sub
mov
test
cli
fwait
adc
out
cld
mov
cli
add
mov
jmp
adcb
sub
sbb
shlb
inc
ret
add
call
mov
pop
sub
jne
aaa
jmp
ss
fs
pop
sbb
sub
and
sbb
adc
push
and
or
pusha
inc
or
push
or
mov
ja
mov
out
in
push
add
insl
test
xor
scas
pop
push
test
jne
andb
jl
or
mov
cmpsb
mov
sub
mov
mov
mov
mov
sti
das
adc
movl
rol
jb
lock
das
jle
adc
inc
pop
mulb
sbb
test
pop
or
push
push
push
stos
mov
pop
out
xchg
push
xor
fiadds
dec
mov
cltd
inc
or
cwtl
adc
and
pusha
mov
add
aas
add
mov
xchg
sub
or
or
pop
push
xor
push
popa
mov
inc
cld
add
fadds
xlat
stc
stos
and
not
lock
add
repnz
cmp
fbld
xchg
das
lods
push
mov
decb
fwait
nop
leave
in
jge
cltd
adc
jnp
ret
xor
out
cmpsl
mov
jle
push
jmp
popa
test
fs
add
add
push
dec
add
std
in
vmread
and
cmp
xchg
stc
push
lock
das
movsl
pop
add
xchg
mov
inc
testl
in
cmc
xchg
pop
mov
out
outsb
xchg
add
inc
mov
adc
gs
leave
cld
fmull
and
dec
pop
push
and
les
aaa
add
imul
imul
mov
cmp
and
scas
or
add
pop
nop
fisttpll
xchg
inc
and
push
jmp
filds
std
fs
fsubrs
sub
aam
lea
repnz
aad
and
add
stos
inc
jge
nop
xchg
lods
or
push
pusha
andb
inc
ljmp
add
rorl
mov
int
push
push
add
test
popf
add
inc
inc
or
dec
add
mov
stc
push
xchg
pop
push
ret
inc
push
and
cs
enter
xchg
sbb
gs
add
test
mov
mov
push
push
popf
ds
addb
cltd
add
or
mov
sbb
mov
or
andb
xor
popa
cs
les
cmp
femms
xor
mov
mov
iret
jp
icebp
frstor
div
adc
xor
mov
movl
jmp
lea
icebp
ljmp
faddl
adc
mov
dec
or
nop
dec
xor
xor
fucomi
std
orb
stos
jns
and
xchg
add
jbe
pop
inc
inc
push
pusha
xchg
jbe
push
jne
test
sbb
pop
das
and
outsb
mov
sub
ret
mov
jg
je
pop
mov
sbb
fbld
imul
push
iret
inc
aam
mov
sub
xchg
jl
add
push
mov
shr
mov
add
add
xor
pop
bound
mov
aaa
jmp
in
xor
mov
push
adc
and
test
adc
test
and
std
jnp
aad
pop
pop
and
data16
int
rorb
fmuls
pop
xchg
sub
loopne
or
xor
or
test
sub
imul
xor
add
push
push
pop
lea
call
pop
sub
and
add
pop
push
push
jnp
pop
xchg
jns
test
mov
rcll
push
test
and
leave
sub
cmp
test
inc
in
jne
arpl
sub
xor
shl
cmpsl
out
xchg
adc
cld
pop
jmp
andnps
pop
jecxz
add
bound
leave
jne
rcrb
outsb
mov
mov
pop
dec
sbb
test
daa
shll
push
imul
out
adcb
mov
jmp
insb
adc
dec
lret
xchg
push
jae
sbb
stos
frstor
push
xor
jl
mov
pop
jmp
push
test
cwtl
cltd
orb
adc
or
icebp
pop
popf
test
cwtl
cld
sub
ds
fwait
in
subb
inc
sub
adc
cmp
imull
inc
cmp
or
rcl
test
inc
lods
mov
or
scas
shrb
hlt
rcr
cmp
mov
cld
incb
mov
push
test
and
popl
sbb
out
das
std
and
fcomip
add
xchg
rcrl
lea
and
sub
addr16
xor
dec
fs
mov
repnz
xor
xchg
pop
in
xorb
xor
pop
jo
add
jno
mov
mov
pop
cld
inc
xor
adc
sub
xor
mov
fldl
xchg
cwtl
or
dec
adc
enter
fdivp
sub
test
mov
or
mov
sub
and
movl
shr
repnz
xor
fdivrs
sub
jbe
stos
inc
add
out
pop
insl
outsb
mov
imul
rcrb
ret
ror
jmp
xor
test
jne
int
pop
aam
adc
aam
and
loop
test
inc
fwait
test
movsl
rolb
cmp
lea
lods
cmp
fldt
push
pop
nop
jo
adcb
clc
mov
xchg
mov
xlat
mov
sbb
sarb
jno
popa
pop
jmp
adc
mov
pop
test
mov
movsl
js
pop
sub
ljmp
add
mov
js
xor
rcll
hlt
inc
jo
push
aaa
scas
test
sub
mov
rolb
rcrl
xor
sbb
mov
mov
cltd
pop
enter
in
sub
adc
mov
pop
or
mov
push
add
or
pusha
in
lds
adc
into
pop
lahf
push
pop
ret
add
or
shrb
inc
dec
test
jns
mov
mov
dec
les
ret
dec
sub
bound
sub
pop
sti
int3
jle
cs
pop
data16
mov
hlt
mov
movsl
stc
and
push
add
ljmp
dec
sub
cmpsl
sahf
sub
nop
pause
sbb
mov
or
add
adc
js
and
push
outsl
aaa
in
adc
shlb
lcall
and
cld
mov
sbb
pop
int3
jb
sbb
jge
inc
or
sub
jno
in
push
jne
cmp
adcb
and
add
jns
fdivrs
sti
fldcw
pusha
stos
imul
insl
cmc
sub
mov
mov
mov
xchg
or
test
imul
inc
jno
sbbb
mov
cmp
mov
out
ja
pop
mov
xchg
leave
out
jmp
xchg
add
inc
push
cmp
pusha
and
js
cmp
shll
ja
mov
imul
jecxz
xchg
lds
mov
dec
dec
inc
hlt
int3
cmp
xor
aas
aaa
pop
push
pushf
adc
std
jne
cli
jno
add
bound
add
xor
nop
fwait
imul
or
sub
ds
push
and
push
mov
test
imul
xchg
add
mov
and
push
add
inc
mov
push
mov
dec
dec
mov
mov
test
mov
test
enter
insb
and
dec
sub
fisubs
or
jmp
and
jle
lcall
rolb
lea
sahf
shll
ja
or
scas
dec
push
push
mov
aaa
add
popf
lea
and
add
test
mov
sarb
push
fsubl
xor
pop
movl
lea
adc
cmp
js
pop
add
xchg
inc
push
mov
xchg
pop
lret
sbb
pop
scas
pop
dec
add
enter
inc
mov
cmp
sarb
imul
xchg
mov
sub
loope
pusha
mov
dec
das
pop
xchg
xchg
push
adcb
pop
repz
pop
add
test
ror
insl
roll
dec
ret
add
repz
mov
push
and
loope
data16
dec
xchg
int
jg
add
pop
ror
mov
cmpsb
jne
mov
jp
pusha
jnp
add
and
lcall
add
les
adcb
push
cmp
mov
repnz
mov
fs
out
lret
mov
xor
out
jne
iret
sub
lcall
fs
popaw
ss
adc
mov
movsb
nop
pop
icebp
sti
adc
push
cld
call
sahf
in
mov
mov
shrb
add
ret
jbe
repnz
adc
xlat
fidivrl
xor
shl
rcrb
sub
adc
popf
adc
inc
cs
out
mov
testl
nop
das
daa
and
cli
mov
add
xor
push
sub
cwtl
or
fs
pop
jp
out
add
sbb
mov
sub
lea
jl
arpl
pop
das
pop
imul
or
popf
dec
mov
aad
adcb
push
push
bound
jle
mov
mov
dec
jb
lods
cltd
add
mov
jecxz
jmp
int
addr16
sbb
sbb
xchg
xor
push
fiadds
mov
mov
pop
shll
or
mov
popf
lcall
inc
xor
repnz
mov
movsb
add
ljmp
call
outsb
jno
pusha
adc
xchg
mov
outsl
xorl
and
mov
xlat
addb
mov
call
sti
adc
repz
push
fcompl
stos
scas
or
pop
push
pushf
dec
push
inc
mov
daa
jno
mov
sub
imul
jb
xor
fs
testb
or
or
inc
push
inc
pusha
jecxz
push
sarl
pop
inc
inc
xor
cmpsl
jns
push
mov
dec
inc
sbb
ds
sub
imul
out
pusha
or
out
or
iret
mov
sbb
cmp
add
data16
xor
mov
aaa
popf
xchg
inc
xor
mov
je
lods
lret
cmpsl
mov
xor
adcb
dec
xchg
add
mov
sbb
int
loopne
idiv
dec
sarb
sbb
les
arpl
loopne
cmp
add
jns
sub
shrb
das
rolb
rcrl
je
std
test
adc
mov
cmp
mov
lods
cmp
mov
and
sbb
jmp
add
pop
mov
clc
mov
test
and
lods
mov
iret
push
mov
jg
push
int3
add
pop
push
push
dec
dec
add
add
cmp
mov
adc
pop
scas
loope
pop
push
rclb
int
mov
sbb
andb
das
pop
hlt
cmp
xchg
icebp
and
pop
loop
outsb
ds
out
cmp
fcoms
dec
in
enter
popf
imul
mov
nop
maxps
fisubs
add
mov
pop
imul
push
nop
xor
hlt
pop
clc
jno
ret
jmp
lret
push
push
or
in
adc
int
sahf
dec
pop
mov
sbb
lcall
js
cltd
add
xchg
pop
cmc
sub
pop
add
test
add
shrb
ret
xor
mov
add
popf
and
daa
data16
mov
inc
cli
add
call
cmp
push
lods
cmc
add
ds
int3
shl
fs
out
mov
add
jp
adc
notl
push
fsts
subl
push
and
lret
enter
jp
push
sbb
inc
adc
cmp
adc
or
test
in
in
mov
mov
adc
mov
cltd
inc
fdivs
jg
cld
js
paddw
fidivs
gs
or
sbbl
adc
adcl
mov
dec
pop
stos
negb
push
div
adc
mov
xor
pmaxsw
pusha
add
pop
jle
mov
in
add
imul
pop
push
lret
insl
cmp
call
add
clc
lret
and
ljmp
clc
mov
push
movsl
mov
cmp
mov
add
mov
test
and
adc
mov
lds
movsl
cmc
repz
addr16
or
add
add
sub
mov
and
mov
and
fucomp
loop
divb
xchg
or
mov
mov
add
mov
or
in
adc
jo
rcll
sub
add
pop
xor
jbe
adc
add
ss
fnstcw
daa
insl
lock
and
mov
jle
add
out
es
mov
or
xchg
add
dec
mov
movsl
adc
xchg
outsl
adc
xor
pushf
xchg
inc
sahf
out
sti
enter
sar
call
push
pop
stos
int
pop
sti
bound
popf
sub
in
nop
adc
pop
hlt
mov
outsl
push
clc
mov
sub
test
add
orl
mov
int
fisttps
leave
xchg
lea
or
jp
inc
and
adc
mov
add
movsl
and
cmp
jmp
in
sub
bound
imul
pop
and
dec
das
sahf
add
mov
mov
add
in
fmull
movsl
cmp
mov
xchg
aam
sbbb
ljmp
or
loop
sub
add
call
cmpsb
add
mov
jns
loope
and
and
and
mov
repz
add
mov
sub
mov
sub
out
cmpsl
js
shll
add
xor
pop
les
jnp
dec
mov
lock
inc
add
loope
inc
or
imul
dec
xor
sub
xorb
test
mov
jecxz
hlt
cmp
inc
test
jge
jmp
outsb
fldt
rcr
pop
orl
cmpsl
push
mov
add
push
clc
fiaddl
xchg
push
mov
add
add
and
std
cld
sub
pop
fnstcw
cmp
jae
cmc
in
hlt
shlb
fwait
mov
cmp
add
xor
call
jae
push
mov
push
add
push
aam
jg
test
and
xor
mov
rolb
push
pop
xor
jmp
mov
insl
js
rolb
mov
pop
loopne
fiaddl
jmp
mov
jno
adc
mov
mov
lret
popa
xchg
mov
addb
cmp
sti
cmp
pop
pusha
es
lock
sbb
add
xor
stos
mov
rcl
mov
jns
cmp
int
mov
xchg
cmp
jp
adc
repz
stc
in
sub
jo
out
leave
aad
shlb
rcll
sub
test
test
push
in
cmc
rcrb
hlt
jns
mov
int
jg
mov
rol
xchg
stc
push
dec
mov
lcall
sti
xor
mov
popf
mov
add
push
fwait
je
pop
hlt
add
push
int3
js
lahf
repz
mov
dec
mov
push
cwtl
pop
test
scas
loopne
mov
fs
dec
call
pop
loope
mov
pop
pop
xor
sbbl
mov
mov
sarl
outsl
sub
inc
rclb
cmpsb
cmc
add
aad
mov
cltd
cmp
rcll
pop
mov
mov
jns
add
addl
jne
dec
xchg
push
sub
loop
data16
jns
sarb
jmp
cmp
or
and
mov
inc
gs
popa
popf
adc
mov
out
mov
jmp
fstp
add
imul
aas
push
sbb
ja
jmp
add
vmovdqa
jnp
iret
ja
jo
in
je
push
mov
sub
mov
and
cmc
or
shr
sub
cltd
cmpb
pop
add
push
cmpsl
int
dec
and
inc
adc
mov
lds
test
jno
aam
and
insb
mov
jo
addl
in
add
movsb
jge
sub
xor
pushf
xchg
xchg
xchg
leave
mov
adcb
mov
in
negb
es
push
push
pusha
adc
or
fisubs
mov
dec
les
mov
popf
mov
adc
gs
xchg
xchg
inc
pop
add
pop
xor
jle
sub
push
or
pusha
xchg
jbe
imul
ja
xchg
dec
pusha
fdivs
pop
xor
test
pusha
mov
mov
add
sbb
mov
imul
repnz
jge
xchg
test
fsubrl
xlat
add
ljmp
add
imul
pusha
mov
push
push
cwtl
mov
jno
push
aam
mov
enter
add
cmpsl
mov
inc
and
mov
jmp
adc
and
insl
and
gs
adc
cmc
xor
popf
mov
adc
xchg
or
sbb
imul
xlat
mov
ffreep
adc
add
jno
dec
mov
adc
jo
or
and
or
inc
push
add
dec
bound
xor
xchg
mov
mov
fwait
mov
das
inc
out
dec
int
sub
rolb
push
lods
lret
inc
sbb
into
fcompl
test
push
fs
xchg
inc
push
pop
das
dec
lret
stc
stos
leave
rcrl
stc
inc
fcomps
xchg
rclb
adcb
adc
cmp
xor
push
mov
add
cmp
test
mov
adc
sbb
nop
test
mov
fwait
sub
add
dec
cmp
repnz
std
cltd
pusha
js
cmp
xor
ror
or
fsubrs
cmp
in
lock
or
push
adc
scas
fiaddl
sarb
adc
dec
cmpsb
cmc
mov
mov
data16
test
cs
rcr
sub
cs
pop
mov
in
mov
lahf
in
cmpsl
lahf
add
and
xchg
scas
mov
and
xchg
pop
mov
cmpl
es
lcall
dec
push
add
insl
mov
or
sub
mov
dec
sbb
lcall
push
pop
or
lds
lods
int3
idivb
add
mov
pop
sbb
add
push
add
icebp
sar
push
and
mov
add
repz
jp
imul
xchg
push
aaa
cmp
lahf
xlat
nop
adc
xor
cmp
mov
xchg
ja
jl
stos
pop
sbb
xor
inc
sbb
movsb
adc
jae
jmp
adc
imul
shlb
push
xor
outsb
mov
outsb
bound
fnstenv
out
lds
or
mov
mov
js
mov
push
add
outsl
cmp
and
lret
daa
or
or
push
dec
jae
lods
loope
test
test
pop
pushf
push
sub
sub
lcall
push
aas
test
cmp
and
jmp
scas
outsb
mov
or
lea
pop
pushf
mov
sub
cmpsl
out
mov
pusha
test
add
add
push
adc
sub
pop
call
rorl
add
push
sbb
add
fwait
mov
pusha
in
xor
push
test
xchg
push
mov
pop
movsl
add
xorb
lcall
imul
mov
mov
push
imulb
js
jae
inc
adc
in
add
inc
int3
fsubs
push
dec
or
enter
xor
cli
add
mov
aad
jge
add
and
cmovp
xor
clc
add
loop
cmp
mov
add
cltd
fadds
mov
xlat
imul
fidivs
mov
or
push
fidivrl
xchg
add
scas
pusha
dec
mov
in
jg
sbb
inc
loope
add
sarb
push
sub
pop
mov
and
pop
jnp
inc
or
in
jg
mov
ds
dec
or
cmpsl
ret
std
inc
push
scas
push
add
jns
add
add
push
mov
dec
hlt
addr16
enter
cmp
jae
add
mov
sub
aam
dec
xchg
xchg
xchg
jmp
mov
aaa
lret
inc
lea
mov
in
jo
jge
push
push
dec
repnz
cmp
mov
jmp
and
inc
test
sti
push
in
push
push
adc
lahf
sbb
lret
dec
add
cli
mov
inc
mov
push
lods
insl
jp
push
ret
cmp
cmp
mov
or
jp
mov
sub
jecxz
testl
stc
push
andl
insb
out
jnp
sbb
ret
pop
aaa
or
sbb
mov
xchg
pop
flds
out
mov
mov
dec
je
loopne
add
lock
addr16
cltd
xor
dec
add
pop
mov
add
loope
pop
jg
dec
or
add
dec
pop
sub
ja
sbb
lret
adc
les
inc
lea
data16
cwtl
push
lods
mov
lds
sub
out
or
mulb
jmp
dec
jmp
inc
sti
push
loopnew
add
pop
and
add
sub
bound
fstpt
sbb
rclb
mov
push
cmp
add
cmpsl
and
jle
xchg
aam
clc
hlt
add
adc
add
mov
lds
scas
adc
push
iret
sub
xchg
jo
dec
ret
stos
insl
cmp
jnp
inc
jae
push
inc
mov
add
enter
sbb
add
add
add
mov
scas
mov
cmp
jle
sbb
inc
add
data16
lcall
divl
mov
inc
xlat
push
cmc
add
das
jl
cmpb
xchg
mov
push
fldenv
and
xchg
repnz
push
andb
call
jg
lcall
mov
push
iret
cmp
mov
movsl
xor
jnp
jns
test
fildl
mov
lock
mov
repz
sub
fs
push
or
inc
mov
jecxz
mov
jno
sti
mov
arpl
fiaddl
aam
iret
mov
push
stc
cmp
xor
or
loop
ljmp
int
inc
aam
outsl
mov
jo
pop
jl
aaa
pop
mov
imul
out
pusha
or
add
mov
or
xor
addb
and
into
sub
mov
xchg
fwait
jp
jmp
mov
or
add
call
add
pop
repnz
xchg
movsb
js
mov
pop
sub
mov
mov
push
push
sub
fcoms
xchg
add
jmp
repnz
or
sbb
jnp
push
stos
cmp
pushf
sub
cmp
add
sbb
icebp
cmp
inc
fwait
jp
add
movsb
hlt
lock
loopne
lahf
aam
ret
repnz
pop
sarb
push
sbb
cmp
push
jno
test
inc
mov
mov
aas
add
movsb
mov
jle
adc
ret
mov
adc
sti
jns
xor
adc
inc
mov
sub
daa
aad
jl
lret
bswap
add
pop
loope
outsb
add
out
outsl
call
add
push
pop
mov
arpl
mov
dec
leave
mov
jnp
inc
adc
push
notb
ds
or
repnz
add
icebp
into
mov
lret
add
push
bound
pop
out
shrb
pop
dec
push
andb
pop
jp
aad
mov
add
lock
add
xchg
jecxz
xchg
int
mov
arpl
add
imulb
es
add
dec
filds
push
add
pop
inc
rcll
adc
je
lock
sub
rolb
or
fisttps
test
sub
rcll
and
cmp
dec
and
mov
cmp
mov
jae
xor
cmpsb
outsl
popf
es
ret
pushf
lret
incb
stos
ja
andb
cmp
outsb
inc
pop
dec
and
cmp
mov
dec
inc
pop
sbb
pushf
cld
test
sub
dec
ss
mov
les
or
bound
rcll
push
push
icebp
outsb
mov
nop
jecxz
mov
jge
or
and
push
add
pop
add
jge
cmp
add
push
aad
das
add
repz
lods
repnz
add
andl
cmp
das
push
cld
push
push
add
mov
xor
shrb
adc
cmp
push
add
add
cld
dec
loop
add
xchg
ficompl
jp
add
test
pushf
inc
jno
mov
mov
jbe
adc
mov
add
add
mov
push
movsl
jo
ljmp
mov
jo
clc
inc
in
insl
mov
or
fistps
add
dec
movsl
mov
sbb
ljmp
xchg
cmpsb
and
sarl
and
cld
add
sbb
inc
pushf
add
inc
sarl
dec
sub
cmp
cwtl
out
xor
dec
or
add
jnp
nop
add
adc
dec
sbb
add
shll
lock
dec
daa
sub
pop
shrb
popf
inc
mov
adc
orb
sbbb
icebp
mov
jmp
cwtl
ret
add
mov
lcall
ret
inc
int3
out
lock
movsb
cli
xchg
pop
inc
push
addb
mov
mov
dec
mov
sbb
jg
or
add
pusha
movb
add
hlt
jae
out
jae
add
ss
test
mov
dec
cli
add
and
jmp
lcall
and
mov
mov
or
sub
mov
dec
out
add
stc
inc
adc
test
fisttpl
imul
pusha
jl
push
pop
and
daa
int3
mov
xchg
sbb
int
jmp
test
inc
inc
add
cltd
adc
dec
pop
sbb
add
leave
leave
sub
test
add
xor
jle
add
push
and
shrb
scas
fistpl
add
ds
aad
imulb
roll
dec
lahf
mov
aam
push
in
xor
mov
fcompl
xchg
push
enter
mov
push
cmp
inc
fcoms
mov
push
sahf
add
mov
jne
push
jbe
push
sub
das
int3
stos
fcompl
push
or
mov
insb
cs
mov
cmp
fucompp
mov
push
pop
or
pop
fsubr
sub
roll
mov
sti
cltd
add
adc
add
xor
sbb
xchg
ljmp
pusha
es
sbb
and
add
add
js
rcrl
out
fistl
cld
outsb
push
movsb
out
or
shlb
outsl
out
push
jp
mov
loopne
sti
sub
adc
xchg
bswap
push
and
pop
fisubl
xor
mov
push
cld
or
test
xor
add
in
lea
add
sbb
je
nop
mov
imul
inc
add
pop
push
and
daa
shlb
xchg
fwait
xchg
dec
jo
and
xchg
and
xor
notl
jne
jle
cmp
sub
or
cmp
xchg
mov
dec
movb
in
repnz
int
nop
cmp
outsb
pop
data16
stc
pop
or
insb
push
and
bound
xor
pop
push
push
mov
call
mov
jecxz
imul
lret
sub
lcall
push
sahf
movl
push
pop
sbb
mov
faddl
dec
mov
xchg
repz
dec
pop
inc
push
popl
jno
add
js
xor
xchg
movl
pop
lock
enter
outsb
push
inc
test
mov
xor
lock
dec
cmp
mov
repz
adc
or
or
je
faddl
cmp
dec
cs
pop
push
mov
nop
inc
add
sbb
int3
leave
inc
pop
mov
jl
adc
cmpsb
test
in
jo
adc
cmc
jge
je
and
pop
call
inc
push
push
pop
pop
push
stos
fucompp
lret
or
pop
decb
mov
push
push
daa
dec
inc
shr
mov
fmuls
ja
or
fmull
in
cmp
push
push
inc
pushf
add
sub
aaa
sub
jb
nop
or
mov
out
xor
adc
movsb
mov
roll
dec
xor
je
mov
mov
push
push
dec
stc
mov
mov
add
call
mov
xchg
inc
add
xchg
mov
jl
jge
aas
xor
jmp
or
cmpsl
fists
xlat
lock
dec
daa
push
add
pop
ds
push
mov
mov
inc
loopne
xor
stos
xorb
mov
pusha
call
add
cmpsl
inc
dec
mov
sbb
loopne
lods
mov
mov
in
pop
das
pop
xorl
jmp
inc
arpl
mov
inc
int3
ljmp
in
and
loop
or
lea
xchg
push
mov
dec
leave
cli
cmc
xchg
or
js
fs
adc
add
dec
ret
xchg
fcomi
xchg
xor
mov
jg
sbb
aad
mov
cmp
add
jo
pminsw
dec
xchg
ret
push
adc
mov
adc
or
mov
aad
mov
mov
mov
cltd
loopne
loopne
cmc
jb
cmp
and
incb
jne
lods
into
shrb
aas
rcrb
xor
or
mov
push
cli
outsb
in
pop
sti
pusha
std
add
mov
jbe
mov
adc
bound
inc
adc
lods
ret
orb
dec
jae
adc
stc
mov
leave
notb
pop
rorl
xor
add
out
in
mov
rolb
inc
jns
or
aaa
push
mov
sub
cmpsl
lods
ljmp
adc
popf
or
dec
fcompl
inc
cli
adc
enter
int3
scas
popa
popf
testb
stc
pop
dec
jmp
adc
xor
jg
or
adc
add
fildll
or
push
test
inc
sbb
in
inc
lcall
cwtl
ret
adc
sbbl
call
cli
pop
adc
cld
movsl
mov
int3
mov
mov
dec
movsb
sbb
arpl
adc
mov
dec
cmpsb
je
and
mov
popf
imul
rcl
mov
sbbb
cmpsl
ret
dec
das
xor
push
inc
xchg
mulb
mov
mov
pop
push
jle
add
icebp
cmc
cmpsl
ror
xchg
fucomp
push
das
es
pop
inc
push
rorb
fwait
sbb
dec
xor
hlt
cmp
xchg
pop
pop
ja
dec
ret
in
add
movsb
sbb
mov
arpl
mov
or
xchg
xor
adc
lds
test
dec
pop
xchg
jg
xchg
add
shll
dec
xchg
pop
andl
sub
out
cltd
popa
fs
dec
int3
xchg
jns
add
jge
mov
add
jle
imul
fcmovnu
xchg
out
push
sub
shrl
sbb
pop
xor
cmpb
pop
push
iret
push
arpl
push
jg
mov
cmpsl
sub
and
adc
and
push
add
push
cmp
add
repz
inc
into
add
sub
mov
mov
mov
sbb
pusha
outsl
sub
pop
insb
push
jo
movsb
je
fld
xlat
cli
outsb
push
add
mov
adc
adc
jmp
shlb
aas
dec
movsb
das
and
inc
adc
lods
cwtl
or
inc
in
ja
jg
into
adc
sbb
pusha
cld
mov
out
cld
aam
inc
jns
test
xchg
add
sub
outsb
mov
loopne
dec
pop
mov
jno
arpl
push
cwtl
lea
inc
mov
add
sti
jo
imul
in
loopne,pn
xchg
push
mov
inc
add
push
aad
mov
and
fwait
stos
pop
sub
iret
scas
nop
push
dec
push
jecxz
pop
mov
cmpsl
lret
je
outsb
mov
jb
daa
loope
pop
inc
dec
sbb
roll
xor
jg
sub
nop
xchg
xchg
dec
xchg
jmp
icebp
and
mov
or
and
mov
or
in
sbb
pop
cmpsb
xor
shrl
ljmp
xor
loope
jle
or
int
sub
push
dec
mov
push
push
mov
mov
or
xchg
js
add
jno
ss
add
add
jge
fmul
mov
test
mov
cmpb
xchg
or
dec
mov
add
push
push
sarl
or
daa
sbbl
xor
repz
push
test
int3
push
inc
pop
dec
xchg
mov
mov
es
cmc
imul
shl
adc
pusha
sbb
fdivr
xor
loope
push
cld
mov
iret
adc
ja
adc
adcb
dec
xor
pop
cmp
out
lret
inc
jg
xor
inc
sbb
fldl
mov
mov
rclb
xchg
sbb
push
push
add
pushf
jp
dec
out
mov
push
and
inc
imul
add
and
pop
pop
test
push
stos
int
imul
lret
add
pop
add
movsl
ret
mov
sbb
int3
jecxz
push
mov
push
dec
push
std
nop
cmp
push
insl
int3
lods
fs
mov
inc
lret
cmp
push
sbb
outsb
out
xchg
push
push
mov
inc
or
jo
pop
nop
lahf
insl
add
mov
fs
add
lea
and
popa
mov
adc
push
mov
adc
imul
and
in
js
jle
mov
or
ret
add
ds
sub
mov
push
fisubrl
xlat
test
push
icebp
mov
mov
xor
cmp
and
or
imul
int
loopne
xor
push
jnp
adc
mov
pop
mov
das
dec
repz
mov
add
scas
mov
mov
movsl
jle
loope
or
push
push
test
xchg
and
cltd
andb
jns
mov
clc
sbb
xlat
push
mov
pusha
clc
out
xor
inc
cmp
popa
movsl
xchg
jns
add
push
lock
jo
inc
inc
or
xchg
push
cmp
lods
jle
sub
pop
pop
popa
fucom
sub
mov
push
mov
xabort
imul
and
lea
pop
push
inc
jecxz
dec
loope
jle
mov
pop
cld
lock
jp
sbb
rcll
mov
xor
dec
sub
in
or
pop
sbb
mov
mov
add
adc
and
and
add
test
cld
cltd
inc
jne
and
clc
pop
movl
mov
pusha
call
xchg
jl
clc
pop
xchg
mov
das
cmpsl
cmp
int
jmp
popf
mov
aaa
out
xlat
out
bound
mov
cs
gs
dec
mov
das
pop
popa
out
fsubrs
mov
sbb
xorl
fstps
test
mov
jne
jmp
lods
in
fldl2t
stc
sbb
mov
mov
sahf
add
mov
ja
dec
add
movsb
pop
stos
data16
adc
popf
movsb
jmp
add
adc
mov
cltd
add
int
ja
dec
sub
push
add
and
stos
jecxz
lock
notl
pusha
cli
mov
add
lods
cmp
arpl
cmp
notb
pop
je
repnz
mov
rcl
movsb
inc
or
xor
les
cwtl
dec
pop
mov
pop
lock
mov
mov
pop
outsb
xchg
jo
mov
pop
jb
jo
and
mov
inc
mov
cmp
shrl
sbb
pusha
push
xchg
pusha
loop
jne
pop
out
out
add
das
or
stc
xor
sbb
mov
mul
add
push
lret
stos
int3
cs
clflush
sub
dec
fs
mov
lea
fs
push
daa
popa
pop
inc
shr
inc
es
dec
add
dec
adc
arpl
fimuls
fnsave
inc
add
mov
sbb
aas
dec
sti
popa
or
popf
out
add
dec
sub
xor
jl
inc
sbb
ja
or
sub
mov
or
push
mov
hlt
clc
add
inc
mov
xchg
jecxz
push
inc
push
mov
inc
or
sub
push
daa
adc
mov
push
mov
lea
scas
sub
loopne
dec
out
or
adc
cmc
sub
push
sarl
mov
mov
popa
push
adc
adc
popf
lahf
jp
roll
shr
outsb
call
je
sar
subl
test
aas
mov
or
leave
and
nop
js
mov
leave
mov
stos
leave
mov
jge
sahf
add
inc
fnsave
lret
mov
test
xor
dec
and
xchg
lcall
cld
and
scas
cmp
push
mov
fucomip
scas
aam
or
daa
repnz
mov
mov
shrb
dec
mov
xor
imul
sarl
jnp
mov
add
mov
pop
fdivrl
or
stos
andl
add
ficomps
call
loope
mov
scas
lock
lcall
popa
out
xchg
mov
in
cwtl
in
sub
push
push
dec
add
and
mov
sbb
sub
mov
pop
aad
xchg
out
fs
fisubrl
adc
icebp
dec
das
or
rorl
rcrl
cmc
xor
enter
aas
std
or
dec
aad
push
and
dec
jmp
mov
and
adc
and
or
rclb
adc
push
out
cmp
cmp
jge
sti
repnz
dec
scas
pop
rclb
xor
jp
sbb
ret
or
les
sub
add
mov
ret
clc
push
int
jmp
lea
sti
xchg
or
sbb
mov
add
mov
mov
sub
cld
mov
cmp
setb
cli
ficompl
xor
and
add
mov
or
pop
add
add
cmpsl
pop
mov
add
mov
sub
push
ret
fldl
fs
aam
cmp
popa
sub
leave
xchg
add
add
xor
dec
mov
xchg
mov
int3
dec
in
call
lea
and
mov
inc
pop
andb
jae
fildl
rcll
clc
in
jne
sub
xor
mov
xchg
add
cli
push
fnstsw
repnz
cmpsl
sub
pop
xchg
dec
cld
shll
mov
add
in
ror
popa
popf
adc
sub
xor
test
movsl
dec
or
das
aad
mov
sbb
cwtl
ss
mov
sub
leave
sub
sub
sub
or
xor
pop
sbb
cmpsb
sbb
add
incb
jne
push
decb
addl
nop
nop
and
test
sbb
inc
add
jmp
adc
stos
je
push
xor
loopne
decb
int3
xor
inc
das
movsl
out
mov
dec
add
pandn
sub
adc
mov
pop
jge
jns
int3
faddl
shl
pop
fstl
lahf
je
xchg
pusha
bound
add
add
jo
or
pop
cmp
insb
in
jno
or
ret
test
mov
sub
shr
cmpsb
adc
scas
gs
aam
outsl
loopne
push
push
xchg
xlat
inc
push
push
mov
add
outsb
leave
jl
lret
or
pop
lds
lods
insl
jl
pop
push
or
imul
push
sub
lret
insb
and
pusha
push
and
add
adc
xchg
add
gs
les
mov
jmp
mov
and
xchg
frstor
add
leave
dec
and
gs
cmp
popa
add
mov
and
push
xlat
mov
daa
add
icebp
and
mov
fs
cmpb
add
cmpsb
nop
mov
add
pop
mov
mov
sbb
notb
call
popa
mov
dec
cld
xor
lds
rcl
sub
adc
xor
mov
push
mov
lahf
shll
add
ds
and
inc
sub
enter
adc
push
or
add
push
addb
and
imul
sbb
fcomps
pop
jge
cmp
jmp
mov
insl
mov
icebp
hlt
out
jg
pop
inc
lock
fisubs
mov
mov
jns
ss
pop
test
cmc
imul
xor
and
sbb
inc
inc
and
jmp
mov
cltd
push
das
outsb
add
pop
add
int
das
cmp
mov
sbb
jo
push
pop
sbb
sbb
hlt
inc
xchg
fdivs
sbb
pop
push
pop
xlat
add
dec
mov
movsl
dec
add
aad
ds
mov
mov
cmpb
add
sbb
cmp
cmp
mov
xor
pop
add
add
jae
outsb
sbb
js
sub
xor
je
fidivl
aad
nop
jae
jnp
pop
jns
out
test
sub
mov
inc
int3
xchg
mov
xor
pop
adc
mov
or
sub
sbb
xor
leave
jno
pop
xor
or
mov
int
push
sbb
fldcw
ret
jl
fcomps
or
lea
cmp
xchg
push
and
jl
in
add
cltd
das
jne
mov
les
ret
shrb
adc
daa
xchg
test
add
sub
xlat
repz
loope
xor
cmpsb
aas
mov
mov
ficompl
push
mov
add
test
pop
cmpsl
jmp
and
cmpl
dec
push
push
add
dec
inc
mov
sub
clc
xlat
or
dec
adc
negb
outsb
inc
add
mov
inc
andb
mov
insl
xor
repnz
icebp
push
mov
sbb
cld
lcall
and
add
fdivl
jecxz
fnstenv
dec
jnp
push
mov
sub
pop
repz
push
pop
lret
daa
ficoml
jle
inc
pop
add
xchg
sbb
call
out
mov
mov
popf
sbb
mov
repnz
xchg
sti
vpsubq
cmp
insl
pop
imul
jg
flds
push
rorb
xor
jae
and
mov
dec
ficoml
andb
sub
sub
or
or
push
rorb
repz
rcrl
ds
inc
add
add
loop
or
pop
mov
je
pusha
add
cmp
xchg
xor
mov
cmp
leave
test
adc
push
pushf
fs
cwtl
lods
mov
fwait
xchg
ret
xchg
pop
nop
mov
out
popa
and
sub
fdivr
das
xchg
add
lds
pop
push
outsl
add
movsl
mov
pop
xlat
mov
sbb
fisttpll
nop
pusha
pop
in
ja
nop
mov
jmp
movsl
add
pushf
andb
adc
test
icebp
jle
mov
jbe
pushf
jmp
mov
test
cmpsb
inc
mov
xor
xchg
xchg
push
das
cmpsb
jmpw
sahf
cmp
xchg
loope
add
leave
push
inc
call
mov
mov
add
jne
cmp
push
enter
insl
adc
adc
stc
insb
enter
push
add
mov
push
sbb
pop
in
cmp
cmpb
push
xchg
add
ss
and
in
les
xor
mov
stos
mov
lea
add
andb
in
add
xchg
data16
xchg
pop
lea
das
mov
add
popf
bound
loope
lea
fsubs
popf
and
push
jle
inc
and
lahf
adc
xor
punpcklwd
shlb
js
push
cmp
loop
les
scas
pop
lods
adc
xchg
fcmove
into
mov
add
or
repz
push
rcrb
mov
xlat
inc
xchg
add
and
add
inc
out
push
les
in
push
and
movsl
mov
push
sbb
daa
popf
sti
bound
dec
pop
ret
mov
adc
push
cmp
mov
repnz
sub
inc
mov
push
popl
call
sahf
fwait
and
xor
fadds
sub
mov
enter
shl
jo
cmp
jno
pop
push
jge
cmp
xchg
dec
stos
les
sub
ja
mov
fadds
dec
mov
adc
add
jl
inc
xor
nop
mov
mov
xchg
push
pop
les
stos
sbb
stos
pop
sub
mov
inc
das
lret
test
add
mov
jbe
push
adc
pusha
push
das
mov
cmpsl
test
popf
adc
and
mov
mov
fwait
movsl
xchg
or
jmp
fmuls
pop
dec
push
cli
mov
ficoms
enter
mov
test
dec
and
andl
test
mov
repz
mov
or
test
add
xchg
lahf
xchg
adc
mov
pusha
mov
sbb
shl
mov
fiadds
addb
lahf
lods
mov
pop
mov
imul
pop
cld
fdivl
in
andb
adc
jbe
pop
push
mov
lret
pop
add
push
inc
sar
cwtl
mov
xor
daa
xchg
xchg
add
xchg
or
fdivrs
jb
jp
or
xlat
dec
xchg
pop
je
faddl
pop
sahf
inc
inc
jnp
ds
jl
adc
in
mov
cmp
cs
std
nop
lahf
bound
testb
or
adc
sbb
push
sbb
add
or
jmp
mov
push
cli
xchg
adc
and
add
mov
cld
mov
cmp
sub
pop
pop
mov
jbe
adc
aad
jle
xor
xor
xor
les
cld
pop
nop
rorb
sub
mov
aas
jecxz
jg
jge
add
dec
mov
jno
das
je
lcall
sbb
push
jo
sbbb
sub
nop
ja
aad
es
adc
xchg
loope
outsb
sub
nop
mov
nop
jl
add
repnz
jmp
xlat
jl
fidivrs
sbb
jbe
into
lds
sbbl
pop
outsl
dec
dec
and
push
push
add
stos
aas
inc
mov
cli
xlat
lret
pop
jecxz
sahf
movsl
jnp
add
enter
rcr
and
xor
sub
push
mov
xchg
out
or
pop
stos
incb
mov
jo
push
push
pop
pop
mov
pop
movsl
sub
and
cmpsl
mov
add
lea
test
pop
sub
mov
clc
mov
mov
inc
or
jmp
mov
push
pop
int3
xchg
lcall
mulb
cmp
inc
insb
stos
addb
dec
mov
add
and
push
fists
push
mov
jb
push
cmpl
jle
add
mov
xchg
in
push
mov
sti
jg
cmp
pop
ss
push
mov
cltd
test
inc
ret
push
movsb
mov
imul
jo
pop
mov
pusha
hlt
pop
sub
inc
push
or
jo
sbb
int
sub
into
cltd
aam
jecxz
sub
and
xor
adc
xlat
push
and
and
push
pushf
push
scas
mov
jne
popa
mov
cmp
rcrl
mov
in
adc
repnz
ljmp
lahf
and
jbe
mov
xchg
push
xchg
std
jg
scas
xchg
ljmp
imul
mov
fwait
lds
test
push
pop
push
pusha
in
dec
xchg
icebp
adc
push
push
add
jnp
fisttpl
adc
data16
insl
inc
sub
mov
popa
je
pop
enter
xchg
xchg
test
xor
lea
pop
jbe
ss
cmpsl
das
add
adc
fcom
mov
test
ja
fisttpll
push
sahf
movsl
inc
loopne
cli
add
mov
imul
fildl
sub
lods
mov
jne
mov
add
and
mov
xchg
das
in
pop
jl
into
mov
stc
jle
inc
dec
jl
dec
cmp
push
stos
cmp
stc
je
cmp
cwtl
xchg
icebp
push
xor
mov
jae
mov
or
cmc
mov
sub
rcll
fstl
sbb
pusha
push
sbb
ficoml
je
pushf
cmp
cwtl
mov
stos
je
mov
dec
mov
mov
jbe
sahf
cmp
out
loopne
fs
loopne
inc
or
shlb
xchg
mov
cmp
repz
jo
aas
add
push
inc
hlt
cmp
imul
pop
fnstsw
dec
mov
aad
insb
xlat
mov
test
mov
fucom
mov
or
je
inc
sbb
pavgb
mov
imul
xor
mov
das
pop
negl
xchg
xchg
aaa
fmull
cmpsl
inc
mov
sarl
inc
xchg
cs
call
cmp
xor
xchg
dec
test
mov
adc
pop
lds
add
mov
test
pop
jmp
dec
sub
push
add
mov
daa
je
push
add
repnz
je
push
sbb
sub
mov
enter
inc
movsb
adc
cmpsl
adc
mov
mov
add
fstps
arpl
scas
scas
loopne
mov
add
add
xchg
cmp
je
shl
pop
lds
xor
pop
test
pop
sbb
call
popa
push
push
push
stos
data16
or
iret
adc
push
jne
or
lods
lods
stos
add
mov
fisttpl
push
add
jmp
xchg
mov
dec
mov
jno
xor
sbb
and
sub
push
mov
or
scas
pop
push
sbb
push
xchg
scas
ret
and
xchg
cmp
adc
bound
push
mov
scas
jne
pop
push
mov
faddl
dec
test
adc
outsb
mov
xor
and
nop
push
pusha
jg
pop
rolb
add
jo
sarb
dec
lsl
scas
xchg
lcall
sarl
ljmp
cmp
fucomip
mov
arpl
inc
cmp
insb
mov
adc
stos
adc
dec
xchg
movb
inc
ds
mov
jne
sbb
mov
mov
or
sbbl
push
jae
cmp
sarl
sarl
mov
dec
or
rcll
sub
xchg
enter
daa
add
jl
pusha
mov
sar
mov
push
jp
dec
and
inc
xor
fiadds
mov
xor
sbb
and
sbb
xchg
or
add
inc
movl
mov
push
and
add
out
jle
jecxz
add
lret
icebp
sub
add
push
sbbl
ja
loop
cwtl
xchg
mov
cmp
add
pop
lock
sti
mov
sahf
pop
add
adc
pushf
test
mov
les
mov
mov
mov
jo
lods
xchg
or
or
cmp
push
add
imul
leave
or
in
into
fists
cli
adc
mov
pop
add
mov
jne
mov
cmpsb
xchg
test
mov
push
aaa
cmp
test
sub
jl
lea
in
and
cs
push
or
hlt
mov
mov
mov
insb
cmp
insl
jae
sub
sub
clc
xor
jecxz
jo
add
dec
cli
mov
push
xchg
inc
xor
mov
int
movsl
mov
cli
jl
and
cmp
ds
sub
movsb
cmp
push
nop
or
sub
jecxz
test
pop
push
or
shlb
and
das
sahf
jg
sbb
mulb
call
add
fcompl
mov
movsl
ljmp
or
mov
sub
add
add
mov
movsl
call
in
push
daa
pop
xchg
add
jno
mov
add
adc
testb
sub
int
leave
push
stc
sbb
stos
add
pop
ljmp
ret
imul
or
push
push
enter
or
cld
pop
aaa
xor
pop
xor
or
or
andb
fbstp
fisubl
inc
mov
mov
xor
mov
push
outsb
jmp
push
dec
mov
push
je
pop
mov
xchg
add
call
add
push
dec
movsl
jbe
xor
mov
push
xor
mov
dec
add
xor
aam
outsl
idivl
push
pop
push
rorb
andb
outsl
inc
cmp
xchg
and
lods
jno
subl
call
punpcklbw
pop
insb
stos
jnp
add
push
aam
jmp
repz
jo
mov
les
pusha
cltd
mov
icebp
lock
mov
jge
jl
jo
add
roll
stc
pop
aad
push
das
sbb
inc
xchg
jns
inc
inc
pushf
mov
jae
sub
dec
add
mov
add
or
adc
and
popf
or
inc
mov
and
xor
cmp
mov
xlat
inc
repnz
jge
jg
dec
lcall
mov
popf
sub
adc
pop
jmp
sub
add
sbb
push
push
test
push
subb
stc
fs
mov
ret
add
test
push
pop
mov
inc
add
push
push
push
mov
icebp
xor
and
add
xor
fdivl
adc
std
pop
cmp
and
cmp
pusha
xchg
and
mov
out
and
and
repnz
jmp
imul
in
imul
push
push
push
mov
dec
pop
clc
pop
or
jae
sub
fldl
jecxz
lods
sets
add
xchg
fisttpl
dec
or
xchg
lret
pop
das
xor
mov
popa
inc
xor
jmp
mov
jne
fcoms
jnp
mov
lods
test
sbb
je
mov
pop
cmp
jl
xrstors
xor
pusha
or
jns
bound
call
inc
sbb
out
mov
repnz
inc
sbb
mov
cmp
andb
mov
add
repnz
mov
pop
or
mov
add
mov
in
xor
aaa
clc
xchg
ja
adc
and
je
mov
or
mov
pop
lods
filds
xlat
stos
bound
cltd
jns
popf
inc
pushf
inc
movsl
ljmp
xor
dec
and
lahf
lcall
xor
fists
das
ja
mov
ficoms
sub
dec
loop
add
out
pop
outsb
mov
and
adc
lret
nop
inc
or
add
pop
mov
popa
jge
mov
add
xor
jmp
add
mov
js
stos
in
adc
pushf
xchg
add
jne
mov
mov
jbe
push
stos
stos
add
sbb
inc
mov
sub
pop
shrl
lahf
xchg
mov
idivb
inc
rolb
ret
popf
and
or
inc
sub
mov
mov
jmp
shrl
icebp
cmp
dec
out
mov
mov
jl
adc
xor
adc
mov
cld
cs
popf
adc
xchg
cltd
nop
push
cmp
cs
ds
stc
icebp
add
add
inc
into
pop
dec
bound
add
imul
int3
aad
jb
or
add
push
popf
sti
mov
out
cmp
roll
xor
mov
and
cmp
pusha
push
inc
xor
add
jno
les
mov
pop
adc
dec
push
xchg
in
add
filds
sbb
ret
pop
inc
xlat
xor
addr16
ss
mov
add
popf
xor
add
xchg
ret
jle
cmp
pop
jne
in
call
add
xor
mov
fwait
push
hlt
mov
lcall
mov
scas
pop
jne
push
pushf
xor
adc
stos
xor
test
out
dec
mov
cmpsl
mov
pop
cli
push
in
in
cmpsb
lods
push
mov
dec
jmp
repnz
push
sbb
imul
pop
add
sub
ret
fcomps
cmc
or
or
sbb
enter
add
pushf
cmp
pop
xchg
push
or
xchg
out
lret
add
cld
inc
cwtl
repz
push
dec
cmp
repnz
add
jae
popf
adc
inc
push
repnz
mov
push
bt
daa
and
jle
cld
andb
js
mov
xchg
pop
add
mov
sbb
ret
jb
std
push
rcrb
sarl
sub
in
cs
frstor
push
inc
push
jbe
xchg
pop
mov
add
xchg
test
roll
mov
sub
push
jnp
test
and
lds
dec
dec
outsb
cvttps2pi
push
xchg
inc
push
add
sbb
js
inc
shrl
push
jp
cli
pop
in
inc
mov
aaa
pop
sbb
popf
push
cs
or
insl
mov
sbb
aas
popf
add
mov
push
aam
add
add
movsb
jmp
pop
aad
test
shll
mov
adc
test
test
add
movsl
mov
out
inc
and
call
gs
int3
pusha
pop
pop
hlt
fs
les
ror
sbb
add
mov
xlat
xchg
pop
out
lods
test
mov
mov
ja
wbinvd
xchg
push
sub
mov
loop
bnd
cltd
test
imul
inc
dec
cs
test
inc
pop
dec
subl
adc
imul
in
cs
add
xor
pop
scas
pop
mull
rclb
adc
jl
mov
bound
dec
adc
dec
mov
movsb
iret
pop
xchg
xchg
push
jl
dec
pop
pusha
and
or
sub
jmp
cwtl
subl
push
adc
dec
sbb
jbe
pop
hlt
cs
xchg
aaa
ja
dec
nop
fcmovnu
or
lea
std
std
cmp
add
orb
lock
mov
jecxz
xor
or
std
inc
sub
sub
or
shll
adc
ficomps
inc
mov
pusha
rclb
xchg
scas
stos
pop
daa
call
clc
xor
das
sub
inc
outsl
pushf
add
into
aas
or
popf
leave
sbb
push
mov
add
mov
jno
das
jg
loopne
pusha
xlat
outsb
pop
fcoml
js
ljmp
or
rolb
stc
mov
daa
jmp
add
bnd
scas
dec
xchg
mov
sbb
dec
sbb
repz
add
ret
aad
pop
mov
push
mov
inc
cmc
inc
jge
subb
aam
icebp
stos
fcmovne
mov
rclb
int
loopne
push
ficoml
pop
mov
imul
test
outsl
and
lea
std
jg
cmp
subb
lret
clc
xchg
popf
sbb
stc
push
call
out
dec
inc
insb
das
lods
inc
dec
rcrb
sub
adc
ja
mov
cmp
jmp
push
testb
sbb
pop
and
inc
mov
mov
popf
lds
in
mov
add
fbstp
in
mov
or
int
rorl
pop
dec
add
das
pop
jle
inc
lcall
sbb
mov
mov
jmp
lea
fs
mov
pusha
sub
popf
xchg
and
jl
pop
add
mov
xor
jns
cmpsb
push
inc
cli
fwait
pop
inc
enter
push
out
adc
xchg
iret
cmovge
or
mov
mov
sarl
mov
ret
das
push
imul
jo
sahf
add
mov
fsubr
pop
push
sbb
int3
xor
fcomi
int3
adcl
cs
mov
pusha
insl
pop
mov
add
inc
std
push
inc
adc
adc
xchg
mov
pop
dec
faddl
push
push
push
jp
mov
lods
and
pop
cmc
pop
dec
add
aad
sub
mov
loopne
cs
dec
xchg
jae
xor
and
inc
sub
pop
roll
std
lret
mov
orb
pop
mov
sbb
add
sar
mov
and
fisubl
xorb
jne
stc
mov
xor
int
sub
xlat
adc
adc
inc
out
std
lock
mov
add
push
pusha
cli
mov
cli
fwait
and
add
adc
jnp
or
fbstp
out
inc
pop
sub
or
lcall
fwait
lds
fucom
hlt
mov
inc
test
cld
adc
mov
pusha
pop
xchg
push
xchg
and
loope
pusha
jge
or
fbld
adc
sbbb
or
push
or
cwtl
add
mov
stc
pop
mov
scas
add
popa
mov
cs
dec
les
je
xchg
jb
mov
mov
push
popf
mov
or
adc
and
push
push
rorb
sub
loope
out
out
pop
das
nop
push
jl
jns
jle
sbb
mov
fbstp
adc
movsl
in
xchg
leave
add
xchg
in
repnz
push
cmp
fldt
stos
loop
push
sub
dec
sbbb
sbb
in
mov
pop
mov
fwait
mov
cwtl
mov
or
pop
dec
sub
or
mov
sub
xor
sbb
adc
scas
xchg
cmp
arpl
outsl
movsl
hlt
cld
inc
rorl
call
sub
in
push
adc
sub
xor
adc
pop
call
call
and
stc
xchg
xlat
enter
jo
pop
xchg
je
sbb
jno
push
jno
sub
cmpsb
aam
adc
cli
clc
cmp
imull
inc
mov
flds
jns
inc
xor
sub
out
lods
into
outsb
out
push
pop
jnp
lods
scas
jnp
mov
mov
pusha
mov
cli
imul
or
enter
mov
popa
jo
jle
ficomps
dec
push
push
lahf
fs
xchg
call
xchg
loop
xchg
cmpl
inc
adc
mov
pusha
mov
das
jnp
xchg
movsb
scas
lret
out
xchg
ds
adc
xlat
mov
lea
rcl
jns
pop
negl
frstor
ret
jecxz
cmp
cli
roll
sbb
pop
pop
aaa
sbb
cld
jno
mov
and
stc
lcall
mov
and
adc
lret
add
int3
sub
cmpsb
lahf
in
enter
in
iret
push
push
sub
or
in
xor
mov
shrl
dec
xchg
popa
sub
adc
aad
popa
insl
js
jecxz
cmp
pop
lods
pop
sbb
ljmp
in
call
cmpb
inc
jno
push
jl
pop
mov
xchg
jmp
mov
dec
repnz
jns
inc
sub
hlt
xor
cmp
je
dec
movq
shlb
xor
syscall
leave
dec
lahf
or
xlat
cmp
out
sub
and
pop
insb
xchg
mov
cmp
push
loop
adc
jnp
sti
int3
push
ljmp
or
mov
xchg
sbb
mov
mov
inc
pop
or
mov
loopne
xor
push
in
xchg
rolb
inc
dec
hlt
xor
inc
jns
cli
call
loop
sti
adc
test
mov
adc
or
shrl
mov
idivb
pop
nop
shll
lcall
mov
mov
inc
adc
push
push
sbb
test
or
in
or
lea
mov
fimuls
sbb
jmp
mov
and
add
inc
mov
rolb
xchg
in
jecxz
add
mov
xlat
dec
mov
out
or
ret
xor
out
jae
mov
daa
out
inc
sahf
jg
jno
scas
jmp
dec
roll
cmp
andb
add
popa
push
icebp
mov
std
push
shl
popa
mov
aam
je
pusha
sbb
xchg
mov
push
push
and
mov
jle
lds
repz
adc
sbb
jg
inc
lods
jbe
adc
xchg
ss
subb
add
cmp
sub
sub
mov
lds
mov
add
jne
clc
sti
adc
movsb
test
sbb
subl
ljmp
xor
mov
pusha
movsb
mov
movb
pop
in
fistl
gs
sub
push
popf
test
pop
add
dec
into
jl
mov
outsb
bound
jno
loopne
and
push
mov
push
ljmp
or
shl
xchg
insb
and
insl
nop
movsl
in
xchg
inc
or
push
popf
inc
iret
lock
popf
or
fiadds
mov
and
rcrl
fwait
jb
stc
fucomip
incb
and
push
into
mov
popf
adc
insl
add
ss
mov
add
xorb
into
push
lods
pop
adc
push
push
repnz
or
push
addr16
nop
fwait
std
ret
sub
xchg
sti
roll
clc
sbb
xchg
dec
mov
pop
loope
jl
pop
mov
mov
gs
and
popf
and
mov
mov
mov
push
loopne
xor
icebp
mov
add
fstpt
hlt
or
ficompl
lea
cmp
gs
leave
shll
xchg
add
fnstsw
rcrb
cmc
or
sub
lods
jmp
xchg
xor
int3
jmp
shlb
add
ljmp
mov
in
jl
lret
nop
jecxz
pop
push
add
mov
cld
stos
imul
xchg
jge
cmpsl
or
dec
or
jnp
xchg
push
add
and
scas
pop
out
jo
mov
inc
push
insl
add
stc
das
xor
lods
jge
push
push
and
mov
add
jl
sbb
insb
andb
in
fidivrl
sub
xchg
stos
cmpsl
mov
or
ret
jle
popa
xchg
pop
sbb
aas
dec
fildll
dec
dec
pop
dec
in
stos
clc
xchg
mov
push
jl
push
or
cmp
add
repz
adc
pop
add
sbbb
sub
xor
sbb
sbb
lods
ljmp
call
iret
xlat
cmpsb
jno
add
pop
xor
jo
adc
addl
or
bound
scas
inc
or
outsb
adc
pop
pop
push
push
sub
enter
popf
popa
add
dec
sub
dec
add
jle
pusha
out
mov
jl
xor
mov
iret
sbb
cmpsb
and
loop
cli
xchg
cli
out
dec
xchg
or
imul
mov
popa
inc
fsubl
cli
cmp
pop
push
mov
xchg
movsb
inc
pop
mov
or
or
pop
mov
add
lods
cmp
pop
pop
aam
sbb
call
mov
dec
ret
pop
dec
cld
lods
or
sbb
cltd
repz
push
adc
inc
clc
jmp
mov
call
cld
test
cli
ficomps
pop
mov
movsl
or
stos
mov
out
xchg
or
push
hlt
call
jo
loope
xchg
add
pop
mov
addl
jnp
mov
pop
call
dec
inc
stc
mov
mov
pop
xchg
xor
ja
iret
addr16
jge
pop
jbe
inc
lahf
inc
fisubs
dec
add
ret
sti
pop
adc
rorb
insl
jmp
outsb
adc
adc
bound
cwtl
add
les
sub
je
push
lahf
leave
jl
or
out
cmp
stos
rorb
mov
inc
cs
jae
sbb
fsubrp
hlt
dec
out
dec
xor
hlt
ret
hlt
add
push
jmp
std
fisttpl
hlt
out
mov
pop
sub
xor
dec
pop
das
pusha
xlat
inc
xor
and
es
adc
mov
and
sub
ret
cs
inc
popa
call
xchg
mov
ret
pop
stos
xchg
push
in
sub
daa
xchg
mov
mov
or
jmp
divl
divb
lcall
jae
mov
add
roll
call
mov
pop
jbe
jge
dec
sub
inc
jb
popa
call
insl
lret
cmpsb
sbb
imul
hlt
test
daa
jbe
mov
xor
adc
jmp
jb
add
lret
xchg
sub
decl
lcall
add
popa
cmp
add
icebp
xchg
and
ds
add
mul
je
xchg
xor
dec
mov
mov
and
xchg
inc
cld
jl
add
lods
push
loopne
and
mov
imul
mov
popf
or
sub
add
rorl
adc
sub
add
lret
cmp
rcrb
mov
push
mov
push
mov
test
rol
push
aad
xchg
push
test
sbb
sub
xchg
sbb
mov
mov
in
movsl
out
mov
jmp
ja
scas
adcb
sub
sbb
popa
lahf
pop
lret
pop
jnp
or
push
shrb
mov
lock
dec
leave
jl
loope
out
cli
add
inc
inc
jl
xor
push
int
or
mov
sub
sub
xchg
fstl
fisttpll
lds
or
rcr
dec
add
and
popf
and
mov
xchg
in
out
inc
push
sti
pop
inc
addb
int
mov
xor
xchg
rcll
movsl
push
aaa
mov
pop
popf
dec
inc
adc
mov
add
push
cmpsb
bound
aam
mov
pop
out
sub
mov
lods
popf
xor
fistl
mov
test
inc
jle
lock
push
dec
jo
std
add
insb
xor
xchg
xchg
je
dec
fisubrl
das
mov
leave
sbb
je
dec
loop
subl
inc
repnz
ljmp
mov
clc
jmp
std
add
nop
cmp
fldpi
sub
dec
push
mov
fldl
push
add
sbb
jg
orb
gs
jb
cltd
cmp
and
fstps
jo
pop
popa
fisttpl
daa
add
xchg
inc
fisubl
mov
push
sub
xchg
test
leave
aam
lret
add
lea
add
daa
push
inc
mov
cmpsb
cmp
mov
push
adc
add
nop
xchg
fdivl
and
mov
bound
fdivrp
add
adcb
cmp
dec
mov
sbb
add
hlt
sbb
nop
fstpt
jbe
lret
ret
cmp
push
mov
adcb
loopne
nop
mov
lods
fwait
nop
mov
faddl
jo
add
and
adc
push
dec
stc
cmc
test
add
sbb
mov
push
addl
pop
pop
mov
mov
lret
aad
scas
fiadds
xchg
test
and
sub
popf
xchg
in
movsl
and
jae
push
and
adc
pop
outsl
push
add
xor
mov
mov
test
inc
js
and
repnz
push
int
inc
push
mov
sbb
and
add
outsb
xchg
sub
adc
xorb
outsl
pop
xor
push
sbb
add
mov
cmp
cwtl
jno
pop
outsb
fsts
es
xchg
imull
jb
mov
sub
sbb
adc
xor
mov
push
fists
add
xchg
cli
mov
aad
pop
or
mov
pushw
push
in
lret
in
addr16
insl
ljmp
or
mov
jae
pop
push
xor
clc
xchg
sbb
adc
repnz
mov
push
jnp
jns
movsl
jne
and
mov
out
mov
xor
pop
popa
xchg
mov
dec
mov
and
add
jg
push
jne
and
pop
sbb
mov
jmp
dec
out
repnz
jo
movsb
lds
cmpsl
jne
push
ds
enter
mov
pop
pop
int
mov
sub
loop
addr16
mov
pop
fcmovnu
insb
adc
adc
pop
je
pop
or
jmp
lods
xchg
jp
or
add
fisttpl
es
jnp
xor
push
push
mov
add
or
mov
push
stos
dec
xlat
mov
jecxz
xchg
pushf
or
mov
js
mov
xorl
adc
and
jecxz
cmc
fldcw
and
cmpb
hlt
loop
dec
test
add
lods
sbb
push
sub
sahf
scas
popa
pop
adc
mov
aam
insl
cmp
add
pop
mov
leave
in
mov
xchg
add
in
dec
daa
js
add
jmp
lock
xor
pop
jo
int
and
mov
mov
test
fldcw
icebp
and
xchg
sar
add
adcl
or
sub
rcrl
daa
fwait
aaa
shlb
xchg
jno
in
daa
loop
pop
dec
stos
pusha
mov
xchg
fisttpll
test
jnp
add
out
add
mov
punpckhwd
xchg
leave
pop
mov
dec
jge
cmp
pop
mov
mov
test
repz
in
mov
adc
call
int3
and
fimuls
sti
ljmp
sbb
sub
pushf
test
loopne
xor
mov
nop
sahf
push
cmpsb
roll
rorl
mov
loope
add
leave
xor
and
mov
sub
jno
mov
cmc
mov
cmpsl
aaa
test
lods
jae
add
test
popa
pop
jno
push
or
and
jg
adc
imul
mov
out
mov
adc
subb
add
pop
add
loop
or
sbb
leave
out
sub
push
rorb
push
add
incl
lret
jle
iret
pop
push
repnz
mov
and
popf
aad
adc
jno
clc
xchg
les
push
push
add
lea
das
adc
add
fs
xchg
xchg
shl
sub
sub
adc
sub
lock
jns
outsb
rorl
sub
sbb
jmp
loop
pusha
mov
repnz
call
lea
or
js
push
popa
data16
sbb
mov
cmpsb
mov
cmpsl
jg
sbb
add
inc
sahf
stos
pop
push
push
push
and
fidivrs
cld
or
jmp
xor
and
adc
sub
fisttps
inc
xlat
cwtl
dec
add
int3
stos
cmc
add
add
mov
adc
xchg
push
rorb
xchg
mov
dec
je
ret
outsl
shll
mov
pop
sbb
or
adc
popa
hlt
add
add
ss
popa
or
add
jge
xchg
cli
cmp
jbe
xchg
fbld
cmp
aam
in
pop
rcll
clc
pop
bound
cmp
mov
in
scas
mov
add
jo
lock
mov
hlt
adc
inc
push
in
mov
jo
cmp
add
stc
das
mov
andb
loop
pop
int3
ljmp
xchg
mov
pop
les
shlb
push
rcr
jl
xchg
test
call
or
inc
mov
imul
in
pop
dec
or
movsl
sub
outsb
adc
sub
and
pusha
movsl
push
adc
jp
stos
sub
xor
stos
jb
or
xorl
dec
pop
sbb
fs
add
in
repz
loope
cmp
and
pushl
xchg
pop
inc
or
and
hlt
xorl
mov
sbb
std
and
gs
cmpsb
shrl
pop
repnz
aam
sti
mov
and
push
or
mov
jg
or
or
inc
fisubrs
sub
lock
add
shlb
and
sbb
mov
out
call
cld
cmpsb
lret
lock
in
cs
out
mov
sub
lret
lea
mov
sbbb
gs
ret
outsl
push
enter
inc
sbb
movsl
push
jp
dec
pop
subb
movsl
or
jbe
aad
faddl
sub
push
xchg
push
pusha
inc
lcall
push
sbb
fmull
push
inc
and
jne
test
aas
jle
push
dec
xor
pop
fwait
pop
adc
out
mov
out
nop
jno
add
pushf
call
insb
xor
roll
insl
pop
inc
popl
mov
push
mov
test
movsb
mov
cs
lret
lods
rep
sbb
mov
mov
jbe
fdivrp
lcall
add
pop
mov
xor
xchg
xchg
aam
pop
xchg
mov
xchg
in
out
xchg
sbb
cli
call
neg
push
cltd
enter
enter
xchg
scas
ja
and
jno
shlb
push
scas
jmp
mov
mov
push
popf
dec
nop
mov
pop
sub
shrb
ret
push
sbb
pusha
ret
add
nop
mov
mov
xchg
adc
lds
repnz
lods
hlt
mov
out
js
xchg
xchg
xchg
and
das
lret
fldl2t
jne
xchg
xor
add
mov
ja
inc
repz
cmc
sub
scas
imul
push
xor
adc
mov
cmp
sub
popf
jo
nop
or
jmp
je
dec
and
mov
adc
bound
sbb
xlat
adc
dec
test
xchg
out
dec
stc
loop
push
mov
and
dec
or
test
sub
jmp
pop
dec
mov
mulb
cmpsb
push
add
fstp
testb
idiv
mov
ljmp
jns
imul
movsl
mov
pop
pop
loop
adc
daa
xchg
xor
shlb
cli
or
jp
push
int
dec
mov
sub
jno
mov
pop
mov
iret
jae
mov
jecxz
clc
sub
dec
outsb
mov
xchg
mov
dec
mov
loopne
stc
sbb
pop
pop
rol
loopne
push
cmp
jne
mov
mov
sahf
inc
aam
cmp
jae
or
xor
jns
cmpsb
enter
mov
sub
cli
or
add
hlt
mov
xlat
fpatan
mov
mov
and
mov
outsl
sbb
dec
xchg
out
shl
outsb
push
xchg
mov
aam
sbb
js
je
daa
fists
dec
imul
adc
scas
mov
sbb
dec
push
stc
pop
sahf
out
mov
xchg
pop
in
and
faddl
mov
xor
pop
nop
cmp
xchg
push
dec
sub
add
fdiv
int
out
imulb
stos
pop
aad
pop
or
add
xchg
ret
fiadds
add
pop
or
rorb
dec
sub
xchg
pusha
cmp
sub
push
add
mov
add
mov
pop
gs
mov
push
inc
inc
movsb
pushf
jb
popf
pop
dec
adc
scas
lcall
lret
unpckhps
in
cmp
std
push
cld
adc
or
mov
pushf
repz
into
sbb
imul
bound
leave
clc
outsb
mov
mov
divb
mov
pusha
aam
mov
call
dec
lret
mov
je
pop
add
lock
vmaxps
and
pushf
add
mov
or
test
and
jmp
icebp
pop
daa
sbb
mov
add
add
dec
push
aas
xchg
add
mov
fiadds
mov
popa
lret
adc
iret
roll
roll
incb
pop
rcll
mov
mov
mov
pop
xchg
xchg
pop
add
ret
loop
jle
icebp
lods
in
sub
mov
nop
and
popa
xchg
out
ja
adc
and
cli
insb
fsubl
fmul
sbb
mov
xor
adc
mov
nop
xchg
jae
js
dec
add
mov
scas
jnp
shll
jge
add
sub
js
loope
cmpsb
inc
lock
data16
pop
imull
and
add
sub
xor
in
inc
int
lret
or
mov
dec
rcll
daa
scas
xchg
xor
jb
fiadds
lds
mov
daa
jp
jne
mov
sahf
adc
rorl
pop
test
test
fiadds
lods
arpl
es
xchg
pusha
jmp
xchg
mov
dec
popa
leave
jp
jne
jp
insb
in
jnp
loope
or
jmp
mov
insl
or
ja,pt
scas
fmuls
cmp
xchg
lea
lret
and
daa
jne
sbb
jp
fsubrs
mov
push
pop
aad
fsub
and
mov
push
jo
xor
pop
divl
in
xor
cmp
movsb
mov
aam
pop
xchg
mov
adc
or
mov
xchg
adc
push
data16
lock
loopne
add
arpl
pop
adc
sub
and
roll
test
push
sarl
test
and
stc
sub
call
xchg
addb
addb
pop
or
repnz
xchg
les
xchg
mov
dec
xchg
repnz
jno
mov
xchg
ret
jmp
rolb
mov
inc
pop
das
push
pop
xor
sbb
add
dec
and
xor
cmpsb
mov
jl
or
das
inc
pop
in
inc
mov
or
sti
xor
push
mov
dec
ret
addr16
jmp
add
push
imul
jle
mov
movsl
les
dec
ds
and
orb
shl
xchg
add
and
out
add
jmp
xchg
movsb
inc
repnz
dec
push
cmp
or
push
mov
cmp
loop
mov
xor
push
add
cmp
inc
cltd
fistpll
rep
push
xor
mov
insl
mov
pop
inc
test
sahf
movsl
jae
jo
leave
dec
or
jae
jo
ja
xchg
xchg
add
aaa
jge
test
ja
testl
dec
ljmp
cmp
xchg
js
dec
or
pushf
loopne
inc
mov
mov
jno
and
fsubp
fmul
push
pop
fstps
add
inc
adc
pop
inc
push
ja
push
pusha
std
or
pop
jb
outsb
adc
lret
inc
push
inc
adc
mov
in
sbb
pushl
mov
xchg
sub
adc
and
fs
mov
sub
jmp
jecxz
cs
repnz
mov
repz
mov
adc
push
rcrl
mov
pop
roll
popa
xor
mov
das
pusha
or
movsl
ret
popf
jge
xchg
or
lods
aas
xor
dec
sub
pop
fisubs
pop
and
outsb
std
testb
cltd
sub
add
nop
push
lcall
push
jbe
ja
push
push
pop
stos
lret
nop
div
in
popf
std
aaa
adc
or
inc
sbb
and
push
sub
sub
test
ja
ss
lock
das
mov
shll
jge
mov
dec
sub
cmp
out
xchg
mov
gs
fsubl
daa
jmp
adc
repz
clc
mov
pop
mov
mov
test
pushf
push
and
rclb
das
pop
cmp
xor
xor
outsb
cmpsl
xor
movsb
ds
call
and
add
lret
xchg
ja
test
push
faddl
xchg
inc
adc
xchg
mov
xchg
adc
mov
xchg
cmp
add
mov
push
inc
mov
add
mov
dec
in
out
cwtl
cmc
push
movl
std
inc
pop
add
bound
sahf
jecxz
adc
add
test
aaa
mov
add
addr16
xchg
int3
ret
sti
add
pusha
pop
mov
push
jp
inc
or
in
xchg
popf
loope
add
or
repz
sbb
push
mov
inc
add
or
sbbb
mov
pop
xchg
inc
and
cltd
clc
or
xchg
faddl
stos
mov
stos
jae
pop
xor
int
xchg
outsl
and
popf
xor
push
lret
sub
out
cltd
and
xchg
aaa
xor
push
pop
inc
aad
fsubl
dec
out
sbb
orb
ja
fsts
cmp
push
outsb
xor
pop
push
sub
pusha
mov
inc
add
mov
rcrl
cmp
out
mov
addl
out
loopne
lods
and
lret
int3
dec
add
cmc
mov
bnd
xchg
xor
out
lret
clc
pop
inc
pop
add
and
std
xor
mov
mov
sar
push
outsl
mov
pop
inc
mov
xor
push
dec
lods
in
and
mov
xor
mov
dec
lds
mov
fdiv
jae
fucomi
pop
pop
sbb
or
movb
sbb
or
push
insb
mov
push
push
dec
scas
xlat
mov
cwtl
pop
mov
xchg
jge
pop
lret
mov
push
ret
lret
cmc
or
pop
mov
inc
push
lods
or
and
daa
mov
nop
rorb
pop
sbb
sti
add
lds
push
stos
sbb
mov
jle
bound
push
push
outsl
mov
pop
mov
cmpsb
jle
lods
imul
dec
xchg
jmp
mov
popa
loop
sub
imull
mov
xor
pop
xchg
xchg
or
sbb
jmp
mov
mov
out
adc
xor
loop
mov
ja
pusha
arpl
scas
cmp
mov
js
mov
cmp
das
in
aam
xchg
stc
outsb
mov
ljmp
xchg
outsb
mov
inc
mov
in
mov
fcoms
mov
jl
add
xor
lds
mov
orb
push
sub
push
outsl
rcll
add
inc
leave
add
and
adc
mov
out
nop
clc
add
popa
jmp
pusha
sub
mov
sub
mov
addr16
loop
cmpl
add
jno
insb
das
rol
popf
fcmovnbe
pop
into
daa
or
push
fmuls
ficompl
xchg
sbb
dec
push
les
add
and
add
lahf
pop
jns
sub
lea
mov
jge
and
or
inc
repnz
movsl
dec
movsl
inc
dec
mov
xor
mov
jmp
or
lock
repz
imul
cwtl
fisubl
data16
push
push
iret
icebp
lods
cmpsl
scas
or
out
pop
sarb
mov
lret
imul
outsb
andb
shlb
and
jmp
adc
mov
add
cmp
push
add
hlt
int3
xor
call
outsb
dec
pop
test
or
out
pop
cwtl
das
fiadds
sub
xlat
shlb
aam
loope
xchg
mov
xorl
and
mov
add
push
pop
pop
stos
sub
push
fsubrl
sbb
and
adc
add
sti
sbb
xchg
mov
pop
jo
jecxz
jge
insb
xchg
fcomps
shlb
mov
jns
mov
xchg
icebp
jle
mov
and
loope
mov
arpl
bound
icebp
dec
pop
out
mov
xor
push
or
sbb
push
adc
dec
mov
and
aas
cmc
aad
ds
and
mov
lcall
popa
dec
in
mov
sub
or
aas
mov
mov
and
mov
call
pop
adcb
enter
sbb
mov
add
out
cmp
dec
enter
add
lods
adc
pop
imul
and
popf
mulb
bound
xor
test
or
push
mov
pusha
xchg
jmp
loop
int3
push
ja
jns
ljmp
mov
sub
or
data16
lods
add
jle
sub
add
rorl
jp
sbb
test
shlb
push
jo
pop
inc
and
push
or
dec
lea
mov
or
dec
scas
aam
cmp
xor
inc
jns
mov
and
pushf
ja
add
mov
pop
shlb
xchg
lds
xchg
adc
fldenv
push
into
pop
xchg
adc
mov
fimuls
popa
push
lret
stos
jmp
mov
fildl
adc
dec
popf
daa
or
add
pop
pop
fs
mov
push
or
cld
fsubrl
pusha
cwtl
add
xchg
sbb
out
lcall
cmp
fimuls
xor
stos
adc
mov
test
mov
mov
pop
cmpsl
jno
imul
ret
xor
leave
add
sub
out
sbb
faddl
mov
loop
je
mov
hlt
fidivl
ljmp
ja
clc
sbb
and
jecxz
mov
mov
sbb
and
dec
push
inc
jne
push
pop
xchg
rcr
loope
xor
add
inc
xchg
dec
jp
inc
leave
adc
bound
push
xchg
xchg
dec
xchg
jg
addl
lods
hlt
mov
adc
pop
outsb
push
or
adc
ja
lret
outsb
ret
pop
repz
cmp
xchg
test
lea
xchg
pusha
cmc
and
and
testl
in
xchg
sbb
aaa
pop
popa
sbb
and
add
jne
add
push
and
mov
dec
xlat
add
mov
nop
pusha
idivl
jb
cwtl
dec
lock
mov
testb
and
dec
dec
mov
fcoms
add
std
adc
mov
xchg
and
mov
call
xor
push
and
push
lahf
push
push
cwtl
rcll
pop
push
inc
in
dec
push
pushf
add
stos
xor
sub
sti
out
in
mov
jp
push
fsubrl
fadds
sbb
push
rcl
and
sub
or
frstor
mul
les
int
inc
imul
out
cltd
jb
mov
add
test
out
inc
aam
testl
mov
add
jno
push
aas
mov
mov
psrlq
adc
push
scas
xor
mov
push
mov
xor
add
xchg
jl
dec
daa
push
jecxz
jbe
mov
bound
xor
push
mov
imul
xchg
add
rclb
xchg
jle
daa
cmp
lods
xchg
mov
or
inc
icebp
jg
dec
cld
int3
out
pop
mov
mov
and
pop
nop
jge
inc
pusha
push
pushf
inc
int
or
adc
jnp
xchg
hlt
or
jmp
popa
inc
jne
xchg
roll
test
stos
sbb
aad
mov
sub
fldenv
mov
jecxz
mov
jne
xchg
fstps
test
sub
shll
movb
call
jno
ret
in
and
push
insb
fwait
dec
xor
test
outsl
jp
pop
lea
int
cmp
mov
xchg
sub
testl
cmc
pop
pop
sbb
or
shl
add
add
ja
add
mov
lods
jnp
jae
cmp
xchg
push
gs
add
jno
cmp
mov
daa
xchg
push
push
mov
inc
or
dec
repz
jae
xor
cld
push
dec
mov
loopne
mov
aam
and
or
add
movsb
in
mov
or
lea
jg
lods
or
xchg
leave
push
icebp
cmpsl
nop
leave
jo
add
xor
cmp
xchg
aas
sbb
jno
sub
les
outsb
cmp
mov
notb
cmp
lods
jae
mov
xchg
cmc
mov
dec
or
cmpsb
mov
push
stos
xor
nop
add
cmp
pop
add
jl
or
mov
lea
test
jecxz
xchg
movsb
mov
and
or
and
insb
pop
and
add
icebp
mov
dec
outsl
roll
and
scas
test
test
mov
arpl
xlat
test
jo
test
dec
add
repz
inc
in
ljmp
popa
xchg
mov
jb
add
outsb
xchg
leave
mov
fdivrs
push
inc
outsl
stc
add
xor
lock
ds
and
add
pusha
mov
and
mov
add
in
shll
adc
aam
xchg
mov
jno
xchg
push
add
mov
popa
mov
inc
fst
ss
ja
adc
into
lods
mov
mov
push
loop
nop
lods
push
push
jl
out
add
adc
cli
test
dec
outsb
outsl
dec
ljmp
push
mov
jne
jbe
pmulhw
enter
add
and
call
lea
push
adc
mov
aaa
rcrb
aam
jb
pop
rorl
xchg
or
pop
xchg
and
cli
bound
pop
push
bound
pop
xor
repz
mov
lods
push
fisttpll
mov
stc
jno
jle
jl
mov
and
shll
adc
or
movsb
andl
inc
add
rclb
cmpl
pop
nop
mov
lea
cli
jge
push
inc
scas
push
mov
push
movsb
pop
aas
popf
dec
mov
imull
cmp
jmp
loope
mov
aad
push
stc
or
repnz
mov
mov
add
cwtl
insl
xor
cmp
sbb
in
in
mov
or
in
dec
hlt
fdivrs
pop
add
xchg
mov
das
mov
add
adc
sub
push
sti
push
aaa
mov
xor
test
cmpb
int
or
lret
xor
pop
call
add
mov
shrl
das
hlt
xchg
inc
stos
push
add
cmp
xchg
adc
iret
xorb
fwait
jg
or
or
mov
and
add
mov
nop
push
xlat
xor
jnp
das
shll
mov
or
or
nop
mov
dec
lock
pusha
sub
add
mov
jmp
cli
cwtl
adc
mov
call
xor
mov
addb
xchg
dec
dec
leave
sub
add
stos
imul
sbb
dec
sub
es
add
mov
ljmp
lds
pop
add
push
ljmp
out
repnz
dec
add
push
jmp
inc
push
or
nop
xor
or
daa
push
dec
add
and
dec
adc
outsl
loopne
mov
std
das
arpl
sub
popf
push
mov
add
nop
adc
sub
in
fdivrl
mov
jno
in
sbb
sbb
dec
ljmp
add
fcomps
xor
test
repz
push
mov
and
add
or
mov
and
push
jge
jl
xchg
mov
sub
pop
out
gs
adc
enter
js
jp
jbe
dec
sti
movb
pop
add
add
rorb
or
stc
outsl
and
mov
jb
sub
jne
ficomps
inc
jnp
add
pop
aas
iret
mov
sub
mov
xchg
push
mov
jmp
outsl
push
pop
clc
jne
lahf
rorb
sub
dec
mov
or
jbe
and
mov
lods
addl
addl
add
sbb
push
adc
shl
scas
sub
push
imulb
cld
jmp
fsts
addr16
dec
add
rclb
iret
push
outsb
xchg
mov
aam
rorb
dec
je
dec
fst
push
sbb
aam
sub
ficoml
xor
sbb
popa
or
jae
pop
ficoms
or
add
adc
shlb
in
push
xchg
pop
add
sbb
mov
in
das
dec
call
stos
and
xor
mov
xchg
loopne
and
cmp
add
test
or
adc
cld
or
ds
sub
sub
jl
outsl
das
dec
repnz
xchg
test
out
loopne
push
arpl
mov
mov
in
inc
call
mov
xlat
cmpsb
add
orb
cmp
loope
or
pop
inc
adc
mov
sub
or
pop
popf
mov
mov
call
adc
jae
leave
aaa
push
pop
fs
adc
cmc
mov
lods
scas
inc
mov
add
mov
cltd
jns
int
adc
sub
push
sbb
jmp
lea
jp
push
lret
dec
or
movsl
jne
jnp
add
xchg
add
iret
stos
int
xor
cmp
adc
fildll
outsl
push
cmp
pop
pop
add
jo
idivb
in
cmc
pop
cmp
leave
push
bound
sahf
shlb
dec
cmp
xor
push
aam
dec
and
cmpsb
movsb
movsb
pushf
insl
push
das
adc
popa
shll
and
fisubs
sbb
xchg
pop
mov
dec
mov
jmp
xchg
pop
fstps
adc
mov
pop
mov
stos
jnp
add
aas
mov
push
clc
sub
or
sub
adc
aaa
pop
fcomps
add
repz
xchg
mov
outsl
dec
add
pop
mov
orb
jmp
imul
jo
adc
lock
and
xor
cmp
jmp
cmpsb
push
cmpsb
push
js
scas
adc
ffree
icebp
add
jmp
mov
add
xchg
or
xchg
jl
hlt
mov
dec
aaa
mov
push
jne
add
fs
jle
push
call
movsb
mov
aas
pop
xchg
add
adc
out
pop
aas
mov
add
xchg
sub
cmc
int
loopne
lret
pop
mov
js
push
add
lahf
push
js
push
mov
nop
cmp
movsl
stos
les
cltd
ss
dec
add
stc
fdivrs
inc
out
pop
rcll
and
xchg
enter
mov
mov
jle
push
mov
and
ret
mov
stc
add
mov
pop
ja
mov
mov
popf
loope
jnp
push
jnp
add
jbe
movsl
push
leave
pop
add
addr16
or
sub
pop
adc
fs
mov
xchg
test
test
inc
xor
xor
int3
push
and
dec
scas
inc
test
mov
into
mov
inc
xor
mov
sub
bound
ja
lock
test
leave
mov
mov
xchg
insb
pop
cmp
inc
xorl
sub
mov
ret
pop
bound
adc
les
add
hlt
or
insl
call
adc
adc
mov
cmp
lret
stc
lret
pop
and
mov
pop
mov
xor
sbb
sbb
lock
and
in
sub
fidivrl
test
adc
mov
jg
mov
lock
std
leave
ljmp
push
gs
fcoms
mov
add
and
fnsave
xor
mov
dec
push
movsl
push
into
pop
add
out
negl
pop
mov
xchg
in
stos
pushf
clc
sub
sbbb
pop
xchg
out
xor
add
cmpsb
jo
fnsave
inc
push
jl
pop
and
or
lods
mov
xor
or
sub
add
mov
faddl
pop
push
int
outsb
adc
xchg
dec
push
fcmovu
enter
mov
lret
repnz
inc
mov
add
gs
or
dec
aad
pop
pop
push
sbb
test
cmp
fstl
gs
push
popa
sti
shrl
scas
out
lock
cmp
addr16
rolb
sbbb
in
jge
es
xor
push
mov
and
addr16
xchg
sbb
mov
sub
sbb
push
push
xchg
jle
pop
jne
test
bound
mov
add
aad
sbb
add
mov
rolb
cmp
filds
xchg
leave
cwtl
xlat
out
xchg
and
or
cmp
pop
call
sub
xor
pop
dec
fldenv
lods
loopne
shll
out
imul
enter
cld
ret
jnp
lret
adc
mov
pop
or
mov
adc
and
mov
add
pop
fbld
add
outsb
andl
jns
dec
or
das
stos
mov
xchg
add
add
test
mov
pop
shr
add
push
push
ret
mov
add
stos
push
jl
lds
loopne
scas
push
mov
rcrb
ljmp
test
sbb
arpl
cmp
arpl
adc
inc
add
movsl
shll
jge
stos
add
dec
sbb
popa
pusha
cmp
push
sbb
sub
inc
dec
js
cmp
cmp
cld
aas
and
jb
outsl
add
cmpsb
sbb
mov
movsl
cmp
xchg
js
rcrb
imul
and
scas
push
pop
xor
sbb
test
shl
les
repnz
sub
das
popf
add
push
icebp
jo
lods
dec
sbb
or
test
mov
xchg
aam
and
adc
cs
cmpsb
or
add
pop
add
aas
xchg
roll
arpl
in
sub
cs
xchg
lcall
push
addb
lahf
imul
lds
or
into
pushf
cmp
shl
cmp
loopne
xchg
rclb
jmp
pop
rclb
fcoms
mov
dec
rcrb
fstps
jp
out
mov
push
xchg
add
psrlw
push
cli
push
push
xchg
push
add
imul
mov
aas
fcomip
mov
sub
cmc
int3
inc
pusha
inc
mov
int
push
and
jge
pop
add
push
sti
cmp
sub
push
sub
cmc
xchg
enter
test
mov
jge
inc
jge
daa
pop
mov
pop
lcall
dec
mov
adc
fbld
sbb
into
sbb
out
jg
mov
inc
xchg
daa
stos
repz
scas
add
sub
jae
rcll
mov
jle
push
int3
mov
outsb
out
imul
lods
enter
push
xor
xor
pop
shl
push
sub
nop
leave
adc
add
xchg
mov
add
ja
aad
xlat
add
movb
loop
xor
push
sub
test
jp
add
xlat
push
loope
jge
push
add
in
add
cmpsb
pop
push
in
out
rdpmc
es
js
adc
fidivl
imul
push
es
lock
les
push
jp
add
and
std
sbb
mov
repnz
or
jp
xor
xchg
add
and
loop
pop
lds
jmp
stc
lock
aas
and
jge
cmp
repz
or
jne
aaa
xor
jbe
add
push
cld
jno
in
cli
xchg
fstpt
cli
subb
nop
dec
add
fsubrs
add
es
and
xor
rcr
js
aam
stc
or
add
cmp
sbb
pop
lock
adc
xchg
idiv
rclb
add
cmp
adc
mov
jl
add
andl
cltd
mov
cmp
scas
sub
push
jbe
adc
xlat
repz
sub
xor
inc
cmp
testl
lock
fstpl
daa
xor
push
sub
pop
and
add
mov
fs
sub
dec
mov
test
rorb
add
pusha
fprem1
rorl
add
cli
adc
xchg
mov
push
ljmp
lret
jno
arpl
jb
sbb
mov
pop
or
and
dec
xchg
add
scas
adcb
test
fwait
in
movsl
aam
outsb
and
inc
movsb
ds
ja
test
jge
js
js
lods
add
cmp
push
jno
mov
daa
movd
andb
imul
mov
addr16
add
dec
insb
mov
add
mov
push
es
fsubrs
dec
cmpsl
cmpsl
mov
add
movsl
fs
cltd
lods
and
add
pop
push
sbb
icebp
sub
sbb
ss
jecxz
push
jl
ja
or
mov
fiaddl
and
arpl
jle
jbe
pusha
lret
sub
mov
push
test
push
clc
cmp
cmp
push
int
add
sti
dec
push
xor
test
pop
sbbl
sbb
jl
cmp
orb
scas
sub
adc
xor
mov
push
idivl
jle
popf
sbb
pop
add
xchg
pop
arpl
lds
cwtl
clc
push
insb
jns
loop
add
pop
mov
push
inc
nop
sbb
or
ds
loop
out
inc
xorb
add
test
jl
push
cltd
ljmp
push
pop
or
es
dec
icebp
data16
sbb
daa
enter
xor
aas
or
fisubl
sbb
insl
ljmp
or
decb
cli
push
sub
add
nop
out
xchg
jno
aam
sbb
sub
sbb
int
ja
or
out
xor
inc
aas
add
and
jecxz
pop
jl
pop
jnp
bound
das
enter
leave
pop
jmp
rcr
add
add
icebp
add
xor
call
mov
push
inc
divb
fucom
add
sub
mov
lret
cltd
mov
mov
icebp
add
data16
mov
mov
mov
inc
enter
xchg
fidivrl
dec
lock
pushl
addl
fs
sbb
jb,pt
ss
cmp
xchg
out
xchg
or
cmp
pop
out
popa
jge
pop
mov
sbbb
adc
lods
jecxz
push
mov
stos
mov
xorl
inc
repnz
arpl
ljmp
std
fistpl
sbb
inc
push
lock
add
push
inc
or
adc
sub
in
bound
lods
xchg
dec
fwait
icebp
sub
aam
testl
push
add
or
inc
inc
fwait
aaa
leave
pop
inc
rcll
jle
inc
out
cld
lods
insl
add
std
jnp
gs
clc
or
movsb
cmp
mov
mov
cmpsb
cmpsl
inc
pushf
lret
jo
mov
jae
mov
adc
fadd
rclb
mov
jo
jns
scas
inc
scas
js
adc
and
cmc
and
call
adc
push
sbb
leave
ret
mov
push
aam
xor
sub
sti
fisttpll
ja
mov
add
add
inc
xchg
into
sbb
sbb
inc
movsl
push
leave
push
or
add
pop
push
push
test
nop
cmp
add
add
mov
shlb
andl
push
jl
call
push
jnp
cmpsl
ret
rcr
daa
mov
cs
or
sub
adc
mov
mov
xor
lsl
into
stos
and
mov
pop
fs
shlb
jle
lcall
jo
adc
sbb
outsb
test
push
mov
js
push
push
hlt
ds
push
push
mov
outsb
mov
xchg
pop
add
shl
test
clc
pop
xchg
adc
int
decl
pusha
cmpsl
sub
ficomps
jns
adc
mov
rolb
xchg
cmpsl
sbb
data16
push
dec
ret
jl
lcall
jne
or
jns
cmpsb
adc
add
pop
imul
sub
test
arpl
sub
jbe
xorl
scas
cld
xchg
mov
pop
jbe
jb
add
xor
sti
or
dec
sub
or
add
ljmp
in
mov
sbb
sbb
test
fidivl
push
ljmp
and
dec
push
sub
out
mov
add
mov
cmp
out
repz
add
jle
nop
insl
int
and
xor
push
push
add
push
test
cmp
cwtl
lcall
sub
or
xor
push
xor
aas
cmp
mov
inc
cld
xchg
scas
ja
add
int3
or
rdpmc
cwtl
test
flds
outsl
xchg
dec
sbb
push
idivb
daa
pop
add
pop
xchg
idiv
adc
xchg
mov
rorb
test
or
sbbb
cmp
sbb
nop
xor
add
mull
lock
add
add
cmp
icebp
in
adc
or
movsl
or
jo
mov
sub
push
add
daa
inc
std
dec
xor
shrl
add
cmpl
fwait
insl
jecxz
repz
in
jbe
lcall
aad
xchg
cli
dec
mull
rcrb
ret
popl
in
sbb
mov
push
or
add
push
add
sub
push
push
mov
or
ret
mov
sub
push
push
cmp
pop
popl
push
orl
xor
out
cmp
orl
int3
jle
or
pop
jmp
sub
add
arpl
push
lret
rcr
or
xchg
ds
push
add
add
test
iret
inc
popl
lret
xchg
pop
sbb
xchg
pop
out
andb
inc
and
es
add
ret
pop
jp
mov
xor
movsl
sbb
add
dec
push
xchg
add
sub
out
cmp
add
fistl
fbld
add
push
pop
push
adc
push
enter
push
dec
fiadds
cld
add
fistpl
test
lods
add
push
inc
scas
add
sbb
pop
mov
cmp
cld
mov
mov
push
cwtl
sub
and
mov
fimull
rol
test
test
fs
adc
pop
mov
pusha
mov
daa
pop
xchg
lret
jns
popa
or
and
hlt
hlt
mov
mov
xor
xchg
in
and
jb
inc
cmc
sarb
mov
push
mov
or
ds
pop
add
shr
nop
sub
mov
dec
inc
add
sbbl
lock
fidivl
mov
xor
add
pusha
lds
hlt
and
rolb
test
xor
add
and
clc
cmc
sbb
out
jmp
xchg
sbb
pop
rclb
and
ret
xor
ljmp
fisubs
or
andb
loop
out
pop
cmp
jge
xchg
enter
adc
mov
loope
mov
lret
add
loop
fsts
add
jmp
jmp
sub
stos
mov
mov
in
lods
or
and
rcl
call
mov
mov
dec
int3
sub
fnstenv
adc
sub
add
jno
jns
mov
jl
std
add
mov
xor
add
aas
add
cli
jne
sahf
mov
jl
andb
add
xor
lcall
pop
push
xchg
pop
fstl
enter
mov
mov
pop
mov
push
mov
jl
inc
cmp
jle
movsb
cmpsb
add
xlat
and
dec
mov
jg
push
rolb
cld
mov
jle
add
fs
push
sub
xchg
hlt
mulb
sbb
push
adc
out
add
hlt
sarl
nop
sub
add
vinserti32x8
jno
xor
pop
rcr
jmp
push
std
iret
clc
inc
loopne
cmpsl
mov
fildl
mov
xor
sti
or
sub
mov
ljmp
inc
movsb
sub
cmp
mov
xchg
ds
out
sub
jg
xlat
mov
ja
pop
xor
jns
adc
mov
fiaddl
rcl
sti
iret
add
lahf
adc
add
cwtl
mov
stos
add
lret
pushf
mov
add
mov
incl
or
adc
or
or
rolb
inc
in
pop
mov
lods
ds
cld
loopne
sub
cmp
das
pop
push
lods
test
dec
sbbb
sub
test
fsubs
cmp
add
adc
ret
jle
data16
cltd
clc
cltd
jge
add
jae
pop
mov
fsub
mov
insb
das
pusha
add
sub
jecxz
add
add
lcall
je
pusha
adc
lahf
and
faddp
add
rcrl
sti
xchg
jb
js
xchg
in
add
push
fs
mov
xor
ret
add
icebp
xlat
pop
int
aam
sbb
and
push
adc
sbb
mov
sbb
jecxz
in
add
xchg
dec
xchg
loope
add
jp
test
lods
mov
jmp
add
in
jae
jns
cmp
ljmp
lcall
jne
xchg
pop
add
testl
out
mov
fildl
aam
rolb
adc
push
jb
add
gs
imul
clc
imul
pop
lea
pop
movsb
adc
jg
add
or
enter
ljmp
inc
stos
sub
jno
sbb
dec
lea
pop
fnstenv
and
loopne
fcomp
add
xchg
mov
scas
mov
inc
aaa
add
ret
out
mov
jnp
lods
add
insb
dec
insl
add
dec
dec
mov
fwait
jno
xchg
add
xor
jns
imul
jl
jle
int3
cmp
sbb
jno
ret
or
or
sarb
pop
push
aas
xchg
pop
movsl
das
pop
ds
xor
sbb
jp
sahf
push
mov
sub
mov
fmuls
add
xchg
adc
mov
inc
mov
add
add
push
sbb
add
aas
out
mov
jge
sbb
test
adc
add
mov
push
or
add
mov
add
adcl
push
fdivrs
add
sarb
outsl
add
imul
push
lods
add
lret
aad
cwtd
pusha
inc
jae
push
data16
and
test
addb
cmpsb
hlt
je
add
push
adc
in
mov
or
mov
pushf
cld
dec
movsl
pop
add
int3
in
out
add
sub
xacquire
sbb
pop
add
arpl
add
mov
mov
add
in
aad
sbb
lock
rolb
xchg
ficompl
bnd
add
int
push
add
fsubrl
xchg
stos
or
add
loope
xchg
sub
cli
add
and
mov
cmp
cwtl
cmp
call
sbbl
add
sarb
fdivrl
add
sbbb
divb
lahf
or
pop
and
aam
leave
mov
loope
add
dec
dec
fidivrl
push
sbb
mov
call
adc
push
xchg
xchg
jae
jo
jmp
add
int
fistpll
mov
js
add
ret
or
daa
xor
xchg
mov
pop
cmp
std
xorb
xchg
in
jmp
xchg
jns
xchg
lahf
aas
arpl
fisubl
add
test
je
and
sub
notl
sub
add
cmp
add
mov
mov
out
adc
cld
pop
add
dec
lcall
in
ja
sbb
mov
mov
mov
add
or
mov
jns
stos
mov
push
call
mov
lds
xchg
pushf
sub
mov
dec
mov
jae
mov
push
sub
inc
pop
add
out
mov
add
outsb
push
push
pop
mov
xor
add
pusha
dec
hlt
mov
dec
imul
jl
sbb
mov
inc
sbb
mov
inc
cmpsl
pop
add
mov
pop
jle
add
pop
je
enter
adc
add
inc
sub
and
call
inc
cmpsl
pushf
scas
inc
addr16
in
add
mov
jge
aam
jae
lds
xor
inc
in
add
insl
sub
das
push
lret
mov
xor
sub
mov
jae
inc
imul
push
ret
test
add
ss
and
push
cmp
icebp
jnp
mov
addl
push
or
push
push
lods
push
add
out
fwait
jae
pop
leave
cltd
mov
jg
push
or
stc
xchg
jo
adc
insb
or
add
pushf
mov
or
cs
and
or
stos
test
les
lock
xchg
dec
xsha1
cmpsb
mov
insb
mov
icebp
jns
cs
xchg
call
sbb
and
movsbl
addr16
icebp
pop
cmp
movsl
add
sti
mov
jo
out
idivl
mov
xchg
mov
nop
movsl
add
lahf
lret
pop
adcl
negl
mov
add
test
mov
int3
pop
or
and
icebp
test
add
cmp
ljmp
data16
aaa
scas
pop
cwtl
jne
mov
fs
insb
js,pt
push
xor
pop
add
push
jmp
filds
inc
es
lahf
adc
mov
xor
sbb
xchg
xchg
jge
xchg
mov
pop
cmp
add
push
aad
or
add
in
xor
cwtl
add
mov
add
cmovb
sub
jecxz
je
orl
xchg
insl
mov
jl
rolb
xchg
jnp
shlb
mov
add
cmpsl
xor
add
loop
call
xchg
add
imul
orl
cmpsb
inc
inc
add
adc
xor
outsl
call
jo
in
or
inc
add
jno
push
mov
out
dec
subb
push
lock
idivb
ss
cltd
push
repnz
mov
stos
popa
cmp
and
xor
and
sub
and
mov
inc
in
sbb
xor
mov
sub
inc
shll
sbb
dec
decl
movsb
ret
imul
pop
sbb
inc
outsl
add
add
inc
adc
xchg
dec
xchg
adc
sub
cmp
lods
jmp
mov
xor
mov
in
add
push
push
mov
or
add
iret
mov
in
xchg
loopne
adc
dec
out
pop
and
mov
pusha
cs
mov
adc
sbb
push
push
inc
pusha
add
outsl
ljmp
fs
stos
dec
clc
ss
push
or
sbb
xlat
add
sub
aaa
pop
jge
xchg
in
out
pusha
lahf
pop
addb
push
add
sbb
mov
pop
add
dec
cld
pop
es
negb
sbbb
add
rorb
lds
fs
cmp
add
inc
inc
xchg
cmp
addr16
scas
adc
add
xchg
loope
mov
test
mov
or
cmp
sahf
notl
xchg
mov
cltd
jno
gs
aas
jge
mov
cmp
ljmp
add
enter
dec
jp
add
inc
mov
rcl
in
or
icebp
sbb
imulb
add
loop
or
lea
rcrb
cwtl
adc
sbb
mov
sub
or
add
loope
sbb
add
in
dec
sbb
add
dec
sbb
lcall
adc
adc
test
lock
mov
lcall
ret
and
pop
cmc
shlb
ljmp
out
into
cli
test
dec
push
xchg
sbb
sbb
pop
add
and
out
add
pop
je
add
repnz
jae
xchg
add
lahf
xchg
aaa
rcrb
popa
lcall
xor
scas
in
xor
xor
mov
inc
fstl
in
call
jp
negl
pop
add
or
movsl
rcrb
jb
jae
roll
push
inc
jns
add
push
dec
jo
inc
lcall
jl
sti
add
in
jns
iret
sbb
aaa
mov
inc
lds
lods
es
mov
adc
fildl
xchg
loopne
icebp
push
in
mov
jo
movsl
add
jp
or
setae
pop
push
jle
push
das
adc
inc
push
stc
jb
test
addb
ret
xor
scas
jne
pop
pop
mov
fistl
jne
mov
mov
push
cmpsl
add
jno
xchg
inc
cmpl
lret
repnz
jmp
mov
out
test
xchg
repnz
cltd
mov
sbb
jbe
fwait
xchg
pop
ljmp
popa
and
enter
pop
jecxz
mov
iret
pop
in
ret
cmpsb
jl
add
push
movsl
imul
xchg
mov
push
pop
adcb
cmp
scas
mov
sbb
sub
inc
mov
icebp
ja
int
pop
bound
addr16
jo
or
inc
shl
movsb
xchg
in
mov
adc
lret
xchg
jp
orl
stos
cwtl
movl
cmpsl
sbb
aam
xor
xchg
das
insl
jae
adc
push
add
sahf
ret
popf
stc
push
mov
mov
repz
out
outsl
xor
mov
mov
and
or
cmp
sub
mov
dec
add
mov
repnz
add
dec
mov
or
push
out
test
notl
add
xchg
je
mov
sub
add
movsb
mov
jge
xor
add
sbbl
mov
push
addr16
sub
data16
shrb
lods
push
cmp
dec
push
add
pop
sti
in
inc
push
scas
pop
in
jecxz
and
shlb
lret
push
dec
pusha
cmc
sub
int3
ja
rcl
shrb
jb
cmpsb
leave
orb
sub
clc
mov
loopne
loope
or
inc
fistpll
mov
mov
js
lods
int3
sbb
lret
and
leave
and
sub
mov
cs
mov
aam
or
and
pusha
xor
inc
push
into
ret
outsl
popl
mov
add
clc
jle
call
or
add
or
adc
nop
lods
popa
cmp
and
fisubrs
mov
mov
pushf
rorb
adc
pop
and
popa
mov
or
jmp
je
dec
add
or
addr16
add
ss
push
add
pusha
mov
lock
add
fwait
cmovb
mov
add
out
in
mov
push
divb
and
loop
and
push
cmp
cmpb
fists
nop
push
stos
nop
inc
out
mov
mov
mov
mov
in
mov
mov
add
sub
arpl
mov
sub
mov
lret
sbb
dec
jae
pcmpeqb
xorl
lret
fmuls
popf
mov
daa
movsb
pop
add
addb
adc
adc
mov
mov
inc
hlt
loopne
xor
popa
pop
xchg
repnz
test
insl
add
push
ja
push
aam
sub
cmp
popa
sarb
push
inc
fdivrs
adc
jo
stos
push
imul
nop
dec
pushf
iret
or
movsb
mov
fs
mov
insl
test
rcrl
pusha
push
pusha
loop
jmp
pop
ja
popf
rolb
sbb
aam
cmp
mov
add
scas
out
add
test
adc
inc
push
loop
xor
or
andb
or
fwait
pop
ja
loopne
cli
sbb
inc
nop
iret
sub
cmp
jnp
ss
pop
push
mov
adc
loope
pop
jae
sbb
sbb
jmp
aas
mov
imul
scas
dec
shlb
mov
add
adc
mov
add
pop
pop
mov
loop
movsb
sub
pop
aam
cmpsb
mov
aam
insl
xchg
lret
xchg
xchg
add
push
adc
in
mov
or
stos
pop
ja
adc
jge
add
push
or
xchg
or
cmpsl
and
push
ljmp
mov
mov
or
adc
mov
sbb
sbb
outsb
aas
add
and
mov
sub
fistpl
adc
or
lea
mov
cmp
inc
push
adcb
add
dec
nop
stos
add
mov
push
cmpl
pushf
sub
mov
cmpb
idivb
roll
sbb
add
and
dec
or
movsb
sbb
into
orb
cmp
mov
sbb
cmp
into
aam
mov
jo
add
scas
rolb
shrb
cwtl
or
mov
or
add
sarb
sti
mov
cmp
sbb
roll
xchg
add
xor
fmul
jb
je
push
add
cmp
repnz
or
or
and
lcall
call
mov
lods
subb
cmp
inc
cmp
adc
xchg
mov
or
andb
add
shll
stos
sbb
out
cld
pop
mov
add
mov
aam
cmpsb
and
sub
mov
jne
rorl
mov
dec
cmp
nop
xor
and
jno
lds
add
add
xchg
dec
mov
rorb
xor
and
cmp
out
test
and
nop
pusha
add
sub
imul
idiv
subl
dec
dec
mov
pop
lods
inc
js
sahf
cmpsl
mov
pop
push
or
mov
cmpsb
fiadds
pusha
dec
xor
stc
pop
xchg
lret
jo
sub
and
inc
shlb
jmp
cmpsb
sbb
ss
cltd
jo
into
fcomi
push
das
cmp
imul
xor
adc
out
push
lods
add
jl
add
decl
inc
push
adc
cmp
icebp
sbb
subb
inc
les
out
aam
inc
rcrb
pop
xchg
push
and
jge
add
in
cmpb
mov
add
xchg
or
das
add
and
push
imul
aad
jo
mov
mov
add
dec
mov
scas
je
add
cld
dec
adc
sbb
sub
jno
lods
imul
das
call
mov
lods
arpl
je
add
das
xor
add
je
and
lret
jne
test
mov
adc
ret
int3
in
push
pop
movsb
or
xor
dec
bound
and
jg
dec
add
orl
js
dec
sbb
and
repnz
test
addr16
dec
iret
pusha
sub
aas
std
xor
cmpsb
sub
sbb
int
xchg
jno
add
jae
test
cmpsb
add
sti
add
dec
out
xor
inc
test
adc
inc
and
pop
sub
xchg
sub
xor
mov
addb
data16
rolb
in
or
xchg
clc
clc
int3
add
lahf
stc
or
sbb
push
clc
dec
mov
inc
mov
stc
jo
sub
shlb
adc
leave
jecxz
scas
fwait
push
jae
sbb
std
sub
mov
test
inc
and
std
loope
clc
push
out
iret
and
jl
or
inc
cmc
out
call
push
dec
cld
adc
cmp
test
adc
mov
jnp
sub
std
pop
mov
dec
inc
mov
mov
add
rorl
or
popf
enter
test
xor
enter
popf
ljmp
pop
sbb
add
lret
mov
mov
inc
push
cmpsl
jnp
test
mov
clc
or
add
popl
nop
sti
je
dec
xchg
add
jmp
xor
movsl
add
cmc
sub
pusha
and
in
rclb
add
jae
aad
pushf
aaa
pusha
test
cmp
mov
ftst
jl
dec
test
test
addb
jnp
fsubl
movsl
cmpsl
pop
and
mov
pusha
inc
sub
repnz
aad
add
adc
xor
dec
scas
inc
cld
mov
dec
lods
sbb
add
mov
and
dec
addr16
xchg
inc
adc
push
xor
scas
xor
cwtl
pop
xor
xchg
add
fwait
cmpsl
mov
xor
stc
js
sub
shll
gs
das
push
and
aad
repz
and
and
jae
aaa
dec
xchg
shll
add
je
loop
add
pop
ljmp
mov
mov
je
cmp
inc
inc
popf
inc
lock
mov
xor
stc
inc
addr16
ret
mov
cmp
add
sbb
add
imul
sbb
xor
sub
or
inc
mov
or
ds
pop
add
adc
push
clc
sub
mov
pop
adcb
out
scas
inc
pushf
xchg
mov
dec
cmp
popa
push
loopne
push
das
xchg
cmp
mov
push
incb
divl
rcll
repnz
add
inc
jns
in
filds
movsl
xchg
inc
das
cmp
xor
out
in
add
cmpsb
in
xor
cld
mov
jl
push
or
mov
adc
mov
add
aad
mov
cmpsl
pusha
jns
xor
dec
xchg
movsl
dec
dec
push
addb
fs
adc
scas
sbb
rcr
xor
imul
adc
jns
call
mov
es
ss
je
sub
outsl
mov
xor
das
xor
push
mov
xor
jbe
testb
or
and
stc
mov
and
rolb
adc
cltd
fwait
stos
cwtl
movsb
pop
or
add
out
cmp
cmpsb
out
inc
sbbl
pop
inc
mov
sbb
fistl
movsb
adc
stos
movsl
add
mov
aad
add
jbe
mov
mov
and
mov
pop
or
or
pop
jg
imul
lods
inc
insb
mov
add
jae
std
fbstp
test
pop
add
add
rclb
cmp
inc
clc
add
dec
iret
pushf
mov
push
fcomps
outsb
hlt
push
or
add
dec
inc
sbb
xor
orl
lock
fmuls
jns
sub
mov
add
add
cltd
add
lock
hlt
xchg
std
loope
jmp
mov
repz
add
inc
sub
addl
je
pop
add
jb
pop
dec
gs
jo
add
lahf
and
sub
pop
cmp
pusha
pop
test
mov
inc
xor
stc
sub
mov
test
pop
mov
in
inc
add
pop
ja
pop
and
stos
or
imul
movsb
inc
ret
lods
mov
sub
outsb
movsl
mov
sbb
pop
push
cmpsl
test
icebp
mov
ficoml
mov
sbb
ffreep
mov
dec
stos
push
sub
and
mov
arpl
shrl
add
inc
xorl
jge
cmp
in
popa
sbb
std
inc
jle
aaa
idiv
pop
xchg
in
sub
call
pop
pusha
mov
shlb
jmp
sbbb
fdivp
add
scas
pop
int
mov
int3
add
leave
adc
push
mov
rclb
into
pop
adc
add
pop
or
sub
scas
aam
and
pop
xchg
sbb
push
shlb
inc
fbstp
enter
addr16
jb
sbb
push
shll
ds
cmp
outsl
or
into
add
and
inc
pusha
test
or
test
fidivl
mov
popa
je
add
in
mov
lret
add
mov
iret
adc
push
popa
wrmsr
fistpl
add
inc
mov
nop
insb
stc
icebp
add
movsb
adc
add
sub
inc
push
and
hlt
aaa
add
adc
clc
das
mov
cmp
shrb
xchg
and
call
lahf
xor
dec
inc
sbb
sbb
mov
lods
sub
jge
pushf
rorb
or
cmp
mov
sbb
js
in
adc
imul
jle
cmp
xor
aaa
cmp
or
push
and
sub
jns
js
loopne
addr16
das
in
and
xor
sbb
fnsave
push
test
enter
clc
fnstsw
mov
dec
mov
mov
sub
or
mov
cmp
out
sub
jle
in
and
pop
cmp
jnp
les
push
adcb
adc
add
test
test
or
jl
or
mov
inc
in
gs
and
push
cs
mov
icebp
sub
cmp
outsb
in
mov
std
popa
xchg
jno
bound
adc
test
jne
jno
inc
mov
div
adc
and
insb
mov
xor
cmp
in
loopne
jo
stos
fadds
jne
mov
sub
test
cltd
add
mov
mov
jle
pop
das
push
ror
rolb
or
lcall
or
das
hlt
fs
mov
enter
sahf
or
gs
call
movsl
adc
push
push
add
inc
mov
add
add
jo
test
cmp
add
jmp
jno
sbb
add
push
int3
mov
add
ja
aam
in
add
pushf
lods
test
jno
or
push
ljmp
daa
jle
add
aaa
xchg
pop
test
xor
add
add
fstpt
add
ret
repnz
mulb
sbb
andb
lret
adcl
enter
jecxz
daa
cmp
or
push
add
orb
jecxz
lock
add
mov
cld
add
push
cli
pop
cmp
movsb
add
insb
jecxz
repz
mov
xorb
pop
add
xor
movups
int3
cmp
xor
dec
sub
lods
pop
jmp
scas
in
add
sbb
andl
pop
xchg
hlt
sbb
clc
call
rcr
frstor
aaa
or
xchg
cmpsb
in
xor
sbb
xchg
xchg
orl
jbe
mov
lahf
jne
cs
mov
and
in
push
pushf
mov
adc
leave
cltd
add
cmp
repnz
cld
test
cmp
pop
or
sahf
repnz
notb
cmp
movsb
xor
add
mov
mov
inc
push
ret
jecxz
add
or
iret
mov
xchg
clc
out
and
adc
cmp
addr16
inc
adc
push
or
xor
and
aad
inc
imul
add
loope
xchg
push
xchg
or
pop
pop
sub
roll
mov
xchg
cwtl
push
dec
jb
icebp
outsl
test
mov
repnz
or
gs
dec
add
xchg
imul
inc
add
pop
pop
pop
sti
xor
push
jecxz
stos
add
sbb
xor
jbe
inc
leave
and
mov
movsl
mov
sbb
push
nop
add
mov
pop
adc
inc
adc
stc
and
dec
and
loop
add
jne
dec
and
push
cli
jge
les
clc
test
fsubrl
fsts
divb
jecxz
ficoms
and
and
nop
adc
fsubs
arpl
cwtl
pop
aas
incl
sti
mov
test
stc
push
ja
rclb
lods
cwtl
xchg
cmp
movsl
add
sbb
and
pop
cmp
push
mov
dec
mov
std
xchg
mov
xchg
jnp
mov
sub
sahf
xchg
cli
loop
pop
je
adc
imul
sbb
add
push
call
adc
sub
es
mov
cli
mov
jmp
dec
hlt
mov
lock
outsl
pop
in
addl
add
not
adcl
push
movsb
xor
xor
sti
pop
scas
loopne
xor
jge
je
loop
das
cli
xchg
add
daa
xor
arpl
cmpsb
ss
push
mov
sub
lret
ret
test
in
inc
in
fldenv
add
xor
loop
or
std
add
xlat
daa
adc
jmp
sbb
pop
adc
fimull
jo
popf
repnz
pushf
addr16
js
hlt
sti
cmpb
arpl
pop
add
push
xchg
jno
sar
mov
lods
adc
xchg
sarl
mov
and
jl
jmp
jg
xor
in
sub
outsl
pop
adc
mov
je
mov
jno
mov
jns
add
sub
movsl
nop
js
add
xor
add
test
mov
testb
inc
dec
cld
or
push
fstl
xor
subb
sub
or
add
popa
scas
dec
rol
mov
sbb
push
test
jle
sbb
pop
popa
sbb
add
or
sub
xor
inc
mov
scas
loop
mov
mov
insb
mov
leave
andb
add
or
mov
xor
ret
mov
jmp
icebp
cmpsb
fdivrs
add
pop
mov
mov
sbb
pop
outsl
push
add
push
jae
xchg
add
js
lds
xchg
sbb
arpl
cs
push
mov
orl
add
pop
shl
mov
fistpl
push
in
inc
pushl
fwait
inc
cmp
xor
roll
sub
adc
xchg
divl
mov
jle
movsl
cmp
xor
in
add
xor
cmp
fcompl
fs
cmpl
enter
cld
xor
ror
or
xchg
add
cmc
jmp
dec
fldt
leave
xor
lahf
lds
jne
jno
add
add
xchg
pop
push
mov
or
sbb
mov
xor
ja
add
pop
clc
sbb
add
mov
lret
xor
addb
cmp
adc
aas
ret
ret
jmp
pop
inc
pop
mov
lods
xchg
imul
filds
sbb
fldl
test
xchg
icebp
add
lret
hlt
adc
pop
jecxz
add
mov
daa
jp
test
sub
push
cmp
cmpb
int3
mov
cwtl
lods
xor
sbb
add
pop
xor
rolb
xor
test
sub
in
in
dec
add
mov
mov
ds
inc
add
jo
mov
add
mov
cli
incb
xchg
add
jo
sbb
mov
orl
pop
dec
pushl
jns
cmp
sti
add
ret
and
mov
dec
ds
ja
fildl
or
icebp
mov
mov
insl
rolb
mov
outsb
movsb
add
push
pop
pop
mov
aad
into
inc
enter
add
hlt
and
add
xchg
and
test
mov
pop
rclb
mov
add
lret
sti
jmp
hlt
out
and
cmp
or
sbb
adc
mov
mov
scas
popf
pop
int3
fwait
jae
cli
jbe
add
mov
inc
enter
shrb
testb
pop
sbb
clc
mov
add
loope
je
or
out
pusha
xlat
lock
mov
pop
bound
add
xor
pavgb
or
push
or
clc
push
adc
xlat
mov
jle
sarb
xchg
ljmp
jbe
dec
cmp
push
sub
mov
jp
xchg
mov
je
subb
add
sti
mov
enter
ljmp
in
aam
sbb
jmp
add
adc
call
xchg
xchg
add
loopne
cmp
les
pop
adc
add
jmp
enter
dec
repnz
inc
mov
sbb
shrb
adc
cld
loop
add
xchg
movb
lcall
and
repnz
cltd
js
pop
xchg
insb
add
sbb
cmpsl
nop
pop
arpl
out
xor
add
insl
add
mov
pop
push
cltd
nop
add
enter
sub
sti
out
add
push
lret
out
and
pop
and
fwait
jo
or
push
mov
xor
mov
cmp
push
cmp
cwtl
xchg
add
ret
dec
fcoml
mov
neg
lahf
add
lret
pop
or
mov
idivl
lock
iret
sub
fstpl
rcrl
hlt
popf
pusha
xor
scas
out
ja
bsr
aaa
mov
cld
cmp
ss
js
jl
fidivrl
fbstp
xchg
xchg
cmp
cmp
sub
sarb
cmp
push
popa
mov
mov
test
add
test
push
jge
arpl
add
jg
sbb
cmc
mov
inc
into
or
rorl
add
dec
movsb
cwtl
dec
pop
jo
xchg
add
leave
mov
orl
dec
add
jp
lcall
loopne
into
add
rolb
adc
mov
loope
aas
sarl
les
stos
nop
add
mov
push
aas
repz
rcr
push
push
cmp
inc
sbb
add
outsl
push
shr
fxtract
imul
sub
push
jl
dec
xchg
sbb
idiv
inc
stos
fwait
add
push
and
add
jnp
dec
fucomp
add
ror
pop
inc
pop
leave
rcrb
dec
lds
mov
cmp
xchg
sub
insl
pushf
xchg
push
pop
rcrb
clc
clc
push
jo
inc
sub
adc
mov
pop
add
mov
cmpsb
mov
movsb
cmp
hlt
cld
adc
push
cwtl
dec
jns
push
dec
add
mov
mov
sub
repz
add
stos
pusha
xor
add
test
mov
xor
inc
jl
das
mov
mov
repz
push
sbb
push
sub
ja
cwtl
jae
fldcw
popf
push
scas
push
mov
push
pusha
aam
mov
add
push
bound
loop
lea
adc
and
ret
inc
dec
shl
jmp
add
sub
loop
movsl
lods
test
mov
scas
outsb
shl
add
clc
dec
inc
sub
imul
lds
xchg
sub
test
sub
adc
jmp
imul
xor
mov
aaa
mov
jge
add
daa
add
add
test
add
add
testb
add
inc
xor
add
mulb
pusha
jo
inc
or
push
xor
movl
and
pop
stos
bound
inc
and
cs
mov
add
mov
ror
shlb
movsl
add
lock
push
std
jno
add
mov
cmp
adc
mov
stc
add
bound
or
hlt
sahf
sbbb
loop
jno
cmp
xchg
pop
push
loope
testl
adc
inc
cmp
movsb
pop
add
adc
nop
dec
rolb
sbb
punpckhdq
and
sub
pushl
dec
add
insl
negb
mov
jl
filds
lods
adc
out
jo
add
xchg
lcall
dec
inc
cmp
clc
pop
enter
out
cmp
mov
in
xchg
push
cmpsl
pop
repz
xor
ss
add
cmpsl
popf
mov
pop
sahf
ret
outsl
jecxz
add
fisttpl
xorb
xchg
cmp
jmp
lock
xchg
and
les
mov
mov
fs
add
fsubs
mov
sti
lsl
in
pop
mov
ret
xor
xchg
jecxz
movl
into
inc
lea
loopne
cmp
xchg
scas
cwtl
and
lods
jne
popa
in
inc
push
movsb
push
xchg
inc
movsb
push
dec
repnz
mov
push
mov
fsubs
negl
adc
lds
xchg
xor
sub
pop
push
mulb
imul
addl
pusha
repz
add
and
adc
aaa
and
and
int3
dec
cwtl
pop
testb
jmp
add
loop
push
push
mov
push
jmp
push
mov
in
and
push
in
mov
inc
lds
sub
imul
in
mov
jno
add
iret
sarb
mov
add
call
insb
cld
lcall
pop
scas
repz
dec
sub
or
mov
clc
imul
sub
cmp
or
insl
popa
adc
and
psubq
stos
push
and
push
sbb
out
mov
imul
and
aas
add
add
add
pop
adc
mov
aas
or
out
xlat
addb
lcall
add
inc
enter
adc
xchg
cmp
xchg
mov
mov
xchg
mov
cltd
nop
or
jo
sbb
xchg
aam
pushf
lock
stc
mov
rcrl
stos
jmp
add
jno
movsb
add
mull
push
jecxz
add
inc
rol
loop
cs
loope
add
xchg
cli
rorb
push
add
inc
js
pop
mov
add
clc
push
mov
add
jae
fldcw
mov
or
xor
dec
psrad
sbb
add
xchg
add
dec
loop
inc
mov
add
jg
cmpsb
mov
xchg
sbb
sbb
xor
jns
mov
cltd
pop
fdivs
pusha
mov
inc
mov
flds
sub
clc
das
stos
test
sbb
cwtl
lock
pop
sbb
add
subl
incb
lret
into
jb
out
sub
push
ficomps
hlt
mov
sbb
out
add
cmp
jns
push
jnp
add
push
pusha
fcmovbe
sbb
in
enter
subl
add
add
inc
gs
aaa
or
cmpsl
sbb
aam
xor
mov
nop
adc
dec
ja
pop
or
pusha
pop
arpl
push
xor
add
jge
dec
cmp
cmc
jle
movsl
add
pop
inc
popa
sbb
pop
nop
add
dec
lret
dec
add
rcrb
pop
loopne
fs
maskmovq
imull
add
sbb
adc
test
push
mov
xor
add
mov
xor
ret
mov
jg
cmpsb
add
pop
popa
mov
fs
add
pop
mov
mov
xor
add
fsubl
mov
mov
repnz
jp
clc
add
adc
bound
insl
and
inc
sarl
cmp
cltd
arpl
int3
jmp
clc
push
add
fisttps
add
inc
ds
cli
sti
add
jg
int
sub
xbegin
in
add
xor
test
and
xor
testl
daa
sbb
add
ror
add
pop
mov
icebp
cmp
dec
or
jb
negl
mov
ret
inc
push
int3
dec
jp
push
sbb
out
push
cmp
aam
add
dec
xchg
jns
cmp
xor
sbb
add
fwait
push
push
out
mov
scas
mov
fisubrs
add
pop
add
jl
sahf
add
add
push
sbb
mov
mov
pop
add
test
mov
sbb
pop
mov
jb
jno
add
mov
mov
shll
test
int3
test
in
add
ljmp
enter
dec
and
jecxz
add
sbb
pop
outsb
and
inc
xchg
mov
dec
add
pop
sbb
push
adc
mov
jbe
stc
dec
test
push
or
add
lcall
add
push
outsb
jbe
jne
iret
pop
or
xor
stos
pusha
aam
sbb
insb
pop
aad
pop
jae
and
adc
out
cld
into
adc
enter
inc
add
aas
jne
cli
lods
jns
mov
dec
data16
mov
xlat
shll
sub
xor
add
or
std
rolb
or
add
inc
mov
push
loop
inc
mov
fiaddl
cmp
stos
aam
add
aad
jno
xchg
mov
int
xchg
test
cld
xchg
pushaw
pop
sbb
inc
repnz
adc
mov
add
bound
mov
sub
into
mov
out
icebp
mov
repnz
hlt
jb
lds
cli
addr16
xchg
in
js
xchg
mov
or
les
pushf
sub
outsl
out
or
sbb
sbb
in
rcrb
push
mov
enter
or
cs
out
add
add
push
add
pop
add
mov
xchg
push
sub
or
gs
cmp
popf
mov
fisubl
or
bsf
cmp
shlb
test
cmp
orl
jmp
xor
add
or
in
add
shll
dec
bound
sti
add
mov
mov
sbb
int
test
cmpsl
dec
add
std
or
push
movsl
mov
in
cmp
add
add
hlt
xchg
push
pop
or
xor
mov
push
faddl
hlt
rorb
adc
mov
push
out
adc
sbb
call
mov
add
add
mov
imul
add
data16
ss
mov
jp
in
add
insl
and
les
or
and
pop
jne
add
out
pop
cmpsl
xchg
scas
sub
add
fs
add
pushf
sahf
dec
icebp
push
inc
in
scas
adc
adc
add
cmpb
dec
mov
cmp
mov
push
adc
les
xchg
in
pop
cmpsl
cmpb
xchg
movsl
mov
add
cmp
adc
cmpsb
fisttps
sbb
mov
std
loopne
leave
and
das
in
fs
add
pop
call
add
mov
enter
add
sbb
jnp
mov
push
add
insl
nop
pusha
pop
mov
dec
aam
outsl
xor
add
xor
std
imul
inc
xchg
sbb
aam
insb
push
add
add
sbb
inc
jbe
in
adc
mov
repz
xor
lds
push
jae
stc
add
mov
fwait
and
add
fmuls
xchg
mov
repnz
pop
daa
sbb
and
cmp
aad
out
mov
imul
pop
cld
inc
popa
sarb
push
adc
add
xor
xor
jg
jecxz
and
and
mov
adc
inc
mov
add
xchg
movsl
xchg
jecxz
cltd
aam
loopne
jle
std
adc
das
pusha
lds
push
adc
pop
repz
lods
in
lods
add
sbb
imul
xor
test
pop
scas
jl
mov
add
stos
mov
fucom
cmp
cmp
cmpsb
les
add
xchg
sbb
loope
sahf
outsb
cmp
jl
add
aas
mov
pusha
push
aam
jp
es
push
sbbb
jbe
cmp
jae
dec
cmp
cmp
sbb
jle
pop
push
pop
dec
mov
js
pop
inc
cmp
jbe
aam
xorb
pop
in
jecxz
iret
shrb
mov
push
pop
adc
pop
pop
add
add
inc
push
mov
invd
in
pop
xchg
ret
rcr
pop
ret
mov
push
fcmovne
mov
xor
shll
push
dec
outsb
jnp
movsb
sub
nop
in
rol
xor
pop
out
lcall
and
add
fs
insl
adc
add
inc
js
mov
jo
popf
sub
inc
int3
push
sbb
clc
inc
lods
push
pop
or
adc
push
cmpsl
adc
mov
inc
mov
dec
ss
iret
mov
adc
sub
test
mov
call
xchg
ja
push
inc
adc
or
sub
sbb
movsl
loopne
inc
call
icebp
add
or
add
push
xchg
rorl
cltd
xor
into
andl
repz
sbb
inc
push
rol
mov
mov
out
push
ds
xchg
add
cmpsb
cmc
mov
inc
lods
lcall
mov
dec
leave
outsl
mov
insb
fwait
out
inc
pop
cmp
arpl
sbb
or
mov
mov
sbb
and
add
aas
lock
or
dec
sbb
or
add
in
test
out
inc
sbb
pop
dec
and
stos
dec
shlb
and
sub
lock
sbb
fcomp
call
add
inc
dec
test
push
or
and
insl
adc
push
inc
dec
dec
popa
add
fisubrs
add
hlt
mov
mov
dec
mov
mulb
ljmp
sbb
mov
mov
lock
adc
jl,pn
mov
inc
mov
mov
clc
add
mov
popa
pusha
nop
push
add
adc
cmovne
xor
mov
popa
int
rclb
or
mov
push
cmp
xchg
adc
inc
pop
xchg
stos
sbb
call
rclb
popf
loopne
push
ljmp
push
inc
nop
dec
sub
cs
pop
lret
rcrb
add
jae
or
jecxz
push
fisttpll
mov
jmp
inc
xchg
xlat
add
popl
lret
enter
scas
add
rolb
push
mov
sbb
add
pop
push
sbb
mov
add
adc
inc
ret
dec
repnz
fucomi
add
adc
and
inc
icebp
in
xor
popf
add
and
add
xchg
cltd
add
rorb
adc
enter
and
int
xorb
or
movhps
movb
add
jp
adc
lea
jbe
add
add
push
data16
push
xchg
pusha
mov
pop
add
mov
xor
insl
add
pop
adc
pop
mov
jb
test
cmp
fistps
lcall
lock
add
loopne
iret
add
or
mov
cmpsl
add
adc
in
insb
shll
pusha
sub
cmp
outsl
fs
in
cmpsb
stc
add
roll
insl
sub
add
repnz
es
in
popa
dec
mov
in
fnstenv
add
cmp
fbld
test
mov
int3
add
movsl
lcall
dec
pushf
lahf
adc
mov
add
sahf
arpl
jge
add
adc
sarb
add
popf
and
cld
jmp
fsubs
or
in
pop
push
or
push
dec
cld
mov
cmp
cmc
cmp
xchg
rolb
adc
mov
push
arpl
mov
add
xchg
cs
loop
and
es
pop
xor
filds
jns
push
sarl
je
push
call
mov
jne
jl
test
mov
shlb
aam
xchg
adc
mov
vmwrite
add
jae
cmp
pop
sub
adc
xchg
filds
je
push
or
mov
dec
xchg
das
sub
sbb
adc
pusha
jo
and
pop
xor
pushf
inc
repnz
dec
and
jle
nop
in
pop
lods
push
fisttpll
and
sti
push
ljmp
jle
pop
in
sbb
add
lret
cmp
pop
scas
push
bound
filds
adc
cmp
inc
inc
jp
fstpl
add
push
dec
dec
mov
cmp
aaa
cmc
sti
xchg
std
roll
add
fcmovnbe
stos
mov
insl
call
add
cmp
dec
jp
add
aas
ja
cmp
cmpb
call
or
push
mov
jnp
in
xor
inc
push
fsub
in
mov
mov
push
fisttps
push
lret
add
sti
add
ds
out
add
mov
sbb
xchg
xorb
lret
and
jbe
jl
stc
in
cmp
data16
push
mov
pop
xor
in
ja
mov
push
add
movl
or
mov
push
adc
sbb
add
pop
jnp
bound
pop
lcall
iret
clc
sahf
ffree
add
sub
rolb
push
jmp
sub
stc
fiadds
sarl
push
pop
dec
mov
scas
dec
insb
cmp
roll
jl
or
movsb
jno
push
push
test
dec
mov
and
jb
jl
or
sub
rclb
mov
sbb
ret
daa
add
push
bound
cmpsb
cmp
sbbb
insb
xchg
pop
fisubs
loope
leave
dec
push
gs
add
loopne
daa
js
in
add
dec
xsaves
jg
add
inc
inc
or
repnz
or
rcrl
leave
enter
rol
mov
mov
les
add
dec
xlat
out
aas
push
add
cld
add
fcomps
sbb
add
je
mov
ss
es
xchg
gs
sub
xchg
xchg
inc
mov
aas
add
jae
xor
enter
ljmp
flds
and
cmp
sbb
push
jp
movsb
repnz
mov
add
jae
icebp
add
pop
mov
mov
or
xchg
add
iret
xchg
jp
inc
stos
lock
jne
mov
add
scas
jge
xchg
sarl
sarl
fs
and
sbbb
aaa
add
inc
int
jmp
insb
stc
push
lret
xchg
out
sub
sbb
in
dec
scas
pusha
retw
pop
jb
pop
mov
pop
or
fadds
xchg
add
jecxz
addr16
lock
cmc
ret
str
lds
add
adc
mov
sub
fxch
and
daa
or
dec
lahf
imul
mov
sbbl
int3
call
mov
mov
ljmp
push
inc
mov
add
sub
aam
call
add
nop
pop
pop
sbb
test
add
test
add
dec
sbb
cmp
imul
pusha
add
insl
loope
mov
mov
flds
roll
pop
fcmovu
daa
push
pop
fstl
cmp
add
adc
or
add
cli
out
imul
into
add
lea
mov
inc
rcll
xchg
jmp
mov
loopne
pop
adc
mov
je
inc
push
mov
mov
scas
mov
xchg
lcall
icebp
test
ret
stos
cmpsb
push
je
jp
pop
int3
xchg
add
jg
pop
xchg
and
cmp
jmp
inc
mov
dec
add
or
inc
lock
jnp
or
fisubrs
subb
fildll
push
mov
repnz
rol
fcoml
ljmp
popf
push
mov
add
mov
jae
add
dec
int
cmp
add
int3
mov
pop
add
mov
dec
and
loopne
and
push
push
rcll
sbb
cltd
xchg
inc
dec
push
add
xchg
jbe
test
filds
sahf
in
shll
mov
lods
outsl
or
cmp
push
xchg
pop
rcl
xchg
pop
loopne
psubsw
in
pop
mov
mov
cmp
mov
rol
xchg
stc
adc
nop
add
or
scas
fildll
xchg
jle
aas
shrb
dec
fs
out
jp
add
ficoms
inc
push
mov
or
sub
ds
loop
sbb
lods
mov
ret
or
cmp
int3
jbe
or
push
cmp
or
adc
xchg
sub
adc
pusha
sub
add
push
push
dec
cs
xlat
aad
pop
or
fwait
add
jp
les
add
jmp
xor
inc
dec
outsl
mov
mov
imul
inc
xor
adc
das
push
shrb
sar
rcrl
add
cltd
call
push
in
addb
jo
push
add
pop
rorb
sub
inc
mov
fiadds
xchg
push
fnstcw
dec
pusha
shlb
enter
sub
sbb
test
add
adc
mov
loopne
fists
pop
fcomps
movsb
push
stos
cwtl
pop
add
cld
insl
push
movsl
jp
int3
mov
popa
push
push
dec
fistpl
test
rolb
fldenv
jae
jae
add
dec
and
add
add
loopne
mov
mov
sub
mov
push
xor
add
ljmp
push
into
mov
add
xchg
mov
inc
repnz
adc
or
add
data16
cmpsb
test
call
loop
add
pop
add
mov
mov
sub
inc
push
xor
and
jbe
add
cltd
pop
leave
outsl
rolb
jnp
inc
mov
push
xor
mov
adc
or
mull
fnstsw
add
lret
add
push
mov
inc
loope
lods
sub
push
movsb
imul
mov
ds
insl
sbb
inc
insb
add
enter
out
add
testb
call
cltd
mov
clc
addr16
xchg
add
aam
into
xor
scas
cmpl
mov
adc
sti
mov
pop
jne
dec
pop
enter
punpckhdq
sahf
or
sbb
jg
mov
addl
add
pushf
stos
inc
rclb
mov
pop
cli
repz
xchg
shll
add
cmp
xor
in
add
add
jge
repnz
add
jl
fiaddl
xor
mov
xchg
add
sbb
popa
int
xchg
inc
ds
add
out
fprem
push
xchg
jp
add
orb
scas
push
mov
setg
cltd
int
inc
test
nop
xor
into
das
sbb
addb
lret
add
inc
lret
imul
dec
popf
roll
inc
addl
jbe
inc
mov
incl
xchg
push
insl
and
stc
js
add
pop
popa
mov
push
int
sbb
dec
sbb
inc
cmpsl
stos
add
xchg
add
lods
lahf
out
adc
pop
arpl
scas
je
ficoml
sub
inc
nop
mov
in
subb
lods
ret
adcb
ror
paddd
in
into
add
int3
push
push
add
sbb
popa
xchg
add
add
rcrl
inc
out
lcall
jbe
push
mov
sbb
sbb
fdivrp
mov
and
test
out
cld
cmc
sbb
push
mov
mov
sub
mov
xchg
and
mov
fwait
add
jp
xor
pusha
mov
in
add
pop
setge
nop
std
mov
jecxz
jb
xor
pop
inc
andb
mov
andb
add
js
pusha
jge
jae
or
push
test
jne
imul
aaa
rorb
cmp
insb
xor
pop
cli
aas
add
testl
lods
mov
imul
sub
cmpsl
inc
mov
add
jp
inc
mov
shlb
mov
imul
pop
or
data16
out
sti
test
nop
push
jns
add
scas
or
push
push
jle
mov
add
fimull
sti
xor
lret
setp
pop
xchg
mov
push
dec
test
mov
jae
mov
leave
lea
mov
mov
pop
mov
pop
push
icebp
push
mov
push
add
jmp
fucom
sbb
sub
add
xor
inc
mov
add
loopne
mov
clc
push
bswap
mov
shll
pop
jo
cmc
scas
add
inc
pop
push
push
fiadds
push
inc
cld
xchg
nop
popf
cmp
clc
xor
ja
mov
xor
addr16
rclb
outsb
jbe
mov
jecxz
pop
inc
loope
and
lds
sbb
mov
pop
cmp
add
mov
dec
jne
mov
icebp
adc
test
data16
sbb
test
fisttpl
loop
cwtl
in
int3
add
jmp
push
mov
movsb
in
sub
push
add
outsl
pop
loop
in
or
int
icebp
cmpsl
jo
popf
cmc
xor
mov
or
dec
adc
add
push
inc
cwtl
adcb
shlb
mov
xchg
xchg
dec
jb
add
cmp
aam
in
push
add
ljmp
xchg
in
lock
push
cmp
cmpsl
xchg
add
dec
push
cmpsb
inc
push
andb
cmp
loope
mov
push
out
pusha
and
inc
lods
movsb
add
fcmovbe
rcrl
call
negb
and
or
mov
or
dec
pop
loop
jg
cltd
add
cmp
lcall
rolb
and
lods
sahf
and
lods
movb
les
daa
jb
adc
jg
sbb
jmp
icebp
lods
stos
add
mov
sbb
push
in
sbb
adc
fstpl
int
aas
push
add
mov
cld
insb
xor
xor
and
adc
sbb
mov
xchg
sbb
inc
inc
push
xchg
fisttpl
jbe
push
cltd
xor
jg
test
lods
or
ret
jg
ljmp
mov
mov
mov
dec
push
mov
aad
adc
cwtl
xor
cltd
jmp
add
xchg
jno
and
rol
das
add
sti
xor
cld
jp
add
cmp
es
movsb
or
insl
push
push
xchg
into
lods
add
imul
add
fcom
test
jge
push
mov
rcrb
lock
add
shrl
push
daa
mov
pop
sbb
adc
jle
and
popa
imul
shl
pushl
js
pop
into
and
add
dec
jge
in
icebp
add
mov
into
xchg
add
xor
mov
mov
add
test
push
mov
cmp
add
pop
push
jne
xchg
inc
aam
xor
adc
or
mov
cmc
push
lock
pushl
popa
data16
add
push
push
dec
add
icebp
rclb
mov
hlt
sub
add
xchg
xchg
sbb
jno
pop
repnz
mov
test
push
pop
mov
add
cmp
mov
jge
test
rorl
and
inc
js
xor
add
mov
mov
sbb
sbb
sti
add
fucomip
icebp
out
push
add
jne
inc
jle
add
and
dec
mov
cmp
xor
sbb
pushf
icebp
xchg
pop
or
test
pop
outsb
out
mov
inc
enter
or
sub
out
xchg
pop
test
orl
adc
mov
insb
xchg
out
push
ss
cld
sbb
and
inc
cwtl
mov
inc
xor
add
iret
or
jl
cmp
add
call
test
ficoms
cmp
aas
add
es
push
jl
dec
add
cmp
mov
add
xor
jp
les
mov
pop
pop
pop
cmp
ret
frndint
sbbl
adc
leave
out
pop
loop
add
scas
adc
imul
mov
push
and
sbb
dec
rclb
lods
add
cwtl
lret
das
cmp
dec
sbb
popf
leave
test
nop
add
pop
mov
add
out
xor
add
ret
dec
lea
out
loop
cli
repnz
add
movsl
shl
std
in
negb
push
js
dec
mov
push
fldl
mov
dec
movb
cmc
sbb
mov
adc
cmp
sbb
xchg
push
aam
aaa
inc
jb
add
in
adc
aaa
cmp
mov
cmp
xchg
mov
clc
shll
lea
add
fimull
mov
jmp
clc
dec
arpl
adcl
js
lret
lcall
or
pop
pushf
add
jg
pop
or
inc
addl
sbb
and
adc
sti
add
adc
mov
popa
pop
aaa
mov
lret
sbb
inc
mov
sbb
icebp
add
dec
dec
push
out
sbb
fnstcw
lret
lret
push
stos
add
adc
ljmp
xor
mov
jge
fwait
push
lret
pusha
pusha
mov
test
or
xor
incb
std
or
mov
lods
call
pinsrw
push
push
cmp
testb
loopne
fists
adc
inc
inc
cmp
popf
mov
jge
ja
add
cwtl
stos
aad
ja
dec
jg
lea
add
sub
add
inc
fadds
daa
inc
in
mov
mov
loopne
mov
dec
cmp
push
sbb
outsl
pop
and
orb
sub
cmc
int3
add
inc
sbb
push
es
dec
jp
pop
movb
enter
icebp
pusha
or
lock
add
lea
add
xor
nop
add
mov
pop
out
in
stc
add
int3
sub
pop
adc
jle
push
pop
jge
in
movl
lcall
xchg
push
negb
shlb
addr16
out
xchg
lods
add
nop
stos
cmp
loopne
mov
push
or
int3
jecxz
mov
nop
cmp
in
daa
nop
mov
xchg
sub
mov
sbb
cs
out
cwtl
cmp
call
add
jo
mov
add
push
pusha
mov
lock
lret
orb
xor
add
cmpsb
push
add
mov
ss
sbb
dec
push
inc
rcrb
and
roll
adc
outsl
aas
mov
aaa
add
jne
stc
xchg
ret
jl
lods
lar
inc
stos
in
test
andb
mov
push
adc
outsb
add
lret
sarl
inc
jl
add
and
clc
add
ja
jns
pop
or
imul
add
idivb
mov
ss
bound
clc
xor
cmp
xchg
sbb
das
add
dec
clc
popa
xor
add
mov
mov
loopne
ret
adc
stos
xor
xchg
inc
repz
in
inc
movsb
mov
push
adc
push
lahf
add
test
mov
repz
push
push
jnp
jg
mov
scas
push
test
fildl
xchg
lock
xchg
adc
aad
pusha
addr16
add
dec
popf
jle
mov
pop
push
cmpl
sub
lods
clc
sub
call
add
shl
mov
dec
js
or
mov
adc
mov
add
adc
sub
push
add
jmp
jne
xor
pop
add
addr16
mov
lds
sbbb
add
push
stos
or
adc
inc
fstps
sbb
adc
sbb
insl
xchg
out
and
inc
add
shll
adc
inc
sub
mov
mov
fadds
inc
je
arpl
dec
adc
cld
cmp
add
addr16
in
inc
ja
push
cmp
pop
out
arpl
outsb
xor
jl
out
mov
jns
add
mov
adc
js
test
scas
or
andl
and
jne
addr16
pop
push
add
pop
jne
or
mov
inc
cmpsb
push
adc
popa
rolb
addb
loopne
cmp
jecxz
xchg
stos
arpl
push
popf
inc
outsb
cmpsb
je
jne
jmp
or
ljmp
pusha
jno
cmp
sub
pop
mov
add
push
pusha
lods
add
mov
enter
push
push
outsb
add
in
xchg
popa
push
jge
add
cmp
sub
and
xchg
mov
dec
mov
in
pop
outsl
dec
gs
add
add
fwait
push
add
lcall
push
mov
or
lahf
std
rolb
inc
mov
cmp
sbb
orb
inc
popf
inc
aam
add
dec
and
ja
insl
rcl
mov
push
cmp
adc
sub
shl
loope
movsb
jg
pop
mov
loopne
add
stc
jbe
rclb
sbb
mov
nop
mov
jo
dec
fsubs
lret
pop
fwait
leave
into
add
cli
sbb
push
mov
push
or
pop
cwtl
rorb
add
aas
mov
popa
add
ljmp
xchg
mov
pop
xchg
sbb
pusha
dec
out
add
jns
repnz
add
add
sbb
rcrl
pusha
call
je
or
dec
add
addr16
xor
sub
pop
add
mov
push
cmp
enter
lahf
daa
mov
mov
iret
mov
imul
mov
loopne
int
adc
ret
pop
sbb
pushf
sub
out
and
sbb
fimull
add
cmp
xchg
cmpb
stc
add
mov
adc
filds
xchg
xor
add
int
incl
add
out
int3
hlt
mov
stc
inc
and
mov
call
push
aad
lock
pop
aas
jns
adc
scas
jmp
fcoms
cmp
lods
ret
lahf
sub
sub
movsb
jbe
add
daa
movsl
add
or
lcall
push
mov
nop
mov
mov
inc
je
iret
mov
in
sarl
pop
add
repnz
xchg
imul
movl
lcall
and
add
or
call
dec
push
jo
setl
pop
popf
cmp
sbb
mov
ds
add
popf
sub
add
push
add
lods
fwait
loop
add
test
add
sub
mov
xchg
inc
fstps
and
ret
add
adc
mov
lret
push
adc
aaa
leave
inc
xor
test
imul
and
hlt
into
in
sub
xchg
mov
sub
out
mov
push
aam
dec
add
add
or
dec
in
orl
inc
scas
add
or
mov
sbb
dec
dec
stos
divl
add
aad
iret
xor
and
push
mov
push
dec
out
or
sbb
dec
mov
mov
fisttpl
inc
arpl
xor
add
sbb
aas
dec
iret
jl
add
fcoms
pop
divl
mov
sub
ljmp
xor
lock
sbb
dec
push
hlt
dec
jne
xchg
lea
ret
push
mov
mov
pusha
pop
sub
mov
repnz
js
scas
add
fcomps
fs
push
fildl
jl
and
cld
mov
subps
nop
inc
ss
jl
sbb
addl
adc
mov
add
jg
or
les
dec
pusha
mov
cmp
jg
sbb
iret
sarb
pop
fldl
add
jo
out
mov
mov
add
lock
cwtl
ljmp
xchg
push
mov
out
push
mov
js
nop
jl
imul
and
decl
je
out
lcall
test
pop
loope
scas
divb
pushf
dec
xor
ret
rolb
scas
xchg
cmp
push
push
in
adc
clc
lods
fwait
lock
sbb
mov
xorl
test
enter
lods
ret
dec
jne
dec
jno
xchg
lea
cmc
add
xchg
add
lock
add
cmp
xchg
and
and
add
fisubl
fistpl
in
dec
mov
xor
ljmp
int3
add
pop
ret
sbbb
je
mov
and
das
inc
and
loopne
loopne
add
xchg
pop
cmp
inc
enter
dec
or
lock
ja
enter
cmp
push
pop
and
jne
dec
filds
faddl
inc
loopne
repnz
jnp
cmp
movsl
xchg
mov
test
xchg
mov
in
lds
add
cmc
pop
dec
aas
sub
out
lret
bnd
insb
and
sub
add
and
add
jnp
iret
fsubr
mov
test
dec
mov
mov
std
add
inc
cmpsb
shlb
sub
and
ret
inc
fdivrs
add
mov
mov
adc
enter
add
push
imul
xchg
movsl
add
not
jno
insb
nop
daa
loopne
les
adc
push
gs
mov
popa
cmp
pop
test
sbb
pop
lds
ljmp
frstor
lods
movsb
mov
add
sbb
in
test
sbb
add
adc
dec
inc
mov
jno
add
xchg
add
jbe
pop
inc
data16
mov
shll
sbb
dec
scas
das
lahf
sarb
lods
jle
cld
jg
in
jp
je
mov
lock
and
or
inc
xchg
mov
push
fcoms
imul
in
imul
inc
fisubrl
add
roll
subl
in
sbb
mov
pop
or
jbe
incl
in
or
push
pop
mov
int3
int
test
sub
mov
add
test
sbb
fidivrl
cmp
add
repnz
or
out
mov
enter
and
es
daa
mov
sbbb
add
mov
fmull
ror
cmp
call
std
add
jb
out
add
sbb
fsts
int
dec
add
gs
push
jmp
cmp
add
or
add
popa
or
inc
adc
adc
push
popf
cmp
add
push
lods
shll
adc
int3
test
je
pop
ret
int3
jo
inc
jb
testb
jp
repnz
cmp
pop
dec
movsl
push
add
outsb
push
jge
mov
pushf
lock
sbb
push
push
sub
rcr
pop
ds
cwtl
es
xchg
sbb
test
lods
das
add
jp
cli
pop
sbb
push
add
jmp
xor
es
mov
mov
repz
fidivl
add
xchg
add
xchg
faddl
add
xchg
pop
ss
lock
mov
sub
into
nop
adc
add
cmc
or
mov
mov
lahf
sbb
cli
cs
sub
sarb
and
inc
mov
rol
and
push
dec
pop
and
pop
and
jns
mov
movl
sub
adc
add
ss
hlt
aad
out
mov
dec
leave
adc
pop
sbb
add
sbb
fsub
sarl
and
xor
jg
or
mov
es
out
pop
andl
jge
stc
aam
ret
mov
mov
pop
xor
pop
pusha
scas
sub
es
pop
add
arpl
lret
add
adcl
std
orb
mov
fisubl
sub
mov
enter
in
add
aad
mov
out
cmp
into
cli
repz
adc
or
cmp
nop
inc
mov
loopne
sbb
pmaddwd
enter
cmp
call
add
mov
mov
icebp
cli
pushf
push
sti
dec
sbb
cmpsb
add
mov
out
jo
hlt
xchg
lods
pop
lcall
pop
aam
or
jmp
cwtl
shlb
and
sbb
xchg
rolb
mov
pop
data16
movsl
movsb
or
adc
push
adc
add
outsl
or
dec
push
push
xor
pop
cltd
add
add
sub
pop
jmp
inc
hlt
xchg
lahf
clc
jl
xchg
add
dec
les
scas
mov
movl
in
add
sarb
adc
scas
cmpb
cmpsl
or
jmp
xor
fstpt
jne
push
scas
lret
xchg
and
inc
test
stos
sbb
sub
iret
das
fistl
xchg
or
movsb
je
mov
pop
mov
add
sbb
mov
jge
add
push
mov
dec
roll
iret
cmp
ficoml
sbb
or
lahf
ret
jo
in
push
fdivrl
andl
and
imul
mov
icebp
add
nop
pop
enter
add
or
sbb
pusha
ljmp
adc
sbb
data16
loope
inc
xchg
fiaddl
cld
fs
ss
sub
push
sbb
and
xchg
xor
stos
iret
inc
mov
in
cmp
incl
and
aaa
stc
movsb
xchg
add
rcrl
sbb
test
inc
lods
dec
test
push
pop
into
adc
xlat
cmp
loopne
cld
insl
iret
push
add
mov
pop
mov
sbb
push
xor
xor
test
cltd
mov
out
push
add
repnz
push
xor
mov
or
dec
add
xchg
call
leave
iret
pop
xor
js
shlb
push
sub
inc
addb
into
push
pop
enter
add
add
es
add
subl
add
pop
xor
mov
es
shll
push
out
out
inc
mov
outsb
push
in
or
xchg
mov
rolb
popa
dec
lods
daa
xlat
enter
add
stc
mov
mov
or
push
add
push
and
add
mov
out
add
mov
push
aam
lods
mov
cld
mov
pop
icebp
adc
hlt
inc
popf
add
dec
push
loope
rorb
or
adc
pop
jl
jbe
pop
insl
andb
pushl
insb
in
sub
pop
sahf
and
pop
lahf
out
jecxz
sbb
shr
xorl
push
ljmp
lret
push
pop
push
shll
push
mov
imul
fs
cmpl
xor
push
xlat
add
or
xor
jl
inc
push
xchg
pushf
xor
hlt
add
movsl
cltd
pop
roll
lret
rcrl
imul
jo
xchg
add
rcrb
ss
sub
cmp
and
roll
add
sub
pop
add
popf
repz
mov
jb
add
push
int3
pop
pop
ds
inc
nop
mov
dec
pop
cmp
mov
inc
xor
ret
cwtl
sub
aam
xchg
pop
loope
dec
ds
jge
mov
lock
xchg
rcr
xchg
mov
add
or
push
dec
out
pop
add
movsb
mov
push
inc
test
add
aas
dec
mov
daa
add
jp
aad
shlb
cmp
lods
sub
dec
enter
pusha
add
sbb
sub
stc
pop
push
sbb
sti
scas
mov
movsb
sbb
adc
insb
pop
rolb
addl
xlat
add
popa
pop
cmp
test
xor
mov
in
add
or
test
movsb
add
popf
test
cld
mov
dec
nop
xor
fisubrl
mov
je
jb
mov
lahf
add
xor
outsl
mov
pop
jns
xchg
daa
cmpsb
xor
nop
insb
add
inc
rorl
xchg
mov
mov
xor
lahf
sub
push
add
adc
pop
sub
jnp
inc
add
rcrl
push
scas
add
cmp
outsl
fs
dec
pop
js
orb
push
sub
out
andb
sbb
sarb
outsl
jo
sub
movzbl
xor
cmc
jmp
add
adc
pop
inc
fisubs
andb
dec
jae
add
lret
ret
movsl
shlb
mov
push
ret
add
int3
sbb
out
sub
loopne
out
mov
push
xor
sbb
push
movsb
add
jae
stc
add
or
ret
loopne
rol
lcall
pop
adc
fldl
push
sub
xor
nop
cli
and
mov
xchg
jo
pop
add
std
aad
xor
xor
cli
cmp
xchg
jnp
sbbb
mulb
cwtl
xor
in
fnstcw
pop
in
adc
xchg
lahf
jle
orb
inc
push
cmp
jne
xchg
cwtl
js
clc
cmp
add
push
pop
loop
loopne
filds
mov
mov
ret
pop
xchg
repz
push
loop
idivb
adc
mov
xorl
repnz
call
shll
mov
mov
add
mov
int
ss
sbb
cmc
or
xor
icebp
jg
cmp
mov
loope
xchg
ret
push
pop
test
pop
jnp
pop
sbb
jmp
add
aad
icebp
sti
loopne
mov
les
adc
push
enter
cltd
and
pop
mov
push
cmc
andb
bnd
ss
inc
into
out
xorl
lret
insb
add
adc
xchg
or
jae,pt
jo
push
and
test
bound
inc
push
in
sub
sbb
dec
push
cmp
testl
inc
out
loopne
xchg
popf
add
inc
test
sub
or
push
dec
mov
cltd
add
aad
cmc
add
lods
add
icebp
sbb
inc
and
cmp
sbb
mov
out
add
xlat
sbb
jns
sbb
movl
add
loope
icebp
loope
int3
inc
lock
sarb
add
mov
les
sub
rcrl
push
push
gs
stc
add
inc
or
adc
dec
idivb
cmp
xchg
pusha
dec
orl
and
lds
sub
or
sbb
sbb
push
out
roll
mov
daa
test
add
inc
pop
and
sub
mov
xchg
test
xor
dec
icebp
outsl
add
add
mov
add
loopne
jae
sub
sbb
testl
jnp
mov
pusha
sahf
inc
mov
fimuls
test
nop
inc
out
stos
cld
lods
mov
jo
fsubs
sub
test
inc
cmp
add
or
sbb
mov
xchg
dec
cli
dec
or
jo
inc
leave
imul
test
mov
mov
sbb
sbb
xchg
mull
arpl
or
fnstenv
mov
icebp
inc
jle
xchg
movb
adc
sbb
jns
pop
mov
imul
out
jnp
mov
adc
lock
sub
mov
inc
jns
movsl
sar
and
fcompl
sbb
fwait
push
in
mov
push
notb
add
and
or
sub
fwait
enter
push
lock
add
jnp
idiv
jno
push
stc
mov
inc
and
push
jae
fildl
jge
pushf
lock
xor
fcmovu
popa
dec
js
dec
xchg
and
push
bound
inc
add
inc
cmp
inc
jno
add
and
fcmovb
mov
negb
leave
adc
mov
dec
flds
add
xchg
out
jmp
add
loopne
or
ds
popf
dec
xor
mov
nop
rolb
mov
fst
add
add
sub
xchg
sub
sub
xor
cmp
inc
push
lock
cmp
mov
ficompl
inc
push
jle
int3
add
xchg
jne
or
sub
adc
and
sub
dec
or
lea
xchg
or
xor
les
add
xlat
cmp
jo
or
mov
jns
add
out
fsubrl
add
mov
int
lock
sub
movsl
adc
lds
mulb
packuswb
lods
and
insb
es
dec
int
pop
inc
ds
adc
into
mov
fdiv
xchg
xor
jg
mov
les
nop
mov
or
call
add
fisubrl
pushf
jge
imul
mov
orb
cmp
orb
in
icebp
jecxz
sub
cmp
jo
inc
fsubs
fbstp
or
inc
add
mov
dec
cmpb
mov
sbb
jg
in
pop
add
mov
iret
nop
and
fisttpl
or
enter
pop
dec
enter
jno
dec
in
cld
out
add
cmpb
insb
test
sbb
lock
addb
mov
add
je
xchg
lret
add
mov
inc
pop
add
xor
loop
jns
add
pop
js
sub
loope
call
cmp
jo
lea
mov
stc
les
call
inc
arpl
dec
xor
loope
sub
cmp
pop
mov
loope
add
jmp
mov
xchg
mov
add
rcrl
dec
addb
out
lock
cmp
pushf
sbb
or
add
sarl
sub
bound
jo
adc
cwtl
jno
xchg
shlb
mov
mov
fwait
pop
sbb
mov
xor
mov
movsl
xor
cmp
jae
imul
nop
mov
jne
add
sbb
sbb
popf
ljmp
pop
add
cmp
je
mov
aaa
pop
in
int3
xchg
pop
jp
push
add
push
sbb
je
xor
pop
and
sbbl
cmpsl
mov
add
aaa
or
add
popa
pop
push
push
rorb
jnp
sbb
dec
shrb
add
test
sub
lock
jbe
sbb
mov
lret
mov
rcll
jnp
and
add
ret
sub
mov
jg
adc
add
aaa
dec
fdivrl
inc
xchg
iret
xchg
mov
aaa
mov
sbb
mov
and
add
pop
repz
jne
das
repnz
cli
xchg
add
or
in
sbb
sbb
sub
mov
xchg
andl
jne
fs
cld
mov
push
hlt
push
cmp
and
cmp
add
adc
mov
inc
popf
add
leave
pushf
addr16
cmp
jb
xor
jnp
insb
repz
rclb
jne
add
xor
jno
lahf
cwtl
jp
xor
flds
mov
outsb
xchg
jns
xchg
jl
add
sbb
cmp
cmp
notb
inc
add
gs
sub
mov
rclb
jle
test
mov
push
inc
xlat
outsb
add
test
movsl
shl
push
lcall
cmc
shl
mov
icebp
mov
cmpsb
mov
sub
repz
sbb
dec
add
test
icebp
adc
out
sbb
lods
lock
jp
pop
and
adc
jge
pushf
jne
sub
mov
mov
xchg
push
je
pop
add
std
in
scas
notl
mov
and
xchg
inc
lea
or
mov
sbbb
add
pop
push
push
bound
icebp
movsb
iret
adc
mov
xchg
jb
or
cwtl
or
fiadds
cmp
test
outsb
cwtl
xchg
sti
pop
jl
nop
xchg
punpckldq
sub
add
stc
pop
mov
and
call
inc
jae
push
aam
add
mov
addb
rcll
mov
or
loope
inc
rolb
fxtract
sti
rclb
xchg
cmp
loopnew
sbb
pop
jb
xchg
fisttpll
push
je
orl
xchg
or
adc
bound
lock
add
mov
cmpsb
test
outsb
orb
mov
gs
inc
js
inc
aad
dec
mov
jp
pop
test
lret
jne
push
sub
outsl
sbb
dec
rcr
lcall
sub
jge
push
or
sar
sub
add
into
inc
add
add
iret
insl
push
ds
adc
fwait
mov
pop
aas
xchg
sahf
jo
mov
jne
pop
cmc
xchg
mov
pusha
loopne
inc
jo
add
incl
outsl
movsl
sbb
adc
inc
push
add
xchg
jmp
cs
mov
loopne
and
mov
stc
daa
call
popa
xchg
repnz
push
inc
loop
pushf
inc
inc
xchg
aas
das
fimull
jg
inc
shlb
inc
cli
shll
daa
into
js
xchg
mov
add
out
pop
push
and
sub
push
repnz
push
xor
jno
dec
js
test
ss
dec
popa
add
push
dec
bound
repnz
xorb
test
repz
aaa
repnz
and
dec
sbb
push
test
jmp
mov
test
aad
andl
movsl
add
mov
aaa
negb
data16
arpl
mov
and
fisttpll
inc
pop
les
jp
les
jb
jno
shrb
sti
mov
inc
lods
push
mov
sahf
fprem1
mov
or
stc
fadd
xor
add
out
loopne
and
pop
sub
add
lds
hlt
push
repz
jg
rcl
aam
repz
loope
inc
push
loopne
sub
lret
add
adc
jae
xor
and
xor
movsl
jmp
add
test
pop
sub
sbb
add
sti
mov
or
cmp
sarl
ds
or
dec
cmp
inc
xor
out
jnp
add
jns
stc
aam
sub
dec
and
pusha
dec
inc
insl
adc
xchg
push
sahf
cmpsb
adc
aad
dec
and
mov
add
or
inc
add
push
repz
insl
sub
add
out
outsl
enter
es
ficoms
test
adc
xchg
sub
jae
mov
inc
push
aaa
add
filds
xchg
je
adc
xchg
movsb
and
std
xchg
sbb
mov
cmpsb
jae
out
stos
das
xor
jns
add
adc
sahf
mov
inc
daa
add
cmp
jg
in
push
ss
add
aam
xchg
add
and
add
or
jnp
insl
sbb
and
jecxz
xchg
inc
dec
cli
pop
mov
fnsave
mov
outsl
pop
or
add
inc
or
inc
in
add
cmpsl
call
lea
movsl
sub
mov
testl
xor
divb
ret
cmp
test
fs
jnp
outsl
mov
mov
and
push
mov
push
stos
or
or
sub
add
mov
stc
mov
xchg
or
outsb
je
fwait
enter
cmp
add
test
cs
je
sub
pop
adc
xor
es
add
cwtl
loopne
call
mov
mov
and
sbb
jb
lea
or
sbb
jne
fisubl
pop
js
in
push
push
test
mov
push
mov
inc
mov
or
lods
mov
fmull
cmc
test
insb
adcb
add
cmc
notl
mov
xchg
test
fs
outsb
mov
push
rorl
sub
inc
add
scas
fisttpll
js
inc
inc
mov
inc
or
add
les
mov
xchg
lock
or
jb
jle
cmp
mov
xor
xchg
adcb
popa
inc
neg
and
fs
xchg
out
and
pop
ficomps
pushf
sbb
mov
dec
jne
pusha
push
out
jae
add
push
sbb
clc
push
add
into
mov
pop
imull
hlt
sub
cld
add
sub
cmp
and
and
lcall
dec
or
cmp
lahf
ljmp
nop
inc
jae
mov
and
pusha
das
sbb
add
jecxz
or
sbb
loopne
neg
lods
shrb
adc
inc
insb
out
aam
push
inc
cmp
enter
add
fisttpl
lcall
sbb
out
push
add
insb
mov
inc
xor
pop
arpl
sbb
shl
pop
pushf
test
lahf
movsl
insl
enter
movsb
xchg
jg
movsl
pop
cmp
mov
loopne
adc
mov
jecxz
pusha
xor
gs
xor
push
pop
mov
fistl
pop
add
add
add
ds
hlt
cmp
lods
add
mov
and
add
sti
push
mov
mov
jecxz
int3
sahf
add
les
or
add
iret
add
mov
add
test
shrb
add
mov
iret
adc
add
mov
sub
rorl
sti
sbb
and
mov
mov
xchg
sub
add
out
jno
push
js
xor
in
pop
call
and
popf
pusha
inc
push
pop
aam
js
xchg
add
lock
mov
cmp
mov
push
inc
fsubrl
add
lea
add
mov
loop
pop
cmp
fimull
lock
adc
shrb
movsl
mov
sbbb
loope
mov
sub
notb
xchg
jns
movb
xchg
into
and
mov
adc
movl
filds
xor
in
outsb
das
pop
addr16
fnsave
mov
push
stc
mov
push
movsl
rcrb
dec
ds
fimull
cmp
or
movl
mov
push
rcl
add
adc
xor
xchg
test
cmp
cmc
out
jecxz
inc
ljmp
incb
je
fimuls
aas
or
jl
fwait
subb
shr
dec
cmc
inc
in
dec
stos
test
jle
or
mov
add
push
push
cli
mov
jecxz
dec
cmc
ret
cmp
rcll
in
subb
lock
cwtl
jo
cs
or
dec
fwait
jbe
pop
jmp
mov
mov
clc
cwtl
rsqrtps
push
sbbl
fnsave
add
add
cmp
cwtl
inc
frstor
pop
out
dec
leave
ffreep
jge
sub
pop
xchg
dec
out
add
in
mov
add
loop
jne
adc
mov
mov
xchg
aas
stos
mov
mov
add
add
add
shr
daa
cwtl
mov
std
adc
mov
or
xchg
popf
fidivs
push
jb
xchg
jg
add
cmp
ds
jmp
fisubs
mov
add
js
lahf
xchg
cmc
dec
mov
sbb
adc
subl
cmp
loope
mov
mov
cltd
push
repnz
mov
dec
lahf
outsb
int3
add
aaa
or
scas
xor
dec
and
adc
add
cmp
movsl
fldl
je
inc
push
fwait
jno
jg
nop
sub
jb
mov
les
pushf
pusha
xchg
outsl
add
in
or
and
add
inc
cmp
cld
add
sub
es
rorl
ja
add
pop
mov
loopne
mov
inc
cmc
xchg
mov
in
adcb
mov
cld
and
adc
xchg
out
add
push
enter
cmpsl
push
sub
fisttpl
leave
mov
test
lret
mov
add
call
add
push
pop
jo
test
add
outsb
mov
str
sahf
lcall
out
xor
cmp
test
add
rorb
xor
jle
and
int
cmp
je
or
outsl
fwait
call
mov
jae
mov
add
dec
pop
cs
js
cmp
outsb
or
inc
sbb
and
and
jp
add
sub
mov
orb
andb
call
cs
add
cmp
fsts
xor
sar
rcrl
inc
lds
lock
mov
mov
push
stos
or
mov
xlat
cmp
mov
into
imul
dec
daa
push
jb
sarl
push
jae
int3
or
add
mov
sti
ror
aas
movsl
hlt
pop
sub
jo
loopne
push
inc
lret
icebp
mov
test
xor
mov
jae
jb
inc
jne
mov
fstpt
les
cmp
adc
mov
dec
add
out
in
nop
and
xor
sbb
insb
sbb
xchg
jmp
lcall
dec
adc
push
xchg
mov
shrb
inc
sub
and
push
add
xor
mov
movsb
ss
or
sbb
push
addl
sbbb
ds
outsl
fildll
insb
inc
mov
add
incb
out
lahf
movb
mov
inc
mov
test
or
dec
cwtl
or
lea
fwait
popa
and
fstl
cmp
mov
cli
adc
fwait
jae
inc
add
fiadds
daa
mov
push
add
sub
sbb
test
xchg
in
js
add
movsl
dec
es
cmpsl
ja
pusha
hlt
shll
insb
frstor
es
mov
dec
dec
adc
out
test
loope
adc
and
test
pop
imul
rorb
shll
into
imul
ficoms
aas
mov
test
inc
test
insl
shr
add
jp
jecxz
cltd
dec
pop
or
pop
fcmovnbe
cmp
sub
add
ljmp
shll
add
mov
add
pop
popa
xor
lock
incb
lahf
and
dec
cmp
xor
cmp
cmc
mov
sarb
outsl
dec
mov
push
cmp
ss
xor
push
cld
lea
std
and
jns
adcl
rcl
lds
jg
gs
pop
ja
push
xor
jb
int3
add
fcomp
test
push
movb
iret
cmc
repnz
inc
ja
add
in
mov
pop
aad
outsb
jo
sub
daa
add
movsb
pop
push
mov
sub
sbb
repnz
loop
out
add
mov
cmp
js
add
aas
int3
xor
cmpsb
pop
aaa
fstps
cmp
mov
inc
mov
addb
add
in
loopne
das
sbb
xchg
fistpll
mov
pop
and
xor
adc
ss
push
rclb
jno
shrb
xchg
ds
push
ret
fs
pop
sbb
fcompl
mov
jmp
mov
addl
lods
dec
mov
add
inc
cli
fdivrp
divb
push
mov
jnp
lock
movsb
add
push
inc
jl
jle
and
pop
mov
ret
popa
or
mov
int3
adc
in
insb
in
add
call
sbb
mov
rcrb
inc
cmpsb
push
adc
repnz
andb
inc
inc
add
sar
popa
notl
jmp
lahf
adc
lcall
sub
add
xorb
cld
jmp
lcall
push
testb
add
xlat
add
ljmp
call
jmp
inc
adc
adc
add
xchg
add
fistpl
xchg
scas
pusha
xor
inc
pop
js
add
ds
jno
fimull
sbb
add
pop
jge
jmp
pop
mov
sbb
xchg
sbb
out
inc
loopne
cmpsb
lahf
adc
and
cmp
out
stos
add
xor
mov
add
mov
pusha
in
cmc
add
fbstp
pop
jns
add
mov
mov
push
push
shrb
inc
lods
imul
jg
call
sti
test
pop
lcall
xchg
adc
mov
push
sub
or
adc
push
mov
mov
jle
gs
adc
scas
jmp
in
add
add
jns
pushf
push
vaddss
and
mov
xchg
mov
push
bound
inc
mov
add
xchg
push
shll
pop
or
jp
outsl
lea
data16
adc
and
mov
iret
lods
xor
jle
test
add
jns
mov
shr
inc
adc
add
inc
sub
push
xor
repz
jns
aam
lret
add
add
int
mov
xchg
cmpsb
push
movsl
pop
std
pop
pop
filds
lods
cltd
ss
add
and
jecxz
sbbb
mov
sti
popa
ss
or
dec
icebp
sub
sarb
scas
aam
sbb
xor
imul
xlat
mov
lret
test
or
xor
dec
or
dec
dec
jo
lcall
push
ss
int3
addb
jge
aas
push
pop
out
pop
push
lret
ss
add
and
ret
cld
xlat
jmp
or
mov
add
sbb
int3
mov
pop
movsl
or
jle
lret
add
mov
rcll
lock
fs
cmpsb
aam
in
mov
add
lea
dec
sub
add
mov
cmp
cmpl
pusha
rcrb
push
or
cs
mov
cld
or
mov
jns
add
dec
cmpl
pop
cmp
out
add
sub
adc
addb
xor
xor
mov
loopne
inc
outsb
push
sbb
test
sarl
rclb
insb
xchg
sbb
incb
hlt
add
cmp
mov
loop
xor
push
pop
push
aam
nop
pop
mov
repnz
push
jb
cmp
xorl
call
imul
pop
add
dec
es
and
fdivrs
inc
mov
ret
pop
gs
clc
and
add
dec
sbb
outsb
jle
push
add
mov
nop
mov
call
mov
in
pmaxsw
adc
icebp
mov
cld
test
jmp
jbe
roll
repz
out
inc
test
inc
dec
je
cmp
nop
mov
sarb
and
push
in
fmulp
sbb
mov
sbb
sarb
cs
add
sbb
add
push
call
jns
mov
add
pop
ficoms
jg
add
popf
jno
pusha
pop
adc
ljmp
push
iret
sub
pop
xor
mov
pop
push
cld
xchg
add
sahf
into
test
pop
mov
rcrb
lret
or
sbbb
jg
notl
inc
and
fdiv
add
ds
ret
adc
jmp
pop
sbb
sub
and
ds
and
cltd
add
add
mov
dec
push
inc
lcall
lea
bound
add
aad
rcll
jb
test
out
adc
cmp
mov
adc
mov
cmp
dec
fidivrs
mov
nop
mov
lods
push
dec
rolb
cwtl
cwtl
jno
js
push
pop
mov
sbb
fs
add
lock
fmuls
mov
jo
cwtl
ret
jb
add
inc
mov
or
lods
scas
and
jne
sub
lods
mov
add
mov
imul
cli
sti
lock
add
and
aam
fstpt
push
add
cmp
repnz
nop
add
mov
jne
adc
filds
add
je
mov
andnps
es
push
inc
fnstsw
add
push
pop
lods
jae
dec
ds
jp
pop
fnstcw
in
or
cltd
stos
add
mov
jle
add
jl
enter
cli
pop
add
xchg
push
inc
add
add
icebp
sbb
rclb
enter
pusha
pop
jnp
add
insb
popa
scas
sbb
call
pop
rclb
scas
inc
fldcw
add
lahf
mov
add
roll
push
or
add
ds
fistl
dec
lret
imul
cmp
adcb
xchg
sub
lahf
fidivs
lock
jge
xor
add
outsb
lret
andl
sub
movsl
lea
ret
sbb
sub
repnz
dec
and
or
mov
sbb
cli
outsb
cmp
mov
cwtl
add
cmp
mov
aas
sbb
pushf
or
lods
dec
add
cld
and
in
add
out
add
add
adcl
mov
adc
pop
sbb
sbb
push
push
cmpsb
or
pop
push
inc
insb
cmpsl
mov
add
dec
pop
push
xorl
test
cmp
mov
outsb
dec
mov
fs
fwait
andl
jnp
sbb
add
ret
xchg
aad
hlt
add
add
cld
es
inc
and
popf
push
ret
aas
push
add
in
push
andb
enter
ss
mov
inc
pop
sbb
cld
mov
cmp
mov
out
sub
cmp
and
stc
fmuls
lret
shrl
fs
add
mov
and
add
outsb
and
xchg
sub
push
dec
add
jl
mov
adc
mov
lock
imul
int
mov
pop
mov
or
outsb
leave
and
jp
adc
cltd
insb
jecxz
out
pop
movzwl
xchg
xor
fisttps
pop
pusha
pop
add
test
sub
divb
gs
sub
lret
adc
lock
jo
bound
addb
pop
push
decl
ds
add
inc
nop
sub
mov
cmpsl
cld
lret
add
dec
fstps
inc
je
jnp,pn
push
dec
pop
cwtl
cwtl
push
std
pop
pmaxsw
sub
dec
and
testb
sub
call
adc
add
roll
adc
add
dec
notb
and
mov
sub
cmp
add
jmp
shlb
adc
adc
adc
sbb
or
jge
add
shlb
dec
fdivrl
pusha
add
in
lahf
sbb
inc
outsl
aas
dec
add
iret
icebp
push
in
loopne
cmpl
sarl
cmp
aaa
add
cmp
add
add
push
fucom
movups
fldcw
push
or
xchg
mov
pop
and
jno
push
mov
shlb
into
shlb
lods
loop
push
repnz
jnp
xchg
inc
inc
cli
mov
clc
or
rorl
push
movsl
dec
inc
cld
jle
add
ja
push
add
cmpb
cmpsb
mov
or
add
pop
mov
iret
inc
mov
test
jge
xchg
pop
outsl
or
dec
data16
imul
pop
in
pop
add
lds
leave
ret
xchg
sbb
cmp
jg
stos
xchg
mov
add
push
shll
xor
push
dec
jnp
jo
push
xor
add
mov
sub
sti
dec
test
data16
jmp
inc
aad
sahf
xor
icebp
and
mov
push
cwtl
add
sbb
fdivr
repnz
pop
push
push
mov
fwait
adc
fiaddl
xor
mov
loope
pop
negb
xchg
dec
push
andb
and
fmul
int3
les
mov
ja
xor
es
cmp
jecxz
add
jo
pop
cmp
leave
sbbb
aam
jge
faddl
in
xchg
or
mov
adc
sbb
popf
or
in
cwtl
data16
je
push
push
adc
add
movsb
cmp
pop
xor
and
xchg
and
rorb
xor
sub
iret
jg
jne
add
arpl
add
jno
sbb
ja
push
push
push
dec
cltd
add
fs
jns
leave
test
add
addl
xchg
push
pop
out
lea
shr
add
mov
pushf
sbb
loope
cmp
push
adc
jmp
testb
xchg
lods
dec
mov
in
add
movsl
ret
rcrb
cmp
std
dec
fld
xchg
and
sbb
daa
pop
loopne
mov
lahf
ja
popf
xchg
inc
add
add
test
fstps
out
cli
add
cld
pop
and
mov
mov
fs
add
push
mov
aam
and
repnz
jl
mov
add
js
leave
addl
ljmp
add
jecxz
icebp
push
enter
push
dec
and
nop
jl
insb
nop
add
repnz
xchg
inc
sbb
add
xchg
dec
loop
movsl
and
lsl
mov
enter
add
dec
mov
decb
push
cwtl
and
add
ljmp
xchg
sti
enter
add
mov
inc
xor
jb
lea
imul
xchg
mov
iret
popa
jae
sahf
dec
movsl
add
aas
add
sti
das
mov
and
into
cmp
out
add
xor
roll
dec
xor
mov
pop
aam
rclb
pop
sbb
das
mov
stc
dec
mov
mov
adc
imul
xchg
int3
mov
xchg
lock
pop
movsb
mov
pop
insl
cmp
aaa
aad
and
push
icebp
adc
dec
sbb
add
movsl
dec
pop
pusha
inc
add
das
push
push
notb
pop
sarl
lret
pop
pop
pop
add
mov
or
add
xchg
add
pusha
jg
add
out
inc
jbe
rcrb
arpl
lods
stos
movsb
test
add
sbb
fiadds
roll
pop
push
add
pop
ljmp
in
clts
movsb
mov
roll
shrb
xchg
dec
pop
jo
xor
movsb
xchg
or
es
and
out
mov
jle
loopne
lods
mov
add
xor
fistpll
xchg
xor
imul
push
add
jp
cmp
loop
test
push
push
mov
and
out
xor
xadd
pushf
clc
pop
addl
push
add
mov
popl
push
dec
cmpsl
shlb
cmp
shrb
cmp
inc
xor
mov
and
or
out
inc
cmp
mov
ret
or
add
add
pusha
add
rcrl
add
sbb
mov
test
pop
sbb
add
and
add
inc
adcb
sahf
sarb
add
repnz
sbbb
xchg
push
push
shll
xchg
js
pushl
xor
fnstenv
rcr
jge
and
pop
js
sbb
inc
cli
add
dec
cmp
outsb
add
fisttpl
add
mov
add
sub
int3
lea
mov
pop
cwtl
dec
add
lret
repnz
je
sbb
adc
das
pop
fldenv
cmc
cld
call
adc
add
mov
or
fwait
adcb
adc
bnd
sub
shrl
and
add
je
add
aam
arpl
jecxz
fistl
in
add
into
loopne
insb
add
out
enter
test
mov
test
mov
jmp
cmpsl
mov
pop
lea
sbbl
in
mov
rcr
pop
mov
cld
flds
ret
push
mov
pop
inc
les
add
push
push
mov
xor
inc
repnz
add
cmp
jne
jnp
call
insl
aam
sahf
stc
dec
xchg
int3
mov
push
add
lods
lock
pop
sarl
mov
xlat
shrb
mov
lods
sub
addps
sub
cmp
les
adc
mov
jle
fs
push
mov
into
mov
mov
add
jno
or
adc
add
xchg
sub
int3
out
or
xlat
dec
push
hlt
cmpsb
mov
test
mov
pop
ret
ja
add
ljmp
adc
andl
clc
add
add
cs
and
lea
cmp
pop
sub
stos
add
inc
cmp
mov
inc
add
jmp
sub
adc
pop
inc
sub
in
inc
loop
push
movl
push
insl
mov
out
and
adc
mov
add
call
cmp
popf
mov
pop
push
mov
push
add
xchg
movsb
aam
jbe
add
push
push
fcoml
fwait
dec
dec
cltd
imul
push
gs
pop
sub
lret
add
out
add
cmp
test
cltd
push
shrb
adc
outsb
jecxz
inc
fcmovne
lock
and
add
dec
dec
dec
xchg
add
in
sub
sarb
mov
mov
add
dec
int3
roll
lea
sbb
fsub
rcrb
mov
add
dec
add
push
add
stc
inc
push
cmp
fisttpll
dec
hlt
push
dec
ret
add
dec
js
je
adc
add
jecxz
int
popl
sbb
lret
add
jnp
lret
inc
mov
mov
add
adc
sti
pop
sub
ss
test
shll
mov
mov
enter
sub
sbb
fidivs
aas
inc
and
fs
mov
add
out
sbb
xlat
add
cmp
jo
xchg
jae
cmp
addr16
or
ds
pop
insl
sub
add
mov
push
or
mov
jns
jg
jno
mov
pop
ljmp
mov
add
push
mov
inc
subb
cld
sbb
sbb
push
jbe
xchg
lret
insl
popf
pop
ret
shrb
adc
inc
jb
xchg
xchg
add
popf
pop
outsl
pop
xor
add
xchg
insb
adc
push
pop
mov
nop
je
push
mov
sbb
pop
jno
add
add
or
cli
mov
ret
test
mov
sbb
inc
pushl
add
add
cs
mov
add
pop
xor
aaa
inc
add
outsb
js
jle
out
pop
daa
dec
cmp
cltd
adc
add
out
int3
or
mov
lea
movl
mov
sbb
mov
push
cmp
jns
add
in
push
std
mov
sahf
clc
out
push
adc
lret
mov
xchg
mov
fimull
dec
fldt
pop
push
xlat
xor
aaa
test
push
cmpb
mov
inc
cmp
in
dec
add
mov
pop
add
jp
mov
mov
jb
xlat
mov
and
or
add
lock
popa
sbb
inc
pop
inc
and
dec
insb
sub
shr
jl
mov
fnstenv
int
push
inc
and
test
or
pop
daa
and
mov
add
jmp
pop
jb
mov
mov
js
pop
loope
jns
mov
fadds
jmp
mov
xor
scas
pop
aaa
mov
mov
and
aam
sahf
dec
adcb
addb
sub
es
fucomi
pop
mov
push
dec
mov
inc
aad
mov
mov
add
pop
xchg
dec
jbe
mov
xchg
add
pop
movl
es
int
mov
aam
pop
add
mov
filds
jge
sbb
data16
mov
das
hlt
jnp
push
xor
orb
fidivl
add
pop
xor
jae
lcall
sub
sub
sub
cmp
mov
add
jmp
insl
roll
xor
stos
hlt
mov
dec
pusha
mov
add
add
shlb
std
test
adc
mov
cmp
int3
add
loop
cwtl
xor
mov
ds
repz
jno
hlt
or
mov
add
lods
enter
pop
xor
pop
and
stc
or
add
adc
push
add
lret
gs
xchg
pop
movsl
mov
jle
or
cmc
shrl
ret
sub
push
jmp
or
inc
fs
add
imul
cwtl
xchg
and
insl
push
inc
inc
aas
sbb
add
orb
push
movb
les
rorl
jl
cmp
popf
mov
popa
sbb
shlb
sti
ret
rcl
sub
xor
mov
lds
and
sahf
or
loopne
int3
icebp
jge
add
clc
pop
add
add
push
adc
xor
xor
add
pop
mov
mov
add
lret
jo
add
mov
sub
nop
sub
adc
nop
shl
sbb
pop
hlt
cmp
pop
lds
or
add
aam
fwait
pushf
inc
adc
push
sbb
fistl
push
adc
xchg
sub
test
pop
mov
inc
xor
push
stos
fwait
jl
pop
gs
pop
cld
out
and
adc
movsl
cmp
adc
ret
outsb
mov
ljmp
cli
pusha
push
fmull
test
hlt
mov
aas
imul
or
loopne
add
xchg
adc
test
adcb
rorl
mov
adc
ja
mov
jb
sbb
jns
inc
and
faddl
add
jp
or
and
addb
jg
sub
pop
jbe
popa
mov
inc
mov
mov
pop
popf
ljmp
xlat
pusha
xor
enter
push
add
jnp
fcoml
inc
add
xchg
aam
add
xor
loope
adc
fs
rcll
sub
add
stos
dec
jo
sub
jbe
addl
adc
fldcw
sub
int
xor
rorb
or
sub
adc
cltd
sbb
rcrb
pop
in
pop
adc
cmp
sbb
int
imul
cmpl
fstpt
es
jo
xchg
xchg
cs
fimull
inc
shlb
dec
add
js
xor
ret
sbb
adc
adc
imul
or
stos
push
cmpsb
or
mov
add
mov
in
xchg
mov
add
sbb
std
or
mov
jmp
cmp
and
ss
repz
adcb
jne
fxch
pop
xor
test
xchg
mov
push
lcall
add
shl
pop
inc
test
sarb
adc
gs
rolb
call
lcall
add
add
xchg
xchg
test
or
stos
adc
and
ret
in
and
movsb
xchg
add
pushf
dec
jge
jl
push
xchg
xor
orl
movsb
mov
dec
xchg
addb
jecxz
sub
cltd
lods
or
leave
test
inc
insl
sub
adc
filds
sbb
mov
in
xchg
add
imul
and
add
incb
dec
mov
xor
les
and
add
xor
ja
pop
or
out
pop
xor
push
mov
add
enter
scas
mov
das
pop
cmp
fistl
out
add
pop
add
jle
add
push
jge
inc
pop
inc
jl
mov
ds
and
adc
ret
mov
fiaddl
clc
pop
pop
decb
add
sbb
outsl
out
jbe
in
je
mov
add
jmp
push
aad
incl
xlat
add
xchg
mov
pop
nop
pop
add
xchg
data16
mov
out
or
std
lea
or
add
gs
sub
sahf
push
add
loope
sbb
adcb
dec
ret
add
mov
pushf
mov
jg
push
or
bound
add
call
iret
push
add
fisubl
sarl
cmp
in
pop
add
lcall
into
repnz
add
subb
mov
mov
pop
aas
and
jle
and
lea
ret
std
jb
cmp
add
loopne
sub
mov
popa
repnz
fmull
add
or
xchg
or
lods
loopne
add
add
mov
adc
iret
cmpsb
in
add
popa
arpl
mov
jp
and
sbb
std
add
insl
jge
fstl
cwtl
stc
jbe
sarl
xchg
add
clc
popa
cmpsb
mov
dec
orb
add
push
gs
sbb
or
out
test
pop
sbb
shl
insl
cmp
popa
lret
pop
in
repnz
lcall
int3
add
and
bswap
xor
pusha
out
and
leave
mov
adc
sub
cmp
pop
xchg
dec
pop
xchg
ficomps
push
out
mov
inc
xchg
cs
jnp
xor
pop
xor
mov
xchg
and
jg
cmp
mov
xchg
sub
adc
sub
test
fdiv
sbb
xchg
fs
dec
sbb
push
jecxz
jae
add
test
pop
or
ficompl
cmp
fldl
rep
mov
cmp
jecxz
adc
aas
add
xchg
lds
pop
cmp
int
mov
push
or
ret
pop
xchg
nop
in
aad
ja
lret
inc
or
add
scas
push
add
mulb
inc
mov
add
popa
xor
add
sbb
js
dec
or
mov
inc
mov
push
icebp
stc
fldt
fsubp
and
cmp
sbb
mov
add
into
dec
insb
stc
sub
test
bndldx
mov
out
xor
mov
adc
cmpsl
mov
lods
add
filds
push
add
icebp
sbb
mov
cmp
call
add
mov
and
scas
xor
and
xor
or
or
and
add
in
sbb
xchg
mov
inc
lods
out
cmovge
lods
getsec
outsl
push
into
cld
dec
mull
sub
dec
push
iret
mov
mov
loopne
fiaddl
mov
das
rcpps
sbb
out
xor
es
mov
sub
cmc
in
cmp
dec
stos
jge
dec
jbe
add
adc
call
push
add
or
jge
gs
stos
push
jo
xchg
shlb
ficoms
xorl
sbbb
nop
mov
add
mov
inc
add
xchg
jne
pop
adc
popa
add
data16
jmp
xchg
clc
xchg
mov
add
xor
sub
add
adc
inc
push
add
sub
test
pusha
movb
insb
jl
stos
cmp
subb
orl
movsl
sahf
in
and
inc
xchg
orb
mov
xor
add
jnp
push
or
add
leave
xchg
add
add
ja
data16
fstpt
pusha
pop
popf
adc
dec
in
leave
and
pop
movsb
add
js
mov
fimull
int3
clc
jg
mov
mov
int
cld
jmp
aad
jnp
mov
xchg
daa
push
ljmp
lods
push
adc
cmp
stc
and
add
sbb
testl
or
cmp
test
add
mov
adc
or
adc
int3
add
push
shrl
call
clc
movsb
add
lds
jp
push
mov
hlt
loope
xchg
cmp
arpl
inc
jb
fbstp
addb
mov
dec
add
enter
into
jl
loope
inc
mov
mov
cmc
xor
mov
aaa
pop
adc
sbb
in
add
test
add
dec
cmp
mov
adc
outsl
cltd
bound
popa
nop
rcrb
cmp
mov
add
pop
sub
push
lock
arpl
pop
lcall
mov
xchg
adc
arpl
shlb
not
add
push
icebp
jmp
and
jbe
subl
lret
add
pop
fnstcw
addr16
push
negb
pop
pop
mov
adc
mov
push
and
daa
call
sub
es
add
mov
push
stc
xchg
sbb
outsb
gs
adc
loopne
adc
arpl
sbb
pop
dec
dec
xchg
jmp
sti
push
or
inc
add
adc
in
and
mov
add
sub
lods
inc
adc
fstpt
mov
pop
cmp
add
movsl
add
ret
adc
jp
aad
and
fs
lret
cwtl
call
dec
cmpsb
cmpsl
fcoml
and
mov
adc
add
sub
jo
sarb
push
pop
add
jns
sbb
shll
mov
push
scas
add
pop
clc
imul
or
xor
mov
mov
repz
dec
pop
adc
adc
pop
or
fistps
lock
add
in
push
roll
stos
sub
jbe
add
ds
xor
cwtl
add
sub
std
cld
adc
xor
add
mov
fdivp
mov
and
push
add
pop
pushf
push
dec
or
sub
cltd
je
add
add
push
icebp
mov
mov
mov
sub
or
out
lahf
cmpsb
sbb
mov
mov
or
dec
jnp
add
cmpl
add
dec
sub
jb
test
rcll
or
pop
popa
mov
aam
arpl
cmp
jl
cwtl
xor
incb
xchg
ljmp
int
inc
and
sub
dec
adc
mov
ds
hlt
and
mov
add
jl
aaa
cld
jo
dec
xchg
jecxz
maskmovq
negl
xchg
or
in
int
dec
dec
dec
ja
jg
sarb
testb
add
out
jne
xlat
mov
ret
ficoml
or
cld
and
push
and
lret
xchg
movb
faddl
lret
jno
ja
loopne
fs
add
cmp
pop
out
add
loope
das
mov
push
fadds
adc
jns
ljmp
add
cmp
popa
inc
pop
int3
mov
fsts
dec
pop
xchg
popa
ljmp
clc
in
pusha
and
add
adc
and
cmp
add
fiadds
or
arpl
inc
cmp
leave
or
test
testl
or
push
pop
xchg
xor
je
xchg
sub
or
mov
dec
cs
loop
sub
orb
dec
add
xor
hlt
hlt
iret
jo
jp
loope
and
add
ret
pop
sub
dec
stc
jg
add
cmpsl
mov
add
call
push
mov
in
sub
inc
add
int
addl
mov
fnstsw
or
push
pusha
add
imull
loope
and
lcall
push
mov
out
stos
xor
ds
mov
mov
in
jb
add
adc
push
sub
push
divl
and
and
or
jno
pop
call
dec
mov
add
add
add
push
sti
cmp
aas
mov
inc
clc
js
lcall
push
dec
in
loopne
cmp
pop
stos
sub
adc
mov
bound
vunpcklps
push
inc
jmp
hlt
mov
jns
ret
repnz
adc
test
lahf
fstl
loope
cmp
int3
or
outsb
jecxz
sbb
add
out
fwait
pop
push
xchg
sbb
xchg
jnp
mov
pop
insb
ret
inc
mov
push
roll
sbb
ljmp
pop
push
mov
sahf
add
add
dec
outsb
stos
adc
addb
cmp
and
filds
hlt
add
add
aam
adc
popf
or
pop
hlt
add
imul
fistpl
xchg
sub
xchg
sbb
aas
mov
or
sub
fwait
xchg
fsubl
imulb
gs
pop
roll
xorl
ljmp
punpckhdq
cld
call
in
cmp
stc
shlb
inc
gs
pop
mov
sub
jb
insl
arpl
xor
and
jo
cld
pop
xor
add
jle
cmp
mov
orb
or
icebp
aam
mov
inc
sti
popa
pop
add
je
dec
test
aam
sub
sub
and
es
cs
rorb
fldenv
and
jg
push
icebp
cs
js
sub
or
or
cwtl
mov
adc
aam
call
faddl
jg
and
mov
lea
or
clc
xchg
enter
in
jns
xor
rorb
adc
adc
mov
and
sbb
aad
jno
mov
push
jl
cmp
lock
rorl
popa
test
jbe
and
je
sbb
mov
cwtl
inc
adc
cld
dec
leave
inc
sbb
lret
sub
jle
movsl
stc
mov
mov
nop
mov
pusha
loop
push
inc
lret
add
adc
or
fldt
sub
stc
inc
adc
or
cmp
push
mov
std
lds
add
cs
aam
js
add
mov
or
dec
add
jae
jl
aaa
aam
enter
loopne
leave
add
fsubrp
cmpsl
shl
popa
jae
je
pop
adc
loopne
data16
clc
mov
sub
outsb
das
addr16
popf
fnstsw
lock
sbb
adc
test
add
push
jo
imul
in
sbb
rcrb
test
ret
ljmp
sub
sbb
fsts
push
jo
jg
aaa
jge
inc
out
dec
jge
add
add
xor
mov
xchg
cwtl
mov
or
fwait
add
and
sbb
xor
inc
add
dec
leave
clc
dec
lret
and
mov
notb
push
dec
push
jmp
scas
xchg
fcompl
fimull
imul
and
jo
popa
push
jbe
loop
rorb
test
or
test
daa
mov
push
add
out
inc
add
add
push
xchg
ss
daa
jb
and
dec
call
pushf
mov
cmp
and
fsubr
faddl
adc
jge
push
add
jo
ss
insb
dec
pop
in
sarl
mov
add
std
into
call
loopne
adc
pop
ja
and
add
outsl
push
or
inc
adc
pop
jnp
aam
mov
and
in
in
xchg
ljmp
sub
pop
adc
lcall
or
jle
or
sub
add
mov
out
jecxz
and
add
push
xor
pop
gs
push
cltd
cli
scas
mov
dec
mov
popl
iret
inc
push
dec
mov
jno
outsl
push
push
daa
movsb
mov
inc
repz
mov
pop
adc
ja
dec
in
lods
fsubl
ss
roll
fwait
repnz
inc
aam
stc
cmp
leave
and
shlb
sar
mov
adc
xchg
dec
sbb
xchg
testl
add
adc
cmp
andb
test
sub
add
lret
stos
into
out
add
insl
xor
adc
and
stos
pushf
popf
adc
and
fcomps
cmp
pop
inc
call
rorl
ret
lahf
push
or
pushf
cli
mov
and
xlat
pusha
rclb
cmp
cmpl
xor
cltd
sahf
pusha
loope
je
push
sbb
push
es
inc
sbb
push
shl
add
mov
xchg
fdiv
sbb
mov
mov
inc
cli
aas
add
in
cld
int
push
pop
pop
jno
add
in
mulb
add
jmp
test
fiaddl
jne
push
call
add
fwait
mov
jl
fisttpl
push
fcos
mov
push
adc
xchg
repz
mov
add
scas
fstps
push
sub
push
mov
mov
or
push
pop
repz
dec
mov
mov
adc
enter
jns
fisttpl
push
dec
mov
pop
idiv
stos
andb
sub
aad
jnp
lods
push
es
aas
je
cwtl
popf
daa
mov
sbb
test
pop
or
test
push
xor
fimuls
mov
shlb
jle
or
and
sub
je
sub
cmpsb
mov
adc
sbb
dec
pop
dec
and
call
aaa
rcll
lret
enter
mov
aad
cmp
sbb
orb
dec
scas
mov
cmp
test
aas
mov
call
inc
or
ret
add
lret
repnz
mov
add
pop
inc
jg
ficomps
adc
cmpsb
lahf
test
je
adc
sbb
mov
pop
add
lods
addr16
outsl
scas
movl
mov
popf
test
frstpm(287
sub
shll
pop
int
adc
add
jmp
mov
pushf
scas
add
inc
arpl
add
pop
pushw
popf
jl
add
sahf
jns
mov
repz
push
jnp
xchg
mov
add
bnd
cmp
stos
imul
xor
sarl
lcall
add
pushl
add
mov
sub
xchg
jle
push
and
jecxz
cmp
adc
add
js
pmulhuw
add
std
ror
lahf
sub
jl
inc
ficoml
add
in
ds
lcall
push
add
cli
rorb
cmp
in
addb
add
arpl
lds
idiv
cmp
jle
jnp
cmp
add
rorl
or
mov
pusha
daa
mov
movsb
and
add
pop
xor
les
and
push
xchg
arpl
shll
mov
push
add
mov
lods
add
add
shll
rorb
test
xchg
fcoms
add
hlt
xor
pop
add
xchg
pop
adc
add
nop
sbb
and
divb
shlb
add
cld
xor
push
test
add
inc
cs
call
cwtl
xor
sbb
sbb
lea
inc
mov
in
adc
in
add
cmpsb
cli
mov
sub
mov
and
sarb
int3
mov
inc
out
push
fcmovne
gs
loope
pop
jnp
leave
js
test
mov
cs
pop
sub
and
pusha
and
rcl
inc
out
inc
pushf
add
in
sub
fbld
insb
xchg
add
hlt
rclb
notl
pop
cmpb
data16
jl
push
aam
or
jns
pop
icebp
inc
sbb
aad
clc
add
in
data16
popf
lret
push
filds
push
ja
dec
mov
lods
xor
adc
outsb
cmp
dec
out
push
mov
and
fistps
add
or
sarl
sub
push
pop
sbbb
jg
loopne
loop
pop
inc
push
lahf
mov
int
cmp
jp
or
subb
add
lock
xchg
es
add
getsec
in
inc
push
fisttpll
rolb
push
hlt
dec
xchg
stc
test
and
mov
pusha
dec
popf
pop
and
add
repnz
cmp
pop
push
add
das
fisubs
inc
int3
stc
add
sbb
dec
mov
test
cwtl
out
xchg
aas
scas
cmc
add
iret
jmp
add
dec
je
jne
out
pop
pop
jns
inc
cmc
or
cmp
std
pushf
adcb
iret
jo
test
shlb
cwtl
jp
lea
add
inc
pop
push
and
add
test
inc
filds
mov
fidivl
cltd
sbb
gs
xchg
hlt
cmc
cli
or
hlt
inc
and
xor
dec
add
push
xchg
pop
ret
jne
daa
add
mov
mov
andl
inc
cmpsl
add
rclb
xor
aad
pop
add
adcl
test
push
mov
add
jmp
out
adc
nop
das
fiadds
call
mov
aas
mov
add
fsubl
jb
or
pop
fsubs
jmp
add
mov
in
arpl
jge
jl
xlat
or
cmp
icebp
andb
insb
lcall
push
adc
test
fdivrs
cli
stc
add
lcall
fwait
xchg
jbe
pop
cmp
xchg
rorb
out
pusha
dec
pop
add
lock
ret
sub
add
cs
jno
pushf
ljmp
mov
iret
frstor
test
adc
ja
lock
icebp
sub
je
adc
sbb
andl
jg
dec
and
push
out
sub
sbbb
xchg
fwait
and
leave
jl
or
std
aam
sub
mov
and
mov
test
sbb
cmp
es
lret
add
jns
ja
jbe
add
and
add
jmp
jae
or
pop
je
in
orb
add
les
hlt
sbb
jo
sbb
add
cld
push
rcr
add
dec
push
jmp
pushf
leave
ja
adcb
call
add
sub
inc
test
icebp
add
in
or
iret
into
push
stc
add
sbb
mov
mov
movsl
roll
inc
cmp
pusha
fimull
and
push
das
movsb
sbb
cmp
mov
enter
nop
mov
jmp
lea
adc
or
mov
lods
loop
nop
nop
adc
jae
or
xor
lods
adc
adc
addb
repz
push
imul
sub
cmp
fsubrs
arpl
mov
stos
add
jbe
push
mov
into
es
pusha
pushf
lahf
and
adc
gs
rolb
cmp
lods
loop
adc
into
mov
out
dec
fnstcw
sbb
mov
xchg
jge
mov
js
jno
data16
lea
inc
sub
popf
mov
mov
jl
mov
and
add
inc
stc
ds
xor
stos
sub
xor
adc
adcb
js
js
add
les
dec
lods
jne
dec
sbb
insb
add
cs
ret
cmp
loope
stc
je
test
imul
in
pop
sbb
jmp
sbb
nop
add
movsb
fildll
cltd
add
pop
into
jecxz
insb
les
lcall
jnp
lcall
insb
push
stos
clc
fimuls
push
pop
add
xchg
xchg
dec
sub
popf
mov
push
and
push
test
test
es
xchg
add
dec
add
xchg
cmovl
dec
add
out
push
push
dec
cld
hlt
lea
sahf
shll
add
pop
imul
jmp
cld
cli
xchg
jno
inc
inc
dec
popl
int
lock
jb
mov
shrl
js
daa
seto
test
jno
vdivps
paddq
or
sbbb
pop
in
gs
or
mov
and
popf
mov
xor
adc
sbb
pop
pop
mov
xchg
or
dec
and
mov
add
push
pop
lret
ror
push
inc
mov
jns
mov
in
add
aad
ret
loopne
inc
ljmp
inc
xor
out
icebp
ror
fs
cmp
aaa
or
xchg
mov
je
pop
shrl
add
or
nop
mov
lahf
inc
inc
add
pop
cmp
aaa
inc
fstpl
jp
mov
sbb
dec
or
add
clc
jae
outsl
add
push
movsl
pop
dec
repz
imul
out
sbb
in
adc
inc
dec
aam
push
lret
out
add
jmp
add
jmp
add
ja
popf
add
js
rolb
loope
aam
mov
shll
jle
add
pop
icebp
mov
push
cmp
hlt
lock
popa
dec
mov
in
add
or
lahf
test
add
in
push
mov
mov
mov
cwtl
add
mov
in
in
cs
fcmovnbe
adc
loopne
push
inc
scas
xlat
add
rcrb
aaa
insl
add
loop
add
out
mov
mov
xchg
add
jl
jae
sbb
jp
pop
pop
pop
jmp
add
test
cwtl
mov
mov
push
ficompl
and
jl
pop
decl
mov
cmp
subb
xor
arpl
mov
lods
mov
rcrb
clc
inc
pop
xor
imul
mov
loopne
add
mov
movsl
sub
rorb
push
testb
sbb
stc
shlb
cmp
loope
test
mov
cli
int3
add
adcb
aas
push
clc
sarl
mov
mov
cmp
mov
sub
xor
mov
adc
gs
cmp
mov
das
pushf
mov
fstl
mov
and
mov
aad
jno,pn
cmp
addb
or
popa
fsubl
gs
cld
add
stos
arpl
lahf
add
outsl
mov
mov
inc
call
xor
add
xor
mov
mov
fs
rcll
inc
jmp
leave
and
inc
pop
mov
in
fcoms
or
in
cmc
and
std
stos
fnsave
add
cmp
mul
push
push
hlt
mov
adc
ds
or
add
aad
aas
inc
nop
sbbl
fcoms
add
loopne
sub
loopne
addr16
es
mov
negb
stos
mov
mov
hlt
sti
inc
lock
pop
cmp
lcall
push
push
ja
add
add
std
out
in
rcrb
add
inc
fdivl
inc
add
jl
cmp
add
pop
ds
xor
mov
sti
xchg
xchg
sbb
dec
mov
repnz
sbb
cld
push
dec
mov
add
mov
aas
outsl
adc
cltd
fisubl
cmp
xchg
out
in
sbb
mov
inc
cs
pop
or
mov
adc
push
loop
mov
pop
aas
aad
orb
shll
mov
adc
add
sub
add
push
and
ds
movsl
or
mov
mov
jbe
mov
ficoms
add
pop
sbb
pop
sub
inc
or
xchg
adc
add
inc
call
add
xchg
aam
in
fmuls
dec
sub
dec
inc
cld
add
jp
sbbl
dec
cmp
mov
add
daa
xchg
aas
imul
push
push
jbe
rol
jle,pt
dec
out
or
or
cwtl
xchg
ljmp
dec
pop
insb
js
add
mov
xor
inc
xchg
xchg
je
and
mov
lea
mov
sti
xor
jb
loop
enter
div
add
add
jo
xchg
jnp
add
lahf
add
jns
add
push
mov
aas
pop
mov
out
jb
add
into
push
xor
dec
inc
fistpl
aam
iret
lock
add
stos
daa
sbb
inc
and
int3
cltd
sarl
adc
enter
lret
pop
out
add
push
cwtl
sbb
in
mov
orl
mov
xor
outsb
add
cwtl
call
aam
ss
mov
jge
loop
pushl
cwtl
pop
pop
ficoml
jno
loopne
inc
mov
rolb
nop
inc
xchg
sbbl
jnp
pop
jl
addr16
out
sbb
adc
lods
loope
imul
insb
sbb
ret
add
or
cwtl
sbb
sub
mov
sub
call
loop
push
adc
std
and
sub
imul
xchg
mov
sub
cltd
mov
daa
or
lea
je
enter
sbb
les
repnz
fnstcw
fadds
test
lods
out
add
mov
cli
add
inc
push
fistpl
adc
xor
jne
dec
ret
movsb
testb
jb
dec
dec
dec
ja
xor
cwtl
out
imul
mov
and
add
jmp
dec
scas
sbb
dec
or
add
push
data16
int
test
fstpl
sbb
xor
mov
adcl
scas
sbb
stos
mov
cmpsl
ljmp
mov
sub
or
test
jo
sbb
into
add
xchg
aas
jg
add
xchg
aaa
cmp
add
inc
jg
adcb
je
xchg
inc
mov
jl
add
loopne
bound
sahf
repz
and
popa
sub
and
and
dec
pop
inc
popf
in
add
sbbl
out
out
push
cmpsl
pusha
push
into
mov
pop
cli
xor
inc
test
mov
cmpsb
test
mov
sysexit
dec
cmpsb
fmul
xor
emms
mov
pushf
jecxz
imul
pop
ret
cmp
cmpsl
mov
hlt
subb
test
add
fwait
xchg
lret
add
js
mov
das
and
out
xchg
leave
pop
push
pop
fwait
push
adc
jge
in
sbb
dec
int
xchg
out
add
jnp
jmp
cmp
aam
mov
arpl
sbb
jb
push
ds
popl
imul
push
push
push
mov
mov
xchg
and
test
and
outsb
mov
jnp
je
add
mov
dec
add
push
icebp
mov
out
aam
add
pop
cmp
cmp
iret
xorb
int3
pop
add
add
jg
jmp
into
cmc
mov
cld
add
sahf
push
cmp
sbb
or
xor
push
addb
fldcw
xchg
or
pop
decb
mov
iret
or
lock
push
into
push
out
shrb
push
addr16
pop
xchg
jno
pusha
add
pop
or
add
jbe
movsb
add
adc
mov
jns
mov
lret
popl
push
sub
xchg
outsl
pop
stos
mov
scas
sbb
scas
xor
sahf
aas
insl
loop
mov
add
lds
add
add
fucomi
or
jge
jns
sub
and
xchg
lods
dec
lock
add
das
outsl
test
call
mov
sub
push
dec
in
fwait
jns
jns
add
cld
xor
sub
popf
idivb
decl
in
pushf
repz
int
add
ja
cmp
cmc
stc
imul
adc
shrb
subl
mov
int
cwtl
or
lret
mov
push
fildl
aas
sbb
add
out
lret
cmp
iret
add
loopne
adc
scas
xor
lock
or
and
iret
loopne
add
lods
ror
sbb
add
and
lahf
pop
pop
not
andb
adc
xchg
stos
add
repnz
xor
testl
push
add
cmpsl
ret
fldl
fwait
in
std
divl
ds
dec
add
pop
in
mov
xlat
rcrb
jae
cs
bswap
add
inc
sbb
pop
xchg
pop
jg
jbe
sub
push
xor
ds
test
pop
mov
dec
mov
out
inc
cld
xchg
loope
enter
add
ds
mov
pushf
and
xchg
sbb
fsub
out
dec
xchg
out
insb
scas
icebp
add
lds
push
dec
jns
std
add
dec
out
mov
pop
adc
adc
mov
xor
je
repz
mov
add
mov
mov
add
cld
out
add
push
pop
sub
and
pusha
fs
dec
and
clc
outsl
addr16
popa
pusha
add
adc
add
int3
dec
aam
test
push
add
add
outsb
mov
int
adc
scas
movsb
hlt
and
pusha
jbe
add
mov
add
dec
test
jnp
jl
push
and
mov
adc
xchg
mov
push
xor
pop
add
push
popl
and
push
out
movsb
xchg
repnz
rcl
cmp
ja
cltd
jb
mov
mov
pop
jae
leave
add
test
add
in
adc
sub
add
andl
mov
add
scas
out
pop
mov
shrl
call
fildl
sbb
adc
insb
adc
adc
jb
xlat
add
pop
loopne
sub
jle
cmpsb
sbb
subb
or
test
xchg
jnp
loopne
push
test
mov
add
cmpsb
or
pop
sbb
dec
loopne
nop
aad
les
add
popf
insl
and
scas
mov
cmp
cmp
lock
in
xchg
mov
aad
pop
cwtl
sbb
inc
dec
xor
mov
adc
xor
sub
jae
mov
idivb
shlb
add
out
jle
mov
cmp
dec
dec
mov
in
inc
loop
notb
mov
dec
je
push
jb
jmp
bnd
lea
nop
or
add
pop
push
div
add
mov
scas
add
xor
insl
push
inc
add
cmc
jmp
inc
pusha
sbb
outsb
cmpsl
cmp
dec
mov
jmp
scas
outsb
test
aam
cmp
arpl
stos
and
add
push
cmp
jns
sbb
mov
mov
cmc
mov
sti
mov
pop
cmp
inc
outsb
stos
aam
add
pop
push
xchg
xor
loop
sbbl
popa
aad
add
shrb
leave
mov
ret
dec
push
shrl
xchg
add
pop
and
mov
pop
fcmovu
add
nop
adc
pop
imul
pop
and
pop
lret
sbb
icebp
or
or
stc
push
and
test
int3
data16
fmuls
je
jnp
add
mov
xchg
add
lds
jne
or
dec
mov
xchg
ficoms
test
inc
add
ss
ret
xor
and
mov
add
inc
pop
add
cmc
fisttps
or
add
mov
push
mov
mov
std
mov
push
sub
push
scas
cmpb
orl
mov
inc
popl
adc
data16
jne
mov
xor
pop
pop
lahf
sub
add
cwtl
pusha
imul
lock
push
xorb
sbb
push
add
and
xor
movsb
dec
add
dec
push
fdivrl
cld
jge
mov
adc
dec
or
ret
mov
mov
jp
cwtl
out
outsl
mov
mov
adc
les
push
mov
imul
add
neg
sbb
add
aaa
push
xor
xchg
lret
aam
pop
xlat
cmp
lahf
sub
inc
fldl
adc
jb
shlb
outsl
shr
dec
jmp
in
and
imul
add
push
rol
clc
cmp
pop
add
inc
sub
mov
stos
fstl
test
sarb
in
sub
xchg
add
call
jbe
sbb
xchg
push
cmp
arpl
iret
cld
jle
ret
jge
xchg
lahf
vfrczps
pop
dec
fildl
out
dec
inc
in
xchg
outsl
clc
fisttpll
add
mov
and
fs
jns
pop
daa
mov
pop
add
push
rcrb
sub
lods
jo
sub
cmp
iret
cmp
adc
jge
rorl
sbb
mov
mov
mov
out
push
test
mov
repz
sbb
out
xor
ret
add
push
sti
push
orl
movsl
mov
mov
pop
cmp
xor
xlat
mov
add
jo
clc
out
mov
add
sbb
andl
ss
fimuls
add
daa
mov
andl
inc
cli
subb
rcrl
sub
add
into
fcmovnb
add
int3
fucomp
adc
jnp
add
adc
add
or
or
out
rclb
leave
sbb
dec
mov
jl
xlat
mov
jae
add
repnz
push
add
jmp
rcrb
pop
pusha
in
cmc
add
mov
out
sbb
bound
lods
xchg
shlb
rclb
jno
cmpsl
ljmp
sub
add
rorb
mov
cmpsl
sti
or
push
dec
idivb
loopne,pn
cmp
loopne
das
addb
xchg
movsl
cmp
lds
mov
loopne
or
mov
lods
jp
mov
jp
pop
addb
push
rolb
int
out
icebp
xor
xchg
scas
sarb
add
lds
xchg
adc
mov
repnz
rolb
mov
pop
in
push
add
mov
pop
mov
lea
add
ds
imul
jmp
add
mov
mov
cld
rcll
add
mov
push
test
aam
or
scas
mov
adc
mov
and
or
cli
cs
add
je
dec
add
into
sub
lock
sbb
cmpsl
sbb
xchg
or
subb
pop
push
add
cmp
add
and
mov
jg
cmpb
jnp
pop
mov
add
and
push
repz
add
popa
dec
or
mov
dec
cmp
pop
add
shlb
movb
mov
push
or
xorb
add
pop
mov
xchg
lret
add
rcll
loopne
in
mov
pop
popf
ret
insl
int
adc
stos
sti
or
add
les
lcall
sarb
cmp
cmp
aas
and
jbe
sarb
sub
je
push
pop
movsb
sahf
arpl
std
and
add
in
cld
clc
sbb
andl
pop
rcrl
adc
or
das
lock
call
xlat
js
aas
fadds
adc
add
add
loop
add
mov
push
jp
test
clc
outsb
adc
enter
ret
push
mov
add
icebp
mov
pop
inc
dec
mov
xchg
mov
sahf
test
stc
orb
mov
sub
fldl2e
add
push
pop
test
shlb
out
int3
jo
push
popa
enter
repnz
roll
adc
add
xchg
mov
out
cmpsb
cmp
push
add
sarb
lcall
ds
outsl
adc
dec
push
xchg
push
pusha
insb
sarb
add
inc
fdivp
sbb
and
jp
xchg
add
or
push
jg
xchg
sarb
bound
pusha
pop
push
pop
add
mov
push
mov
cltd
push
outsl
loop
mov
or
push
loopne
xor
imul
addr16
cmp
test
pop
sub
insl
cld
xchg
push
lds
sbb
jbe
aaa
paddq
les
mov
adc
push
nop
sbb
loop
cwtl
out
xchg
hlt
add
dec
sarl
sbbb
sbb
add
and
jnp
jp
add
lahf
enter
xchg
fadds
mov
sub
adc
ss
mov
xchg
ret
ficomps
cmpsl
loop
cvtdq2ps
pusha
out
mov
mov
add
and
dec
push
dec
mov
add
cmp
add
loope
jne
add
rclb
inc
add
dec
into
cmpsb
fmuls
addb
lods
inc
or
call
imul
ret
fcmovbe
add
aas
cltd
xor
ret
divl
mov
js
orb
fisubl
add
pop
mov
mov
insb
dec
mov
je
pop
imul
mov
mov
gs
cmp
inc
sbbb
int
lods
dec
scas
outsb
pusha
imul
mov
or
es
add
jl
xchg
adc
dec
shl
pop
addr16
inc
aas
jae
xchg
outsb
push
push
add
adcl
rolb
add
sub
sbb
xchg
jae
aas
imul
sar
into
pop
imul
inc
jmp
adc
cwtl
xor
in
std
mov
ret
add
cmpsb
mov
jns
lods
push
push
insb
loopne
or
mov
add
ja
test
mov
cmpb
add
addr16
xor
mov
test
ja
add
js
in
push
sub
das
sub
movsl
hlt
mov
faddl
adc
cmp
psubq
rol
adc
xor
inc
andb
add
dec
cmp
popa
gs
arpl
and
add
lods
mov
nop
add
and
mov
mov
ret
xor
xchg
sub
lock
psubsb
mov
xchg
ret
pop
add
cmc
xor
ss
jmp
push
incb
adcb
cmp
call
inc
push
pusha
stc
pop
add
insb
int3
xchg
addb
fidivl
push
push
cmp
and
mov
push
das
rolb
xor
push
sub
hlt
test
jae
add
imul
outsb
inc
push
mov
popa
cmp
test
inc
mov
push
mov
add
rorb
cmp
xor
add
clc
xchg
cmp
ret
icebp
xchg
push
outsl
stos
adc
clc
in
push
shl
sub
and
or
mov
outsl
xor
cmp
xchg
push
ss
add
sahf
ficoms
xchg
add
pop
aaa
sbb
iret
jbe
pop
aam
aas
dec
add
mov
mov
fisubrl
popa
popf
adc
pusha
bnd
mov
fs
adc
stos
sub
mov
aad
enter
sub
js
add
sub
pop
add
pop
clc
push
or
mov
les
cld
mov
cwtl
dec
mov
and
dec
bound
aad
cmp
test
or
les
xor
js
call
xor
cld
mov
mull
test
add
scas
ffreep
xor
jae
stos
pop
inc
push
repnz
test
cli
cmp
adc
into
pushf
sti
stos
sbb
add
pop
add
jbe
test
xor
call
xchg
in
push
out
shlb
mov
jnp
add
xchg
mov
adc
aaa
call
fistpl
cmpsb
cmp
mov
add
fadd
cmp
cmp
icebp
add
add
push
add
adc
dec
pushf
lock
add
imul
in
mov
call
ret
pop
mov
adc
jne
add
shrb
and
mov
lahf
movsb
add
sbb
add
cmp
mov
inc
pop
jbe
adc
mov
mov
sub
and
cwtd
add
and
push
outsb
js
enter
mov
pushf
xor
mov
and
outsb
add
mov
and
sub
push
or
cmp
push
add
mov
bound
or
push
popf
add
pop
pop
lds
insb
bound
adcb
rorb
push
mov
push
insl
lods
add
push
adc
pop
fwait
cs
and
add
mov
js
lret
mov
fisubrs
add
hlt
jmp
add
cmpsl
xorb
mov
ret
push
add
mov
int3
xor
in
lahf
popa
dec
add
aaa
fstp
cmp
call
push
enter
lds
into
repnz
jo
mov
or
dec
and
xor
loop
sahf
mov
add
adc
orb
insb
mov
neg
push
add
mov
cmpsb
sbb
sub
pop
out
xchg
pusha
add
lock
rcll
add
or
mov
jp
sbb
xchg
ljmp
sub
loope
pop
push
mov
mov
xchg
xor
iret
jl
xchg
cmp
dec
mov
les
mov
sbb
orb
pop
int
cmp
pop
add
js
cwtl
adc
repz
cmp
sarl
addb
rcrl
sub
inc
jle
sti
dec
mov
xchg
fmull
fldl
arpl
xchg
outsl
inc
jns
lds
push
fdiv
jb
mov
cmc
add
and
jne
add
jp
or
arpl
fwait
mov
je
xchg
sahf
in
repz
mov
mov
aas
mov
dec
leave
push
popa
daa
sbb
pop
pop
or
cmpsl
test
sbb
cmp
add
fildll
and
test
adc
add
pop
bswap
or
mov
add
dec
push
add
mov
enter
aaa
ljmp
cmp
jge
mov
add
add
mov
cld
aam
test
cmc
pop
push
js
idivb
jl
inc
loopne
add
sbbl
ljmp
add
lods
outsb
push
add
pop
rcrb
push
jbe
xor
xchg
test
mov
test
test
inc
xor
pop
adc
aad
sbb
outsb
pop
add
inc
jp
dec
ret
out
and
jns
and
or
pop
add
ljmp
ss
addb
xchg
add
push
mov
lock
mov
add
cmp
das
add
lcall
in
scas
stc
lret
inc
pop
or
inc
fcoms
popf
fsts
iret
or
inc
shlb
add
imul
lahf
mov
cwtl
enter
aad
into
movsl
or
push
pop
repnz
hlt
and
dec
mov
mov
adc
les
push
add
dec
mov
mov
roll
jg
lock
add
sarl
adc
xchg
popf
add
push
cmp
sub
pop
arpl
mov
pop
cmp
jno
out
push
add
sub
mov
scas
pusha
pop
leave
subb
lea
mov
add
addb
push
jnp
mov
and
dec
push
cmp
jns
mov
jmp
add
adcl
pop
imulb
imul
mov
mov
cmp
pop
test
jnp
add
add
xchg
sbb
xchg
nop
mov
cmpb
xchg
adc
mov
imul
push
lock
jge
gs
scas
and
ja
lock
inc
addb
push
adc
xor
inc
cmp
cmpb
gs
fwait
cmp
mov
adc
sub
dec
stos
in
jo
lahf
fwait
inc
mov
rcrb
add
loope
jecxz
mov
call
jae
sahf
mov
push
inc
cli
and
rcl
mov
js
add
pop
mov
sbb
fldcw
cmp
lret
cmc
push
add
add
mov
adc
push
xchg
call
pop
add
test
xorb
lret
sbb
nop
aas
inc
push
and
sub
ficompl
adc
addb
mov
jbe
fadds
in
xchg
xchg
pusha
mov
add
ss
add
cmc
addl
adc
jae
mov
in
mov
loopne
aam
adc
add
repz
dec
fbstp
mov
lds
add
push
and
sbb
jmp
pop
or
enter
cmp
out
push
fcompl
repz
cld
sbb
add
inc
pusha
push
into
push
fidivrs
out
cmp
add
and
cmc
insb
push
add
movsb
add
or
jns
into
sbb
add
fisttpll
cmpsl
mov
mov
jecxz
push
add
repnz
jmp
inc
inc
cmpb
mov
adc
and
adc
add
loop
dec
xor
repnz
pop
push
add
cmp
mov
sbbb
daa
add
mov
in
push
ficoml
cmp
roll
fs
iret
outsb
addr16
clc
jnp
or
stos
loopne
cmp
xchg
test
xorb
jecxz
mov
das
in
add
xchg
cs
add
mov
or
popa
sti
xlat
xchg
add
add
iret
mov
xor
ficompl
add
jl
mov
lods
dec
add
insl
or
es
or
outsb
or
shlb
popa
push
mov
mov
xor
lahf
push
addl
in
hlt
mov
and
enter
cmp
add
movsl
cmp
mov
cmp
lcall
inc
popf
outsb
jecxz
mov
stos
xor
outsl
add
lret
push
lahf
sub
jne
sub
xlat
mov
or
push
jo
mov
nop
push
cmp
js
mov
sub
shl
enter
add
add
jb
loope
inc
add
cmp
repnz
pusha
adc
adc
sbb
or
fdivrs
add
pop
fsubl
sub
cmp
mov
jns
xor
into
hlt
loop
adc
movb
in
loope
mov
jbe
loop
add
ret
pop
sub
fcomps
push
push
sub
sbb
mov
insl
add
and
testl
jnp
or
fdivr
sahf
repnz
fs
cmc
cmp
jnp
and
pop
cmpsb
scas
dec
xchg
add
into
push
rcr
iret
cmpsl
or
push
imul
dec
add
adc
cld
xlat
add
in
jae
ret
jg
add
int
lods
push
movsb
add
xor
outsb
fiaddl
ds
xchg
mov
sahf
std
mov
and
mov
push
jmp
fs
loope
xchg
lret
add
push
stos
mov
ret
in
xchg
rcrb
mov
pop
adc
or
and
cld
mov
mov
test
packssdw
xor
ret
push
sub
enter
sub
rolb
es
mov
sbb
mov
into
adc
add
and
cmp
js
add
fucom
call
push
shlb
add
add
pop
scas
xchg
and
mov
xchg
cli
out
xchg
xor
mov
pop
dec
jg
cmp
pop
cmp
outsl
loope
scas
sarl
xchg
stos
loop
push
cmc
pop
jp
and
lahf
sbb
imul
pop
pop
adc
negl
or
orb
inc
push
fsub
xor
hlt
stos
add
jge
mov
add
mov
lret
add
pop
dec
clc
add
jmp
push
imul
mov
dec
iret
inc
pop
mov
xchg
add
xchg
mov
pop
int3
into
loope
call
imul
add
addl
add
or
pop
popa
cmp
repnz
shlb
add
xchg
bound
insl
nop
mov
cmp
fs
jbe
sarb
popa
or
jmp
loopne
inc
xor
inc
in
pop
dec
adc
mov
xor
inc
adc
xchg
jbe
pushf
out
int
xchg
es
int3
cwtl
sub
lods
jnp
add
xor
xchg
jno
jnp
mov
sbb
cmpsb
jns
jbe
shr
push
or
jmp
shrb
or
and
push
mov
bound
xor
shll
jnp
rolb
add
xor
repz
insb
clc
add
nop
lret
sub
inc
mov
push
xor
pop
out
pop
pop
lahf
jns
pop
sub
mov
xchg
mov
sbb
test
js
push
xchg
testb
push
push
inc
inc
xchg
daa
aad
push
mov
icebp
sbb
inc
xor
fmuls
ret
inc
pop
add
in
wbinvd
lods
and
std
inc
leave
xor
add
push
adc
push
pusha
cmpsb
adc
sub
mov
jmp
stc
flds
scas
mov
push
mov
cmpsb
fisubs
xchg
mov
call
sbb
dec
add
rcrb
test
cs
aas
cmpsb
test
into
or
push
cld
mov
and
or
mov
push
mov
xor
in
lods
mov
jge
in
pop
add
stos
mov
mov
sahf
inc
xor
nop
shll
dec
cmpsb
or
mov
and
in
xchg
ljmp
add
add
call
pop
in
mov
clc
test
mov
pop
adc
ljmp
in
sub
inc
or
jmp
or
pop
add
add
loope
das
sub
fimuls
mov
cli
ss
pop
das
mov
dec
jmp
adc
push
fwait
lahf
add
pop
scas
aam
dec
insb
popa
out
or
add
pop
test
call
cwtl
jo
inc
xor
imul
or
xchg
pushf
jne
fidivrs
call
xchg
scas
push
jb
punpckhdq
stc
xlat
dec
inc
rclb
daa
xor
add
cmpsb
mov
lock
out
add
jo
inc
shll
add
jmp
mov
xchg
stos
fsts
sub
sbb
mov
cmpsb
testl
sub
std
jle
notl
cwtl
sti
add
sbb
dec
pusha
xchg
sbb
sbb
std
xor
clc
test
mov
mul
out
sbbb
cmp
xchg
scas
xorl
fisttpll
xchg
mov
push
pusha
sub
pop
gs
pop
enter
add
dec
clc
ja
std
mov
insl
mov
inc
in
mov
out
aas
mov
andb
sub
add
out
add
xchg
shrl
xrelease
in
icebp
pop
push
adc
add
notb
fildl
imul
leave
hlt
je
cmp
push
rolb
inc
or
ja
js
mov
jg
sbb
mov
xchg
mov
xor
outsb
and
arpl
dec
cmp
movsb
ja
in
jbe
and
sub
cmp
sbb
int3
and
and
mov
adc
push
push
or
add
inc
insl
jp
in
mov
inc
pop
pop
stos
repnz
jne
ljmp
scas
movsl
jp
hlt
data16
jbe
jbe
mov
lods
loop
or
gs
in
sbb
cmc
mov
inc
push
sub
and
xorb
pop
fadds
inc
mov
add
ja
imul
mov
jo
lock
xchg
lods
add
and
adc
dec
jp
inc
push
mov
leave
test
push
or
add
lods
mov
mov
adc
inc
aam
shrb
imulb
push
mov
je
cmp
js
xchg
mov
fs
pop
jbe
ds
icebp
add
lret
sub
sbb
mov
add
cmp
sbb
mov
and
sbb
sub
pop
and
cmpsb
push
sub
push
push
clc
jae
add
jb
mov
ss
in
js
or
cld
cmp
dec
fs
js
add
mov
pusha
movsl
push
add
push
out
rcrb
ljmp
incl
fiadds
outsb
scas
inc
dec
add
ja
std
jge
out
cmp
mov
push
fdivr
faddl
cmp
les
add
lds
lahf
mov
mov
xor
pusha
inc
cltd
mov
jb
add
jecxz
sbb
aaa
and
sub
aas
xchg
sub
pop
clc
sub
movsb
adcb
in
mov
add
subl
push
es
sbb
pop
clc
cmp
cwtl
adc
nop
es
mov
jecxz
pop
insb
in
add
push
outsl
stc
in
rolb
add
fldl
js
sub
pop
jmp
pop
xlat
xchg
lahf
bound
mov
cmp
cmp
out
sbb
add
jnp
addl
outsl
xlat
cmp
cmp
mov
outsb
cs
add
add
mov
add
lret
jl
and
hlt
add
mov
mov
rep
push
js
dec
clc
out
adc
pop
pop
scas
out
movb
mov
pop
dec
cli
ds
je
sub
cmpsb
mov
push
jbe
dec
push
lds
push
or
xchg
rorb
mov
jmp
mov
dec
sub
js
add
jecxz
xchg
sbb
add
ret
add
push
pop
gs
jge
std
pop
lea
stc
push
ljmp
push
aaa
mov
cmp
addr16
xor
dec
dec
sub
add
push
push
adc
fldt
cmp
add
in
xchg
ficomps
addr16
inc
cmp
cmc
add
das
mov
outsb
xchg
push
cwtl
fnstsw
and
aad
xchg
jo
add
fdivrp
adc
jecxz
add
adc
inc
add
pop
or
movsb
call
pop
inc
mov
sub
mov
xchg
xor
shl
div
xor
out
and
loopne
mov
incl
cmpsb
cltd
rclb
inc
sbb
add
sbb
jnp
orb
fwait
cld
push
scas
out
clc
push
sti
mov
jo
repz
adc
jl
push
jnp
inc
push
mov
mov
mov
arpl
ja
push
int3
fnstcw
mov
add
jmp
faddl
sbb
cmp
dec
fisttpll
scas
repnz
pop
sbb
or
mov
mov
movsl
lods
dec
clc
pop
lods
jp
add
jecxz
push
pop
mov
cli
push
cmp
pusha
in
jae
aam
xchg
mov
fsts
cmp
shrb
aad
test
push
jmp
mov
arpl
sub
stos
or
movl
add
in
mov
int3
scas
dec
out
jo
and
add
imul
push
jl
mov
xor
mov
add
pop
mov
pop
repnz
sbb
and
sub
aad
jp
jle
mov
dec
add
jmp
xchg
fsubl
sbb
add
in
lcall
aaa
xchg
sbb
into
xor
inc
adc
popa
push
cmc
add
inc
orb
cmp
xorl
or
mov
mov
cmpsl
jbe
jle
fcoms
xchg
fcmovne
scas
push
sbb
push
in
push
js
add
rorl
push
xor
fcmovu
jae
add
jno
pop
sub
dec
mov
shlb
pop
cwtl
add
dec
mov
pop
and
ret
pusha
push
cmp
add
shll
cltd
add
mov
repz
mov
iret
dec
xor
mov
adc
mov
sbb
add
outsb
pmaddwd
sub
mov
fidivrs
cmpsb
sarb
or
add
movb
fwait
das
popf
lock
xchg
cs
pop
sbb
sub
add
jmp
call
and
lcall
and
push
sbb
sbb
or
iret
loopne
into
xchg
in
push
and
xor
inc
fdivs
push
pop
mov
ret
mov
add
aam
pusha
jg
push
sbb
ljmp
ss
pop
sti
outsl
stos
cld
mov
paddd
mov
sar
addl
mov
cmpl
test
cmp
cld
mov
sub
popf
inc
sbb
inc
pop
adc
into
imul
or
in
aad
add
jp
jae
mov
mov
out
push
jl
fwait
mov
xchg
loop
add
mov
cmc
icebp
clc
movsb
jg
push
cli
xchg
cld
sub
mov
icebp
ret
repnz
and
dec
xchg
popf
inc
enter
add
lret
mov
imul
and
test
filds
cmp
cmp
xchg
add
jb
aam
push
ds
adc
out
jno
jmp
mov
inc
mov
xor
xor
aam
pop
xchg
pushf
inc
adc
inc
addr16
sub
bound
sbb
add
aaa
pop
pusha
aad
dec
pop
js
mov
fstpt
jge
mov
ret
mov
xor
movsb
cld
pop
dec
jbe
nop
pop
in
flds
std
lods
jp
ljmp
in
je
jae
leave
add
js
loopne
rcrb
pushf
add
sbb
adc
lds
add
fistl
ltr
fstl
adc
xchg
jne
xor
fwait
jb
mov
fwait
clc
pop
jge
or
pushf
inc
xchg
mov
repz
mov
push
mov
popf
push
into
sub
mov
loopne
add
mov
out
rcrb
sub
negl
ficomps
jo
pop
add
adc
js
loope
cmpsb
pop
ds
and
sbb
push
fldcw
aad
subb
cmpsb
add
jge
or
lcall
subb
imul
addl
mov
cmpsl
add
dec
enter
pop
loope
jecxz
cmp
and
cmp
cld
add
sbb
sarl
loop
test
mov
mov
add
mov
adc
mov
add
sti
mov
scas
pop
mov
add
mov
push
add
mov
add
repz
inc
cld
mov
fnsave
xchg
add
adc
pop
add
imul
into
bound
inc
add
mov
add
jno
cmp
xchg
rcrb
fiadds
nop
cmpsb
call
xchg
mov
cmp
push
cmpsl
cltd
push
mov
lods
lock
sbb
mov
jo
pop
repnz
sbb
aas
pop
jo
call
sbb
mov
xchg
sbb
pop
add
fisubrs
push
and
jnp
pop
and
mov
sar
or
adc
pop
fmull
fldenv
pop
push
mov
hlt
cmc
add
inc
add
rcrl
add
loop
sbb
ljmp
cli
or
mov
inc
xchg
add
mov
add
loope
jb
les
add
in
jp
jmp
lahf
mov
pop
jno
wrmsr
xor
adc
cmp
test
mov
scas
dec
jl
pop
or
xorb
fsubrs
ss
imul
loopne
nop
out
dec
jb
add
pop
movsl
mov
add
clc
daa
push
bound
lret
xchg
outsl
xchg
sbb
mov
mov
mov
mov
nop
add
test
jp
mov
add
jnp
add
jl
outsb
pop
rolb
mov
inc
jne,pn
pop
sub
mov
outsl
repz
jno
mov
xor
jb
xlat
xchg
add
add
jo
push
push
leave
lock
test
sub
dec
xor
fldcw
cmp
scas
sub
add
xchg
mov
ja
mov
push
mov
mov
sarb
xchg
push
loopne
pop
popf
add
cmpsl
jnp
add
jmp
adc
add
jne
mov
shl
ret
add
outsb
mov
stc
or
dec
or
mov
cmp
mov
aad
cmpsb
fwait
sub
int
out
xchg
add
call
jno
add
pusha
dec
pop
je
nop
test
sub
cmp
mov
sbb
ljmp
pop
popf
sbb
js
xadd
xor
leave
push
outsb
lock
add
scas
in
les
test
mov
icebp
xchg
cmp
xor
mov
std
incb
call
cmp
cmpsb
push
push
push
dec
push
pusha
adc
mov
push
test
jg
addr16
jl
gs
inc
sub
in
add
sbb
in
cmp
ds
add
adc
push
test
imull
frstor
cmp
leave
lahf
mov
cld
loopne
scas
in
pusha
add
push
iret
push
jnp
push
loope
mov
xchg
add
mov
bound
push
pop
dec
loope
insl
adc
scas
faddp
lcall
dec
jmp
es
xchg
imul
xor
jmp
in
fcompl
int
xchg
or
jae
cmp
lock
lcall
fdivs
add
mov
jns
enter
sbb
shl
out
js
in
cmc
cmp
popf
add
add
and
in
test
add
scas
in
jb
pop
fnop
add
cld
cs
xlat
add
add
lcall
add
lock
pop
mov
mov
or
dec
movsl
and
mov
cmp
jb
xor
test
ljmp
fnstsw
incl
ficoms
xor
setg
bound
fnstsw
mov
add
rorb
repz
andl
xor
pushf
fdivrs
cmp
pop
xor
add
mov
loope
std
add
popf
into
es
imulb
pop
cmpsl
jae
pop
pop
ss
fdiv
and
xchg
loope
sti
pusha
sbb
adc
fstps
sub
arpl
lret
add
cli
int
add
inc
imul
sbb
ds
jg
sarb
das
sub
mov
rorl
addb
repnz
dec
in
leave
nop
jp
dec
jmp
adc
cld
xor
mov
push
jae
jbe
ds
mov
fldt
xor
aaa
add
push
xchg
xor
pop
jb
add
cmp
pop
cmp
fldl
stos
jo
sbb
jne
aad
and
sbb
loop
fcoms
inc
mov
add
nop
mov
add
add
and
add
or
ret
add
cwtl
push
cltd
sbb
in
cli
dec
daa
jp
push
inc
pop
xor
movsb
idivl
xchg
enter
fwait
add
add
xor
add
pushf
ja
mov
jle
jo
push
xchg
sub
inc
add
lock
mov
push
mov
loopne
lods
cmp
push
xorb
mov
movsb
xor
pop
mov
call
loope
adc
and
dec
rcrb
int3
and
add
adc
ss
jae
and
dec
pusha
and
repz
testl
stos
testb
and
cmp
or
adc
inc
addb
enter
mov
add
mov
jmp
cmpxchg
inc
out
jmp
outsl
inc
add
cmc
notl
and
sub
mov
cmpb
idivl
mov
pop
js,pt
dec
scas
pshufw
add
lret
jb
push
imul
sbb
sub
ljmp
jl
xchg
lds
mov
xchg
inc
ret
adc
mov
test
pushf
jmp
add
gs
adc
test
add
aas
rcll
outsl
sub
shll
mov
insb
call
mov
sbb
inc
lods
mov
dec
sub
hlt
add
fidivrs
call
add
jge
sub
and
inc
xchg
jle
jae
push
leave
mov
sub
add
mov
pop
sbb
pop
xor
xchg
mov
test
sbb
xchg
add
hlt
rorl
mov
or
and
lret
add
adc
outsl
and
inc
add
inc
clc
cmp
add
push
fisttps
add
jl
repz
rorl
mov
push
cltd
les
xchg
and
adc
jle
fisubl
jb
add
stos
pop
jo
xchg
or
sub
and
sbb
sub
add
or
cmc
adc
lcall
add
pop
sub
orl
pop
in
inc
sub
push
push
mov
inc
sbb
pusha
gs
loop
jne
and
adc
stos
jns
test
cmp
faddl
jo
add
xchg
mov
add
mov
addb
jp
sub
cld
jmp
mov
loope
sbb
addl
loop
and
add
sub
jp
mov
test
test
add
lret
pop
js
add
sub
jp
or
add
andb
adcl
call
mov
cwtl
add
mov
mov
pop
jle
arpl
mov
addb
lret
or
push
ds
add
and
dec
fnstenv
or
mov
out
negl
insb
mov
dec
sub
sbb
mov
nop
push
add
and
stc
in
mov
pusha
pop
push
and
xlat
push
add
jp
inc
push
sub
lahf
aas
ret
pop
fimuls
pusha
mov
cli
add
xchg
cwtl
int
lock
movsb
or
add
mov
outsl
push
notb
leave
and
mov
cmp
pop
js
jnp
fisubrs
aaa
add
xchg
xor
cli
mov
add
popf
or
add
sbb
or
ret
and
and
out
mov
insl
testl
adc
add
mov
jg
xchg
add
add
inc
mov
fldenv
and
ja
add
pop
and
inc
add
or
shl
xlat
xor
jge
fdivrl
pop
fs
mov
std
int3
addl
add
mov
outsl
push
psubsb
add
ja
mov
pop
bound
mov
xor
fs
mov
gs
cli
cmpb
xchg
lret
mov
jle
ret
mov
cli
cld
repnz
out
lcall
out
iret
mov
pop
or
mov
push
cmc
test
xchg
std
insl
movsl
jno
filds
lcall
sbb
bound
mov
ds
mov
cmpsl
mov
sbb
sbb
inc
xor
jl
add
push
lods
sub
or
std
jae
inc
test
jns
or
xchg
adc
add
iret
shl
xchg
mov
xchg
sbb
sbbb
orb
inc
sbb
and
mov
mov
insb
fidivrl
test
cmp
test
xchg
jne
lock
sahf
arpl
mov
jmp
sbb
cmp
add
xchg
dec
jecxz
faddl
push
push
stos
addr16
jmp
inc
xchg
sbb
xchg
xchg
xchg
test
mov
sbb
or
xchg
mov
mov
push
or
xor
std
jbe
pop
pminub
push
daa
xchg
subb
mov
vmovlpd
jns
xor
add
mov
sub
cwtl
mov
jno
xor
inc
into
fadd
add
push
inc
outsb
add
std
dec
jmp
dec
arpl
rorb
repz
mov
jecxz
out
jno
rclb
loopne
push
xchg
add
std
jno
rclb
add
call
iret
inc
popf
les
add
clc
inc
mov
pop
in
and
add
mov
add
les
inc
xchg
sbb
stos
repz
jle
in
loopne
dec
adc
mov
insb
add
testl
add
cmp
push
inc
push
jmp
push
frstor
lea
or
rcr
rcrl
pop
push
ss
cmp
adc
shlb
or
add
jno
fdivrs
adc
andl
add
cmp
movsb
push
jg
jl
pop
add
inc
icebp
and
cmp
mov
cmpsb
add
lret
add
ficoms
rcl
jns
add
sub
enter
xor
adc
in
xlat
shlb
in
mov
mov
sbb
jl
sbb
lcall
shl
pop
push
xor
add
and
out
mov
int3
call
cmc
add
in
sbb
mov
add
cmp
jns
enter
jb
mov
xchg
xchg
int
mov
rolb
jg
jecxz
stc
add
fwait
and
int3
ja
pop
std
loope
add
andl
inc
push
jge
and
mov
ret
push
add
enter
mov
adcb
orb
lahf
sbb
add
mov
test
out
outsb
lea
xchg
mov
mov
loopne
pop
add
push
inc
push
xor
cmp
stos
aaa
jmp
sub
shll
cli
cmp
dec
clc
sti
mov
sbb
enter
add
cld
jae
mov
outsb
inc
add
lods
adc
pop
mov
add
std
sarb
add
cwtl
into
test
lods
jne
sub
push
adcb
out
dec
loope,pn
inc
xor
sub
push
push
xor
out
mov
cmp
aam
outsl
push
mov
xchg
adc
jae
or
in
dec
test
or
into
inc
cmc
fsubrp
add
or
sub
pop
in
les
es
inc
inc
clc
adc
cmp
add
cmp
out
int
testb
orb
hlt
push
in
add
mov
adc
into
xorb
loopne
add
std
leave
push
mov
add
sub
push
mov
add
xchg
shrb
pop
stos
and
xchg
addb
sbb
mov
or
push
lds
hlt
loope
cmpsb
adc
lss
addb
xlat
cwtl
jl
and
std
xorl
sarl
sub
fldcw
movsl
cmc
jmp
dec
sub
sahf
dec
or
testl
xchg
aas
dec
add
jo
hlt
mov
in
arpl
push
shlb
cli
int
stos
ja
add
push
cmp
addb
fiadds
mov
int
sbb
inc
or
lahf
dec
mov
test
push
test
jns
cmp
lahf
add
movsl
mov
loop
sbb
pop
movb
inc
push
test
popf
fs
int
hlt
push
add
xor
sbb
cld
and
push
and
ljmp
jb
xor
pushf
xor
xor
add
push
add
pop
cld
pop
in
movsb
inc
out
pop
adc
mov
mov
sbb
jo
dec
pushf
pop
fs
nop
lock
xchg
mov
lock
xchg
inc
and
push
add
int
mov
pop
movsb
add
nop
and
push
dec
int3
inc
repz
add
inc
inc
pop
add
xchg
push
scas
add
sub
mov
add
mov
add
mov
lret
clc
lret
lock
mov
dec
add
jbe
fstpl
jmp
inc
cs
js
jl
loopne
call
xchg
lods
in
sbb
lcall
je
in
out
aas
imul
hlt
cli
or
mov
add
les
scas
scas
add
xchg
enter
in
repz
outsb
into
and
sub
add
jbe
in
fdivr
hlt
add
fwait
xor
push
and
fidivrl
cmpsb
rclb
sbb
xor
mov
mov
cmp
add
jecxz
xor
xchg
lea
fpatan
cmpsb
lahf
xor
movl
call
bound
in
rol
mov
inc
mov
sub
rcrb
stos
pop
jo
push
pop
rorb
repnz
add
shl
or
jb
in
jp
movl
xchg
dec
testl
fwait
shll
sbb
and
add
out
daa
sbb
je
jp
data16
add
popa
or
sbb
dec
push
subb
test
lea
add
push
mov
shll
mov
add
sbb
dec
pusha
mov
call
mov
add
repz
sub
cwtl
push
push
dec
mov
pop
cltd
cmc
add
mov
adc
add
nop
add
push
test
loop
and
sub
add
enter
ss
mov
pop
fsubr
pop
cmp
add
idivb
dec
out
dec
adc
ficompl
pop
shlb
pop
add
mov
push
add
daa
dec
push
icebp
clc
out
and
or
je
pop
add
push
jg
jb
lret
fwait
shlb
test
mov
push
sub
cmpsb
sub
inc
add
scas
jo
add
cwtl
sub
xchg
dec
hlt
dec
test
fwait
sub
cltd
pop
cmc
dec
xchg
add
pushf
add
mov
popf
pop
push
in
push
jmp
mov
scas
outsl
push
mov
mov
push
mov
cmp
add
testl
ljmp
mov
into
or
mov
pop
idiv
pusha
lcall
add
mov
lahf
call
jge
scas
pop
js
pop
daa
cmp
dec
add
xor
iret
sub
xchg
fbstp
fildl
sub
mov
xchg
cmp
in
or
pop
mov
test
popa
stc
add
insl
and
xchg
add
add
jp
movsl
sbb
sub
mov
ja
add
add
mov
xor
pop
jge
sub
xchg
jmp
mov
in
sbb
js
push
jno
je
mov
popf
cltd
jl
pop
and
out
pop
jns
clc
jne
sbb
mov
mov
in
dec
nop
dec
loopne
or
push
add
cltd
sbb
jno
push
jb
ficompl
fcoml
sub
shl
cwtl
add
sub
add
dec
shrb
push
push
sbb
xor
add
and
and
sub
out
aaa
movsb
add
aas
jl
xor
adc
and
mov
aam
addb
pop
mov
cmp
inc
iret
scas
or
dec
add
or
adc
inc
out
loope
xor
or
imul
mov
inc
cmp
push
xor
sbb
jo
out
dec
push
pushf
jae
sbb
enter
pop
xchg
push
mov
ja
jg
add
sbb
jge
dec
sub
dec
cmp
add
sub
jle
scas
dec
adc
loop
pop
cmp
and
sbb
jne
adc
mov
add
repz
add
sbb
and
lds
add
rorl
imul
jo
lds
add
push
idivb
add
pop
mov
test
xor
and
add
cli
inc
pop
lcall
or
dec
mov
outsb
inc
adc
add
sbb
cwtl
jmp
sub
lds
fsts
pop
cmp
jbe
jae
xor
shl
pop
fdivl
das
mov
cmpsl
aas
ret
les
test
mov
dec
xor
push
lahf
pop
scas
aas
aam
rclb
es
cmc
sub
add
sbb
outsb
adc
push
jb
pop
inc
or
test
sahf
add
pop
dec
mov
mov
adc
jmp
out
add
push
mov
andl
repnz
mov
and
cld
sbb
add
push
lahf
xor
mov
add
xchg
adc
inc
sbb
rol
cmp
mov
add
mov
xor
popa
dec
pop
add
lds
jnp
pop
pop
jecxz
cmpsb
in
add
adc
mov
add
addb
dec
cmp
add
faddl
in
push
cmp
mov
jg
rol
aam
data16
fstl
cs
pop
pop
test
pusha
inc
add
add
in
mov
push
mov
mov
lret
popf
pusha
lods
fidivrl
outsb
jg
ud1
or
inc
jg
mov
loopne
leave
jae
mov
addps
adc
das
rcrb
ret
jge
jbe
sahf
push
add
jae
add
bound
xchg
mov
fcmovu
les
cmp
and
xlat
add
sub
stos
jl
mov
add
push
mov
pop
xlat
jl
add
push
and
arpl
fs
test
cld
or
mov
lods
add
shl
sahf
ja
add
add
mov
jnp
add
aad
xor
dec
add
xchg
fidivl
mov
cs
aaa
add
clc
pop
out
lea
mov
ds
cmc
jo
mov
sarb
in
enter
sbb
dec
loopne
cmp
push
stos
jg
ret
dec
add
add
inc
ja
push
pusha
call
dec
mov
pop
adc
fbstp
push
ret
and
shr
inc
xlat
nop
xchg
pop
icebp
lret
into
loopew
add
inc
mov
add
stc
movsl
jg
sbbl
popa
mov
mov
daa
inc
cmp
sbb
mov
and
add
imul
hlt
lea
adc
out
mov
inc
aaa
push
push
and
add
fcoms
add
iret
jp
mov
sub
pop
xlat
popf
movsl
ljmp
dec
int
fisubrl
mov
jecxz
inc
cld
stos
jle
xchg
xor
imul
mov
in
test
pop
pop
insb
dec
or
fdivrl
pop
pusha
call
subl
add
pop
jbe
shlb
dec
ljmp
mov
cmp
inc
xchg
add
mov
popf
or
mov
pushf
nop
jo
dec
and
sbb
mov
dec
popf
hlt
jmp
mov
dec
jl
adc
add
fidivl
add
loopne
push
pop
adc
mov
add
int
add
rorl
jns
outsb
lret
fcomps
xchg
push
sbb
repz
mov
add
or
mov
jmp
lods
mov
xchg
xchg
push
leave
push
add
clc
sbb
out
cmc
rcrl
sti
adc
fbstp
jo
mov
arpl
ss
jne
movsl
pop
mov
push
xor
icebp
fs
adc
sub
push
aaa
mov
xchg
xchg
xchg
add
aam
int3
xchg
lds
xchg
cmp
sbb
sarb
insb
testb
mov
jp
jl
in
pusha
add
inc
cmp
int
xlat
xchg
add
outsl
and
pop
fisubs
leave
repnz
or
add
xchg
loopne
stc
xor
arpl
adc
push
mov
pop
fadds
mov
xor
fs
cmpb
adc
add
xor
nop
pusha
jno
shlb
jo
nop
cmp
faddl
pop
cmp
cwtl
or
hlt
push
scas
add
inc
imull
mov
jb
in
pop
push
xchg
test
lock
mov
add
daa
div
addr16
jl
idivb
add
push
ja
sahf
push
in
cltd
gs
dec
cmc
je
xchg
ss
insl
call
push
inc
mov
sbb
sub
push
fildll
jge
jl
xor
and
lock
test
insb
in
xchg
out
stc
sahf
and
jo
xlat
ret
ljmp
std
jns
ffree
mov
pop
push
out
daa
add
mov
xchg
add
lods
pop
sti
cmc
roll
stc
lds
mov
pop
mov
call
mov
and
add
jne
adc
sub
ror
inc
add
xchg
push
sbb
jno
jle
pusha
adc
mov
pop
pop
add
inc
jl
jb
not
mov
sub
push
data16
fsubr
mov
adc
lds
push
and
add
les
cld
shrl
cmp
mov
sbb
adc
inc
add
dec
lcall
push
cmpsl
mov
mov
pusha
imul
fists
jbe
or
and
out
dec
add
push
xchg
mov
cwtl
cwtl
jmp
or
inc
sahf
loopne
dec
cmp
test
fsubr
test
push
movb
subb
lret
int3
mov
dec
add
add
not
scas
rorl
inc
dec
ffreep
push
bt
stos
add
addb
xchg
add
mov
xor
and
lods
push
cmp
sahf
outsl
rorb
sbbb
scas
add
gs
xor
sbb
loope
dec
ret
or
mov
test
shrb
in
mov
mov
nop
movsl
cmp
outsl
roll
ds
aam
addl
fcomps
outsl
push
pop
or
fdivl
fiaddl
ret
ret
adc
xor
das
cli
mov
sbb
pop
adc
or
add
cltd
add
out
fidivs
fstpt
mov
adc
icebp
flds
push
ficomps
int3
mov
push
in
jmp
or
adc
mov
flds
cli
xlat
negl
cmpsl
or
test
scas
add
jmp
fadds
rclb
sub
xchg
loope
and
cmp
mov
cmc
popa
push
loop
sbb
fildl
jp
repnz
rcrb
in
shl
in
push
xor
dec
or
add
lock
jmp
sbb
mov
sbb
loope
sbbb
xchg
sub
std
out
mov
pop
daa
mov
mov
outsb
lahf
data16
out
arpl
lahf
add
mov
mov
inc
iret
add
lret
lods
or
les
xor
xchg
inc
and
mov
aam
cmovge
or
mov
js
pop
ja
add
inc
lret
sbb
xlat
jle
mov
mov
push
pop
loope
add
subl
xor
xchg
out
jge
das
mov
cmp
pop
subb
ljmp
loope
je
test
add
xchg
mov
out
add
push
mov
enter
mov
dec
jnp
repnz
dec
xor
test
and
jmp
clc
cmp
or
js
test
mov
pop
cmp
in
add
mov
insb
hlt
fs
xchg
lods
sbb
and
push
lahf
nop/reserved
jg
push
dec
sub
fidivrl
jle
adc
push
repz
add
rcr
adcb
jns
mov
sbb
ljmp
mov
arpl
mov
mov
adc
mov
sub
xchg
jecxz
or
loope
cmp
aam
mov
in
add
xlat
pusha
outsl
sahf
ud0
out
test
cwtl
jae
adc
sbbl
or
add
add
jmp
mov
lret
ljmp
aad
adc
push
mov
jno
or
je
addl
pusha
fcomps
mov
mov
popf
adc
or
pop
mov
mov
add
mov
in
stos
pusha
shrl
addl
jg
add
fmuls
rclb
add
mov
mov
adc
adc
push
jg
outsb
jmp
and
cmp
push
xorb
aam
xchg
test
cwtl
lock
pushf
adc
movsb
test
dec
and
insl
cmp
mov
xor
sbb
jne,pt
add
dec
or
push
push
stc
pusha
ds
call
jp
pop
xchg
cmp
dec
sbb
inc
sub
dec
les
add
xchg
lcall
adc
fisttpl
add
adc
cmp
movsb
hlt
shrl
dec
add
sti
sub
pop
jle
inc
dec
rep
jb
in
add
aad
mov
push
mov
sbb
or
dec
xor
outsl
xor
stc
push
xor
xor
sub
pop
or
test
aas
add
push
mov
pop
mov
mov
andl
mov
xchg
fimuls
fs
mov
fistl
push
jns
ret
mov
mov
jge
les
or
xor
add
cmpsb
add
nop
int3
imul
pop
andb
xchg
rolb
int3
dec
push
jge
out
mov
or
mov
adc
pop
repz
pop
loop
push
in
add
jnp
push
xchg
pop
ja
add
and
sbb
mov
mov
add
in
loopne
cld
jne
xor
leave
and
arpl
into
inc
and
mov
jl
stos
add
je
cmc
lods
jp
mov
pop
stc
jmp
pop
icebp
sbb
jno
roll
dec
ljmp
or
ds
je
daa
add
jecxz
mov
imul
jp
imul
cmp
sbb
ja
or
iret
fiadds
inc
add
jl
ljmp
xchg
jb
call
add
les
insb
mov
subb
int
xchg
add
and
hlt
daa
and
mov
push
jge
fwait
out
jle
adc
pusha
aad
inc
pusha
push
mov
cltd
push
into
cmpsl
and
imul
in
popa
js
sub
or
call
mov
dec
call
xchg
mov
dec
fidivs
pop
or
popf
mov
jns
outsl
and
inc
stos
cs
lods
cmpb
nop
fmuls
cmp
cs
push
in
add
and
xchg
add
xchg
frstor
jecxz
add
xlat
sbb
inc
or
lahf
add
leave
mov
mov
cli
fmuls
xchg
pusha
jl
or
adc
scas
xor
insl
sbb
jnp
add
jge
mov
icebp
xchg
cli
in
mov
sub
dec
fbstp
loopne
call
mov
and
add
xor
push
cs
sbb
sbb
mov
jge
test
testb
lds
daa
enter
arpl
es
lcall
out
sbb
add
or
jg
lea
inc
aas
xchg
push
call
mov
xchg
loopne
add
in
roll
iret
pop
mov
call
in
addb
int
add
jns
cmc
inc
aas
insl
repnz
js
cmp
adc
fldcw
or
mov
jns
adc
push
xchg
and
aad
xor
mov
xchg
popa
cmp
sbb
jl
fsub
dec
cli
add
scas
test
adc
lds
add
mov
inc
mov
je
loope
call
cli
pop
and
out
add
and
add
adc
testl
jmp
repz
pop
adcb
push
mov
cmp
cmp
aad
jge
jb
scas
push
divb
leave
popa
hlt
repz
sub
int3
and
mov
add
sub
int3
or
xchg
mov
adcl
sbb
push
push
addr16
sbb
push
jg
cli
and
sti
test
ss
push
and
push
cltd
cwtl
add
popf
test
add
in
push
xchg
mov
add
shlb
add
je
mov
dec
bound
jl
jge
add
loope
mov
add
fcoml
and
out
arpl
js
and
es
cltd
outsb
or
and
or
sub
lock
pop
cld
cmovo
aad
addb
repz
push
popa
test
iret
push
adc
fnsave
dec
bt
test
jmp
pop
in
xchg
jle
push
pop
rclb
sbb
xor
stos
and
push
mov
cld
sub
rorl
jae
pop
and
jmp
add
pop
hlt
and
jno
add
sahf
repnz
daa
sbb
pop
inc
scas
push
pop
sbb
xor
imul
mov
jne
mov
mov
andb
mov
mov
mov
lcall
out
out
dec
mov
xchg
xor
fucom
scas
adc
mov
fdivr
adc
add
add
adc
cmc
iret
repz
mov
jmp
lsl
adc
jg
jl
pop
ljmp
sub
rolb
outsb
push
push
stc
jno
les
popf
rclb
inc
or
sub
push
frstor
xchg
mov
xchg
ret
pop
mov
mov
dec
adc
cmp
add
int
out
adc
push
or
icebp
sbb
mov
or
iret
imul
pop
pop
xor
sbb
pop
xor
loopne
outsl
mov
sti
sarb
gs
faddl
scas
mov
call
fwait
ljmp
and
mov
cmove
xchg
add
test
out
and
cmpsl
add
push
ret
movsl
add
xchg
jge
mov
dec
nop
clc
mov
push
jl
dec
subb
or
js,pt
inc
inc
mov
cmpb
xor
nop
fwait
add
jecxz
xor
mov
sub
inc
jge
pop
jne
pxor
hlt
pop
add
shll
and
adc
lcall
jne
pusha
mov
lods
xchg
mov
add
add
cmp
xor
iret
jnp
jmp
aam
mov
leave
sub
lea
js
cmpsw
mov
xchg
mov
pop
sbb
mov
jle
jp
pop
sbbl
jecxz
rorb
inc
add
xchg
cmpsb
push
fnsave
cmpl
jne
daa
or
add
outsl
in
jge
mov
cmp
mov
mov
or
js
push
cmp
jecxz
movsb
out
dec
loopne
cwtl
xchg
adc
pop
fs
lahf
adc
add
ljmp
popf
xchg
pop
add
out
je
adcl
xchg
scas
and
or
nop
adc
sub
nop
push
test
mov
dec
sub
loopne
inc
outsl
outsb
push
add
shl
push
xchg
jl
push
sub
mov
iret
jbe
cmp
or
lcall
in
push
push
cltd
add
lds
dec
int3
shrb
jle
push
dec
add
call
loope
pusha
pop
pop
xchg
aad
push
ret
mov
cmp
pop
mov
jne
add
cmp
inc
lods
sti
add
fwait
lahf
test
nop
or
sub
ret
cmp
mov
jl
push
test
cmc
outsl
into
out
add
int3
dec
inc
rorl
fldl
push
add
mov
outsl
sbb
shrl
pop
xchg
js
add
sbb
jp
jmp
adc
lcall
out
in
movl
push
xor
xchg
mov
mov
inc
mov
sbb
add
xor
cmc
push
dec
loope
cmp
dec
push
popl
pop
jp
shlb
cmpsl
lret
and
dec
fwait
add
cld
xlat
sub
leave
pop
inc
or
aas
daa
insb
mov
mov
fwait
jae
add
loope
add
push
xor
aad
sub
addb
in
lock
sub
sbb
add
inc
mov
sbb
xchg
add
test
or
mov
lret
push
jbe
in
jl
add
addl
sbb
add
insb
jmp
or
inc
pop
outsl
add
in
mov
jg
add
dec
xchg
sbb
out
add
adcb
dec
data16
cmp
mov
fmuls
and
pop
pop
ret
pop
cmp
out
mov
add
leave
push
pop
sar
mov
dec
jl
inc
add
jp
add
lret
movsl
imul
sbb
inc
nop
pushf
adc
add
add
cmpsb
mov
or
push
orb
lcall
lahf
inc
dec
fiadds
lret
jmp
push
fcmovbe
out
addl
mov
mov
mov
inc
add
inc
outsb
xor
cwtl
add
paddsw
and
push
dec
push
xor
mov
add
lods
mov
shlb
adc
sbb
clc
fimuls
fcmovb
cmp
pop
sbb
in
outsb
ret
adc
cmp
add
or
pop
cli
incl
insl
shrl
into
mov
mov
push
pop
inc
mov
loope
and
loopne
or
cs
stos
arpl
mulps
test
add
add
lahf
dec
bound
ret
adc
or
icebp
and
int3
hlt
xlat
inc
in
cmp
rolb
aam
decl
std
sub
movsb
inc
dec
les
add
jnp
in
push
mov
sti
mov
add
leave
cld
loope
test
dec
mov
cmp
mov
outsb
push
dec
cmovae
pop
incb
fstl
cmpsb
or
add
mov
adc
add
sbb
mov
xchg
ds
mov
call
out
rorl
mov
sub
add
pop
fsubs
adc
xchg
mov
mov
or
and
ja
ret
dec
lret
rclb
add
cmp
loop
ret
subl
xor
pop
ss
leave
cmp
stos
add
sub
pop
cmpsb
add
popa
add
scas
fidivrl
mov
add
movsl
test
or
pushf
add
inc
insb
gs
xor
mov
sub
add
cmp
jle
sbb
add
adc
jae
push
fcmovnu
arpl
or
add
out
mov
push
lahf
pop
shl
cmp
jmp
mov
rcll
push
pop
add
loope
mov
stos
add
cmp
add
cli
pop
push
int3
cmp
push
sub
dec
imul
jno
fcmovbe
add
cmp
mov
adc
mov
repnz
add
adc
in
or
in
fbstp
add
mov
popa
add
cmp
rolb
inc
sbb
int3
testb
inc
adc
stos
push
in
test
mov
dec
mov
mov
cmp
xchg
add
std
pop
jge
mov
xor
inc
sbb
push
or
test
add
movsl
out
daa
push
ljmp
pop
mov
popl
or
push
sub
push
sbb
mov
mov
add
xchg
cmc
jmp
ss
add
dec
ds
bnd
test
leave
popa
add
adc
add
push
add
rol
inc
jecxz
xor
hlt
jo
sub
or
mov
cmp
cmp
dec
inc
sub
jge
les
cld
mov
push
mov
les
add
push
pop
mov
movsb
mov
xor
adc
call
sub
clc
add
in
push
xchg
jp
add
test
and
inc
lret
fs
pop
xor
xchg
popa
adcb
and
insb
pushf
test
inc
xor
cmp
lcall
sbb
mov
clc
fdivl
fldt
lock
xor
push
lods
testb
repnz
pop
insb
das
mov
xlat
clc
js
ret
ds
mov
sbb
inc
pushf
addl
shr
sub
cwtl
xor
pusha
xchg
pop
inc
fisubrl
popa
wbinvd
dec
movsl
jecxz,pt
xor
push
idivl
int
aas
sar
pusha
nop
and
and
mov
je
les
inc
es
push
pop
or
push
cmp
or
mov
je
scas
xorl
pop
les
insl
lea
out
pushf
pop
add
std
xor
xor
mov
je
sbb
fcoms
xchg
pop
mov
ret
data16
cmp
mov
push
pop
in
fninit
mov
push
fwait
lods
leave
xchg
adc
pop
rol
rclb
out
adc
int
inc
xor
mov
xchg
lods
in
dec
in
add
jae
or
dec
push
pop
imul
xchg
inc
mov
jl
add
gs
pop
add
sub
add
popa
add
or
in
or
mov
add
or
push
jecxz
add
xchg
mov
pop
cwtl
pusha
push
mov
addr16
leave
mov
sbb
mov
inc
rorl
add
sbb
add
loope
mov
rclb
cltd
movsl
notl
ljmp
xchg
add
inc
ficoml
pusha
nop
lock
push
xor
jmp
push
sbb
dec
subb
inc
add
mov
sub
xchg
cmp
inc
xchg
test
aad
repz
add
lahf
ret
les
mov
xor
cmp
aam
jo
pop
inc
mov
cli
int
clc
or
or
cld
mov
or
push
fcmovnbe
add
imul
pop
sarb
movsl
adc
add
loope
cmp
cli
test
pop
ds
sub
inc
shll
xor
add
es
xlat
xchg
ret
mov
xchg
fwait
int3
idiv
push
add
int
sbb
or
add
add
fs
cwtl
xor
jbe
scas
daa
setae
xchg
dec
ret
lea
bound
ror
pop
xchg
pusha
jo
cltd
sub
hlt
loopne
mov
pop
lret
add
psrad
mov
dec
and
lods
sub
inc
add
sub
xor
addb
leave
inc
arpl
cld
add
push
xor
rsqrtps
and
cmc
sub
aam
add
mov
add
in
sarb
add
jle
mov
bound
add
jmp
scas
or
and
cli
mov
ds
stc
mov
js
add
push
dec
js
scas
popf
in
ljmp
and
call
add
cmp
dec
inc
loopne
mov
add
insb
nop
cmp
or
or
add
pusha
sbb
push
loop
lea
jg
xchg
stos
push
leave
icebp
imul
adc
lret
xchg
in
add
pop
pop
adc
jge
cmpsb
sarl
stc
xor
add
mov
or
ljmp
push
std
pusha
insl
add
and
sbb
loopne
xchg
dec
mov
inc
sbb
out
add
clc
icebp
std
mov
xchg
add
rcll
push
aam
enter
mov
adc
rclb
jmp
inc
es
xchg
std
aaa
add
out
int3
sub
add
in
call
jg,pn
repz
andb
mov
inc
sbb
int
fs
fidivrl
or
or
push
pop
inc
mov
lds
shll
add
outsb
gs
dec
push
mov
out
jo
dec
cld
sub
dec
vrsqrtss
js
aam
push
lock
push
test
mov
cs
mov
add
xchg
pop
movb
rcrb
imul
push
jne
iret
jo
pop
sarl
or
call
outsb
fidivrs
rcll
les
xchg
insb
xor
add
adc
hlt
mov
loope
movsb
push
mov
add
jno
push
add
pop
lret
adc
fiadds
cld
cmp
insl
add
mov
repnz
sahf
gs
mov
add
push
popf
or
add
or
add
xor
inc
dec
sarb
and
stc
inc
cld
nop
mov
add
cmp
mov
in
mov
push
je
add
lcall
mov
push
jb
add
jb
ss
add
mov
or
cmc
mov
push
aas
jecxz
adcb
rclb
std
iret
sbb
pop
mov
movsl
or
fwait
dec
add
jae
jge
cli
lret
dec
ds
sbb
cmp
sbb
shrl
and
sarb
hlt
mov
adc
shrl
jp
xchg
add
enter
nop
int3
sbb
hlt
rorl
pusha
push
repnz
add
cltd
jg
add
ret
inc
insb
fdivrp
add
test
add
je
cmpsl
cli
leave
jae
add
adc
xor
mov
lods
scas
aas
pop
fimuls
add
jne
mov
xchg
xor
fldt
push
adc
pusha
xchg
lock
mov
shll
aam
dec
mov
add
push
cmp
ds
mov
imul
mov
lsl
cmpsl
cmp
or
adc
cld
dec
push
nop
loopne
insl
xor
mov
sbb
fidivl
add
int
mov
add
jno
sbb
inc
repz
outsl
xor
stos
inc
std
and
add
int
decb
jo
pop
loop
outsb
fistpll
rcll
xor
cmp
push
xchg
push
addr16
adc
loope
add
imul
inc
mov
add
test
add
es
mov
jne
sub
dec
add
subb
jno
push
dec
add
push
cltd
js
xor
pop
add
imul
jne
nop
test
xchg
add
push
push
fimull
lahf
mov
ja
dec
hlt
das
sbb
test
arpl
add
cmp
jge
movsb
outsb
loopne
jns
orb
xchg
jp
mov
sar
popa
sub
add
nop
inc
add
mov
int
iret
lahf
push
xor
rclb
lcall
lock
add
and
jbe
repnz
add
cli
fbld
xchg
or
gs
sbb
xor
mov
mov
mov
test
mov
mov
cmp
into
jae
mov
push
ljmp
scas
add
and
icebp
jnp
in
in
notb
int3
jns
lret
dec
mov
add
add
roll
repz
out
add
xor
je
push
mov
cmp
dec
lea
into
add
sub
aad
or
ret
ds
cmpb
push
shr
out
jge
add
jbe
and
cmp
fnsave
les
dec
cmc
aad
mov
pop
in
xchg
ret
subb
add
addr16
dec
mov
sbb
idiv
xor
int
cmpsl
stos
jg
psubw
or
lods
mov
xor
add
sub
daa
xor
in
pop
sahf
pop
enter
and
rol
ret
shrb
pop
std
pcmpeqb
or
inc
or
mov
xor
push
leave
xchg
inc
add
popf
adc
push
xchg
divl
aaa
stos
out
sti
push
fisubrl
cltd
jl
aad
add
mov
lea
pop
mov
xchg
or
sbb
mov
cmp
sbb
sbb
xor
jno
and
add
mov
mov
add
inc
push
dec
mov
test
add
fsubrl
xor
pop
pop
xchg
jmp
xor
push
adc
mov
adc
subb
jno
cli
adc
sti
sbb
enter
pusha
idivb
add
jbe
cmp
jl
cs
movsb
mov
mov
leave
add
xchg
xchg
inc
pop
mov
sub
in
push
pushf
das
push
sub
sbb
lahf
adc
addr16
add
test
test
push
sub
push
xchg
fs
jle
jnp
les
aaa
mov
xor
ljmp
rol
pop
inc
fcoms
pusha
call
hlt
cmovnp
and
add
sub
test
int
clc
ja
jbe
mov
add
sub
mov
push
jecxz
fcom
stos
pusha
add
scas
push
and
jg
xor
cld
push
out
negl
mov
fists
lods
push
insb
add
push
mov
adcb
mov
loop
add
jle
adc
dec
js
xor
add
rcr
jge
hlt
dec
push
ror
add
xchg
cltd
sub
rcr
fwait
arpl
rorb
ret
xor
mov
fdivs
stos
popa
jns
add
mov
push
jnp
mov
dec
cmp
push
cli
sti
rcr
js
add
mov
xchg
neg
pusha
dec
jo
in
fidivrs
cli
repnz
clc
rolb
imul
addb
cmp
loope
jb
xlat
ljmp
xchg
enter
dec
xchg
inc
xor
sub
and
jmp
sub
jno
push
stos
jnp
loop
cltd
nop
inc
ss
out
cwtl
sub
js
enter
cs
mov
xor
jne
pop
dec
test
pop
pop
and
pop
ja
hlt
add
and
xor
lods
dec
fldl
sub
push
cld
clc
sbbl
adc
fidivrs
lea
sti
adc
xor
cmp
push
xchg
dec
add
xor
and
cmp
ljmp
mov
jecxz
roll
pop
dec
dec
push
mov
add
enter
jo
shrb
and
rolb
imul
inc
xor
mov
jae
inc
adc
mov
js
add
xor
push
out
dec
xchg
adc
adc
xlat
add
mov
nop
pusha
dec
mov
adc
sbb
movsb
cmp
mov
arpl
mov
fwait
jns
adc
or
mov
test
xchg
aas
jmp
adc
nop
add
dec
xor
ja
imul
out
lea
push
xchg
sahf
je
nop
add
mov
outsl
outsb
cs
add
leave
push
fnsave
add
or
mov
push
cwtl
in
dec
popf
shll
push
xor
sub
and
mov
insb
pop
test
cmp
or
mov
jmp
mov
idiv
clc
add
cmovg
ja
or
sub
js
push
jg
or
pusha
push
pop
add
leave
sbb
push
je
add
xchg
fiadds
mov
mov
mov
shlb
adc
push
out
sahf
fs
add
fcompl
mov
adc
fistl
cltd
sbbb
cmpsl
push
and
fsub
cmpsb
aam
clc
into
cltd
testb
and
jg
loopne
add
xor
add
mov
clc
push
loopne
add
adc
pop
stos
shrb
movsl
out
pop
inc
xor
outsl
push
dec
loopne
and
aad
inc
jbe
mov
inc
adc
hlt
and
rclb
icebp
mov
add
or
ja
add
cmp
sbb
pop
pushf
push
jg
addr16
mov
add
ljmp
or
pop
lret
add
pusha
mov
orb
test
dec
sar
add
mov
fiadds
xor
cmpsl
jns
mov
dec
inc
mov
out
mov
mov
sub
sahf
jecxz
push
push
mov
inc
in
sub
pop
pusha
and
sbb
pop
pop
notl
cmp
inc
xor
add
push
mov
mov
inc
ja
sub
popf
mov
loop
fimull
nop
push
data16
inc
mov
xor
loop
in
sti
jb
adcb
aaa
xor
icebp
xor
shrb
and
mov
sbb
stos
shrl
add
sub
rorb
push
je
add
mov
mov
rcrb
lahf
mov
out
sub
in
cmp
and
sarl
pop
mov
icebp
js
loopne
push
into
imul
add
es
out
fildll
aam
and
nop
cmp
loope
addr16
lds
imul
cli
or
arpl
test
sub
shlb
in
xor
lret
ss
cld
inc
out
cmp
cmpsl
mov
es
hlt
mov
add
sbb
or
inc
xchg
pop
add
in
jne
test
jo
add
shlb
add
out
xor
adc
clc
fs
mov
add
push
pop
pusha
pop
sub
faddl
xlat
push
movsl
es
rcll
xchg
add
push
or
add
aaa
sbb
xor
hlt
dec
shrb
adc
rolb
adc
addr16
xchg
jns
add
ljmp
mov
mov
sbb
mov
jl
xor
cmp
inc
sbb
andb
scas
adc
xor
or
inc
add
scas
test
addb
push
popa
leave
ficompl
fldcw
ss
xor
pop
push
stc
in
lock
xor
jo
cmp
jmp
push
xor
mov
js
or
jmp
lcall
ds
mov
insl
sub
cwtl
add
fmuls
inc
movsl
into
loope
xchg
orb
sbb
dec
add
out
mov
and
call
in
xlat
ret
lret
cld
xchg
jmp
or
cmp
cmp
dec
jns
fiaddl
add
ret
add
mov
ljmp
movsb
and
imul
iret
sarb
insb
enter
push
mov
bnd
ret
mov
mov
fdivrs
pop
mov
jae
stos
ss
jo
jle
popa
dec
aam
fwait
xor
and
jno
dec
add
cmc
ror
insl
cwtl
mov
add
rol
lds
sbb
add
addr16
mov
daa
dec
fnstsw
test
mov
lret
loop
shrb
into
sub
xor
loope
pop
pop
xchg
in
cwtl
in
inc
mov
les
xchg
jnp
dec
xor
xchg
push
or
mov
adc
push
add
es
dec
ljmp
adc
dec
sub
test
mov
sti
imul
fldl
dec
mov
sbb
mov
jl
xlat
sbb
add
and
push
repz
push
push
adc
sbb
aad
jo
add
imulb
cld
stos
add
aad
scas
pop
push
or
mov
testb
jmp
add
fsub
das
movsl
stc
cmp
and
jg
add
add
ja
mov
add
push
sub
add
lds
pop
out
pushw
and
xchg
inc
adc
or
subl
mov
cli
out
rcrb
cmp
jae
push
jno
cmp
jb
gs
adc
mov
enter
std
add
filds
js
ja
add
xlat
or
inc
pop
into
add
fwait
movsl
inc
addl
mov
movsb
insb
pop
pop
sbb
add
xchg
push
add
repz
dec
mov
push
inc
add
fisubrs
push
inc
lret
loop
aad
add
into
lea
mov
add
dec
xchg
adc
int
add
jo
inc
cwtl
xchg
add
outsb
pop
push
inc
adc
iret
mov
push
aad
jl
mov
inc
cwtl
pushf
rcrl
adc
es
add
mov
lahf
scas
lods
cld
fistpll
test
sub
mov
cld
in
jecxz
xor
cmpsl
push
ljmp
mov
out
mov
shlb
hlt
aaa
pop
rolb
mov
shlb
mov
sbb
add
test
es
icebp
shl
lcall
mov
or
andb
lods
andl
call
mov
lcall
inc
ret
adc
and
sbb
dec
arpl
add
add
das
add
push
sbb
add
call
testl
add
or
xor
add
inc
or
fcomps
shlb
negb
inc
ffree
jnp
lock
push
add
xor
sub
mov
lds
js
push
test
hlt
xlat
add
inc
test
xor
adc
addb
cs
lods
xchg
pop
mov
les
xor
xchg
inc
mov
daa
add
and
jle
popl
sbbb
push
loopne
and
leave
add
cmpsb
mov
inc
enter
push
pop
xchg
mov
outsb
popf
aaa
push
daa
add
das
or
push
mov
add
push
add
push
cltd
js
add
add
mov
xchg
je
ret
push
in
fs
pop
xchg
hlt
pop
les
sbb
xor
add
adc
jmp
enter
inc
add
xchg
out
mov
mov
dec
enter
add
add
or
inc
add
loopne
imul
dec
jl
pop
mov
ljmp
out
fstpl
cmpl
sub
add
loope
xor
push
loopne
cmpsb
insb
incl
sub
dec
and
dec
fiadds
fsubs
xor
in
sub
cmp
push
out
sub
xchg
jne
dec
dec
out
in
pop
add
jp
lret
push
scas
mov
dec
add
inc
les
add
cwtl
scas
sbb
out
pusha
mov
add
and
in
nop
mov
add
dec
sbb
daa
clc
cwtl
pushf
movsb
mov
push
mov
js
cmp
push
ds
rcrl
pop
stos
sti
loopne
add
add
aas
enter
movsb
add
pop
ljmp
or
lods
mov
push
jge
xchg
mov
jae
sti
loopne
je
add
mov
sub
adc
test
scas
popa
and
gs
or
scas
movsb
pusha
add
xor
std
mov
ss
decb
add
adc
lods
cmpsl
inc
lea
xor
out
fsubrs
aaa
mov
mov
or
ret
or
push
rorb
pop
jle
mov
jne
scas
xor
fwait
cmp
sbb
ret
mov
ds
xor
sub
std
mov
lahf
rcl
loopne
out
cmp
adc
add
inc
insb
adc
popf
sbb
xchg
fwait
sarl
mov
cmc
je
imul
popa
push
ficompl
adc
and
inc
repz
movsl
fs
mov
cmpsl
jo
or
adcb
jg
xor
add
and
sbb
test
inc
sbb
add
adc
mov
scas
movsl
mov
test
jg
adc
loop
jmp
andb
or
mov
add
inc
or
ficomps
add
push
pop
cmp
add
jg
sbb
cmp
js
xor
xor
and
sub
xor
or
add
dec
push
xchg
stos
xchg
pusha
lret
xchg
int3
cs
and
jno
ljmp
mov
stc
sub
fmuls
sarl
xlat
cmp
sti
js
fs
dec
nop
test
fstpt
add
lea
pop
push
lcall
imul
out
aas
inc
add
shll
lock
pop
hlt
popf
add
cmp
mov
cmp
inc
add
cld
shll
std
add
dec
adc
in
arpl
adc
xchg
addb
fisubrl
dec
aaa
sbb
cli
push
pop
je
jo
xchg
pop
lahf
mov
push
lock
adc
out
sub
das
int3
pop
cmp
gs
mov
add
jbe
hlt
inc
pop
push
in
xchg
xchg
xor
and
popa
mov
dec
xchg
xchg
add
mov
cmp
jo
sbb
xchg
in
xlat
adc
add
call
xchg
sbb
push
das
fsubs
inc
mov
adc
adcb
rorl
cld
je
out
or
inc
test
and
ds
push
jle
sbb
sub
hlt
add
imul
cld
out
andl
or
lods
decb
out
ret
inc
addb
dec
cld
jbe
and
xchg
or
mov
pause
stos
test
sub
mov
cmovo
lods
popf
ja
add
push
sub
fldl
jnp
fistpl
imul
pop
add
mov
cmp
test
pop
data16
call
inc
ds
out
push
in
xchg
jbe
adc
cmpl
add
loopne
test
mov
add
pop
push
mov
mov
movsb
loop
add
xchg
sbb
add
out
dec
sub
mov
cmp
mov
int3
cmp
test
inc
dec
icebp
add
sbb
fadds
ja
mov
repnz
addl
roll
stos
xor
xorps
ja
or
movsb
insb
add
mov
iret
sub
pop
add
cmp
mov
mov
add
cs
mov
inc
xor
ja
sahf
xchg
pop
ss
pop
add
pop
or
pshufw
data16
xor
adc
test
scas
dec
les
fnstenv
testl
sub
adc
outsl
fucomi
sti
pop
getsec
push
jb
out
pop
add
or
loope
xor
outsb
sub
mov
mov
xchg
sbbb
fwait
in
push
mov
jnp
mov
and
test
add
cs
adc
test
add
js
add
dec
pop
loopne
lock
push
sbb
push
sbb
mov
add
jns
push
lea
lods
les
xor
lcall
stc
movb
xchg
mov
idivl
insb
mov
addl
jbe
mov
ja
mov
shl
addb
loopne
rorb
fidivrl
mov
adc
int3
sbb
xor
scas
pop
add
push
icebp
jmp
mov
add
xchg
mov
push
push
inc
rcrb
int
add
mov
lds
cmp
xchg
mov
gs
loop
outsl
push
cld
push
add
dec
xchg
pop
lea
aam
loop
cmp
pop
lahf
fmull
xor
hlt
shrd
cmpb
fxch
or
or
imul
and
sbb
bound
jnp
add
addb
xor
or
mov
jecxz
or
in
xor
mov
cmpsl
and
add
movsl
fsts
mov
lods
rorl
test
dec
incb
sbb
imul
adc
mov
insb
pop
mov
arpl
cld
jl
addr16
inc
sub
aam
out
rclb
xor
push
pop
add
xchg
in
nop
pop
jne
add
and
cli
out
mov
sbb
stc
dec
xchg
repz
call
es
mov
or
rorb
jno
inc
mov
ret
loopne
jl
fldenv
movsb
pop
add
sub
pusha
pushf
test
xor
subl
inc
xchg
and
int3
lcall
mov
xchg
jle
xchg
idivb
and
str
pop
xchg
pop
int3
and
xorb
addr16
push
or
lcall
nop
enter
mov
or
dec
fidivs
push
sbb
jl
add
out
out
arpl
inc
push
mov
cmp
cmpsb
or
fcompl
orl
aas
pop
dec
xchg
add
xchg
xor
int3
fsubrs
mov
mov
roll
xor
add
repnz
sub
clc
add
xor
lock
out
and
push
sbb
add
push
sub
and
cld
add
sub
les
jnp
sarl
sub
stos
outsl
add
clc
mov
aam
ja
mov
dec
rcrb
mov
outsb
mov
sub
dec
sarb
mov
mov
or
xor
repz
mov
ljmp
jns,pn
or
adc
arpl
ret
cwtl
scas
aas
add
xchg
mov
ljmp
in
xor
add
loop
or
pop
jo
add
or
mov
mov
jmp
mov
jp
mov
xchg
adc
mov
pop
cs
ret
dec
imul
jle
dec
jno
add
les
or
adc
dec
add
shrl
fidivrs
sub
outsl
cli
mov
xor
faddl
push
add
jno
mov
mov
test
and
mov
jp
insb
add
dec
sub
push
pop
and
cmp
pop
cmpl
lods
lock
fs
add
mov
xlat
add
movsl
add
int
xor
and
jp
shlb
cli
push
add
push
add
aas
rolb
add
outsl
fildll
sub
pop
pop
add
lods
pop
ds
daa
add
test
nop
push
add
sub
xchg
cmp
push
xchg
int
dec
mov
lahf
adc
add
xor
out
into
xchg
pop
aad
cli
push
inc
test
icebp
imulb
push
sarl
mov
fwait
cmpsb
and
iret
fs
shl
sbb
adc
xor
test
cmp
shll
sub
and
lods
xor
pop
add
add
xchg
cmp
shl
jbe
popf
and
inc
stos
xor
push
repnz
addr16
js
mov
clc
and
and
jae
jb
dec
aaa
sub
cmpsl
scas
add
test
cli
movsb
decb
inc
add
pop
inc
fdivl
loop
adc
negb
into
dec
scas
lret
lock
in
add
adc
dec
sbb
lock
aaa
xchg
sub
mov
cmp
lds
gs
std
pop
xlat
rcrl
imul
int3
daa
gs
cltd
jmp
inc
xor
push
pop
popl
dec
clc
pop
out
rorb
mov
inc
hlt
gs
lock
push
ljmp
add
lods
rclb
mov
pusha
push
out
add
inc
adc
add
xor
inc
mov
pop
push
mov
add
insl
test
or
out
rolb
sub
imul
lret
les
shr
psrad
mov
push
int
movsb
loopne
push
cmpsl
pushf
jnp
mov
outsl
jge
mov
into
shl
cs
mov
add
nop
mov
sub
xchg
adc
cmp
jo
adc
bound
jb
pushf
xor
mov
stc
mov
out
add
inc
test
fdivl
fs
shrl
adc
sbb
and
cmp
adc
gs
addl
push
daa
mov
push
je
jne
ljmp
sbb
xchg
add
mov
ljmp
inc
mov
addr16
fmuls
out
cmpsl
mov
jp
adc
dec
in
pusha
sbb
or
add
addb
inc
dec
add
xchg
mov
sub
pcmpgtb
inc
adcl
outsl
pop
pusha
adc
je
into
or
bound
add
scas
cmp
cmp
add
aaa
in
and
pusha
mov
data16
mov
loopne
mov
stc
sbb
xchg
adc
imul
mov
dec
mov
stc
clc
ret
fists
repz
jns
and
dec
pop
xchg
sub
sub
ficomps
lret
inc
push
inc
jae
jbe
cmc
add
ljmp
repnz
pop
fidivrl
aam
mov
xorl
cmp
xlat
cmp
cmp
add
sub
adc
add
jno
ja
mov
sbb
sbb
lods
je
je
pop
cmc
mov
psrld
push
sub
jno
push
mov
mov
pop
xchg
inc
pop
jp
add
fs
push
jbe
add
dec
repnz
jecxz
jge
mov
sbb
jbe
test
inc
mov
adc
lock
sub
je
push
jbe
mov
int3
shll
sahf
in
jnp
cmp
xor
mov
mov
popa
out
xor
inc
out
in
lret
scas
or
faddl
divl
xchg
insb
dec
xlat
add
sub
pop
jmp
fstpl
xor
fcmovb
fbstp
cmp
mov
pop
sub
call
insl
push
arpl
inc
sbb
or
push
test
lar
add
or
push
lock
sti
sbb
fsubr
jno
push
sbb
clc
and
mov
xor
mov
sub
cmp
cmp
in
xchg
mov
imul
xor
out
xchg
sbb
mov
mov
inc
xchg
jge
insl
das
out
fadd
mov
jecxz
lret
test
or
lret
jne
sub
call
xchg
roll
nop
fadds
or
inc
dec
jg
pop
pop
add
rcrb
shrb
pop
cli
add
xor
pop
add
jecxz
or
js
popa
add
fcomps
add
add
mov
mov
or
xchg
in
enter
add
inc
and
push
cld
sub
xor
fsubs
inc
ficoml
mov
add
sahf
push
jg
mov
add
dec
enter
mov
insb
lret
das
loope
pop
xor
aad
inc
sub
mov
add
sbb
xlat
inc
popf
inc
fidivrs
add
fadd
mov
sarb
pop
mov
sbb
add
sti
cmp
pusha
inc
pop
jae
add
inc
popa
ret
cs
add
mov
sbb
repz
xor
xor
push
gs
jle
xchg
and
cld
add
jmp
sbb
pop
decb
mov
fs
idivb
xchg
fmuls
push
es
and
sub
jo
orl
loope
movaps
pusha
aam
icebp
mov
lods
mov
mov
jo
jp
movsl
aas
add
pop
pop
lret
test
cmp
mov
aas
dec
inc
jmp
push
outsl
subb
jg
or
dec
stos
dec
test
or
dec
inc
ljmp
je
add
dec
shlb
lea
rcr
insb
lock
in
and
aam
ja
sti
mov
orl
jns
sbb
rolb
pop
cmc
rcll
pop
cmpsl
push
jae
aaa
cmp
or
xchg
pop
add
lock
pop
in
sahf
add
add
jne
xchg
mov
dec
push
mov
cltd
mov
add
fnsave
shrb
shlb
roll
xchg
pushf
push
out
xchg
jo
add
jb
ret
adc
push
cmp
jmp
or
adc
popa
lcall
jne
add
mov
xchg
push
add
pop
and
add
sbb
in
jle
ret
test
push
aad
fs
pop
mov
ret
sbb
cld
and
rcll
jecxz
inc
xor
je
nop
cmp
dec
push
sbb
jge
xchg
add
fisttpll
pusha
dec
pusha
dec
mov
jge
sbb
jae
rcrb
ret
pop
add
mov
divl
add
xor
add
stos
das
sub
add
cmp
mov
adc
rolb
pop
repnz
mov
addb
mov
push
aad
cmp
in
add
add
les
daa
scas
xchg
jmp
cmpsl
pop
int3
es
pop
push
jo
adc
pop
mov
add
repz
mov
testb
lock
xchg
add
in
out
jge
add
aam
xor
out
fdivrs
or
sub
jmp
mov
mov
inc
pop
mov
fmulp
pop
xor
push
add
loopne
loop
sub
adc
call
jge
add
lds
in
loopne
ds
inc
xorb
fsub
mov
fsubl
push
rcl
out
aaa
cmp
js
jg
dec
mov
scas
or
lds
test
lods
pop
test
repz
xor
pop
pop
cmpsb
adc
xor
dec
cmp
dec
loop
sbbb
mov
mov
xor
add
mov
mov
fdivs
out
xchg
mov
inc
add
xor
jb
sahf
jmp
pop
inc
cs
or
mov
inc
cmc
imul
cmp
pop
adc
push
mov
and
les
cmp
and
mov
imul
xchg
repz
cmp
fs
mov
xchg
pusha
shll
cs
xorl
shr
addb
loopne
add
outsl
ss
jmp
or
inc
sbb
gs
inc
push
enter
je
cmp
add
mov
subl
sbb
inc
pop
out
cmp
bound
pop
jmp
jg
adc
push
mov
imulb
adc
and
clc
mov
inc
test
jle
sarb
or
fwait
es
cltd
stc
movsb
repnz
lret
imul
mov
cmp
aas
in
ret
pop
leave
cmp
test
inc
movmskps
xchg
arpl
inc
mov
add
js
aas
addr16
pop
icebp
sub
iret
ds
xchg
sbb
jb
mov
jge
iret
lcall
add
dec
pop
dec
cld
and
inc
mov
mov
sbb
leave
cmp
mov
and
inc
add
hlt
inc
test
pusha
imul
or
scas
jmp
pop
and
test
popf
inc
ljmp
xchg
or
push
cmc
pop
mov
loopne
pop
xor
xchg
sarb
sbb
scas
or
cmpsl
rcrb
cmp
mov
stos
push
add
push
xor
add
stc
imul
lock
add
cli
rolb
or
add
bound
sbb
out
add
cmp
inc
fcompl
xchg
add
mov
or
jbe
xchg
push
inc
scas
mov
add
and
jg
cs
nop
sar
notb
in
in
push
mov
out
andl
add
shlb
adc
lods
outsb
hlt
jp
call
cmp
aam
mov
repnz
inc
pop
cli
adc
inc
aad
cmp
or
cld
pop
mov
inc
lods
jecxz
jle
std
or
cmpsl
fcompl
lds
mov
insl
push
jne
xor
mov
ret
jmp
push
cmc
lret
call
aaa
repz
je
sbb
sub
outsb
cltd
mov
into
test
mov
add
push
andl
sbb
cmp
add
mov
xchg
cmpb
xor
add
cmp
add
mov
push
dec
es
je
cwtl
or
leave
jnp
dec
mov
and
and
lret
ljmp
inc
push
idivb
xchg
inc
add
fprem
fadds
int3
push
and
and
mov
add
rcr
hlt
jg
sbb
fdivrl
dec
add
into
fisubrl
and
dec
shr
push
xchg
mov
pavgb
pusha
int
js
add
mov
jecxz
das
inc
lock
ret
stos
enter
jne
push
add
jnp
shr
inc
push
mov
sbb
nop
in
lret
add
outsb
adc
adc
add
lods
pop
loop
js
loope
out
cmp
std
repz
test
cmp
rclb
ret
push
pushl
cs
scas
lods
add
sub
js
cmp
pop
dec
movsb
xchg
mov
lock
mov
insb
nop
test
push
stc
fwait
jle
call
movsb
sub
jb
adc
imul
adc
out
jg
jmp
pop
enter
cmp
fsts
shrb
addr16
ret
idiv
mov
shlb
xchg
dec
add
stos
sbb
jl
add
leave
cmp
jb
loopne
mov
pop
cwtl
cld
shrl
add
push
dec
xchg
cmp
das
ds
sbb
jne
lret
add
dec
xor
int
jo
scas
mov
pop
pop
pop
or
cmp
test
leave
inc
sub
jmp
iret
insl
pop
cld
popa
mov
adc
sbb
imul
mov
and
mov
xor
pop
sbb
lock
xor
or
push
dec
jge
sbb
and
jl
mov
sti
add
out
and
xor
and
cwtl
rcrl
jmp
test
mov
adc
add
pusha
arpl
test
add
loopne
add
orl
and
xchg
jo
pushf
jne
pusha
mov
outsb
pop
fs
add
jecxz
jle
lret
push
and
ljmp
movsl
call
push
fnstsw
mov
mov
out
add
ret
test
or
or
add
add
push
push
sbb
movsb
mov
lret
in
push
dec
loop
out
mov
add
add
mov
in
push
icebp
adc
test
cmp
enter
stos
push
add
aad
push
shll
or
addb
loopne
xchg
notb
jg
mov
push
aad
mov
mov
add
mov
add
in
xchg
test
sbb
jno
jo
aad
cmpsl
test
xchg
sub
cmp
xchg
fdivrs
pushf
pop
and
faddp
in
add
jae
mov
cmp
xchg
into
dec
fstpt
sub
aas
adcb
je
push
jne
paddsb
or
cwtl
enter
sub
cmp
add
pop
push
fmuls
mov
adc
test
clts
dec
mov
cmpb
out
incl
push
hlt
dec
aad
jno
inc
adc
mov
mov
insl
cmp
hlt
adc
push
negb
push
pop
mov
xchg
cltd
scas
mov
push
or
ret
js
dec
xlat
enter
add
inc
sbb
jae
aas
inc
arpl
push
push
addr16
hlt
faddp
imul
repnz
shrl
jecxz,pt
add
add
out
lret
add
sub
sbb
mov
and
gs
push
pop
cmp
stc
fcoms
mov
es
testl
mov
in
rolb
sbb
pop
add
jg
and
mov
ljmp
mov
add
hlt
enter
mov
pop
ret
lock
add
paddsb
or
push
mov
imulb
repnz
rcll
xor
mov
xchg
iret
pop
mov
jae
xor
add
inc
adc
fistps
faddl
cld
loopne
and
add
pop
adc
add
mov
sbb
ds
cwtl
adc
dec
xor
sub
and
in
xor
add
add
cwtl
push
add
jmp
int3
enter
push
shlb
xor
sub
add
add
push
xor
sub
jb
fldl
rorb
pop
push
je
add
lock
in
ret
inc
pop
xor
push
jns
ret
ja
xchg
lret
dec
and
pop
pop
push
test
in
mov
cltd
cmp
ljmp
cwtl
dec
and
cmpsb
das
enter
add
mov
lret
inc
push
mov
cmp
pop
add
aad
mov
jge
adc
test
push
sbb
cmp
add
stc
xchg
mov
je
pop
cmpsl
dec
test
ja
jo
adc
sub
xor
sbb
add
push
adc
ljmp
fcmovb
jae
cmp
loopne
fidivrs
divb
xor
addb
inc
cmc
sbb
lea
add
and
movsl
fidivrs
testb
or
popf
pop
fisttpll
loopne
lock
cmp
and
xor
jb
fsubrs
add
iret
jl
add
lcall
rolb
and
push
inc
push
pop
imul
adc
jns
xchg
loop
jno
sbb
pop
das
mov
and
pop
sub
inc
mov
add
lret
jle
js
add
or
and
add
pop
xor
mov
mov
lret
mov
ja
pop
cmp
pop
fwait
mov
test
push
andb
flds
lock
movsb
inc
xor
jno
inc
rcrl
shrb
icebp
cmp
sbb
daa
jae
mov
jle
add
repnz
negb
pop
or
cwtl
add
jle
add
adc
imul
cld
pop
push
add
mov
clc
jge
add
xchg
or
rcrb
clc
rolb
popf
cli
fwait
mov
rclb
test
cmp
hlt
and
or
jae
lret
out
sbb
test
gs
inc
arpl
outsb
adc
jp
loop,pt
mov
sbb
lahf
jmp
add
push
cmpsb
jl
inc
lret
xor
in
out
rcrl
push
jbe
xlat
and
adc
fsubrl
addr16
rorb
sub
pop
or
jle
in
aad
ljmp
test
andb
aaa
mov
adc
sub
int3
mov
in
pop
mov
loopne
cmp
add
cmp
daa
jmp
pop
dec
scas
jmp
fimuls
lret
les
jg
out
xor
into
add
aaa
mov
enter
sbb
xchg
add
push
sahf
pushf
lds
pop
sbb
add
mov
mov
mov
xchg
insb
add
test
mov
imul
sbb
push
lret
mov
cmc
insl
xchg
inc
and
xchg
es
jno
js
dec
and
sub
test
pop
pop
sbbb
in
les
mov
subb
nop
int3
add
push
shl
js
enter
add
add
add
arpl
and
or
nop
sahf
mov
in
mov
inc
aas
push
dec
sbb
inc
dec
sub
pop
xchg
add
dec
outsb
dec
xlat
iret
lds
xchg
subb
mov
movsb
add
dec
dec
jo
lds
dec
xchg
test
out
add
or
loop
and
lock
rolb
out
lods
das
adc
add
cmpsb
mov
loope
nop
inc
push
cmp
mov
fdivrl
jge
fmuls
pop
inc
sbb
cmc
mov
pop
mov
sti
push
push
pop
jno
rcrb
cmp
dec
outsl
xchg
cmp
test
cmp
inc
add
imul
xor
mov
loope
ljmp
pop
add
jno
out
je
hlt
and
movsl
cmpsb
adc
cs
inc
in
or
sbb
fldcw
jae
ljmp
dec
push
fcomip
add
aad
je
out
or
jle
push
fs
repz
movsl
cmp
mov
jp
dec
frstor
mov
cs
push
mov
mov
cmp
mov
push
shrl
or
add
in
test
aas
je
lock
xchg
mov
andb
movsb
and
shrb
in
rclb
cli
lret
or
call
mov
pop
push
ljmp
sub
imul
aas
ret
add
bound
or
fists
pusha
inc
repz
shl
jo
dec
in
mov
jmp
add
mov
xchg
pop
fstps
jge
adc
cs
sbb
ljmp
lods
add
sbb
cmp
xchg
bound
cli
cmp
psubd
cmc
inc
and
push
pop
cmp
repnz
loopne
and
mov
add
out
cmpb
std
and
sub
in
adc
push
push
lock
fiadds
xchg
js
add
lods
sub
xchg
cmpsl
int3
xchg
enter
add
push
mov
add
and
dec
aas
lock
xchg
add
sbb
pop
xchg
add
add
push
adc
movsb
sbb
fists
jne
inc
jg
add
add
cmpsb
fisttpll
enter
test
bound
addb
dec
and
pop
sub
pop
scas
inc
cmp
nop
sbb
mov
xor
js
test
mov
add
jge
out
sarl
xchg
pop
add
jno
cli
inc
les
add
jle
mov
lret
adc
or
pop
mov
cmp
es
out
js
mov
adc
push
add
or
icebp
mov
add
adc
pop
add
sbbb
sbb
push
nop
outsb
xchg
mov
xchg
pop
sub
add
mov
add
jg
test
test
repnz
loopne
mov
decb
outsl
testb
in
les
pop
dec
mov
rcl
imul
add
pop
pusha
mov
xor
mov
je
mov
adc
push
jle
popa
and
pop
pop
sbb
mov
mov
lock
push
add
adc
add
cmpsl
insb
sub
sarb
xchg
aaa
into
mov
pop
lea
jmp
frstor
jb
sbb
icebp
add
test
push
sahf
test
push
ss
push
inc
xchg
in
mov
fadds
mov
jle
icebp
and
lock
and
jge
cmp
fisubs
inc
js
add
outsl
sti
sbb
xor
out
add
clc
lods
test
push
subb
lcall
and
add
in
lods
fsubrp
pop
lcall
rolb
je
mov
lock
add
inc
mov
mov
jl
loopne
mov
jl
inc
lock
xchg
add
adc
pop
scas
mov
xchg
test
add
or
clc
stos
jmp
add
cwtl
out
outsl
js
add
jns
rclb
mov
nop
or
jge
pop
sbbb
out
xor
cmp
and
mov
dec
into
inc
and
arpl
aas
xor
sub
or
push
in
fstpt
add
pop
bound
testb
cwtl
add
int3
fmuls
sbb
add
jg
xchg
add
add
in
fistpll
movsb
or
jle
fisubrl
pop
mov
adc
sub
or
xchg
out
repz
add
sbb
add
cmp
cmc
enter
push
lcall
add
sbb
add
cmp
jbe
outsb
push
add
loope
lock
sub
adc
gs
ret
mov
icebp
sbb
xchg
movl
xchg
ror
imul
pop
add
popf
std
insl
mov
mov
cwtl
ljmp
lods
dec
das
gs
push
add
out
pop
jmp
xchg
push
lret
addl
jge
inc
cwtl
add
and
add
add
aam
and
or
pop
lret
jp
js
les
dec
fs
test
repz
sti
xchg
add
sub
outsl
mov
into
daa
push
aaa
push
fistps
andl
gs
shr
sub
scas
pop
aaa
push
add
stc
shlb
bound
pushf
cmpsb
add
imull
enter
cmp
and
inc
movsl
je
cmp
subb
mov
add
bound
sub
fisubrs
xchg
in
rolb
or
cmc
add
jmp
lds
jge
push
push
lahf
popf
mov
addr16
push
inc
pop
mov
mov
lds
pop
push
addr16
movsb
rolb
in
mov
nop
push
cmp
jl
dec
repnz
pop
lds
scas
mov
ret
mov
movsl
add
icebp
int
push
lcall
or
std
dec
xchg
adcb
movsl
add
aas
pusha
and
xchg
add
sti
addr16
add
cmp
xor
push
push
repz
rcrl
push
insl
popa
fnstenv
add
inc
xchg
es
andb
aad
mov
and
ljmp
mov
or
push
pop
add
sbb
mov
pop
sub
inc
sahf
cmp
and
inc
cs
adc
xor
pop
adc
rorl
xlat
inc
inc
ret
rclb
dec
leave
aas
test
mov
sbb
popf
addl
add
cld
dec
repnz
xor
jne
pop
mov
add
cmp
mov
insl
push
adc
daa
add
dec
xchg
inc
mov
or
add
xlat
dec
cmpsb
mov
ja
or
out
sub
aam
add
js
xor
push
test
xchg
sub
pop
and
aam
inc
push
pop
outsb
add
stc
sarl
mov
sbb
incb
mov
mov
popa
dec
mov
add
bound
push
lods
inc
mov
stos
cmpsl
daa
pop
pop
testl
rolb
ja
xchg
cmp
xchg
movsb
add
std
test
add
lods
mov
dec
cmpsl
cvtps2pd
gs
jp
add
stos
jb
add
jecxz
dec
loope
push
xchg
mov
inc
pop
xlat
push
sbb
in
mov
or
mov
dec
or
pop
inc
push
gs
and
add
lea
add
lods
mov
test
pop
or
add
lahf
lods
mov
sub
push
add
or
in
dec
pusha
inc
cmp
inc
xchg
cmpsl
or
mov
push
pushf
mov
loop
nop
rclb
mov
cmp
roll
insb
outsl
mov
sub
fdivrl
stos
jle
mov
sub
data16
not
stc
mov
cmp
mov
les
cld
cmpsb
call
outsl
popaw
pop
fs
push
aad
out
mov
rcrl
sub
arpl
xchg
add
dec
sub
in
push
sbb
je
popa
cmp
shlb
adc
leave
inc
sbb
pop
hlt
in
push
mov
ds
lret
add
push
push
xlat
mov
outsb
mov
push
lods
mov
mov
in
mov
push
pushf
add
rcl
fimuls
in
inc
add
lret
xor
jo
imul
pop
dec
mov
add
and
dec
mov
es
ljmp
js
push
pop
inc
ss
pop
mov
lret
dec
or
bound
aaa
jecxz
mov
fwait
add
push
clc
jg
icebp
test
dec
and
push
cli
daa
iret
mov
sub
inc
cmp
jecxz
add
movsl
jmp
arpl
adc
inc
push
lds
faddl
mov
add
and
xor
mov
push
ds
add
outsl
dec
mov
push
adc
rcrb
adcb
mov
popa
cmp
les
push
dec
pop
jg
icebp
inc
cld
loope
fsubs
add
xchg
mov
mov
pop
mov
mov
testb
adc
in
dec
xor
jecxz
pop
push
out
pop
xor
add
jmpw
enter
lret
pop
add
test
out
adcb
and
lcall
stos
lds
pop
lret
sbb
push
loop
add
and
push
shrb
xor
xchg
push
xchg
out
jg
mov
xchg
repz
sarl
pop
sub
mov
and
cmp
add
mov
pushf
stos
add
push
adc
scas
inc
mov
rcrl
push
addl
pop
mov
and
jo
ficompl
xorl
xor
aas
andb
inc
loopne
dec
add
dec
mov
jo
jg
jle
pop
les
sub
popl
shlb
and
or
andl
pop
shlb
shrb
aas
roll
aad
cmp
mull
cmp
xlat
push
xchg
nop
clc
add
dec
cmp
xchg
pop
fists
int
jae
subl
or
fistpl
add
cmpsb
lock
pop
adc
fs
test
loopne
add
add
mov
loopne
and
add
ja
and
sbb
adc
add
mov
inc
xor
sub
lock
insb
jbe
or
out
inc
mov
pop
in
movsb
push
inc
dec
xor
xlat
add
xchg
fadds
mov
sbb
xchg
cmp
xor
stos
aas
data16
and
add
jne
pop
and
lret
jmp
or
pop
mov
sbb
pusha
movb
dec
sti
push
mov
outsb
mov
add
inc
scas
add
pusha
dec
add
sub
stos
add
fnstsw
xor
jnp
mov
add
std
or
lahf
rolb
shlb
push
mov
jp
xchg
mov
add
adc
xlat
add
aam
mov
jns
add
repnz
ja
add
enter
mov
sbb
xchg
gs
jmp
add
cmp
adc
pop
adc
int3
dec
xchg
push
and
rolb
clc
shll
testl
inc
or
rcr
jno
push
inc
add
sti
mov
xchg
dec
pop
loop
minps
test
nop
aad
sub
push
cmpb
icebp
push
testb
es
lods
adcb
std
mov
cmpb
adc
cmp
jle
and
pop
mov
cmpsl
sub
add
cmp
stos
das
add
cmp
pop
mov
aad
mov
int3
push
fldl2e
es
popf
add
stc
adc
leave
push
mov
shrl
mov
dec
pop
mov
fdivrl
mov
stos
cmpsl
jl
add
test
rorb
lea
add
push
xor
fisubs
movsb
add
mov
in
cmp
add
dec
into
push
cmp
jne
add
out
cmp
mov
adc
ja
cmp
or
shr
push
add
lods
mov
imul
add
cmp
addr16
loopne
shlb
out
xchg
inc
push
pusha
pop
add
js
dec
add
or
bound
inc
inc
sbb
or
shlb
mov
rolb
jno
mov
sbb
push
mov
popf
clc
call
inc
loope
xchg
adc
add
shlb
mov
or
inc
adc
bound
insb
mov
mov
sub
add
ss
nop
mov
mov
jo
sbb
ja
dec
test
mov
cli
shll
jno
mov
inc
bound
out
sub
mov
popf
pop
add
cmp
cmp
rorl
and
dec
scas
ljmp
out
dec
add
out
jnp
popa
sub
add
sbb
push
repnz
pop
mov
add
lahf
dec
loope
or
test
dec
xchg
les
adc
mov
stos
adc
sbb
mov
sbb
jmp
orl
push
scas
cmc
dec
mov
cmpsl
out
and
jge
and
sbb
and
mov
cmpsl
add
and
inc
jmp
jbe
rclb
mov
xchg
fldl
pusha
scas
xchg
mov
or
adc
mov
outsl
sub
ds
test
mov
mov
cmp
push
lcall
inc
insb
sub
add
arpl
jmp
scas
dec
pop
sbb
psubusw
mov
fs
push
add
mov
sbb
pop
arpl
mov
inc
xor
dec
cwtl
lcall
outsb
ret
popf
punpckldq
ret
enter
inc
add
push
xchg
push
imul
inc
inc
std
shrb
loopne
shll
push
dec
sbbb
pop
scas
rcrb
add
inc
mov
mov
pop
xchg
push
mov
push
add
sbb
adc
and
dec
pop
cmp
test
jmp
out
out
pop
jle
xchg
jb
add
lods
daa
pushf
inc
fdivrl
sbb
cli
scas
inc
lds
mov
mov
adc
ret
shll
lds
aad
rolb
add
aam
bound
mov
add
xchg
sbb
xchg
adc
sbb
adc
mul
add
inc
add
xchg
dec
add
arpl
mov
mov
inc
test
or
jnp
out
xchg
cwtl
sub
fwait
sub
sub
adc
jbe
invd
sub
xchg
cwtl
add
pop
pop
imul
mov
lcall
mov
fldl
lods
rolb
sub
xchg
inc
icebp
dec
adc
cmpb
cwtl
add
lea
add
xor
mov
add
mov
movl
sub
cmp
repz
pop
cltd
inc
add
test
xchg
pop
pop
add
xor
or
scas
sbb
ret
jae
add
mov
and
and
pop
mov
push
int
jo
add
cmpsb
jns
push
dec
push
imul
push
outsb
push
lods
jae
jnp
add
outsl
aas
daa
jp
cmp
cmp
mov
sete
push
add
je
push
dec
adc
add
into
xchg
push
movsl
xchg
fdivrl
add
jne
into
hlt
add
inc
stos
ret
jno
fiaddl
mov
adcl
inc
or
out
out
and
fnstsw
and
mov
stc
push
clc
add
orl
add
jo
pusha
xor
mov
mov
gs
mov
imul
arpl
cmp
je
push
inc
or
fisttpl
xchg
dec
cmp
int
test
mov
mov
dec
xor
movsb
jp
into
jae
add
sub
push
mov
pop
dec
into
lods
fadds
mov
or
sub
adc
mov
pusha
and
or
push
leave
mov
mov
jne
iret
add
icebp
xchg
fcomps
xor
pop
xor
test
cmp
push
cmp
out
xchg
fbstp
sahf
inc
stos
test
cmp
add
lock
jmp
enter
fucom
dec
dec
shll
test
cmp
out
jo
repz
add
push
sbb
xchg
xchg
cmp
jae
int
in
stc
sub
outsb
fmuls
push
sub
jb
adc
test
gs
lods
add
and
add
pusha
loope
divb
add
lret
shl
fldenv
mov
cs
add
out
pop
mov
cmp
add
mov
push
push
pop
in
lret
sbb
add
adc
adc
cwtl
pop
jmp
enter
jle
hlt
cli
sti
xchg
xor
dec
aas
fsubrl
lahf
mov
adc
in
sub
rclb
xor
shl
ss
sub
fsubrs
cmp
ja
sarb
and
pop
das
insb
test
pop
add
push
bound
push
lret
inc
ficoms
das
ja
add
pusha
pushf
jae
and
xor
push
xchg
ss
in
add
sbb
mov
mov
iret
adc
dec
in
sbb
std
mov
or
js
mov
je,pn
adc
pop
loope
add
push
pop
sqrtps
or
test
dec
cli
cmp
sbb
or
clc
into
add
lock
cmpsl
push
push
mov
add
add
jp
insl
mov
push
stos
adc
out
leave
sbb
jb
inc
push
in
sbb
inc
push
aas
or
jne
add
sar
sub
rclb
add
fucomip
hlt
mov
ljmp
std
and
jg
jns
add
jo
aam
mov
fimuls
add
push
bound
ds
add
mov
jns
jmp
inc
les
sar
insl
in
mov
xchg
push
jbe
daa
rolb
dec
mov
dec
mov
shrb
sbb
and
mov
rolb
out
pop
xor
and
je
fiadds
cmp
les
push
inc
in
lret
dec
sbb
mov
xor
inc
mov
push
mov
ds
xchg
mov
js
incl
cld
das
rclb
ss
enter
add
sbb
es
xor
scas
stos
mov
mov
xchg
sbb
inc
add
jl
add
rol
daa
popf
jb
pop
push
ljmp
and
mov
jle
js
cwtl
add
add
std
add
push
mov
sahf
aaa
push
jge
xlat
lock
into
push
add
push
int3
pop
fidivrl
ja
dec
leave
jno
cmc
jl
add
jae
mov
pop
adc
outsb
add
push
pop
ja
in
lock
dec
sbb
mov
mov
push
cmp
mov
adc
aas
out
sti
add
out
dec
add
loopne
add
mov
outsb
nop
fwait
or
xchg
lods
cmp
push
and
cltd
cs
loopne
pusha
rolb
jmp
dec
and
js
mov
xchg
cwtl
inc
inc
cli
mov
outsl
pop
mov
pop
push
fnsave
arpl
call
cmp
mov
and
aam
xchg
les
add
nop
pop
mov
test
pandn
sbb
out
push
cmpsb
add
adc
pop
clc
xchg
incl
out
push
bnd
xor
lcall
add
jb
test
decb
mov
test
mov
std
fstpt
shll
add
dec
gs
mov
mov
lret
add
or
cmp
fmull
nop
pop
movb
lods
inc
or
sbb
fldl
cwtl
mov
lds
xorl
mov
and
orb
lock
in
mov
jecxz
pushf
mov
in
popf
push
pop
pop
and
push
cltd
arpl
cld
lret
mov
sub
pop
push
add
push
aaa
jns
iret
gs
lret
xor
jo
xor
pusha
enter
cmp
sbb
sbb
enter
fsubs
mull
inc
in
add
jecxz
out
xchg
mov
or
out
mov
sbb
std
jle
rorl
lods
add
enter
mov
add
or
sub
out
add
xchg
inc
hlt
in
in
pop
add
jbe
push
sub
add
jge
add
adc
adc
xorl
sbb
iret
pop
pop
fsts
in
fmul
add
or
push
movsb
inc
push
xchg
aad
add
roll
pop
dec
jno
pusha
data16
cmp
les
test
add
sbb
cmpsb
sbb
int3
push
outsl
shll
adc
sub
sbb
in
pop
repnz
sub
push
mov
add
jmp
cld
add
and
nop
xchg
xor
xchg
and
addb
fxtract
imul
leave
bndldx
rclb
cmp
add
mov
push
mov
int
lock
jl
out
pop
shl
mov
jmp
dec
inc
dec
fsubl
gs
stc
cli
mov
xchg
in
adc
xchg
int3
lods
mov
add
mov
loopne
fstpt
push
lods
xor
les
xchg
pop
jle,pn
add
call
mov
out
cltd
dec
dec
mov
jle
lods
sbb
adc
hlt
push
call
mov
orl
cmp
int
sub
add
lock
sub
and
nop
mov
in
rcrb
adc
lods
pop
inc
outsb
xchg
lods
fiadds
or
mov
xor
add
xchg
lods
add
inc
inc
mov
pop
cmp
adc
and
lods
shll
mov
lea
sarb
out
push
add
mov
and
leave
add
cmp
outsl
xchg
or
jnp
sub
xor
cs
movsb
or
out
inc
fdiv
stc
add
shll
fiadds
add
clc
or
sub
lds
insb
add
cmp
dec
pop
xchg
gs
pop
jo
insl
imul
ficomps
inc
scas
mov
adc
or
shlb
mov
es
sub
dec
enter
xor
bound
lret
aam
addr16
shl
add
lret
lahf
mov
leave
mov
sbb
pop
or
sbb
fmuls
add
fs
xor
cltd
mul
add
push
cmp
mov
les
cltd
loope
popf
add
mov
cmp
adc
add
in
lods
mov
push
sbb
inc
sub
sarb
cmp
je
mov
arpl
mov
xchg
loope
adc
push
add
mov
jl
sarb
std
jp
mov
dec
lods
adc
loop
xor
add
movsl
add
pop
fmuls
pop
push
push
add
scas
xchg
add
and
movsl
nop
sahf
enter
dec
loop
stos
or
or
mov
xor
gs
popa
pop
outsl
int3
dec
mov
rcrl
pop
sub
and
xchg
ret
jp
push
out
repz
fnstsw
mov
or
scas
pop
fidivl
imul
fistps
push
mov
pavgw
cmp
lds
lea
pop
insl
xor
xor
push
pop
adc
addl
lods
add
rcl
mov
pop
and
loopne
dec
into
add
repnz
add
repz
or
and
inc
cmp
test
gs
jae
clc
and
or
sarl
sbbb
bound
call
movd
nop
mov
jmp
sahf
add
shrl
cli
ja
adc
lds
xchg
pop
stc
add
xor
push
fdivs
aad
push
push
cmp
cmpsl
dec
sbb
push
push
dec
aad
in
sbb
loopne
ror
jo
aas
gs
xchg
out
and
adcb
dec
push
cld
push
mov
lock
lret
push
shrb
xor
xchg
sbb
add
push
xor
lds
jbe
sbb
dec
lret
scas
cmp
push
fcoml
lcall
jle
sbb
and
sub
cmp
popf
imul
xor
and
mov
movsb
shl
sbb
add
mov
outsl
je
mov
rcrb
mov
fadds
xor
sub
rcrl
pop
add
es
les
out
clc
mov
mov
add
sub
push
pop
dec
lahf
pop
movsb
addl
pop
and
sub
inc
mov
add
mulb
sbb
add
mov
popf
int3
ljmp
inc
pushl
iret
fldenv
add
pop
push
add
xchg
cmpsb
inc
sbb
out
dec
pop
cmp
sbbb
mov
mov
jmp
jne
or
pop
or
xchg
test
je
lcall
cs
push
or
mov
add
mov
pop
push
out
fadds
call
xchg
imul
subb
rcll
add
pop
mov
fwait
sbb
xor
push
push
out
cld
sbb
push
jb
adc
inc
loopne
add
addl
cmp
fisubs
add
movsb
pushl
xchg
aas
push
lcall
add
cmp
int3
add
out
iret
js
das
dec
movsl
repnz
mov
negb
push
inc
adc
sbb
xchg
inc
in
mov
add
mov
insl
arpl
repnz
cmp
jge
cmp
dec
jp
inc
outsb
rclb
dec
icebp
sub
xor
add
xchg
or
fnstsw
repnz
outsl
fsts
push
mov
push
adc
stos
jo
push
enter
testb
cli
add
and
in
icebp
or
mov
in
xor
dec
mov
or
add
data16
dec
push
pop
insb
cmp
pop
dec
sbb
sbb
push
fiaddl
lods
adc
fstpl
cmpl
pop
int
and
mov
fwait
sti
jp
add
mov
mov
pushf
add
stos
inc
icebp
iret
lds
mov
in
mov
mov
cmp
flds
call
movsl
out
sub
jp
xchg
push
jno
mov
or
cmp
jb
sbb
loopne
push
sub
add
add
sub
lcall
enter
mov
mov
and
out
rcr
mov
xchg
loopne
mov
mov
xchg
or
inc
jle
incb
xorb
test
fwait
mov
add
xor
add
nop
or
pop
jecxz
test
push
outsb
add
mov
pop
cmpsl
adc
mov
adc
scas
add
push
sbb
add
dec
mov
mov
lock
popa
rcrb
orb
pusha
xchg
negb
stc
stos
inc
jns
add
adc
sub
and
loopne
pop
out
xlat
add
or
add
adc
xor
dec
pop
dec
adc
dec
cltd
add
push
pop
mov
mov
cmp
mov
add
pop
popa
ret
hlt
xchg
push
add
xor
lock
add
push
lea
or
clc
jne
cwtl
add
mov
loopne
int3
add
sub
subb
pusha
rolb
dec
mov
mov
xor
leave
inc
add
jl
add
cmp
push
or
aad
aam
pop
push
xor
inc
out
xchg
add
mov
push
cmpsl
outsl
adc
sarl
xor
mov
out
jo
and
leave
xorb
rcrl
add
jp
jne
jmp
into
addb
xchg
jmp
add
or
aaa
mov
jmp
add
mov
xchg
arpl
std
ss
int
add
add
mov
mov
test
add
call
enter
and
cmp
lock
clc
je
add
loope
inc
cltd
pop
daa
pusha
push
aam
or
or
lods
pop
shlb
jne
pusha
mov
push
addr16
outsl
aas
into
in
sub
push
jne
jp
add
or
push
je
adc
out
cs
mov
and
pop
fadds
repnz
loop
sub
cmp
or
push
inc
inc
dec
push
out
add
dec
cltd
dec
inc
scas
ds
add
out
fsubrs
movswl
mul
js
dec
cmp
add
inc
mov
lock
sub
mov
int3
mov
pushf
rolb
lock
sti
jg
mov
ss
cmpb
xor
adc
sub
sbb
movsb
jns
popl
loope
leave
nop
cmpsl
mov
add
lock
add
pushf
daa
mov
jp
outsb
mov
pusha
in
xchg
dec
add
xor
stc
add
in
xor
adc
cmp
fldl
push
xchg
fsubl
int3
inc
fs
add
std
or
or
sahf
repz
je
ret
adcb
xchg
mov
shl
add
popf
mov
add
push
aaa
sub
rclb
cmp
pop
pop
ja
push
adc
inc
pusha
cmp
out
lock
movsb
mov
ja
pop
xor
and
lret
add
nop
fimuls
mov
add
or
in
out
jns
add
pushf
aas
mov
roll
adc
add
push
loope
mov
arpl
sub
test
mov
cwtl
das
ds
pop
add
es
mov
sbb
ret
xchg
dec
lret
mov
addb
hlt
cli
data16
es
cmp
adc
fiaddl
pop
or
and
pop
jnp
icebp
xor
mov
xlat
xchg
add
jmp
stos
push
add
xchg
mov
pop
mov
int3
or
jecxz
mov
in
sbb
loopne
cwtl
mov
add
dec
or
cld
xor
mov
and
or
pop
add
inc
test
pop
das
aas
add
xor
arpl
jmp
rcrb
xor
js
mov
push
ret
dec
mov
dec
cmp
stos
and
or
fmulp
jb
mov
movb
insl
outsl
pop
fs
data16
mov
call
add
inc
cwtl
cmp
pushf
add
mov
lods
mov
add
xchg
xchg
test
ret
lods
loop
xor
movb
lret
insl
lea
mov
add
or
testb
adc
lret
nop
jb
add
push
add
mov
repnz
loopne
in
aas
mov
mov
cmc
cld
add
add
add
jno
or
scas
out
call
add
fcmovu
mov
add
scas
sahf
orb
pop
sub
xchg
jbe
xchg
lods
or
mov
and
inc
and
lret
enter
add
fwait
imul
jecxz
lods
sbb
push
out
add
lea
push
fstpl
into
xchg
loope
cmp
mov
loop
sub
cld
add
adc
jb
mov
shrb
push
js
add
cmp
pop
push
mov
sbb
cmp
fldenv
es
mov
cmpsb
sub
cmp
inc
out
add
ljmp
cli
push
jae
scas
dec
pop
mov
loopne
aad
sub
xor
roll
subl
into
pop
test
out
add
out
jno
jne
mov
and
mov
mov
or
je
pop
add
cs
add
adc
lea
in
add
xor
xchg
ss
scas
jge
nop
repz
push
rol
cltd
cmp
mov
clc
test
jp
test
loope
sub
or
pop
addb
stos
mov
pop
sub
cmp
inc
adc
insb
shlb
push
mov
pop
sbb
and
inc
sub
test
or
add
dec
xorl
pop
fucomi
mov
mov
sahf
add
rclb
add
lea
mov
or
in
pusha
outsl
cld
fidivrl
sub
xor
addr16
in
dec
push
push
out
pop
nop
or
cmp
in
movlps
fmull
adc
inc
add
scas
add
aad
inc
or
jns
mov
rol
inc
mov
mov
add
in
js
jp
xor
jmp
idivb
mov
sub
pop
push
push
push
mov
mov
dec
jmp
rorb
add
cli
std
scas
push
repnz
xor
in
mov
mov
shl
int3
xchg
cli
and
mov
out
and
movsb
in
pop
shlb
push
jbe
imul
xor
add
add
test
roll
test
xchg
mov
add
fisubl
stos
and
lds
leave
jecxz
add
in
movsb
sub
sbb
insb
jl
dec
test
jae
sub
out
loopne
in
ss
add
xchg
adc
in
add
pop
xor
or
ja
aaa
in
cwtl
idivb
pop
gs
jne
xor
cmc
push
and
cmpsb
add
lahf
bound
inc
fdecstp
add
insb
call
pop
int
add
mov
add
mov
popl
bound
mov
insb
inc
setb
push
and
fisubl
call
sarb
sti
into
ret
mov
mov
cs
gs
clc
mov
add
aaa
sbb
add
inc
gs
push
push
and
mov
mov
xor
mov
out
cltd
xor
adcb
and
fadds
sbb
jmp
lea
push
xor
and
jns
xor
adc
sub
and
ret
or
xor
or
jns
xchg
cmp
add
mov
repnz
scas
push
add
addb
out
add
fbstp
add
sub
leave
add
mov
rol
sub
mov
and
std
mov
aam
pop
aaa
inc
lods
stos
sbb
pusha
add
jge
mov
push
jo
es
jns
and
push
les
sub
cmp
push
add
pop
push
cmp
pop
add
mov
dec
sti
xor
inc
lock
xor
jg
mov
push
mov
add
bound
rol
andb
sbb
add
dec
pop
rol
adc
shlb
pop
inc
fiaddl
sbb
mov
cld
xchg
or
add
fistpl
cli
xor
dec
push
add
fadd
popa
pusha
cld
lock
shrl
mov
test
loop
adc
xchg
ret
add
call
xchg
mov
inc
adc
and
jp
les
push
add
pop
sbb
sbb
fsubs
std
enter
pop
mov
jl
jns
lds
xchg
add
fadds
mov
les
flds
lds
xor
adc
xchg
add
mulb
cmpsl
push
adc
daa
push
pop
repz
add
mov
rcrl
push
xchg
incl
mov
mov
inc
shl
sbb
push
push
pushf
shrl
shr
test
outsl
bound
mov
test
pop
mov
or
add
pop
icebp
lret
adc
mull
movsl
mov
sbb
sti
and
and
jbe
mov
sbb
adc
adc
push
inc
sbb
scas
adc
adc
and
push
xor
nop
dec
xchg
pop
push
inc
adcl
or
aad
insl
test
lcall
add
mov
and
repz
jne
rclb
stos
in
or
mov
subl
xor
push
pop
repnz
add
push
add
outsb
xchg
daa
add
push
add
add
push
xor
jecxz
in
ffreep
cwtl
pop
add
lods
mov
push
jb
mov
repz
add
out
orb
sbb
cs
jg
add
cmp
add
lahf
popa
inc
sub
fwait
add
in
outsb
mov
int
xor
jmp
or
add
stos
aam
inc
adc
xchg
popa
mov
pusha
add
xor
add
jl
add
jp
movl
data16
aas
fstl
pop
rcrl
lea
rorb
dec
pushf
xchg
loopne
add
or
cwtl
imul
hlt
dec
fadds
sub
xchg
stc
sbb
add
xor
mov
mov
cli
xor
inc
inc
les
fidivrs
gs
insb
movb
out
add
pop
jge
pop
pop
sub
sub
and
ja
lcall
lret
es
jns
add
clc
add
push
test
add
jge
ds
mov
add
cmpsl
adc
in
ret
loope
aad
out
jbe
enter
inc
shll
mov
or
cld
mov
add
and
js
bound
cltd
jl
add
xor
mov
push
lcall
repz
ret
loope
jns
and
out
mov
insl
outsl
dec
push
jo
movsb
out
add
jae
mov
pushf
insl
mov
cmpsl
je
push
sti
mov
and
adc
sahf
out
movsl
mov
add
adc
xor
mov
push
sbb
add
pop
jno
cmp
cli
xor
cs
add
out
out
sarl
add
adc
mov
lret
or
mov
add
data16
addb
call
add
test
push
ret
lea
pop
push
sub
in
jo
mov
xchg
cld
inc
daa
add
pop
add
xchg
inc
mov
add
xchg
xorb
imul
fucom
xor
pop
sub
dec
jp
popf
gs
insl
dec
dec
adc
or
cmp
cmp
cmpsl
and
movsb
fdivs
lods
scas
or
sbb
into
cmp
add
xchg
mov
fwait
add
daa
outsl
mov
add
in
test
jno
call
lea
icebp
xor
and
mov
mov
clc
shlb
push
leave
cmp
xchg
rclb
fdivl
adc
addr16
stos
pop
add
dec
push
out
add
cmpsl
outsb
roll
and
imul
lfs
sbb
mov
adc
jle
add
adc
sbb
mov
rolb
push
add
repz
push
and
pop
dec
and
inc
loopne
cmp
adc
pop
adc
call
xor
sub
push
popf
xchg
cmp
xchg
sub
scas
into
jbe
mov
aad
pop
test
jecxz
in
push
push
mov
adc
push
and
add
lahf
xchg
mov
mov
xchg
inc
andb
sbb
jecxz
or
sub
pop
in
add
aam
xor
fsub
filds
js
stos
fld1
push
maskmovq
xor
add
loopne
mov
sbb
lcall
push
push
shlb
dec
jl
pop
push
nop
call
pop
lock
inc
add
cmpsb
add
call
ficoml
push
mov
push
in
je
push
mov
mov
in
cli
add
cmp
scas
push
cld
pop
cmp
in
xchg
jns
test
xorb
lock
and
add
cli
add
jno
mov
jecxz
std
out
lds
insb
loop
aas
and
adc
add
mov
adc
add
vmread
scas
test
add
pop
movaps
mov
xchg
or
and
push
push
jmp
lret
ja
daa
xor
les
jp
add
xor
xchg
test
sbb
sti
add
movsb
clc
out
dec
jp
repnz
inc
add
xor
mov
xchg
add
insb
pop
xchg
in
inc
fcmovbe
add
jns
and
loopne
clc
or
insb
testl
leave
pusha
pop
dec
sbb
pop
add
adc
std
aaa
xor
divb
mov
mov
sub
inc
dec
add
jmp
jb
push
or
js
mov
push
pop
fldcw
pusha
mov
jl
out
rorb
add
aaa
aam
nop
data16
ds
movsl
add
push
cmp
popa
test
pop
js
pop
add
adc
test
and
adc
and
push
lea
rcrb
add
add
int
or
movsl
imul
aam
mov
jo
sbb
icebp
cmp
sbb
cmpsl
dec
ret
test
mov
clc
adc
and
mov
push
repnz
jle
mov
addb
mov
or
loope
out
popa
or
jmp
xchg
cmp
mov
lret
add
jg
sub
outsb
mov
push
jno
jp
jg
filds
cmpsb
neg
loop,pn
or
mov
test
scas
loopne
mov
xorb
pop
pop
test
into
mov
push
add
inc
add
mov
call
jge
lods
shlb
add
push
add
add
pop
xor
xchg
inc
notl
mov
movsl
ss
pop
in
out
sarl
push
xchg
mov
pusha
adc
xor
add
rcr
xchg
mov
jno
mov
ja
lahf
dec
mov
js
mov
arpl
sbb
cmp
clc
sub
mov
add
stc
cmpl
dec
add
out
les
fs
push
incb
push
ljmp
cmp
inc
add
scas
mov
and
mov
hlt
rorb
jo
xchg
iret
add
xor
dec
xor
add
cmp
lds
lods
sbb
xor
cmpsb
adc
dec
bound
and
popa
jl
int3
and
push
inc
add
test
push
lahf
push
shll
push
add
cmp
push
sbb
pop
mov
jl
aas
fcoms
addb
test
adc
xchg
fadd
dec
and
sub
sti
and
mov
or
clc
add
shrl
nop
sahf
add
add
inc
xchg
inc
add
out
movsb
add
inc
push
inc
arpl
shll
inc
sbb
cmp
shll
add
stc
dec
cld
and
sbb
dec
pop
test
pushf
shrd
mov
dec
js
add
adc
mov
add
loope
jle
xor
lcall
adc
mov
ss
add
mov
add
rorl
mov
pop
add
loopne
pop
mov
mov
pop
add
test
icebp
lahf
int3
add
aad
pop
mov
out
jae
lods
jge
inc
imul
push
mov
dec
addl
xchg
inc
add
cmp
mov
fistpl
bsf
mov
add
into
pop
stos
repnz
test
sub
pop
sub
mov
and
jecxz
push
imul
cmc
add
mov
jg
and
xor
jmp
pop
in
xchg
adc
cmp
add
call
lods
push
cmp
cmp
mov
jp
jb
hlt
add
imul
loope
ss
call
in
mov
xor
push
cwtl
pusha
adc
dec
dec
add
mov
add
leave
lods
sub
inc
pop
xchg
jp
ret
lea
and
inc
cld
data16
xchg
leave
mov
pop
das
add
sub
xor
mov
incb
scas
out
repz
sbb
jo
or
arpl
mov
jp
repnz
add
shl
mov
into
cs
jmp
sbb
pop
ja
cs
cli
cmp
mov
addr16
call
popf
stc
or
and
mov
sbb
icebp
pop
xchg
arpl
adc
outsl
cmp
imul
dec
leave
add
pop
rolb
out
out
pop
cld
add
lret
nop
out
shrb
jle
add
js
pop
add
inc
iret
xchg
nop
adc
pushf
in
add
hlt
push
ret
in
adc
dec
faddl
loop
je
leave
mov
sbb
ljmp
popa
pusha
les
sub
out
and
add
push
clc
ds
lcall
fistpl
arpl
dec
sbb
roll
pop
add
addr16
rcrb
lock
imul
jge
xchg
test
and
pusha
and
mov
mov
out
fiaddl
xlat
pop
dec
xchg
jbe
push
mov
shlb
mov
lahf
pop
bound
adc
movsb
push
call
add
cmp
faddl
in
out
mov
or
xchg
xchg
inc
adc
popf
sbb
add
scas
mov
jb
in
xchg
fcoms
add
lret
mov
push
dec
je
xor
and
clc
mov
xor
repz
clc
movsb
add
pop
xchg
mov
sub
nop
and
fwait
add
and
add
daa
adc
or
add
xchg
jbe
loope
mov
les
rolb
fmul
jno
adc
add
xor
int3
scas
jns
add
stos
add
loopne
add
into
add
cmpsl
je
cwtl
lret
int3
adc
push
ss
adc
mov
hlt
xchg
popl
jae
or
fmuls
rorb
xor
subb
out
pop
ret
clc
leave
mov
push
dec
cmp
add
and
adc
lcall
sub
dec
in
sub
jecxz
scas
das
out
mov
out
jle
xor
lods
jnp
mov
mov
clc
daa
fwait
out
icebp
mov
insl
cld
add
leave
mov
xchg
pop
pop
mov
lret
dec
cwtl
test
fnsave
cmc
fldcw
xchg
add
outsb
inc
pushl
push
add
iret
sub
cmp
add
es
cs
jbe
push
add
imul
add
mov
and
das
cmp
cld
scas
loopne
add
ds
ret
pop
leave
add
sub
out
add
add
loope
mov
jns
aad
leave
jecxz
mov
psubq
jae
inc
cmpsl
scas
dec
mov
out
lock
lods
stos
pop
sbb
jae
cmp
test
pop
shr
xor
jne
subb
jae
aas
movsl
je
jae
mov
sbb
stc
add
mov
push
into
and
and
mov
jle
jbe
sbb
push
in
fldl
repnz
test
fists
imul
movsb
imul
ret
in
add
push
sbb
pmaxsw
xchg
add
xchg
xchg
mov
cs
lods
mov
and
icebp
testb
negb
mov
jmp
nop
dec
or
cwtl
mov
dec
frstor
movsb
add
xor
popf
add
or
sub
js
ja
mov
hlt
vcvttsd2si
cmp
mov
nop
stos
ret
cli
fwait
inc
dec
jo
loopne
mov
dec
out
push
pop
and
cmp
test
mov
or
and
cwtl
mov
xchg
sbb
insl
dec
xor
xchg
into
sbb
fldt
mov
mov
push
ret
pusha
pop
rcrb
add
movsl
cmpsl
pushf
dec
sbb
push
sbb
mov
fnstcw
iret
bound
sub
xchg
aad
sbb
inc
fxch
cmpsb
adcb
mov
idiv
cwtl
add
or
out
cwtl
jae
test
stc
push
inc
jns
sbb
xchg
scas
inc
ja
or
insb
add
sub
xor
mov
dec
es
lock
dec
aaa
je
mov
orb
rcll
movsl
insl
mov
sub
add
inc
js
sbb
bound
dec
sub
hlt
fidivl
add
pop
cs
mov
out
js
dec
xor
dec
mov
dec
add
imul
push
sbbb
cmpsb
or
inc
in
and
adc
mov
inc
or
jmp
int3
cmpsl
cld
frstor
pusha
mov
add
mov
loopne
mov
sbb
and
or
mov
pshufw
pop
testl
and
outsb
lea
bound
pop
dec
jne
add
pop
fwait
cwtl
sub
cmp
stc
mov
in
xor
mov
cmp
add
mov
sbb
jnp
adcb
xor
dec
add
push
int3
add
lds
stc
lock
add
xchg
or
mov
repz
xlat
jae
jge
add
out
add
adcl
ficoms
je
cwtl
pop
push
lcall
push
scas
psubb
and
push
or
pop
cmp
imul
mov
dec
bswap
inc
mov
shl
add
ret
mov
push
cmp
xchg
subb
mov
test
sbb
shlb
xchg
push
and
fwait
add
cmp
and
jmp
out
rcrb
dec
push
sbb
xor
cmp
idivb
testl
add
dec
add
push
out
mov
sub
inc
sbbl
add
out
or
data16
ja
adc
lret
and
gs
jge
or
arpl
sbbb
cmp
out
pop
lret
sbb
scas
xchg
pop
icebp
int
inc
notl
add
sub
pushf
pop
out
push
icebp
test
notl
lcall
inc
ret
loope
add
jge
fsubs
push
in
add
cmp
sub
add
mov
mov
add
cmp
repnz
clc
mov
mov
leave
mov
mov
rcrb
jmp
sbb
sub
in
cmp
mov
out
add
cltd
jmp
mov
arpl
insl
cmp
jmp
inc
jae
rcrl
adc
pusha
lock
mov
xchg
pop
into
sahf
int3
lahf
jge
pop
push
cmp
inc
dec
mov
ret
jp
mov
arpl
cld
pusha
mov
fnstenv
push
jae
and
and
ret
adc
rcrb
jecxz
or
inc
repz
icebp
in
pop
insb
jmp
stc
test
and
pop
adc
mov
dec
outsl
shl
test
sub
insb
jno
xor
jle
and
pushf
nop
and
and
mov
mov
mov
subl
imul
stos
push
nop
mov
leave
inc
xchg
jbe
rolb
scas
out
mov
fwait
imul
push
mov
add
sub
cltd
ss
mulb
add
repz
push
mov
add
xor
dec
outsl
fldl
gs
dec
and
add
push
or
add
xor
or
fcomi
rclb
pop
inc
scas
sbbb
push
cmp
adc
jo
pop
jle
sbb
fisubrs
mov
orb
sbb
pop
mov
jge
subl
das
cwtl
push
jno
add
vmread
rcl
jo
and
mov
add
faddl
jo
dec
iret
jbe
mov
sub
lcall
pop
and
inc
push
bnd
cld
cli
mov
fimull
mov
repnz
sahf
sbb
sub
or
repz
adc
decl
add
inc
xor
loopne
add
cmp
jg
pop
jo
add
mov
outsl
push
push
xchg
fnstcw
shrb
sub
cmpsb
mov
adc
jae
add
jb
enter
jmp
imul
add
pop
push
sbb
mov
into
xor
int
pop
jo
xchg
inc
or
and
movaps
and
das
fldcw
sbb
adc
aad
mov
jbe
jns
jle
cmpsb
dec
nop
add
push
add
push
mov
shlb
hlt
lea
shr
add
pop
out
loopne
adc
xor
mov
test
fsubrs
jae
enter
push
and
add
loopne
adc
sbb
pop
lock
pop
in
xchg
subb
leave
outsl
adc
mov
incb
mov
push
loope
vpcmpgtw
add
daa
nop
adc
dec
or
in
mov
adc
mov
xor
pop
fistps
pop
add
aas
aad
shlb
mov
int3
setl
sbb
sbb
cmp
cmp
aad
stos
out
loop
ds
mov
lods
cwtl
add
add
rolb
ja
out
lock
ficomps
jg
add
push
and
add
add
adc
mov
push
loope
xchg
and
in
lret
add
shll
jge
xchg
mov
push
push
pop
leave
jbe
enter
decl
out
fildl
push
and
jmp
push
adc
add
mov
xchg
cmp
fnstcw
mov
cli
push
imul
mov
adc
push
int
clc
jbe
imul
jne
add
stos
or
clc
cwtl
sti
in
js
dec
add
sbb
fucom
mov
add
fiadds
inc
cmp
cli
adc
xor
pop
dec
rorb
nop
js
push
dec
cld
mov
sub
add
jnp
inc
add
int3
aam
sbbl
pop
jmp
dec
loopne
mov
inc
fld
insb
jnp
loop
add
ret
lret
inc
add
sub
sbb
testl
jle
data16
lcall
dec
add
or
mov
push
adc
adc
xchg
in
packssdw
sarb
fdivl
push
jo
or
call
int3
sub
rcrb
pop
push
pop
mov
add
sahf
bound
loopne
sub
push
sti
mov
lahf
add
cli
repz
xor
mov
adc
lock
add
xchg
out
fsubrs
ret
scas
orb
add
in
add
mov
imul
into
lahf
mov
sub
arpl
add
mov
divl
add
pop
xchg
cwtl
ss
push
movsw
add
lock
lea
in
sbb
mov
pop
sbbl
pop
push
imul
js
popf
test
add
dec
xor
lods
push
call
andnps
dec
pop
add
push
scas
xchg
xor
pop
cmc
addr16
jbe
mov
loope
das
in
cld
cs
dec
jmp
mov
cwtl
add
js
or
imul
jno
out
mov
add
stos
pop
shll
pop
dec
filds
es
mov
xchg
rcrl
push
mov
and
adc
jae
sqrtps
xchg
aam
add
je
int3
sub
jb
roll
add
xchg
test
jg
addb
repz
inc
cmpsl
lret
movsl
clc
out
cli
add
insb
stos
add
imul
test
and
add
aam
and
inc
rolb
jg
dec
icebp
dec
add
xchg
arpl
mov
jg
bound
mov
push
test
adc
push
icebp
add
shll
nop
push
pop
xor
fwait
cmp
popa
or
push
lahf
cld
icebp
pop
ret
in
or
adc
inc
movsl
fists
es
xor
add
adc
jbe
subb
fisttpll
mov
sub
js
add
mov
pushf
mov
stos
add
sbb
inc
ds
and
int3
inc
out
mov
add
xor
rorl
jg
add
adc
xor
test
xor
pop
cmp
sub
repz
mov
es
adc
leave
orl
xchg
ja
sarl
sahf
push
outsb
iret
das
add
jne
mov
jge
adc
mov
incl
dec
xor
sub
add
jmp
or
jle
mov
or
sub
js
rolb
mov
push
rcrl
push
scas
je
pop
adc
mov
add
test
aad
add
rorb
bnd
fwait
orb
shr
dec
add
inc
and
repz
sbb
arpl
inc
sbb
xor
or
shlb
mov
and
cmp
dec
insl
adcb
dec
ja
jecxz
dec
sbb
jns
add
and
push
sub
fldl
fld1
push
mov
add
imul
xor
dec
rcrb
add
sbb
pop
aam
mov
cmpsb
mov
adc
insl
mov
xor
test
push
xchg
fwait
dec
cmpsb
je
cmp
add
mov
cld
add
repz
loop
add
mov
inc
xor
int
add
add
sbb
xor
xor
jle
adc
test
lret
fwait
add
out
aas
xchg
adc
out
pop
sbb
fsubrl
mov
mov
add
cmp
scas
push
pusha
test
sahf
repz
bnd
shr
lock
cmp
out
mov
enter
or
jbe
cmp
pop
add
in
cmp
cmp
add
ljmp
push
pop
rolb
mov
add
cmp
pop
push
sti
int3
popl
push
cmc
mov
pop
and
lods
jecxz
mov
sbb
add
xchg
test
add
ds
sarb
sub
sti
jge
cmp
scas
and
mov
mov
mov
bound
add
mov
inc
gs
shll
int3
pushf
cmp
xchg
mov
loop
and
rorl
push
not
ds
add
adc
mov
jl
mov
mov
loop
punpckldq
ja
das
jmp
outsb
pusha
jno
and
enter
add
jle
jnp
ljmp
in
hlt
and
stc
dec
inc
add
jecxz
and
sarw
jmp
loopne
mov
adc
inc
and
mov
add
lods
xor
add
bound
jmp
rolb
push
or
add
inc
mov
or
ffree
sarb
mov
adc
and
leave
push
mov
inc
sbb
out
shlb
mov
mov
fadd
xchg
xchg
cmpb
testl
clc
inc
test
xchg
add
lcall
add
cmp
add
mov
lret
test
std
sub
and
clc
dec
add
mov
mov
cmp
ljmp
pop
sti
ret
sub
inc
xchg
rsqrtps
add
or
fldenv
jno
push
add
out
rolb
xor
aas
sub
mov
cmp
or
fs
lods
sbb
mov
ljmp
mov
inc
add
in
adc
popa
mov
adc
insl
add
pop
cmc
and
jo
or
clc
lds
sbb
mov
dec
add
or
adc
mov
sub
ja
cmp
rcll
add
mov
pop
stos
adc
sahf
adc
jo
add
outsl
sti
ret
cmp
mov
sbb
cmp
xor
mov
xchg
add
mov
sbb
stos
pop
popa
add
add
pop
ss
or
fsubrs
adc
stc
icebp
adc
mov
rclb
add
insl
jbe
fdivrs
adc
pop
xor
cmc
sub
adc
add
repz
mov
negb
add
flds
out
jp
add
push
sub
adc
and
enter
add
out
xor
movsb
cs
mov
add
add
mov
sub
or
cmp
pop
add
xchg
in
add
and
add
icebp
xor
imul
je
aam
loopne
push
out
pop
add
jge
subl
out
jg
lret
dec
add
mov
sub
push
out
lods
cmc
hlt
pop
cli
lret
jmp
xor
cmp
in
mov
add
adc
arpl
push
outsl
mov
cmp
rcrb
imul
sbb
popa
sbb
add
pushl
inc
mov
cli
inc
pop
mov
fcoms
fwait
or
aas
add
jp
mov
add
repz
iret
or
push
add
sub
mov
pop
dec
std
repz
add
adc
push
pop
rcl
push
xchg
mov
out
iret
mov
subl
push
xlat
mov
out
push
add
out
cmc
or
or
cmp
out
jo
cmp
or
fists
aad
sarl
sub
xchg
push
je
bndldx
sub
and
or
xchg
iret
mov
hlt
jne
inc
push
clc
insl
or
mov
add
pop
loopne
out
mov
add
push
add
aaa
mov
pmaddwd
cmp
mov
adc
fiadds
test
mov
and
stc
orb
call
pop
aas
jnp
cltd
push
dec
add
cmpsl
jge
sahf
sbb
xor
cld
jp
inc
push
subl
enterw
clc
pop
daa
mov
inc
xchg
xor
inc
push
pop
add
cs
and
cli
sbb
sub
mov
jns
xchg
sbb
or
sbb
imulb
pop
nop
mov
sub
mov
mov
mov
adcl
pushf
and
dec
push
push
mov
andb
lods
out
pop
sub
add
cmp
mov
add
and
jb
add
mov
xor
pusha
dec
mov
cwtl
add
ficompl
mov
sbb
sbb
pop
fidivrl
or
or
jmp
dec
xchg
dec
add
xor
mov
adc
pushf
pusha
add
push
test
int
loop
dec
aas
mov
jbe
push
mov
sub
arpl
jno
mov
sbb
add
in
daa
push
dec
and
nop
and
jp
sti
cmp
add
or
mov
and
cmp
mov
xorb
stos
in
inc
outsl
add
fadds
jl
push
push
mov
add
int3
loopne
mov
push
aaa
aas
lods
or
jmp
xorb
ret
cmpsl
pop
push
sbb
jno
lcall
aad
dec
mov
push
in
out
cmp
sbb
ret
movl
stos
add
pop
leave
shlb
or
dec
push
int3
call
sub
jmp
lods
add
subl
add
and
mov
jb
pop
std
adc
lret
fwait
mov
test
push
sub
stos
fbstp
js
push
fnstcw
sub
cmpsl
and
lods
sub
and
sbb
xchg
jge
xor
jae
add
pushf
or
add
xor
psllw
shrl
inc
js
add
rcl
mov
pop
push
add
jb
lret
jo
out
or
inc
scas
insl
test
repnz
shrl
push
mov
dec
cmp
decl
les
sub
add
xchg
dec
and
and
xor
loope
fstl
daa
or
cmc
fadds
jl
aad
pop
ret
sbb
sub
fs
or
mov
dec
add
pop
mov
push
add
popa
xchg
xlat
lods
xor
ret
imul
add
xor
and
jns
je
adcl
mov
inc
testl
faddl
stc
add
xchg
in
or
sub
and
push
scas
mull
ja
mov
mov
cli
sub
pop
leave
cmpb
pop
mov
inc
arpl
sub
and
mov
or
aas
fsts
lret
enter
aam
xchg
mov
pop
ja
and
adc
test
jecxz
fisubrs
pop
loop
add
ljmp
add
cmpsl
inc
fwait
sub
stos
fsubs
mov
mov
add
stc
sahf
shl
sub
jecxz
adc
popa
imul
je
mov
int3
es
in
adc
sub
in
or
dec
js
addb
ret
mov
mov
jp
pop
mov
ret
and
and
in
fldcw
dec
imull
or
sti
pushf
push
loopne
out
fildl
hlt
loop
xor
ret
mov
push
xor
pop
movsb
imul
andb
mov
pusha
or
add
hlt
jecxz
mov
cmc
add
ljmp
mov
jo
dec
aad
dec
pop
out
add
scas
adc
mov
ret
adc
loop
movsb
ljmp
ficoml
sbb
daa
pop
arpl
or
mov
cli
add
fbstp
dec
stos
add
arpl
decb
mov
into
leave
cli
int3
add
adc
gs
ficoms
add
pop
insb
sub
jle
xor
int
mov
dec
or
iret
add
ficoml
add
jp
clc
insl
push
sbbb
movsl
add
ret
add
fsubl
sub
andb
bound
inc
loope
lock
or
push
mov
sti
and
cmc
xor
inc
hlt
push
sub
popa
pop
and
sub
pop
add
loop
ficoms
es
stos
leave
cltd
fadds
add
xchg
mov
sarl
add
sti
or
cld
pop
add
stos
rorl
loop
sets
jp
add
popf
cld
dec
dec
nop
or
xor
xor
enter
repnz
add
fcompl
xchg
inc
jg
fsubrl
scas
add
mov
push
nop
inc
aas
sub
dec
mov
insb
mov
mov
out
jge
push
mov
imulb
add
jne
jmp
and
out
push
imul
fsubrl
in
add
aaa
push
cmp
sub
jge
es
iret
dec
loopne
mov
pop
mov
cmp
sub
jmp
movb
popf
and
inc
add
cwtl
in
pusha
setnp
and
ja
xchg
ja
jle
add
ljmp
pop
ja
pop
xlat
add
shlb
add
push
loope
clc
in
add
mov
xor
adc
add
into
dec
dec
add
pop
test
shlb
hlt
scas
pop
out
rolb
jg
add
lea
lock
test
add
ljmp
int3
inc
mov
add
xor
push
addb
cmc
mov
fs
repz
in
mov
mov
jbe
fbld
cmpsb
jge
sbb
or
inc
pushf
adc
lret
add
jecxz
cmpsb
add
xchg
cld
icebp
mov
mov
insb
jl
lret
aam
cmpsl
xor
in
mov
jle
inc
add
mov
faddl
jnp,pt
sub
ret
jne
mov
and
outsl
sub
mov
add
iret
addl
loop
jmp
pusha
mov
hlt
mov
cld
add
mov
pop
pop
sub
and
jl
out
in
push
xor
mov
sbb
xor
xchg
jo
mov
pop
sbb
add
xchg
lret
xchg
lods
add
jg
test
mov
insl
aaa
cltd
fcomps
sbb
push
sub
mov
rorl
cmp
mov
cmp
insl
mov
xchg
outsb
xchg
mov
pop
add
mov
pop
pop
lcall
add
stc
mov
mov
loopne
jnp
rorb
adc
mov
xorb
cmp
sub
imul
aas
push
sbb
icebp
mov
push
cwtl
mov
jno
cli
movsb
inc
push
loopne
push
add
mov
mov
subl
dec
ret
iret
inc
or
sub
add
nop
int
pop
cmp
mov
sub
xchg
jnp
mov
pop
scas
dec
pusha
in
scas
add
lock
xchg
cmp
sarb
xchg
push
roll
pop
xchg
pushf
cmp
jnp
nop
pop
add
jecxz
inc
outsl
sbb
cmp
xor
xchg
popa
add
inc
sbb
adc
cmp
daa
jae
aam
insb
in
loopne
add
xchg
lods
mov
inc
push
add
test
pop
xchg
add
stos
inc
ret
inc
sbb
xor
xchg
push
mov
mov
push
pop
sub
shrb
fld
inc
cltd
xor
xchg
or
int3
push
mov
loope
jo
test
jns
call
or
lods
jp
push
inc
jge
sbb
or
pushf
push
in
xchg
loopne
dec
jns
mov
jmp
or
mov
in
mov
dec
cld
pop
test
and
push
xor
sbb
mov
test
push
add
add
int3
stc
xchg
inc
pop
pushf
and
cltd
sbb
pop
pop
xchg
mov
addb
add
out
stos
lret
mov
jne
xor
test
outsb
je
cmp
adc
xor
adc
dec
cltd
dec
out
push
xchg
fsub
pop
push
xchg
and
bound
loopne
mov
loopne
out
iret
pop
fucomip
sub
pmulhw
push
test
add
out
mov
pop
lahf
mov
mov
mov
push
aam
adc
inc
jge
setle
loopne
lds
add
insb
shrb
add
dec
sbb
aas
fsin
add
js
mov
fiaddl
adc
outsb
in
dec
mov
cmp
xchg
ret
mov
fs
andb
pop
dec
pop
add
aas
test
inc
repnz
add
jne
push
push
popf
sub
sbb
mov
out
and
add
cmp
aas
mov
popa
aas
pop
dec
add
sub
push
add
jmp
xchg
call
pop
pop
sub
xchg
or
mov
out
shr
or
int
inc
or
daa
cmp
das
insl
push
sbb
out
shlb
cmp
ss
adc
sbb
add
subb
subb
mov
pop
mov
cmp
outsb
or
andb
pop
mov
add
nopl
inc
add
sbb
int3
xchg
sar
dec
add
pusha
pop
pop
push
push
adc
and
or
or
mov
enter
mov
scas
mov
mov
loope
ss
or
jg
movsb
jge
xor
mov
jno
add
insb
inc
scas
cwtl
mov
aaa
push
pop
in
int
pop
fs
push
outsl
jl
mov
incl
sub
ret
cli
andnps
sub
push
push
jnp
das
cmpsl
add
fwait
and
sbb
mov
and
test
adc
adc
out
cltd
push
dec
sbb
fisubrl
jno
cmp
lret
mov
daa
lcall
nop
add
sub
fs
sbb
call
push
add
adc
xor
pushf
add
or
add
sbb
add
inc
stos
inc
nop
and
sti
cwtl
or
and
sub
inc
push
pop
lods
add
leave
mov
lods
xor
mov
mov
sbb
dec
sahf
loopne
hlt
outsl
loope
cmp
je
int3
xchg
dec
lds
xor
adc
add
pop
mov
daa
cwtl
movl
add
jnp
cmp
loop
ret
fsubl
inc
xor
ss
jo
xor
mov
or
adc
in
shlb
pusha
movsb
fwait
int3
inc
sbb
outsl
or
lock
pusha
lock
cmpsb
lods
rolb
cmp
loope
ljmp
add
into
mov
xor
xor
or
stc
lret
cmp
add
stos
into
jg
xchg
mov
mov
shlb
push
add
loopne
cmp
inc
and
jae
out
hlt
cltd
pop
mov
pop
push
rorl
pop
mov
aam
jb
mov
inc
add
imul
jmp
lea
jle
dec
js
mov
or
les
jp
test
mov
jae
sub
lods
std
fdivs
nop
setnp
aad
and
mov
xchg
add
pop
ss
mov
xchg
pusha
add
bound
cmp
add
dec
fbld
int3
xor
xchg
in
jns
js
sbb
and
les
pushf
fcoml
add
stc
jne
popf
add
sub
mov
lret
lahf
add
cmp
popa
sbb
movsl
fbstp
sbb
hlt
mov
imul
mov
sti
pop
add
jne
sbb
inc
jb
add
push
sbb
out
xchg
lock
js
pop
jbe
push
loopne
jae
adc
stos
scas
sbb
cld
mov
add
fldl
out
push
sbb
cmp
int
sbb
mov
jbe
add
into
dec
jle
idivl
cmc
divb
add
shll
call
sub
test
cli
dec
outsb
sub
mov
xlat
mov
add
sahf
in
adc
cs
aaa
adc
fcompl
jns
sti
adc
in
add
fwait
leave
std
push
adc
sub
sub
mov
push
loope
add
sub
ss
shrl
xor
push
inc
pop
xor
adcb
and
mov
in
adc
inc
xchg
nop
stos
test
addr16
jno
inc
leave
mov
nop
and
xor
rclb
popf
push
cmp
sarl
inc
mov
leave
jmp
cmpsb
testl
xor
adcl
lock
lea
jl
push
push
cmp
adc
or
xchg
and
scas
add
lock
push
jo
cwtl
push
in
pop
pop
test
lods
jns
jne
pop
cmp
lods
inc
sub
xor
roll
xchg
iret
inc
push
and
hlt
in
jno
add
adc
or
sub
adc
arpl
fbstp
rorb
or
jno
in
add
and
in
repnz
pop
add
adc
ss
pushf
cltd
add
push
xchg
add
jge
test
jo
bound
dec
mov
cmpsl
add
mov
cmp
inc
jnp
and
xchg
faddl
test
leave
mov
dec
add
pusha
stos
or
cmc
shlb
lods
imull
add
rcr
stos
sbb
and
mov
add
and
cmp
mov
add
xchg
cmpsl
aam
add
inc
cmp
cmpsb
add
or
es
adc
outsb
clc
jnp
and
lods
les
mov
sbb
xor
cmp
jae
adc
out
or
pop
jge
js
punpcklwd
int
pusha
jne
dec
dec
mov
or
shlb
sbb
imul
mov
cmp
in
aam
mov
lods
or
out
pusha
loope
jmp
xor
andb
jns
inc
xor
inc
or
push
xor
mov
dec
xchg
xor
add
popl
mov
or
and
and
jns
push
pavgb
cwtl
fldl
and
dec
je
rcrb
jg
clc
jp
lock
jo
sub
dec
mov
push
dec
lcall
sbb
cli
inc
adc
addl
mov
push
cmp
jnp
es
scas
pusha
add
push
cmp
mov
and
lds
and
cli
add
inc
push
mov
add
and
pop
xor
add
mov
add
xor
sbb
inc
std
add
sbbb
test
sarl
daa
xor
xor
jbe
sbb
mov
xchg
nop
pop
mov
dec
inc
mov
lret
test
int
xor
push
pusha
mov
imul
add
mulb
and
movsb
insl
cmpb
les
aam
mov
pop
pminub
mov
add
out
add
add
insb
pop
std
push
lods
xchg
jl
adc
cmp
sbb
bound
cld
cwtl
push
add
jno
popf
lcall
add
or
ret
xor
hlt
pushf
jl
cmp
pop
dec
ds
pop
in
cmp
es
fcom
dec
add
mov
and
movsb
lret
pop
stc
aas
mov
scas
sarb
lahf
mov
cmpsb
orb
add
gs
sbb
bound
jle
rorb
add
hlt
cld
add
cltd
add
inc
push
mov
cmp
jae
ds
pop
mov
dec
mov
push
add
das
sub
clc
popl
jmp
repnz
insl
add
call
addr16
das
pop
xor
lea
cmp
add
fwait
rclb
rorb
sub
xor
push
or
pop
lret
enter
ljmp
push
inc
loopne
add
lods
push
js
pop
icebp
mov
xor
mov
outsl
add
jo
lock
add
lret
dec
roll
jb
mov
imul
pop
sarb
cli
popf
add
lret
cmpsb
cmpsl
and
cmp
add
jecxz
cmpsl
test
add
inc
cmp
stos
mov
shrl
xor
sbb
data16
popf
mov
cmp
sar
inc
pop
add
cmp
mov
add
mov
popl
inc
mov
mov
dec
or
and
sarl
sub
jecxz
es
psraw
loopne
dec
sub
mov
pushf
popf
fsubrs
add
aas
xchg
jne
outsb
or
add
xchg
test
add
and
pop
cmc
xor
cmp
ss
loop
add
in
lds
or
insl
jbe
mov
xchg
sub
ljmp
jg
movsl
jae
add
sbb
jg
add
inc
cwtl
ret
flds
out
leave
shll
adc
shlb
mov
divl
fcomps
leave
rcll
and
push
lcall
add
jnp
push
mov
repnz
ljmp
ret
sub
push
cli
or
mov
clc
add
push
pusha
and
xchg
jne
clc
out
shr
jg
jbe
add
mov
nop
test
cmpl
pop
push
mov
inc
flds
loop
add
push
mov
mov
add
subb
sbb
sarl
ja
ss
sbb
or
sti
lods
add
xchg
sbb
pop
rorl
or
mov
or
popf
je
mov
jecxz
sbb
fsubs
xchg
fbstp
mov
add
pop
mov
lock
jl
dec
ror
mov
or
in
xchg
mov
les
aad
inc
push
fwait
mov
inc
fistpl
xchg
cwtl
add
fstl
fnstenv
mov
ds
sysenter
sbb
push
sbb
out
loope
loop
add
add
scas
add
jp
dec
push
out
sbb
cwtl
inc
dec
int
pop
and
psrlq
ja
pop
jb
mov
cli
add
push
cmp
pop
in
lock
lds
push
sbb
xchg
adc
pop
lods
add
sahf
shr
dec
and
mov
iret
add
negb
add
mov
dec
cmp
lods
lcall
daa
cmp
es
enter
fidivrl
add
jge
out
jmp
inc
ds
add
insb
fidivl
sub
push
sbb
sbb
sahf
call
daa
mov
push
sti
adc
lods
inc
loopne
scas
or
and
pusha
clc
jnp
add
hlt
shlb
xchg
enter
dec
mov
add
mov
add
les
ja
add
clc
aad
shrb
roll
cli
or
inc
mov
sbbl
lods
mov
stos
push
pop
sbbl
add
sub
add
sub
xor
popa
fwait
mov
cli
inc
cmpsl
das
inc
sarl
add
mov
mov
shlb
leave
xor
sbb
cmpsb
cld
shr
loope
rorl
sbbb
js
pop
lods
jo
adc
inc
sub
lahf
add
lock
add
ljmp
clc
mov
or
mov
mov
stc
ficomps
lret
jns
push
nop
int3
repz
xchg
mov
nop
push
push
cmp
xor
imul
test
nop
faddl
or
mov
imul
push
adcb
nop
cmp
sbb
dec
imull
mov
cmp
hlt
push
and
incb
push
stc
fldl
ds
das
jmp
loop
add
add
filds
cs
addl
mov
mov
hlt
fnsave
add
jg
and
sub
fsubl
add
xor
in
pushf
enter
or
sub
lods
add
push
stos
inc
add
data16
pop
jne
aas
add
faddl
inc
cmp
xchg
sub
add
rcrl
ds
ja
inc
jo
shlb
outsb
sub
pop
jns
femms
adc
xor
ss
pop
push
jecxz
mov
inc
shr
jmp
dec
hlt
in
xchg
insb
cltd
ljmp
out
xor
mov
or
inc
add
adc
cmpsl
mov
push
or
mov
fildl
inc
in
ljmp
add
loope
jmp
loopne
xor
jno,pn
adc
pslld
popa
add
loop
mov
add
or
fwait
add
jle
push
adc
dec
dec
xsha256
cmpsb
push
sahf
add
call
jae
push
lock
or
movsb
and
cli
or
clc
in
pop
test
or
arpl
mov
add
push
ss
jnp
add
adc
mov
sahf
push
jnp
xchg
cbtw
or
sbb
bound
in
fwait
add
dec
ret
mov
add
gs
lock
xchg
jnp
ja
add
or
sahf
enter
loopne
mov
add
scas
fists
xchg
xor
pop
js
mov
jne
add
pop
shl
loope
add
in
cmp
popa
lock
dec
mov
jnp
mov
sub
jo
rcrb
add
decb
and
cmp
mov
ret
jg
orl
outsb
pop
fchs
cmp
mov
jno
jnp
jo
add
pop
mov
add
push
sub
mov
sbb
ret
push
in
pop
xor
or
in
xor
sub
or
add
divl
sub
xchg
pop
cld
cmp
jo
jp
cli
clc
arpl
pop
rclb
add
les
andb
das
inc
rolb
xchg
xchg
or
push
mov
sub
orb
add
sahf
std
fcomps
mov
dec
xor
add
je
outsb
ret
add
adc
int
ret
enter
jns
cmp
add
xchg
adc
xor
dec
add
mov
les
jb
cmp
or
add
jne
sahf
inc
and
data16
jle
mov
add
push
jmp
pop
mov
ss
add
pop
add
int3
xlat
fldl
mov
pop
xor
mov
jl
cmp
add
cmpsb
cwtl
out
mov
add
jo
loope
add
mov
nop
cmpsl
insb
adc
sbb
sbbb
or
mov
out
out
adc
imul
mov
sahf
cltd
add
insl
jmp
add
outsb
xchg
add
add
loop
cmp
fisttpl
add
add
ljmp
push
pop
inc
mov
sbb
popf
dec
sbb
cmc
add
jnp
xor
dec
adc
rorl
or
jl
push
add
jbe
inc
ja
xor
sbb
lock
cmp
push
pop
inc
test
push
stc
add
jmp
pusha
mov
jo
mov
and
rolb
sbb
arpl
pop
pop
add
lods
mov
in
jg
fadds
push
mov
cmp
aam
stc
add
jo
vmovlpd
xchg
pop
mov
sub
push
add
jne
lahf
sub
adc
testl
ret
es
jno
xor
adc
cmpb
mov
jb,pt
add
test
int
notl
movsb
push
push
mov
out
adc
cmp
sub
push
cltd
idiv
dec
add
mov
jo
lret
add
push
mov
sahf
mov
insb
sub
cmp
icebp
gs
jns
xchg
scas
pop
ret
adc
inc
fisubrl
mov
je
sub
jecxz
mov
pop
lret
pop
mov
ret
loopne
and
ret
pop
mov
addl
sub
add
dec
adc
add
sub
xchg
mov
xchg
loop
jg
inc
push
push
jmp
add
add
or
inc
add
imul
add
aaa
jne
mov
icebp
jbe
pop
scas
mov
test
lret
cmp
arpl
lods
stos
sub
les
and
and
cli
out
pusha
mov
add
jmp
insb
pop
add
fs
jg
cmpsl
dec
mov
mov
das
sarb
ds
sbb
cs
and
ds
sti
sub
rorb
loope
jge
addr16
subb
add
lods
pop
cmc
jp
mov
stc
stos
fdivl
sbb
hlt
add
sub
test
inc
int3
inc
test
mov
adcb
addb
xchg
adc
sbb
aad
add
jnp
push
add
and
in
jmp
mov
scas
iret
adcb
adc
nop
and
ds
sbb
mov
adc
adc
pop
add
push
notl
jg
cmp
dec
fadds
addb
cmp
loopne
aad
mov
pop
mov
mov
cs
and
add
mov
out
inc
inc
ja
mov
fbld
daa
adc
pusha
es
iret
mov
mov
inc
mov
das
lods
xor
adc
aas
adc
add
mul
xor
gs
add
lock
call
jg
jp
and
xor
add
mov
stos
xor
inc
adc
add
jne
add
dec
pop
or
psubw
fmull
js
and
mov
je
aaa
dec
jmp
add
push
imul
sbb
adc
mov
rclb
ljmp
pop
mov
fwait
mov
xchg
add
mov
sbbl
jbe
cwtl
test
imul
sbb
lret
jp,pt
inc
popf
stos
icebp
das
arpl
add
pop
sub
add
lea
scas
mov
test
mov
adc
sub
inc
cmpsl
add
jle
cltd
inc
in
fstpt
jge
movsl
sub
bound
mov
add
jno,pn
push
add
lds
or
icebp
stos
or
arpl
dec
push
push
xor
call
and
mov
fwait
push
sbb
hlt
add
outsl
in
insl
add
xor
pop
jno
add
jp
mov
add
or
dec
mov
pop
jae
xor
xchg
rcll
loop
inc
xchg
or
add
dec
and
mov
fisubrs
adc
pop
xor
lds
call
sub
rcrl
add
jo
nop
mov
int3
les
pop
repnz
add
cmp
mov
out
cltd
es
lds
ficoml
add
xchg
pop
in
add
add
roll
es
fildll
add
aaa
and
mov
pop
cmc
dec
add
sbb
pushf
fdivp
and
mov
pop
add
pushf
divb
cld
xchg
add
faddl
pusha
pop
sahf
xchg
inc
xchg
cmp
sub
popa
lods
incl
dec
sub
aam
lods
test
int3
fisubs
sbb
add
push
inc
jae
jb
lea
pop
mov
cwtl
or
in
mov
pushf
sti
add
or
add
insl
andb
div
call
mov
out
ret
add
pop
aas
call
mov
shll
in
or
add
out
mov
pop
mov
mov
ja
clc
push
pop
push
add
push
add
sbb
pop
dec
inc
push
sarl
fcompl
bound
mov
add
movsb
mov
adc
or
in
push
add
adc
sbb
stc
leave
or
pusha
xchg
pop
and
push
stc
lea
add
js
decl
mov
xor
or
pop
mov
lock
add
cmpsb
test
jae
add
push
in
sbb
jne
add
or
loopne
ljmp
inc
insl
push
adc
ds
pusha
sahf
sbb
cmpsb
sbb
inc
iret
in
jg
or
cmp
sub
popf
scas
and
ss
lret
inc
inc
in
test
sbb
scas
lock
rcll
jl
or
dec
lret
push
add
imul
push
test
jmp
add
push
incb
out
inc
jo,pn
cld
adcb
outsb
outsl
dec
aam
scas
inc
ret
ds
pushl
stos
mov
mov
addr16
cli
mov
js
add
cmp
jp
vcvtdq2ps
mov
ret
add
push
adc
adc
mov
aas
jno
sbb
inc
mov
lds
sub
add
nop
insb
mov
pop
xor
pop
and
shlb
adc
lock
jmp
rorl
fs
xchg
push
and
mov
repnz
pop
sbb
insl
scas
sub
mov
jp
rcrb
pusha
sbb
adc
cmp
push
adc
add
mov
adc
pop
stc
mov
add
arpl
rol
decb
out
icebp
popa
mov
enter
cmpsl
shll
dec
and
clc
pushf
mov
jmp
dec
mov
add
xchg
xchg
int3
jns
fbld
cmpsb
xchg
push
das
add
out
xchg
jp
cmpsl
inc
push
pop
mov
add
fstps
and
xor
shrb
shlb
testl
inc
add
std
rorl
adc
out
jge
subb
rclb
lock
movsl
mov
mov
lea
fs
or
push
icebp
adc
mov
pop
mov
es
fldenv
adc
test
pop
insl
push
push
and
aad
push
cwtl
add
sub
outsb
sub
pop
aas
add
jmp
dec
jg
std
sub
mov
lock
lret
nop
pop
mov
add
xor
pushf
sahf
loopne
rorl
test
cmc
jo
inc
cmpsl
xchg
or
in
pop
xor
stos
daa
or
mov
or
outsb
pop
xor
add
xchg
push
leave
imul
xchg
shll
lds
std
pop
imul
lcall
push
add
pop
adc
pop
out
insb
add
stos
sbb
xor
shrb
in
lret
push
decl
out
pop
sbb
jecxz
andb
add
ss
lods
and
mov
test
shrb
ja
cwtl
pushf
pop
arpl
add
or
mov
cmp
leave
repz
add
inc
ss
cs
dec
in
inc
std
sub
add
push
ljmp
pop
jle
adc
test
test
mov
mov
add
testl
test
sub
push
in
add
loope
ds
ss
jbe
push
shl
nop
pop
add
scas
popa
add
fwait
lea
test
or
xchg
add
rdtsc
fstpl
lcall
add
xchg
icebp
int
mov
mov
popa
pop
into
ja
dec
inc
pop
xchg
add
or
in
pusha
adc
dec
pop
imul
mov
pop
insl
mov
push
dec
jmp
xchg
mov
push
sub
jg
adc
xchg
pop
xor
sub
sub
add
lahf
jae
mov
loopne
sbb
std
jmp
mov
dec
add
cmp
stc
add
pop
lock
pop
jnp
add
push
mov
push
mov
popa
fcoms
gs
in
jo
jle
jae,pt
rol
add
or
cmpsl
sub
and
test
sbb
stos
mov
xchg
mov
int3
xor
ret
loop
mov
stos
or
push
orb
mov
in
pusha
fwait
xchg
fdivr
dec
aam
add
insb
int3
pop
ss
sti
xor
add
jge
dec
fdivrs
pop
mov
mov
cmp
jle
lahf
test
aas
stos
andl
mov
js
pop
rcll
push
notb
add
outsb
dec
add
mov
imul
loopne
sub
push
test
push
add
mov
sub
cmp
push
imul
or
lret
jns
stc
pushf
loopne
xchg
test
push
mov
add
push
clc
inc
outsb
jo
filds
shrb
jle
fcmove
jmp
mov
adc
mov
aaa
adc
rolb
popf
ret
sub
mov
shrb
adc
xor
loopne
and
pop
cmp
jns
rorb
inc
xchg
lock
mov
jle
pop
imul
test
sti
pusha
sbb
loope
xor
les
jmp
fsubs
enter
insb
mov
mov
dec
lahf
sub
clc
dec
repz
mov
xor
xchg
lcall
mov
hlt
fildll
das
fcomps
jp
mov
addl
in
ja
or
push
inc
mov
jge
popf
push
xor
shll
add
lret
imul
subb
xor
jno
movsb
lock
jl
fwait
repz
mov
jno
push
cmc
cmpb
lret
inc
out
push
fnstenv
out
js
gs
add
sbb
and
adc
decb
roll
cwtl
sbb
and
and
mov
call
mov
sbb
inc
std
inc
fisttpll
cmpsb
add
loop
dec
add
addr16
rclb
jge
dec
stc
add
test
ss
jb
and
cmp
add
cld
push
lret
sarb
xchg
mov
js
add
xor
imul
repnz
dec
out
nop
cs
adc
pop
jo
hlt
add
inc
shlb
leave
cmpsl
jmp
mov
or
sub
gs
fstpt
je
cmpsl
add
mov
jo
outsl
or
mov
adc
out
mov
in
leave
add
xor
or
jg
add
out
insb
push
lcall
pand
xorl
mov
sub
jbe
inc
mov
sbb
testl
test
psubd
bound
sub
pop
aad
lods
adc
pop
pop
push
in
add
xchg
adc
mov
loopne
lea
ds
ja
into
jno
jns
add
push
adc
mov
in
aaa
and
pusha
xchg
in
add
push
andl
jae
dec
push
dec
push
jecxz
rcll
outsl
das
and
lcall
ss
add
data16
sbb
sbb
fdiv
add
ret
out
es
js
jns
or
jno
add
dec
mov
push
adc
in
jb
jg
inc
mov
add
ss
rolb
and
bound
arpl
dec
mov
add
int3
dec
jnp
push
dec
push
leave
dec
aam
movsl
pop
xchg
lcall
rorl
push
daa
add
xchg
mov
frstor
clc
add
sbb
mov
in
mov
or
jl
add
idivb
test
mov
fsubrs
cs
lock
inc
hlt
in
add
outsb
cli
pop
dec
fidivrl
fldenv
add
out
fdivrl
scas
testl
cld
repz
inc
add
sub
or
js
mov
xchg
adc
mov
dec
dec
push
add
test
loop
jns
pop
shr
fucom
adc
mov
jae
ret
std
add
gs
cld
dec
add
icebp
inc
and
push
add
sub
push
sbb
in
sahf
jae
cmp
pop
add
fisttpll
mov
jo
loope
in
test
push
and
es
rolb
movsb
int
jns
inc
call
sbb
pushf
add
inc
adc
test
mov
pop
jo
sbb
adc
mov
sarb
in
or
inc
sub
aas
hlt
push
cmpsl
ret
fldl
and
pop
stos
add
cmp
in
dec
sbb
cmp
jnp
in
stos
cmp
or
mov
mov
mov
mov
int
aad
ret
lds
pop
push
mov
and
mov
add
es
cmc
les
scas
add
cmpsl
lret
jo
mov
add
xlat
pop
jge
lds
repz
adc
loop
xor
stc
sub
fisubs
shlb
fwait
lods
ja
pop
add
mov
cs
lret
in
mov
mov
andb
adc
adc
push
leave
add
push
aaa
dec
mov
add
mov
pop
repnz
or
sbbb
adc
outsb
add
and
add
pusha
fdivrs
jecxz
rcll
sbb
mov
mov
add
sub
into
cmpsb
cli
cmpsl
cmp
mov
sbbb
mov
add
pushf
ret
hlt
popa
fisubs
and
cld
cli
popl
push
int
xor
pop
call
pop
ja
inc
jnp
xchg
sub
sub
cmpsl
or
dec
mov
pop
insb
inc
sub
sbb
cmp
je
push
stc
outsl
jmp
fsubrl
cld
sub
add
add
add
xchg
or
add
and
sub
push
stos
cltd
fdivrl
pop
sub
sbb
and
test
repnz
bswap
push
push
lods
xchg
in
cld
sub
or
subb
pushf
and
and
sbb
xchg
sub
jbe
imul
jnp
mov
fdivp
ret
insl
call
sbb
stos
pushf
pusha
fs
cwtl
add
loopne,pt
sbbb
testl
pop
add
pop
cmp
pop
add
in
inc
repnz
movl
in
add
push
jmp
pop
mov
data16
mov
cmp
setg
adc
pop
add
test
adc
ss
movsl
mov
rorb
fsubp
sti
repz
inc
mov
and
pop
popa
insl
mov
in
jb
rcl
ucomiss
imul
call
call
jmp
dec
leave
test
pop
adc
in
sub
pop
mov
dec
loopne
jne
sbb
imul
push
add
push
mov
cwtl
repnz
call
mov
inc
xlat
loop
test
push
or
orl
add
pop
sahf
adc
lahf
push
js
push
jge
jb
lock
sbb
push
sbb
sub
inc
sbb
gs
pop
outsl
loop
std
popaw
dec
inc
lods
inc
inc
and
movsb
cwtl
inc
add
sahf
mov
cltd
push
xor
adc
call
jge
mov
sub
jl
and
int
lods
push
add
pusha
gs
xor
pop
es
nop
popa
fstl
xchg
mov
inc
movsl
je
or
sbb
fcoms
add
rcrl
add
mov
jo
cli
add
out
mov
push
and
xchg
shlb
push
pop
out
icebp
push
mov
add
cld
sbbb
subb
repz
rclb
xor
and
push
mov
and
xor
loop
addb
lret
lock
lods
std
pop
sbb
test
add
pop
in
adc
ja
popl
inc
movsb
jl
xor
js
push
mov
lret
push
popl
push
add
into
int
pop
mov
dec
add
imul
add
js
sbb
div
xor
iret
cmp
push
imul
sub
lock
fdivrs
jp
sub
mov
inc
inc
adc
mov
andb
lret
inc
test
adc
jo
and
and
xchg
inc
or
out
test
dec
inc
adc
dec
cmp
test
inc
and
divb
mov
nop
std
test
dec
fiaddl
jmp
inc
gs
aad
dec
xor
jno
push
insl
out
call
add
sbb
loope
jb
jb
add
data16
add
popf
jge
add
aas
lret
js
add
sub
xchg
ret
mov
dec
mov
xchg
mov
rorl
hlt
jo
stos
in
add
and
or
imulb
inc
cli
rolb
sub
sub
inc
xchg
push
sbb
mov
add
cli
fnstcw
out
add
clc
xor
add
push
in
out
inc
dec
dec
andps
cmp
jle
add
mov
imul
les
cli
pop
dec
dec
push
add
lea
enter
mull
lods
pop
xchg
cli
pop
adc
int
inc
lods
data16
or
jge
rorb
push
jns
repnz
xor
mov
adc
in
in
cmp
sahf
adc
push
fmull
and
fisttps
xor
and
add
xlat
mov
lods
jbe
jl
mov
scas
dec
pop
imul
adc
stc
xchg
sti
invd
mov
push
ficomps
xor
add
repz
cmpsb
shl
cwtl
add
jl
fcom
lret
movsl
test
shll
add
inc
mov
seta
ret
fstpt
push
rolb
xor
lea
inc
push
add
loopne
mov
scas
ss
pop
sbb
out
subl
pop
xor
mov
xchg
popf
add
jmp
adc
aas
add
mov
push
pop
jae
push
inc
aad
add
add
fs
shlb
in
pop
sbbl
pop
xlat
imulb
push
out
push
cmp
int3
das
adc
pusha
mov
js
and
aas
mov
sub
and
pextrw
pop
ds
pop
or
pop
adc
adc
into
enter
leave
aad
xor
mov
out
pop
aam
pop
pop
jl
enter
daa
mov
inc
xchg
mov
pop
sub
inc
in
push
adc
add
pop
jo
add
cmp
add
aad
adc
xor
push
js
inc
test
pop
jmp
mov
cltd
shlb
xchg
dec
fadd
rcrl
add
jmp
cmp
hlt
sbb
int3
sub
jg
or
add
xchg
inc
add
pop
push
xlat
xor
add
and
lds
out
jbe
push
pop
out
popa
pusha
or
pop
fildll
add
cmp
dec
sub
add
mov
repz
lea
jnp
cmp
gs
lds
xor
sahf
dec
andb
andb
lods
test
jnp
sbb
scas
out
xlat
and
pop
cmpsb
outsl
adcb
or
dec
dec
inc
ret
push
and
or
mov
roll
sahf
out
inc
roll
sub
dec
inc
add
mov
jl
stc
fisubl
cmp
andb
add
add
imul
les
cmc
add
cmpsb
mov
or
sti
stos
add
add
add
lds
add
or
ljmp
pop
pusha
adc
and
add
addl
sub
ret
sub
cli
mov
mov
jmp
mulb
mov
mov
insb
cwtl
xlat
jo
add
cmpsl
aad
sub
pop
cmp
xchg
and
adc
pop
jb
mov
ret
test
loop
add
pop
or
stos
xchg
lret
cmpsb
cmp
addr16
mov
xor
pusha
pushf
push
or
cs
jo
orb
cmp
mov
xchg
sbb
xor
out
bound
xor
inc
fists
sbb
in
subb
mov
lcall
test
ret
add
data16
test
xor
xchg
push
stos
incb
add
ret
mov
inc
in
test
push
jl
jmp
and
pop
idivl
ret
add
inc
sbb
andb
pop
std
lds
addl
push
inc
mov
add
sub
pop
pop
cmc
sti
add
in
or
jp
divb
lds
xor
test
inc
xchg
fucomip
data16
xchg
xchg
and
adc
or
xchg
or
add
rcrb
mov
in
and
mov
iret
push
sbb
pop
xchg
repnz
add
mov
and
lods
and
and
nop
inc
test
jecxz
repnz
sbb
aaa
pop
lret
hlt
xor
xchg
xchg
dec
sub
push
jmp
fmuls
mov
sub
mov
xor
push
adc
incl
dec
out
and
jb
fsts
rclb
movsb
decl
into
js
data16
in
sarl
out
add
das
and
clc
add
aaa
outsb
test
adc
and
jbe
add
outsl
cmp
add
lcall
dec
stos
push
add
push
sbbl
mov
add
ret
cmp
dec
ret
cmp
add
shlb
fldenv
rcl
loope
mov
rorb
push
push
gs
dec
stc
adcl
dec
push
push
jmp
adcb
sbbb
sub
jl
and
mov
add
or
inc
mov
add
xorl
sbb
jns
adc
mov
js
dec
add
add
inc
scas
scas
aaa
or
adc
sbb
inc
sub
add
lahf
mov
test
insb
invd
jecxz
sahf
cld
add
loop
sub
jle
xor
out
jb
in
incb
out
jnp
dec
jbe
sbb
jns
and
cmp
subb
xlat
pop
in
sub
pushf
icebp
jo
xor
out
sbb
push
mov
test
and
mov
xchg
add
push
andps
add
fsubrl
add
mov
add
push
xchg
ss
xchg
xor
push
inc
or
jnp
out
sbb
lret
xor
bound
dec
fucomp
pop
xchg
pop
pop
mov
xchg
mov
mov
push
rcrb
sar
dec
jns
mov
cld
add
stc
ja
xlat
addb
mov
bound
mov
cltd
push
add
lcall
add
cmp
in
jns
add
test
add
outsl
dec
into
jb
add
call
pop
jle
mov
test
jns
rolb
and
inc
sub
mov
xchg
and
cmp
cwtl
fnstsw
jge
add
jbe
clc
enter
adc
rorb
into
xchg
jmp
pushf
jl
call
xor
loop
hlt
bound
add
sub
mov
fcomps
adc
or
imul
cmp
sub
lock
jae
add
jg
movsl
add
iret
sbb
xor
mov
notl
push
mov
add
aaa
outsl
xor
fisubs
push
sarl
inc
add
xchg
add
cmpps
xchg
faddl
sti
je
cmp
std
and
lds
testl
outsb
shrl
cmc
jae
dec
dec
cld
lods
add
mov
add
jg
movl
add
into
scas
movsl
out
scas
cmp
sbb
xchg
mov
test
test
xchg
jle
dec
test
add
scas
lock
xchg
adc
iret
negl
xchg
cwtl
pop
add
adc
fs
flds
dec
inc
inc
jae
mov
loopne
int3
mov
jb
pop
rolb
xor
and
test
xchg
das
mov
jnp
push
xchg
mov
jns
fsubs
iret
inc
add
clc
insb
fstl
push
or
mov
xchg
mov
mov
loope
dec
cs
add
xor
inc
push
jg
jb
add
inc
das
mov
xor
jl
movsb
xlat
mov
jns
sub
mov
add
arpl
test
dec
ret
inc
mov
aam
dec
mov
pop
cmp
sbb
jmp
and
xchg
inc
cmpsb
xchg
inc
and
and
add
insl
xchg
std
addb
pop
jne
mov
push
jno
sbb
pop
or
popa
and
lea
js
add
inc
out
cmp
rolb
jb
add
jns
pusha
aaa
xchg
add
jp
jecxz
pop
sbb
mov
xchg
mov
or
icebp
add
clc
pop
popa
and
push
sbb
mov
jmp
xor
add
loopne
leave
cmp
int3
adc
stc
mov
sub
ffree
test
mov
add
jae
mov
and
cmp
xchg
add
jmp
add
lods
pop
mov
and
repz
push
inc
inc
add
dec
cmp
fisttps
cmp
insb
cmp
pop
jnp
add
lret
sub
mov
add
in
add
hlt
cmp
add
jb
repnz
popa
pushf
xchg
fwait
sbb
jmp
outsl
in
fxch
popl
push
add
xor
cli
lret
popa
pop
adc
pusha
cmc
pusha
popa
in
test
lods
data16
fwait
xorb
setae
jle
sbb
imul
int3
mov
jb
lea
add
popa
mov
push
jg
pushaw
std
jo
or
xor
decl
fwait
ret
mov
pusha
or
jnp
lea
nop
adc
push
sbb
inc
int3
mov
add
fld
jo
aam
stos
imul
push
mov
ljmp
mov
sbb
adc
dec
push
cmp
adc
push
imul
or
inc
add
enter
ljmp
je
add
jb
jecxz,pn
mov
push
lahf
out
out
repz
pop
mov
rcll
sbb
mov
testb
inc
mov
push
push
jl
ret
mov
xchg
mov
subl
clc
dec
add
loop
aam
cmp
add
xor
les
pop
mov
xchg
ss
cmp
mov
cs
clc
ds
fdivrs
inc
mov
adc
cmp
inc
mov
enterw
mov
jo
xchg
add
fldcw
jne
ret
sbbb
cli
dec
add
stc
outsb
cwtl
mov
add
test
rorb
leave
dec
rolb
sbb
fdiv
push
pop
cwtl
push
xor
aam
stos
pop
push
scas
push
sti
cmp
mov
jge
push
pop
jecxz
add
add
mov
dec
cmpsb
pop
loopne
push
enter
out
jecxz
jb
into
xor
stc
fiadds
jne
cs
adc
cld
loopne
loop
outsl
lret
add
ficomps
jnp
add
add
rcr
fidivl
mov
mov
arpl
addr16
lds
mov
push
sahf
xor
xor
stc
pop
shl
aad
mov
mov
push
jno
cmpsl
fildl
xchg
pushf
mov
xchg
arpl
fs
insl
xor
fiadds
and
push
shlb
xchg
dec
jb
jp
add
outsl
fwait
mov
rcrb
or
mov
add
xor
push
xor
add
push
icebp
add
xchg
add
jmp
repnz
loop
testb
fdivrs
fistpll
pop
add
mov
push
data16
xor
cmp
sub
adc
fs
push
mov
sub
mov
add
cltd
sahf
cmp
insb
xor
ret
add
push
loop
or
call
daa
add
pop
aaa
pusha
adc
or
out
jno
pop
add
mov
incl
shl
push
pusha
std
imul
repz
cltd
adc
add
lahf
pop
push
add
jbe
pop
sub
lds
jo
add
sbb
xchg
dec
mov
cmpl
cmp
xor
stos
mov
xchg
rolb
dec
dec
adc
aaa
pop
stos
push
hlt
inc
movsb
loop
jmp
add
lods
xchg
cs
inc
lahf
add
and
sub
lods
getsec
or
add
pop
sti
inc
and
sbb
rol
scas
into
and
mov
lods
out
add
mov
sub
or
cmpsl
sub
fwait
xchg
jmp
dec
inc
aad
test
insl
fiadds
mov
fwait
jae
dec
mov
xchg
mov
or
xor
aas
inc
or
dec
add
adc
xchg
mov
rcrl
xlat
shlb
arpl
add
mov
call
pop
mov
gs
mov
imul
sbb
add
iret
jecxz
pop
int
mov
adcb
leave
addl
movsl
test
add
cmpsl
and
test
push
pop
jge
mov
lods
fldl
add
cmp
imulb
cmp
add
out
icebp
rorw
cwtl
bound
mov
pop
or
add
pop
add
lods
cmp
adc
mov
jno
mov
sub
jae
push
cltd
jmp
sub
stos
jne
incl
inc
pop
jno
add
push
adc
cmpsl
inc
ret
jecxz
gs
leave
mov
test
pop
mov
dec
jo
ja
imul
sub
add
dec
ja
add
movb
jno
push
mov
adc
arpl
test
jns
inc
mov
outsb
pop
xchg
sub
push
pop
aas
out
aas
in
add
cmp
pop
dec
xchg
sub
xchg
mov
push
push
push
lock
fiaddl
xor
inc
shrl
push
sub
jge
fdivs
mov
mov
pusha
cmc
addr16
pop
xchg
mov
cmp
add
adcb
add
loopne
inc
jmp
fldl2t
add
adc
sahf
dec
xor
dec
mov
push
sbb
xor
adc
cmp
push
mov
add
scas
in
arpl
jae
lods
ljmp
subl
cmpsb
mov
xchg
andl
aam
out
and
adc
xchg
pop
push
jbe
xchg
pop
and
mov
inc
add
imul
fildll
js
imull
xorb
les
add
sbb
add
mov
dec
mov
addl
xchg
and
sub
hlt
push
adc
out
jbe
aad
jmp
fidivl
mov
adc
in
mov
inc
popa
push
inc
mov
mov
mov
add
ja
sub
sbb
mov
outsb
inc
out
bound
aas
cmpsb
mov
cmp
aad
jno
addr16
sbb
jnp
stos
shl
int
jbe
sbb
inc
rorb
incl
adc
inc
cmp
mov
inc
sar
dec
hlt
les
cmp
rol
adc
jbe
in
add
adc
add
cmpsb
loope
xor
add
fistl
popa
inc
daa
inc
faddl
add
xor
dec
pop
adc
cld
xchg
fadds
push
add
pop
imul
add
pop
outsl
or
inc
in
dec
pop
clc
jno
cmp
mov
add
jnp
add
out
mov
add
in
add
subl
clc
popa
mov
add
mov
mov
add
incl
add
adc
pushl
cwtl
mov
mov
sbb
mov
repz
push
jo
icebp
sti
into
wrmsr
mov
xchg
jae
rorl
dec
mov
mov
jo
loopne
sbb
data16
lea
inc
enter
and
lods
or
shll
sarb
cld
lock
out
lret
sub
movsb
leave
inc
mov
mov
data16
addb
or
fs
push
mov
or
cmp
dec
cmpsb
lret
ret
pop
pop
pushf
and
push
std
in
inc
les
aam
cli
jmp
mov
prefetch
push
daa
or
pop
dec
lret
nop
notl
xchg
adc
cs
and
cmp
add
and
sbb
and
pop
lock
add
popf
stos
pop
add
sbb
les
ficoml
in
add
push
adc
jge
or
fwait
xchg
scas
movsl
loop
or
push
repz
js
nop
sbb
sarl
test
fstpt
test
imul
sbb
jns
add
fsubs
or
faddl
in
sbb
mov
sbb
adc
aad
dec
push
test
push
js
nop
xor
xchg
adc
mov
in
jg
sbb
inc
daa
push
icebp
inc
pushl
push
mov
dec
mov
xor
hlt
cli
cmpsl
mov
sbb
add
jp
pop
pop
add
out
cmp
mov
and
fbstp
add
or
daa
shlb
mov
mov
push
inc
lods
lods
add
dec
pop
xor
jg
cwtl
divb
pop
pusha
loop
mov
cmp
jge
cmp
dec
fiadds
xchg
out
dec
dec
dec
fildl
add
jnp
test
push
insb
idivb
inc
addb
push
stos
sub
dec
ljmp
dec
jnp
or
outsl
les
arpl
jmp
pop
xor
xor
lret
inc
xor
enter
jo
punpckhwd
jb
test
lock
fs
xchg
add
nop
test
cmp
lds
sarl
mov
pop
add
mov
ljmp
add
sahf
add
pusha
add
fistpll
push
mov
pop
ljmp
mov
or
repnz
push
out
jle
add
xor
in
test
call
mov
mov
push
jae
js
psllq
add
and
insl
sti
data16
cmp
push
jp
adcb
cmp
xor
adc
arpl
or
xchg
sti
pop
xchg
pop
add
sub
cwtl
push
sar
fadds
leave
fsts
cltd
mov
dec
nop
mov
scas
mov
add
xchg
or
repz
stc
add
ja
dec
add
and
jp
xchg
or
data16
and
add
lods
push
add
lret
mov
and
std
inc
scas
mov
roll
pop
sub
inc
add
sbb
fldenv
movsb
loope
in
repz
and
dec
filds
mov
mov
fstpt
add
fisubs
shl
arpl
test
cmp
add
in
les
mov
mov
mov
stos
clc
mov
cmpsl
xlat
inc
sarb
sbb
xchg
test
outsl
or
push
add
add
xchg
sbb
aas
incl
sub
inc
push
in
rcrb
jecxz
loopne
add
icebp
mov
dec
mov
aaa
ret
push
inc
sbb
lods
cmpsl
fldcw
leave
lret
testb
sub
pop
arpl
je
push
dec
xchg
jp
or
mov
inc
inc
inc
outsb
testb
andb
mov
lea
push
push
jns
pop
imul
xor
fisttps
mov
or
iret
mov
mov
call
add
sbb
pop
aam
push
aaa
test
lods
adc
pop
add
or
sbb
mov
mov
mov
mov
rolb
and
ljmp
adc
jecxz
daa
adc
fstpl
add
rcl
int3
mov
movl
loop
mov
sbb
arpl
rolb
cmp
push
pop
pusha
jno
test
rcll
and
pop
out
icebp
ficompl
jns
mov
in
add
addr16
push
cmpsb
in
push
fildll
pushf
rolb
xchg
into
loopne
lret
push
add
sbb
sub
lds
lahf
loopne
jmp
push
shl
push
push
sahf
movsb
xchg
add
sub
add
sahf
rcr
add
xor
addb
push
aad
icebp
jp
loope
in
xorb
and
xor
jae
das
add
add
fucomi
or
pushf
xchg
inc
jb
add
sbb
movl
push
push
jmp
mov
jb
stos
add
pop
cwtl
lcall
push
pop
pop
mov
cmc
jae
add
push
dec
mov
imul
jmp
aas
add
call
xchg
mov
cmp
push
enter
cli
loop
and
loopne
fs
adc
ret
mov
push
and
and
push
add
add
push
les
mov
stos
inc
fucomip
jae
pop
loopne
data16
and
es
bound
add
mov
sub
pop
push
adc
adc
ja
and
idivl
add
lcall
add
mov
push
call
popa
add
or
ljmp
imul
add
xchg
xchg
add
sub
push
pop
inc
icebp
gs
dec
inc
mov
cmp
mov
cmp
push
outsb
jbe
or
adc
nop
psubsb
add
inc
addb
in
cld
push
push
xlat
rclb
sbb
mov
inc
or
addl
xchg
mov
cmp
cld
jae
cmpb
sub
stos
add
ja
fs
mov
inc
dec
lcall
cld
jecxz
pop
mov
add
lods
mov
dec
add
jle
popl
add
push
mov
stos
lea
mov
lods
adc
or
sarb
icebp
dec
testl
rolb
dec
add
add
ss
fiadds
sub
inc
sub
mov
sub
add
imul
loop
add
jge
orl
clc
add
pusha
mov
fprem
pop
sub
add
es
cmpl
mov
roll
cmp
nop
add
sub
shl
sbb
cmc
imul
fsubs
mov
dec
jecxz
mov
jmp
sbbb
sbb
xchg
add
icebp
adc
or
jne
add
push
fldenv
insl
mov
dec
mov
imul
push
add
sbb
dec
lds
lret
call
sub
inc
xor
leave
fs
or
adc
push
add
lods
mov
add
mov
mov
sub
jmp
mov
jo
in
fnstcw
push
and
std
pop
insl
add
or
sbb
add
add
popf
mov
or
popa
out
or
xchg
add
mov
movsb
stos
add
ss
out
xchg
pop
pop
jbe
iret
lods
jle
cmp
cli
popf
es
je
adc
push
lea
cmc
xchg
xchg
inc
pushf
jo
add
out
mov
mov
xchg
or
lcall
shl
ss
sbb
sbb
add
push
lods
jg
xor
ds
or
sbb
dec
add
mov
loop
ret
ret
cmp
xor
out
cmc
cs
push
xchg
insl
mov
cmpsb
push
in
xchg
add
shr
pop
add
xchg
lock
or
add
add
mov
dec
stos
pop
and
add
clc
push
xor
inc
sbb
add
mov
pusha
cmp
push
je
leave
fstpt
or
lods
dec
pop
out
jno
xor
in
adc
clc
sub
xlat
jmp
cli
or
push
push
sti
loope
or
add
and
cwtl
jmp
addb
jb
pop
add
rcll
shlb
stc
jnp
or
pop
jge
nop
fwait
push
push
and
ret
sub
and
mov
int3
cltd
or
mov
pusha
push
adc
loope
imul
das
flds
xorb
add
sahf
shl
cli
cs
add
inc
add
sub
nop
jne
add
shlb
aas
add
cltd
sub
add
dec
cmp
dec
push
outsl
js
and
sub
jo
pop
xchg
cmp
cmp
add
ret
push
push
iret
call
ja
fdivs
cmp
push
and
addr16
fsts
add
aam
xor
adc
repz
or
roll
out
cmp
inc
int
loopne
out
cmp
pushf
sub
dec
out
scas
dec
arpl
dec
push
xor
add
dec
and
and
jb
cmpsl
mov
add
imul
int
dec
cwtl
aad
add
pop
xchg
rcr
and
inc
add
jg
inc
int3
aam
cmpsb
outsl
sbb
or
cld
dec
nop
pop
and
pop
mov
mov
add
jle
insb
sarl
rol
repnz
es
inc
cmpsb
sbb
outsb
push
adcb
mov
jno
add
pop
das
or
sub
test
adcb
movsb
push
pushf
pop
hlt
mov
xor
jnp
cmp
aam
sar
pop
fs
xchg
iret
andl
add
push
add
mov
xchg
shl
enter
popa
push
xchg
test
loop
add
inc
add
mov
jo
sbb
es
inc
popf
rcrb
cli
hlt
shrl
jmp
cmc
push
or
xor
dec
inc
stos
cmp
faddl
iret
add
and
mov
push
xchg
dec
and
subb
inc
add
gs
jg
icebp
inc
das
mov
mov
jge
push
int3
aas
xor
add
push
mov
push
fwait
jecxz
inc
aad
cmc
add
fcmovnbe
add
pop
mov
jle
or
jae
sarb
scas
cmpl
xor
adc
mov
pop
adc
rclb
add
bound
xlat
lea
push
push
dec
jbe
add
fs
push
mov
mov
add
test
cmpsb
fwait
pusha
pop
cmp
popl
push
sbbb
xchg
jl
jae
pop
xchg
outsl
and
dec
add
aam
or
inc
mov
sbb
lock
pop
rorl
jle
movb
in
jns
push
push
iret
adc
lret
add
shlb
lret
and
pop
incb
adc
cmc
mov
aam
out
adc
les
jmp
aam
movb
fmul
icebp
add
shlb
sub
call
nop
fisttps
jno
jo
loope
cmp
dec
lcall
xlat
push
stc
jg
cmp
repnz
jns
pop
mov
inc
or
insl
nop
pop
sbb
push
jl
fmull
test
adc
pop
push
cmp
jne
xchg
jle
jg
inc
pop
pushf
or
add
outsl
out
add
dec
mov
add
pushf
lock
xor
sub
ds
add
sbb
pop
adc
dec
pop
lock
stc
ret
inc
xchg
inc
lds
push
aad
call
jge
push
sbb
bound
fiaddl
lods
mov
aad
cli
movb
or
jnp
sbb
add
fimuls
test
pop
push
mov
mov
aam
cmp
add
or
jp
dec
xor
movsl
sub
lds
inc
arpl
pop
in
push
cmpb
add
inc
mov
pop
ret
mov
sbb
fistps
int
add
add
mov
aaa
frstor
faddl
mov
add
mov
ja
sbb
scas
xor
dec
xor
dec
push
adc
clc
lods
stc
fadds
pop
test
inc
bound
data16
aam
add
test
cmp
add
incl
faddl
pusha
pop
loopne
mov
movsb
jmp
push
pop
fcom
add
cld
out
add
in
int3
sub
popa
add
mov
inc
push
pop
add
addb
mov
stos
add
mov
stc
xchg
add
mov
pop
in
dec
push
fst
scas
mov
jno
or
dec
push
mov
adcb
sbb
mov
test
pop
test
jbe
mov
sbb
movq
stos
cmpb
mov
pop
test
aam
pop
test
mov
cmc
and
into
inc
jge
out
fiaddl
pop
sub
adc
push
adc
adc
pop
add
rclb
ficoml
xchg
adc
aas
push
test
leave
adc
adc
das
mov
mov
leave
inc
push
and
sub
mov
int3
daa
outsl
push
jp
mov
fildll
and
aad
repz
leave
orl
nop
fldl
inc
clc
int
xor
sbb
inc
cmpsl
add
pop
dec
mov
adc
sahf
lret
mov
cmp
in
repz
mov
push
cld
dec
add
cmp
cmp
add
jbe
mov
inc
lock
test
ror
or
stos
and
jecxz
movsb
shl
in
push
dec
out
out
push
inc
fldl
out
xor
es
jmp
aam
push
push
mov
sub
xor
fildl
arpl
fnstenv
pop
loopne
dec
iret
sbbb
sbb
imul
mov
mov
dec
ret
mov
outsb
add
lds
ss
mov
jecxz
inc
mov
std
sahf
insl
test
es
add
mov
dec
or
test
nop
ds
pop
xchg
ja
sarb
add
cmp
faddl
or
add
cmp
mov
sti
or
sbb
and
jo
push
lods
add
das
lahf
xchg
pop
inc
dec
pop
pop
add
sub
shl
cltd
sbb
ja
andl
rcrb
mov
xadd
sub
mov
fcomps
xchg
mov
imul
addl
filds
jbe
cmc
enter
outsb
test
jecxz
xchg
ja
inc
addr16
in
mov
xchg
adc
pop
sub
sbb
test
jl
adc
add
add
je
popl
lcall
jae
clc
clc
shr
sbb
adc
loope
in
pusha
sbb
sbb
lret
or
sbb
out
aam
or
xchg
push
push
out
and
mov
xchg
push
mov
jo
ds
add
ljmp
mov
pop
insl
xor
push
xor
repz
ret
paddusb
cltd
jge
dec
xor
add
vpmaddwd
add
lock
rclb
mov
andb
mov
pop
out
in
add
push
pop
adc
push
sbb
mov
pop
cmp
jg
enter
inc
push
aas
push
pop
cmp
push
leave
fsubl
sahf
addb
je
sbb
call
mov
inc
cmp
push
add
aaa
and
repnz
jle
dec
shr
mov
lahf
add
push
dec
test
ud1
xchg
cmpsb
addb
scas
xor
jbe
add
shrl
inc
mov
sarl
or
popa
add
push
out
push
rclb
add
xchg
iret
ljmp
in
xchg
and
int
pop
cmc
rcrb
mov
aad
sub
dec
pop
test
mov
jo
and
std
pop
cld
cmpsl
sub
xchg
xchg
xchg
add
mov
aam
faddl
add
stc
xor
adc
xchg
clc
inc
xor
pop
push
loopne
cld
out
stos
cltd
std
and
cmpb
push
dec
push
subb
mov
in
adc
pop
mov
call
je
mov
movsb
xchg
pop
inc
sub
cmp
jmp
jnp
push
cmp
lahf
pop
pop
jno
rcl
stc
sti
push
dec
aas
in
pop
notb
xchg
add
fsubrl
and
jne
rcrb
adc
add
dec
mov
dec
fdivrs
inc
xor
add
lcall
inc
pop
xchg
add
sarb
sti
xchg
lods
addl
inc
adc
lret
aam
popf
data16
mov
inc
sub
dec
sbb
loopne
push
xchg
mov
loope
repnz
add
int
sbb
shrb
in
add
fsubrs
mov
test
or
filds
ret
mov
cmp
loopne
nop
mov
add
mov
jnp
adc
test
aaa
jno
jb
int3
sub
hlt
pusha
add
push
in
adc
sub
xor
cmp
add
xchg
adc
push
out
and
movsl
mov
push
movl
sub
pop
add
out
jnp
cmpl
sub
insb
rolb
inc
test
xor
xor
and
enter
sub
push
out
add
jae
add
adc
mov
imul
xor
jge
call
xchg
lret
push
ja
xchg
adc
cmp
push
jl
es
dec
push
and
push
jo
movsb
and
dec
test
in
push
dec
testl
inc
xor
lods
ljmp
shl
or
sbb
imul
lock
cs
popf
mov
push
mov
js
add
cmpsl
mov
mov
push
repz
cltd
or
cmp
ret
filds
adc
pop
in
repz
jae
jo
cmp
add
sub
xchg
mov
add
addr16
mov
notb
add
cld
fadds
dec
cmpsl
test
mov
pop
push
xor
cwtl
add
and
sbb
jne
sub
adc
push
add
add
pop
es
inc
in
sub
add
mov
pusha
in
das
cmc
fmul
push
out
test
dec
or
scas
and
call
dec
addb
dec
cmpsl
in
inc
jge
jecxz
lret
lock
mov
or
pop
std
xor
add
scas
pop
stos
mov
mov
rolb
mov
int
adc
add
push
mov
push
scas
fcoml
push
js
inc
push
inc
mov
xlat
jb
mov
xchg
std
ja
add
sbb
pop
mov
stos
dec
jecxz
jmp
rorb
loop
pop
push
jp
clc
sbb
cmp
pusha
sbb
shlb
popf
add
arpl
inc
add
aaa
in
loopne
lahf
jle
add
insb
push
pop
dec
inc
add
mov
adc
jo
testl
adcb
rcrl
inc
outsl
cltd
icebp
add
xchg
dec
xchg
enter
add
push
fisubrs
out
pusha
js
mov
and
sti
mov
mov
add
popa
rol
mov
in
xlat
add
sbb
in
sbb
call
aas
xor
dec
cmpsl
pushf
add
pop
inc
test
mov
pop
cmc
ret
aas
sbb
loop
insb
mov
dec
loope
sbb
aaa
dec
test
lahf
xchg
pop
and
add
cmp
xor
daa
mov
add
dec
dec
and
inc
mov
cmpb
add
adc
fimull
aam
ljmp
mov
fwait
pop
bt
popa
and
inc
push
ss
mov
add
outsl
outsl
test
flds
xchg
add
lds
add
pop
cmp
mov
js
gs
and
add
lret
cmp
jl
push
dec
nop
movb
pushf
in
popf
sbb
repz
jge
fdivrl
es
add
aam
fldt
xor
jno
jo
in
mov
out
int
add
mov
test
xchg
xchg
cmp
test
cwtl
jns
cmp
ret
iret
and
add
sub
scas
or
stos
add
mov
ss
fsubs
in
and
push
popl
lods
loop
add
inc
adc
loope
inc
cmp
decl
imul
cmp
sbb
cmpsl
dec
inc
mov
pop
or
xchg
mov
insl
pop
jo
adc
push
mov
xor
sub
jno
add
push
xor
sbb
mov
dec
xor
mov
faddl
mov
pushl
jae
cmp
repz
mov
inc
add
or
mov
repnz
out
mov
fs
cmp
addb
adc
nop
inc
add
and
dec
fwait
out
mov
inc
cmpsl
icebp
sahf
in
nop
xchg
xchg
sbb
cmp
loopne
sbb
adc
xchg
fstl
push
mov
out
lret
add
cmp
push
into
arpl
add
add
mov
insb
jp
add
xor
mov
jmp
pusha
and
push
pop
inc
scas
jbe
pop
adc
sbb
pushf
add
inc
ret
inc
xor
push
mov
xchg
lcall
test
in
stos
cwtl
add
push
jae
add
xchg
xchg
jg
cli
sub
and
bound
shlb
jecxz
xchg
xchg
lea
lock
loop
adc
jb
and
arpl
fisubrl
ret
addr16
scas
push
pop
inc
jge
fiadds
sahf
jp
jae
xchg
shll
rcrl
inc
adc
cwtl
icebp
shrl
mov
cmp
pop
add
push
mov
out
loope
inc
cltd
add
popf
in
lods
rclb
add
ds
testl
dec
xchg
insl
insb
adc
add
xchg
dec
add
add
add
add
shrb
negl
lods
lock
xor
pop
fisubl
insb
add
push
cmp
add
shl
xchg
pop
add
or
hlt
push
jecxz
xor
repz
loop
pop
stc
or
fdivrs
xor
xorb
mov
mov
sub
out
adc
add
pop
ret
mov
xor
lock
rorb
pop
jnp
jo
and
and
push
rcrb
sbb
pop
jbe
adc
aad
add
lods
imul
loopne
add
fs
mov
std
inc
lahf
ljmp
into
sbb
cmp
add
sub
mov
jno
add
cmc
mov
mov
push
xchg
inc
into
dec
push
ds
add
pop
cmp
iret
xchg
push
js
cltd
inc
push
lods
xchg
sbb
and
lock
dec
aaa
pop
mov
cwtl
stc
xchg
inc
sub
push
fcompl
test
cmp
jecxz
in
add
fildll
pop
fnstenv
jmp
mov
add
adc
xor
sahf
jae
daa
xor
mov
fs
std
inc
test
sbb
cmp
cmp
or
mov
fstps
add
xor
jp
jle
pop
movsb
aaa
and
test
sub
sbb
add
sti
adc
sarb
pop
sbb
mov
icebp
lcall
je
nop
inc
xor
mov
mov
es
add
cmp
add
mov
cmp
sbb
test
aad
testl
sbb
push
pusha
nop
rcr
jbe
add
fnstenvs
jmp
or
cltd
out
shll
add
fstl
and
adc
jne
xor
pop
cmp
adc
inc
push
lods
add
icebp
lahf
push
add
xchg
add
pop
push
test
pop
cld
mov
sbb
mov
xchg
pop
mov
dec
cmp
fldl
push
cmp
clc
inc
pop
xor
add
push
pop
add
dec
cwtl
jo
push
add
push
sbb
cmp
fists
xchg
pop
jo
int3
pop
or
mov
mov
push
cmp
push
sbb
inc
pop
xor
mov
mov
dec
dec
add
shll
js
das
cmp
mov
add
ss
add
mov
repnz
add
xor
repz
xchg
mov
insl
pop
adc
push
mov
bound
sub
xchg
or
add
xchg
or
cmp
inc
sub
pop
mov
jle
adc
adc
add
stc
sub
ret
js
aam
dec
movsb
stos
repnz
adc
mov
mov
pusha
inc
push
in
push
push
push
cltd
popf
sarb
mov
dec
outsb
jle
cmpb
in
clc
repnz
stc
pop
dec
jo
xor
cli
sbb
push
out
fadds
cmp
movl
and
loop
push
js
inc
mov
cld
adc
loop
pop
push
repz
mov
push
add
rorl
test
mov
adc
inc
out
test
stc
shrl
pop
jne
sub
mov
cmpsb
dec
add
push
imul
jnp
in
mov
aas
sub
jno
mov
mov
test
fcmovnu
movb
lods
sti
add
mov
hlt
or
add
mov
pusha
pop
mov
leave
cmp
mov
aaa
jecxz
sbb
mov
cmp
xor
or
and
arpl
test
negb
setne
bound
fildl
std
repnz
nop
leave
cmp
mov
scas
jmp
sub
xor
out
cld
inc
call
add
cltd
add
adc
mov
test
popf
add
inc
cmpsl
movb
xchg
outsl
push
jae
icebp
std
imulb
lcall
adc
and
pusha
cld
pop
nop
or
out
sbb
add
or
xorb
rcrb
sbb
inc
mov
test
cmp
push
pop
dec
movsl
add
shll
add
add
stos
cmp
jnp
or
xor
in
add
shll
mov
cld
mov
jl
xor
push
cmpsl
adcl
negl
xor
mov
mov
loopne
inc
add
out
mov
sti
movsl
or
arpl
sbb
jmp
sub
push
mov
add
data16
add
jne
mov
leave
or
add
ds
subb
push
add
or
iret
or
pop
adc
or
enter
in
ficoms
sub
gs
adc
std
add
inc
sbb
scas
mov
jno
idiv
dec
jmp
call
dec
or
add
cmovge
add
add
les
cmp
inc
inc
mov
mov
push
jne
pop
jle
lock
and
pop
jnp
cmpsb
loopne
icebp
es
dec
and
sbb
xorb
add
aas
int3
dec
adc
add
cmp
pop
sbb
sub
subb
roll
sti
add
adc
push
sub
jb
mov
loope
add
popf
mov
dec
mov
xor
lret
cmp
addl
stc
in
push
add
push
dec
mov
push
pop
out
mov
cmp
jae
aam
lods
pop
int3
cmp
icebp
mov
push
sbb
add
leave
push
stos
sub
adc
sub
jae
and
sar
mov
enter
repnz
adc
repz
rcrb
xlat
add
sar
xor
mov
pop
jae
or
out
pushf
push
xchg
add
ja
pop
repz
add
sti
or
leave
pop
cmpsl
mov
lahf
xchg
scas
mov
dec
or
stos
and
pushf
in
in
add
dec
sub
xor
or
mov
fs
add
test
inc
sbb
add
cmc
adc
cmp
and
mov
pop
xchg
xor
pushf
xchg
jge
add
mov
hlt
sub
mov
mov
lock
add
inc
imul
mov
pmaxub
lea
xor
adc
and
mov
mov
es
or
add
push
subb
fldt
cmp
lds
in
inc
push
mov
push
mov
int3
mov
aam
int
ror
out
pusha
fnstenv
paddw
dec
cwtl
xchg
add
fisubrs
sahf
repnz
mov
push
les
orb
inc
add
insb
jne
lds
incb
sbb
adc
add
pop
arpl
loopne
rcrb
or
push
or
movsb
and
stos
push
icebp
add
inc
inc
add
or
adc
xor
mov
jnp
in
loope
clc
shlb
xchg
pop
sbb
inc
outsl
and
jl
xor
xchg
jnp
or
out
add
mov
repnz
popf
in
and
and
pop
dec
cmp
je
add
sti
cmp
push
dec
push
daa
in
dec
add
jo
mov
ret
mov
mov
add
mov
shrl
and
dec
test
enter
inc
mov
adc
stc
mov
pop
add
xchg
mov
loop
mov
ds
xchg
test
aad
popa
jb
or
clc
or
shr
and
fisubrs
daa
mov
push
leave
and
int3
out
roll
aam
add
inc
mov
scas
mov
rorl
sub
out
sbb
mov
incl
dec
inc
push
jl
les
cwtl
in
into
pop
cmp
adc
cmp
outsl
insl
movsb
in
rorb
or
push
xchg
lcall
clc
inc
lods
mov
orb
cmp
mov
cmp
in
add
popa
addl
pop
into
leave
and
and
sbb
adc
outsb
dec
pop
andl
add
stos
shr
test
jbe
inc
xchg
jne
lahf
push
outsb
sarb
add
test
int3
enter
sarl
pop
pop
inc
add
lods
clc
add
repz
or
pop
xchg
aas
add
add
movsl
cmp
jecxz
dec
pop
add
rclb
cmp
sbb
cmp
decb
std
or
add
wrmsr
loop
inc
andb
push
cmp
dec
icebp
jp
lret
mov
dec
inc
jno
push
add
icebp
adc
jp
fbstp
add
es
and
mov
mov
aas
mov
fwait
sbb
fcoms
add
jb
call
xchg
add
stc
push
xchg
cmp
push
fdivs
add
bnd
in
dec
js
dec
jmp
xor
mov
popf
dec
add
nop
ljmp
fildll
cs
and
popl
mov
fstl
sub
mov
or
hlt
dec
add
orl
jns
icebp
imul
call
cmpsb
mov
dec
or
or
adc
add
sub
fnstcw
mov
icebp
int3
cmp
add
pushf
jo
jg
add
cmp
pushf
outsl
push
mov
and
mov
dec
cmpsl
mov
adc
in
jno
shlb
dec
mov
dec
cmpb
outsb
mov
sbb
and
mov
add
leave
or
ds
int3
mov
add
je
adc
iret
push
dec
ret
imul
int
add
xor
das
or
in
cmp
add
nop
in
inc
cld
lods
cli
incb
test
ret
inc
push
mov
enter
les
mov
cmp
loop
or
or
xchg
orb
rcrb
add
lret
adc
in
lret
in
popf
sub
test
sub
inc
and
mov
cwtl
push
decl
adc
mov
jae
add
cwtl
dec
mov
lret
and
and
cmpsl
add
and
inc
mov
fs
imul
ficoml
cld
dec
pop
add
add
xchg
mov
into
mov
enter
add
sub
repnz
jp
pop
jbe
jecxz
test
mov
in
ss
dec
mov
data16
add
arpl
in
mov
fbld
sar
mov
push
lret
fdivrs
pop
mov
sbb
call
lock
mov
add
dec
shlb
popl
mulb
push
mov
nop
or
dec
or
push
sahf
sub
mov
xchg
add
jp
test
sub
and
add
ret
lock
add
lret
jl
push
sarl
add
pushf
push
mov
dec
xchg
xor
pop
lret
cmp
dec
add
hlt
fs
ja
cmc
adc
inc
add
sbb
sub
rol
cmp
mov
cmpsb
add
fsts
mov
setg
or
fnsave
jmp
xchg
lods
ltr
xchg
jmp
ja
adc
scas
addr16
out
enter
adcb
add
xchg
jmp
pop
sub
add
add
das
imul
sbb
inc
add
xchg
fcmovb
out
leave
dec
and
sub
sub
mov
add
add
pop
or
and
movsb
and
repz
add
xchg
jmp
mov
movsb
andb
stos
dec
mov
add
fsubrs
js
dec
cwtl
cld
out
add
movb
cmp
mov
xor
adc
cld
xor
fnsave
sub
aad
sbb
sbb
and
inc
jb
add
pop
mov
out
pushf
call
add
loope
xor
add
adc
push
insl
lea
push
rol
add
mov
mov
nop
push
js
mov
mov
jle
pop
nop
call
xchg
fistl
inc
lds
xchg
adc
and
jb
add
push
lods
mov
mov
das
push
movsl
test
xchg
sub
add
jo
testb
out
orl
jecxz
les
pop
rcrb
ja
pop
dec
mov
test
shll
and
insb
cld
xchg
pop
pop
sub
dec
test
pop
xchg
push
jecxz
jecxz
push
shlb
shll
rcrb
xchg
int3
ljmp
test
rcl
hlt
sti
pusha
in
push
shrb
in
pop
inc
cmc
or
call
push
xchg
lods
dec
and
cmp
sti
jl
fcmovnbe
je
cmp
mov
movsb
cmpsl
inc
fcoms
xchg
seto
ret
fistpll
add
test
inc
add
adc
push
popf
xor
and
add
mov
xor
bound
mov
xlat
pop
pop
cwtl
add
mov
inc
outsl
add
sbb
mov
mov
xlat
mov
and
or
cmp
and
add
ficomps
and
xor
loop
movsb
add
shlb
shll
pushf
pop
and
xchg
dec
cmp
add
xor
jnp
cli
scas
add
lahf
rol
aaa
out
loope
push
loop
test
sbb
pushf
sub
stos
lock
adc
scas
inc
into
div
dec
add
sub
jno
in
jge
repnz
push
mov
and
add
add
mov
andl
push
pop
pop
or
mov
in
push
xor
add
cmpsb
jmp
inc
lahf
push
xor
and
nop
test
cmp
mov
xor
cmova
repz
out
test
test
andb
insb
add
clc
pop
js
jne
lods
loope
xchg
jmp
pop
add
add
add
lock
add
out
inc
shlb
xchg
jae
adc
imul
call
hlt
nopl
test
andl
jg
xchg
jo
adc
shlb
icebp
add
sbb
scas
add
testb
push
inc
leave
jae
cld
call
or
inc
pop
leave
dec
ds
pusha
clc
add
cmp
and
push
outsl
jle
hlt
mov
jne
inc
push
jp
sbb
sahf
fcoms
inc
or
push
in
js
add
and
cmp
add
jp
push
push
insb
loopne
dec
popa
addr16
les
xor
jb
lock
cmpb
and
out
xor
add
dec
push
pushl
lock
add
into
and
dec
pop
add
inc
loopne
cld
xlat
sahf
insb
push
fsubrl
clc
push
or
mov
and
pop
mov
cmp
add
daa
xchg
or
call
or
nop
push
jle
imul
xor
push
je
idivb
or
into
add
dec
push
imul
or
adc
cmp
js
and
mov
jae
jnp
sbb
mov
imul
mov
add
loop
adc
insb
jb
add
imul
scas
popa
in
sarb
addr16
call
les
xchg
repnz
adc
aas
stc
mov
mov
xchg
mov
cmp
cltd
push
ror
add
in
sarl
sub
shrb
insb
add
test
and
sbb
jl
add
xlat
cltd
bound
add
jne
in
in
icebp
loopne
sbbl
mov
aas
movl
rclb
loopne
add
mov
out
inc
in
std
pop
decl
or
leave
icebp
ret
pop
inc
add
mov
cld
mov
imull
add
mov
add
xchg
outsb
xor
clc
jle
or
adc
repnz
dec
jnp
sub
mov
loopne
mov
push
scas
jno
cmp
mov
repz
add
mov
add
rcrb
add
xor
sbb
aam
stos
push
lock
in
add
jns
push
aas
stos
jbe
pusha
add
movsl
push
repz
pop
add
add
mov
inc
vsqrtps
add
mov
stos
pushf
add
bnd
push
decb
mov
add
mov
add
push
mov
xor
repz
prefetcht2
inc
lahf
adc
xor
outsl
pop
nop
movsb
jmp
ss
sbb
adc
mov
je
sar
xlat
aam
mov
daa
fiaddl
pop
pop
mov
mov
jnp
lahf
ss
and
or
addb
fmuls
jmp
dec
jb
and
sbb
xor
mov
clc
fbld
ljmp
enter
js
repnz
sbb
and
clc
negl
cmp
adc
cmp
dec
clc
adc
movsb
frstor
cmp
pushl
dec
mov
xchg
dec
xchg
out
sub
out
adc
pop
cmp
lea
in
add
cwtl
cwtl
or
shr
sub
js,pn
aaa
cwtl
and
and
lds
enter
test
mov
add
add
dec
inc
faddl
bound
add
jecxz
cltd
push
in
fdivl
cmp
and
mov
enter
fldcw
add
aas
and
adc
call
lea
jg
fdivrs
push
add
adc
lds
inc
mov
push
mov
add
xchg
or
push
mov
or
popa
imul
movb
dec
adc
adc
mov
into
fildll
aas
mov
mov
rcrb
mov
add
adc
loopne
icebp
js
adc
add
dec
ss
push
sarl
test
sbb
mov
ljmp
pop
out
cmp
mov
pop
sub
dec
add
push
cmp
or
add
xorb
sub
push
pop
mov
imul
pop
lcall
cmp
jae
pushf
fcmovb
add
dec
fld
cwtl
imul
cmpb
push
pop
or
add
xor
xor
sub
rcrb
test
cli
or
jbe
push
add
outsl
push
fldcw
into
mov
jg
mov
push
add
or
add
push
int3
fcmove
scas
sbb
daa
enter
xchg
sub
or
test
add
cmp
and
push
sbb
mov
orb
test
add
jo
int
test
das
pop
lret
rcl
hlt
loopne
test
mov
outsb
pop
mov
iret
gs
cmc
out
jle
ljmp
rcrl
jmp
dec
add
lds
xchg
lahf
aam
add
das
ds
xor
mov
adc
imul
or
dec
add
sarl
lock
jp
jecxz
cmp
xor
push
js
jnp
lret
out
add
insb
push
ds
fldcw
scas
add
fwait
add
adc
jl
adc
mov
je
mov
ds
jne
mov
mov
jbe
js
jl
mov
lods
add
jbe
sub
popf
fwait
je
add
lcall
add
rolb
sub
xlat
push
sbb
and
adc
pusha
outsb
pusha
or
in
fmull
sbb
add
loopne
add
aaa
aam
adc
jbe
daa
test
or
push
add
pop
add
ss
cmp
and
inc
cmpsb
jo
test
cmpsb
inc
shlb
sahf
jnp
repz
add
jbe
and
aad
add
iret
in
ja
leave
sarb
mov
jg
sbb
jns
add
fldt
loope
sub
repz
out
andl
jl
mov
cmpsl
iret
cmp
mov
jb
push
and
mov
sbb
sub
loopne
pop
fs
add
lret
mov
pop
add
rorl
or
call
inc
push
movsl
nop
rclb
adc
xor
push
das
cmp
imul
rorl
xor
add
dec
adc
mull
xor
jmp
dec
int3
mov
cwtl
add
outsl
add
mov
add
fdivrs
mov
push
stos
jns
or
mov
or
jg
in
xchg
add
aam
das
shlb
add
test
or
pusha
or
rclb
sti
out
push
jge
test
and
loopne
add
insb
mov
inc
add
icebp
xor
stos
xchg
rclb
add
popl
insl
mov
aad
adc
add
jbe
popa
out
push
repnz
mov
adc
mov
and
bound
jge
jmp
frstor
cmpsb
fsubrl
adc
push
mov
fcomps
pop
adcl
pusha
ja
inc
cwtl
jnp
dec
xor
pushf
xchg
jne
xchg
or
push
add
lock
adc
cmp
add
mov
int3
lret
pusha
out
pop
jbe
pushf
add
jecxz
xor
pusha
push
or
add
adc
pop
ja
pop
or
adc
pop
sbb
add
adc
add
in
mov
dec
notl
mov
mov
mov
loopne
add
loope
repz
dec
add
rolb
cmpsl
sti
pop
xchg
cmpsl
jp
shrl
mov
or
test
xor
inc
fwait
test
adc
icebp
repz
sub
dec
xchg
pop
dec
cld
jl
cmpsl
push
andb
dec
push
jge
add
mov
sbb
jae
add
or
push
inc
mov
add
jns
idivl
nop
clc
cmpb
jl
sbb
mov
adc
lods
add
dec
jge
ret
push
cmpsl
mov
loopne
mov
adc
das
and
mov
add
and
mov
mov
lcall
data16
xor
mov
in
pop
jecxz
aaa
add
loop
sub
std
inc
cmp
dec
addb
fbstp
inc
or
xchg
cmc
xchg
add
pop
cmovle
pop
cmp
sub
rcrb
push
test
fsub
or
popf
dec
and
add
adcb
xchg
sub
lock
add
aad
dec
fwait
inc
into
add
pop
add
nop
popf
jb
lds
sub
mov
out
mov
or
adc
out
lods
arpl
mov
add
scas
in
js
test
icebp
add
data16
cmpsl
lahf
rolb
mov
clc
in
jmp
mov
push
add
in
mov
pushf
mov
or
or
sbb
pop
fsubr
add
cmp
jno
add
movsb
nop
gs
or
lods
push
in
cmp
mov
push
add
or
add
fisubrs
arpl
mov
and
adc
sub
xchg
add
dec
cmpsb
cmp
sbb
shl
or
dec
mov
mov
std
repnz
add
scas
pop
test
push
pop
xchg
add
jp
mov
mov
mov
jle
int3
add
or
add
dec
and
cld
pop
add
cld
rolb
jecxz
sub
jbe
sbb
sbb
pop
ret
and
sbb
int
jle
mov
cltd
or
stos
js
sbb
hlt
adc
add
repnz
lahf
sbb
out
push
adcl
mov
xor
dec
inc
xchg
movsb
bound
clc
sbb
cltd
mov
dec
add
dec
xchg
push
nop
orb
or
rorb
push
loope
add
jmp
lods
fildl
fs
lock
ret
dec
add
pop
dec
movb
cmp
pop
xor
push
and
in
add
clc
mov
lahf
jo
test
add
push
adc
cmp
fwait
and
add
shll
stos
add
test
fdivs
popf
adc
fwait
xchg
dec
test
stc
dec
add
push
movsl
ret
add
je
test
add
scas
out
xor
add
in
mov
jnp
mov
cwtl
push
add
jl
add
ljmp
add
push
pop
adc
addr16
add
popa
jno
or
jno
add
ljmp
rcl
cli
pop
mov
addl
lea
fcomip
dec
push
sub
mov
pop
je
pop
cmp
movsb
mov
rcll
neg
push
inc
int3
inc
xchg
je
add
mov
add
push
repnz
add
and
cmp
das
add
add
ror
test
pusha
pop
or
out
out
add
rol
movsb
stc
pop
push
subb
scas
add
test
lret
inc
inc
pop
mov
faddl
jne
sar
lahf
add
js
pushf
mov
add
ja
pushw
aas
jle
enter
mov
and
nopl
test
sub
pop
add
inc
cld
sub
std
cmp
jge
insb
add
adc
and
cmc
das
test
fnstenv
arpl
inc
call
sub
pop
jns
pop
add
and
add
insl
jg
jnp
pusha
notb
and
in
add
out
jl
xchg
push
in
pop
add
push
lods
lock
sub
jg
cmp
inc
dec
jns
outsl
scas
flds
mov
mov
push
mov
xor
daa
adc
and
add
pusha
inc
mov
fstpl
sbb
pop
sub
jnp
sub
add
push
add
mov
roll
divb
sub
rcrb
xchg
add
fstps
cltd
add
mov
adcl
push
fisubrs
shlb
lcall
xchg
add
pusha
scas
jge
cmp
jae
insl
jp
mov
add
rcl
movsl
cmp
add
enter
adc
out
sub
stos
or
add
cmc
loopne
or
aas
pusha
inc
xchg
sbb
adc
sub
dec
pusha
jecxz
mov
test
push
or
inc
xchg
add
jmp
dec
add
mov
add
jns
rolb
add
cmpsb
imul
daa
aam
pop
stc
cwtl
or
jne
xchg
mov
or
dec
xlat
pop
jnp
add
sahf
fmull
out
jae
ja
add
or
inc
jno
jo
add
lods
jecxz
inc
mov
test
dec
inc
jmp
adc
int3
mov
dec
das
dec
push
adc
cmp
inc
les
lock
pop
push
mov
add
in
add
insb
lock
xor
add
leave
inc
mov
add
sbb
add
mov
aaa
mov
cld
popf
loop
rorb
in
add
ror
addps
je
mov
jle
xchg
add
ficomps
add
cli
std
mov
jnp
add
xchg
add
subb
xchg
fdivp
mov
scas
push
add
jb
sahf
roll
ljmp
adc
inc
aaa
insl
and
enter
out
adc
xor
gs
add
out
push
decl
add
inc
xlat
dec
xchg
mov
out
sbb
lcall
jno
lret
inc
jecxz
repz
popf
push
xor
pusha
icebp
add
push
adc
or
mov
loopne
lret
cld
mov
pop
xchg
fidivrs
or
jo
push
gs
xor
pusha
cmp
cmpl
push
or
lea
mov
xor
test
pop
clc
xchg
or
insb
out
cwtl
sbb
fcmovnbe
es
es
rolb
dec
incb
xchg
xor
xchg
rcrb
inc
push
leave
icebp
inc
xor
out
je
out
push
jbe
jne
in
repz
jb
and
push
jmp
hlt
adc
sub
sarl
add
das
jnp
int3
mov
sbb
into
xor
enter
add
js
jnp
cli
lock
push
bswap
daa
cmp
shlb
adcb
mov
or
pop
aaa
repz
inc
icebp
mov
shrb
push
int
loop
lret
into
in
movsb
push
and
add
jge
bound
or
mov
push
scas
popa
lahf
or
fcompl
jge
aam
mov
iret
xchg
add
orb
add
mov
mov
out
inc
rcll
inc
cmpsb
xor
adc
bswap
mov
jl
sub
dec
pop
loopne
pop
stc
add
arpl
cltd
outsb
rcrb
or
mov
jb
popa
test
add
add
test
movsl
pop
push
or
je
ficomps
subl
lret
negb
add
add
pop
push
pop
mov
lret
sbb
add
dec
jne
and
mov
test
and
add
stos
cli
idivl
lahf
or
pop
aaa
rcr
add
or
xchg
popf
mov
insl
into
add
jl
sub
cli
outsb
mov
mov
mov
add
out
dec
cld
xchg
mov
rcrb
xchg
mov
sub
xlat
js
pusha
fcmovb
mov
cmp
push
mov
fisttpl
aam
adc
movsl
incb
mov
test
leave
fs
adcb
add
push
in
add
dec
sbb
mov
idivl
lock
xchg
int
sub
mov
cltd
popf
inc
ljmp
std
enter
pop
xchg
pusha
lods
mov
loop
fwait
or
repnz
add
pop
aaa
out
cmc
add
in
loope
push
and
ds
into
cmpsl
std
cmp
out
pop
and
cmp
cmp
mov
xchg
out
xor
mov
mov
xor
repz
mov
aas
jbe
sbb
insl
cmp
out
arpl
mov
loope
add
mov
outsb
insl
fisubl
pop
or
pop
nop
add
push
mov
add
add
add
xchg
or
inc
sbb
pop
add
push
mov
nop
cmp
popl
mov
movsl
push
int
lock
ror
out
pushf
add
jbe
add
add
in
stos
mov
ds
cmp
adc
data16
push
add
rcll
mov
adc
pop
inc
add
xbegin
daa
rol
mov
int
inc
lods
lock
in
xchg
rcrl
cltd
cli
iret
xlat
add
leave
push
or
dec
mov
test
sbb
rolb
inc
mov
pop
xor
fisubrs
add
inc
mov
pop
pop
mov
jle
add
data16
iret
lcall
add
inc
stos
pushf
push
rcrb
mov
mov
in
bound
xor
movsb
scas
cmp
mov
rcll
imul
int3
fisubrs
aas
xchg
cmp
add
xchg
push
out
pushf
mov
jae
inc
xor
lock
imul
pusha
in
add
sbbb
fcoms
dec
inc
adc
out
mov
xor
dec
xchg
daa
cltd
ja
add
xor
cld
jns
sbb
lahf
xor
push
ds
xchg
aad
xor
adc
add
popa
cmp
jbe
add
mov
or
jne
mov
fsubl
ret
fwait
iret
int3
cld
sbb
out
and
sahf
outsl
enter
dec
jmp
inc
fs
mov
cld
popl
shl
push
pop
sub
xor
add
mov
in
sti
leave
popw
pop
lods
add
addr16
mov
negl
mov
imul
pavgb
cmpb
out
sbb
mov
std
leave
mov
inc
or
test
lcall
mov
sbb
fcomp
aaa
outsl
xorb
mov
pop
add
xor
cmp
test
in
push
add
add
scas
push
push
ds
add
jo
scas
pop
loope
cwtl
insb
add
pop
adc
xchg
mov
cld
mov
jo
pusha
into
test
insb
xorb
add
sahf
xor
or
push
and
repz
cmpb
arpl
adc
sub
push
rolb
jno
iret
sbb
add
cli
mov
add
lea
popa
inc
test
call
mov
and
call
loop
notb
in
mov
lret
add
idivl
add
je
insl
cmpsb
arpl
cmp
stc
std
subb
mov
imul
arpl
xor
push
fldl
inc
cmp
add
lret
or
push
loopne
mov
push
rcrl
adc
inc
cmp
add
mov
call
jge
xor
cli
aad
dec
lock
inc
add
mov
mov
rorb
shr
mov
cld
dec
inc
cs
nop
pop
xchg
sbb
xor
sbb
inc
jnp
ja
xchg
jle
lret
add
mov
mov
pusha
lods
cld
enter
mov
arpl
mov
adcb
add
popa
adcl
jb
cmc
add
sub
ljmp
insb
inc
cwtl
sub
sub
dec
loope
add
mov
nop
adc
test
cmp
andb
mov
sbb
jge
jne
in
push
cs
cmpsb
push
rcrb
pop
fwait
add
lahf
pop
mov
add
jmp
dec
add
mov
mov
and
add
movl
lock
fmull
test
les
out
and
sbb
adc
adc
clc
pop
loopne
xorb
inc
vmovaps
add
jae
cs
jns
add
push
popa
xchg
xchg
inc
jne
cmp
add
shlb
pmullw
ret
sbb
cmp
aam
xor
mov
nop
les
icebp
and
add
xchg
xlat
add
sub
sub
out
inc
add
test
popa
les
sar
adc
outsl
lods
rorb
add
into
sub
adc
mov
push
aas
imull
pusha
les
jge
mov
sub
jbe
paddb
dec
jg
push
adc
inc
xchg
xchg
mov
js
ss
xchg
add
mov
inc
jp
push
mov
lods
loopne
mov
ret
cmp
xchg
les
js
fcoml
add
mov
daa
jle
push
popf
pop
mov
pop
adcb
mov
mov
or
push
ret
dec
or
sbb
and
xchg
mov
inc
pop
test
repnz
pop
mov
push
mov
inc
nop
lcall
das
pop
xor
add
popf
adc
add
add
shlb
push
cmc
rorl
push
add
jg
popf
sub
inc
movsb
add
fsubp
arpl
add
stc
test
test
and
sbb
jo
outsl
jmp
pop
sbb
cs
mov
lahf
push
js
loopne
push
in
xchg
mov
jmp
mov
and
in
add
pop
imul
add
xchg
xchg
add
mov
adc
or
cmp
enter
adc
lds
repnz
xor
adc
mov
leave
jmp
mov
cmp
mov
lret
adc
mov
mov
sbb
rorb
mov
or
push
mov
adc
mov
mov
sbb
mov
sbb
loop
imul
sbb
fs
pop
cmp
adc
test
sub
pop
adc
outsl
out
push
and
add
cmp
cltd
cmpsl
imul
inc
add
stc
xor
mov
sbb
lcall
push
sub
ja
sub
movsb
cmp
add
dec
mov
inc
add
add
cmp
jp
call
sbb
xlat
inc
adc
outsb
jmp
fneni(8087
dec
je
in
sbb
add
xor
shlb
add
movsb
sbb
fmul
fldcw
cmc
mov
mov
add
xchg
push
daa
and
sti
cmp
cltd
test
dec
fiadds
dec
push
dec
pop
lock
xchg
add
mov
hlt
pop
xor
sbb
cld
leave
jbe
shlb
cwtl
out
loopne
jo
dec
mov
repnz
add
mov
imul
orl
aas
mov
andb
fists
add
adcb
inc
sub
out
add
sbb
fwait
mov
loop
call
test
lret
inc
outsb
ss
pusha
mov
jl
enter
mov
add
pusha
mov
nop
jne
push
cmp
mov
and
fstp
sbb
orl
dec
lods
jo
out
xor
clc
mov
leave
jnp
cmp
mov
test
jp
add
push
and
xchg
xor
movb
add
fs
daa
roll
cmp
xchg
mov
in
scas
inc
add
pop
jmp
js
jne
or
ljmp
shr
iret
fnstenv
movsb
vphaddbw
test
adc
push
and
divl
shrb
add
iret
sbb
lock
nop
fimuls
dec
aad
dec
stos
add
mov
add
lret
cmc
push
testb
in
push
cmp
xchg
inc
shlb
lret
push
icebp
add
pusha
addr16
push
adc
stos
jle
add
lcall
add
cld
add
or
decl
xchg
ret
and
and
sbb
test
in
and
movsb
push
lret
add
or
pop
xorl
pusha
aas
mov
jp
mov
jge
pop
sub
fsub
pop
mov
jecxz
mov
ja
add
dec
pushf
add
sahf
outsb
aas
aas
or
add
mov
mov
imul
mov
insl
xor
dec
sbb
adc
inc
adc
sahf
sub
pop
and
dec
fdivrs
insl
imul
cmp
mov
cwtl
sub
pop
popf
inc
push
loopne
xorb
add
ss
incl
mov
push
adc
mov
pusha
pop
jbe
pop
mov
sub
dec
cli
bswap
addr16
add
adc
add
iret
or
mov
nop
add
xchg
aad
adc
incl
repz
xchg
push
cmc
aaa
in
xchg
or
andb
inc
pushf
jnp
pusha
loop
mov
loopne
aas
idivl
pusha
add
mov
xchg
repz
das
pop
add
mov
inc
or
add
stos
outsb
ja
pop
cld
jmp
fdivrs
jns
inc
sub
inc
repz
and
mov
cmp
subb
outsl
loope
scas
jnp
arpl
xor
ds
enter
add
and
push
int3
pop
cmp
aam
mov
mov
je
mov
out
adc
mov
sbbl
clc
orb
xor
sbb
orb
ss
cmpsl
cmc
test
add
add
rorl
mov
cmp
adc
pop
xchg
mov
aas
loop
add
lahf
or
arpl
ret
sub
mov
xor
push
addr16
sbb
addb
dec
adc
lock
inc
mov
pushf
addb
fldt
mov
hlt
add
cs
dec
mov
lret
dec
std
fadds
outsl
je
popa
daa
sbb
cmpl
scas
insl
inc
pusha
pushf
dec
lea
jns
xchg
jne
mov
adc
fstps
sub
mov
inc
sub
out
xchg
xor
andb
dec
add
xor
test
push
xor
pop
sbb
add
add
push
xor
add
mov
xchg
add
ljmp
pop
jno
add
in
or
jmp
icebp
xorl
inc
jno
mov
insl
ss
out
add
out
xor
fidivs
xor
inc
dec
lds
mov
test
ljmp
cli
and
jne
shlb
xchg
sbb
mov
xchg
pop
std
test
xor
xor
fistpll
inc
divl
sbb
fsubs
xor
out
xor
data16
imul
add
jecxz
xchg
xor
les
andl
dec
shlb
xlat
push
movups
xchg
cmc
imul
filds
add
or
clc
flds
fs
sub
and
leave
sub
push
sub
inc
arpl
and
pop
pusha
jo
adc
mov
jbe
mov
repnz
add
and
add
adc
outsb
xchg
mov
cmp
add
dec
sbb
add
sub
add
into
ds
dec
mov
jns
mov
js
push
or
insb
inc
fistps
and
mov
jo
repnz
mov
stos
sub
push
xor
push
add
fdivrl
inc
cld
clc
loope
inc
xchg
aam
jle
gs
pop
push
sbb
jne
sub
pushf
cli
jae
cmpl
test
packuswb
and
pop
dec
add
sub
mov
insb
iret
mov
pop
add
cmpsl
pop
inc
cmp
mov
inc
ret
sub
in
mov
inc
loop
xchg
mov
sub
adcb
sbb
xor
jecxz
inc
sub
mov
loope
ds
pusha
dec
xchg
dec
mov
incl
add
rcrl
lea
pop
test
pop
jae
xorl
mov
sbb
scas
add
js
jge
mov
jno
divb
les
xchg
inc
sub
mov
fnstsw
dec
add
xchg
divl
add
imul
or
add
adc
mov
in
add
push
pop
push
xor
scas
dec
es
clc
rcrb
pop
pop
jbe
cmp
add
mov
pop
add
mov
push
sarl
loopne
pop
or
adc
add
add
lahf
loopne
or
and
mov
imul
adc
xchg
call
mov
mov
pop
add
loopne
aas
mov
orb
dec
xchg
addb
mov
push
inc
xchg
hlt
pop
cmp
sub
sbb
jne
faddl
add
inc
pop
push
cwtl
inc
pop
pusha
add
sbb
out
aad
insl
shlb
or
add
jnp
jno
pop
sbb
cmp
lock
mov
adc
jp
popf
loopne
mov
mov
jno
add
jb
sub
xor
or
add
sarb
inc
mov
add
sbb
jno
and
clc
and
shl
cld
mov
jge
sub
test
add
xchg
test
das
xor
scas
lock
out
xchg
addb
or
cmp
jp
pop
arpl
pop
dec
xor
cmp
inc
add
ds
mov
xchg
add
lock
clc
mov
fsubr
int
cmp
mov
sub
sbb
or
ja
add
aas
push
loope
push
inc
inc
mov
mov
stos
pop
push
add
int3
int
movsl
cmp
cltd
imul
push
inc
push
dec
and
push
cmp
fwait
xor
lcall
xchg
inc
js
add
jo
push
fwait
dec
out
into
cmp
pop
add
adc
xchg
jno
ja
and
ss
jmp
shl
xor
dec
idivl
xor
add
push
jl
iret
out
add
pop
jle
fcom
in
adc
push
add
sub
andb
in
xchg
shrb
mov
sub
xchg
pop
aaa
push
add
das
cmp
cli
les
daa
sbb
or
pop
sbbb
mov
and
inc
add
repz
push
addr16
xor
cli
xchg
xchg
dec
testl
inc
roll
fdivrl
push
mov
jl
adc
aad
call
fdivrl
mov
jne
sub
push
sub
inc
cmp
cmpsl
xchg
jb
push
popf
or
stos
adc
xor
sbb
jae
add
cltd
shlb
and
outsl
or
xor
loopne
mov
loopne
sub
push
scas
add
pop
leave
bound
gs
jge
arpl
in
insl
jnp
aaa
mov
or
xchg
hlt
lods
jle
push
mov
or
sti
test
daa
mov
pop
mov
xchg
or
jl
add
fs
add
cmp
inc
jae
enter
or
adc
rorb
lcall
stc
std
loopne
nop
cmp
mov
mov
pop
sub
cmp
pusha
rcrb
mov
xor
lcall
push
inc
add
cmp
ja
cmp
xor
xchg
mov
add
xchg
jb
cltd
dec
aad
pop
cmpsl
sbb
test
sub
dec
out
call
add
pop
add
movsb
cmpsl
jg
loopne
add
mov
rcrb
add
sbb
int
pop
add
insl
mov
into
imul
andb
jg
out
mov
cmp
mov
inc
xorb
cmp
mov
push
fdivrp
add
inc
dec
push
adc
add
mov
push
xchg
cmp
add
leave
sahf
mov
inc
push
mov
cmp
dec
inc
pushf
add
push
repnz
mov
add
or
sahf
mov
psadbw
pop
testl
add
cmp
loope
mov
lret
and
pop
rep
jge
hlt
data16
dec
pop
add
ficoms
mov
add
int3
add
pop
rolb
divps
rcll
stc
jle
mov
jo
jns
rolb
in
lea
lods
sub
add
and
mov
xchg
jae
notb
arpl
cmc
stc
test
int3
or
mov
dec
adc
add
mov
fs
sbbl
adcb
xchg
add
or
add
cwtl
in
lock
dec
mov
frndint
push
jle
inc
test
out
adc
push
bound
in
popa
cmc
scas
iret
sub
imul
js
minps
outsb
add
out
not
rep
and
clts
sbb
mov
fmuls
pop
and
xchg
inc
xchg
add
mov
jmp
repz
mov
adc
jecxz
xor
nop
test
pusha
dec
adcb
mov
xchg
in
adcl
mov
or
and
rorb
push
int
push
subl
jo
lahf
subb
xchg
outsb
fmuls
add
push
xor
pop
lret
daa
mov
pop
sti
sbb
sub
rclb
cld
hlt
xchg
scas
add
mov
xor
sbb
enter
add
mov
adc
loopne
and
push
pop
das
pop
xor
lods
xor
push
push
push
cmp
pop
rsm
push
add
js
add
inc
in
gs
cli
out
jmp
data16
stc
push
or
inc
popa
mov
adcb
push
and
or
rorl
loop
loopne
roll
leave
mov
push
les
or
or
adc
nopl
insb
call
sub
pusha
mov
add
pop
pop
dec
mov
scas
pop
dec
adc
jmp
push
ss
addb
ljmp
pop
sub
add
jae
mov
jo
shlb
push
and
pop
xor
sbbl
mov
xor
mov
mov
xor
mov
xorb
mov
jne
cmp
iret
cmp
rolb
dec
cmpsb
xor
sti
inc
add
jge
fcomip
loopne
loope
mov
cltd
and
out
mov
pop
adc
cmp
fldl2t
pusha
pusha
xchg
jns
push
push
xor
pop
jae
cmp
push
sbb
out
inc
adc
pop
daa
dec
ja
aam
sti
rcr
cmp
cmp
lcall
pusha
mov
push
jne
out
pop
cld
mov
pop
pop
mov
pusha
leave
xor
mov
gs
add
je
dec
add
nop
inc
cld
aad
ret
orl
inc
push
es
scas
cmp
fildl
shlb
xchg
mov
add
or
shrb
ret
in
mov
dec
dec
sub
adc
mov
out
addl
jle
nop
fisubrl
adc
jl
push
or
sbb
mov
sub
sbb
test
inc
adc
sbb
or
xor
jnp
or
xor
xchg
xchg
sbb
add
js
inc
push
fldl
popf
inc
or
xor
or
xor
fstpl
push
xchg
into
or
icebp
sbb
xchg
cmovo
fwait
add
and
pop
and
or
prefetcht0
pop
fst
lret
mov
mov
lahf
mov
cmpsb
and
dec
inc
or
in
mov
loop
xchg
and
xor
lahf
mov
xchg
inc
jle
cmp
mov
add
and
add
inc
pop
adc
loopne
pop
xor
popa
sti
or
add
sbb
popf
fidivrl
cmpsb
pusha
mov
repz
lcall
loope
fsubr
fwait
cli
push
add
jb
xor
cmpsb
in
jle
test
je
cmp
mov
pop
cmpsl
cmpl
and
cmp
cmpb
jl
xchg
xor
add
inc
jno
adc
add
pop
lcall
jge
xor
lods
jns
add
into
adc
testl
pusha
mov
mov
mov
lds
js
sbb
mov
or
push
lret
add
clc
mov
add
ret
xor
adc
jl
ficoml
add
mov
aam
add
jmp
push
pop
imulb
andb
in
imul
fnstsw
xchg
mov
nop
aad
ljmp
fs
fldenv
and
fwait
fnstcw
mov
xor
dec
imul
arpl
out
and
xchg
ja
dec
mov
xor
mov
xor
or
arpl
out
inc
and
sub
xchg
clc
test
pusha
mov
rorl
fisttps
push
test
cli
sub
xor
add
and
dec
fsts
adc
sbb
fs
mov
or
cmpsl
sbb
mov
jge
add
push
hlt
xor
in
mov
xor
insl
cmpsl
pusha
movsb
inc
addr16
mov
fists
push
ret
movb
loopne
push
dec
inc
mov
dec
cmp
je
mov
rorb
pop
and
sti
add
lods
push
mov
or
mov
mov
and
ja
adc
lea
mov
std
inc
and
dec
mov
xor
cli
inc
movsb
add
lock
mov
repz
aaa
jno
xor
pop
out
xor
aas
adc
add
sbb
sbbb
daa
inc
lea
mov
sahf
mov
add
ss
jnp
das
jp
or
mov
dec
add
iret
dec
adc
add
jnp
cmp
pop
dec
cld
push
jge
mov
mov
jns
add
inc
lods
push
add
mov
xor
lret
mov
jo
pop
sbb
inc
or
fs
pop
orb
mov
pusha
mov
mov
lret
push
scas
adc
pop
add
xor
add
stos
mov
lcall
ret
add
xchg
inc
mov
cltd
pop
mov
jl
or
ret
jmp
clc
pop
xchg
loopne
xlat
mov
add
out
sbb
xor
mov
out
ljmp
and
fbld
pushf
push
imul
xorb
mov
fcomps
jg
sbb
aas
cld
out
and
insb
add
mov
add
int3
xor
es
lock
fisubrs
outsb
mov
in
clc
pop
add
push
jae
rcr
add
add
cltd
push
inc
jmp
lret
mov
jge
jae
add
mov
les
jnp
add
pop
or
aad
addb
pop
pop
xor
pop
addb
ret
push
std
add
mov
aam
inc
adc
shl
cmpsb
pop
imul
sbb
push
dec
xchg
jo
or
mov
pop
and
js
add
sbb
push
out
push
cmp
repz
adc
sbb
mov
leave
push
xchg
cmp
xorl
lods
out
mov
cld
imul
mov
push
add
jno
jg
add
xor
std
inc
test
fdivl
add
sub
inc
mov
sbb
pop
pusha
jo
imul
xchg
add
mov
pop
add
push
or
xor
mov
xchg
out
add
popf
and
ret
inc
mov
jmp
fistl
add
aas
xlat
iret
les
mov
pop
push
add
jge
dec
in
jns
sbb
les
add
xor
bound
jne
insl
and
mov
add
mov
pop
jnp
aaa
pop
add
pop
ljmp
clc
or
inc
mov
add
cmp
dec
mov
add
loopne
daa
add
movsl
inc
jno
inc
add
push
cmp
gs
add
popa
xor
dec
ss
insl
add
jmp
test
aas
pop
ret
and
xor
das
add
mov
sub
adc
pusha
pop
add
and
sbb
xor
push
mov
mov
sub
in
ljmp
push
lret
add
mov
push
pop
int
or
mov
mov
hlt
lock
add
or
xchg
add
push
jne
mov
incb
pop
movsb
dec
inc
cli
pop
sub
mov
lods
cld
mov
test
add
imulb
xchg
dec
xchg
mov
pop
add
lahf
repnz
stc
das
and
cmpsb
in
xchg
cmp
stos
add
inc
mov
jnp
cmp
jb
adc
out
lds
sub
cmpl
in
jo
jle
leave
nop
and
adc
add
jecxz
jb
xor
adc
cmc
pop
xlat
call
pop
test
xchg
and
adc
icebp
lret
pop
inc
add
leave
mov
mov
aad
pop
adc
inc
sbb
push
push
nop
aam
fadd
or
loop
pop
sahf
mov
xorb
xlat
shlb
mov
and
add
leave
mov
iret
and
inc
jnp
add
stc
outsl
and
jge
add
pop
popf
stc
jae
xchg
push
sbb
add
jo
in
in
add
fimuls
ret
sbb
add
push
loope
insb
call
mov
jmp
add
hlt
jp
cmovne
add
push
in
mov
add
shl
cmp
dec
or
add
and
xchg
cwtl
mov
add
scas
pop
add
bound
cmp
jnp
or
add
adc
cli
xor
jae
mov
add
sub
sbb
neg
imul
add
imul
pop
leave
dec
jecxz
pop
mov
pop
dec
jle,pt
push
push
loopne
add
jmp
sub
lock
lcall
pop
mov
rorl
rorb
mov
mov
inc
dec
sbb
or
adc
aas
andb
int3
mov
pop
test
inc
pop
js
cltd
and
mov
jae
or
int3
xchg
inc
push
dec
addr16
out
mov
in
adc
gs
dec
inc
andb
lret
add
in
add
lcall
clc
mov
sbb
ja
cld
add
mov
pusha
shlb
popa
inc
inc
xchg
outsb
cmpl
cld
add
inc
fimull
add
sub
test
aad
add
or
dec
lds
adc
inc
jae
nop
push
mov
fwait
js
pop
sub
ja
call
adc
dec
fisttpl
mov
push
or
pop
loopne
push
cmp
js
push
test
aas
jb
sbbb
cmp
addl
aas
les
nop
rcrb
outsb
push
ljmp
inc
loop
adc
mov
and
aas
iret
jo
inc
in
xorb
stc
add
fcmovbe
mov
test
mov
mov
mov
add
and
lret
lods
add
mov
call
cmpb
into
in
xchg
leave
mov
movsb
inc
dec
add
loope
push
jnp
mov
add
inc
fiaddl
inc
cwtl
popf
dec
movsl
lock
outsl
cmp
push
add
mov
inc
add
lods
mov
add
xchg
mov
sbb
mov
pop
in
adc
lahf
daa
add
pop
jno
jecxz
les
xor
arpl
pop
stos
incb
dec
mov
test
adc
pop
and
test
adc
ja
lods
xchg
push
int
xor
and
ret
and
data16
into
out
add
adc
popf
dec
je
shlb
icebp
add
mov
add
push
jge
hlt
ss
push
add
loop
fsts
dec
cld
shlb
outsb
aaa
sbb
or
imul
push
in
fistl
int3
xor
mov
mov
inc
fidivl
jecxz
add
mov
ret
aam
dec
insb
adc
mov
out
inc
add
inc
fwait
and
fsts
push
jmp
or
in
mov
roll
mov
stos
lock
cmpsl
bound
cmp
jmp
pop
ret
xor
shld
jnp
shlb
add
test
fdivs
adc
xchg
les
and
lcall
add
pop
fimull
add
loope
stc
mov
pusha
in
mov
sbb
push
fwait
jp
jae
or
repnz
jbe
stc
jno
test
mov
pop
or
mov
jle
add
loop
push
cmpsl
dec
inc
clc
nop
js
mov
pop
shlb
in
add
addr16
sbb
mov
rcrb
add
jbe
xor
dec
cmp
int3
aas
popf
scas
subb
dec
nop
lods
cltd
pop
movsb
add
jle
mov
add
addr16
pop
inc
push
push
faddl
inc
xchg
mov
push
sahf
outsl
add
fimull
aam
call
scas
movl
popa
loopne
cmp
adc
cltd
sti
enter
dec
enter
dec
in
sahf
jae
aaa
inc
add
xor
movsl
xlat
lock
cmp
std
push
xchg
add
pusha
je
arpl
dec
add
rcrl
dec
stos
in
pop
aas
push
mov
add
jmp
sahf
adc
xor
push
test
fistps
test
insb
mov
lret
gs
push
jle
dec
cmp
dec
add
sti
andb
sub
lret
mov
add
jb
or
inc
push
push
inc
add
sbb
cmp
xchg
add
cmp
out
ret
cmpb
add
sbb
sub
xchg
mov
adcb
ret
add
iret
rcll
pop
fdivrs
inc
or
add
add
outsl
jle
and
push
loopne
mov
pop
add
testb
packssdw
call
inc
ret
sub
pop
xor
incl
xor
mov
xor
dec
xchg
pop
out
add
inc
mov
add
test
sarl
cmp
fcompl
cmp
adc
into
and
jle
or
add
xor
rorl
push
add
mov
outsb
popa
xor
adcl
or
nop
movsl
mov
add
xchg
or
jno
sub
mov
pop
loop
out
xor
fmull
add
sbb
das
mov
mov
outsl
or
add
add
ds
push
orl
sbb
outsl
int
jecxz
mov
lock
inc
out
cwtl
dec
pop
jae
aas
orl
or
hlt
sub
xor
sub
or
add
lret
push
mov
fwait
cld
push
inc
and
dec
add
cmpsl
aas
xor
fndisi(8087
mov
inc
aad
imul
cwtl
or
jmp
adc
pop
pop
adc
bnd
push
adc
pop
push
sbb
or
orl
cmp
inc
out
push
lock
repnz
aaa
imul
pop
lock
cmp
inc
sbb
cmc
cld
mov
and
mov
ss
cmp
call
sbb
sbb
jle
lret
mov
pop
sbb
sbb
inc
out
sti
inc
jg
xor
push
pop
jecxz
cli
lods
inc
jns
call
cmc
adc
cmp
add
aas
test
and
dec
daa
jbe
inc
mov
aad
lock
xchg
sub
dec
clc
and
ror
ja
es
sbb
div
adc
lods
add
or
lods
cmp
cmp
adc
int
cmpb
fisubl
add
cmp
inc
pop
outsb
add
sub
xchg
xorb
shl
pop
pop
push
mov
stos
pop
pop
push
insb
mov
leave
or
push
pusha
scas
lock
repnz
jnp
add
push
mov
add
bound
movsb
mov
in
out
and
or
mov
add
inc
dec
inc
push
ljmpw
and
insb
rclb
xchg
mov
xchg
je
imul
and
mov
les
test
out
mov
inc
les
daa
adc
stc
pusha
adc
pop
in
adc
adc
jne
cmp
in
push
pop
divb
out
mov
mov
mov
xchg
inc
bound
ss
add
cwtl
inc
outsb
mov
xchg
add
fldt
addps
arpl
jl
stos
xchg
movsl
out
lret
add
jne
pusha
dec
adc
or
push
ja
es
pop
pop
loop
jne
lock
jg
dec
fs
sub
repnz
repz
int
ret
ds
jno
and
inc
lret
add
stos
pop
fnstenv
xor
inc
lea
add
adc
adc
xor
add
mov
in
and
aad
cmp
and
mov
jl
add
mov
pushf
add
ret
mov
mov
xchg
jno
movsl
lea
loopne
lods
pop
sbb
pusha
xchg
and
sub
add
xor
cmp
mov
jne
add
xchg
sbb
pop
inc
insl
out
add
insb
subb
mov
add
inc
fistpl
jne
cmp
mov
cmp
mov
pop
test
jp
add
lock
or
xchg
fwait
xor
mov
sbb
jecxz
jae
pop
lret
add
inc
add
mov
add
movsl
cmp
xor
outsl
jnp
hlt
add
test
jns
lods
or
sbb
cs
add
lret
cmc
jmp
pop
xchg
es
sbb
lcall
cmp
add
mov
inc
out
mov
cmp
fmulp
add
sub
iret
stc
insl
ret
hlt
xor
sbb
mov
add
and
sarl
cltd
sbb
setbe
aaa
bound
pop
scas
out
or
add
mov
rcll
xchg
inc
nop
outsl
jbe
push
xor
lret
pop
jl
jo
sbb
scas
or
mov
push
cltd
cmp
lea
adc
jbe
pushf
pop
inc
insb
mov
xchg
fildl
mov
or
incl
mov
push
push
rolb
out
jle
sub
pop
js
lock
or
pop
mov
in
idivb
inc
leave
lea
add
and
pop
test
add
scas
pop
push
sbb
jb
xor
pop
ret
sub
xor
out
xor
add
sub
push
push
js
or
shlb
push
jne
add
adc
cmpsl
add
mov
mov
add
cmp
add
xor
or
push
dec
shlb
scas
inc
cmpsb
mov
sub
push
shlb
mov
mov
imull
inc
xchg
add
data16
andb
xchg
and
add
inc
mov
add
shl
xor
repnz
cmpsb
add
adc
pusha
mov
inc
ljmp
jg
pop
inc
shrd
popl
repnz
fdivp
mov
sbb
add
xor
aad
arpl
js
xchg
add
cs
cmp
sub
rcrl
xchg
stos
nop
add
dec
mov
dec
call
jg
jne
inc
xor
mov
js
sub
xchg
mov
jne
xor
inc
add
jmp
jne
add
js
in
dec
int3
or
icebp
and
sub
adc
cltd
js
mov
ds
push
push
sub
jns
and
pop
inc
test
pop
xchg
jae
sbb
loopne
fwait
add
jle
dec
push
imul
addb
std
mov
add
xchg
shl
dec
add
jecxz
int3
mov
cmp
adc
cmp
sbb
test
sub
or
lret
jb
cmp
movsb
pop
scas
and
ss
mov
cmp
push
andb
mov
xlat
and
push
popa
jecxz
add
cltd
movsb
ja
cmpsb
mov
idivl
mov
and
push
fwait
into
rcrl
std
imul
add
ret
stos
add
jp
je
ds
add
add
mov
jmp
add
daa
sub
iret
sbbb
and
sbb
ja
ljmp
xor
jns
mov
adc
imull
add
mov
jns
stos
push
add
cmp
lds
push
movsb
stc
push
sub
push
cmp
pushf
lahf
jnp
lods
add
cmp
lock
cmc
add
jmp
mov
push
mov
stc
shll
ljmp
nop
xor
les
out
push
ret
push
xor
mov
fdivrl
cmp
pop
or
dec
sbbl
roll
insl
fdivrl
les
aaa
imul
mov
xor
pop
dec
mov
test
daa
pop
and
data16
jns
dec
out
shll
push
add
in
inc
push
push
clc
insl
sbb
push
loop
iret
pop
imul
mov
xor
pop
subl
mov
inc
and
test
shr
add
dec
frstor
push
add
repz
mov
cmpsb
adc
enter
cmc
dec
dec
and
push
sbb
icebp
add
and
sbb
sub
and
add
jp
sub
cmpsl
je
push
fldt
out
shlb
xor
in
add
inc
and
xchg
ret
push
dec
test
add
sti
add
cmpsb
jmp
jnp
add
mov
faddl
mov
mov
xor
stc
add
or
pusha
xchg
add
push
sub
cltd
das
mov
and
sub
inc
adc
sub
and
fs
in
pop
add
or
sub
xor
mov
push
jmp
shrb
movsb
repnz
pop
xchg
idivb
pushf
xchg
sbb
pop
mov
je
hlt
sub
inc
jmp
outsl
or
icebp
es
pop
inc
cmp
jl
std
dec
sbb
mov
lock
sahf
xor
add
sbb
jae
jbe
push
ja
lcall
sub
sti
push
pop
loope
fsubs
out
add
mov
push
mov
lahf
cld
icebp
inc
ja
add
rcl
pop
stos
cmp
test
andb
add
mov
das
cmpb
push
inc
mov
add
test
loope
into
add
mov
sbb
cli
andb
inc
mov
cmc
push
pop
testl
icebp
in
notb
add
xor
subb
les
imul
xor
arpl
mov
add
sti
mov
add
loopne
gs
ss
test
out
jb
jl
mov
pop
ja
jne
fldcw
xor
xchg
push
pushf
cs
scas
or
jns
add
ret
aam
cmp
cld
cmp
cmpb
mov
add
jb
sub
xorb
or
aas
pop
add
std
rcrb
add
push
or
mov
add
invd
jae
dec
orb
xchg
dec
add
loope
xlat
hlt
out
loopne
cs
icebp
sbb
mov
dec
cwtl
xor
adc
shl
mov
cmp
inc
lea
in
je
push
std
pop
icebp
testl
push
xchg
sti
add
cmp
jmp
sub
mov
xchg
inc
xorb
cltd
xor
out
add
movsl
push
xchg
mov
loopne
rep
xlat
mov
push
stc
mov
push
jbe
xchg
add
in
cmpsb
mov
add
icebp
jmp
repz
sub
dec
in
xchg
dec
adc
xchg
dec
icebp
cld
push
sub
mov
push
jle
loopne
xor
pop
lock
leave
in
rcll
pop
pop
ret
outsl
incl
or
inc
imul
adc
pop
jmp
shlb
and
sahf
pop
mov
cld
add
hlt
jno
mov
lcall
mov
cmp
or
xchg
inc
idivl
add
ljmp
add
sub
push
add
dec
or
or
mov
xor
mov
ja
add
and
push
add
cmc
loope
aam
cmpb
in
sub
insl
pop
negb
add
xor
lcall
inc
fcoms
pop
je
or
jp
jns
inc
insb
icebp
subb
cld
xor
xchg
mov
call
aaa
pusha
cld
adc
ds
adc
pop
shl
andb
cmp
mov
into
mov
or
sub
jmp
fimuls
aaa
stos
sbb
lds
push
xchg
jmp
cmp
cwtl
iret
xchg
stos
xor
jae
jle
gs
adc
pop
stc
scas
or
cmpb
add
adc
adc
sbb
fdivrl
cli
adc
sbb
cmc
sub
or
and
cmpsl
mov
stc
add
xchg
cli
scas
movsb
test
sbb
sbb
pop
add
out
out
adc
mov
jae
xor
cmc
push
add
or
imul
xchg
ja
stos
and
ret
push
pop
aam
jle
and
add
push
in
mov
add
pop
sbbl
enter
pop
or
add
sub
bound
out
xor
jae
mov
andb
ret
hlt
pop
adc
hlt
sbb
xor
sbb
xor
or
rclb
push
add
mov
mov
lods
outsl
out
adc
push
movsb
add
les
add
inc
mov
or
cld
cmp
sbb
imul
add
sbb
cli
movb
call
mov
ret
shlb
out
gs
addr16
in
fldcw
stc
int3
cmp
movsb
xor
incl
bound
clc
push
pop
shlb
add
cld
add
dec
sbb
add
lods
or
outsb
inc
lret
or
add
stc
push
roll
adc
pop
push
lahf
dec
add
jp
mov
mov
pusha
jmp
mov
sbb
ds
test
loop
in
aaa
ss
bound
adc
push
cltd
sti
xchg
jae
lea
sub
sbb
mov
pop
add
mov
mov
pop
push
pop
and
pop
lret
sbb
add
loope
repnz
stc
add
sbb
inc
mov
sub
roll
cmp
pop
sbb
pop
mov
fiaddl
daa
pop
mov
inc
xchg
and
adc
pusha
sub
pop
aaa
in
add
outsb
aam
add
xlat
sbb
into
cmp
adc
jecxz
dec
push
pushf
add
loopne
arpl
pop
mov
out
or
dec
add
add
add
outsl
sub
and
mov
xchg
insb
pop
lcall
jne
mov
icebp
pop
add
iretw
dec
mov
push
js
loopne
shl
aas
adc
ss
dec
test
mov
je
add
jno
insb
add
xor
pop
jne
ja
add
push
sub
in
add
inc
cli
add
inc
push
and
add
xor
push
xor
andb
fsubrl
jl
add
insb
ror
adc
sbb
movsl
xor
sbb
mov
inc
repz
je
outsl
popf
inc
shll
arpl
gs
add
dec
aam
stos
adc
mov
xor
jo
rcrb
ss
inc
repz
add
and
cmp
xorb
loopne
cld
int3
xchg
push
loope
lods
add
repz
test
sub
sub
enter
xchg
xor
xchg
loop
add
dec
mov
idivb
sarl
xor
add
nop
dec
add
inc
fwait
add
shl
insl
push
call
cs
push
jo
adc
and
and
mov
rorb
mov
add
jmp
dec
xchg
in
or
cmpb
cs
mov
sbb
test
outsl
mov
adc
daa
add
mov
mov
stos
es
adc
fiaddl
aas
fcmovne
or
data16
addr16
sbb
jns
adc
dec
add
push
sub
das
in
add
xor
iret
fs
addb
push
jl
sub
xorl
xchg
add
inc
repz
add
push
xchg
insb
add
or
shl
xor
pop
add
sbb
push
xchg
dec
or
mov
pop
pop
cmpsb
dec
push
add
push
adc
xchg
cmpb
ret
pop
add
dec
aas
test
nop
or
std
sahf
add
loop
add
arpl
das
add
testb
fs
xchg
lret
lock
dec
insb
add
jne
lods
mov
jmp
sub
cmpsb
pop
movsl
daa
push
pop
fadds
inc
mov
into
mov
xchg
outsb
test
pop
mov
lock
adc
lock
cmpb
pop
andb
xchg
add
cmp
gs
orb
adc
outsb
lock
push
hlt
sti
push
mov
mov
sub
andl
and
out
fnstsw
add
pop
dec
arpl
inc
test
mov
inc
xchg
jae
fists
cmp
dec
sbbl
add
clc
push
popf
pop
mov
add
rcrl
push
cmp
push
mov
dec
fldcw
test
and
es
jb
jbe
add
fadds
cmp
inc
xor
ror
js
sti
add
pop
xchg
sbb
insl
xor
ficompl
pop
testl
testb
xchg
cmp
cmp
jbe
dec
subb
push
xchg
jmp
ds
add
cmp
add
cmp
addr16
in
cwtl
add
cld
xchg
mov
loopne
ja
mov
loope
add
sbb
add
ljmp
comiss
lahf
mov
pop
cmp
mov
cltd
mov
add
mov
pop
and
enter
lds
xchg
mov
dec
and
sbb
repnz
xlat
dec
mov
push
mov
dec
mov
add
movb
fiadds
inc
in
daa
xchg
loope
adcb
lahf
dec
sbb
add
add
xchg
pushf
cmp
add
jbe
lock
ret
adc
pop
jne
add
dec
jp
add
sti
jno
shll
lods
mov
push
jg
js
int
cmp
jmp
subl
add
add
sahf
shl
mov
xor
pusha
cmpsb
outsl
mov
inc
cmpb
sub
or
hlt
imul
jo
icebp
js
add
xor
leave
enter
add
negl
hlt
aas
lock
movsb
dec
xchg
add
xor
pop
xchg
ret
pusha
cmp
mov
aad
stc
jne
sbb
xor
add
jae
cmovo
daa
add
addb
dec
lock
add
cmpsl
rol
push
enter
dec
mov
pop
add
les
repnz
neg
loop
xlat
pop
dec
gs
adc
push
mov
loopne
dec
and
mov
in
dec
cmp
insb
ret
sbb
insl
mov
mov
stos
mov
aad
mov
jmp
and
add
pop
jbe
mov
mov
jge
inc
test
dec
int
imul
nop
insb
bnd
xor
pusha
je
and
int
repz
in
cmpb
cmp
jbe
rorb
jb
xor
pop
jo
mov
or
out
mov
pusha
xchg
jmp
ljmp
add
add
mov
xchg
adc
cmpxchg
in
pop
sbb
jns
cwtl
filds
lahf
repz
test
je
or
mov
and
xorb
sub
loopne
jbe
add
adc
jbe
xchg
mov
add
sbb
sbbl
add
and
scas
mov
add
jns
out
cld
inc
mov
adc
imul
inc
movsl
cmpsl
inc
push
mov
jae
mov
iret
test
add
push
jle
jl
sbb
pop
or
or
dec
sub
gs
js
push
popf
nop
mov
add
addl
adc
sbb
popa
out
xor
iret
fisubrl
mov
xchg
add
add
sbb
incb
lock
xlat
adc
movsb
in
outsl
sti
dec
dec
add
sbb
adc
push
scas
orl
push
xchg
int
xor
aaa
outsl
push
mov
pop
callw
sbb
mov
test
sbb
fwait
ds
sbb
gs
sbb
sub
pusha
test
push
movsl
stos
addl
or
jg
imul
std
jo
addb
cmpsb
rorb
pop
jg
jne
arpl
jge
push
sti
or
and
mov
or
sbb
add
mov
iret
xor
int3
aad
test
out
add
jne
imul
js
aam
add
ds
ljmp
add
mov
mov
sbb
sub
pop
aas
mov
popf
shll
mov
push
add
add
xabort
dec
xchg
fwait
or
nop
cmp
dec
lcall
cmp
add
dec
push
jge
movsl
add
mov
xchg
pop
xorb
add
mov
add
cmc
out
js
xor
fcoml
cltd
fwait
cwtl
pop
adc
stos
test
leave
add
adc
xchg
fs
dec
sbb
pop
cld
pop
pop
dec
inc
bound
popf
push
lds
insb
xor
enter
rcrl
cwtl
movsl
sbb
loopne
in
cli
decl
pminub
inc
adc
jge
add
push
push
xchg
test
test
cs
jne
nop
jmp
roll
sbb
enter
add
push
es
cmpsb
leave
pushl
fbld
into
fsubr
into
cmp
outsb
loope
int
stos
xor
leave
mov
dec
mov
pop
and
pop
add
and
push
mov
inc
dec
stc
add
shrb
sahf
add
cltd
xchg
pop
inc
addl
ret
cmp
mov
in
xor
jae
test
sub
int
jl
push
stc
int3
lock
mov
sub
into
adc
or
jge
xchg
dec
cmc
push
inc
orb
mov
and
push
or
lock
es
pop
xor
fcomps
shr
pop
movsl
pop
or
cmp
cltd
add
xor
mov
lahf
add
dec
je
mov
ljmp
sbb
fsubp
ret
mov
and
and
pop
sbb
push
pusha
ret
sarl
add
inc
lahf
pop
int3
nop
add
jbe
adc
adc
mov
sub
adc
rclb
mov
cmpb
insl
cli
xor
mov
rcrb
mov
sbb
pusha
jp
cmpsl
call
mov
and
clc
push
push
sub
add
cmpsl
adcb
sbb
mov
add
add
rcrb
dec
addr16
sbb
call
out
aas
sub
or
outsb
adc
fldl2t
pop
daa
inc
ds
pop
sbb
add
js
xor
add
shr
cmp
and
dec
mov
dec
pop
adc
sbb
andb
mov
sahf
add
test
xor
loopne
pop
or
push
xchg
fmuls
lret
xor
cmp
ret
dec
sub
test
pop
sbb
stos
movb
xor
xchg
xchg
add
dec
adc
jge
sbb
sahf
adc
and
or
neg
adc
jne
add
ja
add
addr16
loopne
add
lcall
pop
repnz
push
jae
inc
hlt
enter
das
loop
mov
adc
mov
jmp
inc
push
and
js
sbb
add
nop
adc
sbb
xor
and
add
in
adc
inc
add
and
dec
mov
sbb
es
add
imul
jae
cmc
cmp
cmp
aad
mov
sub
inc
iret
pushf
add
ret
jno
mov
dec
mov
dec
dec
shlb
sahf
pop
add
loop
cmp
push
jecxz
pushf
inc
push
cwtl
cmc
lcall
int3
cmpsb
add
xor
out
hlt
add
cld
push
xor
int
aas
test
add
sbb
cwtl
inc
cmpsb
shlb
dec
xlat
stc
xchg
pop
fstl
and
dec
leave
mov
xchg
imul
mov
push
je
pop
mov
cltd
and
dec
cltd
test
or
push
xchg
pop
inc
shrb
add
mov
xor
test
add
xor
sub
pop
pushf
ret
add
sarl
pusha
dec
mov
xor
dec
jl
leave
lock
pop
mov
clc
gs
adcl
aaa
cltd
adcb
add
aad
xchg
and
movsb
and
loopne
sarb
ror
dec
pop
mov
pop
sbb
jne
push
pusha
xlat
and
and
es
and
jbe
inc
pop
mov
mov
xchg
mov
or
lods
ds
test
push
in
shrl
mov
xchg
xor
mov
dec
push
mov
mov
add
js
xchg
xor
dec
add
xchg
add
and
adc
and
fdivl
pop
scas
pop
pusha
ret
jl
ret
pop
cmpl
aad
ljmp
pop
mov
sahf
int3
push
popf
daa
lahf
test
adc
add
mov
jmp
sbb
pusha
fisubl
dec
bound
dec
xchg
je
pop
add
pop
lret
mov
xor
ret
fnop
dec
mov
inc
cmc
lods
jns
add
xlat
cmpsb
adc
mov
xor
push
add
lret
data16
mov
fmuls
or
add
es
imul
inc
mull
cld
mov
add
cmp
rclb
pop
lahf
mulb
imul
mov
js
imul
loop
sbb
pop
into
pop
adc
inc
jle
and
push
pop
hlt
adc
sub
inc
lods
js
sub
iret
inc
mov
nop
pop
pusha
sbb
xchg
cmp
data16
xchg
shll
add
inc
sub
insl
sbb
pop
dec
out
jle
ljmp
lret
xchg
pop
mov
imul
xor
inc
rclb
push
push
std
and
adc
dec
inc
sub
or
notb
iret
cwtl
mov
fwait
movsl
call
push
rolb
aam
cmp
inc
jne
pop
inc
mov
in
pop
imul
dec
popa
lds
mov
mov
and
shrb
mov
jecxz
pop
call
popa
xor
xchg
arpl
xchg
pop
stc
cmc
mov
ja
mov
lret
test
sub
cmp
out
push
insl
jge
cltd
dec
add
lds
mov
aas
mov
jl
in
mov
fadds
pop
stos
mov
aad
cmp
ret
or
jl
xchg
in
add
add
pusha
fiaddl
movsl
xchg
add
jmp
arpl
mov
call
dec
test
mov
inc
xchg
cltd
xchg
xor
adc
loopne
and
inc
jmp
imul
sub
sarl
lods
add
ds
add
pop
adc
push
lock
sbb
leave
mov
outsl
add
jp
adc
inc
jo
mov
add
mov
and
mov
mov
mov
dec
aad
ds
jp
insb
xchg
jg
xchg
in
jg
xor
aam
mov
or
mov
test
mov
leave
xchg
hlt
cmp
add
sub
nop
loopne
daa
sbb
and
aad
adc
xchg
cmc
cld
inc
int3
pop
adc
cld
loope
dec
push
fdivl
xchg
je
add
repnz
pop
js
mov
out
stc
cltd
sub
sbb
add
add
or
outsb
lds
lret
repz
dec
subl
mov
pushf
add
push
and
mov
ret
enter
leave
jo
inc
jl
pop
shlb
dec
test
xor
add
test
mov
dec
xor
and
add
orl
test
mov
push
imul
out
out
push
leave
xchg
or
les
mov
call
push
cmc
pop
dec
dec
dec
xor
push
cmp
jo
pusha
test
mov
add
leave
push
repz
cmp
daa
fnstenv
mov
cltd
daa
add
xor
push
sub
rcrb
inc
jg
mov
in
inc
testb
outsl
repnz
or
xor
jnp
add
shlb
cwtl
push
shlb
leave
adc
add
or
out
in
jno
mov
iret
mov
and
adc
cmp
and
in
fisttpll
loopne
int
rclb
mov
jg
adc
push
xchg
pusha
adc
cmp
cmpl
lock
or
lods
movsb
inc
es
pop
outsb
jge
sbb
or
mov
pop
xor
mov
repnz
inc
inc
xlat
cmp
rcll
mov
xchg
lea
cmp
leave
adc
adc
dec
or
xor
mov
sti
mov
popa
inc
aas
cmp
adc
sub
enter
lea
sbb
or
push
and
mov
mov
and
imul
xchg
pop
fstpt
popa
add
rolb
inc
bound
dec
mov
push
push
iret
add
jb
inc
dec
adc
xchg
adc
xorb
add
xlat
add
sahf
orl
mov
fs
roll
add
pushf
jmp
add
jp
push
aam
mov
insb
adc
add
mov
test
sbb
cld
pusha
mov
dec
xchg
mov
sub
enter
cmpl
int3
shl
popa
test
ja,pn
pop
add
repz
orb
add
lahf
push
inc
arpl
leave
les
add
sub
loop
shr
add
enter
stos
mov
push
jno
pop
mov
push
mov
imul
nop
push
or
lret
xor
test
add
inc
pusha
arpl
add
cmp
and
add
cwtl
test
lcall
push
add
mov
pop
outsb
shlb
shll
mov
add
nop
int3
in
popa
sub
or
fs
dec
daa
inc
jl
xor
add
call
fildl
orl
nop
xorb
nop
and
enter
jge
sub
or
sub
int3
add
push
push
testl
or
and
aam
fbstp
xchg
sbb
aam
and
or
add
push
xor
mov
and
jne
cmp
insl
mov
mov
insb
in
add
int3
sub
xorb
test
adc
mov
xor
in
sbb
inc
xchg
mov
xchg
add
add
stos
mov
aam
pop
push
xchg
cmpsl
and
mov
js
lcall
mov
inc
lds
je
cmc
push
sahf
nop
add
outsb
xchg
push
test
add
add
iret
adc
aad
mov
or
out
adc
xor
loopne
and
mov
mov
daa
pop
xchg
sub
dec
mov
mov
fbld
setno
and
xorl
adc
pop
xor
test
enter
mov
fs
xor
ret
call
cwtl
and
add
pusha
mov
outsb
xor
leave
pusha
leave
xor
rorl
add
mov
shlb
fsubl
or
clc
imul
pop
addr16
stos
dec
popf
pop
push
mov
dec
cs
popf
bound
test
xor
and
sub
roll
xor
insb
leave
dec
mov
call
enter
adcb
dec
and
sar
add
scas
int
mov
mov
fsubrs
mov
es
xchg
movsb
add
loopne
pop
sbb
lret
cli
sub
pop
std
dec
and
loopne
rcr
push
mov
psubsb
add
mov
fs
repz
adc
dec
into
xchg
shlb
mov
mov
jp
aad
mov
mov
mov
and
xor
and
das
mov
lods
cwtl
xchg
push
daa
add
mov
mov
add
lret
pop
or
jns
imul
add
loop
ret
cld
mov
dec
add
adc
dec
icebp
push
sarb
and
inc
inc
movsl
insb
adc
int3
fdivr
test
add
stos
popf
insb
loop
add
or
xchg
bound
lret
jg
xor
dec
inc
arpl
fmuls
fisttpl
jbe
cmc
sub
and
xor
call
mov
cmp
xchg
add
mov
popa
leavew
dec
sbb
or
dec
or
ret
xlat
subb
dec
dec
jb
cmp
add
inc
push
xchg
lock
and
pop
lock
les
add
xor
inc
and
mov
push
and
or
out
xor
and
imul
ljmp
xchg
or
fisubrl
mov
adc
addr16
aas
arpl
sub
cmp
push
xchg
cmp
shr
xchg
adc
add
ret
hlt
and
pusha
jmp
leave
bound
and
call
dec
loope
jge
pop
inc
test
roll
push
js
mov
sbbb
mov
incl
and
mov
or
sbb
adc
incb
or
std
mov
adc
jno
lret
lock
add
or
jp
push
pop
inc
loopne
mov
or
dec
add
mov
sbb
mov
xchg
sbb
sbb
inc
int3
sub
lds
hlt
jp
inc
xchg
call
add
sbb
pushf
xchg
add
mov
cmp
pop
xchg
fsin
push
loopne
push
mov
rcrb
in
mov
mov
pop
in
jnp
aad
jmp
insb
pop
dec
inc
test
mov
xor
mov
inc
mov
pop
and
pop
es
movsb
clc
add
mov
pop
popa
fistl
xor
popf
mov
pop
add
rcrb
imul
enter
sarb
outsb
cmp
fists
cmp
jmp
pop
cmpsb
aas
push
dec
jbe
stc
cmp
sarb
xchg
push
add
repnz
jge
imul
aam
add
sahf
rolb
loop
or
or
add
dec
add
xor
and
rcrl
addb
aas
mov
dec
lock
ror
mov
inc
add
or
loopne
push
pop
jmp
mov
pop
imulb
add
mov
fwait
int3
add
push
adc
add
pop
popa
aad
or
fimull
lods
push
jo
rorb
inc
pushf
cmp
dec
lcall
push
je
mov
sbb
pop
cwtl
jno
cmpsl
out
and
pusha
mov
mov
andl
pop
adc
cmp
add
aas
adc
dec
pop
or
xor
xchg
cmpsb
add
mov
add
mov
jo
mov
decb
sub
add
enter
mov
jns
lods
fwait
xlat
push
add
test
and
jbe
arpl
repnz
mov
add
xchg
jl
lea
aaa
cmpb
mov
cmp
and
mov
mov
test
and
ror
hlt
mov
add
jmp
and
fs
dec
and
rcrb
pop
pop
or
dec
lret
movsb
inc
cwtl
xchg
aad
mov
xor
fbld
es
xchg
xlat
call
push
lods
jl
mov
xor
mov
pop
cmp
gs
add
arpl
jae
or
or
xchg
mov
jge
aaa
into
fcmove
addr16
adc
loopne
sub
test
shrl
add
leave
stc
mov
imul
jns
es
sub
and
inc
loope
mov
into
add
push
loopne
int
ljmp
inc
pop
xchg
icebp
push
adc
lret
and
mov
mov
fsubrs
cwtl
or
in
orl
mov
daa
xchg
dec
loop
lods
or
movsb
pop
test
xor
xor
mov
sti
shll
adc
adc
mov
or
sub
mov
call
sub
mov
lea
shlb
cmp
sub
sub
leave
pop
add
cmpsb
pop
dec
clc
loopne
add
loope
dec
enter
icebp
adc
and
mov
les
add
scas
cmp
push
mov
fsubl
add
mov
sub
out
pop
shl
pusha
lock
repz
xchg
mov
add
imulb
sub
add
jbe
jmp
inc
xor
mov
movsl
xor
and
add
jns
and
cli
or
add
add
push
xchg
xchg
mov
nop
dec
out
xchg
and
fcmove
pop
cmp
aaa
adc
lahf
mov
movsb
mov
stos
test
fsubrl
inc
xchg
jmp
sti
push
mov
mov
es
int3
push
mov
and
call
add
push
and
and
js
cmp
and
je
arpl
cs
inc
push
and
pusha
shlb
fcom
mov
push
and
jb
sub
dec
std
dec
shlb
es
and
and
cmp
mov
push
cmpsl
mov
add
lock
shlb
mov
lcall
hlt
push
xchg
test
cmp
or
pop
push
lds
mov
cmpsb
push
aaa
or
arpl
add
in
shlb
cmp
xor
rorb
fadds
testb
dec
sti
or
mov
add
and
loope
hlt
jo
mov
mov
mov
rolb
lret
fists
mov
dec
loope
jmp
faddl
decb
divl
adc
push
loope
xor
and
add
adcl
xor
imul
outsl
negb
xchg
push
mov
cmp
sbb
xorb
xchg
int3
adc
add
mov
mov
add
out
mov
pop
or
pop
push
adc
and
xchg
mov
loopne,pn
pop
pop
inc
adc
mov
inc
mov
push
cmp
jge
stc
aas
pusha
push
in
dec
add
ret
adc
and
lahf
cs
mov
sbb
add
ret
icebp
aad
xor
out
scas
xchg
cmp
xor
push
ds
int
sub
rolb
into
xor
sahf
dec
dec
inc
xor
inc
cmpsl
push
orl
test
inc
mov
mov
testb
jne
mov
or
data16
add
mov
test
out
push
cli
jb
add
xchg
cmp
int
sarl
dec
and
les
xor
jbe
pop
pop
pop
xor
bound
ja
jp
and
dec
and
les
add
xor
inc
adc
pop
aaa
nop
pop
rcll
enter
add
loop
jns
fsubrl
mov
stos
xor
push
pushf
sub
push
lahf
aam
in
insb
std
sub
repnz
loop
gs
sbb
shrb
je
loopne
nop
push
loop
add
push
xchg
xor
call
cmp
jo
add
and
mov
xor
cmp
adc
inc
fs
gs
adc
mov
jne,pn
stos
popf
xchg
add
pop
std
outsl
ret
sub
fdivrl
mov
jns
adc
xchg
and
js
repz
cmp
push
daa
push
je
mov
and
add
adc
pusha
add
pop
mov
add
sub
push
cli
fcoms
mov
dec
cmp
adc
shll
inc
or
dec
shlb
or
add
mov
mov
cld
sub
frstor
push
pop
mov
cltd
sub
pop
enter
fmull
nop
cmp
insl
sub
dec
xor
mov
pop
popf
jg
enter
sub
add
xor
sub
adc
outsb
add
lret
sub
mov
cmpxchg
std
pop
dec
push
cmp
icebp
scas
pop
loopne
mov
adc
inc
pusha
adc
scas
mov
mov
daa
add
dec
ljmp
lcall
cmpsl
add
add
jne
cmpb
jo
cmpsl
cmp
rolb
lret
pop
jns
sti
into
incl
xor
pop
cli
mov
inc
add
ss
jmp
ror
incb
pop
mov
icebp
cmp
xor
push
out
mov
add
mov
cmp
addl
push
mov
pop
cltd
xlat
in
or
sbb
js
jae
jmp
push
or
rol
dec
lahf
inc
daa
mov
add
jns,pn
data16
push
xchg
cmp
pusha
ret
in
in
push
xchg
pop
or
mov
cmpsb
int
test
imul
add
sti
adc
es
clc
in
add
push
add
jp
cmp
xor
call
jae
fmuls
popf
mov
pop
jge
out
ljmp
gs
add
pop
push
push
mov
or
int
add
fwait
adc
into
xor
sub
cmp
mov
xor
add
mov
cmp
fsub
pop
ret
les
movb
xchg
in
pslld
ja
inc
mov
shll
pop
add
test
cmp
hlt
lock
mov
add
cmpsb
xchg
aas
ret
sub
inc
xor
icebp
movsb
sub
out
gs
add
out
mov
and
in
add
mov
jbe
mov
cmp
pop
sbb
cmpsl
testl
cltd
xor
add
aaa
mov
push
filds
iret
cld
mov
loope
int3
add
insb
add
pusha
lret
mov
jmp
das
ss
add
iret
push
outsl
sbb
repz
mov
xchg
fs
adc
sbb
jb
and
fisubl
jo
fwait
lock
imul
add
jbe
pop
insb
inc
and
movsl
jecxz
insl
pop
and
add
pop
insb
mov
lret
adc
add
sbb
xchg
fs
and
xor
out
pop
jb
in
or
mov
incl
imul
std
mov
add
pop
sub
push
insb
ret
pop
add
mov
pop
jnp
loopne
mov
cmp
and
sub
inc
addr16
add
inc
adc
in
or
dec
je
pop
aad
mov
add
xchg
and
add
pop
mov
push
repz
adc
push
fisubs
push
sbb
rcrb
mov
push
mov
nop
sbb
add
adc
dec
or
dec
mov
or
sub
inc
fsubr
fistl
popa
cmp
cmc
cmpl
sub
mov
inc
sub
push
hlt
add
inc
dec
loop
cmp
push
jno
xchg
scas
mov
bound
add
pop
xchg
call
cmpsb
leave
push
iret
adc
add
fs
ret
sub
fbld
sbb
pop
mov
fs
test
dec
xchg
addb
clc
pop
add
push
js
pop
sub
adc
sub
call
jge
xor
nop
ljmp
dec
fxch
pop
loop
adc
or
inc
lret
fs
mov
fadds
frstor
push
dec
loopne
xor
mov
mov
mov
xchg
int
add
imul
xor
pusha
push
cltd
pop
and
or
call
jo
out
addl
lock
push
mov
repnz
stos
jns
test
pop
inc
mov
xor
mov
or
xchg
pop
adc
jne
loopne
gs
pop
sub
mov
nop
xchg
stos
add
adc
loop
pop
fnstsw
and
mov
jns
mov
add
sbbl
add
popa
xchg
xchg
stc
pusha
lahf
pop
adc
test
loopne
jle
call
inc
aam
pop
add
js
push
xchg
xchg
loop
cmp
jno
sub
fs
clc
dec
lahf
and
cmp
pop
scas
call
inc
lret
push
lret
pusha
or
sub
push
sbb
mov
add
mov
stc
daa
cmp
imul
sahf
push
loopne
in
ja
jae
pop
mov
in
fildl
fs
add
in
dec
or
and
add
xlat
lahf
dec
icebp
hlt
adc
movsb
mov
sub
add
mov
icebp
dec
cmpsl
mov
lods
nop
mov
in
mov
popa
jecxz
mov
shrb
sbb
in
mov
mov
loopne
mov
mov
mov
test
sbb
add
dec
idivb
or
cli
test
dec
bound
mov
push
mov
int3
ljmp
inc
imul
adc
scas
iret
xor
add
hlt
push
mov
aaa
add
cmp
and
clc
stos
mov
or
xor
jo
cmp
jl
jno
jb
dec
sub
les
int3
lods
xchg
pop
test
sbb
sub
push
mov
data16
cmovg
adc
fildll
int
js
pop
lahf
arpl
pop
inc
int3
imul
cmp
add
rclb
mov
and
sarb
sub
push
gs
loopne
or
stos
mov
dec
clc
fadds
pop
rorb
int
pop
add
push
cmp
into
rorb
push
inc
lods
outsb
xor
rcrb
int
inc
pusha
add
push
push
add
mov
jo
lahf
push
shlb
lahf
fwait
adcb
add
lock
aas
into
dec
mov
popa
shrl
add
repz
or
sbb
mov
sub
add
cmp
leave
sbb
enter
test
jo
scas
xor
mov
mov
enter
sbbb
stos
push
ret
add
sarb
adc
lods
or
mov
andb
pop
add
pusha
sub
mov
jle
daa
push
cmpsl
and
arpl
sub
sbbl
aam
sub
pop
shll
mov
inc
dec
pop
es
xor
xor
dec
inc
test
call
rolb
add
push
lret
adc
sbb
xchg
lahf
dec
push
push
jl
sbb
mov
dec
pop
add
cmp
add
jecxz
pop
ret
mov
in
pop
cmp
orb
add
mov
add
xor
mov
das
je
loope
stc
js
add
lods
push
mov
lret
add
test
sub
sbb
inc
in
js
xchg
mov
insl
or
lcall
dec
push
mov
cmpsl
sbb
nop
test
xchg
push
icebp
lahf
dec
mov
cmpb
mov
add
push
rolb
and
add
insb
and
sub
arpl
mov
movhps
test
mov
mov
mov
pop
push
mov
je
pop
mov
inc
cmp
inc
mulb
add
cmpb
in
cmp
clc
mov
sbb
std
fwait
ljmp
push
call
call
stos
lock
jae
mov
clc
bound
and
add
iret
dec
push
mov
sarb
movsb
add
sbb
jne
push
cs
cs
sbb
lods
fdivl
jl
stc
add
sahf
push
jns
inc
jo
ror
add
inc
orb
or
mov
orb
aad
dec
adc
sbb
test
in
hlt
orb
leave
les
dec
push
and
xchg
add
jno
mov
aaa
add
or
mov
daa
inc
and
sub
call
xor
push
xchg
lock
push
mov
or
es
push
add
mov
movb
sub
cmp
inc
cli
ret
add
ss
mov
dec
jge
es
out
mov
pop
enter
pop
pop
jecxz
test
mov
mov
imul
push
xor
sub
jmp
push
mov
nop
imul
mov
dec
call
push
push
fidivs
mov
mov
lock
mov
test
mov
jecxz
cmp
pop
sub
sahf
into
mov
pusha
push
loope
push
ds
add
ficoml
add
mov
sarl
adc
je
aaa
push
mov
shrl
sub
orb
movb
jb
jbe
mov
out
daa
xchg
sub
test
add
bnd
lock
imul
add
pop
filds
aaa
sub
sbb
pop
add
mov
pop
add
in
mov
jne
sbb
sub
pop
cmp
addr16
jg
es
das
fwait
in
repz
mov
pop
fidivl
sub
add
adc
aas
mov
inc
test
add
xchg
cmpsb
xor
xor
sahf
mov
testl
jb
push
out
add
lahf
sub
mov
cmp
push
sbb
inc
sbb
pop
cmp
mov
adcb
shrl
out
sbb
jo
adc
mov
nop
inc
scas
dec
push
sarb
outsl
add
push
loop
aam
push
add
dec
push
jns
inc
adc
xchg
and
inc
mov
dec
lds
in
cmpl
push
or
sbb
fdivs
jl
jne
in
sub
jg
cmp
out
movsl
and
inc
inc
add
lret
mov
inc
cmp
pusha
lock
into
or
in
mov
cmp
insb
and
mov
popf
add
bound
add
inc
into
dec
mov
adc
sub
hlt
or
push
aam
mov
jecxz
sbb
lock
push
mov
mov
mov
wbinvd
aam
cmp
je
dec
add
lea
fdivl
js
add
icebp
rcrl
add
fcomps
mov
scas
outsb
mov
inc
add
sbb
sub
mov
push
mov
movl
sub
mov
rclb
lds
loop
xchg
add
mov
sub
dec
xor
adc
pusha
lods
and
dec
mov
sbb
cmp
push
add
pusha
sarb
lret
fdivl
cli
cmp
fisttpl
push
or
mov
ffree
outsl
bound
xor
jae
add
mov
fistps
adc
push
call
aas
or
xor
shll
sbb
inc
xor
nop
jo
dec
insb
cmp
sti
scas
lret
inc
clc
pop
movsl
mov
add
push
into
xchg
les
add
xchg
jo
sub
sahf
push
adc
jmp
or
mov
and
adc
pop
idivb
sbb
cld
sub
mov
faddl
repnz
lcall
in
lods
mov
jle
dec
in
sbbb
add
out
pusha
outsb
mov
jle
outsl
pop
cmp
and
dec
adc
dec
cmp
push
fs
xor
adc
pusha
jo
dec
repz
xchg
mov
xor
xchg
lods
xlat
jb
add
push
loopne
rorb
fsubrp
pop
test
pop
or
cmp
outsl
mov
add
sbb
or
adc
add
mov
sbb
and
cld
mov
mov
roll
hlt
jns
or
popa
movsb
adc
rcrl
cmp
sti
adc
adc
cmp
fmuls
dec
ret
xor
in
jb
xor
xchg
xlat
mov
adc
out
mov
pop
sub
cmp
sub
out
inc
movsb
fcomps
sub
mov
mov
rol
nop
jb
sbbb
mov
dec
add
leave
aaa
sub
push
pop
mov
mov
and
cld
andb
push
add
pop
loopne
jg
sbb
sub
adc
leave
push
add
and
dec
mov
xchg
inc
je
jle,pn
jo
sbb
inc
fildl
stos
inc
lods
xchg
call
out
int
mov
and
cmp
mov
push
mov
mov
add
mov
or
mov
ret
xlat
add
mov
push
mov
and
jno
movups
mov
rcrl
clc
pop
and
cmc
inc
sub
xor
push
sbb
adc
lock
int3
dec
cltd
push
and
loopne
mov
push
dec
inc
mov
jnp
inc
jne
cmp
clc
jp
out
lea
inc
xor
pop
xchg
mov
xor
fiadds
icebp
es
mov
mov
ffree
mov
aam
add
and
add
push
mov
in
cmp
je
clc
mov
mov
add
out
cmp
cmp
sub
fcmovnb
daa
shlb
int3
add
in
test
stc
add
jnp
scas
je
gs
add
xlat
inc
lret
cmp
add
popa
rcrb
dec
les
fisttps
push
and
mov
loop
pop
inc
mov
mov
mov
add
cmp
js
and
cmp
imul
out
push
add
jmp
stos
push
fldl
and
cmp
shl
in
mov
push
dec
shrb
xchg
cmp
jp
xor
sahf
xchg
push
cmpsb
mov
sbb
in
mov
sub
lret
into
ss
pop
inc
jno
xor
add
mov
pminsw
adc
add
ret
loope
xchg
dec
mov
enter
lock
and
add
lds
cmp
out
adc
jecxz
nop
dec
dec
rcrl
jae
cwtl
test
or
inc
loope
lahf
pop
int
sub
pusha
loop
add
outsl
add
ret
xor
lock
lock
pop
testb
add
adc
and
test
popa
dec
notl
or
daa
pusha
pop
xchg
cmp
cmp
fchs
mov
sub
and
dec
dec
loop
andb
push
in
adc
adc
xor
call
outsb
adc
sbb
cmp
or
push
push
mov
dec
pop
xlat
sbb
mov
sbb
mov
inc
mov
mov
addr16
push
jno
sub
inc
outsl
adc
test
push
jg
cld
mov
dec
add
movsb
sub
sarl
jbe
movsb
push
lods
add
sbb
in
sbb
sub
and
sbb
in
outsl
xchg
xor
sbb
stc
into
or
lahf
push
aam
push
or
rcll
push
jbe
add
scas
iret
ja
fsub
mov
and
xchg
sti
mov
add
xor
mov
mov
imul
shlb
arpl
pop
aam
movsb
xchg
add
jl
and
je
mov
mov
ffree
in
cmp
loope
out
pop
sub
or
xor
push
fbld
add
mov
mov
mov
add
mov
jge
adc
movsb
ficomps
jbe
jb
cmp
sub
add
sbb
xorb
stc
aam
push
sub
xchg
fnstsw
imul
add
dec
push
in
pop
inc
cld
push
and
add
loope
or
inc
mov
cmp
out
fldt
shlb
inc
pusha
or
outsl
xchg
shll
dec
adc
xchg
test
movsb
pop
sub
add
jne
repnz
shl
inc
pusha
jns
pop
mov
mov
sub
ja
lahf
push
cmpsb
aam
call
jmp
adc
rcrb
pushf
adc
shr
rclb
adc
pop
jo
aad
dec
lock
insl
dec
imul
jp
dec
jecxz
rorb
mov
jbe
and
mov
push
adcl
cli
clc
pop
movsb
adc
jno
xor
fmuls
xor
call
push
and
push
test
add
lods
or
pop
pop
pop
add
ja
jmp
mov
repnz
mov
jmp
add
pop
inc
loop
adc
sub
jmp
or
mov
adc
xchg
and
add
push
out
cmp
lret
xchg
and
sub
pop
mov
js
lar
repnz
rolb
mov
xor
pop
jnp
mov
mov
push
test
cmp
or
lcall
arpl
je
pop
lods
enter
outsl
add
fdiv
scas
sbb
add
mov
ss
mov
mov
add
add
adc
dec
test
pop
and
inc
push
or
and
cmp
and
enter
push
shll
push
inc
mov
mov
cmp
cmc
pop
in
lock
out
or
pop
in
jl
mov
and
cs
cmpsb
clc
pop
ja
imul
sbb
lods
out
add
or
dec
daa
jbe
nop
pusha
test
test
mov
lret
adc
xchg
add
dec
adc
enter
sub
push
cmpl
stc
push
mov
rorb
aad
mov
jp
sbbl
pushf
push
xchg
pop
out
xor
dec
push
sbb
faddl
test
or
flds
fwait
call
mov
sub
clc
fcoms
mov
add
adc
lds
xchg
clc
pop
dec
shlb
add
mov
push
jo
mov
wbinvd
dec
xor
dec
dec
mov
inc
nop
in
testl
add
xlat
inc
ljmp
call
iret
add
sub
push
lret
add
out
mov
pop
mov
mov
push
imul
add
dec
or
movzbl
cli
xchg
mov
sub
outsl
dec
pop
and
pop
cmpb
sbb
mov
or
sub
popa
call
add
imul
lret
dec
add
jae
cmp
mov
out
je
xor
inc
lods
inc
xchg
add
daa
xor
stos
sbb
push
sbb
pop
mov
jne
cmp
xor
dec
icebp
mov
in
xor
shl
add
mov
sahf
scas
jb
add
add
add
cmpsb
pop
dec
jl
in
je
mov
hlt
test
add
sub
addb
aas
subl
in
hlt
dec
int
mov
xor
les
orb
add
int3
xlat
out
sub
in
repnz
lock
ret
shlb
xor
cltd
ror
push
out
mov
stc
inc
xor
movb
inc
mov
and
loopne
lock
clc
nop
adc
outsb
insb
stos
sub
dec
jle
mov
jmp
stc
shlb
pop
inc
add
outsl
pusha
fcoms
inc
fwait
les
cmp
mov
add
cwtl
mov
add
js
mov
pusha
jp
call
adc
mov
cmc
pop
add
push
pop
imul
lret
dec
sar
mov
add
rclb
in
mov
mov
cltd
adc
out
sbb
sbb
sbbb
sarl
out
mov
pop
adc
gs
stc
jp
dec
mov
mov
mov
aas
inc
jns
xor
pop
nop
aas
add
int3
adc
cmp
mov
ljmp
insb
dec
leave
add
push
jne
and
inc
inc
add
inc
jge
aaa
mov
jns
push
fcmovu
add
mov
pop
xor
test
sub
ja
pop
addr16
pushf
aam
enter
and
sbb
add
outsl
int3
xor
pop
enter
add
xor
jle
pushf
adc
lahf
std
xorb
xor
scas
pop
je
jne
js
inc
dec
int3
rcrb
dec
mov
jb
xchg
hlt
pusha
and
dec
mov
fmuls
jae
jmp
push
xrelease
mov
add
inc
push
lea
mov
test
stos
or
push
push
pop
arpl
jle
xor
dec
mov
or
mov
or
inc
sub
sub
orb
movsb
js
adc
or
mov
add
push
out
and
ret
mov
ljmp
jnp
popf
stos
mov
cmp
add
in
xchg
bound
dec
push
daa
pop
mov
enter
inc
push
push
invlpg
cwtl
and
pop
fs
cmpsb
loopne
inc
cmp
dec
jl
mov
add
sub
cmp
dec
push
popa
shll
dec
int
call
scas
xchg
add
in
lret
rorb
mov
jge
sub
adc
jecxz
add
aaa
mov
cld
fsubrp
jo
adc
mov
xor
daa
xor
lods
dec
adc
sahf
push
sub
and
mov
mov
addb
push
fadds
add
pop
leave
int3
xor
mov
int3
mov
cmp
xchg
or
cmp
lods
add
jns
lahf
pop
push
inc
enter
mov
push
inc
ja
out
ljmp
mov
adc
cmpb
pusha
add
incb
push
jnp
fsubrs
add
fmul
push
push
or
pop
or
xchg
in
inc
and
rorb
xor
sahf
add
inc
repnz
inc
xor
mov
and
add
cmp
lret
pop
popf
mov
daa
and
pop
jmp
pusha
sub
adc
push
inc
adc
mov
add
sbbb
clc
sahf
push
sub
mov
mov
and
js
les
adc
cwtl
fsubs
mov
call
adc
xor
inc
add
mov
cmp
xor
mov
in
cmpsb
js
and
lret
add
and
jno
adc
and
dec
addr16
add
and
scas
orb
xchg
jmp
lods
add
inc
xchg
sbb
dec
jnp
mov
or
xchg
cmpsb
loop
fsubs
dec
push
add
mov
lea
and
fmul
in
jmp
icebp
sbb
and
pop
movsb
and
xor
jno
mov
inc
add
js
rclb
mov
popa
imul
xchg
mov
lret
jle
sbb
dec
adcb
out
push
repnz
pushf
add
xchg
outsb
mov
pushf
cld
cwtl
movsb
mov
loope
je
add
stc
hlt
add
call
fsubrs
push
mov
inc
xor
jbe
sbb
jo
bound
mov
push
sbb
jns
pop
popf
add
arpl
inc
fcompl
pop
int3
add
cmp
xchg
inc
cltd
fsubl
ret
push
shl
daa
sub
add
popa
xor
add
aad
rcll
fistpl
sbb
in
rcr
cmp
sbb
iret
rolb
pop
repz
or
sahf
push
and
mov
sbb
shr
dec
adc
push
xor
and
add
xchg
je
cs
jbe
adc
add
mov
mov
push
or
cmc
mov
mov
sbb
xor
shrb
clc
mov
daa
or
cmpsl
dec
fs
mov
mov
mov
add
pop
pop
pop
lcall
dec
jl
into
dec
shll
pop
call
popf
out
add
sub
test
or
mov
dec
inc
aad
adc
fists
fidivrl
adc
push
cmp
add
add
sbb
int3
push
sbb
jl
add
jb
pushf
fcoml
add
sbb
push
push
push
fcmove
test
add
ljmp
lahf
inc
or
stos
sub
mov
ds
sarb
cmp
sbb
arpl
notb
cmp
sbb
js
jmp
loopne
mov
fcomp
and
xor
cmp
pop
or
mov
test
mov
or
enter
ret
lea
jne
std
cli
jbe
adc
pop
popa
and
out
xor
sub
call
mov
cmpsb
sbb
add
lcall
mov
mov
sbb
xchg
inc
movsb
sbb
add
sti
pop
outsl
je
xor
ret
sub
cli
dec
lods
in
add
sahf
iret
pop
idiv
pop
sub
mov
push
add
push
xlat
in
jmp
add
leave
repnz
pop
push
jle
xchg
pushf
dec
inc
adc
jo
dec
pop
and
sub
jae
les
and
test
cwtl
xchg
cmpsl
cmc
xchg
das
xor
loopne
add
dec
mov
push
adc
and
mov
pop
loop
mov
mov
rorl
aam
xchg
cs
sti
inc
inc
loope
in
inc
test
jns
mov
add
scas
dec
daa
push
sub
jecxz
sub
push
nop
inc
mov
and
add
mov
add
mov
in
scas
mov
movsl
dec
ror
fsub
mov
in
dec
loop
daa
pop
push
and
out
dec
or
outsb
enter
pop
cmp
inc
and
ja
fstl
dec
pushf
sub
and
dec
lret
xor
nop
dec
int
xchg
les
les
add
out
mov
pop
cli
call
push
sbb
mov
jmp
repnz
outsb
jp
jbe
cwtl
mov
xor
inc
movsb
or
mov
adc
cmp
int3
and
inc
inc
mov
lret
pop
clc
lea
mov
popa
mov
add
or
lock
in
imul
jns
out
int3
cmpsl
push
add
loop
mov
dec
jbe
sahf
push
mov
and
add
jge
mov
or
mov
sub
outsb
push
xchg
mov
sub
aas
xchg
test
and
pop
jmp
mov
arpl
dec
inc
nop
or
push
xchg
xchg
mov
or
test
dec
mov
clc
fs
out
add
jb
lods
and
jnp
mov
loop
and
inc
mov
jns
out
and
cmp
adc
pop
xchg
les
mov
push
adc
mov
test
xchg
add
sarl
or
repnz
add
stc
outsb
jne
or
mov
pop
jno
push
dec
xchg
cs
imul
loopne
stos
xchg
xchg
xor
bound
pop
xor
popl
cmp
mulb
icebp
add
add
insb
jno
add
in
mov
cmp
push
xchg
jb
aas
inc
enter
clc
pusha
nop
cmp
aad
sbb
test
add
ja
je
inc
imul
rorb
add
pusha
fdivs
xorb
push
push
cmp
push
xchg
push
pop
adc
hlt
test
hlt
add
xchg
and
and
out
pop
cmp
out
int
xor
pop
in
adcb
and
push
add
lcall
mov
xor
add
xchg
rcrb
pop
xchg
cmp
enter
sbb
cld
aas
leave
sub
sarl
add
push
es
fsubr
mov
pop
jnp
nop
mov
pop
sub
aaa
adc
pushf
inc
pop
les
loopne
fs
jne
add
dec
add
stc
int3
add
cmpsl
insb
in
daa
sbbb
sbb
loopne
out
jge
pop
inc
sbb
adc
test
aad
in
cmp
add
xor
adcl
sbb
fdivr
clc
add
jecxz
aad
sbb
pop
xor
sub
fwait
subl
lahf
std
int
mov
sbb
in
jecxz
dec
add
xchg
shll
inc
in
jno
mov
inc
adc
adc
cmpsl
sbb
ret
mov
push
outsl
pop
loopne
jo
mov
ja
xchg
jo
push
jns
in
mov
xchg
out
jo
adc
xor
add
test
daa
testl
and
dec
sti
repnz
dec
xor
pop
and
test
scas
ljmp
aad
fwait
inc
adc
out
jae
insl
or
mov
dec
xchg
mov
inc
adc
enter
inc
add
cmpb
and
out
push
aam
mov
mov
js
mov
je
xchg
xor
fs
add
mov
inc
mov
pop
int
sbb
lahf
enter
enter
push
mov
inc
cld
jae
mov
mov
pop
testb
jmp
xor
inc
sub
pop
mov
inc
aam
push
ret
or
xor
ds
outsl
xor
enter
add
push
adc
jmp
roll
adc
and
inc
xor
shlb
cmp
and
sbb
mov
add
nop
ljmp
cmp
roll
movsb
pop
icebp
test
fs
add
out
add
popf
rcrb
mov
mov
ret
dec
pop
das
add
cltd
shlb
jnp
js
in
add
pusha
xor
sub
adc
out
pop
pop
int
je
and
and
mov
and
leave
pusha
sub
aad
loope
in
push
shll
cwtl
in
adc
mov
mov
ret
xchg
test
inc
ljmp
fsub
mov
fsts
pop
add
sti
es
sub
xor
rcrb
lcall
or
and
push
rcll
ljmp
lock
jl
jecxz
pop
add
push
inc
and
mov
cmp
xor
test
mov
sub
inc
push
cwtl
stos
aam
and
mov
adc
ljmp
jg
push
repnz
mov
mov
rcrb
hlt
push
pop
dec
sbb
xchg
movl
fmul
inc
stos
sahf
das
xchg
or
cwtl
incb
sbb
test
add
mov
mov
add
cmpsl
dec
mov
fmulp
in
add
outsb
cld
mov
cltd
mov
and
roll
xchg
insl
js
add
fsubrl
loopne
adc
cmp
mov
dec
rolb
xor
sbb
in
fwait
mov
lods
rol
cwtl
sbb
sbb
icebp
sbb
jge
lret
and
in
test
xchg
or
icebp
mov
jae
shrl
cmpsb
xchg
in
push
add
or
rolb
mov
inc
repnz
jmp
movsb
nop
adc
mov
fsubl
mov
call
xchg
push
sarb
mov
das
mov
cmpsb
insb
push
pop
movsl
mov
sbb
div
inc
lret
add
mov
xchg
insb
adc
mov
fwait
push
add
out
xchg
cli
imul
daa
push
subl
mov
mov
adc
std
pop
out
dec
pop
repnz
mov
inc
cmpsl
in
xor
mov
sbb
add
lock
mov
lcall
test
jb
push
cmp
je
call
loopne
out
cmp
sub
cli
jge
add
xchg
add
mov
pop
shrl
sub
mov
jl
aad
lret
cmp
pop
clc
cltd
mov
push
inc
inc
cmp
push
fs
inc
es
shr
xchg
cmp
adc
stos
jmp
pop
pop
cwtl
push
ljmp
xor
or
pop
and
push
sbb
xchg
mov
inc
sbb
mov
aad
push
jae
inc
mov
push
or
je
popl
int3
add
adc
fsubrl
jnp
push
add
aam
push
xor
in
mov
cs
cld
inc
and
clc
call
sbb
push
sub
inc
and
adc
add
dec
inc
jns
insb
les
lock
mov
mov
fidivrs
add
icebp
xchg
add
jno
lock
inc
jl
icebp
dec
lea
std
mov
jno
aam
fwait
loope
push
orb
jae
mov
sbb
sub
pop
jge
pop
and
loop
bound
xchg
into
arpl
jp
mov
fsts
push
jb
cmp
pop
adc
dec
add
ljmp
add
mov
pop
mov
dec
sub
xchg
leave
fcoml
jl
test
mov
cmp
adc
add
push
cli
fadds
jnp
mov
xchg
aas
sbb
jmp
sbb
faddl
pop
es
bound
sub
mov
jbe
and
sub
xchg
int3
mov
cmpsb
add
jg
sbb
xchg
scas
movsb
rorb
in
cmp
in
add
cmp
xchg
adc
insb
mov
or
or
mov
push
je
xor
or
out
popf
outsl
and
bound
push
cwtl
add
inc
std
pop
lea
or
shll
fidivrl
cmp
pop
or
xlat
mov
in
inc
es
mov
xlat
pusha
sti
push
and
sbbl
sub
nop
in
outsl
xlat
sarb
cmpsb
mull
sarb
inc
push
cmp
cltd
orb
xor
inc
jecxz
inc
sbbb
add
mov
jp
jnp
shrb
pop
insb
aam
push
decl
sbbl
mov
jnp
es
aaa
add
loopne
and
sbb
push
cmp
sub
in
scas
add
outsl
faddp
loope
jl
sbb
add
sahf
repnz
or
push
adc
in
js,pn
jo
or
cmp
pop
pop
add
leave
fldenv
mov
lea
mov
pop
dec
xchg
pop
push
and
or
xor
or
loop
push
fcom
adc
mov
pop
jp
movsb
lock
mov
pop
xchg
adc
mov
and
aam
add
and
mov
fwait
stc
sbb
loopne
sbb
sbb
cmp
stos
cmp
xlat
mov
stos
movsl
mov
imul
rclb
pop
push
push
pop
inc
test
sarl
leave
dec
pusha
shrl
xchg
push
xchg
xor
push
xor
inc
pop
lock
add
movsl
test
push
push
mov
mov
push
xor
xorb
mov
call
cmpb
or
fists
or
loopne
fwait
test
lods
rclb
xchg
jp
scas
rorw
cmp
lahf
cmp
cmc
add
testl
shlb
cmp
call
cmp
cmp
jmp
cli
jns
push
add
lock
mov
ret
je
test
pop
xor
xor
xor
mulb
pop
xchg
cwtl
jnp
shll
int
clc
push
adc
test
out
push
rclb
fdivl
sub
add
mov
rorb
adc
les
mov
push
or
stc
pop
rclb
or
dec
stos
jecxz
sub
pop
add
lea
mov
shlb
stos
and
and
outsb
mov
or
and
je
scas
pop
fs
mov
add
adc
bound
add
inc
cmp
inc
ljmp
lea
fiadds
loopne
jle
out
dec
sti
inc
push
loope
aas
and
lret
dec
outsl
popl
in
dec
dec
pushf
ja
sbb
adc
les
sarl
and
xor
add
std
or
movsl
inc
jo
add
mov
xchg
mov
add
mov
pop
shl
lahf
cs
adc
push
loopne
sahf
adcl
jo
fimuls
ds
sbb
adc
xor
js
pusha
rcr
add
lahf
inc
jno
mov
jp
leave
xor
dec
pop
gs
test
mov
push
cmp
cmp
ljmp
lcall
fmul
sbb
push
rclb
sbbb
setns
cld
jge
bound
mov
pop
aad
cs
shl
or
mov
mov
or
push
add
fwait
shrb
lret
inc
mov
mov
adc
jb
inc
sub
mov
lret
jo
shl
fs
inc
dec
mov
aad
adcb
add
clc
pop
dec
dec
and
and
dec
xchg
hlt
add
jmp
add
xlat
sarb
insb
inc
and
ret
loope
push
adc
mov
lds
add
xchg
test
push
aam
dec
jo
and
nop
sbb
movsb
add
in
lock
out
cld
lods
sub
outsl
nop
cmp
fdivrs
cli
mov
push
or
iret
pusha
clc
pusha
out
jge
jns
ds
roll
lods
dec
lret
stos
cmpl
jb
outsb
add
xor
out
mov
xor
dec
insb
adc
or
out
movsb
loopne
sbb
mov
dec
push
int
sub
jg
adc
inc
xor
arpl
mov
inc
mov
add
mov
clc
push
dec
push
dec
mov
sbb
mov
ja
cld
fstpt
sbb
inc
inc
add
or
mov
jge
jo
jp
lods
push
inc
rclb
pop
inc
cmp
inc
rclb
shrb
cmp
repnz
movsb
inc
push
xor
pop
add
cmp
sub
pop
push
xorl
add
push
push
mov
in
insl
nop
pushf
mov
push
push
in
add
jmp
pop
arpl
inc
stos
cmp
fidivrs
xchg
mov
outsl
enter
mov
xlat
test
test
ja
mov
adc
incl
sub
or
or
xor
push
sbb
mov
jle
push
jns
mov
bound
int3
push
jb
cmc
add
out
sub
loopne
push
or
iret
pop
xchg
add
insl
jg
pop
pushf
add
icebp
test
clc
push
or
push
and
das
cli
test
sub
mov
xor
add
orb
imul
fcoml
cmp
push
dec
xchg
sbb
jne
mov
shlb
push
pop
rcrl
and
shlb
cmp
out
lods
inc
or
ss
mov
scas
lret
and
add
jecxz
cld
mov
mov
dec
add
out
xorb
xchg
mov
mov
push
shl
pop
mov
push
lods
mov
add
fists
std
enter
jle
pop
inc
add
aad
jo
xor
add
es
int3
sar
adc
fdiv
and
dec
jecxz
pop
xor
and
into
dec
mov
loopne
xor
adc
dec
insl
add
push
or
mov
dec
mov
in
das
adc
sti
cmpsb
add
xchg
add
xchg
and
xchg
shlb
mov
xor
xchg
jg
pop
adc
repnz
xor
rolb
cmpl
daa
mov
mov
cmpsl
cmpb
lods
sub
xchg
ficoml
mov
lahf
adc
orb
into
lret
test
mov
add
add
cmc
fstpl
jns
sbb
push
pop
push
sub
add
mov
shlb
int3
rolb
xlat
add
push
add
inc
xchg
int
sbb
add
les
pop
jecxz
ss
add
xor
std
pop
call
outsl
es
push
jb
iret
or
cli
sbb
inc
adc
fwait
add
sub
mov
mov
iret
inc
mov
xor
push
and
das
mov
cmp
cli
adcb
mov
pop
cmp
add
push
aam
test
je
and
mov
aaa
stc
xchg
lods
add
push
jl
dec
xor
inc
lods
das
pop
push
shl
add
mov
clc
sub
sbb
push
jp
cmp
mov
add
jl
xchg
jb
outsl
sbb
js
add
repz
cli
lcall
and
mov
call
mov
js
sbb
sbb
pop
sub
wrmsr
repz
repnz
test
and
nop
jno
push
fsubrs
jno
add
in
jmp
jbe
add
fnstsw
mov
popa
push
hlt
mov
shlb
and
insl
out
aas
fnstenv
or
shll
sub
lock
adc
xor
lahf
jg
xchg
lock
rorb
dec
outsb
inc
addl
cmp
add
cmp
cmpb
arpl
jbe
add
add
loope
mov
sbb
nop
clc
jecxz
jle
push
xor
add
add
cmpsl
mov
mov
aam
dec
subb
add
cmp
test
adc
add
adc
sbb
es
sbb
fdivl
add
das
adc
lods
and
xchg
pop
mov
daa
outsl
std
and
cmp
stc
inc
push
sub
sbb
icebp
pop
arpl
lods
rclb
push
push
xchg
es
xor
shll
push
sub
lahf
add
repnz
aad
or
rolb
adcb
push
sbb
pushf
and
jb
or
sbb
iret
fs
add
lds
or
int
and
aaa
adc
or
std
cmpsb
xchg
adc
inc
xor
dec
lcall
test
dec
fstpl
sub
pusha
loop
add
pop
int
xchg
subl
xor
pop
lahf
pop
sub
cmp
cmp
jo
outsl
mov
add
add
std
sahf
mov
and
pop
dec
cmp
ror
test
orl
dec
add
add
add
or
out
nop
add
aad
jge
inc
add
ss
cs
jne
add
scas
loop
cmp
sbbl
loopne
pop
add
leave
push
enter
cmp
repz
mov
mov
lea
pop
mov
jo
jae
sub
add
lods
call
xor
add
push
les
mov
lcall
out
ficomps
sbb
sub
lods
mov
in
add
mov
mov
add
push
pop
add
cwtl
fdivr
dec
mov
rorb
rorb
adc
dec
xchg
mov
push
imul
mov
mov
mov
push
sub
pop
and
ficoms
add
imul
pushf
cmp
xor
xlat
xchg
xchg
push
sarl
push
fcomi
lret
rolb
aaa
mov
outsb
push
into
or
aad
add
adc
push
xchg
sbb
dec
fsubs
out
icebp
push
popa
out
out
add
pop
add
leave
dec
loop
sub
mov
mov
inc
push
adc
loope
movsl
jmp
and
test
arpl
lret
xchg
add
outsb
mov
je
add
jle
leave
mov
notb
pop
pop
test
gs
mov
push
dec
movsb
xor
xchg
imul
pushf
add
xor
push
dec
push
add
add
test
sahf
popa
add
push
mov
pop
out
popf
jo
les
push
adc
pop
pop
add
push
cmpb
inc
add
and
push
xorb
gs
add
negb
add
int
or
shrb
add
nop
xor
enter
pop
push
aas
push
fdivrl
mov
dec
mov
dec
sbb
adc
fisubrs
mov
lods
call
out
cmp
sbb
adc
test
pop
cmp
out
add
mov
addr16
adc
push
sbb
and
daa
out
int
in
lock
adc
add
cmp
aam
xlat
dec
mov
add
or
mov
sbb
jo
cmpsb
jno
ljmp
push
lahf
or
punpcklwd
cli
pop
fcomip
dec
test
test
fistpl
dec
das
nop
adc
cmc
bound
loopne
out
add
push
jl
add
lcall
push
cmp
leave
loopne
push
dec
push
mov
insb
lret
shll
pop
sbbb
sub
aas
or
js
test
cmp
jmp
mov
add
test
push
aaa
xchg
hlt
lret
les
xorb
inc
ret
call
mov
add
mov
jg
sub
fs
xchg
out
inc
add
cmpsl
xor
lgs
hlt
fisttpl
and
mov
movsl
mov
dec
jo
movsb
mov
adc
fisttps
arpl
and
pop
adc
or
push
sbb
fadd
imul
adc
add
loop
pop
cmp
and
xorl
add
aam
clc
sbb
cmp
pop
test
nop
jl
cli
mov
pusha
inc
inc
add
mov
ja
ds
subl
mov
call
dec
enter
pusha
enter
sub
push
stos
xor
mov
inc
lods
jbe
dec
add
inc
add
push
sub
mov
fcompl
xchg
push
cmp
jns
xchg
push
push
add
xchg
add
cld
mov
jge
inc
pop
lret
fadds
jl
xor
adc
or
faddl
add
les
movsl
sub
dec
add
inc
sbb
shlb
lods
add
pop
mov
es
fs
andb
andb
pop
loop
xor
test
cmpl
adc
movsl
add
mov
fnstcw
insb
ja
push
dec
inc
addr16
lret
in
xlat
testl
mov
lahf
or
dec
push
push
add
jle
cmp
roll
and
pop
ja
push
popa
out
enter
adc
insl
cmp
aaa
jmpw
out
adc
jmp
inc
cmp
mov
mov
add
sbb
add
push
xor
sarl
cmp
inc
fisttpl
shlb
push
jg
jb
push
mov
aaa
or
adc
loope
add
xlat
fnstenv
movsb
mov
pusha
dec
test
add
dec
push
or
mov
pop
add
movsb
insl
push
and
add
push
jns
mov
push
imul
sbb
jo
fs
setl
xor
mov
dec
mov
test
add
mov
xor
pop
jns
dec
cmp
jecxz
mov
nop
lock
add
test
negb
enter
mov
fucomip
inc
pop
pop
sub
lret
add
fstps
arpl
jg
cmp
cmpsb
xchg
or
jmp
add
loope
pushf
or
aam
dec
lds
sub
add
fs
jae
cmp
lods
mov
jbe
test
ret
inc
arpl
mov
cmp
mov
sbb
lahf
mov
mov
aam
xchg
aas
jne
test
ja
inc
add
or
add
cmp
ljmp
insl
lock
repz
movl
xchg
popf
out
rolb
nop
sub
or
jle
lahf
outsb
jg
mov
push
xchg
cmp
mov
add
lds
addl
cltd
fwait
inc
add
lret
xchg
pop
pop
inc
mov
lret
mov
cltd
xchg
or
into
adc
inc
cmp
push
inc
xchg
sub
inc
mov
aas
xor
mov
cld
xchg
add
enter
inc
push
arpl
pop
movsl
movsb
pop
cmp
nop
pushf
add
cmp
jnp
sbb
dec
call
adc
pop
and
into
mov
dec
int
ret
cmp
dec
lcall
pop
ss
push
idivl
gs
inc
or
xchg
mov
sbb
jg
add
jecxz
leave
lret
test
cld
pop
roll
mov
mov
js
test
or
add
shrl
or
and
xchg
cmp
lret
rorl
decb
xchg
xor
pop
mov
dec
cmp
clc
pop
jo
pop
cmp
add
mov
push
xor
jmp
sbb
popa
inc
and
or
pop
movsb
dec
cmp
add
mov
outsb
add
mov
mov
dec
fwait
inc
xor
push
enter
ret
or
call
add
jmp
adc
or
in
pop
adc
es
mov
adc
xchg
and
add
or
add
mov
sbb
shlb
jp
fdivl
addr16
sub
ret
hlt
fwait
add
or
loop
xor
mov
ret
adc
jmp
pushf
outsb
add
aas
andl
mov
sbb
mov
jmp
and
mov
ret
repz
push
insb
popf
sub
mov
and
sbb
inc
jbe
enter
pop
add
movsl
add
inc
je
arpl
push
xor
add
out
xchg
and
add
addr16
jle
rol
sbb
icebp
mov
mov
inc
xorb
push
fsubrp
stos
sub
adcl
pusha
and
pop
rcr
or
push
xchg
into
addr16
xchg
add
adc
call
xchg
xchg
sbb
lds
or
adc
into
sbb
mov
xor
mov
push
push
adc
cmpsb
dec
mov
inc
xchg
and
loope
adc
or
pop
cmp
mov
fidivs
pop
ds
aam
mov
filds
push
sbb
adc
push
add
inc
cmp
mov
add
test
mov
pop
mov
sub
sarl
push
ret
icebp
mov
je
pop
and
adc
cwtl
and
pop
nop
xor
and
insl
nop
xchg
add
pop
cmp
add
inc
cld
mov
pop
and
fildl
jg
xor
sbb
loopne
outsb
push
inc
das
mov
pop
mov
movsb
bts
sub
fs
push
adc
add
xor
or
insl
add
xchg
leave
cli
sbb
or
pop
out
movsl
inc
sarb
mov
mov
or
push
dec
subl
add
jae
add
jl
pop
push
and
adc
add
dec
jno
adc
jnp
jbe
sbb
dec
add
cmp
jge
add
ljmp
or
js
test
pop
push
or
jle
inc
outsb
cmp
ret
orl
xchg
roll
pop
inc
mov
mov
dec
jbe
cmp
das
jns
adc
outsb
mov
out
add
xchg
cmp
fists
dec
dec
xchg
sub
pusha
call
incb
jg
and
shrb
add
stc
ffreep
imul
adc
or
sub
and
ret
loop
mov
jbe
aam
divl
push
sub
add
cmp
jp
pop
repnz
add
or
dec
pop
loopne
es
jge
lret
test
and
and
loop
xchg
jo
fmul
aad
or
orb
mov
xor
sub
or
ret
xchg
inc
add
sti
push
jl
shlb
negb
dec
jg
inc
pushf
in
xor
sarb
adc
sbb
add
add
add
and
int3
stos
call
add
jbe
cmp
jo
inc
sbb
clc
add
add
in
orb
xchg
iret
inc
sub
inc
add
negl
or
xor
addl
xor
testb
sti
mov
add
inc
andl
mov
or
push
cwtl
ss
and
out
mov
add
sub
mov
mov
sub
fs
pop
lock
mov
add
mov
pusha
push
sbb
pop
fwait
add
sbb
xchg
in
jno
jmp
in
add
xchg
sbb
pop
mov
imul
adc
push
rcrb
loope
dec
pusha
add
cmp
push
pop
ret
add
push
cmp
jne
add
mov
daa
sbb
mov
xchg
lds
out
and
pop
jg
push
jo
and
pusha
imul
cmp
sbb
sub
std
call
lods
call
inc
aas
fisubs
add
and
add
sbb
into
pop
call
add
push
lods
cmp
and
mov
iret
mov
or
sbb
jl
ds
pop
xorb
jns
movsb
sbb
sahf
mov
lret
push
jmp
adc
push
sbb
or
adc
push
push
xor
jmp
sbb
add
dec
arpl
adc
out
movsl
adc
add
lods
sbb
aas
cmpsl
push
add
mov
push
inc
inc
aas
xchg
inc
insb
sbb
into
add
mov
add
nop
icebp
or
jnp
lock
lods
add
xchg
or
add
lds
jns
rclb
clc
imul
test
jg
add
call
insl
dec
ja
in
xor
xchg
aas
pusha
sub
call
mov
add
cli
push
and
pop
sti
adc
add
data16
add
dec
and
or
popa
fdivrp
fdivrl
add
add
out
rcrb
pusha
or
xor
push
pop
in
inc
lret
add
pop
loopne
push
hlt
mov
jl
popf
stos
dec
ja
xor
es
sub
cwtl
lret
addr16
imul
add
push
lods
xchg
and
pop
test
dec
jo
inc
aas
jbe
dec
push
inc
shlb
mov
add
xor
inc
cmp
pushf
orb
xchg
jle
call
aam
dec
pop
mov
add
pop
out
jnp
jb
lea
adcl
ret
sbb
push
inc
mov
out
fxch
fiaddl
loopne
aam
int
lods
add
sbbl
scas
dec
mov
fwait
out
into
add
jb
js
sbb
jle
dec
mov
test
jno
cltd
icebp
add
aad
push
push
repz
lret
aas
lock
cmp
add
ror
lea
xlat
divb
push
add
jo
xchg
out
dec
addr16
mov
push
mov
jns
dec
pop
lea
jne
mov
or
dec
pop
aas
jl
sub
cwtl
cmp
jle
loope
adc
call
add
fldenv
mov
orb
mov
or
pop
sahf
popf
jnp
cmp
or
xor
mov
aam
or
sub
sarl
add
dec
pushf
dec
mov
aad
sub
mov
mov
int
xor
push
mov
sahf
lret
pop
mov
lret
ss
subb
insb
leave
es
out
loopne
lock
pop
sub
add
jne
repz
test
xchg
jl
inc
leave
mov
xor
cli
sbb
hlt
jae
imul
fsts
inc
jle
mov
pop
xchg
cmp
jne
mov
rolb
add
push
nop
adcb
inc
iret
lods
call
inc
inc
pop
xor
jno
dec
cmpsb
sarb
add
jp
pop
aad
dec
mov
add
cld
jecxz
ret
or
inc
pop
jl
shl
aaa
ss
push
push
push
dec
or
inc
xlat
inc
jg
mov
add
addr16
xchg
add
in
push
add
lods
mov
fidivrl
xchg
andb
mov
imul
xchg
shlb
add
fadds
and
in
lcall
add
xor
mov
mov
cwtl
ficoms
adc
adc
js
xor
nop
mov
cmp
add
inc
mov
add
adc
int3
lods
dec
rol
pop
daa
and
inc
loope
je
jle
add
andb
dec
pop
sbb
popf
cld
jne
push
faddl
call
adc
adc
dec
lret
inc
xor
or
incb
jb
adcb
mov
add
jbe
dec
push
and
pop
add
cmp
push
pop
adc
add
pop
fldt
xor
testb
mov
or
inc
test
popf
scas
add
ss
shrl
add
sub
jp
cli
arpl
outsl
push
std
inc
gs
or
inc
xchg
out
scas
adc
pop
shl
inc
add
lcall
jp
hlt
in
add
xchg
mov
add
jae
cmpsb
mov
incl
push
aad
lods
femms
push
push
jo
dec
push
jae
je
popa
add
fidivrl
push
jg
add
aaa
mov
xor
movsb
test
jbe
jno
and
in
aad
vcomisd
sbb
sub
std
lcall
push
or
add
pop
sahf
jge
fimull
ja
ss
lds
jg
jp
or
jnp
stc
test
subb
loope
lret
pop
cmp
pop
js
jge
dec
aam
cmp
lods
aaa
push
in
cmp
push
repz
mov
das
pop
push
cmc
xorb
adc
or
mov
sub
xchg
mov
icebp
sub
mov
sub
pop
add
test
jmp
loop
add
aaa
mov
adcl
push
out
inc
rcrl
sbb
hlt
jb
add
inc
dec
jnp
pop
mov
std
or
adc
pusha
test
add
jp
out
sbb
pop
push
mov
inc
push
aaa
xchg
xchg
add
rclb
bsr
jns
jno
adcb
mov
orl
ljmp
jo
pop
lods
xor
lahf
xorb
mov
push
xchg
add
inc
loope
dec
push
stos
jo
add
iret
popf
sub
cmp
dec
pusha
jae
mov
or
sbb
jno
cmp
jg
subl
ret
in
mov
in
cmp
jl
inc
repnz
lea
add
mov
push
add
inc
mov
mov
and
out
add
mull
and
add
dec
cmp
push
dec
lds
hlt
dec
add
lea
jb
sbb
inc
shll
divl
inc
notb
test
ret
out
int3
fcomi
and
add
and
int
movsb
push
pop
xor
add
dec
jge
inc
mov
add
jae
push
mov
xor
cmp
adc
call
nop
push
pop
sbb
andb
leave
mov
nop
les
and
sahf
sarl
xchg
pop
push
and
mov
test
push
cmpb
repnz
stos
out
loopne
xchg
add
pop
adc
or
sbb
add
sbb
add
es
and
add
cld
mov
data16
hlt
js
inc
dec
sbb
andb
xor
dec
jnp
cmp
add
test
xchg
add
in
jl
push
add
dec
push
lret
cmp
or
sbb
rorb
dec
mov
test
add
addr16
jne
cmp
add
mov
out
dec
add
xabort
xchg
lss
mov
jo
les
push
fucomi
xchg
out
adc
out
push
add
cmp
jle
in
push
push
fdivrl
cmc
jge
fistps
mov
inc
add
mov
loope
cmp
icebp
imul
mov
xchg
enter
xor
add
adc
dec
stos
call
shlb
add
cmp
leave
push
mov
xchg
inc
jns
mov
aas
rcrb
enter
add
inc
in
inc
xlat
out
add
mov
sbb
inc
dec
push
scas
fstpl
push
add
out
leave
leave
mov
xor
outsb
pop
push
stos
aam
aaa
fcmove
and
std
lods
add
sub
nop
mov
jne
inc
dec
and
lcall
rcll
cmpsb
inc
movsl
addb
sbbl
test
xchg
mov
jnp
pushf
lods
adc
fcomp
je
pop
sbb
mov
sahf
adc
pop
or
inc
jne
sbbb
jge
jp
xor
adc
ljmp
push
or
mov
cli
inc
add
jno
push
inc
iret
aad
mov
sbb
movsb
add
pop
add
add
xchg
mov
cmpsb
iret
sbb
mov
andl
lods
add
xchg
or
cwtl
pop
inc
jle
fidivl
pop
sahf
int
iret
lcall
mov
dec
pushf
add
inc
add
sbb
lock
lock
add
ret
mov
push
test
shrl
xchg
add
xchg
int3
les
push
nop
mov
pop
aaa
hlt
cmp
gs
mov
add
cld
jb
ja
inc
mov
add
cmp
in
add
xchg
fmul
xchg
jge
add
lds
add
mov
aas
add
xorl
inc
lock
push
sbb
subb
ja
inc
in
inc
jbe
add
mov
scas
push
sub
out
add
xchg
loope
sub
mov
cld
in
mov
jno
dec
sbb
ret
dec
pushf
sbb
cmc
das
cmp
in
les
clc
repnz
adc
fcomip
lods
jne
cwtl
sbb
sub
lea
add
or
or
adc
ja
lods
jae
push
jp
push
xor
push
lea
mov
movsb
cmpsl
push
mov
hlt
cwtl
test
adc
mov
jno
inc
add
cmpsb
arpl
js
pusha
dec
dec
loopne
mov
cs
dec
data16
sbb
ret
jg
pop
jl
xor
shll
out
add
nop
or
and
or
daa
jecxz
add
insb
jnp
out
xchg
insl
dec
dec
clc
add
ret
stos
add
add
sub
ja
push
xor
pusha
fmuls
cld
push
cmp
mov
mov
leave
add
push
jo
add
movsl
adc
inc
mov
xorb
jo
dec
jl
rcrb
jge
inc
bound
add
mul
jb
repnz
in
lods
bound
add
fxch
ljmp
hlt
lahf
incl
add
jmp
xchg
push
out
mov
aam
lods
fidivl
xor
sub
mov
aad
imul
insb
push
sbb
mov
xchg
mov
add
sti
mov
jnp
add
mov
inc
arpl
adc
and
hlt
ret
xor
mov
test
fcmovbe
mov
das
gs
add
cli
adc
jl
add
repz
pop
mov
cmp
add
test
jle
fldl2e
adc
push
inc
out
es
outsb
add
push
popf
les
inc
push
pop
fcmovbe
cmp
push
jp
mov
and
add
dec
arpl
stc
clc
adc
cmp
cmpsb
fwait
pop
adc
inc
loopne
call
mov
leave
pusha
xchg
cmp
scas
out
add
sub
lea
push
enter
lahf
mov
mov
add
dec
ret
cmpsl
push
or
incl
xchg
mov
xchg
xlat
or
add
imul
xor
addr16
sbb
jg
sahf
movl
iret
add
add
sub
cli
sti
jmp
xchg
pop
jp
pop
xor
or
push
push
cmp
xchg
mov
sub
lcall
in
jmp
int3
sbb
cmp
add
out
or
jg
add
bound
jnp
sahf
cli
and
ret
inc
add
jl
add
loope
bound
cltd
cli
pop
roll
lcall
emms
xchg
and
mov
pop
adc
imul
or
dec
andb
arpl
sub
outsb
cwtl
jae
mov
xchg
or
mov
arpl
or
fisttpll
ror
sub
sti
lahf
jns
add
sub
lcall
xchg
jo
rol
andb
jb
sbb
std
sbb
mov
push
add
pop
out
icebp
inc
rcrb
add
lods
add
sbb
push
push
ljmp
push
inc
shrl
pop
pop
pop
dec
mov
sub
sub
gs
pop
xor
sub
lahf
dec
push
mov
mov
test
mov
cmpsb
jle
sbbl
sub
pop
cmp
dec
movlps
jbe
inc
add
cmc
xchg
sub
out
icebp
jmp
arpl
fmuls
sbb
sti
jle
cmp
add
ja
sbb
aam
aas
pushf
add
adc
or
add
or
ja
cli
imul
pop
loopne,pt
xchg
sub
jmp
inc
or
daa
xor
mov
dec
loopne
ja
push
pop
xchg
out
mov
nop
jo
add
and
aas
mov
pusha
inc
mov
fwait
subl
cmp
jmp
sub
sbb
or
adc
in
sbbb
rcl
xchg
jecxz
cmp
pusha
movsb
mov
push
imul
hlt
ljmp
test
rcr
push
cld
data16
loope
pop
mov
js
cmp
add
jb
jmp
mov
pop
adc
sbb
fsubl
jg
mov
pop
sub
or
mov
inc
mov
mov
add
jne
or
js
inc
out
or
lret
push
xchg
pop
not
jb
fadd
movsl
and
aam
out
rorl
jle
pop
mov
pop
xchg
sbb
adc
cli
dec
cmp
sti
mov
mov
jle
jb
cmp
pop
test
mov
fdivrp
add
idivl
sbb
stos
jno
lret
popf
movsl
test
mov
shll
sub
and
sbb
sar
pushf
aas
repnz
push
cmp
and
out
movsb
add
lahf
jne
mov
cmp
xor
mov
sbb
ret
call
pop
jae
roll
jmp
cmp
stc
ret
in
pop
adc
orl
sub
jbe
test
add
lret
jmp
pop
aad
add
pop
push
popa
int
sub
jp
push
xchg
fwait
add
pop
or
aas
mov
data16
add
inc
inc
sub
mov
xlat
or
jp
jae
js
stc
mov
test
xchg
inc
mov
arpl
mov
scas
sbb
xorb
mov
inc
scas
fmuls
sub
nop
cmp
add
mov
pushf
ljmp
sbbb
jle
inc
iret
enter
cli
addr16
pop
ret
add
daa
bound
lods
dec
leave
add
mov
lahf
stc
add
ss
dec
idivl
gs
add
mov
flds
mov
pop
add
sub
or
dec
mov
dec
ja
loopne
dec
fnstcw
add
scas
jp
add
addr16
lds
sbb
pop
lock
lock
add
fcomps
addb
sarb
add
imul
push
cmp
int
and
mov
add
mov
jecxz
xor
addr16
inc
cld
add
lds
add
xor
xor
je
jo
mov
push
xlat
add
mov
ret
and
sar
pop
adc
or
leave
rcrl
stc
push
xchg
fidivs
sbb
add
mov
out
out
iret
jno
mov
add
cmp
push
rclb
mov
jne
mov
add
sub
and
pushf
cmc
cmp
arpl
and
sbb
jns
jle,pt
jae
test
cltd
shlb
jbe
push
addb
mov
testl
or
pop
dec
xchg
push
and
jns
cwtl
sti
sbb
mov
movsl
xor
pusha
out
fldt
cmc
mov
add
add
adc
push
rcr
cld
mov
psllw
push
scas
int3
je
add
inc
jnp
add
lret
sbb
sub
xchg
add
stos
xchg
inc
inc
add
xor
add
push
lods
mov
dec
cmp
cmp
or
cmp
test
xchg
jle
or
add
push
repnz
scas
push
add
in
hlt
loopne
lcall
test
push
add
push
ret
push
shlb
push
mov
in
jbe
mov
sbb
pop
adc
popf
cmc
xor
xchg
dec
addr16
sbb
push
js
add
push
test
mov
xchg
sub
push
jnp
pusha
add
inc
cmp
call
js
push
movb
fisubrl
adcl
xchg
in
dec
jle
and
and
xor
gs
out
in
repnz
into
inc
mov
cmpsb
lret
gs
call
cmp
and
add
mov
add
mov
mov
pop
test
jg
adc
sub
jge
add
pop
xchg
addl
mov
dec
fisttps
add
mov
daa
insl
add
cltd
fsts
cwtl
xchg
mov
jo
sti
clc
add
mov
lahf
add
enter
sub
xor
xor
mov
add
xlat
fadds
mov
pusha
push
nop
insb
inc
add
mul
sbb
and
lods
xorb
pop
cmp
fmull
cmp
jno
xchg
pop
and
push
adcb
popf
loopne
ret
shll
add
dec
jl
pop
scas
popf
jle
jp
adc
pop
add
mov
pop
or
sub
cltd
pushf
dec
test
lea
sub
add
mov
push
mov
test
xlat
rorb
add
fsubrl
adc
js
jle
dec
adcb
mov
inc
push
test
push
pop
dec
mov
mov
jecxz
add
adc
popw
mov
cmp
rolb
mov
add
cmc
fcmovb
add
mov
imul
fmull
fcoms
jae
ror
add
orb
pop
scas
inc
push
xchg
add
cmp
pusha
ja
xchg
test
mov
and
push
xor
fsubrs
fwait
in
roll
inc
sbb
cmc
push
mov
add
cmp
add
adc
add
pop
xchg
jg
aad
adc
das
popf
and
add
adc
adc
mov
loopne
add
cmp
sbb
gs
mov
stc
sarb
push
cmpsb
stos
pop
cmp
sub
icebp
leave
add
enter
xor
mov
inc
popa
xchg
or
shr
pop
jle
mov
add
mov
add
lret
add
icebp
cld
add
xor
in
mov
leave
scas
popf
aaa
mov
rorb
sahf
cmpsb
cmp
cs
inc
add
addb
in
pushf
lock
sub
sbb
mov
add
inc
dec
cmp
lea
mov
outsb
idivl
adc
lret
inc
fdivs
ret
ds
test
test
popf
push
sbb
xchg
cmp
ds
xchg
pusha
repnz
mov
add
mov
push
and
and
jb
gs
pop
inc
test
into
inc
pop
call
imul
test
xor
or
call
jns
mov
in
sub
fsubl
subb
inc
addr16
add
loopne
push
mov
clc
adcb
inc
mov
sbb
stc
lock
xchg
jno
fwait
mov
lods
testl
sti
sub
or
jecxz
add
fldl
add
jecxz
pop
out
jo
and
adc
sbb
sub
mov
lds
push
adc
clc
push
push
add
jle
pop
inc
ja
add
inc
push
aam
jge
add
rcr
mov
pop
and
popf
or
fisubrs
mov
fsubr
ds
pop
rorl
xchg
add
bound
out
sbb
inc
jo
mov
cmpb
mov
ds
dec
xchg
add
add
scas
add
adc
push
icebp
insl
pusha
push
inc
pop
aas
jecxz
fs
iret
mov
movl
pushl
add
ljmp
pop
xor
add
push
dec
outsl
xchg
clc
sbb
pop
sub
push
ja
jmp
jo
pop
ret
cmpsb
mov
add
sub
stos
inc
dec
loopne
cli
mov
pop
xchg
mov
ficompl
daa
mov
add
pop
push
add
add
adc
jle
sarl
and
aaa
scas
inc
dec
pushf
add
in
cmp
xor
cmc
jp
sbb
lcall
cld
icebp
lea
fstl
xlat
lahf
test
in
daa
mov
addr16
push
push
fcomps
xlat
pop
sbb
adc
rcl
data16
xor
test
ret
jbe
lock
mov
jnp
xchg
or
shrl
imul
adcl
jo
xor
sbb
cld
add
cmpsl
jne
inc
loopne
mov
add
ret
adc
jo
in
dec
add
out
in
dec
sbb
call
xorb
mov
mul
add
xchg
push
repnz
fistpll
sub
test
loope
rcrl
sub
add
ret
rol
sub
pushf
es
fiaddl
pop
and
sbb
push
cmp
mov
loopne
mov
add
orb
push
mov
inc
loopne
pop
adc
sub
outsl
xchg
insl
hlt
jbe
pop
idiv
add
popa
lock
mov
js
leave
icebp
nop
orb
add
int3
add
fcmovnbe
adc
or
xor
cmp
xchg
das
add
cmp
add
std
andl
test
aad
adc
popa
out
dec
jl
faddl
add
mov
xchg
jae
pcmpeqw
add
out
fbld
adc
xchg
in
call
nop
loopne
pusha
out
shll
cli
incl
jl
out
adc
push
pop
mov
push
add
mov
add
sub
xor
fnstcw
hlt
cmpsl
inc
std
mov
cmc
lock
and
inc
leave
push
add
add
shrw
mov
cmp
jmp
add
push
xchg
insl
pop
int
add
nop
fdivr
add
sub
adc
dec
out
adc
mov
adc
rcll
add
cld
xchg
add
mov
adc
pop
std
add
inc
jmp
test
ror
sbb
add
xchg
es
pmulhuw
jbe
popf
sub
std
xor
mov
movsb
cli
add
adc
mov
lret
sahf
add
push
jg
cli
inc
adc
lcallw
cmp
out
mov
mov
add
dec
outsb
push
inc
xor
push
cmp
loope
push
lea
fstpt
fidivs
inc
pop
fcoms
lds
and
sbb
rorb
cltd
and
js
addb
push
and
add
negb
push
sbb
imul
pop
add
adc
sbb
add
cmpb
xor
out
inc
dec
nop
pop
push
add
push
add
mov
test
push
add
push
add
or
aaa
cmp
sub
xor
add
pop
int3
mov
pop
fnstenv
sub
ds
pop
dec
pop
fbld
js
jbe
or
sbbb
mov
jmp
mov
iret
mov
mulb
cmp
cmp
pop
and
or
mov
inc
mov
cmp
arpl
jae
addr16
inc
cmpsl
mov
cmp
aas
push
xchg
xor
cmp
imul
pop
xchg
enter
mov
pop
pop
jp
movsl
pop
push
rcrb
cmp
add
aas
mov
xchg
mov
add
dec
push
lret
test
shl
dec
sub
mov
aas
cmc
jmp
jle
and
sub
add
mov
sbb
add
sub
dec
add
lahf
jmp
nop
loope
xchg
nop
adc
inc
testb
add
mov
xchg
jo
add
xor
cmp
sbb
add
xor
notb
fsubs
pop
roll
sti
mov
xor
pop
into
std
add
dec
hlt
incb
out
scas
andb
adc
mov
arpl
pop
add
mov
nop
cmp
mov
add
xor
into
imul
jnp
jge
fistps
call
imul
sub
test
shll
daa
add
ss
add
data16
shlb
sub
jl
adc
rcrb
test
outsb
loopne
loope
xor
cmc
pop
pop
mov
jmp
lods
scas
add
xchg
add
sbb
pushf
popf
xchg
dec
add
insl
sbb
cli
xchg
sub
int3
call
add
shl
testl
lea
mov
inc
pop
jle
add
mov
add
mov
lods
sbb
xchg
inc
mov
jge
mov
or
call
mov
cmp
lods
or
pop
fdivs
add
in
adc
into
test
loopne
repnz
iret
xor
sbb
dec
pusha
pop
cmc
pop
add
mov
int
add
lret
jecxz
pusha
in
int3
xor
add
dec
or
and
adc
sbb
cwtl
lahf
sub
shll
lcall
mov
icebp
jg
lea
mov
or
popa
push
arpl
pop
mov
and
add
lea
mov
iret
pop
push
pop
addb
xor
jns
imul
or
incl
push
sahf
das
out
sbb
push
cwtl
rolb
mov
repnz
push
jbe
add
insb
or
push
inc
mov
loope
cld
shll
pusha
imul
add
cmp
in
mov
and
sub
dec
sub
fiadds
xor
mov
add
btrl
cmpsl
int3
add
jae
in
dec
mov
add
stos
out
and
xchg
or
leave
shlb
popf
paddw
and
les
jl
flds
sbb
xchg
push
pop
adc
adc
les
dec
cld
inc
cmp
mov
pop
sbbb
fadds
sbb
xor
popf
jmp
paddd
inc
xor
pop
test
pusha
add
dec
mov
in
sbb
fdivl
pushf
and
out
clc
mov
pop
or
sbb
xchg
test
jne
bound
push
sbb
imul
idivl
xchg
add
inc
and
insl
lret
cli
leave
int3
add
cmp
jb
add
sbb
mov
sbb
xchg
add
dec
fidivl
sub
jno,pn
adc
nop
icebp
sub
pushf
mov
xor
add
add
bound
inc
xchg
mov
cld
jo
add
lods
push
jns
jmp
sarl
push
mov
mov
pop
xchg
add
ja
jl
sbbb
cmc
enter
scas
jno
cld
mov
aaa
out
mov
mov
pop
in
ds
add
and
lds
and
add
andl
lahf
scas
sub
xor
add
lods
xor
push
add
mov
sahf
movsb
ds
sub
loope
loope
mov
in
loop
roll
push
fisubrs
adc
movsb
mov
int
js
add
sub
adc
leave
sbbb
dec
mov
out
imul
pusha
dec
jmp
lahf
or
dec
push
fadd
je
add
mov
add
cmp
xor
mov
jbe
lods
lea
in
or
jo
adcb
scas
je
add
mov
mov
add
adc
push
cmp
mov
inc
rorb
lods
adc
and
jle
add
popa
mov
inc
mov
scas
or
sub
xchg
pop
pop
cs
gs
mov
add
ret
adcb
mov
pop
lods
dec
pusha
sahf
jne
add
mov
mov
ljmp
stos
rcl
add
mov
test
ja
push
mov
xor
sbb
cmp
ret
aas
data16
add
mov
jg
or
sub
add
mov
ficomps
mov
loope
call
xlat
add
jbe
inc
or
pusha
cmpsl
andb
stos
lret
xchg
andb
mov
push
adc
lock
ror
in
clc
add
jbe
gs
mov
cmp
push
pop
cltd
test
jno
add
xor
data16
pusha
cmp
insl
xor
jno
loopne
add
sti
xchg
test
jl
adc
push
or
cmc
mov
jb
loop
scas
xchg
lret
mov
fxch
sbb
jae
inc
inc
mov
mov
or
pop
ret
insb
leave
add
xchg
push
xor
adc
xchg
imul
fwait
xor
in
shlb
add
lock
out
pop
loope
add
add
iret
add
cs
mov
into
push
or
xchg
lret
movb
add
les
add
xchg
arpl
mov
test
nop
cwtl
add
pop
mov
arpl
fcoml
lcall
hlt
insb
add
mov
add
scas
jae
pop
adc
leave
adc
mov
pop
and
and
and
pop
lret
test
cmc
add
mov
dec
adcb
xchg
adc
hlt
adc
and
dec
aaa
mov
sub
aam
and
xchg
and
int3
popa
fcoml
rcll
aad
sbbb
add
and
in
push
fistpll
andb
rcr
mov
add
lds
push
ror
les
icebp
cwtl
pusha
aaa
scas
mov
movsb
test
repnz
add
and
sti
or
mov
dec
popl
fists
fdivr
fldenv
push
insb
xor
mov
mov
and
roll
fisttpll
int3
add
add
js
je
add
mov
and
sub
lret
cs
ret
loopne
js
jle
pop
inc
or
pop
push
addl
adc
adc
adc
pushf
pop
add
ror
mov
xchg
adc
mov
jge
push
bt
out
add
sbb
std
or
mov
fsubl
add
sbb
sarl
sub
add
loop
xchg
ret
shrb
hlt
cmc
ret
cmp
fistps
scas
push
cmp
ja
add
mov
fdivrs
fwait
nop
add
and
leave
pop
pop
call
inc
std
mov
add
movsl
mov
cmp
mov
fwait
mov
adc
lea
arpl
add
leave
xchg
cmc
setl
shrl
mov
data16
outsl
add
repnz
push
pop
jg
adc
mov
xor
dec
and
xchg
pop
ret
out
jge
add
pop
cltd
ficompl
xlat
dec
orb
js
sub
inc
adc
xchg
shl
mov
cmp
fisttps
push
aaa
sub
fldt
dec
into
sub
int3
pop
mov
popf
imulb
sub
pop
or
sbb
imul
add
xor
loope
out
mov
mov
mov
out
adc
ds
sub
or
mul
fildll
mov
mov
pusha
cmp
rolb
jno
sti
xchg
and
das
fstps
jo
add
pop
xorb
add
add
gs
pushf
call
negb
shlb
cwtl
stc
nop
enter
rolb
cli
pop
pop
dec
and
mov
jle
cmp
fcmovnu
popl
jne
jo
add
push
xor
mov
hlt
jmp
fs
popa
shlb
in
loop
cmp
fcmovb
adc
shlb
inc
xor
jo
dec
add
add
mov
hlt
push
arpl
mov
addr16
shlb
out
and
or
aas
loopne
add
lret
repz
scas
add
xchg
dec
sbb
shr
push
cmpsl
in
mov
pop
leave
int
mov
xchg
adc
add
test
cmp
fdiv
cmp
test
cmp
dec
adc
jnp
dec
lret
test
cmpsl
addb
pop
cmp
call
incl
sbb
loop
mov
divb
popa
jmp
ret
add
ficoml
xor
cs
test
sti
out
shlb
add
xor
dec
clc
out
dec
add
test
mov
add
imul
enter
cmp
mov
test
add
dec
xchg
mov
lods
imul
mov
mov
add
mov
fidivrl
mov
popa
cld
rol
cs
jbe
or
add
xchg
arpl
pop
sbb
xor
xor
push
adc
mov
pop
mov
jnp
hlt
add
aaa
push
or
adc
pop
pushf
mov
addb
in
mov
dec
push
cmpsb
pusha
lods
ret
dec
fwait
xor
sbb
out
sub
rolb
dec
icebp
xchg
xchg
mov
stc
push
push
add
imul
clc
xor
add
scas
jno
aaa
jmp
cmc
sbb
enter
ret
sahf
mov
stc
fwait
nop
push
enter
dec
in
sbb
inc
add
mov
addl
inc
jmp
inc
dec
sub
jo
xor
adc
add
data16
inc
pop
nop
push
add
addr16
add
jp
add
mov
lods
aas
xor
in
push
adcl
lock
push
clc
cmp
push
and
and
or
push
jnp
dec
imul
clc
adc
jne
pushf
sub
push
je
rol
inc
add
das
aad
or
popa
scas
adc
mov
mov
cmp
jl
sbb
je
andb
mov
js
addl
lret
fistpll
sub
cmp
sbb
test
xchg
add
xlat
scas
movsl
mov
aaa
add
inc
scas
xor
adc
ucomiss
movl
fimuls
test
mov
add
cmp
leave
add
sbb
lock
sarb
sbb
cld
roll
je
jae
hlt
mov
adc
outsb
and
loop
and
push
loope
jbe
jnp
jl
sete
gs
inc
movsb
mov
sub
xor
push
adc
or
sbb
jne
add
push
movb
cltd
popf
enter
inc
or
clc
rclb
ret
cmpsl
jp
nop
lcall
sbb
add
scas
ret
xchg
push
das
imul
sub
pop
js
aam
push
enter
add
loopne
popf
test
movsb
jecxz
mov
pusha
add
and
add
adc
aad
xor
push
mov
in
mov
out
sbb
mov
add
xor
xchg
add
mov
insb
add
jecxz
ret
xchg
lret
enter
mov
dec
or
test
add
push
inc
stos
ja
shll
movsl
xor
cltd
add
loope
scas
mov
int
out
daa
jne
or
rcll
pop
cmp
mov
add
sub
xchg
mov
dec
es
jmp
insl
mov
cmpsl
add
mov
mov
add
inc
add
xchg
xchg
push
cmp
pop
fsubrs
imul
in
pop
pop
lea
dec
pusha
push
stc
rol
incb
mov
outsl
sub
cmpl
mov
sub
in
jl
cmp
dec
push
inc
mov
leave
sub
arpl
cmpsb
imul
aas
out
add
inc
fdivs
adc
inc
add
or
js
int3
rolb
pop
pop
out
dec
push
add
test
mov
pop
lret
roll
outsl
fisubrs
arpl
lahf
addr16
int3
adc
call
hlt
imul
shl
sub
loop
push
sbb
in
insl
nop
mov
flds
stc
test
fwait
add
jmp
add
jp
cmc
xchg
shrb
shlb
add
int3
idivb
ljmp
inc
pop
or
jp
out
mov
pusha
add
jp
add
jns
iret
mov
shrl
mov
aam
dec
rcll
pop
movsb
xchg
push
inc
jb
lock
inc
adc
and
aam
add
pop
and
cs
mov
lock
frstor
xchg
push
rclb
test
pop
fsubrl
punpckldq
jle
sub
add
sbb
outsl
pop
push
add
cmp
add
pop
jle
or
arpl
adc
pop
xchg
mov
in
xor
cmp
sbb
cmp
iret
jge
xor
mov
idivb
mov
sbb
push
call
and
and
insb
pusha
js
test
lock
sbb
jnp
flds
ffreep
mov
adc
add
xor
gs
add
sahf
xchg
jo
push
pusha
and
fdivs
push
lods
push
mov
lahf
shl
loope
inc
fwait
imul
jge
add
in
jno
mov
rorl
gs
add
add
ja
sahf
flds
insl
push
jnp
pop
mov
fiadds
mov
cld
and
sbb
sbb
out
out
cmp
pop
add
xor
jge
iret
add
cwtl
lret
add
les
nop
jno
add
xlat
pop
jg
xchg
pop
add
cld
cmc
push
add
fsubrs
dec
sarl
aam
cmpsb
movd
shll
inc
shrb
mov
dec
and
jno
data16
push
add
jge
sub
lods
push
push
cs
mov
push
into
jp
fsts
dec
cltd
and
addb
test
les
cld
lea
adc
enter
add
fidivrs
icebp
in
and
out
mov
jo
push
cmp
mov
pusha
loop
test
aaa
xor
rcl
add
cli
add
loopne
in
xchg
pop
test
jnp
aas
jo
pop
add
pop
stos
popa
test
cwtl
mov
and
adc
add
ljmp
out
out
mov
sahf
or
leave
and
add
or
sub
push
jg
sbb
cmp
in
sti
mov
pop
out
rol
jae
adc
push
pop
mov
and
je
sti
cmp
aas
mov
clc
push
cmp
test
out
es
pop
fcomps
imul
cmp
movsl
adc
cli
and
inc
sbb
xor
mov
mulb
push
xor
push
mov
test
pushf
cwtl
test
rcll
pop
lret
push
sbb
add
mov
loopne
sbb
jo
and
jo
in
and
add
and
into
sbb
call
lods
add
insb
movsl
aad
daa
aam
loopne
scas
or
aas
pushf
adc
xlat
ss
pop
aad
fistl
push
mov
jne
or
repz
cli
mov
mov
mov
cli
testl
jle
mov
add
aam
or
shrb
push
notb
lods
sbb
gs
subl
inc
adc
sub
sub
nopl
cwtl
fiadds
push
pop
es
jae
mov
sub
outsb
idivl
dec
mov
or
push
or
enter
inc
xchg
nop
cmp
jne
fdivr
mov
fiadds
push
or
add
jmp
add
test
orb
jmp
ds
cmp
and
repz
pop
cmp
stos
call
jle
xchg
roll
test
sbb
fsubl
pop
mov
xor
jb
sub
cmp
sti
cmpsl
cmp
push
add
fldl
add
fistl
mov
add
xchg
mov
sbbb
arpl
or
pop
lcall
dec
mov
add
aam
pop
and
fbstp
or
popf
fs
push
add
cltd
adc
pop
jnp
cmpsb
add
inc
mov
fs
je
xchg
ror
aas
inc
sub
pop
push
outsb
hlt
jecxz
mov
fs
aas
sbb
and
sti
imull
sbb
mov
int3
add
xchg
pop
aas
frstor
sbb
xchg
pushf
movsb
stc
sarb
sub
mov
gs
and
jl
and
imul
inc
fstpt
add
push
xchg
lret
sbb
mov
mov
pop
pop
or
hlt
insb
lods
orb
lods
imulb
adc
sub
fwait
pop
lds
jnp
jmp
add
imul
push
ret
outsl
add
andl
add
push
div
mov
rclb
sbb
pop
add
jnp
out
dec
inc
aam
xchg
add
enter
scas
int
add
and
lcall
mov
mov
cmp
and
les
decl
in
mov
push
in
add
popa
mov
aad
add
cli
inc
rorb
add
fimuls
pop
fsubrl
fnclex
ja
push
pusha
scas
mov
mov
movb
jp
add
popl
ljmp
pop
andl
push
add
je
lea
pop
shrl
incl
dec
add
sub
lock
add
ds
mov
sub
or
sti
add
xchg
mov
inc
scas
mov
les
cmp
cmp
add
std
push
mov
add
adc
int3
rorb
add
xchg
setl
faddl
adc
lea
xor
les
lock
aad
test
mov
call
aas
push
add
dec
cmp
jbe
ds
mov
mov
xchg
add
iret
adc
pop
add
nop
jbe
push
dec
enter
add
loop
cli
add
fcoml
xchg
popa
pop
jb
jmp
mov
xor
fdiv
pop
cmp
sbb
cmp
add
shll
in
leave
add
imul
adc
mov
dec
mov
push
push
add
sbb
lock
and
dec
jge
jno
call
sbb
sbb
sarb
pop
dec
cmp
subb
gs
sub
cmp
and
or
add
int3
test
adc
and
xor
ds
xor
imul
or
mov
mov
xchg
inc
daa
inc
ret
add
mov
add
daa
fmull
hlt
dec
and
dec
sub
add
shlb
leave
adcl
add
pop
xchg
fists
fadd
cmp
cmpb
cltd
pop
cmpsl
jmp
mov
jns
jge
repz
dec
jg
sahf
xchg
lahf
jb
ljmp
and
sbb
jnp
inc
arpl
add
into
scas
fimull
mov
fs
add
inc
in
inc
stos
add
sbb
adc
pusha
add
aas
xchg
jo
call
pop
add
fildll
int
mov
out
std
lods
je
mov
sti
mov
and
push
loop
and
mov
and
xchg
es
sub
cmp
pop
push
jb
add
lock
jne
sbb
scas
nop
leave
std
mov
add
jns
mov
dec
in
loopne
pop
jne
push
int3
incb
or
test
jns
xor
jmp
adc
xchg
add
cmpb
sar
or
or
lods
inc
jp
testb
pop
jmp
pop
cs
cld
sbb
std
in
daa
sbb
jl
insb
hlt
add
pop
aam
fsub
nop
or
js
add
pop
pop
mov
push
and
push
pusha
xor
ja
sarb
stos
je
sub
adc
and
push
mov
lock
scas
repnz
imul
sar
pushl
popf
dec
or
dec
in
stos
dec
sub
add
mov
fcompl
mov
or
stos
daa
enter
stc
rcr
dec
rol
test
cmp
adc
cmp
repnz
mov
or
push
jo
cld
addr16
in
enter
iret
mov
cmp
add
sub
add
call
jb
add
and
hlt
jnp
xor
xchg
sbb
dec
mov
inc
jns
ss
add
mov
xchg
adcl
add
cmpsb
mov
out
repz
loopne
cs
pusha
jmp
and
cwtl
fstpt
mov
sub
adc
outsl
popa
in
push
xchg
xchg
add
mov
push
mov
insl
mov
pop
jecxz
jae
dec
popa
jb
adc
add
dec
dec
js
dec
xor
cmc
add
pop
jno
pop
nop
popf
add
xchg
jl
fdivr
inc
xor
pop
into
leave
inc
lea
add
cwtl
notb
add
cs
les
xor
pop
dec
xchg
jns
or
enter
sub
adc
ficoms
push
jmp
add
xchg
add
adc
add
insb
and
cmp
xchg
sbbb
push
add
fsubrp
push
jle
jns
xchg
shlb
jmp
in
inc
pop
mov
cld
push
pop
add
or
jge
stc
jns
mov
adc
jbe
int3
shll
call
shlb
imull
adc
roll
aad
add
dec
push
std
movsb
cmp
mov
mov
out
add
xchg
popl
mov
mov
lods
call
mov
dec
loopne
sub
loopne
push
push
addr16
ret
dec
addl
mov
add
stc
aas
jmp
sbbb
int3
cmp
xor
push
dec
push
mov
add
les
testb
sti
push
xchg
add
dec
fsubr
stc
mov
pop
mov
sub
arpl
in
add
mov
out
add
xlat
sub
xchg
outsb
jno
repnz
xor
fstps
test
inc
add
xchg
inc
push
lret
stos
pop
out
xchg
sarl
notb
sbb
add
xchg
rolb
or
pop
dec
movsl
lock
xor
test
sub
pusha
sbb
outsl
adc
mov
hlt
mov
add
loope
mov
sub
xchg
mov
dec
adc
fdivl
dec
rclb
add
sub
out
sbb
or
add
cmp
pusha
mov
addl
sub
inc
jg
imul
cmp
add
pop
dec
jge
jp
xchg
pop
mov
mov
ret
addl
rorl
or
cmp
sub
mov
shlb
pushf
sub
mov
data16
ret
xchg
mov
lods
js
cmpsl
push
or
dec
dec
shl
jge
ljmp
mov
shrl
arpl
mov
xchg
add
mov
push
enter
push
dec
mov
xor
rolb
fidivrs
mov
mov
pop
mov
add
imull
add
mov
or
xchg
push
loopne
int3
mov
hlt
adc
outsl
add
cmp
cmp
add
jle
mov
shll
scas
mov
adc
ficompl
cmpb
mov
jecxz
cmpsb
mov
dec
mov
add
sbb
lea
xor
or
sbb
adc
mov
add
gs
mov
fldenv
push
pop
dec
mov
xchg
mov
ss
sti
add
xchg
add
sub
add
in
std
out
jle
inc
test
jno
pusha
inc
sub
pop
imul
jno
pusha
jnp
enter
add
data16
call
jle
pop
cwtl
mov
sub
test
hlt
movl
stc
lds
or
inc
pop
mov
push
enter
inc
mov
insl
lret
cmp
arpl
dec
mov
dec
inc
insb
cli
mov
vmovss
gs
nop
push
cmpl
jo
xor
out
inc
out
pop
sahf
pop
repz
jo
jno
adc
jp
ret
sub
ja
inc
inc
js
jo
mov
popl
or
cmpsl
adc
add
mov
jmp
loope
enter
sub
cmc
xlat
jge
sbb
cwtl
jl
xor
push
aaa
iret
jns
add
popa
jbe
jns
add
lods
cwtl
push
in
aaa
lret
inc
pop
mov
jge
js
or
shlb
sub
je
push
add
mov
dec
cld
insl
pusha
push
sbb
ds
cmp
push
enter
cwtl
add
jmp
iret
dec
dec
mov
adcb
xchg
and
push
cs
push
popa
add
scas
aas
push
jno
add
adc
insb
and
add
hlt
or
add
sahf
xchg
mov
add
outsl
rorb
or
sbb
add
aas
pushf
cmp
jle
dec
pusha
and
ds
add
mov
es
loop
jo
add
jno
sub
lret
cltd
or
ret
inc
fistpll
fimull
dec
add
mov
call
lods
mov
dec
cmpsl
add
mov
sub
cmp
lret
sub
pop
inc
add
rcll
xor
mov
adcl
add
add
lds
push
dec
dec
sti
inc
cwtl
inc
wbinvd
movsb
dec
pop
decb
lret
lret
inc
add
push
test
enter
mov
stos
stos
cs
incb
ja
jb
cmp
xor
add
lcall
add
mov
inc
mov
cmp
fadds
clc
lods
hlt
pop
cmp
pop
adc
xor
test
cmp
mov
pushf
mov
adc
sbb
ret
dec
and
mov
cmp
outsb
inc
mov
add
cmp
push
xchg
mov
add
xor
jnp
mov
jo
sub
lods
test
add
mov
jb
fnsave
push
in
push
ret
xlat
add
repz
adc
mov
jmp
dec
add
scas
pop
xchg
pusha
mov
sbb
mov
xlat
adc
adc
fwait
push
jmp
add
sbb
cs
cmc
jo
add
xor
insb
add
test
sub
dec
ljmp
mov
cwtl
push
andb
xor
leave
jo
cmpb
movb
adc
add
and
repz
movsl
sbb
pop
ja
mov
pop
repz
xor
lret
jl
add
lods
jne
xor
daa
add
pop
das
sbb
ds
movsl
inc
dec
dec
sbb
xchg
inc
xchg
add
dec
pop
scas
out
fsubrl
mov
ja
pop
shr
add
cltd
add
cwtl
or
sub
jp
daa
out
push
and
push
mov
cmp
xchg
push
push
and
xchg
inc
or
or
stos
mov
mov
xchg
test
sub
mov
jae
add
lret
enter
int3
cmp
jl
or
or
jo
enter
jmp
mov
add
jb
xor
aaa
push
inc
xor
jg
add
jmp
fwait
mov
in
push
out
das
std
mov
je
and
mov
jmp
decl
mov
xchg
stos
mov
xchg
in
inc
add
xor
xchg
push
mov
mov
ret
cmp
fs
test
pusha
add
mov
out
es
imul
cmpb
push
adc
and
aad
mov
sbb
pop
add
adc
faddl
aam
js
fistps
aad
mov
or
fildl
rolb
std
jmp
dec
cli
pop
xor
dec
ja
dec
adcb
pop
push
pop
sbb
jbe
outsl
and
pop
fadds
or
std
mov
fsubrl
ja
leave
shll
hlt
add
lds
push
in
dec
add
pop
es
mov
daa
iret
or
inc
xchg
pusha
add
lcall
ljmp
sti
add
popa
pusha
dec
mov
push
mov
jbe
inc
sub
sub
fisubrl
imul
test
mov
mov
pop
cwtl
xor
loopne
or
out
add
jo
pop
dec
add
mov
add
fldcw
add
jae
cmp
add
lds
mov
loopne
rorl
and
popa
sti
add
in
xchg
or
mov
lahf
stc
ja
test
das
movsl
adc
lcall
cmpsb
xor
ds
pop
std
scas
movsl
add
movl
push
mov
mov
dec
xchg
add
mov
push
mov
add
lods
daa
loopne
subb
xchg
arpl
mov
jge
je
xchg
cmp
fildl
pop
jmp
orb
add
and
mov
xchg
inc
push
add
cmp
add
fldcw
orl
adc
inc
add
ror
jo
mov
jnp
rorb
cmp
add
andl
mov
jne
lods
and
out
sub
pop
adcl
scas
mov
xor
add
jl
out
sub
lret
add
fs
add
push
mov
sahf
push
daa
mov
cmp
add
imul
test
test
adc
ja
dec
fstpl
mov
cli
cltd
inc
sahf
mov
sbb
push
add
pop
idivb
add
lret
push
sahf
add
adc
pop
xor
sarb
sar
jne
sub
test
shrb
imul
cld
es
pop
gs
dec
repz
mov
pop
push
jecxz
cmp
hlt
mov
pusha
in
out
add
push
sbbl
and
jne
and
cmc
push
je
add
push
clc
adc
mov
fnstcw
mov
pop
mov
mov
pop
shld
es
in
fiaddl
imulb
cmpl
sbb
or
dec
pop
push
movsb
std
mov
sbb
es
jo
ja
and
test
in
add
frstor
cltd
mov
pop
and
pop
push
adc
faddl
das
lea
setge
sbb
cltd
sbb
mov
adc
ret
cmp
add
es
loop
mov
push
pop
mov
add
fists
fcmovnb
or
inc
add
jb
das
add
icebp
or
add
imul
dec
add
scas
ret
pop
in
cwtl
and
dec
add
roll
dec
jns
or
push
leave
mov
adc
mov
or
mov
jl
sub
in
xchg
out
sbb
arpl
or
lcall
aad
pop
xor
xlat
pop
xchg
add
pop
sbb
push
jb
add
scas
sub
sub
and
test
jp
lret
jle
outsl
mov
enter
xchg
and
mov
or
push
push
sub
and
orl
insb
mov
xor
lock
ds
push
or
sti
pop
or
add
lock
xchg
mov
mov
jl
mov
xor
or
add
jp
rclb
js
add
dec
or
adc
cmp
sub
xchg
vmwrite
push
imul
add
push
imul
mov
xlat
xchg
jno
cmpl
ja
sbb
sub
xlat
xchg
enter
add
mov
cmp
inc
setae
cwtl
mov
push
ja
dec
and
pushf
mov
rolb
ficoml
cmpsb
pop
push
sarl
arpl
sub
pop
ja
inc
add
lods
jle
and
lahf
rcr
cmpl
mov
dec
xorps
and
mov
push
and
lea
shrb
adc
pop
push
ffree
pop
lods
aam
ss
shll
cmc
aaa
sbbl
mov
loop
les
mov
mov
pop
add
mov
scas
imulb
test
dec
or
add
loope
test
add
adc
ficompl
shr
add
jmp
mov
add
pop
shl
add
clc
xor
shll
sbb
notb
ds
push
lahf
test
xor
mov
mov
push
jnp,pt
push
push
aad
and
or
lea
pop
insb
imul
inc
pusha
dec
push
cs
add
inc
adcb
enter
push
lock
repz
int3
pop
and
or
sti
outsb
fcoml
arpl
push
mov
and
mov
or
in
int
jl
add
daa
push
aad
cmp
mov
fsubs
hlt
cwtl
add
insb
push
mov
mov
mov
push
addr16
jbe
cmp
jae
xor
andl
push
int3
outsb
enter
add
aad
jnp
push
mov
jno
jge
add
hlt
push
xor
xlat
inc
push
mov
mov
mov
test
imull
sub
pop
mov
mov
xor
mov
inc
cmp
aaa
push
jl
and
mov
repnz
mov
inc
mov
mov
add
jns
sbb
inc
lods
add
add
or
out
jbe
and
xchg
adc
lds
in
movsb
pop
in
mov
popw
mov
sarb
sbb
jle
nop
mov
add
fnstcw
filds
cmp
and
cwtl
gs
xchg
cmpsb
neg
leave
xor
cmp
fists
pop
mov
out
mov
int
psadbw
and
orb
or
sahf
pop
mov
xchg
lds
leave
jl
dec
dec
sbb
pusha
in
mov
imul
add
lahf
movsb
or
inc
icebp
xor
fwait
lret
push
jne
addb
outsb
xchg
add
insb
sbb
mov
and
sarb
es
and
pop
add
add
xchg
xchg
dec
xchg
or
je
push
lret
or
das
iret
xchg
popf
psubd
std
push
and
in
ret
add
mov
inc
fidivl
pop
loope
mov
xor
adc
in
inc
dec
cli
add
sub
mov
bound
leave
push
imul
add
lahf
repz
add
loope
stc
sbb
add
idivl
lahf
fldt
fwait
adc
add
cmp
or
jnp
adc
movb
stos
je
lret
mov
js
add
jle
rdmsr
inc
xor
shrb
push
fcmove
adc
cmp
je
sbbb
adc
mov
inc
push
xlat
sbb
add
jl
enter
sbb
hlt
and
add
mov
sahf
and
out
test
mov
pop
push
mov
or
mov
adc
fwait
mov
cwtl
mov
mov
mov
xchg
pop
lret
jle
rolb
adc
pop
daa
into
aas
push
xchg
push
mov
sbb
fiadds
push
add
fdivs
push
pop
and
xchg
xchg
inc
js
fstpt
ja
adc
or
pop
imul
jns
add
insl
cmpsb
inc
dec
push
les
popa
pop
push
add
leave
nop
fadds
and
push
mov
addr16
cs
bound
xorb
fsubrl
cmp
xor
sbb
sub
push
dec
add
orb
cmp
notl
ss
out
xchg
cmp
add
sub
imul
aam
jle
mov
data16
jmp
add
lcall
movsb
jbe
push
lods
scas
or
inc
orb
mov
fmulp
mov
pusha
pusha
jmp
in
in
or
faddl
add
add
mov
mov
mov
add
push
mov
test
cli
sbb
push
mov
adc
add
pop
andb
movsl
cmp
repnz
lret
adc
inc
in
mov
repnz
dec
fstps
in
jmp
scas
cld
add
push
adc
inc
add
add
jbe
nop
sub
adc
add
iret
jo
js
add
out
or
jbe
jae
add
js
adc
icebp
xor
test
les
mov
push
lcall
scas
add
shl
js
push
add
pop
and
xchg
cmp
sbb
cmp
xor
in
mov
jg
stos
mov
dec
cli
xor
add
int
xchg
add
pop
stc
sub
xor
add
cmpsb
add
mov
push
cmp
xor
or
adc
stc
jecxz
add
dec
dec
jb
js
pop
sarl
adc
loopne
fdiv
mov
cmpsl
loop
mov
and
sarl
lea
rorb
mov
adc
lret
lock
add
loopne
cmpsl
add
dec
mov
inc
pop
dec
sbb
pop
and
dec
mov
loop
jno
cmp
sbb
dec
inc
add
jne
nop
mov
test
xchg
add
scas
je
push
jae
add
hlt
mov
cmpsb
pop
xor
mov
in
or
divb
push
inc
test
sbb
or
sti
add
adc
mov
enter
jb
mov
insl
add
add
repz
add
cmp
xlat
lea
call
enter
out
mov
adc
adc
test
push
jbe
je
or
push
xchg
js
sar
cld
push
testl
dec
out
pop
add
mov
nop
sbb
inc
aaa
adc
mov
xchg
inc
pop
pusha
mov
jp
add
inc
mov
lret
ret
or
dec
les
push
and
daa
xor
add
das
stos
pop
mov
or
out
inc
add
and
lock
mov
inc
xchg
pop
add
jp
daa
popa
xor
je
imul
xchg
jns
add
fstpl
mov
data16
pop
xor
inc
mov
mov
je
stos
imul
mov
add
cwtl
loopne
fisubrs
ret
push
mov
rolb
xchg
test
add
mov
int3
and
test
test
js
lahf
orb
loopne
add
xchg
add
pop
fmull
or
add
jl
lock
xor
aad
xchg
mov
popf
fiaddl
adc
add
out
mov
xor
mov
sahf
lret
loopne
add
cmp
inc
das
hlt
cmpsl
add
rol
xor
hlt
scas
add
push
mov
or
bound
popf
mov
cld
shlb
and
les
xchg
add
push
adc
add
outsb
rolb
lcall
xchg
xchg
add
mov
push
and
add
in
mov
je
fsts
addr16
push
jo
sub
pop
leave
nop
adc
lret
mov
xor
daa
push
xchg
cmp
xchg
add
aam
add
in
add
sub
pushf
add
adc
jno
mov
movsl
les
loop
jne
test
add
xor
aam
mov
add
inc
testb
add
sbb
psllw
push
xchg
mov
and
push
gs
add
push
lea
pop
fs
int3
inc
dec
les
loopne
add
or
adc
cmpsl
dec
mov
pop
jbe
dec
aad
pop
subl
xchg
add
sub
dec
push
xor
push
lret
push
xor
add
mov
shlb
add
std
mov
scas
add
or
xorb
insl
out
lock
jmp
lret
add
jecxz
sahf
push
mov
pop
inc
cmp
rcrb
adc
ret
mov
mov
out
adc
roll
test
ffreep
push
add
jl
mov
hlt
and
mov
pop
cwtl
xchg
add
inc
insl
add
xor
add
add
xchg
dec
iret
bound
imul
and
sub
fucomi
adc
aas
sub
and
sub
outsb
sub
pop
mov
aaa
xchg
or
cmp
pop
cmpl
jbe
cmp
out
xor
in
in
mov
and
add
fwait
xchg
inc
cmc
shl
add
es
fistl
jg
outsl
add
xchg
fwait
rolb
out
es
pop
pop
add
lret
pop
jl
movsb
xor
and
jno
pop
add
movsl
shlb
ltr
lret
aaa
enter
addl
sahf
push
jnp
test
cmpsb
pop
add
nop
outsb
jb
std
insl
inc
adc
add
xchg
mov
sub
cli
dec
mov
gs
cmp
mov
lock
pop
ljmp
sub
cmp
add
adc
push
and
inc
icebp
jge,pn
addl
data16
loop
nop
add
add
stos
in
jnp
or
ret
mov
xor
cmc
add
shrl
jl
jmp
pop
aad
add
add
cmpsb
and
add
movsl
adc
and
ljmp
ficompl
xlat
lock
rorb
cld
ret
js
adc
mov
inc
lds
sbb
loop
sbb
cmp
adc
popa
sbb
add
cld
hlt
mov
loopne
push
sub
add
xor
subb
dec
into
mov
xorb
xlat
mov
push
sbb
dec
pop
xor
stc
push
imul
mov
outsb
incb
insl
leave
stos
ss
ljmp
add
fidivrl
and
add
xchg
inc
inc
xor
jl
pushf
inc
and
movsl
std
pop
out
jo
mov
add
ret
fisubl
inc
pop
xor
in
sti
jmp
mov
mov
jmp
mov
fstpt
std
fdivrl
sbb
sbb
pop
push
mov
ret
inc
adc
lret
sub
mov
movsb
fcmove
add
mov
and
xchg
loope
xchg
cmpb
enter
inc
mov
sub
pop
ja
mov
movq
xor
test
adc
scas
jae
pop
xchg
sbb
psraw
jno
add
mov
das
sbb
cld
sub
add
push
cmp
and
ljmp
int
mov
mov
adc
mov
mov
sub
shlb
pop
jmp
das
cli
inc
push
jge
shlb
or
movsb
pop
cmp
xor
cmp
out
mov
push
mov
and
push
shll
lret
sbb
shrl
or
addr16
out
xor
outsb
adc
or
nop
hlt
lahf
mov
js
push
add
jo
int3
or
test
sbb
jp
jl
mov
adc
sub
or
mov
lds
adc
add
push
jo
sub
popa
jno
push
shr
outsb
pushf
mov
out
neg
lcall
dec
xchg
jo
dec
sarl
mov
gs
inc
std
add
lods
decl
xchg
nop
mov
mov
jns
add
cmpsb
add
mov
mov
cwtl
cltd
add
cli
mov
pushf
cmpsl
sbb
addb
jmp
push
mov
sbb
lods
test
scas
push
xchg
and
cmpsl
stos
adc
dec
mov
bound
jo
adc
call
rol
jge
andb
adc
notl
pusha
and
jge
sbb
xchg
adc
xchg
bound
mov
test
add
pop
push
or
add
inc
sbb
pop
into
sahf
pusha
aas
add
stos
add
jg
add
out
push
inc
push
adc
add
call
scas
mov
push
add
add
inc
add
xchg
daa
jae
add
cmp
inc
ja
add
mov
jb
xchg
push
add
stos
xor
pop
repnz
add
stos
and
push
fbstp
test
rcl
scas
adc
mov
mov
int
pop
mov
ret
movsb
add
dec
xchg
popa
fcomip
sub
stos
dec
rcr
lahf
adc
push
filds
xchg
mov
sbb
lahf
xchg
sahf
jg
add
mov
out
add
xorl
jl
jno
outsl
mov
fsubrl
sbb
add
dec
pushf
or
cmpb
clc
xchg
mov
mov
push
xor
sub
addr16
add
sbb
and
xor
filds
notb
lcall
add
ror
cmp
es
push
pop
jo
mov
push
xchg
out
arpl
jbe
cmp
loope
sub
pop
pop
incl
les
mov
in
in
daa
sbb
or
les
fcomip
jmp
add
sarb
dec
xchg
jg
lea
push
pusha
call
pop
lahf
push
mov
ds
addb
jl
xchg
pop
mov
movsb
push
add
xor
repnz
pop
and
inc
xchg
pop
xor
inc
lret
xchg
mov
push
out
in
data16
hlt
or
movsb
jg
sub
insl
and
xchg
lcall
fsubl
cmp
mov
add
add
jbe
push
add
mov
movsb
rcl
dec
loopne
add
jmp
add
mov
gs
jge
idiv
lods
insl
lock
cmp
dec
xchg
and
pop
inc
pop
push
inc
imul
arpl
dec
leave
in
dec
loop
adc
dec
aad
shrb
add
cmp
or
mov
test
aad
cmp
xchg
push
mov
mov
scas
mov
mov
jp
xchg
movsb
cs
movsl
mov
out
sbb
xor
imul
push
dec
pop
cmp
clc
or
repz
sub
pop
xchg
sbb
ficompl
shl
movups
and
stos
add
push
mov
add
outsl
cmp
xor
fcompp
gs
sub
pop
dec
mov
loop
dec
push
cmp
sub
push
mov
mov
add
scas
cltd
ret
adc
mov
loopne
xor
mov
gs
cmp
bound
cwtl
sbb
lret
pop
sti
ffreep
imul
les
leave
sub
ret
xchg
push
dec
mov
shlb
mov
iret
roll
mov
adc
test
mov
pop
dec
add
subl
pop
out
push
xorb
out
std
setns
shll
mov
mov
push
insb
mov
nop
sbb
test
fiaddl
pushl
xor
lea
adc
mov
mov
inc
dec
insb
cmp
dec
pop
and
repz
imul
fildl
movsb
or
aaa
sarb
fadds
inc
add
shrb
jecxz
mov
add
cmp
test
add
and
add
roll
cmp
pop
add
inc
loopne
fisttps
push
push
dec
push
inc
cmp
sarl
clc
in
add
lds
sbb
mov
ret
add
mov
xchg
aam
data16
or
or
insl
nop
add
rol
in
push
jne
adc
dec
fs
xlat
into
shll
sub
cmovle
sub
rcl
adc
scas
adc
cmp
xor
adc
sbb
push
inc
pushf
pusha
mov
sbb
mov
add
aad
jne
pop
pop
add
xchg
push
into
push
cwtl
ficoms
dec
mov
inc
fmul
mov
test
sbb
mov
jl
int
out
popa
ret
in
or
adc
cmp
jp
add
xor
xchg
mov
aaa
push
cwtl
adc
or
icebp
xchg
ficomps
cld
out
jae
ret
frstpm(287
js
xchg
mov
mov
loopne
add
shll
xor
jg
add
loope
movsb
pop
xchg
add
aam
pop
xor
inc
ret
cmpsl
fdivr
lock
add
push
or
jbe
lds
add
push
das
cmp
add
pop
xchg
dec
sbb
push
and
lods
loopne
sub
cmpsl
add
jnp
pushf
push
sar
popl
ja
rorb
inc
sub
add
or
lock
mov
imul
pop
daa
mov
jge
add
insb
and
and
xor
push
mov
arpl
xor
inc
inc
iret
scas
sbb
icebp
ss
jno
pop
add
inc
sub
ds
pop
mov
xor
add
cmp
enter
add
clc
out
xchg
add
jne
add
pop
jo
xor
jmp
cli
lock
jmp
das
jle
adc
and
add
or
int
sub
dec
mov
mov
add
mov
push
sbb
out
std
ja
ds
imul
xlat
pusha
lahf
jecxz
mov
addb
mov
xchg
add
das
sub
daa
cmp
cli
push
mov
in
repz
repnz
cmp
add
mov
rcrb
mov
xorb
pop
sbb
jne
cmp
dec
add
ja
xchg
add
stos
push
lret
in
insl
or
xchg
movsl
adc
cmp
stos
adc
nop
and
pop
mov
js
add
mov
imul
pop
stos
inc
and
add
mov
add
test
sub
sub
dec
push
stos
inc
add
push
fwait
scas
add
sub
add
adc
mov
in
hlt
add
mov
or
sub
pop
arpl
add
pop
mov
push
out
add
adc
inc
sub
pop
movsb
fcompl
mov
cmp
cmp
or
sbb
jne
inc
sbb
hlt
popa
add
inc
dec
ja
xor
filds
cltd
cmp
mov
jge
add
mov
mov
inc
add
ficoml
adc
call
inc
js
mov
add
sub
popa
add
cmc
lret
pop
add
cmp
push
dec
jecxz
or
push
movsb
push
hlt
mov
clc
push
repnz
add
movsb
iret
jecxz
enter
fwait
dec
imul
andb
lcall
inc
dec
sbb
test
xchg
add
xchg
cmc
std
xor
adc
mov
int3
push
lock
add
mov
out
cli
lea
fistpll
cmp
ljmp
add
mov
mov
add
pop
push
nop
mov
cmpsl
clc
outsl
call
jmp
ret
es
push
ficoml
pop
xor
aam
xchg
aaa
dec
inc
hlt
aas
add
adc
fiadds
jl
cmp
lcall
pusha
add
add
in
ja
mov
int3
test
jecxz
jb
mov
add
mov
add
out
dec
stos
sub
aad
add
clc
push
add
aas
mov
mov
add
dec
add
adc
jbe
cmovbe
test
dec
outsl
lods
popf
xchg
mov
jmp
mov
fwait
loope
lcall
dec
imul
cmp
movsl
or
dec
sbb
cmp
test
imul
and
cld
add
adc
inc
aas
add
add
flds
adc
mov
cltd
dec
popf
add
cmpb
jp
push
outsb
add
add
add
subb
mov
jo
inc
mov
lahf
std
test
xor
add
pop
scas
fdivrs
cmp
xchg
or
add
ret
ljmp
test
fwait
add
rolb
mov
inc
les
adc
inc
dec
inc
sbb
test
enter
int
dec
cmp
inc
push
jae
movsb
cwtl
sub
mul
add
mov
mov
shrb
push
pop
cmpsl
dec
add
dec
fisttpll
jns
nop
adc
add
mov
jae
pop
add
rcll
sub
jg
add
mov
mov
cmp
ljmp
hlt
pop
testl
jae
dec
clc
repnz
or
out
mov
jnp
outsl
add
data16
add
in
out
sub
push
push
adc
mov
xchg
rcr
add
or
add
jae
cmp
jle
sbb
xchg
rorb
insl
jge
xor
cmp
mov
pop
mov
js
sub
dec
ds
xchg
jne
mov
mov
subb
ljmp
add
mov
clc
cmc
out
or
call
pop
leave
je
cmp
stos
jnp
add
dec
repz
push
out
xchg
add
lods
adc
jno
shlb
and
lock
pop
roll
mov
add
mov
cmp
mov
loopne
add
xor
jp
subl
sub
adcb
inc
ret
cltd
cld
add
sub
out
and
fcmove
mov
mov
mov
cwtl
loop
add
in
mov
mov
aad
add
pop
aam
mov
shll
or
and
or
hlt
add
xchg
jno
sbb
movb
leave
adcl
mov
or
add
adc
mov
mov
dec
add
mov
or
xchg
mov
cld
mov
and
ud1
popa
push
cmpb
notl
lods
jb
jnp
mov
fbstp
jno
adc
mov
mov
sbb
fimuls
xor
mov
jmp
adc
add
dec
inc
les
into
aam
mov
subl
lret
push
dec
add
dec
out
sbb
sti
sub
mov
sub
addr16
mov
add
jo
push
jno
push
pop
sub
dec
and
add
or
andb
movsl
inc
xor
jp
dec
sbb
push
pop
adc
add
and
mov
test
lods
add
inc
push
ds
pop
sbb
jno
add
inc
icebp
fstpl
ret
mov
fwait
test
js
add
pop
in
pop
iret
mov
out
call
sbb
jg
pop
push
add
imul
mov
dec
push
sbb
mov
cmp
add
mov
jne
jge
shlb
fldl
pop
xor
inc
jle
lea
adc
mov
mov
aas
das
mov
or
add
imul
pop
in
jg
je
aas
popa
push
addr16
call
ljmp
lahf
pop
rclb
jno
dec
icebp
push
sahf
adc
inc
jae
cmc
xchg
frstor
icebp
dec
loope
in
stos
jp
lret
mov
jo
lahf
push
scas
pop
cmp
inc
ljmp
xchg
lods
push
cmp
xchg
and
push
inc
xor
add
lcall
jnp
mov
jb
cwtl
lds
fmul
add
jo
in
notl
mov
lea
mov
add
xor
sti
imul
mov
add
stc
sbb
mov
jecxz
out
into
sbb
dec
mov
decl
enter
xor
pop
jp
adc
inc
xchg
testb
rcrb
pop
add
stos
arpl
das
adc
or
xchg
aaa
mov
into
movb
or
testl
adc
jmp
mov
leave
int3
cli
shlb
dec
xchg
mov
and
imul
or
mov
sti
arpl
rcr
or
add
xchg
mov
jg
call
dec
jmp
sbb
adc
xor
ljmp
dec
cmpsl
add
adc
add
nop
adc
and
mov
outsl
das
hlt
movsl
shll
mov
flds
dec
add
add
push
lcall
mov
sub
mov
fists
jae
out
push
push
cmp
adc
and
add
add
dec
lock
or
sub
shrb
scas
jge
cmp
and
shlb
in
movsl
push
and
sahf
sub
es
push
add
cmc
sub
addb
pushf
gs
add
stc
cmpsl
lods
and
loop
xchg
insb
repnz
shll
xchg
arpl
mov
jge
add
das
popa
sub
test
test
idivb
mov
jbe
pop
add
mov
out
mov
sbb
gs
cmpb
out
mov
pop
cltd
cmp
mov
mov
lcall
xchg
out
sahf
add
cmc
aam
sub
mulb
sbb
daa
repz
pop
push
add
xchg
ret
and
out
mov
ffreep
inc
ljmp
add
outsb
add
jb
push
sbb
pusha
jp
out
add
sbb
or
add
stos
inc
pop
add
push
in
dec
cmp
insb
dec
mov
xor
dec
mov
scas
push
pusha
fidivrl
hlt
dec
mov
lods
sbb
ja
xchg
test
mov
cmp
and
dec
test
in
mov
es
sub
mov
test
pusha
dec
leave
dec
pop
push
gs
inc
ja
add
xchg
cltd
stos
mov
loop
in
into
bswap
jbe
jo
lods
jno
cwtl
roll
sub
add
jno
nop
movsb
add
loopne
mov
ja
mov
daa
add
jno
jo
mov
lock
adc
lret
add
loope
pop
add
sub
test
mov
add
aad
mov
mov
add
sub
add
into
or
add
push
rclb
mov
sbb
xchg
loopne
nop
add
mov
cwtl
testb
int
fs
adc
add
idivb
xchg
stos
fcmovbe
jmp
sbbb
dec
add
stos
pop
or
add
push
rclb
std
cmc
out
cmp
aas
imulb
stos
imul
pop
add
pop
es
cmc
int
add
mov
lds
xor
lock
inc
std
fidivl
or
pop
loope
push
push
cmpsb
in
out
add
add
or
inc
ror
mov
push
subb
in
inc
fdivs
shr
mov
sahf
sbb
jbe
mov
sbb
fistpl
and
mov
jae
sbbl
jg
aad
inc
cmp
ljmp
xor
push
fdivr
pop
mov
dec
push
aad
loopne
movsl
stos
sub
cmp
lods
sbb
int3
and
pop
add
mov
xchg
jl
sbb
inc
mov
in
rcrb
mov
jl
xchg
sub
rcrb
mov
sub
ja
or
cld
inc
mov
clc
add
mov
xor
and
cmp
stc
mov
add
daa
jb
add
adc
cltd
sub
pop
popa
or
ret
mov
mov
js
shll
incb
xchg
clc
or
leave
movsl
mov
jle
in
in
and
or
stos
repnz
push
sarb
cmpsl
sbb
cmc
jno
mov
add
cmp
lcall
jnp
push
imul
mul
mov
in
cmp
add
sbb
add
leave
shr
lods
sbb
aas
iret
push
test
or
outsl
fadds
decl
loop
mov
cmc
pusha
inc
popf
pop
add
shrb
add
fisubrs
xor
xchg
xchg
jns
hlt
les
xor
add
xchg
push
xlat
dec
jecxz
movzbl
cmpsl
mov
std
lock
loope
mov
cld
xchg
mov
fmuls
mov
or
fistl
frstor
adc
or
cwtl
popf
mov
push
cmp
lods
xchg
push
pop
les
push
jnp
ds
mov
push
or
xchg
and
add
push
xchg
inc
mov
mov
test
inc
xorl
or
pusha
dec
inc
dec
mov
jmp
cmp
inc
or
scas
pop
add
lods
push
out
jmp
sub
shrl
icebp
jl
mov
mov
jns
sub
xor
pop
cltd
rorl
jle
fcoml
mov
mov
add
xor
pop
pusha
mov
pusha
dec
pop
ret
nop
jb
mov
dec
add
fstpt
stos
rolb
jb
ljmp
dec
add
out
cmp
cmp
imul
push
inc
stc
jb
or
into
add
cmp
mov
pop
xor
cmp
pop
jecxz
lods
and
fcomps
pop
mull
add
mov
cs
sbb
into
mov
lods
inc
adc
pop
pusha
lahf
dec
lds
push
pop
sarb
inc
adc
adcl
orb
add
enter
test
je
add
int3
orl
daa
jno
dec
lods
cs
mov
add
lret
add
inc
mov
call
cmp
pop
out
cmp
and
hlt
repnz
test
and
nop
pcmpgtd
pop
leave
sbb
dec
mov
pop
icebp
call
dec
xor
add
pop
iret
push
push
add
lret
add
jge
xchg
data16
xor
call
mov
cmp
add
test
cli
aad
push
test
repnz
cmp
fadd
enter
sbb
ds
shlb
sbb
cltd
sqrtps
jle
pusha
lods
insl
add
push
mov
mov
mov
rcl
ds
test
mov
outsb
adc
lcall
sub
and
jmp
sub
call
push
cmc
in
pop
or
decb
mov
clc
push
sub
add
fisubl
testb
mov
or
incb
imul
xchg
xchg
cmp
add
mov
push
pop
add
mov
or
insb
das
andb
popa
and
repz
cli
pop
insl
fwait
jne
jmp
fisttpl
movsb
shlb
jmp
loopne
adc
mov
add
inc
push
add
or
xchg
clc
add
insb
add
cmp
mov
adc
jne
adc
test
outsl
add
fisttpll
outsb
inc
sub
dec
shlb
mov
imul
push
xchg
mov
in
psadbw
cmp
nop
or
cmpsb
xchg
jae
adc
add
data16
mov
jo
clc
inc
rcrb
in
sub
add
cli
pop
adcl
add
jb
mov
cmpsl
xor
add
repnz
mov
testb
sar
sti
inc
mov
sbb
push
jmp
add
cmpsl
loop
mov
jne
daa
push
mov
mov
mov
add
jecxz
fldl
cmp
or
rcrl
xchg
mov
xor
ja
add
jb
xor
cmp
and
cmp
pop
fmull
enter
inc
lds
mov
mov
add
cltd
jg
sbb
add
or
stos
add
aad
and
add
add
add
sbb
rolb
leave
sbb
add
testl
xorl
xor
mov
mov
sub
pop
hlt
in
out
shlb
iret
sub
out
mov
stos
add
test
add
and
js
push
pop
leave
add
aaa
dec
aas
add
divps
dec
idivl
push
or
cmp
ja
hlt
inc
inc
pop
and
jne
add
insb
jg
sti
roll
pop
cmpl
xchg
jns
clc
push
push
divl
sbb
push
lcall
clc
mov
hlt
gs
das
stos
xchg
add
lods
in
mov
aaa
sbb
pushf
cmp
rolb
sbb
sbb
cmp
mov
sarb
or
sbb
push
insb
js
aam
adc
mov
addl
jbe
dec
js
xor
mov
and
xchg
mov
sbb
lock
movsl
pop
fsubrl
sbb
dec
out
rclb
adcl
add
add
cmp
mov
loopne
add
subl
stos
or
push
mov
pushl
push
xor
mov
rclb
or
add
out
push
push
lret
xchg
inc
adc
rolb
movsb
in
inc
or
inc
pop
pusha
jle
sbb
xchg
les
rolb
call
test
mov
jb
add
cwtl
addb
push
out
flds
pop
cmpsb
ret
jb
push
jae
add
xor
xlat
add
test
inc
fwait
pop
mov
sbb
jle
shrb
ljmp
dec
xchg
pusha
decl
add
xchg
imul
je
pop
pop
mov
call
jge
xchg
sbb
jo
pushf
pop
jo
dec
outsl
xchg
jne
add
std
fsubrp
sub
jo
cwtl
or
decl
cmpsl
pop
repnz
cld
adc
mov
int3
icebp
cmp
sbb
pop
mov
mov
lods
cmpsl
or
dec
pushw
cwtl
adc
xchg
mov
xchg
cmpsb
call
lock
les
push
mov
adcb
sbb
imull
pop
mov
sub
mov
mov
test
je
push
add
inc
ds
add
fnclex
mov
clc
sub
mov
xchg
pop
aas
push
imul
fildl
mov
pop
adc
nop
add
mov
dec
iret
dec
ds
lea
add
aas
inc
inc
dec
rolb
ret
add
rcrl
xchg
cld
dec
fldl
addr16
sbb
xchg
pusha
pop
sub
nop
sub
popa
cs
mov
bound
mov
mov
push
nop
sub
hlt
add
jmp
clc
in
mov
cmpsl
sub
paddusb
int3
andl
ror
push
pcmpeqd
rcrb
shll
mov
push
push
mull
pop
mov
and
out
and
dec
cld
inc
sub
pop
cmpsl
and
sti
sbb
jnp
lahf
insl
and
xor
add
fstl
jl
add
outsl
lods
mov
xor
mov
add
cmp
out
inc
test
fs
imul
inc
push
mov
and
mov
sub
add
xor
cltd
inc
and
sbb
dec
push
add
sbb
leave
pop
add
lahf
or
mov
lods
lods
loopne
sub
add
test
mov
rcll
add
fildl
or
mov
xor
mov
mov
test
jbe
add
dec
jnp
add
inc
cmpsl
decb
sub
inc
or
add
sub
add
jmp
imul
clc
mov
popf
outsb
cmp
mov
and
adc
cmp
dec
push
and
std
and
sbb
dec
cld
add
rcrb
jg
jno
lds
addb
jne
push
and
in
jmp
mov
push
insb
pusha
mov
add
jae
imul
pop
jb
in
cs
lret
scas
pushf
roll
mov
jge
adc
out
aas
dec
daa
lods
mov
xchg
sbb
nop
push
pop
xor
mov
sbb
xor
imul
add
add
aam
add
lea
adc
adcb
mov
std
push
gs
mov
ss
sub
aaa
out
xchg
fadds
xor
push
mov
or
mov
xchg
xlat
mov
call
push
ret
pop
mov
mov
pop
sbb
loope
aas
in
rorb
inc
sub
sbb
stos
add
lods
fsubrl
cmpsb
rorl
sbbl
into
pop
push
fcom
inc
dec
add
pop
cmpsl
pop
out
jo
mov
loope
nop
push
popf
xor
or
fisttpll
fwait
add
lea
ret
jo
jg
scas
orb
jno
adc
out
je
pop
pop
fdivs
pop
mov
sub
outsb
add
sarl
insl
icebp
or
lds
pop
int
rcrb
mov
imul
jo
mov
pop
xor
sbb
mov
fmull
add
xchg
fs
push
pushf
add
add
stos
add
addb
or
xorl
pop
xlat
addr16
push
cmp
and
dec
repz
scas
ficompl
sub
inc
mov
add
xor
mov
jmp
push
clc
push
je
cld
jg
pop
std
mov
test
pop
sbb
pop
enter
cmp
push
and
adc
add
daa
pop
out
mov
mov
mov
adc
sbb
movsl
cmpb
pusha
cmp
cmp
mov
add
insb
rcrb
fdivs
setle
fcoml
jge
add
loop
jg
jne
xchg
iret
std
lock
add
and
stos
push
popa
int
add
jbe
xor
inc
loope
cmpsb
data16
jp
jecxz
cwtl
add
aas
cltd
cmp
inc
xchg
out
neg
aaa
add
shlb
mov
mov
mov
fwait
mov
loope
adc
and
and
gs
mov
add
xchg
mov
cmp
sti
repz
aad
popa
dec
xor
insb
fs
mov
add
jo
xchg
push
insb
ja
add
pusha
out
cmp
mov
add
jge
loope
subb
pop
add
push
jb
std
mov
push
sysenter
ret
cmp
out
xor
jne
mov
lock
arpl
into
adc
push
cmp
jl
imul
xor
aad
add
insl
lock
insb
sbb
adc
mov
pop
mov
sbb
add
leave
mov
cmp
lods
mov
adc
fsubl
cmp
xorb
pop
inc
dec
add
ja
divb
into
push
jns
call
loopne
lret
int3
add
cwtl
rcr
sbb
cmpb
pop
rol
push
and
and
adc
inc
add
cmpsb
and
pop
add
imul
les
sub
adc
in
add
adc
pop
add
jae
out
and
adc
mov
mov
gs
dec
push
mov
repnz
rorb
sub
jmp
add
mov
or
add
sbb
sbb
xor
adc
add
movsb
mov
xorb
les
push
ljmp
push
hlt
sbb
out
in
pop
mov
repnz
xor
push
sub
pop
sub
mov
roll
je
xchg
fstl
mov
push
or
xchg
mov
nop
cwtl
call
rorb
add
das
xchg
cltd
sbb
popa
inc
adc
hlt
sahf
and
push
xor
popf
shl
jno
aad
adc
jb
fadds
movsb
xorb
add
cs
testb
in
stos
or
enter
call
sarb
clc
mov
xchg
xor
fistl
xchg
gs
pop
add
push
paddq
xor
push
mov
fldl
and
add
unpcklps
xchg
adc
cmc
add
push
xchg
push
aaa
scas
sub
pop
jbe
cmpsl
add
into
fdivrs
je
pop
pop
ret
add
andb
mov
add
imul
cld
push
mov
add
and
pop
sti
enter
jae
insb
nop
cmp
sahf
adc
cmp
pop
cmpsb
mov
sarl
fbstp
rcrb
cmp
pusha
outsb
add
movsb
test
loopne
mov
ljmp
pusha
dec
and
imul
inc
imulb
inc
and
cmp
xchg
dec
stc
in
lock
mov
mov
test
in
push
icebp
mov
mov
pop
aam
cmp
add
test
loope
lret
cmc
les
mov
add
or
aad
std
and
repz
add
add
xchg
add
mov
fmuls
xlat
loop
xor
aam
imul
out
es
imul
jg
lea
push
enter
and
add
add
dec
pushf
sbb
jae
jo
jbe
call
pusha
ret
dec
add
mov
das
out
fldpi
add
pushf
add
mov
fistpl
out
add
loope
add
xor
adc
adc
ficoms
push
lods
fadds
hlt
pushf
cmp
sti
aad
add
loopne
cmp
fldl
loop
jle
fstpt
pop
scas
into
sbb
rorb
cmp
sub
mov
aad
sub
sub
int
in
std
inc
add
sbb
sti
jbe
cmp
fucomip
xor
xor
add
repz
je
xchg
inc
mov
stos
jnp
mov
neg
dec
inc
pop
sbb
mov
inc
jecxz
fmulp
push
loope
mov
clc
mov
add
sub
mov
fsts
xchg
jae
pop
movb
xor
push
ret
or
mov
rcrb
or
jmp
push
jl
push
lret
mov
add
lcall
idivb
lock
add
jno
inc
pop
sub
outsl
xor
mov
ret
jecxz
or
or
enter
cmc
dec
or
sbb
loopne,pn
push
fcmovnb
fdiv
mov
mov
add
jne
into
dec
movsl
sbb
clc
push
add
stos
xchg
pop
fdiv
hlt
sti
shll
cli
insb
xor
scas
pop
mov
add
mov
push
daa
das
dec
adc
add
inc
and
lods
scas
cs
dec
icebp
mov
add
ds
xchg
test
adc
or
add
ret
lds
push
in
mov
shrb
mov
add
lcall
icebp
std
and
and
push
outsb
mov
cmpsl
dec
cmp
or
repz
add
mov
cs
jns
xor
mov
arpl
jo
ret
push
inc
lcall
jb
insb
mov
add
mov
push
add
loope
mov
pop
loop
lods
aam
and
imul
mov
pop
jb
add
push
or
cs
lods
mov
jge
add
dec
ja
data16
fcompl
hlt
cld
jnp
jns
pop
sub
negl
dec
and
and
or
scas
jecxz
add
add
fsubrs
push
mov
repz
push
add
mov
hlt
out
lds
aaa
xor
call
add
cmp
leave
fs
add
int3
cmc
out
dec
andl
test
sbb
jo
add
imul
jo
xor
inc
int
aas
inc
adc
mov
ljmp
mov
add
adc
test
inc
pushf
sbb
jnp
jae
sbb
lods
dec
es
xor
adc
cmc
xor
pusha
inc
mov
and
imul
in
xor
scas
xor
adc
cli
shrl
jg
xchg
sub
cld
cmpsb
jno
cltd
push
add
push
sbb
xchg
outsb
test
pop
pop
push
cmp
dec
sbbb
jno
add
jne
movsb
frstor
mov
or
je
loopne
lods
ja
pop
stc
lret
xchg
inc
fs
cli
dec
xchg
push
stos
sti
jmp
push
lds
shrb
or
cmp
rorl
sub
mov
pop
jecxz
int3
inc
js
jnp
cmp
dec
rol
inc
shlb
mov
add
cmpsl
sbb
cmp
in
mov
add
clc
jbe
aam
add
mov
xor
push
insl
pop
out
add
xchg
shr
mov
sbb
mov
lcall
add
xchg
aam
jmp
jle
xchg
add
lds
call
out
xchg
pop
sub
inc
pop
sub
xor
push
or
hlt
jg
or
add
pushf
fwait
adc
aad
cmp
mov
movb
or
test
or
mov
js
and
rol
pop
cmp
xchg
push
cmc
inc
dec
fsubl
ret
and
pop
mov
push
popa
add
arpl
add
jg
adcl
cmp
inc
pop
aas
jg
add
orb
add
cmc
into
inc
js
cli
decl
xor
mov
lahf
adc
jl
mov
imul
repnz
pop
sub
inc
add
jno
pop
adc
adc
fisubrl
imul
inc
add
mov
or
fisubrl
xor
sub
lods
add
mov
lcall
aad
mov
jmp
ja
test
ss
or
lcall
sbb
xchg
gs
cmpsl
popa
ja
add
subl
and
pop
shlb
in
and
mov
out
add
lret
orb
in
test
lahf
loope
in
std
xor
pop
adc
adc
and
fwait
dec
mov
test
jp
add
out
clc
mov
lahf
xchg
or
push
ret
es
and
out
inc
adc
lea
ret
sahf
jb
add
and
xchg
cmpsl
cwtl
cmp
cltd
ds
cmpsb
xchg
lds
lahf
cwtl
imul
adc
test
mov
mov
cld
pop
dec
push
add
aad
mov
pusha
loopne
mov
daa
stos
cmp
add
push
leave
lret
lcall
subb
mov
movsl
xor
push
add
cmp
mov
push
test
in
fcomps
cmp
iret
push
les
jg
scas
or
sbb
add
fstl
outsl
and
add
ljmp
scas
sub
jge
je
fwait
popa
sbb
push
std
dec
sahf
outsb
add
mov
sub
or
fs
aas
data16
or
mov
cmp
jns
xor
cmpsl
into
cmpsb
or
xchg
lods
xchg
scas
lret
add
cmp
repz
fadds
push
add
pop
add
sub
pop
add
sub
icebp
add
cmp
imull
jmp
adc
shlb
inc
stc
or
add
xchg
les
add
fdivr
mov
movsb
or
adc
sti
ficoml
jge
sbb
fadds
aas
int
xor
add
inc
push
xchg
xchg
stc
pop
add
xor
add
push
inc
imul
add
ja
pushf
das
dec
or
add
movsl
jno
idivb
insb
cs
push
pushf
enter
test
add
or
sbb
jns
sub
jb
sbb
xchg
clc
shr
mov
add
adc
outsl
roll
and
ds
out
cmp
je
enter
mov
out
mov
clc
add
mov
mov
std
ret
mov
lock
inc
sub
mov
adc
lea
mov
sub
or
dec
add
pusha
mov
mov
cmp
adc
cmp
add
push
xchg
inc
add
cld
jne
dec
jmp
hlt
mov
add
pushf
sbb
cmp
testl
mov
add
test
ret
pop
fiadds
enter
add
mov
xchg
and
mov
shl
addl
adc
test
popa
fsubl
mov
in
fmuls
lds
or
mov
sub
push
xlat
arpl
in
mov
add
sub
stos
mov
sub
add
xor
test
sbb
push
pop
jmp
mov
movsb
aam
sbb
sbb
fistl
lret
or
adc
sub
mov
hlt
enter
cmp
fwait
in
cmp
and
lea
sub
sub
mov
fldl
inc
jnp
bound
mov
das
add
int
pop
jl
in
iret
repnz
mov
sub
shll
and
test
cmp
xorb
popa
push
add
lds
mov
je
fadd
enter
and
pushl
fbstp
les
and
mov
in
pop
fsubs
pop
mov
imulb
data16
outsl
shl
lds
add
in
pop
sbb
add
push
test
xchg
fbstp
out
mov
addl
out
fstl
pop
mov
rcrl
movsl
cwtl
ds
inc
addb
sbb
es
add
mov
pop
pushf
mov
shll
dec
or
in
add
hlt
jecxz
inc
push
xor
pop
sbb
loope
sbb
mov
lock
cmp
inc
add
cmp
sub
adc
pop
mov
addb
ljmp
cwtl
add
inc
insb
addb
add
loopne
pop
or
pop
pushf
sub
icebp
mov
mov
mov
aam
adc
inc
push
dec
xchg
adc
and
push
lcall
mov
mov
push
push
add
sbb
and
inc
mov
bound
inc
pop
in
jns
outsl
add
dec
adcl
pop
add
mov
add
fildl
jle
call
mov
mov
repz
or
dec
clc
add
test
rolb
xor
cmp
pop
xchg
mov
xchg
sub
xor
xor
sub
add
je
inc
mov
fwait
sub
addr16
fdivs
out
test
movb
enter
sbbb
movl
in
mov
enter
rorb
js
imul
push
push
jecxz
ss
iret
push
pop
mov
cmp
nop
add
adc
cmpsl
add
aad
lods
add
adc
data16
leave
jns,pt
jb
sub
add
bound
xor
inc
add
jle
imul
inc
lds
int3
xchg
push
add
adc
cltd
daa
enter
sarb
jne
or
jl,pn
shrb
mov
mov
dec
dec
sub
sub
shl
or
pusha
aas
pop
ds
jno
in
loopne
outsb
and
pop
dec
inc
pop
push
dec
nop
iret
push
leave
xchg
mov
push
sbb
push
cmc
pop
daa
insb
loopne
mov
or
gs
and
pop
faddp
add
push
and
aam
push
faddl
or
or
test
add
clc
lock
ds
add
mov
sub
adc
mov
incb
cmp
xlat
jbe
add
into
or
xchg
adc
pusha
insl
pop
in
scas
int3
add
rolb
test
hlt
add
icebp
sbb
mov
cmc
nop
add
ret
jecxz
jb
je
xchg
fdivr
loopne
test
xchg
add
sbb
mov
out
mov
inc
xchg
fadd
in
cmc
out
cmp
mov
push
inc
cld
bound
cld
icebp
lods
and
stos
ds
mov
loop
jge
dec
add
arpl
and
cmp
test
lret
jb
sub
sbb
leave
mov
push
fisubrs
adc
cmp
loope
jp
int3
subb
divl
test
pop
push
cmpsl
inc
sahf
dec
pop
inc
add
jmp
filds
or
add
push
sti
shlb
add
mov
push
add
cmpsb
int
aaa
ljmp
push
imulb
addr16
scas
ret
adc
or
push
pop
inc
sub
mov
pop
sbb
int
add
sbb
mov
or
mov
imul
flds
add
jns
pop
dec
sub
sahf
sbb
stos
cmp
mov
xchg
subb
dec
push
jns
cmp
xor
mov
lcall
sbb
jl
adc
mov
fs
je
jp,pt
add
xor
sbb
into
jecxz
ljmp
sbb
adc
call
jecxz
add
cwtl
in
add
leave
push
mov
int
push
lret
xorb
push
and
jns
add
jp
sub
fdiv
ljmp
mov
and
xchg
push
mov
fwait
inc
fldl
dec
sbb
push
movsl
inc
push
or
lahf
loope
mov
rcrb
jg
pop
dec
roll
mov
mov
nop
mov
pop
and
test
push
and
push
ds
fildl
stc
add
insb
clc
push
xor
jp
add
fcmovb
std
sub
mov
adc
mov
packsswb
repnz
jle
jp
clc
push
out
dec
jo
jno
add
push
sub
xor
fwait
push
scas
xchg
dec
shrl
repz
sahf
int3
add
ja
insl
and
sbb
loopne
nop
fiadds
mov
fcomps
inc
arpl
roll
mov
icebp
add
pop
enter
or
cmpsl
pop
xchg
testb
adcl
sbb
push
add
or
lock
push
push
push
iret
in
pop
dec
outsb
add
scas
sbb
mov
leave
lds
sub
mov
int3
stc
jo
in
pusha
add
push
cltd
mov
fistpll
ja
jg
into
mov
jno
add
and
and
rcrb
pop
inc
mov
subl
mov
dec
xor
sbb
inc
pop
lcall
sub
lea
clc
jmp
xor
loopne
push
movsb
not
inc
xorb
mov
or
dec
cmp
or
push
pop
push
adc
xor
test
sub
mov
jp
cmc
sbb
pop
push
mov
mov
in
push
inc
dec
lock
add
sub
outsl
jl
pminsw
scas
enter
test
sbb
cmpsl
xor
dec
in
cld
into
pop
push
pop
movsl
inc
push
orb
add
ds
sbb
repz
dec
cmp
cmp
out
jbe
mov
int3
cld
and
cltd
mov
lret
fsubl
push
ss
add
and
call
mov
adc
subps
add
xor
push
je
add
in
paddusb
out
ljmp
or
mov
add
and
mov
pusha
push
pop
or
sbb
sbb
enter
adc
out
inc
pop
cmp
insb
outsb
fsubs
int
data16
add
pop
pop
cmpsb
fsubs
mov
cld
jmp
xor
seto
mov
rcrl
iret
out
xchg
sbb
rcl
fistpll
adc
mov
inc
jnp
mov
or
hlt
pop
data16
mov
mov
cmp
xor
das
cwtl
enter
pop
pop
push
sbb
pop
fnstenv
cli
popa
add
shrl
cmp
add
xor
pop
mov
roll
xchg
fnsave
divb
cmpsb
xor
pop
sbb
int
aas
filds
jmp
jg
movl
je
sbb
enter
andb
mov
roll
jle
fldl
iret
scas
push
rcrb
cltd
mov
sti
add
loopne
ja
dec
repz
stc
push
daa
jecxz
mov
add
mov
rcrl
adcb
add
out
pop
arpl
imul
add
inc
and
add
cltd
outsl
fidivl
lahf
aam
repz
rorl
cmp
incb
jg
xchg
pop
inc
lods
mov
mov
push
movsl
aad
add
pop
imul
mov
jp
xorb
das
jbe
clc
add
test
mov
jg
sbb
frstor
and
push
add
shrb
add
ja
mov
xor
xor
adc
mov
mov
mov
jnp
pop
xor
xorb
mov
cmc
call
fidivs
mov
or
pop
gs
dec
add
mov
or
inc
jb
cwtl
xor
jnp
cmpsb
test
fcoms
les
popf
inc
outsl
add
dec
divb
sbb
or
cmp
sbb
je
sub
push
adc
call
push
cmp
fld
mov
sub
nop
cmp
or
aaa
add
jp
push
inc
jo
sbb
add
xchg
in
pop
inc
mov
lret
sbb
push
inc
add
adcl
pop
jmp
fisubl
cli
out
stos
dec
add
lcall
aam
xor
outsl
pop
insb
adc
inc
add
xchg
push
add
outsl
xchg
hlt
subl
leave
pop
sub
imul
add
adc
lods
shrl
sub
cmp
dec
in
push
bound
rcll
repz
add
inc
xor
and
or
or
adcl
icebp
movsb
add
inc
jg
and
push
jmp
and
pop
cltd
pop
push
cld
sbb
lock
or
and
add
dec
sbb
and
es
fldenv
push
sub
pop
iret
call
icebp
mov
xchg
loope
sti
gs
orl
xor
repz
fneni(8087
adc
mov
xor
jo
push
push
push
repnz
add
mov
loope
les
insl
ljmp
xchg
cmc
enter
rclb
sbb
enter
mov
jbe
movsb
xor
daa
insl
mov
inc
or
psrld
ret
jnp
inc
adc
pop
test
ljmp
clc
aas
lods
filds
in
add
adc
lahf
arpl
test
mov
leave
js
add
mulb
loope
mov
loop
mov
push
add
xor
flds
cmpsl
fs
inc
scas
imul
or
push
cmc
subl
add
cmpsb
fs
mov
cmpsl
icebp
cmp
xchg
add
jns
cmovo
call
pop
dec
arpl
pop
push
dec
in
add
push
mov
aad
outsl
inc
roll
cmp
add
sbb
jbe
sub
icebp
lret
nop
sti
jo
add
dec
xor
rcrl
or
jo
mov
dec
xor
jmp
rcr
loopne
add
rcrl
cli
pop
jns
pop
sub
xlat
add
push
pop
sub
fs
imul
fnsave
or
and
add
fidivl
nop
in
mov
js
fsubs
jb
ss
negb
pop
ja
addr16
dec
fiadds
sbbb
push
add
pusha
inc
mov
in
mov
ljmp
inc
mov
xchg
cs
sbbb
add
mov
push
dec
dec
stc
jne
add
int
and
jbe
std
loopne
mov
out
popa
dec
add
pop
js
add
test
add
xchg
pop
imulb
adc
xchg
add
into
fimull
xor
fstp
lret
int
add
movsb
inc
jg
sbb
mov
addr16
lock
or
aad
push
xor
pop
add
mov
lcall
aam
dec
cwtl
mov
sub
mul
xchg
adc
jmp
sarl
jne
cmp
sbb
add
jno
in
xchg
add
in
js
add
dec
jo
in
add
add
mov
into
add
repnz
cltd
adc
inc
sbb
ss
andl
ret
sti
roll
lods
xchg
xchg
or
mov
add
into
xchg
xorl
pusha
clc
inc
or
cmpb
loop
jne
sub
adc
dec
call
inc
xchg
and
in
nop
sub
out
and
mov
and
inc
and
test
test
inc
jbe
test
mov
cmp
mov
aad
cltd
adc
sub
inc
inc
dec
and
adc
add
mov
and
add
shll
daa
test
lea
push
js
adc
sbb
xor
mov
mov
xorl
and
jmp
cmc
pop
pop
mull
cmpb
sub
sets
add
inc
adc
adc
mov
xor
loopne
cmpsl
jecxz
repnz
inc
add
mov
out
inc
add
xor
mov
hlt
xor
loopne
sub
or
push
xor
pop
cmpl
jns
xor
sub
bound
fidivrs
mov
std
stos
inc
jge
int3
jo
xor
push
sub
cli
mov
pop
jns
fnstsw
or
mov
add
cs
bound
int3
add
addr16
push
sbb
dec
mov
jmp
push
mov
sbb
dec
pop
fsubrs
jns
add
fimull
lea
loopne
js
adc
jmp
in
dec
pop
sbb
add
pop
and
adc
sbb
sbb
xchg
cmp
pop
test
or
adc
test
sub
mov
or
scas
popf
push
bound
in
pop
and
int3
inc
push
adc
and
and
mov
les
push
mov
testb
mov
and
and
push
test
sbb
dec
push
inc
fdivl
cmp
xor
fwait
stos
push
mov
cwtl
test
movsl
mov
xchg
cs
fwait
popa
add
out
push
das
scas
int3
jl
add
push
ja
add
ret
mov
filds
daa
jo
mov
add
pusha
inc
clc
lods
jp
xor
out
test
xchg
cmp
add
les
add
dec
pop
cmp
ja
sub
ficompl
fdivrp
fwait
outsb
add
push
ss
loopne
ret
xchg
out
or
icebp
add
mov
jecxz
jle
pop
jo
xchg
repnz
jns
aas
jo
add
aas
mov
add
sub
add
and
pushw
push
jns
clc
add
cmp
fsubl
add
pop
jmp
push
mov
nopl
js
lds
push
adc
jl
filds
push
flds
mov
cmp
aad
pop
add
mov
sub
mov
push
cmp
shll
mov
aas
pop
xor
stos
test
pushf
pop
cmp
add
imul
jnp
pop
insl
rcl
jp
add
and
lods
fiaddl
ret
sbb
push
es
div
add
pop
mov
xor
imul
rolb
bound
cmp
add
mov
cmc
add
sub
mov
sbb
mov
aaa
add
lret
inc
js
pavgb
sub
cmp
add
mov
add
adc
std
pusha
subb
xchg
mov
in
pop
and
scas
inc
xchg
cmp
clc
adcl
xor
adc
cmp
idivl
pop
add
lcall
and
adc
sti
and
out
add
out
addr16
andb
aad
xbegin
fadds
adc
js
popa
shlb
mov
jp
pusha
cld
inc
and
adcb
or
xor
fwait
sub
adc
and
add
mov
subb
or
sti
or
sbb
jl
add
fucom
adc
push
adc
mov
cmp
or
lret
out
mov
test
jle
and
jbe
int3
stos
jmp
add
into
imul
cld
jmp
add
mov
jo
xchg
in
add
sbb
dec
out
add
insb
movsb
mov
data16
das
mov
mov
sbb
cmp
sub
add
mov
test
sub
out
mov
add
icebp
jbe
pop
data16
das
pusha
mov
xor
rep
outsb
xchg
inc
shll
test
mulb
out
repnz
mov
adc
xor
mov
rorb
mov
repz
mov
add
push
je
jmp
adcb
int
cmp
add
das
sti
std
sbb
out
fmull
lahf
xchg
adc
out
sub
jecxz
js
xchg
inc
push
fdivrs
add
into
sub
adc
pop
cmc
aam
imul
stos
mov
push
push
dec
and
lret
cs
in
xchg
cmp
push
movsl
in
cmp
sub
fcomps
rolb
imulb
add
std
xchg
add
mov
xor
mov
arpl
and
inc
roll
ftst
push
add
push
pop
filds
aam
add
or
sbb
mov
jns
add
add
popf
mov
cmp
filds
mov
mov
add
push
iret
pop
movlps
pusha
rorb
test
inc
inc
fwait
xor
movsb
rclb
add
sbb
mov
mov
das
fst
jg
stos
add
inc
adc
or
push
add
push
sbb
and
and
cwtl
and
xchg
int3
loopne,pn
sarb
mov
insl
stos
neg
add
pop
roll
xchg
in
push
shrb
out
sbb
loop
push
add
addb
add
dec
lock
arpl
push
in
or
pusha
fsts
jge
push
sbb
shrb
add
lods
sbb
add
stos
jnp
pop
arpl
into
lock
dec
add
add
jo
in
stos
out
ljmp
or
lods
xorb
inc
and
jnp
loop
lock
jbe
jg
lret
aam
loop
cmp
jnp
std
out
pshufw
fidivl
xchg
push
xor
mov
out
pop
add
aaa
inc
add
sbb
pop
sbb
shrl
push
mov
dec
jp
sbb
add
inc
dec
add
xor
lods
call
lock
mov
in
sbb
cmpsb
sbb
fdivr
stos
jns
mov
push
dec
push
mov
mov
popl
ret
sub
jle
dec
movsb
add
mov
sbb
iret
push
pushf
fiadds
cs
push
pop
loopne
mov
xlat
sbb
or
add
jle
mov
cli
push
push
rcll
insl
cmp
test
jmp
in
jp
mov
out
dec
dec
mov
push
cld
and
add
hlt
or
jb
push
repnz
popf
fsubr
fimull
sbb
mov
add
inc
outsl
push
mov
movsb
insb
faddl
jns
jae
fidivs
sbb
jnp
pop
ret
add
cli
sub
sti
out
dec
pop
iret
div
cmpsb
add
incl
or
add
enter
test
xor
cmp
out
mov
arpl
add
int
dec
fcmovnbe
outsl
inc
pop
jecxz
mov
in
xor
xchg
push
pop
mov
mov
mov
push
sbb
inc
pop
mov
mov
xor
into
pusha
lock
add
sub
sub
testl
mov
lock
push
cmp
and
xor
mov
add
dec
push
sub
jne
inc
lods
add
add
mov
dec
jo
add
lds
es
mov
das
fnsetpm(287
or
mov
xchg
sbbb
or
inc
cmp
xor
push
cmp
stos
fidivrl
mov
shll
add
fidivs
push
sub
mov
in
add
imul
addb
xchg
jns
inc
pop
fidivs
add
xchg
aad
push
roll
adcb
movsb
test
xor
decl
shl
cltd
shlb
jecxz
clc
in
xor
shr
sbb
jbe
stc
pop
push
movsb
add
jo
pop
fstpl
popf
shlb
and
pop
shr
cmp
or
mov
out
add
or
fidivl
mov
add
punpcklwd
jb
bound
fdiv
add
out
jne
in
stos
inc
add
insl
hlt
out
sub
add
ret
add
testl
xchg
push
nop
mov
mov
lret
lret
gs
push
rorb
inc
push
cmp
stc
fnstsw
imul
das
sub
loop
add
es
pop
call
bound
leave
call
pusha
rcrl
sti
inc
add
pop
pop
stos
in
iret
xorb
dec
test
and
push
int3
in
cmp
push
int3
or
pop
xor
cmp
insl
add
xor
dec
jnp
pusha
inc
shr
jbe
add
xchg
cmp
add
fwait
pop
js
jg
mov
call
pop
imul
loop
mov
xor
mov
test
stos
cmpsb
cwtl
add
xor
jns
std
jecxz
es
add
jl
add
das
jo,pt
dec
pop
jns
and
xlat
mov
sbb
mov
mov
xlat
lcall
rcll
inc
add
popl
fiadds
inc
mov
cmp
add
fdivr
out
stc
inc
add
aaa
sahf
adc
push
lret
xlat
jbe
andl
fimull
push
dec
ret
fwait
mov
out
sahf
sub
test
popf
add
leave
mov
inc
jmp
add
sbb
and
cmp
xor
cmc
pop
icebp
inc
pop
sahf
push
or
out
adc
leave
jae
cmp
iret
cmp
cmp
ret
movsl
cmc
add
fnsave
inc
add
add
pop
push
sbb
ret
xchg
lock
add
sub
add
test
lret
push
cld
daa
dec
add
xor
push
mov
add
sti
test
sbb
int3
inc
xor
or
icebp
push
arpl
outsb
add
es
lea
fisubs
lret
add
mov
and
mov
shll
std
add
or
mov
pop
add
mov
dec
push
xor
add
push
jg
fmuls
add
dec
jge
lret
add
test
in
stos
adc
int3
leave
xchg
inc
adc
fldl
push
test
add
mov
rcll
inc
dec
jecxz
ret
add
das
pop
add
inc
cmp
xchg
and
cmp
inc
lods
xchg
jle
leave
jns
in
or
jle
pop
inc
testb
shl
mov
and
add
ret
dec
lds
loop
sbb
test
jecxz
aad
scas
pop
jmp
cmp
xchg
push
es
xor
mov
inc
add
test
inc
out
imul
iret
sub
add
rclb
lcall
xor
or
add
lea
inc
cmpb
mov
mov
rclb
sbb
add
push
mov
add
adc
shlb
xchg
add
cmp
add
xor
add
insl
dec
mov
and
test
add
mov
push
imul
imul
add
nop
xchg
jb
dec
sub
jns
in
jle
jmp
add
jae
or
cmc
add
cmp
lahf
sarb
xor
mov
enter
cmp
xor
loop
inc
aad
std
add
aas
je
test
lods
pop
inc
pop
test
sub
adc
pop
mov
pop
sbb
cmp
xchg
pop
pop
rolb
mov
mov
sub
cmp
mov
lea
xor
mov
dec
jbe
adc
mov
add
cmc
or
adc
inc
repz
sub
movsl
adc
in
lods
ja
cmpsb
nop
sub
adc
cli
es
cmp
leave
mov
pop
mov
mov
jmp
lahf
or
int
sub
adc
les
cmp
gs
push
add
push
jo
stos
cld
lea
pop
xchg
mov
jecxz
mov
add
aas
imul
cld
inc
add
sbb
insb
out
pusha
bound
jl
jge
xchg
sbb
pop
out
add
jns
fs
ret
add
mov
jnp
inc
jg
add
or
call
repz
inc
rorb
fildl
xor
aam
insl
rcrb
ror
sbb
add
jne
in
int3
shrb
mov
mov
loopne
mov
and
mov
inc
sub
xchg
add
cs
jl
mov
add
mov
pop
push
add
loopne
mov
pushf
fs
jae
arpl
jl
aad
mov
mov
and
inc
add
xor
stc
pop
adc
or
js
lock
push
adc
inc
add
adc
pop
jae
test
mov
insl
add
mov
lret
shll
add
push
flds
idivb
mov
mov
xchg
add
pop
fdivs
js
mov
add
xor
sub
pop
add
or
pop
flds
jl
lea
dec
shlb
mov
iret
in
xlat
scas
jle
jns
add
fnstenv
or
mov
mov
std
adcb
cmp
ss
aaa
decb
adc
pop
add
xlat
mov
sub
mov
fisttpl
int
lea
adc
sti
into
xchg
sarl
ss
xor
nop
clc
add
and
shll
mov
inc
adc
xlat
scas
leave
inc
or
mov
pop
hlt
ret
sbb
and
mov
add
pusha
inc
mov
add
push
popl
clc
xor
pusha
add
inc
jg
sub
loopne
add
sub
int3
add
inc
ljmp
jne
cmp
adc
in
mov
jnp
mov
add
add
aaa
xor
lahf
decb
push
enter
loopne
jl
orl
imul
shrl
addb
lods
pop
mov
add
daa
mov
pop
testl
sub
js
movsl
inc
add
hlt
mov
mov
popf
call
cmpsl
dec
mov
push
xorb
push
in
mov
mov
mov
sti
mov
popf
movsb
and
mov
pop
pop
push
mov
insl
sahf
mov
lock
loopne
ja
add
addr16
mov
xor
ret
lea
adcb
and
adc
inc
roll
dec
lods
pop
into
sbb
add
push
push
push
das
add
fdivs
add
sub
add
inc
xchg
pop
or
or
aaa
int
test
adc
movsb
dec
shll
mov
popa
add
jecxz
cmc
repnz
and
inc
arpl
roll
xor
mov
out
cld
add
mov
stos
nop
inc
cmp
sub
add
push
call
and
ds
mov
mov
dec
mov
sub
dec
addb
lds
xchg
inc
sbb
jb
jmp
lret
add
dec
mov
leave
lds
aam
push
xor
shrb
and
pop
add
div
nop
push
jecxz
cmp
insb
xorb
pop
movsl
mov
inc
mov
add
inc
pusha
dec
push
je
pop
dec
pop
xor
movsl
pushf
add
shl
sub
loop
pop
bound
dec
or
pop
inc
dec
xchg
lods
sti
loopne
incb
dec
push
lock
and
jge
cld
int
mov
cli
xchg
add
and
jl
xchg
dec
std
add
xchg
lcall
adc
jns
cli
push
aas
in
dec
add
dec
in
mov
inc
popa
pop
bnd
push
dec
out
add
mov
pusha
xchg
incb
cltd
add
mov
add
sub
shlb
jl
ss
add
push
add
and
xor
add
das
clc
inc
cmp
xlat
jecxz
int3
jno
cmp
add
xchg
jne
ficomps
sti
psllw
pop
adcl
and
inc
add
clc
cltd
dec
addr16
sbb
cmp
ret
jmp
push
xchg
ja
insl
in
shrl
or
sbb
std
sub
cltd
sub
pop
cwtl
int3
xlat
fadds
jb
sahf
loop
and
xor
clc
or
mov
add
divl
pusha
sbb
sbb
cld
or
or
in
rcl
int3
add
jne
sbbb
out
repnz
push
xorb
cwtl
stc
ss
sbb
test
and
add
jp
jb
cmp
cld
js
mov
test
mov
or
or
test
mov
mov
leave
int3
pop
repz
xlat
loop
mov
pop
fstps
adc
clc
popa
add
pop
dec
jp
add
lds
mov
cmpsl
sub
aas
ss
lcall
jae
popa
add
out
in
pop
or
mov
push
lods
iret
add
sub
add
push
cmp
lret
hlt
roll
xchg
push
cmp
lcall
loopne
in
mov
repz
cmpl
push
dec
add
movl
aam
add
jge
or
pusha
xchg
cmpsl
sbb
cltd
aas
into
loope
sarl
add
fcoml
or
insl
mov
jbe
fdivrp
xor
fdiv
dec
fldl
xchg
mov
dec
shrb
hlt
dec
xchg
add
xor
inc
cmc
lock
jecxz
shrl
sarb
stos
jge
mov
lods
jne
imul
les
jg
jo
add
addr16
scas
xor
add
jmp
inc
push
add
jp
push
lods
mov
mov
add
sub
xchg
sbb
add
add
sub
inc
arpl
jae
inc
cwtl
ljmp
inc
lods
insb
mov
andb
sub
std
pop
dec
cmp
cmp
and
and
mov
les
nop
xor
test
add
xchg
jo
mov
adc
adc
movsl
and
add
insl
mov
lock
push
test
adc
cwtl
addr16
subl
dec
cmpl
popa
out
add
cltd
test
aas
inc
lock
sbb
cmp
aaa
loopne
in
ret
das
add
mov
add
lahf
pop
push
xchg
icebp
lock
xor
add
or
hlt
xlat
cltd
mov
push
movsl
push
jnp,pn
nop
int
mov
push
jno
imul
or
jae
push
cmp
out
pop
xor
and
xchg
in
popf
mov
daa
cmpb
cmp
or
dec
loop
xor
add
gs
imul
daa
fisttps
jnp
add
dec
stos
ss
js
cmp
pusha
je
out
sbb
cmp
das
repz
pop
insb
test
xchg
and
gs
jp
insb
nop
push
js
add
int
cmp
ret
in
mov
add
push
gs
xchg
mov
mov
inc
mov
sahf
add
adc
inc
add
jne
dec
repz
iret
loopne
lahf
loop
nop
jmp
xor
dec
out
jle
sub
pop
pop
add
adc
and
push
pop
cmp
int
mov
push
mov
aam
in
hlt
inc
repnz
inc
add
cmp
cli
rolb
scas
lret
roll
push
clc
pop
lods
rolb
sub
stc
mov
or
movsb
rcll
sbb
jb
dec
xchg
leave
add
sbb
pop
mov
mov
clc
mov
mov
mov
cmpsb
fisubl
ljmp
cmpsl
mov
adc
clc
ja
das
push
xor
add
jmp
movsl
sti
xlat
sbb
mov
jbe
and
dec
jns
int3
lcall
jb
filds
stos
popf
push
icebp
dec
add
jnp
test
pop
adc
mov
xchg
mov
std
sbb
dec
or
and
sbb
or
add
xor
in
inc
jo
add
jle
adc
sbb
sbb
stos
lahf
mov
addr16
das
inc
std
enter
or
popf
inc
ret
inc
sub
add
inc
out
pop
add
sbbl
scas
and
push
imul
outsb
adc
test
push
lods
cmp
mov
mov
data16
rcrl
sbb
addr16
in
shl
xchg
lret
xchg
push
pop
loop
and
jmp
add
fucom
clc
xor
push
sbb
outsb
mov
add
fldt
in
ret
pop
xchg
jmp
lcall
popf
cmp
push
hlt
clc
sarb
mov
in
sbb
and
add
pop
xchg
add
pop
fadds
enter
push
addb
add
pop
sub
mov
loopne
mov
sbb
jne
and
push
and
clc
test
jecxz
orl
lret
sub
call
fildll
scas
or
mov
adc
sbb
xor
dec
cmove
pop
mov
add
outsb
fistps
daa
xor
or
dec
push
jnp
mov
dec
cli
loope
js
jmp
jo
imul
push
dec
pop
adc
or
ret
mov
jnp
cs
js
push
addr16
inc
les
add
aad
ror
pushl
mov
rorb
jg
fstpl
sub
jmp
sti
jbe
push
xchg
hlt
in
mov
es
lock
add
and
pusha
xor
movsl
or
stos
cmp
in
xor
pusha
sbb
jl
jae
adc
add
or
mov
fadds
aad
mov
test
pop
outsb
jno
push
lods
mov
and
mov
scas
and
fcomi
add
jecxz
ds
arpl
fwait
movsl
fidivl
data16
push
add
push
xchg
inc
out
adc
loop
jle
stos
jle
or
sub
insb
cmp
mov
loop
adc
pop
js
fiadds
dec
add
sbb
adc
dec
or
repz
dec
sarb
movb
xor
adc
pop
xor
into
leave
xchg
push
and
inc
sbb
clc
or
shlb
repnz
pop
lea
pop
and
jmp
xlat
push
sarb
gs
mov
mov
cwtl
mov
add
gs
mov
and
je
add
jecxz
mov
outsb
jo
dec
add
mov
popa
hlt
add
cli
lock
jle
movsb
or
cmp
inc
mov
cmc
xchg
add
sub
push
es
bound
cltd
negl
xchg
mov
pop
or
add
jno
cltd
dec
push
add
sub
inc
jns
or
inc
data16
lods
pop
mov
jb
jb
cmp
xchg
sub
add
xchg
int3
insl
daa
clc
or
ffree
xor
add
sbb
add
add
sarb
push
sbb
fidivs
inc
out
push
inc
xchg
pusha
ret
jns
fstps
mov
loopne
push
addr16
loopne
sub
inc
add
or
add
out
mov
mov
xchg
pop
sbb
push
mov
lret
aas
xchg
es
mov
add
jne,pn
ljmp
cmc
dec
inc
aad
mov
adc
movl
jns
ja
lahf
popf
mov
pop
aam
add
negl
jle
inc
pop
lahf
pop
lods
in
loopne
incb
or
jne
or
cmp
push
cmp
fisttpll
sbb
adc
add
xor
push
popa
insl
mov
inc
xchg
ljmp
xchg
stc
and
iret
mov
rcr
nop
sbb
jno
inc
in
and
pop
mov
mov
test
nop
cmp
js
jbe
push
sub
sahf
sqrtps
inc
add
mov
dec
rorl
sahf
pop
lods
mov
dec
pop
lock
arpl
popa
inc
sub
add
std
hlt
add
push
inc
jl
mov
adc
imul
and
lods
add
lahf
cmp
cltd
popf
stos
or
dec
pop
test
mov
sbb
or
shr
pop
push
or
jmp
push
add
insb
jg
test
lock
xor
insl
inc
fucomip
mov
call
stos
test
outsb
xorb
and
mov
sbb
faddl
dec
pop
notl
or
lret
add
mov
inc
cmp
addr16
mov
jp
or
popf
xor
add
imul
insb
inc
mov
mov
add
cmp
inc
add
ret
cmpsb
insb
pop
movsl
xor
xchg
xor
lahf
jne
add
or
loopne
in
das
xor
mov
xchg
xor
es
add
pusha
pop
ret
pop
jae
sub
push
es
add
adc
cmp
fcomps
mov
add
push
jns
cmp
or
dec
nop
and
push
ret
pop
test
add
mov
add
and
lock
ljmp
jmp
loopne
movsl
out
add
dec
cmp
dec
rcrb
jle
scas
aad
and
rcrb
adc
add
mov
decl
andl
pop
jnp
jle
or
daa
rclb
js
addb
pushf
jp
mov
aam
mov
mov
ficoms
add
mov
repz
add
push
xchg
in
or
cwtl
mov
ja
add
mov
push
fldt
add
pop
dec
add
mov
ja
xor
adc
mov
or
mov
xchg
cmp
int3
punpckldq
daa
mov
mov
jle
or
bnd
fcomp
push
loopne
nop
mov
pop
mov
push
ret
mov
add
mov
add
pop
addr16
jb
in
js
add
leave
punpcklbw
loop
nop
mov
sub
mov
ret
clc
mov
add
nop
ret
fcmovu
dec
add
mov
arpl
mov
in
mov
js
add
in
mov
in
push
shlb
add
js
shrb
add
add
ja
jge
fmull
add
out
movl
push
pop
jmp
insb
test
rolb
lea
inc
mov
lcall
repz
rclb
add
loopne
cmpsl
add
jl
pop
push
add
and
imull
addl
push
jp
sub
and
mov
jmp
ljmp
mov
mov
inc
jns
jmp
adc
rcr
inc
add
dec
int3
add
cmpsb
inc
or
mov
outsb
add
cwtl
repnz
add
xchg
xlat
add
testl
ss
jbe
add
fs
out
in
cmpb
bound
out
jns
add
sbb
lret
jne
pop
imul
xchg
out
inc
pop
add
sbb
lods
jns
in
imulb
outsl
add
pushf
xorb
rorb
add
sub
sub
xchg
add
jl
inc
pusha
push
enter
and
popl
jp
test
jno
lret
loope
xchg
add
mov
iret
add
mov
add
xor
push
gs
movsl
mov
xchg
xor
add
fnstsw
add
adc
movsl
fsubs
movsb
sbb
inc
hlt
adc
sbb
xchg
loopne
xchg
cmovl
xor
lock
or
sbb
jle
leave
aad
sub
fimuls
mov
cltd
hlt
add
lods
add
xchg
pop
mov
add
scas
mov
push
stc
fmul
shl
cmp
cmc
rolb
lea
lret
cmp
sbb
or
cwtl
inc
dec
sub
cmpsb
jg
add
push
test
add
adc
add
int
and
movb
cmp
pop
add
popa
push
jg
stc
xor
dec
adc
xor
mov
ss
bswap
and
push
jnp
push
cmpsl
in
ret
dec
sti
sbb
add
push
jmp
sub
add
ficoms
mov
add
imul
xchg
fs
mov
jg
enter
pop
mov
lock
inc
lcall
xchg
rep
adc
mov
xor
xchg
xor
dec
arpl
and
inc
dec
lret
jl
cld
jno
ds
and
push
std
add
test
lea
leave
jg
add
roll
out
cs
cmp
movsb
xchg
nop
cmp
adc
cmp
mov
rolb
hlt
mov
pop
add
out
aam
lret
clc
sbbl
aaa
mov
jo
add
add
dec
push
incb
mov
pop
outsl
pop
inc
cli
sbb
or
add
or
enter
and
cltd
add
pop
mov
in
mov
lock
outsb
outsl
pushf
sbb
lret
pop
mov
sub
sbb
add
out
cmpsb
gs
mov
push
pop
mov
aam
jmp
mov
cmpsb
xor
and
mov
ja
lock
sbb
add
les
adc
jg
mov
mov
cmpsl
add
sbb
out
pop
fdivp
adc
push
ja
test
js
add
imul
mov
enter
xlat
push
jnp
movl
pop
icebp
push
lret
pop
insb
sbb
loop
cmc
add
inc
fistl
ds
inc
sub
pop
in
mov
cmc
sub
cmpsb
orl
sub
pusha
mov
dec
repnz
enter
lock
sub
add
jbe
ret
scas
xchg
or
cmp
add
jnp
stos
cld
sub
mov
inc
in
xor
mov
lods
scas
add
pop
and
inc
add
ja
pop
iret
adc
add
outsb
mov
xor
arpl
xchg
dec
icebp
add
push
fdivrl
scas
add
xor
cmp
jle
mov
dec
mov
push
inc
add
pop
or
fsubl
add
repz
lret
jg
mov
adc
jmp
mov
add
lret
testb
pop
add
pop
pusha
inc
mov
stos
xchg
stc
testb
jnp
inc
mov
dec
jo
inc
negb
sub
test
and
addl
repnz
aas
rolb
es
sti
add
fisubrl
inc
add
ljmp
add
xlat
pusha
sbb
bound
xchg
cmp
clc
push
and
add
rcrb
mov
add
add
sub
push
jne
add
out
std
mov
add
push
cmpsb
xchg
jp
xchg
cmp
gs
inc
cmp
and
jl
ret
roll
sti
in
incl
fsubrp
pop
and
ja
je
cmpb
mov
mov
bound
js
xlat
inc
movsl
xchg
outsb
lret
fwait
das
dec
pusha
xchg
cmp
lock
push
mov
and
mov
mov
xorl
lahf
push
cmpsl
fwait
cmp
add
push
jnp
add
sbb
mov
lret
mov
push
loope
add
fwait
hlt
sbb
lds
mov
pusha
xlat
addb
ss
dec
data16
mov
add
mov
and
add
pop
int3
dec
xchg
add
cmp
jl
dec
test
rol
int3
xor
add
push
fwait
loope
fildl
dec
pop
xor
popa
stos
xchg
es
js
sbb
insb
sbbl
cmpsl
aaa
sarl
ret
jmp
adc
fistl
test
call
leave
sbb
adc
fs
add
mov
and
rcrb
add
mov
cmpsb
inc
add
iret
jno
xor
sar
jo
out
xor
mov
sub
add
push
or
lea
mov
rcr
popf
sbb
and
lcall
lods
cmp
mov
aaa
mov
movsl
nop
enter
sbbb
hlt
into
pop
mov
add
dec
cmc
adc
mov
push
pop
cmp
add
mov
jle
adc
jecxz
dec
andb
outsl
push
loop
add
sub
pop
mov
add
mov
or
adc
add
mov
add
pushf
mov
and
add
push
mov
add
xor
jo
pushf
add
adcb
and
mov
jmp
sbbb
pop
dec
stc
ret
inc
xchg
cmpsl
cmpsl
fld
loopne
or
and
and
sbb
pusha
insb
add
ljmp
inc
pop
push
push
int3
jbe,pn
xchg
fnstcw
lods
imul
mov
and
jg
ret
arpl
shll
in
jo
or
mov
push
dec
and
pop
and
lods
ror
mov
inc
xlat
ffreep
or
ds
xchg
cwtl
push
out
or
rcrb
add
sub
pop
mov
xor
das
rorl
push
push
xchg
icebp
cmp
fsubs
scas
sbbb
sbb
cld
jge
add
add
push
and
add
push
fwait
movsb
fimull
stc
add
addb
aas
xchg
or
stos
mov
mov
test
sub
shlb
add
cltd
unpcklps
les
jp
btr
xor
addr16
jne
in
or
xchg
xchg
mov
add
in
inc
jecxz
xchg
push
mov
pushl
cmp
mov
add
jo
cmpsl
test
cmpsb
ficompl
dec
pusha
loop
pop
repz
adc
add
jo
mov
enter
dec
add
fnstcw
mov
inc
xchg
je
mov
es
jmp
add
insb
rclb
pop
fadds
arpl
jnp
xchg
pop
xchg
adcb
add
mov
movb
mov
mov
add
imul
int3
xchg
sarl
and
test
adc
fistl
jo
ds
adc
adc
mov
xchg
fnstcw
add
and
pop
pusha
jnp
pop
notl
sti
mov
xor
imul
fs
scas
xchg
or
cmp
mov
repnz
int3
lods
xchg
and
das
std
or
mov
add
enter
iret
inc
out
mov
mov
scas
xlat
sub
ja
xchg
or
jl
cmp
jmp
popa
popf
xchg
xchg
add
xor
sub
add
pop
ljmp
and
cmp
mov
arpl
adc
enter
push
mov
cli
sub
pop
mov
push
ffreep
test
ret
xchg
pop
cmp
out
add
mov
aas
orb
xchg
jp
add
xor
outsl
aam
imul
int3
add
call
aam
add
or
mov
sbb
incl
dec
pop
out
dec
add
inc
hlt
pusha
xor
push
mov
call
add
fnstenv
imul
pop
popf
push
jae
mov
in
xchg
inc
xor
dec
bound
jecxz,pt
test
or
add
insl
loope
pop
stc
cmc
sbb
mov
lods
mov
add
mov
add
push
add
cwtl
jbe
ret
add
sbb
das
jg
lea
jno
pop
push
dec
in
pop
adc
xchg
inc
aas
jae
iret
das
sti
add
mov
fidivrs
stc
orb
sahf
add
ret
adc
lea
xchg
push
stos
add
cmpsl
mov
mov
jg
inc
sub
push
cli
std
daa
ficoml
fstl
jg
cwtl
sbb
pop
faddl
or
pusha
pop
inc
outsb
push
add
pop
push
push
loopne
sbb
cmpsl
push
loopne
pop
filds
das
mov
and
add
push
mov
roll
sub
jmp
add
ss
sbb
mull
add
xlat
out
out
popa
test
rcll
cmc
dec
adc
push
rcrb
mov
js
das
add
in
adc
add
lds
jo
inc
push
sub
fdivp
lods
or
adc
adc
gs
pop
jns
cmp
cmp
into
clc
add
mov
xchg
addb
cmp
jae
fildll
cmpsl
int
add
inc
add
divb
jbe
or
push
sbb
cmp
mov
add
xchg
test
dec
loope
or
fadds
and
aam
inc
push
data16
jae
sbb
into
dec
sub
xlat
adc
out
in
mov
aas
adc
or
cwtl
pushf
add
xchg
add
mov
mov
push
xchg
dec
add
insl
add
rcrb
jmp
add
cmp
shlb
cmpsl
in
popa
dec
pusha
mov
mov
cltd
je
aas
jg
jb
insl
pusha
addr16
movsb
xchg
aad
jo
jle
ljmp
shl
ds
xor
adc
mov
add
jno
push
mov
pop
pop
xchg
xlat
test
ljmp
or
cmp
sbb
dec
lock
scas
ja
lahf
or
cmc
cmp
jnp
add
dec
add
add
jns
add
add
inc
aas
mov
xchg
pop
pop
pop
pop
inc
dec
push
jecxz
test
sub
imul
add
mov
push
jmp
add
and
mov
pop
add
daa
gs
xor
aaa
out
cmpsb
xchg
add
xor
add
test
scas
ret
sub
mov
push
stos
shlb
fistpll
ss
sahf
bswap
call
les
aam
add
adc
lock
call
into
mov
imul
jg
inc
in
mov
xchg
add
jl
pop
mov
nop
cmp
inc
fwait
sbb
mov
outsb
add
jecxz
pop
inc
dec
mov
jp
add
into
cld
mov
push
cmc
sbb
icebp
pop
bnd
add
inc
mov
inc
pop
je
insl
inc
inc
int
mov
cwtl
stc
jecxz
nop
dec
add
cmp
insl
add
mov
jnp
add
adc
add
fisttpll
lcall
mov
mov
inc
pop
inc
arpl
cmpsl
push
cmp
xlat
packuswb
add
das
lock
xchg
cmpb
outsl
pop
addr16
mov
adcb
mov
add
push
call
popf
data16
inc
in
sub
shll
nop
sbb
sbb
mov
jl
pusha
push
add
icebp
adc
cmc
jmp
and
adc
add
nop
repnz
add
test
xchg
clc
cmpb
push
idivl
add
hlt
pop
jnp
mov
or
cmp
jmp
and
cwtl
pusha
sbbb
setb
popa
inc
push
lret
jb
in
or
inc
jg
jo
push
icebp
repz
push
mov
mov
shll
pop
push
call
mov
leave
lret
lcall
mov
xor
clc
out
test
popa
adc
mov
loopne
sbb
or
stc
add
lock
in
dec
roll
clc
outsl
jbe
add
push
in
idivl
lret
add
ss
fidivrl
sub
add
cli
xor
mov
jbe
and
andb
cs
add
xchg
cli
scas
shr
in
push
ljmp
ds
inc
iret
fcmovnb
dec
add
push
push
mov
jns
mov
jbe
sbb
lods
sub
les
sub
mov
lcall
inc
pmuludq
sahf
arpl
mov
add
push
imul
jmp
dec
cs
inc
push
inc
push
repnz
mov
in
sub
and
add
jle
or
cs
mov
icebp
add
xchg
mov
sbb
pusha
pop
push
aaa
loop
lock
xchg
sahf
lock
test
mov
out
fiaddl
ret
inc
les
jbe
pop
in
xchg
xor
and
mov
cmc
scas
js
mov
rorb
inc
xchg
repnz
mov
std
add
stos
xchg
xchg
add
or
push
push
cmpsl
in
mov
arpl
and
shlb
sbb
test
or
inc
lcall
js
mov
add
leave
mov
sub
shl
mov
dec
cmp
cwtl
add
sbb
pop
push
pusha
xchg
ret
sbb
roll
xchg
or
cld
xor
cmp
adc
jg
push
add
sub
mov
adc
stos
lods
insl
inc
sti
into
lock
lahf
pop
mov
mov
les
add
cmpsb
lret
jns
jp
aaa
mov
pop
fsubp
inc
add
fstl
and
sub
ficompl
add
movsb
inc
insb
push
pushl
mov
ja
adc
xchg
add
sbb
clc
idivb
into
adcb
test
add
add
add
ret
aas
out
add
lret
jo
shlb
and
repnz
in
int3
cmp
je
add
jl
jo
imul
ret
add
inc
dec
stc
jge
movsl
inc
dec
inc
into
test
inc
sub
pop
sahf
repnz
mov
cltd
add
aad
cmp
adc
fsubrl
fs
and
or
sbb
fstpl
add
repz
sti
decl
sarl
jns
sub
loope
add
push
jo
xchg
fnstenv
in
push
add
ret
adc
add
fsubrl
int
cmp
pop
dec
shll
adc
jge
lods
push
inc
mov
sub
popa
inc
adc
and
test
push
imul
icebp
push
lods
pusha
mov
imul
dec
mov
push
xor
xchg
out
aad
add
das
jecxz
mov
add
xchg
mov
pop
clc
inc
icebp
pop
cmp
mov
aad
and
sub
push
mov
inc
lcall
or
gs
add
jl
lock
mov
cmp
dec
cmpsb
aam
test
test
mov
xchg
jae
add
pop
rolb
in
ljmp
push
xorb
adc
clc
movl
mulb
mov
dec
pop
inc
adc
je
fs
add
sub
cld
inc
and
aas
pop
push
es
cmc
out
ja
subb
imul
dec
lret
xor
adc
xchg
dec
pop
sub
inc
sbb
mov
sbbl
jle
out
jecxz
jbe
shlb
jmp
sbb
call
jbe
pusha
clc
xchg
add
call
mov
adc
roll
jo
repnz
fnstcw
ret
push
mov
push
lods
jbe
cli
add
xor
mov
push
add
jmp
icebp
ret
shlb
adcb
sub
insl
add
mov
mov
inc
ret
pop
adc
cwtl
aas
sbb
ljmp
scas
dec
cmp
add
mov
shll
or
stos
inc
hlt
adc
add
jmp
mov
jb
out
fwait
add
sar
inc
pop
sbb
out
mov
xchg
mov
dec
comiss
shrb
icebp
add
fistpll
mov
mov
jo
add
add
add
shrb
mov
push
mov
add
xchg
lods
mov
int3
pop
pop
add
orb
movsl
cmp
add
jp
adc
lcall
pop
into
inc
sbb
add
mov
mov
xor
fiadds
pushf
clc
add
stc
pop
mov
inc
bound
jle
jmp
pop
jl
in
or
push
sub
adc
sbb
shlb
shlb
lahf
add
and
stos
mov
mov
add
xor
lock
xchg
jno
xchg
mov
movsb
les
shlb
sub
add
stos
or
xchg
lret
aaa
push
add
hlt
mov
in
dec
in
add
or
icebp
loop
mov
popf
jge
push
jne
test
add
sbbb
fmul
fs
imul
loopne
xchg
push
jne
add
aam
shll
push
push
or
inc
jecxz
add
mov
cltd
xchg
mov
repnz
rcr
call
iret
add
pusha
int
jb
add
ss
jb
jle
push
in
sbb
stc
insb
int
push
in
into
mov
orb
fcomip
push
inc
push
and
mov
addl
scas
pop
std
push
repnz
add
sar
rolb
pop
inc
dec
sbbl
js
in
or
add
popf
inc
fiadds
divb
xchg
push
mov
add
movsb
mov
mov
lret
add
mov
pop
insb
jmp
xchg
add
push
or
add
aad
nop
rclb
add
push
movsb
xchg
dec
popf
in
lock
push
aam
pop
add
mov
mov
jns
clc
lahf
in
sbb
push
mov
add
and
jp
sbb
or
iret
mov
add
mov
das
cmp
cmpsb
add
enter
cmp
adcb
xchg
pop
xchg
add
dec
push
push
pop
cmc
jmp
sti
pop
add
inc
add
cld
sub
aas
push
lgs
std
and
jbe
or
adcb
clc
add
leave
imul
jge
cld
jg
sbb
and
lea
add
sub
add
incb
cmc
fcmove
outsb
add
dec
xor
add
cmp
sbb
xchg
dec
hlt
je
mov
testl
mov
lods
mov
outsl
dec
and
add
jbe
icebp
mov
inc
and
sub
js
xor
scas
mov
add
loop
push
add
mov
mov
fstpt
xor
popa
cmc
xor
cmpsb
cmp
int3
or
adc
cmp
sbb
add
xor
dec
mov
jg
insl
dec
mov
repnz
mov
hlt
cmpl
push
xor
hlt
pushf
sub
mov
add
loop
daa
add
stos
add
lret
mov
loopne
add
repnz
fsub
int
and
pop
xor
loopne
movsb
xchg
jne
add
in
adc
lea
push
ret
cmp
sbb
adc
std
mov
lea
out
je
add
or
pusha
mov
lret
sub
scas
sub
jb
xor
push
aas
adcl
jl
pop
sbb
inc
mov
lock
mov
add
outsb
lods
sbb
add
dec
inc
popf
or
sbb
mov
add
mov
sub
aad
fcmovu
pop
pushf
mov
adc
fidivs
repz
loopne
sbb
dec
push
xchg
call
add
jge
lds
out
and
inc
andl
xor
les
fistpl
push
sahf
sub
sarb
mov
std
mov
hlt
rcl
push
aas
adc
mov
call
dec
pop
mov
mov
in
popf
scas
pop
mov
jl
cmp
ja
jnp
hlt
repz
sti
je
jbe
lock
int
add
lahf
sub
ret
mov
dec
mov
pop
lds
push
fisubl
int
movsb
cli
mov
sub
daa
add
mov
js
jo
aaa
lret
pop
add
jnp
icebp
aam
les
inc
sub
imul
loope
cwtl
add
jnp
outsl
dec
hlt
loop
pop
add
int
shl
sbb
fldcw
push
ljmp
add
or
mov
orl
inc
bound
sarb
out
sbb
jl
sub
loopne
lods
es
dec
inc
sub
pop
shlb
add
jnp
leave
add
nop
outsl
arpl
cmp
or
dec
hlt
inc
loopne
lret
les
xor
add
cmp
orb
cmp
or
adc
adc
add
xchg
mov
addr16
into
cwtl
mov
jae
adc
or
jmp
mov
pop
add
or
cwtl
lahf
mov
jbe
jae
mov
in
ja
mov
cmpsb
jg
test
or
ss
xchg
jo
push
adc
cmp
add
sbb
add
inc
test
jge
orb
loope
inc
mov
inc
add
out
fst
add
adc
add
mov
pop
jge,pt
adc
mov
roll
add
add
rorl
mov
mov
or
push
je
xor
mov
orb
call
call
loopne
mov
dec
inc
mov
xor
jle
shlb
sbb
cli
mov
je
test
xor
ret
and
push
adc
or
adc
insb
fisttps
xchg
dec
mov
nop
dec
jb
xor
push
mov
sbb
shrb
pop
sbb
inc
sbb
dec
and
iret
aas
nop
inc
ror
mov
and
iret
xor
ljmp
mov
cwtl
and
pusha
adc
lret
mov
and
adc
repnz
and
sub
pop
dec
and
orl
adc
or
mov
gs
jp
pop
mov
xchg
adc
cmpsb
add
test
adc
test
xor
outsb
inc
pushf
mov
inc
and
push
js
and
sub
and
jecxz
rclb
mov
mov
adc
and
dec
and
cmc
adc
and
aas
jp
addb
inc
or
push
lret
mov
xchg
dec
push
or
xor
iret
shlb
clc
loope
mov
sbb
sbb
add
loop
popf
dec
mov
ret
cmpsl
sbb
adc
and
clc
rorl
sbbl
jae
mov
mov
inc
cmpsl
pusha
xor
sbb
arpl
push
xchg
adc
xchg
and
cld
dec
mov
mov
sbb
test
cmpl
sub
fldenv
jle
inc
repnz
xchg
arpl
in
push
dec
mov
add
xchg
loope
and
mov
cmp
and
jp
add
jg
mov
xchg
incl
cmpsl
adc
pop
repz
xorb
mov
fwait
jns
popl
lret
pop
mov
mov
dec
test
mov
testl
loop
wrmsr
sti
shrb
lods
adc
dec
sub
inc
arpl
sub
xor
or
xor
lcall
nop
fwait
jnp
push
jecxz
les
pop
js
inc
js
inc
cmpsb
xchg
add
imul
mov
jp
aaa
xchg
dec
jo
xchg
insb
and
mov
push
pop
rolb
addr16
and
xor
and
out
pop
lret
xchg
push
mov
ss
jo
mov
rorb
sbb
pusha
pop
dec
nop
adc
ja
and
pop
ret
cmp
cmp
lds
mov
mov
adc
adcl
or
sbb
xchg
jl
je
jl
js
jl
jl
les
pop
dec
ret
sub
test
scas
jg
mov
adc
xor
cmp
lock
push
cmp
rclb
adc
push
add
xchg
andb
shr
rcll
push
shrb
pusha
jnp
pop
call
push
ret
inc
rorl
std
cmp
bound
mov
inc
sbb
jo
stos
mov
push
imul
pop
push
xchg
lock
add
sbb
adc
mov
sbb
rolb
mov
mov
pop
and
cmpsb
adc
sbb
cltd
xchg
addr16
jb
or
jae
mov
je
mov
sti
or
cmpsl
pop
cmp
push
jno
cmpsl
cs
mov
ret
adc
out
add
inc
idivl
imulb
xlat
das
dec
or
xchg
inc
and
or
cwtl
call
add
mov
xchg
scas
and
add
xor
mov
test
sarl
mov
outsl
pushf
xor
test
mov
or
fiaddl
mov
aas
add
lret
xchg
push
movsb
add
mov
lock
push
ja
pop
in
pusha
pop
dec
add
outsb
sti
test
mov
pusha
stos
ret
orb
enter
pushl
js
push
add
arpl
push
cli
xorb
mov
mov
mov
add
push
push
sti
or
mov
add
fmuls
imulb
addr16
test
mov
push
fiaddl
inc
cld
lock
add
pop
dec
in
xchg
jns
sarb
scas
lds
push
xor
and
add
pop
pusha
cmp
jmp
mov
cld
jns
adc
push
xor
add
int3
leave
jp
push
cmp
aam
pusha
sbb
aad
xor
pop
xchg
sub
mov
add
ss
aad
or
mov
xchg
mov
clc
dec
push
mov
dec
aam
in
mov
inc
test
enter
outsb
dec
sbb
cmp
push
pop
mov
or
pusha
sbb
pop
sbb
push
rcrl
lods
insl
ss
fs
std
lds
outsb
lcall
sbb
jno
xorb
xor
xlat
mov
repz
sbb
leave
cmp
out
dec
mov
outsl
cmpsl
test
cmp
mov
xchg
in
outsb
mov
cmp
pop
and
hlt
insb
out
and
add
or
xchg
add
pushf
gs
mov
mov
push
mov
dec
or
ss
sti
adc
bound
add
push
shlb
add
xor
push
pop
pop
or
shlb
and
sbb
jbe
cmpsl
and
inc
xor
les
mov
mov
cmp
inc
sub
rcll
pusha
stc
sbb
idivb
jle
add
add
dec
add
fsubl
mov
int
inc
add
add
or
mov
or
bnd
out
push
push
mov
dec
jns
add
mov
das
lock
aam
nop
roll
dec
jmp
xchg
mov
add
xchg
mov
pop
clc
stos
add
mov
adcl
lock
xchg
add
mov
xor
nop
xchg
loop
loopne
jo
clts
adc
aas
inc
out
popa
add
mov
test
insl
fldt
and
mov
hlt
icebp
push
mov
loop
add
mov
pop
scas
mov
xchg
push
sarb
xchg
xchg
lock
xlat
sbb
adc
aam
xchg
call
mov
push
dec
pusha
add
push
ss
sub
and
test
xor
jnp
jg
test
sahf
ss
aaa
jmp
add
jg
xor
and
add
in
out
or
rolb
cmpsl
mov
add
pop
ja
test
push
sub
adc
pop
daa
scas
lret
or
cmp
add
mov
dec
mov
push
loop
loope
sub
add
shlb
cmpl
rep
sub
dec
mov
arpl
loop
xchg
dec
inc
stc
in
loopne
pop
jb
fistpll
pop
mov
mov
loopne
mov
mov
addr16
jg
ds
jl
adcb
adc
es
sbb
sahf
enter
test
inc
daa
pop
sarb
push
cwtl
loopne
orb
outsw
loope
es
sbb
in
dec
mov
jae
das
sti
cmp
cmpsl
push
mov
inc
sbb
insl
out
mov
add
repnz
lret
inc
push
faddl
fwait
leave
xor
repz
xchg
add
or
fildl
xchg
pop
loop
fdivrs
jns
xchg
stos
fsub
sbb
add
cltd
repz
and
and
addr16
add
add
sbb
xor
mov
gs
rclb
sub
add
xchg
ds
gs
stos
lret
sbb
into
rcrb
nopl
imul
or
or
js
xor
repnz
js
in
add
std
pop
ljmp
add
inc
stos
fucomi
loop
shll
fldenv
js
adc
test
mov
add
lods
cs
cltd
mov
mov
inc
jl
cmp
and
ljmp
in
test
lods
mov
sub
jns
xor
sub
stos
add
pop
add
sti
stos
mov
fcoms
xor
xchg
and
out
sub
addb
mov
popf
movsb
lret
loop
mov
push
orb
push
jnp
push
clc
and
and
imul
and
mov
mov
adc
xchg
pop
int3
cmp
add
mov
sti
add
cmp
jmp
cmp
mov
insb
sti
sub
add
jne
sub
out
scas
imull
pop
sbbb
and
mov
pop
xchg
frstor
orb
lret
lods
add
add
mov
shrl
les
pop
popl
sub
pop
pushf
add
js
fdiv
stos
insb
jge
add
je
nop
pop
xchg
sub
inc
les
add
jg
xchg
add
mov
shlb
into
ds
push
xchg
mov
loopne
and
add
aaa
inc
insb
mov
pop
xchg
add
fisttpl
add
fimull
test
inc
xchg
jecxz
adc
pop
mov
ljmp
pop
cmp
add
jnp
test
loope
mov
jns
test
orb
lret
jno
insb
add
add
mov
cmp
das
and
icebp
adc
inc
push
xor
and
jno
sarb
jl
ret
adc
dec
push
ds
or
pop
inc
pusha
sub
rcr
add
dec
or
add
call
add
add
and
mov
outsb
sbb
out
cmp
test
mov
jns
add
pop
and
adc
push
lds
push
mov
sbb
int
pop
fsubrl
or
into
arpl
mov
add
push
jno
xor
dec
add
bound
stc
pusha
jno
xor
je
add
mov
mov
scas
sub
or
std
lds
adc
movsb
jne
mov
cmp
xor
adc
jl
inc
and
inc
pushf
lcall
mov
repnz
iret
dec
imul
popf
sbb
adc
shl
sbb
testb
aad
sbb
fwait
sub
add
pop
cmp
mov
adc
jmp
or
ret
scas
mov
ja
inc
aaa
cmc
rcrb
inc
adc
je
add
popa
add
and
call
iret
sbb
je
adc
insl
pusha
cmp
sub
sbb
mov
pusha
cmp
adc
push
ds
in
fwait
jb
inc
and
sahf
mov
add
xchg
push
add
sar
jae
adc
jne
inc
push
mov
xchg
daa
fadds
cld
stos
add
fwait
in
hlt
sub
cs
pop
div
inc
mov
fcomps
adc
loope
nop
mov
enter
dec
repnz
add
or
cwtl
mov
adc
push
andl
add
mov
inc
add
xor
ret
jae
cld
dec
pop
jl
mov
jge
adc
sbb
sbb
sbb
cltd
push
jb
cmp
pop
push
ret
inc
in
and
call
into
das
push
add
fwait
lret
stos
roll
adc
or
negb
ror
cwtl
les
pop
sbb
cmp
or
pop
add
aad
cmp
add
fstpl
add
orb
inc
mov
cmpsb
add
ds
iret
in
xchg
roll
dec
pop
jbe
mov
add
dec
fcomi
outsl
add
into
jb
inc
test
pop
add
mov
sbb
jae
xlat
fwait
cmc
out
loop
cmp
addb
daa
add
hlt
lcall
in
sbb
add
pop
das
out
jge
jns
jno
negl
leave
mov
and
mov
and
xlat
loopne
sub
sub
fwait
add
dec
adc
test
pop
jle
cmpb
in
icebp
jl
pop
mov
mov
movsb
sub
aaa
mov
into
es
int3
mov
xor
nop
pusha
insl
movsl
je
js
add
fiaddl
cs
aas
loopne
inc
aas
pop
xor
and
icebp
fnstsw
cmp
pusha
lahf
mov
leave
push
sar
cltd
push
adc
dec
rolb
push
pushf
stos
sub
out
mov
or
clc
add
out
adc
xor
stos
add
sub
leave
pop
test
pop
jb
insb
rorb
pusha
rcll
lea
mov
mov
addb
add
loopne
out
add
xchg
stos
pop
add
xlat
mov
dec
cld
mov
xorb
cld
jp
sub
mov
mov
xchg
mov
pop
dec
icebp
sub
add
cmpsl
jmp
inc
adc
mov
dec
out
or
jne
push
mov
hlt
and
outsb
jg
push
adc
js
ds
sub
cmp
cwtl
pop
dec
dec
sub
fstpt
jne
add
fldl
hlt
sbb
dec
imul
rol
adc
mov
movsl
add
sbb
in
into
add
test
or
add
mov
and
xor
fcoml
nop
add
pop
mov
xchg
inc
add
lods
jns
dec
pop
test
out
mov
dec
aam
add
inc
xor
out
clc
and
or
mov
int3
insl
hlt
cmp
sbb
add
divl
cli
xchg
cmp
sub
ret
xor
jne
cmp
pop
testl
in
xorb
mov
mov
adc
jo
add
cmp
or
push
xchg
out
je
out
add
repz
xor
jl
shrb
and
sub
imul
add
add
cmovs
aad
inc
mov
dec
scas
push
push
mov
and
adc
xchg
add
cwtl
add
shlb
pop
cld
in
mov
je
jnp
push
fnstenv
loop
cmp
add
sbb
cs
popa
aad
xor
sub
add
mov
movb
psubsb
cmp
add
sbb
or
call
pop
sub
scas
repnz
adc
jns
inc
or
loopne
inc
mov
scas
add
pop
pop
rcrl
nop
mov
adc
adc
push
cmp
loopne
add
rcrl
into
adcl
stos
push
inc
push
repnz
je
pusha
ss
lods
lods
cmpsb
add
jns
test
xchg
mov
and
xor
clc
mov
roll
xchg
sub
jns
mov
xor
mov
icebp
nop
shlb
fadd
clc
adc
push
rcrb
dec
sbb
mov
adc
out
add
adc
stos
or
pop
and
xchg
mov
negl
mov
ljmp
adc
push
aas
pop
jp
jl
shr
cmc
add
push
xorb
out
xor
or
js
and
adc
int3
movsl
or
stc
jns
sbb
push
pop
xlat
mov
jp
adc
add
or
push
int3
andb
lds
jae
je
pop
jnp
inc
xor
pop
adc
lea
cmp
xor
test
int3
mov
popa
mov
hlt
sub
pop
mov
jnp
push
pushf
inc
push
rorb
ja
sbb
push
add
xor
hlt
push
mov
mov
nop
pop
ljmp
sub
cli
jns
out
push
loopne
pop
pop
pusha
jae
into
mov
add
rclb
xor
movsb
xchg
and
inc
sbb
test
mov
rcll
call
jle
inc
jnp
out
popa
and
popf
add
pusha
mov
out
ret
xchg
test
adc
lret
fsubl
add
adc
negl
filds
pop
jg
add
inc
or
jg
aam
insb
pop
mov
or
inc
mov
in
inc
cmpsl
sub
xchg
xor
clc
add
cli
sysexit
pop
rcl
popa
push
pusha
inc
fld
cmp
add
and
xor
ljmp
stos
mov
inc
mov
xchg
sub
inc
add
push
add
pop
inc
loopne
cs
pop
push
jbe
add
and
dec
ror
jl
add
sub
xchg
inc
add
pop
mov
loop
imul
xor
fidivs
xor
enter
shll
dec
or
inc
ds
imul
pop
and
mov
outsb
roll
mov
mov
roll
ljmp
pop
add
in
xor
add
out
outsb
and
dec
fdivrs
pop
imul
push
aad
pop
rorb
loop
sbb
cmp
and
mov
sub
lret
dec
call
aam
pop
int3
pushf
push
add
add
inc
mov
clc
xchg
mov
push
or
lock
jb
push
or
aam
dec
ljmp
imul
mov
push
rolb
daa
push
push
clts
push
mov
lods
fnsave
sbbb
mov
bound
mov
pusha
pop
sub
ss
add
mov
xor
sub
loopne
xorl
add
fbstp
gs
mov
pop
push
xor
andl
add
cmp
mov
adc
fwait
adc
or
rclb
fstpt
add
imul
pusha
scas
xor
loope
mov
pop
jbe
xchg
and
add
roll
call
mov
pop
mov
mov
mov
xchg
cwtl
out
push
dec
aad
rcrb
js
jl
mov
mov
or
adc
and
add
adc
add
and
mov
push
lahf
or
xchg
xor
pop
adc
add
cmp
add
mov
scas
cltd
daa
gs
enter
add
push
rorb
xor
sbb
daa
mov
stc
mov
and
pushf
gs
adc
push
in
xchg
ds
cli
pop
jne
push
rcr
pop
mov
mov
dec
movsl
xor
mov
loopne
aam
add
jno
cli
mov
rcll
repnz
lods
inc
mov
int
fistpl
and
push
add
jo
push
imul
decl
sub
lods
jecxz
in
flds
add
pop
add
inc
add
imul
jns
sbb
xor
sbb
xorl
add
add
test
add
and
loop
and
andb
cli
imul
pusha
cwtl
test
jp
dec
adcb
mov
mov
movsl
jnp
in
es
test
lods
pop
sbbl
add
or
add
test
add
mov
repz
lods
mov
lods
divb
scas
mov
adc
jl
xchg
jns
push
cld
mov
add
gs
or
jo
lea
jo
stc
daa
mov
push
unpckhps
add
jl
mov
add
sub
xor
jno
sbb
add
outsb
xor
setns
pop
inc
ficoml
mov
mov
add
add
outsb
add
out
js
je
test
or
ds
add
hlt
cmp
imul
aaa
xchg
sub
adc
and
repz
lahf
subb
loop
or
jnp
and
cmc
xchg
les
inc
lret
or
adc
xchg
sbb
push
ds
loopne
mov
je
mov
in
cvtpi2ps
in
xchg
sbb
loopne
lock
add
pop
cmpsb
add
mov
jns
lcall
mov
clc
loope
ds
xchg
push
or
cmp
inc
pop
mov
mov
fldenv
hlt
push
out
inc
cli
push
cmp
out
cmp
mov
or
dec
pop
scas
loopne
pop
aas
pop
mov
ljmp
cmc
out
sarb
or
add
cwtl
push
sbb
in
mov
lods
cmp
xlat
dec
adc
sub
daa
add
lahf
fdiv
shrb
rol
leave
inc
ss
add
mov
or
repz
xchg
cmc
sbbb
push
inc
jmp
push
sbb
popf
jg
pusha
jl
and
push
mov
xor
sarl
rolb
mov
stc
pusha
and
sbb
sub
sti
or
add
xor
mov
pop
aad
cmpsb
inc
std
push
add
xor
cmp
aaa
shll
add
xchg
test
insb
dec
add
jns
pop
shrl
cmp
mov
xorb
inc
add
mov
jmp
scas
jle
out
cmpsl
test
sti
incl
push
out
lahf
dec
arpl
scas
mov
cli
adc
out
adc
lret
jbe
outsb
je
fcmovnb
add
push
mov
aad
lea
xchg
dec
fdecstp
sbb
jmp
in
das
or
mov
outsl
cld
mov
dec
add
xchg
repnz
or
into
cs
pop
jne
sti
nop
insb
add
scas
jae
jno
rclb
jmp
push
das
add
push
orb
push
add
add
push
xlat
add
jmp
shlb
ljmp
adcb
pusha
movsl
popa
rcrl
mov
pop
pop
xchg
cmp
enter
cwtl
adc
cmpl
jp
fdivrp
mov
jo
sbb
iret
pop
xorb
mov
add
insb
movd
push
pop
sub
loop
je
add
std
push
in
lea
js
xor
inc
pusha
leave
add
xchg
xor
sub
add
push
jns
add
les
fadds
out
push
mov
mov
sbb
lret
xor
add
and
xor
xchg
dec
rolb
push
mov
mov
aas
inc
jnp
xor
mov
jmp
add
leave
push
jge
mov
out
ljmp
pop
sub
adc
in
and
cmp
xchg
or
out
mov
sahf
insl
mov
out
xchg
adc
call
inc
mov
add
pop
cwtl
xchg
add
int
push
call
sahf
aad
cmp
loopne
scas
jmp
mov
iret
dec
mov
xor
bound
jno
in
rolb
retw
lret
mov
addb
fbld
adc
or
cli
and
mov
mov
adc
lahf
sbb
mov
jno
lds
mov
inc
add
xor
fs
insl
add
popl
push
push
test
and
adc
sbb
mov
punpckhdq
lea
xchg
scas
push
call
add
push
adc
dec
mov
add
xchg
sti
add
in
mov
mov
jge
pop
cmp
cld
into
push
mov
push
xorb
testb
out
or
lock
mov
mov
in
add
dec
cmp
cmp
xchg
dec
push
pop
jecxz
loopne
mov
ja
fcompl
mov
or
add
sub
or
shl
in
out
jmp
add
mov
add
push
push
stos
add
push
jo
aad
add
movsl
or
pop
iret
mov
dec
mov
and
and
jg
jo
pop
jp
jge
cmpsl
add
push
pop
mov
pop
out
scas
add
and
nop
ds
sbb
sub
dec
and
inc
push
mov
cmpsb
inc
dec
pop
ja
push
call
lahf
test
push
repnz
add
es
rcl
dec
or
sub
scas
push
xorb
xor
in
jle
enter
xor
xor
xchg
pusha
push
pop
add
outsl
lea
rorb
inc
jne
jno
popa
add
lcall
daa
orl
mov
sub
xorl
pop
int
add
cmpsb
add
ds
push
pop
adcb
movb
jo
inc
mov
jno
or
mov
pushf
add
mov
enter
add
add
pop
mov
in
pusha
mov
or
mov
rolb
filds
jg
arpl
lea
pop
xor
push
inc
jbe
adc
scas
rcr
adc
hlt
out
iret
mov
cltd
cli
mov
dec
add
sarl
stos
cmp
js
sar
add
push
add
imul
and
nop
and
mov
shlb
inc
xor
add
inc
or
test
aam
pop
lock
out
add
mov
mov
jno
fpatan
and
jle
or
subb
sbb
pop
mov
mov
sbb
xchg
lods
add
popf
fimull
add
and
pop
and
jo
leave
jns
add
mov
out
add
cs
pop
mov
stc
add
push
cmpsb
or
fwait
push
add
cmpsl
mov
mov
stos
testl
jecxz
or
xchg
add
les
js
sbb
addb
fldcw
xlat
adc
sub
push
into
add
ljmp
push
or
icebp
xchg
out
dec
lahf
sbb
xchg
iret
shrl
dec
sbb
add
adc
dec
mov
mov
pop
sub
and
mov
add
inc
sbb
fisttpll
add
mov
cmp
mov
call
cmpb
dec
lcall
minps
xor
int3
or
push
aaa
wrmsr
sub
cmc
sub
mov
mov
cmpb
out
push
leave
lret
cmp
inc
inc
xor
jno
in
outsb
ret
pop
xchg
pop
mov
and
jne
push
push
addl
sahf
rolb
shl
add
out
inc
jmp
xor
leave
test
push
push
jo
add
or
out
pop
subb
push
hlt
shlb
sub
addr16
mov
sub
scas
ret
out
lret
adc
out
repz
pop
push
gs
pop
mov
je
fiaddl
inc
inc
les
sti
push
xchg
or
ljmp
push
push
jl
mov
add
and
jno
insb
call
lock
mov
and
push
iret
inc
xchg
add
inc
sbb
sarl
add
xchg
pop
inc
icebp
dec
mov
add
dec
sub
xchg
add
and
xchg
loope
mov
pop
psubq
sub
inc
push
mov
pusha
cli
inc
loopne
inc
mov
jp
push
add
arpl
xor
pop
push
bound
mov
jno
add
or
rcrl
rolb
sahf
int3
add
aas
repz
xor
rcr
aam
cmovo
jbe
mov
mov
add
and
push
xchg
ss
cmp
push
rcrb
mov
dec
add
cmc
clc
movsl
push
jp
dec
repz
dec
add
lock
std
in
sbb
xor
fldt
add
cld
cs
add
lret
sbb
add
insl
add
or
into
fildl
leave
mov
push
icebp
movsl
inc
out
je
add
sub
pop
jbe
mov
inc
cmp
call
mov
xor
lods
out
pop
sarb
xlat
addb
hlt
cmp
pop
pop
mov
dec
mov
out
jae
nop
xchg
add
fldt
rcrb
cltd
int
pop
sub
insl
dec
or
js
lock
cmp
mov
push
or
inc
popf
lods
or
add
push
mov
add
push
test
pop
js
ret
lcall
push
bound
aas
imul
add
insl
xchg
test
pop
cwtl
pop
cmp
push
sub
or
stos
add
insb
and
and
jo
mov
pop
add
data16
sbb
test
call
cmp
mov
js
sub
loope
pop
cmc
sbb
insl
ficompl
mov
cmp
test
mov
xchg
sar
hlt
add
loop
push
sbb
push
loopne
xor
cmp
call
movsb
enter
jecxz
jle
push
addl
push
add
dec
pop
pusha
es
cmc
lock
add
testb
call
mov
dec
xchg
jl
repz
sbb
imul
scas
call
ficoml
sub
aaa
lods
imul
sbb
jnp
push
xchg
sbb
dec
mov
sub
sub
mov
movsb
mov
xor
std
push
add
pop
pusha
add
pop
jo
dec
iret
outsl
lods
add
scas
add
add
dec
in
pop
adcb
mov
mov
dec
in
fcomip
mov
mov
in
cmpsl
inc
addl
adc
sar
pop
mul
push
addr16
dec
sub
shll
ret
inc
les
xchg
cltd
lret
mov
jl
sbbb
iret
and
loopne
or
add
leave
sub
mov
mov
add
cld
mov
out
add
sti
mov
cmpsl
verr
imul
fnstcw
cmp
fistl
add
cmc
scas
mov
mov
ljmp
jo
or
add
loope
add
mov
ficomps
and
xchg
cmp
rorl
jo
xor
xchg
jno
inc
fistl
lock
outsb
sbb
aad
rolb
add
and
insl
xchg
mov
push
mov
mov
mov
sbb
xchg
scas
inc
mov
mov
clc
cmp
push
add
push
and
push
sub
das
or
jo
les
add
in
bound
push
sbb
lods
adc
lcall
mov
movsl
jmp
and
pop
out
fisubs
dec
stos
lock
add
mov
add
daa
cmp
add
mov
shl
rclb
ret
add
nopl
inc
pop
dec
out
jle
add
push
mov
movsb
add
mov
pop
inc
loope
xchg
push
cmp
add
push
fidivrl
add
test
pop
pop
shlb
sbb
andl
bound
inc
xchg
xchg
add
mov
mov
pop
and
lock
add
jl
subb
push
adc
pusha
test
ss
shll
adcl
in
pop
push
sbb
fcmovbe
xor
lds
enter
pushf
adc
sub
mov
daa
add
test
pusha
adc
es
add
sbb
or
add
pop
cmp
push
xchg
adcb
and
add
mov
out
cs
xchg
and
cmp
fcoms
hlt
mov
ja
subb
mov
stc
xchg
pushf
pop
scas
fdivl
mov
and
lock
punpckhbw
movsl
adc
addb
jp,pt
out
and
add
addb
cmc
adc
mov
add
into
push
jns
pushf
shlb
add
sbb
imul
enter
pop
push
pop
push
dec
or
nop
xrelease
pop
push
ja
pusha
add
popf
mov
enter
mov
add
nop
jbe
rcl
xor
cli
data16
arpl
fildl
roll
sub
cld
jae
pxor
shr
xchg
and
jnp
jb
ret
jns
jg
clc
bndldx
cmp
addr16
repnz
call
jno
addl
add
push
inc
pop
mov
dec
je
add
fs
out
stc
or
add
add
push
pop
xchg
aaa
mov
jne
js
mov
sarb
ds
dec
lahf
xor
or
outsl
out
inc
add
cmp
into
and
rolb
dec
and
leave
aad
add
hlt
inc
pusha
and
cltd
pop
adc
add
jl
int3
inc
pop
jmp
xor
dec
jne
sub
mov
add
xor
test
sbb
popa
and
xchg
sar
out
mov
ffree
mov
mov
mov
push
ljmp
in
pop
pusha
mov
add
rorl
dec
dec
fdivrs
popf
push
aad
mov
jo
pop
dec
int
ja
arpl
hlt
mov
mov
or
mov
sbb
add
and
pop
xchg
or
add
mov
jae
pop
add
nop
add
pop
pop
xchg
loope
sbb
or
mov
xor
insl
pop
mov
fcoms
jecxz
popw
mov
movl
fldl
imul
add
into
arpl
lock
xor
les
sbbb
mov
add
ret
cmpsb
lret
xor
xor
mov
and
rolb
add
test
add
mov
pop
add
dec
sub
adc
mov
jnp
cmp
int3
aam
sbb
jae
inc
or
aad
xor
add
or
into
add
xchg
sub
adc
mov
arpl
or
mov
adc
add
inc
shlb
add
cltd
cmp
cmc
add
scas
movsb
rclb
cmp
adcb
push
pop
inc
repz
sbb
shrl
mov
in
dec
fldt
and
add
orl
sbb
sarl
add
outsl
imul
imull
aad
and
and
leave
nop
inc
xor
push
push
xchg
dec
scas
mov
jg
add
mov
insb
add
fs
pop
mov
mov
fnsave
cmp
dec
pushf
add
sbb
add
sahf
ret
jo
fiaddl
pusha
pop
bound
lcall
test
scas
stos
xchg
sub
sub
jl
enter
enter
add
mov
add
add
insl
push
int
inc
rorb
jg
add
aas
jl
pop
mov
dec
mov
test
mov
push
inc
lods
add
and
sti
jl
in
addb
dec
testl
jge
push
mov
jl
xchg
mov
adc
add
mov
lea
loopne
push
or
add
adc
movb
add
pop
test
fld
xchg
jne
mov
add
les
adc
push
pop
xor
lods
sbb
testb
jle
outsl
add
jae
xor
cmp
dec
stos
xor
xchg
push
movsb
scas
jbe
fisubs
or
lea
outsb
pop
sahf
and
adc
lret
add
aad
shlb
stos
jl
insb
inc
add
ror
xor
and
pushf
add
sbb
dec
push
add
cs
adc
or
pop
pop
repz
jne
enter
jb
movsl
inc
or
stc
jl
add
lea
lret
add
outsb
popa
mov
ds
add
insl
add
xchg
adc
cmpsb
imull
dec
jne
jle
out
add
sbb
mov
inc
push
imul
dec
inc
pop
push
and
and
mov
and
loope
or
mov
js
cltd
add
aam
lcall
add
mov
fsubl
std
xchg
out
or
sar
cwtl
and
xor
hlt
call
fs
lods
dec
les
cwtl
cmp
cmpb
inc
ds
add
rcr
cmp
loopne
and
and
mov
subb
call
imul
pop
cmp
fadds
mov
rolb
mov
ja
in
push
xchg
push
xor
test
push
or
xchg
std
mov
add
xor
insb
aaa
add
mov
xor
inc
or
mov
cmp
lcall
addb
xlat
mov
or
and
push
fldt
cmpsl
xchg
adc
loope
cs
adc
dec
jecxz
mov
pop
mov
add
mov
jge
cmp
add
icebp
leave
lods
fs
in
imul
add
clc
inc
pop
jnp
gs
je
mov
movsl
adc
in
add
push
js
or
fdiv
add
adc
in
scas
pop
add
jmp
jle
inc
pop
setno
add
cmp
add
icebp
inc
push
test
jp,pn
hlt
cli
dec
loope
call
es
cmp
inc
xor
or
dec
ss
inc
cmp
cmpsb
ljmp
fwait
pop
jp
sub
roll
cli
orl
pop
push
in
imul
cwtl
loopne
test
push
mov
adc
cmp
inc
add
mov
das
push
adc
sarl
test
sub
pusha
and
or
insl
mov
push
lods
or
push
dec
sti
pop
fdivs
jge
cmp
add
or
add
push
mov
sub
adc
xchg
mov
enter
dec
aas
mov
shl
int3
xchg
mov
inc
cmpsl
add
jnp
adc
lds
inc
cmpsb
push
movsl
lods
pop
es
push
insl
and
pop
add
ret
js
arpl
inc
loopne
add
mov
inc
adc
js
add
xor
jmp
jns
xor
lcall
cmp
add
decb
scas
testb
add
ret
push
xchg
fs
add
popa
mov
add
cmp
popf
lea
cld
jo
add
in
cmp
inc
fldt
push
add
cmp
jno
loopne
out
adc
movsb
sbb
add
xor
mov
sub
add
xor
add
adc
ret
add
add
fadd
aam
aas
add
rcll
push
xor
cmp
add
and
push
xchg
sub
and
cmp
out
push
insl
and
rcrb
and
xchg
les
clc
add
aam
cmp
adc
xchg
push
add
in
add
lods
mov
ljmp
rol
mov
faddl
sbb
pop
inc
loop
cmp
push
std
push
cmp
jl
push
lds
push
or
or
push
stc
mov
sbb
loopne
pop
jge
or
push
bts
cs
jl
scas
cld
repz
sbb
push
pmaxsw
mov
mov
xor
repnz
imul
int3
aas
call
jb
lcall
add
push
pushf
and
add
cmpsb
pop
sbb
and
idivl
cmp
add
or
mov
cld
sarb
push
jl,pt
push
jnp
add
flds
add
sub
xor
push
movl
cwtl
add
add
jae
test
call
ja
mov
movsb
or
in
mov
rcrb
das
cltd
mov
xchg
mov
icebp
mov
lock
lret
data16
fdivrs
hlt
mov
xchg
adc
jb
mov
jne
mov
add
int
test
jmp
lahf
hlt
out
inc
and
pop
adc
mov
cwtl
push
xchg
sti
hlt
push
mov
sbb
fidivl
cmp
mov
nop
aas
sti
aaa
xor
stc
ja
push
and
rcll
jne
jae
inc
test
add
sbb
adcb
add
mov
pusha
xorl
push
xor
add
and
adc
mov
rorb
pop
xchg
testl
push
addl
mov
cmpsl
sbb
mov
fdivl
pushf
int
ret
push
pop
les
add
mov
rorb
xchg
jns
icebp
fcompl
in
addb
movl
test
mov
loopne
sbb
movsl
pop
xchg
idivl
aaa
sahf
xchg
decb
ja
mov
push
lret
fst
add
mov
mov
out
icebp
add
or
popa
ljmp
xor
lea
int
xor
testb
add
jmp
fistpl
inc
popa
jmp
lcall
jge
jae
mov
clc
xorb
mov
stos
outsl
sub
je
std
add
aam
mov
dec
jne
mov
adc
leave
or
mov
testb
mov
xor
cmp
pop
push
cmp
lahf
add
push
pushf
clc
lds
outsl
sub
sahf
test
aad
xor
pop
ret
bound
lods
mov
outsb
dec
outsl
pop
rorb
addl
sbb
lock
jmp
xchg
sbb
icebp
cld
cwtl
add
je
ret
add
and
movsl
aaa
addl
incl
ficoms
mov
xchg
push
mov
inc
into
in
data16
add
rcrb
lds
xor
rcr
mov
mov
mov
adcb
add
xor
imul
add
fdivrs
sub
xor
pop
xor
mov
in
add
push
test
ds
insl
ss
sub
aas
pusha
add
lret
clc
mov
mov
pop
rcll
jno
cwtl
loopne
dec
xor
sarb
adc
jmp
xchg
or
hlt
push
aad
out
pop
ret
inc
pusha
sarb
lret
repnz
stos
xchg
int
cmp
rclb
jo
call
addr16
je
pop
push
or
cmc
push
fiadds
mov
sub
add
lods
daa
not
movsl
in
incb
mov
hlt
pop
jne
call
push
push
imul
andnps
fsubrs
jg
mov
repnz
repnz
orl
add
xchg
jg
aaa
repnz
add
cmp
lds
rol
cmpsb
mov
mov
jns
inc
clc
xor
push
dec
and
jnp
add
leave
lret
pusha
adc
mov
insb
add
inc
push
cwtl
sbbl
cli
mov
add
lret
cwtl
roll
jecxz
addr16
adc
and
je
mov
add
in
mov
in
add
scas
loope
xchg
sub
push
jle
xchg
xor
add
arpl
mov
cmp
push
push
add
out
and
fistpl
arpl
lock
pop
add
push
jnp
add
add
test
loop
jge
xchg
add
push
test
lea
ror
cmp
inc
add
clc
mov
push
sbb
jo
int
or
jmp
or
xchg
mov
fnsave
pusha
xor
out
js
shl
lea
pop
mov
ficoml
int
jg
cmp
shll
clc
insl
orl
pop
shll
inc
xor
fisttps
mov
clc
sbb
fidivs
jmp
out
sub
mov
pop
mov
pop
mov
adc
add
push
dec
lret
imul
sub
lahf
and
rcl
fstl
cmp
cmp
cmpsb
sub
mov
fwait
sti
jbe
jb
or
pop
mov
sub
push
add
sti
cmc
ljmp
fndisi(8087
and
aas
add
std
les
add
sbb
mov
insl
pop
sub
es
popa
add
sahf
inc
les
aam
ret
adc
sbb
fwait
and
fdivrl
jo
pop
add
lret
sub
lods
add
jo
add
mov
ss
add
jp
mov
lock
push
les
xchg
or
add
lret
xor
shr
sub
add
aaa
std
add
adc
cwtl
sahf
je
push
push
jecxz
add
cli
mov
mov
inc
dec
aas
pop
jmp
jle
jno
test
add
arpl
jo
xor
and
sub
add
bound
mov
dec
idiv
fsubl
enter
btc
jl
sarb
xor
mov
jo
das
out
fisttpl
dec
xchg
sbbb
fsubr
fwait
adc
inc
jns
inc
sbb
lock
add
pop
push
rcrb
fwait
add
adc
pop
decb
mov
adc
sbb
roll
ret
or
sbb
jns
movsb
mov
mov
into
sub
in
cmpb
fdivrl
mov
lahf
shrb
gs
adc
in
cmp
mov
adc
push
leave
inc
fmull
add
shlb
aas
jae
xor
xor
mov
inc
mov
loop
cmpsl
loopne
fwait
push
or
pusha
mov
int3
mov
add
xor
xor
add
subb
push
and
xchg
std
add
xorl
jg
mov
jno
inc
sbb
add
sub
aaa
adc
std
int
fdivl
mov
sarb
into
out
add
jmp
push
sub
in
cmpsl
sbbb
mov
rol
add
cmp
nop
sbb
adc
jnp
mov
push
xchg
push
pusha
jne
mov
ljmp
std
shlb
adc
cmp
inc
stc
mov
push
add
push
push
test
aam
int3
add
hlt
pop
rcrl
fstps
inc
dec
test
mov
in
mov
outsl
repz
pop
testl
movsb
xor
jo
movb
jns
mov
popf
fnstcw
cmp
movsl
add
pop
fimull
pop
dec
mov
xor
adc
jle
insl
lret
jo
in
loopne
xor
add
hlt
mov
cli
pop
leave
push
cmpl
ljmp
jl
add
jno
inc
inc
add
mov
call
add
pop
fistpll
add
lods
push
jno
mov
mov
aaa
jle
pop
rolb
shrb
aaa
fucomi
cld
lds
fiaddl
sub
js
mov
sbb
cmpsb
sbb
lret
push
daa
mov
dec
aas
ret
clc
cmp
xorb
in
or
repnz
jge,pn
add
inc
mov
mov
in
shl
call
xchg
scas
negl
sbb
outsb
fiaddl
iret
push
and
push
jo
popa
lock
sbb
shr
add
jmp
mov
add
and
pop
inc
imul
sub
xor
add
push
imull
ds
dec
das
ret
jmp
popl
cmp
jg
xlat
lcall
push
push
xor
fmul
incb
jle
add
jmp
xchg
scas
sbb
popa
mov
icebp
or
lock
add
ror
cmp
sub
das
jnp
sbb
lret
loope
push
imul
cmp
sub
icebp
and
cld
add
scas
xor
ds
cli
dec
test
fiaddl
pop
pop
es
dec
sarb
scas
sbb
sbbl
or
shll
mov
push
add
push
or
add
insl
aam
or
mov
dec
fwait
add
sub
dec
xor
adc
cmp
ljmp
ficomps
add
jne
arpl
pop
sahf
add
adc
mov
mov
xor
stos
sbb
roll
popf
push
hlt
and
sub
xchg
jge
loope
inc
or
fsubr
rolb
stos
es
push
mov
dec
mov
gs
inc
xor
arpl
shll
mov
add
adc
loop
add
jp
repz
and
aad
lods
call
pusha
mov
add
imul
or
sbb
int
les
in
and
aaa
aas
adcb
xor
cmpb
add
movsb
pop
int3
adc
sub
fcomp
and
cmp
xor
inc
les
add
fcmovnb
push
in
pusha
stos
xor
lahf
cmpsl
jle
mov
jno
or
inc
notb
ds
inc
lcall
pop
cmp
shlb
pop
push
ss
inc
dec
sbb
push
xor
testl
mov
mov
xor
add
push
sbb
mov
dec
movsl
sbb
jp
sbb
aad
add
pushf
jmp
xor
rolb
xchg
pop
sbb
das
shll
pop
xor
jbe
aad
sbb
and
sbb
mov
add
sbb
test
sub
in
xchg
stos
dec
js
add
jno
int3
dec
mov
pusha
icebp
inc
scas
xchg
pop
mov
fsubrs
push
pop
mov
mov
mov
adc
test
add
jno
fdivl
add
pop
push
mov
jmp
dec
addl
jo
flds
fsubrp
add
dec
in
sub
add
movd
dec
mov
push
inc
das
dec
sub
xchg
cltd
ret
xorb
jb
aaa
add
xchg
cmpsl
sti
mov
out
add
and
es
dec
or
inc
mov
arpl
repnz
inc
int
adc
add
popf
and
je
jge
add
int
push
aam
bound
aam
add
and
xchg
add
out
mov
sub
add
adc
mul
xchg
xchg
and
add
jp
sub
add
paddusw
nop
cmp
add
xor
stos
repnz
scas
mov
fistps
mov
cli
cmp
pextrw
jb
jecxz
movsb
sbb
in
dec
add
pushf
stos
fdivl
or
lock
inc
add
push
or
cmp
sbb
sbb
and
pushf
test
int
mov
int3
adc
jae
rcrl
bound
int
dec
je
add
inc
pandn
leave
jmp
add
pop
xchg
lods
lret
cltd
inc
sub
nop
mov
mov
nop
mov
cld
cwtl
sbb
bound
scas
xchg
mov
or
ret
outsl
and
pusha
adc
fcmovnu
add
jo
shll
mov
shrl
push
sub
pop
subb
repz
addr16
xchg
notb
outsb
fisttpll
pop
int3
test
lea
mov
ret
aas
popf
add
stos
cmp
nop
push
add
pop
jmp
sarb
add
lds
xchg
add
dec
cmp
fcmovb
and
out
lahf
mov
call
ljmp
insl
jecxz
mov
inc
push
bswap
and
ss
nop
inc
push
popf
add
subl
mov
jmp
cmp
idivl
imul
xchg
test
test
lds
sahf
sbbb
xchg
push
mov
pop
cltd
add
pop
xchg
mov
dec
lcall
js
mov
subb
jae
adc
add
ret
repnz
cmp
clc
lods
add
out
movsb
cld
daa
mov
popa
imul
jmp
pop
sbb
nop
mov
sbb
cmp
mov
ret
subl
popa
or
dec
push
mov
inc
or
adc
dec
mov
out
sahf
test
lea
adc
and
cmp
addr16
and
movsl
or
dec
dec
sbb
jmp
loope
addl
cwtl
and
js
dec
or
cmp
rorl
in
xor
out
test
loopne
hlt
mov
adc
jmp
or
mov
inc
hlt
xor
sbb
fnstcw
dec
fisubs
int3
inc
test
fisttpll
dec
shll
or
stos
xchg
xchg
jno
xchg
mov
xchg
mov
dec
pop
test
fiadds
decl
xor
test
movb
xorb
add
pusha
mov
mov
enter
testl
mov
mov
mov
xchg
xchg
jge
lock
mov
movsl
fistps
lea
addr16
fadds
icebp
mov
ret
add
loopne
adc
push
les
fdivl
mov
dec
sbb
aam
inc
push
leave
imul
xor
and
add
mov
inc
clc
into
pushl
sub
mov
lret
loopne
add
pop
xor
xor
ret
inc
testl
and
dec
add
dec
add
and
pop
call
aam
mov
push
push
shll
xchg
adc
mov
lock
mov
test
mov
ja
les
cld
sahf
dec
adc
mov
sbb
push
add
testb
call
or
mov
adc
push
mov
push
loopne
and
sbb
push
jecxz
mov
lods
jl
insl
ds
popf
daa
je
xchg
int
loop
mov
and
and
cmc
dec
test
scas
adc
arpl
inc
fists
movl
cmp
and
mov
sbb
push
adcb
mov
mov
adc
aad
rorb
dec
mov
cltd
mov
push
inc
pop
popa
mov
lcall
add
xchg
and
xchg
add
inc
loop
aaa
stos
mov
add
mov
mov
dec
pusha
lods
adc
scas
les
lret
xchg
jmp
mov
insl
or
mov
loope
inc
in
or
push
pop
or
push
jne
dec
dec
cmp
xor
mov
ret
dec
cmpsb
dec
cmp
push
add
jmp
jmp
rcr
pusha
adc
sbb
add
push
sub
or
cmpsl
stos
sub
add
test
in
test
cmp
stos
cmp
dec
xorb
mov
in
add
add
xchg
push
and
inc
mov
jo
repnz
dec
push
cmp
push
add
jg
add
dec
cli
mov
jo
jne
push
cmp
sub
mov
push
leave
inc
mov
add
cmpsl
pushf
dec
jns
das
dec
add
push
nop
popf
rcll
outsl
cli
xor
lahf
inc
dec
fimuls
mov
ret
imul
add
jle
jg
addr16
sbb
xchg
add
add
sub
mov
mov
xor
imul
ds
push
inc
and
add
add
int
and
push
mov
filds
sub
and
jb
or
ret
jle
jmp
push
movsb
pop
cmpsl
push
adc
adc
hlt
sub
pop
mov
jp
ret
lahf
lods
push
mov
adc
mov
pop
mov
lret
sbbb
mov
dec
mov
push
in
dec
sbb
pushf
adc
and
xor
adc
mov
xchg
mov
add
sarl
mov
xor
and
ror
add
leave
aas
stc
and
clc
and
lods
add
ror
xor
cmpsl
or
add
dec
ret
adc
cmp
mov
adc
or
popf
stc
mov
add
add
imul
cwtl
cwtl
add
mov
jecxz
jo
mov
aas
shrl
shll
outsl
rorb
inc
pusha
sbb
add
dec
mov
and
inc
pop
add
imul
cmc
scas
sbb
jl
and
nop
out
mov
or
in
xchg
or
inc
insb
dec
out
roll
add
xlat
push
push
test
sub
in
adc
fbld
nop
dec
test
xchg
and
subb
test
outsb
mov
pop
inc
cmp
xor
dec
arpl
or
lods
loope
mov
sbb
shlb
add
test
dec
or
in
lea
andb
inc
add
dec
int3
lret
or
or
sbb
sbb
sub
lock
add
fiaddl
mov
test
add
push
xchg
jns
hlt
sbb
sbb
xchg
mov
outsb
fldl
dec
popa
jbe
jnp
xchg
test
lods
mov
sarb
dec
jnp
shlb
cmpsb
adc
hlt
push
add
divl
push
add
inc
andb
cmp
into
jle
add
sarb
jp
inc
js
adc
lcall
outsb
sti
divl
in
stos
sarl
addb
push
ds
clc
xor
sbb
adc
dec
or
sbb
xor
push
and
std
adcb
dec
shll
test
and
push
movsl
and
or
inc
repnz
loope
cmp
or
push
inc
and
inc
push
add
or
out
add
jmp
add
orl
test
and
out
jae
mov
les
aaa
bound
xor
out
sti
enter
inc
aas
test
lahf
cmpsl
addb
lock
jno
ret
out
jp
lea
sbbb
adc
add
gs
test
mov
icebp
arpl
and
inc
xor
mov
add
pop
cwtl
add
sahf
mov
sub
in
ds
mov
xchg
roll
bswap
xor
sbb
hlt
popl
adc
fs
lock
inc
sub
pop
popa
les
and
jl
in
push
or
nop
shll
xchg
mov
cmc
nop
clc
cli
out
xor
lcall
inc
lods
mov
ljmp
push
and
shl
arpl
movsb
inc
aas
repnz
aas
adc
pusha
dec
sbb
mov
lods
pusha
orl
in
pusha
sbb
addr16
mov
xor
pusha
and
and
out
shrb
mov
adc
jo
mov
dec
clc
jg
or
adc
sbb
enter
sub
or
cwtl
shlb
icebp
test
nop
jmp
into
enter
dec
out
inc
fiaddl
add
adc
push
mov
movsb
in
jl
or
lock
and
or
or
ret
xchg
fs
arpl
mov
jecxz
mov
cwtl
cmp
call
rol
xchg
out
addr16
in
popa
and
mov
test
jg
push
xchg
or
div
push
sar
cmp
xchg
xor
xorb
xor
mov
outsb
pop
xor
nop
and
iret
jns
lahf
cwtl
rcll
mov
mov
into
out
das
inc
popa
sub
rclb
loopne
xchg
pop
push
inc
mov
je
lods
sti
adc
push
or
sarb
arpl
add
clc
addr16
and
pusha
or
test
shll
stc
pop
pusha
add
jmp
in
les
sbb
mov
xor
xchg
ret
dec
and
push
push
ja
mov
xor
mov
sarl
loopne
add
adc
pusha
jns
in
pavgb
xor
push
adc
faddp
punpckldq
and
mov
adc
mov
arpl
mov
and
xchg
arpl
adc
rolb
test
dec
push
stc
iret
pusha
in
enter
or
pusha
shrl
les
rol
sub
pusha
popf
or
aas
call
clc
push
xchg
xor
jo
movsb
sub
pop
aaa
and
and
xchg
cmp
jge
adc
cwtl
mov
test
adc
or
add
arpl
ss
mov
les
dec
lods
mov
adc
orl
clc
orl
lock
xor
pop
pusha
add
sbb
adc
push
and
mov
loopne
dec
adc
repz
and
adc
sti
hlt
loopne
incb
fs
xor
push
pusha
icebp
cmpsb
push
mov
or
js
fsubl
mov
pusha
add
push
jo
mov
cmp
rorl
fs
lock
adc
mov
lock
mov
mov
shlb
inc
rclb
mov
in
pusha
xchg
xor
push
pusha
or
movsb
xchg
clc
lret
test
inc
mov
push
xor
mov
mov
add
mov
jge
add
sub
std
push
push
xor
les
mov
scas
addb
add
aad
xchg
adc
jecxz
movsb
xchg
test
inc
inc
mov
pusha
dec
or
rolb
std
ljmp
pusha
shll
xchg
xor
loopne
int3
adc
xor
lea
mov
loopne
push
pop
cmp
shrl
mov
pop
add
lcall
pop
adc
mov
inc
scas
mov
fnstcw
mulb
and
lock
popa
bound
les
push
ficoms
dec
mov
lret
jecxz
mov
nop
or
mov
cmpsb
push
rcrl
cmpsb
pop
dec
push
into
push
mov
xor
sbb
test
cmpsb
imul
xlat
adc
lock
popa
pop
enter
in
ds
mov
or
test
js
jecxz
fistpll
arpl
dec
stc
lahf
das
icebp
inc
movsb
testl
inc
pusha
rorl
add
pop
pusha
push
sbb
and
or
pop
loop
xchg
xchg
rcrb
ret
lahf
jl
adc
cltd
fdivrl
mov
push
imul
pop
cltd
inc
cmp
or
or
or
clc
das
inc
adc
dec
aam
and
jl
fs
adc
enter
fsub
mov
in
mov
pusha
add
fs
insb
dec
test
add
fisttpll
andl
mov
pusha
or
loop
jb
fs
lods
lock
mov
inc
dec
or
clc
ret
imulb
les
out
je
rolb
in
ds
ljmp
pusha
into
imul
std
xchg
inc
fidivs
mov
clc
loop
pop
rcl
dec
ret
mov
pop
push
pop
inc
jns
xor
mov
push
inc
dec
out
xor
punpcklbw
sub
scas
inc
test
jl
sbb
xor
mov
ja
inc
test
mov
push
or
sbb
testl
xchg
fdiv
cmp
in
dec
mov
pop
add
movsb
rcl
inc
sbb
xchg
fisubrl
ja
dec
add
test
jl
sbb
adc
pusha
mov
jae
xlat
dec
and
sarl
sahf
mov
lock
lods
and
dec
inc
ffree
out
mov
add
cmp
dec
and
jl
or
xchg
fdiv
nop
loop
push
pusha
lock
aam
inc
cltd
fs
fadd
and
les
addb
and
add
push
add
and
idivb
jg
test
xor
das
push
mov
pop
je
test
loopne
sbb
ss
movsb
testb
adcb
xchg
popa
inc
inc
pusha
rcll
jg
fs
popl
adc
add
pop
push
or
and
test
or
pop
dec
or
fprem
sub
xor
pop
pusha
cmp
adc
popa
adc
inc
xchg
outsl
and
inc
hlt
pop
push
adc
xchg
mov
mov
inc
dec
cmp
pusha
add
push
add
push
or
int3
sar
xor
push
bnd
jno
push
fldz
add
repnz
int3
jno
test
js
sub
push
ret
mov
movsb
repnz
push
ret
sub
nop
sub
pusha
xchg
inc
into
add
xor
loopne
xor
int3
inc
dec
add
jmp
rorl
pop
xchg
xor
loopne
faddl
inc
daa
popa
jo
xchg
inc
lds
loop
sub
and
dec
in
lret
dec
ja
scas
sbb
enter
sub
push
test
cmp
sahf
fucomip
inc
sub
or
lods
sbb
push
adc
fdiv
int3
push
push
sbb
cmp
cmpb
mov
push
mov
or
xor
imul
adcb
insb
or
sbb
test
pop
cmp
mov
nop
xchg
mov
ja
fiadds
inc
and
and
mov
jl
adc
xchg
rorb
lock
daa
push
xor
movsb
mov
insb
and
or
sub
xchg
xor
pop
shrb
inc
or
dec
lahf
loopne
push
mov
jmp
pop
lcall
add
bound
sbb
add
jge
rolb
sbb
xchg
pusha
fsub
push
or
addl
insb
pop
stc
out
addb
or
xor
popf
inc
dec
inc
sti
rorb
jnp
and
and
je
and
jbe
adc
or
inc
roll
adc
push
int
and
sbb
insb
jb
adc
enter
or
lods
pop
clc
xchg
pop
xor
rorl
lock
in
insb
clc
sub
int3
outsb
popl
and
ds
lahf
mov
xor
or
lock
xor
add
out
fwait
pushf
dec
dec
push
add
pop
repz
add
xchg
jl
jno
and
sbb
mov
push
fdivrl
mov
test
inc
add
and
push
mov
cli
mov
and
loopne
xlat
test
scas
xor
jmp
adc
insb
xor
fildl
dec
mov
repnz
lods
imul
xchg
or
js
or
pop
pop
xchg
in
cmp
popl
ja
mov
in
jns
xor
aas
dec
push
xor
cmp
outsl
roll
mov
sbb
sub
pop
jmp
dec
cmp
out
rclb
mov
sub
push
push
clc
xchg
jge
lock
nop
repz
jp
add
adc
cwtl
sbb
and
pop
rcll
adcl
xor
xorl
cmp
add
push
jae
push
pusha
or
sbbb
pusha
repnz
cmp
adc
sbb
xchg
adc
mov
std
adc
xchg
add
lock
dec
test
lods
pusha
sbb
pop
addr16
sub
test
stos
cmp
adc
xchg
mov
and
cmpsb
inc
dec
mov
mov
shl
rcrb
pusha
sahf
pop
rcl
or
adc
sub
dec
popl
insl
push
xchg
or
mov
xor
lock
lcall
out
rcrl
sahf
mov
mov
pusha
fsub
mov
test
pop
pusha
push
dec
add
mov
dec
jo
test
pop
xor
inc
xchg
pop
nop
sub
mov
gs
cmp
xchg
popa
xor
addl
ds
jmp
and
cmp
shlb
in
pop
jno
inc
sub
rclb
jo
mov
inc
mov
add
into
jno
xchg
das
push
das
fwait
inc
shl
popl
rclb
cmc
ds
das
xorl
inc
shl
lahf
fldl
clc
lcall
lock
add
push
roll
rcl
lret
push
xchg
xor
fsubrl
outsl
adc
lock
push
xchg
mov
sub
pusha
pusha
mov
and
sub
rcll
lods
xchg
xor
pusha
out
dec
dec
and
fdivs
sub
inc
inc
insb
pusha
xchg
or
jo
clc
imul
xor
nop
inc
loopne
and
inc
mov
inc
popl
and
or
pop
push
inc
mov
pusha
or
adc
push
pusha
rorb
add
xchg
addb
adc
mov
pop
add
fbld
shll
jl
jp
and
inc
hlt
shrb
hlt
pop
add
outsl
in
js
and
jl
or
ret
and
rclb
and
pusha
add
sahf
adc
mov
xor
rcrb
fmuls
push
and
and
loopne
jbe
xchg
mov
sub
jmp
xor
or
mov
clc
fistps
sub
out
lock
bound
or
mov
mov
pusha
push
in
or
inc
cmp
mov
ss
add
inc
test
std
adc
and
mov
xor
mov
sub
pushf
mov
js
pop
adc
gs
adc
mov
sbb
repnz
xchg
and
pushf
jp
pusha
in
test
adc
adc
mov
rorl
jecxz
icebp
inc
or
fmull
rorb
or
sub
enter
dec
pop
jo
or
sub
xlat
popa
clc
xor
pop
pusha
pop
and
or
mov
lea
or
jmp
cld
mov
sub
mov
xchg
pusha
andl
xor
or
rcrl
mov
sub
pusha
cmp
lahf
add
cwtl
inc
xor
mov
cwtl
push
inc
and
bound
lret
mov
push
push
js
sbb
enter
popl
and
sub
xchg
xchg
in
inc
xchg
int3
jl
adc
stos
scas
or
jnp
mov
mov
mov
rcrb
dec
cwtl
jle
popa
adc
mov
adc
add
cmp
sbb
cwtl
mov
je
inc
sub
adc
andl
pop
push
loop
push
jno
aam
lock
add
inc
cld
hlt
inc
adc
js
inc
or
sbb
jmp
adc
adc
lock
sbb
ja
inc
or
rcrl
mov
xorl
inc
xchg
or
dec
and
pop
shlb
aam
popl
and
or
or
xrelease
inc
xchg
xor
imul
push
add
or
je
ficoml
in
fsts
xchg
xor
xor
mov
popl
adc
jp
mov
jge
out
cmp
or
pusha
sbb
data16
adc
add
xor
mov
jno
pop
adc
jg
adc
movsb
pop
sbb
ds
sub
shr
pop
and
inc
add
cmp
movsl
jae
hlt
jl
jg
add
xchg
fbstp
add
jns
testb
sahf
jne
scas
inc
mov
fs
mov
pusha
divb
test
add
sub
imul
out
fsubs
lock
xchg
sub
and
aas
add
mov
fimuls
dec
dec
pop
pop
cmp
adc
adcb
xor
cmp
and
mov
mov
leave
xchg
add
inc
pop
insl
and
arpl
pop
sub
fisttpll
cmc
lea
sarl
sub
pusha
imul
xchg
cltd
filds
jbe
jae
lcall
inc
ret
mov
add
add
sbb
or
hlt
xchg
lret
cmp
icebp
fs
outsl
inc
mov
add
pop
rcrb
pop
addb
or
mov
bound
mov
pusha
sbb
pop
nop
cwtl
pop
test
shlb
jl
add
mov
push
test
cmpsb
jns
addr16
jmp
dec
add
lret
add
and
leave
rcl
sub
fnstenv
mov
jnp
add
sbb
cld
sbb
inc
jp
dec
push
or
mov
fcmovne
xchg
add
jbe
fimuls
mov
int
mov
pop
jp
mov
add
inc
cli
or
and
fwait
pop
jns
jo
jnp
testl
mov
inc
mov
les
and
in
rcll
jbe,pn
faddl
pop
sbb
shrb
or
test
xor
icebp
shlb
dec
push
xorl
hlt
pop
add
cmp
test
adc
pop
aas
inc
clc
xchg
inc
loopne
add
add
jl
arpl
and
scas
or
xor
sub
or
enter
sub
fistpll
stos
xchg
xor
cmp
add
fldt
mov
pushl
pinsrw
cs
and
test
icebp
js
pop
leave
mov
jns
sub
add
lods
xlat
mov
xlat
pop
lea
addr16
testl
je
fmulp
pop
adc
mov
jb
add
inc
push
aad
add
pop
add
iret
outsb
pop
jecxz
mov
add
adc
mov
or
lcall
jmp
shrl
mov
push
pop
pop
push
nop
sub
inc
mov
fwait
andl
mov
xchg
cmp
jns
hlt
jae
inc
mov
ss
out
sbb
pop
or
data16
call
or
pop
mov
lcall
add
out
in
loopne
or
sbb
dec
dec
fdiv
imul
popf
inc
movsb
andb
rolb
xlat
push
inc
add
xchg
xor
popf
mov
add
jne
mov
nop
and
or
test
inc
or
mov
cmp
popa
int3
mov
repnz
loopne
mov
out
add
rolb
lods
mov
imul
add
sub
iret
mov
lret
sub
or
mov
mov
scas
mov
fwait
xor
add
je
push
add
cmpsb
inc
sbbl
sahf
jmp
aas
and
sub
add
and
mov
mov
adc
nop
rolb
movsb
aaa
loope
lret
inc
jo
jl
xor
scas
das
lcall
mov
cli
leave
cltd
rol
dec
mov
fisttpl
pop
mov
push
sub
xchg
mov
test
and
shld
cmp
test
std
xchg
mov
popf
subl
jp
sub
pop
push
or
arpl
push
sbb
xchg
pop
pop
add
shll
adc
add
sbb
mov
popa
call
and
lcall
movsb
mov
cmp
xlat
xchg
arpl
mov
add
xchg
jl
pop
or
jb
pusha
sbb
add
jl
sbb
rolb
sbb
sti
sbb
add
hlt
inc
scas
fsts
dec
add
dec
addb
popa
sub
jecxz
add
adc
cmc
cltd
and
and
call
cmp
mov
xchg
mov
push
mov
xchg
ret
mov
into
rorl
int
cmpsb
testb
imull
rclb
add
int3
enter
icebp
add
mov
pop
sbb
shl
jo
loopne
add
call
sbb
and
push
mov
lds
arpl
aad
add
shlb
lret
push
push
mov
movsb
stc
jp
add
cmp
cmpb
push
mov
sub
in
js
xor
add
test
add
xor
mov
in
adc
adc
mov
ret
add
stc
lahf
mov
imul
and
int
pop
daa
ja
jp
inc
lods
add
icebp
int3
in
push
push
mov
mov
shll
pop
icebp
es
lret
pop
dec
mov
test
aas
jnp
add
ljmp
out
lock
sbb
rolb
sub
jecxz
add
cmp
ljmp
hlt
adc
pop
loop
or
or
dec
lods
mov
inc
int3
jg
mov
call
adc
and
ret
imul
fdivl
int3
clc
push
mov
dec
shrb
add
in
and
dec
sarl
addb
mov
es
cmp
add
jb
dec
push
in
add
mov
addr16
test
pop
or
std
and
mov
push
arpl
dec
add
je
loope
ljmp
insb
incb
fcomps
fs
pop
imul
mov
adc
sbb
pop
pop
int
sahf
dec
jg
pop
insb
pop
cmp
pop
into
addl
and
aad
adc
xchg
addr16
into
jb
popa
add
fucomi
mov
mov
xor
adc
ja
pop
aad
lock
mov
in
mov
fadds
mov
mov
push
adc
jno
push
test
mov
add
out
rolb
pusha
repz
arpl
sbb
dec
xor
mov
aad
add
js
ja
sub
dec
adc
enter
cmp
xor
iret
push
repz
xlat
add
mov
test
shl
inc
aad
pushf
aaa
mov
fs
int3
lret
dec
or
test
les
inc
sbb
pushf
orl
and
jl
cmpl
sub
push
lea
ret
popf
adc
mov
loope
cs
cmp
push
enter
sbbl
sub
jmp
or
test
mov
fwait
xor
cmpsl
sbb
add
or
add
sbb
add
fsubs
imul
std
cmpl
add
xor
imul
fstpl
loopne
mov
sub
inc
lods
mov
push
xchg
or
call
pushf
sub
add
dec
movsb
ljmp
xor
add
into
jbe
nop
adcb
inc
mov
fimuls
or
fsts
and
loope
pusha
fcmove
add
cmpsb
mov
sbb
add
mov
mov
dec
ljmp
pop
push
addr16
mov
sarl
mov
push
jmp
jne
xor
pop
xor
lods
or
rcr
stc
rolb
ds
adc
pop
push
push
xchg
jl
add
clc
mov
push
or
pop
sbb
movsl
mov
fmull
maskmovq
divl
inc
insb
hlt
pop
inc
lahf
add
add
jbe
or
jo
or
add
sbbl
scas
cltd
pop
je
add
gs
enter
push
sub
subl
cmpsb
pusha
jno
pop
cltd
mov
jb
test
inc
mov
loope
sti
xor
jecxz
out
addb
dec
dec
lahf
sbb
cmpsl
add
inc
pop
pusha
fcomps
cmp
hlt
push
stos
mov
ds
lret
out
pop
add
sbb
gs
cwtl
dec
add
xlat
mov
dec
stos
lock
scas
ficoms
add
loop
jg
mov
out
inc
sub
cmpb
cltd
jle
mov
jl
jmp
repz
sbb
outsl
lock
out
daa
push
mov
fmul
or
mov
cwtl
orps
ds
aam
scas
sbb
movsl
push
add
testl
fmulp
test
cmc
cmpsb
add
mov
mov
add
xlat
subb
cmp
mov
jo
stos
add
pop
push
jecxz
cmp
call
cmp
ds
in
xchg
and
jo
add
adc
xchg
cmpsl
pop
inc
dec
mov
xchg
mov
jo
jg
cmpsl
arpl
test
push
cli
addr16
repz
cmp
jnp
dec
jns
pusha
dec
imul
add
shlb
xor
or
fmuls
and
les
fidivrl
xchg
rol
mov
loopne
and
out
or
mov
insl
lock
and
xor
add
fs
lcall
or
sub
mov
and
clc
jo
cmp
add
and
dec
dec
mov
or
xor
std
add
cmp
inc
aaa
in
add
lock
cmp
call
cmp
out
push
ret
or
sbb
aas
orb
pop
jo
add
cld
mov
mov
add
imul
cmp
adc
push
xchg
inc
rol
and
or
je
icebp
mov
out
dec
push
mov
xor
addr16
leave
fcmovnb
mov
add
imul
inc
add
sbb
outsl
xchg
popa
aaa
cmpb
mov
add
adc
xchg
cmp
fadds
add
xor
repz
xchg
imul
adc
testb
jle
mov
inc
xor
pop
xchg
dec
jge
mov
in
rcrb
jo
in
sbb
sub
mov
and
mov
and
xor
mov
add
cmp
add
mov
and
shll
mov
nop
xor
loopne
stos
jmp
das
pushf
addb
pop
push
hlt
push
push
in
xor
and
lret
daa
mov
insl
fs
ret
xchg
sub
sub
data16
jnp
test
pop
inc
sbb
in
mov
je
aaa
push
jle
add
adc
inc
in
inc
jle
cmp
inc
loopne
add
push
add
sar
pusha
jbe
or
and
or
in
bound
mov
jecxz
sbb
loopne
jp
in
inc
pop
inc
shlb
ds
aas
xor
add
sub
xchg
cli
lret
inc
stc
pop
sbb
out
insb
out
push
push
or
mov
sti
jno
fldln2
add
mov
out
dec
stos
xchg
push
test
jle
inc
xor
aad
cld
sbb
mov
sbb
adc
xor
movsl
and
inc
or
in
jne
roll
in
or
bound
adc
or
test
inc
lock
xchg
hlt
or
notl
adc
sbb
in
push
add
adc
aaa
ljmp
add
push
dec
icebp
mov
mov
mov
mov
mov
vcmpss
in
repnz
loopne
cltd
push
mov
mov
pop
repz
sbb
inc
add
or
lock
add
xchg
in
sub
dec
xchg
or
adc
or
iret
hlt
in
jg
je
xchg
pusha
jnp
loopne
fcomps
add
sub
push
rcr
add
push
js
ljmp
lcall
or
roll
lods
xor
add
xchg
push
mul
xchg
sbb
pop
sub
ljmp
jbe
xchg
push
notb
into
mov
lcall
cmpsb
mov
mov
ret
pop
mov
movsb
xchg
pushf
xor
or
sarb
sbb
xchg
aam
test
jb
stos
fld
stc
rorb
cwtl
sub
add
xor
adc
xchg
push
xchg
test
adc
sub
push
add
ds
into
jbe
loopne
add
sbb
fiadds
xlat
add
push
je
add
ljmp
add
enter
std
dec
push
mov
push
push
mov
js
add
push
ja
cltd
and
loopne
mov
cmp
xchg
mov
mov
loop
inc
sti
xchg
mov
ret
jo
adc
adc
add
and
inc
sbb
pop
sbbl
fsubrs
pop
and
rolb
add
pop
xchg
adc
aas
movsl
inc
push
data16
sub
jno
add
cli
testl
sbb
daa
or
push
sub
xchg
mov
pop
mov
sbb
mov
lcall
lods
cwtl
cwtl
cmp
mov
dec
arpl
out
stos
stos
aad
add
push
leave
pop
bound
mov
inc
xchg
enter
push
neg
inc
add
out
fs
out
add
pusha
ja
in
sub
xchg
insl
or
add
jnp
jns
repnz
orb
sbb
or
outsb
mov
pop
dec
add
mov
lods
adc
fsts
pop
pop
pop
add
insb
push
mov
mov
imul
fstl
xor
xchg
stc
hlt
sbb
orl
xchg
sub
or
adc
insb
nop
pusha
incl
clc
add
lret
or
add
in
fs
xor
icebp
js
add
jb
fsts
xor
sbb
add
adc
push
cmp
dec
ret
lret
testl
mov
sbb
or
js
jecxz
cmp
movsl
mov
cs
shlb
push
pop
cwtl
ja
icebp
xchg
xor
sbbl
out
or
mov
mov
cmc
sarb
loop
mov
in
add
jge
adcl
cmpsl
lock
jp
or
cmpl
insl
xchg
xchg
push
xchg
arpl
and
or
adc
call
repnz
mov
rorb
subl
cmc
sahf
mov
add
mov
mov
and
js
mov
xor
out
leave
pop
jae
add
fidivl
insl
xchg
jmp
cmp
inc
pop
push
sbb
add
xchg
dec
jl
cld
cmp
jl
stos
test
nop
push
pusha
or
inc
pop
shll
popa
bound
sub
push
test
aad
xor
sbbb
xchg
adc
or
xchg
mov
lods
push
jns
adcl
lock
outsb
mov
xor
clc
mov
test
pop
inc
ret
arpl
dec
mov
add
sbb
jo
es
xchg
inc
adc
out
or
ret
dec
test
shll
mov
add
pop
or
add
sbb
lds
aas
push
mov
sbb
mov
and
inc
mov
test
out
jns
lahf
sbb
and
add
lods
stos
push
and
mov
mov
mov
sub
pop
testb
dec
insb
addr16
clc
sbb
lock
inc
mov
iret
jmp
inc
push
in
arpl
fimuls
cmp
cmp
outsl
cmpb
daa
add
das
add
add
and
insb
mov
jo
clc
push
cmp
mov
mov
mov
cli
mov
mov
popa
add
les
frstor
roll
mov
pop
movsl
setns
jae
mov
aam
push
dec
les
test
mov
cs
inc
scas
add
sub
mov
mov
das
xchg
imul
pop
or
pop
push
cwtl
aas
in
xor
aam
mov
cmp
leave
addb
or
cmpsb
mov
and
jb
ret
add
jne
leave
std
pop
roll
sub
lret
lock
clc
mov
dec
jb
cmp
lods
push
and
pop
mov
in
popa
mov
inc
or
adc
inc
int
imul
in
add
mov
mov
dec
sahf
pusha
cwtl
jmp
push
repz
mov
add
cwtl
dec
adc
insl
mov
call
add
shlb
jbe
or
push
adc
sbb
jmp
add
and
in
inc
pop
cli
sub
add
jns
inc
inc
sub
xchg
nop
mov
mov
mov
in
add
test
nop
incl
mov
repnz
dec
xchg
call
pusha
lsl
rorb
add
roll
scas
or
shlb
jnp
test
adc
mov
call
xchg
sar
push
scas
cmp
pop
or
repz
sbb
rolb
mov
and
cmp
sbb
jne
jno
sbb
fadds
fldenv
push
or
popa
push
add
mov
adcb
cwtl
sbb
jae
add
mov
pop
or
in
add
lcall
cmp
mov
jl
dec
jns
mov
repz
cmp
push
test
jle
hlt
loopne
mul
add
int
mov
lcall
dec
and
mov
adc
pop
push
mov
mov
add
repz
cld
sbb
xchg
ficoml
add
sbb
dec
sbb
js
add
movsl
loope
pop
imul
neg
add
test
push
cmp
movsb
pop
xor
js
mov
push
add
add
or
adc
jbe
xacquire
mov
cld
daa
adcl
or
inc
stc
mov
add
mov
xchg
and
and
icebp
cld
dec
int3
sub
lods
sub
add
out
push
enter
fisttps
mov
pop
add
jae
sub
into
loopne
and
or
dec
sbb
pop
sbbb
pop
inc
test
add
dec
mov
add
pop
sbb
pop
fstps
das
adc
adc
repz
add
aam
xor
pop
call
popa
mov
ja
jns
pusha
dec
mov
add
shl
js
mov
int
lret
std
js
pusha
cs
pushl
jg
out
add
add
enter
clc
stos
push
or
cmp
sahf
push
in
push
jle
out
sub
xchg
shlb
hlt
stos
hlt
push
add
dec
mov
mov
icebp
xchg
add
mov
inc
fnsave
fdivrs
add
loop
test
add
imul
sbb
inc
rorb
pusha
notb
stos
lock
fstps
sub
test
js,pt
adc
push
jmp
mov
and
and
les
mov
repnz
divl
push
call
rorb
push
or
subb
loop
add
and
inc
movb
xchg
sub
lock
pop
sub
mov
aam
fmuls
xor
push
imull
inc
js
add
lahf
jle
nop
push
cmp
es
push
cltd
pop
jl
loopne
mov
jecxz
popf
imul
dec
cmp
add
movsl
xchg
adc
sub
insl
xchg
mov
insb
add
mov
loop
cmp
jl
push
cli
pop
cmc
xor
adc
clc
adc
icebp
mov
lret
push
jo
and
fadds
add
or
orb
in
pop
shlb
nop
lds
mov
dec
jns
add
cmp
mov
mov
ror
inc
push
add
mov
add
xor
mov
mul
lcall
les
mov
popl
jns
maxps
and
popf
or
dec
pop
add
dec
mov
and
xchg
push
pusha
sahf
or
jbe
dec
adc
loop
mov
mov
jp
jo
mov
jae
psubb
ret
add
mov
sub
ds
in
iret
sbbb
sets
adc
and
lahf
adcb
cmp
repnz
push
icebp
xchg
dec
or
cmp
leave
add
add
ja
add
fisubrs
adc
outsl
and
xchg
int
ja
push
pop
mov
shl
xchg
je
mov
sbb
std
outsl
pop
pusha
jl
add
mov
add
pop
jb
push
push
fldl
aaa
or
fcomi
sti
ss
adc
adcb
dec
idivb
ja
pop
inc
leave
ret
pop
arpl
dec
popl
push
add
std
mov
mov
insb
fidivrs
adc
and
mov
test
cmp
jp
scas
and
add
and
enter
popa
push
or
jle
add
fcoms
bound
mov
out
inc
xchg
add
shlb
inc
outsl
int
xchg
and
jae
jo
cmp
push
subb
sub
push
movsb
or
inc
and
and
add
cmpsb
cmc
mov
ja
fs
add
stos
popa
mov
mov
aad
inc
scas
xor
add
inc
repnz
dec
lods
fucomp
add
dec
hlt
sbb
lods
fcmovnu
ljmp
sbb
and
shrl
sbb
cwtl
int
xor
add
das
and
mov
push
pop
repnz
and
inc
add
pop
mov
dec
pop
shl
out
mulb
mov
adc
rolb
xor
add
jo
sbb
scas
flds
jecxz
mov
jmp
sub
rorb
xchg
lret
push
nop
pusha
add
sub
pop
shlb
gs
pop
add
and
fdivrs
and
nop
test
mov
loope
add
int3
xchg
mov
inc
jecxz
pop
and
add
clc
in
cmp
jae
jl
ss
push
sbb
cltd
mov
jb
mov
dec
rolb
movsb
in
lods
pushf
cmp
and
push
sbb
mov
push
add
test
pop
add
xchg
xchg
int3
mov
fwait
daa
adc
pop
push
stos
jb
add
or
fadds
ja
xor
cmp
incl
jp
xchg
pmulhw
sub
outsb
inc
add
cwtl
in
push
daa
mov
test
lcall
add
imul
add
cmp
dec
push
pop
sti
cwtl
lret
inc
jmp
adc
add
ret
pop
fnstcw
xor
add
cmpsl
movsl
sbb
and
xchg
ljmp
stc
loopne
xor
pop
out
jmp
add
out
les
add
rolb
incl
push
insb
add
shr
mov
imull
popf
sbb
xor
and
sbb
test
lcall
push
test
push
add
push
ret
xchg
pusha
jb
xor
lods
mov
inc
jns
add
pop
add
cmp
add
in
mov
add
jnp
cmp
shll
dec
je
or
nop
jge
jmp
lret
mov
mov
imul
push
aas
push
ja
push
add
outsl
insb
in
adc
jg
lea
shrb
fwait
cmp
push
jne
sar
jp
add
notb
add
sub
les
lods
outsl
sbb
add
int3
js
add
jp
or
mov
loop
ds
jle
clc
nop
inc
add
movsl
or
setne
and
bound
adc
mov
push
popa
aaa
mov
fs
insb
pop
push
add
dec
dec
sbb
fisttps
sub
lods
xchg
and
sbb
xchg
pop
mov
outsl
enter
dec
popf
mov
add
inc
jne
sbb
dec
inc
mov
lock
cmp
and
cld
inc
fidivrs
out
movsb
add
xchg
out
and
insb
and
dec
add
int3
in
and
cmp
cltd
sub
cld
add
pop
adc
ja
push
sub
ds
sbb
jb
add
xchg
movsl
out
adc
fstpt
ret
in
cwtl
aad
leave
jb
fwait
push
mov
cmpsb
add
pop
in
movsl
repnz
stc
add
addr16
shlb
xchg
mov
in
jmp
xchg
imul
popa
push
scas
repz
push
add
fnsave
lret
int3
divl
add
psllq
add
aam
xor
in
or
ljmp
add
adc
pop
mov
add
xchg
add
cmp
add
adc
add
lock
push
imul
cmpsl
mov
jl
hlt
mov
sbb
aad
xchg
shll
aas
pop
sbb
fmulp
jmp
dec
sbb
pop
subb
leave
mov
add
pop
rolb
gs
cmp
ret
xchg
sbb
mov
push
cmp
lret
mov
xchg
push
sub
je
pop
pop
div
stos
pop
xor
or
in
int3
add
adc
sub
cs
and
jbe
mov
jg
pop
dec
pop
rol
cmpb
aad
fbld
inc
pop
pop
mov
cld
and
int3
or
ds
jno
add
or
add
jge
push
mov
push
push
addl
outsl
jae
test
inc
aam
add
clc
lea
fiadds
sub
test
mov
and
add
jae
fwait
jnp
testb
and
pop
inc
std
mov
add
cmc
adcb
fwait
inc
shlb
add
push
sub
mov
sbb
lods
push
negl
mov
add
test
lea
add
out
mov
inc
sub
xchg
mov
jmp
sbb
daa
dec
pop
add
mov
mov
imul
movsl
cmp
aaa
adc
mov
and
mov
and
icebp
insb
add
xchg
ljmp
sbb
je
add
loop
add
cmc
inc
mov
test
add
div
pop
add
cmpsl
roll
aad
add
jne
jae
xor
cmp
dec
add
xchg
cli
cmc
loope
sbb
ficompl
cs
pop
outsb
add
clc
or
aam
jl
aaa
add
iret
dec
out
mov
pop
adc
jecxz
mov
aam
sbb
cmpb
sub
fs
add
jb
and
sbb
sbb
sbb
sub
test
add
sahf
mov
push
mov
dec
xor
cwtl
cmp
adc
shrl
mov
adc
push
xor
fbstp
lea
adc
sahf
push
and
addb
addr16
int
pop
push
dec
rcr
and
repnz
aas
cmp
mov
push
in
test
cmp
cwtl
or
or
fisttpll
movsb
shll
js
enter
push
ret
jns
add
mov
cmp
adc
mov
sti
ja
add
xor
jne
xor
xor
leave
push
push
dec
in
clc
test
test
mov
cmpsl
pop
bound
mov
stc
pop
sarl
xor
pop
jge
add
stos
nop
subb
push
add
xor
fwait
add
les
jge
add
out
mov
push
add
push
rorb
mov
xchg
mov
movsb
add
rol
in
cmpsb
lds
mov
add
cmpb
adc
stos
add
xchg
mov
add
mov
mov
push
sub
aaa
prefetch
or
out
add
sub
lods
push
xor
pop
add
sbb
mov
add
push
mov
mov
stc
bound
mov
idiv
adc
push
fldl
cmpsb
pop
arpl
add
or
xor
add
inc
out
ss
icebp
push
sbb
clc
mov
mov
xor
test
jno
testl
xchg
popf
lret
adc
xchg
repnz
xchg
into
sub
popa
test
loopne
andl
cs
xchg
sbb
add
les
loopne
in
push
psubq
jg
loopne
xor
lret
push
push
dec
inc
nop
std
or
in
ja
and
ss
cmp
add
mov
push
add
arpl
cli
in
inc
add
shrb
pop
push
lds
add
cwtl
test
fwait
push
jp
sub
xor
lret
jmp
sbb
inc
fucomi
mov
pusha
shrl
lahf
lods
pushf
ds
sbb
fsubrs
add
outsb
shl
sbb
insb
add
aam
push
call
sbb
pop
call
pushl
or
mov
sarl
movsl
xorb
add
add
push
add
hlt
or
rcrb
inc
mov
pop
lock
dec
mov
loopne
das
dec
pop
add
push
repz
add
ja
xchg
pop
mov
jns
lods
mov
pop
push
and
arpl
add
jmp
add
lret
jae
mov
cmp
shrl
lock
inc
ljmp
icebp
scas
add
inc
popa
popa
inc
xor
add
sub
sahf
fdivrs
enter
jle
add
test
je
pop
dec
pop
leave
shrl
pop
js
cld
xor
dec
pop
xchg
pusha
les
sbb
adc
fdivl
loope
outsl
in
jbe
add
cltd
pop
cmpb
mov
dec
inc
test
dec
addr16
test
int
les
ficoml
bound
push
mov
lds
rcrb
int3
sar
add
or
pop
sub
sbbb
pop
jne
rclb
test
push
adc
and
push
sti
or
sub
lds
loopne
add
out
jae
and
sarb
dec
xchg
fwait
cmp
sbb
jae
jbe
pusha
mov
or
lahf
xor
cmp
aaa
pop
push
sbb
cmp
int
add
jb
inc
add
dec
xchg
adc
aad
adc
stc
mov
push
xor
jl
and
mov
jbe
pop
inc
xorb
push
fidivl
pop
roll
and
add
xor
aad
pop
jno
add
cmp
or
and
and
add
mov
filds
inc
movsb
mov
jecxz
add
test
mov
fwait
mov
aaa
xchg
cltd
push
clc
xchg
xor
mov
imul
jns
movsl
loopne,pt
ret
pusha
jmp
add
sub
cmp
das
or
mov
imulb
push
dec
add
cmp
mov
pop
mov
loopne
lcall
xor
adc
mov
mov
lahf
jmp
push
pop
xchg
test
lret
das
inc
cld
add
shl
pop
add
mov
movsb
mov
stos
push
pop
add
ss
mov
add
icebp
mov
add
push
movsl
loopne
or
sbb
xchg
jbe
jle
push
out
adc
das
jb
push
push
jp
xor
std
mov
aam
into
add
add
dec
aam
test
bnd
fistpll
add
aas
adc
aam
mov
pop
mov
cmp
or
fcoms
sub
add
add
fisttps
and
push
loope
pmaxsw
enter
adc
inc
fs
add
mov
add
cmc
pop
pop
xchg
in
lcall
mov
outsb
add
pop
mov
out
cltd
jae
dec
pop
xorb
sub
adcb
rorb
add
stc
mov
sub
mov
addr16
mov
fdiv
add
mov
push
mov
jnp
sub
dec
pop
pop
push
jne
dec
popf
and
dec
inc
xor
sarb
cmc
andb
and
insb
fdivrs
aam
cld
push
dec
push
dec
add
xor
cli
aad
push
xchg
flds
jecxz
repnz
test
inc
add
mov
call
and
pusha
insb
adc
xchg
xchg
and
jl
add
add
cmpsl
mov
aad
lret
cmp
or
dec
jmp
into
cmp
adc
jge
enter
xor
cmp
add
jnp
es
push
inc
loope
adc
jno
mov
dec
mov
call
cld
jo
pop
lea
pop
sbb
xchg
je
add
pop
sub
jecxz
inc
xlat
sarb
mov
ret
movsl
push
fsubrp
add
test
nop
call
add
add
dec
cs
add
add
iret
or
inc
mov
cli
or
and
lock
jle
inc
mov
add
mov
add
jne
or
stos
out
clc
rorb
andb
aad
push
movsl
and
sub
fucomp
js
movsl
xorb
out
mov
adc
adc
pop
mov
fs
cmp
add
mov
add
cmp
add
nop
jo
push
jp
adcb
lahf
loope
xor
in
loopne
push
add
jne
and
js
add
adc
push
adc
push
inc
fwait
push
add
pop
pusha
sub
mov
xor
add
mov
shlb
shrb
mov
and
in
mov
mov
ja
mov
cmp
cwtl
pop
add
sbb
or
ret
xor
fdivs
popa
mov
push
pop
nop
movsl
and
sti
pop
js
data16
adc
dec
into
aad
sub
add
stc
aas
mov
add
in
inc
push
cmpsl
cli
movsb
std
imul
rcrl
and
lock
add
jno
enterw
fwait
addb
lods
faddl
daa
adc
hlt
imul
ficoms
add
add
cli
push
add
lods
ss
add
je
mov
inc
lret
cmp
cmp
lahf
daa
cmp
push
dec
xchg
cmp
adcl
call
dec
mov
xchg
add
jg
call
cmp
cmpsb
inc
mov
inc
nop
arpl
or
aad
xor
test
pushf
mov
xor
aam
clc
ds
cmc
outsl
mov
pop
movsb
hlt
push
and
movsl
dec
iret
aam
test
pop
add
dec
hlt
xchg
xchg
dec
add
mov
iret
or
cmp
and
orb
add
bswap
not
test
inc
fdivrs
jge
cmp
js
push
mov
ljmp
mov
cmpsl
aad
xor
stos
mov
popf
mov
jecxz,pn
out
sbb
sbb
dec
sarl
mov
outsl
mov
mov
xor
daa
add
je
adc
add
sub
cmp
cwtl
out
pop
popa
mov
sti
jl
fstpt
add
sub
add
lds
push
js
cld
loopne
jae
and
adc
xchg
shl
add
addr16
ret
jo
add
mov
daa
add
aam
mov
cwtl
mov
and
add
fs
and
adc
int
sub
in
es
push
addr16
pop
inc
js
aas
xor
push
cmp
or
cwtl
and
loopne
mov
repz
loopne
hlt
mov
ret
sarb
leave
mov
jp
adcl
popf
pop
filds
jne
mov
inc
testl
fistpl
add
cmp
mov
rol
mov
ja
call
mov
bsr
push
jo
cmp
xor
les
ret
jns
rol
pusha
push
cmp
ss
pop
and
xchg
and
cmc
fildl
sub
icebp
pop
xchg
pop
pop
popf
aaa
push
jecxz
sarb
mov
aad
pop
int
cmp
lods
test
push
out
out
add
dec
outsb
jnp
rolb
mov
mov
call
loopne
mov
dec
dec
and
loop
add
jge
mov
or
pop
hlt
clc
adc
pop
cmc
enter
imul
or
sti
push
pop
add
mov
pop
sub
sysexit
movsb
ss
pusha
ljmp
mov
or
adc
or
fiaddl
ja
push
pop
lret
ret
xor
add
add
outsb
sbbl
and
push
and
fidivrs
fldl
pop
add
stos
addr16
movsl
add
xor
push
add
mov
fwait
outsb
lock
adc
aas
in
cmc
sbb
add
dec
mov
repz
movb
cmc
insb
pop
sbb
push
les
cmpsb
xchg
or
popf
adc
push
mov
push
sarb
insb
add
xor
sub
das
imul
jmp
lea
cmp
sti
int
or
and
enter
jb
pop
daa
iret
out
sub
je
dec
ja
add
mov
add
aam
dec
xchg
daa
adc
and
xchg
xchg
inc
fcompl
daa
mov
mov
shrl
incl
and
mov
ja
sbb
inc
rcl
sahf
mov
jecxz
test
mov
pusha
test
mov
cwtl
lds
xchg
add
sbb
add
sbb
jbe
push
pextrw
mov
mov
xchg
hlt
xchg
add
fbstp
pop
pusha
repz
outsb
cmc
movsl
nop
pop
pop
cld
mov
inc
push
rolb
xchg
pop
push
push
shl
add
movb
inc
nop
add
lds
mov
xchg
jo
add
cs
sbb
negl
cmp
add
outsl
xor
jge
sbb
je
sub
cmp
cmp
inc
ds
mov
mov
pop
bound
xorl
int3
fsubs
add
cmp
dec
fcoml
pop
in
inc
rcl
fstl
sbb
xchg
jmp
xlat
popa
sbb
pop
adc
and
mov
mov
fst
cli
pushf
or
xor
and
add
sub
push
iret
xchg
inc
dec
mov
pusha
dec
movsb
or
sbb
mov
push
adc
cltd
shl
ljmp
sub
in
sbb
add
adc
loopne
jle
add
daa
addr16
jae,pt
add
cs
push
dec
push
push
in
sub
add
lea
xchg
pop
fwait
inc
cmp
je
fldcw
popa
add
ret
mov
shll
cmc
fcompl
add
or
ja
nop
adc
sbb
cmpsb
or
add
fnstenv
sbbb
mov
jbe
lock
je
fs
dec
adc
mov
cmp
cmp
fsub
fisttps
fidivrs
push
je
jae
mov
mov
cld
sahf
lds
xor
cmp
mov
repz
xchg
jno
enter
add
xor
mov
mov
outsb
popa
int
pop
jne
pusha
mov
xlat
dec
sub
add
cvttps2pi
inc
in
pusha
ret
incl
xchg
xor
jo
jmp
adc
mov
sub
mov
lods
add
inc
mov
add
or
lret
cmp
xchg
pusha
fwait
adc
es
sub
cmp
je
inc
inc
fmul
mov
and
add
mov
mov
leave
lock
andb
mov
xchg
lahf
sbb
sub
inc
jg
mov
add
ljmp
mov
xlat
inc
js
rcrb
cmp
lahf
adcb
nop
or
and
cmpsl
add
jp
roll
mov
pop
jge
mov
sub
stc
out
pop
add
mov
pop
push
cmpsl
aaa
add
and
pop
or
push
sbb
add
out
stc
pop
xchg
testl
xchg
popf
pusha
xor
lds
andl
adc
sub
popf
rol
cs
jl
add
xor
cmp
pop
push
es
cli
pusha
or
lods
push
and
add
sub
jp
or
inc
sub
push
pusha
or
loop
jl
push
adc
and
pop
add
jb
sub
add
sbb
nop
xor
ljmp
mov
pop
fisubrl
push
loope
sub
insl
sbb
push
shrb
mov
in
xor
xor
push
xor
xchg
ja
fnsave
cmp
mov
inc
stos
push
sub
add
add
icebp
add
fnstsw
adc
lods
pusha
mov
add
sub
adc
add
jmp
roll
fadds
test
movl
push
dec
and
inc
arpl
enter
add
pushf
xchg
sub
cs
adc
jo
mov
dec
xor
jl
fidivl
adc
lods
and
and
jg
push
xchg
dec
fwait
lods
fadds
add
jns
pop
xor
notl
mov
pop
push
dec
pop
xlat
test
arpl
call
ljmp
addr16
xor
cmp
add
pop
pop
rdtsc
loope
hlt
pushf
icebp
push
push
lods
dec
pop
aad
xor
int
rcl
mov
and
dec
les
cmpsb
mov
scas
mov
jno
inc
xlat
push
jbe
jge
mov
add
sti
cmp
pmullw
mov
call
mov
xchg
sbb
cmp
jp
mov
and
add
ror
add
xor
jmp
dec
push
repz
push
adc
loopne
loop
and
stos
popa
repnz
xor
or
sbb
addr16
xor
xor
jns
sub
sub
dec
add
scas
push
cmpsl
adc
mov
sbb
enter
and
scas
xor
out
or
xor
or
add
cmp
and
fs
cmp
sti
push
mov
fucomi
add
rol
xor
dec
pop
test
pushf
push
or
aaa
and
addb
add
mov
inc
mov
inc
dec
dec
pop
xchg
mov
lds
dec
pop
xor
dec
in
int3
push
jns
xlat
adcb
das
mov
nop
dec
push
inc
cs
xlat
add
cmp
push
add
ljmp
test
rorb
stos
add
in
ret
jp
mov
push
adc
mov
fsubrs
or
mov
jns
push
js
ss
cmp
dec
fiadds
xor
lret
call
mov
aas
ljmp
push
and
aam
adc
add
jo
mov
cmp
sub
lods
cwtl
or
pop
mov
insl
push
add
subl
mov
push
cmovns
or
xor
add
xor
xlat
cmpsb
add
push
xor
mov
inc
scas
and
and
mov
addr16
push
int3
push
sbb
mov
add
pop
xorl
adc
jmp
popl
mov
enter
jno
push
sbb
mov
jne
pusha
stc
xor
out
pop
lds
add
cltd
mov
or
push
jo
sub
push
push
mov
stos
add
mov
cmp
mov
mov
dec
dec
cltd
push
pushf
adc
sqrtps
lcall
dec
and
dec
xchg
or
push
movsb
adc
inc
shr
mov
sub
lock
mov
and
pop
add
lret
out
shr
lret
sub
inc
push
idivl
xor
test
add
mov
xlat
ja
xchg
fs
test
jmp
sub
imul
cld
mov
dec
test
out
loope
cmp
insl
add
mov
out
add
ret
inc
ljmp
jl
in
add
push
lret
mov
fstps
and
pop
cwtl
scas
dec
xor
sahf
adc
and
xor
xchg
cmp
push
add
fdivs
xor
andl
dec
daa
insb
pmulhw
jmp
orb
sbbl
out
xlat
nop
stos
cmp
add
lods
loope
pop
cmpb
jo
addl
scas
pop
test
or
scas
sbb
jg
jmp
aam
mov
mov
sahf
call
and
dec
pop
sbb
adc
mov
int3
pop
cltd
or
push
dec
xor
sub
test
push
dec
sub
dec
jl
add
jo
daa
push
pop
push
out
mov
xchg
lock
adc
xlat
pop
add
scas
lret
push
inc
je
clc
pop
enter
and
sbb
mov
loop
mov
and
jp
std
xchg
mov
xchg
sub
or
xorl
fisubs
xor
cltd
hlt
and
jle
xchg
cmpsb
sub
xchg
ror
xor
mov
cmpsb
inc
mov
lods
sbb
xchg
lods
or
std
movl
or
mov
cltd
add
jns
aam
aad
push
or
fsts
pushf
out
ljmp
or
xor
sbb
mov
mov
lcall
jmp
cmp
inc
mov
pmaxsw
popa
add
lret
jno
xor
test
pushf
add
fmul
lret
jo
add
cmc
out
test
cmp
cmp
dec
inc
aad
jns
in
jno
lret
popf
add
cmp
push
fmul
enter
js
adc
mov
push
add
sbb
sbb
lret
jp
xor
mov
dec
add
sbb
add
out
sti
push
rcl
sahf
int3
cli
push
adc
js
je
jecxz
aam
cs
sbb
push
loope
sbb
sbb
add
cwtl
ret
jo
ret
push
test
pop
add
insl
add
push
sub
add
dec
int3
sbb
pop
popa
rclb
in
add
xor
loope
lret
xlat
leave
sbb
mov
lret
scas
sbb
and
jns
fwait
adc
or
mov
je
nop
xor
push
cltd
int3
adc
js
xchg
mov
mov
xor
mov
into
les
inc
shr
mov
lods
adc
dec
xchg
sub
popa
mov
call
fadd
enter
fs
and
pop
sub
mov
mov
icebp
pop
xor
fwait
or
mov
push
test
call
mov
sbb
push
xchg
cmp
adc
clc
stc
arpl
adc
std
outsb
mov
sub
mov
xor
adc
nop
pop
adc
add
adc
lret
xor
add
inc
adcb
imul
add
test
mov
out
ljmp
mov
call
mov
inc
test
fwait
test
outsb
rol
add
and
push
rcrl
rolb
test
add
dec
fdivrs
cmp
sbb
sub
enter
mov
adc
cmp
sub
sub
inc
sbb
add
sub
push
lods
and
inc
insb
inc
test
dec
sub
cmc
aas
fnstcw
add
dec
negl
xlat
scas
adcb
in
inc
shr
mov
push
dec
test
inc
fiadds
xchg
sbb
add
xor
mov
pop
stos
iret
btl
pusha
test
xchg
dec
add
rcll
mov
es
sub
add
in
stos
fwait
shr
add
ljmp
adc
adc
add
ret
adc
adc
sahf
mov
xor
loopne
mov
and
js
adc
dec
push
or
xlat
sbb
pop
add
in
jg
pop
inc
outsl
push
mov
add
int
inc
jmp
jno
pop
movsb
mov
or
fiadds
lea
out
es
je
inc
xchg
add
cmp
pminub
mov
xchg
inc
fwait
xchg
adc
orb
jle
dec
cld
xchg
push
or
pushf
imul
and
inc
dec
xchg
push
fistl
push
dec
push
cmp
adc
add
sub
loop
dec
pop
push
cmpsl
cmc
outsb
add
mov
xchg
movsl
push
cmpsb
add
or
std
dec
shlb
out
xchg
sub
test
xor
test
add
jbe
pop
sbb
insb
mov
add
xchg
or
sbb
xchg
mov
filds
push
mov
shl
fdivrl
add
mov
xor
cmpsb
idiv
cmp
cld
scas
fmuls
addr16
push
iret
xchg
jno
cmp
bound
mov
into
in
shlb
and
outsb
nop
iret
sub
mov
mov
add
inc
mov
cs
int3
mov
and
mov
add
enter
out
cli
add
jns
fisubl
lock
loopne
loopne
pop
clc
mov
jmp
xchg
nop
ret
xchg
push
aaa
dec
lds
mov
clc
andl
cmp
ds
mov
orb
inc
inc
test
call
xor
test
fcom
enter
mov
push
addr16
and
imul
and
mov
les
sbb
mov
inc
dec
dec
and
sub
in
cmp
sahf
jnp
dec
test
shrb
pop
enter
lods
loope
jle
push
and
or
or
xchg
mov
cmp
pushf
dec
pop
jnp
in
pop
mov
or
roll
pushaw
add
dec
add
das
insb
push
mov
gs
add
cs
test
in
pop
push
nop
rorl
mov
cli
enter
lea
int3
dec
ds
and
mov
pop
sub
push
test
add
sub
pusha
inc
dec
pop
pusha
inc
dec
push
out
pop
add
mov
ljmp
cmpsb
jne
call
sbb
mov
jl
add
out
bnd
xor
lds
or
add
push
dec
inc
nop
pop
or
sub
cmpsl
test
pop
add
int3
mov
rolb
ljmp
cmp
mov
daa
mov
add
arpl
mov
mov
mov
inc
lret
and
sbb
pop
clc
arpl
xchg
add
and
sub
and
or
andb
push
rclb
ficompl
sbb
mov
daa
mov
dec
jno
sub
inc
add
stc
sub
pop
mov
add
push
sahf
int3
xrelease
rclb
stc
jl
add
jg
cmc
out
sub
dec
icebp
fmull
int3
dec
mov
mov
push
jo
mov
mov
lret
roll
lds
xchg
pusha
push
fdivr
aas
in
add
lret
fsubrs
cmp
lods
cmp
loop
scas
loopne
cmp
sahf
cltd
imul
jp
ljmp
lahf
inc
sub
mov
imul
add
fwait
inc
hlt
mov
pop
es
lcall
cli
add
sahf
andb
inc
xchg
and
push
test
xor
mov
mov
push
pop
dec
and
add
inc
aam
scas
sar
addl
leave
jno
add
loope
jbe
sub
inc
nop
add
in
mov
push
sahf
xchg
jg
add
incl
cltd
sbb
bound
sub
mov
cmpsl
daa
shrl
mov
dec
mov
inc
popa
rcl
out
lods
mov
add
and
outsl
in
adc
dec
and
xchg
add
test
into
pushf
push
std
popf
add
pop
pop
aam
sarb
mov
hlt
ret
xorl
adc
nop
pusha
in
aas
pop
push
xchg
lods
lea
push
mov
inc
stos
jmp
or
scas
lods
mov
lret
and
dec
add
scas
mov
pop
aas
add
int
adc
push
es
sub
xchg
xor
int3
fcoml
cmpsl
add
rcrl
and
xchg
xor
or
ja
add
lcall
mov
cwtl
shll
sub
mov
xchg
xor
adc
push
mov
push
test
scas
cmp
icebp
xor
add
mov
mov
lock
xor
add
xchg
inc
lds
int
cmpb
mov
add
shlb
pop
addl
lret
adc
jmp
daa
out
xchg
js
testb
in
cmp
aad
add
les
sub
cltd
jle
popa
add
mov
outsb
movl
testb
and
dec
inc
dec
ljmp
pop
adc
repz
pop
inc
add
sar
jo
arpl
mov
testl
bound
loope
add
ret
lcall
ret
push
push
mov
lret
xchg
push
push
pop
and
jg
popf
popa
inc
out
adc
lahf
mov
les
ja
lret
frstor
xchg
mov
adc
pop
iret
or
xor
pop
test
adc
push
push
es
mov
add
rolb
xchg
iret
mov
pop
scas
add
aad
repz
mov
mov
sbb
sbbb
xor
fnstcw
testb
xchg
and
xor
mov
adc
call
mov
scas
andb
sbb
stos
sbb
pop
add
add
ljmp
fdivs
mov
jae
dec
faddl
aaa
inc
popf
or
iret
pop
adc
test
subb
xchg
mov
pop
mov
and
sub
cli
sahf
mulb
jmp
or
gs
pop
bound
rolb
ljmp
clc
adc
in
sarl
es
adc
pop
in
adcb
add
cmpsb
and
incl
les
sbb
lods
fsubr
popf
or
shl
int3
mov
ljmp
xor
aad
or
sti
dec
int3
sub
or
outsb
xchg
jl
xor
unpckhps
xchg
rolb
insl
imul
or
push
xchg
add
sub
addr16
and
aam
jl
cmc
fbstp
xchg
inc
stos
or
daa
xlat
outsb
mov
in
btl
subb
push
int
lods
pop
popa
cmp
out
cmp
das
shl
pop
pop
add
sbb
adc
or
jno
cwtl
test
jae
pop
popa
rcrl
mov
dec
stc
inc
or
in
xor
pusha
adc
jno
vmread
and
push
adc
ljmp
fs
xchg
shl
push
insl
xchg
fdivs
jo
loopne
enter
add
mov
or
mov
cmp
sarl
xchg
and
xchg
lret
clc
call
mov
out
adc
ret
and
les
xchg
faddl
cmp
int3
and
xchg
dec
popa
cmp
add
pop
into
loopne
lods
addb
push
cmp
sub
or
imul
pop
jb
out
pop
mov
cmp
lea
es
int
pushf
in
inc
sub
fdivrs
add
ja
add
js
sbb
aad
mov
cwtl
add
dec
notb
cmc
ficoml
inc
dec
fnstenv
adc
add
add
insb
les
sub
fstl
call
adc
sub
ret
cli
push
mov
in
add
inc
sarb
fsts
jmp
loop
repnz
insl
and
repnz
add
cmp
cmp
pop
xchg
out
loop
or
repz
dec
pusha
mov
sbb
mov
adc
mov
push
xchg
fdivl
jl
mov
add
mov
ret
movsl
mov
fs
and
mov
add
mov
out
jae
add
lods
jne
push
shrb
xor
adc
inc
push
mov
mov
pusha
xchg
cmp
mov
add
sbb
outsl
iret
int3
negl
mov
nop
lods
mov
pop
add
dec
mov
adc
xor
add
add
lods
cwtl
icebp
add
pop
clc
testl
dec
and
jle
add
sub
cmpsb
jl
cmp
push
hlt
out
inc
or
xlat
sub
in
inc
aas
push
repz
mov
adc
call
test
lret
daa
pop
and
imulb
out
je
add
xchg
movsl
icebp
scas
push
jge
mov
sub
loopne
sbb
xchg
and
jno
dec
inc
dec
clc
fisubs
fldl
pop
and
xchg
aaa
loopne
and
dec
xlat
in
cmp
xchg
lock
fcomps
xchg
push
lds
pop
adc
daa
cmp
inc
fstpl
jge
add
adc
ja
push
adc
adc
js
loope
push
movsl
dec
adc
xchg
add
inc
xor
aas
cmpsb
mov
in
in
ret
shr
jns
inc
shll
mov
mov
dec
xchg
rcrl
mov
mov
mov
adc
add
inc
movsl
sbb
inc
in
pop
loopne
test
pop
dec
jmp
fidivrs
test
rcrb
sbb
or
push
mov
sub
add
test
inc
sub
loopne
dec
add
add
test
in
addb
insb
mov
and
dec
outsb
or
adc
add
shlb
imul
push
or
nop
enter
pushf
xchg
sbbb
xchg
cli
add
test
adc
cmp
mov
jnp
loopne
or
sti
lds
out
subb
mov
hlt
pop
outsl
jmp
add
leave
adc
jmp
test
sbbb
xchg
cmp
jl
nop
gs
and
dec
dec
xchg
outsl
jo
xchg
mov
dec
dec
int3
jbe
pop
mov
adcb
cmpsl
push
add
imul
arpl
icebp
cmp
sub
xchg
adc
and
inc
xorl
fucom
into
lods
add
pop
push
test
inc
faddl
xchg
sbb
cmc
test
call
imul
mov
mov
ret
or
arpl
out
mov
add
out
rol
mov
jl
mov
add
xchg
mov
or
xor
shrb
add
je
mov
in
ds
adc
mov
add
mov
in
lcall
jb
jecxz
xchg
mov
bound
cmpl
pop
pushf
fadds
or
add
sbb
or
insb
pop
pop
fprem1
xchg
add
lea
test
sbb
mov
cwtl
movsb
shl
dec
xchg
add
push
dec
sbb
pop
leave
dec
mov
shlb
or
sub
dec
xchg
test
sahf
and
fs
and
mov
imul
add
out
pop
lcall
loopne
movsl
add
adc
out
mov
mov
cmp
seta
sbb
mov
cmpsb
mov
xchg
outsl
cmp
imul
sub
and
inc
in
add
cld
fwait
inc
scas
sub
das
enter
rol
movsl
mov
fsub
add
pop
push
rclb
inc
push
pusha
iret
mov
rcll
sbb
je
cmp
jge
mov
jo
mov
es
shlb
cld
in
jp
fwait
cmp
addb
test
iret
mov
loop
inc
negl
std
test
es
pop
jle
rolb
or
add
lahf
dec
cmpsb
and
dec
in
adc
gs
add
mov
imul
sub
inc
mov
push
pop
add
xor
add
fiadds
sahf
mov
rcr
push
mov
cmp
mov
adc
pop
add
inc
outsl
rcr
push
add
stos
adc
adc
lods
dec
mov
out
cld
or
hlt
dec
add
adc
jnp
dec
outsl
arpl
scas
and
xor
andl
xchg
add
stos
cmp
adc
sub
fcompl
xchg
leave
hlt
int
and
inc
cmc
mov
fcoml
sbb
mov
divl
adc
shr
leave
pop
cmp
ret
mov
call
hlt
push
inc
test
fs
loopne
add
mov
or
hlt
fadds
rolb
mov
dec
dec
pusha
int3
inc
or
arpl
jmp
add
mov
call
push
sbb
and
sub
outsl
aam
and
cwtl
test
mov
add
inc
inc
insb
rolb
pop
xor
je
lds
int
jmp
pop
cwtl
sub
repz
ljmp
daa
push
lret
xchg
jns
mov
inc
cld
add
movd
mov
imul
or
pop
outsl
add
sub
and
fidivs
dec
sub
pop
inc
mov
pop
int
in
cmp
subl
cmp
nop
push
pusha
push
insb
push
dec
xor
daa
aam
mov
jecxz
xor
lods
ss
rclb
add
adc
lds
add
out
arpl
xor
adc
mov
loop
pushf
adc
lods
mov
and
lea
jl
movsb
inc
inc
jo
incl
jmp
inc
push
and
and
pusha
xchg
jb
add
xor
repz
push
adc
and
add
push
imull
xchg
shl
std
or
ret
jo
mov
mov
adc
inc
add
cmp
add
xchg
fdivr
aas
out
rorb
leave
mov
mov
fidivl
pop
inc
push
insl
add
test
add
dec
dec
add
cmp
add
inc
and
fimull
sbb
dec
mov
inc
imul
adc
repnz
cmpsl
cmpsb
inc
pushf
negl
mov
push
rolb
out
adc
push
cmp
mov
test
lds
or
or
add
mov
clc
cltd
test
stc
cmp
jp
incb
jmp
mov
stc
xor
into
or
pop
insb
das
inc
xchg
mov
or
lea
add
mov
rcl
nop
test
xlat
jb
dec
scas
aam
ds
pop
cwtl
sub
sahf
jo
sub
inc
in
je
cmp
dec
outsb
nop
jmp
or
out
hlt
ds
add
shlb
push
stc
aas
loope
pushf
mov
push
adc
jb
jns
inc
in
push
cmp
push
pop
jns
jp
inc
xchg
shll
test
ret
and
movsl
daa
dec
clc
xchg
popa
outsb
cmp
mov
mov
push
pop
int3
cmc
imul
fs
in
or
adc
inc
add
xor
cld
push
scas
xor
push
andl
fcoms
and
add
or
sbb
adc
rcrb
call
daa
movsl
lret
add
scas
inc
lds
cmp
and
xchg
test
push
inc
push
push
and
push
inc
push
cmp
mov
mov
inc
lods
add
scas
ret
mov
mov
int3
rclb
jns
push
pmuludq
scas
lock
out
mov
pop
aas
push
adc
sbb
push
cwtl
mov
iret
inc
pop
and
jnp
pop
test
lods
adc
dec
lods
dec
ss
js
lret
add
dec
dec
sub
mov
iret
jb
jl
dec
lods
shlb
andl
loopne
cwtl
lods
inc
adc
add
mov
jbe
sbb
push
cli
and
dec
sti
or
jne
adc
in
ljmp
in
jl
mov
jecxz
sbb
jnp
or
jecxz
mov
pusha
sub
mov
jno
cmpsb
iret
cmp
mov
inc
test
cwtl
jmp
jb
call
sbb
sub
push
inc
add
shrl
imul
or
outsb
outsb
mov
xchg
insb
andb
and
or
dec
test
jmp
inc
inc
add
mov
std
or
jl
jle
je
dec
add
ret
inc
jo
inc
aas
adc
dec
or
inc
fimuls
std
lds
mov
les
sbb
mov
rorb
lock
lods
lahf
add
cmpsb
and
xor
jmp
cmp
sbb
inc
add
mov
mov
ljmp
ret
pop
js
mov
mov
arpl
pushf
inc
je
jnp
pop
jno
and
mov
and
jl
mov
dec
pop
add
aam
lret
scas
dec
push
into
dec
cmp
sbb
lods
add
nop
add
mov
call
cmp
fildl
js
lea
add
jmp
inc
mov
lock
jnp
aam
jb
test
jbe
sbbl
push
dec
inc
lds
leave
lret
sub
popa
add
je
insl
cwtl
xchg
cmp
fistpll
fs
cmp
test
lods
xchg
cmp
add
and
je
pop
mov
adc
pop
in
xor
sbb
cvtps2pi
xchg
or
idivb
mov
dec
out
mov
jnp
add
cmp
mov
adc
mov
and
imul
cmp
add
add
lds
and
mov
insb
mov
xor
aaa
and
test
or
shl
sbb
sbb
mov
pop
mov
test
inc
mov
jle
rclb
mov
jns
les
add
push
mov
mov
sarl
add
pop
cli
rolb
adc
out
inc
nop
sbb
mov
or
imul
orl
mov
cld
test
adc
or
cwtl
mov
inc
dec
and
mov
ljmp
out
gs
leave
and
pusha
pop
dec
inc
inc
mov
mov
je
mov
inc
fsub
dec
lret
faddl
mov
das
add
iret
adc
loop
inc
cmc
xor
lret
add
lock
sbb
push
testb
mov
cwtl
or
lcall
std
rol
addb
mov
push
movsb
shrb
lcall
dec
sub
pop
jno
loopne
cmp
jecxz
in
repnz
add
je
jle
add
pop
dec
rcr
stc
or
pop
ljmp
add
fimull
xchg
cltd
daa
lods
xchg
into
sahf
pop
aam
and
cmp
dec
or
lock
cmpsb
loopne
pop
popf
push
add
jl
jmp
cs
popa
add
sbb
inc
not
inc
shr
dec
xchg
dec
test
sti
inc
sbb
aam
fcom
mov
rcrb
add
test
xchg
pop
in
movsb
and
and
mov
dec
adc
add
bound
xlat
sbb
adc
push
aad
enter
filds
cwtl
adc
rcr
lock
inc
subl
fsubl
pushf
xor
add
pusha
scas
leave
mov
or
mov
inc
in
inc
std
int3
sbb
ds
inc
jo
in
push
inc
movsb
int
cmp
push
in
add
rcrb
xchg
add
ret
adc
jbe
addb
add
or
push
jne
and
dec
sbb
adc
aas
sti
jl
add
pushf
sbb
leave
cmpsl
jmp
xchg
cmp
and
sub
mov
movsb
rcrl
int
lods
jno
mov
adc
mov
add
ljmp
icebp
jae
inc
aad
xor
mov
pop
pushw
dec
inc
imul
jl
ds
addr16
jbe
orl
dec
pop
dec
insb
jb
pop
push
jg
inc
test
test
mov
push
mov
add
inc
or
sbb
lds
cmpl
aam
dec
and
outsb
sbb
inc
mov
add
inc
xor
and
test
cmp
or
adc
push
out
adc
cmpl
add
add
gs
pusha
add
jb
mov
xor
fcomps
mov
inc
pop
in
mov
inc
fistpll
cmp
test
dec
lods
add
arpl
bnd
pop
lds
lret
int
int3
mov
out
sub
std
mov
push
push
outsl
cmp
dec
jmp
ret
mov
pop
subl
push
mov
sbb
inc
mov
xchg
aas
pop
jo
adc
addr16
shrb
push
lods
filds
mov
inc
iret
stos
mov
add
push
mov
cmpsb
inc
cmp
sub
rcr
pop
outsb
push
inc
scas
out
add
push
sbb
aaa
sub
xor
add
push
and
adc
daa
subb
stc
adc
jo
inc
cld
fs
or
pop
push
lret
xor
jb
in
or
pop
jmp
pop
dec
adcb
sub
mov
negl
lods
push
scas
lock
inc
lahf
fsts
outsl
jnp
add
xchg
les
sub
or
dec
sub
cmp
lock
pop
popa
hlt
and
add
ljmp
jecxz
adc
xlat
push
lock
fdivrs
pushf
inc
jns
pusha
dec
push
dec
ret
add
adcl
add
mov
and
jge
mov
nop
pushf
add
mov
cld
loopne
adc
or
jbe
push
pop
add
xor
nop
dec
xor
movsb
or
mov
aam
lock
mov
add
lcall
push
insb
insl
pop
add
popf
mov
or
push
pusha
hlt
lahf
mov
inc
dec
leave
pushf
and
jb
jae
mov
mov
loopne
add
mov
scas
sub
sub
sbb
mov
mov
rclb
lods
xchg
sbb
bswap
mov
aad
pusha
test
jmp
addl
int3
pop
add
stos
mov
jnp
inc
nop
add
outsb
inc
out
pop
in
je
mov
jns
out
sub
add
fsubp
pop
push
inc
mov
adc
cmp
jp
div
add
lret
cmp
push
paddb
mov
subb
int3
mov
sbb
aam
enter
pop
xor
push
sub
iret
mov
cmpl
das
push
mov
pop
inc
testl
loopne
leave
pushf
add
pop
fldenv
push
and
push
and
pop
rorb
repz
inc
and
into
testl
add
mov
or
inc
mov
mov
pop
scas
fildll
mov
stc
cmp
xorl
aam
adc
lock
test
xchg
sub
jp
add
or
cld
mov
xor
aam
dec
das
lods
mov
es
push
push
iret
int
cmp
ljmp
sbb
lods
scas
fadd
les
imul
orb
jo
add
shll
mov
inc
inc
xlat
cwtl
push
xchg
sub
lahf
rol
add
dec
xchg
push
inc
loop
sub
mov
push
jno
pop
rorl
push
mov
xchg
xlat
insl
adc
call
scas
add
or
stc
pop
and
or
in
hlt
repnz
cli
sub
lret
lods
movsl
pop
es
addb
lret
sbb
stc
cli
jnp
mov
ret
es
in
cmp
daa
mov
xchg
add
ds
pop
or
push
inc
jo
adc
pop
push
sub
pop
xlat
pop
and
add
fisubl
orl
cwtl
rol
adc
push
lret
inc
lods
mov
notb
loopne
inc
add
mov
roll
addr16
nop
sbb
repnz
cmp
xchg
add
pop
mov
sbb
adc
adc
mov
imul
imul
lock
add
xor
jbe
jle
enter
dec
adc
cmpsl
adc
mov
add
or
rclb
inc
lock
inc
lods
cld
dec
iret
or
ljmp
cmp
test
dec
push
adc
jne
sub
enter
mov
das
or
fs
xor
cwtl
push
add
and
mov
mov
cmp
mov
pusha
xchg
pop
pushf
sbb
outsb
pop
sub
fwait
aas
test
sub
mov
or
adc
rclb
out
sub
pop
adc
mov
sbb
xchg
xchg
shlb
leave
mov
stc
inc
add
int3
add
and
loop
pusha
xchg
rcrb
enter
icebp
xchg
add
in
adc
and
inc
adc
push
lds
popa
fsubr
scas
cmpsl
pop
call
int
and
ret
outsb
dec
ror
pusha
call
lds
xchg
repnz
add
mov
lods
add
mov
nop
clc
shlb
scas
nop
test
jns
movsl
test
fstpt
fdivr
xor
xchg
xlat
pop
or
sbb
inc
mov
sarb
add
pushf
mov
push
cmp
mov
neg
cltd
js
add
movsl
lahf
cld
mov
inc
insb
pop
mov
std
arpl
dec
andl
sbb
pop
or
int3
fmull
xor
adc
insb
lods
shlb
add
call
jo
mov
sbb
pop
mov
cmp
enter
popf
mov
cltd
scas
mov
add
in
outsl
addr16
ds
lock
push
movsb
add
lock
push
call
adc
and
dec
outsb
xor
les
pusha
loope
mov
add
pop
outsl
inc
pop
pusha
add
mov
and
adc
adcb
xchg
add
push
fistps
pushf
push
sub
cs
xchg
sub
cmc
dec
jnp
jmp
or
dec
lea
sbb
or
dec
pushf
pop
mov
daa
push
add
mov
add
mov
pop
pop
incb
in
or
xchg
mov
and
inc
lea
mov
aam
repz
adc
pop
cmp
jmp
mov
xor
mov
or
dec
add
mov
shlb
push
inc
add
or
aaa
mov
push
inc
ret
add
add
mov
mov
push
sub
add
mov
sbb
ljmp
sbb
shl
fcmovu
into
inc
xchg
push
repnz
leave
call
pusha
mov
cli
loopne
mov
mov
call
mov
sarb
dec
call
sub
cltd
test
cmp
shlb
lods
pop
lock
data16
cs
orl
mov
sub
pusha
or
sub
mov
xchg
out
es
leave
inc
xchg
inc
mov
sti
dec
mov
inc
mov
xchg
mov
test
movsl
cs
testb
adc
dec
shlb
es
pop
fcompl
nop
add
cmp
inc
cmp
fisttpll
fldenv
lock
xchg
mov
pop
sbb
lahf
inc
nop
inc
sahf
rcrl
scas
sub
jnp
jle
popa
dec
sbb
pop
test
sub
or
cltd
shrl
pop
in
or
inc
push
xor
pop
lock
fwait
divb
push
xor
lods
insb
xchg
jle
pop
movsw
mov
adc
nop
add
pop
aaa
ja
es
cmc
jnp
test
test
jne
ljmp
outsl
pop
jmp
mov
mov
inc
inc
das
and
addb
xchg
jge
cmpsb
jmp
adc
xor
or
pop
fldl
pop
cmp
orb
or
aas
les
ret
loopne
jecxz
add
add
jle
pop
or
adcb
les
add
sub
imulb
or
adc
adcl
rolb
pop
mov
in
nop
dec
popa
push
or
and
es
pop
enter
mov
andb
fmull
xchg
fldcw
sbbl
sbb
adcl
xchg
mov
dec
jns
leave
insb
scas
in
out
pushf
adc
or
callw
js
pop
sub
xchg
lcall
cmpsb
and
add
dec
pop
movsb
add
loopne
push
out
outsb
adc
idivl
add
aad
ucomiss
sbb
cmp
aam
dec
dec
icebp
dec
add
dec
subl
les
mov
stc
mov
push
pop
sub
adc
les
rcl
fimull
add
pop
inc
aam
rolb
mov
aad
lods
xorb
mov
inc
or
in
inc
daa
xor
jns
add
data16
add
xchg
pop
mov
cs
inc
movb
push
jecxz
outsb
xchg
add
inc
call
fdivr
add
lret
scas
push
push
pop
fcoms
aam
pushf
xchg
loop
jb
mov
subl
pop
adc
aam
xor
int3
cmp
stc
and
and
jno
popa
sub
mov
cmp
andb
xchg
or
inc
add
cmp
das
xorl
cltd
dec
and
adc
ja
xchg
add
push
aam
inc
pusha
sub
push
in
and
jmp
cmp
dec
fisubrs
dec
add
lcall
add
sub
aas
and
add
jl
outsb
inc
inc
jne
push
ret
cli
jg
sbb
cmpsl
jmp
popa
add
mov
xor
push
lock
push
mov
add
je
xchg
add
xchg
and
faddl
int3
dec
xor
add
js
and
rcl
dec
add
mov
xor
cs
loope
cwtl
add
fwait
jae
mov
add
loop
inc
fidivs
js
jmp
ret
add
iret
mov
add
cs
cmp
pushf
outsb
lock
adc
pusha
jge
add
pop
call
xor
jo
jmp
fistps
mov
or
adc
inc
xchg
sahf
incl
pop
repz
and
sub
add
call
fldl
je
mov
sub
daa
push
shll
and
inc
mov
es
dec
sub
fisubs
addr16
sti
sub
pop
cmpsb
out
rorb
adc
loopne
and
pop
add
dec
sub
cmp
and
sbb
shl
or
faddl
inc
xchg
out
xchg
dec
dec
adc
lret
or
inc
pop
repz
enter
sbb
dec
dec
xor
push
xchg
inc
mov
out
in
pop
inc
inc
test
add
mov
repz
mov
jge
adc
sbb
mov
ljmp
mov
mov
mov
dec
and
adcl
cmp
mov
cwtl
enter
mov
movsb
mov
hlt
sbb
or
rorl
sub
pop
cmp
or
popl
shrl
xor
pop
addl
and
inc
idivb
loopne
sub
icebp
or
and
fdivs
xor
sub
and
popf
xor
dec
xchg
mov
add
push
mov
fdivrl
dec
idivb
outsl
mov
cld
jle
mov
adc
enter
orl
addr16
mov
inc
lret
aam
test
add
pop
cmp
flds
add
ja
jns
add
add
lcall
cwtl
jo
sub
clc
subb
lret
in
add
enter
push
or
inc
fdivp
add
xchg
cmpsl
iret
adc
jae
cltd
mov
cmp
cmp
add
in
shlb
sbb
push
cmp
sub
pop
add
inc
push
push
mov
cmp
lret
mulb
mov
enter
mov
je
fldt
mov
push
loope
ds
outsb
jmp
pop
ffree
adcl
cmp
leave
xor
and
pop
xchg
sbb
dec
add
dec
js
in
add
fldl
dec
sbb
mov
inc
ret
in
mov
add
into
inc
stos
add
lods
mov
sbb
push
push
mov
jns
mov
mov
dec
inc
adc
push
add
fs
jecxz
dec
fists
xchg
dec
and
sbb
mov
bound
rolb
jmp
jmp
sbb
mov
mov
add
sbb
fs
adc
pop
ja
or
cwtl
pusha
mov
int
add
jg
sub
dec
or
xor
pusha
mov
in
or
pop
gs
or
daa
stc
aam
add
jmp
adc
jae
cmp
pop
adc
dec
or
push
lret
or
push
and
sbb
rep
add
xor
lret
pop
push
fs
lods
inc
pop
xchg
pusha
mov
inc
call
xchg
mov
test
mov
rcl
sub
popa
pop
nop
mov
adc
jmp
push
push
lds
push
sub
xor
and
pusha
loope
repnz
add
imul
rclb
add
mov
repz
roll
push
pop
add
add
push
add
testl
out
js
outsb
pop
out
mov
movl
ljmp
dec
add
fwait
or
dec
inc
jns
push
push
mov
pop
add
adc
ljmp
stc
add
into
cmpsb
jp
push
imul
xlat
sub
outsl
gs
inc
sbb
cmp
imull
iret
lret
mov
out
sbb
add
cmp
mov
xor
mov
add
adc
mov
imul
jno
daa
jae
push
jb
scas
xor
xchg
sub
ja
setne
jecxz
sbb
pop
push
adc
cmpb
mov
and
and
adc
scas
aaa
sub
mov
pop
adc
push
shr
and
push
aad
sarb
xchg
xorb
xor
shrl
in
or
daa
scas
and
push
add
xchg
popl
std
das
add
lcall
adc
pushf
lahf
or
repz
sub
push
les
cmp
shrb
lcall
movsl
add
jns
test
cld
cmpsb
add
std
inc
fxch
stc
add
xchg
pop
sti
lret
xor
jmp
or
loop
movsb
loopne
inc
mov
orl
xchg
adc
negb
icebp
ja
aam
jmp
sar
jge
ljmp
pop
or
push
rcrb
test
xor
das
pushl
cmpsl
and
and
mov
add
inc
push
std
sub
sbb
push
xor
testb
pi2fw
clc
xor
or
xor
push
sub
insl
loope
shlb
adc
adc
mov
int3
sbb
sub
movsl
push
popl
insl
mov
adc
test
mov
xorl
cmpsb
and
imul
mov
and
clc
icebp
jl
test
xlat
and
jp
fcoms
sub
sub
dec
xchg
test
or
cld
and
xor
and
dec
add
pushf
cmc
jbe
in
sub
jmp
cmp
loop
sub
add
or
pop
or
jbe
lds
inc
popf
cli
inc
jl
add
int3
sub
arpl
push
negl
in
push
jl
mov
sbb
add
stos
pop
test
mov
mov
and
sub
push
inc
pop
jmp
invd
out
mov
cmp
push
adc
mov
xor
outsl
pusha
lret
clc
pop
cmp
aam
std
sbb
inc
jge
stc
dec
add
add
test
pop
jnp
or
add
fistl
stos
dec
stc
add
jl
aad
int3
and
pusha
test
test
or
push
mov
popf
out
test
add
stos
mov
and
fldenv
push
mov
or
mov
cli
or
in
call
lret
mov
stc
leave
icebp
jo
aam
cld
and
sbb
and
xor
xor
adc
repz
inc
dec
ja
insb
dec
and
jmp
add
sbb
xchg
add
aam
jbe
inc
and
lods
xchg
sbb
dec
push
push
xor
adc
mov
and
dec
or
jb
fcoml
cli
add
pop
xchg
loop
in
pushl
fsubrs
fstpt
xor
cwtl
pusha
outsb
rcll
mov
pop
mov
aaa
inc
frndint
pop
shl
lret
xchg
dec
hlt
int3
and
fmull
jge
cwtl
add
enter
jbe
jno
sub
add
push
push
nop
or
mov
orb
inc
mov
js
add
cmp
inc
sub
add
ss
lods
pop
and
dec
subl
and
sbb
jb
cltd
dec
sbb
fmul
push
call
push
aam
xor
push
add
fldt
sub
cmovo
daa
popa
scas
lahf
out
shlb
mov
mov
push
fwait
sub
int
test
xchg
mov
mov
or
cmp
jp
pusha
fsubs
subb
push
inc
xchg
lock
js
test
sbb
xchg
in
test
int
xchg
or
mov
xor
mov
adc
in
insl
mov
or
xchg
inc
mov
faddl
xchg
xchg
test
pop
xor
xchg
call
inc
adcb
leave
push
nop
mov
mov
sub
imul
ljmp
push
add
fbstp
scas
dec
xor
or
adc
mov
and
add
or
les
mov
loope
push
cld
jb
pop
jge
xorb
dec
jp
aam
cwtl
dec
add
sbb
sub
rorl
aam
add
loopne
cmpsb
pop
add
and
mov
mov
int
clc
adc
inc
mov
out
mov
add
cs
lods
pop
dec
cwtl
aas
adc
int
add
call
jmp
nop
pop
and
push
dec
add
test
loopne
rclb
test
imul
add
pop
in
adc
pop
cmc
mov
insb
or
out
int
add
adcb
or
and
sbbl
and
pop
pop
in
mov
or
sub
jno
push
dec
dec
sbbb
sbb
xchg
mov
inc
mov
pusha
movsb
push
jne
adc
inc
push
mul
mov
adc
adc
stos
stos
adc
shlb
aad
adc
and
fdivrs
int
lods
loopne
cmp
popf
xor
jle
push
movl
int
inc
lock
mov
nop
add
lret
mov
popf
repnz
jb
add
shl
js
inc
fs
into
add
xlat
push
enter
out
shrl
lds
and
test
xor
sub
cmp
mov
repz
mov
jmp
popf
sti
and
xor
pop
mov
mov
cmp
les
int3
enter
add
dec
dec
lds
incl
test
movsl
cs
sbb
xchg
xchg
add
pushw
dec
xchg
lock
outsb
in
test
push
pushf
or
xchg
clc
and
jg
mov
icebp
rcrb
mov
xchg
xor
pop
add
scas
sub
or
ss
mov
adc
adc
jge
enter
jne
js
addb
iret
cmpsb
or
repz
mov
adc
cmc
cwtl
int3
test
addb
sahf
mov
jle
xchg
mov
into
dec
push
xchg
and
mov
loopne
in
add
test
sub
sbb
sub
pop
int3
inc
fwait
andl
adc
cmp
dec
xchg
adc
repnz
jmp
push
int
sub
and
jno
cmp
rolb
stos
pop
or
cwtl
call
test
add
lock
sub
push
inc
sahf
cli
inc
jle
dec
daa
push
test
adc
faddl
jge
add
jne
iret
adc
jae
out
std
or
mov
faddl
dec
popa
jb
popf
or
jg
imulb
rorb
daa
lods
popa
scas
leave
mov
int
lock
arpl
movsb
into
pop
mov
lock
call
cmpsl
test
int
jo
push
fiaddl
in
add
in
inc
les
or
int
inc
fistpl
jmp
push
shlb
adc
sub
cmp
pmaxsw
inc
frstor
jne
pop
add
clc
dec
imul
insl
mov
add
adc
mov
jmp
push
outsl
mull
adcb
push
jo
push
and
pop
lods
lock
push
mov
inc
xchg
clc
test
sbb
or
mov
inc
lds
mov
dec
loopne
add
add
xchg
loopne
push
rdmsr
jle
call
lock
pushf
xchg
bound
cwtl
cmpb
adc
and
loope
imul
scas
lods
jl
shll
pushf
sbb
dec
adc
lea
push
and
and
ret
add
movsl
or
mov
add
lock
push
add
stos
jmp
adc
ja
aas
xchg
add
es
inc
mov
cmp
dec
pop
and
jb
adc
sub
add
fbstp
mov
andl
jp
mov
jnp
rcrb
push
stos
ds
or
cwtl
sbbl
test
lods
add
sub
or
sahf
rorb
mov
jmp
xchg
jge
dec
lds
jecxz
insb
call
icebp
shlb
imul
cltd
add
add
and
push
and
mov
mov
fsts
adcb
mov
enter
call
xchg
inc
sbb
or
mov
enter
add
xor
mov
lock
xor
mov
mov
xchg
bound
cmp
jle
xchg
and
mov
and
xchg
cmpb
shrb
mov
mov
or
jno
sub
fdivl
pop
lcall
shr
outsb
cmp
pop
fldlg2
icebp
aas
sub
xor
cmp
rolb
push
insb
add
fimull
out
push
mov
xchg
rclb
shrl
jb
jmp
ljmp
stos
das
and
push
hlt
pusha
mov
and
stc
and
mov
mov
aad
pop
add
adc
push
test
jge
jg
decl
mov
lret
cwtl
in
add
sbb
sub
push
adc
xor
ret
test
cli
push
push
ret
push
pusha
and
test
dec
or
test
aam
insb
add
cwtl
adc
xor
fdivrl
add
hlt
ss
dec
xor
push
adc
test
lods
inc
mov
lods
add
pop
ja
mov
cmp
ds
loopne
xchg
jno
dec
mov
fdivrs
repnz
lret
js
pusha
sbbb
add
in
xchg
stc
testb
lret
fildll
fwait
add
roll
sbb
loopne
stos
inc
into
push
xchg
flds
pop
mov
fs
xchg
int
jno
dec
loopne
test
jae
shrb
jge
cwtl
add
clc
sbb
imul
andb
arpl
push
mov
icebp
scas
jbe
cmp
std
and
loopne
adc
cmpsb
aaa
or
repnz
adc
dec
call
testl
and
or
enter
shl
and
insl
cmpsl
in
mov
rolb
mov
add
pop
jnp
pushf
sbb
aas
filds
adcb
xchg
sbb
xchg
add
fidivs
scas
ja
imul
xor
hlt
movsb
xor
mov
cmp
fwait
mov
mov
add
xchg
jge
mov
add
add
leave
mov
cmpsl
and
out
aad
fsubl
xor
pushf
sbb
mov
scas
mov
dec
add
out
lods
add
in
cmpsb
enter
clc
imul
enter
scas
mov
jmp
add
inc
clc
cmp
test
cli
or
mov
mov
ret
and
fisttpl
lret
cmp
cmp
sub
loopne
pop
repnz
es
push
insb
mov
mov
mov
sub
lock
cmpsl
and
test
add
mov
jmp
clc
cmp
lods
movb
add
jb
int3
nop
addr16
orb
ffree
add
sbb
mov
out
divb
add
inc
fadd
scas
xchg
adc
lods
or
push
dec
push
inc
fnsave
shlb
sbb
pop
ror
jnp
push
adc
dec
fdivl
test
stos
mov
les
ret
push
mov
shrb
push
or
inc
aam
push
add
loop
push
add
xor
rclb
push
hlt
xchg
add
push
repz
pusha
sub
adc
je
test
sbb
adc
push
dec
push
or
mov
mov
lods
xchg
sahf
sub
cmpb
stc
pop
adc
scas
in
ja
xchg
pop
orl
mov
out
shlb
test
cwtl
push
lods
movsb
cmp
dec
push
loope
adc
inc
pop
xchg
ret
rorl
push
xor
sub
imul
or
pop
and
push
add
pop
je
sub
and
xchg
inc
int3
rorb
pop
cli
dec
roll
push
sarb
fldl
xlat
hlt
call
pusha
sti
or
in
jbe
les
scas
aam
mov
mov
mov
xor
cmc
add
add
and
repz
sbb
or
mov
cmpsb
xchg
sbb
add
lret
shlb
or
xchg
sub
xor
cmp
xorb
cld
mov
or
or
adc
mov
dec
aam
and
icebp
bound
or
or
pushl
mov
xor
inc
loopne
popa
stos
sub
dec
sbb
pusha
lock
mov
inc
jmp
add
out
outsb
add
popf
mov
pop
ds
add
outsl
lret
adc
nop
orl
lahf
inc
loopne
xor
sub
movsb
xor
jne
pop
mov
movsb
and
imul
mov
push
xchg
xchg
insb
inc
or
test
push
jb
jno
mov
fimuls
ljmp
sub
or
nop
mov
test
sub
stc
mov
leave
mov
xchg
adc
cmc
imul
sar
in
and
loope
dec
mov
cvtpi2ps
out
jbe
or
add
pushf
in
gs
pop
jl
inc
mov
and
adc
pop
pusha
addb
cmp
ret
shr
and
outsl
pushf
sbb
ja
loopne
sub
lock
mov
add
jb
shlb
dec
lea
in
add
cmp
pushf
daa
mov
rcrb
ret
push
inc
inc
les
pop
mov
or
pop
rolb
dec
fld
addb
std
mov
lret
pop
clc
inc
and
in
push
or
call
push
fsubs
jp
inc
ret
popa
adc
jb
or
outsl
mov
cwtl
mov
pop
inc
inc
inc
cli
imul
xchg
add
rorl
sbb
or
mulb
test
lahf
or
mov
call
push
jp
xchg
adc
sbb
jnp
pop
jo
cmp
dec
pop
lds
test
and
insl
mov
repz
sbbb
sub
fnstenv
mov
sub
js
xchg
fstpl
and
adc
push
and
leave
test
nop
xor
push
cmp
stos
decb
subb
test
scas
lcall
jge
jecxz
ret
mov
cmp
shlb
loopne
push
mov
push
lods
pusha
push
mov
mov
add
fdivrl
aam
ltr
xchg
push
and
mov
xchg
mov
insb
mov
push
xchg
mov
mov
jge
sbb
sahf
es
adc
push
cmc
pop
dec
cmpb
push
aas
mov
xor
jge
sarb
add
popf
mov
loopne
sbb
ret
shrb
in
clc
xor
test
mov
mov
xchg
add
fistps
or
mov
notb
pop
jae
xor
aaa
add
fisubrl
mov
nop
inc
enter
lods
jno
push
lcall
push
and
jmp
and
stos
stos
xor
and
sub
jo
cmp
add
aas
fstpl
mov
andb
test
fadds
mov
call
mov
pop
dec
inc
sub
and
inc
sbbl
cli
in
mov
int3
inc
jo
push
push
add
sbb
cmp
sub
enter
add
jne
xchg
sti
cli
sbb
ret
mov
dec
scas
mov
js
in
pop
out
and
shrb
dec
mov
nop
push
sbb
cld
add
add
dec
nop
add
test
mov
mov
aad
pop
sbb
or
push
push
mov
fdivs
xor
xchg
jno
xchg
mov
pop
incb
cmp
dec
and
test
and
xor
fwait
mov
call
xchg
push
adc
pop
push
push
sti
push
sub
mov
pop
jg
adc
jl
pop
aaa
adc
subb
mov
adcb
push
bound
pushf
fdivrs
or
push
mov
ret
das
std
les
add
call
add
bound
pusha
pop
mov
jb
sti
jge
mov
mov
sahf
push
lret
scas
push
or
jns
incb
xorl
icebp
dec
sub
arpl
adc
add
dec
sbb
add
enter
mov
outsl
push
rcrb
cmp
nop
clc
dec
mov
adc
mov
sub
pop
adc
and
les
nop
xchg
pop
jle
add
mov
xlat
shrb
cmp
sub
imul
or
cmp
add
es
enter
sub
ret
fidivrl
cld
xor
cltd
cli
jo
fmull
and
enter
jge
add
xchg
lcall
fwait
es
adc
icebp
and
idiv
pushf
inc
jo
add
insb
loope
and
loopne
mov
idiv
insb
test
dec
out
push
jle
call
xchg
and
pop
xor
cmp
rorb
gs
and
stc
cwtl
dec
add
xor
std
add
fsub
or
pusha
add
adc
inc
adc
dec
cli
xor
inc
sbb
mov
dec
jecxz
inc
sahf
mov
add
lcall
shlb
jae
dec
out
mov
call
adc
jge
popa
aam
or
jb
test
adc
jge
inc
or
imul
mov
add
jmp
or
add
stc
outsb
mov
imul
sbb
ud1
adc
popa
int
aaa
pushf
rorl
xor
ds
call
pushf
adc
scas
and
sbb
int3
cwtl
mov
fsubp
add
cld
jge
push
lock
xchg
sbb
lea
jecxz
movsb
pop
mov
loope
add
push
es
inc
lods
add
push
out
add
and
movsb
popf
lods
add
lret
das
sbb
inc
pop
jno
xchg
data16
push
mov
test
push
jo
inc
mov
rol
mov
mov
xchg
sbb
or
jl
inc
pop
cmpsl
lret
dec
add
or
mov
xchg
lahf
aam
imul
movsl
movsb
sbb
arpl
sbb
pop
and
dec
daa
out
xor
cltd
stc
jp
mov
dec
inc
fdivl
push
sbb
fwait
nop
sbb
jae
push
adc
pushf
sbb
mov
pusha
into
xor
fwait
outsb
out
push
and
add
in
jnp
jge
xchg
fs
adc
add
xchg
cld
das
out
sbb
or
jl
and
arpl
inc
fcoms
aad
stos
popa
xchg
or
pusha
mov
lahf
cltd
clc
in
rolb
imul
sbb
mov
testb
adc
mov
adc
and
push
fisttpll
xchg
pop
inc
inc
nop
dec
push
xchg
push
jne
cmp
pop
adc
jno
sbb
sub
xorl
cli
cmp
adc
nop
in
nop
mov
movb
sbb
sbb
mov
add
es
in
add
or
sahf
stc
orl
mov
fcomps
aad
push
inc
mov
in
add
loope
inc
or
mov
mov
mov
pop
fs
add
xchg
clc
mov
mov
jge
cmc
jo
add
jne
xchg
cmp
addb
pop
mov
pop
add
push
adc
mov
sbb
dec
rcrb
add
in
in
xor
shrb
sbb
call
or
fwait
and
add
shll
adc
cmp
nop
subl
adcl
pusha
xchg
enter
pushf
jne
rcrb
add
je
outsl
add
mov
jg
pusha
in
sbb
inc
mov
popf
mov
mov
push
mov
cmp
int3
rcl
or
sbb
sub
adcb
sbb
sti
pushf
jecxz
sub
andl
stos
icebp
push
fbld
push
xor
pusha
bound
mov
sbb
inc
in
enter
or
test
jo
adc
inc
adc
pusha
mov
or
mov
jmp
mov
jbe
in
add
xchg
int
mov
and
add
or
call
adc
jno
in
xor
and
inc
cmpb
iret
in
stos
xchg
add
sub
or
jge
mov
dec
loopne
mov
insb
jmp
test
js
insl
add
fstl
stos
xor
mov
outsl
mov
mov
shrl
out
loopne
les
adc
aad
inc
xorb
jge
add
adc
cwtl
lahf
je
jns
loopne
add
dec
lea
pop
cmp
add
inc
push
fldl
sbbb
cmp
nop
and
in
mov
push
out
lods
mov
lahf
in
inc
repnz
cmp
punpcklbw
addl
xchg
adc
aas
mov
push
mov
or
testb
or
mov
push
pop
mov
divl
xlat
push
inc
adc
das
test
add
push
leave
pop
add
out
ror
inc
test
ret
xor
mov
pop
xchg
dec
aad
mov
sahf
pop
and
jnp
xor
add
nop
mov
sub
or
rcrl
das
test
enter
mov
leave
cmpsb
jb
andl
add
pop
int
out
pop
jge
xor
movb
inc
push
cmp
pop
add
mov
sub
rclb
jmp
xchg
pop
cmp
lods
clc
iret
dec
sbbl
ljmp
pop
std
adc
xor
addb
rorl
pop
pop
and
cmp
dec
dec
dec
cmpsb
nop
push
loopne
js
subl
push
pop
mov
not
cwtl
scas
and
orl
xrstor
push
dec
pop
cmp
sub
jl
xor
sbb
fmul
pop
or
inc
arpl
jge
xchg
mov
rorb
push
leave
imul
idiv
add
mov
push
push
inc
and
xor
dec
int3
test
sarl
add
add
jne
mov
mov
push
mov
xchg
popl
add
sti
sbb
movhps
int3
mov
mov
andb
jns
add
add
ret
negb
mov
sbb
rcl
insb
push
lcall
enter
das
add
movsb
ja
gs
dec
add
testb
jle
mov
cmpsb
in
fadd
sbb
xchg
in
jo
add
or
cmp
sbb
jae
in
push
pop
ss
or
test
clc
out
mov
add
lock
loop
push
insl
mov
add
jbe
or
adc
inc
add
jl
jnp
jae
dec
push
dec
sbbl
sub
push
add
pop
pusha
xchg
add
dec
mov
aad
in
and
mov
sbbb
divl
add
scas
push
test
jno
push
jp
add
and
pop
sub
adc
adc
sbb
fadd
pop
sub
mov
or
cmpsb
push
leave
arpl
add
adc
cmc
dec
jmp
int3
and
inc
cmpsb
fs
xchg
xchg
add
lds
push
push
mov
fiaddl
sbb
int
movsb
push
or
add
mov
push
data16
jge
sbb
pop
pop
loop
subb
and
loope
lret
mov
add
sbb
fisubrl
mov
add
repz
adc
roll
stc
test
fstl
outsl
pop
xchg
nop
pop
out
mov
outsl
insb
je
mov
xchg
out
mov
lods
fldcw
jno
add
lds
insl
cmp
test
or
sbb
push
cld
fsubl
test
or
sbb
cli
add
pop
loop
pop
mov
dec
mov
jae
inc
je,pn
sbb
pop
leave
cmp
outsl
adc
mov
mov
pop
sarb
inc
xchg
or
lahf
dec
inc
jo
add
pushf
ds
fiadds
mov
sbb
lea
in
add
pop
dec
jo
jbe
aam
fwait
pop
shrl
inc
addl
mov
lret
sub
jge
add
mov
les
xor
lahf
adc
adc
fadds
inc
shll
into
rolb
insb
sti
loopne
xchg
or
or
test
xlat
push
imul
outsb
xchg
pop
dec
fwait
mov
mov
mov
adc
adc
enter
loopne
mov
repnz
stc
jno
movsb
push
push
add
fistpl
rolb
add
aaa
imul
add
pop
sbb
jae
mov
shrl
cwtl
lahf
dec
and
dec
ficoml
rcrl
and
dec
out
cmc
jl
add
add
out
mov
imul
mov
and
shlb
jge
sub
cmp
jns
push
sbb
ja
mov
inc
cs
push
dec
push
jnp
xchg
jmp
sbb
test
shr
nop
test
cli
jb
add
xor
shll
sub
push
addb
decb
outsb
mov
mov
adc
insb
test
and
imul
jae
aas
or
add
stc
inc
dec
push
inc
enter
adc
add
clc
sub
ror
add
dec
nop
ljmp
ret
fsubl
xchg
dec
lret
add
jle
sbb
mov
cmp
xor
sarb
shrb
mov
add
pop
es
inc
ror
addb
cmp
dec
push
adc
xchg
cs
rcrl
ljmp
mov
dec
scas
int3
shlb
jbe
add
scas
adc
mov
xchg
pop
adc
sbb
ds
sub
jge
shr
arpl
inc
push
mov
cltd
orb
add
xor
aam
cld
adc
mov
mov
add
or
or
and
jb
es
scas
jo
stos
insb
psubb
or
adc
push
and
add
orl
mov
mov
cmp
cmpl
adc
jb
pop
cmc
xchg
sbb
or
call
xor
sar
dec
aas
dec
cld
pop
test
adc
ror
add
xchg
pop
sub
jp
mov
sub
aas
inc
dec
add
hlt
incb
out
push
std
lods
add
ds
adc
fisttpl
jle
adc
push
aad
adc
xchg
sbb
jecxz
lock
dec
rcrb
negl
add
testb
jae
cwtl
jo
and
pusha
addb
notb
add
sbb
jg
out
orl
mov
in
push
lds
xchg
call
lods
mov
push
sbb
loopne
scas
pusha
stos
cmp
fcoms
push
add
jle
test
xchg
rorb
fidivrl
add
int
out
mov
pop
loope
pusha
rcll
or
mov
ja
pusha
cmp
add
xchg
movsl
mov
stc
dec
mov
mov
sbb
mov
in
adcb
je
sub
adc
in
out
pop
adc
mov
and
xchg
add
push
add
lods
add
or
movsl
test
adc
sbb
jne
dec
pop
mov
add
push
cmp
xor
dec
adc
xchg
add
pop
in
mov
pop
jmp
adc
push
nop
adc
jecxz
add
jns
xor
scas
loop
ret
sbb
sti
jae
int3
push
adc
and
negb
cli
imul
inc
mov
adc
xor
shld
adc
lret
lods
jns
fldt
int3
push
popf
adc
lret
sbb
mov
cmp
xchg
popf
push
vmovaps
xchg
test
push
add
out
movb
int3
adc
jmp
shrb
mov
add
dec
fsubr
shlb
add
test
sahf
clc
pop
add
pop
inc
push
out
or
ret
xor
repz
sub
jmp
or
pop
lcall
out
dec
cltd
jne
add
mov
sub
and
ljmp
mov
aaa
xchg
cwtl
jae
xor
das
popa
addr16
jp
push
adc
and
cmp
ficomps
adc
je
cmpb
ljmp
add
push
lods
xor
inc
loope
repz
cmpsl
mov
imul
dec
jle
add
lcall
add
js
add
imul
add
sbb
add
mov
add
jmp
push
jno
cmp
movl
push
sub
add
nop
jae
push
jp
or
adc
push
imul
nop
adc
or
imul
lds
xorb
sub
mov
sbb
sahf
mov
in
adc
sub
test
cltd
inc
xor
dec
nop
test
push
mov
dec
cmp
stc
adc
lods
into
xchg
dec
add
stos
add
xor
add
mov
icebp
lds
adc
add
shll
sbb
push
jae
push
push
add
mov
xchg
xor
cmp
inc
icebp
fdivrl
lods
cmp
add
lret
inc
aad
sbb
add
adc
cmc
fiadds
loope
test
fistps
mov
pop
or
fs
inc
mov
sub
and
pop
mov
add
adc
in
add
xchg
ret
fcmovnbe
loop
xchg
lock
leave
sbb
cmc
in
add
into
aas
and
pop
cld
inc
jo
and
dec
or
xchg
push
jl
add
into
nop
loopne
push
icebp
cltd
add
fisubl
leave
add
jmp
js
or
loope
xchg
sub
test
xor
xor
mov
imul
pop
and
mov
pushf
fsubrs
mov
add
arpl
sbb
imul
lock
jmp
or
andb
mov
push
adc
ds
cmpsb
pop
shr
add
repz
add
stos
xlat
xchg
dec
fwait
add
adc
jno
dec
mov
mov
fistpll
sub
and
jmp
add
add
jne
lods
scas
adcb
sbb
mov
cs
add
jmp
lahf
add
add
pop
add
pop
xchg
pop
fwait
add
popa
xor
inc
and
jg
in
mov
push
adc
rorb
xor
fs
xor
add
xor
push
dec
cld
inc
std
sbb
and
mov
inc
pop
push
faddl
mov
cli
push
mov
adc
out
ret
add
loop
add
mov
push
mov
mov
mov
cmpl
add
jne
insl
mov
ss
add
fwait
inc
negl
xchg
sbb
imul
aam
mov
add
insl
addb
or
nop
or
or
notb
int
les
incb
or
or
add
leave
cld
push
addr16
xchg
push
addl
aad
xor
jg
or
xchg
call
jns
add
pop
stos
sub
adc
mov
and
sti
inc
or
loop
arpl
pop
xchg
bound
sbb
and
or
sbb
add
imul
add
push
fsubp
sbb
push
scas
cmp
pop
xchg
pop
cli
or
addb
mov
inc
inc
sub
fdivrs
add
sub
or
pop
pop
jp
add
or
sub
mov
loop
sbb
popf
dec
mov
movsb
pusha
adc
and
jae
add
cmp
push
nopl
stos
add
jle
add
nop
test
add
jnp
and
das
ds
or
cli
add
movsl
mov
enter
dec
inc
clc
jge
xchg
add
mov
push
and
mov
xor
rolb
push
mov
cmc
add
bswap
sbb
cmpsl
cmp
push
add
mov
xchg
lcall
pop
or
inc
xor
xor
cmpsl
add
fisttpll
xor
and
inc
lcall
push
inc
mov
or
adc
mov
jecxz
push
add
lret
cmp
clc
imul
mov
and
jg
popa
mov
addr16
cld
sub
jo
xor
repnz
push
call
add
pop
rcrb
mov
cmp
push
add
daa
push
out
mov
cmp
mov
inc
sbb
push
or
mov
loop
push
inc
adcb
icebp
xor
xlat
pop
jno
xchg
jl
sbb
jg
add
loop
rolb
xor
clc
jbe
in
movl
ds
mov
lea
loope
inc
imul
xchg
push
sub
cld
aas
shlb
mov
andl
mov
cmpsl
mov
mov
in
cmp
push
dec
into
adc
mov
adc
shlb
loope
cltd
add
sub
push
add
cmpsl
out
movsb
mov
pop
pushf
std
add
pop
negl
data16
add
imul
outsl
sub
movsl
add
push
dec
jb
ret
or
jmp
mov
and
xchg
stos
out
addl
push
bound
mov
mov
pop
into
mov
add
cmp
aad
and
mov
cltd
mov
xor
push
test
je
add
jo
shlb
test
leave
mov
movsb
sub
add
mov
mov
call
bound
or
addl
jmp
in
add
dec
lret
xlat
push
enter
orl
or
jg
and
jmp
testb
add
cs
stos
or
jl
cmp
adc
add
sbb
cmpsl
add
and
add
dec
sbb
repnz
lock
cmp
sti
or
dec
paddq
ret
mov
sti
cmpb
out
mov
jno
add
in
fs
add
xor
push
nop
in
push
add
aaa
imul
add
cmp
jne
push
idiv
xchg
xor
loopne
shll
xorl
inc
push
into
sub
icebp
cmp
lods
xchg
aas
adc
sbb
xor
xchg
add
test
hlt
add
jmp
jae
test
add
call
mulb
push
jne
push
cmpsb
hlt
push
rep
inc
or
ret
cmp
add
cs
nop
cmp
sbb
std
and
rclb
xor
push
xor
dec
lret
xchg
add
cld
mov
sarb
mov
sbb
pop
jbe
push
inc
loop
sar
mov
mov
cld
inc
sbb
push
add
mov
sbb
xchg
and
jns
mov
push
es
rol
adc
ret
jg
mov
rolb
lret
dec
outsb
or
sub
inc
daa
push
push
insb
xchg
mov
test
inc
cmpsl
and
cld
and
inc
xorb
popa
add
cmp
inc
cmp
out
xor
pusha
jbe
add
add
ret
aas
es
adc
stos
pusha
add
lds
inc
mov
and
add
push
fcomi
stos
and
outsl
lock
pop
mov
imul
icebp
cmp
push
je
jle
daa
lea
jmp
jle
add
dec
nop
leave
adc
loopne
xchg
and
add
fsub
dec
mov
inc
cwtl
insb
add
popa
imul
inc
and
jmp
inc
add
inc
adc
loopne
and
pop
cmp
cltd
and
out
scas
push
gs
sbbb
mov
add
jbe
mov
dec
f2xm1
xor
jns
data16
mov
and
mov
mov
test
xor
outsl
push
inc
mov
add
fs
scas
lds
nop
fsubrl
xchg
and
pop
loope
test
dec
loopne
es
cmp
fimuls
push
adc
lods
adc
andb
test
movsb
sub
cmp
repnz
mov
push
mov
addb
or
xor
or
inc
inc
or
ljmp
and
push
push
adc
pushf
inc
cmc
enter
cmp
sbb
loopne
test
or
xor
mov
push
dec
jg
push
cmp
push
xorps
cmp
hlt
ss
in
movsb
rorb
mov
loopne
scas
into
mov
ds
rorb
int3
mov
mov
pop
xor
popf
test
jecxz
inc
add
adc
and
add
out
lods
or
ds
push
or
pop
les
mov
jl
in
push
pushf
test
lods
in
sub
fwait
inc
int3
adc
cli
jmp
out
aas
cmp
dec
lds
cmp
sbb
dec
add
sbb
movsl
pop
mov
add
lds
rcrb
loopne
rorl
sbb
sbb
sub
gs
dec
add
loop
fstpl
xor
xchg
mov
sti
or
dec
cmpsl
sbb
add
nop
and
mov
hlt
test
inc
test
xor
je
xchg
lock
xchg
xchg
pusha
sbb
pop
mov
dec
cmp
cmp
mov
add
push
fs
cmp
or
push
add
mov
shl
sub
cmp
aas
add
icebp
add
lock
fcoml
xor
loope
arpl
les
xchg
pusha
add
add
push
imul
sti
mov
xchg
or
das
push
xchg
arpl
lret
jle
stos
loopne
dec
cwtl
lock
clc
clc
dec
shlb
add
rolb
ret
add
cmpb
pop
sub
pusha
pop
pusha
add
popf
lock
add
add
xchg
xchg
push
or
add
jae
scas
and
jl
imul
inc
sbb
nop
sbb
repz
add
cld
cmp
outsl
dec
popa
das
cwtl
push
pop
fs
jle
xor
xor
xor
cs
mov
push
cmp
or
xor
add
inc
dec
adc
outsl
int3
or
out
pop
loop
cmpsb
lock
les
push
pop
and
imul
popa
cltd
inc
aam
lret
inc
xchg
xchg
mov
int3
sbb
or
leave
adc
pop
add
jns
out
jle
out
loop
inc
mov
cmp
shrl
int3
xchg
pop
jl
loop
mov
icebp
add
mov
jmp
dec
mov
mov
movsb
push
add
sub
mov
enter
and
push
outsl
icebp
movsb
sbb
mov
rolb
push
xchg
pushf
pop
add
iret
pop
aam
rclb
std
or
adc
mov
mov
rcll
cs
cltd
inc
ret
add
xor
das
inc
stos
loopne
and
aas
jae
test
fnstcw
mov
inc
jo
lds
xor
cmpsb
jmp
sbb
mov
add
popf
shrl
jp
aaa
inc
push
lds
std
sub
adc
ljmp
xor
add
xor
mov
loopne,pt
mov
jb
or
pop
std
adcb
mov
pop
push
js
add
pop
imul
mov
mov
push
or
pop
sub
add
adc
cmp
sbb
mov
add
in
xlat
xchg
pop
fdivrs
dec
sbb
icebp
loope
mov
lds
imul
jp
mov
cld
scas
add
sub
std
mov
xor
mov
adc
cmpsl
out
addb
mov
lock
add
mov
pop
dec
cmp
xchg
sub
sbb
xor
dec
fadd
inc
mov
jp
cwtl
fisubrl
std
or
ds
dec
adc
inc
and
mov
mov
aam
movsb
mov
lea
jbe
push
sbb
jp
pusha
ret
sub
mov
push
clc
jge
mov
out
icebp
inc
push
test
add
mov
inc
adc
int3
sbb
add
out
stos
fs
sti
aaa
es
orb
sbbb
test
rolb
pop
cmc
sbb
sub
cmpsb
adc
xchg
push
adc
fadds
shrb
mov
add
imul
sub
and
sbb
add
repnz
push
mov
push
stos
ret
rorl
rcrb
add
mov
sub
ja
mov
sbb
sbb
in
shlb
dec
lock
mov
pop
nop
int
out
lret
mov
jae
xchg
add
in
lods
cwtl
pusha
test
sub
inc
les
dec
add
jle
inc
add
sbb
jg
sbb
fcomps
pop
lret
popf
dec
mov
jo
aas
push
push
push
or
loope
add
xchg
push
cmp
push
incl
sti
mov
loopne
ja
stos
add
shrb
jns
adc
cld
push
into
decb
movsb
add
mov
mov
cmp
push
loope
cmp
or
and
lds
in
push
movsl
out
add
pusha
xchg
in
dec
add
stos
rcrb
sahf
cli
fisttpll
add
test
add
push
std
movsb
push
or
pop
push
xchg
xchg
push
mov
inc
inc
mov
pushf
push
adc
sbb
mov
orl
scas
dec
sbbb
test
in
push
bound
dec
and
pop
push
mov
adc
add
fsubrs
cltd
int
pop
push
pop
inc
push
sbb
jno
add
adc
test
mov
mov
dec
rcrb
cmp
es
cmp
or
dec
out
lock
sbb
pop
ret
adc
push
or
int3
or
movaps
fmuls
stos
out
ret
fcos
mov
adc
xchg
inc
sub
dec
sub
jno
add
sbb
mov
in
clc
inc
add
sarb
aam
mov
jns
push
pop
mov
cmc
inc
sub
mov
jne
add
inc
clc
cmp
inc
adc
nop
in
inc
add
mov
xor
inc
mov
or
mov
inc
lock
push
push
repz
sbb
std
add
inc
iret
mov
mov
rorb
movsb
adc
ss
popf
adcb
jp
mov
es
mov
xor
call
inc
xchg
add
mov
pop
add
leave
cltd
and
fistpll
add
xchg
and
adc
jge
pop
add
mov
add
cmpsl
add
cld
and
addb
int
shll
sub
sub
add
call
jo
fmuls
in
imul
xchg
sbb
les
and
nop
hlt
clc
mov
int3
xchg
arpl
fucomi
pop
add
or
insl
test
test
cmp
push
cs
adc
sbb
mov
mov
dec
aaa
sub
or
and
push
inc
movsb
and
test
adc
xchg
push
mov
movsb
xor
and
xchg
add
shll
xchg
and
push
mov
cmp
fistps
sbb
cmp
or
add
imul
subl
jbe
sbb
outsl
shlb
mov
sbb
sbb
pop
pop
loope
pushf
mov
and
sub
mov
popf
dec
mov
mov
icebp
add
or
and
shlb
clc
imul
lahf
ss
mov
push
mov
xor
fs
cmp
jmp
xchg
add
mov
and
movsl
and
enter
cs
mov
pop
out
fisubl
add
loopne
add
xchg
xlat
jecxz
cli
imul
push
cmp
int3
int3
jmp
ret
sbb
inc
cld
add
sub
push
xchg
rcrl
inc
add
int
push
jecxz
mov
dec
in
and
mov
test
mov
loope
call
stos
sbb
dec
mov
pop
mov
push
iret
xorb
dec
xor
pmulhuw
inc
ljmp
push
out
adc
lock
testl
ljmp
fs
jo
sbb
add
sbbb
dec
mov
stos
add
cltd
mov
mov
jb
add
inc
lods
sbb
pusha
popa
roll
aad
mov
out
loopne
repnz
push
sahf
daa
cmpsl
in
lock
jp
lcall
pop
add
aam
xlat
mov
push
dec
or
adc
mov
mov
or
or
daa
jl,pn
or
or
add
push
cmp
jmp
inc
pop
cs
adc
insb
push
fs
leave
outsl
cmc
pop
xchg
mov
sti
xchg
mov
xor
fmuls
lods
mov
xlat
stos
jmp
loope
cs
into
add
sub
pop
jbe
fisttpll
in
add
pop
mov
push
xor
nop
or
filds
iret
repz
or
call
pop
adcb
sahf
and
lods
inc
mov
and
and
inc
xchg
or
dec
push
sub
mov
xchg
or
cs
mov
push
add
loopne,pt
adc
pavgb
cmpsl
or
popa
add
dec
or
and
jae
rolb
push
lds
add
cwtl
mov
filds
into
out
add
cmp
pop
add
fmull
pop
outsb
mov
add
data16
ret
adc
dec
scas
and
lods
or
add
movsb
cld
lds
add
mov
sbb
daa
js
nop
lods
rorb
cmpsb
stc
pop
and
lcall
das
adcl
imul
sub
add
inc
push
addr16
cmc
pop
popf
add
shll
je
js
add
sub
js
sub
cmp
add
add
add
lds
sub
inc
mulb
cmp
and
or
mov
add
push
inc
sub
cmpsb
mov
or
rol
sub
cmp
test
adc
test
mov
outsl
test
dec
push
adc
sbb
lock
inc
jbe
cltd
cmc
addl
sub
cmp
jae
adc
gs
movsb
leave
dec
nop
sbb
fs
lret
repnz
pushf
fisubrl
jns
gs
cmp
mov
ret
and
outsl
leave
push
add
hlt
pop
int
and
rcrb
push
lods
test
ret
or
push
cmpsb
lret
pop
inc
mov
add
in
rclb
add
sub
daa
inc
lahf
xchg
jl
mov
and
cmpsb
divl
jge
cld
cmp
dec
or
cs
aam
cmpsl
sub
add
mov
orb
aam
push
xchg
add
push
rorl
push
cmpsl
lock
or
cwtl
inc
movsb
pusha
inc
cmp
daa
movsl
cmp
pop
mov
filds
cld
scas
js
mov
lds
jge
xor
xchg
mov
ss
cld
mov
lods
xchg
push
sbb
xor
push
into
cmp
sub
xor
shlb
fsts
cmc
adcb
pop
out
lock
andl
add
or
mov
jbe
lock
or
cmp
repnz
leave
mov
mov
cmp
enter
adc
add
or
dec
jmp
roll
add
sub
vpminsw
push
xlat
xchg
leave
iret
mov
movsl
idivb
pop
pop
aas
js
push
jge
enter
sahf
mov
cmp
lret
mov
test
add
and
sbb
jo
or
push
sbb
aad
xchg
push
inc
mov
out
jmp
sarb
mov
ds
mov
cmpsb
scas
sub
das
out
aad
xor
mov
mov
test
lods
inc
adc
in
dec
jo
cmp
inc
add
mov
cmpsb
and
movb
inc
das
mov
dec
mov
addb
hlt
sbb
inc
mov
lahf
add
mov
push
jecxz
inc
cmp
arpl
and
aas
mov
add
inc
out
rol
xor
cltd
pushf
adc
mov
add
and
es
cmpsb
xor
and
pushf
inc
in
push
mov
mov
jo
push
fdivl
test
mov
inc
adc
sub
mov
push
mov
gs
fs
and
je
ljmp
jmp
cltd
push
sbb
test
cld
ret
pop
jo
adc
fucomp
sub
inc
add
enter
loopne
inc
outsl
push
mov
dec
lock
ret
dec
subb
lock
or
in
bound
or
and
roll
stos
sub
add
jecxz
sbb
movsb
xor
int3
nop
and
rcr
mov
daa
mov
push
out
mov
xchg
and
xchg
mov
xor
pop
add
cmc
mov
imul
or
and
test
mov
repz
push
inc
fidivrs
add
aad
pop
push
test
mov
rcrl
or
aam
in
push
push
add
pop
imul
sbb
mov
ret
andb
sti
sub
shll
call
pushf
movsl
fwait
add
pop
test
and
in
mov
inc
sub
sbb
cld
repnz
mov
loopne
jne
adc
sbb
xor
push
sarb
add
clc
inc
sbbb
test
pusha
dec
movsl
mov
sub
add
lds
push
pop
imul
pushf
inc
fs
and
mov
sarb
nop
call
cmp
pop
jb
xchg
mov
dec
pop
int3
movsb
mov
xchg
or
sub
pop
xchg
add
mov
es
adc
mov
dec
mov
jmp
movsl
sub
add
nopl
stos
add
inc
pop
daa
ljmp
and
mov
lock
repnz
movb
insb
cmp
aam
insl
aam
jo
xor
add
leave
lds
mov
fs
mov
hlt
fchs
aas
jmp
jnp,pt
lods
and
ret
push
add
addr16
add
insb
arpl
mov
push
sarl
inc
test
jb
mov
mov
cmovb
ret
imul
mov
addb
pusha
mov
adcb
or
jnp
nop
mov
jo
add
xorl
test
mov
and
ret
cld
pop
stos
in
lods
dec
add
iret
xlat
cmp
inc
push
movsb
inc
add
mov
nop
movsb
stos
or
movsb
insl
xor
xchg
cmpsl
sbb
inc
push
test
lea
sub
mov
test
mov
xchg
and
leave
inc
pop
push
jno
dec
add
sti
sbb
es
sbb
inc
cmp
mov
add
test
sbbb
xchg
int3
movsl
nop
inc
shlb
shrb
aas
mov
sub
push
mov
jae
xorl
pop
rorb
aam
popf
xchg
or
sbb
add
inc
cli
out
mov
or
bound
les
syscall
mov
daa
and
jg
push
pop
cwtl
pop
mov
lods
add
js
pop
mov
push
dec
push
or
cwtl
add
and
pop
mov
add
pop
inc
adc
orl
jae
rorb
mov
cwtl
lock
sbbb
push
xor
cwtl
adc
inc
mov
mov
sub
and
and
pushf
addr16
test
jb
push
and
orl
daa
mov
push
ljmp
ficoml
cmp
div
xchg
add
negl
push
xor
adc
ja
mov
push
sarb
jbe
mov
lret
push
adc
mov
fildl
lock
fld
jno
push
add
aas
out
add
pop
mov
mov
pop
js
and
in
mov
adc
pop
in
in
add
stc
call
pop
mov
les
mov
mov
test
lea
push
mov
xor
push
mov
lret
add
and
inc
nop
mov
pushf
in
jo
jno
xchg
pop
mov
add
inc
iret
push
dec
outsb
add
ret
loop
jp
dec
mov
sbb
rolb
stc
jns
add
aad
pushf
inc
jne
cmp
or
xchg
mov
xor
lret
xor
pusha
jo
cmp
inc
add
jo
pop
shll
or
fcmovne
addb
mov
add
pushf
int3
sbb
xchg
add
cwtl
movsl
or
or
mov
sub
jl
add
pushf
push
mov
and
nop
sub
lea
add
aam
lret
dec
inc
leave
sarl
pop
jecxz
add
sbb
add
cmp
sub
pusha
sbb
incb
lea
adc
test
push
push
and
pushf
push
aad
stos
cli
aas
lds
inc
leave
cmc
mov
sub
lods
mov
clc
shll
mov
mov
mov
mov
mov
add
cltd
mov
enter
lods
or
sbb
test
add
sbbl
mov
imul
inc
mov
test
bound
arpl
aas
adc
clc
scas
out
fcoms
test
ss
mov
adc
nop
jl
lahf
add
jle
mov
call
cltd
and
sbb
jge
jb
push
jl
dec
xor
aaa
adc
pop
sub
fsubl
xor
cmp
jle
daa
cli
adc
or
leave
mov
mov
addl
xchg
movsl
xor
pop
fidivrl
or
es
int3
sbb
add
iret
mov
adc
fidivrl
repz
jo
hlt
add
push
jl
mov
cmp
cmp
dec
daa
add
xchg
mov
jmp
xchg
sti
xchg
inc
xchg
iret
mov
out
stos
inc
ror
test
rorb
fwait
sbb
sbb
testl
cltd
or
test
sbb
mov
mov
fcos
mov
dec
lods
enter
cmpsl
fidivrl
push
and
subl
loopne
aam
das
add
out
sbb
les
push
xchg
rclb
cmp
lret
adc
or
mov
sbb
sbb
pop
or
xor
pop
std
cmpsb
or
stos
or
add
pop
cwtl
pop
int3
push
inc
mov
mov
ja
mov
mov
xor
mov
add
inc
push
add
ja
lahf
jle
je
add
fs
xorl
ss
mov
sarb
andb
lahf
add
dec
imul
pop
cmp
repz
mov
enter
push
sbb
imul
gs
and
dec
js
loop
xor
daa
add
mov
pop
or
sarb
les
or
xchg
aaa
or
add
popf
sbb
or
jp
jo
sti
xor
cmp
xchg
lds
and
mov
and
das
enter
add
fists
cmp
sub
movsb
in
ret
mov
pusha
and
add
pop
imul
hlt
lods
int3
mov
and
stc
subb
pop
and
jle
adc
data16
adc
pushf
jmp
aam
movsl
lods
aam
in
mov
pop
inc
sub
mov
pushw
mov
mov
inc
pushf
hlt
das
or
or
sbb
cmpsb
cwtl
sbb
xchg
xchg
shlb
jl
jb
hlt
daa
fld
divb
pop
pusha
int3
xor
sbb
mov
pop
lods
add
dec
cmp
add
pusha
lds
int
xor
shll
xor
shl
adc
cmpb
pop
test
and
lret
mov
enter
add
cmpsl
and
mov
pop
or
fcoms
jg
test
mov
mov
lods
add
or
pop
test
rcrb
sub
loope
push
xchg
mov
in
lret
sbb
cs
adc
sbb
sbb
push
xor
les
nop
and
test
call
sub
xor
adc
add
or
inc
add
icebp
call
movsb
push
insb
mov
cwtl
into
sub
test
out
cmp
push
call
jle
jmp
adc
je
or
arpl
pop
das
adc
inc
adc
loope
and
cmpb
imul
test
sub
iret
cmp
mov
mov
add
mov
push
in
cmp
add
fisubs
lret
xchg
dec
les
dec
push
push
cmp
push
pushf
adc
shl
dec
sbb
sbb
sbb
je
mov
hlt
ljmp
or
jns
push
add
inc
mov
mov
jb
sub
and
push
push
push
mov
mov
mov
push
cmpsl
add
jle
jns
mov
aas
shl
cli
fwait
jl
add
shrb
arpl
mov
cmp
gs
sarb
mov
rcll
test
xchg
push
repz
or
jae
xor
leave
add
outsl
and
cmp
pop
mov
adc
sub
je
mov
mov
adcb
push
push
out
add
into
mov
dec
adc
jle
stc
or
movsl
xchg
xor
add
bound
ljmp
cs
xchg
adc
push
add
sbb
sbb
aaa
in
pop
xor
adc
adc
sbb
cmp
testl
sbb
adc
cltd
dec
cli
movsb
add
idiv
push
cwtl
sti
add
in
into
jp
movsl
in
fs
data16
pop
pop
cmp
push
aad
or
or
and
cmp
outsb
push
cmp
add
adc
outsl
popf
dec
jnp
movsb
out
mov
sub
cld
into
cmp
add
cmp
pop
dec
add
jo
mov
pause
push
xchg
jb
sub
push
int
in
add
orl
popa
add
inc
jae
inc
adc
sub
inc
jl
shlb
inc
jo
lods
xlat
je
fs
adc
xchg
sbb
add
dec
jnp
sti
or
push
and
fists
add
scas
cmc
xchg
test
xchg
lock
insb
imul
adc
or
ljmp
sub
es
punpckhdq
sbb
xchg
push
js
or
dec
sbb
or
scas
adc
les
xor
and
inc
add
or
fwait
push
jg
rolb
ljmp
into
sbb
mov
sti
fs
or
sub
jne
add
mov
jno
add
cld
mov
aaa
jae
int3
aam
sub
inc
cwtl
inc
sub
pop
or
cmp
cmp
lret
or
adc
lret
cmp
andb
leave
push
sbb
cmp
add
push
push
add
mov
addb
mov
add
sub
call
and
xor
lret
subl
dec
sbbb
mov
imul
mov
popa
add
cmp
mov
popf
jo
mov
aas
loopne
dec
pop
inc
xchg
je
movsb
add
adc
hlt
into
repz
inc
cmpsl
testl
xlat
xchg
aas
mov
cmpsl
out
fdivl
andl
jns
pusha
add
fldt
dec
mov
aas
pusha
ja
inc
xor
inc
pop
shll
andl
stos
mov
cmpb
pop
int3
pushf
icebp
adc
cmp
mov
or
sarl
rol
dec
sub
push
adc
mov
loopne
bound
sub
shl
mov
mov
lods
jae
mov
imul
pop
xor
in
and
pop
pushl
sahf
lock
movsb
test
add
or
pusha
and
roll
fstp
xchg
loop
or
aas
loop
add
xchg
adc
mov
mov
gs
nop
cmp
mov
cmp
sub
in
dec
add
pop
inc
sub
add
inc
ds
push
mov
xchg
or
cmp
xchg
clc
in
inc
sbb
pop
or
cmc
cmp
xchg
cmpsb
negl
adc
sub
pop
aaa
hlt
pop
bound
mov
xchg
mov
icebp
mov
in
test
rolb
fwait
sbb
inc
stos
rolb
or
xor
adc
xor
pop
loopne
cmp
pop
and
sub
add
loop
test
lcall
jle
jo
push
test
and
insb
xchg
les
pop
add
loopne
jge
add
and
shrb
pop
xchg
dec
push
inc
movsl
pop
xchg
rolb
and
ss
xchg
add
xchg
out
or
fsubrl
jno
aas
fdiv
jo
dec
adc
pop
xchg
mov
or
sbb
cmpsl
adc
repz
push
rcrb
push
jl
or
inc
addr16
or
jo
and
nop
fs
sbb
test
test
jmp
orl
mov
add
scas
std
sbb
test
adc
int3
pop
test
inc
inc
add
ud1
popa
mov
inc
or
mov
loope
cmp
mov
fiadds
jnp
xchg
out
cmp
and
jl
inc
xor
stos
sbb
dec
push
and
cmpsb
add
roll
enter
sbb
les
mov
push
dec
test
pop
sub
or
fs
mov
in
push
or
push
jae
pusha
push
shlb
add
sbb
addl
push
fsubs
and
inc
cmp
mov
mov
and
push
inc
xchg
xchg
shrb
scas
push
sahf
scas
arpl
out
dec
andb
or
mov
pop
aam
fs
pushl
sbb
add
pop
loopne
add
sbb
fistps
outsb
orb
pusha
test
mov
jle
add
mov
sbb
pop
mov
fwait
lahf
shl
or
sub
or
test
xchg
testb
add
arpl
add
andb
add
xlat
pop
xor
test
cmp
xchg
mov
cld
sub
inc
xchg
sbb
or
or
xor
add
lods
imul
pushl
inc
les
in
cmc
pop
cmpl
test
add
bound
enter
aam
mov
adc
inc
mov
inc
pop
cld
pushf
pop
push
cmp
stc
hlt
mov
test
jecxz
movsl
add
jl
inc
adcb
add
cli
test
inc
push
fimuls
add
mov
gs
shrb
cwtl
push
and
gs
xchg
sbb
call
add
mov
sarb
adc
jbe
mov
aad
stos
jmp
and
sbb
xlat
rorb
inc
mov
enter
inc
dec
push
mov
pop
pop
and
add
adc
mov
or
or
out
adc
rcrb
dec
add
pop
push
cmp
cwtl
cmp
ja
jb
add
mov
pop
aam
cmpsl
jp
pushf
pushf
inc
mov
or
cmp
adc
and
pusha
mov
fistpl
fsubrs
arpl
and
xor
iret
ds
sbb
push
jno
push
xchg
test
loope
imul
addb
inc
fldenv
hlt
mov
stos
pop
mov
fimull
clc
mov
arpl
test
adc
inc
fs
mov
xchg
push
cmp
in
sbb
push
lahf
int3
add
nop
sub
pand
xchg
sti
dec
nop
and
push
xorl
ja
int
push
xor
inc
add
xchg
jb
rcr
lret
jo
fmuls
fdivrl
mov
or
scas
jne
lea
mov
call
jge
fistpll
imul
sub
das
mov
pusha
repz
jl
sbb
mov
dec
cmpsl
or
push
sbb
test
and
inc
xor
test
pop
rcl
pushf
push
and
and
sbb
lock
pop
add
daa
pop
mov
jp
icebp
cmp
and
xor
xchg
lods
inc
or
jmp
and
ds
daa
js
sahf
mov
mov
loopne
dec
jb
mov
hlt
sbb
cwtl
fs
adc
mov
mov
imul
ds
aas
dec
pusha
adc
mov
ds
xchg
dec
subb
cltd
xor
cs
pop
lods
faddl
ret
add
lret
loopne,pt
mov
mov
and
push
mov
or
pop
xchg
adc
xor
jns
push
nop
pop
in
cmpl
xchg
das
sbb
xchg
shlb
xchg
lret
dec
or
xchg
sahf
add
xlat
inc
cld
lock
jmp
dec
sti
sub
call
mov
and
mov
sbb
add
xor
xorb
push
xchg
outsw
imul
inc
xchg
shlb
lret
add
and
cs
rclb
mov
popf
pop
cmpsl
or
into
incb
and
nop
mov
test
and
or
pop
popf
add
data16
mov
sub
add
ljmp
repz
add
dec
sbb
inc
or
shlb
lret
xorb
add
imul
or
loope
xchg
movntq
add
jl
sar
jb
push
cmp
movsb
mov
add
sub
jno
cltd
cld
and
add
and
lock
push
iret
adc
cs
sub
loopne
sub
movsl
add
pop
movsb
push
sbb
mov
xchg
add
stc
iret
sbb
dec
inc
rorb
sub
xchg
cld
call
pop
mov
jns
leave
sbb
push
cmp
sub
cmp
lods
adc
insb
sub
cs
cmpsb
bound
mov
jae
subl
movsb
int
dec
dec
or
pause
push
repnz
mov
fcoms
cmovl
shll
jo
ds
mov
or
pop
mov
cli
cmp
adc
add
mov
data16
jo
adc
mov
les
adc
or
mov
daa
repnz
cld
xchg
mov
jl
pusha
or
dec
sbb
push
cltd
xchg
into
inc
fadd
int3
mov
add
bound
fdivrl
pop
aam
jmp
ret
inc
je
or
in
add
jle
hlt
test
jae
mov
cmp
into
sub
clc
je
pop
or
pop
pop
inc
lods
dec
mov
adc
sub
inc
dec
jge
pop
or
or
push
shrb
ret
mov
fadds
jge
outsb
xor
add
test
cmp
mov
sti
ss
add
jae
push
out
movsb
or
jg
xor
in
sbb
inc
not
or
mov
push
dec
nop
mov
add
test
adc
js
inc
call
or
aas
inc
mov
and
sarb
cmpsb
jo
jg
add
xor
mov
mov
xchg
icebp
iret
add
and
adcl
mov
fisttps
cld
imul
pusha
sub
jle,pn
call
shl
add
test
xchg
psrld
jbe
cmp
inc
sbb
push
mov
lods
faddl
or
xchg
mov
mov
out
inc
sbb
sbb
movsl
add
cwtl
sbb
clc
sbb
cmp
lcall
cmp
decb
loop
and
pop
adcl
and
sbb
and
jp
push
jns
cwtl
inc
das
inc
sub
loopne
dec
mov
or
popf
out
mov
add
pop
cmc
fidivrl
mov
inc
lahf
xor
xor
cmpb
mov
mov
repz
stos
jmp
cmpsl
fbld
test
gs
and
sarl
or
ds
orb
sbb
sbb
mov
dec
in
and
mov
push
pop
add
lret
pusha
les
rcll
dec
shlb
add
inc
jb
xchg
test
outsb
and
jno
arpl
lods
shl
sahf
pop
xchg
jecxz
movsl
jl
sub
jb
xor
add
insl
push
xor
cmp
xchg
mov
add
xor
loopne
sub
call
xor
jg
jo
dec
sub
mov
test
xchg
fbld
and
add
lea
sbb
sarl
sbb
rcll
mov
sub
xor
dec
mov
push
add
add
pop
sbb
sub
push
les
cmp
mov
lcall
pusha
sbb
adc
pusha
cmp
and
pop
in
jbe
mov
inc
xchg
jge
xor
mov
mov
inc
add
mov
inc
in
ret
jns
sub
add
inc
fdiv
cmp
jb
arpl
mov
pop
mov
mov
addl
sbb
jb
lock
add
in
fisttpll
mov
movl
xor
cmp
xor
push
and
mov
sub
jo
add
fsubr
sbb
jp
mov
dec
jl
pop
out
cmp
lahf
loop
scas
sub
in
in
mov
and
nop
dec
jnp
add
jg
jmp
imul
int
cmpl
ret
push
movsb
fdiv
jns
ds
hlt
adc
add
mov
out
jge
or
bound
rolb
inc
inc
inc
jno
adc
sbb
jge
xorb
cmp
arpl
and
cli
inc
push
loop
jle
or
dec
call
inc
sub
mov
icebp
dec
mov
sbb
push
ljmp
push
call
mov
fisubrs
or
xorb
push
sbb
and
movsb
lds
xor
outsb
nop
test
mov
andl
dec
rolb
inc
jne
inc
add
jge
add
gs
mov
lds
fwait
scas
mov
or
nop
or
jmp
push
xor
aas
loope
add
mov
nop
call
adcb
daa
mov
or
xor
or
xor
sub
mov
push
mov
inc
add
cs
jecxz
out
and
pop
ds
add
add
sbb
cwtl
sbbb
repz
cmp
inc
adc
imul
clc
mov
js
mov
mov
push
cmpl
dec
add
shrb
sbb
mov
adc
inc
sbb
mov
test
xchg
pusha
cli
push
xor
mov
sbb
call
std
xor
cmc
mov
add
hlt
sbb
cmp
sub
adc
mov
jge
mov
push
lahf
popa
js
jno
cmp
js
fdivs
mov
les
xor
mov
aam
daa
sub
mov
stos
pop
push
sub
push
shlb
in
sbb
enter
sbb
pop
movsb
movl
or
and
mov
or
xor
or
sub
bnd
sbb
xlat
out
push
cmp
lock
mov
fs
js
add
insb
ficompl
cmpl
add
iret
add
stos
jge
fsubrl
clc
jbe
repnz
inc
cltd
add
call
adc
sbb
data16
add
adc
out
pop
subl
mov
adc
call
xor
or
jp
stos
add
ds
cmp
mov
leave
cmp
pusha
mov
imul
or
xor
or
sbb
add
push
mov
mov
addr16
fistpl
sbb
aad
sub
das
cltd
xor
andl
loopne
fstps
pop
push
pusha
test
rcl
push
popa
shlb
out
mov
aas
sarb
jbe
icebp
int3
rcr
add
gs
and
testb
add
popa
insb
add
push
adc
add
in
js
shll
sub
cli
inc
add
push
sahf
inc
test
dec
add
sbb
or
dec
pushf
jmp
fldl
mov
xchg
popa
ficompl
xchg
shrl
pop
add
xchg
adc
xor
sbb
pop
getsec
adc
or
fistl
addb
sbb
xchg
imul
pusha
mov
inc
xor
mov
jns
insl
push
xchg
addr16
lret
add
test
fwait
insl
add
ja
arpl
xor
pop
dec
pop
cltd
mov
pop
leave
add
daa
adcl
ljmp
sbb
loop
dec
sbb
and
test
out
jo
in
pop
mov
nop
mov
xchg
dec
add
outsb
xor
shlb
lods
loope
xor
jne
or
xlat
mov
repz
pop
dec
cmp
adc
push
cmp
lret
cmp
pop
into
addl
add
xchg
pop
sub
dec
fdiv
dec
sub
sub
test
mov
shll
add
add
xchg
movl
pop
xchg
jmp
adc
movsb
pop
call
mov
aam
stc
das
rorb
emms
insl
push
sbb
push
sub
jne
push
cmp
xchg
mov
aas
cmp
dec
add
ret
and
filds
or
dec
fnstsw
lahf
bswap
pop
ljmp
insl
add
imul
jo
pop
lret
stos
add
xor
ud1
add
dec
out
test
add
stos
shl
jns
mov
adc
mov
add
push
popf
inc
push
ja
mov
push
push
xchg
jo
push
add
mov
mov
sbb
jmp
popa
out
inc
mov
imul
pop
xchg
mov
divl
xchg
out
inc
add
in
mov
adcb
mov
mov
sub
and
add
int3
jae
test
mov
and
jo
aam
add
pop
fldl
mov
sub
jae
add
inc
cmp
int3
add
push
vaddsd
pusha
ror
or
xchg
imul
add
sbb
pop
test
add
popf
mov
sbb
aam
and
dec
mov
repnz
jge
mov
int
xchg
add
cmpl
add
inc
subb
stc
es
mov
iret
sbbl
push
lock
jmp
pop
mov
cwtl
loop
mov
lea
xchg
clc
leave
sbb
dec
sahf
dec
add
hlt
insl
add
stos
jl
sub
cwtl
faddl
je
pop
fisubrl
mov
add
dec
les
xchg
stos
push
sub
mov
fxch
dec
add
addr16
xchg
mov
push
adc
inc
int
inc
xor
fistpll
fsubl
inc
add
pop
stc
add
add
xchg
inc
cmpl
cwtl
enter
pop
outsb
rclb
jle
and
add
pop
in
mov
out
mov
inc
es
add
in
pop
mov
in
stos
fisttpll
pop
icebp
shll
pusha
mov
push
adc
xchg
or
add
jo
shld
jecxz
fbld
push
sbb
mov
xlat
jmp
or
and
movb
jg
aas
add
int
xor
fdivrl
hlt
xchg
mov
js
daa
dec
in
das
pop
xchg
cld
cmpsl
mov
and
add
push
test
sbb
mov
stc
lods
scas
scas
add
xchg
push
data16
cmp
movsb
adc
jb
sbb
pusha
pushf
pop
dec
add
pop
push
in
add
scas
pop
lahf
or
xor
sub
addb
push
pusha
ljmp
mov
jne
pushf
add
xchg
pop
sub
lock
cmp
push
repz
pop
mov
sbb
daa
clc
add
cmpsl
push
popf
inc
pop
inc
stc
lods
sub
ret
xchg
repz
aaa
loope
aas
mov
dec
stos
add
push
pushf
sbb
xchg
jb
jns
add
dec
dec
lcall
xchg
jl
addb
loope
jp
stos
dec
add
jecxz
subb
mov
mov
add
and
jl
sbb
adc
xchg
jb
add
push
test
mov
pinsrw
add
in
out
int
js
jbe
add
sbbb
jp
add
xlat
fwait
es
xor
pushf
shlb
jl
sbb
and
aad
or
xor
sub
and
add
xchg
add
sub
sub
mov
jmp
or
imul
or
add
dec
ret
insb
dec
leave
sti
or
and
or
push
mov
jl
je,pn
cli
jae
xor
imul
sar
adc
scas
xchg
sbb
add
jnp
cmpsb
cmp
mov
jne
jo
scas
add
xchg
shlb
dec
cmc
test
add
mov
add
add
add
call
xchg
loop
xor
pop
xchg
mov
cwtl
add
pusha
sub
sbb
sub
jo
pop
mov
push
shlb
mov
ss
push
adc
data16
inc
or
pop
mov
sbb
in
mov
scas
sahf
mov
jo
push
mov
cmp
imul
pop
sbb
fsubs
stos
adcl
jo
cmc
mov
push
test
or
pop
add
dec
jp
push
cs
call
jae
lds
aam
jnp
add
or
in
add
sbb
push
clc
xor
cmp
sti
xchg
pop
xor
ja
xlat
sarl
jo
nop
cmp
daa
add
or
popa
push
mulb
cltd
mov
pop
std
in
adc
loopne
sbb
movsb
mov
or
add
jle
clc
pop
test
pop
and
inc
sahf
sbb
lock
sbb
inc
into
rorl
dec
frstpm(287
xchg
cwtl
test
stc
mov
adcl
xor
out
mov
daa
mov
arpl
mov
stos
shlb
xlat
mov
sbb
out
push
adc
jl
les
pop
pop
je
popa
xchg
inc
loopne
test
jle
jns
sbb
rolb
cmpsb
lods
jne
mov
or
pop
es
jns
pop
rcll
std
mov
push
fucomip
out
in
mov
dec
adc
inc
loopne
cmp
jne
xchg
and
jae
test
add
jno
push
mov
dec
xabort
add
insb
stos
mov
add
push
mov
outsl
add
push
mov
pop
add
dec
sub
add
sbb
pop
lcall
lret
repz
and
stos
add
sbbb
fdiv
loop
xchg
and
out
inc
mov
ds
and
roll
mov
aas
lods
iret
dec
push
pop
shlb
inc
nopl
dec
or
mov
xchg
dec
mov
dec
inc
cmp
mov
adcb
ret
jmp
testl
int3
out
orl
fwait
and
cmc
rcrl
cs
js
sub
aam
call
bound
push
push
lock
xor
roll
add
sbb
movsb
add
call
push
pop
mov
in
jo
jp
sbbl
fldt
push
orb
cmp
cwtl
mov
popf
jae
or
pop
add
pop
je
mov
add
aas
add
mov
xor
mov
in
xchg
push
adcl
sbb
mov
xor
test
shlb
pop
inc
sti
add
dec
cmp
add
pcmpgtw
mov
add
js
adc
out
adc
pop
push
xchg
ret
add
cmp
cmovl
call
pop
je
filds
nop
or
mov
out
push
lahf
dec
add
or
or
xchg
jl
rolb
test
inc
out
fadds
repnz
inc
or
add
aad
in
jge
jle
xchg
add
push
in
js
mov
pop
mov
cmp
add
add
ret
rorb
inc
jle
mov
mov
js
xor
fists
or
jns
je
dec
in
subb
jo
lahf
push
aaa
push
test
pop
add
xchg
mov
jge
xchg
loope
xor
jl
adcl
adcb
sbb
into
mov
loope
cld
add
insb
add
push
fbld
xor
dec
push
push
dec
outsb
add
jo
adcl
xchg
rorl
imulb
add
mov
pusha
adc
hlt
xchg
aas
aad
jns
inc
mov
add
dec
adc
push
sbb
insb
push
cmp
iret
ljmp
or
push
and
sbb
pop
cmp
add
jns
and
adc
test
jmp
shrl
andb
mov
or
inc
mov
in
fisubs
test
aaa
cmp
push
daa
sub
shll
pop
fsin
and
ret
mov
pop
enter
shl
rcll
inc
loope
fwait
pop
in
fsub
add
int3
andl
dec
sbb
push
cs
push
xchg
add
dec
mov
push
sbb
xchg
cmp
push
xchg
adc
push
out
dec
aaa
sub
lea
outsb
mov
hlt
cmpb
je
and
add
mov
mov
push
daa
pop
sub
push
leave
es
jae
add
imul
rcl
testb
push
add
popa
in
movl
add
mov
xor
negb
fldl
insl
add
or
mov
xchg
wbinvd
add
xchg
ja
xchg
nop
popf
mov
mov
std
add
push
cli
push
sub
add
enter
andb
fadd
or
and
mov
add
add
jmp
shrb
nop
repnz
cmp
jae
test
xchg
add
sub
xlat
movsl
xchg
or
jno
push
iret
or
das
fiadds
and
popf
dec
mov
mov
icebp
insl
cmp
add
imul
jnp
and
faddl
in
pop
lret
test
xor
jb
daa
das
xlat
cli
pop
shrb
inc
pushl
cmp
mov
aad
cmp
test
jp
add
push
loopne
cmp
sahf
and
pop
push
imul
jecxz
aam
stos
lret
add
cltd
mov
cwtl
sbb
pop
add
sbb
add
or
lock
call
daa
add
cld
push
mov
and
adc
adc
xor
mov
lea
jb
xor
test
and
gs
or
adcb
out
lcall
jo
repnz
adc
jecxz
out
outsl
into
pop
int
iret
push
push
add
adc
jg
xchg
movsl
rolb
mov
mov
push
jb
cmp
movb
rol
add
jbe
push
add
sar
add
xor
xlat
pop
push
es
add
cmp
push
add
push
imul
pop
pushf
imul
push
dec
add
pop
add
mov
push
js
add
dec
lock
loopne
add
cmp
adc
aaa
add
mov
add
repnz
pop
cwtl
mulb
movsl
add
jbe
mov
sbb
insb
and
mov
pop
outsb
inc
add
iret
xor
xor
add
shrb
pop
mov
jge
cmpsb
mov
hlt
sbb
insl
icebp
inc
and
clc
mov
imul
dec
out
cld
shlb
add
mov
shl
cltd
nop
clc
repnz
sbb
stc
and
out
jg
sbb
test
lods
loopne
jmp
roll
sub
test
movl
stos
add
adc
jmp
add
jmp
or
ficoml
and
loopne
and
loope
popf
mov
imulb
mov
pop
cmp
aas
mov
ds
sbb
addl
sbb
ja
iret
pop
loop
imul
add
add
les
add
dec
add
sbb
loop
sub
push
or
xor
mov
mov
lock
dec
loop
add
sti
xchg
inc
dec
jno
add
pop
seta
mov
imul
cmp
jnp
add
push
mov
rorb
add
push
inc
mov
loopne
inc
mov
sbb
lods
pusha
popa
or
lock
push
popf
jne
les
and
in
ja
pop
cmp
add
adc
mov
add
jbe
in
dec
add
js
xchg
jge
mov
loope
mov
jno
push
push
xchg
addb
push
daa
pop
out
sahf
jle
cwtl
int3
btcl
inc
xor
ds
sub
sbb
fwait
cmc
jb
into
add
in
jne
shll
mov
jnp
push
les
fiadds
mov
push
mov
clc
mov
ja
or
inc
jle
adc
push
cmp
int
test
jge
and
sub
inc
fadds
cmp
mov
inc
sub
lret
mov
mov
stc
popa
and
lock
das
iret
nop
test
movsl
mov
push
mov
or
mov
adcb
sub
mov
ret
add
cmp
pop
stos
sarl
mov
xchg
push
mov
dec
std
inc
cli
addb
xlat
fisubl
and
push
in
test
dec
dec
add
mov
mov
leave
mov
mov
les
js
add
popa
cmc
pop
dec
or
or
mov
xor
inc
inc
inc
push
cwtl
js
lret
mov
les
daa
outsb
fistps
xor
mov
dec
adc
sub
and
icebp
cltd
das
lahf
test
divb
add
jg
enter
mov
leave
clc
jb
jo
jl
and
push
cmp
adc
add
in
xchg
dec
aaa
fprem
push
jg
cmc
lcall
xchg
rolb
mov
jae
in
aam
push
or
cltd
add
cli
lods
mov
pop
iret
int3
pushf
cwtl
sbb
add
nop
ja
incb
push
outsl
cmpsl
add
xor
dec
add
sbb
add
add
pop
subl
inc
jae
pop
rcl
in
out
jp
lods
inc
push
ret
sbb
stos
xchg
add
or
fistl
imul
jge
mov
lods
loop
int
ljmp
cmpsb
mov
shrb
inc
add
cmp
add
lock
pop
add
mov
outsb
pop
add
adc
pushf
add
jg
fstpl
repz
outsb
mov
out
or
pop
pop
popf
es
add
push
inc
or
adc
add
das
xchg
add
ret
cmp
lods
sahf
jp
shlb
lahf
push
out
stc
mov
mov
or
ret
add
mov
jns
cmpsb
pop
or
shrb
xchg
bound
rclb
add
mov
xchg
test
out
or
or
decb
add
sahf
push
imul
add
addr16
les
stos
push
dec
in
pop
sbb
push
pop
nop
adc
jp
adc
pop
test
add
add
push
inc
mov
mov
jne
add
addr16
je
sub
aas
xchg
sarb
jne
loop
add
mov
dec
push
pop
in
iret
add
push
push
adc
stos
push
add
aas
js
inc
inc
imul
cmpsb
add
sahf
mov
xchg
pop
movlps
ret
and
pusha
cwtl
or
push
cmp
sub
add
add
js
inc
shrl
aaa
cmp
outsl
addb
sahf
pusha
jl
cmpl
jo
loopne
mov
sbb
shrl
xor
jns
in
mov
mov
rclb
int3
jno
scas
add
xchg
xorl
add
int
add
imul
nop
inc
out
xchg
or
pushf
push
aas
int3
rcrb
jo
add
js
xchg
pop
or
dec
imul
xor
adc
push
pusha
lds
sahf
lods
arpl
gs
inc
dec
or
stos
xlat
and
aaa
xchg
xorb
cmp
dec
pop
pop
sbb
rolb
ds
das
add
or
clc
add
pusha
xchg
repnz
xlat
add
mov
xor
add
in
outsl
mov
fadd
pop
pop
int
inc
orb
aam
sbbb
sub
js
add
mov
cmp
dec
inc
mov
shl
fcoml
xor
dec
jno
leave
lds
test
rcrb
aas
inc
rclb
cli
inc
add
rorl
sub
clc
jns
stc
jl
sbbl
cwtl
cmp
outsb
sti
sbb
repz
stc
fdiv
jo
pop
dec
jle
pop
push
inc
ffreep
jae
add
inc
and
imul
int
pushf
loopne
and
jbe
mov
sbb
fnstsw
add
dec
or
dec
and
ja
push
sbbl
scas
ljmp
sbb
cld
and
out
jl
mov
jmp
clc
les
aam
xchg
outsl
and
dec
add
jae
xchg
sti
int
add
mov
out
jl
das
data16
add
sub
ds
andb
ljmp
pop
inc
and
add
cmp
je
jg
loopne
aaa
loope
and
inc
notl
rcl
cli
pop
nop
add
dec
xchg
dec
imul
pop
push
movsl
jo
pusha
es
clc
jecxz
movsl
lock
and
jge
pusha
fsubrl
add
cmc
push
pushf
sbb
dec
mov
pop
jge
test
or
cltd
mov
lahf
inc
push
dec
imul
or
jb
sub
scas
call
inc
adc
cmp
call
cmp
add
push
inc
es
fsubr
mov
lods
in
jp
test
pop
pusha
jb
or
adc
xor
and
and
and
add
mov
mov
mov
add
dec
jbe
jg
movsl
mov
imul
stos
loop
fildl
not
pop
movsb
mov
xlat
sahf
subb
popf
adc
add
mov
stc
mull
or
add
andl
inc
add
inc
mov
mov
adc
jmp
adc
mov
sbb
or
add
xor
shr
and
int
mov
andl
insb
push
jns
jns
add
cmp
lock
sahf
add
adcb
inc
sbb
add
pop
cs
shl
lock
xchg
arpl
sub
add
adc
addr16
mov
outsb
test
in
test
jle
xchg
inc
sbbb
mov
je
rcl
test
hlt
add
outsb
push
sahf
fists
loope
iret
push
add
adc
dec
orb
push
popf
loop
add
cmp
pop
mov
jno
jmp
add
add
xlat
jne
xchg
add
fimull
outsl
pop
xor
outsb
xchg
push
pop
and
aam
in
mov
outsb
es
shl
or
push
sub
test
rorb
cmpsb
inc
adc
test
fldt
cmpsl
and
cmp
push
mov
mov
inc
lahf
stc
test
cmp
stos
adc
cli
adc
ja
test
push
test
add
mov
pop
ja
or
in
leave
mov
ss
and
add
aad
jns
sub
pop
ja
roll
aad
fisttpl
shlb
nop
dec
add
push
jl
adc
pop
xor
add
xlat
jo
cmp
add
inc
pop
stc
jl
js
add
and
add
sbb
fildl
push
adcb
loope
ljmp
push
cmp
nop
or
push
ss
mov
mov
adc
in
push
and
enter
add
ret
std
cmp
pusha
sbb
pop
test
shll
jne
enter
pop
mov
mov
mov
add
repz
add
aaa
cmpsl
lock
ljmp
shll
es
mov
imul
out
add
loop
add
loopne
pushf
cmp
imull
cmp
push
add
orl
push
pop
into
or
xor
scas
cmpsb
pop
and
add
mov
cwtl
adc
add
adc
fisttpl
insl
outsb
js
jns
push
decb
push
cmp
iret
imul
cltd
das
into
stc
cmpsl
inc
inc
sub
shlb
daa
test
add
jne
lahf
jg
or
or
add
insb
sahf
cmp
push
add
loope
outsl
and
push
test
mov
adc
mov
pop
movsb
orl
out
dec
icebp
cmpsb
add
scas
sub
xchg
pop
xor
loopne
aas
cld
test
push
cmpsb
ffreep
cmpsl
push
mov
xchg
sub
shlb
imul
jo
rol
inc
pop
jne
add
pop
sbb
add
add
stc
rolb
or
xor
leave
push
add
mov
xorb
neg
adc
sarl
cld
push
out
xor
or
add
xchg
in
testb
cmp
je
sbb
xor
add
cmp
pop
jo
jp
leave
xor
push
out
gs
cmpsb
pusha
mov
imul
dec
xchg
pop
sbb
mov
mov
xor
push
jne
lods
test
loop
fcmove
add
call
mov
mov
or
jle
add
call
add
dec
mov
mov
mov
testl
cmc
push
fstpl
lret
mov
jge
add
repz
aam
add
and
add
sub
add
xor
shr
scas
dec
cmp
int3
into
int3
cli
cmpsl
adc
jne
aam
xchg
jg
aas
cmp
mov
cld
add
pop
push
scas
and
pop
cmp
mov
xor
xchg
movsl
sub
mulb
inc
stos
sub
ret
test
out
push
cltd
in
add
pop
push
sbb
xchg
adcb
add
pop
faddl
enter
jge
pop
pop
fcmovnu
into
or
fadds
lods
mov
adc
jno
cwtl
cmp
adc
mov
cld
imul
fsts
adc
inc
mov
mov
jge
orl
sahf
mov
add
xchg
pop
testl
mov
sub
cmc
push
sahf
sbb
sbb
loop
jne
clc
cld
add
jmp
mov
cmc
cli
mov
loope
mov
adc
jp
add
sub
movsb
pop
fwait
dec
scas
add
loope
mov
add
pop
push
shrb
dec
mov
add
adc
pusha
nop
cmp
fldt
jo
es
add
and
shl
add
cmp
aam
fimuls
rorb
push
add
shrl
pop
aad
repz
insl
mov
add
out
setb
add
jg
pusha
imul
xchg
pop
ret
pop
add
adc
addl
repz
mov
mov
imull
xor
cs
mov
dec
clc
pop
jg
jl
xchg
sub
xor
inc
mov
rorl
add
in
test
jb
add
push
daa
xor
hlt
xchg
call
aaa
sti
sbb
push
xchg
add
int
inc
mov
cmp
dec
pop
pop
andb
pusha
dec
cmp
add
inc
dec
frstor
inc
and
mov
add
xchg
rcrl
or
add
mov
jo
cmpsl
stc
addr16
and
lea
xchg
and
push
sbb
icebp
inc
fld
addb
bound
push
cmp
out
dec
pop
cmp
inc
ffree
jbe
add
pop
enter
and
xchg
add
icebp
into
push
xor
mov
outsl
scas
mov
nop
mov
xor
xchg
push
test
mov
test
inc
add
cli
or
imul
xchg
push
aam
lock
in
cmc
pop
cmp
clc
jne
fstpl
test
sub
cmp
add
xchg
nop
cmp
adc
repz
pop
cltd
or
stc
push
inc
add
add
call
icebp
mov
bound
add
pop
fiaddl
mov
call
cmp
mov
mov
or
les
jle,pt
sbb
cmp
incl
xchg
lods
jb
enter
jne
add
sbb
push
aas
into
add
es
lods
ljmp
add
sub
rolb
movsb
mov
xchg
xor
scas
call
out
outsb
add
xchg
lcall
jg
testb
inc
stos
insb
call
dec
outsl
popf
andb
stos
mov
in
and
mov
pusha
inc
ds
or
push
add
arpl
adc
mov
add
xlat
imul
pop
mov
loopne
cmp
xor
mov
pop
add
popa
cli
out
jo
scas
pop
or
sub
inc
std
jp
jbe
sbb
cmp
push
out
mov
jge
cmp
rorb
xchg
jb
pop
cmovbe
stos
or
cltd
cmpsb
subb
push
push
cmp
jnp
aam
dec
xor
dec
adc
cmp
fidivrs
jno
adc
repz
add
adc
jl
aas
push
clc
mov
cltd
orb
enter
add
push
mov
and
mov
repz
add
repnz
test
mov
push
dec
jo
push
add
and
testl
sbb
jp
pop
fsubrs
pop
cmp
inc
fcoml
xchg
imul
test
inc
pop
loop
mov
hlt
das
stos
mov
push
mov
roll
and
gs
les
mov
dec
jae
les
ds
push
inc
popf
cltd
pop
or
ljmp
sbb
mov
loope
insl
scas
adc
push
pop
jae
adc
and
jno
outsb
rcr
inc
add
sub
add
sbb
lods
and
dec
daa
lea
loopne
and
pop
and
inc
and
cmpsb
mov
jp
add
jge
add
add
addr16
rcr
inc
scas
add
outsb
jae
sbb
arpl
mov
je
push
mov
pop
push
add
mov
es
testb
inc
ret
mov
ret
push
mov
add
cmp
mov
or
and
call
aam
test
sbb
fdiv
mov
mov
lahf
lcall
sub
sbb
add
mov
jmp
jbe
cmpsl
test
pop
int
nop
or
add
rorb
mov
gs
add
sub
sbb
daa
push
and
stos
pop
jg
jge
mov
mov
loop
cwtl
jnp
sbb
sti
xor
sub
add
push
jmp
fadds
jle
jb
sub
addb
cmp
jno
pop
pop
sub
push
xchg
jge
cwtl
inc
int3
sbbl
jno
push
mov
outsl
and
int
cmp
in
sbb
aas
inc
cmp
adc
inc
call
add
les
mov
popf
dec
sbb
repnz
jne
pop
pop
xor
out
outsb
popl
incb
cmp
sbb
stos
sar
lcall
test
add
pop
shlb
in
subb
or
ret
jmp
stc
adc
jecxz
sbb
cs
add
ficomps
cwtl
dec
push
adc
adc
lock
addb
sarb
adc
jp
jae
cmp
outsb
or
repz
jnp
test
inc
mov
adc
inc
sahf
repz
pop
jb
add
sbb
leave
into
dec
cwtl
loopne
enter
adc
sbb
jno
sbb
and
rcrl
mov
lods
or
jns
sbbb
test
pop
xlat
sub
add
mov
aad
dec
inc
push
sub
test
push
std
pop
add
ljmp
jno
pop
or
adc
jns
gs
mov
add
xor
pop
and
sbb
sub
cs
add
psubq
mov
imul
movnti
cmp
mov
add
jno
cmp
aam
push
gs
push
lret
add
insb
add
sbb
mov
verr
clc
and
or
pop
push
pop
or
and
sbb
sti
add
faddl
rorb
movsb
popa
test
pop
in
loopne
push
add
mov
cmpsl
pop
rcll
and
into
fiaddl
jle
scas
out
add
aam
lock
xor
loop
xchg
lods
gs
sbb
add
fnstsw
stc
repnz
jns
jo
lds
cmpsb
push
insl
fwait
outsb
fildl
ret
call
sbb
out
push
add
xlat
movsl
xchg
pop
test
pop
dec
cmpsb
call
add
fdivl
xchg
or
mov
into
add
out
or
lcall
dec
jecxz
and
cmp
movsl
es
xor
push
cmp
cmp
xchg
in
call
add
add
push
stos
cmp
jae
fmul
pop
add
or
cmp
dec
in
mov
cs
pop
movsl
sbb
or
xor
fnstenv
ds
lea
add
pushl
inc
test
pop
rcl
jb
add
gs
add
movsl
lods
into
cs
and
mov
sub
loope
fcmovb
mov
add
fidivrl
sahf
pop
cs
xor
fistl
push
in
push
loopne
aaa
lret
jecxz
xchg
add
or
roll
mov
mov
cvttps2pi
jge
mov
inc
mov
je
popa
jne
adc
jle
push
test
push
sar
inc
pop
cmc
jp
cmp
pop
add
and
jbe
xor
aad
add
rcrl
cmp
add
mull
in
add
dec
lahf
es
and
or
loop
in
adc
mov
mov
dec
lods
add
in
sbb
insb
loop
push
jl
mov
sbb
inc
cmp
ds
cmp
fdivrs
pop
aam
lret
sbb
cmp
pop
pop
int
scas
xchg
int3
imul
cmp
in
mov
fs
adc
mov
jp
sbb
les
add
add
arpl
jge
pop
subb
fmul
fildl
or
cwtl
nop
inc
outsl
or
js
pop
sbb
insb
ret
test
aas
cmp
jmp
inc
dec
cmp
dec
add
mov
jns
add
xchg
hlt
push
dec
xchg
fadds
xor
lcall
xchg
jge
push
push
into
movsb
je
lret
les
ret
out
mov
loope
cmp
int
push
jg
dec
je
add
pusha
insb
movsb
shlb
adc
fdivrl
jbe
adc
outsl
sbbb
cmpsl
lcall
mov
mov
inc
sbb
or
daa
cmp
cmpsl
ret
push
push
popf
xor
cmp
cli
adc
or
add
daa
cmpl
rcr
test
and
fmull
add
add
fsubs
add
lret
ficoms
push
fiaddl
int
ljmp
sbb
loop
mov
sub
pusha
ret
pop
inc
cmpsb
push
scas
inc
inc
inc
daa
nop
pop
shrb
in
ret
mov
sahf
lock
inc
pop
xor
mov
ljmp
add
mov
cmc
add
cmp
mov
xchg
lock
add
mov
rorl
ret
mov
mov
or
add
add
inc
and
jg
xchg
dec
test
xchg
and
push
mov
in
popa
jp
hlt
push
jle
roll
pop
data16
mov
aad
add
dec
aas
fsubr
sbb
adcb
sub
dec
ret
mov
into
daa
pop
add
add
rorb
scas
add
ss
xchg
inc
stos
sbb
mov
add
pop
add
sub
or
test
jns
sbb
les
mov
xor
xor
shrl
popl
mov
mov
cmp
test
mov
imul
scas
or
mov
xchg
cmp
add
fwait
imul
jge
add
cmpsl
filds
xchg
pop
cmp
xchg
dec
das
stos
mov
in
adc
mov
lret
in
fucom
sub
jne
dec
push
add
inc
lahf
repnz
xorl
adc
add
ja
rcrb
in
inc
push
ljmp
push
popl
mov
sub
add
pushf
xor
cmp
addb
push
jne
sub
inc
add
pop
rol
mov
sbb
cmc
cmp
push
mov
add
mov
jo
mov
push
add
in
pusha
jl
xchg
cmc
arpl
xchg
xlat
mov
push
mov
bndstx
je
sahf
pop
cmp
xchg
inc
xchg
mov
shlb
loopne
fbld
aad
add
mov
loop
sbb
jp
add
lock
add
lds
mov
daa
xchg
push
jne
jmp
nop
add
insb
pushf
and
jmp
jnp
cmp
jg
pop
push
div
add
jle
call
mov
in
loope
pop
arpl
push
mov
push
stc
pop
cmp
or
xor
jne
sub
adc
xchg
add
testl
loopne
test
mov
jecxz
jae
pop
out
ror
scas
adc
test
add
fbstp
sub
cmpsl
sbb
dec
add
icebp
add
mov
xor
rolb
ljmp
jmp
stc
add
repz
cmc
xor
add
cmp
sbb
outsl
nop
in
xchg
mov
pushf
mov
mov
add
jecxz
test
sub
fdivs
mov
push
lcall
sub
or
jmp
push
insb
pop
inc
testl
stc
stos
cmp
jne
sbb
add
rcrb
add
in
dec
mov
jle
cmp
out
outsb
add
cmp
hlt
push
icebp
jns
push
stos
test
add
xchg
add
lcall
test
or
inc
repnz
push
test
in
sbb
fildll
sarb
scas
push
sub
add
mov
inc
adc
insb
push
int3
sbb
out
adc
and
sbb
call
inc
sbb
popa
add
add
jbe
sahf
push
dec
mov
fs
add
push
and
pushf
jle
or
das
mov
mov
sbb
mov
xchg
sub
dec
mov
add
movsb
bound
pop
cwtl
adc
stos
mov
adc
mov
inc
lret
repnz
js
sbb
stos
add
jbe
adc
jb
xchg
add
incl
jle
push
loope
jmp
iret
rol
cmpsl
mov
or
jle
stc
hlt
inc
push
push
fcoms
lahf
cld
mov
out
repz
push
sub
idivl
int
add
cmp
mov
ds
mov
adc
das
cld
mov
push
loope
mov
iret
es
add
pop
fisubrs
xchg
pcmpgtb
or
shrb
inc
inc
cmp
das
xchg
ja
mov
push
add
out
outsl
and
cmp
add
popf
fdecstp
jg
push
push
dec
inc
aas
aas
rol
and
sbb
aas
std
dec
sbb
shlb
adc
sub
arpl
xchg
pusha
inc
add
and
add
mov
push
pop
mov
fstl
adc
pop
and
pop
cltd
cmp
xchg
punpckhdq
and
sbb
mov
test
add
sti
mov
xor
sub
mov
inc
lods
mov
and
loopne
popa
int
nop
push
jbe
sbb
int3
or
push
pop
push
xor
shl
jnp
add
push
iret
jo
insb
cltd
or
inc
loope
inc
scas
out
and
cmp
les
xchg
insb
xchg
mov
jnp
mov
xor
insl
adc
pusha
ret
and
outsl
inc
sbb
pop
xchg
adcl
xchg
jl
or
movups
out
in
cwtl
jnp
adc
test
add
sbbb
mov
add
add
fucompp
fldl
jl
xor
add
and
pop
jns
add
inc
aas
call
nop
adc
push
jmp
adc
adc
and
cmp
inc
call
inc
add
jne
aad
movsl
add
cmpsl
fsubs
adc
or
out
cmp
mov
in
cld
add
push
mov
roll
cs
xorb
add
jge
pop
add
adc
popl
lock
sbb
add
push
ljmp
xor
xlat
sti
mov
rcll
cmp
jmp
pop
in
loop
add
jo
movsb
push
pusha
pop
xor
cltd
dec
push
pop
mov
add
xchg
fnsave
mov
jnp
fiadds
xchg
adcl
ltr
hlt
test
cmp
lea
or
xor
jb
cld
orl
push
jae
add
cmp
lcall
push
arpl
pop
or
xchg
add
and
pop
int
or
dec
dec
dec
push
jns
pop
xchg
mov
add
fldenv
dec
jbe
ss
call
dec
mov
shr
add
mov
jl
pop
add
lods
push
lret
push
fs
in
mov
add
cli
ja
xchg
pop
or
fistpl
aaa
xchg
add
pop
mov
cmp
jmp
mov
jnp
negl
add
inc
sbb
and
add
cmp
xor
and
mov
fwait
mov
add
mov
or
inc
dec
adc
add
jecxz
mov
push
rolb
cld
pop
or
mov
add
mov
xor
jo
hlt
sbb
cmp
movsl
ret
xchg
push
daa
add
loop
jge
icebp
inc
pop
sbb
push
je
loope
mov
xor
cmpb
add
movsl
imulb
push
mov
out
add
or
push
xchg
loopne
ret
mov
imull
pop
dec
add
icebp
outsb
aam
pop
add
and
push
and
test
in
pop
sub
jae
add
dec
cmc
ret
xchg
loop
pop
adc
sub
adcl
pop
pop
sarb
int3
sbb
pop
stos
cltd
add
add
cmpsl
adc
sarb
add
aas
sub
stc
dec
mov
add
sbb
add
push
clc
mov
out
popf
sub
lahf
mov
mov
repz
jecxz
outsl
andb
loope
fwait
pop
cmp
inc
pusha
int3
mov
add
lahf
rolb
or
add
popa
mov
or
es
and
call
scas
mov
mov
add
repz
mov
xlat
in
add
aaa
cltd
mov
es
xchg
adc
or
xor
push
addr16
or
cmp
xchg
cmp
and
add
push
ss
inc
into
or
xchg
ja
idivb
add
ud2
push
mov
ja
ja
add
aas
enter
cmp
xchg
pusha
mov
repnz
pop
sahf
mov
loopne
xor
lcall
inc
mov
test
in
mov
stos
adc
sahf
mov
xchg
sarb
movsl
fdivr
or
sub
add
jae
mov
fchs
ror
scas
add
xchg
and
fadds
pop
sbb
push
xlat
xor
or
cwtl
mov
daa
xor
cmp
pop
sub
dec
jae
xor
inc
std
xchg
mov
jge
push
add
popf
cwtl
push
out
add
cmpsb
fwait
adcl
mov
jns
sbb
js
add
or
out
add
pop
movsb
and
sub
dec
add
pushf
add
inc
or
dec
cmp
adc
pop
cmpb
popf
adc
int3
or
add
dec
sbb
add
sti
dec
or
pop
or
cmp
xor
mov
and
pop
insl
add
divb
mov
inc
arpl
clc
sbb
add
ret
mov
mov
mov
div
sbb
add
sub
js
lock
dec
fildl
cwtl
jmp
mov
xchg
add
sub
push
add
out
outsl
fcmovne
ja
adc
aam
lret
cmpsb
adc
dec
lds
outsl
mov
push
add
and
and
scas
add
negb
push
xchg
sbb
add
daa
mov
clc
testb
ror
inc
cld
sub
mov
ret
inc
push
xor
xchg
aad
aas
sbb
int3
push
lods
jbe
add
push
or
lods
dec
and
inc
jge
cmp
add
clc
rol
mov
and
out
sub
adc
fwait
icebp
scas
add
and
out
add
arpl
ljmp
cmpb
mov
jp
out
jns
add
int3
xor
add
rolb
add
in
inc
in
sbb
fisttps
rcll
fidivrl
xchg
push
xchg
icebp
mov
jmp
push
ljmp
clc
pop
sub
mov
sahf
adc
mov
out
ret
and
xchg
cwtl
add
jmp
push
add
jno
shlb
aaa
in
push
aad
mov
mov
dec
call
jns
mov
faddl
out
mov
std
add
inc
pop
in
mov
orl
xor
add
mov
push
push
dec
mov
jne
add
adc
lret
addl
or
add
stc
aad
mov
andl
testl
movsl
add
pushf
jg
add
add
mov
lods
add
adc
pmaddwd
sbb
loopne
scas
or
mov
and
mov
imul
bound
ljmp
adc
jle
add
sbb
idivb
jae
cld
sbb
adc
or
add
jb
dec
out
pop
testl
in
test
pop
ret
jne
andl
bound
add
fldt
jo
jno
xchg
xor
jmp
and
test
add
mov
cmpsb
adc
pop
add
push
pop
inc
add
xlat
movl
daa
sub
imul
sub
mov
and
enter
loopne
aam
xchg
je
pop
adc
add
lods
adc
loopne
pusha
in
aaa
xor
push
arpl
adc
mov
sub
xchg
fs
jge
xor
add
out
or
outsl
push
adc
inc
adc
inc
push
sub
mov
enter
int3
imul
add
cmp
add
pop
inc
sbb
ffree
sbb
outsb
push
andb
mov
inc
lods
movsl
loope
xor
jecxz
aaa
add
or
inc
stos
adc
adc
push
lds
out
js
nop
fdivr
and
sub
imul
mov
add
inc
jnp
push
nop
cmp
push
and
mov
fisubrl
popf
add
mov
rol
or
add
add
mov
xor
xchg
les
aad
nop
inc
mov
push
shrb
push
nop
add
pushf
leave
or
cld
popf
sar
xchg
add
out
lret
dec
push
push
sahf
xor
add
mov
cmp
jo
add
out
add
xchg
adc
jle
mov
leave
fildl
adcl
in
fs
jno
add
mov
movsb
iret
shrb
scas
fwait
xor
sahf
sub
cmp
rorb
pop
lcall
mov
aam
mov
jg
or
add
stos
pop
add
pop
xor
adc
mov
add
mov
push
shl
int3
jnp
add
pop
je
sbb
jb
lret
enter
xchg
jmp
and
dec
pop
mov
or
push
mull
cmp
test
or
out
outsb
imul
inc
push
mov
add
and
addb
pop
xchg
inc
les
and
push
dec
lock
jmp
nop
add
sbb
push
xchg
dec
inc
lock
or
clc
xchg
stc
aas
es
add
sub
pop
std
push
seta
cmpl
call
xor
mov
add
in
sarb
adc
mov
pop
in
adcb
adc
aad
pusha
movsb
mov
mov
in
or
sub
sbb
inc
adc
lock
add
cltd
nop
pop
bound
add
lds
stc
ljmp
pop
call
cs
lcall
push
push
call
pop
cmp
nop
add
jge
or
push
sub
xchg
add
cmp
scas
add
dec
stos
das
shrb
cmc
in
or
pop
imul
add
mov
lods
sbb
loopne
push
ret
lcall
sub
test
aad
sub
xchg
push
subl
push
cmp
pop
mov
inc
xchg
add
dec
fucom
out
sahf
xchg
clc
adc
mov
push
inc
je
stc
add
sub
pop
out
push
push
jl
fnstsw
xchg
into
out
push
addb
pusha
xchg
pop
sahf
imul
incl
push
jae
mov
push
enter
pusha
pop
or
hlt
movsl
mov
add
mov
shr
or
nop
mov
mov
and
sbb
pusha
movsb
push
adcb
xchg
add
fcoml
in
fiadds
push
test
add
lcall
js
add
xchg
loop
in
mov
jmp
push
pop
jae
leave
xchg
mov
loop
add
addr16
xor
and
dec
or
ret
mov
dec
mov
xor
jmp
imul
push
mov
dec
popf
sub
test
jne
jmp
imul
cmp
movsl
and
inc
and
and
or
in
std
mov
imulb
test
mov
add
mov
js
mov
fs
shlb
stc
cmp
stos
mov
adc
sbb
es
aas
mov
xor
sbb
pop
jecxz
mov
sub
jmp
push
add
loopne
fwait
sub
outsl
push
addb
shld
lret
xlat
add
clc
mov
pop
xchg
jmp
pop
xchg
lods
jecxz
sarl
mov
push
xchg
es
idivl
add
icebp
adc
out
fsts
and
mov
inc
gs
pop
adcb
insl
push
pop
xor
pop
pusha
cmp
pop
and
cwtl
add
cli
cmp
in
aam
mov
add
fiaddl
add
shl
add
jne
clc
cmp
push
sbb
jbe
fwait
sbb
add
ljmp
push
add
loop
incb
call
mov
lods
cmc
loopne
sahf
js
cmp
mov
pusha
ss
insb
sbb
inc
cmp
jns
push
aaa
jecxz
addl
outsl
sub
adc
lods
dec
sti
imul
lods
out
xorb
jb
push
add
xor
add
testl
dec
sub
mov
lret
or
pop
lods
jbe
pop
insl
xchg
sbb
adc
arpl
addb
scas
inc
inc
push
xor
repz
add
inc
js
mov
pop
pop
cmpsl
jns
orb
or
adc
shll
jb
mov
cld
jb
fimull
add
jecxz
leave
inc
xchg
jmp
xchg
lock
lsl
aam
bound
mov
add
lret
test
mov
data16
lods
adc
scas
add
dec
ds
add
out
mov
das
and
add
mov
mov
add
stos
inc
add
sbb
pop
xor
add
mov
jle
call
mov
or
lds
dec
push
add
lret
xchg
pop
in
jae
lret
popf
mov
in
loop
or
loope
aad
gs
ret
sbb
shl
jns
sarb
push
add
aad
sbb
mov
shll
fnstenv
dec
push
mov
hlt
inc
or
push
mov
lahf
sub
loopne
ret
add
mov
js
jnp
add
mov
into
jp
inc
jge
in
add
xor
sbb
mov
or
push
in
jmp
in
lds
sbb
cmc
or
addb
add
sub
xchg
loop
pop
in
icebp
jno
lcall
add
xchg
push
aam
call
sbb
xor
push
adc
imul
iret
add
mov
out
add
andl
sti
or
inc
add
loop
sbb
movsb
jne
cmp
add
sahf
jg
pop
or
add
pop
mov
add
aam
push
orb
sbb
push
add
rclb
mov
leave
mov
lods
fsubs
fisubrs
test
shll
push
push
aam
push
call
stos
enter
jmp
add
incb
add
adc
xor
push
and
popa
mov
mov
inc
jmp
int3
adc
scas
add
inc
add
push
mov
dec
jge
push
push
daa
sub
and
sahf
cwtl
add
outsl
int3
pop
add
or
out
push
mov
stos
pop
mov
and
mov
sahf
lods
xchg
add
sbb
les
xchg
int
inc
and
mov
pusha
sub
dec
es
sahf
add
xchg
and
dec
and
inc
stc
push
cmp
mov
fsubs
jae
std
pop
or
addr16
sbbb
dec
adc
cmp
or
mov
int
add
xor
movsl
jno
rclb
mov
add
aas
pop
popf
sbb
jns
xor
lock
or
sub
add
adc
xor
clc
add
jns
jae
push
loop
add
jmp
test
jge
jg
pop
repz
loope
xlat
pop
and
out
and
in
andb
dec
xchg
icebp
add
jg
movsl
add
and
add
test
sub
rcrl
or
jo
mov
mov
dec
cmpl
jmp
xor
scas
cmpsb
subb
push
cmovne
add
ret
outsb
pop
mov
daa
fstl
push
in
adc
push
mov
insl
sbb
xor
sub
pop
mov
adc
mov
arpl
pusha
push
cmp
mov
jge
nop
pushf
add
imul
sub
loopne
shlb
mov
leave
push
inc
xchg
fcomi
xchg
cs
test
xlat
test
push
push
loope
das
lcall
xor
xchg
push
sub
stos
imul
jmp
sub
flds
push
loop
pushf
daa
push
notb
mov
les
cmp
push
and
pop
jno
and
add
push
add
add
arpl
dec
in
lret
jno
addb
xor
add
aam
mov
movsb
sahf
cmp
lods
add
insb
mov
pushf
enter
aaa
addr16
jmp
mov
push
sbb
in
xchg
xchg
xchg
lock
jmp
ljmp
sti
lret
cmp
add
fstl
shl
aad
mov
fisttps
push
push
movsl
xchg
sbb
mov
xorps
cmp
out
loop
daa
sub
xor
lds
xor
in
ss
int3
fstps
mov
pop
sub
or
lods
addl
in
imul
test
fwait
inc
nop
lea
lods
mov
cltd
adc
pop
add
das
outsl
inc
add
cmpsl
push
jge
jno
add
mov
int
cld
dec
add
aad
pusha
mov
dec
push
inc
sbb
xchg
cmp
pop
jle
add
loop
int
dec
xchg
add
pop
sub
stos
jbe
and
jl
call
jo
push
add
dec
push
add
loope
pop
adc
lcall
mov
scas
sbb
mov
push
jmp
add
fwait
jecxz
cmp
push
movntps
leave
scas
and
dec
in
imul
int3
sbbb
enter
or
sbb
adcb
inc
mov
add
inc
cltd
push
insl
in
sbb
add
mov
jg
lcall
scas
cmp
in
pusha
push
mov
add
lahf
push
cmp
mov
sub
adc
ret
pop
lds
xchg
outsl
insb
clc
mov
dec
jl
xchg
stos
lcall
dec
xchg
pusha
pop
das
popf
int3
repnz
or
jo
dec
mov
ja
mov
xor
push
xor
push
add
loop
fcoml
sub
add
pushf
js
lods
jnp
cld
je
lcall
adc
or
add
push
in
out
cltd
jae
lahf
push
mov
insl
ficompl
add
aas
mov
push
mov
jae
lahf
pop
add
imul
xor
mov
xchg
or
subl
add
jne
rcll
mov
pop
pop
pop
cmpsl
mov
outsl
out
clc
push
pop
lcall
faddl
out
xchg
lea
aas
repnz
add
rcrb
ds
push
popf
sbbb
xchg
mov
lahf
add
fiadds
xchg
sti
sbb
ret
add
cmp
popa
fnstcw
add
add
aaa
lock
or
push
je
push
sbb
out
cld
or
add
cmpsb
sahf
imul
loop
pop
imul
fbstp
clc
add
cs
cwtl
ds
xchg
xor
jo
mov
imul
cmpb
cmpsl
sbb
popa
add
jg
in
xor
in
nop
mov
sbbl
inc
jbe
mov
and
push
mov
dec
sub
str
mov
push
pop
mov
notl
dec
add
dec
xchg
movsl
add
push
jg
ret
loopne
push
cmp
add
repz
enter
orb
lds
ror
jae
pushf
scas
add
push
cmp
sub
add
pop
daa
in
dec
push
pop
xor
cwtl
jg
push
pushf
pop
pop
add
aaa
jbe
and
notb
into
jecxz
mov
adc
cmp
dec
in
add
pop
cmpsl
adc
jns
adc
mov
into
popf
add
mov
pusha
rorl
cltd
add
sub
push
std
jne
mov
pusha
add
mov
dec
push
dec
pusha
fwait
push
xor
mov
mov
insb
cmpl
mov
movsb
rclb
out
addl
xchg
lock
cmp
push
fbld
pop
fildl
jae
pusha
popa
test
add
dec
sub
mov
xchg
pop
out
dec
fsts
xor
scas
mov
push
loope
fwait
xchg
adc
mov
daa
inc
pop
loopne
mov
add
xchg
sti
lds
sub
test
call
add
xor
enter
adc
insb
int3
dec
hlt
loope
push
fs
std
pushf
jns
dec
push
daa
rcrb
aad
int
in
cmovp
je
cmpsb
sbb
pop
adc
popl
cmc
shl
popf
and
dec
add
mov
or
add
inc
jae
in
stc
add
pop
cmp
sbb
test
hlt
sub
push
sbb
push
sub
mov
out
sbb
incb
mov
inc
sub
add
sahf
leave
xor
mov
test
nop
inc
jne
cmp
es
mov
pop
inc
pslld
push
mov
nop
xor
stc
xchg
pusha
jne
cs
lds
jmp
int3
ret
loopne
ljmp
jp
and
xorb
fwait
cwtl
cmp
nop
nop
cmc
mov
add
pop
incl
ror
in
jb
rolb
add
push
icebp
imul
sar
mov
ja
dec
cmp
xchg
inc
decb
pop
cmp
dec
add
nop
xlat
pop
daa
mov
jge
lods
sub
subb
cmp
call
jb
out
mov
or
mov
fbld
shlb
gs
cmpsl
jbe
rcl
jnp
out
rcll
sub
mov
fstps
fdivr
mov
out
jb
xor
lock
and
call
sub
mov
hlt
and
cmpsl
movsb
nop
mov
add
mov
or
mov
rol
adcb
frstor
cwtl
int3
sbb
add
xchg
pusha
sarb
add
pop
leave
lock
add
pushf
loope
ljmp
cwtl
fbstp
pop
dec
add
iret
lea
mov
js
push
call
fcomps
in
andb
sbb
push
cmp
add
pusha
xor
sub
cld
outsl
scas
add
xor
add
and
insl
dec
cli
imul
add
add
inc
xor
mov
daa
push
aas
sbb
inc
pop
jb
xchg
ret
sahf
add
shrb
enter
mov
mov
fnsave
das
pusha
and
cs
loopne
cld
lahf
in
lcall
mov
pop
xor
clc
loopne
jge
pop
fmull
inc
pusha
mov
lock
mov
inc
push
stc
or
add
fwait
xchg
test
pop
jg
inc
sti
mov
mov
push
shlb
mov
ljmp
or
xor
pusha
mov
pop
add
and
add
pop
and
iret
pop
loope
mov
fiadds
adc
mov
loope
jne
mov
mov
shlb
add
jp
fldl
jl
add
add
rcrl
cmp
rolb
inc
lret
inc
cld
pushf
js
mov
push
inc
add
fs
xchg
std
xchg
stos
lret
add
mov
pop
add
jecxz
add
adc
or
int
xchg
push
out
enter
sbb
sbb
and
jecxz
mov
jno
sub
test
xor
lret
sbb
mov
inc
add
std
aam
push
shr
add
cmp
add
mov
push
movd
and
sub
pop
hlt
lret
xor
rcrb
clc
mov
or
lret
cltd
add
add
or
out
add
cmpsl
add
mov
mov
aas
addl
xor
iret
out
pop
call
add
out
xchg
in
inc
call
jmp
add
mov
int
js
hlt
pop
xor
lahf
xor
mov
imul
cmp
addr16
shrb
mov
in
fmuls
and
loope
mov
lods
cwtl
sarl
sarb
call
cltd
jne
xchg
add
popf
fidivl
mov
out
add
out
jge
stc
dec
minps
add
notl
lds
popa
sub
loopne
stos
lods
sub
call
loopew
enter
or
cmp
sbb
or
into
js
adc
mov
icebp
out
add
mov
repz
orb
xchg
lods
enter
lock
call
jmp
jne
add
lods
rcl
add
scas
cmp
dec
pop
inc
and
addr16
inc
mov
or
inc
add
addb
lock
jge
mov
ljmp
fisubl
lods
lock
cmp
fmuls
adc
or
filds
ficoml
pop
aad
inc
lret
push
ss
les
inc
inc
insb
xor
jns
add
mov
insl
add
test
or
xchg
add
and
push
and
xor
xor
call
das
sahf
sub
addb
iret
inc
std
cmp
cmp
test
lahf
imull
js
mov
push
fwait
adc
sub
outsl
push
pop
scas
loopne
test
mov
cmp
add
fsubr
xor
popa
mov
adc
add
mov
and
mov
fisubs
sub
add
das
pop
iret
mov
adc
hlt
lock
cmovns
xor
addl
xor
mov
cmpl
jb
ret
hlt
movl
dec
and
inc
and
or
mov
loope
inc
add
jge
es
repz
push
push
dec
push
fst
imulb
add
jmp
sub
or
xchg
stc
xor
scas
or
je
inc
add
les
xlat
add
int
test
add
loopne
add
pushw
hlt
imul
rorl
das
mov
jl
pop
lcall
jge
xchg
inc
fcmovne
mov
shll
addr16
and
inc
cld
fists
add
repnz
jne
scas
sub
js
push
test
sahf
sub
and
pushf
and
ljmp
cld
sub
xor
and
ret
mov
sbb
ljmp
subb
inc
lahf
jo
mov
dec
dec
clc
jmp
popf
or
mov
mov
imul
adc
inc
cli
xor
sbb
aam
and
fcmovnb
add
out
movsb
out
pop
cmp
sahf
js
add
push
push
out
iret
add
shll
xchg
add
stos
les
mov
arpl
js
mov
sub
pop
pop
testl
mov
or
mov
or
push
xchg
add
sbbl
out
ds
mov
test
in
lahf
adc
xor
lods
add
push
je
stos
cmp
add
sub
pop
imul
jp
icebp
aad
sbbb
xchg
daa
pop
xor
mov
jo
jnp
and
outsb
mov
out
or
xchg
mov
clc
push
fimull
leave
cs
push
push
add
hlt
mov
push
sub
jl
pop
mov
mov
sbbb
popa
enter
ds
pop
push
or
mov
mov
mov
cmp
inc
sarb
outsb
aaa
roll
cmp
inc
mov
fnstcw
mov
sub
dec
adc
xor
stc
fidivs
stos
or
stc
cwtl
inc
cmpsb
repz
lock
add
add
rclb
push
mov
and
push
jno
cmp
xor
mov
push
adc
int3
pop
add
lret
inc
in
jbe
into
rclb
repz
and
jb
add
cmc
or
pop
jge
add
test
js
push
sbb
insb
sub
aad
adc
addb
push
mov
int
or
ret
or
mov
sub
movsl
mov
mov
add
inc
addr16
mov
adc
pop
add
out
movb
xlat
mov
lret
ret
mov
pop
push
add
cmpsb
mov
cmpb
icebp
stos
dec
dec
push
push
add
sti
pop
leave
lock
adc
add
pusha
insb
pop
jnp
ja
pop
lods
adc
mov
gs
xchg
cltd
aam
lret
push
dec
mov
add
movsl
jns
sbb
jo
mov
mov
add
xchg
xchg
popa
sar
fdivrl
and
lret
mov
add
rcll
and
add
sbb
ljmp
aad
sarl
in
sbb
mov
and
int3
mull
sub
or
into
pop
dec
adc
xchg
dec
add
loop
sbb
inc
push
daa
mov
push
cmp
add
dec
fstps
xchg
jp
dec
fucomp
add
pop
dec
xchg
mov
add
adc
ja
arpl
loope
cmp
cli
inc
adc
add
mov
add
hlt
lahf
loop
mov
subl
fldt
bound
push
mov
stc
jl
jp
add
les
inc
loopne
mov
pop
push
subl
sub
loope
pop
xor
icebp
or
jp
add
in
leave
stos
mov
dec
adc
add
adc
add
test
es
js
sub
dec
and
push
cmc
cmp
fldt
loope
jno
push
xor
ja
push
cmpsb
in
jne
or
push
lret
dec
scas
pop
sbb
outsl
mov
xchg
sub
cwtl
rolb
mov
mov
sbb
sub
jnp
and
test
in
hlt
cmp
cmp
jns
sub
sbb
jge
lock
jne
popa
ror
xor
add
iret
mov
out
addl
test
fnsetpm(287
lods
jecxz
stc
and
mov
in
xchg
mov
pop
mov
pop
dec
sahf
adc
lods
add
inc
repz
mov
sub
test
lcall
sbb
mov
subb
enter
sub
pop
xor
dec
cmp
jno
jp
mov
aas
push
xor
mov
xchg
lret
mov
loopne
test
ss
mov
int
or
pushf
shrb
dec
mov
or
xchg
aaa
cwtl
int3
dec
add
fmull
jo
xor
sub
add
call
in
fidivl
and
pop
loopne
lock
xor
scas
sbbb
push
mov
adc
popa
arpl
mov
add
loope
sbb
rorb
ja
imul
nop
dec
lcall
sbb
sub
fwait
icebp
add
enter
outsb
orb
push
pushf
push
test
iret
in
test
sahf
dec
cs
pushf
subb
mov
adc
imul
stos
inc
dec
jnp
imul
test
mov
sub
cwtl
sbb
call
dec
xor
stos
inc
and
pop
push
stos
mov
cmpsl
sbb
loope
andb
jl
add
or
aaa
push
pop
clc
pop
add
hlt
mov
cmpsl
insb
movl
call
iret
rcrb
nop
mov
das
movntps
jne
adc
loopne
jnp
xadd
push
shrb
adc
sbb
add
test
rorl
in
add
jge
jb
push
lods
mov
pop
mov
xor
jge
cld
imul
out
stos
cmc
sub
mov
enter
cwtl
inc
insl
and
mov
fidivrs
ret
mov
or
push
mov
push
add
or
dec
mov
cmp
pop
dec
add
call
dec
inc
gs
xchg
testb
flds
arpl
add
imul
jae
arpl
push
addl
and
pop
pop
sbb
mov
sbb
pop
rorb
adc
addr16
movsb
push
pushf
fsubr
mov
rclb
adc
popa
inc
sarl
ss
mov
jmp
loope
sub
adc
testb
cmp
dec
push
outsb
rolb
cmp
imul
mov
sarl
shrd
shlb
push
setle
lods
mov
adc
inc
lret
addr16
push
cmp
je
ss
dec
mov
testb
bound
mov
pop
test
xlat
dec
sbbb
push
add
popa
cmpsl
xorb
add
sub
clc
test
add
leave
lcall
ret
popl
sub
es
lcall
cmp
loope
xorl
imul
bound
out
mov
mov
and
movsl
add
lret
add
aaa
enter
rclb
ret
lds
xor
inc
cmp
lret
movsb
mov
cmpsl
cmp
pop
in
xchg
ljmp
dec
jae
cmp
loop
add
adc
inc
ss
rcl
jo
adc
mov
js
in
dec
repnz
push
int3
dec
lret
mov
popf
push
add
jecxz
mov
add
jl
mov
or
inc
les
nop
mov
xor
adc
test
xor
rcl
fcmovbe
hlt
xchg
push
test
or
rcr
pop
mov
push
push
add
add
popa
fstpt
adc
js
xor
les
mov
rcrl
cmpb
imul
jl
xor
mov
sub
adc
xchg
test
roll
mov
cld
and
push
mov
nop
sub
test
fs
testl
mov
and
cmpsl
push
or
fmul
cmp
sub
sbb
gs
sbb
lret
int
add
mov
or
xor
mov
sbb
cmp
sbb
add
std
fisttpll
cs
enter
fstpt
in
mov
repnz
fs
ficompl
jo
nop
mov
js
pop
adc
inc
vpsrld
cs
mov
std
sahf
adc
mov
push
xlat
bound
test
lock
pop
cwtl
popa
cmp
icebp
mov
mov
and
outsl
arpl
lcall
cmpsb
mov
nop
mov
dec
loop,pn
dec
add
mov
out
scas
sbb
pop
add
add
push
jecxz
pop
xchg
dec
repnz
mov
dec
pop
xor
std
xchg
mov
and
sub
popf
mov
inc
orb
mov
loope
loop,pn
test
test
and
add
add
pusha
insl
fsubp
mov
sbb
adc
call
push
rorb
cmp
leave
jns
andb
outsb
sbb
cmp
subl
jle
lods
and
adc
xor
enter
call
aad
mov
pop
add
mov
inc
mov
loopne
sbb
add
clc
push
dec
enter
pop
int3
dec
movb
xchg
insl
std
add
cmp
add
scas
mov
dec
cmp
rorb
cld
aam
outsl
jno
fisubs
stc
xchg
xchg
pusha
add
fidivrs
nop
inc
aad
sahf
jno
ljmp
xchg
addb
or
mov
adc
adc
and
xor
fcomps
inc
jno
or
pop
jmp
xchg
sahf
cwtl
or
sbb
jbe
dec
sub
ljmp
dec
or
adc
or
les
shl
pusha
add
cs
sub
add
mov
push
xchg
cwtl
in
int3
insb
in
loop
add
int
fidivl
call
mov
xor
loop
in
pop
mov
mov
cmpl
mov
enter
mov
xchg
or
sti
icebp
xor
int
daa
jecxz
sub
aam
cmp
adc
pop
rolb
gs
dec
subb
cwtl
adc
sub
push
clc
and
or
pop
add
mov
pop
addr16
mov
inc
sahf
fsub
xchg
or
jo
adc
out
xchg
loope
pushf
inc
sub
inc
sbb
inc
push
icebp
cwtl
in
test
mov
cmp
dec
add
push
inc
test
and
es
inc
xchg
enter
stos
cmp
mov
ret
xchg
data16
out
fstl
xor
xlat
adc
push
inc
add
adc
add
shr
push
test
xchg
add
pushf
adc
sub
outsb
sub
std
es
movsl
jge
cmp
ror
push
loop
add
in
sbb
les
sub
ss
jg
enter
movsb
adc
out
add
sti
xor
loope
lods
cld
xor
loopne
xchg
sub
out
push
mov
adc
mov
push
xor
in
add
mov
add
add
dec
mov
cmp
popa
fnstcw
mov
aaa
cmc
sahf
aas
cmp
adc
ja
arpl
jle
add
test
das
add
mov
arpl
pusha
outsb
add
inc
xor
add
jo
or
inc
sub
clc
aam
add
or
loopne
mulb
das
inc
rol
and
dec
xor
jp
outsl
es
add
and
mov
sub
fwait
add
imul
je
insb
repnz
add
repnz
add
ss
add
jns
mov
add
and
pop
int
sub
sub
fisubrs
lcall
sub
cmp
mov
scas
add
ss
imul
xor
xor
inc
sub
xchg
lcall
push
sub
xchg
aaa
sub
push
mov
cld
cmpsl
cwtl
enter
mov
divl
inc
pop
add
in
pop
out
mov
adc
js
pop
popa
jl
jne
add
enter
rolb
inc
add
jbe
repz
pop
cmp
iret
sarb
aam
sbb
cmp
mov
test
stc
add
mov
repnz
add
mov
loopne
xchg
add
or
inc
movsl
add
xor
into
or
inc
movsb
mov
fldl
inc
pop
jo
stos
inc
pop
call
adc
add
in
in
pop
cmp
movsb
mov
dec
mov
scas
jge
add
cmp
std
stos
xor
jecxz
push
pop
mov
rorl
inc
mov
aad
mov
loop
lods
add
sahf
mov
je
mov
aaa
jo
inc
test
ret
inc
mov
xchg
pop
sbb
js
push
jne
adc
sbb
adc
cltd
add
adc
mov
add
and
add
leave
out
xor
adc
push
add
leave
fxtract
ret
cmc
popa
xchg
push
filds
cmp
mov
cmp
add
fwait
push
insb
adc
xor
vmwrite
mov
das
xchg
mov
mov
aas
mov
or
cmp
movups
lea
jg
xchg
adc
stc
mull
ret
dec
int
sub
cs
pop
mov
lock
sub
jl
or
sub
mov
mov
push
sahf
dec
mov
loopne
add
push
jl
stos
rcr
adc
adc
pop
arpl
ret
loope
stc
call
sbb
sub
jnp
add
sahf
mov
xchg
jne
adc
outsb
mov
xlat
jmp
adcb
popl
cmp
pop
stos
ret
test
in
loope
jbe
je
inc
jle
test
adc
inc
dec
mov
pusha
std
pop
pop
xor
fimuls
mov
inc
add
leave
test
mov
and
pop
add
push
shr
push
jno
push
lds
ljmp
out
add
pop
jl
and
das
enter
jo
jae
movsb
push
add
add
jmp
add
dec
pop
in
call
sbb
aas
outsb
int
mov
sbb
inc
xor
mov
add
jnp
xchg
dec
clc
inc
add
aas
sub
adc
pop
pop
lret
out
fld
cmpsl
and
fwait
and
ja
sub
rolb
lret
pop
sub
cmp
add
fisttpll
lods
dec
sti
add
cmpsl
and
lock
adc
testb
or
push
pop
incl
mov
in
das
lds
mov
inc
test
mov
mov
lods
add
pand
jge
scas
sbb
out
cwtl
insb
and
mov
xchg
add
push
sub
add
jne
push
mov
lods
lcall
push
ljmp
out
lcall
xor
add
or
xchg
add
cmpsb
push
pop
inc
fmulp
mov
std
popl
shr
or
mov
jmp
ffree
lcall
call
mov
loopne
pop
cmpsb
sbb
jnp
hlt
push
cmpsl
and
outsl
add
inc
push
js
out
test
pop
popf
xchg
pop
add
insb
mov
push
or
jae
jno
jno
add
mov
retw
add
in
inc
insb
jns
or
movsb
in
clc
addl
mov
das
into
nop
test
sub
bound
sarb
dec
add
mov
cwtl
pop
xor
mov
adc
inc
or
mov
pop
pushf
shlb
jle
pop
jo
add
xchg
repnz
pop
fistpll
out
sbb
iret
and
int3
jnp
cwtl
pop
xchg
add
pushf
dec
mov
inc
out
mov
outsl
xchg
mov
out
clc
in
add
mov
xor
imul
cld
add
lret
jle
out
mov
sti
xchg
jmp
inc
xchg
nop
add
inc
dec
jbe
imulb
jecxz
in
popf
pop
loopne
loopne
mov
add
or
add
sbb
cmpsb
popa
fs
pop
mov
fdivl
xor
pop
jnp
push
cltd
xchg
test
jb
pop
adc
xchg
mov
lcall
cmp
out
xchg
mov
push
es
sub
jecxz
test
loope
add
jmp
stos
js
cmp
shll
inc
sub
hlt
inc
lods
add
sub
mov
push
sti
add
daa
or
add
inc
cmp
xlat
pop
xchg
mov
sbb
mov
leave
int3
or
mov
andb
clc
mov
mov
mov
add
addr16
add
lds
addr16
jo
mov
fsubrl
test
pop
int3
js
shll
lahf
in
and
jo
add
push
int3
in
adc
pop
push
out
and
fsubrs
dec
dec
popa
addr16
and
pop
sub
jg
cmp
push
add
dec
sbb
jecxz
scas
inc
push
js
inc
add
mov
lods
das
loopne
sub
add
hlt
and
add
cld
sbb
movsl
adc
gs
and
les
pop
insb
shll
xchg
and
lea
mov
add
jnp
mov
add
pop
int
test
add
push
and
or
cld
movsb
sub
jne
addb
inc
adc
mov
rcr
mov
add
lds
shlb
iret
or
add
mov
dec
repnz
iret
aad
lcall
fisttpll
cwtl
inc
cmp
adc
adc
dec
data16
ficomps
aas
mov
or
xor
ror
call
or
and
mov
jbe
in
cmp
add
jns
fdiv
aad
and
aas
jmp
fsubrl
fidivs
add
cwtl
hlt
sbb
dec
mov
das
mov
inc
cmp
inc
jno
add
cwtl
mov
or
loope
jl
add
mov
pop
popf
in
pop
movsl
jb
lock
stos
add
ficompl
xchg
popf
daa
scas
repnz
insl
or
add
out
mov
cld
daa
scas
aam
xchg
xor
xor
repnz
push
repz
hlt
add
xchg
pop
push
add
adc
inc
mov
lods
push
cmpsl
sub
cmp
push
pop
data16
icebp
push
or
int3
jns
push
mov
push
stc
and
rcll
js
jp
push
lcall
pop
xor
inc
mov
sub
and
lret
add
push
iret
mov
push
add
fistps
fcmovb
rorb
shrb
data16
pop
lret
or
sbb
mov
dec
jns
add
jmp
insl
dec
add
dec
inc
adc
lock
ds
test
mov
mov
call
xchg
je
mov
push
adc
push
mov
shl
dec
movsb
bound
insl
stos
test
add
int
mov
ret
pop
nop
dec
sbb
mov
dec
add
ja
icebp
loopne
jo
lahf
lock
lret
mov
lcall
mov
sbb
repz
add
and
test
test
lahf
jmp
lock
add
out
add
add
loopne
push
sbb
push
xchg
pusha
lock
cmp
add
scas
js
cld
aas
pop
push
mov
and
dec
pop
add
scas
jl
bound
jp
in
js
xorb
into
ret
mov
rclb
mov
inc
sbb
dec
test
fisubrs
cmpl
inc
adc
aas
mov
lds
cmp
and
es
cmp
cmovs
jecxz
adc
cmp
sub
dec
popa
jo
call
jge
mov
lret
jno
xor
rolb
mov
jae
pop
out
jnp
adc
arpl
mov
add
nop
loop
mov
es
add
aam
fsubl
lret
mov
add
movsb
cld
jne
cwtl
cmpb
mov
mov
arpl
pop
and
dec
cmp
dec
adc
xchg
hlt
sbb
sub
jmp
dec
adcb
cmp
adc
dec
xchg
xchg
cmp
cmp
scas
sub
add
push
lret
enter
xor
dec
cmp
mov
inc
pop
dec
and
or
or
loop
loop
xor
cli
add
inc
icebp
int3
cmpb
jb
cli
mov
cmp
or
sar
push
loop
add
or
enter
cmp
lea
imul
loopne
test
add
repz
sbb
js
mov
dec
add
mov
mov
frstor
xor
add
pop
out
call
add
cwtl
mov
lret
add
xchg
aam
push
dec
sbb
es
xchg
ret
pop
sub
push
pop
xchg
shl
int
sbb
sbb
adc
jmp
mov
pushf
jb
std
jge
movl
push
nop
adc
lahf
xchg
jno
cmp
dec
cld
dec
mov
es
pushf
repz
js
xlat
insl
dec
lock
call
mov
lods
loopne
loopne
aas
movl
sbb
pushf
or
dec
cmc
add
adc
pop
xor
inc
add
scas
out
jl
cli
dec
add
adc
jns
add
and
pop
divb
je
ss
stos
sub
adc
and
push
or
loopne
lods
push
rolb
repz
shlb
dec
xor
pusha
jns
push
outsl
lods
dec
add
xchg
or
fmulp
add
jp
xchg
mov
push
add
mov
jae
pop
into
pop
hlt
xchg
iret
sarb
sbb
xchg
push
pop
adc
pop
push
mov
mov
jnp
cltd
test
pop
retw
sub
fwait
and
sub
inc
xor
pop
ja
in
add
test
jge
ljmp
outsb
xchg
mov
add
in
xor
xchg
jmp
add
pop
jne
lock
cmp
add
cs
add
sub
sarl
imul
sbb
xor
rorl
cmp
push
cmp
addr16
cmp
mov
insb
int3
iret
mov
sbb
das
ret
cs
mov
scas
add
add
cld
lods
cmp
pop
add
lea
inc
jmp
add
cmp
aam
and
loopne
jbe
xchg
cmp
add
in
test
sbb
fildl
xchg
orb
cmp
loopne
jecxz
arpl
ss
cmp
jns
hlt
andl
sti
clc
pop
cmc
add
mov
add
push
outsl
push
mov
lahf
and
lret
in
xchg
add
jecxz
sbb
and
xlat
mov
mov
adc
cltd
pop
cmp
es
mov
movsb
arpl
xchg
int3
pushf
loope
inc
jle
and
xchg
arpl
add
leave
jp
jb
xchg
pop
add
adc
dec
cmpb
jle
add
test
push
fstp
popf
add
sub
push
adc
xchg
in
divb
lret
jecxz
mov
addr16
fcom
stos
ljmp
mov
xchg
jp
add
jmp
add
stc
xchg
ljmp
rolb
jno
insb
pop
les
mov
std
jns
loopne
testb
test
testl
add
jg
cwtl
push
ljmp
push
cmp
jo
add
jle
and
repnz
dec
loopne
pop
and
mov
push
xor
xlat
mov
in
add
dec
add
mov
lret
pop
lods
out
cmp
xchg
sub
jnp
ret
add
stos
xchg
sbb
pcmpgtd
and
mov
adc
cmp
add
xchg
stos
add
adc
fisubs
nop
mov
mov
sbb
aas
mov
and
cmpsb
ds
mov
or
cmp
push
and
dec
jecxz
jo
push
int3
xorb
push
jle
push
xor
pop
jno
cmp
ret
shld
adc
filds
jecxz
addl
push
jmp
or
jg
fs
sub
pop
call
or
mov
adc
jno
sbb
outsl
cwtl
add
add
jmp
test
add
scas
nop
lret
lea
adc
cmp
shrb
les
mov
mov
movsl
push
jno
jns
cmp
cli
adc
lret
ja
add
mov
cmp
inc
ljmp
icebp
cmp
cmp
xor
insl
cmpsl
imul
sbb
push
push
or
add
push
add
cmp
dec
mov
jg
add
dec
add
inc
xor
jle
enter
jmp
adc
fcmovnu
testb
mov
xrelease
imul
push
or
push
adc
sbb
pushl
pop
mov
jo
sub
cwtl
or
pusha
add
addr16
in
adc
arpl
call
lods
jmp
pop
cld
imul
out
insl
hlt
jo
xchg
aam
lods
mov
jle
add
jae
or
fwait
and
shlb
sub
mov
push
pusha
or
push
loope
mov
das
push
nop
clc
out
or
jne
add
or
add
jmp
js
test
jge
and
cmp
scas
out
sbb
push
inc
mov
outsl
push
out
imul
inc
fldl
clc
cmp
push
in
push
mov
test
mov
xor
scas
inc
adc
lret
imul
pop
stos
xchg
cmp
hlt
and
dec
test
push
sbb
add
inc
cmp
or
jmp
inc
mov
add
cmpsl
xchg
xchg
outsl
fdivrl
lock
jo
aas
add
outsb
rcl
cltd
add
leave
cld
iret
int3
adc
add
adc
sub
fst
add
jg
cli
xor
lods
shl
into
sarb
xchg
cmp
daa
adc
xchg
add
test
ret
sub
bound
or
mov
loope
jecxz
mov
sub
lea
pusha
mov
inc
adc
scas
xor
xchg
call
jo
add
lea
dec
fdivrp
into
mov
mov
mulb
add
sbb
out
xchg
rolb
outsb
or
leave
add
mov
popf
and
dec
aas
jb
adc
addr16
sti
outsb
and
sbb
xchg
cmpl
scas
inc
bound
sti
aas
aaa
jle
imul
rolb
vmovdqa
mov
pop
clc
inc
cmp
sti
push
jge
pop
lea
insl
sbb
xor
pop
mov
jno
sbb
mov
xchg
hlt
dec
rorl
sbbl
or
cmpl
sahf
gs
cmovne
jmp
inc
cmp
and
fadds
push
in
repz
inc
cmp
add
jo
pop
div
xchg
test
popa
xor
jecxz
lea
sti
and
pop
aas
loope
cmp
cwtl
js
jl
jbe
sbb
adc
mov
clc
push
addb
cmpb
inc
sub
mov
inc
cmp
mov
lret
fists
fsub
sub
push
cld
sbb
aas
pop
loop
jl
add
and
rclb
in
es
mov
inc
add
outsb
clc
loop
lock
jne
mov
xchg
cmp
add
pop
jns
fcoms
pusha
mov
jbe
imul
push
rcrb
add
mov
sbb
sbb
dec
mov
sbb
pop
cltd
dec
sub
xor
sbb
push
pusha
das
sbb
mov
add
sbb
out
lock
cli
jge
pop
lahf
mov
push
pop
mov
shr
in
dec
mov
sbb
sub
ret
inc
xor
mov
das
sbb
jb
adc
pop
pop
inc
pop
jb
cltd
call
sub
push
mov
xor
sbb
push
cmp
neg
pop
dec
mov
cmp
leave
add
or
jl
incb
push
xor
jecxz
xor
pop
repz
notl
mov
add
movsb
sbb
loop
jmp
dec
add
mov
test
stos
ja
loop
scas
adc
loopne
pop
push
out
mov
ds
add
dec
inc
mov
fs
add
jnp
clc
or
aaa
jge,pt
push
or
inc
adcb
dec
pop
cmp
and
outsb
lahf
loopne
dec
jl
in
dec
dec
fwait
out
ret
sub
adc
pop
push
or
jo
add
mov
sbb
add
and
add
inc
inc
pop
xor
nopl
and
movsl
sub
inc
dec
add
icebp
rorb
mov
es
xor
fmulp
xor
cwtl
pop
popa
dec
ds
dec
mov
add
pop
adc
jmp
hlt
cmp
mov
popa
mov
add
orb
push
add
push
adc
sbb
fnclex
add
jl
test
fwait
add
test
sbb
sub
mov
dec
mov
shlb
sbb
xchg
push
cwtl
jl
sbb
xchg
push
jo
cmp
pop
add
push
or
and
filds
xchg
push
pop
dec
scas
push
ljmp
inc
pop
sbb
pop
jnp
add
xlat
jecxz
mov
into
mov
add
mov
pop
adc
test
js
inc
je
mov
ljmp
add
jo,pt
rclb
nop
mov
hlt
add
cmpsl
push
add
push
dec
mov
push
das
and
scas
lea
cltd
pop
or
mov
add
je
fildl
xchg
and
in
stc
cld
enter
adc
lret
mov
mov
fnstsw
movsl
mov
cmp
adc
iret
loopne
fiadds
pop
repnz
fsts
jo
pop
dec
jg
ja
in
xchg
add
xor
out
pusha
fmull
aam
outsl
cmp
add
nop
add
sub
je
loopne
aas
sub
jmp
repz
cli
test
or
loopne
fldlg2
inc
adc
lock
add
test
test
xchg
jecxz
cmp
ss
pop
pop
or
push
jg
fiaddl
adc
lods
and
push
pop
xchg
sub
and
mov
mov
ss
and
mov
iret
sbb
sti
jbe
fisubl
sub
push
jne
pop
into
pop
aam
roll
jae
dec
pushl
not
xor
orl
aas
mov
in
mov
dec
out
add
loop
loope
and
aaa
add
dec
add
jb
ljmp
sub
loopne
jno
push
test
or
cmpsl
leave
xor
jge
jmp
orb
loopne
aaa
mov
lock
mov
cltd
jno
adc
mov
xchg
push
sbbb
in
dec
add
movsb
mulb
in
mov
cmpsl
adc
pusha
daa
add
cmpsb
cwtl
lock
rclb
mov
subl
inc
scas
ret
push
int3
xlat
mov
add
sbb
jle
lcall
fisttpl
add
mov
and
xchg
add
mov
push
and
cmpsl
add
or
pop
mov
ljmp
ret
push
cltd
add
out
cs
stc
icebp
test
inc
hlt
sti
or
mov
lods
dec
loop
outsl
mov
or
lock
rcll
push
xor
rorb
push
inc
std
divb
pop
jae
jnp
mov
adc
loop
lock
aam
loopne
xor
mov
cmpsb
jb
sbb
or
inc
sbb
loope
dec
outsb
inc
xor
mov
sbb
in
push
scas
inc
loopne
outsb
lock
mov
lret
addr16
aam
xchg
out
add
xchg
inc
push
sbb
sub
cmp
cmp
adcl
ret
rolb
and
mov
cmp
cmp
clc
xlat
das
add
push
mov
fmull
add
or
add
push
scas
add
mov
jmp
shl
int
or
arpl
xchg
psubsb
addr16
fnsave
add
ljmp
icebp
sbb
adc
inc
lods
cltd
or
gs
lock
mov
add
push
fsubr
fstps
and
dec
rol
add
fs
push
mov
sahf
or
add
mov
pop
shl
pusha
sub
repz
and
mov
loope
aad
mov
xlat
jae
lods
add
rcrb
testl
xor
sbb
mov
xor
pusha
xlat
addr16
insl
ljmp
push
jecxz
lock
add
adc
adc
aas
push
lret
push
cmp
pop
push
std
xchg
loope
push
fnstcw
push
sbb
fildl
mov
xchg
push
dec
loopne
sbb
inc
data16
pop
mov
rcll
push
xchg
sbb
mov
dec
sti
subb
mov
lea
xchg
inc
mov
test
sbb
hlt
push
cld
into
leave
imul
stc
bnd
adc
hlt
or
xor
lret
les
mov
dec
add
outsl
insb
and
mov
popa
xor
dec
sbbb
xchg
loop
push
pop
push
hlt
shl
adc
dec
xchg
les
in
aaa
ljmp
bnd
add
sub
cmp
xchg
lcall
adc
roll
out
xor
sub
divl
lods
add
push
adc
sbb
movsb
push
fsubs
adc
mov
sub
dec
sarb
jmp
lock
mov
and
sbb
cmp
addl
push
fadd
or
mov
jne
add
subb
fistpl
cmp
rclb
aam
lods
outsl
adc
mov
insb
pusha
mov
and
pop
icebp
movb
and
sarb
lock
jg
and
mov
lahf
call
adcl
mov
insb
or
sub
cwtl
xor
out
roll
popf
stos
loop
add
push
dec
test
and
ret
ret
int3
jecxz
xchg
xchg
push
add
popf
js
ja
mov
es
das
xchg
or
insl
repnz
scas
out
push
popf
les
or
nop
add
xlat
mov
push
les
adc
loope
pop
xor
jo
add
stos
fisubrs
cmp
jns
lea
pusha
ds
lds
shrl
es
add
pop
mov
mov
inc
movsl
adc
imulb
mov
xor
inc
add
orl
outsl
jo
or
add
jmp
cmp
mov
mov
push
pop
movsb
jae
xchg
mov
pusha
aad
arpl
dec
sub
pop
call
je
inc
inc
cmpb
popf
ss
out
pusha
add
jbe
lret
loopne
je
mov
arpl
ret
cwtl
iret
and
fdivrp
mov
rclb
jae
and
jns
add
cmp
mov
dec
mov
sub
lds
pop
arpl
mov
ret
cmp
or
or
mov
adc
popa
add
ja
cmp
and
cmp
das
jge
dec
or
sti
cwtl
dec
shll
ljmp
mov
es
push
xor
pop
and
add
or
movsl
xor
loop
pushf
gs
or
rcl
ret
sarb
insb
cmp
shr
sarb
lcall
jge
add
sub
xor
jp
cmp
add
clc
add
add
std
xchg
xlat
outsb
jmp
jo
inc
jl
add
ss
mov
rolb
jno
push
mov
pop
nop
cmp
movsb
pop
leave
push
mov
sbb
cmp
sahf
ret
leave
insl
pop
mov
adcl
xor
jl
xchg
sahf
mov
sbb
test
jno
call
or
xchg
call
fmuls
or
inc
sahf
add
push
inc
icebp
inc
hlt
lods
les
inc
dec
cmp
add
rcr
ljmp
scas
mov
mov
push
mov
dec
add
orb
shlb
xchg
pop
xor
inc
xor
pop
aad
push
shr
inc
mov
add
rorb
cmp
xor
pusha
push
add
test
int
lock
nop
cwtl
pop
mov
dec
aam
cs
clc
fwait
cmp
add
mov
cld
insl
dec
arpl
clc
cwtl
ret
mov
test
mov
js
push
add
fidivs
push
push
sahf
xchg
mov
loop
inc
sub
test
dec
cli
mov
cltd
add
dec
sbb
dec
or
mov
xchg
or
add
jbe
add
mov
adc
call
popf
adcl
xor
jg
add
add
and
sbb
mov
outsl
add
push
adc
add
enter
test
lret
cld
test
adc
xor
sbb
out
mov
movsl
sbb
test
sbb
repz
inc
push
push
enter
fdivr
adc
or
loopne
sub
repz
pushf
popf
lods
lods
test
or
sub
inc
arpl
push
lock
fbstp
cwtl
movb
sub
dec
push
pop
int3
std
add
insl
xchg
lds
push
xor
div
mov
dec
adc
add
sbb
lock
jg
xchg
insb
jo
push
or
pushf
dec
cld
inc
dec
std
lea
andl
jns
push
mov
ret
nop
mov
pop
xchg
lret
lret
adc
inc
insb
cmp
and
ds
inc
es
pop
mov
pop
pop
xchg
lret
sub
xor
sbb
out
cmp
les
xchg
mov
out
lahf
add
sub
xchg
dec
and
and
nop
addr16
inc
jne
ret
ja
loop
daa
out
pusha
add
sub
push
in
cmp
xchg
mov
xor
outsl
xchg
pop
adc
sbb
imul
add
pop
cmp
xchg
addr16
jl
out
pushf
cmp
aad
add
lret
push
push
mov
add
fstps
and
or
mov
pushl
cmp
sub
push
xor
or
mov
js
stc
hlt
int3
lods
and
add
ss
mov
sbb
fildll
fstpl
and
sti
cmc
add
paddq
neg
push
xor
scas
pop
pop
mov
inc
add
repnz
negb
add
dec
adc
add
jo
mov
xchg
mov
in
mov
mov
dec
rol
dec
push
lret
scas
jno
add
leave
cltd
out
pop
xor
ret
add
sbb
mov
jge
out
scas
push
and
add
jle
add
in
jbe
sbb
or
bt
cmp
shr
pop
shll
inc
lsl
nop
or
aam
cmpl
fld
pusha
je
fwait
imul
ret
push
add
mov
lahf
sbb
cmp
add
jp
mov
and
mov
and
push
daa
mov
or
mov
add
add
dec
repnz
mov
sub
test
add
mov
push
sub
test
hlt
addb
adc
mov
repz
jg
or
sbb
mov
push
in
and
mov
imul
mulb
jecxz
add
xchg
outsl
int3
pop
mov
movsb
xorb
sarb
in
add
add
subb
push
lcall
flds
jle
jns
dec
jns
add
sbb
arpl
inc
faddl
int
inc
add
pop
in
adc
mov
cmp
sbb
jae
shrl
or
aaa
xor
mov
orb
gs
add
jmp
mov
or
aad
push
adc
loop
fdiv
add
dec
push
pop
dec
inc
roll
mov
add
xchg
xor
insb
or
rclb
outsb
dec
je
xor
daa
scas
jae
dec
mov
cmp
mov
xorb
jo
mov
je
jmp
test
fucomip
test
cmpsl
mov
popa
push
std
or
push
dec
push
scas
jmp
pop
pop
repnz
inc
in
dec
adc
shll
sarb
or
inc
jecxz
sub
mov
in
jno
push
sbb
cmp
mov
ret
int
and
testl
mov
dec
push
mov
rclb
in
cmp
adc
pop
add
daa
mov
popa
adc
stos
push
loopne
sub
sub
inc
xor
out
add
icebp
cmp
inc
lcall
add
adc
js
sub
insl
add
dec
mov
out
pusha
or
pop
popf
cmp
fs
mov
out
or
outsl
add
jno
lcall
cwtl
xor
sbb
push
and
jne
cmp
js
jecxz
mov
dec
lahf
cmp
setl
bound
cmpl
xchg
data16
sub
dec
jb
add
push
mov
int3
xor
aad
add
mov
rol
test
imul
mov
cmp
test
xor
inc
iretw
sbb
pop
cmp
je
add
in
inc
push
imul
movsb
and
ret
or
cmp
inc
ss
jo
dec
negl
add
in
mov
mov
cmp
cwtl
inc
inc
fnstcw
stc
or
xchg
cmp
sbb
jo
popf
mov
adcb
pop
in
popa
outsb
add
cmp
roll
imul
push
call
hlt
ret
adc
add
lret
and
jne
inc
lods
and
stc
pop
sbb
mov
and
cmp
cmp
jmp
cmp
add
jle
mov
test
hlt
pop
int3
add
cmp
mov
sti
jae
mov
jl
add
pop
xchg
xchg
xor
fwait
inc
int
int3
push
dec
mov
aaa
in
adc
dec
enter
rolb
stc
inc
iret
add
push
call
fstpt
pop
dec
xchg
cwtl
mov
add
rclb
popl
mov
aaa
into
pop
push
out
add
mov
and
call
or
and
cs
in
jle
sbb
jl
mov
add
mov
mov
add
fs
mov
hlt
int
push
cmp
pop
xchg
pusha
shl
push
into
dec
push
es
add
imul
aad
adc
nop
lret
xchg
cmp
jns
add
sub
adc
repnz
ret
add
lock
xor
mov
inc
mov
pop
add
xor
subb
or
mov
clc
enter
sub
push
add
in
and
loopne
xchg
pop
or
cltd
les
add
addl
adc
xchg
js
mov
push
mov
inc
int3
in
xchg
shlb
nop
cmp
add
adc
add
xchg
inc
mov
pop
xor
gs
and
clc
xchg
loop
cli
stc
jno
arpl
xchg
movsb
in
jo
fbstp
test
inc
clc
gs
add
jecxz
mov
pop
and
mov
mov
inc
and
mov
fwait
pop
cwtl
pop
add
add
mov
xchg
inc
dec
add
mov
outsb
es
stos
push
jo
fadds
outsl
lock
mov
pop
icebp
xchg
mov
mov
or
jbe
add
jp
mov
addb
lds
popf
in
data16
jp
bnd
adc
cmp
lds
jnp
xchg
pusha
or
nop
clc
inc
jge
push
repnz
imul
bound
divl
mov
aas
inc
rorl
xchg
lret
into
sbb
gs
and
out
sbb
pop
sbb
or
jns
mov
cmpsb
push
adc
fstps
clc
mov
pop
leave
js
ss
aam
push
xchg
loopne
jo
cmc
push
enter
nop
add
lcall
les
mov
mov
xor
in
cld
js
lods
push
into
jl
enter
bound
fldcw
and
add
xor
testl
mov
rcll
jb
pop
enter
inc
adc
add
mov
mull
xor
lcall
jns
sbb
mov
nop
cld
and
out
es
imul
adc
lods
add
and
cmpsb
xor
pushf
add
jle
je
xor
mov
mov
loop
mov
test
decb
stos
subb
and
in
add
cmp
jno
negb
mov
repnz
cmpsb
dec
pop
mov
mov
in
hlt
ja
sub
insb
add
push
imul
push
orl
cmp
add
icebp
sbbb
lds
mov
add
xor
jbe
add
int3
ret
xor
push
bound
xor
clc
ss
dec
iret
leave
jmp
mov
jo
add
jbe
test
sub
add
sti
cmpsl
xlat
bound
dec
add
insb
mov
int
js
mov
fisubs
and
shld
xchg
push
popf
lods
pop
loopne
jmp
ret
inc
in
cmp
and
jg
sub
mov
push
adcl
stc
fsub
mov
cmp
adc
mov
lock
ds
pop
std
pushf
sbb
adc
adc
les
add
stos
or
add
jg
std
and
loopne
cs
loope
jnp
push
dec
jl
add
xchg
xor
repz
mov
fimull
and
mov
fwait
add
in
test
adc
insb
decb
ret
mov
pop
mov
xor
push
notl
xor
mov
sbb
loopne
jl,pn
and
outsb
cmp
sub
cmp
adc
inc
int
int3
dec
sahf
scas
cmc
xchg
stc
je
push
in
movsb
mov
mov
sbb
push
dec
adc
mov
mov
cmp
add
jp
outsl
add
jns
sub
outsl
sub
add
icebp
inc
dec
loop
add
cmp
popa
lock
repz
ljmp
xchg
add
ret
jg
lods
push
mov
and
inc
or
andb
pushf
push
push
scas
add
nop
iret
test
xchg
pop
add
loope
sbb
repnz
pop
add
cwtl
popl
xor
or
sub
lock
xchg
enter
mov
mov
push
dec
mov
push
stos
orb
dec
mov
pop
or
inc
add
adc
xchg
ret
mov
pop
cmp
or
cmp
insb
dec
mov
in
xchg
scas
sbb
cltd
adc
mov
and
nop
in
add
add
stc
out
test
mov
inc
add
mov
mov
xchg
div
popf
sbb
xchg
inc
push
or
cld
scas
jno
rol
add
jge
jmp
out
mov
mov
pop
hlt
and
or
add
nop
xor
cmp
sahf
aam
xchg
shrb
sarl
cmc
in
mov
sbb
xchg
xor
mov
push
cmp
icebp
shlb
push
sub
clc
mov
push
addb
popa
das
repnz
nop
add
imul
scas
sub
icebp
dec
fisubl
fs
adc
add
cmpsb
mov
or
mov
pusha
mov
stos
add
inc
xorb
push
sbb
cmc
inc
aas
or
aaa
adc
out
cs
mov
xchg
or
and
mov
pusha
lock
shlb
xorb
mov
xor
push
cmp
scas
negl
mov
int
fisttps
jno
in
add
in
inc
std
cmp
and
es
in
cld
xchg
xor
mov
adc
xor
sub
movsb
add
daa
xchg
mov
cmp
jne
mov
add
cld
addr16
jo
add
test
xor
ja
add
mov
insl
shlb
mull
loop
add
sub
dec
test
push
lds
ret
xor
das
popa
shrb
or
sub
and
inc
cltd
pop
cmp
adc
dec
fisubl
inc
lock
test
sub
xor
and
arpl
mov
cli
or
repnz
sbb
rolb
xorl
inc
adc
fmuls
inc
psubsb
sar
adc
aad
adc
clc
mov
imul
push
adc
jecxz
add
mov
addr16
lods
add
rorb
nop
push
xchg
dec
pop
dec
adc
pop
insl
addb
out
ja
into
lea
enter
inc
pusha
stos
push
add
pushl
cs
dec
mov
add
stc
in
dec
xchg
faddl
mov
push
leave
jo
in
adc
or
jge
push
dec
fcmovu
inc
adc
lea
shll
cmp
pushf
pop
cmpsl
inc
jecxz
cmp
sub
mov
or
loopne
repz
je
pop
mov
in
mov
add
sub
ret
jmp
push
in
cmp
add
jnp
sub
hlt
ljmp
cli
push
repz
lcall
push
and
pop
icebp
ljmp
call
dec
xor
xchg
fsubl
cmpsb
dec
dec
push
mov
jbe
or
and
dec
rolb
or
icebp
das
scas
imul
mov
enter
dec
jp
in
in
add
dec
xor
adc
jno
xor
adc
pop
dec
frstor
shl
pop
inc
jae
sarb
mov
insb
xchg
and
test
xor
and
cld
xchg
cmpsb
pusha
int3
add
xchg
cmc
mov
sbb
stc
or
insl
jo
aad
mov
jne
sub
or
pop
and
imul
fs
or
nop
addb
pop
negl
cli
add
mov
mov
pop
push
cmpl
mov
aas
jb
and
aaa
lds
push
cmp
popa
jnp,pn
mov
add
xchg
or
cmp
add
loope
add
push
es
das
pop
xchg
cmp
jne
add
ror
mov
pop
push
and
pusha
jg
cli
adc
addb
cmpsb
add
enter
movsb
js
add
or
nop
add
sub
xchg
dec
outsb
rolb
mov
rcrb
jl
inc
mov
daa
nop
js
sarb
ja
mov
pop
pushl
inc
add
adc
add
sbb
js
dec
orb
outsl
push
mov
pop
fcoms
add
xor
jmp
popl
jl
pop
sbb
je
pop
inc
sub
mov
pop
fs
ljmp
xchg
fdivl
nop
loopne
in
xor
add
cli
inc
sub
pushf
push
add
add
sbb
cmc
mov
pop
dec
gs
imul
sbb
and
cmp
xchg
mov
or
mov
or
mov
add
sub
mov
push
lcall
repnz
lods
sbb
cmp
addb
test
add
cwtl
test
mov
or
std
jbe
mov
les
bound
and
mov
sbb
jbe
punpcklwd
ljmp
pop
dec
imulb
add
and
xchg
out
outsl
add
fisubrs
icebp
cwtl
adc
jle
add
insb
iret
popa
enter
mov
push
add
and
out
add
ret
icebp
add
add
xor
in
or
add
enter
xchg
jg
add
dec
add
or
lods
mov
fcompl
mov
lret
cmp
hlt
add
inc
adc
push
fnsave
add
loopne
and
jle
mov
jg
pop
xor
pop
pop
jne
add
incl
mov
imul
pop
add
dec
pop
mov
sbb
xchg
outsb
xor
arpl
pusha
test
daa
js
nop
clc
push
fs
stos
adcl
add
xor
ja
add
inc
pop
add
out
das
addr16
insl
push
xor
or
sub
cmp
cs
aam
and
fisttpl
dec
mov
addb
cli
outsb
jmp
and
add
cld
push
in
into
addr16
or
lock
roll
add
scas
cmp
rcl
jl
xor
sbb
add
push
add
jmp
in
loopne
loop
dec
and
out
inc
push
or
or
imul
shlb
add
rorl
push
cmp
mov
shll
test
sub
frstor
imul
cmp
pop
xchg
xchg
into
mov
cmp
ficompl
mov
push
cmp
aam
mov
je
das
fs
jo
mov
pop
xor
add
adc
int3
xorb
je
add
insl
jno
xchg
negb
aas
cltd
cmpsl
add
shll
pushl
rclb
ljmp
fldcw
pusha
clc
es
jnp
mov
xchg
inc
push
lahf
adc
jnp
add
fucomip
cmp
mov
cld
out
test
les
stc
call
push
cmp
andb
add
icebp
sahf
jle
fistl
cli
and
rclb
mov
sbb
mov
cld
mov
mov
test
pusha
dec
out
xchg
pushl
data16
inc
rorb
or
enter
add
and
mov
mov
cmpb
rolb
mov
mov
jl
andl
add
ret
aam
sbb
adc
adc
mov
push
push
add
xor
subl
xchg
cmp
xchg
add
cmpsb
jp
je
lret
mov
xchg
cmp
pop
je
jbe
add
fwait
sub
add
rcrl
add
inc
cld
ltr
subb
sub
push
mov
add
xor
cmp
mov
jle
xchg
dec
jne
pop
xchg
and
dec
mov
cld
cmp
fidivrl
stos
push
insb
mov
adc
enter
rcrb
adc
jns
mov
ret
mov
xchg
xlat
and
add
adc
and
add
pushf
mov
xchg
xchg
loop
mov
and
add
mov
movsb
aam
dec
lds
add
call
and
add
mov
xor
pop
jmp
add
cmpb
rol
add
mov
fs
stc
sbb
int3
lock
jnp
hlt
mov
sbb
adc
testl
les
add
pop
popf
xchg
js
xor
pop
inc
sbb
sbb
ficompl
push
adc
mov
xorb
mov
inc
add
mov
xchg
nop
loopne
pusha
push
aad
sbb
push
add
adc
pusha
cwtl
rolb
lock
cmp
mov
adc
xchg
mov
dec
sub
push
daa
pop
popa
xor
mov
stc
add
lret
jl
lock
jmp
lock
and
bnd
cmpsl
test
call
xchg
pop
jnp
xchg
data16
or
addr16
xlat
out
push
mov
mov
xchg
fsubrl
jmp
imul
insl
and
cld
xlat
mov
inc
test
js
leave
sub
scas
add
into
lock
incl
pop
in
nop
mov
or
mov
adc
popa
and
and
add
mov
scas
sbb
xorl
and
fldl
rorl
out
pop
inc
jb
add
add
sbb
cmp
cld
jecxz
cmp
lock
arpl
xchg
mov
mov
lahf
nop
mov
mov
insb
popf
add
decb
dec
insl
popf
add
xor
mov
movsb
sbb
mov
push
dec
aaa
rolb
in
lahf
cld
cmpsl
xor
pop
xlat
inc
fsubrl
ret
call
mov
jae
add
clc
out
cmpsb
mov
repnz
stos
or
xchg
adc
sbb
sbb
pop
xor
pop
mov
test
imul
dec
stos
imul
jp
shlb
add
push
ljmp
cmp
sbb
loopne
or
in
ljmp
dec
stos
orb
add
add
das
ror
xchg
sbb
negl
push
inc
adc
cmp
add
jne
nop
jp
push
mov
int3
jmp
cld
push
jge
mov
add
xchg
lods
popa
das
sub
xor
mov
or
and
or
cs
movsl
mov
dec
adc
push
add
pop
push
mov
mov
xor
mov
cmp
call
inc
add
sbb
inc
add
es
aad
mov
lret
std
repz
add
pushf
xchg
xor
dec
add
xchg
icebp
pushf
into
adc
fdivrl
jle
add
and
pop
push
int3
into
cmpsl
add
out
adc
mov
cmp
in
inc
out
ja
push
and
sbbb
mov
or
inc
test
daa
test
shrb
mov
scas
jo
insb
or
push
mov
xchg
sarb
into
sub
sti
rolb
xchg
xchg
sarl
xor
dec
test
in
inc
int3
add
test
sahf
mov
add
jae
shrb
leave
mov
std
xor
aam
cmp
jne
stos
ljmp
std
rcl
sahf
xor
xchg
add
lret
mov
add
dec
popa
arpl
mov
mov
push
add
pusha
push
ds
enter
imul
pop
fadds
push
aaa
in
add
mov
jns
pop
mov
xchg
mov
repnz
push
nop
lock
les
das
lret
or
xor
push
jb
popf
mov
mov
mov
xchg
jbe
mov
pop
test
loop
fcoms
jb
cmp
mov
push
paddusb
xchg
push
lock
in
je
add
pop
cmp
sub
icebp
xchg
or
add
xor
add
jne
adc
dec
jge
or
add
fmull
inc
out
add
test
pop
xor
or
clc
cs
imul
add
mov
enter
push
xor
mov
sub
cmc
add
lahf
cmp
inc
cmp
mov
push
xor
sbb
mov
add
aas
xor
push
add
cmp
cmp
int
lea
stos
repnz
inc
dec
jle
pop
loop
dec
rorb
movsl
mov
mov
xor
dec
mov
frstpm(287
jns
pop
push
imul
call
jae
iret
inc
out
das
lret
sbb
stos
flds
push
lock
sbb
and
xor
jne
add
mov
shlb
daa
fcoms
xorb
jecxz
and
in
and
add
lock
adc
push
add
dec
stos
push
xchg
inc
mov
repnz
mov
andb
pop
pop
repnz
add
jbe
or
xor
xchg
xchg
cli
cmp
stc
and
mov
loopne
add
nop
mov
sub
rcrb
xor
inc
arpl
add
add
push
mov
js
xchg
outsb
add
dec
aad
lea
inc
push
mov
loop
and
insl
xor
jae
pop
xchg
in
pusha
sbb
mov
inc
call
sbb
xchg
test
sahf
and
popf
xchg
cwtl
sub
sbb
add
std
dec
pop
lock
jne
push
xor
cwtl
push
or
pop
pusha
orb
sbb
mov
out
xor
push
fsubl
stos
stc
pop
aaa
and
cmp
popa
xor
cmp
adc
sbb
leave
adc
xchg
add
int3
mov
add
jp
add
and
mov
or
enter
add
sub
add
jae
pop
pushf
mov
cmp
mov
add
add
dec
add
sub
jo
aad
mov
cmc
push
mov
pop
sbb
les
push
mov
mov
sub
mov
and
addr16
clc
add
adc
fwait
iret
xlat
sub
rcr
cmp
add
adc
push
add
and
xchg
rorb
fsubs
inc
or
les
push
addl
call
sti
push
stos
loop
and
ret
fbstp
je
and
dec
faddl
outsb
adc
nop
inc
xor
sub
cmp
flds
into
and
inc
imul
test
mov
add
pop
aas
lods
jg
pusha
in
popf
out
push
pop
mov
nop
daa
pop
or
aas
ss
imul
mov
dec
xchg
pop
xchg
jne
xor
cwtl
loopne
cmc
mov
add
jne
sbb
call
lds
rclb
sbbl
not
mov
imul
mov
aas
jl
cwtl
adc
pop
nop
xor
je
add
push
mov
cmp
push
mov
movl
and
cmp
xlat
jmp
outsb
jb
test
or
xor
ds
add
out
jp
pusha
mov
add
aaa
mov
mov
mov
cmp
rolb
jmp
fnstcw
cltd
sub
jmp
or
xorb
xchg
hlt
push
cmp
add
popa
cwtl
inc
adc
mov
add
and
mov
cmp
pusha
out
dec
loope
add
adc
pop
je
push
sub
dec
sbb
inc
or
pop
dec
mov
in
mov
mov
xchg
jnp
push
lods
icebp
pushf
pop
sub
shll
and
sub
aad
stc
and
lods
cmp
xor
je
nop
cmpl
sub
test
adc
cmp
pusha
cmp
test
ljmp
addr16
lock
sbbl
call
add
shlb
dec
in
dec
inc
fs
sub
insb
jo
jl
pusha
jle
cmp
sub
add
in
and
push
nop
xor
addl
aas
cld
xor
sar
push
std
mov
gs
or
stos
or
xor
pop
rolb
sub
inc
inc
and
les
xchg
mov
add
imul
add
sub
lea
addl
or
mov
inc
inc
subb
jbe
pusha
mov
enter
movb
sbb
das
and
jae
outsl
and
mov
push
mov
add
and
xchg
fwait
fs
filds
add
sub
and
and
and
std
out
shl
xor
mov
pop
jae
cwtl
sahf
adc
and
and
insl
flds
outsb
sub
xchg
pop
add
and
fs
pop
in
inc
add
es
sbb
sbb
cmp
out
ds
jg
dec
pop
nop
addb
sub
add
mov
fistl
or
dec
idivl
daa
sbbl
cs
test
pushf
cmp
or
xor
rclb
add
inc
pop
adc
enter
pop
aam
out
out
inc
test
cmp
cs
lds
push
mov
repz
mov
sbb
pop
sbb
add
push
push
jecxz
daa
add
push
inc
cmp
sub
mov
pop
add
and
or
ret
and
xor
add
test
shlb
mov
aam
dec
cmpsl
outsb
dec
xchg
dec
andb
std
push
adcl
and
and
push
imul
ret
fwait
jne
cmp
nop
inc
aam
clc
mov
xchg
das
stos
push
fdivrs
sbb
aam
dec
and
mov
ss
addl
xor
and
dec
adc
jb
mov
notl
outsl
and
je
xchg
add
adc
fcoms
mov
add
push
sahf
testl
outsb
or
xor
add
xor
mulb
loopne
adc
xchg
sbb
in
mov
pop
test
sbb
rcll
sbb
add
mov
pop
hlt
shlb
jne
pop
addb
ja
push
push
inc
dec
adc
inc
xchg
cmpl
dec
and
xadd
out
push
lods
add
sub
andb
jmp
inc
popa
push
and
dec
and
add
add
test
add
mov
fs
add
mov
pushf
sar
pushf
mov
dec
pop
pop
and
cmp
xchg
add
push
dec
adc
and
stos
fidivl
sub
adc
pop
xor
pusha
mov
mov
icebp
xchg
jge
or
or
add
mov
ds
ficoml
subb
subb
jl
loop
add
mov
and
outsl
addl
dec
sbb
imul
inc
and
xchg
jno
add
mov
fsubs
in
adc
cmp
adc
add
call
push
lock
and
mov
lock
cld
loope
jl
jg
pop
and
xchg
mov
adc
ficoml
mov
add
imul
fs
dec
dec
add
fmuls
pop
gs
push
mul
sub
sbb
das
jae
xor
inc
adc
fs
fistps
jne
jno
cmp
insb
inc
mov
decb
sbb
shll
repnz
and
imul
movsl
fdivrl
mov
add
ret
inc
lret
adc
xor
pop
lcall
ror
hlt
movsb
pop
add
xlat
adc
add
or
jge
int
mov
in
out
std
add
sbb
fnsave
cmp
jecxz
push
sbb
jl
push
pop
cmp
mov
xor
repnz
add
lock
js
jp
xlat
xorb
or
je
mov
sbb
push
pop
daa
call
sarl
and
or
in
push
cmp
stc
adc
enter
int3
mov
cli
dec
js
or
xor
stos
test
adc
and
cmpl
add
inc
mov
add
push
subb
push
js
jge
pop
or
push
dec
icebp
mov
add
jne
jl
shr
int3
dec
bndldx
lahf
pop
pop
jge
add
xorl
mov
lock
push
sar
mov
sub
enter
shrd
or
mov
dec
sbb
sbb
mov
add
sbb
or
loopne
pop
mov
mov
add
cs
int3
push
nop
pop
sbb
add
sub
pusha
dec
nop
test
pop
add
xchg
imul
jp
xor
sbb
inc
into
adc
jae
cs
inc
scas
xor
mov
pop
sub
mov
test
adcb
std
push
xor
out
push
mov
mov
xchg
xchg
ret
sbb
mov
test
adc
les
mov
push
xchg
shll
add
lret
jb
add
test
add
fs
ja
sub
xor
push
pop
mov
and
add
cs
pop
jo
ljmp
hlt
mov
mov
imul
andb
dec
clc
xchg
inc
test
xor
outsb
insb
lahf
xor
imul
or
jb
dec
mov
popf
xchg
and
mov
push
imul
bound
pusha
aam
dec
mov
in
xchg
pop
add
loop
outsb
and
imull
lret
dec
mov
or
and
decl
and
mulb
add
in
test
test
fcmovb
jle
mov
jmp
and
xor
or
enter
hlt
out
sub
add
mov
shl
sub
ja
jae
dec
mov
mov
int3
push
push
xchg
mov
jl
inc
das
mov
clc
push
add
js
es
mov
xchg
add
dec
mov
mov
out
xchg
mov
and
and
adc
jae
fwait
adc
rcrb
test
fnstcw
push
sahf
mov
cld
pop
dec
insb
add
int3
js
mov
dec
nop
and
je
ret
inc
movsl
aam
add
popa
sub
out
jb,pn
add
sbb
enter
pop
sbb
ret
jmp
adc
rorb
push
mov
scas
insb
lock
sbb
cmpsb
clc
dec
fsubrs
cmp
lods
add
mov
fs
mov
mov
test
stos
imul
orb
aas
rcrb
stc
xchg
sbb
dec
add
mov
fwait
sahf
adc
jge
or
mov
out
repnz
push
pusha
add
xchg
lret
out
addr16
outsl
lahf
add
jge
adc
dec
pop
add
shlb
inc
pop
fs
lock
mov
cmp
mov
shr
sub
insb
addb
lds
xor
inc
jmp
notb
adc
fcmovnb
xor
orl
and
ret
loop
ds
incl
loope
outsb
xor
add
push
push
int
sarb
adc
mov
mov
inc
mov
nop
cs
rorb
adc
js
xchg
and
testb
into
sbb
pop
rorl
roll
xor
pop
in
fsubrl
add
mov
jnp
stos
cmp
push
add
call
ljmp
push
push
fcomip
sbbb
out
call
je
dec
and
add
jno
mov
in
jno
add
pop
movsb
lret
dec
sti
add
sub
mov
lahf
or
sahf
adc
add
inc
pushf
xchg
lods
add
arpl
lds
mov
in
sub
dec
stos
ds
mov
dec
test
clc
jnp
repnz
adc
lock
mov
loopne
es
cmp
and
insb
flds
das
add
lcall
or
add
jp
pop
out
xor
movsl
mov
es
test
pop
filds
lret
outsb
jae
and
popa
push
bound
shl
mov
rclb
inc
mov
nop
add
sbb
jge
xchg
bound
leave
jmp
push
popl
negb
push
sbb
les
add
mov
test
popa
sub
add
xlat
out
or
ds
test
fcoms
mov
dec
pop
les
sub
xor
and
inc
je
mov
mov
cmp
ljmp
lret
cld
dec
repnz
popl
pop
es
adc
aam
stc
sbb
stos
test
and
fnstenv
jp
cmp
xchg
les
push
fcomps
cmp
add
mov
push
cmc
je
stc
das
add
jo
xor
rcll
push
pop
mov
adc
pop
push
sub
sub
xchg
push
lock
adc
clc
sbb
add
xor
push
add
std
mov
adc
movsb
and
pushf
outsb
into
dec
sbb
sub
and
and
aad
or
or
cmp
loopne
or
xchg
and
sahf
mov
cltd
dec
sti
pop
mov
lock
call
bnd
add
push
sub
add
inc
push
into
adc
aad
adc
add
ds
dec
sbb
in
sbb
pop
or
stos
add
shl
pop
pop
iret
enter
ljmp
mov
sub
hlt
push
sbb
adc
roll
aas
xor
out
enter
mov
inc
push
cld
push
testb
test
cmpsb
and
mov
fmuls
cwtl
iret
sahf
sarb
aas
gs
dec
and
dec
and
sbb
outsb
mov
or
push
jmp
adc
inc
jb
int
nop
cmp
cwtl
call
rcrb
add
outsl
testl
test
daa
loopne
fbld
rcll
or
ds
sarl
stc
sbb
flds
pop
ret
and
insb
jge
add
popa
cwtl
fistps
xor
movsb
scas
rolb
adc
mov
ret
repnz
fistpl
dec
ror
or
stc
inc
int3
add
cmp
xor
pusha
mov
pop
pop
or
mov
pop
inc
add
cs
ret
inc
push
lods
int3
xor
jecxz
data16
and
cmpsb
nop
add
pop
negb
xor
test
dec
cwtl
daa
or
jl
call
movsb
xor
out
icebp
aaa
adc
lds
stc
rolb
add
xlat
lock
xor
fs
out
add
les
or
iret
mov
lock
sbb
and
add
push
push
lods
rol
xchg
mov
sti
or
jne
inc
xor
dec
out
aam
ds
shrb
adc
add
inc
mov
or
xchg
pop
cmp
adc
out
in
jge
pushf
in
add
jne
xor
mov
enter
push
outsl
mov
xor
rolb
inc
jle
sbb
pop
enter
ja
inc
push
lds
movsb
jmp
imul
popa
push
xor
mov
js
repnz
push
les
fistl
or
stc
adc
push
in
sub
nop
inc
dec
out
adc
add
popa
stos
add
lahf
xchg
sub
and
mov
pop
lock
xchg
fdivrp
jae
pop
int
xor
out
pop
lret
mov
xchg
cwtl
pushf
add
cli
adcb
push
adc
push
pop
hlt
pop
and
add
add
imul
es
cwtl
pusha
daa
jo
mov
mov
lds
pop
xchg
dec
es
sbb
or
and
dec
mov
adc
xlat
jb
mov
pop
add
and
sub
sub
mov
loopne
add
sub
xchg
cli
int3
push
movsb
mov
jno
sbb
iret
jo
ds
inc
mov
push
mov
sub
pop
clc
adc
mov
inc
std
and
fcomp
add
jnp
cld
ret
loop
cwtl
push
xor
clc
in
stos
jg
adc
rolb
pusha
dec
xchg
shr
movb
test
mov
inc
cld
fnstcw
cmp
push
jge
aas
xchg
xchg
ret
sub
xchg
xor
add
add
outsl
sub
icebp
nop
or
sbb
pop
scas
aam
data16
jo
cmp
andb
push
jl
ficoms
push
rol
add
rcrl
stos
std
mov
and
jge
cmp
mov
adc
mov
rclb
ds
lods
sbb
rol
mov
addr16
cmp
subb
cmp
stos
mov
subl
add
fsub
fcomps
adc
lds
cmp
and
dec
rolb
jnp
xchg
mov
sbb
call
pop
andb
mov
or
aad
mov
dec
add
push
js
and
lahf
test
sbb
or
sub
add
into
clc
jnp
insl
lock
mov
mov
or
xor
sahf
call
xor
cmp
xchg
push
sbb
mov
sub
xor
ds
dec
or
les
or
and
push
outsb
enter
adc
mov
movsb
or
jae
sub
scas
lds
lret
and
nop
cwtl
or
jo
mov
fs
pusha
mov
adc
mov
shlb
sub
inc
cwtl
inc
xchg
xor
dec
cmp
pop
sub
cld
push
and
mov
out
dec
push
adc
dec
test
sub
cmp
mov
add
in
clc
or
out
mov
cwtl
mov
lahf
and
inc
pop
pmullw
jne
push
add
inc
jmp
lock
shlb
mov
out
mov
ljmp
push
xchg
lock
adc
and
pusha
mov
ja
xchg
ss
fs
cld
mov
mov
push
in
sbb
sbb
dec
mov
incb
arpl
icebp
imul
adc
aad
dec
arpl
cmp
or
call
stos
in
and
daa
pop
add
push
sub
add
sub
scas
push
in
cmp
mov
push
push
xchg
loope
jb
std
lods
inc
mov
or
or
xchg
push
sar
xor
les
adc
lds
movsb
ror
jl
or
mov
dec
add
jp
mov
addb
loope
push
mov
pushf
mov
add
add
push
pop
shrl
mov
xor
out
aam
pusha
mov
insl
cmpl
push
push
inc
add
sbb
incl
lods
call
sub
cs
pusha
xor
xor
pop
jnp
mov
jbe
stos
jp
out
subb
pop
lret
shrl
loopne
and
sti
andl
lods
inc
in
cmp
fildll
add
or
aam
or
dec
add
outsb
pop
push
call
sarb
iret
jl
gs
sbb
fisttps
fiadds
aas
stc
add
jno
cltd
rcl
mov
sub
movsl
dec
bound
push
mov
pusha
pop
mov
cmp
int3
jl
xor
mov
add
mov
stc
fistpll
sahf
sub
inc
out
xchg
cmp
jns
popa
xchg
sub
pop
leave
dec
cmp
add
mov
sbb
mov
sbb
out
xchg
lcall
or
shlb
sub
and
or
mov
adc
fcomps
mov
shll
fists
mov
leave
adc
movsl
or
mov
bound
or
cltd
push
xchg
loopne
data16
xchg
inc
jge
fidivs
mov
repnz
and
das
mov
rclb
add
sbb
int3
jno
cmp
or
ret
aas
js
add
inc
and
js
adc
repz
adc
es
in
add
loop
ret
fsubp
lcall
dec
cmp
pop
mov
ds
rcl
push
mov
mov
sub
repz
cmpsl
add
or
dec
xor
fbstp
test
inc
add
and
data16
std
jp
add
mov
mov
sub
stos
add
orb
sbb
lret
or
add
repnz
mov
mov
push
mov
add
shll
pop
cmp
push
dec
or
pop
js
add
loope
mov
mov
xchg
mov
mov
cs
cmp
movsl
mov
sub
addb
sub
sbb
testb
sbb
mov
nop
or
cs
add
mov
add
in
test
cmp
ret
mov
mov
mov
jle
sub
inc
inc
sbb
xor
pop
or
or
jnp
xor
cmp
bound
add
adc
testb
sub
test
lahf
xchg
loopne
push
push
hlt
cmp
jo
mov
and
adcb
push
testl
adc
fwait
mov
xorb
add
lret
add
sub
addr16
mov
mov
out
mov
cmp
dec
mov
or
mov
addb
sub
inc
stc
cmc
cmp
lds
fst
mov
pop
xor
ret
xor
xchg
dec
subl
psubb
push
adcl
jmp
and
mov
out
pop
adc
popa
sarb
inc
and
aad
ret
pushl
pop
enter
imul
fadd
xorl
nop
mov
xchg
mov
adc
add
inc
outsl
je
xor
cmpb
in
addr16
cmp
jo
add
pop
cmpsw
mov
das
add
mov
ds
adc
and
or
push
mov
dec
orb
jb
jbe
sbb
test
add
sbb
rcl
hlt
dec
or
inc
add
lea
adc
xchg
pop
adc
add
push
pmullw
mov
inc
xor
int3
das
add
jmp
add
pusha
dec
add
pusha
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
mov
add
mov
mov
rolb
addb
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
inc
inc
inc
inc
inc
inc
inc
add
add
addb
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
addb
ja
ja
ja
ja
ja
mov
mov
mov
add
incl
add
add
ljmp
add
add
add
add
add
add
add
add
add
rolb
add
add
add
mov
add
mov
mov
rolb
addb
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
incl
incl
incl
incl
incl
incl
incl
mov
inc
inc
lock
inc
addb
ja
mov
mov
add
add
incl
add
incl
add
add
add
add
and
add
add
call
add
adc
add
add
sub
add
add
