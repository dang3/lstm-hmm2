mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
outsl
testl
pop
dec
outsb
je
addr16
and
rcrb
xor
add
jns
insb
daa
push
outsl
jb
add
pop
jns
incl
outsb
fsub
sti
pop
add
scas
adc
std
mov
nop
mov
or
jae
jb
or
push
out
or
aas
add
mov
mov
les
sub
jns
pop
push
dec
bound
arpl
pop
sbb
lock
pushf
insl
xor
int
jl
dec
jmp
arpl
sar
cmp
int3
addl
jmp
fdivrp
and
adc
int3
popa
mov
ja
ja
xchg
subl
pop
push
cld
sbb
out
aas
addw
add
add
cmp
adc
adc
std
lods
dec
jo
loope
adc
or
movsb
fldcw
insl
cmp
mov
push
pushf
in
in
cwtl
xchg
nop
adc
in
in
mov
adc
in
in
jo
push
in
pop
pop
push
in
in
or
dec
dec
jns
xor
cld
daa
clc
hlt
inc
sub
daa
call
sahf
cmp
cmp
icebp
loop
dec
sub
add
mov
mov
add
movzwl
mov
ss
pop
ret
addr16
sub
and
stos
cmp
add
popa
lcall
je
jb
inc
and
je
outsl
outsb
and
xor
in
in
adc
push
imul
push
jb
data16
push
mov
push
push
je
popa
clc
adc
gs
insb
outsl
jo
repnz
cmpxchg
ret
lods
jge
jmp
mov
mov
dec
add
inc
or
shll
or
or
or
in
push
dec
adc
push
adc
scas
xor
rcll
adc
fildll
fildll
mov
mov
add
sbb
cs
jp
add
imul
aas
inc
and
dec
in
pusha
cmpsb
sub
inc
dec
ror
xor
sub
xor
xor
cs
pop
xor
cmp
mov
mov
pop
cmp
das
rorl
sub
add
add
neg
std
insl
mov
mov
jl
push
cmp
add
js
enter
and
mov
inc
pop
add
mov
mov
cmc
mov
add
nop
fildl
rorl
push
sub
mov
shr
out
jg
add
mov
mov
and
pop
mov
out
clc
jge
add
ljmp
ja
mov
sbb
and
add
xchg
mov
dec
mov
mov
add
jbe
rol
sti
shl
or
sbb
in
push
stc
ret
cmpl
sbb
scas
loop
adc
inc
cld
add
orl
adc
dec
add
sbb
push
add
cmp
dec
pop
mov
jle
and
sub
test
push
mov
pusha
push
mov
inc
not
add
push
and
add
jbe
push
add
push
int
add
rclb
or
push
jbe
pop
mov
lods
mov
loop
mov
out
mull
cmpb
mov
sub
mov
mov
sub
sbb
xor
stc
out
mov
nop
cmpb
jmp
fstpt
imul
mov
add
add
clc
test
push
xor
add
add
push
push
push
mov
lea
movb
or
rorl
fwait
and
xchg
or
add
sub
mov
or
ja
push
jle
jg
pop
or
or
imul
lret
outsb
ret
adc
pop
pop
icebp
sti
pop
dec
mov
mov
sub
jae
in
mov
fidivrs
adc
mov
push
and
or
test
jne
in
std
dec
xchg
loop
jns
add
jmp
or
sbb
or
mov
mov
and
push
push
lea
or
push
jg
in
inc
or
push
jne
push
push
mov
cmp
rorb
pushl
sub
add
jmp
test
jne
lods
fimull
and
fisubrs
in
std
add
and
inc
loopne
repnz
sub
pusha
mov
adc
jecxz
jmp
fidivrs
loope
pop
pop
mov
mov
sarl
jbe
ljmp
shl
adc
xchg
xor
push
mov
call
cmpl
test
jo
fs
mov
xchg
adc
cmp
jae
mov
push
aas
dec
and
jae
fmuls
add
lods
iret
lea
movsb
sbb
es
sbb
mov
rolb
pop
or
pusha
jmp
lds
mov
jmp
mov
push
std
sub
add
add
inc
ret
push
mov
iret
fcomip
pop
mov
or
sub
shr
cmp
jb
sub
mov
addb
das
dec
and
out
mov
subl
cwtl
and
cmp
pusha
bound
dec
les
je
mov
dec
jo
push
mov
lock
mov
mov
push
add
idiv
je
sti
jg
test
add
movzwl
add
cmp
ja
dec
jbe
mov
cmp
adc
inc
loope
es
mov
lahf
jno
rorl
xorl
pause
jns
aas
jb
imul
jae
lods
cmp
ljmp
adc
je
xchg
or
jg
loopne
mov
sub
mov
add
or
mov
leave
cld
mov
cmp
push
ja
push
test
add
mov
xlat
jne
mov
test
btr
loopne
sarl
or
add
or
dec
jnp
sub
lea
mov
inc
jmp
sbbb
add
scas
fildll
cmp
jb
mov
xchg
in
idiv
int
enter
iret
sub
sub
cmp
and
inc
or
mov
rclb
mov
mov
movl
dec
cld
xor
das
mov
mov
pop
pusha
add
adc
scas
fsubrs
adc
push
or
imull
iret
mov
addr16
sub
dec
jecxz
xor
mov
lds
fucomip
movsb
or
faddl
pop
jle
xor
jne
lea
hlt
add
cld
or
pushl
and
inc
mov
fmuls
rol
or
jmp
mov
lahf
insl
pop
mov
add
push
bsf
mov
push
loopne
rol
loopne
xor
sbb
sub
xor
cmp
pop
cld
jmp
mov
dec
mov
ret
pop
or
inc
bound
cmp
cmp
adc
test
push
pop
xorb
jb
out
subl
or
testl
fisttps
jns
shll
test
roll
out
sbb
mov
jne
subl
icebp
leave
ds
inc
inc
cmpsb
leave
adc
fadds
data16
xchg
dec
cltd
sarb
pop
mov
test
adc
aad
push
aad
xchg
inc
adc
cmp
jne
outsb
fs
cwtl
and
push
cld
iret
push
icebp
push
dec
rorl
sub
xchg
scas
ljmp
mov
pop
leave
outsl
xor
dec
mov
jmp
aaa
inc
add
call
roll
fmull
scas
testl
sub
xor
testb
dec
ret
lahf
lock
cmp
inc
fiadds
mov
popa
ret
xor
xchg
mov
xlat
mov
mov
je
add
cmp
das
ret
pop
dec
clc
sub
sub
mov
xor
xchg
mov
lahf
mov
stos
flds
pop
out
add
movsl
movl
in
movl
loopne
add
jno
shr
dec
roll
pusha
aad
popa
in
or
in
or
cmp
jb
sbb
sbb
lret
jb
pop
inc
popa
jo
cmp
rorb
mov
ret
jg
or
decb
movsb
test
lea
push
mov
loop
roll
jne
and
add
hlt
sub
jbe
clc
iret
mov
call
xchg
xor
ljmp
cmp
push
and
cmp
push
fsts
sub
cmp
jb
sbb
push
pop
sti
adc
sub
adc
add
jp
jnp
and
stos
jmp
sbb
loopne
lds
add
sub
cmp
xchg
dec
das
push
jge
inc
mov
push
cmp
pop
cld
icebp
dec
or
or
mov
push
mov
add
or
popl
pop
data16
mov
roll
xlat
jno
pop
pop
sub
clc
addl
sahf
sub
add
mov
cmp
stc
call
icebp
inc
cld
test
mov
sbb
xchg
sbb
add
ljmp
cmpsb
imul
cmpsb
sarl
je
iret
ja
cmp
pop
es
pop
mov
call
ljmp
rolb
xlat
add
test
add
shlb
push
ret
andl
push
add
push
ss
adc
jb
lea
jl
inc
sbb
mov
push
pop
add
outsb
mov
dec
add
pop
sarl
jl
test
dec
iret
push
gs
add
xchg
aas
loop
cmp
ds
cmpsl
and
imulb
push
lea
jecxz
ja
fucomip
lea
or
jae
mul
xchg
fcmovnu
out
fstl
add
js
or
sar
mov
mov
das
ss
mov
faddl
rorl
ret
inc
incl
rolb
sbb
push
aad
adc
adc
jmp
jae
rclb
adc
aad
sub
and
jle
cmp
jne
mov
cmp
jbe
mov
mov
sub
sbb
test
sub
mov
stos
push
lods
pushf
jno
mov
cmpsl
push
mov
mov
cld
mov
fs
mov
loop
pop
shr
sbb
mov
add
enter
mov
fadds
insl
rcr
incl
aas
wbinvd
shrl
xchg
add
jbe
aaa
sbb
pop
push
nop
lret
sbb
sbb
add
jb
sbb
test
jg
aas
insb
dec
add
js
adc
inc
add
icebp
mov
loope
inc
inc
and
addr16
mov
push
aaa
loopne
cs
cli
mov
arpl
push
ljmp
jbe
or
mov
lock
push
jae
ss
mov
push
adc
mov
icebp
add
push
mov
inc
sbb
add
push
adc
hlt
jne,pn
push
testb
je
adc
hlt
pop
dec
sub
jmp
mov
pop
pop
push
bound
out
or
loop
call
mov
jge
push
data16
ret
lcall
mov
push
cmp
jne
test
daa
dec
movb
jnp
out
pop
lea
mov
and
lock
push
rcrl
pop
testl
and
shlb
jno
fstpl
pop
mov
dec
scas
mov
mov
stc
es
sbb
xor
inc
setne
xchg
sti
movsb
sub
aas
inc
sbb
inc
icebp
ficoms
adc
add
jp
and
xchg
mov
out
mov
or
outsb
lock
push
push
rorl
jl
inc
pop
mov
cmp
jne
fldt
push
mov
and
sti
jbe
or
jne
mov
ja
loopnew
cld
mov
cmp
sub
call
loopne
fists
ret
decl
inc
in
adc
shlb
mov
jns
adc
mov
adc
fcomps
push
rorb
movb
data16
test
pop
mov
je
mov
push
sub
jnp
push
or
cmpl
mov
xor
int3
or
dec
or
mul
clc
mov
inc
out
adc
test
jle
sbb
cmpb
out
fwait
enter
cmpb
jb
jo
mov
add
dec
loopne
test
mov
push
sub
cli
cmp
je
or
sahf
jge
cmp
in
movq
or
push
inc
fiadds
add
adc
mov
andb
xchg
aam
icebp
or
in
xchg
push
mov
pop
mov
mov
push
dec
jne
data16
test
push
xchg
ret
lea
sub
sti
push
and
inc
add
jo
lock
clc
push
cmp
lcall
or
inc
push
jb
call
jle
inc
les
add
or
push
cmc
inc
scas
loopne
pop
jmp
mov
and
xchg
fisttpll
sub
mov
and
fdivr
or
in
int3
loope
xchg
cmp
cmp
jecxz
jne
mov
int3
sub
jb
ss
mov
sbb
aaa
adc
daa
mov
jae
in
xchg
scas
ds
or
sti
mov
jge
dec
jl
cmpb
cmpsl
adc
negl
xchg
mov
xchg
dec
mov
fadd
test
jp
mov
adc
dec
jb
sahf
mov
cmpsb
cld
dec
loopne
shrl
add
scas
in
scas
mov
mov
xlat
mov
or
ds
repz
xchg
fcomps
cmp
rolb
movb
inc
push
or
pop
inc
loopne
int
dec
adc
and
sbb
mov
imul
fs
out
pop
sbb
pop
jmp
mov
xorl
push
and
sarb
xchg
movzbl
scas
fldcw
dec
das
js
pop
pop
jno
pop
dec
pusha
or
xor
push
pop
incl
add
andl
fdivp
push
lcall
sub
stos
push
sbb
filds
imul
lds
js
outsl
mov
testl
mov
or
imul
into
mov
push
xchg
push
push
xor
insb
adc
mov
push
ss
outsb
and
gs
ljmp
loopne
enter
insl
gs
outsl
jb
pop
popa
imul
popa
jae
outsl
add
arpl
fs
incb
pop
jae
popa
insb
insb
and
dec
imul
or
or
es
mov
addr16
outsb
imul
outsb
add
idivb
jae
xchg
jp
mov
cltd
xorl
nop
outsb
and
jo
mov
lahf
mov
das
cmp
dec
cli
push
push
xor
xor
mov
jb
movl
in
pop
mov
into
add
add
clc
jbe
mov
add
inc
add
cmp
jne
mov
xchg
mov
cmpsb
push
mov
cmp
jl
in
inc
clc
or
sbb
movl
jmp
add
out
into
dec
xor
jae
mov
rolb
cmp
jbe
ja
dec
mov
pushl
push
in
loopne
add
mov
mov
xor
loope
lea
add
shll
mov
mov
aaa
lret
jbe
mov
cmp
xlat
mov
push
pop
int
xor
div
imul
mov
or
mov
icebp
mov
in
dec
inc
xor
hlt
sbb
movl
mov
mov
mov
jnp
inc
add
or
repz
cmp
xor
lods
jb
push
mov
out
ficoms
jne
mov
jmp
mov
sarl
cmp
xchg
push
mov
cmp
jne
mov
ret
out
mov
dec
adc
insb
inc
or
or
or
and
stos
sbb
cmp
imul
dec
mov
outsl
push
sbb
mov
mov
push
out
lea
cmpl
jg
mov
jge
mov
sub
mov
iret
popf
iret
or
pop
sbbb
sbb
pushf
movl
dec
adc
repz
ret
mov
add
call
sub
mov
xor
adc
addr16
sar
jg
add
xor
mov
inc
xor
or
xor
mov
test
cld
pusha
jo
arpl
ss
pop
mov
mov
mov
lds
sbb
mov
mov
inc
mov
mov
enter
cmpsl
lock
out
adc
test
xchg
add
jecxz
sahf
or
in
aam
in
or
hlt
jne
mov
push
cwtl
lahf
cwtl
push
jmp
cmp
ja
movzbl
add
inc
movsb
neg
or
pop
nop
scas
push
add
fucomp
or
loopne
push
push
xor
pop
pop
jne
ds
js
mov
out
call
iret
pop
testb
inc
or
je
ljmp
outsl
pop
jle
cmp
jg
sub
inc
fdivrl
sarl
mov
inc
repz
decl
mov
jmp
mov
jmp
mov
insb
adc
pop
repz
cmp
fmull
cmp
je
cmp
ja
sub
mov
jmp
and
in
sub
sub
or
adc
adc
int3
inc
push
push
or
int3
rorl
dec
dec
sahf
out
sahf
pop
popa
insb
jns
push
mov
lea
dec
or
adc
flds
fsubrp
push
add
cmp
jle
loopne
fisttpl
or
shrl
lret
adc
jbe
adc
mov
add
and
sub
pop
inc
cmc
pop
incl
insl
aas
fmuls
mov
or
xlat
fucomp
ja
inc
add
mov
push
and
add
mov
into
dec
add
pop
cmp
push
add
stos
mov
adc
ret
mov
jbe,pn
fucomp
or
inc
lock
or
jbe
and
cmpb
add
xor
std
in
mov
jmp
sub
mov
fimuls
fisubrs
ret
add
js
inc
mov
adc
push
out
mov
outsl
mov
inc
nop
mov
pop
jne
pusha
push
nop
arpl
loopne
or
out
add
inc
sbb
iret
frstor
orl
pop
clc
mov
fidivl
mov
jo
divb
push
add
fisubl
fnstsw
jmp
mov
fbstp
and
mov
add
dec
jmp
mov
clc
ljmp
or
mov
add
movsl
out
das
pop
xor
imul
dec
cmc
mul
xor
cmp
ja
sub
call
mov
fldcw
cmp
pop
outsl
ja
insl
push
sub
adc
or
fstps
testb
fwait
orw
insb
fistps
add
pop
xchg
stos
neg
sub
pop
inc
lods
sub
repnz
or
or
nop
daa
sbb
dec
add
jmp
data16
mov
or
call
lods
sbb
pop
cmp
js
cmpsb
pop
cmp
and
mov
inc
and
cli
mov
sbb
cwtl
aas
mov
mov
imul
ja
and
adc
xor
add
sbb
fcomip
adc
lahf
jmp
cmp
dec
shr
mov
pushl
ds
mov
mov
xor
mov
inc
add
jb
cmp
ja
mov
push
shll
pop
add
xlat
xor
mov
sub
std
in
pcmpeqd
mov
sub
inc
xchg
xchg
stc
mov
sbb
lret
jbe
mov
mov
inc
inc
loopne
test
mov
add
push
xchg
inc
inc
in
mov
ret
je
mov
mov
cmp
jne
dec
je
mov
add
pop
add
aaa
add
sahf
loop
sti
scas
fidivl
add
push
cmp
jne
push
mov
mov
cmp
jne
adc
add
jne
add
jmp
dec
in
adc
cmp
jne
shr
sarl
add
push
mov
shr
or
test
cmp
pop
cmp
mov
rol
pop
and
mov
cmp
int
or
dec
dec
dec
and
andb
xlat
add
cli
clc
int
cmp
das
movsb
pusha
push
add
ljmp
or
cmc
add
push
add
outsl
fistpl
neg
sub
or
rcl
push
mov
ss
add
idiv
cmp
push
sub
xchg
jmp
sahf
out
iret
cs
sbb
sbb
push
adc
sahf
out
adc
push
or
adc
es
push
or
ret
pop
mov
mov
mov
push
inc
cmp
out
sti
and
add
je
and
rcr
int
je
pop
je
xor
dec
and
std
pop
mov
test
jmp
or
or
cmp
ja
test
and
fcoms
out
int
or
incl
jmp
inc
mov
fdivrs
js
pop
sub
jmp
inc
inc
sub
popf
cmc
jmp
mov
xorb
cmpsb
popf
mov
xchg
and
add
or
pusha
xchg
scas
leave
shl
stos
aad
cwtl
pop
cmp
sbb
xor
mov
mov
push
cmp
sbb
mov
dec
jne
pop
testb
mov
and
xchg
dec
cs
shr
fs
jl
pusha
xor
cmp
cmpl
adc
in
fldt
leave
enter
loop
jns
pcmpeqb
cmp
adcb
push
and
jmp
pop
xchg
lret
xchg
jge
mov
xor
pop
push
cltd
stc
sbb
jmp
fstp
fldt
adcl
adc
out
mov
xchg
arpl
mov
adc
mov
push
repnz
inc
pushf
or
pop
stc
in
ret
mov
adc
xchg
jl
mov
out
sbb
add
clc
repnz
mov
lock
test
push
xor
out
sub
pop
jecxz
add
leave
sbb
cld
lret
lds
mov
jbe
imul
cmp
dec
cld
mov
mov
bound
cmpb
xlat
fadds
rep
nop
lods
outsb
xor
xchg
push
or
push
push
jmp
dec
into
sbb
rorl
mov
push
pop
test
enter
mov
inc
mov
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
jmp
int
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
in
dec
pop
js
inc
mov
stos
mov
cmp
or
mov
pop
out
loop
ljmp
mov
imul
divl
jl
xor
cmp
call
mov
mov
jle
push
inc
mov
push
sbb
sarb
repnz
test
nop
decl
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
call
repz
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
pop
or
pushl
xchg
leave
dec
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
cld
rclb
popa
pushf
mov
and
addr16
repz
mov
incl
mov
push
pusha
les
outsb
bound
xor
jmp
inc
xor
sub
xor
insb
sarb
sbb
add
and
or
and
rcr
mov
dec
js
sbb
movzwl
fwait
std
inc
clc
lea
push
push
inc
or
hlt
mov
jne
xor
push
push
mov
pushl
mov
movl
data16
pop
ja
roll
and
pop
pop
std
ljmp
in
sub
ret
sub
jmp
fidivs
jecxz
and
pop
aas
or
clc
mov
push
dec
inc
push
push
inc
push
inc
pop
lcall
gs
jo
imul
push
dec
popa
jae
push
scas
jo
loop
insb
jne
fninit
fwait
in
clc
sbb
mov
idiv
call
stos
lret
aas
xlat
mov
xor
mov
inc
rep
mov
add
or
cld
int3
leave
out
cmp
push
push
ja
xchg
cmp
daa
jl
inc
sbb
push
movnti
das
and
and
pop
sbb
dec
add
xchg
ret
xor
fnsave
and
mov
rolb
addb
sti
sti
std
sub
or
cwtl
mov
sbb
jle
lock
push
mov
rcr
test
mov
les
xchg
push
btc
fcoml
in
fs
mov
cmp
push
stos
insb
xor
in
pop
mov
push
add
jl
call
ret
sahf
subb
fdivs
rclb
add
stos
pop
and
rep
mov
mov
sub
pushf
add
pop
fsubrl
clc
in
cmp
je
jbe
add
jae
ss
push
loope
std
mov
mov
push
sbb
jne
jne
sub
add
mov
jbe
pop
loop
adc
inc
movsb
fdivs
cmp
fidivs
paddd
shufps
add
mov
mov
add
sbb
push
and
outsl
clc
mov
ja
pop
out
pop
clc
mov
mov
inc
mov
test
subl
sub
and
adc
add
mov
shr
mov
push
callw
pop
lea
push
in
mov
sub
insb
clc
mov
push
dec
lds
cmp
shll
outsb
and
add
mov
in
inc
sahf
xor
xor
jb
jo
jne
push
or
aaa
or
or
push
inc
sbb
push
inc
fcoml
mov
scas
add
jmp
pushf
add
cmp
dec
aas
lods
rorl
mov
cld
inc
fistpll
jne
mov
in
push
xchg
jmp
lret
test
test
add
scas
je
pop
in
test
call
sbb
pop
add
sub
mov
pop
cs
xchg
les
pop
add
cmp
pop
ljmp
mov
mov
xor
das
mov
or
es
loop
out
les
jle
xchg
pop
push
data16
sub
cmp
test
fstpt
inc
push
stos
fiaddl
pop
pop
gs
cld
in
popa
lock
ds
mov
adc
pop
int3
xchg
adc
mov
std
add
sbb
add
dec
jne
icebp
fucomi
sbb
ret
incl
mov
xor
and
jne
dec
cmp
fists
push
popf
enter
inc
pop
sbb
fcompl
sbb
pop
mov
lahf
in
push
pop
add
mov
lcall
push
hlt
xor
lea
mov
mov
mov
movl
sarl
inc
or
or
pop
cmpsb
cmp
inc
sub
or
jmp
mov
push
mov
xor
or
adc
push
clc
addr16
sub
sarb
inc
xor
imull
xchg
inc
in
jae
gs
testl
sub
mov
idivl
shlb
out
ja
pop
pop
xchg
pop
addl
cli
in
push
pushl
adc
aaa
lock
add
in
pop
xchg
dec
sahf
dec
cs
add
add
jae
xor
pop
push
push
and
sbb
jmp
mov
or
jne
movsbl
inc
inc
jmp
add
mov
popa
addr16
jecxz
cmp
cwtl
xchg
or
sbb
loop
fdivrl
adc
jecxz
pop
movb
clc
cmp
inc
add
jne
pop
sbb
cmp
inc
mov
adc
outsb
pop
loopne
cmp
adc
test
cmp
add
shlb
out
jg
xchg
lcall
into
cli
out
push
je
dec
jge
dec
inc
push
test
lea
add
inc
xchg
fidivs
clc
add
stos
mov
jo
leave
cmc
adc
xor
jne
jbe
adc
cmp
je
orl
and
add
sbb
pop
sbb
cmp
sub
push
cmpsl
sarb
sub
mov
cld
adc
lock
pop
mov
jecxz
lods
fisttps
dec
adc
xor
push
xor
mov
xor
or
add
pusha
sub
repz
cwtl
push
or
and
cltd
pop
add
lds
aas
cltd
orb
mov
lods
aas
jb
add
dec
fdivrs
dec
fadds
rclb
loope
mov
or
push
std
mov
and
fsubl
jne
outsb
ljmp
adc
push
mov
arpl
sbb
enter
push
adc
xor
adc
mov
mov
jno
mov
pop
adc
es
or
dec
pusha
inc
movsb
jmp
pushf
adcb
outsb
jb
inc
mov
sub
enter
aaa
add
cmp
shrl
add
push
push
in
call
std
lods
adc
and
jmp
dec
test
inc
in
push
dec
imulb
pushf
loopne
inc
in
loopne
push
out
mov
outsl
or
fdivrs
call
push
push
or
sbb
leave
mov
dec
das
adc
idivb
inc
sahf
sbb
incb
inc
or
pusha
add
inc
or
jo
cmp
dec
sahf
test
fwait
negb
inc
adc
adc
add
repz
pop
mov
push
sbb
cld
pop
and
adc
loop
xor
add
shrl
jo
sbb
or
ja
ss
mov
cmp
je
sbb
mov
adc
push
sub
scas
adc
dec
je
jmp
add
add
je
jmp
cmp
out
push
adc
xchg
cs
adc
jmp
sub
sbb
es
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
or
inc
inc
lret
movzbl
push
or
adc
movswl
xchg
sbb
jo
leave
je
push
mov
dec
or
xor
dec
lahf
icebp
push
outsb
inc
sbb
fldl
insb
cli
sub
addl
popf
inc
pushl
xor
push
xchg
jo
cmpb
pop
cs
sbb
fidivs
inc
mov
addb
mov
enter
push
lret
int
sbb
mov
cmp
or
add
or
cmp
jne
orb
cmc
and
loop
lock
sbb
js
dec
jle
jge
test
jle
dec
mov
je
add
fmuls
pop
and
sub
mov
jmp
mov
fisubrl
or
dec
leave
fisubrs
or
ds
mov
in
sti
jle
jbe
fadds
dec
ds
xlat
iret
cmp
jg
cmpsb
push
mov
add
xchg
cmpb
xor
or
popf
mov
sub
jb
fldl
clc
ss
lahf
xchg
ret
dec
xor
mov
sbb
push
mov
mov
add
js
ljmp
cli
dec
jne
pop
pop
dec
add
mov
out
movsl
imul
pop
mov
mov
sbbb
stc
add
cwtl
mov
and
and
mov
icebp
mov
dec
mov
add
loopne
and
test
rorl
jbe
mov
pop
push
scas
adc
out
mov
fcomps
rolb
mov
cmpsb
outsl
jbe
outsl
fwait
in
ja
add
mov
mov
or
push
xchg
xor
push
bound
out
loopne
mov
cmp
mov
add
or
inc
dec
push
push
sbb
bnd
push
out
xor
inc
pop
xlat
test
jne
mov
mulb
fs
cmp
mov
pop
sarb
fsub
pop
gs
sub
je
lock
jnp
lcall
icebp
cmp
cs
fsub
sti
mov
mov
cmp
daa
data16
faddl
lret
xor
ds
xor
jnp
sub
test
sahf
sbb
push
sbb
js
filds
je
loopne
aaa
test
pop
mov
insl
or
dec
adc
sbb
test
in
cwtl
sbb
scas
pop
add
adc
add
add
add
mov
push
test
popl
push
ficoml
adc
jb
adc
cwtl
lods
sub
xchg
push
xor
push
out
sbb
and
mov
mov
pop
pop
pop
mov
dec
add
or
push
mov
rolb
into
xor
mov
or
jmp
mov
movsb
sbb
repnz
add
push
push
or
push
mov
push
push
lret
cmpsl
push
cmpsb
add
mov
cmp
lahf
adc
pop
pop
pop
mov
pop
mov
dec
clc
dec
jl
lock
clc
rorb
pop
jg
jb
scas
adc
push
sbb
add
or
add
sub
dec
jne
dec
push
push
fbld
inc
jg
sbb
cmp
push
pop
mov
pop
push
dec
and
out
inc
insb
xchg
adc
adc
xchg
das
xchg
jle
aas
insb
cli
cmp
add
ljmp
lea
mov
or
movl
cld
inc
push
xorb
mov
mov
das
js
nop
test
sahf
les
sarb
mov
aaa
ret
cmp
pop
adc
popa
xor
je
add
out
inc
cmp
add
sub
sbb
add
outsl
inc
aas
sub
xchg
jmp
lea
cmp
xchg
cmp
push
cld
pop
rorb
loop
decl
iret
cmp
push
jl
sti
lahf
rorb
mov
int
mov
add
sbb
cmpsb
into
rcl
push
fisubl
mov
jge
xor
ret
pop
cmpsl
push
mov
mov
loopne,pn
mov
push
cmp
je
and
aam
push
cmp
add
jo
sti
in
cs
mov
pop
sub
jmp
in
lahf
pop
sub
and
pop
pop
or
push
mov
addr16
in
add
popf
je
int3
mov
inc
xchg
inc
add
add
push
xor
push
jl
das
lock
rcrl
mov
jle
scas
outsl
push
je
pop
cld
and
cmp
jl
orb
xchg
aas
idiv
cld
dec
js
pushf
push
pop
inc
out
test
outsl
js
inc
jmp
jns
push
cld
add
mov
inc
lock
cmp
push
sub
es
cmp
jo
repnz
sub
arpl
xor
adc
or
lahf
cmp
scas
mov
ds
rorl
add
das
lcall
rorb
sbb
mov
add
pop
push
xchg
in
popa
mov
pop
lret
mov
lret
cmpsb
mov
jbe
lds
pushl
cmp
cld
and
inc
cld
dec
jmp
jbe
or
push
fs
data16
pop
cmp
nop
push
dec
jne
mov
idiv
lahf
loopne
add
cld
popf
cmp
pushl
add
dec
jmp
inc
xlat
bound
pushf
jb
jg
scas
xchg
add
jne
addb
sahf
in
loopne
adc
adcl
and
jmp
and
jle
pop
xor
out
cli
or
or
movsb
pop
cld
sub
push
adc
and
sub
sub
sub
mov
xor
je
js
mov
mov
jmp
add
jns
mov
cmp
icebp
in
add
pop
and
or
mov
mov
ret
cmp
push
into
push
clc
inc
or
sub
mov
in
add
sti
cmp
jmp
push
cmpsb
movsl
bound
gs
cmp
dec
inc
lret
shlb
dec
shlb
jae
adc
push
in
adc
jg
mov
cmp
jge
sub
roll
sarb
add
loope
mov
aas
adc
shr
in
jmp
and
cmc
adc
iret
xchg
jp
dec
jl
int3
jge
incl
push
mov
icebp
ss
stc
add
lea
clc
mov
pop
inc
dec
cmp
out
mov
or
dec
cltd
mul
mov
mov
push
cmove
lods
cmp
subb
imul
add
gs
cmp
fimuls
add
loopne
adc
lock
push
add
mov
test
std
mov
mov
cmpsl
out
jg
add
sahf
dec
enter
cld
fdivrl
sub
jl
sbb
add
add
mov
fcoms
neg
scas
xchg
jp
je
test
or
inc
jl
je
dec
movsb
cmp
jb
or
jb
stc
pop
sub
jmp
outsb
and
movsl
sbb
dec
add
ret
mov
shrb
js
adc
jbe
imul
xor
push
xor
inc
push
or
dec
push
shll
shll
mov
ss
jo
sbb
xor
jne
mov
shr
sbb
jne
push
icebp
adc
xor
arpl
loopne
sub
mov
xchg
adc
js
scas
sbb
adc
stos
loopne
int3
pop
cmp
gs
in
sub
arpl
out
push
cmp
and
daa
push
pushf
dec
cmp
xlat
jle
loop
int3
cltd
pop
xor
cmp
mov
lods
mov
cli
or
fs
adc
push
push
das
and
mov
push
push
sub
pop
cmpsl
cmp
inc
sub
or
lcall
xor
popf
push
sbb
insl
add
inc
adc
inc
push
jmp
and
jle
inc
jmp
mov
nop
add
adc
inc
pushf
mov
js
pushf
inc
pushf
aas
data16
xor
aaa
enter
data16
pop
pushl
mov
sub
pusha
sub
add
add
add
mov
add
push
xor
adc
mov
cld
shr
pop
sbb
les
inc
push
xor
ljmp
or
mov
fistpl
add
inc
and
mov
push
cmpsb
or
pop
das
or
cmp
sbb
adc
stc
xchg
mov
pusha
clc
movsl
lock
jge
pop
dec
cmp
nop
jle
outsl
negl
ret
cmp
push
lods
add
add
dec
or
inc
jp
fistpll
js
sti
sbb
sub
cmp
cmp
jle
mov
add
xchg
aam
inc
lea
sbb
loop
push
popf
inc
pop
inc
and
mov
cwtl
into
inc
aaa
push
mov
lea
mov
mov
pop
call
adc
xor
lds
fisttps
xchg
ret
add
push
cld
out
cli
or
or
cmp
je
cmp
je
cmp
lret
je
and
or
fistl
jp
clc
jmp
adc
dec
imul
adc
jmp
push
mov
mov
mov
stos
or
cs
cs
adc
popf
sub
jmp
cmp
inc
sub
jns
add
xlat
push
jmp
lahf
inc
sbb
jmp
fstpt
jp
adc
mov
mov
cmp
adcl
sahf
out
push
and
inc
adc
mov
pop
fstcw
inc
mulb
lcall
lret
cmp
loopne
jmp
push
cmp
sub
jmp
inc
sbb
sub
jb
shr
sub
or
sbb
cmp
and
ret
pushf
icebp
jmp
fisubs
adc
dec
push
shlb
pop
jle
jno
enter
cmp
mov
push
sub
cmp
outsl
jp
jb
xchg
mov
xchg
lock
or
out
inc
loopne
dec
inc
enter
push
dec
pop
xor
xchg
dec
adc
rcll
and
pushf
ret
sbb
adc
enter
add
cld
dec
dec
clc
push
aam
aaa
add
sub
jle
ret
addr16
mov
adc
mov
out
lock
cmp
xor
or
je
cmp
out
or
jo
adcb
push
push
pop
or
xor
inc
push
dec
mov
jmp
and
insb
lea
adc
adc
js
jo
sti
popa
pop
iret
pushl
or
push
pop
jmp
aas
popa
in
fcomp
add
sarl
xor
mov
xchg
enter
ds
lock
or
adc
pop
add
fimull
rorb
sbbb
xchg
pop
mov
and
mov
in
cs
dec
in
push
popa
jg
sbb
nop
inc
sahf
mov
jmp
and
out
sub
cmp
inc
mov
jl
sbb
lcall
les
push
loope
xor
add
or
pushl
lock
pop
add
inc
call
out
js
cmc
mov
cmp
add
je
cmp
pushf
iret
push
cwtl
adc
or
sbb
pop
ret
es
dec
inc
mov
adc
hlt
test
movsb
pop
outsl
mov
xchg
add
mov
mov
pushl
cmp
and
add
xchg
adc
pop
pop
ret
clc
sub
pusha
inc
in
mov
mov
lock
bound
iret
xchg
popa
push
or
lcall
adc
mov
repnz
les
jl
ficomps
mov
inc
sbb
in
out
sbb
inc
jmp
cmp
jne
mov
inc
and
sub
je
jle
sub
xor
das
and
testl
mov
mov
add
sub
jb
outsl
mov
sub
jb
add
or
jmp
xor
sub
jmp
getsec
movsl
fadd
lret
jmp
push
subl
or
jb
jmp
jl
andl
mov
pushl
jmp
jg
mov
cltd
sbb
bound
movsb
loop
mov
inc
add
lock
ret
or
xor
enter
inc
insl
and
test
insb
xor
cmp
add
ficoml
stos
shlb
adc
inc
jns
movsb
sbb
dec
inc
js,pt
and
jne
adc
int3
and
jg
jp
inc
mov
dec
js
xor
mov
dec
daa
jmp
cltd
sub
pop
sbb
add
je
sbb
setb
jmp
setl
cmp
je
push
nop
ret
add
rorb
pusha
mov
mov
mov
sub
adc
or
and
es
dec
aam
dec
loopne
and
int3
decl
push
cs
pop
push
mov
repnz
iret
push
cmp
sbb
fiadds
dec
or
mov
sbb
sbb
loope
sbb
xchg
out
sahf
mov
add
push
fs
sbb
sub
push
jo
adc
fmuls
testb
dec
ss
fbld
into
in
idiv
cmp
je
andl
ljmp
or
xor
jge
jge
fildl
out
xlat
imul
sti
mov
sub
push
lea
mov
pop
mov
aad
pop
jmp
decl
stos
pop
inc
cmp
lret
in
jge
or
push
in
test
in
push
mov
adc
into
stos
in
mov
push
mov
sub
jge
sub
mov
mov
cmp
push
sub
lahf
test
insl
xor
add
cmpsl
cmpl
jle
cwtl
or
ja
xchg
xchg
fidivrs
int
mov
jl
lds
cmp
clc
test
push
dec
jne
insb
icebp
insl
jl
mov
push
aaa
push
addl
cmp
decl
dec
clc
jne
scas
add
lock
push
int3
xchg
inc
mov
inc
pop
ja
in
data16
aaa
in
rcrl
push
push
mov
incl
shlb
cmp
pop
lahf
cltd
test
lock
in
inc
ret
inc
sbb
sahf
nop
add
push
add
ret
inc
outsl
push
or
popa
insb
inc
sub
jnp
jne
clc
ret
pop
mov
arpl
mov
mov
mov
cwtl
push
inc
fs
sbb
je
out
sbb
cwtl
push
and
jae
or
add
cmp
clc
jmp
ret
and
cmp
xor
insb
sub
aas
scas
clc
lret
and
sti
pop
jne
les
add
out
enter
mov
jmp
push
andb
movsb
gs
shl
out
inc
push
lods
mov
add
das
popf
test
call
and
idivb
sub
sbb
sbb
test
pop
sti
sbb
repz
mov
sbb
and
dec
fidivl
jne
push
mov
sub
fdiv
outsb
clc
lea
mov
rorl
inc
cmp
mov
push
push
addr16
xlat
into
xchg
imul
lahf
insb
inc
lock
je
fdivrp
fmull
cmpsb
add
lods
jg
movb
imul
in
ret
dec
push
push
movl
roll
cld
imull
shrb
pop
or
pushl
cli
ljmp
jb
gs
xor
cs
insb
movl
addr16
popa
je
sub
insl
gs
and
loopne
jecxz
pop
jle
jecxz
daa
pop
sarl
sti
movb
int3
push
mov
nop
data16
add
add
xor
repnz
cmp
xchg
push
test
sbb
push
cmp
dec
cwtl
jns
push
sub
out
xchg
into
pusha
addl
fldcw
iret
adc
add
or
mov
repnz
mov
cmp
mov
xchg
sti
xor
jecxz
push
lods
repz
ret
std
xlat
sbb
mov
xor
rep
or
push
rcll
stos
imul
sbb
add
negb
lock
cmp
jne
adc
out
sahf
popf
inc
xorl
ret
daa
js
push
or
push
les
icebp
je
das
outsl
mov
add
repz
cmc
add
test
mov
fstps
mov
mov
and
inc
cltd
push
and
nop
cmp
push
inc
idivl
es
adc
mov
jb
mov
mov
cmp
pop
loopne
fidivrs
lds
mov
push
mov
cmp
mov
daa
mov
mov
pop
adc
loopne
pop
mov
push
aad
sub
mov
fiadds
mov
aam
fxch
dec
je
jecxz
mov
dec
es
inc
push
add
jecxz
push
sti
or
shl
cmp
mov
dec
cmp
or
addl
inc
add
in
ficoml
jg
cmp
ret
push
mov
pop
mov
pop
jo
push
cld
jne
je
or
pusha
ljmp
lcall
add
push
or
loop
sub
test
push
or
outsl
pusha
pop
mov
pop
fldt
push
inc
rcrl
ret
cmp
data16
call
push
push
mov
adc
xchg
sbb
mov
pop
pop
inc
ret
ret
sbb
rorl
fnstenv
js
add
ret
add
pop
sub
pop
pop
test
add
lock
adc
sub
lret
cwtl
add
insb
outsb
sbbb
pop
or
push
fidivs
or
jb
lcall
loope
cltd
ja
stos
and
xchg
pop
outsb
pop
sub
inc
mov
lea
dec
fldl
cmp
xchg
cs
loopne
xor
dec
inc
cmp
ja
jg
sub
inc
jmp
inc
pop
xor
cld
in
xorb
shr
or
mov
adc
sbb
mov
and
lret
add
pusha
add
mov
and
rolb
fscale
aaa
cmp
jae
cmp
jb
or
dec
movb
loopne
adc
loopne
dec
rcrl
add
cmp
lea
lret
push
ret
mov
andb
dec
pop
js
bound
adc
mov
out
cld
loopne
lahf
hlt
mov
mov
xor
roll
mov
xlat
dec
loope
and
je
cmp
ja
outsl
mov
and
cmp
jne
fidivrl
shl
or
mov
push
lea
jg
inc
dec
cld
mov
out
adc
lahf
add
nop
or
xorb
out
adc
or
movl
pusha
jmp
inc
mov
ret
aaa
inc
or
stos
sbb
adc
pop
idiv
xorb
sbb
or
jb
inc
dec
test
adc
pop
sbb
packsswb
nop
mov
cld
lods
mov
int3
je
add
dec
add
xor
pop
mov
ret
cwtl
fisttpll
cmp
mov
lods
test
test
sbb
dec
ja
or
aam
push
xchg
imul
imul
inc
jb
xchg
pop
imul
jo
pop
cmp
mov
mov
push
lcall
xchg
pop
inc
pusha
add
jae
push
xorl
mov
pop
je
test
enter
inc
push
inc
mov
imul
and
inc
push
mov
lock
sbb
popa
popa
outsl
rorb
rorb
xchg
arpl
pop
mov
jbe
add
sbbl
ret
cmpl
cwtl
mov
rorb
roll
int3
or
push
clc
add
pop
sub
jmp
sarb
pop
dec
xor
orl
push
sub
rorb
adc
mov
push
sub
inc
jo
mov
out
or
xchg
xchg
mov
into
mov
mov
xor
sbb
test
or
rclb
cmp
pop
clc
sbb
fnsave
cmpl
push
adc
loop
add
pop
testb
push
push
cs
aaa
push
rorb
or
cmp
lcall
insb
add
jns
push
dec
push
mull
loop
mov
ret
mov
loop
mov
push
xchg
mov
adc
mov
mov
insb
idivb
movsb
or
mov
cmp
aaa
cld
pop
daa
push
push
or
or
or
add
movsb
xchg
or
mov
xchg
sub
dec
rcrb
out
jle
shr
push
insb
xchg
sub
ja
enter
sti
outsb
add
push
or
insl
ja
add
dec
push
dec
inc
aaa
mov
std
ja
testl
mov
fs
gs
aas
jnp
sub
adc
jb
jns
es
imul
bound
inc
push
outsl
arpl
out
mov
jne
je
dec
outsl
je
imul
jge
std
mov
ds
outsl
inc
arpl
or
insl
int
ret
or
jb
xor
xor
jg
loopne
outsl
insl
bound
outsl
js
pop
push
imul
outsl
ja
nop
outsb
cmp
andps
outsb
dec
inc
xor
mov
mov
push
sti
add
dec
cld
sub
jb
lock
jb
aam
jb
jb
int3
enter
jb
sarb
mov
test
jb
jb
mov
jb
jb
mov
jb
jl
je
jb
jb
insb
push
jb
pop
pop
push
jb
jb
push
dec
dec
inc
jb
jb
inc
cmp
xor
jb
jb
sub
and
jb
jb
sbb
adc
jb
jb
or
add
sbb
add
sub
hlt
cmp
cmp
lock
call
cmp
aam
cmp
cmp
int3
enter
cmp
sarb
mov
test
cmp
cmp
mov
cmp
cmp
cmp
cmp
insb
cmp
cmp
push
cmp
cmp
push
dec
cmp
cmp
dec
inc
inc
cmp
cmp
cmp
xor
sub
cmp
cmp
and
sbb
cmp
cmp
adc
or
cmp
cmp
add
cld
sub
lock
pushf
pushf
pushf
pushf
call
pushf
pushf
pushf
fcom
ror
pushf
pushf
pushf
pushf
enter
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
test
mov
pushf
cwtl
xchg
nop
mov
cmpb
pushf
js
jo
pushf
pushf
pushf
pushf
fs
push
dec
pushf
pushf
pushf
pushf
inc
inc
push
dec
pushf
pushf
pushf
pushf
pop
pop
cmp
pushf
pushf
pushf
pushf
xor
sub
pushf
pushf
pushf
pushf
and
sbb
pushf
pushf
pushf
pushf
adc
or
inc
sahf
pushf
pushf
add
cld
sub
dec
dec
dec
dec
hlt
lock
call
in
fmull
dec
aam
int3
mov
pushf
sarb
mov
test
pushf
pushf
pushf
movsb
mov
pushf
pushf
xchg
nop
mov
test
pushf
pushf
je
insb
push
fs
pop
pop
pushf
pushf
pushf
pushf
push
push
dec
dec
pushf
pushf
pushf
pushf
inc
inc
cmp
pushf
pushf
pushf
pushf
xor
sub
pushf
pushf
pushf
pushf
and
sbb
xchg
xchg
fildl
enter
or
cld
sub
lock
pushf
pushf
pushf
pushf
call
pushf
pushf
pushf
fcom
ror
pushf
pushf
pushf
pushf
enter
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
test
mov
pushf
cwtl
xchg
nop
mov
cmpb
pushf
js
jo
pushf
pushf
pushf
pushf
push
pushf
pushf
pushf
pop
push
push
dec
leave
leave
test
leave
leave
cmp
xor
leave
leave
leave
leave
sub
and
leave
leave
leave
leave
sbb
adc
leave
leave
leave
leave
or
add
in
fs
sub
hlt
lock
in
in
call
in
aam
in
in
int3
enter
add
test
addl
xchg
mov
adc
lock
and
or
adc
sahf
out
sbb
and
aam
loopne
and
imul
cltd
and
cmp
jl
cmp
xlat
add
shrb
jp
and
ret
in
inc
cmp
push
mov
push
mov
push
sbb
pusha
or
jne
push
gs
and
sti
in
sub
cmpl
pop
lods
str
or
lea
popa
gs
sar
aaa
add
and
push
dec
inc
inc
dec
add
outsl
scas
std
in
mov
pop
push
dec
dec
dec
push
inc
push
dec
sti
fdivrp
mov
push
push
dec
push
push
pop
sub
push
inc
dec
pushf
dec
popa
mov
inc
push
das
pop
cmpsl
jp
xor
out
call
or
inc
scas
mov
cmpsb
psrld
jo
icebp
jb
jb
repnz
cmc
jb
jb
div
clc
stc
jb
jb
cli
sti
cld
std
jb
jb
jmp
loope
jb
jb
jecxz
in
jb
jb
out
jmp
ljmp
jb
out
rcl
jb
jb
rcl
aam
jb
jb
xlat
fcomp
jb
jb
fcmovu
jb
jb
rol
jb
jb
ret
lds
jb
mov
leave
jb
jb
lret
int
jb
jb
iret
mov
jb
jb
mov
mov
jb
jb
mov
mov
jb
mov
jb
mov
jb
jb
mov
jb
cmpsb
cmpsl
test
jae
jb
stos
stos
lods
lods
imul
push
push
inc
outsl
out
jo
add
adc
add
adc
je
insb
jae
fmull
or
fbld
sbb
nop
in
push
push
or
popa
jb
push
nop
pusha
js
fsubrs
adc
jle
loopne
mov
in
scas
data16
fnstsw
push
mov
movl
js
gs
mov
mov
mov
aas
xchg
push
inc
inc
bound
je
adc
das
js
mov
fdivs
dec
inc
jnp
or
insb
mov
push
leave
leave
insb
les
mov
push
outsl
testl
or
outsb
mov
inc
jb
mov
subb
movsb
jb
shr
es
xchg
sub
js
jg
mov
fdivrs
add
push
sbb
cs
sub
xor
mov
aas
xchg
or
imul
mov
jb
scas
mov
mov
popa
outsb
gs
loopne
data16
or
dec
outsb
jbe
jb
insb
outsl
ja
dec
xor
cmp
cmp
inc
and
dec
in
inc
sti
gs
xchg
scas
xchg
lock
jbe
imul
outsb
scas
in
fstl
push
xchg
insl
jle
gs
andl
jb
scas
inc
addl
adc
pushf
scas
mov
pusha
mov
fs
inc
sbbb
scas
ds
lock
mov
orl
add
daa
push
test
fcoms
or
inc
and
in
inc
push
push
pop
xlat
push
or
scas
sbbl
add
inc
fdivs
push
adc
sbb
popa
sbb
test
inc
dec
dec
push
push
or
lock
push
nop
shrb
push
inc
or
arpl
nop
sbb
xchg
sub
je
mov
or
je
ds
or
imul
shlb
pop
mov
pop
pop
js
fsubl
xchg
xor
cwtl
and
or
cli
dec
out
mov
or
mov
sub
jo
push
mov
bound
adc
stos
push
inc
mov
add
push
addr16
mov
es
stos
mov
data16
pop
jle
add
xor
das
rorb
jo
xor
jns
dec
mov
sbb
lahf
and
cltd
mov
divl
rcll
push
push
gs
outsb
addr16
inc
daa
daa
mov
or
adc
daa
daa
daa
sbb
push
mov
out
and
push
test
mov
rorb
outsl
dec
psllw
nop
int3
mov
fstpl
imul
test
inc
out
gs
cld
fldt
push
adc
jb
popa
fs
mov
jne
int3
add
loop
or
adc
movsb
das
push
sbb
ds
aam
repz
js
mov
adc
jns
jmp
mov
jnp
sbb
fisttpl
push
loopne
sbb
ja
mov
aas
xor
andl
adc
xor
roll
push
dec
push
imul
loope
jne
inc
push
mov
add
add
lods
outsb
arpl
ljmp
pop
fimull
shr
div
mov
mov
add
dec
jb
scas
xchg
mov
mov
aad
mov
xorb
ret
xor
push
aas
jo
lock
cmpsl
mov
add
ja
mov
or
xor
or
addr16
pop
popf
xchg
inc
pop
or
js
sbb
mov
mov
adc
and
les
loopne
push
jl
add
and
adc
sarb
mov
sbb
mov
or
sub
adc
jle
sub
les
rorl
cmp
sub
sub
das
stos
insl
sub
jmp
or
mov
jae
data16
jo
adc
pop
add
and
push
leave
add
adc
orl
dec
dec
loopne
out
add
or
inc
ljmp
dec
lret
add
invd
or
push
add
lods
movsl
aaa
pushf
adc
rcrb
cmp
fcompl
stos
cmp
inc
cld
out
add
lcall
ret
or
inc
sahf
cmp
cmp
sub
pop
add
pop
adc
and
or
sub
mov
stc
add
or
sub
cmpsb
jmp
and
add
jg
or
test
ss
pop
cmp
jne
pop
inc
xchg
xor
ds
sarb
xorb
inc
neg
ret
pusha
add
push
inc
fdivr
push
push
mov
mov
ffree
jmp
mov
je
mov
xor
fstpt
adc
fdivs
push
sub
add
cmp
jg
into
fiaddl
outsb
cmp
or
sbb
xchg
jmp
sub
jne
pop
cmp
je
hlt
or
stmxcsr
pop
pop
pop
jl
mov
pop
pop
dec
add
pop
movsl
aaa
cmp
or
cmp
jne
rolb
mov
add
pop
subb
jno
pop
or
xor
fisubrl
xchg
add
shlb
outsl
sbb
push
enter
inc
inc
xor
fbld
out
sub
push
test
ss
in
popa
add
mov
cltd
leave
std
bnd
fsincos
add
cwtl
insl
mov
mov
xor
repz
jl
in
xchg
fdivp
jmp
jbe
adc
or
fcoml
dec
add
mov
sub
clc
jb
sub
lcall
push
and
movsl
jb
push
push
mov
divb
jne
xor
adc
xchg
xchg
imul
int3
and
clc
leave
add
add
or
jb
cwtl
push
adc
jne
jle
pop
mov
pop
imul
sbb
inc
jne
push
inc
das
mov
in
or
mov
mov
rcr
sbb
mov
dec
decl
jne
mov
dec
jb
jnp
xorl
dec
icebp
cs
call
fucomp
aas
daa
mov
sub
mov
xor
mov
add
xor
notb
jb
sbb
push
cltd
cmp
jl
ret
mov
jl
imull
test
sub
push
inc
fsubs
mov
inc
mov
addb
sarl
or
or
ss
mov
add
xor
out
test
mov
dec
jp
and
inc
mov
add
dec
call
push
sub
or
mov
inc
inc
mov
pop
sti
dec
jne
jmp
test
rolb
shll
push
fcmovu
jmp
inc
pop
mov
jns
mov
incl
mov
inc
dec
mov
ret
push
sbb
xor
dec
jle
cli
decl
add
pop
mov
adc
pop
pop
sub
sub
jbe
sti
jg
incl
shll
add
push
mov
sub
xor
push
outsb
push
rol
cmp
push
xor
test
xor
dec
cmp
pushl
dec
loopne
sbb
rcrl
pop
ja
or
mov
ljmp
mov
add
sbb
add
xor
adc
movb
mov
sti
ret
sbb
andl
insb
and
fistps
shlb
fadd
faddp
add
mov
sti
push
add
rorl
fdivr
mov
push
mov
xor
add
push
sub
rcrl
loope
pop
daa
add
outsb
ffree
frstor
ffree
ffree
pop
aad
add
push
sub
push
frstor
push
dec
repnz
ss
subb
push
or
add
aam
inc
push
push
scas
aaa
aad
mov
and
hlt
or
cmp
push
loop
mov
adc
or
scas
insl
aad
clc
mov
sarl
pusha
or
push
das
push
and
insl
imul
push
pop
xchg
xor
cmpsl
mov
jg
mov
sete
pop
outsl
xchg
lea
js
pop
inc
add
mov
out
fs
je
cmpsb
sbb
dec
cmp
push
inc
cld
iret
mov
cmp
rcll
mov
stos
sub
pusha
sub
mov
adc
fists
orb
sti
idivl
les
test
jl
cmpb
add
test
fstl
and
pushf
push
xchg
pushl
pop
popa
call
mov
cwtl
adc
out
rclb
sbb
lock
mov
call
out
aas
mov
add
push
cmp
xor
addb
pop
and
subl
jp
dec
hlt
jne
ret
lock
xchg
decl
loopne
mov
andl
insl
lock
data16
lock
setne
jmp
cmp
dec
pop
mov
sbbb
ss
cwtl
or
add
mov
clc
mov
pop
add
ds
fsubs
in
xchg
stos
and
ret
adc
out
pop
jmp
and
dec
mov
push
mov
or
or
pop
sub
decl
add
mov
and
pop
cmp
inc
ja
xor
scas
ret
push
adc
adc
and
in
fnstsw
push
push
mov
mov
jl
pop
rclb
xor
lods
fstpt
push
pusha
mov
repnz
pop
enter
iret
pop
insb
cwtl
mov
xchg
out
lret
clc
test
pop
shll
cld
repz
inc
pop
lret
notl
add
fcmovne
lea
cmpl
adc
imul
mov
emms
push
push
jge
mov
push
loope
mov
jg
mov
or
jbe
or
movl
gs
call
add
out
inc
je
sub
mov
js
movb
pop
mov
loopne
not
mov
pop
add
and
jne
aas
cmp
loope
in
adc
and
hlt
cwtl
xchg
shrl
jmp
pop
lods
xchg
imul
pushf
mov
or
lahf
or
or
dec
jp
xor
sbb
adc
jnp
or
cld
repz
mov
add
cld
mov
mov
out
lea
pop
ret
cmp
xor
push
add
daa
jnp
push
inc
aas
jne
cltd
mov
aaa
mov
and
stos
test
inc
or
mov
and
ret
clc
dec
call
mov
test
mov
mov
dec
jmp
addr16
mov
jp
and
mov
jp
cwtl
rorl
inc
jne
cmp
lock
test
out
in
fistl
iret
loope
inc
pushf
cltd
lock
inc
xor
sbb
mov
jmp
nop
aas
mov
sbb
mov
mov
add
push
push
fsubr
pusha
andb
sub
add
sti
xchg
push
andl
pop
sub
mov
mov
enter
inc
sbb
pop
sub
lock
sarl
sahf
xor
inc
sbb
push
inc
xor
push
lret
popa
add
adc
mov
fdivrs
xor
push
jp
or
testb
fwait
inc
stos
mov
push
or
add
out
and
adc
push
dec
mov
std
mov
pop
pop
mov
ss
not
and
pop
sbb
movl
mov
lcall
lea
mov
jmp
push
movsb
xchg
pusha
mov
mov
add
int3
call
pop
mov
and
repnz
incl
arpl
push
ja
inc
outsl
clc
sti
cwtl
mov
sub
mov
pushl
mov
pop
add
fcomps
cmpsl
jne
push
rolb
dec
pop
jg
mov
out
pop
les
sbb
not
mov
inc
dec
sti
and
add
mov
or
jns
mov
pop
mov
pushf
clc
adc
add
xor
cs
cmp
sarl
pusha
out
lock
aad
or
jg
fwait
test
pop
push
mov
jle
je
loopne
pop
pop
jne
inc
cmp
sbbb
loope
fdivrs
insl
sub
nop
paddsb
push
adc
xchg
pop
xor
outsl
jle
jb
in
aam
jne
jo
ret
xchg
lret
outsl
decl
jp
xchg
inc
out
out
int
adc
add
imul
xchg
loopne
aad
add
push
jge
mulb
fs
push
hlt
clc
cld
push
aad
lock
fdivrp
imull
mov
dec
scas
stos
call
sbb
loope
dec
or
scas
enter
lock
ret
fdivrs
pusha
jo
pop
pop
sarb
rolb
ret
inc
je
mov
neg
das
add
cwtl
hlt
cs
incl
test
jne
test
je
test
jne
mov
decb
dec
xchg
lods
mov
dec
dec
cmc
pop
pushl
cmpsb
lea
mov
xor
les
pop
push
inc
mov
sub
test
cmp
mov
iret
cmp
adc
jo
jo
mov
fnstenv
lret
call
adc
pop
enter
mov
mov
incb
lret
mov
mov
ljmp
movsb
cmp
pop
pop
rclb
hlt
ficomps
mov
arpl
jg
mov
nop
cmpsl
iret
cmp
push
fisubs
data16
rorb
jne
cli
jb
jns
test
add
cmp
jne
sbb
mov
jne
push
add
jne
outsb
fldln2
test
cmp
jns
jns
sbb
or
cmp
add
lret
nop
mov
xor
or
mov
and
inc
call
mov
cmp
or
sbb
sub
sub
je
xor
mov
push
ja
cmpb
jne
es
je
pop
xchg
xchg
mov
sti
outsl
mov
cs
mov
pop
sub
jbe
sbb
pop
fwait
loopne
sub
enter
pop
mov
mov
loop
jne
call
inc
inc
in
add
and
push
test
add
aas
lds
xchg
and
fisttpll
das
or
inc
pop
add
int3
imul
push
pusha
fsts
or
jbe
pop
xor
orb
dec
insl
js
ret
pop
adc
mov
add
cmp
outsl
ss
mov
and
popa
rcrb
lcall
push
mov
inc
cmpl
sbb
shrb
dec
fs
pop
inc
adc
add
cmovl
lret
aad
adc
or
pop
cmp
pop
mov
mov
rclb
es
ds
push
or
jge
adc
xorl
ret
cld
lods
cmp
je
stos
in
mov
sub
xchg
test
bnd
push
outsl
mov
mov
xor
sub
lods
rorb
int
xchg
es
bound
hlt
and
lods
jmp
iret
cmp
xor
sub
mov
fisubs
sub
mov
lret
xchg
outsb
pop
scas
call
jae
fildl
add
or
lret
roll
mov
and
stos
sbb
pop
sti
xchg
mov
sbb
mov
adc
cmp
data16
cmp
ja
add
imul
fistpl
fs
and
in
dec
jle
rolb
sbb
cmp
sbb
dec
cmpb
ret
je
int3
add
pop
xchg
ret
and
mov
xlat
cmp
cld
dec
rcll
pop
jne
lea
mov
ret
pop
les
jmp
mov
in
cmp
xchg
or
das
pop
ja
mov
ss
push
xchg
xor
mov
adc
dec
dec
fsubrs
rcr
jecxz
lea
push
sub
ret
inc
pusha
and
xchg
mov
xchg
xor
sbb
or
popf
imulb
jmp
push
pop
outsb
adc
sub
out
fdiv
xchg
data16
xchg
flds
jl
mov
push
ret
sbb
add
jg
loope
mov
aad
or
jmp
xor
inc
inc
shrl
cld
lods
and
jmp
mov
jl
testl
xlat
mov
inc
jp
call
pop
js
mov
addb
lret
add
jp
adc
dec
fdivl
or
jmp
jecxz
stos
mov
stc
fcomps
push
leave
loopne
dec
cmp
lods
cmp
ljmp
add
mov
push
inc
je
mov
or
je
mov
cmpsl
mov
adc
dec
jl
popf
lock
divl
pop
cmp
jbe
mov
shlb
xchg
adc
cmpb
sub
dec
cvtpi2ps
adc
push
loopne
mov
inc
iret
dec
lcall
clc
xchg
ret
xor
and
add
push
dec
sub
out
adc
daa
xchg
pop
cwtl
daa
xchg
sahf
add
sahf
xchg
out
pushf
add
in
testb
sub
adc
mov
cmpsb
mov
cmpsl
mov
andl
pop
sbb
lahf
fcomi
xor
sahf
ljmp
in
out
cwtl
pop
lods
jmp
sbb
add
enter
jmp
ljmp
xchg
push
mov
pextrw
je
in
push
add
divl
enter
and
pop
adc
mov
loopne
mov
test
sahf
das
cltd
test
push
jbe
fists
pop
mov
sub
sub
mov
jg
iret
push
or
xchg
shll
xor
das
cltd
xchg
sarb
pop
or
cmpsb
int
mov
cmp
ret
test
sub
cmp
and
sbb
dec
cld
lea
mov
jmp
push
mov
push
dec
dec
cmp
enter
jg
jmp
add
orl
rclb
mov
pop
movsl
mov
jle
push
hlt
insl
enter
loope
mov
mov
add
xor
dec
dec
adc
cmp
push
inc
or
xchg
mov
mov
stos
out
add
or
jne
xor
or
jge
mov
neg
jmp
or
je
mov
stos
xchg
push
mov
into
mov
and
inc
inc
int3
aam
adc
enter
jg
or
jg
dec
mov
stos
cmp
jne
pop
pop
aam
pop
loope
mov
cld
mov
sti
mov
mov
cs
mov
repnz
dec
popf
add
test
jne
lcall
fcoms
lock
stos
imul
add
loope
shrb
sahf
mov
add
and
push
sub
jge
jae
mov
mov
fsubrl
test
xchg
scas
subb
or
sti
add
pusha
decl
add
or
mov
add
sbb
enter
sbb
call
xor
movsl
cld
add
popf
mov
xor
lods
push
and
lahf
xchg
mov
dec
dec
inc
dec
inc
dec
lods
or
and
jp
xor
jge
cs
ret
divb
jo
ret
std
mov
aam
cmp
push
jg
sbb
sbb
dec
stos
add
outsb
mov
xor
stos
jmp
mov
jp
mov
loop
movlps
pop
pop
pop
popa
subb
dec
mov
jnp
ja
mov
fimuls
sbb
dec
ret
sub
sub
jbe
pop
jl
mov
mov
mov
movsb
insl
sbb
mov
cli
adc
mov
or
es
or
or
enter
repz
inc
test
dec
je
dec
jne
sbb
in
stos
xor
mov
call
add
je
inc
jne
fldcw
mov
ret
xchg
repnz
repz
jecxz
or
repnz
loop
adc
mov
add
lea
and
ja
add
push
push
push
cmp
divl
sbb
inc
jmp
or
xchg
mov
pop
inc
loop
ret
push
call
sbb
sub
sub
and
jbe
fcomi
adc
and
sub
inc
sub
sub
sub
sbb
and
sub
pop
sub
or
mov
jns
sub
sub
sub
fucomip
popl
call
adc
movsl
jne
inc
stos
test
xor
mov
and
pop
push
cltd
inc
adc
add
jns
sahf
mov
or
adc
mov
mov
sub
orl
adc
mov
mov
adc
int
in
scas
or
mov
and
mov
add
and
bnd
mov
loopne
sbb
loopne
mov
add
lret
mov
or
mov
shlb
ret
ljmp
jne
testw
jl
mov
cmpl
sbb
movb
mov
aas
inc
sub
adc
clc
adc
clc
out
fabs
push
ja
mov
pop
frndint
rcr
scas
fs
add
neg
jge
fwait
mov
testb
je
fidivl
clc
sbb
lea
mov
inc
sub
nop
shr
and
scas
jo
dec
out
push
cmp
xor
stos
insl
popa
pop
pusha
mov
lret
enter
or
out
outsl
or
cmpb
jb
movb
js
decb
loopne
loopne
and
pop
data16
pusha
xor
jmp
mov
cmp
inc
xor
push
adc
shr
mov
push
add
inc
int3
out
inc
out
sbb
add
daa
std
iret
push
push
rorl
je
add
add
neg
or
or
or
fisttps
das
sbb
adc
jl
mov
cmpsl
adcl
mov
or
sbb
popf
jb
pop
decb
or
mov
shl
cmp
mov
shll
sbb
mov
push
sub
cwtl
call
and
jne
dec
sub
cmp
ja
jae
and
inc
ljmp
sub
add
enter
cmpb
divl
sub
sub
pop
jmp
mov
sbb
mov
aaa
ret
jp
jae
dec
inc
ret
scas
mov
lock
sarl
loop
je
fldz
cmpsb
mov
ljmp
lods
xor
jne
inc
mov
daa
xorb
aaa
mov
or
cmp
icebp
je
and
fistpll
jmp
sti
inc
jne
inc
push
sub
cwtl
jne
mov
and
fdivrl
mov
adc
aas
jmp
fistpl
cmp
pop
and
inc
js
hlt
test
insl
and
push
int
cmp
mov
test
or
fimull
cmpsb
adc
add
jmp
aaa
mov
aas
adc
es
push
inc
mov
rorb
push
cmp
aaa
add
or
outsl
rcl
insb
add
push
int3
push
cwtl
je
and
rolb
dec
pop
add
push
rolb
pop
add
and
and
or
leave
rclb
pop
sbb
aam
lock
test
fldt
fstpl
fwait
out
bound
ficoml
out
fistps
mov
xchg
xor
ret
push
in
fldl
inc
js
adc
adc
mov
xor
push
dec
and
add
inc
test
sbb
add
clc
out
dec
repz
cmp
jae
or
cmp
inc
stc
inc
cmc
dec
push
or
shrb
out
add
shrb
pusha
jb
ret
enter
call
fistl
jle
mov
mov
or
sbb
mul
pop
adc
push
testb
jo
andl
test
sbb
mov
fisubrl
cmp
inc
fcom
dec
jg
dec
ret
add
adc
add
jp
fimull
mov
mov
mov
push
cmp
fdivl
and
call
imul
and
add
adc
and
sbbl
add
jp
adc
pop
fwait
jge
subl
adc
inc
dec
mov
sbb
pop
push
aam
dec
enter
addb
fwait
orl
push
jb
or
jb
add
insb
je
mov
push
pop
dec
fnsave
adc
mov
add
inc
dec
jne
sub
dec
mov
aas
cltd
stos
loopne
clc
idiv
imul
jns
push
in
mov
cli
add
repnz
ds
ds
add
test
mov
out
sti
jne
inc
inc
pusha
test
std
std
mov
lds
xchg
rcll
movsl
cmc
inc
pop
cmp
dec
add
sbb
inc
loope
sub
dec
in
test
jg
mov
sarb
ljmp
inc
pop
or
lods
inc
test
pop
pusha
mov
pop
inc
xchg
ret
in
mov
mov
add
jl
addl
mov
and
jl
repz
mov
cltd
mov
decw
jnp
insl
xor
sub
imul
fcoms
or
insl
movzww
add
inc
push
xchg
sbb
dec
pop
lock
push
shlb
adc
lret
add
dec
cmp
dec
lods
pop
mov
or
jp
sbb
fistps
sbb
clc
roll
pop
hlt
imul
push
add
loopne
scas
jbe
sbb
loope
mov
mov
cmp
cs
addr16
xchg
inc
xlat
nop
in
rcll
adc
sub
push
or
out
int3
and
sub
cli
sbb
push
push
cmp
js
inc
add
sbb
lret
jne
push
loop
push
xchg
and
add
mov
sub
cltd
js
rcrl
sub
fisubrl
pop
push
xchg
adc
fcomi
or
adc
add
and
js
pop
cs
pop
push
dec
test
push
in
push
loopne
push
jb
inc
adc
mov
add
in
add
adc
subb
mov
mov
adc
popf
xor
cmpsb
jle
or
and
inc
dec
cmp
je
mov
add
das
inc
inc
hlt
pop
sti
repnz
add
pushl
add
push
lea
idivl
out
or
xchg
repnz
movb
jo
inc
lcall
push
in
mov
ljmp
jecxz
pop
in
jns
fmull
mov
inc
jo
pop
int
repnz
adc
loope
out
repnz
mov
push
lret
push
sbb
or
jmp
and
mov
mov
lea
adc
popf
push
fldt
mov
mov
or
push
mov
xchg
mov
sbb
pop
add
fs
pop
andl
lods
add
sbb
clc
aam
jbe
add
sbb
lods
ljmp
dec
adc
push
cmp
data16
aam
ret
mov
insb
xor
ljmp
sub
sub
and
addr16
imul
push
enter
add
mov
mov
jmp
adc
js
or
inc
cmpb
jne
lahf
nop
mov
add
sub
les
or
vmwrite
pop
add
mulb
aam
mov
add
adc
and
sbb
cltd
cmp
lods
mov
stos
xchg
mov
pop
incl
in
add
shl
loope
mov
mov
push
jne
mov
pop
or
repnz
add
xchg
jae
pop
xchg
shlb
adc
test
int3
popf
sub
push
add
sub
jae
pop
mov
out
mov
jge
dec
add
stos
and
loop
outsl
loop
mov
fmulp
cmp
xchg
fadds
out
dec
jmp
adc
mov
or
divb
or
or
rorb
or
or
add
add
add
or
pop
dec
loope
outsl
or
jl
out
mov
dec
rcr
sahf
cmpsl
jge
jecxz
ret
sbb
and
lock
call
stos
sbb
mov
nop
or
jo
inc
mov
or
mov
pop
bound
das
popf
dec
push
cmp
push
out
adc
lods
adc
scas
nop
aam
dec
rolb
jo
pop
adc
jmp
sbb
cmpsb
idivl
add
sub
xchg
sub
jae
xor
mov
fmull
dec
add
jmp
out
orb
aad
push
cmp
lock
mov
or
xchg
dec
movsb
sub
in
mov
adc
sub
and
loopne
push
sahf
jbe
mov
push
lahf
adcl
adc
push
mov
jl
add
adc
and
cli
out
jae
je
sbb
pusha
sub
je
pop
je
jmp
sbb
icebp
es
jne
mov
jmp
xchg
sub
push
dec
in
mov
into
add
add
cmpsl
adc
inc
sahf
add
push
inc
ljmp
adc
or
inc
cmpsb
fnstsw
or
or
add
pushf
sbb
repz
popa
add
call
js
add
jb
lret
push
pop
dec
es
addb
pusha
jmp
daa
sub
jbe
jb
add
shlb
pop
add
mov
ja
add
and
add
hlt
loopne
adc
sbb
jmp
and
dec
imul
mov
xor
xchg
cmp
test
mov
inc
sub
add
shr
out
inc
iret
mov
pop
xor
xor
or
or
mov
lret
loopne
popf
cmpb
and
push
int
out
imul
cmp
mov
cmp
lea
cmp
mov
shll
pop
sub
fsubrs
mov
adc
stos
pop
push
cmp
cld
clc
xchg
xor
and
aam
add
sbb
scas
dec
das
push
dec
bound
adc
push
add
mov
and
fsubl
aam
test
sub
xchg
push
push
mov
mov
xchg
pop
mov
jo
and
inc
add
bound
cmp
jg
je
mov
inc
mov
mov
or
mov
lods
flds
mov
cwtl
push
pop
or
in
mov
add
mov
pop
or
push
pop
and
jl
pusha
jb
push
sbb
xchg
adc
ret
add
mov
test
mov
push
loop
in
mov
pop
xchg
mov
dec
dec
cmp
sbb
outsl
push
repz
inc
ret
push
xor
into
cmp
and
test
pop
lock
in
ret
push
mov
fucomi
add
cmp
adc
jge
xchg
xchg
addb
mov
mov
sub
pop
jl
mov
cli
aaa
push
inc
push
cmp
jne
sub
das
imul
sub
and
sub
je
dec
mov
and
sub
je
jmp
mov
jmp
push
push
push
jnp
outsb
and
out
clc
jle
out
in
rol
pmullw
xlat
hlt
sbb
mov
popa
shll
mov
jl
jnp
jl
pop
and
pop
mov
and
into
adc
mov
add
testl
add
or
pop
or
aad
push
jmp
sbb
or
shlb
fwait
cmp
or
jl
jne
cmp
jg
sbb
mov
push
xor
cltd
xor
sub
add
pop
fldcw
imul
add
dec
mov
add
mull
popf
insl
push
inc
push
popa
dec
cld
gs
xchg
ret
scas
fcomp
sub
sbb
mov
xor
sub
shrb
repz
jl
call
push
fiadds
dec
pusha
dec
fdiv
inc
sub
dec
addr16
add
xchg
dec
das
mov
fmull
test
sub
dec
pushf
jbe
adc
jge
mov
fidivrl
push
mov
or
rcrb
mov
fildll
cmp
push
rorl
fisubrl
das
mov
and
das
nop
add
or
add
in
fldenv
mov
sub
jb
and
xchg
jge
es
in
aas
scas
sub
lock
cmp
in
out
lock
out
in
cmpl
adc
dec
pop
les
jge
add
fnstenv
test
pusha
sub
push
mov
pop
data16
out
jnp
mov
jbe
cmpb
jle
and
fs
jne
adc
jne
or
cmpsb
ss
push
rorl
adc
mov
pop
popa
inc
cwtl
inc
dec
repnz
and
pushf
mov
clc
and
stc
ljmp
or
jl
and
ret
mov
pop
fsubl
fs
ds
adc
fcompl
jle
mov
outsl
cmp
das
push
jne
mov
dec
notb
daa
push
adc
mov
fs
jle
mov
cmp
jecxz
repz
xchg
dec
xchg
jno
xlat
fs
xlat
xor
repnz
xchg
fcmovb
fistl
decb
popa
in
mov
or
and
fwait
dec
jnp
test
inc
and
sub
and
push
and
clc
insl
cli
test
jp
sub
cli
lods
pop
jge
and
add
push
or
or
dec
mov
sbb
out
je
test
push
cmp
add
pop
jb
inc
xlat
add
sbb
sbb
and
test
xor
or
and
push
and
add
inc
ja
jne
jo
xchg
adc
pop
daa
shlb
adc
rcll
je
dec
cwtl
movsl
movsb
adc
adc
push
xor
mov
mov
mov
nop
xor
cmp
pushf
pop
add
mov
cmp
mov
jns
pop
scas
sbb
adc
adc
push
shl
dec
outsl
mov
add
lock
imul
push
adc
xor
out
ffree
cltd
mov
add
and
fcomps
or
pop
sbb
or
rcrl
fstl
rsqrtps
cmpsb
add
push
xlat
fimull
push
push
push
push
push
sbb
add
add
sarl
sti
sub
jb
or
xchg
push
out
xchg
test
fwait
ror
test
lea
push
jo
out
mov
shr
outsb
adc
mov
cmp
les
popa
cmpsb
fdivl
fprem
push
push
xorl
mov
loope
or
push
hlt
xor
lods
mov
jno
or
add
add
js
nop
xchg
dec
jo
ja
test
jnp
xchg
xor
pop
rcrb
repz
sub
mov
or
and
dec
lea
dec
push
mov
sub
pop
mov
nop
inc
lcall
mov
xchg
or
or
jne
rorl
dec
push
cld
xchg
push
in
popa
aaa
and
in
add
loope
fnstcw
dec
call
cmp
ret
in
or
and
out
sbb
sarb
lds
xchg
push
ljmp
sub
pop
je
xchg
cmp
push
and
sub
adc
adc
cmc
mov
dec
inc
and
mov
rorl
pusha
inc
xchg
sub
incl
pop
pop
out
mov
mov
xchg
shr
pusha
enter
out
in
xlat
add
pop
imul
mov
pop
mov
aam
fiaddl
ss
les
orl
add
mov
fldt
dec
push
rol
cmp
push
mov
adc
hlt
push
push
sub
fidivs
sub
pop
cmpl
sub
and
rcl
mov
mov
fcom
or
test
orb
pop
insl
lcall
jecxz
dec
mov
mov
ljmp
cmpsb
incb
sbb
je
mov
push
add
pop
sahf
mov
jnp
jle
test
mov
popa
lcall
loope
push
fistl
lock
add
jge
mov
rorb
sbb
xchg
adc
call
repz
xor
mov
out
call
add
jmp
mov
fwait
daa
cmp
adc
jmp
icebp
pop
je
jne
inc
push
push
jns
sbb
or
daa
or
mov
out
inc
push
shr
ret
xor
mov
mov
popl
add
sub
and
pusha
lea
icebp
ds
stc
insb
xchg
test
sub
push
test
cmpsb
in
out
pop
dec
or
loopne
pop
jne
movsl
subl
pusha
iret
pop
mov
aam
inc
pop
shlb
aaa
or
loope
and
push
les
jmp
sub
mov
mov
mov
inc
push
loope
test
repz
mov
dec
scas
sub
ret
sub
and
sub
mov
fwait
and
or
jo
inc
mov
cld
cmp
insl
push
in
inc
add
adc
xor
fbld
mov
sti
push
test
mov
cld
pop
faddp
jae
test
jg
in
hlt
push
inc
push
mov
rorb
jl
les
sahf
fiadds
mov
mov
pcmpgtd
test
push
or
pop
dec
sub
cld
push
and
int3
pop
mov
inc
das
xchg
loopne
hlt
test
mov
dec
pop
mov
dec
mov
addl
ret
js
inc
xor
dec
and
push
xchg
pop
fdivl
adc
test
cmp
pop
dec
adc
stos
pop
or
xor
rcr
add
adc
fistpl
sub
mov
adc
ljmp
cmpsl
cwtl
mov
inc
les
sbb
sti
test
or
ja
dec
adc
ja
add
or
fwait
test
stos
xchg
xchg
inc
repnz
inc
out
pop
clc
lock
lods
or
mov
sub
ret
sbb
or
pop
push
or
and
add
and
pop
sub
faddl
cmp
jg
cmp
mov
adc
jns
or
jmp
mov
push
clc
add
inc
jo
jbe
icebp
mov
pop
cwtl
decl
push
cli
loope
clc
mov
dec
imul
push
jb
cmpsb
adc
cld
jmp
push
sbb
mov
fsubrs
fs
notl
rolb
outsb
adc
enter
ret
test
or
nop
xchg
push
fstpl
fcomp
iret
push
pushf
sbb
xor
in
inc
call
or
jge
jb
pop
xor
push
in
push
loopne
in
jo
pop
push
dec
loopne
test
sub
dec
cmpsl
sbbb
push
mov
mov
add
shrb
leave
jo
mulb
and
test
adc
in
loope
add
jb
mov
pop
push
push
cmp
inc
cmp
je
jmp
xor
inc
xor
sub
jmp
and
cmpsb
jge
add
mov
add
push
pop
or
or
lods
push
ss
leave
lock
jl
dec
xchg
mov
out
nop
movsl
cmp
mov
add
fsubr
clc
dec
dec
cld
pop
cld
cmpl
seto
mov
cmp
dec
mov
sbb
inc
or
add
add
cmpb
mov
and
in
adc
fs
decb
adc
add
mov
jnp
idivb
shlb
push
push
enter
mov
lods
aam
jno
lcall
imul
pop
outsb
mov
jl
imull
xchg
jge
mov
mov
movsb
test
add
leave
and
nop
adc
cmpb
jns
fcoml
adc
dec
aam
ret
lahf
adc
mov
adc
cld
std
mov
add
sub
push
sbb
and
fdivrs
and
leave
mov
adc
ret
repnz
mov
mov
inc
inc
push
lcall
shl
pop
das
push
push
jbe
nop
out
std
sbb
lock
sub
mov
fwait
xlat
dec
movsl
mov
and
dec
andb
test
or
add
mov
les
sub
fldl
outsl
mov
inc
enter
rcr
inc
stc
std
cmp
mov
out
ss
addr16
sbb
add
pop
mov
lds
pop
inc
sbb
adc
aaa
fwait
sbb
adc
jb
enter
sbb
ljmp
scas
jo
add
out
and
daa
cmp
xor
mov
adc
sbb
pusha
and
mov
iret
mov
or
sti
sub
mov
or
mov
dec
movsl
jp
adc
mov
out
adcb
add
int3
mov
out
cmp
jne
cmp
mov
das
call
das
lods
clc
adc
mov
pop
enter
dec
adc
and
jmp
ljmp
jo
mov
dec
call
sbb
cmp
dec
xor
adc
clc
add
mov
sub
xchg
fistpll
aas
loop
fwait
pop
push
stc
cmp
mov
loopne
bound
push
inc
andb
jb
inc
mov
dec
jmp
dec
test
jl
nop
xor
or
sub
and
sub
dec
or
inc
push
mov
jmp
mov
cmp
inc
cmp
fisttps
adc
insl
add
lea
iret
loopne
xor
test
pop
daa
fadd
pop
sub
es
lret
sub
adc
adc
sub
inc
mov
xor
test
jg
jmp
xchg
adc
xor
and
mov
ret
add
cmp
jl
and
cmp
lods
sub
xchg
or
jge
mov
dec
imul
jns
leave
and
cmp
hlt
jge
jl
jne
sbb
sbb
push
ret
mov
aaa
pop
in
xchg
jmp
loopne
sbb
aam
pop
xchg
cmp
add
dec
xchg
stc
push
add
rcrl
insb
jle
adc
push
faddl
setle
mov
bound
mov
add
aam
mov
add
lods
loop
jle
repz
or
or
add
mov
icebp
adc
mov
in
icebp
mov
adc
push
mov
fdivrs
xor
into
arpl
sub
sub
fiadds
pop
push
daa
push
out
insb
sbb
das
pop
and
push
xor
inc
cmp
dec
adc
dec
sbb
repnz
loopne
and
imul
ret
push
outsl
xor
je
js
std
popf
inc
aam
add
push
cs
sete
adc
jne
jge
stc
cmpsb
or
adc
cs
negl
adcl
push
add
mov
ljmp
data16
pop
push
or
test
and
xor
jmp
push
stos
mov
cmp
int3
je
negb
lret
push
je
cmp
jg
inc
nop
pop
sub
inc
sbb
pop
sbb
sub
xchg
iret
sub
insb
sub
inc
sub
lods
je
jae
stos
les
fidivs
sub
ficomps
pusha
test
mov
lea
inc
inc
adc
ret
inc
adc
pop
fildll
and
scas
push
fdivrs
test
movd
sub
andb
test
clc
out
je,pt
cmpb
dec
pop
dec
jb
sub
jp
lcall
jmp
push
rolb
ret
sub
inc
outsb
insl
lcall
add
sub
xchg
mov
jb
repnz
inc
add
jno
adc
inc
ret
sub
cmp
jbe
sbb
push
stos
fiaddl
ficoms
and
jbe
adc
inc
fcmovbe
das
and
push
adc
sbb
mov
xorl
dec
test
jns
jo
je
mov
inc
inc
jne
test
or
jg
jge
sbb
mov
push
sbb
xor
lcall
mov
fdivs
inc
mov
xchg
pop
pop
sbb
stos
sbb
lret
jne
insb
fbstp
dec
cmp
jge
pop
or
pop
jne
xor
or
pop
add
push
or
inc
pusha
dec
mov
add
add
push
ret
mov
adc
pop
imul
push
add
ficomps
dec
shr
mov
mov
aas
enter
rep
pop
cmpl
add
movlps
lods
jl
jmp
punpckhdq
data16
mov
push
sbb
cwtl
pop
push
test
aam
imul
add
cli
xchg
fiadds
stc
push
scas
hlt
add
xchg
ljmp
push
pop
iret
cmp
stos
fs
fcoml
cmpsb
in
cs
lock
mov
xchg
adc
pop
pop
cwtl
mov
pushf
mov
xor
int3
inc
call
sub
mov
mov
ja
cld
mov
push
or
daa
sbb
or
cs
fsubrl
mov
orl
mov
shr
mov
stc
movsb
sbb
mov
pop
mov
mov
jle
xchg
cmp
push
sub
mov
push
imul
pushf
mov
and
xor
pop
out
and
cli
test
and
sub
les
repnz
dec
xor
aas
ret
adc
repnz
xchg
enter
ds
adcb
push
hlt
mov
cmp
add
in
sub
xlat
jo
lock
rorb
stc
cmp
adc
popl
jmp
add
das
fs
iret
scas
insl
add
or
and
daa
add
mov
jo
push
loop
add
mov
jp
in
cmp
pop
push
cmp
out
dec
sub
mov
test
jne
or
add
testb
xchg
cld
jp
aas
adc
outsl
lock
mov
push
sub
adc
loope
dec
jmp
arpl
jnp
jns
mov
push
pop
cmpsl
mov
mov
lods
loop
roll
in
and
fs
in
pop
pop
pop
imul
mov
arpl
nop
mov
jmp
in
sbb
es
lret
mov
jg
xor
add
jge
jne
cmp
test
test
mov
icebp
sti
sub
fistps
push
push
push
outsb
imul
loope
inc
jb
sbb
mov
dec
test
push
decl
or
fs
gs
outsb
outsw
fsts
sarb
fldl
xor
rol
mov
ljmp
mov
or
or
add
inc
jmp
pop
orb
clc
adc
scas
xchg
adc
inc
add
mov
pushf
clc
adc
cmc
movsb
jne
int
ret
pop
sbb
fadd
xor
or
out
pop
xchg
adc
mov
paddw
add
test
jl
std
inc
xor
lea
cmpl
adc
roll
adc
outsb
mov
jmp
cmp
lea
push
enter
inc
ret
mov
pusha
add
lea
mov
nop
inc
cmp
ret
popf
sub
mov
add
xchg
cmp
xchg
or
xor
adc
xchg
or
neg
ret
and
pop
inc
dec
pop
addb
lret
and
push
inc
mov
cs
mov
addr16
or
hlt
cmpsl
leave
pop
inc
daa
paddsb
sub
mov
aaa
mov
hlt
cli
or
loop
cmp
fs
loopne
adc
jb
jecxz
add
inc
or
or
insb
sub
push
test
inc
in
mov
pop
push
push
dec
scas
and
xor
aad
and
call
inc
rolb
ficoms
dec
icebp
fdivrs
mov
repnz
inc
daa
loopne
add
bnd
int
test
sub
pop
add
push
push
sub
sbb
imul
divb
or
incb
imul
gs
jo
cli
scas
push
add
lock
inc
mov
xlat
mov
call
dec
ret
xchg
xor
aaa
cs
xor
call
xor
or
je
jmp
push
inc
cmp
jne
test
push
and
pop
sub
cmpb
loope
mov
stos
daa
inc
test
xchg
js
pusha
push
xor
clc
xor
and
inc
out
test
mov
fistpll
dec
and
xchg
add
sbb
sub
call
jne
push
loopne
fnstenv
mov
mov
movl
push
mov
inc
iret
js
cmp
fists
mov
daa
mov
rcl
jge
loop
or
or
stc
add
loope
mov
push
outsl
in
lea
aaa
xchg
cmp
rol
lds
std
lret
jg
arpl
sarb
inc
ds
push
ja
imul
inc
adc
mov
mov
aas
adc
jb
and
xor
out
sub
movsb
mov
pop
mov
mov
imul
pop
cwtl
mov
inc
push
cmp
enter
push
sbb
inc
mov
adc
dec
popa
mov
clc
cmp
dec
loope
mov
lret
push
mov
mov
orb
xchg
ret
xchg
je
and
or
cmp
sbb
mov
cmp
xchg
mov
insb
je
sahf
xor
mov
or
jge
sub
fnstsw
incl
xlat
jg
pusha
xor
or
decl
cmpl
jnp
popa
xchg
ds
jo
stc
push
lods
sbb
mov
or
jp
or
push
pop
fbld
sbb
inc
incl
mov
xchg
cmp
je
mov
popl
inc
jecxz
arpl
mov
pop
xor
push
add
hlt
int
jg
inc
mov
fisttpl
cmp
sbb
in
inc
xor
ror
cmp
or
adc
decl
pop
js
adc
or
push
scas
cltd
or
xchg
out
inc
aad
dec
repnz
hlt
cmp
or
mov
sub
cmp
mov
jne
pop
mov
xchg
jp
in
cs
cld
mov
dec
dec
or
push
mov
imul
and
pop
jo
mov
inc
inc
jmp
add
es
out
outsl
sbb
rep
je
and
loope
cwtl
fs
inc
adc
orl
sbb
adc
loope
sbb
add
mov
jns
jo
pop
jo
mov
xchg
push
dec
mov
iret
repz
nop
fcoms
dec
shl
cmp
js
push
shl
cmp
mov
or
push
inc
mov
add
out
mov
mov
push
fistps
and
dec
fidivs
jnp
push
pusha
push
jg
es
andb
fs
mov
xor
repz
mov
pop
ja
and
adc
call
out
das
scas
adc
or
cwtl
mov
sbb
mov
mov
int
out
adc
js
mov
jl
lahf
clc
cwtl
mov
hlt
lods
mov
iret
enter
in
push
mov
jns
in
loopne
hlt
mov
mov
fdivs
mov
out
in
jns
rclb
int3
pop
dec
cmpsb
mov
int3
mov
mov
shlb
cmp
mov
pop
mov
insb
repnz
sahf
xchg
mov
lock
push
daa
iret
lods
jb
mov
mov
cmp
fcomps
daa
iret
leave
sbb
je
sub
fmulp
cmp
enter
pop
loopne
jg
add
inc
into
and
lods
jle
leave
sbbb
or
dec
add
js
mov
sarl
in
repnz
or
fidivrs
movsl
xor
cmp
pop
daa
sbb
dec
jb
and
cmp
mov
gs
pop
sahf
sub
mov
pop
dec
pop
test
add
add
test
dec
xor
push
enter
cmp
js
add
inc
pop
sbb
adc
sub
nop
dec
push
xchg
sub
and
leave
sub
xor
rolb
lret
mov
jmp
outsb
sbb
adc
jbe
lret
inc
jmp
pop
dec
aam
clc
subb
imul
or
inc
sbb
jno
sti
xchg
lahf
xor
loopne
cmp
jecxz
jmp
xor
inc
push
mov
jne
adc
xchg
movsb
jl
in
enter
pop
and
outsb
mov
enter
sbb
fisubl
loope
add
dec
cmp
fsub
pop
cld
stc
jl
out
clc
clc
lea
test
ds
daa
cmpb
cmc
sbb
adc
mov
std
pusha
mov
xchg
cld
clc
xlat
lock
cwtl
imul
sbb
test
push
cld
add
sbb
cmp
xor
jecxz
cld
addps
pusha
nop
fistpll
std
mov
pop
and
mov
loopne
call
nop
sub
adc
std
push
or
rcrl
movsb
or
popf
mov
jmp
mov
nop
mov
movsb
lret
push
into
sub
and
add
in
sarl
jns
clc
adc
sbb
add
test
fists
mov
cmp
jb
mov
clc
fnstcw
pop
mov
dec
es
movsb
sub
xor
dec
sub
dec
es
fs
sbb
es
fs
and
cltd
fs
dec
sub
xchg
dec
es
xor
es
xor
cmp
sub
rorb
cmp
pushf
xchg
dec
sub
adc
xchg
dec
sahf
sti
mov
sub
xchg
dec
sahf
xchg
push
insb
cld
in
pop
fcompl
pop
push
std
or
and
test
ljmp
dec
cmp
push
jns
lret
out
popf
push
fsubs
dec
add
outsl
je
stc
repnz
fs
jne
dec
jne
inc
imul
adc
mov
xchg
inc
dec
jb
pop
outsl
jb
insl
jo
in
jg
inc
jb
insl
push
je
pop
push
cmp
enter
and
jns
mov
cmp
mov
inc
jae
pop
inc
jns
adc
xor
pop
outsl
or
add
pop
and
xchg
dec
add
fldl
xchg
xlat
inc
add
and
cmp
sbb
dec
bound
in
lret
fldcw
inc
adc
jp
add
mov
inc
daa
mov
jns
cmpsl
insl
dec
nop
sub
sbb
xor
int
sbb
xor
jnp
inc
push
fs
es
adc
in
mov
pusha
sub
sbb
in
testb
adc
or
xchg
add
ret
stc
out
xchg
inc
mov
and
inc
dec
mov
sbb
adc
add
shrl
es
jl
pop
and
jnp
loopne
adc
push
dec
mov
pop
inc
jb
lret
inc
add
inc
add
mov
adc
sub
fidivs
xchg
adc
push
or
cltd
add
rol
or
sbb
or
dec
outsl
mov
and
bound
iret
pop
pop
xchg
pop
je
jb
clc
sbbl
add
dec
insl
jo
nop
adc
and
xchg
and
stos
mov
jno
and
test
arpl
adcb
jb
stc
or
or
fimuls
arpl
dec
jle
mov
adc
xor
repnz
mov
dec
cld
adcl
cs
int3
add
insl
pop
xchg
mov
dec
sti
dec
dec
aas
in
in
add
in
movsb
mov
lret
in
adc
out
sti
add
mov
or
call
mov
call
das
es
test
xchg
adc
or
xchg
push
shll
or
pop
jb
shlb
gs
add
scas
loopne
xor
add
add
decb
inc
repnz
and
add
test
mov
add
or
cmp
jg
xor
sbb
xchg
cs
sub
xor
scas
sti
and
dec
je
xchg
jno
cltd
sbb
xchg
data16
xor
lahf
push
nop
es
sarb
add
and
jno
in
insb
mov
mov
add
xchg
out
dec
pop
clc
adc
mov
ficoms
xor
mov
and
lock
inc
sahf
lock
je
and
add
repnz
adc
sub
add
xchg
jnp
jae
loopne
in
xchg
loopne
pop
push
push
shl
add
sbb
add
enter
jge
or
xor
xor
cmpsb
push
enter
mov
shlb
jno
jns
xor
nop
add
mov
pop
fidivrs
enter
xchg
sub
in
inc
lock
push
sub
je
jbe
mov
aad
mov
adc
xchg
inc
push
enter
or
mov
in
repnz
or
les
xchg
aam
sbbb
add
scas
jo
push
roll
rcrl
stos
cmpl
dec
xchg
add
inc
adc
add
jae
repnz
in
pop
mov
and
pushf
xchg
add
pushf
xchg
cmp
jmp
push
mov
insl
adc
mov
lods
xchg
mov
decl
lret
call
or
inc
add
hlt
mov
add
andb
sub
pop
mov
je
xchg
pop
add
and
pop
imul
lock
addl
mov
clc
jmp
and
loopne
sub
xchg
mul
scas
sub
xor
lea
and
and
or
dec
and
clc
in
enter
cld
and
pop
push
xchg
mov
sub
inc
pop
dec
inc
pusha
cmpsl
xor
sbb
inc
rclb
cltd
sbb
push
ret
repz
dec
cmp
lds
push
call
mov
in
fdiv
cltd
mov
insl
xorb
push
push
lret
xchg
cld
jmp
adc
push
stos
jo
lods
insb
pushf
notb
or
cmp
jge
loopne
adc
shlb
or
jmp
jmp
div
and
fsubr
and
das
add
mov
push
das
sti
mov
add
jo
jmp
mov
sbbl
push
mov
daa
add
mov
je
aas
sahf
pop
enter
loopne
clc
xchg
nop
mov
mov
aaa
cmp
push
add
or
xchg
inc
pop
in
or
adc
nop
in
loopne
or
adc
stc
or
test
xchg
std
cmp
out
outsb
stc
push
push
jno
lds
jecxz
sub
jae
adc
pop
or
adc
mov
imul
cmp
sub
ret
outsl
cmp
daa
mov
inc
call
xchg
jmp
sbbb
fldt
and
adc
addl
popa
mov
sahf
data16
push
push
adc
call
loopne
and
or
or
pop
cmp
loopne
add
mov
les
cld
rcll
test
adc
dec
push
jmp
or
push
inc
inc
sbb
sub
xor
cmp
je
movsl
loopne
ss
jne
push
cmp
cmpsb
pop
inc
add
xor
rorl
or
or
int3
rcll
and
add
cmp
enter
fwait
mov
je
test
mov
cmc
mov
sbb
sbb
outsl
sbb
pop
xchg
es
nop
jns
insb
adc
push
mov
movzbl
and
and
inc
inc
add
add
adc
cld
push
test
jae
sti
inc
mov
lock
jnp
mov
mov
add
test
mov
fbld
call
and
adc
jmp
sub
sbb
mov
ret
ret
add
push
cmp
cltd
mov
or
movsb
dec
pop
or
and
add
push
jno
push
cmpsl
lcall
adc
sub
fstp
inc
cmp
dec
and
inc
push
push
xchg
adc
jmp
push
mov
and
add
leave
movsl
lds
inc
jae
enter
ret
adc
mov
add
jmp
pushf
movsb
mov
and
fisttps
cmp
adc
fcompl
addb
outsl
pop
rcll
pusha
sbb
filds
inc
and
cmp
ja
mov
ret
cmp
repz
adc
sub
lcall
popf
int3
push
jnp
fnsetpm(287
jae
daa
out
sbb
iret
cmp
add
subl
or
test
push
sbb
rcr
mov
les
mov
and
inc
xorl
sub
fistl
xor
test
stc
mov
xchg
pop
lock
test
pushl
add
xor
add
inc
imul
js
es
push
add
xor
xchg
dec
push
loopne
mov
and
loopne
movsbl
enter
fdivrs
sbb
aam
xor
sbbb
movsb
mov
clc
rcl
shlb
int3
cmp
jne
je
in
in
int
in
add
xorl
add
dec
je
jmp
fcom
mov
les
vextractps
je
loope
int3
and
push
in
imul
pop
rcrl
pop
dec
sbb
jns
out
cmpsb
leave
call
jnp
pop
sbb
pop
pop
xor
push
outsl
mov
ljmp
ret
or
mov
in
in
pop
flds
jno
mov
pop
fnsave
mov
jb
cmp
nop
ret
pusha
cmp
jae
cmp
dec
orl
fwait
test
aad
xorl
mov
fnstenv
and
mov
xchg
stos
cwtl
jno
inc
outsb
push
lock
adcl
ds
nop
pop
mov
fcoms
gs
push
mov
mov
iret
and
aaa
sbb
mov
cli
or
add
sbb
push
test
mov
add
inc
mov
sbb
pop
xchg
push
leave
std
sbb
add
popa
jno
adc
in
push
mov
add
and
in
and
cmc
nop
mov
jle
or
shl
inc
jb
sbb
push
xor
mov
aad
sbb
add
sbb
xor
inc
dec
fists
loopne
adc
in
loopne
sbb
xchg
adc
dec
sbb
and
test
inc
aas
lret
xchg
cmp
cmp
int
mov
in
adc
cmp
repz
mov
test
daa
stc
dec
clc
mov
dec
push
leave
out
push
adc
or
fcoms
fiadds
cmp
dec
cmp
popa
sbb
inc
fcomps
xor
inc
mov
lcall
aaa
fwait
es
xor
and
gs
adc
pop
mov
test
dec
fdivs
and
test
aam
mov
dec
dec
pop
pop
jne
or
add
xor
add
loopne
insb
push
and
es
or
sbb
ret
and
pop
out
into
jbe
in
pop
pop
pop
jns
mov
sbb
sub
pop
pop
inc
addl
and
xlat
test
and
in
inc
pusha
aaa
and
inc
cwtl
add
arpl
test
mov
pop
cmp
sbb
fwait
inc
xor
popa
test
test
lods
sub
cmp
dec
daa
pop
mov
popa
jb
xor
pushf
jno
lock
test
jae
and
xchg
popf
xchg
jb
dec
cwtl
and
or
nop
push
nop
jmp
mov
aad
mov
dec
cmp
sbb
movsl
sub
pushf
in
nop
aas
mov
fidivl
pop
sub
mov
jo
hlt
add
inc
sub
pop
and
sbb
add
push
enter
push
mov
adc
ficomps
inc
cmpsb
gs
mov
or
or
loop
push
pxor
out
pop
xchg
xor
fstpl
fwait
scas
fimull
mov
pop
push
add
lea
cmp
lret
cmc
or
inc
jnp
inc
mov
and
add
pop
xor
aas
enter
jo
jb
sub
ficoms
mov
aas
jmp
adcb
inc
insl
jo
jns
sub
es
dec
jne
pop
push
nop
scas
add
push
add
ret
dec
and
pop
dec
stc
adc
inc
push
ds
dec
jle
insb
add
inc
outsl
jne
xchg
fs
ljmp
cmp
jmp
mov
pusha
dec
addr16
xchg
test
rolb
adc
arpl
jbe
ficompl
das
aas
inc
cmp
shl
arpl
aas
and
inc
adc
adc
push
fcmovbe
cmp
pop
xchg
xor
ret
xorb
aad
into
shlb
jae
movsl
mov
idiv
icebp
dec
mov
andb
sti
and
ss
mov
sub
push
dec
leave
lods
jbe
aas
inc
sti
inc
or
sbb
cwtl
insb
das
add
test
push
inc
pop
jmp
push
add
cmp
cmp
ret
movsl
lea
jne
and
lcall
aam
popa
pusha
test
add
sub
push
xchg
clc
dec
dec
mov
and
or
sub
mov
mov
pop
xor
test
pop
inc
outsb
jns
and
push
push
gs
push
and
test
ret
add
andb
add
hlt
cli
xor
add
cmp
inc
jecxz
adc
scas
mov
push
jle
nop
imul
sbb
inc
push
icebp
fisttpl
xorl
sbb
add
cmp
imul
pushl
out
aam
cmp
pusha
jae
test
ja
add
push
cmp
loope
or
outsb
xor
dec
cli
sbb
movsb
add
ss
push
xchg
xlat
pop
push
cmpsb
clc
sbb
pop
lds
ja
xchg
cmp
jnp
mov
pop
adc
into
xchg
add
add
or
pop
pop
dec
mov
inc
lea
fsubrl
dec
inc
test
mov
add
cmpb
mov
insb
push
incb
mov
call
mov
add
push
inc
mov
jg
orl
bound
idiv
out
daa
xor
xor
add
pop
jl
adc
push
orl
aam
repz
orb
mov
xchg
mov
lods
jle
das
in
dec
icebp
or
aam
mov
cmp
mov
ljmp
in
xchg
fdivrs
cmp
inc
idiv
adc
sti
call
add
aaa
adc
enter
or
gs
and
loopne
cmp
adc
or
xor
ljmp
cmp
push
sub
in
mov
mov
mov
jno
loope
ja
inc
mov
push
fnstenv
jns
imul
pop
sub
inc
ja
sub
leave
lock
stc
dec
leave
mov
leave
sub
sub
sbb
xchg
jl
inc
xor
dec
mov
mov
xor
sahf
lock
sbb
adc
hlt
jl
adc
jle
or
and
sbb
inc
inc
dec
jne
cltd
cmp
inc
push
xor
cmp
adcb
dec
lods
pop
add
jle
push
stc
mov
sub
adc
xor
or
call
dec
jecxz
jno
cmp
jp
push
sbb
lock
sub
fisubrl
insl
in
les
scas
bswap
leave
leave
leave
nop
xchg
xchg
xchg
leave
leave
leave
leave
xchg
xchg
xchg
xchg
leave
leave
leave
leave
cwtl
cltd
lcall
popf
sahf
lahf
leave
leave
leave
leave
addb
leave
test
leave
leave
mov
leave
leave
mov
mov
add
das
inc
push
add
and
push
add
imul
add
jge
pop
add
lea
jl
cld
inc
les
mov
add
mov
xchg
add
sbb
test
jne
xchg
jmp
push
mov
dec
xor
cmp
jle
mov
imul
dec
adc
hlt
push
adc
jge
scas
mov
jmp
cmp
sub
movsb
add
mov
test
hlt
push
lods
mov
rorl
gs
mov
sbbl
cmpsb
fisttpl
mov
int3
jo
clc
jl
or
sbb
icebp
call
pop
sbb
je
mov
and
sub
out
add
and
jmp
mov
and
je
jmp
cmp
sbb
test
xchg
movsl
or
out
jne
mov
push
int
sub
sti
imul
or
stos
mov
push
dec
inc
push
or
sbb
pop
sbb
lcall
or
bndstx
jmp
and
lds
mov
mov
mov
cmpb
je
std
outsl
outsl
xor
dec
and
decb
ja
pop
sbb
or
jmp
or
inc
inc
imul
adc
pop
movsb
push
add
add
ret
or
movsbl
and
or
jle
add
mov
jo
aaa
iret
xchg
daa
add
fisttpl
cmp
sahf
jne
mov
mov
cmpb
ja
jb
jl
sahf
das
add
add
call
out
mov
sbb
mov
and
inc
outsl
cli
jmp
dec
stc
mov
outsb
fisttps
adc
por
adc
or
jmp
movsl
mov
sub
sahf
push
add
cld
loope
inc
imul
xchg
bound
and
out
sbb
int
jle
jb
sbb
cmp
pop
mov
xlat
or
rol
ljmp
sub
cmp
fimull
mov
fsubr
and
gs
les
or
adc
or
adc
dec
testl
mov
xchg
add
inc
mov
sidtl
xor
add
and
jae
cmc
and
xor
cld
icebp
sbb
fistps
pop
mov
inc
push
push
or
incb
pop
adc
sbb
mov
adc
idivb
pop
xor
loope
sbb
sub
push
sub
dec
or
call
inc
fsubs
out
dec
hlt
icebp
and
jmp
clts
fmuls
and
push
loop
jne
and
add
fdivrp
scas
hlt
inc
imul
cmp
or
push
loopne
rorb
idivl
cld
xchg
cmp
int
imul
pop
adcl
ret
test
outsl
sbb
mov
xor
xchg
pop
inc
jnp
inc
xor
inc
xlat
lcall
xchg
push
lods
call
iret
fcmovu
insl
or
sbb
fsubl
sub
in
sub
add
or
pushw
or
cmp
mulb
fmuls
sub
pop
lret
add
mov
mov
jge
dec
and
pop
jae
or
or
push
rcrb
xchg
inc
clc
fnstenv
and
xchg
pop
out
sub
ret
adc
push
aam
test
fistpll
outsl
xor
sub
shl
push
mov
cmp
pop
xor
xor
push
add
jmp
sbb
sub
sbb
adc
push
or
push
mov
pop
push
mov
add
mov
jp
enter
jl
jno
pushl
int3
fildl
sbb
adc
roll
adc
fs
or
rcrb
inc
pop
testl
cmpsl
xchg
dec
ret
xchg
mov
stc
fs
jbe
fnstcw
or
and
jmp
cmp
and
xlat
sbb
aaa
cmc
xchg
in
mov
std
inc
mov
pop
cwtl
push
call
adc
mov
xor
mov
out
xor
pop
mov
xor
pop
jb
aad
xor
int3
sbb
or
arpl
ljmp
or
cmp
gs
lods
mov
sbb
data16
sbb
push
xor
inc
pusha
gs
inc
insb
popa
add
jae
sbb
imul
jl
add
test
fnstcw
adc
dec
outsl
dec
bound
mov
dec
outsb
insb
jns
data16
mov
fwait
mov
mov
ss
push
mov
cmp
or
jb
or
cmpsl
or
dec
inc
lock
insb
gs
xchg
cmp
pop
jle
push
or
rol
lahf
out
hlt
add
dec
movsb
dec
test
mov
add
nop
adc
out
aaa
outsl
cmp
xchg
or
or
dec
gs
rclb
jae
mov
outsb
add
jne
rcr
nop
shll
ret
in
mov
adc
inc
jbe
dec
or
push
fmuls
lds
in
ds
add
insb
loop
pop
das
xor
mov
insl
wrmsr
aaa
lret
test
and
dec
inc
sub
mov
and
nop
imul
and
mov
inc
inc
jae
or
outsb
enter
cmp
inc
cmp
lret
adc
jb
pushf
cmp
aaa
or
testb
pop
mov
scas
es
nop
hlt
pop
cmp
jle
jae
dec
cmp
popf
add
inc
and
inc
frstor
nop
test
mov
push
adc
sarl
add
mov
cmp
inc
ficoms
je
scas
inc
jle
jb
inc
imul
mov
addb
push
cmp
adc
mov
adc
mov
add
pmaxsw
jo
xor
mov
cmp
ret
push
and
add
nop
jb
or
outsl
sbb
pop
int3
adc
xor
sub
mov
cmp
cmp
les
popa
in
jne
inc
push
arpl
js
shrb
add
loop
and
mov
fisttpl
sub
fldcw
call
or
cmp
push
push
add
icebp
imul
push
adc
lock
add
sub
inc
sbb
in
xor
jae
test
xchg
jmp
pop
and
js
test
je
xchg
or
hlt
mov
adc
int3
lea
push
movsl
cmp
test
jnp
mov
sbb
cmp
push
and
dec
ds
fildll
jecxz
nop
inc
pop
imul
xchg
push
iret
xor
adc
nop
fucom
pop
xor
cmp
shll
pop
push
push
aas
test
inc
mov
out
sub
outsb
push
cmp
test
stos
in
or
repnz
insb
cwtl
jp
ficoml
cmpsl
push
xorb
sub
sub
cwtl
dec
shl
push
lock
outsl
shr
sbb
outsb
and
xor
cmp
cmp
xor
or
roll
aaa
sbb
cld
sti
stos
inc
ds
push
adcl
lea
push
pusha
adc
and
fidivs
pop
mov
xchg
push
pushf
movsl
add
push
sbb
dec
aas
cmpsl
lea
add
push
adc
sbb
pop
xor
aas
jns
add
orl
sahf
fs
shll
add
xor
pushf
jae
push
rclb
sahf
cmpsb
fdivrs
pop
sbb
sbb
inc
pushf
sbb
or
cli
inc
jae
adc
test
out
jbe
in
daa
imul
les
cld
jle
jg
adcb
ja
or
jbe
push
and
mov
addr16
ja
mov
adc
out
sub
jl
sbb
ss
mov
jns
loopne
hlt
cmpb
add
popa
xor
inc
jp
xor
xor
shr
cli
adc
leave
push
or
sub
cwtl
dec
inc
inc
and
sahf
mov
xor
outsb
adc
sahf
jbe
dec
addb
ss
xor
outsl
in
mov
sbb
sbb
fadds
fdivl
xchg
xor
xchg
enter
rorb
or
inc
mov
insb
xchg
hlt
mov
nop
mov
mov
idivl
lcall
inc
popa
aad
mov
jmp
nop
movb
lea
cmp
rcl
mov
push
push
das
fsubr
rolb
push
aaa
push
lock
inc
daa
pusha
lds
and
xchg
push
call
mov
push
dec
inc
push
cltd
add
arpl
dec
int3
insb
sahf
je
sub
adc
pop
in
das
inc
sub
inc
aas
int3
xor
mov
add
or
xchg
mov
sub
into
pop
and
pop
ret
push
lahf
xchg
inc
mov
pop
mov
add
cltd
movsl
xchg
xchg
inc
cmp
adc
movsb
adc
shll
das
push
mov
inc
enter
rclb
inc
jnp
mov
hlt
xchg
lahf
repz
xorb
test
mov
aaa
repnz
xchg
or
dec
push
adcb
cmpsl
or
icebp
pop
adc
mov
pop
pusha
cltd
inc
ljmp
cltd
inc
inc
jne
dec
dec
fs
addr16
or
cmp
adc
cmp
add
nop
and
rcrb
push
add
xor
jo
in
in
jns
mull
in
out
mov
jns
dec
pop
imul
sub
icebp
jns
mov
jmp
xchg
cs
mov
adc
int3
dec
add
loope
sarl
push
shrb
lods
adc
jbe
jns
out
push
and
cmp
les
rcll
dec
je
aas
or
mov
pop
xchg
push
outsb
mov
stos
in
xchg
sub
cltd
loope
mov
sbb
aam
rolb
jp
jg
fisttps
mov
fisubs
es
cmp
fsubs
cmp
push
jo
nop
dec
mov
lcall
dec
and
xlat
adc
mov
adc
dec
pop
mov
dec
pop
inc
or
shlb
jns
jl
roll
rorl
js
fidivl
icebp
roll
sbb
dec
mov
inc
nop
ds
mov
inc
test
das
pop
call
bnd
mov
rorb
mov
xchg
fmuls
int
pop
fsubr
mov
das
mov
loopne
nop
add
aam
dec
iret
repz
or
dec
sub
jg
add
xchg
pop
inc
int
dec
addb
jns
jp
test
out
ss
mov
adc
and
add
jnp
out
push
aam
add
les
xor
leave
xchg
addr16
fldl
inc
add
pop
pop
dec
fldenv
fidivl
fmuls
sub
jl
out
imul
fs
jo
loopne
mov
ljmp
clc
push
push
push
push
push
push
stc
mov
push
call
mov
clc
sub
iret
repz
cmpsl
cld
add
push
adc
aam
iret
sarl
hlt
fdivrl
add
rolb
sbb
sbb
mov
sub
arpl
lcall
xor
push
decb
add
cmp
mov
mov
incl
add
cmc
add
testb
push
dec
adc
push
fs
cmpsl
stc
cmp
les
subl
push
inc
push
arpl
inc
test
stos
dec
cli
imul
dec
xchg
xchg
in
dec
push
push
push
push
mov
pushf
dec
and
mov
fisubrs
push
loopne
in
addb
shl
repz
test
add
out
pushl
add
pop
sub
rorb
mov
jp
push
dec
dec
fs
test
mov
add
jb
out
xor
or
pop
pop
push
lretw
sbb
in
dec
pop
push
lea
mov
insl
gs
xlat
rcrb
xor
dec
jl
cmp
jne
in
mov
xor
je
sbbb
dec
sbb
dec
and
mov
mov
jb
jne
fsubrl
out
jl
or
push
cmp
mov
pushf
push
enter
push
add
add
in
push
mov
dec
ret
ja
sbb
bound
ss
xchg
cmp
test
and
and
or
in
and
jmp
dec
pop
and
lret
mov
incl
pop
or
pop
adc
lock
add
je
sub
sub
inc
fsubl
test
and
and
jmp
sbb
adc
jno
jbe
add
out
adc
dec
fistps
stc
mov
stos
inc
ret
sbb
sub
scas
loopne
pop
xchg
add
push
inc
xlat
and
mov
or
pusha
pop
pop
stc
add
xor
add
jo
or
adc
stos
cmc
pop
lods
sub
push
push
or
jl
mov
xor
shlb
xbegin
xor
sub
dec
jne
pop
or
xor
push
mulb
xlat
rorl
or
sbb
pushw
or
and
rolb
inc
jle
or
push
inc
int3
sbb
int
dec
ja
mov
in
mov
and
inc
ds
inc
inc
hlt
mov
lods
in
in
inc
pop
je
adc
push
adc
sbb
sbb
add
xchg
out
sbb
mov
leave
xor
add
add
or
inc
sub
rcrb
pop
imul
adc
jl
push
test
sbb
sub
mov
cmp
mov
decl
cmpl
pusha
sbb
inc
in
sbb
xchg
aad
nop
cmp
pop
imul
pop
jle
shll
outsb
je
dec
cmp
mov
fnsave
mov
dec
jne
rolb
dec
jne
rolb
mov
xor
adc
add
and
or
pop
mov
dec
ret
std
les
jecxz
xchg
daa
sbb
mov
add
inc
or
pusha
or
cmpb
dec
add
inc
ret
fcmovnbe
movb
test
mov
or
sbb
pop
into
add
push
sbb
loopne
pop
fsubr
xor
cwtl
jmp
popa
dec
lret
cmpsl
test
aam
call
inc
mov
and
xchg
out
cmp
inc
dec
jne
xor
xchg
mov
loop
js
sub
ljmp
scas
mov
es
into
sub
loopne
clc
and
mov
xlat
add
inc
cmp
loope
hlt
push
or
push
jecxz
cmpsb
dec
mov
mov
cs
aaa
sbb
pusha
call
cwtl
rcl
add
ret
sbb
inc
pusha
adc
add
in
inc
aaa
or
dec
push
jl
inc
fidivs
push
push
in
or
hlt
cmp
cmp
je
and
dec
dec
cmp
inc
fldt
add
es
stc
fcompl
pop
push
dec
lock
fbstp
faddl
jmp
decl
jne
lods
or
adc
jbe
inc
mov
fistpll
leave
lock
adc
enter
sbb
push
xor
mov
out
cltd
out
mov
test
ret
mov
fnstsw
sbbb
pop
push
int
rorb
shrl
mov
punpcklbw
pop
xor
xchg
inc
mov
in
js
add
sti
sbb
pop
pop
dec
lahf
lret
mov
test
outsl
hlt
mov
add
test
add
pop
sbb
add
popa
pop
mov
or
jae
lods
adc
adc
fadds
mov
xchg
cmp
xor
cmpb
add
adcb
jecxz
or
mov
dec
jae
je
push
scas
imul
or
test
test
xlat
add
imul
arpl
jb
stos
or
mov
cmp
and
cmpsl
scas
pop
movsb
scas
ss
imul
dec
dec
mov
hlt
jmp
push
test
arpl
mov
sub
mov
dec
sub
add
jg
pop
cmp
imul
adc
jbe
adc
ret
xor
inc
jge
je
les
xbegin
ret
dec
sub
pop
sbb
xor
dec
in
in
imul
sbb
sbb
es
sbb
cmp
push
rcll
in
and
or
lds
mov
jb
inc
sbbb
or
and
bound
and
fwait
in
into
mov
or
sbbb
dec
pop
in
mov
inc
mov
xorl
adc
dec
inc
or
or
rorl
jl
jae
addr16
icebp
and
or
or
rolb
add
sub
mov
pop
outsb
dec
mov
mov
xchg
xlat
and
cld
cmp
xchg
pop
pop
popa
and
mov
or
rclb
fbld
leave
xchg
out
pop
mov
pop
divl
push
in
xor
sub
lea
xchg
rolb
aam
lahf
push
cmp
cld
mov
mov
cli
loope
and
inc
add
mov
jne
sbb
sub
mov
or
out
fmull
int3
add
jp
les
add
fcoml
daa
mov
push
sbb
adc
addb
ja
jmp
rclb
ret
divl
mov
test
xor
pop
dec
call
dec
jl
mov
push
and
subl
jecxz
xchg
andb
jcxz
daa
mov
add
mov
arpl
jge
push
nop
pop
xor
hlt
or
mov
inc
xchg
dec
pop
sub
dec
mov
push
sub
push
xor
adc
dec
cmp
inc
push
es
mov
ret
cmpl
cmpsb
add
cwtl
dec
nop
outsl
jl
and
adcb
arpl
in
or
inc
cltd
sbb
insl
xchg
or
out
add
sbb
pop
adcb
mov
xor
push
outsb
lock
test
mov
dec
cs
jnp
mov
push
arpl
movsb
into
xchg
dec
sahf
fwait
shlb
les
xor
cmp
pop
pop
mov
clc
je
lret
aam
jbe
sub
mov
xchg
or
addl
and
dec
rorb
fldenv
or
arpl
jno
sub
ja
xchg
popa
movsl
sbb
and
movsb
es
test
cmp
mov
testb
dec
push
imul
push
dec
mov
push
lods
lea
add
jp
das
fmull
aas
cltd
sub
andb
inc
push
pop
xchg
push
and
xchg
and
lods
das
cmc
sub
incl
or
insl
mov
mov
lahf
nop
jnp
inc
dec
add
adc
xor
mov
add
push
test
sbb
add
lods
stos
mov
mov
addr16
sbb
add
lea
or
movsb
inc
lods
and
ret
and
jmp
lret
popf
jo
mov
dec
cmp
clc
pop
mov
jns
shlb
sarl
test
test
jns
insl
mov
dec
jmp
out
push
inc
inc
xchg
loope
push
outsl
push
mov
push
adc
xchg
sbb
sbb
add
stc
add
adc
dec
out
gs
imul
mov
imul
jle
test
stos
add
dec
or
add
adc
jne
or
movsl
negb
jne
leave
mov
or
in
stc
std
jle
cmp
push
xor
loop
adc
pop
dec
mov
jecxz
adc
pop
dec
lea
divl
imul
out
jl
call
and
mov
jmp
push
fwait
lahf
sahf
popf
push
or
pop
and
mov
sahf
push
jns
xor
lcall
jl
jbe
into
inc
adc
push
jg
or
pop
sbbl
je
push
rolb
xor
xchg
pop
and
add
insb
mov
mov
es
mov
popa
lods
and
xor
movsb
fs
lcall
mulb
mov
pop
dec
dec
mov
sub
jg
dec
mov
add
adc
add
push
sysret
xlat
movsl
xor
adc
inc
mull
add
dec
add
inc
and
pop
sbb
nop
popf
pop
inc
mov
dec
push
js
leave
in
and
in
push
data16
outsb
mov
add
mov
and
movsl
in
cmp
pop
sti
fucompp
loopne
js
lds
mov
iret
push
adc
inc
jne
in
push
dec
add
lds
adc
adc
inc
out
dec
sbb
inc
and
xchg
pop
and
aaa
adc
and
add
fdivrs
dec
outsb
adc
filds
pop
lods
mov
pop
add
lret
popa
loop
cmp
xchg
insb
rorl
push
xchg
movsl
add
test
jge
push
mov
mov
hlt
rcrb
clc
add
in
sbb
add
sbb
call
mov
inc
loope
je
andl
pushf
scas
pop
rcrl
add
loop
xor
addb
aad
push
mov
jg
pusha
mov
pop
cmp
jae
cli
in
or
or
je
stos
adc
btr
cmp
jl
jne
jbe
adc
jmp
pop
mov
dec
ret
daa
push
jno
sbb
enter
ljmp
xor
lock
cli
pop
ja
and
bt
jb
shl
std
test
ret
ret
cmpsb
icebp
mov
cmp
jne
inc
decl
jne
les
bound
push
or
push
notb
ret
and
jmp
in
and
push
sbb
xor
adc
add
inc
popa
in
lock
jbe
add
mov
cltd
lods
sets
arpl
imul
outsb
imul
xor
repnz
test
mov
mov
inc
cs
sbb
inc
push
incb
push
sarl
pushl
js
or
ret
jne
push
sub
adc
les
xchg
dec
add
and
call
or
dec
test
xchg
pushf
sbb
lahf
fmuls
push
scas
ficomps
or
imul
aas
or
inc
mov
sbb
clc
adc
inc
rcrb
cmp
sub
add
popa
incl
sbb
je
addr16
push
mov
and
jmp
pop
push
adc
jl
inc
and
test
lds
insl
enter
stos
adc
push
mov
rclb
xchg
jl
push
adcb
xorl
adc
mov
push
mov
jo
movsb
jg
xor
cmpl
out
pop
push
add
sbb
push
aam
pop
push
add
inc
and
or
ret
mov
nop
xchg
sbb
adc
and
adc
ja
xchg
cmp
in
in
cltd
jnp
add
aas
push
mov
imul
call
mov
dec
push
movsb
jmp
in
in
adc
dec
ja
insl
in
sbb
cli
iret
push
and
pop
push
adc
addl
cmp
je
jge
add
aam
flds
insb
jle
pop
call
stos
rcrb
pop
jbe
xchg
jbe
jo
into
jne
adc
icebp
push
loope
pop
das
mov
cld
sahf
cmp
mov
mov
push
out
aaa
fbstp
mov
nop
negb
mov
lea
sub
cmp
pop
sbb
jp
cmp
xchg
ljmp
xchg
test
aas
push
jle
and
movntq
pop
jge
pusha
ljmpw
mov
and
cld
pop
rorl
outsb
ja
jo
pop
scas
mov
sub
inc
and
and
dec
testl
adc
pop
hlt
jnp
push
mov
outsl
xchg
cli
push
add
add
dec
inc
es
mov
addr16
or
int
cmp
jnp
call
repnz
rcrl
pop
pop
mov
push
mov
dec
pop
lock
iret
sub
fidivl
mov
xor
xchg
mov
das
popf
rolb
clc
out
cmp
cmp
add
cmc
cmp
test
clc
inc
pusha
xorl
push
mov
inc
sub
pop
adc
push
clc
cwtl
mov
and
inc
ss
clc
pop
imul
sbb
loope
push
adc
js
or
cmpsb
sub
rcrb
cmovl
int3
xor
xchg
mov
xchg
push
shlb
mov
sbb
xor
js
add
data16
xchg
sub
inc
pop
xorl
sbb
pop
xor
inc
sti
inc
jmp
xor
jb
cmp
jne
sbb
adc
fs
xchg
cmp
push
insb
loope
adc
push
sbb
inc
dec
jne
and
int
push
pop
jb
hlt
adc
add
dec
mov
aad
outsl
adc
mov
imul
adc
fldcw
aaa
sbb
call
lods
stos
in
enter
jmp
out
iret
pop
push
mov
or
push
fldenv
imul
or
shrl
mov
mov
bound
cs
jb
xor
mov
stos
push
or
iret
pop
ret
adc
or
and
sbb
daa
pop
data16
pop
adc
rcll
mov
push
scas
repnz
adc
std
cmp
xchg
push
cmp
pop
std
ja
and
and
pusha
mov
sub
shrb
sub
jno
jns
sbb
jne
enter
dec
push
cmpl
int
je
dec
dec
xchg
add
dec
push
daa
outsb
mov
mov
inc
inc
jb
js
dec
imul
ret
movsl
dec
cld
je
lods
xchg
inc
insb
adc
iret
in
cmp
or
aam
sahf
cs
cs
cs
push
add
roll
jne
sbb
test
xchg
xchg
lock
out
sahf
popl
mov
mov
mov
sbb
mov
cmc
dec
clc
imul
pop
out
pushf
and
mov
inc
sbb
sub
xor
adc
adcb
push
arpl
icebp
adc
addb
mov
adc
sbb
and
mov
pop
rcrl
xlat
or
popa
leave
cmc
jbe
mov
cmpsl
movsl
jo
cmp
daa
xchg
dec
xor
cld
lock
xchg
mov
in
push
in
pop
adc
pop
or
adc
in
pop
cld
jbe
in
adc
push
pusha
push
nop
daa
adc
add
add
cmp
jo
test
mov
rcrb
pop
iret
mov
leave
and
xchg
ja
rolb
push
pop
lock
sub
dec
shll
dec
ret
fcoms
xchg
push
sub
cld
push
push
mov
sub
xor
dec
xchg
and
lds
fsubs
test
imul
mov
movsb
repnz
js
jle
sub
and
push
push
or
sub
ret
xchg
es
add
jbe
mov
mov
adc
lock
and
or
jns
js
sbb
imul
clc
pop
add
loopne
inc
std
jb
mov
inc
mov
jns
test
dec
xchg
pushf
and
dec
mov
outsl
daa
mov
nop
push
jb
test
popf
push
fsub
and
adc
fadd
and
in
jp
shll
pop
push
or
js
mov
sbb
in
aas
jo
test
mov
fisubrl
inc
lods
fcmovb
fsubrs
and
rolb
dec
sub
lock
in
leave
les
lcall
outsb
loopne
pusha
adc
cld
cld
mov
pusha
rcrl
sub
fdivrs
mov
clc
inc
clc
in
jl
stc
test
hlt
jp
stos
adc
gs
mov
jb
fcomip
cld
mov
cmc
jnp
and
dec
xor
scas
pop
cmc
jl
lods
jne
jecxz
in
loope
leave
ret
push
add
jo
or
in
sbb
mov
cmp
jl
sbb
or
js
mov
lock
xor
or
xor
fsubrl
jno
jl
adc
call
fs
and
sub
addr16
xchg
mov
daa
inc
xor
rcll
repz
push
mov
jmp
cld
outsl
clc
test
mov
ud0
and
xchg
faddp
outsl
jle
or
mov
jecxz
sbb
inc
push
test
outsb
adc
dec
aam
out
adc
or
or
stc
adc
es
xchg
xchg
ret
sub
xchg
push
inc
loop
xor
mov
adcb
test
dec
push
xchg
xchg
fwait
jge
dec
inc
shlb
sbb
add
cmp
fisubl
sub
lock
xor
jge
sub
into
xor
lahf
jo
aas
pop
push
add
sub
daa
jle
movsl
fwait
inc
inc
cmp
pop
or
pop
in
jle
pop
adc
jle
cmp
pop
dec
push
adc
fs
xlat
hlt
cmp
test
dec
movsb
jmp
fcmovne
sbb
jnp
xlat
addr16
data16
sbb
jg
inc
pop
daa
dec
mov
cmpsl
xor
push
mov
pop
xchg
cmp
or
and
sub
xchg
insl
mov
int
dec
push
aad
cmpsl
fstpt
mov
push
leave
add
cmpb
pop
and
adc
mov
sbb
mov
sub
sub
sbb
mov
sub
jne
mov
adc
pop
aaa
pop
jno
push
inc
mov
or
push
adc
push
test
and
rorl
push
pop
xlat
or
xchg
mov
or
orb
movsb
add
loopne
jb
ss
int
fwait
in
push
xchg
and
mov
xor
mov
test
push
ljmp
mov
repz
in
xor
xchg
sub
stos
add
stos
add
into
jns
rclb
cmp
add
push
add
andl
mov
test
in
jge
or
call
push
in
imul
int
cltd
ret
call
inc
enter
shrl
cmp
jne
stos
push
aaa
call
fsubrs
scas
xchg
adc
cmp
adc
mov
stc
je
inc
pop
inc
sbb
xchg
ja
sub
or
es
mov
ret
lods
rcl
movsb
fistpl
rcl
pop
test
imul
hlt
cmpsb
cmp
scas
in
test
sub
loop
sbb
push
pop
add
pop
add
repz
nop
and
ss
mul
scas
sbb
and
loopne
mov
jne
pop
add
jmp
jg
jmp
mov
jge
cmp
mov
and
pop
je
aaa
insl
scas
fs
push
xchg
pop
cmp
popa
or
lret
loopne
or
cwtl
dec
je
add
shrb
mov
or
jecxz
add
test
enter
test
div
inc
add
in
outsb
xlat
push
mov
or
mov
add
lods
and
scas
fists
in
int3
or
adc
shr
push
das
lods
xor
add
push
into
dec
or
adc
data16
add
push
pop
push
orb
cwtl
rcrl
repnz
lcall
es
int
adc
push
jg
add
push
jmp
dec
repnz
pusha
or
repnz
add
or
dec
clc
sub
wrmsr
inc
loop
lods
xor
arpl
call
sbb
lods
sub
imull
dec
mov
dec
cmp
jle
xchg
xchg
dec
cmpb
add
push
pusha
loop
das
adcb
call
sbb
stos
adc
add
add
call
sbb
inc
pop
dec
rorb
jbe
shlb
mov
mov
loop
mov
add
data16
repnz
imul
sub
xor
xor
sbb
xor
push
je
jne
test
fisttpl
ret
push
or
adc
setbe
arpl
push
in
in
dec
xchg
les
jbe
add
lock
mov
jbe
flds
fldl
rorb
sub
mov
mov
push
mov
rorl
adc
dec
sbb
pop
xor
cwtl
or
mov
rcrb
cmp
dec
mov
dec
xchg
sbb
mov
cmp
dec
mov
mov
pop
or
jmp
mov
or
push
orb
adc
inc
adc
and
lea
jmp
cld
imul
cmpb
stos
repz
cmp
mov
test
popf
mov
into
pop
movb
aaa
aaa
mov
adc
ret
push
mov
mov
push
mov
cs
outsl
mov
add
mov
push
lcall
je
mov
rcl
push
lret
dec
push
sbb
pop
pop
push
jo
xchg
add
mov
je
push
pushw
inc
push
rcrb
sbb
add
pusha
rorl
and
loopne
popa
mov
lea
push
bt
nop
cmp
push
and
scas
jno
in
insb
sbb
subb
nop
cltd
ja
sub
mov
dec
dec
jno
mov
inc
sub
jmp
jne
add
rorl
scas
jne
into
pop
push
sahf
dec
xchg
or
and
mov
cmpl
or
jmp
adc
shrb
jne
mov
cmp
add
sbb
dec
inc
jge
sbb
jle
cltd
arpl
mov
in
mov
mov
cmp
daa
loop
xor
mov
and
adc
pop
inc
push
or
nop
or
pop
jnp
and
in
adc
inc
or
shll
lock
adc
and
cmp
xor
mov
fsubs
cwtl
xchg
xchg
pop
popf
sub
add
push
cmp
dec
ret
loopne
jp
cwtl
dec
jge
lahf
cmpb
pop
or
stos
add
aaa
dec
mov
sbb
aad
cmp
sbb
loop
and
popa
pop
dec
pusha
mov
inc
imul
fisubrs
mov
sub
into
or
inc
pop
and
insb
lret
das
mov
fmuls
fistl
out
xchg
cmpl
cmpl
xorb
adc
negb
add
inc
les
mov
dec
and
adc
shl
cmpsl
or
mov
and
mov
lahf
scas
mov
mov
or
das
lahf
js
test
lea
pushf
sbb
test
xor
xor
fsubs
sbbb
push
lret
repnz
daa
push
or
cmp
jecxz
rcrb
jle
pop
cwtl
cltd
int3
ja
add
dec
or
or
ljmp
cmp
out
lret
push
xor
lret
lret
adc
inc
push
adcl
sub
add
fiadds
rcrb
and
cmp
repnz
icebp
mov
das
push
cmp
enter
outsl
adc
mov
aad
leave
test
sbb
popf
sbb
imul
lahf
jge
pop
adc
xchg
or
and
sti
add
add
jbe
or
sbb
adc
adc
or
test
cld
repnz
cmp
add
push
or
jbe
add
sub
jmp
pop
push
cwtl
lret
stc
jg
adc
hlt
fs
push
mov
mov
mov
movsl
call
addb
bound
movsb
jo
ret
add
dec
leave
test
movsb
push
cmp
fs
test
rcll
and
sbb
popa
in
xchg
lahf
mov
mov
and
sbb
insl
dec
add
and
adc
xlat
loopne
or
or
scas
xchg
pusha
mov
mov
in
test
jg
rorb
xor
pusha
enter
adc
fistpl
mov
or
push
cmp
mov
test
add
icebp
jmp
jmp
xchg
or
hlt
mov
adc
dec
mov
sub
jecxz
push
inc
xor
push
mov
lods
inc
push
add
dec
sbb
lea
jecxz
in
add
add
in
or
cmp
mov
movsl
add
xchg
xlat
xchg
test
jnp
in
sarl
enter
and
adc
faddl
jb
insl
and
xchg
insl
mov
cmp
mov
sub
or
adc
icebp
loop
and
or
jnp
test
xor
out
nop
mov
subb
ficoms
cmp
call
icebp
dec
add
into
ret
adc
jae
jle
test
pop
test
clc
or
dec
or
mov
add
add
sbb
sub
test
scas
or
fwait
testl
ret
xchg
call
in
test
sbb
das
push
test
dec
add
cmpsl
loopne
sub
or
inc
dec
sub
cwtl
mov
inc
loop
andb
pop
cmpsl
shlb
test
mov
xchg
cmpsl
insl
add
xchg
jns
test
clc
dec
or
in
mov
pop
repnz
movsl
stos
cmp
jge
data16
gs
jecxz
roll
sub
adc
push
stos
adc
and
push
popf
xchg
test
loopne
adc
jmp
outsl
push
adc
lret
nop
psraw
mov
ss
push
imul
test
cmp
jne
mov
xor
aaa
mov
ljmp
xor
pop
sub
loopne
dec
sub
jnp
push
addb
adc
je
pop
add
pop
dec
das
pop
or
mov
aad
stos
dec
mov
test
mov
out
loope
addb
add
xor
xlat
sbb
xchg
pop
cmp
mov
pop
inc
nop
outsl
lea
bound
test
jno
mov
outsl
aaa
jno
mov
sbb
pop
sub
and
pop
push
and
fstp
add
and
mov
mov
add
popf
lret
int
loopne
and
jge
xor
jne
jp
test
in
out
enter
or
mov
cltd
mov
rclb
out
or
inc
sub
cmpsb
in
jmp
inc
inc
jmp
leave
or
pop
inc
sub
or
inc
rolb
mov
lock
in
cwtl
fldl
sub
xchg
mov
push
inc
mov
cmp
cli
mov
lahf
cmp
aas
mov
divb
pusha
inc
jnp
xchg
js
popa
sbb
adc
mov
or
dec
jecxz
dec
pop
pusha
pop
pop
adc
jae
push
ficoml
or
adc
sbb
xor
sbbl
add
ficoml
out
sbbb
push
sub
jg
adc
or
dec
sub
push
aad
jle
pop
jo
imul
xchg
jl
mov
in
lcall
mov
hlt
ret
out
sbb
out
into
or
mov
jo
adc
xchg
cmpsb
adc
or
movsb
xchg
add
inc
sti
stos
ja
fimuls
lret
ljmp
inc
and
int
aaa
add
inc
sbb
jp
add
test
add
lret
mov
push
loope
push
ds
inc
pop
push
sbb
addb
fs
xorl
movb
inc
pop
jecxz
mov
cmp
mov
sahf
iret
and
mov
push
sbb
pushf
lods
adc
outsl
push
inc
sbb
popa
adc
aas
or
mov
jmp
sarb
cmpb
add
pop
shrb
hlt
dec
out
dec
loope
xchg
lret
adc
repnz
mov
cld
adcb
inc
imull
mov
ds
fs
mov
enter
aam
or
into
or
pop
inc
rorl
stc
cs
test
and
jl
aam
shrb
push
enter
shlb
and
sti
sub
jge
shrb
mov
popa
xchg
push
add
xor
movsb
enter
adc
arpl
mov
xchg
xor
ja
repnz
js
bound
clc
mov
mov
mov
add
dec
inc
ljmp
sbb
mov
sub
cmp
inc
sbb
mov
sbb
mov
testb
adc
or
pop
inc
jmp
and
lock
sarl
and
jmp
push
cmp
jl
sbbl
leave
test
xchg
sub
pop
cs
mov
mov
loopne
jg
fldenv
nop
cld
sbb
or
cmp
lods
in
lahf
mov
and
out
cmp
sbb
xchg
fisttpl
fs
cs
das
or
js
adc
fisubl
sub
push
hlt
daa
adc
shlb
adc
and
mov
mov
push
sbb
out
cmp
orb
inc
arpl
sub
add
and
add
xlat
push
mov
lret
xchg
adc
inc
out
mov
push
loop
insb
push
mov
das
sbb
movsb
mov
inc
gs
add
cwtl
push
xchg
imul
fs
add
in
dec
rcrl
sub
js
xchg
in
lock
pop
add
mov
loope
sub
mov
mov
cmp
decb
sbb
or
ja
xchg
adc
popa
push
xor
movsl
aaa
mov
adc
shlb
jle
incl
nopl
dec
out
xchg
out
popf
push
jmp
nop
add
fidivrl
sbb
scas
xor
adc
lock
les
lret
push
scas
push
sahf
addb
inc
je
cmp
mov
in
mov
xchg
push
loopne
hlt
aaa
ljmp
adc
cmp
add
movsb
cmp
jg
dec
loopne
popf
lea
fidivs
add
movsb
push
inc
lret
xor
fs
mov
fldt
xchg
sub
data16
inc
stos
xorl
mov
hlt
jg
add
sbb
xchg
xchg
inc
notl
testb
push
push
mov
jmp
test
jge
sahf
mov
cmp
das
jp
rorb
push
daa
adc
jnp
cmp
pop
jecxz
call
pusha
dec
dec
subb
cmp
add
ljmp
add
pop
aaa
push
xor
daa
clc
sbb
fs
hlt
mov
pop
pusha
cmp
jne
push
or
jne
pop
inc
pop
test
rcll
enter
js
mov
push
subl
sbb
scas
dec
jmp
popa
or
movsl
loopne
pushf
in
adc
mov
cs
int
roll
outsl
sub
or
and
jnp
sbb
mov
js
aad
pop
aad
addr16
inc
jl
js
clc
dec
aaa
or
imul
icebp
rclb
pusha
xor
leave
xor
inc
and
cmp
pop
ret
outsl
and
in
cmp
jo
xchg
cmp
mov
fsubs
or
xchg
adc
dec
into
xor
in
inc
xor
ja
inc
out
loope
fcomip
dec
outsl
add
inc
ret
call
adc
dec
mov
xor
mov
decl
fadds
xchg
loop
fdivrp
push
mov
cmp
loopne
nop
cld
or
dec
insl
cmp
adc
jbe
mov
fstl
popf
mov
sbb
sbb
loopne
fdivs
pop
into
sub
sub
loopne
movsl
ljmp
sar
pop
sub
outsl
call
mov
mov
dec
adc
mov
xchg
test
outsb
fsts
lret
xor
dec
sbb
mov
dec
mov
inc
or
sbb
jle
cli
rcrl
pop
xlat
xchg
mov
push
out
les
xor
dec
lods
jne
sub
cmp
push
cmp
pop
test
jns
inc
cmpsl
inc
and
insb
aad
mov
jle
es
push
test
adc
imul
sar
add
lahf
mov
or
jns
movl
addr16
jo
mov
lds
dec
push
jmp
jge
mov
sub
jae
mov
sub
mov
int3
int
js
je
cmp
add
xchg
ja
mov
subb
xor
js
xor
out
in
arpl
subb
mov
lds
mov
imul
or
xchg
pop
jg
enter
jp
hlt
fidivl
inc
push
xor
adc
imul
cmc
pop
xor
addb
cld
out
cmpsl
movsl
xchg
xor
std
sub
add
jge
pop
icebp
add
mov
pop
pusha
int
push
pushf
fs
xor
not
mov
and
aaa
int3
ret
add
push
jo
xchg
cmpsl
sub
mov
inc
loopne
mov
mov
push
pop
dec
pop
add
cmp
inc
add
sbb
popf
sub
pop
iret
mov
jae
sub
push
cmpsl
pop
ret
pusha
int
and
mov
mov
in
inc
add
mov
popa
test
lock
in
sub
jb
nopl
clc
imul
fdivl
xchg
in
or
jno
push
hlt
jl
or
in
insb
mov
fisttpll
add
imulb
pop
dec
sub
lret
xor
mov
cwtl
add
adc
fcomp
mov
cmp
xor
fcoms
push
sub
in
inc
lock
mov
or
xchg
lret
insb
insb
lock
mov
rcl
adc
xor
adc
cmp
in
push
adc
lds
cmpsb
enter
add
xor
dec
mov
pop
sub
and
sahf
xchg
sbb
xor
inc
xor
das
movsl
iret
fsub
test
xor
pop
xchg
addr16
pop
sub
adc
stc
sub
nop
dec
sti
adc
fadds
cmpl
mulb
or
lcall
or
lock
imul
dec
jg
push
mov
add
jne
mov
pop
lahf
jne
fwait
dec
leave
lret
or
mov
push
add
xchg
sbb
mov
in
push
sbb
add
xlat
test
call
pusha
sbb
push
xor
jecxz
adc
and
push
inc
sbb
fldt
xor
or
aam
dec
xor
fcoms
mov
sbb
cmp
push
xchg
or
nop
mov
xchg
mov
and
pusha
mov
fsubrl
push
xor
into
fsubs
out
and
scas
in
mov
pushf
pop
fst
adc
add
push
mov
dec
in
xor
cmp
mov
xchg
cld
and
enter
cld
pop
testb
push
or
out
or
jmp
ja
inc
ljmp
push
and
adc
es
push
xchg
or
or
cmp
scas
or
sub
jge
sbb
mov
xor
pushf
mov
and
or
xor
adc
sub
rcrl
test
je
loope
jmp
movsb
pop
mov
jmp
dec
rclb
or
ret
sbb
test
cltd
or
add
iret
jae
add
add
flds
and
add
adc
xchg
test
push
sbb
dec
mov
fildll
andb
scas
adc
push
inc
daa
mov
hlt
lea
add
mov
cmp
or
add
mov
sub
in
sahf
jnp
icebp
dec
push
or
adc
xchg
xorb
mov
fcmovnbe
sub
insb
mov
cmp
cmp
cmp
sbb
dec
adc
ds
pop
divl
outsl
lds
popl
jle
sub
cmp
push
ss
cmp
loop
xchg
mov
dec
jle
push
mov
test
popf
cmp
jb
adc
xchg
cmp
jecxz
enter
packsswb
adc
cltd
and
addr16
adc
out
iret
push
cmp
sbb
mov
mov
jne
ret
jne
shl
ucomiss
push
nop
mov
pop
jno
sub
aad
faddl
jmp
inc
or
xchg
inc
test
cmp
and
test
mov
fnstcw
add
xchg
fsub
push
sub
in
dec
add
in
push
in
push
or
js
fsubrl
mov
rorb
pop
mov
cli
rolb
inc
add
mov
in
pop
popa
fs
dec
jle
jb
mov
jbe
jmp
mov
dec
test
ret
dec
and
pop
sub
xchg
pop
xchg
hlt
aam
jecxz
dec
or
or
icebp
cmp
mov
mov
pop
fimull
dec
jl
sbb
mov
les
popa
jge
sahf
or
arpl
add
sbb
shlb
mov
test
popa
popa
ret
lgs
dec
mov
and
or
and
cmp
pop
clc
pop
aad
pop
pop
testl
movsb
in
mov
mov
sub
stos
jnp
sbb
outsl
pop
sbb
pusha
inc
sub
mov
lret
idivl
xchg
xor
adcl
jo
fildl
in
dec
int
mov
lods
push
add
inc
and
dec
movsb
mov
in
imul
call
mov
shrb
inc
rcrl
pop
mov
rclb
fld1
push
sub
push
sbb
lcall
sarb
xor
rorb
shlb
shrb
jb
xchg
and
sbb
hlt
cmp
and
and
mov
stos
addb
lods
popf
gs
xchg
cmpxchg
sbb
inc
test
jo
sti
mov
xchg
lock
mov
cmp
popf
jne
mov
dec
push
inc
or
jno
and
jno
popf
call
dec
mov
add
test
outsl
jmp
lods
andb
add
sub
sbb
xor
dec
push
pop
and
jbe
sbbl
ja
push
repz
mov
sarl
push
popl
mov
iret
arpl
stos
daa
sub
jns
pop
dec
ss
or
and
call
and
std
jns,pn
push
enter
xchg
cmp
xchg
addb
jo
mov
xchg
and
cmc
mov
xchg
adc
and
outsl
outsl
mov
cmp
clc
fsubrl
mulb
in
scas
and
stos
and
or
xchg
enter
push
xor
add
repz
inc
push
jge
and
mov
fsubs
lods
addl
fwait
mov
xchg
and
fidivrl
nop
aam
pop
lcall
je
scas
mov
daa
push
iret
pop
pop
fistl
push
add
in
push
aas
xchg
dec
jmp
mov
xchg
mov
aam
insl
xchg
inc
mov
inc
push
and
pop
sub
jne
enter
inc
pop
jnp
dec
jge,pt
mov
sbb
jo
call
dec
cmp
lret
testl
jp
dec
sti
out
add
fsubrs
and
dec
lcall
mov
scas
fcompl
hlt
popa
rclb
mov
fcoml
movsb
cmp
xchg
sub
test
cld
mov
roll
addb
ljmp
or
repz
sbb
pop
mov
fdivl
aam
jbe
aaa
or
sub
mul
and
add
rolb
mov
mov
stc
adc
jnp
push
popf
rolb
inc
shlb
dec
adc
inc
rcrb
outsb
pop
sbb
adc
arpl
mov
xor
sub
adc
and
pop
push
enter
xor
in
lret
adc
nop
pop
jp
ss
add
mov
xchg
outsl
and
cmp
add
inc
cmpb
xor
insl
cmp
in
dec
ja
pop
hlt
pop
xor
fistps
cmp
or
ljmp
fidivs
ret
add
test
xchg
int
jmp
movsb
ja
jmp
insl
daa
pop
loopne
xorl
hlt
adc
jge
in
xor
sbb
shr
andb
into
inc
arpl
clc
pop
or
push
lds
inc
bound
fistl
gs
in
inc
push
mov
clc
pop
ja
bts
jmp
push
movsl
mov
rcl
lods
inc
popf
mov
or
arpl
sarb
add
add
or
ret
or
mov
and
add
lret
in
rclb
dec
add
jmp
mov
xchg
mov
jmp
cld
inc
roll
push
je
push
adc
dec
pop
adc
cld
stc
jle
cmp
icebp
push
popa
add
and
sub
pop
xchg
mov
push
lret
push
push
xchg
mov
jg
imul
je
jmp
push
nop
sbbb
sub
pushf
fdivrl
fisubs
and
xor
pop
das
inc
xchg
jo
fcmovb
cwtl
sub
iret
push
push
lods
stos
cmpsl
aas
test
je
pushl
ret
adc
sub
add
lds
movb
ja
pop
lds
out
adc
ret
cld
pop
les
mov
scas
shll
shll
fsubs
leave
gs
repz
pop
and
pop
xor
repnz
xchg
les
xchg
ds
daa
ret
inc
jg
repz
nop
push
mov
mov
call
jns
ja
push
sbb
cmp
and
push
loope
jb
je
push
stos
pop
fwait
test
cmp
adc
and
add
jnp
push
dec
roll
push
inc
cmp
mov
pusha
fincstp
rcl
push
xor
cmp
lret
jmp
mov
fwait
nop
inc
cmp
fadd
es
or
sub
xchg
sbb
push
ffree
or
and
in
insb
and
scas
or
adc
add
sub
pop
aad
mov
jl
inc
mov
rclb
fadd
mov
xchg
mov
ret
jmp
or
in
leave
in
lcall
push
pop
lock
pop
das
in
dec
xor
push
mov
loope
sbb
or
add
inc
or
pop
push
lods
cmp
sti
cltd
xor
call
cmp
aas
pop
inc
add
push
and
push
cmp
movl
shlb
rclb
ret
pop
insb
push
lock
aad
dec
push
mov
mov
inc
dec
call
inc
cmp
adc
xorl
imul
test
xchg
cmpsl
push
outsl
inc
sbb
sbb
imul
lret
push
sub
test
in
lcall
adc
inc
loop
add
jbe
fcomi
pop
shrb
cmpsl
mov
or
icebp
adc
push
fs
pop
and
pop
inc
sub
and
and
mov
jg
jmp
mov
push
fidivrs
jmp
or
sub
mov
pop
enter
add
sbb
inc
call
rolb
fmull
jb
mov
sbb
adc
or
dec
mov
push
cmpsl
enter
jbe
in
ret
lock
push
je
adc
jo
shrb
cld
ret
mov
inc
mov
inc
repnz
clc
inc
add
xchg
sbb
ret
popa
stos
enter
repnz
iret
cmp
pushf
inc
cmpsb
cmp
add
dec
cmp
mov
sub
aas
sbb
xor
dec
inc
xchg
push
lret
mov
ja
xchg
dec
lcall
dec
cmpsb
push
loope
push
ret
clc
fcmovne
repz
adc
mov
cmp
addr16
dec
push
pusha
mov
cmp
or
std
sbb
mov
cwtl
cmp
xchg
and
xor
movsb
mov
or
cld
mov
jae
xor
mov
xchg
sub
pop
mov
xor
cmp
daa
in
out
or
jo
insl
sub
clc
hlt
jnp
fs
pushf
jmp
daa
aas
ret
ret
inc
aas
or
inc
push
lea
jmp
cld
jmp
das
and
and
lret
dec
sbb
cmp
xchg
push
pop
orb
fwait
out
data16
dec
or
dec
clc
loopne
loop
mov
lret
add
in
pop
faddl
add
add
dec
adc
dec
es
gs
dec
cmp
out
mov
mov
and
and
mov
sysret
fiadds
jge
cmpb
jg
push
cmp
add
xor
cmpl
pushf
jl
adc
in
iret
adc
mov
push
add
inc
cmpsb
insl
xor
add
add
mov
and
clc
sbb
cwtl
je
mov
mov
jnp
jnp
adc
and
pop
or
push
loope
cs
scas
leave
add
mov
or
push
dec
sub
mov
sbb
sbb
sarb
fnstcw
pop
and
push
mov
mov
nop
and
push
xor
pusha
push
adc
jge
mov
or
insl
cmp
jbe
nop
mov
call
in
ret
sbb
dec
ss
pop
cmp
movb
orl
in
pop
mov
pop
dec
pop
xchg
call
loopne
jp
sarb
add
insl
sub
add
out
in
xor
xchg
lods
and
push
jbe
jmp
jnp
and
cmp
cltd
iret
push
push
cmp
jp
add
xor
jg
shrb
xor
loope
sbb
mov
fs
ret
adc
and
xor
push
and
mov
xchg
dec
stos
pop
pop
jp
lock
mov
inc
dec
pop
mov
push
or
ljmp
xchg
pop
orl
mov
sbb
mov
inc
push
cmp
sub
or
lods
hlt
mov
inc
jno
popl
sbb
inc
mov
sbb
ret
test
iret
add
adc
xlat
pop
stos
cmp
outsb
inc
loop
dec
mov
aas
mov
lods
jo
adc
inc
adc
lods
or
xchg
dec
sbb
add
scas
lock
addl
xor
mov
bound
shll
pop
push
push
sarb
js
ds
cmp
push
sbb
shlb
lock
mov
dec
push
mov
and
addr16
pop
or
icebp
fstl
lcall
cmp
sbb
or
or
fnstcw
add
adc
fwait
mov
pop
rclb
inc
pop
je
cmp
adc
jo
std
cmc
mov
cmpsb
ret
cmpb
lahf
popf
ficoml
je
pop
out
rolb
mov
dec
pop
mov
add
daa
pop
aad
outsb
sbb
aas
xor
dec
cmp
adcl
aam
mov
sbb
xlat
int3
dec
sub
ret
jne
inc
scas
jecxz
jno
adc
xor
loopne
push
mov
push
jecxz
je
xchg
push
adc
push
pop
dec
dec
aad
cmp
cmp
sbb
sub
fisubrl
jne
jno
sub
cmc
xchg
xchg
pop
xchg
popf
inc
add
xor
sbb
add
adc
dec
sti
mov
fwait
sbb
loope
adc
shr
mov
je
inc
inc
icebp
push
or
xchg
pop
push
sub
js
push
cld
add
dec
cwtl
inc
or
xchg
leave
addl
fldcw
cmp
popa
and
mov
jns
pop
sub
inc
daa
inc
scas
push
ret
mov
adc
pop
push
enter
push
cs
inc
push
sbb
outsl
add
int3
or
ffree
or
push
push
in
push
loopne
sbb
sub
aam
and
pusha
push
popf
jno
or
mov
icebp
dec
daa
xor
fstl
sub
add
adc
push
mov
jae
mov
push
sub
inc
pop
inc
mov
push
es
jecxz
mov
push
fdivrs
icebp
leave
mov
popf
xchg
ret
or
sbb
jne
movb
outsl
lret
push
rol
xchg
js
int3
jmp
adc
dec
xchg
mov
addr16
and
addr16
and
adc
dec
inc
fcom
ss
setne
sbb
mov
and
movsb
mov
or
fwait
loope
mov
pop
cwtl
or
inc
imul
sub
fsubrs
push
inc
add
inc
and
push
pop
adc
fsubs
adc
out
subb
rcr
xor
sbb
push
jecxz
hlt
push
or
inc
rsm
pop
shll
dec
mov
push
jg
int3
inc
nop
add
stos
outsl
mov
jnp
sub
xorl
hlt
sub
adc
add
cmc
stos
xchg
inc
pushf
jle
in
push
rolb
mov
or
adc
insl
adc
lock
ss
mov
orl
mov
cmpsl
fldenv
inc
cmp
sbb
sbb
inc
sahf
jns
xchg
mov
sbb
xchg
adc
push
push
adc
add
in
inc
adc
xor
xchg
rorb
add
pop
dec
xchg
dec
push
adc
mov
and
dec
popa
sbb
xchg
jae
jae
loope
adc
sbb
int3
cwtl
mov
or
and
pop
out
inc
pop
movsl
fisttps
or
xchg
bound
insl
adcl
ss
imul
insb
mov
jmp
xor
rcrb
cmp
push
lock
adc
cmp
xchg
shlb
ret
aam
das
test
lcall
sbb
adc
adc
mov
loopne
imul
lcall
popf
lea
adc
sbb
out
sub
pop
sbb
adc
scas
mov
ss
repnz
or
sub
rcrb
pop
pushf
imul
and
xor
pop
xchg
sub
inc
jb
idivb
adc
cmp
pop
push
push
jge
mov
sub
sysret
pop
loope
and
lods
ficoms
loopne
or
xlat
test
xorb
int3
xchg
sarl
inc
hlt
xchg
lret
adc
incb
int3
loop
add
fnstsw
dec
gs
outsl
jo
faddl
jb
out
pop
scas
add
lcall
add
aaa
inc
inc
aas
outsl
pop
push
daa
pop
pop
arpl
cmp
xchg
mov
int3
xchg
xchg
dec
das
add
adc
loop
push
mov
or
jne
cmp
jne
das
lret
and
jne
inc
add
cmp
sub
push
adc
or
pop
push
cmpb
dec
jg
es
xchg
je
mov
hlt
pop
xor
adc
xor
inc
jae
jns
lock
inc
xor
std
adc
mov
push
inc
dec
jne
and
incl
je
mov
das
jg
hlt
outsb
and
mov
mov
mov
cli
push
das
jmp
ljmp
aaa
mov
xor
mov
push
and
jmp
push
adc
test
movsl
cmpsl
sub
adc
inc
jo
pusha
add
sbb
aas
int3
inc
mov
sbb
and
sub
cmp
jg
push
mov
xlat
jmp
scas
mov
add
out
js
push
sbb
or
sbb
adcb
mov
daa
sti
xor
lock
cmpsb
and
inc
add
or
mov
dec
jne
and
mov
popa
sbb
adc
xchg
sub
xor
stos
aam
leave
sarb
sbb
je
jmp
jb
sbb
pop
testb
sbb
repz
or
inc
testl
adc
inc
out
jge
inc
and
cmp
mov
adc
push
int3
pop
or
iret
push
push
inc
and
aas
push
pop
mov
or
sub
rclb
mov
les
rol
sahf
test
adc
pop
shll
adc
xchg
addl
addr16
out
fs
hlt
mov
loope
fsubr
arpl
cmc
shlb
mov
sbb
pusha
stc
int
add
or
mov
pop
mov
add
out
dec
loopne
inc
or
lods
shll
push
jmp
pusha
ret
adc
stos
inc
xor
xlat
jge
push
lahf
mov
and
push
sarb
jl
dec
sub
dec
out
inc
push
and
repnz
xor
pop
sub
cld
fwait
aam
mov
in
or
ja
mov
push
inc
push
push
shl
push
testb
push
movsb
je
dec
mov
inc
lahf
aaa
dec
mov
or
adc
or
cmpsb
inc
mov
dec
push
pop
sbb
or
cmpsl
pop
xlat
sub
int3
stos
ret
out
mov
xchg
shll
mov
sub
sbb
inc
or
in
fimuls
sbb
xlat
adc
shrl
cmp
jne
jo
and
push
jo
ffree
xchg
cmp
scas
pop
xor
dec
pop
push
add
imulb
dec
scas
or
mov
roll
ss
rcrl
jmp
xlat
outsl
xor
cmpsb
mov
jle
aam
add
je
mov
xchg
scas
das
xor
int
pop
scas
js
out
add
outsb
adc
lret
mov
bswap
out
jge
addr16
out
and
and
xchg
xchg
pop
add
add
cmp
or
cmp
fiadds
mov
jle
fmull
inc
sub
sbb
arpl
inc
dec
add
add
inc
push
cmp
cmc
mov
scas
pop
push
push
cmp
and
add
jl
incl
out
push
cmp
out
dec
push
push
int3
add
cld
movl
xorl
cmp
sub
in
repnz
insb
push
adc
add
hlt
add
adc
incb
mov
inc
mov
aam
jg
cmpsb
mov
int
pop
mov
mov
call
aad
add
add
movsl
repnz
cmpsl
lock
push
pop
imul
pop
add
jmp
push
lret
push
in
test
fsubl
lods
inc
push
push
jno
test
js
dec
cld
aam
pop
dec
mov
aas
push
and
fmuls
pop
pop
pop
iret
shll
sub
lret
jo
jbe
sbb
pop
push
jp
loope
jle
or
ja
adc
xchg
dec
rorb
dec
xor
xor
dec
aaa
jo
in
call
xor
adc
sbb
ror
cmpsb
adc
insb
test
jnp
sahf
je
or
sbb
movsb
repnz
sbb
leave
imul
inc
stos
in
jne
ds
inc
add
inc
cmp
xchg
mov
inc
lods
push
test
and
sub
jb
popf
add
movb
push
mov
aaa
aas
push
dec
popa
ja
xor
jnp
inc
loope
mov
mov
inc
dec
pop
cmp
and
ja
fstpl
cmp
push
int
inc
xor
mov
and
test
call
mov
divl
out
adc
mov
add
push
test
mov
mov
push
rolb
lea
mov
dec
cmpl
outsb
insb
mov
pop
or
jae,pt
adc
fsubs
or
divl
dec
daa
cmp
fisttpl
sbb
cmp
push
adc
or
scas
adc
movzbl
pusha
or
push
push
pop
add
inc
push
xor
xor
lods
xlat
imulb
jnp
push
daa
mov
or
sub
fmulp
fcoms
jp
pop
ds
sti
test
push
dec
cwtl
push
rolb
test
jmp
adc
pop
andb
movsl
loopne
icebp
je
cld
push
test
sub
pop
in
adc
push
push
pcmpgtb
ret
cmp
test
or
push
fwait
jo
das
mov
mov
adc
mov
aas
jbe
pop
dec
push
mov
ja
cmp
mov
xchg
sbb
test
pop
mov
push
sbb
mov
xchg
mov
xlat
orl
jns
sbb
in
and
fidivl
adc
or
dec
jb
add
inc
loopne
adc
je
or
inc
add
stc
sub
inc
push
push
rcll
sub
pop
insb
xchg
bound
and
inc
push
add
sub
fmuls
dec
adc
test
sbb
or
add
pushf
and
sahf
mov
pop
scas
prefetchw
adc
addl
xchg
cld
mov
pop
rcll
mov
or
dec
lret
nop
outsl
jnp
test
sahf
and
push
push
les
dec
mov
push
dec
sub
push
imul
mov
jmp
dec
sub
adc
jnp
ljmp
icebp
test
je
adcl
outsb
cs
jmp
pmuludq
or
imul
fcoml
push
mulb
ljmp
loop
out
call
dec
mov
test
stos
fcomp
sub
xchg
inc
fadds
sub
fildll
sahf
out
push
leave
popf
movsl
lods
or
jnp
iret
rcll
jmp
out
ds
repz
add
shll
jg
repz
rolb
incl
inc
cltd
icebp
sbb
xchg
cmp
cs
outsb
xor
dec
loop
cmp
out
incl
inc
mov
movsl
leave
aam
sub
incl
push
aaa
mov
stc
dec
and
pop
and
adc
in
inc
add
pop
pop
add
insb
mov
out
sub
push
mov
push
xor
jmp
popa
aad
in
movsb
xchg
nop
fmul
fsub
mov
add
ljmp
xchg
push
shll
and
jl
jo
jno
push
sub
hlt
lods
cmp
sbb
popf
adc
mov
ljmp
xchg
inc
dec
test
or
add
adc
inc
mov
les
popa
mov
cmp
or
xor
adc
adc
pop
and
xchg
jae
mov
aaa
ja
jl
dec
or
inc
inc
lea
addr16
add
jecxz
sub
adc
dec
push
dec
jne
xchg
insl
nop
cltd
and
or
and
bound
punpckldq
icebp
lcall
pop
loopne
dec
mov
or
pop
outsb
dec
lea
andl
loop
fwait
pusha
jl
jecxz
fs
rorl
adc
mov
mov
add
aam
push
lock
adc
xchg
xor
or
test
sbb
clc
adc
xchg
pushf
or
je
adc
jno
or
cmp
dec
inc
mov
pusha
popf
adc
inc
inc
mov
sbb
sub
loope
jnp
lret
adc
sti
xchg
jo
dec
and
cwtl
or
lret
outsl
cmp
aaa
inc
mov
movsl
dec
jne
les
mov
sbb
cmp
or
jnp
fs
sub
mov
mov
loope
push
test
icebp
sub
frstor
clc
sbb
push
mov
jmp
xchg
rolb
pslld
in
inc
add
prefetch
or
aad
push
sub
pop
mov
lds
test
xchg
pop
nop
sbb
push
ret
jecxz
pop
std
lahf
and
mov
jmp
xchg
icebp
xchg
mov
arpl
frstor
jnp
scas
push
adc
leave
cmp
mov
divl
rcl
mov
fxam
mov
cmc
or
add
lea
inc
add
fdivl
add
push
cmc
pop
sbb
or
xor
mov
push
sub
and
loopne
mov
fdivl
push
mov
xor
xor
leave
and
into
fsubrs
jle
dec
nop
aam
add
mov
push
popa
cmp
in
add
jp
xor
jno
and
sbb
pusha
bound
call
cwtl
push
xchg
fwait
jge
inc
shll
sub
xchg
lcall
inc
sub
sarb
daa
xlat
jmp
call
mov
hlt
in
xorb
xor
test
sbb
call
inc
fdiv
scas
call
ss
cld
sbb
lcall
dec
xor
iret
mov
cmc
call
pop
cmp
xchg
cmp
adc
cmc
shrb
cld
aas
mov
aad
mov
jmp
sbb
push
sub
mov
popa
xor
jo
dec
sbb
add
out
imul
cwtl
cli
je
jge
test
and
aaa
sbb
dec
jo
and
or
jge
call
push
addb
dec
adc
int3
or
cmp
int
hlt
fdiv
mov
in
inc
shr
mov
push
incb
mov
inc
jne
mov
sbb
adcb
in
je
mov
loope
ja
test
add
lock
adc
outsb
xchg
mov
inc
stc
sub
cltd
cmpsl
and
clc
roll
and
adc
lcall
faddl
mov
aam
rorb
adc
sbb
mov
add
mov
outsb
mov
push
cwtl
pop
enter
int3
int3
inc
xor
negb
or
or
jno
fidivl
pushf
in
add
mov
cld
es
inc
sbb
cmpsb
ja
inc
lock
inc
shrl
hlt
push
sub
stos
sarb
ret
sbb
cli
ljmp
push
push
stc
or
popa
or
add
cmp
mov
dec
adc
movb
pushf
stc
cmpsl
test
add
or
mov
xchg
stc
test
push
sbb
and
cmp
les
inc
xor
inc
mov
hlt
cmp
pop
push
or
push
or
jp
in
xor
mov
jmp
shlb
enter
popa
lods
je
sub
data16
adc
addb
mov
shlb
aam
xor
ja
cli
enter
jmp
push
and
jg
loop
mov
cmpsl
test
add
fcomp
xor
aad
inc
mov
cmp
add
and
add
and
adc
cmpsl
jmp
cmp
pop
mov
xchg
outsb
in
lods
adc
test
add
jbe
cmp
and
jno
adc
fmull
add
aaa
xor
mov
xor
out
faddl
adc
cmp
loopne
sbb
xor
mov
movb
jmp
imul
lahf
jecxz
dec
jne
leave
lahf
ret
daa
and
mov
fs
insb
xchg
mov
mov
in
test
pop
adc
ret
insl
call
outsl
pop
adc
pop
sub
jo
popf
xchg
cld
lock
adc
cld
push
mov
push
jg
jne
sbb
jne
pop
push
cmpb
dec
imul
xor
incb
sub
mov
jp
xor
mov
in
mov
pop
and
inc
ret
aas
or
xchg
mov
push
dec
xchg
int3
add
syscall
mov
je
movb
repnz
movb
test
adc
rorb
dec
nop
enter
pop
adc
dec
inc
orpd
and
fs
or
rclb
jmp
push
or
data16
mov
je
dec
sbb
jbe
mov
std
jmp
cmp
call
and
or
or
adc
in
mov
dec
adc
arpl
aas
cmp
push
jg
sbb
jno
mov
movsb
incb
add
push
adc
ss
fiaddl
inc
and
or
push
xchg
adc
add
push
pop
inc
add
add
mov
das
pusha
and
sub
sub
sub
add
and
and
xchg
cld
or
pop
dec
cmp
sbb
cld
cmp
fcom
jmp
sbb
sbb
rclb
pop
jecxz
inc
or
lock
push
adc
nop
or
daa
adc
sub
sar
dec
add
loope
push
inc
add
adc
fsubr
ss
es
pop
ret
dec
pop
and
lock
mov
cmpsl
loope
jl
inc
or
or
adc
or
dec
test
and
movsb
rclb
inc
testl
data16
cmp
pusha
and
dec
lock
xor
xor
rol
jl
mov
in
orb
adc
push
adc
jle
clc
sti
adc
jne
movsl
add
inc
and
ds
jb
push
clc
add
movsb
push
sub
sarb
movsb
pop
push
jns
adc
or
in
movsb
add
nop
pushf
test
cmovno
and
dec
add
and
sbb
adc
daa
pop
add
sbb
xor
daa
cs
push
sub
pop
js
aas
push
mov
pop
cmovno
or
fs
pop
sbb
xorl
push
add
add
bound
insl
dec
push
sbb
lea
add
dec
ja
fcomps
or
pop
sub
pop
sbb
cbtw
push
dec
sbb
push
sub
divl
xchg
mov
ds
mov
or
mov
push
push
xchg
je
adc
adc
inc
outsb
jne
cmp
insb
popa
jns
jae
lock
cmp
mov
cmpsl
cmp
stos
pushf
js
cld
mov
test
or
dec
decl
ds
iret
in
or
add
mov
xchg
mov
add
push
push
inc
push
pop
sub
aad
inc
dec
dec
add
sahf
in
sbb
sub
pop
cmpb
sub
and
out
das
je
push
sbbb
mov
arpl
arpl
shll
inc
es
out
and
rorb
das
jle
cmp
mov
test
cmp
cmp
cmp
cmp
push
cmp
pop
push
cmp
cmp
push
dec
dec
inc
or
add
repnz
adc
or
xor
sub
hlt
sub
mov
xor
add
xchg
sbb
insb
xchg
hlt
push
pop
popa
insb
outsl
add
pop
add
adc
jne
pcmpeqd
dec
dec
ja
jns
dec
dec
dec
dec
jnp
jge
dec
dec
dec
dec
jg
popa
bound
dec
dec
arpl
dec
dec
dec
dec
addr16
dec
dec
imul
dec
dec
dec
outsl
push
push
push
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
push
pop
pop
pop
dec
dec
dec
dec
pop
pop
pop
pop
dec
dec
dec
dec
pop
inc
inc
inc
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
xor
dec
dec
xor
dec
aaa
cmp
cmp
dec
dec
cmp
dec
aas
and
and
dec
dec
and
dec
daa
pop
insl
lods
add
jns
nop
stos
out
lods
or
or
push
or
out
mov
inc
mov
or
add
xor
xor
mov
addr16
or
int3
jb
xchg
pop
cmp
mov
rcrb
inc
cmp
inc
push
out
add
push
jecxz
adc
mov
addl
or
sub
lret
add
rcr
sub
add
jmp
add
ret
orl
subb
dec
cli
test
add
or
lcall
mov
and
jnp
push
jecxz
sub
sti
mov
sbb
add
inc
adc
push
dec
cmp
mov
addr16
adc
push
movb
jae
test
das
xchg
loopne
dec
xchg
in
dec
sub
and
or
hlt
jnp
jbe
xchg
orl
xchg
adc
adc
fwait
stc
test
or
pop
loop
adc
icebp
filds
xchg
push
sbb
and
cmovo
addr16
or
data16
push
xchg
dec
aam
nop
sub
adc
push
inc
mov
iret
pop
mov
cwtl
inc
call
fdivs
jbe
mov
mov
loopne
clc
sahf
sub
xchg
mov
cld
xor
and
or
dec
nop
jmp
flds
stos
fsubs
ss
iret
xor
xchg
xchg
or
out
adc
xor
pop
push
or
lahf
jmp
test
stos
or
and
inc
push
int3
std
or
or
inc
stos
pop
das
push
push
in
ret
xor
mov
mov
sub
lret
aam
mov
push
xchg
cmc
pop
push
rcrb
or
ljmp
sub
xor
push
fdivl
inc
js
pop
jne
test
ljmp
pop
cmp
xchg
cmpb
or
gs
cmp
jg
iret
imul
pusha
rol
push
mov
cmp
inc
inc
daa
lods
scas
mov
jecxz
mov
test
nop
je
cmp
mov
push
test
sbb
test
add
push
outsl
fidivrl
nop
test
in
sbb
add
xor
rdmsr
inc
mov
inc
movzwl
or
inc
fldl
insl
cmc
xchg
inc
decb
outsb
je
imul
pop
xor
data16
adc
nop
and
testl
or
mov
nop
movsb
xchg
or
mov
add
ret
sbb
je
jge
xor
rcr
push
je
insb
cltd
loope
mov
xor
data16
enter
jnp
or
je
arpl
adc
adc
gs
xchg
xor
mov
cmpsl
mov
insb
or
cmp
in
dec
inc
dec
push
outsb
int
push
jnp
fbstp
pop
jo
outsl
sbb
push
inc
jns
scas
pop
incb
sbb
or
rcr
add
inc
jl
or
xchg
int3
outsb
jae
les
add
lods
jb
push
inc
insb
outsb
sbb
lret
dec
or
mov
xchg
or
les
sahf
push
push
push
imul
or
push
inc
outsb
imul
or
nop
popa
cltd
sbb
and
rcrb
ja
insl
ja
and
je
lret
mov
adc
xor
or
adc
je
add
jne
jnp
xchg
out
pop
jo
bound
sub
pop
sti
xor
dec
jl
jp
data16
dec
mov
sbb
je
adc
inc
fiadds
cs
inc
outsl
jb
jae
shrl
out
es
out
mov
inc
push
dec
push
and
xchg
shrb
add
std
decl
andps
mov
mov
insb
pushf
cmp
ljmp
lahf
xchg
push
fistps
imul
mov
insl
ficompl
or
xchg
push
cmp
jo
sahf
out
xor
in
mov
sub
sub
mov
and
std
fdivl
add
and
pop
adc
imul
push
hlt
aad
inc
jecxz
movl
js
push
call
lcall
das
rcrb
insl
nop
das
aas
addb
or
inc
cli
mov
fstps
adc
cmp
xor
jbe
add
or
roll
push
xor
iret
mov
add
mov
ss
push
add
repnz
lcall
jl
jl
pop
cltd
adc
adc
adc
pop
mov
xchg
push
mov
cld
pop
idivl
sbb
or
add
leave
call
xor
pop
xchg
pop
add
or
xor
add
pop
pop
jnp
mov
mov
sysret
mov
or
nop
push
xor
mov
shrb
int
sbb
mov
nop
lahf
pop
sbb
out
xchg
lsl
add
xor
call
in
sbb
dec
enter
and
add
adc
push
addr16
pop
mov
ljmp
or
jl
insb
outsb
push
mov
js
mov
nop
jae
pop
sbb
push
jmp
rclb
mov
daa
and
push
js
int3
pop
aas
push
int3
push
or
pop
jae
sub
inc
test
scas
cmc
push
xchg
dec
xor
add
pop
ret
xor
sti
into
daa
insb
je
or
cmp
jo
and
mov
cmp
outsb
outsb
adc
inc
insb
adc
orb
inc
push
add
push
mov
push
inc
arpl
not
xchg
push
gs
push
xchg
lock
outsl
ja
adc
push
or
or
inc
add
dec
jae
js
enter
leave
sub
jb
sub
xor
in
pop
les
and
sbb
push
movsb
sbb
out
in
xchg
fmul
daa
sbb
cld
das
adc
adc
mov
sbb
push
fisubs
fisttpll
int3
push
pusha
jnp
sbb
sbb
xor
push
add
loopne
push
movb
push
inc
cmpsl
popf
cmp
sysret
in
adc
pop
jo
mov
aam
pop
add
movsb
outsb
lock
mov
inc
jl
pop
fsubs
loopne
or
adc
mov
adc
xor
outsl
pop
and
movb
inc
cmp
fcomps
jge
mov
xchg
insl
ss
xor
stos
mov
in
inc
and
mov
xor
xchg
xchg
fs
add
push
push
sub
cli
pushf
shrb
mov
cwtl
test
std
dec
pop
inc
out
mov
ret
arpl
js
scas
or
je
jb
push
mov
pop
and
das
icebp
push
shlb
add
ds
and
sub
inc
cmpsl
dec
les
dec
insl
push
out
dec
mov
sbb
test
xchg
cmp
ss
fmuls
nop
nop
mov
xchg
fwait
clc
xor
in
mov
inc
in
inc
icebp
cmp
in
popa
inc
or
adc
mov
or
addr16
popf
call
push
jo
imul
out
lahf
cmpsl
inc
fs
push
mov
orb
push
pop
pop
and
dec
jne
xchg
out
ret
je
xchg
je
call
mov
adc
push
insl
mov
sbb
pop
dec
cmp
cmp
leave
dec
jl
jl
jle
push
stc
xor
out
push
orl
fisttps
aam
fmull
je
fimull
push
fs
cmpxchg
jns
xchg
sub
int3
push
cld
xchg
pop
pusha
push
lock
pop
sbb
xchg
faddp
and
xchg
les
pop
xor
arpl
mov
sbb
nop
pop
test
stos
call
cld
xchg
loopne
enter
mov
in
aaa
lahf
loopne
inc
loopne
inc
sbb
js
and
jnp
pop
push
jo
pop
add
pusha
cs
pop
sbb
cmp
pop
sub
bound
or
mov
aaa
adc
and
lods
sub
dec
mov
add
mov
pop
inc
sub
dec
add
daa
iret
je
rcrb
pop
in
adc
mov
insl
fld
push
push
push
rorl
xchg
data16
add
jne
adc
mov
or
dec
test
outsl
popa
pop
call
imul
shlb
movzwl
add
nop
lahf
xor
popf
lcall
cmp
or
and
or
pop
daa
or
je
sbb
mov
jmp
or
lahf
jge
fstpt
jne
cmp
xor
xchg
xlat
nop
nop
mov
outsb
adc
xor
xchg
sub
dec
xchg
lods
ret
loop
xor
xor
lret
jge
cmp
adc
dec
ret
out
push
ds
and
sti
es
movl
and
adc
xor
decl
lock
popf
sub
inc
sbb
cmp
stos
xchg
aas
lods
jbe
sub
sti
adc
les
jns
and
inc
into
pop
aad
call
aas
pop
cmp
inc
push
or
outsl
in
inc
gs
dec
jnp
xchg
aaa
sbb
arpl
sub
or
std
xchg
cmp
mov
cmp
add
and
notl
icebp
mov
pop
sar
je
incl
jle
sbbl
cli
insb
cld
pusha
iret
cmpb
inc
sbb
daa
out
sub
and
and
xor
nop
mov
mov
adc
push
jbe
or
sbb
mov
sbb
and
iret
push
mov
shll
out
jmp
cmpsl
inc
inc
cmpsl
daa
jns
sub
cld
xchg
cli
mov
adc
mov
nop
mov
adc
mov
dec
jl
jb
push
cmpsl
dec
sub
pop
test
in
or
rorb
adc
xchg
pushf
cmc
arpl
lods
imul
popa
jb
outsl
outsb
inc
inc
pop
pop
add
jbe
push
dec
and
jbe
add
jb
insb
cmpsb
inc
pusha
mov
insb
pop
jbe
mov
imul
orl
xchg
pop
out
iret
pop
gs
insb
outsl
ja
jg
cmp
inc
jne
push
add
jne
mov
pop
pop
or
jns
in
orl
jns
ja
fiaddl
dec
add
fisttps
in
or
outsl
insb
das
int3
sbb
cmovae
pop
js
push
jo
push
pop
imul
or
addr16
dec
add
int3
das
inc
je
inc
push
dec
jne
lods
xchg
dec
adc
sbb
sbb
das
or
stc
roll
push
gs
or
sub
push
xor
daa
pop
xchg
fs
adc
aas
inc
ficoml
or
inc
pop
pop
rcrl
or
push
mov
daa
mulps
movsb
jg
jg
imul
fcomip
aaa
adc
fwait
and
adc
mov
inc
outsb
cmpsb
inc
push
sbb
xor
pop
outsb
jne
pop
xor
sbb
xchg
daa
nop
fadds
das
lahf
dec
data16
xor
aas
push
arpl
icebp
jmp
insb
mov
imul
insb
jo
outsl
das
cmp
mov
cmp
or
imul
or
adc
push
mov
pop
mov
leave
pop
in
clts
or
loope
test
popa
int
sbb
mov
loope
xchg
testl
dec
inc
push
push
inc
push
add
sbb
scas
ja
inc
inc
inc
push
dec
push
xor
std
push
pop
dec
inc
dec
dec
arpl
inc
inc
push
add
push
push
adc
inc
push
dec
dec
push
mov
and
inc
shlb
dec
and
jg
pop
inc
popa
out
inc
inc
xor
xor
push
movb
and
inc
xor
incb
inc
inc
dec
mov
push
push
dec
dec
push
lods
xor
mov
repnz
inc
mov
dec
push
push
in
inc
mov
dec
inc
dec
or
xchg
pop
adc
push
push
nop
cmpsl
xchg
push
dec
push
inc
scas
dec
inc
dec
jmp
cmp
push
mov
nop
cli
lahf
sbb
push
mov
mov
xor
mov
mov
ss
xchg
add
and
and
sub
jo
and
cmpsl
mov
sbb
dec
or
jne
add
inc
sahf
xchg
adc
push
loope
es
mov
sarb
sbb
and
sbb
and
dec
sbb
sub
loopne
mov
mov
jle
xor
jmp
or
jmp
add
fidivs
xor
mov
mov
mov
dec
fidivrs
and
sub
mov
sub
adc
ljmp
sbb
or
arpl
cmpsb
inc
ret
adc
stos
adc
leave
adc
dec
repnz
sub
inc
ret
das
dec
adc
dec
dec
sbb
jle
call
sbb
xchg
lock
je
jne
xor
test
add
sahf
sbb
insb
bound
fists
jns
cld
and
neg
inc
mov
adc
mov
add
dec
jb
loop
jne
lret
push
jb
adc
in
push
cld
and
sbb
mov
rol
fdivrs
clc
clc
cmp
mov
or
test
cmp
data16
jo
divl
dec
roll
mov
das
sahf
push
addb
pop
pusha
test
dec
dec
dec
inc
addr16
in
das
dec
jge
jge
jge
je
scas
les
sbb
push
int3
push
je
in
aam
jo
aaa
jmp
adc
mov
aam
add
mov
shl
cmpsb
pop
mov
adc
je
andl
add
and
loopne
les
mov
mov
adc
mov
sbb
add
add
popf
push
outsl
dec
pop
sbb
sbb
fs
jb
mov
pop
imul
xor
mov
or
cmp
jo
in
mov
cmp
push
lods
clc
pop
insb
addb
xor
push
mov
int3
sbb
inc
fwait
outsl
pop
jmp
fadds
flds
popa
mov
xlat
into
push
filds
push
or
loop
fildl
or
dec
push
pop
push
fnsetpm(287
xchg
mov
aas
sbb
mov
lcallw
nop
mov
push
mov
inc
cwtl
jmp
dec
sbb
mov
scas
aam
mov
xchg
xor
inc
outsl
repz
or
notl
mov
les
test
pop
jl
arpl
add
cmp
in
and
rcrb
pusha
pop
orps
adc
popa
stos
xor
cwtl
arpl
jo
ja
addl
jnp
inc
dec
inc
pop
cwtl
neg
pop
out
xor
push
das
outsb
idivl
push
mov
cli
push
sbb
dec
enter
push
and
lds
cmp
addb
adc
and
sbb
mov
mov
fcoms
mov
mov
dec
sbb
xor
jb
call
push
sbb
and
bound
or
lahf
movsb
add
movb
rolb
pop
pop
call
nop
aaa
in
dec
repnz
adc
push
add
nop
loope
cmp
cmp
mov
or
push
enter
xor
add
push
loopne
stc
das
cmp
nop
xor
nop
dec
push
xor
and
and
loopne
and
mov
dec
js
pop
faddl
inc
cmp
loop
rcrb
xchg
loop
jo
test
lock
or
sbb
adc
loopne
xchg
out
lods
xor
push
mov
cmpsb
and
jb
and
and
es
adc
sbb
or
test
push
and
mov
call
cmp
sbb
adc
xchg
mov
repnz
out
mov
add
and
xchg
mov
popa
push
out
mov
mov
jns
cmp
imul
or
adc
daa
sbb
iret
cmp
or
add
and
push
daa
dec
in
pop
rcrb
add
je
jl
clc
inc
adc
pavgb
fnstenv
loopne
jle
shll
pop
xchg
push
popa
loop
cmp
popf
notl
sbb
or
xchg
sahf
push
adc
imul
hlt
lock
adc
xchg
fwait
js
dec
lahf
dec
lock
add
adc
xor
jbe
sahf
pop
jo
jne
xor
dec
mov
setnp
movsb
mov
xor
inc
fistps
enter
cmp
add
pop
pop
add
jle
test
flds
pop
aas
es
pusha
xor
stc
inc
pusha
adc
pop
adc
sub
pop
adc
add
inc
movl
dec
jb
cmp
mov
adc
stos
pusha
leave
pop
inc
adcb
fsub
sub
imul
add
adc
jecxz
clc
lea
or
nop
inc
hlt
lds
and
pop
loopne
mov
sbb
cmp
cwtl
push
mov
sub
or
sub
lcall
jns
push
or
cwtl
push
sub
push
push
fwait
fstps
or
adc
dec
out
push
movsb
xorl
dec
xchg
daa
cmp
push
push
inc
cmova
fmul
test
xor
sub
testb
and
adc
bound
iret
sbb
pop
in
add
cmp
sub
cs
pop
add
es
push
adc
fsubp
fs
fmuls
ss
mov
mov
cmp
insl
movsl
lea
or
jbe
cs
mov
sahf
lods
mov
pop
dec
cmp
sbb
fsub
sub
shlb
adcb
xchg
ret
cmp
mov
rclb
xchg
mov
lret
lds
mov
jmp
hlt
pop
push
push
frstor
or
xor
lds
dec
test
popl
inc
add
cmpsl
add
adc
les
fdivs
bound
popa
arpl
add
inc
push
hlt
in
push
pop
dec
pop
ret
adc
dec
jb
add
jne
pop
sub
mov
popl
add
sbb
sub
mov
adc
mov
insb
cmp
sub
mov
mov
lea
movsl
movsl
push
adc
outsl
fs
sbb
mov
mov
push
add
dec
cmp
iret
push
cmp
mov
push
outsl
add
xchg
pop
and
outsl
fldz
and
pop
mov
dec
add
cli
not
and
je
mov
or
push
pop
loope
orl
xor
mov
cmp
inc
pop
add
pop
mov
pop
aas
add
arpl
sub
orb
adc
mov
dec
push
insb
mov
mov
not
and
push
ds
or
push
neg
push
or
dec
jecxz
pusha
pop
insl
leave
pop
ljmp
push
add
ds
rol
jl
add
jb
push
rorb
fmuls
mov
add
shl
lret
inc
test
enter
xchg
or
sbb
faddl
push
adc
sbb
int3
rorl
pop
mov
add
out
and
les
and
sbb
pop
push
movsl
xor
jb
xor
adc
xor
pop
cmp
add
repnz
mov
push
repnz
add
das
cwtl
inc
loopne
icebp
mov
pop
inc
pop
pop
jbe
mov
dec
push
orps
push
mov
push
inc
push
and
pop
inc
inc
add
add
in
sar
mov
push
ljmp
push
jo
fnstsw
cltd
jp
and
lea
or
sbb
inc
pop
sbb
add
or
push
or
add
cld
into
ret
imul
pop
repz
cmpsb
notl
hlt
cmp
enter
add
movsb
adc
in
inc
rorb
push
push
push
push
or
mov
lahf
hlt
adc
and
cmp
cmc
lret
fildl
imul
test
pop
mov
clc
mov
addr16
jbe
je
cmp
sbb
adc
lock
push
fwait
mov
sarb
push
out
pop
imul
lcall
inc
xor
loop
push
adc
push
push
mov
inc
popa
lock
dec
jecxz
or
scas
imul
push
or
cwtl
ret
mov
add
outsl
dec
add
fiaddl
test
not
and
jge
add
insb
dec
ret
das
mov
movsl
add
fcompl
sub
push
pop
xchg
jge
jns
jne
sub
popf
sbb
xchg
sbb
into
adc
jge
adc
mov
inc
push
adc
rol
in
ret
jmp
inc
fidivl
push
jecxz
imul
in
je
shlb
or
stos
shll
lock
push
push
shrl
inc
lock
mov
and
insb
and
fistpl
ljmp
lock
jmp
jns
cmp
sub
bound
xchg
cmp
push
das
mov
adc
push
jp
push
outsb
xor
add
or
add
movsb
rcll
loopne
pop
mov
dec
inc
or
cld
popa
push
dec
cmp
rclb
add
xor
sub
pop
xor
fdivr
insb
sbb
xchg
lea
fwait
out
imul
pop
add
add
mov
add
dec
jo
mov
sub
movb
pop
dec
lods
xor
aas
dec
dec
call
sar
insl
add
adc
lea
pop
mov
pop
pop
push
inc
dec
jne
adc
sub
js
notl
adc
adc
mov
add
push
adc
frstor
lods
enter
push
into
sbbl
cmpsb
clc
mov
xchg
pop
testl
or
adc
setbe
sub
dec
jns
sti
mov
aad
xor
and
mov
sub
shl
mov
mov
cltd
add
aad
scas
xchg
inc
pushf
mov
movw
add
mov
mov
xchg
add
aad
inc
inc
add
jo
push
jne
adc
mov
or
aas
int3
cmp
cld
rolb
jne
xor
test
add
sti
mul
xchg
inc
movzwl
lea
mov
push
pop
push
cmp
lret
cmpsb
cmp
push
addr16
out
and
out
push
inc
std
cmp
fadds
cmp
sahf
push
sub
sub
mov
clc
push
out
inc
enter
add
jne
xor
icebp
xchg
lret
inc
das
jo
mov
add
leave
in
fidivrs
test
sub
insb
add
mov
loope
mov
sub
cmp
sbb
pop
clc
popf
inc
add
cmp
fisttpll
es
orb
ret
add
sub
int
add
movups
in
fs
pop
pop
lar
rolb
add
sub
lcall
out
ss
push
or
add
push
push
and
or
mov
push
outsl
push
dec
inc
jbe
mov
cwtl
leave
shlb
and
adc
shrl
jo
in
inc
mov
loope
xchg
test
jg
cmp
push
sbb
scas
shlb
jge
add
movsb
rorb
ret
mov
gs
xlat
enter
mov
hlt
and
dec
adc
and
add
add
arpl
out
stc
imul
sub
loop
and
push
shrl
mov
movl
jnp
sbb
and
pop
cld
push
push
and
dec
push
test
add
add
dec
test
lock
pop
or
out
sub
push
pop
sub
mov
or
mov
inc
sub
sbb
in
adc
pop
pusha
jne
ss
sti
test
sar
sbb
mov
cmp
jg
test
in
xor
std
jle
cmp
jl
cmpsb
aaa
enter
jg
lock
cmp
jle
cltd
inc
add
sub
xchg
nop
mov
jo
shl
fs
cmpb
dec
dec
dec
aad
and
imul
ret
sbb
inc
cmp
or
test
add
nop
out
int3
push
add
fcomp
add
jno
cmp
adc
arpl
imul
adc
adc
enter
and
lds
dec
in
das
inc
dec
fdivrs
jecxz
hlt
add
mov
inc
js
ljmp
adcl
movsb
mov
incb
jg
or
jl
push
insl
sahf
sbb
cmp
dec
add
adc
dec
fimull
pop
cli
mov
into
in
filds
cmp
and
adc
cltd
xor
cld
lds
and
add
cli
in
add
sub
add
pusha
mov
les
dec
repz
xor
push
or
pop
jo
push
pop
add
nop
xchg
mov
inc
nop
mov
push
rcl
and
nop
pop
ret
mov
mov
insl
mov
push
mov
loop
mov
inc
daa
test
jge
inc
shlb
repz
mov
mov
adc
add
xchg
das
inc
mov
or
adc
or
icebp
or
mov
imulb
into
mov
and
xor
add
pop
or
test
fs
dec
lret
jne
in
outsb
rorb
pop
xor
sarb
lods
movsl
notb
out
lods
mov
shrb
push
push
hlt
xchg
scas
xor
jmp
outsb
jmp
pop
and
sbb
sub
mov
lea
xchg
jmp
or
or
sub
in
movl
fldl
sbb
adc
jle
lock
jmp
xchg
lods
push
and
xchg
add
pop
cwtl
jmp
adc
sub
imulw
add
xor
xor
inc
and
inc
push
and
and
push
push
sub
inc
push
sub
xchg
addl
xchg
lret
pusha
dec
loopne
arpl
je,pt
out
adc
out
cwtl
imul
add
add
es
mov
stc
add
add
pushf
jo
popa
insb
mov
sbb
push
xor
add
pop
fcomip
daa
or
xchg
and
out
aad
or
dec
imul
dec
push
repz
xor
mov
push
cmpl
xor
mov
jo
dec
dec
lcall
push
and
outsl
lods
or
push
xchg
sub
cmp
lahf
pusha
jge
jno
mov
pop
pop
call
testb
lods
outsb
imul
mov
and
stc
adcb
pop
push
cmp
push
in
cmp
movsl
imul
loope
ret
loopne
sub
push
insl
cmp
adc
or
mov
fcoml
loop
xor
out
loope
and
jmp
add
push
mov
push
add
sub
fmulp
int3
and
in
inc
fsubrs
fidivl
mov
push
push
mov
or
push
add
or
push
sub
popa
ja
push
scas
mov
mov
mov
mov
test
mov
insl
mov
push
xchg
dec
hlt
lods
sbb
mov
in
dec
stos
add
hlt
loopne
fdivrl
adc
adc
jp
push
aas
int3
orl
mov
pop
lds
imul
movb
je
inc
and
out
adc
pop
add
lods
add
mov
and
sbbb
sbb
or
xor
notl
adc
push
xor
nop
jge
inc
adcl
inc
xchg
inc
push
lcall
in
push
inc
or
sub
xchg
and
jno
ja
dec
cmp
cwtl
or
adc
or
sbb
mov
or
je
sub
xchg
ss
add
rcl
test
add
test
clc
xchg
xchg
in
test
dec
hlt
mov
shl
hlt
mov
mov
adc
cmp
push
sbb
and
pop
add
push
cmp
ja
lea
scas
push
cmpsl
mov
inc
outsl
cmp
bound
jmp
or
ret
ret
cmpsl
dec
push
leave
sbb
push
jns
or
push
bound
pop
push
cld
pop
pop
es
ret
fsubl
jo
inc
or
pop
ret
cmp
push
scas
and
ja
push
pop
nop
inc
cmpsb
add
pop
into
inc
stos
and
or
or
or
mov
addr16
push
and
mov
and
daa
pop
stos
sbbb
orl
dec
push
or
inc
mov
add
inc
mov
cmp
push
subl
add
test
lahf
adc
pop
mov
push
xchg
cmp
ja
sub
xor
and
inc
add
clc
mov
dec
mov
sbb
das
pmulhuw
mov
mov
jns
mov
inc
dec
sahf
push
lock
xchg
xlat
and
in
ja
popw
imul
bound
je
imul
jmp
loop
push
dec
pop
mov
and
dec
das
add
sbb
push
mov
push
cmc
scas
pop
popf
mov
clc
cmpsl
dec
mov
mov
test
mov
cpuid
mov
and
sbb
sbb
fisubrl
push
das
cltd
mov
das
lods
push
inc
cltd
orl
pop
and
xor
ret
pop
inc
xchg
cmp
dec
push
movsb
xor
jge
clc
ja
adc
ret
jno
jne
cmp
add
xchg
inc
pop
inc
adc
clc
push
pushf
sub
xorl
out
mov
add
imul
mov
adc
or
sbb
mov
popf
add
mov
pushf
rclb
and
mov
cmp
sub
sarl
leave
mov
mov
sbb
js
xchg
or
test
ja
cmp
call
add
mov
lret
inc
sahf
fcoms
dec
lods
mov
movsl
fdivrs
and
or
das
and
dec
call
test
and
cmp
or
lock
and
pop
add
sub
mov
jne
mov
dec
clc
add
popa
arpl
or
mov
test
and
sbb
adc
push
jmp
pop
mov
movsb
sbb
out
pusha
xor
rcrb
out
dec
mov
push
adc
sbb
adc
pop
mov
push
sub
pop
mov
das
sbb
fs
jb
sbb
ss
pop
adc
inc
push
popa
loop
and
push
push
sbb
imul
xlat
adc
leave
push
mov
lds
aas
jno
dec
fcomps
or
rol
fistpll
jmp
orl
out
adc
and
or
arpl
das
sbb
nop
das
sub
fistps
scas
and
xchg
xchg
and
mov
push
mulps
adc
or
dec
gs
lret
or
imul
aam
popf
cmpsl
push
stos
cmp
mov
inc
xor
push
adc
movsl
in
cmpl
add
sbb
fldl
pop
jmp
les
inc
iret
jmp
jecxz
and
mov
leave
push
inc
sbb
push
ret
mov
xchg
inc
addl
xor
ret
dec
daa
fimuls
jnp
fdivrs
and
push
sbb
je
jge
stos
or
rcll
add
pop
ret
pop
pop
dec
sub
or
push
pop
enter
pop
test
ret
hlt
pop
call
push
push
loop
lods
adc
fbstp
rcl
sub
das
and
ror
rcr
mov
popa
clc
scas
add
adc
je
xchg
mov
inc
mov
push
and
and
and
sub
xchg
push
mov
mov
inc
inc
sbb
dec
xor
in
sub
out
fisttps
sub
mov
jmp
adc
inc
outsb
test
sbb
xor
cmpsl
fdiv
xor
and
clc
adc
test
lea
pushf
lret
jnp
push
ret
outsl
dec
movl
sub
cmp
jg
in
or
push
enter
pop
or
add
jo
xor
out
lea
jl
iret
mov
decl
adc
add
pop
adc
arpl
add
push
popa
add
dec
jo
loop
pushf
pop
jne
inc
movsl
push
mov
pop
sub
sbb
fildll
jmp
push
push
icebp
mov
jle
pop
imul
adc
call
cld
cmpsl
pop
jmp
push
xor
sub
bound
out
add
fdivr
imul
and
sbb
js
pusha
inc
js
push
dec
pop
jb
cwtl
aaa
call
mov
push
gs
jbe
sub
andb
xchg
fmuls
or
xor
and
pop
fistps
and
gs
dec
or
pop
xor
loopne
hlt
fildl
sub
push
dec
jmp
adc
jecxz
pop
jns
pop
pop
sub
aaa
push
sbb
xchg
xchg
out
xchg
call
and
cli
sub
rcl
mov
xor
bound
pop
add
dec
fadd
jmp
cmp
add
adc
add
insb
ret
popf
cltd
lea
xor
lock
dec
cmpl
shlb
dec
inc
je
das
cld
sub
in
pop
lds
sub
or
jl
gs
lea
mov
enter
adc
cltd
dec
jecxz
addr16
xchg
dec
test
xor
or
cld
sbb
loopne
mov
mov
iret
jg
movsl
and
sahf
gs
or
adc
push
int
fidivrs
add
or
int
lcall
fsubp
pop
add
repnz
subl
sar
test
daa
hlt
mov
push
fsubrs
enter
popa
or
add
push
sub
in
pusha
add
pop
mov
ss
call
ret
cmp
push
ljmp
into
or
or
rclb
subb
pop
daa
in
test
js
test
je
adc
fs
xchg
mov
mov
repnz
adc
push
push
xchg
data16
sub
mov
mov
dec
ds
inc
addr16
movsb
fildl
sti
das
and
scas
sub
mov
mov
inc
jns
or
add
addr16
push
sub
enter
test
dec
cmp
adc
adc
inc
add
out
cs
add
push
fdivs
mov
pop
shrb
add
inc
stc
cmpsb
stc
jns
xor
and
aas
jp
scas
in
stc
push
pop
xor
or
popf
push
lock
mov
add
pop
aaa
or
sbb
loope
jle
mov
je
daa
pop
inc
in
lcall
sbb
adc
inc
or
movsb
xor
pop
sbb
push
dec
dec
and
pop
sub
sub
int
mov
cmp
xor
sarb
leave
mov
or
pushf
sbbb
gs
inc
adc
sub
adc
sub
adc
insb
rolb
aas
sbb
mov
jle
test
fs
mov
pop
ficoml
push
inc
pusha
adc
adc
mov
rorl
data16
int
pop
sbb
sbb
and
xor
cmp
add
inc
push
rclb
insl
dec
in
sub
add
jmp
loop
cmpb
pop
inc
cltd
inc
xchg
inc
es
arpl
cmp
and
dec
or
jne
dec
mov
jo
push
stos
or
adc
les
shrl
mov
or
scas
pop
lret
push
cld
inc
pop
xchg
and
fcoml
push
insl
pusha
cwtl
sub
orb
dec
dec
push
lret
sub
sahf
imul
jbe
shr
ret
es
mov
mov
xchg
lock
loopne
jmp
repnz
mov
pop
sbb
xor
mulb
out
imul
and
cmp
or
push
mov
imul
insb
hlt
mov
pushf
mov
in
outsb
add
or
call
mov
push
push
xor
call
mov
ror
inc
cmp
lahf
rcll
fmul
gs
push
sbb
je
fisubs
jne
call
xlat
push
movsl
mov
cmc
iret
enter
js
jmp
rorl
pusha
out
xor
imul
pop
xor
sarl
jnp
insl
push
adc
fs
in
jb
push
inc
subb
mov
dec
jo
or
sahf
test
rorb
orl
mov
sub
dec
xor
mov
mov
xorb
adc
jecxz
dec
xlat
in
les
xchg
sbb
pop
arpl
xor
hlt
out
dec
cld
into
mov
xchg
dec
fisubrl
dec
or
outsl
xchg
push
stos
add
movsl
mov
imul
fs
xchg
es
cli
mov
and
pop
cmp
ffree
add
aas
outsl
add
xorb
daa
je
ja
and
or
xchg
add
cmp
inc
stos
and
mov
leave
pop
sub
push
add
inc
jo
push
adc
orb
repz
punpckhdq
xor
xchg
scas
lahf
mov
adcl
sub
xchg
fs
and
outsl
add
mov
adc
inc
loop
mov
aaa
xchg
nop
clc
jne
dec
jo
or
push
ss
adc
or
cmp
cmp
pop
int3
push
pushf
hlt
xor
pusha
push
jae
pusha
or
or
push
loope
pusha
mov
jno
or
idivl
pop
push
decl
jge
add
fwait
ret
bndldx
jmp
mov
jno
push
inc
bound
mov
mov
cmpsl
pop
or
xor
ss
or
fistl
or
push
fucomp
mov
lock
mov
or
mov
aaa
pop
jns
or
xchg
pop
loop
lahf
cmp
pop
fistpl
mov
push
sub
or
and
xchg
push
inc
inc
or
loopne
inc
out
mov
jb
jge
jo
adc
cs
adc
fiaddl
jne
and
add
cli
adc
movl
ds
loopne
dec
pop
pop
pop
stc
jge
sbb
and
add
add
stos
nop
xor
aaa
fists
xchg
bound
pop
mov
je
adc
and
xor
and
inc
jne
aaa
enter
add
sbb
add
bound
sbb
push
gs
ljmp
mov
xchg
mov
pop
fnsave
cmp
mov
jns
pushf
mov
pop
jp
clc
inc
inc
jp
or
data16
jl
es
or
xchg
arpl
mov
jbe
push
data16
filds
mov
xchg
insb
xor
add
inc
js
test
testb
sub
xchg
lahf
jle
fimuls
call
push
mov
fmull
iret
mov
cmp
sbb
lods
push
and
fisubrl
or
push
imul
int3
sub
sbb
lcall
push
arpl
push
test
xchg
cmpsl
xchg
pop
mov
hlt
cmp
pusha
stos
add
mov
insl
adcl
dec
mull
loopne
cmp
jmp
xchg
fidivrl
pop
insl
aaa
sbb
bound
in
jmp
outsl
je
ja
cmp
je
mov
pop
daa
sub
roll
bound
fdivr
inc
mov
push
cmp
or
jne
jl
dec
and
pop
inc
push
loopne
shlb
mov
test
mov
xchg
jne
mov
xor
test
stc
push
add
or
icebp
je
pop
ljmp
rol
jmp
or
add
xchg
fucom
int3
fisttps
jns
cli
js
mov
imul
outsb
or
fdivrs
xor
lock
nop
fmuls
add
repz
mov
push
push
and
in
jb
sub
fs
adc
fsubrs
and
dec
in
lock
adc
pop
mov
add
add
sbb
xchg
in
and
cmp
popf
mov
dec
repnz
xor
xor
scas
scas
js
xchg
jo
fisttpll
inc
dec
scas
push
sbb
fcoms
out
or
std
loopne
mov
cmp
dec
dec
icebp
push
adc
and
mov
adc
push
in
stc
push
inc
loop
mov
xchg
mov
xor
mov
cmp
jbe
sar
sub
push
jecxz
movsl
movsb
cmp
jns
imul
sbb
cmpsb
dec
adc
cmp
leave
inc
clc
xchg
and
add
into
lock
dec
add
or
aam
jle
push
dec
add
sarl
cli
mov
add
into
push
fwait
lods
or
pop
pusha
lcall
movsb
rorl
or
je
out
nop
dec
mov
sub
shlb
xlat
stos
mov
bswap
mov
mov
cld
cmp
loopne
ds
leave
ret
in
ds
mov
pop
inc
addr16
fs
mov
leave
hlt
mov
jnp
adcb
mov
test
adcl
add
sbb
sub
cwtl
pop
dec
xchg
mov
ja
sub
lock
je
cltd
sbb
inc
stos
shlb
mov
pop
xlat
testl
mov
pop
inc
sub
js
in
into
mov
popa
popa
rorl
push
lea
aaa
imul
iret
call
pop
add
and
or
xchg
inc
ja
cmp
push
jno
movsl
jo
xchg
cmp
sub
dec
xor
and
test
adc
push
push
jge
repnz
sbb
fldt
cmp
adc
sub
cmp
and
xor
inc
test
cmp
fsubl
xor
nop
es
mov
out
jge
dec
aaa
jo
lea
add
push
inc
jmp
stos
sub
movsb
push
xchg
sbb
and
pop
ja
cmp
jno
in
or
sbb
jle
xor
out
ret
push
cmpsl
sub
test
insb
movsb
pusha
sub
lret
rcrl
out
movl
xor
cmp
fdivr
dec
sub
aas
add
xor
pop
mov
push
add
lret
inc
scas
xor
loope
push
jmp
mov
fmuls
and
pop
sbb
adc
sbb
cmpsb
push
and
add
pop
jl
sbb
mov
int
and
lds
scas
push
pop
test
or
mov
xchg
roll
jo
add
jmp
dec
jge
xchg
nop
and
sbb
or
push
or
insb
imul
fcmovu
scas
xor
jg
movzwl
push
dec
in
scas
roll
adc
xorl
bound
loope
cmp
push
dec
ret
add
sbb
insb
inc
jbe
fldl
push
mov
imul
add
ret
adc
leave
adc
add
dec
in
pop
pop
jbe
ret
xchg
mov
adc
pushf
inc
push
and
mov
inc
nop
call
ret
dec
inc
or
inc
lret
repz
call
push
pop
and
movsb
ret
dec
push
push
movsl
mov
cmp
fimull
mov
stos
or
mov
in
and
push
xchg
das
adc
lea
jmp
outsb
and
mov
jmp
sub
lahf
pop
lock
mov
add
jbe
scas
daa
mov
mov
movsb
add
push
push
lea
or
or
and
xchg
jle
test
push
xor
sub
dec
mov
xchg
lahf
cmpsb
cmp
cli
insb
add
test
or
clc
sub
xchg
mov
sub
subb
cld
adc
add
mov
mov
scas
xlat
mov
mov
inc
xor
xor
mov
scas
sbb
adc
pop
loope
or
ja
push
lea
scas
and
jne
sbb
sbb
sbb
cwtl
dec
lea
daa
mov
inc
sub
pop
xchg
outsl
out
or
sbb
xchg
pop
mov
add
ljmp
or
jmp
sbb
jp
cwtl
jmp
jae
dec
filds
pop
testb
or
jl
add
pop
sbb
pop
jb
gs
pop
pop
add
neg
adc
bound
add
repnz
cmp
js
sbb
lods
pop
pusha
fiaddl
jp
add
cwtl
dec
adc
pusha
or
dec
jbe
ja
mov
adc
test
cltd
dec
and
mov
imul
addr16
xchg
dec
iret
jne
inc
loopne
outsl
imul
cmc
inc
add
insb
aad
lock
mov
fnstenv
dec
insb
adc
pop
sub
mov
test
mov
hlt
loopw
data16
lret
or
xor
mov
nop
sub
or
cmpsl
icebp
js
push
dec
pushf
sbb
divb
rorb
inc
xor
push
xor
rorb
mov
negl
sub
movsl
fdiv
mov
dec
adc
dec
outsb
mov
adc
xorb
add
sub
shrl
aaa
cld
xor
adc
mov
push
sub
cwtl
sbb
push
push
orb
loope
fmuls
jg
xchg
js
push
sub
ljmp
dec
adc
shll
jg
push
mov
mov
push
adc
add
xor
jmp
add
xor
mov
pusha
test
sbb
cwtl
cs
pop
lods
orb
int3
jecxz
rcrb
or
sub
push
inc
dec
movb
mov
inc
and
scas
daa
repnz
js
mov
jl
push
dec
mov
shll
mov
pop
xchg
cmp
and
or
gs
cmp
lea
fucomp
mov
ret
into
jo
inc
ret
orb
rcrb
dec
imul
push
adc
push
and
pop
dec
and
mov
mov
fcoml
push
xchg
xor
ret
jmp
xchg
mov
xchg
adc
xchg
imul
push
jmp
push
ficoms
push
or
fst
or
clc
loopne
cmc
add
loopne
sub
inc
xor
ffreep
filds
pop
jne
loopne
loopne
or
add
mov
xor
mov
sbb
sbbl
mov
mov
lds
adc
sbb
jge
cmpsl
xchg
or
or
insw
rcrb
push
sub
data16
add
inc
loopne
xchg
imul
cmpsl
movsb
mov
push
dec
xchg
adc
add
repnz
push
aam
inc
dec
pop
pop
add
enter
sbb
mov
or
mov
shlb
pop
test
add
daa
movsl
push
inc
push
add
popa
add
ret
ret
js
cmp
loop
notl
call
and
ret
test
mov
sub
outsb
push
pop
push
push
sbb
inc
adc
test
sub
out
dec
xorl
cltd
les
or
cltd
jo
pop
jno
inc
or
push
mov
out
adc
test
imul
lock
dec
call
notl
cmpsb
push
adc
mov
es
dec
mov
hlt
inc
mov
pop
imul
fadds
sub
call
cmp
in
jle
call
jno
mov
push
imul
push
mov
mov
jmp
jbe
mov
es
sbb
scas
rolb
and
adc
std
cmpsl
dec
pop
jl
pop
or
add
mov
mov
sahf
inc
test
mov
or
pop
es
sbb
nop
sbb
mov
fucom
and
sub
cmp
add
popf
sbb
mov
pop
dec
cmp
mov
mov
out
push
or
clc
add
sbb
sub
dec
and
or
push
xor
mov
fmuls
test
adc
and
mov
pusha
mov
and
or
add
call
scas
test
jne
mov
dec
daa
jmp
push
das
push
lods
sub
mov
push
repz
arpl
pop
xchg
mov
sbb
inc
arpl
pop
xchg
dec
test
xlat
push
jbe
push
scas
imul
mov
and
cs
imul
push
pop
push
jle
filds
outsb
sti
inc
adc
cli
pushf
or
in
or
pop
or
jg
lea
xchg
jge
inc
sbb
add
ret
test
push
out
lods
scas
jb
fwait
dec
loopne
cmp
loopne
jle
push
and
adc
cmp
js
pop
dec
fiadds
jbe
sbb
push
adcb
adc
adc
ret
pop
mov
fimull
sti
sahf
jno
fbstp
xchg
outsl
cmp
adc
push
jo
cwtl
int
cmp
mov
mov
lea
mov
mov
jmp
and
add
xchg
inc
scas
mov
lea
or
or
out
sbb
and
outsb
popa
jo
nop
inc
adc
call
movsb
sbbb
inc
mov
es
adc
push
in
pop
adcb
dec
lea
rol
ret
lods
nop
sub
xchg
add
or
add
call
dec
jge
imul
push
mov
and
adc
sub
jns
add
xor
and
inc
js
inc
mov
add
lock
pop
out
cmp
jl
cmp
pusha
int
jge
sbb
mov
jecxz
lods
cmpb
movsl
pop
dec
fdivrp
iret
testl
imul
dec
sbb
xlat
add
sub
jb
add
lock
mov
mov
insb
subb
add
addr16
cmp
xor
pop
xlat
and
pop
movsb
cli
cmp
or
inc
lock
add
jp
out
mov
aam
mov
inc
sbb
jmp
cli
inc
jl
outsb
sub
inc
testb
mov
push
push
dec
outsb
and
loope
jge
iret
test
xor
cmpsl
push
xor
ja
mov
addb
or
icebp
push
cmpsb
add
lcall
lods
and
push
sub
xchg
jbe
scas
and
sub
daa
mov
mov
imul
mov
or
ss
add
inc
add
gs
sub
sbb
rolb
inc
je
fildll
test
or
pop
cmpsl
je
mov
and
andb
addl
ret
pop
stos
adc
icebp
sbbl
out
mul
je
and
pop
adc
out
popa
mov
ds
or
sti
push
in
and
push
popf
xlat
dec
les
inc
and
or
xchg
inc
push
outsl
sub
aaa
adc
mov
nop
mulb
push
xor
testb
testb
je
ss
jns
sub
adc
call
sbb
inc
andb
mov
inc
pop
dec
movsb
sbb
iret
fidivrl
inc
jp
pop
test
sbb
mov
adc
push
addb
or
hlt
cltd
mov
sahf
sbb
add
xorb
es
sbb
inc
lods
or
adc
adc
test
scas
cmpsb
and
inc
add
add
pop
loopne
je
add
out
sub
jle
insb
and
sbb
dec
shlb
xor
dec
adc
sbb
loope
sbb
inc
icebp
sub
and
das
movsb
fs
movb
sub
or
dec
out
rorb
lds
rorl
mov
test
mov
insb
in
dec
add
sbb
or
inc
xchg
aaa
movsl
push
inc
roll
add
test
mov
add
add
jnp
mov
test
fs
mov
fstpl
add
mov
mov
test
push
inc
adc
pop
dec
push
push
daa
adc
add
ffreep
cmp
test
sbbl
or
ds
mov
data16
fwait
and
or
cmp
xlat
lock
and
inc
or
imulb
shll
xlat
mov
push
aam
cmp
lock
dec
jg
or
gs
cmpsb
in
or
loope
popf
push
cld
aas
stc
xchg
jge
xor
pop
cmp
xchg
loopne
inc
or
or
fistpl
pop
mov
aad
mov
inc
inc
pop
pop
add
scas
xchg
icebp
push
sbb
pop
sub
pop
pop
add
loope
stos
pop
push
into
xchg
lret
imul
adc
imul
pop
pushl
outsl
sbb
dec
aam
int3
adc
rol
and
and
inc
inc
int3
fs
jae
push
cmc
and
mov
xchg
push
into
push
sub
pop
push
dec
jle
leave
cwtl
cli
add
xchg
addr16
clc
inc
adc
push
aam
aam
leave
jae
imul
and
sbb
orl
cmp
inc
xor
mov
add
mov
nop
sub
into
sti
cmp
adc
add
xor
pop
ja
inc
add
test
xchg
adc
dec
je
add
imul
push
orl
pop
leave
cltd
pop
mov
xchg
not
cltd
push
push
and
lret
pop
cmp
dec
mov
mov
out
mov
int
xchg
sub
imul
dec
test
add
add
and
pop
xlat
xor
or
in
clc
dec
das
fwait
or
dec
aad
or
and
cmp
mov
xchg
mov
add
inc
xor
or
stc
sahf
leave
xchg
in
lcall
out
cli
test
arpl
xchg
and
jb
test
std
xor
push
das
out
lcall
sub
test
es
shlb
icebp
mov
fwait
jae
addb
add
int3
jle
popa
push
cmp
ss
lahf
dec
imul
loop
jle
shlb
dec
push
pop
adc
xchg
adc
jae
pop
inc
or
pop
adc
imul
xlat
dec
push
and
or
and
and
adc
pop
mov
push
xchg
adc
inc
pushf
push
ret
adc
mov
xor
adcb
mov
mov
xor
shlb
jno
inc
pop
outsl
mov
and
mov
mov
sub
ljmp
loop
jne
ss
xchg
and
add
and
xor
dec
sbbb
push
in
xchg
sub
leave
int
push
psubq
or
adc
push
push
mov
pop
sahf
lods
test
sarb
sbb
pop
clc
cmp
pushf
out
and
inc
rolb
adc
mov
mov
mov
pop
push
sbb
sub
add
mov
dec
or
inc
sarb
jnp
int3
sbb
inc
cmp
shr
in
pop
stc
addr16
add
push
shrb
jne
inc
cmp
ret
inc
push
shrb
icebp
test
or
add
adc
push
or
xchg
jno
jae
sahf
fcomip
sbb
dec
adc
rcl
add
inc
test
leave
push
sarl
mov
xlat
jnp
addb
inc
jp
mov
ret
nopl
pop
mov
push
add
repnz
cmpsb
adc
inc
push
adc
rolb
adc
arpl
ds
push
sbb
sbb
mov
adc
add
ja
lock
ss
jnp
xchg
sub
fidivs
dec
inc
hlt
jl
adc
rcrb
mov
loopne
cmpb
xchg
push
push
push
mov
mov
sub
nop
je
jl
fs
sbb
les
fsubs
push
inc
jb
mov
push
mov
pop
add
add
adc
mov
js
call
sub
add
loop
xchg
lods
pop
aas
test
push
or
push
xor
and
mov
insb
or
pop
fs
or
push
dec
mov
xor
aaa
cmp
insb
mov
adc
andb
scas
sbb
mov
aas
xchg
or
or
xor
push
mov
inc
and
inc
adc
push
and
jle
popa
or
xchg
je
cmp
loope
xor
dec
outsl
or
ret
adc
dec
movsb
shr
pop
push
ja
fnstsw
push
fistpll
jl
pop
call
push
xchg
lds
loope
je
dec
test
nop
cmp
add
or
sbb
add
sahf
fs
decl
sahf
mov
test
in
dec
dec
push
mov
enter
movsb
test
mov
enter
mov
enter
int3
ror
enter
fcomp
loopne
enter
call
enter
cld
add
enter
add
or
enter
adc
sbb
enter
and
sub
enter
xor
cmp
enter
inc
dec
dec
push
sub
lret
enter
inc
cmp
sbb
es
daa
mov
sub
sarl
ret
xor
add
xchg
cmpsl
fmull
in
or
gs
movsb
cld
test
sub
and
mov
push
sbb
push
sarb
or
cwtl
enter
and
lret
push
aam
fadds
movsb
jb
or
fcompl
nop
lret
sub
cmp
add
call
dec
gs
lock
hlt
and
nop
cmp
movsb
xor
mov
xchg
lret
shlb
fmuls
pop
sbb
adc
sbb
sbb
push
sbb
dec
gs
sub
insb
xchg
add
mov
movsb
xor
xor
cmp
cmp
sub
push
sbb
inc
clc
mov
adc
and
inc
aaa
or
pop
xlat
xchg
sub
pop
adc
mov
inc
lods
enter
popa
js
add
in
mov
imul
loope
insb
outsl
jae
and
and
mov
scas
inc
xor
pop
stc
add
pop
cmp
aas
push
push
inc
sub
and
daa
mov
fcoml
dec
insl
xor
jnp
mov
jae
cmp
mov
fcomps
dec
arpl
adc
dec
jae
cld
adc
and
out
push
loope
mov
jp
adcb
pop
repz
das
pop
scas
dec
movsl
and
xchg
add
pop
pop
pop
and
popa
ja
lcall
jns
sub
fsubl
sbb
cmp
mov
and
jae
inc
nop
divb
or
stos
jns
dec
imul
cmpsb
outsb
push
out
iret
push
loopne
pop
stos
outsb
popa
and
xorb
push
adc
push
cs
pop
xchg
pop
mov
pusha
sbb
jl
mov
ja
out
jae
es
or
sbb
movlps
sbb
pop
fs
sarl
inc
imul
mov
test
arpl
nop
xchg
cwtl
mov
mov
jno
pop
inc
and
sbb
pop
outsl
loop
fs
pop
in
sbb
dec
inc
mov
loopne
cmp
dec
insb
inc
add
xchg
out
dec
hlt
loopne
pop
jne
jp
sub
dec
sbb
push
adc
in
daa
inc
mov
scas
mov
and
push
test
adcb
addb
inc
push
dec
inc
push
dec
jl
clc
and
inc
ja
iret
add
sbb
jmp
adcb
fwait
dec
xor
xchg
fs
xchg
subl
dec
hlt
out
repnz
push
mov
sbb
sub
or
jl
cmp
pop
daa
outsl
push
mov
loopne
je
jl
pop
popf
test
dec
push
pop
inc
testl
ret
push
inc
ja
push
xor
and
adc
jle
test
pop
imul
hlt
cmp
jno
xor
sub
test
or
adc
je
aas
inc
inc
push
or
les
add
inc
insb
push
cmpb
pop
scas
jae
mov
rolb
jo
mov
or
popa
outsl
lods
push
or
loope
sbb
sbb
shrl
mov
fistpll
pop
add
and
movsb
fidivrl
push
jp
adc
pusha
incb
xchg
incl
add
add
outsb
xor
inc
sbb
fidivrl
pop
mov
cmp
ss
addb
stc
rcr
in
shrl
cmp
jmp
add
jnp
testl
jbe
lret
push
sub
data16
insb
push
movsb
out
jmp
cmpsl
sbb
loopne
shr
dec
fmull
mov
dec
pop
aam
add
mov
mov
inc
jmp
mov
out
push
cwtl
push
in
ret
push
je
add
insb
cmp
loope
pop
pop
sub
stos
add
or
bound
in
mov
mov
inc
vpmacssdql
push
push
pop
orl
nop
mov
sbb
push
push
sbb
orb
test
fildl
or
xchg
fildl
dec
pushf
add
clc
leave
inc
push
add
imul
shll
rcr
in
flds
pmuludq
ret
test
jle
and
stos
les
and
inc
mov
push
jmp
pop
mov
jne
add
mov
ret
jge
dec
jecxz
into
shl
mov
mull
adc
loope
or
stos
jo
jo
mov
mov
inc
cmp
xchg
je,pn
cwtl
adc
loopne
adc
or
dec
je
enter
adc
inc
or
mov
cmpsb
adc
fcoml
or
dec
dec
pop
shl
dec
push
inc
pop
fs
mov
movsl
cpuid
mov
sbb
sbb
or
jmp
xchg
push
or
je
sbb
cmp
je
ficomps
fs
es
push
lods
push
int
mov
push
pop
adc
lods
int
sbb
in
iret
pusha
xchg
cltd
mov
sbb
push
pop
rolb
mov
stc
je
xchg
or
dec
pop
cld
call
movsb
pop
push
add
out
push
cltd
idivb
inc
movsb
cmp
pop
push
lahf
mov
dec
ss
sbb
out
orl
pop
mov
jmp
mov
or
mov
lea
pop
sub
fstp
dec
lea
or
pop
faddp
jbe
xchg
and
fstl
mov
push
mov
or
cmpsb
inc
orb
stos
and
jns
push
lock
xor
jne
push
rorb
mov
lahf
test
lret
and
add
clc
shr
dec
aam
mov
psubq
push
fmuls
outsb
push
imul
mov
cmp
cmp
mov
js
cmpb
xchg
sarb
sbb
sub
or
rorb
aam
cmp
push
int
lret
rorl
push
xchg
dec
inc
cs
dec
loopne
sub
imul
clc
clc
adc
jl
sub
or
les
je
subb
add
inc
in
mov
cwtl
inc
sub
aaa
sub
das
add
sbb
sub
xchg
cmpsb
mov
shrb
push
pop
repnz
test
enter
divl
rorb
pop
pop
dec
mov
mov
pushf
jl
xor
or
push
and
bnd
xor
xor
cmpsb
mov
test
dec
lock
rol
dec
andl
cwtl
add
in
inc
xor
in
das
cwtl
mov
sub
inc
add
jns
mov
int3
inc
je
inc
mov
aad
clc
rcrb
pop
inc
adc
scas
sub
dec
sbb
push
push
inc
enter
iret
jnp
mov
inc
jbe
push
pushf
nop
push
rorb
out
jns
call
push
in
cld
jle
jnp
out
hlt
or
add
or
outsl
mov
loopne
sbb
adc
les
sbb
mov
pushf
mov
outsl
insb
push
xchg
push
add
cmpsb
aas
xor
cmpl
jo
push
test
inc
or
movhps
sbb
pusha
add
sahf
int3
outsb
data16
xlat
pop
loope
mov
dec
inc
repnz
push
pushf
in
inc
jge
addr16
sub
movsb
int
pushf
outsb
pop
addr16
push
bound
fwait
in
jnp
pushf
mulb
nop
das
lods
into
dec
mov
mov
push
sub
dec
loopne
imulb
in
test
mov
out
imul
clc
fs
pusha
sarl
push
add
mov
fwait
dec
fcos
sbb
addb
sub
insb
mov
xchg
cmp
mov
pop
sub
add
mov
in
mov
pusha
xchg
cmp
in
mov
in
adc
sarb
inc
vmovhlps
je
xchg
add
jg
mov
mov
ljmp
push
pusha
rorl
pop
cmp
idivl
mov
dec
iret
jo
ret
push
adc
mov
sbb
icebp
cwtl
push
aaa
and
xchg
push
inc
mov
movsb
jo
jae
cltd
sub
push
jno
inc
in
adc
lret
mov
lods
push
adc
pop
das
or
add
add
or
or
dec
mov
mov
pop
nop
or
rcrl
sub
rorb
rcll
movsb
mov
inc
nop
or
sbb
in
mov
lods
push
adc
pop
insb
pop
sbb
mov
popa
pop
jae
adc
mov
and
sbb
rclb
push
xor
xchg
xlat
icebp
lds
push
icebp
lock
adc
scas
add
lcall
xchg
or
mov
outsb
inc
test
inc
add
add
call
into
and
and
mov
leave
push
jb
daa
sub
mov
jns
lock
dec
clc
inc
clc
sub
push
test
imul
ds
dec
add
adc
inc
adc
sub
jmp
and
xchg
sbb
adcb
pop
add
push
jo
add
or
das
xor
nop
or
xor
cmp
nop
xor
inc
xor
add
and
ss
sub
add
mov
mov
add
mov
filds
into
int3
mov
movb
ret
insb
mov
call
mov
and
and
ds
popf
and
inc
cs
push
add
cmp
add
int3
push
ja
add
jecxz
aam
sub
dec
rol
mov
mov
sbb
or
add
adc
adc
jae
xchg
dec
lods
cmc
push
lods
pop
orl
rcrw
cmpsl
lea
mov
adc
rcll
xchg
lods
push
jns
xor
cmpxchg
test
jmp
jo
outsl
call
mov
or
add
jns
sub
ret
inc
push
ret
inc
js
ror
xchg
sahf
adc
or
pop
movsl
imul
aaa
aas
sub
add
mov
std
sbb
fadds
mov
mov
adc
jb
cwtl
rol
cltd
pop
lods
or
loope
fldenv
loopne
in
jmp
addl
sub
sbb
imul
mov
fs
pop
mov
icebp
xor
jp
pop
test
je
add
sub
mov
cmp
jne
vmread
inc
mov
pop
inc
push
jne
or
adc
add
test
mov
mov
inc
ret
xchg
jp
pop
popf
test
jl
imul
ja
add
sbbb
test
dec
and
jge
or
or
sub
add
and
lock
loopne
negb
cmp
add
mov
pop
sub
sub
xchg
hlt
fs
or
callw
int3
xchg
hlt
ret
push
popa
sub
dec
in
sub
add
rcll
mov
inc
push
in
cmp
sub
inc
mov
dec
adc
ret
push
push
push
jo
hlt
dec
lret
popa
xchg
movsl
inc
or
loopne
mov
push
fwait
cmc
jmp
pop
mov
jae
inc
dec
ret
push
hlt
mov
test
cwtl
cmpsl
dec
or
inc
sbbb
sbb
pop
inc
add
clc
mov
adc
inc
clc
push
pusha
and
std
add
pusha
pop
cmpsl
adc
push
das
pop
inc
dec
dec
pop
mov
mov
or
nop
movb
xorb
jl
add
add
lock
addb
push
pop
popf
xchg
repnz
clc
dec
cmp
cltd
cs
fsubr
mov
sbb
int
mov
mov
popa
xchg
fildll
pusha
pop
repz
lret
mov
push
push
or
add
jo
syscall
jb
cltd
jmp
into
push
cmp
cs
cmpsl
cli
sbbb
mov
aam
pop
clc
fldl
add
push
adc
dec
cmp
jb
adc
and
or
sbbl
dec
jmp
adc
pop
mov
jmp
adc
ja
test
shll
push
and
ret
packssdw
outsl
adc
mov
sti
aad
pop
pop
inc
inc
andb
inc
and
jbe
iret
pushf
or
fildl
popa
fstpl
lea
adc
add
lret
or
adc
sarl
rolb
inc
dec
sub
sbb
outsl
pop
lods
pop
aaa
jmp
sub
clc
xchg
xor
and
rolb
cmp
shlb
and
or
add
pop
dec
movb
leave
pop
pop
in
xor
pushf
cmpsl
add
outsl
test
add
push
push
insb
out
cld
dec
inc
into
mov
addr16
leave
imul
mov
dec
test
dec
fiadds
mov
fwait
dec
jae
jb
and
leave
lea
pushf
stc
pop
add
mov
push
adc
push
test
mov
fisttpl
jle
sub
add
outsl
and
fs
loopne
inc
popf
adc
scas
push
pop
mov
adc
lret
addr16
mov
fsubs
pop
dec
push
cmp
push
sbb
stc
stos
inc
cli
fidivrl
push
add
sub
cmp
enter
mov
push
test
cltd
pop
add
leave
inc
cmp
lret
or
and
sarb
mov
iret
adc
iret
sahf
sahf
in
ds
xchg
or
xchg
lahf
inc
sbb
xchg
adc
xor
push
test
iret
inc
add
add
cmp
pusha
mov
mov
cmp
cs
mov
or
int3
sar
mov
push
movsl
or
mov
aad
xor
loopne
adc
fs
ja
and
fwait
insb
stc
mov
lock
sbb
sub
rolb
or
fidivs
sbb
sarb
add
mov
inc
pop
sbb
je
mov
into
mov
adc
sahf
rcr
jo
cwtl
inc
jl
sbb
inc
pop
cmp
iret
push
arpl
xchg
inc
mov
and
sbb
repnz
pop
movsb
add
int3
shll
addb
ja
arpl
pop
push
add
movq
sub
push
inc
sbb
xchg
mov
cmpl
int
sub
test
or
adc
mov
imul
pop
lock
nop
adc
sub
dec
addb
inc
jmp
and
inc
mov
test
movb
aas
mov
iret
and
add
movsl
jo
das
jne
lock
pusha
loope
sub
xor
outsl
movsl
mov
out
or
sarb
or
mov
inc
pop
or
movsl
sub
sbb
test
dec
add
loopne
jg
mov
cmp
pop
fbstp
popf
rolb
or
or
mov
sbb
in
addl
or
mov
mov
dec
and
dec
repnz
jg
mov
inc
dec
sbb
adc
cvtps2pd
jmp
inc
movsl
or
fisubs
pushf
cli
movsb
xchg
test
add
loop
bnd
call
mov
in
mov
push
sub
mov
push
xor
dec
jo
movsb
pop
scas
mov
cmp
jbe
push
push
outsb
cmp
pusha
mov
decb
and
cld
lods
shl
adc
pop
mov
ljmp
add
or
outsl
ret
sbb
dec
cmp
mov
das
inc
push
push
push
dec
dec
out
out
inc
mov
pop
or
icebp
fildll
cmpl
cmpsb
jmp
outsl
mov
or
sub
adc
sbb
pushf
pop
ss
adc
or
sbb
cmp
jne
insl
adc
and
jmp
or
int3
rorb
add
push
rorl
add
shr
jo
inc
out
jle
js
dec
push
les
or
xor
loopne
jmp
addl
sbb
xchg
or
imul
and
hlt
mov
aad
aad
xchg
pop
rorb
inc
xlat
nop
push
adc
jne
mov
add
mov
inc
push
jle
sbbl
frstor
lock
jmp
xor
and
hlt
rolb
sbb
popaw
adc
ja
mov
lahf
inc
das
out
cmp
cmpsb
ja
mov
ret
xor
bound
push
jmp
adc
cwtl
push
xchg
fdivl
adc
adc
insb
fdivs
or
arpl
inc
dec
insb
fs
or
mov
dec
jbe
daa
or
push
push
inc
pop
fs
and
inc
outsb
je
enter
jno
and
push
push
pusha
enter
inc
sar
outsb
cmova
jae
mov
or
and
mov
xor
dec
jno
dec
in
std
imul
popa
jo
jns
enter
dec
or
mov
stc
iret
dec
rcll
cmp
inc
jne
insb
mov
pop
enter
inc
jp
jb
dec
jbe
push
add
arpl
mov
push
es
je
ja
pop
xchg
or
pop
mov
into
inc
data16
or
add
adc
mov
mov
fs
or
jae
pop
push
cltd
sub
cli
jae
push
popa
mov
xchg
sub
pop
or
inc
popa
jb
dec
jb
lcall
in
mov
out
push
cs
and
pop
lcall
sbb
pop
push
push
popa
jo
sbb
inc
inc
or
xchg
xor
bound
iret
push
movsb
je
daa
shrl
jae
mov
jb
ja
pushw
ret
in
lods
test
push
and
es
jns
call
cmp
lods
popa
pushl
xor
inc
xchg
pop
fistl
das
inc
imul
mov
push
sbb
shl
andl
sbb
outsb
popa
mov
gs
scas
add
mov
xlat
out
xor
push
xchg
in
lahf
adc
out
andb
xlat
sbb
jge
cmp
insl
xor
ret
cmp
lahf
or
mov
sbbb
je
cmp
mov
sbb
jno
mov
insl
shrb
pop
fists
push
fisttps
popa
imul
or
scas
mov
push
mov
adc
imul
in
cwtl
cmpsb
or
adc
les
mov
and
mov
adc
pop
inc
mov
test
pusha
aaa
iret
adc
add
lahf
addr16
mov
pop
dec
imul
adc
push
rol
push
xchg
inc
pop
adc
stc
call
xchg
adc
cmp
loopne
jb
outsl
imul
jg
xor
add
adc
cvttps2pi
inc
repnz
sub
ja
pop
add
outsl
unpcklps
lods
and
arpl
pop
andl
fisttps
aas
sbb
pop
pop
sub
jb
test
inc
stos
inc
or
cwtl
jo
adc
outsb
les
out
inc
ret
cmp
sub
dec
xorb
jl
inc
aam
jae
stc
push
mov
out
inc
outsl
rcrl
and
jl
push
adc
loopne
dec
arpl
or
outsb
adc
gs
mov
imul
lret
pusha
sub
cmp
getsec
cmpsl
adc
pop
nop
inc
add
jp
call
or
mov
testb
aaa
xor
pop
daa
push
loop
rorl
mov
in
push
dec
jae
sub
out
shll
inc
orb
cmpl
xor
cmp
xor
mov
sub
push
lods
sbb
add
es
das
lock
repnz
rcpps
imul
mov
jne
inc
jbe
inc
imul
inc
int3
jns
gs
push
rcrl
addr16
sub
xchg
jae
push
test
aam
and
imul
scas
into
lahf
inc
dec
mov
xor
cmp
inc
imul
push
mov
pop
jle
mov
pop
pop
icebp
inc
mov
idivl
js
nop
loope
push
cs
mov
lret
aas
in
out
mov
cmove
add
inc
push
out
in
inc
adcl
adc
xchg
xlat
inc
lcall
adc
jmp
inc
arpl
pop
mov
pop
sbb
mov
das
add
fbld
or
and
in
pop
add
nop
fldt
cmovne
inc
mov
cmp
push
arpl
and
push
movups
xchg
pop
push
adc
and
push
jb
adc
cmpsl
stos
push
adc
or
adc
sbb
insb
xlat
inc
adc
rcrl
das
in
or
pusha
sbb
push
pop
xorb
inc
inc
sbb
mov
sbb
xor
lock
jb
loope
inc
inc
add
dec
sbb
jo
sbb
rcrl
inc
stos
fs
enter
add
and
jecxz
push
jb
fs
pop
push
leave
add
jb
pop
and
leave
push
and
adc
pop
and
sub
and
and
jl
xchg
jns
loopne
sub
and
or
nop
or
mov
mov
adc
inc
pop
cmpl
inc
xlat
shrb
mov
lock
push
jb
testl
sbb
xchg
add
daa
mov
out
lcall
pop
repnz
add
dec
lods
mov
mov
pop
test
sti
inc
lock
dec
jmp
or
add
movsb
sbb
inc
lcall
adc
fcomps
sub
mov
sub
adc
dec
scas
push
and
mov
push
pop
into
int3
inc
xchg
adc
or
sbb
shll
nop
punpckhdq
outsb
sbb
sbb
mov
mov
jmp
movsl
lods
loope
call
pop
popa
testl
jbe
jl
add
inc
rcll
adc
mov
repz
push
cmp
jg
jnp
adc
aaa
rorb
idivb
xchg
jb
sub
push
clc
mov
fdivrp
push
mov
sub
fwait
cmp
pop
test
je
ret
cld
and
cmp
jle
mov
push
add
dec
xor
jmp
frstor
jle
xchg
pop
and
mov
add
add
clc
pop
or
jge
xor
xor
mov
dec
sbb
push
or
mov
sub
rclb
push
lahf
inc
fdivrs
pop
fmull
pop
cmp
add
add
dec
mov
or
dec
sub
xchg
push
adc
or
xchg
adc
push
adc
frstor
nop
mov
adc
fisubl
rclb
adc
sub
loope
or
or
nop
lock
pop
popaw
mov
jns
jmp
test
std
jb
les
lcall
push
inc
pushf
adc
fldenv
add
mov
adc
outsl
or
cmp
sysexit
jmp
jnp
pusha
aad
sar
sbb
xorl
push
push
jnp
inc
sbb
jne
pusha
jno
jle
push
and
addb
or
mov
nop
and
pop
mov
mov
lock
dec
cmpb
mov
aaa
cmpb
daa
add
mov
add
data16
sti
outsb
and
and
add
sbb
xor
ds
mov
sbb
in
fstpt
rcrb
sub
push
or
notl
call
push
cmpsl
jmp
push
xor
xchg
xlat
jo
cmp
sub
call
adc
test
cmc
sub
cmp
mov
shlb
enter
test
rolb
jb
cs
stos
arpl
daa
pop
lods
lods
lods
imul
inc
ret
pop
mov
aaa
sbb
push
adc
cmp
push
dec
rorw
inc
mov
sub
dec
pop
or
popf
add
add
adc
pop
sbbb
rcrl
cmp
cmp
add
mov
inc
or
xchg
jg
add
jg
cmpb
lock
testl
dec
jl
mov
lds
jmp
movsl
inc
mov
cmp
sbb
add
jne
xor
shll
adc
inc
jmp
daa
testb
popa
and
es
xor
mov
aad
pop
imul
push
push
dec
lret
pop
xor
test
mov
in
push
movsl
cwtl
xlat
xor
test
mov
shrb
lods
or
sub
shlb
dec
inc
jg
jne
rcrb
jns
sub
add
add
mov
mov
adc
aas
lret
push
xchg
pop
mov
out
lods
sbb
mov
in
mov
and
test
jle
std
sbb
push
dec
es
push
pop
das
add
cmp
cmpsb
add
fmul
divl
xor
xchg
aam
dec
xor
inc
cmpb
std
cmpsb
aad
inc
xor
ds
clc
jp
jo
and
cld
mov
xchg
mov
xchg
stos
js
push
inc
or
or
aam
enter
xor
mov
push
adc
cmp
popa
push
pop
jp
jg
enter
lock
movsb
or
cwtl
lock
loop
inc
push
adc
fdivl
cld
push
pusha
in
dec
jo
call
or
insb
repz
outsb
mov
movsb
ficomps
orb
je
mov
out
push
movsb
je
mov
add
jno
or
sub
mov
xor
jae
push
pushf
jo
inc
pop
mov
xchg
inc
lock
sub
aas
sbb
in
mov
or
rorb
lea
cs
inc
pop
pop
add
cmp
pop
push
fnstsw
pop
nop
inc
xchg
imul
ret
lods
inc
mov
push
mov
add
repz
je
dec
pop
inc
add
inc
pushf
out
imul
push
sub
mov
sbb
aad
add
addr16
mov
cmpb
jp
xchg
xor
sar
loope,pn
jmp
or
popa
inc
cs
jo
ja
adc
adc
cmp
fsts
cmp
jle
jo
rcrl
ljmp
push
push
push
mov
arpl
cmp
rorb
or
cmp
xor
sbb
jg
es
jmp
das
addl
add
or
push
nop
add
fbstp
out
rolb
sub
pop
add
stos
addb
pusha
enter
dec
adc
test
pop
xor
cmpl
xchg
fsubrs
and
lods
subb
push
hlt
pop
fistps
inc
push
dec
adc
mov
sub
jmp
dec
add
and
dec
push
lcall
pop
pop
test
mov
mov
lea
mov
inc
inc
cmp
jne
sar
lcall
dec
adc
mov
cmp
xchg
xor
cmp
outsb
jl
jbe
add
inc
add
jg
fnsave
inc
pop
sub
inc
add
cmp
jno
or
nop
inc
es
fs
inc
int3
shrb
hlt
push
xor
inc
push
add
scas
cmp
dec
inc
fcomps
inc
nop
sub
in
inc
inc
dec
inc
movsb
xchg
inc
add
pop
dec
dec
inc
add
dec
inc
dec
dec
inc
mov
ss
add
inc
in
pushw
xor
push
inc
insb
inc
add
xchg
push
mov
inc
add
jo
mov
pop
in
js
pushf
xchg
push
jo
push
and
cmp
andb
xchg
cmp
adcb
es
and
or
dec
test
addr16
ret
pusha
sbb
sub
add
xorb
cmp
lods
outsb
add
add
call
movl
pop
mov
mov
ret
enter
jle
inc
push
loop
cmp
test
stos
inc
addr16
in
pop
icebp
mov
mov
mov
pop
jo
adc
inc
ds
int3
mov
mov
sbb
mov
out
mov
imul
push
jl
xor
inc
insl
std
xor
pop
pusha
mov
xlat
jne
inc
pop
loopne
loope
ror
inc
push
push
inc
pand
addr16
repnz
fadd
scas
xor
sarl
adc
sbb
andb
xchg
and
xchg
mov
sbb
add
test
adc
inc
jp
pop
pop
add
xchg
adc
mov
dec
mov
std
jo
loopne
sar
cltd
mov
xchg
jle
mov
mov
test
push
fisttps
xor
mov
jae
cmp
add
fcoml
xor
mov
gs
inc
fldt
mov
or
inc
inc
inc
jl
dec
and
cwtl
loop
lcall
xor
inc
xchg
es
mov
or
and
jecxz
dec
notl
scas
pushf
nop
fdivrl
mov
cli
cmpsl
jae
xlat
xor
pop
sbb
mov
test
inc
cwtl
or
and
sub
es
insl
lcall
imul
out
dec
repz
lods
mov
mov
dec
xor
mov
mov
fcmovb
adc
clc
lcall
aam
fsub
xchg
mov
fs
inc
pop
sarb
mov
cli
inc
mov
loopne
dec
sbbl
test
or
cs
or
outsl
add
xchg
and
test
cmpsl
cmp
outsl
cmpsl
dec
dec
rclb
aaa
inc
mov
idivl
mov
push
into
jns
pop
cmp
sub
dec
outsb
test
inc
insb
insb
xchg
or
outsl
pop
or
and
fiaddl
fidivl
rorb
jb
xchg
nop
nop
add
adc
lcall
push
stc
sub
inc
or
inc
or
hlt
out
xchg
dec
add
cmp
push
les
je
add
ss
test
cmovnp
xor
pop
push
rclb
dec
jbe
into
sahf
mov
cmp
mov
sub
orb
or
inc
popa
add
add
cwtl
cwtl
add
or
xchg
scas
shr
fadds
jne
push
pop
in
cmp
test
xor
fdivl
mov
fstpt
sub
rorl
jb
cmp
ja
inc
bt
xchg
lock
stc
jae
cmp
dec
shr
mov
call
rorb
sbb
adc
sub
nop
sub
cltd
cmp
add
pop
loop
sub
lahf
and
bound
push
fadds
jle
or
jbe
clc
subl
lcall
es
pop
dec
aam
lahf
mov
mov
or
xchg
lods
add
dec
in
andb
mov
add
add
inc
outsb
lds
push
test
or
test
adc
push
push
lods
es
mov
add
and
sbb
xorb
mov
jne
push
xchg
outsb
add
cwtl
jne
xor
clc
fisttps
pop
dec
fmuls
insl
rolb
fdivrs
fidivrs
cltd
sbbb
dec
scas
rolb
popf
add
test
aam
and
shrb
jl
cmp
mov
sar
ror
fildl
icebp
sub
fdivrs
adc
dec
lea
xor
adc
enter
movsb
aas
xlat
add
mov
test
jmp
cmp
jmp
mov
fidivrl
pop
mov
inc
loopne
xlat
push
mov
aaa
je
xchg
rclb
adc
sub
and
mov
sub
xchg
in
call
jmp
pop
mov
cmp
sbb
popf
mov
mov
rcll
insb
imul
xchg
cmp
push
xchg
jne
mov
xor
push
je
mov
dec
pop
mov
jne
les
daa
loopne
add
dec
sbb
push
les
inc
dec
push
push
outsb
lods
push
inc
inc
push
adcl
jne
ret
adc
add
mov
lea
add
insl
repz
sbb
faddl
mov
jae
or
les
dec
sbb
mov
pop
ja
pop
ljmp
or
push
mov
mov
aas
mov
adc
les
add
dec
lods
jbe
mov
ret
and
add
cmp
dec
pop
lret
or
add
into
enter
lcall
mov
xchg
pshufw
mov
push
scas
pushf
js
lock
mov
sub
adc
loopne
mov
and
iret
lods
sbb
dec
push
bound
push
sub
icebp
jge
addl
or
add
push
push
jmp
push
insb
mov
rolb
out
push
dec
pop
rol
dec
incb
and
sbb
in
sbb
xchg
and
addr16
divl
xor
mov
mov
ret
add
and
insl
mov
lea
mov
add
cld
xlat
pusha
or
jns
dec
imul
dec
sub
mov
ljmp
jge
jge
xchg
jp
test
cmpb
xor
xor
and
push
jns
ret
adc
fimuls
dec
jmp
sub
sbb
out
xlat
adc
dec
add
into
xchg
outsb
jo
inc
lea
jo
pusha
or
and
dec
cmpsl
xchg
sub
clc
clc
dec
mov
add
dec
adc
xchg
ret
sbb
push
add
push
xchg
imul
shlb
xchg
daa
add
les
loopne
pushf
jbe
mov
fsubrl
dec
test
pop
inc
or
pop
and
ret
jecxz
add
es
cmp
sub
mov
cmpsl
add
cmpsl
inc
popf
add
fildl
xchg
push
movsl
jmp
das
push
lds
xchg
pop
sbb
sahf
cltd
shrb
test
adc
xor
add
inc
push
xor
pop
inc
push
movsb
aaa
ret
sbb
and
inc
xchg
lcall
daa
push
or
push
add
call
add
pop
je
mov
mov
cmc
stos
outsb
pop
add
push
jp
sarb
test
add
pop
jbe
lea
push
xchg
test
aaa
test
push
clc
adc
dec
or
je
pop
and
mov
add
fsts
push
xor
clc
int3
int3
faddl
scas
sub
push
add
xor
cmp
hlt
clc
xor
in
inc
mov
and
dec
mov
adc
pop
jp
loope
add
mov
adc
int
add
mov
setle
fisttpl
rorb
clc
add
cld
or
dec
ja
or
mov
jne
push
cld
mov
pop
and
cld
test
adc
pusha
dec
pusha
or
xchg
and
enter
and
or
insl
add
inc
mulb
and
cmc
jmp
jae
sarl
mov
mov
and
insb
inc
out
test
orl
ds
shlb
mov
sbb
pop
mov
or
jae
xor
xor
test
xchg
fisubl
dec
faddl
aad
imul
mov
lret
mov
add
add
dec
dec
xor
or
fnsave
sbb
pop
pop
movsb
popa
inc
xchg
rorl
mov
out
adc
outsb
fisttps
push
or
push
xchg
add
cmp
xor
and
push
movsl
loope
adc
mov
or
and
xor
cs
fstpt
loopne
aam
dec
hlt
inc
adc
pusha
in
jge
push
clc
sbb
inc
push
jecxz
mov
jmp
push
or
xlat
call
in
popl
adc
test
int
xor
ficoms
lock
stos
or
hlt
cli
mov
sbb
scas
sbb
aaa
cltd
or
fadds
loope
pop
shl
test
xchg
xchg
int3
enter
popf
int
pop
pop
rcr
inc
mov
lea
pop
and
scas
push
fucomip
imul
jns
xlat
inc
or
mov
xor
mov
add
rol
jbe
popa
not
mov
bound
xorl
push
in
jp
mov
je
rcrb
or
xor
adc
pop
sub
es
push
push
add
icebp
and
xor
pop
pop
xchg
adc
push
add
in
addr16
lods
stos
sbb
mov
add
repz
sbb
movb
xor
sbb
jg
ret
and
and
popa
arpl
mov
jge
sub
js
xor
sbb
or
addr16
push
add
imul
rorl
push
je
and
fdivs
daa
xor
loopne
fcoms
outsl
sub
test
sub
pushf
and
and
repnz
sbb
adc
inc
jl
repnz
lock
cmp
fmul
ja
push
sub
xor
sbb
push
push
mov
clc
mov
inc
fcomps
mov
push
out
inc
or
sub
popa
shrl
andb
pop
cmp
dec
sbbl
jge
clts
in
stc
call
inc
aam
les
in
push
add
or
sub
cmpsb
sbb
inc
repnz
aas
pop
hlt
inc
add
add
enter
inc
mov
out
cmp
testl
push
xor
xorl
andl
inc
dec
cld
sbb
outsb
jae
mov
shlb
cmp
jae
in
xchg
adc
sahf
pusha
icebp
dec
loopne
pusha
adc
dec
sbb
adc
adc
push
neg
sbb
add
sbb
dec
sbb
push
clc
adc
push
fmull
mov
shrb
xchg
imul
dec
sbb
adc
adc
xchg
adc
fldl
push
shlb
mov
dec
push
mov
repnz
lock
adc
xchg
out
add
add
hlt
sub
jb
clc
hlt
jne
lret
push
inc
cld
cld
andl
pop
push
movsb
popf
jb
sbb
add
sub
dec
dec
sbb
or
cmp
pop
cmp
mov
mov
daa
push
sub
pop
dec
test
fwait
cmp
in
push
das
push
and
mov
xchg
pop
mov
ret
pop
mov
sub
sbb
js
pop
outsl
jae
daa
scas
shrb
mov
push
fists
mov
sub
enter
adc
adc
xorb
cs
ja
dec
outsb
jne
outsb
cmpsb
adc
or
imul
mov
insl
bound
pop
or
or
mov
stc
outsb
jae
sahf
jle
adc
lret
add
cmp
mov
cli
mov
push
bound
insb
xchg
mov
fcmovb
cmp
adc
notl
cld
popa
mov
and
movl
add
fsubs
mov
jae
mov
xor
pop
testb
sti
push
sub
sbb
jbe
fs
adc
mov
dec
sub
lretw
mov
pusha
outsb
mov
xor
adc
inc
in
dec
leave
cmp
and
add
fildl
pop
arpl
test
adc
adc
ja
inc
das
enter
or
stos
xor
popa
das
or
or
jne
icebp
fs
ds
in
pop
ss
rorb
int
fs
enterw
sbb
in
add
in
inc
push
in
in
and
sub
ds
sbb
sahf
testl
jbe
push
jns
jns
pushf
mov
push
lock
push
sbb
pop
or
loopne
pmullw
mov
outsb
xchg
cmp
pop
stos
sarl
push
cs
lods
daa
pop
loope
jne
sub
push
test
inc
xchg
lock
push
mov
enter
pop
push
test
xor
push
outsb
insb
pop
bound
pop
inc
idivl
or
insl
xor
pop
pop
aas
std
xor
mov
aaa
repnz
test
movsb
pusha
rcrb
jo
stos
int3
cmpsl
stc
push
adc
add
pop
cmp
and
in
loopne
addr16
sbb
out
or
xor
xchg
rcl
dec
test
xchg
lock
imul
pop
cvtdq2ps
ds
imul
xchg
imul
in
stc
je
cmp
insb
add
dec
or
jne
push
movsb
pusha
adc
mov
popa
pop
scas
add
mov
inc
dec
add
mov
decl
push
sbb
or
inc
cmp
or
add
fcoml
mov
inc
xor
push
rolb
addb
cmpsl
inc
mov
push
fs
add
or
aam
sbbb
aas
rol
test
dec
pop
or
scas
mov
pop
insb
gs
bound
and
in
pop
add
dec
dec
mov
loop
rcrl
mov
dec
or
stc
sbb
cmp
xchg
and
lock
mov
ss
fsubrl
adc
js
mov
lea
inc
lock
out
cmp
mov
mov
adc
mov
rclb
add
adc
cwtl
in
cmp
push
add
and
in
xchg
mov
xchg
or
jmp
add
cmp
pop
pop
jne
iret
adc
inc
loopne
inc
fnstenv
adc
inc
mov
or
ds
out
jp
mov
cmp
jl
cmc
repnz
daa
sbb
push
shlb
je
rcll
fisttpll
test
add
push
sbb
and
or
es
mov
cld
div
adcb
pusha
jle
add
or
and
pushf
cmpsl
or
and
push
cmp
scas
mov
dec
and
rolb
adc
dec
pop
insb
add
movsl
xlat
sub
xchg
push
jo
add
pop
fcmovnb
jl
add
inc
shll
inc
xlat
sub
enter
pop
mov
inc
ja
adc
dec
or
inc
inc
pop
addl
test
insl
ret
mov
nop
pop
sbb
push
gs
clc
sbb
push
jo
adc
popa
push
adc
jg
push
lret
add
dec
shrl
ret
jge
xor
je
imul
in
xchg
sbb
ljmp
and
outsb
imul
jns
sub
and
mov
sbb
jo
mov
mov
and
mov
arpl
push
sbb
int
inc
sbb
push
push
nop
inc
outsb
inc
add
cmp
call
test
mov
and
dec
in
push
test
or
push
nop
pop
pop
and
movsb
sbb
or
mov
and
pop
and
add
popa
mov
push
and
and
cwtl
add
or
fistps
and
cmp
push
imul
dec
jecxz
xor
xor
or
xor
push
leave
cs
adc
inc
jo
sbb
inc
paddb
out
push
lcall
ret
adc
xor
jle
out
mov
xlat
rolb
pop
jle
jmp
push
add
sub
and
xor
xor
ss
cmp
xor
mov
mov
dec
dec
dec
dec
dec
dec
dec
and
mov
push
push
push
push
push
pop
pop
pop
or
inc
mov
ss
mov
daa
add
xor
addb
sub
jo
xlat
popa
xor
or
xor
mov
cmovae
xchg
or
add
xor
and
and
inc
std
cmp
xlat
aam
data16
adc
add
xor
mov
jns
xor
out
add
jl
dec
sub
loopne
daa
inc
pop
pop
and
xchg
push
pop
and
push
xor
sub
add
in
and
xlat
test
mov
incb
clc
sub
lcall
je
push
sarb
pop
jnp
sti
push
or
orb
adc
inc
jge
shrl
and
ss
or
sarb
mov
movsb
imul
cmpsb
or
dec
cmp
scas
cmp
xor
or
nop
fld
add
xor
jl
or
add
sub
dec
xor
pop
xor
inc
jbe
fdivrs
dec
pusha
sub
call
xor
jno
and
mov
mov
nop
dec
xchg
rcrb
mov
or
or
add
and
hlt
mov
clc
sbb
adc
pop
xchg
jnp
rolb
into
and
mov
adc
inc
mov
cmp
and
sub
jns
adc
xor
mov
adc
adc
sbbb
into
pop
es
test
jo
addr16
les
mov
les
imul
sub
add
sub
and
sbb
stos
add
jl
test
mov
test
fsubl
sub
loopne,pt
orl
xchg
out
mov
int
hlt
jl
xchg
xor
and
out
and
or
imul
pmulhuw
mov
and
and
mov
out
or
loopne
aaa
cmp
sarb
jmp
inc
call
jne
or
sub
and
mov
inc
mov
aaa
pop
sbb
shlb
loope
addb
cmp
mov
and
pop
and
push
adc
cwtl
jmp
aas
add
mov
dec
mov
stos
test
sbb
cmp
jae
out
pushl
sbb
pushl
fdivs
mov
in
mov
add
jne
arpl
adc
pop
mov
out
sbb
mov
pop
pop
xorl
imulb
jae
xor
xor
pop
pusha
ljmp
sbb
or
and
add
cmp
add
test
cmp
xchg
add
jle
aaa
aam
in
fisubrl
cmp
push
mov
rol
xlat
cmp
enter
jmp
insb
movsl
mov
xor
dec
aaa
inc
cmp
lcall
cmp
in
in
fists
in
loop
sub
stc
jbe
cmpsl
fisttpll
adc
in
add
inc
add
loope
out
adc
test
sbb
push
sbb
and
adc
pop
fmuls
jecxz
popf
or
mov
xor
inc
xor
add
jmp
rorb
pusha
mov
fstpl
cmp
xor
jb
inc
push
pop
adc
pop
sbb
adc
inc
push
nop
popl
jl
outsb
mov
cmpb
in
fisubs
rcrb
push
aas
cmp
fistps
scas
adc
push
dec
add
inc
push
inc
fwait
insl
pushf
addb
js
push
cmp
movsl
xchg
addb
aaa
add
addr16
and
arpl
xchg
mov
jle
rclb
xchg
js
imul
cwtl
cmp
or
adc
or
mov
pop
fnsave
xor
in
mov
ja
cmpsb
dec
mov
repz
mov
aaa
cmp
adc
cmp
jbe
add
xchg
fadd
add
or
inc
dec
in
cmp
jg
adc
jp
nop
fwait
adc
or
mov
nop
addb
out
inc
add
cmp
cmp
aas
test
push
movl
sbb
mov
sub
mov
cmp
sbb
inc
or
pop
sar
jbe
cmpsl
sbb
sbb
insb
add
lock
jmp
and
cmp
pop
adc
shlb
jle
fdivrl
dec
enter
adc
rorb
sub
inc
push
mov
sub
dec
and
add
dec
mov
popa
movsb
xchg
xor
or
shl
lds
xchg
inc
cmpb
add
cmpsl
lock
mov
clc
mov
pop
pop
adc
dec
pop
or
mov
xor
or
jnp
js
nop
lcall
lea
mov
loopne
pusha
lods
inc
push
jae
es
popa
pop
sbb
data16
icebp
adc
or
pop
adc
out
in
fiaddl
add
movsb
mov
sub
movsl
mov
mov
mov
dec
or
fidivl
or
xchg
inc
into
ss
or
je
repnz
sub
pop
ss
mov
cmpsb
inc
test
pop
jne
or
sbb
cmpsl
xor
les
mov
pop
inc
iret
insb
test
ljmp
or
dec
or
push
testl
jns
push
rcll
pop
jle
fmulp
fistpl
inc
cmp
xor
in
xor
jb
rol
and
and
aam
cmpsb
ret
sbb
cwtl
cmp
dec
push
pop
dec
xchg
sbb
sbb
pop
or
test
adc
shll
std
cmp
subl
aaa
insl
mov
mov
or
cmpsl
std
in
adc
in
push
or
push
in
jmp
or
mov
lcall
inc
mov
das
adc
lds
fildll
fisttps
jne
sbb
jbe
mov
sbb
ja
adc
mov
jo
and
unpcklps
mov
sahf
flds
push
nop
adc
pop
fwait
rclb
dec
sti
fidivrl
shrb
dec
popa
adc
addb
add
leave
and
mov
movb
xor
cmpb
xor
lods
sub
popa
mov
ret
shlb
inc
push
lods
out
insb
lahf
mov
or
xchg
shll
push
sub
outsl
notb
cmp
sbb
mov
adc
xchg
mov
and
mov
imul
or
adc
movb
jmp
inc
icebp
xchg
insb
out
pop
and
loop
and
add
or
lret
push
sti
decb
inc
shrb
ljmp
and
int3
mov
dec
movsb
xor
jo
addr16
sbb
cmpsb
mov
jns
xor
test
or
cmpsb
push
aam
pop
pop
pop
dec
hlt
out
adc
sub
jge
cmp
aad
cmp
jae
mov
sbb
xor
sbb
lods
ret
pop
add
cmp
sub
or
or
adc
ja
add
or
or
xchg
andl
data16
adc
xchg
aas
add
inc
push
push
push
add
mov
ljmp
or
sub
dec
in
orb
inc
xor
clc
cwtl
loope,pn
sarb
divb
cmpsb
scas
mov
add
push
and
add
add
sbb
adcl
repnz
jae
cld
cld
mov
imull
pushl
outsb
mov
addl
addl
adc
call
mov
push
les
ret
or
hlt
cmpb
and
sarb
scas
or
fisubl
js
cmp
daa
orb
pushf
push
xor
cmp
xlat
adc
lret
inc
adc
es
mov
pop
mov
out
mov
sub
mov
sub
or
and
mov
dec
clc
adc
pop
stos
nop
fldenv
sub
xor
data16
sbb
dec
push
inc
icebp
out
inc
lods
movsb
push
cmpw
dec
xor
push
or
push
ja
pop
adcl
xor
mov
ret
nop
sub
pop
std
xor
add
ret
loope
dec
cltd
mov
push
and
sbb
cmp
cmp
cmp
mov
out
dec
inc
pop
orb
mov
adc
add
clc
sbb
cmp
dec
jno
jg
sbb
shll
or
cltd
sbb
stos
add
add
xor
xor
jo
std
adcb
popa
mov
je
pop
dec
add
inc
and
movl
mov
and
outsl
adc
sub
nop
scas
mov
cmp
dec
arpl
or
inc
je
mov
adc
sbb
repnz
add
adc
pop
push
mov
xlat
sub
xor
pushf
cmp
or
mov
sbb
mov
mov
inc
or
and
xor
imul
addr16
mov
mov
lea
jo
adc
or
pop
and
adc
mov
mov
pop
xorb
mov
xchg
aam
mov
out
add
add
sbb
pop
sub
dec
dec
or
or
mov
int3
push
repnz
mov
lea
jge
pop
int
jle
js
jbe
aam
jno
in
cmp
add
int
in
xor
jle
mov
mov
call
lea
cld
sub
in
mov
jo
imul
out
pop
jo
mov
loop
adc
add
pop
sub
add
xor
adc
movsb
xor
test
out
sti
and
fmuls
jmp
and
sub
lahf
rorb
jne
sbb
push
mov
jle
aam
movb
sarb
pop
pop
and
sahf
adc
dec
or
insb
pop
mov
push
mov
jo
mov
pop
xchg
pop
cmp
push
inc
jle
mov
push
outsl
aam
movl
xor
push
imul
push
aam
dec
or
lcall
push
dec
insl
adc
ds
outsb
ja
sbb
sbb
jnp
aam
jno
imul
fisubrl
fmull
mov
adc
popa
fwait
imul
pop
push
pop
repz
loopne
sub
jnp
dec
xor
stc
addl
dec
sub
insl
aad
dec
in
sub
jp
dec
add
push
adc
or
test
sbbl
test
cltd
movd
test
js
cmp
ss
sarb
cmpsl
mov
in
sub
xor
fstps
mov
insl
add
aaa
mov
mov
cs
dec
dec
mov
movsb
dec
dec
xchg
xchg
fcom
lock
add
das
adc
push
sbb
insl
xchg
cmp
push
lds
sub
and
pop
mov
cmpsb
jnp
sub
xor
sub
add
lds
mov
jmp
push
lret
sbb
or
xor
and
and
mov
dec
pop
push
dec
cltd
or
popf
fidivrl
sahf
add
insb
fisubs
enter
out
test
mov
jne
add
sbb
orl
sbb
mov
lea
push
jg
cmp
xor
enter
push
pop
mov
push
fsubs
inc
lock
jbe
xadd
jb
xchg
mov
adc
mov
push
sti
dec
mov
pop
and
inc
repz
push
and
add
push
fisubrl
mov
movsb
loop
mov
fistps
add
push
ds
and
sub
push
andl
fsubs
xchg
inc
rcl
sub
fcomps
adc
sub
add
add
inc
and
sysret
testl
jae
lods
sarb
dec
movl
pop
sub
loopne
psubq
bound
mov
inc
pop
and
inc
and
mov
jle
pop
push
in
inc
mov
adc
movsb
and
test
inc
popa
daa
jns
orl
adc
mov
jecxz
or
or
loopne
add
or
push
loop
and
dec
mov
push
test
xor
inc
shll
sti
adc
sbb
fsubr
xchg
or
popa
das
jmp
jne
sub
test
add
lock
divb
mov
inc
cltd
pop
inc
cmp
enter
xchg
xor
aas
dec
mov
push
jo
or
adc
rolb
lret
add
xor
add
jbe
or
add
adc
lock
adc
mov
repnz
xor
push
push
sbb
push
sub
push
sbb
adc
les
mov
mov
sub
or
or
jns
mov
cmp
push
cmpb
mov
and
shll
js
fcomps
orl
sub
xchg
jl,pn
push
in
fmuls
fsubr
and
test
pop
imul
data16
pop
push
push
inc
adc
add
test
std
fsubrs
xor
xorl
cmp
pop
add
dec
jg
clc
jg
cltd
inc
sbb
and
nop
fadds
lahf
mov
nop
fwait
rcll
push
or
and
jno
sub
gs
mov
inc
push
sub
pop
repnz
fsubrs
rcl
inc
aad
rcrb
out
dec
lret
push
adc
out
scas
dec
in
and
add
or
dec
cmc
fsubrs
push
and
mov
das
sub
pop
add
scas
xor
imul
mov
mov
test
dec
insl
into
fsubrl
mov
or
mov
mov
xchg
xor
cmc
imul
mov
or
pop
jnp
mov
test
inc
outsl
sbb
add
aas
leave
fadds
dec
add
or
pop
sbb
pand
push
je
sub
lcall
dec
pop
or
dec
or
or
or
add
pop
push
mov
ja
pusha
fcoms
gs
push
bound
lock
outsl
and
pop
mov
jne
jbe
pop
dec
adc
popa
and
movnti
jne
xchg
clc
mov
lock
clc
pop
test
stos
sub
inc
xchg
dec
lock
test
or
adc
mov
loopne
jno
outsl
and
inc
ret
sbb
mov
pop
cld
xor
push
mov
arpl
xchg
stos
test
or
sbb
push
cmp
pop
adc
push
nop
or
daa
call
sti
je
loope
addr16
xchg
cmp
jae
xchg
fsubr
out
sbb
clc
jmp
push
dec
mov
jne
mov
sbb
aad
inc
mov
addb
adc
sbb
push
adc
sbb
in
clc
dec
loopne
in
xchg
xchg
push
xor
xchg
pop
or
xchg
inc
mov
adc
in
lods
loopne
adc
loopne
call
fdiv
dec
fadds
loopne
jns
sbb
xchg
orb
leave
stos
xchg
dec
dec
shlb
mov
xchg
mov
mov
xor
adc
pop
lea
add
push
inc
jns
enter
dec
or
push
clc
ret
enter
incl
add
push
bound
and
or
and
les
data16
push
push
lock
adc
and
pop
das
and
add
imulb
dec
pop
ja
fiaddl
xchg
mov
adc
loop
mov
mov
mov
jae
jg
adc
or
and
jle
movsl
fcomps
stos
popa
mov
xor
mov
jge
es
add
or
sbb
add
mov
aaa
push
mov
lcall
insl
jle
popa
shlb
pop
pop
adc
cltd
es
in
call
cltd
inc
push
int
add
out
add
imul
pop
repz
add
pop
mov
push
sbbl
shll
dec
push
mov
pop
test
inc
and
mov
adc
out
and
or
jnp
imull
sbb
sbb
jmp
aas
adc
cmpl
xchg
mov
jg
out
and
mov
rol
push
incb
or
jmp
mov
dec
test
lods
mov
lea
aam
setne
sbb
mov
in
add
shrl
and
imul
fwait
adc
add
adc
movsb
mov
xchg
test
push
loopne
out
xchg
lret
loopne
jle
sbb
inc
xor
sbb
neg
pop
push
das
test
je
add
or
push
lock
addl
clc
insl
or
pop
or
cmp
fs
hlt
xchg
loopne
inc
mov
out
icebp
in
mov
stc
call
xchg
jecxz
add
loopne
cld
or
pop
inc
add
pop
test
jecxz
xor
mov
add
imul
xor
push
inc
enter
mov
cltd
bound
cld
dec
add
mov
jmp
out
dec
push
jb
rolb
xlat
fcomp
das
ss
xlat
xor
mov
addb
pop
es
adc
fs
push
mov
mul
lcall
ret
ds
pushf
inc
push
and
faddl
int3
loopnew
push
or
pop
int3
xchg
cmp
jb
sti
enter
hlt
fwait
adc
in
sbb
cmc
jo
inc
fdivrl
inc
loopne
pop
les
mov
in
scas
sbb
or
fcompl
cmp
in
aaa
rorb
add
pop
inc
pop
pop
fwait
cmp
add
out
xor
rcrb
add
push
call
dec
adc
or
nop
cmp
lret
andb
jns
cmp
pop
jae
add
xchg
stos
jno
fcomp
ljmp
push
lret
lock
push
pop
fldenv
or
sbb
mov
mov
cmp
xchg
sbb
push
stc
pop
out
gs
sbb
sti
jge
popa
xor
push
sub
ret
rorb
add
fstps
xchg
sbb
xor
and
shl
push
rorl
cs
sub
sub
leave
xchg
xor
pop
ja
adc
add
nop
jl
inc
outsb
dec
jecxz
sbb
int3
sub
xchg
sahf
ja
ret
ret
enter
subb
add
cmp
add
pop
add
fildl
pushf
adc
dec
adc
pop
inc
shl
mov
inc
ret
xchg
cmp
dec
push
dec
add
inc
push
mov
jnp
repnz
mov
cmp
inc
jmp
dec
cmovl
adc
jecxz
cmp
lock
xor
in
jle
lret
loop
cmp
xchg
pop
adc
cmp
or
roll
xchg
cmp
test
jo
or
es
add
or
mov
pop
out
pop
inc
push
cmp
fsubs
shlb
mov
repnz
scas
test
fidivl
cmpsl
cmp
jmp
inc
sub
and
rcll
cmpl
mov
lock
add
insl
es
lahf
cltd
sub
mov
adc
in
push
ret
les
adc
ds
add
or
ja
dec
add
mov
cmp
push
cs
jp
sbb
cltd
xor
xlat
jl
pop
sbb
nop
and
cwtl
pop
mov
push
jl
cmp
mov
outsb
imul
out
ds
inc
push
popl
xorb
xor
inc
jo
add
shll
adc
pop
out
les
dec
adc
add
ret
push
dec
or
inc
add
or
in
ret
loope
xor
dec
xor
dec
sub
scas
pusha
gs
mov
add
daa
mov
or
cwtl
out
and
and
push
pop
rcrl
in
out
xor
cmpsl
cmp
je
pop
cmp
lret
mov
lret
fs
cmp
push
xor
mov
fimuls
inc
inc
pop
daa
jle
sub
inc
jg
ss
arpl
enter
xchg
or
dec
pop
mov
call
in
test
fidivrl
inc
mov
jbe
and
push
dec
dec
adc
aas
addb
stos
cli
jbe
inc
pushf
mov
sahf
xchg
xchg
xor
js
or
and
dec
dec
sub
mov
out
jnp
push
push
or
push
fisubrs
inc
or
aam
popf
push
mov
jmp
add
cmp
add
ret
add
add
inc
sub
cmp
scas
and
cmpw
sub
jb
sarb
orl
test
xor
adc
push
mov
and
cli
scas
sbb
push
arpl
add
jo
fstpl
enter
xchg
pusha
add
lret
ds
adc
stos
xor
scas
sbb
cmpsb
jmp
adc
test
push
mov
mov
js
test
js
add
in
mov
adcb
lock
test
xchg
subb
sarl
test
mov
or
push
adc
xchg
insb
inc
or
imull
lods
jmp
fcmovb
or
out
outsb
subb
in
je
gs
inc
dec
adc
mov
push
dec
xchg
je
rcrl
loop
stc
inc
jmp
mov
inc
dec
inc
je
test
push
adc
ja
or
daa
mov
rorb
je
and
or
xchg
sarl
scas
xor
out
enter
push
imull
xor
stos
or
pop
mov
mov
pop
inc
sbb
add
or
jo
xlat
or
adc
xchg
adc
aaa
enter
das
int
xor
cmp
pop
data16
ss
pop
xchg
lods
xlat
mov
xlat
push
inc
lret
idivb
fistpll
push
cmp
cmp
test
dec
movsl
jnp
fcmovnb
test
xchg
dec
sbb
movsb
imul
xchg
mov
sbbl
loopne
int
daa
cli
jne
mov
imul
push
push
xor
sarb
mov
dec
adc
jb
inc
pop
mov
js
test
pop
subb
or
inc
jge
cld
arpl
inc
std
adc
add
xchg
test
iret
and
add
mov
xchg
or
adc
push
pusha
mov
xchg
pushf
cmpsb
pop
push
adc
cli
mov
push
jmp
jbe
xor
scas
enter
dec
dec
in
adc
ret
stc
leave
inc
jb
aas
and
xchg
pop
and
cmp
pop
leave
inc
jb
inc
inc
test
mov
push
jl
or
cmp
mov
imulb
add
daa
out
adc
pop
lcall
pop
push
push
clc
jmp
mov
icebp
xor
sbb
dec
sbb
jg
shlb
lret
outsl
test
movsl
or
dec
sub
push
cmp
pop
push
fsubr
push
push
mov
lea
push
js
lods
inc
mov
and
iret
cmpb
sbb
inc
dec
push
dec
pop
cmp
orl
out
mov
push
push
mov
add
lds
fistpll
xchg
inc
inc
jl
pop
pop
xor
sbbl
sbb
cld
mov
sbb
dec
ret
loopne
add
adc
or
in
fisttpll
inc
inc
sub
int
adc
pusha
sbb
lret
int
mov
xor
jle
xor
push
imul
xor
inc
mov
sub
sub
in
push
xor
ret
add
and
adc
dec
jne
movb
jg
jne
xor
cs
dec
js
test
in
and
lods
mov
imul
sbbb
or
add
add
addr16
test
lock
sbb
mov
fidivrl
pushl
push
xchg
ja
xchg
mov
mov
lock
pop
callw
pop
push
stos
adc
addl
es
pop
sub
pushf
loope
or
sbb
insl
mov
fistl
int3
jne
dec
aas
lock
shlb
add
mov
std
push
hlt
shlb
outsl
jnp
leave
inc
add
addb
or
clc
cmc
sbb
mov
mov
es
add
xor
jecxz
repnz
arpl
cmp
sub
sub
and
int3
pop
mov
loop
or
push
nop
add
add
cmp
rcl
and
pop
dec
xor
aaa
cmp
jmp
sbb
std
ljmp
add
scas
popa
loopne
pop
sbb
rolb
fdivs
push
out
ja
mov
pop
xchg
adcl
xor
int3
jne
xorps
arpl
movsb
imul
int3
push
cmp
mov
subl
cmc
ss
loopne
xor
cmp
jmp
xchg
mov
inc
sbb
adc
in
loope
sbb
jl
fwait
rolb
je
movsl
push
decl
loop
lahf
jbe
and
push
adc
sbb
mov
cmp
ret
xor
in
subb
adc
adc
lea
dec
ret
addl
rcll
push
fcoms
aad
dec
pop
xchg
jbe
mov
adc
pop
add
dec
and
cmpsb
rcrl
push
jo
rcrl
pop
fistl
rol
add
jp
pop
stos
add
or
pop
outsb
addr16
mov
lret
jne
push
xchg
adc
pop
push
sub
and
mov
sbb
mov
sub
ja
aaa
pop
push
jbe
fdivrp
push
xchg
rcrb
stos
pop
or
icebp
in
outsb
dec
dec
adc
imul
loope
scas
fdivrs
dec
or
sbb
lods
ficompl
pusha
adc
nop
dec
cmp
cmp
mov
mov
fmull
icebp
inc
ret
movb
xchg
add
add
aaa
mov
adc
add
in
cmp
cmpsl
sub
jl
inc
sarl
je
sbb
mov
push
inc
movb
jmp
mov
inc
inc
push
ret
inc
pop
or
sbb
cmpb
sub
mov
inc
fadds
daa
add
pop
jne
in
xchg
pop
add
xor
fadd
pop
jo
mov
mov
jg
dec
xchg
sbb
test
adc
dec
inc
jne
cmp
idivb
leave
push
cmp
or
and
mov
repz
xor
sbbl
pop
add
rcrb
in
adc
add
les
loopne
fisttps
dec
aaa
aam
mov
pop
jo
loopne
jmp
inc
je
movb
adc
stos
mov
insl
cld
clc
or
cmp
insb
loopne
mov
push
pop
adc
ret
nop
pop
mov
inc
cmp
push
adc
xor
dec
jns
sbb
and
ret
cmp
inc
stc
daa
js
xchg
jae
push
outsb
push
mov
sbb
push
movsb
inc
and
cmp
lcall
inc
call
test
test
ret
bound
or
lock
add
cmp
xchg
pop
hlt
adc
push
rcll
jb
in
mov
or
sahf
cmpsl
test
jecxz
nop
jmp
push
push
fbld
ss
pop
or
dec
inc
mov
add
mov
rcl
pop
out
rol
ret
ljmp
shlb
scas
outsb
or
and
and
xor
add
aaa
or
lock
fs
js
sub
inc
cmp
adc
int3
popa
daa
leave
out
mov
rorb
push
mov
dec
cmp
movb
mov
cltd
mov
xorl
mov
movsl
imul
addr16
push
push
adc
sbb
mov
enter
xorl
out
push
and
es
cmp
mov
test
push
xor
sbbl
cmp
mov
pop
xor
or
cld
sub
and
push
mov
imul
or
dec
or
xor
mov
pushf
rolb
dec
adc
fsubr
sbb
cmpb
in
pop
mov
jno
xchg
xorb
dec
lea
fldcw
push
push
adc
nop
lret
mov
xor
add
jb
hlt
das
addb
mov
push
imul
push
clc
push
js
add
mov
xchg
push
xor
add
sete
or
mov
pop
inc
add
cmp
jl
dec
loopne
cltd
les
push
pop
add
mov
inc
jmp
push
sub
xor
adc
imul
fnsave
ja
and
std
mov
and
adc
jae
jb
jo
mov
cmp
mov
gs
inc
ljmp
js
sbb
cmp
je
shlb
sbb
cltd
test
in
cld
xor
cmp
ss
popf
mov
adcw
clc
outsb
adc
or
je
orb
pop
repz
cmpsb
adc
pop
hlt
cmpsb
scas
imul
repnz
push
inc
dec
sarl
adc
add
pop
pop
or
add
add
dec
adc
jbe
push
xchg
das
test
movzwl
mov
push
cli
fistl
add
lcall
jne
incl
fs
jge
fcomp
or
lock
and
push
in
mov
dec
lock
popa
cs
jp
scas
into
into
mov
je
testb
fcoml
sub
add
push
sub
rclb
js
inc
inc
add
add
push
pop
jne
xor
pusha
add
push
call
in
add
fisttpl
fs
mov
adc
in
bound
push
iret
dec
push
mov
in
jae
sub
mov
push
cli
sub
cmp
int
enter
push
add
adc
jecxz
sbb
test
fmuls
fsubrs
add
repz
xor
or
fistl
push
mov
and
lcall
fwait
js
jnp
or
mov
push
ret
jbe
mov
mov
lea
xchg
push
sub
loope
js
mov
mov
stos
adc
mov
mov
cli
ss
je
xor
dec
shlb
and
lcall
mov
mov
ret
mov
add
add
push
and
mov
cmpsl
fisttpll
adc
imul
cmpsl
add
imul
call
xorb
inc
lret
lret
inc
or
adc
and
rcrb
lock
add
movb
inc
push
add
inc
dec
mov
and
dec
test
push
cmpsb
or
jb
aas
pusha
mov
fucom
push
mov
inc
insb
outsl
or
sbb
xor
addl
cmp
and
insl
cmp
or
cmpl
sbb
faddl
add
ret
pop
hlt
test
fbstp
push
and
xchg
js
dec
ljmp
push
in
inc
mov
mov
cmp
notb
insb
mov
outsb
push
jmp
push
adc
test
push
inc
xor
out
out
lock
cmc
mov
mov
loop
mov
jnp
loop
jle
jle
jmp
addr16
lock
xchg
mov
xchg
sub
pop
mov
add
or
xor
pmulhw
js
inc
jo
inc
adc
push
push
or
mov
push
sbb
jg
cmp
mov
js
nop
lret
add
dec
inc
dec
cmp
xor
inc
dec
pop
js
push
cmp
push
nop
cwtl
adc
xchg
aad
jg
mov
rcrl
mov
xchg
test
mov
test
je
push
or
or
pop
mov
xchg
aas
lock
xor
adc
xor
sahf
push
push
subb
les
xchg
pop
aaa
and
movsb
add
out
inc
mov
and
testl
pop
and
jmp
and
adc
pop
outsl
jge
shlb
add
xor
xchg
cwtl
addr16
mov
xor
add
cmc
andl
adc
jne
jecxz
arpl
das
pop
hlt
dec
ficompl
rolb
adc
in
test
ret
ja
pop
sub
xchg
movb
and
dec
jmp
loope
mov
ss
jg
mov
pop
push
dec
jo
add
pop
inc
push
inc
in
arpl
push
aad
add
push
js
notb
inc
fsubrp
inc
or
sahf
and
fsubrl
inc
sbb
mov
aaa
jmp
sbb
ret
lock
fs
popf
add
mov
ljmp
in
cmp
jne
decw
jmp
lret
jp
jb
inc
sub
imul
dec
mov
or
xchg
test
and
push
jo
or
cmpsb
jge
cli
xchg
sbb
adc
xor
in
ss
mov
jg
into
push
add
pusha
mov
adc
xchg
pop
push
adc
push
clc
dec
cltd
jmp
jo
and
sub
popa
and
rcrb
lcall
fmull
sbb
call
add
adc
adc
fsubrs
mov
enter
stos
pop
xchg
or
movb
pop
loopne
in
push
daa
inc
inc
add
pop
leave
pop
out
xchg
test
ret
mov
cmpsl
pop
cvtdq2ps
loopne
mov
or
je
adc
rorb
push
sahf
push
add
pop
stos
cmpsb
cmp
test
push
ja
xchg
cmp
xchg
movsb
xor
fs
outsb
inc
cmp
lcall
sbb
mov
stos
adc
punpcklwd
inc
push
push
xlat
push
mov
cmp
mov
dec
arpl
xchg
jne
arpl
cmp
jno
mov
mov
and
and
xor
shlb
outsl
loopne
sbb
inc
imul
sbb
mov
stc
fstl
dec
dec
push
or
dec
fdivrs
push
pusha
clc
mov
cmp
mov
push
inc
or
dec
mov
xor
cmp
jle
adc
xor
fmuls
xor
pop
clts
cmp
xchg
mov
sub
sub
dec
or
add
daa
sub
neg
mov
sub
sub
je
inc
pop
add
divl
ret
mov
or
pop
push
mov
add
pop
enter
lods
lret
loope
pop
and
in
loop
loop
sub
testb
fsubl
add
add
and
and
rolb
adc
push
pop
xchg
pop
adc
mov
add
xlat
cmp
repz
jecxz
cwtl
jp
jmp
mov
xor
movsb
rcrb
fildl
inc
cltd
lret
dec
adc
and
sub
sub
test
adc
xlat
pop
adc
loopne
inc
or
sub
pop
ljmp
pop
sbbl
xor
adc
stos
xchg
in
xor
jge
pop
dec
int
inc
ret
xor
pop
loopne
cltd
add
mov
test
push
mov
insb
mov
dec
xchg
push
or
mov
cmp
xbegin
popa
ret
jo
mov
mov
jg
sub
xorb
or
ret
pushf
movsl
call
and
insb
inc
sbb
add
test
jecxz
out
idivl
mov
pop
sub
inc
add
push
lea
push
or
add
stos
cmp
xchg
scas
popf
and
or
push
fiaddl
cmp
inc
add
fdivr
lea
addl
aad
stos
gs
inc
lahf
rorb
push
dec
pop
dec
and
dec
addl
jns
pop
inc
fmuls
cmp
xorl
xor
cmp
dec
add
je
scas
push
outsb
cmp
test
push
dec
or
imul
jne
mov
in
and
pop
add
movsl
cmc
out
dec
push
sbb
jmp
insb
sub
mov
or
inc
pop
leave
jae
adc
or
push
or
cmp
pop
xchg
jp
sbb
mov
mov
xor
adc
mov
add
movl
sub
ret
imul
pop
pop
mov
xor
popa
add
pop
cmpsl
sbb
rorb
popa
je
xchg
cmp
xchg
add
outsl
cld
add
testl
xorl
ret
lahf
insb
pop
mov
fbld
pop
pop
js
mov
decb
cld
adc
jmp
sub
das
fistpll
cltd
jns
inc
jle
cmpb
rorb
je
popf
bound
in
or
pop
push
adc
adc
ret
and
out
inc
ret
pop
aam
sbb
push
fbstp
or
dec
push
add
mov
popf
nopl
in
gs
ljmp
mov
mov
repnz
push
sub
sub
cmpsl
lods
jg
enter
sbb
shl
or
xor
shll
jg
fsts
and
pop
cmovp
pop
iret
adc
sti
popa
inc
or
inc
dec
pusha
mov
lahf
daa
xchg
xchg
cmp
add
add
mov
rolb
cwtl
jp
pop
movsl
fs
nop
pop
call
jmp
xchg
dec
je
sbb
popa
dec
xchg
push
fadds
je
xchg
mov
sbb
add
rcrb
push
hlt
xor
push
sbb
fidivl
and
je
add
popa
leave
les
sbb
pop
jmp
sbb
sub
jmp
add
sbb
mov
jnp
and
dec
fists
cmp
xor
mov
fcoms
fwait
cmp
jle
scas
inc
test
push
sub
add
or
in
ret
sub
cmp
setge
or
shl
call
push
sub
test
add
rcrb
add
mov
mov
bound
negl
pusha
jns
test
push
sbb
and
addr16
inc
jle
clc
jle
xor
lock
int
ja
arpl
or
sbb
mov
inc
aas
adc
and
push
jne
cwtl
dec
add
push
rolb
jbe
les
pop
add
ds
stc
scas
xchg
mov
in
clc
jle
mov
sbb
mov
insb
rorb
add
xor
cld
cld
dec
orl
push
add
lahf
sahf
mov
out
xor
idivl
hlt
push
inc
lock
mov
repz
call
xor
out
loopne
nop
mov
mov
fdiv
sahf
cmpsl
stc
xorb
jl
jnp
int3
push
and
jle
les
mov
rorb
mov
repz
fadds
insb
push
cmp
cltd
jge
lock
push
push
mov
dec
and
mov
inc
shrb
sbb
notb
cmp
adc
xchg
cmp
push
add
lods
icebp
add
ffreep
in
add
das
mov
or
mov
fiadds
ret
push
cs
mov
fs
xchg
popa
insb
push
loopne
mov
or
pop
mov
gs
adc
addb
outsl
pop
cmp
shrd
push
mov
lcall
mov
sahf
movsb
je
fdivs
les
test
mov
int3
or
pusha
out
and
and
iret
inc
int
orb
mov
and
mov
ret
jb
mov
push
push
sbb
gs
test
loopne
rcll
test
adc
into
lock
in
in
cld
mov
or
mov
lea
test
dec
dec
repnz
mov
adc
stc
jo
inc
js
or
jno
dec
jae
mov
popf
xchg
xchg
insb
mov
inc
mov
cs
test
add
push
cmp
and
cmova
in
dec
inc
pusha
testb
or
mov
aam
test
lea
andl
into
lds
fs
mov
xchg
mov
adc
jl
test
push
push
and
nop
movl
dec
push
push
inc
adc
js
and
jo
jg
hlt
inc
loopne
mov
popf
mov
imul
fadds
cmp
test
rcll
push
or
nop
xchg
addr16
prefetchnta
in
roll
jb
xchg
inc
pusha
repz
repnz
inc
inc
adc
and
adc
popf
nop
dec
ret
test
pop
or
pusha
lret
pop
or
movsb
xchg
mov
in
sub
insl
bound
and
loope
jg
roll
cmp
addl
insl
popa
imul
inc
adc
inc
dec
or
fcmovnbe
xchg
aas
fisttps
js
push
pop
xchg
or
inc
or
fs
pop
adc
xchg
or
xchg
xchg
scas
sub
xchg
ja
ja
mov
sub
nop
xor
fs
pop
in
pop
pop
adc
mov
adc
cmp
cs
imul
nop
adc
add
fldl
enter
inc
ret
xchg
sub
or
push
xor
pop
nop
lds
xchg
or
sbb
push
mov
popa
imul
add
pop
or
imul
test
pusha
not
pop
or
cwtl
pop
andps
aam
adc
mov
add
mov
add
int
outsl
nop
inc
fcoms
enter
loope
shrl
dec
movl
nop
addb
dec
cmp
xchg
jl
inc
pushf
or
or
js
dec
mov
dec
je
adc
push
or
lea
dec
ds
xchg
add
imul
add
imul
call
repnz
clc
test
sbbl
fbld
clc
push
jo
push
or
out
insb
rol
ret
jbe
xchg
movl
or
xchg
xchg
sub
inc
popf
movl
or
mov
and
cmp
add
add
mov
push
inc
les
and
lsl
mov
and
in
or
popa
fs
fisttpll
sub
movl
xor
je
das
cmp
xchg
add
add
das
in
add
add
scas
and
add
xor
dec
arpl
mov
pop
add
add
inc
loope
pop
lods
fdivs
push
aaa
lods
out
bswap
bound
push
or
int
pop
andl
pop
dec
movl
pop
mov
push
add
lods
xchg
lods
sbb
enter
mov
add
fildll
lock
or
out
lret
adc
adc
xchg
mov
mov
add
ja
test
popa
or
push
pop
inc
or
push
inc
add
outsb
pop
and
call
inc
add
fadds
sbb
movaps
jno
dec
lcall
dec
or
rcrb
inc
cmp
movsb
xorb
push
dec
and
pop
adc
popa
jb
gs
and
pop
outsl
arpl
mov
pop
mov
inc
fwait
iret
out
push
jno
iret
notl
push
xor
not
fwait
sub
sbb
mov
push
outsb
fimull
ja
mov
in
sub
ror
jmp
fsts
inc
pushf
paddusb
and
or
pop
or
mov
ror
adc
or
jnp
adc
pusha
mov
and
int
rol
adc
mov
test
je
add
add
test
das
mov
pusha
xlat
sbb
loopne
pop
lea
or
cwtl
sub
mov
int
fmull
imul
and
pop
fbld
test
shr
mov
push
mov
mov
cmp
movsb
lods
sbb
sahf
lds
addr16
gs
sub
subl
xor
xadd
and
add
test
xchg
push
movhps
pusha
and
ud2
xchg
sbb
xor
test
mov
popa
cmpsl
mov
add
jle
pop
dec
repz
bound
nop
or
mov
cmp
inc
dec
xchg
inc
scas
pop
or
xchg
mov
jbe
push
mov
mov
mov
add
add
add
aad
add
inc
add
add
lcall
pop
fiaddl
or
dec
mov
mov
mov
sub
pushl
or
sbb
cmp
inc
mov
decl
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
fwait
or
jmp
fdivrp
fdivr
fidivrl
call
call
call
call
call
call
call
call
dec
mov
rol
into
dec
dec
dec
dec
lret
leave
dec
lahf
dec
sub
out
xor
mov
lahf
divl
pushf
push
rcrb
push
js
lcall
or
xchg
out
out
insb
or
movsb
mov
mov
imul
push
in
or
adc
cmpsl
mov
shlb
or
cmp
adc
je
push
inc
test
mov
push
in
add
imul
outsb
repz
aam
sarl
push
push
sub
je
jns
out
lock
pushf
in
hlt
push
mov
push
mov
add
cmpsb
cmpsl
jge
int
add
in
js
push
push
lock
push
inc
ss
fimull
sbb
ljmp
cmp
xchg
ss
out
sbb
sbb
sti
push
cmp
dec
add
es
nop
jg
sbb
movsb
adc
pop
or
in
adc
push
addl
and
inc
int3
and
inc
movb
pop
inc
push
dec
mov
cmp
in
lods
mov
dec
rolb
adc
dec
add
inc
test
loope
movb
orb
in
or
push
cmpsl
fdivl
push
clc
test
orl
pop
pop
and
orl
lahf
and
mov
sub
jae
inc
das
mov
jp
dec
rolb
addb
mov
loopne
js
scas
subb
movsb
fsubrl
and
mov
inc
push
test
clc
adc
or
inc
pop
xchg
or
add
dec
js
jge
call
xchg
sbb
add
dec
or
hlt
sub
adc
decb
jns
sbb
mov
dec
mov
cmp
pop
orl
pop
roll
add
cmpsb
add
inc
xor
andl
jo
cmp
in
mov
push
insb
sub
dec
adc
add
pop
cmp
add
pop
adc
and
arpl
xor
adc
and
adc
or
movsl
adc
jno
add
cwtl
divb
test
jp
imul
inc
dec
pop
cmpl
add
push
inc
dec
cmp
xchg
cmp
sub
mov
mov
movsb
push
mov
rorb
adc
dec
ljmp
xor
subb
push
xchg
dec
adc
add
add
add
add
add
sub
mov
add
in
add
jp
adc
sbb
sbb
xor
add
mov
mov
mov
or
mov
push
cmpxchg
mov
mov
mov
mov
mov
and
and
mov
mov
mov
mov
mov
add
push
mov
xor
cmp
adc
call
add
pop
mov
inc
inc
inc
mov
sub
dec
aam
mov
mov
sbb
mov
stc
scas
push
clc
mov
mov
mov
mov
mov
and
jp
out
mov
push
mov
push
xor
out
js
rclb
ds
stc
je
enter
les
dec
repz
pop
dec
pop
idivl
push
push
push
jnp
mov
push
xor
pop
mov
out
hlt
push
add
sbb
push
cmp
push
lods
fucom
jns
ror
fdivs
pop
fsubrp
jns
out
push
mov
pop
pushf
push
or
jnp
cmp
push
test
cmp
imul
cld
cmp
jnp
jns
popa
push
jo
sbb
mov
push
fcompp
insb
out
insb
xor
pushw
push
push
inc
push
push
rcr
int
cmpsb
mov
je
je
dec
mov
out
push
sahf
push
mov
push
xor
push
rolb
and
pushf
test
inc
ja
sarl
add
int
sarl
outsb
call
lahf
data16
add
data16
insb
adc
add
add
or
lods
scas
pop
and
aam
or
cmp
stos
pop
push
fs
xchg
adcl
or
mov
inc
or
or
jle
sub
and
add
sbb
pop
sub
inc
cmp
scas
in
stos
in
enter
notl
rolb
mov
pop
mov
mov
and
lods
mov
xlat
cmp
push
xchg
nop
xchg
mov
pop
sub
popl
jb
xlat
js
dec
scas
data16
pushf
or
shll
stos
adc
sub
cmpsl
fnstcw
push
addb
test
cmp
nop
add
adc
popf
and
mov
test
xlat
mov
mov
push
loopne
not
and
adc
loop
rcll
fimuls
adc
add
sbb
xor
cld
sub
lea
decl
nop
add
add
nop
add
mov
jl
xor
pushf
jl
lock
push
lahf
push
mov
scas
std
add
cmpsl
or
mov
jge
dec
pop
push
fiadds
mov
js
jae
xchg
xor
mov
add
jl,pt
mov
push
cmpsl
nop
xchg
dec
push
test
pusha
xchg
dec
sti
mov
jo
fwait
push
call
iret
imulb
lahf
es
jl
movsb
push
adc
mov
push
cmpsl
es
lods
xchg
sub
mov
mov
inc
fadds
aas
xor
loop
in
push
adc
adc
insb
ficoml
insl
mov
pop
dec
test
dec
jl
pop
lea
mov
mov
add
ds
add
dec
xor
push
sti
int
xor
dec
push
test
pusha
je
push
and
pop
cltd
pusha
mov
jmp
xchg
js
dec
inc
es
push
dec
bndldx
push
inc
xchg
and
fwait
imul
dec
jl
movl
xchg
pop
push
inc
gs
das
jmp
push
idivl
rorb
cmp
adc
jo
jno
ja
ret
fists
insl
inc
pop
test
ds
jno
xor
dec
insb
ret
mov
cmp
adc
sbb
inc
mov
push
jecxz
jp
xlat
sbb
test
or
bound
cmp
jmp
xchg
jle
iret
pop
inc
pop
jecxz
jns
cmp
insl
cld
iret
adc
jno
imul
pop
stc
nop
les
inc
mov
inc
pusha
lods
pop
fidivs
in
xlat
sbb
pop
dec
inc
gs
insl
or
in
shlb
push
mov
das
push
push
inc
push
inc
pop
outsb
pop
das
daa
push
jo
daa
or
pop
faddl
clts
add
in
add
xchg
dec
outsl
test
rclb
imul
cmp
sbb
mov
mov
mov
cmpsl
pop
add
dec
push
add
aam
das
cmp
sbb
mov
and
out
dec
outsl
add
insl
daa
adc
cmpsb
lods
xchg
cmpsl
pop
nop
test
orl
or
xor
lea
add
adc
dec
mov
fsubr
addr16
and
sub
lea
aam
jge
xchg
icebp
xchg
test
inc
mov
sbb
inc
inc
push
cmovo
cmp
and
cmp
cltd
and
dec
inc
dec
sub
pusha
iret
adc
mov
sbb
nop
test
mov
add
inc
rcll
adc
xchg
adc
js
and
fcom
int
setb
scas
mov
xchg
sbb
add
mov
inc
add
out
adc
dec
inc
mov
xchg
add
sbb
or
adc
xchg
shlb
je
push
movsb
fimuls
inc
push
sbb
jne
jbe
sub
outsl
jl
push
popa
fbstp
repz
xchg
sbb
loopne
repnz
xor
pop
pop
push
vpmadcswd
inc
add
mov
sahf
cmpsb
mov
mov
rolb
add
pop
incb
daa
jne
movsb
xchg
pop
inc
test
and
jmp
fcomps
push
sahf
mov
inc
sub
pushf
rcll
add
xor
xchg
sbb
or
aam
sub
add
add
cmc
or
jne
fistpll
lock
sbb
jmp
iret
dec
or
in
xchg
sbb
or
jae
xchg
dec
jmp
push
or
cmp
fdivs
dec
and
sub
dec
cmp
or
xor
shll
adc
sbb
xor
rcrl
sbb
sub
dec
shll
xor
and
push
insl
loope
push
push
jg
cwtl
imul
sub
jbe
sub
in
popa
jae
add
bound
cmp
sub
je
cwtl
mov
js
mov
sub
std
dec
je
and
push
xchg
mov
test
or
mov
in
scas
roll
outsl
jge
push
mov
sbb
fstps
xchg
mov
jmp
hlt
adc
add
add
mov
jmp
or
add
jne
mov
jae
nop
subl
xor
cmp
xor
push
bound
pop
fiadds
xchg
mov
scas
dec
sbb
lret
aam
lods
bound
xorb
pop
negl
test
push
mov
jmp
or
incl
lahf
or
data16
imul
shl
cs
les
sub
or
scas
or
cmc
nop
jno
push
test
cmpsl
aam
mov
adc
inc
inc
inc
notl
dec
jnp
aaa
jle
enter
mov
jp
les
and
addb
inc
cmp
js
fisttps
dec
iret
jmp
xor
inc
je
push
and
dec
pop
pop
fwait
xor
ja
dec
mov
xchg
addr16
jl
bound
cmp
mov
incb
stos
cmp
inc
cmp
and
rol
jae
mov
xor
test
or
adc
pusha
or
es
cmp
pop
and
xchg
jg
mov
pusha
mov
mov
je
repnz
lea
imul
dec
insl
dec
dec
sbb
lahf
or
enter
inc
sbb
pop
or
enter
sbb
add
es
js
adc
or
add
push
lods
rol
lahf
or
push
dec
push
sub
je
or
icebp
dec
adc
dec
or
push
xchg
lret
jle
or
adcl
fimuls
push
ud1
xchg
jne
xchg
push
push
ss
or
daa
fidivrl
jbe
cmpsb
xor
out
leave
shlb
ljmp
inc
popl
pop
inc
and
shlb
mov
sbb
outsb
jle
cmp
jne
movb
push
xor
sbb
mov
jg
les
pop
lahf
jae,pn
loopne
mov
or
add
cmp
jp
in
push
pop
mov
xor
shl
and
and
ljmp
mov
inc
sbb
adc
pop
add
jbe
inc
inc
je
wrmsr
sbb
pop
movsl
in
sub
or
dec
pop
addl
popa
sub
sti
xchg
pop
fsubrl
mov
push
xor
mov
xor
add
aam
sub
xor
in
adc
rolb
xchg
pop
and
fimull
aaa
adc
sub
rolb
sbb
mov
and
jnp
cmp
je
int3
fisubrl
cmp
jecxz
pop
mov
in
leave
xor
jae
psubq
pop
rcll
push
cmp
inc
add
cmp
jmp
cli
and
test
sub
xlat
xor
mov
sbbb
outsl
call
mov
sub
rolb
push
xchg
adc
push
cmpb
out
ss
pop
lret
je
add
add
or
jbe,pn
dec
pop
push
push
fidivrs
xor
inc
insb
idiv
fadds
push
adc
mov
inc
js
add
and
and
adc
or
add
sarb
sbb
rclb
movsl
or
fldcw
or
push
mov
xchg
mov
pusha
adc
js
mov
mov
test
inc
popa
inc
in
inc
call
inc
jne
and
loope
adc
shlb
pop
sub
andl
or
sbb
mov
cmp
xchg
dec
movsb
ret
push
rclb
push
pop
lea
rorl
int3
rcr
sbb
push
lods
cmp
mov
pop
push
inc
out
xchg
pop
cmp
or
inc
push
fucomip
hlt
pushf
fs
lds
xchg
dec
jl
sub
push
sub
mov
sbb
getsec
mov
adc
and
lea
sub
jbe
roll
xor
mov
sub
ljmp
xlat
jecxz
sub
add
cmp
dec
sub
push
fisttpll
ja
pop
or
xor
dec
xchg
or
sub
xorl
xor
fimull
andl
js
cli
or
dec
adc
mov
cmc
add
xlat
and
inc
std
ds
shr
jns
mov
jl
movsb
and
hlt
push
pop
sbb
xchg
cmp
pop
les
repz
jnp
jno
adc
mov
lock
sub
in
inc
jo
sbb
jbe
inc
add
insb
mov
cmc
sub
or
loopne
or
leave
ret
sub
es
mov
out
sbb
or
xlat
mov
lcall
movb
insl
shr
xchg
push
sbb
add
or
fimull
sbb
mov
out
or
cmp
jmp
or
xor
xor
add
stos
mov
cmp
add
adc
es
pop
sarl
js
ds
push
sbb
mov
adc
lock
or
fnsave
jne
das
and
sti
testb
jne
pop
je
fs
sbb
adc
adc
cmp
sahf
pop
or
cmp
cmpsb
adc
ja
mov
fsubr
pop
pop
lods
movswl
std
xor
jns
sbb
pop
das
lods
inc
leave
test
cmp
ljmp
push
inc
xchg
cli
out
andl
mov
jl
andb
hlt
daa
inc
dec
adc
pop
fcoms
inc
pop
sub
ret
inc
sbb
pop
cmp
dec
add
push
test
movsl
push
repnz
push
pop
bound
aad
les
fcomps
xor
xor
loop
adc
fs
pusha
sbb
pop
fcmove
push
or
inc
dec
lea
xchg
dec
xor
popa
ja
testb
push
insb
imul
adc
pusha
aaa
cmp
inc
aas
sbb
lea
inc
out
push
jo,pn
or
stc
sbb
xorb
mov
mov
ljmp
cmp
pop
sub
inc
jl
test
sub
push
add
testb
and
and
jns
sub
imul
pop
mov
pop
xor
and
das
dec
xor
sbb
mov
jmp
sub
or
test
mov
sbb
subb
mov
movsb
cs
fnstsw
ret
repnz
adc
jg
sub
xchg
dec
leave
mov
sbb
in
mov
mov
add
lea
inc
clc
pop
out
add
iret
and
lea
outsb
fnsave
popf
add
xchg
jecxz
jns
sbb
mov
add
jo
mov
inc
sbb
push
enter
outsl
mov
lds
xchg
imul
dec
xchg
subb
mov
test
jo
add
cwtl
mov
fs
ds
cmp
push
in
fnsave
out
sub
add
dec
add
pop
jno
popa
lcall
mov
jge
imul
xor
sbb
inc
push
add
pusha
test
pusha
add
dec
jne
mov
insl
jne
aaa
mov
push
rolb
mov
icebp
jp
sub
cmp
inc
sbb
or
push
add
push
pusha
inc
loopne
lcall
cmpsl
dec
sub
ss
lock
cmc
int3
adc
lods
hlt
cmp
das
add
ja
out
inc
add
mov
addb
mov
int
xor
rorl
cmp
je
add
add
stc
ds
adc
mov
into
in
rorl
sbb
jmp
and
icebp
xor
push
sbb
adc
adc
movsl
inc
lods
in
clc
imul
mov
mov
dec
or
je
das
aaa
inc
adc
cwtl
movsl
addl
movb
inc
test
xchg
xor
or
add
or
dec
fisttpll
jae
loop
or
and
ret
test
sbb
sbb
mov
xor
sub
mov
decb
repz
clc
in
and
rcrb
sub
cmpsb
arpl
add
push
xor
inc
ret
in
cmp
pop
jo
and
sub
or
xchg
scas
jno
cli
xchg
jecxz
jo
xorb
sarb
jp
ret
and
cmc
jle
xchg
dec
out
adc
outsb
or
mov
cld
mov
mov
xor
sub
cwtl
ja
adc
mov
shl
mov
cmpsl
adc
fwait
outsl
daa
inc
fcoms
pop
stc
mov
pop
xor
xor
dec
adc
adc
outsl
mov
stos
call
xchg
mov
pushf
loop
mov
jp
jecxz
int3
enter
dec
lea
inc
add
movsl
and
mov
sub
or
scas
pop
sub
or
popa
push
xchg
sub
insl
sub
push
or
and
lock
inc
mov
insb
or
daa
add
add
in
lock
lock
jnp
xor
rorb
add
inc
stc
xchg
add
mov
pusha
lahf
dec
add
loopne
lret
cmp
adc
push
test
lock
iret
inc
addr16
insl
hlt
imul
iret
inc
jne
shrl
push
ja
sub
mov
xor
ljmp
jmp
gs
sbb
stc
mov
jl
loopne
inc
dec
mov
pusha
add
add
mull
or
mov
xor
jb
and
and
shll
cwtl
aaa
pop
inc
add
push
adc
sub
push
push
pusha
insb
fld1
shrl
sbb
sbb
out
cmp
movsb
xchg
cmpb
push
pop
pop
and
outsl
add
das
pop
or
andl
dec
xor
notl
outsb
mov
and
push
adc
or
fs
mov
jno
pop
add
icebp
push
or
ljmp
dec
out
pop
jmp
cmp
je
mov
ss
test
jbe
push
adc
pushf
jge
cmp
push
or
adc
rclb
pop
je
call
imul
je
cmp
adc
inc
es
add
test
mov
sbb
and
or
bound
cli
adc
popa
int
xchg
pushf
add
xchg
nop
lock
jbe
xchg
mov
fs
sub
pop
jnp
jl
push
cmp
push
dec
sbb
test
aad
push
pop
inc
sahf
in
data16
add
lcall
ss
repz
push
les
in
jb
xabort
fs
dec
xchg
in
add
or
hlt
popl
and
push
sub
test
pop
roll
mov
sub
push
popa
loop
cld
push
xor
orl
cmp
mov
lret
scas
mov
sbb
mov
dec
inc
pop
aaa
mov
popl
enter
and
imul
sub
sbb
mov
mov
inc
jb
push
adc
das
or
xlat
cld
shrb
cmpsl
mov
pop
add
xor
orl
ja
pop
adc
sbb
adc
adc
adc
mov
cmp
insl
xor
addb
pop
jno
sub
xchg
mov
lea
cmp
mov
fistpl
xor
mov
and
cwtl
sbb
dec
pushl
movsl
in
lcall
and
sub
jl
pusha
out
mov
mov
sarb
mov
inc
mov
loopne
nop
cli
push
lock
add
popa
xchg
mov
out
jmp
je
sbb
inc
sub
cmp
xchg
add
push
outsb
ss
inc
jo
inc
inc
push
add
push
pop
pop
xor
fistpll
pusha
adc
push
pop
add
jle
jmp
mov
push
and
xor
pop
add
push
adc
jg
pop
fisubrl
test
jo
inc
dec
out
test
cwtl
push
push
lret
cmp
add
add
mov
mov
add
sub
btc
cmpsl
std
imul
push
inc
insb
mov
imul
nop
mov
xchg
inc
js
adc
movsl
xchg
lea
aaa
pop
aaa
adcl
and
das
xor
or
mov
es
mov
mov
mov
sbb
dec
lock
adc
cmp
mov
push
push
shlb
punpckldq
pop
jp
xchg
or
mov
cmp
xor
add
inc
add
repnz
xchg
sbb
ret
cmp
add
insl
xlat
prefetcht2
and
into
add
or
insl
iret
flds
adc
adcb
inc
jne
adc
inc
jne
sub
int
or
faddl
mov
add
loopne
inc
fdivs
outsl
jg
fiadds
scas
inc
lea
andl
add
push
orl
popa
movsb
fldenv
insb
insb
je
inc
add
pop
loop
and
dec
out
test
rcrb
dec
dec
mov
sub
add
dec
add
adc
dec
and
add
mov
inc
test
push
icebp
ret
xchg
pop
pusha
inc
fcoml
mov
sub
loop
xor
mov
ljmp
test
mov
adc
mov
leave
shlb
xchg
scas
xlat
adc
out
xchg
pop
sub
div
leave
popf
dec
sbb
xor
jp
or
xor
cmp
and
cmp
mov
add
out
es
sbb
leave
insb
jmp
push
xchg
jp
lock
mov
adc
cmp
mov
sbbb
xor
or
ret
or
jmp
int3
jns
dec
add
mov
or
xchg
adc
adc
stos
rorl
insb
xchg
dec
mov
xchg
sarb
ret
jne
xor
rolb
add
stos
into
push
jbe
dec
push
push
dec
dec
inc
mov
sbb
fs
cmp
adc
lret
gs
xchg
pop
or
cmp
mov
arpl
aaa
or
jnp
mov
xlat
add
lcall
mov
add
lcall
push
sahf
mov
cmp
push
mov
inc
mov
mov
je
mov
lret
leave
and
mov
add
lsl
test
movsl
inc
adc
dec
sbb
mov
inc
scas
int
adc
cmp
sbb
ret
sub
lods
sbb
lcall
add
mov
add
pop
pop
xchg
pop
sbbl
cmpsl
mov
out
fs
jp
xchg
fisubs
lock
cmpb
pop
jbe
add
sub
adc
or
mov
sub
mov
mov
add
imul
cld
sub
daa
add
add
fcomp
mov
lods
icebp
loop
mov
pop
subb
rcrb
mov
inc
sbb
inc
addb
or
jl
and
ss
or
xchg
mov
push
inc
imul
scas
mov
xchg
test
leave
arpl
nop
xor
iret
dec
mov
ss
add
jo
leave
call
jo
test
flds
loope
cmpl
fldt
jne
pop
inc
and
push
and
inc
call
rclb
cmpl
enter
or
push
mov
rorb
lret
gs
sub
adc
xlat
mov
and
ss
push
sbb
xorl
mov
pop
lods
aad
das
fs
les
repnz
adc
and
arpl
xor
aas
pusha
push
sti
sub
and
dec
adc
mov
in
test
jne
or
dec
xchg
jle
jmp
xlat
test
add
mov
mov
js
shrb
pusha
mov
pop
push
pop
xor
or
dec
inc
mov
addb
dec
fdivs
push
or
mov
and
and
sub
push
mov
adc
xor
sbb
push
or
dec
sti
faddl
cmpl
inc
les
xorb
inc
add
es
pop
adc
pop
xor
pop
add
daa
xchg
rclb
nop
in
fdivl
pop
loop
push
and
movsb
sbb
pop
inc
sbb
xor
cmpb
hlt
lret
xor
push
add
jae
sub
lock
fbld
add
leave
hlt
lahf
sbb
mov
add
mov
scas
punpckhbw
pusha
mov
pop
je
imul
jbe
pop
or
sarb
ds
enter
dec
cmp
xor
pop
add
add
leave
xor
or
add
adc
stos
xor
pop
sub
dec
jecxz
inc
or
mov
jbe
xor
data16
pushf
add
push
jne
call
mov
shlb
ds
jecxz
jecxz
or
sahf
add
xor
in
mov
inc
mov
xor
mov
adc
cmpsl
data16
cmp
sahf
mov
sbb
loopne
repnz
or
ficoml
outsb
add
outsb
inc
je
xor
jb
push
jb
loope
out
sbb
jo
add
xorl
mov
add
pop
in
ret
sub
sbb
cmp
dec
adc
xchg
fstpl
inc
fimuls
xchg
or
pop
in
dec
or
adc
xor
rclb
mov
or
sub
mov
lock
add
xchg
mov
push
mov
pop
cmpsl
daa
lods
jb
je
pop
push
cwtl
jns
cmpl
loop
add
je
je
pop
push
jne
rcrb
ret
pop
inc
mov
lds
sbb
push
add
daa
push
addr16
pop
and
cwtl
shrb
push
mov
sbb
clc
and
jmp
inc
push
and
sub
lahf
scas
jne
jno
xchg
lock
fists
inc
or
push
add
lods
popl
clc
js
cmp
jp
icebp
inc
jns
or
movsb
lea
adc
orb
loope
push
out
push
xchg
leave
xchg
or
fcomp
mov
ficompl
mov
mov
mov
dec
pop
data16
ret
leave
cmpsl
dec
pop
mov
xchg
cmp
sbb
jno
ret
add
pushf
clc
add
add
or
hlt
arpl
pop
push
popa
xchg
and
test
int
push
inc
fidivl
xchg
or
aad
iret
pop
test
sbb
mov
push
or
and
fwait
sahf
pop
push
add
or
mov
cld
and
lret
cmpl
cli
sbb
orb
sub
insl
or
xchg
inc
or
movsb
sub
lds
adc
inc
xor
mov
bound
xchg
xchg
pop
cmp
pop
xor
xchg
or
rol
dec
push
and
les
mov
pop
cwtl
inc
add
pop
call
pop
je
mov
movb
jg
insl
lods
push
andl
inc
push
std
fwait
mov
sti
mov
adc
jns
push
cmpsl
sub
inc
push
add
and
dec
call
outsl
mov
je
mov
dec
or
or
mov
mov
aas
or
nop
lea
or
mov
mov
dec
and
and
sbb
xchg
push
jo
pop
data16
clc
or
add
and
pop
sbb
adc
aad
enter
nop
nop
or
xchg
pusha
or
movsb
pusha
cmp
pop
jl
mov
outsl
movlps
in
pop
xchg
test
xchg
nop
das
add
and
iret
pop
xor
sbb
inc
mov
xchg
adc
push
jae
xorb
popa
xlat
xor
or
cmp
int3
frstor
testl
call
jmp
mov
outsb
push
aad
stc
sbb
sub
push
add
or
or
inc
cmp
add
je
cld
fldl
xchg
xchg
push
or
fidivl
xor
jnp
adc
or
mov
jbe
mov
add
hlt
rclb
or
pop
imul
rcl
push
and
mov
lods
pop
fwait
inc
push
arpl
cmp
pop
pop
sub
incb
lea
dec
dec
pop
cmpsl
ret
cmpb
andb
mov
aad
faddl
xchg
dec
push
pop
in
test
dec
out
pop
fs
dec
or
or
mov
sbb
inc
push
addr16
mov
sar
ja
mov
jne
pop
or
push
repz
cmp
test
and
inc
gs
jne
adc
enter
insb
add
ffree
jg
out
mov
sub
xor
push
imul
insb
incb
pop
sub
daa
push
or
add
popa
cwtl
pusha
and
jae
jecxz
add
test
and
push
cmp
fwait
call
dec
fstps
cmp
sub
cltd
push
mov
dec
add
out
cmp
xchg
cmp
outsb
mov
xor
inc
roll
test
or
dec
add
inc
and
rol
fbstp
dec
cmp
adcl
movl
je
pop
cmp
sbb
xor
pop
test
adc
xchg
add
nop
cmp
out
inc
int3
inc
shl
negl
pusha
pop
cld
add
push
popa
inc
mov
sbb
aam
pop
rclb
mov
adc
out
fnstenv
dec
pusha
test
xor
sbb
adc
ds
iret
xchg
mov
das
add
fimull
xor
xchg
xor
or
sbb
dec
mov
or
xor
std
adc
cmp
scas
push
stos
pusha
pop
stos
xchg
mov
and
or
cmp
pushl
mov
push
js
push
inc
out
and
in
adc
aam
sub
cmovo
stos
push
outsl
rcrb
adc
adc
sbb
cmp
add
popf
mov
cmp
rcll
dec
mov
movsb
ret
jo
sbb
fistpll
add
xchg
push
pop
xor
push
jge
add
sbb
popa
push
cmp
outsl
dec
xor
lret
bound
ficompl
push
lret
inc
push
add
rcrl
mov
add
in
dec
or
add
stos
and
or
pop
popa
adc
out
dec
data16
cmp
insl
cld
pop
jne
sbb
insb
nop
adc
mov
jg
aad
dec
sub
inc
adc
loope
xor
xchg
sahf
mov
adc
loope
xchg
clc
lea
frstor
dec
mov
ffree
adc
mov
add
mov
movsb
outsb
add
sbb
sub
inc
add
cmp
je
jle
jo
cwtl
mov
xchg
pop
push
outsb
push
mov
and
add
inc
pop
and
shr
repnz
rcrl
or
cli
cld
sbb
repnz
movsb
pop
xchg
repnz
lock
xor
mov
mov
es
or
aad
faddl
mov
dec
push
xor
push
inc
mov
roll
mov
lds
push
xor
cmp
xchg
push
les
lahf
xor
ret
inc
adc
sub
mov
out
cs
mov
mov
adc
fdivs
xchg
imul
loope
jmp
jge
inc
scas
sub
jge
inc
adc
cwtl
inc
es
add
pop
fidivl
add
les
mov
xlat
mov
add
or
mov
enter
add
or
bound
xchg
push
adc
leave
in
push
mov
loopne
add
sub
mov
sahf
leave
push
mov
jmp
aaa
pop
or
sbb
push
rclb
xor
jle
mov
dec
fcomi
inc
inc
dec
pop
movsl
add
mov
and
enterw
sub
jge
push
not
cmp
dec
loopne
fsubrl
cs
mov
aaa
call
test
loopne
in
or
inc
in
push
shrb
imul
mov
fs
xchg
bound
and
in
fadds
call
pop
insb
js
sbb
ljmp
lea
adc
mov
jne
test
dec
ds
movsb
mov
sbb
adc
or
mov
lods
add
xor
je
mov
lock
ljmp
rcll
inc
rorl
adc
or
ret
shrb
shll
fmulp
sti
mov
or
xor
cmp
or
and
pusha
xor
in
sbb
bswap
js
push
mov
add
cmp
andb
mov
adc
add
sub
imul
cmp
sbb
xchg
push
inc
mov
push
clc
pusha
cmpsl
faddl
push
out
mov
call
insl
test
or
aas
sub
mov
int3
push
pop
jecxz
cltd
andl
mov
inc
out
xor
jmp
mov
mov
xor
lret
test
sub
sahf
ret
ds
jb
lea
jg
cwtl
inc
enter
loopne
sub
lret
adc
bound
sbb
xchg
push
add
sarb
push
lret
scas
xor
hlt
sub
lea
push
imul
jns
mov
data16
scas
pop
sbb
mov
sti
and
test
lahf
jnp
adc
andl
sbb
mov
lods
cld
add
inc
pop
xor
xor
rcll
sub
adcb
adc
push
cmp
mov
sbb
and
pop
and
call
daa
add
pop
inc
pop
mov
push
test
inc
js
push
sbb
mov
dec
imul
add
loopne
jne
rcll
or
out
in
fwait
and
test
xor
mov
ret
cwtl
or
sbb
dec
lods
inc
fs
leave
loope
or
inc
xchg
push
push
and
cltd
shlb
xor
jmp
insb
pop
xchg
mov
out
xchg
cltd
mov
mov
fcompl
inc
dec
or
andb
into
inc
ja
rorb
mov
xor
lcall
add
call
pop
dec
push
pop
mov
mov
shlb
mov
out
or
adc
fnstcw
push
jmp
sub
sub
or
or
or
xchg
or
push
adc
pop
adc
frstor
sbb
mov
nop
subl
add
sub
jge
test
push
or
or
xor
mov
push
jmp
sub
push
add
push
add
or
or
or
jg
and
rolb
push
dec
cmpl
jg
lods
gs
cmp
or
dec
loopne
cmp
cmpb
jb
sub
dec
push
stc
mov
jmp
add
pop
pop
dec
popa
or
and
insl
fmulp
inc
add
or
sbb
sub
mov
pop
divl
sub
addr16
rcrb
adc
mov
pop
scas
sbb
xchg
ljmp
fnsave
add
or
xor
add
xchg
adc
out
add
fidivrs
pop
jns
iret
data16
add
push
addb
icebp
jnp
mov
adcl
adc
pop
ljmp
pushf
pop
sarl
inc
ds
xchg
lock
stos
std
out
xchg
out
stos
into
sahf
ss
inc
or
xchg
int
sti
push
pop
jb
lret
mov
andl
pop
incb
xorb
in
and
or
sbb
movsb
mov
xchg
or
into
add
mov
jbe
mov
push
insb
test
pusha
push
cmp
inc
xor
sbbl
inc
sub
and
push
sahf
mov
cmpsl
dec
into
loopne
popa
push
sbb
dec
subl
lods
inc
and
lea
pop
cmp
into
pop
les
mov
xchg
in
sub
dec
push
add
dec
add
mov
or
push
jmp
adcb
popf
sbb
popa
and
cmp
jne
lea
mov
and
sub
js
inc
hlt
xor
xor
sbb
cmp
loopne
push
out
rclb
push
in
sub
adc
call
cmp
je
dec
dec
add
jmp
add
inc
mov
in
cwtl
dec
loop
and
mov
add
dec
or
and
push
sbb
add
and
mov
xchg
dec
sbb
loope
push
sub
adc
pop
jns
jne
xchg
cld
mov
insb
pop
outsb
xlat
outsl
lcall
sarl
add
les
sub
sub
lcall
pop
inc
dec
sbb
mov
dec
push
add
or
aaa
or
mov
mov
fnstsw
adcb
push
adc
jne
ret
sbbb
dec
or
sbb
cmpsb
lret
push
dec
add
in
sarb
mov
aas
mov
repz
test
mov
dec
push
push
xor
dec
insl
jle
mov
mov
pop
mov
xor
jne
aam
jno
roll
xchg
movsb
xchg
rorb
iret
xor
mov
mov
push
push
lahf
sub
pop
add
add
add
lcall
cmp
or
pop
or
test
xor
sbb
cwtl
outsl
mov
in
mov
mov
mov
in
push
in
add
in
dec
cs
insl
dec
mov
inc
imul
adc
fisubl
dec
loope
jmp
js
arpl
and
or
or
inc
rclb
pusha
leave
int
push
push
nop
xor
jne
pop
popa
inc
inc
ss
adc
xchg
add
xchg
sahf
cmp
xchg
adc
adc
adc
enter
insb
insb
and
fisubrl
arpl
and
in
add
sbb
inc
add
adc
movsl
inc
or
les
rcrl
das
clc
das
js
sub
testb
cmpw
jle
data16
adc
sbb
jecxz
jl
pop
ret
and
jecxz
sbb
in
or
imul
scas
and
jnp
mov
or
add
and
xchg
rcll
dec
push
sbb
sbb
pop
test
inc
call
sbb
inc
xchg
jo
rolb
loop
mov
push
push
xor
clc
cmp
lods
xor
push
daa
rcl
sub
jmp
fsubr
xlat
adc
movsl
mull
enter
push
fldcw
jmp
outsl
pop
out
outsb
add
dec
inc
xchg
xchg
jl
aaa
jb
mov
mov
push
mov
fucomp
sbb
cld
dec
call
arpl
fs
add
dec
fwait
jne
cmp
cmp
or
push
jb
sub
out
adc
cltd
pop
mov
mov
add
flds
in
inc
adc
scas
mov
inc
push
scas
xchg
pop
xchg
push
lret
xchg
ror
sbb
test
dec
int3
enter
movl
cmpl
sub
xchg
mov
mov
rcrl
orl
mov
lret
adc
aam
adc
shl
and
xchg
cltd
push
pop
rorb
cltd
jnp
push
push
sbb
ret
inc
push
loopne
std
mov
lods
nop
mov
neg
add
or
adc
pop
movsl
dec
mov
repnz
push
call
push
sbb
sbb
aaa
inc
pop
enter
aas
add
jo
push
addr16
addb
mov
xor
sbb
add
les
pop
out
movsl
fdivs
and
aam
enter
je
movb
lock
push
add
gs
pop
ret
aad
daa
aaa
adc
inc
push
or
mov
dec
lods
pop
lcall
stc
cmp
add
es
jle
xor
xchg
jbe
dec
or
orb
adc
jno
mov
pop
xchg
mov
inc
add
inc
sbb
add
push
dec
dec
or
in
pop
add
incl
add
xor
inc
xor
mov
mov
pushf
xchg
cmc
jo
inc
das
xor
mov
cmp
aas
and
daa
adc
inc
rolb
sub
pop
test
mov
dec
or
dec
es
je
hlt
push
aas
xchg
push
inc
stc
rcrb
push
push
insl
loopne
jbe
jo
sbb
add
mov
push
dec
sbb
mov
pop
and
js
pop
add
inc
iret
jne
push
cs
mov
lea
add
or
xchg
or
xor
pop
repnz
dec
lea
shll
mov
cs
andl
or
ud2
adcl
loope
mov
jbe
xor
inc
adc
mov
test
jnp
mov
imul
and
inc
fadd
jmp
sbb
mov
push
sbb
fsub
pop
push
fdivrl
adc
test
dec
lret
cmpsl
inc
jb
dec
out
cli
push
dec
adc
jne
stos
sbb
lret
cmp
dec
xchg
les
cltd
xor
sub
pop
pop
pushl
divb
mov
and
sub
ret
dec
daa
fs
push
cmp
jp
sub
cwtl
push
aam
adc
pop
push
outsl
sbb
push
lods
rcrb
sub
cmpsl
loopne
or
push
pop
cld
inc
xchg
xorb
jne
movb
xor
push
xchg
or
das
inc
jle
dec
cld
test
lods
fwait
mov
pop
mov
pop
push
sub
pusha
outsl
adc
add
push
jno
dec
insb
or
add
sub
sub
push
add
add
add
add
cmp
pop
adc
dec
sub
das
adc
push
insl
adc
push
loopne
cltd
dec
inc
cld
test
mov
mov
xor
inc
jnp
jecxz
sbb
xchg
dec
or
punpckldq
pop
mov
and
cmpsl
fisttpl
push
inc
leave
push
cs
mov
outsb
sarb
pop
ja
push
clc
fldl
scas
mov
xlat
push
ret
xlat
cld
icebp
push
adc
orl
cmpl
out
lea
repnz
repnz
add
add
inc
push
push
xchg
push
imul
push
pusha
bound
cli
push
add
xor
push
outsb
dec
pusha
mov
xchg
pop
insb
aas
sub
and
cs
mov
mov
rcr
jecxz
inc
inc
xchg
push
fists
inc
outsb
and
mov
imul
add
cwtl
push
push
cs
test
mov
cmp
in
dec
add
push
pop
sub
sbb
add
add
inc
push
outsb
pop
cmp
inc
xchg
sbb
andb
into
and
mov
or
add
fcompl
pop
outsl
mov
xor
fiadds
dec
mov
ja
enter
lods
jp
jo
js
insl
mov
pop
mov
rolb
and
lock
mov
jns
test
fistpll
insl
cmp
push
add
gs
sahf
sub
push
dec
xchg
fisttpl
and
scas
mov
or
dec
sub
sub
outsb
sahf
ja
push
jl
xor
xor
jns
and
mov
in
add
call
popa
out
insl
mov
add
jmp
bnd
in
aam
int3
test
out
ss
cmc
sbb
xor
and
aaa
pop
subb
call
dec
dec
inc
and
shrb
push
push
insl
xchg
sbb
add
push
rcrb
jmp
add
or
cmc
inc
aas
pop
mov
in
imul
push
ja
gs
rorb
cmp
xchg
test
fiaddl
sub
bound
jg
dec
stos
dec
dec
push
ljmp
inc
mov
movsb
fwait
dec
add
cmpsl
repnz
sub
clc
pop
mov
mov
pushf
nop
push
std
mov
and
or
mov
add
sub
decl
adc
and
ret
adc
jmp
insb
xor
testb
push
dec
cmpb
xlat
jmp
add
inc
sbb
xor
jo
std
push
incb
movl
inc
lret
outsb
inc
cmp
mov
push
fcom
mov
push
fcomp
andl
adc
je
mov
pop
mov
mov
inc
loope
movsb
adc
or
mov
sub
sub
add
test
xor
in
mov
sbb
or
lsl
sbbl
inc
and
jmp
or
add
jl
mov
push
inc
add
xor
push
mov
scas
in
repz
nop
pop
call
pop
jns
dec
cltd
stos
adc
add
push
or
mov
clc
shll
jae
or
sub
je
mov
or
out
jle
cwtl
ja
add
sbb
in
fsubrs
es
cld
cmp
mov
jp
inc
jne
mov
lcall
test
add
mov
mov
mov
movsl
or
dec
aaa
pop
nop
andl
andb
movsl
xor
icebp
fldl
fldenv
negl
push
inc
pop
or
aas
push
nop
inc
mov
jge
cli
daa
mov
inc
xor
add
movsb
movl
repz
add
fstl
add
jecxz
and
mov
lea
les
gs
or
cmp
les
les
adcl
xchg
xchg
sub
lea
in
mov
xchg
mov
mov
pop
push
dec
push
dec
pop
inc
jns
add
push
pop
ja
mov
mov
cmpb
mov
xor
mov
lea
test
lret
jp
adc
aas
jae
mov
xor
fmul
sub
jns
dec
pop
mov
in
les
jne
enter
roll
sub
sbb
or
pop
add
xor
and
rorb
add
xchg
sub
hlt
jbe
lret
mov
repnz
push
or
xchg
add
adc
into
mov
hlt
cwtl
dec
adc
mov
bound
cmp
add
addr16
insb
stos
fcompl
add
xor
sub
bound
pop
mov
inc
out
sbb
inc
and
inc
pop
pop
push
imul
cmp
xor
imul
pop
fcoms
add
adc
je
lret
adc
mov
inc
and
jge
cmp
and
add
adc
inc
mov
or
mov
sub
or
mov
outsw
jge
xor
jmp
ljmp
jle
sarb
mov
dec
aaa
je
mov
fistps
fimull
pop
pmulhuw
jns
mov
in
imul
inc
add
sbb
fstl
xchg
leave
sub
xlat
or
pop
jmp
sub
jmp
pop
jne
sbb
jno
enter
push
lock
in
jecxz
push
or
add
add
jns
in
jmp
add
hlt
jmp
arpl
jg
pop
repnz
imul
sbb
jne
mov
mov
jo
movsb
sbb
and
insl
jb
or
adc
cmc
jno
sub
mov
xchg
mov
or
cmp
jae
xorb
repz
syscall
mov
mov
jb
sub
and
cmp
adc
test
push
add
ja
sub
dec
cmp
ja
repz
sbb
mov
jo
iret
popa
push
push
jmp
sub
loopne
inc
cmp
cli
sub
mov
lret
sub
add
lea
cmpsb
cmp
xor
dec
sub
adc
cmp
xchg
js
popa
push
cmp
sub
daa
xchg
div
cmp
sti
xchg
sbb
push
lock
into
push
and
shrb
push
lods
loopne
push
movsb
outsb
sub
push
add
lock
jmp
sub
jmp
sub
mov
pop
xor
push
pop
insb
lods
pop
xor
cmp
shrb
int
lock
or
mov
sub
pusha
cmc
mov
or
icebp
sub
dec
push
push
insb
push
sbb
mov
or
jo
add
pop
pop
inc
iret
fldcw
test
je
sti
cmp
or
dec
mov
scas
xchg
xor
ss
push
dec
push
ja
mov
daa
and
gs
jnp
xchg
vmread
and
fnstsw
rcrb
es
mov
lcall
cmp
in
push
loopne
jbe
frstor
xlat
xchg
mov
sub
inc
dec
scas
mov
mov
lcall
and
lahf
or
and
xchg
mov
and
adc
or
add
add
enter
inc
fisttpl
lock
mov
js
lock
mov
add
pop
or
fnstenv
pop
pop
jne
ficoms
jno
roll
xchg
dec
sub
aam
push
bound
inc
test
push
xchg
mov
jne
mov
push
jo
inc
mov
adc
xor
cmc
push
or
gs
pop
int
out
and
push
cmp
xchg
je
pusha
daa
mov
add
cmp
jge
push
enter
sbb
pop
cmp
sarl
sahf
push
or
iret
mov
or
add
out
aas
lods
insl
pop
xor
loop
or
jb
rcr
testl
pop
pop
inc
cmpsl
jne
cmp
cmpsl
inc
xchg
sub
pop
xor
sub
mov
inc
imul
mov
and
jne
add
pop
mov
jb
lods
add
adc
dec
xchg
lock
les
pop
fistpl
xor
int
adc
pop
aas
push
push
adc
and
lahf
popa
mov
nop
mov
test
and
sbbb
xor
and
inc
sahf
or
xor
int3
ret
mov
add
pop
dec
ja
xor
imul
dec
and
mov
xlat
cltd
mov
gs
inc
cmc
ja
nop
xchg
sbb
adc
shl
xor
mov
or
pop
or
dec
xchg
clc
cmp
call
das
incw
sbb
cmp
or
hlt
mov
es
bound
addps
les
repnz
icebp
and
icebp
xchg
int3
inc
ss
adc
inc
mov
inc
iret
enter
mov
and
rclb
sub
adc
push
dec
sub
bound
add
xchg
add
adcb
clc
and
pop
clc
and
fsubrs
cmpsl
es
bound
or
repnz
fsubl
sbb
out
and
imul
inc
sbb
xor
adc
rcr
cld
call
cmc
mov
fiadds
push
dec
pop
add
dec
sub
add
lret
mov
fstpl
mov
push
adc
jo
adc
cs
adcb
fidivrs
inc
es
sbb
sbb
xchg
cmp
sub
sbb
push
sbb
cmc
push
int3
ret
or
xchg
inc
out
jecxz
shrb
add
hlt
cmp
cmp
callw
shrb
add
cmp
sbb
mov
fdivs
shrb
pop
fld
mov
fistl
inc
popa
adc
add
mov
test
and
sub
inc
or
enter
and
add
xor
outsl
sub
cmp
cmp
adc
mov
and
pop
xchg
mov
mov
pop
in
in
jbe
decb
sub
out
add
jmp
das
push
lret
mov
push
mov
adc
mov
xlat
mov
fcomi
add
and
sub
imul
cmp
jle
mov
jmp
por
and
std
outsl
and
add
push
or
rclb
cs
mov
push
xor
push
and
pop
and
daa
sbb
xchg
call
call
flds
add
push
pop
jmp
push
cmp
and
pop
xchg
cmp
packsswb
adcb
mov
shl
jge
aad
or
xchg
loope
xchg
xlat
cmp
push
and
and
pusha
jecxz
mov
imul
daa
jp
and
lods
add
inc
pushf
dec
dec
push
in
pop
rcrb
mov
and
inc
sub
mov
pop
xchg
orl
pushf
and
inc
xorb
sub
or
inc
adc
sub
adc
sub
imul
dec
scas
pop
mov
in
sub
mov
mov
inc
and
movl
lea
add
pop
lods
sti
pop
hlt
add
dec
sub
pusha
inc
fdivrs
inc
flds
or
mov
fisttpll
xor
rorl
inc
adc
dec
cmp
or
jo
adc
sbb
xchg
je
lret
push
add
mov
pop
sbb
push
push
pop
dec
cmp
inc
xor
push
xor
push
nop
and
mov
sahf
xor
inc
mov
sbb
enter
adc
sub
or
loope
xchg
je
jns
icebp
or
nop
call
sub
and
xor
je
push
das
and
inc
nop
adc
mov
push
loopne
icebp
into
dec
lcall
js
dec
sbbb
imul
xchg
inc
loopne
test
lock
out
popf
sti
jle,pn
xchg
push
inc
je
and
mov
push
out
loopne
aas
push
es
hlt
dec
inc
lcall
cmovne
mov
and
add
cmp
insb
inc
stos
xchg
or
jmp
mov
push
sub
nopl
repz
loopne
mov
inc
pop
pop
pusha
cmp
lahf
sbb
and
xor
fldt
mov
shl
adc
pusha
sub
aas
popa
and
repz
push
aas
in
or
mov
cmp
adc
sbb
inc
push
test
sbb
push
or
mov
inc
shrb
mov
sbb
arpl
dec
xor
xor
mov
insb
mov
jg
repnz
mov
mov
fists
or
dec
cmp
cs
xchg
mov
imul
imul
and
shlb
add
dec
popa
lahf
xor
lods
test
inc
cmp
mov
les
pop
cmp
dec
jo
clc
cmpb
lods
adc
and
call
xchg
pop
leave
inc
xor
rorb
shrb
popa
sub
das
xchg
dec
add
out
imul
pop
xor
sub
loopne
inc
adc
repnz
inc
js
inc
sahf
add
ss
xchg
adc
outsb
sub
sub
pop
add
mov
inc
leave
int
pop
jle
scas
mov
push
arpl
and
jmp
push
int3
dec
lahf
shlb
mov
push
stc
iret
mov
add
das
jmp
inc
fs
enter
loope
cmp
inc
pop
imul
sub
adc
sub
pop
sbb
adc
push
sub
adc
jmp
fadd
jnp
fiadds
ljmp
ret
inc
adcb
movsb
repz
mov
andl
sub
push
dec
mov
xchg
fiaddl
sti
sbb
inc
mov
orl
test
mov
adc
adc
outsb
sub
adc
pop
sub
or
movsb
inc
cli
in
sbb
insb
mov
mov
fcmovu
push
popa
in
push
dec
xchg
xchg
xor
sahf
dec
jns
imul
popf
pop
cmp
test
faddl
push
push
les
adc
fwait
cmp
call
push
testb
xor
xchg
push
add
gs
jmp
inc
and
sbb
mov
das
cltd
es
push
mov
out
cmp
stc
out
testb
setne
mov
pushf
xor
bound
shl
fnsetpm(287
adc
shll
adc
adc
xor
or
ss
sbb
add
js
enter
inc
inc
sbb
sti
dec
add
test
out
sbb
subl
bsr
cs
js
cld
pop
push
ret
sub
pop
lret
and
xchg
and
fcompl
and
fs
or
popf
or
xchg
and
pushf
cwtl
and
pop
or
jmp
pop
lods
daa
sub
aam
leave
test
decb
cmp
mov
or
xor
jbe
nop
movsb
sbb
sbb
shll
lret
xchg
xchg
mov
andb
push
mov
test
fucomip
sbb
rcrb
movsb
sbb
xor
mov
cld
fnsave
push
xorl
cmp
cs
jge
inc
add
adc
xor
add
mov
mov
in
adc
ret
and
inc
pusha
popa
add
add
jmp
dec
and
pop
adc
rorl
int
and
mov
insb
adc
cmp
jnp
pop
pop
pop
lahf
dec
jp
mov
push
lea
add
push
mov
adc
inc
add
rorl
jmp
stos
imul
sbb
add
cmp
mov
xor
cwtl
leave
xchg
xchg
loop
mov
mov
orb
sbb
popl
mov
loopne
adc
push
push
mov
inc
xor
sub
adc
sub
clc
movsb
fadds
xchg
mov
addl
or
jp
les
enter
xlat
es
and
and
das
xlat
hlt
sarl
mov
adc
rol
fdivrp
or
xchg
data16
xor
insb
pop
in
pop
add
sarb
pusha
sub
icebp
mov
jle
add
shlb
push
cmp
ret
rolb
mov
rclb
shlb
jne
or
mov
mov
push
ja
jge
inc
ss
fdivs
and
pushl
xor
sub
cs
outsl
push
insl
int3
loop
cmp
mov
shlb
adc
xchg
fdivr
mov
ljmp
fs
dec
in
mov
adc
inc
sbb
shll
adc
ret
jb
ljmp
add
icebp
jecxz
repz
shrb
pop
mov
or
xchg
lahf
sbb
dec
fistpl
dec
out
mov
sub
cmc
imul
cmp
pop
lods
mov
dec
or
int3
scas
adc
add
sbb
lret
or
into
movb
pop
sbb
add
adc
cmp
test
gs
adc
test
test
inc
add
das
dec
sbb
sub
sub
sbb
aas
sahf
adc
xchg
rorb
movsl
add
sbb
cmp
mov
adc
jmp
mov
xchg
loope
out
add
icebp
gs
jne
sbb
xchg
jge
push
mov
mov
insb
popf
inc
inc
mov
int3
add
xor
pop
test
mov
fisubl
pop
int3
sub
orl
jo
cmp
and
roll
push
cmp
jg
popf
icebp
adc
jbe
mov
xchg
inc
mov
add
fwait
or
popa
push
dec
cmp
ljmp
push
ficoms
adc
push
adc
ret
dec
xor
xchg
cs
push
dec
or
inc
dec
inc
ja
daa
movb
jg
fldcw
mov
imul
shl
fdivl
push
cmp
test
jne
add
push
lcall
bound
addl
clc
dec
cmpsb
jnp
jae
fisubl
dec
xchg
and
mov
jmp
pop
sub
sub
xchg
js
push
or
out
push
sub
int3
lahf
push
or
imull
int3
inc
sbb
sbb
jecxz
in
test
add
cmp
std
and
dec
loope
mov
jb
pop
pop
mov
test
and
pushf
adc
xor
or
sbb
cmp
shlb
loopne
mov
insl
xadd
push
pop
iret
xchg
out
ret
cmp
aam
add
inc
xor
jnp
adc
adc
mov
lds
fcomps
sbbb
movsl
pop
push
or
in
movsbl
pusha
or
and
sub
fs
adc
pop
mov
xor
add
inc
aam
mov
push
fdivrs
and
aam
leave
fsubl
loopne
push
xsaves
addl
sub
xchg
pop
add
and
mov
add
fs
or
fucom
mov
jnp
inc
mov
je
repnz
add
add
push
dec
jmp
sbb
or
movsb
push
fadds
loop
fdivs
adcl
cmp
pop
cmp
add
mov
and
ds
inc
add
les
and
in
xor
pop
loopne
cmp
add
and
call
push
sub
mov
cmp
dec
sbb
jns
adc
inc
or
decl
add
rcll
add
test
xor
jb
add
jmp
push
jg
sbb
add
lret
or
test
and
fisttpl
mov
xor
cmp
cmp
gs
push
or
jae
pop
xchg
pop
ja
add
add
popf
test
mov
or
mov
mov
xor
out
pop
inc
jp
addb
fistl
cltd
sbb
add
int3
xchg
ret
mov
xchg
push
ss
mov
xchg
out
addb
sbb
inc
xchg
dec
mov
jno
push
les
xor
jno
sub
cmp
movb
jnp
cmp
pmaddwd
jg
push
sbb
aam
pop
adc
aaa
xor
dec
add
inc
fdivs
loopne
sahf
mov
lret
push
push
push
push
add
mov
inc
lock
imul
popf
dec
je
push
xchg
test
movsb
inc
inc
lock
sbb
cmpsl
or
push
sbb
add
adc
in
dec
fstp
or
jae
xor
inc
xchg
xor
loope
mov
xchg
dec
es
arpl
repz
and
fisubl
or
xor
stos
xchg
arpl
adc
ret
push
cmp
lea
push
ret
xor
push
jmp
mul
test
daa
and
mov
out
fsub
sbb
jb
cmp
xlat
mov
leave
add
cmpsb
scas
loope
imul
sub
lea
shlb
scas
fldl
mov
lret
adcb
push
sbb
fucomp
pop
jmp
xor
sbb
cmp
or
mov
mov
or
xor
mov
repnz
js
inc
inc
in
clc
push
dec
add
or
xchg
push
test
emms
mov
lods
sub
xchg
dec
or
add
cmp
imul
inc
add
fstps
push
mov
mov
jne
jmp
mov
pushf
test
cmpsl
ret
xlat
mov
shlb
push
and
or
inc
rorl
mov
lret
add
dec
sub
fcom
and
lret
fs
adc
mov
movsb
xchg
mov
adc
ja
cwtl
push
and
dec
das
das
shlb
mov
lea
jl
xlat
dec
push
adc
add
rolb
add
lcall
or
call
pop
inc
add
inc
xchg
popf
nop
inc
cld
push
add
sub
mov
sbb
test
dec
inc
cmpsb
arpl
aad
cld
mov
push
jno
add
clc
test
in
adc
jmp
push
inc
out
in
adc
divb
add
push
test
mov
test
pushf
popf
testb
push
sub
addr16
mov
or
jmp
orl
push
cmp
enter
xor
adc
pop
ficoml
mov
in
in
inc
jmp
popf
lock
repz
daa
push
or
push
movsb
push
mov
pop
adc
push
push
adc
push
mov
adc
mov
add
imul
inc
cld
clc
adc
cmpsb
scas
leave
jecxz
or
aaa
cld
or
inc
rcll
pop
lods
adc
inc
shrb
add
aaa
xor
add
dec
loope
sarb
cmp
cmp
xor
mov
setg
jl
sbbl
cld
dec
mov
out
ljmp
popf
jae
das
stos
and
add
add
push
push
or
ds
in
ss
inc
in
popa
rol
aas
jns
inc
jg
inc
xor
or
dec
es
sub
into
out
jb
sub
cmp
or
dec
cmp
mov
mov
inc
jo
std
es
pop
inc
popa
xchg
sti
adc
jge
or
lret
enter
pusha
adcb
iret
inc
dec
outsb
dec
push
push
lock
inc
xchg
lock
popa
lock
or
pop
aam
adc
inc
stc
cmp
or
addr16
aas
mov
inc
mov
cmp
sub
and
call
push
add
and
loopne
xchg
rorl
mov
pop
daa
shll
inc
nop
inc
or
push
leave
or
add
add
adc
iret
jo
inc
outsl
es
xor
loope
mov
jns
popf
jl
add
clc
mov
aas
xor
inc
sub
cmp
inc
push
add
cmp
or
jge
cmpb
test
inc
or
sub
push
push
test
inc
xor
rclb
call
mov
inc
add
xchg
insb
lock
stos
sbb
popa
int
adc
add
or
push
xchg
call
inc
add
inc
add
xchg
pusha
adc
std
sbb
cmp
add
je
push
into
lods
call
lock
mov
push
sbb
shlb
int
pop
fistps
pusha
cmp
rorb
jecxz
inc
sub
inc
adc
push
cmp
adc
fadds
sarb
das
add
pop
or
adc
or
lret
subb
test
ja
push
add
cvtdq2ps
mov
fidivl
xor
xor
add
adc
std
cmp
inc
data16
dec
sbb
sbb
ret
inc
or
dec
lret
adc
mov
ret
mulb
jl
sub
pusha
push
push
jnp
lock
loopne
inc
jmp
cmpw
pop
pusha
and
jae
xchg
inc
outsl
iret
daa
push
pop
cmpsb
mov
nop
or
jl
or
cwtl
or
aaa
int3
push
daa
jecxz
push
cmp
ljmp
mov
movb
push
seta
add
orb
clc
inc
arpl
adc
fwait
dec
lea
sarl
jmp
ret
mov
inc
fstpl
inc
sub
testl
dec
cmp
add
sub
push
push
je
xchg
cmp
mov
xchg
movsl
mov
daa
inc
push
adc
push
imul
jge
cwtl
jecxz
xchg
xchg
in
inc
lahf
push
scas
sub
or
lahf
pop
xchg
sub
fdivrs
mov
je
push
mov
ret
sub
xor
inc
repnz
mov
or
inc
cmp
mov
cmp
mov
stc
sub
push
adcb
inc
add
cmp
mov
repnz
lock
cli
cld
data16
clc
shl
sub
push
scas
sub
call
pop
push
loop
mov
rcrl
xchg
shlb
ljmp
add
in
imul
out
xchg
popl
push
push
out
and
jbe
sbb
ss
ret
inc
cmp
pop
xor
sbb
stc
and
push
push
sub
iret
pop
and
and
pop
inc
xor
shrb
and
rclb
dec
loope
nop
mov
lret
pop
xlat
and
and
movsb
gs
lret
jmp
dec
fsubs
fndisi(8087
xchg
or
add
mov
push
inc
rolb
add
xchg
and
jecxz
mov
sbb
and
mov
add
popf
imul
inc
and
push
test
push
cli
ffreep
stos
sub
mov
ja
data16
and
pop
dec
push
fidivrl
and
loop
xor
inc
js
daa
adc
push
aam
hlt
xchg
aam
jmp
fisttps
push
jmp
xchg
and
ret
sbb
rcrb
ds
daa
leave
mov
ss
jb
das
and
ja
mov
sbb
xlat
inc
push
lea
cmpl
push
je
mov
rcrb
pushf
xlat
out
clc
ss
jne
insl
or
sbb
ret
cltd
jmp
mov
and
mov
cltd
cmp
sbb
or
mov
inc
stos
mov
adc
add
lret
lahf
iret
adc
push
xchg
jge
push
or
pusha
add
cmp
and
icebp
iret
pop
push
dec
inc
sub
or
subl
push
pusha
push
pop
sahf
mov
pop
or
xchg
sbb
leave
mov
and
pop
or
dec
xor
or
pop
std
push
test
mov
sub
push
push
xchg
jnp
inc
inc
adc
jp
mov
repnz
push
inc
add
dec
dec
jae
sub
in
jae
mov
pop
pop
and
dec
jg
xor
adc
cs
rcpps
cwtl
sub
add
add
sbb
imul
or
aad
pop
idiv
ret
pop
jns
or
nop
fwait
push
cmp
push
jne
int3
and
or
rclb
mov
cmp
and
pushf
inc
imulb
outsl
and
insb
or
data16
lret
jae
sbb
mov
cmc
mov
jne
loopne
sbb
inc
mov
dec
sub
rorb
or
lea
testb
pop
das
push
push
push
jb
and
sbb
loope
sbb
mov
cmp
sbbb
inc
inc
add
sbb
fstpt
cmpb
pop
push
inc
in
pop
aas
sahf
adc
rcrl
ds
lock
adc
sub
push
fildll
nop
lret
aam
cmp
sbb
mov
push
inc
orb
add
pop
add
cmp
jae
cmp
mov
jns
pop
or
pusha
or
loopne
je
ret
lcall
and
add
push
xchg
and
hlt
loopne
push
add
xlat
les
fwait
scas
out
jae
ljmp
icebp
jne
inc
push
pop
or
push
adc
and
fcmovnb
aam
inc
cmp
pop
or
cmp
addb
data16
xchg
push
scas
pop
js
aaa
and
pusha
sub
or
sub
scas
mov
jg
mov
add
sbb
add
push
push
or
insl
xchg
xchg
cmpsl
push
xor
int
in
movsl
ret
lock
pop
inc
lcall
imul
imul
insb
xor
add
aas
mov
xchg
daa
sub
cld
dec
jle
add
fs
xor
xor
mov
icebp
pop
cmp
enter
faddp
int
xor
aaa
jnp
mov
and
pop
or
fdivs
fstp
fbstp
add
push
add
and
inc
or
imul
inc
inc
sbb
lods
pop
adc
pop
cli
enter
or
or
push
xor
ret
push
arpl
mov
es
jns
or
push
test
jae
ret
fldenv
jmp
dec
cmp
mov
pop
jb
xadd
jns
pop
push
sar
insb
xor
nop
mov
clc
pop
and
fnstenv
push
sti
js
daa
mov
rcpps
hlt
add
adc
cmpsl
adc
scas
lods
inc
fisubl
shld
pop
out
push
out
test
loope
push
cwtl
insb
push
loope
jne
inc
in
nop
xlat
dec
lea
shlb
push
mov
lret
loope
xor
stos
sub
mov
add
js
or
rorl
mov
cmp
scas
jo
sarb
push
js
adc
push
mov
sbb
mov
jb
mov
pop
frstor
adc
sub
xor
xor
jle
filds
ret
and
dec
and
lahf
ficoml
add
cmp
jle
into
mov
pop
fldl
xor
std
mov
or
push
dec
pop
dec
jmp
mov
jne
gs
and
xorl
push
incl
add
jb
pushl
fs
cmp
jg
mov
push
or
dec
cmpsb
rolb
adc
inc
pop
pop
jne
adc
xchg
sti
push
adc
mov
push
and
mov
mov
and
inc
pop
add
pop
aad
sbb
cs
jge
loope
push
inc
add
mov
pop
push
ret
dec
ret
movsl
fwait
and
and
nop
dec
add
out
or
adcb
mov
loopne
inc
or
xor
adcl
mov
test
fs
pop
test
and
xor
hlt
and
sbb
cs
sub
push
je
pop
shl
adc
pop
jmp
add
jb
das
rcrl
in
mov
daa
jmp
dec
add
pop
in
dec
cmp
loopne
jl
push
jne
mov
and
add
test
mov
add
gs
aad
scas
add
sub
sbb
jmp
pusha
cwtl
xchg
and
add
out
add
jns
test
adc
sbb
iret
mov
xchg
idivl
xchg
jne
add
adcl
pushf
and
sub
rolb
aas
mov
cli
sbb
je
mov
and
leave
sub
add
sub
sbbl
dec
fldt
cmpsl
pop
and
mov
lea
jne
cmp
mov
push
pop
popf
add
lods
pop
repz
or
test
lods
das
sub
cmp
xor
dec
mov
xchg
jecxz
xchg
popa
insb
jae
icebp
aam
rorb
adc
icebp
repz
xor
decb
jne
pop
cmp
mov
je
push
sub
pushf
adc
subl
mov
sbb
or
or
push
aas
hlt
out
lret
test
push
pop
push
or
sbbl
jbe
sbb
lock
or
insb
xchg
sbb
xor
dec
imul
sub
cwtl
in
inc
push
fsqrt
clc
fisttpll
jmp
lret
jne
inc
ret
dec
ror
sahf
scas
inc
add
push
inc
insl
leave
les
adc
dec
adc
jns
or
loopne
out
xchg
int3
sbb
sbb
ret
and
nop
int3
cmc
add
jb
jbe
mov
shl
cmp
pushf
xchg
jle
inc
or
shrb
clc
sbb
xlat
rcll
cmpsl
add
je
push
dec
mov
dec
test
and
mov
mov
mov
add
and
sub
cs
sahf
and
add
popl
pop
pop
sub
sub
xchg
sub
jo
mov
sbb
add
testb
push
mov
jbe
dec
mov
mov
push
ret
sbb
in
out
lds
push
mov
or
adc
incb
sbb
and
xchg
pop
sub
push
testl
pop
fnstcw
push
orb
nop
mov
push
negl
and
add
insl
xor
or
icebp
daa
sub
mov
rcrb
fsubrl
mov
push
jo
adc
sub
ret
push
stos
inc
and
ljmp
xor
and
jmp
subb
inc
jne,pn
pusha
pusha
add
fbld
xchg
or
inc
push
sbb
sbb
xor
add
or
sbb
or
lock
arpl
aad
pop
insl
push
cmp
popf
dec
std
cwtl
das
pop
xor
push
push
cltd
jb
and
mov
cmp
test
adc
sub
mov
jmp
iret
dec
jge
inc
aaa
push
jge
sbb
popa
lahf
aam
push
aad
inc
add
adc
mov
pushw
mov
fucomi
xchg
adc
aaa
add
cmp
jle
aas
pop
push
and
out
fwait
sbbl
or
and
xchg
push
push
add
xor
add
push
mov
arpl
shlb
negl
addr16
and
aas
das
jae
push
or
adc
pop
in
inc
das
nop
pushf
in
mov
lea
dec
dec
cmp
out
sub
pop
shufps
dec
adc
sub
cs
mov
enter
addl
imul
mov
stos
arpl
testb
pop
out
xor
cmp
or
out
push
adc
dec
add
int3
pop
xlat
std
enter
sar
test
jge
mov
ret
mov
push
cmp
ud2
lea
and
xchg
or
push
cmp
stc
adc
enter
inc
fdivs
idivl
xchg
fldt
mov
mov
test
je
cs
fld
sbb
mov
or
sbbl
hlt
out
mov
adc
data16
incb
or
jmp
push
xor
test
andl
clc
sub
adc
fs
fadds
lods
movsb
movsl
xchg
xchg
inc
daa
sub
dec
bound
sub
push
cmp
inc
sbb
jl
testl
cmp
xor
movsb
insb
mov
je
and
dec
xchg
mov
jne
fwait
mov
inc
shl
psubq
cltd
mov
loope
pushf
cmp
push
in
adc
outsb
mov
add
cmpsb
mov
test
xchg
mov
call
lods
imul
call
mov
xor
sbb
outsl
xor
outsb
jb
adcb
mov
and
cmpb
adc
hlt
xor
icebp
xchg
roll
pushf
jge
outsb
jno
cwtl
nop
in
hlt
iret
rorb
bound
stos
rorb
push
iret
pop
or
push
jmp
movsb
add
push
inc
scas
cwtl
pop
fucom
and
mov
push
add
or
add
test
sahf
xor
push
je
js
stc
and
lahf
xor
aam
imul
nop
loop
orb
mov
pop
je
pop
dec
xor
sub
adc
mov
sbb
faddp
fisubrl
dec
mov
mov
xor
push
xchg
push
ja
andl
sbb
or
cmp
xor
stc
mov
add
cmpl
jle
add
pop
mov
or
add
adc
in
sub
mov
lods
out
mov
mov
mov
icebp
outsl
pop
add
push
push
pop
cltd
dec
dec
sbb
insl
das
aad
mov
jp
cmc
xor
or
shlb
sub
jne
inc
ret
mov
mov
pop
fldcw
add
adcb
cmpsb
lock
in
xor
pop
or
cmpl
push
jecxz
std
inc
sub
push
clc
jae
imul
lcall
dec
adc
in
mov
jmp
fmul
insb
sbb
mov
sbb
pop
add
aam
daa
add
xor
out
in
add
mov
push
mov
mov
roll
rclb
mov
and
or
outsl
movb
fsubr
repnz
jmp
cmp
je
loopne
sub
dec
inc
or
jle
outsl
dec
xor
add
mov
and
rclb
cmp
push
cld
mov
or
or
pop
or
mov
and
mov
rcrl
daa
into
movsl
push
sub
mov
mov
mov
decb
adc
pop
jmp
mov
insl
add
sarb
scas
adc
mov
outsb
and
testl
scas
mov
cs
jle
out
push
and
ret
out
fdivrl
adc
leave
rol
ficomps
int3
add
lcall
clc
mov
clc
fdivr
fcom
push
sub
mov
xchg
dec
movsl
or
or
add
fsubs
pop
jmp
cld
stos
cmp
and
shlb
add
or
mov
cmp
and
xchg
cmpsb
pop
push
fmull
or
fcmovbe
insl
sbb
xchg
cmp
clc
dec
fstl
sbb
mov
rorl
or
xor
hlt
repz
pop
xor
add
add
push
push
sbb
ss
mov
add
xchg
and
add
dec
popl
in
das
add
jo
adc
inc
sbb
fs
mov
sub
pop
inc
call
inc
xchg
jge
dec
inc
cmp
popa
inc
push
dec
lods
mov
arpl
arpl
add
jae
outsl
add
or
jne
int3
notl
fnstcw
push
jbe
rorb
js
xor
push
mov
jbe
dec
ljmp
dec
add
pop
xchg
mov
sub
js
imul
jge
sub
pushl
ljmp
sub
lods
fildl
mov
loopne
jne
test
jb
sub
adc
ret
xor
add
jl
mov
cld
add
or
jecxz
push
sti
sub
sub
push
cmpsb
add
int3
push
daa
js
cs
out
cmpsb
jnp
add
loopne
or
hlt
add
xor
xchg
add
das
cmp
dec
daa
add
call
fimull
xor
inc
fdivl
mov
adc
shrb
sbb
ret
dec
rolb
div
sbb
rolb
push
adc
aaa
xor
lcall
mov
add
jg
dec
cmpsl
nop
in
hlt
xchg
jne
ficompl
xchg
adc
add
xor
jecxz
inc
arpl
jecxz
push
cld
pop
sbb
test
les
add
inc
test
mov
shlb
jne
sarb
or
les
pop
xorl
inc
push
insl
pusha
adc
dec
sarl
in
jnp
lret
mov
ret
int3
mov
inc
ljmp
sub
adc
int3
movsl
xchg
rorl
loope
enter
sbb
mov
sahf
lret
sub
mov
dec
xchg
testb
push
mov
fisubrl
or
movsb
mov
cli
repz
pop
mov
fwait
xchg
or
mov
and
rolb
sbb
pop
outsl
adc
or
ret
lcall
fidivrs
inc
xchg
xchg
xor
les
adc
clc
add
and
mov
dec
repnz
sub
in
outsb
sbb
xchg
xchg
nop
les
xor
dec
push
push
push
jns
mov
pop
mov
jecxz
or
pop
aam
adcb
jne
mov
sbb
or
popa
mov
cmp
mov
xor
lret
loope
jle
add
xor
loope
sbb
add
cmp
fistpl
or
in
adc
and
shlb
fiadds
add
in
or
and
push
or
out
or
imul
pop
rclb
dec
jnp
cmp
imul
push
pusha
loop
test
test
ss
jecxz
loopne
inc
sbb
inc
adcl
imul
xor
or
dec
push
push
and
fs
push
xlat
sub
dec
xor
add
mov
jne
out
mov
mov
std
adc
mov
push
xlat
or
outsb
lret
iret
addr16
jns
inc
cmpsl
add
lods
out
cmp
mov
nop
push
or
adc
mov
mov
popa
xor
dec
loope
mov
inc
jns
or
add
gs
fisttps
push
shll
cmp
shlb
mov
shll
or
push
call
inc
int
fbld
imul
mov
push
inc
lcall
das
sbb
repnz
inc
data16
or
inc
xchg
add
dec
insl
xorb
sbb
mov
push
and
rolb
mov
je
faddl
int
es
sti
call
mov
xor
sbb
nop
dec
sarl
rolb
ja
pusha
sub
pop
subl
sub
sbbb
push
lea
movsl
pushf
aam
jge
push
pop
rorb
je
psubusw
add
push
add
sub
mov
sub
sbb
inc
pop
dec
xor
jg
sbb
xchg
mov
out
inc
cmpsl
or
ja
or
adcb
test
addb
fwait
cmp
xor
outsl
mov
sti
sbb
sbb
addb
cmp
push
scas
sub
leave
pop
and
sub
add
aaa
push
add
and
pop
test
and
xor
pop
fldl
push
adcl
orb
add
mov
imul
pop
rclb
or
xchg
pusha
push
hlt
add
out
jne
add
inc
pop
sbb
or
in
mov
xchg
push
cltd
or
movsb
pop
add
popa
stos
enter
lods
ds
clc
add
add
pop
mov
adcb
dec
pop
imul
inc
push
add
cmpl
je
xor
sub
add
daa
or
inc
jb
jmp
or
or
mov
fwait
movsl
lahf
fbld
repz
cmpb
pusha
push
pop
mov
pop
imul
cs
dec
push
clc
js
iret
add
push
sbb
cmp
xchg
jb
dec
loopne
inc
xchg
pop
xor
test
pop
out
pop
xchg
hlt
cld
jl
push
mov
add
push
sbb
movsb
adc
clc
adc
mov
loopne
mov
or
dec
jge
sbb
cltd
or
lods
int3
mov
enter
rolb
add
adc
clc
sub
cmp
xor
jns
sub
jb
in
rcl
call
imul
push
arpl
dec
fwait
mov
xor
dec
mov
data16
push
sub
inc
cmpl
jbe
cmc
push
sub
cmp
setl
adcb
cmpl
mov
add
xchg
in
push
sub
sahf
or
in
dec
adc
inc
sub
mov
sahf
sub
mov
cmpsb
or
lcall
mov
and
add
adc
int
and
fnstenv
rorl
add
loopne
lock
pop
call
sbb
push
out
int3
mov
sub
lock
dec
or
fildll
test
xor
push
or
mov
daa
inc
adc
or
sti
inc
push
pop
loope
jmp
dec
mov
scas
inc
sbb
adc
testl
aas
daa
cmp
mov
mov
popa
iret
ds
add
jnp
xchg
ret
cmp
xor
and
rclb
aad
insl
lea
mov
fcmovne
lock
inc
aaa
orl
cmp
sbb
or
lods
loope
in
pop
arpl
push
test
pop
clc
bound
xor
xlat
popa
je
mov
lds
loope
and
fcomps
xor
sbb
push
push
inc
mov
push
fs
mov
add
dec
imul
cmpb
and
mov
push
js
push
clc
xor
adc
pusha
popa
jbe
xchg
pop
jp
insl
xchg
inc
faddl
sbb
insl
enter
inc
ficoms
ljmp
std
cmp
ja
je
pop
or
subl
xchg
stos
scas
add
inc
insb
repz
push
outsb
dec
notl
imul
adcl
sbb
iret
and
fldl
adc
movsl
or
push
lock
sbb
rol
jbe
divl
js
aam
sub
add
add
cmp
fcompl
and
inc
push
lds
push
xchg
fwait
jl
daa
inc
mov
xchg
pop
repnz
sub
lds
xorb
in
insb
aas
add
pop
add
movsb
mov
adc
stc
jo
add
xor
shrb
cmp
or
addr16
inc
enter
mov
push
push
mov
jle
add
pop
jmp
mov
jno
jns
sub
mov
mov
or
jo
mov
js
fs
adc
cmp
and
data16
mov
clc
mov
fiaddl
test
jg
inc
adc
sub
testl
and
test
push
ljmp
push
push
mov
aaa
push
mov
mov
jp
adc
and
ret
push
inc
addb
add
adc
sbb
sub
cmpsb
xchg
ret
jnp
xchg
and
enter
inc
xor
dec
mov
cmp
jne
sbb
adc
jmp
dec
push
rorl
imul
jecxz
inc
sbb
add
pop
addr16
jne
ja
push
adc
adc
add
mov
ret
xchg
pop
jb
nop
fwait
sarl
jnp
lcall
inc
dec
inc
pop
and
sbb
addb
repz
cmp
dec
ret
insb
or
adc
adc
sub
dec
mov
jmp
call
call
aaa
shl
ljmp
cmp
imul
push
or
lock
add
adc
ffreep
subl
add
xchg
adc
and
push
adc
adc
ss
pop
adc
imul
add
fs
int
shlb
lret
dec
jne
daa
cmc
push
cwtl
pop
pop
leave
pop
ret
and
xchg
daa
sbb
dec
subl
adc
test
xor
pop
inc
mov
loope
cmp
sar
cld
mov
outsl
inc
pop
js
xchg
cmpsl
inc
cmp
pop
cmp
pop
lea
rolb
mov
in
ret
push
add
push
xchg
cmp
xchg
or
xor
movb
dec
mov
movsl
xchg
in
sahf
cmpsb
add
lods
pop
ficoms
sub
ret
jnp
pop
cmp
add
dec
and
cmp
insb
push
test
ja
icebp
cmpsl
pushf
push
adc
mov
adc
fdivrs
lock
and
adc
jecxz
push
or
sbb
pop
or
adc
jo
imul
mov
mov
ljmp
jl
imul
push
push
or
je
cmp
add
mov
jo
mov
push
dec
lcall
mov
sub
mov
pop
fstps
fwait
add
mov
inc
bound
mov
push
pop
call
push
jns
mov
lock
jle
data16
sub
cmpsb
or
pushf
inc
mov
cli
mov
mov
add
mov
xor
ret
push
dec
cmpsl
sbb
pop
imul
mov
sbb
adc
je
jle
mov
sbb
and
push
push
divb
pop
nop
mov
mov
jns
iret
mov
sbb
pop
sbb
dec
or
lret
push
mov
jnp
add
testl
repnz
cmp
or
bound
cmp
jp
ret
jns
fcomp
add
scas
clc
or
popa
pusha
jae
rclb
pop
adc
lods
mov
jae
rsqrtps
and
cmp
sbb
or
or
pusha
pusha
xor
std
fwait
stos
pop
out
jo
sti
jnp
cmp
lea
mov
cld
gs
jg
sub
mov
and
pop
inc
mov
rorl
cmp
cmp
sub
adc
test
adc
pop
sbb
pop
das
sbb
mov
or
bound
sbb
and
inc
adc
fisttps
sbb
outsb
inc
add
cld
mov
incl
insb
out
or
js
add
popf
movsb
mov
add
iret
xor
xor
cmc
test
rol
pop
clc
add
mov
xlat
test
pop
aaa
or
mov
jg
push
cld
add
fs
xchg
loope
push
fisttps
jp
pop
mov
jnp
add
push
aam
and
xchg
pop
mov
dec
out
xchg
xchg
xor
xor
cmp
pusha
dec
and
add
es
jmp
sbb
jge
cmp
xchg
and
lds
dec
mov
dec
loopne
push
addr16
mov
sub
dec
arpl
notb
or
int3
or
mov
test
fs
mov
pushf
push
insl
adc
imul
push
add
pop
mov
mov
mov
pop
outsl
sub
sbb
pushf
and
dec
iret
mov
adcl
loopne
push
lea
adc
movsl
jbe
mov
ja
dec
mov
push
stos
out
aaa
push
fs
push
pop
das
fsubrs
scas
mov
sbb
aad
xchg
dec
test
inc
push
sub
dec
add
in
dec
sub
dec
push
jnp
cmp
adc
or
add
vmread
sub
xor
pop
jnp
inc
mov
push
add
ret
sub
lcall
or
xor
adc
push
mov
idivl
add
sbb
push
xchg
in
jp
sbb
lods
je
xchg
jno
jge
notl
test
sbb
bound
fnstcw
pop
fadds
fs
dec
push
fsubrp
or
push
push
nop
xlat
scas
sub
inc
dec
dec
scas
pop
mov
sub
dec
loopne
and
inc
rolb
int3
or
pop
and
jo
cli
and
or
sbb
jbe
cmp
insl
insb
jmp
gs
test
or
mov
inc
dec
inc
add
lods
test
sarl
test
orb
sub
ja
push
test
push
sbb
push
cmpsb
in
or
or
or
das
js
cmpsb
sbb
cmp
or
pop
adc
xor
ja
jo
dec
shll
js
jmp
jbe
adcb
daa
sbb
or
orb
sub
dec
imul
int
or
inc
test
add
push
out
test
and
push
dec
shll
xchg
jmp
sub
mov
pop
lock
out
sub
adc
ret
push
and
mov
sbb
lret
sbb
adc
cld
push
mov
pushl
loopne
loopne
jp
cmp
and
add
adc
xchg
adc
dec
cmp
add
cmp
sub
pushl
mov
dec
sub
cmp
daa
lret
push
jge
and
cmp
fucomip
popa
adc
dec
or
clc
outsb
ja
sbb
push
xchg
jg
idivb
imul
and
sub
dec
jnp
inc
add
ret
or
add
call
fstl
gs
fiadds
ss
add
push
lock
sbb
xor
pop
sub
jmp
insb
leave
gs
push
sub
nop
or
adc
cmp
fdivs
sub
cmpsl
pop
mov
clc
jne
inc
das
rorb
pop
pop
das
and
jbe
adc
mov
lock
xchg
add
add
nopl
in
push
dec
pop
and
aad
clc
mov
pop
mov
mov
inc
leave
jne
jmp
lcall
or
sbb
inc
pop
mov
jne
sbb
shll
xor
pusha
adc
xorl
add
add
add
push
mov
jmp
call
lods
jge
push
hlt
adc
push
dec
orl
inc
or
testl
ds
add
jge
xor
push
hlt
movsl
subl
inc
test
mov
pop
dec
daa
mov
arpl
je
inc
loopne
push
sbb
pop
sub
cmp
or
xchg
adc
push
jle
sbb
fcmovu
outsb
xor
mov
add
in
rcr
mov
je
add
ficompl
call
ds
xor
jl
sub
pop
push
push
sub
flds
mov
sub
test
mov
adc
daa
and
dec
xor
mov
lea
mov
pop
cmp
leave
test
lock
sbb
jb
repnz
pop
lock
lea
mov
push
pop
hlt
cld
je
xor
loopne
mov
test
movsl
adc
lods
push
rclb
add
xor
lea
fcmovnu
xor
and
sub
sbb
adc
std
adc
adc
js
test
das
cmc
and
or
and
adc
aam
loop
out
mov
jbe
insl
mov
mov
into
push
mov
push
pop
jle
sub
adc
mov
inc
jge
data16
in
sbb
sub
daa
mov
leave
push
xor
jge
inc
sbb
lods
mov
repz
jns
sahf
lods
jno
pmuludq
mov
adc
jb
or
mov
or
mov
movsb
lcall
add
in
insb
popa
rorl
movl
pusha
xor
andl
lock
adc
test
jo
xor
out
jecxz
cmp
fadds
pop
gs
add
test
xchg
lea
gs
sbb
adc
adc
sahf
and
and
fcoms
dec
or
xchg
mov
xchg
adcb
add
dec
and
cmpsb
popa
aaa
stc
cmp
insb
fmuls
inc
ds
testl
push
xor
adc
int3
mov
cmp
outsb
sbb
mov
inc
jb
jo
out
pop
inc
cmp
ss
or
or
xor
dec
scas
or
xchg
test
mov
ret
mov
pop
test
xor
push
push
cmpsb
and
pop
or
add
add
inc
and
lcall
mov
inc
xor
pop
js
mov
sub
or
sub
adc
mov
das
or
loopne
jmp
push
aaa
add
rcr
jns
and
add
add
and
movsl
adc
ret
push
jns
inc
or
push
adc
and
inc
inc
sbb
sub
cmp
clc
cs
scas
adc
and
xchg
cmp
jne
sub
dec
bound
imul
add
lret
insl
fcomps
ljmp
lret
xor
add
mov
dec
cwtl
sbb
in
pop
and
dec
je
je
lock
adc
add
dec
mov
xchg
loopne
nop
insb
scas
lret
bound
in
stc
pop
sbb
les
sub
in
clc
ds
repz
pusha
inc
push
push
or
add
push
cmpsb
xchg
lret
xor
and
andb
ret
pop
mov
xor
pop
int3
leave
dec
jnp
pop
or
jo
xchg
or
enter
xor
subb
leave
dec
cwtl
push
fbld
xchg
or
sar
jns
subl
push
adc
dec
sub
dec
dec
xchg
mov
sub
fs
jne
add
push
mov
iret
hlt
add
imul
std
clc
mov
inc
sti
pop
daa
or
divps
test
ret
fcoms
in
and
lahf
into
mov
and
push
pop
push
outsl
sbb
or
sbb
pop
call
leave
sbb
out
cmp
pushf
fdivrs
mov
mov
call
stos
mov
fs
mov
lcall
xor
mov
adc
dec
add
hlt
gs
dec
cmp
sub
adcb
test
and
pop
daa
loopne
orb
inc
mov
addr16
lock
xor
pusha
and
popf
xor
jmp
stos
pop
or
adc
xchg
sub
dec
push
push
test
lock
mov
or
push
jne
clc
in
rclb
jne
add
mov
cmp
push
push
in
push
dec
sbb
pushf
out
sbb
jb
das
jb
xchg
push
rorb
das
divl
xchg
out
push
adc
out
jle
jecxz
test
test
adc
push
jb
mov
cmpl
and
or
or
pusha
sub
pop
pop
pusha
daa
jle
outsb
out
dec
xor
repz
inc
js
dec
roll
adcl
or
loope
shr
daa
cmp
jecxz
pop
mov
inc
pop
inc
sbb
mov
or
fstpt
push
ja
inc
mov
or
int
and
inc
lock
test
out
ja
mov
cmpsb
jle
leave
inc
fs
jo
loope
std
rclb
cmc
sti
mov
cmp
pop
insl
xlat
sbb
adc
stos
lods
imul
adc
add
mov
jae
popf
jmp
pop
cmp
pop
push
push
adc
lret
sbb
xor
inc
cmp
pop
ret
inc
dec
or
pop
xor
xor
pop
and
add
inc
cli
ret
pushf
dec
push
jne
push
sub
add
lret
push
dec
loopne
out
inc
cs
sub
les
push
call
ret
add
mov
push
lret
pop
xchg
imull
inc
in
clc
push
pop
test
lahf
nop
jmp
jle
add
lods
rcr
mov
faddl
xchg
xor
pop
subl
stos
imull
scas
adc
arpl
xchg
adc
and
add
mov
and
aaa
fadd
mov
or
inc
and
xchg
jl
cli
hlt
frstor
pop
or
incb
cltd
add
leave
repz
daa
lea
stos
inc
mov
lea
xchg
jl
mov
adc
add
shrb
adc
xor
sbbl
sbb
addl
popf
cld
cmp
imulb
adc
add
cmp
pop
inc
pop
dec
or
jge
sub
push
mov
and
movsb
cmp
scas
es
or
xchg
xchg
push
out
or
lcall
loop
xchg
sbb
arpl
stos
movsl
dec
out
jmp
adc
push
mov
hlt
mov
dec
mov
push
inc
or
push
sbb
dec
mov
repnz
stos
call
pop
divb
aam
in
jne
jae
ds
pop
inc
jbe
sub
adc
jne
pop
ret
pusha
pop
aaa
adc
add
jg
test
dec
and
xlat
and
faddp
push
or
test
fisubrs
subl
pusha
das
insb
sub
mov
adc
imul
xchg
sbb
fists
loop
xchg
insb
and
sbb
adc
daa
dec
mov
ja
pop
push
xchg
mov
push
mov
icebp
mov
out
imul
cs
cmp
sahf
pop
pop
pop
sbb
pop
fcompl
pusha
dec
cmpb
inc
loope
or
push
push
jmp
daa
push
arpl
les
and
push
repnz
or
mov
lods
xor
minps
push
adc
scas
orl
mov
xlat
pop
aam
test
out
popa
jecxz
or
add
cmpb
cwtl
and
push
fdivrs
test
jno
or
push
inc
inc
xchg
xorl
or
pop
mov
push
adc
insb
inc
fisttpll
fsubrl
test
cltd
xor
mov
add
push
adc
mov
popa
sub
dec
sbb
xchg
lret
test
rolb
arpl
sbbb
je
xchg
call
popf
inc
xchg
nop
add
mov
add
jle
or
in
pop
mov
inc
popa
popa
js
int3
mov
clc
movsl
nop
pop
inc
push
sahf
fsubl
pop
ret
test
movsb
push
ds
or
push
sbb
imul
pop
mov
push
outsl
mov
ja
rolb
or
pusha
in
xor
rolb
cmp
mov
sbb
nop
jl
dec
sarl
out
ss
xor
out
jnp
ss
es
mov
or
out
mov
xor
adc
and
mov
and
cltd
inc
sbb
lods
sbb
adc
sub
cmp
mov
inc
out
jle
dec
cmp
sub
adc
sbb
es
and
jnp,pn
insl
fst
inc
mov
jmp
push
mov
jmp
mov
xor
loope
inc
or
ds
sub
fistl
cmp
sub
lcall
test
inc
xchg
add
popf
jbe
fwait
mov
cmp
add
fcomi
cltd
mov
jnp
lret
lock
adc
inc
aam
mov
flds
lock
pop
or
and
mov
and
popf
loope
push
push
pop
jmp
adc
add
sub
inc
cmp
cld
push
jb
cmp
filds
pusha
int3
push
add
daa
mov
mov
push
dec
jg
lock
inc
mov
push
cmp
int3
jg
mov
xor
cs
push
sub
loope
and
inc
gs
jno
push
mov
sti
imul
sub
mov
sarb
jne
sbb
ljmp
popf
mov
and
cmp
ret
or
imul
xchg
mov
adc
nop
out
sbb
or
adc
add
add
lds
sbb
inc
and
add
inc
cmp
adc
das
inc
rcll
cmp
cmpsb
inc
fmull
cmp
mov
inc
jecxz
add
pop
je
jne
push
mov
mov
push
cmp
jae
subl
call
push
adc
and
adc
xchg
xor
insl
xor
popf
lret
jp
je
add
mov
xchg
jg
dec
imul
movb
mov
cmp
or
cld
inc
mov
add
dec
xchg
loopne
pop
cwtl
jl
sti
in
sbb
mov
fmuls
pushf
jbe
in
outsl
cmp
pushf
add
decl
inc
jmp
ret
and
add
cmp
shrb
inc
add
inc
push
adc
sub
je
fcompl
pop
dec
sub
and
or
sub
popf
insb
loop
dec
and
out
adc
add
or
mov
pop
mov
mov
mov
sbb
cmc
or
mov
das
dec
push
jns
aam
and
inc
sub
cwtl
ficoml
sarb
enter
movb
lods
orl
or
mov
lret
sbb
negl
shll
mov
js
sbb
or
add
lods
or
pop
addr16
test
sbb
adc
mov
cmp
rolb
adc
dec
mov
iret
cmp
mov
mov
or
aaa
xchg
xor
leave
add
add
mov
enter
push
pop
xor
xor
and
jmp
push
push
push
js
rolb
jg
and
fld
xchg
sbbl
jb
ret
pop
test
cmpsb
lret
cld
push
push
insb
cmpsl
and
push
sti
iret
loop
out
adc
jne
cmpl
dec
aad
popa
scas
push
hlt
dec
sbb
xor
and
inc
popl
add
sbb
leave
cli
popa
or
in
mov
loop
cmpsl
pop
jp
xor
inc
pop
mov
fists
inc
mov
arpl
mov
aad
test
adc
and
jo
les
mov
or
push
jo
inc
dec
pop
stos
xor
push
adc
inc
in
dec
gs
int3
das
and
sbb
in
fisttpl
pop
lret
repz
loope
adc
addb
shlb
push
inc
repnz
or
stos
ja
or
sbb
jo
add
jno
ss
mov
fcomps
fimuls
jge
inc
or
mov
test
or
icebp
addb
out
ret
and
dec
push
andb
pop
or
cmpsl
sbb
inc
shrl
mov
ficoml
imul
add
ret
mov
fistpll
outsb
mov
fmul
mov
adc
add
or
jmp
add
cld
sarl
inc
mov
jecxz
call
adc
stc
ret
add
sahf
dec
xchg
push
nop
sub
lods
pushf
and
sbb
imul
or
xchg
add
leave
cmp
pop
rolb
inc
adc
roll
pop
jmp
push
popf
pminub
js
inc
inc
paddusb
add
mov
ja
pop
or
and
push
fists
cwtl
mov
sbb
int3
mov
adc
loopne
movsl
dec
push
jp
jmp
xor
dec
xor
and
or
pop
add
mov
adc
adc
push
mov
add
or
adc
and
fistpl
and
ret
add
push
jnp
mov
lcall
push
jnp
sub
dec
in
xchg
fs
and
xchg
push
movsb
jb
test
sarb
lods
and
pop
push
hlt
mov
mov
mov
adc
inc
cmpsb
cld
test
add
jnp
push
push
dec
dec
dec
dec
push
enter
lahf
dec
dec
inc
xchg
insl
insl
es
xchg
push
inc
and
dec
pop
push
gs
mov
daa
inc
jbe
jnp
ljmp
insb
add
sub
test
and
leave
push
jae
inc
sub
inc
out
fiaddl
outsl
or
dec
jae
pop
cmp
jno
jp
inc
into
cmp
sbb
push
xorb
sbb
je
scas
sub
notl
mov
inc
add
mov
push
and
out
insl
scas
or
or
mov
mov
dec
hlt
sub
or
cwtl
or
fisttpl
fisubrl
mov
sbb
and
or
loopne,pn
shr
daa
in
sbb
loope
ret
mov
add
xor
lods
xchg
sbb
loope
repnz
mov
xorb
add
jbe
ss
or
insb
xchg
ret
xchg
lret
xchg
dec
sub
adc
or
sbb
ret
cltd
sbb
imul
movsb
jo
push
jbe
shr
mov
push
dec
mov
pop
xor
pop
xchg
pop
cmpb
jns
test
js
mov
loopne
mov
lock
pusha
pusha
in
sub
xchg
test
jno
push
inc
cmp
push
call
cmp
movsb
add
mov
aas
mov
les
push
ss
mov
movsl
add
mov
out
inc
lods
aas
inc
enter
mov
mov
cmc
or
push
push
inc
adc
and
mov
xorb
or
or
addb
push
cmpsl
adc
data16
push
xorl
push
std
inc
gs
add
sub
test
inc
mov
or
or
sbb
sbb
push
rcl
lods
push
and
stos
lret
aas
movl
imul
inc
push
daa
dec
je
jmp
cmp
das
or
sub
sbb
adc
je
test
shrl
xchg
js
inc
jg
aad
mov
push
push
outsl
dec
pushf
mov
aad
jp
xor
pop
cs
ret
inc
add
adc
or
dec
sbb
cmpsl
lock
ret
adc
lahf
and
or
aam
and
hlt
mov
jnp
mov
push
das
push
sbb
fldl
pop
adcl
adc
mov
insl
mov
push
rcrl
add
xor
inc
and
fiadds
adc
fucom
jns
out
les
push
rolb
xor
pop
push
xor
nop
push
iret
cs
sub
loop
sub
adc
pop
inc
or
xor
ret
xchg
mov
dec
add
mov
popa
dec
dec
or
dec
imul
sbb
adc
data16
sbb
pusha
ret
mov
xchg
dec
jo
push
and
sub
dec
das
mov
dec
arpl
ja
out
nop
das
notl
mov
adc
scas
scas
adc
inc
or
add
dec
repnz
ret
lds
cmc
push
ficompl
add
jo,pt
mov
push
mov
dec
inc
leave
push
push
push
push
or
xor
or
pushf
cmpsb
jae
jle
mov
daa
sub
insl
cld
imul
lods
mov
pushl
and
imul
arpl
mov
jne
add
mov
testl
imul
fidivrs
pop
js
bound
pop
sbb
fdivp
es
jb
jb
popa
or
jnp
xchg
adc
insb
bound
jbe
mov
ja
imulb
jo
mov
pop
jb
addr16
fistpl
and
fldl
daa
push
jg
mov
je
outsb
insb
das
je
cmpsl
imul
and
pop
fs
in
push
cs
daa
mov
mov
jo
jb
arpl
jge
fsubs
jns
outsl
dec
pushw
das
sti
ficomps
outsb
add
or
outsl
pop
cmp
jecxz
scas
sbb
dec
sub
mov
xchg
punpckhbw
loopne
mov
adc
push
fs
pop
fiaddl
loop
icebp
sbb
cmp
push
push
outsb
je
fs
push
or
add
adc
or
add
and
or
ja
adc
pop
xchg
or
add
push
sti
inc
cld
setae
sub
xor
xchg
push
daa
or
inc
fisubs
push
pop
sbb
pop
pusha
inc
xchg
je
loopne
jecxz
lcall
out
adc
inc
push
mov
test
fdivrs
mov
dec
mov
lock
mov
adc
add
in
inc
mov
add
std
xlat
add
pop
outsb
or
outsl
mov
scas
cmpsb
add
dec
loope
adc
sbb
lea
mov
in
mov
xor
or
push
repnz
sub
xor
mov
xchg
popa
and
fadds
or
arpl
repz
es
xchg
xchg
int3
cmpsb
adc
popa
push
mov
add
dec
aas
fadd
adc
push
or
pop
adc
sbb
xchg
faddl
mov
cmc
and
in
sub
or
shrb
or
ret
ja
into
ret
mov
or
iret
adc
add
push
lret
sub
push
sbb
ror
fistpll
add
sbb
sub
add
xor
push
push
test
jp
and
jns
push
loopne
ds
out
lret
insl
add
inc
aas
push
add
cmp
repz
or
or
or
or
or
or
cmp
repz
adc
push
pop
sbb
sbb
mov
cmp
sbb
and
and
loopne
fadds
jns
xchg
test
lret
cmp
repz
push
int
xor
cmp
repz
arpl
iret
repz
cmpsl
mov
sahf
out
ds
push
jns
out
bound
mov
test
ror
in
insl
sbb
ljmp
mov
add
push
cmpsb
lods
pop
add
dec
sub
in
lret
sbb
mov
or
cs
and
dec
sub
xchg
lret
adc
xor
adc
test
cmp
inc
sub
pop
dec
lret
dec
sbb
dec
in
push
sbb
push
mov
sbb
xor
popa
in
push
sahf
imul
xchg
stos
dec
arpl
and
nop
lret
and
sbb
test
mov
mov
sti
lock
pop
and
sbb
out
sub
fcomp
pop
mov
dec
rorb
xor
push
cmp
test
xlat
add
jne
sahf
popa
or
xchg
mov
leave
clc
push
lret
adc
rorb
mov
push
cmp
out
sub
movsb
repnz
push
push
lock
mov
push
pop
sbb
pop
add
fwait
in
in
imul
or
adc
or
clc
pop
dec
int3
mov
mov
and
or
inc
das
shl
mov
push
xchg
sbb
mov
add
mov
scas
nop
pop
push
pushf
insb
mov
out
ljmp
push
mov
mov
je
xor
xor
xor
mov
pop
dec
sarb
or
adc
or
xor
mov
add
xchg
lds
and
lahf
roll
add
movsl
dec
sbb
inc
fnstsw
push
or
aaa
sbb
in
sbb
and
dec
lea
jg
js
fimull
and
sub
push
aaa
clc
dec
push
fstl
or
repnz
sbb
lods
pop
jl
push
rcll
ss
out
fidivrs
jmp
dec
lea
jnp
or
insl
mov
or
sub
and
xor
je
dec
icebp
inc
inc
xchg
or
out
adc
cmp
dec
mov
and
outsl
xchg
xchg
data16
movl
dec
je
ret
xor
scas
mov
dec
aam
add
lock
push
setae
arpl
lds
xor
dec
sbb
rclb
mov
adc
inc
inc
inc
dec
pusha
jecxz
mov
adc
cmpsb
pusha
std
mov
add
add
pop
and
sbbb
cmp
movl
cmp
sbb
cs
add
int
or
cmpsl
es
inc
les
pop
leave
popa
xor
aam
mov
orb
add
add
ret
aas
loopne
cmpsb
test
add
or
sub
xor
popa
test
pop
jo
dec
lret
test
jo
and
mov
ret
or
or
sub
cmp
add
jns
mov
dec
jge
aas
adc
push
loope
pop
nop
xbegin
push
inc
dec
out
sbb
push
add
adc
xor
lods
adc
pop
test
mov
sbb
xchg
cmp
adc
sub
imul
into
add
push
and
jmp
lea
jno
mov
mov
pop
jecxz
xchg
dec
push
adc
adc
sub
add
nop
cld
xor
cmp
testl
push
or
mov
addr16
mov
lahf
mov
and
cmp
mov
dec
jecxz
or
xlat
xchg
xchg
jmp
dec
sbb
inc
xorb
jnp
xlat
fld1
ficompl
xlat
xor
sub
dec
daa
dec
shlb
fs
push
cmp
test
imul
add
sub
xlat
sbb
mov
inc
sub
inc
bound
mov
fdivrs
mov
lock
push
imul
pop
lds
sar
stc
jae
pop
enter
push
mov
or
das
mov
push
adc
or
inc
mov
push
adc
jg
dec
mov
xor
jecxz
inc
bound
into
add
and
inc
enter
mov
or
ss
push
adc
scas
sbb
enter
andl
inc
sarl
xor
push
popa
daa
mov
jle
push
xor
imul
and
and
inc
push
inc
roll
mov
dec
sbb
xor
push
pop
mov
xor
aaa
movl
aaa
inc
andb
mov
add
pop
shlb
inc
sub
pusha
adc
in
iret
divb
fs
sub
lock
flds
loop
push
adc
pop
inc
mov
pop
sub
pop
pop
inc
or
fistl
lcall
iret
les
push
pop
sbb
dec
pop
mov
xchg
cmp
xchg
push
or
add
test
mov
inc
movsb
push
lods
mov
dec
push
clc
push
mov
adc
pop
sub
test
dec
aaa
hlt
cmp
mull
cmp
push
xlat
inc
sti
and
push
mov
xchg
xchg
repz
jl
adc
cmp
jne
int3
call
in
mov
sbb
mov
adc
push
lret
sub
mov
nop
mov
adc
sub
inc
cmp
icebp
popa
cltd
inc
fs
mov
loop
xlat
xchg
out
xchg
add
adc
insb
lods
leave
sti
lret
inc
pop
es
or
es
xchg
nop
aas
push
xchg
roll
out
push
add
inc
mov
or
inc
mov
add
inc
inc
lret
mov
test
push
and
adc
daa
test
jno
test
es
jg
dec
movsb
sbb
dec
mov
push
push
sbb
mov
or
pusha
ja
cmp
xor
cwtl
pushf
jo
ljmp
jl
pop
sub
in
and
fnstenv
and
or
push
mov
dec
jecxz
pusha
adc
lret
rcr
adc
in
ja
hlt
ret
rorb
dec
movsl
add
pop
lock
xor
orb
rorb
push
and
bound
sarl
lahf
adc
ss
insb
push
in
pop
sbb
jbe
and
push
xor
dec
and
shll
test
push
inc
out
pop
xor
mov
inc
pusha
or
add
cmp
je
add
scas
cmp
fsub
decl
dec
fildl
shrb
mov
adc
stos
cmpsb
movsl
insb
loopne
jge
stos
lret
sub
mov
hlt
mov
push
clc
cld
pop
clc
iret
dec
cmp
inc
mov
loopne
sub
mov
pop
in
nop
scas
xchg
roll
add
mov
fists
lahf
sarb
add
inc
mov
xor
dec
push
adc
inc
sub
jo
sarb
adc
sub
inc
push
add
cmpsb
addl
das
rorb
mov
cli
or
xchg
cmp
xor
popa
arpl
dec
and
sbb
js
pop
fcmovbe
rcrl
dec
inc
orl
push
in
jb
dec
in
imul
ret
jle
rolb
xor
and
adc
popf
or
call
es
out
jae
push
sub
or
pushf
mov
push
movsl
mov
rolb
xlat
lock
lods
test
ret
movl
adc
lea
pop
push
cltd
mov
xchg
mov
in
jge
lock
dec
in
jae
dec
in
movb
and
inc
pushf
cmpsb
pop
adc
cmp
adcb
es
mov
fwait
mov
bound
inc
movsb
loope
mov
xchg
adc
sub
xchg
rcr
sub
insl
hlt
in
call
das
in
mov
mov
inc
jns
inc
cmp
in
in
xchg
xchg
dec
imul
mov
test
aas
adc
sub
jne
jns
adc
pop
or
std
jmp
es
daa
mov
or
adc
dec
popa
cmp
add
nop
push
shlb
lock
in
mov
in
cmp
aas
mov
subb
mov
push
sub
and
in
mov
daa
call
dec
lods
cmp
or
and
jecxz
mov
pop
mov
pop
scas
das
or
test
pop
or
sub
adc
dec
test
xorb
add
les
jnp
sbb
mov
inc
xchg
stc
loope
test
mov
outsb
or
mov
push
adc
jb
push
test
je
cs
js
push
cmc
dec
arpl
push
pop
inc
into
inc
mov
ds
sbb
or
add
add
lock
adc
or
adc
and
jmp
outsl
aam
fldcw
pop
adc
cmp
inc
out
inc
inc
ret
pop
dec
push
test
adc
cmovp
inc
pop
ret
push
push
mov
adc
dec
pop
cmpb
inc
xor
jl
lea
jl
dec
addb
fdivrs
add
call
cmp
dec
sahf
mov
jbe
xchg
inc
push
inc
pusha
in
inc
mov
pop
add
inc
out
pop
pop
mov
mov
ds
push
inc
in
push
cmpsb
gs
adc
sbb
add
xchg
rcl
push
inc
cmp
xor
inc
popa
sbb
outsb
out
add
or
fdivrp
fcoml
xchg
lock
push
addl
mov
enter
pop
jb
movsb
jmp
loopne
loope
js
inc
pushf
lock
or
or
and
fisubrs
sbb
inc
insb
repnz
and
sahf
negl
inc
push
enter
sub
loopne
adc
push
adc
shll
mov
loopne
inc
push
sub
xchg
and
sbb
ljmp
pop
loopne
inc
ds
dec
inc
mov
inc
and
pop
addl
das
movl
nop
or
fs
imul
mov
call
mov
cltd
imul
cld
fdivl
jl
add
int3
mov
jo
hlt
push
or
lretw
and
lods
scas
loope
fcoml
insb
mov
outsl
in
sbb
mov
and
sahf
out
ficoms
push
cmp
mov
out
pushf
mov
fcomp
out
sahf
out
in
in
lock
mov
xchg
jno
cli
push
or
cmp
rolb
and
xchg
nop
sbb
cmp
xor
test
cwtl
mov
lret
mov
cld
ret
test
add
push
pop
sbb
addr16
push
repnz
lea
push
fiadds
sub
frstor
add
xor
and
pop
mov
sbbl
rol
adc
lea
xchg
and
pop
dec
loop
or
enter
add
add
loopne
imull
mov
cwtl
pop
movsb
jnp
pop
and
ret
popa
loope
iret
xor
call
add
iret
mov
test
adc
cld
mov
add
dec
out
scas
cltd
in
sbb
fmul
add
inc
push
aas
pop
xor
xor
inc
sub
mov
adc
nop
ds
jne
mov
insl
jmp
das
mov
test
xor
rcrb
pop
jmp
xor
cmp
movsl
test
sbb
and
and
inc
dec
or
or
or
or
and
xor
lea
adc
clc
out
xlat
out
fdivrs
sbb
nop
pop
and
sbb
add
rorl
mov
sbbl
cmp
call
cmp
jne
or
sub
enter
sub
jle
std
adc
mov
pop
add
and
aas
sbb
pop
push
mov
je
jecxz
xlat
mov
jo
lret
fimull
data16
sub
imul
sub
inc
into
or
or
mov
gs
adc
sub
or
jo
nop
or
or
or
sub
shll
inc
or
rcll
adc
inc
pcmpgtd
stos
add
bound
fmul
adc
push
and
sbb
dec
jo
mov
fwait
inc
push
stos
test
sbb
lret
xor
test
sub
loopne
jns
add
stos
mov
leave
scas
jmp
ja
jo
imul
fsubrs
xchg
push
push
push
mov
out
xchg
mov
or
cmp
xchg
add
mov
push
ja
cmp
in
cmp
inc
sub
pop
test
cmp
sbb
pop
mov
xchg
add
push
fs
and
inc
sbb
adc
push
xchg
dec
les
cmp
test
lds
jno
adc
xor
popl
mov
into
fcoms
add
push
inc
mov
pop
xchg
ret
test
xor
enter
add
loope
fwait
sbbb
lea
imul
add
inc
mov
mov
and
orl
add
daa
xchg
lods
out
lea
ja
xchg
test
jb
scas
mov
jae
add
sti
add
inc
dec
or
xor
dec
dec
cmp
cmp
or
add
sbb
imul
mov
jl
cltd
jnp
push
adc
xorl
outsb
push
dec
push
push
push
cmp
fmull
rorb
adc
pop
sub
js
push
add
repnz
idivb
pop
imul
adc
shrb
aas
adc
adc
push
mov
fiaddl
test
push
jnp
adc
clc
movsl
inc
pop
loopne
xchg
fdivrs
je
or
insb
insb
mov
push
lods
jecxz
mov
or
loopne
rol
rorl
or
adc
popa
cltd
jmp
pop
cmp
fadds
je
mov
dec
and
enter
mov
dec
loop
sub
push
or
jno
or
cwtl
or
pop
xchg
lds
inc
sbb
pop
insb
lret
push
mov
mov
pusha
lock
js
mov
ret
pop
iret
xchg
xchg
cmpl
cmp
je
lea
add
jb
jge
xchg
add
jne
or
jl
addl
hlt
push
jnp
jne
mov
mov
mov
jmp
lcall
ret
inc
movl
cmp
cmp
je
adc
movsl
adcb
inc
jne
ljmp
shlb
movb
xor
adc
or
sub
shl
and
xchg
add
mov
mov
jg
in
mov
pop
mov
dec
jecxz
daa
inc
adcb
jg
sbb
or
loopne
pop
adc
icebp
lods
xor
sub
pop
or
dec
dec
scas
in
test
popa
cmpsl
pop
lret
repz
cld
jmp
adc
dec
les
mov
mov
fs
dec
dec
dec
lods
jmp
or
xchg
mov
mov
dec
sbb
sub
add
push
lods
or
dec
dec
push
mov
inc
int3
or
inc
inc
jo
or
push
add
pop
sbb
add
push
sbb
add
lcall
in
adc
push
ss
and
imul
or
or
sub
add
push
jae
dec
add
pop
dec
ret
in
aas
xchg
inc
dec
jmp
and
dec
cmp
add
add
sbb
xor
lock
xor
inc
mov
or
dec
pop
pop
fadds
mov
out
fiadds
or
pop
adc
je
cmp
aas
or
or
push
and
out
push
mov
mov
sub
nop
and
mov
add
pop
enter
test
add
frstor
add
inc
mov
outsb
or
inc
push
dec
inc
sahf
addl
adc
pop
ret
out
xor
and
xor
mov
mov
adc
test
imul
inc
fidivrs
ds
push
in
inc
sahf
pop
pop
sbb
mov
pop
sbb
or
repnz
or
inc
pop
pop
in
cs
sbbl
add
ja
dec
into
enter
sbb
dec
inc
imul
mov
mov
add
ficompl
jle
fs
setb
jbe
les
inc
pop
sub
orl
or
inc
add
inc
adc
inc
icebp
lea
loopne
add
xchg
dec
cmp
in
mov
pop
and
insb
push
adc
push
mov
xor
sbb
nop
mov
mov
xor
or
lods
cmp
cmp
dec
dec
xchg
sub
sub
adc
inc
leave
pop
repnz
push
add
call
clc
xchg
or
mov
orb
dec
nop
jp
int
cmp
dec
push
sbb
push
xor
insb
add
add
push
imul
imul
inc
add
std
bound
outsb
or
cltd
or
dec
mov
es
fisttpl
arpl
push
outsl
mov
ret
xchg
inc
and
aam
prefetchw
dec
ss
mov
mov
incl
movsl
sbb
out
mov
das
mov
pop
or
sti
in
add
or
data16
into
sub
xchg
or
shl
int
ret
pop
add
sub
push
or
movsb
add
or
movsl
popa
fsubl
jb
jns
fs
pusha
xor
data16
mov
inc
clc
xchg
pop
mov
gs
popa
xchg
sub
add
ret
out
divb
jo
lods
out
mov
imul
or
movsl
insb
fsts
adc
in
adc
aas
add
sahf
push
or
xor
jae
xchg
nop
sbb
cld
sahf
outsl
mov
or
leave
or
mov
aaa
notb
xor
adc
dec
and
adc
gs
loope
shr
lea
mov
sbb
cld
xor
adcb
fmuls
imul
es
jne
mov
outsl
sti
cmp
fs
mov
push
jb
insl
popa
jb
or
or
jmp
cltd
cmpsl
or
scas
push
outsb
push
mov
outsl
ja
mov
sbb
pop
ds
add
imul
lahf
mov
or
xchg
arpl
dec
imul
push
or
add
mov
or
inc
dec
or
rcr
fiadds
xor
roll
loopne
push
jne
jns
add
inc
out
dec
pop
add
add
outsb
popa
add
and
xchg
pop
adcl
fcompl
dec
sub
add
neg
add
ja
fucom
enter
test
loopne
xchg
mov
scas
sbb
popa
dec
or
orl
pop
xchg
add
add
mov
add
pop
pop
dec
inc
movl
lret
roll
jo,pn
or
ret
dec
dec
adc
add
insb
mov
or
pop
gs
xor
pop
and
sbb
cs
or
add
shl
xor
add
add
cmp
mov
test
mov
popa
shlb
xor
sub
adc
pop
add
add
in
das
addb
scas
adc
sbb
and
sub
add
mov
push
inc
add
mov
fs
lret
jbe
ss
inc
add
adc
pop
add
sub
adc
jg
mov
mov
mov
ljmp
xchg
ljmp
ljmp
jmp
pop
add
and
push
or
jnp
sbb
roll
shlb
or
repz
es
pusha
in
cmpb
dec
repz
xorl
ds
aam
sbbl
insb
ss
test
xchg
repz
push
dec
orl
sbb
pushf
mov
pop
mov
push
in
cmp
cmpsb
mov
repz
push
inc
lods
mov
ja
pop
jne
fwait
dec
jnp
push
mov
sti
into
data16
sbb
mov
dec
out
cmpsl
jge
fwait
inc
loopne
jp
je
pop
pop
dec
aaa
lock
rorl
jl
lcall
fisubrl
xor
and
pop
xchg
and
add
mov
fcompl
push
aam
popf
inc
pop
rcll
mov
es
or
shlb
add
push
cmp
inc
add
jmp
popf
or
lds
push
push
jo
and
cmpsb
push
push
jle
int3
pop
inc
sbb
push
inc
enter
adc
xor
add
pushl
or
jbe
dec
inc
insb
lock
dec
sub
jns,pn
call
and
pop
mov
pop
fsubrs
jo
xor
test
pop
push
clc
test
hlt
std
add
or
sbb
push
push
bound
add
pop
jl
dec
repnz
loopne
icebp
popa
or
inc
sbb
jno
fcoml
in
add
out
in
inc
inc
outsb
or
fnstenv
push
pusha
dec
sub
xchg
test
mov
xchg
ss
aad
cmp
loope
fisubl
cmpl
orb
in
push
cmc
dec
push
xor
add
js
or
cmpsl
sub
cld
pop
and
cmp
and
jns
dec
and
push
xchg
push
push
pop
pop
test
or
add
sub
cmp
fldcw
je
mov
and
fcmovnb
push
adc
stos
js
add
xchg
fdivrl
xchg
jns
pushf
xor
mov
push
es
mov
sbb
xorb
fcoml
sub
dec
mov
sub
add
sub
xchg
lret
adc
sub
in
aaa
out
int3
cld
pop
inc
mov
inc
xchg
scas
cltd
add
inc
inc
ret
push
lods
xor
andl
hlt
push
add
pop
shll
jns
push
pop
mov
pop
popf
add
xor
das
pop
cwtl
push
dec
jle,pn
jne
jne
call
aas
jbe
fldlg2
mov
je
add
into
add
xchg
or
mov
jns
inc
nop
sbb
pop
xor
in
push
cmpsl
jl
jl
sub
xor
negb
add
dec
daa
cmp
adc
imul
pushf
adc
pop
pushf
mov
xor
xlat
pop
pusha
lcall
cmp
push
imul
rclb
xor
repz
xor
out
xor
and
in
shrb
sub
je
sahf
jmp
cmp
loopne
les
add
icebp
mov
es
test
jb
jge
cmp
mov
push
insl
andl
pop
push
cmp
movsl
dec
adc
fs
add
mov
shll
hlt
jo
cmp
xor
add
mov
into
jae
dec
or
sbbb
or
push
int3
pop
inc
push
push
or
mov
cwtl
dec
inc
or
bnd
inc
xlat
addb
shll
fsubs
push
es
lret
or
ljmp
mov
pop
fs
test
ret
ror
rorb
inc
cmp
add
sarb
push
stc
inc
add
popa
or
and
inc
ret
mov
xor
cwtl
pop
fmuls
pop
inc
rcr
dec
mov
loopne
add
into
inc
and
and
adc
inc
or
add
je
sti
repz
popf
cmovp
or
inc
add
dec
icebp
mov
and
dec
pop
and
add
cmpb
mov
call
sahf
adcb
lcall
out
dec
fbld
enter
call
or
dec
popa
pusha
stos
sbb
push
test
push
daa
mov
mov
add
push
add
mov
xchg
stc
inc
sahf
clc
clc
push
add
or
js
pop
lcall
mov
jno
lds
push
adc
pop
or
insb
roll
dec
pop
rcll
xor
ret
push
shlb
pop
jge
sbb
or
pop
xchg
sub
out
jge
xor
pop
cmp
adc
inc
inc
loopne
push
inc
shl
or
dec
dec
pusha
add
enter
rcll
add
jns
in
pop
popa
push
push
add
faddl
or
push
aaa
js
clc
jno
push
dec
dec
dec
movsl
sbb
loope
fdivl
movsb
add
sub
adc
sub
inc
sbb
data16
imul
addr16
dec
or
shrb
cmp
push
in
xlat
leave
and
rcrb
sbb
mov
sbb
pop
push
out
mov
xor
adc
lahf
xchg
add
pop
fiaddl
pop
rolb
sahf
ss
mov
test
into
sysret
sub
adc
daa
push
stos
cmp
enter
nop
sbb
aam
jno
outsl
adc
jecxz
or
loop
push
ja
dec
mov
sbb
mov
jecxz
sub
mov
loope
mov
insb
call
cmp
scas
sysret
lock
sbb
movsl
cmp
outsl
fcompl
mov
sub
jle
fadds
or
sbb
cmp
orl
sub
sbb
push
jo
pop
sbb
and
add
pop
or
xor
jno
mov
mov
mov
lea
push
clc
add
popa
sahf
nop
ja
ret
pusha
mov
and
mov
mov
pop
daa
loop
pop
jo
das
add
sub
rclb
add
orb
repnz
push
rolb
int
add
add
movsb
frstor
daa
xlat
xor
lods
or
adc
inc
add
cmp
scas
mov
adc
sbb
dec
or
aas
sub
es
lods
and
mov
mov
or
mov
cmpb
jno
ret
out
add
addr16
xchg
or
popa
lods
inc
cmp
sbb
sub
or
je
and
push
push
inc
push
ret
nop
mov
add
or
movl
jp
jne
mov
or
pop
leave
xlat
dec
movsb
dec
inc
add
call
or
xor
out
mov
adc
punpcklwd
daa
and
sti
jmp
sub
mov
or
imul
das
sbb
mov
xchg
lcall
mov
mov
lods
mov
movsb
push
stc
jbe
adc
add
push
shlb
je
push
shl
dec
popa
je
adc
xchg
scas
adc
fucom
adc
inc
sbb
xchg
bound
adc
jbe
jae
hlt
mov
movsb
jnp
je,pt
pop
inc
add
pop
orb
xor
mov
xchg
inc
cld
inc
shrl
adc
dec
stos
jp
sub
testl
jbe
mov
mov
sub
fsubrp
shl
aam
rolb
rorb
dec
imul
xlat
xchg
pop
inc
call
je
movsl
jecxz
arpl
aaa
fadds
loope
or
aaa
jne
mov
adc
mov
fnstenv
lods
rcll
jg
or
cmp
pop
lahf
je
gs
ret
mov
xorb
mov
adc
daa
icebp
test
aas
add
enter
xchg
fisubrs
mov
in
mov
std
jmp
inc
iret
jle
loop
insb
int
cmp
iret
in
xchg
mov
decl
cmovge
mov
fs
jae
push
jl
inc
mov
andl
fs
adc
adc
xor
hlt
call
sub
notb
mov
in
sbb
push
jecxz
ljmp
faddp
fnsave
xchg
mov
jae
call
and
jmp
loope
mov
outsb
xchg
push
iret
sub
rclb
sub
iret
in
scas
add
or
or
jae
add
adc
add
sbb
push
push
push
xchg
sbb
push
cs
es
dec
ret
add
mov
iret
testb
sub
dec
jae
adc
add
add
rcrb
and
mov
imul
movsl
ljmp
clc
pop
pop
and
cmp
pop
int
and
je
lods
nop
xchg
mov
or
cwtl
mov
jns
add
push
mov
cmpsl
lods
add
adc
push
stos
movsl
aam
ret
subb
mov
ret
and
push
mov
and
sbb
xchg
cmp
and
cld
xor
scas
add
mov
aam
ja
mov
push
sarl
jno
inc
or
push
mov
xor
inc
add
pop
loope
cmp
sub
ds
push
inc
push
push
lea
das
into
mov
xchg
icebp
inc
pop
xor
daa
mov
xchg
inc
sti
or
push
sub
add
movsl
fsts
sbb
or
movsb
int3
xor
or
inc
ret
pop
hlt
rcl
scas
subb
insl
movsb
xchg
ljmp
push
adc
es
fdivrs
or
and
int3
imul
jmp
les
add
xor
outsl
jmp
and
test
inc
dec
add
sbb
dec
pusha
mov
push
fildl
push
and
fists
mov
add
inc
dec
dec
cmp
inc
inc
push
sub
movsl
mov
add
adc
pop
jno
gs
aas
fsubrs
xor
hlt
rclb
cmp
in
cmp
adc
push
mov
nopl
cmp
xor
jmp
sub
cmc
dec
ret
add
loop
flds
gs
rcrb
addb
fdivrs
mov
rorb
adcb
add
lock
pop
xchg
clc
mov
bound
outsl
fmuls
pop
push
sub
mov
sti
pusha
adc
mov
mov
add
std
or
hlt
neg
jmp
arpl
dec
add
test
roll
pop
shl
cli
add
pop
mov
push
pop
pop
rorl
and
push
mov
int
pop
stos
xchg
sti
xchg
xor
aas
adc
cs
cmp
inc
push
scas
icebp
aaa
or
or
pop
xor
inc
adc
xlat
es
popa
and
add
jae
aas
repnz
add
daa
dec
clc
and
and
adc
shr
jl
sub
or
lret
jne
nop
xchg
push
mov
sbb
cmpsl
cmpsb
aas
pusha
or
out
call
in
dec
pop
sarl
or
and
sub
inc
and
sarl
pshufw
ja
jmp
inc
inc
or
in
xor
sti
adc
sti
jmp
adc
sub
lock
or
sub
cmpb
and
test
sbb
and
xor
loopne
xorl
sbb
sub
cmpb
push
xor
fs
mov
and
xchg
bound
adc
popa
lods
xchg
in
ss
fs
mov
mov
or
je
ss
jmp
jl
vmovntps
rcll
xchg
push
ljmp
and
sub
out
inc
sub
inc
bound
out
or
lods
xchg
cmp
rcl
aaa
add
add
jle
mov
xor
sub
das
jbe
xor
js
data16
lahf
lret
push
dec
int3
pop
dec
out
shll
and
leave
inc
xor
sbb
or
or
push
adc
pop
xor
mov
repnz
sbb
pop
cmpsb
push
mov
jne
ss
pop
sahf
and
and
adc
cmp
je
mov
cld
iret
mov
iret
push
dec
inc
push
stos
ret
sub
sub
or
out
rcl
cld
jo
ss
inc
loope
cmpl
arpl
jle
cmp
outsb
adc
push
ja
or
add
out
ss
lcall
sbb
inc
inc
ds
mov
loopne
or
sub
sbb
dec
and
mov
xchg
cld
cmc
push
add
push
xchg
mov
add
inc
pop
jnp
or
cmp
or
pcmpeqd
les
add
xor
aas
sbb
or
mov
outsl
adc
xchg
fwait
outsb
mov
mov
inc
call
leave
sub
clc
add
arpl
faddp
sbbl
add
sub
add
mov
cltd
xchg
es
cld
pop
mov
xor
hlt
sbb
push
loope
inc
in
int3
pop
add
mov
dec
sbb
cmp
popa
enter
sarb
cmp
test
xor
int
enter
sub
pop
faddl
ret
out
call
repz
push
loope
push
je
adc
push
ret
sbb
mov
sbb
test
cmp
ret
push
mov
clc
sbb
sub
lret
push
pop
loop
lcall
adc
jecxz
push
or
push
mov
push
or
call
roll
repnz
push
mov
and
in
and
push
xchg
adc
xor
test
mov
sub
xchg
adc
or
stc
rorb
pop
mov
or
xor
push
popa
push
aam
adc
sbbb
cmp
add
inc
inc
mov
xor
sub
loopne
movb
insb
ds
sub
inc
loop
in
pop
es
es
cmc
andl
and
cltd
cmp
ss
and
dec
jecxz
out
xor
sbb
xor
sub
add
mov
cmp
pusha
pop
xor
xor
xchg
inc
inc
imul
xchg
push
lock
xor
popa
jo
mov
cwtl
sarb
xor
adc
fdivrl
mov
aaa
inc
mov
push
loopne
push
add
je
inc
xlat
cmpsb
int3
ss
ja
aam
and
push
in
push
push
or
jmp
mov
rolb
imul
int
add
jns
mov
adc
ja
xchg
pop
adc
sub
outsb
mov
push
sbb
push
push
push
xchg
das
enter
push
xorb
mov
or
pushf
fcmovne
inc
adc
mov
out
and
in
pop
cmp
orl
pandn
sub
or
fucomi
pop
dec
outsl
push
push
inc
insb
in
inc
and
dec
sbb
loopne
icebp
sbb
adc
rcl
imul
mov
mov
outsb
xchg
pop
mov
loopne
add
sar
cmpsb
loope
or
mov
inc
xchg
loope
xchg
rcrl
pop
add
xlat
sbb
inc
add
or
sbb
mov
sbb
xchg
int3
dec
ret
pop
xchg
outsb
vsqrtss
push
adc
aad
aaa
ss
popf
mov
loop
popl
jnp
fdivrp
outsl
or
lds
sbb
out
sbb
pop
mov
shrl
mov
pop
push
jle
mov
nop
fstps
push
inc
sti
mov
sbb
sbb
xchg
pop
inc
cs
enter
das
jns
inc
xor
adc
jnp
and
inc
std
adc
sbb
lea
stos
inc
fcompl
insb
jge
jb
je
and
push
ds
and
or
in
add
pop
repnz
mov
and
push
jo
aad
or
scas
leave
push
xchg
and
xor
xor
add
dec
mov
je
lods
rcrb
lret
aad
add
movsl
mov
lret
mov
add
stos
dec
xchg
lahf
jecxz
add
and
ss
stc
lret
test
xor
popa
mov
popa
mov
lock
rorl
shlb
out
mov
fimuls
xchg
loope
outsl
sbb
cmp
ret
inc
push
ret
cmp
cli
nop
jb
arpl
xchg
inc
xchg
inc
add
out
addb
xor
jle
cli
push
pusha
cmp
dec
push
neg
or
mov
js
pop
incb
lea
and
or
rcl
hlt
test
jmp
sbb
cmp
loop
cmpb
cmpl
push
sub
mov
push
pop
xchg
dec
jb
mov
push
inc
add
cmp
cmp
or
cmp
add
sbb
xor
xchg
add
xchg
out
dec
test
mov
orb
jmp
jge
push
loopne
dec
fsts
sub
or
adc
sbb
nop
fwait
lea
xchg
inc
movsl
rcrl
and
and
and
jmp
push
movsb
adc
cmp
mov
or
repz
lret
xchg
testb
adc
icebp
mov
mov
jo
scas
jecxz
test
and
xchg
ret
xor
dec
mov
adc
push
and
loope
fcmovb
inc
add
mov
insl
sbb
push
rcrb
xor
and
jae
fadd
daa
orl
mov
sub
je
adc
mov
lods
movb
test
pop
xorb
cmp
pusha
jno
dec
repz
jae
jns
mov
add
mov
adc
pusha
inc
or
loopne
sub
stos
nop
sbb
es
cmp
cmpsb
test
or
movsb
jmp
addl
push
push
or
pusha
imul
cmpsl
adc
adc
xchg
add
fld
fdivr
fiaddl
or
jb
pushf
stos
test
dec
push
pop
adc
xor
iret
mov
pop
movsl
fisubrs
ljmp
inc
cmpb
jge
cmpsb
or
cmp
mov
js
and
mov
inc
add
test
mov
stos
loopne
or
mov
cmp
dec
mov
or
inc
lds
add
jo
mov
inc
aam
jl
icebp
xor
lods
mov
sbb
sbb
imul
nop
adc
mov
add
test
imul
rorl
pop
adc
or
pop
pop
cmpsl
push
xchg
add
add
lret
push
cmpsl
frstor
mov
and
cmp
and
pop
mov
or
loop
jg
push
push
cs
mov
dec
mov
jecxz
mov
xor
sbbb
aaa
dec
int3
mov
or
fdecstp
add
sbb
add
cmc
test
dec
lods
das
push
ljmp
mov
jnp
lods
cmp
adc
pop
inc
mov
iret
inc
mov
dec
xor
cmp
insl
stos
sub
mov
cmp
dec
call
adc
out
xchg
xchg
adc
inc
xchg
sbb
jmp
dec
pop
inc
jg
cmp
cmpl
pop
nop
int
xor
push
les
adc
xchg
sbb
in
cmp
subb
bnd
es
dec
lods
inc
inc
es
adc
or
in
push
adc
lock
mov
or
stos
fcoml
dec
hlt
or
orl
mov
sbb
cmp
push
loopne
xor
nop
xor
xor
mov
sub
push
out
cmp
popa
dec
inc
mov
push
std
sub
dec
adc
lock
sahf
xchg
ret
add
repnz
and
add
add
jg
sbbb
add
and
xor
nop
mov
pop
or
enter
mov
je
aam
sub
inc
pop
push
mov
inc
repnz
shr
push
fcomps
xchg
adc
mov
orb
pop
sub
push
and
fstl
mov
inc
add
adc
daa
xchg
mov
push
add
cmp
rcll
sub
dec
test
and
test
and
sbb
ljmp
arpl
cli
pop
rol
add
and
cmp
pop
insb
js
lcall
inc
sbb
stc
fstpl
mov
fadds
lock
fcompl
fwait
cmp
pusha
pop
mov
inc
jge
call
push
xchg
out
add
les
lret
sbb
nop
daa
adc
add
xor
cltd
nop
inc
jbe
xor
push
push
or
jbe
enter
enter
insb
in
mov
add
add
xor
pop
cmp
push
mov
or
nop
adc
push
add
mov
loop,pn
adc
inc
pop
xchg
nop
outsl
aaa
in
pusha
inc
mov
lahf
lods
mov
pop
jns
and
repnz
push
jbe
inc
mov
push
cs
pop
add
in
dec
mov
movsl
add
sbb
pop
xor
or
dec
and
jae
jl
push
or
ret
stos
ret
nop
aas
adc
xor
dec
jns
mov
push
sub
cmp
dec
mov
mov
sarl
int3
xor
jl
pop
pop
mov
frstor
js
push
loopne
dec
xchg
add
cs
and
imul
add
dec
jecxz
or
fs
adc
xchg
mov
shll
icebp
dec
dec
inc
cmpb
inc
movsl
addr16
adc
sub
inc
std
ss
jl
inc
or
test
mov
test
push
push
pop
adc
lea
cmpb
sbb
adc
nop
shrl
pop
leave
rorb
cmp
and
add
inc
outsb
test
adcl
xlat
fiaddl
xor
add
leave
out
mov
add
add
add
and
pop
cmp
or
ss
adc
add
pusha
std
daa
push
sub
sub
cmp
mov
mov
push
insl
lcall
cli
mov
sub
andl
add
add
inc
pop
inc
and
test
inc
lods
and
and
xchg
lahf
cmpb
xchg
add
lods
add
dec
inc
aad
or
xchg
adc
and
fdivl
subb
movsb
mov
sbbb
or
push
mov
sbb
or
adc
lds
sub
cwtl
push
adc
xor
dec
jno
test
xor
xchg
cmp
ja
lcall
add
adc
xor
call
int3
sbb
jb
or
outsl
adc
jne
invd
fisubl
ja
les
ja
sbb
pop
daa
stos
rcll
lret
mov
pop
mov
sahf
add
add
mov
xchg
xchg
in
or
enter
orb
jmp
andb
rolb
cmp
xchg
push
add
push
and
mov
scas
addr16
cmp
xchg
notb
dec
adc
pop
and
inc
nop
popa
and
leave
or
rorb
ret
jno
ret
sbb
in
push
sbb
jne
pop
cmp
cltd
icebp
jne
mov
aaa
add
or
push
sub
add
int3
and
or
invd
daa
mov
or
adc
andl
inc
push
or
cmp
cli
adc
outsl
xor
enter
cli
push
imul
xchg
pushl
add
pop
sbb
push
push
and
ret
or
cld
movsl
stos
add
cmpb
lret
repnz
stos
add
jo
inc
scas
cmp
and
pop
sub
inc
aas
sbb
mov
mov
add
roll
jbe
div
test
fadds
xchg
int3
aaa
les
mov
pushf
cmpb
je
sti
cmp
sbbb
dec
add
in
insl
fistpll
xchg
rorl
add
out
popf
jno
ja
cmp
out
adc
inc
jp
mov
xchg
data16
add
and
mov
cwtl
mov
outsb
xchg
shll
loopne
pushf
push
imul
push
mov
repnz
mov
dec
cmpb
push
ja
js
inc
stos
mov
cs
mov
xor
mov
dec
xchg
sub
and
test
loopne
jmp
jl
imul
nop
inc
mov
mov
call
push
xorb
sahf
lods
push
inc
add
and
scas
mov
adc
movsl
jl
jae
int
mov
xchg
dec
sbb
inc
add
add
adc
das
sub
lcall
inc
lcall
xchg
xchg
mov
pop
push
nop
cltd
pop
mov
push
or
sbb
sbb
inc
jle
add
xor
cmp
cmp
pop
ss
std
xor
or
shlb
or
adc
rorb
in
xchg
cmp
cmpsb
jge
jns
xor
ds
pushf
add
or
outsl
pop
repnz
dec
sbb
popa
sub
jo
shll
xor
and
add
lea
adc
fmuls
and
sbb
xor
push
nop
mov
and
cmpsl
push
outsb
cmp
xchg
movsb
xchg
push
and
nop
or
or
adc
leave
nop
cmp
test
push
lret
sbb
push
adc
and
fs
adc
arpl
mov
add
sub
adc
arpl
fcmovbe
int
arpl
sub
cmp
inc
dec
and
jmp
call
cmpsb
cmp
sub
mov
movsb
push
inc
lods
pop
push
lods
push
and
add
jp
les
mov
inc
inc
adc
jp
add
push
xchg
fsubrs
jo
inc
xchg
cmp
pop
dec
popf
fistpll
mov
jge
cmc
pop
dec
movsb
sti
add
loope
mov
add
imul
dec
mov
jae
popf
mov
dec
inc
clc
dec
xor
loope
push
idivb
ret
cmp
add
mov
mov
popf
jp
fildl
add
pushaw
lea
sbb
mov
push
movsb
dec
fnstsw
xchg
mov
neg
xchg
movsb
neg
sbb
cmpsb
xchg
in
mov
addr16
xor
add
push
or
sti
jmp
ja
cmp
push
andl
add
cli
ss
roll
or
fisubs
push
push
push
pop
outsb
lds
lds
or
adc
data16
cmpsl
lds
or
outsb
sbb
out
jg
push
imul
mov
pop
rorl
sbb
lahf
sub
xchg
push
inc
sbb
arpl
jbe
jo
adc
out
or
push
jae
add
mov
mov
orl
adc
gs
jmp
sbb
cmp
sbb
sbb
xchg
inc
cwtl
mov
or
ret
xor
xchg
ds
sar
dec
dec
inc
out
pop
lea
xchg
xor
inc
das
and
push
mov
adc
sbb
mov
lods
add
xchg
hlt
or
enter
add
xchg
enter
adc
xchg
adc
mov
inc
sti
adc
ret
pop
or
adc
sbb
pop
dec
ljmp
fdivs
jns
cltd
push
sbb
or
fsubl
push
jo
add
add
xchg
push
add
sbb
fcmove
adc
add
or
or
pop
dec
pop
or
lock
pop
add
sub
rcrb
mov
pop
cmpb
out
or
jns
inc
imul
test
jne
or
jg
pop
inc
inc
mov
pop
lds
pop
stos
mov
inc
push
sti
sub
dec
pop
mov
lods
xor
bound
lea
jg
cmp
jle
push
adc
and
xlat
jae
sbb
ret
mov
mov
inc
fmull
push
cmp
cmp
mov
add
lea
jb
leave
jnp
cs
dec
push
push
pop
fs
jmp
xchg
pop
jne
orl
aaa
movsb
cmpsb
repnz
insl
les
popf
sti
adc
or
decb
or
sbb
mov
mov
inc
add
dec
push
or
fwait
mov
or
pop
dec
adc
pop
rorb
and
jl
movsl
inc
addl
jle
inc
jno
test
mov
cmpb
or
mov
xchg
and
or
sub
inc
inc
cmp
out
adc
sbb
loop
loope
xchg
ds
sbb
sub
and
out
sub
xor
pop
inc
push
jnp
movsb
xchg
aam
lea
or
mov
pop
movsw
cmp
cld
push
mov
pusha
dec
adc
das
inc
and
sbb
pushl
inc
mov
and
pop
and
adc
pop
add
inc
out
rclb
push
int3
test
cli
test
dec
cmp
je
adc
push
in
adc
cmp
ss
sub
fsts
shll
sbb
outsb
or
mov
adc
jno
movb
shlb
and
mov
mov
pusha
addl
aaa
and
hlt
es
inc
mov
sbb
mov
mov
xor
out
and
or
xchg
cmp
xor
add
loop
mov
adc
cmpsl
in
movsb
inc
sbb
je
icebp
or
outsl
shlb
xor
sub
xchg
add
push
lods
or
jbe
or
adc
sub
fadds
adc
and
xor
or
push
stos
movsb
dec
test
test
mov
scas
sub
js
lahf
xor
sbb
sbb
test
xchg
bound
inc
cmp
ja
push
add
adc
push
adc
jne
mov
mov
and
dec
xchg
or
fwait
or
popa
xor
mov
aas
pushf
mov
int3
mov
add
jne
js
mov
xchg
or
or
mov
fsubl
xchg
addb
inc
outsl
push
sbbb
add
push
add
jo
adc
push
cmp
push
loope
mov
xchg
ret
test
pop
adc
or
mov
jle
ror
cmpl
pop
int
mov
cmp
push
es
add
scas
adc
xchg
ret
push
push
xchg
ret
mov
dec
lcall
sub
inc
adc
mov
fcmove
sub
dec
rolb
xchg
ljmp
mov
push
xchg
cs
xchg
cmp
xor
lock
inc
jo
icebp
add
xorl
mov
hlt
pusha
mov
je
je
mov
test
test
xor
cld
jne
rolb
pop
addr16
fwait
inc
sbb
xlat
or
adc
push
xchg
or
push
cmc
sub
and
ror
js
ja
or
push
cmp
xor
mov
dec
ret
mov
pop
mov
or
xor
xlat
fdivrl
aas
cmp
pop
sarl
or
repz
sbb
cmovs
insl
and
add
or
pop
mov
lea
mov
mov
and
cmp
xorb
or
ret
inc
pusha
xchg
pushl
sub
inc
aaa
movsl
add
subl
add
sbb
cmp
cmp
outsl
jle
mov
hlt
sahf
pop
sti
and
and
cwtl
inc
add
cwtl
xchg
fs
jecxz
repnz
pop
mov
cmp
or
pmullw
das
xchg
xor
jae
lods
dec
mov
xor
test
scas
jle
cmpsl
cmp
stos
lock
dec
cmpxchg
fcoml
pop
addl
dec
ds
add
push
jb
movb
js
aaa
xlat
mov
add
xor
xchg
stc
js
push
push
sub
add
orb
adc
cltd
push
push
jo
loope
or
inc
sbb
ljmp
cmc
jbe
scas
ja
pop
pop
or
cmp
jl
inc
jo
daa
xchg
dec
xchg
mov
xchg
cmpl
mov
in
push
xor
xor
mov
aas
mov
and
sbb
setle
jns
and
mov
jbe
or
mov
sbb
pop
dec
in
insb
nop
pop
gs
out
inc
xchg
pop
push
dec
clc
cmpl
xor
xchg
jp
mov
out
adc
addr16
shr
lods
inc
jns
add
jo
push
rclb
push
loope
pushf
aas
jo
mov
inc
xchg
addr16
popf
mov
adc
jb
test
rorb
jge
in
nop
mov
or
addr16
fmuls
mov
cmp
sub
push
push
push
pusha
loope
push
and
mov
xchg
rol
movsb
mov
mov
loopne
mov
add
dec
add
sub
mov
and
pop
cmp
sti
out
xchg
mov
addl
sbb
sub
push
mov
mov
and
sub
push
jo
shrb
imul
cwtl
inc
mov
iret
lcall
imul
dec
ret
pop
or
adcl
inc
add
sub
mov
adc
ja
xor
cmp
clc
mov
inc
xor
mov
inc
sbb
and
inc
orl
pop
andl
int
cmp
pop
inc
inc
and
push
dec
mov
push
pop
xor
xchg
sub
pop
into
fbld
mov
dec
cld
es
negb
cld
adc
and
or
xorl
test
mov
lret
or
add
pop
push
call
popf
pop
mov
jmp
fnstcw
sub
stos
test
mov
fiadds
ja
sbb
je
inc
push
add
xor
fstl
cmp
lods
lret
ljmp
xor
sahf
adc
sbb
mov
loopne
outsl
push
cmp
nop
mov
jbe
sbb
cmp
jp
cmp
jo
cmp
addr16
push
pop
lret
mov
imul
xor
pop
pop
xchg
and
jg
cmp
cmp
fstpl
push
jne
push
add
or
nop
mov
rorl
or
or
inc
push
insb
push
xchg
aas
loopne
lock
cmp
jo
mov
adc
sub
enter
jmp
and
xor
sbb
and
mov
push
mov
add
dec
jg
repnz
adc
inc
scas
pop
jl
or
jo
jmp
cmp
loope
pop
out
sbb
push
sbb
bound
imul
pop
sub
push
and
jmp
mov
mov
jno
lods
andl
aad
addr16
cld
mov
sub
inc
or
dec
fisttps
ljmp
sbb
jg
insb
or
mov
cmp
or
lea
lea
jne
add
test
sub
daa
rolb
dec
imul
inc
sbb
add
adc
imul
add
jae
sbb
fidivl
ffreep
mov
xor
mov
mov
lcall
pop
pop
push
push
sbb
aas
xchg
mov
cmp
or
push
cltd
subb
stos
repz
add
cmp
mov
adc
or
adc
std
sub
loop
xchg
dec
mov
and
xchg
xchg
imul
pop
insb
and
jle
sarl
inc
xchg
push
loopne,pt
cmpsl
add
cmp
lcall
mov
and
push
aaa
xorl
xor
xor
daa
bound
gs
or
test
mov
or
push
mov
mov
fdivp
adc
jl
mov
inc
jns
add
cmpsl
mov
lea
mov
pop
imul
push
inc
xchg
ret
dec
sbb
jns
outsl
sub
sub
or
daa
xchg
inc
or
or
popf
sub
icebp
adc
xor
enter
jo
xchg
pushf
or
les
test
sbb
test
mov
add
dec
inc
dec
lret
mov
aas
dec
call
lcall
xchg
mov
mov
jo
jne
lea
mov
in
and
jbe
or
fisubrl
or
or
imul
push
clc
and
sahf
or
loop
ds
ss
dec
out
mov
xchg
and
inc
mov
icebp
cli
mov
pop
incl
mov
decl
xchg
sbb
mov
comiss
fnstcw
mov
outsl
inc
dec
pushl
inc
and
nop
lahf
add
adc
push
pop
subl
pop
sub
rolb
outsb
and
cmp
cwtl
xor
xor
jmp
popa
nop
call
dec
sbb
clc
adc
mov
mov
dec
dec
sbb
imul
imul
inc
mov
popf
mov
ljmp
and
push
jecxz
push
xor
gs
adc
mov
std
lods
inc
mov
cli
and
je
shll
mov
js
and
mov
cmc
xchg
xor
repnz
cmova
jne
mov
rcll
test
stc
jmp
cmp
inc
sbb
cs
mov
enter
jb
jmp
je
in
push
inc
cmp
insl
jmp
push
adc
sbb
lea
pop
dec
and
mov
mov
or
test
ja
jl
clc
xor
jo
and
pop
pop
or
adc
dec
out
xchg
insb
mov
inc
test
outsl
mov
xor
test
pop
mov
dec
xor
mov
xchg
dec
push
punpckhdq
imul
cmp
cmp
repz
daa
sahf
xor
shr
inc
rcrb
rcrb
mov
sbb
les
mov
sub
notl
jmp
and
mov
mov
outsb
leave
loopne
add
add
mov
popl
cltd
js
push
shlb
js
mov
mov
cs
cmp
outsb
inc
insl
cmp
dec
add
dec
push
insb
push
mov
mov
dec
inc
stc
jmp
mov
mov
and
sbb
adc
cmp
mov
sbb
pop
fwait
rolb
ret
mov
adc
aam
ss
inc
xchg
in
xchg
cmp
add
sbb
xchg
lock
jne
cmpsl
pop
xchg
ficomps
or
xchg
test
loope
cltd
mov
fldt
mov
xor
inc
out
or
inc
int
mov
loopne
and
sub
sub
adc
inc
testl
or
mov
rorb
imul
pop
add
mov
adc
jbe
sub
inc
ret
sahf
sub
sbb
and
sub
or
lds
je
mov
hlt
adc
sub
frstor
xchg
dec
mov
xchg
vmptrst
cmpl
mov
sarb
sahf
mov
xor
cmp
sbb
adc
sbb
adc
add
adcl
iret
xor
adc
lret
data16
icebp
jmp
adc
sti
sahf
dec
or
dec
inc
cmpl
in
je
sahf
inc
je
dec
mov
adc
mov
sub
fldcw
jo
mov
pop
shlb
adc
ss
add
rcl
out
adc
outsb
adc
stc
enter
jb
lret
rol
inc
fsubrp
mov
out
push
cmp
and
daa
add
or
pop
je
inc
daa
fmul
jecxz
mov
fisubl
cmp
xor
add
rcrb
xchg
pop
jb
ljmp
xchg
add
inc
xor
loope
mov
clc
xchg
push
stc
cs
jp
aaa
mov
cmp
test
jl
imul
adcl
in
cwtl
call
push
ss
fsubp
sbb
std
adc
rorb
sub
xor
test
or
mov
sbbb
adc
or
in
adc
xor
sarl
mov
jne
and
jecxz
fisubrs
sub
pop
sub
adc
xor
jg
inc
mov
xor
jo
xchg
arpl
add
sub
jo
ds
xor
add
pop
sub
jmp
dec
push
clc
out
pop
sti
xchg
leave
fisubl
inc
inc
cltd
push
jp
sbb
leave
mov
dec
cwtl
lods
sbb
cmp
xchg
xor
mov
jl
mov
mov
dec
dec
fiadds
jl
mov
pop
fildl
test
adc
push
mov
idivb
mov
shlb
xchg
orb
testl
addr16
adc
add
aad
rcrb
iret
fdivrs
or
mov
sbb
in
xchg
ja
imul
fs
fs
mov
sbbl
xchg
sub
repnz
sub
in
cmc
movsl
add
xor
dec
movsl
add
dec
fwait
aad
inc
ja
or
cmc
xor
daa
nop
sbb
push
inc
lret
inc
dec
push
iret
dec
jne
addr16
and
testb
nop
xchg
xchg
pop
push
hlt
mov
mov
mov
xchg
cli
inc
sub
icebp
ret
xor
pusha
jnp
push
sbb
jmp
xor
sub
fwait
jmp
dec
sbbl
mov
xor
pop
mov
push
adc
push
clc
dec
pop
or
push
insb
adc
ret
stos
mov
imul
rcr
mov
in
jp
test
rorb
add
inc
dec
push
sbb
cmc
outsb
and
push
dec
cwtl
js
and
cmp
pop
lods
push
repnz
rol
hlt
jl
pop
pop
gs
fbld
dec
cmc
sarb
ss
rcrl
add
sbb
xor
jnp
mov
xor
or
jmp
pop
mov
mov
data16
inc
adc
xlat
jno
lea
ds
jo
jle
mov
mov
jne
shlb
mov
dec
pop
inc
push
xchg
ds
popf
adcl
inc
adc
or
sub
ret
dec
push
xor
push
push
sub
inc
test
clc
pop
movsl
and
dec
mov
xchg
jo
mov
lds
outsl
lea
adc
aas
addb
popf
xorl
adc
push
cmp
cmp
and
nop
mov
roll
or
or
gs
adc
adc
jmp
iret
cmp
or
mov
mov
cmpsb
pop
data16
dec
push
inc
adc
testb
mov
cmp
or
jno
mov
jecxz
sbb
jo
mov
adc
out
lret
dec
jmp
jo
in
fwait
sbb
cmpsb
cmpb
add
mov
lcall
orb
push
adc
aam
in
xor
aad
push
mov
cli
push
cli
sbb
movsb
or
leave
test
lea
adcl
hlt
cmp
inc
xor
or
push
daa
lods
xchg
out
les
jp
xor
sub
push
repz
cmp
xchg
jle
mov
mov
bound
sub
pop
inc
rorb
aaa
lret
popa
mov
adc
js
adc
cmp
add
andl
test
or
adc
lahf
add
adc
push
inc
jb
lea
movb
jmp
dec
lock
int
xchg
adcb
or
ss
dec
jo
xor
sbbb
sub
add
adc
sub
adc
xor
jmp
out
loopne
jae
inc
or
rdtsc
or
in
or
add
inc
xchg
adc
clc
das
and
test
ret
add
dec
scas
or
mov
add
pop
adc
mov
mov
ljmp
addb
jnp
or
sub
adc
pop
or
leave
aas
add
cmp
mov
dec
xchg
ss
cmpl
adcl
add
push
xor
shrb
add
add
addr16
push
mov
ret
int
sub
mov
out
jmp
pop
inc
push
stos
mov
fisubs
into
daa
filds
mov
mov
lret
pop
add
repz
or
call
lea
es
mov
inc
inc
out
lods
cmp
jmp
jecxz
out
jmp
fists
lret
xchg
xorb
jl
sbb
adc
addb
or
shll
xlat
dec
clc
xor
xlat
testb
sub
leave
inc
add
pop
dec
out
scas
testl
and
mov
iret
adc
divps
jo
adc
or
and
jne
clc
loopne
and
test
dec
or
pusha
outsl
lock
jl
push
cmp
xchg
inc
jg
je
push
insl
add
adc
shll
or
adc
mov
sub
rolb
and
inc
mov
xlat
xchg
inc
cmpsb
adc
xlat
or
mov
shrl
out
hlt
or
xorb
sub
mov
test
fbld
in
or
add
mov
dec
sub
xchg
mov
pop
push
mov
sbb
or
xor
lods
pop
jnp
adc
dec
jne
jae
dec
add
xchg
sub
lea
sbb
pop
sbb
shlb
inc
and
mov
in
push
dec
dec
and
lret
inc
movsb
mov
mov
mov
imull
add
lods
inc
dec
lret
in
add
xchg
sub
jmp
ljmp
sbb
data16
sbb
mov
or
dec
lcall
xchg
pop
jp
sbb
inc
dec
adc
or
mov
or
call
insb
jle
jns
enter
xchg
test
mov
inc
add
pop
call
sbb
dec
xchg
sbb
out
jle
sub
bound
mov
jge
fsubrl
test
faddl
xchg
adc
inc
pushfw
mov
daa
sub
and
inc
xor
adc
inc
subb
popa
test
add
pop
xor
notb
add
inc
scas
rorb
pop
test
mov
jl
cmp
add
iret
popa
rclb
jb
jmp
push
inc
pop
jp
fistl
sbb
popf
shll
dec
loope
movsl
or
xor
js
lcall
or
sub
inc
bound
pop
add
imul
dec
mov
push
imul
enter
iret
add
push
clc
mov
inc
xor
jge
je
repnz
push
pop
and
add
ret
jp
xchg
mov
cltd
popf
movsb
popa
leave
push
add
xor
push
xor
cmovl
pop
push
and
xorl
jne
mov
xor
pop
dec
sar
roll
aaa
sub
jg
xchg
mov
jo
sar
jns
adc
jmp
mov
mov
xor
mov
in
xchg
push
adc
jle
mov
les
sbb
mov
dec
roll
adc
dec
sub
jle
add
dec
es
ret
add
push
pop
add
pop
les
jne
mov
xor
sub
cmp
adc
fnstenv
xchg
xor
push
or
add
jne
js
movsb
jecxz
pushf
or
cmp
push
repz
in
popa
pop
fmull
les
xchg
pusha
push
nop
and
rclb
repz
lock
push
add
sub
cmp
xor
xor
mov
ss
sbb
movsl
adc
jecxz
imul
js
pop
inc
andb
xor
dec
shl
or
jbe
shll
btc
test
incl
jg
in
add
jmp
mov
adc
or
insb
cmp
pop
enter
inc
nop
dec
jecxz
jg
add
out
push
je
push
adc
cmp
fldt
xchg
xchg
inc
jo
pusha
xchg
adcl
and
or
pop
sbb
jmp
das
or
or
or
sbb
adc
pop
xlat
andl
jne
mov
pop
nop
es
mov
movsl
xor
fsubrl
cli
ja
dec
bound
cmp
add
sbb
ret
jo
xchg
mov
mov
sub
cld
lea
inc
dec
pop
and
lret
pop
in
nop
push
push
cld
pop
leave
inc
or
test
inc
sbb
push
xor
xor
pop
dec
sbb
cmc
fisubrs
jne
jl
xchg
mov
sbb
adc
nop
or
dec
jmp
or
add
cmpsb
popa
aam
movsb
dec
mov
lods
mov
inc
cmpsl
rcrl
add
les
xor
push
insb
sbb
call
mov
mov
jno
add
add
inc
insb
lock
sbb
xchg
arpl
sub
dec
adc
fnsave
imul
loop
bound
es
xchg
or
stc
push
xchg
mov
scas
adc
shll
sti
sub
sahf
dec
les
cmc
por
and
sbb
inc
inc
jecxz
fs
test
jns
mov
xchg
daa
sbb
pshufw
repnz
sub
xor
or
insb
xor
jecxz
xor
xor
push
sub
rcrl
leave
loope
mull
xchg
xor
bound
scas
mov
incw
mov
in
xorb
clc
jg
mov
pop
adc
xlat
mov
adc
adc
or
jo
jns
adc
push
popf
sbb
fisubs
mov
mov
xchg
inc
loopne
mov
add
sbb
lea
mov
mov
xor
dec
xchg
mov
or
in
push
pop
pop
pusha
movsl
dec
push
ss
add
ret
nop
fwait
and
mov
lahf
mov
ss
and
je
push
jbe
cmp
je
adc
lcall
mov
daa
enter
int
sub
and
add
pop
sub
jmp
mov
movsb
adcb
xchg
adc
xchg
push
faddl
daa
sahf
mov
enter
dec
lret
fdivs
mov
lret
xchg
lea
jge
das
and
add
xor
std
cmp
nop
xchg
xor
lahf
test
sbb
cmp
sub
xchg
jmp
cmp
mov
rcrl
pop
pop
pop
rcrb
mov
pop
lock
adc
or
mov
test
fsts
movsb
popa
insl
cmp
pop
dec
xchg
pusha
loopne
sbb
in
nop
xor
sub
pusha
xorb
adc
push
jl
lock
lea
add
fstpt
fdivl
movsb
sub
push
cmovnp
sub
test
and
andb
adc
jge
adc
insl
inc
shl
mov
rclb
lret
jmp
and
movsb
jae
pop
dec
lea
lods
mov
insb
adc
mov
add
xchg
sbb
js
mov
call
mov
push
leave
cli
add
cmp
cmp
dec
add
jne
nop
add
sbb
or
repz
push
or
aaa
pop
jecxz
arpl
xchg
pop
cmp
cmp
adc
inc
jnp
mov
je
mov
push
nop
sub
xor
in
mov
sbb
or
loope
sub
insl
mull
lock
mov
sbb
mov
xchg
push
dec
push
jl
xchg
push
mov
jbe
gs
mov
pop
addr16
push
sbb
sbb
dec
adc
sbb
mov
mov
fsubr
or
and
sbb
cmp
cmp
xor
mov
sbb
dec
and
inc
or
adc
mov
test
mov
dec
or
and
and
add
mov
or
lock
repz
sub
pusha
decl
xor
inc
adc
mov
fnstsw
filds
xor
inc
dec
pop
sbb
mov
xor
push
aas
mov
xchg
or
xchg
xchg
mov
or
cmp
inc
or
negl
or
popf
adc
pusha
inc
sbb
cwtl
xor
mov
int3
inc
jo
xchg
sub
loopne
mov
push
add
adc
out
xchg
xor
insb
loop
jno
jnp
shll
sub
psubw
sub
cmp
ja
lahf
push
fs
sti
xor
lcall
rcr
dec
inc
fldl
sbb
icebp
and
xchg
dec
or
sbb
add
nop
mov
add
xor
lret
jge
aam
daa
push
add
push
jns
lcall
testl
and
xor
pusha
insl
movsl
push
test
push
mov
loopne
aas
xor
adc
add
cwtl
mov
or
clc
mov
adc
mov
xchg
gs
out
enter
push
movsb
int
pusha
and
pop
mov
lret
pop
xor
sub
mov
fldcw
xor
ret
or
inc
nopl
insl
or
std
push
aam
lret
pop
cmp
mov
xchg
push
das
hlt
push
or
inc
sbb
jecxz
pop
movsl
or
ljmp
pusha
inc
insl
rcrl
ret
pop
fisttpll
jne
cmp
push
or
fsubr
ficoml
pop
dec
ret
add
in
mov
int3
dec
jmp
fistps
fwait
nop
lret
je
insl
pop
xlat
cmpsb
call
xor
ds
nop
cmp
mov
inc
mov
shrb
adc
cmovg
xchg
rorb
iret
ss
imul
dec
fdivr
cmp
aas
test
movl
fisubl
xor
add
xor
sub
loopne
jmp
mov
push
insl
stc
adc
inc
add
iret
inc
sub
and
daa
sub
fs
inc
inc
decl
pop
je
cvtdq2ps
dec
sub
or
sub
shlb
pop
adc
adc
and
fisubrl
inc
xchg
das
dec
in
movsl
test
in
adc
sub
push
or
sub
fisttpl
orl
enter
add
sub
enter
pop
adc
sub
testb
lcall
out
jo
mov
mov
fisttpl
out
mov
dec
loope
jae
cmpsl
xchg
cmp
add
mov
and
cwtl
nop
or
sbb
lret
pop
xchg
xor
xchg
inc
mov
mov
mov
adc
fidivrl
mov
jge
pop
lahf
and
adc
mov
das
imul
popa
mov
mov
mov
mov
xor
inc
test
adc
cmp
inc
push
cmp
cmp
dec
xor
xchg
pop
cmp
pop
mov
lds
xor
jmp
sub
pop
cmpsl
fadd
and
movb
add
ret
pop
dec
dec
and
and
and
xchg
and
pushf
mov
cmp
push
push
mov
push
pop
dec
or
and
dec
jg
mov
aaa
push
roll
push
pop
cwtl
xor
lcall
fs
xchg
cmp
dec
mov
mov
enter
pusha
jmp
sub
dec
in
pop
ficoml
dec
repz
lret
das
movsl
cmpl
cmp
add
pop
mov
push
call
outsb
or
lahf
daa
inc
pusha
ja
mov
mov
cmp
aam
cmp
jl
or
jle
sub
jo
adc
xchg
dec
cld
jno
cmp
mov
dec
lret
shll
pop
xor
fmuls
cmpsb
pop
or
jmp
adc
sub
imul
add
insb
jne
sub
or
out
enter
pop
mov
dec
mov
sbb
adcl
add
push
hlt
es
sbb
rcrb
mov
xchg
push
popf
push
push
pop
mov
add
add
pop
cmpsl
in
jg
pop
mov
inc
stos
test
orb
xorl
dec
arpl
in
mov
sarb
test
inc
inc
or
lods
and
mov
add
scas
jp
add
add
rolb
xchg
cmp
mov
cmp
imul
push
mov
insl
pop
sbbb
shlb
imul
cmp
lahf
sub
and
cmp
cmp
jne
cmp
add
adc
xor
push
and
pop
or
cmp
cmp
push
out
movl
test
cltd
out
addl
negb
mov
inc
and
ret
cmp
or
test
mov
xchg
fdivs
lods
inc
push
test
insb
sbb
adc
xchg
push
sub
les
add
lret
mov
ret
fldt
cmpl
add
sbb
fsubs
call
das
xchg
xor
aas
push
push
xor
sub
rolb
imul
adc
ss
sub
adc
dec
or
inc
xor
jae
je
mov
sub
jne
gs
push
xchg
push
xor
jo
bound
clc
adc
call
mov
or
cs
push
push
dec
pop
fldcw
and
lock
incl
cltd
or
popa
mov
cltd
insb
movsl
insb
andb
mov
ret
subb
ljmp
or
test
outsb
xchg
mov
scas
sbb
push
cwtl
sub
test
in
cmp
or
pop
int3
cmp
movl
es
incl
xorb
cmp
in
fmuls
arpl
add
out
dec
mov
and
pop
mov
clc
mov
push
lods
inc
adcb
arpl
mov
pop
loope
pop
jns
mov
mov
mov
push
idivb
xor
adc
pushf
xor
xorb
js
repz
pushf
cmp
mov
and
pusha
arpl
jae
popa
add
adc
dec
sbb
add
inc
fs
xor
and
fstpt
dec
inc
dec
test
push
sbb
insl
mov
jbe
cltd
and
and
sub
or
fwait
xchg
out
and
dec
mov
add
and
dec
push
aam
dec
sub
sub
cmp
std
mov
and
inc
jmp
and
pop
mov
sbb
jae
int
hlt
scas
inc
cld
cmp
jl
push
sbb
xor
inc
adc
cmp
sub
ja
jmp
sbb
mov
pushf
les
jmp
sub
leave
fdivs
pushf
sarb
pusha
adc
leave
ret
cmpsl
cmc
dec
jmp
jne
sub
mov
je
out
dec
cmp
push
add
in
and
or
out
and
inc
push
pop
movsl
sbb
inc
xchg
dec
push
sub
pop
pop
xor
inc
and
inc
or
xor
lock
xor
add
sbb
nop
push
pop
imul
push
sbb
sbb
stc
clc
hlt
mov
mov
add
subl
xchg
movsl
lods
das
pop
mov
mov
xor
sarb
and
jmp
nop
leave
pop
ret
in
push
into
and
add
cmp
inc
orb
mov
fldenv
inc
pop
faddp
add
xchg
enter
hlt
je
clc
movsb
movsb
xchg
cmp
and
sbb
add
cmp
mov
or
sub
scas
loopne
xor
sub
outsl
addr16
dec
push
jnp
rcrb
sbb
sbb
mov
pop
xor
test
xor
pop
pop
ds
mov
addl
add
or
int3
xor
daa
cmpsl
test
add
je
shl
add
add
fs
testb
sahf
jl
adc
add
sbb
shrl
push
nop
decl
inc
je
sbb
mov
sahf
dec
sub
sub
add
repnz
xor
fldl
in
mov
testl
dec
dec
cwtl
test
add
call
dec
adc
fidivs
inc
add
xchg
dec
pop
mov
lock
dec
or
sub
out
rolb
cmp
int
mov
inc
jecxz
test
sbb
adc
mov
fistpll
sub
adc
sub
jmp
nop
add
pushf
adc
shll
add
pop
adc
or
xor
movsb
add
ret
clc
add
or
push
mov
mov
adc
add
fsubl
les
xchg
cmp
pop
bound
adc
push
mov
xchg
mov
out
sbbl
xor
rcll
xor
dec
add
cmp
dec
lock
js
mov
loopne
cmp
and
into
leave
je
pop
push
out
xorl
shl
xor
mov
outsb
in
mov
xor
insb
lock
lds
mov
andl
lods
or
sbb
loopne
aaa
or
jnp
inc
mov
or
pop
add
adc
xor
jno
dec
divl
cmc
push
mov
sbb
insl
and
mov
aaa
jmp
sbb
pushl
pushl
mov
pop
sub
xor
data16
ret
xchg
mov
add
outsl
pop
lea
cmp
sub
adc
movsb
or
es
lods
mov
mov
movsb
dec
jne
dec
pop
cs
ja
and
adc
inc
pop
adc
or
or
sti
dec
sbb
push
pop
daa
cmpsl
insl
and
and
xor
sbb
sbbb
jb
arpl
stc
and
mov
inc
adc
les
int
inc
pop
adc
xrelease
xor
iret
mov
and
or
add
mov
xor
ret
addr16
mov
andl
in
fiaddl
xor
arpl
pusha
insl
outsb
or
sub
add
sti
jl
mov
sbb
mov
clc
cmc
sbb
dec
test
adc
xchg
mov
aam
or
call
repnz
inc
lods
stc
test
push
push
xchg
and
inc
pop
add
dec
test
int3
cld
xchg
dec
cmpsl
pusha
imul
ljmp
xlat
dec
inc
dec
dec
dec
inc
dec
dec
icebp
jmp
fldl
push
dec
stc
or
cs
loopne
in
or
movl
loopne
lret
fstp
xchg
inc
sbb
sbb
pop
in
xchg
mov
movb
push
jecxz
or
xchg
mov
push
fs
adc
jle
push
push
mov
icebp
or
add
adc
movaps
push
or
push
rorb
and
sahf
inc
dec
sub
addb
inc
and
adc
and
and
cwtl
mov
cmpsl
mov
aam
aam
xor
or
pop
iret
cmp
addr16
jno
dec
add
xchg
rcl
sub
inc
inc
in
movsb
xchg
nop
xor
ret
les
insb
sbb
mov
leave
and
cwtl
aam
mov
or
popf
xchg
ficoml
popa
add
sbb
test
aam
cs
insl
inc
xor
push
push
push
dec
lods
adc
popf
xchg
sbb
pop
mov
xchg
das
repnz
insl
cmp
jns
push
dec
xor
sbb
psubb
movsb
aam
mov
adc
ljmp
rclb
dec
and
cmp
mov
add
sbb
push
push
or
je
inc
jne
lea
loopne
aaa
cmpsb
scas
ret
into
stc
pop
loop
inc
sub
xor
addb
je
add
test
mov
sbb
push
add
add
mov
dec
mov
xchg
jbe
nop
or
add
mov
ss
imul
inc
or
xchg
inc
pusha
mov
and
pop
in
sub
dec
jo
inc
lock
rcll
and
fs
pop
pop
shlb
jo
iret
dec
enter
inc
pop
inc
addr16
add
aad
mov
aaa
incl
jne
mov
mov
xchg
or
dec
mov
add
or
mov
push
pop
aas
stos
aam
in
lods
roll
push
pop
xchg
pop
dec
add
sbbl
fnsave
lea
mov
add
nop
pop
insb
mov
mov
pop
or
rcrb
call
shlb
sbb
fidivs
and
inc
cmp
mov
xor
fsubrs
popf
dec
jmp
xchg
mov
loop
and
inc
jo
fsubrs
aaa
addr16
test
mov
jmp
push
or
xor
and
cld
jg
xchg
sub
mov
sub
enter
mov
push
push
popa
mov
jne
je
push
dec
out
add
int
mov
ss
mov
je
inc
sbb
sub
cwtl
pop
les
nop
fiaddl
xchg
sbb
jecxz
fsubrl
mov
xor
int
fisttpl
add
gs
add
mov
pop
sti
push
ljmp
and
or
loopne
jecxz
mov
pushf
mov
mov
decl
xorb
sub
pop
jne
push
push
test
sti
jg
nop
or
xor
mov
int
orb
ret
sbb
cmpb
mov
rorb
popa
mov
scas
addl
ret
fisubs
sub
adc
or
xor
dec
cmp
pop
xchg
inc
adc
pop
scas
leave
imul
std
mov
lret
mov
add
test
push
mov
adcl
add
inc
add
add
xchg
lods
popf
add
es
dec
and
mov
mov
push
fs
cmpsl
ds
in
xchg
ss
add
mov
xor
xor
mov
add
pop
and
fldl
andl
sub
push
inc
add
jge
cmp
xchg
into
cmpsb
clc
clc
adc
mov
mov
add
dec
jmp
movl
pop
ret
out
cltd
fimull
ret
dec
enter
neg
fdivrl
call
push
xlat
push
ss
add
fnstenv
sbb
inc
fldt
jmp
and
cmp
sbb
xchg
sub
std
je
add
bound
jb
cmpsb
sbb
sbb
add
lahf
add
xchg
pop
push
add
in
repnz
jl
add
or
xor
addr16
repnz
cmpb
je
and
mov
pop
arpl
pop
lods
jnp
and
inc
insb
dec
sub
mov
test
mov
pop
xor
add
mov
lret
add
int
cmp
ja
xor
or
inc
pop
scas
mov
sub
inc
popl
lcall
repz
mov
or
movsl
addr16
dec
mov
mov
or
jl
mov
aad
or
out
sub
pop
sub
inc
mov
rolb
jnp
js
cmp
outsl
cmp
popa
stos
dec
inc
adc
push
adc
loopne
orl
fistpll
mov
ljmp
jbe
test
mov
cmp
push
adc
loopne
or
xchg
push
push
mov
cmp
pushf
cmp
and
int3
shrb
sbb
dec
cmc
test
xchg
arpl
cmp
test
dec
cmp
jmp
cmp
int
sub
call
pop
pop
daa
in
sbb
leave
adc
shrb
adc
jae
or
mov
push
pushf
cmp
shrb
popa
xchg
adc
sbb
and
pop
push
lods
jnp
sub
add
or
cmp
sbb
push
sub
xor
adc
outsl
aaa
sub
xor
sub
incb
daa
dec
fistpl
push
and
ljmp
pop
inc
data16
xchg
push
sbb
aas
les
and
in
pop
movsb
push
cmp
xor
das
les
cmp
sub
jg
jmp
arpl
jmp
in
popa
repz
in
mov
js
inc
fstps
jmp
and
add
xchg
jbe
aas
jmp
cmp
adc
dec
nop
xor
cmpsb
push
js
or
adc
test
nop
push
adc
fldl
dec
bound
lods
mov
cs
jg
sbb
mov
push
outsl
adc
je
addr16
mov
xchg
cmp
fcoml
inc
sbb
std
mov
xor
mov
nop
lds
jno
cmp
inc
shr
or
pop
jno
mov
xchg
inc
mov
cmp
roll
icebp
shll
addr16
nop
rcll
mov
jl
sbb
inc
jecxz
pop
push
icebp
addr16
dec
or
add
push
dec
cmpsl
and
sbb
mov
sbb
sbb
imull
push
sbb
in
push
pop
dec
rcrb
pop
dec
push
push
insl
gs
dec
inc
dec
or
lock
or
xlat
or
xchg
ljmp
sub
mov
inc
sbb
aaa
jmp
push
sbb
jge
cmpsl
popf
mov
cli
mov
sbb
dec
and
jne
mov
shlb
add
mov
and
mov
mov
movsb
mov
sbb
mov
divl
xor
dec
shl
dec
sub
mov
xor
adc
imul
add
adc
fldenv
or
in
adc
bswap
cltd
les
sub
dec
pop
shrb
inc
decl
sbbb
test
ja
out
or
jg
mov
sbb
test
jbe
pop
lock
leave
ljmp
jecxz
nop
or
jmp
cmp
pop
mov
cmp
add
lock
sahf
or
pop
pop
cmp
icebp
jge
push
xchg
js
inc
dec
mov
adc
pop
push
scas
test
rclb
scas
cmpsl
cli
dec
mov
adc
je
mov
mov
fcmovu
mov
das
mov
test
fdivrs
test
test
inc
jnp
and
cmp
push
mov
push
or
movsl
jecxz
add
loope
push
mov
sub
sub
push
jge
or
adc
jl
cmp
mov
sub
decb
cmpl
mov
fstps
jl
or
adc
xchg
or
pop
xchg
inc
jp
jmp
daa
dec
push
hlt
pusha
sbb
lods
jo
mov
and
sbb
mov
jns
jmp
push
push
or
loopne
lods
ret
or
ret
xor
inc
xlat
ds
adc
and
jle
push
movsb
adc
clc
adc
test
push
xorb
in
xor
pop
dec
sbb
call
aas
xlat
sbb
into
lock
push
je
in
idivb
call
sbb
adc
or
fs
jmp
addps
xchg
inc
xor
xchg
in
sbb
and
test
or
leave
push
inc
add
cmp
lods
test
inc
lea
mov
pop
xorl
add
lock
lret
or
or
push
fcmovnbe
inc
cmp
cmp
xlat
mov
and
dec
testl
bound
inc
popa
rep
shlb
cmp
lret
rcr
test
dec
add
fstpl
in
cmpsb
in
mov
jb
adc
xchg
nop
mov
arpl
sbb
pop
jo
sbb
mov
adc
add
sbb
mov
daa
add
pop
adc
and
cltd
mov
sub
adc
movsb
push
adc
loope
push
pushf
adc
cmp
rcrb
sbb
sbb
xor
adc
fnstcw
adc
sbb
and
mov
fwait
loop
cli
lcall
jg
imul
push
mov
push
lods
add
sarl
es
push
fistps
xor
add
nop
jge
test
jl
xchg
add
filds
jno
or
add
mov
ja
or
and
loope
lods
and
lea
push
push
xchg
call
xchg
mov
mov
mov
add
inc
adc
pop
dec
dec
lahf
pop
inc
jns
inc
nop
push
test
jg
fsubr
or
sub
or
cli
loope
fcoms
fs
and
addb
cmp
pusha
xchg
sahf
add
pop
or
mov
pop
repz
jo
inc
or
cmp
sbb
pop
cmp
add
jmp
pop
push
mov
sub
mov
mov
jno
mov
inc
sub
inc
cli
scas
xchg
aam
pop
or
shlb
jle
dec
mov
dec
mov
mov
sub
dec
xor
call
jecxz
and
nop
and
and
inc
xor
fsubrs
rclb
pushf
adc
xor
sub
or
mov
add
subb
rolb
mov
outsl
xchg
xchg
pop
fcmovb
dec
into
daa
dec
jle
js
aam
adc
inc
or
mov
insl
cmp
mov
mov
push
and
insb
adc
loopne
lahf
lods
sbb
movsl
dec
add
or
in
nop
push
loopne
inc
in
aam
cwtl
sbb
ret
push
and
pop
lret
sbb
pop
mov
xor
inc
mov
push
pop
mov
mov
and
sub
adc
adc
or
adc
imul
or
mov
call
add
adc
and
or
mov
mov
mov
xchg
xchg
out
add
inc
cmp
adc
dec
test
xor
cltd
addr16
jnp
mov
repnz
stos
mov
inc
dec
and
cmpl
cmp
addr16
lea
cmp
sbbl
aaa
jne
cmpsb
movzwl
push
push
push
mov
adc
movsb
xchg
adc
inc
add
adc
pushf
and
xchg
mov
popf
test
xor
ror
or
mov
nop
mov
lods
add
jae
sub
adc
inc
sub
add
dec
test
sbb
pop
inc
imul
es
mov
and
test
mov
popf
pop
ret
adc
or
add
ljmp
mov
mov
inc
mov
push
mov
add
push
jmp
inc
cmpsb
inc
push
adc
add
fs
and
xchg
push
push
xchg
xchg
test
adc
movsb
ret
out
shlb
or
mov
sbb
sbb
fiadds
movsl
inc
sbb
mov
jmp
test
dec
aam
fsubrs
out
mov
movsl
in
inc
xor
enter
mov
rcr
mov
add
rcl
inc
dec
mov
xor
cmpl
add
into
nop
in
mov
enter
pop
mov
lods
pop
pop
pop
jno
fisubl
les
xor
mov
mov
dec
cmpsl
and
les
lea
jmp
adc
lods
xchg
xor
cmpsl
adc
jo
cmpl
push
shrb
push
adc
jmp
add
xchg
cmp
mov
cmp
shll
cmp
pop
jecxz
roll
xadd
gs
out
outsb
ja
mov
pusha
dec
and
loop
or
cmp
xlat
clc
sub
dec
xor
nop
mov
sub
jmp
mov
loop
mov
or
lods
mov
mov
mov
jbe
inc
push
rol
dec
xchg
xchg
and
push
clc
jmp
mov
or
cld
js
out
dec
dec
jno
fistpl
fcomp
pop
xor
push
popf
rol
sbb
adcb
insl
cmp
addr16
stos
sti
sub
mov
mov
jge
sbb
dec
in
nop
cmpsl
sti
lods
test
add
aad
mov
push
popf
movsb
int
add
inc
dec
cs
in
add
addb
scas
dec
xchg
andl
push
dec
jl
inc
adc
scas
and
clc
dec
push
or
mov
les
or
adc
dec
cwtl
loope
xor
dec
shll
push
push
mov
push
aad
in
popa
mov
out
roll
cmp
cmpsb
iret
data16
sub
aaa
push
or
and
jl
aad
push
in
add
add
pop
xchg
and
int3
shlb
mov
nop
mov
imul
push
js
cmp
xor
mov
jle
mov
cltd
cmc
xchg
jecxz
mov
sbb
lret
and
jno
insl
mov
outsl
mov
sbb
pop
pop
adc
lret
push
shrb
mov
push
lock
aaa
jmpw
push
dec
and
mov
js,pt
jo
push
add
shl
or
adc
mov
sbb
lds
xchg
rcll
adc
les
mov
daa
into
loopne
lods
nop
jno
or
jmp
mov
pusha
test
push
mov
shlb
flds
insl
adc
mov
lock
push
push
fldt
imul
and
or
in
xchg
lods
js
and
xor
mov
pusha
js
xchg
xor
mov
inc
sub
xchg
cli
pop
gs
pop
repz
mov
mov
adc
loopne
daa
push
aas
cli
ds
mov
arpl
or
into
adc
fisubrs
aam
shl
loopne
clc
fcmovnbe
pop
add
aas
rcrb
jge
aad
pop
ret
push
pop
add
repz
arpl
mov
xchg
shl
iret
adc
pop
jne
int3
shlb
and
push
out
mov
loop
mov
mov
dec
add
mov
sub
xchg
cmc
popa
sbb
dec
call
jl
jne
mov
add
popa
pop
aam
pop
sub
movsb
xlat
inc
xorb
rcll
add
sub
xor
loopne
mov
xchg
and
cmp
and
arpl
sbb
lods
add
xor
cmpsl
inc
sbb
cmp
hlt
mov
sub
lock
imul
mov
popa
mov
adc
mov
out
clc
and
outsb
and
test
rol
and
push
sub
pop
inc
pop
aas
or
movsl
inc
sub
xchg
add
cltd
mov
mov
loope
inc
pop
sbb
xchg
movsb
pushf
cltd
je
and
sub
jmp
or
pop
pop
xchg
xor
nop
push
add
or
notl
sub
xchg
mulb
add
add
out
sub
pop
add
mov
adc
inc
sahf
sub
add
in
imulb
jbe
or
mov
xlat
inc
add
push
loope
int3
push
lock
pop
dec
andb
push
adc
push
xor
xlat
push
add
or
and
lcall
jmp
jo,pn
sub
stos
inc
rol
jl
les
xchg
dec
lock
sub
mov
lods
dec
sub
lea
scas
mov
rcrb
dec
test
mov
cld
call
mov
pop
daa
pop
loop
sub
adc
push
test
lods
jle
hlt
ficoms
xorl
cltd
sub
ja
mov
cmpb
out
push
inc
daa
push
pop
int
orb
xor
xor
push
or
mov
adc
lcall
add
push
imul
je
sti
or
in
repz
mov
lsl
xchg
inc
arpl
push
jb
xchg
push
sub
inc
sbb
popa
imul
lcall
mov
add
adc
hlt
outsb
sbb
add
cmpsl
aam
loope
popa
sub
xchg
stos
push
adc
enter
push
push
shll
cmp
sub
subl
inc
jmp
add
mov
rorl
sub
sub
fisubrl
sbb
xor
into
mov
lods
mov
pusha
sbb
popf
adc
out
ljmp
out
pop
js
add
pop
stos
pusha
orb
inc
xchg
movsb
and
xchg
inc
fldt
mov
jl
sbb
in
mov
adc
sub
sbb
inc
cmp
pop
and
sbb
add
add
adcb
insb
addb
add
mov
orb
mov
sub
xchg
das
push
dec
sbb
mull
push
push
pop
test
fisttpll
xchg
inc
sub
repnz
or
xorb
or
ljmp
pop
loope
push
and
cli
cld
jmp
adc
or
shlb
fnstcw
popf
mov
sbb
adc
inc
or
call
and
inc
lcall
xor
lds
stos
loopne
adc
cltd
sbb
adc
jnp
add
push
push
adc
movsb
jb
test
fcmovu
fcoms
loop
loopne
movsb
and
call
es
inc
fadds
mov
movsb
add
inc
and
mov
adc
pop
stos
mov
fidivrl
loop
adc
arpl
cwtl
mov
sbb
jge
mov
ret
mov
ss
sbb
inc
or
inc
push
sbb
lds
sbb
or
mov
loopne
xor
push
clc
or
fdivs
outsl
daa
inc
fsubs
addl
dec
divl
jl
loop
xchg
cld
push
xor
bound
xor
aaa
adc
test
enter
pop
ret
sub
stos
jg
mov
jg
sbb
sub
jb
loopne
sbb
push
adc
adc
or
das
push
adc
sbb
fs
pushf
fmull
or
pusha
dec
add
inc
les
rclb
fisubs
mov
clc
jmp
sbb
les
adc
push
test
outsl
adc
sub
lds
shll
fisttps
mov
and
xor
mov
outsl
nop
mov
jb
cmpsb
adc
enter
adc
dec
xor
flds
adc
adc
movb
rorb
or
movsb
and
inc
pop
nop
sbb
mov
mov
xlat
mov
insl
push
or
adc
adc
sbb
pop
dec
lcall
mov
mov
and
mov
xchg
xchg
popf
or
jne
push
imul
push
or
or
lds
aad
aam
xor
mov
or
jne
insl
pop
sub
mov
xchg
nop
add
sbb
push
jb
movsb
jo
ljmp
add
inc
or
shr
mov
inc
or
pop
add
mov
dec
and
push
add
sub
test
xor
pop
add
mov
pop
push
sbb
or
popf
sbb
and
ret
ret
mov
jno
ret
cvttps2pi
or
pop
xchg
cmc
mov
lcall
dec
lret
adc
aam
cmovns
cmp
inc
jne
movb
jmp
cmp
adc
mov
adc
sbb
mov
add
mov
sub
push
pop
js
sbb
dec
shll
sbb
sub
pop
push
inc
cmp
sub
loop
push
out
repz
push
push
movsb
xchg
lcall
inc
cmpsl
cmp
push
stc
cmpsl
out
inc
fsub
cmp
test
mov
push
sub
call
dec
mov
push
aam
ret
lret
dec
repnz
lret
cmpsl
scas
out
inc
loope
sti
or
mov
or
adc
pop
enter
out
add
nop
add
nop
add
nop
fs
gs
add
insb
data16
in
add
nop
add
nop
push
add
in
push
lock
add
enter
insb
dec
insl
jb
add
outsb
mov
jb
add
enter
jo
jno
enter
jb
icebp
add
add
in
cmp
je
jne
in
cmp
add
in
js
in
cmp
ja
jns
in
cmp
cs
sbbb
cmp
sbbb
dec
cmp
insb
pop
mov
lods
jb
sbb
cmp
pop
push
jb
sbb
das
or
inc
push
sbb
sub
inc
push
cmp
dec
xor
cmp
insb
xor
lods
cmp
cmp
inc
push
in
aaa
or
and
sbb
xchg
dec
inc
xchg
xchg
and
sbb
xchg
int3
inc
xchg
xchg
inc
or
inc
push
nop
cmc
inc
sub
nop
inc
push
dec
dec
dec
inc
push
nop
inc
insb
dec
nop
inc
push
nop
mov
push
nop
inc
push
dec
int3
dec
inc
push
nop
inc
in
push
enter
or
push
sub
enter
dec
push
and
enter
enter
mov
pop
enter
int3
pop
or
enter
mov
les
mov
mov
lods
add
in
mov
xchg
aam
fisttps
repnz
clc
xchg
push
hlt
push
pusha
mov
addr16
lock
mov
stc
dec
fsubrp
pop
lods
in
aam
loopne
leave
xor
add
fmul
fadds
xor
dec
aam
xchg
add
je
in
or
mov
mov
scas
mov
test
test
inc
xchg
and
dec
scas
cmp
fs
lock
scas
dec
mov
imul
push
lret
ret
xor
or
xor
lret
push
bound
sub
popw
add
jbe
xor
jns
lret
repz
clc
jb
dec
outsl
xchg
scas
pop
popa
lahf
xchg
je
fmuls
push
dec
enter
outsb
lret
push
adc
adc
mov
test
push
pop
sub
add
push
jns
mov
sbb
or
popa
js
inc
sbb
add
dec
and
dec
push
adc
push
nop
out
jbe
js
fcoms
sbb
aaa
or
push
pop
xor
sub
jge
nop
lcall
pop
or
rcl
push
inc
dec
stc
mov
xchg
mov
filds
xor
dec
inc
cmc
lods
out
loop
add
cmpsl
inc
pusha
adc
fcmovnb
inc
jb
add
mov
outsl
test
jbe
lahf
xlat
or
adc
fstps
or
pop
add
inc
ret
call
cs
cwtl
daa
popa
in
out
mov
and
add
lock
sbb
aad
push
call
xor
pusha
pop
fs
scas
pop
add
nop
popa
sub
pop
aam
popa
xor
adc
or
sbb
dec
nop
inc
imul
jmp
push
push
jae
pop
mov
pushf
testb
pop
gs
and
xchg
frstor
lret
or
cmp
stos
push
dec
popl
fbld
mov
xchg
icebp
test
pop
enter
add
repnz
sbb
jp
mov
cmp
ret
test
mov
inc
mov
add
or
loopne
mov
or
mov
and
out
sub
dec
xchg
stc
inc
sahf
js
or
or
pop
add
dec
addb
pusha
xor
pusha
push
mov
or
lds
fs
test
loope
shr
mov
push
gs
pop
xchg
sub
or
jbe
mov
push
shrb
decl
dec
mov
sub
dec
dec
dec
sub
faddl
add
aaa
adcb
jmp
femms
ret
adc
in
incb
xor
aaa
sbb
dec
dec
inc
sbb
roll
mov
add
lock
jg
incl
inc
and
add
mov
mov
iret
repz
divb
add
mov
pop
sbb
inc
dec
mov
jb
in
mov
push
cmp
inc
xchg
cmp
bound
inc
arpl
adc
cmpsl
adc
add
xor
call
adc
mov
adc
ret
mov
push
clc
add
mov
lods
cmpsl
fstps
aaa
xor
xor
add
pop
je
mov
enter
cltd
mov
mov
movsl
xchg
je
in
pop
sbb
out
es
adc
cmp
add
sbb
pop
out
add
xor
or
and
mov
imul
push
arpl
jp
xchg
pop
add
dec
inc
push
loopne
dec
jmp
inc
loopne
mov
push
cmp
adc
sub
ljmp
push
cmp
cmp
inc
jo
push
inc
mov
and
push
xchg
add
adc
pusha
push
adc
and
and
mov
adc
subb
add
mov
in
pop
ret
clc
inc
mov
mov
int3
test
add
dec
adc
add
xchg
mov
sub
fnstsw
mov
enter
stc
fs
cmpsb
ror
add
int3
mov
pop
je
in
outsl
mov
loope
adc
and
imul
in
pop
push
lods
pop
or
inc
cs
mov
inc
les
stos
mov
les
jge
testb
add
adc
sbb
xchg
mov
nop
mov
mov
inc
mov
lock
dec
mov
cmc
mov
rolb
jecxz
pusha
cmpb
cmp
fadds
adc
test
mov
enter
sub
jp
ds
add
mov
ja
sub
pop
or
fistl
loopne
push
aas
sbb
add
call
loopne
lahf
aas
xor
addb
gs
test
pop
test
arpl
mov
cs
js
mov
repz
jb
mov
xchg
loope
sbb
xor
jae
xchg
jne
bound
hlt
mov
imul
push
aad
xchg
fcomps
ss
mov
or
mov
sbb
sub
xor
jmp
jae
jmp
jae
inc
ret
add
jmp
or
or
mov
movsb
pop
sarb
push
jb
inc
xchg
mov
sub
in
xchg
jp
in
push
loop
pop
xor
xchg
lea
das
push
sbb
adc
mov
stos
sbb
sti
out
sub
mov
mov
rolb
sbb
inc
and
test
fdivr
or
push
incl
or
jb
dec
sbb
movl
or
popf
mov
mov
adc
sub
repz
loopne
test
add
inc
test
push
pop
aad
pop
mov
cmpsb
call
ret
fwait
jne
ret
insb
call
imul
mov
cmc
push
outsb
ret
pop
mov
mov
imul
add
or
imul
inc
dec
fstl
inc
pop
push
cmp
dec
sbb
pop
cmp
pop
xchg
pop
inc
dec
dec
inc
cmp
jmp
mov
inc
add
xor
fwait
jge
lods
jg
or
mov
or
jae
sbb
mov
dec
and
lret
and
and
adc
cmp
pop
jae
test
sub
insl
adc
and
inc
clc
push
das
mov
adc
xchg
sub
fistl
jno
imul
mov
nop
sahf
xchg
jge
out
jbe
jl
shrl
out
test
xor
mov
inc
iret
popa
add
inc
pop
push
add
andl
jno
ret
or
movl
lea
lret
adc
pusha
fsubl
hlt
and
adc
stc
cmp
ret
inc
mov
movsl
add
loope
cs
mov
inc
jne
lcall
add
dec
pop
cli
inc
out
dec
mov
and
adc
cwtl
pushf
or
fwait
add
dec
push
jmp
add
add
xchg
inc
stc
outsl
lods
stos
call
filds
jmp
xor
xor
inc
push
cmp
cmc
ret
cli
add
repnz
ret
rcll
gs
test
add
stc
push
hlt
push
add
nop
xor
xor
fdivrp
push
or
xor
pop
inc
sbb
push
and
mov
adc
shll
cmp
or
sub
dec
aam
dec
sbb
add
movsl
pop
mov
push
push
mov
mov
enter
sbb
popa
insb
push
mov
movsb
adc
or
xor
bound
into
or
fmuls
out
mov
icebp
fldenv
clc
mov
inc
sahf
shll
arpl
push
negl
xchg
adc
inc
loopne
sbb
faddp
inc
dec
decb
jl
clc
sub
mov
jo
add
push
or
jnp
scas
into
push
cmp
mov
push
addr16
mov
push
or
in
fistl
jne
cld
or
mull
test
mov
inc
rolb
movsb
ret
outsb
mov
xchg
or
pop
jmp
mov
out
into
je
scas
xor
mov
pop
lods
push
xor
adc
sbb
push
push
or
idivb
stc
sub
push
imul
mov
mov
ret
mov
inc
push
testb
add
push
rorb
mov
pavgb
mov
addb
mov
push
xor
mov
iret
jg
mov
ljmp
hlt
adc
shll
and
insb
adc
outsl
orl
sbb
or
int
sub
jnp
loopne
push
add
mov
clc
sbb
icebp
pop
rcrb
test
test
jo
imulb
jmp
push
in
shl
repz
loop
leave
negb
push
mov
shl
add
roll
sbb
add
shlb
xor
cmp
xchg
cltd
jne
ret
jnp
push
arpl
sbb
and
cltd
cltd
adc
test
xchg
or
std
jne
inc
outsl
xor
xchg
xchg
inc
lock
add
clc
cmp
or
xchg
or
ret
add
xor
rclb
or
jb
or
arpl
mov
add
pop
pop
push
cltd
movsb
sub
mov
pop
cmc
pop
out
or
jmp
mov
push
jb
fnstcw
adc
mov
cmp
mov
mov
lods
push
neg
in
pop
int3
cmp
cmp
mov
xchg
cmp
loop
repnz
jb
mov
mov
out
add
xor
push
and
jmp
cmp
jecxz
roll
mov
jp
popf
and
or
pop
jae
or
sti
jae
cmp
cli
jmp
mov
mov
jne
inc
scas
jno
test
cmp
andb
dec
insl
adc
add
aad
jo
xchg
aam
cmpsb
dec
xor
sub
and
sbb
dec
or
push
jnp,pt
xchg
shll
mov
mov
lods
xchg
and
pushf
pop
imul
dec
push
adc
push
ret
and
inc
adc
nop
popl
lea
inc
cli
lcall
adc
fcoms
adc
push
add
inc
dec
lock
test
cmp
xchg
ja
inc
push
jmp
dec
mov
xlat
sub
rclb
add
enter
lea
dec
fcompl
cli
mov
rclb
jbe
sbb
ret
ss
jbe
fucom
punpckhwd
or
mov
mov
ja
in
mov
jo
insb
jmp
std
adc
lret
sub
fisubs
enter
push
cmp
lea
pop
sti
out
jae
mov
les
les
mov
add
les
ret
mov
pop
dec
mov
pusha
sbb
nop
shlb
loop
cli
imul
rcr
adc
jbe
mov
mov
or
push
mov
sahf
aam
subl
aam
jecxz
ja
cmpl
mov
dec
add
push
jb
mov
mov
rcrl
cmp
sub
mov
sbb
xchg
ds
flds
cmp
pop
aam
mov
ret
sub
scas
and
fimuls
jnp
call
jle
sbbl
cmp
outsb
popa
inc
mov
add
scas
fldt
sbbl
subb
jmp
add
push
icebp
and
inc
cmp
jbe
sub
cli
push
lea
sbb
lret
in
adc
or
add
test
inc
pop
sub
inc
es
jo
or
loop
fbld
add
cmp
add
movsb
push
cld
shl
push
add
mov
dec
mov
xor
call
dec
aad
mov
mov
mov
fisubs
out
mov
or
shr
adcb
aam
jmp
sub
pop
loopne
sbb
sar
or
int3
mov
movsl
scas
fwait
jo
mov
or
add
les
xor
fwait
addb
inc
mov
mov
ret
sub
int
clc
push
dec
fsubrs
inc
xchg
mov
ja
int3
and
jmp
jae
mov
lock
sub
mov
rcll
add
sar
sub
sbb
adc
add
mov
mov
xor
arpl
lahf
dec
xchg
jle
add
mov
pop
icebp
push
add
pop
nop
dec
sub
dec
fisttpl
xor
or
adc
adcb
mov
fsubrp
sbb
cld
xor
in
in
push
sub
inc
jg
fwait
and
and
push
cmp
xchg
mov
pop
lock
sub
add
cmp
lea
ret
les
dec
pop
pop
rcrl
rolb
adc
or
mov
icebp
sbb
fmul
jl
pop
das
or
cmp
or
push
or
scas
pop
push
push
adc
pop
push
mov
loope
cmpsb
add
inc
adc
jo
sbb
scas
jns
add
loopne
sub
fistpll
mov
jb
pusha
loopne
addr16
mov
xchg
pop
mov
add
stos
icebp
xor
in
movl
jns
outsb
adc
dec
adc
push
adc
movsb
sbb
add
sbb
or
mov
add
loopne
stos
fsubl
sbb
adc
cld
je
add
mov
push
xlat
insb
mov
mov
sbb
dec
add
imul
insb
cmp
sbb
mov
sbb
aas
mull
pushf
and
jne
dec
cmpsb
and
ds
imul
or
dec
mov
imul
es
pop
mov
add
add
in
adc
mov
lods
pop
filds
ljmp
fdivrs
jl
loop
jmp
clc
pop
push
or
in
jbe
adc
hlt
push
fcmovb
and
cmp
sahf
xor
lock
push
xchg
out
or
insl
add
adc
sti
add
mov
or
sub
inc
lcall
add
push
pop
or
sbb
or
or
fs
inc
or
test
adc
out
gs
cmp
push
pop
stos
push
dec
jne
icebp
dec
ret
lret
lods
xor
rcrl
mov
adc
push
xor
inc
sbb
ret
divl
jle
inc
or
push
cwtl
les
sub
cmp
or
and
mov
sub
mov
xchg
cmpsb
dec
sub
push
inc
and
add
push
mov
outsl
outsb
insl
rcll
stc
mov
xchg
mov
mov
mov
and
shll
je
jae
sub
push
lock
sub
xchg
or
ds
inc
add
xor
test
xor
inc
les
xorl
push
loope
sahf
mov
dec
rcrb
xor
imul
jae
ja
mov
dec
dec
jmp
push
sub
insl
call
test
or
repz
sbb
addb
sbb
sbb
shrl
and
clc
jg
lods
or
lahf
mov
imul
jmp
fimull
and
mov
xor
sub
pusha
xor
push
cmpsb
add
mov
push
out
cmp
xor
adc
xor
or
add
rcl
loop
xchg
sub
mov
or
jb
adc
pop
mov
stos
xor
add
icebp
pop
shr
stos
adc
xor
pop
or
push
cmp
add
lea
insl
pushf
lock
jmp
push
push
mov
and
push
mov
jl
mov
adc
fimull
and
xorb
inc
out
dec
inc
inc
mov
push
sub
add
nop
out
and
push
out
push
or
inc
xor
push
addr16
ss
push
and
push
or
cmp
xor
idiv
push
nop
push
or
and
mov
not
shr
and
push
sub
dec
mov
enter
dec
arpl
lret
insb
lods
xor
pop
adc
test
addr16
push
nop
stc
mov
mov
cmp
jbe
fiadds
push
dec
fst
outsb
les
pusha
ret
add
push
push
rolb
adc
filds
sti
mov
jp
add
call
stos
push
stos
daa
stos
xor
dec
inc
cmpsl
je
movsb
enter
mov
push
inc
ret
cmpsl
adc
imul
mov
lcall
inc
push
mov
lcall
mov
leave
sbb
insl
push
test
jbe
daa
cmp
jae
add
jne
insb
aaa
add
xor
xchg
aam
clc
jl
in
aam
cmpsb
iret
sbb
add
sbb
pusha
mov
dec
mov
dec
repz
rolb
cltd
andb
cmp
aas
adc
sbb
std
or
ja
jo
add
adc
sbb
sbb
sahf
mov
add
lea
xor
mov
out
or
out
inc
xor
cmp
inc
or
test
or
adc
pop
xchg
push
lods
jo
data16
js
les
or
mov
mov
sub
ja
xchg
push
cmp
arpl
outsb
clc
adc
movl
loopne
push
push
loope
loope
push
outsb
sub
test
mov
xchg
loop
cmp
jp
jne
test
pop
movsl
add
xor
push
dec
clc
jae
sub
or
arpl
push
mov
mov
shl
or
jbe
jo
cli
jb
mov
xchg
clc
dec
push
ret
mov
rorb
adc
loope
jae
jge
mov
dec
pop
addl
mov
xor
inc
iret
imul
sub
push
dec
adc
imul
xor
sbb
pop
sub
in
iret
shl
or
outsl
cmpsb
mov
stc
jb
imul
lds
int
mov
add
enter
jnp
imul
hlt
scas
ror
and
add
add
or
jne
sbb
test
test
push
aas
mov
or
rcrb
dec
xchg
mov
cmp
mov
push
scas
popl
cwtl
inc
leave
gs
sbb
sub
inc
xchg
fildl
inc
sub
push
xor
jmp
inc
sub
push
or
ds
mov
cmp
and
push
mov
xchg
cmp
loop
sbb
or
add
push
inc
push
pop
cmc
xor
push
jae
mov
lea
aad
cmp
inc
cmp
divb
mov
sub
aad
mov
test
and
cli
loopne
in
mov
je
xor
inc
cmp
rcrb
outsl
push
push
xor
ret
or
push
rcrl
pop
ret
lahf
cs
add
mov
rorl
shlb
pop
add
push
adc
incb
jmp
jp
jnp
mov
cltd
cmp
add
pop
pop
push
and
dec
fcmovnb
dec
fisubl
movups
pop
xor
jb
lcall
jecxz
mov
jbe
popa
mov
dec
je
ljmp
xlat
test
mov
aas
shlb
mov
mov
mov
mov
outsl
call
jl
dec
sbb
scas
into
mov
mov
std
orb
mov
mov
rol
jae
fsubrs
enter
push
push
lea
push
bound
out
lret
mov
dec
sub
jno
dec
sub
insb
mov
loopne
sahf
sub
clc
sub
sub
addr16
das
xor
mov
fdivl
xchg
or
xchg
push
cltd
jb
rclb
out
stos
iret
adc
call
push
push
call
sbb
sub
mov
push
jge
fcoms
and
inc
adc
cmp
ds
mov
loopne
imul
sub
aam
pop
cmp
adc
adc
hlt
sub
fdivrs
push
or
dec
mov
inc
dec
or
movl
cld
add
cmc
and
jae
dec
push
add
popf
adc
jmp
mov
rol
inc
and
mov
decl
add
mov
mov
adc
jb
adc
pushf
nop
jecxz
xchg
fsubl
inc
xchg
add
jnp
addr16
push
mov
mov
jg
ss
gs
sbb
outsb
pusha
add
lcall
lahf
push
pushf
push
sti
negb
je
sub
or
in
je
or
and
pop
add
inc
jne
out
fwait
loope
cmp
pop
shl
adc
fildl
rcrl
je
xchg
xor
jbe
inc
movl
bound
insl
push
divps
pop
imull
lret
loop
daa
xor
adc
adc
xchg
imul
lahf
xor
rolb
fstl
or
and
add
popf
sub
mov
dec
xor
dec
adc
or
sbb
mov
sbb
xchg
mov
pop
testl
mov
and
add
sub
sub
rclb
sub
add
xchg
mov
sbb
pop
dec
sub
rorl
mov
insb
fildl
sub
push
sub
js
add
push
adc
aad
sbb
addl
test
mov
push
jl
add
pop
rcll
jnp
stc
push
xor
rorb
rcrb
outsl
xchg
rolb
loope
test
out
bound
mov
shlb
js
mov
sbb
mov
rorb
sbb
push
js
cmp
lret
cmp
push
xchg
decl
inc
push
int3
sbb
mov
pusha
add
cmp
cmp
addb
pop
jbe
sub
adc
jnp
pop
out
gs
or
test
dec
and
andb
mov
push
popf
jmp
lods
data16
out
sub
test
push
sub
dec
decl
js
cmp
imul
inc
clc
ja
scas
rcr
pop
xor
add
inc
fistpll
inc
push
in
mov
jbe
pop
setnp
xchg
cmp
jp
insb
fisubrl
pop
outsb
add
pop
fwait
test
gs
fwait
inc
cmp
sbb
lods
mov
and
cwtl
clc
imul
fsubrs
lock
jo
jne
ljmp
or
and
ja
loopne
ss
insl
test
sbb
arpl
popa
idivl
lret
std
adc
adc
dec
pop
gs
xor
call
sbb
adc
movsb
lahf
movsb
gs
add
and
mov
testl
adc
sbb
lods
lret
mov
inc
and
mov
sarb
xor
jb
inc
and
lcall
xor
add
and
or
daa
adc
or
sbb
fsubs
mov
cwtl
mov
mov
xchg
mov
movsb
dec
inc
inc
idivb
std
adc
cld
gs
pop
repnz
fsubrs
push
or
loopne
rcrl
orb
sbb
out
and
out
out
xlat
ss
repz
and
fdivrl
add
roll
xor
and
jb
fldenv
adc
jmp
mov
or
ss
jb
mov
lea
add
cli
rcr
push
js
push
xor
or
cmp
sub
fisttpl
das
push
call
aam
aam
push
or
movups
push
pop
push
pop
mov
dec
jmp
jge
imul
cmp
out
sbb
adc
ja
js
push
jmp
sub
dec
jne
jmp
adc
sub
dec
sbb
adc
fcomps
mov
xchg
aaa
and
dec
out
loopne
das
push
in
sub
shr
adc
adc
ds
jmp
je
inc
xor
sbb
ficoms
lret
pop
sbb
cmp
imul
dec
adc
or
ret
or
mov
or
shl
dec
xor
mov
inc
loopne
sbb
and
push
and
out
sub
add
adc
mov
ret
test
je
mov
jb
xor
or
cmpl
sub
xor
movsb
lock
ljmp
push
inc
jp
ja
lds
cmc
dec
ja
aaa
inc
cmp
or
fsts
push
add
call
push
stos
mov
das
sbbl
iret
mov
lods
test
jne
sbb
xchg
addb
aam
ret
movsl
push
inc
test
lock
movsb
and
adc
notb
pop
gs
xchg
dec
popa
cmp
add
aaa
inc
mov
or
jg
imul
out
push
lods
iret
adc
cmp
dec
inc
aam
adc
jne
add
dec
call
sub
decb
inc
inc
enter
pop
inc
add
loopne
mov
push
inc
dec
jne
push
mov
add
dec
incb
mov
push
pop
pop
xor
or
or
call
pop
mov
das
and
xchg
cmp
and
or
or
enter
aas
lock
cmp
push
pop
je
mov
xlat
dec
mov
sbb
or
gs
mov
sub
out
add
shlb
push
or
movl
inc
daa
rolb
enter
inc
mov
or
cmc
les
call
std
adc
mov
mov
inc
push
push
nop
orb
cmp
loope
out
fldt
sti
push
add
push
sub
push
sub
loopne
enter
mov
test
mov
jge
js,pt
cld
inc
add
je
loopne
aas
add
or
push
push
push
mov
js
push
mov
jns
cmp
mov
nop
add
sub
roll
xchg
fs
lds
jl
ds
jo
xlat
scas
jb
jl
call
lods
dec
cmp
inc
dec
aaa
ficoml
loopne
mov
fs
jmp
inc
mull
add
enter
push
add
cmp
jb
leave
sub
push
cmp
adc
aam
dec
xor
sbb
mov
stc
sbb
add
and
sbb
mov
daa
sub
xor
mov
daa
jns
dec
cmp
jns
daa
jns
mov
dec
mov
daa
dec
mov
aaa
in
sahf
in
mov
pop
mov
sahf
pusha
mov
dec
sahf
es
sbb
jo
or
dec
repnz
je
sbb
mov
in
mov
pop
push
cltd
movsb
xor
test
mov
cwtl
cwtl
movsb
gs
lret
mov
cltd
movsb
xor
movsb
int3
test
test
in
mov
xchg
inc
push
add
adc
push
lret
inc
movsl
pop
sub
mov
pop
daa
and
and
sub
or
jns
jnp
xlat
lahf
add
dec
and
cmp
lahf
insb
pop
out
jle
mov
gs
or
test
cmovp
xchg
pop
inc
bound
dec
popa
jb
scas
popf
jbe
jo
jns
jne
pop
insb
pop
repnz
pop
jne
pop
push
gs
arpl
repnz
jbe
and
mov
pop
jne
jo
fwait
pusha
or
jb
addr16
aaa
arpl
imul
add
insb
jg
movsb
adc
aas
and
mov
das
inc
out
lcall
test
fsubrl
pop
or
mov
mov
outsl
daa
daa
push
adc
xchg
ret
xchg
push
gs
dec
nop
mov
dec
repnz
in
pop
dec
outsl
pop
lock
mov
mov
fcomi
push
push
into
jb
fisttps
or
dec
inc
mov
sub
mov
pop
popa
repnz
mov
sub
adc
push
push
ret
fs
fs
inc
or
xchg
inc
adc
shlb
cltd
sub
xlat
mov
push
xor
ficompl
inc
loopne
je
andl
jnp
movsb
rol
cmp
cmp
and
cmp
popl
mov
mov
pushf
sub
leave
loope
cli
scas
or
aas
ja
addb
add
popf
repnz
int
pusha
pop
and
pop
xchg
push
mov
aam
int3
xchg
pop
aad
jge
xor
aas
insl
xor
sbb
adc
cmp
inc
adc
cmpsb
test
in
fisttpll
mov
mov
xor
add
in
xchg
xlat
jg
sub
jnp
push
cmc
adc
or
mov
pop
pop
das
ficompl
shl
fldenv
rolb
or
mov
xchg
and
popa
mov
mov
sub
inc
add
jnp
mov
xor
stos
adc
cmp
sub
movsl
js
pop
clc
fisubs
add
scas
dec
sbb
stc
faddl
cmpsl
sbb
movaps
mov
bound
test
xor
xor
adc
push
fdivrl
sbb
hlt
push
jnp
add
xchg
add
push
xor
mov
les
aas
sbb
push
cli
shl
cwtd
mov
xor
int3
test
mov
in
pop
pusha
adc
aam
cld
orb
cmp
mov
enter
mov
fwait
mov
std
mov
loop
mov
enter
xor
and
ret
sbb
lock
push
loope
mov
dec
and
and
or
arpl
dec
push
mull
scas
std
dec
push
sub
and
jae
xor
or
jo
notl
inc
xor
shll
mov
sbb
mov
ja
mov
pop
mov
push
jb
pop
push
inc
lret
push
cmovle
pop
mov
and
inc
lret
js
adc
daa
daa
mov
movlps
adc
daa
daa
daa
daa
push
pop
sbb
daa
daa
daa
daa
sbb
sbb
daa
daa
daa
daa
push
pop
add
daa
daa
daa
daa
add
add
daa
daa
daa
daa
push
pop
or
daa
daa
daa
daa
or
or
xchg
daa
daa
daa
push
xchg
xchg
xchg
xchg
icebp
repnz
xchg
xchg
xchg
xchg
cmc
div
clc
xchg
xchg
xchg
xchg
stc
cli
sti
cld
xchg
xchg
xchg
xchg
std
jmp
xchg
xchg
xchg
xchg
loope
jecxz
xchg
xchg
xchg
xchg
in
out
xchg
xchg
xchg
xchg
jmp
xchg
xchg
xchg
in
out
out
shrb
dec
mov
adc
out
add
push
inc
shrl
mov
mov
dec
inc
adc
fcoms
lret
nop
in
movl
dec
and
into
pop
hlt
insl
add
stos
mov
data16
rcll
addr16
pop
dec
adc
add
cltd
xchg
cs
mov
sub
gs
iret
add
dec
insb
dec
mov
xchg
cmp
sbb
xchg
negl
mov
push
pusha
mov
sbb
mov
sub
adc
loopne
loop
mov
jb
xor
pop
dec
aaa
test
adc
sub
push
lock
pop
mov
mov
xlat
fiadds
roll
adc
int
dec
lahf
sub
gs
and
or
imul
mov
outsb
fwait
adcl
add
gs
popf
dec
cmc
add
loope
add
dec
push
mov
lock
add
repnz
andl
jne
test
dec
or
jg
call
pop
dec
sub
ja
add
or
into
ret
adc
and
lret
andl
dec
pusha
inc
cmp
sub
or
xor
scas
enter
mov
or
mov
cmp
gs
pop
adc
or
filds
or
dec
and
push
arpl
push
cmpb
xchg
adc
or
dec
je
add
xor
inc
lea
enter
int3
mov
loopne
ret
loopne
pop
nop
cmp
sub
popf
mov
cmp
xor
xor
inc
xchg
add
test
jecxz
movsb
icebp
sarl
pop
xor
and
stc
mov
sbb
mov
sub
out
adcl
gs
and
or
frstor
adc
popa
cmp
add
mov
ret
insb
push
mov
push
add
sbb
adc
mov
cmc
inc
addb
nop
iret
insl
jle
rclb
mov
push
mov
rorl
cmp
adc
sbb
popf
lahf
and
repnz
inc
pop
or
adc
pop
or
pusha
gs
pop
mov
out
add
sarb
sbbb
ret
push
pop
dec
push
outsb
movb
xchg
pop
ret
or
das
and
xlat
jmp
cmp
mov
mov
inc
insl
std
push
ss
jae
push
jo
popa
push
mov
fs
mov
jge
std
and
bnd
jae
add
ja
mov
inc
imul
mov
outsl
jl
cwtl
xchg
dec
push
jo
adc
adc
push
or
in
dec
cmpsb
negl
adc
sbb
jle
loop
mov
jg
push
test
mov
jmp
in
inc
sbb
mov
or
inc
addl
out
and
sub
xor
push
sub
jae
xchg
mov
lock
shl
test
ss
push
fists
sub
mov
add
add
ss
add
js
or
sbb
xchg
dec
fadds
push
in
or
push
loope
in
insb
outsl
bound
scas
cmp
xor
xor
ss
dec
movsb
out
xchg
test
push
inc
add
xor
jne
addr16
js
or
add
jns
aam
push
ret
inc
xchg
and
pop
dec
cli
push
aam
add
das
pop
iret
or
adc
xchg
ds
mov
xor
push
loopne
shlb
inc
add
xlat
jae
adc
and
add
rolb
leave
orl
movsl
xlat
ljmp
lock
jle
ja
add
stc
jl
push
movsb
push
mov
incb
add
enter
cmp
add
add
inc
push
data16
push
int
cld
shrl
and
sub
sbb
add
pop
push
rorb
js
mov
ljmp
test
or
call
test
inc
and
or
xor
lods
sarb
dec
jmp
inc
sbb
inc
sub
sbb
ret
ds
inc
outsb
sbb
cmp
rorb
inc
cwtl
rorb
psubusw
jno
aaa
jo
mov
mov
lock
clc
mov
and
xor
stc
addb
pop
testb
cmp
into
sbb
inc
cmp
les
push
inc
or
int
push
inc
and
mov
pop
pusha
test
jmp
adc
dec
sub
rclb
inc
lret
ret
lea
or
or
jecxz
mov
cmp
ja
pop
out
add
adc
pop
or
mov
jmp
adc
movsb
cmp
add
aaa
jbe
or
pop
or
lret
movsl
add
pop
scas
cmp
scas
add
adc
dec
cmpsl
in
inc
dec
cwtl
and
xchg
cmp
cmp
push
inc
jbe
cmp
mov
rorl
inc
pop
addl
dec
mov
xor
jns
js
mov
mov
jo
mov
aaa
push
icebp
in
stos
ja
xor
and
sbb
into
xor
xchg
xor
adc
adc
movb
mov
adc
mov
repz
jne
dec
cwtl
rcr
loopne
pop
mov
add
jecxz
mov
dec
or
mov
jmp
mov
jp
or
cmp
jg
fcoml
xchg
clc
je
sub
scas
ret
or
fimull
sub
mov
out
test
push
xor
lcall
pop
pop
clc
add
lea
sub
and
hlt
cmc
jae
ss
or
hlt
enter
icebp
mov
dec
repz
inc
fmull
mov
imul
ds
add
sar
or
jo
add
inc
test
imulb
ljmp
push
pop
cmpsl
mov
dec
int3
or
les
xchg
dec
mov
sarb
nop
sbb
mov
loopne
adc
test
mov
xchg
mov
mov
icebp
adc
xlat
or
or
sbb
enter
push
imul
add
jg
icebp
iret
lahf
in
lea
mov
jne
adc
or
jmp
mov
sub
sbb
xchg
jle
jp
add
inc
push
sbbl
subl
xchg
lock
and
adc
shrb
xlat
inc
mov
xor
mov
or
jle
pushl
scas
test
fsubl
mov
ret
sbb
add
sbb
mov
jle
bound
xchg
add
push
inc
lret
push
or
mov
add
pushf
pushf
cwtl
dec
shr
mov
dec
ret
mov
pusha
lret
xor
nop
dec
and
cwtl
add
dec
lcall
out
cmp
xchg
nop
les
sbb
mov
adc
mov
fsubs
pushf
mov
add
or
adcb
mov
test
jmp
mov
sub
xchg
mov
sbbb
fwait
mov
adc
in
or
pop
xchg
pop
sahf
jb
mov
add
loopne
in
sarl
pop
and
inc
add
sbb
movsl
mov
inc
or
inc
adc
add
pop
inc
xchg
and
scas
popa
push
mov
mov
dec
loopne
ret
push
cmc
pop
aaa
stos
hlt
add
pop
xchg
or
rclb
rorl
outsl
ljmp
pop
push
imul
pop
jp
add
movsl
ret
outsl
or
in
dec
enter
adc
ret
cmp
pop
leave
cmpsb
pop
add
xchg
adc
out
and
sbb
popa
push
xchg
adc
add
cmp
inc
mov
cmp
fsts
fidivl
les
push
movsb
push
shlb
xchg
xor
add
and
jge
sbb
jno
pusha
icebp
dec
loop
push
add
mov
insl
inc
ljmp
and
popl
sub
add
mov
test
and
pusha
dec
sub
insb
dec
dec
sbb
jne
add
std
outsl
pusha
xor
adc
mov
pushl
arpl
inc
cmp
cmp
icebp
add
add
gs
inc
faddl
dec
mov
add
xorb
pop
scas
pusha
dec
call
jo
mov
cwtl
gs
push
xchg
push
dec
xchg
sbb
test
add
and
leave
push
xchg
int
jge
adc
lret
mov
les
adc
push
loopne
fcoms
inc
arpl
arpl
mov
xor
push
jns
push
add
or
cld
sub
adc
lea
push
add
add
pop
in
repnz
mov
fs
fs
dec
or
bound
sub
push
mov
call
and
add
xchg
mov
cltd
adcb
xor
enter
sbb
sub
roll
test
fistps
adc
jae
sub
loopne
push
cmpb
xchg
xor
ret
pop
dec
push
push
psubb
dec
cmp
cmp
xor
push
and
xlat
movsb
lods
mov
adcb
jae
sub
lahf
jp
or
lahf
and
push
sti
orl
and
pop
imul
sbb
cs
scas
test
push
sub
cli
loopne
jle
mov
jl
xchg
enter
sbb
les
add
or
sbb
xor
inc
cs
fdivrl
cmpl
inc
cwtl
xor
js
add
push
divl
mov
xchg
adc
adc
add
adc
push
xor
pushf
ret
push
xor
xchg
cmpsl
and
sbb
in
adc
lea
mov
push
push
es
and
jbe
rcr
and
push
cwtl
add
adc
aas
lahf
inc
notb
jp
cmp
mov
cmp
lods
repz
rcrb
ret
xchg
aam
daa
out
sbb
js
and
iret
push
scas
add
je
dec
gs
iret
pop
aad
mov
jp
daa
adc
imul
mov
sbb
xchg
mov
push
jmp
mov
xor
push
push
push
adc
pop
dec
hlt
jno
push
rorb
mov
and
push
js
push
dec
push
int3
cld
jb
cmpsl
cmp
cmp
push
cmp
daa
or
cwtl
icebp
push
cmp
adc
adc
add
push
push
ret
sbbb
add
dec
addr16
mov
jp
dec
jns
mov
adc
aas
dec
aas
mov
push
fcoms
adc
push
push
jge
rolb
lahf
mov
rcrb
jmp
popa
ret
or
es
enter
imul
or
add
bound
dec
je
xchg
push
inc
pop
dec
add
and
adc
xchg
push
stc
dec
push
cmpsl
push
xlat
push
addb
add
pop
ja
push
stc
jnp,pt
push
mov
push
out
outsl
arpl
cs
ja
pop
addr16
xchg
push
fisubs
gs
ja
movsl
in
pop
xor
movsb
jb
jmp
pusha
je
xlat
mov
xchg
bound
aaa
fs
test
sub
je
insb
add
in
inc
movzwl
pop
inc
jbe
ret
addr16
or
scas
jo
in
or
dec
in
add
addr16
imul
addr16
in
outsb
shlb
je
xchg
aaa
je
insb
dec
pusha
fs
js
nop
add
jb
movsb
push
xchg
cs
ds
adc
pop
adc
sub
ja
pop
outsl
and
sbb
iret
test
sbb
data16
andl
mov
xchg
mov
jae
push
es
xchg
mov
nop
dec
mov
nop
mov
je
xchg
xlat
pusha
outsl
or
dec
mov
aas
cwtl
outsl
cwtl
sbb
sarb
je
daa
pop
enter
pushf
aam
pushf
lret
and
pop
enter
or
sub
cs
ja
jg
outsl
movsb
add
loopne
and
xchg
and
jo
or
jmp
outsl
mov
lods
out
jbe
mov
out
ja
add
pop
leave
subl
cmp
adc
sbb
fisttpll
jo
mov
mov
cltd
nop
lret
outsl
mov
adc
ud0
mov
aad
add
ds
shlb
pop
inc
sbb
jb
les
jb
shl
and
insb
bound
pop
sarb
pop
enter
dec
xor
adc
imul
mov
sub
int3
and
int3
adc
insl
mov
out
movsb
push
adc
shlb
popa
add
push
in
pop
mov
aam
inc
sti
mov
inc
jae
test
push
push
inc
mov
dec
fsubs
xchg
mov
pushf
jae
push
lahf
mov
ja
lahf
loopne
xor
mov
in
inc
je
cwtl
sbb
in
je
ret
ljmp
mov
push
xchg
call
nop
inc
add
dec
push
fs
fdivs
stc
outsl
je
mov
jno
gs
or
xor
inc
mov
push
push
pop
leave
xchg
in
xor
hlt
inc
cmpsb
out
jae
pop
pop
jp
inc
ljmp
test
and
in
clc
or
pop
cld
fdivl
popf
push
adc
pushf
and
add
sub
arpl
pop
xchg
pop
data16
pop
jbe
leave
in
push
push
test
testl
cmp
or
adc
jne
mov
inc
add
or
sub
ja
and
leave
add
mov
insb
sub
or
or
cmp
sub
sbb
adc
insl
adc
mov
inc
xchg
leave
add
lock
pop
enter
and
and
xchg
cwtl
pop
xor
adc
outsb
pusha
cmpsl
sub
js
or
inc
xor
insb
popa
jo
gs
add
or
xor
sub
push
dec
push
add
xor
sbb
inc
lea
mov
jns
cmp
sbb
fsubrl
push
cmc
add
pop
prefetch
or
cmpsl
dec
dec
mov
stos
popa
cmpsl
cmp
jp
xor
dec
cmp
or
push
adc
data16
dec
push
nop
xchg
inc
push
nop
dec
push
mov
or
add
push
sbb
hlt
jp
xor
leave
dec
pop
push
mov
dec
sub
dec
and
leave
in
adc
arpl
test
xchg
adcl
lods
and
cmpsw
push
nop
sbb
mov
jnp
push
push
pop
add
mov
and
or
popa
sub
push
daa
pop
cs
pop
test
daa
pusha
cwtl
jl
imul
push
xchg
jl
lods
jl
mov
and
adc
imul
sub
insb
pop
or
push
dec
gs
jo
mov
or
je
jge
leave
orl
dec
lcall
pop
out
push
xchg
fldl
js
cmp
js
adc
xchg
or
dec
mov
xchg
jl
jl
push
jns
push
das
adc
add
adcb
dec
push
xchg
xchg
test
jg
xchg
out
pop
test
jb
dec
and
push
add
mov
pop
dec
xchg
add
xchg
ja
or
pusha
test
dec
add
imul
cmp
outsl
inc
xor
enter
mov
adc
inc
pushf
fadds
fistps
je
and
and
mov
push
movsb
jo
add
xchg
cs
in
mov
test
push
loopne
adc
lods
jo
test
lods
pop
leave
add
imul
jns
inc
enter
jg
sub
mov
xchg
lret
add
insb
jb
pop
xor
in
lods
mov
cltd
adc
pop
jns
bsf
subb
in
pop
fists
out
rolb
inc
push
inc
add
movsb
jb
push
les
les
add
mov
mov
mov
push
lcall
aam
int3
sbb
mov
sbb
push
shl
xchg
sub
mov
addl
and
pop
int
sbb
mov
cmpsl
fadds
inc
push
fcompl
in
or
pop
mov
loopne
test
loopne
cmpsl
push
or
lock
inc
cs
in
call
cltd
inc
call
adc
in
je
jo
imul
fsubl
sub
xchg
int3
xchg
pusha
es
or
inc
mov
rolb
movl
jae
lods
dec
in
sbb
lret
jae
sub
push
mov
pop
sahf
pop
les
pusha
lret
repz
adc
dec
in
mov
sbb
dec
movsl
push
jmp
jl
push
stc
jl
adcb
and
iret
pop
sahf
lret
push
adc
sub
insb
pushf
stc
pop
sahf
lret
movsb
mov
pop
sahf
lret
push
test
lods
mov
enter
mov
pop
mov
cmpsl
repnz
jb
in
cmp
dec
rolb
fstp
dec
jae
fsubl
push
ds
mov
or
out
jl
in
fistl
lock
iret
pop
sahf
lret
clc
jo
mov
test
push
in
add
jbe
jns
iret
in
or
adc
cs
in
adc
ja
jl
dec
in
jns
and
and
lret
jae
sub
sub
push
cmp
pop
sahf
lret
xchg
cmp
inc
cmp
sahf
lret
push
inc
je
mov
sahf
lret
cld
push
cmp
push
nop
lret
pop
pop
enter
out
pop
sahf
pusha
push
movsb
push
fsubrs
jo
test
mov
mov
jl
pop
sahf
dec
adc
sahf
lret
xor
mov
repnz
xchg
adc
cwtl
pop
xchg
out
pop
pushf
movsb
mov
push
ds
test
lods
repnz
ds
les
out
jae
out
test
lret
repz
test
in
mov
cmp
cs
fsubrl
test
cs
loopne
in
iret
cmpsl
xor
rol
adc
mov
scas
cwtl
cmp
fiaddl
push
sbb
mov
ficoml
or
inc
mov
lock
test
pop
dec
or
push
cld
les
sub
movsl
jo
mov
and
ss
inc
mov
push
push
mov
aaa
adc
dec
xchg
loopne
push
shr
scas
pop
shlb
sbb
push
sub
je
insl
mov
or
imul
sub
xor
cmc
mov
mov
mov
dec
pop
daa
ja
stos
add
nop
jne
add
inc
popa
xchg
xor
dec
outsl
popa
jecxz
push
rolb
inc
pop
enter
add
jae
mov
sti
testb
fldl
jl
mov
add
xor
dec
or
insl
cmp
or
inc
sahf
lock
cmp
ret
out
fcoms
jb
popa
pop
and
xchg
inc
adc
dec
fucomi
ds
pop
scas
mov
ret
jae
or
outsb
cmpsb
sub
cmp
pushf
adc
push
adc
les
cmp
pop
sbb
push
iret
rorl
xchg
lret
add
or
xchg
mov
push
pop
and
xor
cmp
repz
inc
dec
push
mov
bound
fdivr
fisubrs
mov
mov
aas
mov
mov
cld
and
pop
mov
mov
inc
ret
popf
mov
dec
or
out
pop
movsb
andl
mov
mov
popf
repnz
or
jnp
ficomps
or
adc
inc
xor
sbb
inc
sbb
jmp
dec
mov
or
jb
pop
inc
push
cs
repnz
pop
inc
idiv
sahf
icebp
add
jle
ret
xchg
jae
rorl
sub
dec
addb
jb
outsl
and
sbb
rclb
aaa
data16
cltd
in
mov
sub
adc
cmpsl
outsl
clc
mov
in
and
nop
adc
add
into
push
or
out
pop
nop
daa
xchg
and
xor
rol
and
xorl
inc
outsb
pop
mov
cmpsl
fwait
inc
nop
shrb
cmp
rcrb
pop
pushf
push
lock
popf
dec
mov
shrl
call
mov
mov
xchg
cmpsl
add
push
pminub
xor
inc
push
xchg
xor
jns
notl
daa
mov
call
mov
mov
inc
or
xchg
daa
pop
xchg
inc
xchg
push
dec
push
nop
sbb
push
push
shlb
jb
jb
pop
das
lret
cmp
cmc
nop
adc
rolb
xor
xor
jge
outsb
jae
jo
add
into
push
adc
jo
imul
xchg
jmp
fidivrl
test
test
cmp
sarb
ljmp
add
lock
and
add
pop
xor
add
call
push
pop
cmpsl
xchg
into
nop
or
clc
imul
inc
adc
orl
jne
push
in
lods
xchg
xchg
mov
addl
xlat
mov
adc
pop
push
add
push
mov
or
les
sub
mov
movsb
lcall
hlt
orl
jno
or
xchg
roll
lock
hlt
loope
out
fisttpl
and
in
xchg
push
ds
mov
add
nop
sub
pop
hlt
hlt
inc
add
xchg
je
lock
fs
sub
in
cli
mov
sub
ss
aam
mov
or
inc
lea
sti
movsl
add
cmc
or
or
imul
mov
push
icebp
push
xchg
inc
fidivl
nop
or
in
sbb
sahf
sub
and
hlt
inc
jne
mov
mov
test
xorb
inc
pop
leave
jl
cmp
jle
rcrl
and
jle
mov
inc
dec
jne
data16
sbb
or
add
lret
mov
jp
pop
and
xor
sub
daa
outsl
mov
ss
adc
dec
xchg
xchg
les
lret
imul
mov
mov
outsb
dec
clc
in
repnz
and
xchg
mov
mov
loopne
cld
mov
loop
push
or
ljmp
inc
mov
add
mov
test
fwait
aad
out
and
mov
testl
mov
cmp
pop
outsb
jg
mov
mov
aam
div
cmp
repz
lcall
cmp
pop
insl
jle
mov
cmp
lret
hlt
push
fwait
adc
fildll
mov
mov
mov
pop
jnp
mov
mov
cmp
mov
and
or
inc
sbb
mov
mov
jbe
cs
les
mov
mov
enter
sbb
in
mov
sbb
inc
xchg
mov
or
test
leave
lds
insl
in
push
mov
jo
jne
push
xor
jmp
cmp
cmpl
hlt
mov
fisubs
lahf
push
in
inc
mov
inc
sahf
inc
sahf
ss
sub
sbb
pop
lea
movsb
popf
add
jne
mov
push
push
call
lret
jge
fwait
or
push
xor
outsb
call
in
std
rcl
cmp
add
cmpb
rorb
loope
sub
lea
sbb
xchg
addr16
mov
mov
push
mov
pop
pop
loopne
cld
jb
lea
dec
sub
xor
mov
mov
jge
cs
cwtl
jp
adc
es
mov
repz
mov
push
jmp
and
and
mov
inc
or
pop
cwtl
rolb
rcrl
or
movsb
sbb
mov
push
push
dec
cmp
test
mov
push
push
sbb
pop
and
or
pop
or
push
lock
iret
or
dec
lods
das
push
inc
mov
or
add
cld
push
xor
flds
xor
in
sbb
iret
mov
xchg
add
leave
adc
insl
scas
or
cmp
movsb
push
fidivs
scas
imul
xor
jnp
add
sub
push
mov
jle
dec
in
hlt
xlat
loope
jg
xor
add
hlt
in
mov
lds
shrb
je
xlat
addr16
bnd
shlb
sbb
push
outsb
popa
jbe
subb
nop
fadd
add
add
stc
lcall
and
lcall
loopne
push
jl
xorb
mov
mov
mov
orl
xchg
push
out
mov
pop
inc
mov
fstpt
mov
movsl
xchg
lods
push
lods
mov
mov
or
inc
mov
push
mov
fdivrs
scas
mov
push
les
jnp
repnz
push
inc
sahf
cmp
push
xor
pop
test
pop
js
ss
xchg
dec
je
push
mov
call
cmp
pop
add
test
cmpsb
ss
movsb
mov
pushf
in
rorl
xor
scas
in
cmpsb
mov
and
mov
xorb
test
mov
pop
shl
cmpb
add
jb
add
imul
rolb
aaa
movsb
rcrb
or
cmpb
mov
cmpsb
das
sti
fcomp
insb
xor
inc
fistpl
push
mov
mov
call
pop
call
scas
enter
adc
insb
mov
mov
andb
in
pop
adc
scas
dec
orl
inc
rorb
jp
shlb
push
sbb
test
add
pop
and
movsb
jns
mov
adc
fwait
es
std
fcompl
data16
es
sbb
jmp
mov
push
sbb
push
shll
push
adc
pusha
sti
inc
lods
mov
stos
push
mov
out
jo
jmp
lods
aam
sbb
push
fisttpll
fdivr
lea
fiaddl
push
adc
fwait
pop
xorb
add
push
push
sub
and
push
mov
ret
sbb
mov
repz
enter
movsl
sub
stos
or
xchg
push
mov
sbb
movsb
add
add
jle
mov
fsubl
fisubs
jae
insl
cmp
mov
inc
pop
xchg
add
inc
pop
fs
mov
lahf
pop
mov
adc
xchg
mov
inc
cmpb
arpl
xchg
xor
adc
cmpsl
inc
sbb
xor
mov
pop
ret
fmuls
xchg
jmp
push
mov
enter
loopne
add
es
icebp
pop
or
fnstenv
inc
je
pop
aad
pop
loop
dec
sub
imul
mov
jl
lods
dec
mov
sti
icebp
addb
mov
jnp
psrlw
sub
or
and
push
mov
or
pop
add
pop
cmp
xor
mov
cmpsl
inc
adcl
movsl
test
lods
or
lock
mov
mov
jmp
lods
sbb
mov
fdivs
mov
sub
xor
dec
add
leave
jae
cmpsl
enter
pop
jae
dec
movsl
in
xchg
js
push
sbb
je
enter
push
das
dec
jge
cltd
test
and
cmp
lods
and
mov
cmp
pop
inc
adc
loop
push
pop
inc
je
jbe
nop
sbb
rcrb
xor
dec
rclb
add
popa
sarl
std
sarb
mov
cmp
push
cmp
int3
mov
add
int3
dec
aam
andb
mov
and
loopne
enter
enter
fnstcw
into
test
lds
jb
push
dec
mov
lea
xchg
and
or
test
or
xor
sbb
mov
enter
stos
pop
jl
rorl
shr
rol
mov
adc
add
dec
stos
shll
push
inc
mov
mov
insl
lods
sub
pusha
mov
adcl
mov
test
test
mov
fsts
pop
in
dec
lret
loope
mov
pop
movsb
xchg
inc
in
rolb
jg
or
add
xor
add
push
adc
jo
gs
xchg
inc
sbb
les
mov
lret
stos
inc
jg
stos
cmp
xchg
push
dec
push
mov
push
jb
sub
pop
cwtl
push
andl
cmp
stos
and
mov
movsb
xchg
adc
ja
add
jb
add
js
imulb
pop
pop
cmpl
xor
mov
dec
jp
xchg
stos
inc
and
mov
pop
repnz
stos
inc
clc
push
shl
and
aam
mov
mov
or
aam
daa
inc
lea
sbb
cmp
and
mov
mov
hlt
es
subl
or
or
push
inc
sarb
pop
mov
sub
mov
push
dec
sbb
xor
loopne
cli
jge
das
fcoml
adc
cmp
lods
pop
cmpsb
and
jb
test
jnp
lods
ss
mov
stos
paddusb
lcall
inc
clc
std
push
es
into
xor
or
popa
pushf
rclb
enter
addr16
push
sbb
cmpsb
jp
adc
ret
adc
inc
cwtl
inc
shl
pop
add
adc
sub
mov
mov
adcb
in
xor
and
adc
scas
sbb
adc
or
cmp
add
loopne
sub
or
pop
xor
push
add
fsubrl
push
xchg
sbb
loope
out
cmp
dec
call
lods
test
arpl
ret
xor
xchg
addr16
sbbl
mov
add
push
pop
push
sub
mov
and
dec
add
stos
es
or
adc
xor
jl
sub
test
add
sub
aas
outsl
or
orb
mov
jne
and
adc
jecxz
mov
cs
mov
aas
push
jb
pop
js
rorb
xchg
iret
insl
jmp
jb
nop
or
mov
lcall
mov
push
adc
mov
add
inc
scas
test
adc
mov
sbb
pop
sbb
pop
hlt
shlb
push
int
add
sub
pop
xlat
push
movsb
jge
cmp
repz
cwtl
or
jmp
xchg
add
push
inc
inc
mov
cmp
hlt
nop
insb
cmp
pop
mov
cwtl
cmpsl
test
sbb
insl
inc
mov
adc
stc
addr16
mov
jo
jp
mov
mov
cli
dec
mov
push
xchg
inc
outsl
mov
push
int
dec
cld
push
pop
xchg
or
mov
lahf
mov
and
sbb
fs
cmp
jle
xchg
sub
push
test
test
mov
test
aas
test
xor
lahf
push
adc
cmpb
inc
clc
xor
outsl
outsb
pop
xor
imul
xor
mov
js
xchg
pop
rcll
ss
sti
decb
push
push
or
pop
adc
push
mov
lea
and
adc
sub
dec
out
cli
jge
dec
adc
xor
adc
jbe
roll
sub
dec
dec
lods
roll
xchg
xchg
jne
pop
push
ret
add
repnz
sub
xchg
hlt
loopne
pop
movsl
push
mov
ja
nop
cmp
mov
xor
add
pop
orb
and
xchg
insb
fiaddl
sub
adc
xchg
addr16
in
loopne
mov
cmp
scas
addl
imul
cmp
repz
dec
push
xchg
and
xchg
adc
in
and
iret
cmpb
inc
fiadds
repz
mov
add
jns
mov
test
and
push
and
cmpsl
fdivp
outsb
rcrb
daa
icebp
add
adc
pop
add
push
dec
inc
clc
adcb
mov
pop
pop
mov
sub
add
pusha
sub
data16
ret
addb
cmp
cmpsl
insl
sbb
test
fwait
push
icebp
xor
mov
or
pop
add
push
adc
test
mov
sub
pop
pop
cmpsl
frstor
adc
lea
lcall
repz
mov
add
inc
ret
movsl
add
xor
inc
les
iret
imul
and
ja
add
lcall
test
sbb
test
fidivl
sbb
mov
add
mov
lret
push
push
test
mov
lock
mov
xchg
enter
pop
push
mov
sub
add
fdivl
pusha
cmovo
lods
push
inc
pop
sub
xor
lds
pop
int3
mov
mov
add
and
test
xchg
cwtl
daa
or
inc
mov
fwait
ret
adc
ss
ja
inc
mov
adc
dec
sub
jg
aaa
insl
ljmp
dec
add
pop
add
mov
out
adc
cs
sub
cmc
pop
inc
add
sbb
jp
pop
cli
or
dec
cmp
add
nop
mov
fmull
cmpsb
sbb
mov
pusha
test
or
adc
dec
inc
add
fs
lcall
xchg
push
add
jne
inc
jnp
test
subl
pop
and
aaa
lea
arpl
add
jnp
pop
and
js
dec
test
lea
mov
add
sti
popf
mov
jnp
test
mov
xlat
push
fisubl
add
xchg
dec
mov
test
cmpsl
xor
mov
and
das
mov
inc
les
dec
adc
mov
or
lods
into
xchg
lods
movsb
add
push
fstps
adc
adc
gs
lods
dec
dec
pushf
and
in
loope
add
stos
sub
dec
push
rcll
push
or
mov
cmp
leave
xchg
mov
icebp
inc
add
test
push
outsb
sbb
mov
shr
lea
in
dec
add
shl
dec
mov
out
adc
ds
mov
dec
mov
inc
sub
xor
push
mov
add
dec
add
inc
lods
mov
add
cmp
adc
mov
or
add
push
push
cmp
sbb
inc
pop
add
imul
adc
mov
inc
sahf
addb
rorl
fs
shll
inc
pop
jle
orb
lock
mov
adcb
push
loopne
cltd
sbb
test
ret
aaa
test
sub
fsubrl
clc
outsl
movsb
cmpsb
imul
xor
xor
es
cld
push
push
add
or
rorb
cwtl
andb
sbbb
out
inc
aad
push
mov
push
lret
add
insb
or
cltd
fmull
fisttps
int
rcrl
cmpsb
push
mov
mov
or
insb
ret
insl
jge
dec
and
add
call
adc
imul
and
and
mov
out
movaps
or
inc
sbb
lahf
dec
jle
add
xorb
adcb
ss
int3
ds
aam
inc
sbb
add
stos
call
pop
out
push
popa
mov
mov
push
xchg
lea
cmp
test
push
roll
clc
mov
xchg
and
loope
adc
je
mov
shlb
and
fimull
sbb
add
adc
cmp
jae
daa
lret
mov
mov
mov
arpl
mov
lret
orl
ret
test
ret
mull
push
inc
push
out
xchg
arpl
es
inc
push
scas
or
fwait
fs
and
sbb
mov
add
or
daa
into
bound
pop
out
mov
enter
das
lea
xor
pop
test
add
stos
xor
or
in
xchg
push
ret
and
pushf
aad
cmpb
mov
mov
xorb
out
repnz
movb
lods
add
cmp
inc
add
stc
push
or
dec
add
add
or
test
adc
inc
daa
or
lahf
or
push
fcom
lcall
dec
movb
movb
andl
ss
or
and
jae
inc
cmpsb
movsb
hlt
hlt
inc
fdivl
fmuls
dec
mov
dec
cmpsb
fs
in
adc
inc
loopne
push
jge
ds
mov
fs
xchg
xchg
test
lret
fistps
outsb
or
adc
xchg
xchg
nop
adc
pop
int
lcall
pusha
xchg
dec
enter
cs
dec
fildl
addl
or
fdivs
jge
sbb
cmp
out
mov
in
mov
or
movsb
jo
pop
or
mov
and
sbb
or
call
jbe
push
cmpb
push
out
or
test
lret
mov
add
jbe
dec
sti
pop
aas
mov
jmp
push
hlt
hlt
or
hlt
pop
dec
loopne
subl
subb
mov
add
sub
in
sbb
flds
add
test
and
mov
addb
and
je
ret
mov
lds
inc
xor
cmp
fcoml
inc
fisubl
mov
push
sahf
dec
popa
mov
mov
dec
push
push
or
pusha
xor
pop
in
clc
xchg
ret
mov
sbb
xor
pop
fs
mov
sub
sub
xlat
add
adc
int
or
js
xor
sub
andl
js
cmp
push
adc
add
inc
mov
dec
movsb
add
xchg
pop
mov
mov
add
je
into
frstor
pop
sub
lret
lods
pusha
shlb
pop
inc
xchg
or
ret
mov
adc
nop
popa
loopne
add
movsb
jns
fsts
ret
adc
adc
les
inc
or
xchg
xorl
pushl
mov
or
sbb
and
jns
int
xchg
dec
pop
sbb
and
cmpl
adc
mov
and
mov
clc
xor
or
jmp
and
sti
push
mov
push
add
int
mov
popa
adc
test
in
into
repz
cmp
push
lret
adc
sub
and
incb
mov
mov
lds
mov
mov
fstp
pushl
dec
dec
inc
inc
dec
dec
dec
push
push
daa
dec
add
xor
aaa
xor
xor
filds
inc
out
fcoms
xchg
loop
sbb
adc
pop
dec
jo
int3
addl
pop
je
lods
iret
mov
sahf
mov
popa
iret
sub
cmp
or
and
jo
xchg
fcoms
test
test
dec
mov
add
mov
sarb
rolb
add
ret
pop
aaa
rolb
aad
outsb
xor
repnz
cmp
xchg
cmp
leave
cmp
push
xor
add
pop
cmp
push
data16
lods
inc
movb
ljmp
movsl
add
in
nop
push
and
sbb
jp
sbb
cmp
fwait
mov
shl
jl
cmp
stos
addb
and
xchg
cltd
bound
push
pop
xchg
cmpsb
test
js
rolb
mov
cli
insl
es
adcl
pop
dec
loop
rorb
ret
sbb
sbb
pop
pop
inc
or
or
inc
ljmp
and
add
or
push
test
sub
aaa
test
adc
pop
jg
mov
fsubs
lcall
or
add
inc
lcall
jmp
not
xchg
stc
xchg
into
xor
jno
sarl
push
roll
pop
test
sbb
aam
aad
test
mov
jb
mov
and
pop
cmp
mov
inc
and
test
cmpsl
jo
invd
jns
pop
aam
roll
push
in
cmp
sub
jo
xor
sbb
push
pushf
or
out
es
sub
jmp
test
andb
inc
cmpsl
and
jnp
jbe
sbb
push
jg
faddl
push
lods
aad
xchg
cmp
or
aad
fsubs
inc
inc
xlat
pop
push
xchg
push
out
les
adc
loopne
fcmovb
in
mov
pop
pop
xor
dec
icebp
sbb
jl
mov
stc
push
nop
out
popl
xor
lea
in
dec
cwtl
ljmp
add
jns
shrb
add
cli
lods
cld
insb
inc
xor
mov
in
lods
cmp
fimuls
adc
mov
mov
nop
orb
and
jnp
push
xor
sub
nop
arpl
dec
mov
sub
adc
push
dec
ret
xor
mov
jge
cmp
sbb
ljmp
loope
mov
sbb
mov
movl
add
add
mov
push
dec
int3
cmp
test
gs
mov
or
jne
clc
add
or
xchg
push
adcb
sbb
outsl
xor
movhps
mov
pop
cmp
mov
push
data16
fldenv
or
cmp
sarb
jns
adc
mov
push
jp
mov
lock
add
inc
inc
push
ficoml
add
inc
jmp
adcl
fsubr
and
ss
mov
shrb
ja
xor
or
add
cld
outsb
or
or
aaa
or
hlt
mov
add
mov
add
pushf
lds
fs
sbb
cmp
pusha
fld
or
popa
or
or
and
or
add
dec
ficoml
adc
pop
mov
call
dec
mov
fdiv
or
add
pop
pop
sub
add
imul
add
mov
scas
adc
jnp
jne
data16
and
mov
xor
xchg
sub
lret
and
inc
inc
mov
psubw
add
sub
aam
fdivs
ds
xor
adc
jne
out
inc
mov
test
mov
dec
inc
imul
push
xor
sub
xor
ds
sub
sub
pop
rcr
mov
ja
arpl
rcll
mov
mov
int
lea
imul
test
mov
das
inc
shll
jl
inc
inc
sti
mov
push
push
rcrl
pop
movl
sahf
push
push
add
and
sar
cmp
pop
je
cmpsb
inc
sub
inc
inc
fstpl
cmp
iret
and
pusha
add
mov
dec
sar
push
adc
out
adc
inc
lcall
xchg
inc
gs
imul
adc
fstpt
xor
loop
test
shufps
dec
push
insb
cs
fbstp
jo
into
mov
leave
cmpsb
inc
mov
add
mov
or
add
fst
fsubrl
bound
mov
repz
pushf
push
push
mov
dec
hlt
mov
cmpsl
stc
xor
nop
mov
dec
mov
jnp
cmc
sub
push
mov
inc
add
cmp
pop
and
sahf
xchg
movsb
loopne
sub
in
fists
dec
inc
ret
and
andps
es
pop
mov
inc
push
test
xchg
xor
inc
mov
mov
add
shr
nop
cmpsl
xor
pop
pop
or
inc
sbbb
jl
add
sub
in
push
adc
pop
shll
and
xchg
and
sub
xchg
add
dec
sbb
push
inc
jp
aam
inc
xor
xor
jp
sub
iret
faddl
dec
sbb
mov
ja
add
adc
sbb
ret
fildl
or
inc
test
lret
and
sub
stc
insb
xchg
and
xor
bound
add
push
sti
rclb
mov
cs
xchg
popa
adc
sbbl
movsb
pop
popf
cwtl
lcall
add
lea
push
add
push
aaa
sub
pop
clc
dec
adc
lock
and
push
sahf
xchg
mov
in
dec
adc
lret
xlat
scas
movsl
insl
inc
adcl
and
mov
jo
mov
push
adc
adc
fstpt
jbe
rol
rcll
or
mov
xor
dec
inc
adc
inc
xchg
inc
cmp
mov
mov
dec
adc
add
sbbl
dec
scas
sub
pop
ja
jns
es
jmp
push
mov
and
clc
fsubl
imul
cmp
rcrb
lret
push
repnz
ret
and
pop
cmp
jnp
or
mov
xchg
xor
jns
dec
clc
cmp
mov
sbb
cmp
iret
inc
adc
outsb
mov
adc
repnz
ret
inc
mov
push
in
bound
push
fists
xchg
sub
pop
cld
mov
dec
pop
push
or
jecxz
std
data16
pusha
aad
mov
movsb
insb
pop
push
mov
xor
scas
push
rorl
xor
jmp
add
fdivrs
adcb
mov
aas
push
jne
push
pop
xor
sub
jmp
pop
sub
mov
lds
xor
sub
push
sbb
lcall
and
and
popa
dec
sub
das
into
lea
push
test
mov
sub
push
sub
pop
daa
inc
addb
jp
lock
insb
xor
and
loopne
or
lock
inc
in
fs
mov
sarb
js
sbb
mov
inc
cmp
fldcw
mov
sub
jne
aas
sti
sub
jg
dec
mov
lds
fists
push
add
inc
jne
push
sub
add
cwtl
sub
jbe
and
or
leave
push
dec
arpl
xchg
lods
shrb
arpl
ret
add
movsb
ja
ljmp
sbb
or
add
and
movsl
or
lock
sarb
inc
cmp
je
cmp
sub
or
adc
orb
or
movsl
pop
notb
rorb
rcl
xchg
xchg
xchg
xchg
aad
xlat
fcoms
fcmovu
fcoml
rclb
ret
les
mov
pushf
xchg
xchg
xchg
leave
lret
cmp
cmp
out
nop
push
cmp
call
adcb
test
daa
cli
sbb
test
inc
xlat
jmp
ret
push
inc
cli
mov
pusha
xlat
push
nop
cwtl
in
out
mov
and
xchg
pop
mov
or
cmp
cld
ljmp
or
xorl
or
pop
sbb
or
add
and
addr16
lea
push
filds
or
fsub
sbb
ljmp
mov
xor
clc
push
fsubrs
mov
ds
dec
cltd
aas
cmpsl
push
out
mov
mov
xchg
and
imul
push
xor
mov
xchg
ret
inc
dec
push
pop
aad
jae
add
push
in
adc
fchs
push
mov
addl
sbb
or
or
sbb
sbb
or
push
jmp
nop
jne
inc
sub
push
into
cvtdq2ps
data16
xchg
or
cmp
or
jp
pop
daa
or
push
xor
dec
loop
lock
pop
loopne
sbb
addb
jb
mov
adc
add
dec
jmp
cltd
mov
scas
dec
inc
push
dec
pop
das
push
jmp
and
adc
or
daa
lods
cmpl
mov
shlb
in
enter
pop
xchg
push
fs
je
es
lock
cltd
rcrb
test
cmpsl
pop
jl
ret
jb
add
lock
mov
dec
loope
adcl
dec
sbb
or
sub
jl
xor
adc
lret
test
sbb
mov
aas
and
jb
and
mov
jge
jae
pop
iret
jecxz
add
daa
sub
and
mov
xlat
gs
dec
int3
das
adc
cs
adc
and
scas
in
xchg
sbb
inc
outsb
outsl
jne
push
xor
dec
mov
xlat
insb
push
sbb
loop
dec
jne
rcrl
ror
push
iret
loop
push
xchg
dec
xchg
out
shlb
push
iret
jge
jo
lret
rcr
push
out
adc
mov
dec
in
inc
repz
daa
add
adc
xor
sbb
nop
xchg
push
add
pop
out
je
out
movsl
out
add
and
lods
imul
mov
leave
mov
jmp
ja
mov
dec
mov
clc
push
pop
push
push
push
dec
cmp
lcall
xchg
dec
sarl
push
and
and
xchg
lahf
mov
inc
inc
or
sub
add
and
mov
das
outsb
shrb
xchg
scas
xorl
repnz
pop
lcall
outsb
cltd
adc
dec
sub
add
inc
push
fists
adc
pop
mov
insl
lock
add
dec
mov
push
popa
inc
dec
pop
aam
push
les
sub
push
leave
mov
inc
or
arpl
jno
pcmpeqb
xor
add
sub
add
stc
das
mov
iret
arpl
inc
and
fadds
fisubs
xor
push
adcl
mov
sub
jmp
pusha
pop
xor
mov
sbb
pop
push
cmp
ss
clc
add
in
fsubr
adc
mov
xchg
push
es
mov
add
inc
sbb
hlt
loope
cmp
shlb
loop
test
xor
push
hlt
mov
inc
mov
mov
cmp
dec
rorl
lock
rolb
ljmp
mov
cld
sub
repnz
xchg
inc
pop
pop
sub
xchg
add
add
push
ss
and
inc
or
or
add
add
pop
mov
push
and
dec
sahf
cs
loopne
inc
popa
in
pusha
dec
ret
sub
cltd
xchg
xchg
sub
adc
cmp
in
mov
shrb
test
aaa
adc
movsl
in
aaa
inc
add
pusha
popa
sbb
xchg
rcr
nop
repz
sub
js
push
in
arpl
repz
in
test
mov
jecxz
mov
inc
push
xchg
aam
fucomp
popa
or
into
adc
cmc
fucomi
ljmp
xor
inc
cmp
lcall
sarb
popf
xchg
and
push
inc
dec
mov
push
mov
or
sarl
js
popa
inc
or
fiaddl
xchg
dec
push
adcb
pop
insl
test
or
lret
sbb
adc
mov
orb
xor
negb
sti
push
cld
pop
push
fadds
fyl2x
pop
lock
pop
stos
add
pop
shlb
mov
adc
adc
push
cs
add
cmp
xor
sahf
dec
rolb
lods
adc
sub
dec
lods
xchg
icebp
aad
xchg
or
jne
push
dec
sub
cmc
fdivrl
and
sub
aas
ret
jge
or
movsb
rolb
aam
sub
or
xlat
push
xchg
sbb
add
testb
testl
call
or
mov
test
add
clc
mov
adc
cmp
pop
xor
rolb
sub
push
dec
push
add
inc
inc
mov
int
sub
dec
mov
sub
push
jg
push
lret
inc
lock
add
rcl
or
jnp
inc
sbb
pop
sub
inc
cmc
add
es
pop
xor
lret
in
loopne
lahf
cmp
sub
fdiv
mov
xor
jns
neg
dec
or
or
xorb
clc
mov
fcompl
xor
mov
inc
adc
mov
pop
add
inc
stos
xchg
xchg
or
dec
xchg
add
xchg
sbb
jo
popf
cmpsl
fadds
scas
add
pop
nop
add
cltd
and
jbe
mov
sti
inc
les
dec
cli
and
iret
roll
and
mov
mov
xchg
inc
sbbb
add
ror
scas
mov
or
ss
test
add
cmpsb
push
pop
xlat
inc
dec
cwtl
test
nop
push
inc
sub
or
mov
xchg
push
inc
inc
dec
out
dec
dec
inc
mov
push
cmpb
sbb
test
jo
dec
cmpb
cmpsl
inc
dec
mov
sbb
push
loope
imul
les
das
dec
cwtl
jae
dec
pusha
int
das
xor
pop
jno
pop
add
inc
dec
pop
add
scas
sub
lea
adc
sti
inc
inc
mov
cmp
fs
xor
and
in
xor
mov
lods
test
or
pop
xor
jne
adc
int
xchg
jp
jne
sti
inc
in
push
nop
movsl
lret
adc
daa
xor
inc
outsb
popa
xchg
jg
pushf
call
and
and
scas
hlt
dec
test
inc
xchg
pop
mov
push
pop
test
mov
test
pop
in
test
xlat
in
call
pop
inc
cmp
mov
pushf
inc
dec
mov
ret
std
mov
dec
es
dec
outsb
xor
adc
je
add
mov
fistpll
js
mov
imul
adc
mov
push
jns
outsl
jae
js
mov
push
shll
fmul
cltd
add
loopne
sbb
stos
or
add
push
pop
or
xchg
insb
dec
decl
hlt
es
das
dec
add
js
jb
and
insl
push
leave
mov
mov
lret
packuswb
cmp
mov
inc
or
push
pop
pop
mov
mov
xchg
mov
aam
push
clc
adc
push
push
dec
aas
inc
adc
add
es
dec
mov
xlat
inc
add
jne
pop
jo
mov
mov
movsb
adc
mov
add
cmp
and
or
sbb
nop
or
jbe
jns
mov
add
mov
or
stos
jae
sarb
shll
mov
in
loope
inc
enter
add
cmp
pop
enter
or
xlat
test
popa
or
inc
enter
adc
adc
xchg
and
enter
roll
jl
xor
sub
cmpsl
jno
push
and
lahf
pop
test
xlat
call
addl
dec
call
rorl
push
add
adc
ret
mov
xchg
adc
popa
insb
outsl
sbb
xlat
dec
enter
push
sbb
mov
jae
mov
dec
enter
and
or
arpl
jns
adc
add
adc
adc
pop
and
mov
in
jmp
enter
and
mov
mov
or
or
in
out
lock
lahf
int3
xchg
lock
push
push
dec
ss
repnz
or
mov
push
enter
movsb
nop
sub
enter
xlat
xor
xchg
or
or
jo
adc
xlat
dec
pop
test
scas
dec
mov
xchg
outsl
add
mov
nop
inc
push
or
sbb
test
in
mov
jp
lahf
jo
xor
push
pusha
mov
decl
rorb
fnstcw
pop
and
or
nop
or
nop
push
and
jl
data16
int3
pop
inc
push
clc
sbb
adc
rolb
push
sbb
dec
sti
fimuls
mov
dec
jle
and
mov
fnstcw
in
jnp
hlt
data16
push
nop
sbb
push
inc
push
fwait
int
mov
and
push
push
and
imul
insb
push
pop
push
test
and
into
shl
je
lods
or
in
xchg
ffreep
cmp
nop
dec
pop
and
xchg
cwtl
mov
add
push
test
inc
lcall
fwait
add
js
mov
mov
decl
pop
repnz
cmp
add
mov
add
push
add
xor
sbb
test
or
je
repz
mov
or
lods
std
push
push
sub
and
les
fstps
sub
push
mov
bound
sbb
fists
sbb
je
insb
aam
movsb
movsl
inc
dec
push
cwtl
enter
inc
aad
in
and
and
rorb
mov
ret
mov
ss
loope
push
in
orb
inc
scas
movsl
add
xchg
fwait
in
xchg
mov
add
es
enter
mov
bound
into
lock
loopne
ja
cs
mov
fdivrs
xchg
or
lea
daa
adc
add
add
cmpsl
sbb
and
add
das
jmp
subl
pop
shrl
ret
add
mov
cmp
mov
adc
outsl
pusha
pop
or
insl
in
cmp
jle
mov
out
inc
lahf
popl
pop
adc
lea
lods
scas
mov
or
nopl
pop
sbb
pop
push
mov
and
xlat
rcrb
je
loop
aam
enter
sub
add
sbbl
rol
adc
jo
xor
dec
fld
sbb
nop
inc
test
sub
das
and
or
push
sub
stos
or
adc
and
push
int
cmpsl
cmp
jno
xchg
into
cs
fld
mov
inc
mov
pop
mov
push
adc
mov
ss
fucomi
inc
mov
das
test
loop
xor
mov
or
dec
jp
ret
xor
adc
loopne
add
inc
bound
xchg
dec
leave
fdivrs
push
or
daa
add
sub
shlb
xchg
sbb
es
sub
loope
ret
popf
and
aaa
jns
or
ds
and
or
pop
add
cmp
inc
add
insl
iret
and
add
inc
enter
adc
scas
pop
dec
xchg
mov
xchg
sbb
ljmp
int3
pop
push
in
push
dec
mov
inc
into
repz
or
sub
lock
nop
pop
sarb
lock
aaa
cmpsb
lea
push
mov
push
sti
add
mov
loopne
stc
movsb
jg
jb
inc
xchg
call
shl
sbb
js
adc
std
stos
jge
mov
cmp
xchg
and
and
push
mov
xorl
lret
into
pop
add
rcl
mov
pop
setae
hlt
jle
sbb
push
push
aaa
adc
fnstcw
inc
pusha
mov
jle
and
dec
xor
mov
lret
aas
in
cmpb
out
push
enter
or
pop
xchg
rcrb
ja
mov
sbb
scas
and
dec
inc
push
in
sti
scas
call
loope
fimuls
dec
mov
inc
fcmovb
xchg
ss
std
cmpsb
mov
cld
push
push
jne
dec
jl
or
mov
jge
shrb
pop
xchg
inc
pop
dec
add
xchg
pop
or
pusha
subl
int3
pop
adcl
jno
dec
and
fdivs
sbb
xchg
jle
sub
jns
aaa
cmpb
stos
cli
or
adcl
adc
xchg
inc
or
cmp
insl
or
xor
leave
pop
adc
push
sub
inc
dec
loopne
jmp
mov
and
inc
je
inc
cmpsl
lea
scas
add
push
mov
addr16
int
mov
das
mov
add
cmpl
orb
xorb
mov
add
dec
inc
or
shlb
popf
push
ffree
cltd
pop
popa
add
out
mov
pop
pop
dec
stos
mov
push
add
adc
int
sbb
push
push
adc
sbb
jmp
rorl
jmp
cmp
pop
add
jmp
rorb
mov
clc
movsb
dec
jns
daa
or
add
sti
push
push
add
push
pop
addb
inc
adc
xlat
inc
leave
inc
adc
jecxz
inc
pusha
sub
jbe,pt
add
xchg
int3
call
xchg
pop
or
je
lods
dec
adc
xor
mov
aas
or
andb
pop
pop
mov
cmp
mov
sarb
pop
sbbl
roll
sbb
mov
filds
pause
lods
repnz
inc
sbb
dec
add
aas
les
scas
pop
xchg
add
ja
push
loopne
jg
jno
push
aad
push
ror
jg
jmp
inc
jne
sbb
jbe
fnsave
outsl
jno
sub
jne
dec
ljmp
inc
inc
sub
add
imul
jns
sbb
sbb
gs
ds
ret
insl
inc
push
es
loop
inc
mov
xchg
and
push
mov
xor
jb
aas
lds
jb
rcrl
mov
xchg
or
or
pop
mov
cwtl
out
xor
daa
loop
outsl
rcll
mov
cltd
movsb
mov
xor
add
iret
push
je,pn
xor
clc
sub
imul
scas
fiadds
sbb
hlt
dec
inc
add
andl
sub
add
das
mov
fcomps
movsl
add
cltd
and
orl
or
in
adcl
pop
sub
pop
movsl
push
lods
dec
ss
fistpl
call
aaa
jmp
movsb
mov
jne,pt
loopne
push
pop
inc
sbb
out
popa
sbb
ljmp
movsb
jge
aam
ljmp
sahf
and
dec
loope
push
loopne
sbb
sbb
mov
rcrb
and
jo
mov
and
out
cmc
mov
add
jle
sbb
add
loopne
in
imul
inc
das
mov
stos
sub
ret
ss
and
je
mov
ret
daa
jno
and
cmpsb
cmp
cli
nop
data16
mov
fwait
pop
mov
jno
cmp
in
loopne
xchg
mov
scas
mov
movsl
pop
pop
enter
jne
testb
or
jmp
or
xor
dec
fcoml
inc
xor
vpmullw
andl
or
enter
inc
ljmp
lds
or
iret
mov
loop
or
orl
or
or
es
cli
insb
pop
sub
movsb
sbb
xor
cmp
mov
sbbl
pop
sbb
or
es
sbb
arpl
lods
ret
inc
cmp
mov
push
cmpsl
jmp
and
mov
add
ret
in
mov
fucomip
xor
fs
xorb
sbb
loop
mov
nop
sub
add
mov
add
dec
jmp
lcall
xor
add
stos
lea
cwtl
push
xchg
lahf
jecxz
pop
call
or
rorl
ret
les
call
movsb
push
add
addl
dec
ss
push
sti
pop
mov
jl
push
adc
sbb
xor
mov
inc
push
lds
push
add
sub
and
je
fadds
xor
sbb
bound
fiaddl
or
and
jle
jp
and
cmp
lds
pop
ret
mov
addr16
cmp
call
pusha
or
gs
aam
test
xor
adc
incb
add
cmp
inc
call
das
cmpl
in
sub
cmp
cmp
cmp
ficoms
jae
popa
lock
pop
xchg
jl,pt
arpl
mov
icebp
adc
adc
imul
gs
inc
or
jbe
jo
xchg
and
pop
mov
out
and
dec
mov
es
sub
jmp
jmp
dec
call
call
imul
or
push
into
hlt
sbbb
sbb
inc
mov
arpl
sub
aaa
xor
js
add
or
test
add
je
cmp
cmpl
scas
enter
insl
mov
and
sub
and
xchg
sarl
inc
bound
mov
mov
and
andb
jle
mov
xchg
js
mov
movsb
add
nop
adc
cmp
bound
loopne
mov
xchg
add
add
mov
adc
inc
push
inc
and
shrl
add
in
lock
xor
cld
add
push
dec
and
lods
in
or
outsb
push
push
xor
popa
mov
mov
jns
lods
in
fistpl
and
into
adc
std
sbb
or
sbb
add
jbe
jmp
cmp
cmp
insl
adc
mov
and
addb
xchg
adc
int
movl
nop
les
pop
sbb
jns
mov
out
std
cmp
in
ret
pop
sarb
addl
rcrb
pop
mov
push
es
sbb
push
in
adc
cmp
jns
mov
adc
sub
inc
fsubs
mov
mov
push
inc
push
add
jmp
fisubrs
push
mov
scas
sub
inc
adc
jns
fsubrs
inc
adc
push
lahf
sub
sub
imul
jl
and
test
loope
mov
inc
jae
mov
enter
jo
mov
mov
cmp
xorl
pop
dec
mov
xlat
cld
sbb
ds
lea
ud1
mov
xor
xchg
pop
in
adc
shrb
daa
push
cwtl
cwtl
xchg
dec
int3
cmpsb
mov
xor
push
and
jecxz
nop
push
sbb
cmp
xorb
or
sbb
pop
orl
ret
inc
jnp
ficomps
sbb
or
repnz
es
sub
mov
inc
outsb
and
jbe
inc
scas
mov
outsl
pusha
add
lret
push
cmp
jp
out
nop
fisttpl
adc
mov
sbb
shlb
pop
addr16
sbb
outsb
dec
hlt
sbb
dec
dec
shll
lock
addl
insb
jmp
pop
lahf
mov
xor
lret
addr16
xchg
xor
xchg
and
lock
sbb
mov
orb
mov
add
test
mov
dec
scas
lods
add
scas
test
sub
xchg
inc
dec
sub
push
loopne
push
xor
pop
in
ljmp
mov
sub
cs
inc
lods
adc
xor
mov
push
divl
mov
push
jge
inc
inc
daa
pop
and
es
sbb
inc
xchg
xchg
sub
adc
out
call
mov
pop
inc
ret
loopne,pt
sub
mov
test
aas
fistl
push
cmp
xchg
push
push
sbb
fsubs
movsl
ucomiss
rclb
lret
lea
sahf
and
fs
sti
rorb
add
adc
xor
push
push
or
mov
pop
add
lea
sub
mov
scas
fwait
lock
addl
pop
mov
stos
or
cmp
nop
fisubl
dec
inc
xchg
or
cmp
mov
push
sbb
in
ret
daa
lods
add
sub
in
insl
lea
in
and
mov
or
outsb
adcl
inc
xor
scas
and
push
test
test
fcmovb
insb
sbb
lock
add
jl,pn
add
sahf
xor
pop
adc
push
shl
add
pop
mov
add
imul
lret
cld
mov
mov
sub
and
push
sarb
mov
aam
fcomip
adc
mov
and
loop
or
and
mov
add
je
add
pop
sub
lds
push
ret
das
cmp
dec
je
movl
cmpsb
add
add
inc
lods
orb
or
sbb
movsl
test
ret
lock
mov
outsb
or
daa
out
nop
pop
inc
cmp
pop
mov
inc
pop
leave
and
movsb
mov
nop
rorb
mov
cmp
mov
stos
push
xchg
push
pushf
xchg
adc
jl
mov
lods
push
push
xchg
mov
dec
mov
nop
lock
push
int3
cmp
or
jecxz
sahf
cmp
cmp
and
pop
add
insl
jl
dec
rcr
adc
mov
jmp
int
push
jmp
pop
aas
pop
xor
and
add
nop
xchg
adc
mov
xor
dec
push
enter
and
je
xor
adc
nop
push
xchg
js
adc
roll
pop
lcall
sub
pop
inc
mov
lods
dec
adc
mov
add
inc
mov
in
cmp
in
or
xor
mov
or
add
add
gs
ucomiss
add
mov
or
pop
push
mov
push
push
cltd
push
sbb
add
pop
mov
not
loopne
mov
je
mov
dec
ljmp
add
adc
sbb
xchg
les
mov
cs
pop
test
movl
arpl
and
dec
push
sbb
or
sti
jae
mov
xchg
sub
dec
rclb
add
imul
es
cmp
in
or
mov
out
leave
and
inc
push
add
cmp
push
push
mov
nop
pop
mov
nop
mov
movsl
sub
push
add
dec
out
xchg
mov
and
cmp
or
cwtl
dec
mov
shlb
mov
aam
push
push
mov
mov
push
stc
sbb
enter
xchg
les
nop
add
jnp
addr16
push
in
add
in
in
hlt
stos
and
sbb
inc
xor
out
jecxz
je
shl
mov
sub
push
add
lea
mov
shl
cltd
xchg
lds
test
mov
mov
mov
pop
lahf
and
aas
rcr
popa
in
mov
sti
pop
mov
cmp
movsb
in
subb
popf
cmpsb
mov
out
mull
adc
push
mov
xor
fdivrs
jp
test
mov
sub
xchg
sub
mov
inc
sbb
sti
jle
sub
xchg
xchg
mov
inc
push
pop
imul
push
aas
fs
bnd
mov
push
lds
lret
cli
ss
sub
mov
daa
outsl
call
in
lock
mov
pop
adcl
dec
cmp
pop
les
xchg
scas
imul
je
cltd
xlat
je
iret
xchg
leave
lcall
mov
movsl
jmp
sub
loopne
in
in
inc
mov
xchg
nop
bound
cmp
or
std
loopne
leave
imul
je
or
dec
rolb
cmp
mov
adc
dec
push
pop
cmpb
adc
stc
movsl
cmp
test
xchg
nop
mov
xor
in
fldl
hlt
fisttpll
or
or
dec
cwtl
jecxz
cmpsb
mov
push
sbb
xchg
js
pop
cld
stos
mov
sbb
mov
adc
stos
mov
inc
pop
nop
cmp
inc
or
or
mov
scas
mov
push
add
xlat
fsubr
adc
push
in
dec
push
jne
pop
imul
pop
imul
adc
imul
inc
add
add
into
mov
or
dec
je
dec
jne
or
movsl
xor
or
and
and
add
aaa
xor
jb
enter
add
out
sbb
or
adcb
movsb
add
add
push
or
xor
and
clc
pop
xchg
scas
inc
pop
add
add
push
push
add
inc
mov
cwtl
lret
cmp
adc
jmp
mov
or
add
iret
dec
ds
push
in
mov
lods
out
test
mov
add
sub
jl
fwait
pushf
add
sbb
and
cmp
push
sub
xlat
pop
sub
outsb
test
dec
dec
push
dec
mov
mov
and
sti
add
add
loopne
mov
push
shrl
mov
inc
sub
xor
sub
xchg
mov
fistpll
ret
addr16
ret
das
hlt
pop
aaa
add
fcoms
arpl
mov
or
cwtl
push
cvtps2pi
test
dec
or
inc
test
xchg
fistps
pop
dec
or
clc
mov
jmp
mov
adc
inc
mov
push
add
and
cmpsb
mov
pop
add
cmp
rol
sub
sarl
aad
shll
das
dec
mov
push
dec
fsubs
sti
mov
dec
sub
cmp
or
adc
int
data16
adc
or
dec
or
mov
stos
in
inc
inc
jle
test
test
inc
test
inc
pop
xor
cmpsb
dec
push
fs
ss
dec
sub
lret
jg
stos
add
in
or
push
mov
enter
add
push
add
sub
pop
add
leave
mov
push
pushf
adc
insb
inc
iret
repnz
repnz
add
add
inc
inc
test
inc
and
call
sub
test
gs
daa
test
mov
inc
mov
daa
pop
xor
add
mov
mov
push
inc
sarl
jns
dec
scas
pop
ss
sub
inc
inc
in
add
inc
and
jb
jb
cmp
pushf
mov
mov
mov
ret
imul
addr16
dec
rcll
xor
inc
pop
test
cmc
push
nop
xchg
dec
and
adc
cwtl
inc
inc
inc
mov
inc
subl
sbb
and
sbb
jb
lahf
mov
dec
inc
dec
push
jnp
popf
roll
add
push
sub
add
jbe
cmp
sbb
sysenter
or
inc
and
xchg
mov
sahf
pushf
adc
xchg
gs
push
lods
jne
int3
iret
rep
add
mov
cmpb
notb
and
enter
dec
mov
adc
mov
mov
adcl
add
dec
jge
pop
in
pop
inc
cwtl
pop
inc
push
add
cmpsl
push
pusha
call
arpl
push
mov
arpl
ja
jnp
push
or
mov
sub
daa
mov
mov
add
or
adc
pop
outsl
and
enter
mov
xchg
es
push
mov
popa
sbb
mov
nop
mov
cmp
notb
xchg
outsb
test
or
xchg
test
enter
mov
pushf
pop
clc
sub
push
sub
or
lock
sub
pop
sbb
adc
dec
sub
sbb
mov
lods
mov
pop
add
out
dec
xor
enter
dec
sub
or
inc
mov
push
sub
fsubrp
inc
inc
outsb
dec
sbb
in
inc
cmp
jmp
mov
dec
inc
xorl
mov
inc
xor
lahf
pop
mov
and
in
dec
or
sbb
in
ss
in
in
dec
dec
pop
imul
leave
rolb
aam
ret
orb
int3
jge
inc
sbb
pop
xchg
aaa
hlt
add
add
mov
pop
rorb
ss
sub
enter
imul
push
outsb
mov
das
xor
jmp
cmp
or
mov
sbb
sub
popf
sbb
leave
fcomp
loopne
data16
orb
inc
pop
jbe
lcall
or
cs
dec
bound
hlt
nop
inc
cmp
ss
pop
lret
cmp
cmc
mov
cmc
dec
inc
sbbl
lcall
pop
testl
sub
dec
jmp
ss
sub
test
and
rorb
addr16
xlat
and
jbe
inc
inc
sahf
cld
xor
jnp
pop
add
jns
mov
clc
inc
in
les
push
dec
in
inc
dec
popf
les
cmp
xor
push
xor
and
add
pop
aaa
adc
or
xchg
jne
inc
push
add
lods
pop
dec
mov
add
jmp
add
add
adc
jmp
or
sbbl
xchg
mov
les
nop
and
or
inc
repnz
out
dec
cld
or
or
pop
pop
sahf
inc
sarl
shll
ds
xchg
test
add
push
mov
lock
cmpsl
and
or
adc
lds
insl
ja
push
mov
add
pop
mov
xor
pop
sbb
insl
aam
dec
fsubrs
test
in
aad
ficoml
into
and
adcl
dec
sbb
addr16
in
sub
idivl
inc
push
inc
dec
cmpsb
cs
clc
in
dec
cmp
adc
pop
push
adc
popl
pop
rclb
xchg
push
xor
imul
jg
pop
lea
push
nop
shll
sub
ja
call
xchg
xchg
add
xchg
xor
ja
mov
add
nop
add
scas
outsb
xchg
test
push
fcomi
mov
push
fistl
xchg
push
repz
divl
fistps
add
cld
cmp
je
cmpsb
inc
xlat
and
mov
add
stc
call
rclb
mov
add
stc
loopne
xor
xchg
fdivl
sbb
cld
fsubs
mov
pop
aam
cld
aam
or
das
shlb
or
int3
xchg
shrb
lret
or
je
cmp
imul
mov
rol
xor
inc
out
adc
push
and
mov
and
dec
pop
inc
in
push
enter
push
mov
xchg
xchg
outsl
es
repnz
add
js
xor
xor
lds
cmp
sbb
or
int3
aad
push
fmuls
adc
pop
mov
shrb
jmp
and
add
or
inc
and
jne
mov
pop
jb
hlt
hlt
xor
in
inc
xor
pop
in
call
leave
call
roll
xchg
bound
adc
loopne
nop
cmpsb
clc
loopne
fs
pop
add
sub
faddl
sbb
nop
fcomp
add
aam
in
cs
mov
faddp
cli
test
sub
pop
mul
mov
test
insb
jae
add
xor
fs
mov
xor
mov
pop
sbb
push
and
sub
xchg
lahf
popf
sbb
push
pop
sarb
or
outsl
adc
add
sahf
xor
dec
sub
xchg
push
loope
hlt
nop
dec
cmpsb
cmp
lcall
dec
xchg
push
addb
push
dec
mov
scas
movb
fldenv
popf
fs
xchg
inc
adcb
add
mov
nop
mov
pop
mov
and
jle
cmpb
mov
dec
call
xchg
lds
push
pushl
inc
push
mov
mov
aaa
nop
pop
aad
orb
jmp
push
dec
pusha
adc
and
jmp
sub
nop
jnp
movsl
jnp
add
cwtl
rcrb
inc
daa
sub
cli
xor
fdivrl
adcl
inc
sub
push
stc
add
outsl
or
xchg
fwait
mov
cmpsb
sbb
lock
sbb
loope
fcomps
les
repnz
loope
dec
cld
inc
add
add
imul
adc
dec
movsl
and
call
inc
xchg
call
scas
nop
call
and
and
cmp
shlb
mov
shl
sub
add
jmp
nop
fwait
pop
add
and
mov
imul
pop
and
arpl
lds
in
lock
sti
mov
popa
lock
sub
mov
push
cwtl
nop
test
lock
outsl
jecxz
push
mov
hlt
fidivl
cmpsl
sbb
call
imul
lea
in
inc
imul
jo
pop
push
dec
pop
outsl
fcomip
sahf
out
mov
push
dec
pop
leave
and
lea
push
mov
fdivl
dec
fsubrs
out
mov
aam
leave
push
jecxz
dec
shrb
enter
dec
int3
imul
enter
enter
enter
icebp
cmc
adc
rorb
add
add
bound
adc
adc
lods
sbb
pcmpgtd
pop
push
addr16
cld
xchg
or
mov
sbb
adc
add
sbb
mov
leave
adc
dec
jle
lea
mov
pop
push
daa
add
dec
mov
adc
loop
movsb
hlt
sub
push
or
pusha
adc
or
ss
mov
mov
add
std
xor
clc
mov
lock
aam
adc
sub
adc
inc
cs
xchg
mov
lock
lock
inc
adc
sbb
mov
test
lret
jg
ret
sbb
push
inc
sub
or
pop
dec
mov
icebp
mov
rclb
imul
pop
cwtl
mov
or
dec
and
lock
sarl
jge
outsl
pop
movsb
mov
and
sarl
adc
shrl
and
push
dec
fs
out
iret
lcall
push
jne
icebp
call
or
pop
leave
lock
in
or
push
in
mov
call
leave
call
loopne
out
mov
loopne
jne
pop
leave
loopne
fmull
enter
fadds
enter
aam
int
enter
testl
pop
cmp
mov
das
jo
or
flds
dec
cmpsb
enter
push
les
add
jo
fs
pop
repnz
push
mov
int3
clc
xor
push
popf
dec
pop
push
and
adc
mov
test
mov
mov
mov
sub
mov
leave
iret
test
mov
pop
or
scas
pop
add
inc
mov
imul
leave
sbb
sbb
add
sub
aas
shlb
fwait
push
push
lods
in
jb
in
cmp
imul
bound
rcrb
imul
bound
setns
imul
fdivrs
movsl
orps
pop
xchg
je
fistps
jbe
ret
add
and
push
loopne
lods
jo
nop
cmp
movsb
inc
sub
sbb
das
ds
xchg
cmpsb
push
mov
cwtl
mov
or
adc
movsb
push
and
clc
mov
mov
and
add
fsubs
mov
pop
pop
jmp
inc
enter
pop
movsl
lock
movsb
adc
lods
insb
inc
push
stos
mov
inc
aaa
cs
in
in
mov
scas
dec
add
jb
push
sub
repz
push
jbe
ret
or
pop
mov
push
push
pop
outsb
dec
mov
sub
push
movsb
incb
rorb
shrl
dec
fdivl
repz
shrl
dec
aam
add
or
add
ror
int3
leave
inc
addb
pop
enter
pop
aad
sub
adc
jmp
add
in
inc
idivb
jb
mov
icebp
sahf
outsl
imul
push
sub
test
adcb
adc
inc
imul
orb
and
les
mov
push
sub
mov
sub
rclb
test
push
es
cs
add
push
xchg
sbbb
and
ret
hlt
nop
and
ljmp
sub
and
pop
pop
cmp
xchg
and
dec
subb
inc
fmuls
dec
sub
add
and
xchg
scas
movsb
push
push
repnz
je
inc
xchg
xchg
loopne
pop
rcr
fimuls
test
push
arpl
xor
add
pop
adc
das
mov
push
fdivrl
xchg
dec
fdivrs
arpl
pop
insb
add
xor
addl
cmp
add
xor
rolb
ss
cltd
add
pop
mov
pop
adc
dec
imul
jns
orl
ja
adc
adc
sbb
pop
in
xor
sub
icebp
lret
in
adc
das
mov
out
xor
or
xchg
scas
adc
pop
lods
xchg
les
orl
sbb
xor
adc
lret
add
dec
insl
push
mov
jecxz
fs
mov
int3
mov
xor
mov
inc
das
fidivl
add
dec
push
mov
aad
or
xchg
aaa
add
movsb
sbbl
lock
nop
inc
push
mov
or
popa
rorb
jns
inc
ds
hlt
ret
or
add
das
test
or
mov
leave
jne
dec
pop
popa
adc
mov
add
subb
jge
jbe
xor
add
call
nop
jbe
test
and
or
pop
jno
stos
movsl
and
fsubl
pusha
in
inc
add
loopne
mov
sbbl
mov
hlt
and
mov
pop
xor
xor
ret
ljmp
adc
and
loope
loopne
test
je
or
mov
mov
sti
xchg
and
adc
es
jae
push
adc
and
rorb
les
xor
add
sub
loopne
mov
shlb
pop
push
push
xchg
cs
ror
push
pop
adc
xor
test
orl
xchg
xor
sub
loopne
clc
add
in
jns
mov
add
nop
sbb
or
inc
scas
mov
jl
sbbl
cmp
add
jp
and
pop
add
inc
or
in
mov
or
or
cmp
jp
jnp
add
rorb
pop
push
or
js
repnz
jmp
lods
jns
setb
push
repnz
jg
jge
jl
add
inc
lods
jle
or
out
and
clc
xor
mov
mov
push
sbb
xchg
mov
stc
xchg
xchg
test
mov
pop
xor
adc
adc
cmpsl
incl
adc
nop
es
repz
or
movsb
mov
arpl
xchg
push
sar
imul
insl
and
lahf
push
fdivrs
jne
add
rcl
loope
pop
push
sub
lock
rorb
insb
xchg
mov
pop
xchg
sar
lods
inc
mov
xor
jbe
xor
loopne
sti
cmp
pusha
dec
pop
pop
mov
push
jo
xchg
aam
fmul
movsl
mov
or
push
out
adc
add
jno
mov
adc
outsl
in
xchg
add
icebp
adc
adc
cmp
sub
daa
jg
push
fadds
or
ss
push
push
add
std
adc
add
es
dec
pop
and
enter
mov
ds
add
dec
push
sbb
clc
sbb
sbb
cltd
je
punpckhwd
mov
xchg
sub
sub
pushl
mov
adc
rcll
xchg
push
addb
push
jne
sbb
std
sub
or
in
mov
js
dec
dec
aam
movsl
jge
mov
or
fsubrl
sbb
adc
push
cmpsb
pop
jle
ret
sti
ret
sub
aad
stos
xor
sbb
pop
sbb
adc
jo
sbb
mov
add
add
ror
inc
hlt
hlt
mov
push
inc
push
xlat
cmp
inc
test
fdivrl
pop
adc
xchg
rolb
add
fmul
push
push
xorb
push
pop
mov
roll
enter
xor
xor
ret
fsts
dec
lods
add
xchg
loope
daa
push
mov
jns
mov
and
adc
gs
inc
in
push
shll
or
lds
cmpsb
out
jns
lea
pop
jo
ret
jge
adc
enter
jmp
iret
movsl
arpl
add
insl
cmpsl
xchg
jb
jmp
popa
sbb
jmp
sbb
or
daa
call
adc
xchg
mov
or
nop
xchg
xlat
test
lretw
fwait
rcrl
mov
test
test
push
xor
push
xor
adc
scas
push
inc
add
sub
cmpsl
add
adc
inc
stos
dec
and
pop
xor
filds
or
mov
addr16
mov
test
sub
fcmovne
inc
xchg
enter
addl
mov
push
loope
cwtl
xchg
add
test
sub
stos
ret
imul
push
pop
xor
in
enter
jnp
adc
jns
add
mov
paddq
push
lock
daa
out
sbb
mov
inc
mov
inc
cmovs
dec
sub
nop
xchg
sbb
std
jae
ret
pop
add
test
mov
or
ds
xor
adc
jbe
add
addb
rclb
shll
sbb
ret
les
loop
loopne
sub
lea
aas
jge
jo
sbb
lock
inc
cmpsb
sbb
jge
xchg
call
idivl
mov
add
jo
cmp
gs
add
jns
or
xor
jl
mov
dec
add
adc
inc
mov
imul
jp
test
filds
lock
push
divl
push
dec
mov
mov
xor
mov
and
mov
inc
sbb
add
nop
xchg
flds
cmp
nop
in
pushf
mov
adc
sbb
cmp
push
imulb
mov
or
test
add
mov
add
mov
xchg
fwait
jmp
push
push
xchg
cmp
and
cwtl
add
lods
push
jne
mov
mov
jne
ds
sbb
add
push
inc
shrl
and
xor
sbb
pop
mov
jle
in
jmp
sbb
push
add
inc
add
shll
mov
fmul
stos
or
mov
into
pop
xchg
stos
in
ret
into
and
inc
and
adc
cmp
mov
rcl
loopne
adc
push
mov
and
popa
xor
push
clc
jo
xorb
mov
lock
xchg
xor
pop
push
dec
cltd
xor
pop
and
dec
nop
std
subl
jp
cs
or
lods
inc
xchg
mov
dec
and
push
negb
push
mov
adc
fstl
shlb
cld
adc
pop
cltd
mov
cmp
jl
adc
ss
pop
aam
mul
je
jl
stos
xorb
int3
push
inc
fs
ficoml
sbb
and
push
push
dec
xor
sub
or
inc
lock
xchg
fstpt
sbb
jb
dec
add
mov
jne
pop
nop
xchg
xchg
dec
sub
adc
sub
aad
push
push
pusha
jne
or
popa
and
push
and
sbb
jae
add
cmp
popa
movlps
cmp
jg
sbb
sub
inc
inc
leave
imul
mov
sbb
cld
inc
mov
dec
adc
int3
xorl
aaa
movsb
clc
mov
insb
mov
andb
or
push
test
cs
or
lds
lret
ss
mov
cmpsl
and
or
test
daa
enter
mov
inc
int3
mov
fwait
and
test
mov
xchg
push
mov
stos
cmp
add
mov
jbe
lods
adc
cmp
xchg
and
imul
cmpsb
mov
insb
je
inc
jg
ja
push
sub
push
xchg
push
mov
sbb
insl
dec
add
push
inc
and
out
adc
aaa
sbb
mov
add
mov
jno
or
inc
push
jb
pop
das
adc
cmp
push
ss
orl
cmp
push
push
jl
inc
mov
or
xor
sbb
adc
add
inc
xchg
or
mov
push
stc
push
movsl
mov
lods
mov
or
push
cld
push
add
adc
jl
addr16
sbb
divl
les
inc
pusha
mov
sub
push
pusha
xor
lahf
pop
xor
xor
mov
cmp
xor
mov
ds
call
mov
ret
das
jmp
gs
insb
cmp
cmp
outsl
adc
mov
addb
push
mov
add
fwait
pop
test
add
ljmp
xchg
mov
sbb
mov
mulb
pusha
xchg
jp
loope
fstps
ffreep
scas
pop
sub
xchg
mov
roll
pop
adc
mov
outsb
adc
or
int
push
stos
pop
adc
lods
mov
sub
inc
fucomi
mov
inc
inc
aas
mov
pop
sub
mov
mov
popl
mov
fwait
push
loope
mov
inc
leave
add
mov
jp
adc
ds
int
and
adc
pop
sbb
in
test
nop
inc
orl
ret
aaa
mov
push
xor
popl
outsl
je
cmp
add
insl
mov
dec
mov
insb
arpl
nop
pop
ret
out
mov
sbb
mov
adc
popa
inc
adc
push
xlat
cmpsl
ds
pusha
xchg
mov
dec
and
cmpl
test
or
adc
fwait
aaa
adc
in
push
mov
inc
mov
les
sbb
mov
mull
mov
das
add
add
mov
cli
push
lret
jmp
pop
hlt
cld
adc
nop
dec
cld
or
push
negl
jno
fs
or
jle
andb
fildl
and
in
es
jb
push
cmp
jne
pop
pusha
dec
mov
rclb
xor
xor
inc
push
adc
das
inc
xchg
and
nop
cs
out
sub
loope
sub
test
adc
pop
sub
rcrl
jnp
and
rorb
ret
sub
sub
dec
xchg
xchg
and
xchg
jno
repnz
push
popa
pusha
mov
scas
test
mov
fildl
push
xchg
imul
scas
insl
and
dec
dec
pop
std
je
xor
mov
pop
sub
mov
shlb
and
push
imul
mov
and
cwtl
into
roll
fstpt
rorl
sub
push
add
cs
pusha
inc
add
clts
dec
dec
mov
btr
mov
mov
dec
push
scas
push
push
sub
sub
sub
add
repnz
notb
cs
xor
cmp
jae
sub
mov
xor
mov
decl
dec
pop
ss
cs
jbe
xor
xor
repnz
stos
das
loope
or
pop
fadds
daa
lret
cmp
sub
xor
aaa
jg
jo
testl
or
sbb
movsl
push
inc
adc
mov
xor
xor
sub
and
addl
jb
data16
cmpb
dec
dec
jnp
ljmp
xchg
inc
push
dec
inc
dec
push
or
or
sarl
xor
dec
call
mov
or
xchg
sbb
push
sub
cmp
aaa
xor
lahf
xor
xlat
in
pop
jb
inc
addr16
out
imul
or
push
xchg
mov
and
sbb
push
jb
inc
inc
outsb
cmp
daa
xchg
mov
and
ja
hlt
inc
inc
jg
mov
add
push
jg
and
inc
inc
dec
dec
cmp
pushl
xor
movsl
cmp
or
fwait
clc
andb
pop
cmp
pop
ret
pop
inc
mov
shlb
pop
idiv
inc
dec
aam
push
push
inc
dec
icebp
mov
ja
mov
add
inc
xor
or
add
push
xchg
inc
cs
xor
and
iret
rcll
lahf
dec
push
pop
inc
pop
xor
addr16
outsb
or
xor
push
das
or
xlat
imul
sbb
fisttps
repnz
int
or
movsl
fisubrl
xor
daa
iret
and
cmp
inc
pop
mov
jns
or
cmp
push
nop
out
shrl
daa
subps
cwtl
sub
add
ss
pusha
movl
lahf
mov
cmpsl
xor
int
loop
add
outsb
popa
pop
adc
roll
fsubrp
aaa
and
sub
lods
stos
xlat
orps
jb
xchg
bound
mov
add
fcmovu
push
in
lahf
ja
push
mov
pop
push
xor
lcall
leave
mov
xchg
push
sub
mov
in
push
and
lret
lahf
xchg
xchg
sub
inc
push
aaa
dec
jae
andnps
aaa
push
jo
outsb
or
imul
jb
fiaddl
adc
inc
pop
dec
pop
xchg
mov
or
outsb
sub
push
jo
cmpsl
cmp
bound
sub
dec
ss
xor
jns
test
gs
pop
roll
bound
mov
das
xor
and
outsl
dec
inc
pop
pop
and
or
notb
inc
push
xor
dec
neg
jg
push
jb
aaa
call
xor
ret
cmp
outsb
xor
xchg
xchg
inc
xor
push
inc
jns
push
in
push
pop
ss
cmp
xor
arpl
bound
mov
pop
xchg
mov
pop
push
pop
mov
add
xchg
out
pop
and
in
mov
push
outsl
sub
leave
xchg
push
sub
movsl
loop
fildll
xor
rol
lock
das
xchg
ljmp
into
inc
and
stos
sbb
xor
xor
arpl
cmp
xor
inc
pop
xor
inc
lcall
cmp
push
xchg
inc
repnz
dec
bound
aas
pop
addr16
fwait
add
and
push
or
jnp
inc
or
iret
cmpsb
subb
push
mov
pop
mov
inc
pop
add
mov
pop
mov
inc
pop
les
mov
ja
outsb
sub
int3
push
aas
adc
ficomps
cmp
pop
xor
xor
ja
pop
xor
nop
mov
xor
mov
cmp
xchg
pushf
inc
push
data16
push
jne
in
cmp
movsl
inc
dec
js
outsl
or
pop
insb
xchg
aaa
jo
mov
iret
and
push
bound
incl
xor
jo
loope
xor
dec
push
rorl
xor
xchg
push
xor
loop
dec
pushl
add
aaa
sbb
push
mov
aaa
cmp
andb
inc
test
dec
jne
sbb
popa
jb
das
cmp
aaa
pop
add
mov
daa
ja
xorb
cmp
lahf
push
or
aam
cmp
cmp
cmp
xor
loopne
add
xor
ss
mov
shlb
aaa
cmp
pop
inc
cmp
inc
mov
and
adc
and
lods
jg
iret
inc
sarl
arpl
daa
cmpb
xchg
aas
mov
inc
sti
push
jg
dec
inc
push
sub
fidivl
xor
cmp
testl
subl
mov
aad
xlat
adc
add
mov
and
or
add
ficoms
jb
mov
dec
iret
xor
adc
xlat
xor
inc
cmpsl
inc
out
cmp
movsb
xlat
ss
pop
cmp
nop
ss
insl
push
lds
shrl
mov
insl
dec
xor
xor
cmpsl
cmp
inc
push
inc
pop
push
xor
stc
movsb
out
push
push
dec
push
push
outsl
and
sub
stos
shlb
scas
nop
daa
cli
aaa
decl
push
testl
xor
push
repnz
cmp
sbb
dec
cmpsb
xorb
inc
xor
xor
and
or
xor
push
call
cs
and
mov
outsl
jno
and
jg
mov
daa
add
xor
jnp
xchg
lret
xor
cmp
xor
sub
inc
xor
pop
pushf
inc
scas
fs
xor
xchg
pop
enter
xor
xor
inc
outsl
inc
inc
dec
inc
xor
push
push
or
and
xchg
fwait
add
in
pop
xor
xor
xor
mov
pop
inc
out
popa
aaa
jo
loop
adc
pop
mov
mov
xor
fdivs
xorb
divl
or
mov
xor
xor
scas
in
pushf
adc
xor
out
adc
push
and
xor
push
xor
inc
ss
and
aaa
jg
mov
mov
mov
sub
out
inc
daa
push
cmpb
push
sbb
adc
orl
das
aaa
mov
pop
and
insb
ss
xchg
leave
aam
orl
pop
aaa
ss
push
dec
push
pop
cmp
cmp
daa
add
pop
fistps
cmp
shll
pusha
subb
sub
cmp
push
cmp
scas
mov
pop
pop
cmp
or
dec
cmp
cmp
push
pop
cmp
push
ja
stos
bound
dec
xor
cmp
mov
mov
cmp
pusha
cmp
xor
cmp
popf
test
and
lahf
mov
fisttps
push
pop
dec
cs
xor
xor
pop
or
push
or
in
mov
push
pop
jns
out
cmp
cltd
cmp
sahf
push
push
mov
in
out
and
xor
xor
or
push
cmp
mov
inc
jg
into
inc
adc
and
xor
xor
cmp
xor
cmp
adc
xor
push
push
notl
xor
inc
adc
push
jb
stos
push
pop
inc
lods
shrb
push
das
adc
insl
popa
arpl
sbb
push
rcl
lcall
lods
mulb
dec
pop
ja
test
test
xchg
dec
enter
xor
and
pusha
adc
je
divb
ja
daa
lock
inc
inc
dec
push
push
sbb
dec
daa
iret
lods
add
outsb
mov
or
cmp
add
jne
cmpsb
sub
mov
dec
inc
jg
mov
jbe
pop
xor
imul
inc
in
fisubrl
cld
xor
ss
aaa
xor
in
cli
lods
das
sub
push
xor
cmp
loop
add
pop
and
jbe
xchg
xchg
xchg
dec
lods
sub
mov
pop
sub
lcall
sbbl
cmp
ss
bound
scas
xchg
inc
push
pop
ss
sbb
lahf
aaa
and
fbstp
imul
mov
shrb
cmp
test
mov
lods
push
iret
lods
loop
xor
push
jb
les
divl
into
and
push
js
xchg
andb
cs
imul
jmp
aaa
jne
sub
cmp
enter
sub
int3
push
cmp
xchg
addr16
pop
mov
popa
insb
popw
dec
sbb
shll
movsb
inc
add
push
pop
ret
cmovnp
scas
and
mov
push
cmp
and
push
aam
arpl
push
mov
xchg
push
xor
inc
inc
sub
popa
and
mov
sbb
out
cmp
das
push
orb
aas
and
or
aas
sbb
push
push
aas
or
je
sbb
push
inc
dec
movsl
xor
xor
xor
scas
bound
push
sub
sub
das
arpl
cmp
insb
and
and
pop
add
daa
adc
aam
xlat
inc
rorb
dec
add
pushf
dec
dec
push
dec
cmp
cmp
aaa
xor
sbb
shrl
mov
and
xor
jae
inc
xchg
or
popl
and
pop
mov
and
inc
xor
push
andb
das
leave
aam
rclb
xor
sbb
lahf
cmp
imul
out
jb
cmp
sbb
scas
imul
xor
or
sub
xor
push
mov
in
xor
gs
mov
xor
xchg
cmp
es
or
xor
jns
sbb
pop
in
fstl
invd
es
das
data16
enter
aaa
xor
sbb
xchg
or
and
push
xchg
xor
in
push
jb
das
addr16
xchg
pop
enter
xor
add
mov
sbb
lcall
sbb
ss
or
push
inc
cmp
push
mov
push
xor
xor
jns
arpl
xchg
mov
test
jo
aaa
or
insb
je
outsb
and
or
repnz
sbb
dec
mov
es
jne
xor
gs
inc
xor
add
xor
rcll
orl
mov
aaa
and
xchg
add
aaa
fldl
xchg
sbb
xor
adc
aaa
sub
mov
lahf
lahf
ss
enter
adc
mov
adc
enter
wrmsr
and
xor
mov
xor
mov
sbb
add
or
sbb
js
pop
sbb
sbb
push
cmp
cmp
cmp
mov
aaa
leave
pop
enter
outsl
arpl
fisttpll
jns
test
add
xor
pop
imul
pop
cmp
jno
sbb
pcmpgtb
test
aaa
cmp
sbb
pop
inc
push
xchg
cmp
xor
sbb
mov
addr16
xor
fildll
jg
add
jg
inc
xor
outsb
and
notb
xor
sbb
fiaddl
adc
or
pop
adc
mov
push
lock
and
popf
addr16
push
xor
outsl
push
cmp
xor
push
pop
pop
insb
and
out
pop
movsl
pusha
test
lods
sbb
fldt
pop
xor
mov
into
mov
xor
pop
add
pop
pop
lods
mov
pop
inc
dec
and
fwait
stos
mov
stos
mov
aad
pop
mov
in
or
dec
in
pop
leave
dec
push
dec
push
push
xchg
pushf
xchg
add
push
sbb
mov
daa
and
inc
push
outsb
and
push
dec
sub
push
push
jbe
dec
pusha
push
dec
sub
mov
xchg
mov
xor
cmp
dec
dec
inc
dec
dec
dec
xchg
scas
dec
outsb
jl
mov
add
insl
imul
mov
sbb
js
stc
mov
push
dec
push
push
and
cmpsl
sarb
dec
dec
cmp
xchg
shrb
push
pop
dec
sub
xor
or
push
sub
fisttpl
sub
pop
dec
fists
aaa
lods
mov
jno
push
sub
and
lods
in
mov
xor
mov
xchg
pop
outsl
and
adc
add
inc
cmp
xor
jl
in
movsl
sub
pusha
cmpsl
xchg
xor
aaa
push
cmpsl
and
inc
xchg
xor
adc
js
sbbb
jae
inc
xor
scas
ss
aaa
outsb
outsl
fbstp
xchg
and
inc
xor
in
add
sbb
imul
add
fbstp
nop
int
or
cmp
and
inc
es
xchg
xor
and
enter
cltd
inc
sahf
inc
bound
aaa
sbb
lahf
fs
sbb
jb
aaa
cmp
xchg
add
cmp
add
pop
sbb
mov
leave
add
cmp
ss
nop
imul
add
xor
inc
push
inc
test
add
mov
and
es
lods
aas
xchg
mov
stos
add
enter
push
pop
or
push
push
xchg
jnp
insl
and
xor
xor
pushf
xchg
xor
xor
mov
xor
dec
sub
outsb
adc
pop
insl
stos
divl
daa
xor
loopne,pn
lahf
cmp
pop
xor
lods
sub
mov
shr
cmpsl
arpl
cmpsb
or
cmp
mov
scas
xor
rol
das
add
dec
jle
subb
mov
sub
sbbb
push
mov
lcall
aaa
test
roll
xor
xchg
sub
aaa
sub
mov
lods
dec
popa
outsb
push
and
push
sbb
sbb
mov
loopne
pop
rcrb
sbbb
cmp
data16
data16
popa
xor
mov
xchg
push
or
insl
je
cmpsl
sub
repz
inc
imul
mov
aaa
hlt
orb
incl
adc
jns
push
insb
bound
addr16
sub
jmp
imul
test
ss
push
das
adc
in
push
js
mov
adc
rcr
add
mov
leave
adc
or
xor
and
in
xor
xor
sbb
sub
pop
mov
xor
inc
inc
pop
popa
fidivrl
and
leave
xor
sbb
mov
add
jg
pop
xor
rorl
and
insb
push
je
jb
sub
ret
daa
inc
cmpsb
test
call
pusha
lea
sbb
mov
out
sub
dec
adc
dec
popa
aas
inc
mov
push
inc
inc
xlat
filds
jp
fildll
lret
aas
mov
or
push
test
ds
mov
jnp
push
xchg
push
jns
bound
mov
pop
pop
push
sub
xlat
dec
dec
rcll
push
daa
cmp
lods
dec
xlat
sub
push
insb
in
inc
mov
sub
in
sub
push
imul
inc
sub
lahf
dec
popa
je
cmp
loop
leave
mov
mov
pop
fs
inc
arpl
dec
aaa
cltd
lods
les
sub
and
push
sub
inc
jo
mov
bound
je
call
sub
xor
mov
sub
jne
fstps
in
mov
mov
xchg
sbb
in
insl
dec
xor
xor
nop
or
xor
in
mov
cs
ss
mov
push
cld
xor
push
cmp
aaa
inc
mov
aad
cmp
insb
movsb
pop
add
sbb
sub
rolb
xchg
das
lock
ljmp
orb
add
in
add
imul
test
cmp
jmp
rolb
add
enter
or
fmul
xchg
or
repnz
inc
fwait
and
xor
mov
jg
xchg
movb
push
loop
jecxz
mov
mov
in
icebp
fildll
jno
jne
jg
sahf
mov
mov
push
mov
mov
inc
sub
mov
add
mov
dec
addr16
or
jmp
xlat
cmp
jne
cmpb
add
pop
add
int
jo
add
dec
xor
in
mov
dec
jae
lock
fdivs
adc
mov
in
jns
cmp
int
cmp
sbbl
int3
dec
push
std
mov
cmc
adc
pop
jecxz
pop
jmp
imul
andl
mov
push
mov
xchg
shrb
loopne
jne
pop
add
xchg
jne
jle
cld
fmuls
sub
xor
iret
sub
rol
lds
adc
in
and
cmpb
cmp
xchg
enter
rorl
xchg
jg
mov
or
or
ss
xchg
add
icebp
and
push
int3
ja
outsl
adc
test
cmp
mov
loopne
push
shrb
jo
popa
rclb
fld
mov
andl
jl
les
xchg
add
push
fiaddl
clc
dec
mov
and
xchg
dec
add
test
clc
xor
xor
xor
fisubl
pop
and
shlb
xchg
mov
add
inc
sbb
test
or
inc
notb
fidivs
mulb
xchg
dec
ja
push
fwait
clc
out
add
jp
aad
inc
sub
adc
inc
mov
mov
dec
aaa
add
or
fcoml
fst
filds
add
xchg
call
loopne
dec
push
rolb
or
pop
scas
mov
in
popa
repnz
jb
cltd
and
push
out
pop
sub
pop
rcr
sub
aam
add
adc
dec
aam
lock
xor
inc
rolb
push
or
mov
shlb
lock
sbb
add
orl
cmp
sarl
loopne
call
dec
jle
daa
stos
int3
or
roll
psubusw
pusha
int
sub
cmp
ret
test
pusha
mov
adc
lret
or
pop
pop
jmp
adc
add
insb
pop
jb
pop
test
sub
inc
in
or
inc
jne
inc
push
dec
lahf
push
adc
stos
mov
push
jae
out
les
mov
test
insb
dec
scas
mov
insb
notb
scas
xor
sub
lock
fwait
dec
adc
dec
orl
shrb
rcr
imul
into
insl
mov
leave
xchg
sub
sbb
push
daa
mov
xor
sub
xor
sub
and
mov
mov
mov
addr16
mov
mov
lods
pop
fcmovbe
lods
repz
sub
iret
jecxz
jae
dec
loopne
add
rorb
mov
pop
push
mov
cmp
and
inc
cmc
xor
fdivrl
test
imul
pusha
aad
mov
fists
fildll
ljmp
and
sub
aad
push
rdmsr
adc
adc
lods
leave
or
inc
cmp
xor
inc
jo
or
daa
cltd
cltd
push
ret
repnz
lock
xchg
pop
repnz
ljmp
add
popf
mov
xchg
lea
loop
wrmsr
popa
pusha
jge
clc
arpl
and
or
mov
adc
sub
dec
xchg
or
adc
sub
inc
test
gs
and
test
sti
mov
adc
pop
fwait
add
xor
jg
pop
add
test
hlt
xchg
test
add
pop
add
add
lds
cmp
pop
inc
sub
daa
or
sbb
ret
pop
xchg
adc
rorl
dec
and
sbb
xor
mov
movsb
movsbl
in
mov
mov
lock
pop
hlt
mov
mov
inc
pop
dec
pop
stos
es
dec
push
lods
in
jg
loop
and
jns
notl
dec
dec
nop
xchg
push
inc
inc
inc
dec
push
sbb
dec
inc
push
addr16
nop
mov
sub
into
jecxz
jecxz
nopl
repnz
in
fdivrs
in
cmp
enter
in
in
in
dec
mov
in
in
mov
sub
and
jnp
inc
inc
das
dec
inc
push
inc
push
push
mov
movsb
pop
pop
ja
push
dec
nop
xchg
scas
push
inc
inc
push
popa
inc
push
repnz
push
dec
push
and
xor
in
call
stos
adc
in
xor
and
xchg
aad
xchg
inc
sub
insl
jl
add
and
fwait
mov
add
or
inc
sub
sbb
rolb
stos
insb
or
mov
and
clc
sahf
adc
pop
pusha
push
jo
pop
lock
mov
loopne
adc
fnstsw
fchs
dec
xor
loopne
jae
out
in
and
inc
mov
xor
leave
pop
movsb
out
or
push
cmp
lret
jmp
xchg
pop
lret
test
setl
jle
pop
mov
inc
aam
rcr
adcl
mov
popf
std
pop
add
push
sbb
loope
xchg
jnp
cmp
orl
fsubl
pop
dec
ds
cs
out
inc
mov
or
lahf
xchg
xchg
inc
out
sub
xchg
sbb
pop
movsl
imul
push
add
push
fadds
cmp
jno
add
mov
addr16
out
ja
sub
dec
ss
mov
and
fs
push
jno
repnz
ljmp
add
cmp
lods
mov
sbb
fwait
scas
push
xchg
imul
hlt
rcll
movsb
test
xor
and
mov
mov
sbb
jmp
and
rorl
dec
test
pop
bound
mov
repz
mov
inc
insl
ja
mov
popa
das
lock
setge
adc
inc
sbb
test
lret
push
inc
sarb
mov
aaa
insb
lds
movsl
xor
xor
xlat
pop
cmc
inc
jns
loop
push
fidivl
fimuls
dec
mov
cmp
and
imul
pop
sbb
and
add
mov
outsb
sub
mov
push
scas
jno
rcrl
pusha
add
fsubs
jmp
dec
dec
xchg
mov
inc
push
fdivrs
push
jmp
push
add
test
adc
adc
jo
aam
add
mov
rcl
sahf
pop
and
jmp
push
int3
mov
adc
rcrb
clc
sub
xchg
and
inc
push
enter
sbb
sbb
and
add
repz
jmp
sub
cwtl
add
fadd
stos
add
sarb
jmp
fstl
mov
or
add
andb
xchg
mov
inc
test
movsb
adc
push
jno
cmp
jmp
xor
iret
xor
mov
cmp
xchg
xor
and
push
or
into
jns
or
jmp
and
or
clc
push
push
dec
repz
fwait
shlb
out
in
in
int3
test
mov
inc
xchg
and
or
negl
pop
mov
rcr
lahf
cli
outsl
lret
repnz
ja
push
dec
adc
push
cltd
adc
push
aaa
or
push
dec
push
rcll
lock
pop
jne
xor
xchg
das
inc
pop
fisubl
xchg
subl
mov
jp
cmpb
add
dec
repnz
fists
push
adc
rorl
sti
push
cmp
mov
leave
leave
leave
dec
or
adc
leave
leave
leave
sbb
and
dec
pop
mov
movb
push
pop
xor
mov
or
je
lcall
lcall
sbb
or
push
jns
repnz
int
mov
ss
adc
ds
xor
push
push
mov
in
jle
sub
mov
xchg
leave
inc
lock
jp
mov
imul
xchg
movsb
sbb
xchg
movsb
scas
cwtl
lock
nop
ja
ds
imul
and
nop
push
xchg
into
ljmp
test
inc
xchg
stos
xor
call
pushf
mov
rcr
cmp
add
ret
sub
adc
dec
shlb
pop
icebp
cmpsb
jnp
xchg
or
dec
movl
cmp
fsubrl
pop
fdivrs
or
adc
addr16
and
shl
sub
fsubl
loope
aaa
lds
xchg
inc
inc
adc
pop
dec
push
inc
aaa
sub
and
and
fcomp
sbb
or
les
repnz
mov
mov
add
das
das
xchg
dec
sub
inc
pop
cmp
cs
addb
and
rep
add
pop
pushf
movl
inc
add
out
xor
sbbl
jo
pusha
sahf
incl
jl
inc
inc
sub
pop
ss
testb
mov
loopne
out
f2xm1
loopne,pn
cwtl
mov
mov
fiaddl
leave
outsb
mov
inc
xchg
cmpsb
push
test
dec
pop
push
rolb
rcrb
or
cmpsb
xchg
sub
mov
aaa
jecxz
les
outsb
bound
sbb
sete
add
or
sub
and
pop
add
or
sti
push
int3
cmc
rcr
push
and
leave
add
adc
pop
pushf
in
inc
ja
pusha
out
in
pop
or
add
dec
inc
mov
rcll
data16
cmp
loope
addb
lock
pushl
lea
sbb
cs
sbb
lock
xchg
mov
mov
jno
in
pusha
cltd
mov
and
imulb
adc
and
add
xor
add
sbb
push
push
cmp
jns
negb
cmpsb
int
jge
shl
adc
xor
xor
in
push
xchg
cmp
lahf
fs
aaa
insb
sbb
cld
push
and
stos
dec
add
push
push
inc
xchg
dec
inc
add
inc
and
ss
gs
fs
bound
pop
and
xchg
sub
add
in
das
out
cmp
inc
cmp
push
cmp
xchg
xchg
jo
dec
adc
nop
test
lahf
pop
cs
pop
daa
sub
adcl
and
fidivl
inc
cmp
dec
sub
cmp
ds
popa
xchg
inc
clc
sbb
xor
clc
inc
movsl
imul
sub
jno
cmpsl
dec
push
out
mov
adc
daa
push
sub
les
andb
jg
ljmp
xchg
sbb
jmp
or
sub
andl
mov
mov
int
pop
push
clc
in
pop
add
stc
inc
xor
push
fdivs
mov
pop
mov
hlt
mov
push
imul
inc
cltd
jbe
fs
xchg
push
in
add
inc
push
pusha
jg
xchg
pop
leave
and
stc
call
dec
push
pop
add
pop
ret
mov
sub
mov
cmp
lods
fsubl
call
lea
jmp
sbb
hlt
xor
mov
movl
ja
and
jecxz
fs
xor
cli
mov
mov
in
or
sub
or
sub
mov
pop
sbbl
cltd
sti
lret
incl
aad
dec
cmpb
sbb
mov
movsl
insb
push
lods
loopne
mov
push
cmp
mov
mov
and
fld
jmp
dec
jg
in
cmp
lods
xor
push
push
aaa
mov
daa
dec
and
adc
loopew
dec
adc
sahf
fisubl
mov
pop
in
std
divb
add
sub
jo
xlat
pop
cltd
ret
push
movsb
into
pop
jnp
mov
mov
xchg
cld
mov
mov
stc
fwait
inc
mov
cwtl
push
aad
outsl
or
and
xchg
xor
mov
das
mov
icebp
mov
sbb
fldl
or
sbb
sbb
mov
sbb
mov
xchg
fs
dec
mov
lret
push
add
ljmp
outsl
or
fcoml
nop
ret
insl
mov
dec
and
or
cmp
xlat
outsl
fstl
or
push
sub
sub
decl
push
pushl
pop
mov
jecxz
aas
call
call
rcll
jmp
inc
test
fistps
lods
or
addl
lcall
lock
add
pop
sub
jb
ljmp
xorb
cmp
incl
add
and
insb
push
push
add
jne
inc
and
push
pop
enter
in
push
push
dec
dec
pop
inc
ja,pt
gs
and
push
xor
popa
dec
orb
rorl
rcrl
add
pop
add
pop
xor
int3
jno
sar
sub
sbb
xchg
add
cld
pop
popl
and
pop
faddp
scas
pop
dec
push
add
push
cmp
adcb
clc
push
hlt
dec
lret
push
icebp
xor
pop
pop
imul
das
pop
sub
and
mov
pop
sub
push
and
mov
jo
sahf
roll
out
scas
pop
xchg
out
test
dec
jg
outsb
in
push
jo
add
mov
popa
repnz
sub
dec
rcrl
xor
shll
xor
pop
sub
mov
add
nop
cmpsl
mov
add
mov
fsubs
clc
dec
adc
push
jle
dec
inc
popa
jo
daa
sbb
push
mov
and
dec
cmp
pop
and
xchg
cmp
add
test
push
sub
mov
scas
xor
mov
add
pop
or
cwtl
xor
mov
jg
gs
dec
mov
sbb
fisttps
cmpsb
fucomi
pop
cltd
adc
in
nop
dec
mov
loopne
das
cmpsb
xor
aaa
rorb
and
or
popa
jecxz
add
adcb
stos
sub
pop
and
sbb
inc
popa
add
clc
add
popa
pop
movsb
jno
push
inc
or
ss
in
bound
push
and
push
andl
jo
push
mov
sbb
pop
and
mov
addl
call
add
bound
add
sub
fcmovbe
and
lock
mov
in
pop
icebp
add
xchg
or
insb
push
mov
and
mov
and
in
shl
cs
icebp
dec
cmp
push
pop
pop
scas
in
loop
or
xor
push
repz
mov
sub
mov
xorb
xchg
test
divl
loop
sub
xor
or
cmp
pop
push
push
adc
shlb
nop
sbb
add
or
xchg
repz
inc
jecxz
rep
orl
hlt
jg
das
and
jne
in
mov
lret
xchg
sub
cmp
push
and
jne
push
loope
sbb
nop
aad
in
mov
sbb
push
cmpsb
xor
mov
dec
add
rorb
popa
aad
leave
ret
dec
add
or
adc
jp
mov
or
pop
cmpl
or
movsl
fs
daa
or
dec
push
or
clc
sbb
dec
shll
add
imul
add
imul
push
mov
push
or
mov
add
xlat
pusha
cmp
nop
or
andl
inc
add
sahf
xchg
mull
add
cmp
lea
in
jle
mov
orb
and
mov
add
pop
cmpsb
or
bound
fs
mov
in
mov
or
cli
sub
icebp
loop
rolb
adc
mov
and
or
js
mov
and
sub
mov
rolb
call
in
inc
adc
out
es
outsl
in
xchg
sub
jo
ret
dec
push
out
and
sub
pop
out
lcall
or
pop
lea
push
sahf
loope
dec
fildl
xor
push
dec
ss
fildll
out
mov
push
arpl
or
mov
fsubs
lret
addl
inc
shlb
shrb
sub
shrb
mov
in
xchg
movsl
inc
sbb
sub
lods
cwtl
aas
ret
nop
push
in
adc
stos
nop
mov
xor
in
add
adc
inc
jb
out
and
das
sbb
call
call
dec
xor
add
add
mov
or
and
adc
pop
lods
xor
adc
les
test
pop
xadd
test
mov
movl
in
push
test
push
imul
sbb
sysenter
sbb
push
jne
sub
xchg
in
aaa
test
out
cmp
addr16
addl
inc
dec
or
mov
jnp
addr16
and
and
ret
add
lcall
bound
out
inc
icebp
outsl
and
aaa
lock
add
sub
data16
xchg
lahf
and
inc
dec
orl
outsb
outsl
mov
rcll
xchg
or
or
sbb
das
inc
xchg
xchg
pop
mov
sbb
out
movsb
add
adc
lret
orl
adc
or
mov
dec
or
pop
pop
dec
movsb
push
mov
dec
inc
into
jne
enter
scas
inc
sub
xchg
push
arpl
mov
addr16
insl
bound
jb
je
jbe
js
jp
or
movsl
popa
dec
sub
xlat
pusha
push
mov
lahf
out
adc
xor
add
jb
mov
adc
mov
xor
pusha
test
scas
aam
and
jg
dec
adc
es
hlt
adc
insb
icebp
mov
out
cs
insb
cmp
loopne
in
testl
xor
and
hlt
xchg
sbb
push
adc
push
inc
add
stos
adc
out
jg
fisttpll
cmp
dec
add
sbb
jle
push
push
mov
sbb
xchg
lahf
inc
push
int3
lods
push
mov
inc
jo
jg
push
mov
cmpl
andb
and
push
mov
xchg
aad
push
out
xchg
jl
xchg
or
push
adc
add
ds
jmp
push
leave
and
nop
inc
push
sub
push
je
scas
mov
mov
dec
inc
mov
or
xor
or
xchg
pop
and
adc
pop
add
enter
add
rorl
insl
mov
pop
sbb
pop
inc
push
adc
icebp
xorb
dec
pop
and
xor
nop
mov
lahf
sbb
or
sarl
nop
and
sbb
push
ljmp
out
lcall
mov
movsl
pop
out
add
addl
mov
ss
rorb
jo
test
iret
mov
cmc
inc
call
sbb
pop
adc
ret
test
lcall
lret
sahf
or
mov
mov
mov
inc
sbb
inc
adc
hlt
mov
daa
lret
xchg
cmpl
dec
or
or
testl
je
or
movsb
mov
jo
int3
push
rol
xor
cmp
lret
leave
mov
loopne
enter
xchg
insb
inc
add
push
popl
aas
or
inc
mov
pop
add
xor
das
lahf
pusha
orb
pushf
aas
ljmp
mov
and
lret
jle
push
or
adc
sbb
imul
sbb
sub
imul
push
inc
or
push
add
pop
iret
or
push
adc
arpl
pop
adc
pop
cs
test
jne
movsb
mov
insl
mov
jmp
pop
or
in
xor
and
sbb
movsb
sbb
add
imul
leave
push
add
pop
loop
mov
call
xor
pop
popa
pusha
lret
pop
sub
push
cmp
mov
iret
and
es
fwait
xor
push
adc
mov
sti
call
add
test
inc
and
movsb
ret
cwtl
and
xchg
add
pop
add
lea
ret
addr16
push
mov
mov
cmp
push
test
mov
stc
mov
sbb
shlb
jmp
scas
add
xchg
ja
sbb
outsb
inc
dec
dec
xor
mov
push
add
cmpsl
inc
sbb
mov
fucom
sbb
int3
pop
mov
stos
fcom
adc
fcomps
dec
aaa
push
or
addb
xorb
out
cmp
and
scas
pop
es
pop
pop
xor
lahf
inc
push
sahf
or
xor
addr16
push
stc
in
jb
dec
xor
mov
iret
jp
fnclex
adc
movnti
ja
push
les
lahf
jns
sub
dec
pop
aas
subb
imul
in
and
jmp
clc
dec
adc
inc
sub
inc
adc
push
pushf
cmpsb
adc
or
inc
fs
adc
cld
sbb
aas
add
jbe
outsl
dec
lods
shl
imul
pop
sub
aaa
sub
push
cmpb
xchg
xor
repnz
cmp
sbb
lock
fs
out
cmp
les
es
bound
das
push
fbld
sub
add
mov
adc
idivl
pop
rcrb
inc
cmovp
sbb
sub
sub
sub
sub
push
dec
movb
adc
lea
xor
push
mov
rorb
imul
pop
dec
popf
aaa
adc
add
lea
pop
pop
jl
or
pop
dec
xor
test
movsb
sub
add
hlt
sub
sbb
push
cmp
xor
inc
orl
add
lds
nop
pop
andb
stos
add
and
xor
add
and
xor
fisubl
pop
and
mov
add
enter
add
ret
dec
push
xor
sbb
dec
and
lret
pop
loope
mov
pop
or
lods
fs
mov
adc
insb
adc
dec
mov
call
xchg
push
dec
push
sub
sub
push
cmp
aaa
fnstcw
insb
inc
add
and
and
push
push
sbb
sbb
xor
or
add
cs
pop
xlat
sbb
pop
xorb
sbbb
mov
push
jge
or
pop
pop
mov
pop
or
pop
ss
sti
mulb
mov
cli
clc
and
adc
push
stos
sub
push
sub
mov
sub
bound
pushf
call
jl
or
inc
jge
push
xor
xor
mov
jmp
stos
mov
inc
add
xor
xor
dec
and
xor
dec
sbb
push
sti
das
scas
or
cld
xor
inc
or
pop
dec
mov
pop
div
push
and
ja
imul
loope
jbe
aam
adc
jmp
cmp
cmp
pusha
jbe
sbb
rorl
gs
hlt
imul
enter
sbb
test
pop
and
ret
nop
mov
movsl
sub
in
lret
shrl
jmp
adc
idiv
jae
push
in
push
pop
push
push
lods
pop
pop
testl
mov
push
add
ja
dec
std
cmp
adc
mov
lods
js
jne
and
pop
inc
xchg
sbb
fmuls
mov
clc
jle
adc
nop
hlt
insb
sbb
sti
push
push
mov
jns
test
pop
dec
mov
inc
or
popf
mov
gs
lret
nop
sbb
daa
loopne
jae
arpl
and
add
and
dec
enter
cmpb
add
jp
ja
mov
movsl
sub
push
test
and
inc
sbb
adc
out
mov
inc
dec
or
outsl
cmc
mov
or
or
inc
cs
clc
mov
add
adc
mov
dec
mov
mov
cli
mov
xchg
sub
fists
push
push
mov
notl
pop
push
dec
push
inc
push
inc
dec
dec
inc
dec
dec
push
adcb
inc
inc
push
ds
stos
xor
inc
daa
mov
call
inc
ljmp
cmpsb
or
dec
jnp
mov
jge
push
test
cmp
add
xor
jne
aaa
sbb
outsb
call
fisubs
pop
xchg
cmp
cmp
imul
scas
or
push
loopne
xchg
cmp
pop
mov
imul
aad
sbb
jmp
mov
mov
push
sbb
pop
imul
sbb
mov
les
aaa
les
xor
xorb
dec
mov
and
xchg
shrb
int3
mov
xchg
ret
movsb
lret
xchg
or
leave
sub
sub
push
or
sbb
cmpsl
cmp
mov
fdivl
push
xor
push
out
lock
ljmp
lahf
push
fst
adc
xor
pop
aad
dec
test
jecxz
xor
lock
adc
jg
inc
sbb
push
xor
lods
push
adc
jl
jmp
push
sub
ret
sub
das
xchg
pop
fnstsw
iret
jnp
mov
and
ja
sub
repz
xchg
push
in
jnp
bound
pushl
rcr
xor
dec
xor
mov
movsb
pushl
jae
repz
call
mov
or
out
test
sbb
lock
nop
in
mov
jb
and
sbb
arpl
mov
dec
pop
inc
and
mov
add
test
sahf
pop
cld
sbb
jle
adc
loopne
xor
fiaddl
mov
cmp
shlb
jb
das
mov
lret
ret
pop
jle
inc
sub
lock
jb
aam
dec
jl
outsl
and
les
sbb
jge
fwait
push
add
jle
mov
mov
mov
insl
aam
daa
fs
mov
faddp
addl
fsubl
popa
or
and
addr16
out
pop
sub
fadds
pop
push
inc
push
push
dec
dec
dec
inc
dec
dec
dec
sub
daa
call
or
add
rclb
sub
lds
ja
rcrb
sub
lock
sbbl
inc
jbe
cmp
mov
xchg
in
xchg
dec
dec
and
mov
dec
ljmp
push
xor
push
arpl
pop
xor
dec
push
in
rclb
loope
inc
jo
push
xor
mov
xor
negl
lock
test
call
pop
cmp
and
push
mov
iret
mov
clc
add
das
pop
pop
xchg
or
addl
pop
push
push
dec
mov
adc
cmp
inc
addr16
les
adc
and
dec
xchg
and
jle
push
mov
sub
push
mov
jne
out
popa
jne
outsb
dec
fwait
addl
dec
mov
mov
add
and
mov
test
add
push
mov
jo
push
dec
outsb
jle
pop
mov
loopne
mov
sbb
sbb
mov
and
pop
pop
cmp
dec
dec
out
ret
xor
inc
sub
mov
es
pop
sub
sbb
sbb
jns
push
jno
pop
mov
and
or
mov
test
sub
clc
out
xor
mov
xchg
jo
and
lock
mov
mov
adc
and
and
pop
inc
popa
mov
ret
xor
loop
push
adc
sbb
jge
and
sbb
mov
push
mov
jl
mov
pusha
icebp
pop
adc
inc
pop
add
sbb
shlb
ficomps
loop
jmp
adc
movsb
scas
cld
int3
or
or
adc
sub
into
adc
push
ss
xchg
lods
sbb
in
xor
sbb
mov
mov
hlt
mov
push
xor
subb
ja
mov
add
mov
fs
mov
pop
push
fimuls
and
jbe
pusha
xor
dec
cmpsb
fs
int
add
pop
mov
mov
movsl
or
sahf
jp
ss
das
xor
jns
add
sahf
mov
hlt
cmp
cmp
js
or
mov
nop
shrl
ret
lds
shlb
rorl
adc
ja
dec
pop
dec
cmc
inc
and
stos
clc
les
adc
adc
rcrl
sub
lea
mov
and
shll
sbb
outsb
add
hlt
mov
or
add
in
pop
loopne
or
jp
pop
call
or
ret
ss
sub
add
sbb
sub
pop
scas
es
dec
dec
cltd
and
testb
fldt
adc
mov
rolb
in
or
lods
fldl
inc
sbb
adc
dec
jne
xor
aam
and
pop
cmp
jg,pn
push
pusha
lods
or
inc
stos
push
sbb
nop
push
lret
stc
push
outsl
fcmovnu
and
lods
add
jl
adcb
pop
cld
mov
xchg
adcb
cmp
xor
and
test
adc
leave
mov
inc
sahf
ret
decl
cmp
xor
mov
pusha
lds
add
ljmp
movsb
inc
add
add
mull
or
add
test
xorb
push
inc
cmpsb
imul
xlat
add
or
push
lret
clc
ds
fdivp
je
ss
sbb
mov
dec
cmpsb
and
sbb
ret
ret
cmp
dec
mov
loopne
push
or
cmp
xor
loop
les
fidivrs
lock
push
sub
shrl
xorb
cmp
test
xor
dec
nop
inc
and
cmp
and
inc
inc
call
out
add
prefetch
or
dec
dec
adc
nop
das
cmp
out
sbb
add
mov
cmp
leave
scas
and
cmp
adc
xlat
and
fimull
pop
mov
dec
dec
imul
push
or
inc
adc
test
cltd
push
adc
stos
adc
add
adc
sbb
fdivs
lods
clc
mov
rorb
pop
clc
dec
loopne
xor
inc
nop
mov
xchg
stc
in
notl
or
test
sarb
test
cmc
andb
dec
iret
mov
bound
sub
xchg
pop
and
push
xor
fs
mov
or
mov
mov
adc
xchg
cmpsl
push
push
push
cvtps2pd
rcll
mov
dec
nop
or
lods
pop
cmp
aad
cmp
and
or
ds
jmp
add
fsubl
je
ret
nop
jge
lock
xchg
inc
inc
ficoms
xor
jno
add
fdivs
sbb
mov
inc
mov
add
stc
mov
or
jne
sbb
cmpsl
hlt
add
cmp
push
popf
sub
mov
cmp
jb
dec
xchg
add
jne
repnz
pushf
or
ret
add
test
and
mov
mov
enter
in
add
mov
scas
loopne
mov
cli
and
sub
adc
mov
std
stos
nop
inc
stos
xchg
shll
js
xor
adcb
xor
mov
inc
cmp
cld
adc
and
cmp
clc
sbb
aam
adc
sbb
push
sbb
mov
sbb
and
xor
das
mov
mov
mov
add
cmp
or
inc
imul
xor
add
fs
mov
and
push
addl
and
fbstp
xchg
ret
add
adc
rolb
inc
pop
mov
push
mov
add
sub
jo
aas
in
adc
ret
inc
or
loopne
cld
push
push
dec
push
gs
aas
pop
sub
xchg
add
sarl
inc
dec
push
sahf
mov
and
pushf
addb
imul
out
sub
push
clc
push
dec
sbb
aam
sbb
add
or
aaa
push
out
lret
inc
push
ficomps
roll
in
dec
ret
dec
and
push
mov
jae
xchg
cmp
dec
hlt
dec
dec
cmp
dec
push
es
nop
jno
xchg
ss
add
or
pop
dec
punpckhbw
mov
xorl
jns
add
sbb
scas
xchg
sbb
pop
xor
repz
cmovs
xor
nop
fdivr
pop
adc
xchg
enter
dec
or
push
sbb
mov
sub
adc
shr
xor
pushf
push
push
adc
xchg
add
sub
pop
in
mov
pop
or
sub
push
into
and
add
pop
add
sub
push
add
push
add
adc
push
jecxz
sbb
inc
pusha
push
dec
jb,pn
adc
mov
xchg
fisubrl
cmp
cmp
cwtl
jl
or
push
cmp
pop
push
addr16
inc
add
into
xchg
into
test
icebp
jo
clc
adc
jae
adc
scas
cmpsl
insb
or
jno
cmp
mov
push
test
loop
mov
or
add
jb
or
cmp
jae
inc
push
jp
push
push
jb
insl
popa
lea
inc
xchg
ss
lcall
push
or
sub
cmpsl
or
mov
pop
sub
pop
pop
pop
cmp
pop
inc
add
cs
sahf
dec
test
mov
icebp
adc
and
fnstenv
popa
jp
cld
mov
mov
add
or
arpl
bound
pushf
in
cs
sub
dec
in
mov
aam
dec
jae
int
or
pop
in
pop
popf
or
data16
in
pop
or
mov
and
movsl
fs
adcb
das
ja
cltd
push
aam
xchg
xchg
adc
movsb
mov
push
lods
rcll
adc
inc
or
or
mov
push
pop
test
insb
adc
or
loop
dec
adc
inc
sahf
jo
adc
push
jb
out
sbb
je
je
dec
mov
pushf
pushf
lods
adc
adc
jmp
cwtl
or
popa
jl
jl
movsl
movsb
xchg
or
and
addb
cmpsl
test
push
or
aam
loopne
addr16
inc
movsb
outsb
jno
sub
xchg
inc
cmc
test
sbb
setg
add
pushf
cmpsb
adc
pop
adc
dec
and
dec
push
dec
xorb
stc
pop
les
dec
and
cwtl
bound
fldcw
dec
pusha
add
push
pop
adcl
or
cmp
and
jns
mov
enter
jns
mov
jae
jo
mov
or
sub
mov
inc
js
inc
outsl
and
push
jge
push
sub
daa
addb
in
adc
sbb
in
push
add
das
cmp
and
es
inc
jne
orb
pusha
xchg
in
cs
inc
sub
inc
xchg
movsb
inc
adc
sbb
aam
dec
popf
sub
push
or
iret
orl
movsb
cmp
adc
cmp
or
cmp
sbb
xor
rorl
sbb
and
and
shll
sub
xor
shll
xor
dec
dec
shll
push
push
inc
shll
pop
adc
inc
cmpsl
sbbb
cltd
nop
inc
add
adc
dec
cmp
sbb
or
inc
inc
lcall
and
addb
xor
sub
int3
test
dec
addps
xchg
sub
jno
jl
mov
nop
xchg
rcr
movsb
inc
push
or
lret
dec
sbb
jmp
or
inc
outsb
xor
mov
imul
call
in
inc
in
loopne
rolb
push
loopne
fdivrs
push
push
jbe
mov
rorb
inc
push
stc
or
nop
lock
setae
xchg
cwtl
popf
pop
orl
inc
jb
jmp
xchg
dec
pop
cmp
push
sub
adc
push
mov
xor
or
out
and
mov
adc
xor
xor
and
add
hlt
xchg
int3
mov
loopne
dec
inc
int3
pop
pop
dec
fwait
xor
dec
push
in
mov
mov
dec
cwtl
les
cmp
adc
movsb
inc
rol
jmp
popa
add
mov
mov
xor
jge
faddp
mov
fwait
jmp
jbe
lock
mov
push
test
pusha
mov
and
inc
sbb
stc
fidivs
or
jg
sub
pop
das
adc
aaa
arpl
ret
push
pop
jb
add
push
fs
and
test
testl
cmpsb
pop
xchg
aad
outsb
jl
sub
jge
sti
adc
test
dec
adc
pushf
push
dec
cmp
adcb
fcomps
mov
dec
jnp
push
push
inc
in
les
cmp
cmpb
adc
leave
adc
mov
xchg
jl
mov
mov
adc
fs
das
xchg
sbbl
add
mull
stc
add
in
inc
dec
fcomps
out
adc
adc
sbbb
mov
hlt
push
push
xor
and
cmpsb
xor
inc
subl
test
sbb
sbb
cmp
xchg
xchg
inc
sub
les
push
inc
push
add
push
cmc
in
sub
and
and
fimull
sbb
or
cmpl
movsb
add
shll
and
and
popf
jge
rol
lahf
push
daa
xor
cmp
or
shlb
inc
push
mov
or
lret
insl
cmp
lahf
sub
inc
fld
adc
xchg
enter
xchg
mov
icebp
inc
sbb
mov
mov
inc
sbb
push
jecxz
lret
or
or
mov
pop
dec
or
daa
aad
add
inc
and
insl
or
lock
pusha
pop
fcmovb
jmp
sub
mov
aad
mov
dec
sub
push
push
or
cmpb
pop
push
pop
sbb
sub
or
movsl
out
pop
mov
or
adc
mov
inc
loopne
and
jmp
cwtl
stc
push
push
push
and
pop
test
addr16
push
pop
dec
ficoms
cld
aas
sbb
mov
je
ljmp
jb
insb
nop
pop
enter
jo
pop
je
sbb
cmp
pop
cmpsl
lcall
loopne
movsb
sbb
faddl
lock
mov
repnz
cld
mov
sub
fistl
xor
add
call
pop
pop
add
push
push
cltd
pop
enter
sub
pop
das
cvttps2pi
push
and
das
dec
and
push
sbb
shr
lret
adc
lahf
addr16
movsl
xchg
or
pop
sbb
xchg
pop
call
stos
dec
xlat
pop
imul
push
dec
fisubrl
jo
je
test
jl
xchg
lret
mov
xchg
addb
test
test
xchg
push
inc
sahf
pushf
xchg
or
xor
ret
outsl
mov
pop
dec
jno
cmp
mov
add
inc
and
popa
mov
clc
mov
clc
fsubs
insb
sub
sub
sub
pop
or
cmp
das
in
jbe
dec
and
mov
adc
cmp
inc
aaa
lock
loopne
les
pusha
jns
decl
mov
cmp
adc
pop
mov
pop
inc
nop
dec
xor
hlt
pop
and
sub
insb
insb
mov
push
jo
mov
in
je
inc
jl
and
jl
pop
pop
dec
test
inc
mov
jl
and
push
inc
cwtl
nop
pop
in
pop
repnz
jl
mov
test
pop
pushl
pop
sbb
in
pop
mov
or
jns
dec
jnp
pop
jmp
cmpb
cmp
clc
mov
fadds
call
repnz
adc
pop
dec
adc
pop
movups
sub
push
out
sbb
and
add
sub
pop
push
test
cmp
pop
xchg
jmp
add
clc
daa
adc
cmp
mov
mov
aaa
xchg
adc
cmp
addr16
mov
adc
mov
fadd
sarl
scas
adc
pop
sub
dec
or
adc
jl
jns
in
rcrb
mov
pop
jl
inc
sub
mov
and
enter
cld
clc
mov
xchg
dec
jle
mov
jbe
xlat
xchg
inc
sub
xchg
in
js
mov
pop
aaa
je
push
mov
add
orb
aaa
sahf
sub
mov
pop
outsl
cmp
and
mov
dec
xor
int3
mov
push
pop
push
or
push
pop
mov
push
dec
dec
test
xchg
sub
cwtl
sbb
call
dec
adc
mov
add
insb
bound
sub
push
dec
loopne
in
sti
adc
jbe
xchg
or
sarb
inc
jle
imull
adc
sub
int3
xchg
scas
push
dec
push
iret
inc
add
adc
cmp
out
mov
add
adc
sbb
push
or
fildll
aaa
push
pop
add
aaa
pop
and
push
mov
pop
pushf
inc
gs
mov
test
jo
dec
scas
lcall
dec
cmp
pusha
push
add
push
incl
xor
push
add
jo
scas
inc
sbb
fdivs
punpckhbw
outsb
mov
out
ret
pop
adc
dec
gs
mov
adc
add
adc
test
mov
sub
in
enter
add
test
in
sti
out
fistl
jo
xor
or
mov
add
xchg
jbe
aam
inc
pusha
inc
shl
pop
jo
adc
inc
jle
add
or
push
sbb
out
sbb
icebp
or
add
imul
xor
pusha
cmpl
and
dec
adc
inc
jl
sbb
dec
arpl
or
add
dec
sbb
sbb
shlb
adc
sbb
daa
cmpsl
fsubl
pop
addr16
loopne
mov
jo
clts
or
adc
pop
mov
or
adc
fstps
movsb
sahf
mov
addr16
das
and
loopne
push
dec
push
pop
les
xchg
lods
push
pop
pop
daa
pop
or
sub
dec
insb
dec
and
add
or
jb
dec
cwtl
push
enter
loope
mov
mov
inc
ljmp
test
fmull
mov
mov
ror
into
jg
cmp
adc
push
mov
jl
nop
cmp
outsb
rolb
aas
pop
scas
sub
cwtl
xchg
jle
pop
mov
push
push
aam
jmp
inc
pusha
add
inc
repnz
jl
outsl
dec
xor
repnz
sahf
dec
dec
xchg
dec
loop
inc
cmp
mov
push
pusha
mov
add
das
jb
lods
shr
sub
dec
or
test
imul
dec
pop
outsl
xlat
and
push
push
mov
inc
adc
add
sub
add
add
in
incb
mov
lret
out
cmp
or
mov
or
jnp
inc
ret
add
inc
inc
xchg
test
sbb
and
jno
xor
out
in
adc
or
pop
mov
int3
cmp
fwait
cmp
cmp
mov
and
sub
les
ds
push
cld
mov
sbb
cmp
and
pop
repnz
movlps
cmp
sbb
push
stos
adc
je
sbb
inc
ja
xor
aad
xor
pop
enter
dec
dec
adc
sbb
andl
imul
loop
adc
in
add
aam
pop
repnz
adc
or
movsb
inc
pop
mov
push
jmp
mov
cmp
pop
sarb
hlt
popa
or
cld
or
and
outsb
dec
and
or
outsb
dec
jbe
jo
jae
nop
in
lock
add
inc
sub
aaa
xor
add
sbb
lea
and
and
cmpsl
add
push
jne
pop
lods
mov
adcl
add
fnsave
gs
xorb
add
pop
push
and
sub
sub
pop
jle
rolb
inc
pop
cmp
push
lds
jb
fs
jo
jo
insb
lea
mov
je
sysret
add
shll
fistps
fidivl
xlat
addb
scas
xchg
mov
and
pop
jno
je
nop
xchg
mul
lods
jno
ljmp
fldt
rcll
sub
rolb
inc
adc
testb
push
jb
cli
or
push
out
es
inc
add
mov
arpl
aas
bound
xchg
adc
xor
adc
xacquire
xchg
pusha
sbb
jb
repnz
jns
es
add
jae
movsl
bound
inc
sahf
dec
pop
sub
hlt
cld
shl
xor
cld
mov
xor
flds
outsl
lea
and
subl
mov
fmuls
add
in
jecxz
gs
rcl
adc
mov
xlat
icebp
jb
adc
sbb
pop
jb
popa
inc
fidivrs
outsl
add
dec
shll
inc
push
jb
or
fs
add
or
sbb
adc
and
push
push
xchg
jnp
lret
lcall
dec
jnp
test
xor
and
imul
addl
sarl
je
lods
push
popa
pop
das
xor
pop
mov
fistps
enter
cmp
add
jl
jne
jne
das
das
push
cli
sub
cmpl
sbb
ljmp
ret
dec
shrb
loopne
dec
rorb
arpl
cmc
add
xchg
sub
push
and
pusha
cwtl
pop
and
vaddss
inc
jne
scas
je
push
and
daa
and
and
popa
cmpsl
das
js
ja
add
jb
sub
movsb
add
insb
xor
cmpsl
xchg
jbe
sub
xor
mov
jns
push
jae
mov
inc
xorb
cltd
les
adc
sbb
sbb
fstpl
and
sbb
mov
cmp
inc
or
dec
jmp
cmp
inc
push
xorl
ja
dec
mov
xchg
aas
push
push
pushl
sbb
xor
mov
mov
fs
movhps
imull
clc
inc
call
clc
cmp
sbb
test
or
mov
mov
fists
jne
js
jge
inc
xchg
or
cmp
xor
fsubrs
stc
and
dec
lods
jp
inc
dec
mov
js
adc
in
pop
jnp
sub
adc
sbb
mov
jl
adc
cmp
push
loope
arpl
dec
and
dec
lret
out
dec
adc
ljmp
and
pusha
ret
fwait
push
dec
or
shlb
xor
cmp
sti
jmp
cmp
scas
sub
adc
nop
mov
jne
push
enter
or
add
cltd
fs
xchg
fwait
sub
and
and
and
push
sub
add
or
mov
sbb
popa
mov
adc
inc
mov
mov
cmp
roll
adc
test
mov
xor
inc
or
xor
push
rcll
sbbl
jp
lds
pop
add
loope
das
dec
xchg
imul
mov
and
das
in
pushf
inc
xchg
jne
push
and
stos
xchg
sbb
jns
jnp
mov
mov
cmp
mov
fadds
dec
es
mov
add
pop
jle
orl
push
inc
cld
cmp
xor
or
dec
rclb
dec
fnstcw
enter
xchg
inc
call
adc
popf
mov
sahf
in
jge
xchg
pop
cwtl
repnz
mov
sub
or
test
cmp
in
add
mov
add
mov
movsb
add
pop
and
cmp
pop
lcall
test
nop
neg
sub
fcoms
xor
jne
lcall
sbb
jbe
dec
push
mov
inc
pushl
mov
out
dec
add
mov
loopne
jle
and
sti
cmpsb
lods
out
js
sbb
jns
add
mulps
lock
xchg
push
ja
push
jmp
adc
data16
push
inc
jmp
aaa
push
lods
outsl
xor
adc
mov
jle
jp
xchg
fmul
in
popa
and
xchg
fs
xchg
add
or
jo
mov
bound
sub
adc
jne
lea
inc
xchg
dec
xchg
inc
xchg
mov
sti
pop
je
pusha
pusha
mov
mov
call
testl
mov
push
add
fsts
push
push
test
shlb
mov
and
pushf
mov
mov
lds
push
cld
mov
imul
jae
adc
pop
xorb
cmpb
mov
lahf
cmp
mov
rolb
mov
roll
inc
push
sub
sub
pop
sbb
mov
inc
sbb
or
or
jmp
fsubs
aas
nop
sub
int3
adcb
sub
xchg
inc
push
cltd
adc
adc
fcomi
ds
outsl
mov
add
sbb
xchg
and
jno
test
lock
xor
cmp
push
jbe
loopne
xor
shr
cmpsb
rol
mov
add
dec
xchg
sub
lods
sti
xchg
pop
in
xorb
add
cld
adcb
adc
or
lds
inc
inc
xlat
cmp
mov
mov
cmpsl
fmull
push
in
and
mov
or
insl
jmp
cmpb
imul
loope
mov
inc
fs
clc
jecxz
or
jmp
das
sbb
xchg
push
push
aam
jne
xor
mov
xor
nop
cmpsb
popa
cmp
adc
mov
and
jns
addb
leave
xchg
aam
mov
and
test
in
pop
fbstp
pop
add
add
lcall
inc
jg
xchg
ja
push
push
inc
inc
inc
test
mov
jg
int
incb
inc
push
inc
pcmpeqb
iret
gs
insb
mov
sub
lods
xor
mov
pop
imul
or
loope
pop
std
mov
push
sub
pop
xchg
xor
or
xchg
mov
data16
xchg
cmpsl
addb
in
sahf
jp
add
pusha
leave
into
push
mov
push
daa
add
push
inc
add
fstl
push
add
lret
sbb
je
jbe
xchg
add
outsb
cs
pop
ficompl
jne
pop
addl
pop
fstps
nop
cld
adc
fisubl
xchg
sub
inc
fucompp
notl
cltd
push
sub
add
in
mov
cmp
or
mov
enter
sbb
mov
cmp
cmpsl
push
push
das
pop
sub
push
test
sub
in
push
test
out
mov
mov
dec
dec
insb
rcll
xor
pop
out
inc
cmp
cld
jp
mov
jae
mov
les
pop
sub
adc
lret
out
lods
adc
mov
addl
or
jb
ds
pop
jae
pop
hlt
aam
inc
or
ret
outsb
push
jmp
andb
and
dec
pop
and
cmp
mov
add
dec
dec
adc
mov
pusha
jae
test
cmp
movsl
inc
sub
cmp
mov
xor
adc
clc
mov
sarb
mov
xchg
cmp
or
popa
stos
mov
xor
pop
lcall
fidivs
in
xchg
push
xchg
nop
adc
jmp
jo
and
in
mov
aaa
sbb
shll
pop
cwtl
int3
add
jge
xchg
ret
mov
incl
sarb
popa
mov
dec
sub
mov
and
or
test
mov
sub
arpl
nop
or
arpl
dec
dec
inc
inc
push
mov
das
iret
xor
add
or
dec
pop
mov
dec
dec
out
xlat
adc
cmp
lret
or
inc
in
mov
mov
ret
fadds
ffree
das
cmpl
dec
push
es
xor
loope
jmp
add
inc
and
out
pop
inc
push
orl
adc
loop
adc
or
clc
mov
pop
rdpmc
inc
outsl
fsubrs
adc
mov
sbb
pop
addr16
sbb
clc
inc
sub
and
and
jne
xchg
clc
in
xchg
sub
mov
and
nop
jno
mov
in
dec
or
inc
jmp
je
lahf
daa
or
add
stos
dec
dec
pop
adc
mov
push
xchg
jmp
dec
fildl
adc
adc
sub
dec
xchg
or
out
inc
pop
cwtl
push
aad
sbb
clc
mov
roll
xor
repz
scas
or
xchg
pushf
add
mov
xchg
mov
jp
test
xchg
jl
inc
pop
mov
fs
mov
dec
push
movups
jbe
imul
dec
pop
jne
xchg
in
ret
pop
push
pusha
dec
jmp
data16
rolb
or
and
stos
inc
mov
outsw
cltd
push
inc
xor
push
sbb
fldcw
fldcw
cltd
sbb
pusha
jg
sub
jmp
js
add
push
pop
popa
xor
jae
cmp
ja
adc
ret
mov
inc
cmp
inc
mov
mov
xor
jl
push
sbb
pusha
push
and
test
mov
aam
mov
imul
mov
cmpsb
jne
or
jp
xor
dec
inc
add
dec
pop
sbb
repz
aad
push
aam
movsb
ss
test
push
call
inc
outsb
mov
jnp
adc
test
xor
sbb
repz
add
inc
add
lds
add
leave
cmpl
pusha
out
loopne
cmp
lahf
xchg
loope
movsb
push
data16
js
fs
adc
xchg
pop
inc
or
push
cltd
fs
mov
mov
das
sub
pop
jb
enter
into
dec
js
adc
in
mov
je
cmp
es
push
mov
int3
push
je
mov
mov
pop
add
lods
and
xchg
pop
lea
mov
daa
push
hlt
pop
inc
inc
add
mov
sub
std
je
stos
adc
cmpsl
sbb
imul
xor
std
pop
jne
pop
pop
lea
pop
cld
or
fiaddl
daa
cmovle
xchg
xchg
data16
fmull
xchg
jg
test
cld
nop
fdivrl
or
or
push
dec
les
push
jo
push
test
mov
and
mov
mov
push
imul
andb
inc
das
lock
subb
fs
inc
lret
js
es
data16
or
sbb
insb
sub
and
in
fs
pop
subl
mulb
dec
out
fldz
push
xor
sbb
or
sbb
ja
mov
sub
add
mov
jecxz
nop
sub
scas
rclb
in
mov
or
or
cmc
xchg
test
lds
sbb
sbb
cmc
xor
xor
cmpb
and
cmp
out
xchg
jo
sbb
mov
arpl
cmovno
mov
lods
pop
xor
bound
sbb
push
stos
ret
jne
inc
lock
inc
je,pn
inc
dec
mov
sub
icebp
jmp
mov
in
mov
mov
sbb
sub
mov
mov
dec
outsl
dec
jle
incl
dec
push
or
inc
push
sbb
sti
sub
sub
xchg
dec
xchg
and
lcall
inc
pop
mov
leave
lret
leave
ja
les
mov
adc
cltd
into
xchg
or
mov
push
mov
rorl
mov
add
mov
xchg
sub
sub
inc
imul
mov
orb
dec
or
push
mov
jg
fst
and
and
divb
out
aaa
adc
mov
mov
mov
adc
dec
or
push
addr16
inc
mov
mov
cmp
push
lret
lods
movsb
cmc
test
xchg
cmpsb
loopne
pushl
or
add
jne
cmp
mov
push
push
inc
rcr
push
inc
clc
cmpl
test
add
xor
mov
imul
mov
and
dec
adc
stc
xchg
mov
xor
xchg
cmpsl
inc
sbb
pop
push
pop
or
push
rcrb
jecxz
and
and
add
jae
es
dec
cwtl
dec
imul
inc
add
cmovg
insl
lret
test
ja
loopne
or
jg
adc
push
sbb
add
add
sbb
xchg
and
in
nop
ret
and
cwtl
xor
add
nop
pop
push
nop
hlt
aas
lret
inc
test
js
shll
mov
gs
dec
push
mov
dec
push
ljmp
hlt
or
add
and
int
test
hlt
mov
sbb
in
test
dec
xor
popa
sti
imul
test
pop
cli
jle
outsl
jl
inc
adc
xchg
push
sar
push
xor
movswl
cmp
jne
inc
and
dec
adc
fsub
jmp
cmp
out
hlt
cwtl
outsb
roll
xor
xor
xorb
test
cltd
sbb
add
pop
call
pop
inc
cld
clc
and
cs
jnp
lcall
sbbb
clc
sub
inc
pop
addr16
mov
add
and
stos
es
dec
pop
mov
dec
or
add
xor
jbe
add
inc
mov
jle
lcall
cmpsb
add
data16
push
out
nop
shl
push
test
mov
js
rorb
mov
or
add
xor
test
test
add
divl
addl
xor
aam
icebp
cltd
dec
cmpb
jo
nop
arpl
nop
sbb
lea
iret
cltd
mov
jno
adcl
lcall
les
imul
dec
add
add
outsl
je,pn
sub
jb
and
data16
in
aad
dec
mov
aam
loop
and
push
loope
adc
cs
push
movsb
pop
orl
cmp
sub
int
insb
mov
rolb
sbb
mov
jnp
aad
shll
test
and
mov
inc
mov
lds
sarb
push
in
xchg
add
or
jl
xchg
jo
lcall
mov
pop
shlb
lds
xor
mov
aam
push
jno
dec
pop
xor
jmp
leave
mov
shrb
aad
fildl
adc
rorl
fucomi
arpl
adc
dec
sbb
loopne
mov
int3
pop
add
loopne
jo
jae
or
jo
cmp
and
mov
push
call
loopne
add
push
add
sub
push
push
and
in
cmc
int3
add
push
aas
inc
lret
jns
push
adc
repnz
mov
subl
cwtl
cld
mov
mov
sbb
sub
xchg
pop
inc
nop
mov
lock
pop
pop
movl
pop
xchg
or
fildl
push
dec
xchg
xchg
pushf
or
mov
outsl
inc
cmp
push
xchg
dec
inc
and
je
jl
or
dec
or
push
mov
pop
dec
mov
mov
hlt
rcrl
ja
push
data16
testb
mov
push
cmp
or
add
out
loop
mov
or
jb
pop
mov
je
mov
dec
push
rcrl
mov
out
hlt
clc
xchg
sbbb
ljmp
lods
fldl
adc
xchg
cmp
daa
xchg
add
adc
xchg
inc
xchg
cltd
repz
jmp
xchg
sbb
push
cmp
sub
fldt
mov
inc
adc
mov
jae
inc
pop
mov
insl
dec
pop
pop
rclb
outsb
rolb
sbb
push
arpl
or
clc
ffreep
scas
pop
adc
lret
push
movsl
pop
adc
cmp
pop
add
jg
or
xor
push
xchg
mov
ja
sub
enter
mov
pusha
jnp
and
mov
jnp
xor
fdivr
inc
add
lcall
xor
out
cld
push
xor
jno
in
and
jmp
add
sub
sbb
lret
xchg
jno
mov
mov
das
and
cmpsl
call
popa
jo
mov
pop
xor
aaa
filds
sbb
sub
sub
ss
ret
dec
xor
mov
insb
sub
sbbl
popa
mov
pop
rcl
daa
push
ret
xchg
rcll
cwtl
sbb
jmp
out
mov
dec
jns
mov
dec
push
imull
or
push
out
xor
inc
add
jno
xchg
pop
cli
ljmp
sbb
sub
add
mov
lret
nop
xchg
sbb
and
fwait
xchg
lds
inc
dec
jne
mov
xor
xor
popa
aam
scas
mov
sahf
sahf
gs
pushl
sbb
fildll
test
loopne
test
lret
sbbb
movsb
mov
nop
pushf
int3
and
test
pop
push
mov
cwtl
or
sarb
repnz
xchg
in
dec
xchg
and
nop
mov
in
mov
dec
jae
test
sub
sbbb
jl
dec
jl
lock
js
je
enter
popa
jo
pop
lcall
push
push
dec
cmp
pusha
mov
pusha
pop
or
pop
pop
pop
pop
in
sbb
mov
imul
dec
insb
dec
xchg
pop
add
dec
imul
not
jno
idivb
push
xchg
cmp
inc
add
cmp
mov
xor
xor
xchg
xor
sub
test
inc
inc
or
gs
inc
inc
and
and
sbb
push
in
sbb
sbb
nop
lret
adcb
inc
add
or
mov
add
add
xchg
xchg
add
cld
std
cld
std
dec
push
pop
mov
std
clc
std
hlt
std
pop
jns
lret
lock
lock
in
std
fbld
call
sbb
mov
loopne
stc
push
in
loopne
fmull
add
push
insb
fcom
xorl
jae
pop
fwait
cmpsl
outsb
enter
xchg
std
add
adc
filds
mov
icebp
xor
mov
lods
pushf
nop
xchg
std
int3
std
int3
std
sar
pop
repnz
adc
mov
mov
nop
lret
adcb
add
test
movsb
mov
mov
add
push
in
xchg
nop
nop
mov
nop
lret
orb
test
pop
gs
dec
in
add
inc
sbb
lods
call
pop
inc
push
add
jb
or
mov
add
adc
sbb
incl
loopne
inc
xchg
cmp
jbe
lea
mov
add
mov
out
push
add
cmp
out
xchg
loopne
xor
mov
sahf
jnp
jbe
mov
or
ret
add
test
cmp
xor
fs
push
inc
add
or
and
inc
mov
xchg
out
adc
and
add
push
test
shlb
xor
arpl
fadd
pop
add
sahf
inc
mov
push
data16
clc
sbb
jmp
xlat
mov
out
cmp
shrb
dec
dec
popl
cmp
xor
loopne
pusha
mov
pop
push
xor
mov
cltd
les
jno
mov
pusha
shlb
pop
rcr
in
lods
loopne
push
nop
pop
adc
sbb
xchg
data16
dec
jno
adc
orl
dec
clc
add
test
js
inc
or
add
mov
and
stos
xor
lods
add
ret
add
or
lret
xchg
scas
or
mov
inc
imul
and
add
adc
jecxz
jno
je
jo
fs
push
sub
xor
dec
sbbb
lods
ror
xor
testb
push
and
jnp
xchg
sbb
xor
into
shrb
push
dec
lock
lret
inc
pushf
push
stc
cmp
das
pop
mov
mov
add
push
cmp
inc
scas
pop
push
adc
in
xchg
mov
ffree
sbb
pop
mov
inc
pop
pop
jg
mov
pop
adc
jmp
inc
and
loope
mov
push
push
hlt
mov
dec
repz
in
add
push
xor
mov
loopne
add
test
or
push
or
cmpsl
mov
jl
inc
data16
or
mov
imul
pop
push
int3
enter
cmp
les
rcl
mov
jo
sahf
lock
fcom
shrl
cmp
cmp
fistpll
jbe
fbstp
movsb
lods
lods
mov
mov
inc
xchg
cmpsb
movsb
xor
es
jae
loope
xchg
xchg
test
cwtl
xchg
hlt
mov
adc
push
xchg
sbb
idivl
nop
mov
cwtl
pushf
pushf
xor
iret
xchg
mov
repnz
or
leave
dec
mov
sub
or
daa
jo
xchg
dec
jnp
outsl
mov
test
cltd
fcmove
mov
mov
xor
fisttps
pusha
insb
xchg
lret
test
push
fs
pop
push
out
xchg
out
push
push
mov
nop
push
pop
pop
pop
sbb
jb
dec
inc
dec
rcrb
rolb
inc
nop
dec
adc
dec
lcall
xor
lcall
xor
cmp
dec
jae
enter
and
dec
jae
and
and
cmp
mov
imul
adc
test
in
adc
xchg
add
sbb
push
pop
ret
nop
add
lea
mov
sbb
or
add
dec
ljmp
or
cmp
lret
cmp
add
cmp
fwait
pop
loopne
fistpl
fimuls
mov
push
add
sub
test
sub
fbld
jns
subl
cs
and
mov
and
imul
scas
ja
xchg
adc
in
cmp
jbe
insl
ja
shrb
out
push
jne
rcrb
int3
mov
lock
mov
xchg
cmpsl
in
js
mov
lcall
enter
dec
mov
int3
mov
movsb
sbb
insb
lods
mov
cmpsb
in
mov
xchg
cmpsl
sbb
pop
adc
cmpsl
dec
add
mov
dec
lcall
test
xchg
push
push
or
pushf
xor
xchg
test
cmpl
sbb
cs
js
mov
cmp
in
and
int3
pop
fs
push
insl
or
push
dec
lods
dec
cltd
in
and
movsb
outsb
in
inc
mov
mov
dec
dec
loopne
sbb
cmp
mov
movsl
push
push
das
xchg
js
rolb
cwtl
xchg
decl
fistps
push
aad
cs
pop
sbb
es
inc
pop
stos
nop
jb
or
sub
sbb
in
dec
enter
leave
add
and
inc
es
mov
xchg
jb
add
decb
mov
idivl
add
pop
fwait
lds
dec
sub
adc
pop
int3
clc
cmp
das
lock
adc
sbb
pop
sub
sti
sub
inc
or
ret
add
jecxz
mov
xor
sbb
rorl
lock
mov
jne
ficoml
mov
mov
leave
push
test
call
call
test
inc
aas
add
xor
rorb
add
mov
sub
iret
dec
out
inc
mov
int3
cmpb
nop
imul
movsl
fistps
rorb
popf
stos
inc
mov
loopne
dec
jb
sub
int3
fisttps
shlb
movsb
sub
xor
in
mov
enter
data16
lods
call
imul
mov
out
xor
mov
pop
pushf
out
test
addb
jl
js
orb
movsl
js
sbb
jecxz
jmp
inc
andl
xor
dec
dec
movsl
cmp
imul
mov
lods
pop
imul
xor
shlb
mov
dec
insl
dec
lcall
in
inc
cs
inc
test
dec
outsl
enter
and
inc
and
cltd
inc
dec
sbb
cmp
sbbb
cmp
sbb
xchg
pushf
or
loopne
dec
add
pop
push
loope
decb
mov
and
popa
inc
pop
push
and
xchg
sbb
ret
xor
or
dec
inc
lcall
insl
add
and
inc
mov
loope
or
add
loopne
sub
mov
clc
and
add
repnz
gs
lcall
fisubrs
sbb
in
sbb
loopne
fcoml
aas
sbb
and
outsb
popf
pop
daa
pop
fcomps
push
std
in
popf
flds
ja
fcoms
or
loopne
add
pop
add
out
push
loopne
fdivs
ret
xchg
shrb
sbb
mov
int3
sbb
pop
rclb
enter
in
or
xor
movsl
sarb
mov
popa
movsl
into
in
mov
dec
repz
mov
inc
dec
adc
rcll
or
test
nop
sbb
or
sub
inc
jb
imul
bound
loop
sub
xchg
pushf
add
in
insb
inc
jb
push
loopne
loopne
loope
nop
sbb
sub
or
sub
cmp
loopne
in
out
push
leave
fisubrs
pop
add
or
add
xchg
push
adc
or
sub
nop
lods
push
xchg
xchg
inc
xchg
fildll
insb
call
inc
inc
dec
inc
inc
pop
jb
inc
cmp
test
es
push
pop
push
in
or
in
cmpb
xchg
sub
dec
jb
push
add
in
out
nop
sbb
inc
out
in
nop
cmpsb
dec
fsts
xor
and
xor
in
nop
sbb
insb
in
out
jb
push
in
loop
ficoms
loopne
xchg
nop
sbb
sub
dec
loope
fildll
adc
adc
std
fcoml
std
sbb
sub
imul
insb
dec
push
leave
xchg
int3
fisubrs
sub
inc
xor
filds
rcrl
loopne
add
or
fsubs
add
fsubrs
lods
sbb
and
out
in
loopne
pop
mov
nop
fisubrs
movsb
fdivr
pop
mov
outsl
push
inc
dec
dec
subl
mov
andb
and
out
sbb
in
mov
in
cmc
je
loop
xchg
add
insb
xor
mov
dec
push
inc
push
fs
push
xor
call
jl
pusha
pusha
pop
jl
jb
pop
pop
pop
dec
push
push
xchg
adcb
repnz
stc
and
dec
cmpsb
and
add
push
add
nop
cmp
xor
enter
xor
sub
add
and
in
and
and
sbb
add
sbb
adc
gs
adc
and
or
sbb
jmp
daa
sbbb
std
dec
jo
test
std
cld
xchg
lods
ret
push
clc
cld
sbb
loope
sbb
push
sbb
and
cld
dec
movsl
shll
mov
in
jae
cld
and
loopne
fsubr
icebp
xor
fdivr
lods
sbb
aam
sbb
and
mov
enter
cmp
les
and
insb
sarb
and
mov
sbb
or
push
subb
jns
sub
movsb
in
sbb
cwtl
cld
add
bound
gs
cwtl
mov
xchg
cwtl
jl
or
gs
sbb
mov
mov
mov
jno
jp
mov
leave
adc
nop
inc
pop
sbb
test
xchg
or
es
inc
sar
je
out
add
sbb
cld
lods
cmpsb
xor
xchg
cld
cld
lods
cld
jno
and
push
push
pusha
sbb
pusha
cld
xlat
pusha
sbb
movsb
push
js
popf
divb
push
mov
out
lods
inc
out
adc
lret
mov
or
rorl
fisubl
adc
pop
bound
push
or
add
or
pop
fsubl
dec
sub
insb
decl
subb
pop
seto
test
es
in
xchg
nop
in
xchg
or
cwtl
sub
mov
sbb
test
sbb
sbb
or
iret
add
add
ja
outsl
adc
xchg
lds
insl
loopne
cmpb
and
enter
sub
inc
lods
fadds
jae
jp
in
int3
sub
dec
dec
xor
adc
fildll
in
loope
fildll
leave
dec
pop
fisubrs
in
daa
loope
loop
lock
or
scas
pop
pop
sbb
and
xchg
roll
mov
push
pushf
js
cwtl
in
xchg
inc
flds
xchg
mov
mov
push
dec
mov
mov
pop
test
xchg
lds
inc
into
push
fnstenv
adc
cmpsb
xchg
in
mov
movsl
xor
dec
icebp
push
xchg
mov
sbb
jne
sti
xchg
iret
dec
ds
sti
hlt
sti
lock
aaa
leave
push
pop
sbb
in
sti
in
and
call
sti
adc
dec
in
loopne
sub
sti
jno
cmp
repnz
fcom
in
outsl
enter
dec
ror
add
pusha
inc
int3
push
enter
cmpb
sar
sub
sti
sti
enter
dec
mov
pop
add
or
mov
lods
sbb
pop
pop
or
punpckldq
cmc
pop
nop
gs
jmp
inc
jne
add
xor
inc
mov
push
or
jl
movsb
sbb
scas
cmp
movsb
add
hlt
mov
fildll
dec
clc
pop
jo
sub
aam
dec
sbb
dec
jg
pusha
mov
mov
pusha
stos
and
outsl
leave
mov
in
in
das
jns
int3
out
out
repnz
xchg
mov
in
inc
and
adc
insb
pushf
adc
addl
leave
dec
push
enter
loop
leave
push
sarb
dec
es
jns
dec
fisttps
nop
add
jbe
sbb
in
shlb
gs
xchg
sbbl
and
cmp
loope
out
xor
leave
fildll
int3
in
sbb
das
fnstsw
insb
and
and
loopne
loop
in
sbb
or
sub
dec
movb
les
ret
jle
popf
adc
nop
cmp
mov
ljmp
mov
add
ret
inc
fadd
das
dec
mov
push
add
or
push
xor
or
mov
or
orl
pop
lret
xor
or
movb
dec
sub
and
pushf
dec
jge
and
mov
fists
inc
leave
enter
mov
add
not
xchg
out
jae
jmp
je
jp
popa
outsl
push
enter
dec
test
mov
jbe
mov
push
cmovno
or
add
adc
mov
in
nop
adc
sbb
sbb
and
mov
mov
jns
and
insl
insl
cmp
sub
mov
sub
insb
jmp
add
push
mov
or
jb
and
loopne
dec
push
movsl
rcrl
add
push
lock
int
fisttpl
pop
inc
mov
js
jmp
nop
xor
sub
rorl
adc
xor
adc
pop
aam
jb
jno
jle,pt
popf
lods
push
or
pop
seto
and
xlat
xchg
pop
add
out
cmp
rorb
xor
cwtl
and
or
mov
jmp
ds
loope
nop
mov
movsb
xchg
add
pusha
outsb
ljmp
xor
mov
orl
int3
mov
xorl
movsb
movsl
or
cs
add
or
sbb
into
adc
add
movsb
mov
or
out
add
mov
or
mov
das
push
jae
and
es
add
add
std
and
test
adc
mov
call
pop
stos
je
adc
inc
inc
add
pusha
addb
adc
lock
bound
pop
leave
push
adcb
xor
repz
fst
shrb
andb
mov
sarl
or
ret
clc
popa
push
dec
loopne
fstpl
fbstp
inc
nop
cli
cmpsl
in
sarb
and
les
fisubrs
sub
or
xchg
pushf
repz
shlb
stos
adc
rorb
leave
or
loop
in
inc
push
mov
in
nop
sbb
inc
loop
in
cmp
in
mov
in
jecxz
out
add
mov
inc
mov
xchg
jb
dec
and
loop
in
nop
sbb
inc
out
in
cmp
in
lods
in
out
dec
push
leave
and
in
jecxz
and
movsl
inc
mov
pop
repnz
xor
jb
push
leave
in
out
in
and
inc
loop
sub
add
sbb
dec
cmpsb
push
cmp
loop
das
enter
or
mov
adc
inc
jb
in
out
xchg
nop
sbb
in
loop
in
inc
popa
cmp
mov
in
pushf
in
in
loop
inc
xor
arpl
add
nop
lret
loopne
pop
inc
cs
aam
push
leave
jmp
in
xchg
inc
jb
out
in
test
nop
sbb
or
in
and
mov
dec
lds
mov
jb
dec
cmpsb
xor
pop
push
in
lods
test
in
adc
loop
sub
and
and
mov
mov
or
in
enter
scas
mov
nop
xchg
sbb
cmpl
in
out
in
xchg
inc
repnz
sub
mov
in
jecxz
jecxz
inc
popa
xor
cmp
push
lods
scas
pop
or
mov
in
xchg
pop
mov
in
xchg
nop
sbb
lods
in
out
bound
adc
jecxz
or
hlt
pop
sbb
dec
addl
dec
loope
cmp
insb
loope
and
inc
add
sbb
fcoml
out
sub
popf
pop
out
aad
adc
icebp
hlt
push
xor
test
or
xchg
pop
mov
or
cmp
or
ret
cmp
and
or
fisubrs
insb
push
cwtl
or
fildll
inc
xor
pop
fsubrp
loope
push
and
xchg
sub
pop
lret
xchg
shr
or
std
pop
jb
nop
mov
nop
push
and
xchg
and
xchg
fsubp
filds
in
fsubrp
fisubrs
dec
loope
dec
movsl
popa
adc
mov
pop
push
in
mov
jl
leave
add
and
inc
popa
imul
push
leave
and
fildll
loopne
and
push
pop
sub
lods
or
and
loope
loope
fistpll
test
xchg
loope
jg
pop
es
inc
cmp
dec
xchg
add
mov
fildll
in
loope
loopne
or
and
fisttps
int3
fistps
xchg
loope
jle
enter
inc
inc
pop
adc
adc
in
or
or
and
fildll
leave
fsubrp
fisttps
and
xchg
inc
loope
sub
add
jne
call
aas
cs
or
mov
cld
xchg
add
cld
loopne
jns
leave
or
cld
aam
rcrb
jns
loope
int3
cmp
mov
sub
xchg
nop
loopne
loopne
xchg
and
loope
movsl
mov
add
or
lods
lods
pop
mov
sbb
fsubs
seta
dec
push
in
mov
dec
cs
jmp
dec
insb
fisttps
leave
and
int3
loope
nop
xchg
jb
int3
pop
js
add
js
je
inc
cs
push
or
insb
jo
nop
lret
sbbb
loopne
jb
pusha
pop
sbb
ret
xchg
inc
cld
pop
push
xor
aas
push
push
call
inc
jle
in
dec
jecxz
decl
or
gs
inc
inc
inc
xor
xchg
add
cmp
pop
push
in
cmp
push
in
push
mov
leave
xorl
cld
cld
cld
cld
and
sbb
cmp
sbb
xor
adc
or
or
xor
or
pop
push
in
sub
add
add
inc
jb
push
fisubrs
cmp
or
xchg
nop
loopne
loope
push
leave
and
fsubrp
loope
fildll
inc
jb
loope
dec
int3
rolb
and
dec
sub
les
enter
stc
add
ret
pop
les
scas
loope
call
int3
insl
lods
in
cmpb
sbbb
mov
pushf
pushf
cwtl
cwtl
cs
push
rorb
in
xchg
add
nop
xchg
fs
out
xchg
loopne
in
jo
scas
fisttps
and
dec
dec
popa
leave
sti
inc
cmpb
jl
repnz
rclb
js
dec
je
xchg
and
in
in
loop
push
sbb
int3
sti
sti
fbld
pusha
jecxz
jns
and
ljmp
push
push
inc
cs
mov
sbb
dec
cmp
lret
addb
repnz
cmp
cmp
cmp
nop
pop
add
push
xor
mov
xor
sti
gs
mov
cmp
pusha
enter
and
and
andb
sbb
xchg
iret
orb
sbb
cwtl
pop
inc
or
adc
or
daa
sbb
pop
xor
dec
or
sti
sbb
or
add
sti
cli
and
insb
cs
clc
cli
sbb
pop
bnd
cli
hlt
cli
lock
pop
jns
lret
in
cli
in
cli
call
cs
pop
push
imul
movsl
cmp
sbb
and
stos
cwtl
adc
adc
in
fcom
cli
sar
aam
and
dec
clc
aam
aam
and
roll
fs
cli
cli
cli
sar
xchg
xchg
xchg
sar
cli
mov
mov
cli
mov
and
mov
mov
mov
nop
lods
test
pop
je
sbb
enter
cli
cli
xchg
pushf
lds
or
cwtl
cli
in
push
sbbb
xchg
nop
jb
nop
lret
nop
mov
mov
cli
adc
lret
xorb
jae
nop
test
xor
jnp
pop
enter
cmp
cld
jmp
or
push
test
std
pop
test
sub
hlt
inc
shlb
adc
or
loop
inc
inc
stc
cmp
and
adc
dec
pop
push
jmp
or
movb
lds
mov
dec
mov
outsb
clc
cmp
out
jecxz
lock
test
fmulp
sub
shlb
loopne
cmp
int3
xchg
adc
xchg
dec
dec
repnz
fisttps
nop
dec
fst
or
nop
mov
enter
leave
and
or
cmpsb
inc
cmp
dec
lahf
loope
sub
loopne
shrb
or
in
or
insb
loope
out
xchg
dec
jb
int3
loopne
nop
mov
inc
mov
mov
jecxz
loope
inc
mov
mov
mov
adc
mov
inc
jb
jecxz
loope
sbb
xchg
sbb
int3
sub
pop
push
cmp
pop
dec
push
nop
mov
or
and
in
int3
loope
fmulp
jb
xchg
and
es
and
movsb
push
or
xchg
mov
in
or
sub
or
loop
fbld
or
and
movsb
xchg
or
mov
and
in
int3
loopne
loope
xchg
or
and
int3
cld
inc
jb
xchg
pavgb
nop
sbb
sub
int3
loope
push
and
jecxz
in
push
jecxz
in
jecxz
leave
and
and
in
jecxz
and
push
adc
dec
loopne
xchg
inc
jb
fisttps
sub
in
sbb
insb
loope
fists
or
sub
cmp
sub
sub
mov
mov
jb
mov
loope
mov
in
and
xchg
inc
loop
int3
leave
xchg
sbb
fisttps
int3
push
leave
xchg
sbb
int3
loopne
and
jb
loopne
ficomps
insb
pop
int3
lds
cmp
in
pusha
nop
mov
int3
shll
in
sub
jns
inc
in
mov
jecxz
dec
push
leave
and
in
jecxz
cmp
fs
sub
lods
nop
cmp
and
loop
cmp
in
lods
loopne
fisttps
sbb
or
loope
nop
sbb
and
int3
mov
mov
loope
sub
dec
mov
loopne
mov
inc
xor
xchg
and
adc
cmp
nop
sbb
or
mov
jmp
pushw
outsw
jbe
dec
inc
push
enter
bound
or
jno
or
mov
enter
jne
jne
sub
and
and
and
dec
mov
push
pop
sbb
and
pushf
ja
push
dec
jo
fwait
popf
insl
xchg
je
push
sbb
pop
incb
movups
or
shrb
adc
jo
xchg
xchg
xchg
xchg
js
orb
nop
xchg
lahf
cwtl
pushf
aas
daa
daa
daa
mov
adc
push
xor
jp
jo
fidivrs
insl
filds
push
pushw
xor
pop
mov
pop
insb
pop
lcall
add
dec
inc
inc
add
pusha
sbb
fnstsw
into
fwait
mov
inc
push
movl
add
cld
dec
inc
out
add
inc
mov
sub
insb
mov
and
into
fcoml
into
dec
pop
cmp
pop
jb
arpl
int3
enter
and
dec
add
inc
bswap
cmp
or
enter
add
hlt
or
in
jo
shlb
jne
repnz
in
mov
rcl
sahf
pop
jb
aam
daa
aam
and
aam
scas
xchg
xchg
and
das
and
sub
dec
insl
and
dec
and
push
push
loopne
stc
sub
sub
in
enter
or
aam
xchg
fwait
adc
loopne
lods
cmp
dec
dec
loopne
fucomip
fisubrs
sbb
cmc
aaa
or
xchg
stc
outsb
hlt
add
mov
pushl
jmp
fists
xchg
insb
mov
lret
loopne
jne
push
jne
and
pop
lcall
leave
and
sub
adcb
dec
xchg
mov
enter
or
fdivr
dec
loopne
lret
mov
mov
pop
or
cmpsl
or
or
sbb
pop
jl
and
mov
adc
add
ret
xor
sbb
stos
mov
in
in
cmp
mov
dec
es
in
out
in
push
fstl
or
insl
int3
add
pop
inc
insb
movsb
jmp
xchg
rorl
or
pushf
sub
mov
enter
in
pop
mov
les
in
les
in
in
in
jb
xchg
pushf
out
in
out
rcll
aad
sbb
adc
dec
rorb
jmp
sbb
cwtl
mov
adc
push
scas
inc
nop
push
mov
packsswb
out
int3
dec
mov
xchg
pushf
data16
sub
insb
adc
push
fsubp
dec
mov
cltd
rol
cmp
in
add
pop
nop
add
jbe
mov
scas
arpl
adc
loopne
fbstp
jb
loope
aaa
aam
outsl
pop
shl
sbb
jns
paddq
dec
xchg
push
mov
stc
sub
fsubr
sbb
sbb
dec
jb
js
mov
adc
popa
sbb
lock
mov
push
mov
cli
mov
outsb
and
in
fisubrs
leave
xchg
lods
fdivrl
loopne
cltd
mov
xor
rorl
subb
add
nop
ds
or
mov
pop
xor
and
sti
adc
cmpsl
add
sub
and
and
inc
add
in
cld
cld
mov
loope
and
std
inc
les
sbb
xor
or
xor
adcl
mov
push
jns
mov
xor
sbb
jns
inc
pop
dec
inc
movsb
jge
sbb
in
pop
lcall
xchg
loopne
cmp
pusha
push
push
inc
and
inc
and
or
add
push
push
shll
xchg
add
adc
mov
and
jbe
insl
xchg
adc
or
lods
or
aam
and
pop
mov
clc
ret
pop
mov
mov
not
enter
rcl
aam
mov
add
int3
xchg
cld
mov
popf
cmpsb
inc
adc
scas
add
mov
and
int
sub
push
test
dec
push
or
outsb
sbb
mov
mov
fdivrl
call
out
jns
je
andl
dec
mov
dec
or
dec
pop
test
leave
fildll
loop
or
or
leave
aam
add
scas
es
inc
sahf
mov
adc
push
add
xchg
dec
fidivrs
dec
out
dec
jns
xor
and
xchg
jno
insb
sbb
nop
data16
movsb
movsb
rclb
cmp
or
xchg
or
and
lods
fimuls
call
and
loop
test
les
inc
sti
fisttps
stos
test
mov
pusha
leave
and
subb
inc
add
in
in
xchg
and
and
dec
in
jb
xor
dec
push
jl
jb
dec
push
push
and
mov
add
sbb
xchg
sbb
dec
lods
dec
shr
nop
fucomip
push
cmp
in
or
and
cmp
mov
sub
xchg
add
xor
xorb
pop
popf
loop
in
nop
sbb
inc
in
in
jae
push
leave
in
or
insb
outsl
and
mov
xchg
add
cld
and
decb
cmpb
in
or
mov
sub
push
leave
and
or
or
lret
mov
or
gs
rcl
aam
and
add
mov
xchg
or
imul
push
mov
sub
into
xchg
fimuls
add
movsb
test
mov
clc
mov
dec
call
mov
fisttps
sub
push
sbb
pusha
cs
push
test
test
mov
push
js
sbb
push
stc
loop
loopne
cmp
in
insb
fisttps
sub
push
leave
and
or
insb
mov
loopne
push
xor
xchg
or
xchg
push
push
in
pop
jl
mov
loopne
and
in
loopne
fisttps
xchg
inc
xor
loopne
loopne
xor
leave
nop
jecxz
add
xchg
or
push
in
sub
cmpb
push
xchg
mov
dec
sbbb
sub
insb
in
add
and
and
loopne
jecxz
or
sub
repnz
std
clc
std
clc
std
cld
std
leave
and
dec
cld
std
test
in
add
mov
sub
jb
mov
sub
push
or
test
or
mov
test
mov
sbb
rclb
leave
xchg
pop
adc
loopne
sbb
add
loope
sub
or
insb
pusha
and
add
pop
cs
loope
xchg
xchg
cwtl
sbb
pushf
jno
dec
push
mov
loopne
insb
fisttps
inc
xor
loopne
sbb
imul
pop
push
in
inc
inc
inc
sbb
push
insb
insb
lods
mov
rclb
leave
loope
sub
insb
and
and
fisttps
sub
nop
sbb
loopne
insb
jecxz
test
or
or
sbbb
cmp
inc
push
xchg
cmp
xchg
cmp
call
jmp
jecxz
adcl
cmp
in
dec
loope
loopne
sbb
push
and
ret
inc
jb
pop
fisttps
sub
xor
xchg
or
lea
xchg
and
sub
mov
cld
das
pop
cmp
hlt
cld
clc
cld
clc
cld
shl
and
cld
leave
and
adc
or
shlb
mov
sbb
add
fidivrl
test
nop
pushf
fisttps
sub
mov
cmp
dec
push
jecxz
lea
mov
dec
xor
xchg
mov
mov
shrl
or
push
or
pushf
mov
sub
jo
test
nop
mov
leave
mov
sbb
adc
or
in
push
loope
or
sbb
insb
lea
inc
je,pn
js
add
pop
add
push
inc
lea
ss
cld
pop
push
cs
leave
mov
shl
insb
or
and
loopne
loopne
je
dec
push
jecxz
aaa
cld
and
cld
cld
cmp
xchg
lret
cld
cld
setbe
cld
sbb
or
xor
add
add
loop
nop
sbb
dec
loopne
loopne
inc
xor
fisttps
loopne
and
xchg
or
jecxz
sub
movsb
jb
gs
sti
sti
sti
add
mov
cs
insl
or
dec
xchg
mov
jns
inc
imul
movsl
fldt
insb
test
dec
mov
lret
sbbb
xchg
xchg
and
nop
mov
xor
lret
cmpb
mov
or
orb
mov
int3
xchg
inc
jb
loopne
loopne
push
leave
and
dec
fildll
dec
fildll
cmp
out
xchg
or
and
dec
in
and
in
dec
in
in
nop
sbb
and
cmp
in
or
mov
int3
nop
cmp
and
loopne
sub
in
in
loope
pop
inc
cmp
leave
sub
sub
xor
pop
pushl
dec
dec
loop
int3
fildll
and
and
int3
loopne
xchg
nop
sbb
loopne
loope
xchg
inc
xor
out
shll
scas
fsubrp
loope
scas
mov
enter
cli
pop
nop
pop
dec
das
int3
sbb
or
inc
loope
loop
nop
sbb
or
or
dec
and
and
fisttps
in
push
leave
loop
out
int3
and
and
loope
fildll
dec
push
leave
loop
out
loopne
xor
loop
test
test
sub
sbb
js
cli
js
add
jo
or
mov
insb
insb
push
push
pop
jb
out
cli
rcrl
xor
or
pop
ja
jno,pt
inc
cli
in
inc
push
or
push
push
or
nop
outsl
dec
jecxz
dec
inc
xchg
add
add
cmp
loope
pop
sarb
cmp
and
cmp
inc
pop
or
wrmsr
xor
add
popa
sub
sub
and
andl
nop
lret
andb
sbb
cli
outsl
adc
stc
xor
adc
adc
or
nop
pop
dec
mov
cli
stc
add
mov
adcl
insb
ret
imul
or
cwtl
stc
mov
out
hlt
stc
sbb
xchg
cmp
lock
sbb
stc
stc
stc
mov
sbb
dec
in
in
dec
rorb
add
addb
push
xor
stc
in
fmulp
aam
and
out
or
add
lret
fsub
stc
insb
enter
dec
jae
enter
inc
push
sbb
lret
rol
jmp
ret
mov
dec
sub
xchg
or
add
pop
sbb
sub
pop
xchg
movsb
ret
mov
dec
xor
std
inc
push
or
test
jecxz
mov
movsb
mov
push
enter
ret
cwtl
xchg
add
nop
push
in
and
test
iret
mov
xchg
rolb
jns
adc
stos
sbb
cmp
and
mov
js
push
stc
xor
xchg
je
jo
insb
jo
xchg
add
jns
xor
andl
sahf
je
sbb
stc
sbbl
loope
inc
fs
sub
jecxz
repnz
sbb
and
xchg
stc
dec
dec
dec
pop
jo
jns
pop
pop
mov
sbb
pop
test
inc
add
inc
inc
cmp
or
gs
cmp
and
pop
loope
push
arpl
inc
pop
outsb
imul
stc
stc
stc
scas
roll
sbb
into
aaa
dec
in
add
push
xor
adc
mov
dec
pushf
movb
sbb
jp
adc
jo
or
sbb
pushf
pop
loopne
xlat
lret
rcrb
xchg
adcb
fwait
enter
nop
lret
add
add
clc
mov
dec
clc
clc
sbb
cmpsl
or
enter
or
push
test
xchg
mov
cs
sub
xor
bound
sbbl
lock
js
in
mov
mov
clc
jge
movsb
loope
movsb
push
call
stc
cmp
xchg
arpl
dec
and
out
inc
cmpsb
mov
and
sbb
fcmovb
mov
mov
cmpsb
pop
aam
or
fwait
mov
add
sub
fs
shr
add
mov
xor
int3
int3
fdivl
xchg
xchg
mov
enter
cs
les
pusha
cmpb
add
jb
or
sub
mov
mov
mov
lods
sbb
movsb
add
jb
test
sub
adc
sub
xchg
xor
inc
xchg
cmpsb
pop
and
dec
cs
les
sub
cwtl
dec
dec
cmpsb
fs
dec
mov
es
or
mov
xchg
and
or
xor
and
jl
pushf
xchg
and
sub
enter
jo
mov
gs
inc
insb
insb
fs
and
je
addb
xchg
sub
adc
pop
sub
xor
mov
pop
inc
xor
and
cmp
and
xchg
push
dec
dec
dec
or
dec
xchg
or
push
sub
lret
and
or
lods
cmp
sub
xchg
movsb
cmp
mov
test
cmp
in
mov
pop
xchg
sub
sbb
inc
xchg
and
sub
xor
and
and
sub
xor
out
mov
cmpb
dec
das
in
or
push
shlb
int3
stc
mov
xchg
jne
stc
dec
enter
ds
add
cmp
jns
repnz
lock
add
jns
rcrb
or
std
pop
test
dec
sub
sub
xchg
nop
push
mov
or
xchg
pop
nop
or
das
js
mov
lret
daa
leave
mov
jge
fsubl
jnp
outsb
inc
lea
mov
jl
dec
inc
dec
mov
mov
and
add
dec
pop
iret
xor
dec
lea
pmaxub
cltd
mov
mov
sub
mov
sub
or
or
inc
adc
or
les
sbb
jg
inc
jecxz
mov
xchg
jmp
sar
in
imul
and
or
or
push
inc
add
push
adc
xchg
or
stc
push
jge
dec
jb
xchg
loope
loop
in
pop
jb
dec
int3
loopne
insb
add
cltd
in
push
addr16
lods
loope
or
sub
add
loopne
test
push
iret
test
sub
repnz
xor
or
in
or
test
lods
push
lea
outsl
sub
mov
ret
or
mov
mov
clc
xor
jge
xchg
or
loopne
fisubrs
testl
pop
xchg
ds
cmp
and
adc
push
cmp
dec
mov
orl
sbb
adc
loopne
sbb
adc
sbbb
lods
adcb
pop
and
cmpb
lahf
fildll
or
daa
test
nop
cmp
insb
loopne
sub
sbb
dec
xor
push
subl
dec
xor
js
adc
and
dec
or
push
cmp
int3
jmp
fildll
es
adc
pop
and
test
cmpsl
pop
mov
leave
loop
jno
push
jmp
inc
inc
jb
test
loopne
loope
popa
adc
in
fisubrs
cmp
int3
loopne
insb
xchg
nop
pop
jecxz
fcompl
mov
jo
inc
push
mov
or
mov
xchg
sbb
repz
mov
sbbl
mov
mov
xor
inc
jb
push
addr16
adcl
rol
nop
dec
adcb
and
pop
fildll
xchg
lret
js
and
nop
jb
nop
xchg
stos
push
ret
pop
inc
lods
add
les
push
enter
push
push
dec
sbb
mov
and
and
int3
mov
add
fwait
pop
ljmp
push
xor
imul
adcl
mov
mov
adc
testb
sbb
mov
or
pop
in
sbb
shrl
addb
fs
add
loop
sub
loope
fildll
daa
xchg
loope
fildll
sbb
jno,pn
push
and
lcall
sub
in
sub
inc
repnz
fildll
sub
sbb
fs
pop
or
sbb
adc
pop
mov
inc
adc
push
and
dec
insb
loope
and
inc
loopne
fisubrs
mov
fcompl
fbstp
push
pop
sub
pop
jnp
jne
push
jp
and
dec
or
enter
data16
push
sbb
nop
test
mov
ds
jmp
dec
mov
les
sbb
in
popa
cmp
insb
jo
enter
js
enter
addb
nop
xor
pushf
mov
movsb
test
enter
mov
inc
xor
mov
aad
or
aaa
adc
iret
in
repnz
add
and
xor
push
aaa
stos
xchg
sbb
mov
xchg
inc
mov
xor
pop
push
pop
cmovnp
dec
inc
repnz
pop
mov
sub
test
fistpll
sbb
push
sahf
shrb
add
in
xchg
shrb
outsl
jnp
jg
popa
imul
push
jne
or
jae
sbb
cmpsb
insl
test
cmp
fnsave
js
outsl
jae
and
insl
or
push
inc
fidivs
jle
add
mov
push
jl
or
fsubr
fsubs
add
fsubrl
pop
cwtl
lea
sub
insb
jp
xchg
rep
repz
divl
push
sbb
inc
add
inc
aas
repz
in
lock
js
clc
adc
sbb
je
bound
inc
jle
cmp
push
sub
mov
lock
inc
add
and
mov
mov
dec
cwtl
lods
xchg
pop
cld
add
pushw
cli
test
cmp
mov
cld
fcmovb
push
js
enter
cs
sub
ret
add
jl
sti
sarl
outsb
inc
rclb
cmovae
add
mov
fbstp
lea
enter
lock
sahf
push
dec
mov
dec
or
cmp
test
jle
testl
and
jle
inc
pop
add
inc
dec
sub
imul
outsb
je
fwait
outsl
dec
mov
aam
mov
fists
cs
inc
scas
loopne
repnz
les
scas
push
ds
in
fcomps
dec
scas
jae
ja
xor
inc
adc
and
inc
fistps
movsb
inc
dec
das
push
add
sub
xchg
inc
adc
push
insb
aas
movsb
dec
femms
and
dec
pop
or
fistpll
jae
add
idiv
movb
mov
xor
rolb
pop
inc
ds
add
call
fcmovu
adc
fisttps
data16
xlat
adc
fnsave
call
cmp
call
jns
sub
mull
mov
mov
lods
out
cld
out
pop
xor
mov
daa
lahf
push
popa
dec
fnstsw
gs
dec
mov
out
call
out
mov
jle
adc
mov
ljmp
jl
cltd
iret
ja
pop
and
call
lea
sbb
inc
and
pushl
xchg
mov
dec
leave
add
pushf
nop
das
in
pop
ret
inc
jns
lahf
idiv
out
jl
loopne
or
mov
or
jl
and
rclb
lcall
loope
test
push
inc
call
inc
fsubs
sbb
mov
adc
in
push
pop
jbe
xor
sbb
mov
sbb
mov
add
push
xchg
lea
mov
lret
adc
in
xchg
xorb
andl
popa
call
mov
repz
fnstcw
push
pop
aam
sti
adc
nop
dec
push
repz
mov
and
add
or
pop
jns
dec
inc
aaa
mov
loope
insb
pop
es
clc
into
insl
cmp
cmp
cmp
inc
xor
mov
sub
iret
mov
or
push
call
mov
and
pop
push
or
xchg
xchg
push
xor
or
pop
jae
aaa
lcall
jbe
fistpl
inc
xor
in
dec
in
nop
sub
pop
insb
clc
stc
dec
xchg
and
pushf
or
mov
xchg
and
loopne
dec
and
loopne
insl
mov
sub
cmp
mov
stc
cmp
out
push
mov
sub
sbb
aaa
adc
mov
and
fsubrl
dec
jl
mov
leave
mov
lret
nop
or
jb
pop
adc
mov
dec
in
lahf
and
and
sub
cmp
pop
xor
xor
aad
pushf
add
dec
add
sbb
push
xchg
mov
ret
test
cs
loop
testl
xchg
add
bound
cld
imul
jmp
xchg
mov
mov
int3
jle
sahf
xchg
dec
lock
xor
sub
rcrb
bound
and
cmp
mov
mov
rol
call
push
jmp
pop
push
push
ja
mov
ja
cmpsl
stc
sub
dec
mov
clc
jnp
test
sbb
adc
cmc
leave
jnp
inc
jns
push
adc
adc
js
add
jle
or
cmp
pop
sub
and
sbb
imul
clc
push
cmpsl
add
filds
or
fimuls
or
arpl
cs
test
repnz
xchg
sti
cmp
cmc
jae
or
out
out
leave
pop
sbb
dec
fldcw
pop
jns
xchg
fstl
rcrb
int3
or
repnz
add
xchg
addr16
mov
xor
inc
or
movl
faddl
pop
adc
sub
lret
popa
scas
sub
addr16
dec
sbb
or
divl
mov
cmp
mov
and
push
into
notb
test
xor
inc
lock
push
lea
testl
insb
sub
push
mov
pusha
ds
pop
fs
stos
dec
outsl
hlt
push
and
jbe
sbb
std
cld
pop
fisubs
int
stc
xchg
mov
lahf
rcrb
call
sbb
add
mov
xchg
sbb
mov
and
inc
cmpsl
jno
adc
dec
imul
std
filds
sbb
sbb
add
imul
sti
mov
push
mov
fsubs
and
pop
aam
stos
iret
adc
dec
dec
and
dec
jne
cmpsl
lret
and
dec
into
push
cltd
adc
pusha
xchg
push
js
and
cmp
imul
mov
outsl
mov
add
and
shll
repnz
mov
dec
lret
add
xor
movsb
fnstcw
test
test
shl
or
mov
ret
cmp
loope
ficompl
inc
dec
push
inc
jo
into
icebp
push
push
inc
pop
adc
dec
mov
jno
mov
mov
cwtl
pop
adc
adc
out
sub
xchg
arpl
adc
fucomi
outsb
mov
push
idiv
repz
scas
loopne
lock
loop
ret
pop
dec
popa
jl
lret
enter
adc
inc
repz
int
mull
es
mov
cvttps2pi
shl
sbb
xchg
inc
push
jbe
insb
in
sbb
pop
movb
mov
or
fistl
test
dec
outsb
inc
pop
lds
and
jo
fcomp
push
rclb
mov
aas
xor
mov
add
inc
movsb
adc
add
daa
adc
adc
jb
je
sbb
and
xchg
and
sub
or
inc
cs
test
aam
xor
dec
mov
dec
je
pop
aas
pusha
dec
cs
mov
mov
and
cs
mov
and
cs
xchg
mov
loopne
add
jb
dec
and
and
leave
inc
xor
jb
pop
pusha
sbbb
mov
jns
adc
inc
dec
cs
mov
mov
inc
mov
repnz
add
pop
leave
inc
xor
cltd
dec
pop
pusha
add
bnd
adc
dec
and
xchg
rolb
pushf
dec
xor
test
jmp
lea
xchg
sbb
mov
int
and
and
lret
int3
enter
enter
fsubrs
ret
cld
fcmovu
lret
loopne
jecxz
in
lea
call
push
jne
mov
gs
and
popa
je
xor
sbbb
add
xchg
fiadds
orb
sbb
ret
inc
pop
xor
mov
push
lock
add
out
cmp
dec
jnp
test
adc
pop
out
pusha
lret
test
sahf
iret
pop
es
sti
sub
inc
addb
nop
cwtl
sahf
out
sahf
mov
enter
jns
fsub
call
out
add
adc
iret
repz
and
xor
inc
dec
cmp
repz
pop
pusha
push
repz
mov
into
mov
inc
push
and
lahf
gs
mov
and
loopne
sub
in
xchg
xchg
sbbl
mulb
xchg
shlb
repnz
js
mov
pcmpeqb
and
int3
xchg
and
insb
outsb
clts
addr16
mov
or
add
adc
add
jns
inc
add
push
and
out
sahf
out
pop
push
jns
pushf
mov
shl
lock
sarl
or
xor
cltd
mov
push
call
add
fldt
sub
push
add
dec
cmp
push
inc
sbb
mov
in
inc
jb
je
and
pusha
test
repz
push
xor
inc
lds
sbb
dec
and
or
dec
fists
jg
and
hlt
push
adc
jns
or
push
sbb
sub
add
mov
fdivrl
pop
xor
pop
rolb
cmp
add
push
call
adc
jnp
mov
incl
incl
fdivr
lcall
clc
cmpsb
lret
adc
cld
rcrl
mov
or
sahf
idivl
or
add
jns
out
push
adc
sahf
out
sahf
adc
adc
or
mov
and
sbb
push
sbb
repz
scas
push
adc
push
cmp
repz
sbb
repz
adc
sbb
jns
out
daa
pop
sub
inc
lahf
out
sahf
push
push
sbb
iret
jnp
pop
fistps
nop
push
add
iret
repz
int3
add
iret
repz
or
cmpsl
mov
add
repz
add
iret
repz
push
sub
sbbb
xor
out
mov
jns
out
lods
mov
jns
hlt
out
fiadds
outsb
mov
mov
push
pop
pop
pop
es
add
scas
add
or
mov
push
dec
or
punpckhdq
pop
rcr
or
jbe
push
imul
idivb
fidivrs
aad
sbb
fwait
negb
testl
nop
sub
adc
mov
shl
cli
in
lock
add
rcrl
cmp
cmc
out
shrl
pushl
clc
xchg
jg
out
add
cmc
pusha
push
cli
jmp
add
sahf
jg
mov
push
lock
incl
movsb
clc
mov
cld
out
cli
add
cmc
mov
loopne
jns
scas
adc
push
out
aad
and
lods
add
in
add
mov
fidivrs
mov
pop
test
cmc
cli
add
lock
enter
push
cli
int
por
jg
clc
cltd
pop
inc
aad
fidivrl
adc
aad
push
jl
mov
jbe
aad
ror
decl
pop
pop
add
cli
xorb
jg
pop
aaa
int
cmp
xlat
inc
mov
adc
ror
xor
movsl
sub
push
shrb
outsb
cmp
int3
dec
hlt
movsb
pusha
dec
mov
lcall
movsl
push
cmovne
call
and
add
mov
add
mov
subb
fimuls
jmp
into
aas
cld
mov
out
call
cli
rolb
mov
lahf
jg
cmpxchg
and
ljmp
add
pop
in
cmpl
push
nop
out
nop
add
aam
out
jg
push
mov
inc
fisubl
out
add
ret
stc
imul
push
lcall
fucomip
jl
cmpsb
push
cwtl
sti
cwtl
add
data16
add
aas
dec
adc
push
mov
mov
repz
add
imul
jo
mov
lret
mov
mov
mov
shl
lcall
scas
and
sub
scas
out
out
add
pusha
push
sahf
jg
stc
lods
fsub
add
into
cli
add
lods
add
ja
cs
enter
loopne
dec
ror
add
mov
loopne
cmpsl
sub
mov
jae
push
fnstcw
fucomi
fildl
loope
sub
cmp
ret
sbb
jo
stc
out
pop
into
roll
mov
fmuls
mov
fcompl
nop
iret
xchg
xor
push
addb
xchg
xlat
jmp
add
xor
add
jle
mov
adc
jo
into
fdivrl
sub
push
xor
xchg
jo
notb
fstl
stc
addr16
mov
out
sub
lods
fidivl
add
push
in
jg
mov
mov
stc
out
dec
mov
push
ror
sbb
dec
into
jle
jnp
out
add
mov
jne
jnp
roll
cmpsb
push
outsl
mov
popf
ds
inc
cmpb
pop
mov
jo
nop
add
jnp
or
add
fbld
adc
fistpll
dec
sti
push
dec
cmp
dec
dec
push
faddl
add
test
in
xchg
stc
push
rcr
out
ficoms
pop
mov
cmp
push
push
and
icebp
ds
imul
add
jg
out
pop
push
mov
in
cld
fdivp
cmp
or
sbb
cmp
pop
repz
jl
pop
push
inc
dec
pop
iret
repz
pusha
push
cwtl
nop
bound
fiadds
add
ret
das
ds
mov
incb
std
add
and
jg
fcomps
inc
push
inc
sbb
add
pop
nop
sub
or
push
rolb
fisttps
adc
imul
test
and
pusha
dec
add
xorl
mov
xchg
fildl
add
add
inc
movsb
xchg
das
iret
or
or
pusha
push
jp
jns
mov
pop
or
nop
pop
hlt
mov
sahf
notb
dec
or
out
sahf
out
cli
cmp
dec
sahf
out
sahf
clc
pusha
divl
jns
out
cmc
pushf
hlt
mov
out
sahf
out
repnz
call
lock
out
adc
cmp
xor
dec
jmp
daa
iret
repz
ljmp
ret
ficoml
push
pop
ret
flds
mov
aaa
addr16
pop
dec
cwtl
mov
fnstsw
mov
cmp
or
add
jns
cmpsl
std
or
push
xor
push
fs
sahf
out
mov
jns
fsub
clc
add
sbb
iret
repz
xor
pop
push
js
movsb
mov
lahf
out
pop
jno
adc
movntq
int
xlat
adc
ret
adc
add
sbb
and
jae
insl
aaa
push
push
das
popl
xchg
or
enter
pop
int
sahf
neg
xchg
mov
jns
out
cli
sti
cld
std
sahf
out
sahf
incb
add
xorb
jns
addl
sahf
jg
outsl
add
mov
iretw
repz
clc
roll
push
push
mov
repz
fcom
enter
enter
jne
call
arpl
adc
mov
add
nop
dec
xor
mov
cmpsl
aam
push
in
es
jb
and
add
sbb
pop
scas
add
gs
cmp
aam
lret
add
xchg
cwtl
dec
fbstp
adc
add
out
or
sahf
out
sahf
or
sbb
test
sub
outsb
in
mov
cmp
lcall
mov
insb
imul
test
add
pop
enter
jo
jb
pusha
filds
or
xlat
sbb
xor
iret
notl
push
add
add
repz
push
or
lock
repz
xor
add
cmpsl
xchg
cmp
or
cmp
cmp
or
or
in
dec
ja
or
add
mov
cmp
ds
pop
das
jo
out
sbb
add
pushf
pushf
pushf
pusha
and
mov
addb
daa
daa
mov
aas
pop
sbb
in
cmp
rorb
dec
sahf
push
adc
mov
dec
dec
dec
or
dec
dec
add
unpcklps
xchg
xchg
fninit
ljmp
je
xchg
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
test
test
mov
call
cwtl
jb
repnz
push
jl
daa
pop
pop
jno
aas
pop
ljmp
daa
daa
daa
mov
daa
daa
daa
clc
add
daa
daa
daa
daa
mov
daa
daa
daa
les
bound
daa
daa
daa
daa
movsb
add
daa
in
pop
sbb
daa
daa
daa
xchg
inc
jp
daa
daa
daa
daa
aam
push
daa
daa
daa
daa
mov
mov
daa
daa
daa
hlt
add
repnz
add
jbe
jb
jb
int3
pcmpgtd
jb
lods
push
xchg
jb
inc
in
or
jb
jb
pushf
arpl
jbe
jb
fcompl
aas
outsb
xchg
fucomi
in
mov
sub
stos
xchg
dec
cld
call
dec
cs
xchg
adc
in
dec
ret
in
in
mov
dec
cs
pop
sbb
jns
rorb
dec
imul
dec
dec
mov
nop
push
out
in
adc
or
cmp
xchg
xchg
xchg
gs
xchg
xchg
test
pop
xchg
or
cmp
nop
xchg
cmp
cmp
cmp
xchg
or
cli
push
adc
cmp
xchg
xchg
xchg
or
cmpsb
nop
xchg
xchg
xchg
add
cmp
nop
xchg
xchg
jnp
imul
cmp
sub
cmp
dec
notb
dec
cs
pop
ja
into
in
in
addr16
scas
in
in
pop
xchg
inc
dec
dec
cs
pop
sahf
cs
in
aas
fisubrs
mov
mov
mov
lcall
mov
and
es
mov
leave
test
jmp
and
mov
movsl
mov
in
cltd
dec
es
aad
cmc
and
es
mov
popf
mov
fnstsw
std
ret
mov
jecxz
dec
es
mov
mov
and
cltd
repz
xor
and
leave
inc
fistl
xchg
dec
mov
xor
cmpsl
out
xchg
dec
and
xlat
and
notl
scas
adc
inc
xor
lahf
fbstp
xchg
dec
and
cmp
aaa
push
add
push
adc
cmpsb
repnz
adc
pop
stos
cmp
push
add
inc
pop
inc
jg
xor
aaa
add
pop
add
jns
lret
push
or
repnz
or
shlb
enter
sbbl
xor
push
popa
pusha
enter
add
xor
or
xchg
fnstenv
data16
or
jb
push
cmp
fmull
fbstp
in
imul
addb
and
jl
jne
xchg
xor
jp
bound
out
dec
add
out
jae
mov
shlb
sub
fmuls
mov
xchg
sti
add
mov
inc
or
sub
cmp
ja
sub
gs
and
cmpsb
shrl
adc
dec
add
push
add
add
add
inc
push
mov
lea
push
inc
out
jo
and
xorl
push
outsl
lret
push
pusha
or
inc
push
jae
popa
dec
dec
jne
mov
int3
nop
mov
fistps
in
inc
push
aaa
mov
sub
add
sub
repz
jg
out
sahf
out
incl
pushl
add
xchg
mov
rorb
loop
sub
add
jge
iret
sarl
add
in
add
or
sub
out
pop
fisubrs
add
and
mov
inc
cmp
jne
sub
dec
sub
in
adc
mov
sti
xor
and
xchg
add
cli
jmp
rclb
lock
movsb
sbb
mov
movsb
faddl
xchg
data16
push
mov
int3
push
push
lods
sbb
dec
enter
and
sub
add
dec
and
daa
sbb
sub
rsm
push
or
or
push
icebp
adc
push
lods
or
loopne
dec
add
mov
lods
es
jnp
and
or
mov
mov
imull
mov
repnz
icebp
add
movl
fwait
mov
add
sub
add
cmp
mov
ds
cltd
in
push
mov
cmpl
rolb
xchg
xchg
imul
fwait
jne
and
mov
xor
jns
scas
mov
xchg
add
pusha
xchg
and
inc
xor
imul
xor
xor
add
mov
and
enter
inc
mov
xchg
lods
xor
ret
mov
and
fisubrl
sub
rorb
inc
imul
lea
dec
iret
mov
push
das
or
mov
mov
pop
mov
adc
jne
lds
mov
mov
mov
imul
pusha
jge
imul
mov
outsb
scas
cs
xchg
test
sub
dec
mov
or
fdivrs
pushf
and
jnp
lahf
fldenv
xchg
dec
insl
xchg
jecxz
and
add
lock
movsb
jo
mov
dec
and
addl
pop
data16
outsb
je
daa
enter
imul
xor
lock
inc
gs
pop
es
xor
in
inc
rclb
call
in
sbb
pop
xchg
and
cs
imul
inc
and
inc
loopne
dec
ja
imul
xor
lds
loop
jmp
add
or
fsubs
insl
gs
es
pop
pusha
cltd
sub
shr
or
fcmovb
sub
enter
jbe
and
pop
ja
outsb
insl
popa
mov
lret
sub
enter
pusha
decb
rol
and
mov
dec
pushf
das
jmp
das
ret
and
dec
les
pop
sub
out
nop
add
inc
pop
push
sbb
xor
jns
out
dec
pop
fs
out
sahf
jl
xchg
mov
out
rcr
add
xlat
aad
cld
decl
inc
mov
dec
jecxz
ret
and
fists
das
add
adc
inc
xchg
out
push
sub
cmp
repz
je
cwtl
movsb
stc
cmp
repz
aam
add
out
sahf
cmpsl
and
pop
jo
out
sahf
mov
cmp
sarl
adc
dec
repz
repz
je
mov
iret
int3
loopne
or
movb
repz
repz
fs
cwtl
iret
repz
movsb
mov
sahf
out
lcall
jns
out
nop
test
shl
repz
out
add
sbb
dec
iret
repz
pop
je
test
sarb
idivl
cld
push
fwait
push
sub
out
sahf
out
push
out
sahf
mov
aam
add
adc
repz
cmp
js
cmp
repz
test
fsubr
out
sahf
out
popf
or
cmp
out
sahf
push
fdivrs
repz
add
cmp
repz
test
mov
loopne
add
pop
push
xor
cmp
repz
fs
lods
cmpsl
stc
cmp
fdiv
add
sbb
cmp
js
jnp
out
mov
pop
sahf
out
out
mov
insb
jns
out
mov
int
call
inc
iret
repz
push
push
lcall
or
sbb
out
xor
pusha
jo
out
sahf
out
mov
fdiv
jns
out
add
movb
inc
push
fs
sahf
out
xchg
test
in
repz
clc
adc
cmp
repz
mov
loopne
jns
cmpsl
stc
adc
xor
pusha
test
jns
out
mov
in
add
jns
and
push
insb
jl
jns
out
test
aam
iret
repz
sar
pop
test
and
dec
cmp
repz
js
pushf
test
cmp
repz
test
and
pusha
js
out
sahf
mov
out
idivl
adc
sahf
out
sahf
push
insb
andb
jns
hlt
add
iret
repz
pusha
jo
test
sti
cmp
mov
push
push
xor
cmp
repz
pop
push
cmp
mov
loopne
or
sahf
out
sahf
and
dec
pusha
je
jns
out
cwtl
test
aam
repz
repz
iret
repz
sbbb
stc
cmp
or
sahf
out
fs
cwtl
movsb
sarl
rcr
add
sbb
repz
sub
pop
jo
cwtl
ds
repz
enter
mov
sahf
out
and
fs
sahf
out
lods
rcl
jns
ja
lock
mov
sub
pop
out
sahf
out
test
jns
fdiv
mov
mov
cmp
sahf
out
adcb
fsubr
add
adc
cmp
iret
repz
fs
cwtl
repz
rep
rcr
cld
out
sahf
out
mov
cmp
pop
sahf
out
sahf
je
xchg
movsb
mov
cmp
out
fdiv
add
sbb
cmp
repz
pop
jo
nop
iret
repz
pushf
mov
aam
hlt
sahf
out
or
jns
out
pusha
js
test
fidivrs
out
loopne
add
pushw
and
sahf
out
cmp
insb
and
sahf
out
movsb
mov
fmul
repz
lock
cmp
repz
adcb
repz
fdiv
mov
sahf
out
and
dec
pusha
jo
out
sahf
sbbb
dec
repz
or
cmp
repz
fs
mov
mov
fsubr
cld
adc
out
lcall
jns
out
adcb
lahf
out
hlt
or
sbb
iret
repz
cmp
adcb
rcl
jns
cmp
hlt
mov
xor
jns
out
push
fs
sahf
out
sahf
xchg
movsb
mov
shl
cmp
repz
add
adc
repz
repz
pop
insb
jl
iret
repz
mov
lock
out
ds
or
xor
sahf
out
push
fs
nop
out
sahf
out
mov
aam
iret
repz
add
sbb
cmp
cmp
repz
test
repz
hlt
shrl
sub
repz
inc
pop
push
pause
movsb
mov
fsub
jns
iret
lock
adc
sahf
out
sahf
push
insb
test
jns
cld
adc
sub
repz
repz
je
pushf
mov
sti
cmp
fsubr
add
pop
push
sub
cmp
repz
fs
iret
repz
mov
or
out
lcall
jns
out
jo
nop
mov
out
fdivr
adc
and
repz
xor
fs
movsb
ds
repz
int3
fdivr
or
jns
out
and
dec
push
out
mov
sahf
out
add
mov
fs
sahf
out
xchg
test
aam
sarl
cld
or
sub
cmp
repz
mov
repz
add
sbb
out
sahf
out
dec
pusha
jo
lahf
out
sahf
xchg
movsb
mov
cmp
repz
and
dec
push
jl
mov
cmp
aam
hlt
add
adc
out
sahf
sub
push
push
out
movsb
mov
or
cmp
cmp
repz
je
mov
out
ds
fdiv
adc
xor
out
sahf
insb
mov
cmp
repz
dec
mov
int3
call
out
sahf
out
jl
mov
iret
repz
lock
and
push
push
jl
movsb
mov
repz
or
cmpsb
push
cmp
cmp
repz
jl
mov
jns
out
call
xor
jns
out
pop
je
movsb
dec
repz
mov
sbb
cmp
repz
test
ror
cmp
repz
lock
or
mov
push
and
inc
push
or
repz
push
cmp
mov
mov
out
loopne
clc
add
iret
repz
adc
xor
dec
mov
repz
fs
xor
lcall
adc
xor
cwtl
inc
mov
and
and
mov
xor
fimuls
mov
dec
xchg
fisubl
push
test
cwtl
push
ja
pushf
testl
sub
out
cmp
push
inc
xchg
xor
cli
xor
jo
cmpsl
inc
ds
mov
sahf
ss
push
sub
push
nop
mov
pop
mov
dec
call
push
insb
push
push
dec
ss
into
js
int
sti
dec
aam
into
and
lock
jnp
call
push
loopne
jno
xor
call
fisubrs
pop
xchg
push
or
dec
push
movb
cmp
xchg
dec
orb
negb
out
jl
sti
mov
pop
inc
inc
or
test
sub
shrb
mov
loope
pop
inc
pop
sbb
pushf
inc
adc
jnp
clts
clc
ss
xchg
test
mov
fcomps
dec
out
jp
xor
lahf
sbb
mov
inc
testl
or
adc
out
imul
dec
sbb
sub
and
mov
lock
inc
pop
rolb
or
lahf
rcrb
cwtl
decb
dec
sub
je
mov
jl
jnp
hlt
jbe
xchg
adc
iret
jnp
loopne
mov
in
jl
dec
ror
lds
or
sub
mov
shlb
sub
inc
pop
iret
jae
mov
xchg
jnp
jns
mov
xchg
jl
mov
cmp
fisubrs
jp
lock
fiadds
mov
loopne
jo
shll
cmp
push
sbb
fs
pop
pop
sub
xor
setle
negl
data16
push
pusha
pop
dec
mov
cs
cmp
inc
loopne
sbb
mov
mov
sarl
mov
movsb
imul
sti
faddp
subl
cmpsb
cmp
push
jecxz
enter
in
or
mov
adc
xchg
sahf
jnp
adc
int3
es
lods
sub
lock
into
add
jbe
lock
repz
out
and
je
dec
push
es
neg
hlt
mov
inc
test
jnp
testl
out
into
push
out
mov
movsb
into
aam
adc
lock
int3
mov
es
mov
loopne
cld
sbb
orb
add
insb
or
add
shll
inc
dec
and
ret
rcll
add
scas
cmp
shld
jl,pt
pop
jnp
push
fidivs
ds
ss
push
and
movsb
jnp
cmp
out
mov
lods
ficoms
pop
pop
jmp
cs
cld
negl
cmp
and
iret
cmpl
pushf
push
mov
lahf
test
add
push
sbb
sarb
jbe
mov
push
jp
pop
sahf
stc
mov
outsb
cmp
pusha
or
sbb
push
pushf
xchg
test
sbb
movsb
mov
cmp
dec
or
push
mov
rclb
mov
mov
faddl
cld
neg
ret
lds
fsubr
jl
pusha
into
inc
ss
imul
push
pushf
shll
dec
mov
inc
jbe
cmp
dec
push
xchg
out
fstpt
xchg
ss
fidivrs
mov
ficoms
pop
jo
negl
ror
xchg
dec
mov
cmp
ds
dec
xor
xchg
push
lock
ret
lock
mov
push
sub
rolb
imul
pop
xchg
je
outsl
xchg
cs
faddl
imul
enter
loopne
test
jo
cmp
jp
xor
enter
icebp
pop
incl
mov
out
sahf
dec
js
fs
jbe
inc
rcrl
ja
push
ficomps
dec
ficomps
iret
xor
fmuls
pusha
es
jl
mov
inc
inc
jnp
in
jecxz
push
pop
mov
pop
cmovle
fisubrs
xchg
int3
lret
call
or
bound
add
add
orb
inc
add
pop
loop
test
push
dec
add
or
mov
add
pusha
dec
popf
or
or
test
add
subl
inc
add
insb
adc
inc
loopne
pop
pop
add
push
dec
out
jnp
fwait
push
add
pop
inc
sbb
fmulp
jnp
inc
and
dec
pop
push
and
pop
fcompl
push
pop
dec
add
inc
add
in
cmp
dec
xchg
push
fnstsw
repnz
push
inc
mov
jnp
pop
mov
iret
es
dec
push
inc
cmp
imul
fimuls
mov
aaa
or
cmp
cld
inc
pop
add
scas
dec
dec
inc
lock
sti
xchg
push
add
dec
xor
or
imul
push
cmp
inc
dec
push
pop
push
or
or
negb
dec
inc
or
dec
mov
jo
scas
push
dec
push
adcl
fiadds
dec
inc
cmp
push
jnp
shlb
xchg
xor
orl
sub
outsl
jmp
add
add
incb
add
out
repnz
add
or
int
incb
mov
mov
mov
push
gs
mov
push
incb
cld
jg
clc
jae
jl
aas
push
pop
jmp
rol
jnp
lret
aas
pop
or
push
aas
add
and
jg
add
add
add
fldcw
test
or
pop
jo
pusha
mov
pop
rorl
add
xor
jg
shrl
fucomi
push
out
ficompl
popf
xchg
cmp
add
loopne
insb
xchg
xchg
pop
push
aas
pop
jnp
xchg
pop
cs
pop
xchg
addr16
lock
insb
push
out
xor
push
pop
std
xchg
xchg
int
push
fldl
insb
out
add
jbe
in
cmp
jle
rolb
arpl
jo,pt
iret
add
pop
incb
lock
mov
jo
or
push
add
vmwrite
out
jns
aas
es
push
add
js
out
nopl
into
push
add
jne
inc
jno
lcall
mov
daa
add
add
mov
das
aas
dec
pop
outsb
daa
scas
pop
and
iret
pop
std
enter
clc
lock
aas
rcrb
sbb
pop
push
inc
shll
clc
popl
adc
xchg
mov
neg
roll
loopne
pop
sbb
jae
fwait
test
inc
nopl
sbb
in
ds
jg
cmp
in
scas
fldenv
les
test
cmpl
xadd
jnp
cs
or
cld
lods
and
fsubrl
jns
adc
aaa
pop
lock
cltd
add
dec
adc
sub
iret
insb
ss
jle
or
push
fnstcw
inc
add
inc
addl
fwait
in
popa
push
pusha
xor
sbb
push
push
sbb
mov
int
push
pusha
jbe
lock
clc
dec
sbb
cmp
sbb
cld
data16
or
test
loopne
loope
sbb
pop
and
imul
add
push
cmp
orb
add
rolb
and
add
out
add
and
aas
cmp
subl
sti
xchg
xchg
cwtl
mov
daa
sbb
cmp
xor
fucomp
fidivrl
daa
and
xor
lahf
and
daa
and
jnp
mov
or
dec
push
dec
mov
mov
push
push
and
push
andl
fldt
fwait
mov
dec
daa
dec
or
fldl
mov
mov
ja
push
daa
loope
negl
push
cmc
sbb
xchg
rclb
add
mov
lahf
adc
push
adc
cmp
inc
and
cmpl
xor
and
out
and
fbld
inc
push
movsl
daa
repnz
imul
repz
xor
mov
jns
repz
cmp
xor
negb
mov
pop
push
fidivrl
push
int3
push
and
mov
push
cmp
jmp
sarl
cmp
nop
or
xlat
push
sub
fstpt
and
xor
push
or
mov
xsavec
xchg
dec
push
xbegin
enter
and
lahf
outsl
pop
out
lahf
add
ja
testl
or
loope
mov
hlt
or
dec
ljmp
fbld
xor
outsb
daa
inc
aad
mov
lret
push
dec
dec
pop
daa
mov
out
in
mov
incb
dec
pop
decb
clc
add
outsl
pop
or
repz
or
mov
sub
aas
sbb
clc
movsb
xor
inc
arpl
daa
xchg
xchg
shll
xor
arpl
inc
imul
cmpsl
cmp
lahf
cmp
inc
mov
out
cmpsl
mov
mov
fwait
daa
push
in
mov
push
mov
daa
jbe
sub
dec
lret
ljmp
popf
out
es
daa
dec
add
cmc
popf
mov
jle
xor
in
repz
fs
push
sub
jecxz
test
sbb
push
add
xor
in
inc
xchg
flds
or
stos
movsb
out
sub
and
repz
daa
xor
scas
repnz
mov
arpl
das
es
sbb
in
push
inc
sub
add
stos
and
pusha
imul
pop
add
outsb
data16
inc
push
cmp
int3
inc
shlb
mov
aas
mov
and
inc
aas
call
and
and
stos
sub
loope
sub
pusha
repnz
movsb
pop
xor
dec
and
mov
mov
leave
stos
xor
ja
mov
mov
cs
cmc
divl
adc
cmpsl
fsubrl
or
mov
pusha
sub
cmp
sbb
pushf
add
xchg
sbb
adc
fwait
addl
loopne
mov
daa
in
out
fnstcw
fnstcw
dec
clc
or
sbb
mov
fcoms
daa
dec
xor
fstpt
dec
xor
dec
daa
dec
xor
ds
dec
daa
clc
dec
or
sbb
dec
jl
pop
dec
mov
dec
out
aas
jae
jecxz
sbb
mov
mov
xor
cltd
sahf
xor
cmp
push
mov
mov
lock
pop
sub
dec
adc
aaa
cmp
cwtl
sbb
nop
mov
out
mov
sbb
lods
and
push
sbb
dec
xchg
cmp
add
aas
push
test
mov
lret
pushl
inc
sub
inc
into
ja
push
jae
lahf
es
push
pop
xor
decl
or
sub
stos
push
in
out
rcrl
sbb
sbb
aaa
jl
mov
repz
and
pop
sbb
loop
jbe
stos
sub
aaa
fs
jecxz
out
jmp
mov
inc
test
xlat
outsb
push
imul
sbb
frstor
ja
xor
push
and
out
jmp
xchg
add
fmuls
subl
mov
cmc
jo
pushf
aas
andl
push
aas
adc
test
adc
xchg
fistl
add
or
orb
push
jo
pop
push
jmp
jge
pop
jg
add
pop
push
rcr
cmp
adc
js
jl
mov
add
ja
or
or
mov
pop
rolb
mov
lds
mov
mov
int3
add
out
or
cmp
lret
mov
add
mov
and
lock
out
jns
setl
pop
sbb
pextrw
jg,pn
movq
jo
div
pop
and
push
or
aas
mov
rclb
lcall
aas
pop
mov
jg
pop
push
xchg
pop
pop
ret
xlat
aas
sti
lods
push
imul
lock
lea
inc
cld
int3
iret
popl
or
adc
icebp
mov
xchg
mov
jo
mov
js
aas
add
adc
jo
in
pop
or
lock
or
cmpxchg
add
or
pop
mov
add
dec
dec
fs
popl
sub
jae
cmp
jo
lidtl
push
add
push
pusha
pop
lds
jg
inc
loopne
push
mov
dec
mov
daa
cli
and
neg
cmp
imul
add
mov
push
jbe
insb
adc
fisttpll
sbb
push
jp
push
jns
inc
push
cmpsb
mov
pop
push
outsl
fwait
arpl
rcr
repz
dec
mov
dec
mov
and
insl
jne
jp
inc
jle
sbb
xor
push
gs
add
outsl
jo
pop
inc
add
xor
push
push
push
imul
xorl
push
arpl
fwait
jno
mov
insl
adc
sbb
add
cmp
adcb
sbb
sbb
xchg
xor
pop
lock
push
inc
cmp
popa
jb
mov
mul
dec
outsb
scas
arpl
mov
insb
arpl
es
addr16
fistps
push
ja
jb
loope
ror
arpl
jae
cmpsl
imul
out
jo
fiaddl
jecxz
data16
mov
jnp
mov
rorl
jnp
divl
sbb
add
push
inc
mov
mov
jne
ret
loopne
test
and
xchg
mov
xor
arpl
popa
ficomps
out
outsl
lcall
inc
insb
lahf
lcall
jl,pt
out
gs
xchg
shll
sub
jg
out
negb
dec
ficoml
inc
push
outsl
bound
adc
ss
cs
adc
mov
and
data16
push
or
xor
gs
fcomp
dec
stos
push
dec
adc
fiadds
mov
in
cmp
or
push
push
push
add
jns
outsl
repz
dec
mov
jecxz
adc
jg
js
mov
fists
jae
mov
jnp
cmpsl
mov
jne
insb
mov
imul
repnz
bound
push
lods
aaa
mov
xchg
mov
xorl
push
xor
subb
js
push
mov
inc
cmpsl
bound
mov
dec
fistps
imul
andb
dec
or
daa
insl
ret
orl
cmp
fwait
jl,pt
jo
imul
mov
fistpll
inc
sbb
addr16
add
push
addr16
inc
pop
shrl
jnp
adcl
mov
das
iret
mov
scas
popa
jmp
outsb
xor
jecxz
add
xchg
mov
gs
sbb
push
add
pop
test
rol
imul
in
add
mov
fs
vmread
lea
mov
add
testl
sbb
insb
xor
xlat
fs
or
mov
pop
imul
ds
add
popf
stos
inc
sbb
and
inc
mov
push
or
mov
xor
mov
jmp
ret
lods
or
and
lock
cmpsb
lock
idiv
dec
adc
imul
ret
and
mov
adc
mov
daa
push
idivw
cli
dec
aaa
jo
jecxz
pop
das
xor
add
mov
test
stos
into
ret
fildl
aaa
jns
cmp
jnp
mov
mov
xchg
sbb
dec
insb
pop
dec
mov
lods
sub
push
addr16
mov
out
sbb
dec
mov
outsl
xchg
mov
ss
popl
gs
pop
push
mov
sbb
adc
push
jb
mov
jl
push
add
pusha
rol
repz
and
and
je
stos
ss
xlat
jb
sub
test
out
inc
inc
sub
das
out
in
add
inc
jae
mov
adc
arpl
pop
cmp
push
add
pop
adc
lahf
and
pusha
push
jecxz
mov
dec
bound
mov
dec
push
fistl
xchg
mov
sbb
jae
push
test
xchg
mov
stc
fists
push
add
cwtl
push
loop
push
scas
sbb
ret
mov
popa
adc
cs
stos
shll
mov
cmp
das
fwait
or
add
mov
pop
add
add
sbb
jnp
outsb
outsl
adc
mov
scas
lahf
lret
inc
adcb
adc
or
jge
addl
insl
mov
outsl
and
mov
mov
arpl
cmp
stos
out
mov
xor
out
pusha
xor
stos
xchg
pop
xchg
inc
sbb
pop
jp
iret
clc
rcl
jnp
adcl
sbb
jae
shr
cwtl
jmp
mov
push
lods
test
mov
sbb
sbb
orb
add
daa
popf
andl
mov
loopne
mov
xlat
adc
pop
push
arpl
and
push
call
test
dec
mov
sub
and
cmp
sti
adc
imul
mov
insb
iret
ja
scas
insb
dec
jae
xor
inc
stos
push
sbbb
ja
and
insb
divl
or
fdivl
dec
jb
orl
loopne
fldt
xchg
adc
sbb
add
aas
repnz
and
mov
repz
or
rorl
nop
ja
pop
sbb
fnstsw
icebp
sub
ret
push
repnz
push
fiaddl
mov
pop
dec
outsl
xchg
and
mov
cvtps2pi
in
xor
adc
inc
aas
ret
push
pusha
stos
mov
iret
pop
push
cmpsb
cs
and
stos
ja
push
and
and
stos
inc
mov
inc
push
pop
pusha
xor
jo
xlat
pop
adc
sbb
seto
mov
arpl
push
lock
stos
push
push
cwtl
sub
jecxz
xor
lds
inc
pop
ja
or
add
pop
sbb
mov
cmpsl
mov
je
sub
mov
cli
xor
aas
inc
test
push
scas
je
addr16
mov
mov
jnp
cwtl
jecxz
les
cmpsl
insl
inc
es
xchg
push
mov
arpl
mov
pop
xor
loopne
iret
mov
push
cmp
sbb
pop
es
aad
sbb
or
jnp
dec
in
mov
xchg
mov
rolb
jp
imul
sbb
jb
jbe
ljmp
adc
push
jb
inc
roll
push
push
and
insl
mov
or
jae
pop
dec
filds
scas
adc
jae
and
or
pop
mov
cmpsl
mov
insl
outsb
adc
mov
inc
lahf
fwait
rorl
pusha
xor
ret
ljmp
rcrl
ja
jne
scas
inc
dec
lcall
out
mov
iret
and
jo
dec
test
aas
fs
xor
arpl
cmpsl
inc
cmp
sub
arpl
add
mov
mov
adc
decb
scas
imul
das
popa
fldt
bound
lcall
push
inc
cmp
movsb
xchg
push
mov
jb
insl
inc
das
pop
outsl
cmp
lock
add
add
and
adc
sbb
rorl
push
pop
pop
dec
mov
push
arpl
movsl
pusha
addr16
rcl
ljmp
iret
mov
mov
fucomi
mov
jo
sub
xchg
aaa
cs
outsb
push
inc
aas
mov
add
push
dec
push
push
aaa
outsb
jbe
addl
inc
dec
aaa
js
out
stos
push
push
mov
scas
jle
push
adcb
lock
subl
jg
outsl
dec
mov
adc
cmp
and
xor
out
push
imul
add
sub
or
pop
fnsave
add
pop
ret
test
add
mov
ss
adc
push
inc
int
outsl
aaa
lret
sbb
jns
mov
out
sbb
xlat
push
push
loopne
scas
push
or
fdivs
sub
add
mov
push
pop
add
ja
jecxz
sub
xor
mov
adc
mov
imul
daa
outsb
mov
das
jmp
push
xchg
dec
sbb
or
or
sbb
jge
push
jo
push
out
adcl
push
test
outsl
pop
push
fbld
ja
xchg
or
popf
pop
mov
andb
arpl
movsl
or
push
stos
xchg
mov
sbb
sub
data16
out
inc
xchg
push
lret
bound
imul
and
mov
pop
pop
sbb
cmp
insb
xor
pop
popl
dec
pop
out
sbb
stos
mov
sub
ret
xor
out
js
inc
mov
call
daa
push
ret
push
pop
push
outsb
mov
cmc
sub
mov
dec
rolb
cmpsl
insl
xchg
imul
mov
cmpsl
dec
das
dec
push
push
imul
cmpsb
js
mov
mov
pop
in
faddp
push
lret
push
inc
cli
sub
pop
xchg
loopne
mov
sbb
sub
add
loope
jmp
cmp
cli
jg
movsb
bound
icebp
mov
pop
aaa
xchg
sarl
mov
addr16
pop
push
daa
das
xlat
sub
mov
mov
adc
ret
hlt
imul
test
cmp
je
sub
sti
xlat
mov
je,pt
and
insl
daa
shll
sarl
mov
mov
fimull
push
aas
daa
orl
cmpsb
adc
push
outsl
pop
pop
aam
mov
and
imul
in
push
fcmove
xlat
sbb
sbb
or
and
jo
jnp
inc
push
out
bound
mov
push
sti
test
fsubrl
roll
insb
pop
push
sbb
pop
push
pop
pop
call
push
inc
or
cmpsb
and
mov
mov
hlt
jno
cmpsb
sub
jne
and
xor
jmp
mov
arpl
pop
sbb
outsl
aaa
jb
xor
jg
rorl
sub
push
dec
call
ja
adc
xchg
ret
mov
or
stos
ret
and
sub
sub
pop
ja
sub
mov
cs
xchg
sbb
lock
mov
adc
dec
movsb
and
jae
addl
ja
adc
ja
jmp
push
add
push
cmp
outsl
rcll
xchg
scas
xor
daa
mov
lcall
xchg
call
rcl
ficoml
addr16
test
pop
dec
xlat
push
sbb
out
loop
out
sbb
rolb
cmpsl
mov
push
addb
push
xlat
aas
inc
jae
push
pop
pop
push
mov
lcall
jmp
fsubs
xor
pop
sub
insb
rorl
push
push
stos
les
add
popa
ret
sbb
mov
mov
sbb
pop
inc
sbb
xchg
lcall
mov
adc
subl
jae
pusha
add
sub
sbb
cmp
mov
xlat
xor
daa
es
arpl
mov
jns
cmpb
loopne
push
arpl
pusha
xchg
add
xlat
stos
mov
jmp
ret
daa
jbe
sbbl
mov
adc
adc
cmp
jmp
push
lods
inc
mov
outsl
cwtl
stos
shrb
out
jne
mov
sub
xor
js
and
or
push
jo
inc
and
insb
inc
adc
bound
adc
cs
sbb
addr16
or
pop
jmp
dec
daa
insl
mov
push
jmp
bound
or
call
pop
xor
sbb
add
xor
push
mov
stos
es
ffree
mov
pop
push
aam
pop
adc
push
data16
popf
ja
sbb
sbb
xchg
outsb
mov
pop
or
ret
aas
iret
arpl
jbe
and
and
mov
js
test
push
scas
daa
rolb
sub
lahf
sbb
add
sbb
mov
pop
mov
add
jbe
arpl
dec
lahf
jne
faddl
cs
xor
add
push
ret
outsb
or
add
aaa
adc
inc
pop
addr16
sub
or
or
jo
loopne
inc
pop
pop
outsl
pop
or
push
dec
pop
das
inc
or
add
dec
rclb
push
or
mov
nop
pushaw
pop
fwait
cmpsl
pop
out
push
fwait
iretw
push
mov
jno
push
adc
stos
and
inc
incb
mov
or
push
mov
add
adc
adc
sub
outsl
insb
das
sbb
and
popl
or
stos
icebp
adc
in
testl
rorb
mov
add
test
outsl
sub
js
je
fistl
lea
inc
add
jbe,pt
scas
add
cmp
cmpl
mov
push
stos
jae
loopw
lods
inc
push
ja
jno
negl
push
out
cmpsl
dec
cs
or
ljmp
push
roll
cmpsl
inc
insb
and
mov
mov
mov
jbe
add
xor
jg
sub
rcrl
and
adc
movl
mov
sbb
dec
jmp
inc
push
sti
jmp
cmp
push
mov
lds
mov
aas
notl
iret
sbb
cmp
xlat
pop
inc
cwtl
mov
sbb
fiaddl
loope
subl
jo
sbb
setnp
cmp
push
xchg
dec
xchg
cmp
push
out
mov
enter
das
aas
mov
adc
jnp
jo
xor
jg
xchg
aad
xchg
push
arpl
adc
out
xor
push
push
add
sbb
jmp
pop
push
and
rorb
or
push
push
dec
and
dec
dec
dec
shrb
es
pop
xor
sub
jp
xchg
jl
loopne
dec
loop
xor
pop
adc
popa
jnp
pop
adc
das
dec
fwait
mov
pusha
jnp
adc
xlat
fidivl
movsb
stos
inc
lret
das
and
dec
movsb
dec
popw
jmp
call
rorb
or
jno
xchg
add
mov
jnp
cmpsl
pop
daa
popf
ret
fbstp
mov
jo
imul
shrb
mov
fcompl
sub
lcall
push
es
insl
div
adc
mov
iret
popa
jae
arpl
adc
daa
jecxz
push
jb
jns
rcr
stos
pushf
ret
scas
or
push
xorl
sbb
or
jo
movb
adc
adc
outsb
add
jne
lods
xchg
dec
sub
sub
pop
or
out
fistpll
es
aaa
mov
pop
fwait
cmp
out
jle
push
imul
jne
mov
pop
adc
xor
jno
xor
sbb
add
push
sub
ret
push
mov
or
push
adc
mov
cwtl
jl
push
lret
pusha
addr16
or
sbb
lret
mov
mov
dec
insb
jo
jns
add
popf
push
xchg
insl
mov
call
ret
insl
adc
stc
outsb
fnsave
cmp
mov
jns
dec
push
dec
jp
adc
or
sbb
and
icebp
dec
sub
push
ljmp
dec
push
jae
or
xor
cmp
mov
call
sub
adc
mov
cmp
and
xchg
pusha
test
adc
sbb
add
in
dec
mov
or
jmp
fstps
mov
sbb
and
cmp
inc
adc
sub
adc
push
inc
pop
lret
movsb
bound
inc
out
or
push
scas
lea
push
push
xor
push
out
push
scas
loopne
test
outsb
leave
xor
out
cltd
insl
jbe
adc
jmp
decb
xchg
sub
cwtl
mov
xchg
push
push
inc
sbb
or
and
inc
sbb
insl
jmp
xchg
and
inc
sub
mov
jmp
out
or
decl
jnp
cmp
test
movsb
arpl
adc
rcll
sbb
sbb
imul
aam
push
jne
insl
push
sub
inc
pop
les
mov
sub
inc
scas
and
pusha
and
xchg
or
inc
and
ret
ss
adc
push
rcrb
push
lea
movsb
jno
and
or
or
push
jne
lods
ret
and
xchg
imul
push
cmpsl
insb
mov
xor
add
inc
fs
outsl
dec
xor
add
push
orl
lock
ja
inc
jo
push
js
cmp
pop
addr16
push
insl
inc
fsubrl
mov
sbb
in
rorl
adc
ret
mov
sbb
mov
ficoms
jne
sub
insb
push
push
adc
dec
dec
sbb
sub
loop
mov
push
mov
stos
jnp
fidivl
inc
push
lods
pop
and
mov
gs
push
xchg
jle
imul
xchg
addr16
mov
pop
adc
cmp
sub
push
mov
call
adc
add
sbb
inc
insb
insl
xchg
sbbl
cmp
dec
fs
pop
gs
push
scas
cs
jb
push
xchg
aad
mov
xchg
adc
sub
dec
int
rorl
lods
sub
cmpsl
je
jecxz
pusha
jp
xchg
jecxz
and
pushf
or
les
and
mov
popa
pusha
lret
pop
or
adcl
mov
add
lret
or
loope
outsl
inc
pop
mov
add
or
jle
xor
inc
adc
jnp
push
add
adcl
xor
loop
or
or
add
fwait
push
insb
mov
psrad
es
addr16
pop
and
or
leave
js
or
cmc
or
ss
push
inc
jbe
pop
mov
or
xor
or
cmpsl
sub
pop
xor
roll
int
or
aaa
rorl
clc
jb
add
icebp
mov
push
enter
add
adc
add
pusha
mov
and
add
xor
jb
push
shlb
add
add
and
mov
cmp
jae
and
add
sub
mov
insb
arpl
test
add
fisttpll
daa
jl
sub
adc
arpl
loope
and
lahf
pop
and
add
sbb
pop
and
mov
sbb
sbb
push
pop
test
pop
sbb
imul
fsubl
or
outsl
data16
clc
test
gs
adc
push
test
mov
and
inc
xor
jbe
sbb
les
inc
imul
adc
adc
jae
arpl
outsb
fs
iretw
in
lods
inc
adc
sbb
mov
cmp
insl
sub
sub
and
in
popa
sub
and
adc
adc
mov
ja
testb
outsl
loopne
adc
nop
xchg
cld
imul
and
push
outsl
adc
fs
push
fidivrl
fsts
ret
cmpsb
sub
mov
pop
add
insb
negb
ficoml
or
cmp
inc
xchg
out
inc
or
and
and
sbb
in
push
mov
aad
cmc
push
pop
xchg
je
push
pop
inc
xor
inc
inc
mov
inc
loope
push
std
pop
sbbb
dec
xor
cltd
roll
pop
push
sub
inc
pop
out
xchg
and
daa
fstl
mov
xor
or
add
and
jnp
loop
mov
fstps
inc
inc
js
mov
sbbb
and
mov
outsb
mov
arpl
insl
adc
sub
push
mov
gs
inc
cmp
fs
xchg
ret
cltd
shll
in
popa
add
gs
loope
add
sub
mov
lret
inc
gs
pop
addl
sub
xlat
sbb
out
negl
out
mov
push
shll
inc
imul
sub
or
insl
mov
imull
xchg
sub
stos
pop
xchg
adc
outsb
dec
int3
pop
pop
mov
jp
arpl
sbb
outsl
insb
dec
dec
mov
and
into
dec
or
mov
js
out
sbb
dec
testl
rcl
scas
dec
jmp
add
sbb
inc
call
pusha
addr16
aad
and
fistpl
or
or
sub
ret
insb
int3
push
es
sub
ret
mov
xlat
sbb
cltd
adc
mov
pop
sub
cli
dec
sbb
and
add
sub
movsl
out
fcoms
inc
mov
sbb
call
inc
add
xchg
stos
rclb
xor
pushf
ja
adcb
sub
sbb
or
push
or
adc
cli
roll
dec
and
movl
pusha
lods
push
sbb
cmp
cmp
hlt
pop
or
cmpsb
and
push
inc
jo
or
add
dec
xor
shrl
add
pusha
wbinvd
fs
cltd
and
mov
mov
mov
push
jnp
or
add
xor
sub
and
mov
adc
push
ja
and
xor
das
inc
imul
sub
clc
dec
and
cmpsl
xor
dec
add
and
repz
insb
sbb
dec
test
jns
loop
xor
inc
insb
xor
popa
dec
jb
scas
pop
adc
enter
sub
sub
mov
popf
loopne
dec
in
push
mov
movsl
sar
and
push
dec
push
xor
inc
fwait
adc
inc
push
fimuls
fisttps
lea
divb
insl
movsl
or
pop
ret
xorl
je
sbb
movl
and
mov
jle
push
outsb
andl
xor
lods
loopne
xchg
push
insb
popa
jns
and
aam
and
adc
neg
and
jae
pop
enter
mov
pop
mov
add
arpl
or
movsl
nop
cmp
jae
lret
rorb
and
mov
jg
push
outsb
inc
outsl
or
adc
mov
aad
gs
test
dec
xor
shrb
ret
cmp
mov
dec
das
popa
jo
dec
xor
and
stos
sub
sbb
jne
cmp
xchg
dec
sti
cmpsb
or
add
cmp
sbb
and
sbb
push
mov
cmp
inc
mov
mov
imul
inc
sub
mov
mov
pop
pop
push
fcmovb
inc
movl
sub
jnp
xchg
inc
sarl
iret
sbb
pusha
add
add
xchg
pusha
cmpsl
add
cmp
mov
in
xchg
dec
cmp
hlt
mov
mov
lcall
xor
or
std
daa
adc
xchg
dec
cmp
dec
repz
sbb
sbb
add
mov
in
push
sub
adc
loopne
cmpsl
cwtl
sbb
sub
add
mov
push
push
loope
jno
test
stos
clc
add
fwait
jg
push
jo
push
push
inc
call
lods
repz
fwait
pop
fisttpll
cmp
insb
outsb
lea
dec
mov
inc
out
cmp
sub
add
or
and
inc
or
fistps
add
or
add
mov
sbb
mov
dec
fadd
sbb
daa
ficoms
in
sub
sbb
addl
pop
bound
pop
mov
nop/reserved
and
fs
xchg
mov
or
iret
and
add
mov
sub
int
add
mov
mov
push
and
in
test
mov
loop
sub
scas
inc
push
sbb
shrl
push
cmpb
fdivrs
sub
sbb
sbb
inc
mov
fdivs
adc
add
shrl
mov
and
or
cli
and
imul
jne
sbb
imul
sbb
imul
hlt
icebp
sub
sbb
stos
dec
lea
cld
dec
dec
and
rcl
addr16
push
pusha
pop
cmp
sbb
add
aad
inc
scas
shll
push
outsb
cmp
or
mov
les
sub
subb
dec
adc
push
aas
dec
jae
in
adc
sub
and
lods
pop
or
and
adc
jns
loope
jo
add
mov
xchg
mov
ret
xlat
adc
sbbb
out
fdivs
cltd
popa
sbb
loop
xlat
pop
sbb
mov
pop
cmp
cmpsl
fcmovbe
mov
inc
pop
jno
sub
pop
cmp
outsl
or
sbbl
sbb
mov
mov
xchg
inc
xchg
jecxz
nop
inc
inc
jg
fmuls
add
imul
leave
mov
mov
sbb
and
mov
sbb
mov
mov
daa
xchg
mov
inc
insl
ret
xchg
insl
aam
das
jbe
loope
or
popf
xchg
sbb
jb
stos
push
inc
adc
lds
addr16
mov
xor
ja
dec
outsb
inc
mov
and
mov
movsb
sbb
lea
inc
les
ds
or
scas
jno
adc
xchg
test
pop
pop
jnp
and
push
dec
add
mov
jg
fstpl
sub
push
pop
in
rol
cmp
push
outsl
sbb
roll
pop
adc
adc
inc
sarl
jo
mov
and
mov
cwtl
fildl
sbb
xor
sbb
dec
shlb
data16
pop
inc
fisubl
cwtl
jmp
dec
or
or
pop
jmp
ret
aaa
adc
sahf
aaa
push
or
mov
and
lret
and
dec
pop
push
cmp
dec
int3
adc
mov
sub
rcrb
add
push
repnz
jo
add
fmull
and
std
lds
or
and
aaa
and
test
push
add
inc
shll
push
rclb
push
gs
daa
pusha
inc
pop
jmp
test
xor
incl
inc
add
dec
add
add
pusha
sar
popl
cmp
xchg
add
imul
test
jo
inc
pop
add
nop/reserved
dec
repz
inc
syscall
push
mov
adc
push
outsb
je
lods
lods
nop
lahf
jo
add
mov
in
mov
xchg
pop
das
cwtl
scas
in
inc
inc
add
mov
les
aam
xlat
mov
or
or
mov
dec
inc
dec
dec
push
fldt
jle
or
bound
cltd
fmul
rcrb
aam
xchg
clc
sub
lahf
je
dec
data16
cmp
sahf
outsb
in
sbb
add
sub
pop
sahf
inc
dec
gs
jo
mov
jns
cmpsb
int3
inc
jae
mov
data16
or
add
xor
or
add
add
add
add
inc
add
inc
xchg
hlt
call
int
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
loopne
dec
add
int3
dec
add
