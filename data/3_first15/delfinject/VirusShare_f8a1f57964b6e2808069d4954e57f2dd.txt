xor
inc
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
pushl
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
addl
ret
jmp
jmp
add
ret
ret
push
xor
pop
ret
push
add
add
ret
add
popl
push
pop
push
xchg
push
pop
pop
push
xchg
push
pop
push
xor
pop
xchg
xor
xchg
mov
pushl
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
pop
push
xchg
ret
push
pop
ret
xchg
popl
push
ret
push
push
xchg
add
mul
xchg
xchg
xchg
add
add
ret
push
xchg
add
ret
pop
push
xchg
ret
push
addl
pop
ret
push
pop
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
push
push
call
push
push
push
call
push
push
push
call
call
push
push
push
call
call
push
push
push
call
push
call
push
push
call
pushl
xchg
add
call
push
push
push
push
call
push
call
push
push
call
push
push
call
push
cmp
jae
ret
pop
call
cwtl
popf
addl
cwtl
mov
cmpsl
jbe
mov
shlb
mov
pop
fdivrs
call
cmc
fsubs
bound
test
iret
inc
mov
inc
frstor
lock
adc
imul
cs
les
cmovne
sbbb
pop
sub
inc
scas
inc
pop
imul
lret
cltd
clc
pop
je
mov
sbb
insb
push
out
fldcw
lea
cmp
mov
into
jne
push
loop
jg
jg
cmpsl
push
cs
sbb
leave
sub
mov
mov
cmpb
inc
mov
adc
cwtl
jnp
bound
cmp
jecxz
mov
inc
mov
sub
cmp
movsb
fiaddl
call
call
xor
cwtl
lret
imul
xlat
adc
and
mov
leave
mov
call
nop
cli
mov
cld
jmp
cmp
dec
xor
popa
lods
jmp
mov
scas
jl
mov
out
arpl
std
add
jecxz
cmp
ret
mov
lods
cmc
push
xchg
rorb
das
mov
jl
and
pop
cmp
push
mov
ljmp
in
xchg
inc
dec
inc
add
inc
fwait
xchg
xchg
or
daa
out
adc
xchg
adc
mov
xchg
addb
dec
js
insb
mov
shlb
push
sarb
std
fnstenv
jmp
test
sbb
push
lods
mov
pop
leave
add
imul
or
ja
test
test
dec
rcrl
pop
lret
mov
maskmovq
testl
movsl
fwait
inc
jb
mov
cmp
addb
fidivl
mov
mov
mov
fsubrs
cld
dec
pop
in
lahf
test
cmp
adc
mov
sub
jb
test
movsb
fs
out
mov
mov
lret
mov
mov
push
push
imul
adc
xchg
dec
xorl
and
inc
int
fldcw
and
jmp
inc
sub
pop
out
inc
mov
inc
ja
lahf
mov
xlat
jecxz
cmp
es
inc
adc
mov
mov
bound
mov
xor
nop
or
lcall
cli
subb
pop
test
popa
outsb
jae,pn
adc
add
shlb
adc
inc
repz
dec
or
and
pop
jae
jle
sub
jmp
push
xchg
fdivrl
das
loop
lods
or
loop
loop
adc
imul
xlat
pop
xor
and
cmpsb
lcall
mov
je
dec
lods
mov
incl
mov
outsb
inc
sahf
sub
inc
mov
adc
pop
or
stos
jbe
mov
inc
xor
cmpsb
inc
add
xor
add
xlat
inc
loopne
xor
jecxz
sar
fst
push
cmp
aad
push
mov
xchg
mov
dec
outsl
or
shr
push
repz
cmp
lret
mov
cmc
add
lods
lods
mov
push
cmp
mov
mov
imul
inc
sub
pop
rcl
jl
loope
stos
push
fs
out
xor
stos
push
out
sub
jbe
push
ljmp
ficomps
inc
cmpsb
pop
xor
sarb
call
cmpsl
adc
inc
xchg
fildl
pusha
pop
es
or
xchg
fldcw
and
call
mov
js
repz
cs
lret
int
mov
adc
cmc
cmp
and
fwait
arpl
and
in
popa
mov
sbb
fcoms
and
push
popa
ss
or
leave
mov
outsb
push
fs
mov
dec
sub
fs
andb
les
mov
fcomps
loop
inc
xchg
scas
mov
push
cmp
gs
es
sbb
ds
int
xor
jp
cwtl
xchg
sbb
xchg
adcb
filds
imul
mov
xor
push
fcom
repnz
jge
movsl
sub
les
std
test
xor
pusha
mov
addr16
lcall
mov
pop
dec
fisubs
lock
out
push
inc
stos
popl
push
mov
jmp
std
or
push
in
sbb
js
andl
imul
icebp
jg
push
gs
pop
sbb
mov
test
xor
sbb
stc
in
ss
das
xchg
imul
sbb
mov
jne
adc
xlat
cld
sbb
ficomps
into
pop
push
push
push
lea
xor
mov
shld
je
flds
mov
jns
lock
repnz
mov
popa
adc
jp
jae
mov
fildll
lahf
iret
push
jae
test
outsl
sarb
test
daa
sarl
pop
das
xchg
iret
add
or
fnstsw
nop
imul
jg
adc
sbb
mov
bound
andl
fadds
ret
dec
adcl
lcall
mov
push
or
out
lret
add
mov
aas
sub
ror
dec
rcrb
pop
in
or
movsl
cmp
and
push
jb
ret
div
fidivl
out
movsb
cmp
jae
hlt
jne
jg
dec
dec
sub
jle
add
in
fistpl
lods
pop
dec
xor
or
mov
xchg
icebp
add
push
push
cmc
ret
std
xchg
sti
dec
cmovg
pop
cmp
ja
jno
lock
imul
bound
rorl
insb
and
mov
sub
dec
mov
mov
adc
gs
mov
call
adc
mov
lock
stos
shrb
xor
lods
push
shlb
outsb
lret
cmp
idivb
cld
cmp
fwait
adc
dec
mov
xchg
fsubr
iret
xchg
sub
sub
xchg
insb
inc
rorb
cmp
cmp
inc
sbb
and
sbb
xchg
mov
inc
lds
cwtl
cmpsl
jb
adc
dec
popf
mov
xor
dec
xor
and
cli
add
push
push
dec
xor
idivb
xor
rcrl
in
mov
int
fstpl
and
xchg
add
jge
in
mov
outsl
fwait
mov
stc
cmpsb
jle
in
popa
fidivl
fisubrs
jo
inc
sbb
sti
xchg
rep
jne
pusha
sbb
push
push
mov
fnstenv
sahf
jge
fcmovne
cmp
jae
inc
mov
lahf
in
mov
push
push
cwtl
js
aas
int
outsb
fs
jmp
jae
inc
jo
push
add
adc
and
cli
inc
mov
adc
sarl
sahf
loope
rcll
out
outsl
gs
mov
jecxz
jle
and
mov
leave
out
rorl
xchg
push
repz
fs
adcb
jge
mov
movsb
dec
je
cs
push
test
rorl
mov
pop
push
dec
jmp
and
divb
push
scas
pop
inc
scas
das
add
xchg
pop
pop
dec
clc
mov
push
out
pusha
lds
inc
pusha
sbb
ja
xchg
adc
sbb
pop
imul
lods
mov
bound
sar
xchg
lret
out
adc
sub
xchg
aad
insb
icebp
call
rclb
pop
adc
jge
rcrl
scas
add
mov
ret
pusha
jno
repz
fs
inc
xchg
dec
addr16
push
push
aad
ret
vpaddusw
aas
arpl
fdiv
inc
jne
loopne
or
mov
push
movsb
and
es
push
cmp
push
push
insl
aam
jnp
repnz
pop
ret
lods
ljmp
pusha
aas
adc
jmpw
inc
imul
outsl
mov
les
cmp
jnp
add
lret
mov
jmp
sbb
fnstenv
mov
xor
mov
out
lea
or
xlat
jb
mov
or
jbe
in
popf
pop
outsb
int3
mov
pop
inc
sub
in
and
push
mov
inc
add
ljmp
jmp
cmpsl
cmpsb
je
mov
fstps
ja
pop
shrd
fdivl
popw
dec
xor
out
cmpsb
test
popf
rolb
xchg
and
cmp
fiadds
lret
sarl
adc
inc
roll
push
idivb
xor
sbb
mov
scas
clc
jle
leave
jnp
and
stos
nop
cli
enter
int3
cmp
jg
push
mov
inc
xchg
jecxz
hlt
xchg
push
cmp
loop
test
inc
fildll
lods
bnd
pop
xorl
scas
lahf
adc
jne
lea
hlt
cmc
push
aad
jns
jle
call
push
insl
or
cmpsl
rorl
jnp
sub
cmp
fistps
ja
mov
mov
adc
mov
or
xor
push
mov
divl
stc
adc
and
jg
cmp
mov
sarl
pop
pop
push
cmp
fsubs
and
lds
dec
int
gs
pop
cmp
jno
arpl
scas
inc
ja
aaa
jno
sbb
push
test
inc
mov
mov
push
insl
and
rclb
sbb
sarl
rcll
and
mov
data16
or
fbld
adc
add
mov
orb
pop
dec
adc
mov
ret
xor
jmp
aaa
cmp
cs
jb
adc
dec
mov
add
jae
cmpsb
aad
ljmp
sub
jne
pop
push
cmp
mov
adc
andl
ljmp
pop
mov
imul
lret
sbb
dec
xor
inc
leave
and
sub
cmc
insb
lods
sarl
xor
data16
and
jp
mov
outsl
jns
rcr
mov
push
test
addr16
dec
aas
and
aas
add
std
ret
xlat
rorl
xor
mov
jmp
push
jmp
insl
pop
xchg
fldz
jne
pop
inc
in
inc
add
icebp
ja
gs
aaa
and
fucomi
mov
aaa
js
movsb
scas
mov
mov
adc
add
iret
in
les
shll
movl
sub
push
or
lahf
enter
xor
pop
push
jae
and
cli
jle
mov
jmp
sbb
pop
popa
adc
dec
adc
and
insl
ss
and
imul
xchg
adc
gs
pusha
gs
and
out
rorl
mov
pop
dec
sub
push
xlat
in
mov
jecxz
ds
push
dec
push
mov
dec
mov
mov
nop
ss
mov
movl
inc
andb
lcall
mov
inc
fmuls
cs
lods
sub
mov
into
jmp
popf
mov
xchg
aad
mov
clc
add
and
sub
sbb
rol
xor
arpl
jae
fsubl
cli
addr16
das
xchg
sar
xchg
sub
mov
imul
andb
ficomps
loop
push
push
stos
or
out
imull
js
xchg
aas
into
or
and
xor
mov
jnp
push
stos
and
lods
out
hlt
movsl
pop
adc
jp
rol
xchg
outsb
test
mov
sub
in
lahf
mov
or
jle
xchg
repnz
push
mov
out
movsb
outsb
dec
jns
and
out
ficomps
int
sbb
aad
gs
lods
inc
daa
sub
sub
push
out
xchg
into
push
sti
xchg
xchg
ss
sbb
sbb
imul
mov
je
popf
aad
or
mov
mov
push
adc
add
ljmp
push
fs
xchg
test
jp
mov
mov
pop
pusha
pop
add
mov
xor
out
xchg
aam
xor
mov
add
cwtl
flds
sbb
insl
daa
jl
out
add
jae
sub
scas
lock
pop
das
and
lds
daa
inc
inc
sub
movsl
pusha
sub
adc
xor
cmp
inc
xchg
xor
pop
push
pop
cld
pop
stos
sub
mov
data16
sub
test
aas
mov
sbb
popl
stos
addb
iret
mov
jne
daa
cld
mov
popa
mov
cmp
pop
sub
or
rcr
jo
pusha
cs
scas
pushf
jle
push
and
in
daa
xor
pushf
int3
jcxz
or
xor
push
es
mov
and
jbe
movsb
mov
cmp
in
dec
mov
scas
ja
jmp
jle
pop
mov
pmaxsw
aas
fsubr
add
push
enter
sbb
scas
adc
push
popf
jmp
sub
mov
es
cmp
mov
inc
sub
loop
fistps
test
orb
cmp
mov
clc
adcl
dec
mov
adc
sarl
mov
loopne
mov
mov
push
or
insb
jge
dec
jno
fmul
add
in
cwtl
inc
cmc
lock
sbb
xor
xchg
lods
mov
popf
adc
frstpm(287
cvtps2pi
lahf
insb
setle
adc
stos
js
xchg
lods
inc
mov
arpl
jg
arpl
das
jne
lahf
scas
les
sub
jo
jbe
fnstsw
lock
xor
push
cmpsb
insb
testb
push
jo
lea
loopne
imul
daa
fcomps
cmpsb
std
test
bound
cltd
loop
js
mov
cmp
adc
cmpsl
jecxz
movb
shr
pop
sub
mov
lds
fisttps
xchg
jmp
call
dec
rcrl
cmp
mov
push
insb
mov
mov
mov
ds
and
push
outsl
xchg
popf
mov
xchg
adc
fucomi
xchg
mov
call
fwait
dec
fbld
loopne
cmp
xchg
outsl
incb
test
sbb
adc
add
xchg
add
inc
addr16
fs
out
mov
jne
dec
out
lahf
ljmp
sub
mov
aad
inc
pop
negb
push
mov
repz
sti
cmp
mov
mov
ds
and
sub
cmpl
mov
adc
push
or
mov
mov
rorl
pop
bound
sti
xor
popf
push
cmpsl
sahf
pop
jmp
in
sub
jl
aaa
scas
lcall
inc
mov
jnp
ljmp
adc
dec
inc
sarb
dec
sbb
adc
inc
sub
das
dec
subb
loop
sti
jae
cld
mov
mov
je
adc
sarl
add
leave
clc
movsl
neg
and
pop
xchg
xchg
fdivr
dec
ror
cld
outsl
outsb
sbb
out
cmpsb
in
xchg
sbb
das
js
fisubrl
fdivrl
adc
jb
js
xchg
jae
out
sub
das
xor
rol
jle
loope
out
shlb
stos
or
pusha
fisttps
lds
test
sub
dec
sbb
jns
mov
mov
loop
push
out
fisttps
or
cs
and
mov
or
dec
roll
filds
popa
xor
lods
sbb
pop
and
gs
jno
mov
ds
jecxz
lret
adc
inc
aas
mov
pop
jo
mov
inc
idiv
das
sahf
aas
mov
xchg
loope
jge
mov
lahf
add
mov
lods
cmp
cmc
aaa
add
mov
shl
test
orb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
or
repz
jp
dec
adc
dec
adcl
jg
xor
cs
enter
movsl
repnz
push
inc
or
jmp
mov
lds
adc
cmp
bnd
mov
hlt
push
pop
push
xor
and
fiaddl
cltd
or
or
sub
pushf
lret
testl
and
ss
loopne
fmull
fstpl
jno
xchg
or
scas
dec
imul
jp
add
fcomps
adc
fldcw
dec
mov
std
movsb
movsb
ret
out
push
inc
xchg
es
mov
loope
negl
mov
xchg
jmp
mov
xor
xor
mov
dec
dec
test
jecxz
mov
mov
ds
scas
das
pop
nop
xlat
mov
addr16
xorl
test
or
mov
je,pn
sbb
and
stc
pop
rcll
loope
push
jmp
jbe
cmpsb
mov
dec
dec
aaa
push
repnz
test
inc
dec
mov
add
incl
jp
xor
dec
call
or
jae
jl
adc
mov
adc
cmp
in
and
jge
xor
scas
push
rorb
mov
in
push
mov
mov
ljmp
sbb
pop
cmp
decl
cmpsb
jl
fistpll
mov
data16
pop
shrl
test
notl
xor
mov
out
xor
andb
data16
mov
outsb
pop
mov
xor
scas
sti
inc
call
adc
lcall
inc
into
int3
mov
mov
outsb
shl
jmp
push
aas
push
adc
pop
pop
hlt
adc
das
jbe
and
mov
sbb
xor
push
jns
xor
fucomi
out
xor
adc
pop
cmpxchg
push
pop
bound
xchg
sbb
pop
das
and
test
inc
fsubp
hlt
sbb
push
inc
out
inc
xchg
pop
rorl
xor
inc
clc
repnz
mov
pop
sub
sbb
mov
movsl
hlt
dec
dec
sbb
xchg
cltd
ror
lahf
out
sub
and
sub
je
sub
push
mov
stos
cs
and
cld
push
pop
es
leave
inc
adc
jb
cmp
cmp
filds
jo
add
movsb
mov
sub
adc
fdivrl
fdiv
push
xor
std
and
setnp
sbb
mov
insl
jbe
std
xor
repnz
sub
xor
enter
cmp
add
inc
pop
push
lock
dec
mov
jb
scas
inc
pop
movsl
fstpt
xchg
ret
cli
adc
dec
sbbl
or
cmc
dec
sub
sbb
push
decl
sub
in
cwtl
push
sub
mov
stc
ljmp
xlat
jle
out
mov
sbb
ret
jo
loop
minps
imul
shlb
xchg
push
subl
rcl
movd
cmp
pop
ljmp
icebp
push
les
jmp
cld
and
xor
pop
mov
call
mov
fmull
mov
imul
and
in
mov
lret
inc
jns
push
movsb
xchg
pop
or
dec
cmp
xor
in
rorb
int3
inc
add
sub
mov
xchg
ss
xchg
adc
js
sbb
fdiv
mov
pop
in
jno
dec
std
imul
lahf
aam
aam
xrelease
pop
adc
pusha
dec
pslld
int
pop
xor
fmul
mulb
sub
clc
test
bound
fists
cmp
cwtl
sahf
adc
sbb
mov
sbb
xchg
mov
stc
sub
cld
mov
push
sbbb
jecxz
xchg
cwtl
insl
std
cmpsl
adc
out
xchg
xor
in
ds
out
xorl
push
in
xchg
rcrl
arpl
mov
jle
xchg
push
pop
sub
adc
adc
cmp
out
and
push
xchg
xchg
inc
add
adc
insl
gs
cmp
jle
push
loop
inc
xor
or
cmp
push
cmp
fnstsw
mov
push
popf
adc
push
cmp
test
adc
pop
mov
push
push
cmpsl
mov
cmp
cli
mov
addr16
aas
rorl
push
popf
loope
mov
gs
sub
sarl
cltd
cld
mov
in
add
push
scas
fldenv
sub
add
mov
xchg
stc
xchg
adc
push
sbb
repz
incb
setge
scas
retw
or
xlat
xlat
rolb
pop
scas
jg
mov
cmp
andl
addr16
loopne
movsl
mov
xchg
jnp
std
jno
and
and
addr16
loop
xchg
jecxz
in
scas
inc
add
lcall
insb
out
shlb
fisubrs
or
nop
jmp
ljmp
xchg
push
call
aas
mov
xchg
out
jp
pop
add
js
jne
fsubrl
into
mov
orl
and
rcl
mov
add
repz
cmc
out
xchg
les
outsb
sub
jo
filds
and
sbb
fiadds
mov
adc
mulb
mov
mov
cld
mov
sahf
fucom
stos
dec
orl
mov
add
scas
aas
mov
inc
inc
dec
loopne
shrb
lret
push
icebp
inc
mov
sbb
daa
ja
lahf
fadd
inc
xchg
aad
stos
cltd
and
or
arpl
sti
addr16
pusha
scas
mov
adc
or
inc
xchg
rcll
add
or
fdivrs
jmp
sbb
sub
xchg
xor
push
push
pop
mov
lods
negb
push
std
repz
mov
stc
fmull
sti
sub
std
push
jecxz
repz
cmpsl
adc
pop
xor
call
imul
jo
lahf
faddp
sub
mov
aam
push
adc
pop
data16
dec
mov
cmc
xor
stc
pop
jge
mov
mov
out
adc
punpckhbw
in
sub
xlat
adc
rol
mov
add
sub
test
or
xchg
arpl
icebp
lahf
xor
sub
test
int3
and
popf
push
sub
sub
mov
jl
dec
cs
sti
insl
out
adc
decl
mov
mov
loopne
outsl
pop
push
icebp
mov
daa
in
or
aad
testl
and
in
in
sub
jno
lahf
xor
test
push
test
add
jnp
nop
add
arpl
mov
testb
leave
mov
and
mov
rorl
adc
jns
test
call
cmp
push
rolb
mov
pop
xlat
dec
jbe
dec
dec
sub
cmp
out
fdivl
fs
push
jmp
sub
pop
mov
lret
lea
scas
cmp
jno
dec
pop
or
out
aad
cmp
fstl
aam
insl
imul
sub
sub
mov
push
sub
mov
xor
push
sub
xor
fistpl
mov
in
nop
ss
push
push
push
mov
or
shll
xor
jl
pop
test
mov
dec
mov
mov
xchg
sbb
and
loop
arpl
xor
in
cli
test
xchg
sub
enter
xchg
shr
test
mov
sub
lahf
cmpl
pop
pop
out
mov
scas
and
aas
mov
loop
pop
mov
cli
stos
xchg
sbb
sbb
nop
add
cltd
and
lea
pop
xchg
ljmp
or
cld
stos
mov
je
movsb
arpl
xchg
cmp
sbb
outsl
push
test
xchg
sti
mov
mov
bound
gs
cmp
xor
xlat
int
and
arpl
push
or
dec
xchg
and
add
fildll
adc
mov
xchg
mov
ja
and
or
roll
jns
mov
xor
imull
mov
das
aam
inc
ror
gs
lds
fnstcw
or
orl
pop
imul
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
pop
sbb
pop
ret
inc
mov
lret
adc
movsl
aas
cmp
data16
lcall
or
push
push
jmp
add
push
mov
jmp
out
inc
jno
xchg
shll
xchg
dec
and
fildll
sub
call
dec
aad
push
push
add
jae
icebp
mov
das
pop
push
mov
jl
jmp
test
mov
icebp
push
push
clc
cmpl
push
pop
push
xor
push
dec
xchg
aam
xchg
cmpsl
pop
fimull
cmp
or
mov
test
pop
xchg
pop
push
test
push
push
cbtw
dec
outsl
dec
lock
ss
clc
into
mov
jne
inc
sub
iret
lock
adcl
lcall
pop
sarb
out
fxam
jae
sbb
mov
xchg
push
daa
gs
je
sahf
pop
hlt
cmp
add
scas
mov
mov
add
cmc
fdivs
inc
sti
lcall
and
pop
sahf
sub
adc
lock
sub
addl
xor
decb
je
outsb
repz
xor
incl
aas
mov
push
pop
mov
jle
aas
leave
dec
mov
inc
adc
aaa
rorl
xor
push
ror
pusha
push
jbe
inc
xchg
pop
int
out
cwtl
mov
cmp
cld
cwtl
ret
sbb
push
jecxz
mov
test
mov
jns
xor
aas
jg
cwtl
in
shll
xor
jmp
mov
cltd
mov
gs
xchg
xchg
imul
lea
stc
repz
xor
lcall
repnz
jne
or
jno
sub
add
sub
jge
cmp
inc
cli
lret
fs
add
or
jle
cmp
push
idiv
outsb
pop
push
mov
xchg
pop
pusha
mov
sub
fsubr
sbb
push
fistpl
or
sub
pushf
mov
sbb
ja
xchg
mov
sarb
add
push
lods
aad
inc
jb
mov
mov
les
imul
pop
or
sarb
sti
add
jne
in
shl
leave
stos
daa
cmp
dec
jne
pop
fs
insb
arpl
movsl
push
push
loope
in
inc
xor
xchg
or
cmp
sub
or
pop
add
sub
enter
cmpsl
push
fwait
push
inc
lea
arpl
lods
adc
insb
cmp
loop
fwait
negl
roll
cmp
jnp
enter
xor
daa
xor
cmc
outsb
shl
push
or
jns
push
xchg
pop
imull
or
hlt
jo
adc
js
or
shll
test
lds
push
and
add
cmpsl
imul
int3
out
hlt
jae
pusha
adc
in
push
sbb
sbb
inc
jp
jecxz
mov
in
sub
sub
mov
dec
jb
cmp
cmc
xchg
add
stos
outsb
cmp
lods
jmp
add
mov
mov
sub
jno
faddl
sbb
cmp
into
adc
xchg
jmp
call
testl
into
out
push
and
imul
lcall
cmc
or
pop
push
dec
xor
sub
cmpsb
push
mov
pop
or
mov
xchg
mov
mov
rorb
cmpl
xchg
add
and
add
mov
jg
mov
mov
shll
mov
lret
and
imul
xchg
int
sub
inc
shl
xor
xchg
inc
jno
insl
adc
divl
xchg
pop
addr16
ss
jp
xlat
loope
scas
ja
mov
mov
ficomps
ret
shrb
test
lods
mov
daa
sbb
test
jns
pop
and
cmpl
loopne
aaa
inc
dec
add
mov
xchg
push
cmpsl
and
xor
stos
test
imul
sub
pop
add
call
ret
rclb
in
std
arpl
sarl
inc
and
and
fs
dec
es
or
fcmovne
sub
sbb
ja
std
fucomi
push
cld
out
push
mov
jo
xchg
call
xchg
jns
mov
pop
push
mov
mov
hlt
addr16
out
in
push
clc
sbb
nop
pop
mov
cs
hlt
lret
rorl
ret
insb
push
dec
pop
xchg
fsubr
pushf
stos
mov
lret
aad
aam
scas
xor
push
hlt
shl
adc
mov
clc
push
ljmp
add
mov
aam
jp
sbb
fldt
push
dec
sarl
gs
and
sub
push
sbb
xor
clc
scas
movsb
rolb
add
mov
xor
mov
test
sub
test
push
movsl
leave
cmp
mov
inc
nop
data16
stos
es
jne
aas
addr16
loop
mov
pop
pop
fmul
lret
xchg
outsb
xor
inc
je
jmp
movsl
sbb
out
cltd
jo
inc
xchg
push
in
push
add
lret
jecxz
imull
xorb
mov
mov
push
mov
fdivp
pop
add
jg
test
cmc
mov
mov
cwtl
jecxz
fcomp
dec
adc
inc
mov
mov
xchg
fs
sti
add
inc
and
decl
xchg
stos
test
or
pop
add
test
test
and
daa
dec
mov
jo
pop
testb
ds
sub
jge
adc
sub
push
clc
push
into
orb
xchg
inc
movsl
js
repz
je
ja
cmp
rcl
and
push
testl
inc
mov
or
les
dec
sbb
jge
mov
cltd
xchg
je
decb
xor
fisubs
xor
mov
jns
iret
ret
jle
loopne
sbb
imul
mov
adc
xchg
rolb
lods
sub
adc
out
inc
in
dec
in
aas
pop
add
mov
xchg
jmp
dec
lahf
leave
icebp
mov
pop
mov
add
js
sub
lock
lock
xchg
lock
or
and
das
add
push
mov
dec
xchg
dec
pop
mov
pusha
loopne
cltd
rolb
ret
xchg
jnp
add
imul
ret
jbe
mov
lods
jbe
lcall
xchg
gs
and
scas
lahf
mov
add
cld
mov
and
jge
sub
movsl
mov
add
jb
shrl
sbb
dec
in
jb
mov
lods
push
mov
push
sub
push
sti
mov
in
pop
dec
xor
mov
stos
xchg
or
xor
push
push
dec
jp
dec
xor
out
ljmp
push
cld
adc
popa
cmp
pop
mov
call
dec
call
outsl
in
dec
out
movsl
lcall
out
ret
aad
and
data16
lea
pop
outsb
pop
lret
fimuls
pop
fwait
aas
je
cli
mov
jae
movsb
fs
mov
xchg
mov
mov
dec
movsb
ja
jge
or
dec
xor
imul
mov
add
mov
jnp
rol
ljmp
mov
mov
pop
stos
ljmp
cli
ret
adc
lcall
es
xchg
int3
roll
push
mov
mov
inc
or
push
js
pop
xor
mov
sub
scas
in
add
or
sti
xor
mov
stos
lock
adcb
popf
idivb
cmp
scas
xchg
push
sbb
popa
scas
mov
je
pop
lcall
repz
adc
xchg
sbb
sub
outsl
in
dec
out
movsl
lcall
cmpsl
sub
lods
mov
dec
lea
pop
lds
mov
fcomps
or
aam
sub
cwtl
xor
dec
ret
stos
adc
lea
movsb
ja
jge
or
cs
jb
lock
std
add
jae
mov
jg
arpl
jmp
lds
xor
out
lcall
orb
out
fwait
dec
and
sbb
testb
push
into
in
pop
pop
hlt
push
movsl
sbb
xchg
sbb
mov
jne
stc
insl
pop
ret
pop
inc
xchg
push
cwtl
or
xchg
push
cmp
test
sti
dec
dec
shr
maxps
and
inc
aam
loop
loope
in
mov
shlb
xchg
outsb
dec
or
stos
popf
cmp
mov
mov
pop
cmp
cmpsb
jle
push
mov
xor
mov
ljmp
pop
mov
pop
ja
inc
and
jmp
cwtl
cli
push
and
iret
jge
out
test
jnp
cmp
aam
repnz
sti
push
ss
xchg
dec
mov
fstps
xlat
sbb
jb
hlt
jno
lods
jae
pop
lds
repz
push
mov
mov
int3
jge
xchg
mov
sarl
push
aam
mov
mov
out
push
pushf
or
les
addr16
dec
scas
mov
ds
stos
repnz
xchg
inc
lea
in
xchg
dec
rolb
movb
loop
out
pmulhuw
pop
and
jl
jle
stos
sbb
xor
xor
shl
es
loopne
icebp
dec
inc
jnp
sub
jb
dec
aad
cmp
bound
test
data16
sub
out
and
push
mov
cwtl
mov
mov
popa
out
xor
push
xchg
nop
and
pushf
fcom
and
push
dec
push
add
pop
cli
dec
adc
out
mov
test
cmp
loopne
mov
pop
jbe
pop
dec
imul
cwtl
fldl
or
iret
mov
push
push
popf
pop
jecxz
je
lahf
pusha
sub
add
fucomip
shrb
testl
popa
lret
cmp
cmpsb
sahf
sarl
mov
jns
cmp
sub
test
pop
and
add
jbe
hlt
jne
fs
jecxz
imul
pop
dec
outsl
popf
and
dec
push
push
or
push
dec
mov
mov
sbb
cld
mov
jno
andb
xor
punpcklbw
enter
fdivrl
inc
push
push
push
lcall
push
adc
cmc
jae
adc
pop
cwtl
outsb
cmp
in
sub
mov
jae
inc
xchg
sbb
add
pushf
pop
push
inc
xor
arpl
and
pop
mov
out
repz
push
cmp
sbbl
cwtl
push
pop
es
or
mov
jmp
pop
mov
sub
cli
gs
movsl
repz
cmp
out
or
dec
jge
dec
dec
mov
push
mov
mull
out
insb
fldenv
or
push
ljmp
lret
ljmp
mov
inc
cwtl
les
imul
rorl
out
and
stos
lea
pushf
out
sub
test
xor
in
sbbb
add
lods
loopne
mov
stos
jl
jge
iret
hlt
inc
pop
xchg
out
sbb
xor
lahf
sbb
sbb
jbe
mov
fidivl
subl
pop
dec
mov
scas
mov
pop
fcoml
and
fs
xchg
je
call
pop
jbe
repz
nop
inc
and
insb
jne
pusha
sahf
fldcw
xorl
sbb
lds
xchg
push
outsl
push
mov
jns
pop
add
xchg
and
xor
sbbl
mov
cmpl
fs
jl
out
inc
roll
pop
jno
push
push
or
jp
jne
xchg
xchg
scas
cli
push
ds
das
out
and
popf
mov
sub
or
outsl
movsb
sti
mov
adc
cli
adc
add
and
or
jae
cmc
sub
xlat
nop
aas
mov
jp
js
std
or
fldt
jae
es
cmp
aad
sbb
xor
fsubrs
inc
jae
mov
movsb
xor
sti
sbb
in
mov
mov
clc
ret
push
push
mov
push
cmp
loop
and
sbb
cmc
mov
or
cmpsl
popa
push
cwtl
add
dec
out
scas
ds
hlt
mov
js
mov
lret
ds
loop
push
fisubs
mov
movsb
sub
jp
sub
or
add
adc
push
add
aad
sbb
pop
lcall
shl
movsb
inc
fcmovb
push
xchg
jno
insl
scas
jne
mov
pop
push
push
xchg
inc
and
mov
xchg
xchg
movsb
addr16
hlt
jl
das
jmp
push
push
cmp
mov
or
test
mov
fbstp
jnp
lods
dec
mov
mov
xor
rorb
ss
pop
aaa
cmc
push
imul
adc
cmp
mov
inc
jns
jp
in
jp
pop
mov
decl
ds
pop
inc
shlb
ss
mov
sarb
lahf
mov
ret
push
stos
fcmove
outsb
imul
or
dec
and
mov
add
inc
fistps
adc
cmp
sbb
mov
sahf
dec
push
pushf
inc
sub
loop
pop
add
cmp
jae
or
mov
sbb
adcl
or
mov
adc
mov
aas
adc
or
out
pop
ret
rol
clc
jecxz
cltd
pop
div
imul
fsubr
dec
sub
out
into
fcmovb
pop
adc
jmp
cld
add
ret
dec
push
push
mov
test
mov
clc
cmpsb
lahf
divb
call
push
xchg
aaa
cmpb
mov
fwait
outsl
lea
test
imul
outsb
cld
test
int
test
or
ss
xorb
xor
inc
push
or
imul
mov
mov
rorb
add
test
clc
push
xor
ds
jbe
push
subl
inc
mov
sti
test
sub
xor
out
popf
imul
sbb
stos
stos
fwait
cmp
or
aad
jnp
cwtl
je
push
nop
pop
cmp
ret
loop
mov
sahf
cld
enter
movl
lret
fcoml
xchg
ret
push
xor
pop
ret
movsl
iret
inc
std
lock
add
je
call
dec
jl
and
cmp
add
in
leave
dec
adc
loop
mov
jns
ss
cs
cld
xchg
stos
and
outsb
lods
sbb
ljmp
loope
sbb
jecxz
mov
jns
shlb
xor
clc
mov
sub
cmp
and
or
push
ret
fldt
int
add
lods
dec
ds
mov
lret
adcl
in
inc
enter
out
scas
sarl
rcrl
cs
jecxz
mov
add
sbbb
rol
mov
ret
pop
add
subl
fstps
inc
dec
or
icebp
sbb
xchg
pop
pop
inc
out
pop
mov
fnstcw
push
and
xchg
mov
jl
inc
jbe
lock
fwait
push
mov
insl
rorl
ficoms
test
mov
scas
jno
outsl
push
mov
lods
sub
orb
pop
nop
sub
movb
call
enter
les
lcall
dec
daa
addr16
sub
push
inc
mov
xorb
xor
filds
fisubs
fcoms
test
adc
cmp
out
rcll
xor
outsb
jp
pop
lcall
xchg
push
or
popf
fs
mov
adc
sbb
es
and
mov
pop
inc
push
mov
loop
push
jb
int3
add
pusha
lock
in
adc
sbb
lret
out
sbb
dec
nop
gs
cmp
mov
jp
mov
mov
fdivrs
add
cmpsb
mov
cmp
leave
sbbb
pop
add
jbe
cmp
and
mov
pop
xor
std
lcall
pop
dec
sub
and
test
pushf
xchg
in
ret
pop
jne
jge
xchg
fbstp
push
jg
loop
ja
xchg
pop
or
sbb
outsl
ret
ljmp
popf
lds
jns
jns
pop
inc
imul
not
or
sub
push
lcall
mov
fldt
cmp
cmp
sti
nop
imul
shll
mov
push
out
push
movl
mov
fwait
mov
and
test
divb
fimull
push
adc
mov
out
fwait
cmp
aad
or
jo
dec
movsl
loope
into
popa
lret
cmp
pop
push
jb
mov
shr
xchg
das
mov
pusha
inc
mov
cmpsb
jo,pn
addr16
or
mov
movsb
inc
jno
out
sbb
popa
mov
and
mov
inc
cmp
repnz
inc
xchg
jmp
popf
adc
lahf
mov
or
add
dec
push
les
push
repnz
xchg
pop
mov
jp
pop
cmpsl
push
sub
stos
xchg
push
jg
lds
outsl
cmc
lahf
push
inc
push
sub
aaa
add
mov
xlat
add
pop
adc
dec
push
insl
out
or
cwtl
lods
xor
popf
pop
dec
lock
out
into
lods
subb
xor
js
pop
or
hlt
add
dec
and
dec
xchg
jle
cmc
xor
das
icebp
or
aaa
sub
pop
ds
jecxz
xchg
mov
lret
mov
movsl
sbb
push
scas
cmpb
mov
mov
inc
adc
adc
cwtl
rol
mov
inc
popf
sbb
popf
add
inc
enter
gs
jecxz
lcall
addr16
jl
pop
divb
mov
int3
adc
inc
or
inc
adc
inc
notl
into
pop
xor
in
pop
out
sbb
mov
cmc
jae
das
nop
int3
adc
imul
pop
bound
jmp
fsubs
mov
orl
popa
stos
int
cmpsb
jl
lret
push
out
mov
inc
imul
andb
clc
icebp
bound
repz
imul
sbb
xor
sub
mulb
mov
ret
dec
aaa
stos
loope
ret
outsl
divl
xchg
mov
or
sti
aas
adc
roll
lret
dec
in
pop
fidivs
outsl
cli
pop
dec
enter
mov
and
or
and
inc
mov
inc
or
lea
mov
add
testl
aas
icebp
pop
and
inc
stos
mov
and
sub
stos
jg
scas
bound
jns
stc
xchg
js
jno
xchg
pop
push
test
inc
fildl
dec
scas
jp
jmp
add
bound
mov
cmc
or
lods
pop
sbb
inc
pop
loopne
xchg
je
test
jno
aas
repnz
or
fldcw
ja
inc
push
push
add
push
test
sbb
sub
imul
repz
mov
pop
cmc
aas
push
lods
and
and
xchg
mov
inc
loopne
shr
stos
inc
mov
jno
lcall
std
test
inc
imul
mov
fsubl
pop
repz
mov
xor
ljmp
scas
mov
hlt
test
cmp
sbb
mov
xchg
mov
inc
adc
lods
adc
mov
sbb
ja
mov
adc
imul
and
test
push
std
inc
add
int
fidivrs
out
or
jbe
adc
fstpl
cmpsb
fstl
adc
rclb
add
loopne
rcrl
loope
xchg
stos
sbb
xor
pushf
test
push
pop
fisttps
dec
loopne
cltd
jb
pop
mov
lds
push
stos
push
imul
pop
stc
adcl
cltd
jns
jbe
lret
push
mov
xor
fbld
int3
test
int3
aad
sbb
or
adc
loopne
push
movsl
ss
les
or
rolb
lock
xchg
pop
mov
adc
cmp
std
addl
lds
lock
pop
cmp
mov
or
sti
mov
mov
mov
mov
dec
jp
adc
fmuls
push
mov
mov
out
mov
pop
in
inc
jp
xor
sbb
test
stos
out
mov
pop
sarl
test
fwait
inc
cmc
js
hlt
mov
xor
sub
pop
pusha
push
insl
fsubrs
or
xchg
mov
cld
or
inc
fnstsw
movsb
sbb
sbb
sub
jns
fbstp
xchg
and
aam
add
and
add
push
insl
insl
cmp
cmp
inc
adc
push
dec
incl
sarb
icebp
ljmp
mov
mov
cltd
push
add
or
repnz
imul
cmp
push
jb
cmp
and
call
idivl
pop
push
pop
cmpsb
pusha
lcall
rolb
pandn
rcrb
cmp
dec
clc
dec
ret
adc
dec
sahf
and
xor
and
dec
and
scas
cmp
sbb
push
repz
daa
bound
inc
cli
dec
call
jle
fistps
inc
sti
ret
adc
fs
std
add
loop
aaa
jne
and
in
loopne
enter
insl
pop
movsb
jb
mov
rorb
sbb
push
inc
stos
cmp
push
lcall
inc
xchg
mov
cmp
pop
push
inc
sbb
jne
jne
or
sbb
sti
xor
decl
pop
mov
data16
js
sub
movsl
sub
andb
pop
aas
pop
loope
add
hlt
fcmovb
test
xor
pop
add
test
out
ljmp
xor
mov
dec
das
sbb
out
sub
inc
cld
addr16
out
repnz
jg
add
sbb
loop
jo
mov
jg
ret
xor
lea
sub
aaa
ja
push
mov
int
in
in
dec
jne
outsl
fidivl
lds
mov
in
gs
mov
inc
enter
push
ja
cs
mov
cmpsb
mov
xchg
lds
sbb
xchg
mov
adc
xchg
mov
insb
mov
ljmp
pushf
sbb
push
mov
xor
rcll
test
push
xor
hlt
pop
xchg
sarl
test
cs
ljmp
adc
mov
maskmovq
mull
enter
mov
cmp
mov
add
bound
adc
jns
in
lret
sub
out
daa
mov
je
andl
cmp
mov
mov
fdivr
dec
js
pop
cmp
dec
js
jecxz
ffree
js
push
lahf
fisubs
xchg
push
aad
inc
mov
es
cli
pop
sti
jo
scas
push
adc
jge
in
push
inc
aaa
jle,pt
test
das
jo
sti
cltd
shl
xchg
dec
cmp
push
mov
pop
inc
jle
push
pop
rcrl
jmp
dec
pop
lahf
lahf
adc
ror
lea
sbb
mov
add
nop
adc
stos
xor
lods
shrl
shrl
lds
jge
aas
je
imul
enter
imul
lds
xor
shlb
jmp
loopne
jle
into
fs
cmp
jne
cmpsl
pop
icebp
push
or
and
jne
cmp
cmp
mov
ljmp
repz
and
popf
jo
jae
testb
mov
cwtl
sar
and
sbb
xchg
inc
rolb
xchg
push
test
dec
cli
outsb
data16
js
pushf
sbb
outsb
out
or
rorb
shll
and
lret
mov
xchg
hlt
inc
ficompl
push
adc
cmp
pop
pop
cmp
mov
iret
mov
ja
dec
aas
xchg
test
mov
mov
ljmp
in
mov
pop
dec
xchg
dec
in
pop
mov
sbb
mov
mov
icebp
push
subl
lock
push
xor
dec
and
mov
dec
in
gs
push
sti
sbbl
outsl
mov
and
add
aaa
out
in
and
cmp
aam
cwtl
lret
dec
test
enter
add
mov
mov
push
jge
push
bound
inc
daa
psllq
jecxz
jmp
outsb
sbb
fs
ret
lods
outsl
or
imul
iret
inc
mov
xor
pop
jmp
add
jo
subb
dec
sbbb
push
scas
dec
adcl
xchg
pop
lea
jmp
imul
in
and
inc
fldt
add
cmp
sub
jno
push
xchg
stos
jns
adc
or
mov
push
movsb
arpl
mov
push
popf
cmp
test
xor
orb
in
fistl
sub
fs
sti
cmpsl
outsl
mov
or
je
sahf
sti
dec
cmp
ljmp
mov
test
xor
inc
push
in
pop
cmp
shl
repz
roll
dec
jp
std
gs
sbbb
shr
jg
mov
addr16
popf
dec
pop
mov
jecxz
ss
scas
aas
popf
je
push
push
and
inc
sbb
xchg
push
movsb
outsb
pop
and
aad
mov
jmp
mov
mov
iret
iret
enter
scas
jle
jle
jnp
sarb
xchg
dec
fcoms
or
add
and
jp
les
sbb
sti
ret
daa
pop
cli
in
sub
fmull
dec
mov
and
popa
sbb
pop
loope
adc
loopne
rol
in
cld
ja
test
pusha
int3
test
push
lahf
fnstcw
dec
out
js
movsb
mov
ds
cs
mov
stc
pushf
sub
nop
and
addr16
dec
mov
aaa
pop
in
inc
lahf
stos
dec
and
inc
test
mov
sub
test
mov
sbb
insb
fcomps
jb
sbb
inc
arpl
lret
jle
sbb
mov
arpl
sbb
push
out
pop
das
repnz
dec
push
xor
stos
aad
rep
add
mov
add
adc
cmp
push
pop
add
inc
repnz
fistl
movsb
mov
imul
pop
jmp
test
jg
xor
int
adc
xchg
and
ljmp
ss
int
add
pop
sbb
clc
cs
sub
sahf
ljmp
divl
mov
cmp
outsb
pop
aaa
out
test
pop
pop
shrl
push
dec
ficoms
pop
lcall
push
mov
int
cmp
pop
push
enter
inc
ljmp
out
jno
add
or
or
xor
push
lahf
inc
insb
sbb
ret
mov
stos
add
imul
ljmp
dec
or
lods
movsl
in
mov
fimuls
adc
mov
pop
ds
pop
lock
sub
xlat
add
ret
sbb
xor
jg
aam
adc
orb
cmp
adc
loop
sub
dec
push
xor
mov
xor
stos
roll
lods
sbb
or
cltd
test
loopne
and
sub
fs
push
rcrl
or
addr16
mov
shll
push
push
xor
sbb
ljmp
dec
test
inc
ds
mov
jge
rcll
push
daa
dec
insb
lods
pop
insb
inc
pop
adc
scas
sbb
and
nop
adc
dec
jns
jge
or
adc
gs
and
aaa
adc
xor
cwtl
pop
je
dec
jmp
cmp
adc
stc
sbb
popa
push
scas
mov
int
fisubrs
ljmp
dec
pop
xchg
rcll
pop
mov
xor
cld
imul
rcrl
loop
iret
sti
and
inc
xor
popf
out
shlb
movb
outsb
jns
jne
imul
pop
stos
mov
orl
mov
xor
dec
lods
mov
out
and
push
in
pop
shl
test
or
in
mov
loopne
fsubrs
xorl
or
mov
rcll
cmp
mov
push
mov
imul
xor
movsl
mov
pop
mov
aaa
or
pushf
add
in
mov
inc
lds
push
pop
mov
iret
push
pop
jecxz
hlt
xchg
jp
das
lods
jge
arpl
or
hlt
sbb
cld
jmp
ss
out
test
cmp
sub
mov
sti
jmp
add
sub
fs
jbe
mov
xor
sbb
dec
xor
rcl
sub
jnp
push
cmp
sbbl
bound
inc
daa
xadd
sbb
lock
outsl
mov
loop
sarl
cmp
xor
cmc
cmp
mov
inc
mov
aad
ret
aaa
and
lret
pop
mov
dec
pop
test
fs
xchg
enter
mov
cld
mov
mov
jne
xchg
fistpll
scas
mov
sbb
rcll
insl
mov
stos
test
pop
or
arpl
lds
orb
pushf
movsl
push
ret
fisubl
add
out
movsl
xlat
xchg
cmp
push
stos
cmpsl
mov
push
adc
pop
fnclex
xchg
mov
lock
sbb
stc
mov
gs
faddl
hlt
shrb
mov
shrb
dec
adcl
mov
sub
imul
shrl
cmpb
jnp
add
cmp
mov
jle
enter
clc
das
repnz
mov
lods
push
dec
std
int
sub
push
rorb
push
inc
sub
int
xchg
jmp
mov
mov
add
shll
imul
mov
imul
inc
pop
dec
xlat
insb
js
cmp
repz
and
adc
adc
mov
sbb
jg
int3
pop
leave
dec
dec
loopne
aad
in
cmp
imul
jg
leave
sub
loopne
ret
xchg
mov
popf
iret
push
sbb
int3
dec
or
andl
cli
or
imul
xor
aas
push
cmpsb
cmp
lock
push
and
test
and
icebp
mov
push
cmp
xchg
or
and
mov
inc
cmp
and
out
test
sbb
pusha
cmpsb
int3
pop
and
cli
test
hlt
jae
and
stos
jnp,pt
sub
cli
inc
mov
xor
xchg
cmc
fs
mov
dec
sbb
or
jae
out
out
jg
js
xor
stos
mov
addr16
daa
arpl
adc
sbb
lret
imul
xor
or
inc
or
jle
inc
xor
inc
cltd
mov
inc
jae
clc
xor
ljmp
fistpl
jne
jp
fstpl
pusha
test
negl
push
xchg
xchg
pop
mov
js
xor
repz
movsb
repnz
cmp
dec
pop
les
jnp
scas
in
in
xlat
cmp
mov
ret
inc
aas
push
shlb
bound
sbb
das
loop
pop
jl
add
cli
push
push
cmp
mov
pop
inc
jmp
sbb
push
insl
lret
mov
mov
je
cmp
int
lds
or
pop
push
xor
test
xchg
inc
sub
jnp
mov
pushf
push
out
sti
mov
ljmp
orl
insl
cmp
int
mov
lret
xchg
sbb
sub
mov
mov
mov
push
movl
cmp
fwait
pushf
cmp
or
dec
mov
push
jecxz
ss
nop
dec
js
les
dec
pop
mov
mov
test
fnstenv
loop
movsb
cmc
aaa
pop
pushf
mov
dec
insb
cld
pop
ret
lods
mov
jle
outsb
jbe
jae
xor
mov
enter
test
fsts
fcompl
fs
in
mov
out
jl
in
out
iret
pop
push
stos
dec
xchg
mov
xor
dec
pop
mov
test
jns
andl
add
add
sbb
enter
fs
sti
dec
test
movsb
add
dec
xchg
fldl
xor
mov
mov
gs
stos
ljmp
fcompl
std
sub
into
fcoms
dec
gs
lds
loope
lods
test
aas
ret
jae
jae
xlat
push
or
mov
push
or
imul
orb
jo
inc
out
ficomps
sbb
mov
sti
sbb
aam
dec
cmp
mov
shll
and
add
cmp
xorb
outsb
mov
mov
mov
add
lcall
inc
sub
dec
mov
inc
pop
xchg
shrb
jmp
xchg
pop
inc
lock
jle
xor
jecxz
fmuls
push
pop
out
mov
xchg
pop
ret
fstpl
adc
loop
fcomip
pop
adc
fs
adc
aam
adc
out
fwait
in
push
insl
sub
jle
ljmp
iret
xor
pop
leave
xor
fbstp
push
loope
pop
std
daa
pop
movsl
fs
icebp
mov
fdiv
icebp
jne
push
sub
mov
jmp
pop
or
xor
xchg
mov
pop
int3
mov
add
mov
and
movsb
scas
movsb
lock
mov
daa
push
out
inc
sub
pop
sub
push
and
dec
fucomp
roll
mov
lods
push
movsl
adc
push
shll
push
test
jmp
cli
loop
pushw
jge
push
das
sub
and
insb
fsts
xchg
mov
mov
push
adc
addr16
add
mov
idivl
popa
mov
inc
cmp
cld
fstl
jle
pop
xor
jg
aad
and
in
popw
or
cvttps2pi
mov
xlat
scas
mov
je
cmp
aaa
cwtl
dec
cmpsb
or
sti
testb
xchg
fcoml
add
loop
inc
mov
mov
cmp
dec
iret
mov
lods
xchg
push
call
test
jg
mov
cmp
scas
jecxz
jge
jle
sbb
popa
inc
into
iret
jge
sub
sub
mov
ja
sub
shrb
and
mov
idivb
jb
out
fistpl
or
rcll
sbb
lods
cmp
ret
fisttpll
cld
lahf
mov
lahf
jo
push
fwait
mov
jnp
shrl
mov
mov
test
rcll
loope
mov
xor
mov
sbb
lods
int
shrb
gs
insb
lcall
test
das
push
loope
mov
xchg
ret
xchg
dec
js
sbb
mov
xchg
dec
add
stc
mov
test
adc
mov
fstps
cwtl
hlt
pop
mov
sbb
fs
jp
icebp
jp
inc
mov
leave
shlb
popa
push
out
sbb
adc
add
test
add
cli
push
cmovnp
repnz
mov
cmp
insl
cmc
repnz
mov
push
jbe
xchg
xlat
push
outsb
out
imul
mov
push
dec
mov
lock
and
xor
adc
frstor
mov
pop
mov
add
pop
jne
xchg
xchg
inc
jno
ljmp
mov
add
mov
mov
pushf
sar
xchg
cmp
cld
inc
test
out
cmp
and
insb
jnp
or
aas
jmp
adcb
xchg
int3
xchg
js
pop
or
aad
and
sub
or
out
pop
jle
dec
or
dec
cmp
pop
push
test
stos
mov
popa
std
adc
pop
mul
and
cmpb
mov
mov
sbb
pop
ror
mov
adc
mov
inc
xchg
clc
jl
subl
test
cmp
cmc
mov
xchg
sbb
shl
pop
mov
push
inc
fwait
insl
mov
js
bound
popa
hlt
mov
mov
test
xor
mov
cli
inc
mov
movsl
inc
popa
sub
inc
dec
rcpps
sub
xor
push
cmp
mov
bound
rclb
xchg
add
lahf
out
push
mov
stos
cmp
jp
cmp
je
and
jmp
insl
mov
jmp
int3
cmp
popf
sti
popf
fstpt
lret
add
out
cmc
test
cltd
mov
nop
push
push
sbb
jp
scas
lret
inc
cmp
mov
push
in
add
inc
mov
cmp
mov
inc
mov
bndstx
je
sahf
jp
loopne
fists
adc
push
inc
jns
mov
ss
and
cwtl
cmp
mov
jae
push
mov
shll
jnp
xchg
test
ret
insl
mov
and
push
xor
je
jnp
adc
mov
push
mov
pop
insl
xor
lret
xchg
ljmp
out
int
repnz
mov
fists
ret
mov
scas
hlt
je
xlat
cmpsb
int
adc
push
pop
dec
ljmp
test
jbe
ljmp
cld
aaa
lods
in
roll
mov
mov
test
xchg
test
pop
jmp
inc
inc
stc
jl
lods
jo
stos
add
hlt
test
fimull
mov
aam
aad
mov
aas
fisttps
imul
push
es
or
xchg
int3
xorb
rcll
rolb
jno
mov
shlb
xchg
add
arpl
push
push
push
dec
ret
sarl
in
test
negb
repz
mov
sub
mov
mov
and
mov
out
mov
jns
in
xlat
fs
xchg
jae
cmp
js
or
sbb
sbb
mov
inc
jae
call
sahf
call
bound
push
push
sbb
cmp
sbb
pushf
shrl
push
pop
pop
lret
cltd
cmp
mov
mov
push
mov
cmp
idiv
dec
mov
sub
mov
push
sti
mov
mov
shrl
or
pop
fcomi
adc
imul
add
xor
shlb
cmp
pop
stc
icebp
scas
imull
push
jg
mov
mov
sub
out
movsb
in
fildll
in
std
ja
dec
fistpll
or
rorb
sbb
cmp
mov
sarl
cmp
mov
jge
sbb
scas
xor
mov
push
js
push
and
mov
dec
inc
mov
inc
xor
push
sbb
fistl
ds
mull
inc
jnp
jo
outsl
jns
adc
lds
xchg
shrb
pop
mov
lea
dec
push
xchg
inc
cwtl
repz
mov
sub
add
sarb
push
mov
jmp
dec
xlat
xchg
mov
or
xchg
xor
add
cmp
jmp
mov
aas
xor
xor
push
xchg
mov
sbb
ret
repz
cmp
icebp
xchg
dec
inc
xor
add
xor
and
mov
and
mov
add
pop
xor
imul
movsb
lock
xor
dec
jae
push
pop
or
sub
xchg
jnp
mov
ss
or
mov
jae
mov
xchg
inc
repnz
sbb
push
inc
popf
daa
mov
hlt
inc
ficomps
mov
test
jmp
xchg
push
xchg
fisttpll
mov
inc
jo
in
jb
test
inc
insb
jg
mov
fisttpll
mov
push
add
dec
adc
xlat
divl
and
pop
ja
cmpsl
mov
data16
dec
jl
adc
addb
mov
scas
outsl
jmp
out
pop
imul
cmp
les
push
aad
setl
jmp
pop
mov
ja
jnp
jp
inc
popf
arpl
rolb
mov
adc
ss
hlt
movl
je
and
add
pop
dec
sub
lret
int3
cmp
test
or
std
push
ljmp
push
rcl
pop
insb
jl
pop
vmread
hlt
add
jl
jg
cmc
push
popa
pop
push
cli
rcll
push
fisubrs
int
jle
inc
xlat
xchg
and
mov
mov
fildll
jp
mov
daa
sub
xchg
push
jbe
pop
jns
dec
fs
pop
vpsrlw
movsbl
mov
mov
push
fildl
mov
mov
loopne
mull
jp
push
lret
fldz
push
in
mov
insb
dec
imul
dec
inc
sti
cld
mov
daa
shll
ret
subl
and
inc
sub
arpl
shrl
jnp
movsl
sub
cmp
fnstenv
lret
jmp
cs
jmp
addb
push
incl
sub
mov
or
loop
popa
test
or
cli
insb
push
loop
mov
pushf
lret
add
push
jae
movl
sar
sbb
vpmaxsw
cli
int
lahf
mov
lods
sbb
xchg
mov
icebp
dec
aas
arpl
and
fs
subl
sbb
jb
jne
cwtl
lods
inc
fcoml
in
push
xorl
negb
scas
cmp
data16
dec
adc
rol
xchg
mov
hlt
pop
xor
roll
mov
sub
paddsb
dec
popa
imul
xor
push
sbb
or
loopne
mov
pop
pop
mov
dec
scas
test
xchg
pop
mov
inc
push
popa
enter
shlb
ja
jo
and
gs
outsl
xor
or
sbb
cltd
push
push
stos
inc
fnstcw
push
inc
repz
lds
in
out
mov
into
add
lods
or
add
add
cmp
ja
cwtl
repz
cmp
or
mov
adc
jo
hlt
push
sub
xor
test
iret
push
cmp
inc
mov
leave
push
dec
popf
je
outsl
jge
call
in
fmul
or
xor
iret
orl
rdpmc
out
jno
cmp
lahf
mov
pop
cmp
test
adc
lahf
repz
push
add
ficompl
test
pop
jmp
cli
pop
pusha
mov
aas
adc
xor
push
stos
push
bound
int3
xor
sbb
js
mov
push
dec
mov
push
sbb
mov
adc
loope
popa
adc
xlat
mov
into
movsl
and
repnz
push
and
bound
pushf
mov
lods
in
vpsrlw
pop
push
fsub
stos
hlt
lds
pop
repz
lds
add
stc
xchg
jp
cmpsl
fdivl
sbbl
sub
pop
subl
lahf
lock
pop
xchg
and
pop
jnp
loope
xchg
mov
stos
mov
imul
iret
mov
stos
hlt
mov
loop
arpl
inc
scas
or
jle
push
mov
loopne
pop
or
mov
int3
ficoml
dec
sub
push
adc
jge
xchg
cltd
sub
inc
lods
daa
insb
xchg
into
pushf
fcomps
enter
fcomps
outsl
xor
jo
pop
jo
std
sbb
movsl
mov
mov
fsubl
pop
pop
pop
ret
outsl
rorb
fbld
lcall
add
jae
or
stc
insb
fisubrl
jle
or
push
ficomps
mov
mov
jecxz
mov
aas
roll
out
cmp
movb
loopne
pop
adc
jle
pop
mov
test
call
mov
xor
pusha
push
cmpsl
fstpl
pop
adc
xor
dec
add
mov
xor
das
dec
adc
incl
popa
ss
adc
je
pop
sbb
mov
add
inc
pop
jmp
int
pop
lahf
cmpsb
sbb
pusha
popa
mov
mov
insl
push
and
ret
loope
stc
popl
in
subl
lret
xlat
ret
ret
lret
mov
subl
lds
cltd
push
cmp
cmp
sarl
hlt
jno
push
stc
cmpsb
lea
cwtl
pop
cmc
pop
or
test
loope
mov
out
add
dec
clc
iret
add
mov
pop
or
mov
sub
xlat
popa
call
enter
and
sbb
mov
adc
das
test
jne
mov
push
sub
fnstenv
loope
xchg
jae
sub
int3
cmpsb
sbb
les
imul
int
mov
cmpsb
mov
pop
fsubrl
into
shlb
and
int3
lea
or
jmp
xchg
jbe
xchg
xlat
sbb
sub
dec
pop
push
lock
adcl
inc
mov
xchg
cmc
test
or
test
mov
repz
push
shlb
es
test
cmp
addr16
cmp
xor
xchg
mov
and
xchg
pop
mov
test
call
rclb
iret
ljmp
xor
sbb
dec
jnp
shll
sbb
pusha
cmpsl
cmpb
push
mov
or
aaa
sbb
fsubp
jmp
xchg
jae
mov
leave
lret
rcr
push
dec
hlt
push
xchg
xchg
lahf
cmp
push
xor
pop
mov
adc
sub
mov
sti
testb
fmulp
loop
stc
sahf
addr16
mov
or
ret
hlt
dec
cmp
jno
pop
scas
mull
cmp
mov
sbb
mov
inc
fisttpll
adc
inc
leave
in
lret
xor
lea
lods
test
popf
sti
lea
iret
mov
dec
movsb
adc
cli
in
std
cmpsl
aam
jno
mov
cmp
outsb
jne
movsl
jg
cwtl
jecxz,pn
jb
ror
gs
jne
es
xchg
js
fsts
aad
add
in
inc
fistpll
sbb
movsl
je
test
mov
fdivrs
repnz
push
bound
jp
invd
mov
adc
cmp
dec
stc
sarl
js
ss
or
rorb
ljmp
pop
hlt
out
inc
test
loopne
hlt
jno
mov
imul
mov
lcall
cltd
and
lahf
lods
pop
lahf
hlt
dec
or
add
inc
adc
dec
insb
in
bound
scas
clc
ja
cmpsb
jge
adc
mov
in
cmc
out
cmp
xchg
inc
rolb
lret
cmp
sbb
sbb
jp
dec
repnz
cmp
popf
ret
pop
adc
movsl
and
insb
push
xlat
addr16
ds
mov
sbb
lock
mov
aas
pop
lods
cmp
movsb
daa
out
sub
xchg
ss
ljmp
and
popf
and
pop
aaa
or
aad
jnp
cltd
cwtl
sub
mov
stos
pop
sub
sahf
xchg
lret
aas
jecxz
inc
ret
lret
cmp
mov
and
inc
sbb
dec
lcall
dec
loop
sub
push
or
inc
aas
insl
std
push
mov
pop
stc
lods
lods
add
int3
cmp
mov
repnz
xor
les
lahf
scas
lahf
and
pop
pop
add
cmpsl
mov
hlt
or
adc
pop
mov
add
inc
in
mov
fadd
rolb
leave
inc
ja
lret
subl
aam
lahf
push
mov
sub
sti
mov
cmp
mov
decl
fcoml
xor
out
pop
inc
sub
aam
pop
push
lahf
outsb
sti
aaa
cmp
fildll
inc
xchg
jp
rorb
dec
and
cli
sbb
fcmovu
push
pop
adc
mov
outsb
movsb
pop
adc
in
orb
mov
dec
pusha
push
sub
push
ja
arpl
in
popf
aad
in
pop
arpl
mov
xor
out
jle
mov
mov
jmp
cmpsb
in
sti
out
or
loopne
loop
call
scas
icebp
call
adc
add
stc
outsl
out
jb
mov
jae
inc
inc
je
fnsave
mov
pop
std
repnz
hlt
dec
out
xchg
pop
dec
xor
or
push
stos
fists
in
loopne
inc
xchg
jbe
push
xor
lahf
hlt
mov
loopne
inc
out
subl
sub
fcomip
fldl
cmc
pushf
dec
xlat
cmpxchg
leave
leave
adc
push
mov
dec
ja
repnz
sub
nop
jecxz
jp
jns
arpl
repz
xor
insl
cmpl
stos
insb
call
cmp
push
out
mov
fcomi
aam
add
sbbl
pop
dec
cmc
xor
jmp
mov
hlt
fcmovne
out
das
ret
dec
or
or
cwtl
push
push
fidivs
movsl
andb
stc
mov
xchg
sbb
add
in
cli
jb
sbb
push
ret
repz
jg
or
xchg
scas
push
sti
stos
xor
in
pop
std
jo
inc
adc
hlt
enter
fisttpl
enter
fs
movsl
mov
mov
arpl
lea
call
pop
push
add
mov
sbb
pop
outsl
sub
clc
dec
add
adc
add
imul
jbe
lea
pop
cmc
loop
or
sub
xchg
xor
or
mov
inc
cmp
outsb
and
arpl
push
out
add
push
mov
fbld
adc
pop
nop
nop
sti
inc
lods
lock
scas
pop
push
mov
lret
aaa
div
or
mov
push
dec
bound
add
mov
int
cs
xor
loopne
sub
sti
mov
and
mov
add
jmp
xor
or
dec
outsl
dec
mov
cmc
mov
lods
sbb
adcl
jge
add
mov
ljmp
mov
mov
push
addr16
ljmp
adc
adc
repz
adc
je
xor
push
inc
icebp
loop
shlb
addr16
sbb
addb
xchg
lss
pop
mov
out
jp
je
cs
or
pop
stos
mov
movsl
inc
lret
mov
pop
cmpsl
jne
lahf
mov
in
and
and
cmp
push
cs
loopew
xor
pop
sbb
xchg
ds
outsl
pop
jbe
insb
pop
mov
cmp
jl
outsl
sub
cmp
sbb
dec
sub
rorb
inc
pop
mov
mov
je
fisttpll
push
mov
jmp
sub
xchg
pop
ljmp
or
jmp
sub
js
pop
xchg
loop
or
sbb
lret
mov
int
out
xchg
clc
clc
jo
in
jb
jne
insl
adc
mov
dec
mov
cmpsb
mov
inc
cmc
mov
and
push
xor
mov
arpl
mov
out
fadd
push
shll
insl
pusha
sbb
and
pop
cmpsl
stos
popl
pop
mov
jne
enter
ss
xor
adc
das
pop
sahf
fldcw
data16
mov
push
sbb
jno
das
shlb
push
jmp
mov
mov
or
xor
pop
dec
and
and
mov
xlat
mov
push
dec
jbe
lahf
out
mov
inc
subl
push
int3
push
testb
dec
into
sub
scas
sub
sub
aas
aas
out
cmp
nop
movlps
fldenv
xor
jecxz
sub
lret
mov
js
stos
mov
jl
lods
sbb
jo
inc
jae
jbe
mov
je
mov
cli
push
and
clc
insl
mov
fmull
xor
pop
add
scas
push
mov
inc
xchg
jg
pop
add
pop
mov
js
mov
out
sbb
lea
stos
jg
fldt
ja
push
std
rclb
and
mov
push
and
push
mov
mov
pop
stos
sbb
mov
push
or
fldl2t
popa
mov
ja
sbb
in
xlat
outsb
aaa
push
fcoml
movl
fdivl
sbb
lock
and
pop
sbb
mov
faddl
xchg
xchg
clc
aad
push
adc
imul
dec
sar
lret
or
je
repz
sahf
in
fistps
mov
cmpsl
cmp
xchg
shll
fisubl
mov
sbb
das
sub
mov
or
xor
adc
incb
pop
xorb
and
cmp
push
pop
out
scas
in
pop
dec
inc
cmp
xchg
popf
inc
insb
mov
sub
cmpsb
pop
nop
shll
mov
inc
or
dec
or
jmp
out
sbb
movsl
mov
mov
xor
scas
movsb
jmp
mov
sub
cli
mov
and
inc
mov
mov
or
adc
sbb
mov
and
add
mov
sub
xchg
or
fisttps
push
mov
test
pop
fisttps
insl
mov
scas
scas
adc
fimuls
push
sub
mov
pop
jl
aad
in
iret
popa
xchg
cli
inc
jmp
mov
inc
decl
repz
das
xchg
out
and
jne
sbb
pop
cmc
xor
sub
mov
sbbl
sbb
inc
push
inc
lret
push
and
fmuls
or
push
mov
jb
mov
fmuls
es
lahf
sti
jae
in
mov
or
and
jae
jmp
ficomps
mov
adc
cmp
cs
inc
push
lods
jo
testl
lock
fcmovnbe
lret
lret
arpl
jmp
loopne
sub
aas
std
sub
sbb
jns
ret
mull
xchg
enter
jge
mov
xor
pop
sbb
pop
cwtl
das
mov
out
sub
cmpl
mov
add
mov
ret
in
imul
dec
adc
call
lret
jmp
jne
push
cmc
outsb
push
cmpsl
loop
popa
jns
shl
sbb
cmpsb
bound
mov
fmuls
mov
inc
xor
push
dec
and
ret
sbb
test
daa
dec
cmpsl
add
sbb
mov
fdivrs
xchg
sbb
cmp
popf
repnz
pop
jp
pop
scas
push
or
pop
cmp
mov
xor
jno
cmp
mov
jmp
les
cmp
cmpsl
insb
jmp
push
jecxz
pushf
mov
lret
and
mov
push
jp
insb
cmp
inc
das
mov
stc
xchg
mov
mov
mov
jno
ljmp
pushf
pop
xor
mov
mov
sbb
jae
imul
mov
std
in
int
test
mov
pop
hlt
push
daa
or
add
aaa
scas
xor
mov
fidivrl
sub
sub
add
inc
inc
mov
ror
ss
mov
mov
in
mov
dec
aas
sar
ret
mov
pop
loopne
jne
pop
mov
jb
adc
int
test
shll
outsl
bound
test
xor
orl
outsb
jmp
xchg
test
push
lcall
or
and
mov
lods
test
mov
cltd
cwtl
or
pop
cmp
popf
sub
xchg
loopne
add
lock
in
mov
adc
xor
mov
jge
pop
outsb
pop
imul
sahf
push
add
push
ret
and
and
fisttpll
cli
lods
and
add
stos
and
sarb
sub
push
hlt
jnp
mov
mov
mov
cmpsb
shl
mov
pop
int3
int3
nop
push
or
add
jne
ss
lret
add
fsubrs
aam
jmp
xor
sbb
insl
jmp
lods
out
je
adc
mov
mov
jecxz
sbb
nop
enter
inc
cs
out
push
insl
jno
inc
fidivrs
push
stc
mov
ret
add
dec
mov
inc
adc
push
ds
movsb
lds
ret
int3
lret
push
or
jne,pt
js
popf
sahf
rcrb
testb
cmp
sub
inc
xchg
adc
cmp
mov
xor
jb
sub
add
ljmp
jae
cmovns
jecxz
aaa
adcb
es
xchg
aaa
dec
inc
cmc
in
inc
mov
roll
adcb
sub
push
pop
inc
jnp
or
jb
mulb
jp
test
fbld
push
cmpsb
fsubs
dec
ret
out
dec
pushf
xchg
mov
pop
dec
iret
adc
jp
loopne
push
xor
xorb
push
mov
fs
out
inc
cld
je
divl
test
rolb
add
dec
ret
mov
enter
push
mov
pop
in
xchg
addb
sarl
test
loop
outsl
cli
clc
adc
cmpsb
or
inc
mov
mov
pop
movsl
out
pop
pop
pop
mov
sub
mov
cmp
jecxz
adc
or
push
jb
mov
int3
inc
cmp
jae
sub
lret
dec
fisttpl
insl
aaa
mov
pushl
or
aam
or
jno
sub
insl
pop
in
adc
ds
push
jle
fsubl
push
push
mov
iret
movl
sbb
subl
jle
lods
and
mov
sub
mov
outsb
in
sbb
cmp
push
in
and
popa
jae
imul
cli
add
loope
pop
dec
xlat
mov
in
in
mov
xchg
leave
divl
iret
mov
mov
sbb
cltd
xor
mov
repnz
or
outsb
call
cmovne
sbb
lret
sub
push
mov
loopne
out
cmpsb
xchg
jl
out
push
outsb
lods
fwait
mov
pushf
orl
jbe
push
mov
xchg
pop
aaa
lods
add
sbb
mov
and
test
jmp
adc
addb
idiv
shll
cmpsl
popa
push
pop
ljmp
stos
mov
gs
inc
int
call
repz
out
lahf
dec
test
shlb
arpl
xchg
clc
mov
fimull
test
xchg
pop
add
stos
xchg
icebp
mov
xor
lea
sbbl
xchg
incb
cmp
dec
sub
push
jb
or
cmpsb
xor
pop
test
add
cmp
iret
pop
dec
or
dec
jmp
arpl
in
cmp
stos
pop
mov
and
into
sbb
xchg
aam
or
pop
imul
dec
dec
mov
cmpsl
add
imull
add
dec
test
lcall
les
xchg
sbb
sbb
jmp
call
pop
cmpsl
sbb
bound
nop
inc
ja
xchg
xchg
cmc
xor
push
sar
xchg
mov
adc
repz
xor
scas
and
mov
adc
jp
mov
fisubs
pushf
push
push
ret
push
sub
popf
mov
mov
mov
pop
pop
aas
pop
adc
xchg
loope
rolb
test
shr
mov
xchg
outsl
jnp
push
mov
in
sbb
lret
rcl
xor
les
mov
add
cmpsb
sbb
jle
sar
popa
mov
mov
scas
pop
cmpsl
cmp
loop
fdivs
and
aad
bnd
mov
inc
and
mov
sbb
xchg
popa
call
rolb
cld
mov
inc
lahf
push
mov
ljmp
adcl
fbld
fnsave
aas
sbb
inc
enter
movsb
into
jge
cmp
fwait
jmp
cmp
fsubrs
dec
dec
push
or
ds
sti
dec
xor
lcall
pop
mov
cs
xchg
add
daa
inc
sbb
mov
pop
scas
call
fdivrs
in
aaa
addr16
xor
ret
xor
insl
cli
test
imulb
hlt
sarl
xor
lods
loope
lods
mov
lock
or
shr
inc
cmp
jne
stc
sub
jae
xchg
cmpsb
cmp
xchg
lock
add
jl
pop
mov
or
lods
pop
andb
repnz
jecxz
popa
cmp
adc
jecxz
xor
mov
test
mov
inc
arpl
sbb
ret
pop
sbb
sbbl
xchg
mov
jmp
cmc
push
mov
je
int3
mov
daa
jmp
dec
aaa
lea
pop
sub
lahf
or
dec
mov
dec
adc
sti
orl
lock
pop
cli
sar
lcall
ja
mov
fst
mov
les
addl
inc
shlb
mov
inc
sahf
sub
stc
aaa
jmp
pushf
push
sbb
jns
jmp
adc
test
data16
inc
jno
jns
and
pop
jmp
push
cltd
dec
std
inc
popa
mov
orl
xchg
loopne
les
mov
insl
mov
jnp
js
cmc
mov
push
sbb
jb
jno
push
bound
cwtl
aad
fsts
push
mov
and
sbb
dec
or
popf
lods
sub
cld
mov
incl
imul
test
or
mov
data16
push
filds
add
dec
mov
or
ficoms
sarl
push
jo
loopne
push
lods
or
mov
xor
cmp
fildll
pop
cmp
jge
rolb
shll
fwait
orl
pushf
cmp
lock
cmp
insb
mov
sub
and
adc
outsb
add
fisttps
pop
ja
fisubs
add
pop
pop
dec
lock
bnd
sarb
cs
test
das
call
xor
scas
pop
xchg
sbb
pop
insb
imul
sbb
cmp
inc
jg
test
out
rcr
dec
lcall
mov
add
decl
mov
jecxz
or
xchg
movsl
cbtw
push
lret
mov
jmp
ret
mov
lock
pop
rol
insl
push
fisttps
enter
fwait
xchg
sbb
jnp
jecxz
popa
jo
aaa
and
sub
leave
pushf
push
outsb
and
shll
cmp
inc
sub
test
ja
sub
stos
hlt
pop
in
rorl
outsb
jne
sub
loop
sbb
lea
movsb
ds
fildl
iret
imul
sbb
xchg
jl
pop
nop
mov
in
mov
scas
dec
xchg
mov
xchg
or
jno
fcmove
push
jle,pt
sbbb
pushf
xchg
aam
pop
movsb
lock
rclb
shrl
ljmp
ret
in
jns
add
scas
cli
aas
pop
xchg
push
inc
push
mov
jg
icebp
test
cwtl
pop
popa
xor
int3
push
or
mov
test
mov
xor
push
js
push
push
jl
xchg
sbb
cmp
into
mov
adc
popf
add
jne
aad
and
popa
or
add
mov
fucomi
arpl
and
cmp
sbb
das
lods
cltd
mov
not
cltd
mov
mov
mov
fisubs
test
sbb
xchg
fstps
scas
bound
sub
adc
rorb
push
cmpsb
test
sarl
push
sub
cwtl
mov
int
andb
out
sbb
aad
and
cld
push
test
jb
xor
jmp
sbb
mov
sbb
test
add
ljmp
sub
pop
or
out
mov
imul
cmp
lahf
adc
out
sbb
pop
xchg
icebp
pop
xchg
dec
adc
cmp
and
dec
dec
pop
lret
cmp
outsl
cmp
das
cli
sahf
sub
lods
repz
stos
out
cwtl
mov
idivl
mov
cwtl
inc
mov
sub
sub
add
ret
enter
sub
dec
shrb
sbb
push
add
and
lock
xchg
insb
jbe
jno
and
enter
repnz
adc
cmc
int3
iret
into
pop
cltd
adc
ret
imulb
jae
movsb
jge
push
xchg
pop
mov
nop
movsb
add
adc
add
xor
je
pushf
in
pushf
and
inc
insl
aam
cmp
testl
dec
mov
xor
jbe
aas
cltd
lret
dec
aaa
stc
loope
cmp
icebp
adc
mov
out
loop
xor
sbb
das
pop
fdivl
pop
mov
incb
pop
sub
adc
das
add
lcall
daa
add
sbb
inc
sbb
leave
ljmp
cmp
aaa
cmpsb
cmpsb
test
sub
das
lock
and
lock
pop
jb
popa
push
aaa
lds
imul
pop
loop
push
leave
xor
jbe
xor
jmp
inc
cld
lret
sub
jmp
push
stc
cmp
jb
xor
movl
insb
les
jmp
add
or
pop
aaa
pop
movsl
adc
dec
aad
or
frstpm(287
test
dec
add
dec
icebp
mov
ds
add
cltd
aam
ret
inc
xchg
and
stos
pop
cmpb
sub
fstpt
sti
stc
and
sub
cmpsb
add
or
mov
insl
push
xor
jno
sbb
ret
cltd
sub
stc
add
test
add
xchg
cwtl
push
mov
adc
and
mov
xchg
xor
imul
inc
mov
and
and
xlat
xchg
ss
mov
jnp
or
mov
leave
insb
mov
test
into
in
mov
lods
mov
push
pusha
pop
pop
je
movsl
jns
mov
sbb
xor
add
cmp
sti
pusha
adc
add
mov
aam
pop
mov
mov
aam
and
mul
addr16
mov
cli
ljmp
or
popa
pop
xchg
sbb
scas
js
pop
loopne
or
pinsrw
loopne
rolb
lods
test
cmc
stos
mov
dec
aas
pop
sub
loop
ds
adc
mov
repz
xchg
arpl
inc
pop
rcl
aas
mov
sbb
vmovq
cmc
jmp
aaa
jp
add
enter
sub
xchg
mov
movsl
and
cmp
pop
fs
test
inc
enter
shrl
pop
sub
scas
fs
cli
or
fsubrl
add
xchg
push
mov
outsl
mov
fisttps
subb
xor
je
or
push
rclb
xchg
and
andb
inc
mov
push
adc
add
outsb
insl
sbb
inc
push
mov
cld
scas
xor
and
mov
sub
mov
mulb
test
nop
lds
mov
das
scas
mov
pop
adc
stos
sarb
es
inc
jnp
lds
movsb
clc
shl
outsb
stos
sub
adc
lods
rcll
push
hlt
inc
testl
aad
je
stc
xor
shrb
mov
cmp
mov
xchg
cmc
lret
repz
mov
pop
fdivrs
mov
mov
popa
cmp
or
aas
inc
test
adc
xor
outsl
adc
adc
loopne
xlat
add
aaa
aam
xor
or
stos
lahf
fnsave
adc
orb
movsb
and
mov
jnp
aas
icebp
or
enter
jno
mov
test
mov
shll
ret
cmpsb
xlat
loopne
aaa
out
push
dec
xchg
enter
test
push
or
adc
aas
jg
dec
shll
gs
xchg
or
jmp
fmulp
popf
iret
pop
repz
xor
insl
mov
xchg
outsb
cltd
cmpsl
test
or
std
xor
orb
shll
rdpmc
xorl
or
add
leave
es
mov
lcall
add
frstor
test
inc
insb
xchg
cmp
rcrb
arpl
push
or
aad
xchg
js
leave
pop
dec
rcrl
sbb
add
adc
xchg
and
mov
xor
pop
xor
pop
jns
and
adc
popa
aam
fnstsw
hlt
adc
sahf
mov
inc
in
mov
sbb
pop
mov
loop
daa
jp
mov
mov
sub
js
jmp
and
cmpsl
xlat
push
mov
rolb
xor
jecxz
push
mov
rorb
adc
xchg
or
mov
push
mov
lcall
repz
aad
sbb
jp
and
loop
or
and
jnp
mov
cli
pop
insb
outsb
iret
push
cmp
pop
lods
call
test
fdivrl
xor
and
pop
fs
push
int
inc
push
leave
push
inc
mov
add
dec
mov
cli
not
jns
in
repnz
dec
fsubp
push
mov
push
and
and
pop
sub
mov
add
loop
dec
pop
or
xchg
cltd
sbb
adc
int3
cmp
mov
mov
push
xchg
xchg
int
mov
cld
jp
movsb
aaa
mov
jbe
mov
xor
cmpl
mov
addr16
adc
and
in
testb
sbb
test
inc
mov
adcl
dec
repnz
add
xchg
xlat
repz
in
insb
mov
scas
or
push
cmp
sbb
pop
notb
pop
mov
dec
xchg
jmp
mov
lcall
sti
push
push
movsl
imul
repz
lock
das
or
jl
je
and
mov
icebp
jl
das
divb
lahf
cmp
stos
xchg
imul
fwait
xor
fs
rorl
cmp
mov
push
xchg
jno
inc
out
call
push
sbb
cli
jl
sbb
cmp
in
push
pop
in
loope
mov
xor
pop
add
popa
xchg
cmp
dec
fdivrs
negl
xor
inc
mov
mov
into
mov
lock
ljmp
hlt
mov
add
xchg
hlt
add
pop
push
in
xor
aas
xor
mov
dec
mov
es
shrl
cmc
cmp
push
shll
fadd
in
mov
sbb
mov
dec
mov
jle
aas
xchg
inc
fs
adc
lahf
add
adc
cld
inc
mov
jl
mov
jge
or
jns
push
lods
ljmp
gs
xchg
pop
push
repz
cmpsl
lahf
insb
lahf
dec
or
lods
nop
jle
or
jmp
and
test
cmpsl
or
adc
repz
push
jb
dec
test
pop
inc
arpl
orb
mov
pop
ljmp
and
clc
sub
fdivp
je
cld
outsb
inc
jp
and
cmp
scas
lret
push
fldenv
rorb
enter
inc
cmp
sub
faddl
xor
pop
dec
adc
adc
lcall
jae
mov
shrl
cwtl
fcmovu
stc
cmp
les
jb
arpl
in
push
testb
lcall
subb
mov
jns
and
xchg
call
add
jae
or
inc
out
xchg
addr16
sub
and
jmp
push
adc
mov
daa
addl
lahf
push
push
movsb
cwtl
jae
jns
or
ret
insl
mov
xor
scas
fisubs
andl
loopne
movsl
cmp
push
clc
dec
mov
xchg
sbb
sbb
sub
rcrl
pop
sbb
repz
test
lret
and
push
js
fstpt
aam
loopne
jl
mov
or
js
out
stos
xchg
ret
cmp
cs
xchg
in
loop
dec
jecxz
out
inc
cmc
sub
cli
jae
dec
xchg
daa
fstpt
cmp
nop
mov
fnsave
call
mov
int
fstpt
and
adc
in
sub
aas
fdiv
xor
add
fcmove
or
roll
dec
xor
decl
out
inc
popa
fldlg2
or
aas
sbb
into
test
and
ret
je
js
dec
negb
add
dec
add
sbbb
cli
jo
daa
jbe
push
into
ficompl
push
adc
jnp
jp
jge
push
outsl
mov
push
mov
dec
shl
add
daa
mov
xchg
push
xchg
imul
insl
outsb
les
pop
jge
in
mov
cmp
pop
daa
vcmpss
aas
xchg
push
mov
mov
lret
mov
add
subl
imul
js
and
movsb
es
cltd
repnz
sub
jp
adc
dec
scas
adc
mov
data16
stos
dec
sub
loope
push
push
repz
test
adc
pop
xchg
mov
test
popf
insb
pop
xor
cmp
xchg
or
cld
jb
mov
ds
mov
mov
xor
mov
aad
or
sub
stos
fisubrs
or
lret
hlt
je
adcl
or
in
dec
sub
mov
or
aad
adc
pop
or
xor
je
xor
ficompl
dec
iret
mov
xchg
pop
dec
jp
aas
mov
pop
xor
test
pusha
push
test
xchg
add
cmpsl
or
or
jg
fbstp
xchg
aaa
mov
inc
stos
int3
mov
sbb
add
fbstp
stc
fbld
ret
dec
mov
xchg
ja
in
dec
addb
scas
test
movb
and
imul
inc
push
or
xchg
sub
xor
mov
imul
aam
les
lods
xor
mov
xchg
cmp
dec
outsl
or
push
adc
xor
ja
jecxz
mov
roll
loop
push
loopne
lods
test
dec
movsl
sub
aas
dec
rcrb
sbb
sub
push
cmovo
jbe
jbe
push
repz
xor
mov
add
jne
adc
sti
inc
fwait
out
xchg
adc
jmp
mov
outsl
ror
lods
pusha
std
popa
dec
cmp
lods
std
pop
test
js
push
nop
mov
stos
out
mov
xchg
sub
inc
aad
cmp
sbb
mov
addb
push
repnz
mov
ret
lds
jmp
nop
mov
cmpl
int
xlat
pushl
mov
lods
lds
mov
sbb
jo
aad
mov
lahf
jnp
jno
cld
pusha
sbb
pop
cmp
cmp
and
ret
lahf
sub
popa
or
ret
call
mov
mov
xor
cs
clc
into
pushf
mov
xor
cmp
xchg
mov
repnz
lret
cs
xchg
inc
std
jg
call
mull
aam
sub
lock
mov
int3
push
xchg
out
inc
jns
fcoms
rolb
inc
in
nop
and
cmp
andb
inc
sbb
fsts
or
xchg
insl
int
lock
and
mov
mov
jmp
pop
and
aam
lods
ret
cld
shll
testb
add
jnp
outsl
in
mov
and
mov
inc
test
fadd
mov
popa
cltd
fnstcw
loopne
add
cmpsb
xlat
test
test
stos
sbb
cmp
lahf
and
mov
xchg
andl
mov
or
push
push
pop
out
and
repnz
cmp
ljmp
int3
inc
push
nop
mov
jns
sbb
insb
sub
imul
lahf
incl
in
cld
inc
stc
pushw
out
pop
or
and
dec
mov
and
roll
mov
std
cmp
les
or
test
and
xchg
rorb
into
filds
adc
aas
jmp
sahf
lret
sbb
lahf
pop
xchg
gs
mov
sbb
add
push
jno
je
inc
jle
xor
sub
arpl
add
mov
mov
lods
aas
mov
cmp
adc
imul
sti
push
pusha
sbb
cmp
mov
ret
cmpsl
lret
pop
mov
jnp
sbb
pop
adcb
inc
add
sahf
in
jle
es
pop
je
mov
cs
xchg
popa
ss
sti
cs
out
push
test
js
push
sbb
dec
lahf
popf
scas
pop
adc
popa
mov
enter
mov
or
push
xchg
fnstcw
int3
xchg
cmpsl
lods
or
stos
mov
stos
clc
jnp
cmp
and
in
adc
lret
xor
notb
or
xor
mov
pop
xchg
xor
push
push
jae
cmc
les
inc
popa
out
rcrb
xchg
scas
iret
lods
neg
mov
nop
jns
or
mov
jns
test
rcrb
jb
dec
jbe
lods
inc
and
dec
lahf
pop
lods
dec
les
stos
push
fwait
push
adc
push
sahf
fnstenv
outsl
sub
cmp
stos
jle
add
shlb
loop
testl
pop
gs
mov
and
cltd
test
je
mov
sub
inc
jne
xor
and
cmp
pusha
cmp
arpl
mul
movsb
fsubs
adc
mov
cmpsl
sub
fidivrs
loopne
bound
cmp
mov
dec
jle
leave
movsl
sahf
adc
lret
hlt
adc
pop
mov
or
jge
sbb
fnstenv
testl
adc
push
out
das
lcall
pop
arpl
ljmp
inc
ficoml
xlat
dec
sahf
sbb
adc
pop
inc
loop
push
sahf
add
inc
cld
dec
and
jne
sti
rcr
push
fidivl
xor
xor
outsb
and
dec
push
cli
add
hlt
mov
popf
xchg
adc
push
out
test
gs
jns
aad
icebp
jle
or
stc
mov
sub
xchg
and
sub
xor
movsb
imul
fidivs
repnz
mov
ret
sub
mov
cmp
mov
out
sarb
das
clc
pop
mov
lahf
int
pop
sbb
shll
add
flds
movsl
addr16
mov
lea
pop
lahf
mov
not
in
out
pushl
jbe
xchg
mov
clc
js
push
adc
push
int3
je
mov
add
and
sahf
lahf
lret
ret
sarl
aam
adc
pop
shll
gs
inc
movsb
adc
xchg
scas
lods
mov
popf
mov
push
bound
aam
lcall
cmp
je
pop
or
jmp
sbb
insl
leave
repz
popa
xchg
mov
bound
mov
cmp
jbe
mov
mov
push
lock
std
inc
ja
jns
loope
pop
insl
jbe
lods
jecxz
popf
xor
call
jge
mov
xor
xor
call
mov
test
pop
xor
in
roll
lds
cmpsl
push
idivl
sbb
push
jl
lock
jle
in
push
dec
push
cmp
enter
sahf
loopne
inc
fisubrl
shlb
in
movsb
xchg
insl
pop
mov
aaa
out
pushf
loope
hlt
xchg
jae
inc
pop
sarb
out
ja
sub
hlt
lcall
adc
sbb
cld
lea
in
jno
cmpl
imul
add
add
mov
xor
mov
es
sbb
sbb
mov
and
xchg
lret
jle
inc
sbb
hlt
dec
call
je
roll
xchg
push
movsb
xor
imul
adc
inc
mov
cs
cmp
xchg
dec
lock
jb
test
mov
push
xchg
jle
or
cmpsb
popl
popf
dec
pop
cld
or
add
push
xlat
push
cmp
push
outsb
dec
pop
xchg
jl
or
nop
into
pushf
mov
cmpb
mov
mov
xsaves
or
cmp
into
repnz
cli
je
mov
jle
xchg
mov
mov
xchg
dec
adc
in
add
bound
scas
push
add
adc
lcall
inc
daa
das
cs
dec
or
pop
add
xchg
idiv
mov
cmp
negl
cmp
int3
sarb
roll
sub
mov
add
cpuid
je
sub
movsl
insl
rorl
dec
or
push
and
mov
pop
ret
mov
xor
push
sub
inc
fadd
loopne
cmp
nop
mov
cld
dec
sub
lcall
lahf
enter
adc
loope
arpl
jp
sbbl
xchg
sbb
adc
inc
bound
pop
repz
sbb
addr16
data16
cmp
pop
popf
arpl
lods
sub
xchg
push
mov
dec
xchg
je
mov
xchg
push
cltd
mov
sub
sahf
mov
ficoml
mov
dec
sbb
inc
xor
dec
dec
and
pop
add
adc
push
sar
jne
std
mov
push
int
cli
add
add
mov
dec
mov
push
call
popa
inc
xchg
insl
sbb
mov
insb
aam
pop
stos
mov
mov
mov
mov
das
or
adcb
add
cmpb
imul
sub
and
add
dec
jbe
xor
and
test
jle
sub
jge
push
lahf
or
lret
sub
push
mov
sub
fdivl
pop
inc
ds
and
jge
mov
and
popa
or
jp
mov
stc
jmp
cmp
pop
pop
into
fstpt
sub
dec
fstps
cmp
imul
lods
dec
dec
add
sub
pop
sbb
xor
rorb
cwtl
orl
sbb
lret
and
imul
dec
jne
mov
minps
cltd
mov
inc
fdivr
aad
pop
int3
jle
fcomps
hlt
popf
push
int
jne
mov
mov
inc
fdivrl
call
das
jo
testb
in
mov
sahf
enter
bound
mov
xor
and
lods
cs
rcl
jg
jbe
xchg
xchg
aaa
or
mov
pop
pop
dec
pusha
pop
in
in
insl
roll
jge
lahf
sbb
jge
out
imul
mov
xchg
sbb
jmp
mov
and
push
in
sarl
xchg
mov
push
sub
mov
jb
cmp
stos
lods
mov
repz
call
sti
jge
cmp
dec
filds
icebp
lret
add
fimull
push
rclb
add
scas
jbe
sti
lret
mov
loop
sbb
sbb
cmp
dec
sbb
loope
fs
in
dec
push
pop
fistpl
xchg
sub
nop
sbb
ljmp
leave
aam
lock
test
out
push
lret
xor
roll
push
mov
pop
addr16
in
push
test
xchg
mov
pop
and
aas
mov
adc
jnp
mov
ret
and
lods
pop
mov
mov
add
mov
stos
popf
mov
jne
inc
arpl
dec
mov
cmpsb
out
and
repnz
mov
jecxz
mov
fsubp
inc
mov
fsubrs
ds
cltd
mov
adc
in
xchg
js
sti
sub
or
or
sub
xor
std
pop
sarb
inc
shll
scas
mov
xlat
sub
sbb
mov
int
rcr
mov
push
mov
sub
in
fdiv
in
xor
in
das
and
lock
scas
adc
mov
mov
add
xchg
fcompl
mov
inc
shlb
jge
inc
loopne
inc
push
adc
xchg
icebp
add
jbe
mov
outsl
sub
or
test
loop
dec
sub
movsl
or
xchg
jnp
dec
add
stos
jp
cmpsb
jle
cmp
clc
push
push
lcall
inc
mov
mov
mov
jmp
push
lret
in
mov
inc
mov
hlt
mov
popf
roll
in
and
mov
fcomp
test
push
es
mov
leave
loopne
xchg
ds
pop
push
pop
loope
mov
inc
mov
iret
cwtl
mov
push
mov
fnsave
sub
fstps
repnz
addr16
sbb
add
or
fdivrs
cmc
mov
idivb
aas
jo
mov
idiv
out
add
movsl
adc
pop
sub
clc
je
out
push
adc
movsb
sub
popa
jle
or
lea
mov
inc
jg
xchg
outsl
stos
mov
pop
mov
push
sbb
mov
cmp
inc
fsubr
pop
fwait
outsb
xor
push
or
dec
nop
jl
xchg
imul
daa
push
inc
scas
stc
rorl
adc
adc
stos
out
mov
lods
or
call
adc
push
bound
or
mov
cmp
jecxz
jl
dec
frstpm(287
stc
hlt
lahf
in
stc
imul
sarb
adc
loop
push
mov
test
jg
mov
sub
je
add
sbb
xchg
adc
sbb
insl
or
xlat
lds
cmp
or
in
add
jmp
inc
cltd
ljmp
lahf
icebp
jmp
sahf
std
in
lds
aam
sarl
shll
mov
movsl
or
shll
imul
repz
lret
popf
sub
cmpsb
aam
clc
pop
dec
mov
enter
push
stc
push
aam
cmp
aam
sub
or
add
stc
jb
xchg
push
add
jne
std
xor
push
shlb
sbb
pop
insl
sub
jle
int
dec
sub
iret
mov
stos
mov
jbe
add
mov
lret
pop
rclb
jae
sbb
sbb
fsubl
incl
and
lock
sbb
fwait
mov
xor
adc
mov
popf
or
ja
xor
in
sub
mov
cmp
dec
js
lods
sub
sub
std
add
rorb
xchg
jl
divl
adc
lret
fistl
pop
loop
xchg
adc
pop
test
mov
jge
inc
push
call
pop
repz
xor
clc
inc
test
push
mov
in
in
in
sbb
or
in
dec
sub
and
adc
insb
repnz
fnstsw
pop
shr
jno
mov
out
mov
sbb
lret
xor
loopne
jo
jg
js
cli
jnp
sbb
push
pop
mov
roll
mov
aam
jb
adc
push
sub
mov
movsl
mov
mov
ljmp
sub
cmp
jmp
mov
jmp
int3
int
xchg
sub
sbbl
push
ljmp
lock
fsubr
in
test
mov
leave
popf
movsb
les
fs
lock
hlt
mov
enter
sub
pop
mov
dec
xchg
jae
andl
xchg
push
cmpsl
sub
or
ljmp
sub
sbb
or
dec
scas
outsb
lret
mov
sti
mov
add
testb
jno
xchg
fs
mov
leave
test
int3
add
sub
add
data16
pop
pop
sbb
sbb
push
negb
arpl
ja
sub
cmp
sub
imul
fadd
cmp
lret
xchg
int3
insb
pushf
xchg
int3
or
hlt
mov
cmc
pop
push
fbstp
popa
xor
and
xor
pop
jle
adc
fdivrs
mov
and
ljmp
shl
and
mov
loopne
lods
dec
xor
dec
and
add
mov
js
push
pop
xchg
in
fwait
push
stc
push
mov
adc
test
push
pop
push
sti
jle
jl
fnsave
int3
and
push
es
call
repz
lea
and
in
mov
daa
rcrl
cmp
dec
cmp
adc
dec
fdivrp
lods
inc
movsl
push
sti
loopne
ljmp
imul
push
hlt
add
and
pop
les
pusha
sti
sbb
cld
jl
loop
pop
mov
mov
cmc
lret
xlat
mov
push
and
mov
ret
mov
sub
out
dec
cmp
cltd
jns
lret
mov
jae
scas
mov
cmp
data16
pop
ret
cmp
pop
mov
mov
add
jp
push
xchg
and
and
out
or
jns
inc
call
ja
clc
rorl
mov
xchg
sub
push
pop
xchg
xchg
les
jbe
pop
fcmovne
lahf
pop
out
cmpsl
add
fstpt
nop
ret
add
fldcw
push
arpl
jge
jnp
ret
and
xor
adc
incb
and
dec
mov
rolb
and
fs
cmp
arpl
jle
or
ffree
mov
ss
xorl
les
add
pop
or
sti
sbb
getsec
or
mov
and
test
nop
sub
in
movb
dec
dec
inc
lods
addr16
jmp
or
ds
lcall
xchg
or
leave
xor
int
pusha
sahf
fsubs
sub
jne
inc
xchg
add
mov
lea
andl
enter
mov
cmp
data16
das
mov
lcall
mov
sti
xchg
add
and
add
xor
imul
aad
mov
push
movsl
test
outsl
movl
inc
leave
gs
adc
icebp
push
outsl
lret
leave
xlat
cmp
ror
jmp
outsb
stos
xor
sar
pop
rorl
inc
mov
cwtl
pop
insb
sti
mov
mov
inc
xchg
fwait
lret
std
test
push
push
je
cmp
xor
fwait
js
adc
cmp
jl
jp
pop
cmp
xor
jns
scas
cmp
mov
in
push
jmp
test
stos
add
insb
push
lea
sbb
or
jecxz
or
xchg
gs
dec
mov
sti
std
jbe
cmc
andl
inc
pop
xchg
shll
cmpsb
ja
dec
insl
in
push
adc
andl
pop
stos
pshufw
fldl
std
xor
pop
xor
xchg
scas
pop
mov
add
pminsw
mov
sarl
outsb
stos
aam
data16
arpl
loop
imul
mov
test
cmpsl
and
loopne
or
fistps
aaa
lret
lret
mul
jg
mov
clc
rcll
xchg
sbb
cmp
aam
enter
insl
jae
into
or
jecxz
outsl
fs
sub
rorl
cmpsb
or
push
push
aam
out
mov
mov
hlt
setnp
sub
loopne
mov
shl
loop
jmp
jp
xchg
rcr
pop
mov
jns
pop
mov
loopne
adc
adc
pop
addb
pop
std
sub
sbb
or
jl
addr16
add
js
std
pop
mov
in
inc
fiadds
sbb
icebp
add
ds
cmpsl
cmp
cmp
xor
shll
mov
adc
cmp
mov
inc
sub
hlt
jbe
adc
jb
cli
lds
and
arpl
add
pusha
push
jg
inc
cmp
sbb
int3
mov
jb
jg
jg
xchg
xor
inc
leave
pop
inc
fstps
adc
push
push
cmp
lea
jb
cmp
adc
icebp
adc
not
fimuls
int
lock
push
pop
emms
jle
xor
lea
xor
into
sub
gs
lock
jmp
dec
pop
dec
xchg
jmp
mov
jg,pt
sbb
cwtl
adc
out
sarl
cmpsl
outsl
dec
hlt
cmpsl
jns
lret
rol
mov
lods
adc
adc
cmp
cmp
push
mov
in
and
sbb
imul
popa
sub
jnp
or
sbb
push
les
mov
bnd
aam
xchg
mov
xor
sub
bound
xor
cld
test
nop
push
movsb
push
loop
sub
loope
jne
bound
je
test
iret
dec
inc
jg
xchg
xor
cmp
dec
ss
mov
aad
sbb
loopne
jns
cmp
pusha
push
mov
jns
xchg
movsb
imul
mov
adc
sbb
scas
push
cltd
fnstcw
push
xchg
mov
inc
jb
add
mov
lea
and
imul
push
movsl
lcall
pop
add
dec
lahf
test
mov
cmp
mov
xchg
testl
ret
push
lret
imul
inc
jg
daa
pop
mov
fs
inc
lock
adc
test
inc
aas
xchg
cmp
enter
cmp
xchg
mov
add
mov
fdivs
daa
cmc
push
or
sub
xchg
call
xchg
adc
sar
xchg
mov
sbb
jmp
dec
pop
mov
dec
add
ficomps
mov
cwtl
aam
cmp
sbb
pop
sub
mov
inc
ret
add
xor
stos
fimuls
cmc
call
mov
mov
inc
ret
imul
fstps
mov
mov
fisttps
pop
mov
xchg
cwtl
jne
sub
and
les
xchg
mov
and
pop
syscall
repnz
jb
mov
and
lcall
fs
sub
cltd
cmpsl
sub
lods
popa
loopne
fidivs
js
fimull
sti
pop
mov
in
in
xchg
test
movb
adc
adc
cmpsl
jmp
fs
push
and
cmp
mov
rorb
push
mov
pushf
jne
and
mov
fsubr
mov
xchg
mov
stos
ss
and
push
pop
cmp
cmp
push
shrl
lods
pop
scas
xor
xchg
or
cmp
mov
and
mov
cmp
xchg
bound
das
test
es
out
sub
add
das
dec
and
inc
xor
in
xchg
add
out
test
or
fiadds
rcll
cmpb
jmp
fsubrl
mov
lock
nop
jecxz
inc
push
add
lds
mov
arpl
loopne
cmpsl
inc
fldenv
push
ds
or
clc
orl
aaa
jns,pn
inc
xor
mov
xchg
ss
xlat
addr16
push
or
sbb
and
cmp
sbb
xor
xchg
and
xchg
mov
inc
jns
adc
mov
testb
sub
pusha
ds
sub
icebp
mov
jmp
lret
xor
frstor
xor
and
mov
xor
push
or
repz
into
add
out
dec
outsb
or
xchg
sub
hlt
mov
jb
adc
xchg
loop
dec
fldl
pusha
add
out
out
fdivl
scas
data16
pop
lock
movzwl
mov
roll
fisttpl
pop
xor
idivl
not
out
xchg
aaa
sbb
enter
sbb
scas
jbe
xchg
cltd
pop
cmp
int3
add
sbb
push
dec
mov
and
in
and
push
push
adc
xchg
insl
jmp
inc
add
aad
sbb
xor
inc
mov
loopne
ret
ljmp
cld
jo
fldenv
lea
sub
sbb
test
mov
enter
pop
outsl
push
das
xchg
ret
int3
lcall
cli
xor
xorl
das
dec
rcrb
push
push
iret
loopne
cmp
push
scas
cmp
pusha
popf
out
repz
stos
sbb
xor
mov
bound
mov
cltd
or
mov
push
ret
out
sub
xchg
sub
dec
adc
pop
adc
lret
push
repnz
mov
xchg
out
xor
leave
cmpl
arpl
mov
jg
sbb
rorb
in
mov
out
jp
pusha
push
add
int3
int
or
jge
stos
dec
add
cmpsb
push
sub
mov
jo
and
sub
sarl
push
ret
xchg
fs
mov
xchg
mulb
push
dec
sub
xor
in
je
lods
push
mov
sbb
xchg
add
dec
gs
in
std
push
fwait
jg
jb
inc
call
es
imul
lahf
or
das
out
fmull
sub
or
mov
repz
push
lret
cmp
in
lret
das
add
stos
mov
or
les
pop
mov
mov
insb
pusha
ret
sbb
call
jg
mov
pop
enter
sub
call
mov
mov
dec
inc
cmp
out
mov
int
jae
inc
sbb
in
fmul
push
or
lods
sub
inc
out
push
daa
sbb
adc
pop
mov
pushf
jns
xchg
pusha
lret
in
cmpsb
loopne
loope
repz
adc
bound
movsb
inc
adc
jge
xchg
mov
jcxz
or
inc
cmp
out
mov
mov
in
fisttpll
dec
cmp
cmpsl
dec
sbb
mov
ljmp
inc
into
aas
sub
and
jo
pop
aam
fildl
or
mov
loop
pusha
into
add
mov
or
mov
rorl
arpl
lock
outsb
std
ljmp
pop
fidivs
xor
insb
and
dec
sbb
inc
jb
int3
xor
sub
push
mov
sbb
cmpsl
mov
xchg
mov
cmp
ss
or
jne
add
lret
fimuls
sar
mov
or
add
pop
inc
jo
leave
in
mov
add
std
cwtl
popf
rcl
outsl
loope
and
shll
add
nop
lds
les
add
es
incb
sahf
jecxz
push
inc
inc
push
fistpll
enter
movb
or
pop
adc
add
or
adc
xchg
add
int3
mov
enter
sbb
repnz
lcall
pop
dec
push
sub
shrb
out
std
add
jg
ljmp
xchg
in
mov
xor
fistpll
and
jns
xor
inc
stc
lds
cmp
and
jle
add
mov
bound
arpl
jmp
pushf
push
enter
std
cwtl
or
lods
xchg
jne
call
pusha
enter
out
push
fnstsw
add
inc
dec
call
data16
cmp
mov
xchg
loope
push
mov
es
cs
js
je
xchg
inc
xchg
sub
mov
out
gs
push
push
jecxz
or
push
cld
push
xchg
hlt
inc
pop
rolb
pop
test
inc
cmp
dec
out
adcb
shrl
loope
stos
shr
out
xchg
pop
dec
add
xchg
mov
ret
lds
jmp
sahf
lea
mov
dec
xor
stc
add
xchg
jmp
pop
pop
xchg
add
adc
pusha
cmp
mov
push
push
sub
jecxz
shll
pop
outsl
nop
movsl
je
sub
andb
addl
les
loopne
cli
jnp
icebp
dec
and
int
jge
repz
popf
outsl
jb
push
pop
adc
mov
fs
wbinvd
push
je
and
mov
and
sbb
sti
mov
lds
pop
xchg
imul
jle
int3
mov
jno
jbe
sbb
ss
loop
add
jl
xchg
inc
sub
repz
ficoms
fcoml
add
clc
push
loop
and
lds
pop
cmp
sbb
jg
je
sbb
mov
pop
movsl
stc
shlb
lds
fwait
popa
pop
or
jo
inc
nop
mov
inc
sarb
cmp
dec
lahf
pop
stos
mov
imul
nop
mov
xor
push
lods
cwtl
jno
add
pushf
ret
lret
push
sbb
subl
mov
call
cmpsb
inc
lods
pop
mov
loopne
sub
jge
jp
xor
insb
jb
xor
ret
scas
xchg
mov
enter
lret
fsubs
das
xchg
les
sbb
push
sub
mov
cmp
add
shlb
mov
testl
mov
push
fcoml
cli
or
pop
in
lds
andb
enter
add
lods
lock
outsl
test
or
jmp
mov
ljmp
out
xchg
and
mov
add
dec
mov
cmpsl
in
loop
pusha
je
mov
mov
outsb
xor
cs
int
addr16
enter
jno
outsl
pop
lods
shl
gs
call
mov
aam
shr
cmp
into
shlb
mov
sti
mov
sti
in
dec
adc
pop
mov
ret
or
movsb
cmp
and
pop
xchg
sbb
incb
pusha
cs
mov
sbb
sti
xlat
std
xchg
pop
mov
xchg
xchg
in
outsb
mov
inc
push
into
pop
mov
mov
sub
mov
xchg
insb
xorb
push
mov
inc
and
aas
xchg
xorb
sub
in
sbb
ja
lcall
and
lods
scas
sahf
scas
push
sub
xor
cmpsb
xor
test
test
lahf
sbb
add
aad
ror
add
lds
out
mov
jge
or
mov
sbb
nop
sbb
stc
out
pusha
cmp
mov
cmp
ja
call
sbb
lea
ja
mov
mov
jae
xor
aaa
cwtl
loop
test
out
outsl
mov
int3
and
xlat
jge
movsl
repz
shlb
mov
push
jge
inc
lahf
fcompl
cmp
mov
cmp
movsl
inc
or
and
mov
aam
nop
outsl
sub
mov
sahf
mov
dec
and
cmpsb
mov
xchg
insb
stos
mov
push
cs
clc
shl
push
stos
sub
les
daa
sub
call
dec
push
xor
in
fwait
mov
jmp
and
test
test
jge
test
rcrb
sbb
adc
mov
push
lahf
lahf
dec
mov
leave
das
dec
cmp
popf
leave
push
xor
xor
adc
enter
leave
stos
pop
mov
pop
loope
jb
inc
shlb
push
mov
movsl
sub
jecxz
lret
testl
jmp
sub
aam
jmp
inc
xorb
shll
dec
add
cmp
sub
push
scas
xlat
mov
adc
add
mov
xchg
loopne
add
jmp
mov
lods
stc
inc
stos
shr
push
or
lods
insl
lds
cld
jmp
ss
leave
dec
in
lret
xchg
adc
cmpsl
addb
add
or
add
cmp
lea
xor
sti
xor
dec
jbe
mov
cmpb
pop
add
aaa
movl
mov
out
mov
clc
and
add
dec
mov
dec
ss
pop
and
xchg
and
scas
mov
mov
mull
xor
mov
aam
dec
dec
pop
popa
xchg
add
mov
outsb
mov
sahf
insb
inc
sbb
insb
js
and
enter
and
push
jno
dec
xor
cmp
pop
adc
popa
xchg
orl
cmpsb
rcll
mov
imul
and
lcall
insl
aam
bound
out
je
loope
and
in
out
sbb
cmp
in
in
lahf
and
sbb
mov
loop
inc
imul
mov
dec
ret
or
test
lret
cmpsb
shlb
adc
adc
sbb
mov
adc
fcom
repnz
jge
jbe
pop
pop
xlat
mov
jge
rorb
pusha
test
ljmp
mov
out
add
push
mov
xor
xor
mov
mov
adc
xor
repz
jae
push
jb
stc
xchg
or
sbb
shrl
push
ja
sbb
cli
shll
add
es
inc
out
es
add
leave
jmp
dec
rorl
mov
or
xchg
or
lret
loopne
aad
push
xlat
xchg
imul
xor
mov
mov
outsb
out
push
xchg
mov
sub
mov
xchg
cwtl
insl
mov
iret
addl
mov
pop
xchg
jo
jae
push
sub
mov
test
fsubrp
push
pop
das
push
lret
sbb
popa
xchg
je
sub
push
mov
in
dec
imull
sbb
mov
jge
test
or
jo
push
mov
and
adcl
insl
mov
dec
push
push
or
jmp
lret
pushf
jo
clc
jnp
or
sub
out
jge
cld
mov
int
cwtl
xchg
loop
push
pop
mov
stc
dec
stc
loope
push
sub
inc
orl
loopne
sbb
lcall
mulb
push
xchg
push
jnp
push
sub
ret
hlt
aam
jmp
sub
js
sub
test
dec
cmp
mov
nop
ds
rcr
and
inc
in
mov
mov
pop
jp
jl
cmp
jl
cltd
out
adc
push
outsb
jg
pop
subl
mov
and
sbb
shrl
mov
je
imul
incl
icebp
ja
ficompl
stos
sti
outsb
fldl
cwtl
in
shll
cwtl
fcmovnb
leave
int
dec
mov
gs
adc
jno
mov
in
push
mov
sbb
mov
out
xchg
adc
das
orl
arpl
aaa
call
imul
sbb
sbb
xchg
add
cli
icebp
or
mov
or
mov
ja
sbb
sub
pop
pushf
jne
in
outsl
or
dec
adc
lret
rcrb
sahf
leave
insb
fldcw
lock
shrb
xor
mov
jnp
int
jno
int3
ljmp
fcompl
xor
pop
outsb
iret
lds
mov
popa
imull
xorb
pop
aas
push
orl
imul
mov
xlat
leave
push
inc
jo
inc
xor
test
imul
inc
arpl
push
cmpsb
xor
movaps
lret
out
xchg
cmp
out
push
sti
dec
je
ja
pop
jmp
add
daa
sti
pop
fnstenv
pop
xor
xor
or
sbb
jbe
out
data16
push
shlb
inc
sbb
pusha
sbb
add
leave
arpl
sbb
fbstp
mov
sub
pop
scas
rcll
imul
stos
andl
push
repnz
lcall
jle
aaa
dec
xlat
sub
sub
pusha
xorb
data16
shll
lea
cmp
repnz
or
cwtl
call
inc
jns
fprem
sub
rep
mov
mov
cmp
mov
sbb
rorl
xchg
mov
leave
bswap
test
mov
add
push
dec
adc
and
and
sbb
mov
ret
ds
shll
lcall
xlat
adc
daa
jp
cmp
sti
mov
push
test
hlt
mov
inc
lods
out
sbb
push
mov
adc
in
cmpsl
aam
pop
push
jmp
xor
sbb
mov
dec
add
jle
mull
ret
mov
xchg
pop
jg
lock
cmp
leave
outsl
sub
in
pop
std
mov
rorl
or
jmp
jnp
mov
jae
dec
popa
fstpl
scas
dec
inc
mov
popa
mov
int3
outsb
lods
shll
jle
pop
test
stos
sub
and
jb
jno
inc
imul
mov
rolb
insb
mov
int3
adc
cmc
adc
push
std
sbb
or
jle
push
lcall
in
xor
dec
sbb
dec
push
pop
xor
fdiv
cmp
test
pop
loop
jnp
mov
xor
insl
jae
in
dec
and
adc
xor
movsl
icebp
outsl
mov
cmp
loope
cmpb
mov
mov
orb
test
pop
or
jmp
pop
rclb
xchg
jp
nop
movsb
sub
subl
push
jmp
loopne
xchg
in
out
out
or
lret
out
das
mov
mov
out
dec
dec
in
mov
orb
jns
add
cli
fidivs
inc
orl
push
jnp
inc
les
je,pn
test
xchg
mov
jge
popa
sarb
in
mov
inc
cmp
scas
in
dec
out
sbb
outsb
push
gs
inc
leave
mov
pop
fisubl
in
jns
scas
and
dec
fdivl
or
or
xchg
mov
leave
cmpsl
jmp
test
pop
adc
andl
cmp
xor
movnti
ljmp
push
mov
jle
xchg
psubsw
icebp
adcb
jmp
or
cmp
mov
aam
jl
adc
scas
dec
mov
add
cmc
push
mov
in
daa
add
xchg
sub
loope
mov
inc
les
in
mov
push
adc
out
sub
and
fsubp
cld
insb
dec
xchg
adc
cmpsl
int3
lock
addr16
inc
add
call
cmp
push
aam
cld
xor
enter
inc
shll
ljmp
mov
push
cmpsl
lock
popf
mov
sti
add
sbb
push
test
shlb
mov
xor
dec
lods
cmc
pop
push
jge
push
and
cwtl
xchg
movsl
pushf
arpl
call
jo
jecxz
push
andl
mov
xchg
ret
negb
testb
clc
push
jne
fwait
repnz
push
mov
ret
cltd
xor
cmc
push
and
cmpsl
imul
inc
loope
shr
xchg
mov
xchg
outsl
mov
and
mov
xor
daa
push
xor
xchg
jge
sbb
sub
stc
test
cmp
addr16
daa
sub
pop
adc
arpl
or
lret
inc
sub
xor
dec
jle
mov
call
pop
add
out
add
mov
rorl
mov
mov
loop
push
out
loop
iret
stos
mov
dec
xchg
mov
loop
mov
push
pushf
mov
in
mov
in
xchg
jno
aas
jge
fsts
cld
xchg
mov
push
dec
ret
pusha
pusha
daa
mov
movsb
pushf
sub
addr16
pop
fstl
push
rol
sbb
into
in
arpl
in
fisubl
cmpsb
adc
dec
add
movsb
cwtl
pop
lods
or
xchg
stc
push
das
pop
inc
loopne
pop
sub
add
mov
pop
ret
mov
sub
orl
cwtl
sbb
mov
jg
dec
inc
xor
inc
or
push
sti
cmc
mov
jl
add
dec
mov
sub
mov
mov
add
adc
flds
xor
xor
xchg
push
mov
xchg
pop
cmp
rorb
dec
mov
sbb
push
push
out
sbb
cld
icebp
and
gs
mov
xor
cli
sub
inc
ss
add
call
xchg
jns
ret
popf
add
cmp
inc
dec
and
cmc
jmp
sti
cmpsb
cmp
xor
and
sbb
xchg
inc
hlt
mov
jp
xchg
jmp
ljmp
or
lods
mov
mov
lock
inc
aas
mov
js
or
inc
adc
xchg
outsb
mov
nop
inc
push
cwtl
aaa
mov
nop
movsb
jo
or
xchg
fisttpll
out
push
dec
shrb
mov
dec
jle
sbb
adc
cli
or
lret
push
sub
or
jmp
mov
dec
cld
dec
lock
stc
leave
das
mov
fstl
lea
outsl
xor
xlat
in
add
pop
insl
adc
cmp
inc
cmc
or
stos
outsl
dec
iret
fstpl
and
sub
test
cmp
jle
push
sub
cmp
into
cli
pop
lock
scas
imul
mov
xchg
push
sbb
subb
inc
sub
inc
adc
stos
jo
imul
mov
and
sbbb
icebp
hlt
push
cmpsb
cmpsl
jg
and
test
jg
inc
jmp
jns
clc
sbb
gs
or
inc
rorb
jg
add
xor
loopne
mov
mov
pop
test
int
or
add
lahf
or
inc
idivl
push
cltd
pusha
outsl
shr
ret
mov
fldenv
mov
addl
dec
into
sbb
jae
imul
dec
push
fdivrl
add
pop
sbb
and
jecxz
popa
push
icebp
pushf
mov
pop
mov
jno
inc
cmp
adc
dec
push
fs
ljmp
divb
push
fbld
imul
je
test
mull
mov
in
lret
lret
cltd
fsubrs
mov
cltd
dec
or
in
ds
xchg
je
push
sbb
jle
aad
jo
movsl
loop
in
jmp
pop
hlt
fadd
daa
add
shl
mov
rcr
popf
shlb
es
sub
cli
in
nop
mov
or
adcl
movsl
stos
sar
xchg
sbb
or
call
xchg
adc
inc
xchg
arpl
or
sub
sbb
ja
inc
push
xor
pop
mov
pop
push
adc
adc
pop
mov
jb
or
mov
ja
adc
enter
movsb
push
mov
clc
fsubrp
dec
fisubrl
int
leave
aad
icebp
shlb
in
mov
jne
aad
in
ret
xchg
adcb
cs
sarb
jecxz
inc
pop
outsb
ret
test
mov
cmp
insl
ss
sub
je
pushf
cmp
insl
dec
cmp
mov
fwait
daa
sahf
aad
lods
dec
repnz
mov
movsb
lock
insb
fisubrl
xor
in
jg
testb
push
sub
out
add
pushf
cs
call
adc
std
push
gs
iret
pop
cmp
sti
dec
aad
and
sub
adc
sbb
add
lods
call
sub
sti
enter
push
push
cltd
jp
gs
nop
dec
xor
stos
cmp
push
push
jnp
fstpl
mov
lret
push
adc
fidivl
adc
mull
jnp,pn
cwtl
mov
jo
mov
outsl
out
pop
shl
jle
and
and
jg
add
repz
shll
pop
pop
jg
xchg
in
test
aaa
mov
xor
or
repz
adc
in
ret
notl
nop
xor
dec
lahf
inc
frstor
jne
cwtl
stos
adc
pop
insb
sub
mov
sub
aaa
in
cwtl
mov
cs
xchg
mov
stos
sbb
into
mulb
jmp
push
sub
inc
jle
mov
adc
sbb
xor
inc
pop
add
sbb
stos
aad
inc
shrl
xchg
push
test
dec
mov
push
out
xchg
inc
fcmovbe
call
xorl
jne
mov
cmc
jno
mov
icebp
in
mov
push
mov
push
add
rcrl
lock
jl
test
fcompl
cmp
insl
sahf
adc
popf
sahf
cmpsl
push
ficoms
add
loop
mov
adc
in
pxor
dec
repnz
decb
insb
in
in
push
test
cmp
mov
mov
mov
and
clc
stos
cs
addr16
xchg
movsb
sarl
xchg
pop
jns
dec
adc
push
xorb
cmp
frstor
sarl
pushf
enter
test
dec
shlb
outsl
rcll
aas
outsb
pop
stc
mov
inc
mov
inc
stc
loop
jno
pushf
sub
dec
jecxz
sahf
add
fwait
rcrl
jg
movsb
pop
mov
pop
testl
fiaddl
mov
jns
cli
loop
adc
push
sub
add
daa
btc
lea
mov
out
xor
ror
mov
mov
adc
pop
scas
inc
in
negl
addb
ljmp
ret
data16
mov
lret
orl
mov
push
call
sti
jmp
dec
mov
or
aaa
pop
outsb
jg
xor
dec
inc
mov
sarb
cs
sub
add
dec
adc
inc
cwtl
add
stos
xchg
jo
dec
xor
in
push
sub
mov
aad
outsb
pushf
mov
jle
ret
mov
mov
enter
or
repz
jne
pop
insl
jle
jle
bound
sbb
adc
inc
sub
out
sbb
les
clc
inc
out
outsb
iret
es
nop
cmp
mov
ffree
pop
mov
or
aad
sbb
mov
fprem
inc
dec
cld
leave
xor
mov
lret
leave
fs
xor
adc
push
inc
mov
push
in
dec
dec
incl
dec
jp
cmc
pop
mov
das
push
mov
lds
adc
jmp
cmpsb
sbb
pop
sahf
aaa
xchg
or
mov
pop
sub
in
xor
jp
stc
jnp
sub
pop
sbb
aas
pop
dec
lcall
xchg
nop
daa
ficomps
mov
out
repnz
xchg
jns
sbb
add
daa
adc
ret
dec
or
fldcw
xor
xorl
dec
rorb
jecxz
out
pop
adc
outsb
xor
shlb
jg
cmp
mov
lock
loop
fwait
dec
rcrb
pop
lds
ss
lods
ljmp
insb
push
sbb
roll
xorb
stc
xchg
mov
mov
mov
fsubl
mov
call
ds
enter
fwait
pushf
pop
test
popa
ds
pop
and
mov
dec
inc
mov
xlat
or
push
xor
cmp
decb
js
mov
pop
mov
out
stos
and
loope
loope
lea
and
push
cmp
cwtl
adcl
jns
sub
mov
repnz
out
jo
lahf
mov
cli
jecxz
push
sub
mov
add
js
mov
cs
mov
out
cmp
fcompl
lcall
push
inc
loope
mov
daa
mov
jp
test
arpl
gs
pusha
pop
movb
lret
pop
sub
rolb
outsb
dec
cmp
lahf
sub
dec
jmp
leave
adc
test
and
lds
cmpsl
mov
mov
jne
push
push
ljmp
ret
fs
adc
lea
cli
cwtl
push
fcomps
dec
movsb
cmpsb
stos
scas
outsl
push
repnz
icebp
mov
loope
mov
and
lret
mov
iret
sub
inc
lret
movswl
jle
xor
pop
bound
mov
inc
mov
mov
mov
jns
test
out
fs
in
add
test
jp
dec
sub
loop
xor
lds
push
dec
insb
rcrl
pop
sti
mov
xor
pop
cmp
roll
xchg
mov
imul
or
xchg
mov
pusha
pop
xchg
cmc
dec
in
roll
dec
inc
pop
shrl
mov
cltd
test
addr16
push
xchg
outsl
jecxz
xlat
fidivrs
push
xchg
stos
jne
lea
adc
stc
loopne
pop
mov
push
add
xlat
out
js
std
mov
xor
mov
sbb
or
push
sub
push
fadds
pop
xor
bsr
aaa
add
mov
mov
lret
lea
xlat
call
cmp
push
pop
sub
jecxz
fcoml
inc
pop
in
inc
sbb
es
cmpsb
dec
outsb
push
mov
loopne
jb
ljmp
or
pop
adc
cmp
jns
shll
aam
int3
fisubl
jnp
push
js
mov
stos
pop
cld
dec
repz
hlt
aaa
popf
and
loope
sbb
fs
xlat
mov
loopne
arpl
stc
lahf
mov
adc
ret
outsl
sahf
rcrl
jbe
pop
sub
xlat
sahf
in
scas
mov
push
inc
test
lock
lahf
aad
dec
and
inc
pop
mov
lods
popa
dec
loope
scas
js
fwait
xchg
sbb
fisubrl
mov
cmpsl
mov
ds
xchg
fidivl
idivl
pushf
lock
mov
incb
mov
into
jnp
add
or
jae
sub
pop
dec
test
sarb
cmp
data16
adc
fs
pop
in
call
sbb
ds
sub
jg
xchg
push
cmp
dec
loopne
fistps
popf
mov
pop
mov
add
mov
lea
fsubrs
dec
orb
mov
outsb
mov
mov
or
test
lret
imul
push
cmp
cmpl
jne
jge
xchg
fildll
mov
cmp
mov
sti
push
dec
out
imul
xchg
mov
loop
fidivrl
push
add
je
pop
rol
fistps
sub
jo
mov
mov
jb
dec
adc
push
push
pop
push
cli
add
loopne
mov
vpcmpeqb
ficomps
jmp
cltd
loope
insl
jb
cli
aad
lret
ds
jns
or
push
inc
sub
push
pop
mov
repz
xchg
sub
out
xlat
arpl
lods
cmp
rolb
cmp
pop
lock
test
and
aam
stc
es
jg
popa
pop
mov
push
fnsave
testl
aas
mov
aad
sub
push
in
adc
xlat
or
setg
cmpsb
mov
mov
push
js
std
mov
dec
and
scas
sub
pop
mov
push
and
nop
lret
jl
or
mov
jae
xchg
in
push
je
stc
and
inc
jmp
lock
sbb
pop
aad
lock
iret
aas
insb
lret
repnz
mov
sbb
stc
jle
jo
fdivrl
lahf
lcall
xor
lds
lahf
das
sbb
cmc
ficoml
jl
xlat
lret
ljmp
aam
dec
mov
mov
mov
pop
insl
loope
push
dec
push
pop
xlat
nop
adc
mov
xor
es
pop
aaa
or
mov
ficoms
sub
mov
xchg
sbb
mov
sub
imul
shl
out
imul
jge
aaa
icebp
pop
fistpll
mov
pop
aaa
mov
mov
std
mov
call
cld
std
pop
scas
dec
outsb
mov
out
divl
fistl
push
and
push
cmpsb
lds
sub
jge
fstl
in
pop
loopne
cmp
dec
shrl
cmp
lcall
sbb
pop
imul
mov
push
mov
push
dec
std
xchg
jns,pn
add
adc
mov
loop
int
lret
xor
mov
nop
sub
pop
adc
inc
enter
ja
pop
mov
movsb
jge
add
or
push
push
xor
inc
in
int
mov
push
or
loopne
push
lods
sbb
xchg
xchg
out
mov
loopne
in
pop
daa
xchg
jecxz
sbb
xor
movsl
add
pop
sbb
jmp
mov
outsb
inc
sbb
movl
into
or
adc
push
faddl
lock
out
subb
jns
sub
andl
inc
add
and
scas
jmp
sub
cmp
mov
pop
sarl
stos
rclb
out
fcompl
mov
and
lea
pop
outsl
lock
mov
je
lods
pop
ret
inc
push
cmpb
ds
cmp
add
gs
cltd
mov
gs
dec
inc
loop
jecxz
hlt
sbb
mov
mov
imul
adc
lcall
xor
mov
mov
cmp
lahf
lods
jae
rcll
add
lods
stos
scas
xor
jl
xlat
jmp
je
pop
xchg
mov
dec
push
das
cs
cmc
mov
shll
sbb
sbb
aam
mov
imul
or
in
or
xchg
aas
inc
std
jle
fldt
mov
repnz
push
bound
dec
ss
call
out
jp
xor
add
addr16
test
icebp
push
dec
sub
test
lods
popa
sub
jl
andl
push
mov
sahf
push
mov
insl
lods
mov
loopne
nop
dec
mov
add
mov
ja
daa
inc
stos
sub
pushf
add
lret
call
xor
pop
rclb
aad
jae
daa
mov
or
scas
scas
pop
push
add
clc
mov
and
add
jns
ror
add
inc
mov
cmp
xor
sbb
call
jbe
mov
dec
pusha
add
xor
test
xchg
push
shrl
sti
enter
push
mov
mov
stos
mov
and
mov
popf
add
cmpsb
adc
sub
stc
inc
push
leavew
push
push
xchg
pop
loop
mov
stc
jnp
cmp
lods
pop
sbb
and
loope
nop
mov
mov
fs
sub
and
ret
out
dec
addr16
push
mov
jp
or
mov
push
jno
mov
sbb
shrb
cltd
stc
addr16
adc
cmc
lret
mov
out
dec
push
mov
xor
mov
les
repnz
loopne
in
cmc
daa
scas
fnstcw
lods
and
test
pusha
aam
add
mov
int
pop
xor
imul
add
movsl
mov
aas
clc
imul
les
add
push
in
nop
in
adc
mov
ret
stos
adc
mov
xor
ffree
fcomps
add
pop
xchg
lods
xchg
pop
and
jl
push
push
fwait
out
dec
adc
push
in
pop
xor
test
mov
push
loope
mov
sbbl
add
add
add
or
ja
out
xor
cld
sub
jo
jo
jmp
jno
hlt
mov
cmp
or
and
lahf
ja
testb
xchg
mov
mov
mov
and
and
sarb
fs
xchg
pop
in
bound
pop
adc
repz
mov
das
adc
scas
pop
inc
dec
outsl
ljmp
imul
add
jl
add
dec
fnsave
lret
clc
mov
and
add
jae
js
js
jb
mov
and
mov
mov
push
stc
test
je
nop
call
add
fdivr
daa
jb
sub
cmp
outsl
xor
sti
xor
pop
or
jns,pn
jbe
cmpsb
fsubr
mov
in
inc
mov
push
rcl
xor
sbbl
es
mov
ljmp
mov
ficoms
into
cmp
jo
call
fdivl
push
out
sti
addb
and
je
outsl
mov
mov
fwait
adc
pop
and
mov
popf
loop
mov
sbb
out
loope
xchg
fsubrl
cmpb
pop
or
mov
sub
add
add
push
cmp
sbb
in
mov
pop
mov
repnz
mov
mov
dec
loope
ret
mov
ret
fcoms
jnp
cltd
aaa
pop
cmp
mov
jns
sub
adc
mov
add
sub
push
pop
push
mov
mov
mov
fimull
or
pop
sub
cmp
and
jmp
aaa
jp
popa
and
aaa
jne
fnsave
sub
stc
sahf
lods
or
push
mov
mov
push
jbe
cmp
cmpsb
sbb
push
or
xor
or
test
inc
and
fimull
inc
lahf
xor
divl
add
std
pop
mov
in
hlt
cmp
or
in
mov
lods
mov
imull
mov
into
hlt
js
call
adc
xchg
push
xchg
mov
pusha
inc
das
pop
xchg
stc
sbb
scas
lcall
ljmp
and
cli
stos
mov
into
les
jnp
jne
imul
aas
xchg
subb
xor
leave
xchg
xchg
rcr
cmp
int
stos
js
jnp
mov
xor
mov
dec
xrelease
mov
mov
dec
mov
dec
std
js
lock
inc
and
iret
cmpsl
out
ljmp
jmp
cli
mov
jmp
lret
imul
popa
in
inc
imul
cli
lcall
lods
sub
imul
sub
incb
push
aaa
scas
add
daa
mov
pop
dec
test
push
aas
fistpll
pop
frstor
pushf
outsb
sub
shll
push
cwtl
mov
push
scas
dec
adc
xchg
mov
xchg
movsl
mov
jl
push
push
mov
fists
cmp
mov
ret
mov
lcallw
push
daa
stos
ja
jnp
xor
or
popf
dec
pusha
pop
add
lret
and
loopne
movsb
push
push
cmp
jl
out
test
divb
das
adc
frstor
fistps
sub
and
arpl
sub
push
out
or
dec
push
and
pop
push
pop
jb
orb
mov
fmuls
xchg
inc
lods
add
stc
cli
xor
xor
mov
add
dec
and
icebp
xor
mov
cwtl
repnz
or
inc
imul
mov
or
pusha
repz
pusha
jno
inc
jbe
cmc
dec
les
scas
dec
jmp
xor
mov
lret
fisttpll
adc
mov
sbb
out
aaa
add
int3
add
daa
lret
movsb
js
bound
mov
test
test
xchg
sbb
dec
je
scas
pop
jge
add
mov
and
dec
sub
pop
negb
add
aas
enter
jmp
jge
pop
sbbl
ret
fcoms
mov
dec
push
mov
ja
mov
lock
sub
pop
inc
pusha
outsl
int3
pop
addb
pop
push
ret
mov
subb
add
sub
xor
das
divl
nop
sahf
or
gs
dec
push
sbb
mov
addr16
sub
xor
aad
dec
out
push
push
pop
ljmp
out
rolb
mov
xor
das
add
jg
xchg
cld
or
cmp
aam
sbb
pop
pop
mov
sbb
ds
and
gs
pop
pusha
push
push
scas
cmp
movsl
pop
xor
test
push
iret
and
sub
push
pop
stos
ficoml
sbb
sbb
fidivl
jp
rcrl
adcl
xchg
dec
sbb
add
mov
dec
sar
arpl
and
xchg
adc
and
pop
pop
ret
or
repnz
fdivrp
push
xor
fs
jmp
mov
mov
outsl
jnp
arpl
js
xor
mov
mov
push
in
sub
es
hlt
or
and
cmpsl
rcll
xchg
movsb
pop
jge
xor
daa
and
xor
jle
cmpsb
js
jl
cltd
popf
mov
cmp
adc
lret
mov
mov
ja
ret
scas
sbb
outsb
nop
xchg
push
mov
clc
or
xor
clc
mov
push
jae
pop
lret
sbbl
adc
fs
and
outsb
xchg
pop
jnp
loop
mov
jmp
push
pop
adc
sbb
pusha
mov
xchg
cmp
nop
jge
and
loop
imul
sub
movsl
jge
rolb
incl
cwtl
xor
pop
pop
sbb
js
xchg
fucomp
in
push
data16
push
jae
clc
or
dec
repz
or
test
xorl
sub
imulb
jne
inc
xchg
xchg
out
jl
mov
jno
mov
jbe
cli
jl
rclb
push
xor
push
fnstenv
divl
in
mov
je
jb
test
mov
out
and
push
mov
sub
mov
mov
xor
hlt
sbbb
imul
out
sti
sub
push
jne
iret
insb
xchg
scas
jne
sti
inc
out
xor
push
push
mov
lock
fidivrl
fwait
dec
jge
daa
fbld
jmp
and
cld
call
mov
iret
bound
in
cmp
arpl
cld
or
bnd
pop
and
jbe
aas
xchg
jg
adc
push
adc
dec
mov
decb
or
inc
mov
into
inc
data16
mov
loope
ror
es
mov
sbb
push
lods
add
ss
cmp
mov
push
jmp
cmc
inc
mov
jne
mov
pushf
xor
pop
dec
mov
mov
sub
out
jmp
add
subb
bound
les
iret
in
and
hlt
inc
sub
add
jl
cltd
mov
loop
fcmovb
jg
push
xor
ret
stos
lcall
xchg
inc
inc
leave
rcrb
imul
aas
aad
and
pusha
xor
mov
and
sbb
jb
sbb
jl
jl
add
aaa
cmp
jne
leave
ret
sahf
sti
in
cmp
shrl
ret
dec
jle
cmp
push
xlat
pop
mov
dec
xor
lret
xchg
push
aad
nop
pop
lcall
inc
mov
and
cmp
sub
jns
fisubrs
leave
lods
dec
xchg
inc
loop
mov
jecxz
jmp
pop
mov
mulb
imul
inc
pop
outsb
jo
loope
push
inc
inc
jmp
and
imul
iret
and
mov
sbb
push
fcomip
stos
jb
jno
mov
iret
xor
addr16
test
ret
nop
inc
into
inc
or
es
sbb
and
inc
push
add
rorl
jno
dec
out
add
jns
movsl
lods
hlt
push
mov
add
addl
imul
into
fs
or
or
xlat
dec
dec
or
xor
add
out
out
mov
pop
scas
cmp
cmp
adc
enter
push
orl
mov
mov
out
test
xchg
rcr
je
push
xchg
in
sub
mov
mov
push
jno
sub
sub
cmp
cs
ror
push
mov
sbb
mov
mov
sbb
lds
mov
test
lea
insb
enter
mov
inc
xchg
mov
sub
fidivs
xchg
push
or
adc
rcrb
lret
lods
cmc
int3
push
add
arpl
xchg
or
and
rcrl
lods
dec
popa
aad
inc
aas
arpl
sbb
lods
mov
in
cli
mov
mov
mov
fs
or
inc
add
adcl
andl
jnp
dec
pop
inc
pop
leave
nop
js
or
ret
mov
clc
repnz
test
shll
push
or
nop
icebp
mov
lock
adc
dec
cmp
cmp
scas
mov
cmp
jne
sarb
daa
xchg
ror
push
cld
cs
and
call
test
imul
sarl
xchg
out
xchg
ficoml
sub
push
mov
adc
xchg
push
add
mov
adc
fidivrs
lret
scas
inc
push
fiadds
sahf
fst
insl
jae
push
cli
aam
cs
clc
push
insb
xchg
xchg
inc
jbe
mov
fadds
loope
xor
insb
pop
mov
pminsw
mov
ja
sub
mov
arpl
lock
popf
out
aam
jge
mov
fwait
xor
mov
mov
jnp
js
jo
repnz
sbb
inc
push
add
sub
adc
cwtl
into
sbb
sub
cmp
cmpsb
dec
and
jo
and
imul
pop
mov
fsts
xchg
push
inc
jecxz
adc
out
mov
test
adc
pop
hlt
sub
pop
test
aam
sub
mov
and
out
jns
popa
push
iret
daa
push
jecxz
jo
jns
sti
sbb
cltd
inc
or
pop
movsl
gs
idivb
icebp
lahf
jecxz
xchg
stos
lea
cmp
das
sbb
fiadds
ljmp
dec
dec
xorb
or
jo
xor
test
outsl
cmc
mov
sub
sbb
out
sbb
push
scas
add
inc
popf
sub
mov
xor
loope
nop
sub
pop
mov
sub
or
xchg
lret
xchg
add
pop
iret
push
xchg
xchg
inc
xchg
in
jmp
arpl
je
sahf
inc
shlb
or
jo
js
das
test
mov
cmp
ror
je
inc
push
mov
insl
mov
arpl
mov
das
mov
mov
lds
or
es
mov
push
ljmp
pop
ficomps
xor
xlat
pop
mov
xor
out
mov
dec
in
push
jbe
nop
push
sbb
mov
dec
xor
aas
fcomi
jmp
int
iret
mov
xchg
cmc
mov
push
in
addr16
mov
mov
dec
mov
mov
xor
adc
inc
repnz
cmc
pop
xor
jl
test
cmpsl
ficoml
ljmp
and
aaa
xchg
pop
jnp
insb
cmp
mov
imul
dec
or
add
ficomps
incb
aad
loope
dec
lds
pop
and
jo
daa
dec
cmpsl
lahf
js
cld
dec
in
inc
sub
das
cmp
cmp
js
mov
mov
cmpsl
mov
push
inc
jno
xchg
adc
jo
pop
jae
adc
ss
sbb
inc
dec
xor
popa
jb
add
into
out
mov
cmc
xchg
add
adc
sbbb
out
xor
aam
cltd
jne
mov
and
lret
loopne
sub
mov
or
cmp
jp
cmc
dec
ja
adc
push
ss
cs
jg
add
jno
and
pop
add
xchg
leave
xchg
mov
push
sub
mov
push
aaa
xchg
lret
xor
fisttpll
or
decb
aas
test
cmpsb
pop
imul
add
ret
pop
sub
sbb
inc
cld
ja
loope
xor
sub
and
fisttpll
push
dec
in
pop
pop
mov
add
push
stc
cmp
and
cmp
clc
fbstp
cmp
sbb
cmc
sub
jle
movntq
xchg
dec
test
or
lcall
test
fmuls
push
jl
add
out
add
xchg
shrb
shl
dec
and
sub
push
inc
icebp
pop
cmp
leave
mov
cmp
insl
lret
sarb
mov
rcll
cld
into
int3
fcompl
data16
aaa
dec
or
sub
xchg
mov
cmp
mov
dec
icebp
gs
add
gs
aad
sahf
aas
and
adc
cltd
cmpsl
cmp
test
mov
xor
icebp
xor
push
pop
jbe
jne
push
sbb
shr
outsl
in
scas
jno
insb
clc
cmp
es
add
lock
sub
xchg
loop
cwtl
shlb
pop
mov
xchg
sbb
fwait
aaa
push
mov
fsubrs
roll
adc
sbb
test
xchg
rol
push
mov
sbb
imul
out
mov
mov
aas
push
aaa
push
adc
pop
je
aaa
sub
ret
rorl
enter
hlt
jecxz
clc
xlat
push
stos
inc
int3
call
pop
ja
fwait
jp
pop
jae
jmp
jb
pop
add
mov
inc
cmc
cld
jl
shlb
test
shlb
adc
push
dec
jp
lds
out
xchg
dec
dec
mov
adc
xchg
xchg
push
sub
or
clc
ds
push
mov
stc
xorb
in
inc
push
call
xchg
cmp
push
fs
call
dec
loopne
push
adc
pop
dec
pop
stos
adc
mov
cmp
enter
cld
push
daa
popf
lds
out
fldcw
lcall
add
push
stos
xor
pusha
and
clc
aam
sti
lcall
test
mov
sub
cld
adc
cmp
jo
les
sbb
inc
cmp
ljmp
ds
je
dec
add
dec
sbb
pop
test
pop
pop
push
jmp
ret
test
rcrb
xor
stos
dec
mov
cmpsl
inc
ret
scas
xchg
fimuls
xchg
inc
xchg
xchg
ss
jae
mov
fs
rol
add
pop
jae
hlt
call
in
xchg
jmp
shll
inc
jbe
push
mov
inc
pop
clc
adc
in
repnz
ffree
nop
push
push
arpl
jne
aam
enter
iret
add
mov
xchg
jo
ja
pushf
clc
jne
lds
push
sbb
cmpsl
stos
and
xlat
jp
xor
xchg
mov
mov
cmpsb
imul
pop
shlb
lods
and
sahf
nop
cmpsb
seto
enter
inc
adc
jge
or
push
xchg
or
in
sbb
push
int3
inc
and
into
and
dec
cld
xor
int3
xchg
scas
iret
sahf
leave
inc
push
mov
sub
and
fcoml
or
pop
imul
inc
mov
hlt
xchg
int3
inc
push
jle,pt
std
dec
sbbb
arpl
sbb
adc
stc
divl
fistpl
add
or
cmp
out
imul
push
pop
data16
out
fcmovbe
in
cmpsl
and
mov
movsb
push
sub
mov
test
test
popa
and
pop
inc
call
push
fdivs
fmul
and
inc
arpl
or
mov
inc
test
dec
sbb
loopne
clc
xchg
fimull
mov
mov
cmp
or
push
cmpsb
xlat
int3
fmul
clc
dec
in
mov
add
stc
xor
jno
sbb
and
add
or
push
push
loope
or
xchg
jmp
push
das
push
ljmp
in
jg
into
jo
js
mov
push
adc
int3
pop
pusha
shl
mov
rcl
cmp
cmpsb
int
test
mov
in
sar
mov
fistps
or
fsts
jg
or
popa
leave
frstor
pusha
mov
wrmsr
push
repnz
in
and
inc
cmp
inc
and
popa
jno
jae
mov
cmp
pop
shl
inc
bound
add
inc
push
xchg
pop
push
fucomi
xchg
jno
sub
xor
sbb
aad
mov
stos
filds
je
mov
xchg
iret
stos
orb
sub
js
jecxz
add
mov
pop
fcompl
fsubl
adc
icebp
cmp
mov
call
stos
or
roll
mull
addb
scas
mov
and
mov
popf
in
sbb
pop
inc
and
mov
jp
fmuls
sub
xor
fwait
shl
daa
ljmp
in
add
adc
dec
xchg
jo
dec
mov
push
mov
ljmp
xchg
or
sbb
xlat
dec
add
into
sub
xchg
jmp
ljmp
jo
nop
adc
mov
lods
cmpsl
inc
and
mov
mov
dec
in
sbb
pop
cmpsb
cmp
fucomi
xor
mov
dec
les
dec
ds
test
mov
js
sahf
fstpl
cmp
int
nop
dec
idivl
lret
sbb
mov
xchg
mov
jle
inc
call
scas
insb
inc
lret
mov
and
flds
js
inc
out
into
push
xor
sbb
or
xor
lahf
shrb
addr16
aas
sub
aas
fdiv
movsb
sahf
hlt
out
mov
aad
dec
mov
mov
pop
add
data16
mov
gs
cli
gs
sbb
loope
pop
lret
cmp
fisttps
mov
mov
push
jecxz
loopne
mov
mov
adc
cmp
inc
add
ror
ret
scas
mov
lahf
add
js
adc
rcrb
sbb
pop
test
and
push
hlt
aas
test
sub
scas
imul
lret
lds
shr
jg
cli
xchg
test
stos
sbb
fists
test
and
inc
mov
nop
negb
dec
xchg
inc
add
out
out
pop
cmpsl
loopne
testb
shrb
ljmp
dec
test
cmp
fisttpl
sbb
dec
adc
adc
and
add
mov
stos
dec
data16
aaa
pop
push
cs
popa
test
lret
insl
jg
xor
hlt
xchg
loopne
push
stos
cmp
lock
in
mov
xchg
push
pop
or
mov
test
push
lcall
jns
mov
rcll
push
popa
mov
xchg
adc
xchg
pop
loop
leave
mov
arpl
lods
xor
mov
inc
push
lcall
pop
rcr
cmc
mov
and
xchg
dec
daa
ljmp
pop
push
or
out
jbe
dec
imul
incl
ja
bound
add
cmpsl
mov
lcall
fs
jbe
fnsave
cwtl
sbb
shl
pop
cwtl
inc
test
clc
sub
jae
sbb
mov
cli
pop
push
push
mov
inc
lods
cmp
xchg
pop
xorl
jne
or
xchg
dec
xchg
add
inc
xchg
sbb
call
idiv
int
dec
or
xor
js
pop
inc
push
cwtl
jge
out
fsubrl
dec
sub
xor
sub
push
mov
add
aas
jno
add
icebp
and
in
inc
mov
sti
mov
jge
stos
and
add
outsb
dec
adc
and
ja
pop
sub
inc
pop
ljmp
inc
sub
out
loope
dec
pop
mov
sahf
andl
cs
mov
arpl
cld
imulb
dec
adcl
cmc
or
shll
loopne
out
push
into
test
test
lds
test
inc
jns
sbb
inc
xor
cmpsb
test
adcb
mov
push
in
mov
inc
cld
push
ret
pop
sbb
push
lret
adc
cli
fbld
sub
lret
pop
mov
inc
ljmp
int
jb
ljmp
sbb
mov
test
mov
xor
in
int3
and
shll
call
pop
imul
pop
in
rorb
or
mov
adc
cmp
xchg
lods
inc
je
jno
out
lods
jne
pop
pop
inc
shr
add
lcall
pop
jecxz
repz
loop
jp
push
xor
ss
lcall
or
movsb
arpl
sbb
lea
roll
xchg
mov
bound
cmpsl
xor
insl
cwtl
ljmp
inc
cld
into
mov
gs
push
jg
movsb
push
dec
inc
mov
add
xchg
push
xlat
rol
mov
and
mov
push
inc
cs
xchg
lods
aad
outsl
fdivrs
or
push
sub
adc
xchg
push
dec
cltd
loope
test
enter
mov
or
jno
pop
sub
rcrl
iret
jnp
jae
stos
fcompl
frstor
movsb
push
sahf
cli
dec
jle
out
sbb
shlb
insb
adc
scas
leave
jp
mov
mov
pop
adc
xchg
push
fwait
add
push
adc
inc
sub
das
leave
push
in
dec
into
xlat
lret
pop
cmp
xor
mov
mov
inc
mov
mov
add
push
jne
movsl
jge
icebp
mov
arpl
cmc
xor
mov
xchg
pop
push
add
fst
cmp
xchg
sahf
jne
dec
fistl
sub
pop
dec
test
xor
pop
scas
mov
xchg
hlt
and
cmp
push
loop
pop
jne
push
sarl
in
cmp
ja
xorl
mov
add
mov
mov
inc
pop
pop
sbb
mov
inc
icebp
arpl
xor
sahf
js
cmp
in
sub
mov
pop
das
pop
jnp
push
lret
rcll
test
mov
insb
dec
idiv
mov
std
fidivl
sbb
ret
mov
mov
pop
xor
ds
ljmp
jge
xor
xchg
push
ljmp
jb
addl
ds
fnstenv
fisubrl
adc
pop
pop
iret
or
inc
jns
or
sarb
lea
sbb
jge
mov
data16
xchg
iret
cmp
mov
dec
dec
stc
mov
sbb
sbb
cli
pusha
sbb
sbbb
mov
adc
and
mov
mov
pop
repz
enter
add
lods
faddl
push
jl
stos
jg
subb
xor
insl
cs
jns
inc
cmp
mov
lods
loope
adc
gs
lret
leave
adc
and
adc
jne
mov
or
mov
jmp
mov
sub
cli
mov
mov
pop
sub
push
aas
mov
into
decb
in
lahf
xchg
add
mov
sbbb
or
jp
fwait
mov
xor
fimull
sub
add
inc
mov
cmc
dec
push
sbb
push
xchg
std
and
in
xlat
mov
bound
jbe
js
xor
insl
enter
pop
dec
sbb
jmp
orl
dec
out
mov
cli
cmc
sbb
inc
cld
add
mov
dec
sahf
out
fdivrs
xor
add
pop
pop
test
jno
and
lret
xor
or
mov
aad
mov
dec
fld
iret
pop
popa
add
jnp
jns
sahf
jmp
ds
iret
push
jp
mov
inc
cltd
fxch
and
or
cmp
or
dec
std
dec
or
repnz
jp
repz
mov
loopne
pusha
jo
cmp
movsb
sub
xor
mov
mov
inc
dec
push
std
xor
in
jmp
das
jge
cmpsl
jmp
pop
mov
add
addr16
sub
xchg
cmpsb
pop
fstpt
sbb
mov
lahf
xor
arpl
xor
push
pop
mov
out
inc
andb
inc
in
and
repz
cwtl
sub
fmull
jg
cmp
idivb
outsb
aad
scas
scas
and
jbe
outsl
int3
or
cmp
mov
call
xchg
cmp
mov
dec
rcrb
dec
scas
clc
insb
iret
inc
sub
sub
arpl
gs
loope
and
loop
push
inc
into
in
mov
stos
inc
jmp
fdivr
pop
or
or
hlt
loope
loop
jge
add
idivb
xchg
fisubrl
mov
adc
xor
test
enter
inc
and
push
ret
mov
setp
dec
or
aam
and
ss
xchg
test
dec
outsb
xor
addr16
ss
das
bound
sahf
and
and
repz
es
push
or
push
cmpl
iret
and
pop
jne
or
pop
popf
in
xchg
fcoml
fs
inc
push
pop
mov
mov
idivl
xor
and
jmp
aam
inc
scas
jns
push
pusha
jae
sti
jecxz
inc
pushf
icebp
or
jecxz
scas
rcl
or
mov
inc
xchg
mov
ljmp
dec
repnz
mov
inc
out
add
add
mov
bound
clc
imul
xchg
add
das
scas
out
cltd
sbb
out
or
int
movsb
iret
inc
rcrl
in
xchg
dec
mov
sub
push
flds
stos
sbb
test
sub
pushf
lds
clc
rcl
test
cmpsb
sbb
dec
jnp
inc
cs
mov
aam
pop
mov
lods
push
fdiv
and
leave
outsl
addl
mov
and
sbb
addr16
rcrb
adc
loop
loope
stc
fcomip
imul
push
cmp
inc
shlb
sub
mov
mov
add
out
xchg
addr16
pushf
mov
jnp
fcmovne
lret
shl
insl
scas
das
fnstcw
out
popf
movsb
sub
outsl
and
mov
lret
pusha
rcrl
add
js
jo
xor
sbb
loope
xor
xchg
icebp
enter
rol
int
outsb
fsubr
sbb
sahf
fbstp
mov
jo
or
and
add
pushf
mov
xchg
sub
je
sub
cmp
cmp
mov
push
cmc
cmp
xor
dec
fcomps
scas
and
sub
leave
pop
sbb
xor
push
loopne
pop
xchg
push
jo
jmp
cmp
xchg
scas
inc
xlat
outsb
jle
push
xlat
rcl
cmp
dec
xchg
ljmp
filds
xchg
adc
aas
sbb
lods
jp
and
stos
push
aam
out
jge
inc
scas
xor
pop
mov
add
fcompl
lds
imul
xchg
jnp
test
and
xor
std
pop
movsl
bound
and
mov
iret
ss
pusha
sub
push
xor
int
jne
jmp
add
cmpsb
xor
mov
mov
into
cmp
aad
rorl
add
jle
inc
arpl
dec
pushf
inc
aad
and
sbb
mov
xor
outsb
mov
fs
popa
mov
mov
arpl
dec
loope
lea
and
push
sub
xchg
cmp
ffree
icebp
dec
xor
daa
lahf
inc
or
mov
or
push
xor
mov
xorb
out
js
in
fnsave
jno
shlb
es
and
cmc
call
and
stc
mov
mov
popf
outsb
adc
mov
and
scas
mov
insl
mov
ds
inc
cmp
pop
adc
sub
dec
fisttpll
in
pop
mov
out
ffree
xchg
or
dec
add
notb
pop
mov
mov
mov
or
fs
mov
test
rorb
movsb
movsb
stc
leave
xor
inc
in
iret
lds
fs
inc
mov
idiv
xchg
xchg
add
or
mov
push
shl
cmp
inc
xchg
movsl
das
pop
test
shrb
mov
fwait
ja
lcall
test
mov
jae
or
lods
jno
sti
dec
pusha
movsb
stos
es
jle
pop
jp
or
or
movsb
das
mov
xchg
les
adc
sbb
sbb
or
shrb
testb
aam
xlat
cmp
push
cmp
or
and
cmp
insl
arpl
test
cli
or
shl
push
je
inc
fdivs
int3
jl
and
fisubrs
lods
push
mov
and
lods
xchg
pop
mov
jl
jb
hlt
aas
inc
push
cltd
out
icebp
pusha
xor
int
cli
lea
jbe
das
or
pop
and
cmp
in
mov
stos
xchg
and
test
push
jbe
mov
cmp
divl
cmpsl
dec
pop
xor
push
jge
cmp
cli
add
push
lahf
out
mov
xchg
push
xor
push
pop
mov
hlt
sbb
out
pop
test
push
sbb
push
ja
roll
cmp
sbb
mov
push
pop
icebp
xor
cwtl
in
sbb
fistl
add
sbb
repz
or
adc
pushf
mov
xor
in
mov
les
mov
xor
movsb
int3
adc
and
inc
xlat
jl
jmp
xchg
sub
sub
add
dec
xchg
push
lcall
outsb
mov
pop
loope
sbb
ficoms
jno
and
ss
insb
ja
dec
movsb
pop
rol
xchg
dec
sub
and
push
pop
add
mov
loope
push
adcb
xlat
lret
icebp
popa
loopne
sub
cmp
sbb
enter
ret
mov
test
cmp
sarb
inc
es
hlt
jle
data16
mov
insb
test
or
fisttpll
inc
pop
or
push
pop
push
sub
xchg
rorb
xor
mov
push
or
lret
and
jp
lret
shll
push
lcall
push
insb
or
xor
loope
jecxz
cltd
ja
mov
jl
ja
test
jns
ret
xchg
mov
sbb
push
xor
inc
in
pop
and
pop
mov
popf
cs
rolb
andl
outsb
push
out
cmp
xchg
pop
lret
xchg
out
pop
ljmp
jp
fs
sar
xchg
inc
pop
mov
ss
gs
shr
fisttps
iret
ret
sahf
pop
enter
pop
add
out
in
xchg
xor
orl
sub
adc
cli
sahf
mov
jge
popf
js
and
or
rol
hlt
outsl
and
dec
mov
fisttpl
jb
cmp
aas
push
in
push
sbb
cmp
mov
cld
insb
out
sahf
xchg
ljmp
dec
arpl
rcrl
push
pop
push
in
and
mov
inc
jns
mov
gs
xchg
inc
outsb
jl
out
loopne
jecxz
mov
adc
je
cmpsb
cmp
loop
fiadds
iret
adc
loopne
es
out
je
filds
ja
xchg
push
movsl
into
push
fnstcw
mov
fs
dec
add
std
sbb
loopne
lahf
xchg
jg
test
adc
je
jae
hlt
adc
repz
shr
push
mov
xchg
cmpb
call
cmp
jo
mov
daa
lret
mov
popa
jo
sub
insb
and
mov
adc
jmp
cmp
jb
mov
xchg
inc
dec
fdivrs
cmpsb
push
add
in
xchg
sahf
sub
mov
ljmp
jns
sbb
xor
mov
test
pop
push
sub
je
decl
pop
mov
rorb
dec
jmp
add
sbb
mov
ja
inc
jnp
mov
mov
in
sub
or
add
pop
ret
adc
enter
or
dec
pop
les
test
ret
add
enter
sbb
dec
cmp
inc
outsl
mov
add
add
bound
mov
and
popf
les
or
arpl
rcll
test
test
xchg
mov
enter
fsubl
fistpll
jne
or
xchg
outsl
jg
mov
and
push
xchg
lock
jmp
insl
adc
shlb
inc
inc
and
adc
xchg
gs
cs
nop
and
scas
mul
stos
scas
lahf
jae
sahf
sti
scas
scas
xor
pop
nop
xchg
test
iret
jbe
jb
filds
and
dec
aad
xor
ljmp
jecxz
out
dec
dec
push
xchg
popf
outsb
fld
cmp
sbb
sarb
inc
mov
pop
cltd
xchg
leave
jb
and
add
popa
xlat
sub
sub
imul
pushf
mov
scas
in
mov
inc
xor
iret
sub
and
push
cmc
mov
dec
dec
pusha
fs
push
mov
sub
dec
out
and
popf
xor
mov
out
rolb
inc
jg
adc
test
outsb
adc
sub
pop
xorl
xchg
sbb
jge
les
xchg
jo
sbb
sahf
fmul
fs
inc
cmpsl
fldl
mov
mov
popf
mov
xor
xor
xchg
xchg
jp
push
inc
cmp
sbb
into
xor
cmp
jae
add
enter
push
xchg
xchg
sbb
popf
or
jne,pn
rcll
pop
ds
lret
pushf
pop
mov
dec
mov
xor
cld
push
hlt
jns,pt
ret
and
bound
dec
jne
mov
xchg
scas
push
and
je
pop
stc
pop
mov
dec
mov
add
sbbl
sbb
int
lret
pop
ficoml
aaa
shl
loopne
pop
addr16
daa
and
adc
mov
insl
pop
pop
pusha
add
ljmp
sbb
les
jl
loope
push
cmp
cmpl
push
xor
mov
clc
icebp
or
lods
mov
mov
das
add
ret
aaa
daa
aad
mov
test
fimuls
jnp
sub
test
and
push
scas
xchg
pop
push
pop
mov
sub
pushf
fisubs
gs
leave
sub
popf
lods
insl
pop
stc
sub
dec
ds
mov
aam
cmp
sub
dec
sub
ret
mov
fwait
sbb
sub
mov
pop
pop
xor
jo
pop
adc
sub
push
stos
or
in
dec
push
std
adc
xor
mov
leave
sbb
lea
aaa
dec
push
pop
jb
xchg
leave
in
cmp
mov
jp
movsb
nop
out
sbb
mov
lret
std
inc
inc
jle
push
sbb
into
movsb
addr16
jp
or
loope
jne
sahf
movsb
cmp
test
push
add
fwait
add
das
xor
mov
add
cmpsb
mov
pusha
mov
push
ds
or
xchg
clc
sub
aas
xchg
jne
mov
cmp
or
jbe
sbb
and
cli
lea
push
sarb
test
add
and
out
lcall
xor
add
inc
decb
loopne
bound
testl
cwtl
sti
aam
jae
pop
mov
adc
pop
je
jmp
mov
stos
stos
insl
dec
lds
lahf
mov
cmp
js
add
andl
sub
push
imulb
sbb
push
shr
out
out
addb
je
sub
push
adc
in
pop
or
jle
xor
xlat
inc
fistps
idivl
outsl
xchg
xchg
push
mov
sbb
and
add
iret
push
push
sub
ficompl
push
xor
fs
arpl
sub
fs
mov
and
or
into
cmp
push
mov
inc
shrb
cmpsl
faddp
hlt
rol
lcall
xchg
mov
shl
sbb
mov
arpl
lcall
or
sub
dec
lahf
cmpsl
je
mul
das
js
push
pop
pop
aad
dec
iret
and
pushf
add
int3
es
fmul
inc
stc
inc
inc
idivb
sahf
ret
mov
pop
mov
popf
inc
push
subb
mov
fmuls
addr16
nop
push
pushf
cs
repz
js
mov
sub
inc
mov
cwtl
mov
cmp
and
data16
pop
xor
inc
popf
inc
and
push
nop
pop
loope
sahf
movsl
bound
mov
into
push
mov
mov
cmp
fisubl
scas
dec
ljmp
mov
sub
dec
in
sbb
mov
f2xm1
mov
ljmp
out
push
xchg
mov
mov
stc
mov
dec
mov
aam
sbb
rcl
adc
stos
jecxz
cmc
mov
mov
inc
nop
imul
sub
pop
adc
cmp
lahf
jns
lret
out
addl
adc
or
repnz
jg
test
decl
and
mov
adc
test
adc
push
sbb
lahf
neg
sahf
aaa
jge
test
in
inc
xchg
xor
pop
iret
cmpsb
cmpsb
dec
cld
inc
mov
mov
pusha
push
imul
sub
cmp
insb
lret
mov
enter
cltd
cmp
xor
or
add
lldt
pop
sub
int3
push
adc
or
popf
push
jp
lret
xchg
sbb
out
mov
sbb
dec
or
mov
fcmovu
sub
inc
fs
dec
ret
mov
fidivrl
sbb
or
or
jge
mov
fldenv
out
popf
imul
aam
aad
sub
push
push
and
es
xchg
ss
inc
mull
jl
cmpsb
push
iret
int3
xchg
add
xchg
push
shll
fistl
clc
adc
jno
mov
mov
jmp
int
add
sub
sub
push
xchg
insb
sbb
pop
sti
ror
cld
inc
xchg
cmp
sarl
pop
test
mov
or
lret
adc
xchg
cmc
cli
mov
mov
clc
fwait
dec
pop
and
add
rcrl
xchg
mov
lods
jae
mov
mov
jne
ret
or
jne
pusha
xor
push
jo
push
mov
outsl
ljmp
pop
insb
push
call
cmpsb
pop
arpl
je
jp
je
jne
jo
outsb
bnd
xor
jp
add
and
dec
mov
jbe
es
sbb
iret
loope
in
xlat
push
push
sarb
pop
add
jne
inc
xchg
lock
loop
fcomip
das
push
lea
xor
jne
sahf
jae
or
dec
imul
int3
fists
orl
cmpsb
or
cmp
sbb
dec
daa
mov
mov
cmp
mov
mov
pop
imul
xchg
xchg
inc
lea
ret
loop
test
push
fs
cltd
sahf
inc
adc
daa
mov
pop
mov
xchg
mov
mov
pop
and
daa
adc
push
cmpsl
pop
scas
ljmp
sub
push
clc
or
inc
jb
add
xchg
mov
xchg
or
sbb
jmp
rol
cli
mov
pop
push
or
cmp
add
fcoml
mov
lcall
mov
pop
sub
cmp
jmp
pop
cmp
xor
sub
or
das
mov
mov
lcall
nop
sub
fiadds
scas
lahf
sbb
add
sarb
icebp
pop
ja
mov
shrb
or
add
or
scas
scas
cmp
adc
pop
pop
das
push
lods
dec
sbb
or
cs
and
movsl
sub
es
or
sbb
aas
fldt
mov
mov
and
out
jbe
jle
add
pop
dec
mov
mov
sub
xchg
jp
ret
fdivrs
pop
and
and
fsubrs
cmp
xchg
mov
movsb
les
lret
push
mov
xor
in
subb
lock
insb
jl
mov
adc
dec
idivb
and
mov
pop
cli
jp
fldenv
fldenv
inc
pushf
ljmp
ljmp
sbb
cwtl
push
cmp
aaa
mov
jnp
pop
push
dec
popa
add
shl
int3
test
ss
cmp
and
jo
mov
and
fidivs
inc
int
mov
adc
popf
ja
cmpsl
pusha
jle
mov
push
inc
insl
push
ljmp
push
or
add
push
dec
or
mov
arpl
aad
mov
push
cmp
std
cld
mov
mov
ljmp
je
mov
sub
dec
paddusw
adc
outsl
enter
imul
test
pop
jmp
test
pusha
xchg
inc
sub
push
lods
mov
pop
xchg
xchg
lret
aam
lds
shrl
fsubrs
pop
call
mov
jb
out
mov
movntps
add
sbb
adc
pop
out
jmp
dec
scas
pop
negl
cs
mov
cld
inc
subb
mov
fdivrl
aad
adc
les
push
popf
add
dec
cltd
mov
jp
inc
and
mov
or
push
sub
xor
add
xchg
cld
data16
mov
adc
orl
ja
popa
mov
adc
scas
cmpb
mov
mov
popf
data16
rcrb
loopne
or
inc
mov
xor
xchg
fcomps
cmc
in
inc
das
jns
inc
enter
xchg
shll
jecxz
dec
data16
push
hlt
mov
and
xchg
cli
imul
mov
sbbb
pop
bound
aad
out
add
mov
es
add
xor
jne
push
and
pop
cs
push
lcall
std
adc
inc
clc
lods
dec
data16
pop
mul
xor
push
add
inc
pop
cmp
and
sub
imul
adc
stc
pop
idivb
push
insb
xor
mov
cmpsl
stos
pop
jmp
orb
xor
xchg
jns
pop
cmp
and
pop
cmp
and
shlb
pop
inc
es
mov
lock
stc
sbb
out
leave
xor
das
push
push
adc
mov
pop
jnp
xchg
lcall
mov
aad
mov
fildll
cmpsb
out
es
js,pn
mov
js,pn
mov
mov
stos
jg
cmp
sbb
or
xor
jge
ljmp
jbe
lock
rolb
dec
pop
jae
shll
cmp
dec
mov
sub
insb
mov
iret
sub
pop
aaa
outsb
dec
xchg
push
xchg
daa
dec
fnstsw
dec
cs
push
mov
add
xchg
pop
push
sbb
shl
mov
dec
rcr
in
aam
clc
xor
push
inc
pop
mov
inc
outsl
mov
aas
cmp
cwtl
mov
sarl
fidivs
mov
lcall
repz
outsl
sub
push
and
xor
pop
lds
pushf
cmp
int3
xchg
lods
mov
popl
or
or
clc
out
call
push
mov
and
mov
xor
lea
lock
imul
scas
lds
dec
fstps
testl
or
xchg
dec
xchg
xchg
into
xor
jle
loopne
addr16
lret
mov
sub
sbb
jecxz
mov
stc
add
rcr
lcall
int
jp
push
cmp
adcl
mov
xchg
push
mov
adcl
fs
xor
push
mov
sbbb
add
aam
repz
inc
inc
adc
fidivl
ljmp
mov
stos
test
sub
repnz
int3
push
ds
js
stc
jae
test
das
dec
pusha
jmp
adc
adc
pop
inc
sbb
xor
mov
mov
push
or
stos
dec
xor
in
sbb
jnp
aad
pop
push
push
rclb
scas
fnstcw
pop
nop
mov
enter
rorb
ficoms
inc
flds
test
mov
loope
lahf
inc
sub
jns
test
shl
lret
out
mov
sub
rol
call
adc
jae
insl
cld
shlb
fistpl
jne
dec
fsubrs
idivl
loope
xor
shl
pusha
mov
fmuls
test
mov
jae
sbb
inc
mov
add
jg
dec
xchg
jbe
cmpsl
pop
jmp
outsl
and
or
ret
movsl
rcrl
je,pn
fdivrl
adc
push
in
into
or
inc
add
lcall
ljmp
loop
enter
pop
cmp
daa
xchg
nop
outsb
arpl
mov
lods
ret
and
insb
sub
mov
dec
arpl
bound
enter
adc
mov
jle
jno
out
ja
push
fmulp
push
leave
stos
sub
clc
cli
mov
rorl
in
shrb
mov
add
test
leave
je
insl
jns
repnz
jmp
outsl
out
cmpsb
push
movsl
push
inc
ljmp
bound
cmp
into
loopne
mov
or
fistl
lds
cmp
test
les
mov
cs
out
shlb
xchg
sub
ret
leave
lock
popa
push
push
add
aad
push
das
mov
outsb
repnz
popa
push
dec
sub
ds
jnp
or
cmp
cmp
inc
jg
and
xor
bound
mov
into
dec
jo
inc
pop
add
inc
shlb
inc
mov
inc
inc
sahf
out
pop
jge
fsubrl
lock
mov
inc
mov
mov
mov
cltd
in
push
cltd
pop
jge
and
pop
mov
mov
sbb
cmp
in
pop
mov
add
sub
enter
xchg
push
fisubrs
jae
lock
pushf
jecxz
mov
loop
jecxz
cltd
cltd
mov
push
inc
frstor
je
inc
and
in
aaa
adc
es
add
xchg
cmpsb
stos
or
sub
add
cmp
sub
pop
call
mov
jecxz
pop
fdivs
loopne
cmp
frstor
cmp
mov
dec
sahf
loop
lret
enter
sti
or
ljmp
data16
push
ds
mov
mov
das
stos
les
data16
add
daa
out
jg
clc
sbb
pop
adc
xchg
add
pop
subl
mov
dec
push
xor
mov
adc
cmp
xchg
cmp
ja
leave
lods
mov
out
loope
pushf
and
pop
cmp
lock
xor
test
lret
adc
insb
xchg
cmp
adc
sub
mov
lret
cmp
add
aad
xor
mov
data16
sub
sti
push
pusha
popf
fidivl
mov
mov
mov
push
lods
cmc
sub
inc
add
das
mov
das
scas
sub
jmp
inc
inc
call
bound
push
adc
mov
push
xor
sbb
xorl
fisubl
mov
jb
adc
hlt
enter
out
les
cld
jae
mov
push
push
and
xor
adc
in
imul
arpl
cmc
xor
xor
adc
xchg
out
jo
fwait
adc
jb
or
mov
aad
cmp
inc
mov
jp
pop
jns
xchg
nop
adc
es
test
mov
and
adc
sub
push
jge
fbld
sbb
sahf
pop
sub
iret
scas
adcb
or
or
mov
shr
es
enter
cs
dec
in
pop
mov
jne
sbb
lea
imul
jbe
outsb
mov
xchg
pop
push
sub
add
adc
jo
add
jecxz
ds
notl
pop
jmp
sub
aad
sbb
popf
sub
pop
fwait
lret
push
lock
cmpsl
mov
in
dec
inc
std
shlb
pop
jo
ljmp
faddp
adc
mov
adc
and
cmp
ljmp
sub
mov
or
gs
mov
andl
inc
xlat
mov
mov
lret
push
xchg
lods
imul
cmp
inc
out
mov
adc
cmpsb
add
rclb
je
hlt
adc
dec
mov
inc
pop
test
cmp
push
pop
pusha
dec
mov
xchg
cmp
repnz
imul
in
insl
leave
cmp
bound
jbe
outsb
push
push
adcb
mov
push
dec
cmp
addr16
scas
js
cltd
cli
scas
lods
sbb
or
inc
jp
imul
test
in
data16
adc
mov
outsl
sbb
xchg
xchg
push
stos
fcmovbe
sbb
lret
xlat
lret
icebp
gs
sahf
sbb
sti
ja
mov
mov
cmc
insb
or
pop
sub
push
incb
shl
sahf
pushf
movsl
orb
lret
in
mov
dec
dec
add
aam
pop
imul
or
lods
sti
testb
outsb
inc
sti
and
shl
jp
nop
mov
subl
movsb
fisttpll
popf
push
mov
fsts
inc
push
faddp
cmp
call
mov
int
aaa
decl
mov
and
imul
imul
ljmp
rcll
push
shlb
add
xor
jae
loopne
push
aas
sahf
scas
and
lret
lods
faddl
cltd
lcall
test
or
push
push
push
sbb
adc
divb
lret
pop
sbbb
cld
je
sub
mov
xchg
sub
inc
rorb
outsl
arpl
xor
loopne
test
push
les
lcall
aas
jmp
push
and
mov
incl
test
cmp
xchg
rolb
jp
insb
mov
pop
and
call
andl
test
pop
pushf
jg
adc
push
es
sbb
test
out
cmpsl
inc
xchg
push
xor
inc
out
add
push
data16
mov
or
sub
test
or
dec
insb
push
adc
xchg
add
dec
xchg
imul
pushf
lret
or
xor
dec
loopne
adc
cs
xchg
pop
out
mov
dec
daa
aaa
icebp
sub
or
fdivrl
cmp
cmp
mov
inc
push
adc
mov
xchg
mov
xor
adc
bound
inc
fiadds
add
sub
pusha
push
inc
push
or
xchg
imul
lods
loopne
mov
rcl
subb
repnz
jge
notl
xor
popa
in
subl
divl
fsubrp
sub
inc
in
sbb
cmc
mov
mov
dec
lea
cmp
mov
aad
inc
sub
clc
out
xchg
adc
sbb
dec
xchg
fdivl
mov
push
mov
hlt
cld
in
cmovno
int3
les
inc
sbb
sbb
xor
pop
es
lods
jge
mov
or
mov
sbb
jb
loopne
sub
xchg
mov
pop
dec
mov
mov
mov
fsts
pop
jbe
mov
dec
push
or
push
push
push
mov
dec
repnz
mov
lcall
out
or
cmpsl
movb
incl
push
lods
pop
fbstp
fisttpll
fistpll
push
fucomp
mov
push
cmpsl
xchg
dec
cmp
icebp
xchg
xor
imul
cmp
push
pop
mov
mov
fistps
or
loope
seto
xchg
jecxz
cmpsb
andl
and
shrb
xchg
out
pop
add
inc
lods
and
or
and
insl
xchg
push
out
cmp
or
mov
dec
sbb
sti
sbb
push
mov
dec
add
iret
js
or
shll
add
lock
gs
ss
jl
lea
cmpsb
push
sbb
pushf
repz
mov
in
push
out
aaa
mov
push
lret
bound
cmp
pop
inc
mov
sbb
cmp
pop
jns
or
fmull
aam
sub
sbb
mov
cmp
shrb
cwtl
lcall
sub
shlb
ret
push
sub
sub
xchg
lds
mov
je
mov
ja
pop
in
fwait
je
push
dec
das
das
add
adc
jmp
aad
pop
outsb
ds
and
sub
sbb
fdivs
das
shlb
sbb
ror
sbbb
cwtl
xor
pop
movsb
push
iret
jle
pop
shrl
mov
popf
int
or
in
repz
std
ret
sbb
cmp
mov
mov
and
mov
inc
test
mov
or
mov
das
push
cmpsl
scas
scas
int3
add
sub
iret
sub
dec
test
mov
rcll
lods
jl
cltd
data16
in
jne
push
sub
xchg
or
dec
insb
rclb
fwait
xchg
fcmove
mov
test
popa
shlb
sarb
nop
dec
mov
fldenv
adc
insl
je
mov
std
xchg
mov
pusha
mov
inc
push
mov
xchg
pusha
jns
push
pop
out
movsl
cli
xchg
jle
sub
jmp
xor
daa
push
loope
cmpsb
pushf
xor
pop
stc
sbb
sub
or
mov
inc
xchg
pop
das
and
enter
pcmpgtd
data16
mov
cmp
add
aaa
sahf
sub
iret
xchg
and
xchg
aaa
popf
cmpsl
into
pop
and
add
push
sbb
mov
push
lods
pop
cmpsb
loop
jnp
pop
stos
pop
imul
lock
pop
fsubr
sub
mov
dec
pop
adc
pop
mov
adc
gs
shll
rcrb
pop
dec
push
push
loope
dec
pushf
or
push
jg
mov
cltd
jecxz
adc
ds
dec
cmpsl
lock
jb
shr
gs
sub
mov
cld
hlt
cwtl
shll
shll
and
push
pop
int
sbb
ljmp
jno
rol
loopne
and
xchg
mov
pop
jg
fadd
xchg
xchg
jns
xor
inc
out
or
sbb
aaa
push
mov
push
xchg
push
loop
inc
leave
cs
popf
xchg
insl
shrb
call
addl
aam
pop
pop
sbb
sub
in
push
dec
rcrl
insb
jno
arpl
mov
xor
push
addr16
add
idivl
in
sub
mov
jmp
in
mov
jno
ficompl
xchg
or
adc
stc
in
stos
xchg
outsl
push
inc
aam
loop
hlt
or
sub
pop
mov
mov
icebp
lods
adc
out
mov
mov
fidivs
cmpsb
mov
jbe
push
jl
inc
jg
scas
cmp
aam
add
cmpsl
in
push
push
and
pushf
dec
dec
xor
out
adc
and
fdivl
sbb
negl
repnz
or
mov
pop
in
mov
pop
cmpsb
jnp
and
inc
leave
popa
frstor
rcrl
cmp
lods
xchg
cmp
inc
imul
pop
shrl
sub
xor
je
jp
pop
out
pushf
dec
movsb
push
ret
mov
in
insb
pop
imul
or
jge
jecxz
lcall
inc
stos
cmp
ret
and
inc
repnz
outsl
add
sbb
jmp
movsb
rcrl
push
lcall
cmp
mov
xor
sbb
mov
adc
data16
pop
andl
xchg
icebp
dec
cmpsb
push
fcoml
xchg
aad
das
ja
jl
outsb
xor
insl
mov
icebp
call
or
int3
in
mov
inc
call
shlb
in
push
mov
push
mov
inc
sub
lret
lds
jl
in
dec
repnz
cmp
push
test
lcall
push
and
mov
sahf
cmp
popa
arpl
dec
lods
aaa
mov
loopne
stc
imul
int
pop
pop
movd
js
push
push
inc
inc
ret
mov
inc
inc
out
add
aam
inc
push
xor
cmp
mov
int3
fldcw
jmp
mov
pop
mov
xor
cld
xchg
xchg
push
loopne
ficomps
test
lods
rorb
lds
pop
rcrl
daa
lods
or
cmp
or
inc
es
sub
fcmovnu
aas
aaa
loopne
imulb
adc
dec
push
jno
mov
push
push
inc
inc
fbld
subb
pop
idiv
sti
aam
es
das
cmpb
jns
sbbb
icebp
je
test
outsl
adc
daa
cmpsb
das
fsts
imul
pop
and
sahf
jbe
jne
out
xchg
out
nop
rclb
mov
push
mov
or
push
adcl
mov
pop
add
ds
fldt
or
sti
out
mov
sub
or
sub
ret
jo
in
jno
mov
sub
pop
adc
jb
jnp
or
mov
inc
imul
das
xchg
movsl
cmpsb
insl
pop
loopne
loope
roll
adc
les
cmpsb
push
in
lahf
imul
jg
pusha
mov
stos
add
jecxz
stc
stc
xchg
cwtl
repnz
je,pn
fildll
popa
movsl
mov
push
addb
outsl
adc
fsubrp
pop
xchg
xor
mov
mov
sbb
cwtl
js
mov
addl
adc
sahf
and
mov
inc
cmp
mov
push
arpl
xor
xchg
xchg
push
sub
push
aaa
lock
mov
stos
andb
cmp
movsb
sub
cwtl
sbb
sbb
aas
hlt
mov
xchg
int
out
int3
push
jae
jmp
cld
lret
jae
adc
notl
inc
popa
sbb
pop
push
adc
adc
dec
lock
in
clc
sub
rorl
jae
fiadds
out
fdivl
mov
out
ffree
mov
add
cmp
int3
inc
and
clc
lahf
je
dec
popa
sub
mov
dec
inc
ljmp
inc
dec
mov
mov
mov
les
in
jecxz
pop
xchg
aam
out
sbb
pop
lret
xlat
fs
sbbb
int3
std
sub
sub
rorl
sbb
movsl
les
je
pop
jo
subb
cmp
imul
lds
inc
xchg
pop
leave
sbb
ss
lret
jl
aaa
push
push
cmp
sbb
movsb
sub
sbb
pop
icebp
adc
ljmp
outsb
xor
test
cs
xor
sahf
push
mov
rcrb
xchg
clc
inc
fildll
push
xor
lods
jns
cmp
addr16
cltd
data16
das
cmp
sub
out
movsb
jbe
mov
bound
jnp
sub
dec
jecxz
inc
lds
daa
sti
push
fnstsw
addr16
pop
mov
or
imul
sub
mov
arpl
push
xchg
dec
jbe
cs
mov
sbb
arpl
in
push
dec
inc
xor
cmp
mov
mov
push
pusha
flds
push
inc
adc
push
inc
fistpl
arpl
adc
addr16
or
aaa
mov
das
pop
mov
arpl
sti
mov
das
mov
mov
mov
js
xlat
das
popa
gs
mov
arpl
and
testb
pop
clc
in
push
mov
jecxz
fistl
mov
int
stos
cltd
cmpsb
cld
xor
adc
aaa
repz
push
xor
out
push
mov
dec
fwait
jmp
ret
mov
out
fcoml
mov
mov
adc
push
push
jp
mov
cs
cltd
and
jle
dec
adc
and
cmp
incb
cli
loopne
adc
out
push
test
call
add
xchg
mov
or
in
shlb
popf
out
mov
xor
test
xlat
mov
xor
mov
adcb
lret
sbb
leave
aad
adc
and
jp
popa
add
jg
add
lds
outsl
or
popf
cs
adc
mov
xor
dec
js
jnp
push
lcall
pop
add
rcrl
mov
and
mov
pop
pop
je
pop
or
in
test
sbbb
shl
xchg
lock
inc
mov
cmp
ret
sbb
adc
outsb
jle
scas
inc
insb
ds
scas
icebp
js
test
out
sbb
or
mov
in
dec
or
in
cltd
pop
int3
fsubrl
and
int3
lret
fnstcw
mov
leave
pop
lret
in
mov
mov
insb
cmc
sub
push
mov
addr16
inc
roll
jnp
popa
inc
mov
lcall
mov
sahf
jb
scas
loope
push
cmp
sbb
mov
scas
inc
push
push
adc
adc
xchg
dec
mov
sti
jmp
lret
jmp
adc
jo
repz
inc
mov
scas
xor
into
pmulhw
stos
push
pop
pop
in
xor
mov
test
test
arpl
insl
cmpl
out
nop
cwtl
or
pop
pop
aam
add
nop
test
mov
addr16
mov
xor
iret
cmpl
jp
xor
mov
stos
cmpsl
push
aas
cmp
arpl
je
jo
push
les
mov
sbb
xchg
popa
and
mov
push
mov
fidivrs
pop
jp
sub
add
cltd
into
inc
cli
or
cmp
stos
out
push
cmpsl
push
xchg
ret
pop
xchg
jge
cmp
mov
in
pushf
mov
xchg
scas
sub
sahf
aaa
outsl
add
mov
jl
mov
sti
adc
cs
loope
mov
incb
push
hlt
ds
lods
mov
and
cmpl
mov
rclb
cmp
test
loop
aaa
adc
xor
xor
and
rolb
imul
pushf
cmpsb
add
and
mov
cwtl
mov
hlt
xor
push
push
in
fiadds
sub
test
iret
xlat
pushf
mov
repz
or
pushf
incl
lret
movsl
mov
repnz
or
ds
adc
je
or
inc
add
push
and
pusha
cmpsb
lods
add
out
idivl
cmp
adcb
fldl2e
sub
or
add
sbb
stos
jg
jg
inc
lock
fnstenv
cli
inc
test
cmp
mov
mov
stos
fdivs
pop
loop
add
pop
cmp
clc
push
test
fiadds
imul
jp
daa
jno
jae
sub
adc
jmp
cmp
ja
mov
loopne
add
inc
fwait
popf
and
out
push
fwait
sub
loope
sbb
clc
lret
es
xlat
clc
aad
xor
and
xor
xor
and
addb
repz
and
add
xchg
push
pop
shr
fsts
dec
jno
ljmp
daa
jle
lret
scas
pop
ret
jae
add
fxch
shld
lret
addr16
pop
outsl
in
or
stos
jns
in
and
stos
outsb
stos
inc
cmp
jp
push
std
dec
out
mov
mov
adc
push
inc
insl
lds
ret
jmp
push
mov
scas
xchg
pop
push
dec
loope
jmp
cwtl
or
fcoml
pop
lcall
push
enter
and
and
sbb
test
es
and
jle
mov
orl
mov
insl
mov
add
pop
sti
loop
cmc
enter
push
sbb
add
notl
stos
dec
pop
mov
inc
xor
andl
test
dec
aam
or
sbb
and
test
test
add
dec
mov
sbb
bound
loop
sbb
aaa
cmp
xchg
dec
test
xchg
fsubl
mov
ret
cmp
push
push
mov
and
xorb
sbb
pop
arpl
inc
pop
bound
xchg
in
js
andb
inc
sbbl
jno
fsubrs
push
out
imul
js
push
adc
and
divb
push
xchg
rcr
inc
xor
xor
je
scas
mov
pop
push
sbb
cmp
mov
iret
test
xchg
aaa
xor
push
jno
dec
lret
mov
imul
xor
sarb
push
mov
pop
hlt
lods
mov
inc
adcb
mov
mov
mov
push
ret
add
fdivl
in
ret
jmp
mov
mov
xchg
and
stos
aad
jbe
lret
pushl
iret
ss
insl
mov
call
cmpsl
push
cs
leave
aaa
pop
shrb
sti
add
outsl
in
push
pushf
adc
insb
out
jg
sarl
sti
push
sub
inc
pop
inc
notb
testb
pop
popa
addl
mov
inc
adc
aad
mov
scas
sti
pop
cmpsl
mov
adc
stc
cmpsb
xor
jnp
jg
cltd
add
xchg
sub
aad
imul
test
cld
aad
fnstsw
ret
cmp
sbb
jbe
sbb
or
jae
clc
add
sbb
out
int
adc
dec
push
xlat
sub
push
pop
mov
mov
xchg
icebp
adc
push
xchg
loopne
fs
push
xchg
inc
imul
mov
fiadds
out
test
cmp
and
test
in
push
popa
mov
push
rcll
rorb
xor
cltd
xchg
mov
pop
cs
incl
repz
lret
inc
or
inc
mov
dec
push
ljmp
and
repnz
repz
aas
icebp
mov
or
lret
push
push
xchg
cmpb
out
sbb
cmp
xchg
pop
add
mov
inc
add
in
jnp
andb
push
jae
enter
cmpsl
add
repz
fs
shrb
test
scas
push
addr16
push
jbe
cli
stos
test
jne
mov
xor
push
test
orl
loop
fistpl
cmpb
stc
sahf
loope
scas
lahf
ljmp
repz
mov
sub
mov
shrb
sbb
std
xor
push
mov
lods
into
pop
mov
jmp
fidivl
insb
mov
aam
psrlq
aam
ljmp
lret
cmpsb
subps
lcall
cmp
cs
cmp
adc
test
out
cld
addr16
mov
dec
or
movsl
inc
in
jecxz
and
jbe
je
push
pop
mov
sub
adc
addr16
push
call
dec
or
xor
lcall
or
mov
in
divl
in
mov
or
in
and
xchg
xor
popa
sub
xlat
xor
pop
mov
das
jb
pop
cmc
lahf
adc
adc
push
mov
sub
fisttpll
ret
insb
jo
dec
imul
and
ljmp
loopne
jb
sub
cmpsl
xor
repz
movsl
idivl
jne
call
movsb
les
push
seta
adcl
mov
jge
aad
cmpsl
addr16
jne
push
lahf
nop
adc
xor
movsb
mov
mov
xchg
inc
test
mov
popa
das
std
clc
mov
cli
and
rorb
push
es
inc
ja
sub
gs
mov
and
xchg
add
insl
shrb
pop
imull
mov
in
jmp
push
lcall
inc
cmpsl
nop
cmp
fistps
gs
aad
dec
movsb
lret
push
das
xchg
in
ror
les
adc
cmp
sub
cmp
filds
idivb
sub
or
cmc
aam
fsubp
xor
dec
inc
xchg
sub
rclb
out
orb
inc
enter
xchg
adc
scas
push
ficomps
lock
xor
dec
xorb
or
popa
push
or
pop
popa
div
ja
enter
fistps
stos
out
fmuls
push
sbb
pop
fistpl
mov
sub
xor
jnp
dec
shr
incl
arpl
out
mov
mov
daa
loope
add
jle
cmpsb
push
mov
dec
cmc
adc
mov
roll
cmc
clc
outsl
jg
cmpsb
mov
dec
xchg
je
insb
inc
stc
add
inc
jns
mov
jecxz
xchg
dec
cmpsb
xchg
cmp
loope
sahf
jne
xlat
call
add
cmp
out
cmpl
dec
sbb
jno
push
daa
add
adc
mov
xchg
out
sub
xor
movsb
inc
outsl
sahf
aam
test
xchg
je
aad
jbe
stos
jp
mov
aam
xor
ror
cwtl
xor
into
fsubrs
call
jbe
ljmp
mov
or
and
negl
dec
sub
add
and
add
mov
jmp
fs
xchg
push
out
imul
jp
jbe
js
pop
out
jmp
push
add
jg
add
xor
cmpsl
adc
test
clc
hlt
out
enter
or
mov
pop
or
xchg
shlw
pop
mov
push
pop
push
nop
movsb
inc
mov
mov
xor
push
pop
add
jp
inc
jp
or
or
clc
or
cmp
mov
out
jecxz
jle
jmp
mov
sub
inc
pusha
fcmovnu
mov
sbb
mov
and
icebp
mov
sub
mov
rolb
xor
dec
and
cli
mov
arpl
shrl
jbe
push
loope
in
jmp
jg
jecxz
add
cwtl
sub
lds
sti
and
aad
xor
sub
or
and
and
inc
add
xor
inc
ja
inc
mov
add
xchg
inc
cmp
data16
or
addr16
xchg
inc
sub
cmp
dec
or
jp
inc
loope
mov
sbb
and
test
ss
outsb
jle
push
or
sbb
rcll
mov
mov
push
mov
mov
div
mov
jne
mov
push
roll
dec
lock
mov
sub
pusha
xchg
mov
in
pop
in
ljmp
push
mov
std
test
sbb
cwtl
dec
push
adc
jno
scas
shll
and
mov
int
les
cmpsb
loop
xchg
fcompl
sbb
pop
mov
push
adc
cmpsb
xchg
xchg
jo
call
shld
test
add
loope
movl
test
adc
xchg
push
pop
std
xchg
adcl
xlat
pop
push
push
mov
dec
jns
in
push
sahf
inc
push
push
lahf
mov
aad
pusha
mov
dec
mov
and
xor
mov
and
in
or
mov
bound
mov
ret
je
push
add
rolb
aam
sar
xchg
inc
cmp
inc
ret
repnz
adc
popf
mov
mov
test
test
cwtl
mov
addb
jbe
push
cmp
cmp
sbb
mov
cmp
stc
les
movsl
out
mov
or
sbbl
mov
stc
insl
xchg
in
dec
sub
jl
inc
pushf
rorl
dec
in
jnp
shr
add
xor
or
js
mov
adc
mov
cmpsl
pop
inc
push
add
jmp
lods
sbb
push
inc
lret
xor
sbb
fcomp
push
subb
test
mov
push
pop
adc
pop
inc
les
mov
popf
addr16
or
ret
imul
out
xor
sub
jo
pop
or
bound
pop
in
push
push
dec
loop
inc
pop
or
loope
dec
adc
push
jg
cmpsb
adc
test
addb
and
pop
shrb
stos
xor
sbb
jmp
mov
mov
mov
mov
outsb
ja
shlb
jp
ret
shll
dec
cmp
or
jae
sbb
mov
mov
mov
jo
leave
xchg
mov
jo
daa
xchg
or
insb
mov
or
lcall
push
movsb
or
or
mov
cmpsb
or
add
bnd
push
jns
arpl
lea
push
sub
push
std
aam
lods
push
xlat
lahf
or
push
rorl
loope
xchg
sbb
pop
bound
adc
mov
xlat
lock
dec
sub
sbb
inc
cmp
jno
mov
adc
dec
push
shl
out
rorl
inc
aaa
andb
add
push
push
in
mov
push
lret
call
gs
orb
cmpsb
shlb
add
xchg
push
mull
imul
in
lods
test
subb
cmp
xchg
dec
xchg
dec
jg
je
xor
addl
popa
std
test
lret
nop
mov
ret
sarl
icebp
xchg
inc
cs
ljmp
shrb
or
mov
pop
lods
xor
push
popa
sbb
xor
in
xchg
movb
xor
jne
mov
xor
push
leave
xchg
sub
cmp
loopne
xorb
mov
mov
sbbl
mov
cmp
shll
ret
dec
cmp
mov
fs
fwait
mov
push
and
xor
int
add
mov
fistl
iret
inc
push
and
repz
push
jle
or
orb
orl
hlt
mov
out
fs
addr16
fiadds
cmp
sbb
insl
es
dec
and
or
mov
mov
orb
out
add
int
mov
and
and
lret
push
shrb
xchg
imul
pop
add
dec
shl
or
and
cmp
daa
out
mov
fwait
jns
jg
in
test
pusha
jo
mov
mov
mov
cmp
lods
repnz
push
rorb
pop
aam
lcall
jae
adc
fs
lcall
lcall
add
jns
mov
pop
pop
bound
xor
pop
dec
push
subl
or
ja
or
fwait
xlat
out
std
lret
inc
cltd
test
pop
pushf
add
sub
push
mov
pop
sti
test
cltd
xchg
sbbl
incl
dec
sbb
int3
sub
cld
cmc
addb
popa
xchg
adc
movsb
fistps
insl
sbb
or
sub
in
and
fdivrs
lods
inc
pusha
lcall
cmpsb
imulb
outsb
negb
out
sub
rcrl
std
cmpsb
xlat
mov
les
addl
xchg
xor
stc
inc
inc
fdivs
sub
call
mov
inc
pop
pop
jmp
push
test
pop
jbe
fisttpl
add
mov
cmpsl
daa
inc
jo
and
cmp
fdivs
movsb
fnstenv
push
jle
mov
testl
adc
stc
inc
and
pusha
loop
out
xor
xchg
and
fsubrl
adc
fimuls
lcall
rorl
lods
adc
jbe
daa
jo
aad
pop
aas
jecxz
movl
ljmp
fstpl
mov
das
sarl
pop
popa
ja
into
fneni(8087
cld
mov
mov
sbb
arpl
aaa
jmp
movsb
cmovne
xchg
add
mov
adc
mov
fidivs
sbb
xchg
fldt
stos
xor
mov
pushf
pop
jl
add
jge
imul
xor
jl
jno
out
rclb
and
ljmp
dec
gs
and
dec
mov
jb
push
dec
sbbl
xchg
out
lods
popa
fildll
pop
xlat
imul
ficompl
dec
mov
add
sbb
xchg
add
fnstsw
loope
loope
and
cmp
adc
sbb
or
add
aaa
jb
cmovle
sbb
sbb
cmc
xchg
js
fdivrs
bound
divl
inc
jg
or
out
call
aam
sub
sbb
mov
or
rcll
adcl
dec
mov
aas
cmpsb
pop
push
xchg
adc
xchg
cmpsl
inc
fstpt
ds
andl
insb
push
dec
lret
stos
cmp
enter
enter
popa
jno
jge
add
mov
mov
jno
cli
mov
xchg
and
das
movsb
sbb
adc
dec
add
nop
push
aas
fwait
in
jns
and
shrl
outsl
add
add
jge
jp
sub
or
in
aaa
add
adc
mov
mov
inc
inc
outsb
xchg
add
test
cs
loope
in
out
or
lock
rcl
cmp
inc
outsb
mov
movsl
cmp
cmp
loope
sub
or
int3
jmp
push
iret
aad
xchg
add
push
fidivs
or
aad
push
sahf
jns
test
jle
idiv
dec
je
and
mov
cmp
xchg
xor
inc
and
jecxz
mov
sbb
cmp
outsb
scas
cmp
sti
inc
adc
insb
fsubrs
mov
pop
jle
call
adc
popf
or
add
jne
cmp
fstl
and
mov
repz
lods
shll
in
shrl
les
in
cmp
inc
int3
aaa
cmp
sbb
call
cltd
test
xor
gs
pusha
data16
jno
inc
lods
sub
test
lret
clc
loope
in
cmp
push
mov
xchg
in
jle
int3
cmp
cwtl
push
mov
cmpsb
xchg
add
push
cmp
pop
push
lret
jae
sarl
pop
pop
and
and
arpl
add
add
lret
insl
das
xor
push
and
andl
stos
or
inc
cs
add
dec
push
int3
outsl
cmp
out
adc
je
das
mov
clc
cmp
lret
out
sub
xor
push
sbb
xchg
cmp
pop
mov
aaa
repz
mov
mov
mov
mov
icebp
sar
jb
and
and
lahf
xchg
jno
fmul
push
sub
jle
and
inc
inc
mov
call
inc
stos
fisubl
pop
sbb
jmp
lock
scas
push
int3
mov
sbb
popf
push
fwait
mov
sbb
mov
and
jmp
enter
push
push
mov
adc
jae
push
test
test
out
xor
faddp
orb
pop
mov
bound
scas
rcl
into
jecxz
fsubr
jae
jmp
daa
mov
or
cmp
push
das
jae
iret
push
in
cld
and
dec
sbb
xchg
xlat
or
xchg
cmp
shl
mov
data16
xchg
mov
sub
dec
mov
arpl
sti
rcr
pop
mov
fmull
jb
xchg
jecxz
ret
mov
push
pop
xor
jmp
shlb
ss
mov
or
pop
ss
and
mov
jb
testb
push
mov
inc
mov
push
cmp
imull
repz
popa
das
lea
sub
hlt
cmpsb
inc
mov
mov
add
ss
xor
cli
jo
andb
xchg
xchg
dec
add
ja
es
push
push
idivb
nop
orl
sub
fs
repnz
and
mov
sub
repz
or
stos
sub
mov
test
imulb
push
sub
push
mov
incl
cmp
data16
shlb
iret
mov
lret
das
test
mov
ret
jle
mov
xchg
fmull
add
mov
iret
jmp
jl
xor
cmc
or
inc
push
push
out
add
or
ljmp
mov
inc
pop
lods
aas
lahf
out
pusha
jo
sub
inc
fnsave
mov
cmpsl
pop
shlb
pop
sti
and
in
lahf
add
mov
arpl
mov
cli
ljmp
int
in
cmp
mov
dec
mov
xchg
cmp
rcrb
mov
or
adc
xlat
mov
movsl
cmp
call
scas
dec
dec
jge
mov
daa
pop
jae
and
in
sub
adc
lret
push
push
frstor
pop
jnp
std
ss
out
inc
imul
js
adc
add
idivb
mov
add
sbb
ljmp
jecxz,pt
xchg
inc
int3
and
sub
sub
data16
sub
fs
pusha
inc
out
div
ljmp
mov
push
outsb
push
sub
repnz
jae
outsb
dec
dec
imul
push
bound
cli
ret
pop
out
add
and
mov
pop
xor
scas
or
add
or
int3
scas
sbb
cmpsl
stos
inc
test
cmp
popf
mov
cmp
cmp
mov
push
add
cltd
mov
mov
adc
or
test
lret
int
push
gs
sub
or
mulb
out
or
xchg
pop
add
lahf
push
push
movsb
insl
jb
mov
add
mov
jo
push
sbb
ficomps
xor
decb
sar
ficomps
loop
mov
mov
dec
xor
popf
test
or
adc
add
rorl
testl
in
pop
add
fdiv
stos
xor
mov
xor
pop
mov
xor
scas
cmp
mov
andb
int3
mov
add
fildll
fstpl
cmp
dec
cmp
adc
pushl
mov
mov
enter
enter
lods
and
call
dec
sbb
cmpsb
cmpsl
or
fxch
clc
pop
pop
dec
add
repnz
cmpsb
adc
shr
icebp
es
std
nop
pop
sbb
xor
outsb
push
mov
lods
mov
cmp
sub
add
pop
cwtl
outsb
pop
mov
cmp
push
lret
mov
sub
ja
ret
xor
stos
cmp
cmpsl
iret
and
and
out
loopne
aad
add
lds
add
imul
sbb
es
stos
fdivp
data16
jns
or
push
sahf
ds
cmp
mull
dec
stc
adc
jg
shll
inc
cld
cmpsl
lcall
fildll
cmp
jb
xchg
cmp
and
cmp
sbb
pop
daa
sbb
lock
add
or
xchg
sti
jo
fadd
jno
stos
testb
cmp
out
fsubl
loope
loope
fbld
mov
loopne
add
fists
movsb
push
arpl
shlb
push
out
cmp
jle
es
mov
mov
sub
push
icebp
addr16
nop
shr
pushf
cmp
out
inc
push
push
fwait
aas
mov
cmp
test
inc
add
mull
dec
xchg
data16
pop
stc
sarb
repz
sarl
enter
push
ljmp
mov
movsb
rcrb
cmp
pop
push
testl
fincstp
pop
push
cli
fisttpll
sbb
insb
out
sarl
cmpsb
arpl
jo
outsl
xorb
jg
mov
lret
icebp
ja
mov
test
push
cmpsl
icebp
inc
ljmp
out
xchg
cmpsl
movb
mov
xor
xchg
pop
bound
stos
mov
add
xor
outsl
mov
mov
bound
dec
daa
dec
ljmp
jnp
jae
sbbl
addr16
lock
daa
mov
movsb
fwait
cli
daa
jle
mulb
aam
into
ds
int
mov
push
pop
in
aad
idiv
fwait
int3
inc
int3
outsb
add
fnstsw
dec
out
cmp
xchg
jb
pop
sbb
jno
and
dec
out
aad
inc
cmp
and
add
mov
in
pop
out
push
inc
add
mov
cmp
es
shrl
loope
sub
cmp
push
mov
mov
xor
jl
add
out
fs
or
sbb
scas
ret
mov
cmpsl
outsb
in
push
xchg
push
mov
pop
test
stos
call
mov
xchg
or
add
gs
lods
js
xchg
in
push
jmp
sub
ss
mov
repnz
cmpsl
pop
decl
adc
dec
push
je
sbbb
mul
pop
push
mov
in
xor
xor
xchg
cmpsb
jecxz
out
sbb
dec
scas
shr
xor
dec
mov
push
lret
sub
cld
adc
subl
test
pop
clc
shl
mov
adc
inc
lcall
addl
xchg
fldt
or
push
jne
inc
push
mov
mov
pop
cmp
cmpsb
mov
xchg
jl
mov
repz
enter
inc
fidivrs
fdivr
int
fldenv
dec
sub
inc
mov
mov
dec
jae
and
clc
sarb
sub
pop
in
lds
and
add
xchg
xchg
pusha
jle
roll
ljmp
dec
cld
decb
movsb
sbb
push
sbbb
pop
mov
loopne
idivl
inc
xor
mov
sub
and
into
dec
pop
fidivs
popf
sbb
lock
xor
mov
mov
lea
outsl
fs
sbb
fs
ljmp
mov
push
outsb
jno
xor
xchg
dec
pusha
or
in
sbb
jl
nop
roll
jb
in
cmpsb
jb
xchg
add
and
lods
adc
es
roll
mov
inc
xlat
movsl
les
mov
xor
data16
fadds
fistpl
sbb
es
imul
jl
mov
mov
dec
jmp
inc
add
sub
lahf
call
js
negb
xchg
out
lea
scas
or
movsb
push
and
add
leave
stos
or
stos
arpl
mov
mov
loopne
or
orb
add
scas
movsb
sbb
add
jno
sub
and
popa
sbbb
and
add
mov
orb
cmpsl
xor
iret
and
sub
in
cwtl
xor
xchg
and
sub
or
movsb
and
rol
jle
aad
in
pusha
sbb
aaa
cmp
clc
cmovo
push
ret
push
sub
pop
mov
adc
pop
adc
push
jmp
push
cli
xor
cmp
push
mov
mov
in
rcr
sub
cmp
inc
movsl
ljmp
xor
pop
test
dec
enter
aad
ret
inc
imul
std
jecxz
cmp
aam
sbb
jge
jne
ds
int3
push
push
xchg
hlt
inc
std
or
and
mov
inc
outsb
jmp
lret
xor
dec
iret
inc
test
and
adc
and
js
shlb
mov
xor
xchg
cmpsb
enter
jne
dec
push
xor
mov
sub
jne
sub
inc
mov
pop
je
sub
add
lds
pop
int
or
mov
xchg
pusha
pop
sbb
pop
shlb
sbb
scas
fmuls
sub
andl
or
xchg
pop
cltd
xor
mov
insb
pushf
adc
imul
jnp
xchg
ret
imul
and
push
adc
add
adc
dec
mov
inc
jae
ret
or
punpckhwd
int3
gs
or
lods
lods
mov
subl
inc
int3
mov
test
push
in
das
fwait
aad
jns
sbb
and
mov
mov
add
ret
cmp
aad
mov
sbb
and
repnz
xchg
in
std
clc
mov
and
xchg
fdivl
jbe
xor
in
sbb
xchg
xchg
push
popl
sbb
clc
test
addr16
jmp
xor
inc
cmp
insl
sbb
push
inc
push
xchg
mov
shlb
sbb
or
scas
iret
or
test
pop
lods
jp
rclb
outsb
pop
imul
xorb
or
dec
data16
lahf
xchg
pop
xor
leave
in
jmp
jb
add
lods
hlt
mov
mov
das
aaa
xor
in
push
adc
sub
fldenv
divl
mov
repnz
bound
mov
push
not
insl
and
fsubl
ret
cmc
gs
mov
lret
int3
sbb
scas
gs
dec
jno
je
bound
sbb
xor
stos
push
popf
gs
mov
or
dec
iret
mov
les
sti
rcr
xchg
jns
gs
xor
movsb
inc
add
jmp
push
scas
in
in
mov
jb
sbb
out
outsb
leave
lods
das
int3
shlb
insl
arpl
stc
movsb
mov
or
sub
iret
mov
sbb
xchg
mov
jg
into
cmp
out
fiaddl
xor
inc
mov
mov
and
sub
mov
mov
cmc
inc
sbb
add
pop
inc
mov
stos
loop
push
adc
fstpt
sarb
xchg
std
shrl
xor
and
bound
pusha
and
outsb
sarl
mov
aad
and
addr16
pop
ret
jmp
sub
imulb
push
sub
lods
sub
and
xchg
push
in
cmp
loope
lods
xchg
cmp
push
iret
sbb
push
in
mov
movsl
sub
xor
cmp
dec
or
cwtl
jmp
arpl
xchg
adc
and
outsl
aam
or
xor
hlt
jns
inc
jne
add
and
jp
xchg
imul
jge
inc
jno
adc
cmc
sbb
aaa
outsb
and
inc
mov
pop
movb
xchg
xor
mov
sub
fwait
or
jbe
addb
mov
dec
mull
and
in
push
xor
loope
bound
pushf
dec
xchg
lock
pop
push
mov
nopl
inc
ret
mov
inc
mov
dec
cli
inc
shll
push
xchg
stos
in
imul
and
sbb
call
adc
sbb
xchg
pop
or
xor
mov
xchg
jo
out
leave
adc
popf
and
sub
sbb
fstps
xchg
lock
sub
pop
test
sbb
sti
mov
outsb
push
cmp
lock
jg
mov
cli
mov
hlt
cwtl
mov
fcmovnu
mov
fsubs
mov
js
xchg
xor
xor
aas
fbstp
and
imul
fwait
mov
fs
sub
xor
aad
repnz
xchg
les
loopne
loop
mov
sub
movsl
pop
fwait
enter
push
adc
lock
push
mov
jne
les
mov
cld
dec
testl
fnstenv
imul
mov
outsb
jbe
ret
fwait
repz
sub
mov
xchg
pop
ljmp
cmp
mov
out
imul
mov
mov
dec
inc
cs
movsb
pop
daa
or
sbb
push
nop
push
scas
dec
inc
cld
out
push
sbb
divl
jo
data16
test
test
inc
push
mov
fsubl
ja
mov
and
jno
adc
or
std
cmpsl
pop
cmp
rcll
dec
movsl
inc
fnstsw
sarl
sub
xchg
cmp
in
mov
mov
sbb
pop
inc
sub
mov
or
dec
ss
dec
stos
fimuls
xor
mov
jmp
inc
inc
jle
in
cmp
mov
daa
sbb
std
jmp
mov
sub
movsl
cmp
enter
std
mov
aas
in
nop
popa
dec
or
add
pushaw
imul
addr16
testb
adc
push
test
aad
adc
shl
mov
jg
addr16
adc
inc
push
cmp
and
lock
in
pop
dec
mulb
lds
xor
jae
mov
fs
pushf
lods
fyl2x
lret
dec
bound
dec
sbb
pop
and
fucomip
add
xor
add
aad
movl
xchg
mull
push
xor
sbb
push
and
and
xchg
sahf
and
xlat
repz
xor
jae
dec
pop
movsl
xor
sbb
and
mov
std
inc
push
push
subb
cmp
sub
cltd
jno
rcll
cld
sti
jb
lret
in
fcoml
pusha
pop
jp
enter
daa
fdivr
lods
jecxz
adc
shrb
cmpsb
loop
push
aad
sbb
out
loop
jmp
push
inc
jecxz
mov
stos
aam
jne
sbb
fnsave
ja
push
repnz
xor
cmc
push
ds
test
or
aad
mov
test
test
into
or
push
mov
fidivs
sarl
lods
sbb
cmp
subb
xchg
xchg
rcr
sbb
int3
xor
mov
mov
dec
jle
jg
daa
sub
sub
fwait
rolb
pop
mov
enter
fcompl
ds
push
cli
je
mov
mov
xor
loopne
adc
iret
cmp
outsl
shlb
push
test
in
int
cwtl
inc
ja
mov
in
dec
lahf
cwtl
lea
adc
pop
fbld
sarl
cmpsb
xchg
int
mov
out
cltd
loope
adc
mov
xor
inc
rcl
stc
in
cmp
dec
mov
mov
nop
aaa
dec
pusha
push
sub
mov
add
faddp
ficomps
mov
mov
ret
and
test
push
pushf
data16
loop
add
push
call
pop
std
and
ljmp
xor
ficoms
mov
inc
cmp
shll
lods
ljmp
dec
in
add
cmp
loopne
mov
xchg
aam
iret
jo
sub
push
dec
mov
and
xor
stc
sub
cmc
mov
mov
push
aad
pushf
and
pop
notl
movsl
jno
push
mov
int3
pop
inc
shrb
mov
dec
mov
dec
iret
sbbb
int
lock
shll
jae
shll
jns
xchg
cltd
pusha
cmp
insl
inc
lods
push
pop
popa
loop
stos
out
in
sbb
or
ret
test
pop
decb
jmp
xchg
sarl
enter
cwtl
popf
insl
loop
scas
out
or
jo
cltd
add
loopne
or
mov
push
mov
jl
imul
pop
sub
sub
pusha
mov
mov
nop
enter
pop
xor
je
fistl
mov
xor
iret
les
adc
jge
mov
cmp
clc
pop
cmp
in
jle
incl
cli
cmp
pop
and
mov
sub
inc
mov
sbb
mov
fistpll
ffreep
or
cmpsb
insb
cs
icebp
mul
push
xchg
data16
xor
scas
push
sub
fistps
jo
scas
ret
xorb
cmp
lret
out
jnp
push
orl
dec
jae
sub
sbb
ret
dec
pop
jp
or
jl
movsl
negl
or
pushf
adc
jl
dec
mov
pop
leave
mov
lods
cmpsl
sbb
jno
sub
inc
aaa
fidivs
pop
sub
mov
cmp
xchg
sbb
int3
dec
add
xchg
pop
rcll
pop
aaa
pop
push
imul
jns
jno
pop
push
xchg
sub
lret
aas
subl
or
push
xchg
js
add
fisubs
push
sub
repnz
gs
mov
pop
jo
and
std
int
rclb
cmpsb
sbb
jg
popf
mov
and
enter
jmp
out
leave
adc
cmp
or
cmp
or
or
and
into
pop
pop
loop
dec
in
inc
gs
sbb
push
or
in
mov
cli
adc
sti
rcrb
xchg
mov
dec
adc
js
push
cmp
andb
inc
rorl
aam
cltd
sbb
adc
xor
aad
jmp
scas
sbb
cmpsl
jmp
pusha
ret
cld
leave
scas
or
cmpsb
lods
sarl
incl
jg
je
xchg
mov
jl
fldcw
int3
or
call
dec
sub
fnstcw
and
push
lds
mov
cwtl
pmulhw
movsl
mov
push
out
cli
bound
je
lds
dec
sbb
xchg
fwait
aam
mov
pop
dec
jbe
or
addb
pop
stc
push
and
ret
inc
fstpt
movsl
rclb
movsl
dec
cmp
mov
or
inc
pop
ljmp
imul
jae
cmp
shlb
jl
repnz
out
hlt
jp
orl
mov
shrl
sub
out
ds
ljmp
out
jbe
sahf
insl
pop
xor
mov
add
jecxz
shrb
sbb
cld
adc
stc
push
mov
idiv
mov
cmp
dec
gs
clc
jmp
insl
jnp
popf
in
daa
loope
mov
dec
addr16
add
mov
out
mov
dec
inc
sub
repz
mov
je
lea
pop
stos
adc
fbstp
or
out
stos
jo
outsl
into
or
dec
fdiv
mov
cmp
pop
or
push
outsl
punpckldq
popa
xor
mov
cmp
orb
pop
adc
loopne
jbe
xor
fwait
dec
pop
xchg
sbb
mov
shlb
inc
sti
test
push
push
ret
imul
sbb
dec
mov
add
loopne
test
add
fs
rorb
or
scas
shrl
xchg
sub
insl
into
incb
fldt
mov
xlat
mov
pushf
scas
jmp
test
mov
hlt
mov
sub
jne
cld
loope
clc
std
cld
sub
xchg
pop
and
sub
cld
fnstsw
xor
xor
pushf
adc
sbbl
sub
gs
and
xchg
ficompl
jns
sub
fs
jb
and
pop
sbb
dec
jl
negl
jne
rorl
cmp
mov
sahf
inc
popf
in
fwait
xchg
xchg
ds
mov
movsb
rorl
ljmp
jle
imulb
stc
jo
sbb
je
clc
cwtl
inc
jecxz
test
adc
cmp
lret
ret
inc
mov
mov
adc
sbb
add
addb
aaa
mov
cmp
mov
fdivp
cmp
mov
insb
movsl
es
push
xor
adc
dec
mov
fistl
push
push
push
jnp
les
sahf
bound
dec
pop
inc
push
sub
mov
sarb
out
aas
mov
and
js
mov
adc
icebp
adc
adc
test
add
clc
xor
das
mov
repz
outsl
dec
inc
ds
sbb
loopne
faddl
in
push
pushf
sarb
fsubrl
outsb
pop
cs
adc
push
mov
xor
inc
xchg
push
rcrl
mov
stos
mov
dec
ss
mov
shll
cmp
movsl
xchg
cmp
lds
pop
pop
xor
fisttpl
int3
daa
jo
jp
mov
mov
loope
xchg
scas
or
out
popf
sub
sub
mov
jmp
arpl
cltd
push
xor
ret
fnop
mov
sarb
adc
movb
push
or
xchg
pop
lret
cli
or
shl
bound
mov
test
or
jnp
outsl
shl
pop
ficoml
daa
lahf
in
dec
mov
push
scas
adc
mov
jne
ret
arpl
cmp
andl
adc
gs
mov
xchg
adc
mov
mov
push
or
and
inc
mov
jnp
cmp
mov
mov
iret
inc
cltd
push
push
push
xchg
mov
std
popa
lods
stos
ja
sbb
das
mov
sahf
bound
dec
mov
mov
xchg
mov
dec
jnp
jecxz
xlat
stc
pop
mov
push
fcmovnu
mov
pop
xor
addl
ds
lahf
fdivp
xchg
fbstp
cmc
sub
mov
sete
shrl
iret
push
mov
push
inc
icebp
xchg
xchg
dec
data16
mov
int
cmp
sahf
add
dec
jl
xchg
repz
jne
iret
add
mov
test
les
rol
jo
mov
add
cltd
xchg
push
fst
rcr
adc
mov
movsb
mov
dec
lock
mov
fwait
dec
lcall
mov
std
cmpsl
sbb
xchg
push
sbb
mov
mov
xchg
jl,pn
push
mov
cmc
mov
std
dec
xor
push
xor
pop
add
shrl
or
repz
xlat
mov
mov
jle
xchg
je
popa
js
jecxz
push
fnstsw
lahf
fbstp
shll
jno
inc
out
jns
roll
lahf
add
cmp
out
xchg
sub
jo
mov
das
fdivrl
inc
js
mov
mov
jmp
xchg
xchg
arpl
lcall
shrl
repz
dec
or
into
xchg
iret
test
fsubrl
sti
idivb
jl
mov
insl
mov
cmpl
jnp
cltd
loopne
dec
sub
mov
xchg
sub
out
mov
shrl
sbb
or
test
pop
scas
or
es
js
clc
mov
push
push
fmuls
mov
sbb
xor
shlb
andl
xchg
call
in
sub
push
add
push
cmp
std
cmp
sub
in
inc
cmp
shrl
pop
xor
in
in
shlb
jg
mov
lds
rcrb
sbb
stc
ljmp
jne
fxam
jg
cmpsl
fdivrs
lea
out
mov
dec
in
lods
loope
fmuls
mov
or
add
push
hlt
in
adc
adc
xor
sub
pop
mov
ret
enter
cmp
mov
frstor
xchg
add
sub
pop
xchg
ficompl
push
cmp
fsubrs
enter
jne
push
xorb
out
enter
inc
aad
adc
pop
mov
push
mov
push
sbb
jl
and
out
movl
andl
daa
fistps
pop
ret
idiv
jae
mov
jg
adc
lahf
test
mov
sti
cmc
sub
hlt
andb
mov
das
loop
adc
xor
or
in
cmp
xorb
stos
xchg
pop
add
pushf
dec
mov
fisttpll
pushf
xchg
sarl
aas
lock
bound
push
dec
clc
cmp
ret
lret
ret
clc
cmp
push
dec
push
fwait
or
inc
sub
faddl
xchg
sub
xor
add
pop
les
push
or
ljmp
inc
negl
jl
cld
xor
les
fistps
push
popa
repnz
cmp
stos
pop
xchg
arpl
jbe
pusha
xor
cmp
mov
xorl
jge
inc
shlb
imul
mov
mov
adc
cmpsb
jl
pop
pop
dec
mov
ret
stos
addr16
popa
ret
or
xchg
cmp
sti
das
subl
xchg
mov
sbb
pusha
adc
mov
sub
in
inc
sub
cmp
js
out
add
movzbl
inc
jo
sub
rcll
psraw
mov
sbb
out
lock
je
out
pop
test
shrl
mov
xchg
flds
sbb
rol
or
sub
mov
ja
xchg
inc
rcl
mov
jo
repz
mov
sti
into
xor
addr16
and
data16
push
pop
stc
in
fcmovne
pushf
cmpb
mov
das
cltd
loopne
and
and
std
xor
in
cmp
jnp
shl
cli
and
fistpll
pop
push
sti
jmp
xorb
repnz
add
out
inc
lds
push
lock
je
inc
rcrb
das
fldcw
dec
xchg
pusha
in
aaa
push
jecxz
mov
sbb
sub
scas
inc
pop
insb
ret
jno
js
sub
mov
or
imul
stc
shrb
mov
and
clc
nop
jge
sbb
mov
mov
sub
lds
xchg
mov
push
jecxz
stos
out
loope
inc
test
jmp
push
lds
mov
pusha
adc
cmp
fstps
inc
sub
test
add
leave
popf
lret
pushf
push
push
ja
cmp
lea
or
test
enter
dec
cpuid
es
inc
decl
jbe
fs
fidivrl
jb
mov
shrl
sbb
pop
fs
ljmp
dec
insl
ret
mov
dec
jns
mov
mov
movb
dec
dec
jne
in
fwait
nop
pushf
data16
adc
adc
sub
or
push
xchg
pop
call
xchg
push
xor
and
cmc
out
mov
cmpsb
mov
std
arpl
addr16
jp
pusha
imull
jns
inc
outsl
jge
icebp
mov
jecxz
out
fstpl
jb
fisttps
sbb
inc
jne
rcr
cmp
hlt
stos
fildll
aaa
in
fimull
sbb
pop
lcall
loopne
jne
movsl
aas
sbb
mov
bound
or
push
xor
push
mov
fwait
xchg
aaa
in
sti
xchg
dec
mov
ficompl
mov
and
out
les
cmp
aaa
sbb
arpl
jo
je
negl
orb
jp
xor
or
movsb
cltd
clc
bound
insl
pop
mov
mov
mov
add
xchg
test
add
enter
in
and
jnp
dec
nop
adcl
dec
ljmp
lcall
lock
int3
dec
les
rorb
xchg
bound
pop
push
add
inc
mov
mov
add
cmc
xchg
mov
inc
add
pop
push
jb
std
mov
rorl
rcr
jns
mov
call
ret
out
test
int3
add
scas
daa
sub
and
into
fistps
dec
das
sarl
pop
jmp
mov
cld
mov
or
mov
fidivrl
push
cmp
lds
nop
dec
ffree
xchg
outsl
imul
shlb
pop
sub
fs
inc
notb
ljmp
or
pop
loop
and
mov
adc
das
sbb
loope
bound
push
mov
mov
jnp
adc
mov
push
into
push
movsb
insb
xor
dec
ds
aad
lret
jo
ja
lret
and
mov
data16
dec
sub
imul
inc
lock
jns
fisttps
hlt
pop
outsl
aas
sbb
or
insb
int
in
mov
cmp
xchg
out
out
jge
xor
and
sbb
out
daa
mov
scas
mov
frstor
ljmp
adc
leave
cwtl
push
cmpl
test
push
mov
adc
sbb
lahf
adc
rolb
mov
mov
jg
popa
jmp
test
pop
mov
repz
stos
cltd
adc
or
and
fisttpl
clc
xchg
cmp
stos
jne
xchg
ret
rep
pop
push
inc
enter
test
inc
ret
fwait
sbb
pop
lock
cmc
mov
mov
pop
push
jae
push
mov
mov
in
jne
inc
insl
in
loopne
mov
sub
cld
push
xor
repz
fsub
into
or
jle
jo
sub
jnp
mov
xchg
ss
hlt
test
jnp
fdivs
dec
pop
lods
mov
popa
notb
push
loop
icebp
add
or
xchg
or
bswap
mov
fcmovnbe
bound
outsb
and
push
loope
cld
add
mov
mov
pushf
lods
int3
cmp
sbb
lods
ss
mov
scas
mov
sahf
dec
out
cmp
xchg
mov
fmuls
pop
push
cmp
insb
push
push
cvtpi2ps
jae
jge
js
jecxz
xchg
cmc
test
lds
jno
orb
lcall
ljmp
adc
push
add
inc
mov
lods
aad
jl
xor
in
pusha
data16
test
insb
outsb
in
jge
fimuls
in
jp
or
xor
dec
adc
test
pop
lea
out
xlat
sbb
lods
popa
loop
cltd
adc
in
jge
add
xor
xchg
imul
dec
pop
jmp
lods
cmp
mov
in
xchg
and
daa
mov
and
mov
loop
push
das
inc
inc
addr16
mov
cmc
cwtl
inc
pop
or
cwtl
push
ret
sbb
mov
mov
daa
xchg
lcall
arpl
test
lds
and
xchg
mov
stos
push
ficoms
fcoms
sbb
jg
orl
lea
dec
pushf
repnz
jno
inc
in
addb
sbb
repnz
cmp
xor
stc
daa
jo
sbb
int
scas
mov
js
xor
push
pop
aad
arpl
subb
pop
test
cmp
pop
jne
movsb
adc
jnp
test
roll
push
in
mov
arpl
cmp
mov
xchg
stos
jg
lea
fs
mov
cmpsb
inc
sbb
cli
inc
outsl
mov
dec
jnp
popa
incl
xlat
cmp
add
fidivrl
ret
fwait
inc
or
sbb
xor
stos
cs
jne
push
scas
add
jmp
inc
mov
push
push
add
xchg
dec
inc
test
or
jmp
andb
jge
jmp
push
mov
mov
test
aad
les
xor
push
pop
in
xchg
or
mov
incb
cmp
mov
jbe
sub
push
std
call
jmp
and
clc
mov
mov
xchg
mov
std
and
xor
mov
inc
pop
outsl
cmp
push
ss
mov
cltd
xchg
push
xlat
mov
js
mov
mov
enter
mov
rolb
gs
sub
mov
inc
push
dec
push
xchg
shll
into
out
mov
insl
push
add
pop
push
cvtps2pi
pop
sub
jb
sbbl
fmul
mov
aas
dec
push
enter
dec
mov
adc
mov
mov
xchg
or
ljmp
inc
adc
subb
daa
or
xchg
cltd
lds
inc
push
mov
dec
lea
mov
xchg
add
pop
sti
lea
out
sbb
mov
int3
shrb
jg
cs
daa
rep
ret
sub
repz
addr16
in
xchg
cmp
or
mov
negl
push
fiaddl
es
fistl
adc
jge
cmp
sub
mov
rcrl
adc
xor
jle
pop
mov
mov
ret
sub
jo
xlat
pop
inc
add
adc
mov
push
push
out
mov
push
filds
add
xchg
add
jg
insb
adc
in
pusha
mov
or
adc
stos
xchg
mov
addl
dec
sub
push
repnz
sbb
in
add
jno
out
pop
push
add
jl
out
repz
out
lock
lcall
sbb
std
mov
lret
jae
adc
clc
pop
in
adc
cmp
sbb
xchg
xchg
mov
ss
in
daa
int3
call
jmp
movsb
mov
mov
cmp
fidivrl
loope
in
cmp
inc
push
icebp
jne
decb
test
scas
repnz
sbb
loopne
shrb
outsl
sti
adc
pop
icebp
push
push
and
aaa
fdivs
arpl
pop
subb
icebp
mov
sbb
nop
imul
or
insl
or
or
mov
pop
popa
je
mov
jns
mov
rol
and
imul
rolb
jb
xor
arpl
icebp
mov
dec
sub
mov
push
and
dec
mov
aam
cmp
jl
scas
inc
or
cltd
push
and
icebp
neg
mov
jl
or
xor
imul
xchg
pop
inc
pop
iret
insb
repz
mov
fs
cmp
xor
sbb
fnstsw
fsubrs
pop
add
lahf
pop
pop
insl
dec
cld
or
shr
adc
daa
out
lret
dec
add
sub
xor
sbb
mov
andl
mov
das
push
sbb
je
mov
pop
insb
stc
faddp
in
stos
test
cmpl
mov
add
das
lahf
in
xlat
cmp
repnz
xchg
test
pop
popa
mov
push
xchg
in
lret
enter
rcll
pop
cmc
xchg
push
imul
mov
adc
ljmp
pop
mov
dec
lods
pop
jl
dec
push
out
dec
adc
lahf
push
dec
push
mov
sub
aam
mov
mov
dec
xor
es
test
jmp
jnp
sub
xor
ja
outsb
aaa
push
movsb
testl
jge
lcall
mov
inc
push
mov
call
jp
mov
daa
addr16
cmpsb
adc
add
cltd
add
clc
push
mov
xchg
xchg
arpl
adcb
aad
sbb
cwtl
into
stos
arpl
repz
sahf
sub
push
jecxz
cmc
inc
addb
icebp
nop
xchg
lds
pop
movsl
negb
cmp
dec
scas
js
jle
packssdw
leave
jne
ret
push
sub
out
push
add
cmp
into
xchg
out
es
incl
aaa
pop
jecxz
inc
mov
aam
pop
lds
xchg
jb
sti
sbbl
mov
or
faddl
cli
push
xchg
sub
dec
pop
mov
ds
mov
pop
add
js
int
arpl
jle
inc
decl
mov
dec
fwait
sbb
pop
std
pop
loop
adc
dec
or
adc
stos
arpl
cmp
test
int
push
push
sbb
add
sub
mov
sbb
ja
ja
pop
sbb
sub
jmp
insl
adc
fcoms
sub
mov
jle
inc
ja
mov
test
mov
and
lods
push
mov
test
std
xchg
push
jecxz
into
loope
loope
mov
and
sbb
xchg
stc
dec
insb
jbe
xchg
int
fmul
iret
cmc
fs
adc
clc
idiv
adc
arpl
lock
outsl
out
lds
aam
dec
cmc
sub
dec
pop
fnsave
sub
xor
shll
pushf
in
out
cmp
arpl
lret
dec
pushf
ss
je
insl
lds
dec
out
jg
jne
and
pop
adcb
aad
mov
adc
and
fdivr
jle
imul
push
jle
jl
cmp
fld
or
in
mov
test
fwait
lods
inc
and
es
ret
mov
mov
dec
jge
jmp
and
xor
sub
jo
push
lahf
test
cli
jl
pop
xchg
stos
sbb
iret
sub
jo
lock
cmpb
sahf
inc
mov
push
fs
jg
mov
dec
jnp
dec
push
ss
mov
adc
fnstenv
pop
dec
int3
push
cmp
repnz
sbb
aas
movsb
mov
iret
scas
mov
rolb
jae
pop
icebp
enter
rorl
stos
flds
dec
mov
cmpsb
and
cmc
fisubrl
pop
rcrl
push
inc
cltd
pop
adc
or
shrl
int3
ja
sub
sbb
roll
jbe
dec
mov
pop
jp
mov
nop
jne
out
testl
lret
mov
cmp
cmp
lahf
repz
lods
leave
cmp
cmpl
in
push
pop
std
mov
push
cld
das
fldl
cmp
mov
repnz
negl
pop
mov
aad
cmc
and
popa
push
int
jae
dec
inc
ret
mov
enter
out
std
loope
or
imul
xor
lret
push
test
ficoms
and
es
push
or
rcrl
mov
lock
mov
fs
mov
outsl
lock
and
mov
lahf
push
dec
mov
jmp
mov
dec
addr16
mov
cmp
aas
fwait
jg
movsb
fsubl
sub
sahf
lret
inc
inc
jmp
aad
sub
jae
add
pusha
ret
jge
jecxz
sbb
mov
push
ss
dec
push
mov
mov
test
movsb
pop
or
jle
inc
aaa
jle
loopne
in
mov
aas
sbb
push
in
imul
dec
lcall
add
repnz
cli
icebp
pop
mov
loop
xchg
aas
movsb
fisttps
xchg
cmp
dec
jg
dec
add
bound
jl
into
cwtl
mov
jge
push
push
and
push
inc
js
aas
mov
in
cmc
std
mov
adc
or
jge
jmp
scas
fisubl
adc
je
inc
mov
int
dec
icebp
ds
dec
jns
push
mov
scas
mov
lock
clc
xchg
xor
sbb
dec
aas
lods
cmp
pop
fdivl
jl
shlb
leave
faddl
insb
lds
test
mov
stc
lret
and
addl
jns
xchg
int
cmp
jns
ret
fiadds
test
pop
in
jecxz
sbb
jbe
arpl
jbe
leave
or
cmc
adc
adc
jecxz
jle
push
dec
or
ljmp
repnz
dec
movsl
jns
push
push
outsl
pop
xchg
mov
mov
push
mov
pop
xlat
sahf
and
mov
push
jns
mov
popf
loop
enter
aad
js
push
sbb
jns
fwait
lea
ds
jnp
add
aas
js
or
out
cwtl
or
scas
dec
xor
sahf
push
rcr
jne
push
or
and
xor
shll
or
jne
inc
jbe
faddp
dec
lea
lds
mov
ss
or
xchg
stos
sbb
int3
jne
or
clc
inc
cmp
repnz
negb
sub
dec
popf
jmp
or
scas
js
jno
in
inc
ss
lret
std
xchg
inc
sarl
in
loope
xor
mov
push
dec
movl
adc
sarl
sbb
xor
andb
cli
movsl
outsb
push
cmp
and
clc
pop
aas
inc
xchg
movsb
push
dec
push
pop
sub
lret
pushf
sti
dec
sarb
push
mov
pop
xchg
jmp
adc
icebp
add
sbb
xchg
aaa
jle
int3
outsl
mov
fsubs
repnz
sbb
out
mov
fsubs
dec
jg
mov
nop
sub
and
xchg
mov
cs
aas
out
int
xchg
popa
filds
jbe
sub
mov
aad
stos
sbb
ret
sbb
add
bound
fisttpl
mov
push
add
les
ja
mov
addr16
and
and
mov
adc
sbb
mov
mov
xchg
nop
int
push
data16
shll
push
ljmp
or
jb
pop
ror
and
cld
xchg
and
xorb
add
andb
mov
xchg
enter
and
sub
imul
rclb
push
jo
jl
jo
push
mov
mov
adc
lods
cmpsb
jmp
pop
lods
lret
data16
mov
push
push
orb
cli
add
add
dec
and
sub
es
sti
les
pop
xor
push
xlat
push
xlat
inc
adc
cmp
lcall
jnp
aaa
shrb
push
jl
popf
sbb
dec
pop
orb
dec
sub
or
sbb
push
xor
jno
daa
inc
cmp
dec
jae
sbb
shlb
ja
mov
or
iret
sub
mov
xchg
test
cmpsl
pop
push
push
insl
dec
jmp
cs
stos
mov
mov
pusha
and
and
lods
sub
addr16
sahf
push
push
pop
sub
stos
xlat
fwait
push
adc
lods
sub
loope
xor
push
fldenv
leave
aaa
mov
and
in
inc
jae
out
dec
test
lahf
stos
mov
cmp
push
jns
push
lods
jnp
subb
int
sbb
add
inc
xchg
or
sti
bound
in
xchg
xor
into
xchg
int3
jbe
push
js
pop
dec
mov
push
inc
mov
add
dec
pop
fs
jle
and
daa
pop
xchg
andl
orb
test
cmc
jmp
in
arpl
andl
push
mov
imul
xchg
add
or
or
ljmp
jmp
ret
add
xchg
cld
into
sub
pop
or
mov
push
in
shlb
mov
in
lods
and
pop
repnz
mov
xchg
bound
cmp
xor
and
ja
loope
mov
mov
call
push
lret
test
loop
push
les
and
dec
mov
add
adc
pop
insb
pusha
jo,pn
mov
sub
adc
sar
test
insb
imul
jmp
ficomps
ds
xlat
add
mov
popf
orl
rclb
jge
or
imul
psubw
cmp
push
pop
divb
pusha
mov
or
cwtl
or
jecxz
pushf
popa
sbb
cmp
aaa
jbe
scas
or
cmpsl
pop
aam
fwait
mov
jbe
mov
xorl
popf
outsb
int
cmp
cs
sub
test
or
jmp
sub
in
loopne
xchg
cmp
adc
test
jl
in
push
adc
push
add
and
insb
jnp
push
push
fidivrl
aaa
lcall
scas
notb
push
ds
int
lcall
insb
lock
dec
bound
pop
cwtl
and
push
test
pusha
push
shl
xor
in
or
push
in
gs
pusha
cmpsl
push
mov
mov
pop
icebp
inc
adc
push
or
fsts
lret
cmp
inc
push
adc
bnd
jecxz
cmp
popa
add
stos
mov
stos
leave
in
adc
imul
xchg
mov
outsl
fstpt
mov
lock
pop
jne
lret
inc
lds
inc
mov
or
in
jp
sub
outsl
lret
push
xchg
dec
mov
mov
enter
aas
sub
ror
adc
cli
push
push
out
inc
jo
push
iret
jno
or
adc
addr16
mov
mov
inc
sub
xlat
ret
xchg
cltd
aas
outsl
ret
adc
movsb
outsl
out
cmp
cwtl
or
xchg
addl
mov
or
mov
jge
movsb
xor
push
and
add
mov
fisubs
insl
dec
cmc
lret
pop
fistpl
arpl
in
jp
ljmp
mov
lahf
into
mov
adc
cmp
dec
inc
inc
out
pop
js
stos
sub
shrl
add
push
jae
test
lret
fsincos
jmp
repnz
ss
jns
xchg
jnp
pop
push
and
nop
addb
test
jb
test
push
add
push
repz
sar
mov
cld
lahf
addr16
jl
or
movsl
stos
adcl
movsl
js
fldl
pop
or
fbld
jne
inc
cld
sub
jbe
dec
mov
mov
out
jl
dec
cmp
ret
das
xor
mov
adc
outsb
push
adc
cld
add
jb
fisubrl
outsl
adc
jae
repz
loope
into
jb
sbb
bound
sbb
addr16
mov
lds
aas
movsl
cmc
lock
into
js
jmp
jns
sub
mov
add
lret
leave
les
jno
out
dec
scas
loope
adc
lock
addr16
add
je
add
test
clc
fdecstp
push
fsts
sub
push
lock
iret
and
sub
sbb
lods
add
int3
rcrb
je
fsubrs
fisttpl
jns
xlat
mov
popa
enter
ljmp
xchg
mov
xchg
push
gs
push
or
mov
enter
jbe
jp
shll
in
popa
xchg
dec
dec
adc
add
mov
sarl
pop
out
dec
mov
jge
cmp
addr16
not
fdivl
shlb
out
and
pushf
inc
xchg
fwait
ljmp
inc
or
pop
mov
pop
xor
push
xor
les
cld
arpl
add
or
dec
jo
ficoml
js
sti
stos
enter
pop
dec
adc
outsb
xchg
mov
ja
adc
popf
xlat
in
pop
xlat
mov
movsl
xchg
cli
jle
ficompl
lahf
xchg
mov
sub
stc
roll
mov
stos
xchg
mov
xor
test
insb
mov
jo
test
mov
arpl
in
xchg
or
repz
fisttps
mov
mov
cs
xor
cmp
inc
mov
and
mov
popf
cmp
leave
and
xor
sbb
cmc
inc
or
pop
shl
jge
mov
push
fcomps
dec
push
cmp
shlb
xor
sub
push
dec
cmp
mov
iret
std
call
fcoml
pop
clc
push
gs
in
out
jl
push
pop
fstl
or
pop
adc
popf
sbbl
xor
pop
push
push
jmp
in
sbb
xchg
mov
dec
dec
or
mov
and
jle
adc
roll
out
push
sub
pop
dec
push
aad
push
aad
lods
jmp
or
fildll
aas
mov
and
cli
mov
xor
adc
dec
adc
adcb
lret
mov
xor
push
mov
push
lods
jmp
cmp
mov
cmp
cmp
adc
pop
xchg
jp
mov
add
jge
and
sbb
and
movsl
jmp
jo
arpl
inc
jno
popf
mov
xchg
jmp
lcall
jne
jb
cmpb
arpl
movsb
xlat
sub
stc
dec
xchg
jg
pop
cmpsb
push
cltd
movl
mov
mov
test
cwtl
mov
stos
adc
mov
and
push
jge
xchg
jb
inc
pop
sar
pop
out
mov
orl
adc
pop
cwtl
jp
lahf
fildll
mov
sbb
xchg
or
shll
dec
inc
sbb
je
pop
popf
sub
xchg
insl
je
jns
rcrl
into
pop
mov
and
cmpsl
jle
jmp
andb
cmp
xor
add
js
xor
push
aaa
dec
jg
outsb
dec
lods
into
les
xlat
mov
cmp
push
push
mov
add
sbb
enter
jg
push
fs
cmp
fwait
mov
mov
and
dec
push
outsb
mov
sbb
int
movsb
out
in
bound
jno
jno
inc
into
lahf
out
enter
pop
out
stc
aam
sti
daa
sub
jle
jno
cmp
and
test
ljmp
out
jmp
push
dec
jno
loope
xor
xchg
addr16
or
adc
lds
mov
mov
cltd
into
inc
push
out
ds
add
pop
jno
sub
stos
popa
inc
cmc
in
jne
outsb
lcall
pop
rol
imul
into
jns
incl
and
xor
push
mov
stc
ror
cmp
push
or
jmp
push
adc
push
cmovl
loope
movsb
add
cwtl
and
ss
jmp
jns
xchg
testw
int
cmc
mul
mov
add
in
int3
xchg
subb
lock
mov
out
push
mov
popa
inc
add
int3
ds
loopne
int3
jmp
es
out
push
das
scas
push
mov
loop
dec
and
enter
cli
gs
loopne
test
sbb
xchg
mov
add
jnp
add
mov
dec
and
cwtl
sub
fdivrl
adc
nop
fiadds
cmp
mov
out
pop
add
sbb
sbb
dec
idivl
lahf
ljmp
lods
push
mov
dec
mov
push
cmp
in
xor
out
cwtl
pop
jns
lret
jb
jecxz
pushf
cmp
pop
jmp
push
pop
and
cld
xor
test
push
setl
jbe
sub
mov
sbb
jb
cmp
ljmp
xchg
jno
fdivrl
pop
hlt
lcall
sti
add
mov
test
sbb
fstl
push
push
xor
enter
add
mov
add
fadds
int3
push
stos
les
sbb
mov
xchg
addr16
lahf
jns
cltd
cld
inc
xor
mov
xchg
jge
scas
xchg
and
jb
loope
pop
inc
sub
test
add
mov
jo
jo
mov
imul
fdivrp
repnz
in
sub
mov
ja
ja
jae
jle
mov
loopne
jns
sbb
inc
xor
aad
and
pop
push
in
jle
adc
lea
mov
xchg
testb
mov
dec
mov
xor
pop
lcall
xchg
movsb
adc
xchg
cmp
dec
out
adc
push
idiv
fbld
mov
stos
add
jo
arpl
into
sti
add
fmull
out
dec
mov
mov
les
inc
in
pop
stos
inc
dec
aas
jle
sbb
mov
shl
pop
jg
addr16
test
out
sbb
fidivl
fnstenv
inc
cmp
and
aad
aad
jnp
dec
sbb
inc
jmp
xor
mov
xchg
dec
bound
insl
jg
pop
pop
jmp
add
mov
aas
and
fbstp
outsb
bound
notl
inc
testb
das
xor
mov
sub
sbb
mov
mov
fidivrl
hlt
add
and
and
leave
mov
pop
inc
xchg
push
imul
mov
call
adc
jb,pt
xor
int
js
repz
add
adc
sbb
shlb
shll
clc
jl
cmpsl
loope
push
mov
mov
add
js
mov
scas
pop
mov
out
shll
sahf
mov
mov
fldt
and
shll
fs
icebp
and
ljmp
adc
sti
mov
push
jmp
mov
icebp
sbb
mov
push
sub
clc
sbb
push
inc
fimuls
mov
sub
and
lahf
adc
fbld
cmc
sahf
pop
lahf
ret
adc
push
out
lds
inc
shlb
cs
iret
cmp
loop
fsubrp
push
xchg
sbb
add
xor
sbb
push
or
lock
cmpxchg
in
xor
bound
push
sub
or
outsb
loopne
xor
pop
ja
fwait
jns
sarl
int
stos
repz
mov
icebp
or
adc
push
push
pop
stos
xchg
stos
mov
jb
sub
dec
mov
ret
pop
adc
or
sbb
clc
sub
fwait
in
add
mov
jno
jno
aam
or
mov
aad
push
shll
or
js
loope
push
ljmp
pop
loope
pop
adc
push
cmc
mov
ss
pop
xchg
rcrb
sub
shrl
popw
dec
mov
cmp
in
xor
xchg
xor
pop
jecxz
push
pop
aaa
adc
xor
push
repnz
sbb
or
das
mov
jns
dec
addr16
jns
negl
orb
enter
pop
rclb
addr16
fidivrs
add
fcomp
lock
les
jne
dec
add
dec
in
rcll
jecxz
insb
mov
mov
xchg
push
xor
rcrl
leave
rclb
stos
mov
mov
outsb
cwtl
inc
xchg
sahf
popa
mov
insl
shrl
movsb
and
movsl
mov
pushf
imul
into
adc
mov
rolb
inc
loop
push
pop
sbb
out
lea
mov
mov
mov
cmpsl
sbb
inc
push
push
pop
ja
pop
sbbb
leave
loope
imul
push
jp
and
notb
or
mov
or
mov
int
dec
inc
sbb
sub
fldt
sub
xchg
xchg
lods
pusha
lock
ret
cld
mov
dec
and
je
imull
ss
popf
mov
aad
stos
pushf
pop
sbb
jle
mov
or
dec
pop
ja
push
out
jl
adc
xor
aas
sbb
jb
pushf
adc
test
test
jecxz
add
mov
mov
sbb
iret
pop
sarb
add
pop
jno
js
mov
gs
test
das
and
jecxz
aaa
std
dec
stc
push
push
dec
cmpsl
cmp
pop
xor
sbb
ret
cwtl
pop
jecxz
ffree
mov
xlat
insb
push
adc
repz
shrb
mov
dec
idivl
mov
cmp
stos
mov
push
push
cwtl
xor
lods
shll
cltd
js
and
push
loopne
imul
shll
jecxz
sbb
push
or
stc
mov
scas
dec
xor
push
fs
popa
dec
jnp
cld
cwtl
sbb
test
test
imul
ljmp
pop
in
xchg
inc
jbe
cmp
enter
sbb
out
fbstp
xchg
clc
mov
inc
xchg
jo
sarl
dec
fildll
ret
or
fs
pop
mov
and
mov
out
les
rorl
divl
xchg
sbb
jno
aaa
fildl
dec
mov
notb
imul
shlb
aaa
xor
push
add
inc
addl
cmc
dec
and
addr16
or
mov
stos
sbb
mov
rcll
shlb
pop
sbb
cmp
mov
push
dec
sub
not
pop
shlb
pop
subb
push
cltd
pop
mov
push
jne
insb
pop
in
mov
pop
sub
mov
mov
or
call
pushf
or
in
add
cli
sbb
lea
mov
fmuls
fiaddl
adc
es
pop
stos
pop
mov
test
das
ljmp
inc
adc
pop
mov
cmp
jo
cmp
lret
scas
lds
mov
daa
cmpsl
sti
decb
xor
inc
stos
std
in
push
imull
fsub
jmp
inc
mov
cs
lods
loopne
push
je
sbbb
jne
scas
ret
mov
cmp
add
fdivl
std
xchg
cltd
adc
aas
push
mov
pop
push
pop
daa
clc
inc
in
push
sbb
ja
testl
popa
push
lcall
jno
mov
or
les
xchg
sbb
mov
ss
aas
in
or
int
in
jae
mov
pushf
std
inc
cmp
test
faddl
mov
mov
decb
xorb
cmc
shr
lods
sbb
xchg
cltd
es
imul
cmpsl
test
movsl
scas
addr16
in
test
sbb
out
dec
jbe
fs
inc
sbb
neg
mov
stc
or
flds
cmp
or
lock
mov
dec
adc
fcomip
pusha
mov
aam
xor
inc
jl
paddsw
mov
lcall
aaa
or
aaa
sti
xor
or
outsb
insb
xchg
add
inc
in
push
rcrl
inc
fwait
in
dec
adc
stc
cmpsl
cwtl
dec
or
cld
cmp
movsl
out
out
jp
sbb
insb
fdivr
or
sub
xchg
xchg
cld
mov
cmc
mov
daa
or
sbb
loope
push
shl
out
jmp
loopne
icebp
lcall
hlt
pop
push
fcomip
adc
movsb
jo
out
pop
cmp
lret
fimull
and
pop
add
data16
mov
sub
sbb
jbe
mov
xchg
fs
daa
lea
and
in
pop
jo
dec
dec
lods
cld
mov
clc
cld
test
ds
pop
ja
les
pop
es
pop
fdivl
sbb
loop
clc
adc
dec
dec
xor
mov
xchg
int3
addr16
cmpb
iret
cmp
adc
scas
push
mov
data16
sbb
aad
xor
adcl
xor
stos
jge
data16
lods
clc
mov
fbld
dec
hlt
or
test
scas
scas
pushf
lret
adc
jae
leave
or
loop
insb
into
or
in
xchg
sub
outsb
pusha
or
xor
and
or
shlb
out
stos
xorb
or
sbb
or
imul
mov
mov
movsl
lods
imul
fldenv
jmp
pop
ljmp
loope
xchg
loop
push
ret
xlat
xor
mov
es
jmp
and
adc
inc
or
ja
or
xlat
dec
and
in
mov
daa
add
inc
pop
in
mov
ret
mov
and
and
inc
mov
lret
fscale
dec
inc
dec
cmp
and
ror
cs
test
pop
ss
pop
imul
leave
test
mov
cwtl
xchg
ss
jle
ja
xchg
adc
mov
xchg
rcl
fstps
or
push
jge
mov
xchg
mov
incl
cmpl
add
inc
lds
incb
pop
mov
lret
cmc
add
cmpsb
jp
dec
jp
aas
pushw
int3
cmp
dec
andl
mov
daa
add
in
pop
dec
iret
and
sub
clc
ja
lea
cmp
lods
cmp
xchg
out
pop
popa
scas
pushf
fcoml
mulb
clc
mov
mov
add
push
lock
repz
lds
jns
sbb
jmp
push
notl
inc
fsubr
and
mov
mov
stos
adc
mov
stos
cmp
mov
pop
enter
mov
cmp
cmp
cmp
jno
pop
push
rcrb
lds
jmp
call
dec
add
jg
in
daa
pop
aam
xchg
les
test
xchg
je
int
loop
mov
pop
cwtl
sbb
fs
fs
fdivl
push
aaa
nop
js
adc
inc
xlat
push
mov
scas
test
sub
sub
mov
sqrtps
or
inc
mov
jp
cmc
cmp
push
test
call
xor
ret
push
mov
dec
sbb
push
mov
and
dec
dec
stos
aas
pop
xor
dec
fwait
addl
test
pop
cwtl
pop
jno
sbb
mov
add
xor
ja
aas
ficomps
lock
add
sub
push
or
fwait
dec
sub
and
and
add
cmp
jnp
imull
into
scas
mov
in
jge
jmp
fs
pop
aaa
jo
aad
sbb
pop
ds
or
call
js
sbbb
lods
lret
movsb
mov
in
cmpsb
aaa
push
movsl
aaa
out
sub
sbb
ret
test
jmp
adc
push
inc
xor
push
js
xchg
xchg
lret
mov
add
imul
inc
loop
lahf
inc
adc
add
movsl
fdivr
js
xor
shrl
push
mov
addr16
sbb
scas
out
push
xor
mov
mov
adcl
cld
sbb
dec
arpl
or
lods
mov
xchg
test
scas
fists
mov
in
and
nop
aad
das
loopne
jmp
pop
xorl
testb
sbb
test
adc
cmpsb
movsb
inc
test
jae
mov
mov
sbb
sub
jecxz
dec
mov
or
mull
mov
xor
dec
sbb
shll
adc
insb
adc
mov
inc
xchg
clc
dec
dec
jbe
and
ret
orl
adc
mov
test
sbb
stc
loopne
sbb
xor
inc
jb
push
mov
cmp
aad
jns
cmp
inc
cmp
jmp
lods
mov
mov
or
lock
mov
mov
mov
add
das
sbb
mov
inc
and
add
fmull
lods
rcll
jmp
mov
add
pusha
xor
cs
xchg
xor
fnstenv
stos
dec
cmp
cmpsl
push
jg
test
mov
xor
loop
xlat
int3
dec
lret
sarb
stos
int3
cmp
std
jl
out
ljmp
xor
fdivrs
jl
das
add
testb
push
dec
xchg
add
push
shlb
adc
sub
inc
mov
mov
add
xor
lret
or
orl
push
in
sbb
shrl
mov
js
sbb
sarb
mov
add
xor
pop
cmp
add
pop
xor
adc
in
shl
in
mov
pop
push
mov
stos
or
xchg
inc
mov
pushf
cmc
cmc
mov
lcall
jmp
pushf
btr
in
jp
jmp
sahf
aaa
pop
mov
nop
stos
cwtl
mul
mov
outsl
and
fdivrs
inc
sub
stos
jl
or
scas
xchg
std
mov
mov
and
add
clc
pop
not
push
dec
xchg
mov
dec
jl
pop
lock
cli
jmp
jb
push
nop
stc
rol
add
xchg
les
and
arpl
xor
jbe
adc
sub
cmp
or
xchg
jbe
test
xchg
cld
push
push
aaa
xor
leave
mov
pop
xchg
jle
jns
loop
sub
sbb
xchg
and
out
dec
mov
gs
jns
or
outsb
adc
outsb
popf
sti
aam
movsl
add
arpl
lds
dec
inc
in
mov
out
dec
push
add
call
xchg
aaa
movb
out
pop
in
adc
adc
cmpsb
icebp
stos
sbb
hlt
shlb
xchg
inc
xor
sarl
movsb
inc
sahf
mov
mov
insl
ja
std
lods
dec
stos
aam
dec
idivb
shrb
in
mov
and
fstpl
ja
sti
cwtl
repnz
cmpsb
cmp
popaw
rcl
mov
stos
lret
mov
bound
mov
lock
xchg
scas
cmc
or
jp
leave
outsb
xchg
and
jnp
shll
mov
sbb
push
and
pop
and
xchg
sub
mov
pop
mov
and
push
pop
lods
das
cmpsl
mov
fs
dec
jp
sub
pop
inc
arpl
fs
test
frstor
add
cmp
xchg
pop
jg
and
adc
lods
cmp
test
jbe
pop
mov
mov
push
cmpsl
cmp
pop
icebp
xchg
aas
leave
jbe
scas
lcall
push
jmp
or
mov
cmp
xor
adc
stc
cltd
or
movsb
or
jge
dec
and
push
cmpsl
sub
push
lahf
pushf
test
imul
call
cmp
and
mov
int
insb
adc
xlat
and
pop
xor
cmp
add
mov
ret
insb
repz
jmp
cmpsb
outsl
jo
loop
int
mov
push
jmp
xchg
sbb
icebp
xchg
pop
xlat
inc
fwait
mov
pop
dec
and
fisubrl
jmp
arpl
dec
shrb
jnp
jb
imul
fnstenv
jno
add
xchg
addr16
test
xchg
in
fildll
out
mov
inc
xlat
mov
aas
add
aas
add
push
fmull
imul
mov
fistps
sub
mov
imul
mov
push
cmp
cmp
dec
cmpsl
ret
sahf
rorl
repnz
xchg
pop
cmp
push
fs
stos
ret
cmp
cmp
jbe
fs
insb
cmpb
xchg
push
bound
icebp
pop
fidivrs
testb
mov
mov
out
dec
lds
mov
pop
fstl
bound
sarl
push
rep
and
or
pop
xor
insl
dec
cmp
ja
jno
insl
mov
push
sahf
shrb
leave
mov
push
jl
pop
adc
das
or
adc
or
dec
inc
shl
jnp
cwtl
fwait
mov
pop
ds
add
inc
imul
push
stos
inc
lret
ljmp
mov
mov
fildll
xchg
jne
push
into
mov
cli
jne
and
mov
mov
subb
push
out
sbb
cmpsl
sbb
jg
fisttpl
das
mov
popa
push
mov
jo
xchg
data16
xor
cmc
lret
adc
scas
xor
xchg
bound
imul
inc
add
mov
stc
stos
cmpsb
jnp
insl
cltd
lea
loope
loopne
xor
pusha
fisubl
push
pop
or
mov
inc
sbb
enter
inc
add
pushf
pop
pop
inc
out
mov
in
xor
sysret
cmp
stc
xchg
inc
xor
scas
push
mov
roll
jecxz
dec
or
rorb
mov
adc
mov
pop
movsb
ljmp
adc
dec
jbe
cmp
sbb
pop
sbbb
pop
into
sbb
mov
sub
les
mov
cmp
fmulp
fstpl
imul
mov
and
push
shlb
lea
pop
mov
test
mov
flds
lret
jp
mov
add
cli
jmp
in
sti
jnp
xchg
jno
push
movsb
cmpsb
inc
jge
ja
jmp
jae
and
mov
jge
ficompl
adcl
mov
movsl
inc
nop
mov
add
pop
and
cli
cmp
push
sub
out
mov
mov
jp
inc
cmpsb
outsb
push
test
xchg
rorb
sub
repz
sub
pop
repz
and
shrl
adc
sahf
aas
mov
movl
dec
cmpsl
pop
shl
mov
xchg
sbb
jp
mov
mov
sbb
push
sarb
push
mov
cmp
mov
sbb
xchg
in
jne
inc
pop
test
mov
and
inc
ljmp
or
out
js
arpl
mov
pushf
sub
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
bound
lock
sbb
or
movsb
fs
data16
adc
loope
jns
xchg
in
mov
hlt
imulb
jbe
cmp
lds
and
in
mov
loopne
mov
push
push
lods
adc
es
or
push
movsbl
sub
dec
int3
sbb
rorl
sub
xchg
shlb
adc
shll
add
addr16
and
cmpsb
xor
iret
xor
add
jge
mov
in
fisubs
lods
sub
add
ljmp
xor
clc
inc
jge
dec
push
sti
jae
or
xor
pop
or
std
and
mov
lock
inc
ss
jb
pop
add
and
nop
sbb
popf
or
mov
inc
scas
daa
mov
pop
sbb
movsb
lcall
into
std
mov
gs
sbb
iret
test
call
sub
adc
arpl
lea
push
inc
push
sbb
xlat
lods
insl
lock
int
xchg
stos
mov
sub
xor
mov
cmc
cli
movsb
adc
xor
js
pop
cmp
lcall
mov
cmp
movsb
pop
add
sub
dec
fcmove
mov
pop
sbb
popf
xor
rcll
stos
jge
repz
out
dec
imul
repz
mov
call
cmp
inc
sub
xchg
fwait
lods
sti
mov
test
mov
scas
push
repz
mov
jge
mov
hlt
lods
and
sbb
insb
mov
stc
repnz
fwait
and
test
jns
nop
push
adc
sbb
adc
ret
mov
sbb
xchg
jns
jbe
jno
xor
xor
xlat
or
sbb
mov
sarl
add
jmp
xchg
xor
cmp
pop
sbb
inc
inc
push
into
outsl
sbb
loope
loope
sbb
or
jle
push
addb
cli
jg
and
dec
mov
out
pushf
dec
xchg
lret
add
popa
std
mov
pop
push
pop
out
xor
jae
gs
mov
cmp
dec
mov
pop
mov
mov
sbb
and
xchg
das
sbb
mov
mov
fldl
out
mov
xor
jge
hlt
jl
in
dec
mov
jl
gs
sub
stc
adc
out
sbb
fisubrs
mov
adc
into
stc
push
xchg
push
jne
mov
push
subb
std
jmp
push
and
lock
dec
clc
cltd
in
test
dec
int
mov
js
mov
scas
loop
mov
mov
dec
push
xchg
cmpl
jle
mov
sbbb
xchg
insl
dec
fidivl
cmp
test
xor
inc
repz
or
pop
js
mov
jne
call
mov
je
popa
or
xlat
sub
pop
mov
or
pop
iret
out
fnstcw
clc
jecxz
fidivrs
sub
out
es
pop
imul
pop
ljmp
clc
cmp
or
jb
xchg
jg
loope
xor
mov
sbb
das
les
lea
xor
dec
pop
fsub
pop
xchg
or
xor
jno
dec
sbb
enter
cmp
aad
popa
loopne
in
and
stos
lods
or
aad
xor
imul
call
jp
jbe
adc
or
sub
pop
enter
adcl
rorl
jl
adc
mov
loop
mov
pop
sub
jle
cs
insb
addb
push
sub
lahf
or
mov
inc
push
shll
inc
xchg
int
cmp
popf
adc
jecxz
cmp
mov
add
pop
rcrb
out
in
cmp
push
cmp
sub
testl
or
dec
decl
dec
inc
dec
jmp
jns
mov
out
lret
loop,pt
test
sub
xchg
les
mov
pop
int3
push
es
adc
lds
bound
mov
ret
sub
and
xchg
fisttps
arpl
fs
les
mov
cmp
dec
je
xchg
and
inc
cld
inc
testb
cmp
inc
and
aaa
jae
xor
xchg
push
clc
mov
mov
dec
cwtl
sbb
clc
mov
add
push
add
xor
stc
push
inc
push
inc
dec
or
push
les
cld
subb
insl
inc
add
inc
addl
pop
jle
or
out
sbb
xchg
iret
sub
loopne
jne
imull
xchg
fs
jns
fwait
jae
aad
push
ret
mov
fdiv
dec
repnz
insl
sbb
or
test
cmp
push
addr16
push
enter
adc
dec
dec
lret
cmp
shll
pop
scas
mov
gs
into
xchg
push
div
ret
adc
cmpsl
mov
pop
loopne
cltd
jnp
adc
cwtl
jge
xchg
mov
jae
mov
mov
cwtl
adc
xor
les
jnp
xchg
insb
add
movlhps
ljmp
or
mov
mov
push
cli
fisttps
and
add
or
jns
and
popa
lods
mov
fs
cmp
in
inc
aam
orl
inc
arpl
lods
lret
adcl
setns
lret
sarb
ss
and
in
xchg
shll
xchg
mov
xchg
ficomps
xchg
iret
cmp
cmp
fidivl
and
dec
lods
cmpsb
repz
nop
mov
aas
adc
xchg
mov
in
out
jmp
fsubrl
sub
inc
pushl
add
dec
xchg
add
mov
into
push
xor
test
cmovne
mov
pop
bound
push
mov
das
push
call
movsb
xchg
pop
xchg
and
std
jne
imul
push
jg
push
sbb
movsl
int3
sbb
lods
out
cwtl
fldcw
mov
mov
gs
stos
mov
enter
subl
jae
hlt
sbb
dec
sbb
cwtl
insl
swapgs
jno
pop
fstps
daa
jle
mov
out
inc
mov
push
enter
mov
inc
add
imul
cwtl
mov
mov
fistl
add
inc
cmp
fisttpll
push
jecxz
mov
out
mov
jge
or
imulb
dec
fbld
insl
cmp
mov
cmp
cmp
jg
adc
js
mov
sbb
xlat
shlb
fldl
insb
cmpsb
add
adc
sbb
add
ret
and
jmp
cmp
cmp
jecxz
sub
inc
sbb
pop
sbb
insl
stos
xor
inc
pushf
jge
pop
test
fistpl
sub
fs
enter
mov
push
fldcw
shlb
clc
xchg
std
imul
jb
cmp
jl
xorb
mov
xlat
mov
scas
ljmp
stos
push
cmp
test
imul
je
cmpb
push
mov
cmp
xchg
and
push
lret
enter
arpl
insb
inc
arpl
add
clc
inc
lcall
pop
imul
lods
jne
lret
mov
jnp
lcall
mov
push
ret
xlat
jp
and
fmul
js
add
inc
outsl
js
shrb
out
ljmp
pop
mov
add
mov
aaa
flds
sub
popf
adc
mov
iret
mov
imul
dec
js
mov
dec
cmp
mov
clc
dec
pop
int3
adc
jno
sbb
inc
dec
mov
xchg
mov
jecxz
push
retw
insl
out
leave
mov
and
mov
jns
lods
pop
mov
cmpb
cmpb
push
sbb
sti
xchg
fwait
imul
mov
and
out
and
test
int
cmp
std
je
rcll
jmp
jmp
xchg
into
ficompl
sbb
cmp
es
dec
xchg
inc
mov
les
testb
jne
add
dec
add
xchg
mov
data16
cwtl
insb
push
test
push
mov
stos
aas
adc
dec
aam
std
push
jne
jl
mov
and
dec
cmp
and
xchg
adc
add
jnp
jnp
add
or
adc
dec
fwait
pop
loope
dec
sub
push
je
push
cltd
clc
jle
fcoms
pop
mov
mov
and
mov
loopne
gs
xor
lods
xor
xchg
ffree
cli
xor
inc
gs
jge
inc
pop
jle
lahf
leave
inc
push
xorl
ja
in
xlat
addr16
insb
imul
xor
push
in
out
cmp
sahf
add
fwait
rdtsc
js
mov
push
je
popa
cmp
popa
pop
xchg
jns
repz
icebp
inc
add
std
nop
and
ljmp
loop
cmp
outsw
pusha
lret
inc
data16
imul
mov
stc
sbb
arpl
mov
mov
inc
jmp
dec
and
dec
int
or
push
fisttpl
cmp
in
sbb
adcb
xor
push
xchg
jb
aad
rcll
mov
out
push
lods
repz
insb
add
popfw
rcll
enter
dec
dec
mov
repz
sub
daa
xor
in
das
or
movsb
repz
clc
stc
cmpsb
cwtl
or
imul
mov
ret
mov
add
arpl
jg
jae
sub
mov
or
inc
testb
mov
and
nop
xchg
cli
scas
imul
xchg
cmpb
mov
mov
loop
insb
data16
out
push
mov
rcl
loopne
push
test
out
cli
mov
imul
adc
and
sarl
mov
mov
out
add
push
js
sbb
xchg
js
outsl
jns
lret
add
add
fcomps
xor
movsl
mov
inc
fidivrl
cmpsb
out
lahf
pop
push
push
mov
mov
and
cmp
mov
lock
pop
dec
push
arpl
je
push
repz
popf
and
mov
ficoml
jg
cmp
mov
leave
shlb
and
mov
call
mov
sahf
sbb
divb
in
divl
push
inc
and
sbb
pop
out
sbb
test
and
decb
sub
pop
outsb
loop
xor
adc
cmpsl
pusha
icebp
cltd
xchg
xchg
xlat
xchg
dec
jne
lret
xor
sarl
repnz
arpl
xor
push
popa
stos
in
fidivs
fiadds
orb
xorl
sub
mov
sub
or
cmp
jno
roll
mov
dec
dec
ja
mov
sbb
xor
push
sbb
lret
lods
inc
iret
gs
lret
loope
stos
jne
cmp
repz
pusha
sbb
add
iret
or
imul
mov
mov
inc
pop
adc
add
in
cli
rorb
jp
and
hlt
fsubrs
out
inc
gs
push
sbb
dec
enter
xchg
mov
dec
sub
lcall
xorl
cld
add
int3
leave
add
cwtl
cmp
pop
mov
jae
inc
rol
outsb
sbb
imul
dec
rcrl
inc
jb
and
adc
jno
xor
hlt
fisttps
outsb
sbb
fmull
mov
mov
or
adc
or
out
xchg
push
pop
insl
sbb
out
inc
pop
jno
pushl
rcrb
cli
gs
cmp
mov
repz
and
fsts
subb
fildll
call
aas
arpl
jecxz
int3
or
push
popa
pop
mov
pop
jae
xor
roll
sti
ljmp
das
fs
inc
xchg
lock
cmpsl
cli
adc
xlat
xor
repnz
inc
lahf
loope
outsb
jnp
arpl
adc
inc
pop
jmp
sub
movsb
jg
ds
push
cmp
into
int
and
rcrl
sar
cwtl
shlb
sbb
sahf
lea
fisubl
dec
aas
cs
ss
addb
xlat
xor
mov
pop
ficoms
lahf
fisubrl
sbb
sbb
inc
mov
sub
xchg
insl
mov
pop
cmc
xor
jb
sub
cmp
mov
add
addr16
stos
outsl
ret
rorb
sarl
lds
bound
inc
and
mov
cmp
lcall
jge
adc
mov
aad
pop
xchg
sar
insl
repnz
icebp
hlt
jae
adc
push
fimuls
lds
lret
dec
jl
or
cmpsl
inc
jmp
pushf
packssdw
and
push
lret
pop
xor
mov
cmc
insl
imul
pop
push
lock
or
dec
icebp
jne
dec
cwtl
adc
jmp
jecxz
je
mov
repnz
jmp
mov
stos
int3
sub
arpl
xor
fdivrl
bound
out
ror
popa
sbb
pop
sub
cmp
fbld
sub
movsb
aaa
sbb
xchg
sub
sbb
lahf
leave
push
mov
dec
jl
jle
cmpsb
lea
inc
fists
mov
lods
sti
xchg
cmp
dec
jo
sub
sbb
stc
jle
cmp
cld
mov
add
nop
push
adc
cmp
dec
xorb
and
clc
inc
jno
lods
push
shll
in
cmc
nop
mov
jmp
repz
fmul
popa
cmp
pop
adcl
pop
test
or
int
inc
lods
inc
or
iret
lods
cmp
push
xor
loop
jp
push
lock
inc
adcb
pop
sbb
inc
adc
fwait
cmpsl
enter
icebp
icebp
scas
add
cld
rolb
jg
int3
sahf
dec
or
cmc
rclb
js
movsb
dec
push
and
push
shlb
inc
and
pop
sbbb
sbb
cmpsb
ss
pop
es
cmp
fmul
adcb
add
xor
lahf
push
mov
enter
insb
push
push
dec
xlat
out
mov
xor
ja
mov
xchg
sbb
mov
mov
popa
pop
xchg
aam
push
pop
repz
cmp
and
outsb
ret
add
rclb
aas
sub
and
outsb
and
mov
add
pop
ds
push
mov
add
std
enter
stos
xchg
and
xchg
loopew
filds
pop
adc
xchg
orb
mov
out
xchg
int3
into
pop
inc
xlat
or
jne
loop
sub
das
cli
fisubl
fdivr
psrld
add
adc
inc
sub
mov
adc
add
push
int3
gs
dec
in
and
push
dec
xchg
call
sbb
cmp
lods
in
rolb
mov
insl
ljmp
cmp
xor
int
mov
cmpsb
fmull
and
in
inc
dec
pop
inc
sub
lret
add
in
fnsave
pop
add
xchg
jmp
subl
and
loop
data16
movsl
mov
or
enter
iret
ss
scas
push
cmp
add
sub
repnz
xor
lret
out
mov
std
push
mov
pusha
sub
mov
repz
jg
lahf
dec
jae
cmc
jmp
jp
imul
decb
dec
cmp
dec
mov
add
aam
jnp
jbe
dec
imul
dec
das
and
cmpsb
ss
into
xchg
pop
push
mov
jno
mov
fiadds
add
cmp
mov
movsl
xchg
xchg
cmp
push
sti
in
enter
pop
lods
fwait
rol
bound
mov
in
jo
pop
or
in
movsb
mov
inc
adc
sbb
fdivrp
scas
pop
stos
gs
jmp
fs
sahf
push
mov
xchg
mov
and
repz
xor
leave
das
add
test
or
push
jbe
jae
and
mov
mov
aad
icebp
inc
mov
jge
sti
clc
sbb
cmp
pop
imul
ljmp
js
jmp
notl
nop
stos
lods
mov
xchg
daa
and
fcoms
push
jne
paddq
xchg
mov
sti
xor
out
gs
xchg
lods
xchg
xchg
xchg
push
insb
decb
clc
xor
add
movsl
sub
int
ss
pop
ljmp
stos
lock
adc
out
call
sbb
mov
pop
cli
repz
xchg
inc
jle
sub
shr
pushf
shr
dec
je
cwtl
in
dec
js
and
das
ljmp
xor
push
xchg
cmp
xor
adc
jnp
sbb
sarb
movsb
mov
mov
mov
sub
imul
xchg
pusha
jae
jecxz
adc
inc
inc
ret
sti
inc
dec
fsts
add
mov
sub
mov
jne
sbb
scas
or
and
fdivrs
adc
insb
pusha
inc
push
sub
xor
jnp
in
sbb
add
push
jp
adc
out
sbb
mov
int
pop
pop
and
shr
dec
in
std
or
test
sbb
jo
inc
pop
stos
inc
jge
adc
jl
fwait
xchg
outsl
aad
jne
rcll
xor
and
xchg
mov
outsl
cwtl
cltd
shll
stos
notb
add
mov
or
push
cmp
jle
lock
xor
mov
cli
and
fldt
test
addr16
sbb
jnp
sub
loope
push
cmp
ret
xchg
xlat
decb
xchg
sbb
adc
push
sub
and
jecxz
in
scas
cmp
ss
rcrb
rcrb
imull
cmpsl
mov
pusha
mov
imull
adc
push
rcll
mov
inc
js
adc
arpl
hlt
ljmp
cmp
insl
lcall
test
xor
dec
ret
je
lea
sahf
jle
push
mov
push
push
push
and
fadds
out
jecxz
inc
xor
push
xchg
mov
jb
movsl
pop
xchg
pop
jo
aam
popa
push
scas
mov
inc
jg
sub
adc
insb
lods
fiadds
roll
pop
push
movsb
test
ds
aaa
aas
and
stos
and
rcll
clc
daa
and
mov
movsl
sbb
in
ss
fwait
push
aas
dec
in
pusha
adc
in
add
xchg
sbb
mov
flds
pusha
jg
repz
mov
roll
adc
rorb
dec
mov
dec
xlat
push
push
inc
stos
shlb
aad
scas
sub
fsub
dec
mov
and
adc
pop
mov
imul
fdivrs
call
es
movsl
stos
xchg
adcb
leave
fdivrl
inc
jnp
xor
arpl
rolb
mov
cwtl
jecxz
nop
mov
dec
xchg
mov
aas
pop
mov
inc
xchg
jae
sub
daa
sbb
push
mov
fistl
fst
cwtl
inc
fldcw
add
cmpb
repz
add
push
add
fnstcw
pushf
fs
stos
clc
jmp
fdivs
cmp
scas
pop
jmp
add
mov
and
dec
sbb
aam
jecxz
shrb
add
xorb
inc
jb
call
xchg
divb
jne
pop
lods
sbb
dec
sub
mov
lret
shrb
sub
dec
pop
cmp
into
imul
loop
lcall
xor
cmp
rorl
sti
dec
leave
mov
pop
sbb
xchg
outsl
gs
push
pop
ret
nop
in
fnsave
pop
push
push
and
push
pop
xor
andl
scas
and
add
dec
lods
mov
push
int
loope
pop
ret
pop
enter
addl
les
loopne
sbb
mov
lock
pop
sbb
xlat
arpl
jle
xchg
arpl
repnz
sbb
push
lock
icebp
inc
mov
std
jo
int3
jbe
sub
cmp
cmp
jecxz
stos
mov
adc
xchg
sti
xor
push
sti
dec
imul
ljmp
mov
push
fs
int
pushf
int3
outsl
pop
pop
cmp
cwtl
inc
push
clc
sbb
adc
cmpsb
or
and
and
push
gs
sbbl
xlat
cld
inc
jp
adcl
ja
or
jg
dec
push
sbb
and
adc
xchg
jmp
fistl
das
sub
jbe
xchg
sub
xor
aas
pop
movsb
mov
mov
in
fnstsw
fidivs
xchg
in
push
das
pop
stc
test
stc
sbb
pop
pusha
cwtl
or
popa
mov
enter
mov
jbe
and
sbb
mov
dec
dec
or
fs
or
aaa
adcl
gs
addr16
pop
jb
push
bnd
cmp
in
fiaddl
call
imul
cmp
pop
fwait
and
xor
mov
icebp
xor
jp
cwtl
shll
mov
jbe
pop
sbb
cmpsl
jne
jb
or
pop
cmovne
fwait
and
or
cs
test
out
jl
aas
adc
imul
scas
loopne
loope
je
aam
cmp
movsb
inc
and
enter
dec
jnp
pop
aas
fnstcw
pop
movl
xchg
sbb
sbb
arpl
mov
xor
jne
scas
pop
shl
push
ret
fstl
sbb
dec
popf
cmpb
sbb
cmp
or
enter
adc
ds
pop
movsb
mov
jo
xchg
das
cld
inc
outsl
out
rorb
pop
mov
out
imul
ret
push
movsb
test
sub
gs
mov
push
xchg
movsb
inc
sarb
add
dec
int3
adc
push
hlt
call
mov
inc
jae
js
repnz
push
ret
mov
cld
mov
mov
fwait
daa
scas
into
cmp
adc
jg
mov
sub
inc
cmp
fldt
xchg
nop
aam
xor
sbb
insl
pop
inc
xlat
cmp
adc
mov
les
jg
pop
mov
lods
js
inc
cltd
inc
lahf
sar
pusha
xchg
cmpsl
fnstenv
clc
and
xor
mov
iret
fidivrl
loope
cmp
cmp
mov
int3
vaddsubps
pop
adc
addb
and
lock
dec
cltd
inc
test
lock
xor
xchg
lods
jecxz
sar
jecxz
cmp
xchg
cmpsl
imull
add
fiadds
inc
cmp
fldenv
imul
and
adc
rclb
out
jnp
jo
and
mov
pop
pop
pusha
insl
shll
pushf
clc
lahf
lds
ret
in
popf
lea
jns
push
jecxz
int3
inc
iret
jle
jo
sub
fiaddl
pop
scas
cld
stos
lds
test
in
imul
out
cmp
pop
hlt
fcmovnb
call
cmp
iret
dec
xor
xchg
sbbl
cltd
lret
loope
xor
pop
inc
aas
fs
movsb
inc
decl
cli
jne
cmpsb
push
bound
mov
fwait
imul
mov
frstpm(287
outsl
and
das
call
ret
out
add
or
add
push
outsl
test
lods
pop
or
cmp
xchg
and
rcrl
fcomps
push
jl
lock
xor
push
out
mov
pop
cmp
mov
adc
ficompl
adcl
aas
push
inc
aad
jo
or
inc
jnp
adc
lret
jecxz
pop
xorl
seto
pop
push
lds
lahf
xor
mov
push
adc
mov
and
mov
stos
inc
ljmp
scas
sub
xchg
out
outsl
lock
sbb
repnz
dec
cmp
or
pop
inc
loopne
jns
sbb
lds
jge
push
push
lods
sub
and
insb
repnz
cmp
sbb
mov
dec
sbb
outsl
imul
add
outsb
dec
mov
ret
daa
mov
or
sub
cwtl
dec
mov
sbb
iret
ret
addr16
mov
inc
fcmove
sbb
mov
je
inc
jmp
lock
xchg
call
das
lock
add
inc
cmp
pushf
popa
sub
cmc
mov
mov
xchg
aaa
gs
sbb
lea
jmp
pminsw
mov
mov
jb
inc
inc
insl
adc
stc
inc
arpl
sbb
lds
pop
mov
pop
popa
mov
sbb
iret
and
aam
sbb
mov
insb
outsl
push
jl
jmp
rcr
gs
dec
mov
enter
test
or
dec
and
jle
rcrb
gs
jae
sub
and
inc
inc
inc
mov
push
push
dec
lret
out
popa
push
stc
xchg
jecxz
add
ret
repnz
lods
inc
imul
cmp
jne
daa
adc
outsb
out
and
adc
loopne
and
cltd
xchg
sbb
leave
seto
les
xchg
mov
sbb
mov
jp
aaa
daa
test
test
shrb
adc
lods
insb
loopne
inc
jmp
stos
push
icebp
imulb
daa
das
cmp
pop
repz
pop
jbe
push
pop
and
aad
icebp
pop
les
je
data16
adc
dec
sbb
fadds
les
add
shlb
aam
out
push
lds
mov
bound
int3
out
jmp
and
ljmp
mov
rorb
sbb
in
pop
xchg
inc
push
enter
scas
xchg
lock
call
adc
pop
lret
mov
push
mov
rcll
jl
les
sbb
fcompl
insl
scas
add
test
fnstsw
xor
lcall
lds
or
pop
mov
cmp
pop
mov
adc
add
stc
mov
repz
xor
sub
xchg
std
shl
xor
jns
inc
and
sahf
push
loop
mov
xor
sti
or
loop
stc
std
imul
shlb
pop
mov
sbb
push
push
cwtl
imul
push
pop
mov
enter
xor
inc
leave
test
cmp
mov
in
out
subl
out
and
shr
sbb
sub
leave
push
pop
push
test
imul
into
shlb
xchg
paddusb
push
sub
or
pop
dec
pushf
jmp
push
jne
mov
add
sbb
out
push
add
jb
int
lods
adc
movsb
clc
cli
lods
movsl
in
rclb
sbb
mov
cld
mov
or
das
lea
pop
pushf
sub
fstpt
scas
jns
rcrl
lret
sarl
add
inc
fadd
mov
xor
push
loope
scas
mov
rorl
icebp
pop
sbb
adc
and
fnstcw
cmp
pop
stos
dec
cltd
movsb
out
movsb
cmpsl
jge
icebp
lahf
movsb
push
scas
push
iret
add
xchg
inc
mov
sbb
mov
int3
mov
jb
cmpsb
pop
pop
mov
mov
ret
nop
inc
cvtpi2ps
mov
ret
sbbb
and
cmpsl
xchg
mov
shrl
scas
jno
lret
loope
and
dec
mov
push
aaa
pop
fcmovnbe
lret
fcomi
loop
aad
das
sub
xchg
adc
push
sbb
push
add
lods
and
in
data16
pushf
dec
cmpsl
jo
cmpsb
js
fisttps
jno
pop
or
mov
mov
add
push
orb
jg
icebp
pshufw
and
das
test
cmp
and
jns
mov
icebp
popa
or
inc
sbb
fistpll
mov
ss
popa
addb
xchg
cmpsl
pop
popf
xchg
push
negl
jb
repnz
push
in
lret
pop
push
outsl
xchg
inc
cs
cmpsb
test
push
mov
jle
dec
hlt
lahf
add
je
xor
lret
cmpsl
dec
push
jbe
dec
and
inc
mov
ljmp
xchg
das
frndint
fucom
xor
fcoml
add
dec
xchg
repz
comiss
mov
jnp
xchg
xchg
jbe
popa
sub
dec
dec
push
push
adc
sbb
push
dec
movsb
or
push
pop
test
pushf
and
cmp
push
jbe
xchg
adc
clc
xchg
mov
mov
push
test
ret
jbe
fstps
lcall
jne
add
fildl
test
sbb
test
das
sbb
mov
int
ja
inc
out
rcrb
out
xlat
cs
adc
dec
mov
cmp
and
bound
test
jb
or
inc
mov
rorl
cltd
test
test
mov
repz
shlb
repnz
xlat
and
fstl
xchg
mov
bound
cmpb
in
or
push
loope
mov
sbb
mov
cld
stc
pushf
repnz
mov
cltd
pop
mov
push
xchg
mov
ds
ds
cmp
mov
insl
aad
leave
repz
pop
push
or
mov
xchg
push
out
sbb
pop
sbb
in
cmp
sbbl
xchg
enter
pop
cli
hlt
loopne
pusha
addb
mov
jne
lret
or
pop
fildl
and
push
push
mov
xor
fistl
dec
stc
jbe
pop
pop
fs
or
sbb
inc
push
fstl
sub
inc
les
dec
sbb
stos
fstpl
push
push
pusha
adc
movsl
mov
imul
sbbl
mov
push
xor
mov
sbb
and
fistps
mov
in
cld
inc
gs
push
jp
in
pop
mov
mov
in
mov
rorl
and
mov
shl
cmpsl
movsl
hlt
fbstp
jp
dec
fdivrl
iret
pop
mov
cmp
add
lds
mov
int
out
push
jle
aas
bound
fwait
popf
aaa
jnp
sbbl
xor
cwtl
xchg
aaa
push
cmp
xchg
cmpsb
iret
mov
adc
add
mov
outsb
imul
sub
jo
mov
pop
pop
jmp
push
xor
ljmp
jnp
mov
cltd
add
rol
jnp
sbbb
aad
or
repnz
inc
stc
xchg
mov
in
outsl
mov
subb
add
addb
add
and
stos
pop
push
subl
dec
mov
shrb
out
add
in
call
sarb
movsl
out
jg
out
insl
and
push
in
xor
outsl
dec
rorl
mov
xchg
jne
sub
fs
and
stos
xchg
ret
int
icebp
dec
mov
leave
adc
xlat
xchg
shll
or
push
aaa
mov
in
dec
aad
xchg
out
cmp
sbb
jge
repz
push
push
out
lret
fstps
and
lahf
xor
testl
or
dec
push
sbb
add
lret
aas
add
cltd
leave
add
mov
or
jo
test
repz
mov
cmp
lcall
lea
pushf
inc
cwtl
sub
cmp
cmp
mov
ret
jge
push
xchg
sbb
pop
mov
push
nop
clc
jmp
gs
fistps
mov
stos
rcll
lret
es
pop
pop
data16
sbb
push
cmp
mov
pop
addr16
sbbl
xchg
jmp
cmp
fisttps
cmp
fwait
add
cs
stc
mov
faddl
pop
fcmovbe
xor
dec
addr16
and
movsl
repz
cmpl
icebp
xor
cmpsb
mov
cmc
scas
loop
imul
lcall
mov
nop
movsb
adc
mov
test
inc
xor
iret
xchg
sub
xlat
lcall
cli
dec
jl
adc
lods
les
cmp
jp
jl
sbb
jmp
pop
xorl
hlt
jge
lea
ss
mov
mov
lods
aas
mull
popa
mov
lcall
lea
arpl
sub
pop
inc
push
out
dec
fsubrp
stos
fwait
out
mov
sub
mov
pop
mov
addr16
mov
sbb
sub
mov
sbb
cmpsl
ja
test
int3
andl
and
in
sbb
cmp
cmp
pop
xchg
sub
pop
push
cmp
insb
add
notl
fidivs
sbb
sbb
add
mov
jecxz
addr16
adc
jle
sub
add
push
mov
and
cmc
cmp
popf
cltd
cli
leave
test
das
js
popf
push
add
sarb
add
and
out
sbb
add
sub
out
mov
mov
clc
lods
int3
and
mov
das
inc
mov
mov
and
and
in
xchg
mov
sub
pop
sbb
and
cmpsl
mov
cmp
cld
sbb
sbb
pop
xor
xor
push
xor
flds
loope
jbe
je
mov
aas
roll
in
adcb
stc
cmp
dec
fdivrl
sbb
clc
ljmp
repz
lock
incl
xchg
test
arpl
stos
jo
cmp
cltd
adc
jle
cmp
popf
stc
or
sar
xchg
xchg
cmp
cmc
mov
int3
push
dec
sub
jnp
jnp
stc
lret
dec
sub
mov
xor
sub
jno
lock
das
pop
leave
push
aaa
push
pushf
or
movsb
jnp
lret
mov
adc
sbb
adc
jns
sub
loop
mov
mov
xor
int3
lahf
push
iret
sbb
or
ror
arpl
mov
sarb
pop
mov
push
xchg
or
inc
or
les
sub
xor
mov
daa
pop
mov
xchg
jp
push
sub
xchg
dec
xor
shl
stc
and
jle
push
xchg
fs
cld
add
pop
pop
repz
mov
jno
lock
jns
int
jne
mov
cmp
aam
stc
inc
nop
je
push
push
jmp
out
pop
cmc
sub
cld
sti
sbb
cmp
adc
inc
jae
mov
popa
mov
enter
inc
xchg
int3
call
jo
sub
je
int3
sub
testl
xor
loope
loop
inc
xchg
dec
sub
lea
mov
dec
cli
lods
pop
cmp
lds
add
cmpsl
mov
in
jno
enter
popf
sahf
js
push
push
or
adc
sarb
movsl
cmp
mov
pushf
imul
clc
sbb
xor
rorb
cmp
sbb
push
dec
or
outsl
addr16
ficompl
lea
jno
pop
mov
lcall
call
pop
int
test
push
gs
inc
jbe
ds
jo
aad
test
mov
dec
xor
std
jmp
dec
add
pusha
cmp
testl
jecxz
sbb
test
push
imul
popf
stos
aaa
mov
pop
sbb
mov
cmp
sub
dec
imul
into
cmp
test
rcrl
test
jne
or
fs
subb
dec
fnsave
push
mov
fbstp
sahf
rcll
jg
push
dec
sub
mov
mov
adc
lods
inc
lods
test
vpsubd
cmpl
lret
push
sbb
repz
add
rcrl
cmpsl
imul
sub
pop
inc
sahf
cmpsb
int3
jne
dec
aaa
es
lods
push
cmp
insb
xor
ja
jbe
lds
insl
je
popf
inc
dec
addr16
shl
add
test
scas
lds
cmp
leave
mov
cmp
stos
fcompl
jle
aad
scas
push
push
dec
sti
or
insb
and
jnp
push
adc
popf
mov
inc
mov
dec
mov
lods
repnz
push
jae
or
call
andb
pop
jmp
mov
pop
inc
into
aad
scas
in
data16
nop
mov
push
fnstcw
jmp
daa
gs
push
aad
repnz
lahf
out
cmpsl
xchg
ret
pop
xor
aas
xchg
loope
aad
lds
enter
inc
call
jecxz
lock
inc
push
cmp
clc
xchg
sbb
or
imul
mov
out
mov
sarb
mov
pop
push
mov
je
cmp
jg
aam
lret
ja
das
or
pushf
setns
fucomip
inc
pop
pop
cmp
cmp
jno
scas
rclb
ds
mov
mov
adc
sub
sbb
jno
out
subb
ss
jge
jne
add
insl
xor
xor
xor
in
sbb
mov
test
jmp
mov
repz
mov
enter
jl
inc
ret
stos
lods
outsb
outsl
movsl
mov
adc
adc
scas
mov
imul
adc
cmp
push
mov
jo
movsb
inc
lods
rol
shlb
inc
lods
push
sahf
shlb
jecxz
dec
push
xchg
add
mov
add
imul
mov
add
cmp
ficomps
shll
scas
mov
add
ret
cmp
xlat
aam
mov
cmpsl
mov
pop
lea
daa
fnsave
outsl
cwtl
mov
mov
jle
pop
lret
arpl
xchg
loop
cmp
and
movsb
fiadds
sub
test
and
and
mov
pop
movsb
mov
jne
dec
add
add
sbb
sub
loopne
sbb
xchg
cltd
xor
xchg
out
sub
imul
add
into
loopne
xchg
push
cwtl
dec
in
scas
jg
jl
movsb
js
addl
dec
and
mov
lock
je
mov
mov
popf
adc
rorl
fistps
cmp
rcll
js
aad
xor
dec
mov
jmp
pop
sarb
mov
test
and
and
mov
ja
lahf
and
dec
in
jl
les
mov
xor
sbb
cltd
lods
in
mov
jnp
aas
lret
ficompl
pusha
pop
mov
push
pop
lock
and
push
jo
push
loopne
cmp
inc
xchg
rorb
mov
pop
xor
cmp
loopne
shrl
mov
xor
lods
pop
xor
loopne
imul
shr
enter
sbb
rclb
imul
hlt
loope
pop
or
xchg
add
or
ss
cmpsl
fbstp
inc
fldl
fwait
adc
adc
jns
xlat
xlat
lcall
push
cmp
popf
push
xor
test
lret
cltd
jecxz
pushf
scas
cld
mov
movsl
fcmovb
jb
je
inc
pop
mov
adc
mov
and
dec
dec
test
lret
mov
and
sub
fisubl
jno
add
jge
je
cli
faddl
adcb
push
nop
inc
xor
mov
push
xchg
aaa
stos
jle
testb
xchg
cli
cltd
std
into
aaa
cmp
int
popf
ss
out
mov
cmpl
pop
sub
movsl
in
mov
test
xchg
in
and
or
dec
into
jecxz
shlb
ret
es
inc
pop
push
int3
fisttpl
rolb
pop
mov
jns
sub
lret
psadbw
cmpsb
dec
push
outsl
jmp
mov
mov
mov
sbb
pusha
test
out
fs
sbb
mov
hlt
mov
testb
add
jb
in
insl
stos
rcr
fsubl
lcall
loop
in
ret
or
lods
push
stc
cmp
or
mov
push
add
adc
popf
inc
cmp
cwtl
fnstcw
inc
ds
nop
and
mov
or
data16
push
fbld
imul
pop
or
rorb
mov
add
out
fisubl
je
push
dec
jne
std
cmc
mov
cmp
repnz
jnp
cwtl
xor
mov
cmp
cmp
insb
jns
shl
pop
mov
cmp
adc
inc
jg
insl
lods
sbb
sub
test
sbb
xor
clc
cmp
notb
push
push
add
gs
or
xchg
daa
cs
cmpsl
mov
or
dec
mov
incb
push
mov
inc
daa
adc
sub
xchg
es
movd
addr16
cmp
xchg
ss
fimuls
mov
repnz
cmpsb
das
mov
add
out
jle
xor
decl
lods
jb
pop
add
mov
notl
cli
inc
test
mov
popf
pusha
sbbb
mov
cmpb
sub
mov
mov
scas
das
or
ja
mov
clc
jmp
add
pop
mov
scas
sarl
inc
mov
inc
mov
add
fstps
imul
pop
movsb
pushf
xor
clc
stos
daa
push
jne
movsl
cli
icebp
add
adcl
scas
inc
test
cmp
mov
addr16
shll
sbb
subb
das
mov
inc
jo
push
rorb
inc
adc
mov
mov
dec
mov
push
lret
inc
js
mov
pop
loop
and
cltd
int3
mulb
sbb
push
mov
sbb
xchg
cmpsl
out
adc
inc
fcoml
mov
cmp
mov
inc
insb
sub
ret
aam
shrb
mov
jmp
cmc
sub
pop
icebp
mov
je
arpl
xlat
adc
punpckldq
jmp
cmpsb
in
add
jmp
fcmovu
pop
mov
lcall
and
xor
lcall
xchg
mov
lods
and
adc
and
lahf
push
sub
jp
and
dec
push
mov
ds
cmc
and
sub
adc
inc
lcall
and
into
pop
es
test
rclb
adcl
fs
mov
fwait
xchg
outsb
jecxz
jnp
jl
int3
add
xchg
js
imul
std
inc
cmpsl
data16
cmpsb
xor
insb
add
push
inc
in
enter
jb
cmp
mov
add
in
fdivrl
rorl
imul
hlt
jae
out
je
jle
push
push
mov
filds
push
std
imul
inc
mov
or
jnp
dec
aaa
fs
hlt
sub
dec
or
dec
test
repz
adc
in
testb
push
and
aam
pop
ficomps
mov
and
sub
jns
test
sahf
lahf
inc
je
or
ds
sub
aad
jo
push
cmpb
or
mov
std
cwtl
push
adc
pop
xor
aam
add
xchg
repnz
add
jge
cmpsb
bound
scas
and
adc
cmc
cmp
sub
jae
test
ret
loop
jns
out
xor
push
gs
adc
xor
jb
or
xor
cmp
cli
push
cmp
dec
hlt
adcl
clc
xchg
xor
mov
lods
movsb
pop
inc
pop
in
ret
lea
and
mov
in
mov
mov
es
and
add
clc
xchg
iret
pop
ret
sbb
ds
in
mov
ficoml
gs
push
into
push
inc
cmp
imull
pop
add
mov
jb
mov
gs
in
adc
cmp
inc
incb
pop
mov
push
sbb
jbe
das
sbb
stos
rcl
jno
mov
pop
adc
xchg
scas
dec
loope
icebp
lahf
mov
mov
cmpsl
mov
adc
pop
movsb
lods
fldcw
cmpsb
or
dec
cmpsb
cmpsl
adc
push
test
adc
in
lahf
in
cltd
sub
mov
pusha
dec
movsl
aad
xchg
pop
push
sub
test
insb
leave
stos
cmpsb
mov
or
aad
pop
xor
xor
aad
xor
and
mov
dec
jle
xchg
outsb
add
cmp
xor
out
xor
out
aad
loope
mov
push
in
cmp
inc
sub
sbb
in
add
lahf
pushf
icebp
cld
jl
xchg
aam
into
dec
adc
iret
roll
jb
add
or
dec
xchg
sub
fdivs
repz
test
add
ljmp
inc
in
out
or
mov
stos
pop
or
nop
mov
sbb
add
and
repz
inc
dec
je
sbbb
repnz
jb
mov
and
rorb
mov
movsb
imul
pop
bound
fcmove
pop
jb
and
imul
xchg
xor
cmp
clc
sbb
and
mov
and
jecxz
cmp
bound
sbb
cltd
push
jo
jns
icebp
ss
lods
pop
adc
jmp
push
xchg
aas
loopne
and
push
jns,pn
mov
mov
or
stos
std
add
mov
xchg
pop
sbbb
jp
das
out
xchg
int3
mov
in
sbb
repz
sarl
and
sub
bound
fcomps
lcall
mov
mov
add
pop
fisubs
inc
mov
pop
push
dec
stc
dec
cmp
mov
fcoms
xchg
mov
dec
aaa
lea
adc
clc
into
loop
leave
lock
shrb
fidivrs
inc
xor
add
mov
repz
fisttps
pop
daa
pop
and
popf
mov
dec
inc
push
push
push
jne
xor
and
xchg
shr
sub
add
ret
cs
and
pop
ret
sub
lds
mov
mov
mov
push
adc
xor
mov
rcl
and
loop
pop
mov
and
cwtl
ja
in
xor
xchg
pop
lretw
pop
ljmp
push
push
adc
cli
jp
into
and
pop
adc
test
out
mov
aam
mov
mov
jle
insl
movsl
mov
les
lea
jg
or
lods
in
fsubl
jp
add
sbb
mov
or
pop
lcall
ja
ret
inc
btr
pusha
push
and
ss
xor
loope
imul
push
and
stos
mov
sbb
xchg
fidivs
jb
insb
jbe
mov
xchg
xor
mov
pop
out
sbb
add
mul
pop
loope
mov
test
jmp
xlat
and
cmp
mov
jmp
inc
inc
fdivp
push
and
stos
test
adc
loope
out
pushf
js
imul
cltd
insb
gs
mov
push
add
mov
lret
std
jg
lret
adc
loop
enter
notb
cmc
and
dec
jge
pop
data16
xor
out
cmpsb
cmp
jae
pop
stos
push
cmp
jne
leave
dec
pop
clc
adc
add
lock
mov
xchg
inc
jmp
stos
mov
lea
cmp
mov
push
dec
pop
fwait
push
ret
pop
mov
xlat
mov
mov
pushf
cmpsl
sub
loope
mov
adc
int
sbb
lods
mov
in
xor
mov
fistps
add
jl
mov
mov
pop
rclb
jo
xor
lods
ljmp
shlb
int
cs
jnp
repz
inc
fisttpll
inc
cmc
cmp
int3
dec
mov
mov
repz
jo
clc
loop
pop
push
out
sahf
sub
not
mov
push
xchg
ffreep
out
mov
dec
in
or
pop
frstor
cmp
jg
inc
call
popf
add
rorl
mov
test
jmp
xor
pusha
pop
push
mov
mov
mov
rcrl
iret
xor
bound
out
scas
shrl
fisubrs
sbb
cmp
test
or
push
cld
push
fiadds
call
jmp
jmp
xchg
jg
popf
mov
lcall
adc
push
ljmp
sbb
jae
adcb
test
adc
jmp
inc
shrl
lret
ret
out
test
inc
mov
aas
sbb
jge
push
ljmp
xorl
jg
jb
jle
push
dec
out
xor
clc
inc
pop
loop
mov
out
add
sub
out
xor
dec
jl
test
mov
sbb
test
xchg
inc
loop
cmpsl
mov
adc
dec
inc
cwtl
xchg
addl
xchg
in
adc
pop
inc
inc
sub
sbb
gs
incb
jo
out
xor
dec
fisubs
fisubrs
out
stc
ja
les
les
sub
pushf
mov
adc
dec
ja
adc
dec
jp
jmp
dec
xor
dec
push
add
repz
ret
xchg
mov
je
and
fwait
sarl
insl
negl
out
mov
gs
fsubs
int3
dec
insb
sub
ds
xor
pop
mov
and
inc
test
mov
pop
lea
jo
stos
subb
jbe
dec
mov
or
inc
dec
dec
dec
in
xchg
inc
mov
add
lea
call
lahf
mov
test
mov
jo
lcall
mov
xchg
filds
jge
and
out
mov
aaa
jmp
cmp
fdiv
pushf
outsb
lods
fbld
imul
fwait
ja
and
adc
mov
dec
repnz
arpl
dec
add
or
sub
stc
mov
mov
fidivl
inc
ret
icebp
out
mov
push
mull
lcall
cmpsl
jmp
ret
aad
pop
sub
imulb
dec
xlat
xor
cwtl
mov
mov
movsb
jae
cltd
enter
mov
add
mov
push
adc
in
scas
ret
pop
pop
pop
call
fsubrp
fdivr
outsl
popf
in
clc
ds
movb
inc
je
inc
int3
mov
test
cmpsl
sub
push
shrl
xchg
popf
pop
gs
rcrb
lahf
pop
sbb
out
and
jp
jne
or
testb
cltd
adc
cmpsb
cmp
and
sub
xor
out
adc
insb
hlt
jmp
ret
stc
mov
inc
mov
shlb
in
add
pop
xchg
dec
push
dec
pop
icebp
xchg
cmp
jmp
inc
movsb
adc
pop
lcall
sub
jb
je
insb
scas
adc
sbb
add
dec
mov
jl
fs
cmp
xor
outsb
aad
or
sarb
pop
repz
inc
out
mov
fmuls
xor
cltd
lods
push
out
lcall
je
lods
jmp
ucomiss
lods
xor
sbb
mov
push
je
and
mov
dec
popf
test
dec
shll
adc
xchg
pop
inc
and
push
ficoms
aam
mov
push
stc
jl
sar
test
mov
jl
test
in
sub
icebp
or
movsb
in
popf
cmp
int3
mov
cmp
repnz
push
shll
adc
pop
hlt
movsl
mov
and
inc
add
push
enter
xor
jmp
aam
out
sarl
insb
clc
jae
loop
cli
sbb
push
add
dec
test
cmp
and
or
dec
lcall
in
jne
adc
xor
lret
shrl
stos
adc
rcrl
mov
cmp
ds
jecxz
inc
mov
jg
shrb
mov
xlat
mov
sarl
push
add
gs
testl
leave
sub
sbb
adc
jo
pop
and
jge,pt
inc
fs
push
imul
mov
mov
gs
mov
popa
cmp
lret
outsl
push
loopne
lret
cmp
scas
movsb
leave
jg
ds
insb
aad
add
nop
cmpsl
ljmp
and
ret
cwtl
faddl
imul
inc
jp
js
sti
les
pop
mov
cwtl
loope
mov
jecxz
mov
cmc
ret
fucomp
repnz
jle
push
shr
pop
sbb
in
xchg
xchg
les
enter
decb
scas
dec
and
xchg
sahf
xorl
push
lcall
add
push
sarl
and
movsl
xchg
xchg
mov
sub
fsubp
pop
push
subl
push
btc
push
xchg
pop
lods
xchg
pop
out
push
lcall
mov
cmc
das
push
xchg
add
dec
nop
dec
dec
jbe
dec
sub
xchg
jne
jne
pop
mov
icebp
lret
or
rcll
cmpsl
push
cwtl
insl
loopne
cmc
cltd
push
xor
fsub
pop
mov
aas
lret
mov
sahf
mov
xor
adc
push
sbb
out
inc
adc
fsubl
jbe
push
mov
popa
arpl
fisttpl
cld
test
shrb
mov
mov
sub
inc
sbb
inc
adc
div
push
or
daa
cmpsl
cmp
aaa
sti
adc
nop
sub
jno
mov
divb
xchg
pop
int3
or
shlb
add
mov
mov
loop
push
arpl
inc
jmp
jno
and
rcl
mov
mov
push
hlt
jbe
xor
gs
cmp
adc
jno
adc
sbb
vmwrite
js
outsb
adc
movsl
push
std
pop
cld
pop
xchg
nop
int3
push
popf
mov
call
out
fbstp
dec
inc
xor
addb
mov
mov
push
pop
adc
jle
aas
ror
or
ss
aas
in
jl
dec
jmp
sbb
inc
push
lahf
push
dec
pop
int3
cmp
sub
fwait
add
pushf
or
movsl
inc
ror
in
mov
pop
iret
xchg
imul
sbbb
push
push
mov
lret
pop
push
mov
les
lahf
push
push
and
adc
cmp
test
pop
fs
push
mov
mov
sbb
inc
jmp
jb
sbb
push
out
ds
pop
push
push
fsub
scas
adc
inc
cli
sub
std
push
sub
add
das
call
dec
xchg
cs
aaa
bound
ss
out
gs
int
movsb
push
loope
test
sbbl
and
cmpsl
in
clc
jp
lret
enter
bound
and
and
dec
mov
hlt
adc
jae
iret
sub
and
mov
data16
int
enter
inc
inc
pop
adc
push
in
inc
push
ds
lret
std
fs
lcall
scas
js
inc
test
sub
or
mov
adc
mov
inc
dec
lock
and
xchg
lods
push
xor
lcall
xchg
mov
dec
cwtl
push
jge
test
mov
jnp
and
adc
je
mov
popf
push
mov
addl
jno
in
dec
dec
jecxz
mov
outsb
cmp
mov
mov
adc
xor
outsb
jnp
xchg
hlt
in
sub
insb
jmp
frstor
xor
sbb
test
dec
cmp
in
test
popa
lcall
psubb
lret
sti
sahf
jb
jg,pn
push
push
jo
je
lds
in
pop
jp
inc
mov
inc
int3
adc
jge
leave
ljmp
or
in
outsb
std
cmp
mov
xchg
imul
popa
push
xchg
mov
mov
in
in
adc
jg
sbb
loop
sahf
stos
les
lods
bound
pop
push
movsb
or
js
cmp
mov
movsb
rcrl
xchg
clc
shrl
shll
lret
xor
mov
lea
js
cld
daa
aaa
mov
push
shrl
adc
jne
sbb
btc
pop
rcll
jg
xor
outsb
mov
and
inc
outsb
xor
movsl
aad
xor
jge
cmpsb
je
aas
xor
fbld
mov
dec
mov
fcompl
push
pop
aad
out
mov
jno
fisttps
dec
sbb
mov
xor
divb
orb
fs
js
mov
je
dec
push
imul
cmp
cli
jo
mov
icebp
push
cmp
ja
rcrb
shrl
mov
pop
aam
fstpl
roll
int3
popf
pop
dec
dec
mov
mov
subb
repz
pop
ljmp
lds
sarl
imul
mov
sub
push
dec
or
fcoml
fisubrl
in
cmp
sub
lods
sarb
fisubl
jge
mov
mov
fsts
xorl
xchg
push
inc
pop
jne
or
lcall
es
jne
scas
test
cmc
cmp
mov
cwtl
test
jle
mov
cmp
in
mov
inc
sbb
xlat
mov
es
dec
ret
mov
and
cmpsb
inc
stos
pop
je
jae
stc
std
cmp
cltd
data16
lock
ds
test
cmp
decb
and
packssdw
ret
movsl
adc
pop
xchg
outsb
dec
shll
cmp
push
jnp
sbb
sub
dec
inc
bound
popf
mov
and
loope
mov
inc
int3
cmpsb
test
mov
out
fcoml
or
fldcw
dec
out
mov
jb
mov
jp
movsl
inc
jp
cmc
xor
imul
mov
mov
js
pusha
stos
fisubs
or
xchg
loope
dec
dec
mov
faddl
aam
imul
aam
push
push
cmp
imul
push
add
into
aas
fidivs
addl
xlat
sub
leave
sbb
xor
pop
in
mov
jbe
popa
mov
pushf
xchg
stos
jo
cmp
scas
push
loope
and
aam
mov
test
test
out
inc
jno
xor
jbe
xor
arpl
mov
inc
ret
jecxz
jb
imul
ja
shrl
inc
jmp
xor
btrl
and
cmc
shl
inc
cwtl
dec
repz
loop
fwait
xchg
mov
jbe
mov
xor
nop
out
cltd
mov
sbb
jbe
cs
mov
das
xchg
push
adc
pop
test
mov
inc
adc
dec
sub
nop
jle
es
dec
nop
sbb
ret
scas
call
mov
push
imul
or
out
iret
test
inc
fisubrs
pop
andb
outsl
nop
scas
xchg
dec
mov
dec
mov
stos
add
and
add
add
push
int3
dec
or
mov
push
pop
and
cmp
jb
jnp
repnz
lret
ficoml
xor
jo
mov
idivb
jmp
xchg
add
pop
jae
stos
es
enter
mov
adc
sbb
imul
push
rcrb
ljmp
imul
xor
ds
and
xchg
aad
std
pop
cmpsl
push
xor
xor
dec
test
push
mov
outsb
daa
mov
cs
add
push
pop
pop
aaa
push
out
jmp
out
or
pop
pop
xor
xor
push
cmp
sbb
ljmp
out
pop
lea
jne
lret
xchg
lods
test
adc
jecxz
hlt
sub
mov
jb
aaa
add
cwtl
mov
sti
jge
cmp
xor
inc
and
call
xor
mov
shll
jmp
mov
mov
out
loopne
ds
xchg
fisubrl
lcall
xor
sub
mov
inc
adc
jno
mov
sbb
mov
call
dec
sbb
sarl
pop
mov
les
aas
jb
or
dec
mov
test
out
rcll
mov
inc
xchg
test
jl
inc
sub
push
dec
push
loopne
orb
jb
cs
sti
mov
xchg
xacquire
scas
cmp
shlb
cmp
rolb
pop
rcrl
pop
xchg
pop
push
icebp
xchg
sub
paddsw
shrl
dec
xor
inc
adc
mov
dec
cmp
in
mov
xchg
sbb
cmpl
adc
adc
xor
test
mov
and
xor
or
mov
xchg
setge
sbb
inc
movsb
pusha
xchg
jns
dec
popl
and
and
add
sti
fldenvs
subl
enter
xorb
xchg
mov
shl
sti
iret
inc
cmp
sub
in
popa
pushf
rcl
or
mov
outsb
sub
sub
pop
les
add
or
int
xor
fiadds
jne
push
fidivs
aam
sub
push
gs
xchg
arpl
shll
xor
dec
jo
xor
pop
lea
sbb
lock
iret
mov
jl
in
mov
fisttps
loopne
mov
jnp
jp
mov
xchg
into
scas
pop
xchg
in
mov
cmp
cwtl
mov
insb
adc
fimull
sub
gs
inc
dec
xor
aad
xchg
call
test
lahf
mov
add
repz
lar
sbb
mov
movsb
test
arpl
or
icebp
pop
xchg
adc
cmpsb
lock
pop
inc
enter
iretw
add
dec
cmp
push
lret
cld
nop
repz
or
xor
dec
daa
js
dec
das
mov
shr
fidivrl
sub
lret
fildll
data16
scas
inc
mov
mov
xchg
dec
popa
call
loope
popf
or
movsl
int
pop
lock
inc
std
sub
outsb
sbb
int
mov
movsl
dec
pop
out
cmpsb
jmp
rolb
sbb
repz
insl
push
xlat
add
dec
sub
outsb
ss
aam
inc
out
sub
std
test
stc
xor
and
dec
lret
pop
fwait
mov
and
fnstsw
test
mov
mov
sbb
xor
hlt
xor
dec
mov
icebp
jg
mov
sbb
sahf
jno
push
movsb
or
test
mov
rcrl
mov
jbe
inc
cmp
xor
pop
push
idiv
jle
push
push
fwait
inc
outsl
add
movsl
loop
add
bound
outsl
std
arpl
mov
mov
or
mov
and
shll
in
ja
cli
push
filds
push
insl
jmp
xchg
xor
pushl
mov
dec
shll
rolb
pusha
xor
jge
sahf
xor
xchg
nop
loope
mov
jp
repz
mov
aas
fisttps
fists
sahf
and
aam
out
gs
sub
cmpsl
cwtl
arpl
inc
int3
mov
ret
popa
lahf
lods
xor
cmp
sbb
cmpsl
dec
iret
xor
sbb
add
dec
popa
test
jb
cmp
loopne
aad
lea
sbb
stos
std
xor
mov
push
sbb
cmpb
and
aaa
mov
pop
pop
sub
cmc
add
dec
jno
fs
jecxz
mov
mov
dec
movsb
lahf
lret
mov
pop
cltd
imul
xor
push
or
insl
imul
shlb
pop
pop
sar
jg
flds
add
enter
outsb
inc
js
lds
fimuls
movsl
jnp
inc
ljmp
or
fs
jge
loop
mov
sahf
call
sbb
bound
fidivl
stos
jp
sub
test
adc
cmp
scas
push
xchg
mov
es
push
mov
fcmovnbe
imul
out
lods
adcb
mov
dec
in
xor
adc
rorb
mov
cmp
insl
pusha
fistpll
cli
shl
dec
push
jl
dec
nop
sub
push
cmpsl
outsl
jl
push
cmp
mov
or
sbbl
imul
pop
inc
jno
data16
rol
push
rolb
jnp
inc
adc
add
aaa
popa
sbb
loop
scas
mov
in
jp
stos
push
push
ficomps
cmp
mov
aas
mov
xchg
test
sahf
or
or
mov
pop
adcl
mov
jle
jmp
out
jae
jae
into
rcr
stc
rclb
cmpsl
sub
xor
mov
aaa
pop
test
imul
pop
into
add
sti
movsl
out
inc
in
pop
add
push
bound
pop
lahf
out
xor
sub
mov
cli
cmp
out
push
lret
xor
or
pop
ficomps
outsb
ss
popa
push
test
add
jl
jmp
stos
or
ret
mov
and
roll
cs
and
mov
lods
jb
lods
push
pusha
jmp
inc
xor
adc
jns
jle
add
movb
jns
mov
in
inc
mov
cmpsl
ss
test
lea
mov
cmp
cmp
fisubrl
divb
add
aas
ret
xor
out
pushf
je
and
fnstcw
in
repnz
mov
mov
sbb
sti
test
loopne
mov
fcompl
js
push
je
adc
cmp
push
xor
mov
pop
and
stos
mov
fucomi
pushl
faddl
mov
lret
es
addb
lahf
fmulp
or
and
pop
push
add
sub
and
mov
data16
or
movsb
mov
int
shlb
xor
add
lahf
xchg
mov
fmull
insl
cmp
or
out
jle
mov
and
arpl
or
cmp
test
sub
jnp
es
mov
out
movsb
pop
cmp
adc
aam
data16
rcrb
stos
jl
push
mov
cmpsl
sbb
std
jae
popf
out
cmp
out
cmp
pop
inc
lock
sbb
out
pop
gs
or
pop
mov
fcom
mov
int
ja
ret
mov
pop
mov
jecxz
dec
inc
test
sub
loopne
sbb
or
icebp
or
or
and
aam
push
ds
adc
add
lea
into
push
icebp
push
jo
push
sbb
ja
sbb
or
lahf
xlat
push
adc
pop
fiadds
bound
pop
movsl
movsl
pop
pop
insb
add
mov
jns
sbb
call
jecxz
and
arpl
popa
pusha
mov
mov
sahf
jns
add
movsl
sbb
mov
aam
adc
ja
lret
adc
and
movsl
push
jnp
xchg
std
shr
jge
mov
mov
mov
pusha
sub
cwtl
je
push
push
add
ret
jl
push
push
aas
fldz
dec
push
push
std
push
cmpsl
in
mov
and
mov
lea
repz
xor
lret
fsubs
pop
xchg
inc
cmp
mov
pushf
shlb
int3
dec
fnstsw
mov
cmp
adc
stc
pop
fists
stos
push
cmpb
ret
or
sub
enter
or
aam
addr16
fbld
test
in
jbe
fwait
adc
leave
add
inc
add
fndisi(8087
lds
stos
cmp
pop
xor
sbb
mov
mov
int
test
mov
mov
call
cmp
sub
shl
xor
dec
es
mov
jge
dec
sub
and
loope
imul
js
pop
jle
enter
jmp
adc
stc
clc
leave
repz
clc
sbb
popf
and
ret
cmpsl
mov
or
hlt
cmp
push
shr
hlt
mov
ret
fadds
and
aam
inc
sbb
out
outsb
pop
sbb
mov
leave
inc
lea
push
dec
cmp
push
les
mov
push
inc
mov
push
fisubrs
jle
mul
add
jne
cmp
add
mov
pop
and
pop
push
incl
stos
mov
and
mov
xor
fwait
dec
adc
mov
push
lahf
leave
lods
mov
push
je
jno
ret
cmp
mov
xchg
fisttpl
test
or
out
adc
fcmovnbe
out
mov
adc
inc
ficoml
pop
cmp
nop
jno
test
rcll
push
xchg
fistpl
cmp
jg
in
cld
jbe
cld
cmp
inc
fs
inc
dec
cwtl
jp
lahf
add
js
pop
shr
fisubl
scas
add
cmc
mov
lahf
cmp
mov
push
xchg
sub
ljmp
leave
add
test
mov
mov
outsb
cli
hlt
xor
jmp
inc
cltd
ret
fisubs
mov
adc
popf
xlat
std
inc
testl
lret
je
in
add
sbb
imulb
pushf
cwtl
or
mov
inc
je
sub
hlt
outsb
adc
add
pusha
fs
insl
xchg
lret
adc
cmpsl
xchg
out
test
cli
jne
sbb
jns
test
sbb
pop
fistpll
int3
inc
std
pop
and
out
fabs
nop
call
int
insb
arpl
xor
lcall
out
inc
push
xor
gs
lret
xor
xchg
stos
dec
ljmp
pop
ljmp
pop
cmpsl
push
lods
sbb
clc
xchg
or
shr
nop
lds
mov
in
cmpsl
out
ljmp
cli
pop
and
pop
mov
repnz
lea
jns
test
pushl
push
add
jne
fnsave
clc
or
popa
and
inc
push
add
fadd
jp
mov
subl
test
aaa
pop
int
pop
cmpsb
test
sbb
lock
int
inc
dec
pop
inc
hlt
pop
mov
jge
dec
call
and
cli
sbb
pop
mov
inc
mov
mov
inc
popa
das
aad
jnp
cmp
lock
jecxz
push
lods
push
sahf
jb
jmp
inc
cmp
sti
enter
hlt
pop
xor
mulb
fucomip
jb
xchg
mov
daa
sub
fisubl
popa
pop
clc
lea
xchg
add
rcll
test
push
gs
sbb
add
fidivrs
lret
push
fildll
ljmp
test
xchg
into
rcrb
mov
faddl
jb
bound
inc
loope
cld
push
sub
das
adcl
inc
sti
gs
call
dec
inc
out
je
mov
mov
dec
add
repnz
das
pop
daa
icebp
in
add
cmc
popl
lahf
sub
inc
mov
jmp
repnz
aad
nop
and
sub
pop
loope
mov
cmp
pop
mov
sub
movsl
push
ret
push
sahf
mov
and
mov
jbe
decl
outsb
loop
enter
dec
lret
lahf
sub
sub
mov
add
jno
stos
rclb
sub
fimuls
test
cmc
sub
stc
xor
pusha
mov
sbb
rorb
or
or
add
jle
adc
aam
xlat
mov
aad
add
or
jno
pop
imul
xor
push
mov
das
mov
pop
push
cmpsl
adc
outsl
inc
mov
ret
sub
pop
jmp
xorb
ret
cmpsl
nop
lea
pushf
shlb
mov
xlat
xchg
mov
mov
adc
cmp
dec
rcrb
mov
or
out
fisubrs
and
dec
xchg
test
dec
insl
insl
lods
sub
inc
sbb
out
icebp
cs
aad
repz
ja
nop
mov
iret
ss
jo
daa
xchg
movsl
mov
mov
ja
jo
clc
sub
fnstsw
imul
or
or
mov
hlt
addr16
out
out
dec
or
lods
add
mov
dec
sbb
in
int
inc
leave
iret
fidivrl
xlat
cmp
xor
add
adc
fs
fists
sub
jne
lahf
adc
xor
push
or
mov
mov
lock
xchg
sub
into
scas
test
out
imul
push
push
fstpt
lcall
xchg
sub
sub
pop
pop
dec
xlat
out
mov
dec
pop
jmp
and
inc
imul
and
pusha
outsb
lcall
inc
sahf
pop
test
test
scas
aaa
lea
inc
stc
sub
fwait
mov
int3
inc
icebp
mov
or
adcb
or
scas
xchg
xchg
mov
xor
jp
enter
mov
push
lods
shlb
jle
and
cmpsb
pushf
popa
dec
lret
push
sub
idivl
es
push
push
add
mov
pop
jecxz
lods
push
push
and
pop
push
pop
loope
xchg
cltd
and
movl
push
sub
jge
and
lods
fcmovbe
mov
and
dec
gs
or
jmp
pop
pop
jbe
jbe
sti
ret
sbb
cld
aad
add
jge
xor
repnz
cmp
lods
jecxz
and
inc
mov
test
push
push
stos
idivb
inc
mov
cltd
cmp
in
sub
xor
pushf
add
xchg
push
cmp
aam
xor
cmpsl
and
gs
push
pop
push
ljmp
nop
lock
subl
out
aam
mov
push
loopne
jb
sbbl
jb
cmp
xor
adc
xchg
pminsw
sub
mov
dec
mov
dec
cmc
mov
push
bound
nop
popf
inc
jg
pop
popf
shlb
push
fnstsw
push
enter
xchg
push
call
mov
adc
pop
lcall
xor
sub
test
cmp
inc
dec
fs
cmp
lcall
lret
sbb
cmc
test
xlat
cmpsb
xchg
push
mov
loop
adcl
outsb
pushf
add
int3
or
mov
rorl
andl
push
ja
imul
arpl
sbb
cmpsl
aas
pop
jb
sbb
adc
or
push
int
fbstp
mov
xor
je
adc
imul
lods
shlb
int
lcall
dec
add
mov
mov
jbe
mov
push
sbb
jmp
testl
xchg
in
sub
or
cltd
fnclex
loope
dec
adc
push
mov
sbb
dec
add
mov
dec
sub
movsl
mov
inc
jge
ljmp
mov
push
loope
and
pop
cli
dec
std
enter
add
jl
push
mov
sub
dec
or
scas
xor
dec
push
xor
jo
mov
fwait
andb
les
fcoms
mov
mov
or
jge
lock
bound
lods
inc
gs
or
imul
sub
jecxz
out
insb
repnz
push
mov
int3
pop
xor
jl
aaa
jmp
mov
inc
in
cmc
lock
fmuls
add
sbb
mov
jl
stos
pusha
and
sbb
lods
js
push
iret
and
ja
or
lods
into
sub
jae
add
shlb
cmc
inc
leave
scas
frstor
mov
out
mov
cmovb
repnz
pop
cltd
stos
inc
fadds
loope
jno
icebp
and
test
aad
cmp
lcall
out
lret
scas
in
push
sub
xchg
movsb
sub
jb
xlat
xorl
cltd
or
push
dec
lea
lods
fisubl
and
cld
cs
sbb
sbb
xchg
mov
lods
cltd
mov
sti
movsb
and
std
test
mov
repz
pop
push
mov
sahf
cli
mov
sbb
jp,pn
jmp
sbb
in
les
cmpsl
sub
xchg
decb
in
call
faddl
insb
xchg
mov
xchg
or
add
jbe
fldl
enter
mov
sbb
das
fisttps
insl
push
push
loop
ja
movsb
cmp
iret
fidivs
arpl
mov
xor
jne
push
stc
and
add
mov
arpl
in
mov
lret
ret
lret
mov
sbb
mov
loope
mov
push
sub
das
ret
lahf
test
dec
idiv
sub
xchg
pop
or
test
lcall
movsl
inc
fsubr
cmpsl
mov
mov
pushf
fisubrs
fs
pop
cmp
pop
xor
mov
mov
sbb
jl
mov
cmpsl
insb
pop
xchg
push
cltd
or
std
les
mov
jge
push
pop
xor
movsl
dec
xchg
pop
loope
lret
call
ds
mov
mov
testb
in
loop
push
nop
call
cmp
daa
mov
pop
mov
sub
cld
lret
addr16
and
sbb
shl
fucomp
cltd
fsts
jg
jecxz
cmp
xor
in
pop
arpl
and
fcompl
aas
sub
push
mov
out
iret
sub
xchg
out
rol
xor
iret
mov
cmp
shrl
pop
inc
test
aaa
cmp
fisubs
xchg
push
insl
hlt
shrb
int3
subb
subb
sbb
arpl
xchg
mov
aas
cmpsb
pop
xchg
push
aas
out
xchg
dec
loop
xchg
mov
cmp
mov
decl
inc
fsubrs
and
push
movsb
inc
aaa
lret
mov
mov
cmpsl
or
lret
mov
jp
mov
dec
popf
xchg
fwait
sbb
arpl
cmc
jecxz
lcall
sbb
xchg
push
pavgw
lahf
xchg
cmpsb
or
and
leave
mov
cli
je
or
sbb
add
dec
sbb
bound
pop
mov
icebp
cmpsb
mov
shl
imul
mov
dec
adc
and
aaa
fistps
xorb
inc
push
movsl
mov
push
rcll
xor
in
sbb
jbe
lret
cmp
out
fiadds
outsl
addb
sub
ja
jne
jecxz
sbb
xchg
push
or
pop
roll
mov
sahf
lret
adc
jge
mov
aam
frndint
cltd
in
std
mov
inc
js
mov
lret
jl
pop
repnz
addr16
and
in
fwait
popa
test
scas
mov
shll
leave
dec
mov
mov
incb
dec
es
loop
xchg
mov
cmpsl
mov
jne
scas
cmp
dec
in
out
jmp
daa
cmc
xchg
sub
orb
icebp
pusha
test
pop
dec
pop
insb
pop
sub
pushf
pop
sbb
in
ja
pusha
imul
jmp
cltd
pop
cli
test
mov
cmpsl
xchg
cmp
fsub
sbb
inc
aas
mov
dec
jnp
push
fidivl
imul
jp
dec
push
pusha
les
repz
mov
ficoms
jg
lods
pop
jmp
imul
insl
sti
movl
push
and
mov
es
clc
ss
fdivr
cmc
dec
int
out
jns
sub
sub
push
cmp
sbb
cld
inc
cld
or
dec
push
scas
cs
lcall
imul
dec
aaa
mov
jmp
gs
idivl
cmpsb
adc
fadd
jne
sahf
pop
xlat
js
cltd
hlt
push
and
rcrb
dec
xchg
jecxz
sub
imul
sub
inc
hlt
pushf
andb
subl
stos
dec
out
fldenv
js
dec
adc
test
and
lahf
test
mov
mov
lea
xor
daa
fs
lsl
fwait
xor
fs
outsl
aam
mov
push
iret
fmuls
xor
mov
and
scas
call
test
cmp
pop
mov
adc
fdivs
pop
jl
into
sbb
cs
dec
jmp
stos
and
xor
test
iret
pop
lds
mov
insl
add
addl
pop
popf
andb
or
mov
ficompl
cwtl
inc
mov
xchg
mov
ds
xchg
movsb
push
pop
jbe
mov
and
xor
or
imul
sbb
cs
adc
and
in
pop
ret
fisttpl
or
or
and
lods
mov
inc
ss
test
js
xor
inc
adc
dec
pop
daa
ja
push
lea
mov
insb
xor
mov
xchg
in
push
lock
mov
dec
int3
lods
divl
sub
leave
loopw
out
xor
daa
dec
icebp
jne
cmc
pusha
mov
xor
add
shll
cmp
inc
les
or
cmp
imul
sbb
push
ficompl
stc
add
mov
xor
in
mov
je
ror
xchg
in
pop
popl
lods
pop
adc
jl
popf
outsl
lods
and
stos
pop
dec
jle
loop
add
xchg
gs
dec
lret
xchg
push
cmp
inc
int
pop
or
mov
enter
es
repz
xchg
loope
cltd
xor
and
mov
push
mov
dec
shrl
test
pop
jp
pop
mov
int3
aas
addl
lods
icebp
fldt
sub
push
aad
and
xor
mov
mov
and
ds
pmaddwd
test
push
jnp
fs
imul
push
mov
mov
or
sahf
out
sub
arpl
push
mov
xchg
mov
add
push
shlb
pop
push
fcompl
jno
ja
pop
shrb
adcb
call
push
add
dec
or
mov
les
sub
es
repz
add
and
pushf
imul
add
inc
mov
add
lods
xor
sarb
pop
aas
jbe
pop
jge
mov
push
xchg
imul
xchg
mov
jae
fistps
icebp
or
bound
adc
xor
call
sub
arpl
dec
pushf
cmpsl
cwtl
rclb
inc
adc
cs
push
repz
loope
mov
repnz
sar
inc
lret
leave
or
scas
pusha
movsl
dec
cmp
es
mov
pop
addr16
push
roll
pop
jecxz
arpl
xchg
icebp
jmp
les
call
rcr
andl
lret
cmp
test
cs
insb
popf
sbb
xor
mov
xchg
pop
add
jge
repz
fs
insl
dec
insb
pop
fstpl
inc
and
or
movsb
icebp
lock
inc
cmp
jo
sbb
mov
enter
or
dec
xlat
std
mov
push
lcall
out
ss
xor
mov
push
xchg
push
add
test
fwait
jp
cmp
fwait
push
mov
lret
nop
push
cltd
add
push
jge
pop
pop
aaa
push
and
ret
lret
adc
ret
fucomip
inc
mov
lret
mov
mov
or
dec
push
aad
sbb
pop
pop
xor
sbb
mov
adc
lods
shr
stc
pminub
mov
pop
lret
andb
popl
pusha
and
and
shll
jbe
push
jge
xor
sti
movw
mov
push
xchg
sbb
mov
cwtl
daa
es
pop
xchg
out
push
jnp
inc
stos
mov
xchg
lds
jg
mov
pop
push
outsb
mov
cmc
xchg
mov
mov
shrb
xchg
psrad
and
ja
daa
xchg
call
lret
dec
lods
dec
and
das
push
call
test
dec
adc
cmp
loopne
mov
pop
scas
ljmp
lcall
out
xor
rcr
aaa
inc
mov
add
sbb
ds
xchg
fwait
xchg
shl
inc
sub
mov
push
mov
jp
jmp
rorb
push
dec
sub
imul
adc
ds
xchg
leave
push
int
xor
xchg
jg
pop
lea
imul
lods
stos
roll
sbb
mov
in
int
das
in
cwtl
dec
addb
dec
ffree
sub
popf
pop
in
in
insb
rol
adcb
insl
jmp
je
xor
stos
ljmp
xchg
mov
jnp
filds
cmpsl
cs
push
and
movsl
push
mov
mov
repnz
sbb
sti
sub
jge
pop
push
addr16
xor
jmp
push
pop
shl
gs
pop
sub
in
fldt
push
bnd
or
inc
int3
inc
popf
jnp
lcall
lret
sub
add
fwait
xor
cmp
push
imul
call
cld
add
jns
mov
jns
jnp
mov
mov
xor
xchg
pop
jae
and
sub
lea
dec
adc
push
andb
bound
and
xchg
pop
and
es
push
lea
adc
sbb
cmc
fcompl
inc
imull
push
insb
insl
nop
ja
testl
add
test
nop
sub
mov
inc
es
fs
lds
mov
fdivl
pop
lds
ja
xchg
inc
call
add
xchg
sahf
mov
mov
add
or
sub
divl
push
add
fisubs
fnstenv
pop
call
sahf
jle
sub
xchg
mov
fwait
jle
lods
mov
pop
dec
fld1
int
fisubs
and
aad
push
mov
add
insl
cmp
dec
out
lods
jge
xlat
insb
iret
aad
xor
push
xchg
mov
xor
cmpsl
push
sti
std
call
ds
addr16
lods
jmp
ljmp
push
pop
js
cltd
inc
pop
xchg
repz
xor
loope
sub
push
push
bound
adc
dec
out
mov
jge
sbb
ret
fdivp
jp
fwait
int3
xor
out
arpl
xchg
mov
dec
xlat
and
js
jp
sub
jbe
jle
dec
cmp
rclb
ljmp
int3
jg
pop
movsl
xchg
pusha
lea
test
imul
sub
mov
mov
in
test
push
arpl
mov
icebp
pop
mov
cmc
test
testl
rolb
xor
jl
jno
cmp
and
mov
sbb
sti
inc
or
mul
das
mov
add
and
inc
jg
cld
mov
lcall
fstps
mov
add
mov
adc
aam
fnstsw
jge
dec
sbb
sub
mov
sub
fwait
inc
xchg
inc
pop
idivb
jne
es
mov
dec
adc
sbb
imul
rcrb
add
xor
pop
or
pop
pop
inc
nop
test
dec
in
xchg
fsubl
pop
cmpl
inc
gs
push
cmp
push
insl
sarb
xchg
adc
leave
xlat
inc
dec
xchg
pop
in
rcrl
rorl
in
mov
in
adc
cmpsl
movb
sahf
and
das
adc
faddl
out
jo
aam
adc
fidivrs
xchg
ss
mulb
adcl
xorl
sbb
or
mov
push
jno
cwtd
or
and
pop
xor
sbbb
add
jb
adc
hlt
stos
movsb
insl
loope
xor
xchg
aam
mov
rol
mov
cwtl
xchg
and
xchg
push
sub
dec
mov
push
lock
sub
push
or
sbb
push
jmp
subl
jl
lds
xor
divps
mov
lret
test
mov
or
addr16
ss
mov
dec
imulb
mov
rclb
mov
and
push
and
sti
dec
sub
inc
sub
add
or
test
out
pop
clc
imul
ja
jg
push
aam
fistpll
loope
jecxz
dec
adc
and
pop
jns
adc
pushf
notl
rorl
push
scas
cmp
inc
xchg
mov
jp
mov
shl
dec
jnp
mov
mov
mov
sub
sub
test
push
shl
and
inc
push
push
fdivs
xchg
fnsave
add
sbb
xchg
stc
call
jecxz
xor
xchg
pop
fidivl
dec
push
ja
sbb
nop
adc
ror
stos
ficoml
test
in
insb
jg
imul
inc
filds
mov
jg
push
data16
loope
cmp
pop
cltd
inc
xchg
cmp
jge
stos
icebp
xor
mov
push
push
xchg
ljmp
and
mov
sbb
mov
mov
lock
mov
dec
sub
mov
into
sahf
outsb
stc
mov
nop
jg
repnz
loop
cmp
loopne
dec
lds
call
cmp
lods
dec
or
lret
jno
movsl
ja
inc
jne
movsl
jb
cmpb
mov
sub
sbb
lods
xchg
and
insl
dec
in
fcompl
mov
imul
cld
cmpsl
mov
add
jo
push
dec
jle
sub
scas
add
mov
push
mov
testb
fucom
pop
rorb
xchg
xlat
fcmovnbe
adc
scas
pop
rorb
push
repz
jg
int
int3
inc
sahf
add
xchg
and
clc
mov
stos
sbb
cmp
adc
hlt
cmp
inc
ja
roll
fsubl
loopne
loope
iret
adc
jns
int3
stos
cli
jecxz
jns
xchg
mov
xchg
clc
sbb
imul
repz
add
cmp
sbb
dec
mov
inc
aad
sub
xlat
sbb
inc
fs
adc
jo
sbb
scas
pusha
mov
repnz
pop
sub
es
inc
pop
jne
dec
add
mov
mov
imul
adc
fwait
sbb
add
push
or
aam
loopne
call
xchg
mov
lea
xchg
jnp
sub
sbb
push
cmp
es
insb
roll
sub
inc
sahf
pop
cltd
movsb
cmp
imul
ljmp
inc
clc
adc
cmc
pop
or
movsl
add
stc
adc
mov
and
das
dec
jg
inc
popa
dec
ret
movsb
lock
movsb
dec
in
xchg
clc
ds
ret
sub
das
push
sub
mov
lds
cmpsb
loope
lds
or
jae
inc
adc
adc
jl
inc
stos
add
pushf
lock
jo
pop
lock
clc
call
mov
out
push
loope
sub
rclb
lods
mov
dec
movsl
rorb
mov
cmp
imul
cmpsl
xchg
pop
lods
push
xchg
sbb
or
lock
test
xor
xor
repz
cwtl
push
lock
rcrb
lret
pop
out
xorb
pushf
xorb
xchg
pusha
sub
fstps
xor
test
fstpl
fsubl
std
stc
xchg
or
or
adc
sub
aad
add
push
xchg
lret
sbb
and
xchg
sbbb
lds
mov
scas
lods
sbb
push
fbld
jbe
jge
sbb
or
add
push
bound
lock
sbb
pop
sub
xchg
xchg
js
xlat
int3
lahf
mov
mov
shlb
test
xchg
aad
cmp
iret
ss
fdiv
and
mov
int3
lods
andb
cltd
adc
ret
out
cld
test
dec
test
leave
mov
add
je
lods
jp
lds
cwtl
cmc
pusha
dec
cmp
inc
ljmp
shlb
xchg
out
push
ret
mov
cld
push
mov
ss
and
mov
pop
lock
insb
xchg
out
shlb
test
inc
icebp
mov
divl
inc
push
xchg
loop
pop
stos
push
pusha
std
dec
sbb
movsl
mov
add
jg
outsl
sbb
xor
or
and
hlt
insb
dec
mov
add
aas
cmpsb
scas
inc
mov
push
repz
sub
pop
cmp
mov
dec
pop
loop
xor
cmc
fcomps
fidivrs
fidivrl
or
dec
test
and
add
mov
fldcw
loopne
sarl
pop
xchg
je
cli
in
out
test
loop
jne
repnz
sbb
fisubl
inc
filds
lds
out
or
sub
add
addb
push
les
fnstenv
xchg
push
cmp
sub
iret
aaa
xchg
les
sbb
lahf
add
mov
in
repz
mov
xchg
std
cltd
adc
dec
int
push
xchg
mov
jb
cwtl
xchg
xchg
mov
inc
dec
jl
dec
enter
cltd
popa
mov
and
lods
add
out
ss
imulb
mov
adc
xor
insl
fwait
mov
and
pop
xchg
jecxz
inc
outsl
mov
push
stos
stos
and
add
test
dec
sub
adc
sub
movsl
jge
mov
mov
xor
add
add
add
add
add
add
adc
add
add
mov
sub
xchg
push
out
add
aaa
mov
sarb
add
mov
add
mov
add
mov
add
mov
add
mov
test
xor
mov
ret
aaa
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
and
mov
add
loopne
adc
add
addb
add
add
cmpsl
mov
or
add
add
iret
outsb
mov
xchg
jge
adc
add
add
add
add
mov
add
sbb
add
add
jae
pop
arpl
pusha
or
push
hlt
sbb
lahf
cmpsb
xlat
inc
sbb
inc
push
pushf
out
pop
or
sarl
or
ss
pop
pop
xchg
sahf
in
insb
dec
daa
sbb
xorb
jg
dec
negl
mov
scas
pop
xchg
mov
bound
push
lret
cmpsl
sbb
stos
xchg
jge
movsl
bound
icebp
es
xchg
and
lock
test
push
sub
in
in
pop
ja
mov
pop
sub
cltd
repz
mov
xor
iret
rorl
and
ss
mov
test
adc
out
sbb
add
addl
loope
daa
je
and
popa
loop
rolb
dec
sub
pop
add
inc
mov
or
mov
outsl
repnz
xchg
arpl
mov
lods
popa
mov
jne
lea
jno
cmc
mov
inc
les
cs
jl
inc
xor
or
out
dec
scas
pushf
shll
repz
mov
sub
xchg
adc
stos
test
scas
sbb
jae
pop
add
outsl
cld
or
inc
popa
mov
loope
fdivl
lock
ljmp
fcoms
cwtl
out
push
cmp
cmp
mov
repz
movd
and
mov
adc
orb
lret
fstps
shl
xor
dec
pop
imul
and
aam
outsl
and
loop
mov
xchg
movsb
mov
push
in
jbe
ret
mov
hlt
fisttps
xchg
or
sar
aam
xchg
push
hlt
jge
adc
adcb
push
ret
xorl
xor
and
insb
stc
fwait
mov
and
inc
sub
mov
inc
in
leave
xor
pop
xchg
ret
pop
rcrl
frstor
push
sub
icebp
cltd
ljmp
xchg
shrb
adc
adc
mov
ljmp
xchg
les
inc
inc
mov
cmp
inc
jbe
mov
xor
or
pop
add
cli
insl
jl
or
sbb
add
aad
mov
outsb
push
jg
pop
mov
dec
pop
sub
jne
sub
push
lods
leave
push
incl
dec
push
cmp
out
xchg
mov
mov
inc
mov
push
and
push
and
jle
mov
mov
icebp
ret
cli
cmp
je
xor
invd
lahf
out
lcall
inc
push
mov
pop
push
daa
sub
lcall
pop
es
mov
cmp
repnz
add
into
add
mov
push
xor
out
xor
call
adc
and
ds
in
mov
test
lods
lods
sahf
or
mov
nop
jnp
ds
addr16
jo
cs
scas
mov
push
and
loop
jle
and
xchg
in
mov
mov
mov
inc
mov
push
mov
or
rorb
cmp
and
orl
pop
ret
or
cmpsl
or
into
pop
stos
mov
aad
bound
stos
imul
gs
add
jbe
pop
inc
mov
xor
loop
out
jge
mov
in
mov
cmpsl
sub
stc
in
pop
xor
cmp
int3
int3
leave
pop
adc
sbb
inc
or
mov
xchg
jbe
repnz
xchg
adc
idiv
shll
loopne
sub
add
and
sbb
je
fisubrs
xor
inc
insb
mov
add
jl
jecxz
push
jp
jae
cld
add
repnz
xchg
jl
mov
out
pop
jge
jb
sbb
cmp
fwait
insl
fbld
daa
jge
mov
stos
mov
and
fnop
mov
je
jo
pop
adc
jp
add
and
and
jae
mov
stos
sbb
and
test
cltd
push
jecxz
xor
and
pop
push
push
loope
fildll
ljmp
das
subl
arpl
popf
je
mov
test
fnstenv
ficompl
cmp
les
or
and
push
dec
sti
cmp
sbb
shrl
mov
outsl
mov
js
mov
lahf
xchg
shll
xchg
mov
js
das
jnp
nop
and
ficoms
pop
aaa
orb
mov
rcrl
sub
outsl
test
push
das
dec
or
test
xorl
and
inc
loopne
jmp
lods
es
xlat
loopne
fistpll
push
adc
fsub
xchg
imul
mov
scas
and
push
fbld
or
addl
cmovae
jg
mov
test
adc
movsb
stc
insl
xor
xor
and
xlat
jno
add
adc
inc
jae
fs
jmp
pop
or
cmpsb
and
pop
jnp
pop
fnstcw
add
mov
jnp
movb
mov
in
subl
icebp
xor
mov
sub
mov
mov
mov
mov
out
xor
pop
fs
in
cmp
into
into
mov
xor
aaa
loopne
cmc
out
fnstsw
mov
mov
orl
inc
jne
mov
mov
push
pushf
imul
jns
mov
mov
fwait
sbb
fdivrs
and
sbb
int3
or
bound
rcll
lods
aad
jge
sub
lret
imul
mov
not
adc
sbb
or
mov
mov
movsb
fcoml
ror
xlat
test
lcall
shll
arpl
jae
dec
pop
mov
xchg
nop
jp
dec
js
cmpsb
aaa
sbb
or
pop
adc
adc
outsl
imul
mov
mov
popa
cwtl
pop
mov
add
sub
add
jae
popa
dec
lds
out
out
les
inc
xchg
iret
mov
or
sbb
add
cwtl
push
sub
ror
push
xchg
or
test
mov
ret
in
ljmp
es
insb
mov
add
cmp
and
ss
xlat
xchg
popa
mov
or
xchg
dec
jbe
imul
or
movsb
cmp
imul
andl
out
xor
sub
clc
shrb
sub
sub
jp
fcmovnb
popa
jno
pop
je
fcmove
cmpb
sbb
jl
out
sarb
and
ds
mov
mov
jno
pop
pusha
leave
and
and
sahf
mov
js
pop
fistpl
in
out
dec
pop
push
test
popf
inc
mov
cmpsl
xlat
subl
add
and
pop
mov
dec
push
test
aad
add
stc
outsb
cs
jbe
sarl
stos
mov
shll
popl
cmc
or
les
push
dec
xor
popa
mov
xor
xchg
movsl
adc
sub
mov
ret
lret
gs
sahf
cmpsl
les
mov
mov
shrl
inc
push
adc
sti
or
shll
adc
rolb
xlat
sbb
lds
fs
inc
shlb
sbb
or
inc
mov
mov
lods
ja
scas
subb
imul
or
mov
adc
jae
ds
inc
stos
and
and
ss
inc
and
testl
mov
add
add
pushl
push
enter
insl
cmp
test
xlat
pop
fcomps
push
mov
arpl
nop
rclb
jle
sahf
mov
lods
xor
popa
sbb
decl
lcall
jg
xlat
clc
hlt
xchg
pop
movsl
test
cmp
hlt
mov
add
sbb
lea
jge
push
adc
movsl
into
nop
push
mov
inc
jp
xor
push
insb
cmpsl
in
pop
in
mov
pop
add
scas
xor
adc
ja
mov
jns
in
jne
fsubl
lods
pop
and
test
sbb
out
cli
dec
movsb
mov
inc
mov
ds
xor
je
sub
je
xor
sub
das
adc
clc
adcb
hlt
imul
fdiv
jno
mov
push
fstpt
lods
out
pop
sub
aaa
fsubrs
pop
jne
jp
outsb
cmp
inc
and
subb
dec
inc
std
icebp
test
imull
mov
add
out
loop
repnz
push
adc
je
cld
int
daa
inc
out
xor
fs
cld
sbb
inc
mov
cmpsl
cld
aad
jmp
dec
mov
shlb
xor
imul
pop
loop
cmc
xchg
mov
es
addb
ss
enterw
sbb
stc
cmpsl
cmp
jb
or
jo
shlb
fwait
inc
out
push
lret
mov
cmp
push
add
xor
and
cmc
pop
or
sarl
stc
in
es
fsubr
int3
jle
testb
adc
inc
outsl
add
sbb
xchg
daa
adc
fisttpll
mov
xor
loope
xor
push
nop
lret
adc
push
sahf
movb
scas
int
loop
inc
stos
test
loopne
and
adc
outsl
jae
push
mov
sahf
push
ljmp
nop
lret
inc
ss
jecxz
dec
push
arpl
jmp
out
jno
inc
lret
je
in
loop
mov
inc
bound
inc
push
mov
add
mov
jl
inc
in
jp
enter
out
test
rcll
fisubrl
repz
fwait
jg
aad
jno
or
repz
gs
movntq
stos
pop
sub
leave
and
je
xor
idivb
movsb
sub
lods
repnz
mov
out
xchg
idivb
gs
push
fistps
mov
into
and
dec
xchg
outsl
je
movsl
int3
dec
push
aad
dec
std
in
or
scas
enter
cli
mov
cmpsl
cmpsl
push
inc
jge,pt
fcmovbe
bound
pusha
dec
push
fistpll
ja
mov
lret
mov
push
sub
jge
ljmp
fwait
je
mov
fdivl
push
cmpsb
imul
js
push
or
xchg
inc
push
add
js
mov
enter
mov
add
rcl
push
and
or
call
test
hlt
mov
or
shlb
inc
testl
mov
test
pushf
mov
icebp
sub
xchg
jecxz
aaa
mov
mov
in
push
pop
jno
popa
cmp
add
dec
mov
cmp
repz
lret
cld
or
sbb
test
cld
mov
jne
aas
sti
mov
aam
push
add
xor
mov
or
test
push
dec
fidivl
scas
pop
and
in
inc
dec
jmp
mov
cwtl
repz
leave
sbb
out
inc
add
jge
push
jge
shl
inc
into
test
inc
xor
ret
adc
scas
cli
and
mov
add
cmp
lock
mov
cmp
mov
lret
sub
stos
push
loopne
inc
and
fldenv
ja
in
lahf
sub
pop
in
addb
movsl
int3
les
in
lods
jne
adc
imul
cmpsl
push
mulb
sbb
scas
in
insl
stos
xchg
push
xchg
rcrb
cmp
sbb
movsb
pop
jg
loopne
repz
repz
inc
negb
adc
adc
push
and
fsqrt
xchg
sbb
mov
popl
jo
or
dec
add
jb
jo
dec
fcmovu
push
pop
insb
jle
mov
call
lcall
imul
dec
xchg
es
repz
inc
or
and
ss
push
push
imul
lds
xchg
push
out
dec
fwait
negb
and
or
xor
test
loopne
insb
jmp
push
sahf
sub
mov
nop
sub
cs
repz
insl
bound
insb
ja
pop
adc
mov
in
mov
movsb
or
jge
adc
cs
imul
sbb
dec
les
mov
mov
mov
bound
shrb
jb
cltd
clc
rcr
scas
orb
xchg
andl
inc
arpl
outsb
sbbb
std
push
shlb
dec
enter
sbb
pop
pushf
and
push
sbbl
shll
repz
inc
cld
mov
mov
ret
push
mov
fs
sub
xor
push
cld
idivb
daa
out
mov
lds
xchg
jno
enter
xchg
test
leave
out
es
mov
xchg
adc
mov
and
ret
sub
les
dec
insb
cld
test
out
fwait
bnd
mov
outsb
stos
jmp
and
icebp
mov
and
rol
inc
sti
inc
xor
aad
test
loopne
xchg
cmp
aas
mov
push
jge
xlat
or
or
test
adc
sbb
std
mov
out
ljmp
mov
sti
aas
call
jno
imul
lret
rorb
cmpsl
imul
sub
lods
mov
outsb
pop
push
inc
mov
pop
call
iret
and
mov
bound
shlb
paddsb
and
out
out
xchg
push
adc
icebp
fs
jp
xor
mov
dec
sbb
insl
mov
mov
sbb
xlat
mov
xor
into
jmp
jcxz
mov
xor
mov
cltd
sarb
push
mov
cmc
push
mov
dec
fcmovnbe
cmp
outsl
into
push
fmuls
xchg
cs
aas
insb
sbb
cmp
mov
outsl
mov
dec
bound
pop
mov
xor
push
cs
movsl
loop
fimuls
xchg
mov
or
dec
jbe
fisubrl
ret
cmp
outsb
push
xchg
xchg
sub
dec
xor
andb
mov
dec
xor
lcall
bound
call
jne
outsb
pop
test
dec
push
popl
filds
movsl
xor
sub
in
add
adcb
or
and
xor
pop
les
fldl
in
lret
fmul
push
adc
fcomi
lret
out
test
int3
or
sub
xchg
pop
pop
gs
mov
pushl
adc
or
flds
inc
cmp
jnp
sbb
xchg
out
das
aaa
cmp
hlt
inc
xchg
and
mov
inc
mov
push
shl
repnz
or
daa
sti
inc
xchg
ffree
or
aaa
bnd
and
mov
cmpl
dec
loope
or
jae
xchg
xchg
stos
popf
cli
popl
les
mov
mov
cld
int
pushf
insb
clc
dec
jecxz
mov
add
adc
imul
cmp
inc
xor
mov
mov
push
fs
pop
sbbl
pop
shlb
test
outsb
enter
dec
stos
jp
daa
mov
add
push
adc
loope
fidivrl
sub
fcoms
sbb
ror
shl
filds
sahf
cmpsl
jo
ficoml
jne
insl
cmp
and
xor
pop
data16
or
mov
inc
movb
inc
and
rclb
cmpsl
or
shll
xor
imul
je
xor
shl
xchg
mov
inc
jne
dec
or
or
sbb
push
jl
outsb
idiv
sub
push
push
mov
mov
insl
out
mov
inc
jnp
movl
sbb
lahf
imul
add
cmp
push
push
xchg
int
mov
sub
inc
push
xchg
mov
jae
sub
sub
pop
sub
push
aaa
mov
rcll
movsl
push
arpl
imulb
out
sbb
or
hlt
inc
setle
sbb
fs
mov
movsb
mov
xlat
add
xchg
sub
mov
hlt
xor
test
cli
sub
subb
or
scas
repnz
fadds
add
adc
jecxz
addr16
xchg
adc
mov
xchg
sbb
push
or
push
outsl
ds
xlat
cmp
fnstenv
fwait
inc
out
jb
or
mov
adcl
inc
pop
dec
inc
pop
lcall
into
movsl
adc
push
cmp
pushf
bound
pop
int3
daa
lahf
ror
clc
xchg
mov
stos
jge
adc
mov
aaa
imul
and
mov
sub
cmp
jb
ret
fsubrl
sbb
and
rol
adc
dec
pushf
mov
ss
pop
xchg
adcb
ret
jae
push
jns
repz
dec
mov
mov
dec
mov
push
in
jge
sbb
inc
pop
push
ljmp
xor
aad
lret
adc
pop
imul
adc
in
push
out
jo
xchg
push
dec
jl
leave
pop
test
add
iret
in
nop
xor
arpl
cli
outsb
jno
adc
and
lret
mov
pop
xor
pop
xchg
lods
xor
dec
insb
lods
fiaddl
push
sub
incl
pop
rcrb
je
mov
insb
subb
fbld
in
pop
jne
push
scas
mov
add
fidivrl
loop
imul
sti
popl
lcall
pop
jnp
popf
push
cld
inc
cs
adc
out
and
shll
sub
lods
or
lds
out
data16
sub
repz
sbb
adc
mov
push
pop
das
pop
cmp
in
cmpsb
xor
push
adc
or
adc
hlt
mov
rcll
pusha
stc
pop
outsb
cli
outsl
lods
pop
mov
mov
sbb
push
in
cmc
and
push
stos
lods
add
sbb
jne
movsl
xor
mov
sbb
leave
mov
xor
lock
mov
adc
icebp
fdivrp
mov
pop
ljmp
sub
push
xchg
flds
mov
jns
dec
jmp
lcall
pop
outsl
push
and
fdiv
jge
pushf
mov
stos
mov
sub
cltd
shrl
sbb
adc
out
jae
pop
and
or
pop
lods
js,pn
and
mov
lahf
lea
testl
jae
sub
jae
inc
xor
xor
ror
mov
pop
daa
jns
fcoml
jmp
insb
jecxz
ja
xor
xchg
and
mov
out
sub
sub
adc
sbb
das
ja
sub
pop
xlat
cmp
mov
jbe
int
popa
test
xor
jg
lcall
les
inc
cmpl
cmp
fldt
cmp
xchg
mov
les
je
add
sub
lods
fwait
jno
std
enter
sbb
call
sbb
stos
fwait
leave
pushf
fsubrs
mov
sub
daa
pxor
mov
mov
inc
addb
stc
dec
push
pop
pop
mov
inc
cltd
sbbl
push
pop
add
std
xchg
cli
xchg
xor
test
push
divb
sbb
sbb
js
xor
sub
inc
xchg
cs
lds
lret
or
xor
incb
imul
rcrl
arpl
nop
outsl
mov
stos
imul
inc
dec
cwtl
xor
mov
test
addr16
out
data16
mov
mov
xor
fidivrs
mov
cmp
nop
and
cmp
int3
dec
xchg
adc
rclb
repnz
cs
push
pop
rclb
or
fldt
in
rcrb
enter
jno
push
insb
inc
jmp
or
sub
stos
std
out
mov
xchg
push
xchg
stos
mov
lret
test
sbb
or
loopne
cli
pop
push
inc
cs
inc
jb
ds
mov
shl
iret
je
hlt
shrl
call
subl
cmp
stos
test
or
or
les
data16
das
push
pop
or
loope
inc
int3
sub
out
pop
push
in
sub
test
adc
inc
xchg
push
jbe
jg
jbe
sbb
imul
ljmp
xor
inc
and
fwait
js
rclb
xor
dec
push
outsl
and
mov
in
push
iret
or
jo
shll
mov
inc
je
mov
data16
cmp
jne,pn
sbb
aas
aad
outsl
push
mov
ljmp
sub
and
add
ret
mov
into
cwtl
popf
inc
pop
mov
sub
ds
scas
test
in
xor
xchg
dec
ja
gs
imul
mov
scas
ljmp
lcall
xor
movsl
pop
scas
inc
push
mov
test
jb
xor
jmp
fnstcw
pop
cltd
das
mov
cmp
movsl
sub
roll
addl
lret
sub
lret
mov
arpl
out
loope
xchg
gs
xor
loop
imul
repnz
lds
sbb
sub
lret
in
scas
test
loop
or
in
add
fisubrl
les
mov
sbb
adc
add
cli
sbb
outsb
popa
xor
push
lds
jle
call
sarl
or
jmp
mov
push
fists
cmp
hlt
in
in
out
sbb
rcrb
xchg
iret
and
and
jl
out
push
mov
push
inc
lock
dec
adc
fsubl
cmp
or
int
stc
pushf
mov
out
sbb
cwtl
or
xchg
cmp
jno
pop
xor
push
inc
pop
popf
es
js
dec
cltd
das
cmp
sub
mov
adc
lret
xor
ror
dec
adc
pop
push
jecxz
inc
pusha
push
dec
jecxz
clc
push
cmpsl
in
mov
push
dec
jb
mov
lahf
pop
jp
repz
lcall
xor
bound
ret
inc
sub
dec
int3
imul
sbb
sti
stos
mov
lcall
push
xchg
insb
add
lcall
mov
mov
sub
inc
add
dec
xchg
addr16
sub
push
sbb
bound
das
pop
mov
lds
xor
cmpsl
in
cltd
sub
in
or
and
dec
mov
out
jno
push
sub
push
pop
mov
mov
or
mov
push
mov
jge
fst
stc
repnz
sbb
dec
lods
imul
pop
or
pop
cmp
mov
shlb
mov
and
mov
test
cmp
inc
push
xchg
lcall
sub
lret
int3
sbbb
mov
push
xor
ljmp
pushf
dec
dec
out
popf
mov
cmp
out
mov
and
or
xchg
test
fildl
mov
cmp
xor
addb
inc
or
push
pop
sub
cli
xchg
dec
sub
rcr
jmp
mov
iret
xlat
push
xchg
cwtl
dec
add
mul
rcr
sub
and
mov
jns
xchg
mov
or
es
sub
cmpsb
push
clc
sarb
mov
and
push
cld
xchg
cmc
mov
cld
dec
mov
lds
ljmp
add
lods
jg
out
subl
sarl
jecxz
xchg
stos
pop
sar
fildll
jge
cmpsb
adc
push
xor
cs
into
jp
ret
pop
out
popf
lcall
sbbb
sar
add
sub
pushf
or
rclb
xlat
fcmovne
cmp
mov
lahf
lods
or
stos
shll
and
fs
lock
insb
pop
mov
daa
movl
ret
dec
imull
out
fisttpl
pop
lods
repz
loope
fucomi
dec
mov
mov
xchg
ljmp
push
sub
dec
ror
aas
and
sub
fwait
sub
fwait
jp
lcall
mov
mov
int3
lcall
jl
mov
in
fdivr
ja
daa
cmp
mov
mov
jnp
jge
pop
std
xchg
pop
rcr
shrb
mov
lock
rcr
cmp
dec
sub
push
aam
push
push
sbb
add
fwait
int3
xchg
dec
test
les
adc
rcrb
adc
lret
leave
push
dec
sbb
fs
push
xchg
rcll
xor
addb
ja
jmp
insl
xor
mov
pop
xlat
sbb
and
push
rep
sti
mov
push
sbb
in
stc
lods
stos
je
pop
add
cli
insl
mov
push
push
mov
jp
loopne,pt
or
jno
xor
ffree
push
xchg
outsl
cwtl
dec
lds
add
in
pop
aas
sub
mov
xor
mov
outsl
jg
movb
out
testl
pop
sub
mov
cs
imul
mov
movq
jmp
mov
test
sarb
dec
aad
stos
jecxz
sbb
and
arpl
lahf
xlat
addr16
push
inc
leave
push
dec
jmp
mov
dec
inc
and
cmp
dec
sub
lea
or
inc
imulb
mov
out
shll
sub
jae
out
xchg
add
xor
loopne
inc
and
addr16
mov
ret
int
mov
lea
lods
jns
js
mov
or
lods
sbb
sbb
fdivrl
inc
pop
mov
test
and
sbb
sbb
cwtl
out
ret
aas
xchg
ret
sbb
dec
and
cmp
jae
je
call
and
push
ja
push
test
mov
in
adc
andb
dec
or
and
mov
insl
shl
cld
test
shlb
sarb
pop
push
lea
fwait
mov
xor
sbbb
mov
inc
and
aad
and
mov
and
in
andl
es
movsl
js
push
stos
mov
adc
in
popf
jp
or
mov
stos
push
cwtl
xchg
movsb
out
and
int
xor
roll
xor
xchg
mov
iret
scas
or
inc
lahf
sub
lcall
mov
divl
ja
mov
sti
add
sti
leave
insl
jp
imul
mov
jmp
in
jecxz
push
and
cmpsb
mov
cmc
inc
pusha
adc
cmp
mov
les
dec
inc
aad
push
inc
mov
sub
push
mov
popa
xor
xor
sub
mov
mov
lock
test
popa
negl
sub
push
into
mov
fdiv
loopne
ficomps
jl
outsb
adc
test
test
adc
lods
mov
call
dec
pusha
rorl
inc
push
add
add
mov
hlt
scas
js
jne
iret
pushf
pop
out
ja
test
mov
lret
or
jp
jb
mov
test
lds
cmp
arpl
pop
cmp
iret
lock
inc
xchg
push
pusha
mov
movsb
inc
fiadds
das
sub
neg
mov
lret
pop
push
setg
mov
cs
jmp
js
loop
dec
fdivs
lods
jnp
mul
lock
mov
int
aam
loop
xchg
popf
enter
or
push
fcmovnbe
cmp
add
test
sbb
cmp
or
outsb
or
mov
xlat
pop
stos
pop
sub
push
data16
xor
add
leave
add
pop
scas
mov
or
push
inc
lods
seta
mov
mov
jbe
mov
or
repnz
sti
int3
mov
pop
insb
outsb
pop
mov
lock
sbb
test
popf
xor
leave
inc
pop
add
or
jecxz
rol
fst
dec
pusha
cwtl
imul
lods
loopne
mov
insw
mov
jno
loope
add
add
pop
es
subps
xor
cltd
push
loop
add
pop
mov
pop
out
fisubrs
push
sub
xchg
arpl
bound
dec
pop
fnop
push
rcrb
das
clc
or
dec
jle
pusha
adcl
and
xor
lret
js
pop
daa
adc
jbe
outsl
mov
cmp
fiadds
insb
pusha
push
mov
mov
mov
cmp
and
dec
jmp
push
outsl
jb
push
push
or
adc
loope
push
das
xchg
lock
cmp
test
rclb
jno
bound
push
push
add
dec
fiadds
popf
stos
push
dec
and
or
out
je
mov
int
pop
lods
mov
into
dec
js
mov
loop
mov
jp
inc
popa
outsl
negb
cs
jo
lock
cmp
popf
loopne
mov
in
dec
lock
lods
push
movsl
rcll
lret
inc
pop
jnp
clc
les
adc
scas
pop
int
add
rol
outsb
inc
lea
mov
push
test
out
adc
cmpsb
pushf
xor
push
push
adcb
fucomi
jge
ds
pusha
dec
mov
sahf
pop
js
push
je
or
inc
ljmp
fisubl
adc
mov
cmp
shll
xchg
ja
inc
sahf
aas
adc
outsb
pop
sbb
mov
fidivs
movsl
in
cmp
cmpsl
mov
or
testb
mov
cli
or
sbb
lret
sti
sbb
jl
xchg
add
adc
xchg
push
addr16
push
jecxz
icebp
clc
xor
out
aaa
fistpl
adc
pop
mov
ss
mov
jg
mov
fcompl
fsubs
mov
aam
adcl
pop
mov
sub
add
insb
inc
out
mov
sub
push
icebp
and
jb
cmp
outsl
dec
sahf
pop
xor
jecxz
fidivrl
ret
cmp
sub
call
insb
jns
push
sahf
mov
int3
sub
add
dec
add
andl
mov
mov
and
fistpll
lahf
xchg
cmp
push
int3
adc
sbb
hlt
lcall
in
push
ja
leave
pusha
test
cmpsl
stc
stos
test
mov
jnp
rcl
jbe
add
lea
sahf
shl
leave
movsbl
stc
enter
in
xlat
iret
outsb
pop
pop
cli
dec
pusha
mov
adc
jnp
fldcw
cltd
adc
jmp
out
pop
inc
nop
les
pop
out
fldl
adc
push
sub
not
cli
stos
int3
ss
cltd
ds
fcomi
or
xlat
shl
cmp
inc
adc
add
jp
dec
sbb
inc
negl
outsb
outsb
pop
int
lds
mov
pop
ret
notl
out
enter
loopne
clc
sbb
mov
mov
aaa
inc
leave
in
sti
aam
leave
outsl
pop
out
ss
xchg
cld
aas
pminsw
ror
ljmp
cmpsb
sbbb
jge
jle
pushf
cmc
cmp
adc
xchg
xor
out
xchg
fildl
mov
push
fisubrs
icebp
bound
leave
push
fsubrs
bound
pusha
cmp
jg
test
xor
jne
dec
push
push
pop
mov
xchg
xchg
in
sti
mov
xchg
fs
call
setno
push
pop
jmp
xor
andb
cmc
jne
jmp
cwtl
out
dec
addr16
jnp
sub
rclb
xchg
and
sub
xchg
call
out
mov
pop
xchg
mov
xor
lret
cwtl
mov
je
lret
pop
in
fldenv
das
bound
adc
pop
or
stos
push
push
cmp
into
pop
xor
sbb
imull
adc
rcl
lds
add
shl
adc
rclb
fldenv
mov
fs
lods
jbe
push
adc
in
push
cmc
push
push
jecxz
cmp
mov
sarb
adc
sbb
in
inc
xchg
xchg
jge
bound
fdivl
repz
out
push
js
mov
sub
test
adc
ret
loop
cld
fwait
pop
or
aas
pushf
mov
or
fcoml
leave
mov
cld
xor
testb
adc
cmp
divb
adc
cmpb
xor
jge
pop
and
sub
ret
xchg
scas
aas
and
mov
lds
adc
mov
ja
imul
jg
jl,pt
cmp
ljmp
push
gs
inc
ficoml
pop
sub
add
sub
stos
mov
popa
repnz
sbbb
fildll
mov
lret
imul
cld
test
addb
xchg
js
roll
mov
pop
repz
cmp
or
aam
push
cmp
lds
pop
jg
mov
out
out
mov
lret
push
sbbl
fadd
dec
cmp
xchg
pop
and
pop
dec
and
push
add
cmc
stos
in
mov
mov
les
pop
pop
add
jp
and
pop
scas
std
cli
jno
jne
rcrl
mov
mov
repz
push
int
xor
mov
xchg
xor
dec
rcr
dec
sbb
mov
sub
into
mov
fcmovb
and
mov
xchg
inc
mov
xchg
call
dec
pop
andb
lret
clc
nop
lds
psubb
test
mov
sub
leave
lea
cmp
xor
or
repnz
stos
das
jmp
movsl
and
das
stos
and
ror
imul
frstor
mov
lahf
xlat
and
mov
shll
aad
stos
sbb
lret
ds
in
shlb
jae
mov
gs
gs
inc
push
leave
mov
push
jns
fldl
inc
mov
fcompl
pop
ss
mov
mov
mov
and
xchg
lods
xchg
aas
test
add
push
cmpsb
add
pop
hlt
mov
jmp
pushf
stos
mov
cmp
and
xlat
mov
in
dec
outsl
inc
cmpsb
test
mov
into
mov
lret
punpckhwd
shl
stc
shrl
mov
imul
add
adc
cli
test
inc
fldenv
and
hlt
mov
or
out
in
add
cmc
mov
fcmovu
and
lds
rorb
leave
pop
dec
mov
mov
push
push
adc
xchg
mov
insl
repz
sbb
sbb
inc
ret
jp
shll
push
enter
insl
sub
es
add
aad
jg
in
aad
je
jl
adc
mov
das
add
stc
xchg
pop
aam
addr16
sub
ja
pop
adc
fldcw
xchg
bound
mov
lods
jmp
loope
in
push
fnstenv
fcoms
cmp
mov
fcmovne
jl
icebp
and
scas
cwtl
jmp
daa
push
rorb
fs
stc
sub
push
fistpll
xchg
push
negb
push
or
stos
loop
adc
and
dec
shll
les
mov
sub
jnp
dec
daa
ret
xchg
mov
mov
add
std
cmp
call
xchg
xchg
mov
pushf
cmpsb
rorb
jno
xor
inc
mov
mov
lahf
sahf
cmpl
pop
or
sbb
adc
sar
in
mov
mov
adc
sti
xchg
movb
es
pop
mov
arpl
stc
mov
jno
and
ja
or
sub
xor
popa
sub
mov
or
shll
fsub
frstpm(287
pop
mov
test
xorl
push
push
stos
enter
sbb
xchg
mov
and
dec
ret
and
repz
adc
movb
mov
jae
mov
dec
in
inc
pop
jmp
adc
ficoml
ret
cwtl
mov
fstpl
aas
das
lcall
push
lods
fadds
push
enter
std
push
adc
push
movsb
out
lahf
gs
adc
sbb
mov
pop
out
cltd
std
push
xchg
popa
and
repnz
in
pop
sub
jae
cld
mov
inc
add
mov
inc
adc
sbb
out
sub
or
gs
mov
or
and
cmp
aas
xorb
hlt
or
fprem1
push
pop
xchg
insb
rorb
fcmovnbe
ss
adc
mov
imul
push
divps
inc
jmp
fmuls
lds
das
test
xor
cwtl
pushf
clc
fldt
sbb
leave
sahf
and
xor
gs
pop
out
push
scas
mov
mov
or
fimull
jmp
pop
popf
dec
xchg
pop
jge
sub
push
iret
movsb
jbe
inc
push
ljmp
inc
push
push
and
fcoml
push
push
push
add
add
push
push
lds
xlat
negb
pop
dec
mov
xor
jge
test
pushf
inc
test
xor
and
aaa
call
cs
push
sub
popa
addr16
fistpll
push
mov
jno
xchg
out
dec
mov
adc
adc
in
or
push
pop
mov
cmpsb
insb
jno
and
out
popa
xor
sub
stc
cli
jbe
xorl
mov
xchg
pop
daa
ja
addr16
repz
std
mov
mov
into
adc
pop
push
mov
cltd
pop
jnp
jnp
js
adc
sahf
sbb
in
in
fisubrs
inc
es
xchg
pop
cltd
sub
adc
push
push
enter
dec
leave
mov
add
lock
ds
sub
sbb
lret
jecxz
mov
cltd
xchg
decb
pop
push
mov
fsubp
repnz
pop
mov
push
adc
or
popf
sub
aad
mov
mov
mov
cli
mov
mov
fbld
aaa
enter
inc
lcall
push
or
std
rcl
mov
or
mov
cmp
fwait
mov
stos
adc
pop
push
cmc
add
inc
cmp
cmp
sbb
test
add
xchg
insb
inc
push
pop
or
pop
pop
outsb
dec
mov
fwait
pop
sbbb
inc
pop
mov
pop
sbb
enter
and
and
ret
add
sarl
ret
inc
lahf
lahf
pop
sub
les
jl
adcl
jmp
bound
outsl
xor
xchg
adc
out
popf
xor
adcl
loope
mov
cld
sti
and
jge
jae
fsubl
inc
sub
add
xor
and
bound
gs
jbe
cmp
sub
mov
ss
xchg
xor
pop
and
pop
xor
jns
fnstcw
sarb
outsl
adc
dec
lods
mov
repz
movsb
cmp
dec
adcb
dec
jns
and
out
jmp
into
in
out
dec
inc
jae
lret
das
icebp
jmp
out
shlb
outsl
lret
push
insl
xor
ror
mov
in
lcall
aam
cmp
adc
fs
add
ficoml
sbb
cmpsl
testl
call
jp
rorb
pop
sub
fildll
addr16
xchg
sbb
dec
inc
sbb
sbb
or
adc
imul
nop
ljmp
mov
sub
adc
divl
jecxz
into
sub
push
imul
jl
push
mov
dec
dec
ret
jge
xor
in
jmp
inc
or
cmpsb
xchg
jp
jle
cs
scas
scas
mov
hlt
aas
adc
pushf
scas
mov
test
xor
sbb
push
leave
insl
cwtl
in
mov
hlt
mov
adc
xchg
xchg
mov
test
and
in
jmp
hlt
out
jg
shll
je
data16
nop
in
sbb
loopne
scas
jecxz
xchg
jns
pop
or
fisubrs
das
sub
jo
add
or
add
arpl
pop
mov
sub
fistpl
lods
sahf
ret
or
push
mov
push
cld
sub
fcmovnb
push
jns
daa
rclb
faddl
movsl
add
mov
inc
popf
lahf
outsb
not
int
stos
push
mov
jge
or
mov
push
fsubl
pop
fisubrl
mov
push
std
test
adc
dec
mov
shrb
shll
into
jp
mov
xor
pop
sarb
inc
xorl
fwait
push
fcmovb
mov
rolb
dec
mov
jmp
push
shlb
or
stos
sub
pop
and
xor
sbb
lahf
sub
jns
xorl
scas
dec
inc
idiv
scas
and
jne
cmp
daa
mov
stos
out
or
jnp
out
pushf
aam
pusha
in
pop
cmpsb
repz
scas
cmpsb
inc
roll
jmp
xchg
cmp
sub
lret
jne
cwtl
sub
inc
dec
add
push
xor
pop
scas
fisubrl
adc
loope
cs
lods
pusha
cwtl
movsl
and
in
movsl
lods
pop
ds
stc
mov
cld
xor
orb
xor
adc
lcall
dec
mov
push
mov
aaa
mov
and
or
jg
js
movsl
push
push
jmp
mov
sbb
push
in
jmp
lds
insl
and
jb
mov
popa
sbb
enter
push
jae
stc
loop
cli
push
rol
imul
jo
jne
movb
sbbl
loopne
loope
jo
insl
jno
and
mov
mov
lret
jb
jae
xor
pop
cmp
arpl
xor
xchg
mov
loope
fs
mov
popa
xorl
push
sti
pop
adc
sub
aad
cld
mov
movsb
sahf
and
addl
adc
ret
in
push
aam
fnsave
loope
mov
jb
pop
lock
sbb
push
pop
jge
pop
ret
xchg
xor
jns
test
adc
lds
fbld
xchg
stos
mov
lds
mov
cmpsb
jae
inc
lods
daa
mov
shlb
sbb
pop
fwait
rorb
bound
fsubr
ja
fisubs
dec
sbb
fidivrl
out
jmp
iret
pop
xor
mov
lock
cmp
jl
outsl
ret
neg
sub
pop
mov
cmp
mov
xor
int
repnz
mull
jbe
cmp
xlat
testb
push
push
dec
pop
rcrb
testb
inc
rorb
shr
in
pop
or
xchg
adc
rolb
lahf
arpl
in
scas
sub
std
cmp
shl
mov
add
ficoms
jb
adc
jns
lock
pop
sub
in
inc
cmp
out
xchg
stc
jmp
jle
or
xchg
js
cmp
sbb
ret
mov
or
fsubs
aas
js
xor
add
mov
adc
ret
int3
clc
push
add
dec
dec
mov
dec
lret
pop
notb
inc
icebp
fwait
leave
lods
mov
iret
scas
bound
ds
mov
lock
cmp
sbb
les
jne
fs
mov
hlt
adc
fdivrs
icebp
jg
add
daa
iret
icebp
push
pop
flds
repz
inc
frstor
xor
ficoms
testl
aam
adc
pop
xor
inc
out
lods
or
daa
push
fst
or
test
xor
sub
ljmp
xchg
jle
cmp
popa
ret
add
clc
push
cmp
je
scas
xlat
test
cmp
int3
mov
insb
jecxz
or
sbbb
mov
inc
es
push
fmul
loop
scas
and
jmp
insl
aad
jge
sar
ds
or
dec
fdiv
in
cltd
sub
or
jb
dec
fistpll
jp
in
dec
mov
sub
lret
inc
cli
mov
test
std
ret
lds
nopl
mov
rolb
mov
jmp
jae
and
sar
xchg
mov
and
in
xchg
scas
mov
out
popa
push
cld
pop
dec
lods
add
jae
das
mov
xor
mov
out
lcall
sub
adc
fwait
cmc
pushf
aas
pop
mov
cmpsl
sub
loope
es
ds
inc
nop
aas
sub
loopne
inc
icebp
xor
aas
add
lds
ret
ficoml
mov
dec
cmp
sbb
lea
aad
hlt
jnp
cmp
adc
push
mov
mov
dec
call
cs
xchg
xchg
lcall
adc
jnp
in
mov
dec
mov
in
inc
stc
push
xchg
jnp
ret
out
jecxz
data16
pop
adc
loope
fcomip
idivl
jg
jne
fistl
popa
scas
and
xchg
std
lods
rcrb
mov
out
mov
cmp
mov
das
jbe
jbe
cmc
pop
pop
inc
mov
ret
fdivs
leave
xorl
sbb
icebp
data16
mov
mov
cld
sbb
inc
lods
je
jmp
aam
stc
xchg
mov
mov
insl
inc
cmpsb
stos
pushf
andb
mov
ja
xor
popf
loop
or
sbb
cmp
in
lds
out
mov
xchg
scas
mov
lods
pushf
inc
test
mov
insl
mov
jne
adc
lds
xlat
shlb
mov
mov
cmp
cs
sbb
addr16
aas
xorl
sahf
cmp
jnp
lahf
xchg
in
andb
sub
mov
jno
fcomps
mov
stos
cltd
pop
cmpb
push
mov
xor
mov
int3
test
div
jg
jecxz
pop
push
push
add
pop
jl
xchg
xor
push
push
pop
dec
push
or
insl
sub
add
fsubrs
push
adc
xlat
sbb
mov
movsl
cltd
out
aam
cmc
sti
xchg
icebp
adc
testb
mov
adc
iret
cli
in
icebp
jnp
xchg
mov
fwait
sub
add
mov
stos
or
push
and
scas
mov
add
popa
in
paddusw
mov
pop
jbe
add
push
aad
outsb
dec
mov
js
xor
cwtl
inc
stc
rcr
loope
ljmp
les
push
xchg
mov
jg
adc
sbb
stc
cmp
jns
es
mov
add
xor
lea
cmp
cmp
cmpb
pop
mov
imul
es
pop
pop
ucomiss
hlt
testl
inc
insb
into
inc
scas
lods
mov
fsts
test
cli
js
dec
hlt
lcall
sti
sar
decl
pusha
jg
jge
jns
daa
repz
pop
sbbb
push
lret
mov
scas
push
sbb
insl
iret
adc
or
cmpsb
fisubrs
movsb
pop
cmp
cmpb
mov
cmp
mov
ret
fdivl
mov
mov
dec
xchg
cmp
stos
mov
and
call
imul
out
sub
lea
mov
imul
je
sbb
pop
enter
je
sti
stos
pop
shlb
mov
pop
daa
jle
sbb
shrl
and
mov
jne
rorb
pop
int
sbb
imul
sub
call
sbb
repz
loop
dec
into
mov
cmp
dec
lret
pop
cmpsl
cmpsb
leave
jmp
out
dec
jl
add
scas
jl
xchg
jne
mov
jae
cs
pop
inc
fcomps
negb
call
repz
lret
pand
adc
xchg
mov
fsubrl
cli
js
mov
ja
lods
sahf
sub
test
push
dec
add
pushf
xor
mov
lds
dec
call
fcmovu
jmp
pop
into
decb
push
mov
xchg
test
jge
push
xor
rclb
test
divl
das
xchg
iret
out
insb
jle
dec
dec
cmp
cmc
bnd
jmp
cmpsb
bound
ds
imul
mov
cmpsl
je
pop
icebp
dec
fmull
test
push
xlat
ret
lds
pop
jg
mov
cmp
xor
mov
and
popfw
mov
cmp
popa
mov
xchg
dec
sbbb
scas
mov
ljmp
into
into
js
inc
pop
std
mov
push
adc
pop
rep
jle
shrb
fisubl
rcrb
cmp
mov
pop
mul
clc
inc
nop
movsb
cmpsb
push
mov
add
je
inc
push
pop
xchg
scas
xchg
insb
cmp
dec
xchg
cwtl
push
adc
popa
push
jmp
outsl
nop
xchg
dec
mov
bnd
leave
clc
adcb
lahf
es
aaa
adc
push
add
or
cmp
dec
xchg
lods
jnp
ds
xor
pop
push
jg
ja
fnstsw
inc
and
in
mov
add
add
push
loopne
call
jne
divb
addl
push
push
pop
dec
xor
dec
mov
je
out
fs
xchg
pop
push
les
and
and
xor
inc
lea
sub
fnsave
mov
xchg
jo
loope
sarb
mov
mov
fistpll
dec
out
dec
cmp
cmpsl
int
aam
cmpsb
mov
jp
push
xchg
std
lock
es
fimuls
mov
sbb
mov
cmp
bound
loope
xchg
add
mov
jecxz
add
xlat
jmp
mov
or
and
pop
jnp
les
popf
insb
jo
frstor
mov
ficomps
jmp
rolb
or
sti
addl
add
sbb
ret
mov
jno
mov
sub
repnz
lret
sub
mov
jne
mov
sub
fisttps
mov
dec
dec
pop
xchg
inc
sahf
mov
inc
or
outsb
and
ja
insl
mov
cmpsl
and
aad
adc
sti
or
les
pop
add
mov
lods
sbb
int3
cwtl
stos
testl
imul
xchg
rorb
pushf
and
xchg
sub
jo
cmpsb
push
fsts
in
sub
movsl
imul
sbb
sub
adc
loope
cmp
cmp
cltd
test
pop
xor
shlb
and
mov
daa
and
mov
data16
and
loop
cli
or
daa
pop
out
inc
sub
push
imul
sbb
dec
pop
xor
pop
xchg
push
lcall
jle
xor
mov
int
xor
mov
into
mov
aad
xchg
pop
in
in
mov
in
mov
pop
mov
xor
xchg
not
arpl
push
rcrb
mov
cmp
ret
fsubrl
jmp
enter
push
aam
sub
scas
jns
mov
stos
ja
dec
adc
mov
lods
or
cmp
lcall
or
adc
push
out
mov
mov
shll
jno
mov
out
push
xor
fsubrl
int
mov
mov
jecxz
pop
test
pop
jecxz
sub
ss
and
xor
add
dec
in
imul
and
adc
lret
xor
dec
cmpsl
lock
int3
cmp
shrb
popa
jbe
sahf
mov
enter
jno
mov
add
mov
ret
mov
fldpi
cmpsb
xor
icebp
push
jmp
fistpl
inc
sub
lret
mov
cmpsl
mov
jl
insl
sub
or
test
iret
aad
and
dec
fimull
mov
mov
pop
sub
cld
lods
xor
daa
and
lea
and
ljmp
iret
push
aaa
mov
or
push
fs
cmp
mov
push
adc
or
scas
stos
xchg
imul
xchg
inc
mov
mov
pop
mov
int
fnstcw
or
pop
inc
inc
dec
cmp
negb
sbb
dec
aaa
sbb
sbb
imull
loopne
stos
je
dec
mov
pop
mov
add
lcall
jge
jl
sbb
push
push
out
cmp
sub
jb
add
sub
jecxz
ja
hlt
enter
jecxz
lret
fxch
adc
shlb
bound
lds
mov
sarl
xor
cmp
xchg
sub
push
cltd
call
cs
jmp
dec
faddl
mov
aas
call
sub
sub
in
pop
and
loope
stos
imul
mov
sbb
in
ret
movsl
cmp
cmpsl
cmpsl
fisttpl
icebp
call
psubb
fwait
out
aam
idivl
mov
lock
sub
inc
rolb
insb
mov
int3
imul
aam
out
jno
xchg
fmull
jle
ljmp
dec
sbb
out
mov
fucomp
xor
xchg
jne
dec
mov
insl
pop
lds
xor
xor
daa
push
push
jae
push
dec
cmc
xchg
mov
call
aad
or
lods
cmp
ret
xor
mov
pop
fdivr
mov
jecxz
push
jae
sub
pop
ret
aam
iret
sbb
mov
dec
pop
mov
mov
mov
test
movsb
add
hlt
ds
inc
add
ret
repz
sbb
cmp
and
pusha
xchg
enter
mov
fs
mov
cmp
int3
or
icebp
jb
lret
inc
lock
and
stos
sbb
mov
fldenv
jle
dec
pop
push
push
sub
sbb
call
xchg
divl
adc
mov
imul
lret
push
inc
mov
mov
es
xchg
sbb
inc
adc
adc
xchg
cmp
mov
or
add
movl
lock
sub
xor
adc
jmp
frstor
pusha
fldcw
outsl
rorl
lcall
loop
scas
sub
jnp
sbb
aam
aam
add
addr16
lods
int
roll
cmp
or
mov
loope
xchg
lret
orl
xor
ljmp
jns
js
inc
pop
xchg
bnd
jb
cmpb
aam
pop
movsl
lcall
fwait
dec
outsb
xchg
ds
xchg
mov
adc
pop
inc
jns
icebp
fldcw
and
xchg
dec
xchg
aad
ljmp
popf
in
jns
popl
lds
adc
push
popa
dec
add
je
shrl
mov
sub
xchg
pushl
loope
inc
pop
jo
out
push
cs
sahf
pop
repnz
mov
xchg
movlps
inc
mov
push
test
dec
and
jl
in
cmp
ret
mov
cmp
clc
or
jmp
negl
lret
pop
jecxz
jecxz
pop
mov
inc
je
jmp
pop
xor
out
dec
bound
mul
sub
add
call
push
mov
gs
xchg
pop
jge
cmp
gs
xor
mov
jmp
pop
push
and
test
ds
inc
movsb
int3
sbb
fimuls
sub
xlat
pop
push
in
mov
inc
lret
mov
in
jecxz
push
mov
dec
jnp
rorb
add
iret
pop
inc
data16
mulb
mov
popf
into
int
adc
imul
lock
outsl
add
sub
gs
or
pop
mov
push
mov
out
in
arpl
mov
fnstsw
xlat
js
and
mov
add
lcall
pop
push
in
adc
in
rcl
in
gs
mov
add
pop
xlat
rcl
lock
shr
dec
dec
cmp
fs
lods
inc
subl
clc
pop
ss
test
outsl
rorb
add
cmpsl
jg
je
push
daa
popf
repz
sub
aaa
pop
ficomps
std
xchg
xchg
xchg
lcall
sub
adc
add
fists
and
dec
ret
pop
sbb
fldt
lahf
push
int3
and
adc
jmp
leave
roll
xchg
jp
cltd
stos
dec
mov
xchg
push
imul
xor
scas
lea
cmp
stos
pop
xchg
int
and
or
cmpsl
rolb
scas
sub
outsl
jl
popf
xchg
lcall
call
or
xchg
mov
aad
test
dec
js
les
dec
adc
add
and
lret
orl
xchg
adc
nop
sbb
call
dec
adc
pop
lcall
fdivrl
xor
stc
addr16
cltd
mov
cmc
inc
cmp
push
fiaddl
xor
cmp
xlat
sahf
pop
jo
xor
fld
rorl
pop
sub
inc
lret
js
mov
jnp
cmp
push
iret
jp
pop
insl
mov
mov
mov
scas
jo
add
data16
sub
push
sbb
loop
fwait
or
or
std
push
cli
cmp
pop
push
cli
lds
rorl
or
cltd
add
push
xlat
and
pop
je
in
aad
ss
xor
ror
xchg
xchg
insl
syscall
adc
aad
mov
stc
inc
fldenv
movq
iret
jle
mov
or
xlat
inc
xor
pop
jg
aad
out
inc
fs
out
jge
push
sahf
mov
mov
imul
fstp
mov
pop
push
xchg
add
loope
cld
jb
pop
and
movsb
or
dec
mov
fdivr
jge
sbb
sub
in
pushf
mov
call
insl
inc
lds
ficompl
imul
jne
cwtl
fwait
movsl
mov
fildll
or
jp
xchg
insl
cwtl
mov
out
xchg
add
ja
jns
push
mov
jbe
inc
fildl
out
out
cmp
fisttps
in
mov
xchg
mov
call
pusha
popa
push
fidivs
mov
mov
stos
clc
bound
imul
ss
push
push
push
xchg
mov
mov
fs
add
lret
adc
and
les
dec
push
addb
jo
shll
loop
inc
jbe
cld
lret
lret
dec
mov
xchg
xlat
pop
in
inc
xor
fisubl
push
test
fs
rcrb
sbb
pop
insl
test
xlat
xor
fimuls
or
inc
ret
mov
roll
mov
adc
sbb
movl
inc
dec
xlat
hlt
cld
mov
mov
hlt
loope
cmp
insb
call
or
sub
add
add
test
aam
iret
test
xor
pop
ljmp
ja
dec
sub
sub
mov
pushf
jbe
fcompl
jmp
cli
jge
adc
inc
xor
cmp
scas
and
pop
les
jp
test
dec
shll
push
mov
adc
rcl
pop
adc
mov
jae
xchg
out
xchg
in
push
pop
scas
pop
mov
js
push
fiadds
add
in
movsl
outsl
std
fdivrl
pusha
scas
or
mov
push
lret
xchg
cli
aam
les
adcb
cmp
xor
fsubrp
aam
pop
stos
mov
rcrb
pop
adc
sub
pop
jg
mov
in
fwait
xchg
adc
and
jle
daa
add
push
call
sbb
pop
popf
addl
inc
cmc
inc
stos
sub
int
mov
lahf
outsl
cmp
push
lret
mov
pop
lods
xchg
inc
jge
cmp
loop
adc
nop
nop
xchg
inc
aas
cli
mov
out
xacquire
push
sub
je
and
push
les
xor
enter
inc
cmpsb
daa
das
add
inc
jb
pop
adc
dec
je
movsb
fistps
mov
inc
int3
lcall
clc
xor
mov
adc
pop
sub
mov
mov
lret
dec
clc
loopne
std
lods
sbb
jp
and
int
cs
pop
fstpl
cmp
aad
sarl
ret
lea
lahf
out
push
aaa
ret
pop
mov
pop
repz
data16
je
dec
cmp
negl
or
gs
mov
cmpsl
sbb
jne
daa
nop
pop
xchg
insl
jge
mov
popf
jg
push
orb
inc
sbb
sbb
call
aam
in
push
call
push
repz
rcl
jge
adc
adc
in
xor
aad
push
xchg
shrb
xlat
cmp
inc
aaa
cld
xchg
mov
dec
clc
mov
cmp
mov
mov
pusha
mov
inc
jl
decb
pop
push
repz
mov
lds
insb
jl
push
lock
push
aas
mov
mov
stos
aam
shrb
and
in
scas
adc
int
pop
loopne
punpckldq
and
mov
dec
pop
or
nop
test
add
inc
mov
data16
insl
scas
movsl
cld
sub
push
xchg
and
mov
mov
nop
jl
shlb
sbb
pushf
sub
scas
xchg
call
call
adcb
sti
addr16
pop
lcall
pop
pusha
xchg
add
subb
das
mov
iret
lcall
mov
mov
inc
fwait
imulb
loope
movsl
dec
lock
inc
xchg
or
mov
fwait
push
inc
mov
push
sti
lcall
inc
push
loope
int
lahf
inc
outsb
div
mov
cmpsl
inc
and
ret
mov
lahf
mov
test
adc
mov
xor
dec
stc
stc
adcl
jo
mov
orb
sub
pop
aaa
dec
sub
sub
cmc
dec
jne
je
shrl
out
xor
xor
pop
jns
fs
test
sti
jle
cmp
inc
fwait
pop
dec
into
outsl
xchg
testb
push
and
xchg
add
adc
pop
adc
ljmp
cmp
out
insb
fwait
arpl
inc
loope,pn
sub
aad
pop
adc
inc
dec
ds
int
pop
mov
fwait
mov
aaa
outsb
vmaxss
mov
sub
rolb
iret
and
adc
fcmovbe
cmc
shll
in
xchg
lret
mov
dec
insl
fwait
dec
push
jp
adc
xor
aad
cltd
xchg
loope
sub
je
jns
pop
xchg
je
fimuls
adc
fdivs
mov
mov
xchg
fists
test
rorb
xchg
aam
testl
stc
pop
fcoms
cmp
mov
aad
inc
push
pop
sub
out
daa
inc
sbb
push
mov
mov
repz
mov
fdivrl
fdivrl
sub
imul
cmpsl
cld
adc
mov
push
out
mov
rcl
inc
or
fs
mov
cmp
xor
mov
mov
adc
jo
out
mov
push
mov
lcall
pusha
out
pushf
imul
or
jne
cmpsb
mov
das
cwtl
fs
into
in
push
and
pusha
lods
jns
lret
int
lea
arpl
pop
les
hlt
cwtl
jns
sbb
or
lods
int3
xchg
xor
mov
shlb
inc
jmp
int3
add
movsl
js
or
std
mov
ja
fisttpl
jp
lcall
cmpb
jns
fs
cld
push
iret
fldl
dec
or
adc
das
mov
rorb
dec
in
out
push
dec
cmp
add
call
dec
ficompl
mov
push
in
add
repz
aas
in
sbb
rcll
push
jbe
lahf
dec
xchg
jbe
fcmovb
jl
mov
pop
fsubs
or
arpl
and
test
sbb
push
mov
test
in
out
push
inc
nop
or
jae
loope
xchg
ja
enter
cmp
xchg
insl
or
adc
xor
mov
sbb
fisttps
xchg
mov
aas
pop
insb
repz
aad
or
subl
mov
out
cmp
fwait
clc
mov
mov
mov
sahf
jbe
mov
push
xchg
mov
pop
pop
push
popa
pushf
mov
iret
sbbb
mov
xor
sub
xor
inc
mov
ss
xor
adc
and
mov
mov
orb
push
sti
and
sub
ds
push
mov
repnz
jnp
push
loop
jns
les
dec
cmp
mov
cltd
push
mov
arpl
std
pop
pop
xchg
xchg
movsb
in
push
dec
mov
fnstenv
xchg
or
push
mov
sahf
pop
dec
out
mov
rolb
sti
mov
sub
mov
and
pop
or
icebp
jge
and
and
aad
or
inc
lock
sbb
loopne
pushf
ljmp
jg
add
addb
inc
outsl
jl
mov
fbstp
cld
loopne
incl
push
mov
cmp
pop
ljmp
mov
sub
ret
cmpsl
fdivrl
leave
cmpsl
movsb
and
shlb
sbb
jmp
roll
xchg
iret
loope
jg
pop
rcll
je
not
xchg
outsb
test
lods
pop
movb
pop
push
jns
das
orl
cwtl
pop
loope
cmp
cmc
mov
pop
rolb
aaa
into
sub
inc
mov
sbb
setp
lret
xchg
sar
dec
push
mov
cmp
sbb
adc
ss
leave
adc
xchg
inc
aaa
mov
mov
imul
decl
xchg
int
ficoml
xchg
hlt
pop
repnz
mov
addr16
fcoms
adc
dec
add
push
mov
fisubl
or
lret
into
xchg
daa
in
or
add
inc
sbb
dec
fdivl
cmpsb
adc
jbe
je
test
jo
cwtl
sbb
jne
mov
xor
lock
jo
testl
dec
test
rorl
insb
mov
dec
pmaddwd
mov
xchg
inc
icebp
xchg
sub
adc
mov
popa
xchg
mov
repz
jle
addl
std
or
imul
xor
movsb
js
imulb
call
lds
jecxz
cmpsl
mov
out
inc
sti
divb
add
mov
inc
js
push
xchg
stos
pop
lret
pop
pusha
outsb
ret
push
movsl
pop
adc
xlat
imul
cld
imul
test
xor
or
xchg
adc
movb
dec
inc
jp
lahf
push
lods
ffree
push
shll
pop
sbb
inc
bound
aam
push
dec
pop
xor
pop
dec
jmp
orl
xor
adcl
cmp
iret
mov
inc
jae
xchg
dec
mov
jmp
xor
jmp
cmc
das
jge
add
les
ss
std
ss
scas
daa
std
adc
aaa
push
arpl
mov
pushf
inc
out
imul
jge
add
ja
mov
push
push
and
imul
icebp
jecxz
xchg
fmuls
lods
xchg
ds
outsb
lods
loop
xchg
mov
jecxz
sbb
pushf
jge
add
mov
mov
ja
pop
stos
push
fldl
into
je
in
mov
sub
movsl
xor
pop
rol
pop
mov
in
repz
mov
fs
mov
jecxz
arpl
push
iret
dec
mov
aam
push
repz
sub
push
mov
lret
or
jbe
test
nop
hlt
sub
cmp
mov
xor
sbb
hlt
ret
mov
mov
add
push
sarb
inc
out
and
push
std
jmp
xchg
mov
cmpsb
fmul
jo
shlb
inc
push
fsub
push
stos
lods
call
push
repz
shlb
jg
cmp
rcr
andb
mov
push
ret
pop
push
in
cmpsb
xchg
mov
lods
xchg
jmp
jno
mov
inc
push
cmp
rorb
jb
mov
xor
mov
idivb
es
dec
mov
cs
test
scas
shr
negl
and
xchg
test
fsubrp
in
jge
lock
in
test
in
or
rcl
ret
pop
dec
aas
decl
cld
mov
into
movsl
push
ret
add
scas
in
imul
or
es
es
inc
testb
push
or
sbb
repnz
sub
imul
mov
mov
loop
cltd
push
mov
jge
push
pop
and
cmp
and
jg
cmpsb
xchg
and
mov
mov
sbb
sbb
push
xchg
or
xchg
popa
pushf
jno
mov
cmp
in
test
pop
shll
aad
mov
jecxz
jl
leave
lahf
pop
loope
push
mov
and
pop
addb
repz
xchg
aam
das
mov
mov
fildll
imulb
mov
xchg
xchg
or
xchg
lret
icebp
push
mov
test
add
mov
lcall
lock
push
mov
inc
push
outsl
dec
movb
mov
push
jae
mov
es
icebp
xlat
mov
or
jmp
repnz
xchg
subb
pop
inc
jne
dec
sub
mov
mov
mov
hlt
xor
pop
add
fcmovnbe
test
data16
shr
clc
insb
lds
mov
lahf
mov
inc
imull
push
push
and
cmp
xor
pop
xchg
fsubl
xchg
pop
cltd
lahf
pop
mov
int3
mov
ds
leave
lds
pop
xchg
out
dec
popa
insl
inc
insb
and
jge
inc
lods
or
dec
lahf
add
xorb
cmpsb
mov
out
xor
js
cmp
inc
xchg
insl
out
adcl
add
or
and
add
cmovns
mov
pop
fwait
setl
dec
mov
mov
pop
inc
sub
push
sbb
pushf
inc
lret
sbb
mov
dec
pop
gs
lahf
pop
div
inc
push
or
lret
lods
xlat
dec
test
mov
adc
decl
cmpsl
cs
arpl
lret
xchg
sub
push
scas
add
leave
mov
mov
dec
test
addl
and
cwtl
test
sbb
out
ja
into
out
push
xchg
push
pop
cmp
pop
mov
xor
pop
jae
jae
or
or
inc
movsb
sub
hlt
sub
xchg
mov
cmp
and
adc
fsub
loope
or
jge
fsubrl
xorb
fisubrl
inc
inc
dec
pop
daa
enter
sbb
mov
ficompl
call
or
pop
gs
mov
add
jne
loopne
in
out
mov
clc
jmp
dec
dec
js
cmpb
test
outsl
jno
xlat
adc
call
inc
inc
xchg
sbb
insl
cmp
dec
data16
jecxz
addr16
shr
jns
sub
sbb
or
sbb
add
std
mov
std
jae
adc
ret
js
xchg
std
ret
xchg
ret
dec
in
in
inc
sbb
mov
shl
cwtl
scas
xchg
cwtl
ljmp
shlb
mov
xchg
inc
lcall
fistps
cltd
mov
call
cmp
mov
push
scas
xor
in
adc
out
stos
cmp
lret
sbb
clc
push
fsubs
dec
cs
out
cmp
outsb
cmpsl
subl
mov
jp
xor
fs
push
dec
pop
pop
push
xchg
pushf
pop
mov
icebp
imul
loope
divb
pop
fisubs
jns
cmp
push
xor
int
fdiv
xor
and
out
mov
pop
sub
in
scas
cmp
les
movsl
lcall
cs
clc
out
jmp
mov
aad
add
pushf
sub
mov
mov
adc
leave
xchg
sahf
jl
push
fadds
mov
xchg
jnp
in
or
pop
xchg
das
ds
es
rcrb
push
xchg
pop
push
mov
add
ja
sub
jne
sbb
jle
fidivrs
inc
adc
cwtl
mov
cmpsb
jg
cmc
mov
sti
xor
mov
adc
jb
mov
sbb
dec
jbe
adc
xchg
test
and
cltd
test
dec
pop
jle
not
sti
into
stos
pop
rclb
aad
dec
icebp
mov
dec
cld
xchg
leave
mov
pusha
popa
call
fistps
test
or
mov
leave
sub
cli
adc
cs
pop
lock
dec
andl
push
iret
mov
inc
scas
lods
mov
int
les
mov
lcall
cmpsl
jl
test
jmp
sub
xorl
mov
mov
mov
and
xor
push
sarb
in
mov
xchg
push
jae
lcall
andl
roll
loop
lods
shl
les
sub
cmp
pusha
jmp
stos
pop
movb
jp
fwait
sti
pop
pop
xchg
push
mov
mov
shufps
add
cmpl
mov
mov
addb
js
jl
cwtl
inc
outsb
lret
aas
arpl
xchg
mov
ljmp
je
ds
andl
jne
cmp
push
stos
cmp
jno
mov
xor
fists
xor
adc
incl
sbb
fsubl
fisttpll
hlt
jp
cmpsb
cmp
std
mov
sbb
or
adc
add
adc
push
inc
adc
not
arpl
pop
out
cs
leave
scas
jb
pop
imul
jle
pop
dec
lret
jle
insl
add
test
sbb
and
dec
sti
shll
lock
fcoms
xor
or
les
movsl
xor
adc
pop
lods
dec
into
imul
sub
jp
adc
int
xchg
sub
notl
add
iret
xchg
add
xchg
fdiv
inc
adc
pop
mov
fstps
and
fistpl
in
or
fs
jb
repz
cmc
addr16
lods
into
mov
nop
push
sbb
sti
and
lahf
fucomp
outsl
je
mov
mov
hlt
je
sbb
jmp
cs
mov
out
ds
pushf
xor
push
imulb
test
or
or
test
lds
orb
push
ljmp
push
add
and
cli
clc
jno
in
sarb
out
aam
test
test
mov
jp
mov
cli
mov
mov
inc
das
fadd
cmp
leave
push
cmpsl
push
pop
push
inc
push
jns
sub
movsb
js
mov
mov
xchg
lods
xor
leave
pop
dec
sbb
xchg
out
ret
dec
jmp
add
sti
mov
addb
push
add
nop
mov
sub
bound
push
inc
push
xor
mov
shlb
xchg
mov
cmp
lahf
inc
inc
xor
push
mov
sbb
xor
cmp
jne
rcll
dec
mov
dec
outsl
aad
mov
hlt
scas
xor
sub
movsl
or
add
cmp
int3
add
inc
adcl
jb
pop
jns
rcrb
fcoml
add
push
cwtl
push
mov
stos
jne
cmpsb
jecxz
ret
jecxz
dec
js
cmpsl
sti
cmp
push
test
test
repz
cwtl
lcall
fdivs
xchg
lret
adc
jecxz
add
inc
pop
xchg
and
push
and
lret
push
push
inc
xchg
sub
xchg
jmp
popf
sub
xchg
mov
fnstsw
out
pop
mov
xor
rcrb
push
sahf
divb
mov
xor
jge
hlt
cmp
adc
xchg
dec
aam
js
pop
jne
cmpsl
in
xor
add
insb
pusha
loop
xchg
test
xor
xlat
loop
xchg
pop
repnz
and
jmp
sbb
loope
sti
xchg
pop
or
movsb
jns
sbb
inc
xchg
sub
dec
sub
push
sbb
mull
pop
cmpsb
inc
scas
repnz
pop
sbb
sub
jl
into
cli
rcrl
addb
cld
cmc
push
roll
push
pop
lret
imul
rcrl
aad
xchg
divb
sbb
dec
pop
mov
out
adc
dec
fistpll
sahf
fidivrs
jb
dec
push
in
test
sbb
push
and
les
fdivs
or
cld
xchg
xor
int
dec
cli
jmp
jae
rcr
and
fwait
stos
out
pusha
push
mov
fwait
enter
cwtl
pop
cs
in
pop
dec
sub
push
sarl
ret
jmp
mov
jle
xor
mov
ret
ret
mov
or
mov
jle
inc
xor
xchg
out
test
mov
jb
ficoms
cmpsb
dec
mov
mov
add
ss
adc
shll
in
in
adc
xchg
xchg
fidivrl
cmp
enter
add
add
stos
test
shlb
repnz
inc
push
jns
repz
ds
cli
popf
out
xchg
add
aam
sbb
pop
mov
mov
scas
daa
xchg
and
jnp
clc
mov
jb
mov
jl
xor
into
scas
mov
repz
lahf
fsubl
ljmp
fcmovu
popa
mov
pop
stc
xor
mov
pop
push
cwtl
pop
loope
jecxz
pop
iret
je
dec
mov
bound
int
sub
or
push
movsb
jns
test
aas
xchg
jge
popf
pushf
adc
lret
insl
mov
popa
xor
jg
xchg
xor
adc
fdivp
add
fisttps
lods
hlt
jg
out
daa
xchg
push
add
ds
aas
mov
dec
mov
loop
and
inc
repz
mov
addl
sub
sbb
adc
jp
out
sbb
aad
push
cmpsb
sbb
outsl
fistpl
stos
dec
shrd
test
and
inc
xchg
ret
movsl
lds
mov
outsb
das
push
and
fs
imul
ljmp
xchg
movsb
orl
and
pop
rcrl
lods
or
pop
mov
fsts
repnz
xchg
push
xor
inc
cmp
dec
mov
test
inc
flds
ret
mov
sahf
adc
jp
leave
enter
cmc
ret
mov
mov
or
gs
ficoml
push
loope
and
int3
add
icebp
sbb
lds
pop
fimull
bound
decl
push
pop
repnz
imul
rclb
jl
cmp
mov
add
sbb
std
cmc
stos
in
dec
rcll
pop
scas
xlat
rolb
jp
popf
bound
sub
inc
mov
push
ja
pop
loopne
mov
dec
clc
adc
inc
inc
jb
mov
fmul
sub
fnstcw
mov
sbb
cmp
popw
in
pop
jbe
cmc
mov
repz
gs
and
xor
cmp
cld
pop
rcrl
mov
push
xchg
cmp
js
into
inc
pushf
sbb
add
xor
adc
shrb
pushw
sub
mov
xorl
push
inc
call
pop
mov
fldlg2
mov
mov
inc
or
mov
adc
adc
mov
cmpsb
sbb
jnp
js
lahf
sbb
repnz
negl
ficompl
xchg
push
inc
push
cwtl
ret
add
std
lret
outsb
and
out
lret
xor
fisttpll
orb
movsl
mov
hlt
add
shl
add
dec
into
lret
mov
scas
dec
lret
inc
repz
stos
and
movsl
mov
inc
inc
mov
inc
and
fs
xchg
xor
add
sub
and
xor
fisubrs
sub
cmp
dec
out
push
insb
pop
arpl
pop
jne
mov
inc
loopne
jbe
pop
imul
shl
xchg
push
jmp
cltd
bound
cwtl
outsl
fcmovnbe
mov
adc
and
lock
adc
icebp
push
xchg
jnp
out
imul
rorl
and
add
pop
jp
xchg
sub
rclb
push
sub
cli
jecxz
test
adc
add
xor
ficoms
movsl
sbb
mov
clc
sub
fdivr
fildl
sub
dec
add
jns
divl
out
clc
cltd
xchg
out
dec
xor
in
rorl
inc
stc
fwait
mov
xchg
sbb
inc
sub
inc
jecxz
lock
cmp
pusha
cli
mov
jns
fmull
cmc
push
mov
mov
mov
out
vgetmantps
pop
mov
das
push
ds
test
cmp
imul
test
loopne
out
lds
fisttps
std
and
rcrb
popf
mov
stc
xchg
or
pusha
int3
push
sub
out
xchg
push
cmp
fucom
mov
add
ss
jbe
loope
adc
pop
fisttps
popf
push
notl
cmpl
mov
fnsave
rolb
nop
mov
or
adc
pop
push
pop
cmpsb
or
or
push
jge
sbb
push
notl
cs
scas
jno
adc
push
sbb
out
mov
cmp
and
push
mov
loop
push
pop
jnp
adc
sbb
jge
mov
mov
repnz
pop
js
fnstsw
cltd
cltd
jg
cmp
popa
ficomps
jmp
cmpsb
fimull
testl
jmp
aad
int3
repz
xchg
adcl
push
jmp
es
cmpsl
mov
or
cmp
test
xchg
movsb
filds
push
int3
aaa
roll
and
push
xor
or
sub
push
or
xchg
pop
leave
repz
xchg
movsl
nop
adc
fdivrs
test
ss
outsl
xchg
loope
pop
int3
mov
jp
icebp
repz
xchg
push
mov
shll
inc
sbb
jns
dec
cmp
lock
lret
lahf
add
inc
outsl
call
fbstp
mov
or
and
stos
xorl
into
xchg
xor
add
loop
mov
gs
adc
mov
gs
and
push
lahf
test
cld
xor
jmp
das
cmp
jae
mov
push
fcoml
hlt
sbb
xchg
xor
and
and
ljmp
loope
push
fidivrs
pop
dec
push
add
add
cmpsb
ljmp
pusha
aad
inc
jne
dec
mov
cltd
mov
movsb
mov
lods
mov
lret
xlat
aas
sbb
cmpsl
in
stos
push
jge
in
dec
gs
pushf
adc
lcallw
or
and
lret
add
cmp
cmp
and
mov
jb
push
popa
mull
mov
addr16
inc
xchg
stos
pusha
xor
sbb
fbstp
js
aad
dec
push
popa
push
mov
sub
lea
push
int3
je
mov
and
pusha
roll
jp
or
xor
xor
movsb
xchg
stos
out
stos
inc
cltd
cmp
jbe
les
pop
mov
dec
shlb
jecxz
dec
movsb
movsb
repnz
pushf
out
popf
xor
fs
lods
sahf
out
je
dec
mov
and
idivl
sbb
mov
cs
add
mov
sbb
and
lret
pop
xor
dec
fs
jne
inc
mov
cmp
jge
jle
lret
fwait
dec
dec
and
in
adc
shlb
test
mov
call
out
fxch
sahf
lea
cmp
subb
mov
sti
sbb
dec
mov
mov
adc
mov
pop
lods
imul
and
lock
jl
repnz
out
push
mov
sahf
jp
out
push
iret
adc
clc
mov
loope
jno
scas
insl
adc
aas
sbb
fiaddl
gs
cmp
cmp
pop
xor
test
cmp
xlat
jne
dec
push
xor
jo
je
into
jmp
addr16
jp
sti
pop
xchg
icebp
lea
fwait
sub
inc
push
xchg
fsubr
dec
push
insb
pop
popa
je
inc
cmpsb
push
xchg
movsb
int
add
jl
imul
add
push
jmp
cmpsb
mov
dec
pusha
imul
push
mov
dec
mov
mov
push
pushf
loope
adc
test
cld
inc
push
cli
sarb
cwtl
ret
cmp
outsl
sbb
xchg
js
loopne
mov
or
add
gs
adc
sarl
cmp
mov
pop
pop
sbb
xor
pop
add
std
or
mov
mov
in
adc
mov
or
cli
js
jno
xor
addr16
mov
mov
arpl
hlt
shrb
xchg
sub
mov
adc
lods
and
cmpsl
jbe
test
add
clc
inc
sub
mov
add
sbb
mov
int
stc
clc
jns
cmpsl
pusha
rol
in
dec
inc
jp
push
or
jecxz
lea
out
les
mov
sbb
sbb
notl
fimull
repz
xchg
aaa
mov
push
bound
addr16
ret
pop
mul
addr16
pop
arpl
ss
and
mov
imulb
iret
sahf
pop
adc
mov
out
divb
sub
pop
pavgb
dec
xor
jecxz
mov
push
rol
push
cltd
dec
testb
cmpsl
lods
adc
loopne
scas
adc
aaa
lret
pop
xor
push
jnp
sub
inc
lahf
inc
pop
cwtl
stos
push
stos
fmuls
push
repz
sarl
jns
jnp
cwtl
mov
lds
cwtl
cmp
add
movsl
xchg
pop
dec
lock
push
mov
mov
lret
roll
out
in
push
in
pop
ljmp
loope
inc
sub
neg
adc
pusha
dec
add
pop
and
pop
clc
mov
ss
fisttpl
adc
sbb
inc
cs
mov
add
idiv
out
std
pushf
pop
andb
ret
mov
fwait
shr
sub
scas
add
sub
mov
sbb
xchg
sbb
pusha
lret
jge
push
clc
and
xchg
add
loopne
jecxz
jb
mov
nop
lea
pop
push
jecxz
jp
fcomip
loope
sub
mov
shl
test
imul
adc
xchg
dec
stos
hlt
mov
push
ljmp
scas
cmp
mov
add
loopne
mov
in
pop
xchg
in
and
lret
mov
ret
hlt
pop
cmp
sahf
test
push
mov
lods
ja
adcb
aad
adcb
out
aas
push
and
sbb
pop
dec
mov
sub
outsb
or
xor
add
ss
lock
das
mov
dec
sub
icebp
jno
lods
jnp
cmp
jmp
leave
pushf
imul
jmp
ret
fs
xchg
repnz
pop
lcall
cmpsb
jbe,pn
mov
fldenv
sub
lret
insb
icebp
xor
icebp
cmp
data16
jno
push
push
fistl
xor
in
push
and
sub
das
leave
fisubl
jge
pop
dec
adc
adc
movsb
push
mov
mov
xchg
jo
dec
lock
inc
andl
or
arpl
nop
jne
jmp
sbb
mov
push
in
pop
or
outsl
sub
loop
adc
popf
mov
xchg
pushf
aam
jb
loop
sar
push
imul
sbb
filds
add
push
pop
ja
mov
out
cmpsb
loope
pop
push
dec
pop
out
mov
sub
arpl
roll
push
or
lods
cmpsl
xchg
das
add
outsl
and
and
test
cltd
pushf
inc
mov
xchg
cmp
sti
sbb
inc
leave
or
call
stos
or
push
popf
in
xor
bound
insb
bound
movsl
icebp
movsl
bound
and
mov
mov
fstp
jl
sbb
inc
xchg
inc
mov
cmpsb
jnp
inc
aas
pop
or
push
adc
mov
icebp
imul
push
mov
es
sbb
int3
and
ficoms
mov
rcll
xor
mov
cmc
roll
ja
cmpsb
fstps
mov
aam
fsubp
aam
mov
std
jno
pop
and
mov
adc
mov
xorl
int
int3
mov
in
add
pop
xor
loop
fisttpll
out
mov
sbb
fcomps
mov
enter
and
leave
lahf
in
enter
das
push
movsl
insb
jecxz
sub
mov
mov
dec
jnp
mov
sbb
sarb
push
iret
popa
sbb
sub
sbb
dec
adc
loope
dec
mov
sbb
push
outsl
push
test
add
test
mov
inc
fistpll
fistpll
lods
pop
stc
xlat
sahf
pop
outsb
mov
stos
inc
sbb
out
fwait
std
imulb
push
lcall
jl
aas
xlat
ret
dec
iret
mov
lock
push
and
dec
dec
sbb
mov
or
mov
inc
outsl
and
shrb
out
xchg
ret
jle
dec
dec
lret
mov
insb
mov
daa
fsubrl
adc
adc
cmp
test
pop
pop
add
arpl
in
shlb
mov
jg
cmp
pop
fcompl
loopne
and
push
leave
cmp
xchg
xor
add
inc
mov
lea
aaa
push
imul
sub
mov
hlt
push
mov
dec
shl
pop
and
leave
dec
sarb
and
test
jbe
mov
sbb
shlb
lcall
decl
mov
or
dec
test
mov
sahf
sub
xor
loop
xor
mov
sub
and
mov
or
jp
pop
sbb
aaa
inc
cmc
insb
es
xor
jp
push
iret
movsb
cmp
or
push
fisttps
loope
sub
mov
outsl
aad
mov
mov
adc
test
pop
sub
aas
js
in
push
jne
loope
stc
rolb
ss
int3
hlt
jl
mov
repz
lds
bound
push
aaa
jge
ja
and
sbb
test
push
fstpt
pop
jnp
mov
pop
fdivs
inc
mov
scas
lods
ljmp
scas
lret
fisttps
fidivrl
and
sub
scas
mulb
shll
push
mov
loope
popa
aam
sub
add
lea
pop
mov
mov
in
mov
int3
cmp
inc
cld
pop
mov
pop
sbb
fwait
cltd
stc
pop
mov
and
adcl
adc
xchg
push
add
sub
ss
adc
cli
and
popa
jge
mov
push
mov
and
xchg
xor
inc
push
sbb
inc
lds
sti
ret
icebp
sub
loop
push
jb
cs
pop
jbe
jge
mov
aas
fiaddl
lcall
jae
jp
sub
dec
push
xorl
imull
inc
vpminsw
popa
sbb
jbe
cmc
fisubrl
and
mov
sub
mov
mov
aaa
xchg
jbe
orb
sbb
ret
mov
sbb
dec
cli
inc
rorl
xchg
scas
mov
shlb
addps
hlt
ret
xchg
jmp
add
mov
mov
jecxz
jno
sahf
inc
xchg
and
xchg
xor
inc
xor
cmpsl
roll
in
dec
inc
xlat
xchg
and
mov
pop
fcomi
and
jo
sub
mov
stc
jmp
pop
pop
xor
inc
mov
push
fmull
jecxz
imulb
xor
push
pop
jae
repnz
popf
aad
cmp
cli
or
xor
clc
lret
les
cmc
dec
shlb
aas
imul
fsubr
cmpsb
loope
cwtl
fmull
popf
xchg
mov
xchg
fistpl
or
mov
fsubl
test
icebp
imul
inc
mov
jge
inc
popa
and
mov
int
push
xchg
call
js
mov
xor
sub
scas
incl
mov
shll
popf
and
out
call
pop
sbb
jne
add
andl
push
sbb
notl
ss
pop
outsl
dec
jo
data16
pop
das
in
inc
sbb
push
scas
imul
lods
fwait
push
sub
gs
mov
pusha
dec
pop
mov
insl
lds
dec
and
xor
and
test
or
ds
xchg
add
scas
or
bound
arpl
out
inc
pop
out
mull
jmp
lahf
xchg
push
mov
in
dec
popa
dec
jge
adc
xchg
jle
rclb
popf
mov
hlt
lods
imul
notb
sbb
mov
pushf
ljmp
repz
les
add
and
pushf
lea
cs
adc
fists
sub
cli
jecxz
lea
jecxz
cmp
ds
add
mov
rorb
add
addb
add
repnz
pop
fdivs
stos
aad
imul
test
rorl
inc
sbbl
leave
fildll
adc
and
jecxz
sbb
idivb
in
ret
pop
jo
in
xchg
leave
js
xor
push
sub
pop
fnstsw
xchg
pop
jp
test
push
stos
xchg
pop
push
lret
mov
loope
xchg
sbb
arpl
ljmp
ret
push
cs
pop
lods
sbb
fidivrs
cmpsl
dec
sbb
inc
and
arpl
inc
jno
cmc
or
shlb
push
inc
jae
enter
jne
or
cltd
inc
scas
out
or
loope
add
adc
mov
cld
add
mov
add
mov
mul
adc
mov
fs
shll
fisubs
ret
adc
push
imul
in
fs
mov
lahf
pop
in
mov
jmp
pushf
inc
adc
loopne
clc
and
lods
mov
sbb
mov
out
inc
mov
ss
push
negb
mov
sbb
clc
mov
dec
stc
mov
fisttpl
inc
popf
cmp
xchg
push
adc
or
inc
push
popa
xor
jno
std
aas
ljmp
mov
adc
insl
loop
loope
pushf
fwait
and
push
je
std
push
mov
and
orb
shl
ficomps
fcoml
mov
mov
imul
cld
mov
inc
adc
rorb
ja
popa
std
adcb
aam
push
mov
dec
dec
ret
xchg
cmp
cmp
xchg
mov
and
aam
in
add
fldcw
xchg
jl
cmp
in
mov
lds
ss
push
mov
insl
xchg
push
lea
ret
leave
and
mov
clc
rcll
xchg
les
sub
jbe
aaa
gs
or
popa
fstps
int
int3
lcall
rclb
xor
xorl
cmc
in
xor
xor
mov
lock
pop
add
add
pop
cmp
mov
xchg
adc
mov
xchg
clc
adc
lock
sub
pushaw
popa
aaa
xchg
lods
clc
pushf
decl
mov
scas
mov
aad
insl
push
icebp
push
xlat
or
pop
cli
into
mov
test
mov
loopne
xchg
xor
lds
sbb
add
dec
add
xchg
xchg
repnz
lea
cs
arpl
sarb
dec
adc
lret
ja
shll
in
xor
add
adc
pusha
xchg
scas
cmp
popf
dec
ss
repz
icebp
pop
pushf
cli
mov
push
jns
mov
sti
shr
push
insl
push
push
xchg
bound
mov
push
pop
shrb
int3
inc
adc
popf
std
and
xchg
inc
jg
clc
iret
scas
dec
xchg
jle
sub
mov
xor
sar
mov
bound
js
sbb
call
loope
xor
add
lock
adc
add
dec
and
int
arpl
fmul
rorb
add
push
pop
adc
into
das
sub
inc
push
test
xchg
in
arpl
jne
mov
and
inc
pop
add
xor
mov
addr16
inc
mov
gs
dec
dec
mov
or
pop
mov
jno
mov
adc
push
pop
mov
pop
iret
fdivrl
js
cmp
fdivrs
call
adc
and
ja
jecxz
and
mov
std
sub
into
int
mov
cmp
test
ljmp
repnz
sub
pop
sub
push
rorl
xor
scas
div
dec
ficoml
add
cmp
mov
stc
popf
cmp
pop
sbb
aam
push
sub
xchg
mov
sti
dec
mov
xor
or
je
or
sub
and
test
jge
movsl
dec
leave
sub
pop
push
movsl
add
jne
jnp
in
mov
xchg
mov
out
rorb
mov
popa
dec
cmp
or
lods
rcrb
cmp
scas
movl
mov
out
pop
cltd
mov
push
repz
mov
inc
lcall
out
cs
aas
mov
jle
pop
enter
xor
or
sub
js
xor
xchg
ds
sub
dec
pop
shr
aas
lret
adc
cmp
fnstcw
out
jl
push
jl
pop
add
mov
cmpsl
inc
addr16
dec
insl
test
mov
pop
ja
loopne
fstps
mov
roll
and
push
imul
shll
loop
subb
in
ljmp
add
mov
mov
into
jne
sti
lock
mov
in
into
lea
loop
mov
sarl
or
popf
inc
negl
lea
push
aaa
pop
push
add
div
xchg
fwait
or
out
sub
jb
cld
jl
cs
loope
mov
cs
aam
jnp
in
xor
sti
and
dec
mov
les
mov
popa
push
sbb
mov
lods
iret
xchg
and
inc
push
cmp
orl
push
inc
add
sbb
mov
ja
and
jnp
mov
push
jno
sub
xchg
das
inc
cld
xchg
aad
add
lock
aam
jno
dec
dec
test
aaa
dec
ficoml
and
inc
cmp
enter
push
scas
cwtl
pop
lock
in
shrl
mov
sub
jns
pop
test
movsb
push
jp
loope
insb
mov
or
xor
fs
fidivl
mov
inc
mov
lds
and
adc
xor
dec
and
cltd
rcr
std
xlat
ss
add
mov
mov
pusha
jmp
imul
mov
mov
testl
pop
jle
push
sbbl
cmp
sub
inc
dec
lahf
outsb
scas
add
sbbb
cmp
lahf
mov
jns
stos
icebp
sarb
adc
insb
push
push
add
cmp
dec
sbb
xlat
cmp
js
adc
es
jle
jne
stos
mulb
or
imul
mov
sbb
and
rorl
mov
test
mov
out
aam
negl
sub
cwtl
in
xchg
cmpl
lds
fildll
ret
pop
xor
or
sahf
out
jb
adc
jne
push
cmp
push
dec
pop
jg
je
rclb
insb
dec
lahf
lret
pop
mov
fldenv
in
inc
adc
and
out
repz
rcr
fnstcw
aad
out
std
adcl
jne
inc
mov
or
cmp
scas
mov
mov
pop
mov
sub
inc
lock
xor
xor
loopne
das
repnz
lods
stos
dec
dec
push
rolb
mov
xchg
arpl
mov
notl
fstl
enter
jns
popf
orl
pop
out
jge
hlt
jecxz
xor
scas
pop
pop
test
pop
xor
sbb
pop
inc
repnz
cltd
mov
int3
adc
insl
pop
inc
mov
fwait
mov
jno
mov
aam
xor
xor
add
xchg
inc
or
dec
movl
out
inc
fwait
dec
or
push
repz
es
out
popa
cs
fwait
lcall
mov
add
add
stos
int3
cmp
cmc
divl
insl
nop
dec
sub
jmp
pop
sbb
and
xor
push
pop
into
nopl
sarl
jg
push
pop
mov
adc
lret
test
in
sub
ror
popf
sub
repz
lds
aad
fs
pop
test
pop
imul
adc
or
xchg
jge
dec
imul
insl
cwtl
test
pop
cmp
and
pusha
push
xchg
jb
dec
or
hlt
cli
roll
cmp
or
sti
cmpsb
sbb
aas
jmp
xor
lods
cpuid
pusha
jno
cs
movsl
repz
lds
mov
jl
cmp
data16
pop
pop
dec
mov
sub
fisttpll
popl
aaa
cmp
lods
leave
fidivrl
add
das
aaa
cmp
stc
jno
lock
loop
pop
in
daa
xlat
jl
adc
xor
dec
loop
pop
mov
push
aaa
inc
aam
mov
cmp
and
adc
mov
loope
outsb
iret
jg
mov
xchg
clc
push
aad
add
pop
popa
sbb
add
mov
adc
push
lret
push
xor
imul
dec
pop
scas
test
mov
mov
fnclex
cwtl
addb
fwait
sub
xor
das
xor
ss
cltd
sub
xor
pushf
mov
sti
test
arpl
sbb
daa
inc
sti
pop
cwtl
repnz
fdivrl
cmp
cld
jp
cli
mov
ja
mov
xor
inc
pushl
in
movsb
add
mov
js
out
repz
enter
imul
lock
xchg
lods
cmpsb
add
add
cmp
shlb
xchg
and
xchg
sbb
xchg
addr16
addb
aad
insb
scas
call
rclb
mov
mov
cwtl
daa
dec
fdivrs
cmp
cli
stos
push
cmpb
xor
pop
stos
xor
ficoms
rclb
outsb
jge
mov
jb
les
push
sbb
insb
pushf
ret
mov
and
in
jp,pn
enter
pop
repz
inc
jp
and
mov
aaa
cmp
shl
fcompl
lea
mov
sub
mov
sbb
js
sbb
sarb
cmp
out
or
popf
das
or
sbb
pop
fs
inc
add
test
push
push
jo
xchg
stc
inc
sub
insl
and
adc
inc
mov
ds
lods
addr16
dec
in
adcb
xor
xchg
pop
or
mov
xchg
mov
mov
test
jle
adc
xor
jae
addr16
pop
insb
or
fstpt
pop
testl
mov
ds
sbb
int3
shrl
neg
scas
imul
jnp
xorl
or
xchg
inc
arpl
mov
add
dec
flds
adc
mov
push
adc
js
es
mov
jp
repz
into
mov
dec
cs
int3
pusha
adc
ja
in
mov
mov
into
pushf
sarl
push
mov
test
lods
out
sub
dec
cmc
push
mov
scas
lret
movsb
dec
pop
dec
cmp
push
xchg
cmp
sub
mov
push
and
std
xlat
pushf
or
in
ret
mov
mov
loopne
push
je
cld
push
xchg
loop
lahf
jns
cmpsb
or
or
mov
sbb
cwtl
stos
sbb
outsl
aam
enter
and
ljmp
mov
mov
xchg
lods
sub
testb
dec
jne
insl
push
repz
test
jle
fsubl
daa
mov
aad
imul
fistl
xchg
sbb
out
inc
mov
movsb
fmul
sub
mov
xor
push
fdivrl
fdivr
into
pop
adc
push
inc
out
aad
xchg
push
and
inc
clc
into
mov
and
daa
add
test
sar
cmpsb
xchg
mov
push
dec
sbb
mov
outsl
cmpsb
jmp
xchg
sarl
fdivrs
jmp
jmp
mov
aam
leave
push
pop
dec
jno
sbb
jnp
imul
xchg
out
jl
push
sub
add
dec
mov
addl
add
xchg
mov
push
xor
insb
inc
jo
stc
fldl
jo
shlb
and
and
push
add
int3
das
adc
ficoms
or
pushw
scas
dec
mov
imul
cmp
pop
ss
iret
cmp
lods
pop
mov
mov
jge
ret
leave
add
pop
pop
add
outsb
or
mov
bound
sbb
xchg
test
or
xorb
dec
push
inc
lret
jge
in
mov
dec
loop
xor
inc
mov
pop
repz
stc
pop
mov
in
or
mov
orl
sub
or
xchg
enter
xchg
jmp
outsb
insl
xchg
jp
addb
xor
mov
std
xor
repz
mov
sub
add
push
inc
or
repz
nop
xchg
arpl
movsl
loopne
or
mov
dec
test
bound
xchg
adc
and
ds
jmp
cli
cmp
imulb
ficomps
cltd
nop
push
sub
fisubs
into
fsub
xor
sbb
movsb
addr16
loope
dec
shrl
clc
stos
inc
push
adc
inc
or
lods
cltd
stos
call
or
mov
xor
std
or
add
jecxz
xchg
inc
sub
lds
xor
movsb
andl
mov
xchg
aaa
add
or
in
push
xchg
push
roll
sbb
push
sub
jmp
adc
sub
test
inc
push
ret
or
jl
add
je
lret
jbe
mov
lahf
test
sbb
mov
mov
das
jmp
xchg
lret
out
test
mov
fidivl
rorb
mov
add
scas
dec
cmp
or
scas
cmpsl
inc
push
rcll
xchg
push
out
cmp
push
call
sti
cmpsb
push
push
push
jo
mov
push
jl
lret
or
pushf
test
cmpb
push
data16
and
jmp
imul
lods
divl
sbb
jle
test
cs
jns
shll
inc
cli
jl
cwtl
inc
loopne
pop
sub
fnsetpm(287
pop
repz
or
mov
xchg
sub
aad
dec
adc
out
mov
in
mov
mov
add
cld
loope
mov
fisubrs
dec
sbb
jge
mov
inc
ljmp
mov
sub
js
cmp
pop
outsl
xor
push
imulb
and
pop
or
push
add
cld
mulb
repz
iret
cmp
into
addr16
mov
out
sub
xchg
jmp
adc
shl
cmp
pop
pop
rorb
in
push
nop
out
inc
push
cltd
imul
adc
in
inc
fs
mov
jne
push
pop
mov
into
dec
sahf
adc
adc
mull
adc
mov
sbb
lods
cmpl
xchg
jno
or
cmp
xor
adc
sbb
pushf
bound
in
hlt
or
mov
bnd
dec
add
stos
xchg
add
outsl
sbb
mov
jmp
sbb
stos
les
mov
in
pop
pop
imul
xchg
dec
sarb
jne
test
popf
in
xchg
rolb
or
test
dec
jp
data16
mov
dec
mov
in
cmp
shlb
cs
dec
setae
mov
sbb
imul
out
jl
out
in
adc
rcrb
repnz
add
jb
rclb
or
or
push
adc
cmp
fistpll
lods
mov
or
daa
les
stos
push
fmull
dec
inc
aam
xchg
or
dec
test
aas
pusha
sub
inc
or
mov
shll
movsl
jb
fidivl
clc
push
in
and
iret
add
cltd
fmuls
lods
sahf
lock
adc
movsl
inc
out
push
jne
shll
adc
mov
xor
leave
sbb
push
mov
lods
aam
insl
das
sub
test
adc
fsubs
test
sub
push
inc
loop
push
jns
push
mov
push
out
int3
les
jo
adc
ret
dec
mov
ss
and
clc
ret
fidivrl
mov
xchg
push
adc
jle
sti
ljmp
inc
pop
fwait
and
cld
mov
sub
inc
sarl
lahf
shlb
bound
hlt
lods
mov
lcall
xchg
arpl
xor
and
into
rorl
mov
stos
sbb
and
mov
adc
adc
out
push
jmp
cmpsb
push
inc
aas
add
mov
cltd
push
mov
push
or
xchg
clc
bound
push
xchg
fdivs
xchg
cmp
rolb
or
pop
jge
add
push
pop
and
test
mov
enter
and
lods
cmp
inc
cwtl
stc
xchg
mov
mov
sbb
cmp
in
stos
rcrl
loopne
or
lods
pop
lds
fucomp
fs
jbe
push
add
sarl
cmp
mov
rep
lcall
mov
outsb
jecxz
mov
xchg
sbb
ss
add
les
inc
test
incl
insl
and
sub
xor
inc
scas
daa
shrl
cmp
sub
mov
out
jmp
test
xor
es
leave
fldcw
out
enter
in
in
cs
mov
adc
and
mov
mov
push
in
and
fdiv
dec
aad
xorl
adc
dec
push
in
lcall
imul
xchg
xor
jp
sub
mov
cmp
popf
outsl
js
jnp
enter
jns
and
lock
add
fdivs
push
dec
inc
outsl
push
mov
cld
imull
mov
xor
mov
mov
mov
insb
xlat
cld
ss
adc
sbb
cwtl
cmc
pop
or
aas
in
aad
sub
xchg
jge
out
ss
push
dec
aad
dec
aas
xlat
mov
push
inc
and
ss
aaa
lods
jmp
mov
lods
push
inc
aad
or
add
out
imul
sub
push
or
fs
stos
out
iret
mov
lds
cld
adc
in
adc
movsl
xor
das
lds
pop
or
out
aas
ja
negl
jecxz
orl
or
addr16
pop
jge
mov
fs
movnti
sahf
push
jmp
adc
pop
scas
pop
gs
stc
lahf
aas
in
gs
xor
jo
mov
inc
stos
push
xchg
in
mov
mov
lock
clc
adcb
and
mov
push
scas
jl
imul
out
push
pusha
pop
cmp
loop
push
jl
sbb
or
adc
roll
pusha
stos
dec
jns
pop
bsf
add
in
loope
lea
lret
and
and
imul
repz
pop
dec
mov
mov
jmp
cmp
jne
pop
cmc
imul
or
or
or
push
inc
in
push
ret
xor
outsl
subb
cmp
pop
push
or
int3
adcb
adc
cmp
out
push
adc
mov
pop
and
lea
xor
insl
pop
and
insl
loopne
push
cmpb
les
imulb
jge
ret
arpl
mov
mov
or
movb
das
xchg
inc
fidivrl
cmc
in
data16
jg
rorb
jmp
xchg
stos
push
adc
inc
xlat
lea
cmp
imul
inc
xchg
mov
clc
stos
movsl
std
ljmp
mov
dec
jnp
addb
and
sub
dec
fnstcw
xor
cmp
fsubs
pop
or
testb
jmp
add
xchg
jl
mov
sbb
mov
scas
scas
in
js
jecxz
idivb
jmp
repnz
mov
cmpsl
xlat
daa
int
cmp
test
sar
scas
jg
sbb
loope
push
xlat
pop
aaa
mull
xlat
jbe
fs
hlt
js
jbe
jmp
lock
add
inc
into
xor
mov
pop
sub
cli
xchg
jb
xchg
xchg
inc
pusha
dec
lods
shl
lods
iret
js
dec
pop
jecxz
scas
stc
mov
mov
push
test
sub
jl
inc
jmp
add
arpl
sbb
fwait
sbb
push
and
lcall
pop
cld
in
mov
repnz
add
or
orl
adc
cmp
and
movsl
insl
test
inc
lds
aaa
insl
pop
fdivr
in
xor
fidivl
pop
hlt
iret
clc
mov
jp
mov
cmp
repnz
lcall
test
arpl
xor
in
sub
lods
movsb
cmp
xor
mov
fbld
mov
ljmp
pop
nop
call
shrl
lods
mov
jbe
ret
mov
inc
push
mov
push
stc
or
pop
dec
xchg
mov
jbe
lock
int
push
ds
add
push
add
and
fdivrl
ljmp
pop
inc
icebp
rcrl
or
into
xor
cli
ret
add
std
rcrl
cs
repnz
cmp
pushf
insb
xlat
fbld
nop
sarb
mov
rol
xor
mov
sbb
jp
int3
mov
cmpsb
test
fidivs
xchg
jecxz
sbb
notb
xorl
xchg
dec
jecxz
inc
jne
mov
bound
push
adcl
or
adc
daa
add
adc
ficompl
mov
mov
lahf
repnz
stos
repz
movsl
sbb
sub
testb
loope
xor
sahf
lcall
xchg
scas
loopne
push
jae
push
jmp
push
sub
pop
push
inc
test
adc
pop
outsb
rcll
sub
nop
fidivrs
xchg
sahf
jge
loope
int
pop
adc
dec
push
sub
sub
jl
xor
xor
insl
into
lret
ss
and
push
jo
fstpt
fistpll
roll
cmp
jmp
sub
test
out
push
shrl
fld
push
movsl
test
push
lret
pop
sbb
movsb
jne
scas
sub
sub
nop
mov
jns
mov
pop
ret
stc
mov
and
bound
shlb
sbb
xchg
mov
rcl
or
decl
inc
xlat
fwait
adc
push
sbb
mov
inc
jo
imul
jl
in
xchg
testl
fnstsw
mov
inc
addr16
mov
xor
pop
mov
in
jbe
dec
push
bound
mov
mov
imul
xor
sub
push
sub
shll
shl
and
out
lods
test
mov
push
xor
lcall
mov
mov
sbbl
jb
popf
xchg
lcall
push
sub
push
adc
push
dec
mov
fwait
or
add
sbb
xor
or
fildll
test
xchg
and
lds
mov
or
mov
insb
mulb
sahf
and
xchg
sti
dec
adc
pop
out
movsl
cmpb
fwait
mov
jle
inc
lods
jmp
fildll
adc
in
mov
jb
repnz
enter
ret
cmp
das
mov
cld
push
mov
stc
cmp
aas
inc
cmpsl
andl
lret
leave
fnstcw
pusha
sahf
adc
dec
aas
cs
sbb
and
push
pop
xchg
jnp
out
mov
dec
outsl
mov
fiaddl
imul
enter
mov
add
push
dec
push
xchg
iret
sbb
mov
lret
xor
popf
lcall
ds
lds
repz
es
inc
mov
xchg
dec
roll
or
sub
mov
push
xor
cmpsb
mov
insb
inc
mov
and
test
inc
rcrb
pop
add
aam
popf
xchg
pop
pop
dec
ss
sti
shl
fadd
ja
mov
ret
xchg
lods
mov
cmpsb
mov
mov
in
rorb
call
cmp
pop
jg
mov
xorl
or
sbb
adc
adc
mov
cmp
dec
push
xchg
stc
cmpsl
ljmp
mov
mov
in
rorb
orb
and
xlat
popa
in
push
aas
cmp
lock
inc
loope
call
lret
sub
outsl
int
mov
or
or
jae
ds
int3
lahf
sub
or
adc
cmp
clc
and
xor
scas
pop
sub
inc
inc
mov
mov
leave
mov
pusha
popa
cmp
sbb
and
cmpb
pop
mov
pop
mov
dec
clc
shr
inc
push
pop
or
sti
mov
jae
xlat
mov
dec
pushf
add
jae
leave
cmc
xchg
adc
int
out
cwtl
jg
adcb
adc
mov
or
mov
dec
push
xor
mov
pop
inc
mov
ret
sbb
in
jo
aaa
cltd
dec
push
ror
loop
mov
rcrb
adc
push
outsb
inc
ja
pop
lcall
xchg
xchg
cli
push
cli
mov
rcrb
xchg
inc
arpl
jne
rorl
and
dec
loop
adc
jge
pop
ds
outsl
sub
pop
or
sarb
xor
lret
rorb
imul
loop
sub
mov
pop
sub
ljmp
test
and
test
mov
pminsw
jmp
sub
sub
push
or
push
arpl
not
xor
mov
aas
inc
clc
sub
fstpt
adc
aam
idiv
xor
xchg
in
mov
lea
mov
xor
stos
out
and
add
sbbb
push
lcall
cwtl
inc
popf
xor
push
mov
mov
test
cmp
adc
cmp
call
stos
dec
enter
movsl
add
sti
cmp
lods
push
adc
sub
outsl
cmp
scas
jmp
insb
push
xchg
lods
adc
iret
mov
popa
pop
and
push
je
sub
sbb
jae
sbb
inc
xor
push
xchg
lahf
mov
pop
lcall
js
decl
jns
dec
test
neg
cmp
ja
and
sahf
cmp
stc
xchg
sbb
adc
xlat
std
filds
aaa
inc
dec
rolb
sti
in
cld
fnstsw
mov
in
or
xchg
push
add
cmpsb
lahf
sub
mov
mov
daa
lret
cmp
mov
xchg
cli
repz
sbb
loop
xchg
pop
stos
fs
fnstenv
scas
icebp
xchg
std
hlt
movsb
fmull
shlb
pop
ss
fwait
pop
rol
js
movsl
rcrl
in
mov
xor
les
xor
loop
in
fidivs
lods
test
mov
cltd
pop
add
sub
out
sbb
cmc
movhps
xor
push
xchg
add
popa
mov
sbb
fldl
jle
inc
inc
xor
fsts
jo
push
popl
xlat
mov
jo
in
sbb
das
arpl
jno
mov
mov
mov
ds
sub
and
daa
mov
popf
or
cmc
sbb
sar
jns
in
or
or
inc
lret
aam
lea
jbe
fwait
xor
jb
mov
mov
adc
dec
movsl
mov
shrb
cmp
lea
sarl
cltd
mov
mov
pusha
pop
aam
mov
and
adc
repnz
negl
das
rcll
sbb
xchg
jbe
inc
jp
add
cmpl
dec
xchg
adc
jns
jo
arpl
jne
iret
je
sbb
test
and
inc
cmc
lret
jae
fstpl
lcall
add
addl
push
mov
sub
mov
mov
pushf
les
mov
mov
jns
cmc
roll
cltd
in
rorl
dec
and
cli
scas
push
lcall
js
cmp
jns
cmp
test
mov
enter
adc
push
imul
xchg
inc
ret
mov
mov
scas
loop
stos
mov
into
add
jle
pop
add
adc
add
pop
mov
jl
mov
pushf
popa
lcall
xchg
sbbb
pop
sarb
int3
lret
jg
lea
test
mov
xor
mov
and
mov
push
daa
dec
sbb
sbb
mov
fstps
pop
loope
sub
scas
mov
sub
mov
cmpsb
das
dec
xchg
cmp
mov
es
adc
pusha
inc
pop
xchg
out
inc
addr16
pop
aad
test
insl
mov
subl
lret
add
pop
xchg
lock
mov
and
lea
xorl
xchg
cmp
repnz
loop,pn
shrl
orl
and
jno
fsubrs
mov
xor
popa
pop
aas
cld
sub
outsb
test
popa
pop
popf
test
sbb
test
cmp
aad
aad
xchg
int
add
pop
aaa
cmp
lock
stc
imul
sbb
insl
in
xor
xor
jbe
xor
jge
push
imul
pop
loop
add
aam
push
fcomip
repz
mov
xchg
add
jl
cwtl
mov
lret
or
add
iret
ds
pop
mov
add
push
mov
lret
mov
lret
mov
arpl
adc
pusha
cld
pusha
in
nop
dec
decl
aaa
or
in
sbb
cmp
mov
hlt
jmp
or
popa
test
incb
mov
adc
adc
aaa
clc
dec
test
repnz
sub
ret
shrl
or
mov
test
mov
mov
xchg
or
imul
mov
inc
push
mov
sbb
mov
mov
aas
out
pop
pop
nop
push
mov
rorl
es
lds
adc
push
pop
mov
aas
enter
gs
push
fmulp
loopne
mov
or
shlb
add
sub
add
and
fs
jle
cmp
out
mov
out
bound
mov
sbb
push
repnz
mov
pop
jecxz
dec
pop
xor
pop
aam
pop
mov
aaa
xacquire
xchg
je
lcall
pushl
pop
testb
mov
lock
mov
or
add
mov
adc
outsl
fbld
and
jge
mov
aas
ficomps
jl
pusha
fimuls
push
inc
jle
int3
nop
repz
xchg
sub
nop
sbb
insb
and
enter
hlt
mov
or
rcll
mov
pop
sub
sub
inc
and
repz
pushl
add
jle
cmp
rcrl
popf
fcmovb
lods
sub
adc
and
sub
call
out
mov
cmc
fistl
mov
push
sar
mov
push
into
aas
xor
fists
pusha
jae
lods
mov
sub
js
lret
js
mov
pop
sub
dec
cmp
mov
inc
ret
cwtl
jl
js
mov
pop
addr16
es
je
aas
xchg
in
enter
lret
nop
inc
int3
aad
imulb
xchg
cld
int3
test
je
out
shl
mov
ds
inc
sub
sbb
call
inc
sahf
mov
adc
xor
xchg
lcall
mov
or
jns
sti
aam
cwtl
add
mov
movsb
sti
adc
test
xor
sbb
fiadds
jmp
aam
gs
pop
and
mov
inc
insb
jmp
lods
roll
enter
cmp
into
ljmp
cmpsl
mov
lret
aam
in
adc
icebp
sarb
jl
arpl
pop
inc
test
pop
mov
add
pop
cmp
xor
repz
mov
test
movsb
pusha
int3
or
sub
data16
cmpsb
sub
cmp
mov
rclb
shrl
jno
jae
and
mov
orb
rcrb
cmc
mov
mov
pop
jmp
mov
xchg
dec
jmp
clc
pop
aas
in
iret
loopne
inc
mov
fistps
int3
aad
fsubrl
sub
fwait
jp
stc
cmpsb
pop
out
dec
mov
push
sbb
jno
cs
and
jp
mov
rorl
aam
scas
pop
andb
sub
iret
jg
mov
adc
mov
push
xchg
sub
jns
sbb
xchg
negb
mov
int
in
imul
xor
movsl
sub
xchg
scas
xor
addr16
cltd
mov
int3
xchg
mov
sbb
push
push
fcmovbe
lods
or
leave
in
pushf
mov
mov
sub
cli
inc
push
xorl
inc
test
mov
cmp
adc
cli
in
pushf
xor
add
popa
mov
xchg
loopne
add
loope
cmp
fcompl
orl
pop
xchg
cmp
mov
jl
pop
xchg
mov
push
mov
xor
out
testl
push
ds
std
dec
fcmovu
popa
or
rsm
mov
bound
inc
leave
sarl
shrl
into
dec
push
cmp
add
fsubrl
cmp
icebp
pop
mov
inc
mov
scas
mov
cmp
ret
push
pop
jae
dec
pop
sbb
mov
mov
lret
mov
dec
std
sahf
pop
push
fneni(8087
mov
xor
mov
nop
rcll
lods
iret
dec
mov
and
jnp
loop
flds
je
xchg
fs
mov
into
lds
jmp
mov
jp
imul
sti
and
cmp
out
fisttpl
aaa
mov
jne
adc
out
or
insl
imul
rorb
mov
jb
mov
test
imul
insl
xchg
xchg
in
xchg
jne
add
pop
sub
mov
mov
jp
inc
inc
lods
mov
xor
int
xchg
add
shll
xor
stc
cmp
fcoml
xlat
cmp
cltd
add
sbb
xchg
outsl
lret
fstpt
out
ret
add
jge
les
notb
in
jecxz
push
jns
mov
out
mov
outsl
fwait
mov
divb
insb
lods
jg
xchg
jno
fcomps
xchg
fsub
xchg
nop
pop
test
mov
mov
rcrb
pop
bound
int
out
pop
repnz
xchg
mov
stc
mov
rcr
cmp
inc
fidivs
inc
jmp
scas
jne
jb
jle
cmpb
jge
es
inc
dec
sbb
dec
jmp
jecxz
xchg
mov
bound
cmc
push
pusha
and
nop
cs
mov
sbb
jb
dec
xor
arpl
mov
call
daa
mov
cmp
bound
and
xchg
xchg
mov
xchg
aam
jo
aas
xchg
js
test
cltd
jnp
pop
cmp
fdivrs
mov
pop
orl
test
pop
subb
aaa
jae
push
xchg
aaa
sti
mov
loopne
rorb
sbb
out
fwait
xchg
add
jbe
xchg
sub
add
sub
push
dec
clc
jbe
push
out
jo
pop
cmpsl
xor
push
pop
shl
movsl
mov
mov
int
and
pop
jmp
jmp
lret
cld
pushf
adc
mov
add
pop
not
je
enter
xchg
dec
jns
into
jge
push
gs
adc
lock
adc
push
cltd
int3
sub
das
insl
mov
and
push
xor
cs
cld
sbb
xchg
or
push
divl
sub
xchg
lea
and
loopne
leave
xchg
orl
nop
lock
cld
xor
xchg
sbb
add
adc
and
add
cmpsl
jl
mov
insb
adc
lcall
and
mov
sbb
xchg
xchg
and
cmp
sar
scas
jp
orb
lock
jne
aad
fs
dec
sbb
lods
pop
shrl
or
cli
aas
mov
adc
mov
pop
mov
sub
mov
or
or
insb
xorb
das
int3
vmwrite
inc
fldl
mov
js
mov
js
shrb
pop
push
sti
cwtl
xchg
and
fwait
adc
dec
add
jge
test
mov
test
xchg
pop
popf
lock
add
mov
jbe
or
mov
inc
lahf
dec
in
rorb
sbb
inc
add
push
addr16
es
xchg
pop
pop
mov
mov
mov
mov
pop
shrl
movsb
jl
push
add
jnp
cmp
dec
add
cmp
or
das
jg
cmp
mov
aas
inc
or
fs
inc
push
lret
adc
jge
cmp
aaa
push
jo
test
mov
or
lret
nop
xor
xchg
mov
inc
xchg
cltd
mov
sub
mov
test
gs
push
sub
shl
jg
jno
dec
inc
cwtl
in
loopne
jnp
les
pop
xchg
std
dec
or
in
pop
or
pop
mov
je
jmp
subb
jl
test
fdivl
mov
or
mov
out
cmp
sbb
les
sbbl
ror
mov
cmp
adc
dec
mov
in
mov
outsb
xchg
mov
add
push
xchg
cmp
roll
bound
mov
icebp
fsubr
xchg
or
dec
aas
pop
dec
pop
jo
call
inc
dec
dec
orl
lds
add
ret
xchg
aaa
ja
inc
es
lods
mov
and
in
inc
mov
mov
test
mov
jp
mov
inc
imul
cmp
adc
lock
call
fistpll
mov
dec
push
int
jae
push
add
jb
and
jno
std
int3
jl
cmpb
sub
add
mov
adc
or
and
xchg
xchg
cmc
sub
xchg
adc
dec
add
adcl
leave
out
icebp
jo
lcall
fwait
loopne
inc
mov
add
pop
jo
hlt
mov
aaa
dec
incl
sbb
pop
ret
cld
rol
sbb
mov
dec
jmp
loop
outsb
fstps
adc
mov
mov
mov
push
cmovnp
into
in
mov
es
adc
mov
icebp
ror
test
addr16
mov
jp
cmpsb
lea
dec
or
mov
push
out
test
fidivl
push
shll
loopne
in
pusha
icebp
mov
pop
add
je
std
cmp
jb
into
mov
push
pop
pushf
jle
das
dec
mov
mov
inc
cmp
add
cmp
jle
jno
data16
das
mov
daa
or
adc
mov
jge
shr
movsb
roll
xorl
sub
pop
cmp
std
and
cs
rorl
pop
lock
jp
adcb
mov
sar
ja
icebp
fs
sub
fsubl
sbb
pushf
imul
popf
mov
cwtl
mov
jg
xor
nop
in
cmp
mov
mov
les
sub
insb
shll
inc
xor
dec
xor
fadds
xchg
xor
mov
jmp
add
and
lret
fbld
out
shlb
fisttpll
imul
xchg
int3
cwtl
pop
sub
lds
sbb
lret
xchg
dec
inc
xchg
leave
and
jne
lahf
xchg
aam
imulb
cli
into
lret
jbe
test
pop
mov
scas
or
dec
adc
leave
dec
sub
in
rol
add
outsl
ja
daa
mov
push
enter
mov
push
into
stos
div
insl
cwtl
loop
add
mov
xor
pop
shlb
push
dec
out
pop
test
aam
mov
pop
lret
push
inc
insl
cmp
inc
cld
sbbb
ror
jge
push
inc
roll
ret
js
cmp
out
ret
lds
in
dec
sub
adc
mov
pop
leave
sbb
pop
mov
in
test
int
sar
add
jns
ret
insb
cmc
es
jg
insl
and
dec
js
mov
and
sub
add
inc
adc
nop
mov
adc
jnp
cmp
sub
inc
pop
sub
push
dec
xchg
andb
ret
xchg
leave
leave
cmc
lahf
in
mov
jne
fstpl
loop
je
outsb
cmp
or
and
loop
div
shlb
and
xchg
nopl
add
test
mov
mov
xchg
sbb
out
lret
and
pop
rorb
adc
cmp
dec
cmpsb
add
imul
arpl
add
mov
inc
cmp
lods
dec
pop
fdivrl
ffreep
stos
lods
and
fdivrs
filds
dec
add
sub
lock
and
add
aas
repz
jnp
xor
out
xchg
lds
sub
mov
mov
hlt
mov
sahf
into
out
mov
xor
cmp
jb
xchg
xchg
pop
jns
sti
rorl
je
pop
pop
jmp
inc
mov
mov
mov
and
jecxz
lcall
cmpsl
in
scas
and
popa
pop
mov
hlt
arpl
popl
rol
pop
test
loop
push
bound
pop
sbb
lea
and
aam
xchg
sub
sbb
sarl
or
ret
jle
stc
fwait
inc
cli
hlt
aam
lock
in
lea
mov
bound
push
push
enter
in
aam
rcrl
cmp
js
pop
mov
fmull
jbe
stos
mov
push
inc
lret
jge
lret
dec
xor
jno
js
imul
jno
popf
mov
popf
pop
inc
add
pushf
repnz
out
pop
in
sarb
xor
cmp
sbb
jb
xor
dec
mov
fiadds
movsl
xchg
mov
out
pushf
lcall
lret
and
lock
push
fsubs
int3
xchg
xchg
adc
mov
add
push
xor
or
fdivrl
mov
out
add
jge
cld
inc
xor
sub
jge
add
gs
lods
stc
daa
inc
sbb
jno
inc
inc
addl
mov
lods
imul
test
stc
jl
sub
loope
xchg
repz
pusha
push
add
inc
in
divl
mov
lret
pop
xor
sub
in
jno
pop
dec
addb
push
add
cmc
loopne
dec
xor
addr16
fmul
fstps
mov
addr16
popf
in
dec
sub
mov
cmpsb
lea
fxch
push
add
aam
pop
pusha
fidivl
popf
xchg
jmp
jg
lea
pop
insb
jb
or
repz
xor
js
cld
add
outsb
std
cmp
rolb
ds
int
ret
jge
push
inc
es
fidivs
mov
jmp
rol
mov
or
rcrb
mov
mov
pop
dec
add
lahf
nop
fwait
sbb
xor
shl
fnstenv
dec
fstl
xor
dec
nop
test
pop
mov
jnp
mov
imul
xchg
push
adc
gs
sub
mov
aaa
xchg
lcall
xchg
mov
adc
jg
ds
cs
or
into
mov
test
sub
out
int3
pop
sub
stos
arpl
mov
inc
xor
bound
or
pop
add
add
rcll
add
jl
pop
pop
sti
in
push
ja
mov
mov
xor
lcall
das
or
pop
in
xchg
mov
jns
into
in
fnstcw
dec
jnp
jmp
scas
jmp
mov
jbe
xor
loope
or
mov
ret
sub
popf
mov
dec
sub
mov
add
xor
pop
dec
imul
sbb
jno
jg
nop
scas
aas
cli
scas
into
lods
aas
jmp
cld
adc
insb
fdivrp
mov
stos
std
mov
push
jge
fsubrl
dec
aas
jecxz
add
test
pop
sub
mov
stos
mov
inc
xor
pop
in
daa
pop
or
and
xor
mov
in
jb
xor
call
fdivrl
outsb
mov
fcmovnb
loope
incb
sbb
jno
and
cmp
add
fdiv
sbb
add
add
cmp
bound
jmp
enter
or
sub
rolb
out
sub
faddl
pop
sub
ljmp
mov
stos
inc
dec
outsb
fnstsw
aaa
dec
xchg
jl
loopne
lock
shrl
cmp
loop
fstps
cltd
ja
fadd
jl
push
push
and
hlt
xchg
fildll
xchg
ret
xchg
xchg
and
mov
mov
inc
sub
das
pop
cltd
inc
push
cli
ret
inc
inc
insl
mov
mov
mov
push
mov
mulb
rolb
jnp
add
mov
xchg
lock
je
push
outsb
mov
mov
loope
xchg
jge
lahf
pop
jecxz,pn
jmp
dec
test
adc
sarb
subb
js
leave
xor
daa
and
jmp
in
adc
adc
out
push
and
fwait
dec
pop
into
inc
mull
cmp
ljmp
or
ret
xlat
dec
pusha
daa
cs
fwait
inc
mov
sbbb
cs
ret
jb
ret
xor
push
int3
sahf
fsubl
cmp
repz
inc
call
mov
popf
seto
push
leave
in
subb
push
push
adc
stc
out
adc
and
and
popa
jmp
popf
cwtl
ds
arpl
test
push
cld
mov
dec
jnp
xchg
cwtl
cmp
mov
xor
adc
fld
cmp
cmc
iret
arpl
sbb
xchg
and
lretw
inc
lock
mov
aaa
dec
ret
cmpsb
mov
or
fwait
inc
rorl
mov
xor
cmc
in
ret
push
aas
call
cmpsl
pop
pop
xchg
sub
ret
sbb
in
loopne
mov
jnp
stc
fistl
out
jecxz
mov
lds
xor
xor
jns
std
mov
sub
xlat
les
xchg
jecxz
push
pop
popa
inc
pop
jbe
fisttpl
ljmp
jp
movsb
std
lods
push
xor
jmp
add
je
inc
inc
daa
sarl
ss
sub
loop
scas
bound
push
cli
aad
push
add
outsb
das
xchg
xor
add
sub
ret
mov
jo
jne
hlt
pop
sbb
push
movsb
test
adc
roll
fs
pop
mov
mov
and
cs
mov
pop
add
push
popf
jae
pop
push
enter
jp
std
int
add
inc
cmp
loopne
xchg
pop
lds
inc
hlt
cs
push
sahf
ss
sbb
bnd
fdivrp
cmp
push
push
mov
jecxz
dec
push
jg
sbb
sub
insl
add
shlb
jae
fninit
daa
rsqrtps
mov
test
mov
fcoms
lahf
loop
push
popf
push
call
xor
loopne
fxch
mov
mov
test
loop
push
mov
sbb
sahf
pop
and
inc
push
xchg
adc
push
cmp
fistl
rolb
xor
mov
cld
ret
xlat
pop
rcll
int
and
jmp
and
in
mov
or
test
std
test
add
push
iret
push
jl
test
aad
push
push
inc
mov
dec
cmp
scas
popa
imulb
imul
iret
je
std
lods
imull
mov
sub
data16
and
xchg
inc
enter
mov
push
loop
push
push
movsb
sahf
testb
movsb
icebp
or
call
and
repnz
push
push
inc
inc
or
sti
add
arpl
fs
jne
mov
add
imul
jecxz
or
lcall
xchg
cltd
cmp
ret
int3
sbb
cmp
or
pop
jl
and
jle
pop
xor
add
les
xchg
push
outsl
jecxz
xchg
xor
popa
subl
fwait
hlt
out
adc
cmpsl
fstps
mov
std
xor
hlt
mov
jnp
add
sbb
push
jb
lahf
xor
jnp
and
sbb
cmp
mov
xchg
add
mov
jbe
xchg
or
xchg
fisttps
mov
pop
ret
cmpsl
popa
jp
push
push
lea
sbb
xchg
push
cmp
shlb
xchg
rcl
sbb
mov
mov
lods
add
rorl
inc
shll
movsb
popf
mov
repnz
inc
enter
imul
rolb
int
lahf
fistpll
shrl
aaa
pusha
add
out
loope
mov
xorl
movsb
jl
cmp
cmpsb
mov
push
hlt
lret
lods
leave
inc
add
mov
adc
push
sbb
sub
xchg
sahf
imulb
cmc
jp
sbb
arpl
rcr
sti
sbb
shlb
stos
sti
in
cmp
cmp
jg
and
in
mov
loopne
insl
enter
xchg
adc
sbb
dec
xor
imul
popf
aas
loope
pop
shll
and
xchg
cld
arpl
and
incl
test
mov
pop
rorb
sbb
in
adc
lret
mov
pusha
pushf
mulb
lock
dec
push
jl
les
or
cld
mov
pop
mov
scas
ss
sub
stos
mov
outsb
xlat
xchg
and
pop
cmp
lret
outsl
mov
mov
ret
xchg
mov
cmp
iret
push
jo
mov
test
cmpsl
xchg
jg
adc
push
add
in
popf
in
adc
mov
push
insb
testl
outsb
in
mov
adc
sbb
push
outsb
cli
insl
stos
inc
mov
inc
stos
jl
lock
push
push
clc
fistpl
imul
sub
divb
es
or
jns
adc
or
jmp
push
insb
xchg
into
adc
sbb
fisubrs
sarb
sbbb
sti
mov
adc
call
sub
pop
xor
dec
and
cmpsb
cwtl
sti
xor
fiaddl
icebp
repz
mov
adc
inc
fdivs
mov
cmp
jge
movsl
lods
lcall
nop
or
es
mov
rcl
stos
xor
test
loope
push
fists
fwait
roll
out
jo
add
mov
cld
xchg
add
ret
jo
ja
cmp
or
xchg
add
inc
dec
and
mov
ficompl
and
mov
push
lret
outsb
out
mov
dec
and
xor
cmp
dec
lret
xor
lock
pushf
mov
int
fisttpll
inc
push
loop
push
push
xadd
out
pushf
xor
mov
xchg
call
dec
jne
pop
mov
adc
imul
mov
fiaddl
stos
popa
mov
xchg
in
mov
fimull
or
jne
pop
rcrb
cmp
outsl
popf
sub
lea
sub
in
test
arpl
clc
pop
aas
lret
mov
sbb
int3
inc
mov
push
mov
rcr
jge
cmp
dec
cmp
or
inc
int
cmpsl
push
rcrb
movsl
push
iret
dec
xor
jmp
in
jo
int
mov
popa
cmp
stos
lret
mov
stc
arpl
hlt
emms
mov
fwait
and
int3
sub
cmc
lret
cmp
cmpsb
aam
ret
mov
xor
jp
loop
dec
sbb
mov
fimuls
xchg
fildll
pusha
sub
loop
sbb
mov
std
push
dec
mov
push
in
or
test
div
lea
adcb
repnz
sbb
xlat
or
scas
mov
cmp
imul
push
jmp
aam
jo
ja
wrmsr
or
shll
ja
pushf
inc
sbb
ret
lahf
xchg
pop
lods
cld
push
out
nop
scas
aam
push
cs
in
jle
push
mov
jae
ljmp
push
and
lea
xchg
jge
push
mov
loop
mov
push
fcomip
cld
mov
cli
add
les
popf
mov
xor
adc
push
les
jge
pop
mov
out
xchg
xlat
mov
and
enter
dec
aas
movsl
cli
pop
mov
leave
clc
or
jecxz
int
clc
cmpsb
sub
push
xchg
add
cs
js
add
pop
movsl
sub
test
in
mov
aas
sti
sbb
mov
xorb
mov
mov
xor
rclb
dec
ja
push
add
rorb
push
dec
xchg
frstor
inc
dec
xchg
pop
aas
daa
mov
outsl
jnp
mov
pusha
pop
lods
add
mov
and
mov
xor
mov
subl
or
es
inc
int
test
aad
sbb
push
mov
xorb
out
pop
aaa
cmc
mov
sahf
es
push
or
or
hlt
and
popa
mov
dec
add
jg
ret
popf
fsubrp
jnp
jecxz
adc
xchg
jmp
cmpl
adc
and
out
mul
lock
pop
or
mov
adc
rcrl
sbb
ret
mov
inc
sub
adc
rcrb
add
scas
lahf
incb
mov
xor
enter
push
dec
dec
dec
shll
push
mov
cltd
xor
out
je
sarb
cmp
mov
addr16
cld
cmc
xor
push
rcrl
jb
scas
bound
lahf
inc
cmc
aaa
cmp
lahf
lret
in
int3
andb
stc
push
lret
decb
jnp
icebp
xchg
push
dec
loop
sub
cmp
xor
xchg
loop
sahf
bswap
gs
add
fcmovb
cmp
mov
out
and
jle
jl
movsl
lahf
leave
nop
mov
xchg
test
and
notb
adcb
cmp
ret
fbstp
test
fs
movsl
data16
icebp
inc
bnd
mov
push
inc
cmc
test
clc
mov
or
jo
jg
xchg
inc
mov
ja
ljmp
popf
mov
and
ss
notl
jmp
gs
inc
sbbl
xchg
fwait
sub
mov
call
adc
sahf
cmp
std
sub
imul
addr16
shl
xchg
sbb
xor
scas
ljmp
mov
inc
and
lcall
addb
jb
lret
push
scas
out
sbb
popa
test
outsl
inc
jl
mov
sbb
outsb
push
lret
ret
sahf
xchg
bound
inc
sbb
jg
lret
xor
sbb
push
inc
repnz
jo
ds
jmp
leave
imul
imul
popf
xchg
push
pop
adcl
repnz
lret
jns
add
inc
adc
iret
mov
adc
scas
into
xchg
adc
lds
pop
fstpl
test
leave
lahf
rcrl
inc
xchg
ret
aam
mov
cmp
fsubp
loopne,pt
mov
cli
pop
xchg
test
mov
fidivl
fld
or
movsl
movsl
std
pop
out
idiv
addr16
je
outsb
mov
sub
mov
js
test
inc
incb
xchg
add
stc
outsl
je
aad
mov
xchg
or
xchg
out
cmp
jl
pusha
pop
mov
mov
adc
leave
sbb
add
pop
xor
pop
jb
es
or
xor
dec
shrb
fs
dec
inc
inc
insb
nop
lds
mov
inc
sub
inc
sbb
lds
out
js
pop
fmull
mov
sub
daa
fbstp
and
ret
inc
push
jmp
inc
enter
add
mov
and
fidivrs
scas
adc
mov
mov
repnz
mov
roll
ret
scas
cs
mov
dec
loope
pop
stos
xchg
xlat
mov
cmpsl
cmp
les
or
sbb
hlt
sub
cmp
lea
adc
cltd
mov
adc
sbb
stos
mov
nop
pop
or
in
jbe
shrl
pop
push
popf
or
adc
sahf
sarb
lret
inc
mov
push
jmp
cld
stos
pushf
mov
outsl
pop
popf
jns
stos
lret
aad
jle
push
iret
in
ret
cmc
outsb
out
sarl
sbb
inc
or
popa
fs
into
adc
ret
movsb
xor
in
sub
push
outsb
xchg
xchg
xor
mov
in
mov
xchg
xchg
ja
jno
das
enter
dec
into
inc
and
ret
mov
jo
into
or
ret
jnp
jmp
mov
add
nop
jbe
inc
sub
cmpsl
sub
cmp
scas
lret
add
fdivrs
out
lahf
scas
mov
add
iret
xor
pushf
xchg
adc
sbb
xor
mov
fstpl
mov
or
jmp
push
scas
inc
or
ja
repz
loopne
in
roll
inc
and
mov
push
cmp
imul
scas
dec
ljmp
and
add
stc
icebp
sbb
add
sbb
les
lret
jl
mov
xchg
or
dec
ja
sbb
int
mov
xchg
xor
dec
daa
mov
in
dec
jle
xchg
cmp
cmpsl
movsb
inc
pop
cmpsb
sbb
rorb
shll
mov
adc
sub
fisubrs
fimull
nop
aad
dec
int3
stos
in
je
int3
ds
push
gs
test
jae
dec
clc
xor
inc
lods
insl
xchg
mov
mov
jne
pop
les
xor
hlt
xchg
adc
adc
and
sbb
mov
shlb
dec
jno
rorl
cwtl
cmc
outsl
push
leave
rclb
gs
daa
addr16
xlat
or
jmp
adc
xchg
jp
jmp
repz
adc
cmp
fstps
add
pop
repz
jo
mov
movsb
mov
ficoms
jg
jb
xchg
in
fsts
xchg
orb
push
scas
adc
sbb
pop
push
cmp
mov
inc
sarb
add
xlat
icebp
add
and
test
int3
add
insl
pop
test
push
xor
out
dec
fimuls
jo
sub
mov
push
mov
mov
push
mov
push
idivb
fnstcw
incl
ds
aad
mov
aaa
shrb
xchg
mov
lcall
and
ljmp
cmp
jp
push
orb
mov
sub
cmp
mov
in
adc
pop
test
inc
incl
insl
out
mov
or
mov
sbb
xchg
das
sub
xor
arpl
daa
jne
sahf
mov
jne
out
ret
inc
jne
int
push
fcompl
mov
jl
mov
dec
sbb
adc
loop
cwtl
xchg
jge
repnz
jb
and
das
insb
andps
sub
xor
leave
jb
add
jecxz
push
test
cmp
mov
fdivs
cmp
mov
lods
xor
in
mov
cmp
jae
in
fidivs
and
out
fbld
xor
inc
pop
adc
xor
push
xor
pop
push
loope
add
xchg
pushf
mov
or
and
pusha
mov
fnstcw
push
lods
adc
daa
cs
sbb
shlb
xchg
dec
add
and
inc
jnp
in
sub
cmp
mov
scas
mov
jg
cwtl
jns
sub
adc
fdivr
pop
cmp
fcompl
vshufps
aad
or
jae
dec
dec
loope
jge
dec
roll
or
in
mov
xor
addr16
fiadds
mov
mov
inc
iret
xlat
xchg
sbb
or
insl
mov
or
inc
dec
stos
mov
lds
cmpl
jmp
scas
clc
lods
cld
pop
das
and
push
das
popa
addb
push
push
adc
push
repz
fmull
into
and
mov
fldt
out
popa
mov
inc
or
or
sub
lea
xchg
shlb
pop
push
mov
sub
ret
dec
adc
inc
test
stos
in
mov
mov
das
pop
xor
push
movl
sahf
out
sbb
lret
in
adc
lods
mov
iret
bsr
fldt
xor
cli
pop
add
fs
pop
stc
daa
xchg
dec
sbb
cmp
jo
dec
insl
test
mov
fsubrp
popf
cmp
push
into
mov
pop
push
and
and
pop
test
repz
loop
loopne
pop
ja
jg
dec
jno
mov
addr16
adc
sub
out
lds
negl
int3
sahf
push
cwtl
movsb
mov
pop
push
pmaxsw
test
mov
out
jae
push
ret
cmpsl
loope
jge
lcall
push
and
fdivp
xor
in
sbb
dec
xchg
pop
out
out
push
push
fdivl
sub
cwtl
push
adc
repz
cld
or
sub
push
jns
int3
sti
jmp
sbb
push
sub
fnstcw
in
repnz
pop
cmpsl
mov
aas
adc
mov
ljmp
xor
dec
and
shlb
xchg
cli
mov
dec
xor
dec
test
push
sub
and
out
aas
test
popf
lret
insb
sub
dec
mov
or
fsubrp
lock
cmc
cmpsb
sbb
xor
outsl
mov
scas
push
mov
rcrl
xor
mov
sbb
inc
ja
cmp
ds
lds
xchg
xor
cmp
or
xor
sub
and
dec
inc
or
mull
jecxz
gs
fst
orb
mov
sti
jmp
sbb
inc
and
insl
in
mov
xchg
mov
push
inc
pushf
pushf
mov
loop
ss
mov
cmp
and
fdivrl
inc
or
into
xor
test
nop
push
mov
aaa
mov
clc
push
mov
pop
nop
cli
mov
mov
clc
stos
sub
out
out
cmpsb
insb
pusha
mov
mov
sbb
js
aas
dec
repz
addr16
inc
mov
xchg
cwtl
mov
aaa
movl
xchg
cmp
std
xchg
loop
dec
shrl
pop
mov
loopne
sub
dec
clc
cld
lret
dec
cmp
test
xorb
xor
xchg
test
std
xchg
jo
lret
adcl
inc
orb
sbb
ret
scas
mov
push
xchg
test
adc
lcall
add
mov
ja
test
mov
fdivrl
push
dec
js
xorl
add
sbb
mov
pop
inc
iret
dec
or
jecxz
inc
add
pop
or
std
jno
sub
loopne
push
cmp
sub
nop
orb
sahf
outsb
and
and
add
xchg
push
jge
movl
xchg
cltd
push
movsl
mov
popf
pop
mov
in
push
sub
out
fnstsw
out
ja
sub
push
sbb
mov
shlb
and
jb
xchg
sub
pop
jge
daa
xor
fsts
or
test
test
fcmovb
mov
imul
rol
lods
pop
lds
xchg
or
arpl
pop
dec
jmp
sarl
pop
pop
mov
sbb
mov
jge
jp
movsb
outsb
mov
js
out
and
lret
mov
pop
testb
sub
push
mov
lahf
test
clc
in
mov
scas
xchg
mov
add
and
cmpsb
mov
andl
xor
mov
into
scas
fisubs
adc
sarl
fwait
lahf
dec
pop
lcall
ror
scas
and
rcll
add
je
or
add
adc
xchg
pop
ret
cs
ret
and
clc
mov
in
test
test
xor
pusha
ret
mov
pop
movsb
loopne
inc
jl
out
ret
xchg
sbb
mov
add
cmpb
int3
push
mov
add
test
and
dec
stos
xchg
sbb
into
push
xchg
lret
xchg
jb
lods
or
or
push
ror
rcll
jecxz
enter
das
mov
sbb
testb
mov
sti
dec
xor
loopne
bound
ds
mov
negb
ret
jb
xchg
mov
adc
movsl
fnstcw
incl
sub
mov
fcoms
pop
add
gs
adc
sub
and
xchg
cmp
mov
fwait
fwait
shll
mov
xchg
sub
jnp
inc
jo
xor
dec
pop
mov
sbb
or
dec
je
pmaxsw
je
enter
scas
jo
inc
or
xchg
jg
pop
fidivrl
mov
lds
mov
test
bound
enter
push
cwtl
mov
hlt
xchg
imul
and
adc
ja
add
jg
push
repnz
test
nop
mov
push
movsl
adc
jecxz
and
sbb
push
jle
mov
leave
pop
mov
mov
test
mov
and
adc
es
push
bound
xor
xor
mov
sbb
mov
xor
xor
mov
int3
das
negb
sti
inc
adc
fs
cwtl
inc
inc
and
inc
pop
pop
mov
xor
repz
sbb
jne
inc
test
push
ror
daa
lock
mov
and
fmull
pop
repnz
in
xchg
push
sbb
cli
xchg
cmp
mov
push
push
ret
shrb
sub
xchg
inc
fwait
or
pop
out
loope
jle
rol
jns
sub
xchg
xor
pop
arpl
movsb
xchg
fdivs
pop
add
shlb
xor
mov
fwait
push
in
add
mov
or
mov
mov
popf
stos
and
loope
xor
mov
hlt
clc
aam
insb
icebp
loopne
sub
into
xchg
sub
cwtl
sbb
imul
inc
dec
adc
mov
fwait
insl
int3
dec
daa
lret
sbb
js
fidivrl
outsl
mov
stos
push
cli
pop
pop
out
xchg
xchg
insl
inc
hlt
mov
cmp
inc
pusha
jo
jcxz
scas
jbe
push
jmp
ret
test
arpl
test
addr16
mov
inc
stos
xorb
loop
ret
arpl
sub
mov
shrb
add
mov
jmp
arpl
xchg
pop
cmpsb
out
call
push
inc
out
xchg
jle
hlt
jmp
push
jbe
incb
enter
adc
loope
dec
pop
fld
mov
repz
iret
cs
not
inc
mov
outsl
dec
insb
mov
push
stos
ja
lcall
ss
and
arpl
je
into
mov
in
xor
sub
cwtl
sub
mov
xchg
into
dec
ljmp
fnstsw
shl
aas
cmpsl
jl
dec
arpl
xchg
mov
fisttpll
aad
mov
loopne
push
push
and
dec
sub
das
fnsave
or
pop
ret
jge
adc
or
jns
inc
xor
in
sbb
lds
inc
jmp
cmpsl
push
scas
ljmp
cmp
add
jmp
and
loope
inc
xchg
jge
das
jp
aas
cmc
lock
xor
inc
mov
test
lret
cwtl
dec
sub
mov
inc
scas
adc
fdivs
js
into
add
rorb
pop
gs
mov
xor
xor
mov
shrb
xchg
out
or
push
lea
or
imul
loopne
add
xchg
inc
imul
jae
les
dec
test
sbb
insb
in
xor
mov
aas
test
cmp
xor
and
push
outsb
fcoml
out
push
jge
pop
xlat
adc
out
ds
push
mov
hlt
cmc
in
inc
lret
lahf
pop
inc
ss
xchg
daa
fadd
ljmp
xor
sbb
fdivl
pop
ljmp
sbb
sub
mov
fistps
sbb
rorl
cmp
and
stos
cwtl
subl
xchg
js
sbb
push
repnz
jle
shl
popf
jnp
inc
js
in
jl
xchg
cmp
rorl
inc
pop
data16
subb
es
leave
or
and
stc
lock
sahf
add
out
int3
push
sbb
xor
js
ret
cmp
pop
inc
mov
mov
or
sub
add
pop
add
packuswb
vhaddpd
push
es
jge
xlat
mov
lcall
sbb
out
aam
iret
cmc
jnp
mov
enter
repz
sti
sbb
movsl
xchg
mov
push
mov
or
jbe
les
xor
pushf
or
fnstenv
ret
pop
pop
test
into
xchg
pushf
xor
and
lods
cmp
pop
xor
mov
rcll
lods
sub
repnz
sub
mov
das
push
dec
loopne
mov
fcompl
outsb
insb
jne
add
aas
mov
mov
and
push
xor
mov
out
ret
lods
test
mov
dec
dec
cs
loop
inc
xchg
sub
inc
adc
lods
sahf
jp
cmpsl
shll
xchg
lds
cmpsb
lods
lea
push
xchg
nop
push
leave
xchg
dec
iret
jmp
sub
or
arpl
jmp
mov
inc
add
cmp
jg
mov
test
fstpt
jle
add
push
sub
mov
dec
pushf
sbb
and
mov
jne
pop
ret
xor
punpckhdq
dec
push
xor
dec
sbb
dec
push
jecxz
and
stos
add
mov
lret
repnz
xchg
push
xorl
or
lea
jmp
jb
add
scas
int3
xor
into
jns
fcomip
daa
fldl
sbb
cmpsb
cmp
jmp
stc
scas
dec
adc
or
out
cmpsl
push
sar
lods
dec
mov
adc
and
test
jnp
cmpsl
cld
test
lret
mov
mov
loop
xchg
add
lret
into
xchg
dec
cmp
enter
in
pop
dec
jnp
push
mov
into
jecxz
inc
mov
nop
sahf
mov
push
and
mov
add
js
or
or
jle
fldenv
in
mov
enter
adc
cmp
mov
leave
lea
push
cmp
or
icebp
mov
xchg
cmp
push
xchg
jl
in
jge
jbe
add
add
adc
repnz
sar
aas
insb
bound
jb
jle
out
adc
or
mov
xor
add
popf
jecxz
sbb
dec
cmp
fwait
push
mov
iret
xchg
out
insb
xor
cmp
cmc
in
stc
cmpsb
cld
mov
leave
pop
sbb
call
add
inc
jecxz
push
mov
mov
ss
cmp
xor
mov
movsb
add
ffreep
or
mov
or
ret
jl
mov
lret
loopne
xchg
nop
xor
mov
into
and
jmp
repz
lods
cld
push
mov
inc
aad
and
in
inc
call
pop
setnp
outsl
inc
mov
fidivrs
add
pushf
cmp
cmp
insb
xor
fwait
sbb
insl
xchg
and
divl
or
les
mov
bound
sub
inc
and
sbb
mov
push
adc
fiaddl
push
ficoms
insb
lcall
andb
sahf
ss
std
xchg
mov
pushf
repnz
or
or
dec
mov
addr16
loop
hlt
add
aas
and
xor
loope
mov
jmp
mov
cs
imul
sub
stc
inc
aam
push
cmpsl
loope
cmp
add
pop
push
in
and
or
int
rcll
int3
pop
cmp
lods
jno
mov
in
pusha
xor
jae
in
push
lds
dec
jnp
dec
and
sbb
push
adc
in
adc
push
sub
fsubp
out
dec
fwait
sbb
stos
inc
jbe
rcl
mov
fcompl
fcomi
mov
cli
mov
mov
dec
out
pop
jns
mov
fmull
add
out
and
pop
dec
shlb
jl
mov
pop
mov
mov
in
sbb
ror
adc
out
mov
inc
loop
imul
xor
mov
lcall
mov
pop
dec
aam
and
pop
cmp
shrl
aad
and
or
imul
test
aam
in
xchg
sbb
mov
mov
adc
pop
xchg
mov
stos
loopne
mov
pop
dec
jg
lret
cmp
test
loop
inc
sub
pusha
pop
leave
dec
mov
jno
or
cmp
aam
in
ja
ss
mov
rcrl
stc
neg
test
ja
test
xor
fs
jb
pop
xor
out
aam
ret
sbb
cwtl
push
lea
in
jbe
dec
pusha
sub
dec
fildl
adc
fistl
xor
fists
lea
xor
push
xor
jp
push
inc
jmp
dec
cld
pop
out
push
sub
loop
mov
mov
hlt
aas
aaa
inc
xor
pop
into
sub
lahf
nop
push
sub
lcall
mov
and
ret
adc
jb
lods
add
sub
and
add
loope
sub
into
lock
mov
or
cmp
in
test
xor
xor
add
inc
ljmp
or
cld
test
imul
cmc
arpl
insl
and
pop
inc
or
sbb
sbb
nop
dec
in
int3
xchg
movsb
mov
les
movsb
xchg
loope
or
repz
or
jp
pop
sub
das
das
outsb
pop
lret
adc
repnz
or
int
lea
xchg
push
jae
jmp
fstps
iret
push
int
push
cmp
mov
mov
cwtl
cld
inc
iret
adc
xor
xchg
sub
xchg
lcall
mov
int
stos
xor
out
cmp
lods
aaa
lcall
in
sahf
push
pop
lods
test
js
mov
cmp
mov
pop
out
or
cmpsl
fcmovbe
add
sub
iret
mov
ret
pop
in
add
lods
xchg
popa
jno
call
test
mov
jp
mov
mov
hlt
aam
sub
mov
push
mov
mov
add
mov
add
xor
pop
jno
fucomp
aas
cmp
adc
aaa
in
iret
mov
jmp
mov
test
cmp
dec
cmp
movsl
inc
jecxz
adc
out
cmpsb
and
jecxz
jo
int3
sahf
data16
adc
punpcklwd
stos
cmp
mov
push
in
cmp
imul
adc
xor
ja
sahf
pop
out
movsl
sbb
jge
push
js
jo
push
xor
inc
add
mov
and
mov
dec
aaa
sub
add
ss
ret
mov
xor
pop
dec
out
mov
mov
pop
or
xor
adc
test
in
mov
mov
xor
sub
pop
bound
pop
dec
testb
cli
fadds
jo
cmc
js
nop
shrl
pop
cmc
push
pop
xor
adc
jl
iret
pop
pop
sub
mov
push
fdivr
adc
or
test
pop
lea
and
lret
iret
jecxz
inc
or
cltd
add
lods
push
pop
dec
cmpsb
xlat
cmp
cld
pop
cmp
aam
jge
jnp
xchg
cli
arpl
fnstenv
xchg
test
gs
cs
loope
or
lock
mov
ret
stos
in
mov
sahf
jmp
les
adc
xchg
ror
jne
push
and
or
movl
cmpsl
testl
pusha
movsb
aad
pushf
push
push
xchg
bnd
mov
dec
dec
addr16
xchg
loop
mov
inc
mov
fprem1
ss
aad
sbb
push
sub
repnz
mov
outsb
push
cmp
enter
pop
mov
xchg
mov
aam
ret
into
mov
pop
pushf
gs
inc
mov
mov
ja
pop
lods
fsubr
out
mov
cltd
insl
inc
test
shr
or
jg
hlt
inc
sub
adc
push
lds
mov
mov
sub
stos
inc
or
sbb
shll
aad
cmpsl
test
in
lods
jns
out
dec
xchg
jne
pop
shl
mov
dec
inc
mov
mov
filds
in
int3
fsubrs
das
mov
lods
push
xor
xchg
cmpsl
leave
and
cltd
pusha
mov
xchg
add
insb
xchg
les
or
xor
ret
mov
negb
lods
push
mov
mov
shll
xor
imul
loop
in
shlb
leave
dec
out
jmp
mov
dec
sub
mov
aam
rclb
cmpb
int3
lods
cmp
sub
test
cmp
fiaddl
mov
imul
xchg
outsb
mov
push
inc
daa
xchg
mov
or
repz
jp
leave
jmp
adc
addr16
movsl
mov
fidivl
jmp
insl
dec
jle
sub
and
js
mov
std
push
je
in
xlat
mov
mov
or
test
and
shll
cvttps2pi
int3
or
xor
dec
inc
and
outsb
jg
mov
scas
sbb
mov
in
out
sti
rcrl
xchg
sbb
xchg
ret
sarl
xchg
cmpsl
jmp
cmc
adc
xchg
dec
loope
and
or
xchg
xor
shrl
fucomip
inc
sub
and
loop
lcall
mov
jbe
fabs
pop
pop
sbb
pop
jmp
mov
jns
adc
inc
shll
shrb
jge
mov
lods
cmp
mov
mul
or
add
icebp
xchg
adc
insb
xor
addr16
mov
lods
repnz
cmpsl
mov
jp
test
cmpsl
js
lods
aas
bound
xchg
mov
cld
dec
add
adc
dec
movb
lods
fadd
lret
xor
cmpl
sub
push
mov
les
imull
inc
out
mov
pop
xchg
test
pop
pop
iret
out
jbe
jle
sbb
adc
push
dec
iret
hlt
xchg
push
inc
cmpsl
or
aam
daa
sub
hlt
push
in
jo
cmp
add
sub
clc
sbbb
sub
xor
xor
pop
jns
pop
scas
mov
loopne
push
fistpll
ficomps
mov
rorb
or
stc
gs
fisubrl
lock
test
jb
scas
xchg
in
outsl
imul
pop
cmp
int3
enter
xchg
es
mov
fstpt
jl
addl
aas
xor
in
fcompl
inc
loopne
sarb
in
sub
adc
cmp
push
adc
sub
enter
stc
gs
out
in
int3
xchg
cmpsl
int3
es
push
inc
scas
mov
int3
fidivs
test
jge
insb
mov
sub
add
popf
fdivrl
jle
adc
lcall
mov
jge
rol
xchg
xchg
xchg
sbb
ret
test
xlat
outsb
adc
fisttpl
fdivl
jmp
jae
lea
out
pop
mov
jp
fidivs
adc
movsb
out
pop
dec
or
cli
mov
fisttps
popa
mov
pusha
shl
sahf
jne
xchg
insb
sti
and
cmp
mov
daa
jbe
mov
push
dec
mov
mov
into
icebp
movsb
and
imul
push
dec
adc
mov
fsts
mov
gs
and
jge
dec
mov
std
push
pop
repz
jle
sub
bound
mov
stos
adc
adc
sub
and
inc
jp
dec
sub
repnz
negl
cmp
lahf
and
test
mov
xchg
push
cld
lods
sbb
pop
mov
add
pushl
xchg
sarb
loopne
ds
insl
fwait
sub
or
cmpsb
xor
push
add
lods
mov
add
insb
xchg
xor
jns
cmp
sbbb
inc
aaa
icebp
fwait
inc
mov
lahf
mov
xor
fmull
lcall
xchg
inc
cmpsb
jge
add
xchg
je
daa
xchg
pop
lcall
popf
adc
xor
cli
push
cld
int3
or
and
dec
mov
inc
lcall
jle
or
cmp
not
iret
test
mov
inc
aam
dec
in
in
xchg
loop
mov
adc
jp
dec
push
mov
mov
loopne
add
and
shrl
repz
dec
mov
cld
ja
rep
fwait
rol
mov
jp
fldl
adc
clc
and
enter
sahf
pop
pop
mov
dec
push
mov
xchg
test
scas
imul
mov
data16
push
out
adc
or
push
jbe
loope
cwtl
mov
push
push
scas
jo
and
movlps
ss
lea
push
add
xchg
inc
sub
cli
shlb
jo
fbstp
dec
daa
lahf
add
jbe
mov
mov
out
outsb
inc
push
out
cmpsb
lods
inc
fnstenv
pushf
add
inc
pop
fwait
test
jmp
int3
ljmp
adc
jo
loope
mov
xchg
or
sub
ja
sub
dec
inc
push
add
mov
nop
ret
mov
xchg
sbb
loope
rclb
push
xor
pop
xchg
cs
mov
jnp
repnz
jns
cmc
pop
stos
mov
les
xchg
pop
fbstp
mov
shll
dec
xchg
int
movsl
lods
or
mov
notb
pop
ror
mov
iret
fimuls
roll
xor
mov
pandn
mov
jp
dec
cwtl
das
pop
dec
dec
push
dec
inc
dec
dec
loopne
inc
pop
and
sub
mov
pop
aaa
add
mov
add
mov
ficomps
movsl
sub
ljmp
out
push
inc
fidivs
add
mov
add
mov
add
mov
add
mov
pop
xchg
inc
fcmovnb
inc
mov
jle
fldt
dec
inc
fwait
insl
sub
aaa
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
lods
push
orb
cmp
