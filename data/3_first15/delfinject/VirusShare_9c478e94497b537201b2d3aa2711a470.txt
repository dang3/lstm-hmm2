add
jmp
pop
insl
mov
dec
pop
iret
lods
fidivrs
scas
pop
jg
lods
dec
addl
dec
xchg
test
into
fildl
push
leave
fdivrs
pop
cmp
inc
out
mov
mov
sbb
fiadds
or
and
lcall
and
dec
pop
adc
dec
addb
out
test
inc
or
xchg
and
inc
fsubrl
loopne
adc
mov
pop
scas
mov
fbld
add
dec
nop
fs
inc
xadd
pop
push
leave
and
pop
sbb
cmp
jmp
or
adc
and
clc
fdivrl
push
cmp
lret
cmp
cld
push
push
xor
inc
xor
mov
sub
jo
cmp
jmp
cltd
popa
daa
out
pop
mov
js
jmp
notb
sti
daa
loope
sbb
ljmp
and
sub
push
jle
push
cli
enter
sub
sub
ljmp
mov
imul
jge
lret
mov
addr16
bound
or
addr16
in
mov
xlat
pop
push
sub
fidivrl
iret
shrl
rcrb
lock
xchg
add
or
aam
push
imul
les
imulb
add
mov
insb
or
cmpsl
lds
dec
dec
fldl
outsb
addr16
pop
cld
faddl
push
jp
xchg
sbb
jno
es
sub
in
sbb
xchg
je
iret
mov
andl
cwtl
jmp
jb
xor
cmpsb
or
and
mov
xchg
sbb
xchg
mov
or
or
idivl
inc
js
sub
add
sub
pop
pop
push
fst
repnz
scas
jmp
stc
cs
cwtl
in
scas
leave
subl
inc
ds
scas
stc
arpl
lds
inc
movsb
scas
fsubrs
inc
sub
push
jne
dec
pop
loope
mov
dec
or
bndldx
add
pop
or
mov
ja
mov
cs
fisubl
inc
mov
add
cmpsb
add
imul
add
and
jmp
add
dec
and
sub
push
mov
jae
push
add
xlat
sub
jnp
aas
add
cmpsl
sub
mov
inc
add
cli
inc
push
cmc
pop
or
mov
fistpll
test
and
jb
out
imul
mov
pop
dec
xor
and
loop
cmpsl
mov
sub
jne
cmp
and
mov
andl
mov
imulb
stos
adc
movsl
fisttpl
push
movsb
out
mov
mov
fsubl
adc
jmp
jg
or
das
and
aad
adc
mov
fwait
test
mov
dec
out
or
fcmovu
or
adc
test
out
xor
cs
jno
pop
add
ljmp
shll
sub
loopne
hlt
inc
dec
cmp
sti
dec
leave
xor
loopne
dec
push
mov
call
mov
inc
sub
cmp
sahf
cmp
lds
pop
lahf
das
jae
push
arpl
mov
sbb
push
sub
repnz
or
sahf
imul
add
iret
negl
lods
pop
add
cmpsl
mov
jle
adc
cmp
push
sub
test
jnp
out
jle
dec
mov
cmpsb
sbb
gs
add
pop
rorl
ljmp
jbe,pt
in
fsubr
das
enter
dec
adc
mov
scas
fistps
cs
jle
in
shlb
mov
movsb
and
lods
or
jmp
lds
test
jecxz
cli
xchg
sub
stos
jp
cs
hlt
mov
xor
sub
in
pop
or
push
and
xor
adc
js
sbb
push
mov
mov
mov
jbe
mov
xchg
sar
ret
jle
fidivs
mov
filds
push
pusha
jecxz
testb
or
inc
mov
js
inc
mov
lods
fcoms
pop
adc
jmp
and
push
fnstcw
ljmp
filds
sub
xchg
sbb
outsb
clc
cmp
test
lods
adc
jno
mov
pop
push
xrelease
xor
in
push
test
lret
sub
jle
ret
mov
cmp
adc
repnz
push
jge
repnz
fisttpl
cmp
push
js
mov
pop
adc
sub
jecxz
xor
and
cwtl
aad
push
cmpsb
jmp
imul
movsb
iret
in
jle
lcall
dec
sub
and
inc
fdivrs
out
and
xor
shl
mov
outsb
sahf
ds
mulb
std
lret
cmp
shlb
out
aas
mov
pop
jbe
fs
lahf
mov
sti
and
inc
cld
and
push
iret
mov
pop
add
dec
std
out
repz
mov
je
pop
cld
fldcw
ljmp
sub
push
xchg
and
bound
push
repz
push
mov
xchg
mov
and
jle
idiv
test
adc
xor
pop
and
xchg
mov
or
hlt
shl
xor
xchg
xchg
sbb
int3
add
sub
sbb
push
push
lret
xchg
jge
mov
or
outsl
addr16
ret
pop
loopne
mov
cld
out
test
cmpb
jl
and
repnz
jne
jecxz
cmc
adc
icebp
xlat
xchg
fwait
cs
mov
mov
add
push
push
call
sbb
rclb
shl
stos
add
jne
lahf
inc
aam
idiv
sbb
ss
push
psubb
add
mov
xchg
push
jae,pn
and
push
cld
adc
les
jmp
mov
sub
or
mov
ficompl
mov
mov
mov
fidivrs
movsl
mov
mov
add
pop
stos
cld
loope
cmc
in
in
nop
and
ds
subl
push
aas
popf
mov
shll
push
cltd
pop
orb
data16
xor
lahf
loope
addr16
cltd
xorb
xor
sub
sub
fcoml
fmulp
movsl
dec
jb
add
mov
cmp
jmp
es
pop
sub
xor
push
jno
cmpsl
push
push
and
imul
push
andl
ja
xor
jmp
lcall
mov
push
fs
fcoml
movsl
in
sti
sbb
movsb
xor
mov
cmp
mov
dec
sub
push
cmp
leave
jp
ss
jp
dec
addr16
mov
jmp
lods
nop
xor
and
lahf
pushf
mov
sbb
pop
add
mov
dec
jg
adc
shll
inc
cmp
aas
push
hlt
and
xor
arpl
lock
pop
cli
outsl
sub
sub
sbb
mov
mov
sbb
sub
fidivs
nop
pop
pop
dec
mov
aad
xchg
inc
mov
xchg
cmpl
js
pop
aas
add
bt
push
daa
cmp
addb
jmp
mov
inc
push
iret
xchg
or
in
loopne
leave
and
push
mov
arpl
pushw
movsl
cmovl
lahf
and
lds
lahf
stc
loop
and
popaw
sbb
mov
scas
dec
fwait
mov
out
rorl
lods
ret
cmpsl
scas
std
insb
sahf
cmp
shrl
xor
adc
scas
and
outsb
fadd
xorl
push
push
fcomip
xor
or
stos
scas
push
jnp
or
push
into
and
paddusb
aaa
push
pop
in
clc
aad
push
jle
xorb
out
les
out
lret
out
jae
sub
mov
add
mov
arpl
push
in
iret
sbb
ds
mov
out
cmp
mov
insl
notb
jge
pop
loopne
insb
lcall
shll
daa
push
add
out
cmpl
mov
outsb
loope
dec
icebp
insl
cmp
sub
in
test
cmp
xor
neg
leave
xor
int
jmp
incl
stos
add
in
jbe
xor
xor
aaa
mov
aas
lahf
push
das
jno
jno
lret
lahf
push
insl
xchg
fsubs
test
scas
lahf
push
lds
dec
mov
dec
mov
mov
in
sbb
mov
inc
iret
mov
dec
aas
mov
repnz
movsl
jecxz
xchg
imul
shlb
adc
icebp
lahf
xor
mov
and
xchg
into
pop
xchg
rclb
mov
dec
cli
xor
xor
and
popa
xor
add
fsts
and
int3
mov
outsb
and
repnz
shr
xor
repnz
mov
xchg
jae
std
out
mov
pop
inc
fucomp
testb
cmc
inc
mov
and
lret
cmpl
pop
jbe
and
pop
movsb
insl
ret
fs
cltd
and
fwait
aaa
sbb
test
and
sub
cld
lahf
sbb
mov
std
dec
cmc
in
imul
pop
arpl
sub
and
adc
cmp
test
stos
mov
cli
xchg
and
adc
ss
fcomi
cmp
insl
int
andb
or
rorb
cld
pop
ret
dec
push
movsb
in
mov
shll
ss
add
lea
jb
xor
mov
aad
sub
xchg
push
mov
mov
adc
sub
cmp
scas
in
and
sbb
movsl
stos
lret
pop
lock
or
push
int
in
mov
cmp
jns
nop
push
in
add
dec
lahf
loopne
ljmp
pop
sbb
jmp
cmp
cmp
in
in
jae
cmpsl
js
loop
sub
push
inc
xchg
sub
test
push
jmp
dec
iret
bound
adc
and
inc
ds
push
imulb
mov
xchg
pop
pop
sbb
popf
sbb
repz
xor
div
nop
icebp
fidivl
cs
in
and
std
inc
mov
bound
stc
sub
mov
ss
dec
insb
rorl
cmp
mov
popa
sbb
fdiv
pop
mov
cmp
shl
test
aas
cmp
enter
mov
cmp
fsubrs
in
out
xor
inc
inc
fucom
mov
shr
ljmp
out
je
sub
push
cmp
outsl
loop
pop
iret
and
fstps
pop
and
dec
leave
or
xchg
and
push
loopne
dec
xchg
fs
mov
lret
test
jg
int
xchg
push
in
loopne
lahf
sbb
xchg
sbb
outsl
sahf
mov
pop
js
in
popl
cmp
push
add
lock
pop
sbb
arpl
das
outsb
cltd
popf
mov
cmp
push
add
stc
and
dec
jb
rclb
push
push
add
les
jns
mov
push
pop
adc
dec
pushf
cmp
mov
jnp
scas
pop
loop
mov
and
sbb
pop
cmp
mov
fsubl
add
mov
cmpsl
mov
outsb
into
or
ret
sub
lahf
cmp
popa
rcr
shll
mov
aaa
rcrl
cli
test
ds
mov
pusha
push
add
cld
call
out
mov
out
and
add
mov
gs
arpl
lret
mov
sub
pop
xor
gs
scas
mov
inc
inc
pop
lret
mov
lahf
add
out
add
push
pop
dec
mov
test
rcr
dec
fcompl
push
mov
push
sub
and
movsb
sbb
mov
mov
mov
mov
out
add
ret
aam
fsubp
cmpsb
jbe
mov
lahf
fcoml
or
fwait
xor
test
dec
test
mov
jl
in
adc
dec
int
xchg
mov
pop
mov
ret
mov
sub
data16
mov
lcall
in
dec
jp
add
test
in
cwtl
repnz
pop
shl
std
jle
aam
push
mov
adc
jo
mov
pop
iret
mull
mov
jb
test
fisttps
dec
mull
outsl
or
negl
xchg
es
pop
mov
mov
in
cmp
sbb
stc
test
cmpsl
jl
loop
jge
enter
stc
jne
sub
mov
movsl
and
mov
popf
pusha
adc
cmp
jnp
dec
popa
add
mov
data16
rolb
inc
or
xchg
or
out
out
dec
int
and
xchg
sar
xlat
andl
pop
jg
pop
pop
inc
test
lahf
outsb
mov
xchg
cmp
inc
cmc
outsl
mov
adc
sbb
add
out
in
and
orl
in
bound
cmp
arpl
bound
adc
popa
xchg
mov
and
jle
cmpsb
imul
adc
adc
mov
jmp
adc
nop
xchg
sub
mov
xor
stc
sbb
jg
jp
push
sahf
test
cmp
push
out
data16
or
mov
add
inc
jmp
mov
mov
and
xchg
mov
loope
inc
inc
adc
lea
loop
mov
sti
inc
xor
inc
out
call
adc
inc
dec
sub
pop
subl
sti
mov
xchg
sub
lods
mov
mov
sub
add
sub
lods
loopne
outsl
inc
mov
or
mov
dec
cmpsl
sub
push
and
arpl
mov
xlat
mov
push
adc
or
fbstp
fdivrs
sbb
xchg
out
mov
pop
or
popa
stos
mov
das
int
dec
test
fs
or
aam
mov
out
imul
loopne
pop
cmp
xor
mov
js
pop
mov
lods
or
inc
aam
inc
imulb
jno
jge
cwtl
xchg
sti
jae
xor
or
mov
xchg
mulb
jmp
repnz
jno
cmp
sbb
aad
cli
mov
adc
sbb
enter
xchg
movsl
or
push
aad
and
imul
in
push
dec
rorb
cld
pop
dec
stc
jb
seto
mov
push
or
arpl
cld
imul
jo
dec
int3
cmp
inc
pop
in
sbb
xor
dec
scas
fdivl
xchg
jbe
or
inc
jg
out
xorb
inc
lret
xor
lods
sub
jecxz
daa
sbb
iret
cmpl
sbb
pop
cld
bound
push
in
dec
adc
outsb
xlat
idivb
in
addr16
xchg
mov
pop
mov
and
xor
push
mov
mov
dec
add
loopne
or
scas
hlt
arpl
or
pop
and
pop
and
mov
ficoml
cwtl
add
rcll
inc
sbb
out
pop
loopne
push
jae
push
popf
ret
pusha
repnz
fsubs
pop
pop
xchg
jge
and
lods
adc
add
xchg
aas
lods
negb
dec
push
mov
shlb
sub
stos
add
fimuls
iret
mov
and
inc
pop
mov
push
add
mov
add
out
add
jg
popa
movsl
outsb
cltd
in
loope
xor
mov
data16
sub
push
dec
inc
jno
sub
add
pop
lahf
sub
mov
jb
lock
lcall
repz
test
mov
and
in
imul
fsub
add
in
and
mov
xor
cli
push
testl
mov
stos
repnz
and
jae
push
adc
imul
mov
ret
ficoms
fwait
add
xlat
and
movsb
dec
or
icebp
fdiv
xchg
test
push
in
in
outsb
out
mov
push
or
sub
test
xchg
scas
mov
out
jl
jmp
mov
fucom
sbb
xchg
adc
lods
imul
inc
js
xor
aas
and
xchg
out
or
cmp
pop
daa
ret
lahf
xchg
or
out
dec
push
aaa
arpl
and
or
out
push
jne
fldenv
add
outsl
mov
data16
inc
mov
lock
and
add
pop
sbb
mov
mov
jmp
fs
mov
fwait
pop
stc
fiaddl
mov
ret
push
fistpl
ds
mov
arpl
or
in
jne
out
mov
jb
aad
ret
sahf
and
movsb
push
insl
leave
push
jg
lret
mov
adc
add
mov
dec
rol
sub
das
push
into
sbb
repnz
or
pop
lret
mov
loope
pop
outsb
push
imul
outsb
movsl
jmp
dec
sub
cwtl
push
inc
xchg
inc
cli
lods
jmp
rcll
pop
popf
and
sbb
scas
mov
aas
es
sub
jge
mov
cmpsl
mov
fimuls
sub
mov
push
mov
lods
fidivs
add
out
add
push
push
outsb
ret
movsb
pop
xchg
mov
mov
sub
xchg
inc
aam
push
jl
adc
jge
add
jmp
dec
fistpll
xchg
lds
mov
fisubl
xor
dec
xor
es
stos
xchg
mov
and
into
sbb
cli
xchg
jp
ret
mov
sbb
ss
dec
es
and
pushf
mov
cltd
pop
test
fwait
stos
dec
jmp
es
xor
xor
cmp
cmp
orb
test
in
fimull
mov
sub
mov
adc
lcall
push
dec
test
out
or
outsb
outsl
addl
inc
mov
enter
xchg
ficoms
mov
xchg
push
mov
cs
lods
jmp
sub
out
push
lods
mov
jnp
xchg
mov
xchg
arpl
cwtl
lds
mov
dec
fimuls
sahf
cmp
or
dec
or
lret
dec
sub
and
dec
or
rclb
adc
xor
fldl
dec
and
pushf
and
sub
sub
ret
mov
push
hlt
in
clc
repnz
mov
dec
xor
or
push
pop
stos
in
aaa
mov
mov
push
ss
out
repz
icebp
push
inc
pusha
fcmovne
cld
dec
ljmp
inc
loopne
shll
jg
rcrb
test
test
testl
in
xor
cmpsb
ret
sbb
cmpsl
jnp
pop
adc
hlt
sbb
fsubrl
xchg
jl
inc
and
dec
andl
out
mov
mov
popa
in
iret
push
nop
hlt
add
fsts
sub
in
jmp
cmpsl
or
sbb
and
and
sub
or
xor
mov
repnz
mov
and
pop
sbb
mov
add
and
mov
mov
pop
add
cmpsl
add
sub
shl
hlt
add
push
and
popa
aam
adc
jae
xor
and
jb
mov
add
addr16
sbb
fstpt
std
jl
jne
sbb
out
adc
or
fimull
fiadds
scas
xchg
test
mov
xchg
cmp
or
cmc
sbb
leave
jl
push
pop
sbb
dec
cmp
call
push
push
push
dec
push
gs
pop
bound
in
push
sbb
les
or
in
sahf
arpl
das
les
cs
mov
xchg
mov
mov
es
leave
mov
and
ss
in
push
and
sbb
mov
and
aad
repz
dec
mov
adc
xor
jecxz
nop
cmpsb
add
mov
mov
jmp
xchg
push
out
hlt
mov
es
gs
pop
xor
ss
pop
cmp
dec
lahf
out
adc
nop
pop
imul
subl
sub
xchg
loopne
add
xchg
sbb
loopne
cmp
in
pop
dec
stos
adc
or
fistl
daa
repz
and
jnp
imull
mov
cmp
pop
inc
inc
jp
xchg
fucomip
sbb
popa
ret
mov
inc
add
push
subl
fucomip
inc
cmp
in
push
push
jecxz
daa
jae
daa
scas
inc
leave
and
fiadds
hlt
out
ja
nop
xor
pop
clc
leave
popa
xor
and
mov
loopne
xchg
ljmp
std
jbe
push
push
stos
add
in
cmc
andl
test
lcall
xor
and
das
sbb
pop
movsb
xor
dec
daa
inc
dec
xchg
lds
aas
adc
in
das
xchg
and
sahf
daa
and
das
xlat
loope
cmp
scas
xchg
test
cmpsl
sbb
pop
and
mov
out
in
or
and
push
push
pop
enter
mov
xchg
adc
mov
mov
repz
std
or
and
jp
mov
mov
push
fstpl
cld
jbe
jg
jge
jb
test
sahf
pop
mov
push
addr16
shlb
sti
inc
jb
and
lods
mov
push
dec
daa
push
je
jmp
out
repnz
in
scas
jb
incb
add
repz
adc
sub
sbb
mov
out
xchg
add
cwtl
and
call
int
das
and
add
sbb
and
mov
in
dec
and
in
pop
out
xor
xchg
addr16
ret
loopne
xor
cltd
jne
mov
push
lods
adc
out
dec
xchg
or
call
push
push
push
xchg
pop
into
loope
and
test
jmp
xor
inc
lcall
and
mull
xchg
call
xchg
xor
mov
mov
sub
add
aaa
sti
in
jmp
cmp
sub
stc
mov
test
pop
sahf
xchg
inc
lock
pop
sub
mov
vmovhpd
stos
outsb
fstl
jecxz
push
dec
scas
push
and
add
in
imul
sub
ds
pop
mov
pop
mov
add
out
aaa
push
pop
ret
xlat
xchg
shlb
adc
je
adc
out
fiadds
xor
cmpsb
pusha
push
fsubp
jmp
sub
iret
jmp
lods
stos
pop
or
test
sbb
stos
xor
cmp
test
cmpsl
cmp
jl
mov
pop
cli
dec
ja
sti
loopne
mov
sbb
test
shrb
leave
ja
sahf
xorb
pop
jg
pop
add
bound
cmc
add
sub
out
fwait
push
orb
push
cli
push
ret
stos
dec
dec
cmpsb
push
lahf
mov
add
fldenv
and
mov
in
out
pop
fidivs
xchg
pop
xchg
push
fcmovb
adc
mov
inc
jae
loop
sub
fldenv
mov
xor
mov
stc
xchg
pop
push
test
sbb
sub
movsl
add
mov
fwait
add
andb
lods
fnstenv
sbb
or
jmp
loope
mov
int
jmp
ds
and
mov
pop
in
mov
int3
or
jmp
pusha
add
test
xorl
jecxz
pop
xchg
ret
lahf
gs
pushf
cmp
out
dec
cli
fldl
or
mov
xchg
int
mov
sub
mov
sti
cmp
ret
push
push
jle
orb
loop
enter
loop
or
lcall
nop
jae
mov
jge
mov
sbb
and
mov
rcrb
jg
jmp
and
xor
inc
and
jmp
pop
push
arpl
dec
push
adc
inc
sti
dec
xchg
or
or
cli
loopne
xchg
dec
mov
push
mov
popa
xor
push
cmp
jl
add
sbb
mov
ret
inc
pop
adc
pop
test
imul
dec
sub
imul
dec
out
sub
arpl
inc
addb
inc
sbb
loope
push
out
sub
or
jb
add
int
lods
ret
js
and
dec
sbb
mov
sub
hlt
out
sbb
sub
pushf
jle
push
movsl
pop
loop
clc
xlat
mov
cltd
imul
mov
outsl
bound
lods
sub
push
adc
jmp
xor
xor
xchg
adc
and
hlt
pop
pop
jnp
cld
stos
add
in
push
hlt
outsb
fisubs
mov
loope
adc
shll
sbb
dec
push
leave
sub
mov
jg
gs
xor
les
pop
ret
cmp
sbb
sarb
daa
ret
inc
lods
adc
xor
pop
fmull
sub
or
mov
add
test
outsl
cli
adc
and
mov
mov
stos
and
mov
xchg
test
jns
add
popa
cs
or
test
cmc
insl
stos
xchg
or
loop
lcall
jmp
sahf
cmp
leave
mov
adc
push
and
jae
sbb
int
xor
int
mov
xchg
jle
loope
push
mov
dec
xchg
pop
movsl
iret
sub
mov
dec
mov
nop
add
lods
insb
nop
pop
loop
lahf
pop
cmp
pop
mov
xchg
setbe
jecxz
ficomps
popf
arpl
xchg
lret
enter
sbb
inc
test
or
or
add
xchg
pop
xor
mov
ret
xor
mov
or
jns
mov
cmp
test
inc
cli
mov
sti
sarb
stos
roll
xlat
shr
je
xor
ss
pushf
inc
shl
push
jns
dec
cmp
dec
les
mov
icebp
insb
ljmp
mov
push
iret
sub
mov
loopne
push
mov
and
lods
shrl
fcompl
cmp
dec
xchg
daa
aaa
jp
sub
repnz
sahf
push
int
or
xchg
jne
xchg
fsubrl
sbbl
pop
leave
sub
fs
jecxz
push
mov
popf
and
mov
cli
fs
inc
stc
movsl
pop
mov
xor
je
shrb
in
movsb
hlt
and
xchg
out
ret
add
mov
ss
faddl
xchg
inc
insl
or
inc
push
pop
mov
pop
aas
sub
adc
movsb
adc
sub
lret
push
or
scas
fistl
leave
rcrb
xor
cmp
xchg
cwtl
repz
xor
jecxz
xor
and
sbbb
or
cmpsl
xor
lret
xchg
addl
dec
add
cmc
jle,pn
mov
pop
inc
stos
xchg
ficoms
sub
clc
mov
dec
push
ss
bound
xor
sbb
push
jae
push
outsb
jmp
aam
es
test
jno
fistl
mov
ss
and
repz
mov
in
lods
lcall
enter
push
pop
mov
push
out
mov
mov
dec
lret
out
cmp
adc
fidivrs
xor
sbb
sti
roll
pop
sub
mov
aas
mov
faddl
cmc
ljmp
xchg
or
rcll
pop
adc
sub
add
bound
sub
adc
lock
leave
add
push
stos
rorl
or
out
xor
fisubs
xchg
push
insl
test
mov
out
add
xchg
data16
std
outsl
das
inc
mov
add
data16
mov
xchg
sub
ret
jnp
sahf
add
inc
xchg
push
fdiv
test
ljmp
or
les
cli
and
fbld
xchg
stos
pop
insb
js
bnd
mov
out
mov
mov
cwtl
clc
loop
or
out
dec
notl
inc
xchg
inc
pop
mov
pop
push
fdivl
pop
test
adc
mov
mov
jmp
sbb
in
xchg
insb
cmp
adc
jmp
shl
mov
sub
sbb
push
adc
jg
rcll
add
inc
xor
push
ftst
pop
cmp
test
in
xor
xor
inc
out
or
add
das
mov
int3
inc
sbb
cld
test
jmp
pop
push
xchg
cmp
add
lods
xchg
lcall
sbb
jno
mov
or
mov
fs
xchg
and
xchg
sub
jns
xor
psrlq
push
mov
es
fld
out
or
dec
dec
sbb
sub
aad
and
out
sub
iret
sub
mov
lock
sbb
mov
inc
imul
push
scas
popw
aad
jecxz
iret
fidivrs
aad
jle
mulb
adc
pop
jge,pt
jne
ds
mov
popf
sbb
dec
into
in
jb
pop
ficoml
sub
inc
dec
adc
imul
add
push
xor
sbb
sbb
sub
dec
sarl
push
mov
lret
int3
add
test
pop
jo
int
cmpsb
inc
pop
sbb
in
hlt
sbb
insl
loope
ret
repnz
sbbl
mov
xchg
negb
sub
popa
bound
fcompl
push
aas
sub
inc
fsubl
or
frstor
mov
dec
imul
or
push
xchg
sub
cmpsb
lret
lret
inc
cmc
int3
test
es
inc
vaddsubps
sbb
push
mov
ja
loope
mov
mov
sbb
sub
sub
inc
mov
pop
inc
mov
jns
mov
or
mov
pop
loopne
xchg
outsb
inc
cmpsb
sub
or
mov
lods
xlat
mov
decb
mov
enter
and
bound
xchg
and
inc
inc
hlt
add
pusha
sbb
imul
lods
fdivrs
xor
mov
and
xor
fwait
outsl
mov
stos
push
mov
xchg
pop
dec
jb
outsb
mov
push
and
leave
mov
mov
pop
data16
les
pop
scas
dec
mov
sub
add
imul
das
add
roll
mov
invd
adc
lods
sbb
pushf
add
sub
push
sub
cmpsl
add
mov
aaa
cmp
sbb
ja
xor
sbb
sbbl
and
lret
icebp
lods
add
in
dec
xchg
pop
lock
jmp
lret
ds
xchg
sub
loopne
jecxz
je
add
jl
pop
mov
fdivrl
and
sti
in
xchg
push
pop
adc
inc
rorl
aam
sbb
arpl
mov
in
pop
sahf
insb
sub
ljmp
sub
aad
cmpsb
cmpsb
sbb
jp
lods
pop
dec
xor
jb
dec
dec
mov
in
push
sbb
insl
cmc
les
mov
dec
in
aas
adc
push
je
pop
test
jp
pop
sub
sarb
out
lcall
lock
and
daa
bndstx
xor
fsubrp
or
cs
adc
xchg
sbb
stc
mov
jmp
mov
push
lret
out
in
sti
cmp
outsl
arpl
adc
gs
ja
out
sbb
mov
pushf
adc
sti
sbb
inc
adc
jge
jo
inc
adc
bound
lds
or
adc
rorl
mov
jl
out
icebp
mov
aad
push
mov
dec
cmp
scas
or
mov
dec
xor
mov
xchg
xchg
lock
lret
mov
fldt
cmp
jge
out
mov
aam
mul
sub
mov
mov
jbe
les
pusha
incl
pop
jle
or
add
shlb
dec
imul
jbe
or
or
and
push
shll
fidivs
mov
jnp
movsl
push
xor
or
fistps
out
cwtl
jo
test
jge
stos
dec
xor
and
mov
mov
inc
push
icebp
dec
xor
lret
outsl
ret
jecxz
or
pushf
and
into
divl
addl
mov
pop
out
mov
dec
in
data16
sub
repz
pushf
out
mov
rcr
out
out
add
ljmp
insl
lcall
fldl
jae
sbb
pop
jl
int3
ja
jmp
cmpsl
cmp
or
mov
mov
and
xor
shll
gs
pop
inc
mov
pop
mov
setno
test
inc
xor
fcoml
jno
add
and
or
ss
cld
test
mov
js
inc
les
pop
imul
jmp
jb
jge
push
rol
insl
lcall
xchg
add
daa
mov
push
pushf
cmpsl
es
mov
imul
mov
pop
dec
ljmp
xor
std
fisubs
mov
mov
leave
mov
add
cmp
xchg
leave
sbb
out
mov
cmp
jecxz
outsl
std
pop
push
cwtd
or
das
and
daa
psubq
pop
push
insb
fisubrl
stos
add
add
faddl
imul
and
mov
push
mov
push
xor
out
jmp
fstpt
xorl
scas
outsb
xchg
inc
xchg
and
or
sub
or
and
cs
jne
xchg
in
jb
outsb
push
ljmp
mov
out
mov
jb
mov
in
mov
and
jae
jecxz
mov
jg
and
fiadds
xor
and
push
mov
and
cmp
cmp
aas
mov
xor
inc
inc
ljmp
cli
popa
xchg
mov
push
icebp
std
shl
sbb
add
push
mov
lcall
jl
add
or
xor
insl
adcl
push
lods
add
fs
and
cmp
fiadds
xchg
mov
inc
dec
sbb
mov
ss
and
mov
in
aam
mov
fldcw
loop
mov
inc
xor
cmp
and
cmp
outsl
lock
jo
jecxz
inc
dec
add
in
adc
adc
das
mov
mov
std
test
sub
mov
or
jmp
stos
pop
adc
sbb
xor
das
mov
dec
or
push
test
mov
jl
iret
stos
js
sbb
pop
dec
scas
xchg
clc
popf
enter
cs
mov
sbb
jg
adc
fcoml
xor
stos
sar
jmp
loopne
sti
and
movsb
adcb
mov
loopne
push
jecxz
jb
gs
popf
adc
pop
repnz
and
loop
push
push
xchg
ret
xor
pop
lret
sbbb
push
jo
in
sbbb
jae
adc
cmp
loope
loop
fcmovnb
add
je
pop
or
sub
mov
in
js
push
adc
fcmovu
mov
ret
xchg
lret
cmp
mov
outsl
insl
adc
shl
test
movsl
cmp
add
mov
xchg
mov
test
sbb
sti
xchg
addb
sub
dec
sub
lods
xchg
test
and
xchg
add
cmpsl
lahf
mov
push
and
inc
add
es
mov
or
clc
xchg
xchg
or
orl
cmp
push
dec
testb
cmp
push
cmp
nop
ja
sbb
adc
inc
fs
cmp
push
adc
icebp
and
mov
and
pop
fs
and
clc
leave
xor
cli
mov
cwtl
add
in
sub
ja
call
or
add
inc
std
std
aad
jp
imul
xor
inc
stos
adc
and
sbb
cmp
js
inc
popa
mov
icebp
adc
xchg
scas
in
sbb
jmp
jo
in
xor
mov
lods
dec
movsl
pushl
clc
xchg
cs
xchg
mov
jle
add
xor
cmp
mov
stos
and
lds
cs
scas
mov
dec
inc
jg
xor
sub
jae
cmpl
mov
mov
cmc
push
xor
cmp
jbe
jnp
incb
lds
out
xor
test
fsubr
js
iret
es
dec
aaa
enter
jmp
inc
mov
push
push
xchg
insl
xor
push
inc
ss
popa
jmp
dec
lahf
or
ss
xchg
sbb
cld
and
xor
xlat
in
insl
push
jmp
incb
in
rcrb
leave
ds
sahf
xor
xor
mov
lods
dec
test
and
repz
sbb
jmp
icebp
ljmp
aad
jmp
dec
lock
mov
cli
in
ljmp
out
adc
jnp
jle
sub
inc
daa
jnp
fldcw
lret
add
mov
cwtl
mov
rcrl
lock
data16
cmp
int
scas
push
mov
xor
xor
xchg
and
fsubr
outsl
xchg
lods
jmp
dec
es
aaa
sbbb
adc
jle
stos
ret
dec
out
inc
jbe
subl
add
out
dec
push
mov
jnp
dec
pop
xchg
rcll
ret
xchg
jmp
jns
int
or
jo
aad
aaa
mov
out
dec
stos
dec
hlt
adc
cmp
mov
andl
xchg
int3
ljmp
cmp
test
dec
ret
or
pop
or
adc
inc
imul
cld
cmpsl
and
mov
nop
mov
out
loop
cmp
aas
jne
daa
cmp
dec
inc
inc
mov
jmp
daa
repz
inc
lret
out
xor
cmpsb
inc
and
pusha
or
cs
fstpt
stos
dec
cli
cmp
pop
lcall
fisttps
push
in
out
pop
mov
cs
data16
outsb
and
outsb
stc
and
pop
and
into
sbb
dec
pushf
or
pop
ficoml
push
fwait
cmpsl
inc
fldt
jno
les
xchg
inc
jp
mov
push
sub
adc
shlb
mov
sub
pusha
out
adc
pop
xor
cltd
into
dec
dec
xchg
loope
scas
xor
lock
mov
test
sbb
fisubrs
incb
add
add
shl
icebp
jmp
push
fdivrp
sti
dec
mov
add
out
shl
sub
rcll
jmp
repnz
xchg
cmc
mov
jae
inc
push
sub
jne
in
jo
and
xchg
jmp
push
ret
push
cmpsb
lds
xchg
inc
xor
jbe
mov
cmp
inc
pop
push
mov
outsb
popw
out
loope
dec
pop
out
mov
faddl
dec
adc
loop
test
xchg
ds
in
sbb
int
scas
je
cli
dec
out
mov
loopne
mov
inc
dec
stos
jnp
mov
stc
cmp
xor
out
xor
repz
inc
lret
push
and
adc
andb
mov
fisubs
sub
loop
fs
call
pop
lret
jnp
imul
shl
insl
std
cmp
pop
push
lods
stos
jno
ret
es
xchg
mov
inc
mov
mov
jmp
add
int3
in
psrlw
aas
pop
in
lahf
les
and
bound
ljmp
loop
imul
fnstsw
and
lahf
cmp
mov
mov
test
fs
fidivl
or
rcll
shlb
bound
cld
rorb
clc
fisttps
mov
add
daa
add
cs
mov
out
jbe
ret
lea
je
jmp
or
push
scas
in
ds
cs
xor
dec
or
mov
je
jnp
dec
xchg
pop
stos
adc
pop
addr16
cmc
jl
push
out
out
mov
adc
mov
mov
out
and
je
mov
loopne
mov
jmp
in
in
mov
xchg
and
xchg
cld
inc
inc
out
cmpsl
pop
mov
add
xor
pop
mov
stos
fucomp
jge
shll
cltd
cmc
push
int3
int3
call
sbbl
and
and
outsb
aad
inc
repz
sbb
mov
or
shrl
sbb
out
inc
sub
in
hlt
cmp
adc
es
xchg
in
outsb
and
addb
rcll
cmpsl
and
mov
mov
data16
cmpsb
jb
dec
cli
std
pop
and
pop
xor
int
pop
out
mov
cmp
sub
add
cmc
or
mov
mov
mov
cmpsb
xor
daa
daa
lds
daa
in
mov
inc
mov
mov
cmc
push
cs
in
pop
mov
xchg
or
and
ss
sarl
mov
inc
mov
imul
sahf
mov
ret
and
lock
or
rcll
and
out
sahf
div
jns
notl
das
sub
ret
dec
sub
aad
adc
push
bound
mov
xor
ret
aas
stos
xchg
push
data16
sbb
adcb
cs
add
sbb
pop
sbb
stos
andl
daa
mov
xor
push
in
lahf
das
stos
sub
mov
or
mov
stos
psubsw
xor
lock
cmp
imul
dec
cmpl
lahf
dec
rol
push
call
insl
negb
in
adc
jmp
outsl
sub
aas
jge
insl
rcrb
push
and
lret
imul
xchg
in
sbb
or
mov
out
xlat
mov
adc
mov
push
add
add
std
and
clc
pop
pop
push
fs
mov
sbb
jl
inc
stos
cmp
stos
rcll
std
add
mov
out
dec
cmp
cmpsl
mov
aam
fdivrp
shrl
jge
sbb
sub
imul
icebp
push
jne
into
setb
nop
shrb
inc
sub
cmp
arpl
cmpsb
loopne
andb
daa
enter
push
imul
push
jae
ljmp
or
in
ss
loop
or
pop
aad
push
sahf
adc
push
in
xchg
add
mov
mov
sub
in
les
or
cs
or
dec
dec
sbb
enter
mov
fstl
push
mov
aas
mov
dec
xchg
lret
xor
aad
or
shl
add
ljmp
adc
sbb
in
dec
sub
fistps
push
push
les
push
jecxz
lcall
gs
jnp
sbb
jmp
xchg
push
fimuls
sub
test
xchg
dec
or
and
lods
outsb
add
sbb
out
and
push
mov
push
fsts
sti
cli
or
loop
or
clc
stos
rorl
sbb
mov
fildll
inc
out
pop
mov
and
or
or
push
xchg
cmpsl
pop
inc
sahf
dec
sti
mov
xchg
jo
rorb
mov
dec
jo
mov
daa
jg
imul
lods
scas
mov
jb
cmpsl
and
and
add
add
lock
fnstsw
adc
and
es
ds
movsb
shl
push
and
jne
adc
lock
scas
jno
in
icebp
jbe
adc
mov
sbb
sub
stos
dec
inc
pop
mov
and
mov
mov
pop
adc
pop
mov
mov
insl
add
das
push
or
fbstp
jle
or
and
mov
sbb
lahf
add
sbb
fistps
sbb
mov
cmp
popf
popa
and
mov
fwait
mov
inc
sub
movsl
mov
mov
daa
into
ljmp
cmp
in
jp
cmp
xchg
cmp
call
popa
and
adc
dec
pop
in
sub
popa
ja
jbe
cmpsl
push
sti
xor
jl
mov
xchg
in
pusha
jo
cmpsb
in
inc
shlb
or
cs
dec
dec
popf
testb
loopne
push
sbb
pop
jl
jns
push
lods
sarb
dec
sbb
jp
loopne
repnz
shrb
xor
ret
idiv
pushf
cmpsl
jo
popf
ds
push
rcrb
sti
jne
push
sub
icebp
adc
inc
bound
fmull
push
test
xor
push
add
add
popa
jbe
rcll
xor
xor
stos
mov
mov
pop
repnz
cmpsl
push
mov
call
call
mov
loop
jns
stc
xor
loope
fadds
test
pop
pop
lahf
xor
rorb
jnp
jmp
dec
jl
repnz
pop
es
jnp
cltd
dec
push
add
test
mov
stos
imul
fidivl
xchg
filds
jb
adc
adc
out
cmp
imul
stos
leave
adc
imul
call
fldl
jno
fsts
les
xchg
mov
mov
mov
add
out
mov
cmp
sub
ss
ljmp
call
call
scas
in
sub
xchg
fnstsw
xchg
and
mov
mov
mov
mov
test
xor
sbb
inc
lods
icebp
dec
repnz
cmpsb
and
jg
shll
cli
notb
mov
cmp
push
push
or
sti
into
data16
and
ret
jmpw
xchg
push
outsl
fdiv
mov
pop
in
inc
xor
aam
inc
movsl
loop
and
push
xchg
inc
les
in
cmp
sub
adc
je
push
adc
mov
scas
repz
daa
sbb
ds
add
or
sub
addr16
jge
lahf
mov
mov
call
scas
fdivr
sub
std
adc
ds
pop
jo
jg
mov
sub
int
sbb
mov
fistl
dec
bound
sbb
dec
and
pop
notw
mov
lret
sub
mov
mov
add
mov
add
or
int
xchg
hlt
rol
jge
cmpb
cmp
out
clc
lods
pop
iret
cmp
stos
jmp
inc
mov
clc
add
pop
stos
xchg
cmpsl
or
imul
cs
mov
push
cmpl
mov
xchg
sbb
push
arpl
cmp
outsb
fiadds
mov
adc
or
addl
dec
mov
push
cld
sub
xchg
in
pop
push
enter
push
in
xor
sub
xor
push
jne
or
jl
fnstenv
fs
pop
dec
sub
repnz
push
aas
sbb
es
or
cld
shrl
sbb
pop
lea
mov
shll
pushf
std
jae
filds
push
mov
popf
jnp,pt
cmc
scas
les
mov
sbb
imul
pop
int3
inc
outsl
out
push
mov
fxch
pop
data16
imul
push
lds
sbb
pop
push
sub
loop
jnp
pop
sbb
jle,pt
adc
mov
and
loop
pushf
fcmovb
arpl
sbb
nop
bound
pop
dec
adc
xor
fldl
push
and
xchg
mov
pop
or
movb
xchg
cs
inc
mov
loope
mov
sbb
add
sub
fsubs
or
mov
push
jae
ja
inc
sub
rorl
dec
push
mov
jbe
addr16
or
mov
out
dec
scas
adc
inc
out
les
outsb
loop
testb
popf
test
cmpsb
les
mov
pop
xchg
jl,pn
and
dec
cmp
push
aaa
add
lods
push
jbe
mov
cmp
push
fstpt
cli
aaa
popa
mov
ds
mov
lea
pop
std
sub
pop
icebp
push
add
nop
add
gs
arpl
pop
insb
xchg
sub
sahf
push
add
in
ja
mov
xchg
pop
in
mov
add
push
and
sub
jo
jle
imul
fdivl
adc
sub
out
jbe
dec
mov
sbb
icebp
or
out
pop
xchg
repnz
ret
xchg
imul
cld
jmp
or
sbb
sbb
add
stos
sar
stos
xchg
push
mov
daa
out
rcrl
shll
hlt
movsl
mov
lret
je
mov
fnstenv
dec
ljmp
xchg
fs
mov
cmp
cmp
add
jne
mov
mov
sbb
in
add
mov
jp
stos
and
jb
stos
pop
sub
lods
les
pusha
mov
aas
inc
iret
movsb
xchg
rclb
push
jecxz
and
lods
fisubs
mov
jecxz
and
in
cmp
jmp
aas
inc
mov
sub
stos
adc
loope
xor
inc
popf
xor
aaa
lret
mov
outsl
push
jg
xchg
push
mov
pop
ret
inc
jl
mov
mov
div
jp
or
push
adc
pop
out
inc
lahf
fwait
sahf
jb
inc
mov
aad
jg
cmp
aad
cmp
fildll
sbb
pop
xlat
cmp
add
adc
movsb
pop
shrb
incb
stos
test
mov
mov
sbb
sbb
sbb
cmp
daa
push
inc
das
xor
cmp
gs
dec
sub
out
test
lahf
pushf
ret
dec
push
mov
hlt
and
push
aam
jae
pop
cmp
adc
dec
fldpi
into
loop
mov
mov
rorb
aas
dec
or
sub
xchg
js
lods
popf
or
in
mov
jno
cmp
lahf
add
xchg
out
push
mov
mov
ja
sub
adc
out
into
repz
pop
xor
or
and
sbb
mov
push
mov
insl
dec
enter
xchg
mov
mov
popf
cmp
inc
dec
loopne
shll
mov
loopne
push
jl
push
cld
and
imul
ret
data16
dec
jecxz
mov
push
add
shrl
das
adc
popa
movsl
xchg
inc
in
rcrl
add
fldt
js
in
jno
mov
xchg
fldcw
pop
lret
lods
push
push
xchg
cs
or
mov
lock
cs
bound
xchg
push
pushf
mov
sub
pop
in
and
or
push
dec
mov
inc
icebp
and
cld
lock
sarb
push
mov
mov
nop
adc
jns
jl
adcb
push
jnp
mov
sub
sub
ret
rorl
adc
xor
lea
inc
sbb
sti
mov
sahf
mov
int3
mov
outsb
xchg
scas
push
push
fidivs
inc
mov
or
fwait
outsl
ljmp
xchg
loop
loopne
ficomps
cmp
pushf
lret
les
out
das
out
addb
dec
dec
push
pop
fbstp
hlt
sub
nop
testb
fidivrl
insb
aad
in
sub
mov
mov
insb
jnp
pop
and
stc
cltd
popa
jbe
imull
and
mov
sbb
add
jge
add
jae
fdivrs
mov
jns
mov
lods
push
or
add
and
enter
mov
xlat
rcl
adc
ret
test
mov
dec
mov
and
inc
push
push
movb
push
popa
dec
inc
pop
mov
frstor
negl
shlb
lods
out
pop
sub
jmp
rorl
dec
adcb
dec
mov
lock
jg
and
inc
inc
out
xchg
push
or
pop
fistpl
cmp
sub
xchg
jno
sbb
mov
sub
xchg
pop
sub
cmp
mov
dec
cmpl
rcrb
mov
push
push
fistps
sahf
jo
mov
dec
or
rorl
jbe
lea
insb
mov
push
mov
push
clc
fsubr
dec
in
jb
fwait
cld
dec
inc
movsb
sti
dec
mov
into
dec
push
xchg
shlb
shll
xchg
xor
jmp
xlat
int3
sbb
ret
push
adc
in
mov
sub
and
sbb
mov
mov
sahf
std
mov
mov
dec
inc
push
cmp
xchg
pop
mov
jmp
mov
sbb
mov
aad
add
shll
std
jns
repnz
arpl
repnz
push
push
mov
or
sub
mov
inc
cmpsb
cld
and
mov
inc
cmp
sbb
push
mov
repz
inc
out
xor
lea
or
jmp
lock
sbb
or
sub
cld
insb
push
std
dec
mov
push
dec
dec
in
cld
xchg
repnz
arpl
add
inc
pop
cmp
add
rcrl
orl
jecxz
dec
test
fisttpll
pushf
int3
js
xor
imul
and
inc
out
cmp
out
cwtl
imul
rclb
divl
and
and
sbb
mov
adc
sbb
scas
in
mov
add
sbb
push
ljmp
or
jns
out
loop
dec
icebp
aaa
jge
repnz
scas
inc
aad
mov
xlat
lea
and
and
mov
loop
outsb
push
scas
jno
add
sbb
lods
inc
ja
in
pop
mov
shll
pop
not
mov
popl
cmp
nop
mov
aaa
and
and
mov
jo
adc
sbb
movsb
int3
subb
sbb
cmpsb
mov
mov
hlt
ss
jge
or
paddw
mov
mov
pop
jne
dec
xchg
cmp
pop
fldt
data16
aas
or
jecxz
push
arpl
dec
out
or
xor
push
std
inc
ss
cmp
push
pusha
aad
ja
fwait
adc
into
pop
lods
ljmp
sbb
fistl
mov
dec
adc
push
or
cmp
jge
cs
push
sbb
mov
or
and
rorb
pusha
cmp
pop
cmp
ret
and
xor
leave
stos
dec
ss
ja
xchg
mov
sub
mov
insb
data16
lds
ret
sub
sub
pop
mov
jns
std
xchg
xchg
jne
mov
mov
adcl
dec
jg
std
dec
jg
gs
push
stos
jecxz
inc
adc
jl
jp
insl
cmp
cmpsb
push
pop
bound
call
pop
inc
orl
mov
mov
insl
je
mov
int3
adc
xorb
adc
cmp
push
cmp
out
sub
scas
mov
dec
aaa
sbb
xor
fildl
call
pop
imul
or
adc
inc
mov
mov
mov
mov
dec
test
pop
mov
lea
ss
pop
jmp
ss
gs
outsb
aam
jp
push
call
xchg
mov
loope
lea
inc
lret
ja
jl
xchg
mov
mov
lods
and
xchg
inc
cmp
jne
insl
jo
push
mov
sub
out
and
inc
sbb
popa
adc
outsb
mov
xor
xchg
mov
lret
mov
jno
je
or
nop
xchg
dec
sub
pop
add
mov
rol
pop
jg
cmp
fldenv
jmpw
push
mov
jg
mov
pop
scas
mov
aas
mov
adc
int3
rcll
mov
fwait
ret
xor
mov
xor
adc
pop
jg
push
cmp
mov
sub
xlat
or
xchg
ret
lret
sar
dec
xor
push
loopne
bound
xor
cmpsb
or
add
jbe
mov
xchg
dec
test
lcall
mov
sbb
loope
aaa
shl
mov
stc
jno
push
cs
mov
mov
push
fldenv
adc
lods
adc
ja
movsl
jb
int
push
mov
dec
xor
xor
ds
sbb
test
mov
jno
imul
cmp
daa
test
jmp
mov
int3
inc
dec
lods
adc
push
roll
fs
loop
inc
imul
adc
mov
push
and
gs
fidivrl
fprem1
jne
push
mov
pop
out
ds
aad
fisubl
repz
dec
mov
dec
scas
mov
cmc
push
adc
push
inc
jae
mov
xchg
mov
mov
mov
jne
test
adc
pop
xchg
cwtl
mov
mov
les
mov
xchg
add
scas
and
loopne
sub
ret
rol
dec
cmp
xchg
adc
add
inc
xor
xchg
mov
lahf
dec
pop
jge
mov
hlt
mov
mov
scas
push
out
mov
jecxz
push
mov
out
xchg
sub
jno
out
aad
lret
adc
dec
fisubl
dec
fsubr
aam
pop
movsb
test
shll
shll
scas
xor
lds
leave
and
ljmp
out
inc
in
call
jge
or
sbb
cmp
or
inc
and
add
push
loope
add
xchg
adc
adcl
pop
das
cmp
push
lahf
mov
movsb
insb
lods
dec
repnz
lcall
add
cltd
dec
stos
jle
bound
inc
cmpsb
aaa
outsl
fsubrs
sub
aad
push
push
and
sti
ljmp
dec
jb
divb
pop
add
adc
ljmp
test
sub
xor
mov
notb
jecxz
jge
mov
push
push
push
pop
out
shr
idivb
out
in
pop
mov
adc
filds
sub
cmpb
push
lock
mov
testb
shlb
lret
aas
xor
sar
adc
xor
add
xchg
jecxz
or
repnz
into
jb
in
outsl
inc
cli
rclb
mov
scas
lret
push
das
xchg
data16
sbb
mov
decb
push
mov
out
sub
das
fs
mov
add
cltd
pop
and
xor
mov
shl
or
mov
xor
cltd
push
cli
sbb
loope
jno
or
fwait
xor
jl
push
add
ret
and
and
leave
pop
sub
repz
mov
inc
scas
stos
dec
adc
mov
lahf
xlat
and
cwtl
push
and
hlt
int
mov
push
mov
jb
push
addr16
rorl
adc
push
xor
lret
movsl
adc
xchg
inc
mov
shlb
xor
daa
xor
pavgw
mov
adc
clc
das
in
inc
mov
dec
sbbb
mov
sbb
in
outsb
lret
subb
aaa
sub
std
leave
dec
adc
mov
xchg
sahf
jmp
loopne
push
jb
in
dec
leave
ljmp
pop
push
ret
es
insb
pop
pusha
sbb
xor
or
sub
movsb
adc
imul
arpl
and
lahf
gs
clc
push
jno
aad
sbb
mov
or
sub
std
std
xchg
pop
xor
pushf
inc
jae
xor
adc
add
sub
push
dec
outsb
jecxz
loop
aad
out
adc
add
andl
scas
pushf
mov
pop
cmp
stos
dec
fstpl
das
add
cmc
rol
mov
dec
and
xchg
mov
and
sub
add
or
jle
out
popf
dec
and
mov
jp
inc
push
fildl
fbstp
fisttpl
dec
call
rcrl
mov
daa
sarl
les
pop
cmp
sub
ret
dec
das
or
xlat
xor
stos
sbb
out
sbb
sbb
cmp
pop
test
orb
dec
aam
into
dec
pusha
mov
cmc
in
push
out
daa
jo
jmp
mov
inc
out
fisubs
jle
pop
push
add
pop
jl
fcomip
scas
pop
pop
in
shll
xchg
pop
mov
dec
out
decl
mov
cmpsb
add
push
cs
das
imul
lds
nop
add
das
xchg
add
lcall
iret
pop
or
add
movsl
mov
xchg
mov
jae
sub
adc
push
fsubrs
sbbb
xor
jle
sbb
xchg
pop
jb
sarl
aas
ljmp
sbb
outsb
mov
dec
mov
jecxz
xor
cwtl
fldenv
ds
adc
div
out
popa
inc
popa
sub
xorb
mov
sar
int
es
push
lahf
sbb
lods
inc
add
hlt
fadd
mov
mov
rorb
in
mov
ret
mov
and
sbb
mov
push
aaa
and
insb
mov
ficoms
pop
in
les
in
xchg
iret
fildl
jmp
loope
sbb
mov
jnp
out
popf
adc
pop
sub
dec
addr16
shlb
sub
out
jp
pop
xor
sahf
sbb
pop
test
xchg
in
or
or
sub
dec
sahf
dec
jb
movsl
cmc
jne
in
mov
mov
cli
sbb
rclb
fucomi
xchg
das
sarl
int3
mov
sub
cmpsb
add
call
mov
es
inc
ret
jb
arpl
ret
add
cmp
nop
dec
loope
sub
cmp
pavgw
stos
mov
jae
mov
loopne
popa
pop
cs
lret
aad
cmc
out
movsl
scas
shrl
outsb
loop
inc
xchg
cmp
mov
sub
jmp
adc
or
and
packuswb
jg
fcompl
arpl
pop
sbb
jp
sub
popf
cltd
xor
int
inc
mov
js
and
lods
sbb
cmp
jecxz
imul
or
lods
testl
cmp
push
and
outsb
test
sahf
pop
cmp
js
es
sub
mov
in
in
pop
enter
mov
clc
add
lret
xor
iret
mov
les
xchg
mov
addr16
jno
mov
mov
sbb
dec
insb
push
adc
std
scas
or
out
mov
roll
repnz
frstpm(287
pop
and
or
aad
push
testb
fnstsw
mov
loope
cmpl
outsb
and
shlb
jl
xor
xchg
inc
mov
sub
scas
adc
mov
call
inc
push
xlat
mov
pop
rcr
xchg
sub
dec
in
nop
adc
lock
mov
in
push
push
push
jo
add
mov
adc
mov
sub
push
pop
orl
cmpsb
jns
xlat
out
repz
in
lock
fs
push
loope
data16
pop
cmp
roll
shl
icebp
dec
push
cmp
loopne
and
sub
mov
subb
andl
xchg
push
pop
popl
bound
movb
adc
lea
xchg
inc
cmc
sub
aaa
dec
inc
jle
inc
push
int
mov
rcl
and
leave
mov
aam
cs
cmp
std
mov
lret
xchg
sbbb
dec
xlat
pusha
push
push
and
dec
daa
notb
xchg
mov
lcall
pop
push
inc
cmp
ss
cld
sub
push
jae
mov
push
fndisi(8087
sbb
rol
inc
and
xchg
out
call
daa
int3
dec
mov
xchg
ljmp
pop
paddq
shlb
mov
inc
push
mov
xchg
dec
hlt
loope
lds
add
inc
mov
aad
jb
out
daa
add
jmp
jle
push
popf
and
pop
in
std
dec
or
sbb
add
adc
inc
rol
push
cli
movsb
and
mov
dec
sti
outsb
mov
mov
sub
mov
out
mov
sbb
lahf
and
pop
iret
enter
or
rclb
jb
in
hlt
inc
dec
into
push
xor
cmpsb
mov
jle
fstpl
push
shrl
scas
rorl
lcall
push
ds
stos
bound
aaa
inc
cmp
cmp
shl
xor
and
mov
cmpsl
push
add
lcall
pop
cmp
subl
pop
scas
add
sbb
loop
cmpsb
mov
lret
mov
jp
sahf
mov
dec
dec
jle
ljmp
xchg
dec
pop
cli
cs
adc
cs
adc
leave
jae
ja
call
push
ret
imul
pop
sti
jg
dec
sahf
aaa
jne
and
mov
jmp
lcall
rclb
jecxz
ja
leave
or
push
ds
icebp
xchg
fdivr
movsl
fs
xchg
cmpsl
push
cmp
pop
jmp
dec
pop
pusha
fsubrl
sub
xor
dec
or
gs
add
inc
sub
mov
dec
push
adcb
and
xlat
mov
lcall
insl
jl
xor
sbbl
push
pop
xlat
cmc
jmp
fsubrp
xor
adc
cs
jmp
dec
mov
in
and
aad
out
mov
enter
sub
mov
dec
add
shll
ror
mov
sbb
inc
lods
adc
stc
sbb
sub
enter
xor
push
imulb
mov
add
add
mov
xchg
cmp
and
sub
mov
push
add
mov
in
icebp
outsl
enter
mov
lret
leave
adc
test
sbb
mov
adc
pop
push
mov
andl
jp
and
cmc
xchg
test
lods
fcomip
cmpsb
pop
fadd
xorb
or
sbb
lret
cmp
mov
pop
and
and
or
std
cli
leave
inc
pop
icebp
out
cld
or
push
jl
jge
adc
divb
out
out
push
inc
adc
insl
lea
mov
or
cltd
sub
xor
xor
pop
cmc
rcr
sub
mov
imul
xchg
loope
mull
rolb
push
mov
mov
push
setae
xchg
sub
lahf
fsubrl
xchg
push
cmp
adc
and
mov
or
in
xchg
pop
sbb
xchg
inc
test
hlt
mov
inc
mul
hlt
nop
or
and
mov
pop
roll
inc
dec
out
test
pop
inc
add
cmp
repnz
test
sar
mov
jns
test
xchg
dec
adc
jb
daa
out
xchg
lret
mov
in
mov
sbb
test
mov
mov
or
repz
sub
xchg
cmc
outsl
push
sub
addr16
insl
jb
cmpl
pop
mov
xor
fs
aam
cmp
xchg
cwtl
xor
xchg
jae
scas
cltd
and
ljmp
jmp
mov
push
ret
int3
ret
or
and
mov
mov
pop
inc
iret
xchg
lret
mov
std
call
ret
pop
dec
ret
enter
cld
bound
jae
mov
es
fadds
jg
pop
lret
jle
test
insb
std
imul
in
mov
push
arpl
std
sub
loop
inc
es
cmpsb
adc
push
push
and
mov
hlt
or
aas
dec
inc
mov
and
int
lock
xor
sbb
jnp
or
test
fdivrl
and
out
push
fnsave
ljmp
iret
pop
fs
sub
push
xchg
cmpsb
jo
out
inc
sbb
add
pcmpeqb
clc
cmp
push
sub
pop
sub
jge
push
or
sahf
adc
adc
pop
imul
and
inc
and
xchg
scas
mov
pop
mov
xchg
rolb
push
inc
sub
inc
clc
pop
loopne
into
cmpsl
fidivrs
jb
inc
mov
imulb
xor
dec
cmpsb
mov
filds
or
imulb
sbb
dec
rcll
mov
xlat
loop
xchg
and
in
lds
mov
cmp
jmp
sub
add
dec
adc
out
and
jb
jo
cli
imulb
pop
fistps
push
pop
int3
repz
std
lods
mov
enter
jbe
out
xor
cmp
leave
or
pop
mov
jge
mov
dec
test
dec
in
stc
std
movsl
lods
mov
bound
sti
xchg
or
cmpsl
icebp
mov
push
inc
lock
enter
cmpsb
not
push
push
out
les
fmul
pop
push
or
xchg
bound
nop
and
or
cli
stos
sbb
push
cs
inc
leave
push
lds
jecxz
jecxz
xlat
aad
icebp
xor
or
ja
iret
mov
fldcw
push
add
enter
iret
jmp
ret
mov
scas
leave
aad
mov
jno
daa
dec
sti
loop
out
jnp
pop
add
pushf
xchg
and
xchg
push
dec
jnp
lea
out
push
jne
inc
sbb
mov
sub
cmp
jnp
popf
adc
adc
mov
hlt
push
jbe
divb
cs
cli
int
inc
xchg
or
in
mov
or
push
xchg
fcompl
add
inc
xchg
inc
and
jnp
add
push
xchg
popa
and
in
jmp
dec
jae
int
ljmp
setge
xchg
shrl
das
pop
test
mov
iret
mov
stos
jae
mov
inc
pusha
lods
pop
pop
inc
xchg
pop
sub
mov
clc
sub
ljmp
xchg
lea
outsb
mov
enter
jge
fs
jo
mov
and
cs
xor
mov
adc
jns
cmpsb
rclb
sti
mov
add
xchg
and
lret
push
mov
lret
mov
mov
imul
push
or
aad
aam
push
adc
rcll
sbb
ficomps
cltd
popf
stc
loop
cmp
mov
or
add
sbb
cmp
clc
jb
add
pop
insl
push
mov
sub
sti
addl
mov
repnz
js
adc
nop
pop
sbb
div
dec
pop
frstor
adc
out
aad
cli
lods
pop
insb
stc
leave
shrb
xor
add
xchg
push
adc
rcrb
xlat
leave
and
push
stc
jmp
jns
jmp
test
mov
cld
sub
lock
test
mov
ficompl
push
loope
in
in
jg
iret
mov
inc
stos
xchg
or
pushf
inc
mov
bound
mov
ljmp
mov
inc
fldenv
pop
inc
popa
in
les
lds
cmpsl
call
adc
cwtl
loop
mov
jge
repnz
sbb
in
jbe
les
jne
iret
pop
pop
add
or
js
outsl
add
push
sarb
test
adc
jl
ret
adc
xchg
jne
insl
dec
push
xchg
sub
mov
pop
int3
inc
popf
fsubrs
ret
mov
pushf
jne
jmp
inc
mov
xchg
inc
or
inc
outsl
pop
push
mov
outsl
or
iret
xchg
test
enter
ret
mov
dec
popf
movb
add
dec
es
pop
mov
loope
dec
mov
das
push
mov
loope
add
jmp
aad
mov
sub
or
push
pop
xchg
in
fstp
outsb
inc
cmpsl
jnp
xor
dec
jb
push
dec
mov
shl
cld
sbb
daa
fwait
mov
or
dec
into
data16
mov
lea
cli
xchg
xor
mov
jmp
loope
movb
pop
sbb
mov
lcall
push
ss
mov
sub
sub
scas
rcrb
loop
frstor
xor
shl
cltd
or
xor
pop
dec
mov
and
add
pop
pusha
icebp
lods
adc
push
sbb
mov
decl
stc
loope
lahf
lods
arpl
dec
loop
push
pushf
pop
daa
inc
mov
in
lods
in
mov
in
imul
dec
xor
add
adc
dec
xor
inc
xor
dec
es
out
xor
popa
andb
push
test
xor
jmp
hlt
jl
xchg
dec
test
push
imul
xchg
push
sub
lock
rorb
std
stos
dec
loope
lods
push
daa
icebp
push
push
and
jno
jp
cmp
lods
imul
sahf
adc
int3
loope
fwait
call
pop
popf
sti
loope
xchg
out
jp
lds
push
sbb
movsb
arpl
xor
push
movsl
mov
cmp
sar
sbb
icebp
jle
and
cmp
pmaddwd
mov
icebp
fwait
lds
dec
out
pop
mov
shll
adc
popa
loop
jne
not
outsl
jge
inc
sbb
xchg
mov
or
sub
call
push
dec
mov
outsl
rcl
lods
sub
add
arpl
lods
push
bound
cmp
pop
sbb
sbb
gs
cmp
jne
cmpsb
add
xchg
or
mov
adc
int
push
inc
sbb
jnp
clc
out
sub
push
arpl
push
inc
sti
cmp
push
mov
sub
push
cmc
push
out
cmpsl
xchg
push
loope
popf
and
jo
jmp
push
or
je
cmpsb
out
lds
stos
ret
insl
sti
jle
ds
xchg
sbb
sub
and
mov
stos
or
filds
dec
orl
push
in
mov
xor
mov
add
stos
fisttpl
loopne
xor
pop
or
dec
ret
xchg
movb
int
daa
icebp
add
lds
rcr
gs
adc
test
cs
faddl
pop
daa
xchg
paddq
jmp
test
lods
inc
repz
shrl
and
pop
negb
mov
in
lods
or
scas
jmp
mov
mov
and
mov
repz
daa
pop
loop
sbb
arpl
lcall
or
popa
stc
xor
sti
inc
mov
lds
push
loop
daa
cmp
and
push
jecxz
das
rclb
jb
inc
jb
sbb
repz
fbld
xor
icebp
adc
loopne
jae
aas
adc
mov
sahf
jl
inc
cmpsl
add
pop
cmp
in
stc
clc
sub
push
adc
adc
fisttpll
mul
fdivp
xchg
sbb
xchg
repz
roll
mov
daa
icebp
insl
stos
or
pop
ds
enter
xchg
xchg
popa
pop
cmc
jle
dec
daa
and
cmp
fstpl
ret
lods
xchg
daa
mov
rol
mov
test
mov
dec
xchg
aad
mov
test
xchg
outsb
pop
mov
and
inc
or
mov
jno
pop
lcall
push
cli
or
sub
adc
fistl
mov
push
movsb
xor
ret
cs
xchg
mov
call
cld
add
shrl
loop
xchg
frstor
push
shr
or
aad
and
jp
mov
jle
sar
fwait
mov
lea
xorl
push
mov
add
aas
pop
push
movsl
sub
adc
stos
inc
and
mov
bound
xchg
dec
inc
or
pop
clc
mov
lods
iret
das
push
xor
cltd
inc
mov
sub
push
clc
add
int
into
sbb
and
inc
lods
cwtl
inc
push
idiv
and
mov
fldt
daa
jno
and
loop
rcr
ds
jmpw
cli
xchg
call
lods
sub
out
mov
add
jmp
mov
ljmp
jbe
in
popf
std
aam
hlt
or
dec
dec
out
aaa
aas
sbb
loopne
pusha
push
sbb
inc
pop
inc
cmp
jb
pop
inc
and
clc
arpl
dec
dec
push
stos
fwait
psubw
jmp
add
or
mov
sub
dec
ds
fistl
mov
xchg
dec
stc
xchg
or
xchg
sub
adc
loope
xor
xor
gs
xor
inc
sbbb
jecxz
daa
jno
mov
pusha
std
dec
test
mov
pop
jmp
cmc
out
inc
pop
dec
mov
or
inc
lock
imul
add
mov
mov
mov
lret
and
xor
fmuls
jp
mov
pop
iret
call
sbb
subl
jg
xchg
out
cmp
out
loope
sbb
cmp
push
sub
mov
cltd
pop
ljmp
aam
divl
add
sbb
dec
adc
or
loopne
mov
push
in
and
xchg
das
cmp
lcall
jecxz
sub
outsl
inc
or
jmp
aas
lods
xor
inc
inc
shlb
mov
cmpsl
popf
movhps
clc
pop
push
pop
inc
mov
sub
sub
add
mov
mov
jp
add
hlt
mov
add
setbe
xchg
mov
jo
cmp
mov
jmp
fisubs
cmovnp
sub
lcall
mov
push
push
or
or
pop
jo
push
faddl
xor
push
imul
xchg
ret
xchg
cmpsb
loope
cmc
call
pushf
cmpsl
push
cmp
aas
movsl
loope
and
movd
in
push
fwait
push
mov
mov
aas
adc
sub
clc
notb
sbb
shl
bound
cmpsl
mov
dec
lahf
andl
sbb
ret
jl
les
ficomps
fstpl
addl
pusha
outsl
mov
xchg
xor
rclb
and
add
cmp
ljmp
xor
inc
cmpsl
push
adcb
jns
jl
jne
paddusw
scas
xlat
pop
inc
push
rorl
mov
test
xchg
and
xchg
push
sbb
pop
inc
pushf
add
in
and
mov
mov
pusha
insb
in
jg
fadds
mov
or
rorb
std
add
mov
jg
push
lods
std
jbe
inc
stos
bound
pop
inc
es
in
imul
mov
cmpsb
movsl
out
repnz
mov
pop
lock
out
and
mov
pusha
jge
sahf
addr16
mov
mov
mov
std
or
mov
or
int3
pop
nop
cltd
fucompp
stos
aaa
imul
hlt
stos
icebp
out
int3
and
pop
aad
xlat
jg
cmp
cmp
repz
fistps
filds
out
lods
cltd
out
add
mov
dec
dec
adc
xor
and
data16
and
xor
insb
pop
dec
jmp
es
adc
outsl
ljmp
lds
inc
jmp
ret
imulb
lock
lahf
mov
xor
pop
mov
imul
fwait
call
sbb
movsb
jnp
mov
or
ljmp
cmp
mov
ret
mov
sub
jecxz
sub
ss
call
push
pop
xchg
ljmp
test
sbb
leave
in
outsl
jo,pt
jecxz
push
xchg
das
movsl
dec
stos
jmp
jecxz
or
fsubl
adc
jb
cmp
jb
jbe
cmp
negl
mov
imul
movsl
jns
dec
or
pop
cmp
gs
arpl
cmpsl
dec
test
jo
add
push
mov
ja
imul
mov
mulb
ds
or
test
mov
xchg
hlt
xchg
jb
cs
adc
ret
jns
roll
popf
dec
sbb
pop
fiadds
xchg
sbb
ror
test
sbb
adc
mov
sbb
sub
loope
or
test
mov
scas
jne
mov
and
shrl
push
dec
aad
push
or
mov
inc
sbb
loope,pt
or
push
lea
cmp
pop
jl
sub
sbb
loop
ss
ret
ss
daa
stos
stos
cld
testl
sub
scas
test
pop
stos
ds
ret
mov
icebp
in
xchg
jnp
inc
mov
push
mov
adc
sbb
aam
sbb
add
sub
mov
clc
dec
out
outsl
dec
adc
xor
dec
shr
fdivrl
cli
repnz
shl
add
mov
cmpsl
sub
out
mov
iret
dec
out
mov
and
in
mov
stos
dec
sbbb
mov
adc
iret
jecxz
dec
addr16
or
mov
sbb
or
das
push
lods
add
dec
push
push
test
mov
mov
popf
push
fstpt
add
flds
roll
xor
rcll
notl
mov
pop
outsb
xor
jae
push
test
cmp
jae
cmp
push
and
gs
sub
or
shll
outsl
cmp
xorl
dec
popa
jbe
add
push
and
pop
push
cs
add
pop
mov
pop
mov
mov
mov
repnz
inc
ljmp
dec
add
loop
ja
adc
cmp
jnp
pop
shlb
push
out
cmpl
xor
mov
cmc
sbb
sbb
fmull
mov
mov
push
dec
loop
xor
ret
aas
pop
and
or
ficomps
dec
fbstp
je
nop
cmc
cmp
out
rolb
jns
xor
mov
mov
out
jnp
out
arpl
and
jp
aam
and
popa
ljmp
divb
xchg
mov
dec
xor
bts
sub
test
iret
pusha
xchg
clc
popf
adc
loopne
and
insl
cmp
fmull
pop
inc
in
or
pop
sub
mov
and
mov
push
or
dec
and
ss
cli
push
mov
fsubl
fistps
push
push
cmpsl
lods
mov
fcompl
add
sti
filds
inc
jg
mov
sub
and
cmp
and
dec
lahf
mov
aam
inc
xchg
xchg
add
jmp
jo
dec
push
scas
adc
pusha
xor
lahf
sub
ret
dec
push
enter
xchg
cmp
sbb
aas
jmp
out
enter
or
xchg
fldt
or
inc
popf
inc
lret
icebp
or
sbb
jl
outsl
gs
shl
ror
fisttpll
rcr
test
repz
sbb
xor
cmc
mov
out
jo
mov
addr16
or
jge
ds
and
sub
adc
and
dec
filds
imul
iret
dec
push
nop
xor
adc
cli
sub
sbb
lret
movsb
mov
imul
mov
push
sub
fistps
jecxz
sbb
pop
movsl
out
xchg
push
push
mov
fbld
mov
cld
leave
popa
mov
adc
sbb
inc
jle
or
cmc
ret
aam
mov
insb
mov
scas
cmp
adc
add
insl
cmp
fildl
call
lret
sub
mov
fisttpl
adc
inc
cmp
test
scas
sbbb
enter
cmpsl
pop
sbb
mov
push
adc
pop
or
mov
and
frstpm(287
filds
insb
cld
pop
and
push
fisubs
and
mov
dec
push
push
ficompl
add
dec
das
int3
push
shlb
rcrb
dec
subb
mov
mov
adc
adc
push
or
inc
xchg
lods
pop
or
mov
mov
out
cmpsl
mov
sub
imul
gs
int3
xor
cmpsb
mov
sbb
hlt
sub
and
out
add
fwait
mov
stos
mov
and
xchg
test
ret
cli
test
or
jno
ljmp
mov
stc
xor
dec
cld
icebp
sbb
addb
sub
jmp
sahf
cmc
inc
outsl
repz
pop
out
in
stc
enter
inc
mov
mov
sub
add
sub
das
mov
inc
aaa
mov
pop
inc
data16
jo
inc
mov
daa
icebp
leave
imul
or
mov
xlat
mov
mov
mov
imul
jnp
sbb
pop
sub
lret
dec
lret
loopne
pushf
imul
icebp
daa
jb
stc
fildl
add
pop
jo
popa
sbb
ja
les
add
cltd
lret
push
ljmp
iret
shr
sub
scas
dec
and
sti
test
adc
cmp
dec
pop
bound
clc
in
aad
insl
push
push
lcall
jge
movsl
sbb
add
push
sub
mov
aaa
or
and
test
push
test
test
mov
aad
mov
ret
daa
outsb
or
int3
xchg
xchg
inc
or
out
mov
and
adc
insl
mov
lret
sub
mov
sbb
out
ds
mov
mov
rcl
or
xor
fmul
or
gs
mov
std
and
shll
mov
xor
xor
mov
loope
nop
mov
jmp
movsl
in
push
daa
mul
push
clc
adc
sub
dec
xchg
xor
stos
jmp
cld
mov
fstpt
shl
xchg
inc
xchg
inc
push
and
sub
cmp
or
test
or
test
repz
ja
and
lods
mov
push
or
push
push
out
arpl
lds
mull
mov
into
inc
ljmp
bound
cmp
xchg
aad
pop
add
jnp
jo
cmp
push
and
test
mov
xchg
cmpsl
js
jno
jp
pop
push
and
adc
sub
mov
stos
lea
mov
out
cmpsb
daa
adc
cli
in
mov
jae
mov
leave
xchg
popf
aad
inc
jle
stos
cmpsl
sub
add
pop
out
mov
xor
or
cmp
les
cwtl
jb
les
into
adc
outsb
stos
push
pop
frstor
push
xchg
repnz
dec
cwtl
push
ret
mov
pop
cmp
popf
xor
cmpsb
lock
and
ljmp
add
mov
xor
or
xchg
xchg
shlb
sar
xor
shll
cmp
cmpl
xchg
arpl
or
fwait
nop
sub
fnsave
mov
mov
mov
aaa
sub
sbb
call
mov
scas
ljmp
negl
push
gs
pop
data16
inc
mov
rolb
pop
pushf
je
or
cmpsb
roll
pushf
pop
roll
sbb
sub
xor
push
iret
loop
jae
aad
dec
mov
subl
test
lcall
ljmp
rcll
shrl
mov
stos
in
cltd
fs
pop
pushf
push
dec
push
pop
xlat
out
add
cmp
stos
int3
push
add
lods
mov
ret
sbb
add
sub
and
and
lock
in
mov
sbb
sbb
adc
xchg
sub
dec
jno
int3
xor
cmp
mov
mov
dec
loop
out
xchg
imul
mov
or
stos
or
cltd
pusha
arpl
xchg
incb
xchg
pop
shr
mov
lret
adc
mov
xchg
dec
sahf
jnp
mov
pop
in
int3
movb
mov
in
pop
and
inc
or
leave
stc
cmp
pop
cmp
in
pushf
xor
or
std
xchg
insb
jle
mov
in
ret
push
inc
sbb
xchg
jo
ret
jp
in
mov
jb
mov
jl
xchg
mov
movsb
outsl
and
dec
iret
mov
fisttps
inc
adc
ds
mov
lea
adc
les
setg
push
lods
pusha
cli
hlt
fmull
pop
and
addl
xchg
loope
sti
add
pop
es
xchg
xor
xchg
xorb
test
jg
push
xchg
jp
push
xchg
jae
adc
jmp
inc
outsl
popf
inc
sub
cmp
imul
mov
mov
or
lock
push
or
add
xor
mov
or
repnz
jecxz
sbb
das
in
jmp
bound
inc
addr16
sub
add
das
mov
jp
test
mov
cmp
pop
arpl
out
sub
es
mov
bound
dec
or
add
loope
push
mov
jb
mov
shll
xor
sbb
in
dec
or
push
or
xor
mov
fs
mov
and
sub
dec
push
lcall
jnp
divl
ljmp
add
lds
rcrl
lgs
sbbb
cmpsb
add
in
out
add
je
ret
out
lret
mov
sarl
mov
mov
add
mov
adc
or
mov
or
adc
xor
mov
nop
mov
mov
mov
mov
ficompl
fbld
bound
scas
mov
jp
jg
insb
xor
xor
or
push
mov
or
sbb
daa
xchg
add
lods
stos
mov
ss
out
push
test
or
icebp
out
xchg
pop
ss
sub
mov
sti
sub
dec
jmp
dec
call
fcmovbe
and
xchg
or
out
jb
and
cmp
jnp
mov
outsb
adc
shrb
dec
mov
sahf
mov
and
mov
sub
daa
test
lock
jo
push
pop
mov
adc
out
jle
xchg
mov
addb
cmpsl
cmc
aas
mov
dec
mov
pop
cs
movsb
or
icebp
sub
lock
or
insl
icebp
pop
sub
xchg
test
mov
and
sub
xchg
ret
add
das
cmp
xchg
dec
xchg
xor
or
mov
repz
in
and
lods
sti
imul
out
lret
ss
jecxz
jp
add
pusha
jae
and
movsb
out
lods
or
stos
and
jl
pusha
adc
jbe
movsl
mov
icebp
test
loop
es
scas
pop
fisubrs
insl
mov
dec
xchg
ljmp
roll
cmpsl
push
out
sbb
jne
movntps
and
es
xor
leave
sbb
mov
rorb
movsb
xor
or
sub
outsl
sbb
xor
daa
mov
loop
mov
aad
loope
inc
cwtl
inc
jns
xchg
es
ja
jp
sub
ljmp
mov
in
push
shlb
fidivrs
add
xchg
stos
pop
cli
xchg
and
jo
leave
xchg
jns
pop
shr
sbb
fmuls
sbb
imul
or
test
rolb
cmp
fnstsw
adc
xchg
rorb
xchg
inc
insb
xor
lret
jb
js
ss
xorl
adc
sub
mov
scas
fsubrl
xchg
and
repz
sub
mov
imul
ret
dec
lods
push
push
xor
test
mov
fs
mov
movsl
jmp
push
icebp
push
add
pop
loope
sub
pushf
xchg
ljmp
adc
and
push
gs
and
repnz
out
push
rorl
add
inc
ljmp
push
or
pop
leave
mov
inc
pop
and
dec
xchg
leave
push
popa
shlb
mov
neg
movsl
pop
sub
jp
xchg
test
xchg
ss
xlat
sub
sub
adc
xchg
pop
mov
shr
jns
xchg
xchg
lods
cld
lea
mov
pop
jbe
insb
dec
int3
and
or
mov
fcmovnbe
mov
jae
cli
push
sbb
push
cmpb
xor
pop
or
lea
shr
lds
push
in
dec
adc
inc
add
stc
ss
adc
out
sbb
subl
mov
movsl
xor
lods
xchg
leave
jne
adc
sub
and
xor
add
pop
out
sarl
jbe
jg
mov
jl
xchg
andb
jge
and
or
and
cmpb
jg
push
lock
sub
rorb
out
daa
sub
jbe
jbe
sbb
pop
ss
aaa
mov
stc
adc
sub
and
sahf
mov
rcrl
mov
pop
in
add
pop
dec
jp
enter
pop
jo
push
xor
pop
inc
lret
bound
jbe
pop
mov
and
scas
leave
fidivrl
cmp
pmaddwd
outsl
lret
lret
mov
loopne
and
cli
aad
gs
dec
inc
lcall
data16
je
mov
add
sub
popf
xor
pop
fldenv
pop
sub
jp
mov
imul
jb
popa
clc
xchg
pop
xor
sarl
shlb
and
icebp
pop
jmp
inc
xor
mov
imul
movsb
sbb
cmp
and
jbe
xor
pop
cmpsb
jmp
in
inc
sub
pop
inc
xor
icebp
sahf
push
hlt
orb
mov
cli
jns
jge
in
out
clc
xchg
jb
cwtl
pop
gs
rorl
sti
in
xlat
push
sub
mov
jp
test
add
pusha
adc
jl
dec
mov
jb
jp
imul
xor
pusha
or
cs
adc
mov
jno
jbe
add
lret
into
insl
mov
int3
xchg
xchg
fs
mov
cmp
rep
fcmovne
cmp
add
fstpl
pop
bound
and
inc
xor
sub
push
push
xor
bnd
xor
lret
dec
dec
xchg
add
adc
mov
inc
sub
and
mov
pop
daa
cmp
mov
cmp
call
mov
jns
or
xor
push
and
push
push
sub
test
sbb
sbb
jbe
jno
mov
mov
imul
push
je
sub
adc
in
std
sarb
pusha
inc
push
jmp
inc
pop
sub
stos
add
pop
ja
andl
pop
push
and
mov
cmpsb
mov
popl
lret
sbbb
in
push
add
sahf
sub
add
in
mov
mov
dec
iret
test
xor
sbb
jb
ljmp
adc
inc
sub
cld
sub
test
hlt
sub
push
inc
data16
mov
movsb
and
push
mov
enter
out
add
and
sbb
adc
daa
sbb
fcomps
out
mov
cmp
dec
mov
into
mov
inc
push
mov
pop
or
or
sbb
psrad
or
dec
and
add
loope
push
lods
loop
or
out
cld
cmp
sbb
pop
add
cmpsb
mov
in
or
lret
and
movsb
xor
cli
push
sbb
pop
cltd
adc
push
sub
mov
lods
mov
cmp
jno,pt
inc
cmp
popa
xchg
inc
aas
in
sahf
jnp
stos
leave
or
cld
insb
fldenv
sbb
inc
xchg
addb
mov
addr16
bound
cmp
inc
dec
jecxz
mov
or
mov
xchg
fisubs
or
ljmp
mov
addr16
lods
cmp
movsl
stos
daa
jnp
xor
ljmp
movsb
add
mov
jae
xchg
mov
mov
sahf
xor
ljmp
rcrl
mov
test
xchg
and
test
cmpsl
sub
scas
js
filds
fldenv
scas
test
push
push
add
outsl
pop
jmp
or
dec
xchg
sti
cmc
fdivrs
sub
xlat
xchg
xchg
loop
or
cmp
mov
inc
gs
lahf
cmc
neg
pop
push
lods
inc
sbb
inc
dec
jge
fldcw
leave
and
rcrb
mov
hlt
cmp
adc
and
pop
pop
or
dec
push
add
out
mov
sbb
sub
push
lcall
push
cmp
sbb
xchg
mov
push
mov
mov
andb
jl
fcomps
mov
roll
mull
test
rorl
jne
sub
fcmovnbe
mov
or
cmpsl
add
mov
icebp
or
cmp
mov
mov
lret
inc
lds
daa
test
jo
lahf
inc
movsb
mov
push
mov
lods
and
mov
push
xchg
pop
or
and
mov
xchg
add
outsb
pusha
cmp
jae
mov
test
mov
loopne
cmpsl
in
and
stc
mov
fisubrs
scas
cmp
pop
test
movsb
rorl
jle
and
arpl
sub
cs
in
pop
xor
les
mov
jg
mov
push
pop
push
sbb
into
jg
mov
and
in
and
in
ds
push
loop
adc
sub
int
cmp
jno
mov
mov
inc
jns
in
leave
mov
and
and
into
jnp
inc
lods
mov
inc
inc
xchg
mov
push
mov
inc
iret
cmp
sbb
pop
out
adc
push
pushf
das
pop
sub
xchg
repz
push
sub
js
fwait
xchg
xor
inc
int3
rcll
jb
es
or
sub
sbb
inc
js
inc
mov
cwtl
add
xor
out
jb
jg
in
inc
pop
orb
pop
stos
add
inc
xor
insb
mov
and
or
lret
sbb
test
jg
fistps
xorl
mov
or
adc
stos
fldcw
loopne
stos
int3
dec
add
cs
sbb
aam
and
push
push
jb
inc
add
sbb
mov
mov
daa
cmp
sub
cmp
fwait
and
xor
lods
push
and
mov
in
push
push
cmp
cmp
into
orb
lahf
pop
mov
or
lret
xchg
insb
cmp
and
xchg
das
in
pop
data16
ret
in
mov
mov
stos
test
cmp
jbe
jmp
lahf
cmp
into
fwait
jge
add
inc
inc
mov
in
imul
shl
ds
cmp
or
cli
jo
cmpsl
push
mov
sbb
outsl
adc
mov
es
pusha
int
push
dec
in
mov
popf
mov
push
aad
daa
pop
inc
pmaddwd
push
or
or
test
and
vunpcklps
mov
lahf
sbb
pushf
sbb
shlb
push
xorb
out
mov
pop
fs
jnp
jmp
xor
pop
aad
dec
rcrl
testl
mov
cmp
or
xchg
lret
icebp
test
pop
fsubl
jg
stos
out
aaa
inc
xor
sub
fsub
inc
mov
in
inc
stos
psrad
icebp
imul
lahf
int3
shl
cmp
and
stos
cs
fisubs
sub
mov
out
jecxz
mov
out
sub
mov
icebp
mov
inc
dec
jne
sbb
shrl
iret
xor
jae,pn
pusha
inc
ds
dec
jae
cmp
mov
dec
bound
gs
shll
adc
fs
dec
es
jo
sub
mulb
fdivl
push
mov
cmp
notl
ds
test
adc
and
sbb
sbb
fisubrs
nop
enter
adc
dec
icebp
dec
jne
aad
jnp
pop
das
sti
in
scas
js
push
ss
mov
gs
negl
es
dec
mov
cld
jle
xlat
nop
mov
movsb
cltd
jo
inc
sti
push
mov
dec
repnz
jmp
lret
cmp
jne
xchg
repz
int3
xorb
out
sub
int3
stc
pusha
dec
movl
adc
lock
mov
add
jp
cmp
test
popa
in
dec
pop
hlt
movsb
adc
repz
inc
fsub
mov
xchg
rclb
bound
lahf
test
push
scas
cmp
inc
clc
xor
push
sub
add
incl
jb
jge
pop
jge
xchg
adcb
popa
pop
dec
jns
sbb
rorl
xor
xchg
sub
aas
push
or
std
xor
sti
icebp
sub
mov
and
push
out
or
cmpsb
dec
sbb
jg
mov
fsub
f2xm1
ljmpw
daa
push
mov
sub
pop
in
xchg
lods
push
movsb
bound
lahf
dec
jns
loopne
jl
xchg
loope
lods
dec
aaa
inc
xor
mov
repnz
test
insl
movsl
xchg
jmp
xor
lcall
dec
fisttpl
jge
movsl
sbb
scas
inc
xchg
and
idiv
loopne
inc
stos
roll
in
jbe
fstp
orl
pop
into
aas
pop
add
xchg
rorl
xor
and
imul
jb
addr16
cmp
dec
cmp
add
jmp
mov
aad
sub
pop
mov
aam
lret
cmpsb
mov
in
rorl
jb
sub
lahf
push
out
stos
sbb
stos
loop
sbb
dec
pop
push
and
shll
inc
and
in
add
stos
out
data16
jmp
mov
xchg
rcrb
xchg
and
mov
leave
add
sti
aas
lds
leave
decl
les
gs
lds
rcrl
and
sub
sbb
rorb
in
dec
mov
mov
imul
add
add
sbb
cmp
loopne
cli
sub
pop
lret
imul
fcmovb
jno
dec
lods
push
mov
jmp
aas
jbe
stc
mov
sub
mov
and
leave
inc
mov
mov
sti
inc
sbb
fisubrs
ds
cmc
push
mov
jmp
inc
daa
mov
cli
cs
mov
adc
push
loop
in
lods
mov
outsb
mov
mov
out
loop
andb
sub
or
aaa
and
lret
push
push
xchg
and
jecxz
inc
push
scas
jmp
frstor
jb
jecxz
popf
xchg
loopne
in
push
into
jns
dec
movsb
xor
inc
scas
lret
mov
outsb
outsb
cmpsb
out
sub
testl
in
or
cld
mul
out
stos
dec
sub
test
cmp
xor
cli
sbb
bound
adc
add
sub
leave
cmp
out
xor
mov
cli
dec
cmp
cmc
inc
mov
mov
insb
cmpsl
sahf
imul
mov
lahf
pop
int3
cs
aad
mov
cmp
std
xchg
dec
es
xor
pop
inc
sub
arpl
stos
dec
and
dec
ja
ss
leave
negb
rol
mov
mov
xchg
sub
jno
int
shl
sub
in
insb
pop
pop
mov
and
mov
out
xchg
fwait
ljmp
inc
or
add
xor
add
jle
mov
mov
aas
mov
jae
aaa
das
pop
ret
les
push
in
sub
insl
sbb
jge
nop
fxch
jg
cmp
fdiv
cmp
rol
jp
sub
jae
push
or
ret
divb
cmp
mov
dec
ret
push
mov
mov
sub
icebp
loopne
jno
sbb
sub
mov
pop
cmpsb
sub
sub
xchg
push
and
stc
lds
repnz
das
loop
fisttps
scas
arpl
add
or
push
pop
push
add
popf
add
movsl
xor
loop
xor
dec
rcrl
xchg
mov
js
or
push
xor
pop
or
iret
mov
xchg
pop
test
sbb
pop
jbe
adc
adcl
repnz
in
push
in
fnsave
out
dec
out
xchg
cs
sub
inc
fmul
stos
cmp
in
andl
and
cmp
stos
cld
testb
cmp
dec
dec
push
lods
sbb
inc
popa
pop
sbb
add
xchg
bound
popf
mov
pop
mov
pslld
ret
sub
jle
and
in
mov
mov
inc
sti
mov
sti
adc
ret
sub
sbb
dec
bound
stos
imul
add
stc
xor
jg
aaa
jge
xchg
jmp
push
mov
jmp
out
mov
mov
mov
or
xchg
dec
push
push
lret
xchg
dec
mov
mov
divb
mov
dec
mov
mov
sub
pop
push
adc
inc
popa
test
push
mov
div
lahf
mov
js
cmp
xchg
enter
int3
jp
in
popf
push
cmp
jecxz
cld
cmp
rol
outsb
shr
test
sbbb
lods
push
cmp
push
dec
add
in
loopne
lcall
sbb
loopne
mov
call
ret
out
adc
in
aaa
pop
or
jmp
jle
cli
xor
mov
in
sub
mov
jbe
inc
mov
xchg
imul
dec
jg
mov
jb
nop
cltd
jecxz
mov
xchg
ja
or
pop
movsl
push
xchg
mov
mov
aad
in
inc
cmp
pop
and
inc
jl
nop
daa
jmp
test
pusha
jl
sbb
and
or
mov
fildll
arpl
and
add
add
dec
int3
cmp
cwtl
aam
cmp
push
fcmovnu
cmp
mov
jnp
mov
dec
stos
pop
sbb
xor
push
xchg
adc
mov
xchg
out
mov
mov
push
cmp
cmc
inc
mov
mov
testl
addl
leavew
out
sbb
fwait
add
roll
mov
stos
inc
or
das
loop
repnz
inc
cli
in
jns
pushf
pop
inc
mov
loope
mov
in
lahf
dec
mov
mov
movsl
mov
xchg
loopne
sub
test
pop
imul
in
mov
repz
inc
inc
mov
subl
inc
sub
ret
and
add
mov
repz
dec
sbb
inc
push
aad
push
push
inc
jl
mov
rcll
inc
adc
jecxz
adc
cmp
sbb
xchg
daa
fcmovnbe
dec
repz
push
or
xchg
push
mov
mov
or
outsl
push
lds
cmp
sbb
mov
xchg
int
push
push
cmp
mov
xchg
arpl
testl
add
pop
pop
sahf
aam
jo
test
sub
sti
stos
les
nop
mov
lea
push
jne
sbb
xchg
mov
sub
xchg
ror
adc
xor
popa
push
out
bound
adc
mov
cmc
fldt
sub
push
xchg
out
xor
outsb
sbb
xchg
sbb
cmpsb
loope
jle
or
mov
ret
pop
mov
xor
out
cmpb
lock
cld
sbbb
or
test
aaa
cs
in
sbb
stc
sbb
jae
adc
or
and
push
push
pop
cmp
inc
and
mulb
xchg
or
jmp
pop
lcall
pop
bound
inc
ret
sti
in
icebp
cmp
or
push
rcrl
mov
daa
inc
jl
lahf
jmp
mov
fidivs
cmp
fdivl
pop
test
inc
shl
pop
sbb
mov
and
sbb
es
insl
add
push
js
jl
inc
popf
mov
nop
pop
xor
push
scas
fdivl
push
test
out
in
or
adc
mov
arpl
bnd
jl
sbb
stc
dec
xchg
fs
ss
mov
faddl
and
shrl
inc
xchg
sub
adcb
mov
pop
jns
mov
fisttps
pop
hlt
dec
lods
lods
cmc
cld
sbb
adc
icebp
ret
sti
ficomps
or
enter
lret
push
adc
bound
sub
adc
dec
dec
fs
push
adc
or
fwait
pop
fidivrs
xor
cltd
dec
xchg
fs
loop
punpcklbw
addr16
mov
ljmp
jns
data16
cli
mov
repnz
lret
inc
cmp
movb
cmpsl
inc
cld
outsb
mov
mov
int
xchg
jg
mov
cli
and
ljmp
dec
int
push
mov
mov
cvtps2pi
pop
and
pop
bound
in
add
mov
and
cmp
ret
mov
xchg
ror
mov
out
xchg
fcomi
and
add
and
loopne
push
and
pop
or
cmovne
push
cltd
arpl
rol
mov
inc
push
mov
add
repz
push
mov
mov
push
in
and
repz
cmp
test
outsb
mov
mov
loop
aaa
push
fdivp
dec
repnz
mov
mov
in
jns
int
das
push
repnz
xchg
cmp
dec
arpl
dec
icebp
jne
or
inc
cmp
dec
lods
inc
xor
popa
outsb
movsb
or
mov
pop
flds
lret
mov
stc
rorb
adc
pop
fstpt
dec
cmpsl
lods
dec
push
ljmp
movsb
sbb
push
mov
addr16
jmp
jns
jne
xchg
adc
jecxz
push
mov
add
and
pop
int
sub
aad
stos
add
pop
jns
aaa
cltd
pop
add
mov
loope
outsl
mov
lods
mov
loope
aas
xchg
inc
add
mov
ljmp
and
lds
or
inc
stos
dec
es
lds
xchg
ret
adc
mov
sub
pop
testl
orl
orl
es
mov
sahf
jmp
shrl
adc
push
inc
xchg
test
vmwrite
fbld
push
mov
sbbb
mov
sbb
sub
fs
fwait
xchg
fdivrs
sti
cld
mov
outsb
jo
lods
xor
sbb
jmp
das
mov
sub
push
ret
xor
stos
ficoms
push
or
xchg
rcrb
out
inc
incl
movsb
stc
in
sbb
or
sbb
sbb
push
mov
dec
andb
jl
stos
shlb
loopne
xchg
out
and
fdivrs
sbb
mov
repz
sbb
loop,pn
sbb
inc
in
jo
mov
dec
sub
mov
sub
lcall
inc
cmpsl
push
stos
pop
cs
movsl
pop
push
out
icebp
movl
repnz
subb
ljmp
mov
into
or
gs
pop
lret
fdivl
inc
push
sub
das
cmp
loopne
cmp
pop
shlb
cmpsb
sbb
push
movd
ret
rclb
pop
xlat
xchg
mov
test
imul
out
mov
fchs
push
das
dec
mov
inc
jl
cld
shll
mov
aam
dec
data16
scas
add
stos
notb
jb
dec
add
mov
mov
xchg
lcall
mov
xchg
repnz
mov
sbb
movsl
xor
pop
popa
outsl
lret
inc
lret
xor
sbb
mov
dec
test
std
movsl
pop
in
repnz
lds
sbbb
imul
sub
push
cmc
xor
cmc
pop
jp
lcall
lret
test
cmp
sti
mov
in
ljmp
jno
andb
and
lret
dec
jno
lret
aaa
dec
mov
mov
mov
popf
mov
icebp
lds
aaa
fidivl
pop
popa
pop
out
bound
in
fiaddl
test
cmp
sbb
aad
mov
adc
jb
hlt
dec
loop
mov
testb
sbb
movsb
push
cld
dec
adc
jmp
push
mov
xchg
addb
mov
mov
jo
mov
insl
outsb
das
pop
jbe
insb
loop
imul
addr16
lret
cld
dec
adc
sub
push
mov
cmpb
stos
and
mov
jmp
xor
mov
frstor
mov
cmc
pop
decl
xor
jl
and
cmc
inc
jge
rol
stos
or
push
adc
mov
xor
js,pt
and
leave
xchg
pushf
mov
jmp
notl
sahf
int
pop
xchg
and
add
pushf
imul
lret
sub
adc
add
ret
adc
or
addl
jno
push
push
mov
mov
lods
cmp
mov
mov
lock
push
or
add
das
flds
movsb
add
jp
xchg
xlat
mov
rcr
jmp
and
insl
out
inc
pop
jle
rclb
or
fincstp
mov
lea
dec
jnp
sub
and
push
and
pushf
sbb
sti
mov
subb
and
call
sub
fisubrs
loopne
in
aam
pop
fnstcw
adc
push
jb
inc
scas
jb
pop
popa
mov
int3
mov
fidivl
mov
inc
push
dec
mov
and
jp
ljmp
inc
lea
sub
iret
and
cmp
mov
mov
sahf
mov
inc
lds
mov
pop
cli
add
loope
pop
dec
sbbl
daa
js
mov
add
adc
mov
mov
add
dec
sahf
add
scas
rcrl
sbb
jns
daa
jne
inc
push
pushf
push
cltd
cli
adc
inc
jp
dec
out
adc
insb
mov
jmp
out
shll
jg
jp
inc
cli
in
ds
lock
jae
scas
inc
sub
fnstenv
jmp
and
xor
aaa
mov
mov
out
sarb
int
push
and
loope
sbb
cmp
push
movsl
fbstp
sub
jmp
sub
negl
daa
xchg
sbb
mov
and
in
adc
push
mov
push
and
inc
lret
test
or
inc
in
add
pop
popf
pop
loop
push
sub
xor
rorl
mov
stos
filds
js
or
repnz
pop
inc
cmp
imul
mov
jae
inc
mov
xor
add
out
scas
jns
adc
jmp
pushf
pop
loop,pn
add
dec
ljmp
or
idivb
rolb
dec
shlb
nopl
cmpsb
iret
int
and
bound
xor
and
add
fisttpl
je
js
mov
sahf
ljmp
daa
hlt
lret
imul
pcmpgtw
dec
add
add
popf
cld
les
mov
mov
cmp
aas
push
pop
sti
lods
pop
in
insl
inc
jg
add
aaa
mov
xchg
jb
outsb
inc
lret
ret
and
sub
push
mov
sbb
fistpll
stc
pop
jns
sub
pusha
sahf
mov
imul
ret
xchg
jno
inc
out
imul
int3
push
pop
xor
and
pop
pusha
dec
in
repz
pop
jmp
sbb
adc
adc
fdivrl
pop
rorb
flds
pop
sub
mov
or
sub
jp
ss
adc
outsb
or
xor
out
dec
mov
addl
mov
pop
rcrl
call
cmp
cmpsl
push
cltd
xchg
xchg
dec
mov
xor
or
pop
addr16
pop
push
cmp
and
sbb
push
dec
jne
and
dec
pusha
aaa
repnz
sub
adc
and
sahf
cmp
inc
lcall
movsb
push
mov
inc
fcomi
imul
jmp
scas
bound
adc
and
lods
add
aaa
pop
pop
cmp
jecxz
ljmp
aas
xor
stos
stc
inc
sbbl
lock
xchg
test
cmpsb
or
ficoml
jmp
dec
jns
das
jb
notb
mov
loop
lahf
scas
and
fldenv
jecxz
mov
inc
in
inc
dec
add
adc
cli
adc
sarl
sbb
popa
inc
inc
mov
jb
add
sub
inc
cmp
mov
ret
xchg
or
sbb
inc
lock
push
jmp
pushf
and
mov
scas
fdivl
cmc
mov
call
iret
xlat
cmc
xchg
mov
enter
stc
pop
pop
jge
push
out
gs
jae
fsubrp
push
mov
aaa
orl
aad
mov
out
nop
or
sbb
xchg
ss
inc
fildl
scas
or
loop
out
mov
pop
xor
and
je
jb
imul
mov
jno
sbb
pushf
push
in
lods
fcoms
call
mov
inc
lock
push
add
pop
dec
cmp
stc
xor
push
es
add
add
push
sahf
xchg
mov
das
fcomp
xorl
add
mov
adc
outsl
xor
xor
push
mov
in
stos
cmp
mov
mov
bound
jnp
cmc
mov
out
inc
ret
sar
sbb
push
xchg
pop
adc
dec
test
mov
mov
sub
cli
mov
push
icebp
in
and
loop
sarl
pop
out
mov
xchg
loop
sti
shl
daa
stc
jle
xchg
lods
pusha
pop
inc
add
push
jns
int
xchg
outsl
xor
cmpsb
fdivl
in
lds
rcrb
aam
push
pop
xor
shrb
fisttpll
pop
addr16
dec
xor
cmp
aas
jno
nop
push
bound
xchg
and
inc
rclb
dec
loop
or
aam
pop
pop
jno
pop
sbb
add
fcomi
cmpb
dec
mov
lock
and
add
and
std
adc
comiss
imul
rcl
pusha
jne
mov
hlt
xor
cmpsb
mov
int3
pop
push
add
testb
pop
lods
bound
push
sub
sub
adc
inc
mov
sub
aas
fstpl
pop
out
sbb
jb
insb
popf
dec
in
iret
xchg
jecxz
cmpsl
mov
call
fadds
imul
xor
stos
in
mov
movsb
dec
jae
mov
push
imul
adc
sub
dec
add
cmp
jge
lcall
int3
push
or
into
xor
mov
scas
pushf
or
and
cltd
fcmovnb
inc
inc
cltd
in
push
clc
adc
cmc
mov
inc
add
icebp
ja
adc
sbb
es
mov
sub
pop
mov
pop
dec
hlt
mov
or
adc
das
loopne
in
xor
push
lock
mov
cld
push
sub
mov
pusha
jmp
fwait
pop
enter
mov
jg
scas
mov
ja
in
push
xlat
xchg
jne
pop
pop
loope
pushf
push
or
stos
mov
jl
mov
rorb
scas
add
fiaddl
aaa
test
mov
flds
das
inc
in
xor
ss
ret
cs
jo
int
jns
dec
push
rorb
cmp
shlb
fisttps
dec
xor
pusha
cmp
mov
testb
push
sahf
jnp
fwait
inc
dec
sub
pop
mov
gs
or
out
test
jp
and
xchg
xchg
push
inc
mov
inc
adc
mov
pop
loopne
push
pop
mov
sub
adc
icebp
pusha
divps
jecxz
nop
sub
in
andl
aaa
mov
push
pushf
daa
int3
xor
das
movswl
dec
and
and
push
sub
mov
cmp
add
imulb
aas
push
paddq
iret
jg
int3
sub
cs
jg
push
or
ret
test
cmpsb
out
lret
mov
pop
popf
loop
fisubrl
cmc
les
fnstsw
out
mov
sti
mov
imulb
push
or
fdiv
rcl
xchg
add
test
and
inc
xlat
push
inc
sub
loop
xchg
mov
xchg
cmp
or
mov
xchg
xor
mov
add
gs
js
out
inc
pop
mov
jno
sub
push
lahf
into
push
daa
sti
mov
xchg
adc
int
cmp
aaa
push
sarl
fidivrl
mov
xchg
or
xchg
push
add
into
or
and
jge
cs
jns
dec
ds
testb
jb
into
mov
push
es
jne
mov
and
push
inc
jle
std
ljmp
gs
in
inc
nop
repnz
flds
jb,pn
pushf
push
call
fld1
sarb
jl
lret
mov
jb
fstps
cli
xor
xor
or
xor
adc
frstor
test
fsts
sbb
mov
pop
dec
fidivrs
xorl
shll
add
shl
loop
adc
cs
sub
xor
outsb
inc
adc
push
ret
in
orl
add
clc
gs
lds
xchg
jbe
mov
aaa
jbe
xlat
iret
adc
xchg
push
pop
sbbb
sbb
jmp
inc
inc
lods
cld
and
push
arpl
ljmp
ret
daa
imul
clc
frstor
sub
and
das
and
test
mov
addr16
clc
int
inc
fimull
shll
fsubr
jbe
int
jns
and
bound
roll
pop
adc
mov
shlb
jne
pop
imul
pop
ljmp
jg
ret
mov
inc
pop
ljmp
out
cmp
and
fiadds
sti
sub
cmp
dec
xchg
cwtl
xchg
in
mov
mov
cmpsb
and
jno
stos
mov
mov
hlt
cmpsb
mov
push
out
mov
sbb
dec
inc
fstl
popa
or
sub
cld
sub
fiadds
sarl
xor
pusha
mov
ja
jno
xor
cmp
insl
mov
xchg
pusha
mov
or
push
dec
enter
push
movsl
mov
adc
jbe
hlt
mov
or
mov
jp
jb
sub
outsl
push
adc
es
mov
and
jns
daa
and
pusha
hlt
pop
push
push
cs
aas
pop
push
sub
add
adc
popa
sbb
sub
push
mov
bound
add
aaa
in
push
repnz
pop
popf
add
lock
push
sub
xlat
cmc
sub
lock
inc
xlat
hlt
sub
fimuls
cwtl
cmp
and
pop
inc
sti
xchg
daa
shll
mov
or
mov
gs
cmpsl
lret
lahf
ds
sbb
mov
bound
push
and
sbbl
testl
inc
xchg
sahf
mov
icebp
out
in
sbb
in
adc
xor
sub
add
add
rcll
aas
dec
popa
add
push
add
rcrb
sti
mov
enter
ror
push
adc
adc
ret
popf
pop
in
push
ss
inc
testb
pusha
loop
mov
insb
xor
jmp
test
in
ss
outsb
push
lcall
xchg
outsl
push
push
ss
dec
mov
jno
mov
mov
jno
cltd
out
out
dec
mov
jno
popf
loope
jne
out
or
mov
mov
insl
xor
push
loop
sbb
out
xor
mov
popa
imul
mov
pop
dec
pop
sti
mov
into
lods
sti
fs
or
xchg
inc
pusha
dec
xor
in
mov
mov
dec
mov
cmp
insl
add
mov
insl
push
xor
push
loopne
jns
out
sub
jo
je
daa
enter
dec
push
push
aaa
mov
test
jp
jbe
dec
testl
mov
mov
movsl
push
pop
ljmp
mov
dec
mov
outsl
mov
es
ss
push
lcall
nop
xlat
test
lcall
lahf
or
sub
sub
aas
mov
xor
push
and
ss
imul
fistps
testl
adcb
repz
scas
sub
push
pop
movsb
or
into
xor
and
loop
and
lret
adc
or
pop
lds
imul
jnp
mov
shr
and
divb
push
jno
add
or
cld
or
pop
aaa
push
xorb
jmp
lock
sub
push
pop
nop
jp
push
lods
add
jae
dec
mov
into
rcll
les
mov
inc
pcmpeqd
loop
push
ret
dec
mov
test
add
nop
cmp
jge
outsl
cltd
cmp
mov
aam
push
push
cmp
andl
mov
mov
jb
cmp
push
sbb
mov
lods
push
and
in
xchg
push
shlb
push
in
lea
mov
mull
fildll
sub
xchg
xor
adc
jp
cld
cwtl
pop
lcall
lea
out
sahf
inc
in
pop
fidivrs
dec
xchg
pushf
mov
adc
xorb
push
dec
pushf
popa
ret
roll
fstl
cmp
movsl
xchg
xchg
mov
les
lret
cs
andl
std
dec
inc
test
cmp
xchg
jle
inc
and
sahf
push
add
adc
imul
fidivrs
rcr
repz
and
sbb
mov
icebp
sub
mov
jg
sbb
xor
xchg
push
xor
sbb
mov
das
rorb
mov
or
jb
out
jp
test
ficompl
test
or
and
and
daa
adc
pop
sbb
rcrl
mov
jno
add
ret
mov
adc
jmp
dec
jo
sti
fisttpll
mov
push
stos
push
ret
testb
jmp
mov
leave
dec
rolb
xorb
lds
fidivrl
inc
xor
push
icebp
add
or
inc
out
add
xchg
out
push
jge
call
sbb
xor
loop
pop
mov
leave
mov
dec
mov
imul
cs
xchg
repnz
push
pop
lods
jl
and
pop
pop
mov
fmull
jl
and
add
inc
and
fnstsw
in
sub
mov
dec
sub
sub
testl
sahf
dec
negl
arpl
int
jp
jmp
aas
icebp
aaa
imull
in
xor
bound
mov
arpl
cmp
mov
jp
ficompl
dec
adc
sbb
sub
inc
aad
movsb
dec
sbb
jp
and
lret
js
adc
jns
dec
cmp
into
stos
icebp
sub
inc
mov
push
jge
aas
pop
into
jbe
data16
gs
popf
stc
push
scas
jae,pt
in
into
lods
or
lds
push
ss
outsl
jg
data16
leave
repz
add
adc
fldln2
jb
dec
cmpsb
repnz
addr16
in
adc
dec
push
outsl
popf
lds
mov
mov
loopne
cmp
popa
loopne
xor
mov
mov
dec
sub
or
push
adc
xchg
orb
cmp
dec
jb
das
jle
inc
mov
in
adc
rclb
jl
loope
inc
lds
aam
imul
jge
outsl
cmp
daa
loop
or
icebp
xor
icebp
add
push
xchg
inc
mov
movsl
negb
iret
imul
arpl
add
add
ds
js
es
dec
mov
add
sbb
lock
adc
data16
add
xor
push
jp
out
xor
std
repnz
imul
mov
push
add
jb
or
inc
adc
jp
out
cmpsb
push
call
dec
cmp
popf
loop
inc
inc
lret
mov
xor
scas
mov
je
adc
dec
mov
jo,pt
inc
rorb
or
loope
inc
ret
inc
fs
xchg
daa
jg
lret
rcll
push
jg
rcrl
sub
mov
push
dec
out
lret
dec
mov
outsb
inc
faddl
repz
lock
push
sarb
add
sub
and
insl
loope
daa
les
xor
xor
add
jmp
dec
ror
or
dec
adc
sbb
repz
mov
xchg
dec
je
push
push
mov
icebp
adc
fistpll
push
dec
data16
inc
sbb
sbb
inc
mov
fmuls
mov
add
jno
push
mov
xchg
fwait
add
mov
xor
cmp
push
clc
sahf
jo
pusha
cs
int3
popf
std
adc
lods
aaa
cmp
scas
mov
insb
inc
xchg
cmp
xchg
lea
xchg
loop
cmp
inc
imul
sub
lahf
sbb
push
scas
xorl
test
bound
lds
inc
xor
test
loop
sub
fsubl
and
pop
aam
movsl
adc
mov
jmp
iret
dec
pop
ret
icebp
jmp
xlat
adc
in
push
or
xor
or
mov
adc
or
lea
and
out
xchg
call
dec
pushl
cld
pop
movsb
imul
in
shrb
pmuludq
jnp
rorb
and
fwait
xor
mov
mov
xor
or
pop
dec
add
or
or
movsl
std
into
dec
stos
lea
sbb
arpl
dec
mov
sub
jbe
sub
jb
push
mov
xchg
push
and
jnp
mov
in
arpl
loopne
jle
aas
test
in
adc
std
jo
and
int
xor
inc
lods
fs
xchg
sub
fucom
dec
cmp
mov
pop
adc
mov
add
xchg
rcrl
cmp
cmp
jg
es
pushf
test
dec
gs
sbb
stos
jp
out
sbb
repnz
dec
ret
out
mov
add
out
es
gs
scas
dec
pusha
jmp
sub
pop
or
mov
jle
loope
pop
xchg
cs
inc
js
xlat
or
scas
jmp
pop
lock
pop
das
jbe
dec
out
pop
ret
mov
jae
stc
and
xchg
add
mov
scas
xchg
xor
adc
mov
inc
push
xor
push
add
cmp
or
pop
cwtl
clc
sbb
clc
adc
xlat
xor
cmp
lahf
hlt
mov
dec
std
mov
mov
addb
and
sub
lds
mov
jge
mov
mov
adc
jecxz
addl
fadds
xor
movsb
addr16
and
data16
aam
dec
adc
mov
aas
pop
es
sbb
mov
out
lods
cmpsb
add
or
mov
es
fstl
shrl
sub
sub
pop
xchg
jo
adc
xor
and
stos
test
mov
cmpsb
mov
fcomip
jne
mov
xor
push
dec
xchg
cmp
jo
mov
gs
fwait
dec
cmp
pop
js
subl
sbb
test
in
xchg
mov
mov
dec
cs
lock
jo
and
push
cld
lret
push
pushf
mov
push
fnstcw
push
daa
int3
loope
dec
mov
cmp
sbb
lods
mov
pop
or
imul
mov
filds
into
xor
and
add
pop
xor
cmp
icebp
adc
rolb
call
aas
in
pop
sahf
jae
jae
jno
dec
sub
sbb
pop
cmpsb
jmp
sub
adc
out
sti
js
mov
int3
repnz
imul
and
sub
sti
or
or
jmp
push
xor
push
xor
jmp
sub
popf
pop
das
leave
int
inc
jmp
cs
mov
jne
dec
arpl
mov
out
xchg
sbb
mov
inc
jns
pop
rcrb
jns
ret
xor
in
mov
lret
test
mov
and
cltd
xchg
pop
push
mov
inc
jbe
fadds
inc
sti
inc
lods
aas
mov
push
xchg
cmp
and
mov
and
mov
push
subb
popa
adc
loope
jle
fstl
xor
jnp,pn
cmp
or
rorb
lahf
cmp
jecxz
and
push
fwait
nop
xor
in
movsl
cmp
out
das
dec
sbb
mov
mov
pop
test
arpl
dec
fucom
in
fwait
cld
xchg
out
sbb
mov
rcll
xchg
in
xchg
out
xchg
cmp
pop
dec
insl
loopne
imulb
or
inc
mov
les
pop
pop
xchg
lds
subl
lret
cmp
std
sbb
mov
sti
inc
cmp
adc
icebp
inc
mov
stos
call
fmulp
push
xor
jp
loopne
push
jae
je
push
int3
push
and
push
and
and
ss
jle
ret
aas
sbb
cli
mov
ffree
pop
cmp
ss
pop
mov
or
lret
mov
jb
pop
pusha
lcall
sbb
loope
xor
push
stos
sub
xor
ljmp
xor
loop
adc
aaa
xchg
adc
testb
jmp
int3
push
sub
add
jecxz
adcb
sti
xor
ret
or
inc
lret
dec
addl
push
mov
cmp
jo
xchg
mov
sbb
fsubl
repnz
add
jno
adc
mov
mov
orl
cs
jmp
lea
testb
adc
xchg
dec
dec
addr16
mov
xchg
aaa
clc
outsb
mov
insb
sub
xor
add
or
scas
push
das
mov
jno
ljmp
fs
in
inc
and
out
inc
push
push
inc
loop
dec
mov
loop
push
lods
xor
test
or
das
popa
mov
ficomps
fisttpll
std
and
insl
lahf
dec
xchg
lods
enter
out
lods
push
out
sbb
lret
loop
mov
or
ds
dec
and
adc
adc
imul
pushl
dec
add
pop
fimuls
es
mov
dec
mov
div
and
jmp
or
arpl
inc
sub
ljmp
ljmp
cmp
lock
daa
jmp
xor
bound
inc
jle
leave
xor
and
or
dec
mov
pop
xchg
mov
cmc
push
pop
xor
push
loope
les
push
out
mov
mov
push
inc
stc
in
mov
push
adc
fsubs
mov
adc
nop
loopew
push
pop
xor
loop
fisttps
lahf
das
nop
cltd
xor
mov
or
dec
out
pop
icebp
dec
and
cmp
pop
data16
inc
xchg
jb
xor
pop
jmp
test
imul
jne
pop
inc
in
pop
aam
mov
out
pop
test
jmp
mov
testb
pop
loop
push
xor
pushf
sti
outsb
push
nop
fnstsw
add
lret
jb
popa
mov
int
push
cmpsb
pop
mov
jmp
inc
loope
stos
and
jmp
adc
fists
pop
dec
or
lods
arpl
addb
jmp
push
lret
pop
add
pop
pop
push
int
adcb
xlat
or
ret
xchg
arpl
or
cld
test
sbb
inc
cs
repnz
push
insl
rolb
cmp
fldt
lock
inc
loop
mov
sub
inc
adc
adcb
in
add
xchg
mov
or
ret
cmpsl
sbb
mov
push
mov
mov
popf
iret
cmp
gs
sub
neg
lods
lea
pop
adc
pop
dec
daa
pop
inc
insb
lret
or
stc
jne
xor
int3
or
adc
leave
add
sbb
add
cmc
mov
sbb
pop
jecxz
sub
scas
ret
and
ds
adc
pop
fldenv
push
xchg
test
sub
mov
and
addr16
dec
inc
pop
mov
shrb
mov
and
xchg
push
push
ficoms
movsl
jo
inc
jnp
cmpsl
push
repz
lss
call
push
jno
adc
cmp
add
ss
xor
push
out
icebp
rdtsc
call
sbb
inc
sbb
cmp
insl
and
jbe
add
fsubrs
test
mov
jne
sbb
repz
add
fmuls
cmp
sahf
arpl
shlb
data16
fidivl
mov
sub
scas
dec
jg,pt
inc
pop
scas
test
inc
dec
or
sti
test
and
fbld
mov
cmp
sbb
pop
add
aam
and
stc
xchg
and
ficoms
ret
sbb
popf
push
inc
pop
cs
sub
add
pop
and
xor
leave
dec
int3
sub
pop
jne
sahf
xchg
add
data16
aas
fwait
push
cmc
loop
sahf
mov
mov
out
stc
movsl
add
sbb
pop
sti
imul
cld
cmp
dec
icebp
popf
addr16
dec
out
pop
int
aam
inc
mov
shll
inc
mov
add
ja
adc
jle
lret
jno
mov
loope
test
icebp
fs
sbb
mov
test
inc
fsts
cmpsb
test
in
fnstsw
cmp
pop
cmp
adc
dec
sbb
sub
ljmp
fsubrl
and
jmp
inc
fisttpll
call
lcall
lock
lea
push
jecxz
repnz
icebp
mov
lea
add
xchg
int3
out
scas
repz
mov
in
mov
fisttps
push
dec
inc
jl
andb
push
sarb
ds
pop
xor
mov
cmp
sub
adcb
cmp
loope
shl
sbb
add
cli
jne
out
xchg
mov
dec
fsubrs
cmp
or
cmpsb
jp
fs
mov
xor
aam
das
xchg
out
ror
ljmp
add
repnz
adc
sarb
fs
and
push
out
loope
lcall
xchg
cwtl
jo
cli
test
xchg
rcr
fsubrp
jo
push
mov
mov
mov
jecxz
dec
mov
pop
push
lods
xor
into
cmp
or
call
xchg
cmp
or
sub
mov
cs
scas
push
pop
notb
leave
mov
inc
cmp
and
out
clc
sbb
cli
xchg
sub
daa
addl
loop
sbb
xor
pop
in
inc
xchg
xchg
in
mov
dec
and
movsl
in
jmp
jae
aam
das
mov
sbb
xchg
cmc
mov
cmp
mov
push
mov
das
es
leave
and
loop
and
and
icebp
sti
loope
mov
lock
xchg
push
es
sbb
loope
jbe
dec
imul
jb
adc
and
push
sub
add
cltd
jae
push
inc
xchg
lods
jp
jecxz
lret
sbb
fucom
movl
inc
shlb
ss
repnz
jp
into
mov
popa
mov
cmp
rolb
mov
ds
bound
daa
jb
xor
mov
mov
jg
inc
pop
xor
into
pop
cs
cmp
pop
dec
inc
sti
out
aas
cmp
das
cmc
stos
dec
dec
mov
addl
jecxz,pt
pop
movsb
or
sbb
and
mov
loopne
out
xchg
enter
insl
out
xor
or
add
scas
divss
cs
xchg
push
push
in
ror
enter
dec
xor
aam
or
sbb
xor
ds
push
jp
push
shll
ja
cmp
pop
dec
xchg
push
dec
inc
shl
adc
sub
cmpsb
dec
into
add
imul
ret
vfrczps
push
sahf
daa
cs
lcall
jg
lret
scas
xor
jge
push
leave
mov
out
push
psrlw
pop
loope
adcl
in
ja
pop
gs
insl
idivb
shr
hlt
js
in
repnz
int
lock
negl
mov
fidivrs
sbb
lods
and
ficoms
jge
adc
mov
loop,pn
sbb
pop
lds
or
mov
and
xor
xor
repz
std
sub
pop
scas
add
cmp
cmp
movsl
shrl
frstor
mov
arpl
xor
lods
add
loop
xor
lcall
sbb
adc
imul
push
xor
sub
push
mov
mov
cmpsb
inc
mov
xor
loop
inc
sub
enter
jmp
scas
dec
ljmp
mov
pop
jns
insb
mov
andb
mov
dec
or
or
cmp
stos
imul
mov
push
mov
jb
fldt
jne
jb
aad
push
mov
loope
and
push
push
pop
and
push
and
sbb
fldenv
sbb
dec
repz
pop
adc
nop
insl
push
aas
mov
test
and
xor
lock
jno
gs
or
shll
outsb
int3
insb
das
lods
imul
cmp
xlat
push
fwait
or
ss
jne
push
adc
sbb
sbb
xchg
pop
js
fiaddl
sub
and
jle
mov
leave
cs
ja
xchg
fs
dec
pop
add
or
mov
adc
xor
pop
mov
cmp
les
das
fs
faddp
cmp
mov
enter
and
repz
cmp
lcall
stos
lret
in
pop
insl
jnp
xchg
cli
jl
cmpl
sub
int
or
nop
jmp
add
repz
stos
adc
les
mov
push
push
cmp
cmovae
push
mov
mov
pop
inc
inc
hlt
sbb
dec
ror
xchg
mov
pusha
or
add
mov
cmpsb
lock
inc
aam
mov
imul
mulb
push
xchg
cld
pop
or
or
adcl
in
mov
das
leave
xchg
pop
out
lock
push
mov
lock
pusha
int3
stos
out
out
pop
test
xor
test
jnp
push
out
and
jecxz
xor
cmp
test
repnz
xchg
cmpsb
gs
outsl
aas
jno
es
xchg
lcall
stc
jnp
subl
fmuls
hlt
mov
int
idivb
inc
pop
rorb
sub
fwait
aaa
xor
mov
cli
out
icebp
call
fiaddl
iret
call
jo
mov
and
lods
sbb
imul
ficoml
jb
xchg
outsl
mov
cmp
lret
nop
cmp
lret
adc
aas
jae
sub
jge
cwtl
dec
pop
loop
fs
sub
fmul
jae
cmpsl
xchg
jb
cmp
xor
mov
and
sbb
xlat
adcb
sub
xor
pusha
or
dec
jg
or
loop
fsave
xor
shrb
and
mov
xor
icebp
imul
push
je
pushf
gs
mov
mov
imul
cmp
ja
adc
rcll
jns
mov
sbb
xor
add
dec
jb
cmp
inc
clc
test
pop
and
cmp
dec
stos
popf
xorl
out
in
pop
psraw
aaa
je
decl
jo
inc
mov
pop
movsl
jmp
stc
rcr
pop
xchg
mov
pop
ds
adc
imul
xor
add
jmp
lahf
rcll
inc
outsb
inc
ror
jb
jp
lock
aas
xchg
or
push
sub
mov
adc
xor
popf
insl
pushf
pusha
stc
mov
jb
mov
xor
clc
and
scas
leave
repnz
pop
push
jbe
and
insl
repz
sub
xchg
jb
add
jmp
mov
inc
das
xchg
in
ljmp
imul
inc
add
ds
icebp
adc
lahf
sub
out
mov
dec
cwtl
pop
cmpsl
sbb
jae
adc
lcall
lock
out
jl
jmp
inc
fs
or
in
xor
lahf
mulb
sbb
jno
loope
lahf
mov
rcrl
test
ss
mov
cmc
cmp
push
dec
lret
mov
testb
or
shrb
iret
aad
lahf
sub
cmp
push
sub
push
cld
xchg
xor
mov
xchg
pushf
stos
jae
push
scas
xor
icebp
sbb
mov
loopne
jno
or
enter
mov
mov
mov
mov
hlt
add
ficoms
pop
pop
enter
int3
sbb
xor
or
orl
jns
cmp
pop
xchg
inc
out
jmp
jmp
lcall
jle
cli
xchg
in
dec
mov
cvtps2pi
aam
cmpsl
jmp
adc
je
pop
outsb
into
lods
sarb
into
shl
jno
xchg
pop
gs
mov
cmp
cli
pop
cmp
es
cmpsb
pop
jge
roll
and
jno
enter
xchg
in
adc
sbb
push
in
mov
mov
cmc
jg
mov
xchg
inc
ds
mov
sbb
into
sub
enter
inc
lock
orb
cltd
push
imul
mov
mov
mov
dec
fimull
in
lods
jge
fwait
repz
mov
push
dec
out
mov
dec
sub
loope
cs
outsb
imul
add
or
inc
jl
aas
jns
xlat
mov
jnp
dec
daa
cs
iret
pop
pusha
dec
mov
mov
mov
mov
push
fdivrs
int3
fdivrl
xor
add
mov
out
test
add
daa
int3
ret
inc
jmp
pop
jle
daa
arpl
addr16
xchg
out
sahf
pop
lahf
aad
popa
xor
movsb
test
push
addps
fcoms
adc
push
cld
sbb
insl
and
movsb
stos
cltd
iret
pop
sbb
outsb
push
xchg
insl
mov
aam
loope
sbb
cmp
test
mov
push
sbb
or
jnp
xor
bound
add
sarl
xchg
out
ret
or
cs
movsb
sbb
in
insl
xchg
pop
jns
aas
fbld
shll
fistpl
xor
gs
xor
fwait
mov
movsb
pushaw
push
jp
test
pop
add
xchg
mov
in
mov
pop
adc
pop
aaa
pushf
call
ss
and
dec
test
sbb
xchg
int3
clc
sub
int3
test
add
movsb
cmc
cli
jb
in
add
mov
std
cmc
ret
fdivrl
pop
push
gs
and
push
xchg
aam
mov
fdivs
int
adc
or
adc
xor
fstl
sbb
mov
int
gs
outsb
xchg
inc
ret
mov
scas
mov
addr16
cmp
jl
pop
sti
in
and
add
pop
lahf
jle
adc
outsb
fwait
sarb
dec
out
test
subb
stos
mov
mov
push
cmp
xor
xchg
fnstcw
in
mov
pop
xchg
pop
and
fcmove
sbb
imul
sbb
push
jle
dec
stos
shrl
pop
mov
ljmp
cld
mov
invd
out
add
stc
enter
out
mov
insl
subb
jbe
adc
mov
sahf
mov
sub
add
int3
sub
push
pop
add
mov
outsl
pop
mov
jo
scas
cmpb
cmpsb
iret
fs
stc
and
xor
ds
bound
loop
icebp
jecxz
adcb
ss
es
pop
pop
insb
jb
add
and
out
mov
pop
add
mov
push
and
mov
in
mov
push
out
daa
shl
cmc
xchg
icebp
sub
jge
jnp
mov
sub
fstl
in
clc
sbb
and
inc
int
add
mov
icebp
add
xchg
xlat
arpl
sub
scas
inc
jmp
cli
loop
pop
sahf
pop
in
mov
in
stc
push
stos
sub
jle
or
cli
mov
or
sbb
jle
mov
fdivr
fdiv
daa
sub
sub
aaa
or
lods
shr
fcomps
fldcw
dec
lds
data16
dec
mov
scas
addr16
and
cmpsl
shlb
cmpsl
cld
sub
dec
xor
sbb
mov
cltd
and
push
xor
adc
cmp
push
cmp
mov
or
xchg
sarb
sbb
jmp
push
ftst
push
mov
inc
mov
mov
and
movsl
push
test
mov
push
imulb
adc
arpl
dec
ljmp
mov
out
jg
and
jl
cmp
lret
pop
ret
lret
jge
pop
fidivrl
sahf
in
lods
ret
jecxz
xor
fcoms
jg
aas
inc
add
inc
adc
sbb
stc
push
adc
es
mov
aam
push
mov
push
xchg
lret
xor
jmp
jg
jno
mov
push
xchg
cli
aas
xchg
jno,pn
push
out
daa
jns
or
std
adc
repz
mov
push
out
jecxz
shl
int
enter
cmp
out
hlt
std
xor
xchg
imul
pop
mov
sub
jb
popf
int
add
adc
jo
and
or
stos
lock
pop
add
es
pop
and
int3
xchg
pop
xchg
xor
and
adc
add
sti
sub
das
add
scas
scas
dec
bound
sub
add
xchg
mov
sbb
pop
xchg
mov
loopne
and
xlat
xchg
or
adc
in
dec
push
add
data16
jecxz
stos
add
or
mov
cmpsl
popa
lds
ret
cmp
mov
push
mov
ja
jg
fwait
mov
nop
aaa
fnsave
add
arpl
xchg
jne
into
mov
dec
sub
andl
push
and
push
scas
imull
loope
mov
scas
pop
fisttpl
fsub
in
lods
jae
jmp
les
jnp
and
add
int3
cmp
push
adc
mov
jnp
cld
mov
xlat
push
cmp
mov
or
push
inc
jb
pop
movsb
ret
outsb
js
mov
dec
arpl
jp
fs
int3
sti
mov
scas
add
mov
stc
jl
adc
insb
inc
add
push
into
pop
subb
out
xor
nop
sub
adc
xchg
and
lcall
mov
rcrb
jp
pop
fcomps
or
popa
jae
les
adcl
and
jno
daa
outsl
sub
dec
das
push
lods
inc
add
cmp
dec
push
jp
scas
cmp
rcrb
sbb
jl
sbb
jl
loop
or
jno
loope
imul
lea
imul
mov
aam
gs
insl
incb
push
bound
rcll
rcrb
stos
xchg
jg
stos
dec
out
lcall
cli
pop
test
cmp
cli
xor
or
addr16
mov
fdiv
and
inc
out
pop
imul
js
push
cs
outsl
in
pop
sbb
test
insb
xor
dec
ret
nop
mov
xor
xor
fsubl
push
add
fisttpl
aaa
mov
cmp
pop
pop
jb
addl
push
jmp
sbb
sti
testl
cmp
outsb
add
js
or
mov
and
jp
inc
push
mov
adc
jbe
subb
xchg
pop
mov
hlt
cmp
dec
adc
pusha
imul
push
inc
or
cmc
and
daa
jl
popf
sti
lods
rcrb
cmp
xor
shrb
pop
lods
rcrl
adc
inc
dec
sub
out
ret
jp
jne
out
push
es
xor
cmp
stos
inc
dec
js
jnp
pop
push
push
xchg
and
sarl
push
and
xchg
je
sbb
push
push
pop
xchg
ficomps
sbb
and
mov
lahf
dec
fs
xchg
lret
add
iret
mov
mov
cmc
inc
outsb
jecxz
pop
or
sbb
not
dec
in
les
mov
out
pop
pop
cmp
aam
or
sbb
pushf
in
mov
mov
sbb
sub
rcrl
xor
xor
add
clc
in
jno
cmc
mov
es
out
rol
leave
cltd
sub
scas
sub
push
or
lcall
test
mov
cmc
jo
push
scas
push
jecxz
xchg
in
rcl
pop
push
and
call
repz
fsubrs
and
in
pop
fsubrs
pop
dec
jbe
aad
fistl
test
jmp
nop
jge
cmp
dec
pop
xor
int
shrl
enter
pop
xor
xorl
and
adc
daa
orb
outsb
je
xor
push
pop
jns
mov
cli
cmp
xlat
out
inc
sbb
xchg
aas
push
scas
fstps
add
adc
adc
xor
or
adcl
jl
inc
cmp
xorl
xor
adc
daa
mov
xlat
adc
bound
sets
andl
or
and
popf
idivl
in
out
out
daa
lcall
loop
jae
xchg
add
sub
pushf
mov
or
cmp
bound
icebp
dec
sub
mov
int3
cli
mov
enter
addr16
stos
jno
push
push
adc
jbe
into
stos
inc
loopne
sub
jecxz
or
xor
insb
and
sub
jb
stos
fcmove
lock
ret
icebp
xchg
sub
in
pop
icebp
xor
mov
cmpsb
cmp
push
test
loopne
fmuls
pop
jmp
push
cmp
lahf
and
je
sub
bound
mov
and
lods
pop
xor
scas
imul
mov
test
dec
push
fdiv
mul
jnp
and
xor
inc
in
adc
hlt
jg
movsl
pushf
lock
jmp
pop
mov
rcrb
inc
insl
out
ljmp
repnz
out
lods
pop
xor
push
das
loopne
pop
sbb
es
int3
aaa
mov
ret
lock
rcll
aaa
pusha
cmp
inc
outsb
inc
fninit
or
loop
wbinvd
shlb
mov
popf
xlat
je
fimull
ja
adc
mov
dec
add
inc
mov
mov
add
jmp
push
test
xchg
pop
testb
cltd
xchg
mov
xchg
jecxz
std
insl
pushf
dec
xchg
xchg
pop
loopne
jbe
or
mov
mov
mov
pop
aam
loopne
and
ret
mov
cmp
add
pop
rcrl
push
push
sub
in
or
push
or
pop
and
xchg
outsl
aaa
subb
push
dec
sbb
loop
cld
out
pop
xor
and
loope
xor
lahf
ss
dec
in
stos
adc
lds
sub
and
cmp
inc
test
jbe
dec
shrl
out
cld
lea
sub
lods
mov
mov
xor
dec
pop
int3
cwtl
and
add
pop
ret
jo
imul
cli
sub
xor
dec
lcall
mov
sub
cltd
scas
nop
lods
insl
inc
dec
int3
std
lahf
test
pop
mov
xor
push
lods
cmp
and
xchg
adc
jae
movsl
daa
add
in
xor
xor
cmp
dec
stc
int3
xchg
insb
fwait
loope
call
sub
add
inc
mov
push
push
sbb
jle
stos
pop
push
xchg
xor
dec
outsb
jmp
icebp
jns
jp
adc
sbb
ja
inc
add
shlb
mov
inc
lds
sub
loope
dec
testl
fsubrp
jne
std
mov
mov
xor
jecxz
pushf
ja
cli
sbb
jae
adc
mov
mov
stc
jb
test
sbb
cltd
jl
testb
mov
add
test
jl
pushw
repz
cmc
test
cmc
inc
xor
fsubr
xlat
out
cli
cmc
or
adc
xchg
cmp
jp
jne
cmc
cmp
sarb
sti
in
add
into
inc
sahf
adc
mov
sbb
shll
iret
aam
pop
enter
push
cwtl
mov
pop
cmpsl
adc
in
jg
popa
or
cltd
sarb
push
ror
sbb
fstps
jo
jno
inc
ret
cltd
or
inc
fs
je
dec
rolb
and
loop
adc
arpl
add
mov
dec
jno
sub
push
adc
xor
out
insb
or
in
sub
scas
je
push
gs
lret
ss
stos
shlb
xor
sub
pop
icebp
jno
pop
nop
push
jle
jge
pop
mov
mov
jb
cmpsb
pop
mov
add
jle
cmp
sbb
mov
stos
add
xor
and
sbb
imul
test
daa
inc
jge
out
sub
and
in
mov
mov
mov
inc
mov
sbb
and
test
mov
das
cmp
shl
insb
xchg
xorl
jne
ss
xchg
adc
mov
ljmp
mov
scas
lret
mov
pop
sahf
fldenv
jne
xchg
or
or
pop
test
data16
out
adc
js
or
mov
imul
or
mov
shr
into
pop
pop
inc
jge
enter
cwtl
imul
je
mov
out
sub
daa
repnz
xor
pop
in
insb
jae
jae
pusha
pop
dec
xor
addr16
push
lret
and
push
pop
cmp
aam
adc
mov
popa
push
test
sbb
add
test
cmp
mov
dec
movsl
lahf
pop
push
pop
add
fiadds
mov
bound
das
xor
les
scas
and
or
out
mov
xchg
testb
or
ja
fsubrl
lods
je
add
and
sbb
dec
push
repz
adc
and
mov
pop
sar
sub
push
out
or
inc
notb
adc
stos
les
adc
js
cmp
gs
sahf
pop
push
cmp
stc
inc
dec
mov
xchg
pop
inc
push
jge
arpl
or
imul
rcr
xor
mov
push
mov
andl
or
sbb
jno
out
fdivs
pop
nop
leave
jns
out
xor
rcll
repnz
sarl
lret
sbb
cs
pop
inc
cmp
add
insl
jnp
out
ss
push
loop
inc
jl
adc
imul
aas
mov
scas
es
and
leave
cmp
pop
jge
push
cmpsl
cmp
mov
sbb
fnstenv
dec
popf
jge
cmp
add
jmp
bound
adc
xchg
add
dec
mov
and
bnd
mov
lock
jbe
inc
push
and
add
add
dec
aad
movsb
adc
arpl
pop
hlt
aaa
mov
movsb
mov
push
adc
movl
jmp
call
test
aam
aam
daa
push
mov
dec
jno
arpl
or
movsl
push
repz
idivl
cmp
and
inc
inc
scas
pop
mov
adc
add
hlt
xchg
inc
pop
xor
mov
lds
out
xchg
imul
adc
mov
std
arpl
int3
xchg
push
xor
cmp
repz
and
loopne
es
cmp
push
inc
or
icebp
andl
xchg
add
sub
mov
xchg
and
adc
jns
xchg
mov
cltd
out
push
in
daa
jge
stos
sub
aaa
sbb
cmc
push
dec
pop
ljmp
cwtl
ss
orb
fstpt
and
iret
stos
cmp
or
inc
pop
inc
fdivs
add
es
aas
mov
lret
dec
mov
jns
pop
and
stos
pushf
inc
std
cmc
dec
xchg
and
jb
xchg
or
xlat
cmpsl
outsb
cmp
cmp
pop
adc
je
icebp
or
roll
mov
push
adc
cli
adc
mov
xchg
mov
pop
mov
xor
loop
jae
push
fiadds
cltd
dec
ljmp
add
dec
xchg
add
aam
sbb
into
mov
jbe
imul
push
int
dec
jns
jo
js
movsl
dec
dec
add
dec
movsl
std
mov
sub
mov
not
aaa
inc
lock
je
cmp
dec
movsl
or
fucom
or
repz
sub
loope
jp
adc
sub
xor
mov
stc
aam
push
movsb
fldt
adc
inc
enter
or
adc
xor
sahf
cmp
xchg
scas
testl
jns
cmp
push
cld
sbb
adc
idivl
decl
mov
iret
xorl
arpl
imul
cli
in
mov
hlt
xchg
mov
xchg
in
or
push
aad
in
cmp
pop
mov
cmp
xchg
enter
adc
mov
adc
in
sub
ret
cwtl
sarb
lahf
sub
cmpsl
push
cmp
and
test
xchg
mov
xor
hlt
out
inc
push
pop
mov
ror
ds
insb
push
cmp
out
mov
pop
jne
cmp
sahf
mov
adc
shrb
fs
push
jo
pop
pop
jl
mov
pushf
lcall
mov
sti
lcall
cltd
xor
add
sbbb
sub
cmpsl
dec
lcall
pushf
pop
imul
push
outsl
aaa
jecxz
dec
jnp
lret
daa
xchg
jae
jge
inc
push
pop
aam
rorb
nop
fcoms
or
jne
xor
adcb
sbb
and
popf
adc
cmpsb
es
jno
inc
cmp
das
out
bound
leave
xchg
add
mov
bnd
push
jmp
adc
pop
std
pop
mov
sbb
out
sbb
adc
add
aas
mov
mov
aam
pop
cmc
mov
push
insl
mov
out
or
stc
jge
pushf
mov
and
jb
cmp
and
sub
pop
xorb
fs
and
mov
xchg
adc
insl
arpl
das
inc
push
repz
daa
mov
sub
jbe
mov
or
jl
cld
loope
dec
shl
inc
aaa
pop
mov
in
rolb
mov
and
push
call
or
outsl
adc
pop
mov
push
inc
add
iret
cmp
xor
loopne
movsl
loopne
cmp
fxch
jmp
push
ret
in
ljmp
int
push
inc
pop
shll
jl
xor
ret
sbb
lods
or
loopne
add
lret
lea
fwait
cltd
out
xchg
icebp
rcr
pusha
jp
std
inc
test
sub
stos
jmp
mov
mov
sahf
cmp
jecxz
rorl
mov
jecxz
or
imul
adcb
and
rcll
adc
lahf
out
sub
and
and
push
dec
fs
jmp
sub
xchg
hlt
vunpckhps
push
adc
and
ds
int
or
movsl
shl
mov
fistps
mov
xchg
dec
mov
rol
rclb
push
xor
std
rclb
mov
fbld
les
mov
jae,pt
cld
lds
xchg
ret
xchg
cmpb
ds
mov
sbbb
mov
push
aas
cmpsl
cmpsl
pop
js
ror
pop
out
mov
cwtl
movsl
sub
in
mov
fnstcw
jno
mov
mov
push
or
sub
sbb
es
jae
in
pop
mov
ss
movsl
adc
cmp
lods
clc
sub
cmp
cs
mov
shll
adc
sub
push
sbb
and
add
loop
xchg
or
pusha
addr16
pushf
daa
xchg
xor
popa
ljmp
pop
enter
push
sub
push
xor
inc
lret
push
lret
cwtl
testb
in
and
mov
inc
lods
ficoml
push
scas
add
or
sarb
inc
dec
jae
push
mov
movsl
test
mov
inc
push
mov
ss
mov
call
push
pop
scas
dec
and
out
mov
xchg
aad
pop
ret
rorb
lahf
out
out
pop
stos
pop
mov
imul
outsb
dec
jmp
or
fdivr
sahf
test
das
sbb
jmp
pop
nop
mov
scas
out
cmpsl
push
jmp
xor
imulb
dec
dec
cvtdq2ps
inc
add
out
mov
or
fisubrs
ja
pop
push
aaa
es
add
push
jmp
sahf
pop
jmp
sbb
sbb
jo
mov
mov
or
not
insl
es
fisubrs
inc
bound
jmp
push
dec
pop
sahf
jns
popf
addr16
fiaddl
xchg
or
mov
mov
shr
fwait
sbb
xchg
inc
cmc
mov
inc
cmp
pop
and
movsl
add
mov
ljmp
jg
inc
pextrw
insb
push
mov
fdivl
psubsb
and
cmc
add
sbb
sub
add
inc
ret
leave
cmc
ja
lret
sub
popa
adcb
test
sbb
rorl
call
dec
mov
mov
int
mov
leave
cs
cltd
addr16
aaa
cli
sub
mov
push
fcomip
fstpl
and
or
arpl
subl
mov
dec
or
mov
push
add
int
outsb
test
sub
dec
jb
push
ja
icebp
jmp
lcall
cmpsb
out
lea
jae
add
mov
jb
cmc
std
or
xchg
mov
lds
cmpsl
adc
adc
jb
pop
addr16
add
stos
or
dec
and
pop
adc
inc
dec
jo
stos
push
fstpl
cs
and
fimull
sbb
dec
sub
ficompl
or
addr16
js
mov
jnp
or
cmp
fucom
jmp
cmp
adc
push
pop
dec
xchg
push
sbb
xchg
cmc
and
and
add
add
mov
sbb
push
xchg
outsl
mov
inc
mov
bound
enter
mov
shr
pop
xchg
xchg
push
push
cli
push
out
adc
dec
mov
sbb
push
test
add
daa
pop
or
sub
or
or
arpl
jnp
mov
push
lret
push
mov
adc
sti
jnp
xchg
idivl
dec
pop
je
jne
push
xor
int3
hlt
and
sub
mov
jbe
pop
ljmp
pop
push
lret
popf
lods
xchg
pusha
sahf
scas
fdivrl
and
aas
cmp
aad
jp
jl
push
pop
test
dec
dec
iret
xchg
cld
mov
mov
repnz
and
loope
add
sbb
jno
jl
lret
std
lods
dec
nop
add
dec
and
xchg
mov
dec
xor
rorl
mov
shl
dec
pop
ja
into
pop
sbbl
cmp
sbb
shl
cmp
mov
cli
jnp
jge
inc
jb
mov
adc
inc
jp
pusha
add
and
jo
lcall
out
sti
mov
xor
fisttps
xor
fsubrs
sbb
inc
jbe
mov
fldcw
jns
dec
push
inc
lret
fistpll
fiaddl
and
fisttps
jle
add
pop
repz
daa
rcr
incl
mov
inc
mov
pusha
loop
dec
lahf
and
movsl
jmp
sbb
xor
mov
cmpsb
sub
nop
aaa
rcrl
push
repnz
mov
loope
loop
cmc
sbb
std
xor
shl
imul
jge
add
out
jo
or
outsb
fimuls
sbb
repnz
inc
and
sub
scas
repnz
fistpl
out
repnz
sbb
push
xor
stos
cmp
pop
jg
loopne
mov
jp
mov
sub
push
push
popl
std
les
mov
addl
dec
pop
jp
push
xor
pop
sete
aas
pop
mov
push
test
mov
sbb
xchg
jne
repnz
dec
push
cli
cmovb
lods
lods
or
and
push
stos
mov
mov
nop
scas
enter
ret
jb
addl
pop
out
call
mov
inc
stos
push
mov
stc
adc
jmp
ror
mov
roll
aam
es
popa
movsl
mov
pushf
jmp
xchg
test
sarl
sub
addr16
cld
cmovo
adc
mov
sub
dec
adc
pusha
ss
ljmp
lret
repz
lds
add
cs
pop
mov
cmp
scas
in
adc
or
rol
negl
cmp
push
test
insb
out
ret
cld
sbb
ficomps
push
sub
pop
loop
or
andl
loope
out
ja
aad
push
pusha
sarb
out
dec
jmp
push
jp
jmp
and
add
dec
mov
xor
or
dec
in
out
enter
jae
pop
ret
js
xchg
nop
pusha
int3
sbb
data16
jno
xchg
in
add
hlt
xchg
into
pop
sti
inc
lods
rcrb
cmp
add
repz
xlat
add
cmp
xor
jne
ret
fists
scas
in
add
adc
in
out
data16
cli
jae
jge
xchg
pop
bound
loope
add
push
and
push
mov
xchg
mov
stos
mov
push
jge
aam
xchg
dec
xchg
push
sahf
stc
cs
daa
ret
cmp
movsl
xlat
ds
stos
cmc
roll
test
hlt
xchg
mov
cmp
jp
pusha
fsubs
std
mov
push
data16
inc
jbe
xor
mov
push
sub
stos
pop
xchg
jp
test
dec
cld
mov
ds
mov
inc
out
sbb
test
addb
fs
or
push
pop
sbb
fs
repz
fldt
mov
and
pop
sub
mov
push
mov
test
mov
xor
ds
mov
mov
sbb
or
jg
pop
jmp
xor
add
das
and
mov
push
mov
arpl
and
sahf
sahf
scas
fstpt
add
gs
neg
mov
pop
inc
xor
pusha
sti
jge
pop
icebp
ss
cmp
xor
shrb
inc
clc
das
add
add
mov
aam
jbe
int3
xor
lcall
add
loope
inc
ljmp
and
mov
dec
cmc
mov
adc
jnp
and
iret
fsub
pop
pop
ret
sub
cwtl
mov
minps
jbe
or
scas
inc
in
mov
jge
mov
insl
pop
lret
cmp
icebp
and
stc
sub
cltd
out
inc
mov
jae
sbb
insb
outsb
cmp
xchg
lea
loopne
movsb
mov
mov
pop
lods
mov
inc
leave
out
lock
cmpsb
sbb
or
jg
sbb
inc
jmp
out
sbb
or
dec
pop
pop
xchg
jecxz
imulb
lcall
add
xor
std
cmp
sub
cmpsb
xchg
subl
push
je
ljmp
jno
adcl
out
repz
mov
xor
stos
mov
pop
mov
mov
sbb
cmc
es
lods
sub
pop
insb
mov
insl
rcrl
mov
xor
jg
fnop
xchg
mov
pop
xchg
or
ljmp
add
mov
bound
ljmp
out
add
loop
test
sahf
mov
sub
sub
jmp
lret
inc
rorl
xchg
xchg
repnz
test
shrl
pop
dec
cmp
push
es
jecxz
shlb
pop
pop
insl
iret
bound
sub
pusha
hlt
inc
ret
add
mov
add
push
ds
dec
jp
in
mov
rcl
rcrb
mov
push
mov
out
aam
pop
xor
stc
stos
and
loope
add
lahf
test
in
push
dec
out
push
jmp
scas
dec
mov
xchg
push
ljmp
xor
mov
xchg
lock
adc
xor
cmpsl
sbb
push
adc
jbe
shll
ljmp
inc
push
adc
mov
ret
ss
popa
and
dec
xchg
dec
cmp
add
push
in
test
adc
xchg
adc
pusha
movsl
cmp
xchg
gs
pop
xorl
pop
hlt
insb
movsl
sti
add
and
sub
add
divl
mov
repnz
inc
dec
fistpll
stos
sbb
add
pop
cmp
test
mov
mov
js
mov
add
mov
test
fs
dec
gs
mov
jg
push
addb
push
test
loop
sti
mov
adc
hlt
sub
cmpl
and
jle
clc
mov
mov
movsb
loopne
imul
mov
lea
lock
cmp
pop
xor
cmp
cld
mov
xor
addb
stos
mov
cmc
and
jne
in
ret
dec
dec
jno
add
in
sti
cmp
mov
cmp
push
mov
cwtl
sarl
int
jns
push
das
insb
inc
push
push
or
cmpb
or
fisubl
push
stc
dec
lea
testb
mov
loope
add
idivb
pop
lcall
ret
add
inc
mov
inc
xchg
dec
shrl
lods
lcall
lods
jmp
push
mov
mov
lock
mov
subl
adc
popf
or
in
and
xor
dec
in
out
cmpsb
loopne
mov
repnz
sbb
stc
pop
les
aad
sub
xchg
inc
xchg
out
cmp
xchg
cltd
cwtl
adc
and
xchg
mov
in
mov
dec
cmp
jne
stos
jecxz
aam
stc
aas
mov
mov
mov
xor
push
lahf
mov
jne
shrb
mov
mov
lds
mov
and
jl
and
fsubr
sub
int
loop
ret
pop
rolb
pop
and
arpl
or
inc
aad
adc
lock
mov
add
add
pop
int
icebp
or
xchg
push
push
mov
mov
mov
pop
in
dec
jne
out
shrl
add
dec
repz
rol
rcll
mov
dec
jp
xor
push
aas
mov
out
xchg
push
push
out
sbb
inc
pop
es
sysret
arpl
xorl
das
xchg
packssdw
dec
mov
cmpsb
subl
sbb
test
add
jge
aaa
test
cmp
and
jns
sbb
fildl
sub
cs
or
pop
test
int
call
and
adc
cmp
pop
rcrb
ret
pop
in
test
xchg
ret
bound
leave
jne
jmp
jg
pop
push
out
into
inc
push
mov
xor
adc
jb
xchg
sub
push
addb
in
or
xor
repz
sub
cmp
inc
mov
add
negb
mov
and
jge
lret
subb
pop
mov
outsl
icebp
mov
mov
pop
adc
loopne
pop
pushf
outsb
lods
jo
pop
adcb
or
pop
cmpsl
dec
cmpsl
push
test
das
cwtl
inc
jo
rcr
test
pop
lret
mov
leave
lret
loop
xchg
sub
and
or
xor
jns
ret
test
sub
pushf
test
push
mov
push
gs
loopne
xor
inc
sbb
icebp
xorb
jle
daa
mov
xor
rcrb
js
inc
repnz
fsubr
lcall
jmp
mov
mov
cmpsb
pop
mov
mov
sbb
jg
repnz
xchg
dec
adc
cld
scas
js
bound
jne
pop
sub
push
or
xor
cld
dec
and
mov
cmpsl
jl
mov
lea
adc
popf
adc
xor
inc
std
or
sub
pop
in
mov
jno
loope
mov
mov
or
popf
dec
mov
dec
imul
clc
mov
pop
data16
icebp
vcmpsd
mov
mov
jmp
add
in
push
adc
dec
mov
cs
rol
movl
cmp
xor
or
inc
pop
adc
sub
sahf
xchg
or
pop
mov
insl
pop
dec
push
shlb
dec
pop
inc
into
sbb
xlat
add
ja
arpl
mov
xor
adc
mov
jnp
pop
jo
sti
jl
jl
and
aas
ret
dec
mulb
movsb
cli
aas
cmpsl
push
push
pop
xchg
stc
jae
out
insl
fistps
jmp
repz
xchg
fnstsw
inc
jae
and
or
and
add
xchg
dec
fimull
data16
and
shl
inc
roll
outsl
jne
test
sti
and
or
out
sbb
push
enter
das
stos
push
stc
dec
les
lods
pop
inc
jmp
stc
push
jle
and
into
mov
and
jne
stc
xchg
ficoms
pop
xor
and
arpl
push
es
mov
rorb
arpl
sub
xchg
pop
and
cmp
sub
mov
sbb
lods
loope
aad
out
jge
push
mov
subb
jg
lahf
mov
scas
jmp
xlat
push
repnz
or
fs
subl
dec
jne
push
lock
or
add
jbe
lea
mov
mov
add
jns
scas
inc
cli
fistpll
xchg
ja
nop
xchg
ret
dec
push
jecxz
or
fistl
lahf
or
movsb
fdivr
lods
mov
in
cld
push
xor
scas
jecxz
out
push
add
test
aaa
int
xchg
or
xor
push
gs
xchg
sti
xchg
jmp
fisubrs
add
dec
jne
int3
sti
outsb
mov
or
outsb
or
mov
shr
adc
mov
push
mov
mov
mov
mov
dec
jecxz
pushf
pop
adc
and
enter
dec
pop
fmul
iret
cmpsl
push
add
add
es
mov
mov
rcl
mov
xchg
push
stc
lret
int3
mov
adc
jno
dec
mov
push
mov
into
lock
cld
mov
sub
sub
push
xchg
mov
xor
aad
ds
int3
sbb
xchg
insl
jns
xchg
cmp
imul
repnz
xchg
fwait
push
pop
jae
aas
fnstcw
xor
mov
push
out
jns
notb
imul
sbb
inc
xchg
out
xchg
fcmovb
cmp
rclb
les
cmc
scas
xchg
pushf
lea
lcall
clc
xchg
sub
jl
mov
or
jne,pn
in
out
xchg
or
xchg
adc
mov
rolb
jmp
lock
stos
aad
js
and
mov
test
xchg
les
sti
push
mov
shll
mov
xor
add
das
lock
add
mov
jo
ljmp
push
mov
out
pop
std
lods
divl
push
pminub
rcl
jl
stos
test
movsl
fldl2e
roll
inc
jle
inc
push
xchg
leave
xor
aam
jo
mov
sub
mov
lret
dec
aas
aaa
mov
or
inc
out
rorl
or
and
lods
jns
add
and
test
sti
add
out
in
arpl
pop
arpl
icebp
inc
into
mov
arpl
lret
mov
mov
xor
out
cmp
lcall
fmull
fildll
testl
jns
push
jo
out
rorb
subb
aad
lea
pusha
cltd
push
push
adc
xchg
sbb
xchg
test
sub
cmp
xor
int3
addb
push
xchg
inc
cmc
cmp
aas
pop
mov
jl
repz
mov
push
sbb
imul
inc
fidivs
dec
fnstcw
ja
inc
pop
lret
mov
cld
push
add
popa
xor
cmpsl
pop
mov
xlat
inc
xor
sub
jle,pn
xlat
jmp
hlt
loopne
in
pop
cmc
orl
xor
sbb
dec
cmc
jns
inc
sub
mul
int
cmp
xchg
dec
sub
mov
popf
mov
lods
cmp
mov
xor
aad
cli
lds
xchg
popa
and
sub
dec
popf
stc
and
push
sub
lods
mov
cli
sub
dec
cmp
cmp
mov
jp
popa
imul
test
cld
mov
xchg
add
or
adc
ret
cld
test
xchg
and
push
or
enter
fldcw
xchg
xchg
scas
insl
sbb
adc
shl
mov
mov
mov
and
inc
mov
pop
call
mov
xchg
lret
inc
pop
jmp
lods
out
mov
mov
and
imul
cmpsl
adc
xchg
sbb
pop
mov
push
test
mov
cmp
stos
daa
icebp
mov
negl
add
gs
jmp
add
jae
pop
in
and
pop
add
push
rorb
or
jnp
imull
sahf
mov
jmp
sbb
mov
cmpsl
adc
lret
push
cmp
inc
adc
xor
xchg
scas
insl
xchg
adc
bound
mov
add
mov
mov
scas
je
cmc
jecxz
push
jnp
mov
aas
mov
sbb
cmc
pop
inc
sub
rorb
fsubr
js
xchg
loop
es
imul
ds
cli
pop
leave
cmc
jo
pop
int3
cli
sbb
iret
fsubl
stos
mov
inc
xor
sbb
adc
cmp
or
xchg
cmp
aad
sarb
test
test
xchg
xlat
cs
stc
sub
push
shl
pop
out
jl
out
inc
leave
jns
out
add
pop
stos
sbb
sub
das
jne
out
test
or
adc
loop
sbb
sahf
test
adc
jnp
push
mov
adc
pop
bound
aad
popa
out
push
shl
dec
sub
sbb
lds
mov
les
inc
ret
push
setb
ret
jmp
and
aaa
mov
scas
iret
xchg
sbb
ja
aaa
jbe
mov
or
test
mov
rcll
add
cmp
sbb
or
mov
jmp
jg
dec
mov
sti
rcll
mov
push
mov
scas
lock
inc
adc
push
ss
in
or
divb
mov
and
outsb
fbstp
sahf
add
in
and
cmp
sahf
lcall
and
pop
add
into
lret
dec
inc
jmp
scas
es
clc
fwait
dec
xor
xchg
out
test
in
gs
jae
daa
mov
xor
mov
sbb
mov
mov
pop
and
lret
xor
pop
ss
rol
push
inc
jnp
loopne
test
aas
test
jecxz
or
and
jl
in
adc
shll
fmul
add
loope
mov
push
imul
mov
mov
repnz
and
add
ss
out
and
aad
xor
jmp
ljmp
xor
cmp
icebp
jbe
stos
pop
mov
push
cmpsb
dec
jne
sarl
lock
sub
repz
aas
push
cltd
mov
mov
sub
push
das
push
cs
pop
jbe
mov
or
mov
push
lods
sbb
mov
sbb
inc
sbb
rorl
mov
insl
jecxz
stos
push
testb
loop
testl
or
or
sbb
or
stos
cmp
or
mov
paddw
out
daa
sub
pop
push
popa
into
addb
insb
mov
imul
into
mov
les
arpl
std
outsl
cmp
cmp
cli
call
push
bound
mov
int
scas
dec
xchg
mov
ret
dec
ss
xchg
inc
arpl
bound
aad
jb
xchg
ds
ffreep
bound
sbb
leave
stc
adc
icebp
jge
xor
lods
ds
mov
fadd
ret
insl
inc
jnp
je
adc
in
xchg
arpl
lock
das
getsec
or
inc
les
rcrl
movsl
dec
sbb
sarl
sub
pop
addr16
cmp
cmp
or
pop
les
ret
adc
dec
hlt
shlb
das
leave
jecxz
xchg
mov
std
adc
pop
outsl
mov
pushf
mov
jb
shr
ret
push
shld
jo
scas
jmp
pop
inc
xchg
dec
mov
sbb
in
pusha
mov
xor
dec
inc
push
test
and
cltd
sbb
push
out
adc
pop
xchg
imul
adc
rolb
icebp
sub
out
aas
stos
cmp
cmc
rolb
pop
xor
mov
pop
imul
out
incb
sbb
mov
mov
popa
pusha
xor
push
imul
push
push
push
cmpsb
or
dec
mov
xchg
cltd
lret
out
lods
es
add
jb
adc
jb
mov
inc
cmp
jle
repnz
push
lret
lds
in
nop
jns
jle
mov
adc
push
addr16
dec
mov
sbb
push
inc
in
nop
aad
xor
and
pop
arpl
inc
fwait
scas
int
mov
in
sub
mov
mov
pop
test
inc
into
into
mov
xchg
sbb
and
add
add
xchg
mov
cmc
jge
inc
add
mov
nop
fistl
in
add
mov
and
pop
mov
ja
cmpsb
orb
in
out
xor
outsl
lret
inc
or
cbtw
bound
xchg
push
stos
fisubrl
cmp
inc
jmp
cli
stc
int
push
cmpsl
add
inc
xor
roll
cwtl
sub
mov
insb
adc
mov
inc
add
aad
xlat
test
pop
outsb
lods
cmp
pop
outsb
mov
pushf
cmp
mov
push
mov
lds
mov
jnp
imul
sub
flds
push
cmp
lea
shrl
push
mov
mov
push
jbe
sub
pop
push
xor
js
scas
aas
test
into
and
dec
dec
mov
outsb
repnz
jns
pop
mov
rcrb
jne
sub
stos
cmc
jecxz
adc
jns
out
popa
cwtl
mov
into
xchg
jae
jg
mov
push
cs
mov
mov
bound
inc
outsl
mov
jge
inc
les
or
mov
imul
outsl
popa
insl
mov
orb
lret
push
inc
mov
repz
popf
into
sub
xchg
mov
fldcw
inc
adc
loopne
xor
mov
or
pop
andl
test
hlt
bound
mov
xorb
inc
aas
rcl
cmp
xor
popf
out
pop
and
fcomi
ljmp
mov
fadds
cmp
push
adc
decl
cld
sub
push
and
stc
or
js
mov
inc
add
dec
arpl
bound
inc
cmp
mov
xor
ret
popf
mov
jnp
pop
shrl
inc
es
sbb
pop
pusha
push
push
cmp
mov
push
ss
mov
adc
xor
and
addr16
mov
sub
divl
fidivl
add
frstor
mov
and
or
inc
xor
fbstp
sbb
adc
loopne
pushf
and
adc
xsha1
cmpsb
dec
and
pop
mov
insb
outsl
inc
movsl
jb
cmpsl
in
loope
sbb
ret
jno
jmp
cwtl
jmp
mov
pop
scas
bound
mov
pop
xchg
pop
cmp
pop
bnd
xchg
ret
and
sti
mov
inc
pop
dec
push
xchg
mov
ds
and
mov
pop
ss
rcrl
push
stc
and
and
push
fistps
movsl
push
out
mov
mov
imull
pop
add
hlt
cmp
adc
jmp
hlt
aam
sbb
leave
and
and
mov
dec
xchg
fwait
jl
leave
imul
or
mov
hlt
leave
scas
fildl
jl
in
sbbb
into
adc
mov
jge
stc
push
xor
add
daa
sti
cs
lods
aas
stos
dec
popf
nop
iret
ret
inc
add
pop
mov
es
mov
xchg
mov
ja
sub
stc
add
xchg
mov
out
xchg
stc
mov
or
test
in
push
sbb
out
add
inc
jmp
mov
test
or
nop
cmp
dec
pop
mov
dec
push
daa
sbb
inc
rcll
cmpsl
subb
push
jle
cmc
add
test
cs
add
pop
loop
or
add
daa
adc
fildl
push
mov
rol
ret
das
adc
ret
mov
fs
fstpt
mov
inc
loop
nop
jmp
dec
nop
cmc
cs
ss
lds
sub
mov
repz
cmp
icebp
icebp
nop
shlb
push
andl
ja
dec
daa
jae,pt
pop
or
add
mov
pop
stc
add
jecxz
leave
mov
and
setae
adc
pop
push
add
mov
jbe
shrb
ljmp
arpl
adc
and
dec
clc
xor
sub
fldenv
adc
pop
mov
inc
rcrb
xor
push
loopne
mov
fwait
pop
rcll
outsb
rcrb
mov
mov
inc
xor
ficomps
enter
jmp
push
fldcw
sub
xor
int3
lahf
push
pop
fsubrl
test
and
mov
pop
leave
outsb
push
pop
mov
roll
xor
movsl
push
xor
jbe
cltd
fidivrl
subl
fcmove
sub
and
push
and
in
xchg
insb
insb
int
js
insb
mov
sub
xor
sahf
pop
mov
adc
pop
push
pop
ret
popf
inc
icebp
dec
ja
sub
jecxz
adc
pop
movb
lock
loope
or
js
pop
or
imul
scas
dec
jmp
sub
pop
scas
sbb
jae
fst
dec
outsl
cmpsb
cwtl
add
jo
std
les
insb
cmp
adc
data16
lahf
in
mov
outsb
nop
sub
andl
movsl
ss
shrl
fcomps
fucomp
and
push
adc
fcomp
pop
jg
mov
ds
fadds
in
jmp
out
stc
or
rol
xchg
jbe
call
fidivrl
lock
das
cmpsb
mov
ja
pop
std
mov
mov
stc
out
add
icebp
das
jp
mov
roll
fwait
mov
cmpsb
test
fstps
mov
cmp
sti
xchg
shll
loop
imul
mov
mov
int3
push
aaa
xor
sub
js
sub
sbb
mov
lcall
mov
xor
ss
cmp
fwait
and
mov
call
xchg
xor
cmp
jae
sbb
ds
mov
push
out
popa
and
cmc
sarl
sub
mov
pop
jle
and
or
push
mov
fadds
sub
dec
sub
jnp
mov
lahf
testb
push
xchg
mov
sub
xchg
jmp
and
and
or
aad
xchg
xchg
mov
push
or
and
pop
fsub
xchg
add
daa
das
leave
mov
stos
inc
in
btr
or
cmpb
mov
or
addl
xchg
add
jp
imul
push
leave
arpl
add
cwtl
je
mov
lods
les
and
mov
sti
xchg
testb
lret
hlt
mov
sahf
xlat
mov
jnp
aas
sbbb
pusha
es
sub
lret
sahf
push
inc
movsb
outsb
jp
rcl
in
xor
jo
iret
bnd
in
ja
inc
int3
and
cmp
ret
add
jo
mov
xchg
repnz
fs
adc
inc
cmovg
stc
cli
xor
xchg
sub
pop
js
xchg
popa
and
xchg
and
lahf
inc
cmp
ret
mov
repz
inc
cmc
imul
scas
out
xchg
add
dec
sub
xor
stc
mov
daa
dec
push
xchg
out
cmp
adc
push
xchg
xchg
mov
xchg
ret
adc
xchg
inc
sub
call
shll
in
mov
in
jmp
aam
bound
out
adc
or
cs
dec
in
cmpsb
pop
dec
das
scas
cmp
pop
sub
push
call
test
mov
pop
ror
and
loop
mov
dec
jae
movb
pop
fdiv
push
and
icebp
xor
xchg
in
fldt
push
fsubs
push
inc
pop
xor
jns
out
xchg
xchg
inc
lret
nop
xchg
cmp
in
clc
xchg
repnz
mov
cmp
lock
xor
fcompl
or
movsl
es
sub
or
cmp
jge
pop
arpl
shlb
pusha
pop
pop
add
jno
mov
pop
in
mov
cmp
cmpsl
insl
popf
xchg
clc
xor
cmp
dec
lods
fnsave
cmp
pop
inc
je
xchg
pop
scas
jge
dec
add
xchg
jno
fcoml
stos
or
cwtl
out
std
jae
or
jl
cmp
xor
jecxz
inc
loope
mov
lret
ret
pusha
pop
cmp
push
outsb
js
pusha
jns
cmp
rcr
test
add
aad
loope
xchg
sbb
sbb
aam
mov
sub
or
dec
lcall
faddl
fisubrl
pusha
jo
subb
pusha
subl
pushf
fs
stc
idivb
dec
scas
xchg
and
loop
adc
int
xchg
dec
sub
push
mov
mov
push
inc
pop
add
mov
cmp
rorb
ret
imul
lcall
inc
pop
xchg
inc
inc
ljmp
jae
fbstp
mov
jmp
ss
dec
fiadds
mov
or
cmc
std
jge
xor
in
push
jno
push
fistpl
push
cmp
fimull
das
mov
adc
call
repz
fisttpl
push
inc
cld
cwtl
push
push
hlt
push
inc
lret
das
mov
pop
jg
mov
pop
ret
rol
cmp
lret
mov
mov
lret
push
inc
xchg
aaa
and
pop
xchg
mov
repz
arpl
ffree
xchg
dec
push
enter
sub
adc
and
das
xor
inc
fmuls
loopne
add
dec
ds
data16
lahf
push
cmp
inc
frstor
inc
sub
add
mov
sub
cld
bound
xlat
leave
xchg
xlat
and
call
inc
xchg
jl
push
call
loope
add
or
jbe
mov
rcl
mov
add
pop
repz
mov
inc
mov
jmp
dec
or
rolb
pop
mov
ljmp
fstps
lods
ljmp
mov
loop,pn
push
lods
add
or
pop
push
out
lods
adc
cmp
jg
xlat
sahf
adc
pop
push
lret
lea
out
dec
xchg
repnz
add
cld
lret
xor
jge
and
outsb
sub
es
mov
xchg
aaa
xor
lcall
xchg
push
mov
insb
ljmp
xchg
xchg
int3
adc
jno
inc
lret
pusha
stos
sbb
add
mov
sbb
jno
mov
dec
mov
jg
jle
add
pop
mov
cmpsb
mov
mov
and
jbe
add
add
cltd
in
mov
shrb
xlat
insl
mov
inc
cmp
sub
push
push
sbb
sub
xchg
lahf
sub
ret
ficomps
scas
incb
pusha
xchg
ds
xor
dec
addr16
mov
icebp
mov
mov
rcll
notb
or
popa
cli
call
lret
lea
das
xchg
and
scas
or
push
sub
inc
push
mov
sbb
xchg
adc
cmpsl
aad
rcl
xchg
push
mov
bound
cmp
push
jp
dec
or
aam
xchg
pop
xchg
dec
outsb
popf
cwtl
sub
dec
in
pop
addb
in
rorb
cli
mov
mov
mov
int
sbb
sub
out
fldt
nop
testb
fidivrs
outsb
sbb
inc
push
insl
es
cwtl
mov
or
sub
mov
mov
iret
cmc
mov
dec
adc
dec
add
rcrb
in
cmp
insl
or
ljmp
mov
test
call
inc
aas
js
mov
cmc
js
orl
pop
or
ds
call
xor
cmp
in
xlat
push
lret
pop
data16
inc
or
or
mov
pop
out
mov
mov
cmpsl
inc
out
mov
sahf
and
inc
xchg
jg
mov
fiadds
movsb
sbb
rorb
aas
inc
mov
pop
cmc
pop
arpl
adc
loope
out
dec
and
adc
or
push
sbb
jge
aaa
lea
out
cmp
sub
aas
sub
jmp
pop
sbb
loope
pop
push
decl
sahf
push
cld
fnsave
lahf
cmp
lds
dec
mov
inc
add
sbb
imulb
jecxz
out
sub
mov
adc
ja
insb
cmp
scas
fildll
push
adc
fcmovne
xchg
xchg
lret
sbb
pop
xchg
daa
cwtl
or
mov
pop
movsl
push
sub
popf
xchg
movsl
mov
push
xlat
mov
sub
fucomi
pushaw
idivb
scas
mov
and
jp
mov
mov
in
fnstcw
cld
insb
sub
stos
push
ljmp
hlt
xor
addr16
popf
and
sbb
nop
call
or
jae
xchg
pop
cmc
sub
iret
inc
and
cmpsb
outsl
mov
les
icebp
add
adc
adc
repz
sub
das
repz
mov
cmpsl
into
scas
jae
sbb
cltd
subb
xchg
jp
ss
into
push
inc
inc
test
movsb
push
pop
push
sar
sub
pop
imul
fistpll
ljmp
or
or
cs
sbb
mov
imul
pop
aad
mov
inc
push
and
iret
in
push
mov
adc
lahf
xchg
cmp
push
xchg
stos
and
mov
mov
jecxz
mov
mov
mov
sub
sub
out
jno
pop
xor
and
loope
fmuls
in
in
rep
dec
xchg
and
jae
jecxz
or
adc
mov
add
sahf
aaa
xchg
fwait
cmpsl
dec
icebp
pusha
and
fwait
lret
imul
sub
daa
sbb
xchg
rorl
sbb
push
jge
dec
sbb
xchg
inc
pusha
lret
int
or
push
shlb
cmp
out
xchg
inc
jp
inc
clc
loope
es
rclb
shl
mov
bnd
sbbb
shrl
jae
mov
pop
or
data16
and
cmp
lea
test
call
andb
jb
push
push
or
or
into
lret
lret
mov
dec
inc
test
mov
test
xor
jge
pop
pop
push
je
mov
sub
cmp
lea
dec
sub
icebp
arpl
push
popa
addr16
adc
aad
daa
out
add
jns
pop
cmpsl
ds
popa
pop
cs
sar
sub
call
mov
dec
sub
cmp
add
or
dec
mov
out
sub
jp
aas
sti
test
lahf
popa
or
je
aad
out
sti
test
mov
adc
add
pop
add
into
aad
aad
adc
cmp
insl
repz
lods
sub
sub
mov
rorb
cmpb
push
sub
mov
mulb
lds
pop
or
jo
mov
sbb
jnp
scas
imul
out
add
ret
enter
xor
fs
pop
dec
and
dec
push
sub
mov
fisttps
push
sbb
rcll
mov
and
out
cwtl
gs
les
jmp
sbb
shrl
rcl
mov
fisttpl
scas
sub
and
scas
rcll
mov
and
shlb
ficoml
stos
nop
and
loopne
stc
sbb
and
pop
iret
sub
lock
test
das
push
push
das
mov
xchg
data16
xor
inc
iret
fnstenv
cmpsl
xchg
loop
push
pop
imul
imul
or
xor
mov
sub
out
int
jle
repz
push
das
lods
or
ljmp
jecxz
test
outsb
mov
daa
add
mov
stos
xor
rorb
push
mov
int3
push
dec
adc
fcompl
adc
pop
test
loop
mov
bound
loopne
mov
push
pop
iret
xor
mov
imul
sub
xor
add
and
ds
or
cmpsb
push
push
imul
push
dec
rdmsr
push
pop
mov
xchg
sbb
push
idivb
jle
rclb
adc
int3
pop
sbbb
out
dec
cmp
push
or
mov
movsb
fadd
cmpsb
insb
outsb
sbbb
pop
xchg
mov
and
inc
rclb
sub
push
mov
inc
jmp
mov
mov
jmp
dec
adc
repnz
popf
int3
popa
int
insl
out
test
add
test
mov
ret
add
cs
ret
jl
mov
ret
aad
mov
mov
mov
popa
adc
push
hlt
add
jmp
and
adc
and
adc
out
stc
rolb
xchg
cmp
sub
sub
ljmp
cmp
cltd
sub
leave
cmp
add
adc
and
in
sub
ds
movsl
stos
mov
or
sub
sbb
push
pop
ds
sub
mov
rclb
xchg
orl
lcall
fsubr
pop
push
or
fsub
cmpsl
xor
lods
icebp
mov
shlb
fcom
mov
sub
add
ljmp
adc
cmp
fisubrs
fnsave
cmpsb
cld
fwait
inc
xchg
lods
roll
ss
jecxz
cld
cli
jmp
incl
out
fimull
in
sub
adc
sbb
mov
push
push
icebp
dec
nop
pushw
popf
ljmp
popf
lock
and
sub
mov
sub
inc
fadd
pop
or
ret
xor
jp
lret
add
and
mov
stos
test
cmp
add
push
mov
jl
xor
pop
mov
push
mov
push
out
mov
inc
mov
sub
cmp
sub
jmp
fsubrp
in
es
ja
pushw
mov
sub
mov
outsl
pusha
arpl
inc
mov
xor
mov
rcrb
lret
addb
shll
adc
test
xorl
lea
insb
inc
push
lods
mov
jnp
pop
sbb
jg
test
add
xchg
les
inc
aad
in
andl
stos
addr16
inc
cmc
out
adc
xor
dec
lds
mov
in
in
and
stc
leave
mov
inc
jle
inc
xor
xchg
xor
dec
push
cmp
and
out
rol
loop
inc
leave
dec
xchg
ljmp
pusha
in
lahf
sub
xchg
push
rorb
xchg
xchg
inc
test
mov
mov
lcall
sub
adc
pop
dec
rol
dec
pusha
or
sub
es
push
hlt
outsb
push
stos
fmuls
adcl
add
jge
push
repnz
push
stos
mov
outsl
push
adc
xchg
xchg
push
jns
testb
ds
stos
and
out
push
fwait
loop
push
and
sbbb
pop
jl
jge
cs
shll
call
pusha
or
gs
adc
pop
inc
mov
mov
cs
shll
icebp
popf
ret
push
mov
leave
enter
cmpsb
icebp
pop
xchg
jbe
les
scas
loop
xchg
mov
pop
popa
cmp
movsl
xchg
movsb
xor
and
inc
or
pop
jno
ss
dec
and
out
inc
inc
mov
es
test
pop
adc
outsl
in
aad
pusha
loopne
push
outsb
inc
les
lds
mov
roll
pop
dec
jne
jmp
adc
cmp
insb
or
adc
mov
pop
cmp
push
sub
xchg
cs
fists
xor
outsb
push
jmp
sub
and
fcmovnbe
xor
and
xchg
jmp
pop
mov
popa
ds
and
das
ljmp
or
daa
xchg
dec
aad
pop
push
add
test
cmp
insb
adc
js
cmpsb
mov
mov
jecxz
cs
jmp
lea
aas
lahf
sti
cmpsl
push
xchg
cmp
and
iret
pop
stc
inc
mov
cmc
lcall
das
and
jmp
xchg
push
sbb
push
lcall
mulb
loop
shr
mov
pop
sub
mov
pop
jmp
inc
dec
imul
cs
insl
sarb
mov
cltd
repz
shrb
cwtl
loope
in
cmpsl
stos
dec
out
adc
xor
xchg
mov
mov
fsubl
incl
or
pop
or
daa
and
mov
es
lods
sbb
add
sahf
cmpsl
add
ret
cs
xor
ljmp
mov
stos
xchg
mov
scas
pusha
ds
push
and
data16
push
int
add
scas
sbb
jl
mov
dec
dec
js
mov
cmp
cmpsb
push
push
xorb
pop
loop
pop
sub
adcb
push
mov
xchg
pop
pusha
repz
rcrb
xor
into
test
mov
jo,pn
lods
aaa
xor
ret
add
das
pop
in
and
pop
or
pop
mov
nop
and
push
cmc
xchg
rcr
jecxz
xor
lods
adc
xchg
xor
sub
mov
mov
xchg
jmp
inc
sbb
loope
cmp
push
out
int
je
cmp
jle
pop
and
fildl
loopne
push
sub
pop
mov
adc
lea
stc
xorb
fcmovne
sub
xor
dec
cmp
adc
mov
jae
cs
xchg
outsb
dec
insb
ljmp
cld
xlat
mov
cmpsb
movsl
pop
notb
stos
mov
mov
dec
adc
mov
sti
stos
xor
int3
jmp
sub
and
cmc
sbb
pop
jg
call
sub
fldlg2
outsb
and
ficomps
sbb
cmpsl
push
pop
mov
add
jnp
setne
loopne
loope
fisubl
xchg
mov
jno,pt
fs
xchg
inc
or
pop
lahf
insb
sbb
cmpsb
out
or
jb
add
xor
adc
les
dec
popa
and
shr
lcall
adc
lcall
and
push
cmp
ds
inc
data16
jmp
ds
incb
and
ret
xchg
loop
or
in
movsl
loop
adc
nop
std
jbe
jnp
cmpsl
imul
dec
in
mov
cmp
out
lcall
fsubs
mov
ss
aaa
or
mov
jnp
xchg
in
mov
mov
mov
cmp
or
or
lods
imul
xor
movsl
iret
out
aam
out
cmc
sar
stos
mov
inc
jmp
or
cmp
das
pop
imul
sub
cmpsl
add
xor
mov
mov
hlt
in
psubusb
jmp
lret
jp
xchg
jle
pop
in
add
xor
lods
and
sbb
scas
add
cmp
mov
xor
adc
pop
jno
div
repz
jbe
xor
jecxz
leave
cmp
mov
inc
insb
and
jl
push
test
jb
movsb
call
subb
lret
xor
xor
xchg
iret
or
jmp
out
fsubp
pop
addr16
das
arpl
daa
mov
cmp
cli
xor
imulb
nop
int3
jmp
scas
push
adc
pop
gs
adc
cli
inc
mov
xlat
loop
in
inc
adc
mov
xorl
adc
loop
adc
jbe
movsl
sub
adc
dec
cmpb
aad
out
push
pop
jg
and
cmpb
mov
call
test
test
mov
sbb
outsl
in
aad
fcmove
inc
dec
mov
cs
sub
in
adc
ret
out
push
in
adc
mov
pop
popf
stos
xchg
and
leave
sub
xchg
repz
pop
cld
jnp
xchg
dec
mov
add
pop
mov
sbb
fcoml
xor
xor
or
xor
mov
insl
sbb
ds
fdivrs
jp
popf
and
subb
or
inc
xchg
and
std
js
and
push
test
enter
gs
push
xchg
das
ja
es
add
dec
jae
pop
mov
cmp
push
mov
loope
inc
push
ss
or
fsts
push
sub
mov
stos
inc
jmp
out
cmp
adc
lcall
jmp
sbb
loope
popa
sbb
sbb
movsl
mov
or
inc
dec
and
push
mov
adc
pop
jae
push
lfs
or
les
add
popf
sub
xchg
scas
xchg
fdivrl
dec
sbbb
jnp
and
hlt
das
test
jecxz
stos
aas
pop
cmp
fldl
xchg
ljmp
dec
out
bound
int3
data16
sub
cli
pusha
xchg
mov
nop
push
mov
dec
sbb
jecxz
lea
cs
mov
cmpsb
push
cmpsb
loopne
das
mov
out
or
loop
or
inc
xorl
dec
adc
sbb
pushf
add
repz
push
cmp
in
cwtl
adc
imul
enter
xchg
push
inc
inc
push
bound
ljmp
aas
loope
enter
aam
add
lods
cmpsl
das
inc
jmp
pop
out
jmp
daa
jnp
pop
add
adc
jp
push
pop
sti
imul
inc
mov
outsb
fisubl
sbb
popa
sahf
aaa
rcrl
adc
pop
out
jge
cmp
idiv
xchg
xchg
arpl
bound
das
xor
pop
cmp
fstpt
negl
push
xchg
mov
xchg
pop
std
xor
out
cmpsl
sbb
cmp
addl
scas
call
or
jne
xor
stos
in
ljmp
mov
insl
inc
lret
xchg
lods
mov
cli
out
mov
nop
jo
adc
push
cmp
popa
jmp
lods
mov
jle
xchg
mov
rcl
imull
jnp
cmpsl
add
imul
int
sahf
in
inc
push
jno
sub
mov
xor
bound
dec
test
ds
mov
inc
pop
jecxz
xor
mov
push
or
xor
pop
frstor
add
push
cmp
out
cmp
xor
imul
lahf
push
xor
sbb
xorl
adc
int3
fwait
jmp
push
mov
pop
dec
mov
in
daa
jmp
mov
lods
in
mov
pop
dec
jle
jl
or
popf
outsb
out
shll
andb
pop
sub
mov
out
loope
std
shll
xchg
imul
iret
xchg
pop
xchg
test
addb
adc
je
push
aaa
sbb
ror
xchg
das
bound
out
or
mul
popf
push
je
mov
and
jo
and
enter
lahf
push
mov
adc
mov
movsl
mov
aas
add
mov
mov
push
pop
mov
shl
bswap
call
inc
imul
fsubr
iret
mov
pop
lea
sub
xor
and
inc
pop
jnp
shld
xor
fdiv
call
cmp
sub
outsl
mov
in
mov
lahf
stc
fnstsw
or
xchg
and
cs
pop
dec
push
mov
stos
aad
shr
cltd
dec
jno
out
repz
fisttpll
pop
stos
inc
popa
sbb
push
out
sub
dec
cwtl
jmp
pop
jmp
push
mov
mov
int3
jo
in
popf
sub
jae
aam
sbb
dec
es
add
adc
jl
cmpsb
cmpsl
daa
nop
cmp
sti
f2xm1
repnz
xchg
lods
inc
ds
push
mov
fwait
cmpsb
insb
ret
dec
cmpsb
add
cli
fsubrs
sub
jns
jbe
int
aad
das
pop
in
push
pop
xchg
jns
jg
jmp
fiadds
bound
fcmovb
das
mov
pusha
inc
cli
std
or
sahf
cwtl
sbb
sbb
sbb
jle
push
mulb
lret
mov
imul
popf
xchg
repz
jge
or
js
mov
add
ret
dec
idivb
mov
inc
scas
push
adc
jmp
push
fbstp
lret
adc
inc
sbb
sar
ljmp
pop
aas
test
push
test
lock
mov
data16
out
add
call
or
orl
out
dec
int3
inc
sub
aaa
das
inc
sub
or
ret
fucomi
mov
xchg
mov
mov
mov
mov
jle
insb
gs
xor
sub
addl
mov
sbb
leave
lea
fs
out
inc
xchg
filds
sub
jp
repnz
mov
cld
addr16
je
mov
test
addr16
mov
cli
roll
pop
push
xchg
in
leave
fstpl
sbb
mov
or
push
xchg
and
testb
mov
out
sbb
notl
mov
adc
sbb
pushf
adc
push
add
xor
mov
add
pop
enter
and
push
sbb
inc
test
fdivr
dec
jb
push
mov
or
iret
jb
dec
fcoms
pop
iret
add
imul
adc
leave
jecxz
and
call
scas
adc
pop
push
push
mov
rorb
pop
mov
inc
nop
stc
popa
mov
les
xor
xor
lret
and
iret
fidivs
mov
fs
and
or
popf
push
adc
lds
push
bound
out
jg
into
leave
arpl
cmp
outsb
in
cmc
insb
and
fidivrl
mov
sarb
adc
out
push
out
testb
lcall
jo
or
push
xor
inc
or
sub
shl
stos
daa
cmp
cmpsb
push
mov
out
mov
loope
push
cmp
lock
push
lcall
aaa
mov
xchg
pop
aam
out
inc
pop
inc
daa
cmpsb
or
and
mov
cli
dec
insl
mov
insl
repnz
sbb
mov
cmc
push
xchg
push
fs
xchg
jp
ss
leave
inc
sahf
adc
push
fiadds
sub
aas
lret
mov
jne
aas
sub
les
es
mov
std
inc
mov
out
inc
hlt
pop
dec
pop
in
cli
push
inc
fiadds
mov
and
lods
sub
jg
aad
aas
jecxz
in
lcall
mov
testl
orb
adc
repnz
mov
out
cmp
xor
add
push
xor
hlt
mov
push
leave
pop
jl
jmp
lods
into
dec
lret
in
stc
aas
sbb
bound
xor
scas
inc
inc
negl
jns
cmp
jns
fs
arpl
in
dec
test
fnsave
in
mov
add
pop
sbb
push
push
mov
sub
cmpsl
ret
adc
mov
mov
in
pop
xchg
lahf
mov
xchg
out
adc
add
inc
or
push
lods
in
sub
lret
inc
insl
xor
mov
les
pop
out
mov
or
mov
xchg
or
cwtl
mov
or
pop
pusha
repnz
adc
adc
ud0
scas
mov
roll
mov
cmpsl
cmpsl
mov
jmp
repnz
ja
fistl
xor
push
or
jp
xor
outsl
pop
or
loope
std
adc
jg
insl
mov
xchg
or
add
mov
mov
xorl
rolb
push
xchg
cmp
out
aad
popf
xor
push
push
jb
xor
inc
adcl
cli
sbb
in
idiv
in
push
shrl
push
imul
test
push
push
cmpsl
cld
addb
repz
mov
push
idiv
inc
and
mov
jmp
adc
fs
icebp
fldenv
ljmp
pushf
mov
dec
test
push
pop
ret
sarb
in
sbb
int
test
clc
testl
pop
pushw
cmpb
enter
lcall
xchg
add
cwtl
cmp
outsb
jl
mov
mov
iret
xor
add
pop
cmp
add
add
test
mov
fisttpll
mulb
lcall
push
sbb
xchg
mov
pop
pop
mov
fneni(8087
sub
pop
sbb
mov
das
sub
xlat
mov
cmp
add
test
adc
daa
out
mov
mov
jo
push
pop
lret
test
xchg
add
outsl
fists
enter
addr16
xlat
mov
inc
fistpl
sub
arpl
mov
dec
sub
es
cmpsb
mov
push
xor
ljmp
cli
mov
or
out
xor
xchg
adc
cmp
push
call
mov
js
jno
stos
popf
or
push
fildll
push
add
shrl
push
cmpsb
push
jb
cmpsl
xchg
imul
and
hlt
and
sub
cld
mov
stos
nop
bound
dec
push
push
dec
lahf
pop
js
xchg
fbstp
jae
shl
pop
daa
sub
stos
testl
decl
pop
inc
lods
and
push
adc
mov
cmc
and
push
mov
sub
dec
inc
xor
xchg
sti
ds
jmp
daa
daa
sub
stc
sti
push
insb
sub
xchg
adc
inc
aaa
inc
lds
popa
inc
pop
jmp
and
jmp
push
cmp
or
scas
pop
icebp
add
sahf
mov
adc
std
cs
sbb
pop
xchg
sub
xchg
int3
mov
into
dec
insl
pushf
add
fldl
push
pusha
cmc
iret
repz
repnz
add
mov
xor
es
es
das
icebp
push
dec
loope
int
mov
stos
push
fimuls
test
shr
aaa
push
in
push
dec
nop
int
loope
sub
jmp
xchg
lock
inc
cli
mov
jp
jae
jp
jb
fsubl
push
sub
push
jns
imul
ret
mov
mov
and
or
pop
push
jmp
jno
icebp
xchg
out
dec
fnstsw
cmpsl
mov
sub
data16
inc
into
cmpsb
sub
inc
sarl
dec
fildll
shl
jns
sub
mov
sub
ja
mov
push
jb
pop
pusha
or
cmp
jmp
lds
mov
inc
inc
ret
add
cmp
fstpt
push
mov
std
flds
lods
gs
xor
mov
xor
rolb
in
push
bound
inc
cmp
movsb
add
mov
test
xchg
aam
iret
add
rcll
out
xchg
mov
sbbb
test
push
cmp
jp,pn
cmpsl
stos
ds
mov
cmp
enter
mov
out
pop
faddl
je
cmp
or
cmpb
pcmpeqw
dec
loop
int
pop
jp
or
or
insb
mov
out
mov
xchg
dec
sbb
or
jns
inc
xchg
xchg
inc
dec
jae
xor
loop
cmp
repnz
ss
xchg
mov
lods
dec
inc
xchg
scas
jge
pop
inc
xlat
pop
adc
dec
jg
push
in
pmaddwd
es
xor
filds
jmp
xor
or
sbb
inc
sti
or
sub
and
sahf
push
lret
scas
shl
mov
lods
sbb
loopne
xlat
loopne
out
fs
faddp
mov
adc
icebp
xchg
adc
shll
xor
sub
sbb
push
sub
lds
mov
int3
test
inc
xchg
inc
and
mov
push
mov
sbb
frstor
sbb
gs
push
adcb
jae
movb
inc
aas
stos
scas
cmp
inc
mov
test
cld
cmp
push
and
jo
in
mov
rorb
and
cwtl
aaa
and
cltd
mov
push
inc
jl
pop
out
lea
nop
pusha
loop
cmp
and
adc
mov
adc
inc
scas
insl
jno
add
sub
push
lds
jae
add
js
add
jns
lock
pop
cmp
out
lea
nop
inc
loop
cmp
and
out
push
icebp
enter
mov
imul
addr16
int3
or
xor
push
push
xor
shrd
push
loop
pop
loop
dec
pop
aaa
out
pop
mov
sbb
cmp
in
std
and
cmp
sbb
push
push
and
sbb
adc
jns
rcll
lahf
sub
xchg
std
mov
pop
xchg
outsb
shlb
add
rcrb
push
push
inc
xchg
fs
xchg
out
push
sub
aam
push
je
cmc
sbb
jmp
mov
adc
dec
fsts
jmp
cmpsl
sbb
pop
mov
insl
pop
mov
cmp
aam
mov
imulb
jmp
lods
insl
sub
or
cltd
jecxz
or
bound
subl
cmp
sub
lcall
out
mov
xor
sub
cmpl
cmp
ret
test
and
dec
jae
fadds
or
mov
stos
hlt
cmp
or
fmulp
loope
sbb
aaa
add
rcrl
mov
mov
xchg
aam
and
fildll
ret
pop
fcmovnbe
into
fcompl
push
cmpsb
insl
mov
pop
sbb
fs
or
cmp
or
stos
mov
loope
push
adc
push
repnz
in
rorb
fwait
fsub
or
cs
loope
dec
and
push
rorb
dec
mov
and
roll
std
rolb
stos
sbb
subb
xchg
icebp
in
and
inc
std
pop
shll
xor
mov
push
clc
int3
dec
and
inc
ret
icebp
sub
push
loopne
out
pusha
add
frstor
sub
rorb
icebp
ds
mov
lret
inc
inc
jb
dec
and
xor
int3
bound
fs
pusha
sbbl
dec
fbld
inc
push
lea
inc
ret
jge
jb
loop
frstor
into
test
push
push
leave
inc
jg
mov
imul
pop
push
arpl
jae
repz
fwait
bound
jmp
adc
xchg
add
test
mov
mov
cld
mov
sbbl
or
mov
sub
bnd
lahf
xor
pop
call
mov
jp
leave
es
les
das
mov
jns
dec
out
inc
cmp
jae
push
and
cmp
in
out
ja
push
mov
testb
insl
mov
push
jo
setl
test
andl
inc
loopne
popa
sarl
mov
jnp
cmpsl
and
out
push
xor
cmpb
jb
out
cmp
call
lods
xor
pop
jecxz
stos
scas
xor
sahf
sub
nop
pop
jmp
mov
or
inc
xor
call
sub
inc
ret
sub
mov
sbb
cmp
jp
fsub
subl
push
pop
xlat
dec
mov
fsubrp
or
and
lock
or
mov
xchg
mov
jne
mov
bound
sti
push
or
sub
sbb
mov
mov
mov
and
cmovge
arpl
dec
into
popa
push
in
push
push
mov
mov
or
lahf
imul
mov
mov
mov
cs
adc
sahf
cmp
inc
cmpsb
push
inc
push
dec
add
das
jmp
jg
adc
sub
sbb
out
sub
fucom
or
jmp
cltd
inc
push
mov
cmc
js
xor
in
pop
cmp
movsl
mov
mov
jb
mov
outsb
stc
cmpsb
das
push
add
jle
sub
jae
in
push
and
jno
mov
sub
notb
inc
or
jg
mov
cmp
cld
mov
add
xor
and
loop
add
mov
es
jge
jno
popf
jmp
add
imul
mov
lea
int
test
push
hlt
orl
and
pop
inc
sub
pushl
sub
out
leave
sub
or
pop
jmp
push
sbb
push
xchg
into
shr
bound
notl
xor
mov
ljmp
sub
jmp
insb
out
std
cmc
add
pop
movsb
stc
or
loope
out
loope
xlat
loopne
sbb
aam
jo
sub
xchg
mov
nop
fwait
jne
pop
pop
int3
cmp
pushf
cmp
xchg
stos
icebp
adc
in
or
loope
shl
cmp
sti
inc
cmp
jmp
rcrb
dec
inc
jns,pn
sub
lea
inc
cli
or
fildll
into
adc
and
pop
hlt
loope
shlb
and
lds
mov
js
xchg
push
addb
inc
xchg
rolb
into
icebp
and
mov
outsb
test
popa
dec
cmp
push
or
and
icebp
jae,pt
cmpsl
jp
arpl
imulb
aam
sub
ja
dec
xchg
enter
mov
insl
push
icebp
mov
das
mov
ret
andb
out
adc
xchg
fists
jb
arpl
dec
mov
loopne
jge
fucom
fwait
mov
dec
cmpps
mov
cmc
mov
loope
push
aaa
add
sub
test
jmp
fstl
push
into
andl
adc
ss
adc
out
add
mov
push
or
fsubr
ds
jecxz
adc
imulb
mov
add
ret
push
cmpsb
je
and
mov
sub
add
loop
fsubp
add
add
inc
mov
push
ds
outsb
mov
ljmp
test
pusha
mov
inc
pop
outsl
xor
movsl
cmp
dec
addr16
sbb
adc
aad
icebp
mov
pop
push
add
jl
inc
scas
sub
add
pop
fstl
ror
jo
mov
jo
cmp
xor
add
ficoms
mov
lds
fsts
xchg
test
dec
push
insl
adc
jno
adc
cli
das
fstl
outsb
out
out
loop
sub
push
xchg
out
cmp
and
inc
mov
shlb
inc
scas
add
add
mov
test
or
addl
std
ret
pop
sti
aam
or
push
insb
insl
adc
adc
mov
cmc
shr
fsubl
dec
lds
cwtl
mov
push
mov
jno
popa
xor
enter
mov
aaa
lret
jl
std
pusha
and
insb
xor
push
das
jns
pop
xchg
in
insb
ret
notl
movsb
sub
es
loop
cmp
leave
icebp
rclb
fcmovnbe
js
lods
das
addl
or
cli
movsl
mov
outsb
cmc
bnd
or
xor
mov
sbb
dec
jp
push
jmp
lods
outsl
shlb
jb
insb
push
ss
std
jo
dec
mov
loop
adc
pop
ret
lret
push
add
pushf
inc
pop
and
dec
add
ljmp
fistl
repz
out
add
cmp
mul
push
popa
dec
sbb
and
subb
push
or
or
mov
cld
es
in
inc
xchg
mov
xor
imul
xchg
dec
fstl
aaa
xor
inc
fcomi
jno
aad
jbe
in
xor
dec
sbb
negb
std
xor
sbb
repnz
add
aad
jbe
jne
pop
mov
dec
xor
push
jmp
xchg
inc
repnz
ret
test
fs
insl
push
fwait
rclb
inc
dec
out
push
cld
loop
xorl
mov
mov
sub
inc
daa
pop
xor
subl
cld
jg
cmp
sub
cs
pop
and
lock
shrl
sbb
mov
lret
dec
test
insl
mov
cmpsb
jle
loope
adc
or
addr16
ret
test
scas
push
lds
sahf
mov
inc
pop
popf
aas
sub
cli
in
or
repnz
jbe
dec
addr16
rcll
inc
mov
popl
jecxz
mov
jge
ret
nop
jle
std
imulb
adc
mov
mov
jb
pushw
jg
mov
movsb
mov
mov
sub
imul
cs
jns
loope
dec
decb
fstl
daa
cli
cmp
adc
outsl
jns,pt
popf
aam
cmp
outsb
loope
cmp
loop,pt
shll
fldcw
pop
stos
loop
push
repnz
insb
fbld
sbb
mov
mov
pop
jne
in
jb
stos
and
movsl
adc
bound
icebp
lea
movsl
xchg
jno
ss
mov
insb
mov
mov
leave
cs
inc
or
sbb
adc
cmpsb
rcrl
mov
pop
cmc
stos
inc
ficomps
jmp
daa
fs
stos
pushf
scas
or
ljmp
mov
xor
pop
xchg
fidivrs
inc
arpl
xchg
mov
pop
in
jp
cmp
out
aas
out
stos
mov
inc
outsb
push
xor
imul
fs
and
stos
sbb
pop
rcl
push
insl
mov
insb
dec
leave
aam
or
inc
clc
insb
push
arpl
scas
das
mov
pop
add
ffree
push
popa
mov
sbb
arpl
es
pop
or
pusha
sub
std
sbb
aas
pop
fsubrp
sbb
push
cli
imul
ljmp
dec
inc
dec
push
es
pop
lret
cmp
out
jae
and
push
add
jns
scas
pop
inc
jp
inc
jae
push
cmp
leave
fnsave
clc
mov
pushf
jnp
and
hlt
loop
in
hlt
or
je
xor
add
clc
insl
fstpt
iret
in
ficoms
fiadds
stos
in
mov
rcll
dec
pusha
add
sbb
ljmp
add
imul
sti
sub
out
icebp
mov
mov
lock
aas
enter
lret
adc
inc
mov
xchg
mov
rcll
xchg
mov
fsubs
dec
rclb
push
aaa
add
js
es
pop
or
jp
mov
xlat
xchg
xorb
push
sbb
and
pop
outsb
xor
mov
pop
rolb
inc
int3
xchg
dec
mov
cmpsl
push
cmpsb
sub
cmpb
adc
mov
sti
ret
xlat
mov
inc
cmp
pop
cli
out
mov
insl
mov
pusha
dec
idivb
jnp
xchg
sbb
jnp
cld
dec
push
cli
icebp
lods
bound
subl
dec
scas
cmp
icebp
add
std
mov
xor
punpckhdq
sbb
fdivl
dec
cmpsb
pop
inc
xor
insl
pop
fxch
inc
jmp
fstpt
xor
add
ss
les
mov
test
loope
pop
xor
lret
or
dec
fstl
xchg
rcll
pop
pop
xor
mov
adc
and
jnp
add
or
sbb
outsb
sub
jge
stos
pop
movsl
sbb
test
inc
dec
mov
daa
lret
pop
and
pusha
mov
subl
mov
push
imul
and
sbb
jecxz
hlt
jmp
xchg
arpl
daa
jg
and
popa
push
stc
dec
shrb
add
cmp
inc
push
push
cmp
sbb
pop
fnstsw
jo
cli
and
cmc
inc
inc
imul
in
xchg
push
sub
inc
lock
push
and
inc
xchg
addr16
cmp
aas
sbb
pop
mov
cmpsl
push
fcom
xchg
jle
aaa
and
jno
adc
jge
in
popa
dec
sarb
mov
push
daa
das
mov
insb
push
cmpsb
dec
mov
dec
inc
sbb
push
fwait
out
xchg
rcll
sbb
testl
lock
hlt
inc
sbb
repz
ja
std
enter
xor
ds
jmp
mov
xor
popa
mov
daa
repz
icebp
sub
aas
std
pop
dec
dec
notl
iret
aas
stos
ss
add
out
mov
adc
repnz
and
inc
xchg
fsts
cmp
dec
pop
mov
enter
push
mov
js
mov
pop
in
adc
daa
lods
mov
lea
inc
lret
mov
mov
dec
loopne
lds
add
xor
mov
xlat
push
in
imul
mov
dec
push
and
out
xchg
xchg
int
push
inc
xor
fists
shrl
sbb
pop
mov
adc
push
scas
push
ds
mov
xchg
push
and
ret
imul
cs
xchg
cli
rol
mov
ret
lods
in
push
mov
outsb
adc
pop
pop
sti
shrl
lret
mov
cld
and
and
xchg
push
loope
jb
in
imul
sbb
cmc
sub
push
negb
inc
dec
cmc
or
stc
es
push
in
add
addr16
mov
cmp
mull
arpl
out
and
sti
sbb
and
inc
fisttpl
in
sti
xor
lret
and
std
pop
adc
push
push
lock
hlt
shrl
dec
jo,pn
sub
xor
ljmp
inc
shrl
aas
cmp
lods
push
leave
cmp
push
test
jb
mov
jle
xor
mov
sub
out
dec
stc
int3
inc
push
mov
or
fldl
mov
jmp
dec
adc
mov
pushf
dec
aad
push
and
fsubrs
test
ret
pop
rcrb
jae
sub
push
adc
je
xchg
and
mov
and
into
sub
push
clc
xchg
movsl
inc
sub
lock
in
lds
sbb
xor
loope
out
fnsave
in
out
cmp
not
loop
ret
mov
dec
cltd
int
cmp
sahf
mov
and
les
std
lea
xor
lahf
and
or
arpl
enter
pop
cmp
cwtl
sbb
je
mov
fdivrs
scas
jp
aaa
sbb
add
test
cmc
fs
jnp
arpl
idivl
in
in
mov
arpl
mov
sarb
lahf
push
push
out
outsl
outsl
aad
jae
gs
daa
and
lret
in
lds
add
mov
xchg
add
jnp
sbb
iret
scas
popa
test
add
push
enter
adc
jnp
stos
mov
adc
ret
mov
mov
dec
add
or
xchg
or
push
cmp
jbe,pt
xchg
shlb
mov
icebp
shl
xor
mov
in
sbb
les
test
push
jle
xor
sbb
clc
int
sahf
xchg
mov
aam
pop
xchg
js
ficoml
das
pop
outsb
sbb
iret
pop
mov
dec
rorl
push
in
js
jmp
push
jno
aas
sbb
sbb
scas
pop
cmc
sbbl
call
es
ljmp
fs
xchg
lcall
loopne
push
popa
or
outsl
push
bound
xor
subl
mov
rcrb
inc
jnp
fimull
add
or
icebp
add
movsl
aaa
jp
in
cmp
sbb
and
jns
and
dec
or
jbe
popf
scas
ret
fldl
mov
stos
sbb
push
push
or
outsl
sub
lret
int3
idivb
add
add
mov
in
nop
xchg
out
enter
ss
push
adc
out
xchg
mov
stc
das
mov
loop
daa
mov
push
gs
push
add
icebp
ljmp
inc
pop
daa
sub
jns
xlat
pop
loop
repz
pop
push
orb
repnz
pop
ss
lds
rol
popf
sbb
sahf
pop
mov
andb
cmp
xchg
mov
push
or
mov
add
loope
imul
loopne
pop
mov
sub
shll
inc
into
cmpsl
ss
imul
int3
pusha
mov
cmpb
std
dec
sub
push
out
cmp
add
insb
adc
inc
dec
hlt
in
outsl
mov
mov
cs
mov
and
mov
jnp
insl
fcompl
push
aaa
sti
mov
cs
mov
jp
js
xchg
cmp
les
jg
idivb
sbb
cmp
xchg
pop
mov
xor
push
sbb
xchg
push
mov
ret
xor
sub
pop
mov
add
dec
sub
mov
bound
insb
mov
mov
icebp
jmp
or
enter
sub
imul
jg,pt
adc
push
jns
clc
cld
cld
icebp
mov
mov
cmp
imul
sar
or
mov
inc
jb
pop
or
fs
sub
inc
xchg
outsb
xorb
scas
push
ret
insb
mov
cmp
jae
xor
inc
or
sub
ss
hlt
movsl
insl
insl
call
lods
stos
inc
mov
sub
call
sub
arpl
mov
out
into
jl
mov
mov
xchg
xchg
pushl
cmp
enter
sub
out
inc
sbb
sarb
xchg
shll
popa
outsl
leave
cmpsl
mov
mul
subl
loop
inc
mov
jecxz
sbb
mov
aas
push
stos
sbb
sti
push
push
fcoml
xchg
cmp
in
jp
cmp
das
sbb
xchg
adc
push
test
dec
divb
shrb
push
sbb
cli
jno
push
push
aad
ret
data16
xor
xchg
jecxz
loopne
lret
inc
push
outsl
mov
and
xchg
fwait
xor
lahf
and
push
sahf
hlt
int
xor
lods
push
add
xor
lret
dec
in
aas
lea
mov
mov
addl
mov
xor
lea
mov
or
aad
aas
xchg
xchg
cli
jne
cmpsl
jae
jecxz
dec
pop
mov
andb
cwtl
or
sarb
xlat
inc
mov
push
adc
pop
sub
shll
pop
jmp
xchg
inc
pushf
scas
icebp
cmp
ja
mov
cmpsl
imul
add
jns
pusha
icebp
and
sub
repz
xorb
imul
xor
clc
inc
fdivrl
repz
insl
push
repnz
lret
ss
lds
mov
sbb
fmull
sbb
sahf
pop
arpl
dec
jecxz
xchg
pop
xchg
push
mov
dec
adcl
in
faddp
push
out
mov
imul
out
insb
jmp
idivb
sub
xor
pop
dec
mov
jbe
movsb
or
sbb
out
int3
std
pavgb
xchg
jp
call
je
adc
xor
fwait
incb
roll
out
adc
add
daa
into
sub
pop
lcall
ficoms
adc
and
negb
mov
imul
push
sarb
pop
out
xor
cli
jmp
pop
ret
or
addl
mov
xorb
xchg
adc
mov
mov
shr
test
sbb
mov
aaa
push
jo
and
and
sti
push
adc
das
fadd
stc
int
mov
push
pop
add
inc
js
xor
pushf
add
and
push
call
rdmsr
inc
jno
mov
mov
push
rclb
rcl
aas
pop
mov
leave
sbbb
xor
test
sub
aad
jne
iret
xlat
fmuls
push
ljmp
jmp
outsb
hlt
xor
xchg
fcoml
and
dec
xor
dec
mov
das
es
lock
sub
clc
ljmp
lcall
dec
cmp
es
es
scas
add
mov
cmp
xor
sti
cmc
je
aam
and
mov
repz
pop
test
syscall
adc
jns
das
push
es
sbb
nop
in
push
add
jbe
mov
fmulp
sbb
cmpl
push
mov
cmpsl
fiaddl
popa
in
repnz
xchg
jnp
lea
jmp
pop
sub
mov
dec
xor
and
ja
ljmp
and
push
bound
or
jns
test
cmpsl
dec
xor
aaa
mov
lahf
xor
shll
das
imul
insl
push
sti
dec
or
xchg
push
jns
icebp
sbb
push
loopne
mov
dec
mov
cmpsl
bound
dec
cs
pop
push
rorb
rcrb
or
ds
inc
pop
fwait
jns
and
jg
push
xor
out
sbb
sahf
dec
push
movsl
jmp
or
je
inc
mov
cmpsb
jae
icebp
in
call
loopne
add
jmp
pop
push
mov
cmpsb
int
sub
push
jle
add
push
ss
lcall
ret
bound
fistl
fildll
ret
xchg
xchg
xor
arpl
addb
push
lea
mov
xor
daa
ja
or
sub
loopne
mov
jmp
mov
jns
ret
mov
mov
cli
adc
fst
ret
loope
dec
xchg
push
add
mov
cli
inc
in
fldt
dec
sbb
jae
xor
mov
mov
sub
mov
sahf
mov
ficompl
add
js
xor
xchg
ds
rcrb
xchg
lock
int
cltd
stos
cmc
in
push
sub
sti
sahf
mov
inc
hlt
adc
cltd
iret
or
cmp
push
xor
lret
add
jg
psrad
popa
inc
lds
shll
xchg
mov
and
ja
mulb
and
shrl
into
lret
sbb
push
cld
rcrl
icebp
push
lahf
cmc
xchg
out
or
shl
addr16
icebp
pop
sbb
xor
adc
pop
cmpsb
into
scas
cmpsb
lods
or
push
sbb
aad
or
xor
inc
and
fs
std
push
or
dec
sar
in
adc
mov
and
cs
push
mov
inc
ds
orb
push
mov
sbbl
hlt
movb
or
fcmovnbe
mov
mov
sub
sbb
ljmp
loopne
test
push
lods
pop
popa
insl
lret
xchg
fsub
fldl
out
mov
xor
dec
es
or
pusha
push
inc
int3
loope
out
fwait
push
add
cs
mov
mov
popa
loop
orb
divb
orb
and
cmp
shll
push
jbe
pop
test
mov
loopne
jg
andb
cwtl
fildll
xor
fiaddl
mov
jmp
inc
dec
xlat
mov
jmp
and
add
ljmp
mov
adc
sti
mov
xlat
xorl
mov
push
hlt
and
mov
mov
mov
pop
mov
repnz
inc
pop
mov
ds
jmp
mov
aam
push
and
fs
add
dec
stos
mov
sbb
push
push
fnsave
dec
xacquire
jae
scas
jbe
cmp
and
inc
cmc
nop
mov
and
adc
inc
out
fsubrs
stos
inc
fadds
dec
fidivs
cli
mov
or
les
test
and
ljmp
movsb
mov
cmpsb
loop
xchg
xchg
dec
test
push
mov
mov
bound
mov
arpl
mov
sbb
inc
mov
inc
xlat
es
subl
adc
cmp
lods
pop
add
push
into
dec
and
or
movsb
mov
sub
sbb
repnz
mov
push
addr16
inc
aaa
cmpsl
or
ja
dec
dec
push
or
jns
inc
insb
push
add
xlat
jmp
and
stos
add
bound
push
push
xchg
pop
dec
cmpsl
cmp
cmp
out
inc
faddp
push
sbb
leave
lods
inc
into
adc
sub
push
aas
push
subb
sub
outsb
add
add
push
repz
in
jmp
pop
stos
push
cld
lret
xchg
push
mov
pop
pop
dec
imul
mov
pop
add
dec
loopne
jno
add
inc
pop
scas
inc
pop
add
std
sarl
shlb
push
or
mov
jne
insl
sub
orl
xor
push
xor
cmp
pop
mov
add
inc
ljmp
push
int
iret
dec
fildll
sbb
fisubrs
aam
cmp
in
stc
inc
xchg
jmp
dec
fistpll
push
xchg
cwtl
sub
jp
jl
push
or
jp
outsb
std
ret
pop
call
mov
lock
test
sti
hlt
mov
inc
push
outsb
push
cld
jg
and
mov
sti
xchg
fisubl
gs
pop
in
movsl
xor
pop
mov
mov
xchg
daa
ret
sub
sub
push
insl
fs
pop
mov
sbb
jno
inc
fsubs
add
sti
in
pop
lock
mov
outsl
dec
adc
test
xor
repnz
popa
mov
arpl
sub
xor
scas
test
mov
scas
xchg
jns
sbb
inc
sbb
and
clc
add
push
pop
fcmovne
sub
hlt
cmpsb
lock
jae
cmp
roll
iret
mov
rcrb
pop
or
lods
jo
or
or
repz
xchg
out
stos
adc
pop
mov
fdivl
dec
addr16
xor
xor
jl
adc
addr16
test
push
lcall
xor
xor
pop
and
mov
ljmp
ss
lock
sahf
mov
cs
pop
sub
int3
dec
imul
xchg
orb
mov
fwait
aaa
out
imul
ret
add
xchg
sub
daa
ljmp
xchg
loop
mov
repz
or
inc
xchg
add
shr
adc
repnz
lds
pop
jl
jle
jg
add
add
aas
inc
lds
loop
add
pop
xchg
mov
jmp
push
xchg
xlat
xor
sbb
lcall
shlb
jmp
stos
dec
sbb
mov
out
jg
lahf
mov
test
sub
sbb
loop
lcall
int
rclb
mov
pop
repz
out
adcl
dec
xchg
and
test
jno
pop
jle
fsubl
rol
dec
dec
push
lock
out
xchg
addr16
push
push
xchg
sarl
jno
adc
adc
pop
inc
inc
push
mov
sti
cmp
push
stos
stc
adc
jle
push
dec
mov
testl
push
mov
in
pop
add
sbb
mov
pop
iret
aaa
divb
out
sarl
cs
movsb
jp
inc
lahf
test
cli
mov
xchg
icebp
add
repz
mov
out
insb
out
pusha
adc
xor
mov
les
and
shlb
add
add
fs
inc
jg
add
xor
ret
cmpsl
in
nop
pop
into
nop
mov
stos
xor
orl
icebp
jmp
out
adc
mov
ss
lods
scas
fsubrs
div
icebp
jnp
pushl
adc
mov
add
push
mov
pop
cmp
fwait
add
xor
sub
inc
cmp
insb
les
cwtl
and
fnstcw
out
sti
daa
sub
jno
rorl
imul
loop
inc
mov
rcrl
leave
data16
sahf
add
adc
inc
rol
dec
jb,pn
cwtl
jo
dec
mov
imul
fistpl
or
pop
jb
lods
fwait
in
pusha
ljmp
insb
divb
sub
mov
mov
addb
sbb
stos
xor
and
jne
pop
aas
icebp
data16
pusha
negb
pop
push
ds
push
std
stos
mov
jmp
lds
pop
fildl
push
inc
push
data16
xor
sub
hlt
mov
push
fildl
add
fdivrs
pop
aas
jl
std
cmp
pusha
repnz
or
pop
and
inc
push
adc
mov
jge
mov
sub
add
add
add
sbb
xor
cmc
fcomps
std
cmp
xchg
enter
bound
bound
pop
cwtl
and
mov
push
jecxz
mov
add
or
cmc
cmp
pop
daa
push
stc
decb
cmc
mov
xor
enter
mov
lods
shrl
cmpsb
mov
imul
sbb
inc
push
loope
lods
in
repz
cmc
xchg
xchg
pop
iret
jle
add
ja
out
scas
xchg
out
out
cli
dec
sti
cld
js
dec
lea
cmpsb
mov
pusha
sub
cs
xchg
mov
jo
call
and
jmp
or
inc
rolb
pop
xor
jmp
dec
mov
push
sbbl
cmpb
pop
sub
or
repnz
mov
in
imul
loopne
jmp
sahf
es
add
jecxz
jp
pushl
das
addr16
xor
cli
adc
xchg
add
fldenv
cli
insl
jae
cld
cmp
rolb
daa
scas
ret
pop
jbe
aaa
sbb
fisttps
jge
bound
aam
std
sub
ljmp
test
mov
sub
adc
jbe
add
daa
out
push
mov
pop
jl
lret
mov
add
sub
pusha
pop
lret
inc
jbe
and
inc
mov
insb
mov
aaa
hlt
jb
xchg
les
idivl
jb
out
pop
jns
daa
fbld
stos
dec
lahf
jne
adc
add
mov
jge
adc
and
sti
hlt
ds
bnd
xorl
mov
fisubs
push
pop
shlb
ret
pusha
addb
mov
mov
jb
cmp
cli
incb
int
inc
jno
xor
and
sub
repz
call
push
cltd
ret
pop
push
cli
cmpsb
mov
shlb
mov
in
add
lahf
pushf
xchg
jge
inc
pop
push
fsubrs
jnp
jno
dec
mov
jp
xchg
add
iret
les
lods
sbb
sbb
sub
mov
and
arpl
inc
sbb
mov
dec
pop
mov
nop
in
mov
xchg
or
sub
push
aas
test
or
aas
in
and
push
and
fisttpll
dec
cltd
push
stc
repnz
das
outsb
scas
cs
xor
inc
xchg
push
mov
xor
adc
and
and
pusha
leave
inc
mov
repz
mov
or
int
movb
xor
notl
ret
xor
jne
jge
idiv
int3
xchg
push
pop
arpl
and
mov
roll
sbb
les
xor
mov
arpl
mov
scas
sub
dec
imul
cli
jl
add
outsb
sbb
popa
cli
lcall
stc
jl
mov
addb
imul
ret
ret
loop
sub
inc
hlt
xor
cmp
and
mov
loop
pop
nop
dec
les
cli
es
mov
test
jb
add
int3
jbe,pt
cmp
scas
xchg
insb
add
xchg
sub
jmp
xchg
lea
sbb
scas
loope
loop
test
pop
sbb
xchg
cmp
pusha
xchg
mov
push
inc
mov
inc
push
adc
xchg
lret
pop
es
call
data16
mov
xchg
jb
mov
mov
movaps
mov
std
sub
in
jmp
stc
in
mov
add
add
or
lcall
lods
mov
mov
out
data16
aaa
fldcw
stos
repnz
scas
ucomiss
loopne
test
mov
and
xor
lret
fmul
lock
mov
loope
xor
int3
inc
pop
xor
sub
lret
gs
dec
les
das
mov
dec
jne
es
ljmp
adc
jge
xchg
push
insl
fstps
mov
add
fsub
addl
add
lods
out
out
inc
dec
cmp
aas
xchg
lcall
jmp
cmp
dec
sbb
add
push
shr
aam
add
cmpsb
mov
into
cmp
mov
shl
and
xchg
xchg
out
jns
push
popf
sub
pop
cs
fcmovbe
sbb
sub
or
push
jbe
mov
xchg
xchg
ret
call
ret
lods
xchg
ja
pop
ss
inc
test
fwait
or
sub
lds
mov
cs
xor
inc
popf
das
dec
out
das
ss
cmp
xchg
out
mov
xchg
jbe
lea
jb
inc
shld
mov
mov
out
data16
subb
sbb
mov
pop
aam
test
or
mov
int
sub
incl
ret
adc
pop
jmp
cmp
push
stc
inc
shr
and
pop
add
xor
push
cld
idivl
jne
mov
pop
adc
lods
jp
ljmp
push
shl
arpl
add
les
pop
loop
fistps
popf
or
je
sbb
pop
addl
inc
popf
or
push
popa
inc
pop
push
sub
inc
jmp
fistpl
jae
movsl
adc
int3
push
out
add
push
ljmp
xorl
push
mov
mov
loope
xchg
das
or
xor
jo
lods
xchg
xor
sbb
add
in
adc
dec
mov
insl
push
scas
test
dec
add
xor
in
adc
cli
jne
mov
push
push
cmp
push
rcll
loope
push
outsb
imul
inc
sbb
cmp
rcrl
pop
xor
mov
xor
jmp
sarl
xor
enter
repz
push
inc
les
mov
mov
arpl
popa
arpl
jecxz
sub
loop
mov
ret
and
jns
in
repnz
aas
loopne
fmul
fidivrl
mov
pop
xchg
scas
mov
push
adc
mov
sti
cltd
mov
cwtl
ljmp
mov
notl
sub
pop
xchg
push
subb
ret
iret
aas
xor
mov
out
in
pop
fwait
ljmp
out
es
loopne
enter
jecxz
stos
cli
lcall
push
lcall
pop
xor
clc
xchg
mov
pop
jne
cld
mov
fistpll
sub
int
clc
repz
stc
dec
mov
pop
cs
outsb
or
aam
adc
sbb
lock
sbb
xlat
in
in
adc
sub
push
dec
jnp
adcl
adc
sbb
pop
mov
jl
movsb
xor
loop
sub
lea
and
sub
lea
sub
inc
inc
xor
adc
lea
add
das
push
in
inc
pop
sbb
lea
test
hlt
adc
jns
inc
pushf
xchg
loopne
fsubl
pop
jmp
sub
in
cmpl
ljmp
lds
add
and
jp
testl
cmc
dec
lret
fwait
jmp
cli
sarb
mov
inc
les
fiaddl
loope
cs
dec
mov
pop
inc
sub
and
ds
call
push
lods
sub
mov
mov
lcall
shll
and
sbbl
cld
cmp
loopne
lea
ror
push
int
roll
cmp
add
cld
xor
xlat
arpl
push
ds
js
and
push
movsl
mov
decb
mov
sbb
sbb
add
pop
mov
stos
cli
out
fdivp
out
pop
dec
jae
fs
mov
scas
fcompl
mov
repnz
lret
dec
inc
jge
fbld
lret
cmc
movsl
cli
mov
or
pop
call
out
jnp
push
xchg
ds
lcall
dec
cmp
sbb
cs
sahf
sbb
add
xor
cmpsb
push
mov
out
clc
add
push
mov
fistl
ffreep
icebp
mov
mov
jp
cmc
sarb
cs
mov
add
ret
rol
ss
lock
inc
jne
mov
cmc
lea
outsb
add
sbb
sbb
xadd
aad
in
push
mov
sub
imul
xor
inc
mov
in
cmc
dec
or
sbbb
lret
imulb
jne
add
adc
subl
out
jno
sbb
sub
movl
in
cmp
mov
fsubp
mov
pop
sbb
mov
xchg
adc
xchg
push
mov
imul
mov
ss
out
pop
cmp
fiadds
mov
sub
pusha
ljmp
push
xchg
add
jnp
inc
lods
cmp
lcall
aam
testb
fnsave
and
xchg
cmp
jecxz
stc
fcompl
mov
mov
repnz
pop
in
sub
idivb
bound
ret
pop
xor
mov
inc
mov
jp
aam
inc
push
mov
jae
mov
fidivl
ds
lahf
data16
push
add
aaa
pop
push
mov
fsubl
inc
sub
inc
add
mov
cmc
hlt
dec
mov
movb
cmp
or
aad
cmp
mov
and
sti
scas
and
push
data16
aad
lea
pop
or
loope
mov
push
test
mov
mov
mov
repnz
push
cmp
mov
or
bsr
and
xchg
sahf
ljmp
mov
fisubrs
lahf
sahf
loop
mov
xchg
mov
ljmp
ret
cmpsb
xchg
xchg
sbb
xor
mov
rcl
xchg
dec
mov
dec
xchg
movsb
and
sub
mov
xor
test
repnz
mov
add
ds
dec
rcll
cmpsl
push
mov
push
sub
sbb
push
jge
inc
cmpsl
xchg
or
xchg
inc
mov
adc
adc
in
imull
popa
and
test
jmp
jbe
ds
push
push
mov
xchg
test
mov
inc
ss
jb
xchg
andb
mov
mov
dec
adc
sbbl
and
dec
ffree
std
adc
jbe
ja
jns
dec
in
sbbl
iret
test
mov
inc
push
movsb
jae
push
push
add
mov
lods
lods
xchg
push
add
inc
out
push
sbb
inc
push
mov
leave
fisttps
xor
inc
addb
mov
pop
in
ljmp
mov
xchg
adcb
nop
andb
push
xorb
popf
adc
xlat
ss
cmp
jne
mov
into
pushf
sub
dec
and
dec
xor
fisttps
mov
lods
xchg
pushf
mov
pop
dec
jecxz
sbb
das
notl
sub
cmc
mov
jmp
imul
add
stos
lea
idivb
sub
call
sub
out
push
sbb
cmpsl
test
mov
arpl
adc
hlt
push
bound
add
aam
rcrb
fildl
lcall
mov
notl
out
ja
jb
in
lock
rorl
inc
push
push
int
adc
or
jge
mov
push
loop
or
inc
int3
dec
jle
sub
jb
mov
insb
dec
mov
ss
jp
std
test
xchg
cmpb
dec
ds
aam
sahf
jnp
cli
bound
dec
pushf
add
pop
stc
mov
adc
sub
aas
or
inc
and
ss
scas
cmp
daa
outsl
xor
xchg
sub
pushf
jecxz
jne
cmp
xor
pop
add
mov
mov
pop
or
or
xchg
dec
movsl
pop
mov
gs
roll
push
push
cmp
in
jae,pt
jno
push
stos
jb
pop
adc
mov
mul
adc
aad
pop
sbb
xchg
call
aad
mov
shl
xchg
loop
out
adc
mov
pop
mov
mov
sti
into
xadd
mov
add
lds
xor
or
mov
in
fs
xchg
fwait
es
lea
sub
stc
mov
add
gs
pop
ficoml
lock
jg
and
jmp
in
sarb
push
pop
cmp
xor
inc
popa
in
mov
repnz
push
add
and
xor
mov
cmpsb
pop
pop
in
xor
pop
cmp
cmp
fs
pop
out
jmp
sti
sbb
lret
mov
in
dec
jno
fs
test
sbb
mov
mov
cmpsl
push
lcall
pop
lock
mov
decl
mov
mov
fsubrs
add
imul
jno
fiadds
lds
lahf
jb
in
fdivl
je
and
das
sub
jg
adc
jp
mov
pusha
and
ds
xor
popf
out
int
lcall
je
icebp
pop
xchg
pushf
fisubrl
push
jnp
cmpsb
outsb
leave
les
sti
rol
scas
data16
bound
xor
push
sahf
repz
sbb
ja
cmp
sub
jmp
mov
jle
adc
pop
add
cmp
adc
add
xor
in
xchg
sub
dec
movsl
push
vmovaps
jns
push
xor
aam
sbb
nop
daa
test
and
push
mov
and
out
mov
arpl
stc
xor
push
or
in
ds
mov
xchg
ret
adc
mov
xchg
pop
jecxz
dec
or
jns
inc
push
stos
or
jae
add
pushf
rcll
push
aas
mov
jp
scas
les
jl
add
mov
and
pop
inc
je
into
push
std
jl
pop
ljmp
std
addb
cmc
jmp
mov
cmp
pop
lret
or
mov
dec
add
imul
fistpl
mov
mov
ljmp
cmp
popa
inc
sahf
jl
insl
mov
cmpsb
int
rclb
outsl
in
dec
pop
xor
lret
ret
lcall
xchg
adc
xchg
outsb
mov
and
lcall
loope
inc
cmpsb
lock
add
daa
mov
mov
xor
pop
jp
leave
adc
push
xchg
popa
push
adc
sub
loope
insl
sbb
cmp
sub
icebp
sti
scas
shr
mov
in
test
or
adc
or
ret
push
cs
xchg
jne
js
popl
mov
add
jmp
xlat
test
lret
iret
enter
psubsw
mov
dec
int
xor
and
mov
add
imul
inc
and
in
cmp
jg
lcall
inc
sub
into
out
lahf
inc
sub
jae
mov
jecxz
sbb
lods
mov
pop
mov
jae
cmp
data16
jmp
ss
cmp
sahf
divl
push
mov
add
ss
sub
inc
in
fisubrs
inc
jo
mov
adcb
mov
movsl
lret
sbbb
into
push
or
shr
inc
andl
roll
xlat
scas
mov
xor
add
and
out
push
sar
gs
or
pop
imul
sbb
mov
neg
jp
adc
repnz
sbbb
mov
add
cmp
adc
xor
inc
or
aad
cs
lea
adc
out
or
leave
add
dec
sbb
sub
pop
into
or
pusha
scas
adc
lods
pop
dec
jl
cmpsl
lahf
mov
adc
mov
cmc
insb
dec
mov
lock
inc
fistps
lret
inc
lret
popf
fadds
push
insl
mov
loopne
movsl
mov
fs
and
xorb
pop
leave
pop
popl
pop
push
rep
jno
and
iret
lcall
jne
or
cli
lods
or
scas
push
mov
or
xchg
push
inc
sbb
mov
push
inc
out
jb
icebp
outsl
es
loope
mov
sbb
inc
orl
sbb
ds
xor
inc
lods
add
dec
mov
call
enter
stos
sbb
adc
out
mov
insb
enter
enter
xchg
icebp
jno
xchg
enter
sbb
cmpb
jae
push
fists
lods
xlat
mov
or
aaa
loop
dec
jbe
push
int3
addr16
push
cmpsl
pop
push
mov
repnz
test
mov
mov
jmp
adc
pusha
mov
sub
ja
xor
jbe
lcall
add
sub
lods
cmp
in
and
jbe
and
aaa
es
mov
sbb
jmp
sbb
inc
mov
xor
nop
sub
ss
dec
or
jne
or
clc
into
cmp
fisttpl
int3
jae
not
mov
lret
pop
push
adc
and
sub
add
adc
rcrl
je
in
add
mov
ret
jbe
or
test
inc
bound
insl
push
cmpsb
test
and
sub
dec
sbb
out
push
mov
inc
mov
jb
into
icebp
pushf
cmp
in
pop
sub
or
add
push
ret
inc
mov
sbb
negl
push
aas
out
movsb
or
loop
pushf
jmp
loope
test
insl
xor
mov
adc
push
or
fisttpl
push
jb
dec
mov
xchg
hlt
ljmp
stos
dec
cs
pop
cld
push
inc
test
jecxz
insl
lret
or
push
daa
dec
jl
pop
ret
sub
stos
addr16
jle
hlt
xchg
jecxz
jb
addr16
mov
pop
pop
mov
shrl
shlb
or
sbb
cmp
cmp
cli
xchg
adc
cli
sbb
pop
pusha
mov
jmp
jecxz
adc
mov
hlt
roll
stos
clc
and
cli
xor
inc
lods
add
adc
stc
xlat
movsl
orl
out
out
ret
inc
jb
stos
ret
stc
cld
test
xchg
lahf
dec
imulb
inc
sbb
inc
std
cmpsb
repz
pushf
or
call
out
jge
push
out
ljmp
insl
popa
cwtl
and
xor
aam
pop
iret
dec
mov
mov
xlat
mov
fxch
pop
pop
addr16
push
icebp
dec
mov
int
std
lret
movsb
mov
frstor
sub
mov
bound
popa
xor
mov
and
dec
jo
and
testl
loop
bound
jne
xchg
adc
in
xchg
add
outsb
sarl
mov
sub
xor
es
adc
sbbb
and
jne
sub
dec
arpl
shr
mov
add
int
mov
push
push
fisubs
jge,pt
adc
aas
lods
pop
out
xor
dec
mov
rol
mov
fwait
pop
enter
scas
jg
lcall
sbb
mov
bswap
lds
add
jp
jmp
jp
aam
push
divb
aam
rorb
insl
fucomi
out
and
push
push
sbb
and
in
pushf
sbb
shll
aad
mov
outsb
addr16
add
mov
out
mov
inc
fs
call
and
movsb
jge
dec
and
sub
xchg
inc
push
jg
xlat
sub
pop
and
xchg
xor
and
and
test
push
adc
mov
adc
pusha
xchg
test
or
lret
xor
xchg
xchg
outsl
jae
add
sbb
loop
popf
jmp
pop
mov
clc
and
sub
jmp
jo
fisttpl
lahf
bound
push
or
arpl
xor
pop
les
roll
clc
sub
sub
inc
mov
mov
add
loopne
jo
imul
cmp
loopne
mov
push
loopne
lods
ret
fcompl
mov
ret
inc
lcall
in
add
shrb
mov
xor
les
stos
xchg
gs
sub
or
adc
jecxz
hlt
dec
inc
cmc
jg
lock
jmp
mov
imul
push
popl
stc
iret
in
fs
cltd
outsl
das
mov
adc
stos
cmp
aaa
jnp
mov
fdivr
sarl
mov
push
mov
adc
lcall
ret
out
push
not
push
cwtl
int
fiaddl
cmp
xchg
cld
adc
inc
xor
pop
addr16
mov
lock
scas
dec
cs
jbe
repz
jns
xor
clc
sar
dec
push
mov
xchg
int3
sti
ds
loope
mov
cmpsb
dec
stos
jmp
shlb
fwait
push
pop
sub
ret
cmp
mov
and
lods
add
or
jmp
sub
js
or
push
jo
sbb
inc
sbb
inc
mov
mulb
aas
dec
mov
lcall
adc
int3
jno
xchg
js
xor
pop
push
push
out
cwtl
cs
gs
jge
add
lods
push
add
mov
pop
mov
dec
push
pop
dec
popf
nop
inc
addr16
rcrb
js
data16
in
sbb
dec
mov
in
rcll
std
in
cltd
pop
jnp
inc
jp
mov
push
imul
fdivrl
inc
mov
sbb
clc
xchg
sbb
sbb
xor
inc
push
sti
push
pop
cmc
inc
scas
ror
mov
cli
imul
popa
gs
out
adcl
adc
pop
pusha
or
out
jno
ljmp
push
rcl
xchg
ret
inc
xor
lret
mov
xchg
push
fnstcw
add
jl
mov
repnz
or
xor
les
add
push
sub
jg
stc
xchg
xchg
cmc
iret
imul
push
mov
cmpsb
sti
cltd
scas
pop
fwait
loop
pop
ret
push
adc
and
add
sbb
adc
mov
or
and
jbe
cmpsl
repz
sbb
sub
xchg
and
pop
mov
adc
lods
add
inc
scas
push
fidivrs
into
daa
cmp
pop
outsb
shll
lods
test
mov
mov
aam
sti
daa
add
popf
inc
or
out
mov
gs
enter
sbbb
mov
dec
pop
push
les
lock
loopne
xchg
mov
push
mov
jp
dec
jnp
lock
leave
cmpsb
inc
es
adc
mov
mov
pop
push
adc
cmp
imul
repz
xor
shll
mov
hlt
cmp
lea
inc
das
sarb
mov
cmpsl
and
data16
test
lds
jne
mov
xchg
arpl
lret
loop
aam
sub
adc
ja
sahf
je
js,pt
and
dec
sbb
push
jmp
mov
notb
outsb
popf
hlt
aam
push
xor
das
sbb
and
or
into
xor
rcrl
test
fnstsw
out
loope
xchg
in
out
pushf
loop
mov
push
daa
mov
pop
negb
das
std
in
push
dec
lds
jb
call
mov
sahf
add
pop
fisubrs
push
push
les
or
push
test
test
jne
jp
inc
outsb
aam
xor
cmpsb
pusha
or
or
sbb
mov
and
mov
dec
fidivs
mov
test
xchg
andl
pop
xor
inc
jecxz
xchg
test
pop
lea
out
mov
cmpsb
test
cmpsl
gs
push
sub
mov
pop
into
dec
push
and
xchg
mov
shrl
gs
test
pusha
sarl
mov
popf
outsl
mov
loope
jg
mov
cmp
mov
xchg
aaa
and
insl
xor
or
push
adc
jecxz
and
xor
xchg
cmc
into
push
pop
fdivrl
push
ljmp
data16
pop
and
out
mov
xlat
insl
ss
lahf
stos
and
jge
and
adc
inc
cmp
dec
pusha
pop
mov
sbb
xchg
fmull
adc
lock
add
fcmovne
jbe
mov
and
clc
out
inc
cmp
cli
dec
mov
rolb
mov
loopne
mov
mov
push
cmp
cmp
aaa
cmc
popf
hlt
adc
ds
jecxz
cmp
fwait
mov
fs
in
pop
push
es
inc
jg
and
mov
jmp
add
inc
mov
push
sub
cltd
shl
dec
imul
enter
pop
jle
dec
jns
ret
pop
or
mov
fildl
pop
sbb
imul
xlat
and
push
mov
push
sbbl
fsts
aad
sahf
inc
lcall
sub
cwtl
or
sbb
push
or
dec
out
es
shlb
jmp
data16
sub
dec
inc
pop
shl
xor
jo
dec
in
in
cmp
push
and
mov
mov
pushf
sub
dec
and
test
xchg
push
shlb
push
or
add
lret
pushf
out
mov
mov
mov
pop
pop
pop
lahf
sub
stc
pop
cmp
sbb
push
stos
dec
and
aad
or
es
push
imul
mov
cmc
and
mov
xchg
xor
icebp
sti
jecxz
cld
fst
add
sarl
jle
jl
fdivr
xor
inc
sbb
cmp
std
arpl
jmp
or
mov
ljmp
dec
imul
sbb
jo
scas
shl
pop
or
and
lret
adc
outsb
lods
mov
mov
pop
dec
rorb
das
sub
jp
ljmp
cmp
in
mov
lret
mov
dec
movsb
pop
adc
call
jb
outsb
or
out
mov
mov
mov
insl
out
push
dec
inc
and
stos
mov
pop
cmp
lcall
pop
push
lahf
add
cmp
inc
stos
pop
xor
es
loop
fs
sti
mov
mov
pop
adc
push
xor
mov
int
mov
ljmp
cli
sahf
les
jl
sub
inc
fildl
push
fisubl
xchg
cli
jb
stos
adc
popf
jle
jmp
xchg
push
cmp
mov
mov
ja
cmp
cli
or
es
sarb
jecxz
out
pushf
mov
mov
push
sub
xor
xor
jbe
stos
jae
inc
sub
inc
imul
pop
and
arpl
xor
inc
cmc
xchg
adc
clc
add
pop
sbb
testl
jno
cs
inc
ja
xor
outsl
and
pop
pop
push
mov
xchg
insl
stos
imul
call
mov
jp
add
fisttpl
mov
mov
insl
arpl
out
or
mov
insl
and
sti
mov
xchg
mov
push
je
add
jne
repz
movsl
cmovb
ja
loopne
sti
adc
cld
icebp
push
mov
and
mov
loop
mov
bnd
add
mov
pop
in
subb
xor
in
xor
jno
divb
and
fcomip
arpl
adc
and
xchg
mov
push
jp
pop
xchg
ds
movsb
pop
pop
sbb
dec
fistpl
lds
mov
jae
loope
push
push
cs
xchg
pop
gs
mov
jl
loop
icebp
call
out
stos
into
aas
sub
shr
mov
fcomip
and
and
inc
dec
jnp
fidivrs
fbstp
loope
pushf
jo
insb
lret
cwtl
mov
int3
push
xchg
and
mov
loop
sbb
gs
or
xchg
aaa
or
sbb
imul
jnp
mov
lcall
std
mov
sub
mov
lret
fwait
cmp
sub
call
dec
mov
mov
rol
testb
mov
mov
imulb
sbb
ret
call
fsts
jnp
pop
aas
stc
mov
xchg
push
xchg
push
xor
add
out
cmpsl
mov
cmc
inc
and
insb
and
bound
xor
loop
daa
push
imul
lahf
es
or
or
jecxz
fdivr
sub
ret
in
js,pn
test
lea
das
movsl
lea
mov
mov
or
sahf
das
add
or
jmp
add
cld
dec
sbb
xchg
add
icebp
shl
bound
mov
push
out
not
jl
adc
mov
sub
imul
mov
cld
mov
dec
xor
xchg
rolb
jo
push
stos
add
add
clc
enter
cli
and
mov
out
in
and
cmp
push
fisubl
aas
jbe
sbb
cmp
es
out
imul
pop
movsl
push
out
arpl
ffreep
aaa
stos
jl
pop
in
sub
mov
mov
in
int3
pop
sbb
add
sub
shr
ret
xor
add
jo
xchg
add
adc
popf
push
inc
pop
cli
sub
shrl
out
loope
out
aad
xor
inc
stos
or
mov
push
mov
andl
jo
fldl2t
mov
cmp
jecxz
fnstenv
into
daa
push
sbb
cmp
fsubl
nop
xchg
push
jg
cmp
fistps
loop
jp
push
sub
or
in
in
mov
sub
sub
mov
inc
fbstp
outsl
mov
pushf
push
and
icebp
jge
inc
ljmp
lods
mov
mov
into
scas
jbe
sub
sub
xlat
push
mov
add
or
xor
dec
and
xchg
and
repz
sbb
xor
popa
mov
dec
fcoml
lea
dec
sahf
test
fcomi
ja
dec
jecxz
push
inc
ds
inc
ds
pop
dec
and
andb
mov
push
xchg
jmp
push
out
jbe
mov
rcl
cltd
dec
xchg
and
and
adc
push
call
xchg
and
jno
ss
inc
and
mov
push
xor
test
leave
xchg
add
rclb
stos
and
psllw
pop
mov
cmpsl
gs
out
inc
repnz
add
ficomps
jl
imul
jb
dec
pop
mov
out
sbb
pop
pop
jb
or
ret
arpl
loop
cwtl
mov
push
aas
icebp
mov
xchg
inc
cmp
jle
sahf
push
mov
les
out
lds
mov
dec
pop
mov
mov
loop
mov
aad
aas
cmp
hlt
mov
lahf
mov
hlt
inc
jecxz
cltd
push
sbb
sahf
jl
pop
popf
push
lods
cli
cmp
test
rol
sbb
mov
ss
mov
stc
or
inc
test
pop
in
and
orl
arpl
shrb
mov
dec
push
ljmp
inc
mov
stos
mov
sub
insb
dec
lret
dec
jbe
push
add
cmc
xchg
shll
mov
or
or
push
push
scas
stos
xor
mov
daa
push
jmp
jae,pt
imul
or
rcrl
cmp
fiadds
jb
gs
xchg
scas
cmc
add
outsb
jo
pop
mov
or
push
fbstp
push
or
jo
mov
ret
test
add
xor
sar
jne
dec
inc
fldcw
jne
sub
jp
push
arpl
adc
sub
push
jmp
ds
mov
scas
add
push
cmp
xchg
sub
pushf
and
popa
jmp
ljmp
or
jbe
call
cwtl
js
push
out
inc
pop
int
gs
cwtl
adc
aaa
and
xchg
or
xchg
cmp
mov
jbe
out
and
xor
dec
xor
inc
jmp
ds
lret
ret
jmp
lcall
pop
and
cmc
out
mov
inc
fiaddl
loop
cmp
subb
fucompp
jg
scas
sbb
jnp
jns,pn
bound
mov
test
clc
or
outsl
jecxz
nop
xchg
push
mov
mov
outsb
and
and
in
and
imul
mov
inc
fwait
dec
insb
es
pop
inc
clc
and
sbb
sub
cli
mov
push
sahf
ss
aaa
jb
int3
es
aaa
daa
sbb
ss
cltd
and
je
sub
adc
mov
mov
pop
sub
mov
sub
jne
leave
insb
cmpsb
adcb
mov
decl
hlt
and
push
sub
orl
add
cmp
aas
lods
mov
push
rep
sub
push
aad
mov
cmpsl
push
jno
sti
pop
mov
dec
pop
andl
xchg
push
inc
aam
repz
aam
cmp
sbb
je
push
int
sbbl
mov
in
xchg
aam
and
popa
mov
stos
cld
jb
arpl
sbb
cmp
out
xchg
mov
push
jb
dec
inc
nop
xchg
jbe
xor
dec
inc
mov
mov
and
clc
push
dec
nop
lret
pop
stc
sub
adc
incb
repz
loope
inc
jg
add
pop
xchg
sub
in
mov
call
movsl
loop
mov
ret
or
jle
push
subl
inc
in
inc
fiadds
loopne
ret
dec
push
dec
in
hlt
lret
jl
loop
aaa
or
adc
or
ljmp
out
add
mov
xor
push
push
mov
aas
cmp
mov
aad
jne,pn
mov
adc
std
pop
mov
pusha
dec
sbb
inc
cmp
add
loope
sub
les
sbb
inc
xor
mov
cs
or
jns
jb
dec
push
xchg
fs
sbb
filds
imul
inc
jno
arpl
mov
xchg
imul
xchg
sub
xchg
jecxz
stos
fwait
loop
push
adc
negl
inc
xchg
cmpsb
xchg
dec
mov
test
ret
jns
lcall
outsb
mov
or
ljmp
jns
sbb
fidivrl
xchg
mov
xchg
dec
bswap
sti
cs
out
inc
leave
test
jbe
or
inc
lock
adc
jl
rorb
xchg
add
xor
xchg
lahf
mov
das
popa
dec
sbb
xor
call
imul
aas
jno
push
mov
fists
into
mov
imul
push
repnz
jns
sub
mov
in
repnz
lock
jno
add
xchg
test
xor
ret
xor
and
outsb
mov
mov
pop
xor
jle
repnz
popf
mov
or
ljmp
inc
adc
add
pop
sbb
mov
add
jne
add
jo
fisubrs
jmp
mov
inc
dec
add
cmpl
ror
sub
icebp
rclb
xor
dec
dec
ds
jg
call
js
push
pop
iret
mov
pusha
rcrb
add
add
sbb
xchg
mov
adc
sub
aas
mov
mov
out
call
dec
push
in
push
sbb
cmp
adc
dec
mov
pop
das
push
push
addr16
inc
mov
or
out
or
dec
mov
inc
inc
bound
outsb
push
jno
sub
js
aam
push
add
ret
jb
leave
dec
xchg
jmp
popa
popf
push
mov
cmc
lret
aas
xchg
inc
mov
fisubs
pop
push
lock
push
mov
pop
xlat
mov
dec
nop
call
xchg
lods
xchg
call
mov
repnz
in
lret
mov
fistpll
pusha
mov
inc
xor
push
and
xlat
adc
aas
lea
adc
mov
fwait
call
pop
jb
or
or
dec
adc
sbb
mov
xor
inc
add
ret
xlat
ss
mov
sti
das
sti
ja
jae
movsl
lea
mov
jb
dec
loop
negl
imul
out
mov
cltd
jo
sbb
inc
mov
xchg
movsb
or
mov
inc
xchg
cmpsb
mov
mov
xchg
in
add
push
dec
fs
inc
aad
mov
sub
out
xchg
div
cmpsl
push
mov
stos
dec
cld
xor
fbstp
outsl
jns
xchg
sub
pusha
xchg
cs
js
cmp
mov
clc
aaa
ja
into
inc
xchg
inc
jp
and
jo
mov
frstor
shlb
jo
push
mov
push
mov
ss
js
jae
ror
mov
inc
xor
sbb
loopne
jb
pop
scas
dec
rcrb
std
push
loopne
jb
and
push
je
jns
fisubrl
pop
cmpsb
mov
pop
mov
xchg
jg
adc
dec
add
xor
add
mov
bound
mov
sti
insl
leave
dec
push
mov
jnp
ror
xor
jnp
sahf
pop
and
cmp
jns
jno
xor
lcall
mov
lcall
stos
lahf
mov
push
xchg
sub
and
xchg
shl
pop
pop
mov
add
jl
pop
pop
stc
mov
xor
movsl
rorl
mov
mov
insb
loope
pop
adc
dec
mov
sub
fcompl
out
xor
fidivl
inc
xchg
repz
ja
stc
imul
xchg
jo
into
and
in
popf
xchg
movsl
cmp
cmc
xchg
mov
in
push
es
hlt
inc
adc
sub
jmp
add
ss
js
mov
pop
sbb
fnop
je
jo
and
jge
cli
aam
pop
rorb
pop
addb
jge
mov
sub
das
repnz
or
push
clc
stos
inc
or
sbb
xchg
cmpsl
std
jne
or
push
bound
icebp
lock
imul
int3
jbe
imul
dec
or
mov
xor
bound
mov
inc
cmp
enter
and
or
push
dec
lahf
in
dec
fwait
push
clc
loope
test
adc
xchg
add
frstor
pusha
fsubrl
mov
nop
sbb
out
mov
cmc
jb
insl
mov
ret
cmp
sti
xchg
loopw
out
out
sub
repz
mov
pop
scas
cmpxchg
lods
sub
aas
adc
inc
jnp
fistl
cld
jmp
jmp
cmovo
fwait
dec
in
rep
sti
adc
sbb
xchg
enter
daa
mov
cmpsb
pop
or
jmp
mov
rorl
mov
std
popf
adc
mov
int3
out
mov
add
cmp
test
test
in
inc
popa
xor
push
jae
dec
or
test
pop
daa
jg
mov
in
adc
inc
pop
sub
cmp
pushf
mov
in
xchg
xchg
pop
mov
mov
inc
lret
popf
orl
lds
movsl
stos
mov
mov
sub
adc
loope
xlat
pop
dec
sbb
inc
incb
sub
xor
or
push
sub
cltd
mov
pop
into
adc
inc
pop
dec
cs
mov
pextrw
sub
aas
ds
dec
xchg
jnp
sbb
push
test
mov
popa
cltd
nop
inc
notl
cs
ljmp
xchg
push
ficoml
sbb
dec
out
fdivl
rcl
aas
dec
adc
ja
sub
sub
push
mov
inc
fisttpll
std
mov
and
jns
subl
xor
mov
inc
leave
inc
jns
adc
jg
arpl
call
pop
add
in
xchg
pop
add
pop
dec
repz
scas
cmpsl
adc
mov
and
lret
mov
dec
mov
sub
push
adc
mov
and
imul
inc
pusha
or
in
sahf
fisttps
and
cmpsb
and
jp
mov
add
mov
iret
rorb
enter
in
fimull
arpl
movsb
sbb
adc
aas
outsb
cmp
add
icebp
dec
ss
inc
fcoml
std
jnp
and
popa
outsb
jmp
aas
adc
push
ja
jmp
dec
mov
push
inc
in
clc
lods
sbb
xchg
mov
lea
loope
loop
fbstp
sarl
cmpsb
jb
adc
loop
lea
out
inc
sbbb
lret
mov
and
sub
adc
dec
mov
push
mov
lret
pusha
jnp
inc
jbe
add
and
jecxz
mov
xchg
mov
adc
dec
rcrb
adc
sub
ljmp
mov
loop
sub
cmc
jge
add
xor
sub
cltd
add
or
mov
cmpsb
roll
punpcklwd
int
popa
loop
jno
ljmp
mov
fidivrl
ret
fcmove
ss
adc
frstor
mov
sub
mov
icebp
cmp
mov
or
cmp
ljmp
std
or
pop
sbb
or
sub
lods
js
pop
xchg
mov
xchg
inc
dec
fst
fsubl
and
mov
stos
push
out
imul
xor
test
pop
fidivl
call
ljmp
sbb
or
out
mov
test
mulps
pop
loop
mov
repnz
sub
inc
push
mov
out
imul
loope
lock
iret
mov
cltd
inc
lret
cmp
aaa
sbb
pop
jge
add
xor
negb
mov
ss
sbb
and
imul
push
in
pusha
aas
pop
pop
gs
lret
ljmp
das
push
in
inc
popf
std
popf
xchg
push
in
aad
sahf
lds
into
sbb
add
cltd
scas
scas
xor
popa
sbb
or
jmp
cwtl
push
mov
inc
das
push
mov
lods
inc
add
cmp
loope
arpl
sti
gs
fsub
inc
xor
aas
pop
mov
jmp
cmp
in
mov
aas
jmp
lea
cmp
sub
push
xchg
sbb
bound
mov
pop
inc
push
push
ljmp
push
in
fldenv
in
adc
std
pop
gs
lret
push
sbb
jne
in
les
fstps
adc
es
inc
and
pop
jae
dec
push
add
xchg
gs
ljmp
sbb
xchg
mov
mov
addr16
push
inc
jae
mov
and
shlb
or
ds
call
imulb
daa
mov
pop
push
adc
jns
add
ss
sub
in
mov
lea
cmpl
jno
inc
sbb
sub
loopne
xchg
xor
lock
cmp
mov
mov
cmp
dec
inc
ljmp
mov
out
cmp
cmp
mov
jne
or
addl
lock
bound
loop
dec
dec
mov
add
ljmp
sbb
orb
xor
mull
xchg
pop
hlt
ja
jl
cli
dec
jno
push
addr16
movl
mov
push
xchg
xchg
pushf
imul
push
jnp
or
mov
jp
pop
mov
in
cmpsl
mov
cli
and
insl
pop
dec
push
adc
cmp
data16
cmp
movl
sbb
xor
popf
jmp
xorb
nop
and
cmp
or
and
adc
mov
inc
sbb
push
daa
sbb
push
xor
push
mov
cmc
sbb
bound
aas
adc
stos
sbb
and
fs
loop
in
push
stos
loope
cmpsb
jae
lea
mov
stos
sub
dec
or
int3
xchg
adc
pop
add
push
ss
movsl
cmp
insb
sub
ljmp
pop
ret
insb
pop
pop
adc
jbe
loope
jl
stc
mov
shrb
sahf
inc
add
pop
dec
bnd
push
pop
xchg
imul
adc
dec
jg
addr16
add
cmp
jge
cs
nop
xor
dec
loope
adc
rorb
shrb
xchg
loop
add
fiadds
mov
mov
cli
jp
mov
xchg
and
jp
dec
mov
enter
stos
insb
pusha
jne
dec
ljmp
repz
lods
cmp
clc
mov
sub
pop
cmp
mov
jb
sub
jg
or
sarb
ficoms
push
or
daa
aam
mov
ficoml
cmc
loopne
mov
roll
xchg
mov
pop
paddw
adc
mov
jae
jns
adc
mov
pop
sub
out
or
neg
cmp
out
cmp
pushf
or
mov
xor
loope
ret
push
ret
and
rcr
test
push
jns
push
or
popa
push
lds
inc
fidivl
push
add
xchg
outsl
loope
push
jmp
inc
popa
mov
mov
or
popf
pop
leave
sub
push
imul
sub
lods
lahf
daa
cs
push
insb
jae
mov
rol
loop
dec
shlb
xchg
call
sbb
scas
test
es
or
iret
scas
fisubrl
scas
mov
and
outsl
fsts
jle
jecxz
xchg
lea
ds
out
push
xchg
jl
dec
cmp
push
and
push
iret
push
test
loop
rorb
es
pop
mov
fildl
push
scas
sub
cli
mov
or
add
leave
pop
test
add
sbb
out
adc
xchg
gs
mov
mov
inc
inc
cli
lea
loop
ja
pop
mov
jge
mov
data16
or
sar
popa
add
xchg
loope
jbe
pop
cmp
std
ja
inc
push
xor
pop
pop
into
dec
shrl
or
jl
xor
jge
or
sbb
push
shl
out
into
nop
adc
cmp
in
in
xchg
lahf
or
mov
arpl
mov
insl
mulb
insb
fnstenv
dec
aaa
out
and
in
push
scas
ss
dec
mov
sbb
or
repnz
mov
xchg
xor
nop
xchg
test
mov
fbstp
push
pop
decl
cmp
jb
lock
outsl
shl
rorl
loop
mov
in
pushw
les
pop
cmpsl
repnz
daa
mov
ret
sub
mov
rcrb
clc
dec
leave
das
adcb
scas
out
sbb
adc
pop
or
data16
imul
dec
adc
add
jmp
xor
sbb
sbb
in
cmp
jmp
arpl
addr16
hlt
mov
filds
inc
lcall
sbb
nop
fs
leave
or
enter
ret
pop
add
movsb
pusha
xor
cli
repnz
inc
cld
cmp
jmp
lret
add
insl
shl
rorb
push
cmp
and
xor
filds
or
repz
fdivrl
and
das
pushl
icebp
xchg
jno
fidivrl
push
je
inc
and
outsb
push
mov
fistps
clc
dec
lock
ds
in
insb
insb
sub
mov
xchg
test
out
aaa
arpl
nop
xor
loope
push
arpl
inc
aam
call
lods
and
lods
mov
and
inc
and
cltd
mov
inc
es
mov
je
mov
cwtl
sub
xor
mov
and
jmp
fwait
mov
int
push
add
mov
and
jnp
jp
adc
pop
cmp
incb
jg
fnstcw
mov
imul
shl
and
pop
sbb
pop
subl
and
das
push
cmp
sub
xor
ret
inc
add
or
lea
loop
in
es
arpl
call
push
add
push
inc
dec
fnstsw
push
inc
xchg
cli
and
adc
int3
jl
fnstenv
ljmp
inc
orb
scas
and
xchg
cltd
pop
or
daa
idivb
ds
repnz
icebp
xchg
divb
xor
cli
mov
ja
mov
lcall
add
mov
add
popf
fsubl
mov
repnz
push
inc
mov
daa
sbb
cs
jmp
out
jl
inc
pop
ret
push
adc
test
xor
xchg
ret
push
ret
test
jg
push
call
inc
in
popf
mov
mov
push
pop
fcmovb
repnz
ss
ret
jns
mov
loope
xchg
hlt
loop
loop
inc
cs
test
gs
add
inc
mov
fwait
subl
outsl
add
mov
cmovne
lret
fadds
dec
add
and
imul
pop
pop
cmpsb
pop
lods
push
xchg
loop
aas
mov
cltd
push
mov
leave
fs
push
mov
mov
andb
inc
inc
pop
mov
mov
js
or
and
sub
sbbl
xor
mov
fs
ds
stos
fcompl
sub
jge
xor
push
sbb
in
pop
xchg
loope
pcmpgtd
push
mov
inc
ret
fisubrl
jge
mov
das
fidivs
mov
nop
mov
xchg
xchg
lret
xchg
jmp
mov
loopne
scas
sbb
popa
adc
mov
mov
cmp
roll
adc
or
test
insb
sti
sub
add
shll
ljmp
adc
sahf
pushf
std
les
xchg
mov
xor
and
xchg
and
pop
int
lock
push
push
ss
int3
cmp
sbb
mov
sbb
lock
push
cmp
clc
or
sbb
lods
movsl
inc
inc
scas
sbb
cmp
adc
cmc
fs
cmp
pop
sub
inc
mov
pop
adc
pop
xchg
cmp
scas
cli
fistpl
into
ja
and
pop
addr16
mov
jnp
rorl
out
add
cwtl
aad
mov
adc
push
shl
xor
or
xchg
addr16
fdivrl
shrb
jne
pop
repnz
jns
sub
pushw
xlat
push
sub
loope
push
sbb
lret
cmpl
aas
lea
xchg
icebp
mov
btr
dec
bound
inc
fcmovu
bndstx
fsubrp
sub
arpl
jle
fnstcw
xor
mov
call
and
inc
scas
mov
jnp
int3
sahf
inc
jnp
into
and
je
and
cmp
into
dec
adc
fcoml
mov
jb
mov
jb
pushf
adc
aam
imul
rorb
mov
mov
into
jmp
mov
mov
sbb
jb
hlt
in
mov
sub
mov
push
and
imul
mov
mov
loopne
sub
lods
scas
xchg
and
mov
imul
sahf
jo
stc
mov
and
cmp
jl
fisttps
das
and
sahf
mov
int3
repnz
fndisi(8087
lods
mulb
add
daa
jns
pop
pop
cltd
xchg
push
negb
cmpsb
dec
lret
test
xor
in
repnz
shrb
ss
jge
and
push
jb
out
dec
imul
jg
dec
add
sbbl
loopne
repnz
mov
mov
xchg
inc
add
or
pop
push
or
push
std
sub
jae
sbb
out
ret
aad
rclb
ret
pop
lods
aas
and
jle
in
scas
mov
int
dec
add
pop
sahf
push
or
aad
inc
outsl
mov
mov
jne
adc
jo
xchg
cs
arpl
lcall
rorb
ss
add
and
pop
fiaddl
out
add
rcr
xchg
add
movsl
repnz
test
xor
inc
fildl
outsb
lcallw
rorl
test
bound
push
push
negl
inc
out
inc
fldl
scas
roll
stos
xor
or
mov
cmp
dec
repz
pop
dec
ficomps
sub
inc
orl
stos
and
xchg
lret
test
inc
insl
inc
cmp
insb
out
popf
lds
nop
dec
and
repnz
out
pusha
in
scas
mov
aam
add
in
dec
jl
and
mov
inc
add
pop
push
sahf
sbb
repz
outsl
or
mov
or
daa
int3
xchg
sbb
lcall
dec
movsl
pop
arpl
add
sub
cwtl
mov
scas
push
pop
into
insl
in
or
jp
pushf
rcrb
xchg
and
dec
cmp
mov
out
sub
xor
or
inc
mov
push
mov
mov
push
pop
pop
pop
dec
cltd
or
cmp
sub
stc
add
orl
femms
aas
in
jnp
out
dec
loop
push
fmuls
cmpsb
mov
lods
aas
das
orb
in
lods
and
repnz
mov
aaa
call
into
test
ret
pop
and
add
mov
daa
jge
sahf
lock
cmpsb
popa
addl
shrb
push
mov
addb
adc
or
mov
fmull
cmpsl
mov
jl
outsb
sti
fisttpll
aam
adc
mov
pop
call
lods
jne
lcall
pop
cmc
loope
jmp
pushl
loope
lock
jp
test
shr
xchg
adc
cld
rorl
add
in
cmp
inc
repz
dec
adc
sub
sub
cs
mov
xchg
push
mov
shll
cwtl
cwtl
or
mov
xor
pop
lret
lock
mov
lret
dec
mov
add
xchg
ficomps
fisttpll
sub
lock
lods
or
sbb
enter
ret
inc
and
test
push
in
push
push
sti
enter
mov
and
popf
xor
mov
inc
in
lcall
shlb
or
push
xor
mov
sahf
mov
add
aam
rolb
repnz
lahf
or
repz
fcmove
fs
mov
fst
xchg
mov
and
aam
cmp
jo
xchg
nop
mov
xor
mov
stos
xor
jno
rol
movsb
and
xchg
push
out
dec
push
ss
fs
mov
insb
stos
mov
je
in
aas
aas
sbbl
decl
inc
mov
in
loop
xchg
clc
mov
nop
jb
mov
rcl
test
push
xchg
sbbl
hlt
rorl
add
xchg
in
xchg
xor
mov
push
add
xchg
push
data16
pop
pop
in
jne
xchg
shrb
jo
aad
movsl
jle
push
add
sbb
rcll
pop
test
aam
or
arpl
or
pop
adc
testl
pop
xchg
stos
xor
stc
into
fmuls
jmp
mov
inc
cmp
scas
add
loop
mov
xor
xchg
sahf
icebp
jp
dec
flds
pop
out
push
xchg
in
into
cwtl
dec
inc
into
or
bound
mov
pusha
movsl
pop
scas
es
xlat
mov
sbb
in
fcoms
pop
push
lods
mov
mov
popf
dec
push
out
ficoms
pop
les
push
mov
dec
cmp
add
adc
cltd
xchg
sub
or
shll
mov
in
cmp
inc
pushf
sarb
icebp
sbb
cld
push
push
test
sti
out
std
inc
popf
fs
inc
lret
mov
addr16
jg
xor
repz
rol
aas
pop
mov
pop
mov
push
bound
and
jne
andb
aam
xor
dec
jmp
add
sub
xchg
test
lahf
cli
xchg
sub
jne
scas
in
push
out
jge
pop
and
cmp
xchg
scas
insl
mov
imul
cltd
xchg
sub
stos
or
cmp
pop
mov
jne
dec
xchg
add
mov
cmpsb
inc
sbb
pop
add
cmpsb
mov
popl
call
cmp
outsl
sbb
add
outsb
cmp
notl
dec
out
pop
xchg
add
push
jmp
es
out
filds
push
es
test
inc
jg,pt
call
sbb
ret
addr16
fists
add
fstl
mov
add
push
test
test
hlt
pop
inc
mov
pop
in
les
fiadds
in
popa
divl
lcall
cmpl
mov
mov
fcomip
add
jmp
cmp
loopne
repz
imul
pop
push
mulb
and
js
pop
add
pop
ds
cmp
jecxz
icebp
xor
mov
mov
push
aas
mov
sbb
adc
cli
sbb
mov
cld
push
xchg
ret
sub
aas
push
or
aam
inc
or
lcall
inc
lcall
xor
add
jb,pt
pop
cli
into
mov
pop
mov
stos
std
sub
mov
add
lea
iret
fwait
push
mov
jle
dec
mov
sub
pop
pop
fldcw
cmpsb
xchg
pusha
outsb
pop
out
push
push
sub
in
mov
test
mov
dec
jg
pop
insl
pop
push
ja
cmp
push
sub
cmp
xchg
and
fdivp
fcomps
fdivl
movsb
rcrb
call
dec
xor
fidivl
xchg
scas
cmp
movsl
inc
jl
in
pop
mov
xor
push
fldt
das
mov
sub
add
shrl
cmp
fsubrs
or
xor
inc
inc
out
mov
dec
or
or
push
loope
insb
pop
pop
pop
xor
add
xchg
xor
sub
mov
dec
xlat
or
imul
add
js
push
mov
sbb
sbb
rcrl
test
subl
mov
cltd
mov
mov
mov
mov
ficoml
sbb
cs
mov
icebp
xchg
ljmp
fs
out
push
cld
xchg
or
nop
ret
cmp
into
daa
loop
in
out
loope
shll
in
jp
aam
cmp
cmp
insb
out
jg
ss
imul
rolb
mov
iret
outsl
push
insb
ret
add
mov
cmc
cmp
mov
pop
inc
pop
mov
xchg
ret
push
add
mov
nop
mov
adc
push
jmp
push
or
cmp
cld
lret
push
aaa
dec
out
hlt
ftst
sahf
mov
cmpsl
lds
test
inc
sbb
sub
push
or
jo
sbb
popf
ret
movsl
pop
sbb
adc
mov
jb
std
ret
lods
fnstenv
sub
dec
push
mov
add
inc
fists
cmc
cmp
in
or
pop
ljmp
out
mov
das
repnz
mov
hlt
sarl
popa
and
sub
dec
aaa
jmp
xchg
ljmp
adc
daa
cmp
dec
jns
add
pop
sbb
fimuls
mov
sub
data16
repz
mov
or
loopne
dec
aas
jno
sbb
jb
leave
sbbb
sub
addr16
cmp
repz
jno
xchg
mov
data16
imull
sub
push
dec
add
dec
test
addr16
sub
and
iret
pushf
daa
pop
jl
test
rolb
fnstcw
push
inc
ss
shlb
int3
cmc
inc
mov
jp
fs
inc
mov
or
push
outsl
jb
mulb
addr16
mov
mov
les
sbb
cmpsl
dec
push
aaa
jge
ds
inc
sbbl
insl
icebp
add
jmpw
bound
out
sub
or
mov
inc
clc
stos
push
adc
cld
cmp
cmp
pop
mov
jl
fsubrs
int
ror
xor
dec
ror
mov
mov
inc
int3
test
xchg
loop
mov
mov
jge
dec
fwait
call
pop
mov
pop
xchg
call
push
int3
ds
cmp
leave
cmp
leave
fisttpll
pop
push
inc
shll
daa
cltd
and
cmp
sub
dec
dec
stc
mov
out
sbb
push
xchg
cmp
mov
ficoms
push
pop
sbb
out
mov
imul
out
inc
push
push
mov
push
push
inc
mov
xor
nop
and
push
and
mov
mov
mov
inc
dec
data16
fcomp
test
out
add
dec
push
mov
es
lahf
rcrl
adc
dec
mov
sahf
jns
inc
leave
push
add
das
cli
jnp
add
cmc
lods
out
in
or
dec
aas
dec
icebp
or
jmp
iret
mov
ss
cltd
jnp
outsb
sti
lahf
test
outsb
xor
popf
adc
fldcw
lret
xor
loope
repnz
std
dec
nop
mov
clc
mov
sbb
mov
jb
mov
lods
imul
bound
adc
ds
pop
jne
push
lods
cmp
pop
gs
and
cmpsl
adc
loope
mov
jbe
lret
daa
inc
jo
dec
push
jmp
push
mov
dec
fs
jne
aaa
xchg
lds
das
lcall
out
sub
cli
aam
cmp
adc
jb
or
aaa
in
int
outsb
sbb
jmp
push
adc
out
inc
jns
adc
and
loop
dec
adc
push
adc
pop
add
inc
cmc
pop
inc
xor
stc
mov
mov
mov
idivl
and
xchg
xor
push
cmp
lds
jns
jge
fadd
out
xor
ss
in
shrl
add
daa
es
xchg
insl
imul
xchg
jp
inc
jb
icebp
dec
mov
mov
adc
mov
mov
pop
mov
clc
sbb
out
adc
and
ja
mov
jnp
or
cmp
shll
aaa
in
xchg
cmpsl
fs
push
push
dec
mov
out
adc
dec
xchg
pop
mov
xor
repz
xchg
shll
adc
lds
push
call
pop
inc
xchg
jmp
shr
ret
jno
sub
inc
mul
mov
mov
loope
bound
fcomi
popf
cmp
lahf
jb
faddp
xchg
shlb
inc
mov
xor
mov
mov
test
es
mov
aaa
sub
mov
inc
leave
dec
or
out
sbb
pop
ret
fldlg2
dec
add
shrb
inc
dec
add
stos
cltd
cmc
std
sbb
cmc
jmp
shl
sub
lods
mov
cld
ljmp
add
repnz
add
add
add
aaa
ss
loop
fisubrs
jne
and
push
fistpl
inc
xchg
cmp
jmp
dec
int
movsl
das
pop
xor
adc
xor
in
mov
sahf
lret
cs
jo
mov
data16
aam
sub
outsl
adc
sub
pusha
pop
xchg
push
mov
cltd
aaa
in
inc
sarl
lret
ss
jae
clc
sub
add
adc
fwait
daa
pop
pushf
pop
les
mov
cld
out
jno
fstpt
and
leave
xor
cmpsb
mov
fnstsw
add
iret
int
sti
mov
and
sbb
je
iret
les
mov
roll
lcall
jp
sbb
mov
aad
jae
push
sbb
addl
test
push
setbe
ret
xchg
add
pop
mov
jle
cmp
lcall
xchg
cli
add
es
insb
incb
jg
inc
leave
mov
loope
fisubs
jo
in
add
jns
inc
dec
scas
out
mov
lods
mov
in
test
jmp
jp
mov
iret
jno
loope
and
inc
and
popa
mov
and
rorl
xor
xchg
rclb
lcall
or
mov
repz
fimuls
adcb
jnp
jo
cs
mov
test
call
xchg
imul
mov
arpl
push
cmpsb
cmc
addr16
xchg
subl
das
stc
xchg
sbb
xchg
adc
cs
xlat
xor
js
call
es
and
in
aad
inc
mov
mov
enter
subb
jle
test
adc
enter
test
and
andb
cmpb
push
loopne
addb
cmp
std
pushf
or
push
pop
cld
aaa
js
lahf
lds
js
pop
xchg
je
fstps
xor
push
test
out
inc
xor
sub
es
scas
adc
jnp
fs
test
dec
test
lods
outsb
div
push
xchg
inc
test
jb
test
scas
xor
pop
push
jmp
add
jl
outsl
bound
repz
xlat
leave
xor
and
pop
out
fsts
or
movsb
das
lret
lods
sub
sti
movsb
mov
cs
cli
cmp
arpl
adc
mov
jp
pusha
jbe
idivl
inc
popa
cmp
call
xorl
cwtl
dec
mov
mov
fiaddl
mov
test
call
push
mov
aad
popa
sti
pop
pop
mov
out
sub
add
xor
inc
push
pop
in
ret
scas
ja
std
and
mov
push
stc
loopne
mov
pushf
or
out
outsl
cmp
mov
out
xlat
sbb
adcb
cld
rorb
loopne
jmp
push
pop
inc
psubsb
adc
iret
fidivl
adc
imul
mov
pop
sbb
add
jo
outsl
lods
sbb
inc
or
cmpsl
in
sub
aam
push
jmp
cmp
fdivrl
scas
jbe
mov
jne
out
pop
cltd
orl
mov
mov
cmc
stc
jae
or
sub
inc
repnz
dec
and
out
sahf
inc
jmp
xchg
jns
push
sarb
sbb
push
rolb
das
fisttpl
inc
adc
mov
mov
jmp
and
dec
sub
lcall
lea
inc
add
push
xchg
fcomps
push
sub
dec
aas
fnsave
push
sbb
inc
cmp
iret
xchg
scas
jecxz
sub
mov
mov
icebp
sar
jbe
rcrb
inc
mov
aaa
dec
icebp
scas
xchg
dec
xor
push
stos
adc
xchg
loope
sbb
jp
lret
iret
in
jno
in
mov
test
push
mov
or
pop
add
and
adc
cmp
jl
call
nop
adc
sub
icebp
imul
mov
mov
mov
adc
repz
push
pop
mov
mov
and
mov
outsl
xchg
pop
push
jg
cli
adc
jl
push
pushl
add
sub
sub
jbe
jle
fstp
cmp
and
adc
in
sub
loop
lahf
test
xchg
mov
lds
arpl
xchg
int
sbb
inc
pop
push
push
push
sub
cld
inc
jae
mov
popa
sub
ljmp
insl
dec
inc
lret
out
adc
cmp
mov
lret
push
ret
mov
push
inc
add
and
lods
dec
add
mov
jl
ja
mov
pop
sub
es
inc
dec
addr16
cltd
arpl
add
mov
cmpsb
push
inc
mov
mov
dec
mov
mov
cltd
inc
lahf
repnz
lahf
or
std
aas
mov
fmuls
dec
sbb
mov
rcll
nop
add
pop
sbb
in
test
inc
cwtl
lods
sbb
pop
mov
push
pop
pop
jno
arpl
jnp
xor
ljmp
add
and
fisttpll
aad
in
or
inc
fcmovbe
add
testb
cwtl
mov
mov
xor
xchg
ljmp
jecxz
inc
pop
faddl
test
or
ss
mov
pop
mov
repz
sub
jae
pusha
es
pop
cmpsb
jmp
push
roll
sbb
xor
or
push
pop
fs
cmpsb
or
shll
and
mov
lret
out
orb
outsl
repz
imul
ret
lods
inc
fbld
push
cli
into
fwait
jno
mov
mov
imul
sbb
mov
cli
mov
jle
mov
jno
pop
out
mov
jp
adc
mov
mov
jmp
mov
or
and
stos
pop
into
and
mov
daa
mov
xor
sub
int3
movsb
dec
movsl
adc
mov
mov
and
fucomi
xor
movsl
js
int
and
sbb
xor
xchg
daa
jb
push
or
mov
inc
stc
arpl
add
and
mov
aaa
inc
jecxz
xchg
jo
dec
and
mov
push
stc
pop
xchg
arpl
fsubrp
and
sbb
outsb
cmc
and
insb
daa
pop
cmpsl
add
sahf
mov
popf
loop
mov
popf
imul
shlb
cmp
pop
inc
ss
loope
and
push
push
or
out
fiaddl
sub
sub
lods
and
pusha
mov
xor
adcb
sub
mov
jecxz
pop
dec
fnstenv
push
cmpsl
pop
xchg
in
imul
adc
xchg
mov
ret
sub
loope
idiv
imul
dec
cmp
cmpsb
loopne
dec
xlat
pop
mov
pushf
mov
mov
pop
pop
push
xor
daa
repnz
and
loop
xchg
pop
push
mov
adc
and
repz
xor
mov
test
mov
pop
push
cs
add
sub
aaa
cmp
jb
xor
leave
sahf
adc
js
sub
xchg
out
cmp
mov
ret
cmp
aas
adcb
mov
ffreep
stos
sub
push
lods
adc
pop
mov
clc
loopne
inc
sbb
nop
dec
insl
dec
pushf
hlt
or
fisubl
aam
pop
std
mov
es
ljmp
test
mov
ror
int
adc
jo
pmullw
dec
test
add
pop
pop
add
cmc
movsl
mov
mov
sbb
andl
std
jle
shrb
cmpsl
push
inc
jg
pop
cmp
out
lods
enter
js
xor
jno
pop
pop
sahf
jle
push
lahf
xor
and
stc
addl
fidivrl
aaa
cmp
dec
cmp
ret
int3
xor
inc
add
cmp
pusha
push
outsl
push
push
or
daa
cs
loop
mov
mov
pop
mov
mov
cmp
pop
lods
mov
repz
repnz
adc
jecxz
ss
or
push
xchg
pop
cmpsb
sub
inc
cs
jmp
clc
int
leave
dec
mov
adc
dec
dec
push
mov
push
push
cltd
pop
cs
pop
enter
jb
mov
pop
popa
cmp
push
sbb
insl
sub
aaa
jae
or
enter
dec
push
loope
adc
dec
out
mov
xchg
arpl
jp
cmpsl
jecxz
mov
rolb
inc
jo
sub
std
dec
das
daa
ss
es
xchg
fcompl
sub
popf
daa
jmp
ficomps
xchg
cmp
push
cld
sbb
pop
mov
lret
sub
hlt
stos
lods
cli
fidivrs
lret
fbld
sbb
or
les
cltd
scas
xor
mov
xlat
pop
popa
gs
mov
jge,pt
xorl
sarl
inc
adc
push
sub
pusha
scas
add
push
jecxz
adc
andl
gs
out
pop
jae
dec
sub
push
and
jnp
pop
push
mov
outsb
stos
dec
ds
push
inc
xchg
test
mov
scas
push
lret
inc
xchg
dec
cltd
repz
adcl
mov
stos
imul
push
js
mov
jnp
sbb
and
sbb
push
push
addr16
and
enter
mov
and
xchg
or
jne
enter
push
pop
insl
aas
out
push
pusha
cmp
ljmp
insl
mov
push
daa
sbb
test
cmp
into
push
lock
xchg
push
shll
in
gs
cltd
cltd
lea
cli
add
xchg
ret
stos
aad
mulb
dec
sbb
mov
rcrl
xchg
mov
aas
xchg
push
popf
ror
mov
enter
jmp
hlt
add
aaa
mov
ja
movsb
jae
imul
xchg
xchg
es
push
mov
out
jne
and
addr16
push
cli
lahf
mov
adc
scas
lods
mov
dec
sbb
out
sub
lods
mov
enter
jecxz
cmp
in
mov
ret
and
cmp
ds
dec
push
cmpsl
roll
icebp
orl
jge
repnz
cs
xchg
and
mov
stos
jbe
jge
notb
test
mov
xlat
lock
shrl
jmp
insl
xor
adc
jo
sbb
xor
cmc
scas
dec
or
lret
mov
mov
and
cmp
xchg
fwait
inc
mov
jl
or
dec
add
xchg
add
out
pop
sub
dec
xor
pop
fistps
xchg
outsb
sbb
mov
and
dec
sahf
repnz
mov
jmp
orb
add
out
test
mov
sahf
pop
mov
push
or
or
test
push
fldt
xchg
stos
jne
pop
dec
shll
pop
sbbb
enter
mov
cltd
into
pusha
jle
aam
xlat
fdivr
iret
loope
sbb
ds
mov
sbb
shll
xor
xchg
cmp
repnz
imul
lahf
sahf
jae
or
and
mov
dec
lds
loop
or
cmpsl
cmp
movsl
enter
jb
loope
pop
push
sub
xchg
loop
enter
dec
push
push
lret
cltd
lea
pop
cmp
or
sbb
repnz
inc
ret
or
inc
ret
cmp
or
mov
fdivrs
push
sub
jge
jge
inc
mov
fstl
sahf
or
pop
jo
rorb
sbb
leave
xchg
in
je
mov
jbe
dec
pop
lret
pop
arpl
cmc
imul
outsl
stc
sub
add
sub
lret
out
pop
sub
bound
fnsave
scas
mov
pushf
add
pop
popa
andl
jecxz
stc
mov
jl
adc
mov
inc
sub
movsb
shrl
ret
jmp
mov
inc
es
push
in
jg
or
out
xchg
fiadds
sub
cwtl
aaa
push
xor
out
fimuls
and
mov
push
add
andb
ljmp
fisttpl
cmp
mov
stos
out
pop
add
ret
cmpsl
and
push
rcrb
jge
sub
sbb
xor
inc
jbe
xchg
out
inc
cmpsb
pushw
cmp
mov
push
stos
and
in
fwait
sahf
sub
or
lcall
jns
lods
dec
mov
cmp
scas
mov
ja
sub
push
lret
inc
mov
inc
jns
xchg
mov
add
insl
mov
push
insb
ljmp
stc
jno,pt
xchg
push
inc
sbbl
or
cld
add
pop
mov
mov
mov
mov
xor
add
mov
mov
and
and
clc
inc
in
push
inc
or
inc
and
mov
pminsw
or
inc
cwtl
cli
iret
add
mov
push
std
inc
adc
in
in
xor
loopne
inc
arpl
xchg
popa
jecxz
mov
push
inc
cmpsl
or
push
jmp
mov
dec
out
in
fists
xchg
icebp
add
aaa
lods
jbe
xchg
fnstsw
lea
cmp
fnsave
mov
icebp
pop
or
roll
ret
fisttps
aas
cld
shl
jmp
shrl
lods
push
cltd
fmull
jno
cmc
rclb
mov
sub
adc
mov
rorl
daa
aad
inc
jbe
add
add
fiaddl
insl
push
xchg
subb
adc
gs
jmp
push
sbb
cmp
loop
adc
cmp
and
pop
mov
xor
stos
ficompl
push
cmp
add
xor
push
add
aad
mulb
and
push
icebp
mov
or
lock
xor
mov
sahf
jae
jb
xor
inc
jmp
enter
mov
mov
dec
mov
imul
pop
push
out
mov
sbb
outsl
fs
sub
lahf
ficoms
gs
iret
add
mov
dec
mov
int
inc
mov
xor
cld
mov
jns
test
lahf
cmp
dec
jno
loop
outsb
mov
push
scas
fldl
in
arpl
sahf
js
add
loope
cmp
xchg
and
dec
mov
aam
sbb
pop
sahf
mov
and
push
ret
pop
loopne
jo
imul
int
aas
ret
xor
mov
popa
push
xor
ret
and
lods
ljmp
aad
xor
pop
fucomi
xlat
dec
sbb
ss
aam
in
add
mov
xor
lods
cwtl
out
pop
leave
push
or
int
push
into
xchg
fwait
mov
jno
movsl
mov
iret
fldt
xchg
cmp
addr16
jne
scas
orl
sti
push
mov
mov
fxch
scas
jno
popa
inc
std
push
cmp
and
shr
xchg
xor
out
inc
xchg
es
mov
dec
hlt
sub
arpl
out
imul
out
outsl
push
bound
push
gs
out
pusha
sub
pop
xor
mov
fisubs
sbb
cmp
jne
stos
mov
je
mov
mov
insb
add
mov
cltd
pushf
roll
and
in
dec
pop
xor
cld
sbb
cltd
push
jecxz
xchg
xor
xchg
xchg
call
cmp
sub
pop
sbb
or
push
into
bound
pop
mov
stc
sbb
pop
push
or
ss
push
dec
leave
shrl
sti
xchg
popf
ja
fisubrs
cs
out
andl
sub
push
sbbl
push
or
and
push
faddp
fildll
mov
aad
addr16
push
and
add
les
xor
sbb
inc
cmpsb
xor
mov
jbe
adc
ds
mov
std
jns
push
mov
and
xchg
adc
data16
in
mov
in
cmp
outsb
loop
mov
jecxz
add
push
xor
gs
aam
fwait
pushf
mov
xchg
mov
or
add
pop
loop
scas
das
out
mov
add
lcall
addr16
xchg
jnp
add
pop
add
out
out
xchg
in
inc
sarb
stc
xchg
adc
xchg
jmp
push
mov
ss
fildll
push
push
cmp
push
test
sbb
push
xchg
mov
stc
mov
loop
mov
sub
push
ret
fdivs
outsb
and
jae
subl
add
xchg
mov
leave
out
out
xchg
fistpll
xor
stc
mov
ds
fiadds
xor
jmp
inc
inc
adc
int3
push
sub
sub
stos
sbb
scas
sar
sbb
mov
or
addr16
dec
lods
mov
nop
pusha
cmp
sub
ffree
sbb
add
popf
jne
int
lods
pop
add
popf
stc
and
in
jo
xor
cmpsb
add
jnp
test
pusha
fidivrs
mov
and
repnz
inc
jmp
bound
movsb
fs
xchg
sbb
pop
mov
ds
movsl
cmpsl
lret
loope
xor
jmp
mov
pop
in
loopne
jl
pop
cli
out
xorl
inc
sub
sbb
outsl
sbb
add
pop
in
les
lds
cmpsl
or
ss
insl
nop
jg
loop
xlat
leave
popa
loop
and
push
aaa
repnz
aas
out
cltd
pusha
cmp
data16
xor
or
or
pop
sbb
lea
ss
cli
mov
xor
or
loopne
test
stos
call
mov
xchg
mov
repnz
or
mov
lcall
dec
sub
ljmp
cs
xor
mov
and
loop
cmp
push
cs
lods
xor
rol
loopne
inc
sbb
sahf
hlt
aas
test
fs
mov
or
movlpd
hlt
addb
int
into
stos
push
jge
mov
leave
lret
in
hlt
or
aad
add
inc
inc
sub
xchg
dec
in
divl
arpl
and
lods
in
pop
jmp
and
and
xor
dec
pop
les
cmp
and
jbe
jnp
mov
cli
cmp
lcall
cli
pop
dec
test
stos
arpl
dec
fbstp
ss
dec
mov
inc
or
loope
cmpsb
pop
mov
push
test
push
lcall
sub
adc
daa
in
lods
sbb
mov
imul
adc
sbb
xchg
fdivs
fldl
dec
cs
shrb
xlat
xchg
push
popa
push
into
jg
add
je
adc
cmp
jle
mov
and
xlat
push
repnz
mov
dec
jl
movsb
xor
adc
sbb
adc
adc
sbb
gs
mov
or
xor
push
int
shlb
cmp
shll
pop
aam
mov
jmp
sub
aad
ss
xor
jmp
inc
gs
les
xchg
aaa
pop
shll
jge
pusha
or
mov
push
push
push
test
cmpsl
out
es
fbld
sahf
cmc
cmpb
jb
test
sub
repz
mov
add
loop
xor
push
or
sub
repnz
leave
cmpsb
or
in
iret
shr
mov
jl
int
pop
popf
sbb
pop
mov
pop
push
xor
sahf
notl
push
iret
inc
mov
ljmp
mov
cmpsb
mov
sbb
or
sub
filds
add
div
jb
fstpt
pop
inc
jp
lcall
jns
cmp
cmpsb
pop
mov
add
push
jl
out
cmp
mov
push
outsb
dec
pop
and
stos
fistpl
dec
push
leave
mull
std
mov
sub
and
or
inc
dec
pop
xchg
adc
inc
inc
xchg
or
inc
fidivrl
or
scas
jp
pop
data16
push
cmpsb
rcl
push
lods
roll
roll
push
jmp
aas
sbb
jmp
adc
pop
pop
xchg
or
or
xchg
ja
mov
pop
div
jmp
out
push
sbb
mov
cli
adc
dec
dec
into
xor
orb
shlb
jb
adc
fcmovbe
sub
xlat
es
das
and
outsb
lock
bound
dec
sbb
lods
in
pop
pop
daa
pop
popa
jle
popa
scas
push
dec
inc
xor
mov
mov
js
out
mov
mov
push
stos
inc
adc
cld
and
cmc
add
aaa
dec
mov
cmp
jne
dec
pop
mov
cmp
sub
fs
add
sub
shrl
push
aaa
and
mov
jae
jmp
dec
push
mov
mov
pusha
and
or
cmp
push
sbb
sbb
xchg
dec
rorl
frstor
push
mov
pop
cli
xor
mov
mov
and
dec
call
sti
push
sbb
stos
lahf
clc
loope
push
jmp
enter
out
push
pop
mov
add
popa
daa
sub
pusha
rolb
movsb
mov
jge
xchg
xor
mov
xchg
jbe
mov
or
pop
lods
pop
lea
ljmp
mov
orb
mov
xchg
das
aam
gs
std
adc
add
xlat
ret
repz
or
sub
shlb
jmp
xchg
hlt
sub
ja
cmp
fistpll
ret
xchg
pop
mov
xchg
xchg
push
gs
shlb
fistpll
pop
js
jp
fisttpll
test
sti
sahf
aam
aas
addr16
int
adc
pop
pop
or
cmp
push
mov
mov
mov
sub
aam
sahf
add
shrb
inc
push
icebp
sbb
inc
in
mov
lahf
iret
or
rcr
stc
xor
in
pop
sbb
stc
or
test
dec
movsl
pop
jmp
std
add
jle
cmp
lcall
mov
mov
cli
mov
and
stc
dec
xchg
and
mov
icebp
mov
in
jns
and
call
mov
das
xchg
repz
adc
jmp
dec
pop
push
sub
pop
aad
inc
mov
cmp
js
out
dec
aas
dec
cli
clc
push
cli
mov
pop
push
fldt
push
ret
outsl
add
cli
inc
sub
stos
and
and
cmp
sbb
push
dec
cmp
add
jmp
mov
shll
inc
mov
sub
roll
and
cmp
or
fsubrl
dec
pop
fmull
and
mov
and
adc
dec
cmp
push
out
jge
ret
cmpsb
or
lods
add
xchg
jno
add
insl
inc
xchg
add
das
imul
test
mov
mov
fisubl
mov
push
rcr
fcoms
std
mov
cmc
xor
xor
sub
sahf
arpl
or
and
in
pop
repz
sbb
pop
in
cld
cmp
xchg
push
mov
and
cmp
addr16
jge
jno
adc
adc
push
and
mov
sub
fidivl
xchg
xchg
inc
in
sbb
add
cmpsb
ret
mov
fdivrl
dec
addr16
push
mov
pop
xor
lods
inc
shll
or
mov
or
std
lods
in
imul
in
iret
in
xor
inc
mov
mov
iret
adc
and
lret
jle
cmp
cs
sub
jmp
bound
sbb
jl
dec
lret
in
aam
call
dec
mov
daa
lock
push
jecxz
xchg
xchg
xor
lret
jecxz
xchg
inc
cmc
popa
sbb
mov
lahf
xor
int
mov
imul
movsb
mov
insl
xor
popf
mov
mov
popf
mov
rcrl
push
loope
push
sub
xchg
inc
pop
leave
mov
xor
and
sbb
ljmp
add
out
xor
into
insl
inc
jbe
mov
xor
stos
sti
loopne
aas
jo
push
and
jecxz
push
scas
loopne
mov
sti
xor
mov
rorl
or
push
fmuls
jp
jnp
mov
std
out
lods
pusha
adc
cs
dec
and
add
cmc
dec
xchg
jb
inc
adc
adc
iret
xor
mov
iret
xlat
fisubrs
xor
push
push
test
pusha
imul
add
rcll
out
push
std
fiadds
xchg
inc
jne
scas
xor
jae
pop
and
popa
bnd
cmpsl
xchg
mov
lcall
xchg
or
jne
mov
scas
push
ret
pop
add
xchg
test
testl
and
or
mov
sti
int
push
sub
lods
jle
test
jmp
jno
mov
xor
dec
xchg
loopne
xchg
pusha
push
adc
sbb
out
orl
pop
inc
xor
imul
insl
push
and
inc
cmp
fcomip
das
imul
sbb
pop
adc
divb
les
inc
incl
insb
add
dec
cmc
loop
adc
or
mov
in
xor
pop
push
pop
xor
mov
hlt
ljmp
cmp
dec
mov
add
xchg
jp
das
dec
lods
in
add
push
jb
test
das
xor
das
xchg
sub
push
nop
cmp
mov
addr16
stos
insl
add
ret
lock
mov
out
std
stc
mov
out
inc
lock
jg
shr
out
nop
test
dec
xchg
int3
mov
scas
popf
or
out
mov
ljmp
stos
or
mov
jb
push
mov
mov
xchg
ret
enter
pop
pop
mov
fwait
and
scas
das
test
andnps
loop
dec
aas
jmp
bound
and
inc
repnz
mulb
insl
clc
sub
std
je,pn
mov
cmp
outsl
mov
ret
mov
mov
rcll
insb
ret
stos
out
mov
jge
and
in
xorb
adcb
adc
stc
adc
js
mov
aad
lcall
lret
jge
packsswb
mov
hlt
sahf
xor
push
cmc
js
shlb
fdivrl
push
mov
fisttpl
sahf
dec
push
in
shll
out
dec
inc
adc
push
xor
mov
sar
xchg
outsb
cmp
sub
jae
ds
push
mov
shll
int
cltd
xchg
push
scas
arpl
int3
imul
adc
add
push
fsubs
shrl
push
lcall
push
sbb
add
aam
imulb
cmp
jle
add
fwait
sbb
arpl
mov
ret
jmp
xor
in
sub
mov
ret
loop
mov
lods
test
add
ret
xlat
push
shlb
in
addl
xor
bound
dec
sbb
lret
adc
and
pop
pusha
push
sarb
mov
sub
repz
cmp
inc
push
in
sbb
xchg
and
cmp
loopne
out
inc
popf
lahf
and
fstps
xlat
sub
fidivrl
sbb
out
push
pop
or
out
dec
jbe
in
mov
dec
arpl
mov
jno
cli
test
ret
xchg
cs
cmpsl
dec
inc
mov
xchg
dec
jle
shll
and
jbe
jl
jb
rolb
push
ja
inc
hlt
out
lock
sub
mov
jle
into
xor
out
xchg
jp
outsl
and
lock
mov
adc
push
icebp
bound
pop
mov
jno
popf
mov
pop
dec
lret
xchg
xchg
insb
mov
icebp
ror
pop
cs
mov
sbb
xor
loop
arpl
push
cmp
movsl
icebp
jmp
in
stos
cmpsl
loop
lea
or
cwtl
aas
and
aas
in
mov
cld
clc
and
or
push
cvtdq2ps
fyl2xp1
or
xor
ret
ret
jmp
lods
inc
cmp
in
xlat
loopne
xchg
jae
mov
add
pop
rclb
xchg
fs
jo
xlat
sub
jno
jo
mov
test
cmpsb
int
or
mov
sub
cmp
sahf
mov
mov
push
stos
dec
popfw
push
mov
mov
xor
dec
in
pusha
mov
cltd
cwtl
icebp
sub
movsb
lds
jo
clc
add
popa
jnp
jmp
dec
jl
pop
mov
jle,pn
es
test
pop
insl
arpl
mov
inc
push
andb
mov
jmp
adc
and
aam
shlb
xor
bound
gs
sub
sbb
sub
push
adc
jnp
clc
in
dec
movsb
mov
or
sub
testl
or
pop
xor
add
mov
ret
leave
movl
or
mov
push
arpl
inc
loopne
sub
adc
aaa
mov
pusha
sbb
adc
std
push
mov
cmc
out
in
cmp
adc
jmp
and
or
adc
xchg
add
xchg
shl
xor
and
cmp
sbb
xor
dec
clc
jbe
leave
loop
jg
pop
xchg
or
cli
jmp
adc
js
std
cld
push
mov
mov
xchg
aad
xor
out
xchg
push
ret
push
pop
mov
out
pop
jno
jecxz
adc
mov
cmp
add
test
push
das
fsubl
loope
cmp
and
subl
add
ss
sub
jmp
adc
inc
out
mov
das
adc
push
sub
adcb
stc
or
orb
pusha
push
loope
ret
sbb
mov
push
fwait
add
stos
fnstsw
pop
jg
add
sbb
pop
imul
pop
rorb
dec
fcomp
mov
mov
stos
jl
sbb
sub
lds
insl
jle
pop
push
xor
inc
jle
mov
mov
loopne
push
das
lahf
pusha
cmp
jne
fs
fcomps
jle
jg
push
adc
mov
rcr
inc
xchg
push
sub
push
xor
sbb
pop
cmp
mov
mov
mov
mov
rorb
sbb
and
jno
adcl
push
jge
and
xor
lods
lds
and
pop
push
mov
pop
sbb
push
or
pop
jae
ds
push
jmp
push
add
dec
sarb
out
lcall
push
orb
imul
dec
es
imul
pop
push
loop
pop
add
aam
jb
imul
and
xor
mov
sarb
and
or
ljmp
adc
push
repz
loop
and
jns
sarb
mulb
test
sbb
jae
ds
call
inc
xor
cld
test
negl
andl
clc
inc
sbb
test
lock
jp
je
stos
fucomip
imul
ret
into
loop
aas
cld
mov
jb
daa
pusha
sub
inc
inc
cmc
pop
dec
add
mov
nop
stos
outsb
cltd
fnstenv
sbb
xchg
leave
mov
aad
loope
std
dec
inc
cs
popf
cmp
test
arpl
fwait
test
lret
lds
push
sub
add
out
jmp
sub
jns
pop
pop
mov
ret
ja
out
xor
roll
fwait
movsl
inc
push
mov
arpl
jle
xchg
cmp
mov
pusha
cmc
cmp
sub
sbbb
push
sub
inc
test
add
lcall
arpl
pop
dec
jg
dec
sub
jae
jp
dec
mov
and
xchg
in
adc
push
sbb
fsubr
sbb
sub
ja
push
and
mov
pop
jl
sbb
incl
dec
or
fimuls
stc
inc
jb
fnstcw
test
push
mov
out
jo
clc
xor
add
sub
ss
dec
ljmp
and
mov
mov
xchg
sub
push
push
in
aas
cmp
or
insb
dec
push
aad
xchg
test
xor
cmp
out
int3
jl
or
dec
and
lods
imul
out
shlb
inc
subl
push
xor
dec
ss
push
test
imul
lods
pop
cmp
mov
stc
jmp
sub
or
sti
ret
mov
cld
loop
pop
idivb
scas
aad
es
je
pusha
push
shr
imul
dec
mov
xor
dec
and
stc
mov
or
dec
lea
mov
adcb
cmp
icebp
in
jmp
or
mov
jbe
aaa
or
xchg
xor
movsl
mov
std
inc
int3
add
into
pop
shrb
or
mov
addb
scas
add
scas
outsb
mov
xor
inc
sbb
pusha
sbb
mov
adc
jnp
or
cmp
inc
repnz
dec
add
inc
test
sbb
adc
cmpsb
xchg
movsl
aam
mov
lret
mov
icebp
cmpsb
mov
jmp
fucomp
mov
xor
pop
cmp
cs
sub
mov
pop
insl
push
inc
xchg
ljmp
hlt
jnp
adc
pop
les
stc
and
adc
imul
mov
outsb
or
xchg
push
lock
popf
sub
inc
dec
jg
fsubrs
cmp
movb
out
lds
shr
ret
and
sub
jno
fsubl
popa
or
shll
popa
pop
xchg
insb
inc
rclb
dec
and
sbb
ss
jp
adc
xlat
inc
inc
pop
icebp
mov
iret
sub
and
xor
push
lret
or
jno
mov
add
int
jmp
pop
out
or
and
mov
mov
cltd
xor
xchg
sbb
push
into
jno
inc
stc
push
mov
or
add
mov
xor
mov
mov
sbb
xor
jbe
rclb
cmp
inc
jmp
mov
mov
int
mov
mov
out
xchg
data16
fcmove
or
inc
js
ss
enter
mov
or
lahf
mov
loop
loope
cmp
add
les
sub
out
add
mov
pop
push
pop
lcall
data16
sub
sbb
mov
aam
lock
adc
xchg
cwtl
cmp
stos
adc
or
repz
xor
sbb
mov
add
ficoms
stos
sbb
dec
and
mov
scas
ret
aam
inc
jg,pt
cmpsb
push
scas
fistps
sbb
sbb
adc
xor
pusha
xchg
outsl
adc
std
lcall
inc
cs
pop
mulb
test
jo
sbb
xchg
stc
or
sub
cs
cmp
sub
jbe
cmp
test
bound
rorb
sbb
and
hlt
ror
jecxz
mov
les
adc
adc
add
cmp
fneni(8087
fldenv
add
adc
xchg
ret
adc
cwtl
test
inc
push
push
xchg
lret
aas
jb
ljmp
mov
cmp
fucomip
outsb
mov
sub
call
aas
mov
scas
or
lea
xlat
movsl
add
jg
jg
sahf
lahf
pop
push
adc
popf
mov
rol
insb
lret
rolb
sub
push
dec
adc
push
xchg
cmp
jno
outsl
popf
or
jp
mov
ljmp
cmp
push
sbb
cmp
inc
jle
jge
repnz
imul
pop
mov
mov
imul
and
stc
jecxz
iret
pop
popf
mov
repnz
inc
push
notb
lret
lret
jl
mov
bswap
mov
sbb
or
push
mov
loopne
mov
sbb
pusha
cmp
add
mov
loop
inc
inc
cmp
popf
add
lea
fstpl
jns
loop
sbb
sub
mov
inc
addr16
xchg
sbb
sbbl
mov
jb
test
in
adc
jno
inc
jae
loop
sbb
mov
cs
loop
sbb
out
mov
sbb
stos
les
xchg
rcrl
cmp
icebp
in
hlt
adc
les
repz
loop
cmp
xor
stos
pop
ret
sbb
adc
negl
and
mov
xchg
push
sub
or
in
fisttps
or
mov
xor
jecxz
sbb
mov
data16
adc
movsb
push
or
fiadds
std
jo
fimull
mov
adc
pop
popf
inc
lret
mov
sub
xchg
fst
mov
sahf
int3
in
jge
das
sbb
into
sub
add
clc
mov
cmp
sub
push
in
inc
sub
lret
xor
jle,pt
xchg
jno
hlt
xchg
cmpsb
dec
frstor
call
lcall
fsts
mov
mov
mov
sbb
fiaddl
es
jne
rcrb
pop
jmp
fwait
mov
das
clc
imul
mov
mov
sti
cmp
lea
es
inc
mov
cmp
push
cltd
adc
ret
ds
cmp
cmp
push
add
mov
out
mov
and
into
lock
cltd
sbb
cwtl
inc
adc
ljmp
test
xchg
sub
lea
ret
pop
xor
jns
add
pop
mov
loop
xor
notb
and
inc
cmp
pop
cmp
sbb
jmp
scas
imul
xchg
icebp
popf
or
xrelease
jmp
pop
jg
ret
dec
rolb
and
lret
sbb
outsb
adc
mov
mov
sti
testl
fsubr
dec
andl
testb
cltd
mov
push
addr16
filds
inc
and
adc
push
sti
das
fs
add
sti
sub
test
orl
dec
mov
or
jno
pop
add
aaa
jle
mov
les
jb
daa
xchg
inc
scas
dec
sbb
mov
jmp
add
das
and
pushf
insl
hlt
and
fldcw
out
cwtl
hlt
pop
ss
mov
in
aaa
or
pushf
ljmp
add
or
pop
cmpsb
lret
and
xor
loop
call
in
adc
mov
out
pop
sub
xor
sbb
or
cmp
sahf
aam
mov
sbb
add
add
xor
add
cmp
faddp
push
inc
push
add
leave
pop
or
dec
gs
movsl
cltd
inc
sti
cmp
jmp
sbb
add
stos
scas
sub
popa
shll
int3
in
data16
lea
mov
dec
mov
mov
jmp
js
mov
and
cmp
xchg
jp
pmaddwd
inc
hlt
dec
mov
add
mov
cld
dec
sbb
cmp
mov
mov
addl
lock
jo
add
mov
push
das
dec
lds
inc
xor
inc
fstl
lods
xchg
mov
or
mov
loope
lahf
or
and
sub
and
int
sbb
push
int3
mov
fcmovnbe
and
cwtl
cmp
pusha
lahf
push
jo
ljmp
imul
into
xchg
jne
loopne
add
ret
xchg
pop
fmull
hlt
shrb
loope
ds
xchg
pop
or
push
icebp
add
cs
pop
jno
mull
pusha
lcall
data16
push
mov
cmpsl
sub
insb
mov
mov
jb
scas
mov
adc
jmp
sbb
mov
and
mov
data16
popa
mov
pop
cli
pop
icebp
xchg
inc
xchg
mov
fidivrs
pop
mov
and
mov
sub
sbb
pop
pop
add
pop
out
ljmp
fsubs
xor
sbb
mov
xchg
adc
jl
rcll
sti
leave
add
lods
adc
out
das
int3
out
mov
push
rorb
cmp
sbb
int3
rcll
into
mov
out
jp
push
shr
jo
fcoms
push
xchg
lods
dec
fnsave
jmp
in
cmc
push
enter
mov
mov
arpl
outsb
inc
cltd
add
ja
xchg
jno
cltd
fs
pop
cltd
adc
mov
repnz
stc
leave
xchg
ljmp
sub
stos
sub
clc
adc
lret
dec
jmp
in
inc
xor
mov
xchg
jne
add
adc
testb
movsb
jbe
out
cmp
dec
inc
in
and
sbb
lea
rolb
iret
int3
xor
or
xchg
popf
mov
xor
fcmovnb
xor
dec
dec
nop
andl
call
cs
lds
aad
mov
pusha
mov
rcr
adc
push
aad
dec
out
std
push
push
and
cmp
or
push
out
pop
inc
sbb
ret
inc
push
push
or
lea
and
dec
inc
mov
fimuls
and
bound
mov
and
outsl
dec
ret
and
sub
daa
and
sbb
decl
mov
lret
xchg
daa
sub
mov
mov
dec
negb
push
jmp
pop
ljmp
js
add
stos
rcl
movsl
in
push
pop
sub
mov
cmc
scas
add
test
mov
shl
lret
scas
dec
adc
ja
sbb
int
nop
loop
mov
aam
je
inc
mov
pusha
push
repz
pop
adc
push
add
pusha
inc
adc
scas
push
jmp
mov
call
in
std
dec
mov
aam
mov
sbb
push
mov
mov
push
out
sub
fdivp
cmp
push
rclb
and
mov
negb
mov
cmp
ss
pop
les
mov
jns
jmp
shl
divl
std
hlt
cmc
lret
mov
mov
xchg
movsb
inc
cs
icebp
mov
jnp
out
push
jecxz
call
jne
repnz
into
int3
mov
adcl
stc
xchg
movb
loope
pop
lds
dec
mov
mov
lret
nop
inc
push
in
push
es
sbb
xorl
sbb
lock
call
push
cltd
lock
pop
mov
lcall
movsl
loop
mov
inc
and
clc
dec
push
xor
das
lea
mov
sub
call
fcmovnu
cmc
insb
add
sbb
and
push
push
ljmp
sub
pop
push
mov
gs
adc
sbb
daa
test
or
jecxz
push
xor
pop
fsubrl
arpl
imul
pop
mov
add
sub
jge
std
enter
les
lret
mov
add
aad
sbb
push
adc
add
and
push
dec
ror
cmp
fcomi
mov
out
roll
enter
pop
pop
sbbl
jmp
ja
lods
dec
iret
shll
pop
ret
sub
or
push
std
dec
inc
sub
dec
movsl
push
adc
aam
ljmp
fisubs
insl
mov
int3
xchg
orb
pop
lea
xchg
lahf
leave
mov
cmp
lret
movsb
in
mov
in
aam
jnp
xchg
or
lret
sbb
insb
push
iret
pusha
out
push
loopne
hlt
xchg
sarb
push
into
adc
add
das
xor
xlat
shrd
inc
out
dec
fsubp
bound
or
inc
inc
fidivrs
pop
add
and
inc
in
std
frstor
pop
shrb
and
int
sub
jbe
std
jp
scas
or
shll
jp
data16
dec
mov
and
mov
mov
mov
pop
ds
ljmp
shlb
bound
movsl
mov
push
jmp
int
pop
cwtl
dec
push
aad
gs
sub
cmp
int3
int3
inc
push
andl
sahf
xlat
aam
pop
cld
xchg
pop
xchg
pop
cwtl
enter
xlat
jb
rolb
js
out
das
call
xchg
fildll
sub
lea
not
pushf
push
xor
inc
jb
push
xchg
add
inc
xchg
imul
and
dec
out
pop
adc
pop
adc
ljmp
xor
push
sbb
sbbl
mov
mov
push
sub
pushf
rorl
in
pop
jp
pushl
add
fdecstp
xchg
sbb
jnp
fidivrl
lahf
js
arpl
fmuls
lods
pop
or
pop
or
pop
setle
test
fs
xchg
sbb
xchg
and
rcr
pop
or
sub
sub
add
and
pop
adc
inc
aad
sub
pop
sbb
out
pop
mov
mov
fwait
adc
mov
cmp
pop
std
xor
into
mov
icebp
sarb
inc
sub
xor
mov
dec
in
xorb
xor
xor
xor
fmuls
inc
out
push
daa
stc
mov
add
mov
adcl
dec
push
push
and
jae
jb
inc
push
sub
into
aam
mull
add
mov
ds
mov
pop
xor
and
jne
test
sbb
ret
fldcw
add
mov
mov
test
lds
out
and
lock
push
icebp
jbe
adc
aad
loop
mov
out
in
sub
inc
xor
jo
mov
and
jecxz
mov
js
repz
pop
fldenv
dec
lea
inc
incl
fs
sbb
mov
pop
or
in
mov
add
mov
fisubrs
lods
sub
shl
loope
mov
leave
push
clc
mov
bound
fisttpl
and
imull
call
fldt
mov
roll
jno
nop
ret
cmp
sub
ret
hlt
jp
ljmp
call
xor
mov
push
ljmp
inc
lds
aad
jno
scas
sbb
in
movsb
idivb
ds
fmuls
bound
mov
fildl
adc
pop
ds
fldt
cli
mov
movsl
faddl
clc
inc
sbb
jno
xor
rcrb
add
fdivrs
repz
inc
fisubs
cmc
dec
xor
cmc
bound
in
aam
or
pop
fiadds
mov
test
sarl
push
sub
xchg
repnz
push
imul
mov
mov
lods
jne
lret
mov
adc
popf
out
pop
jno
push
pop
hlt
mov
jae
dec
push
setne
dec
rcr
lea
out
into
aas
cwtl
xchg
jecxz
jae
xchg
loop,pn
mov
mov
jns
imul
mov
cli
push
jo
and
sets
xchg
xchg
add
out
pushl
dec
into
mov
aam
xchg
mov
lods
cmp
and
adc
mov
test
adc
or
frstpm(287
mov
mov
push
inc
adc
inc
push
and
scas
popf
dec
std
push
in
in
and
rorb
outsl
into
dec
testl
pop
and
test
movsl
jae
push
jnp
sub
mov
sti
ljmp
mov
pop
pop
into
and
sbb
add
or
rcll
and
call
and
ljmp
inc
adc
aas
or
mov
cmpsb
cmp
daa
into
nop
mov
jne
add
xor
in
add
ss
pop
add
xor
imul
jae
mov
push
pop
lea
jg
dec
ret
gs
cmp
aam
pop
imul
xchg
and
push
lret
cli
dec
mov
jns
out
pop
pop
ret
push
mov
loope
sbb
adc
mov
xor
push
dec
inc
mov
mov
jne
jae
mov
pushl
hlt
out
test
aad
cmp
jne
inc
movsb
aas
pop
std
pushf
data16
jns
cmp
or
mov
cmp
pop
push
pop
sbb
ljmp
cld
cmp
cmp
and
cmp
out
loope
pop
insl
xor
stos
jl
jo
and
jecxz
add
push
mov
sbb
mov
out
cmpsl
xor
inc
ret
scas
faddl
dec
out
jl
pushf
and
std
fstl
maskmovq
testl
lahf
out
addr16
mov
cmpsl
xchg
lahf
cmc
int
xchg
and
pop
test
js
push
lods
pop
dec
scas
jbe
sbb
mov
lods
pop
out
jmp
addr16
xchg
call
xchg
ljmp
rcrb
pusha
push
lcall
push
sbb
mov
xor
xor
lds
sub
jp
std
fs
mov
push
mov
inc
and
inc
dec
mov
addb
pop
dec
or
inc
loopne
dec
adc
dec
mov
push
in
mov
jmp
mov
push
daa
xchg
xchg
imul
ds
nop
data16
shll
sub
cmp
imul
lcall
push
adcb
add
in
aaa
add
xchg
insb
push
outsb
cmc
mov
sarb
adc
pushf
ljmp
inc
mov
inc
inc
hlt
dec
imul
jbe
int
cld
inc
and
jno
adc
jae
xchg
adc
pop
iret
dec
push
sub
movsb
or
out
lods
and
pop
inc
out
mov
sub
or
ffree
fdivl
sub
cmp
jnp
jge
cltd
sti
pop
outsl
pop
jl
ficomps
sarb
mov
adc
in
test
push
lret
cmp
adc
lcall
inc
and
jg
gs
fisttpl
mov
std
cs
scas
adc
std
hlt
push
xor
lock
xor
int
test
pushf
xchg
push
lret
lds
xchg
dec
lcall
iret
add
jmp
sub
sub
cmpsl
cltd
mov
das
cmpsl
hlt
das
in
inc
dec
das
mov
push
rcrl
jo
mov
or
inc
or
imul
lock
loop,pn
mov
xchg
inc
or
adc
out
mov
or
sub
mov
lret
add
pop
jae
jae
xchg
daa
push
loope
jge
pop
mov
decb
pop
fsts
repnz
ret
int3
mov
sbb
dec
dec
out
adc
addr16
cmpsb
add
hlt
jne
data16
jmp
push
jb
adc
ret
lret
jmp
add
scas
call
out
dec
dec
jp
xor
fistps
sbb
es
rcll
inc
sbb
nop
into
push
test
push
cmp
push
shll
xor
push
inc
daa
sbb
sub
xor
mov
decl
pushf
add
cltd
addr16
paddb
xchg
jo
adc
mov
jae
test
push
fcomip
and
adc
test
hlt
out
lods
push
push
jne
or
xchg
push
jo
sbb
xchg
sbb
xor
push
jae
stos
xor
mov
rcll
push
mov
orb
xchg
aad
cmc
mov
pop
push
das
xchg
sbbb
out
or
mov
mov
sbb
mov
adc
sub
mov
sbb
hlt
lock
jae
ret
lcall
jg
dec
cmp
xorb
jne
and
push
add
jo
lcall
jno
call
and
in
adc
inc
mov
xchg
and
je
cld
cmpsb
ljmp
cmp
adc
jle
rol
jo
adc
rcrl
cmp
mov
cmpl
movsb
cld
sub
adc
add
push
dec
adc
and
adc
cmp
clc
inc
adc
js
adc
imul
daa
das
fs
fisubrl
inc
adc
cwtl
adcb
adc
das
cli
xor
sub
fwait
sub
sub
lds
dec
jae
das
jne
cmp
sub
xchg
cmp
lods
movsl
insl
inc
ljmp
sub
xor
cmpsl
sub
jo
jmp
inc
pusha
lock
adc
ljmp
flds
pop
sub
aad
sahf
cld
ss
fdiv
test
stos
or
xchg
out
pop
inc
dec
mov
and
xchg
bound
mov
xor
movsb
dec
mov
mov
xor
adcb
popa
cli
cmpsl
adc
fsubs
leave
stc
adc
pop
push
aaa
xchg
pop
test
lea
rorb
jno
sbb
jmp
loope
push
daa
out
punpckldq
fsubr
dec
jae
xor
and
pop
cli
add
push
loop
and
push
insl
add
xchg
int3
sbb
adc
adc
sarl
lahf
fstl
ja
mov
addr16
loopne
cld
es
mov
push
fnstsw
mov
push
aaa
cmpsl
lahf
xrelease
mov
sub
mov
xor
push
lds
adc
pop
mov
aam
sahf
in
and
jbe
jno
xor
push
xchg
arpl
xor
insb
data16
shrb
fsubrp
fdivl
int3
cwtl
ret
mov
fistl
mov
test
cmp
cmp
repnz
cld
movsl
aaa
out
mov
mov
xchg
es
loopne
xor
lods
pop
int3
lds
add
mov
lea
lret
into
jnp
and
lock
cs
adc
mov
lock
cli
dec
push
test
inc
sarl
shrl
xor
in
outsb
shlb
pop
out
pop
in
daa
xchg
rolb
mov
cmp
aaa
not
xchg
add
call
outsb
xor
inc
xchg
mov
lods
dec
add
add
in
fwait
and
repnz
jg
sub
popa
into
push
popf
jnp
rorl
loopne
movsl
popf
and
ljmp
popa
sub
dec
xor
mov
in
lods
sbb
mov
nop
mov
mov
hlt
xchg
dec
fildll
pop
out
rolb
lods
or
push
imul
inc
lret
xorb
inc
roll
push
loop
and
faddl
jno
out
fidivrs
loope
and
clc
xor
aad
mov
mov
psrad
inc
mov
cltd
stos
xchg
cmp
jae
imul
mov
in
pop
mov
aaa
mov
repnz
pop
cld
jno
jae
test
sbb
clc
xchg
lods
stc
clc
pop
ret
or
lret
mov
cmpsl
pop
and
iret
inc
dec
loop
dec
mov
lds
add
push
pop
mov
mov
and
pop
dec
scas
sbb
sub
cli
or
or
adc
shll
in
mov
mov
js
inc
pop
jne
fs
or
dec
push
add
or
shl
movsl
andl
add
mov
data16
jne
ds
out
lret
lea
xchg
jnp
loope
and
mov
sub
mov
repnz
sub
dec
push
xor
out
cwtl
shll
or
and
dec
es
fstps
cs
cmp
push
les
out
jmp
sbb
xchg
push
inc
outsl
inc
movsl
daa
ljmp
pop
pop
mov
add
scas
cmpb
imul
pop
and
ljmp
loop,pt
pop
sbb
push
inc
clc
dec
ret
imul
in
shrl
fldenv
mov
into
adc
inc
jecxz
dec
loop
mov
xchg
add
lds
addr16
cwtl
sub
push
add
cmp
das
sbb
sbb
fldcw
pop
test
leave
fsubl
or
xchg
push
cmp
popa
push
scas
test
jg
mov
add
push
push
pop
imul
mov
sbb
cmp
add
shll
and
fnstsw
inc
mov
nop
in
and
sbb
add
or
ss
sti
jge
xor
insl
mov
arpl
jge
jnp
adc
sbb
das
sbb
movsl
cmp
enter
xlat
pop
mov
inc
add
test
arpl
inc
xor
add
push
shrb
out
push
rclb
outsb
add
jecxz
fimull
mov
or
pop
push
imul
jg
or
or
movsb
nop
xor
mov
jns
sarb
ljmp
test
inc
cmpsl
push
xchg
mov
scas
mov
cmp
xor
mov
mov
jle
or
out
roll
and
xorl
xor
stc
adc
push
jg
imul
fsubs
scas
push
xor
fidivs
mov
inc
mov
fiadds
pop
insb
jmp
xchg
xchg
bound
int3
lea
or
hlt
cmpsb
rcl
in
jp
and
xlat
lds
mov
ret
mov
inc
pop
inc
jle
cmp
scas
bound
sub
outsl
lcall
jo
jmp
cmp
xchg
pop
sub
es
push
outsl
pop
popa
inc
int
xchg
ja
lds
mov
ret
cmpb
pop
and
jle
inc
ficoml
js
push
inc
fsubrl
sti
push
dec
ds
pop
mov
call
cld
daa
xor
mov
fiadds
in
outsl
inc
adc
xchg
ljmp
and
movsb
inc
sbb
movsl
lret
rolb
jnp
push
mov
test
popa
pop
dec
inc
in
lea
push
imul
call
jns
in
pop
inc
adc
pop
push
pop
push
inc
nop
jb
adc
outsb
aam
mov
insb
test
insl
sbb
jbe
lahf
mov
outsl
in
in
mov
lods
jecxz
xor
adc
lret
mov
movsl
adc
es
pop
mov
adc
sbb
lock
movsl
inc
das
push
cs
lcall
aam
daa
frstor
adc
pop
out
stos
jge
int3
mov
hlt
pop
into
loop
add
jmp
mov
stos
cli
das
shll
pop
inc
cs
inc
xor
jo
add
cltd
out
inc
push
std
fcmove
jns
js
mov
ja
push
push
movsb
loop
arpl
sub
mov
fstpl
nop
jno
push
pushf
mov
daa
push
in
adc
fiadds
sar
or
dec
loop
ljmp
dec
jae
adc
and
mov
mov
cmp
imull
out
push
mov
pop
sub
mov
scas
sub
xorb
push
dec
mov
fcmovnbe
mov
sub
mov
cwtl
fbld
xchg
ds
mov
outsb
xchg
jmp
sbb
sbb
sbb
les
rcrb
and
adc
cmpsb
push
pop
adcb
shll
sahf
js
insb
bound
mov
out
aas
mov
test
add
xchg
push
ds
into
lock
add
pop
pop
add
push
fsubl
mov
xchg
out
add
subl
aas
jmp
gs
or
or
decb
xor
mov
or
aam
or
pop
add
into
fstpt
in
bound
lahf
jns
sub
lahf
sub
mov
dec
jbe
inc
push
adc
mov
push
outsl
mov
xchg
and
jmp
push
lods
stc
mov
dec
mov
xor
cmpsl
movsb
dec
mov
test
inc
pop
loope
lea
and
out
cmp
push
pop
sub
ljmp
ljmp
ss
xchg
sbb
dec
xchg
cmpsl
push
dec
xchg
gs
add
push
jno
pushf
loop
test
and
fldt
or
mov
mov
xor
stc
fists
arpl
sahf
ret
pop
dec
mov
mull
mov
cltd
movsb
mov
and
xlat
std
dec
xchg
into
fs
jb
mov
test
adc
test
shlb
inc
and
dec
xchg
cmpsb
jo
xchg
stos
mov
mov
outsb
enter
inc
cltd
mov
mov
push
mov
flds
aas
adc
out
mov
and
add
or
fadds
je
sub
push
add
and
sar
dec
daa
jno
push
in
and
idivb
cmp
hlt
sbb
orl
adc
test
jp
adc
fcmovnbe
jnp
inc
scas
push
movsb
sbb
out
into
dec
sub
aad
push
mov
xchg
ja
frstor
inc
cltd
mov
rolb
jecxz
push
jmp
ror
clc
dec
and
mov
add
hlt
scas
sbb
imul
jbe
std
add
ret
outsb
inc
jb
or
shrl
repnz
dec
xchg
and
nop
jle
mov
xor
out
leave
shl
pop
dec
jl
xchg
ret
mov
dec
add
sbb
je
xor
loop
bnd
popf
add
rcrl
and
cli
xchg
dec
push
hlt
adc
movsb
mov
push
test
mov
test
sub
addb
bound
push
xchg
add
ss
loop
cwtl
xor
in
movsb
repnz
adc
stos
pusha
mov
and
lret
cmp
sbb
push
ss
into
insl
mov
inc
lods
mov
xchg
movsl
jnp
stos
jecxz
scas
ffree
shrl
orl
aad
addl
push
clc
lea
daa
cmpsl
pop
test
pop
and
nop
cld
ficoml
sbb
ret
aam
lods
mov
shrl
jne
fstps
inc
adc
pop
dec
lock
adc
in
fiaddl
adc
bound
clc
mov
mov
js
or
add
sub
or
pop
shll
push
fcmove
adc
icebp
xor
xchg
out
sbb
mov
push
pop
xchg
ds
adc
xor
call
jo
inc
sub
sti
rcr
ret
mov
mov
jno
in
sub
pop
shlb
xor
xor
and
and
cmp
clc
stos
hlt
and
jmp
loopne
jmp
adcb
jmp
mov
je
in
sub
inc
stos
mov
fists
fsubs
jg
mov
popa
push
shl
push
jo
out
fcmovnb
pop
aaa
ss
ss
imul
mov
jae
sub
stos
cmc
mov
nop
js
int3
dec
lret
popa
lods
into
add
add
out
sub
testb
adc
stos
jns
faddl
mov
cmp
dec
lods
inc
stos
cli
inc
xor
inc
daa
test
scas
jg
mov
inc
mov
dec
loope,pn
mov
inc
mov
fwait
jmp
inc
jo
push
dec
inc
add
cmp
ss
leave
push
cmc
gs
sub
popf
add
les
clc
sbb
mov
dec
repnz
ds
mov
or
test
imul
fisttpl
adc
pop
push
mov
push
sub
push
sub
lret
in
adc
or
cltd
push
mov
movsb
jns
shrl
sbb
out
loopne
push
cmp
pop
lret
outsb
fwait
jp
pop
xchg
inc
jp
test
sbb
sub
rcl
out
jns
pop
in
loop
and
jp
lea
je
push
subb
xchg
dec
add
jne
adc
lods
or
lods
push
int3
stos
fimull
xchg
jae
pop
adc
xchg
adc
out
lea
in
nop
xchg
inc
aam
or
or
sbb
pop
cmpsl
scas
negl
inc
fdiv
mov
jge
insl
and
out
loop
pop
mov
sub
std
aam
ss
or
pop
jne
xchg
sub
or
pop
mov
ja
push
shll
mov
cwtl
dec
nop
sbb
out
mov
xchg
pop
cli
lcall
call
imul
or
pop
push
lock
out
in
jmp
jb
mov
imull
mov
sbbb
sbb
outsl
addps
mov
and
sub
or
cld
movsb
xor
jnp
imul
ljmp
xor
ljmp
mov
pop
in
xchg
sub
jge
adc
push
jns
xor
xchg
dec
icebp
mov
aam
sub
mov
push
push
rcll
mov
leave
push
ds
fwait
push
dec
ljmp
ljmp
out
fldcw
sbb
mov
sub
movsl
pushf
es
loopnew
out
arpl
lods
js
or
pop
and
push
lret
aad
fidivs
cmp
inc
or
mov
das
xchg
jecxz
stos
pop
in
cld
clc
mov
pop
data16
jbe
lcall
subb
imul
std
movl
leave
mov
or
pop
xchg
cld
mov
sub
xchg
sbb
cwtl
inc
inc
or
adc
push
mov
daa
daa
nop
mov
lods
fcoml
cli
lock
xchg
mov
out
xor
mov
mov
push
insb
mov
enter
hlt
or
push
out
mov
inc
xchg
hlt
cmp
aad
mov
inc
inc
pop
xor
pop
test
add
dec
lret
and
or
xlat
push
add
lahf
adcb
lock
and
pop
lret
lock
mov
loop
outsb
pop
shrl
ret
push
not
pop
aam
mov
jns
jne
rcrb
xchg
xor
fs
adc
gs
adc
out
out
pushf
mov
adc
jb
bound
sub
pusha
test
mov
arpl
fbstp
mov
ret
pop
addb
add
std
in
sub
scas
xor
mov
aad
lods
stos
stc
cmp
xor
pop
pop
mov
pop
and
mov
and
in
pop
subb
jp
ljmp
cmpl
mov
out
int
sti
sarl
jne
xor
addb
stc
sub
rol
xchg
fwait
cld
push
testl
or
xchg
cmp
cmovle
aaa
icebp
out
stos
lahf
xchg
push
pop
push
and
std
jecxz
test
mov
inc
xchg
xor
fadds
sub
icebp
and
data16
test
mov
popa
or
lods
mov
ss
xor
out
mov
xor
shll
mov
pop
xor
jae
into
sbb
outsb
sahf
inc
pop
popa
lea
stos
push
pop
sub
add
dec
dec
push
test
das
xchg
pop
das
add
push
pop
pushf
sub
dec
or
or
sub
lods
in
and
xchg
mov
xor
adc
pop
push
popa
pop
movb
mov
mov
pop
inc
mov
sbb
repz
clc
cmpsb
call
frstor
cmp
gs
push
out
out
adc
pop
fstpl
shr
int3
inc
mov
loopne
data16
and
mov
sbb
jp
xor
or
push
dec
xchg
adc
and
cltd
lds
jo
repnz
in
xor
fldl
adc
int
mov
push
mov
inc
aad
or
jae
lcall
fidivrl
jl
jbe
jns
xchg
mov
lods
adc
pop
and
test
jnp
test
add
mov
mov
pop
push
mov
es
inc
into
je,pn
popa
int
icebp
stc
xchg
or
sbb
pop
sub
dec
jmp
xchg
cmpl
xor
xchg
iret
inc
ret
outsl
jb
in
inc
in
xor
and
xor
sub
stos
subb
iret
push
outsb
ljmp
dec
cmp
xor
mov
aaa
mov
xor
movsl
jnp
cmp
mov
jge
adc
jae
pop
jmp
iret
xchg
sub
and
adc
mov
popa
pop
lods
repz
or
addb
insb
jmp
lret
daa
fsubrl
daa
ss
sbb
dec
leave
popf
and
into
sub
and
addr16
sub
stc
ljmp
imul
popf
pop
das
iret
pop
inc
xchg
daa
xor
das
cmpsb
fwait
sub
xchg
dec
fsubr
pop
pop
sub
xchg
pusha
sbb
cli
das
push
xor
add
in
popa
ljmp
and
jbe
sub
mov
adc
sub
es
rclb
sbb
pop
cltd
pushl
repz
mov
loop
mov
mov
and
pop
repz
lock
fmuls
or
aas
ljmp
int
cmp
fstl
push
jb
adc
jne
jmp
mov
fsubr
xlat
pop
inc
or
cmpsl
cmp
xchg
mov
sub
in
das
pop
mov
incl
shll
mov
dec
outsb
mov
rorl
cltd
arpl
mov
xor
xor
mov
sbb
adcl
jle
ret
sbb
sahf
pop
mov
mov
mov
mov
aad
call
pushl
mov
xchg
sbb
jle
xchg
mov
daa
cmp
push
mov
cltd
fisubrl
mov
mov
pop
push
les
jnp
push
cmp
pop
popf
dec
outsb
inc
fs
movsb
xchg
add
jg
jge
push
add
ror
fiadds
pop
jmp
fcoms
gs
lret
outsb
cmpb
fsubrl
outsb
paddb
push
mov
sub
mov
stos
inc
mov
push
rolb
popf
in
iret
mov
jge
xchg
flds
adc
xor
mov
imul
movl
dec
mov
arpl
xchg
xchg
lds
fnstenv
psubq
clc
or
or
outsl
push
rcrb
loope
jmp
cmpsb
vmovhps
imul
std
daa
xchg
lret
popa
adc
ret
cli
daa
lea
adc
push
add
mov
lea
pop
xlat
and
and
jno
and
dec
mov
mov
aam
imul
sub
xchg
inc
imul
adc
xor
jmp
xchg
mov
pushl
shlb
in
in
xor
leave
xor
and
ss
adc
repnz
rorl
and
ret
ljmp
or
fs
cmpsl
jbe
rcrl
mov
cwtl
fld
mov
cli
pusha
jmp
insb
aad
sbb
sbb
loop
or
fadd
out
inc
scas
stc
faddl
cmp
pop
and
xor
cmpb
or
les
inc
cld
mov
add
outsl
es
sbb
sub
cmc
lods
js
loope
imul
imul
scas
call
inc
sub
mov
into
fdivl
cmp
test
add
cs
repz
in
push
fs
sub
jle
jno
and
inc
mov
rcl
mov
lods
cmp
std
stos
push
cmp
jecxz
sub
aad
jmp
inc
and
cwtl
lcall
int
and
and
jp
in
or
bound
xor
hlt
shll
sub
pop
jp
rolb
in
dec
pop
or
daa
cmc
pop
fcmovb
scas
les
out
fcmovb
sub
dec
mov
ljmp
sub
inc
jecxz
pushf
outsb
test
testl
push
out
sahf
mov
ficomps
and
cs
inc
sahf
je
mov
push
outsb
or
push
out
pusha
push
mov
ja
mov
es
stos
xchg
push
jmp
imul
rol
inc
popf
mov
jne
cwtl
cld
and
ret
int
insb
pop
icebp
sub
ljmp
pop
test
sbb
jecxz
in
lods
dec
aas
out
jmp
jecxz
mov
mov
aas
scas
fwait
inc
pop
cli
into
sbb
loopne
mov
int
repnz
repz
mov
scas
paddsw
or
ljmp
aam
cld
xor
mov
fdivs
pusha
loop
xchg
and
sti
dec
lret
out
subl
mov
gs
popa
jae
minps
stc
sub
popa
das
es
in
xor
mov
sub
mov
pop
push
cmc
imul
and
arpl
popa
mov
in
call
daa
fistpll
cmpsb
pop
sbb
and
cmc
mov
pop
lea
and
sub
sub
es
cwtl
dec
lahf
hlt
mov
ja
les
push
pusha
fadd
inc
mov
sbb
and
xchg
sbb
addb
pop
and
fcomps
mov
dec
cmpsb
roll
repz
punpckhwd
ret
das
or
adc
sbb
xchg
or
movsl
mov
lods
xchg
dec
xor
aam
int
outsl
xor
in
sbb
scas
arpl
inc
arpl
daa
adc
sbb
pop
sbb
mov
xchg
icebp
insl
incl
popa
jl
cmp
out
or
mov
aad
ret
fmuls
mov
push
stos
mov
mov
adc
fbld
ss
mov
mov
cmp
mov
inc
loopne
fisttpl
push
pop
mov
mov
loop
and
and
cmp
mov
cld
lea
jge
sbb
mov
dec
sarb
cli
inc
and
sahf
push
ljmp
mov
inc
xor
das
int
jno
xchg
fldcw
add
push
cmp
pop
incb
cmp
cmpsl
stos
rcl
pop
call
rolb
inc
sbb
ljmp
add
std
ror
add
sub
movsl
sub
scas
test
push
mov
mov
pushf
push
test
xchg
ficomps
std
xchg
scas
sbb
fldt
jle
add
pusha
and
xlat
in
mov
fisttps
or
testl
jge
push
xchg
xchg
sbb
rcrb
call
lea
sbb
in
push
lret
jmp
mov
out
ret
lret
daa
lea
jmp
or
xor
xor
dec
push
or
or
inc
inc
ret
cmp
or
ret
jmp
fsubrl
jno
daa
sbb
mov
mov
clc
adc
jp
fidivs
mov
movsl
and
repnz
cmp
mov
loope
test
mov
mov
fwait
dec
or
jp
and
insb
inc
or
mov
test
loope
das
pop
adc
mov
scas
out
pop
mov
sub
inc
push
jb
icebp
dec
pop
sahf
out
mov
sub
out
mov
add
mov
xchg
lods
mov
xor
xor
pop
mov
adc
pop
lods
cmp
arpl
jno
sbb
dec
push
ds
add
or
jae
xchg
add
mov
pop
movsb
in
xchg
lods
jb
and
mov
push
sbb
and
jg
jmp
mov
mov
mov
lock
inc
out
fcmove
pop
mov
and
xlat
adc
push
dec
sub
push
pop
sbb
push
push
loope
jge
adcb
sbb
dec
pop
imul
fldt
out
stos
clc
sub
neg
push
testb
mov
ljmp
xor
add
iret
lahf
lret
jge
xchg
clc
loope
mov
std
xor
jnp
pop
sbb
pop
cmpsl
or
pop
xchg
shlb
lret
outsb
cmp
inc
insl
push
mov
mov
rorb
inc
mov
jae
jno
mov
push
adc
xchg
test
mov
inc
xchg
cmc
adc
jbe
stos
and
sub
mov
cmp
fisubl
push
mov
aas
add
movups
push
push
mov
or
test
adc
pop
and
arpl
mov
imul
dec
mov
pop
arpl
sub
cmp
pushf
jmp
or
xchg
adc
mov
and
icebp
popf
inc
xchg
jmp
push
ffree
in
and
pushf
les
sub
sub
scas
jbe
gs
and
mov
push
jmp
daa
sub
add
mov
cwtl
mov
adc
pop
dec
inc
out
xor
mov
add
mov
mov
ds
mov
roll
dec
sub
sub
std
push
mov
sub
xchg
sub
cli
test
mov
sub
ds
pop
aaa
sbb
mov
out
aaa
cli
and
loop
cltd
dec
jo
push
pop
aas
inc
hlt
add
repz
testl
jne
outsb
or
inc
mov
adc
addb
pop
mov
push
mov
std
adc
mov
xor
loop,pt
mov
test
xorl
das
or
jae
cmp
lods
mov
push
mov
fs
xchg
lods
addl
loopne
pop
int3
icebp
pop
rcrb
pop
adc
xor
cwtl
sbb
rorb
jge
or
mov
xor
aam
fistps
xor
bound
bound
pop
inc
mov
jbe
cmp
add
into
inc
inc
pop
outsb
fiadds
cmp
xchg
sub
push
mov
xor
dec
cltd
in
fbld
cvttps2pi
lahf
inc
jne
pop
xchg
xor
bound
sbb
daa
jge
aam
sbb
inc
xchg
sarl
sbb
lahf
and
push
jmp
or
add
push
mov
or
ss
jmp
cli
dec
and
fistl
aad
push
aad
push
aam
cwtl
jp
sub
jecxz
aad
cld
adc
mov
dec
mov
cmp
inc
jecxz
hlt
stos
xor
sub
dec
sbb
sub
clc
es
int3
js
popf
mov
xor
jecxz
pop
popf
out
popa
nop
and
icebp
mov
xchg
popf
or
xchg
mov
add
mov
add
mov
add
mov
icebp
mov
cld
icebp
xchg
cli
icebp
test
clc
icebp
or
icebp
or
icebp
jle
repnz
jl
lock
jp
out
icebp
js
push
icebp
ja
jmp
jne
jmp
in
mov
inc
xor
insl
and
xchg
ds
add
push
daa
pop
jmp
inc
lret
push
cmpsl
mov
adc
shll
cld
xor
shl
and
aad
ljmp
aas
xorb
movsl
ljmp
lret
loop
push
leave
jmp
jb
cmp
js
mov
or
insl
repnz
imull
int3
jl
lcall
movups
jno
shll
jb
std
or
and
or
mov
test
mov
scas
push
int
notl
pop
jne
cmpsl
jle
imul
mov
std
push
pop
adc
mulb
mov
push
lret
ss
fucompp
cmp
roll
in
lods
and
xlat
or
cmc
inc
xor
or
aad
aam
push
addr16
mov
jl
lahf
lahf
loop
cmp
xacquire
sub
enter
mov
clc
aas
inc
lock
xor
lods
stc
imul
movsb
outsl
adc
sahf
popa
or
nop
cmp
mov
std
lods
mov
sub
in
push
sbb
lock
arpl
mov
dec
rclb
test
icebp
jo
ret
shr
pop
inc
mov
rclb
ja
jnp
ss
dec
imul
fcompl
repz
mov
xor
mov
arpl
pushf
push
idivl
pop
push
enter
adc
js
sub
cmc
xor
je
jmp
lcall
xchg
sub
gs
lea
pop
ss
mov
pop
stos
sub
or
repz
ljmp
push
sbb
das
pop
pop
sarb
pop
dec
fisubrs
ret
cmovbe
fsub
xor
std
and
or
inc
or
imul
or
add
adc
sbb
or
mov
inc
or
add
pop
mov
adc
xor
movsb
bound
xor
ljmp
mov
dec
outsl
iret
inc
jecxz
sbb
movsb
sub
outsl
mov
sbb
popf
in
pop
mov
fimull
ss
cmp
movsb
cmp
movsl
xchg
mov
cmpsl
inc
mov
jns
stos
aad
mov
push
icebp
adc
or
inc
lock
addl
sbb
pop
subl
xchg
das
lahf
or
fimuls
mov
dec
hlt
push
cwtl
incl
pop
clc
push
aas
push
xor
add
pop
jo
mov
pop
adc
or
pop
or
adcb
cs
ret
out
or
test
lcall
push
or
push
fidivs
std
in
addr16
push
mov
adc
or
call
repz
sbb
lcall
and
add
sub
mov
add
sub
push
or
cltd
adc
push
lods
dec
les
cltd
cld
inc
popf
mov
mov
dec
cwtl
mov
sub
sbb
gs
icebp
arpl
xlat
lock
dec
scas
jl
push
pop
mov
sbb
movsl
mov
movsb
out
es
dec
sahf
cmpsb
adc
pop
push
adc
std
xchg
inc
inc
imul
mov
dec
push
jno
imul
sti
loope
lods
leave
bound
and
es
add
adc
mov
inc
sbb
jp
add
repz
mov
xchg
add
mov
and
sbb
jecxz
adc
cmp
and
faddp
xor
jnp
mov
mov
fidivrl
jecxz
pop
push
jae
divb
jecxz
xchg
pop
jge
jmp
mov
inc
cli
fistl
jle
or
lea
out
cltd
punpcklbw
outsb
ret
das
mov
stc
mov
mov
cmp
pop
sbb
cmp
daa
mov
pop
orb
xor
aad
and
mov
insb
and
ds
xor
lret
add
aas
xchg
aas
cs
adc
outsl
outsl
sbb
pop
push
mov
into
cld
xor
mov
xor
push
cmp
mov
adc
and
aaa
bound
mov
aad
cltd
lcall
sub
mov
sub
mov
dec
jb
adc
push
out
loopne
adc
out
and
xchg
jno
in
pop
mov
dec
pop
insl
cmpsb
cmp
fstl
xchg
inc
push
mov
out
dec
subb
aam
xor
sbb
clc
inc
lds
rclb
push
out
and
jge
adc
out
arpl
jmp
jge
ljmp
sub
cltd
xorb
xor
add
adc
and
cmp
pop
inc
push
aaa
sarb
dec
out
inc
mov
jbe
mov
xor
mov
push
pop
push
push
fidivrs
leave
add
rolb
notb
jecxz
mov
mov
popa
pop
std
mov
movsb
adc
loope
ja
sahf
push
out
add
das
loope
int3
jmp
push
inc
aad
push
iret
fprem1
push
xor
cmp
mov
popf
popf
and
dec
outsb
lods
jnp
out
sub
daa
add
repnz
ret
std
inc
inc
and
sbb
and
ficoml
sub
std
jecxz
stc
mov
jle
push
das
in
mov
inc
cmp
lret
imul
shr
cmpsb
pop
ljmp
inc
cmp
pop
inc
xchg
and
mov
mov
jp
pop
ret
sub
popa
jecxz
rorb
inc
mov
adc
jo
in
cmc
scas
daa
lret
fldcw
pop
fucomi
xlat
scas
scas
dec
push
pop
cmp
shl
sub
mov
sub
jecxz
xchg
es
pop
pop
and
es
pop
jno
sar
xor
fidivrs
inc
inc
negl
cli
push
cmc
jae
sub
push
movsb
mov
push
push
arpl
sbb
outsb
daa
ss
in
dec
and
lds
repnz
mov
ret
cmp
jle
test
cmp
inc
outsb
and
and
mov
sub
and
bound
iret
inc
mov
sbb
clc
fmul
jo
sub
jo
push
jge
jb
mov
pop
add
xor
xor
repnz
push
js
mov
outsb
push
imul
push
das
out
aas
sbb
adc
fwait
jmp
add
xchg
adc
popf
sbb
icebp
fstps
jle
js
rcrl
aas
mov
mov
push
movsb
in
cmp
and
add
adc
or
push
arpl
push
mov
jo
dec
pop
das
push
xchg
fldt
pop
in
adc
mov
mov
ljmp
xchg
in
notl
inc
jmp
jg
fs
addr16
push
in
push
rolb
fildll
xor
pop
xor
dec
xor
out
insl
xor
pop
mov
cld
icebp
nop
lahf
xor
inc
jg
xor
mov
outsb
testl
adc
inc
xchg
sbb
das
xchg
es
adc
sub
add
jle
lds
and
clc
icebp
sbb
dec
mov
lahf
mov
inc
in
out
pop
adc
imul
ljmp
push
adc
inc
mov
jge
out
orb
jo
shrl
leave
pop
xlat
xchg
jle
jg
push
pop
pop
ficomps
cltd
repz
xor
aas
mov
jmp
xor
add
xor
xor
and
stos
push
stos
xchg
push
sub
sbb
rol
lret
iret
lcall
fcoml
and
mov
sub
loope
jno
jo
fisubs
xchg
and
ljmp
arpl
mov
jl
fnsave
sub
mov
mov
xchg
inc
jmp
test
sub
pop
inc
add
mov
orl
mov
in
dec
popf
aad
xor
popa
dec
into
shr
mov
adc
mull
inc
pop
mov
outsl
add
pop
dec
push
pop
and
std
xchg
addb
int
mov
mov
popf
scas
gs
loope
mov
mov
mov
mov
add
inc
in
push
jecxz
pop
xor
sti
adcb
pop
fldl
and
jge
mov
sub
adc
or
adc
push
das
scas
inc
cltd
push
cmpsb
int3
xchg
add
jne
mov
test
fnsave
pop
test
sbb
or
out
xor
out
sbb
test
push
scas
mov
push
mov
cltd
adc
adc
and
dec
inc
jae
mov
sbb
mov
dec
or
leave
ret
js
fs
subb
xchg
cmpsl
dec
nop
sbb
pop
mov
mulb
xchg
or
jmp
xchg
fs
cmpsl
ss
pop
mov
xchg
repz
inc
sbb
mov
cmpsb
sub
jbe
or
xchg
add
scas
sub
cmp
dec
mov
mov
cs
sbb
xor
sub
and
mov
loopne
push
mov
negb
inc
out
mov
xor
fmul
cmp
jp
push
add
in
and
insl
pop
loop
outsb
jno
nop
adc
add
leave
out
xchg
mov
push
outsb
sbbb
inc
xlat
adc
mov
add
dec
xlat
adc
fistpl
sub
popf
push
sbb
in
or
mov
or
in
orb
call
mov
mov
jb
push
or
sbb
sub
out
lret
push
ljmp
fwait
js
int3
outsb
and
lret
jno
dec
movsb
or
leave
jne
outsl
adc
insb
lahf
insl
cld
push
in
sbb
in
repnz
into
xor
or
adc
and
std
xlat
push
ljmp
cmp
jl
dec
and
dec
mov
fidivrs
cmp
xchg
cmp
mov
sub
or
cs
rcll
xchg
add
fidivl
inc
adc
out
out
mov
pop
push
pop
stos
pop
rcrb
inc
jno
je
repnz
push
push
rolb
repnz
bound
or
int3
leave
xlat
in
outsb
cmp
fbld
add
dec
scas
mov
xlat
inc
lcall
into
cmpsl
icebp
cmpsb
dec
pushf
cmpsb
push
push
sbb
sub
movups
mov
mov
sub
sbb
xchg
pop
leave
add
shlb
fdivs
mov
movsl
or
cmp
xor
or
add
lcall
dec
cmpsl
add
lds
mov
xor
js
fisttpl
xchg
jmp
jge
shrl
inc
data16
xchg
arpl
sub
stc
inc
into
xor
mov
sbb
and
inc
dec
sahf
adc
adc
mov
xor
cmp
ret
lcall
aaa
out
adcb
notb
or
xor
lret
add
fcoms
push
mov
inc
js
in
sbb
stc
mov
outsb
mov
dec
repnz
mov
in
or
sub
das
xor
mov
les
push
sbb
or
lock
pop
jmp
dec
jbe
jmp
inc
fnstsw
or
and
std
inc
mov
insl
fwait
stc
loopne
scas
repnz
lods
push
mov
xor
mov
lcall
lret
and
test
xor
scas
jns
cmp
lret
mov
pop
dec
test
loopne
xlat
push
pushf
fsubl
push
dec
mov
outsb
shrb
hlt
mov
xor
pop
inc
push
mov
xor
int3
ljmp
lret
sbb
or
xchg
in
cmc
dec
and
ljmp
ss
dec
pop
cmpsl
pop
mov
pop
sub
mov
jmp
mov
xchg
insl
xchg
jb
insb
pop
mov
repz
xchg
cmp
cltd
cmc
sbb
push
and
lret
inc
fs
add
movsl
mov
iret
outsl
popa
in
add
jmp
ljmp
adc
add
in
push
cmp
jmp
xor
cmpsl
out
repz
add
je
jmp
xor
xlat
push
or
mov
insb
insb
sbb
mov
aas
dec
cli
je
fidivrs
adc
mov
adc
jp
add
jmp
cltd
outsl
adc
adc
jp
xor
andb
add
in
dec
push
sti
mov
sub
loop
add
shll
out
xchg
push
mov
jmp
xchg
arpl
add
enter
sbb
xchg
aad
mov
push
ss
xchg
xchg
iret
pop
jbe
xchg
popl
shl
pushl
push
repnz
test
pop
loopne
xchg
inc
xchg
in
ret
mov
or
lcall
inc
adc
ret
mov
rcrb
rorb
inc
pop
cs
cmpb
jge
clc
test
sti
and
setno
hlt
rcll
push
sahf
mov
subb
repz
cmp
icebp
pop
ret
int
repz
daa
lock
aaa
dec
dec
sbbl
pop
mov
leave
aas
and
mov
and
push
orb
add
nop
dec
pop
mov
xor
xchg
xor
lret
fildl
sub
ss
push
pop
mov
jecxz
xor
push
inc
lahf
push
ret
pop
fsubrs
shll
rol
xlat
pop
xor
xchg
sbb
ret
stos
add
and
notl
dec
mov
sbb
test
mov
pop
loopne
mov
cmp
fwait
sub
aad
add
push
mulb
push
xlat
aaa
or
lds
xchg
popa
fldcw
mulb
sub
daa
out
xchg
cld
lods
mov
jb
pop
sar
push
movsl
gs
orb
and
pusha
jb
daa
sub
jmp
mov
dec
or
aam
in
cmp
shr
je
mov
outsl
imul
shlb
mov
xchg
pop
arpl
cmp
mov
pop
movsl
aaa
in
add
sub
sub
or
leave
sahf
cmp
insl
filds
xchg
and
cli
mov
mov
and
mov
outsl
cli
adc
scas
mov
lods
lock
pop
cmc
in
inc
int
lret
mov
pushf
pop
lahf
icebp
jmp
cltd
lods
cmp
cmpsl
adc
iret
push
insb
lds
cmp
xor
adc
pop
jo
push
mov
fstps
mov
sub
andb
mull
mov
ror
int
adc
jae
sub
mov
inc
imul
mov
pop
fistpll
shlb
sub
xchg
repz
arpl
and
xor
ret
mov
mov
mov
mov
dec
lret
mov
pop
dec
adc
mov
inc
adc
lea
sbb
movsl
add
pushf
jle
mov
mov
push
mov
imul
or
icebp
pop
inc
icebp
dec
outsb
xor
and
out
pop
imul
fstps
push
cmp
call
or
xor
sub
scas
mov
wbinvd
mov
xchg
push
mov
jbe
lret
push
in
sub
lahf
or
aas
adc
jnp
jp
mov
add
fsubrl
lahf
adc
insl
push
scas
pop
jns
or
out
cmp
push
push
pushl
push
and
add
sbb
es
add
push
jp
out
pushf
les
mov
outsl
fistps
stos
mov
push
fildl
int
insl
cmp
and
xchg
lret
dec
jne
add
xor
xchg
pop
sahf
lods
add
mov
int3
shll
sti
push
sarb
adc
lods
outsb
jno
inc
mov
inc
arpl
scas
xor
arpl
leave
int3
sbb
mov
add
mov
or
clc
roll
add
dec
pop
pop
popf
mov
cmp
loopne
sbb
jecxz
in
mov
sub
push
push
pop
ret
cld
push
sete
pop
dec
cmp
std
fisttps
in
mov
call
sbb
sbb
test
cmpsb
push
jecxz
pop
repz
xor
sub
mov
sub
sub
push
and
and
and
mov
push
popa
or
sub
xchg
loope
lods
mov
pusha
pop
inc
jno
xor
fsubrl
aas
cmp
ret
ret
inc
inc
dec
outsl
mov
cmpsb
cld
sub
pushf
mov
ret
fdivr
inc
ss
pop
add
call
dec
sbb
jbe,pt
add
cmp
shll
xor
bound
pop
add
xor
inc
aam
out
xchg
cmpb
daa
adc
inc
shll
mov
idivl
xor
sub
jns
pop
and
repz
mov
hlt
mov
and
bound
mov
lds
cmp
xchg
inc
jns
es
pop
fldt
loop
cmp
jecxz
imul
mov
add
mov
cwtl
fistps
shll
loopne
jbe
aad
cmp
fcmovnu
push
push
lods
xor
push
jg
jg
xchg
mull
insb
movsl
xor
in
cmp
cld
loopne
rcr
mov
inc
xor
std
stos
std
stc
fistpll
fadds
ljmp
icebp
xchg
leave
push
das
pop
mov
jle
mov
stos
cmpsb
jmp
es
jecxz
aas
mov
sub
je
int
popa
fisubrl
jnp
or
dec
es
ds
sbbl
test
js
dec
inc
ss
mov
push
push
sub
ret
add
imulb
inc
lock
lods
pop
or
test
cmpsb
inc
aas
subb
push
pop
in
mov
out
sub
adc
inc
rol
aam
push
mov
lods
xor
jno
mov
push
faddl
or
or
pop
sti
mov
mov
movsl
mov
lret
mov
insl
decb
xchg
int
das
rclb
lods
push
pop
add
call
pop
outsb
insb
shll
jno
add
push
add
sahf
lock
pop
out
and
xor
stos
push
pop
xor
ret
push
xchg
xor
outsl
mov
xor
mov
fiaddl
addr16
std
mov
loopne
mov
mov
and
dec
and
ret
adc
mov
sub
popf
mov
pop
into
ljmp
xchg
outsb
mov
fsubrl
sti
cltd
fsubs
push
test
inc
mov
adc
jecxz
jmp
xchg
dec
or
out
jge
ja
daa
in
lret
and
mov
inc
sub
jmp
push
or
lcall
jg
add
bound
mov
cmp
rol
das
adc
ljmp
cmpsl
mov
xor
xor
rcrl
push
mov
rcrl
adc
fld1
rcl
push
cmp
xchg
lock
push
add
ds
adc
pop
aas
in
pop
jns
mov
or
push
mov
mov
xchg
cli
jg
inc
inc
pop
shl
pop
sub
lret
lea
and
adc
sub
push
pop
jae
aaa
sub
arpl
shr
sub
fdiv
sbbl
sbb
inc
sbb
and
lret
or
punpcklwd
and
dec
lahf
and
jae
es
cmp
movl
jmp
push
jb
sub
mull
and
and
cmc
add
fdivrl
jl
in
leave
in
std
mov
pop
das
scas
mov
test
int3
or
mov
mov
jp
test
jb
inc
stos
push
dec
adc
cmp
sub
in
jb,pt
cwtl
cmp
jno
sub
inc
adc
xchg
pop
push
xor
jle
loop
jmp
rclb
jmp
pop
inc
jge
jp
adc
inc
lahf
push
push
test
lcall
std
add
mov
pop
sahf
mov
jnp
cmc
push
mov
leave
les
js
hlt
lahf
inc
add
ficomps
pop
dec
into
pop
fisubl
aam
call
incb
xchg
int3
jnp
pop
push
mov
mov
sub
mov
xchg
pop
ret
dec
add
jo
and
jne
hlt
adc
cmp
xor
sbb
loop
in
js
xor
leave
lods
cmp
fcompl
xchg
xor
dec
cmpsl
cwtl
inc
pop
es
xchg
push
int
mov
jmp
dec
sub
pop
add
pop
xchg
cmc
ja
push
dec
test
out
dec
dec
bound
jnp
in
mov
imul
dec
xor
repnz
dec
pusha
mov
cs
fs
push
hlt
xor
lea
cli
mov
repnz
jnp
xchg
mov
pusha
jb
mov
lcall
add
lds
sbb
outsb
clc
sub
into
xor
pop
push
lds
incl
aad
inc
xor
add
in
push
into
rorb
add
push
and
mov
sub
outsl
add
repz
stos
nop
scas
sti
test
inc
xor
bound
fisubrl
outsb
pop
sub
push
addb
jmp
call
cli
lock
jmp
mov
xchg
popf
insb
dec
jecxz
jge
iret
sbb
pushf
push
clc
pop
mov
pushf
pop
jno
popf
lret
lods
das
xchg
sbb
rol
ret
leave
cwtl
fisubrs
std
stos
mov
mov
and
jnp
xchg
push
push
insl
test
adc
add
mov
push
sub
and
inc
mov
das
imul
sub
nop
fsubrl
or
mov
mov
aas
push
imul
inc
push
mov
sbb
or
xchg
push
cmp
outsl
xor
mov
push
test
cltd
cltd
daa
popf
inc
cmpsl
sbb
sbb
fbstp
sbb
inc
mov
ret
fistps
sbb
mov
push
test
jb
push
sub
xor
bound
push
inc
jg
mov
inc
sub
out
cmp
clc
mov
dec
mov
test
loopne
adc
jmp
jns
into
inc
pop
loope
sub
cmpsb
cmp
sbb
push
in
mov
cmp
mov
out
xor
cmp
mov
or
out
inc
in
fwait
rclb
add
or
mov
push
and
push
mov
and
bts
add
dec
ds
loope
lods
pushf
out
loope
cmp
mov
aam
call
jecxz
imul
stos
mov
shrb
in
adc
sbb
pop
sub
imul
mov
jge
nop
add
sub
mov
out
cwtl
sub
popf
arpl
out
lret
jae
testl
insl
sub
cmp
sub
inc
in
inc
mov
cli
pop
mov
out
xor
fwait
movsl
pop
lock
clc
lds
js
iret
fs
add
pop
inc
push
mov
cmp
adc
stos
mov
xchg
popf
cs
daa
sbb
adc
rcrl
cltd
mov
data16
xchg
out
jne
sub
adc
jae
adc
mov
ljmp
imul
xchg
test
adc
jo
lods
xchg
gs
inc
and
das
cmp
push
adc
dec
sti
je
mov
gs
js
dec
jo
popa
lahf
cmpsb
lock
outsb
jecxz
xchg
push
loope
mov
cli
or
adc
leave
mov
push
clc
pusha
pop
cs
stos
xchg
cltd
mov
sbb
xchg
repz
popf
xor
adc
jbe
imul
rcrl
inc
and
pop
sahf
inc
adc
imul
mov
cld
sub
push
call
popa
mov
mov
jmp
clc
rorl
outsb
mov
outsb
outsb
xchg
mov
neg
mov
ficomps
push
in
xor
add
mov
gs
jnp
movaps
jl
fnstcw
xchg
sub
shlb
jmp
push
pusha
rcll
icebp
iret
push
push
das
or
inc
je
mov
xchg
jb
add
loopne
int3
movsl
xchg
fidivrl
imul
jne
rcll
loop
add
insl
gs
iret
jge
test
ja
ljmp
call
das
xor
jecxz
sub
and
mov
xor
data16
cmc
push
out
and
mov
sub
mov
lock
jbe
test
push
sub
pop
push
add
sub
mov
xchg
mov
sbb
cmpsb
inc
arpl
mov
adc
sbb
xchg
pop
icebp
fwait
cmc
jg
out
mov
data16
sbb
mov
outsb
stc
fidivs
xchg
jbe
pop
into
jmp
sub
dec
gs
pop
cwtl
inc
xor
mov
std
jge
adc
mov
and
pop
sbbb
pop
jg
sub
aaa
pminsw
ficoms
fildl
sbb
push
fcoml
sbb
setae
pop
sahf
pushf
in
pop
xlat
lret
or
iret
xor
xor
gs
mov
stos
or
add
adc
stos
inc
fsubrs
test
clc
les
daa
test
sbb
imul
adc
sbb
cmp
or
in
or
insb
ret
in
in
mov
jb
sbb
cmp
cmp
pushf
ret
mov
cmpsl
rolb
push
sbb
cmp
inc
ss
dec
or
lods
daa
inc
sbb
push
div
sbb
push
call
xchg
popa
iret
fcoms
jp
imull
test
int3
push
cs
iret
les
mov
mov
bound
inc
push
insl
lret
xchg
repz
or
and
mov
pop
loop
jl
movsl
inc
push
mov
aaa
xor
xchg
fadds
xor
cmc
fsubs
pop
xchg
pushf
mov
in
cld
test
ret
pop
mov
nop
arpl
js
pop
push
push
in
cmpsb
bnd
in
push
orl
xchg
mov
imul
push
cmp
pop
sub
add
sub
push
cwtl
xorb
xchg
insb
jge
sub
and
cmp
sahf
xchg
xchg
cli
data16
mov
das
lods
inc
adc
lret
jo
xchg
push
inc
adc
and
popf
insb
fidivs
pusha
les
cs
in
aad
push
pop
lods
pushf
out
jg
adc
mov
es
in
inc
jne
xor
lds
jno
mov
mov
movsb
sbb
jbe
inc
ret
pusha
ss
mov
sti
xor
cld
popf
mov
push
jne
sub
cmp
xchg
outsl
call
push
into
inc
push
sbb
pop
push
sub
loopne
push
add
xchg
lret
xlat
dec
xchg
and
in
sbb
or
enter
push
xchg
mov
movsb
cmpsl
outsb
outsb
sbb
arpl
push
in
sub
movsl
test
xchg
dec
andb
push
test
ds
out
pop
xor
iret
loop
inc
add
dec
mov
xor
cwtl
or
mov
xchg
xchg
inc
add
pusha
and
xchg
mov
lods
xor
dec
sbb
jbe
or
jl
int
int3
ret
adc
sbb
cmp
es
ret
dec
shl
add
sub
orl
adc
jle
in
inc
mov
dec
add
cmpsb
int
dec
or
push
sbb
mov
mov
ljmp
xor
int3
inc
mov
lods
pop
movsb
jg
into
sti
mov
repnz
addr16
call
enter
xchg
inc
mov
mov
pop
mov
sub
and
fldl
jo
icebp
or
add
inc
test
fisttpll
push
xor
mov
push
rcll
lret
in
int
adc
xor
andl
inc
pop
fsubrs
inc
and
cmp
test
insb
rolb
out
nop
or
cmp
mov
xor
sub
jbe
mov
push
divps
aad
cli
fnclex
test
mov
xor
jo
push
dec
dec
sbb
xchg
mov
fmull
push
pusha
rsqrtps
mov
cmp
xchg
gs
fcmovnu
jnp
idivb
in
fdivs
test
sarl
lods
test
jge
test
loope
push
add
adc
pop
stc
out
pop
mov
lahf
pop
je
mov
leave
sahf
sub
lods
fstpl
mov
dec
loop
dec
xor
aad
pop
aas
mov
andl
mov
jno
inc
xchg
orl
insb
loopne
pop
pcmpeqb
out
xchg
and
mov
sub
and
adc
mov
and
mov
fildl
int3
cli
jmp
add
in
or
add
sarb
addl
scas
andb
jmp
push
add
ret
aas
stc
das
lret
inc
imul
in
ljmp
xchg
ss
arpl
pop
xchg
mov
pop
in
ljmp
inc
out
push
data16
mov
in
xchg
lods
xchg
incl
popf
jnp
frstor
jl
jmp
sahf
cmp
loopne
stos
scas
fsubs
lahf
xor
arpl
cmp
inc
lods
jb
or
xchg
add
push
dec
xor
jno
xor
and
lcall
cmp
xor
jmp
lock
in
ss
dec
das
mov
sbb
adc
cmp
jp
pop
ret
cs
lea
mov
in
movsl
xchg
adc
into
addr16
pop
jp
mov
iret
jo
outsb
fldcw
xor
lods
and
scas
fnsave
fisubl
in
jno
pop
aad
std
cmp
xor
iret
loopne
inc
jg
push
adc
mov
insl
mov
lods
ficompl
arpl
sti
cmp
sbb
imul
mov
lods
lahf
inc
mov
pop
out
adc
arpl
or
pop
cmp
mov
inc
pop
xchg
pushf
xor
imul
jecxz
mov
aad
fcmovbe
mov
ret
gs
jp
stc
mov
adc
and
enter
sbb
ss
sub
jo
sbb
mov
xor
insl
adc
pop
cmp
in
loope
std
shlb
jecxz
cmpsl
add
push
es
les
xchg
pop
push
push
xor
pop
lock
subb
sub
insl
ss
insb
std
jge
adc
pusha
mov
dec
mov
mov
mov
es
push
mov
inc
add
adcb
mov
mov
scas
leave
xor
bound
inc
pop
sub
push
cmp
fstp
sub
xor
int3
sbb
push
sbb
inc
sbb
rorb
lds
addb
enter
in
popa
leave
jecxz
pmuludq
arpl
jne
enter
popa
cmpsl
sub
out
insl
cmp
ss
xor
mov
or
daa
adc
pop
ds
movsl
lods
shrl
lret
in
out
inc
stc
pop
xchg
cmp
xchg
dec
fidivrs
adc
out
fs
adc
inc
mov
lods
cmpl
add
inc
scas
leave
je
mov
je
into
or
mov
dec
pop
push
lods
add
mov
jle
ret
outsl
push
lods
sbb
cmc
fcoml
and
dec
add
leave
js
jne
nop
insb
ja
mov
dec
cmc
pop
call
xlat
out
mov
cltd
bound
xor
sub
cmc
aas
pop
mov
sbb
mov
or
cmp
jge
sbb
cmpsb
jb
mov
add
xor
inc
add
inc
pop
inc
inc
pop
dec
popa
addr16
rdtsc
in
jl
in
out
mov
imul
sub
lret
push
std
out
pop
add
test
dec
repz
adc
mov
pop
push
movsl
mov
pushf
cmpsl
mov
and
mov
mov
cmp
xchg
push
jo
mov
sarb
out
scas
fdivrl
or
xchg
addl
iret
lahf
mov
stos
dec
stos
dec
cmpsb
inc
inc
mov
mov
ret
push
xchg
mov
repz
fwait
push
stos
cld
dec
in
icebp
loopne
inc
imul
movsl
jge
jns
hlt
leave
cmp
pop
push
xor
pop
push
or
jae
mov
pop
adc
sub
out
dec
pushf
and
and
iret
fs
out
int3
aas
out
test
fdivrl
or
repnz
sbb
roll
bound
loopne
or
repnz
sti
sub
push
and
sbb
stos
data16
jbe
imul
addr16
and
jbe
in
shll
sbb
xchg
jecxz
cs
das
and
and
idivl
into
ret
mov
arpl
or
loopne
and
inc
or
inc
ret
loope
push
xrelease
xchg
imul
sbb
sub
mov
std
ja
imul
mov
jmp
mov
outsl
pop
int
xor
unpckhps
inc
pop
or
mov
jns
push
je
push
cmp
shll
mov
xchg
mov
xor
xchg
sub
ja
mov
scas
arpl
jmp
jmp
push
scas
push
rcrb
add
xchg
in
cmp
aam
bound
arpl
inc
push
mov
aaa
bound
cmovl
fcomi
nop
xchg
cmp
aaa
mulb
mov
and
xor
int
out
adc
cwtl
and
in
test
aad
cli
xor
mov
sbb
es
push
mov
push
pop
test
loopne
jnp
call
and
nop
or
out
push
inc
sbb
cmp
jmp
add
inc
rcr
push
ds
ficoms
xor
push
dec
and
mov
cmp
pop
push
and
dec
rcl
push
add
aam
or
lret
lret
dec
sti
xchg
data16
loop
mov
mov
aaa
out
leave
xor
push
enter
mov
or
fstpl
or
incl
fisubl
popf
xor
mov
dec
jl
mov
push
sub
test
and
jle
mov
inc
daa
dec
mov
gs
xchg
in
gs
inc
repz
lds
sahf
adc
or
push
call
ljmp
lock
mov
sub
int
daa
pop
loope
call
or
inc
inc
int
or
sub
cs
popf
loope
adc
xor
int
int3
bnd
and
or
fsubs
xor
inc
cmpsl
pop
lods
pushf
pop
xchg
ret
ret
jbe
negb
sub
xchg
ss
ds
cmpsb
pop
cmp
fnstenv
xchg
sahf
jmp
dec
sub
cwtl
adc
ljmp
loop
out
cmpsb
dec
dec
shll
aaa
mov
add
sub
jle
lea
notl
icebp
mov
inc
andb
push
jnp
push
xorl
sbb
test
stc
pop
inc
and
ljmp
in
lret
mov
dec
and
in
and
mov
push
loope
mov
sub
pop
sahf
fsubs
hlt
cwtl
jne
push
fidivrs
mov
dec
js
lock
in
xor
xor
adc
xor
fstpl
adc
mov
repnz
jmp
outsl
fisttps
add
cmc
out
dec
loop
pop
outsb
sbb
movsb
jno
or
inc
call
adc
push
xlat
mov
ljmp
sub
push
cmp
cmc
push
int3
in
xor
sub
jo
mov
cmp
mov
es
push
mov
gs
push
data16
insl
ljmp
loopne
outsb
icebp
cmp
or
mov
repnz
daa
loopne
xor
insl
ret
adc
sub
arpl
adc
or
fisubs
loopne
and
cltd
adc
sbb
pop
stc
mov
and
call
outsl
cmp
fcoml
repnz
imul
ret
loope
add
les
out
cmp
xor
test
lods
fwait
hlt
dec
or
push
btc
call
cli
shl
in
cmc
push
es
sub
loop
scas
shlb
out
sbbl
pop
push
repnz
out
rcl
pop
adc
jp
enter
and
cld
sbb
inc
arpl
adc
xor
xchg
dec
lcall
push
inc
loopne
popa
data16
aas
shrb
js
dec
cltd
in
out
stos
push
cmc
movsl
push
sub
les
iret
mov
clc
inc
mov
ss
outsb
and
movsb
dec
ret
fucomip
pop
sti
dec
push
mov
pop
xor
hlt
cmp
pop
pop
sub
test
xlat
mov
aam
adc
or
jno
dec
push
inc
aam
outsl
movsl
pushf
das
not
cmp
adc
xchg
xchg
sbb
lods
and
mov
nop
dec
dec
mov
je
sbb
pop
jge
pop
adc
jmp
ret
stos
jecxz
fdivs
push
faddl
lahf
cmp
or
hlt
scas
ja
xor
cs
jmp
sub
popf
jno
mov
xchg
aas
and
sbb
data16
mov
xchg
xchg
sti
mov
mov
pop
cmc
subl
mov
mov
mov
mov
add
push
pop
mov
push
inc
cmp
push
sub
loopne
stos
fs
into
or
jg
mov
sbb
sbb
mov
or
ds
and
pushl
cmp
cmpb
push
xor
add
pop
movsb
inc
stc
jge
daa
roll
jns
lret
fdivs
dec
fisttpll
outsb
call
cmp
pop
sub
cmp
push
push
adc
fbld
fsubr
and
ljmp
out
pop
fldpi
jo
pop
mov
pop
cld
cmpsb
movsl
push
out
ret
pushf
sbbl
xor
loop
in
insb
adc
loop
test
movsl
mov
loopne
xchg
add
repz
shll
inc
inc
lds
jg
lds
dec
ljmp
sbb
or
adc
jnp
orb
sbb
clc
xchg
cld
mov
mov
push
or
and
mov
push
adc
cmp
dec
xchg
je
fs
jbe
sbb
pop
out
xchg
push
lods
cmc
rorl
sub
or
cltd
or
addb
sub
pop
loop
movsb
incl
push
dec
divb
xchg
mov
mov
xchg
xchg
xchg
cld
les
div
lods
inc
xchg
fmuls
out
in
xor
xorb
divb
bound
mov
rcll
mov
push
jmp
jno
andl
mov
jo
iret
mov
pop
add
sbb
jne
or
fsubrl
jnp
push
push
mov
fidivrl
sahf
jmp
imul
cmpsb
sbb
xor
sub
mov
mov
push
je
inc
or
and
xchg
mov
push
test
cmpsl
rcll
ljmp
inc
jae
jmp
pusha
addl
lret
cmp
jmp
int3
mov
xchg
roll
in
in
mov
adcb
in
xchg
inc
inc
xor
cmp
out
mov
outsl
mov
pushf
pop
dec
ret
aam
mov
out
sbb
in
cmpsb
sub
or
out
adc
into
cmpsl
jbe
loop
sub
and
add
movsl
jle
mov
push
cs
cmp
jbe
mov
mov
out
sbb
ret
movsb
add
in
cmc
rol
dec
in
mov
mov
hlt
les
cmp
rorb
popf
cmp
xor
loopne
push
clc
sub
push
mov
data16
incb
xchg
arpl
xchg
imul
not
stos
xchg
cli
jae
cmp
rcrb
jo
or
mov
hlt
mov
mov
lret
arpl
aam
repz
test
icebp
add
lods
xor
xchg
shrb
int
pop
rclb
mov
pop
pushf
pop
rcr
dec
inc
push
daa
call
mov
xlat
mov
mov
dec
xor
pop
out
mov
fbstp
jecxz
add
pop
sub
sahf
sub
push
xorl
push
or
bound
jecxz
cs
add
jno
movsb
sub
xchg
movsb
pop
les
push
jbe
fstps
fstpl
inc
out
sub
repnz
cld
jle
sub
cld
in
popa
test
xor
faddl
dec
jg
push
and
lret
in
sub
xor
sub
pop
insb
dec
mov
in
lock
in
xchg
jg
in
mov
xor
mov
fcomip
cld
inc
vmovaps
push
fmul
cwtl
and
test
push
mov
jae
jp
in
inc
jl
jmp
test
lcall
mov
push
sub
test
dec
mov
or
loopne
sar
push
jmp
mov
jle
insl
cmp
jno
mov
ja
movsl
loop
cli
aaa
aas
sbb
shll
push
mov
inc
enter
in
fcoml
jne
subb
es
sahf
jecxz
in
pop
enter
mov
sbb
push
and
or
int3
fstpl
jb
adc
imul
xor
push
sbb
inc
cmp
dec
push
and
pop
mov
std
outsl
cld
mov
scas
jge
loop
xchg
lret
jae
gs
lock
popf
mov
lea
imul
jb
rcr
pop
mov
pop
mov
xor
hlt
inc
sub
inc
sti
pop
add
and
dec
push
mov
fstpt
out
gs
lods
int
add
xchg
rcrb
push
xlat
push
inc
xor
ret
pop
jmp
sub
mov
cmp
lahf
cli
popf
xchg
stc
pop
sub
push
and
sbb
or
enter
fcoml
std
inc
test
xor
sbb
sbb
mov
out
aaa
cs
push
icebp
mov
push
movsl
sti
aas
jo,pn
btc
gs
push
cmpsl
pop
fs
clc
xor
mov
mov
test
mov
pop
or
shl
cld
jnp
mov
data16
gs
xor
in
ja
pop
loop
cli
push
sub
mov
adc
add
and
inc
xchg
mov
add
pop
jp
or
add
add
mov
add
cs
test
mov
stos
enter
sub
fucom
push
fstpt
jmp
ret
jmp
dec
push
push
sub
sub
xchg
repz
in
jbe
cmpsl
mov
pop
mov
push
pop
inc
mov
mov
and
pushf
xlat
sub
adc
sub
jmp
adc
fcomps
ljmp
out
in
mov
add
popf
rol
sub
mov
or
lret
mov
add
jb
and
jmp
fistpl
fidivs
cltd
add
mov
movsl
jns
into
pop
inc
sub
test
cmp
sbb
fimuls
or
xchg
cli
repz
aam
dec
dec
jl
insl
inc
es
xor
mov
xor
orb
sub
adc
adc
popa
popa
pop
fidivs
imulb
push
mov
inc
sbb
dec
push
jecxz
and
adc
cmp
mul
sbb
cmp
push
rclb
dec
push
aad
popl
mov
loopne
out
mov
add
push
stc
inc
jae
outsb
loop
sub
out
jae
std
das
orl
outsb
loopne
add
jne
pop
in
jle
scas
nopl
pop
pop
dec
mov
cmc
mov
cs
cmpsl
inc
jmp
lods
inc
ljmp
mov
dec
and
inc
adc
jg
cmpsb
jmp
pop
lds
xchg
inc
in
test
and
mov
push
lods
mov
out
adc
jmp
jb
jnp
xor
or
lods
sub
shld
jb
xlat
dec
mov
mov
popa
xlat
jns
mov
fidivrs
xor
mov
repnz
ret
fsts
push
jb
into
jmp
mov
pop
push
push
out
adc
scas
mov
xchg
scas
out
lret
loop
lock
push
fbld
ret
pop
mov
movsl
arpl
sbb
aas
adc
out
inc
and
xchg
std
xor
ss
cltd
lahf
mov
arpl
dec
adc
sahf
out
aad
sub
cmpsl
adc
pop
xchg
fiadds
insl
pop
pop
or
push
sti
inc
repnz
and
decl
add
sub
add
repnz
cmp
lds
push
mov
mov
scas
repz
clc
loope
cmp
loop
mov
sbb
testb
rcrl
repnz
lahf
and
stos
aas
lahf
jge
push
int3
xor
das
dec
sub
lret
mov
lcall
mov
mov
adc
mov
cmpl
idiv
int
faddl
mov
mov
cmpsb
imul
scas
loopne
shlb
sub
sti
aam
outsl
add
popa
mov
into
mov
adc
loope
add
or
lock
jp
sahf
mov
dec
dec
xchg
into
bound
dec
imul
daa
adc
mov
addr16
mov
pop
add
fstl
mov
jl
push
add
mov
xchg
or
dec
lahf
xchg
in
and
popf
pop
fwait
and
mov
and
cmp
pop
or
push
dec
cmp
cmp
adc
sbb
sub
mov
popa
inc
push
pop
out
fwait
insl
and
xor
mov
lds
ffree
insb
int3
sub
clc
cmp
push
dec
out
push
mov
mulb
dec
dec
xor
jmp
push
push
xchg
loop
test
repz
ret
into
out
stc
xorl
mov
mov
mov
mov
jb
sub
not
fwait
inc
inc
loope
inc
mov
into
xor
outsl
repz
ret
xor
push
pop
or
imul
sti
mov
jbe
lods
push
mov
jg
gs
ja
fcmove
pop
sbb
sti
xor
pop
outsb
sahf
dec
lea
rcrb
add
std
mull
dec
rcrb
add
movsl
addr16
cmc
int3
mov
insl
xchg
imul
sbb
mov
dec
das
int
sub
jns
adc
cmp
xlat
push
ss
pop
mov
aas
add
andl
iret
leave
popa
and
nop
sub
pop
lret
lea
cmp
inc
stc
mov
lea
dec
pop
adc
or
mov
mov
inc
mov
xchg
adc
cmp
aad
ret
jbe
gs
mov
xchg
adc
inc
jmp
mov
adc
push
daa
gs
ja
call
push
hlt
xor
in
inc
adc
hlt
sbb
sti
loope
pop
cmc
adc
cld
mov
aaa
inc
mov
in
xchg
es
or
sbb
cmp
push
rep
ds
adc
cs
sub
inc
mov
loop
movsb
dec
push
adc
scas
mov
mov
lcall
mov
loop
scas
pop
mov
lcallw
jb
in
xchg
mov
jno
add
dec
push
dec
inc
lods
ret
or
push
pusha
push
xchg
xorl
lds
jecxz
test
sbb
mov
sub
cmp
orb
adc
xchg
mov
testl
and
push
adc
sbbb
scas
pop
jno
jno
add
or
dec
mov
dec
jg
adc
mov
cs
ljmp
push
rcr
inc
mov
incl
xor
scas
mov
sub
stc
lock
xor
push
sbb
les
addr16
aas
cmp
loop
addr16
push
lods
fsts
sub
mov
cs
les
imul
jns
sbb
inc
cmp
xor
mov
scas
push
shrb
pop
jb
arpl
xor
adc
lock
test
add
into
test
xor
pop
shlb
mov
in
sub
sbb
or
mov
jle
or
mov
aas
jbe
cld
xor
call
mov
mov
les
clc
cltd
jns
inc
sub
shlb
loopne
das
shl
dec
dec
mov
repnz
push
repz
jns
test
sbb
ret
or
popf
push
add
sbb
leave
leave
outsb
idivb
push
aam
daa
jb
add
sbb
adc
out
xchg
cmp
sbb
jne
aad
sub
mov
push
in
dec
cmp
repnz
inc
xchg
xchg
fwait
or
lock
cs
dec
xor
ret
push
push
clc
popa
cmp
test
test
sub
and
inc
push
lret
negl
stos
dec
mov
push
mov
or
hlt
shl
xor
xor
scas
and
inc
jo
pop
pop
xor
push
lret
sub
mov
ljmp
mov
jg
loope
mov
fcomip
mull
test
fidivrl
lock
loop
in
add
xor
and
andl
jne
insl
dec
in
xchg
ficompl
loop
mov
ss
test
pusha
pop
sbb
popa
fadd
insl
mov
mov
xor
or
cmp
inc
imul
pop
inc
movsl
jns
js
arpl
push
and
cld
loope
cli
inc
fadds
mov
lcall
subb
mov
adc
inc
mov
push
sbb
fidivrl
aas
adc
scas
add
mov
outsl
jns
rcrl
int
fisttpl
ds
fsubrp
jbe
lds
pusha
sub
dec
jno
xor
inc
jge
jge
in
jecxz
sbb
cmp
adc
lea
dec
mov
xor
mov
xchg
or
in
mov
lods
loop
in
inc
jg
add
jmp
or
sar
nop
scas
jns
icebp
enter
xchg
pop
aad
sbb
cli
add
repz
sbb
js
push
xchg
out
repnz
push
in
test
sub
jle
and
push
sbb
pop
jge
mov
out
imul
mov
pop
lock
fisubl
bts
orb
mov
fnstenv
cli
pop
xor
mov
sbb
scas
dec
pop
lret
sbb
jp
push
test
xchg
push
enter
adc
gs
and
adc
pop
into
mov
aad
cmpsl
rcrb
add
mov
inc
loopne
mov
sub
dec
push
sahf
stos
addr16
mov
and
add
and
ljmp
jmp
mov
out
in
and
aad
mov
add
lds
or
lods
imul
sti
xchg
shlb
cmp
jl
adc
push
mov
fldl
push
clc
inc
lea
pop
dec
jle
loope
xor
loopew
ja
xchg
dec
jp
call
inc
mov
sub
xor
int3
mov
cmpsb
cmovne
daa
adc
inc
mov
out
test
outsl
out
push
add
dec
inc
and
out
nop
cmp
xchg
and
push
pop
hlt
shll
and
repz
insl
jb
adc
sub
jmp
jl
and
dec
mov
scas
sub
dec
sub
sub
out
aad
push
cmpsl
xchg
or
xchg
dec
or
in
pop
pop
insl
pop
subb
lcall
pop
jmp
sub
imul
ljmp
jns
inc
imul
xchg
lret
stc
rol
sti
jo
xchg
mov
xor
cltd
je
add
jge
inc
jge
insl
cld
cld
in
adc
gs
shl
lea
lret
je
sub
mov
sarb
dec
and
cmovbe
xor
and
sbb
dec
jmp
mov
jecxz
pop
das
push
push
sahf
pop
sahf
jne
adcl
ljmp
pop
and
invd
out
test
mov
imul
ucomiss
cmp
shll
mov
andl
adc
idivb
fsts
cli
xchg
addr16
jo
popf
enter
and
pop
fistps
push
cmpsb
xor
nop
push
or
pop
inc
push
jo
add
and
push
and
mov
sbb
push
cmc
push
stos
or
sbb
and
ret
ficoml
es
xor
cmp
xorb
inc
mov
push
mov
push
fdivs
mov
pusha
or
bound
pop
adc
in
mov
inc
push
mov
cli
sarl
int
xchg
fstpl
xor
dec
in
pop
pusha
daa
cmp
test
and
inc
pop
xor
iret
sub
pop
fimuls
imul
mov
add
push
sbb
inc
mov
aas
lret
jo
repnz
arpl
jbe
insb
xor
loope
or
push
fisubl
mov
out
cmp
dec
or
leave
jbe
pushf
adc
cmp
xchg
ds
flds
xchg
xchg
sub
sbb
and
insl
xchg
inc
iret
dec
icebp
test
icebp
mov
testl
jl
adc
adc
sti
push
scas
roll
sub
pushw
push
xchg
shl
out
adcb
in
call
cmp
out
adc
add
push
jecxz,pn
cmp
and
sub
mov
cmp
stos
lods
in
and
repnz
out
shll
cmp
stc
xchg
jmp
lods
mov
add
repz
aad
xor
dec
mov
adc
imul
add
ret
lock
pop
dec
mov
jns
inc
sub
adc
mov
mov
dec
test
int
xlat
mov
into
out
pop
push
movsl
insl
jmp
and
rep
mov
in
and
in
pop
shlb
out
rcrl
add
cs
inc
aam
inc
orb
out
cs
jp
adc
jnp
in
fnsave
dec
adc
xchg
rorl
pusha
sbb
scas
aaa
imul
push
enter
addr16
xor
and
std
jmp
cwtl
add
xchg
fs
fwait
sub
mov
xchg
mov
pusha
pop
jae
ss
lcall
roll
pop
dec
jns
jg
mov
and
dec
fs
repz
rcll
push
push
adc
sub
cmp
orb
sub
ror
es
mov
lret
jb
sub
dec
stos
dec
mov
shlb
mov
jecxz
mov
xor
ds
push
mov
push
jg
es
fdivl
jle
mov
ds
in
shrl
int
dec
mov
cltd
fdivs
out
lds
imul
or
xchg
mov
dec
enter
rorb
pop
mov
mov
dec
jae
ret
test
xchg
pop
std
loopne
fwait
push
scas
mov
push
fisttpl
or
jae
or
push
xor
popf
add
sub
or
inc
jb
xchg
xor
pop
sbb
pop
push
dec
testl
dec
out
adc
scas
jge
imul
mov
or
inc
or
pop
leave
lods
repnz
lock
insb
pop
cmpsl
jmp
mulb
mov
mov
and
inc
push
sarl
dec
add
nop
sub
fst
test
push
sub
shll
dec
inc
lods
cmp
jns
test
add
int
es
and
and
and
fdiv
mov
dec
cld
bound
adc
je
and
ret
add
loope
pop
mov
cmp
jle
mov
pop
mov
bound
int
ljmp
dec
aam
pop
jl
std
sbb
out
sbb
sbb
out
in
or
out
loope
mov
mov
cmp
mov
and
adc
dec
into
shlb
sub
pop
icebp
jno
stos
xor
jmp
cltd
pushf
jnp
xchg
sbb
jmp
add
push
fcomip
gs
add
out
mov
sti
push
jmp
cmpsl
fsubrs
out
int3
call
adc
cmpsb
pop
mov
push
mov
out
or
fadd
fidivl
and
sti
cmp
cmp
daa
andl
sbb
jmp
push
daa
mov
int3
stos
daa
lods
and
xor
cmp
testb
inc
leave
cltd
add
gs
adc
ffree
mov
jbe
jmp
pushf
sbb
push
lds
sbb
jl
jp
daa
xchg
jae
cmpsl
xorb
sbb
mov
mov
pop
out
xor
xchg
inc
iret
xor
xor
sbb
fdecstp
mov
in
add
mov
sbb
popf
popf
ret
rolb
inc
or
push
shll
push
daa
test
mov
xchg
push
call
xor
mov
es
jecxz
sarl
out
or
gs
dec
cwtl
xchg
cmp
mov
cmp
scas
mov
rcrb
fs
inc
jle
cmp
int
loop,pt
and
es
push
mov
scas
rorb
mov
sti
leave
sbb
and
cmp
popf
add
or
out
pop
insl
repnz
cmp
mov
les
adc
cld
imul
pop
push
jl
dec
int
roll
mov
rep
pusha
dec
insb
out
movsb
pusha
ret
std
xor
mov
sbb
hlt
inc
lods
mov
js
fs
cmpsl
test
out
pop
cmp
movl
xchg
xchg
and
sub
and
inc
inc
sub
adc
cmpsl
mov
cmp
push
stc
cmp
pop
jg
stc
sub
jne
push
lods
xchg
sar
lcall
mov
int
mov
push
fwait
add
sbb
cs
imul
or
clc
or
enter
out
pop
imul
mov
sbb
mov
add
and
sub
es
mov
test
or
leave
xchg
mov
pop
push
xor
pop
ficomps
lahf
mov
das
sbb
stc
or
aaa
mov
mov
lock
xchg
xchg
fldl
es
inc
push
add
out
inc
std
jmp
jmp
movsb
or
and
xchg
fmull
scas
adc
cs
stos
mov
pop
scas
rcrl
icebp
cmp
movsl
or
imul
nop
jecxz
fmuls
inc
out
jne
push
dec
insb
push
ret
and
cli
mov
mov
imul
xor
pusha
add
push
mov
es
jae
lock
pop
fcoms
rclb
rorb
and
cmp
fdivrs
jl
leave
mov
clc
jmp
adc
jmp
data16
pop
testb
sub
std
imul
insl
scas
rcrb
stc
divl
addr16
add
cli
push
int3
add
ss
jg
push
jl
and
in
xchg
sbb
push
fistpl
inc
xor
cli
dec
pop
test
xor
pop
lods
sbb
in
xor
fstps
decl
notl
and
dec
repnz
sahf
loopne
jb
in
xchg
dec
jmp
and
in
js
mov
rcrb
out
mov
les
frstor
and
fcom
push
arpl
push
stc
xchg
adc
pop
ficoms
lods
push
fisttpl
xlat
das
adc
add
push
into
mov
and
jnp
aam
shll
jmp
mov
cs
sbb
outsl
jmp
jae
cli
mov
mov
pop
sbb
adc
push
pop
repnz
shll
adc
sbb
ss
out
mov
push
imul
push
repz
dec
insb
cs
cmpsb
adc
xor
mov
test
dec
insl
dec
mov
mov
pop
cltd
sahf
frstor
inc
arpl
and
push
xor
adc
shrl
cmp
rclb
test
sub
in
jg
xchg
std
pop
pop
insl
icebp
push
aam
call
daa
mov
sbb
sub
enter
push
je
movsl
mov
imul
jecxz
pusha
in
jl
ss
out
jmp
out
imull
mov
cltd
push
movsb
xchg
fbld
mov
ss
jle
xchg
xor
push
syscall
inc
cld
sahf
test
stos
dec
test
call
adc
movsb
repnz
jae,pt
scas
mov
push
jg
scas
testl
sahf
fmull
cmp
aaa
cld
push
pop
push
jmp
pop
push
lods
jns
mov
test
scas
cs
cltd
pusha
mov
pop
cmc
daa
in
xor
sti
adc
xchg
mov
loop
adc
sbb
sbb
loope
into
das
loopne
and
dec
mov
ja
sbb
inc
mov
inc
gs
jae
out
mov
and
fwait
decl
mov
mov
push
jae
adc
or
jecxz
mov
inc
cltd
rol
inc
inc
add
push
or
jne
mov
jb
cs
pop
repnz
pop
dec
fistpll
fistpl
dec
call
in
push
push
pop
cmc
bound
daa
out
insb
cs
orb
sub
or
xchg
cmpsb
mov
enter
lods
aam
adc
roll
ret
jno
jg
mov
sti
cmovnp
xor
dec
sbb
adc
add
jae
sub
push
scas
les
xor
and
mov
scas
sub
not
lea
dec
cmpl
out
in
mov
ljmp
add
out
xchg
data16
xchg
pop
outsl
pusha
add
arpl
dec
sub
hlt
jp
add
call
pop
cmp
pop
and
jmp
jbe
inc
mov
dec
inc
or
push
rorl
leave
in
ds
data16
fistpl
inc
pop
lds
or
sub
inc
jl
lret
pop
in
inc
stc
xlat
pop
mov
jmp
xor
ljmp
ret
rcll
jecxz
sub
fisubs
and
in
fisubl
push
rcll
les
andb
rclb
test
scas
sbb
sub
imul
adc
xchg
adc
jb
add
bound
add
shlb
jb
gs
xorl
in
mov
mov
push
scas
out
xor
xchg
push
fcompl
imul
adc
sub
jbe
cmpsb
push
dec
mov
sub
xchg
test
add
movsb
cmpsb
aas
pop
nop
inc
cmc
push
dec
inc
imul
inc
sbb
pop
nop
out
repnz
jp
cmp
dec
outsb
inc
push
or
xor
sbb
out
daa
push
dec
jo
cmp
lret
mov
or
sahf
and
in
fwait
inc
imul
into
cs
xor
cmp
mov
jmp
or
sti
mov
lahf
mov
add
or
push
xchg
std
std
pushl
xchg
sbb
jno
xlat
cs
movsl
xorl
cli
into
lods
test
fldpi
fs
dec
nop
cs
cmp
int
xorl
repz
jmp
mov
popa
adc
arpl
dec
mov
lahf
xchg
sub
adc
lock
mov
shr
subl
mov
sub
bound
push
xor
add
cli
jns
mov
insb
sbb
out
js
dec
push
xchg
or
mov
pusha
xor
or
inc
fcomps
je
or
in
sub
dec
pop
cli
icebp
jnp
push
notb
out
xor
ds
xor
adc
shll
or
pop
nop
mov
sub
pop
lret
adc
sub
adc
jecxz
xor
sbb
pop
xor
pop
xor
pop
inc
or
outsl
add
xchg
addr16
jns
inc
jp
loope
in
loop
lcall
pop
cmp
jle
push
and
xor
movsl
jecxz
fisubrs
and
pop
mov
in
inc
push
dec
xchg
cltd
out
cli
push
adc
pop
sarb
popf
push
mov
stc
stos
push
sub
out
dec
or
sbb
repz
mov
inc
or
jno
das
subb
mov
add
xchg
pusha
fildll
loop
in
sub
cmp
xor
scas
and
mov
lods
inc
sbb
in
fcomp
adc
mov
sti
lret
and
into
sub
movsl
cmp
movsl
addr16
inc
xor
cmp
inc
imul
outsb
xchg
mov
push
xor
icebp
jle
adcb
insb
incl
dec
add
shll
or
cli
popf
pop
loope
cmpsb
mov
add
mov
pop
pop
cmpsl
inc
mov
jae
test
push
ljmp
mov
sub
inc
xchg
mov
or
add
fsubs
out
cs
add
shrb
jecxz
lock
fdiv
iret
and
es
cli
popa
jle
lret
mov
insl
push
ret
mov
sahf
mov
pop
or
shll
dec
xor
inc
aas
or
mov
pop
rorb
cmp
mov
sbb
dec
push
test
push
cwtl
or
push
and
mov
xor
data16
push
aad
fs
xchg
or
xchg
daa
ret
dec
js
pop
sti
jbe
mov
xor
sti
orl
mov
mov
adc
jae
add
imul
in
push
sub
ja
in
test
sub
inc
fmul
or
pop
loopne
xor
mov
sub
adc
ja
jecxz
dec
add
cmpsl
fimull
aas
mov
push
sbb
outsl
mov
enter
arpl
xor
cld
out
fstpl
and
add
jge
addr16
mov
push
mov
pop
xchg
cmp
jae,pn
lret
adc
sub
cmp
inc
insl
mov
push
in
enter
xlat
pop
jns
xchg
cmpsl
cs
je
sahf
jg
inc
add
cmp
ljmp
fdivrl
mov
push
dec
pop
xor
inc
ja
pop
xchg
dec
outsb
pop
mov
mov
in
xchg
jmp
aaa
repnz
xor
jmp
sub
jp
ja
sub
push
into
mov
push
or
pop
jo
rcl
push
push
aad
cmpsb
subb
push
hlt
mov
insb
mov
popf
add
std
ret
sti
jle
mov
out
push
fisubs
mov
mov
or
sub
sub
pop
add
xchg
inc
les
dec
dec
lock
and
or
push
sbb
clc
ds
fldl
in
mov
fisubrl
bound
mov
push
xchg
xchg
subl
xor
mov
loop
sbb
pop
aad
je
jnp
loope
addr16
jno
xor
test
and
push
out
inc
clc
mov
cmpsl
sub
or
ret
xor
and
out
pop
out
fisttpll
mov
inc
lcall
cmpl
adcb
cmp
xor
cmp
lock
pop
icebp
and
int3
mov
sbbb
dec
jne
mov
js
fwait
into
mov
xchg
lea
adc
dec
inc
xchg
out
aas
adc
pop
dec
push
int
inc
dec
aad
ss
jle
stos
fst
or
pop
add
outsl
cmp
sbb
sub
sub
sub
mov
popa
aad
or
ljmp
lock
pop
out
sbb
scas
mov
imul
sub
lret
cmp
fmul
mov
rorl
lds
mov
cmp
pop
cmp
push
icebp
sub
int
lahf
cs
cli
mov
adc
mov
in
xchg
jge
loop
and
mov
fistpl
xchg
js
xchg
xor
loop
pushf
int3
xchg
dec
dec
mov
mov
cmp
push
cmp
lcall
push
sbb
data16
jb
add
mov
cmp
push
int3
push
jae
lcall
xchg
and
xor
xlat
add
pop
ret
testl
mov
cmp
addr16
sahf
ret
xchg
xchg
jl
xchg
pop
out
xor
mov
in
or
data16
lock
ret
push
sti
pop
sub
shl
sub
aam
cmc
cli
aas
loope
adc
subb
inc
jnp
mov
dec
loopne
jne
shl
adc
out
aaa
test
jns
inc
mov
xor
adc
mov
and
sarb
push
scas
or
and
test
ss
mov
cmp
pushf
push
lret
pop
ds
gs
jge
jne
and
in
mov
push
or
or
inc
xor
das
stos
mov
imul
pop
xor
shrb
add
test
adc
mov
or
mov
push
inc
jae
cmp
mov
xor
bound
or
lret
out
add
xorl
or
xor
push
leave
hlt
popf
test
popa
out
push
inc
mov
push
pop
loop
add
fwait
dec
lcall
xchg
xchg
insb
out
and
divb
cmpsb
sbb
cld
mov
lods
fwait
xor
sub
or
mov
inc
and
cmp
ret
mov
pop
daa
popa
mov
xor
inc
pop
fstpl
fwait
add
dec
push
sub
sub
scas
or
jno
or
arpl
ret
push
pop
stos
stos
mov
cli
mov
popa
test
sarl
mov
cmp
movsb
push
and
iret
fisubrs
xchg
xor
jnp
mov
dec
inc
arpl
test
les
clc
ds
pushl
xor
pop
mov
test
xlat
cmc
inc
mov
mov
xor
xor
or
adc
or
lret
lock
cmp
push
mov
out
addl
adc
mov
mov
testb
xchg
dec
add
out
push
or
ret
jl
stos
out
fwait
ret
icebp
cmpsl
inc
pop
arpl
push
dec
test
jmp
jecxz
mov
inc
out
cmp
lret
add
lds
dec
and
nop
outsl
lea
mov
xchg
jg
pop
push
add
movsl
in
cmp
stos
je
push
pop
loop
push
ljmp
sub
pop
mov
pop
aaa
cmp
int3
fidivl
or
xchg
stos
cmpsb
jle
mov
out
inc
arpl
sub
xchg
stos
lcall
pushf
and
imul
add
addb
rcr
sbb
mov
pop
adc
loop
xor
dec
in
xchg
sbb
inc
sub
dec
ds
roll
adcl
mov
mov
jl
sbb
cmpsb
add
cmp
ret
sbb
aas
adc
jp
subb
push
pop
mov
push
adc
pop
pop
cs
mov
scas
sub
and
mov
and
ret
mov
inc
add
lret
mov
inc
inc
xlat
inc
lea
jo
loopne
xor
ficompl
add
neg
pop
xor
mov
int3
or
or
fsubrl
iret
xchg
mov
cli
push
mov
dec
mov
mov
dec
loopne
sbb
pop
mov
jb
fs
das
in
xchg
imul
sbb
js
xchg
cld
lock
sub
xchg
js
cs
jmp
pop
xchg
jne
fs
out
ljmp
adc
jmp
jle
aad
leave
scas
push
int
mov
xchg
pop
clc
cld
in
sbb
mov
ja
push
test
test
decl
xchg
fwait
dec
mov
cmpsl
mov
jb
sbb
ja
mov
sarb
mov
lahf
lds
ret
mov
xchg
fs
xchg
in
and
repz
xor
push
xchg
mov
rol
cmp
shrb
cmp
or
xchg
mov
in
je
out
sub
leave
rcrl
mov
bnd
outsb
out
pop
mov
roll
mov
jl
loope
push
or
jmp
adc
es
out
sahf
shrb
lds
and
xchg
mov
fs
cmp
cmp
clc
divb
mov
mov
inc
push
mov
cmpsb
add
push
jle
jne
movsl
jae
jo
js
or
mov
cmp
fcoml
xchg
lret
inc
push
in
push
ljmp
sub
pop
inc
mov
dec
xchg
xor
mov
dec
dec
push
dec
stos
xchg
lock
and
orl
and
mov
sub
or
dec
mov
and
sub
or
int3
arpl
popf
sub
xor
or
add
pop
and
roll
ficomps
cmpb
inc
packsswb
push
xor
pushf
incb
ss
jo
sub
movsl
movsb
mov
push
push
je
and
ds
cmp
pusha
scas
minps
dec
dec
rolb
jae
push
stc
clc
pop
jnp
pop
scas
adc
sbb
jl
data16
xor
adc
or
push
lods
outsl
jle
lock
jnp
ret
jp
cwtl
push
negb
mov
xchg
lret
jb
fucomp
fildll
mov
dec
lods
pop
cmc
pop
jne
bound
lods
ret
inc
push
and
mov
mov
push
cmpsb
or
stos
shrl
adc
inc
in
mov
pop
add
popf
js
sub
xchg
aam
test
mov
mov
sbb
es
inc
bound
push
sbb
jnp
nop
mov
and
sub
sub
mov
mov
lahf
cmp
aaa
lcall
andb
int
ret
xor
jo
test
cmpb
mov
lds
cmpl
stc
jae
jmp
imul
jns
fidivrl
push
fistpll
loopne
and
negl
push
mov
xor
cmp
bound
push
mov
adc
cltd
xchg
cmpsl
lods
aaa
std
outsl
adc
adcb
out
sub
testl
mov
pop
bound
lock
push
jmp
or
xchg
jecxz
xchg
clc
imul
lret
mov
xor
sbbb
jne
xchg
sti
iret
inc
je
lods
or
loop
in
jge
gs
imul
xor
mov
sub
leavew
into
mov
inc
mov
insl
out
cli
sti
sbb
adc
and
insb
cwtl
dec
add
mov
shl
dec
inc
lods
data16
add
and
sbb
es
fisubl
imul
mov
ljmp
into
jmp
mov
fstps
fisttpl
adc
sub
cli
adc
in
sahf
add
and
mov
cmp
sub
andl
idivl
ljmp
pop
gs
mov
pop
sub
cmpsl
fmull
das
push
add
sbb
fwait
mov
movsb
enter
jae
aaa
and
bound
and
aas
shr
pusha
cmp
aam
xchg
sbb
jle
xor
cmp
pop
lret
loopne
push
pop
or
add
cs
xor
xor
add
scas
xchg
not
push
test
aam
out
in
cmp
or
jno
pop
fs
or
adc
iret
cld
mov
and
arpl
popa
sub
sti
sbb
cmp
iret
jecxz
enter
jle
rclb
repz
and
loopne
lea
and
scas
adc
cmpsb
les
std
push
mov
out
ffree
xor
call
pop
lods
clc
pop
push
psubusb
push
repz
add
or
pop
jg
jmp
sub
adc
add
fdivrs
dec
xchg
adc
dec
pop
jg
insb
vmread
shlb
je
cmp
sub
mov
insb
sub
icebp
mov
pop
call
sub
cmpsl
jmp
cli
xchg
aas
repnz
pop
into
imul
cmp
or
ret
dec
xchg
adcl
mov
gs
inc
and
sbb
push
rcrl
push
mov
aaa
arpl
push
and
stc
test
repz
push
sahf
ret
push
ljmp
cmp
cli
test
sub
inc
mov
sbb
ds
mov
out
sbb
clc
mov
and
int
xchg
cmp
jge
add
lcall
jo
xchg
lea
sub
jb
jmp
jno
xor
push
cmp
sub
fst
and
clts
rcl
cmpsl
es
ljmp
mov
or
push
sub
mov
sahf
jo
ret
push
and
std
adc
sarl
xchg
ds
pop
mov
cmp
xor
idivb
pop
sar
ds
add
jp
cmpl
xor
adc
aad
and
fs
xlat
or
in
push
lods
icebp
mov
dec
inc
or
cmp
push
sti
pusha
sub
sahf
fdivrl
or
iret
out
fstpl
pop
mov
call
pop
les
dec
test
or
push
rcrb
in
jb
ret
xlat
and
sub
pushf
and
cli
xchg
or
repnz
lret
repnz
rcrb
and
mov
movsl
sbb
std
aas
js
jmp
loop
arpl
inc
push
jmp
and
in
mov
cwtl
incb
outsl
jnp
in
mov
push
add
fidivs
in
jecxz
xchg
jo
int
pusha
lcall
popa
movsl
xchg
or
inc
cmpsb
cmp
stos
aaa
imul
scas
push
mov
data16
pop
insb
sub
movsb
fs
cmpl
cmp
inc
jno
mov
stos
lock
aam
add
or
sbb
sbb
jmp
cmp
in
pop
pop
loop
lods
push
inc
hlt
fstps
cmc
pop
minps
cld
push
ds
stos
pop
sub
bound
or
sub
inc
or
mov
ja
mov
divl
loop
out
and
outsl
cmc
dec
fs
pop
lcall
jecxz
pop
aam
xchg
scas
fnsave
aas
scas
xchg
pop
test
pop
sub
mov
add
lret
cmpsb
sub
sbb
mov
mov
xorl
dec
inc
cmp
inc
mov
mov
push
push
addr16
cli
in
push
test
pop
pusha
or
add
loop
fnsave
adc
mov
cltd
jmp
mov
inc
xchg
pop
push
icebp
dec
mov
and
push
xor
inc
mov
test
xchg
xor
std
leave
enter
loop
push
andl
push
mov
lock
xor
xor
aad
jno
mov
pop
fcoml
push
scas
roll
es
dec
sub
arpl
and
jmp
iret
sub
fadds
ret
mov
popa
and
into
outsl
imul
xchg
jl
dec
pushf
das
cmp
movsb
cmp
bnd
sbb
inc
rcl
rcr
popa
testb
xor
pusha
sbb
push
ja
pop
out
std
push
rorl
ret
dec
mov
sbb
fwait
popf
sbb
inc
xor
sub
inc
xor
dec
int3
mov
dec
popa
dec
xchg
dec
mov
xor
xor
add
sub
xchg
cli
push
adc
xchg
insb
lock
and
bnd
ds
shrl
iret
sbbb
push
sbb
aad
sahf
mov
mov
scas
sub
cltd
sbb
fsubrp
jnp
pop
push
push
roll
aaa
ficomps
push
mov
jno
ret
mov
pop
pop
adc
fisubrs
pop
popa
into
ret
shll
jecxz
adc
sbb
lds
xor
xor
dec
popf
loopne
jns
or
ss
bound
popf
push
in
jne
fstps
lret
adc
aas
dec
push
js
xchg
inc
stos
push
or
xor
aaa
xor
dec
test
mov
xchg
mov
pop
push
cmp
in
inc
add
add
mov
push
nop
test
mov
adc
in
xchg
mov
daa
push
lock
adcb
pop
loope
mov
jno
sbb
jo,pt
ljmp
dec
mov
filds
push
mov
repnz
test
aaa
aam
jge
es
mov
sub
jle
fisubrl
imul
ret
les
xor
in
fs
push
mov
pusha
lea
jg
test
xchg
shr
clc
xor
fsubrs
inc
popf
in
xlat
lret
sub
sub
cmpsb
loope
pushl
cli
test
cli
insb
pop
sti
std
jle
mov
das
movsl
push
out
loop
out
inc
std
arpl
sbb
or
xor
or
sub
jg
push
in
sub
leave
adc
mov
movhps
mov
xor
adc
or
mov
repnz
insl
imul
or
imul
lock
sub
xchg
sbb
adc
in
fdivrs
jmp
xor
inc
shlb
imul
sub
jb
int
loopne
push
in
in
sbb
jns
inc
mov
lahf
jl
pop
or
and
scas
ret
rcr
cmpsb
pop
push
inc
pop
hlt
addb
in
ret
shrb
push
dec
xor
xor
xor
jmp
int3
aas
lods
dec
sbb
aas
sbb
xchg
cmpsl
sbb
pop
jne
adc
subl
fcomps
jl
sti
shl
add
pop
xor
ljmp
in
fadds
jbe
add
inc
ja
dec
add
xchg
pop
sub
add
inc
out
xorb
lods
in
inc
cmc
dec
mov
nop
movsb
adc
jno
mov
mov
insl
ficomps
aad
pop
lret
popf
lret
aad
arpl
mov
sti
daa
add
lock
faddl
mov
test
dec
dec
stos
rorl
sbb
jne
sbb
js
pop
repz
sub
jle
dec
sub
js
inc
adc
mov
subb
pop
mov
add
int3
push
mov
sbb
aad
addr16
daa
pop
stos
scas
aaa
mov
les
mov
gs
jbe
or
clc
push
arpl
je
mov
fnstsw
xchg
into
xchg
mov
mov
sbb
std
outsb
sub
sub
imul
or
add
mov
fcmove
and
lds
jae
ds
xor
jmp
into
ljmp
sub
outsb
and
jge
repz
mov
dec
or
outsl
xchg
inc
mov
fnstenv
shll
push
push
imull
dec
daa
jns
xor
push
mov
loope,pt
decl
stos
adc
stos
xor
insb
cmpb
shrb
add
jmp
inc
adc
pop
dec
ds
aam
lea
imul
test
mov
jae
sub
and
and
gs
jge
clc
sbb
sbb
push
cmp
sub
xchg
ret
xchg
sbb
cmp
adc
dec
jae
daa
or
or
inc
fldcw
mov
aas
push
add
xor
fiadds
int
fisttps
cmpsl
sbb
pop
out
sub
in
sub
inc
mov
adc
xor
stos
add
inc
mov
orb
mov
sbb
mov
jno
repz
adc
inc
dec
stos
sahf
aas
push
lret
pop
movsl
ret
jo
cmp
jne
cmc
adc
push
hlt
lock
push
add
pop
and
push
jbe
jle
ret
es
adc
repnz
cld
lcall
mov
adc
pop
sub
int
cmp
scas
aaa
mov
pop
mov
add
lock
out
xchg
iret
ret
lock
add
fs
push
inc
mov
inc
adc
stos
cmp
gs
test
je
jl
cltd
or
lods
or
or
out
ret
dec
imul
aas
out
xor
adc
out
stos
icebp
add
loope
jp
das
and
adc
lods
push
mov
push
push
kmovw
ds
add
and
imul
pop
or
sub
ret
dec
fldenv
incl
push
sub
mov
push
push
adc
sbb
lds
xor
imul
xor
mov
cmp
lock
mov
rolb
push
mov
push
pushf
inc
iret
in
adc
mov
adc
lcall
orb
mov
js
orb
push
adc
push
repnz
imul
push
into
fildl
aam
mov
jecxz
sub
mov
shl
pop
test
shrl
mov
xchg
inc
pushf
xor
add
push
inc
test
insl
bound
leave
insl
xor
push
cmc
sbb
mov
popf
int
decl
inc
in
fcoms
sti
jge
mov
lods
inc
leave
sti
mov
push
mov
lcall
or
dec
ret
add
loope
xchg
jp
aam
adc
dec
inc
pop
sar
mov
pop
pop
cmpsl
adc
shll
lds
and
mov
sti
pop
sbb
adc
or
jbe
mov
stos
imul
xchg
dec
mov
fldt
jge
add
ljmp
adc
mov
adc
fstp
addr16
add
mov
out
mov
pop
sub
ffreep
loopne
sub
add
and
fcompl
testl
push
xchg
dec
gs
js
xor
push
xchg
dec
xchg
push
std
dec
cmp
mov
jnp
lods
sub
push
dec
dec
push
jg
rcr
sahf
outsb
pop
rclb
outsl
xchg
mov
test
lahf
iret
pop
sbb
lret
pushf
mov
push
sub
jo
sar
aaa
pusha
jb
inc
add
bound
or
and
mov
repnz
mov
ja
cmp
ret
jp
mov
xor
ret
xchg
pop
insb
dec
lods
xchg
dec
push
cmp
fcoml
mov
jb
mov
dec
jmp
lods
sub
dec
stc
or
mov
sub
stos
xlat
cs
mov
out
inc
and
and
lods
adcl
lds
mov
pop
and
xorb
faddl
clc
ret
in
in
or
in
xchg
cmp
imul
sarb
fs
add
sti
push
filds
sub
lret
and
out
scas
mov
test
mov
call
push
aas
inc
push
pop
pop
jbe
lcall
icebp
imul
iret
xchg
cmpsl
xchg
fidivrl
jb
jae
dec
jl
mov
jb
cmp
push
test
test
imul
and
mov
dec
aaa
push
stc
xlat
adc
xor
or
pop
es
mov
je
mov
cmp
mov
das
jmp
jae
inc
in
daa
add
mov
sbb
adc
jb
outsb
fwait
push
jo
fwait
cmpl
and
mov
inc
jp
mov
out
jecxz
and
cltd
adc
push
mov
cmp
dec
and
mov
ficompl
ds
iret
daa
inc
jmp
xchg
pop
sub
sub
pop
sub
mov
mov
das
xor
cmp
outsl
mov
pushf
jb
xchg
out
clc
mov
xchg
sbb
jle
insl
add
mov
shrb
cmpb
shll
lods
call
dec
mov
adc
rorb
adc
outsl
stc
xchg
mov
xor
cmpsb
push
lcall
add
push
sub
jae
test
sbb
fisubl
scas
nop
dec
push
push
in
lahf
pop
dec
in
shll
push
xchg
es
inc
lods
xor
and
jb
lods
and
mov
sbb
sub
xchg
or
push
add
and
mov
mov
fmull
addr16
xchg
mov
xchg
pop
insb
xor
jno
xor
ljmp
push
or
sbb
push
dec
jge
jb
aad
push
pop
xorl
cmp
dec
jo
add
push
mov
popa
jp
inc
jne
mov
mov
jmp
sbb
pop
sbb
ret
into
xor
mov
std
mov
loopne
int
push
es
inc
pop
icebp
adc
and
jmp
dec
ljmp
jo
xchg
pop
xchg
data16
ss
and
insl
mov
mov
fstl
out
scas
mov
sti
jnp
and
xor
sbb
dec
cmpb
xchg
or
inc
push
repnz
dec
jae
mov
daa
cmc
mov
lods
enter
repz
sbb
xchg
popa
or
cmpsb
bound
stc
pop
add
and
sub
dec
dec
lahf
arpl
push
adc
cmp
cmpsl
out
mov
xor
cltd
mov
cmpsb
test
or
adc
outsb
sub
insb
popl
push
push
xorb
test
jmp
std
ret
dec
cmpsb
and
push
in
inc
xchg
inc
movsl
cmp
jl
xor
xchg
pop
lret
or
add
adcb
pop
movsl
jl
fstl
iret
pop
fldt
sti
call
pop
inc
clc
add
shlb
and
push
or
sarb
dec
mov
xchg
aaa
jb
mov
add
pop
hlt
repz
xchg
jecxz
mov
xor
lods
fwait
outsl
test
lock
hlt
mov
jnp
cs
ret
pop
jmp
pop
imulb
cmp
add
cmp
call
xor
adc
sub
sub
out
xchg
mov
mov
xor
adc
mov
inc
cmpl
pushf
loope
add
repz
imul
dec
decl
imul
xor
push
cmp
cmp
xchg
push
add
movsb
pop
aam
fstps
sbb
cmp
in
aas
andl
shl
xchg
mov
mov
addr16
fstp
into
xlat
cmp
mov
cmpsl
dec
xchg
inc
out
sbb
and
push
xor
xchg
sti
xlat
add
fwait
pushf
sbb
cli
in
lret
inc
lods
xchg
mov
aas
js
stc
cmpsb
out
std
fstpl
dec
mov
fldcw
aas
xor
pop
and
xchg
cmp
mov
add
imul
jbe
sub
jmp
xor
xchg
adc
xor
push
fimuls
js
in
cmpsb
ljmp
adc
jmp
mov
adc
test
xor
xchg
sbb
sbb
les
mov
loopne
jmp
es
jbe
and
mov
add
cmpsb
call
mov
divl
cmpsl
sbb
mov
lcall
cs
inc
fldt
es
push
into
xor
out
xchg
pop
add
in
jmp
rcll
push
cmc
dec
adc
movsb
leave
xchg
sbb
xor
dec
sub
cmpsl
ljmp
out
sahf
jecxz
mulb
mov
jle
imul
dec
aam
mov
into
aas
sbb
mov
add
dec
jmp
inc
es
mov
ficompl
inc
inc
cmp
insb
stc
outsl
fimuls
cmpsb
maxps
out
jb
fldenv
mov
repnz
inc
sub
jg
shlb
pusha
jmp
inc
adc
sbb
push
mov
push
sub
sbb
in
mov
mov
std
repnz
ret
aaa
or
add
sbb
mov
jne
adc
ss
mov
aas
inc
push
mov
jo
jbe
cld
or
and
out
sbb
lcall
push
mov
cmp
push
jae
aas
out
jp
adc
adc
inc
adc
and
pop
fstps
push
ret
ficoms
jae
cmp
xchg
cmc
cmpsb
xor
xorb
lret
out
in
mov
repnz
add
pop
ret
repnz
jo
lret
inc
ss
fisttpl
aaa
imul
aad
mov
pop
stos
fs
adc
fcomps
jb
hlt
mov
dec
int3
repz
adc
mov
pop
adc
and
push
jb
iret
xchg
jnp
cli
rcrl
pop
stos
sub
mov
inc
mov
fst
ret
mov
sub
add
mul
adc
out
aas
add
imul
inc
push
stos
scas
mov
popf
sbb
pop
arpl
sub
xlat
stos
stos
xchg
idivl
test
lret
cli
sbb
iret
sub
and
fwait
fs
adc
xchg
push
and
call
cmp
out
loop
inc
les
or
push
push
lahf
hlt
inc
sbb
mov
leave
jns
push
xor
in
inc
sbb
jnp
pop
nop
int3
jns
pop
hlt
or
shr
inc
in
repz
cmpl
add
cmp
inc
scas
repz
popf
in
ficomps
andl
ficomps
fstl
pop
or
pusha
out
sub
fidivrs
pop
int
adc
xchg
daa
push
stc
sbb
mov
jnp
sbb
mov
imul
mov
add
jns
das
adcb
cmp
add
adc
jnp
test
xchg
arpl
pop
mov
fiadds
cmpsb
inc
adc
cld
test
cmpb
ds
aaa
aaa
subb
loop
inc
cltd
adc
push
jl
pop
push
in
and
sbb
int
xor
sarb
inc
mov
cmpsb
push
xchg
js
mov
pop
sti
daa
jb
push
fsubrp
fsubrp
jne
xchg
or
les
sub
pusha
js
dec
push
fsubl
imul
rclb
es
es
aas
call
sbb
sub
xchg
cmp
or
xor
mov
ret
inc
pop
repz
cld
pop
icebp
sbb
lahf
into
les
loope
out
aas
mov
rolb
xchg
and
and
xchg
dec
sub
lods
and
aam
pop
rorb
xor
push
and
mov
xchg
mov
lds
in
or
pop
ror
flds
arpl
sub
or
mov
xor
sbb
jmp
aad
xchg
bound
sub
inc
cmp
in
xor
daa
add
push
add
push
mov
adc
push
jne
rolb
clc
dec
mov
adc
addl
xchg
arpl
test
cmc
mov
mov
xor
push
ja
icebp
adc
lcall
mov
mov
aam
clc
pop
push
mov
in
xchg
cli
add
inc
pop
push
sbb
movsl
pushf
mov
iret
mov
inc
adc
in
mov
sub
sbb
insl
jmp
push
jns
jb,pn
lea
imull
ret
pop
es
jmp
mov
fistpll
jno
fsubrs
int3
cmp
xchg
cwtl
push
aam
adc
rcrb
pop
pushf
dec
jp
sub
adc
or
and
loopne
std
mov
dec
dec
popa
mov
std
inc
filds
cmpb
out
xchg
daa
adc
pop
icebp
outsb
je
jp
dec
xchg
or
push
xchg
decl
hlt
ret
clc
stc
pop
scas
je
in
xor
rclb
stos
loope
mov
popa
arpl
cli
sbb
popf
pop
cmp
lret
sub
and
pop
jb
jne
jbe
loopne
sbb
sti
add
outsl
out
sub
sub
jae
shr
js
sti
cmp
mov
mov
jl
sbb
mov
fdivrl
leave
fdivrs
push
or
enter
jecxz
or
ret
or
loopne
pop
sbb
jbe
lret
sub
out
mov
add
insl
nop
or
lods
sbb
mov
dec
pop
jne
fisttps
sub
pop
jle
sbb
str
and
mov
add
and
mov
stos
es
and
ljmp
repz
push
fs
sti
subl
pop
sbb
push
xchg
xchg
jg
pop
fsts
cltd
or
xchg
rcr
mov
mov
xor
mov
mov
or
and
out
fnsave
shlb
pop
dec
mov
test
in
dec
xchg
mov
inc
cli
addl
push
sbb
pop
stc
cld
movsb
test
pop
pushf
add
mov
jmp
fcmovu
lahf
mov
xor
sub
xchg
shlb
sbb
fucom
pop
inc
xchg
insl
adc
xchg
dec
dec
sbb
inc
clc
push
dec
xchg
rol
push
loop
lods
push
xor
fildl
jmp
sbb
or
rcl
stos
fcoml
cmpsb
xchg
mov
jo
inc
lahf
jno
test
cmc
fisubrl
ds
mov
imul
cmpsb
ret
and
mulb
scas
es
push
addr16
stos
cld
push
inc
adc
mov
dec
cmp
pop
jmp
xor
lods
mov
or
call
inc
movsb
xor
adc
out
mov
fwait
imul
vmwrite
sahf
jl
mov
adc
jp
and
aad
mov
inc
sti
inc
mov
mov
mov
mov
stc
push
sbb
rcr
sub
adc
adc
sbb
xchg
and
adc
rcrl
dec
jbe
sub
xchg
repnz
jae
xor
cmpsb
push
dec
hlt
sbb
mov
mov
popl
pop
sub
mov
jne
loop
enter
fsubrl
scas
out
pop
je
cmc
xchg
inc
cmp
es
idiv
aam
xchg
push
mov
roll
xchg
xchg
jl
insb
or
outsb
push
fldt
jg
das
or
cmp
repz
add
xchg
jle
cwtl
cmc
mov
cmp
mov
sub
inc
js
fsubr
imul
movsl
loope
mov
add
pop
mov
ret
push
cmpsl
xchg
mov
and
pop
xor
push
fwait
pop
arpl
adcb
mov
repz
out
inc
xchg
jmp
xchg
popf
scas
fabs
mov
mov
clc
pop
loope
adc
and
and
ja
cmp
outsb
mov
pop
xchg
es
xchg
inc
stc
bound
cmc
jns
enter
out
xchg
insb
and
fbstp
mov
into
les
aas
repz
andl
out
xchg
movsl
mov
jno
fadds
push
mov
cs
bound
add
in
imul
addr16
aaa
scas
sub
inc
outsb
stos
push
add
popa
jg
data16
fists
movsb
cli
jne
jb
movsl
xchg
nop
cmp
icebp
pop
lret
aam
cmc
xor
jae
shll
push
mov
les
sbb
cmc
adc
out
into
rcll
cmp
pop
loopne
arpl
xlat
cmp
adc
push
sbb
aad
shlb
pop
xor
hlt
ja
daa
repz
jae
in
ss
in
and
push
pop
xor
sub
pop
add
mov
or
push
leave
jecxz
test
dec
and
cmpl
sahf
fnstcw
ds
test
pop
out
adc
test
stos
dec
in
sahf
sahf
outsl
fwait
sbb
sub
outsb
xorb
rorb
xor
mov
push
jb
insl
jbe
mov
push
lcall
sbb
jb
je
add
mov
mov
jbe
shrl
fwait
cmpsl
mov
dec
mov
pop
in
rol
pushf
andb
addr16
xlat
inc
or
mov
fcoml
mov
jbe
push
push
xchg
pop
data16
ss
push
inc
mov
ss
in
test
ret
ret
adc
pop
lcall
gs
dec
aas
aas
pop
loope
ret
insl
test
xchg
movsl
sub
in
sub
push
mov
outsb
pop
mov
divl
sbbb
adc
sbb
lds
arpl
cmp
bound
fsubl
rcll
jg
jp
push
insl
cli
imul
dec
insl
icebp
pop
hlt
aad
pusha
inc
sub
jo
mov
pop
mov
sahf
xchg
pushf
add
aaa
out
cltd
repz
sub
sub
dec
out
xchg
repnz
cmpsl
repnz
popa
jle
xor
int
pop
mov
cmp
mov
mov
sub
mov
jns
roll
je
pushf
popa
negb
outsb
xor
dec
inc
icebp
out
sahf
insl
daa
xor
bound
pop
xchg
out
inc
repz
and
loopne
je
xchg
fisubs
sar
es
inc
mov
push
inc
add
pop
bound
mov
dec
ljmp
sti
daa
out
mov
push
sahf
mov
outsb
rcrl
dec
adc
sub
loopne
mov
lods
cmpsl
or
and
push
push
adc
out
imulb
and
lds
sub
insl
ja
adc
ret
push
scas
sub
pop
push
lea
ljmp
pop
mov
dec
lcall
decl
mov
jo
mov
ret
sub
and
call
stc
mov
dec
adc
xchg
pop
dec
pushl
stc
xor
leave
data16
jmp
arpl
xor
leave
push
in
and
cmpsb
sbb
aam
cmc
ljmp
add
pop
dec
outsb
adcb
push
cmp
cmpsb
add
jbe
jmp
pusha
lret
ljmp
shrb
cmp
sti
push
sub
in
inc
cmpsl
adc
int
test
xchg
push
inc
aaa
imul
daa
jecxz
or
sahf
mov
pusha
ljmp
pop
pop
out
pop
in
pushf
ljmp
mov
ja
pop
ljmp
jne
pop
mov
xor
pop
loop
xchg
xchg
mov
mov
and
sbb
cli
jl
gs
cmp
jns
cli
loop
dec
idivb
push
insb
arpl
ds
movsb
or
xor
repnz
or
ret
scas
cmpsl
pop
push
jmp
and
cli
nop
mov
mov
fistps
lret
repnz
iret
jno
jbe
mov
mov
and
mov
mov
enter
fstps
inc
sbb
push
pop
and
push
cmpsb
dec
mov
out
push
or
leave
movsb
pop
or
pop
orl
add
insl
aam
dec
jle
sbb
push
out
rclb
mov
adc
scas
sbb
cs
jmp
rcrl
xchg
hlt
fsts
sub
out
out
jno
jmp
icebp
xor
mov
push
xlat
and
mov
popf
push
dec
push
cmpsb
loop
mov
adc
mov
sub
xchg
push
incl
testl
or
xor
mov
lret
orb
lret
int3
cmp
cmp
inc
adc
sar
hlt
add
push
mov
or
inc
cmp
insl
je
pushf
pop
int3
pop
adc
bound
xchg
fs
js
mov
data16
pop
pop
and
lcall
push
cmp
ret
mov
pop
lock
mov
insb
ret
xchg
call
cmpb
nop
lret
cmc
pop
lret
push
sbb
jp
jmp
xchg
shrl
int3
leave
xor
into
add
or
xchg
sub
in
xchg
push
push
aas
mov
sti
xchg
mov
push
xor
cwtl
test
aam
gs
mov
rcr
outsb
popf
mov
ja
jbe
and
sbb
push
push
lret
negb
repnz
dec
std
bound
cmpsb
jmp
mov
add
sbb
pop
jmp
loopne
mov
shll
jae
rcrl
or
es
lret
loopne
fs
movsb
cmpsb
sbb
andl
sar
aas
jle
cmp
pop
movsl
push
jno
movsb
mov
sbb
lods
xor
and
dec
xchg
movsl
loopne
xchg
push
insb
xor
shlb
bound
adc
cmp
ret
mov
adc
push
pop
xor
out
cltd
scas
jne
addr16
xor
inc
dec
test
cli
inc
outsb
xchg
js
inc
test
outsl
ret
or
mov
jne
pushl
out
mov
lock
mov
insb
fisttpl
lds
ljmp
jmp
pop
adc
mov
fwait
adc
ljmp
or
sub
dec
aas
jmp
stc
in
cmc
cmp
pop
std
xchg
mov
jmp
mov
xor
call
call
arpl
mov
xor
jmp
or
pop
mov
iret
dec
mov
outsb
inc
je
push
adc
xchg
or
xchg
lock
shrl
cltd
dec
mov
xor
cltd
mov
cli
pop
jae
ja
fs
in
jmp
sub
jecxz
sahf
std
dec
mov
add
gs
insl
pushf
imul
outsb
aaa
nop
xchg
sub
adc
push
sub
in
rorb
sar
ljmp
popa
jmp
ss
or
mov
push
dec
je
sbb
fmuls
dec
mov
call
jno
dec
dec
addr16
jle,pt
shrl
or
xchg
sbb
dec
xor
xchg
sbb
push
fcomps
inc
push
adc
and
cmp
sbb
mov
and
jmp
aad
or
int3
mov
jmp
stos
fwait
add
jp
fsubr
xchg
leave
test
mov
subb
cmp
xor
repz
push
push
rorl
inc
ret
or
imul
sbb
adc
add
out
leave
call
lods
jne
push
cmp
and
mov
or
cmpsb
jg
mov
xchg
adc
adc
fs
push
ret
scas
lahf
pop
in
movsb
mov
mov
jbe
in
mov
push
jno
mov
mov
out
and
xchg
mov
push
add
mov
and
outsl
dec
outsl
stc
add
roll
pop
idivl
lret
adc
push
dec
outsl
stos
pop
push
mov
add
mov
roll
push
inc
sub
inc
fdivl
rcll
xchg
es
xlat
inc
sbb
push
aas
sub
mov
stc
scas
aaa
ret
gs
pop
push
and
push
or
mov
aam
test
add
mov
push
and
test
hlt
add
xchg
xchg
loope
add
xlat
int
jle
push
add
popa
jbe
sub
fxtract
push
lds
insl
cli
mov
into
mov
push
lds
or
in
inc
popf
cld
fisubrl
icebp
call
pushf
outsb
cli
push
cmpsb
cs
sbb
xor
pusha
loop
sub
pop
push
rcll
hlt
cmp
xor
mov
cli
ljmp
push
cmpsb
shr
push
xchg
sub
sub
dec
pusha
cmp
pusha
xor
sbb
and
xchg
inc
xchg
pop
or
lcall
sti
cmpsb
in
jbe
movsb
pop
adc
mov
xor
or
test
sub
fdivs
mov
sub
push
sbb
fs
repz
mov
and
jb
and
movsb
jmp
xor
cmp
out
pop
push
or
std
inc
mov
xlat
mov
and
mov
mov
fs
imul
sub
movsl
mov
and
jne
cmp
push
and
push
call
sbb
xchg
mov
push
lods
inc
push
add
jbe
lea
jl
repz
movsl
push
inc
add
xor
les
xor
push
xor
lret
pop
sarb
xchg
lahf
int3
shll
roll
mov
arpl
xchg
adc
es
push
psadbw
icebp
loopne
stos
fwait
sahf
test
add
sti
jge
push
xor
dec
push
and
in
repnz
fnstsw
xchg
and
mov
sbb
in
cmp
jbe
inc
stos
aam
std
and
aam
xor
jge
mov
mov
jno
mov
sub
out
mov
stos
sbb
lret
repnz
int3
mov
jecxz
std
in
insl
mov
add
push
mov
out
dec
loop
das
mov
push
sti
clc
test
sub
movsb
inc
int3
pop
int
sub
gs
jp
adcb
dec
and
push
inc
add
xchg
aas
pop
cmpsl
pop
or
fisubrl
out
or
xor
xor
jle
loope
push
xchg
pop
into
mov
dec
cmp
push
shl
jmp
jbe
movsb
int3
xor
push
pusha
mov
ret
lods
pop
pop
or
cld
icebp
aaa
test
mov
and
cwtl
lcall
xchg
outsl
cmp
push
fnstcw
ljmp
sbb
cwtl
jecxz
mulb
push
sbb
push
insb
inc
pop
out
addr16
dec
dec
je
sbb
rolb
int3
int3
imul
push
mov
sub
mov
and
or
pop
inc
mov
roll
mov
push
enter
add
pusha
addb
xchg
bnd
push
or
pop
push
sub
repz
sub
add
test
icebp
inc
sahf
pusha
dec
rclb
mov
icebp
das
and
call
cmp
popa
mov
cli
ja
sbb
popf
dec
arpl
dec
into
xor
xchg
loopne
fmull
cmp
fdivl
shrb
ret
call
pushf
inc
ljmp
mov
cmp
mov
push
loop
scas
or
push
jnp
rorl
ja,pn
pop
mov
sub
ficoms
lods
dec
push
xchg
pop
add
sub
dec
inc
mov
bound
pop
sbb
mov
pop
cmp
mov
arpl
out
rcll
loope
bound
dec
pop
dec
cmp
adc
cmp
roll
mov
push
and
sahf
jb
out
outsl
sbb
cld
dec
sahf
mov
and
sbb
xor
stos
xor
cmpsb
lock
mov
adc
adc
add
xchg
cs
xor
out
rclb
pop
pop
push
or
inc
into
jmp
pop
aam
imul
sbb
hlt
xor
into
inc
adc
arpl
pop
sub
sbb
imul
push
cmp
sub
nop
xchg
in
outsl
push
mov
jmp
dec
jmp
hlt
clc
stos
adc
in
frstor
call
out
cmp
int
lods
std
fildll
jl
adc
orl
add
das
xchg
fs
fimuls
jmp
sub
sbb
ljmp
jo
push
jns
sub
mov
rolb
mov
jbe
sar
add
cmp
lahf
push
push
push
push
gs
pop
jmp
jp
sub
xor
inc
xor
loop
clc
push
sbb
sbb
xchg
mov
cmpl
int
xor
das
ja
cmp
xchg
nop
push
das
cwtl
daa
mov
and
test
mov
adc
xor
and
xor
inc
push
in
inc
jae
icebp
lret
sahf
sbb
clc
and
jmp
les
shlb
mov
cmpsb
fistl
jo
cmpsl
in
insb
fistpll
dec
dec
scas
imul
xchg
push
call
mov
and
jne
xchg
arpl
or
cmpsl
and
inc
or
pop
jmp
xchg
jmp
data16
sub
leave
sub
sbb
stc
or
add
sbb
pop
movsl
mov
test
popf
sbb
pop
sbb
add
mov
in
decb
adc
lods
mov
push
mov
outsl
fstl
and
in
pop
stc
mov
xchg
adc
push
adc
lods
adc
xlat
pop
or
jp
insb
xorb
sub
sub
jg
loop
mov
or
lods
add
xor
and
push
loopne
jmp
andb
and
push
bound
lret
shll
int
adc
push
cmp
sub
add
cmp
dec
popl
js
jne
stos
sub
hlt
pop
xor
fnclex
cli
dec
sbb
add
dec
mov
cmpsb
mov
jb
fnstsw
pop
mov
fisttpll
scas
jge
andb
sub
xor
mov
ljmp
mov
pusha
not
fwait
pop
les
mov
out
jmp
pop
sub
or
and
jae
sbb
clc
pusha
sub
inc
pop
fdivl
sar
aaa
and
fsts
loopne
pop
dec
jge
aas
aaa
jae
pushf
add
fs
lods
or
hlt
jae
daa
aaa
daa
and
in
negl
in
sbb
and
repnz
push
jg
pop
mov
jge
adc
push
add
pop
xchg
sbb
xchg
sub
sti
fldcw
xor
dec
fsubrs
test
adc
adc
push
xor
out
jno
sti
dec
sbb
push
lret
out
mov
sub
lds
lock
jo
movl
jl
iret
xor
fs
push
push
aad
out
jg
adc
xchg
insl
fcoms
mov
ja
lahf
mov
inc
fcmove
dec
cmpsb
rolb
add
mov
xchg
xor
sub
sbb
test
push
lcall
mov
and
arpl
mov
push
xchg
sub
cs
sahf
dec
ss
out
jne
pop
dec
stc
inc
and
movb
test
das
pop
adc
fists
pop
push
mov
push
mov
pop
add
lds
outsl
mov
mov
push
push
pop
inc
cld
xchg
xchg
sbb
xchg
cli
pop
mov
mov
and
sub
pop
fsubl
leave
xor
mov
push
mov
adc
push
jb
cld
lea
cli
mov
xor
add
push
sbb
test
xchg
jb
jmp
jnp
jae
adc
addr16
pusha
ljmp
inc
and
push
cs
xchg
pop
stos
push
mov
enter
xchg
and
sub
cmp
cld
pop
loop
xchg
pop
xchg
mov
inc
pop
in
push
aas
lea
mul
jno
sbb
daa
sub
sub
or
pop
xchg
roll
mov
js
subb
lret
aas
jns
imul
bound
arpl
fxtract
fwait
push
aad
cmp
popf
cmp
mov
jns
inc
les
inc
or
sbb
and
pusha
push
dec
idiv
lods
xor
cmp
mov
dec
xlat
mov
push
call
imul
adc
sbb
inc
xchg
and
data16
ret
dec
add
insl
out
test
sbb
movl
shlb
jae
push
and
adc
jge
into
sbb
push
sti
pop
sub
lds
add
scas
push
add
inc
cmp
ljmp
rol
sub
jae
sub
nop
cltd
sbb
sbb
adc
aaa
cmp
jbe
cmp
daa
rcrb
jnp
mov
jg
out
and
sbb
xor
imul
loope
lods
mov
mov
fisubrl
xchg
std
daa
leave
repnz
mov
sub
adc
add
cmc
ljmp
lret
mov
add
imul
aad
push
lret
push
lock
stos
js
iret
mov
add
test
cmp
lods
cld
leave
les
jmp
and
fsubrs
mov
and
faddl
inc
lods
xor
or
and
mov
and
aas
xlat
adc
jmp
and
add
mov
cmpb
fwait
xchg
add
lcall
mov
and
jmp
xor
inc
and
inc
mov
dec
inc
shl
pop
xchg
mov
loopne
pop
bound
xchg
jmp
inc
pop
shlb
push
xor
inc
mov
mov
ret
clc
les
cmc
cmp
add
jle
into
int
in
cmp
ds
add
xor
mov
ds
popa
cmp
rorb
in
mov
gs
and
inc
dec
push
sbb
push
in
add
or
je
and
dec
push
fsubrs
insl
adc
pop
out
loope
stos
cmp
dec
insb
das
movsb
sti
mov
call
xchg
in
mov
fidivs
loope
and
in
imul
or
cld
sahf
mov
in
dec
and
sbb
mov
push
push
sub
das
cmovae
aas
popf
push
jbe,pn
lea
enter
xor
scas
and
jbe
cmp
sbb
cmp
stos
hlt
add
add
es
imul
outsl
pop
ret
mov
mov
adc
loopne
jae
ret
push
mov
mov
and
inc
mov
xor
out
les
mov
cmp
push
or
or
insb
mov
add
jnp
aas
push
shlb
and
cld
and
sub
shrb
cmc
outsb
aas
lock
and
fwait
loopne
mov
mov
dec
sub
stos
push
sbb
ljmp
movsb
scas
xor
cmpsl
and
test
pop
or
rorb
test
icebp
stc
and
pop
loop
mov
int
cli
pop
dec
and
roll
movsb
mov
push
or
inc
cmp
ss
icebp
and
adc
ss
repnz
sbb
dec
xor
pop
fnstenv
ljmp
sahf
xchg
mov
mov
sbb
in
adc
mov
lods
xchg
dec
push
xchg
shrl
cmp
or
dec
lods
inc
mov
movsl
hlt
sbb
aad
lahf
lea
sub
and
ljmp
loopne
std
push
in
sub
leave
dec
inc
stos
sbb
das
cmc
out
push
cltd
jnp
mov
adc
setge
and
xor
adc
cmp
jecxz
mov
mov
sub
sub
test
idivb
adc
xor
jp
mov
cmpsl
jbe
lahf
mov
push
pushf
ds
mov
pop
sub
sub
pop
mov
aas
and
xlat
jo
movsl
out
push
incl
mov
push
stos
sbb
mov
inc
mull
imul
mov
xor
jo
push
and
loope
jp
into
inc
mov
jmp
mov
movsl
loop
js
call
and
xor
es
out
dec
xchg
push
mov
mov
jmp
jae
cmp
add
in
out
rcrl
push
scas
nop
mov
int3
ror
pop
mov
and
es
jmp
push
sti
jbe
push
xor
pop
pop
shr
cmpsb
and
pop
mov
data16
rcl
sub
les
cwtl
outsb
cli
push
sub
in
ret
hlt
inc
cmp
xor
out
arpl
ret
mov
outsl
scas
out
pop
and
push
xor
add
out
xchg
pop
push
leave
mov
inc
jb
ret
call
jg
inc
movsl
push
lret
or
pop
cld
adc
xor
cld
insl
xchg
xchg
int
sbb
stc
mov
jge
mov
cvttps2pi
jl
push
jecxz
push
cmpsl
movsb
sub
mov
inc
jmp
xchg
sub
add
inc
or
sub
pusha
divb
mov
sub
mov
arpl
adc
lods
xor
sub
inc
sub
loop
sub
jecxz
data16
ret
jae
hlt
or
mov
jmp
loopne
xor
xchg
fmuls
cltd
dec
dec
add
bound
push
aad
add
add
mov
loop
out
out
cltd
ja,pn
clc
fwait
jle
dec
xor
cmpsb
mov
sti
ret
or
jne
fnstsw
xchg
and
mov
jp
jae
in
add
es
xchg
mov
ds
adc
movsl
fistps
adc
imul
dec
decl
ret
imul
sbb
data16
daa
insb
adc
xor
cld
mov
fstps
xchg
add
sub
mov
mov
xchg
dec
mov
adc
sti
pop
jo
das
push
test
push
and
mov
xor
push
fwait
push
mov
cmp
dec
out
or
cltd
or
xor
jne
push
mov
test
testb
sub
push
loope
inc
xchg
push
inc
aaa
aaa
sbb
test
pop
hlt
dec
icebp
sarl
mov
push
in
out
add
inc
mov
mov
daa
add
repnz
cs
adc
cs
cmp
xchg
push
cmp
and
ret
int3
mov
sahf
add
daa
jg
adc
sahf
add
shrb
xchg
pop
xchg
out
xchg
inc
inc
jo
and
shrb
aas
or
cld
fists
jge
push
dec
popa
aas
inc
pop
neg
xchg
cmp
xchg
xor
repz
gs
xchg
inc
xchg
sahf
mov
arpl
dec
out
xchg
fcmovu
cmpsl
aas
fmull
lahf
xchg
adc
mov
loope
les
out
roll
mov
pop
aaa
mov
xchg
arpl
cvtps2pd
sahf
testl
mov
shrb
sub
xor
incl
jno
cmp
jecxz
bound
adc
inc
js
mov
dec
and
das
pop
inc
jbe
push
or
xchg
in
mov
lret
sbb
pop
or
mov
in
daa
or
add
stos
leave
cmpsl
jno
inc
xor
xchg
adc
stc
into
aam
pop
aas
push
outsb
popa
std
or
iret
movsl
mov
jbe
js
xchg
imul
lock
jbe
lock
add
push
push
push
or
nop
ret
push
push
xchg
cli
lock
les
adc
frstor
mov
rclb
aad
out
adc
or
sbb
out
push
aad
mov
dec
ret
in
sub
inc
data16
add
rcrb
cld
mov
roll
fwait
mov
cwtl
sbb
dec
jle
lahf
pop
in
mov
insl
xchg
mov
jle
xchg
pop
daa
clc
mov
rcl
enter
lods
xchg
mov
and
out
fdivl
xchg
daa
jmp
mov
xlat
or
xor
xlat
imul
shll
test
push
adc
jnp
lods
lret
jae
lcall
sahf
sbb
test
nop
dec
xchg
xor
cmp
adc
lret
lock
push
icebp
jecxz
stos
and
jae
xor
push
sbb
loopne
clc
sbb
sub
fmuls
inc
inc
inc
mov
inc
mov
out
mov
pop
lret
dec
lock
stc
mov
call
xor
sbb
sub
xchg
adc
clc
orl
mov
test
inc
aam
rol
rorl
jl
inc
sbb
test
mov
rorl
hlt
adc
sbb
dec
cltd
jecxz
mov
out
or
push
ficompl
mov
jmp
stos
movsl
lds
mov
pop
cs
aaa
jb
aas
test
sarl
and
and
ja
add
rcll
cmp
jl
sbb
mov
fs
cmpsb
jae
jg
aaa
sub
fisubs
mov
pusha
inc
and
xor
xlat
adc
jl
int3
aam
and
inc
cld
jg
nop
cld
jae
lds
stc
out
call
push
or
push
and
or
lods
lock
inc
adc
gs
js
xor
xor
xchg
andb
enter
out
pusha
and
shl
add
in
and
repz
faddl
jns
out
cmpsl
dec
fdivl
das
jmp
xor
ljmp
lcall
pop
cwtl
adc
repnz
adc
out
adc
fdivl
or
jne
push
outsl
in
inc
sub
pop
jle
stos
dec
aam
int3
inc
xor
mov
inc
out
pop
aas
das
ret
movsl
aaa
fstl
cld
inc
shll
and
mov
loope
insb
push
or
inc
mov
imul
jae
and
insl
daa
push
movsl
add
outsl
ficoms
xchg
mov
jbe
jecxz
arpl
xchg
aas
mov
xchg
cmp
add
push
lods
mov
dec
cld
xchg
inc
jbe
jecxz
js
fsubs
inc
pop
ret
mov
test
push
imul
ljmp
push
cltd
lds
test
or
mov
jge
sbb
fucom
xlat
mov
rol
cmp
xor
out
or
pop
dec
lods
mov
in
scas
andl
push
or
dec
mov
cmp
dec
mov
or
cmp
incb
decb
sub
mov
imul
xor
fstps
mov
sub
sub
cli
push
andl
mov
imul
outsl
sub
dec
sub
call
ret
enter
stc
sbb
inc
mov
fwait
js
orb
inc
lea
or
pmulhw
and
jne
jp
out
pushf
aad
cmpsl
outsb
subb
sub
clc
sbb
in
xchg
push
cld
cmpb
cwtl
dec
mov
add
xlat
pop
imul
repz
into
pusha
insb
aad
mov
and
mov
inc
sahf
add
xor
mov
ss
push
sahf
insb
daa
ss
inc
xor
rorl
pop
jl
and
xor
mov
or
xchg
inc
dec
int
sbb
adc
add
ds
push
jge
push
or
push
fwait
mov
cmp
push
out
or
in
cwtl
cmp
xor
push
ljmp
sub
ret
es
sbb
jle
rcrl
jae
mov
in
pop
push
xchg
outsl
sub
mov
std
jp
fimull
mov
frstor
push
in
popa
xlat
mov
stc
ja
push
loop
psubsb
sub
xor
jo
cmp
ror
sbbb
mov
test
repnz
lods
and
out
rcrl
imul
push
mov
adc
fwait
mov
mov
int
into
popf
push
mov
pusha
mov
xor
adc
mov
mov
inc
cmp
mov
fisttps
add
lds
sbb
mov
inc
xchg
cmp
ftst
adc
mov
or
xorb
nop
or
in
pop
jge
mov
jmp
daa
adc
adc
push
shrl
and
daa
and
pop
add
dec
jle
lds
pop
xlat
movsl
imul
fdivl
jmp
lcall
sub
inc
insl
rolb
aam
jecxz
ret
or
xor
fsubrl
push
mov
insl
cmp
pop
cmc
rcl
popf
inc
ret
cmp
push
xor
sub
leave
mov
or
pop
cmp
cmp
in
push
jg
mov
pop
push
addb
fcmove
lea
pop
ljmp
lods
pop
pop
jae
cltd
mov
push
pop
inc
pushf
aas
mov
and
dec
xor
add
adc
or
iret
ljmp
andl
and
dec
or
xchg
mov
mov
sbbb
test
test
pop
mov
mov
rclb
psrad
fstl
ret
cmp
aad
es
or
or
jle
xchg
roll
dec
hlt
mov
sbb
outsl
add
jno
popa
dec
mov
sub
inc
in
pop
shlb
cmc
in
sbb
movsl
aad
mov
and
push
mov
les
fwait
pusha
mov
out
sbb
fstpt
xor
cs
lret
repz
xlat
fcmovbe
push
mov
ret
xchg
sub
aad
xor
push
clc
mov
pop
cmpsl
fisubrl
out
out
xchg
and
pop
cmp
cmp
in
aad
idivb
sub
or
inc
adc
push
popa
sub
adc
xchg
add
aam
inc
mov
mov
push
sub
movsl
stos
cs
imul
sub
pop
push
adc
cmp
popf
cmpsl
or
js
mov
sub
inc
mov
inc
mov
mov
sub
mov
sub
cltd
inc
imul
shlb
lock
push
and
jmp
or
jns
mov
pusha
imul
lds
std
push
in
fdivrp
and
mov
add
pop
dec
scas
scas
and
xchg
and
pop
mov
inc
into
scas
imul
leave
bnd
loopne
call
std
fldcw
mov
test
les
imul
ds
adc
xor
add
faddl
or
and
sub
mov
jmp
test
mov
pop
sbb
repnz
mov
inc
sub
pop
mov
sbb
testb
cmp
movsb
ret
mov
das
lods
mov
dec
fldl
jg
pop
adc
add
sbb
mov
sbb
adc
push
xchg
xor
popl
and
cld
mov
jmp
aas
sahf
mov
jge
mov
push
push
divb
lds
stos
lret
add
addr16
lock
pop
shlb
jne
xor
mov
sbb
xchg
cmpsb
push
push
scas
sub
push
fmull
sbb
and
icebp
mov
cmp
sbb
inc
sub
cmp
addr16
lock
sub
sub
dec
call
test
nop
jno
and
xchg
lret
pop
repnz
dec
pop
pop
mov
dec
sbb
mov
leave
and
add
xor
enter
push
andb
push
decb
mov
subb
xchg
cwtl
mov
jbe
add
bound
mov
mull
stc
lods
js
scas
add
or
adc
xchg
ret
mov
xor
test
lret
popa
adcb
mov
mov
or
rcrb
adc
jmp
pusha
jmp
xor
sub
xchg
fisubs
imul
data16
mov
repz
mov
inc
mov
cltd
or
or
ret
mov
in
enter
xchg
in
test
ds
insb
dec
icebp
sub
xor
xor
inc
jl
into
adc
xchg
push
sbb
div
nop
repz
xchg
gs
in
stos
mov
dec
sbb
lret
rcrl
lods
pop
sub
decb
and
cltd
push
popa
push
in
xchg
mov
jl
mov
or
jmp
xor
or
mov
pop
cli
xchg
pop
mov
pop
add
jmp
insb
in
stos
lds
mov
sub
aam
in
aaa
sub
imul
int
out
pop
xor
push
push
pop
mov
leave
lds
mov
bound
xor
ret
cld
movsl
pop
xor
sbb
add
stos
scas
into
cmpsb
mov
mov
pop
out
push
or
xchg
aam
push
fsubrl
dec
hlt
cs
popf
loop
inc
pop
xor
adc
pop
mov
ss
jno
lds
aam
mov
std
cli
aam
push
out
add
fld
jp
lret
in
push
and
fistpl
cmp
sbb
push
cmp
stos
mov
cwtl
insb
cld
xchg
mov
inc
inc
adc
adc
jno
xor
cmovge
xlat
sbb
and
sbb
aad
mov
mov
cmc
sub
push
sub
lcall
jp
aam
stos
or
mov
xor
aam
stos
insl
lock
add
nop
cli
sahf
and
mov
xor
ret
ffree
pusha
push
out
jl
jl
xchg
sub
lds
sti
and
adc
mov
mov
fcoms
rorl
xchg
ljmp
outsb
out
orl
int
pop
jmp
hlt
ljmp
insb
or
jmp
mov
mov
mov
adc
out
adc
les
add
cmp
scas
psrad
xchg
aam
in
icebp
jnp
fnstcw
cmp
inc
loope
dec
movsb
xor
xchg
xchg
cmpsl
mov
int
or
or
imul
popa
fadds
cmp
lods
mov
das
or
pop
and
and
ret
and
mov
xor
icebp
and
sbb
pushf
outsb
add
jnp
mov
mov
sbb
add
mov
push
sub
sbb
movq
and
cmpsl
pop
push
das
icebp
mov
orb
cmp
mov
mov
aaa
and
mov
jge
inc
mov
mov
mov
mov
imul
pop
xor
jo
or
mov
jmp
movsb
xorb
pop
mov
lods
sbb
ret
in
xor
loope
aad
mov
dec
cmp
sub
mov
cmp
xchg
shl
ljmp
pushf
dec
adcl
mov
or
fisubrl
push
daa
out
sbb
pop
mov
cs
mov
pop
push
mov
xchg
addr16
xchg
mov
out
cmp
pushf
movl
fwait
mov
inc
mov
cmc
ret
xchg
xor
or
add
sbb
mov
pop
mov
je
mov
fiadds
leave
cmpsl
andb
mov
movsb
out
daa
jg
in
inc
test
jg
inc
mov
sbb
xchg
shrl
adc
sub
aaa
test
xchg
lahf
mov
xchg
pop
xor
mov
add
data16
fcoms
inc
cmpsl
push
icebp
addb
push
jb
mov
es
inc
leave
dec
ljmp
jo
xchg
incb
ljmp
addb
popa
hlt
or
push
insl
dec
add
cmp
outsb
lcall
sbb
or
jno
sub
adc
out
jmp
cmp
pop
or
push
mov
cltd
jo
pop
loop
stos
sbb
incb
bound
js
out
cmp
jo
mov
inc
fldcw
lods
jl
stc
in
fiadds
ljmp
push
out
hlt
outsb
stos
test
repnz
in
and
mov
imul
insb
fisubrs
lods
popf
fbstp
lahf
sqrtps
fdivrs
cmp
mov
sbb
jo
cld
pop
mov
in
inc
test
mov
inc
and
pop
ss
loope
jg
dec
inc
pop
sub
mov
addr16
add
sub
and
data16
inc
jo
loop
cmp
and
test
std
flds
nop
or
mov
inc
adc
mov
adc
push
imul
jnp
mov
inc
mov
sbb
stc
rorl
or
jmp
mov
jp
out
hlt
xor
lock
lahf
jecxz
in
lret
and
and
push
xchg
xor
loope
pop
div
stos
push
ret
sbb
mov
loop
fdivl
popf
dec
cmp
insl
push
jb
xchg
lock
addr16
push
mov
cmpsl
mov
pop
adc
dec
in
push
push
test
jp
test
leave
mul
ljmp
cld
and
mov
movsb
addb
testb
mov
and
repnz
or
sbb
sub
pusha
fwait
add
call
rolb
popf
jecxz
push
mov
add
fisubrs
sub
add
aaa
lock
jmp
cmpsb
add
or
icebp
mov
das
and
shll
shll
sub
add
xor
movsl
addr16
mov
in
cltd
mov
add
loopne
add
mov
decl
mov
decl
xor
das
or
cmp
aas
adc
in
xor
shll
pop
sti
cmp
negb
and
std
inc
das
mov
es
lret
andl
xchg
sbb
cmpsb
es
in
sub
and
and
popa
cld
out
add
cli
mov
loop
and
and
or
lea
cmpsw
cwtl
mov
popf
scas
sar
push
cmpsl
out
add
js
fisubrs
out
addb
loope
out
cld
ret
in
out
cld
roll
mov
aam
pop
mov
xor
mov
jecxz
push
mov
sbb
and
sub
mov
cmp
ds
or
stc
xorb
popa
and
dec
dec
or
or
sub
ret
dec
psubsw
das
sub
inc
sub
in
idivl
mov
sbb
pop
jmp
lock
inc
in
les
fdivs
scas
rcrl
lret
push
stc
jbe
push
ret
popa
jb
push
cmp
smsw
mov
jmp
ds
mov
cmp
negl
lret
addr16
pusha
xor
bound
cli
bound
gs
and
aas
sub
int
test
cmp
mov
sbb
push
jge
je
xlat
loope
fidivrs
sahf
and
or
cmp
adc
jle
shll
push
out
lods
inc
shll
jno
lods
sub
inc
sbb
scas
dec
pop
pop
push
or
and
das
cmp
in
int3
sub
mov
faddl
mulb
adc
pusha
fdivp
enter
popf
int
insb
mov
or
call
lcall
or
xor
rol
inc
in
jne
inc
out
std
add
in
mov
dec
leave
aad
or
fwait
pop
loope
mov
aaa
pop
xchg
pop
add
notl
test
adc
test
leave
leave
inc
lds
insb
ret
sarb
lds
dec
and
outsl
mov
insb
sbb
push
pusha
add
add
lcall
gs
xchg
mov
add
sbb
invd
scas
or
or
and
push
pop
push
or
push
jp
mov
cmp
daa
pop
ret
adc
sahf
push
das
jmp
xchg
cmpb
push
lcall
cmp
loop
adc
pushf
lret
fimull
or
sbb
pop
mov
lret
jne
pop
and
aaa
mov
adc
push
jnp
je
push
fisubs
inc
pop
aad
scas
faddl
xor
idiv
or
mov
incb
xor
and
and
stc
dec
pop
js
das
push
cmp
add
mov
mov
dec
lcall
xlat
ret
push
inc
fimuls
pop
inc
loope
pop
jmp
pop
into
jle
ss
test
rcr
stc
mov
and
jg
dec
cmp
mov
jno
push
pusha
add
sbb
and
sbb
and
mov
sbb
out
fcoml
test
and
or
mov
dec
push
or
imul
push
jg
ret
stc
pop
push
jmp
movsl
inc
stos
push
xchg
andl
pop
add
dec
adc
test
cmc
aam
dec
enter
repz
mov
dec
ds
fdivl
push
xor
mov
cmpsb
js
shrl
shrb
pop
repnz
mov
scas
aam
add
jp
push
int
test
mov
es
dec
jnp
xor
inc
jmp
jl
jle
loop
add
sbb
ss
dec
mov
cmp
stc
xor
sbb
gs
sbb
sbb
repz
cmpsb
mov
lahf
cmp
adc
insl
repnz
cld
loopne
loope
lret
pop
fcmovu
fwait
scas
xchg
mov
mov
rclb
insl
xorb
mov
mov
iret
jge
mov
mov
pop
cmp
dec
cmpsb
adc
push
lret
sub
cmp
xchg
cmp
push
xchg
lea
in
sbb
pushf
adc
adc
mov
mov
aaa
xacquire
imul
sbb
ja
jns
or
stos
cltd
dec
std
pop
jmp
daa
mov
dec
sbb
mov
ror
in
jno
lret
mov
popa
aad
sbb
in
sbb
inc
mov
daa
cmpsl
cmc
aaa
mov
lea
xchg
call
scas
out
lds
insb
mov
je
cmp
mull
or
cwtl
and
mov
repnz
rcrb
adc
inc
inc
test
ja
adc
sbb
cmovp
mov
xchg
push
dec
sub
lds
inc
mov
sub
or
outsb
insl
pop
sub
stos
mov
fucomp
push
add
adc
sbb
mov
daa
sub
loop
sahf
pop
add
mov
mov
xchg
ss
and
mov
sub
les
test
jae
addr16
mov
enter
inc
sti
lcall
inc
addr16
jns
fmull
mov
inc
in
divb
test
leave
aas
and
and
and
add
rcrb
popf
iret
aaa
imul
adc
imul
imul
pop
sub
insl
cmpl
out
mov
xchg
inc
dec
mov
data16
mov
mov
mov
fsubs
lods
inc
adc
inc
push
scas
push
roll
cmpsl
fstps
sbb
cmc
aas
aaa
or
repnz
dec
adc
dec
frstor
sbb
fbstp
dec
xchg
lcall
std
push
test
shll
xor
cmp
icebp
mov
push
inc
jmp
inc
cmp
pop
flds
mov
addr16
dec
lahf
repnz
in
popa
push
mov
shr
or
inc
jmp
sbb
mov
inc
mov
dec
lret
lods
out
mov
jo
add
int3
adc
dec
addb
mov
push
xchg
jl
fsubs
int
mov
sub
jge
stc
pop
mov
sub
push
mov
jno
les
into
mov
mov
sub
jb
popf
fcom
inc
push
lret
adc
ds
sbb
hlt
add
xchg
lods
das
pushf
jle
in
adc
pop
out
jb
jnp
xchg
xor
stc
fisubrl
mov
data16
repnz
jae
stc
xchg
ljmp
dec
push
icebp
push
jmp
stc
scas
xchg
sub
cs
mov
adc
loope
shlb
mov
int3
inc
jno
push
fldln2
mov
xor
scas
sbb
stc
mov
mov
stc
outsb
cld
adc
inc
jp
shrl
sub
hlt
bound
stc
xor
test
push
adc
mov
pop
inc
adc
cmp
fwait
lcall
sarb
cmp
rclb
mov
pop
push
imul
pop
stc
xor
test
adc
jmp
sub
sub
inc
xor
adc
lret
and
mov
xor
test
mov
inc
sbbb
jmp
sti
xchg
inc
xor
shlb
fisttpll
int
fcmovb
xchg
mov
adc
aaa
xchg
pop
mov
and
push
jmp
shlb
mov
jne
mov
jmp
push
jb
imul
call
sbb
test
test
mov
push
or
ficoms
cmp
fcmovu
push
jne
ror
ret
xor
pop
out
adc
or
aam
xchg
xor
fisubl
stc
imulb
push
cmp
mov
jae
popf
inc
sbb
pop
outsb
out
inc
stos
sub
adc
scas
sub
sub
arpl
xor
fstpt
sbb
xor
mov
push
lds
or
rcr
fs
xor
pop
cld
mov
jbe
or
in
mov
rol
xor
push
inc
ljmp
inc
ret
iret
mov
cld
movsl
aad
movsb
jns
or
sub
ljmp
loopne
jns
mov
gs
jae
pusha
push
shlb
adc
mov
pop
outsl
or
into
mov
mov
add
inc
mov
cmp
pushf
mov
mov
jno
xlat
in
lcall
or
stos
rcl
push
and
js
and
mov
mov
mov
sbb
push
cmpsl
mov
movl
dec
xor
and
ljmp
int
dec
cmpsl
xor
lods
fcmovbe
cmp
mov
fbstp
addb
arpl
or
es
xor
in
jo
movsb
imul
outsl
mov
adc
cmp
cli
xor
sub
or
out
add
or
daa
mov
push
and
in
das
push
stc
adc
in
sub
push
mov
out
add
or
dec
cmc
mov
js
push
mov
mov
add
push
inc
jl
leave
outsl
jl
popf
push
inc
mov
mov
cmp
jl
out
dec
jae
inc
add
cmp
mov
insl
loop
mov
jnp
ficoms
mov
out
and
lret
sub
popf
sbb
push
out
mov
xchg
mov
mov
aas
xchg
push
movb
jo
loopne
xor
adc
ja
jmp
push
jnp
pop
les
xor
adc
ss
lods
pop
mov
test
xor
sbb
push
aaa
cmp
repz
jb
dec
shlb
rorb
push
mov
pop
out
roll
mov
mov
mov
or
addr16
shrl
imul
xchg
mov
xchg
mov
loopne
adc
mov
push
and
jnp
loope
mov
pop
adc
lods
jns
shrl
xchg
sti
mov
xor
bound
outsb
andb
mov
mov
inc
cld
or
lds
in
push
push
lock
dec
jns
inc
xchg
adc
pop
add
mov
jp
flds
xchg
out
loop
ss
pop
lea
ret
and
roll
and
ret
inc
mov
icebp
mov
sbb
add
pop
lret
aad
inc
mov
ljmp
push
daa
and
push
mov
mov
mov
movsl
inc
insl
cmp
pop
cmp
cmp
dec
mov
and
fidivrs
repnz
loope
stc
pop
add
push
xor
lret
pop
add
or
sbb
cmpb
imul
cmpsb
sub
call
call
sbb
loop
scas
inc
movsl
frstor
add
cli
lock
lcall
cmpsb
sbb
ds
out
and
xor
cs
add
inc
or
push
adc
fsubs
and
popf
pop
xchg
pop
sarb
dec
sub
cltd
ret
icebp
dec
push
es
imul
cmp
inc
out
es
cmp
scas
out
pop
xor
adc
fs
and
inc
out
push
ret
sub
stc
bound
sbb
loope
jbe
mov
daa
mov
movswl
ret
mov
sbb
lods
xchg
sahf
fstpl
pop
outsb
ss
shr
jmp
add
cs
rol
xor
into
and
push
lea
xor
movsb
push
and
mov
mov
mov
fcmovnb
inc
sub
pusha
scas
adc
ds
sahf
stc
repnz
xor
mov
mov
push
movsb
dec
push
mov
daa
loope
mov
js
or
pop
das
pop
test
xlat
dec
fldt
sbb
sub
loop
fcomps
pop
mov
sbb
out
xchg
push
xor
icebp
pushf
jmp
sbb
pop
xor
xchg
ror
push
push
ret
cld
rol
jge
int3
xor
mov
shlb
mov
sbb
push
outsl
cli
enter
popa
push
sahf
pop
sbb
or
adc
shll
push
ljmp
xchg
or
outsl
adc
hlt
mov
ficomps
xor
imul
filds
adc
stc
stc
mov
inc
clc
shll
mov
cmp
xchg
mov
inc
and
std
jmp
and
inc
pusha
pop
mov
push
adc
inc
xchg
lds
push
decb
je
or
adc
xchg
std
sbb
xorb
enter
sub
jmp
in
rorl
aas
jb
xor
sti
mov
mov
mov
bound
lret
mov
pop
in
gs
push
xchg
fwait
in
mov
fildll
sti
sbb
imulb
mov
ljmp
pop
mov
cmp
out
pop
and
pop
push
sub
add
addl
or
ret
rolw
and
pop
fiaddl
adc
aad
xor
push
jne
aaa
mov
insl
push
or
out
in
mov
rorb
out
push
lcall
push
scas
std
mov
cmp
mov
movsb
daa
nopl
call
mov
fs
adc
ja
popa
and
mov
jno
scas
ss
pop
inc
mov
mov
sbb
inc
daa
inc
sbb
inc
ret
or
lds
inc
sub
jne
sbb
or
sub
mov
mov
pop
ja
inc
out
ja
push
and
fsub
sub
jmp
mov
jge
mov
pop
popf
jecxz
fwait
sbb
lret
lahf
mov
mov
push
adc
ljmp
scas
pusha
loop
loopne
dec
mov
pop
ret
cmp
or
repz
jp
notb
jge
sub
xchg
and
push
test
jb
daa
dec
mov
rorb
mov
test
mov
ret
shlb
push
ja
jle
mov
es
push
pop
inc
inc
push
pop
inc
out
lcall
jmp
es
cmpsb
xchg
mov
jecxz
dec
fs
ret
aaa
ficompl
test
mov
push
repnz
xor
bound
stos
add
movsb
cmp
in
adc
xor
add
lods
mov
jecxz
in
inc
sub
pushf
lret
jecxz
fcompp
imul
pop
pushf
pop
shrl
push
jmp
pop
mov
cs
lret
scas
ror
mov
rcll
sbb
sub
es
lcall
int
out
xchg
sahf
dec
repz
fistpl
cmp
adc
push
into
and
ss
js
xor
push
or
dec
inc
jmp
mov
mov
push
xchg
mov
out
xor
in
les
cs
out
dec
sub
aad
repnz
in
fisubl
add
imul
or
cmp
sbb
mov
stos
arpl
shll
addb
cmc
add
sub
sub
or
pop
xchg
test
pop
mov
out
out
ret
sub
fcom
ds
in
dec
out
cwtl
daa
fcomip
cmp
out
stos
jl
mov
cli
pop
push
jno
jp
add
jg
stc
or
mov
or
aad
xchg
fprem
xor
dec
mov
shrl
dec
xor
ds
push
sbb
lcall
jbe
or
jmp
xchg
dec
jbe
clc
cld
and
imull
scas
jge
je
cmp
jnp
and
divl
or
push
inc
int3
mov
jge
popf
scas
add
mov
push
jl
mov
jno
mov
notb
dec
xchg
cmp
xlat
imul
dec
rcrb
ljmp
bound
inc
std
pop
jecxz
enter
arpl
pop
mov
pop
or
stc
rcll
lods
cmpsb
jb
dec
insl
and
cmp
pushf
push
test
fadd
adc
out
dec
sub
pop
xlat
insl
and
dec
push
pop
outsb
jmp
jp
jl
stos
jecxz
push
ds
push
lret
mov
push
lock
or
je
ljmp
test
test
add
aad
jg
loop
push
cld
fsubs
cmpsb
or
fcoms
pop
fdivr
in
mov
or
daa
aas
fistpl
push
aam
push
loop
into
mov
shll
mov
push
es
or
and
fstp
push
and
xchg
pusha
lahf
xor
divb
jl
adc
cld
add
rcll
pop
daa
sbb
in
or
mov
insb
or
mov
scas
push
cmpb
pop
sub
pop
mov
mov
aaa
iret
jge
add
and
out
sbb
data16
jno
ret
ds
or
cmp
mov
adc
jbe
mov
stos
std
xchg
aam
xchg
daa
push
and
jnp
push
lods
es
inc
and
sub
cmp
xor
imul
add
add
or
int
add
xchg
mull
ret
and
in
sbb
test
add
and
daa
outsb
inc
addl
mov
cmp
mov
loop
xor
int3
aad
cmp
lea
mov
cltd
ljmp
xchg
aaa
shlb
xor
jp
les
sbb
movsb
jle
imul
xlat
stc
dec
mov
dec
mov
es
loopne
and
clc
xchg
iret
call
stos
dec
mov
or
push
jo
cmp
shl
sub
push
mov
arpl
jmp
push
movsb
push
mov
adc
fldenv
rcrb
and
add
dec
and
jp
add
add
insl
sahf
scas
in
xor
or
adc
sarl
pop
and
in
fistps
push
or
lret
mov
jnp
scas
out
or
pop
sbb
dec
xor
xor
ror
mov
xchg
sub
sub
xor
sub
jecxz
mov
push
adc
sub
data16
inc
bound
enter
call
xchg
and
or
fcoms
mov
and
mov
rclb
jo
pop
pop
into
sub
xor
cli
mov
cli
cs
stc
dec
mov
fwait
arpl
push
fdiv
popa
xchg
xor
xor
fnstsw
lods
rcr
in
push
lret
xor
dec
sbb
sbb
pop
gs
popf
mov
or
testl
jle
jae
mov
loop
sbb
sub
lcall
push
sti
pop
xchg
in
inc
xchg
dec
or
cld
sbb
and
mov
adc
cmp
stos
cmc
mov
inc
mov
popl
out
test
dec
lock
in
pop
and
push
adcb
das
subl
mov
out
cmpsb
inc
movsl
movsb
das
pop
in
js
shrl
aas
jle
mov
imulb
out
sub
xchg
sbb
mov
jns
push
arpl
mov
dec
xor
pop
xchg
pop
stos
adc
dec
shrl
xor
xor
js
std
stos
ret
adc
dec
fs
dec
test
ret
addr16
es
cmp
push
sub
lret
ds
bound
popf
push
addr16
jnp
pop
cmp
stos
pop
inc
jmp
and
cmp
dec
jns
push
add
cmp
or
pop
xor
push
movsb
fwait
pop
inc
stc
pop
sbb
xchg
popw
xchg
dec
jecxz
arpl
push
adc
cmpsb
push
mov
data16
js
mov
push
sbb
out
icebp
jo
fistpl
add
cmp
inc
xchg
push
mov
sbb
or
nop
stos
xor
lock
aam
xor
sub
push
mov
xchg
fs
or
pop
inc
sub
push
scas
sub
and
sbb
pop
mov
xchg
xlat
rcl
pop
or
jle
hlt
lods
and
data16
xchg
mulb
sarb
ret
jbe
sahf
imul
cli
je
and
lods
mov
add
push
and
xor
out
lret
cmp
fucomip
test
mov
icebp
aam
adc
decl
lret
xor
mov
xchg
fstpl
push
fstps
cmpsb
mov
mov
out
icebp
addr16
pop
sbb
outsl
arpl
dec
mov
loope
xor
popa
mov
lea
adc
arpl
xchg
movsb
jno
push
aad
inc
sti
bound
ret
dec
mov
loop
inc
sbb
or
mov
movsl
jp
mov
outsl
push
sub
pop
int3
pop
out
xchg
inc
ljmp
sub
ret
stos
sub
lods
xor
mov
insl
stc
popf
or
int
std
mov
aas
and
adc
loop
jg
adc
or
inc
sbb
mov
test
ret
in
sub
subb
pusha
sub
loop
mov
add
cmpsb
mov
xchg
int3
dec
cmpsb
not
pop
sub
xchg
in
add
sub
sbb
mov
jo
sbb
xchg
data16
dec
adc
and
fs
and
lret
mov
inc
adc
jno
dec
or
sub
addb
int
inc
jae
repnz
lds
sbb
mov
xchg
ret
cmp
inc
lea
sub
pop
vpaddsw
push
pop
mov
xchg
dec
lret
push
je
dec
icebp
jo
cmc
or
data16
int
daa
jb
xchg
stos
daa
inc
fldcw
inc
add
cmpl
es
fwait
xor
arpl
push
mov
das
or
push
mov
lret
mov
std
sbb
cmc
adc
dec
push
push
jnp
and
lretw
adc
aas
dec
pop
cmp
jnp
fisubrl
dec
and
arpl
mov
ljmp
push
ret
test
push
arpl
xlat
pop
mov
jl
lcall
sub
mov
inc
loop
idiv
and
or
cmp
stos
add
rcll
jl
es
loopne
lods
jmp
adc
hlt
outsl
aas
inc
scas
inc
loop
scas
cmp
mov
aas
es
mov
jecxz
pop
mov
jg
sbb
lret
adc
xchg
push
jnp
or
imul
mov
insl
sub
mov
popf
and
inc
stos
jle
jmp
pop
sub
movsl
arpl
fmuls
cltd
shl
mov
push
stos
inc
movl
fnstcw
imul
jp
pop
adcb
jb
mov
das
or
into
clc
sbb
xor
adc
loop
or
and
jae
dec
bound
frstor
dec
mov
cmp
mov
in
jl
in
inc
repnz
adc
mov
dec
addr16
shrl
dec
insl
dec
mov
and
sub
dec
outsl
scas
sar
pop
addr16
push
xchg
mov
pop
push
xchg
or
mov
lock
out
hlt
notb
mov
add
sub
stos
jns
mov
movsb
dec
add
imul
adc
loop
or
dec
pop
pop
mov
sub
push
in
addr16
enter
ljmp
hlt
jmp
and
dec
outsl
sub
fsubr
jmp
into
addb
ret
xchg
xchg
outsb
add
push
pop
xchg
ret
call
mov
push
jle
mov
out
insl
jo
rcrl
and
out
adc
imul
je
inc
jb
mov
arpl
xor
add
add
dec
bound
push
cmp
inc
and
sbb
or
inc
out
outsl
inc
jmp
popa
pusha
push
cmp
or
and
xor
bound
daa
push
mov
mov
pop
jbe
pop
mov
gs
push
mov
push
cmp
into
sbb
sbb
mov
xchg
daa
sbb
lock
into
xor
int
arpl
pop
cmp
and
lret
shrd
gs
adc
push
call
mov
cltd
pop
xor
daa
cli
mov
pop
and
mov
and
dec
pop
cmp
test
enter
push
aam
dec
pop
repnz
leave
cmp
inc
mov
jl
sbb
add
mov
dec
fsubrl
mov
inc
lods
cli
mov
mov
jecxz
sub
sub
sbb
inc
mov
jns
scas
icebp
xor
cmp
popa
jp
sub
sbb
shll
cmp
cmp
pusha
ret
jg
jmp
ss
movsl
cs
pop
cmp
hlt
mov
sub
shl
arpl
mov
jno
ret
mov
bnd
lret
fs
lds
ljmp
pop
push
cmpsb
subl
out
data16
out
jmp
lods
das
xchg
jo
divl
xchg
nop
push
sbb
fiadds
subb
imul
mov
fsubl
mov
pop
mov
and
and
adc
xor
das
in
fidivrl
add
xchg
xor
cld
pusha
xchg
sbb
cltd
into
outsb
pop
ret
in
mov
fnsave
sub
mov
js
popf
mov
js
popf
icebp
js
mov
pop
add
out
push
into
lret
enter
sbb
push
out
xchg
ljmp
mov
and
outsb
cli
jecxz
add
mov
pop
or
or
sub
mov
movsl
mov
es
jmp
subb
jne
leave
pop
cs
cs
int
das
mov
mov
ret
addr16
sub
cmpsb
pop
sarl
push
lret
jne
mov
cmp
pop
xchg
std
pop
mov
xorb
ljmp
mov
xchg
cmpsl
loopne
pop
or
sbb
leave
cmc
fs
mov
push
xor
mov
xchg
lret
pop
jmp
cmp
stc
scas
cmp
lcall
leave
push
mov
in
ja
dec
stos
cmp
das
rcl
cli
lcall
cmp
pop
popf
or
mov
aam
daa
push
in
cltd
bound
in
lret
adc
or
pop
popa
cmpsb
daa
adc
out
popa
mov
mov
sbb
rcl
xlat
in
pushl
inc
dec
xchg
cmpsb
jns
lret
add
pop
decb
shlb
xor
adc
mov
inc
add
testb
add
jmp
jg
std
push
daa
lret
scas
xlat
out
cmp
into
and
dec
add
cmp
sbb
or
lods
insl
xor
mov
mov
insl
xchg
inc
sbb
shlb
out
std
adc
ss
and
add
jl
dec
scas
inc
es
into
lcall
daa
and
fwait
mov
adc
or
pop
push
inc
mov
push
cmp
out
mov
sbb
mov
test
push
cld
int
inc
scas
pop
add
test
dec
push
push
add
inc
test
int3
jp
shll
aas
idivl
pop
jae
mov
in
pop
inc
sbb
inc
adc
in
lods
inc
repz
stos
stc
stos
add
fsts
into
xchg
scas
insl
rep
jecxz
xlat
fs
sub
imul
jo
ret
cmp
outsb
add
sti
icebp
lret
cmpb
outsb
sbb
dec
ret
pop
enter
int3
add
out
add
adc
ljmp
xor
mov
xlat
stos
jmp
pop
fisttps
inc
cmpsl
dec
pop
jle
in
stc
aas
fxch
push
mov
fisttpll
add
dec
xlat
mov
pop
repnz
xchg
es
fiadds
cmp
test
lea
lods
sub
inc
inc
sub
sahf
dec
cld
pop
data16
xchg
imul
test
lock
sub
inc
nop
int3
pop
jnp
jl
pop
data16
jecxz
or
mov
mov
inc
das
add
out
push
cmpsl
sub
les
test
in
pop
or
flds
mov
enter
and
inc
cli
cmp
or
in
jecxz
decb
cmc
pusha
add
loopne
daa
pop
daa
jns
fadds
in
in
dec
int3
clc
pop
fildl
mov
out
ljmp
mov
sarb
add
pop
packssdw
or
int3
mov
and
pusha
repz
cmp
jne
sub
sbb
xchg
jecxz
push
lds
ss
movsl
add
lods
mov
movsl
fwait
and
dec
push
out
xor
sub
ds
lret
push
push
sbb
and
data16
pop
push
inc
sbb
lods
loope
push
sti
test
dec
sti
mov
jne
ret
dec
jns
imul
testb
aas
xchg
shl
pusha
pop
dec
dec
add
or
pop
aam
insb
push
jno,pn
ds
cmp
push
and
jo
or
stos
push
mov
es
and
jmp
adc
es
and
and
cmpsb
jmp
inc
add
cmp
inc
cmp
fs
mov
cli
add
dec
movsb
or
push
xchg
fiadds
mov
and
inc
mov
mov
xchg
sbb
jmp
fs
ds
cmpsl
movsl
jns
add
lea
jno
sub
call
pop
loopne
insb
cmpsl
fbstp
out
fsub
sti
lea
mov
xchg
pop
xor
mov
pushf
paddd
rolb
and
sbb
xchg
cs
scas
push
pop
filds
jb
mov
int3
xor
mov
mov
pop
pushf
sub
ret
push
pop
fdivl
mov
lods
push
push
or
std
jmp
sahf
or
imul
lahf
inc
inc
lret
or
arpl
imul
out
xchg
roll
lahf
data16
xor
push
leave
fiaddl
shl
dec
addr16
mov
sbb
sub
and
fs
jle
dec
cmp
inc
mov
adc
xchg
and
dec
or
push
js
insl
and
inc
out
ret
jge
lret
inc
or
icebp
push
xorl
testl
mov
and
jno
mov
jbe
leave
ret
jae
inc
mov
cmc
and
adc
jmp
rcr
inc
repnz
adc
mov
popl
das
fldenv
mov
adc
adc
cmp
ss
mov
xor
sbb
pop
sbb
adc
jo
sub
xchg
cmp
mov
aaa
insb
mov
call
ljmp
sbb
sbb
adc
mov
jb
sbb
bound
stos
loopne
mov
loop
dec
cmp
cmp
dec
fiadds
add
sub
dec
jno
sti
les
mov
dec
xchg
push
pop
shl
inc
xchg
out
mov
add
or
ss
cmc
or
push
mov
out
add
sub
out
jb
jbe
lss
inc
ds
xor
jne
inc
pop
cltd
lcall
jge
lret
call
sbb
out
push
outsl
pop
call
mov
insl
shlb
clc
fidivs
or
and
mov
mov
cwtl
add
mov
arpl
push
pop
xor
stc
push
xchg
repz
ret
pusha
into
inc
fidivrs
and
das
in
mov
fisubs
mov
xchg
loop
xor
je
test
stos
fnstsw
into
inc
notl
lods
or
mov
dec
mov
pop
lret
sbb
fwait
lods
mov
pop
test
ret
loope
xchg
push
and
xor
addr16
pop
js
inc
mov
jmp
jmp
cmp
outsl
or
lds
sub
repnz
add
sahf
adc
sahf
fiadds
push
push
push
cs
rolb
stos
ss
jno
ds
es
xor
repz
add
push
inc
cwtl
xor
aas
mov
jno
inc
xchg
or
in
and
dec
pop
fiaddl
mov
xor
decb
sar
fnsave
lods
xor
aas
add
and
and
jmp
jb
xor
stos
and
std
sbb
and
imul
xchg
adc
ljmp
cltd
dec
or
pop
daa
or
and
add
inc
orl
loope
jo
push
je
cmp
testl
lods
and
in
lods
lds
data16
push
sub
pop
cmp
and
fdivrl
add
jo
sbb
and
lods
jl
inc
sbb
mov
cmp
insl
jno
add
xchg
dec
lock
xor
push
xor
add
dec
sub
mov
push
mov
add
rol
jno
mov
ds
andb
test
dec
cmp
push
or
xchg
add
xchg
insb
cmpsb
mov
andb
in
jb
cli
aas
shrl
pop
and
xor
test
repnz
loop
fsubl
popa
bound
dec
jge
push
xorb
imulb
es
jo
jmp
or
jo
pop
fs
or
rorb
and
mov
lret
mov
push
sahf
inc
dec
inc
in
andb
add
cltd
rol
sub
iret
mov
mov
xchg
add
sub
roll
jnp
jmp
inc
or
add
pop
and
xor
sub
out
lret
bound
push
les
xlat
pop
or
pop
sbb
jbe
push
jns
fdivrs
ret
add
inc
jb
sub
adc
daa
cwtl
xchg
in
sarl
lret
mov
dec
push
xchg
movsl
cmp
pop
mov
imul
into
rcrl
xor
test
shll
stc
fidivl
sbb
add
dec
outsb
lret
fstl
out
inc
rcrb
mov
lret
lock
jmp
fcmovne
loopne
sub
sarb
pop
fsubrs
divb
xchg
mov
xchg
mov
pop
daa
push
jl
pop
push
xchg
dec
add
or
inc
or
fcoml
ss
mov
lods
ljmp
pop
push
fld
pop
push
iret
inc
inc
push
cmp
call
int
pop
mov
adc
int3
push
lret
mov
daa
inc
mov
loopne
pop
clc
cmp
xor
mov
add
cmpsb
and
or
dec
inc
add
loop
roll
push
fidivl
mov
mov
aas
jo
xor
cmp
out
inc
mov
call
pop
in
mov
in
xor
adc
cld
pop
pop
lret
out
in
sub
popf
loopne
sbb
rorb
das
test
divl
out
and
clc
push
addr16
mov
pop
dec
pop
popf
jno
test
xchg
xchg
cmpsb
out
cld
jecxz
adc
imul
jl
mov
mov
mov
cmp
pop
xor
add
stos
mov
pop
je
lahf
pop
cmp
outsl
jp
stos
sahf
push
pop
adc
mov
dec
pushf
xor
and
or
std
and
mov
and
cltd
imul
add
shl
into
mov
push
fcmovnu
dec
into
jno
lods
add
xlat
inc
icebp
lahf
sub
xchg
xchg
xchg
jl
and
sub
sahf
add
xor
daa
das
add
lahf
jmp
jne
call
jb,pt
sbb
push
sub
mov
mov
jmp
add
sbb
push
in
fldl
testb
popf
jg
fs
mov
xchg
xchg
rolb
jb
stos
pushf
ror
lcall
popf
inc
push
inc
rcrb
push
or
je
ss
dec
jl
mov
xlat
add
adc
dec
adc
xchg
sub
and
cwtl
lods
mov
popa
icebp
adc
sub
xchg
push
shlb
mov
jp
dec
add
sti
jbe
sub
inc
jecxz
stc
mov
mov
xchg
mov
and
data16
jle
sti
dec
jle
mov
shlb
cmc
fs
stc
or
push
jle
fadd
mov
inc
jmp
sbb
ret
lock
clc
xor
mov
lcall
lcall
cmp
popf
sub
lods
or
mov
pop
adc
loope
inc
pop
mov
push
ja
jae
jl
push
into
ljmp
sysexit
aad
stos
ret
sub
mul
xchg
pusha
jle
or
in
sub
aaa
pop
mov
jnp
dec
xor
stos
fwait
lcall
daa
adc
aas
cmp
in
add
mov
hlt
inc
or
add
pop
les
das
lcall
loopne
push
movsb
mov
and
out
sbb
lock
xor
scas
or
or
pusha
pop
mov
outsb
xor
adc
into
push
sbb
mov
jg
scas
in
push
lahf
fisubl
jns
jp
inc
cmp
jmp
bound
clc
sub
sti
insb
sub
bound
mov
rcr
push
lods
inc
aas
cmp
sahf
fsubrp
popa
pop
cmc
push
push
in
cs
mov
stc
adc
jmp
mov
imul
aad
lea
dec
fcoms
ljmp
mov
push
loop
clc
mov
cs
mov
sbb
insl
lret
mov
and
dec
enter
push
dec
nop
pop
sbb
jge
sub
or
cld
loop
mov
aam
out
mov
add
stc
cmpsb
sbb
lcall
adc
les
ljmp
mov
adc
fs
cltd
cmpb
iret
jo
in
loope
mov
adcl
mov
stc
sub
jno
mov
test
lahf
push
repz
in
sub
sub
inc
jmp
into
mov
sub
rcrb
not
mov
stos
and
sub
orb
stos
subb
sbb
orl
test
cli
pop
test
arpl
lahf
add
add
jmp
popa
and
push
movsb
jo
test
out
add
adc
push
mov
sarb
jo
enter
or
gs
dec
rorb
aaa
jnp
into
std
aas
outsb
jns
fdivl
xor
push
push
dec
mov
cmc
inc
inc
rcrl
dec
les
enter
mov
and
cmp
inc
leave
mov
or
ret
shrb
out
clc
and
and
jae
push
test
pop
mov
movsb
popa
xlat
rclb
imul
mov
pop
stc
mov
es
jmp
stos
fimuls
test
and
xor
int
jae
fsubl
or
sbb
sub
lahf
mov
cltd
sahf
sub
imul
jns
rolb
dec
add
fisubrs
aam
and
add
loopne
xor
adc
decl
pop
mov
test
mov
shl
dec
hlt
jp
cmc
icebp
dec
fwait
out
mov
lods
test
cli
test
ucomiss
sbb
cmp
inc
out
dec
xor
fidivrl
cs
xor
inc
arpl
push
je
cltd
imul
nop
imul
lret
cmp
dec
arpl
movzbl
pop
shll
push
into
mov
test
call
ss
mov
test
push
push
pmaxsw
mov
pushf
data16
dec
and
aas
inc
push
sbb
add
push
pop
dec
sti
mov
jbe
dec
test
daa
in
jb
ret
cmp
rolb
in
or
bound
ljmp
loope
aaa
jp
adc
jmp
aas
sub
push
or
cmp
xor
xor
imul
xchg
cltd
into
lock
roll
sub
add
in
in
fiaddl
out
repz
cmp
fadds
stc
add
les
push
cmp
and
lahf
lcall
xchg
movlps
pop
in
mov
push
jnp
dec
scas
loope
or
ret
rol
ret
and
daa
fdivrp
add
leave
sub
push
fists
fldt
dec
push
sti
xor
push
pop
pop
mov
into
adc
inc
lea
mov
mov
jmp
adc
jns
xor
jmp
repnz
xlat
jne
rorb
pop
rolb
divb
into
in
stc
sub
push
or
or
or
add
or
cmpsb
dec
xchg
shr
add
and
xorl
xchg
mov
mov
and
sub
out
mov
dec
in
mov
xor
movsl
and
cmp
scas
xchg
cmpsl
dec
or
pop
push
pop
lcall
out
sub
add
cmp
insb
push
mov
xor
lret
pop
or
idivb
xchg
dec
int
cmp
adc
cmp
clc
or
into
imul
andl
rcrb
xchg
jmp
sbb
rcl
lds
and
inc
jp
and
mov
sbb
insb
or
mov
xor
pop
and
mov
ljmp
cmpsb
push
jne
push
das
ds
mov
ret
js
push
add
xor
andl
inc
inc
xchg
loopne
pop
iret
sti
mov
sub
jle
dec
cmp
out
inc
sbb
sti
sub
loopne
hlt
lahf
mov
insl
sub
icebp
sub
repz
loopne
xchg
jg
insb
ss
jnp
adc
xchg
scas
call
xchg
leave
je
scas
xor
and
jge
imul
enter
push
stos
cs
std
imul
jge
add
cs
mov
sub
imul
dec
test
int
dec
xor
arpl
adc
inc
adc
pop
bound
jbe
sub
push
call
ds
out
mov
mov
sahf
mov
jns
cltd
jecxz
sub
lds
adc
loope
shll
xor
mov
jne
and
add
jbe
stc
cld
sarl
ficoms
movsl
ljmp
in
repz
add
mov
in
sbb
sahf
cmpsb
inc
mov
adc
aad
add
mov
inc
pop
mov
daa
lcall
dec
dec
xchg
mov
xchg
pop
fdivs
xchg
cmp
dec
shll
sbb
mov
xchg
test
int3
mov
adc
dec
mov
rcrb
clc
sarl
xor
xor
mov
pushf
inc
jmp
mov
lods
push
insl
push
mov
std
inc
ljmp
dec
mov
fisubl
fst
cmp
movmskps
mov
fidivl
push
mov
mov
ficompl
iret
jo
in
inc
movsb
inc
xor
inc
mov
jns
mov
int
xlat
and
jno
andl
insb
mov
scas
dec
dec
xchg
loope
shlb
fiadds
mov
mov
pop
fstps
or
jecxz
sbb
and
fxch
lock
push
lds
adc
or
pop
cmp
fldcw
js
mov
movsl
push
mov
jge
scas
lcall
icebp
int
popa
xchg
dec
add
push
sbb
ret
xchg
std
dec
test
mov
and
push
xchg
sub
pop
lret
std
mov
jno
gs
out
push
imul
sub
mov
ljmp
int
cs
jmp
iret
ss
sub
scas
rorl
mov
cli
test
bnd
jl
adc
inc
push
mov
fs
test
jb
mov
fcomps
rcrl
out
mov
sbb
sub
adc
mov
notl
add
xor
jno
arpl
movsb
daa
es
xchg
and
mov
inc
fucomip
xor
push
fisttpll
lret
idivb
aam
cmp
int
arpl
mov
arpl
das
dec
jle
push
add
sub
fidivrs
std
add
jb
in
in
xchg
jecxz
or
adc
mov
rcll
ss
and
dec
out
push
pop
insl
push
push
jb
mov
adc
cld
sbb
out
iret
iret
add
std
mov
dec
enter
int
lea
es
sti
mov
jmp
xor
cs
push
mov
pop
idivb
sbb
aaa
pop
fbld
mov
pop
xchg
lret
aad
jmp
popa
into
pop
add
outsl
mov
xchg
jae
cmp
jge
in
lock
cltd
sub
inc
scas
lds
lock
pop
jmp
inc
std
out
scas
fisubs
ror
cmc
push
rol
test
xor
pop
or
enter
imul
cwtl
lock
and
mov
fistpll
scas
xor
test
cmp
cltd
out
sbb
gs
or
out
loope
inc
or
outsb
sub
xchg
repz
xchg
or
xchg
sbb
xorb
or
jno
mov
jle
cld
int
enter
inc
mov
jle
xchg
jne
jo
mov
pop
cwtl
adc
xor
cmpl
jne
jno
xor
rcl
clc
repz
sahf
lods
cmpsl
push
or
aad
add
xchg
int
cmp
add
mov
leave
lock
fcoms
pop
scas
inc
mov
push
jns
out
mov
dec
fsubr
mov
mov
in
fistpl
hlt
js
andl
cmp
push
push
insl
add
jecxz
or
xchg
add
leave
mov
mov
aaa
aam
jl
scas
sarb
lret
scas
sub
fnstenv
ja
pop
mov
movsl
add
mov
and
pop
mov
dec
push
out
aaa
push
lea
jo
inc
cmp
and
sub
scas
cmp
xchg
inc
jbe
loop
daa
test
add
bound
pop
and
stos
loope
xchg
sbbb
pushf
shrl
add
data16
cltd
fdivrs
lods
mov
stos
cmpl
stos
push
ds
daa
lahf
jno
inc
cmp
fstp
xchg
ss
shlb
or
in
or
push
mov
sub
cmp
push
sub
xor
pop
and
fwait
dec
loop
stos
or
sbb
push
loop
mov
adc
inc
xchg
pop
mov
push
xchg
arpl
lock
and
push
loopne
sub
mov
and
cwtl
into
xchg
and
sub
adc
sti
fmuls
xchg
data16
xlat
mov
mov
inc
sbb
rep
jp
cmp
ljmp
psubq
ds
add
mov
add
inc
jecxz
gs
sbb
test
popa
bound
xorl
cld
or
subb
loop
or
xor
je
rolb
andl
scas
and
addr16
sub
mov
iret
pop
mov
xchg
movsb
dec
cmp
push
mov
outsl
sub
notl
inc
xor
adc
sbb
sbbl
mov
push
sahf
xchg
pop
movsb
push
xchg
enter
dec
cmpsb
inc
pop
push
pusha
and
adc
jnp
ficoml
cmp
mov
daa
cmp
daa
mov
adc
sbb
fisttps
sti
es
mov
or
jl
ss
dec
inc
sahf
lds
push
out
inc
mov
push
sbb
add
or
add
pop
daa
out
or
add
mov
adc
inc
mov
mov
sbb
inc
adc
aas
jmp
xor
xchg
xor
pop
fimull
inc
imul
mov
pop
jge
push
push
out
jmp
dec
lods
dec
and
roll
rcrb
movsb
in
sub
pop
dec
loopne
cmp
daa
mov
loope
push
inc
aam
inc
xor
add
into
out
sti
lods
hlt
push
inc
pusha
sti
push
psrlw
xor
xor
call
inc
mov
out
xor
movsw
push
iret
mov
inc
and
jl
inc
pop
mov
add
jae
fdivrs
stos
sahf
pushf
faddl
inc
in
fldenv
xor
xor
das
push
cmp
pop
xchg
push
sti
fsubrp
enter
divb
lods
push
pop
mov
pop
sub
jecxz
repnz
fdivl
push
xor
xor
cmpl
xor
mov
dec
icebp
push
fsubrl
sbb
pop
sbb
mov
jp
pop
pop
adc
test
fbld
repz
incl
xor
scas
lock
loope
pop
mov
les
xorb
pop
or
dec
notl
xor
and
pop
rcrb
adc
out
dec
inc
sub
pop
sti
clc
mov
loopne
sub
scas
out
xchg
imul
push
and
xchg
sub
xchg
sbb
xor
push
mov
mov
test
and
ds
cmp
and
xor
adc
mov
std
mov
subl
cli
pop
fnstcw
inc
scas
jae
adc
adc
push
jmp
mov
inc
jmp
popa
sub
popf
and
sub
and
inc
jmp
xchg
sbb
cs
fnstcw
loope
insb
out
movsl
xchg
push
xchg
pop
dec
sub
adc
mov
and
jno
inc
push
xchg
dec
mov
and
adc
stc
mov
ljmp
push
stos
jge
andl
jns
mov
mov
jb
cmpb
sbb
ficoml
orl
in
lods
out
lea
out
in
scas
fmuls
xchg
shlb
das
sbb
mov
and
clc
mov
and
rcl
or
mov
xor
mov
aad
fldcw
and
and
sub
dec
jmp
sub
call
sti
dec
push
mov
rolb
pop
jb,pt
out
sub
cli
or
sbb
popf
mov
into
push
and
pop
xor
dec
mov
jg
icebp
mov
push
sbb
xchg
popa
addr16
and
inc
cld
jb
hlt
rcll
icebp
xor
movsb
lret
aaa
lcall
pop
outsb
mov
pslld
rcrl
cmp
pop
int3
daa
add
xchg
mov
das
aam
aas
or
stos
sbb
cmp
sub
fcmovnb
mov
push
jbe
daa
int3
enter
loope
jmp
xor
or
xor
sbbb
add
inc
push
jb
es
out
pop
inc
xlat
lods
push
bound
add
adc
sub
decb
and
fcmovnbe
rclb
sbb
sarl
mov
inc
or
decl
cmp
xchg
and
pop
rol
test
xchg
call
jne
xor
xchg
cmp
ljmp
xchg
jg
ss
push
push
and
inc
and
cmpsl
outsl
enter
add
fdivrs
loop
dec
and
lock
js
cli
sete
int
nop
jecxz
cmpsb
icebp
test
ljmp
daa
dec
call
push
pop
mov
imul
xor
andl
push
popa
test
adc
pop
cmp
lock
and
mov
sbb
and
mov
jl
xchg
cli
jbe
lock
cmp
dec
stc
cmp
ljmp
into
jge
jnp
loop
and
and
dec
push
adc
movsb
cli
add
xorb
hlt
push
xorb
add
call
xlat
subl
leave
jmp
insl
ret
or
mov
std
and
sahf
add
hlt
push
and
cli
lret
stos
aaa
push
fadds
cmp
sub
notb
nop
or
adc
adc
jmp
mov
cmpsb
dec
jb
mov
jae
gs
jns
mov
inc
cmp
iret
hlt
cmp
in
orl
mov
dec
xchg
imul
jl
clc
mov
loop
fiaddl
push
sub
inc
and
das
sbbl
mov
jg
bound
pop
cmpsl
js
repnz
lcall
rcrb
subl
adc
xor
mov
adc
adc
fdivrs
mov
xchg
mov
mov
insb
and
adc
aad
insb
or
in
cli
jns
mov
aas
sbb
repz
ret
mov
aam
cmc
pop
add
cs
repz
mov
leave
int
cli
xchg
mov
cmp
pop
or
imul
stc
stc
cmp
sub
in
pop
out
mov
mov
or
adc
jnp
dec
jo
int
into
cmp
fldcw
xor
xchg
or
and
or
shl
xchg
movsl
dec
ret
xchg
mov
jmp
popa
lar
rcrb
push
sub
fmul
int
fst
sbb
mov
jecxz
and
sbb
mov
push
push
ds
and
shr
mov
cmp
out
jno
xchg
xchg
pop
mov
mov
insb
sahf
aam
push
inc
iret
push
pop
in
jns
iret
and
or
addl
es
insl
adc
and
test
push
mov
cmp
call
sbb
adc
pop
lock
outsl
mov
cmpsb
fstpt
ja
adc
pop
mov
in
sbb
xchg
push
jbe
xor
mov
pop
push
pop
push
mov
cmp
mov
jle
shr
daa
lods
lret
aas
cmpsb
cmpsl
scas
jno
cmovno
sbb
jnp
inc
adc
or
rcrb
sbb
dec
dec
lcall
push
push
mov
xchg
std
mov
mov
sbb
mov
hlt
bnd
push
adc
sbb
movsb
pop
bound
or
dec
mov
mov
pop
js
loope
ss
cli
mov
sbb
mov
inc
cmp
xchg
jecxz
mov
pop
fisubrs
xlat
cmp
adc
cltd
pop
and
sub
jp
cmp
mov
pop
movsl
mov
mov
adc
hlt
jecxz
cmp
pop
xorl
and
test
push
sarl
or
movsl
add
fidivrs
mov
mov
adc
pop
dec
push
mov
sbb
fs
sbb
dec
jecxz
inc
add
sti
adc
mov
aam
xchg
sarb
mov
dec
cmp
sub
pop
adcl
pop
sub
pop
push
push
ret
fisttps
push
iret
ret
das
pop
loopne
mov
outsl
jge
mov
add
addl
stc
dec
aad
sarb
nopl
jp
fld
mov
add
or
push
xor
movsb
dec
and
mov
cmp
addl
cmp
pop
test
or
push
jmp
adc
sbb
pop
jns
or
outsl
mov
in
and
outsl
sub
fwait
mov
aas
xchg
sbb
imul
int
cmp
mov
aas
dec
cwtl
inc
lea
cwtl
xor
xchg
cmc
pop
fcomi
xchg
push
cmpb
rol
pop
bound
dec
into
fmul
les
aam
cli
subb
jmp
movsb
add
loop
fs
sbb
push
or
popa
sbb
mov
adc
jmp
and
hlt
cmp
shlb
sbb
mov
in
inc
cmp
loop
mov
dec
xor
lahf
scas
ss
mov
fcoml
add
loop
lods
mov
push
or
jecxz
scas
mov
mov
sbb
cmpsb
stc
rcr
dec
inc
out
leave
or
lods
mul
mov
rcrl
adc
xor
and
popa
push
sub
pushw
sti
sti
mov
loope
dec
jmp
aad
inc
inc
push
cmpsl
cmp
cld
mulb
and
loope
adc
enter
call
dec
mov
mov
out
cli
scas
jbe
inc
es
and
or
pop
pop
jnp
adc
negl
idivb
icebp
imul
sub
dec
icebp
insl
push
mov
push
and
aad
cmpsb
fcoml
test
fldl2t
insl
and
mov
mov
stos
mov
addr16
xchg
scas
push
ret
ret
adc
push
repz
sti
jno
add
adc
nop
xorb
jp
mov
dec
inc
sub
ljmp
xchg
sub
adc
xchg
sub
and
insb
shrb
ret
out
ljmp
in
out
dec
mov
daa
push
push
fs
flds
mov
mov
out
mov
les
popf
xor
sub
into
sahf
sub
scas
add
int
push
jge
push
lret
mov
pusha
daa
jae
xchg
sub
add
cmp
enter
mov
mov
sub
cli
pop
das
pop
jno
outsl
push
lds
mov
stos
xor
xchg
daa
lods
ljmp
mov
jecxz
mov
mov
shl
lret
aam
pop
ljmp
and
jno
aad
mov
aam
dec
dec
xor
mov
arpl
push
lock
mov
or
pop
sub
scas
dec
push
or
jne
lods
lret
dec
jle,pn
push
fwait
pop
mov
jl
pop
pop
inc
or
cmp
lcall
xchg
imul
test
dec
xchg
xchg
test
and
imul
xor
jge
lods
rorl
sarb
mov
lret
and
mov
movsb
insl
jno
xor
jnp
push
sar
mov
inc
aas
fwait
mov
xchg
dec
das
and
pushf
push
mov
mov
stc
cmp
cmp
ret
je
inc
pop
push
pop
adc
lods
cli
xor
cld
jecxz
sub
mov
fs
dec
xor
arpl
jnp
sbb
push
shrb
mov
cs
jno
ret
pop
sbb
xchg
or
or
cltd
mov
repz
mov
sti
mov
les
aas
test
sahf
xchg
ret
lea
lock
xor
test
sarb
mov
pop
xchg
inc
sub
mov
ret
push
into
lds
cs
cli
icebp
xor
pop
scas
cmc
cmc
push
add
lret
ret
aaa
pop
mov
out
pop
leave
jmp
sub
mov
lret
cwtl
xchg
dec
dec
repnz
inc
jecxz
leave
lock
insl
sub
jbe
popf
ljmp
pusha
cmp
out
test
out
dec
jbe
mov
push
mov
fimull
cmp
xor
sbb
sti
test
les
jb
out
dec
testl
xor
fstl
in
sbb
sbb
mov
lock
jns
out
data16
aam
in
pop
xor
je
xor
add
ffreep
jecxz
mov
push
jecxz
inc
stos
xor
stos
shll
stc
rclb
mov
imul
pop
sub
add
add
add
out
in
cmpsb
sub
clc
jno
lods
mov
fdiv
ret
jmp
and
inc
aas
pop
frstor
cmpsl
test
cmpsb
push
adc
mov
shlb
scas
add
push
add
pop
push
inc
pop
je
arpl
or
arpl
sahf
fs
xchg
sti
inc
adc
lods
jae
and
cmpsb
adc
sbb
mov
stc
cmp
or
and
push
popf
push
jb
jecxz
adc
ds
or
dec
xor
xlat
jns
loope
dec
lret
inc
js
lcall
lret
insl
imulb
push
pushf
push
mov
cmpsl
xlat
dec
movsl
mov
sub
sbbb
popf
lret
mov
outsb
dec
shll
pop
mov
xor
push
aad
pop
cld
enter
cli
pop
mov
mov
loope
dec
mov
pop
lods
lret
xchg
jmp
repnz
cmp
das
pushf
cmp
andl
push
out
stc
adc
lcall
into
imul
bound
fstpl
test
out
into
push
ja
enter
cmp
push
or
mov
out
nop
inc
add
fstl
sarl
mov
and
repz
pop
mov
push
or
fcoms
fwait
jg
and
xchg
je
sbb
aas
imul
mov
loope
sbb
push
dec
pop
scas
stc
cmpsb
divb
xchg
adcl
mov
stos
aaa
push
out
das
es
loopne
loop
ds
in
mov
mov
imul
scas
mov
and
or
sub
cmp
aas
fsqrt
and
pop
std
leave
pop
push
cmp
repz
dec
out
mov
mov
movsl
shl
and
lret
or
data16
cmp
xor
repz
loopne
pusha
cmp
out
jae
std
inc
push
inc
sbb
sbb
xor
mov
cmp
aas
cmc
pop
lds
sti
jecxz
push
xchg
jle
mov
add
jmp
sarl
pop
sahf
adc
int
pop
pop
push
stos
inc
mov
sbb
fnclex
adc
pop
sbb
sbb
pop
sbb
or
pop
leave
fstp
lahf
and
xor
adc
jb
mov
xchg
inc
jg
fldl
arpl
ljmp
scas
adcb
sbb
jbe
push
cmp
dec
mov
pop
xor
fwait
sub
inc
xchg
ret
push
bound
arpl
sbb
inc
filds
call
pop
or
shlb
xor
les
lret
cmp
add
xorl
sub
cmp
pop
in
xor
hlt
lods
aad
add
push
xor
js
insl
mov
in
jo
adc
dec
ja
mov
or
mov
xchg
inc
adc
jnp
xchg
mov
aam
dec
in
arpl
lret
pop
in
movsl
nop
scas
lods
adc
push
or
jmp
push
ds
out
out
data16
push
push
mov
and
test
rorb
mov
mov
mov
fsubl
loope
rol
outsb
sub
inc
cmp
adc
cmp
ret
mov
inc
movsb
in
fnstcw
jecxz
jl
sbb
push
cli
sbb
add
mov
inc
push
cmpb
sbb
movsb
push
and
push
sub
sbb
or
cwtl
inc
fisubs
mov
es
sub
cmp
add
push
aad
jae
jmp
push
jp
cmp
movb
and
mov
xchg
jnp
or
mov
addl
es
fdivrl
bnd
stos
dec
popa
adc
push
lds
and
int3
pop
in
mov
mov
cmp
pop
pop
leave
mov
hlt
mov
jge
adc
adc
cmp
sbbb
mov
xor
pusha
dec
data16
scas
jg
fisubrl
mov
sti
lds
mulb
mov
sbb
adc
mov
xchg
mov
in
mov
mov
push
pop
add
fldenv
lret
movsl
jp
adc
lds
fmull
rcrl
pop
adc
scas
pushf
jne
incl
int3
xor
dec
lea
xor
lds
push
mov
push
les
inc
mov
aaa
into
stos
jb
out
mov
cmp
and
ret
movl
dec
lods
push
imul
jae
xor
imul
scas
push
or
test
mov
enter
jns
cmp
std
bnd
xor
pop
scas
pushf
sbb
aas
pop
out
loope
orl
test
jle
dec
push
roll
mov
adc
int
jp
lahf
push
and
push
jg
call
xchg
int
mov
loop
mov
les
or
jl
gs
js
rolb
scas
mov
mov
outsl
stos
cli
mov
pop
test
and
enter
mov
sub
add
ss
repnz
es
dec
xor
clc
sbb
sub
mov
lret
cwtl
cmc
adc
sbb
xchg
sbb
sbb
cmp
lds
lahf
inc
xchg
hlt
cmp
aad
ds
pop
pop
xchg
fs
xchg
mov
push
lock
jmp
sbb
pushf
lahf
mov
push
sub
jl
jnp
pop
or
inc
or
jl
fs
push
cld
cmp
adc
cs
jo
mov
mov
push
and
cmc
sub
jo
pop
mov
sbb
sub
xor
popf
movsb
push
es
sub
das
sub
push
cmp
and
aam
jo
pop
xchg
jle
das
jle
aam
iret
cwtl
imul
repnz
sbb
adc
aas
xchg
inc
mov
imul
insb
dec
cmpsb
jl
jae
mov
or
inc
inc
jbe
aad
rorb
sub
and
in
sbb
arpl
jp
add
scas
shll
jbe
aaa
imul
arpl
fdivrl
or
in
add
xor
dec
pop
inc
inc
lds
and
lock
inc
mov
cmp
mov
vmovups
call
sbb
sub
dec
push
mov
fiaddl
stos
sub
out
lods
sbb
xlat
pop
lret
cmp
inc
sub
mov
fwait
int3
jns
sbb
push
xor
sbb
aam
inc
sbb
shrb
out
das
pop
push
or
push
mov
mov
and
cli
push
cmpsl
hlt
xor
cwtl
xchg
and
xchg
jno
xchg
mov
xchg
cmp
andb
mov
mov
jno
and
add
sti
popf
mov
sahf
dec
and
mov
mov
xor
iret
add
xor
int
popa
add
ret
ds
sub
bound
rcrl
and
sbb
nop
cmp
imul
mov
lods
rcrl
dec
xchg
push
adc
add
inc
sub
movsl
and
inc
mov
std
in
out
sub
sub
xor
or
data16
mov
aas
sti
adc
mov
test
call
stc
lcall
aam
daa
lret
ds
sub
std
jmp
pop
inc
leave
adc
loop
in
mov
xchg
js
fs
sub
dec
jae
adc
adc
jo
push
mov
adc
jp
jbe
and
push
xor
jbe
divps
aam
xor
aad
dec
rcr
mov
push
or
out
adc
dec
and
mov
cli
movsb
push
pop
mov
mov
bound
jmp
push
xor
clc
pop
adc
xchg
jle
mov
test
dec
sub
jp
mov
daa
popf
ja
mov
testl
mov
popf
dec
and
popa
out
arpl
mov
ljmp
pop
xor
xor
cld
adc
enter
movsb
jmp
push
inc
std
cmp
dec
imul
jnp
mov
mov
and
mov
in
pop
mov
in
jmp
shrl
add
pop
pushl
push
sarb
insl
xchg
and
push
lret
lods
data16
xor
cmc
lcall
out
and
or
loope
loope
in
data16
icebp
mov
jae
pop
jbe
stos
fs
cmpsl
dec
push
push
jae
add
daa
adc
adc
mov
mov
and
repz
fmulp
add
es
lret
jmp
cmp
jne
mov
aad
pop
push
insl
or
push
repz
test
sbb
inc
aas
mov
mov
adcb
hlt
stos
mov
cmp
jle
nop
popa
push
cmovp
sub
push
adc
or
bound
mov
cmpsl
inc
mov
pop
test
jb
pop
adc
mov
imul
les
add
mov
lea
adc
push
es
mov
popf
jg
push
mov
jl
pop
mov
popa
mov
fwait
ret
cmp
jmp
out
pusha
cmpsl
and
push
lock
xchg
inc
dec
mov
test
fldenv
adc
xchg
mov
fimull
dec
xchg
mov
lods
cmp
mov
cvtpi2ps
xlat
cs
pop
sbb
add
testl
or
outsb
adc
mov
iret
mov
int
pop
scas
inc
fdivl
push
xor
or
fcomps
xchg
sti
push
lahf
repnz
idivl
outsb
sti
push
sub
jmp
push
andb
ljmp
or
ja
out
das
popf
sbb
sbb
aam
cs
xchg
out
movsb
fidivrs
inc
xchg
xorl
sub
repnz
test
add
dec
fistpll
mov
outsl
or
push
mov
in
adc
sbb
not
daa
outsl
pop
jecxz
push
rcrl
insl
sub
test
int
clc
fisttps
sub
shlb
in
imul
ljmp
iret
dec
fisubrs
jg
test
sub
sub
addl
ret
inc
dec
sub
push
push
xor
sub
mov
mov
sub
xor
pop
mov
mov
test
dec
xchg
or
movsb
dec
inc
push
push
jae
out
dec
push
mov
daa
leave
repnz
push
xchg
jecxz
mov
push
js
and
xor
jns
xchg
fs
pop
mov
and
xor
fwait
adc
mov
adc
fwait
cmp
mov
imul
jae
cmp
dec
fcomps
sbb
mov
lock
and
jg
sbb
pusha
movsb
leave
imul
xor
cmp
sbb
inc
add
or
cmp
inc
arpl
arpl
xchg
mov
inc
in
imul
sbb
cmpsl
push
test
mov
mov
lcall
rol
and
imul
or
das
ret
jmp
mov
rcrl
dec
cmp
adc
push
push
es
imul
push
xchg
jp
and
test
cli
sub
jb
sarb
fisubrs
fisubrs
or
out
push
sbb
imul
or
repz
cmp
call
xchg
ds
aad
mulb
cmpsb
adc
in
xorl
inc
mov
leave
arpl
sbb
clc
fwait
fs
push
xchg
out
into
inc
loopnew
repz
cmpsl
std
push
stos
jecxz
xchg
jg
mov
out
jmp
jl
adc
mov
jno
mov
fisubl
pop
outsb
dec
ss
insb
mov
cmp
std
cs
sbb
inc
cmp
ss
sub
rolb
bound
add
mov
cmp
scas
xchg
and
dec
and
cmp
add
aam
aad
cmp
and
and
pop
mov
sub
mov
in
or
add
repz
bound
sub
mov
cmpsl
inc
insl
pop
test
jmp
data16
sub
mov
popl
inc
and
movsl
sub
mov
or
cmp
aad
mov
call
test
bound
dec
scas
addr16
lret
mov
sub
sbb
lods
pop
int3
add
aam
ds
stos
cmp
or
xchg
mov
std
nop
lock
or
loop
lods
or
push
fisttpl
xchg
out
ja
mov
test
aaa
pop
andl
data16
push
dec
add
mov
jge
mov
out
mov
jge
dec
and
mov
call
adc
push
jecxz
fcoms
lods
outsb
xchg
jo
pop
cltd
xchg
add
imul
add
xor
add
or
cmc
mov
adc
out
dec
sbb
es
xor
add
jl
push
in
xchg
mov
jne
cwtl
inc
mov
xchg
out
pop
scas
mov
ljmp
sub
xchg
push
lock
cmp
cmp
loopne
push
iret
and
sbb
inc
jmp
rcll
out
jge
cmc
jb
dec
cmpsl
iret
icebp
repnz
pop
lods
pop
in
adc
sbb
es
adc
fldl
cld
movsl
test
orl
jl
lcall
insl
not
inc
cmp
sbb
mov
ret
xor
ja
shl
mov
sub
cmp
xchg
pop
cld
addr16
popa
jo
fstpt
adc
lds
jne
movsb
pop
cmpsb
insl
xor
repz
xchg
adc
pop
sar
mov
bound
pop
mov
pop
and
ja
push
jmp
xchg
iret
mov
jae
and
leave
push
sub
mov
or
or
rcll
mov
xchg
loop
sahf
or
bound
jbe
or
out
inc
jecxz
mov
cmp
xchg
lds
test
push
adc
popa
pop
ror
dec
jmp
add
sbb
push
add
incl
fcmovnu
add
in
push
push
loop
mov
jl
push
cli
shl
push
dec
pop
pop
push
pop
mov
out
xchg
subl
pop
scas
cmp
push
cmp
and
jp
mov
aaa
and
imul
push
add
daa
lret
add
jecxz
mov
je
inc
pop
pop
sub
mov
outsb
je
out
mov
call
push
dec
and
test
push
out
arpl
andb
loopne
or
xor
sbb
or
or
int
sbb
xchg
aas
in
xchg
ret
inc
ret
fst
test
push
pop
pop
xchg
push
and
icebp
std
sub
or
add
and
out
or
cmp
or
daa
std
push
pop
xchg
mov
xor
loopne
punpckhdq
mov
dec
fucomp
shr
or
dec
scas
mov
mov
mov
lds
jl
cmc
jnp
inc
dec
adc
aas
cmpsl
fucom
mov
fistps
ljmp
stos
cwtl
adc
xor
sbbb
rcrb
lcall
cld
xor
sub
ret
or
nop
scas
cli
dec
dec
fisttps
das
jo
cmc
fcomps
int3
mov
mov
pop
ja
and
fisubrs
popa
test
pop
seto
add
jno
push
adc
dec
popa
cmp
dec
pusha
enter
pop
mov
pop
dec
mov
jbe
pop
sarl
jns
add
rcrb
xchg
int
incl
adc
je
sub
outsl
shl
sub
jge
push
je
lcall
cmp
xchg
or
lcall
adc
adc
fcoms
push
int
jmp
loopne
xchg
mov
hlt
inc
or
and
mov
mov
pop
sub
aam
xchg
mov
jl
fcomps
scas
xlat
mov
pusha
in
lds
mov
bound
mov
das
cmp
cmp
sbb
movsb
jl
shrb
lret
mov
mov
mov
call
mov
cld
mov
dec
out
fs
lock
xchg
idivb
xor
mov
stos
pop
fs
lret
ljmp
and
pop
push
lret
sbb
mov
jecxz
fmul
sub
adc
xor
dec
dec
cmp
enter
mov
mov
mov
ret
xor
and
dec
cmc
outsl
cmp
push
push
push
imul
pop
push
jns
out
sti
pop
ss
add
inc
jmp
xchg
ja
pop
push
cld
sbb
pop
xlat
fisttps
or
lds
fwait
sub
or
pop
or
push
adc
push
cld
xchg
lods
rorl
sub
movsb
sbbl
sar
mov
sbb
mov
dec
xchg
pop
ss
mov
mov
xchg
xor
lods
lret
pop
mov
pop
js
xchg
lcall
mov
xor
push
test
push
and
mov
fld
sub
sets
sahf
aaa
je
lcall
ret
add
jae
movb
xchg
into
popf
cmp
in
inc
loopne
std
aas
ljmp
jle
std
cwtl
jp
xor
stc
jb
fs
fisttpll
mov
lcall
mov
fistl
rcrb
pop
jmp
mov
inc
addb
push
and
adc
arpl
push
push
icebp
shrl
cmc
out
cs
imul
push
or
hlt
mov
daa
add
popa
mov
imul
mov
ficoms
push
mov
test
push
dec
dec
rcrl
sbb
xchg
aas
sbb
cld
repz
sahf
insb
xchg
xor
aas
cmp
pop
cmp
lea
repnz
adc
es
into
xor
push
xor
std
lds
lcall
loop
xor
mov
mov
mov
mov
movsl
push
xchg
pop
addb
into
loop
inc
pop
in
jnp
ja
xor
dec
or
xchg
lahf
lcall
cmp
ja
gs
enter
jb
sub
popa
dec
rorl
mov
in
push
add
popl
in
xchg
es
int
or
in
xchg
js
lds
add
aaa
data16
cmove
fwait
and
mov
and
faddl
pusha
or
pop
fs
pusha
fs
imul
je
push
jbe
jae
inc
pop
xchg
loope
xor
orb
mov
popa
sahf
adc
cmp
pop
cmpsb
cld
pushf
and
test
adc
lret
jle
cmp
fwait
cmp
leave
in
add
cmp
pop
mov
pushf
add
in
xchg
or
imul
sbb
or
dec
aaa
popa
popf
int
push
sub
xchg
fsubs
jmp
adc
inc
ror
outsb
ficompl
mov
push
inc
pop
fcmovne
xchg
stos
mov
pop
aad
sub
lret
jno
push
mov
out
cwtl
cli
in
xchg
ja
loopne
insb
leave
es
das
mov
insl
jmp
jns
lods
xor
cltd
or
mov
sbb
dec
fwait
adc
hlt
pop
iret
sub
mov
mov
cltd
pop
mov
adc
inc
pop
inc
or
mov
add
fs
push
ret
mov
pop
or
in
into
sbbl
pop
sub
push
cmp
mov
testl
es
sahf
aad
mov
mov
cmpsl
mov
mov
cmpl
fidivrl
cmp
and
push
test
sub
push
jg
pop
lcall
xor
xchg
in
inc
aam
and
test
push
fwait
arpl
or
es
icebp
lcall
cld
dec
addr16
xchg
lds
adc
call
into
mov
sbb
test
shlb
fistpll
jno
xchg
fisubrl
fidivl
jl
cli
repnz
xor
shlb
xchg
mov
and
mov
xor
popf
mov
mov
cmpl
test
bound
lret
pop
roll
jmp
rorl
jbe
dec
mov
ds
jne
into
fwait
sahf
in
in
inc
sub
sub
push
jl
xlat
mov
mov
int3
enter
dec
ja
das
movsb
sub
lods
bound
mov
push
mov
fsubrs
shlb
mov
fs
push
ret
aas
jge
pop
outsl
loopne
or
jne
dec
scas
mul
inc
pop
sub
cmp
inc
dec
ljmp
popa
pop
xlat
jnp
in
dec
scas
fwait
mov
sbb
add
dec
mov
or
movsl
mov
dec
jne
sti
jne
cmp
clc
sub
and
xor
movb
push
popa
icebp
ror
sub
jg
and
in
xor
addl
data16
ss
inc
xchg
mov
sbb
jmp
sub
call
sbb
fisttpl
test
mov
call
fdivs
cmpsl
adc
test
and
pop
test
scas
mov
gs
pop
outsl
pop
icebp
jno
or
pop
fsubr
inc
movsl
mov
adc
ret
sbb
jmp
inc
popa
lcallw
push
jmp
sbb
mov
lret
mov
and
lods
add
movsb
xor
les
fnstsw
lods
lock
clc
nop
adc
out
add
inc
mov
out
test
xchg
xchg
cmp
mov
add
sub
pop
fistl
xor
sbb
mov
xchg
inc
mov
mov
jo
loope
mov
pushf
lahf
mov
add
shll
adc
fwait
push
icebp
stc
mov
xor
pop
pop
jo
js
insb
add
and
xchg
push
ffree
sbb
push
stos
sbb
xorl
xchg
mov
imul
je
mov
adc
push
mov
push
orl
aaa
push
pop
out
mov
icebp
lds
xchg
int
popf
rcrb
and
pop
xor
rcll
jbe
or
mov
fadds
pop
jne
cwtl
pop
jp
loope
sbb
icebp
sahf
push
dec
cld
out
scas
imul
cli
adc
in
jmp
shlb
and
fwait
jnp
push
push
arpl
packsswb
mov
sarl
mov
dec
dec
xor
sub
mov
jns
jb
imul
xchg
hlt
inc
mov
jns
shlb
aad
fwait
mov
test
or
push
inc
loop
sub
pusha
xchg
es
mov
orb
pop
into
and
fistl
outsb
cli
dec
or
cmp
notb
push
fcoml
test
push
out
aam
sub
jo
sub
rcr
adc
fs
xor
xorl
xchg
fldl
add
and
dec
xchg
shr
sbb
lcall
les
dec
add
sub
push
rcrb
in
and
lcall
test
sub
in
lods
lret
test
xchg
pop
fdivrp
or
jnp
push
jle
xchg
fs
sbb
addr16
pop
fs
xor
cwtl
daa
ret
jge
add
je
fwait
dec
mov
push
daa
add
or
rcll
clc
in
ja
dec
outsb
push
or
sbb
insb
les
insb
xor
mov
lea
push
imul
and
repnz
inc
rclb
sub
lds
js
inc
xchg
outsb
call
shll
pushf
dec
rcll
sub
movsb
lods
cltd
fidivs
out
nop
stc
fistl
inc
int
sub
sbb
sub
and
mov
js
stos
cmp
adc
popa
es
scas
call
pop
cli
das
adc
inc
ret
pop
mov
in
in
stos
jge
inc
pushf
pop
icebp
std
sub
jecxz
push
sub
adc
pusha
add
push
xor
adc
adc
add
out
insl
pop
add
dec
cmp
sub
dec
stc
xchg
mov
fwait
sub
mov
into
inc
mov
daa
xor
mov
popf
outsl
sbb
insb
inc
or
in
push
pusha
lea
inc
in
or
jo
push
pushf
jns
call
pusha
add
sahf
dec
call
pop
jns
sub
lds
ja
push
icebp
insl
outsb
push
xchg
inc
in
fisubs
scas
out
mov
mov
pushf
mov
push
jmp
aaa
or
pop
pop
mov
push
cmp
jbe
jb
inc
xacquire
sahf
lea
adc
xchg
cmpsl
sub
mov
jnp
xchg
fcompl
stc
or
nop
xchg
mov
xor
push
outsl
jl
inc
cld
dec
into
mov
faddp
ljmp
daa
inc
pop
cmp
data16
xchg
outsb
push
mov
push
mov
mov
aas
cmc
pop
mov
sti
mov
xchg
sub
dec
mov
lods
js
jb
js
pop
mov
popa
or
dec
mov
mov
cwtl
addb
and
dec
mov
pop
mov
and
fsubs
jo
fistpll
js
rcrb
or
clc
jmp
out
lahf
xchg
xor
adc
sub
and
stc
xchg
call
loope
add
push
aas
sbb
out
ljmp
or
loop
sbb
adc
and
lds
test
sti
ss
lret
jnp
imul
xchg
mov
pop
loope
ljmp
mov
cmpsl
sub
inc
xchg
xchg
ds
cmpsl
mov
ret
idivl
add
out
adc
bound
int3
fwait
and
add
xor
mov
in
pop
test
push
jns
cmpsl
fsubs
xchg
xor
testb
enter
iret
jns
mov
pop
or
call
lods
fs
cmp
xchg
cmp
jg
sbb
ficoms
jne,pn
cs
in
xor
push
jecxz
fists
add
xor
xchg
daa
mov
inc
ljmp
or
adc
mov
xchg
clc
cltd
sbb
das
jno
mov
xor
or
sbbl
int3
aaa
inc
inc
xchg
mov
jmp
pop
loop
mov
jg
jp
dec
add
std
lock
xchg
aas
adcl
lcall
rcr
inc
push
xor
mov
rcrb
pop
or
sahf
jbe
ret
mov
sbb
push
sbb
pop
cmp
addr16
mov
int
mov
loope
or
pop
inc
mov
pop
cmp
repnz
mov
cs
mov
push
ds
inc
pushw
and
inc
mov
inc
pusha
ret
inc
pushf
arpl
shll
cmpsl
jo
dec
push
or
push
mov
aas
cmc
cmp
clc
jae
js
in
sbb
and
insb
jo
sar
or
popa
ret
jle
push
test
add
shl
and
add
xchg
stos
sub
call
mov
jl
dec
mov
imul
add
pusha
inc
add
ffreep
ja
gs
mov
in
pop
add
xor
xchg
fcomps
cs
adc
sub
fsubrl
adc
popf
lret
insl
push
out
lods
int
mov
push
ja
add
aas
inc
mov
push
jns
sub
pop
icebp
xchg
inc
inc
sub
rcrl
push
sub
das
jae
ret
out
or
push
push
pop
xchg
lods
leave
inc
xchg
cmp
into
aaa
ja
adc
daa
icebp
jle
adc
stos
mov
or
pop
sbb
rep
std
and
mov
mov
aaa
dec
xchg
or
es
mov
stc
imul
mov
xor
or
mov
pusha
in
icebp
shlb
xchg
mov
mov
push
push
into
shl
sbb
mov
sbb
popa
push
lods
xlat
sub
jp
aaa
and
movsb
jle
inc
out
adc
in
mov
clc
dec
incb
es
xchg
mov
int3
pop
out
shl
mov
add
mov
push
lret
mov
push
test
cmc
mov
sub
cmpsl
js
add
xor
pop
jnp
in
xor
lret
mov
push
and
mov
mov
or
push
jmp
push
jne
mov
int3
inc
or
js
cmp
insl
xor
out
shll
test
xchg
fnstcw
call
mov
pop
out
sbb
mov
mov
cmpsl
jl
mov
cmp
sub
std
cmp
test
sbb
mov
sbb
inc
xchg
orps
sub
aad
push
xor
cmpsb
xchg
in
fcoml
cmpsb
adcl
xor
dec
stos
dec
dec
jmp
add
shll
lret
sub
lea
leave
and
jo
add
inc
push
push
aas
xor
jae
scas
out
mov
jno
jno
fwait
mov
lods
in
jnp
ret
enter
mov
mov
sub
das
enter
xchg
fsubrl
scas
test
insb
rolb
lahf
mov
inc
dec
push
pop
jns
cmc
testl
das
in
add
outsb
sbb
pop
in
mov
ljmp
cld
pop
repnz
in
xchg
into
push
movsb
retw
and
mov
add
xlat
outsl
push
sbb
xlat
sbb
pushf
inc
mov
mov
rclb
xchg
shlb
xchg
rolb
insl
push
cmp
mov
inc
loop
sub
ja
push
or
sar
or
test
sbb
fsubrs
and
scas
testb
jo
repnz
sbb
cmpl
and
xor
xchg
lea
data16
fwait
lods
push
push
mov
fisubrl
std
mov
fnstsw
gs
mov
mov
into
push
mov
add
lcall
dec
pop
lret
aam
push
jbe
mov
subb
mov
loop
insb
pushf
or
ret
sub
rorb
adc
pop
adc
dec
jbe
outsl
mov
or
dec
mov
mov
inc
xchg
roll
icebp
fdiv
dec
push
loop
aas
clc
mov
repz
mov
jbe
ss
scas
inc
cmpsl
or
dec
add
jle
rcrb
push
mov
loope
push
movsl
jmp
dec
or
jae
fwait
lahf
fidivs
int3
push
cmc
sti
xor
mov
push
roll
cmc
jecxz
adc
and
push
fildll
loopne
stc
inc
dec
outsl
pop
dec
daa
orl
das
cmovle
loop
pop
rorl
add
mov
ljmp
inc
cmc
lock
out
or
cld
stc
sbb
lods
test
mov
xor
cli
jmp
add
inc
rclb
cmp
int
clc
shl
aam
pushf
pushf
inc
rcrb
add
pop
lret
pop
adc
push
inc
push
mov
xchg
sbb
cli
icebp
pop
mov
jbe
push
imul
push
arpl
lret
dec
inc
sti
jp
push
imul
cld
outsl
inc
push
daa
leave
push
std
cmp
enter
mov
mov
push
and
jecxz
sub
enter
push
push
pop
sub
sub
and
cs
cmp
mov
into
clc
aad
lcall
pop
jmp
push
mov
gs
out
sbb
enter
mov
cmp
out
aam
jge
mov
insb
push
scas
imul
push
xor
mov
inc
mov
repnz
aas
andb
or
xchg
rcrl
insl
xchg
mov
mov
mov
pop
push
dec
push
mov
inc
xchg
xor
in
in
incl
sub
push
out
xor
cs
pop
sub
mov
xor
imul
inc
mov
xchg
xor
fdivl
out
push
sub
xor
std
xlat
dec
arpl
inc
jg
cmpb
xchg
repz
sub
aam
ljmp
rclb
movsl
cmc
mov
pop
adc
mov
fistpl
repnz
mov
and
inc
push
stc
aam
jne
add
cmpsl
in
aam
push
outsb
cmc
rcrl
and
push
outsb
inc
cmp
dec
sub
and
pop
in
lahf
mov
jo
pop
repnz
pop
mov
roll
cmp
adc
fsub
push
inc
imul
out
scas
add
push
xor
andb
mov
mov
jp
arpl
scas
inc
adc
loop
adc
cld
pop
mov
addl
stos
or
fisubl
push
mov
cmp
adc
sub
loope
xor
or
scas
ljmp
dec
mov
rolb
icebp
shl
jg
loope
pop
mov
pop
inc
mov
icebp
sahf
filds
callw
jle
pop
or
fcoml
test
dec
scas
xchg
mov
rol
mov
popa
mov
and
popf
xor
aam
cmc
inc
rcl
inc
cli
pusha
inc
rorb
inc
cmp
in
push
icebp
fisubl
add
xor
jg
dec
aam
aad
add
cli
and
mov
pushf
push
lea
mov
lret
test
xchg
mov
aas
add
or
cmp
stos
sbb
xchg
fisttpll
ss
xor
or
jl
test
push
push
cmp
sbb
ret
sub
les
jl
xor
lods
aas
popa
fadds
sbb
xchg
pusha
cs
inc
les
jbe
in
sbb
jmp
enter
lds
push
sbbl
mov
shll
xor
xchg
ja
add
and
test
jb
jle
pop
movsl
xor
icebp
push
xchg
ret
insb
push
adc
inc
clc
test
sbb
sbb
aad
xchg
jo
dec
rorb
cmp
and
sbbb
xchg
lcall
fwait
inc
add
cs
jp
dec
popa
jno
inc
inc
loopne
sti
push
inc
aaa
aas
test
inc
pushf
push
xlat
mov
push
mov
dec
lahf
ret
inc
aad
cmc
sbbl
in
test
ss
and
lods
test
ss
mov
fstpl
loope
jae
iret
popa
mov
mov
dec
addl
mov
xchg
rorb
mov
jno
lret
call
sbb
cwtl
add
mov
dec
pop
lds
je
xchg
fucomi
out
lcall
iret
pusha
adc
mov
xchg
xor
in
or
mov
adc
mov
rolb
sbb
or
fsubs
cmpsl
scas
in
add
ss
adc
rorb
dec
nop
scas
mov
xchg
xchg
adc
mov
dec
fnstenv
inc
sbb
nop
into
mov
repnz
iret
xchg
pop
xchg
cld
push
jne
or
xor
test
mov
xchg
pusha
add
cmp
std
cmp
jmp
ja
jl
add
inc
pop
lret
sub
mov
int3
dec
dec
pop
adc
xor
dec
push
mov
aam
loop
jle
add
add
sbb
in
mov
add
hlt
adc
es
mov
stos
and
shll
cmp
pop
inc
sub
add
in
sarl
jb
lea
frstor
and
hlt
cmpsl
push
mov
inc
js
pop
lods
test
test
xlat
push
mov
popa
addr16
std
add
jmp
cmpsb
sub
push
leave
inc
ret
xchg
add
out
sbb
ja
inc
cmpb
dec
popa
jg
adc
xchg
cmp
dec
or
mov
dec
or
bound
sub
push
out
test
outsl
cmc
cmpsl
movsl
pusha
dec
add
and
ds
cmpsb
cmpsl
test
pop
xchg
les
sub
xchg
push
cmp
enter
inc
stc
xlat
push
out
xchg
or
pop
aas
push
or
leave
aas
mov
cli
outsl
pushf
fldl2t
addr16
loope
bound
xor
mov
das
sub
pop
push
cmp
in
and
jmp
add
xor
fucomi
xor
mov
fs
xchg
dec
jno
hlt
mov
sbb
std
cltd
test
xor
aam
push
fucom
xchg
mov
sub
notb
or
loop
ret
jecxz
xlat
ljmp
lahf
sub
outsb
dec
call
inc
push
adc
sbb
aaa
xlat
out
stc
sbb
inc
pop
in
xchg
hlt
imul
pushf
repz
mov
lret
mov
in
insl
insb
stc
cli
cli
test
nop
sub
jo
dec
fucomi
xor
mov
stos
lahf
loope
push
mov
cs
loopw
cwtl
and
pop
insb
mov
and
ret
loop
sbb
cmp
fnstcw
cwtl
aaa
sub
stos
push
data16
mov
inc
or
fstpt
imul
add
xor
mov
jle
add
sub
jge
cmp
popf
sub
subl
call
mov
mov
sbb
jae
sbb
jecxz
daa
ret
mov
xchg
imul
inc
xor
jbe
pop
mov
mov
xchg
lret
shrl
xchg
and
fwait
xchg
add
les
add
icebp
mov
out
mov
mov
inc
or
out
rclb
add
call
jne
or
dec
imul
jmp
jp
orb
lret
fisubs
jle
sub
icebp
cmc
ds
fidivl
mov
sub
jno
dec
jmp
pop
lcall
push
sahf
enter
xchg
xchg
pusha
add
daa
pop
pop
push
data16
cwtl
movb
cmp
daa
divl
hlt
xchg
outsb
sbb
repz
push
bound
lret
push
out
cmp
out
push
shrl
mov
add
enter
hlt
push
sub
shr
call
push
pop
jl
imul
jns
push
sti
adc
data16
cmp
push
jo
push
xor
gs
dec
jecxz
test
mov
or
pop
dec
test
or
addr16
sbb
xchg
jns
cmp
xchg
cli
out
xchg
adc
push
loopne
add
addr16
or
subb
adc
outsl
and
in
mov
movsb
jmp
push
fstpl
call
add
lds
insb
xor
xchg
push
add
jns
push
dec
jge
arpl
popf
xchg
loopne
ret
pop
loopne
movsb
dec
insb
push
sbb
stos
sbbb
les
add
decl
and
push
stc
mov
cmc
xchg
stc
pop
push
xchg
jb
jno
fstpl
stc
lods
loope
test
mov
dec
pop
in
data16
or
out
mov
ret
ss
pop
imul
rorb
sbb
adc
popa
scas
push
or
dec
sub
mov
inc
add
into
mov
scas
adc
dec
mov
adc
clc
adc
jecxz
rolb
fildll
sub
imul
lret
cmp
sub
push
rcrb
cltd
ds
hlt
sbb
aad
insb
stos
cmp
ss
sbb
in
or
incl
loope
pop
cltd
stos
dec
xor
cli
inc
dec
ljmp
cmp
sbb
sbb
sub
and
and
aad
and
call
cmpsb
popf
adc
lds
dec
pusha
test
and
sub
imul
js
repz
cmp
ret
mov
shrb
adc
sbb
inc
sub
mov
in
sbb
addr16
mov
sbb
fisubl
es
frstor
jl
clc
pop
das
out
out
or
xor
jmp
push
pop
jmp
jb
paddusw
mov
xor
jg
pop
cmp
arpl
sub
ret
testl
and
mov
fnsave
int
xor
sub
loop
cli
scas
iret
sahf
mov
rcrl
add
add
push
mov
and
cmpsl
mov
scas
cmp
jg
xchg
pop
int
cmp
scas
insl
sub
lods
xor
inc
popf
cmp
int3
outsl
jbe
ss
scas
sbb
pop
scas
inc
lret
inc
repnz
mov
add
xchg
sbb
pusha
xchg
or
mov
adc
iret
icebp
mov
dec
icebp
cmpb
cmpsb
fs
sbb
jne
dec
inc
jp
add
jnp
fistps
dec
sbb
adc
imul
mov
int
cmp
lds
xor
xor
call
sti
dec
adc
les
imul
sbb
push
call
rcl
lds
cs
daa
or
dec
repz
dec
int3
icebp
push
jle
loope
inc
aas
std
inc
loopne
push
pop
jmp
movsl
pop
aam
test
popf
add
or
mov
push
aad
mov
push
jb
icebp
cmp
aas
and
sbb
xor
icebp
add
push
aam
inc
daa
xchg
push
das
mov
daa
or
mov
decl
cmp
pop
push
aam
je
push
mov
fcom
ret
popf
or
mov
mov
mov
or
fcompl
mov
pinsrw
dec
pop
jecxz
xchg
push
div
dec
adc
inc
jb
call
sub
orb
lahf
dec
je
xchg
sub
dec
lock
sub
shl
ds
adc
pusha
pop
xor
ds
jg
dec
push
inc
outsb
xchg
out
inc
cmp
add
and
fmul
or
out
push
cmp
int3
fwait
sbb
stos
hlt
pop
xchg
xchg
shr
jns
test
popf
nop
jecxz
test
call
outsl
dec
pop
insl
jae
pop
xor
repz
ds
outsb
dec
ret
in
mov
sti
jbe
ja
fmul
push
insl
fcompl
dec
add
add
fidivs
cmp
xor
xor
or
fbstp
repnz
or
leave
push
sbb
daa
sbb
aad
aaa
mov
pop
incl
pop
dec
add
jb
aaa
pop
inc
in
pop
dec
mov
mov
mov
add
cmpsl
sub
and
xorl
int3
and
xchg
or
movsl
mov
ljmp
movsb
cmp
pusha
rorb
or
and
mov
xchg
aam
sti
leave
iret
cmc
ja
jnp
dec
jmp
inc
in
leave
stc
or
sub
nop
xor
fiadds
push
adc
dec
cmp
lret
sub
xor
adc
cmp
inc
pop
divl
in
jnp
imul
lcall
dec
stos
movsb
outsb
ds
sbb
fadd
xchg
xchg
jo
jbe
ljmp
pop
mov
sbb
lea
sarl
leave
fwait
and
inc
inc
fdivrs
xchg
cmp
mov
rcrb
insl
test
test
sbbb
mov
cwtl
cmpsb
mov
aas
pusha
mov
dec
dec
cmp
out
mov
inc
daa
loope
hlt
cwtl
test
divl
sub
xchg
add
pop
fldenv
mov
ret
jo
xchg
xchg
cmc
add
lea
jle
shrb
out
xchg
insb
clc
jmp
dec
pop
ss
sahf
xor
pop
cmp
pop
insl
adc
sbb
fs
lahf
cmp
jecxz
std
mov
out
adc
stc
cmp
inc
popa
arpl
sahf
aad
xchg
mov
repz
test
ss
sbb
sub
std
xchg
outsb
ds
loopne
dec
mov
sbb
push
adc
push
inc
outsb
and
or
loopne
or
or
dec
inc
in
into
bound
stos
test
dec
and
pop
xor
outsb
clc
rcll
push
jge
xchg
ret
sub
pushf
lea
add
xor
sub
cmpsb
ror
mov
xchg
in
fcoms
pop
flds
dec
fwait
or
push
and
daa
push
adcb
jl
addr16
pop
dec
jecxz
loop
cltd
aaa
or
int
imul
shlb
stos
shl
or
es
sbb
sub
xchg
push
test
xor
popa
adc
push
dec
push
fcmovne
jb
push
mov
push
mov
jecxz
inc
lods
push
jecxz
in
xchg
xorb
outsl
jns
sbb
jecxz
mov
leave
add
mov
mov
popa
mov
es
jg
cmp
push
jecxz
push
sbb
jns
lods
adc
sahf
aas
xchg
lea
js
jl
rolb
mov
shl
test
test
push
sbb
mov
scas
dec
xchg
dec
cli
mov
out
rcl
xor
pop
sti
inc
jno
scas
imul
mov
fildll
rcrl
in
stos
dec
subl
xlat
push
mov
jmp
fwait
pop
mov
mov
mov
sub
adc
mov
sbb
pop
sbb
add
stos
loopne
sub
into
data16
fsts
and
jge
or
inc
sub
inc
movb
fdivl
xchg
and
icebp
adcb
aaa
pop
mov
pop
orl
adc
mov
dec
dec
cld
loope
mov
aam
ljmp
gs
clc
and
adc
aam
push
sbb
adc
sub
test
lds
add
icebp
cmpsl
rorb
and
std
sti
lret
pop
sti
data16
and
add
mov
daa
notb
mov
data16
fists
mov
fs
and
shrb
add
inc
inc
mov
mov
fisttpll
xchg
xor
imul
lock
push
fiaddl
sub
push
in
stos
stc
daa
add
pop
mov
movsb
sahf
sub
pop
arpl
jno
cmp
jns
sub
jno
jecxz
and
sub
imul
sbb
mov
mov
jb
cmp
fldl
sub
sbb
mov
pop
fildll
add
das
hlt
loope
test
int3
and
imul
cld
add
fidivrl
adc
or
mov
mov
stos
shlb
movsb
sbb
test
jae
pop
dec
jb
xor
scas
xchg
sub
cs
xor
loopne
insl
jo
mov
push
jmp
adc
inc
cs
data16
scas
sub
in
fcompl
and
stc
or
and
push
lret
js,pn
bound
popa
sub
push
jp
arpl
sub
mov
sti
sbb
imul
xor
loopne
pop
push
mov
sbb
rclb
jmp
mov
movsb
outsb
adc
xchg
scas
stos
in
bound
add
mov
xlat
cmp
data16
xchg
ret
inc
xor
std
adc
or
test
or
lcall
xor
xorb
sti
jb
fwait
mov
push
jg
addl
fisubl
fnstsw
sbb
repnz
sub
jbe
loope
cmpsl
scas
addr16
mov
xchg
mov
inc
pop
sahf
outsb
xchg
mov
les
mov
movsl
and
in
or
push
mov
mov
and
cmpsl
cwtl
call
test
jne
dec
push
sbb
jnp
and
enter
inc
gs
cs
sbb
ret
push
fists
out
cmp
daa
in
push
es
rcll
mov
repnz
insl
push
xor
ret
cmp
or
in
sbb
idiv
or
cmp
pop
dec
xlat
jne
xor
out
push
push
insb
xorb
dec
add
lods
lcall
push
pop
stc
in
lock
negl
mov
pop
insl
test
dec
pop
scas
dec
mov
les
in
pop
push
hlt
ljmp
outsl
fmull
xorl
mov
std
out
cmc
movsl
mov
loop
imul
jp
jle
jmp
sub
adc
rcr
pop
pop
mov
mov
jecxz
cmp
aad
in
adc
xchg
enter
mov
inc
cmp
or
jmp
adc
mov
dec
les
inc
out
lcall
jnp
pop
leave
dec
je
add
sarb
lds
inc
lret
sbb
sbb
or
orl
aaa
jae
inc
inc
lcall
cs
adc
sub
xor
mov
cmp
xchg
jno
xchg
gs
mov
and
jp
lcall
inc
daa
xchg
pop
xchg
xor
subb
out
inc
dec
gs
inc
test
pop
xchg
and
mov
push
ds
inc
insl
sub
in
pop
mov
outsb
jb
cmp
daa
xchg
pop
sbb
fcoms
and
jbe
out
push
or
test
lock
lods
dec
jl,pt
xor
cmp
sub
cs
dec
mov
daa
xor
sahf
das
insl
fidivs
and
jne
push
iret
rorl
jg
addl
and
sbb
ss
jle
xor
xchg
mov
inc
xchg
or
ss
add
sbb
sub
out
loopne
xor
loop
pop
jnp
insb
push
mov
jnp
and
loopne
in
and
mov
xlat
fldl
stos
pop
imul
xor
mov
aas
out
and
repz
push
bound
fstpt
pop
mov
insl
arpl
and
xchg
icebp
xchg
mov
xlat
adc
cld
push
mov
xor
xor
lret
mov
in
stos
dec
fldcw
aas
pop
cmc
dec
xor
add
adc
stos
sti
xor
mov
pusha
dec
mov
xchg
loope
xchg
mov
mov
sbb
lods
add
call
xchg
sub
out
test
leave
jae
adc
loopne
adcl
fisubs
das
mov
lret
movsl
pop
popf
add
mov
into
xor
adc
es
inc
adc
push
scas
mov
lds
sub
faddl
push
out
jmp
pop
stos
fsub
mov
mov
pop
jl
cli
ret
enter
mov
or
xchg
inc
test
out
or
pop
jge
es
inc
xor
dec
sbb
dec
xchg
subl
lahf
dec
dec
adc
rclb
cmpsl
sub
push
out
movsl
xor
stc
mov
add
repz
in
ret
and
or
test
fdivp
lret
cmp
dec
sbb
fsub
jnp
mov
cmc
cs
int3
push
shl
out
xor
push
adcl
add
sub
movsl
sbb
aas
add
xchg
sub
xor
rcrl
xchg
or
bound
adc
push
jb
jno
pop
repnz
ret
lds
out
es
cs
int3
mov
fs
int3
xor
sbb
repnz
jp
int3
fwait
shrl
sbb
jmp
jle
mov
add
jp
cld
sti
fcoml
sbb
rcll
dec
sub
mov
jb
and
adc
das
push
xchg
inc
cmpb
pop
pop
cmp
or
mov
jne
sub
std
call
add
push
sub
xor
cmc
movsl
sbb
addr16
mov
jns
fld
leave
cmc
cmp
hlt
stos
mov
push
pop
ret
add
mov
int
cld
fwait
xor
enter
call
scas
data16
ror
popf
push
fcompl
jg
fdivs
and
or
mov
inc
bound
popf
and
pop
inc
pop
xor
call
cld
push
cli
cmp
dec
fdivs
ss
fildll
push
pushf
ds
mov
inc
push
adc
fxch
in
mov
scas
inc
and
and
cs
mov
in
mov
adc
ds
adc
pop
xchg
insb
aad
cmp
push
nop
mov
fsubs
ss
sbb
pop
add
xor
adc
stc
lahf
shlb
dec
cmp
dec
fnstcw
in
adc
mov
lahf
add
xor
mov
shll
push
fcmovu
dec
aaa
mov
das
add
fadd
jecxz
cmc
sbb
sti
mov
por
rolb
ja
lret
pop
cld
enter
mov
sbb
or
inc
ret
pop
xor
pop
mov
and
clc
sbb
loop
dec
pop
lret
mov
inc
inc
sbb
mov
mov
or
mov
xor
ja
sbb
adc
cs
push
adc
xor
dec
and
arpl
testl
jbe
lock
popa
test
push
or
fsubl
loopne
jp
scas
scas
aad
adc
add
js
mov
scas
xchg
dec
in
jmp
rolb
and
test
sub
popf
jge
int
mov
dec
jb
mov
notl
pop
iret
and
or
push
push
mov
les
dec
mov
add
inc
mov
sahf
jnp
into
movsl
push
or
mov
sbb
mov
and
sti
cmp
cs
push
bound
aam
cmp
es
sub
lds
sarl
mov
or
and
mov
dec
es
stos
xor
mov
stos
incl
ret
mov
pop
loop
dec
fnsave
stc
call
push
mov
jns
rol
sub
pop
shr
fistps
jb
pushf
xor
test
push
test
and
mov
jnp
adc
ret
pop
clc
mov
ljmp
es
and
ds
rcl
in
int
cmc
mov
or
add
dec
stos
push
mov
fdivs
push
xor
std
and
mov
cmp
pushf
xor
or
xorb
sbb
sub
in
dec
test
push
and
bound
fistpll
xor
lcall
out
push
je
in
and
jg
loop
roll
sar
mov
sub
and
fucom
mov
out
mov
icebp
mov
sbbl
lcall
adc
popa
push
push
xor
arpl
jno
imul
leave
pop
lret
repz
add
push
mov
insb
iret
jno
sub
cmp
mov
dec
out
mov
fsubrs
jb
push
xchg
xor
dec
add
mov
cmpsb
cmpsl
inc
xorb
in
jecxz
or
lahf
test
sbb
pop
std
lods
sub
dec
shl
es
adc
push
add
out
jbe
aaa
xlat
les
adc
leave
fsubs
test
andb
push
fadd
cmp
testl
xor
xchg
pop
xlat
mov
adcl
push
cmp
jbe
enter
push
stos
jg
xorb
pop
mov
and
fmull
ret
pop
xchg
push
daa
rorb
insb
xor
xor
ss
push
add
sbb
js
jo
addr16
jle
jle
sbb
stc
mov
jmp
std
xchg
and
inc
in
iret
mov
xchg
sub
or
mov
or
stos
mov
adc
push
sub
in
adc
jb
and
mov
daa
lcall
adc
pop
add
fisubrl
mov
lcall
clc
popf
push
popa
jp
adc
or
mov
dec
loope
mov
inc
fcomps
fs
mov
or
pop
nop
es
jge
ret
int3
data16
out
addl
ret
cmp
mov
dec
push
mov
lods
lcall
xchg
add
jmp
mov
jbe
outsb
mov
lods
jmp
cmpl
pushf
mov
ss
cmpsl
or
sbb
std
mov
icebp
arpl
and
cmp
loop
jne
shll
pusha
call
xchg
cmp
cmpsl
or
icebp
les
or
or
outsl
add
pop
mov
cmpb
mov
inc
cmp
mov
loop
dec
cltd
hlt
cmp
daa
sahf
adc
loope
test
mov
jle
push
jae
into
inc
call
xchg
add
jl
xchg
movsb
sbb
lret
pop
addr16
sub
loope
push
mov
mov
inc
rcrl
xor
push
mov
int3
movb
popa
adc
mov
cmp
inc
xchg
pop
jl
sub
arpl
sub
adc
daa
inc
add
sub
daa
mov
in
pop
fdiv
std
pop
jle
dec
aam
lods
dec
leave
add
push
inc
mov
jae
stos
pop
xlat
jl
mov
mov
sub
iret
pop
call
adc
sub
add
xor
mov
fisttpll
pop
xor
and
fistpl
dec
lods
and
push
leave
stc
mov
mov
cmpsl
cltd
cli
int
mov
sbb
repnz
in
nop
cs
inc
xor
clc
jmp
pop
bound
mov
mov
outsl
xchg
cmp
popa
daa
decl
mov
clc
mov
popf
sbb
jle
dec
notb
add
jl
push
lods
push
inc
sbb
cltd
mov
xor
out
push
mov
pop
lea
inc
sub
imul
jp
pop
enter
cltd
test
mov
dec
lcall
xchg
sub
xor
push
adc
jo
ja
mov
add
filds
popw
rcr
jne
add
out
xchg
movsl
cs
xchg
loope
out
push
lret
gs
loop
testl
mov
cs
cmp
xchg
jo
enter
jns
inc
movsb
pop
and
daa
lcall
ficoml
mov
pop
icebp
pop
push
push
or
inc
jns
fsubp
dec
outsb
inc
xlat
sub
push
add
roll
ljmp
repz
popf
cli
adc
dec
mov
push
ret
inc
cwtl
ss
dec
mov
dec
fs
jb
mov
in
xchg
inc
movsb
sub
mov
in
test
in
outsl
xor
xchg
cld
sub
test
outsb
push
xor
jp
push
imul
add
cmpsl
jp
call
or
mov
lahf
pop
pop
mov
es
ss
insb
xchg
push
adc
pop
mov
xor
add
cmp
dec
int3
mov
stc
add
cmpsb
subb
push
mulb
call
jae
lods
jmp
dec
gs
fcmovu
jo
push
adc
jle
das
lock
push
or
jnp
fdivp
xchg
pushf
inc
xchg
adc
add
mov
ds
lods
and
mov
lods
sub
xchg
test
lcall
and
nop
push
xchg
cmp
shrb
push
lret
sub
push
pop
cmp
dec
adc
xor
jmp
stc
and
pop
mov
scas
add
dec
in
lret
aam
adc
lcall
xor
iret
add
add
jge
divb
sbb
dec
push
sub
addr16
dec
sbb
ljmp
sti
ds
orb
pop
sub
ds
adc
xchg
pop
inc
or
mov
sbb
outsb
popf
mov
pop
enter
jae
mov
mov
dec
xchg
add
cwtl
mov
mov
inc
inc
pop
or
xor
or
push
sub
cmp
jecxz
or
and
add
or
sbb
ljmp
inc
mov
mov
into
into
pop
sahf
jp
mov
mov
adc
iret
xor
lret
xor
jnp
sahf
mov
jae
aaa
aas
lods
sbb
mov
in
out
das
dec
movsb
mov
aaa
andl
decb
and
lret
es
pop
stos
inc
loope
insb
aam
mov
xchg
adc
and
mov
stc
or
jge
insb
ljmp
arpl
sub
fwait
popf
std
sbb
adc
fidivrl
mov
ja
add
push
int3
push
fldenv
sahf
xchg
fldcw
cwtl
inc
mov
add
aas
jmp
in
daa
out
xor
cmpsl
adc
mov
aaa
sbb
push
cmp
mov
loop
ljmp
pop
push
pop
or
sub
and
arpl
and
cmp
mov
mov
add
ret
jecxz
xchg
sti
out
mov
push
jnp
and
sub
stos
pop
mov
xchg
hlt
leave
pop
adc
dec
lods
orb
lahf
jmp
call
jmp
lods
mov
push
mov
pcmpgtw
mov
lret
push
xor
mull
xor
ds
sahf
imul
call
test
idiv
movl
and
mov
pop
test
mov
movsb
mov
ljmp
movb
sbb
jo
push
pop
sub
aad
into
jns
shll
mov
lret
adc
mov
cld
in
out
add
fldt
sub
ret
cwtl
cs
pop
hlt
jne
stc
push
xchg
repnz
pop
add
and
push
add
movsb
xchg
stc
xchg
mov
subb
cli
jnp
incb
xchg
add
insl
sbb
cmp
stc
sbb
iret
les
inc
add
sbb
xchg
mov
dec
sahf
daa
adc
movsl
icebp
mov
jbe
and
cmp
iret
dec
out
mov
mov
repz
jecxz
stc
shl
mov
int3
lret
and
js
fnsave
inc
sar
xor
add
push
sub
addl
addr16
or
sbb
ljmp
dec
sub
bound
jnp
and
mov
pop
mov
xorb
pop
out
sbb
gs
adc
leave
je
in
pop
cmp
inc
lods
arpl
cli
xchg
cmpsb
mov
adc
cmpsb
jmp
inc
out
mov
push
sbb
inc
mov
mov
cmp
daa
outsl
jae
icebp
iret
jno
popa
inc
jmp
sub
mov
xlat
xchg
mov
adc
pop
inc
push
std
lds
pop
xor
pop
ljmp
aaa
js
push
aam
lea
mov
push
jne
mov
mov
mov
aas
mov
cmp
xchg
pop
outsl
or
sti
ss
mov
mov
push
add
incb
mov
dec
sbb
out
fnstenv
mov
fimull
idivb
in
or
adc
mull
sarb
add
add
inc
xor
mov
xchg
arpl
or
adc
xchg
sbb
inc
inc
jne
push
lret
dec
mov
mov
nop
shr
imull
xor
and
gs
js
cmp
cmpsl
cltd
outsb
sbb
std
push
outsl
jno
sbb
adc
dec
dec
int
cmp
lods
jno
std
xor
mov
or
jmp
mov
push
in
out
shll
jmp
pop
cmpsl
mov
iret
pop
inc
jp
cmp
sbbb
jmp
cli
add
dec
xchg
mov
js
cli
jg
xchg
inc
mov
mov
push
mov
scas
bound
popf
adc
std
sbb
or
js
stos
loop
jbe
clc
mov
aas
mov
fs
mov
dec
iret
pop
dec
sbb
shlb
lret
pop
js
or
sub
mov
xor
mov
jecxz
inc
jae
push
cmpsb
rcr
sbb
out
in
sub
lods
fwait
jp
cmp
jle
les
jo
sbb
pop
jl
xor
jo
sbb
rcll
sbb
push
cmp
pop
mov
rcr
stos
sub
cmp
push
ret
mov
adc
adc
jg
mov
shll
xor
and
pop
loope
fdivrs
or
dec
loopne
in
and
pop
out
sub
popa
mov
xor
and
popf
outsb
xchg
sbb
push
dec
ljmp
and
and
cwtl
fwait
ret
push
jp
jp
sub
outsb
add
jne
sub
ss
fs
repnz
or
pop
mov
ja
jg
outsl
mov
cmp
pop
mov
pop
pop
jecxz
xchg
or
xchg
ds
les
daa
in
pop
jnp,pt
add
mov
les
repz
jo
ret
dec
into
jbe
and
jle
dec
push
lcall
lahf
iret
push
or
addr16
and
stos
xchg
cmp
jno
mov
test
adc
sub
sarb
loopne
or
lock
xchg
cltd
negl
mov
mov
and
xchg
jl
lea
xor
push
notl
es
add
mov
inc
shlb
imul
or
repnz
lcall
inc
inc
stos
enter
pop
stos
mov
fisubrs
cmp
sbb
popa
and
outsb
xchg
cs
stos
repnz
std
mov
in
iret
mov
mov
or
cmp
jmp
jnp
loopne
and
sbb
aad
out
and
or
pop
jae
mull
test
shlb
arpl
inc
lret
mov
sub
xchg
out
imul
ss
fldcw
adc
cmp
fs
mov
xor
jmp
push
fsubrl
jb
xchg
stos
add
lret
inc
sahf
dec
fwait
cli
mov
shl
sub
pop
movsl
xchg
fcomi
popf
push
xchg
es
movsl
adc
inc
movsl
xchg
or
push
lds
mov
ljmp
shl
mov
adc
rcrl
repnz
sarb
icebp
ficompl
adc
lahf
and
loop
dec
mov
pop
inc
xchg
gs
dec
jg
out
jp
mov
addr16
ficomps
push
cmp
pop
lahf
popa
js
jle
out
jmp
sub
popa
push
data16
int
or
xlat
gs
jmp
cmp
or
pusha
and
sub
inc
jb
out
dec
fs
ret
ljmp
ret
imul
pop
inc
lahf
pusha
test
sbb
jb
or
inc
les
adc
mov
mov
out
in
inc
cld
pop
frstor
out
rorb
divb
xor
jmp
sub
sbbl
pop
xchg
mov
sub
mov
mov
out
popf
xor
iret
xchg
hlt
sub
repnz
ffree
add
mov
ret
andl
sbb
shll
xchg
or
sbb
jge
push
mov
sbb
popf
imul
push
add
dec
or
push
pop
shrb
cs
push
inc
jbe
mov
mov
insb
adcb
lret
test
mov
addr16
stc
sti
movsb
shll
push
jno
xchg
test
in
test
in
mov
cltd
out
cmp
sarb
stos
pop
pusha
andb
aad
adc
adc
out
jl
jnp
xchg
inc
dec
fidivs
cli
icebp
dec
pop
ret
jl
pop
stc
or
ret
add
les
and
loope
test
xor
push
repnz
xchg
aam
dec
jne
imul
arpl
mov
or
cmp
in
imul
xchg
hlt
xchg
jnp
xor
int
ljmp
mov
inc
out
mov
test
addr16
nop
xor
hlt
pop
sbb
inc
mov
fistpll
sbbb
adc
std
jae
stc
cmp
lret
mov
mov
ja
push
int
pop
mov
shrl
pop
cld
add
xchg
dec
mov
pop
mov
inc
into
jo
movswl
repz
mov
sub
cld
ds
cmp
add
jb
ror
cmp
adcb
sub
ljmp
pusha
lret
mov
xchg
mov
fsubl
adc
sub
jmp
mov
int3
mov
ret
xlat
dec
jmp
and
push
sbb
xchg
sub
cltd
ret
mov
ss
jmp
lret
stos
adc
incl
inc
cmc
mov
cli
ja
addr16
and
scas
mov
push
lods
jg
sub
ja
push
push
repz
adc
dec
dec
ljmp
pop
fyl2x
movsl
cli
sub
cmp
sub
in
sub
cmp
pop
inc
push
add
inc
arpl
jmp
sub
mov
sub
out
inc
lods
fs
sub
lcall
jge
xor
in
shll
push
xchg
inc
mov
jl
lock
fldl
divl
and
packssdw
jo
sahf
dec
fstl
adcb
and
lods
inc
bound
cmpsb
xchg
xor
outsb
ret
xchg
hlt
lock
sbb
mov
daa
cmp
out
js
pop
jno
xchg
pop
xchg
stos
mov
pushf
fs
jae
cmp
jmp
int
andl
add
out
mov
lret
out
adc
andl
fisubs
dec
cmp
imul
and
sbb
nop
push
and
inc
push
movsb
pushl
loopne
pushf
aam
mov
add
arpl
adc
push
jl
pop
cmp
pop
mov
mov
add
leave
rorl
lock
outsl
mov
out
data16
and
sbb
jno
ds
add
faddl
cmp
pop
push
fcomip
mov
pop
int
cltd
inc
les
mov
mov
scas
add
jecxz
jl
mov
mov
sahf
pop
add
add
jne
movsb
cmp
loop
dec
inc
and
push
cmpsb
adc
mov
jbe
loopne
js
shl
cmp
enter
ret
sub
out
test
sub
mov
push
mov
push
loop
hlt
jp
aaa
mov
mov
mov
cmp
in
bound
ror
mov
in
or
xor
push
mov
leave
sub
fcomps
outsb
push
mov
es
sti
or
or
mov
out
lock
iret
testl
fistpll
das
enter
sti
les
arpl
push
mov
push
push
xchg
stc
jnp
sbb
outsb
push
dec
shlb
fbstp
mov
loop
stos
mov
mov
push
cmpsl
loope
fisttps
push
pop
outsb
xor
inc
inc
cmp
jmp
pop
movsl
jnp
push
jmp
push
mov
in
xchg
jl
mov
xor
pop
outsl
sbb
mov
rol
dec
xchg
xor
pop
sbb
gs
jns
or
pusha
xchg
push
sbb
int
xchg
lret
and
js
shll
jg
mov
out
mov
jmp
xchg
mov
xchg
cld
inc
enter
js
and
lock
mov
jecxz
push
into
mov
sbb
add
cmp
stc
cli
fldl
shll
pop
shrl
mov
pusha
and
mov
stos
testl
cwtl
rcl
enter
xchg
or
sub
int3
pop
inc
jle
std
scas
or
xor
andl
xchg
cmpsl
and
ljmp
sarb
ss
lods
lretw
cltd
fstl
repz
pop
xchg
mov
and
in
push
mov
jmp
mov
loope
dec
repnz
xchg
jb
lcall
mov
andl
mov
xchg
fnstenv
daa
mov
inc
aad
pop
pop
mov
jg
in
jle
dec
pop
sbb
xor
mov
cld
jge
lods
and
fstpt
add
jle,pn
push
sbb
mov
es
jmp
shr
pop
pop
mov
loop
push
loope
dec
cli
jl
ret
or
sub
xchg
js
in
cmpsl
sbb
mov
test
and
sbb
push
sbb
bound
push
enter
mov
mov
mov
cmpsl
call
loope
jle
xchg
and
cmp
in
insl
movsb
iret
mov
mov
int3
xchg
int3
lods
cwtl
pushf
push
push
into
rol
sbb
mov
scas
rcl
xchg
sub
add
int
sti
gs
je
call
ljmp
leave
inc
pop
jmp
psllw
lea
mov
mov
cli
and
sub
into
insl
push
and
and
cwtl
popa
add
mov
sbb
lret
cmp
aaa
dec
xchg
ret
inc
cld
mov
mov
sub
jnp
adc
test
mov
push
scas
cmp
and
cmp
out
add
test
or
aas
adc
xchg
jo
or
out
ljmp
xchg
jb
stos
pop
cmp
lods
out
dec
mov
div
mov
rclb
add
or
sub
outsb
xor
or
or
push
xor
push
dec
daa
inc
out
sbb
test
es
sti
or
pop
pop
or
data16
scas
in
pop
rclb
lds
cmovp
jbe
sub
add
es
ret
and
and
mov
stc
cmp
add
jl
nop
popa
and
xchg
sbb
push
in
stos
lock
fmuls
mov
sbb
inc
mov
lret
jnp
mov
in
mov
imul
jp
inc
jg
sbb
cwtl
int
dec
push
ss
mov
in
stos
pop
jg
out
sbb
sbb
push
mov
sub
ds
ret
jmp
jmp
cs
push
in
cmp
in
pusha
leave
push
pop
fmulp
sub
repnz
mov
cmp
pop
add
sbb
xchg
xchg
aas
cmp
movsb
push
rolw
push
ret
mov
or
aaa
push
pushf
mov
ds
cmp
mov
iret
pop
mov
and
sbb
cs
insl
xchg
push
and
dec
add
mov
mov
add
pop
stos
push
sub
inc
test
call
dec
jb
xchg
lcall
xlat
rcl
cmp
sbb
jp
mov
sbb
adc
lahf
rcll
xor
in
out
cmc
push
stos
cmp
stos
aam
cli
fisubrs
shl
mov
sub
aas
and
pop
fiadds
out
or
inc
add
jge
in
out
jns
int
arpl
adc
mov
outsb
jge
lret
ret
mov
daa
jl
movsl
imul
adc
or
and
sub
mov
test
sahf
outsb
add
and
or
mov
and
nop
mov
daa
mov
and
in
cmp
sub
ret
adc
add
pop
int3
mov
jg
inc
jb
and
add
loop
dec
dec
aaa
aad
dec
mov
pop
inc
sub
mov
sub
jmp
sbb
mov
pop
and
repnz
divl
xchg
cli
stos
daa
cli
jb
push
fcoms
dec
mov
sub
or
into
in
lods
pop
mov
push
and
ficoml
loope
sub
push
nop
sbb
xor
adc
sub
cmc
stc
fs
cmpsl
sbb
dec
cmp
inc
pop
adc
cwtl
xchg
jb
movsl
int
retw
push
push
lods
or
movl
jmp
xchg
inc
sub
ljmp
aam
popf
push
jno
pusha
sbb
popa
cs
out
mov
addl
fs
push
and
fisttpl
xor
adc
cmc
sub
cltd
pop
sub
lret
rcr
pusha
test
add
lods
jmp
cli
xchg
sub
out
data16
shll
sub
sub
sahf
add
dec
mov
das
inc
fcmovbe
sbb
not
mov
enter
lcall
addr16
mov
lcall
xlat
outsb
outsb
daa
push
scas
lock
sbb
push
out
pop
cmp
js
leave
or
test
cmpl
jns
push
stos
jns
andb
sub
loopne
ds
lds
xor
push
dec
dec
mov
sbb
mov
sbb
dec
mov
fmull
cmp
push
stos
xchg
aad
adc
mov
negb
lds
fldcw
in
jbe
in
daa
stos
sti
pop
sub
dec
dec
in
push
mov
mov
repnz
add
out
jge
sbb
sbb
in
lods
mov
mov
ficomps
pushf
scas
out
loop
dec
pusha
sbb
pop
pop
stc
cmp
outsb
mov
jecxz
test
lods
je
loopne
mov
mov
ret
lcall
inc
loop
cmpsl
nop
mov
sub
xchg
stos
xchg
jmp
je
loopne,pn
inc
push
adc
jle
fstpt
mov
in
jecxz
adc
loope
push
mov
and
repnz
and
stc
adc
call
and
sti
imul
sbb
scas
nop
lret
faddp
ljmp
add
pop
jg
and
in
dec
iret
add
lds
dec
mov
dec
sub
loop
add
pusha
cmovle
stc
out
or
dec
stc
out
fnstsw
mov
pop
loope
ret
push
repz
test
sar
fldt
adc
out
xchg
xor
enter
div
and
mov
xchg
add
jmp
pop
popa
mov
es
call
fisttps
xchg
mov
xchg
xchg
pop
dec
and
arpl
or
pop
lock
mov
stos
scas
sub
rcrb
add
dec
add
jbe
fdivl
xor
add
sub
mov
repz
cs
push
in
aam
clc
push
sbb
adc
sbb
xchg
mov
lret
mov
das
int
orl
dec
loop
push
mov
aas
les
int
popa
rorl
add
mov
inc
mov
bound
add
xchg
push
xchg
out
sbb
mov
cmp
inc
push
inc
in
cld
ja
adc
mov
std
ljmp
in
mov
jge
cmp
leave
fsts
mov
addr16
movsb
repz
fwait
jmp
cli
stos
cld
inc
xor
cli
cmp
inc
ljmp
jmp
inc
pop
int
add
jl
xchg
out
cmp
xor
sub
sub
arpl
fisubrl
xor
push
mov
loopne
mov
mov
mov
nop
pop
in
push
and
data16
pop
or
mov
xchg
dec
lock
sbb
xor
xorl
or
mov
aad
aam
jmp
cld
hlt
add
inc
imul
sbb
inc
or
aaa
cmp
pop
insb
push
xor
out
popa
jne
mov
jnp
or
je
inc
pop
mov
sbb
add
dec
adc
mov
aaa
push
dec
jb
dec
xor
sub
adc
idivb
addr16
es
xchg
sub
xor
jae
ljmp
shlb
pop
fildl
jae
cmp
aas
and
adc
aas
cmpsl
fsubr
sahf
and
mov
nop
movb
sbb
and
lea
test
pop
push
mov
bound
popa
cmp
sub
and
cs
inc
repnz
movsl
icebp
sarb
insl
jge
out
and
jecxz
daa
jae
outsb
js
fwait
push
jns
das
lret
addr16
loop
clc
out
cmpsl
pop
mov
jns
jbe
jge
mov
in
loopne
arpl
test
cmpsb
mov
in
adc
xor
add
test
push
or
and
data16
gs
push
inc
arpl
enter
ljmp
cwtl
stos
cmp
out
test
sub
mov
scas
and
dec
mov
enter
mov
cli
shrb
or
jmp
aas
push
or
stos
pusha
cmp
aas
fisubrs
in
shlb
xor
arpl
inc
sub
xchg
imul
es
and
outsl
enter
mov
push
inc
negb
aad
scas
sbb
adc
add
je
or
pop
adc
or
ljmp
add
loop
icebp
mov
and
inc
inc
mov
arpl
inc
frstor
and
iret
pop
mov
addr16
add
add
test
fsts
data16
into
jne
adc
jbe
pushl
xor
icebp
pusha
ds
popa
orb
fnsave
mov
cltd
scas
pop
jecxz
cld
inc
shlb
loope
lret
cltd
ds
repz
push
jno
movsb
inc
in
or
das
xlat
or
xor
cmc
in
imull
inc
xchg
cmp
jo
xchg
mov
nop
shrb
sbb
push
sub
mov
jecxz
pop
add
add
xlat
mov
inc
cmp
out
call
ret
outsl
sub
mov
std
negb
lds
lock
test
ljmp
in
fsubrs
push
dec
mov
jno
xor
sbb
xchg
out
push
xor
or
sub
push
aas
lods
xchg
cmc
adc
hlt
mov
or
cmpsl
push
rcr
push
movsb
pushf
inc
or
fsubrs
jns
or
xchg
das
mov
adc
ds
mov
mov
repnz
and
mov
lea
ljmp
cmp
daa
xchg
ja
inc
mov
jns
repz
push
subb
into
scas
push
gs
cmpsl
pop
rclb
loope
or
mov
ljmp
inc
and
daa
mov
adc
add
popa
call
and
int
test
and
cmp
dec
fisubs
stc
mov
dec
incb
scas
mov
jne
mov
out
add
outsb
jbe
ss
pop
mov
scas
out
repz
add
lcall
jmp
and
negb
stc
mov
and
pop
fnstcw
je
jmp
test
xor
out
lods
test
push
orl
out
bound
adc
lods
jge
out
inc
mov
std
lcall
mov
or
and
imul
pop
add
stos
loope
enter
mov
loop
sbb
sar
shl
fdivl
popa
mov
xlat
sbb
add
inc
jb
mov
push
hlt
pop
pop
push
sbb
and
add
push
repnz
adc
clc
psrad
push
dec
dec
out
xor
push
dec
movsb
imul
pusha
int
and
sub
xor
fisubrl
xor
ljmp
add
mov
je
sbb
mov
and
imul
arpl
push
dec
repz
cs
xlat
inc
jae
gs
cmpsb
add
js
xchg
or
xor
dec
lods
and
mov
dec
mov
pop
adc
invd
add
jg
dec
popa
sub
sbb
fucomp
mov
loop
mov
or
mov
pop
dec
xchg
popf
sub
jnp
or
or
push
inc
lahf
sbb
cwtl
aas
jb
ss
jns
aad
or
mov
repz
fisubrs
xor
mull
and
mov
inc
pushf
pop
sbb
inc
insb
mov
arpl
push
pushf
pop
add
movsl
aaa
cli
cwtl
adc
les
lret
nop
adc
pop
push
in
add
in
lods
inc
xchg
ja
scas
out
xchg
mov
add
inc
and
xchg
add
inc
dec
mov
arpl
lods
aam
subb
and
into
stc
sbb
lret
adc
out
xor
loopne
pop
lock
cmp
data16
sahf
andl
dec
pop
push
aas
lods
lods
dec
repz
xchg
in
sub
cs
pop
adc
inc
add
into
push
jecxz
pop
push
jge
jp
pop
fld
sbb
leave
mov
pop
and
call
dec
mov
xchg
mov
mov
fdivrl
rcrb
xor
sti
iret
cmc
pop
stos
sbbl
add
adc
loopne
or
cmp
stos
in
pop
arpl
cli
testb
cli
stos
fdivs
jo
inc
ljmp
lret
roll
dec
shll
mov
rcll
dec
leave
cmp
dec
test
scas
ljmp
cmp
je
xchg
mov
adc
inc
fnsave
mov
inc
rep
push
pop
xor
add
mov
stc
cli
leave
xchg
mov
xchg
pop
rcrb
in
pop
enter
dec
xor
xor
rclb
ret
mov
jno
dec
push
push
dec
in
in
jecxz
out
add
fisttpl
or
push
cmp
fsubrp
arpl
mov
popa
das
xchg
or
pop
mov
stos
mov
aaa
jl
inc
insl
xchg
rclb
pop
loop
mov
in
incb
jns
test
cli
add
lods
fildl
push
pop
jmp
aaa
dec
lods
rorb
pusha
shlb
in
and
xchg
out
movsl
in
out
daa
mov
adc
nop
int
add
shlb
scas
push
ds
leave
aam
and
es
cwtl
lock
in
rcrl
repz
cmc
sbbb
nop
out
push
add
mov
pusha
imul
pop
fsincos
daa
push
cltd
ret
inc
mov
std
mov
mov
and
ljmp
fists
sbb
or
and
decl
aas
imulb
cltd
mov
add
dec
and
pop
push
jl
ja
inc
popf
aad
lock
imul
pop
ficompl
add
fildll
fisubl
leave
in
xchg
adc
mov
in
loopne
das
mov
xchg
negl
inc
call
testl
dec
scas
out
add
ja
mov
insl
or
cmpsb
das
push
stos
ds
or
imul
add
lret
inc
pop
ljmp
in
rcll
sub
xchg
jge
cmp
mov
jg
mov
pop
fsqrt
adc
mov
jmp
adc
addl
insl
or
iret
xor
fimuls
cmpsl
loope
insb
push
fisubrs
and
mov
mov
lret
sub
jae
cmc
and
jb
dec
and
popa
call
das
xchg
sbb
xor
nop
pop
mov
ds
mov
mov
dec
rol
xor
pop
pop
dec
xor
rcrl
cmpsl
ficoms
cmp
lret
mov
daa
stc
dec
adc
sbb
jno
jge
pusha
neg
ds
jp
repnz
lds
cmp
scas
or
push
jp
xor
adc
adc
outsb
inc
inc
cltd
arpl
push
xor
inc
movsl
insb
inc
daa
push
lret
bound
jmp
cld
mov
jae
sbb
jno
jo
leave
mov
loop
aas
xor
cmp
gs
xchg
sub
imul
xchg
add
aaa
add
fnstcw
insl
aaa
es
rcrl
add
and
lret
ror
aaa
outsl
pop
aad
xor
scas
sub
sub
or
or
sub
dec
les
cs
pop
stos
or
cmp
lahf
cs
jl
push
fs
dec
mov
push
icebp
jb
lea
fimull
pusha
mov
dec
pop
bound
add
bound
sbb
xor
mov
jg
add
add
and
rcll
inc
andl
sbb
sti
pop
lcall
xchg
cmpsl
mov
pop
xchg
mov
mov
mov
popa
push
cmp
mov
mov
incb
push
mov
sub
xor
call
cmp
gs
lcall
pop
cmp
imul
or
cmc
xor
push
cltd
idivl
xor
cmpsl
push
dec
cmp
decl
icebp
movsb
pop
cmp
cwtl
cmp
js
loop
dec
inc
cwtl
mov
pusha
mov
inc
scas
pop
dec
lock
cmp
test
xorl
lahf
sti
pop
out
inc
or
mov
aam
je
xor
mov
mov
fdiv
adc
aad
xlat
xchg
mov
dec
dec
xchg
ljmp
scas
sbb
cs
dec
jecxz
inc
mov
sub
jecxz
or
out
or
mov
cli
mov
dec
push
lea
fisubl
fs
dec
dec
icebp
lcall
cmc
shlb
or
movsl
adc
cmpb
mov
je
pop
push
lcall
lods
add
add
adc
sub
lcall
xor
xchg
sbb
add
bound
pop
pusha
and
sarb
and
cmpsl
inc
push
add
jo
dec
jmp
addl
or
ss
and
jmp
pop
mov
das
cld
push
out
shl
std
mov
and
movsb
inc
xlat
sahf
scas
nop
jno
iret
in
incl
add
popa
adc
pop
mov
out
lea
aaa
andl
mov
and
dec
cs
mov
sub
mov
pop
daa
ret
or
stos
inc
lahf
loope
and
mov
inc
lea
movl
xor
adc
icebp
push
push
mov
add
jp
inc
inc
adc
lock
rorl
mov
inc
sti
leave
aas
dec
mov
loopne
jmp
fnsave
add
and
push
push
ljmp
lods
pop
sbb
and
rorl
inc
mov
lcall
fucomp
out
repz
push
sarb
arpl
add
push
xchg
mov
sub
mov
dec
movsb
pop
not
dec
lahf
xorb
in
sbb
add
sbb
loopne
dec
mov
mov
loope
dec
pop
mov
repnz
les
ds
out
xchg
cmp
call
scas
or
out
push
fildll
push
jno
stos
fdivrl
inc
jecxz
mov
add
push
jo
and
or
incl
es
jle
or
stc
add
adc
lret
cld
lret
jbe
push
xchg
sbb
inc
cli
sub
shll
out
fnsave
mov
out
decl
sbb
and
arpl
sbb
icebp
mul
cli
cmp
sub
push
pop
scas
ljmp
add
xorb
dec
mull
std
adc
mov
fwait
add
imul
mov
sti
xchg
sahf
mov
xor
imul
mov
aad
and
cmp
into
rcll
movsb
jo
std
sub
add
or
add
lahf
dec
imul
outsl
add
adc
lcall
jo
cwtl
add
sub
loope
mul
mov
shl
mov
mov
xchg
inc
aad
andl
dec
mov
jno
ja
jg
mov
and
jmp
push
cmp
inc
sarl
push
data16
lods
adc
inc
fldlg2
xchg
cmc
enter
pop
popa
add
fstp
inc
hlt
cli
pop
push
sub
and
xchg
cmpsb
inc
mov
nop
xor
inc
outsl
mov
es
dec
out
mov
push
adc
repnz
and
sarb
dec
stos
dec
mov
pop
inc
inc
shll
enter
popa
imul
cld
sti
out
aas
imul
jae
gs
fdivs
addr16
push
mov
call
dec
test
sub
jge
inc
add
into
xchg
int3
test
adc
fiadds
mov
aaa
mov
sub
dec
ljmp
push
ja
mov
sbb
push
lret
stos
and
inc
sbb
sbb
and
push
dec
stc
add
insb
push
cmovbe
stc
add
push
add
push
mov
pop
mov
mov
adc
lds
cmpsl
sub
test
mov
xchg
mov
nop
test
adc
cmpb
je
adc
sbb
mov
add
fsubrp
dec
cmpsl
faddl
push
outsl
mov
outsl
mov
push
loopne
shll
iret
jbe
mov
xor
sub
and
xchg
insb
pop
ss
mov
lcall
and
mov
dec
pushf
icebp
fisubs
dec
mov
and
sub
add
cs
adc
mov
flds
clc
mov
shl
inc
xor
out
sahf
out
push
pop
mov
jp
jmp
xchg
call
lret
lcall
adc
shrb
add
aam
push
cmpsl
cld
push
add
fwait
sub
sub
icebp
sbb
jmp
rclb
jle
daa
add
imul
test
test
scas
aas
incl
jbe
inc
es
xor
cli
sbb
sub
mov
bound
in
add
or
xor
subb
xor
movsl
lds
pcmpgtb
xor
xchg
icebp
push
test
mov
add
mov
es
xor
xor
movsl
cmpsb
fcomps
inc
aad
iret
push
push
repz
enter
ljmp
sbb
cmp
add
clc
pop
dec
adc
mov
inc
test
sha1msg2
aaa
mov
outsb
leave
mov
mov
repz
xchg
pop
add
mov
push
dec
dec
mov
push
movsl
rclb
mov
rcrb
adc
inc
mov
into
sbb
mov
orps
xchg
mov
jo
imul
pop
in
sub
lret
cs
pop
mov
out
lods
mov
pop
loope
pusha
sti
scas
stos
ret
push
push
clc
or
adc
and
and
or
in
mov
jle
sub
jb
imul
cmp
cmc
mov
into
out
sbb
push
imul
lcall
cmp
imul
les
shrb
push
push
jg
into
leave
cld
push
and
fidivrl
test
loopne
test
into
cwtl
adc
rcrl
arpl
sbb
arpl
xor
or
out
fwait
lods
dec
sub
mov
adc
mov
lock
pusha
idiv
push
pop
jo
out
push
push
incl
add
cmc
int3
jp
out
shll
addr16
dec
xchg
or
push
leave
cmp
mov
pop
sahf
lret
fstpt
stos
xchg
inc
add
lcall
mov
fcmovnb
and
inc
jecxz
subl
xlat
pop
scas
call
test
sti
pop
ja
adc
aaa
aam
add
xchg
mov
jg
sti
popf
inc
push
in
gs
push
arpl
rorl
xor
imul
push
das
pop
rol
stos
das
imul
stos
push
add
pop
ret
scas
mov
fwait
stos
fs
je
ret
lret
push
out
or
cli
in
es
and
xchg
pop
pop
jo
push
ret
adc
lea
cmc
outsb
cmp
ret
xchg
pop
in
dec
movsb
xor
sti
sahf
mov
fcomip
cmp
jp
addr16
pop
mov
jmp
outsb
pop
test
lcall
push
lock
jecxz
cmp
pop
out
jnp
inc
or
pop
mov
int3
push
sbb
sbb
daa
mov
ficompl
xchg
in
and
movaps
xchg
nop
xchg
outsl
adc
fucomp
mov
sti
push
paddd
xchg
lahf
mov
out
pusha
cmc
rcrl
dec
jns
cmp
push
mov
stos
adc
dec
inc
jne
xchg
pusha
clc
inc
or
fsubl
add
mov
pop
daa
dec
repnz
loopne
cltd
sub
pop
add
popa
and
push
mov
aam
pop
mov
bound
lea
push
fsts
scas
dec
add
cmpsb
aad
xor
es
jbe
bound
aaa
iret
test
ljmp
sbb
sub
fs
dec
mov
xorb
sbb
fstp
xchg
addr16
lods
lret
or
and
icebp
pop
ret
outsb
movsl
pop
decl
cli
fnsave
mov
sbb
sub
sbb
std
jge
in
out
sahf
xchg
in
iret
cmp
mov
push
lret
push
or
add
mov
js
and
mov
addr16
out
sbb
add
and
imul
mov
roll
out
sub
push
ss
sbb
and
xor
sbb
xchg
cmpsb
lds
jo
aam
push
xchg
repnz
xchg
adcl
int
pop
jmp
sub
loop
inc
push
and
jl
mov
insl
stos
in
jno
push
out
adcl
mov
mov
stos
pushf
enter
in
jle
sub
fdivs
pushl
sbb
loope
loopne
mov
add
jge
cmpsb
pop
sti
mov
pop
sub
sub
inc
lret
mov
pop
sbb
popf
mov
push
clc
sbb
or
shlb
mov
add
dec
dec
pushf
jecxz
stos
jg
into
jp
dec
jl
lds
fisttpll
xchg
pop
add
mov
shrl
jo
cmp
dec
push
loop
push
push
stc
aaa
sub
push
pop
pop
add
stc
sub
icebp
push
cmp
pop
je
add
negl
in
xchg
dec
stos
jnp
and
mov
mov
ja
shlb
movsl
push
inc
lods
xchg
xor
in
cmp
or
push
add
les
ljmp
mov
dec
mov
rorl
dec
dec
int3
fists
lods
notb
repnz
je
inc
inc
sbb
push
jl
fldenv
jge
aad
pop
pop
adc
or
das
push
jo
ljmp
cmp
mov
and
or
ljmp
sbb
daa
or
push
addl
mov
daa
fdivs
inc
out
or
mov
andl
arpl
sti
sub
subl
xor
shll
dec
into
ret
adc
mov
xor
mov
push
mov
sub
mov
add
xchg
xchg
pop
dec
mov
cltd
negl
xchg
cs
iret
pushf
push
mov
lods
adc
adc
pop
movsb
sub
mov
or
and
scas
call
test
out
fs
sahf
dec
pop
add
or
jmp
pushf
xor
inc
js
sub
xchg
pop
movsb
cmp
ret
ret
mov
jno
or
loop
stos
cmp
mov
pop
mov
lods
cld
pop
pop
mov
repz
inc
mov
add
cmc
fistps
je
leave
lahf
pusha
int
daa
lcall
std
movsl
or
lock
mov
push
push
inc
bndldx
push
aas
jecxz
xchg
pop
loop
xchg
push
jae
jg
es
and
movl
icebp
jmp
and
or
fldt
pop
jnp
xor
out
cltd
and
jmp
jae
dec
cmp
dec
push
xor
cmpsb
add
shr
les
lahf
mov
jae
pop
mov
stc
mov
xchg
xor
ja
inc
or
mov
mov
aas
jg
xor
jnp
mov
out
and
pop
add
pop
push
mov
sub
ficompl
lods
or
sbb
ss
and
push
mov
pop
and
fwait
push
rorl
fs
push
dec
inc
lcall
mov
rorb
and
or
cmpsb
sbb
aaa
inc
pop
adc
mov
jp
test
addl
mov
in
enter
leave
lret
inc
out
adc
sbb
or
cmp
sti
outsb
or
inc
inc
jns
and
ds
sti
jle
lcall
lods
inc
dec
dec
push
shll
iret
scas
leave
xchg
jg
dec
and
pop
inc
test
loop
jo
cmpsb
aaa
mov
nop
jl
out
push
jne
mov
dec
or
test
dec
mulb
rcll
mov
ds
stos
xchg
dec
sub
dec
push
lods
cld
xchg
add
jg
push
es
lret
clc
pop
jo
inc
out
pop
jae
frstor
out
fistpll
inc
sub
mov
test
fisubl
jb
neg
scas
mov
push
gs
cmp
stos
or
mov
movsl
add
sub
arpl
push
outsl
cli
mov
ljmp
fs
mov
sub
mov
in
lods
in
sbb
xchg
jp
or
in
add
and
sub
xchg
sub
outsb
jno
add
lret
stc
repnz
pop
fdivs
das
add
dec
ja
xchg
inc
cmp
das
jae
or
jp
jmp
stos
shrl
mov
pop
jmp
push
add
jo
jg
and
mov
in
mov
stc
sar
sub
xchg
sub
lret
mov
cmp
cmp
nop
xchg
inc
shr
adc
stos
and
lock
add
adc
xor
xchg
sub
fisttpl
mov
mov
cmp
in
xor
sbb
ret
push
pushf
popa
out
sub
ret
popa
sub
into
xchg
pop
jne
add
mov
jg
xchg
sub
fcomp
jb
xlat
inc
mov
sbb
and
jne
mov
out
std
out
fstl
gs
jmp
sub
push
adc
mov
or
or
mov
shrb
mov
pop
aaa
in
jmp
xchg
pop
hlt
repnz
leave
or
repz
stos
inc
jg
leave
sbb
sub
jae
popa
adcl
cmp
push
mov
lret
fs
std
push
sahf
repnz
gs
bound
jle
bound
stc
mov
adc
sbb
xchg
cli
inc
sub
or
xchg
cmpsb
adc
scas
jle
das
jb
adc
add
imul
mov
cmp
mov
or
mov
leave
sbb
cmpb
outsb
xor
sbb
jno
pop
es
cs
xchg
sub
pusha
xor
xor
imul
fidivs
in
inc
fisubrs
ds
shlb
pop
pop
sub
cmp
jae
adc
mov
bound
jmp
in
imull
cmp
push
xchg
mov
jnp
sbb
push
shrl
push
pop
sub
pop
pusha
mov
ss
jmp
in
pop
mov
push
xchg
sub
bound
sar
dec
bound
xor
mov
into
xor
loopne
repz
jmp
out
in
mov
fistpll
sub
jae
popa
push
push
sub
jb
in
adc
sub
out
pop
mov
mov
std
push
sahf
in
push
inc
mov
test
inc
cs
xchg
pusha
inc
jno
bound
or
xchg
adc
sub
ficomps
dec
aad
mov
adc
mov
imul
aas
aas
jle
insb
or
stc
sub
mov
popa
mov
jmp
out
in
dec
dec
pop
cli
cmp
sub
xor
loop
sub
dec
fisubrs
das
dec
pop
xor
pop
rcll
mov
push
jmp
out
in
outsb
dec
and
inc
scas
xor
in
xlat
mov
std
and
push
and
pop
aas
dec
mov
sbb
daa
pop
lcall
fwait
test
les
sbb
mov
ljmp
sbb
pop
sub
pop
or
es
xor
cmp
popa
pop
jb
rcr
jle
lret
in
xlat
shlb
cli
popf
add
es
push
cmp
lods
pop
popa
pop
out
mov
es
push
cs
or
bound
mov
mov
jae
out
or
rorl
sbb
popl
shrb
into
scas
push
jne
fwait
dec
jmp
aas
mov
xor
pop
dec
jns
dec
jne
mov
or
adcl
push
adc
push
inc
dec
adc
call
aam
sub
inc
jbe
pop
sub
mov
mov
sub
dec
pop
xlat
xchg
cld
mov
jmp
bound
jmp
mov
inc
sub
or
mov
mov
mov
inc
dec
sti
fisttpll
pop
mov
bound
jmp
sub
aas
jle
xchg
scas
mov
or
bsr
insl
test
xchg
aas
and
push
ds
mov
dec
in
loope
inc
mov
imul
testb
dec
and
fists
mov
dec
push
notb
and
push
int3
in
dec
jno
movsb
data16
cmp
sbb
ds
pop
je
sbb
xor
fcomip
cmp
or
imul
sub
inc
and
inc
adc
xor
jmp
loopne
or
xor
testl
xchg
and
data16
adc
lret
in
out
xchg
daa
scas
inc
adc
int
or
ret
push
dec
jp
addr16
jno
or
sahf
lea
jb
mov
mov
dec
int
pop
in
leave
insl
jmp
movsl
iret
pop
and
mov
sbb
push
mov
in
pop
push
aas
test
ds
push
lret
arpl
jmp
xchg
dec
pop
inc
bound
mov
inc
mov
jns
jmp
in
xlat
push
adc
iret
sbb
lret
push
pop
mov
pop
dec
das
mov
and
es
inc
push
sub
rolb
call
and
in
mov
in
fucomp
lea
jns
loope
mull
xchg
out
mov
pop
rolb
xchg
cmp
or
sahf
ret
out
mov
push
cli
es
dec
aam
push
fldenv
xor
sbb
sub
fnsave
mov
fcom
mov
xchg
jge
xchg
fldt
daa
mov
js
rcll
inc
xchg
lret
bound
sub
pushf
jg
pop
add
aad
aad
add
popa
xlat
aad
scas
inc
dec
shlb
fnstsw
int
aad
dec
xchg
std
inc
hlt
sbb
aas
cmp
mov
or
sub
call
arpl
test
add
dec
mov
orl
xlat
sbb
xor
xor
pmaxub
cmpsb
inc
or
repz
xor
es
adc
cld
inc
inc
dec
mov
mov
cltd
dec
fidivrs
pop
inc
out
notb
jno
es
sub
test
bound
sbb
ja
push
jo
cs
popa
popa
data16
pop
sti
xchg
leave
pop
pop
cmp
or
push
mov
and
adc
push
outsb
jmp
notb
adc
add
pop
mov
xor
orb
shl
dec
loop
dec
aam
xor
push
pop
jbe
dec
mov
inc
mov
push
adcb
and
push
lea
lret
das
fbstp
and
adc
subb
je
fisubrl
adc
es
repnz
push
dec
mov
mov
sbb
xlat
loop
push
mov
or
push
aam
enter
jl
push
mov
fistpll
push
das
cmpsl
mov
inc
bound
fdivrp
and
in
inc
mov
xchg
ja
adc
push
fisttpll
or
push
icebp
mov
out
xchg
pushf
mov
mov
pop
add
fbld
pop
dec
mov
into
aas
mov
inc
insl
cld
push
loop
mov
mov
push
jno
mov
sahf
xlat
or
xor
mov
enter
inc
mov
fisubrl
rcll
rclb
enter
sub
adc
xchg
pop
xor
ret
lods
cmpsb
out
or
fstpl
lret
sahf
das
stos
out
popa
mov
dec
xor
or
sti
and
out
test
cmp
xlat
pusha
cmc
ljmp
lock
inc
adc
lock
repnz
pop
loop
cmp
aaa
and
and
push
enter
stos
mov
and
scas
addr16
loopne
push
jno
add
sbb
push
or
out
inc
mov
sub
cltd
fsub
out
sbb
push
icebp
lret
push
repz
inc
mov
mov
sbb
cmpsb
negl
aaa
test
std
mov
mov
out
lea
nop
out
ret
aaa
and
and
mov
inc
imull
aaa
sub
in
push
daa
add
imul
sahf
jno
push
cmpl
bound
xor
in
adc
sub
nop
dec
dec
fs
int
or
or
pop
jg
insl
inc
lock
jg
jnp
xchg
cmp
push
jb
adc
inc
push
rep
sbb
adc
rolb
bound
xchg
sbb
insl
or
xorl
mov
mov
mov
push
data16
jg
sbb
dec
pusha
in
cwtl
std
out
xchg
cli
imul
incb
iret
pushl
dec
fisubrl
dec
cmpsb
jmp
push
mov
mov
jne
dec
daa
out
jne
adc
aas
push
shrl
fs
sub
push
push
adc
adc
in
jne
pop
cmp
adc
gs
int
jmp
imul
add
movsb
test
je
and
insb
popf
cmp
or
lock
xor
cmp
cli
ds
negb
test
xchg
jge
fs
cmc
sti
mov
outsl
sbb
stc
enter
xchg
and
inc
icebp
ror
xchg
or
or
mov
adc
jge
sub
or
cltd
scas
jecxz
ljmp
in
das
aad
jno
int3
movsl
mov
js
fidivl
dec
shlb
add
aas
lcall
aas
les
das
fmull
loop
add
push
mov
inc
sbb
in
mov
jo
push
lock
mov
or
xchg
mov
and
xchg
mov
sub
into
mov
stos
sub
inc
test
mov
cmp
clc
loop
shrb
scas
sbb
xor
out
cmpsl
cs
insl
stos
push
stc
or
push
pop
movsl
idiv
inc
cmp
aas
mov
fs
and
or
or
or
jecxz
inc
mov
mov
or
xchg
inc
fiaddl
push
sarl
mov
push
sub
sub
adc
and
pop
sub
rcr
xor
call
sti
jp
mov
arpl
mov
fistl
adc
gs
lahf
repz
hlt
hlt
mov
dec
cli
mov
inc
mov
fxch
rorb
loop
lcall
mov
lret
cmc
sub
xor
sub
imul
lcall
xor
scas
dec
mov
or
adc
cwtl
push
dec
orl
inc
dec
aam
inc
push
cmpsl
loopne
out
repz
ds
lock
push
sar
ds
cmpsb
jns
bound
adc
mov
in
xchg
outsb
lods
xor
xchg
adc
pop
jmp
and
push
sbb
stc
mov
and
xchg
dec
imull
fwait
xchg
mov
cli
cld
pop
sub
xchg
xchg
icebp
push
jmp
cmp
mov
pop
hlt
sbb
in
hlt
and
or
outsl
jae
popa
add
sub
pop
push
pop
in
xor
loopne
out
lds
lret
dec
lret
andl
or
outsb
push
pop
jecxz
cmp
xor
pop
out
sub
mov
pop
mov
sarb
fiadds
push
cmp
icebp
hlt
adc
xorb
rclb
xchg
adc
push
scas
aas
sahf
jmp
adc
sbbl
xor
adc
or
inc
jno
xchg
inc
mov
cmp
repnz
je
fdivs
push
fisubs
imul
push
pop
jae
dec
xchg
push
bound
mov
dec
aaa
add
xor
pusha
lock
or
into
mov
ret
out
inc
loope
pop
cmp
adc
out
mov
sahf
xchg
outsb
xrelease
cli
cmpl
sub
mov
add
fnsave
out
and
shlb
cs
rclb
dec
dec
es
lods
pusha
jae
or
dec
adc
popf
out
adc
testl
jmp
mov
lcall
divl
jno
stos
cs
adc
push
rcr
dec
divb
and
xchg
movsb
test
gs
push
push
inc
clc
inc
jmp
stos
and
cmp
fistpll
push
add
push
xor
adc
add
movsb
in
add
mov
scas
and
and
cmp
add
pop
divb
add
jecxz
add
lret
clc
pop
add
jg
push
stos
repnz
xor
dec
cli
mov
dec
xchg
ds
xchg
mov
lcall
addr16
sub
inc
jbe
in
notb
or
scas
push
sub
mov
push
jae
xor
inc
adc
outsl
pop
adcl
int
mov
push
jns
add
sub
ds
add
pop
xor
lret
push
clc
jle
das
cmpsl
fstpl
fisubl
dec
stc
clc
insl
in
or
fstpt
mov
xor
sbb
fadds
push
fwait
cltd
vandnps
add
stos
inc
lahf
leave
adc
push
sbb
fildl
in
sub
loope
sti
mov
aaa
in
jo
icebp
or
not
repnz
shl
cmpsl
inc
and
xchg
push
lcall
push
cmp
test
inc
cltd
insl
je
movsb
push
out
repnz
push
rcr
daa
cmp
inc
push
cmp
pushf
out
inc
add
pusha
fcompl
mov
gs
fs
flds
pop
sbb
mov
fidivrl
mov
into
mov
mov
adc
mov
fisubrs
addb
fstl
loope
xor
pushf
addr16
pop
shlb
sbb
or
in
nop
outsb
insb
mov
mov
mov
shll
lock
arpl
add
pop
inc
idiv
or
push
mov
dec
adc
mov
push
pop
mov
xchg
pop
dec
xchg
push
div
pop
lods
fstpt
xchg
or
sub
xchg
pop
adc
pop
cmpsl
dec
add
sub
loopw
int
push
push
xor
negl
mov
pop
and
repnz
in
dec
ret
add
hlt
push
and
ja
add
into
js
ficomps
out
and
daa
shlb
xchg
das
out
lea
nop
imul
pop
jle
addb
cwtl
rcll
inc
ret
mov
fdivl
jecxz
cs
fadd
mov
ror
dec
dec
ss
imul
mov
inc
and
js
dec
inc
mov
dec
jl
add
mov
roll
jb
mov
sub
cld
adc
or
sub
push
cmp
cmp
add
aam
lret
sbb
idivb
pop
bound
aad
xchg
ds
mov
or
adc
int
dec
jmp
push
cs
push
sub
jge
or
scas
call
cli
int
pop
insb
cmp
lret
movsl
shlb
xchg
mulb
ja
cmp
or
jo
jle
xor
aas
push
xchg
outsl
xor
mov
mov
jge
ret
and
sbb
mov
leave
test
dec
mov
push
dec
jno
jno
test
lret
and
fadds
jmp
cmpsb
sbb
out
mov
pop
pop
sbb
leave
jp
scas
mov
gs
sbb
mov
lods
push
and
pop
xchg
mov
in
stc
lods
jl
jmp
lret
or
out
leave
shlb
cmp
inc
dec
lods
aas
mov
pop
loop
lock
mov
adc
push
es
ja
pushf
jge
push
or
xor
dec
mov
iretw
scas
sbb
mov
maxps
push
dec
cmp
xor
dec
mov
mov
dec
push
dec
and
pop
in
loopne
stc
mov
adc
stos
cld
mov
xor
cmp
das
push
mov
or
add
lock
test
inc
push
add
adc
inc
cmp
fwait
add
aam
pushf
xchg
cmp
jle
call
addl
sbb
cmp
mov
inc
cmpsb
inc
jno
loope
jnp
xchg
push
out
push
or
add
icebp
mov
push
inc
sub
shll
jle
jle
mov
loope
jecxz
push
mov
ret
or
repz
and
flds
movsb
mov
scas
cmp
test
and
lret
ja
xchg
xchg
das
sahf
out
or
xchg
imul
in
std
push
cmp
and
pop
pop
popf
rorl
scas
test
cli
fisubrl
mov
pop
mov
out
es
inc
jp
ds
sbb
aad
mov
pop
mov
cmc
inc
bound
or
adc
je
mov
dec
dec
arpl
cmp
add
repnz
std
push
lods
mov
ret
out
adc
loopne
inc
mov
ror
add
xor
packsswb
mov
dec
mov
loop
adc
adc
loopne
pop
add
xor
inc
sbb
cmp
inc
mov
xlat
xchg
jae
iret
lcall
in
or
es
cltd
lock
mov
sub
mov
repz
rcl
jmp
fwait
adc
mov
pop
xor
xchg
insb
push
push
arpl
roll
enter
daa
lcall
sbb
popf
inc
shll
xlat
int3
jmp
mov
lea
movsl
adc
inc
pop
out
leave
sbb
mov
daa
mov
idivl
fsts
mov
into
bound
pop
cmp
or
add
sbb
js
fs
sbb
mov
sbb
mov
ja
outsl
cmpsl
or
je
clc
leave
jb
in
movsl
mov
sub
testl
and
or
mov
jl
cmp
jbe
mov
or
repnz
aad
rcrb
inc
and
gs
sub
shlb
bound
pop
fsqrt
fildl
mov
mov
std
ds
jp
cmp
pop
and
popf
fld
lods
outsb
jmp
mov
mov
xor
push
add
cmp
popa
inc
inc
aam
push
xchg
and
jle
shll
jnp
xchg
call
pusha
sub
adc
lock
pop
in
add
xor
mov
stos
adc
inc
das
shlb
or
xchg
push
cmp
scas
or
mov
mov
push
movsl
pop
push
ljmp
mov
icebp
lock
cs
bound
bound
jno
inc
push
mov
add
push
add
dec
jle
sbb
mov
push
cmpsb
xchg
jne
movsb
ss
insb
sbb
lea
test
cs
cltd
inc
push
mov
aad
xchg
lea
adc
cmp
jle
pop
sbb
movw
mov
divl
das
xchg
sbb
fs
mov
pop
clc
mov
jmp
outsb
xor
push
mov
repz
mov
fistl
mov
dec
dec
in
jno
xchg
into
sbb
fwait
inc
lods
adc
pop
xor
cmc
pop
mov
lret
fcoms
jae
add
and
xor
sub
inc
fmull
xchg
xor
sti
push
push
ds
fmull
push
setne
sub
clc
xor
mov
sub
and
dec
cli
insl
inc
pop
mov
inc
xorl
cmc
call
sysenter
movsl
push
push
shlb
push
lret
cmp
jl
out
testb
lret
adc
movsb
cmpsl
inc
out
nop
mov
pop
xchg
jo
inc
push
mov
cmp
arpl
cmpsl
cmp
dec
cmp
mov
push
aaa
add
data16
push
inc
xor
dec
dec
pop
sbb
mov
mov
insb
push
pop
in
mov
loope
or
shll
out
inc
sahf
push
cmp
in
mov
aad
and
fidivrl
and
test
mov
out
jecxz
addl
sbb
sbb
mov
sbb
dec
je
in
aam
xchg
test
dec
sub
test
scas
adc
ds
call
gs
sub
ja
pop
xor
push
push
rcl
nop
mov
cmpsb
in
jl
mov
je
rcll
jge
rclb
pop
cld
dec
xchg
pusha
decl
push
movsl
ja
inc
jp
rcrl
pop
xchg
push
lret
addr16
psubw
fisttpll
mov
es
mov
jl
daa
in
mov
lods
les
dec
jb
or
xchg
inc
loop
push
cs
or
popf
mov
xor
mov
jecxz
add
in
xor
mov
stc
push
xchg
cmp
jne
pop
aam
add
test
addr16
daa
sbb
sbb
iret
push
adc
push
test
cmp
inc
inc
out
aad
cmpsb
addr16
pop
pop
add
pop
stos
sarl
pop
ret
addr16
aas
sbb
xchg
repnz
ds
and
call
jne
mov
xchg
push
sti
xchg
push
or
adc
daa
mov
dec
inc
xor
xchg
xor
mov
or
xor
and
mov
xor
sbb
jecxz
dec
mov
sub
mov
xchg
add
les
aad
mov
outsb
add
popa
inc
mov
out
sub
pusha
push
in
iret
outsl
adcl
dec
ret
or
cmp
jb
sbb
pop
es
inc
fcmovnb
jno
scas
popa
push
sbb
ss
ror
ja
mov
mov
jbe
jmp
aas
add
xor
faddl
outsb
dec
pop
nop
cld
jge
cmp
mov
xlat
add
dec
pop
pop
mov
push
adc
mulb
or
xor
add
popa
lcall
bound
pop
push
int3
cmp
xchg
add
inc
mov
inc
fpatan
aas
or
pop
fsubl
jmp
mov
iret
bound
pop
insl
jb
cmp
outsb
in
sbb
shrb
pop
xor
ret
or
std
pop
mov
fsubp
jb
xorb
dec
inc
xor
jmp
pop
mov
inc
and
adc
icebp
inc
push
mov
movsl
pop
scas
jp
fcoml
loop
es
in
inc
add
jns
ret
mov
outsb
fidivs
adc
push
popa
test
cmc
out
pop
push
push
jle
push
jg
aas
repnz
push
xchg
xor
mov
mov
jae
loop
sub
push
adc
gs
inc
dec
insl
mov
out
cmp
cmp
lods
insl
push
scas
cmp
ljmp
dec
sbb
loopne
dec
or
push
loop
pop
adc
loop
js
xchg
xchg
and
lea
outsb
fiadds
sti
icebp
push
iret
test
push
stos
rol
mov
sub
pop
sub
jns
je
jb
loope
jnp
ja
fsubp
mov
push
inc
push
adc
mov
mov
mov
xchg
sbb
dec
dec
xchg
add
cmp
out
insl
inc
push
dec
mov
stos
cwtl
dec
mov
scas
dec
inc
out
lret
sbb
jmp
mov
jns
pop
pop
mov
das
les
mov
in
movsl
aad
xchg
mov
mov
test
and
cmp
adc
lret
jns
push
mov
mov
mov
or
mov
jns
cmp
lcall
fistps
loop
mov
popf
movsl
cmp
frstor
jmp
repnz
sbbb
mov
popa
mov
sub
out
mov
and
mov
jmp
xorb
ja
out
fmul
loop
ret
dec
pusha
into
pop
cltd
sub
bound
xor
mov
repnz
pop
testb
into
push
push
mov
pop
or
sbb
dec
mov
cmc
push
cmc
dec
fldt
mov
outsb
gs
ljmp
jns
fisubl
add
sub
in
ret
cmp
das
adc
mov
inc
jno
pusha
ds
cs
mov
inc
push
mov
xor
leave
das
push
xchg
repz
jns
xchg
sbb
inc
sub
sbb
pushf
adc
out
ja
or
jmp
dec
cmpsl
fcomps
push
sub
xor
into
mov
test
mov
fwait
inc
in
cmp
pop
mov
xor
push
jp
inc
data16
or
arpl
mov
mov
cli
cmp
add
and
loope
xchg
dec
cmpsl
fcompl
mov
rcrl
jb
rolb
mov
jbe
xor
mov
sub
in
lcall
cmp
mov
sub
xchg
push
lahf
jle
aas
icebp
sbb
cmp
gs
push
das
sbb
bswap
push
fcomps
jmp
push
or
outsl
sub
mov
xor
cs
sarb
sub
lret
daa
xor
inc
xchg
mov
shr
mov
daa
adc
negb
push
aaa
sbb
paddusw
les
roll
and
xorb
inc
pop
subl
es
jge
jb
add
dec
insl
inc
dec
mov
nop
push
dec
aaa
cmc
sti
aad
jae
sub
mov
lret
aad
ret
xchg
loope
outsl
dec
xchg
ds
sti
iret
adc
or
push
fisubl
fwait
mov
mov
jmp
cmp
rcll
mov
xchg
rcll
sarb
loop
mov
and
aad
cmpsb
loopne
pop
lods
dec
insl
push
push
push
jp
push
repz
addr16
es
mov
ds
inc
inc
nop
ret
cmc
pop
inc
jmp
dec
lea
push
das
cmpsb
jmp
je
inc
cli
pusha
inc
pop
loop
jno
and
repnz
jl
in
imul
icebp
and
rcll
xchg
sub
loopne
out
push
mov
dec
jp
xchg
mov
cmpsb
dec
mov
fs
mov
jb
std
jne
push
jecxz
push
pop
std
xchg
shl
les
nop
mov
push
sub
dec
xchg
icebp
xor
and
inc
cmp
cmpsb
cmp
inc
or
mov
or
outsb
xchg
jmp
stos
jle
shl
jns
std
dec
mov
bswap
out
xor
jo
xchg
mov
jno
cs
dec
fwait
nop
mov
ss
mov
xchg
and
test
std
mov
cmp
cmovge
jg
or
adc
sbb
pop
ret
jp
jno
and
sbb
jle
sbb
add
ja
dec
imul
adc
jb
and
inc
adc
lods
mov
push
outsl
adc
repnz
ret
add
jp
cmp
icebp
push
xlat
data16
movsb
insb
mov
pop
inc
loopne
rdmsr
addb
inc
dec
jo
mov
adc
bound
pop
outsl
imul
jno
stc
sbb
das
cli
mov
push
test
lock
dec
stc
pop
dec
jae
jge
addr16
pusha
mov
jno
pusha
inc
sub
sarl
insl
mov
sub
aas
insb
add
jnp
sub
xchg
mulb
iret
repz
mov
push
xchg
dec
mov
jp
and
add
es
push
mov
loopne
push
loop
sub
pop
ds
xchg
add
mov
or
stos
mov
mov
test
icebp
sahf
inc
pop
dec
xchg
sub
push
pop
int
cmp
mov
sub
pop
in
nop
sbb
scas
pop
sbb
loopne
das
sarb
mov
xchg
bound
mov
inc
int
sbb
adc
xchg
das
divb
push
fidivrl
rorb
enter
mov
xchg
shrb
lcall
cmp
mov
cmp
popa
pop
jno
icebp
xchg
inc
jno
mov
ret
rorb
arpl
cmpsl
jne
andb
cmp
icebp
movsl
movsl
dec
add
in
sub
inc
nop
or
sub
xchg
into
and
hlt
testl
lcall
xchg
and
out
cmpl
lret
frstor
ret
cmpsb
push
cli
mov
push
sub
clc
pop
sbb
mov
add
cltd
lods
push
mov
mov
mov
ljmp
ret
das
call
jbe
pop
insb
cmovne
jb
std
sbb
pop
adc
sbb
xchg
fs
iret
dec
mov
cmpsb
lret
push
movsb
push
xlat
insl
sahf
sub
lods
and
adc
dec
scas
mov
popf
push
push
out
xchg
inc
mov
push
mov
popf
aaa
pop
rcr
and
pop
xor
dec
xor
sbb
imul
dec
or
push
data16
or
pop
bound
pop
cld
movsl
and
or
and
scas
and
dec
das
xchg
mov
jge
sahf
mov
cmc
lea
push
arpl
push
arpl
or
and
push
ds
push
fidivl
push
fisubrs
das
push
out
jmp
inc
lret
inc
into
in
pop
inc
shr
xchg
inc
lret
jne
sti
rorl
xor
scas
push
jno
scas
scas
jno
fadds
int
xor
jmp
pop
sbb
pop
pop
andl
lret
adc
mov
leave
pop
mov
ljmp
mov
cmpsb
mov
and
and
pop
bound
xor
sub
sbb
and
sbb
and
sbb
and
cli
push
js
sbb
aas
mov
es
cli
cmp
cmp
jb
cmp
jp
mov
sub
data16
mov
push
stc
lcall
dec
xor
cld
and
xor
pop
xor
ret
xor
loop
xchg
out
xchg
mov
mov
movsb
inc
inc
jle
inc
dec
lret
dec
push
pusha
jg
andl
lret
mov
add
jmp
pop
in
push
pop
sub
imul
mov
ss
cmp
out
xor
mov
bound
ljmp
jno
scas
mov
das
jmp
pop
in
push
and
rcll
and
popf
cmp
das
pop
jns
pop
ds
pop
stos
mov
jl
dec
xchg
mov
scas
test
xor
add
or
ds
clc
add
xor
gs
pushf
cmp
or
push
fcmovb
ljmp
cmc
out
add
ret
hlt
sub
scas
mov
mov
stos
sub
sub
repnz
fldl
xor
push
add
out
data16
and
sub
or
cli
and
dec
test
fbstp
pop
insl
mov
mov
dec
mov
lods
jmp
mov
cmp
fwait
jno
movsb
push
xor
int
push
stos
xor
mov
add
movsl
leave
mov
mov
or
movsl
cmp
popa
sbb
icebp
loopne
popa
adcl
pop
or
cs
jns
or
dec
out
sbb
sbb
fs
lds
jbe
in
dec
lods
xchg
sub
pop
fs
add
pop
dec
cli
or
movsb
aad
add
lods
pushf
xchg
cld
push
fimuls
jno
adc
inc
ljmp
ds
lods
cmp
js
fwait
outsl
shll
ret
sbb
mov
add
cwtl
jnp
xchg
ljmp
add
or
mov
out
pop
or
mov
mov
add
icebp
adc
adc
std
js
or
fprem
rcrl
inc
test
inc
int
adc
push
cmp
mov
xor
sbb
call
push
xor
loopne
shrb
mov
add
ficoml
sarl
jge
xor
aad
std
or
add
mov
test
mov
sbb
jmp
loope
imul
adc
dec
or
rclb
mov
or
inc
out
fnstcw
in
loope
add
fidivs
out
fadd
incb
inc
mov
stc
xchg
ljmp
pop
les
dec
shll
ja
shll
data16
fldt
pop
shrl
cmc
pop
sahf
ret
xor
rol
lods
lret
jp
or
aad
bound
or
aas
js
xorb
roll
push
xor
in
push
mov
sbb
push
es
push
or
push
inc
jns
pop
or
jne
jle
or
add
ret
int
scas
into
or
out
mov
inc
jecxz
out
icebp
sub
xor
js
xchg
stos
mov
icebp
fisttpll
inc
es
movsl
mov
or
push
imul
outsb
jne
movsl
leave
inc
or
cmp
pop
jno
popf
mov
das
ret
dec
test
mov
mov
in
sbb
xor
push
fistl
jg
movsl
packuswb
cmp
inc
lods
clc
in
iret
push
lock
mov
jge
mov
jle
jae
cli
cs
aam
stos
mov
and
jg
push
das
outsb
outsb
jle
ja
add
push
fmuls
pop
in
sbb
inc
dec
ret
cmp
cmp
fistl
adc
lea
inc
ret
vcvtpd2psy
sub
ss
aam
dec
outsl
les
mov
sbb
fidivrl
and
push
lcall
mov
push
sbb
adc
push
in
insl
out
dec
push
and
fs
sub
cmp
add
aaa
pop
addr16
mov
cmpsb
outsb
addr16
mov
sub
mov
mov
in
push
mov
ds
into
mov
push
movsl
mov
pop
xchg
pop
or
test
popf
jg
pop
push
sub
mov
sti
push
std
adc
fisubrl
push
mov
outsb
insl
je
cld
xor
xor
dec
inc
popf
lret
cmp
sbb
rol
in
fimull
cltd
bound
sbb
aas
add
lds
jecxz
test
sub
add
lcall
jmp
mov
pop
push
jmp
xor
or
jmp
scas
push
loopne
outsl
das
ljmp
lret
repz
js
dec
cwtl
or
jg
lret
rcrl
adc
jge
pop
push
push
lods
sbb
cmpsb
repnz
dec
cmp
pop
popa
stos
stc
mov
daa
aaa
loope
in
pushf
push
das
mov
not
popf
push
adc
int
or
and
loopne
mov
mov
mov
add
cmp
sub
mov
jo
int3
cmpsl
bound
dec
xchg
push
inc
add
push
mov
test
mov
and
sbb
add
xor
mov
shr
and
inc
sahf
je
jne
adc
sub
dec
push
or
clc
xlat
mov
fwait
xor
xor
pop
pop
jl
loope
inc
inc
pop
in
test
mov
xchg
xlat
push
in
stos
mov
cltd
cs
in
loop
mov
scas
jl
daa
cmp
pusha
xchg
dec
mov
xchg
mov
inc
cltd
outsb
scas
mov
movsb
aas
cmc
shrl
movsl
add
repnz
sub
jecxz
and
push
mov
push
lahf
int
sarw
inc
jecxz
iret
and
daa
mov
xor
bound
gs
out
subl
out
mov
lcall
jnp
cmp
and
sbb
test
out
or
scas
lret
sbb
mov
inc
cmpsb
packssdw
es
push
loop
inc
jmp
pop
pop
mov
bound
mov
push
shll
sub
das
pusha
adc
xchg
das
adc
cld
add
push
bswap
icebp
jae
mov
std
push
mov
sti
in
inc
and
pop
mov
xchg
das
roll
push
push
sbb
push
fisubl
arpl
mov
xchg
sub
inc
cmp
sbb
mov
inc
cmpsb
adc
es
push
pop
pop
leave
mov
inc
mov
mov
psubw
and
das
pusha
adc
xchg
das
adc
aas
add
sub
and
bswap
out
je
outsb
fsubrl
decl
xor
ss
push
out
jmp
mov
loopne
mov
push
shl
or
testb
les
sub
mov
jno
inc
mov
jmp
adc
pop
fs
add
lret
inc
das
sbb
cld
sub
jge
jno
xor
sbb
scas
xor
out
shlb
fwait
dec
jae
lds
mov
aad
push
cmpb
pmulhw
out
mov
scas
mov
jmp
cmpsb
sti
cmp
stos
mov
inc
mov
mov
es
bound
pop
add
mov
add
inc
or
lcall
stos
outsb
es
xor
jge
pop
adc
dec
pop
jbe
jle
xor
imul
scas
les
mov
mov
addr16
adc
in
setne
sbb
add
dec
fbld
shrl
lock
scas
adc
inc
movsl
dec
fs
js
add
out
mov
daa
mov
aaa
loope
scas
mov
out
push
sub
in
sub
mov
sub
lahf
push
jl
inc
cmpb
dec
test
inc
cmp
push
stos
jne
mov
in
sub
sahf
push
sahf
mov
out
push
sahf
jae
clc
out
xor
or
xchg
inc
dec
out
xor
data16
or
mov
mov
push
xchg
shll
movsl
cmp
mov
lret
bound
sbb
fsubrl
cld
aad
fsubs
sub
mov
jae
out
dec
aaa
and
repz
xchg
fdivs
push
addb
repnz
daa
jns
cmp
push
ret
mov
jo
cmpsb
dec
out
push
jno
icebp
inc
mov
mov
jo
and
call
xchg
je
and
adc
cmc
sahf
add
sbb
xor
cltd
fdivr
mov
mov
sbb
mov
pusha
notb
mov
mov
popa
lods
add
dec
mov
jbe
scas
or
dec
sarb
incb
push
stc
jmp
scas
data16
add
pop
psllw
pop
push
pop
loop
ret
int
mov
out
daa
frstor
pop
mov
inc
rorl
in
insb
push
push
and
dec
pop
jo
repz
jecxz
popf
inc
mov
icebp
mov
mov
pop
xchg
mov
leave
sub
test
fisubrl
orl
icebp
fsubrs
mov
popa
lods
mov
loopne
pop
out
int
inc
mov
ret
sbb
out
jecxz
lahf
or
arpl
movb
out
jbe
push
es
xchg
sub
std
aas
fiaddl
jne
and
repnz
ret
push
mov
adc
cmc
and
jge
add
push
das
ds
mov
xor
mov
push
aad
fs
test
push
or
push
loop
inc
dec
popf
jnp
pop
xor
or
xor
inc
ss
nop
adc
sub
into
xchg
mov
inc
and
jmp
mov
out
dec
imul
cmp
lahf
and
fisubl
push
stc
test
or
jg
andb
jnp
jmp
lret
aas
call
sub
sahf
fstps
es
sbb
lcall
cmp
mov
mov
push
dec
jp
cmp
shrl
je
jne
jbe
mov
add
or
cmc
mov
add
sbb
sub
xor
in
pusha
jno
dec
js
mov
mov
sub
insb
sarl
scas
mov
icebp
aam
ljmp
loope
lods
insb
push
add
xchg
pop
mov
loopne
mov
mov
inc
lcall
push
lds
test
lods
dec
fs
mov
ds
repz
dec
bound
shl
mov
ja
adc
adc
scas
mov
leave
jge
and
test
dec
mov
scas
stos
inc
call
nop
sub
test
imul
pop
sub
and
jnp
loop
loop
pop
pop
pop
xchg
sarl
out
clc
jmp
xchg
icebp
jae
pop
dec
pop
outsb
dec
mov
lcall
and
rcrb
push
dec
pop
fidivl
and
mov
dec
cwtl
out
lret
pop
add
lahf
stc
pop
sahf
outsb
loope
sbb
jno
pop
mov
stc
mov
ds
js
xor
addr16
cmp
xchg
mov
aad
sbb
andb
das
or
fdivl
fst
lret
mov
mov
push
pop
ljmp
xchg
sub
add
shll
dec
aaa
cmp
lcall
add
rorl
mov
lock
ret
fsubl
mov
popa
aam
pop
ret
xchg
mov
lret
mov
outsl
cmp
xlat
or
lret
imul
out
iret
ror
push
jno
jae
mov
mov
leave
mov
sbb
ds
shll
sti
push
mov
mov
mov
lcall
xor
sti
stos
push
in
mov
cmp
push
inc
push
add
pop
dec
and
or
sbbb
xor
and
daa
loopne
push
dec
pop
lock
lods
lock
inc
movsb
ss
mov
or
scas
test
ljmp
je
fidivs
cmp
xor
movsb
inc
jno
popa
mov
fdivrl
adc
push
into
mov
out
inc
jno
lahf
push
cmp
jae
push
cmp
scas
adc
pop
push
pushw
lahf
and
fdivs
or
xchg
jecxz
sbb
push
movsl
es
dec
mov
push
mov
movsl
or
pop
and
inc
cmp
push
jnp
jb
jb
or
out
or
sti
pop
cmpsl
push
and
es
xchg
inc
dec
inc
data16
into
rcrb
xor
add
insl
xor
jbe
clc
sbb
jns
xchg
inc
cmp
add
movsl
loope
imul
adcl
dec
xor
xor
pop
mov
cmp
dec
mov
shlb
pop
dec
xor
cs
and
ja
cmp
jnp
daa
cmp
lds
xor
push
imul
lcall
mov
pop
fmuls
int3
cli
sub
fdivr
xchg
and
mov
dec
orl
jg
int3
andb
aas
ret
cmc
and
nop
arpl
cmp
pop
inc
jge
and
insl
dec
pop
pusha
loop
sub
mov
mov
scas
inc
ffree
push
jmp
jmp
mov
push
int
addps
mov
sbb
adcb
sbb
or
jnp
inc
inc
mov
mov
stc
stos
sub
add
cs
std
movsl
ret
inc
out
or
mov
xchg
es
lock
cli
xor
sub
push
xor
fsubrl
out
push
and
cwtl
lret
mov
sub
mov
jno
xchg
lods
jg
or
mov
leave
mov
jmp
stc
sbb
jg
test
add
mov
pop
stc
jnp
nop
lods
cwtl
jl
out
inc
pop
jl
or
stos
ljmp
push
lods
into
sub
xchg
inc
jmp
dec
push
sub
mov
out
mov
fadds
mov
dec
cmp
mov
sub
jecxz
and
xchg
movb
mov
xchg
shll
push
add
rolb
xchg
leave
sbb
mov
repnz
push
push
repz
and
addr16
fnstenv
nop
pop
and
aad
flds
arpl
jmp
jge
and
movb
lock
sub
mov
cltd
push
mov
aas
add
mov
test
call
out
ljmp
inc
xor
or
push
in
push
and
push
jge
inc
and
sub
lret
mov
or
mov
xlat
xlat
scas
dec
into
push
pushf
loop
lahf
cld
mov
stos
mov
inc
loop
in
cmpsl
leave
lods
jno
jecxz
shll
cmp
mov
adc
or
loop
inc
aas
and
xlat
cmp
sbb
int
add
push
aaa
in
pop
sbb
push
jno
add
mov
xchg
xor
imul
mov
xchg
sti
out
fldt
icebp
aad
and
push
push
jns
mov
imul
push
imul
insb
icebp
sub
push
push
adc
mov
ret
pop
pop
jg
cli
mov
xor
jcxz
sbb
rolb
pushf
fs
sub
out
ljmp
lods
sub
jbe
pop
inc
xchg
in
mov
das
adc
arpl
cmpxchg
push
lods
into
ja
out
add
xlat
inc
push
inc
mov
bound
pop
push
negb
jbe
fadds
outsb
mov
and
jo
sub
mov
dec
gs
in
es
fwait
inc
aas
and
push
rorb
sbb
leave
out
arpl
sub
push
jmp
bound
cmp
mov
and
arpl
xchg
pop
mov
push
mov
xchg
jnp
icebp
inc
and
ljmp
push
sbb
push
xchg
ds
xlat
jge
inc
divl
std
test
cmc
imul
popa
dec
je
push
std
pop
imul
insb
lock
push
mov
movsb
sarl
inc
xor
popf
push
mov
jle
sub
push
lea
sub
add
sbb
int3
test
push
mov
lea
daa
ret
push
pusha
in
pop
out
cmp
mov
and
scas
xchg
into
pop
cmpsl
lret
sahf
in
xchg
mov
test
mov
es
andl
sub
jmp
xor
fwait
mov
xchg
pop
in
out
lahf
jno
orl
pop
mov
paddusb
test
push
push
mov
push
pop
flds
sarb
std
es
or
aad
fdivrl
cmpl
inc
xor
rolb
sti
jp
outsl
dec
outsl
or
sub
sub
mov
jecxz
lret
add
aam
push
lcall
es
jb
loope
out
xlat
sbb
cs
or
mov
loopne
mov
sub
ret
into
cmpsb
subb
xchg
cmp
sarb
mov
mov
pushf
popa
pop
sub
dec
hlt
and
sbb
rorl
stc
es
sbb
pop
push
jmp
xor
js
andb
int3
jne
push
int
sbb
ffree
xor
rcrb
loop
roll
jnp
leave
lret
push
cmp
jo
sub
jp
mov
sub
jmp
xchg
fst
imull
iret
fstps
mov
xchg
dec
jecxz
mov
hlt
aad
cld
call
addr16
dec
mov
arpl
xchg
inc
cltd
cmpsl
and
xchg
xchg
aad
ss
jae
jmp
inc
add
cmpsl
roll
xor
dec
into
ret
out
in
and
xor
mov
or
or
out
or
lods
add
sbb
or
add
orl
pop
sbb
push
stc
ret
enter
ret
and
fdiv
leave
sbb
loop
in
xchg
test
cmc
inc
fsubrs
outsl
add
inc
ljmp
jns
add
jcxz
das
mov
dec
enter
icebp
and
sbb
or
pop
jnp
iret
mov
sub
movsl
mov
int
jbe
xchg
pop
mov
add
xchg
adc
lods
notl
jo
std
mov
xor
std
lret
fwait
sbb
pop
aad
mov
jle
fcmovnu
ljmp
pop
test
cltd
xor
mov
inc
pop
data16
imul
ja
cltd
jle
incl
cmp
or
addr16
je
cmp
addb
imul
frstor
xchg
or
xor
test
aaa
sti
pop
sbb
addr16
bound
hlt
or
scas
mov
out
mov
mov
pop
sbb
cwtl
cs
int
dec
or
fldt
lods
fwait
push
ja
rcl
scas
fnsaves
ror
dec
and
sbb
addr16
mov
out
lret
fisubl
ret
insb
dec
mov
xchg
lret
or
iret
in
out
pop
iret
nop
outsl
arpl
add
repnz
dec
adc
cltd
cmp
sbb
inc
mov
push
and
cmp
sbb
ja
enter
ret
ret
push
fildll
dec
adcb
es
inc
loop
and
cmp
mov
pop
sbb
jmp
cmp
pop
push
loopne
sub
jl
cmp
sti
aas
mov
push
jne
fiaddl
jmp
loopne
out
inc
ljmp
out
addr16
mov
cmp
mov
push
lahf
mov
mov
jo
imul
jmp
mov
call
mov
sbb
xchg
xchg
push
mov
iret
dec
out
push
outsb
imul
insl
mov
stc
imul
fcomi
sti
xor
ss
sbb
fidivrs
and
and
jno
les
loope
loop
ljmp
mov
mov
lahf
mov
das
mov
lds
add
ss
mov
add
xchg
daa
insb
pushf
push
js
rcrb
jmp
or
out
xor
jecxz
sub
jae
pushf
add
insl
int
fisubl
loope
outsb
sub
and
mov
jp
xchg
and
mov
lret
insl
sbb
daa
or
inc
xchg
out
popa
scas
ss
ret
ljmp
mov
cmp
sbb
xor
lds
inc
stc
cmpl
adc
or
popa
orl
pop
mov
sub
mov
fxch
pop
cmp
mov
pusha
in
in
lea
shr
and
add
mov
movb
sub
out
cmp
fsts
popf
sub
in
pusha
addr16
add
iret
aas
out
fstp
adcl
imul
adc
testl
iret
mov
push
xchg
push
into
es
mov
imul
fsubrl
out
js
and
cmp
cmpsl
add
adc
shr
scas
cld
pop
dec
mov
pop
mov
push
lret
lcall
ss
mov
jae
jns
jbe
clc
sbb
out
jns
fwait
jle
out
test
cwtl
add
lock
loope
jl
pop
jnp
iret
sbbb
xor
xor
jae
jp
pop
mov
hlt
inc
mov
fisubrs
lahf
mov
shlb
adc
stos
xchg
pushf
fwait
sub
and
lods
icebp
push
ljmp
ret
mov
cmp
dec
mov
fdivl
int3
mov
mov
ljmp
push
push
jo
call
xchg
nop
jns
push
sarl
inc
pop
out
inc
int
daa
popa
sub
mov
fidivrs
inc
out
adc
xchg
or
mov
mov
and
mov
ret
sbb
push
sub
xor
and
sbb
cmpb
ror
adc
mov
repz
loop
jge
nop
sub
sahf
and
pop
mov
inc
sub
jecxz
lea
mov
je
mov
push
dec
inc
das
push
jnp
lods
lea
or
mov
lcall
out
shrl
xchg
mov
pop
int3
push
cmp
jmp
pushf
jg
jae
xor
cmp
sbb
pop
call
or
test
aam
into
stos
fcmovnb
mov
insb
jnp
jbe
cli
cmp
inc
insb
adc
cmp
mov
sbb
xchg
mov
xor
mov
xor
and
aad
lret
mov
pop
sbb
or
jg
and
mov
jmp
jmp
aad
icebp
lret
push
daa
push
adc
in
aad
std
add
ja
xchg
push
sub
ret
ljmp
fistl
das
sub
sub
bound
cld
sub
mov
lret
fistps
pop
cmp
sbb
mov
out
xor
dec
adc
pushf
mov
into
lock
popa
add
pusha
fstl
ljmp
or
cmp
mov
sub
mov
addr16
outsb
ss
inc
xor
roll
add
imul
xchg
push
xor
imul
mov
sub
sub
popa
xlat
lods
and
cmp
inc
jae
push
dec
add
xchg
aas
lods
or
add
mov
dec
rcrb
sub
icebp
dec
push
jae
call
cmpsb
mov
pop
lcall
sub
fdivs
sbb
jecxz
adc
inc
mov
adc
sub
pop
sub
loope
or
pop
mov
jl
adc
mov
push
in
jecxz
dec
fdivrp
inc
mov
xchg
xchg
pop
push
cs
popf
fistpl
cmc
es
xor
out
xchg
mov
js
xchg
jp
pop
or
aaa
mov
sbb
sti
pusha
mov
pop
cwtl
inc
pop
in
push
cld
frstor
inc
rcl
sub
aas
test
jg
mov
dec
xlat
or
jno
inc
sahf
lahf
xchg
sbb
xchg
cli
fnsave
adc
mov
mov
in
outsl
mov
sub
test
das
gs
mov
dec
repnz
mov
iret
xor
mov
out
rorb
addr16
loope
enter
aad
pop
lret
outsl
in
rcrl
mov
das
lahf
mov
pop
imul
inc
test
leave
out
add
or
mov
in
movsl
or
push
and
jnp
lods
inc
cmp
jg
outsl
mov
dec
lret
push
pusha
push
mov
xchg
add
fistpl
je
jns
into
adc
outsl
stc
ljmp
pop
hlt
xor
inc
test
add
cltd
aas
aad
dec
cwtl
insb
sub
mov
mov
and
cmpsb
aas
stos
xor
push
aam
push
sub
fmuls
jl
push
stc
out
and
and
xor
insb
inc
nopl
inc
jg
cs
imul
adc
lahf
xchg
ljmp
inc
fistps
add
loop
es
pop
xor
jne
mov
add
sbb
shll
lods
pop
stos
in
mov
sbb
cli
jno
mov
cli
pusha
mov
dec
adc
pop
inc
pusha
lret
fisttpl
sti
xor
pop
lcall
rep
daa
adc
mov
jp
sbb
fnstsw
xchg
stc
mulb
xchg
pop
push
jae
pop
es
dec
xchg
lock
push
xlat
dec
ljmp
ret
jg
subb
sbb
in
or
jp,pt
daa
out
mov
mov
icebp
add
in
dec
jae
sub
mov
mov
or
in
out
int3
xorb
or
lret
sarb
pop
inc
ljmp
xchg
stos
cmpsb
je
sub
popl
jle
ja
cmpsl
std
dec
int
add
stos
cmc
inc
aam
aam
enter
rcll
pushf
mov
sbbl
enter
lret
mov
push
sub
pop
pop
js
bound
pop
andb
push
xchg
psubw
leave
dec
repz
notb
cmp
add
mov
or
out
pop
stc
jno
stc
in
orl
sbb
icebp
movsl
fsubrl
bound
jbe
sbb
and
lcall
cmp
push
push
call
push
sbb
gs
lds
dec
test
scas
loop
aad
push
leave
cs
aam
lret
pop
lods
mov
pop
iret
adcl
xchg
xor
and
adcb
push
arpl
sbb
fsubl
int3
in
cmpb
push
jecxz
pushl
je
repz
push
loop
jb
add
pop
sub
ja
or
sbb
ss
mov
mov
repz
pusha
add
or
sub
call
enter
lea
mov
stos
inc
pusha
out
rol
imul
lods
dec
mov
andb
or
pop
pop
adc
inc
jne
pushf
xchg
dec
inc
lret
xor
sub
push
mov
add
mov
and
and
sarl
push
inc
xchg
imul
in
jg
mov
scas
inc
mov
ds
pop
popf
and
xor
xchg
and
fwait
inc
lret
std
mov
and
fsubrs
or
addr16
ss
xchg
xchg
cli
rol
sbb
jnp
cmp
cmc
insl
xor
mov
inc
scas
mov
push
jae
xchg
scas
inc
fldl
sub
jnp
jbe
stc
dec
jae
aam
pop
sub
daa
push
cmc
sub
ljmp
pop
fimull
push
sub
or
adc
cmp
add
xlat
inc
popa
test
pushf
add
push
sub
mov
sbb
shll
lds
cwtl
std
sub
lahf
add
dec
in
and
and
mov
lods
sub
pop
dec
ss
cs
cmp
add
mov
hlt
lds
nop
mov
push
mov
push
xor
test
jb
outsl
and
int
cmp
jmp
das
inc
jns
lcall
test
pop
imul
stos
loopne
sbb
sbb
js
gs
sub
test
sahf
ljmp
scas
js
out
repz
pop
out
ss
jp
sbb
cmc
sti
dec
jmp
out
push
fiaddl
add
lahf
bound
lret
fs
insl
shlb
cmp
iret
mov
sbb
pop
jle
orl
mov
addr16
sub
daa
sbb
std
cmp
pop
push
or
test
pop
mov
sub
test
mov
icebp
cwtl
insb
ret
xor
jnp
add
push
sub
add
mov
imul
andl
mov
xchg
jmp
jbe
jnp
cmpsb
jbe
sbb
outsl
fidivrl
jns
jmp
mov
mov
sahf
push
test
stc
stos
add
cmp
jno
flds
inc
shll
loopne
add
iret
pushf
sbb
mov
stos
fsubs
cmp
filds
repz
mov
out
xor
mov
in
xor
add
inc
ret
mov
mov
mov
or
mov
jecxz
adc
out
pop
loopne
fdivs
fidivrs
cmp
jb
xor
pop
outsl
xchg
and
pop
rcll
dec
mov
xchg
loope
jp
sub
push
mov
adc
inc
push
jge
test
mov
jmp
mov
scas
xchg
inc
mov
out
add
mov
xor
adc
ja
sbb
xor
push
lret
test
jmp
fistl
mov
mov
std
imul
lea
mov
jle
mov
out
sbb
push
into
jg
fs
jmp
popf
out
mov
sub
stos
xor
test
lds
add
or
lahf
xchg
sbb
nop
jl
aam
pop
push
stos
lahf
jl
or
inc
je
sti
bound
jnp
mov
hlt
out
lret
mov
or
stc
dec
aad
scas
scas
xchg
jmp
pmulhw
or
sahf
insl
jae
pop
jne
push
std
pop
outsb
test
push
jne
adc
pop
sub
daa
outsb
fisubrl
out
dec
push
mov
adc
aam
push
cwtl
inc
mov
in
movsl
or
add
es
push
es
dec
lahf
fcomi
popf
jbe
iret
jle
mov
inc
jae
cmp
mov
cli
push
xor
add
dec
cld
pusha
mov
outsl
cltd
js
jno
fcmovbe
mov
int
mov
and
inc
shlb
ss
pop
cmpsl
sbb
jecxz
fmull
pop
push
fidivrl
fstpl
subl
cwtl
cmc
inc
movsl
ret
pop
pop
push
into
les
mov
and
dec
cmc
sbb
push
dec
inc
and
and
inc
data16
dec
add
inc
xchg
stc
insb
or
pop
rcll
jno
cmp
out
loop
push
push
pop
sbb
jbe
in
jmp
adc
testl
or
sbb
mov
sarb
addw
inc
inc
sti
dec
ljmp
into
lret
cli
lods
lds
push
dec
jae
and
movb
jne
pop
inc
sbb
mov
push
mov
add
xchg
cmp
push
loope
cmpsl
gs
outsb
mov
cvtps2pi
jae
inc
imul
jns
dec
je
ja
lods
cmpsb
testb
cmpsl
or
ret
jg
rol
ret
dec
loop
or
fwait
mov
and
jbe
jbe
push
cmp
addb
out
mov
ds
cmp
push
and
jno
fstpl
stos
daa
mov
add
add
jge
sub
cmp
and
cmpsb
mov
rcl
into
xlat
ficomps
icebp
push
loope
xchg
add
mov
andb
sarb
movsb
dec
test
outsl
cmc
push
pop
mov
test
test
or
jmp
mov
in
push
hlt
fisubrs
out
mov
mov
or
arpl
fld
dec
sub
loope
xchg
sub
pusha
popa
out
jg
aaa
fucomp
mov
out
xchg
jg
stos
bound
xchg
cmp
aaa
in
add
call
xchg
mov
xlat
mov
ffree
andb
push
dec
daa
dec
pop
test
cwtl
ds
enter
into
dec
fdivrs
push
jb
add
mov
mov
xor
mov
pusha
bswap
cmp
push
cmp
out
sub
test
aas
in
adc
fcoml
rorb
cmc
sbb
jp,pn
cmp
jl
adc
stos
sbb
insb
push
xchg
adc
and
cmp
pop
in
adc
mov
fwait
pusha
enter
push
fisubrs
ljmp
fwait
jmp
shr
and
xchg
push
ljmp
xor
cmp
xchg
popa
and
xchg
dec
xor
mov
fwait
push
jmp
mov
mov
fs
or
jno
mov
jne
std
mov
imul
cmp
roll
adc
dec
fsub
mov
int3
ret
jbe
dec
out
loope
mov
or
ljmp
ljmp
or
mov
sbb
testb
in
call
mov
jmp
dec
add
leave
sbb
mov
mov
mov
or
js
dec
add
sub
subl
adc
fsub
sarb
adc
push
ror
jno
inc
sbb
dec
cltd
sub
add
mov
and
es
gs
dec
shr
or
cmp
inc
adc
push
sub
push
mov
adc
popf
adc
popa
das
adc
sub
add
loop
mov
out
dec
push
int3
addr16
lock
push
mov
pop
mov
shll
mov
pop
mov
mov
xor
cs
mov
test
ret
dec
rolb
mov
mov
adc
ret
out
fidivrl
icebp
stc
ja
add
lcall
dec
pop
dec
enter
xchg
dec
or
push
mov
dec
es
insb
fiadds
or
jae
push
pop
ds
or
jge
aam
in
mov
das
or
add
mov
adc
sub
leave
outsl
mov
imul
movsb
enter
call
cmp
push
in
inc
pop
sbb
dec
fsqrt
sub
sub
loop
xchg
cmp
sub
sti
int
push
pop
int
pop
outsb
push
pop
jmp
xchg
mov
cmpsl
add
add
rcrb
pop
cmp
dec
xor
xchg
outsl
pop
pusha
xor
repnz
xchg
sub
jnp
inc
add
cmp
and
cmp
leave
pop
aad
scas
les
lret
xchg
lret
lahf
lret
adc
loopne
jp
and
mov
ret
sub
jmp
loopne
imul
dec
xchg
rclb
or
add
xchg
scas
cmpl
mov
hlt
jmp
inc
and
ss
add
aam
xchg
or
stc
and
orl
mov
sbb
sbb
inc
stc
push
loop
pop
jmp
loope
sbb
mov
daa
push
sub
in
out
adcl
clc
dec
enter
pusha
pop
lds
inc
test
ja
push
sbb
imul
or
hlt
cmpsb
xlat
pop
mov
out
emms
js
popf
adc
mov
inc
ret
cwtl
push
scas
ja
dec
cmp
push
inc
cmpb
cmc
xor
xchg
das
push
fsubl
dec
jae
in
inc
or
push
jae
lds
xchg
push
xor
rclb
jle
sti
or
scas
push
sbb
mov
data16
aas
push
aad
mov
test
insb
mov
and
dec
dec
mov
stos
sbb
std
outsl
or
cmc
xor
shrl
cmpsb
aad
bnd
cmp
stos
or
sub
stos
aam
ret
mov
inc
les
mov
add
outsb
outsb
xchg
inc
push
enter
add
pop
ret
repz
mov
xor
ss
mov
cmpsb
xchg
addr16
add
iret
daa
fimull
sub
imul
mov
mov
inc
push
les
je
fisubs
jmp
outsl
xor
cltd
fists
jb
mov
pop
sub
daa
adc
push
test
icebp
stos
mov
cwtl
xor
dec
out
repnz
das
sbb
test
cmpsl
jno
pop
jno
les
mov
jecxz
adc
ds
mov
das
das
pop
rorl
push
pop
sub
andl
loop
frstor
mov
jmp
in
adc
xchg
jae
lret
stos
sbb
push
lods
push
push
jl
repnz
gs
mov
jno
add
sbb
lods
inc
xchg
cld
loop
dec
loope
insl
mul
mov
lahf
inc
lds
mov
nop
leave
loop
cmp
aaa
and
and
into
pop
js
sub
loope
dec
adc
inc
mov
xchg
sbb
pop
leave
testb
ljmp
xchg
hlt
lods
push
push
fildl
ds
cmp
inc
sbb
sbb
fisttpl
push
push
in
push
push
inc
mov
sub
add
xor
push
push
and
adc
les
inc
jecxz
inc
ds
ss
or
jecxz
mov
mov
pop
lds
ds
das
jae
pop
leave
or
in
loope
push
mov
lods
xor
adc
sub
mov
pop
sbb
add
xor
out
xor
scas
int
insb
cmp
inc
mov
andl
mov
aas
cwtl
ljmp
jo
cs
das
and
xor
mov
pop
inc
add
dec
rcl
push
gs
ss
movsb
into
adc
pop
and
pop
jbe
lcall
mov
sub
in
jmp
ss
and
pusha
sbb
xor
pop
inc
outsb
sbb
test
xchg
xchg
jge
mov
mov
leave
nop
andb
in
mov
popf
mov
or
jle
cmp
ja
test
fnstenv
cs
int3
imul
mov
or
pushf
mov
loopne
jb
xchg
or
and
enter
jnp
cmp
inc
repnz
inc
xchg
inc
jbe
gs
jno
jno
icebp
inc
das
dec
xchg
bound
arpl
adc
ja
xchg
jb
outsb
or
sbb
pushf
add
sbb
test
xchg
in
xchg
pop
mov
mov
xchg
push
enter
mov
jmp
inc
jns
ds
add
or
add
mov
pop
ss
xor
shrb
or
ja
out
xchg
push
cmp
orb
mov
outsl
jae
mov
stos
movsb
ss
enter
add
add
aas
add
push
mov
in
xor
xchg
cmpsl
data16
pop
mov
cmp
xor
xchg
xor
iret
leave
lret
ret
addr16
cmpsl
dec
test
adc
fldenv
push
jns
add
mov
pop
ss
xchg
push
push
lods
pop
xchg
sbbb
adc
or
mov
lcall
repnz
inc
sbb
cs
loope
dec
andl
sbb
push
mov
imul
stc
sbb
data16
bound
das
ljmp
lcall
notl
ljmp
in
sbb
rorb
nop
mov
add
xchg
cmp
push
push
loop
inc
insb
sbb
shr
push
int3
enter
dec
fs
aas
lods
cmc
pop
cmpsl
and
dec
sbb
mov
and
push
lock
movsb
and
popa
push
dec
lret
inc
xchg
icebp
lock
mov
add
daa
add
xchg
mov
popf
jle
les
and
jns
scas
xchg
ljmp
daa
xchg
jmp
and
cltd
mov
dec
mov
add
lret
les
dec
xchg
loopne
dec
cmp
pop
imul
push
ds
mov
decb
push
push
mov
and
pop
add
xor
mov
xor
adc
mov
aad
fnsave
je
cltd
mov
popf
mov
insl
test
stos
push
jb
mov
push
add
addb
mov
jnp
div
dec
xor
pusha
call
mov
xchg
popf
mov
push
rcrb
sbb
popf
push
insl
lret
push
add
cli
adc
insb
mov
mov
and
fidivs
push
movsb
sbb
les
adc
sbb
push
rcl
arpl
mov
dec
jge
sbb
rolb
jb
mov
lods
cwtl
bound
add
mov
or
and
pop
les
push
cmp
pop
das
imul
xor
sbb
insb
stos
push
cli
or
or
stc
repz
mov
cmc
dec
adc
push
outsl
cli
pop
imul
adc
mov
jg
fadds
daa
sub
jmp
cmp
push
lock
in
pop
aaa
outsl
pushf
inc
addr16
mov
pop
push
jmp
ss
and
jns
adc
mov
in
jmp
mov
mov
dec
ja
xchg
fisubs
fs
push
adc
jmp
sub
lods
adc
pop
rcll
push
notl
aam
cli
sbb
call
sti
sarl
icebp
add
pusha
dec
adc
adc
out
loope
adc
jns
jle
jge
stos
xor
jp
sub
mov
xchg
and
cmp
mov
sub
xor
and
icebp
mov
mov
inc
or
adc
test
sub
popa
and
popw
scas
adc
mov
ret
mov
movsb
push
insl
dec
dec
jecxz
mov
xor
int
dec
push
lea
adc
mov
icebp
fidivrl
push
dec
push
enter
icebp
pushf
jp
mov
push
add
icebp
dec
adc
mov
imul
and
xchg
and
xchg
rclb
pop
arpl
ljmp
mov
std
pop
js
adcl
inc
xor
jae
push
fisttps
pop
push
es
iret
out
pop
outsb
cmp
btrl
mov
inc
shrb
mov
push
pop
ret
pop
push
shll
das
fwait
cmp
lahf
dec
lret
je
cmp
sti
push
je
call
xor
pusha
add
ffree
or
sbb
xor
outsb
lcall
lods
mov
inc
lock
pop
cltd
push
popa
push
or
movsl
xchg
xchg
nop
xchg
xchg
sbb
inc
mov
shll
mov
jecxz
pushf
out
popa
popf
push
lea
aas
push
lods
stos
dec
dec
jno
or
icebp
adcb
jae
sub
or
add
rcrl
out
inc
xor
jae
and
dec
xor
dec
or
pop
sbb
loope
xor
bound
inc
xorl
out
push
stos
and
or
pusha
pop
in
xor
jb
or
mov
ljmp
xchg
sti
add
mov
pop
cmpsb
push
dec
inc
push
push
pop
dec
pop
and
jae
push
std
mov
adc
inc
inc
arpl
xchg
sub
mov
xchg
sarl
xor
push
fsubr
aam
or
pop
push
data16
lds
xor
ret
mov
xor
cwtl
and
aad
nopl
sbb
les
scas
inc
add
and
cltd
pop
dec
add
push
iret
ffreep
sbb
cmp
and
sbb
mov
pop
scas
fucompp
movsb
scas
mov
cmp
es
hlt
and
sub
jecxz
mov
inc
mov
add
ret
test
aam
push
pop
addr16
sbb
jle
in
inc
repnz
sbb
cmc
in
mov
fstps
xchg
mov
xor
add
inc
push
decl
lock
ja
out
or
mov
cmp
push
mov
jb
dec
popf
xchg
sbb
pop
das
inc
loopne
cmp
idiv
inc
mov
xor
and
and
inc
xchg
dec
mov
mov
ret
sbb
mov
scas
jbe
jns
mov
mov
cmp
mov
sub
leave
mov
or
adc
and
sbb
push
inc
inc
sbb
inc
pop
mov
insl
insb
testb
icebp
pop
scas
lock
cmp
pop
xchg
ja
cld
pusha
outsb
jb
xchg
scas
and
push
jmp
iret
and
cmp
and
roll
loopne
cmp
insb
jle
adc
repz
and
es
or
es
out
call
dec
bound
jmp
add
adc
dec
sub
sub
loope
sub
dec
mov
xor
add
sbb
bnd
loop
cmpsb
adc
jge
arpl
cmp
push
jge
stos
adc
jae
cmp
icebp
xor
push
inc
out
ds
mov
lea
and
cmp
sbb
cs
jno
ja
into
shlb
pop
out
in
lret
aad
and
rcrl
stc
jae
jbe
adc
and
aam
and
repz
mov
mov
dec
sbb
cs
sahf
adc
and
jecxz
cmp
push
subb
loope
movsb
jle
sbb
call
xchg
cmp
shll
das
outsb
cld
cmp
and
sbb
enter
mov
sub
sub
or
divl
pop
scas
inc
add
jle
icebp
sub
insb
and
test
sbb
push
mov
lret
call
subl
fadd
aam
sbb
repnz
cmp
mov
fs
dec
andl
dec
xchg
jle
and
adc
add
ror
andl
aas
push
pop
xor
movsb
sbb
outsb
int
xchg
jno
mov
popa
pop
or
in
sub
cs
cmp
mov
lahf
bound
ja
lea
dec
lods
popl
and
repnz
es
arpl
dec
mov
push
pop
push
stos
inc
mov
pmaxsw
sbb
push
dec
mov
adc
push
sbb
xor
pop
bound
pop
cmp
jno
mov
cmpl
sbb
fists
jl
outsl
mov
dec
movsl
divl
dec
adc
jns
jle
jge
inc
push
jo
js
or
add
dec
scas
jns
and
xor
pop
repz
daa
pusha
add
add
sub
sbb
ljmp
adc
inc
pop
leave
insb
push
lret
mov
add
data16
lods
ja
lods
mov
jnp
mov
mov
adc
lock
sub
push
mov
imul
scas
aad
dec
scas
data16
mov
xor
lock
or
mov
sub
stc
and
aam
mov
pop
imul
mov
outsb
jno
popf
adc
out
mov
insb
mov
sub
loope
subb
mov
cmp
mov
inc
shrb
xchg
scas
testl
ljmp
jb
cmc
push
xchg
outsb
adc
jp
daa
in
jge
daa
xchg
out
inc
lret
sub
pop
adc
push
mov
pop
cmp
inc
ret
aaa
in
data16
cmpsb
mov
add
or
test
push
scas
or
xor
xor
mov
das
add
arpl
or
adc
stos
inc
sbb
mov
in
pop
xchg
cmp
and
push
ljmp
push
mov
shl
dec
or
push
cmp
imul
repnz
xchg
or
cmp
scas
mov
in
pop
std
and
aas
popf
bound
pextrw
inc
mov
jle
jle
cli
popf
mov
pop
xchg
adc
xchg
xor
jae
push
xor
mov
insl
in
mov
sub
shll
adc
imul
popf
out
jmp
xor
mov
xlat
cmpsl
inc
popw
and
orb
dec
or
das
inc
dec
std
cmc
incl
inc
jnp
bound
scas
mov
in
mov
or
sahf
dec
and
mov
dec
xchg
out
mov
lcall
jg
mov
or
xchg
push
dec
rcrb
enter
lock
inc
inc
mov
inc
aad
lret
idiv
pop
mov
loop
out
sub
stc
pop
inc
mov
cld
test
lea
xchg
cmpsb
xor
cld
rcll
mov
mov
cli
repnz
rcr
ds
mov
rclb
xor
jbe
inc
lahf
insb
or
sub
out
imul
mov
xor
or
test
inc
lahf
sbb
pop
inc
cld
inc
jle
ljmp
and
enter
mov
inc
hlt
mov
out
or
in
fs
pop
push
imul
add
cmp
test
xor
call
in
mov
dec
sbb
xchg
shlb
jnp
push
inc
xlat
shrb
dec
mov
push
jae
mov
test
push
mov
pop
pop
mull
and
int3
xchg
dec
sub
mov
mov
push
rolb
mov
jb
pop
out
jo
add
add
mov
sbb
add
jl
xchg
xchg
mov
inc
sbb
bound
cwtl
cmp
push
sub
and
imul
dec
fisubrs
jmp
mov
push
jo
clc
adc
xor
push
xchg
xor
inc
add
push
and
aas
mov
sbb
push
bound
test
mov
leave
into
inc
pushf
push
in
dec
dec
loopne
mov
ja
ret
lea
mov
push
stc
mov
push
sub
int3
or
push
dec
dec
mov
sbb
push
xchg
mov
and
xor
lahf
pop
jno
data16
mov
sub
test
dec
cmpsb
addr16
add
sti
or
jl
cli
push
icebp
mov
leave
jmp
mov
dec
mov
or
pusha
jno
insl
scas
ret
inc
jns
icebp
xor
push
shl
sti
test
jae
pusha
xor
dec
sub
fisttps
out
cs
insb
insb
pop
sahf
or
ret
and
mov
dec
dec
hlt
loope
mov
out
mov
push
jnp
and
inc
xor
mov
lahf
iret
cmpsl
mov
xchg
out
lock
sub
fwait
test
fdivl
adc
sub
subl
jbe
das
lods
cmp
pop
out
in
push
int
jo
out
rolb
nop
push
mov
repnz
add
xchg
cmpsl
inc
xchg
jns
cmp
popw
pop
movsl
movsl
std
mov
int
pusha
xchg
sub
in
pop
xchg
mov
daa
mov
lret
pop
pop
push
imul
dec
fmul
mov
mov
inc
mov
into
push
push
jecxz
mov
sti
xchg
cmp
push
aam
cmp
jnp
jnp
mov
sub
test
adc
xor
inc
cs
fnstenv
ljmp
jle
arpl
imul
mov
or
cwtl
and
dec
pop
loop
in
mov
sbbl
hlt
outsl
dec
js
cmp
mov
cmp
sarl
pop
inc
mov
pop
push
jl
movsl
mov
out
sbb
sbbb
pop
cmp
es
repz
mov
mov
add
cmpsl
sub
inc
pushf
inc
in
push
call
xchg
jnp
mov
jmp
push
out
mov
mov
push
cli
mov
dec
pop
pop
in
lret
or
add
jno
rclb
xchg
jmp
inc
push
repnz
repnz
jbe
xchg
bound
insl
pop
orb
imul
or
xlat
pushf
loop
idivl
into
or
sbb
xchg
push
std
push
es
cli
adc
sbb
xchg
lahf
lret
dec
out
movsb
adc
fidivl
lods
roll
popa
push
cmp
jb
scas
out
ret
inc
scas
add
lods
and
sub
push
or
mov
and
pop
lcall
pop
or
cwtl
lods
pop
and
scas
adc
notl
shrl
jg
inc
int
int
mov
push
jl
mov
subb
rcll
mov
xchg
cmpsl
cmp
out
data16
mov
insb
pushf
mov
dec
sub
pop
xor
adc
call
sub
push
and
fisubrs
pushf
subb
ret
movsl
push
jmp
scas
cli
xor
mov
stos
dec
cmp
jmp
aam
jg
pop
xor
inc
loopne
jge
pop
mov
sahf
and
xchg
clc
pop
and
mov
mov
insb
psadbw
or
enter
push
mov
imul
ljmp
popf
xchg
sar
movsl
or
add
rorl
jg
pop
fisubl
add
in
pop
sbb
cmc
insl
xor
repz
sub
cmp
mov
rclb
movsl
jmp
adc
and
std
dec
sti
int3
ret
sbb
mov
push
test
insl
and
sub
jb
sbb
out
and
pop
sti
lods
and
xor
xchg
fs
adc
sbb
rorl
hlt
sbb
push
push
sub
xchg
push
scas
aam
xchg
pusha
inc
and
enter
jb
aaa
pop
aad
imul
mov
movsb
inc
xchg
add
push
jbe
test
or
add
das
mov
add
sub
pop
push
int3
mov
pusha
xor
xchg
push
incb
sub
sbb
dec
in
pop
iret
mov
arpl
out
cmp
sbb
or
adc
adc
lcall
push
movsl
or
pop
cli
fisubl
mov
test
pop
cmc
xchg
adc
or
push
sbb
xchg
add
sbb
adc
mov
mov
and
popa
clc
sbb
adc
xchg
dec
jnp
stos
jo
into
fwait
stos
es
repz
lret
xor
pop
mov
movsb
loop
pop
lock
mov
inc
scas
add
dec
mov
scas
or
fucomi
cmp
jg,pt
mov
sahf
mov
cmp
or
repz
add
or
sub
cli
jae
repnz
test
push
dec
sbb
fsubr
divl
in
dec
jae
pop
mov
mov
push
inc
xor
aaa
adc
fucomp
std
out
fwait
cmpsb
dec
pushf
fists
fimull
movsb
popa
sbb
into
inc
es
and
popa
fildll
in
ljmp
push
dec
xlat
jnp
icebp
dec
pop
lret
fldenv
add
adc
sti
pop
icebp
mov
jnp
jecxz
cmp
je
inc
popf
lods
mov
pop
push
enter
shl
popa
stos
cmp
pop
mov
hlt
pop
mov
xor
xor
out
cmp
sbb
mov
aas
pop
jae
rcll
jnp
mov
mov
push
je
push
xor
mov
push
jge
cmp
mov
xor
push
dec
cmpsb
push
roll
pop
repz
add
fnstcw
aas
lret
add
sbb
pop
cmp
xor
mov
cmp
mov
popa
sbb
push
jns,pt
xchg
test
pop
xchg
dec
add
ret
sub
cmpsb
mov
adc
loope
cmp
mov
sbb
pop
cmp
sbb
jb
mov
jl
out
mov
push
aas
dec
lret
push
adc
sbb
in
xorb
les
je
add
movsl
rcll
rcl
int
test
or
add
scas
xorb
dec
add
ljmp
mov
lods
lock
into
hlt
mov
mov
push
push
je
mov
push
dec
ss
jmp
jmp
into
sbb
mov
dec
imul
pop
inc
pop
iret
xor
popa
lret
stos
mov
aaa
in
ret
adc
mov
loop
dec
cmpsl
fs
dec
mov
or
pop
inc
or
or
dec
push
xor
mov
inc
ret
adc
dec
imul
nop
pop
adc
stc
push
sbb
jp
mov
out
or
xchg
add
mov
out
dec
es
xor
or
push
test
sbb
sti
push
in
inc
jmp
imul
dec
mov
ljmp
movsb
inc
adc
fistpll
sub
in
pop
rorb
fxch
mov
sbb
flds
adc
xchg
iret
scas
push
icebp
pushf
sti
mov
aaa
mov
mov
data16
lods
in
cld
jmp
in
cld
dec
adc
ret
push
ret
lret
jb
das
xchg
hlt
out
cmp
cmp
and
xor
leave
pop
inc
pop
jae
xor
mov
lods
xchg
test
and
jb
imul
jle
jmp
jno
pop
add
sti
adc
hlt
out
call
inc
addl
adc
loope
sub
xor
sub
test
sub
inc
int
sub
xchg
sub
imul
sbb
lds
nop
fldcw
ss
sub
out
into
jle
sub
mov
popa
adc
mov
push
out
push
fsub
mov
ljmp
cld
cmp
fildl
test
push
push
loop
cs
sub
jbe
shlb
movsl
je
imul
mov
sbb
int
cmpsl
xlat
rcl
dec
dec
lods
and
std
lea
lock
jbe
adc
push
lret
or
xlat
in
mov
sub
scas
or
fidivl
mov
jp
movsb
lret
mov
xor
pop
add
xchg
dec
daa
fptan
mov
in
aad
mov
ficompl
int3
push
cmp
sub
pop
mov
mov
push
cmc
mov
fwait
fwait
lock
dec
jecxz
scas
leave
cs
add
mov
fs
jp
rcll
ja,pn
push
xor
orl
clc
sbb
testb
and
mov
add
jno
sub
pop
pop
out
sub
pop
and
mov
mov
cmp
ss
pop
jo
cltd
add
mov
pusha
ss
arpl
pop
int3
add
jle
adc
or
dec
idiv
sbb
xor
ja
xchg
inc
shl
jb
mov
dec
mov
push
lea
in
mov
psrlw
and
int3
in
add
loope
scas
xchg
push
cmp
pop
and
in
mov
outsb
fnsave
xor
cltd
bound
sbb
cmp
in
inc
jl
xbegin
push
xchg
or
rcll
inc
cmp
lret
aad
les
adc
jp
dec
mov
jns
inc
xchg
pop
push
jg
sub
shrb
in
adc
idiv
sbb
out
stc
or
aad
push
outsl
pop
jbe
lea
fisubrl
cmc
sbb
cltd
fdiv
test
leave
ds
and
and
push
adcl
jbe
bswap
fs
mov
test
rep
jns
fdivs
aam
or
shl
dec
cmpsl
and
fwait
clc
outsl
mov
jle
mov
test
xor
lret
sahf
lret
xlat
fwait
data16
cmp
lea
cmpsb
lret
sbb
sahf
rol
pop
les
lods
and
xchg
push
mov
pop
sbb
mov
jnp
sub
pop
pop
test
push
mov
fs
shl
mov
jmp
cmp
lahf
xor
pop
push
sbb
mov
or
inc
pop
insl
push
jp
dec
mov
ret
test
insb
repnz
sbb
idivb
sbb
scas
inc
shrb
gs
repz
lret
in
xchg
lret
bound
adc
aam
mov
scas
fcompl
stc
add
int
dec
push
jns
push
push
and
or
cmpsl
push
add
sbb
mov
loope
xchg
inc
out
mov
dec
xchg
daa
sbb
push
mov
popa
lods
je
inc
mov
pop
adc
jmp
cli
lock
mov
xor
adc
xor
sbb
and
gs
sub
or
ret
sbb
mov
push
xchg
cmc
shll
or
xchg
imul
sbb
pop
jae
sbbl
pop
cmpl
test
sti
inc
xor
insb
push
inc
aam
movsb
movsb
xor
xor
rol
mov
or
in
xor
push
rorb
inc
xor
jmp
push
inc
pop
scas
sti
and
mov
shl
aas
cmpb
ss
ret
aas
cmp
xor
mov
dec
cld
jns
cmp
cltd
into
xor
adc
sti
or
push
ss
sub
inc
das
loopne
shll
test
gs
dec
cli
xor
ss
ljmp
pop
xchg
imul
or
aad
jmp
and
cmpsb
inc
sub
stos
jle
push
jae
push
addr16
sub
leave
outsl
fstpl
or
pushf
xchg
push
das
add
add
imul
imulb
sahf
pop
bound
mov
aas
loop
testl
sbb
ss
shlb
push
dec
xchg
ret
jb
fs
inc
add
cmp
loopne
in
ss
stc
mov
ret
clc
mov
cld
dec
pop
fwait
pop
pop
inc
in
jmp
dec
push
sti
pop
inc
faddp
lea
imul
int
imulb
mov
loop
pop
fs
sahf
or
subb
ljmp
sub
adc
in
sub
in
insl
arpl
lods
shr
stos
jecxz
adc
fcmovnb
inc
push
pop
cli
lret
prefetch
or
repz
pusha
hlt
shl
dec
mov
and
sbb
insb
push
mov
mov
jl
mov
jp
xor
fcomp
mov
js
adc
sbb
ds
xchg
in
lahf
sub
adc
adc
cld
sbb
pop
push
test
xor
push
fmul
jno
xor
inc
movb
pop
mov
jg
or
icebp
sub
xchg
push
aas
lock
fmul
push
cmp
mov
scas
inc
in
ret
and
out
stos
push
push
out
ss
enter
adc
lahf
xor
and
pop
out
es
and
inc
lcall
dec
insl
rorl
mov
cmp
outsb
inc
lea
mov
roll
mov
adc
push
pop
or
sbb
mov
daa
in
mov
in
jmp
sub
lds
ret
xor
push
aas
xchg
inc
ljmp
dec
or
cli
repnz
add
leave
xor
icebp
icebp
cltd
es
sbb
loope
mov
rcl
es
mov
ljmp
or
add
xor
aas
pop
js
sub
cmc
orb
int
into
sbb
xchg
inc
div
dec
cmp
ds
aas
mov
pop
out
dec
xor
mov
or
adc
icebp
mov
sbb
pop
pushw
std
shl
movsb
push
mov
pop
fwait
pushl
mov
int
ja
mov
cmp
arpl
push
mov
and
jle
or
mov
repz
sbb
sub
mov
arpl
leave
sbb
aam
shlb
rolb
ret
lret
clc
cmc
inc
out
sbb
jp
inc
imul
or
ret
jle
ret
dec
mov
jne
push
mov
hlt
mov
push
fistl
idivb
xchg
repz
cltd
bound
scas
xor
jle
ficompl
inc
sarb
lret
cmp
test
cmp
loop
xchg
mov
scas
or
pop
mov
lods
sbb
xchg
fimull
stos
inc
repz
cmc
jb
out
ret
pcmpeqw
es
loope
aaa
call
mov
jb
adc
sbb
jno
mov
in
popl
push
icebp
mov
cli
or
mov
cmp
sbb
or
mul
mov
sbb
push
xchg
cmp
adc
inc
out
loope
js
in
nop
mov
mov
mov
scas
inc
test
imul
cwtl
popa
push
repnz
out
test
inc
hlt
es
sti
stc
cmp
xchg
arpl
loope
fs
imul
or
test
in
pop
xor
jno
insl
std
lods
loop
shrl
push
and
in
and
sub
mov
nop
jge
test
jecxz
insb
cmp
inc
adc
lds
and
aad
test
test
mov
push
mov
adc
bswap
imul
addr16
mov
jno
push
stc
lea
pop
aas
xchg
aas
popa
loope
stos
es
jp
shlb
cld
xchg
xor
and
ficompl
icebp
stc
sub
pop
dec
imul
je
ret
ret
lret
xor
sub
nop
sub
filds
mov
popf
mov
je
dec
fldenv
ja
or
inc
jle
jns
mov
jb
aas
mov
out
imul
push
cmp
scas
mov
cmp
scas
mov
imul
mov
sbb
jb,pn
ss
repnz
iret
addl
cs
aaa
mov
rcll
or
insb
mov
add
mov
test
mov
or
mov
mov
bnd
aad
and
call
lock
imul
test
add
roll
fnstenv
movsb
push
pop
aaa
mov
cld
je
jbe
sbb
inc
cmpsb
jle
and
test
mov
push
in
jbe
adc
adc
idivb
jp
jmp
in
ror
mov
ljmp
pop
scas
xchg
movsl
pusha
pextrw
dec
xchg
xchg
xor
insb
mov
mov
call
add
test
out
push
ds
fdivs
jb
sbb
in
outsb
pop
jge
bound
xlat
out
inc
fsub
jmp
mov
xor
pop
mov
movsl
rorb
bound
call
sahf
or
sbb
or
inc
inc
bound
push
xor
dec
lret
loopne
push
ljmp
movsl
or
fisubl
lcall
adc
stos
xchg
adc
inc
addb
pop
ss
inc
aad
out
aas
ss
mov
pop
popf
mov
gs
and
ja
cmpsb
bound
insl
pop
lcall
mov
popa
sbb
insl
and
push
dec
xchg
jo
jo
arpl
ljmp
sub
jp
push
push
cmp
popa
add
push
or
mov
lock
in
jge
xchg
fisubrl
data16
pop
shlb
inc
or
int
adc
test
paddsb
cmp
xchg
push
xchg
mov
push
dec
cs
sbb
insb
outsb
fistpl
xchg
div
inc
mov
insl
les
out
sub
jo
arpl
sbb
lock
clc
aaa
or
incl
xor
insl
adc
adc
fs
icebp
sbb
push
add
push
in
arpl
jno
mov
mov
mov
sub
pop
xor
mov
insl
sahf
sub
lcall
push
in
mov
jmp
add
rcll
mov
mov
and
shrl
popf
mov
mov
lret
cmpsb
lods
cmpsb
test
notl
mov
add
and
ljmp
xchg
aad
rclb
fildll
aaa
notb
jecxz
mov
inc
repnz
xor
jae
shll
xor
xchg
adc
dec
arpl
jp
nop
vpunpckhqdq
sahf
xlat
test
sti
and
and
lods
pop
repnz
out
pop
popa
cs
std
and
popf
inc
adc
movsl
test
and
frstor
mov
xchg
lcall
inc
fs
les
rolb
or
or
cmp
sub
scas
ds
push
dec
shlb
push
cmove
mov
out
lock
fdiv
in
loop
outsb
in
fucomip
cmp
cmpsl
push
mov
inc
mov
inc
push
xchg
dec
dec
stos
jge
scas
fdivl
shll
notb
cwtl
ret
fucom
imul
sub
and
adc
and
cltd
add
insb
loop
dec
das
sbb
mov
dec
jae
std
dec
insb
in
repnz
push
mov
lock
enter
lods
cmc
pusha
aaa
mov
pop
fidivrs
mov
daa
adc
jg
in
loop
dec
or
xchg
xor
xor
ret
cmp
aad
xchg
shlb
sub
xor
jns
dec
sahf
loope
movsb
andb
scas
pop
pop
mov
popa
mov
inc
ljmp
inc
mov
fs
lods
mov
idivl
scas
and
push
adcb
aad
rcll
aad
insl
push
push
jecxz
mov
in
or
sti
into
xchg
jno,pt
ret
dec
jno
fidivrs
mov
mov
or
pop
dec
ret
pop
rcll
or
shlb
sub
dec
mov
inc
pop
stc
nop
jo
and
daa
xchg
lds
aam
xchg
loopne
mov
mov
jge
push
decb
dec
in
sub
mov
fwait
add
shrb
jge,pn
outsb
mov
pop
push
rorl
out
add
sti
sub
lahf
push
push
aad
mov
rclb
jo
or
fidivs
sbb
outsl
ss
xchg
adc
xor
inc
pop
rcrb
push
adc
out
jge
pop
in
ret
adc
fbstp
or
cmp
cli
mov
les
jne
push
cmpsb
mov
xor
pop
mov
inc
sahf
pop
and
mov
lods
sbb
js
and
sub
call
push
and
pop
push
icebp
mov
inc
pop
into
cmp
fsubrs
pmaxsw
cs
mov
push
out
xor
jne
sub
mov
mov
dec
popf
mov
div
pop
jno
mov
and
pop
pop
or
adcl
call
loope
sbb
mov
fistps
lods
ret
fcompl
cs
mov
pop
push
enter
adc
pop
inc
mov
mov
scas
cmp
push
pop
cld
aaa
test
cmp
inc
add
mov
js
adc
fwait
and
aam
cmp
cmpsl
outsb
mov
push
and
xor
aad
cmpsl
idivb
inc
mov
addr16
or
sbb
mov
dec
ja
push
movsb
fsubs
cmpsb
adc
mov
xlat
inc
das
test
movsb
movsb
mov
ss
loope
fdivl
lcall
mulb
jmp
cmp
arpl
cld
shl
jmp
push
mov
pop
jne
and
xchg
in
sbb
jb
mov
loop
jmp
cmc
in
call
xchg
inc
es
inc
mov
out
pop
ja
sub
mov
lcall
aam
fnstenv
add
sub
jno
push
pushf
sbb
stos
xor
mov
sbb
rcr
mov
bsr
push
hlt
mov
lcall
or
jmp
pop
push
hlt
cmp
jge
mov
xchg
inc
pop
rclb
inc
push
inc
movl
cmpsb
xor
inc
stc
gs
ja
lret
nop
into
mulb
inc
xor
adc
lret
jge
xchg
push
lahf
xor
inc
inc
lds
mov
loope
mov
mov
add
or
hlt
sbbl
mov
dec
cmp
adc
loopne
into
sbb
pop
test
mov
add
fstpl
hlt
cld
push
ss
fisubs
cli
mov
gs
jp
loope
lcall
lret
fs
outsl
enter
lahf
sbb
jecxz
mov
sub
das
inc
pop
push
daa
adc
or
dec
loop
pop
jmp
divb
adc
sub
negb
xor
sub
xchg
mov
dec
out
or
movd
xchg
sbb
xlat
push
popf
push
inc
mov
sbb
rorl
push
mov
testl
and
out
xor
jb
lds
cmp
stos
lods
shrb
push
adc
sub
push
xchg
imul
inc
push
fmull
mov
sti
inc
ljmp
sub
cli
hlt
and
lcall
enter
shlb
mov
xchg
loop
fdivrl
mov
cli
mov
test
mov
ljmp
jge
mov
insl
inc
out
mov
stos
adc
jne
orb
out
push
lock
iret
decl
popf
lea
fisttps
fnsave
dec
mov
sbb
jb
cmp
fsubs
and
bt
mul
jns
out
and
aas
scas
ror
or
loop
cmc
sbb
cmc
clc
xor
mov
fcoms
nop
mov
adc
test
loop
mov
repz
sbb
xchg
fsubrp
jnp
loop
sahf
pop
xor
popa
push
cmc
adc
popf
mov
mov
shrl
mov
or
and
sub
in
rorb
cltd
dec
push
dec
mov
inc
lods
xchg
ficomps
sub
mov
and
sbb
sbb
and
adc
rcrb
and
aad
dec
jno
lods
pop
and
jno
cld
mov
mov
gs
aad
ljmp
out
cmp
push
xor
and
icebp
cli
and
dec
es
dec
iret
es
std
pop
sub
xor
inc
xchg
in
add
jle
push
mov
mov
aam
push
jp
jnp
adc
ljmp
and
test
adc
das
mov
lds
dec
fsubs
and
mov
clc
jno
sbb
and
cmp
jae
sbb
pushf
xchg
mov
frstor
xor
dec
popa
outsb
cmp
cmp
in
push
sub
sbb
movsl
jecxz
xchg
lret
inc
pop
aaa
pop
sbb
fsubp
push
xlat
test
loopne
xor
sarb
add
inc
stos
jns
pop
dec
out
cmpsl
imul
icebp
cmp
sub
pop
repnz
test
xchg
ret
scas
lods
mov
jae
sub
shll
mov
mov
ret
sbb
sub
jecxz
sahf
jmp
cs
xchg
js
clflush
dec
mov
mov
jno
pop
out
xchg
sub
or
lods
imul
sbb
in
dec
fdivrs
xorl
dec
mov
ljmp
and
and
out
arpl
xchg
mov
push
dec
lods
hlt
inc
adc
ret
shl
xor
jge
sub
add
push
frstor
pop
arpl
in
scas
jp
pop
dec
push
scas
mov
mov
les
adc
xor
clc
bound
daa
ret
fwait
jo
outsb
mov
add
cmpsb
xlat
mov
push
sbb
inc
xlat
roll
mov
stos
sbb
lods
loope
out
add
int
jne
push
dec
push
mov
outsl
data16
sbb
outsl
cmpsb
jg
jge
rcll
dec
arpl
xor
fwait
mov
jecxz
push
jne
push
xchg
mov
pushf
aaa
adc
add
jae
mov
cmp
loope
outsb
addl
aas
cmp
push
push
cmp
and
add
inc
cli
dec
cmpsl
xchg
mov
insb
pusha
ret
stc
push
mov
jbe
pusha
pop
and
mov
test
into
mov
mov
inc
mov
mov
xor
and
cli
jbe
out
lret
faddp
punpckhbw
pop
pop
pusha
sub
fwait
cs
push
mov
sbb
fisubs
lret
arpl
dec
cld
jge
in
negl
sti
mov
scas
cs
test
imul
loop
mov
stos
test
cmc
lods
int3
mov
jp
jb
cs
cli
es
pop
push
int3
mov
mov
dec
inc
or
xchg
sbb
sbb
in
sub
pop
ffree
push
insl
mov
and
xor
add
lret
sub
ficomps
xor
xor
add
pop
dec
push
cld
mov
imul
lea
inc
xchg
std
in
mov
imul
shlb
push
push
notl
repnz
mov
push
loope
rcrb
test
push
sbb
inc
xchg
sbb
sbb
imul
push
mov
out
lfs
icebp
xor
es
sti
outsb
or
cld
leave
or
sub
inc
xchg
jo
shrl
cld
lods
loopne
je
cld
test
xor
jae
mov
insl
aam
add
cmp
fs
test
add
mov
push
and
xor
pop
cmp
jg
out
jne
je
mov
add
mov
fsubr
into
cmpsl
repnz
jl
popf
rolb
xchg
sbb
out
inc
movsb
insl
jnp
iret
mov
test
or
and
xor
add
in
add
mov
jmp
test
sub
es
add
xor
hlt
out
cmp
pusha
loope
scas
loop
loopne
addb
shr
adc
cmp
loope
jl
mov
xor
out
mov
mov
and
cmpl
test
js
push
sub
in
mov
lret
add
ds
xchg
into
mov
ss
push
lods
or
and
jo
cld
add
add
mov
arpl
repnz
add
idiv
mov
and
mov
xor
cmc
sub
roll
or
pop
or
cltd
cltd
js
mov
sub
jmp
inc
scas
mov
pop
fwait
bound
jbe
ljmp
xchg
jl
ret
jae
xor
orl
xor
xor
xchg
icebp
leave
cmpsb
out
gs
rcrb
jns
jno
sbb
pop
and
bound
lods
sbb
sbb
cmovg
ret
cmc
outsb
ffree
lahf
mov
mov
popa
arpl
addr16
dec
test
ret
push
xchg
addr16
jecxz
dec
aam
xor
shlb
mov
out
das
arpl
iret
ja
pushf
inc
and
jmp
ljmp
cmpl
sub
jb
jnp
and
mov
jnp
jb
out
in
lret
cmpsb
mov
pop
or
push
mov
mov
popa
sbb
inc
mov
fwait
jp
sub
mov
mov
add
xchg
mov
cs
pop
imul
adc
imul
xor
in
in
mov
subl
push
int3
dec
dec
add
out
xchg
out
fwait
adc
orl
not
imul
pusha
inc
add
dec
outsl
jecxz
pop
fstpl
cmpsb
adc
std
int3
mov
push
int3
sub
sub
cmp
fdivrl
cld
sbb
mov
jns
lea
or
lods
ljmp
adc
scas
fdivrl
data16
in
in
jb
jle
call
adcl
jg
add
pop
or
loopne
dec
pop
lret
in
fprem
mov
pop
fs
daa
or
add
sbb
out
xchg
dec
jns
mov
cmp
push
or
sbb
pop
xor
mov
movsb
and
lds
push
mov
sub
add
insl
inc
adc
jbe
outsl
cltd
call
jmp
jmp
xchg
fnstsw
dec
and
lret
cwtl
adc
and
ja
sbb
leave
push
sarb
sub
js
or
rolb
pop
shrl
mov
mov
cli
jnp
cmp
and
ljmp
mov
das
shrl
dec
add
aam
fcos
sub
nop
enter
push
aam
test
lret
pop
fwait
pusha
and
jmp
ja
outsl
out
cmpl
jae
mov
es
add
lret
shlb
dec
gs
add
scas
inc
stos
stos
mov
sub
jae
mov
es
decl
out
roll
test
inc
daa
mov
sub
jno
aam
jp
shrl
int3
jbe
inc
stos
popf
lfs
cld
inc
jnp
nop
add
xchg
cld
xchg
jecxz
cltd
aaa
out
mov
adc
pushf
sbb
push
rcrb
jns
inc
leave
jnp
fcoms
fildl
jnp
ret
sbb
lret
shrb
xor
loop
sub
pop
out
sbb
sarl
pop
ljmp
jb
add
mov
add
xchg
mov
data16
int
inc
dec
loopne
fmuls
stos
inc
stos
jnp
adc
mov
sub
dec
stos
xor
xor
iret
cmp
in
clc
subb
in
fsubr
insl
sbbb
or
cmpsb
test
test
sub
push
push
xor
pop
xchg
mov
xor
lock
mov
movsl
or
lods
arpl
gs
sbb
cmp
subb
pop
and
jl
das
or
jle
lds
adc
pop
mov
loop
mov
jbe
pop
or
out
jnp
mov
cs
xchg
mov
popf
mov
xor
pop
aam
jns
cld
sub
cs
jg
pop
les
mov
pop
mov
ljmp
xchg
mov
and
mov
test
int
xchg
mov
out
enter
ds
movsl
jo
ja
aad
pop
mov
mov
aaa
or
sub
stc
push
negl
out
dec
push
pandn
ds
imul
mov
fildll
daa
dec
in
cmpsb
add
dec
out
movsb
jns
and
or
or
jge
add
jbe
push
dec
rcll
add
mov
popf
inc
bound
ljmp
lret
mov
daa
inc
sti
add
xchg
jmp
add
scas
pop
or
movsb
loopne
shrl
jo
ficomps
pop
jle
dec
jno
sbb
dec
aas
add
sub
mov
loop
fildll
lods
scas
mov
mov
add
scas
and
pusha
xor
js
xor
and
fisttps
jecxz
add
ja
sahf
iret
std
mov
and
mov
inc
pop
inc
jmp
add
cmp
jo
jp
loope
in
dec
mov
scas
test
mov
insl
fldl
mov
outsl
stos
jge
inc
mov
and
shlb
add
in
xor
pop
jle
cmp
icebp
lea
sub
pushf
add
out
xor
imul
adc
mov
insb
inc
sub
aad
lods
cmpsb
ret
jge
or
pop
cmpsb
push
pop
scas
mov
xor
jno
and
stc
lock
or
lcall
cmp
mov
sbb
imul
pop
and
push
mov
into
jecxz
bound
push
dec
lods
xchg
in
lods
mov
jae
pop
xlat
js
jns
psllw
sbb
sub
pop
out
mov
dec
ja
sbb
sbb
add
mov
adc
mov
adc
das
mov
adc
xchg
shrd
mov
out
mov
and
cs
sbbb
cwtl
xor
xor
mov
ret
inc
mov
push
ds
ret
mov
dec
cmpb
stos
movd
fisttpll
int3
inc
jno
xchg
stos
outsl
loop
ficompl
es
jp
orl
pop
push
jl
cltd
stos
in
popa
mov
hlt
lret
pop
adc
out
in
pop
xchg
aam
mov
loop
inc
in
xor
arpl
pop
lret
into
or
shrb
movsl
xchg
inc
pop
arpl
and
sbbb
mov
dec
dec
cmpsl
mov
mov
pushf
mov
lea
daa
pop
mov
mov
stos
sahf
sahf
mov
shl
inc
stc
adc
or
arpl
xchg
dec
inc
and
jo
popf
jp
adc
and
sub
xchg
cmp
scas
mov
inc
cmpsl
fisttpll
dec
repnz
mov
and
call
add
repnz
sbb
adc
cmp
fdivrs
sti
negb
mov
jmp
sbb
ja
shll
mov
ja
pop
clc
cmpsl
add
pop
mov
aaa
sub
cld
mov
or
dec
and
fstpl
adc
cmp
inc
fisubrl
push
cli
inc
lea
scas
loopne
jmp
fnstsw
or
sti
clc
roll
mov
jg
scas
outsl
test
lock
sbb
inc
jne
ljmp
push
es
dec
pop
add
sub
inc
rolb
movsl
movsl
cmc
or
sbb
stos
add
adc
fs
cli
inc
into
loope
mov
mov
aas
int3
iret
cltd
fidivrl
ljmp
or
mov
pop
mov
movsl
xchg
movsb
aam
fdivs
imul
pop
ffreep
pop
pop
sahf
jmp
mov
mov
ljmp
int
pop
push
shll
pushf
in
dec
add
dec
add
adc
inc
hlt
ljmp
lcall
ror
loope
leave
and
mov
sbb
mov
int
adc
pop
stos
das
ret
pusha
stc
es
mov
jne
inc
rcrb
daa
xchg
xor
aad
add
inc
push
pop
dec
or
push
outsb
into
testb
mov
jp
xlat
sub
into
jl
pop
dec
mov
lds
outsb
loop
jecxz
pop
mov
stc
out
sub
dec
mov
mov
repnz
ljmp
and
aad
mov
and
and
push
inc
jge
into
mov
daa
into
pop
add
pop
and
orb
ficompl
mov
ret
xor
daa
mov
movsb
inc
loopne
push
outsl
or
sarb
mov
imul
lret
jp
pop
sbb
inc
mov
or
jl
dec
cli
sti
xor
movl
in
mov
xchg
into
sbb
cmp
adc
dec
mov
and
and
add
ds
mov
popa
loopne
inc
aad
add
lret
mov
shlb
and
rcll
imul
xchg
aam
lea
call
xorl
cmp
fldcw
or
scas
add
dec
in
sub
push
jb
aaa
sub
shr
pop
xchg
shlb
push
pop
mov
hlt
and
sub
sub
imul
push
xchg
aas
ljmp
cs
jbe
mov
loop
and
out
sub
xchg
push
pop
xor
push
cmpsl
mov
int
add
xchg
add
add
scas
jp
int
mov
ret
movsl
pop
mov
jo
inc
inc
stos
push
mov
adc
out
pop
jb
inc
xchg
push
xor
std
or
adc
add
rcr
sbb
cli
dec
mov
sub
pop
pop
cld
xchg
bound
fisubl
cmp
fdivrs
jno
dec
das
lret
addb
sbb
sbb
mov
ss
int
fmul
shll
jmp
and
ret
push
mov
and
sub
lds
movsl
loope
gs
hlt
into
ss
lret
xchg
xchg
and
cmp
insb
ret
pop
sbb
push
xlat
in
mov
jecxz
int
imul
imul
sbb
into
shl
stc
mov
and
jno
sub
enter
int3
in
shll
nopl
insb
das
dec
sub
ficomps
push
push
push
pop
pusha
je
add
out
adc
cld
cmp
sbb
mov
push
daa
fnstenv
dec
lret
scas
ret
jae
es
ja
in
push
jmp
loop
cmp
xor
dec
or
adc
ret
pop
xchg
mov
sbb
icebp
pusha
push
jo
pop
push
pop
scas
cmpb
adc
out
mov
call
pop
add
stos
lock
mov
shrl
add
jp
dec
ljmp
or
gs
xor
pop
lcall
dec
cltd
jl
pusha
daa
jne
mov
add
mov
es
popa
enter
inc
sbb
and
sub
and
mov
out
repnz
push
out
clc
mov
lods
lea
cli
stos
xor
imul
iret
test
sbb
inc
push
mov
push
push
in
sub
and
mov
push
mov
popf
loop
jo
mov
popa
add
or
add
adc
dec
dec
in
mov
push
mov
pop
ror
cmp
aam
das
out
cmp
test
out
pop
inc
fnsave
repnz
jp
lods
aaa
imul
dec
mov
rorb
pop
mov
fwait
cmpsb
ret
jns
icebp
mov
push
pop
sbb
push
mov
push
mov
mov
pop
mov
adc
jmp
notb
inc
rolb
clc
aam
mov
and
mov
lret
inc
aas
push
mov
mov
pop
outsb
shlb
mov
cwtl
mov
test
out
mov
das
pop
sti
and
insb
xchg
loop
es
call
jl
movsl
lahf
ffreep
push
xor
nop
fidivrl
testb
pushf
lret
loope
jle
repz
shll
xor
bound
jge
adc
clc
aad
mov
stc
and
xchg
xor
and
push
sbb
jmp
in
adc
testb
pop
add
dec
push
ret
stos
test
inc
xchg
and
sub
js
sbb
lods
cld
hlt
mov
or
lahf
pop
dec
xchg
fsubp
xchg
add
xchg
xor
xchg
mov
mov
mov
into
xchg
shr
lea
or
jp
sub
pop
inc
push
and
push
in
add
push
jmp
insb
dec
mov
or
ds
addr16
fs
into
shl
jo
testb
mov
push
push
mov
cltd
and
mov
jno
daa
xor
jno
add
ss
inc
jmp
inc
jb
lods
jo
sbb
pusha
sar
mov
enter
mov
and
into
mov
outsb
aas
and
cmp
sarb
cmpsb
ljmp
push
inc
popf
std
or
test
ror
mov
push
inc
jecxz
mov
cmp
inc
out
cmpsl
pop
inc
cmp
in
add
pop
xchg
enter
or
lods
add
outsb
loopne
lret
push
out
loop
into
add
xchg
daa
in
cmc
ds
lahf
jo
xor
jo
ret
dec
lods
and
add
jae
dec
and
mov
lds
xchg
jb
rol
add
or
pusha
cmpsl
dec
mov
pusha
fcmove
jmp
xor
pop
pop
inc
jl
mov
fabs
cmp
ljmp
std
xchg
test
cmpsl
xor
mov
xor
cmp
repz
ret
andl
mov
fcompl
into
mov
mov
rol
mov
aas
aaa
mov
xor
jns
cmpsl
dec
mov
add
dec
jp
out
pop
cld
sub
sarb
xor
imul
jnp
les
xchg
sub
stc
pop
ret
push
bound
int
bound
sbb
imul
orb
push
and
jge
mov
rol
jbe
jmp
bound
ljmp
stos
fadds
mov
mov
or
mov
jo
lock
stc
cli
or
shl
xor
test
xor
xor
mov
fmull
std
sbb
cmp
jno
jns
jg
mov
sahf
nop
fwait
data16
cs
loopne
sbb
int
sbb
mov
cmp
or
jp
fisttpl
aaa
outsl
mov
mov
hlt
sbb
push
aas
push
add
sub
into
sbb
cmpsb
les
inc
mov
dec
sbb
cld
popl
and
icebp
loop
add
mov
jle
jbe
inc
mov
mov
mov
add
shr
mov
ds
and
les
add
mov
jecxz
xorb
es
out
push
mov
shrl
divb
jno
push
insl
rcll
add
sbb
clc
xchg
xor
sti
loopne
mov
je
popa
mov
jecxz
fidivl
inc
nop
aad
xor
lret
add
push
or
pop
push
xchg
jp
mulb
xor
fs
ja
aas
ret
cmp
cld
jno
cs
test
stos
pop
test
cwtl
test
mov
pop
gs
ficompl
scas
ds
stos
in
jle
cmp
jnp
jle
ret
cmc
rcrl
jb
dec
out
int3
inc
pop
movsl
jb
push
fwait
arpl
addr16
das
pop
cmpsb
mov
push
xor
outsl
jo
outsl
jp
jnp
icebp
clc
cld
push
push
push
mov
fisttpl
sarb
xor
mov
sbb
or
xor
insl
push
adc
mov
inc
or
dec
and
jb
mov
push
int3
mov
xor
xchg
test
inc
sti
icebp
ds
icebp
jmp
mov
mov
or
stos
dec
bnd
mov
sahf
inc
sub
add
mov
shrb
add
dec
cmp
call
cli
dec
cmpsb
addr16
lret
outsb
gs
mov
sahf
outsl
ficoms
addr16
xchg
in
xor
push
out
lahf
pusha
sbb
repz
sbb
ljmp
push
mov
mov
add
cld
pop
sub
fmuls
xor
push
dec
js
daa
pushf
adc
cmp
inc
rcll
movsb
mov
and
imul
hlt
mov
mov
fisubrl
es
pop
xchg
pop
es
add
pop
iret
push
pop
psubd
mov
movsb
fisubs
xchg
nop
fs
pop
std
pop
adc
sbb
pop
out
sub
mov
sbb
lods
sbb
pop
adc
fiaddl
aaa
data16
je
fsubs
xchg
outsl
jb
and
loope
fisttpll
test
push
out
jns
stc
cmpsl
das
sbb
pop
cld
iret
dec
jle
jno
scas
into
popa
push
add
outsb
push
mov
sub
int
dec
sbb
xor
adc
and
push
push
xor
push
pop
mov
dec
scas
shr
mov
out
incl
inc
mov
mov
xchg
rol
pusha
sub
fldenv
cmpsb
adc
cmp
out
mov
jmp
mov
in
push
emms
inc
aam
and
adc
dec
out
and
mov
pop
insl
jne
sbb
int3
jp
fcmovb
xor
hlt
mov
mov
add
stos
std
add
fdivs
arpl
daa
or
stos
mov
mov
adc
sahf
and
aaa
aad
add
or
push
mov
mov
rcr
popa
adc
xchg
sbb
jg
in
out
cmp
push
jecxz
fdivrs
add
imul
push
mov
out
push
loop
scas
jnp
sbb
cmp
and
mov
out
es
mov
sub
idivl
scas
sub
pop
inc
mov
scas
push
sub
dec
push
ljmp
rol
mov
imul
mov
cmpb
in
mov
std
rcrb
mov
in
pop
xor
push
xchg
fsubrl
mov
jmp
fisttps
cmc
push
cli
out
fcmovnu
notb
and
test
aas
into
mov
imul
jae
jo
mov
jnp
xchg
data16
jmp
pop
fucomip
cmp
dec
jb
fs
cld
mov
inc
imul
mov
and
pop
xchg
dec
fisubrl
jecxz
fdivrp
or
jle
cmp
or
shl
and
cltd
add
int3
fiadds
scas
in
repnz
add
add
in
js
cltd
frstor
fstps
mov
adc
cs
lods
pushf
rolb
mov
mov
jmp
call
pop
fcoml
xchg
sbb
repz
and
adc
fstl
mov
jnp
call
js
lock
fcmovu
cmpsb
mov
iret
stos
std
push
jbe
add
sbb
sub
scas
out
push
mov
cmpsl
mov
xlat
ret
pop
rolb
jb
jae
sub
or
aam
and
fistps
fistpll
and
add
jp
lahf
dec
dec
xchg
mov
lods
rcll
lret
scas
lahf
push
xor
lcall
mov
test
cmp
ja
mov
lds
push
stos
mov
aad
mov
xor
into
sbb
fsubs
pop
sub
arpl
and
mov
repnz
popf
daa
repnz
sbb
cwtl
jo
push
fs
mov
es
jp
dec
scas
aam
out
aaa
xlat
movsl
sbbb
aam
les
lcall
sbb
cli
insb
mov
fs
mov
iret
push
test
jne
mov
dec
pop
and
pop
inc
pop
or
sbb
push
push
pop
shl
fucom
inc
sub
push
es
dec
jne
adc
jo
loopne
pop
imull
lret
mov
imul
outsb
sub
xor
xor
mov
or
bound
je
test
push
test
inc
or
std
sub
and
xchg
xchg
insl
aad
jg
push
sbb
sub
pop
arpl
pop
mov
nop
xchg
inc
push
popa
lcall
mov
gs
xor
jo
pop
data16
pop
test
ja
test
in
add
mov
clc
add
clc
fwait
dec
rcll
sub
xchg
lcall
icebp
cwtl
and
pop
and
aad
rcrl
jecxz
cmp
xor
nop
dec
mov
adc
pop
outsl
outsl
mov
sub
add
jb
pop
hlt
mov
sbb
fcomps
jmp
xchg
mov
push
arpl
dec
aaa
mov
aas
shl
test
in
push
dec
in
jl
sbb
cmc
xchg
jnp
adc
test
xchg
inc
das
pop
or
add
les
adc
ret
jecxz
addr16
out
dec
push
add
and
sub
das
enter
fcompl
mov
bound
mov
push
mov
inc
jb
cmp
sub
pop
cmp
out
jns
ret
mov
frndint
lods
adc
sub
mov
dec
push
push
ret
out
mov
es
call
adc
shlb
iret
sbb
adc
jl
mov
fwait
fs
jae
and
or
repnz
push
sub
push
jle
daa
mov
cli
or
mov
mov
mov
pushf
mov
dec
mov
aas
jge
out
jle
mov
mov
leave
in
push
js
and
data16
mov
inc
std
les
insb
fildll
or
adc
ds
aad
inc
sub
mov
pusha
stos
mov
arpl
fstps
fldt
inc
repnz
mov
jecxz
cmp
mov
jle
mov
cli
inc
or
int3
xchg
bound
adc
cmp
lods
xor
add
repnz
cld
mov
xchg
es
mov
push
icebp
cld
shll
jno
sub
xchg
lods
dec
stos
xor
jmp
insb
mull
mov
mov
push
jbe
xor
add
imul
push
fsubrp
insl
xor
mov
lods
xlat
xchg
jns
cltd
pop
mov
inc
pop
xchg
cli
push
ds
rorb
sub
out
inc
mov
xor
and
nop
and
or
mov
loop
sbb
gs
nop
scas
mov
xchg
ret
jge
xor
cld
push
pop
fs
and
repz
and
imull
pop
jmp
push
dec
aaa
fists
inc
sub
notl
iret
filds
sub
pop
xchg
push
push
or
cmp
adc
lods
outsl
jg
mov
pop
xor
xor
sbb
xchg
jno
ljmp
fists
push
sbb
or
jo
sub
dec
cs
or
lret
push
jns
ficompl
lret
cmp
ss
icebp
ret
sbbl
movsb
sub
mov
jmp
sbb
imul
stc
int3
sub
xor
rcl
inc
aam
aas
xor
fdivl
add
out
inc
push
ds
dec
mov
jo
test
pop
push
jmp
jo
fstl
push
cs
cmp
call
xchg
imul
lods
mov
push
sbb
inc
negl
push
jecxz
inc
inc
out
mov
pop
ss
or
dec
xor
inc
and
xchg
cmp
sti
jp
push
lock
sub
sbb
cmp
inc
and
insl
outsl
loop
lods
daa
cmp
push
mov
mov
sub
fldt
loope
dec
xor
inc
inc
cmp
icebp
aas
jno
jns
jo
pop
and
xchg
subb
lds
popa
cs
jne
popa
call
inc
in
cmpb
and
xorb
xor
jbe
ds
jo
xchg
xor
pop
sub
mov
dec
das
xchg
push
push
mov
fwait
dec
xor
jbe
mov
mov
lock
mov
sarb
insb
testb
mov
mov
call
and
jl
lods
rorl
popa
mov
call
sub
or
es
inc
dec
push
mov
subl
cs
xor
push
jbe
aad
push
xor
or
mov
nop
xor
jle
ret
fsubrl
xchg
push
mov
clc
jmp
in
xchg
push
mov
int
push
xor
push
bound
ja
or
fsubs
pop
shrb
xchg
je
jno
jno
dec
push
jecxz
std
add
jns
clc
add
cmp
test
add
ja
in
dec
sti
cmc
mov
jae
inc
pushf
arpl
sub
xor
decl
dec
sbb
xchg
fsubr
cmpsb
gs
test
lea
cmp
cs
jmp
shlb
rolb
incl
and
pusha
loop
cmpsb
sub
in
and
sbb
cmp
fdivr
icebp
or
inc
sbb
rorl
lock
imul
ss
pop
in
in
pop
inc
xchg
fsubrl
or
lock
and
hlt
or
sub
add
sbb
or
jmp
push
daa
mov
fimull
lds
adc
pop
xor
loopne
bound
rcrb
ja
inc
mov
jg
dec
mov
push
ss
mov
sbb
add
xchg
in
test
test
xchg
addr16
push
adcb
mov
sub
xor
ljmp
and
push
xchg
int
arpl
aam
pop
movsb
les
dec
mov
pop
jmp
stos
add
jmp
jp
inc
or
add
in
or
xor
and
mov
stos
jecxz
and
lods
aaa
jl
mov
imul
dec
jle
sub
adc
es
dec
xor
add
loopne
xchg
popa
pop
pop
addb
push
bound
insb
and
push
aaa
fmull
loope
loope
shl
adc
dec
mov
popa
push
push
out
cwtl
mov
push
dec
or
dec
insb
fadds
inc
insb
sbb
mov
je
bound
sbb
movsl
repnz
cltd
hlt
jmp
pop
lret
xchg
xchg
daa
mov
outsl
fiaddl
loop
pop
push
bound
sbb
aaa
inc
ret
lret
sbb
mov
or
jno
scas
xchg
adc
mov
pop
cmp
jecxz,pn
xchg
das
les
mov
outsb
sub
or
loope
scas
sbb
insl
stos
lahf
es
add
shr
mov
mov
ja
addr16
and
imul
push
xchg
push
dec
outsb
fmull
es
mull
adc
sahf
imul
jg
xor
dec
mov
lret
adc
out
loope
pop
es
mov
xor
imul
xor
add
mov
pop
dec
xor
inc
push
pop
adc
add
pop
xor
inc
push
mov
push
jp
push
jl
call
mov
and
xor
xor
xor
mov
dec
andl
dec
es
pop
jbe
pushw
in
cmp
dec
leave
mov
adc
lcall
sbb
push
jp
add
ds
jle
or
xchg
aad
xor
lret
or
in
cmp
leave
inc
mov
adc
ficoms
int3
push
in
jnp
mov
fstl
mov
idivl
push
outsb
js
inc
lods
sub
xrelease
faddp
inc
and
clc
shrl
scas
xorb
push
fisttps
sub
fstps
jo
fwait
adc
xor
addr16
xor
xchg
add
dec
sub
adc
std
lahf
in
sub
push
outsl
flds
imul
and
xchg
movsb
push
out
inc
mov
into
mov
insb
xor
and
enter
sbb
pop
jge
scas
cmpsl
jb
fcmovb
add
jle
loope
push
sbb
sbb
sbb
xor
dec
cmp
xor
xor
outsb
mov
mov
push
jbe
xlat
and
pop
fnstenv
in
push
cmp
sub
adc
lds
adc
jg
ret
inc
xor
adc
mov
ja
outsl
loop
in
mov
pop
push
sub
sti
push
ja
call
push
lea
push
adc
pop
pop
popa
dec
pop
sbb
xchg
add
push
mov
push
cmc
xor
pop
or
dec
in
push
fcomi
test
pop
mov
sbb
or
jns
xchg
pop
popa
mov
mov
lods
stos
lock
adcb
inc
call
sbb
test
or
in
outsl
loopne
shll
inc
mov
add
jmp
mov
das
outsb
push
loopne
adc
pop
loope
icebp
fdivr
and
ljmp
int3
xchg
pop
xlat
or
cmpsb
or
push
imul
push
scas
sbb
sub
loopne
pusha
xor
adc
hlt
sub
loop
push
sbb
push
dec
ss
out
scas
gs
lcall
mov
and
dec
inc
add
or
or
arpl
xor
aaa
or
inc
andl
xchg
cmp
cltd
stos
call
xchg
hlt
sbb
sbb
bound
push
xor
insl
push
sub
push
push
mov
fisttpl
push
outsb
repz
and
je
mov
push
xor
xor
push
push
cmp
imul
outsb
sub
or
stos
shll
xchg
push
clc
or
dec
xchg
icebp
mov
adc
sub
xor
rclb
lods
jge
mov
jns
test
fcmovne
jo
das
popa
xchg
inc
adc
mov
sub
shr
dec
and
dec
push
push
or
xchg
xlat
pop
aas
pmuludq
inc
jg
sub
lea
mov
into
es
push
dec
push
xlat
inc
mov
adc
pop
fmulp
scas
out
xchg
popf
ret
ret
add
in
push
cs
mov
cmp
arpl
loope
sbb
xchg
mov
add
loope
cmp
jle
bound
cmp
cmpsb
xor
loop
mov
sbb
mov
lea
ret
push
outsb
or
inc
scas
push
sbb
sbb
bound
sub
mov
push
pop
filds
clc
sub
je
les
cli
bound
icebp
ljmp
mov
sub
gs
push
imull
xor
sar
jmp
insl
and
and
mov
insl
cs
adc
lret
pop
cs
sub
js
push
enter
pusha
adc
pop
iret
std
iret
sbb
push
jbe
jmp
lea
into
outsl
mov
and
clc
xor
out
push
frstor
mov
int3
ss
in
dec
pop
xor
xor
jns
sub
xor
jmp
imul
bound
xor
or
cli
ret
cmp
pop
fs
and
pop
push
lock
dec
in
sub
jmp
pop
pop
adc
ds
data16
roll
jae
dec
add
fisttps
stc
and
xchg
fucom
test
push
js
pushf
xchg
fildl
bound
aas
pop
sub
xchg
xor
sub
push
sub
std
test
push
fs
adc
push
data16
cmpsb
gs
ss
push
push
pop
lcall
sub
leave
loop
mov
ficompl
test
lods
data16
inc
mov
into
push
mov
mov
leave
fisttpll
xlat
xchg
scas
push
mov
sub
andl
sbb
arpl
sbb
dec
dec
std
and
mov
mov
enter
std
dec
cmp
push
xor
subl
add
and
outsl
cmp
out
adc
popf
adc
jns
mov
jb
mov
out
jns
sbb
popf
pop
jno
shlb
mov
fsts
je
dec
ret
dec
imulb
cmp
cs
pop
dec
xchg
daa
push
loope
je
loope
outsb
fisttpll
ret
cli
push
push
fidivs
push
xor
cmpsb
pop
sbb
lahf
loop
push
push
cmp
or
nop
ret
push
call
xor
sarb
nop
xchg
sbb
push
lea
push
push
fxtract
clc
push
mov
sbb
jb
add
adc
in
inc
lea
mov
add
jecxz
sub
loope
mov
dec
sbb
xor
pmaddwd
sbb
sbb
cmp
adc
mov
or
dec
fstps
push
call
stos
add
movsl
stos
ja
inc
xor
fcomp
sbb
push
sahf
and
dec
loop
mov
sub
mov
xchg
fidivl
shll
jge
inc
in
or
mov
aam
dec
ds
lret
and
movsl
sbb
nop
sar
sti
rcrl
orl
jl
lret
xor
data16
sbb
fisubrl
les
inc
or
pop
or
std
les
into
sbb
int3
or
lcall
mov
adc
push
push
lock
mov
loopne
out
aad
dec
mov
xor
xorl
jmp
add
popf
mov
dec
mov
mov
adcl
jp
jmp
insl
and
nop
inc
lcall
sub
decb
or
dec
push
loope
ljmp
inc
and
cmc
daa
inc
cs
cld
push
das
push
clc
daa
jle
adc
xor
sahf
sar
testl
ds
push
xor
cmp
xor
xor
dec
mov
call
dec
xor
jp
mov
loopne
out
push
push
pushf
scas
clc
and
mov
es
stos
push
dec
ljmp
or
push
fbstp
clc
or
es
inc
sub
mov
ljmp
and
or
cs
mov
cs
or
lock
fsubrs
fimuls
adc
inc
fnstcw
rorb
cmp
add
cltd
aam
std
sbb
add
xchg
inc
std
rolb
aam
insl
iret
stc
in
into
cld
xchg
lret
sub
adc
mov
add
ficoml
loopne
hlt
lock
and
sub
xchg
xor
sbb
dec
push
inc
mov
adc
pop
push
notb
insb
inc
arpl
mov
pop
aas
insl
imul
out
inc
inc
inc
ss
mov
aas
int
sub
in
cmpsl
jle
int
pop
cmp
xchg
mov
and
jnp
lods
out
inc
jmp
sub
lods
popa
jbe
xor
jg
sub
inc
imul
ss
in
ret
mov
xor
cmp
sub
xor
adc
rorb
xchg
movsl
lea
jne
mov
cmp
adc
sub
ficomps
fcoml
ret
cmpsl
int3
sub
xor
js
ljmp
adc
adc
divl
mov
push
push
jmp
shrb
or
sub
cli
lahf
sbb
sbb
xor
xor
paddb
mov
imul
lea
dec
dec
cmpsl
outsl
out
push
sahf
sbb
stos
push
or
inc
fiadds
lcall
shufps
push
sbb
cs
push
sub
adc
xor
push
sub
adc
js
dec
leave
and
stos
xor
in
pop
jno
xchg
inc
loop
push
inc
pop
inc
jp
xor
js
sbb
adc
inc
sub
mov
jb
mov
mov
pop
add
mov
cmp
cmpsb
dec
iret
fstl
test
lods
jmp
adc
ja
mov
cs
sub
jb
push
js
mov
or
jmp
mov
mov
dec
pop
stos
sub
xor
push
add
aam
dec
xor
bound
push
xchg
and
mov
js
and
push
lret
dec
arpl
sbb
and
push
xchg
and
leave
fistpll
into
add
sbb
jmp
mov
dec
cld
cli
cmp
inc
adc
scas
fistpll
xchg
mov
or
push
fsubl
addr16
repnz
outsl
dec
mov
getsec
pop
add
push
adc
imul
xor
ljmp
xchg
repz
push
pushf
loop
scas
negb
int
mov
add
outsb
ljmp
mov
push
in
adc
insb
adc
popf
xchg
stc
inc
addb
sbb
testb
pop
and
aas
xchg
rep
inc
stc
mov
inc
lock
repz
movsb
pusha
xchg
aas
fwait
sub
push
xorb
mov
cmp
sbb
sub
jno
or
ret
ja
mov
cmp
mov
xchg
ss
pop
jmp
xor
adc
adc
jno
cld
mov
xor
pusha
dec
jne
rorb
fnstenv
es
ret
and
bound
pop
hlt
push
inc
fldt
popa
xor
pop
xor
bound
sbb
cmp
cmp
dec
sbb
dec
mov
adc
fs
xor
idivl
pop
mov
xchg
jo
pushf
sti
cli
jns
cmp
add
fwait
repnz
inc
inc
or
and
sti
ljmp
mov
xorb
int
inc
gs
or
sbb
jbe
mov
and
out
rclb
inc
adcb
inc
xchg
sub
stos
adc
mov
jg
adcl
mov
inc
shll
xor
jne
in
inc
add
pop
jmp
out
add
or
adc
fucomi
mov
push
mov
fsubp
cmp
pop
jmp
push
sbb
shl
add
xor
scas
mov
sbb
xrelease
sbb
loop
sub
push
jg
in
out
fs
cli
in
orb
adc
and
lret
mov
dec
jl
mov
outsb
dec
in
dec
xchg
insl
js
lods
aas
mov
xchg
pop
fimull
or
xor
call
push
sub
cs
cs
dec
js
in
hlt
mov
mov
xchg
sub
sbb
add
pop
fdivrs
popf
and
in
adc
dec
jg
jno
imul
lcall
ficomps
cmc
fs
arpl
mov
dec
push
xchg
sub
xchg
cld
popa
jge
nop
and
insb
aad
aas
arpl
inc
and
sbb
subl
cmp
inc
adc
dec
or
imul
insb
cli
cmpb
pop
repnz
sub
jle
push
mov
pop
test
pop
jge
inc
cmpsb
aad
push
mov
push
iret
cmp
stc
inc
rep
push
icebp
jae
fcompl
int
mov
loope
stos
add
mov
ljmp
mov
adc
push
xchg
xor
lret
push
lea
es
dec
cmp
push
popf
sub
mov
or
jp
push
pop
dec
in
lock
inc
xor
xor
and
shll
fwait
arpl
adc
add
and
addl
or
xchg
push
sbb
sbb
imul
pop
out
je
mov
jge
fcmovnu
or
cld
xchg
ss
xorl
xor
mov
push
cltd
and
and
adc
xlat
lret
das
sub
icebp
xor
jecxz
add
popa
ds
adc
fldt
adcb
and
mov
lcall
mov
xor
cltd
adc
out
and
mov
out
cmpsl
mov
jmp
loopne
sub
lds
sub
mov
sti
add
daa
or
mov
sub
mov
cwtl
test
popa
lods
ds
das
or
push
xchg
arpl
cli
movsl
popf
sub
ja
subl
lcall
daa
imul
push
imul
mov
leave
mov
sbb
inc
jb
bound
cmpsb
mov
mov
je
cltd
es
dec
push
iret
sbb
xchg
push
jle
xchg
adc
dec
sub
shrl
mov
jno
jl
mov
dec
mov
sub
add
dec
out
xor
std
dec
mov
dec
xorl
out
cmp
pop
sub
ds
push
cmp
push
pop
fs
push
xor
test
cmpsl
dec
push
adc
mov
stos
rolb
dec
mov
push
movsb
fidivl
out
adc
flds
mov
mov
out
push
sbb
jb
fmul
sbb
popa
cmpsl
dec
mov
shrb
subb
stos
push
testb
je
sub
es
and
lahf
mov
push
ja
outsb
mov
js
lcall
cwtl
cmpsl
push
mov
stc
ljmp
mov
sbb
fld
sbb
push
xor
mov
movsb
lods
leave
xor
mov
fldl
call
iret
push
iret
sahf
divb
xchg
cmpsl
shlb
jl
push
sbb
mov
arpl
das
lahf
fdivr
add
lret
cmp
cmpsb
xchg
cltd
cmpsl
jp
dec
popa
sub
rclb
popf
adc
push
ds
push
repnz
imul
sbb
xchg
xor
ljmp
in
sbb
mov
sub
pop
pop
cmc
cltd
out
mov
inc
inc
or
mov
ffree
aam
inc
cmp
mov
sub
pop
mov
mov
data16
push
xor
ljmp
push
test
push
sub
das
xchg
add
outsl
enter
mov
jo
mov
int
push
pop
pop
ljmp
jno
pop
inc
xchg
call
sub
out
push
sarl
mov
push
aaa
mov
fisubl
lahf
mov
cli
repz
adc
sub
dec
das
cld
dec
sysenter
inc
and
lret
or
sbb
mov
jo
and
jmp
dec
out
push
pusha
and
pusha
pop
adc
mov
push
mov
pop
sti
pop
jge
inc
lock
cli
mov
cmp
jmp
gs
std
push
nop
push
sbb
and
sbbl
cmovo
push
mov
mov
cmpsl
test
cld
dec
stos
nop
in
cmp
add
ja
push
pop
adc
shrb
aam
dec
pop
and
in
dec
or
xor
ss
cld
lea
fidivrl
jecxz
ret
inc
jg
inc
pop
add
fisttpll
xchg
inc
fisttpll
loop
or
sub
push
dec
inc
mov
jp
in
sub
enter
and
sbb
pop
jns
mov
xor
add
outsb
lret
repz
bnd
sti
xor
scas
mov
iret
jns
inc
push
pop
loope
rcl
scas
aaa
add
ret
add
or
fwait
mov
sbbl
fmuls
lods
mov
dec
movsl
mov
lcall
or
push
lcall
cli
movsb
pop
sahf
leave
stos
stos
dec
sbb
dec
cmp
xchg
jmp
and
sub
stos
popa
pusha
jo
test
jl
mov
jnp
inc
scas
test
pushf
cmp
jl
cmp
or
or
insl
jb
es
test
jl
imul
sbb
outsb
inc
scas
fdivr
adc
or
test
xlat
sbb
pop
fcomip
cmp
lcall
stc
xor
and
or
push
loop
adc
sub
jecxz
fisubs
cs
inc
in
cltd
movsb
cld
cwtl
int3
xor
mov
stc
lcall
loope
pop
jmp
push
mov
lret
lret
add
pop
addb
fadds
add
jo
sahf
les
pushf
push
and
xor
mov
mov
pop
hlt
sub
popl
sti
fistpll
inc
dec
xor
mov
mov
jg
push
add
or
outsb
mov
scas
pop
das
in
dec
mov
pop
push
push
pop
gs
push
jno
push
push
jge
adc
imul
out
dec
sbb
into
rcrb
mov
fidivrl
popf
iret
es
data16
mov
ds
daa
lcall
sub
clc
inc
mov
mov
pop
mov
stos
out
pop
mov
pop
mov
jmp
into
mov
movsb
jbe
sbb
and
or
cs
loope
shll
pop
ret
loop
jne
sub
xor
jp
cmpsb
mov
pushf
loop
mov
and
mov
daa
pop
push
cs
fmull
icebp
in
add
push
repnz
or
insb
inc
std
xor
in
out
push
pushf
xchg
shrb
mov
filds
leave
or
imulb
js
out
into
icebp
pop
jo
aad
dec
push
cld
movsl
pop
xchg
xchg
and
dec
loop
imul
xchg
mov
mov
pop
ljmp
dec
jb
clc
jae
hlt
pop
dec
or
aaa
ljmp
pop
jb
add
push
das
lds
jl
pop
adc
mov
jmp
xchg
mov
lock
loop
pop
fwait
dec
jns
mov
je
and
xor
out
sti
je
icebp
dec
into
nop
sub
mov
add
filds
aaa
inc
jecxz
inc
sahf
or
inc
pop
xchg
mov
mull
int
cmp
sbb
sbb
lidtl
incb
cs
shlb
push
inc
inc
jmp
sahf
into
fucomi
push
gs
shr
adc
in
mov
cmpsl
sub
and
mov
mov
ret
shll
enter
test
or
push
or
decb
cwtl
pop
sbb
mov
iret
lahf
ljmp
or
out
cmpsl
clc
xor
pop
sar
arpl
aam
cld
mov
jle
xchg
in
or
shll
dec
or
pushf
add
loop
dec
add
dec
fimull
icebp
push
aaa
cmpsb
inc
push
dec
fistpl
push
add
fiadds
mov
pusha
mov
jg
inc
sbb
mov
push
push
sub
dec
ljmp
mov
fwait
mov
addr16
adc
stc
in
xchg
push
movsl
mov
inc
push
je
mov
addr16
mov
mov
or
adc
daa
adc
ficomps
icebp
setae
ret
stos
pop
push
loope
repnz
out
out
or
out
mov
mov
sbb
scas
inc
sub
gs
or
test
pop
adc
jns
lea
inc
cli
xor
adc
pop
cli
mov
pop
stc
aas
mov
mov
mov
out
pop
ss
sbb
scas
xchg
out
jo
lret
sub
ret
fidivrs
js
push
jo
lock
rorb
push
mov
sbb
or
leave
jne
sub
cmp
cmpsb
roll
adc
dec
call
inc
icebp
pop
sub
ficoms
stos
jmp
bound
popa
pop
dec
dec
inc
imul
rcr
not
arpl
push
dec
sub
ret
xlat
fwait
enter
or
sub
stos
nop
inc
jnp
jno
jne
negb
fidivl
and
mov
dec
push
inc
out
in
loope
dec
std
or
int3
or
aaa
xor
mov
in
push
sbb
pop
imull
mov
cmpsl
dec
mov
int
mov
xor
dec
xor
jg
jns
pop
int
push
lret
cmp
mov
cmpsl
mov
mov
pop
mov
xchg
test
mov
push
loop
popa
jns
addl
cmc
mov
push
cmp
xchg
and
xchg
or
js
inc
jle
inc
les
or
jmp
ljmp
test
mov
addr16
rcll
jecxz
push
push
mov
inc
les
push
add
repz
xchg
movaps
gs
dec
cmpsl
xorb
test
ja
jp
movsl
jmp
ja
decl
in
ss
leave
dec
data16
cs
jecxz
sbb
or
add
cli
andb
pop
scas
push
jno
add
sbb
push
es
das
jo
sbbl
in
ljmp
test
popf
lahf
inc
jbe
sti
and
dec
movsb
and
iret
in
jle
adc
bound
xchg
insl
aam
repz
pop
xor
adc
and
mov
icebp
dec
pop
sbb
ss
mov
and
pusha
mov
in
faddl
or
mov
je
add
lcall
outsl
insl
imul
mov
test
pop
push
cltd
movsl
adc
mov
cld
cltd
cmp
add
xor
jge
aad
dec
jg,pn
out
xchg
push
arpl
inc
jno
das
jmp
jne
xor
rol
jmp
ss
loope
push
lret
adc
or
sbb
ss
mov
sub
cltd
jmp
jbe
sbb
ljmp
push
jp
mulb
xor
ficoml
mov
mov
scas
mov
push
mov
pop
insl
or
add
imul
outsl
xchg
pushf
mov
int
adc
cli
popa
push
pop
cmp
add
or
arpl
mov
inc
jmp
into
mov
bound
push
popf
mov
add
fwait
cmp
jne
dec
es
and
shl
sbb
mov
add
mov
dec
cli
and
mov
xchg
xlat
jo
cltd
push
mov
ljmp
inc
es
addb
inc
psubsw
add
xor
outsb
loop
out
fs
jo
and
lret
mov
and
cmp
in
inc
int
sbb
leave
sbb
in
cmp
dec
stos
cmp
cmp
sub
repz
push
popa
mov
mov
cmpsb
dec
mov
xlat
push
daa
push
sub
xchg
push
jbe
dec
mov
aad
mov
out
fmull
jae
mov
mov
sahf
xor
loopne
icebp
clc
inc
pusha
and
into
movb
jo
test
cmpsb
ret
mov
arpl
inc
push
xchg
vshufps
bound
add
loopne
sbb
loope
inc
and
addr16
cmp
aam
adc
sbb
dec
dec
adc
pop
lds
pop
fbld
mov
lahf
into
outsl
ja
or
cmp
or
or
mov
adc
xchg
loop
sub
gs
shlb
lcall
mov
mov
ss
adc
sbb
and
pop
cmp
lcall
xor
xor
sub
jo
mov
into
push
lods
or
jle
mov
inc
movsl
test
repnz
pop
xor
cmpsb
xchg
into
out
push
jg
push
lret
xchg
outsb
aam
mov
repnz
dec
cltd
and
cmc
sti
dec
test
shll
mov
add
xchg
addb
hlt
sbbl
adc
and
sarb
adc
daa
push
lret
jmp
or
adc
cmp
sub
mov
cs
pop
repnz
xor
clc
leave
cmpsl
mov
fiaddl
in
ds
push
push
pop
xchg
into
push
push
popf
pop
scas
stc
sub
bound
subb
aas
fstpl
sbb
ljmp
out
xorb
mov
inc
std
and
popf
jb
iret
cmp
fstpt
pop
xchg
inc
scas
and
icebp
xchg
add
lret
sbb
stos
mov
pop
fucom
mov
sub
mov
pusha
sbb
lret
mov
lahf
in
ds
xchg
push
push
lahf
and
dec
inc
cmpsb
push
add
adcl
ret
ja
xor
mov
popa
push
cmp
adc
call
push
xchg
jno
out
sbb
cmp
adc
mov
jle
imul
gs
pop
xor
push
ljmp
data16
lret
je
add
jp
pop
movsb
push
cli
pop
push
push
pop
cli
cmc
jb
adc
pop
mov
loope
leave
lds
sbb
xor
mov
cli
ja
jecxz
push
sbb
add
jecxz
xor
push
xor
shll
inc
pop
cmp
cmc
push
lahf
sahf
rcrb
mov
ds
ljmp
and
dec
pop
adc
movzbl
sub
dec
dec
adc
add
mov
popa
aas
cmp
fadds
mul
mov
arpl
arpl
in
sbb
pop
push
mov
pop
jg
stos
in
jmp
cs
mov
cmp
fwait
adc
pop
rcl
sub
cltd
sub
sarl
cmp
pop
add
test
adc
and
lret
add
inc
rolb
fisubrs
mov
dec
sub
inc
inc
subb
sub
cmc
sub
fdiv
fsubs
dec
jb
push
mov
adc
or
xor
rclb
insb
pop
lock
adc
leave
jge
mov
pusha
lcall
xor
inc
mov
insl
mov
outsl
hlt
in
xor
adc
popf
and
ss
insb
jae
mov
test
xchg
and
iret
mov
sti
xchg
mov
xchg
mov
push
je
lret
imul
loopne
repz
xor
and
fdiv
iret
xor
or
stc
inc
and
and
add
leave
rorb
or
stos
mov
cwtl
pop
sub
sti
imul
rcrl
imul
cs
lret
fsubrs
sub
sti
hlt
dec
xlat
or
xor
cmpsb
insl
sbb
sbb
fidivl
add
out
fsubl
pushf
adc
xor
cmpsb
pop
jns
cmp
pop
add
enter
inc
xchg
dec
xchg
repnz
cmc
adc
mov
outsb
imulb
cltd
cmpb
out
adc
outsl
mov
daa
hlt
mov
shrb
movsb
pop
mov
xchg
push
popf
jl
xchg
dec
ret
movsl
push
ljmp
cmp
fistpll
adc
mov
add
mov
loop
call
dec
or
shrl
add
add
mov
and
sbb
xchg
idiv
cmpxchg
addr16
pop
mov
mov
imul
mov
fwait
das
sti
mov
gs
addr16
fcmovne
inc
shlb
sarl
pop
popf
sub
shrb
dec
jp
sub
into
sub
loopne
xor
mov
jno
iret
add
rorl
pop
icebp
xchg
fs
dec
push
xchg
jne
lods
inc
push
fsubrp
jmp
loopne
xchg
movsb
out
pop
cmpsb
jae
inc
xorl
gs
cmp
aaa
or
sub
andb
stos
add
repnz
push
insl
int
mov
ret
gs
sbb
lcall
push
add
push
or
xlat
test
pop
popa
and
xchg
dec
sbb
cmpsb
adc
fsts
adc
mov
popl
mov
loopne
or
sub
nop
aad
cmp
rcl
adc
fs
cmp
mov
test
cmp
lods
pop
jo
push
sub
and
aaa
adcl
ds
cmp
mov
mov
ljmp
popf
test
xchg
push
mov
push
mov
out
push
inc
nop
dec
test
and
aam
add
mov
out
fidivrl
or
jp
xor
int
fldl2e
jne
in
fcoml
or
and
shrl
nop
mov
pop
and
xor
add
mov
mov
cmpsl
xor
lea
adc
jo
jb
inc
push
pushaw
repnz
in
cmpsb
jmp
incb
xchg
inc
xchg
sub
push
adc
inc
data16
cltd
jb
xor
aam
cmp
mov
stos
mov
sbb
push
xchg
insl
push
pusha
rorb
fisttpll
sbb
push
inc
ret
aad
ds
stos
icebp
testl
lret
mov
or
and
cs
push
neg
dec
xchg
dec
fldl
xor
pop
hlt
xchg
mov
in
mov
add
popf
push
xchg
mov
jne
push
imul
es
and
int
int3
sbb
pop
sbb
nop
aam
dec
mov
in
xchg
jbe
test
or
aad
das
daa
or
jge
in
popf
aad
xor
mov
mov
add
push
cmp
aas
mov
stc
add
xor
popa
pop
add
lods
lahf
and
jmp
xchg
jbe
jmp
pop
hlt
test
jge
inc
cmp
popf
push
mov
fisttps
jg
mov
dec
aam
add
sbb
dec
adc
pop
sbb
xor
jp
or
mov
sbb
xor
aaa
cmp
add
mov
pop
mov
xor
xchg
pop
mov
xor
loop
inc
add
dec
inc
mov
dec
in
pop
js
out
test
test
ret
idivb
add
xchg
jns
subb
shrl
loopne
test
and
and
cmp
and
rclb
fcoms
aas
out
jae
out
ja
and
stos
adc
ror
push
lds
aaa
jb
sub
or
mov
mov
jmp
dec
xorl
lcall
clc
inc
inc
out
xchg
fisubrl
and
pushf
aas
xchg
adc
cmp
neg
aas
dec
call
fists
xlat
inc
xor
inc
ret
jmp
fs
jno
outsl
adc
pop
rdpmc
ror
mov
dec
test
aam
jmp
out
orb
arpl
pop
xchg
icebp
fadds
bound
rcll
lcall
repz
sbb
stos
sub
sub
jno
adc
sbb
and
lock
aas
push
push
or
hlt
mov
or
jae
ret
int3
push
dec
jb
xchg
sarb
dec
fs
jmp
add
aam
pushf
sub
ret
push
mov
divb
mov
or
pop
pushf
mov
xchg
in
xlat
adc
outsl
bound
jnp
dec
js
and
imul
sub
std
push
and
mov
cmp
xchg
stc
xor
dec
pop
dec
inc
das
pop
inc
pop
xchg
scas
outsl
loope
sbb
outsb
pop
pusha
jp
dec
adc
test
xor
in
xchg
cli
jge
sbb
inc
into
pop
mov
in
clc
popf
stos
add
lods
pop
mov
sub
int3
xchg
jmp
xor
and
sub
mov
into
add
jno
rclb
lds
mov
push
push
xchg
loop
inc
xor
popa
lds
sbb
cmp
daa
outsb
mov
xchg
into
fsubl
pop
mov
pusha
pop
mov
mov
push
or
pavgb
fnsetpm(287
xor
imul
mov
out
jg
push
fildll
popf
pop
repnz
test
jae
pop
mov
dec
sub
mov
jg
fisubrl
cs
lret
into
push
icebp
enter
pop
xorl
aad
pop
cmc
or
gs
ljmp
dec
mov
repnz
xchg
in
pop
enter
and
sub
inc
ficompl
rolb
arpl
xor
and
test
cltd
lds
pop
mov
push
das
jmp
shlb
pop
dec
push
pop
xor
fisubl
flds
fstpl
push
int3
xor
xor
or
dec
out
cltd
and
xor
fnstcw
sbb
sub
in
sbb
fsubrs
pop
dec
mov
xor
xchg
xchg
fmull
xchg
jg
dec
adc
xchg
enter
xchg
inc
xor
jno
movsb
in
lods
cltd
and
sbb
cs
cmp
add
xchg
pop
xchg
mov
dec
xchg
das
popa
sbb
xchg
bound
lods
and
iret
sbb
mov
repnz
xchg
es
clc
das
mov
add
movq
fadd
cmp
outsl
std
jb
push
nop
int3
into
rcrb
negb
jae
rcr
xor
mov
adc
test
sub
pop
jge
popa
out
into
test
xor
shlb
cmpsl
shll
ret
mov
push
sub
popf
hlt
pop
fdivl
outsl
test
shrl
cmpsb
adc
sahf
mov
sub
aam
inc
ret
and
add
mov
sbb
and
jp
aam
nop
fs
inc
xchg
xchg
cmp
imul
fnstenv
pop
jae
pop
adc
push
mov
mov
xchg
out
cmp
inc
inc
iret
sbb
xorb
jb
and
mov
inc
xor
lock
and
sub
mov
sahf
dec
pop
fcompl
data16
pop
xchg
ret
sub
out
je
mov
xchg
xchg
test
dec
gs
sub
ljmp
xchg
gs
sub
shlb
inc
pop
mov
loop
lods
hlt
dec
push
loop
or
jns
lock
lret
cmc
inc
hlt
test
scas
add
cmp
adc
or
pop
mov
push
push
in
or
and
jb
cwtl
sbb
push
mov
jge
xchg
imul
mov
inc
outsl
das
or
stos
add
xchg
jb
push
mov
adc
adc
add
dec
sbb
sbb
call
inc
addr16
pop
pop
cmp
ja
out
lahf
inc
out
xchg
xor
jle
and
cmpsl
push
inc
inc
jecxz
mov
sbb
arpl
jmp
sub
xor
ret
or
lea
cmovnp
pop
and
sbb
fiaddl
jns
xor
inc
mov
cld
out
fldenv
and
mulb
push
dec
stc
sub
std
je,pn
add
ja
scas
popa
sbbl
inc
mov
push
sbb
jno
dec
xchg
jne
push
xchg
js
cmp
xor
fadd
addr16
cltd
dec
test
xor
or
add
adc
les
pop
call
adc
jl
jl
lds
jecxz
sub
lock
scas
popf
inc
xor
add
and
negb
jmp
out
hlt
movsl
out
push
inc
adc
jge
mov
or
pop
popf
out
and
in
pop
xchg
sub
mov
shlb
repnz
ds
cmp
xor
sbb
adc
repz
jb
int3
inc
pop
mov
cltd
iret
shll
ret
adc
movsl
fidivl
lret
mov
xor
insb
sbb
xor
imul
cmp
lcall
and
lock
sbb
iret
mov
push
sub
xor
push
les
call
mov
in
and
or
mov
cwtl
add
jl
adc
idivb
xchg
adc
adc
pop
cmc
jb
dec
jmp
mov
scas
add
pop
push
rcrb
dec
jg
push
mov
xor
mov
inc
jmp
sbb
lea
jns
sub
imul
cmc
jp
and
cmc
add
push
xchg
pushf
and
rolb
xchg
dec
cmp
inc
or
push
test
subl
sub
and
add
loop
pop
fcmovnb
jmp
xor
iret
mov
jb
add
xor
sti
cmp
or
mov
xor
add
rol
xor
mov
aam
push
dec
loopne
jmp
ret
rcll
out
enter
jno
push
aam
cmp
insl
and
movsl
pop
cld
shlb
shl
sbb
xor
jns
mov
or
xor
xchg
push
push
cld
in
or
mov
lock
sahf
dec
cmp
jno
mov
popa
push
push
jne
sarb
outsb
xor
push
push
jl
xchg
jp
sbbl
jno
jae
push
push
orb
aaa
push
mov
roll
cmp
mov
pminsw
lret
out
push
adc
imul
dec
mov
xchg
scas
jne
jecxz
out
mov
pop
jecxz
xchg
rcll
dec
dec
notb
lea
popf
sub
mov
shl
fdivrp
rorl
sbb
stc
push
outsb
push
int
popa
adc
icebp
mov
lahf
pop
add
dec
mov
xchg
repnz
mov
mov
inc
mov
rol
xor
jp
loope
inc
push
jge
and
mov
xchg
adc
test
pushf
or
xor
fstps
and
mov
and
repnz
jne
adc
xchg
int
add
mov
dec
jnp
adc
and
jno
fists
xchg
outsb
jecxz
cmp
popa
ret
mov
xor
cmp
xchg
clc
loope
jecxz
out
pop
xchg
xchg
mov
xor
fimull
fwait
xchg
dec
inc
cld
mov
jg
icebp
test
xchg
xchg
out
sbb
xor
stc
insl
fisubrs
lahf
ds
addr16
js
imul
mov
jo
xchg
imul
das
sub
ret
cmp
push
stos
adc
int3
imul
mov
mov
dec
jb
les
scas
xor
imul
gs
loopne
xlat
xchg
in
or
sti
and
sub
push
xor
xor
xchg
adc
mov
jns
pushf
push
dec
pop
push
scas
outsl
stos
in
dec
ljmp
lock
or
inc
add
jg
xchg
and
xor
adc
xor
cmp
cmp
inc
pop
call
adc
mov
push
xchg
dec
mov
rclb
scas
lcall
int
mov
in
cmc
sbb
push
jle
out
out
xor
push
bound
jb
loopne
out
js
and
sbb
enter
movsl
or
jmp
or
xchg
inc
mov
lcall
cmp
fsubl
xchg
test
and
mov
jp
sbb
xor
std
in
rol
das
pop
push
mov
xor
add
jmp
stos
adc
pop
pop
dec
mov
cli
or
sub
mov
mov
ljmp
inc
pushf
jg
out
frstor
mov
shl
aad
and
ljmp
loope
test
cmpsl
in
push
xchg
movsl
cmpsb
imul
push
das
loop
xor
push
mov
imul
mov
xor
or
xchg
aaa
push
sub
pop
fwait
add
cltd
xchg
jb
lret
pusha
push
and
adcb
leave
inc
imul
popf
fbld
addl
sbb
and
sub
scas
pop
dec
into
add
dec
lret
lcall
rclb
sub
in
repz
movsl
cmpsb
in
pop
jmp
adc
mov
push
jbe
or
ss
sbb
mov
xchg
in
out
pop
push
clc
sub
scas
adc
mov
stc
mov
jmp
xchg
lods
ss
std
outsl
add
jb
mov
dec
lret
or
sub
dec
sarl
pop
push
pop
loop
push
add
out
shrl
test
cmpsb
je
mov
push
imul
sar
inc
ficompl
insl
cmp
popa
cmp
bound
popa
pop
outsb
mov
mov
outsb
mov
das
inc
cmp
int
es
dec
cmpsl
dec
lods
fs
mov
enter
es
ret
sub
adc
clc
pusha
sub
arpl
mov
push
or
out
add
cmp
or
push
std
call
aas
fnstsw
in
cld
sub
push
es
dec
cmp
mov
xchg
mov
into
loop
mov
lret
hlt
sbb
push
mov
or
and
sub
inc
test
stos
cmp
fisttpll
ficoml
movsb
inc
mov
daa
sub
or
clc
fsts
clc
cltd
mov
fwait
nop
sbb
mov
cli
mov
lods
push
in
ss
xchg
add
cmp
sbb
push
out
xor
mov
cmpsl
ljmp
mov
jl
daa
roll
iret
push
jo
cmp
jp
xor
mov
inc
subb
mov
lock
sub
sbb
imul
stc
fadds
pop
fwait
stc
scas
push
es
xchg
cmp
ds
sarb
push
je
inc
icebp
sahf
xchg
sub
jp
mov
xchg
addr16
mov
stc
add
xchg
add
fs
imul
mov
or
ds
push
js
mov
das
inc
mov
imul
push
mov
jmp
or
loope
rcll
mov
add
or
and
or
in
inc
mov
add
push
aad
enter
xor
inc
sbb
sub
mov
mov
loop
xchg
outsb
jl
gs
mov
jae
push
and
int
sub
iret
loope
dec
enter
and
lcall
inc
xchg
push
inc
xlat
iret
mov
sbb
pop
jp
and
cltd
dec
ljmp
lea
mov
test
sbb
shl
sbb
out
ss
inc
push
fs
xchg
sub
add
dec
ds
sub
testb
mov
xor
jmp
sub
xor
jae
push
jecxz
pop
sbb
adc
sub
das
shl
jne
into
pop
jnp
xor
mov
sbb
rcll
les
sahf
mov
ss
lds
sub
mov
xchg
mov
fidivrs
addr16
add
xorl
shl
jl
imul
sarb
nop
cmpsl
iret
ret
loop
cmp
aas
decl
mov
mov
dec
xor
xor
dec
cmp
xchg
outsl
xor
cmp
sti
mov
inc
shll
in
cli
ljmp
fcmovb
sub
arpl
jne
sahf
loope
mov
lcall
pushf
cmp
testl
into
shr
std
xlat
push
sbb
ret
fistl
stc
lea
add
push
mov
scas
outsb
and
pop
dec
std
das
cmp
addl
jo
aad
bound
clc
es
inc
mull
add
push
popa
push
jmp
sbb
cli
push
mov
sarb
xchg
outsl
or
pop
and
cmp
repnz
movsb
xchg
xlat
sub
pop
pop
aad
addr16
jmp
mov
cmpb
pop
xchg
arpl
rolb
or
dec
sar
ss
les
lods
xchg
mov
pop
sub
jmp
dec
lret
xor
pop
or
add
mov
js
cmp
lret
cmc
push
xor
int3
sti
repz
cmc
test
mov
cli
addr16
out
inc
and
daa
push
inc
je
xchg
sbb
adc
clc
mov
pop
dec
push
imul
jg
into
loop
adc
jl
mov
test
pop
gs
loope
loop
xchg
add
dec
aaa
sbb
mov
ret
ljmp
fidivrs
sub
fs
xchg
cmpsb
push
pusha
mov
mov
inc
imul
pop
cmp
dec
nop
mov
jbe
ret
rolb
cli
xor
xor
inc
jecxz
sbb
mov
add
into
test
mov
mov
dec
cmp
out
mov
adc
cs
jbe
rsm
popf
adc
add
outsb
ljmp
out
std
jmp
rol
repz
jne
jecxz
addr16
jl
icebp
cmc
or
in
or
jns
aas
fldcw
dec
fstpl
xor
mov
adc
mov
rcll
lcall
xchg
push
sub
xchg
arpl
cs
jmp
dec
in
add
flds
int3
dec
out
stos
movsl
je
xor
mov
push
xchg
push
mov
dec
je
les
jl
push
ljmp
inc
dec
int
sub
jmp
roll
add
lods
ds
inc
pop
sub
cmp
xchg
ss
fdivrl
repnz
out
out
sub
mov
cs
mov
icebp
push
pusha
pop
pop
mov
pop
pop
adc
add
inc
xchg
xor
loop,pn
cwtl
shrl
inc
shrb
push
xchg
mov
ret
or
mov
add
repz
aas
inc
xor
dec
test
movsb
pop
mov
in
pop
fistl
add
daa
xor
cs
xchg
push
pop
and
xchg
ret
sbb
pop
sbb
sti
mov
es
mov
sub
arpl
pop
mov
cmp
xchg
push
jno
adc
aad
stos
cmp
dec
outsl
inc
loop
or
mov
shrb
loope
dec
push
adc
xor
cld
mov
std
mov
adc
int
iret
gs
call
rcll
movb
pop
mov
out
jmp
jno
clc
daa
mov
pop
out
lods
jb
cmp
push
dec
movsl
cmp
inc
adc
bound
std
nop
pushf
or
mov
gs
cld
mov
push
push
mov
js
ds
sub
in
sbb
sub
cmp
ja
push
xchg
and
test
pop
cmpsl
mov
dec
aaa
pushf
xchg
or
sti
sub
mov
test
iret
sbb
dec
jg
xor
aaa
loop
adc
addr16
jns
jbe
scas
inc
int3
cmpsl
lods
mov
inc
dec
dec
xlat
mov
push
mov
adc
pop
push
shl
aas
rol
mov
lds
pop
adc
lds
inc
xor
inc
jmp
sti
add
aas
xchg
roll
rcll
inc
stos
xlat
sub
lods
pop
or
shr
outsb
adc
mov
bound
sbb
mov
inc
mov
icebp
lds
test
push
or
shlb
bound
xchg
scas
push
lret
std
cmp
dec
push
push
mov
mov
or
sub
or
ret
and
fdiv
imul
ljmp
fwait
js
xchg
jbe
mov
leave
ss
mov
addr16
mov
in
sbb
xchg
mov
test
lods
push
dec
outsl
mov
scas
rolb
cwtl
cmpsl
inc
and
pusha
push
lds
cmpsb
daa
out
scas
out
or
ljmp
lds
test
mul
movl
loop
jp
out
arpl
les
cmc
in
cmp
lock
xchg
jmp
lret
mov
dec
cmpsb
jbe
and
push
dec
pop
stos
in
xor
push
rcrl
and
xor
push
mov
mov
mov
pop
and
sub
xchg
push
cmp
fnsave
repz
mov
pushf
push
jns
push
push
iret
adc
stos
jno
imul
test
mov
push
push
mov
stos
ljmp
adc
or
add
xchg
loopne
cs
dec
lods
xchg
mov
scas
and
in
sti
sahf
mov
or
imul
sub
mov
cwtl
cltd
dec
mov
dec
dec
arpl
cmp
sbb
or
jmp
jecxz
mov
insl
repz
mov
cmp
rcll
notb
push
scas
cmp
pop
and
adc
mov
xor
xchg
mov
cs
clc
inc
xor
add
xlat
lods
pop
inc
std
das
pop
daa
and
stos
loopne
aas
or
mov
das
sbb
jbe
mov
mov
pop
sahf
xchg
push
mov
aam
add
popa
sub
out
gs
insb
cmc
jp
dec
inc
push
xor
push
pop
push
sub
popa
push
xchg
cmc
xorl
jle
adc
adc
cmpb
push
data16
in
xchg
dec
data16
loope
pop
sub
pop
mov
fdivrs
xchg
repnz
jge
sub
xchg
pushf
lock
nop
pop
dec
and
mov
scas
sbb
and
jne
xchg
mov
mov
dec
push
mov
arpl
cmp
sbb
adc
addb
mov
mov
fldl
ret
dec
xchg
sub
or
stos
fnsave
lea
xor
xchg
bound
or
cmp
or
xlat
stos
and
lea
aaa
jb
jae
xor
sub
loope
shlb
testl
imul
xchg
mov
mov
cmp
aam
negl
adc
arpl
sbb
and
fsub
adc
xchg
aas
add
xchg
mov
pop
outsb
lods
sbb
xor
dec
movb
xchg
mov
imul
mov
lock
push
mov
mov
mov
mov
popa
adcl
sti
ds
mov
push
repz
fisubl
mov
dec
fadds
add
pop
dec
xchg
cld
xchg
ss
pop
inc
jl
insl
out
jg
xlat
cli
sbb
xor
adc
in
xchg
orb
rcr
lcall
sub
add
pop
out
das
push
adc
sub
pop
add
movsl
push
loop
mov
and
ficoml
push
cmp
lcall
test
jbe
dec
icebp
jp
std
lock
and
loop
loop
mov
addr16
fisubs
rclb
out
adc
aaa
push
adc
pushf
push
es
xchg
mul
movsb
mov
adc
push
movb
popf
ljmp
fs
xchg
sbb
test
aas
and
mov
xchg
pop
loop
jle
clc
mov
cmpsl
inc
std
add
movsb
push
in
adc
add
test
ret
inc
orl
in
into
sahf
mov
cld
lds
jmp
jo
and
fadds
cmp
out
and
and
cmp
sbb
push
jl
int
cli
lahf
pop
add
fiaddl
jecxz
aas
jb
jae
mov
add
adc
pop
inc
ret
clc
xor
addr16
ficoml
xchg
sub
sbb
shrb
jns
adc
in
dec
pusha
aad
pushf
lahf
out
leave
xlat
dec
push
stos
add
xlat
leave
dec
ja
fwait
dec
mov
lds
push
mov
jae
pusha
mov
xor
les
mov
xor
xchg
iret
cmp
rorb
mov
loop
jmp
addr16
mov
iret
push
mov
xchg
adc
dec
out
jecxz
xchg
out
and
pop
cmp
arpl
mov
into
or
xchg
adc
push
push
in
jmp
and
mov
loope
lcall
mov
addr16
adc
sbb
rolb
fstp
cmpsb
in
jp
jge
cs
fnstcw
enter
jmp
or
or
jg
push
cmc
xchg
sbb
and
lds
push
clc
add
sub
loope
dec
ljmp
inc
push
mov
mov
repnz
popf
stos
inc
sbb
sahf
and
shll
inc
stc
pop
adc
sbb
fs
push
andb
jae
push
lret
fcompl
push
mov
repnz
das
ret
das
repnz
imul
loop
shl
cmp
dec
inc
dec
popf
roll
out
jb
repnz
xor
sub
out
xorl
jb
jg
lods
mov
push
pop
jae
out
call
imul
repnz
cmp
add
and
and
mov
aad
mov
mov
in
pusha
xor
mov
dec
inc
call
shl
inc
in
sub
arpl
push
inc
and
orl
int3
mov
push
lds
outsl
lcall
in
mov
lcall
loop
int
xchg
jmp
adc
adc
xchg
xchg
dec
jo
outsb
arpl
cltd
and
clc
test
mov
neg
and
lret
adc
dec
xchg
xchg
sahf
mov
adc
sub
dec
jns
push
jp
sti
jle
or
test
push
sub
cmpl
ret
sub
mull
cld
push
test
or
aas
push
or
jle
mov
xchg
pop
cmpsl
sbb
idivb
mov
in
cmp
popf
cld
decb
xor
out
out
stos
pop
lods
xchg
push
popf
adc
je
test
mov
pop
xchg
push
fbstp
sub
lds
pop
repz
stos
sub
xchg
sbb
push
adc
aaa
xchg
adc
inc
mov
adc
hlt
mov
fmuls
out
movsl
jmp
jmp
js
sbb
push
dec
aas
and
mov
sarl
mov
sbb
inc
leave
sub
negb
mov
inc
jmp
jno
imul
out
add
xor
jge
cs
dec
div
fadds
adc
shr
inc
in
popa
inc
inc
mov
inc
daa
adc
or
push
orb
ds
cmp
jecxz
ret
push
jno
scas
test
inc
imul
add
adc
pop
insl
push
fmull
push
movsl
in
inc
mov
cmpsb
mov
fiaddl
cmp
outsl
pop
inc
sbbb
or
leave
cmp
out
inc
and
mulb
hlt
hlt
lods
fistpll
dec
pop
mov
sub
inc
mov
or
inc
or
je
mov
into
cmc
add
icebp
movsb
shrl
in
shll
into
popf
push
ja
and
jp
inc
lock
in
pop
xchg
add
mov
push
jle
sub
push
repz
mov
daa
std
loope
ret
imul
sub
or
adc
mov
outsl
in
jmp
addb
loopne
movups
imul
repz
enter
pop
mov
mov
mov
push
xchg
add
int3
fistpl
jecxz
or
ljmp
mov
stos
lret
sub
lret
push
test
pop
jge
and
fwait
mov
pop
cmp
loope
inc
pushf
fadds
ja
cli
pop
inc
aaa
lods
addr16
arpl
test
push
cmpsl
lods
int3
test
inc
mov
mov
shlb
sbb
loope
adc
mov
lock
ret
std
push
out
dec
popf
loop
popa
std
imul
jge
es
inc
xor
pop
das
sub
xchg
fmulp
int3
fisubs
orl
fstps
jae
std
pop
add
or
push
enter
sub
bnd
ja
or
dec
add
inc
sbb
icebp
call
in
fwait
imul
negb
and
sbb
add
dec
inc
fwait
ret
xchg
lcall
inc
inc
loop
or
xor
ljmp
jns
xchg
std
sub
sbb
and
cltd
mov
pop
and
add
in
repnz
or
gs
fdivrp
loopne
repz
jecxz
dec
ret
lock
out
mov
fadds
mov
or
ret
imul
lret
or
sti
jp
sbb
repz
test
xchg
rorl
inc
in
xchg
jecxz
out
xor
push
ljmp
shlb
xor
sbb
and
decb
dec
and
mov
push
imul
sbb
adc
fs
push
push
adc
push
int3
mov
xor
xchg
push
jns
and
in
and
mov
aaa
movsl
repz
mov
jl
in
repz
cmp
test
mov
scas
stos
mov
push
aaa
jb
lea
sar
and
mov
rcrb
addb
ds
mov
or
aaa
xor
mov
push
cmc
popa
push
sti
sti
ficoml
shr
mov
andl
scas
call
dec
sbb
pop
and
jl
inc
sbb
jmp
pop
and
sub
rorb
add
mov
xor
mov
and
mov
int
andb
mov
xchg
aad
enter
cmpsl
stos
fs
xchg
loop
pusha
ljmp
xchg
xchg
in
sbb
pmaddwd
in
aas
fwait
enter
jmp
pop
pusha
cmp
in
xchg
mov
mov
or
outsl
jge
icebp
jmp
shr
mov
mov
xor
dec
push
mov
inc
adc
hlt
push
ret
outsb
outsb
sti
ljmp
test
in
ss
pop
pop
in
pop
data16
add
jg
loopne
push
int
lahf
es
sub
dec
add
sub
and
jg
loopne
push
std
dec
lahf
push
mov
cs
sbb
jge
push
cmp
sub
push
test
sub
xchg
adc
aas
outsb
push
dec
add
push
sub
push
mov
mov
mov
fucom
or
movsb
or
int3
stc
and
or
xor
cwtl
outsb
xchg
inc
sbb
pop
lret
sub
xchg
cmp
aas
mov
mov
mov
xor
es
addr16
mov
inc
test
lods
fisubrs
arpl
sbb
sbb
js
sbb
xchg
in
xchg
sbb
arpl
jmp
add
cmpsl
imul
stc
repz
mov
sub
adc
cmp
arpl
imul
cmpsb
sti
iret
testb
push
lds
sub
imul
and
mov
cmp
xchg
repnz
inc
push
rcrb
aam
inc
ret
push
rorb
scas
xchg
scas
ja
jo
ret
cld
test
push
ja
sbb
add
int
sub
sbb
int3
push
sub
shll
xchg
inc
jno
mov
test
adc
popf
popaw
xor
jne
dec
out
imul
std
mov
sbb
or
mov
dec
frstor
loop
mov
aad
dec
mov
dec
rolb
out
ds
push
sbb
sbb
push
ja
xchg
cltd
call
adc
xchg
or
and
arpl
rcl
mov
in
sub
and
xor
and
ds
mov
and
lahf
iret
lea
xor
xor
mov
jb
insb
ret
fldl
cld
in
adc
sub
addr16
fsubp
mov
dec
mov
cs
orb
gs
sbb
in
dec
mov
mov
sbb
fwait
mov
push
jmp
sti
fwait
mov
test
mov
push
sti
iret
fidivl
mov
dec
sub
popf
sbb
js
jp
lcall
les
jge
cli
mov
mov
push
pop
mov
adc
dec
cltd
xchg
outsb
inc
jp
adc
sub
or
arpl
jg
push
jecxz
fisttpl
mov
mulb
lcall
hlt
cld
push
arpl
ret
fstpl
mov
setbe
mov
push
inc
push
dec
adc
aam
xchg
js
jp
and
push
lds
pop
cli
idivl
cld
jp
xchg
aas
insl
iret
loop
aas
cmc
pop
push
jo
sub
sub
decl
scas
sub
rsqrtps
cs
das
lahf
cmp
push
fcmovbe
mov
push
push
adc
jge
cmp
mov
fldt
das
lret
cmp
pop
icebp
aaa
inc
pop
or
xchg
add
sti
add
dec
scas
lods
cmp
mov
jmp
das
xchg
dec
mov
pop
and
adc
imulb
or
xchg
push
fimull
jb
arpl
inc
jl
pop
outsl
pop
lret
out
int
aas
or
cmc
mov
inc
insl
sbb
push
iret
pop
inc
inc
mull
loope
dec
stos
es
or
push
adc
rcrb
and
cmc
sub
ret
pop
std
xchg
mov
pushf
fbstp
loopne
cpuid
jge
ljmp
ds
jg
test
pop
movsb
cmp
cmp
sbb
es
xor
inc
shll
mov
mov
js
pushf
int
sub
jmp
push
in
ljmp
xchg
add
iret
out
cwtl
or
sbb
vmwrite
push
in
aad
movsb
inc
or
lds
ss
pop
lock
push
push
lds
stc
xchg
dec
mov
sub
add
sbb
cld
xlat
mov
xchg
fs
xor
loope
in
test
mov
sub
pushf
jmp
push
pop
xchg
xchg
mov
out
dec
aad
imul
test
test
scas
jl
les
int
jecxz
lock
sub
push
mov
fistpl
rcrb
pop
aam
mov
sbb
xor
stos
rorb
enter
add
inc
js
sub
rorb
mov
outsl
mov
xchg
dec
push
cmp
in
lods
sbb
sub
popa
fs
xor
out
out
mov
mov
xchg
shlb
ds
cmp
mov
mov
push
repz
clc
stc
mov
fwait
dec
mov
movsl
push
lret
rorl
pop
xor
popa
dec
dec
jmp
cmpsl
movb
push
fadd
and
ljmp
sub
or
mov
out
nop
hlt
cmp
push
cli
add
pmaddwd
mov
cmpsb
nop
lcall
xchg
push
mov
pop
add
dec
bnd
sbb
ret
imul
inc
push
adc
sbb
mov
mov
adc
push
ljmp
addr16
xor
push
out
popa
data16
jns
and
push
aam
outsb
mov
sub
jb
aam
pop
leave
push
add
xchg
mov
aas
push
out
popf
test
pop
xchg
sub
push
or
pop
xchg
das
loopne
cmp
jnp
pusha
sub
lock
mov
mov
in
arpl
enter
sar
push
outsl
xor
dec
pushf
push
xlat
into
in
adc
jg
test
inc
into
imul
stos
inc
iret
es
insl
and
mov
sub
stc
ja
cltd
pop
mov
es
push
sbb
out
rorb
movsl
mov
inc
xchg
out
fdivl
std
inc
jmp
ljmp
inc
int3
pop
test
adc
in
nop
push
mov
sub
lahf
std
fidivl
cmp
or
das
sbb
pop
mov
arpl
ss
das
jnp
stc
mov
push
dec
jp
mov
fidivrs
sti
jle
dec
pushf
loopne
cmp
jle
inc
jmp
xchg
push
inc
and
loop
mov
sti
ret
xor
sbb
push
addr16
pop
cmp
and
add
cmp
loop
pop
sbb
and
cld
add
mov
jg
int3
test
inc
mov
es
and
js
sti
test
or
xchg
mov
sbb
popf
and
and
mov
insb
arpl
jle
aad
inc
xacquire
dec
leave
jmp
and
jmp
add
cmc
in
dec
add
aad
ret
mov
xor
mov
imul
jg
scas
xor
lods
in
addr16
lsl
outsb
nop
pop
adc
mov
lods
push
pop
addr16
aad
data16
xor
adc
pop
incb
push
ret
fnsave
mov
fxch
test
lds
insl
cmpsb
pop
xchg
xor
fcmove
and
dec
lods
xchg
pop
cmc
cld
mulb
cld
insl
movsl
xor
xor
pop
stos
test
mov
jbe
mov
movsb
xor
ljmp
jmp
push
dec
jb
rcll
out
or
fistpl
push
or
insl
sub
push
cmp
arpl
gs
pop
sbb
sbb
cmpsb
jo
ret
cli
cmp
fidivrs
imul
stc
push
xchg
outsl
cld
pusha
jbe
icebp
loop
out
xor
shlb
icebp
dec
inc
aas
mov
bnd
push
lock
pusha
movsl
je
popf
xchg
shll
flds
add
push
rcrb
mov
sub
mov
lret
adc
jne
psubq
repnz
rcrb
popf
loop
adc
jmp
sub
pushf
in
in
das
mov
pop
cmp
xchg
push
jo
cmpsl
roll
popa
es
repnz
xchg
jno
and
arpl
enter
cmp
inc
jmp
push
js
sbb
sbb
fnstenv
mov
shlb
int3
sub
or
jmp
push
shll
ret
inc
cmp
mov
ljmp
hlt
push
mov
fnstenv
mov
insl
or
or
rolb
nop
jle
cltd
jge
punpckhbw
scas
cmpsb
les
stc
loop
loopne
and
add
mov
and
and
sbb
aad
or
outsl
push
mov
inc
dec
nop
push
lcall
es
mov
xchg
std
out
sub
mov
imul
mov
mov
dec
cmp
jno
mulb
outsb
push
sub
cmc
aaa
mov
inc
outsb
push
adc
push
hlt
rcrb
clc
dec
xchg
xor
pop
icebp
scas
imull
mov
sub
cltd
push
cmpl
sub
outsb
dec
pop
adc
es
push
loop
fs
daa
imul
sbb
pop
decb
and
inc
xor
xchg
fsub
pop
cmp
dec
lods
xchg
jg
and
ljmp
and
imul
mov
addr16
and
sub
lret
das
sti
cwtl
mov
cmp
fs
daa
mov
aas
cs
ret
push
fldcw
je
sbb
aad
jnp
fidivs
popl
cld
sbb
push
or
pushl
lods
xchg
arpl
mov
push
addr16
icebp
ror
push
inc
push
imul
stos
xor
mov
pop
xchg
scas
out
sbb
cmp
xor
frstor
gs
sub
sahf
es
jmp
ja
dec
js
push
dec
imul
jp
fidivs
sbb
daa
jp
loop
daa
pop
into
ret
sbb
mov
sbb
adc
cmc
lret
mov
scas
ds
jbe
xorl
mov
adc
xchg
add
push
je
repz
lret
xchg
popa
xchg
loopne
push
push
into
lods
mov
cmp
adc
inc
mov
stc
xor
xor
es
ds
mov
pop
xor
mov
jp
das
pop
stos
fstp
cmpsl
mov
and
xor
cmp
mov
and
xchg
lahf
popa
cs
mov
daa
lods
sbb
inc
aaa
pop
push
repnz
xchg
les
xor
and
mov
lret
add
aas
outsb
dec
or
addr16
out
clc
outsb
sub
rcrl
adc
or
js
cmpb
testb
jbe
and
xor
cli
sbb
add
or
sub
inc
loop
and
ds
lds
sub
insb
aaa
hlt
dec
imul
pop
or
pop
lret
arpl
jnp
popa
or
cmp
dec
mov
mul
pop
in
lods
pop
inc
cmp
mov
mov
call
jb
and
push
aas
sub
cs
jle
and
das
xor
xor
lea
jmp
sbb
orb
pushf
in
lahf
adc
mov
or
sub
dec
mov
lds
es
test
and
imul
mov
xor
dec
fdivp
adc
push
lcall
adc
jns
cli
jge
sub
mov
inc
sbbl
inc
mov
add
enter
and
push
insb
inc
push
gs
lock
ss
shlb
inc
mov
cmp
xchg
mov
fwait
lcall
jns
scas
fmuls
fistps
xor
ficoml
lds
add
lret
lds
out
sbb
mov
add
cltd
inc
mov
int
add
push
iret
repz
dec
rolb
test
mov
cmc
or
jns
dec
jmp
bound
lds
mov
or
ja
mov
mov
xchg
ss
jecxz
mov
arpl
lds
test
xor
addr16
mov
sub
dec
cmp
and
outsl
inc
xchg
xorl
out
push
out
xor
push
mov
js
mov
and
fisubl
mov
lahf
xor
push
fs
lret
jne
ss
sbb
or
sbb
jmp
fstpl
or
and
sub
std
daa
leave
fsubr
sbb
call
sbb
xor
loope
fwait
loope
inc
xchg
subl
cmc
mov
adc
stos
mov
add
sbb
pusha
mov
adc
cmpb
fs
and
jno
movsl
cmp
mov
in
jge
xor
in
test
hlt
rol
pop
enter
in
fistl
mov
push
jae
add
js
xor
dec
test
test
stc
push
pop
mov
mov
out
out
les
loopne
movsb
mov
arpl
sub
xchg
pop
lods
shl
addl
ret
cmp
add
inc
shrw
push
jl
gs
int
ficoms
icebp
push
push
das
adc
jo
or
adc
sub
lock
sbb
bound
xchg
jns
bound
dec
subl
inc
or
adc
mov
sub
pop
mov
xchg
sbb
negb
testb
andb
xchg
scas
ret
push
jne
scas
iret
mov
icebp
out
adc
stos
test
lds
andl
sti
cmp
stc
test
mov
push
dec
dec
mov
pop
or
jns
and
mov
ljmp
jmp
sti
push
push
xor
cmpsl
cmp
out
aad
xor
stc
xchg
cmc
nop
data16
ja
sbb
cli
popa
jae
int
jg,pt
jno
loope
inc
les
in
dec
xor
adc
pop
call
jbe
push
and
nop
in
aad
cmp
fwait
pop
xlat
fldcw
mov
push
and
or
dec
mov
ds
and
push
mov
insl
insb
aam
stc
sti
cld
push
sahf
mov
pop
sub
out
ss
aad
push
inc
jae
cmpsl
lret
lret
fwait
pop
sub
mov
jns
jno
sbb
popa
push
push
mov
mov
xchg
dec
adc
inc
div
insl
pop
dec
sbb
xor
jge
js
repz
sub
adc
or
cmpsl
mov
daa
or
adc
sbb
cmp
into
es
jg
pop
iret
cli
fs
cmp
aaa
xchg
inc
pop
xor
dec
mov
and
push
sub
pop
rol
je
in
pop
xchg
outsl
enter
out
mov
repnz
push
mov
adc
cmp
cmp
sub
mov
jbe
jno
inc
jl
repnz
push
lods
fisttpll
repnz
xorb
jge
mov
test
rcr
add
xor
stc
jmp
add
xchg
mov
outsl
repnz
inc
lret
jo
shr
or
mov
inc
push
ja
inc
lahf
sti
mov
das
loop
pushf
add
mov
rep
dec
cmp
jae
ret
mov
and
mov
cmpsb
ja
or
shrb
nop
pop
pusha
fwait
rcl
stc
mov
sbb
out
fildl
cmpsb
aas
movsb
lea
out
jl
dec
cmp
into
mov
out
mov
pop
dec
xchg
dec
jmp
sub
mov
inc
fldt
dec
cmp
or
dec
shlb
icebp
add
in
sub
adc
cld
inc
sbb
pop
push
add
mov
cmp
dec
push
push
dec
inc
das
stc
outsl
jmp
cmp
aad
int3
lret
mov
xor
xor
movsl
in
dec
mov
mov
or
shl
xchg
or
mov
sbb
mov
jge
leave
js
andl
jns
je
mov
mov
xchg
lcall
jl
inc
cltd
push
movsl
inc
dec
repz
popa
xchg
sub
ret
cltd
shrl
icebp
cli
mov
pop
jo
push
jbe
rcrb
jns
add
add
mov
xor
and
sub
cwtl
inc
xchg
jno
pop
test
pop
int
rcl
xor
or
in
or
daa
and
scas
hlt
shl
in
pop
add
xchg
arpl
insl
clc
pusha
add
mov
in
cltd
mov
mov
add
rcrl
addb
fidivrs
adc
sub
int
add
in
into
xchg
push
inc
sub
aam
inc
arpl
outsb
push
jle
dec
cmpsl
and
sbb
dec
push
push
bound
cmpsl
push
aas
stc
xchg
inc
xchg
aas
test
rolb
cmp
cmp
push
pop
or
movl
jl
pop
test
push
push
mov
push
test
pushf
adc
jb
mov
rcll
cmpsb
cmc
pushf
push
push
xor
mov
jbe
mov
ds
sbb
sti
sub
pop
out
popa
ficomps
mul
add
dec
xchg
mov
xchg
pop
add
xchg
mov
dec
sub
out
cld
mov
ret
sbb
cmpsb
dec
arpl
clc
xchg
cmpsl
movsl
loope
sub
mov
and
insl
fistps
xchg
jae
mov
movsb
or
les
sbb
stos
fwait
inc
or
mov
cltd
loop
ror
es
outsl
add
insl
clc
fwait
mov
xor
push
pop
mov
mov
jns
je
lret
jnp
mov
shrl
sbb
in
sbb
mov
xchg
insb
adc
mov
cli
sbb
inc
xchg
mov
xor
test
or
lock
xchg
sbb
cmp
cmp
xchg
or
mov
testl
or
add
pop
dec
bound
lods
pop
pop
xchg
push
xchg
ret
testb
push
and
fdivrs
les
pop
jnp
sarl
sub
jge
dec
pop
das
and
jg
shrl
fcoms
ficomps
jmp
mov
xchg
fiadds
cmpsl
cmpsl
dec
or
in
inc
out
sbb
out
push
inc
push
mov
ljmp
in
inc
pop
rorl
push
lahf
and
es
mov
inc
xchg
fsts
imul
ljmp
mov
ds
jno
jmp
ret
test
addl
sbb
fwait
rol
into
xchg
xor
ljmp
cmp
push
loopne
shlb
lret
inc
loopne
push
sbb
call
push
repz
inc
dec
lea
cmp
or
inc
jne
ret
xlat
insb
add
fmul
xchg
adc
and
shl
rsm
dec
lods
mov
xor
scas
dec
ljmp
rorb
fwait
aaa
scas
xor
jecxz
push
imul
loop
enter
scas
jmp
xchg
ss
cmp
cmovo
inc
jae
out
icebp
lods
push
jo
mov
push
xchg
cmp
out
xchg
dec
jle
sbb
dec
fs
cmp
dec
stos
iret
inc
pop
ret
inc
xlat
xchg
int
je
jmp
mov
imul
stc
sbb
ret
aaa
lds
lret
inc
imul
cli
and
inc
sub
lods
lods
cmp
push
inc
jb
icebp
insl
push
adc
push
fwait
cmp
imul
jmp
pop
bound
sbb
pop
mov
aad
pop
push
mov
sub
rcr
or
out
nop
out
lcall
fistpll
cmp
dec
mov
sbb
xor
imul
push
sbb
mov
ljmp
push
std
js
mov
xchg
adc
jmp
mov
call
cmovae
cs
dec
cmpb
push
or
jmp
mov
repz
dec
adc
mov
sbb
add
popa
sti
add
sub
fsubs
scas
jb
lds
sub
mov
mov
subb
add
das
ret
or
mov
pop
mov
adc
cmp
pop
pop
mov
dec
sahf
stc
stos
lea
push
mov
sbb
add
sbb
es
mov
loope,pn
fadds
push
ret
dec
jg
mov
or
dec
dec
ljmp
dec
or
rorl
fmuls
repz
pop
adc
andl
lret
push
mov
or
mov
or
mov
mov
lods
testl
push
mov
out
lea
in
lret
xor
mov
sbb
std
lods
mov
xchg
bound
scas
fsubrl
aam
ds
adc
jb
mov
sbb
add
pop
lret
insb
daa
pop
xchg
scas
loopne
ret
or
pop
popa
mov
lret
into
test
dec
sub
fsubr
sub
mov
add
cmp
push
std
mov
sub
lret
mov
mov
push
jno
sbb
or
sbb
insl
cmp
data16
pusha
mov
jno
iret
pop
scas
and
dec
ljmp
fisubrs
mov
mov
mov
add
jbe
subb
jo
sbb
leave
and
movsl
push
add
dec
mov
and
push
lahf
push
decl
ljmp
stc
in
nop
mov
and
rep
push
ficoml
out
push
dec
inc
sbb
dec
jae
popa
negb
and
bound
shll
test
xchg
and
fildll
testl
fisttpl
dec
xor
cmpsl
sbb
push
mov
test
sub
test
stos
cli
in
int
dec
cmp
popf
loope
mov
aad
xor
test
add
sti
in
cmp
int
fistpl
loop
dec
mov
cmpl
mov
out
mov
mov
sub
stc
loopne
jnp
cmpsl
mov
mov
pop
dec
pop
adc
dec
fldenv
mov
data16
or
ret
fldt
aaa
rorb
ficoms
dec
dec
popa
pusha
movsl
sub
cmpsl
call
xchg
arpl
inc
or
dec
dec
push
mov
sbb
push
dec
cli
jle
outsb
pop
jbe
push
or
mov
inc
xor
popa
or
jp
sub
fdecstp
push
xchg
and
sub
pop
lret
inc
imul
sub
sub
cmc
or
cld
pusha
and
dec
shll
cli
push
pop
sub
ljmp
mov
add
adc
sbb
adc
pop
frstor
push
add
push
inc
adc
das
xor
stos
lods
aas
out
adc
dec
repz
lret
and
leave
pop
in
ljmp
imul
insl
mov
add
mov
mov
push
stos
fs
mov
push
mov
mov
pop
lret
sub
cli
or
mov
jmp
add
ret
fstl
test
mov
xor
sbb
jmp
stos
sub
cmpsb
push
loope
pop
mov
xchg
xchg
cmp
pop
push
xchg
pop
mov
out
xchg
out
frstor
xor
sti
mov
aas
lock
ljmp
leave
nop
out
push
xchg
insl
inc
mov
scas
fisubrl
pop
mov
add
xor
dec
pop
sub
mov
mov
lds
idiv
bound
sbb
iret
xchg
add
loop
out
movsl
dec
sbb
mov
add
push
pusha
enter
pop
outsl
mov
ljmp
or
ljmp
mov
notb
jle
cmp
push
sbb
sti
jecxz
push
xchg
stc
cmc
sbb
in
push
push
mov
mov
sbbb
incb
xchg
roll
imul
sbbb
mov
icebp
arpl
sub
out
push
out
jo
fnsave
push
scas
outsb
mov
lcall
pop
loop
aad
das
addr16
fisubs
enter
sbb
cmpsl
jmp
jge
xchg
mov
xchg
mov
and
repz
adc
subb
stos
clc
arpl
rcrl
stos
daa
mov
mov
lcall
icebp
add
fcomi
movsb
sbb
and
dec
jecxz
xchg
mov
sub
jl
fistpl
push
and
push
sub
clc
mov
mov
aad
xor
jae
test
xor
mov
xor
cmp
repnz
or
stos
insl
js
cmp
mov
orb
iret
les
stc
push
adc
cld
movsb
cmpb
lods
xorl
sub
icebp
insl
xor
xchg
sub
fidivrs
add
popa
cmc
fldt
mov
lock
dec
jno
sbbb
push
cmp
data16
fwait
pop
jnp
mov
shr
rorb
push
mov
sub
syscall
or
push
add
adc
das
mov
mov
stc
roll
insl
mov
ds
add
inc
gs
xlat
adc
je
mov
add
mov
repnz
inc
lods
fsubs
cmpl
pop
inc
adc
loop
mov
rcrl
incl
xchg
fildll
out
or
fbld
imul
mov
and
and
xchg
sbb
arpl
adc
xchg
push
inc
mov
pop
fdivrp
mov
ja
mov
mov
or
stos
sahf
nop
rcrb
pop
push
add
subl
mov
push
pop
xchg
rolb
jns
addr16
ds
dec
out
lods
cs
jbe
inc
sub
test
pop
xor
xchg
xchg
mov
push
mov
push
aam
mov
xchg
lahf
outsl
imul
mov
mov
in
ds
pop
fisubrl
movsl
push
push
out
or
mov
adc
call
lods
mov
cmc
aam
scas
jl
lods
mov
lret
dec
daa
jle
ret
icebp
aad
or
in
lahf
xor
addr16
enter
and
shrb
sub
shrl
jmp
outsl
fidivs
mov
call
mov
inc
adc
push
scas
scas
repz
mov
out
dec
bound
ljmp
sub
cmp
adc
mov
bound
or
mov
xchg
es
sbb
xor
push
and
dec
cs
bound
ret
xchg
int3
popa
outsl
xchg
es
push
pop
movsl
add
push
sbb
ss
icebp
push
push
add
add
insb
popf
movsl
mov
int
mov
in
push
xchg
mov
mov
ljmp
xchg
jmp
inc
xor
sbb
sub
pop
push
lock
aad
add
sbb
incl
aad
test
scas
int
cmp
fdivl
mov
test
insb
movsl
popa
sub
not
int3
lret
dec
lods
dec
fxch
mov
push
pop
sbb
push
push
aam
inc
fstps
xchg
and
cmp
nop
cmp
mov
push
imul
dec
test
xchg
das
cmpsb
lahf
movsl
div
mov
scas
test
mov
dec
lret
imull
pop
sub
dec
sti
jmp
repnz
jbe
decl
xor
xor
inc
jb
inc
mov
movsl
or
pop
sub
test
mov
cli
icebp
and
jne
adc
test
es
adc
mov
and
addb
loop
dec
add
icebp
lds
icebp
in
sbb
or
es
mov
push
add
notb
iret
shrl
fsubrs
stos
xor
sbb
scas
stos
add
subb
push
lcall
add
repz
lods
add
ja
cmpb
mov
insl
sub
je
add
ds
push
push
pusha
mov
inc
shrl
jnp
cli
jle
insb
and
mov
icebp
popa
rclb
pop
aaa
sub
rcll
or
inc
ret
pop
xchg
stos
sub
in
mov
jle
test
fnsave
mov
and
push
loopne
and
or
push
movsl
or
inc
xor
push
loop
bound
push
addps
push
xor
jnp
xchg
dec
xchg
mov
psrlw
jl
lret
sti
mov
jle
xor
icebp
fsubrs
sub
in
pushf
in
loopne
scas
or
pop
mov
mov
xor
iret
les
aas
or
jae
mov
mov
jle
in
pop
adc
out
sub
fldl
jp,pn
or
lcall
push
pop
mov
xchg
jae
and
jg
cmpsb
shlb
repnz
adc
mov
mov
cmpsl
subb
cli
aaa
adc
scas
mov
call
idivl
push
pop
xor
pushw
inc
ds
loop
scas
sub
and
dec
cs
cwtl
sub
mov
adc
inc
pusha
inc
lahf
mov
xchg
outsb
nop
mov
insb
push
std
and
push
inc
dec
stos
xchg
jle
cmc
rclb
jge
popa
mov
or
and
xorl
sti
push
mov
mov
lret
cmpsl
pop
dec
dec
lret
cli
inc
cmp
mov
lods
jnp,pt
js
jae
jne
xor
cmpsb
sbb
mov
hlt
dec
pop
cmp
out
rcrl
xor
xlat
ds
xor
iret
lahf
arpl
int3
sub
add
or
and
imul
roll
je
daa
and
jl
pop
push
popl
or
roll
cmp
clc
testb
sbb
or
fnsave
push
int
int3
and
leave
push
rolb
pop
adc
dec
addr16
fwait
test
or
les
ds
lds
out
pop
and
cld
xor
dec
bound
in
inc
sarl
push
in
aaa
bound
xchg
lock
call
push
xchg
aas
stc
dec
mov
subl
icebp
fstpl
shlb
into
mov
sbb
outsl
jns
push
xchg
mov
mov
les
push
or
mov
adc
mov
test
xchg
xchg
mov
in
cld
fwait
and
imul
xchg
insl
xchg
enter
sub
pop
pop
lahf
sbbl
xlat
repnz
and
test
scas
xor
or
pop
ret
dec
cmpsl
pmaxub
out
arpl
addr16
neg
cld
dec
outsl
dec
dec
xchg
aad
cmp
dec
add
jecxz
popl
movsl
push
dec
popa
mov
sbbb
lock
xor
out
aad
mov
mov
jnp
mov
in
movsb
arpl
cmpsl
fs
ret
dec
mov
cmpsb
add
add
dec
rolb
cmp
xchg
or
and
sbb
add
repz
inc
adc
insb
sbb
pop
cs
stc
in
jnp
sub
stc
xchg
cmp
jle
and
sbb
push
mov
outsb
loope
daa
xchg
xor
frstor
pop
cld
imul
lret
cmp
inc
sub
ja
sub
out
lods
repz
ljmp
bound
inc
cli
jecxz,pn
out
add
dec
inc
xlat
inc
ss
fbstp
adc
sub
call
push
jae
dec
adc
inc
ss
mov
dec
mov
data16
lods
xor
xchg
inc
notb
inc
jns
rorl
icebp
loope
mov
push
jns
movsb
in
loop
daa
cmp
add
mov
sbb
mov
xorb
aas
sbbb
movsl
cwtl
outsl
cmp
and
ffreep
fcom
sbb
out
jo
mov
push
out
fcomps
iret
insl
mov
cs
jb
cld
mov
lret
dec
and
mov
jo
and
sbb
jl
mov
mov
push
rcl
loopne
pop
xchg
and
dec
mov
call
les
jns
sub
gs
xchg
data16
jns
sbb
xchg
adc
or
inc
cmc
in
sub
fstl
inc
sbb
rclb
sbb
sarb
sub
mov
int
mov
adc
cmpl
add
cmpsl
leave
xchg
stos
into
xchg
loop
rolb
lahf
cmpsl
lcall
mov
add
push
pop
jae
sub
test
insl
mov
mov
dec
or
out
jle
pop
xor
or
add
push
jl
jno
push
inc
push
out
mov
nop
fnsave
out
mov
inc
repnz
sbb
mov
dec
push
daa
mov
jle
mov
call
cmc
mul
int3
dec
in
std
pxor
cmpl
lcall
xor
leave
mov
push
mov
xor
sbb
popf
xor
jmp
mov
das
cmp
in
ljmp
cmp
outsb
lahf
mov
jbe
add
xchg
push
mov
jmp
add
xor
and
or
add
xor
clc
loope
inc
shll
mov
int3
xor
and
sbb
mov
pop
lock
jns
subl
std
add
fisubrs
pop
push
add
in
addl
sbb
mov
mov
ficompl
inc
cmp
sti
sbbl
mov
jg
hlt
xor
push
xlat
outsb
mov
sbb
sbb
mov
lret
aaa
cmp
ljmp
mov
pop
jo
dec
jmp
out
pop
aas
cmpsl
jmp
test
cmp
popa
dec
mov
call
push
xchg
jp
adc
sub
fstpl
or
push
les
cmpsb
lea
jns
inc
mov
cli
mov
mov
dec
pop
ds
dec
outsb
push
sub
dec
xchg
iret
cmp
sahf
push
dec
pop
adc
sub
and
sbb
rcrl
cs
add
dec
pop
jns
lcall
fsubrl
std
loope
mov
add
testb
jge
movl
fimull
adc
push
jmp
out
lods
bound
or
outsb
adc
sbb
fistpl
push
mov
movsl
mov
rol
clc
push
xchg
lcall
into
push
pop
push
cmp
xlat
inc
push
pop
out
and
mov
out
insl
scas
push
or
jecxz
pop
dec
repnz
iret
lds
fprem1
stos
andb
xchg
xchg
sahf
dec
mov
and
insb
pop
rcl
mov
fwait
mov
das
and
and
out
mov
mov
mov
cmpsb
das
jg
xor
or
clc
xor
pop
test
jnp
into
and
mov
jbe
test
adc
xchg
ret
mulb
cmp
lods
cmc
mov
push
mov
or
out
mov
dec
inc
dec
into
or
jp
dec
fs
hlt
ret
lock
in
or
std
or
dec
or
int
pop
mov
mulb
cmp
sbb
xchg
xor
pop
ljmp
or
sbb
push
adc
insl
ds
xor
leave
mov
cmpsb
mov
test
sbb
jge
or
mov
fcmovnb
int3
add
iret
loop
mov
push
dec
andb
repz
jno
loop
loopne
mulb
cmp
lods
testb
mov
xor
mov
xor
lcall
jns
mov
mov
push
outsb
insb
push
addl
xor
cs
pushf
movsl
mov
sbb
mov
push
movsb
inc
popf
sti
adc
jno
cmpsl
mov
add
xor
mov
xorb
ds
arpl
imul
dec
add
ror
xor
or
inc
jge
cwtl
mov
or
or
inc
adc
into
arpl
ss
inc
ret
std
push
dec
stos
sbb
gs
test
sbb
shrb
inc
adc
push
cs
ljmp
cmpsb
inc
jns
add
fcomi
ljmp
cmpl
or
push
or
push
mov
ds
pop
pop
mov
lret
in
mov
ficoml
ss
jmp
fwait
sbbb
adc
icebp
push
hlt
ret
ret
push
cmp
xor
rep
push
call
pop
dec
ljmp
and
xor
inc
and
and
pop
std
and
sarl
stos
mov
lret
mov
std
ja
pop
xor
jne
sbb
sub
lods
lret
daa
and
insb
subl
bound
inc
adc
xchg
add
or
int3
pop
jno
jo
movsb
in
lret
test
loope
imul
pop
pop
pop
sbb
fidivs
jo
mov
sti
pop
subb
add
bound
loope
jne
push
or
ficomps
mov
or
xchg
arpl
xchg
out
adc
cmpsb
cmpsb
mov
fisubs
aam
adc
inc
push
sbb
xchg
fnsave
mov
ljmp
sub
add
add
cmp
push
stc
ja
icebp
aad
and
push
scas
rcrl
adc
jno
pop
mov
cmp
jl
pop
pinsrw
mov
add
xor
sahf
loop
fsubrl
or
mov
or
ja
ds
push
sbb
add
mov
sub
jp
ret
sbb
mov
popf
pop
push
sub
ja
mov
mov
cmp
adc
dec
cwtl
mov
lods
sbb
cmpsb
repnz
out
xchg
in
aad
or
mov
ja
xchg
mov
mov
mov
arpl
movl
shufps
push
imul
lahf
stos
jno
or
pop
sub
movsl
pop
inc
imul
push
jae
aad
sarb
mov
aas
popf
xchg
divl
mov
adc
rcr
pop
pusha
ret
in
xor
fmuls
dec
adc
testl
jl
js
mov
cld
sahf
in
movsl
pop
test
push
jl
ss
popf
mov
cmpb
sub
bnd
in
cmp
ret
jp
test
add
jmp
das
lahf
inc
cmp
and
je
ja
add
mov
enter
cmp
or
insl
loop
popf
mov
popf
sti
mov
cmp
mov
xchg
fdivrl
testl
jns
dec
mov
loope
cld
cwtl
mov
out
add
insl
cmc
inc
adc
das
fidivrs
les
mov
or
jg
or
cmc
ljmpw
inc
cmpsb
ljmp
mov
add
gs
leave
loope
ret
mov
push
hlt
aad
adc
int3
sbb
insl
ljmp
and
or
loop
xchg
xor
into
cmc
mov
inc
jge
mov
mov
mov
or
loopne
dec
cmc
loop
das
cmpsl
mov
mov
data16
inc
pop
stos
sahf
pop
xchg
fmulp
dec
lock
fstpt
push
arpl
push
repnz
sbb
lret
mov
sbb
cs
jns
inc
sub
loop
cmp
jmp
adcb
das
int
icebp
or
imul
mov
or
adc
jno
lcall
les
out
and
push
sbb
mov
cld
pop
mov
add
cmpb
ljmp
aad
adc
outsw
sti
in
sub
jecxz
xor
mov
js
mov
jl
cld
test
or
bound
xor
testb
mov
push
jl
insl
outsl
insl
jg
add
push
lret
les
popa
dec
es
cs
jno
sbbb
cmp
sbb
push
jmp
insb
pop
pop
int3
sbb
or
fistps
xor
xchg
adc
xchg
ss
xchg
test
fisttpll
dec
cmpb
cli
imul
das
sbb
push
bound
es
jg
lds
hlt
mov
imul
mov
push
mov
fs
lret
shrb
cmp
cmpsb
sbb
jns
std
in
xchg
in
loope
add
movsb
fwait
mov
jbe
xchg
fs
and
in
out
sub
dec
pop
loopne
adc
xor
sub
shrl
aad
mov
mov
inc
push
mov
inc
add
jnp
pop
inc
and
and
dec
cld
movsl
dec
inc
dec
mov
inc
dec
lods
rcll
rolb
in
stos
cmpsb
add
jne
pop
hlt
rorl
and
jnp
jge
repnz
mov
mov
aas
push
xor
mov
lahf
jecxz
frstor
or
pop
add
cs
das
ror
test
or
dec
xchg
dec
sub
into
mov
sub
cmp
mov
xor
cmp
mov
ret
push
xchg
sub
loop
jne
cmp
pop
push
into
int3
jmp
cwtl
xchg
jge
jge
mov
fcomps
loope
das
adc
lahf
ds
fs
jbe
clc
and
pop
pop
out
stos
mov
sbb
pop
dec
movsb
and
stos
xchg
or
ds
lret
es
out
insb
mov
dec
jbe
adc
and
out
dec
in
test
andb
xlat
jg
pusha
and
ficompl
or
mov
popf
jne
add
bound
rcrl
sub
jnp
pop
andb
cmp
mov
rorb
or
adc
loopne
insb
push
mov
pop
cmp
xchg
and
std
pop
pusha
push
mov
imul
jnp
or
dec
jp
nop
scas
jp
popa
mov
xlat
in
test
dec
mov
push
push
push
mov
mov
add
and
mov
fidivrl
mov
push
add
mov
ss
cs
inc
inc
inc
andb
adc
addr16
imul
into
lret
inc
pop
stos
or
pop
pusha
es
vdivps
dec
mov
mov
mov
mov
in
test
icebp
ds
mov
ret
ret
xchg
out
jns
lahf
mov
popa
sbb
or
int3
fcomi
sub
mov
test
mov
or
dec
cmc
lea
icebp
lods
pop
aad
hlt
sahf
mov
cs
mov
cltd
or
push
mov
pop
cmp
dec
ret
mov
xor
inc
lea
sub
arpl
pop
loop
cmp
jmp
mov
iret
cmp
jecxz
imul
rcrl
mov
jo
xor
out
mov
mov
jns
mov
insb
fdivrs
andb
cld
icebp
pop
pusha
daa
cmp
cli
push
push
cmp
dec
xor
and
fnstenv
mov
cld
xchg
pop
inc
mov
stos
sbb
xor
cmp
sub
mov
shll
adc
lods
test
popa
xchg
or
mulb
hlt
ret
sub
or
repz
call
mov
popa
xchg
sbbb
adc
icebp
mov
cmp
dec
arpl
push
ljmp
call
mov
adc
hlt
xchg
aaa
sbb
dec
imul
roll
xchg
sbbb
lea
adc
sub
inc
lods
js
mov
xchg
push
lods
ret
sub
pop
mov
mov
xlat
out
lea
mov
ret
push
stc
scas
mov
and
insl
mov
adc
enter
and
jno
jecxz
or
jg
or
addr16
mov
push
rolb
andw
inc
xor
push
idivl
jecxz
js
test
xchg
mov
xchg
mov
jae
push
mov
fs
into
mov
iret
insl
xlat
push
roll
aas
and
out
mov
out
xchg
hlt
sub
and
shrb
dec
mov
xor
adc
add
or
js
je
and
sti
inc
out
popf
inc
and
xchg
fdivrl
out
and
shrb
jge
imul
fcoml
loope
aaa
lock
shr
cmp
and
push
aad
and
jno
loop
or
jle
lods
popa
loop
pop
pop
aas
iret
sbb
fdivl
xchg
aaa
xchg
and
repnz
push
push
or
inc
push
push
mov
les
fisubl
iret
mov
pop
mov
push
adc
mov
push
test
fcmovu
je
andl
mov
jmp
xorl
std
lea
stc
xor
test
inc
lods
shll
inc
mov
in
pop
cmp
mov
mov
jge
jbe
arpl
insb
repnz
jns
inc
add
cwtl
loope
jne
dec
adc
pusha
fs
mov
imul
xchg
dec
inc
sbb
loope
gs
outsb
clc
nop
adc
inc
add
sub
sti
cmp
pushf
inc
scas
arpl
scas
jne
dec
shrb
scas
test
jg
pusha
jne
xor
cmpb
cli
push
bound
pop
out
dec
jbe
sbb
cmpsb
sbb
mov
inc
mov
xor
dec
inc
icebp
adc
cmp
jb
jmp
pusha
outsb
pusha
dec
mov
mov
lret
sub
mov
jnp
dec
iret
pop
push
in
and
add
sahf
inc
pop
sahf
mov
in
xor
cmp
out
lret
inc
mov
mov
fsub
popa
mov
popa
bound
stos
dec
sbb
std
cli
sub
mov
jmp
lea
xchg
or
das
mov
icebp
fistps
mov
pop
push
mov
in
jmp
push
clc
ret
inc
in
jb
push
ret
cld
dec
or
dec
pop
stc
inc
nop
orl
xchg
adc
adc
inc
sbb
xchg
sbb
xor
jo
cmp
insl
mov
push
xor
lret
paddusw
cs
fstl
cli
mov
orl
lea
xor
mov
mov
inc
mov
xchg
inc
je
xchg
inc
jbe
adc
cmpsl
cmpl
inc
xchg
mov
or
jne
jo
inc
push
fnstcw
es
adc
aas
sbb
xor
push
popa
ljmp
lods
loopne
inc
xor
mov
jns
adc
xchg
and
cmc
push
fwait
pushf
mov
jmp
cmp
stos
push
sbb
scas
incb
ret
dec
push
cwtl
inc
lret
inc
loop
test
xor
pop
into
jge
arpl
xchg
sub
pusha
insl
outsb
outsl
sahf
pop
mov
repz
push
xchg
sub
mov
stos
push
in
adc
out
leave
mov
ret
test
inc
ret
mov
sub
mov
mov
jno
jecxz
or
adc
data16
sub
fidivrl
dec
adcl
es
test
and
sub
jge
cmp
sbb
out
pop
add
test
int
cmp
std
insl
adc
es
mov
cmp
jmp
jg
pmullw
pop
inc
loope
loop
mov
inc
daa
hlt
ret
notl
jecxz
pop
aad
mov
dec
sar
or
jecxz
push
ds
rcll
add
cmc
xor
or
gs
or
aaa
adc
test
cs
xchg
jge
or
lds
and
dec
ret
inc
cmp
sbb
loope
in
test
loope
push
adc
jg
lods
arpl
sbb
mov
sbb
jae
inc
mov
mov
scas
xor
xor
xorl
shll
mov
fisubl
lds
subl
inc
shlb
pop
xlat
test
push
inc
sub
push
cmpb
fadds
cli
adc
mov
mov
inc
sarb
ret
sub
notl
cli
jne,pt
scas
push
xor
lods
fs
outsl
jnp
xor
pusha
pop
cmc
or
xchg
jecxz
or
jg
popa
pop
xchg
push
mov
mov
mov
push
add
cmpb
mov
inc
fcom
push
andb
mov
and
push
fisttpll
imul
or
lds
fnstenv
addl
mov
ss
dec
jb
or
sbb
and
ljmp
mov
pop
lret
pop
test
test
daa
pop
sbb
adc
add
btr
pop
or
out
xchg
int
xchg
inc
add
mov
call
mov
call
pop
adc
cmpsb
test
fisubrl
jle
jae
fwait
movsb
cmp
pop
scas
loope
jle
push
push
sub
shrb
pop
negl
xchg
jbe
jle
mov
jle
pop
je
std
out
xorb
push
dec
cmpsb
mov
ja
push
lret
adc
dec
aas
pusha
mov
lcall
ljmp
dec
mov
push
mov
jns
fidivl
sbb
mov
dec
dec
mov
adc
push
or
mov
sub
roll
rcll
subl
stos
pop
add
test
mov
insb
scas
repz
pop
jg
je
repz
addl
inc
js
aas
mov
callw
push
in
inc
push
xchg
xor
inc
adc
sub
sahf
lret
pusha
in
popa
bound
mov
push
andl
mov
cmc
sbb
ret
push
pop
mov
orl
xchg
popf
loop
or
cmovno
sahf
sbbb
popa
pusha
insl
movsb
jg
inc
sbb
xchg
subb
and
jbe
mov
int
xchg
inc
push
das
in
cld
mov
mov
xchg
pop
loop
mov
pushf
xchg
sbb
dec
addl
mov
insl
iret
testl
jo
inc
cli
cltd
sub
cmc
jbe
out
cs
xor
iret
ljmp
std
add
test
sub
movsb
rolb
sbb
fucomip
push
mov
test
pop
push
insl
sbb
mov
out
mov
sbb
push
aad
pop
inc
inc
fadd
jmp
sub
cltd
pop
mov
shlb
addb
cmc
or
cmc
or
lea
fstps
aad
fidivs
repz
push
mov
data16
orb
and
int3
aaa
es
fs
lret
ror
xor
jno
mov
movsb
out
mov
jl
jnp
xlat
mov
xor
sbb
sub
lahf
repz
add
dec
and
dec
mulb
cmp
pusha
mov
andl
cltd
mov
bound
cltd
or
ret
mov
sub
call
pop
fcompl
adc
cmpsb
shl
mov
adc
mov
dec
rol
sub
jmp
js
in
mov
icebp
pop
popl
fistpl
mov
push
outsb
repz
loop,pt
sub
arpl
ds
jae
push
xchg
mov
mov
repnz
xor
in
or
leave
es
and
xchg
loop,pt
or
lahf
inc
or
loopne
pop
jno
out
jmp
popa
mov
pop
push
movsb
test
jg
adc
popa
cmpsb
lock
push
mov
bound
push
adc
xchg
cld
lahf
clc
ds
add
xlat
sti
inc
sarb
or
sti
movsl
push
adc
pop
ficompl
pop
cld
in
pop
js
jl
lret
push
mov
xor
je
stos
aaa
jbe
or
cmp
out
movsl
xchg
xor
pop
xchg
cwtl
mov
xchg
cmp
push
pop
subb
mov
mov
aas
xor
aad
dec
inc
inc
fimuls
push
rorl
sti
das
mov
push
pop
mov
pusha
pop
cs
inc
lret
fcmovnbe
mov
or
orl
std
adc
mov
in
ret
lahf
push
lahf
out
pop
jns
dec
inc
mov
push
xchg
popf
lock
aaa
das
jl
gs
and
jo
mov
push
jecxz
sub
adc
rolb
stc
push
pop
and
rcrb
enter
out
es
loop
pop
mov
cmpsl
ja
xlat
xchg
cmp
fsubrl
xor
insl
ljmp
sbb
pop
mov
inc
pop
mov
loope
pushf
inc
cs
rorb
jns
data16
loope
mov
cli
sub
mov
add
ljmp
mov
adc
sbb
jmp
imul
arpl
repz
ds
scas
sar
sbb
es
faddl
outsb
popa
pop
xor
xchg
adcb
fsubrp
sub
xor
rcrb
aam
lcall
and
dec
fimull
jg
test
inc
push
add
aam
inc
add
cli
cmp
push
subb
mov
movsb
dec
negb
or
or
pop
out
clc
inc
popf
pop
inc
sarl
cmp
incl
in
mov
fwait
adc
or
scas
mov
out
imul
call
mov
mov
iret
inc
int3
xchg
add
std
rclb
push
mov
xlat
sub
pop
lea
pop
sbb
stc
push
jl
pushf
mov
fadds
push
aas
jg
pushl
sti
sub
ficomps
jge
mov
clc
or
scas
je
mov
in
or
push
test
mov
dec
adc
hlt
mov
fdivrl
arpl
cmp
lds
push
das
mov
je
roll
fucomi
xchg
pop
out
lods
mov
mov
pavgb
inc
add
push
orb
shll
dec
xor
mov
mov
repz
dec
pusha
into
enter
lock
sbb
loop
lcall
mov
popf
xchg
mov
add
push
mov
sub
pop
lret
xchg
imulb
lock
push
xchg
cmp
gs
inc
out
ret
push
xlat
stc
out
cmpsl
xchg
pushf
cli
aad
ficoms
pop
dec
in
xor
push
pop
sarb
xor
outsl
jbe
or
adc
das
js
jo
dec
mov
push
gs
in
loope
mov
push
cmp
mull
xor
sbb
cmp
inc
rcrl
aas
push
scas
add
push
ret
xchg
push
fists
inc
stos
lcall
ficompl
int
adc
int
imul
pop
lcall
ret
pop
sbb
das
loop
cld
adc
adc
mov
pusha
ret
pop
ficoms
or
xchg
sbb
aaa
leave
jecxz
xchg
mov
pop
bound
test
sbb
aaa
xor
xchg
je
sahf
xor
inc
add
sub
pushl
arpl
sbb
stc
jmp
xlat
aam
cmp
lock
push
xor
xchg
xor
scas
mov
das
aas
enter
pop
cs
push
mov
cli
sbb
into
jg
cwtl
dec
and
xchg
test
icebp
xor
jmp
iret
loopne
in
incb
cli
incl
mov
lret
in
mov
cmc
mov
adc
je
ds
es
xor
sbb
fs
or
std
sub
mov
cli
adcl
je
xor
jae
push
xor
mov
out
movsl
mov
std
inc
rorb
inc
lods
xchg
jne
aas
daa
std
xor
mov
lds
fimull
imul
and
lock
jp
push
mov
mov
aam
add
lret
pusha
push
pop
cwtl
jno
insl
inc
jno
cmp
enter
push
jmp
jecxz
mov
pop
adc
jno
or
mov
inc
xchg
xor
xchg
je,pn
sub
push
std
pop
lea
lret
push
mov
sub
inc
mov
jnp
cs
aas
mov
cli
sub
sub
ljmp
pop
xor
xor
pop
sbb
orb
lock
push
mov
xor
jo
es
sub
test
pushf
js
push
push
inc
jo
xor
or
add
push
jo
xor
jo
sar
addr16
push
adc
iret
lcall
xchg
cmc
add
add
test
inc
testb
dec
aam
testl
es
daa
iret
push
jecxz
dec
cmc
add
jns
test
cmc
lahf
mov
xchg
cli
jns
xchg
cmp
lods
lcall
or
add
mov
cmpsl
lock
and
mov
sub
fdivrs
arpl
setae
inc
dec
mov
out
ds
lret
imul
sbbb
mov
sub
and
add
push
push
lret
gs
mov
inc
cmpsb
add
leave
dec
enter
sub
fwait
test
xchg
les
jns
dec
rolb
inc
mov
scas
scas
sub
mov
test
test
dec
push
bound
inc
and
and
cmc
jecxz
jg
add
int3
repnz
inc
hlt
mov
inc
mov
mov
adc
pop
push
push
mov
imul
std
cli
icebp
fs
fwait
test
sbb
mov
lret
and
lret
repz
js
push
dec
lcall
imul
mov
sbb
scas
adc
sub
cs
pusha
dec
mov
cmovbe
inc
cmp
es
xchg
sub
icebp
mov
dec
push
cmp
ds
or
mov
mov
stc
mov
stos
and
adc
xchg
lret
push
adc
mov
xchg
and
and
lock
test
pop
push
cmp
ret
inc
fwait
or
scas
cmp
clc
mov
cli
jb
mov
mov
dec
out
lret
cmc
lahf
iret
and
ret
dec
push
jmp
jecxz
cwtl
out
add
in
test
out
mov
mov
add
scas
cs
sub
andb
icebp
stc
cli
das
lret
movsb
sub
dec
xlat
jmp
pushf
sti
enter
push
add
mov
cmp
or
in
xchg
jns
mov
bound
les
mov
lret
and
sub
jecxz
js
add
inc
imul
inc
mov
cmp
mov
fs
lret
add
orl
pusha
inc
xchg
push
movsb
inc
dec
ljmp
or
rorl
ljmp
bound
rcrb
or
popa
sub
sbb
scas
jecxz
sub
adc
dec
push
pop
sbb
pop
inc
cmc
iret
aaa
jb
imul
sub
jle
cmp
push
out
xor
out
push
andb
cmp
mov
pop
lret
sbb
cmp
push
cmpsb
addr16
inc
pop
mov
outsb
jbe
jmp
bound
xchg
or
das
or
adc
stc
icebp
lret
lds
je
cmpl
push
scas
xchg
jg
jmp
popf
inc
cmp
adc
adc
inc
dec
jle
sbb
pop
adc
subb
or
jecxz
adc
jge,pn
mov
rcll
aas
es
and
imul
jl
fadd
int3
cmc
sub
push
xor
lea
loopne
orb
and
ljmp
aaa
push
sar
stc
mov
imul
push
pop
mov
sbb
add
sub
mov
pop
shr
pop
pop
sub
mov
sbb
jmp
cs
test
inc
jmp
push
ds
pusha
inc
pop
daa
pusha
or
pop
sub
sbb
scas
lret
ret
dec
sub
inc
imul
iret
adc
popw
dec
ljmp
add
lahf
jle
std
das
mov
dec
push
pop
mov
fs
push
fwait
inc
stc
popa
arpl
and
loopne
pop
repz
jmp
pusha
cmp
insl
mov
lock
or
dec
or
sahf
or
mov
or
add
lea
stos
ja
xor
pop
bound
add
add
insl
scas
jno
add
in
adc
mov
jg
xorb
pop
jb
lcall
loop
inc
clc
mov
xchg
pop
adc
es
mov
out
inc
jp
sahf
std
pop
cmp
push
loop
loope
sbb
imul
or
in
int
adc
andb
int3
dec
pop
mov
nop
pop
cmp
cmpsb
sub
mov
push
outsb
adc
loop
jb,pt
nop
push
daa
hlt
ret
repnz
or
cmc
or
inc
or
int
pop
mov
jg
jmp
cmp
popf
or
lea
push
test
mov
out
mov
sub
and
adc
std
pop
cmp
cmpsl
popa
sbb
int
or
mov
cmp
ror
xor
out
rorl
sub
inc
xchg
mov
mov
or
popa
adc
sbb
push
aaa
in
adc
sub
sbb
cmpsb
inc
sarb
pop
jae
in
or
popf
or
cmp
sbb
or
add
iret
dec
pop
test
mov
lds
fcmovu
je
cmpl
inc
scas
jno
loopne
jecxz
or
cs
sbb
add
dec
mov
push
jns
jmp
or
repnz
fs
std
int3
mov
mov
sarb
add
jl
add
push
cmpb
jle
pop
pop
sbb
data16
iret
iret
aaa
mov
es
fs
push
fadd
int3
lea
add
push
movsb
inc
pop
ljmp
sub
ds
pop
xchg
adc
hlt
ret
aaa
push
in
or
dec
or
or
dec
push
add
mulb
cmp
cmp
xor
es
fs
pusha
push
stc
mov
stos
push
adc
cmpsb
test
rorl
push
sub
push
pop
int3
out
push
andl
xchg
into
sub
int
mov
daa
pop
push
lret
cmp
sbb
in
in
clc
lods
mov
mov
loopne
lret
or
mov
inc
mov
mov
push
popa
mov
inc
xchg
inc
sub
mov
mov
push
test
mov
sbb
adc
inc
mov
adc
cmp
ret
hlt
loopne
xchg
pop
or
push
adc
cmpb
movsl
ljmp
dec
sbb
js
into
das
xchg
in
pop
add
xor
or
push
sbb
gs
in
mov
mov
iret
test
stos
fwait
sqrtps
lods
addl
cmp
fists
add
idivl
mov
aas
ss
stc
jle
popa
push
mov
xor
and
sti
jmp
jbe
adc
mov
pusha
cmpsb
or
cmp
bound
push
arpl
pusha
fucomip
sub
aaa
mov
sub
out
loope
popa
push
mov
pop
sub
mov
push
call
mov
js
sbb
addr16
stos
test
scas
rcll
sub
popa
and
in
xor
push
pop
sub
xchg
cli
pop
xor
and
outsb
push
adc
xchg
push
or
paddw
das
test
cld
pop
mov
jbe
loop
xorb
movsl
aas
mov
xor
xor
add
dec
cmp
xor
popf
imul
in
xor
cmp
xor
popa
inc
xor
cli
mov
add
push
adc
ja
push
sbb
sbb
xor
dec
scas
xchg
add
cmp
pop
or
out
movsl
xchg
add
cmp
xor
jmp
xlat
fistpl
inc
fucomp
mov
push
lret
push
jbe
mov
adc
cli
jno
add
push
orl
push
adc
xchg
push
push
lret
push
sahf
bt
rdpmc
xchg
jae
lret
xor
aam
pop
or
ret
dec
cmp
jecxz
call
jmp
xorb
popf
dec
xor
xchg
jbe
jmp
and
ret
mov
dec
sti
ds
cli
fldt
aas
out
xor
inc
roll
lea
add
push
adcl
gs
lret
push
lea
gs
push
jbe
fstpl
mov
out
movsl
add
das
aas
nop
fnsave
std
sarb
jnp
pop
loop
jbe
fstpl
push
fucomi
movsl
pop
fldcw
aas
or
xor
xor
dec
mov
mov
xchg
or
or
fistpl
xchg
out
cmpsb
adc
sub
dec
push
js
mov
xchg
or
or
fldcw
idiv
dec
dec
orl
dec
adc
xchg
dec
repnz
add
jne
or
xor
gs
lock
sub
popa
leave
sub
add
dec
xchg
out
xchg
out
movsl
mov
adc
popa
std
pop
ljmp
and
lret
xchg
outsb
pop
jp
inc
icebp
outsl
addb
scas
inc
and
lods
out
sahf
push
lret
and
dec
mov
adc
and
insl
fimuls
mov
or
fmull
pop
mov
mov
in
cmp
aad
imul
dec
in
mov
xor
xchg
cld
and
ret
je
push
pop
xor
dec
std
inc
adc
jbe
xor
addr16
loop
insl
fcompl
fidivrl
gs
clc
out
fwait
jne
repnz
pop
pop
xlat
push
mov
xchg
jae
cmc
cmp
dec
mov
in
xchg
cs
sub
lret
push
das
cmp
cli
test
in
popa
jnp
icebp
sti
jo
cmc
loope
sub
aas
cmp
in
xor
rorl
pop
insb
and
pop
push
sbb
fcmovne
add
cmp
stos
lods
call
out
aad
in
fsts
xchg
jg
xor
inc
and
inc
cmpsb
sbb
jmp
scas
cmp
sbb
mov
sbb
push
les
movsl
mov
inc
inc
int
cltd
push
inc
gs
in
in
dec
push
icebp
aas
call
mov
repnz
mov
es
stc
mov
xchg
shll
fiadds
mov
push
stc
cmp
ds
cmc
jo
mov
dec
push
xchg
inc
sub
add
leave
and
ss
loop
adc
and
loop
data16
xchg
push
jbe
pop
testb
mov
sbb
loop
leave
or
out
sub
sarl
enter
xchg
jo
inc
mov
scas
add
dec
es
sbb
and
jg
mov
adc
push
int3
inc
scas
outsb
jno
add
push
push
jle
popa
lods
inc
xor
mov
mov
xchg
xchg
and
xchg
aas
stos
mov
loop
clc
loopne
aas
out
and
pop
mov
out
mov
jecxz
sub
insl
dec
in
inc
pusha
xchg
inc
adc
add
idivb
push
add
sbb
jmp
clc
loope
in
fildll
xor
icebp
loope
fisttps
mov
and
mov
pop
sbb
inc
cs
jmp
sub
ljmp
pop
cli
imul
mov
test
lahf
aaa
out
xchg
lock
inc
enter
and
jmp
outsb
cmp
xchg
jns
cmpsb
cs
push
xchg
cmp
or
jmp
movsl
lock
in
jmp
das
jbe
and
sbb
popa
sar
imul
int
fsts
fsub
icebp
in
jmp
and
stc
sbb
inc
mov
inc
roll
fs
inc
in
outsl
sub
push
and
dec
aad
lahf
popf
iret
popf
xor
jo
in
cmp
aad
ljmp
mov
ficoml
jmp
inc
popa
mov
stos
pushf
cltd
outsl
loope
push
aad
sub
xchg
pop
xor
jae
bound
add
push
shlb
xchg
push
pop
and
imul
mov
pop
inc
pop
mov
jmp
push
cmovae
dec
ss
popa
and
cli
inc
cmp
pop
test
push
inc
xor
fcompl
cmpsl
sbb
aad
adc
add
fs
cli
leave
cmp
xor
enter
add
cli
mov
push
sub
jo
xor
add
pop
mov
lret
cmp
mov
aam
shrb
in
pushf
flds
fimull
test
insl
aaa
dec
cmp
cmp
mov
sub
scas
popa
sub
dec
cmp
dec
ret
pop
add
mov
outsb
in
les
mov
sbb
or
jecxz
mov
ret
xchg
inc
out
popf
rolb
rcll
lds
dec
mov
mov
dec
dec
sbb
pop
dec
loopne
add
or
mov
dec
sbb
mov
in
add
jnp
gs
inc
push
lds
sub
in
xorl
sbb
loope
out
mov
add
inc
sub
inc
jb
sbb
pop
cmc
xor
push
outsb
dec
out
sub
jge
cmp
out
push
push
out
bswap
cs
mov
sbb
popf
cld
mov
icebp
int3
push
inc
cld
mulb
iret
mov
pop
lret
mov
sbb
or
xchg
xor
mov
dec
dec
adc
lret
test
test
incb
in
jge
xor
xor
sub
out
mov
scas
call
and
push
jge
ss
adc
adcb
sub
std
adc
cmc
xor
ljmp
lret
or
cmp
add
adc
in
cmp
sbbb
andl
lcall
push
movsl
arpl
daa
mov
popa
and
aas
repz
aas
sbb
cmp
testb
js
and
call
adc
inc
jne
xor
adc
push
jl
sub
push
mov
sbb
cmp
and
cmp
push
push
cmpsb
mov
sub
dec
mov
push
jns
inc
add
jmp
cmp
sbb
pop
insl
lock
mov
mov
ds
mov
inc
stos
sbb
loop
mov
ljmp
cmp
push
inc
lcall
adc
incl
mov
das
adc
repnz
in
cld
loope
leave
adc
cltd
and
cs
ret
cltd
outsl
in
xchg
sbb
cmp
mov
fs
dec
mov
cld
sub
sbb
jecxz
lea
push
xor
fiadds
jg
jl
sub
scas
pushf
out
xchg
xor
sbb
xchg
std
lods
push
sub
insl
scas
lret
in
lcall
adc
mov
jbe
fcompl
das
rolb
pusha
fisttpl
xor
sbb
sub
mov
int
pop
roll
inc
mov
dec
inc
adc
ljmp
int
mov
out
out
and
xchg
adc
add
push
mov
lret
mov
or
sub
pop
fidivl
sub
add
sti
mov
inc
sbb
cmp
mov
stc
jno
sub
in
cmpsl
jno
repnz
adcb
xor
aaa
out
mov
mov
call
add
and
pop
popw
cli
jge
add
call
sbbl
xchg
insb
repz
lock
sbb
pop
subb
mov
inc
dec
enter
sub
cmp
pusha
cmpsb
movsb
enter
xor
pop
nop
stc
xor
mov
out
adc
sbb
divb
cmp
hlt
sbb
jae
adc
rclb
xchg
lock
jne
into
inc
leave
sahf
mov
je
call
push
pop
gs
pop
sub
xor
mov
scas
popf
or
ret
iret
and
jge
lea
leave
outsb
idivl
or
test
lds
leave
adc
testb
dec
pop
cmp
insl
in
sub
cmpsl
jge
cli
jmp
outsl
ss
lcall
pop
sub
sbbb
dec
pop
adc
adc
and
in
clc
btr
aas
or
sub
cs
leave
test
inc
enter
push
aad
xchg
fmull
rolb
adc
xor
cmpsb
adc
dec
xchg
fwait
jo
jmp
xchg
mov
pop
xorb
movsl
ret
les
pushf
push
cs
sbb
xchg
test
cmpb
lret
push
mov
mov
xchg
xor
add
rorl
adc
enter
and
loope
pushf
clc
mov
jle
mov
test
movsl
insb
leave
das
aas
sbb
xor
push
mov
cli
dec
sbb
pop
adc
lcall
clc
cltd
jne
mov
xchg
and
cli
icebp
movsl
es
inc
sub
pop
mov
sti
in
xor
pop
stc
jnp
orl
cmp
push
repnz
mov
xchg
jg
jne
into
data16
cpuid
push
jne
dec
into
mov
cmp
or
andb
inc
add
add
out
sub
mov
stos
out
aaa
scas
xchg
icebp
daa
ds
jle
inc
scas
jmp
andb
sbb
in
loop
sbb
cli
cmp
add
orl
xor
push
lret
pop
mov
xor
xor
arpl
fucomip
sub
andl
mov
in
aad
cmp
mov
cmp
push
aad
mov
xchg
bnd
shr
or
das
aas
mov
cs
xor
loop
nop
clc
mov
pop
imul
adc
or
pop
fwait
mov
loope
rolb
mov
mov
xor
lret
outsl
shl
or
aad
fildl
xchg
cmp
mov
aaa
sub
sti
pop
xchg
es
pusha
jle
xchg
pop
fwait
push
mov
out
dec
push
and
leave
add
out
into
xadd
sarb
aaa
xor
sub
pop
mov
and
aad
arpl
ror
inc
fucompp
adc
aaa
shr
ret
inc
fdivrs
mov
stos
out
cmpb
fldt
sub
icebp
or
mov
jbe
push
pusha
pusha
adc
xor
insl
cli
xor
mov
sbb
scas
lock
xchg
enter
adc
lcall
mov
pusha
lea
pusha
fs
mov
or
movsl
pushf
cmp
cmpsb
mov
xor
ds
es
adc
cmp
adc
aas
lock
fsubr
xor
repnz
mov
fnstcw
inc
adc
pop
mov
lcall
xchg
fxch
lods
andb
cmp
sti
test
pop
or
jne
add
mov
mov
popf
sub
mov
in
dec
xchg
sti
sbb
mov
daa
rorb
mov
imul
bound
cmp
push
mov
pop
outsl
insl
scas
xor
dec
push
bound
xor
mov
xchg
adc
jmp
pusha
cvtps2pd
or
das
clc
jae
mov
fucomip
mov
add
mov
jp
sub
adc
int
insw
scas
jno
loopne
cmp
mov
mov
cmp
adc
jle
repz
inc
insl
je
jo,pn
test
mov
popf
ja
mov
jmp
lret
jecxz
or
xchg
xor
cs
fsubs
and
bound
mov
inc
aam
sbb
mov
add
enter
push
push
cld
jmp
mov
mov
aad
aad
mov
cmp
jmp
aam
icebp
orl
sub
adc
das
aas
stos
mov
cmp
or
cli
mov
inc
lock
in
sub
lea
andb
cmp
bound
adc
cli
and
jmp
mov
sub
dec
jg
mov
stos
sub
sub
or
cli
pop
outsb
arpl
out
movsl
jge
das
aas
push
xor
arpl
test
jmp
inc
xchg
scas
adc
sahf
sub
sub
push
mov
xor
sub
ret
int3
add
scas
es
call
mov
das
inc
mov
cmp
mov
or
aam
push
or
invd
insl
in
sub
and
pop
sbb
fstpl
ss
imul
push
xor
mov
mov
iret
xor
dec
out
mov
shr
cld
scas
in
das
sub
or
sub
sub
in
pusha
and
xchg
jae
lcall
leave
mov
pop
repnz
test
adc
push
inc
pusha
std
pop
fs
movsl
pop
std
loop
or
jecxz
pop
cmp
pop
mov
pop
xchg
add
or
sub
pop
mov
mov
adc
mov
mov
or
jmp
mov
mov
imul
xorb
inc
inc
insl
mov
pop
repz
cld
fsubs
hlt
ret
scas
jmp
fwait
test
ret
dec
sub
xchg
es
adc
andb
inc
mov
pushf
or
pop
push
fsubp
jae
imul
lea
out
movsl
daa
mov
aas
xor
xor
pop
cs
or
cli
or
shrl
orl
sub
xor
sub
out
pusha
inc
out
xchg
in
popf
mov
or
out
movsl
xchg
scas
das
aas
les
cmp
pop
mov
outsl
xor
das
and
adc
push
outsb
pusha
pop
dec
mov
mov
dec
call
stos
sahf
out
ret
dec
push
mov
leave
in
jmp
into
lcall
cs
test
inc
mov
out
or
jmp
pusha
add
mov
test
mulb
cmp
sbb
out
fadd
jmp
pop
or
and
insl
stc
and
mov
sbb
scas
in
ret
dec
push
dec
loopne
jecxz
jecxz
fdivs
test
inc
scas
mov
mov
in
add
jmp
repz
cmpl
or
and
jmp
push
pop
push
mov
ret
scas
sbb
test
das
js
or
iret
aaa
shlw
scas
movsb
out
mov
ret
and
std
jge
sbb
scas
jno
jecxz
or
jg
add
sbb
jnp
clc
mov
dec
outsb
gs
or
xchg
sahf
sbbl
scas
inc
xor
int
in
lcall
aam
ss
imul
cmp
lods
ret
and
loope
add
aad
idiv
testl
inc
pusha
pop
mov
cli
loop
pop
cmp
lds
jnp
push
and
xor
cmp
pop
cmp
movsl
jae
mov
or
jge
or
mov
fcmovnb
int3
fnstsw
lcall
sub
or
push
add
xor
mov
mov
rcrl
int3
cmp
imull
sti
aas
add
pusha
adc
or
ror
fisubrl
lahf
xor
outsl
add
and
out
mov
sbb
or
sbb
sub
sti
pop
push
cmp
outsb
addb
lahf
or
mov
stos
outsb
lcall
push
or
aaa
fidivl
cli
stc
fwait
mov
idivl
push
jle
jno
push
shld
inc
insl
add
jno
out
das
insb
out
pop
gs
loopne
in
jp
movsb
loop
inc
jne
int3
ret
xor
outsb
test
sbb
shr
inc
sbb
add
pop
inc
stos
out
jmp
cmpsb
rcrl
stos
push
pop
in
adc
enter
mov
add
xchg
fisubrl
popa
orl
ror
cs
cmp
mov
or
loop
sub
ja
shlb
xchg
xchg
scas
xchg
pop
loop
loopne
cmpb
sbb
mov
insb
cmp
fisttpl
popf
mov
aaa
outsb
shll
cmc
mov
imulb
sub
jnp
orb
subb
out
pop
or
jns
movsb
out
das
repnz
inc
adc
sbb
mov
pop
xchg
jg
ret
ds
aas
push
cmc
or
sub
repz
imul
icebp
arpl
and
scas
cwtl
push
dec
movsb
cmpsb
cmp
and
cmp
subl
xor
loop
loopne
cmpb
push
cmp
fistl
dec
mov
out
or
jo
in
out
aas
mov
bound
push
sub
pop
ret
std
xchg
es
sbb
sub
mov
and
push
jp
mov
pop
iret
xchg
bnd
pop
pusha
add
and
dec
mov
pop
sub
lret
push
icebp
cmp
mov
xor
lahf
sbb
jb
xor
sub
xor
hlt
and
jno
cmpsl
loop
push
and
xor
sub
imul
sbb
movsb
push
aad
xchg
mov
mov
js
shll
ljmp
dec
ja
add
adc
inc
ss
mov
add
sbb
loopne
jae
mov
ss
rcrb
ljmp
mov
cmp
dec
aas
dec
mov
or
ljmp
loop
fldcw
push
mov
inc
mov
lds
out
lcall
stc
pop
and
cli
push
les
mov
jb
stos
fidivrl
movsb
es
mov
outsl
add
push
ds
das
mov
inc
mov
dec
jnp
sub
lods
push
cmpsb
das
bound
or
in
pop
mov
xlat
out
mov
and
mov
and
adc
inc
mov
dec
insl
push
aad
xor
shr
in
shr
rol
cmp
scas
mov
cmpl
xor
insl
sub
sbb
adc
mov
sbb
and
out
cli
xchg
sub
cmp
inc
xchg
popa
pop
ja
mov
imul
ljmp
inc
mov
dec
scas
mov
push
sub
mov
loopne
add
roll
shrl
lret
cmp
sti
kmovw
cmpsb
mov
data16
jmp
push
loopne
outsl
call
sahf
inc
lock
xchg
lret
jns
stc
mov
xor
jbe,pt
adc
in
mov
insb
add
movb
cli
mov
into
or
out
lret
push
scas
pop
inc
call
xor
popa
xor
add
lret
jge
sub
es
lods
mov
cmpsb
pop
or
ss
jmp
fwait
test
pop
mov
dec
mov
mov
pop
fisubs
jp
adcb
and
jbe
repnz
and
jp
mov
stos
shrl
cmp
orb
rolb
aad
das
addr16
xor
roll
cmp
shrb
out
subl
mov
movsl
push
pop
in
popa
shr
in
adc
pusha
adc
outsl
call
xor
bound
inc
lea
xor
xor
xor
lret
xor
jge
and
jb
push
orl
sub
mov
stc
popa
mov
adc
and
adc
cmc
mov
mov
push
push
in
pop
das
fdiv
outsl
inc
jae
sub
in
pushl
inc
aas
bound
xchg
ljmp
push
sti
enter
movsb
inc
dec
pop
fimuls
lret
adc
es
pop
sahf
push
ss
push
movsb
mov
frstor
inc
pop
push
fs
add
movsb
inc
fstps
push
lret
or
push
dec
jmp
pop
cmp
and
dec
jae
adc
lret
add
jo,pn
and
bound
bound
ficoml
cmc
loopne,pn
sbb
inc
mov
sbb
pop
inc
bound
idivl
add
roll
in
mov
movsb
jb
mov
aaa
sub
in
shll
in
daa
xor
mov
pop
sbb
cld
sti
dec
push
cltd
mov
imul
and
cmpsl
in
addb
xor
or
xchg
sbb
sbb
pushf
pop
sub
scas
sbb
add
or
aaa
sbb
sbbl
ret
shl
lock
jns
xlat
out
push
inc
cltd
xor
pop
shrb
sti
fildl
push
cwtl
addr16
sub
or
mov
add
popa
stos
adc
fstpl
cmp
cmp
push
nop
gs
push
shlb
cmp
xor
mov
jmp
std
push
mov
jo
mov
enter
loopne
jns
push
jae
notb
mov
sarl
add
mov
cmp
mov
pop
dec
stos
int3
lret
mov
lock
fwait
xlat
mov
pop
or
push
in
xorl
adc
sbb
xchg
or
sbb
lea
ljmp
add
xchg
push
cmp
int
jo
push
or
fwait
popa
sub
test
cmpsl
lret
loope
jp
imulb
xchg
pop
cmp
enter
sub
mov
int
jnp
outsb
data16
cmp
call
fimuls
inc
sub
cmpsl
dec
jg
cwtl
sub
stc
je
dec
in
sub
cwtl
outsb
pop
cwtl
sbb
sahf
push
lret
sbb
dec
rorl
stos
int3
jbe
pop
jb
dec
outsl
adc
lahf
and
jne
inc
push
cli
shl
xlat
in
movsl
cs
lret
dec
mov
pusha
cli
jno
bound
lret
push
adc
fstps
inc
cmp
arpl
aas
in
mov
mov
dec
in
adc
jge
adc
sub
cmp
xchg
cs
xchg
pop
lret
dec
repz
pusha
cli
dec
icebp
psubd
in
dec
jae
ret
or
lods
adc
adc
sahf
jae
sbb
mov
and
movsl
out
and
inc
sbb
or
arpl
in
sub
cmp
in
add
nop
mov
sub
in
movsl
sub
cmpsl
xchg
mov
in
aam
jne
cmp
dec
xchg
sbb
sahf
mov
xorl
pop
sub
outsb
push
dec
dec
mov
mov
xchg
inc
inc
loopne
ficompl
std
fildll
or
nop
movsb
inc
mov
cli
xchg
cmp
push
pop
popf
subb
fisttpl
test
pushf
cmp
dec
xchg
dec
push
and
sbb
pop
or
push
dec
aas
ljmp
mov
or
mov
popa
cli
hlt
testl
pusha
mov
outsl
scas
push
or
mov
and
adcb
adc
mov
cmc
lds
mov
inc
test
mov
stos
mov
out
arpl
mov
out
jns
pop
xchg
insl
sbb
pop
push
mov
data16
aas
in
movsl
and
jecxz,pn
add
sbb
sbb
ljmp
in
movsl
out
inc
cmpl
add
ljmp
dec
lock
test
add
add
jb
cli
stc
pop
xchg
pushf
mov
push
repz
div
add
or
aam
aad
xchg
mov
and
cmpsb
int
bound
loopne
inc
test
adc
xchg
imul
jb
fcmovb
xor
lods
and
les
dec
cs
int3
xor
inc
cmpsl
inc
xchg
cmc
pushf
and
lock
push
xor
add
loopne
stos
jnp
sbb
in
sti
into
dec
das
iret
adc
push
xor
cwtl
dec
push
adc
mov
fnstcw
mov
cmc
pop
pusha
lret
rolb
out
sub
repz
adc
push
push
inc
adc
aam
cmp
imul
cmc
call
mov
or
xlat
or
xchg
jecxz
sub
or
sub
xchg
adc
xchg
lret
dec
mov
pusha
cli
dec
ljmp
movsl
in
inc
orb
lods
jmp
push
or
mov
scas
inc
shll
jnp
push
and
loopne
jae
mov
push
nop
jle
ret
shlb
pop
dec
sub
jne
add
add
outsb
outsl
rolb
pop
in
sub
and
inc
int3
popa
je
mov
jns
in
pop
pop
in
nop
sub
rcrl
pushf
mov
add
sub
lret
inc
cs
fcmovne
xchg
and
mov
ficomps
sub
call
pop
pop
or
add
add
jb
cmp
cld
lahf
inc
lds
inc
xor
cmc
sbb
outsb
ljmp
gs
lahf
std
inc
cmc
pop
in
cli
adc
lret
dec
dec
xchg
fwait
pop
aaa
in
mov
push
xchg
jmp
push
sbb
push
cs
lret
pop
das
sbb
cli
movsl
push
mov
stos
inc
cmpsb
repnz
mov
int
xchg
lret
ret
mov
mov
push
dec
jmp
sqrtps
aam
jmp
aas
stos
out
aas
mov
in
cltd
inc
lea
jo
push
lods
daa
mov
testb
popf
xchg
or
sbb
add
inc
sahf
and
inc
jno
cmp
push
test
or
adc
xchg
xor
ljmp
mov
fisttpl
loopne
cld
sub
or
bound
ss
push
push
pop
sti
or
out
pop
cmp
sub
das
pop
test
rcl
bound
scas
roll
in
cs
in
popa
fidivs
adc
shlb
sbb
decl
mov
xchg
out
ss
aas
fmul
sub
mov
dec
shrb
jno
gs
inc
cmp
and
rol
or
xchg
push
cmp
rorl
bound
scas
loop
dec
fwait
and
adc
adc
pop
push
shl
xor
shrb
sub
ljmp
mov
das
and
add
test
stc
mov
outsl
in
arpl
into
inc
repnz
cmc
sbb
stos
rcrl
mov
stc
jmp
xchg
lret
into
outsb
inc
es
dec
xorb
and
lock
push
jmp
jecxz
lods
fisubrl
xor
cmp
xsha256
cmpsb
adc
outsl
fisttps
sbb
pop
lds
add
ds
out
popa
push
fldenv
repz
xchg
xor
mull
cmpsb
xchg
add
stc
notl
mov
outsb
inc
pop
mov
and
fwait
cmpsb
out
sub
sbb
in
ret
in
jmp
xor
pop
xchg
xchg
movsl
shrl
mov
ds
imul
adc
into
mov
shll
aaa
pop
push
cmp
xchg
inc
popa
and
xlat
cs
push
aam
subb
jne
insl
and
test
add
xlat
bound
into
cmp
rcll
jge
sub
xchg
fstp
addl
ja
imul
mov
xchg
cli
xchg
mov
out
out
sahf
add
loope
pop
sbb
iret
mov
loop
and
icebp
inc
mov
mov
test
in
jns
xchg
faddl
lret
out
loop
xchg
aas
adc
or
sbb
inc
scas
insl
mov
aaa
sbb
outsb
mov
add
pop
or
inc
imul
mov
adc
dec
aaa
jle
subl
repnz
jp
pop
lods
cmpl
mov
in
push
add
pop
arpl
mov
xchg
pop
mov
ret
daa
xchg
or
inc
sahf
mov
or
mov
bound
sti
or
data16
std
adc
cld
and
outsb
sub
mov
adc
sub
lret
mov
idivb
bound
mov
jle
mov
or
xor
dec
nop
cs
adc
sbb
scas
rcrl
mov
int3
test
push
inc
movsb
and
fstpt
fisubs
and
mov
xchg
dec
es
jp
jle
push
jo
jmp
cmpsl
inc
inc
pop
jmp
or
lret
xor
xchg
inc
dec
lods
test
jbe
inc
jg
push
daa
push
leave
gs
cmp
pop
es
jecxz
add
in
sub
bound
cmp
dec
idivb
and
push
nop
sub
and
jae
push
inc
pop
push
in
add
sahf
mov
mov
dec
inc
mov
and
out
mov
cmc
cmpsl
and
cmpsb
or
in
rclb
mov
or
nop
std
jne
subb
or
push
lds
loope
mov
lret
es
das
fs
or
mov
cmpsl
mov
movd
lea
pop
and
jle
xor
pslld
push
xor
decl
sbb
mov
cli
insl
xchg
or
xchg
jp
mov
sbb
dec
mov
addr16
nop
dec
sbb
mov
mov
adcb
shr
and
andb
inc
mov
aas
ja
cmp
movsb
push
and
scas
add
repz
popf
or
aam
pop
dec
or
or
sbb
dec
mov
sbb
lcall
in
mov
mov
pop
push
or
jno
setp
cmp
and
add
nop
popf
jecxz
js
pop
mov
cmpsl
mov
xor
push
push
cmpsb
jae
sbb
fcmovnu
jge
mov
imul
inc
popa
ds
loop
xor
fnsave
dec
mov
notb
fcoms
push
xchg
push
and
xor
sbb
in
pcmpeqd
dec
xchg
and
js
dec
shlb
pop
sar
shlb
lods
dec
bound
xchg
ljmp
push
cmc
xchg
adc
insb
cmc
push
or
sub
int3
adc
or
andb
xchg
notl
cmp
xchg
in
jle
dec
sub
scas
leave
rol
xor
sub
mov
and
sub
or
sub
inc
xchg
jo
cli
aam
sti
push
jg
out
test
popa
xor
aaa
xor
jmp
xor
and
xor
fistps
xor
fdivrp
jo
outsl
int3
mov
aas
adc
aad
xchg
push
sti
mov
jmp
lahf
xchg
pop
pop
inc
and
ret
mov
into
cmp
outsb
sub
aas
fisttpll
rcr
push
cwtl
xchg
lret
push
stc
pop
mov
shll
xor
in
xlat
add
fisubl
xchg
fidivrl
iret
out
mov
jmp
mov
jb
dec
mov
mov
movsl
sbb
call
push
xor
sub
popa
dec
stos
sub
and
push
xchg
lock
mov
xlat
enter
hlt
inc
fisttpl
or
add
adc
stos
push
adc
xor
mov
sub
xchg
mov
cmovns
fimull
xor
ljmp
paddw
popf
push
inc
ljmp
cmp
sub
addl
cld
mov
jmp
dec
add
inc
adc
add
add
inc
lds
cli
mov
iret
sbb
push
iret
hlt
add
inc
out
insb
data16
inc
mov
int
mov
xor
push
negb
hlt
cmc
dec
sahf
shll
pop
cmc
loope
test
mov
pop
jl
and
decl
or
sbbb
xlat
fbstp
pushl
and
or
fcomps
cld
hlt
xchg
or
movsb
lret
jmp
in
test
mov
ds
mov
jmp
mov
push
ret
loope
inc
imul
pop
movsb
inc
loope
sbb
aas
sarb
and
add
out
inc
dec
pop
fdivs
leave
mov
cmp
outsb
cmp
pop
xchg
mov
adc
imul
negl
shrl
lea
rcrb
jno
sbb
sub
mov
fidivrs
mov
pop
cli
sbb
sahf
sub
std
test
lods
ret
inc
mov
insl
pop
popf
and
sahf
jge
dec
and
mov
sbb
dec
mov
dec
or
into
cmp
loope
ds
sbbl
jne
in
subb
fsubrs
mov
add
out
dec
test
loop
dec
mov
leave
add
cmp
fidivrl
sbb
cmp
fmull
push
aaa
ljmp
inc
std
int3
loop
adc
sbb
movsl
or
fisubl
les
loop
das
movsb
add
inc
lods
gs
xchg
cli
push
lahf
cmpsb
jnp
jp
push
adc
or
aas
cmpsl
cmp
adc
and
decb
ret
jp
pop
scas
pop
xor
lods
inc
inc
jp
cmpsb
mov
cltd
scas
lret
test
push
adc
push
inc
push
in
jmp
inc
and
and
in
and
pop
icebp
inc
scas
outsb
lret
push
bound
arpl
push
shr
and
ds
arpl
inc
mov
mov
pop
xor
fidivs
std
mov
mov
cmp
ss
pop
stos
and
mulb
jb
in
loopne
adc
test
std
movsl
sbb
filds
xor
data16
jb
or
inc
addb
dec
pop
bound
push
and
push
xchg
data16
cmp
shrb
in
push
icebp
or
call
dec
in
into
popf
add
icebp
push
jecxz
fists
pop
stc
or
xor
pop
cmp
sub
incb
or
bound
jmp
sub
imulb
test
dec
xchg
or
inc
nopl
mov
ljmp
std
and
pop
cs
adc
xchg
fsubl
imul
fmuls
leave
in
outsb
mov
xor
stc
sub
push
xchg
repz
sub
movsb
jae
scas
mov
decl
mov
jle
sarb
ljmp
and
pop
cmp
sub
push
out
cmpsb
mov
icebp
jmp
out
loop
cli
das
fnstsw
sbb
add
inc
lds
cmpsl
btc
or
pop
scas
or
insl
bound
push
arpl
adc
and
imul
mov
aad
and
stc
mulb
jp
leave
cmp
cmp
cmpsb
mov
int
data16
cmpsb
inc
add
mov
and
shlb
out
dec
out
loope
mov
orb
pop
add
mov
scas
push
lret
pop
bound
xor
adc
addl
push
mov
xor
lretw
inc
fsubr
int
xchg
add
iret
ljmp
add
and
ljmp
lcall
mov
mov
sub
pop
aaa
andb
daa
mov
sub
adc
mov
cltd
and
pop
cmpb
out
jp
sbb
lods
ljmp
sbb
aam
push
cmc
stos
push
push
sub
mov
test
sti
xchg
shrb
fstpl
testb
ficomps
aam
pop
adcb
repnz
or
mov
fidivl
mov
adc
out
lds
mov
mov
pop
fcoml
jb
mov
shll
popa
popa
sub
leave
mov
cmp
xchg
mov
ljmp
shlb
or
mov
or
jae
jmp
mov
clc
sbb
sub
mov
sahf
adc
mov
lret
sbb
scas
dec
imul
jle
pushf
mov
xchg
ss
scas
stos
and
fwait
mov
imulb
mov
les
cs
cmp
push
roll
mov
out
fdivrs
push
iret
jle
sahf
mov
arpl
xor
sysenter
pop
and
movsl
jmp
sahf
sti
push
es
sbb
sub
push
paddusb
mov
jmp
push
inc
push
test
dec
outsb
popf
jnp
stos
out
pop
outsb
dec
scas
mov
sahf
das
stos
test
dec
inc
mov
xlat
movsl
push
es
dec
ss
inc
inc
shlb
mov
loop
jb
inc
lods
push
int3
icebp
xchg
mov
inc
cmpsl
jp
dec
cmp
jp
movsl
jb
mov
or
fs
sahf
add
sbb
movsb
or
pop
das
mov
mov
dec
das
xchg
push
jae
pand
mov
cld
loope
ds
loop
inc
inc
sub
or
mov
es
push
fidivrs
addl
mov
wrmsr
test
idivb
jmp
bound
cmp
jno
das
dec
iret
mov
pmullw
out
movsb
ret
ds
stos
pusha
out
test
jb
aad
int
js
pop
push
xor
mov
fisttps
sub
or
or
cmpsb
cltd
pop
cs
jp
mov
mov
xor
push
xchg
mov
push
test
fsubrl
dec
imulb
sbb
fcoml
jp
outsb
push
mov
adcb
pushf
cmp
push
jmp
dec
out
shll
ljmp
pop
popf
xchg
das
mov
mov
fcoms
dec
dec
jge
xor
inc
das
std
mov
hlt
sarl
sub
mov
dec
push
das
jnp
mov
mov
shll
xchg
mov
scas
es
sub
push
xchg
sbb
das
jne
popa
mov
xor
fs
scas
loop
pop
or
pxor
jle
lock
and
outsb
sub
fs
jmp
add
std
sub
inc
movlps
cmpsl
pop
icebp
icebp
insl
psllw
mov
sub
mov
push
das
cmpsl
stos
pusha
cmp
mov
repz
mov
xor
es
jle
jge
fisubrl
inc
mov
daa
fmulp
lds
mov
sbb
xor
xor
int
pop
inc
or
and
sbb
xor
push
data16
sub
mov
add
jg
mov
es
sbb
sbb
sti
aaa
stos
and
push
clc
pusha
aas
cld
int
pop
cmp
push
movsb
mov
xor
jae
mov
fs
xchg
ret
dec
mov
cmc
and
jo
dec
lods
add
fldenv
inc
push
xchg
mov
cmp
inc
cs
insb
je
mov
add
jg
gs
push
scas
in
sub
or
pop
mov
mov
mov
aad
es
inc
ss
shrb
mov
and
inc
sahf
jbe
repnz
cltd
scas
lock
lods
out
xchg
arpl
adc
lea
in
cmp
aas
jmp
or
or
add
or
jne
std
xchg
gs
xor
in
and
cli
jmp
push
lcall
xchg
pop
sub
pop
adc
inc
mov
and
arpl
test
outsb
push
and
outsl
loop
xor
imul
xor
data16
shrb
add
cmp
or
inc
data16
push
scas
mov
jge
mov
sub
stos
cwtl
adc
xor
inc
mov
repz
in
bound
out
mov
ficoml
in
mov
xor
jns
jb
push
mov
jmp
cld
fdivrl
lods
jge
adc
push
jp
fsubl
das
pop
lahf
idivl
jecxz
and
push
cmpsb
clc
xor
xor
int
data16
inc
fcoms
xchg
imul
lret
pop
jnp
mov
mov
xchg
test
arpl
call
mov
cmp
scas
scas
lret
cltd
jns
out
mov
in
add
loop
pop
jp
daa
push
or
out
in
inc
xchg
push
push
dec
clc
and
leave
out
je
inc
or
movsb
push
fwait
adc
aas
shll
sti
dec
xchg
dec
sub
data16
insb
outsb
mov
jns
enter
stc
lret
push
sbb
pop
jg
and
add
inc
push
aad
out
neg
in
or
call
aas
adc
int3
jmp
and
and
in
sti
jo
or
cmpsl
cmpl
and
push
stos
xor
and
push
push
outsb
lods
inc
mov
cmp
out
xchg
mov
dec
and
sbb
xor
mov
frstor
xchg
and
inc
jmp
scas
jb
insl
push
and
dec
sub
xchg
push
jg
stos
xrelease
mov
gs
loop
nop
or
xchg
xchg
cmc
jge
push
mov
sbb
fstps
outsb
aas
mov
gs
int3
stc
scas
sahf
js
orb
dec
pop
xchg
leave
mov
gs
int3
icebp
scas
mov
sub
cmp
push
cmp
aaa
push
out
dec
xor
cmp
and
pop
ljmp
icebp
stc
out
sub
xor
incb
loope
imul
mov
sub
or
add
inc
leave
ds
jo
loop
pop
push
in
jno
xchg
cmc
cltd
mov
adc
xor
sbb
cs
mov
inc
mov
pop
add
sbb
adc
flds
cmp
in
lea
ret
cmp
and
dec
imul
sub
mov
sbb
push
scas
cmp
add
sbb
lds
cmpsl
repz
je
mov
jle
inc
fdivr
xchg
fbld
test
iret
cmc
leave
mov
filds
cmp
out
cwtl
dec
out
clc
lcall
pop
and
mov
sub
aaa
push
push
idiv
cmc
cs
test
dec
lods
inc
or
dec
negb
mov
pop
inc
aas
cmp
nop
cmp
loop
lock
push
fcmovnb
int3
bound
push
dec
mov
dec
scas
xor
pop
arpl
stos
inc
push
std
and
xchg
push
jnp
lock
push
nop
cmp
mov
and
imul
mov
imul
imul
imul
sbb
push
loop
push
orl
sbb
push
and
cmp
aas
rcrl
aam
inc
add
sbb
lods
inc
hlt
cld
adc
add
cmp
xor
aaa
and
push
imul
xchg
sbb
int3
clc
scas
pushf
fwait
pop
push
cmp
sbb
sub
mov
xlat
popf
xor
cmp
cmp
sbb
jb
cmp
cmp
pop
test
jg
jecxz
mov
pop
mov
mov
sbb
int3
jbe
fcmovne
mov
sbb
cmp
pop
xchg
enter
lock
icebp
call
test
jmp
lock
mov
int3
mov
add
aad
push
cli
mov
mov
adc
push
sub
xchg
dec
xor
sub
inc
sub
fmuls
dec
insl
jb
push
lcall
mov
insl
pop
lret
xor
add
xor
int
inc
push
lods
sub
cmp
idiv
mov
cs
dec
sbb
sub
sahf
mov
jnp
das
mov
inc
add
cmp
xor
fnsave
das
in
or
pop
push
ds
add
loop
data16
and
adc
push
sbb
push
xor
in
into
idivb
nop
jge
in
pop
bound
push
sub
sbb
subb
hlt
jp
pop
xchg
insb
or
sbb
or
sbb
test
inc
mov
addr16
inc
cmc
mov
mov
stc
jle
fsubrs
cmp
pop
cmp
cmp
aaa
out
pop
sbb
xorl
add
mov
xchg
repnz
fxam
cmc
sub
and
fisubrs
shl
imul
dec
subl
xchg
xor
dec
adc
ret
gs
sub
fs
dec
xchg
imul
fwait
push
cs
push
sbb
cmp
jle
push
popa
sbb
ret
ja
sub
aaa
imul
test
pop
ja
inc
adc
addr16
adc
or
movsb
pop
icebp
addr16
adc
mulps
xor
jmp
mov
push
sub
aas
fbld
xorl
mov
jb
es
mov
mov
push
pop
testb
adc
repnz
pop
mov
fs
mov
lahf
imul
and
rol
and
popf
sub
pusha
mov
mov
and
push
pop
and
push
pop
and
push
dec
and
push
dec
and
push
inc
and
push
inc
and
push
cmp
cli
leave
push
jno
cmp
push
cmp
sbb
inc
sahf
mov
mov
fnstsw
fisttpll
popf
and
push
jg
dec
mov
adc
mov
jge
scas
into
rorl
in
xchg
adc
dec
gs
add
add
push
stos
inc
ds
gs
jo
pusha
lret
jmp
shrb
fadds
repnz
out
jae
std
dec
out
jge
in
mov
pop
push
xor
mov
mov
mov
ss
pop
in
popa
ljmp
jmp
jb
push
out
and
mov
or
cs
ljmp
and
jmp
push
cmp
add
adc
aad
in
in
hlt
aas
dec
cmp
mov
jnp
cmpsb
int
notl
or
out
pop
mov
out
mov
xorb
leave
subb
sub
aaa
imul
std
ds
dec
push
xor
jno
das
inc
sarb
or
in
fisttpll
fwait
jb
aaa
loopne
jmp
push
xchg
gs
bound
mov
stos
add
cs
in
lcall
out
stos
or
xchg
stos
dec
js
sbb
cli
xorb
push
mov
xchg
dec
push
ret
jmp
gs
into
jle
sub
and
mov
dec
ret
xor
divb
lret
add
inc
flds
and
pusha
into
fildll
sbb
xchg
xlat
out
push
cmp
out
push
cmp
adc
add
mov
movsl
lds
imul
cmp
cli
adc
pop
dec
aas
cmpb
sub
stc
cli
or
ror
pop
mov
stos
push
and
mov
aas
push
add
ficoml
test
inc
test
pop
lds
insb
incl
jb
dec
pop
mov
inc
or
jmp
incb
loop
pop
mov
in
je
cmp
out
xor
dec
mov
or
shlb
or
jmp
std
rcrb
mov
xor
sbb
clc
aas
jno
arpl
ss
sub
xor
jg
dec
xorb
outsl
loop
pop
test
loope
mov
push
sub
or
xor
sub
aam
mov
pushf
sub
fisubs
out
or
pop
inc
cmc
xor
jp
popa
scas
xchg
lret
jns
stos
popa
arpl
adc
stc
dec
stos
pop
out
xor
cmp
mov
mov
loope
int3
and
outsb
je
sbb
outsl
mov
mov
sbb
sbb
and
pop
cld
loope
jge
cmpsb
add
pop
ds
std
gs
add
push
mov
fcmove
leave
bound
inc
loop
pop
sti
push
inc
cmc
cmp
sahf
icebp
xchg
scas
lret
vfmaddsub231pd
mov
cmpsl
dec
mov
pop
ffree
dec
arpl
adc
add
xchg
mov
sub
lods
and
fimull
cltd
ficomps
shll
icebp
std
jns
sbb
push
fcmove
xor
mov
cmc
sti
test
bound
mov
mov
sbb
xor
push
xchg
cmp
or
icebp
stc
scas
ss
sub
and
flds
imul
jmp
jmp
and
cld
lds
cmpsb
cmpsl
fidivrs
dec
jg
insl
cmp
mov
scas
mov
test
andl
push
int
gs
inc
in
push
cmpsb
mov
cld
stc
inc
xchg
loop
lahf
or
pop
cmc
and
adc
mov
out
ljmp
xor
xor
pop
data16
jle
mov
test
sub
icebp
and
bound
insl
stc
inc
cltd
and
daa
es
sbb
or
inc
inc
jno
add
mov
std
popa
xchg
and
jne
std
inc
popf
out
pop
movsb
frstor
adc
mov
and
or
cmp
pop
and
sbb
xor
cmp
inc
neg
ffree
mov
sbb
xor
push
data16
jbe
xchg
in
and
subb
lret
or
xchg
adc
imul
jns
add
xor
xlat
jp
push
adc
std
jno
adc
push
fcmove
xor
enter
push
inc
cmc
cmp
cmpsb
icebp
xchg
scas
fcmove
leave
push
push
push
xor
inc
fstps
inc
xor
scas
mov
mov
sub
int
pop
cmp
xchg
jno
xchg
icebp
and
in
popa
sub
bound
or
imul
insl
push
cli
repnz
int3
jg
jmp
and
and
inc
inc
jle
mov
in
push
shrl
in
sbb
xor
cmp
into
inc
leave
adc
inc
jle
insl
scas
stos
lret
cltd
shrd
daa
ds
xor
mov
push
loope
test
sbb
adc
adc
adc
imul
xchg
cli
and
in
and
cld
mov
push
lcall
in
cmc
rolb
aad
pop
and
sbb
xor
cmp
and
pop
repnz
sub
dec
scas
jle
imul
jge
std
inc
popf
bound
mov
in
aas
es
adc
or
xchg
and
and
gs
jmp
add
xchg
int
push
and
and
adc
jle
mov
mov
cmpsb
push
jmp
and
sbb
xor
imul
in
mov
mov
xchg
xlat
xor
es
and
popf
and
lret
cld
jmp
push
fs
ss
std
popa
inc
std
push
and
mov
int
ljmpw
gs
inc
inc
loope
cmpsl
push
mov
imul
lgs
data16
inc
in
dec
sahf
xchg
and
jge
add
fdivl
frstor
pop
std
sti
addl
jge
mov
cltd
scas
into
lret
mov
fisttpll
xor
xor
int
push
cmp
jp
gs
and
decb
pop
jecxz
and
and
stc
sti
addl
jns
mov
popf
scas
ror
lds
add
ss
xor
cmp
inc
lcall
add
popf
and
rcrb
xor
and
and
inc
dec
mov
out
add
sbb
xor
pop
lcallw
in
mov
lahf
sub
dec
scas
xchg
jne
scas
cmpsl
cmc
inc
xchg
xchg
push
ret
or
popa
es
outsb
adc
imul
xor
das
or
cmp
aad
pop
stc
sti
jge
sbb
mov
mov
ds
jo
inc
xor
sub
int
data16
jle
mov
movsl
cli
xchg
stc
inc
cs
and
bound
cmp
fbld
mov
bound
std
bound
inc
push
imul
jge
push
cli
xor
out
shr
pop
and
and
xor
mov
fidivrl
fidivs
and
sbb
xor
cmp
mov
mov
gs
inc
in
push
stos
xchg
leave
and
repnz
xchg
cld
adc
lods
cmpsb
bound
shll
adc
std
test
imul
xor
jmp
in
jne
sbb
cld
in
test
cmpsb
adc
dec
adc
std
mov
imul
jno
add
jmp
jmp
and
cld
add
es
bound
inc
pop
imul
cltd
cli
sub
xchg
jmp
and
cld
aad
jne
cmpsl
repnz
jecxz
and
and
inc
pop
scas
cmpsl
out
jmp
mov
fstpl
inc
mov
jge
mov
lods
scas
and
int
lcallw
in
cltd
ljmp
and
mov
stc
aas
sub
adc
stc
jmp
and
and
push
xchg
jle
lret
daa
mov
int
ljmpw
sub
xor
xor
jp
fiaddl
inc
ljmp
and
lea
data16
ljmp
in
pop
xor
mov
scas
inc
jb
shlb
cltd
addr16
mov
ret
inc
leave
pop
mov
push
mov
out
cmp
add
ret
mov
push
aas
jae
xor
dec
addr16
cltd
inc
add
jne
test
mov
ds
cmp
ja
imul
add
pop
jno
push
xchg
adc
and
addb
jge
es
jnp
pop
dec
pop
lcall
rcll
roll
mov
fcompp
xchg
cmp
cmpsl
gs
push
pop
mov
jecxz
pop
sbb
out
mov
aas
inc
das
sbb
mov
pop
add
sub
lret
xchg
repnz
pop
jle
sub
addr16
mov
insl
pop
mov
outsb
in
mov
bound
negb
mov
pop
stos
fsubs
notl
icebp
push
les
inc
rcrb
dec
repz
push
mov
stos
pop
adc
mov
sarb
ja
in
rcrl
sbb
imul
and
jnp
pop
movsb
ret
rcrl
xchg
xor
es
push
xor
loop
xchg
pop
xor
sub
push
jp,pn
xor
mov
jne
jmp
addr16
push
and
sbb
xor
cs
mov
inc
push
mov
xor
xchg
lret
jbe
mov
and
inc
mov
adc
jne
mov
loope
stos
xor
add
shr
aad
dec
xchg
cli
vcmpps
xchg
mov
push
lcall
out
cltd
jecxz
cmp
sub
mov
rcrl
lret
sub
mov
cmp
jb
xchg
push
ljmp
cli
out
cmp
out
out
cmpsl
outsb
and
repnz
mov
adc
lret
xchg
adc
cmpsb
sub
ds
movb
out
xchg
sbb
stc
mov
outsl
test
push
repnz
ret
add
gs
incl
jp
outsb
mov
inc
stos
repnz
mov
cmpsb
add
rcrb
jmp
ficoms
pop
sbb
cmp
inc
aas
lds
aaa
push
test
push
push
outsb
es
pop
scas
imul
push
and
add
cvtpi2ps
dec
lret
aas
popf
adc
jle
jb
fcmovnu
int3
xlat
loop
lret
push
or
push
daa
xor
mov
xor
out
push
icebp
test
xchg
int
xchg
cmp
inc
push
cmpsl
loop
in
std
imul
push
mov
mov
outsb
and
mov
psubd
adc
and
sub
out
ds
das
or
cli
and
jecxz
enter
xchg
sub
inc
ljmp
inc
data16
leave
dec
lret
mov
jnp
xchg
scas
sbb
jle
pop
inc
push
and
push
mov
aaa
sbb
in
mov
ljmp
mov
cmp
cmpsb
js
sahf
out
and
dec
ds
insl
insb
cmpsl
ljmp
call
xchg
pop
movsl
es
pop
dec
test
pop
inc
adc
cs
outsb
cmpsb
pop
cltd
push
xor
rorl
mov
xchg
jecxz
jb
cmpsb
jg
fidivl
and
mov
push
ljmp
pop
sbb
add
out
jne
mov
iret
mov
das
std
mov
jb
dec
cmpsb
jg
jb
out
or
dec
repnz
xchg
cmpsb
daa
scas
and
lret
fildll
fldt
cmpsb
dec
sahf
and
dec
xchg
jle
rsqrtps
ljmp
pop
lods
and
ljmp
cs
out
arpl
subb
push
popa
add
out
jle
jg
sbb
dec
pop
ficomps
or
pop
adc
out
pop
bnd
push
adc
out
and
call
cmovb
fucom
mov
mov
out
loopne
dec
mov
push
shrl
in
out
es
pop
mov
fldt
dec
loope
push
push
repnz
sub
cmp
jg
sahf
and
data16
or
push
push
inc
scas
push
repnz
jnp
icebp
pop
sbb
rcrb
sbb
add
inc
std
mov
pop
es
jmp
and
ss
xchg
inc
imul
sbb
pushf
ljmp
mov
ja
sbb
jns
sbb
gs
popf
xchg
jns
popf
cltd
jns
popf
mov
or
fwait
mov
push
lahf
jp
pop
cmpsl
jl
pop
into
jl
pop
out
jl
pop
cli
jl
pop
add
or
adc
es
and
les
and
inc
and
xor
pusha
sub
daa
push
pushf
andb
pushf
nop
daa
je
mov
daa
xchg
pushf
shlb
pushf
shlb
mov
loopne
les
fsub
mov
and
add
cli
daa
adc
inc
daa
and
push
daa
pop
pushf
test
push
push
scas
inc
fwait
cmp
inc
fsubs
sub
mov
xchg
mov
in
lret
loopne
inc
pop
lock
xchg
jo
add
mov
dec
jecxz
jne
jae
sub
sbb
iret
sbb
jns
sbb
mov
pusha
inc
cmc
inc
addb
shl
mov
adc
out
jns
adc
test
cmp
ret
negl
in
testl
xchg
xchg
out
and
cmp
out
mov
divb
jmp
sub
enter
loop
jo
popa
frstor
shrb
mov
rorl
lret
mov
loop
jg
mov
popf
in
jbe
add
fwait
int
out
lods
comiss
mov
cs
loope
pop
cmpsl
in
sub
loop
insb
xchg
aaa
pop
mov
dec
adc
mov
push
jg
pushw
pop
loop
jle
unpckhps
cmp
sbb
cmp
mov
daa
gs
test
or
xor
std
mov
rolb
cmpsb
jge
inc
jmp
ljmp
add
ficoms
fists
mov
pop
insl
mov
xchg
in
shrl
out
dec
lcall
stos
cwtl
fbld
dec
mov
mov
test
in
aad
xor
pop
inc
loopne
sbb
lret
lret
and
unpcklps
push
sbb
cmp
ret
daa
dec
mov
test
or
pop
mov
dec
es
mov
cmp
push
pop
insb
in
pop
cmpsl
out
pop
into
mov
push
push
mull
lods
pop
fbld
mov
adc
int
sub
cmp
push
jg
dec
sbb
cmp
scas
daa
sub
lds
inc
shrl
mov
insl
test
sbb
int3
adc
loopne
pop
mov
pushf
jno
pop
mov
mov
pop
into
loopne
jg
jbe
mov
dec
xorb
js
cs
sub
in
inc
sub
out
data16
jb
stc
movsl
and
mov
push
sub
cld
cmc
in
aaa
aam
pop
inc
lea
data16
fisttpl
or
scas
push
icebp
lret
sub
out
cltd
test
out
pop
cmpb
add
dec
sub
dec
pop
jbe
push
jo
add
shll
mov
jg
jg
add
cwtl
mov
pop
lock
test
and
dec
jo
add
mov
xchg
add
repz
loopne
data16
sbb
std
movsb
sub
in
nop
mov
mov
jb
out
test
js
movsb
fstpl
nop
xchg
pop
in
ja
hlt
jl
pop
add
xchg
pop
adc
cmpsl
mulb
cmp
ja
sbb
js
cmp
notl
jl
pop
test
xchg
jl
pop
movsb
dec
aaa
lock
pushf
call
pop
mov
call
mov
out
sbb
mov
mov
iret
pusha
dec
movsl
fbld
insb
in
mov
sbb
sbb
sbbb
movsl
nop
mov
daa
mov
pushf
fsubl
rcrb
fisttps
out
cmp
add
fildll
int
test
int
test
int
test
pushf
int
test
mov
int
test
in
int
test
or
lahf
test
sub
mov
pushf
dec
rcr
cmp
icebp
out
int3
insb
icebp
dec
jl
icebp
int3
mov
pop
int
icebp
das
int
icebp
aas
int
icebp
dec
int
icebp
pop
int
icebp
outsl
int
icebp
jg
cld
icebp
int
icebp
lahf
int3
sbb
jnp
out
jp
mulb
or
xor
sbb
inc
mov
cmp
fisttpll
mov
inc
mov
in
rcr
outsl
shr
jg
cld
in
rorl
or
cmp
iret
mov
pop
imul
shrb
cmp
movsl
dec
sbb
sbb
js
movsb
movsl
mov
mov
cwtl
sbb
movsl
test
aam
mov
sbb
movsl
fcomps
add
push
sub
mov
pop
dec
movsl
out
pop
cmp
lcall
jl
mov
mov
das
sbb
dec
sbb
cmp
dec
test
aam
mov
mov
sti
mov
xor
jmp
cmc
push
insb
jl
push
jl
mulps
das
cli
pop
xchg
aad
inc
popf
push
jns
popf
addr16
popf
ja
hlt
popf
xchg
popf
xchg
jns
popf
cmpsl
insb
and
mov
rcrb
loope
sbb
cmp
and
dec
js
in
pop
js
in
insb
js
in
jl
pusha
out
ljmp
std
xchg
sbb
inc
sbbb
movsl
mov
sbb
movsl
fcomps
pop
or
add
clc
or
or
xor
sbb
inc
movsl
sub
push
movsl
cmp
movsl
dec
sbb
sbb
js
movsb
movsl
mov
mov
cwtl
sbb
movsl
test
aam
mov
sbb
pop
pusha
ja
and
cmpsb
lret
cmp
xor
jge
pusha
lea
jl
mov
xchg
in
nop
mov
add
out
nop
rorb
cmp
ds
dec
loope
int3
pop
icebp
icebp
int3
outsb
icebp
add
jle
cmp
jbe
inc
cmpsb
cli
cmp
mov
dec
cli
pop
cli
imul
idiv
mov
push
cli
cltd
push
mov
dec
es
dec
ss
push
inc
jp
push
push
jl
push
data16
push
jbe
or
jl
pop
xchg
jl
and
or
sarb
into
in
rcr
jno
out
in
sar
xchg
rorl
mov
add
inc
roll
roll
pop
in
shrb
jp
movsw
dec
sbb
pop
sbb
movsl
jp
cmpsb
pop
bound
mov
nop
push
sbb
and
dec
les
loope
jmp
shrb
stc
sarb
shrl
testl
lret
rcl
mull
loop
rorl
negl
sbb
outsb
into
sbb
test
in
push
xor
lds
es
push
nop
ss
xchg
push
add
cmpsb
nop
xchg
mov
insl
repnz
popf
sbb
push
loope
inc
faddl
loop
dec
push
das
adc
pop
push
call
and
jp
or
sbb
dec
sbb
aas
outsb
cmp
neg
mov
ljmp
pop
ds
aad
rcrb
ds
outsb
nop
dec
add
jle
pop
add
imul
ljmp
lret
fcomi
inc
sbb
stc
andl
push
cli
loope
data16
adc
mov
sbb
sahf
cli
sub
scas
cli
dec
fdivrp
jno
ljmp
cli
cli
mov
add
xchg
push
shrb
pop
nop
and
sub
xor
sbb
daa
push
pushf
jle
pop
pushf
xchg
pushfw
mov
outsb
pushf
xchg
daa
subb
div
int
test
add
xchg
test
and
int
dec
mov
loope
pop
jl
push
bound
push
or
jl
pop
stos
jl
pop
mov
inc
pop
mov
jl
pop
fidivrl
add
or
adc
sbb
fimuls
jb
dec
pop
jbe
and
arpl
in
push
jb
pop
mov
sbb
sarl
ss
sbb
cmp
gs
cmp
movsl
dec
push
xor
adc
cmp
pop
ss
stc
sbb
add
jp
or
cmpb
sbb
cmp
popa
sbb
cmp
jno
add
sbb
jmp
pop
sbb
stc
inc
and
orb
sarb
rorl
and
lcall
mov
sbb
movsl
cmpsb
mov
dec
mov
fimuls
mov
jb
dec
inc
jbe
push
dec
dec
fnop
sbb
lret
call
push
pop
sub
fstpl
call
mov
pop
divl
ljmp
add
pop
idiv
sarb
push
rcrl
sti
push
ror
negl
mull
fdivp
insl
shl
test
nop
and
or
dec
daa
ss
pop
daa
push
pushf
andb
js
mov
test
ret
popf
xor
shrl
push
cmp
fwait
cli
sub
fisttps
lds
repz
push
push
shl
popa
and
js
xchg
lock
dec
aas
stos
and
pop
addb
xchg
cmpsb
pavgb
daa
pop
or
das
lods
pop
jb
inc
and
dec
sub
sarl
imul
insb
pop
gs
mov
push
stos
in
or
jg
outsl
push
xchg
jb
pop
cmp
jle
cmpsl
mov
iret
jecxz
jp
mov
movsl
mov
sbb
movsl
mov
faddl
test
out
pop
pop
in
pop
pop
out
and
pushf
xor
adc
cwtl
ljmp
dec
push
adc
test
and
gs
pop
lret
rorb
cmpsb
pop
pusha
jge
adcb
push
je
cs
out
xchg
pop
xchg
jg
sub
dec
jecxz
or
cmp
repz
inc
push
jns
xchg
push
dec
loope
push
mov
adc
js
adc
add
add
lock
mov
cs
dec
sub
push
cltd
xor
pop
mov
inc
sbb
sub
jnp
pop
xrelease
xor
inc
pop
lcall
or
mov
push
adc
jle
stc
dec
pop
shlb
mov
cs
into
mov
ret
pop
add
sbb
mov
cmp
xor
inc
push
mov
xchg
cmp
xor
sarb
loop
in
adc
les
imul
or
add
jp
pop
or
stos
adc
adc
pop
nop
mov
lahf
icebp
fimull
add
shrb
js
imul
jp
pop
sub
int3
inc
testb
push
mov
sub
fsts
insb
addr16
jge
stos
inc
jo
adcl
insb
lea
popf
and
into
insb
imul
lock
loope
pop
push
rorb
sub
loope
jno
out
xlat
mov
mov
mov
aam
ficoms
pusha
mov
mov
and
lret
int
icebp
mov
cmp
je
push
test
xchg
aas
dec
jb
push
lcall
inc
adc
sub
enter
ds
call
add
push
push
push
lock
inc
dec
mov
cmpl
jns
nop
sub
mov
js
cmp
test
in
jl
test
lahf
lcall
mov
sbb
shrb
in
mov
adc
pushf
mov
loopne
rclb
sahf
jmp
fisubrs
cmp
int
jmp
jne
xor
xchg
call
das
or
fsubrs
xor
mov
scas
mov
mov
lods
dec
out
lds
add
xchg
sbb
pop
pop
push
add
inc
iret
in
cmp
push
mov
enter
fstl
cmp
push
scas
rclb
xchg
negl
add
jb
add
mov
pop
jmp
adcb
cmp
adc
lret
mov
sub
ds
push
pop
add
mov
sbb
mov
fistpll
jmp
mov
mov
mov
cli
rcl
dec
cli
push
cli
loope
inc
adc
fs
lea
test
dec
jbe
push
lcall
gs
mov
mov
out
movsl
stos
pop
shlb
mov
push
popa
sub
dec
cmc
das
push
sub
dec
lock
mov
sub
inc
sub
js
in
jp
pop
outsb
in
daa
pushfw
xchg
daa
jb
sahf
push
jecxz,pt
jno
out
cli
jge
cli
cli
mov
push
cli
xchg
adc
mov
inc
cmc
adc
push
push
adc
stc
inc
pushf
inc
daa
es
push
repz
je
inc
test
xor
cmpl
jl
pop
std
dec
xchg
fstl
pop
adc
pop
call
sbb
dec
sbb
fidivrs
aas
jne
add
f2xm1
outsb
rcrb
call
fstl
ljmp
outsb
pop
int3
test
xor
jl
imulb
cmp
out
or
negl
inc
cmp
mov
shll
outsb
and
sbb
shlb
insb
mov
fmull
push
aas
and
in
add
push
jge
in
icebp
ss
sahf
icebp
xor
scas
idivb
jl
mov
xchg
pop
shr
pop
shr
mov
loope
ret
mov
lods
push
adc
and
mov
fwait
dec
clc
xor
aad
dec
fwait
int
test
mov
roll
mov
call
mov
cmpsl
sbb
mov
dec
and
or
aad
xorl
lods
testb
cli
gs
lock
pop
push
add
out
or
shrd
js
out
mov
cmpsb
cmp
sbb
test
jge
cmpsb
nop
xchg
scas
cltd
add
cli
popf
js
sbb
sbb
je
push
cs
mov
les
or
and
mov
mov
mov
aad
insl
mov
shl
repnz
push
inc
clc
xor
cmp
pop
call
idivb
cmp
call
clc
icebp
movsb
or
cmp
adc
or
mov
mov
push
scas
iret
jne
bound
shr
jle
cli
fdivrl
mov
repz
xchg
arpl
fsubl
iret
imul
adc
cmp
adc
mov
sbb
add
mov
lods
add
mov
imul
sbb
pop
insl
mov
pop
jo
and
inc
jg
sahf
lret
sbb
xchg
daa
loope
pop
and
xchg
shrl
push
jle
adc
daa
pop
int
leave
mov
in
daa
lea
push
js
jbe
sbb
in
fbld
sbb
mov
jp
or
cmpsb
inc
cwtl
enter
lret
mov
mov
fsub
pop
loope
out
int3
push
sub
imul
fisttpl
xor
lret
xchg
push
adc
fwait
adc
enter
inc
hlt
or
out
popf
imulb
cmp
jbe
sbb
js
sbb
jo
sbb
ja
sbb
js
adc
pop
fiadds
sbb
xchg
cli
data16
nop
outsb
shl
jbe
out
rcll
leave
syscall
out
pop
leave
mov
idiv
inc
int
inc
cli
aad
cli
push
fnstsw
pop
in
jno
jo
inc
out
fcmovnu
mov
js
xchg
xor
jno
lods
imul
pop
sbb
add
fisubrs
popf
inc
scas
mov
dec
ljmp
aas
les
and
mov
lods
dec
inc
arpl
jbe
and
add
clc
push
and
shrl
loope
jnp
mov
lret
rcr
divl
cli
testl
out
adc
mul
and
push
out
in
bound
mov
mov
jl
pop
xchg
jl
pop
mov
jl
and
or
lea
rcrb
movsb
loop
push
and
and
or
dec
push
insl
fdivl
sbb
mov
stos
inc
cmp
test
mov
xor
daa
dec
popf
movsb
push
push
and
mov
mov
or
xor
fs
inc
test
nop
mov
mov
pop
les
mov
rolb
sbbb
cli
test
sbb
mov
xor
mov
pop
mov
pushf
ds
sub
sub
rolb
outsb
out
mov
mov
mov
pop
pop
mov
popa
dec
sub
ds
roll
cmp
push
push
jge
push
sbb
movsl
push
sbb
sbb
pop
mov
pop
data16
jne
int3
dec
mov
movsl
mov
sbb
movsl
lret
movsl
rcrb
cli
inc
les
insl
test
and
mov
hlt
jl
push
jbe
adc
mov
daa
mov
jno
adc
mov
dec
and
xchg
pop
push
int
shll
imul
repnz
jle
arpl
mov
push
into
nop
pop
and
mov
cltd
fcomps
aaa
ljmp
pop
cmp
dec
pop
cmp
jne
repz
fists
mov
push
pop
mov
push
jo
jp
xchg
mov
cmp
insl
cmp
rorb
jb
sub
push
sub
inc
decb
inc
push
jbe
repz
rcrb
insb
add
push
adc
pushf
stos
adc
pushf
mov
je
out
in
push
cli
int
pop
adc
sbb
cmpb
mov
xchg
out
add
daa
cmpsb
pushf
into
hlt
lods
sub
push
push
and
int3
push
in
cmp
adc
mov
data16
in
jb
push
jbe
daa
pop
imul
inc
sbb
sahf
aam
ror
movsl
mov
cmp
mov
mov
add
or
loop
or
push
add
pop
dec
aam
aam
and
mov
xchg
xor
stos
cmp
push
lret
pop
adc
sti
lret
xor
pop
cwtl
ds
es
dec
daa
cs
push
gs
xchg
pushw
pushf
mov
dec
in
shr
xchg
pop
xchg
dec
sub
sbb
cmp
mov
push
pop
js
push
jp
adc
test
sbb
out
aad
push
mov
pop
pop
jl
and
pop
ja
ja
lock
sahf
lea
in
test
pop
rcl
sub
and
stos
hlt
stc
outsb
and
add
pop
sbb
cmp
adc
and
into
mov
decb
lea
sbb
or
inc
imul
std
xor
pusha
push
into
jp
add
add
or
xchg
and
and
push
fmul
add
fdiv
pop
loope
add
xchg
jecxz
inc
mov
shl
test
nop
daa
mov
imul
out
aad
nop
loop
push
or
jmp
dec
sbb
jo
dec
stc
xor
pop
je
call
rorl
push
inc
pop
dec
push
inc
jno
push
gs
xor
jne
out
leave
jge
jp
je
in
add
loope
or
cmp
cvtpi2ps
push
add
cmp
lock
pop
adc
mov
aam
out
cmpsb
pop
push
cmpsl
scas
lret
loop
ja
push
pop
jg
pop
pop
xchg
pop
ret
or
xlat
push
leave
popf
cmp
mov
lahf
fdivrl
std
push
sbb
cli
dec
cmp
mov
sub
add
pop
xchg
xchg
cltd
mov
lock
xchg
arpl
xor
and
dec
idivl
adc
pop
add
push
testb
mov
mov
test
repnz
test
out
xor
bnd
jno
insl
or
ljmp
cwtl
mov
xor
icebp
aad
xor
cli
pop
ja
fsubs
mov
jns
jne
outsb
outsb
stos
into
cs
fistl
je
popf
inc
jo
dec
arpl
daa
lcall
cmp
jno
movb
ret
shrl
inc
inc
mov
mov
inc
mov
push
leave
sti
dec
or
jo
movsl
sub
rcrl
test
cmp
adc
and
mov
cmp
jp
pop
jns
nop
jnp
xchg
out
jecxz
adc
aas
dec
call
push
arpl
lahf
nop
out
out
jp
inc
movl
pop
pop
and
mov
sub
add
cmp
notl
in
outsl
out
lahf
xchg
les
repnz
xor
cmp
orl
ja
mov
popa
ret
out
fcomps
xchg
rcl
imul
rol
cmp
loop
out
jp
neg
mov
pop
dec
sub
fincstp
orl
mov
adc
xchg
mov
ljmp
ljmp
aaa
cs
mov
mov
or
fstl
cltd
lock
ljmp
inc
rorl
cwtl
int
in
push
int
popf
or
sbb
cwtl
mov
push
out
cmpsb
sub
xchg
lock
adc
mov
popa
cs
test
ljmp
xor
shrl
cmp
jo
or
out
jbe
fucomip
and
rcr
add
pop
dec
pop
cld
movb
jnp
popf
xor
add
inc
xor
fcomip
gs
aaa
decb
pop
xlat
jmp
cmp
and
rolb
cwtl
jns
imul
mov
jecxz
dec
or
cmpsb
jbe
pusha
inc
inc
xlat
test
xor
addb
sahf
lods
iret
xor
mov
insl
mov
inc
xchg
and
sub
insb
inc
mov
jp
mov
aam
and
shlb
mov
shlb
int
div
xchg
mov
out
inc
jecxz
cli
and
lret
jl
loop
cmpsl
cltd
fdivp
iret
pop
fdivrs
mov
xor
js
cmp
and
inc
jno
or
call
popa
sbb
or
add
and
adc
or
jbe
aaa
sub
and
cmp
ljmp
and
lods
jbe
mov
into
sbb
mov
outsl
jmpw
into
sqrtps
es
sub
cwtl
xchg
push
mov
mov
add
cmp
jle
push
push
jae
imul
push
jmp
lea
mov
popf
idivb
push
adc
mov
into
xor
add
gs
add
mov
or
adc
or
push
pop
jl
dec
popa
int
fwait
add
push
mov
dec
lcall
pop
es
jmp
jmp
fidivrs
clc
jne
aad
mov
and
stos
popa
outsb
push
push
fimuls
add
das
dec
sbb
sbb
call
sub
push
or
jns
or
xor
sbb
cltd
shlb
lret
mov
cltd
add
push
xor
lcall
jno
xchg
aaa
repz
in
add
mov
push
cs
jo
je
mull
adc
bound
test
dec
jl
cmp
loope
negb
jecxz
pop
or
jnp
sbb
inc
xor
mov
jo
ss
repnz
dec
pop
xchg
jns
popf
push
xchg
jb
xor
lods
cmp
out
ret
mov
pushf
cltd
add
test
mov
sbb
in
xchg
mov
push
and
iret
or
repnz
add
popf
jns
shlb
sbb
test
cmp
arpl
insb
pop
into
mov
push
sub
adc
nop
imul
mov
xor
imul
cmp
data16
mov
inc
data16
loop
xor
adc
fidivrs
jo
call
push
sbb
adc
pop
iret
ljmp
lea
dec
sub
mov
inc
add
dec
in
lds
je
subb
je
stc
fstl
movsl
sarb
adc
cmp
push
jecxz
push
push
jp
adc
mov
bound
adc
push
cmp
shll
jbe
negl
push
mov
jl
or
orl
xor
pop
insb
js
loopne
orb
in
nop
js
in
cwtl
jb
jb
enter
inc
in
cs
das
in
push
daa
cmc
shll
jl
and
and
mov
sub
popa
sarl
jne
add
mov
xor
imul
mov
loop
adc
loopne
imul
jb
aaa
in
jmp
adc
pop
adc
mov
ret
nop
sub
test
cld
repz
xor
sti
inc
xor
mov
sub
xor
rclb
pusha
pop
jle
xchg
mov
stos
sub
mov
xchg
je
and
sub
sbb
jle
jecxz
mov
pop
push
dec
or
push
sub
jb
xchg
or
gs
cmp
mov
sbbl
adc
add
loope,pt
pop
push
fcoms
fsubrl
out
sarb
xor
add
jge
push
testl
sti
adc
xchg
push
xor
arpl
adc
daa
into
out
jp
cmc
cli
mov
or
sarb
sti
das
jbe
dec
clc
enter
fcoml
iret
add
mov
into
ljmp
mov
movsl
cltd
loop
jnp
loope
push
cmpsl
push
scas
adc
mov
stc
add
xchg
popa
and
mov
adc
cld
out
sbb
xchg
sbb
add
jno
insb
mov
adc
mov
ds
aam
ret
inc
add
cs
icebp
in
fnstcw
sub
sbb
or
inc
and
inc
xchg
roll
push
int3
inc
and
andl
push
call
repnz
movsl
lock
dec
mov
in
inc
jle
ljmp
cmp
in
mov
notb
pop
push
inc
cltd
lcall
test
cmpl
aam
ja
scas
xor
mov
push
sahf
add
roll
nop
sbb
push
mov
xor
pop
mov
xlat
bound
or
sar
sub
and
mov
push
push
and
out
stc
popa
pushf
scas
mull
or
sub
rcrl
jo
scas
inc
mov
pop
mov
movsb
pop
out
jno
jp
fmuls
hlt
inc
mov
xor
and
sbbb
push
jnp
in
jae
or
inc
div
sub
add
scas
or
ficomps
push
cmp
sarl
outsb
movsl
xchg
pop
pop
jecxz
enter
loop
lret
movsl
loope
sbb
sti
cmp
out
pop
outsb
repz
pop
pop
jns
cli
cltd
pop
and
jge
or
fsubp
pop
and
sub
mov
ljmp
cmp
sahf
sbb
sub
in
sub
loop
int3
pop
cmc
aam
jo
stos
sbb
push
cmp
cmp
mov
and
leave
jae
dec
sbb
dec
cmpsb
mov
test
mov
dec
pop
les
int3
jl
cmp
and
jno
push
in
dec
push
jmp
adc
add
pop
dec
mov
dec
sbb
mov
xchg
mov
mov
and
mov
inc
outsb
dec
pop
adc
pop
outsb
mov
xor
loop
xchg
add
and
cmp
mov
out
lods
adc
jecxz
inc
sbb
push
shlb
cmp
cmp
adc
rclb
sub
pushf
push
loopne
mov
out
lret
fcom
sub
mov
and
mov
push
xchg
adc
xchg
cltd
mov
xchg
sub
mov
lret
push
add
mov
add
inc
mov
enter
inc
push
iret
add
pop
stos
cli
inc
mov
scas
and
jno
cs
jns
jo
lahf
adc
xchg
pop
xchg
fmulp
and
lods
cmp
addr16
mov
pop
jecxz
dec
push
pop
into
insb
imulb
divl
and
iret
or
pop
lods
adc
push
pop
mov
mov
fbld
stc
jbe
sub
inc
fdivrl
lods
push
in
mov
mov
cmp
out
dec
push
push
jbe
or
jmp
xor
dec
add
bound
ficoms
in
pop
cmc
aad
sti
xchg
out
dec
lods
cltd
cwtl
rol
add
les
or
mov
or
movsl
add
mov
aam
or
cmp
pop
rcl
jbe
repz
and
and
push
repz
mov
or
in
add
sbb
mov
leave
push
dec
cli
pushf
cld
test
int
and
cli
into
iret
xorb
outsb
cli
sub
jnp
das
add
mov
mov
cmp
jp
fs
cltd
and
mov
testb
cmp
push
cli
out
adc
jecxz
inc
dec
ljmp
sub
mov
pusha
xor
daa
inc
cmp
add
push
cltd
jecxz
dec
push
ljmp
and
adc
or
mov
pop
jl
jg
inc
jno
out
out
or
scas
jnp
lock
jmp
sub
fsubl
dec
pop
loopne
popf
rcrb
dec
ficompl
cmpb
stc
pop
xchg
mov
cmc
add
cmp
ds
scas
push
jp
cwtl
pop
cmpsl
or
sbb
xchg
inc
out
mov
loopne
int
mov
aaa
mov
fucom
fwait
mov
punpcklwd
jno
mov
xor
dec
fistps
clc
sbb
fwait
je
divb
xor
dec
and
or
aad
in
cmp
stos
sbb
adc
jnp
fbstp
or
pop
lea
sahf
xchg
std
mov
enter
lock
mov
testb
and
mov
jp
fdivrl
push
xchg
test
mov
add
cmp
sbb
sub
dec
pop
popf
pop
sbb
inc
push
mov
or
mov
sub
push
mov
ret
adc
adc
cmp
loopne
pop
pushf
inc
push
cltd
test
sti
repz
sub
xor
and
push
mov
in
out
cmc
inc
jle
fwait
sub
lret
cmp
ds
add
repz
jns
pop
rolb
pusha
pop
aaa
cmp
fidivrl
lcall
xor
es
sub
push
adc
scas
imul
pop
mov
push
pop
jmp
adc
divb
cmp
and
jb
cmp
pop
out
add
xchg
sbb
and
sbb
mov
cmpsb
nop
aam
jp
outsb
sub
add
xor
or
xchg
xlat
and
xor
call
lds
mov
arpl
lods
xchg
popf
push
mov
dec
pop
mov
cld
pop
jno
rorb
lret
mov
cmp
inc
mov
inc
pop
lret
pop
cmpsl
xchg
lcall
pop
jno
fisubrs
in
lcall
mov
sub
shrb
pop
or
lcall
sti
repnz
and
nop
mov
divl
sub
out
icebp
arpl
fistpll
outsl
adc
pop
ret
jl
lock
add
mov
add
jl
adc
jl
clc
js
or
orb
adcb
mov
adc
pop
fidivrl
dec
lods
mov
cltd
sub
popf
xor
pop
loop
shrl
int
dec
mov
fdivrs
pop
push
and
sub
mov
dec
inc
in
stos
int
fstp
cmp
push
cmp
add
loopne
cmp
bnd
add
push
pop
xchg
in
jno
dec
mov
es
xchg
and
jecxz
rclb
lcall
adc
cld
out
push
push
cmp
imul
adc
pop
jp
pop
pop
and
mov
insl
sub
scas
jns
mov
dec
test
sub
mov
jns
xor
lods
inc
mov
mov
xor
mov
push
shr
sbb
cltd
loop
outsl
cli
push
push
in
popaw
xchg
mov
inc
adc
fwait
pushf
cmp
or
inc
dec
stos
mov
mov
cmc
popf
xchg
inc
sub
inc
jo
adc
push
jns
insb
cmp
lahf
leave
inc
dec
dec
cmp
inc
aam
xor
fwait
mov
int
push
outsb
inc
aas
sub
leave
pop
push
andb
lcall
and
ret
sbb
and
sub
jge
shrb
or
test
mov
mov
push
sub
int
movsl
xlat
out
movaps
sahf
insl
out
push
xor
adc
cmp
adc
popa
cmp
xor
pop
and
xchg
cmpsl
idivb
pop
negl
add
xor
mov
call
pop
mov
test
mov
mov
scas
mov
cld
dec
fdivrs
cmp
sbb
leave
std
jge
jbe
push
test
and
sahf
gs
mov
lea
ja
add
fiadds
das
loopne
add
loop
repz
add
and
fsubrs
jnp
sbb
xchg
dec
and
lret
mov
mov
and
loopne
adc
js
mov
pop
ja
dec
div
xchg
repnz
push
push
and
jo
jb
emms
sahf
pop
rclb
ret
cmpsb
dec
xchg
xchg
fwait
push
sbb
add
push
insb
jle
cmpsb
jg
lcall
pop
or
loopne
jo
dec
sub
mov
and
add
xchg
cli
and
and
push
pop
fiadds
mov
pop
add
out
and
popf
or
jnp
imulb
pop
pushf
int3
clc
mov
sahf
call
push
imul
add
rcll
cmp
mov
js
or
sub
dec
rcll
dec
mov
ss
fwait
imul
adc
and
loope
mov
repnz
scas
xchg
loope
push
mov
inc
xchg
sbb
mov
dec
into
sahf
push
add
nop
pop
ret
sub
pop
push
in
add
xchg
aam
lods
jmp
mov
insb
push
ror
and
add
insb
cmp
addr16
es
dec
push
cld
fcmove
lock
cmp
cmpsl
mulb
adc
test
xor
ja
or
xchg
mov
js
dec
inc
inc
fisttpll
pop
and
imul
pop
dec
lds
rorb
fwait
pusha
pop
add
push
lock
or
mov
dec
inc
sti
cmp
lcall
sbb
cmpsb
cltd
cmpsb
rolb
stc
jnp
hlt
test
idivb
mov
sub
and
xchg
je
movsb
adc
loope
sub
pop
and
push
cld
lcall
fisttps
mov
push
ljmp
or
cmc
imulb
add
insl
dec
int3
dec
mov
cld
pop
outsb
sub
jmp
andl
adc
sbb
test
cmp
fsubrp
icebp
sub
pop
push
imulb
mov
daa
sub
lock
cs
cld
push
lods
cld
jmp
add
jnp
inc
or
mov
sbb
imul
pusha
ja
arpl
lea
test
sarb
bound
push
call
fmul
sub
aam
adc
cmpb
or
sub
adc
jmp
bound
lcall
hlt
and
clc
mov
dec
into
fucomi
in
es
lcall
push
in
dec
cmpb
sbb
pop
mov
scas
xor
cld
repnz
mov
xchg
imul
mov
add
and
fwait
mov
movsb
mov
cmp
stos
xor
xchg
pop
adc
jle
outsb
movsl
ljmp
test
addl
out
sub
and
out
stos
les
outsb
cmp
lods
call
add
hlt
push
fs
ret
add
lret
sbb
cld
test
fidivs
xchg
mov
inc
test
mov
cwtl
jns
xchg
scas
pop
pushf
push
xchg
lcall
call
pop
adc
es
xor
cs
fldenv
arpl
add
sub
fyl2x
sbb
jge
sub
das
shlb
and
iret
addr16
popf
insl
sbb
fmull
inc
loope
sub
cs
ljmp
add
cmp
lods
dec
fwait
nop
ret
cmpsl
dec
lret
gs
jecxz
pop
in
sbb
sub
mov
dec
and
test
push
pop
daa
je
lock
dec
jne
aam
mov
lock
notb
or
dec
cmp
ret
jle
jo
jmp
pop
add
and
cmp
add
mov
mov
js
in
mov
jb
jbe
repz
lahf
mov
mov
ljmp
jecxz
cmp
test
movups
shll
leave
dec
or
push
icebp
je
popf
pop
adc
jg
cmp
dec
mov
sub
jo
ret
int
or
jae
rcll
and
pop
add
out
push
mov
fwait
pusha
jb
lahf
stos
mov
jl
mov
mov
daa
pusha
xchg
and
push
imul
cli
lds
xor
imul
mov
cli
and
fnstcw
mov
push
add
in
dec
push
pop
mov
mov
je
xchg
int
sbb
aam
push
pop
cmp
jnp
test
push
xor
sti
dec
stos
pop
mov
or
sbb
push
mov
jb
dec
pop
pushf
lcall
or
imul
pop
dec
adc
dec
mov
sahf
sub
lods
das
mov
mov
and
mov
dec
inc
xchg
push
hlt
out
in
pop
out
adc
mov
mov
rorb
jecxz
xlat
negl
test
cmp
sub
insb
lds
subl
push
sbb
jp
mov
inc
or
inc
repnz
notb
dec
enter
inc
sysexit
in
xor
mov
ss
nop
out
mov
stc
sub
xchg
jecxz
out
subl
shrb
out
movsb
xchg
jl
addr16
pop
leave
mov
push
dec
mov
sbb
add
daa
dec
js
sub
pop
fcmove
adc
scas
sarb
imul
lods
stc
cmp
adc
pop
popa
sub
int
fidivl
inc
mov
imul
outsb
sub
sub
lret
push
adc
mov
inc
inc
pusha
cmp
dec
int
data16
and
in
sub
push
push
movsl
lods
xor
inc
mov
adc
adc
jbe
mov
jno
and
shrl
pop
jl
test
jnp
scas
mov
xor
jb
shrb
popf
lret
sub
dec
loopne
cmpsl
dec
cmp
fidivrl
ss
mov
inc
in
mov
out
jp
pop
inc
in
xor
sub
cli
dec
loop
ss
jbe
sbb
insb
and
out
lods
scas
push
mov
dec
pushf
cmp
inc
mov
mov
mov
xor
das
or
dec
mov
pop
inc
cli
mov
lret
xchg
mov
xor
std
sbb
inc
cmp
sti
sarl
add
pushf
push
loope
mov
sub
inc
pusha
mov
ljmp
adc
sub
cmc
cltd
pop
data16
scas
out
adc
ss
xor
pushf
cmp
lret
or
popf
mov
add
std
cmpsl
jnp
adc
rol
mov
dec
cwtl
cltd
jge
lock
rol
pusha
mov
dec
sti
add
and
outsl
mov
or
negb
mov
inc
mov
loop,pt
sarl
loop
add
xchg
xchg
adc
pop
into
scas
fwait
stos
je
xchg
outsl
jl
cmp
sub
pop
imul
add
adc
sub
sub
push
dec
shlb
pop
cli
jl
cmp
cmp
insl
addr16
and
mov
movsl
mov
or
dec
cmpsl
jb
mov
or
dec
add
xor
mov
or
shll
push
pusha
shll
or
in
fwait
or
imul
push
mov
cmp
insl
and
out
mov
sub
xlat
icebp
data16
loop
pop
or
dec
ljmp
push
jns
xchg
js
xchg
or
mov
sub
pop
pop
das
inc
fwait
mov
mov
xchg
add
lea
mov
loope
sbb
stos
push
sub
test
xchg
xlat
decb
jae
js
cmp
fs
sbbl
sub
jl
cmp
lods
jb
jp
sub
pop
mov
and
fcmovu
dec
or
out
xchg
jmp
mov
rorl
add
cmpsl
jmp
pop
xor
add
stc
xchg
sahf
cwtl
cli
lods
sbb
mov
jae
sub
arpl
std
cmpsl
xor
rcr
scas
mov
jbe
mov
pushf
hlt
pop
fsubrs
jp
pop
movb
push
and
in
sub
rcrb
int3
test
insb
scas
cwtl
repz
add
add
mov
inc
addl
orl
iret
mov
mov
rol
cmp
rcrb
xor
mov
mov
pop
jge
inc
int3
lods
mov
scas
mov
mov
inc
xchg
jl
lock
pop
inc
fsubrl
outsl
push
out
push
jbe
mov
loopne
mov
ret
nop
sbbb
rcrb
sub
and
inc
sbb
add
arpl
repz
pushf
pushf
mov
popf
push
jo
scas
sbb
xor
cmpsl
in
enter
sarb
mov
adc
add
jo
sbb
ret
or
out
aaa
scas
jbe
sbb
js
sbb
iret
mov
sub
or
xor
inc
cmp
inc
xchg
test
arpl
fdivl
cmpsl
adc
and
sub
mov
pop
call
call
xlat
sub
jecxz
imul
call
data16
add
icebp
and
pusha
or
int
stos
out
insb
adc
cmpsb
sbb
cmp
jns
and
test
pop
inc
and
lock
jb
std
sbb
fdivrs
out
decb
icebp
sub
sbb
and
and
jle
fimuls
cmc
push
jo
sahf
mov
icebp
xor
jp
sub
imul
dec
adc
mov
data16
lret
je
pushf
sbb
cmpsl
movsb
xor
cs
fdivrl
ja
mov
lods
pusha
xchg
mov
push
mov
in
push
sti
inc
ret
push
dec
sbbl
push
xor
mov
enter
fsts
testb
mov
loope,pt
movsl
lock
add
mov
add
repnz
mov
in
or
inc
jge
sub
cld
into
cmp
and
mov
stos
push
jb
push
or
push
push
int3
jecxz
gs
add
outsb
fsubp
mov
or
lods
inc
lret
outsb
jle
mov
dec
movsl
sarl
mov
bound
inc
inc
bound
cmpsl
cmp
and
je
pop
mov
insb
nop
fdivp
ja
icebp
repnz
or
repz
mov
das
mov
lea
stos
push
push
or
inc
js
loope
pop
adc
idivl
add
add
or
into
pop
jg
decb
arpl
or
repnz
dec
adc
cwtl
pop
mov
dec
loope
xor
scas
icebp
inc
int
lock
mov
and
adc
fmuls
loopne
inc
mov
jp
xor
mov
push
jecxz
jle
shll
addr16
imull
test
shll
lods
call
scas
pop
jecxz
loope
fwait
bnd
sahf
jmp
pop
mov
pop
shr
cmp
and
lock
mov
das
lods
mov
inc
mov
std
outsl
inc
push
mov
mov
cwtl
sarl
mov
imul
sbb
ds
pop
dec
aam
aam
es
sbb
notl
jns
cld
fisubrl
and
xchg
icebp
addb
or
jle
or
sub
aaa
cmp
leave
dec
fwait
xor
mov
adc
push
aas
inc
mov
mov
mov
pop
shlb
out
imul
mov
cmc
and
push
in
or
mov
cmp
pop
mov
jmp
push
and
data16
or
pop
iret
call
push
xor
xor
mov
in
out
shlb
add
lea
sub
jae
or
jl,pt
sub
adc
push
mov
dec
or
add
and
or
and
and
inc
fisttpll
dec
in
jae
push
imul
aaa
leave
aam
in
loope
int3
popf
add
push
lret
ljmp
sub
lds
lods
or
pop
jb
mov
or
jns
jb
popa
mov
dec
insl
pop
int
mov
cmc
jg
cmp
lock
adc
xchg
loopne
dec
dec
cmpsl
gs
add
adc
out
xor
fucomip
cmp
adc
and
scas
ss
mov
add
shr
pop
ss
and
ljmp
push
and
rolb
into
push
inc
pop
sub
mov
mov
sub
in
cmpsl
pop
xchg
adc
and
sub
mov
shr
pop
stc
call
push
xchg
or
pop
into
sahf
fbstp
push
mov
xor
sub
out
jbe
pop
xorl
pop
out
and
jg
add
xchg
adc
call
and
xchg
jnp
mov
outsl
repz
xor
pop
add
call
loopne
inc
sarb
int3
popl
insb
mov
adc
push
das
cmp
into
aad
ret
div
filds
fs
in
jg
mov
popa
add
inc
xor
mov
pop
and
cmp
mov
rcl
in
out
out
sbb
mov
pop
movb
pop
addr16
in
sub
mov
inc
lods
mov
add
loope
mov
sub
mov
pop
ljmp
loopw
mov
das
jecxz
xchg
mov
cmp
xchg
push
adc
mov
cmp
add
push
and
loopne
fisubrl
sarl
repnz
pop
into
or
xor
add
and
push
fbstp
loop
sbb
sub
mov
sahf
test
pop
shll
dec
and
jno
cmpsl
or
cld
outsb
or
flds
cmpb
inc
ss
stc
or
movsl
inc
sbb
add
aas
ret
pop
dec
ficoms
push
daa
inc
lret
mov
dec
push
sahf
icebp
pusha
sub
aam
jg
rcll
aam
cmc
ja
dec
popf
mov
dec
out
pop
mov
fbld
movsb
popl
push
and
aad
mov
fistpll
imul
scas
mov
jno
es
ljmp
out
leave
mov
cmp
sub
fsub
xlat
call
cltd
mov
and
call
mov
jns
mov
icebp
aaa
lahf
scas
xor
pusha
rcr
and
mov
push
and
sub
pop
je
inc
mov
xchg
jecxz
aaa
mov
mov
pop
cmc
test
xchg
push
push
fisubs
mov
stc
jle
das
hlt
xor
in
jge
cmpsl
add
pop
popa
ljmp
sub
pop
mov
add
push
xchg
pop
jecxz
mov
leave
pop
nop
lret
repz
xchg
loop
xchg
mov
jle
repz
mov
mov
push
sub
cwtl
adc
pushf
bound
mov
xlat
jp
icebp
out
pop
fsubr
fmull
push
xchg
lcall
inc
xorb
nop
jmp
sbb
push
mov
cmp
fidivs
sbb
adc
pop
jecxz
jne
sbb
nop
lea
rcrl
jo
inc
jne
sbb
cmp
mov
stos
jg
xor
pop
daa
pushf
decb
mov
xlat
fwait
sub
add
into
imul
mov
sbb
aas
pushf
xor
aad
dec
xchg
push
ret
call
test
jle
cmp
xor
loopne
lret
shlb
bound
pop
cltd
sarl
sar
mov
sbb
cmp
andb
nop
out
pop
cmp
aad
and
and
dec
roll
sbb
and
dec
or
fwait
mov
insb
ja
fnsave
out
rorl
in
fcomps
mov
inc
das
rcrl
mov
xchg
lods
inc
into
lods
ja
mov
cmp
imul
xor
mov
dec
pop
pop
test
mov
ficoml
subl
pop
mov
jmp
xchg
mov
ja
push
xchg
adc
xor
mov
subl
out
iret
or
mov
mov
cmp
add
sbb
cmp
and
je
and
or
cmp
xchg
mov
mov
jg
aaa
mov
sbb
sbb
scas
ret
xor
push
fimuls
xor
xchg
sub
imul
xor
cmp
loopne
scas
das
sti
add
mov
icebp
push
mov
bound
add
test
mov
pop
push
push
sub
pop
dec
movsb
into
lahf
xor
jmp
jecxz
jbe
test
or
fs
jg
or
xchg
mov
jno
dec
add
mov
sub
out
mull
push
add
fcoml
and
out
push
pop
adc
pop
cwtl
mov
cmp
pop
mov
add
dec
fldl
dec
xor
sbb
outsb
mov
or
sub
fs
stos
xchg
ljmp
repnz
stos
sahf
lea
dec
aaa
adc
push
mov
ja
lret
and
push
jns
xor
pop
add
outsb
xor
out
stos
pushf
xlat
daa
into
cli
mov
mov
xchg
mov
xor
jp
insl
push
pop
mov
add
pop
or
aas
pop
rcll
sub
mov
fbld
add
scas
pop
adc
add
fwait
in
lock
mov
clc
mov
fwait
sbb
cltd
enter
sub
loop
popf
out
sarb
cli
add
leave
xchg
aam
cmp
lret
out
sbbl
mov
mov
sbb
pop
mov
filds
or
rclb
lock
sbb
jbe
es
rorb
add
push
mov
adc
cmp
mov
imul
cmp
data16
inc
imul
nop
cmp
daa
sbb
and
dec
jns
popf
push
jns
xchg
pop
pushf
movsb
mov
daa
movsb
imul
sbb
and
mov
jl
pop
or
and
scas
push
addr16
sbbb
lods
js
adc
mov
je
mov
je
mov
jno
in
aad
mov
xchg
or
pop
daa
sbb
cltd
insb
imul
cs
mov
jmp
in
int3
push
sar
outsb
jl
ss
xor
cwtl
pop
xor
push
jecxz
ret
mov
xor
loop
scas
andl
dec
xchg
xchg
sahf
mov
push
aas
inc
popa
pop
test
in
lea
sbb
pop
mov
pop
pop
into
idiv
pusha
jo
sbb
and
call
les
stos
add
mov
scas
cmp
mov
sub
out
icebp
xchg
int3
adc
movsl
in
and
les
mov
hlt
inc
sbb
add
mov
inc
mov
pop
jnp
add
xchg
stos
xchg
dec
loope
sahf
int3
das
negb
and
out
xchg
adc
push
pop
movsl
cmp
roll
adc
jns
nop
and
insb
cli
mov
cs
and
mov
pop
clc
push
add
jo
orb
das
mov
adc
cmp
or
ret
mov
insb
fistl
cmp
jno
es
cmp
int3
push
pop
cmpsb
nop
push
sub
hlt
sbb
mull
mov
mov
movsb
shrb
subb
pop
in
sbb
cli
roll
adc
jno
mull
or
dec
cmpl
fidivrs
push
rolb
dec
mov
and
iret
rorb
sbb
inc
movsl
sub
movsb
sub
scas
jp
and
jg
push
adc
imul
adc
push
shl
shl
testl
jae
stos
and
ds
shrb
jmp
jne
cli
or
je
jle
ljmp
mov
mov
pop
inc
adc
in
pop
sub
lret
test
pop
pop
sarl
xchg
call
add
inc
clc
push
test
xor
sub
ficomps
aam
dec
mov
xchg
jecxz
mov
xchg
add
out
push
je
std
cmp
sahf
das
icebp
fdivrl
mov
dec
sbb
imul
rcrl
out
dec
cld
fwait
mov
loop
in
push
adc
mov
dec
repz
and
mov
jmp
or
adc
int
inc
xchg
cmp
scas
inc
insb
xchg
pop
fnstsw
xchg
int
out
pop
test
shrb
loop
sbb
cmp
push
jmp
or
dec
xchg
mov
sub
mov
insb
iret
sbb
mulb
clc
mov
jbe
inc
mov
adc
sahf
rorb
adc
push
shlb
icebp
add
cltd
xchg
jbe
and
sub
sbb
sidtl
outsb
mov
pop
jbe
sbb
pop
mov
sub
dec
repnz
mov
push
insb
shl
mov
sbb
cmp
add
inc
sbb
repz
and
adc
pop
dec
mov
push
or
fmul
cmp
and
add
jnp
sbb
push
sbb
daa
rclb
mov
rclb
sub
leave
add
pop
out
and
fmuls
adcb
ror
out
push
and
imul
or
ss
mov
pop
xchg
cmp
xchg
pop
or
filds
cltd
or
test
fnsave
clc
pop
je
push
andb
pop
jb
cwtl
call
jmp
aam
ja
enter
pop
jmp
insl
popf
xor
notb
sub
sar
ds
outsb
lret
add
xchg
pop
cmp
pop
xlat
enter
scas
hlt
dec
mov
add
xor
sbb
adc
inc
idivb
in
xchg
jbe
sahf
push
dec
sub
cmpsb
cmp
xor
es
pop
insl
cmpb
jmp
imul
pop
inc
pushf
nop
mov
push
insb
cmp
outsl
push
fnsave
rorb
cmp
jp
pop
sub
mov
cmc
aam
inc
mov
dec
in
out
or
sub
ljmp
mov
aaa
xchg
je
les
cmp
lock
outsl
mov
clc
xlat
hlt
mov
mov
or
into
loopne
enter
movsb
ds
mov
sar
mov
cmpsl
sahf
pop
enter
sub
dec
roll
add
push
mov
mov
push
xchg
popf
pop
dec
das
lock
xchg
arpl
daa
fbld
mov
into
mov
mov
inc
fildl
push
pop
or
fdivs
xchg
jae
adc
dec
jae
leave
adc
lret
data16
jecxz
jge
mov
loope
push
adc
dec
sbb
pop
sbb
push
push
fisttps
bound
sbb
inc
cltd
pop
ret
mov
pusha
shrl
mov
xchg
and
cmpl
and
cli
idivb
pop
mov
dec
jg
push
stos
rcl
push
iret
pop
clc
mov
rclb
xor
push
xchg
or
mov
jp
add
cltd
dec
fdivl
into
mov
inc
stc
mov
bound
cmpsl
loop
adc
lock
sbb
daa
mov
das
divb
insb
add
cmpsl
jle
lods
add
mov
push
stos
js
mov
mov
push
and
mov
ret
xor
repnz
repz
cmp
lret
push
jecxz
pop
adc
mov
dec
je
or
data16
mov
jmp
rorl
jp
push
sub
mov
adc
lods
fwait
es
dec
in
cmp
adc
test
fidivrs
push
ficomps
jmp
mulb
movsl
insl
push
sbb
in
push
xchg
in
add
xor
mov
xchg
jne
loopne
into
jno
pop
daa
cmp
mov
adc
fsubl
movsl
push
adc
mov
lds
lahf
outsb
cmpsb
sbb
jo
lock
dec
and
fsubp
sub
loopne
fstpt
pop
jl
ds
sbb
push
jae
sub
mov
addb
xchg
loopne
push
out
je
dec
loop
push
push
hlt
shlb
xor
repz
inc
inc
into
xchg
lahf
jl
mov
in
sbb
call
push
mov
mov
mov
hlt
leave
mov
stos
dec
fnstenv
push
sbb
in
push
or
adc
mov
cmp
mov
testl
cmp
rol
pop
daa
into
or
cmp
aam
ja
std
mov
adc
subl
and
daa
bnd
fisubs
call
adc
orb
hlt
jbe
sub
mov
repnz
fdivs
add
fsub
insl
jno
cwtl
cmp
popf
sub
mov
lock
mov
mov
pop
mov
mov
dec
fsub
ret
ret
shrb
rorl
sub
cltd
pop
stos
push
stos
fisubs
lock
adc
and
sbb
insl
into
fildl
sbb
loopne
sub
and
sbb
jecxz
das
add
push
mov
and
or
insb
cli
push
inc
cmp
rclb
push
aam
add
pop
dec
xchg
clc
int3
pop
scas
icebp
outsl
int3
or
sti
loopne
xor
add
and
popf
rcrb
add
test
js
mov
jecxz
das
mov
push
mov
xor
aam
andb
das
lods
call
std
cmp
fdivrs
mov
int
out
xchg
dec
pop
std
adc
rcrb
dec
and
or
inc
scas
loope
aam
mov
clc
dec
mov
in
lds
pop
xor
aas
or
mov
push
out
dec
push
push
and
lock
js
add
adc
jmp
cs
imul
and
stos
pop
jl
sub
bound
je
out
cmp
stc
in
jmp
jg
sete
stos
pop
clc
mulb
not
adc
aaa
into
cmp
push
js
sbb
pop
ss
ret
sbb
and
leave
std
push
jbe
idivb
das
cli
imul
and
and
push
out
pop
call
push
xchg
xor
or
mov
dec
dec
repz
mov
pop
out
jge
repz
jae
sub
jle
cli
dec
jp
lea
jg
xor
sub
push
push
in
cmpsl
add
jb
mov
jle
dec
xor
cmp
add
push
test
jmp
fisubrs
sub
sub
enter
pop
cmp
push
pusha
je
aaa
push
outsl
adcl
cmp
mov
out
sbb
push
aas
inc
pop
pop
pop
xchg
loopne
jae
push
lods
cmpsb
lods
sbb
sub
daa
fstl
test
mov
pop
mov
sbb
popf
push
xchg
cld
loope
in
sub
sbbb
sub
jno
and
xor
repz
out
jge
in
mov
stos
inc
cmp
nop
pop
pop
xor
sub
or
lea
inc
movsb
mov
add
sti
jnp
or
mov
andl
mov
test
push
call
mov
enter
cld
imul
pop
mov
and
shll
sub
cmpsl
add
ja
lods
sahf
je
add
es
cmp
test
mov
idivl
dec
xor
es
adc
cmp
jno
mul
mov
dec
loope
push
pop
jge
sbb
jbe
jb
or
pop
pop
fsubp
dec
jp
add
xlat
jo
and
scas
add
push
ds
jge
xor
sub
xor
sbb
fidivrs
and
mov
lcall
sbb
sbb
add
pop
lds
jp
idiv
mov
cltd
mov
jb
test
cwtl
adc
xchg
xchg
sbb
cmp
push
ljmp
xchg
cmp
or
aas
and
mov
insb
andl
push
sbb
repnz
mov
sub
cltd
pop
xchg
iret
ss
pop
cli
push
jg
addb
into
sahf
and
pusha
mov
js
or
or
jl
imul
mov
imul
lret
in
sbbl
adc
push
sub
xchg
xchg
lods
or
out
sbb
push
and
inc
popa
xor
jae
push
jle
jp
sbb
scas
shll
adc
mov
repnz
repnz
cmp
mov
js
popf
xchg
insl
and
ljmp
and
imul
stos
cmp
mulb
daa
dec
int
bound
inc
push
inc
or
into
and
xchg
lret
jo
lret
cli
xlat
or
sub
dec
push
mov
out
push
xlat
outsb
lods
and
rcrb
lock
lods
inc
scas
daa
cli
xor
xchg
mov
dec
sub
and
ret
sub
outsb
scas
sub
rclb
and
pop
push
scas
xor
sbb
pop
leave
out
and
cmp
or
test
add
sub
ljmp
subb
pop
fsubr
icebp
mov
leave
sub
ret
repnz
repnz
mov
movsl
in
or
sub
in
cmpsb
in
js
repnz
or
ljmp
jne
add
shl
aaa
repnz
icebp
mov
mov
movsl
insl
xchg
mov
and
in
dec
andl
nop
mov
mov
jae
mov
outsl
fistps
imul
ja
out
lods
das
aas
mov
push
jno
ret
sbb
and
push
jg
ds
mov
movsb
arpl
cmp
and
push
push
add
insb
sub
cltd
mov
insl
hlt
fistpll
mov
jl
mov
out
mov
outsb
aaa
jl
xchg
or
xor
cmp
push
ret
nop
cmp
inc
mov
sub
into
fwait
scas
lock
icebp
pop
mov
test
and
mov
mov
and
movsl
xor
push
mov
gs
repz
shlb
mov
mov
sub
ja
mov
add
ret
pushf
mov
fisttpll
push
push
push
inc
stos
ljmp
dec
adc
or
enter
hlt
inc
dec
pop
mov
sbbb
add
jns
sbb
jecxz
pop
pop
and
mov
movsl
fisubl
cmp
hlt
push
in
repz
jg
sarb
in
jecxz
xor
popf
mov
lret
or
mov
cmp
inc
orps
inc
jns
mov
and
or
add
repnz
xchg
pop
push
cs
and
xor
push
and
loop
lds
add
mov
sub
movsb
cmc
jbe
and
and
ror
lcall
jle
scas
ds
push
push
inc
jge
inc
adc
dec
daa
sbb
sub
inc
jge
inc
ret
pusha
adc
das
pusha
push
jecxz
inc
or
or
ret
mov
loop
pusha
arpl
push
cmp
das
outsb
push
jecxz
iret
and
outsb
add
xchg
pop
testl
push
cli
cmp
sub
cwtl
cmp
lea
pushf
je
push
inc
inc
xor
lods
push
cmp
mov
or
imul
fmuls
enter
jp
add
mov
pop
fistps
xchg
jecxz
popf
sbb
mov
sbb
aad
mov
adc
test
push
test
mov
mov
adc
mov
jle
loopne
mov
dec
imul
into
mov
rcll
and
mov
stc
cmp
movsl
leave
inc
fwait
lods
lret
call
ficoml
bound
mov
jmp
sbb
or
jle
ret
xchg
mov
test
jecxz
lock
inc
adc
xor
lods
mov
stos
mov
pop
or
out
and
cs
ficomps
jb
in
add
enter
mov
or
cmp
pop
shl
sbb
and
xchg
arpl
jp
jle
add
lock
mov
xchg
pop
push
cmp
popa
sub
dec
sbb
mov
lods
push
aad
xor
fstpt
negb
daa
pop
enter
popf
sub
popf
dec
jo
fidivrs
sbb
movsl
ret
mov
outsl
lock
testl
outsb
pop
in
and
fidivs
mov
js
adc
xorb
nop
push
jo
adc
pop
subl
fiaddl
lock
xchg
sub
sti
xchg
ljmp
and
mov
jnp
push
imul
ficomps
xchg
loop
aaa
mov
rolb
jbe
push
in
and
inc
es
stc
xchg
or
adc
icebp
lret
mov
lahf
js
and
pop
jb
inc
inc
pop
aaa
jo
clc
int3
dec
shl
push
xchg
mov
sbb
xchg
sub
pushf
lock
cmp
inc
mov
pop
push
push
popf
ljmp
and
or
shrl
in
mov
cltd
and
pop
pop
loopne
loopne
pop
cmp
sub
nop
fsubrl
mov
fdivl
adc
xor
cld
cmp
mov
loope
rep
sbb
and
push
shrb
call
xor
add
neg
lock
xchg
arpl
outsb
cli
call
and
lock
aaa
or
scas
loopne
sbb
and
mov
jo
fimuls
push
dec
out
lods
pop
jecxz
dec
call
sti
ret
out
pop
fistpl
lret
mov
aam
test
imul
ret
insb
movsb
add
mov
pop
inc
es
sbb
lret
addr16
push
and
dec
mov
imul
js
push
add
xor
xchg
push
xchg
inc
sub
notb
test
loop
lcall
cmpb
fbld
xor
pop
imul
aad
and
mov
push
jo
adc
leave
mov
cmp
xchg
fstpl
xor
stos
rorl
mov
pop
mov
mov
sbb
xchg
insl
add
xor
sbb
movsb
in
aad
mov
jmp
sbb
into
mov
scas
or
pop
enter
mov
jl
cmpsl
pushf
leave
add
pop
out
bnd
xor
scas
rcl
scas
mov
mov
scas
sbb
ja
daa
jmp
cltd
pushf
or
xor
dec
dec
je
and
cmp
add
mov
clc
mov
dec
movsl
andb
sahf
mov
aam
mov
das
test
jmp
or
pop
out
gs
nop
test
pop
call
sub
dec
stos
lcall
inc
aad
or
mov
lcall
shll
dec
fiadds
daa
dec
pop
je
movsb
scas
loope
mov
and
inc
xor
mov
xchg
xor
hlt
mov
pop
mov
cltd
adc
and
in
xor
dec
sbb
clc
call
jle
insb
mov
pop
cmp
nop
sbb
push
adc
or
sbb
sbb
dec
push
out
sub
fwait
loopne
sub
push
iret
ja
pop
sub
or
pop
jne
push
pop
movsl
movsl
js
daa
rcrl
pop
sbb
les
aad
popfw
lock
xchg
fidivrs
into
xchg
adc
sbb
popa
stos
mov
and
xor
jns
nop
cmp
add
xchg
subb
jnp
lods
push
push
cmp
imul
xor
pop
mov
pop
fildll
call
pop
fs
add
dec
mov
sbb
icebp
xchg
lahf
mov
std
and
or
gs
stos
leave
dec
pushf
negb
adc
mov
ret
cmp
mov
leave
imul
dec
push
push
mulb
xchg
and
jb
jbe
orl
cmpsb
xchg
shl
outsb
cmpsl
adc
cmp
test
inc
lods
out
add
dec
pop
mov
cmp
icebp
cmp
cmp
cmp
and
test
in
mov
inc
cmp
jle
jb
lret
inc
jb
sbb
xchg
pop
in
cwtl
mov
bound
in
jns
xor
inc
sub
push
fwait
stos
or
mov
in
out
xchg
xchg
pop
dec
pushf
ret
add
push
lock
mov
adc
test
xchg
in
jo
add
aaa
cld
in
sbb
jge
mov
ret
mov
imul
pop
dec
mov
hlt
jne
jb
pushf
pusha
push
or
jae
std
imul
jge
add
pop
into
sbb
lcall
rorl
fwait
pop
jmp
scas
pop
cmp
adcb
xchg
loop
and
rcrl
adc
mov
dec
inc
mov
ja
push
loopne
mov
clc
std
ljmp
sbb
inc
adc
sbb
jb
rolb
fmuls
push
mov
adc
int
jmp
sub
mov
daa
sbb
xchg
aaa
cmp
insb
cmp
pushf
into
and
and
or
xor
and
shr
or
into
jo
jno
adc
xchg
and
dec
adc
into
in
fdivrs
jp
cli
or
mov
out
sarl
jecxz
inc
mov
imul
mov
pop
push
in
in
aam
cmp
pop
push
or
mov
push
dec
mov
dec
add
int
in
idivb
xchg
shlb
xor
mov
and
femms
mov
iret
pop
lret
and
rol
stc
jne
xchg
mov
lock
xchg
xor
sarb
mov
scas
mov
dec
pop
nop
test
jl
and
adc
jb
and
pop
imul
cmp
xchg
jg
jmp
jbe
and
or
xchg
and
repz
or
js
in
std
je
jne
sbb
jle
rolb
insb
out
or
jnp
pop
insb
fwait
mov
or
and
testl
lds
andb
cld
mov
aas
mov
xlat
or
testb
sbb
xchg
pop
mov
mov
pop
cmp
repnz
fisubrs
mov
lret
ds
pop
test
test
std
into
imul
mov
mov
push
sub
ljmp
pop
in
mov
loope
sbb
pop
scas
xor
movsl
int3
pop
xchg
mov
push
mov
xchg
sub
sub
test
in
mov
mov
dec
pop
lds
jbe
pop
xchg
pop
stc
inc
xor
push
in
jmp
xchg
xor
bound
cmp
xchg
cmp
inc
roll
mov
cs
les
and
test
jecxz
jo
sbb
in
inc
fiadds
lods
lods
adc
mov
lahf
loopne
aam
jecxz
sbb
fstpl
pop
dec
xor
out
jb
and
movsl
and
sbb
and
push
dec
gs
xor
mov
dec
outsb
jl
outsl
push
pusha
jns
fs
xor
push
push
movnti
sbb
jo
or
fsubp
js
shll
and
loope
push
sub
cmp
repz
jle
or
jmp
insl
int
xlat
aas
push
test
dec
cwtl
jo
push
pushf
js
pop
fisubrl
das
cmp
xchg
mov
cmpsb
dec
xchg
jecxz
push
fsubrs
mov
or
mov
cmpsl
xor
into
addl
add
stos
cmp
inc
inc
mov
and
push
in
imul
pop
aas
pop
ds
mov
std
push
inc
pop
mov
pop
mov
mov
mov
insl
inc
insb
sub
mov
shlb
mov
pop
xor
or
cmp
hlt
and
fimull
ss
jns
loope
pushf
cltd
adc
jb
adc
mov
push
int3
xlat
mov
cmp
jmp
jnp
inc
mov
insb
movsb
mov
shlb
or
or
adcb
ficoml
repnz
sub
call
cli
enter
inc
aas
sub
ljmp
inc
sbb
xchg
mov
cmp
or
aas
mov
cmc
popa
insb
dec
pop
add
adcb
mov
adc
sbb
and
mov
stos
mov
mov
fwait
dec
hlt
adc
or
movsl
test
xor
xchg
lods
adc
dec
sarl
sbb
mov
js
mov
or
aas
roll
mov
stc
bound
mov
sub
sub
sub
das
mulb
and
xorb
sbb
cmpl
ror
xchg
mov
hlt
out
jmp
das
lret
jns
mov
aad
inc
adc
loop
aas
cltd
or
test
daa
in
cld
shll
dec
cltd
mov
imul
and
loopne
test
test
clc
inc
sub
sarb
cmp
sub
shrl
scas
loope
adc
adc
lock
pop
mov
fmul
aas
fiaddl
jns
sub
in
cmp
xor
adc
mov
xchg
lahf
call
outsb
decb
ja
mov
push
mov
ret
xor
mov
adc
not
int3
js
int
xchg
loop
xor
dec
aas
lret
cld
not
dec
hlt
push
xchg
push
mov
not
ret
pushf
push
xchg
cmp
add
mov
and
dec
xor
and
sbbl
mov
push
pop
dec
mov
in
sbb
adc
mov
add
mov
mov
fwait
pop
in
fwait
dec
pushf
jae
lcall
into
xchg
std
mov
add
data16
or
gs
jmp
xchg
adc
or
sub
cmp
nopl
dec
and
or
and
cmpsb
mov
shl
leave
push
mov
pop
pushf
jbe
jo
iret
dec
or
pop
and
mov
enter
mov
aam
lock
mov
jmp
xchg
mov
inc
or
ret
sub
mov
xchg
mov
dec
pop
mov
mov
xor
pop
xchg
dec
mov
aas
mov
lods
mov
test
and
mov
pop
shl
rcl
sbb
fsubrl
pop
cmp
aas
scas
pushf
mov
stos
xlat
pop
adc
cmpsb
pop
lret
out
inc
daa
and
cmpsb
sbb
and
push
lahf
or
rclb
loopne
jge
sahf
cmpsl
mov
and
xor
mov
test
push
test
fldcw
dec
popf
seta
sub
cmpsl
xchg
cmpsl
out
sti
ret
inc
fidivl
dec
inc
js
dec
mov
sub
mov
or
jb
pushl
add
pop
fs
js
push
mov
call
push
mov
fistpl
test
xor
mov
dec
inc
roll
mov
cmp
inc
insb
int
jecxz
hlt
lahf
in
inc
mov
and
push
lcall
call
sbb
imul
nop
mov
jl
lds
outsb
bound
aaa
and
inc
mov
shl
sbb
jno
lods
mov
mov
cli
xchg
or
push
idiv
adc
jp
mov
sahf
aad
xchg
lret
push
sub
popf
jbe
add
xchg
jmp
mov
adc
or
cld
inc
push
push
adc
int
not
aad
fwait
lock
mov
mov
dec
ficompl
adc
fnsave
jo
adc
lods
daa
fimull
incl
sti
sub
jmp
loopne
push
lret
mov
addr16
jecxz
inc
inc
mov
inc
mov
jns
nop
jg
out
and
pusha
and
xchg
addb
out
dec
es
push
sahf
arpl
mov
sbb
mov
mov
insl
mov
mov
push
test
stos
out
out
add
sub
es
xor
xchg
ret
dec
js
ja
lods
test
movsb
decb
dec
addr16
out
add
ds
nop
sbb
mov
sub
mov
jl
stos
ret
push
adc
xchg
sub
daa
adc
dec
pushf
enter
adc
repnz
xchg
mov
push
add
mov
mov
and
std
orb
decl
inc
ficoml
or
dec
cmp
fsubrl
pop
jg
cwtl
lods
mov
inc
adc
mov
nop
cli
daa
pushf
pushf
enter
cmp
xor
or
mov
outsl
and
inc
mov
mov
loop
xlat
lods
rorb
adc
adc
mov
and
push
mov
pop
sbb
iret
inc
and
and
imul
loope
aas
push
addr16
mov
inc
fwait
sub
jns
add
xchg
mov
and
adc
addl
imul
cld
mov
fs
popf
xchg
mov
cmpsl
mov
pop
mov
mov
jnp
mov
xor
jecxz
mov
or
push
mov
popf
xchg
fidivrs
cmp
mov
aas
add
int
lods
inc
jne
arpl
movsb
add
sti
mov
xchg
fidivrl
fidivs
stos
enter
sbb
imulb
aam
xor
in
jae
xor
aas
cltd
xchg
cmp
aam
xchg
call
aas
pop
jl
jp
push
mov
cld
cmp
push
mov
cmp
mov
je
xor
lds
pusha
jnp
mov
sbb
stc
fwait
push
sti
imul
ret
dec
xchg
lret
rclb
push
jbe
push
test
shll
pop
jmp
pop
call
mov
sub
adcb
cmp
cmp
addr16
sub
inc
jle
cmp
into
push
mov
add
inc
mov
mov
in
hlt
neg
xchg
xchg
xchg
adc
dec
shll
pop
push
loop
jo
movsb
shll
not
mov
pop
adcb
sbb
frstor
out
jno
or
cmp
into
punpckhwd
mov
ret
sti
cmp
mov
fistps
test
push
mov
call
hlt
mov
xchg
fistpll
ret
fisubrs
jmp
cmc
or
jcxz
inc
and
xor
push
adc
sub
add
mov
pop
aam
sbb
xor
test
sub
mov
cmp
int
js
repnz
xchg
or
inc
filds
dec
test
insb
ret
movsb
jmp
mov
ds
dec
mov
aad
cmpsl
push
jne
inc
sbb
rclb
xchg
and
mov
ja
mov
ret
pop
cmp
push
and
push
sub
inc
ss
inc
sbb
outsl
mov
jmp
into
and
imul
and
xchg
psubsw
xorb
jo
or
out
rorb
add
imul
mov
fimuls
add
cmp
xor
test
push
out
sub
inc
js
sub
fdiv
subb
xchg
lret
jns
icebp
mov
frstor
jl
inc
adc
mov
rcrb
cmp
xchg
mov
pop
cmp
mov
pop
xor
inc
icebp
jbe
icebp
push
das
negb
pop
jge
pop
rcll
sub
incb
sub
dec
push
cmpl
rcl
jp
mov
fildll
xor
shll
insl
pop
fwait
add
insl
jle
pusha
inc
dec
pushf
xor
insl
push
pop
push
incl
pop
popa
repz
jp
pop
and
xchg
mov
mov
fisubs
popa
call
push
xchg
arpl
in
insb
jl
sub
jp
or
outsb
mov
push
pushf
jbe
jno
mov
mov
mov
lods
inc
insb
xor
mul
jae
xor
shl
cmp
sub
mov
jb
in
mov
xlat
xchg
mov
mov
sbb
cmp
into
xchg
setne
mov
scas
or
mov
fxch
js
mov
push
fdivrs
out
idivl
scas
outsl
xor
rclb
mov
ret
jecxz
hlt
popf
fwait
lock
scas
addr16
mov
movsl
pop
push
cli
arpl
repz
mov
push
sahf
iret
in
push
fwait
iret
or
push
pop
pushf
cmp
jp
ret
mov
stos
cmc
xlat
fwait
mov
mov
jmp
push
pop
cltd
or
pop
xorb
jmp
and
cs
fidivs
psubw
and
cld
mov
dec
aaa
outsb
clc
add
aaa
lock
and
dec
scas
push
faddl
and
pusha
mov
addb
push
fwait
lock
and
rcrb
cmp
sahf
sub
aas
arpl
or
sub
popa
pop
pop
mov
popf
mov
pop
inc
add
out
xor
mov
xor
sub
mov
outsl
scas
jae
mov
fmull
aam
loop
mov
pop
popf
loopne
imul
cwtl
push
loope
mov
dec
xor
add
sub
lcall
test
push
pop
mov
jmp
rcrb
jmp
sub
sub
push
inc
dec
outsb
ds
push
push
out
cmpsl
sahf
lahf
cmc
adc
pop
movsl
lea
icebp
inc
mov
xlat
pushf
dec
xchg
cli
xchg
sub
push
add
shll
mov
xchg
sub
adc
add
jl
xlat
sbb
dec
cmp
add
sbb
test
dec
imul
push
jg
add
lock
mov
test
add
into
xor
out
or
inc
fdivs
adc
sbb
mov
jp
cmc
cmc
mov
xchg
aas
arpl
push
inc
dec
xchg
lahf
out
sbb
scas
pop
push
inc
pop
xchg
mov
mov
mov
nop
mov
shrb
adc
mov
int
inc
push
jecxz
dec
cmpl
aad
cmpsb
ret
popa
sub
mov
fistpll
aaa
and
loopne
push
pop
inc
add
push
arpl
cmpsl
adc
mov
movsl
fmulp
adc
nop
and
cltd
push
ss
rol
fisttpl
pop
rcrb
mov
lret
or
test
ficoms
mov
loope
pop
outsl
loopne
mov
and
repz
mov
cmp
adc
jp
xor
imul
pop
ljmp
inc
mov
movsl
bound
push
push
leave
pop
loopne
dec
aad
sbb
mov
add
daa
clc
mov
fisubs
test
mov
jnp
mov
mov
and
xchg
daa
and
fwait
fs
and
jnp
dec
rolb
xor
ds
sub
adc
inc
xchg
lret
es
and
sbb
and
push
jge
xchg
and
jnp
and
mov
shl
outsb
and
loope
jle
ret
pop
xlat
mov
int3
inc
cmp
jg
loop
jp
nop
movsl
jno
lahf
pusha
ficoms
popa
pop
pop
into
mov
mov
enter
push
in
pop
cmpl
inc
adc
sahf
fimull
pop
rol
cwtl
outsb
jo
mov
out
cmp
je
jp
negl
in
or
inc
mov
jl
out
data16
adc
mov
dec
ljmp
push
hlt
ds
insb
mov
loopne
mov
iret
jbe
jmp
push
imul
jmp
pop
cmpsb
adc
jl
sub
dec
mov
adc
lods
sub
mov
lret
cmc
pop
inc
xchg
sub
mov
mov
mov
dec
push
repz
xor
jecxz
add
and
clc
push
fcmovnbe
pop
icebp
es
cmp
push
nop
iret
and
add
jne
cltd
push
push
add
or
add
test
mov
xor
push
cmp
aas
out
xchg
enter
xchg
shrb
bound
movsb
icebp
mov
sub
mov
or
sbb
mov
jl
nop
xor
push
mov
nop
sahf
jae
jg
mov
mov
or
std
xor
sbb
sub
lahf
std
mov
and
xor
dec
cmpsl
rcl
insb
mov
pop
call
mov
pop
sub
lods
cmp
inc
or
repz
idivb
gs
push
xchg
dec
sub
xchg
fwait
jp
ret
fmull
pop
mov
daa
call
inc
inc
fstl
inc
add
cwtl
mov
inc
pushl
pop
push
pop
push
sbb
loop
int3
lds
ret
mov
icebp
lods
sarb
mov
fsubr
inc
lock
imul
xlat
std
and
push
lret
sub
xor
add
and
idiv
mov
jb
test
xchg
fisttpll
mov
dec
push
sbb
ljmp
mov
cltd
or
add
outsb
jg
hlt
dec
push
add
dec
lock
flds
xchg
daa
je
sahf
sub
lret
push
xchg
ja
adc
test
js
shl
xor
push
insb
pop
pop
into
mov
add
xchg
and
mov
lcall
pop
into
or
jbe
test
pop
repnz
mov
cmc
jb
mov
pop
and
mov
xchg
lods
lock
jno
call
mov
in
fists
sarl
lods
push
jo
sbb
mov
sub
inc
cmp
mov
cwtl
pop
ret
aad
inc
aam
sahf
pushf
in
in
aam
loop
rcll
adc
mov
js
lods
xor
movsl
aas
lea
xchg
mov
incl
jge
dec
push
mov
repnz
push
mov
data16
xchg
mov
js
or
adc
fistl
fdiv
xor
mov
nop
insl
add
cmpsl
dec
xor
js
xor
push
and
xchg
pushf
in
leave
inc
pop
dec
sub
scas
or
or
out
gs
pop
enter
xchg
lods
mov
bound
or
mov
in
insl
ja,pn
pop
inc
push
dec
jns,pt
lahf
xchg
jmp
push
cld
cmpsl
orb
scas
adc
xor
jne
cmpsl
mov
mov
repnz
cs
fdiv
dec
lret
pop
sti
lds
xlat
int
xchg
jecxz
push
xor
imul
out
push
xchg
add
das
clc
lcall
add
daa
sbb
push
xor
add
hlt
and
inc
mov
cmp
repnz
in
insl
fldenv
gs
loop
cmp
stc
cmp
loop
mov
or
daa
aam
jb
out
test
out
into
lret
mov
ret
push
jp
lock
add
jge
gs
stos
mov
movsl
xchg
addr16
rcll
int
dec
mov
cmc
jle
pop
push
cld
in
sub
lcall
imul
or
jne
pusha
adc
sahf
call
sub
rol
xchg
pop
dec
mov
loop
dec
adc
aad
je
sahf
mov
add
push
mov
add
mov
add
jp
pop
loop
adc
movsb
addr16
cmp
gs
shll
ja
mov
mov
sbb
push
xchg
xchg
mov
jne
mov
addr16
out
dec
test
popf
imul
iret
xlat
xchg
fcom
testl
mov
arpl
cmp
fcmovu
fadd
hlt
imul
pusha
lods
inc
xchg
pop
orb
scas
mov
inc
add
stos
aam
fimuls
fs
shlb
push
mov
jb
jb
xchg
push
sbb
adc
cmp
xchg
test
jge
mov
sub
xchg
test
xchg
adc
add
cmp
jb
sldt
add
add
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
sub
mov
movb
popa
jmp
insb
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
and
jl
sub
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
or
or
push
std
adc
push
mov
fs
add
insl
imul
jno
adc
cwtl
movsl
aas
cld
jle
adc
adc
and
sub
fs
out
add
mov
jge
cwtl
ljmp
cs
jmp
xor
jp
xchg
or
ja
sbb
and
push
shlb
mov
push
gs
jo
mov
pop
push
lahf
mov
decl
cs
js
pop
fsubrl
push
idiv
mov
in
cmp
inc
pop
add
or
or
test
mov
or
mov
pop
loop
in
ret
jo
and
subb
call
je
addl
fisttps
dec
mov
dec
aad
jmp
mov
add
out
sbbb
popa
orb
or
xor
or
sbb
incb
call
inc
jmp
fsubl
call
inc
or
add
stos
mov
pop
or
test
or
rol
mov
inc
mov
cmpl
lea
fdivs
or
pop
mov
js
rcrb
jbe
or
dec
inc
inc
shll
mov
inc
cmp
jb
mov
sub
popa
jle
mov
and
xchg
stos
mov
add
sbb
ja
clc
or
jl
adc
pop
cmpsb
dec
rcrb
push
xor
aas
add
xor
or
mov
adc
add
mov
test
cmpsb
frstor
mov
push
lea
push
push
mov
xor
and
xor
jne
mov
int3
ret
sub
xor
loopne
sarl
add
jmp
leave
roll
add
push
or
pop
mov
jo
and
jne
and
adc
add
adc
movb
int
ret
jecxz
loope
jns
aaa
mov
popf
sub
je
lret
push
and
and
movsl
fsubrs
jmp
fimuls
mov
and
xor
add
dec
mov
push
out
cli
shlb
out
add
xor
aas
cmpb
je
test
jge
add
add
arpl
and
shlb
mov
jg
xor
repz
test
je
or
ret
out
sub
int3
add
pop
pop
mov
pop
out
data16
xor
or
or
or
and
or
jb
add
jbe
andl
add
and
pop
inc
insl
sub
fbld
and
cmp
mov
jge
xor
xchg
or
dec
cld
inc
repz
jmp
pop
clc
cmpsb
pop
insl
adc
gs
hlt
inc
adc
lock
cmpl
loopne
ret
add
fisttpl
cwtl
lock
cmp
shr
mov
cli
or
jp
cli
ret
jne
push
or
inc
xor
and
add
pop
lock
in
arpl
jb
data16
jbe
in
stos
enter
rorb
push
cld
jb
subl
or
dec
jo
or
cmova
cli
cmp
mov
sub
mov
cmp
or
gs
mov
jmp
nop
sbb
adc
mov
out
test
das
jecxz
gs
and
pop
pop
cwtl
ljmp
clc
in
pop
cmp
mov
es
jmp
sbb
pushf
test
in
push
adcb
pop
inc
sbbl
xchg
adc
push
mov
pop
push
push
ret
addr16
icebp
cwtl
loopne
xchg
pop
pop
inc
mov
xor
cmpb
pop
pop
jbe
sarl
cmp
inc
xchg
or
push
adc
add
in
nop
push
nop
popl
dec
lods
xchg
push
loopne
roll
ret
mov
jne
popf
adc
repz
cmp
aaa
or
or
mov
outsl
and
inc
add
mov
or
ja
xor
inc
adc
shlb
or
sarl
sub
seto
xor
add
jle
xor
test
xor
and
mov
cmp
add
mov
rorb
xor
mov
les
mov
stos
stos
push
mov
adc
and
popaw
pop
sub
stos
aad
adc
mov
xchg
dec
inc
pusha
fsub
scas
cwtl
imul
xor
add
and
in
clc
and
sbb
add
aas
add
pop
mov
sbb
ficoml
popa
ljmp
add
add
mov
inc
mov
inc
or
bound
add
sub
movsb
popf
inc
add
out
jecxz
xor
lret
jl
sub
enter
or
hlt
push
xchg
or
jp
inc
push
add
jno
jge
or
or
xor
xchg
add
iret
nop
out
sti
stos
inc
inc
inc
push
sbb
les
inc
inc
push
les
xor
or
mov
add
call
add
adc
or
and
stc
pop
inc
xchg
push
and
xor
insb
roll
push
jb
add
aaa
cmc
and
ror
pop
es
ret
add
pop
pop
mov
icebp
in
ss
or
cmp
or
rolb
test
out
rorb
nop
js
pushf
add
sub
clc
xor
mov
test
adc
pop
repnz
lret
shll
cmpb
faddl
xor
or
mov
adc
mov
jae
adc
add
sbb
leave
lock
sti
rclb
and
sub
lcall
inc
leave
mov
or
sbb
mov
insl
test
das
ljmp
xchg
dec
out
add
or
loopne
in
adc
mov
cmp
cwtl
inc
in
push
push
mov
mov
enter
add
xchg
decl
roll
inc
mov
outsb
mov
repnz
add
push
xchg
dec
add
fs
add
scas
xchg
test
repz
roll
push
insb
cmpl
sar
sbb
std
xchg
daa
inc
add
mov
add
or
push
xchg
jbe
add
mov
ret
insb
ja
test
aaa
pop
add
xchg
divl
mov
rol
push
mov
pop
and
xor
mov
jmp
push
and
mov
sub
int3
scas
add
and
cmp
stos
xchg
and
mov
xor
sbb
dec
pop
loop
mov
rclb
xchg
xor
cmp
jp
repnz
pusha
popa
cltd
in
mov
clc
imul
mov
xchg
xor
cmpsl
sbb
stc
add
sbb
jp
mov
adc
xlat
test
popa
sbb
fcompl
movl
add
inc
or
in
fldl
add
mov
xchg
xchg
cmpsl
imul
xchg
add
fisttps
push
cltd
inc
xor
sahf
ja
aam
cmp
mov
cmp
cmp
inc
add
jnp
in
jae
popa
xchg
sub
or
jbe
cmp
loope
mov
xchg
je
int
lea
sarb
push
sbb
rol
enter
pop
cmp
mov
adc
jecxz
icebp
xor
inc
ret
out
std
xor
jb
js
sub
mov
out
std
push
xchg
pop
cmpsl
push
pop
inc
adc
add
pusha
data16
leave
cld
add
inc
xchg
in
add
pop
addl
adc
or
repnz
outsb
add
jp
push
add
cmpsb
nop
jecxz
push
les
shrb
out
and
add
pop
add
loope
rcll
cmp
hlt
clc
fisubs
outsb
pop
stc
jg
mov
nop
inc
dec
lea
mov
or
sbb
dec
sbb
ds
movsl
add
dec
out
fldl
xor
cmp
mov
idivb
stos
pop
and
lods
inc
add
ret
aas
push
test
cwtl
add
inc
dec
xchg
inc
and
push
jne
mov
inc
adc
adc
jbe,pt
sbb
or
mov
subl
xor
add
nop
push
fucomp
xor
clc
lods
int
jae
cmp
repnz
mov
cmp
cli
mov
dec
adc
jecxz
shl
subl
adc
mov
add
pop
xrelease
aad
mov
in
cli
add
jnp
sub
cs
outsb
xlat
add
stc
push
inc
les
cs
popl
jns
arpl
dec
pop
xor
subb
add
popa
cltd
add
mov
repz
and
push
dec
outsb
mov
enter
xchg
repnz
push
cmp
jb
add
pop
push
cmc
shll
or
sub
and
nop
jo
insb
shlb
loopne
gs
outsb
les
cmp
add
or
inc
mov
or
sbb
rcrb
repz
sub
add
ror
sub
and
inc
faddl
ret
dec
ljmp
inc
push
pop
dec
mov
jns
push
push
lock
stos
adc
out
add
mov
sbb
dec
xor
xchg
outsb
dec
cld
or
mov
shl
icebp
xchg
rclb
ja
bound
or
mov
in
rcrb
aas
outsb
pusha
leave
mov
inc
ljmp
leave
pop
dec
stos
pop
adc
clc
test
pop
sbb
jg
xchg
fstpl
jl
sbb
loop
sub
rcr
out
nop
ds
mov
pop
scas
jl
add
or
push
jmp
jl
pop
sub
mov
daa
add
fisttps
icebp
out
dec
sbb
and
and
add
adc
adc
xchg
inc
sbb
pop
xchg
mov
aas
jo
and
mov
mov
mov
mov
inc
cmp
test
popa
dec
cltd
pop
insb
xadd
mov
sbb
dec
push
arpl
sbb
xchg
arpl
sub
rclb
cmpsb
adc
hlt
adc
xchg
mov
and
mov
mov
nop
aaa
mov
roll
lods
nop
cmp
or
popa
cmpsl
cmp
cltd
push
add
out
mov
mov
mov
pop
sarb
rol
fldenv
push
out
inc
xor
dec
sub
inc
pop
jmp
subb
xchg
push
aad
and
mov
in
sbb
mov
mov
clc
cs
fmuls
pop
jg
jo
ljmp
scas
cld
add
lcall
sarb
adc
add
push
jne
pusha
orb
xchg
jbe
and
test
push
adc
fimuls
pop
movsl
cmp
mov
sbb
or
fmuls
pop
jno
arpl
pusha
jmp
leave
pop
movsb
mov
inc
repnz
rorb
sarl
lods
cmp
lock
popf
pop
rorl
loop
andb
push
or
and
mov
and
mov
in
aas
xchg
les
adc
add
inc
fs
cmp
add
xchg
mov
mov
iret
mov
dec
mov
cwtl
mov
lahf
inc
std
div
out
add
subb
jmp
fcoms
adc
aad
add
cmp
inc
enter
sbb
aam
adc
push
inc
or
addl
pop
or
mov
dec
or
loopne
push
inc
shrb
ja
push
repz
sub
pop
and
subl
movsl
nop
pop
repz
in
xorl
pop
subb
sbb
xchg
in
or
inc
xchg
lods
daa
adc
pusha
mov
add
fsubp
pop
or
subl
and
jecxz
xchg
das
inc
xchg
mov
xchg
xor
popa
in
data16
push
or
mov
mov
pop
inc
jbe
cs
add
incl
pop
adc
pusha
cmp
mov
pop
sub
push
loope
pop
mov
mov
jp
and
add
sti
rcl
fsubs
add
clc
and
xor
pop
pusha
dec
jns
xchg
movsl
mov
cs
mov
add
inc
loopne
inc
mov
adc
cltd
push
inc
add
mov
add
mov
les
fsts
test
and
mov
push
aas
pop
out
add
jg
mov
dec
adc
aas
inc
shll
mov
jl
push
push
and
enter
orl
jmp
push
fnstsw
out
add
push
test
imul
pop
enter
je
les
imul
add
test
mov
insb
repnz
xchg
cwtl
or
scas
fnstenv
test
sbb
mov
sbb
adc
inc
lds
lock
xchg
insb
mov
sarl
jne
mov
call
xor
jmp
pop
mov
or
pop
pusha
test
aam
sub
mov
flds
adc
lds
mov
pop
cli
aad
fdivrs
xlat
adcl
pop
jbe
cmp
sbb
fs
or
xor
test
test
and
cmp
sbb
les
int
xchg
bound
jo
call
getsec
aad
cmp
push
fdivrl
inc
push
xchg
dec
push
mov
sub
hlt
addr16
xchg
dec
mov
jle
push
sbb
sahf
rol
mov
push
sbb
ss
mov
cmp
push
popa
dec
ds
sub
adc
mov
xor
cmp
or
les
das
cmp
and
arpl
nop
cmp
test
test
dec
pop
sbb
int3
fistpll
push
lahf
repnz
pop
xor
je
fidivrs
mov
pop
lea
cwtl
xchg
cmp
push
test
les
lret
push
adc
sub
fnstsw
shlb
xchg
fs
fsts
xor
test
sbb
les
mov
push
xor
fisttps
mov
inc
pop
loopne
scas
pop
xchg
adc
or
sbb
xor
jg
mov
xor
loop
repnz
aas
cmp
orb
or
pop
xor
jl
cld
mov
add
divb
cmp
jno
add
scas
jl
jmp
into
adc
xor
test
add
push
sbb
lds
out
js
cmp
ja
pop
inc
fiaddl
or
inc
xor
ret
add
aad
mov
clc
add
ret
or
fdivs
rcrb
push
fnsave
sub
jo
jge
insl
push
xlat
push
pusha
pop
movl
cmp
xor
jl
sub
outsl
cld
imul
in
dec
and
add
mov
or
add
addr16
fldcw
jge
jl
pcmpeqw
adc
cltd
sti
push
and
in
add
jo
xchg
mov
pusha
xor
and
adc
xchg
mov
mov
cld
leave
add
adc
outsl
add
movsb
jno
andb
std
dec
or
add
mov
data16
jae
jns
xchg
sub
add
sub
or
push
pshufw
ret
cmpsb
mov
je
inc
and
xor
jne
outsl
popf
cs
orb
dec
in
pop
sbb
inc
sub
mov
xor
jo
jp
push
cmp
stos
lock
ja
mov
xchg
int3
pop
and
push
outsl
mov
jle
or
pop
aad
or
cmpl
add
jge
add
mov
add
sbb
pop
mov
add
push
add
test
fdivs
add
js
outsl
add
cs
fs
add
dec
or
adc
inc
add
movsb
scas
rclb
inc
test
push
xor
and
push
adc
lea
addr16
jecxz
call
jmp
call
cmp
jg
xor
add
pop
xchg
jmp
cmp
xchg
or
push
jle
ljmp
jbe
fbstp
shlb
and
fcoml
and
mov
cmpsb
cmc
pop
test
addb
mov
ret
mov
sub
xor
push
fidivs
add
fabs
dec
sti
enter
mov
jle
pusha
xor
cltd
sbb
add
add
cmp
jmp
les
pop
mov
popa
out
sbb
push
mov
repz
int3
outsl
rorb
nop
push
jmp
enter
inc
mov
sbb
inc
je
mov
or
fsubrl
add
test
mov
cmp
not
adc
aad
loopne
dec
push
int3
ljmp
add
cli
push
xchg
cmp
add
insb
lea
pop
or
push
inc
test
outsb
rolb
cmp
roll
sub
mov
aas
pop
cld
add
lock
sbb
mov
aad
jnp
test
mov
mov
xor
pop
aam
pop
jno
jb
out
adc
dec
add
inc
adc
add
aas
xlat
jmp
loope
rorl
imul
xlat
roll
push
lahf
jp
orl
hlt
and
insb
aad
imul
test
cmp
test
cmp
and
mov
mov
push
pop
sbb
inc
or
mov
fisttps
xchg
or
push
les
jno
cli
test
add
push
imul
xchg
clc
mov
inc
pop
aaa
push
cltd
int3
or
clc
cmp
inc
or
mov
pop
add
cmp
cmp
xlat
adc
adc
in
dec
pop
call
clc
or
and
jp
dec
sub
orl
insl
fisttpl
sub
mov
ret
sub
hlt
outsl
mov
push
fsubl
and
jmp
inc
dec
or
mov
add
sbb
fstl
mov
pop
and
fcoml
add
xor
inc
xchg
popf
dec
xchg
inc
add
or
pop
push
sbb
sbb
cmc
test
push
xlat
clc
faddl
fisubs
mov
inc
adc
inc
sbb
inc
adc
jl
add
jge
jne
jecxz
inc
imul
outsb
inc
dec
mov
add
mov
je
add
out
sbb
cmp
sub
xlat
nop
les
xor
sbb
xchg
or
and
aad
and
xchg
mov
and
mov
mov
inc
or
sbb
jbe
adc
xlat
enter
push
adc
inc
aas
add
mov
jecxz
rorb
cwtl
and
nop
sub
inc
loopne
js
aaa
loopne
xchg
mov
aad
jmp
lea
ret
sub
je
dec
pusha
sbb
inc
adc
sub
test
and
add
shlb
xor
pop
lahf
pop
mov
or
sbb
test
lods
cmp
mov
std
mov
icebp
or
sbb
xorb
mov
pop
icebp
inc
adc
adc
dec
add
mov
jno
or
add
inc
sub
pop
in
mov
fmull
push
mov
mov
push
xor
dec
loopne
sbb
loope
daa
inc
neg
sbb
mov
inc
push
xor
out
xlat
or
lret
es
fimull
push
inc
lock
jle
push
sbb
stos
mov
pop
orb
arpl
inc
in
inc
or
nop
je
or
add
xchg
rcrb
lock
adc
mov
pop
xor
loopne
pop
fists
dec
das
pop
inc
cmp
test
add
inc
or
add
inc
ret
out
nop
mov
popf
and
movd
add
icebp
xchg
mov
sahf
xchg
lock
sbb
lret
ljmp
add
fsubr
and
xchg
shr
mov
ret
daa
mov
nop
sahf
loope
and
dec
xchg
and
dec
cld
cmc
pop
popa
out
scas
dec
jp
and
or
jl
or
mov
add
jge
ss
adc
cmp
dec
add
dec
cmpsl
rorb
jecxz
sahf
sbb
xlat
rolb
das
pushf
loop
clc
add
fs
int
jo
sbb
fst
lods
jg
or
mov
out
test
cmp
cmp
or
ds
pop
mov
inc
in
xchg
clc
and
mov
scas
lds
adc
test
cmc
jmp
ja
cmp
js
push
push
and
dec
and
clc
test
dec
popf
mov
xchg
clc
dec
mov
add
mov
js
dec
add
mov
mov
mov
mov
xchg
fistps
cwtl
inc
dec
fstps
adc
sbb
adcl
and
mov
shr
mov
je
sbb
loopne
aad
cmpsl
mov
or
cmpsb
fs
ss
aad
and
fiaddl
faddl
cmp
cltd
repz
dec
add
fdivrl
adc
mov
mov
jae
icebp
push
inc
andl
clc
inc
add
movsbl
aam
lock
je
xor
pop
cld
cmp
add
mov
and
nop
add
push
and
es
mov
daa
out
and
mov
add
and
xlat
ficomps
xchg
add
nop
dec
xchg
es
mov
cwtl
in
cs
sub
push
jbe
and
inc
adc
outsb
jbe
swapgs
fistps
idivb
pop
popa
dec
adc
dec
pop
js
adc
aas
test
test
lods
data16
add
aam
movsb
jp
add
mov
sbb
mov
adc
sbb
cltd
or
cltd
adc
ret
lcall
mov
repnz
jbe
inc
nop
and
add
dec
or
jno
popl
or
jmp
xchg
xchg
dec
out
xchg
jbe
inc
push
add
loopne
in
jo
inc
pop
or
sub
rorb
ds
push
mov
ret
and
xchg
fimuls
sbb
rol
sub
sbb
ljmp
pop
and
imul
je
and
hlt
inc
jecxz
leave
pop
cmpl
rcll
stos
mov
fs
mov
pop
les
mov
popf
cmp
mov
or
xor
adc
push
jmp
adc
sub
adc
push
add
andb
xorb
and
adc
lods
dec
inc
roll
rolb
mov
aaa
xchg
inc
orb
pop
mov
aad
ljmp
add
test
mov
imul
iret
hlt
inc
nop
pusha
mov
sub
sbbl
in
call
mov
add
test
xor
imulb
and
or
sub
imulb
aas
push
mov
lea
dec
js
jb
mov
inc
sub
pusha
dec
dec
pusha
push
in
xlat
adc
scas
jg
cli
xchg
lsl
xor
test
movsl
in
push
xor
inc
ror
dec
add
jno
sub
jl
ret
xchg
ret
pop
mov
adc
test
add
xchg
lods
into
scas
and
and
push
int3
push
repz
fmulp
inc
add
mov
xchg
xchg
mov
pop
fisttps
ret
in
sti
scas
enter
popf
nop
rcl
mov
xchg
inc
or
cwtl
pushf
add
add
cli
mov
mov
push
hlt
pop
mov
inc
scas
or
push
push
inc
cmp
mov
sbb
push
mov
add
sbb
pop
add
rcrb
bound
pop
and
xor
nop
flds
push
mov
in
sub
sarb
lock
sbb
aam
cmp
into
test
cmp
mov
adc
jbe
jge
xlat
sub
xchg
dec
push
imul
insb
push
xor
cmp
fistpll
xchg
loopne
jo
jl
push
inc
or
add
pushf
or
dec
push
in
andb
pop
xchg
jb
add
rcrb
and
int3
ljmp
or
fbld
dec
inc
xchg
push
test
cld
mov
loop
add
ret
mov
in
dec
fistps
adc
mov
into
sbbb
pop
es
cmp
xor
hlt
jecxz
js
aam
test
loope
icebp
je
out
mov
inc
xchg
inc
add
in
lods
daa
jo
lock
add
pop
bnd
shlb
push
lcall
cmp
sub
xchg
ud2
ret
adc
hlt
sbbb
push
daa
pop
and
push
loope
popf
add
add
push
mov
mov
push
fcompl
pusha
xchg
push
sti
xlat
or
adc
lods
scas
jo
out
add
enter
sub
add
call
lock
add
mov
jg
add
xchg
mov
rcrl
mov
movsl
outsl
add
adc
faddl
cmp
cmpsl
cmpsb
pop
outsl
dec
hlt
cmpsb
xor
insl
xorb
push
icebp
mov
adc
clc
add
xchg
sub
jns
and
add
mov
mov
movsl
les
mov
mov
or
shll
enter
sbb
in
dec
popf
cltd
push
scas
mov
insb
clc
sub
cld
shlb
pusha
js
sbb
int3
and
inc
push
mov
cmpsb
insb
in
mov
add
or
sbb
push
and
pop
aam
jl
aam
xchg
cmp
loope
popf
xchg
mov
clc
pop
stos
aad
xchg
push
fnstsw
pop
dec
mov
fnstenv
dec
mov
cmp
das
lahf
push
cwtl
or
cld
test
push
xor
push
mov
add
mov
xchg
clc
sbb
mov
hlt
mov
or
add
rclb
lods
sub
xchg
add
or
and
and
add
cltd
adc
jge
mov
and
mov
loope
in
sbb
adc
nop
dec
xor
les
push
movsb
fs
inc
pop
mull
xchg
jnp
inc
outsb
dec
xor
outsl
cmp
inc
test
ret
inc
sub
pop
adc
lock
insb
nop
xchg
inc
mov
loop
push
mov
clc
ficompl
push
stos
jl
pop
add
aad
jo
dec
loope
test
pusha
je
or
test
cmp
pop
fsubrs
loop
add
pop
scas
or
pop
aaa
xor
mov
jb
or
adc
lcall
pop
les
mov
push
xchg
pop
test
sbb
xlat
jno
cmp
ljmp
cmpb
int
fiadds
mov
loopne
mov
or
or
xor
adc
xor
insl
inc
mov
scas
adc
lcall
mov
xchg
add
out
ret
add
sbb
int3
cmpb
sub
subb
mov
and
mov
xor
and
pop
fcoml
jo
popf
test
adc
fmull
test
insl
xor
jecxz
fisttps
les
sub
add
push
das
and
test
pop
mov
xor
mov
out
or
ljmp
popf
in
push
mov
repnz
dec
pusha
mov
cli
xor
mov
ret
dec
xchg
in
les
inc
pop
add
or
rolb
push
repnz
and
add
inc
enter
mov
sahf
cmpb
icebp
jae
add
jp
cmp
jecxz
shrb
adc
add
int3
cmp
call
rol
scas
add
push
stos
and
xchg
orb
inc
add
lret
out
jns
adc
pop
sbb
fwait
cld
js
jmp
or
stos
lret
imul
and
push
movsb
fdecstp
and
add
inc
pop
in
dec
nop
ret
in
sbb
add
rol
add
push
cwtl
sub
push
fcomps
inc
dec
out
push
aam
push
mov
sub
ficoml
push
test
clc
mov
faddl
je
out
rcr
sub
xor
or
mov
add
nop
out
mov
in
repnz
add
xchg
mov
cmp
lcall
aaa
adc
orl
stos
dec
xchg
sub
sbb
mov
ret
rcll
pop
aam
mov
loop
xor
adc
push
mov
rcl
outsl
outsb
rolb
jb
movsb
fcoml
lcall
pop
ret
and
js
dec
fs
inc
jp
popa
pop
pop
nop
fadd
mov
in
push
dec
cltd
sub
lds
mov
stos
out
cmpsb
mov
nop
aam
incb
inc
mov
cmp
sbb
jg
mov
enter
fcompl
inc
lahf
cmpsl
les
in
scas
aam
dec
add
or
gs
push
dec
rcrb
xor
add
ret
fsubrp
insb
adc
das
int3
mov
xchg
lret
cmpsb
or
adc
mov
or
stos
rcrl
das
and
and
sbbb
adc
add
fisubrs
xor
les
sbb
sbb
xchg
test
fdivrl
cmpsl
mov
and
rolb
movsb
inc
fwait
adc
mov
add
adc
push
fldcw
cmp
shlb
and
sub
inc
mov
pop
loop
in
fdivr
das
mov
push
cmp
sub
mov
adc
pop
push
pop
jns
sbb
jge
dec
jne,pt
mov
mov
out
clc
xor
jnp
std
sar
push
fcomps
ret
add
push
fwait
or
jmp
inc
xchg
and
test
sahf
pushf
xorb
cmp
das
push
nop
push
mov
sub
xchg
insl
mov
sbb
dec
inc
jo
stos
mov
adc
push
imul
pop
dec
dec
jle
loopne
les
jb
adc
and
mov
or
jae
jns
jno
sbb
fidivrs
adc
inc
sub
icebp
mov
sub
mov
adc
cmp
jmp
inc
popf
dec
shl
pop
add
and
nop
loopne
shlb
xor
out
inc
movsb
in
or
jno
adc
sub
add
imul
les
or
test
ficoml
ss
popf
fcomip
and
orb
cmpb
lods
sub
dec
jmp
inc
jb
xor
test
loop
adc
inc
and
setbe
push
mov
jae
pop
nop
sbb
rorb
cmp
sbb
repz
add
lcall
cs
xlat
push
or
adc
ret
xorb
in
dec
insb
xor
mov
sub
push
sbb
cmp
popf
mov
fdivrl
push
in
and
mov
test
outsl
ficoml
adc
cltd
lcall
inc
push
jns
enter
jge
add
cs
insl
inc
adc
sbb
push
pop
xor
mov
xchg
ret
mov
xchg
and
sbb
insb
adc
inc
xchg
dec
mov
and
loope
sbb
sub
jae,pn
mov
xchg
and
loope
inc
mov
sbb
loopne
fwait
pop
lret
or
incb
mov
push
push
pop
inc
or
add
push
scas
test
dec
xor
xchg
dec
mov
mov
inc
xchg
mov
shll
ret
push
js
adc
xor
cmp
cmpsb
mov
and
dec
and
je
sub
test
loopne
inc
pop
jg
int3
add
loop
dec
mov
mov
pop
mov
add
and
inc
adc
mov
or
adc
add
sub
jmp
push
dec
lcall
scas
outsl
or
inc
push
popf
movsb
mov
mov
add
dec
and
xor
movl
fistpll
adc
in
ror
or
add
aas
inc
xchg
jb
test
loopne
pop
nop
out
rclb
fldcw
adc
cmp
mov
push
fcoml
roll
outsl
mov
mov
jle
xorb
mov
bound
adc
dec
sbb
xchg
test
cwtl
inc
add
dec
ja
mov
and
mov
sbb
jns
mov
adc
aam
cmp
pusha
stos
aas
call
lcall
add
shlb
jmp
xchg
inc
xor
push
loop
xlat
je
movsl
rorl
pop
adc
in
shll
mov
lret
push
or
pop
add
sarl
fwait
ret
fbld
xlat
mov
enter
inc
mov
add
cmp
out
or
dec
mov
fs
test
fcomi
xchg
and
jmp
inc
fdivrs
ret
in
pop
js
mov
repnz
mov
jb
sub
mov
jbe
mov
enter
scas
and
in
out
push
or
push
jne
call
xchg
xor
sub
add
loopne
sub
out
test
sbb
push
cs
or
shlb
pusha
aas
incb
jae
inc
out
pop
jnp
punpckhwd
out
ffree
pop
add
or
and
lahf
xor
cli
add
andl
pop
mov
test
inc
mov
inc
jne
inc
push
mov
stos
sbb
lahf
shrb
push
out
mov
adc
aad
lods
pop
and
xchg
or
ja
in
icebp
pop
lods
pop
sbb
and
xor
cwtl
xchg
in
or
mov
bound
out
clc
test
sub
add
sub
mov
push
inc
dec
add
aam
mov
mov
test
adcl
into
fcmovb
xchg
imul
loopne
cmp
js
mov
adc
or
inc
mov
gs
lcall
sbb
pop
xor
aad
pop
leave
adc
push
or
fcoms
add
mul
push
iret
aam
shl
lock
cli
sarl
adc
test
enter
aad
xchg
fsubs
aad
mov
add
scas
jno
fwait
mov
mov
push
out
popa
loop
loop
xor
push
pop
or
call
dec
mov
add
es
sub
aad
scas
dec
rorl
in
inc
cwtl
xchg
xor
sub
mov
rorl
cmpsb
es
scas
loopne
inc
mov
or
sbb
repnz
lret
xor
js
adc
and
popf
pop
popa
in
pop
imul
and
sbb
iret
mov
daa
and
movsb
cwtl
fmuls
dec
cmpsb
add
add
adc
rcrb
mov
dec
sub
in
and
add
aad
sub
or
sbb
rcrb
mov
jmp
mov
xchg
inc
das
fs
ltr
mov
test
jae
push
es
cmp
add
add
add
push
pop
dec
fiaddl
sub
sub
rorl
subb
push
in
nop
sbb
pop
sbb
sbb
or
ret
jns
add
lret
inc
push
je
ret
sub
sub
repnz
dec
addr16
daa
adc
movsb
inc
add
sbb
pop
popa
pop
fcomip
sbb
push
or
cmp
sarl
sbb
or
cmp
add
inc
cmpsb
stos
xor
and
add
loope
in
mov
sub
pop
clc
mov
dec
cmp
je
jmp
add
pop
adc
je
hlt
mov
sbb
insb
loop
repnz
xor
scas
loop
or
add
loop
cmpsb
xchg
loopne
mov
push
cmp
push
and
loope
cmp
ret
xor
shl
jae
pop
mov
fmull
jle
dec
mov
dec
pop
adc
or
or
mov
mov
out
imul
addb
stos
xor
add
pop
jmp
ds
jle
add
lahf
pop
aam
adc
push
jl
mov
xor
fdivrl
push
lret
push
inc
adc
hlt
ret
push
sub
lods
or
cmp
pushf
push
adc
test
addr16
jmp
dec
sbb
add
pop
cmp
dec
orb
or
mov
je
xlat
enter
mov
fimuls
fs
jno
sbb
add
icebp
popf
cmp
fistps
sub
mov
cmp
je
stos
pop
sarl
sahf
sbb
nop
mov
cmc
outsb
idiv
dec
xchg
in
jl
mov
push
fs
pop
jmp
lock
mov
divb
xor
cmp
bts
inc
in
push
dec
sahf
pop
popa
xchg
jge
push
adc
insb
loopne
std
mov
xor
or
cmp
test
and
cwtl
inc
ss
mov
shlb
add
add
pop
pop
loopne
mov
rcr
inc
sub
sub
mov
pop
cmp
mov
pop
add
dec
mov
aaa
jecxz
mov
imul
mov
and
xor
jne
add
mulb
push
cltd
xor
cltd
inc
mov
inc
mov
fmull
idivl
mov
ret
movsb
je
pushf
add
pop
popa
mov
pushf
or
addr16
pop
cmp
mov
cmp
das
sbb
dec
test
cmp
inc
cli
mov
aad
add
adc
fadds
sbb
fnstcw
subb
mov
pop
adc
ljmp
movsb
or
sbb
addl
sub
xor
pop
jns
jl
mov
aam
or
adc
push
add
and
adc
andb
stos
push
adcb
cmp
jbe,pt
add
sub
or
scas
pop
sbb
and
adc
inc
orb
imulb
push
push
and
nop
hlt
pop
test
jp
enter
push
cmp
iret
cmpsl
loop
jo
mov
pop
inc
das
add
andb
push
out
adc
jge
jl
and
mov
push
stc
lods
mov
cmp
in
imul
sbb
pop
stos
in
xor
mov
add
mov
fwait
iret
imul
fists
test
clc
xor
xor
mov
jmp
dec
lds
xor
push
outsb
cltd
popa
gs
in
popa
mov
enter
xchg
and
mov
mov
pusha
rorb
and
push
mov
jnp
push
and
mov
sub
and
jns
clc
xchg
add
cld
sti
xchg
push
fdivl
mov
push
icebp
inc
push
push
push
jecxz
cmp
add
jo
push
add
stos
hlt
xchg
sub
js
repnz
je
cld
xor
dec
fldl
and
sbb
cmp
ret
push
mov
pop
mov
rorl
mov
icebp
pop
cmp
sbb
inc
add
test
or
sahf
cmp
sub
nop
aam
in
or
cmpsb
gs
jo
add
mov
cmp
push
sbb
cmpsb
dec
sub
mov
les
add
mov
dec
popa
hlt
add
fstp
imulb
hlt
or
pop
xor
sub
subb
andl
push
out
or
test
mov
nop
push
jp
xor
push
and
add
mov
add
inc
shll
rorl
enter
xchg
fsubs
imul
int3
mov
inc
inc
lea
adc
xchg
inc
sub
addb
pop
mov
push
and
sub
leave
scas
or
daa
adc
daa
dec
push
popf
and
fdivrl
inc
adc
pop
and
mov
mov
and
pusha
movsb
add
fidivs
loop
xor
dec
sbb
and
rcll
movsb
test
jle
jl
xor
sarb
inc
movsl
fildl
xor
cmp
nop
or
lret
jbe
inc
or
dec
js
sub
jo
cmp
mov
xchg
mov
pop
dec
mov
pop
add
js
jno
pop
mov
pop
in
jnp
out
pop
imul
mov
add
js
aad
inc
mov
inc
ror
lock
jae
mov
mov
add
test
xor
dec
mov
lock
jmp
shlb
adc
adc
loope
adc
add
mov
push
push
jmp
xchg
pop
cmp
mov
mov
mov
jb
xchg
popf
loop
cwtl
pop
invd
pop
out
lret
push
fprem
add
dec
imulb
das
fsubl
mov
cmp
inc
sbb
dec
push
adc
outsb
adc
call
or
add
cwtl
push
scas
mov
add
mov
imul
hlt
jbe
adc
cmpsb
fisttpll
test
adc
mov
inc
pop
adc
inc
or
nop
xor
jns
and
test
daa
cs
xor
hlt
pop
insb
jmp
insb
push
mov
nop
and
aaa
adc
jp
dec
pop
dec
into
or
sar
xchg
pop
add
dec
mov
pop
sub
fnstcw
fisttpl
dec
push
lock
push
lret
add
out
ficoms
mov
adc
cmp
add
pop
pop
out
mov
fdivrs
or
dec
add
xchg
sub
xchg
cmpsl
loop
adcb
mov
cmpsb
xchg
mov
pop
adc
cmp
push
mov
adc
insl
cs
loopne
dec
push
fdiv
js
mov
inc
jecxz
jnp
imul
rcrl
adc
lahf
pop
cmp
xor
fbstp
stos
mov
notb
mov
loop
popa
push
mov
and
sub
cmp
enter
and
sub
cli
movsb
sub
add
and
aas
loopne
sub
in
dec
mov
cs
add
or
cwtl
imul
hlt
inc
cmpsb
idivl
sbb
les
in
adc
mov
incb
scas
add
int
or
call
vpminsw
jo
sbb
inc
or
cmp
jg
xchg
sbb
push
mov
sub
repz
add
ds
add
fnstenv
inc
jge
sbb
inc
movsb
mov
inc
enter
fstl
cwtl
pop
icebp
jne
add
xor
adc
out
xchg
jo
dec
mov
and
fisttps
mov
pop
je
add
xor
pop
sahf
rol
inc
jecxz
loop
xor
movsl
loope
jo
dec
push
xchg
mov
into
aad
ret
and
add
push
mov
inc
xchg
mov
lret
scas
push
mov
inc
cltd
test
ss
mov
mov
bound
aad
mov
insb
subl
cmp
mov
jno
lock
push
adc
inc
mov
cld
mov
mov
cmpsb
loopne
rol
and
movaps
inc
int3
mull
imul
inc
xor
pop
test
mul
add
mov
mov
mov
xchg
mov
mov
jo
cmp
inc
aaa
out
mov
bound
das
rcll
das
mov
mov
push
and
cmp
jle
insb
in
add
rcll
imul
or
test
rorl
scas
sbb
inc
jnp
shll
aaa
adc
push
inc
mov
rclb
sub
add
mov
cs
fadd
pushf
add
pop
push
xor
loop
fs
inc
scas
outsb
pusha
inc
xor
xchg
call
push
ret
popf
xor
mov
test
lds
xchg
les
sub
pop
mov
test
pushf
dec
fmull
fmulp
add
nop
in
mov
add
filds
lea
loopne
call
add
mov
push
int3
sbb
cltd
aas
dec
dec
dec
xchg
mov
sbb
add
jno
cmp
sub
or
inc
mov
mov
test
lods
sub
add
push
xchg
mov
dec
fldenv
xchg
push
mov
jne
mov
inc
inc
aam
loop
pop
and
les
out
jo
cmpl
add
pop
xchg
pusha
or
test
push
sub
les
sbb
daa
adc
cmpsl
in
pop
sub
ret
dec
adcl
je
repz
mov
jg
lock
orb
ljmp
add
imul
test
sub
fdivrl
ret
push
mov
mov
dec
aaa
pushf
cmp
sti
out
xchg
lds
lcall
outsb
insl
daa
loopne
and
fsubl
pop
jle
test
inc
or
xchg
pusha
mov
add
jb
dec
outsl
mov
nop
sbb
push
loope
inc
or
adc
ja
les
pop
inc
or
mov
and
pushf
xchg
push
sarb
jns
testl
clc
fsts
inc
insb
jb
cmp
addb
mov
cmp
sub
sub
cmpsb
movsl
lock
jle
mov
nop
add
push
pop
pop
push
sbb
ret
cwtl
sbb
int
push
test
clc
int
xor
mov
push
dec
pop
inc
insb
mov
cmp
int3
inc
add
add
rorb
jecxz
sbb
test
and
inc
cmp
adc
push
jp
sub
pop
movsb
gs
and
mov
push
xchg
sbb
push
xchg
push
push
adc
aam
cmpsb
enter
lods
adc
pop
mov
or
push
or
test
sub
and
and
xchg
adc
add
pop
mov
jns
xlat
es
cwtl
aam
cmp
dec
adc
mov
and
lea
adc
add
inc
add
ror
loopne
adc
outsl
or
pop
test
jmp
in
mov
adc
daa
push
pop
jp
add
fnstenv
ss
lea
sti
push
push
dec
cmpsb
iret
sub
add
popl
ja
cs
and
add
pop
mov
inc
dec
pop
sbb
repz
pop
or
xchg
cmp
sbb
or
jge
dec
sub
xor
jecxz
or
sbb
jge
and
mov
sbb
xor
or
sbb
repz
or
pop
test
push
data16
xor
add
mov
rol
sbb
pop
xchg
les
push
push
xor
pop
dec
sbb
lret
inc
cmp
jge
dec
bound
or
sbb
sub
or
les
jae
and
loope
and
mov
adc
mov
imul
fwait
andb
or
sahf
adc
out
cmpsb
xor
cld
fisttps
xor
add
pop
mov
jnp
jns
les
int3
mov
xchg
cmp
dec
add
sbb
xor
and
or
mov
and
push
mov
test
or
mov
jle
inc
imul
mov
or
arpl
sub
pop
sbb
adc
xor
xchg
push
cmp
test
and
pop
or
dec
xor
mov
dec
mov
orl
outsl
adc
sbb
xchg
or
lret
lods
mov
or
pop
popa
pop
addb
or
js
push
adc
inc
pop
mov
in
and
and
shll
leave
dec
dec
push
call
mov
push
sub
or
mov
es
cmpb
mov
js
arpl
sbb
mov
xor
cmpsl
and
addb
sbb
sub
test
or
or
xor
sbb
call
cmp
and
xor
sbb
sub
es
mov
enter
sub
add
sbb
and
adc
xor
lods
jo
cwtl
and
add
pushf
lret
dec
fwait
sbb
adc
inc
and
fs
shrb
bound
adc
daa
adc
aam
xor
jno
les
mov
push
inc
jb
adc
cli
mov
cmp
cwtl
fistpll
pop
mov
adc
lds
dec
or
jmp
cmp
ds
les
daa
fs
insl
sbb
in
rorl
sub
in
je
push
push
xchg
sar
mov
mov
les
test
add
cwtl
pushl
sbbb
cmp
cld
cli
or
sbb
inc
dec
add
out
mov
outsb
mov
daa
xlat
push
add
jecxz
add
push
xor
jo
insb
sub
adc
xchg
dec
or
xlat
or
cmpsl
out
xchg
dec
icebp
or
add
ja
adc
mov
add
add
bound
fidivs
jl
insb
push
repnz
or
into
add
imul
je
mov
dec
loopne
lds
add
mov
pop
jns
sbb
enter
mov
xchg
mov
sahf
lcall
push
sti
in
push
xor
mov
and
push
popa
sbb
outsb
jmp
add
mov
mov
sbb
loop
xor
and
orb
aad
sub
jno
imul
mov
xlat
subb
inc
pop
call
sbb
je
add
xchg
add
inc
test
or
call
sub
leave
call
cmp
loopne
cmc
orb
ss
xchg
repz
fs
imul
cs
xor
and
xchg
cmp
push
clc
ljmp
adc
popa
xchg
fwait
jg
inc
mov
inc
sbb
pop
sub
stos
mov
sub
xlat
add
sub
xchg
inc
or
sbb
mov
or
add
mov
xor
and
dec
sbb
dec
add
add
clc
insl
push
inc
adc
xchg
xchg
inc
mov
mov
pusha
adc
xchg
pop
and
mov
cmp
pop
call
and
xor
sub
fcompl
loop
mov
stc
inc
and
push
jno
mov
insl
sbb
imul
and
out
das
pushf
imul
push
adc
xchg
xlat
fidivrs
or
popa
loope
rcrb
bswap
scas
and
or
mov
push
add
xchg
rcl
insl
jne
dec
xchg
test
cmp
xchg
push
mov
addr16
push
push
inc
popa
jecxz
jbe
in
in
nop
cmp
orl
fisttpll
aam
repz
in
inc
data16
loopne
add
cmp
pop
aad
cmp
push
add
mov
mov
mov
jge
sbb
mov
pop
fwait
adcb
push
dec
mov
xchg
outsb
in
and
fsub
mov
push
pop
jbe
add
movsb
aam
jb
jnp
add
push
mov
mov
push
inc
add
lret
popl
icebp
adc
cmc
pop
or
inc
cmp
push
setl
lds
popl
sbb
push
ds
mov
pusha
ss
hlt
in
sbb
push
xor
js
clc
or
cwtl
rcll
pop
cmpsl
xor
add
push
sbb
sub
imul
leave
add
les
rolb
add
fcomp
rorb
outsl
fistl
test
pop
int3
fwait
xor
mov
xlat
nop
mov
push
jo
jmp
add
cmp
sub
push
fs
or
test
les
cltd
xchg
sub
mov
loopne
rclb
jns
mov
or
adc
int
fs
push
sbb
xchg
add
arpl
add
lock
lret
in
or
mov
mov
aam
pusha
adc
jmp
loop
mov
pop
and
sti
dec
mov
scas
dec
dec
mov
ljmp
mov
sbb
xor
push
loopne
xor
inc
int3
mov
ret
adc
test
mov
sub
cmp
nop
push
or
pop
movb
jmp
push
sbb
add
test
sbb
bound
mov
mov
cmp
outsb
test
sbb
out
int
push
insl
pop
jecxz
mov
insb
or
in
cmp
mov
fs
iret
inc
inc
jl
dec
xor
mov
mov
test
inc
push
jmp
mov
cwtl
pop
lcall
push
push
jge
mov
add
decl
or
or
dec
cmpl
xchg
lock
cmp
and
inc
pop
aaa
jo
in
je
adc
xor
sub
jmp
sbb
mov
xchg
shrb
xchg
inc
mov
arpl
loope
mov
xor
adc
data16
pusha
add
xchg
les
jb
ja
mov
out
stc
add
or
or
mov
sub
iret
shl
fcompl
push
clc
sub
and
pop
loop
mov
out
in
mov
xchg
and
adc
sbb
test
or
mov
orl
jl
sahf
sub
mov
and
add
jae
sbb
lods
cmpsl
add
repnz
inc
ret
rol
je
jmp
or
push
xor
je
xchg
push
test
inc
xor
pop
mov
mov
add
sti
and
dec
sarb
movsb
fs
fwait
and
add
es
je
pop
xorb
lret
cld
out
pushl
sbb
sbb
mov
adc
jmp
mov
add
inc
and
dec
loop
push
dec
mov
adc
stc
add
xchg
notb
cmp
sbb
dec
fdivr
add
sbb
mov
sub
pop
sbb
cmp
andb
repnz
sbb
imul
outsl
jecxz
pusha
js
pop
mov
sbb
add
or
insb
subl
ficoms
in
jecxz
dec
movsl
dec
add
fdivs
fcomi
jns
add
insb
outsb
imul
lahf
in
mov
mov
mov
mulb
pop
fadds
fsubp
movsb
cli
mov
jl
add
add
add
mov
dec
pop
pop
sub
mov
mov
sub
je
inc
and
das
lock
icebp
inc
enter
sbb
sub
dec
in
pusha
or
leave
lods
cmp
fs
sbb
ds
push
lahf
jge
pop
loope
or
out
xor
add
aaa
xor
sbb
jg
add
mov
jo
loopne
sarl
sbb
rcrb
lret
mov
dec
enter
dec
hlt
cltd
dec
mov
lcall
data16
ss
add
jb
mov
in
sbbb
mulb
add
ss
inc
inc
loopne
sbb
inc
insb
dec
cmp
arpl
les
jb
xchg
add
add
stc
ss
push
mov
orb
pop
aaa
xchg
mov
dec
inc
orl
fdivs
add
and
jb
adc
arpl
add
pop
dec
adc
pop
mov
mov
add
in
jns
add
out
or
stos
pop
adc
push
cli
int3
add
cltd
mov
ljmp
adc
xor
or
sbbb
sar
sbb
aas
add
ja
mov
jl
add
aas
push
push
push
push
es
nop
lret
lock
or
insl
mov
leave
ljmp
pop
imul
xchg
xor
js
xor
push
lahf
in
imul
pop
mov
and
out
mov
xor
sarb
add
dec
adc
jl
xlat
int3
sbb
mov
shlb
ss
push
sti
enter
loop
xchg
data16
mov
cmp
push
adc
dec
add
xor
in
xchg
inc
mov
and
pop
fadds
pusha
mov
and
adc
add
mov
jo
or
les
clc
push
outsl
nop
xlat
loopne
popf
js
push
in
loop
xor
cmp
ss
cmp
pop
and
int
rcrb
dec
les
or
scas
outsb
mov
xchg
add
outsl
pop
aam
nop
cmp
in
jmp
mov
stos
mov
je
insb
jmp
inc
sbb
push
inc
dec
push
jg
mov
jo
adc
or
xor
jne
dec
divb
add
out
orb
lret
xchg
loop
and
mov
cmp
rolb
les
cmp
and
int3
push
sti
push
loop
push
xorb
adc
xlat
in
in
jmp
push
sbb
dec
sbb
lret
push
in
and
xchg
ja
jbe
push
loop
mov
clc
push
xor
outsb
push
aas
inc
mov
or
adc
xor
sbb
pop
push
rclb
xorl
out
adc
xchg
add
lock
fcoml
push
outsb
mov
sbb
insl
shl
cmpsl
push
repz
test
je
shlb
nop
adc
jl
jl
xorl
mov
xor
adc
flds
fwait
adc
xor
cld
repnz
push
outsb
ror
mov
or
enter
pop
inc
cmp
arpl
xchg
scas
cwtl
xchg
out
fstp
adc
add
mov
or
dec
subb
movsb
or
sbb
hlt
jae
adc
add
fisubrl
adc
int3
sub
mov
aaa
fistps
mov
cmp
jo
int3
xor
loope
pop
dec
xchg
or
test
dec
mov
es
addr16
test
in
xchg
flds
push
nop
jo
push
push
or
scas
mov
pop
in
xchg
mov
fs
pop
mov
mov
push
lcall
loopne
dec
sbb
into
or
repnz
mov
shl
imul
test
inc
push
loopne
push
cmc
add
pop
int
push
pop
leave
stc
pop
cmp
adc
push
or
add
orl
pop
fwait
xchg
sbb
or
shll
fsubrs
add
loopne
xchg
dec
pandn
leave
ljmp
lock
dec
xor
xor
ljmp
mov
sbb
push
lods
dec
and
repnz
jns
fldz
inc
xchg
mov
enter
xchg
out
push
pop
cmpb
outsb
xchg
insl
call
mov
dec
cld
cmc
loop
cmp
pop
push
out
lcall
mov
es
faddl
pop
or
leave
icebp
out
mov
jb
lock
shl
jecxz
out
mov
sbbb
add
sub
sbb
push
cmp
add
repz
pop
inc
xchg
clc
push
loopne
and
cmpb
add
sbb
call
add
add
mov
and
mov
notb
popf
or
call
enter
out
or
xchg
xorl
inc
loopne
test
das
push
pop
sbbb
mov
xor
in
jae
mov
mov
nop
dec
and
jl
outsb
push
lret
orl
test
lock
rolb
jae
sbb
int
sbb
mov
push
push
call
push
pcmpeqb
in
pop
inc
sbb
add
sbb
das
pop
iret
rorb
int
jl
mov
sub
jb
dec
pop
es
inc
adc
sub
sbb
mov
pop
inc
mov
cli
jnp
lret
cs
or
aad
jo
and
lret
dec
xchg
sub
xchg
scas
mov
adc
jo
in
shll
inc
jl
lahf
adc
jns
hlt
inc
mov
lods
rorl
push
loopne
icebp
or
or
in
ja
xlat
push
loop
xchg
push
cmp
mov
fmull
jns
mov
ljmp
insl
push
pmaxub
pop
outsb
sti
fiaddl
inc
scas
mov
sti
add
ds
int3
adcl
icebp
lret
or
in
lea
outsb
or
test
pop
ret
dec
or
int
or
pop
add
push
insb
and
imul
mov
std
rcrb
add
xor
and
mov
in
fwait
adc
movsb
addl
ret
push
std
call
mov
pop
add
ss
clc
cmp
mov
inc
loopne
out
outsb
jg
or
dec
jecxz
lahf
popa
int3
orb
mov
xchg
jb
dec
push
add
xchg
movsl
cmc
xchg
cmp
jae
hlt
clc
loop
and
jbe
xor
mov
mov
sub
lock
scas
add
roll
daa
lcall
add
mov
mov
jecxz
dec
push
mov
add
xchg
xor
test
jl
add
adc
pop
add
push
dec
adc
adc
inc
pop
pusha
mov
or
int
xor
fists
xlat
std
lds
push
add
sbb
jecxz
sub
mov
xor
sub
cmp
jl
outsl
test
add
jl
and
in
fdiv
test
mov
jecxz
call
jle
aam
loopne
outsb
push
pop
mov
loop
nop
les
fnstenv
cs
or
test
mov
and
inc
add
jl
scas
lcall
push
nop
lret
dec
dec
mov
pop
lret
add
es
ds
in
jl
pop
add
add
inc
idivl
outsl
icebp
add
imul
mov
mov
movsl
dec
cmovnp
outsb
or
in
cmp
cmpb
push
les
cwtl
add
add
stos
pop
faddl
inc
inc
push
rolb
js
fildl
adc
fcoms
or
cmp
in
push
and
sbb
outsb
push
add
or
and
mov
cmp
loope
cld
push
nop
adc
mov
pop
fwait
add
cmc
ficoml
scas
int3
jmpw
and
push
push
add
sbb
icebp
outsb
mov
ret
xor
and
pop
adc
fcompl
cltd
mov
or
jecxz
cli
in
shlb
push
sub
ficomps
push
xchg
outsl
les
add
jo
cwtl
dec
mov
xor
loopne
adc
mov
sub
add
je
pop
or
adc
push
hlt
pop
sti
sub
mov
aam
out
adc
or
sub
cmpsb
jbe
not
add
xchg
shrl
sbb
push
sarb
xor
or
push
mov
das
add
pop
push
fcomps
adc
sbb
pop
mull
call
mov
mov
and
and
in
inc
dec
fwait
ret
dec
loop
inc
sub
adc
dec
adc
pusha
inc
sahf
xor
xchg
out
cli
jp
ret
push
shrl
inc
mov
sbb
sbb
aad
jo
in
mov
sub
out
add
adc
xchg
out
stos
mov
das
cmp
pop
cmp
xchg
push
movsb
clc
jae
cld
in
add
rcl
lds
mov
int3
imul
sbb
push
fwait
cmp
xorb
add
lods
shl
cwtl
xor
jo
pop
lods
insb
pop
push
pmuludq
add
hlt
sbb
adc
cmp
add
cmp
jmp
push
fs
cmpsl
out
or
and
xlat
cld
push
add
add
xchg
mov
cwtl
movsb
add
cmp
cs
inc
xchg
adc
out
and
inc
cld
imul
shrb
in
or
mov
xor
ja
dec
pop
jecxz
stos
ror
jo
mov
sub
xchg
inc
or
jae
in
inc
cmp
gs
xor
add
aaa
orl
add
sbb
xlat
cli
jne,pn
jae
add
int3
push
mov
in
or
or
outsb
and
xchg
add
pop
add
cmp
in
jo
add
add
dec
or
loopne
push
add
mul
test
mov
pop
add
out
ret
cmpsl
push
ret
mov
sbb
add
lods
mov
notl
loopne
xor
mov
sbb
xor
jo
sbb
cmpb
jmp
lahf
fiaddl
cli
pushf
in
xor
dec
add
and
xchg
add
daa
jo
rolb
out
out
sub
shufps
or
jmp
pusha
aam
dec
imul
xor
mov
pop
cmp
push
push
mov
hlt
pop
jg
adc
sub
jo
sbbl
outsb
mov
inc
shr
push
pop
adc
ret
xor
and
mov
mov
inc
add
mov
cmp
xor
mov
test
jl
aam
xlat
push
fists
adc
or
pop
jno
sub
mov
out
and
outsb
and
test
cwtl
add
mov
mov
inc
push
aaa
fadd
xor
jo
and
imul
fisttpll
pop
bnd
fsubs
popf
lret
and
push
fdivl
add
test
js
mov
bound
loope
out
dec
popl
lds
call
xor
aad
inc
pop
mov
add
pop
or
or
mov
mov
cmc
sbb
hlt
mov
add
jae
popa
cmpb
sub
fmull
jns
test
add
and
push
pop
pop
lretw
out
jecxz
test
jae
push
mov
in
hlt
mov
sub
pushf
cs
add
mov
iret
adc
leave
pop
and
mov
xlat
adc
and
pop
sbb
mov
mov
cmp
andb
mov
cmp
fcoms
add
mov
pop
retw
pop
idivl
enter
mov
add
rolb
sbb
xor
out
lcall
enter
ret
xor
add
je
sbb
test
pop
adc
and
loop
mov
and
loopne
add
ret
aam
cld
sbb
pop
mov
adcb
push
mov
sti
mov
add
xchg
outsl
andl
andb
cmp
jmp
push
subb
mov
inc
fs
and
lods
adc
ss
stos
and
dec
cmovg
inc
or
adc
sbb
add
and
add
lds
jae
hlt
xchg
loopne
cmpb
js
shll
repnz
sbb
addr16
movsl
dec
out
add
rcll
mov
xor
fnstcw
aaa
gs
or
mov
movl
cmpsl
pop
or
xor
lock
in
adcb
inc
jnp
cmp
pusha
in
and
or
ficomps
js
push
testb
nop
inc
dec
xor
sbb
mov
push
in
rolb
or
adc
pop
lahf
mov
sub
add
sub
lds
popa
or
mov
lock
mov
xor
test
mov
add
call
inc
cmp
js
mov
sbb
inc
movsl
push
add
adc
adc
pop
jp
or
sar
test
sub
add
andb
in
jecxz
arpl
repnz
mov
pop
push
aaa
add
fwait
leave
jg
ljmp
cmc
pop
nop
comiss
add
les
lret
fucomi
es
dec
les
test
cwtl
cwtl
popa
outsb
or
jne
scas
cmp
fsubrs
or
shlb
pop
or
pusha
jns
and
enter
cmp
mulb
xor
inc
hlt
inc
ret
ljmp
stc
xor
or
pop
mov
adc
cwtl
aam
pusha
fisttpl
mov
subl
xor
sub
mov
stos
sbb
push
out
xor
dec
test
adc
test
xor
movsb
adc
sub
bound
mov
nop
mov
cld
inc
adc
pop
or
movsb
push
inc
movsb
loopne
ror
sbb
addr16
ds
sbb
dec
mov
mov
in
inc
add
jno
repz
enter
mov
cwtl
add
int3
ret
adc
xor
repnz
popa
sbb
or
add
popa
lds
cmp
cmp
push
inc
lods
sbb
stos
xor
or
push
inc
fcomps
and
leave
sbb
in
cmp
mov
test
out
pop
arpl
rorb
imul
mov
and
jb
add
xchg
sahf
or
jns
adc
add
clc
push
inc
iret
add
cmp
push
sti
mov
mov
mov
sarb
jp
cwtl
push
les
ljmp
xor
fwait
dec
push
pusha
call
add
add
mov
orl
mov
push
mov
push
sub
cld
and
sar
or
clc
in
lret
lods
orl
inc
arpl
shl
outsl
xchg
add
cmpsb
fnsave
aam
mov
cmp
jle
sub
cmp
out
call
jno
into
lock
dec
andb
mov
je
sbb
add
je
fs
sbb
cmp
data16
mov
outsb
sarl
mov
lahf
scas
add
lret
mov
mov
adc
enter
insl
sahf
mov
add
rolb
pop
and
cmp
xor
mov
ljmp
mov
dec
in
js
or
pop
sbb
mov
mov
out
nop
test
xchg
fsubs
loope
jp
xor
rcrl
cwtl
dec
std
mov
or
and
outsb
pusha
pop
jne
add
in
mov
test
incb
pop
add
insl
mov
push
or
or
bound
jo
loopne
pop
es
cmp
dec
dec
or
or
sbb
inc
into
je
add
sbb
jle
jno
leave
rorb
mov
dec
popa
enter
mov
xchg
stc
or
and
xchg
mov
pop
jl
xor
and
insl
xchg
xchg
add
rorb
popa
dec
jo
add
xlat
lret
sub
in
jmp
push
adc
inc
mov
sbb
nop
sub
or
daa
cld
out
or
imul
in
mov
lahf
bound
nop
test
imul
test
loopne
repnz
pop
lret
loop
adc
sti
insl
pop
fadds
push
mov
rclb
and
or
or
push
and
and
ss
push
or
imul
into
pop
and
stos
pop
and
and
adc
rcrb
loope
push
push
sub
shlb
in
popa
dec
pop
sub
test
sbb
addr16
jae
pop
add
test
rcl
es
testl
out
inc
jnp
fmull
adc
loopne
push
adcl
shll
fcomps
xor
js
adc
add
jl
js
call
sbb
pop
sarl
lods
sbbb
and
sbb
push
outsb
aad
aam
insb
mov
mov
xchg
xchg
cmpsb
cmp
add
aaa
jns
mov
mov
mov
aad
add
jnp
lock
fwait
pusha
repnz
inc
pop
insb
je
hlt
inc
pop
add
loop
nop
test
mov
add
pop
xor
inc
ret
add
xor
push
lods
add
mov
bound
in
xchg
add
cmp
mov
hlt
cmp
or
adc
add
outsb
dec
out
in
add
les
and
mov
sarl
ljmp
test
into
out
mov
fisttpll
cwtl
pop
sbb
mov
clc
jne
or
sbb
inc
insb
sbb
mov
sub
addb
imul
cltd
sbb
insb
sbb
test
or
or
adc
daa
ss
leave
aas
sbb
pushf
rolb
inc
push
pop
push
les
pusha
dec
cmp
xlat
or
repnz
sub
test
mov
push
mov
cmp
stos
loop
loope
test
popf
imul
daa
fstpl
mov
in
add
xor
jnp
push
insb
pushf
in
xor
add
imul
test
loopne
inc
imul
popa
mov
ss
data16
ja
lds
sub
cli
sbb
sti
push
jmp
or
cmp
and
mov
push
ja
pop
leave
dec
or
or
mov
addr16
pop
or
lret
aam
add
js
xchg
add
aad
out
in
adc
in
mov
hlt
add
mov
mov
pusha
dec
mov
and
or
pop
outsl
adc
rcrb
pop
insb
dec
push
or
mov
lret
add
pop
cmp
ljmp
jmp
inc
mov
imul
lret
xlat
jns
jo
stc
out
dec
add
pusha
ss
mov
dec
or
cmp
loopne
loop
jno
lock
push
imul
call
add
in
out
sbb
sub
sbb
xor
push
sbb
add
in
xor
or
nop
stc
xchg
dec
adc
notl
and
repz
mov
mov
inc
fildll
aam
movsb
add
mov
jmp
or
mov
bound
pop
hlt
dec
cmp
js
cmp
fimull
pushf
sub
mov
pop
mov
xor
mov
imul
daa
push
sbb
repnz
or
fbstp
ret
xchg
dec
and
call
outsb
xlat
nop
les
add
or
mov
insl
xor
xchg
sbb
popa
or
or
adc
dec
inc
or
inc
in
push
popa
inc
jns
fsub
nop
fs
mov
mov
sub
and
in
dec
xlat
add
mov
out
mov
dec
xchg
test
inc
sub
push
cwtl
dec
js
les
lock
sbb
mov
adc
push
dec
mov
xlat
repnz
push
les
bound
sbb
sbb
loopne
sub
xorb
cmpsl
dec
or
rcrb
hlt
or
leave
add
pop
inc
dec
add
mov
xor
or
xchg
ficoml
sbb
and
dec
sbb
lret
fsubs
aam
add
mov
push
pop
cld
sub
xlat
fbstp
lds
add
fistl
xchg
fwait
movsl
rclb
lea
pop
pusha
insb
pop
orl
or
cs
push
imul
aaa
sbb
in
dec
lret
insl
mov
in
pop
cmp
or
loop
ror
popa
test
fwait
bound
pop
pushf
inc
mov
shlb
push
add
cmp
cmp
fs
icebp
adc
dec
pusha
nop
sub
push
insl
jo
xor
loopne
cmp
mov
aas
pop
xor
jle
adc
cmp
mov
pusha
add
pop
add
in
stc
mov
js
les
fisttpl
push
in
push
fcoml
aaa
xchg
pusha
or
mov
nop
mov
popf
and
and
sbb
mov
fnstsw
or
roll
cmp
add
sbb
and
cld
mov
adc
ljmp
xor
push
mov
cmp
ljmp
inc
repnz
add
sub
or
push
mov
sub
pop
loope
faddp
addb
pop
sub
ret
or
pop
fildl
pop
pop
xor
outsl
rclb
jmp
pushl
pop
hlt
xlat
pusha
gs
roll
sub
fucompp
pop
cmp
incl
xor
sbbl
jmp
pop
push
sub
pop
jp
adc
jbe
bound
out
or
adc
lret
jecxz
xchg
pop
mov
mov
push
and
incl
fisttpll
inc
cmp
push
fwait
push
add
loopne
sub
cmp
fadds
pushf
cmp
pop
roll
push
cmp
sbb
fstpl
pop
push
movsb
sahf
bound
inc
mov
pop
add
add
adc
sbb
push
pop
push
push
mov
addr16
xor
pop
push
mov
ss
add
dec
or
repnz
je
adc
mov
ffreep
call
push
lods
push
fistl
dec
mov
aad
add
jp
cmp
push
add
add
pop
imul
subl
dec
clc
mov
fnstsw
push
jmp
sbb
icebp
or
pop
nop
inc
sbbb
push
push
jmp
sbb
or
xor
mov
mov
jmp
push
mov
push
addl
repnz
mov
sbb
sbb
adc
addb
aam
sbb
dec
jbe
xchg
pop
add
sbb
or
adc
xchg
mov
pop
add
and
cmp
add
sbb
xchg
not
sbb
lret
ror
jmp
rol
mov
pop
enter
data16
mov
jmp
pushf
lds
and
pop
mov
lods
dec
enter
repz
add
mov
nop
pop
or
adc
rcr
and
xchg
sbb
iret
punpcklbw
mov
pop
in
ret
jle
jbe
popf
xor
inc
sbb
rcrl
mov
aas
call
jecxz
or
cld
aam
pop
mov
adc
xor
add
out
mov
push
push
dec
push
xchg
loopne
enterw
jmp
shl
inc
sbb
cli
cmp
dec
inc
pop
mov
ret
loop
mov
jmp
pop
and
mov
ljmp
cli
sub
sarb
xor
lock
ret
mov
add
shrb
mov
jmp
scas
lods
ljmp
push
jmp
pop
cmp
sbb
movsl
repnz
ficoml
add
roll
aam
adc
push
add
into
mov
push
push
add
cmp
add
dec
dec
inc
pop
jns
lcall
scas
lods
pause
out
or
out
mov
sub
dec
and
jbe
mov
test
add
shr
ret
loope
shl
pop
add
and
sub
subb
leave
pop
andb
mov
pop
sub
pop
sub
add
pushw
jmp
xchg
rcll
or
cmpsb
or
out
mov
roll
cmp
cwtl
sub
dec
push
jno
inc
outsb
leave
dec
sbb
push
adc
add
xor
jmp
adc
add
xlat
xorb
dec
repnz
or
dec
xchg
add
xchg
adc
or
sub
or
bound
jmp
and
nop
sbb
mov
push
add
leave
add
push
pop
shr
dec
out
lcall
sub
sub
adc
jl
add
pop
mov
jecxz
pop
or
sbb
shll
rol
outsl
and
xor
cmp
xchg
mov
fwait
push
adc
incb
data16
lock
adc
adc
outsl
sbb
pop
mov
mov
cwtl
jno
aaa
xor
xchg
icebp
inc
push
arpl
sub
add
mov
ja
das
adc
sbb
xor
mov
sub
and
or
pop
add
and
aad
int3
imul
xchg
add
mov
sbb
or
lret
inc
cmc
or
fcomps
cmp
adc
fiaddl
push
das
adc
or
cwtl
das
jmp
add
or
sub
sub
adc
sub
push
and
repnz
mov
and
mov
cmp
adc
cwtl
scas
inc
sub
push
mov
adc
jge
xchg
push
les
gs
inc
pop
pop
add
inc
lods
xlat
add
test
icebp
dec
sub
xorb
add
push
into
dec
dec
sti
sbb
inc
sbbb
std
jmp
add
push
cs
pop
lock
rcrb
xor
inc
push
push
sbb
outsl
jbe
dec
xor
mov
or
cmpps
nop
push
add
loopne
add
dec
inc
jmp
lds
sub
sub
add
add
pop
movsb
add
inc
pop
push
jmp
mov
repnz
popa
cli
adc
in
mov
add
mov
add
pop
dec
add
idivl
xchg
out
add
mov
not
cmp
or
or
jae
das
add
pop
sub
ret
or
push
in
je
add
pushf
push
icebp
jl
add
ret
sub
sub
add
xchg
adc
out
mull
enter
cwtl
rorl
loope
adcb
or
mov
push
loopne
shr
adc
lds
gs
scas
je
pop
add
mov
ret
fs
mov
add
adc
xor
and
hlt
cmp
sub
dec
adcl
dec
aaa
sbb
mov
and
jne
sub
cmp
mov
sub
and
ds
add
push
in
iret
adcl
push
mov
daa
jmp
pop
mov
leave
or
jmp
arpl
out
dec
sub
ljmp
mov
add
adc
cmp
or
shrb
dec
jo
or
jmp
movsb
xor
add
mov
scas
push
pop
sub
cmp
mov
add
cmpsb
jecxz
loope
pop
or
push
jno
adc
test
subl
push
movsb
scas
cld
aad
ret
insb
fstps
enter
cmp
add
pop
push
add
xor
pop
shlb
repz
or
push
inc
gs
sub
sbb
jne
sub
jb
outsl
mov
pop
cmp
aam
or
and
lock
sbb
or
pop
push
ljmp
push
adcl
mov
int3
test
dec
jns
rcr
dec
aaa
xor
cmp
dec
adc
ret
pop
pop
outsb
je
sbb
xor
hlt
add
jmp
pop
jg
test
loop
repz
out
movsl
and
mov
fs
push
mov
sbb
jmp
in
loope
aaa
push
mov
jns
or
not
inc
cmpb
sub
sbb
testb
in
adc
inc
sub
adc
mov
add
loope
inc
dec
pushf
mov
popf
repz
adcl
pop
or
add
repz
push
nop
adcl
pop
dec
adc
pop
or
mov
divb
cmp
push
cmp
leave
les
addb
mov
out
lods
fistpl
mov
push
arpl
mov
out
outsb
and
stos
dec
adc
leave
cmc
hlt
mov
adc
inc
rolb
xchg
inc
iret
push
jo
lcall
pop
nop
jge
rcll
xor
adc
xchg
xor
push
mov
loope
pop
test
xchg
or
pop
mov
mov
sub
ror
shll
push
addb
rorb
push
or
mov
mov
lds
fildl
xchg
mov
xor
pop
cmp
sbb
pop
inc
push
loop
dec
shlb
addr16
bnd
dec
push
push
arpl
test
pop
out
ds
add
lret
push
mov
jmp
xor
add
jns
or
dec
xchg
adc
mov
push
mov
sbb
pop
adc
xchg
xchg
addb
sub
jnp
inc
mov
sarb
xchg
add
out
jae
pop
add
sub
push
push
mov
popa
cs
test
adcl
jmp
and
pop
fiadds
jae
or
adc
xor
fucomp
testb
sbb
out
xchg
out
lret
sub
sub
adc
orl
rclb
lret
push
mov
sbb
mov
pusha
cmc
rolb
adcb
pop
sub
push
add
or
add
fnsave
shr
dec
fistpll
push
push
sub
dec
or
shll
jb
insb
cmc
or
push
stos
es
lock
mov
push
adc
aad
xchg
subb
dec
sbb
pop
enter
test
sub
xchg
mov
adc
push
xor
pop
dec
and
sub
add
or
les
stos
sub
test
xchg
fadd
inc
out
mov
sub
pop
pusha
add
outsb
add
sub
jmp
iret
inc
jmp
and
test
add
sub
mov
mov
push
gs
nop
sub
add
not
clc
enter
add
or
add
rcrl
push
int
arpl
ror
arpl
push
inc
in
add
ret
or
pop
mov
mov
lea
test
addr16
jmp
add
xchg
adc
pop
add
dec
test
xor
push
mov
lds
loop
mov
or
and
bound
xor
xchg
sub
mov
fstpl
fsubr
repz
addb
ret
pop
test
xchg
sub
or
aas
xor
ror
pop
mov
add
icebp
addb
xchg
in
loopne
inc
and
arpl
dec
or
xor
sbb
jne
and
add
jmp
sub
cli
sub
push
lods
add
sbb
mov
sbb
jmp
inc
sub
scas
adcb
mov
call
push
xchg
jns
aaa
pop
mov
jle
jb
and
inc
xor
mov
pop
lahf
xor
push
test
xchg
mov
call
pop
inc
test
or
out
inc
mov
std
mov
jnp
in
mov
sbbb
sbb
mov
stc
push
push
hlt
lds
or
xchg
ss
movl
call
scas
push
xchg
pop
mov
ret
push
popa
arpl
xor
mov
push
push
sub
jmp
mov
sub
push
les
dec
out
outsl
sub
cmp
push
add
rolb
stc
and
xor
add
test
outsb
decb
cmp
enter
nop
adcb
adc
cmp
roll
pop
pop
dec
xchg
dec
add
lret
push
and
inc
add
and
inc
sbb
inc
sti
std
icebp
mov
adc
and
inc
jmp
in
add
or
inc
push
pop
inc
push
das
sbb
push
mov
jmp
push
mov
cmp
pop
mov
lret
pop
shr
pop
push
mov
sub
pop
jmp
mov
jp
rolb
push
and
xchg
adc
add
push
outsl
or
gs
ret
lea
jl
and
lea
pop
call
popf
add
mov
roll
pop
sub
push
movsl
xchg
add
push
lcall
mov
cmp
std
roll
pop
add
orl
iret
testl
testl
les
jmp
add
or
outsb
addl
es
cmp
add
icebp
mov
and
dec
adc
mov
xor
enter
in
jno
imul
stos
fisubrl
inc
int
insb
jle
pop
pop
xor
andl
and
pop
pop
shl
sbb
or
incl
hlt
xor
mov
mov
xlat
cs
int3
insl
fldl
incb
or
cmp
fisttpll
push
inc
dec
and
in
and
jle
sub
xchg
enter
sub
add
xor
sub
pop
shl
andb
scas
in
add
push
inc
sub
and
icebp
cmpsb
sub
shll
dec
lret
or
push
subl
jecxz
lods
and
push
sub
pop
xor
push
add
jno
test
cwtl
inc
add
push
aas
xchg
cmp
sub
loop
push
fucomip
pop
push
push
lock
xchg
and
nop
iret
or
xor
or
inc
test
mov
push
and
mov
mov
mov
mov
push
popa
inc
getsec
adcb
mov
imul
imul
lahf
stos
dec
insl
or
std
push
inc
mov
das
or
and
add
sbb
scas
test
dec
les
add
aaa
sbb
aad
nop
mov
dec
mov
add
rcrl
or
cmp
mov
mov
push
and
je
lcall
adc
xor
mov
inc
cmp
adc
in
aaa
xor
jne
jecxz
pop
repz
inc
ret
cmpsl
adc
repz
es
rcrb
cwtl
pop
mov
clc
pop
jae
add
add
and
test
mov
and
fstpl
es
inc
xor
or
xchg
cmp
addr16
add
push
adc
int3
push
mov
idivb
cmp
mov
jmp
lret
cmpsb
pcmpgtb
or
push
lods
addr16
pop
sub
repz
pop
push
jae
push
xchg
add
test
out
movsb
pop
push
mov
and
mov
or
inc
sub
call
jge
add
out
mov
sub
ret
dec
or
out
mov
add
cmp
cmp
je
xor
inc
and
jo
sahf
add
and
lcall
mov
ret
cmp
loope
call
adc
push
sub
jmp
inc
or
in
add
pop
inc
ficoms
test
pop
mov
push
and
pop
dec
inc
push
add
jmp
ficompl
pop
and
or
inc
xchg
mov
jo
xchg
cli
add
push
pop
inc
push
sub
xchg
cmp
ds
mov
or
lfs
pop
push
jmp
jbe
inc
pop
xor
mov
fidivl
fwait
dec
outsb
rcrl
ret
xor
out
add
ja
out
jle
dec
pop
dec
cmp
push
or
ret
aas
add
xor
negl
sbb
test
cmp
xchg
out
lcall
data16
movsl
incb
jmp
test
jno
sbb
pop
daa
sub
ret
or
fistpll
icebp
iret
push
hlt
das
pop
mov
adc
dec
push
in
adc
cmp
repnz
fldt
sub
lods
les
xor
fisttps
xor
shrl
sbb
pop
test
add
insl
jae
mov
inc
or
test
leave
sar
jmp
aas
insb
data16
jno
push
scas
push
sub
add
push
mov
clc
dec
push
cltd
add
sbbl
mov
inc
sbb
cs
outsl
lods
in
cmp
add
jmp
add
pop
arpl
cmp
ss
shlb
rcrb
ljmp
cmpl
cmp
sub
add
fnstcw
rorl
push
add
js
mov
subl
pop
lods
inc
and
sbb
dec
jmp
pop
popf
pusha
pop
jmp
add
imul
das
rcrb
outsl
pop
je
pop
leave
jb
or
add
cmp
add
fistps
sti
cld
sbb
dec
add
adc
or
pushl
add
cmc
add
inc
sbb
or
sarl
or
xchg
add
int3
out
dec
xchg
add
sbb
and
inc
jno
fmull
add
pop
popa
xchg
push
int
adc
mov
adc
adc
pop
negl
xor
ret
dec
orb
fimull
daa
xor
jmp
push
mov
rcl
push
inc
es
test
dec
push
add
lock
or
in
int
inc
xchg
mov
push
xor
jecxz
movsb
push
push
in
dec
pop
cmp
jle
lea
sub
jb
xchg
pop
mov
sub
scas
imul
nop
mov
inc
pop
lcall
sub
add
movsb
adc
inc
sub
push
pop
roll
mov
sub
test
pop
pop
jne
jno
movsb
and
aam
mov
loope
jae
push
dec
sub
mov
pop
mov
clc
add
mov
inc
lret
rorl
push
dec
addl
adc
cmp
xchg
jecxz
lock
ret
push
pop
push
das
inc
push
mov
or
pop
push
jge
rcr
sbbl
xchg
push
leave
aad
adc
icebp
mov
add
ds
or
movsl
mov
loope
sbb
dec
add
out
mov
jo
push
inc
test
sub
or
addl
jl
sub
or
push
mov
shlb
push
test
pop
jno
jmp
das
push
and
jmp
adc
roll
xchg
fs
cmp
cmc
mov
pop
cs
or
mov
and
mov
cmp
or
inc
xor
adc
pop
mov
in
dec
ja
cmc
or
fsubl
sbb
out
outsl
add
jmp
dec
dec
xor
xor
inc
inc
push
bound
jno
cmp
popa
or
ret
push
rolb
dec
sarb
jo
pop
cmp
xchg
ja
sbb
cld
pop
fadds
add
dec
sub
loopne
pop
xchg
sbbb
dec
push
dec
add
push
cmp
sti
push
fmuls
xchg
inc
jo
inc
mov
loopne
sub
sub
sahf
xchg
mov
cltd
xor
dec
and
cvttps2pi
jmp
add
cltd
stos
add
cmp
cmp
pop
ret
pop
pop
movl
addl
ret
and
add
cmc
inc
ret
stos
outsl
scas
and
push
xchg
out
dec
pop
and
add
scas
fs
ds
jmp
xor
sub
shl
jmp
imulb
hlt
or
mov
and
and
xor
xor
mov
pushf
mov
xlat
subb
inc
or
hlt
mov
mov
scas
ja
out
sub
add
rcl
sbb
dec
js
enter
loop
mov
xor
stos
test
dec
xor
push
xor
adc
mov
cli
fdivrp
add
jecxz
out
add
push
loop
jne
loope
int3
mov
sub
xchg
mov
jmp
test
sub
jmp
mov
shll
add
xor
mov
pop
xor
add
repnz
push
push
insb
outsl
test
or
repnz
jle
add
pop
je
sbb
mov
out
mov
and
in
rcrl
cmp
and
in
cwtl
hlt
inc
xchg
ja
dec
xchg
popa
ds
mov
cmp
test
dec
shrl
rcrb
fmul
cli
add
lret
in
cmp
push
mov
scas
daa
adcb
add
adc
nop
aad
and
popa
add
pop
jnp
test
or
fs
adc
pop
sbb
cmp
sbb
jbe
jecxz
dec
push
jnp
and
pop
jecxz
pop
test
dec
repnz
dec
mov
mov
fld1
mov
shlb
cwtl
inc
add
xor
sti
jmp
push
dec
ret
jns
adc
mov
mov
fistpl
adc
aas
or
dec
imul
sub
or
jmp
mov
and
xor
mov
pop
pusha
add
push
jge
sub
ds
leave
test
mov
add
inc
and
out
add
push
mov
addb
call
mull
cmp
les
push
pushf
clc
test
pusha
shlb
into
mov
cltd
push
pusha
sub
pop
mov
dec
rolb
mov
jmp
or
or
jecxz
int
dec
pop
sbb
ss
add
add
mov
arpl
jmp
pop
arpl
xlat
jmp
add
inc
imull
test
cmp
push
lds
sub
dec
shlb
xchg
lods
xor
push
and
clc
sbb
push
pusha
fisttpl
sahf
pslld
das
push
sub
ja
add
or
dec
mov
in
dec
in
sub
icebp
pop
shl
push
dec
push
lret
add
mov
sub
les
rcll
and
and
pop
sbb
test
add
add
cmp
cmc
push
std
hlt
clc
mov
test
pop
pop
add
add
push
subb
add
mov
pop
pop
pop
neg
and
scas
jno
mov
sub
pop
sub
push
jmp
rcrl
sbb
cld
add
cs
lret
aaa
std
cli
ficompl
lret
cmpb
jmp
popl
inc
mov
add
mov
push
mov
adc
fsts
mov
clc
test
mov
popa
dec
cmp
mov
cmp
repnz
jmp
xchg
adc
and
add
push
hlt
gs
pop
insl
jnp
add
clc
movsl
sysret
pop
hlt
adc
mov
inc
lret
pop
bound
pop
or
pop
cmpb
fdivp
aas
mov
test
push
aam
mov
dec
push
sahf
push
stc
mov
clc
aas
add
add
fisttpl
and
sbb
add
fnstsw
push
jmp
push
adc
adc
arpl
cmp
pop
mov
jp
add
sub
fcmovu
inc
in
adc
pusha
push
clc
bound
pusha
add
add
add
loopne
aad
or
push
imul
pop
in
xchg
add
jge
es
push
popf
repnz
movsl
in
lret
fistps
jle
sub
push
adc
inc
cmp
dec
xor
jns
dec
scas
dec
xor
dec
cmp
push
nop
or
pop
dec
mov
mov
dec
lds
mov
inc
pop
push
jmp
xchg
ficomps
push
cs
mov
jecxz
add
in
jg
jl
and
xor
aaa
into
loop
pusha
mov
neg
rolb
pop
xor
jmp
add
sahf
not
lret
in
mov
inc
xor
pop
nop
test
add
cltd
jmp
les
lcall
or
ret
add
mov
nop
aad
mov
not
push
dec
or
jno
xchg
decb
cmp
push
cmpb
in
sub
sti
adc
jecxz
cmp
dec
clc
xchg
cltd
xor
imul
ja
pop
pop
add
sub
shrb
mov
fadds
sub
cmp
cmp
fmulp
imul
xor
cmp
or
rorb
sub
adcb
push
jl
xor
inc
pop
push
and
movsl
jecxz
add
mov
jnp
or
adcb
nop
dec
push
mov
or
cs
mov
fadd
shll
popa
pop
adc
pop
loopne
push
xor
fisttpl
or
cmp
jmp
push
push
imul
ss
sub
sub
sti
int3
pop
pop
jmp
lea
inc
inc
popa
and
sub
std
mov
or
jno
xchg
pop
mov
lcall
pop
dec
add
and
out
lret
lds
mull
or
adc
pop
push
xchg
aaa
daa
mov
mov
int3
xor
sarb
pusha
mov
and
mov
or
mov
inc
mov
add
lock
mov
fimull
aad
cld
mov
dec
inc
stos
fdivl
add
push
jmp
cmp
xor
rclb
dec
sbb
adc
cwtl
add
sbb
fs
lock
imul
push
ret
sub
negb
insb
dec
in
and
push
js
mov
push
mov
andb
mov
iret
repnz
pop
mov
or
push
dec
inc
fcoml
out
add
js
adc
push
and
jne
sti
or
push
xlat
popa
mov
push
sbb
mov
adc
es
or
adc
jne
xor
or
push
pop
fldt
add
mov
cs
sub
push
cmpsl
jp
scas
out
cmpsb
mov
cmp
add
xchg
jo
xor
aam
and
cmp
icebp
pop
sub
cmp
data16
adc
pop
mov
addl
lea
dec
sub
and
adc
inc
mov
or
shr
lds
sbb
pop
sub
xor
mov
xor
jge
push
lds
pop
jbe
fidivl
in
push
dec
cld
daa
add
jmp
orb
rcl
rcrl
adc
cmp
loopne
outsl
adc
inc
adc
mov
xor
shrl
movsb
test
repz
cli
or
add
push
push
mov
adc
sbb
not
sbb
lret
addr16
aas
mov
dec
rcl
popa
rcrb
icebp
sub
xor
pop
jns
mov
es
push
push
add
mov
push
adcb
add
sbb
mov
addl
push
mov
sub
lret
push
pop
andb
jno
or
sbb
orb
lods
ret
xchg
xorl
xor
or
push
mov
jno
add
movsb
lret
sbb
hlt
dec
daa
mov
or
sbb
sub
and
mov
or
es
inc
out
iret
les
enter
mov
inc
inc
mov
ljmp
lret
add
and
dec
sub
xor
add
xor
jmp
pop
dec
inc
push
jo
jle
popa
dec
push
jmp
pop
pop
dec
inc
mov
push
mov
adc
rcrl
push
jmp
mov
dec
and
shll
or
les
dec
cmp
rcr
pop
or
mov
adc
pop
mov
cmp
icebp
dec
xor
sub
andb
add
in
in
xor
add
clc
inc
pusha
js
mov
pop
cmp
cmpb
cmp
mov
jmp
mov
aad
cwtl
mov
inc
dec
jmp
rorb
sub
loopne
xchg
and
addb
sub
jge
and
xchg
dec
and
pop
mov
xchg
xor
rclb
jmp
mov
sbb
push
sub
stos
sbb
fistps
xlat
cs
or
jmp
sub
lods
pop
sahf
push
mov
stc
inc
dec
hlt
ljmp
sbb
add
popa
js
outsb
and
inc
fs
pop
dec
repz
xor
pop
inc
addr16
add
fidivl
rol
jecxz
mov
or
stos
fnstcw
sbb
jmp
jecxz
in
out
shl
vcvtps2pd
fs
push
mov
insb
xor
add
xor
push
enter
dec
mov
in
push
xor
popa
adc
adc
or
dec
or
movsl
into
pop
mov
cmpsl
sbb
aad
dec
pop
aas
dec
dec
adc
push
icebp
addr16
inc
mov
mov
int3
adc
rcrb
mov
adc
push
mov
pop
adc
mov
movsb
xor
or
dec
push
adc
iret
adc
nop
inc
push
ret
lcall
in
fldl
pop
out
mov
mov
push
add
pop
test
lret
xchg
arpl
test
or
inc
mov
xor
pusha
pop
jbe
imul
daa
neg
mov
xorl
push
xchg
push
pop
mov
add
push
or
push
mov
and
inc
stos
mov
or
or
add
jb
push
jmp
addb
push
test
pop
sub
pop
cmp
jae
mov
test
rorl
arpl
bound
fsubrs
stos
or
arpl
idivb
cli
dec
ret
xor
mov
popf
xor
mov
stc
pushf
xchg
sub
pop
into
mov
mov
mov
testl
and
cmpsb
add
ds
sub
sub
pop
adc
imul
or
xchg
dec
subb
push
jne
push
rcll
cmp
pusha
loopne
adc
das
sub
ret
and
jnp
add
dec
adc
pop
jl
mov
xor
push
push
movsl
fsub
or
push
js
xchg
mov
insl
push
jo
dec
mov
popa
rclb
sbb
dec
adc
repz
cmp
std
fsts
test
and
mov
mov
mov
push
pop
sub
add
sub
ret
add
shl
pop
pop
or
mov
lcall
out
mov
add
in
add
stos
lret
into
insb
fistpl
or
jae
inc
fwait
lock
or
hlt
xor
shlb
sbb
sti
add
push
inc
mov
jo
jmp
sbb
loope
add
pop
sub
sarl
sbb
mov
sahf
push
xchg
repnz
out
inc
push
jmp
lea
in
stos
gs
das
cmp
dec
fwait
dec
mov
sub
mov
jg
adc
or
dec
add
jmp
roll
or
mov
ljmp
movsb
sub
pop
or
movzbw
mov
in
cmpb
xor
dec
xor
dec
jmp
out
xchg
or
les
popa
or
mov
pop
dec
sub
repnz
lret
add
push
mov
sub
pop
lahf
cmp
or
mov
pop
or
ds
dec
add
push
in
add
or
jmp
jo
xchg
xor
xor
inc
cmpsb
xchg
sarb
into
jnp
and
nop
inc
adc
in
pop
mov
and
add
in
add
orb
aaa
pop
aas
aad
jno
xor
and
or
jb
ret
push
mov
xchg
cmc
jmp
pop
pop
leave
pop
lahf
add
cmpsb
and
push
pop
xor
push
push
xor
add
mov
xor
jb
mov
imul
aam
add
add
mov
frstor
pop
pop
add
mov
or
and
ljmp
insl
add
daa
jmp
loop
xchg
mov
pop
out
lock
shrl
fs
hlt
push
daa
cmp
xchg
inc
sub
rcr
cmpsl
js
sarl
dec
std
adc
or
add
repnz
mov
lds
xor
sbb
cmp
out
or
jmp
gs
ret
add
sub
inc
mov
shl
pop
js
dec
mov
pop
test
pop
dec
fdivs
test
nop
mov
out
ja
push
push
out
into
adc
cmc
mov
jno
sub
lods
mov
clc
or
jge
and
mov
pop
shlb
call
data16
xchg
into
mov
push
xchg
stc
sbb
push
mov
subb
pop
or
mov
inc
dec
sub
jo
jae
cs
movsl
dec
sbb
or
mov
clc
mov
jecxz
inc
mov
dec
mov
push
or
and
or
xor
outsb
das
add
pop
xchg
sbb
sbb
and
sbb
imul
or
mov
mov
pop
add
je
jmp
mov
add
mov
push
fdivp
loop
sub
test
jmp
mov
enter
notl
dec
mov
cmc
mov
mov
mov
xchg
cmp
les
jle
mov
xchg
cltd
pop
sub
and
lcall
hlt
dec
and
inc
lods
aam
daa
fcmovnu
pusha
popl
xorl
pop
jmp
or
call
lods
adc
mov
mov
mov
outsl
xchg
jmp
sub
or
cmp
push
inc
arpl
pop
out
xchg
add
and
and
sub
jbe
push
movb
cmp
cmp
push
xor
int
adc
fs
mov
xor
add
pop
sub
out
sbb
andb
inc
es
je
and
and
nop
out
imul
sbb
in
cmp
or
je
cwtl
xor
push
dec
pop
dec
dec
lret
adc
pop
xor
clc
or
mov
insl
and
push
xchg
cmp
sbb
add
pop
inc
xor
call
shll
iret
filds
adc
lock
ds
mov
sahf
repz
push
ret
push
add
jo
add
sub
fcoms
or
test
jmp
and
adc
pusha
popf
lcall
or
int
sbb
push
pop
mov
bound
or
test
pop
xchg
loopne
adc
std
iret
or
or
lahf
lock
dec
sub
sub
adc
ficompl
enter
xchg
and
mov
add
fsubl
jno
add
jmp
js
aad
fisttpll
cmp
mov
pop
ja
je
in
popw
jp
dec
in
test
cmpsl
popa
or
cmp
jnp
push
adc
sub
clc
pop
in
sbb
ljmp
lds
mulb
mov
inc
dec
pop
call
or
jmp
push
idivl
cli
jp
add
dec
shr
ret
adc
add
mov
mov
pushf
and
nop
fistl
adc
push
subb
pop
popf
cwtl
andl
cmp
outsl
neg
and
ja
sub
dec
and
gs
jo
xor
pop
or
pop
add
scas
pusha
sbb
dec
inc
or
xor
ljmp
arpl
adc
addb
xchg
xorb
push
pop
test
xchg
and
ds
dec
adc
pop
xchg
cmp
outsb
xchg
adc
lret
nop
lods
dec
ljmp
sub
or
sbb
andb
sahf
push
mov
mov
mov
pop
es
imul
in
jmp
ds
and
add
add
mov
rcrb
and
sbb
imul
mov
int3
pop
push
mov
add
outsb
jmp
call
test
test
stos
cli
sub
inc
mov
in
dec
pop
ds
negb
int
mov
add
and
push
push
add
pop
imul
fwait
xor
push
cmpsb
push
push
mov
mov
pusha
mov
stc
das
cmp
bound
or
sbb
add
xor
and
sbb
ja
jno
pop
std
clc
xor
pop
push
add
jg
shrb
xor
mov
sub
in
fmuls
xchg
in
orb
and
bound
adc
in
xor
jmp
xor
repz
lret
mov
push
cmp
icebp
push
outsb
xchg
mul
movsl
add
scas
insl
xor
in
roll
adc
and
pop
add
pop
lds
out
pop
movzwl
adc
xlat
xchg
pop
into
lret
rorb
mov
add
or
in
sub
pop
fnsave
push
in
jg
cmc
pop
push
jmp
sub
jae
dec
add
jbe
pop
sub
add
insb
or
daa
jnp
cwtl
dec
mov
mov
add
lret
nop
add
mov
xchg
pop
sbb
into
mov
iret
pusha
test
sub
rcll
test
cmp
push
jmp
pop
fisttpl
mov
fnstsw
jp
lret
fnstcw
and
sbb
add
sbb
dec
sub
cmp
sbb
jecxz
push
or
cs
pop
cmp
pop
add
dec
adc
mov
jg
and
out
jo
or
sub
push
xchg
aas
pop
cwtl
xchg
xor
inc
or
jbe
adc
add
add
outsb
jo
fists
and
ljmp
dec
adc
cmp
clc
addr16
add
adc
push
pop
data16
lods
packuswb
cmpb
nop
inc
popf
sub
cmp
pop
push
cmp
push
bound
pop
mov
pusha
scas
xor
adc
decl
mov
jns
cmp
lds
sbb
jmp
sub
xor
push
insb
xchg
adc
xchg
hlt
or
dec
jecxz
or
and
ret
lock
nop
popa
imul
sub
movsl
dec
adcb
imul
or
out
add
push
adc
or
pop
pushf
test
xor
not
pop
add
fs
xor
jmp
jns
mov
jo
pusha
dec
daa
xor
lret
movlps
sbb
pop
mov
and
scas
push
or
in
dec
out
addb
dec
mov
imul
xor
mov
mov
cs
push
xor
inc
bound
adc
pop
mov
outsb
sbb
pop
sbb
mov
add
xor
jle
pop
inc
add
adc
mov
mov
or
push
pop
xor
repz
das
aas
vcvttpd2dqy
pop
imul
aad
cltd
push
jo
dec
or
xchg
add
dec
mov
pop
lock
or
int3
subb
ret
test
aas
push
lds
xor
enter
dec
jl
pop
ror
sub
jl
mull
adc
mov
push
test
lahf
xchg
setno
mov
pop
fisttpl
sub
xor
mov
mov
clc
icebp
adc
pusha
and
push
and
lods
call
dec
std
jmp
stc
add
test
mov
xor
std
ret
mov
fdivr
xchg
add
and
ljmp
push
pop
sbb
jb
fcmovnbe
jge
pop
imul
into
std
sbb
jl
or
popf
jnp
add
cwtl
adcb
pop
add
dec
clc
ret
addb
shl
imul
int
filds
ror
sub
push
add
iret
ret
rolb
mov
nop
nop
in
adc
push
bound
jbe
neg
lcall
and
mov
mov
rcll
mov
outsl
icebp
lds
fadds
lret
into
pusha
push
sahf
jo
cmp
xchg
push
push
test
ret
pop
andps
mov
pop
cmp
mov
or
dec
or
clc
pusha
fmuls
mov
addr16
lock
mov
cmp
ljmp
cmp
adc
dec
outsb
push
adc
ror
inc
inc
scas
test
cwtl
pop
mov
or
imul
fcompl
and
mov
ja
push
daa
sbb
int
xchg
mov
ljmp
add
mov
pop
js
cld
jle
pusha
inc
push
jmp
pop
fists
popa
bound
aam
jmp
mov
push
mov
ljmp
movsb
adc
rolb
je
or
icebp
mov
dec
shl
add
out
sub
mov
mov
int
sub
sbb
mov
xchg
mov
bnd
push
icebp
and
fstps
mov
mov
mov
hlt
xchg
bound
adc
or
or
push
mov
mov
adc
dec
xlat
pop
adc
cmp
push
dec
pop
addb
icebp
addl
cmc
mov
add
sub
pop
adc
bnd
xchg
add
arpl
es
dec
or
push
ret
and
int3
xor
aaa
in
mov
push
inc
sbb
mov
shlb
xor
jg
jmp
push
push
pop
shll
jno
or
jge
pop
mov
lahf
dec
and
xorb
call
rolb
dec
mov
fadds
les
jnp
inc
mov
negb
inc
jmp
out
mov
clc
xor
sub
pusha
inc
leave
adc
sub
sbb
shrb
imul
jmp
xor
imul
in
inc
jecxz
jns
mov
nop
mov
xchg
in
daa
xor
jl
sbb
movb
mov
je
inc
imul
add
xor
mov
pop
sub
push
fcoml
pop
shr
lea
add
add
jmp
iret
data16
cmp
andb
sbb
mov
rol
aas
adc
out
xor
stc
idiv
loope
pop
jb
pop
movsb
daa
dec
in
sub
pop
push
push
out
jle
fs
pop
sahf
adcl
test
lcall
pop
mov
adcb
daa
subb
or
or
mov
pop
iret
inc
xor
jle
daa
jmp
rorl
push
mov
add
inc
arpl
push
das
mov
jno
add
sbb
fimuls
sub
push
jb
cmp
pop
iret
addr16
mov
sub
loope
pop
scas
repnz
push
push
imul
add
in
mov
nop
adc
jmp
cmpsl
jo
or
inc
add
jg
jo
adc
or
add
sbb
xchg
fs
xor
cli
les
dec
add
jl
test
ds
adc
in
xor
sbb
repnz
mov
jmp
cli
scas
xor
imul
push
in
scas
bound
stos
add
pop
mov
adc
movsl
movsb
inc
lea
mov
inc
add
vmwrite
or
rcrl
ret
cmp
mov
xor
inc
dec
push
loope
push
adc
jl
xor
sub
or
jmp
leave
scas
into
or
cmpsl
xor
add
add
call
js
jns
sahf
mov
mov
ds
mov
jl
or
dec
inc
loope
cld
sub
repnz
jmp
idivl
inc
inc
das
mov
fdivl
rorl
cmp
in
aaa
xorl
loop
loopne
add
sti
sbb
call
push
mov
push
inc
jg
mov
xchg
enter
xor
es
pop
ret
or
adc
adc
mov
mov
pop
xchg
push
mov
pop
pop
and
jb
or
call
jae
cli
mov
xchg
and
sahf
outsb
loop
mov
add
popa
cmpsl
pusha
sub
fists
and
rclb
dec
mov
movl
outsb
outsb
lret
mov
or
je
push
and
cltd
lret
movsb
jmp
cmp
leave
push
push
mov
cmp
pop
lods
sub
jmp
movsb
inc
sbb
mov
dec
or
dec
insb
lock
push
ljmp
and
pop
mov
inc
xor
and
aas
lret
addr16
xor
or
mov
pop
add
xor
lds
or
xor
out
add
add
stos
sub
add
sub
and
lods
jo
adc
inc
dec
add
fisttpl
into
fdivrl
mov
lret
adc
xor
dec
or
pop
nop
fadd
add
out
inc
add
pop
xlat
fildl
pushf
sbb
or
data16
mov
in
movsb
nop
lahf
xchg
and
mov
mov
test
and
pop
dec
xchg
xorb
xor
xor
leave
xchg
adc
stos
cmp
cmp
hlt
orb
push
xor
call
sti
push
xor
cmp
cmpsb
xor
add
fsubl
add
and
icebp
or
pop
subb
mov
out
pop
jnp
sub
or
insl
lahf
adc
adc
add
add
push
mov
loopne
loopne
into
ret
xor
push
sub
je
int
stos
sub
or
push
push
xchg
inc
out
test
mov
pop
jo
dec
dec
test
add
lods
push
mov
or
ja
inc
dec
or
and
in
jp
xor
push
xchg
push
orl
or
pop
imul
sbb
iret
inc
mov
repz
bound
clc
mov
push
cmpsb
dec
shrl
xorl
cmp
xor
jmp
pop
sub
jmp
xor
mov
sub
fs
inc
dec
enter
sbb
gs
call
adc
pop
adc
in
cmc
sarb
ret
jmp
lods
push
push
clc
cmp
xor
not
push
js
adcl
pop
push
hlt
push
and
cs
in
pusha
jmp
test
mov
popf
push
add
mov
cld
jg
lret
ds
push
or
xchg
xlat
jmp
fiadds
inc
mov
xor
fstps
add
shll
pop
jno
add
sub
jmp
xor
pop
cmpsl
sub
imul
shlb
xchg
xchg
add
ret
lea
ret
pop
testb
sub
cld
pop
add
movsl
push
scas
ret
icebp
add
or
add
loopne
or
xchg
movsb
mov
inc
call
jge
loopne
sbb
xor
pop
nop
fnsave
dec
out
sub
ret
inc
pop
aad
pop
negl
xor
js
sbb
mov
push
cmc
fmuls
cmpb
adc
mov
or
pop
jmp
mov
rcrl
pop
xchg
cmp
das
xor
jns
call
xchg
insb
stos
das
jmp
ret
jmp
leave
pop
xchg
pop
jns
xor
or
dec
insl
jbe
inc
xor
dec
push
out
dec
incl
movsl
xchg
loop
and
pop
jecxz
and
and
hlt
insb
shlb
xor
lds
les
or
add
mov
push
adc
dec
or
pusha
lods
cmpsl
sbb
fsub
mov
jmp
in
in
xchg
adc
movsl
mov
mov
pop
jbe
sbb
leave
out
inc
les
loopne
jmp
cmpsl
push
fsubl
stc
xrelease
adc
rorl
iret
mov
adc
adc
pop
cmp
andl
xor
jecxz
push
mov
iret
stos
daa
lds
push
pop
int
in
push
inc
daa
nop
push
pop
add
push
push
inc
adc
push
jne
push
dec
xchg
scas
test
xor
sbb
pop
lret
lock
clc
adc
pushl
jmp
mov
push
or
mov
pop
xor
dec
push
mov
pop
xor
dec
jbe
cmp
movsl
adc
mov
loope
movsb
cli
bound
imul
add
jb
xor
pop
bound
mov
add
pop
sub
xchg
inc
push
or
jne
cltd
adc
add
arpl
call
mov
daa
mov
or
pop
aas
cmpsb
sub
adc
or
mov
xchg
sti
sub
push
out
loopne
xchg
loop
aas
or
cwtl
negl
jmp
daa
or
add
repz
pop
dec
loopne
rcll
dec
mov
pop
outsb
movsl
xchg
call
push
pusha
push
cmp
adc
pop
sub
mov
cmpsb
push
pop
mov
shr
subb
push
mov
pop
std
or
cmpsb
aam
add
stos
push
push
or
pop
cld
movsb
in
stc
dec
es
push
movsl
je
xorb
push
sahf
mov
mov
test
add
insb
rclb
add
outsl
xor
or
sub
dec
xor
xchg
sub
insb
outsl
jo
orl
sbb
pop
lahf
outsb
xor
js
jmp
push
pusha
inc
push
push
jbe
jmp
adc
sub
cmpsl
ljmp
cld
aaa
cmp
es
sub
scas
mov
lods
xor
add
mov
jge
mov
shl
cli
mov
scas
push
xlat
push
cwtl
pop
push
or
fistl
test
inc
or
mov
enter
loopne
push
sbbb
cs
in
add
push
and
movsl
loopne
jne
cmp
or
add
sub
dec
icebp
outsl
add
xor
dec
pop
rcrb
jae
cmp
lods
push
mov
sub
das
insb
inc
pop
cmp
xchg
adc
xor
push
and
jns
mov
inc
fimull
in
push
mov
aaa
push
xor
cmc
sub
fwait
inc
repnz
dec
sbb
aaa
test
push
mov
shl
pop
push
cmp
xchg
outsb
add
and
jmp
push
push
idivl
test
lcall
nop
sub
in
dec
xchg
jno
mov
icebp
movsb
test
nop
dec
mov
push
add
aas
jmp
push
push
xchg
adc
mov
xorb
pusha
sbb
cld
or
je
push
and
cmp
daa
or
xlat
push
mov
imul
dec
repnz
gs
inc
movsb
push
mov
pop
sub
daa
inc
push
add
xor
loope
pop
mov
or
or
sbb
fiaddl
out
or
outsb
mov
mov
dec
add
das
xchg
out
push
push
push
loopne
push
xchg
inc
xchg
not
jge
adc
movsb
sub
cmp
push
ljmp
inc
aad
sub
insb
repnz
xor
and
rol
cmp
pop
mov
shl
push
and
push
add
sbb
xor
xchg
jecxz
and
pop
rcl
test
jne
push
mov
adc
or
clc
sub
aam
jp
cwtl
pop
jmp
mov
add
xchg
xchg
pop
into
add
sub
or
ljmp
push
xchg
xchg
mov
jmp
jge
or
icebp
fldl
add
subl
cmc
clc
int
sub
jmp
stos
into
mov
or
nop
mov
dec
cwtl
sub
push
mov
xor
gs
xchg
xchg
add
push
push
jmp
orl
push
xlat
shl
push
cmp
inc
fnsave
hlt
subl
xlat
imul
ljmp
mov
scas
pop
dec
pop
jmp
shll
cmpsl
mov
andb
lahf
in
mov
cwtl
jb
insl
cmp
or
sub
sub
cmp
lahf
jg
xchg
pop
lahf
rclb
mov
mov
popf
push
sub
and
fidivs
fiaddl
push
pushf
enter
pop
ljmp
out
mov
sbb
shl
jge
inc
lahf
xchg
pop
ret
jmp
enter
orb
cmp
lcall
iret
xchg
cli
pop
lock
xor
pop
or
jmp
cmp
push
xchg
adc
lea
dec
xchg
jp
or
cli
xchg
mov
add
cmp
gs
push
sbb
or
dec
xor
push
pop
mov
mov
pop
shr
add
dec
xor
push
push
add
xor
ficoms
shrl
mov
imull
hlt
xor
adc
adc
cmp
outsb
adc
jnp
or
adc
xor
cmp
ljmp
test
or
in
or
sub
addl
push
movsb
pop
insl
cmp
adc
test
leave
add
imul
cmpsb
adcl
ret
les
mov
into
cmpsb
mov
fstps
jbe
ret
add
test
dec
pop
loop
ret
cmp
push
dec
or
push
and
add
add
pop
bnd
rclb
lret
and
push
push
mov
xor
pop
sub
push
sahf
push
test
pop
push
in
and
out
xchg
insl
ret
in
outsb
pop
xor
adc
lds
out
cmp
dec
arpl
xor
testl
out
cmp
jo
js
movsb
stos
cwtl
inc
lods
inc
adc
out
add
pop
std
in
mov
mov
xor
xlat
push
inc
repz
dec
test
adc
jmp
sbb
pop
je
push
xor
sbb
into
pop
lret
and
xor
and
mov
and
mov
pop
push
xchg
lea
ljmp
roll
mov
and
sub
inc
loop
shr
dec
stos
cmpb
pop
xor
add
push
mov
loope
int3
leave
jecxz
insb
xchg
adcb
hlt
outsl
add
fdivs
test
sbb
sbb
jecxz
push
pop
sbb
pop
lret
push
mov
mov
add
out
jg
in
lds
popf
mov
push
pushf
adc
push
mov
push
pop
jmp
ss
pop
jae
test
adc
dec
neg
xchg
mov
lret
int3
adc
or
lea
mov
dec
ret
xor
mov
sarb
roll
popf
sbb
sub
nop
cli
or
push
lea
inc
mov
ret
je
pop
adc
inc
jbe
vpsubsw
scas
push
and
ds
cli
add
imul
cltd
mov
dec
xorl
movsb
cmp
xchg
aaa
sub
fstpt
mov
xor
fstps
stos
rolb
push
xchg
je
add
outsl
jae
fstl
xchg
sub
jp
inc
lret
mov
push
pop
push
js
push
push
sbb
pop
mov
mov
sub
jne
add
and
mov
add
and
sub
cmp
mov
sub
fcmovnu
daa
clc
jge
jmp
daa
mov
incl
mov
imul
xlat
lods
testl
mov
push
dec
add
jnp
add
sbb
or
and
das
inc
xor
fistl
or
inc
or
add
or
or
sub
jmp
push
fs
cmp
clc
pop
adc
ljmp
xor
testb
imul
pop
jno
add
ficoms
lret
xchg
lods
push
fstl
mov
fucom
cwtl
and
push
push
push
inc
add
adc
lcall
cmc
mov
test
out
xchg
fldenv
mov
cmp
xorb
add
xchg
xor
aad
fcoms
cmpsb
xchg
sbb
repnz
or
pop
add
jmp
cmp
pop
push
sub
or
push
mov
mov
mov
jmp
mov
loope
test
dec
or
roll
fcoms
push
test
adc
push
pop
mov
mov
pop
mov
cmp
in
push
push
mov
or
pop
lock
shr
fs
cmp
mull
mov
jge
inc
shr
adcl
inc
js
jmp
in
inc
and
push
iret
mov
push
pop
push
movl
jo
or
insl
pop
adc
rcrb
push
je
jmp
roll
fs
lods
push
daa
mov
xor
xchg
mov
std
jecxz
ljmp
dec
jp
sbb
pop
mov
loope
test
inc
stos
xor
and
ret
push
push
sbb
and
jmp
pop
pop
pop
mov
subb
stc
mov
xor
xchg
push
in
xchg
mov
push
mov
int
out
mov
push
inc
and
les
adc
jno
inc
mulw
bound
or
pop
add
rol
outsb
xchg
pop
push
iret
and
ljmp
popl
pop
cmp
push
push
xchg
lds
sbb
leave
push
push
pop
sbb
imul
xorb
ja
sarl
ret
jge
xchg
xor
ljmp
into
pop
test
sub
xacquire
and
call
xor
scas
or
and
in
or
mov
xor
stos
sub
lds
movsl
ret
adc
rcll
and
sub
adcb
jo
xor
ds
arpl
mov
aam
and
add
mov
aad
jp
push
ljmp
test
dec
adc
mov
pop
daa
mov
xor
stos
push
mov
loop
jle
push
push
push
push
sub
outsb
enter
mov
sub
insb
dec
je
pop
pop
lds
mov
jl
mov
xorb
mov
cmp
sub
jmp
mov
imul
sbb
mov
pop
xchg
rcrb
or
loop
and
mov
lret
enter
movsb
pop
and
xor
idiv
pop
mov
jmp
add
push
pop
push
add
in
xor
and
xor
pop
jmp
clc
xchg
xchg
cmp
and
cli
push
popf
mov
pop
int3
in
mov
pop
xchg
jns
push
cmpsb
movsl
add
ja
pop
addb
mov
inc
mov
mov
pop
pop
cltd
add
mov
addl
adc
inc
sub
jnp
pop
sub
sarl
jnp
cmp
inc
pop
bound
sub
pushf
std
jnp
add
sbb
adc
shll
fcomps
add
fs
push
mov
jmp
jle
nop
stos
add
mov
rorl
call
push
shl
or
cwtl
aas
inc
jno
ss
pusha
add
hlt
cmp
inc
or
jmp
out
fs
push
jmp
pop
fimuls
pop
roll
lds
dec
shll
mov
negl
addl
fidivrs
xor
inc
js
dec
push
daa
pop
out
mov
into
mov
inc
cmp
dec
mov
or
mov
pop
mov
les
xor
int3
inc
orl
jmp
or
test
orb
aad
js
or
push
scas
xchg
push
xor
xchg
pop
mov
js
and
adc
mov
cwtl
repz
test
mov
xchg
ret
dec
jp
dec
xchg
push
int3
sub
lock
or
popf
shlb
pop
jmp
push
or
pop
sbb
dec
push
popa
or
cmp
outsl
mov
add
inc
xor
out
jo
jmp
mov
sarb
ret
daa
jmp
mov
push
pusha
xchg
not
shl
outsb
jb
addl
jg
sti
imull
sbb
adc
daa
or
pop
xor
mov
mov
mov
hlt
aad
or
sub
jb
and
push
test
dec
notb
xchg
push
repz
xchg
loop
daa
jmp
repnz
xchg
push
into
in
push
fcomip
push
testl
insb
mov
mov
jp
gs
add
clc
xor
pop
ja
mov
cmpb
jb
lods
dec
inc
xlat
push
aad
in
subb
adc
xchg
mov
cwtl
fs
push
dec
lods
or
ret
mov
adcl
popa
adc
outsb
add
inc
cmp
jmp
cmpsb
adcl
mov
cwtl
pop
mov
in
les
addb
ret
bound
inc
daa
aas
sub
mov
pop
or
data16
ficompl
push
add
mov
enter
idivb
clc
pop
imul
out
es
ret
mov
rcrl
arpl
mov
sub
or
mov
pop
xchg
xchg
pusha
scas
inc
dec
aas
dec
outsl
imul
dec
xor
addr16
je
mov
dec
in
cmpl
and
push
loope
mov
add
sti
cmc
movsl
mov
dec
in
outsl
ret
rsqrtps
std
jo
add
sub
and
push
push
stos
fs
adc
xor
pop
pop
data16
lret
inc
dec
pop
in
lret
push
adc
arpl
lcall
out
jmp
sub
adc
pop
pusha
mov
and
inc
nop
sti
sub
xchg
out
arpl
or
or
insb
sbb
negl
mov
ret
push
push
mov
scas
push
sub
lds
pop
repz
sbb
enter
and
add
dec
adc
mov
leave
push
mov
cmc
or
inc
aam
pop
mov
pop
mov
cmp
jp
movb
push
and
rcll
scas
cmpsb
pop
sbb
imul
sub
shrb
hlt
test
cmp
push
pop
jmp
xor
in
dec
nop
xlat
push
jmp
jle
jg
maskmovq
shr
negb
add
jmp
ficoms
repnz
mov
mov
inc
shll
push
testl
lds
out
inc
int
popf
pop
fdivs
inc
mov
add
mov
or
pushf
popa
mov
xorl
jmp
sbb
inc
outsl
dec
or
cmp
addr16
in
popa
or
mov
imul
inc
adc
jmp
int3
adc
add
pop
and
jne
in
lahf
inc
lock
or
jno,pn
test
outsl
fdivr
daa
jne
push
and
adcb
lret
push
jmp
push
xchg
sbb
add
jns
insl
xchg
cmp
sub
fists
testl
push
push
mov
xor
pop
adc
les
xlat
pop
loopne
inc
inc
div
adcb
cmp
mov
or
loopne
or
daa
jnp
cmp
ja
insl
orb
add
jno
lret
add
test
fistps
pop
mov
rdtsc
cmp
xor
push
push
mov
shr
lahf
inc
adc
lods
sbb
in
lret
icebp
out
std
addb
jmp
fs
cltd
sbb
mov
in
sbbb
or
xchg
fwait
lods
mov
popa
cmp
mov
loop
push
push
xchg
lds
push
jp
incl
jmp
add
pop
shr
push
mov
sbb
pop
mov
dec
xchg
fiaddl
push
inc
push
mov
sub
repnz
cs
lock
sbb
mov
in
mov
mov
adcl
add
mov
bnd
dec
jmp
hlt
jge
idivb
and
aam
fimuls
push
mov
movsl
mov
sub
jmp
xchg
or
ja
pop
mov
sub
shl
sub
pop
pop
sub
inc
xchg
jge
dec
sub
xchg
add
adcl
and
mov
mov
jae
push
addl
rorb
icebp
shlb
sub
sar
sbb
imul
xor
xchg
xor
cmp
pusha
push
sub
arpl
and
cltd
add
mov
sub
adc
add
ds
loopne
lods
and
ret
jle
pusha
addl
lcall
es
add
push
outsb
push
mov
jge
ret
jl
hlt
and
or
add
pusha
ljmp
popa
jmp
xrelease
pop
push
pop
lret
js
inc
shl
imul
sahf
jl
pop
xor
in
lahf
jno
dec
iret
add
nop
popa
scas
ja
mov
hlt
and
or
push
push
movsb
jbe
or
pop
sub
int3
mov
or
sti
mov
mov
mov
sbbl
jb
and
lahf
and
arpl
and
inc
pop
adc
add
clc
loope
daa
sub
loopne
or
cmc
push
pop
adcb
inc
out
adc
pusha
std
and
stos
and
xor
movsb
call
xor
push
test
rcrb
and
insl
jge
shlb
aad
enter
inc
adc
pop
stos
shll
and
add
sub
in
mov
stc
pop
pop
daa
push
mov
mov
jmp
push
das
mov
shll
ds
jmp
jg
pop
jecxz
sub
sbb
add
pop
stc
mov
mov
add
pop
pushw
cmc
enter
or
cmp
fldt
fs
enter
nop
or
push
fildl
shl
inc
mov
mov
insb
add
jmp
push
mov
fstpt
fsts
aas
addr16
movsb
xchg
inc
sub
and
or
out
addl
call
mov
add
push
inc
jmp
inc
add
icebp
sahf
aas
mov
mov
mov
inc
je
jns
popf
lock
orb
lret
addl
adc
lcall
mov
popf
rorb
and
mov
shlb
popf
inc
cmp
dec
dec
adc
sub
aas
push
cld
int3
add
and
aad
and
or
fsub
insl
and
add
jo
jmp
push
fmul
cmp
xor
adc
fiadds
xor
jnp
push
mov
inc
sbb
adc
popa
or
add
adc
or
in
sub
lahf
jns
test
pop
mov
xor
jge
daa
adc
sub
rcrb
mov
lods
xor
mov
fadds
or
mov
add
je
mov
add
inc
or
xor
pop
pop
xorb
sub
cmpsl
push
jns
sarl
ja
push
jmp
push
test
add
icebp
lds
movsl
pop
fistps
js
xor
adc
inc
inc
fbld
mov
lds
enter
in
ss
scas
jne
push
pop
sub
pop
int
jecxz
mov
and
adc
call
inc
lcall
or
push
decb
add
into
fistpl
jbe
ljmp
ret
dec
mov
ds
adc
jns
mov
pop
adcl
jl
pop
sub
test
cmp
or
sti
and
add
mov
andl
inc
jae
cli
shrl
lods
inc
in
xor
push
jno
into
out
or
push
add
mov
fbld
test
inc
cmp
add
inc
ret
inc
jle
sub
sub
push
cmp
sub
fdivs
mov
add
fildll
imul
cmc
cwtl
imul
outsl
mov
push
roll
rorl
xor
insl
dec
add
fcmovnbe
jmp
push
dec
imul
in
hlt
and
pop
cli
stos
pop
outsb
mov
sbb
fdivp
cs
jp
fcmovb
xor
aaa
ja
xchg
in
out
outsl
daa
xor
js
orb
add
push
dec
sti
movsl
mov
dec
scas
push
adc
js
cmc
adc
push
cmpsl
pop
nop
in
cmp
mov
pusha
and
cmpsb
push
adcb
mov
sub
mov
pop
add
cmp
lock
not
xor
enter
push
fs
fsubl
stc
out
jo
je
and
push
cmp
sbb
nop
test
call
push
add
in
pop
mov
inc
pop
pop
sbb
add
cli
les
adc
cld
mov
push
mov
subb
call
jns
int3
adc
dec
loopne
call
sbb
or
xor
sub
arpl
push
sbb
sub
je
ficoml
imul
rol
loopne
add
mov
in
xor
frstor
inc
outsb
sub
fisubs
and
adc
push
jle
sbb
mov
jae
mov
mov
cltd
rcr
sub
mov
mov
es
or
jp
adc
add
cli
jle
sbb
adc
clc
sbb
sub
pop
mov
dec
sbb
jmp
push
mov
inc
mov
dec
or
pop
mov
and
dec
push
lea
add
mov
jb
jmp
sbb
jae
scas
inc
dec
sub
notb
enter
mov
add
cmp
shl
lahf
or
jl
push
pop
loop
test
push
mov
jb
dec
jmp
mov
mov
pop
push
pusha
push
repnz
mov
jbe
jecxz
lahf
fdiv
in
jae
lods
jmp
popl
test
lock
imul
outsl
fildl
sbb
ljmp
jb
shl
jb
enter
insb
movsb
mov
ljmp
sub
fimuls
movsbl
fildl
fnsave
lock
xchg
mov
outsb
mov
xlat
cld
lods
mov
jnp
das
cmpsb
call
pop
mov
add
in
sub
or
mov
add
jo
aaa
shll
data16
sti
or
inc
mov
push
sub
rcll
testb
add
and
jl
imul
movsl
cmp
nop
xchg
pop
or
fbstp
cmp
and
test
inc
mov
cwtl
sbb
xchg
inc
ss
pop
mulb
mov
mov
rol
sbb
daa
pop
sub
invd
xor
aas
cmp
mov
sahf
test
pop
sub
mov
bound
mov
mov
dec
outsl
ret
jb
xchg
in
sarb
sub
cld
fiadds
push
mov
notl
mov
in
je
cmp
pop
lock
mov
cmp
int3
test
mov
dec
xor
add
ljmp
pop
pop
call
pop
adc
push
jecxz
add
add
or
jmp
mov
sub
adc
cmp
inc
xchg
insb
add
xchg
pusha
and
mov
push
mov
in
fbstp
dec
mov
pop
test
clc
pop
loope
add
outsb
mov
mov
mov
mov
daa
sbb
addr16
push
jle
mov
add
ret
pop
push
or
jmp
or
ljmp
jge
mov
sbb
out
push
adc
xchg
adc
sti
test
mov
jp
push
or
gs
push
jmp
jecxz
pop
rcrl
orb
lods
cmp
outsb
pop
dec
jns
xor
jne
cmp
lret
pop
push
insl
dec
xor
lea
pop
sub
inc
push
or
sbb
dec
add
call
inc
pushf
inc
lcall
pop
add
addb
add
mov
ljmp
add
movsbl
stos
popa
adc
fidivrl
push
inc
loop
dec
xor
aad
mov
adc
gs
loope
and
add
jg
adc
je
jp
push
lock
jmp
hlt
loope
push
mov
shll
pop
and
ja
mov
mov
dec
shlb
pop
fldenv
sbb
aas
push
imul
jp
and
rolb
stos
adc
push
je
push
adc
pop
adc
add
cmp
jns
pop
and
push
mov
add
push
and
sbb
xor
jmp
fistps
mov
and
xor
pop
or
add
inc
jno
imul
fs
jns
fs
aas
mov
inc
js
jge
jne
mov
out
js
pop
or
cmp
mov
fsub
dec
mov
add
int
add
lcall
shlb
push
add
nop
aam
lcall
jbe
xor
add
xchg
cld
dec
insl
in
sarl
cld
mov
mov
or
sahf
shrb
into
xchg
sub
sti
push
dec
pop
aam
mov
mov
jae
adc
xor
push
push
dec
xor
movl
and
push
pop
add
mov
pushf
repnz
stos
nop
ja
bound
mov
iret
mov
pop
push
cmpsb
add
jg
add
pop
pop
and
mov
sub
pop
or
insb
out
fs
xchg
or
out
lods
push
aad
pop
mov
jns
add
sub
mov
or
aaa
or
pop
pop
and
add
add
push
es
add
inc
stos
jno
ficomps
dec
mov
fnstsw
ljmp
push
pop
insl
aaa
test
clc
arpl
rcrl
ret
cmc
sub
pop
push
gs
daa
pop
les
mov
gs
mov
xor
cli
addr16
imul
xchg
es
leave
pop
inc
sub
xlat
or
shl
adc
cmp
lods
fnsave
inc
shr
pop
dec
dec
xor
add
shrl
jg
data16
add
xor
insb
fisubrs
inc
push
dec
mov
movsl
push
push
jmp
mov
pusha
or
mov
call
push
pusha
imul
orb
je
loopne
dec
loop
je
xchg
sbb
or
movsb
imul
js
sbb
lahf
jo
push
inc
xchg
mov
rolb
add
out
push
int
inc
cltd
add
cli
clc
dec
mov
mov
out
sbb
fadd
scas
rcr
shl
mov
pop
pop
push
rorl
aam
jmp
push
add
loop
mov
cs
jns
cmp
daa
mov
cmp
fnstenv
push
insb
or
rcrb
or
lea
sarb
outsb
push
aas
mov
sub
imul
sub
subl
lock
nop
aas
sbb
mov
and
mov
test
push
and
mov
sbb
in
test
pop
mov
loop
dec
mov
loope
inc
xor
mov
ljmp
cwtl
push
test
cmp
adc
pusha
das
xor
inc
push
sbb
addr16
xchg
sub
cmp
or
sub
adcb
xor
imul
pusha
mov
rolb
xor
xchg
mov
ret
jbe
xchg
push
add
ljmp
hlt
pop
jp
mov
jmp
inc
ret
or
sub
xchg
mov
jno
leave
and
pop
scas
test
sbb
mov
or
in
icebp
pushf
sub
ds
push
xchg
mov
xchg
add
jnp
cmpsl
pop
inc
fadd
imul
pop
sahf
jmp
ffreep
enter
push
popf
jnp
mov
mov
pop
sbb
mov
imull
test
mov
and
add
lds
rep
add
data16
push
mov
stc
add
fimuls
jle
mov
shlb
call
lahf
insl
ret
mov
push
cs
test
nop
repz
dec
dec
mov
xchg
mov
or
inc
or
std
pop
push
mov
mov
outsl
sti
inc
gs
in
adcb
cmp
icebp
push
test
sbb
ljmp
or
adc
dec
fsub
mov
mov
mov
xor
push
or
mov
jp
xor
add
jb
cmpsl
adc
inc
sbb
andb
enter
out
loop
aad
add
mov
nop
jle
inc
je
add
jmp
inc
shll
and
xor
sub
test
push
jmp
sub
pusha
add
addr16
mov
out
adc
stos
add
addr16
les
or
aaa
mov
jns
inc
aad
fucomp
icebp
push
or
jno
jb
or
ret
inc
jmp
mov
cmpsl
movsb
mov
xchg
or
loop
and
or
les
fbstp
add
and
pop
adc
mov
push
pop
or
sbb
aas
jmp
clc
aam
scas
xor
xor
cmp
dec
icebp
mov
test
xor
rorl
rolb
je
stc
in
add
jnp
cmp
cmp
mov
mov
inc
sub
xor
or
adc
js
pop
and
pop
sub
stos
insb
mov
or
popa
adc
mov
pop
add
out
jnp
sbbb
stos
or
jmp
push
jbe
call
ficomps
movsl
and
add
and
pop
and
je
add
cltd
sbb
decb
xchg
xchg
add
jmp
aaa
ljmp
nop
mov
pop
adc
pop
xor
or
shrl
ljmp
ja
inc
in
mov
pop
bound
in
ds
jne
repnz
xchg
cmp
xchg
jmp
pop
sbb
or
pop
cmp
lcall
or
xchg
popf
mov
add
inc
fsubs
cmp
cmpsb
cmpsl
push
repz
pusha
push
in
iret
pop
aam
adc
shlb
sti
add
mov
or
cmp
inc
int3
dec
add
pop
not
lahf
subb
outsb
add
test
mov
mov
sub
cmp
jne
dec
pop
sti
or
jb
test
pop
je
pop
popf
and
loope
add
in
mov
push
mov
add
xor
mov
and
lcall
add
pop
sbb
dec
fsubrs
xor
sub
loope
int
or
pop
pop
push
decl
insb
sbb
enter
add
xor
lret
popa
sub
arpl
jnp
lock
sub
dec
mov
and
aam
push
lods
imul
inc
inc
ja
add
and
add
adc
mov
pusha
popf
or
jo
pushf
pop
clc
repz
ljmp
mov
lea
fs
xorb
mov
aam
pop
dec
out
mov
push
cmp
jo
daa
mov
sahf
inc
call
lahf
into
push
xor
jo
js
int
cmc
mov
and
sti
jg
std
add
jae
xchg
push
mov
dec
pop
xchg
adc
mov
popa
push
push
jmp
ljmp
xchg
fisttpl
push
sub
adc
enterw
mov
dec
pop
loop
adc
cmp
fcomps
out
mov
push
push
or
jge
jl
adc
sbb
leave
push
pop
mov
punpcklbw
or
out
daa
into
cltd
pop
xor
sub
jmp
pop
aam
push
jg
ficomps
jmp
dec
mov
push
dec
pop
xor
push
push
inc
push
mov
pop
sarl
aas
jp
or
stc
and
orb
push
xor
mov
or
pop
in
pop
cld
in
sub
or
push
cmpsl
test
xchg
add
xor
jecxz
pop
mov
mov
sahf
adc
sbb
sbb
jmp
movsb
cmpl
mov
subb
jno
xchg
sub
push
sbb
push
inc
cmp
add
or
cwtl
inc
jmp
pop
sbbb
lret
dec
jl
sub
aaa
push
cmc
fldl
dec
lret
mov
cmp
imul
f2xm1
push
mov
pop
jno
add
push
jmp
fs
icebp
jnp,pt
fistl
insb
jecxz
imul
aas
dec
call
mov
push
shr
add
sub
loope
jno
dec
or
add
mov
jb
cmp
loop
inc
repz
and
and
inc
shr
xor
in
sub
jmp
xor
fstpt
mov
cmp
aam
out
dec
or
pop
xor
adc
jb
pop
add
push
pop
je
pushf
decl
leave
inc
addb
mov
lods
fstl
shrb
jbe
add
xchg
inc
shr
mov
or
icebp
fs
pop
or
push
leave
mov
dec
rclb
add
mov
lret
ds
leave
icebp
mov
out
lret
mov
outsb
dec
sub
push
jl
push
push
adc
jmp
sub
mov
pop
push
sub
iret
or
add
scas
mov
mov
sub
adc
push
jmp
mov
or
fdivrs
and
icebp
push
cld
xor
scas
fsts
adc
and
cmpsl
jbe
adc
xor
mov
push
jmp
sub
pop
pop
xchg
xchg
mov
pop
cld
nop
jg
ret
or
and
out
add
pop
xchg
into
add
pop
jmp
mov
jns
sbb
adc
fstps
cwtl
gs
out
sub
push
jg
hlt
add
daa
mov
mov
movsl
ret
das
cwtl
loopne
pop
jne
dec
jg
mov
loope
mov
jp
fdivrp
punpckhwd
jns
sub
sub
add
add
js
and
pop
push
pop
xchg
xchg
mov
dec
jmp
mov
and
xchg
imul
rorl
shl
int3
in
push
dec
notl
out
in
mov
bound
push
xor
pop
xor
and
ja
cmc
aad
rol
sub
es
inc
rcll
or
jmp
aas
mov
or
js
push
fs
pop
add
sub
bound
dec
lock
std
fwait
pop
rcrl
xor
mov
xchg
mov
push
add
js
jmp
repnz
mov
mov
je
pusha
sahf
aam
sbb
movl
je
lcall
dec
sti
cld
dec
xor
lret
mov
or
inc
xor
addb
pop
lds
jb
popf
sbb
fsts
insl
jmp
jmp
mov
pop
out
andl
aam
repz
outsb
push
pop
push
mov
rorl
rol
loop
push
push
mov
add
mov
mov
add
sub
jmp
and
cwtl
jge
mov
sub
cmp
pop
shr
btr
lahf
imul
xchg
inc
adc
xlat
nop
adc
and
popf
push
imul
push
sub
loope
or
cmp
loope
daa
ja
je
inc
push
xor
leave
adcl
add
jnp
sarl
mov
ja
push
cmp
sbb
sub
fdivp
in
pop
lds
stos
popf
sub
and
inc
out
or
inc
shl
xchg
nop
mov
sti
jmp
xor
pop
or
aam
movsl
rclb
mov
jns
repz
clc
je
scas
pop
jb
pop
fs
ljmp
and
adc
mov
add
enter
mov
sbb
aad
enter
pop
pop
pop
xchg
or
and
adc
adc
xor
push
add
and
sbb
mov
sub
dec
nop
and
sub
xchg
cmp
lock
mov
pop
sbb
mov
sub
ljmp
mov
push
xchg
dec
jp
pop
pop
jmp
pop
inc
jecxz
push
dec
fnsave
pop
pop
add
pop
push
lods
jle
push
fbstp
test
xor
adc
inc
shl
mov
pop
cs
mov
add
mov
or
rorb
add
outsl
add
jbe
arpl
sti
rcrw
shr
lahf
sar
rclb
mov
in
out
inc
add
cli
mov
loope
iret
dec
out
stos
pop
lods
jae
dec
cmp
jmp
in
inc
rol
push
push
adc
call
repnz
into
test
xchg
sub
push
push
dec
cmp
jae
sub
push
daa
ds
pop
pop
test
scas
sub
add
push
or
pop
incl
ret
jg
mov
aas
and
mov
sbb
cmpsl
jno
push
pop
sbb
js
imul
pop
in
xchg
mov
rclb
scas
mov
mov
daa
push
cltd
mov
mov
lea
call
and
scas
roll
and
in
lods
push
ret
push
in
loopne
lds
outsb
xor
sub
sbb
ds
or
or
dec
xlat
call
js
add
add
and
push
and
inc
jmp
test
addr16
pop
mov
and
cmp
cwtl
jg
jge
out
jo
fsts
icebp
lret
push
xchg
inc
pusha
std
adc
in
dec
daa
and
dec
pop
adc
pop
adc
sbb
addr16
into
pushl
insb
mov
movsb
test
xor
fists
stos
push
add
mov
push
mov
jmp
cltd
xor
push
mov
pop
repz
push
or
xor
imul
mov
and
sbb
add
dec
or
pusha
pop
std
add
dec
cmp
cmc
mov
shrb
push
dec
outsb
ljmp
repnz
test
subb
push
dec
nop
mov
jmp
add
jle
add
loope
inc
or
bound
xlat
dec
enter
sub
jb
jle
xor
sbb
xorb
cld
pop
xchg
sbb
lret
scas
inc
jle
mov
mov
or
cltd
rcll
mov
loope
push
sub
sbb
mov
mov
mov
xchg
jg
inc
inc
jecxz
xchg
ja
push
test
xchg
add
add
sbb
push
or
or
jle
adc
test
nop
out
push
imul
aas
arpl
adc
dec
cmp
add
pop
loope
out
push
fisttpll
inc
mov
add
mov
dec
sub
lcall
pop
cs
jmp
test
pop
hlt
jle
mov
pop
xchg
pop
fimuls
and
add
push
sbb
cmp
mov
add
jmp
pop
sub
ljmp
xor
dec
xchg
cmp
jnp
imul
gs
test
jno
andb
jbe
jp
ljmp
pop
insl
pop
hlt
adc
push
mov
fnstsw
js
addr16
sub
idivl
dec
out
rclb
mov
dec
mov
pop
sub
inc
pop
inc
mov
add
or
insl
adc
xor
in
addb
imul
dec
test
aas
push
push
jg
in
enter
ret
mov
test
mov
hlt
mov
sarl
pop
sub
pop
push
push
mov
into
mov
pop
adc
push
sbb
pop
push
in
mov
push
and
orb
cmp
dec
cs
inc
xorb
hlt
mov
in
push
es
ffree
pop
pop
or
sub
stos
cmp
add
push
sahf
or
mov
cs
sbb
cmp
mov
adc
test
nop
ss
cmpsb
inc
push
xor
cmp
inc
mov
xchg
sub
scas
push
bound
mov
xlat
scas
ss
adc
dec
inc
pop
lods
jmp
sub
mov
adc
xlat
dec
notb
jae
pop
mov
in
iret
push
out
xor
nop
lea
mov
mov
subl
shlb
xchg
push
or
int
loop
or
sbb
or
dec
add
mov
nop
aam
mov
aam
test
lock
mov
pop
jmp
dec
ljmp
dec
out
cld
orb
or
jecxz
ret
mov
adc
sti
xor
push
sti
icebp
dec
ror
xchg
sbb
push
cld
sbb
pop
sub
mov
cld
loope
enter
push
inc
loope
add
mov
mov
ja
or
mov
mov
pop
call
mov
sub
push
dec
cs
loop
inc
cld
jbe
adc
mov
cmpb
push
mov
pop
pop
inc
mov
aaa
mov
std
mov
jmp
jecxz
push
lea
adc
mov
inc
cmp
int3
clc
add
imul
stos
fnstenv
loope
inc
pop
shrl
adc
pusha
jbe
xor
cmp
loopne
mov
ror
call
imulb
push
jmp
adc
add
sub
jmp
fmul
or
enter
cmp
pop
push
push
push
outsb
pop
add
or
in
cld
lret
dec
mov
test
ljmpw
adc
daa
pop
sbb
mov
xchg
mov
or
inc
push
loopne
sub
sbb
or
push
and
push
dec
rcrb
inc
dec
into
add
push
mov
test
xchg
test
mov
arpl
fsubrs
data16
mov
pop
pop
and
sbb
adc
push
pop
mov
aad
or
push
or
jnp
inc
out
add
inc
aas
lea
pop
neg
imul
dec
and
push
add
loopne
ret
fptan
repz
enter
pop
lods
andb
shld
jmp
mov
mov
push
aam
or
jmp
pop
lods
fidivl
adc
and
jns
or
clc
sub
lret
sub
rorl
scas
lods
add
inc
lcall
stos
adc
xchg
xchg
mov
stc
nop
test
pop
lods
outsl
dec
lods
pop
mov
sub
fnstenv
ffreep
fstl
sbb
std
inc
je
mov
pop
insl
jle
push
inc
ja
sbb
jnp
add
push
out
into
adc
push
movsb
adc
sub
movsb
into
xchg
sbb
push
pop
sub
xchg
loope
negl
rep
ds
stc
sti
hlt
jp
cs
sbb
pop
inc
pusha
push
clc
adc
in
movsl
push
out
sbb
jmp
xor
icebp
cmc
jae
gs
xchg
and
dec
notl
std
mov
sbb
sysexit
and
add
xchg
jmp
sub
pop
mov
outsb
repnz
scas
add
pop
fdivrl
sub
cmp
push
ljmp
mov
daa
mov
and
sub
loope
dec
push
mov
jge
and
test
add
sbb
push
lea
jns
int3
push
or
cli
dec
fidivs
jmp
out
ret
loop
pop
mov
int3
push
jbe
push
add
pop
push
cli
movsl
push
pop
mov
test
mov
cltd
sbb
mov
cmp
int3
xor
xchg
adc
test
sbb
insb
sub
pop
adc
cmp
movsb
adc
lds
xchg
push
fcmovne
cmp
mov
int3
or
pop
xor
pop
adcb
cli
addr16
or
in
das
imul
xor
mov
cmp
js
cld
cmp
out
xchg
repz
add
add
ret
cmp
push
jmp
in
loope
push
mov
fldl
imul
call
mov
and
push
in
and
mov
pop
dec
mov
and
push
imul
hlt
add
ret
add
mov
push
push
push
or
sub
mov
xor
test
or
fcomps
int3
push
adc
jp
push
outsb
adc
push
ss
adc
xchg
or
mov
sub
and
pop
jb
icebp
imul
lahf
es
xchg
mov
stos
leave
nop
or
adc
dec
pop
repz
mov
aaa
add
xor
cmc
mov
les
xor
mov
mov
pop
out
inc
xor
mov
sbb
in
xchg
add
std
pop
mov
jb
fcomps
push
daa
mov
sahf
mov
mov
std
add
mov
rcrl
sbb
adc
dec
clc
push
mov
into
cmc
pop
pop
mov
mov
rclb
int3
cmp
mov
dec
sub
lahf
lds
dec
or
or
add
sbb
xchg
stc
fdiv
out
inc
mov
clc
push
sub
xor
cmp
cltd
pusha
dec
xlat
jno
sbb
sub
fstl
aam
es
or
ss
xorl
push
gs
stc
sbb
sbb
jmp
mov
push
cmp
cmp
add
pop
pop
or
je
pop
sarb
not
push
pusha
sti
pusha
les
dec
in
int
cmpsb
call
ds
pusha
mov
fdivrs
mov
jmp
jae
push
sbb
fstpl
dec
sbbl
inc
mov
mov
insl
xchg
in
or
or
xchg
pop
mov
adc
movsb
rol
or
push
loopne
out
ds
testb
adc
fstl
mov
push
ret
gs
das
pop
fdivrp
jb
or
and
or
sti
push
sbb
pop
popa
cld
dec
repnz
cmpsl
shr
or
jecxz
movsl
idivl
add
jne,pn
and
sub
inc
sbb
jne
cmpsb
nop
or
cvtdq2ps
or
imul
js
mov
and
test
jae
dec
imul
lahf
adc
mov
add
add
pop
cmp
mov
insb
das
mov
push
adc
dec
pop
pushf
orb
sarb
jg
mov
mov
pop
movsl
or
cmp
shl
das
jns
sbb
mov
pop
cltd
mov
flds
cmp
jg
mov
fadds
mov
sub
cmc
or
push
xor
lcall
add
push
push
and
jne
jmp
pop
adc
xor
adc
jmp
mov
add
jge
cmpsb
sbb
and
push
jmp
sub
pop
sub
push
add
inc
pop
mov
pushf
adc
cmpsb
test
push
mov
xchg
lock
pop
jl
addb
shr
pop
ror
push
or
pop
shrb
pop
icebp
loopne
ds
mov
cmp
add
lods
mov
cmp
cmc
mov
sub
add
jg
int
and
mov
jg
cs
sub
push
aaa
test
js
pop
push
daa
and
fsubs
pop
test
sbb
xor
decl
mov
je
pop
data16
add
pop
insb
xor
pop
cs
pop
fwait
adc
icebp
in
push
push
daa
test
mov
fs
xchg
scas
cmp
xorb
add
add
neg
sub
xchg
cmp
lods
inc
int
in
sarl
cmp
add
ficoml
mov
aad
xlat
jl
ljmp
les
lds
mov
aad
cli
or
int
add
xlat
cmp
add
mov
out
or
dec
ja
jb
sub
lahf
fcomps
cltd
adc
sbb
iret
dec
adcb
not
cmpsb
pop
ss
jne
xor
pusha
dec
sub
jmp
pushf
mov
cmp
jmp
inc
and
lock
push
push
dec
in
icebp
or
add
jmp
add
orb
mov
jns
dec
dec
movsl
fsubrl
stos
mov
add
sbb
ss
and
push
push
loop
add
mov
lea
shrb
sbb
xchg
inc
add
xor
rolb
sub
dec
test
add
pop
sub
push
or
mov
pusha
subl
jns
sub
xor
pop
xor
push
dec
pop
test
jno
je
jmp
xlat
or
add
aaa
das
mov
push
dec
or
inc
fildl
mov
dec
mov
sbb
push
jmp
out
out
pusha
jns
mov
outsb
cmpsb
shrb
test
xchg
push
or
xchg
bound
lock
adc
xchg
cmc
int3
dec
loope
outsl
lds
push
add
mov
add
mov
add
jmp
push
dec
push
add
mov
dec
xor
ds
pusha
cmp
rcll
inc
scas
dec
mov
jmp
jle
leave
pop
adc
mov
loop
xchg
push
xor
fldenv
xchg
in
in
jmp
xor
dec
rorl
add
lret
pop
bound
insb
dec
jae
and
stos
sub
pop
xchg
push
cwtl
sub
les
test
push
mov
or
sub
das
xchg
pop
jmp
cmp
aam
clc
adc
pop
push
ds
jmp
jecxz
sub
gs
mov
jecxz
shll
dec
and
mov
jmp
add
sub
fcoms
rolb
sbb
jo
ret
dec
shl
sub
jb
popa
push
hlt
inc
pop
cmp
jnp
popf
mov
sub
cmc
addr16
sar
xchg
pop
rcrb
jge
lahf
adc
aam
adc
adc
xchg
shl
ja
and
data16
std
loope
sub
in
das
pop
mov
cmp
test
mov
out
jno
sti
sub
pop
test
xchg
cmp
jp
or
sbb
pop
fsts
mov
ds
scas
dec
xchg
add
add
inc
shrb
jb
mov
repnz
sub
lahf
push
sbbb
das
dec
sub
jmp
add
xchg
clc
adc
add
lahf
sahf
imul
pop
sbb
inc
aaa
outsl
lock
std
lcall
mov
or
add
add
adc
inc
rolb
jp
push
or
sbb
xor
or
add
leave
mov
lods
xor
stc
cmp
repz
cld
lds
stc
lds
sub
mov
push
lret
sbb
sub
imul
jmp
inc
add
std
outsl
cwtl
lea
je
cmp
repz
sbb
jl
xor
sub
popf
js
addb
and
cmpsl
sub
mov
mov
and
test
in
cs
dec
xor
imul
ret
pop
ret
push
lret
cmpl
arpl
inc
pop
and
xchg
hlt
dec
movb
jno
skinit
ret
or
dec
pop
jb
ret
jne
cmpsb
icebp
adc
dec
push
fcoms
sarl
jmp
jb
xlat
xchg
orl
scas
rcr
add
and
loopne
jno
and
pop
sub
das
sub
jae
add
add
aam
lods
repz
hlt
or
xchg
xor
xchg
push
mov
cmp
loop
or
out
cmp
add
inc
pop
sub
stos
sub
add
mov
mov
jmp
push
sbb
loop
pop
aas
inc
xor
sbb
subb
jmp
pop
fs
adc
push
in
out
pop
xchg
loopne
jmp
dec
dec
pop
movsb
mov
mov
je
dec
mov
inc
into
push
aaa
mov
push
fsubrs
jmp
stos
scas
xor
not
sub
or
mov
clc
jmp
aam
jmp
adc
xchg
or
xlat
mov
xchg
and
adc
xchg
pop
mov
shlb
pusha
mov
sub
push
or
pop
lea
jl
add
push
jmp
mov
and
inc
or
insb
sub
repz
xchg
outsl
jmp
xor
xchg
mov
outsl
add
cwtl
sbb
jo
repz
pop
cwtl
lret
push
pop
mov
andnps
inc
push
or
inc
movsl
in
push
imul
mov
aaa
lods
pop
clc
cmp
sub
subb
mov
lahf
jp
and
dec
mov
push
cld
into
jne
push
inc
xor
pop
pop
hlt
xchg
xchg
mov
mov
add
cli
or
sbb
or
insl
jne
cmp
inc
push
push
xorb
lds
inc
dec
pop
mov
mov
mov
das
push
xchg
sar
xor
mov
lods
shl
out
aas
push
lods
cmp
dec
or
sbb
repz
orl
aas
xchg
lock
dec
and
add
sub
xor
pop
sub
orl
push
push
loopne
shl
sbb
add
divb
aam
push
add
dec
jmp
push
adc
cli
or
cmpsl
or
sti
sbb
inc
jl
jne
pop
cmp
in
mov
scas
in
and
sub
xchg
pop
push
mov
out
js
pusha
test
out
repnz
movsb
std
bound
mov
mov
pop
xor
sbb
and
movsb
sahf
or
pop
leave
xchg
inc
xor
dec
fists
or
js
jmp
mov
mov
neg
lret
incl
out
out
arpl
ljmp
mov
adc
pusha
pop
mov
pop
mov
xchg
pop
dec
adc
mov
adc
adcb
xchg
add
or
cmp
jo
push
iret
or
cmp
or
idivb
mov
dec
sub
imul
enter
cs
and
es
shlw
jb
jne
adc
clc
mov
out
aad
cmp
and
add
in
mov
add
cmp
cmpsb
hlt
dec
movsl
cmp
aas
xor
daa
pop
rcrb
ja
stos
adc
or
jb
adc
pop
push
lcall
dec
inc
pop
push
call
call
add
add
popa
add
and
in
dec
pop
test
out
sub
les
pop
sub
add
inc
inc
sbb
or
ret
or
add
push
shr
push
lea
scas
lds
call
repz
int3
add
push
mov
pop
push
je
mov
xchg
pop
movsb
out
push
adc
dec
cmpsl
dec
xchg
arpl
push
push
pop
inc
cmc
lods
daa
push
dec
jae
mov
dec
adc
or
mov
daa
stc
shrb
fdivl
pop
sbb
nop
sbb
mov
cmpsb
andps
or
jno
rolb
out
out
es
imul
std
or
sub
xor
and
iret
flds
cmpsb
int
xchg
lods
out
mov
or
pop
inc
mov
cmp
addl
adc
and
int
add
jmp
push
jae
clc
mov
scas
push
xor
jmp
pop
pop
push
pop
popl
or
cmpb
cmp
out
and
push
leave
dec
out
gs
aam
shlb
sub
add
popa
inc
or
xor
in
jno
outsb
mov
dec
out
daa
push
stc
addb
in
pop
sbb
movsb
lret
cmp
call
out
jmp
stos
and
ljmp
inc
das
add
xor
push
pop
pop
fwait
dec
add
into
loopne
scas
dec
lock
sbbb
pop
in
inc
subl
popa
pop
jmp
dec
pop
pop
pusha
rcll
pop
and
mov
fcmovnb
ret
pop
ja
in
inc
add
xorb
clc
sub
jmp
mov
cmpsb
push
jbe
pop
mov
dec
xchg
pop
ljmp
or
jl
jmp
daa
cld
out
dec
mov
inc
out
push
push
inc
and
cwtl
push
enter
cmpsb
mov
aaa
jno
jae
jg
in
sub
fidivl
cs
adc
mov
add
add
pop
inc
cmp
add
lret
or
out
or
loope
sbb
es
ja
iret
jae
mov
cmp
mov
sub
lea
clc
je,pn
push
sbb
mov
repz
cmp
shlb
leave
pop
pop
or
fsubr
push
fildl
push
jle
fs
ret
shl
push
pushf
sub
arpl
add
call
dec
push
or
ret
xchg
push
jmp
call
pop
xor
pop
mov
bound
pop
jmp
pop
push
repz
jle
and
loop
push
push
icebp
mov
lock
inc
mov
or
add
and
movsl
xchg
js
sbb
pop
mov
sbb
aaa
sub
xchg
xchg
or
leave
sub
aaa
push
xchg
lcall
xor
rcrb
and
push
add
roll
pop
push
filds
aas
ds
and
push
pop
clc
dec
cld
pop
mov
fwait
cmp
sbb
or
pop
addb
dec
mov
fldl
push
in
es
int
fwait
in
pop
xchg
cmp
fldenv
or
cmp
in
clc
push
push
mov
mov
addr16
fwait
mov
pop
sub
in
stos
fcoml
inc
jge
enter
mov
pop
add
dec
lahf
pop
xlat
jl
push
sub
xchg
mov
pop
call
push
pushf
mov
cmp
inc
or
in
add
xchg
inc
outsb
ja
mov
adc
dec
lods
addr16
inc
mov
popa
jmp
cmovs
data16
sub
or
roll
inc
pop
movsb
pop
mov
subb
sub
popf
jnp
sub
adc
dec
pushf
orl
std
fcomps
pop
scas
cmp
and
into
in
test
pop
das
adc
jbe
push
test
pop
cmpl
cs
cld
inc
lods
pusha
xor
sub
ds
push
inc
mov
and
rclb
jmp
cmp
flds
cwtl
add
mov
push
sub
mov
cmp
pusha
xchg
cwtl
add
aaa
aam
enter
mov
mov
inc
rcl
ljmp
dec
add
mov
daa
adc
pop
lock
pop
cmc
imul
sub
loopne
fmuls
push
jmp
jns
dec
sarl
mov
sarb
jmp
fyl2xp1
push
jle
xchg
scas
dec
arpl
push
jmp
add
cs
arpl
push
imul
out
or
pushf
sub
pop
xchg
inc
fwait
jl
inc
dec
ret
cwtl
into
and
hlt
cmp
nop
pop
scas
dec
pop
mov
adc
dec
mov
jbe
imul
cwtl
sbb
aad
mov
nop
imul
or
or
and
push
out
or
daa
shl
add
dec
xchg
pop
or
and
js
daa
push
sbb
and
leave
cmp
mov
cld
jb
or
subb
dec
inc
loop
sub
adc
jmp
pop
adc
and
or
lahf
push
xchg
jmp
out
adc
out
rorb
adc
add
push
mov
outsb
addl
or
daa
xorb
in
nop
or
mov
cwtl
orb
xchg
insl
dec
jmp
adc
pop
and
movsl
imul
inc
pop
inc
out
adc
inc
adc
add
roll
push
add
adcb
bound
inc
and
sbb
cmp
and
or
int3
sub
pop
jl
mov
in
xchg
into
sub
fstp
pop
test
push
xor
addr16
sti
test
dec
xchg
mov
jnp
push
xlat
mov
je
mov
orl
mov
fistpl
xchg
sub
pop
push
or
jbe
hlt
stos
stos
pop
outsl
add
push
push
adc
aad
cmp
push
pop
lock
adcb
sbb
push
cs
adc
cmp
adc
shr
adc
dec
cmp
pushw
pop
test
xlat
mov
jno
mov
add
sub
or
pop
dec
decb
cli
inc
cwtl
dec
rorb
push
out
sti
rcl
push
movsb
out
or
lock
test
je
cmp
push
inc
jbe
ficompl
movl
aam
xchg
pop
or
pop
cwtl
stos
fcomps
flds
lds
xor
inc
xor
cld
cli
fcoms
pushf
ret
adc
jae
movsb
adc
out
mov
fadds
push
mov
mov
test
xor
jbe
cmc
movb
or
pusha
imul
cmc
neg
xor
bound
push
sub
push
add
lahf
add
mov
sbb
cld
inc
or
rcll
or
insb
and
add
xor
add
loopne
add
adc
sbb
inc
outsb
ret
in
sbbl
pop
pusha
icebp
out
pop
add
iret
aas
xorl
add
shlb
data16
push
dec
xor
into
mov
mov
dec
xor
not
test
pop
or
or
leave
ljmp
inc
in
xchg
pop
inc
push
loope
mov
outsl
mov
mov
fcoms
icebp
and
inc
or
jnp
cmpsl
aam
adc
mov
loope
add
xchg
pop
lods
lds
cltd
push
adcb
inc
pusha
sub
or
jne
icebp
add
scas
mulps
insb
push
cwtl
testb
sub
mov
sub
fidivrl
lods
data16
and
stos
cmp
pop
in
arpl
xchg
stos
mov
push
inc
xor
mov
push
push
jmp
rcl
fwait
data16
stc
addr16
push
jge
jb
inc
jg
dec
je
and
xor
icebp
negb
and
cmp
jle
xor
mov
icebp
pushf
popa
push
or
cmp
adc
ret
mov
mov
aas
test
sbbb
sub
repz
daa
cmp
cld
int
sbb
dec
mov
adc
mov
call
sub
dec
jmp
pop
imulb
jmp
sahf
pop
jmp
push
gs
loope
stos
sbb
push
or
in
in
xchg
rorl
js
add
add
jp
out
mov
or
mov
neg
inc
imulb
xor
dec
sub
dec
mov
lods
lock
or
loope
test
mov
hlt
dec
ret
mov
or
stos
aad
in
sbb
and
loope
jmp
lods
mov
loop
mov
pop
and
mov
pop
je
sbb
push
push
sub
fstl
aam
call
xor
sub
dec
xor
inc
mov
lock
mov
addb
sti
aas
add
xchg
adc
into
mov
loop
cld
sub
push
outsb
loope
adc
inc
pop
adc
test
rorb
add
aam
repz
add
jmp
shr
adc
xchg
add
repnz
aas
push
dec
inc
sbb
jbe
outsb
inc
loope
call
in
mov
jmp
add
push
incb
sub
push
mov
loop
je
push
cli
daa
lcall
inc
iret
pushl
dec
mov
sub
push
les
mov
adcb
add
sbb
jne
pop
fisubs
lds
push
fiadds
mov
subb
jno
xchg
push
mov
push
add
das
or
lea
mov
cmp
dec
push
mov
sub
repnz
je
dec
dec
mov
ss
sub
mov
pop
or
fmuls
neg
jmp
mov
leave
insb
ror
inc
jl
push
not
xchg
lcall
daa
repnz
aam
jb
mov
jmp
neg
cmp
push
call
mov
sar
pop
xor
das
jmp
lods
mov
enter
pcmpgtw
popa
inc
inc
mov
ljmp
sbb
dec
xor
sub
sub
jbe
mov
xor
xchg
mov
push
push
jge
add
pop
or
xor
cmc
pop
mov
aas
fidivl
lahf
xchg
pop
push
loop
mov
push
sbb
or
mov
and
nop
inc
ds
adc
cmp
divl
mov
push
or
pop
mov
adc
add
inc
ds
and
dec
and
cwtl
sub
out
jge
iret
bound
xor
dec
leave
cmp
and
add
add
adcl
daa
mov
jne
adc
outsb
inc
push
leave
pop
mov
add
test
xor
cmpl
cmpsb
jle
nop
repnz
sarb
dec
out
clc
push
dec
adc
clc
insl
mov
das
fmull
add
jl
les
enter
jp
sbb
outsl
add
xchg
jbe
add
cmc
jnp
stos
push
add
lds
jno
sub
test
dec
movsb
mov
pop
mov
test
xor
lods
jecxz
add
dec
sbb
jno
les
xchg
sub
test
dec
pushf
pusha
push
jmp
cltd
push
test
lods
xor
mov
push
sub
jmp
pusha
lcall
inc
pushf
cmp
in
or
lret
add
fisttpl
test
push
aad
adc
cmpsl
xchg
push
rclb
dec
dec
gs
jp
cld
cmp
or
pop
aad
cmp
sbb
dec
inc
and
sbb
mov
repz
pop
pop
or
or
or
mov
test
add
jp
decb
fnstenv
dec
std
in
insl
cwtl
push
nop
pop
orb
jns
add
int
fcmovb
loope
mov
in
arpl
jae
sahf
nop
popf
testb
rdtsc
adc
test
loop
adc
jo
jmp
xor
popf
push
sti
xor
mov
sub
mov
enter
jmp
cmp
pop
insl
in
loopne
mov
inc
gs
add
std
imul
pop
in
pop
dec
pop
imul
sub
xchg
mov
testl
pop
neg
push
les
clc
ret
sub
rcrb
scas
ret
les
test
mov
cmp
cmp
add
xchg
pop
mov
dec
adc
or
sbb
add
ret
or
xchg
push
ret
in
add
into
or
imul
lock
mov
ds
mov
or
je
jbe
and
shld
sti
les
add
push
push
movsb
andb
aaa
fadd
pop
ret
add
jmp
shlb
in
pop
or
push
mov
js
movsl
push
mov
loope
xor
out
test
mov
lods
movsb
or
pusha
insl
imul
mov
mov
push
add
lds
shr
and
pop
addr16
xor
outsb
stos
and
outsb
aas
xor
jb
lock
dec
shrl
test
pop
stos
aaa
push
and
je
add
es
sub
xor
xor
loopne
mov
cmp
shlb
jecxz
dec
movsb
test
neg
lock
dec
mov
sub
lods
out
push
and
hlt
subl
fadds
mov
jno
inc
lds
and
push
test
sub
popf
push
pop
or
sub
rcll
jmp
in
inc
push
xchg
cmp
adc
sbb
mov
sar
cwtl
pop
mov
fistpl
xor
cmp
mov
pop
sub
push
xchg
incb
std
dec
in
jge
out
and
jmp
sub
lret
sbb
mov
pusha
clc
add
cmpsb
cmp
orb
pop
sub
push
mov
adc
scas
push
pop
adc
or
xchg
pusha
js
out
aad
test
rcrb
pop
pop
jae
add
pop
push
mov
push
pop
mov
imul
scas
or
pusha
pop
add
jae
jmp
lods
lock
loop
sub
pop
add
repnz
scas
test
out
push
adc
adc
jb
std
bound
add
subl
xorl
inc
adc
pushf
bound
sbb
inc
cmp
dec
sbb
in
dec
push
in
mov
jbe
add
inc
aaa
and
in
mov
sub
mov
in
repnz
fsubrs
pop
scas
fildl
andl
dec
and
cmc
ja
push
or
xchg
sub
sub
cmp
mov
loopne
mull
rolb
inc
push
movsl
movsl
sub
fiaddl
je
sub
dec
add
sub
dec
je
push
stos
mov
add
sub
push
pop
push
dec
and
or
mov
jmp
add
test
or
adc
cli
inc
pop
loope
xchg
test
sbb
add
mov
negb
jmp
push
cmp
pop
xlat
aam
loop
filds
lds
push
dec
fsubl
loopne
jmp
stos
call
movsb
in
push
or
arpl
les
pop
jae
stc
cmp
pusha
adc
mov
mov
xor
ret
jg
rep
test
mov
out
not
loope
jmp
pop
test
or
andb
stc
jge
addr16
pop
nop
repz
inc
add
out
and
jmp
lods
popf
hlt
jo
mov
jnp
xorb
inc
inc
lret
in
add
jo
xchg
xchg
psrld
lret
and
pop
or
push
add
cmp
shll
mov
adcb
lods
fnstcw
push
push
mov
jp
out
sub
cmp
jmp
xor
inc
jb
nop
dec
jbe
daa
sub
negb
inc
and
sbb
fists
push
push
inc
scas
lret
sbb
xor
and
jg
cmpsl
orb
lds
andb
sbb
mov
xor
fiaddl
add
and
jmp
sbb
cltd
xor
or
test
or
push
pop
shr
cmp
ja
adc
cmp
xor
add
xchg
mov
mov
or
push
add
adc
int3
dec
shrb
and
dec
or
xchg
subb
mul
ss
lds
out
adc
and
sub
out
or
jb
pop
imul
or
fndisi(8087
dec
pop
and
sbbl
fs
pop
lods
mov
adc
pop
or
push
aas
mov
mov
aas
cs
add
mov
loop
mov
sub
cmovg
mov
mov
xchg
mov
push
icebp
scas
outsb
mov
xchg
lods
xor
and
inc
mov
jo
pop
inc
test
dec
mov
push
sbb
and
pop
rcrl
loopne
dec
popf
push
xchg
sahf
sub
or
fiadds
jg
sub
pop
xor
cmpsb
adc
test
pop
pushf
jg
lret
xor
dec
stos
push
push
pop
and
or
xchg
imul
shll
mov
jge
and
testl
inc
jmp
add
imul
adc
scas
adc
insl
and
repz
push
pop
jnp
inc
data16
xor
and
cmpsb
cltd
jle
xor
rol
push
jb
orl
or
sub
enter
daa
mov
shll
std
dec
scas
and
sub
dec
mov
sbbl
mov
sbbl
sbb
fiaddl
push
add
in
dec
mov
xchg
sub
jmp
ret
push
jg
stos
sbb
scas
out
mov
int3
cli
in
dec
cwtl
nop
jb
push
mov
xchg
xlat
add
jecxz
cli
pop
push
jmp
cmpb
push
jmp
jmp
out
xor
stos
lret
jge
and
push
sub
lods
stos
mov
add
mov
and
cmp
push
add
or
adc
push
jmp
sbb
inc
xor
jbe
sbb
add
xor
lods
stos
popa
outsl
adc
ds
sbb
xor
pop
fs
inc
xorb
add
in
jnp
mov
jp
sub
xor
movsb
push
xor
mov
popa
sub
cmc
dec
push
jmp
rol
xchg
cmp
pop
cwtl
inc
or
or
pop
pop
ja
mov
xchg
pop
setb
sbb
pop
dec
pop
push
push
cld
nop
mov
jmp
pop
jecxz
inc
push
test
mov
ret
xlat
adc
sbb
or
mov
sub
loop
mov
dec
test
inc
ret
inc
movsb
xor
dec
mov
mov
mov
jo
pop
mov
daa
aam
movsl
rcll
scas
or
movsl
lea
test
and
jne
push
imul
and
scas
out
enter
add
add
push
adc
es
push
add
subb
mov
jo
xchg
xorl
leave
inc
loop
or
sub
dec
jmp
xchg
stos
lret
icebp
and
xchg
mov
mov
sbb
push
sbb
or
push
dec
loop
add
lea
add
or
push
mov
push
imul
xchg
mov
push
inc
sub
sti
cmp
adc
jmp
cmp
push
xchg
rorl
sub
testb
cmp
dec
fldlg2
mov
mov
scas
xchg
sbb
dec
pop
adc
add
enter
xor
adc
xor
and
in
mov
mov
xorb
push
push
das
xchg
in
es
jmp
and
inc
mov
inc
add
scas
shlb
in
ljmp
and
or
aaa
not
mov
gs
cmp
cmp
inc
jae
mov
dec
addl
sub
mov
mov
shlb
push
mov
mov
not
movsl
inc
mov
add
adc
pop
stc
pop
adc
bound
data16
adc
and
cli
dec
hlt
mov
cmp
pop
or
pop
push
mov
jmp
inc
push
push
pop
sti
les
add
aad
dec
push
mov
adc
dec
xchg
test
je
push
outsl
inc
fcmovb
jmp
jp
negb
imul
ret
cmpsb
and
es
pop
inc
xor
ret
rorb
jmp
stc
shrl
adc
roll
aaa
inc
insl
inc
xor
inc
jno
es
or
arpl
dec
stc
pop
or
int
mov
inc
in
add
jae
or
sbb
inc
add
loopne
cmpsb
popa
sti
decb
mov
or
call
cld
jge
and
cmp
data16
cli
movsb
and
hlt
and
cmp
mov
pop
jmp
rcll
lahf
push
loope
adc
repz
mov
or
jno
push
push
lcall
add
les
xchg
cmp
out
frstor
lea
xchg
add
mov
add
std
jg
pop
stos
pop
or
dec
jmp
shl
cmpsb
ret
pusha
enter
sbb
fstpl
out
in
fcomi
or
bound
mov
mov
push
xor
orb
lret
insb
pop
and
imul
pop
jmp
and
outsb
cwtl
push
sbb
les
lahf
orb
xchg
dec
mov
push
adc
mov
fs
out
jge
jb
mov
filds
jmp
les
pop
push
pusha
adc
out
or
mov
push
sub
push
pop
adc
add
gs
push
add
jle
adc
sbb
mov
mov
daa
fldenv
cmp
cmp
movsl
enter
xchg
outsl
xchg
pop
or
aam
nop
ds
lods
sbb
repz
ds
popa
movsb
movsl
mov
add
mov
mov
icebp
call
dec
iret
adcl
loopne
loopne
jbe
cmp
xor
add
lods
sub
pop
inc
push
shl
subb
mov
adc
and
enter
jmp
out
inc
hlt
cmp
or
jb
sbb
mov
loopne
inc
mov
in
sub
push
adc
pop
adc
cmp
sub
pop
add
push
or
add
adc
inc
dec
out
sbb
movl
mov
jmp
mov
inc
mov
mov
fimuls
addb
in
jmp
push
or
cmpsl
inc
stos
push
mov
push
mov
sub
pop
adc
mov
sti
xchg
cmp
mov
sub
es
or
pop
sub
mov
xor
jl
mov
cmpsb
pop
push
outsl
add
xor
mov
aaa
push
inc
add
pop
sub
jo
mov
xor
xchg
sub
pop
mov
pop
push
sub
pop
xor
bound
jnp
sub
inc
jns
imul
push
push
adc
das
xchg
mov
mov
test
jmp
lahf
mov
and
sub
pop
inc
imul
fwait
mov
mul
and
dec
stc
enter
ret
push
push
dec
js
lods
sub
test
dec
adc
jp
repnz
push
xor
leave
int3
std
inc
sbb
ret
xlat
repnz
ljmp
mov
lods
jne
lock
jg
insl
imul
pusha
mov
sbb
clc
in
push
lcall
mov
movb
cli
loope
mov
cmp
popa
sub
adc
xchg
adc
sbb
adcl
mov
lea
ljmp
aad
cmp
cmp
mov
lods
call
pop
pop
xlat
lds
push
out
daa
xlat
lods
scas
pusha
iret
js
or
dec
scas
pop
mov
cmc
sub
push
inc
dec
lcall
jb
add
cld
jge
pop
inc
shlb
test
pop
or
sbb
push
xor
dec
ret
jmp
add
cli
je
cld
int
lea
call
push
mov
xchg
lds
pop
cld
nop
rorb
pop
cmpb
nop
or
adc
cmp
test
dec
pop
cwtl
cmp
movsb
in
and
dec
lahf
rorb
lds
out
cli
push
shl
xor
jle
mov
inc
and
cltd
dec
sub
jo
dec
clc
hlt
addr16
or
notl
or
dec
lret
xor
stos
adc
pop
xchg
and
pop
jo
and
dec
pop
mov
push
push
test
sub
push
lock
dec
aaa
jecxz
dec
mov
icebp
xchg
add
or
or
and
pop
add
aad
mov
loop
ret
sbbb
int3
sbb
dec
cmp
lret
xlat
or
popl
push
push
std
xor
fcom
adc
inc
adc
add
jns
sub
push
jnp
fstpl
push
cmp
in
push
dec
pusha
pop
inc
test
add
add
ret
popf
ljmp
or
or
mov
std
pop
xor
cld
jmp
or
pusha
push
stos
lock
add
pop
adc
jmp
xchg
stc
mov
sub
and
or
mov
xor
adc
xchg
pop
out
daa
mov
pop
mov
ret
pop
sub
add
int
cmpsl
jno
in
pop
or
mov
and
loopne
cs
ror
pop
cmpl
aam
jmp
arpl
add
push
fwait
test
dec
dec
sub
sub
xchg
out
loope
cld
jmp
cltd
inc
mov
mov
or
pusha
mov
add
xor
cmp
add
test
mov
add
je
sub
call
dec
inc
adc
push
insl
and
cmpl
rol
aas
sub
popf
ljmp
aas
divb
pmaxsw
dec
xchg
mov
ds
pop
xor
shll
xchg
add
mov
cmpsb
cmp
push
cmp
neg
lcall
pop
in
xor
sbb
add
arpl
faddp
lret
adc
cmp
or
mov
ss
not
dec
jmp
push
in
xchg
mov
xchg
clc
jbe
dec
repz
or
mov
leave
icebp
das
int3
or
mov
imul
push
sbb
lret
popf
adc
adc
enter
and
loopne
lret
pop
aaa
jecxz
pop
mov
add
scas
add
inc
popa
punpcklbw
es
mov
xchg
into
cwtl
jle
pop
inc
popa
jo
mov
repz
add
aad
out
aas
mov
mov
push
bound
adc
movsl
imul
push
push
mov
push
add
and
outsl
pusha
push
pop
nop
test
dec
pop
add
add
addl
popl
dec
push
push
mov
push
pop
adc
inc
mov
fcoms
jle
out
scas
out
ret
xor
call
xor
ret
cmp
lahf
dec
mov
sbb
push
sub
sbb
pop
imul
xor
mov
mov
jmp
aas
mov
push
or
mov
stos
in
and
jmp
vphsubbw
and
aad
and
iret
mov
xor
sub
in
cmp
loop
jmp
pop
dec
inc
pop
divb
cmp
sub
int
adc
rcrl
push
bound
inc
xchg
scas
mov
mov
ret
add
not
inc
mov
sbbb
ret
adc
push
xchg
and
rolb
sub
sub
pop
divl
jne
mov
inc
or
shrb
push
xor
xchg
js
xchg
icebp
les
add
jp
rcl
shrl
or
lock
fstpt
idivb
lds
lret
dec
cmp
std
push
fildll
inc
ja
cmc
xchg
add
lret
pop
movsl
popa
or
sub
pop
pop
leave
add
subb
adc
out
inc
xor
mov
not
inc
out
or
xchg
gs
and
ror
cmc
mov
push
pop
mov
ret
pop
int3
scas
jecxz
jbe
in
and
rcr
outsl
leave
push
push
js
mull
adc
push
pop
xchg
add
mov
cmpsl
pop
add
xchg
test
lods
add
push
inc
jno
mov
add
pop
hlt
jns
jge
frstor
xor
mov
idivb
push
or
test
xor
ljmp
pop
push
push
cmp
push
push
mov
xlat
movsb
insl
push
mov
shl
xor
and
mov
testb
not
movsl
inc
pop
jmp
jg
push
cli
cli
pop
nop
gs
std
xor
ja
pop
fucomp
addb
in
jne
fs
or
loope
adc
pop
outsb
sar
add
pusha
ret
adc
add
es
mov
lds
inc
out
pushf
popa
push
mov
lods
mov
dec
jmp
ds
pusha
and
mov
leave
dec
adc
and
jmp
mov
leave
xor
les
movsl
out
push
mulb
std
mov
icebp
icebp
in
mov
stc
repz
sub
mov
sbb
dec
push
push
lret
push
es
mov
or
adc
sbb
push
sahf
adc
adc
popf
push
inc
sub
push
lds
rcrb
push
subb
aad
pop
pop
dec
xchg
xchg
incb
pop
sahf
dec
add
and
mov
loopne
or
sub
jl
pop
lcall
das
adc
shll
or
sub
and
adc
repz
clc
jle
adc
ds
daa
arpl
imul
sti
push
sub
push
test
push
pushf
std
xchg
pushf
pop
mov
dec
or
xor
push
inc
int
cmp
lock
add
xor
stc
cli
mov
nop
in
mov
sahf
push
lret
add
loop
cmc
dec
fs
adc
mov
sti
flds
sub
imul
add
repnz
nop
push
test
loop
jle
sarb
jae
cmp
adc
add
es
inc
cwtl
add
push
or
xor
pop
adc
loope
jg
jmp
and
pop
rol
add
js
dec
popa
dec
out
and
mov
out
xor
pop
dec
xchg
shl
rorb
notb
sarb
je
or
sbb
and
sets
mov
les
mov
or
or
pusha
add
pop
xor
inc
pop
daa
out
sbb
inc
jmp
dec
shl
xor
punpcklbw
mov
daa
sbb
sub
add
neg
cmp
data16
pop
into
and
in
sbb
dec
pop
add
mov
jp
inc
jp
popa
fadd
xor
stc
adc
or
fmul
sahf
cli
push
test
xchg
push
cld
adc
inc
fstl
outsb
push
adc
adc
lods
jl
stc
mov
inc
rep
or
inc
testl
mov
mov
xchg
push
xchg
fcmovnb
or
mov
ret
aam
outsl
and
das
adc
shr
ret
push
ljmp
test
aam
rorb
mov
and
add
mov
mov
subb
jmp
mov
sbb
inc
sub
dec
orb
inc
mov
neg
add
inc
mov
pop
adc
pop
iret
in
in
adcb
data16
leave
push
jle
jne
test
outsb
hlt
and
js
pop
dec
lods
pop
pop
pop
sub
push
addr16
adc
mov
in
repnz
pop
dec
xchg
mov
adc
stc
dec
hlt
add
pop
pop
pop
jmp
add
jl
adc
push
or
pop
test
xor
pop
pushf
das
xor
ret
jb
push
or
lock
jmp
inc
jg
sbb
mov
xorb
add
imul
stos
inc
xchg
into
adc
adc
jl
push
jg
outsl
pop
add
cmpsl
xlat
shll
xor
js
push
push
push
out
pop
stos
dec
add
and
sub
push
hlt
push
mov
adc
mov
jle
add
inc
mov
es
dec
inc
add
jge
es
or
leave
inc
jp
mov
daa
fs
lock
jl
inc
dec
jmp
add
jp
add
inc
dec
jmp
adc
lahf
dec
movsl
fsubrl
mov
mov
sub
bt
fdiv
insl
mov
and
jl
pop
fsubp
add
lcall
push
inc
inc
roll
mov
add
dec
jmp
add
or
mov
repz
sub
jae
loop
add
inc
adc
inc
push
out
lea
stos
cmp
or
push
pop
aam
jmp
mov
inc
mov
or
loope
adc
sbb
inc
push
push
cmp
pop
scas
dec
mov
das
and
push
mov
jle
rcrb
out
push
add
add
push
pop
mov
pusha
mov
xchg
enter
mov
or
subb
mov
mov
pop
inc
sub
push
fcoms
adc
jno
xor
inc
cmp
push
mov
xor
lods
das
cwtl
nop
testb
sbbl
mov
push
inc
pop
push
jbe
add
dec
popl
add
and
add
test
sbb
andb
add
cld
lea
pop
inc
push
xor
dec
les
or
jne
clc
add
dec
aas
out
dec
test
test
cwtl
aaa
push
add
lods
pop
in
lds
orl
iret
sub
outsb
or
sarb
popf
add
lds
fsubrs
cli
push
jmp
mov
or
cmp
lds
in
pop
cmp
jmp
hlt
jnp
test
arpl
in
cmp
imul
jnp
lock
xchg
or
pop
outsb
sbb
jmp
cli
push
cmpsb
mov
ret
rcrb
mov
movsb
stos
pop
pushf
orl
loope
push
or
jb
sub
pusha
push
inc
mov
jp
add
push
jne
pop
mov
jmp
clc
mov
daa
idiv
jbe
test
sbb
mov
fistps
addr16
and
jne
clc
sti
aas
addl
pop
or
bound
cmp
pusha
inc
loop
fadds
imul
mov
sub
test
push
mov
stos
loope
push
in
mov
cli
jg
test
in
mov
add
xchg
insb
xor
and
add
jg
jno
ds
jmp
pop
lcall
push
add
xchg
pop
fisttpl
dec
add
inc
imul
test
pop
sti
loop
mov
push
andb
jmp
cli
ja
sbb
xchg
lret
lods
add
ljmp
mov
xor
je
daa
mov
testl
fs
pop
cmp
xchg
push
addl
jmp
xor
cld
fldcw
inc
or
xor
cmp
sbb
out
xchg
cwtl
xchg
inc
out
and
insb
arpl
add
dec
push
sub
jno
dec
or
sub
lahf
loope
pop
outsl
lds
aas
and
push
push
pop
lcall
mov
pop
and
stc
dec
push
sarb
cs
ss
lret
and
mov
push
push
mov
cmp
adc
dec
nop
or
pop
insb
aad
in
mov
jae
rcr
xor
test
add
ljmp
push
push
pop
xor
mov
mov
add
adc
add
pop
add
ss
and
pop
pop
inc
popa
push
push
cs
lahf
dec
out
loop
out
loopne
sbb
les
dec
cmp
sbb
adc
cmp
jno
pop
sar
xchg
add
shr
push
xor
add
repz
daa
inc
iret
cmpsl
sbb
mov
dec
iret
iret
ficoml
add
jb
jns
jb
add
mov
jmp
add
sub
adc
stos
add
cmpsb
js
mov
sbb
dec
pop
pop
push
in
lret
and
push
add
mov
loop
stos
adc
out
mov
cmp
push
mov
popf
jns
jmp
iret
js
clc
rolb
cmp
add
pop
push
add
push
mov
out
push
ret
cs
add
lods
dec
test
fnstenv
push
insb
push
push
cmp
adc
lcall
test
test
adc
cmp
mov
xchg
std
lods
mov
mov
dec
mov
pop
repnz
les
adc
fisubrs
and
xchg
inc
sbb
add
pop
pop
push
sub
notb
je
push
or
adc
scas
xchg
jbe
jne
sbb
mov
frstor
pushf
or
test
sbb
add
nop
jp
or
inc
jno
xor
mov
push
push
mov
inc
cwtl
add
sbb
cli
imull
or
add
add
xor
outsl
xchg
add
or
sbb
mov
fdivrs
bnd
cmp
adc
dec
mov
push
movsb
ljmp
pop
sarl
cs
dec
pop
shrl
cmp
ja
xor
push
pusha
cmp
inc
mov
jg
lds
dec
ror
xor
aam
pop
xor
dec
ffreep
or
je
pop
or
out
add
cld
ljmp
fisubl
test
js
dec
pop
ret
pop
push
xchg
xchg
adc
movsb
insb
sbb
inc
inc
inc
or
dec
iret
sub
add
movsl
pushf
pop
jmp
loop
ret
push
pop
push
mov
xor
pop
rclb
push
adc
cmpsl
push
add
push
push
enter
pusha
pop
out
lea
pusha
out
mov
setae
sub
add
hlt
out
nop
push
or
jge
sub
or
push
ja
jg
pop
pop
mov
mov
pop
sbb
stc
cmp
add
push
call
imull
adc
ss
ret
fisubrs
mov
enter
lock
inc
add
cmp
call
das
push
jnp
mov
sub
js
lret
test
imul
inc
insl
jmp
pusha
mov
xchg
add
and
das
les
sub
lcall
push
pop
aam
leave
imul
movsl
lret
mov
roll
dec
popa
hlt
mov
imul
cwtl
clc
or
jg
sbb
jbe
push
cltd
mov
pop
add
dec
cld
aas
jmp
pushf
scas
sub
xchg
xchg
dec
xchg
add
jb
jmp
fsubrs
push
mov
add
push
shrb
cli
movntq
push
adc
dec
stc
ljmp
cmp
aas
sub
js
repnz
and
cmp
lret
adc
jp
adc
mov
dec
addl
push
movsl
gs
add
mov
mov
dec
mov
add
out
sub
jmp
cmp
sti
or
addr16
inc
jp
daa
mov
and
ss
rorb
sub
out
push
addb
je
cmp
add
adc
mov
mov
push
mov
dec
clc
push
cmp
mov
dec
mov
das
push
ror
and
mov
dec
cmp
push
sti
mov
repnz
sub
mov
stc
inc
or
in
sbb
mov
in
daa
xchg
outsb
push
adc
jl
add
and
out
addl
aas
movsb
shlb
lock
rclb
xor
xchg
push
and
inc
ja
push
pop
xchg
sbbl
lds
aad
inc
push
imul
or
es
cmp
mov
mov
out
gs
mov
pusha
mov
push
add
xchg
into
dec
xor
shlb
sub
push
movb
adcl
xor
jmp
push
outsl
or
dec
loope
inc
aad
outsl
pop
cmp
xlat
dec
mov
cmp
mov
ret
mov
mov
movsb
add
lock
mov
and
xor
push
push
mov
and
adc
and
jg
lds
adc
jmp
add
in
loopne,pn
or
pop
aas
addl
or
nop
pusha
loope
sub
xor
sub
adc
cli
cvtpi2ps
rcll
jmp
flds
ret
sarb
nop
cs
lret
subb
xchg
loop
movsl
add
xor
ret
mov
fstp
mov
cmpsb
mov
stos
or
sti
inc
insb
jmp
cmp
pop
mov
int3
pop
sbb
pop
xchg
fucom
inc
outsb
mov
mov
push
xchg
sub
jle
jp
imul
mov
mov
incl
ret
mov
sub
add
add
not
xor
and
or
jecxz
or
jmp
aad
ljmp
dec
add
push
adc
shr
xor
jo
cs
popa
mov
push
dec
cli
arpl
jp
ja
fisttpl
decl
dec
mov
jns
mov
cli
dec
mov
sarb
pop
sub
or
push
inc
sbb
pop
into
or
push
bnd
sub
out
cli
into
and
lea
dec
test
inc
adc
and
add
pusha
add
popa
shr
sti
cmpb
cwtl
fmull
repnz
dec
aas
push
pop
mov
sub
cs
imul
xchg
push
aam
aad
ljmp
roll
mull
sub
push
jmp
stc
dec
push
xchg
fsubrs
mov
sbb
sbb
fs
jecxz
add
cmc
enter
jmp
or
sub
xchg
pop
push
push
ret
inc
xchg
xchg
ljmp
out
add
pop
jb
push
mov
pop
nop
push
shlb
mov
mov
adc
sub
shll
push
sub
sti
push
pop
imul
dec
mov
adcl
pop
add
jl
xor
sbb
push
xor
pop
push
mov
sub
xchg
inc
negb
jle
sub
sub
inc
jmp
lock
xchg
ret
sahf
clc
bound
imul
jle
mov
and
out
mov
jmp
mov
jmp
mov
inc
outsl
ret
push
sahf
dec
lods
pushf
clc
aam
xchg
jg
jmp
das
mov
cld
jp
dec
cltd
pop
or
push
arpl
sti
jmp
sub
shrb
jb
mov
pause
pop
orb
testl
outsl
push
mov
aaa
pop
or
nop
clc
dec
test
jo
push
xchg
pop
stos
add
jmp
lods
dec
lea
fnsave
lcall
mov
pop
jle
add
mov
pop
pop
ds
adc
cmp
or
pop
add
pop
mov
sbb
pop
orl
in
pop
cmpb
aam
lcall
adc
sbb
add
xchg
push
hlt
movsl
pushf
xchg
daa
xlat
cli
xor
jb
mov
stos
mov
shrb
loop
daa
pop
pop
cmc
or
or
cmp
add
xor
and
push
aas
or
outsb
lea
fdiv
or
and
mov
das
into
lock
cli
mov
pop
and
inc
jl
mov
push
pop
xchg
adc
lahf
je
push
xchg
je
js
dec
mov
out
add
pusha
iret
push
enter
or
jns
mov
xor
stos
adc
add
push
mov
nop
and
pop
imul
dec
test
in
fists
pop
lret
xor
xchg
jmp
sbb
cmp
jo
out
push
push
clflush
repz
lahf
xchg
imul
sti
call
es
inc
add
or
je
pop
xlat
sahf
dec
push
jmp
popa
clc
mov
sbbl
add
pusha
push
add
push
push
pop
mov
sbb
dec
push
pusha
mov
or
outsl
insb
ds
daa
mov
jge,pt
mov
in
ret
or
daa
push
sahf
inc
das
jmp
xchg
add
and
call
in
rolb
daa
xor
mov
rolb
adc
sbb
movl
add
popf
sub
test
push
jge
rcr
jbe
mov
inc
inc
js
stos
xor
jl
iret
mov
insl
clc
loope
mov
mov
or
dec
add
inc
push
sbb
adc
inc
push
inc
push
idivb
js
xchg
cmc
push
shll
in
ret
cmp
pop
or
mov
pop
jne
lds
mov
pop
jge
mov
mov
movsb
les
ret
dec
inc
jno
imul
out
test
in
movsl
jnp
or
xor
xchg
sub
mov
jns
daa
and
add
aas
or
sub
daa
je
lret
jle
jmp
and
das
loope
aas
cmp
dec
movswl
outsl
sbb
std
je
and
mov
stc
push
mov
push
sbb
xchg
adc
ror
fsub
xchg
imul
sub
pop
stc
es
jge
and
xlat
sub
and
and
jge
das
aad
movsl
js
xchg
push
pop
jnp
sbb
mov
sub
loop
addr16
mov
xchg
sbb
repnz
mov
in
movsb
xchg
inc
add
roll
cwtl
cmc
pop
cwtl
sbb
out
push
dec
push
xchg
mov
xor
push
or
pop
or
movl
popf
insb
nop
sub
cwtl
mov
outsb
out
lods
push
in
pop
andb
mov
xlat
sbb
les
push
daa
add
pop
fldt
xor
and
add
push
pusha
and
sbb
ljmp
repz
add
push
adc
mov
out
test
aam
jmp
adc
lcall
dec
mov
pusha
and
movb
or
jmp
aad
popf
or
dec
pop
ret
mov
sub
cmpb
pop
dec
sub
push
clc
out
xchg
inc
cmp
adc
test
leave
out
test
mov
lcall
mov
pop
pop
mov
mov
lock
pop
sub
into
loopne
jb
enter
sbb
add
movsl
inc
pushf
push
int3
mov
dec
sub
test
cmp
xor
cld
jg
jle
repz
incb
jmp
xor
mov
mov
cmp
add
pop
dec
jecxz
inc
add
add
and
out
hlt
pop
push
dec
rep
dec
ljmp
and
test
inc
mov
add
cmp
and
loope
sub
pop
repnz
mov
push
shl
add
faddl
xchg
test
mov
mov
mov
mov
addr16
mov
push
ja
and
jnp
push
test
push
fnstsw
repz
clc
cltd
and
push
xchg
adc
pop
ficoms
ds
jmp
sub
inc
leave
and
cmp
rcll
rcrl
lea
adcb
aad
add
add
lret
mov
pop
push
mov
and
pop
not
jnp
cmp
cmp
jle
leave
inc
or
pop
sbb
pop
pop
add
or
fcomps
insl
or
pusha
lds
push
mov
mov
inc
push
xor
fldl
dec
jle
data16
mov
sub
ljmp
into
adc
mov
std
xchg
pusha
mov
sub
mov
or
mov
add
in
sub
pop
push
je
dec
enter
out
pop
imul
xor
loop
xchg
inc
test
fldenv
xor
or
rolb
mov
inc
or
stos
xor
cmpsb
ss
repz
in
cs
push
gs
daa
flds
mov
inc
and
pop
and
mov
pushf
mov
pop
jmp
xor
lea
and
mov
lock
mov
bound
push
add
or
das
leave
ret
je
outsl
sbb
movsl
xchg
and
cwtl
pop
and
es
insb
mov
jmp
mov
push
xchg
inc
lods
push
rcll
inc
sti
adc
cli
cmp
mov
lock
pushl
xchg
iret
ss
dec
sbb
or
sbb
pop
cmp
push
or
les
fsubl
jne
div
sub
mov
add
sbb
cmp
add
les
pop
or
sub
ss
push
add
fnstsw
mov
mov
xchg
dec
push
mov
icebp
or
add
sub
jge
popa
xchg
pop
add
push
inc
add
push
adc
nop
jno
pop
pop
mov
sub
fisttps
popa
jp
pop
add
push
or
loopne
sub
mov
mov
add
cmp
pop
pop
test
add
jg
cmc
add
mov
jmp
lods
jg
outsb
push
push
sub
mulb
pop
mov
pushf
ja
push
movsb
adc
sbb
push
pop
pop
call
nop
aaa
or
inc
mov
add
sub
cmpsb
sub
mull
cmpsb
pop
or
cs
out
mov
push
or
fcmovnbe
loopne
sub
push
nop
inc
xchg
xor
scas
add
outsb
add
mov
gs
push
stos
mov
inc
lock
and
cmp
adc
std
imul
jg
pop
mov
mov
and
and
scas
fbld
jne
mov
push
push
sbbl
das
adcl
push
jge
jg
aas
mov
lahf
add
mov
jmp
mov
mov
sbb
in
mov
mov
inc
jle
sub
incb
jns
es
in
pop
rorl
lcall
add
sub
icebp
iret
sar
lods
pop
push
push
imul
jmp
gs
scas
cld
aad
fistl
pop
stos
loopne
cmpsl
sbb
dec
or
gs
aam
adc
test
jne
popa
sub
sub
or
jmp
jmp
ss
pusha
adc
xor
or
xchg
outsb
ror
push
in
or
shr
test
mov
jg
push
add
lret
rcrb
test
cmpsl
in
in
adc
push
pop
fs
jo
add
xor
pop
movsl
pop
push
inc
xchg
mov
inc
mov
xor
lods
cmp
js
xchg
add
ret
push
lret
push
ljmp
cmp
adc
jmp
loopne
dec
push
dec
or
shrb
cld
pop
push
push
test
xor
arpl
fsubs
cmp
call
js
adc
xor
xchg
adc
loopne
xor
xchg
shrb
subb
sub
push
stc
fdivrl
and
in
std
add
icebp
call
jmp
push
rclb
adc
in
addb
nop
cmp
jns
cmp
das
and
daa
repnz
sbbb
dec
call
ja
jno
js
lea
dec
fdivs
sub
adc
in
outsb
mov
mov
aam
add
outsl
sbb
adc
sub
push
mov
jmp
push
aas
sti
outsl
in
fcomps
cmp
out
mov
andl
xchg
lods
sub
add
sahf
pop
mov
test
cmp
cmpsb
pop
out
jmp
push
aam
ret
and
mov
inc
pop
mov
jno
popa
push
pop
adc
jne
cmpsb
add
js
push
mov
test
adc
jno
aad
jmp
ror
push
pushf
pop
pop
std
out
add
ret
sub
xor
test
inc
addr16
adc
popf
lock
nopl
add
repz
sub
gs
fisubrs
xlat
inc
in
or
inc
mov
cmp
mov
daa
cmp
fdivrs
add
rolb
icebp
int3
sub
mov
stc
sub
dec
xchg
jle
pop
jbe
test
ficomps
add
test
mov
ljmp
cwtl
shl
and
sub
loopne
or
sub
inc
roll
xchg
sub
lods
fwait
shrb
testl
jge
xor
aam
rclb
test
mov
jnp
out
mov
out
pop
loope
arpl
mov
cmc
jns
sbb
hlt
add
in
add
out
jae
cmpsl
xchg
nop
and
lahf
mov
inc
test
inc
cld
pop
std
movsb
cmpsl
jae
out
xor
jl
ss
stos
push
inc
icebp
push
movsb
push
and
and
pusha
jmp
js
lahf
rolb
jnp
inc
mov
jmp
and
or
inc
add
cmpsb
pop
int3
daa
jle
or
jp
ret
lcall
shrb
pop
aam
cmp
jecxz
loope
sahf
loop
test
adc
or
lods
lahf
in
or
scas
mov
and
inc
inc
inc
sarl
mov
sbb
lods
aaa
out
sub
out
lahf
jp
in
cmp
pop
stc
rcl
jne
aam
lcall
ret
sub
repz
sbb
sub
push
jmp
pop
bound
add
jmp
je
push
mov
mov
sub
es
add
mov
loope
test
mov
cwtl
adc
add
sbb
mov
sub
ljmp
push
add
inc
mov
sarl
int3
js
insb
dec
ljmp
add
or
jge
xor
rorb
shr
mov
out
adc
stos
imul
cmpsb
sbb
stos
sub
sub
jnp
pop
adc
in
ljmp
and
mov
mov
mov
clc
pop
aaa
fdivs
jl
inc
addr16
mov
jmp
push
mov
clc
mov
xor
hlt
test
adc
bound
mov
dec
push
test
clc
pop
and
mov
mov
bound
jp
sbb
pushf
pop
xchg
jbe
test
scas
nop
adc
popa
pop
pop
lret
sar
sub
add
jbe
inc
sub
inc
out
pop
out
add
inc
push
inc
pop
sub
add
xchg
pop
xlat
lcall
mov
jbe
jmp
or
int
fildll
add
pop
jp
cmp
xor
jmp
or
test
ja
sti
push
in
mov
pop
or
dec
xchg
fimull
shrb
je
adcb
push
push
fildll
inc
aaa
leave
xchg
test
xchg
and
cmc
push
daa
inc
jno
sub
jmp
jns
sub
out
mov
xchg
pop
or
dec
fs
std
sub
int3
adc
bound
lods
rcll
push
mul
stos
int
jp
test
sub
loopne
out
shl
cltd
or
pop
leave
jmp
in
add
mov
sub
cmp
dec
and
sub
sbb
mov
push
add
and
jmp
int3
push
and
aad
dec
add
sub
cmpsb
jp
mov
repnz
sbb
sti
sbb
xor
add
ljmp
nop
sbb
cmp
jne
mov
shrb
push
add
jns
xor
pop
dec
xor
add
in
inc
add
xlat
mov
int
sub
stos
sahf
scas
xchg
repnz
sti
xchg
or
insb
cmpsl
movsl
dec
mov
or
add
and
push
push
leave
aam
sub
jbe
movl
enter
test
dec
and
dec
sub
xchg
xchg
lret
mov
pusha
test
out
or
or
or
cmp
jmp
adc
and
mov
add
div
mov
jmp
mov
pushf
cmp
fidivl
outsl
dec
mov
pop
sub
add
daa
inc
add
push
ds
mov
add
or
add
daa
jge
add
dec
pop
lock
dec
add
jne
xor
xlat
movsb
and
mov
jmp
in
push
leave
lock
mov
push
xor
jg
jns
jmp
mov
mov
push
mov
mov
mov
fistps
xor
mov
rolb
pop
pop
std
sub
push
ficomps
jp
in
push
lock
pop
push
lcall
mov
std
lds
push
or
jae
or
int3
ffreep
jns
jmp
push
dec
pop
shrl
and
out
add
jmp
sbb
sti
add
xor
push
sub
pop
push
jmp
cwtl
pop
jle
out
out
push
loopne
and
sbb
testb
cmp
push
add
add
xchg
pop
jmp
sarb
cmp
cli
or
pop
int
push
add
jne
or
mov
lcall
int3
addr16
add
xor
ljmp
mov
mov
fistpll
je
int
xor
inc
adc
fbld
testl
ficoms
icebp
fidivl
cli
nop
and
addr16
mov
sub
pop
popf
pop
ljmp
push
les
pop
test
cmp
push
xchg
jbe
imul
push
push
cld
mov
mov
push
fmul
or
jle
and
hlt
sbb
mov
mov
sarl
leave
jne
sbb
adc
or
imul
xor
pop
inc
sbb
lahf
mov
je
pop
adc
xchg
ja
add
ljmp
sahf
push
stos
fdiv
outsb
imul
pop
add
xchg
in
push
jmp
xchg
lea
orb
and
inc
cs
dec
out
gs
ljmp
ss
sarb
or
xor
push
add
das
lds
pop
sbb
xor
jge
adc
mov
mov
lret
lret
neg
mov
jl
js
xchg
jnp,pn
add
push
push
lret
sub
inc
jmp
scas
nop
scas
dec
ret
cmc
mov
add
fmull
lcall
add
jmp
out
or
push
and
jmp
int3
sbb
xorb
push
stos
or
hlt
mov
add
cmp
jno
sbb
je
fs
xchg
push
lock
dec
xor
outsl
or
jg
mov
loop
rol
fwait
pop
call
cmpsb
push
add
fildll
dec
adc
cmp
adc
add
imul
dec
loop
adc
dec
out
add
pushl
rclb
sbb
pop
pop
pusha
pop
xor
add
sbb
adc
test
ss
test
mov
outsl
or
cmc
jo
mov
daa
xor
fisttps
lock
push
or
pop
dec
mov
out
loopne
add
iret
xor
push
inc
pop
cwtl
mov
adc
ds
sbb
ror
mov
ljmp
js
push
cmp
orb
or
mov
pusha
sub
cmp
or
or
pop
mov
push
add
sub
push
push
pop
repnz
sub
mov
rcrl
or
and
std
xor
push
jmp
rolb
add
out
mov
out
pop
push
xchg
xlat
clc
adc
mov
das
add
sbb
scas
pop
mov
lea
pop
out
daa
call
adc
lods
jns
cmp
js
add
into
pop
xor
pop
notl
xor
popf
hlt
jmp
test
push
add
rcll
mov
mov
mov
int
negl
and
sub
add
pavgb
xchg
mov
add
cmp
ljmp
adc
rorb
mov
push
shlb
lahf
or
je
fiaddl
mov
xchg
sbb
mov
add
aaa
lock
cmp
pop
test
push
mov
add
outsl
mov
adc
push
stos
roll
in
or
mov
push
in
sbb
hlt
lods
or
adc
dec
xchg
pop
fidivs
negl
cmpsb
adc
cmp
nop
rorb
jge
cmp
mov
sahf
lods
hlt
je
push
jo
push
hlt
jl
xchg
out
sahf
push
inc
cmpsl
sbb
inc
sbb
jbe
and
push
inc
sub
push
rcll
loopne
push
cmp
mov
sub
jmp
lods
jb
xor
decl
jns
jle
jb
jno
pop
leave
add
sub
adc
xchg
adc
idivl
mov
iret
enter
mov
jns
mov
jnp
jmp
jo
push
mov
mov
dec
test
das
cwtl
push
jge
and
mov
pop
mov
pop
stos
loop
adc
or
dec
out
or
sbb
fs
es
xchg
fdivs
cs
xor
dec
mov
dec
pop
mov
jmp
xchg
add
or
ja
jle
dec
orl
stos
and
fadd
push
mov
and
jl
ljmp
jns
aaa
adc
imul
shl
sarb
adc
add
adc
push
imul
test
jae
sub
in
adc
mov
shlb
mov
push
lea
lds
inc
fistpl
push
jmp
movsl
lods
inc
mov
bound
pop
pop
in
sahf
mov
popf
inc
jge
add
jbe
push
dec
outsb
jl
out
or
adc
jbe
push
das
jmp
push
xchg
lock
push
mov
gs
push
push
push
and
mov
pop
pop
mov
sbb
insl
jb
or
inc
js
inc
sub
enter
adc
cmp
sub
sbb
and
xrelease
test
push
fcomp
cmp
dec
and
dec
push
mov
dec
mov
std
xchg
dec
scas
and
xchg
ljmp
jmp
add
lahf
inc
dec
int3
clc
outsl
in
repz
pop
std
xchg
rorb
lods
incl
mov
icebp
mov
rcrl
adc
mov
adc
mov
iret
adc
xor
adc
xchg
xchg
dec
adc
and
inc
jecxz
add
push
adc
jns
lock
das
jb
out
div
adc
mov
ljmp
lcall
push
int3
push
xchg
je
jmp
test
ret
jg
add
adc
push
mov
test
and
mov
pop
or
or
jns
lret
jmp
add
test
fisubrs
fistps
outsb
inc
sub
push
sbb
sahf
pop
sub
hlt
pushf
add
enter
movb
jmp
cmpsb
movb
dec
jne
push
sbb
pop
fmul
mov
filds
push
pop
xorb
adc
sub
xorb
cmp
popf
xchg
cld
es
aam
mov
pushf
pop
in
lock
xor
subl
inc
int3
out
pop
mov
popa
dec
add
aad
jmp
scas
add
dec
lret
and
pop
push
jns
adc
xor
iret
dec
dec
aaa
adc
inc
mov
add
push
push
push
mov
inc
push
pop
cmp
into
inc
sub
adc
mov
xor
dec
scas
rcll
aad
or
jge
insb
in
mov
popa
mov
cmp
add
sbb
or
ret
es
xor
jg
mov
adc
or
rolb
gs
add
roll
cmpsl
dec
lods
test
xor
stos
sub
and
nop
dec
add
xchg
pop
call
fwait
or
jp
add
mov
jmp
je
jmp
pop
jae
subb
std
nop
test
shrb
fdivrp
sub
or
outsb
sub
add
xor
sub
pop
or
pop
pusha
aad
mov
mov
and
add
push
faddl
adc
mov
adc
adc
mov
dec
imul
add
inc
push
pop
inc
push
repz
adc
add
add
inc
lods
sbb
sbb
cmp
ljmp
sbb
push
adc
or
mov
popa
mov
xor
mov
add
add
nop
xor
movb
fimuls
push
sub
test
adc
mov
andb
out
orb
and
les
call
mov
xchg
or
pop
mov
sub
mov
xlat
xchg
or
add
fildl
mov
sarl
lcall
adc
leave
adc
sbb
mov
orl
andl
icebp
mov
pushf
iret
adc
push
push
dec
je
sbb
je
or
aam
jl
or
icebp
inc
pop
inc
and
inc
add
xchg
les
rolb
inc
cmpsl
adc
js
adc
sbb
in
jne
in
lret
add
nop
int3
jb
mov
roll
pop
xchg
nop
rorl
out
and
out
or
sbb
or
mov
jae
or
mov
loope
xchg
or
push
xchg
inc
jne
inc
dec
push
inc
shll
sarl
or
repz
imul
arpl
and
and
int
fistpll
cli
sbb
in
scas
xchg
les
jbe
push
pop
loop
and
and
xor
or
add
fdivr
add
jg
and
jge
bound
and
mov
ss
scas
nop
sbb
ret
add
add
cltd
fstp
mov
call
ret
pusha
mov
push
mov
cmp
inc
sub
add
adc
cmp
inc
leave
jne
testl
rorl
shl
mov
dec
xor
shrb
pop
mov
xlat
hlt
pop
mov
daa
ds
xchg
jecxz
in
mov
scas
dec
xor
aas
insb
mov
or
sahf
mov
ret
ficoml
mov
mov
scas
jmp
icebp
stos
loop
test
js
jo
out
imul
fsubrl
leave
mov
mov
out
sub
and
jp
call
jl
cmp
adcl
mov
pop
mov
jmp
mov
mov
pop
push
rorb
mov
dec
xor
sahf
pop
push
scas
cmp
jbe
push
push
mov
inc
mov
pop
mov
divb
pop
xor
xlat
popf
inc
push
pop
test
sub
ljmp
aas
ret
cmp
push
test
mov
mov
sub
mov
pop
test
lock
jmp
xor
stos
out
iret
out
pop
mov
jmp
rcll
cmpsl
add
mov
daa
das
fwait
dec
testb
out
les
dec
pop
jbe
icebp
popa
or
jg
cltd
or
add
jne
shll
imul
xor
shlb
in
sub
cmp
sub
xlat
lock
cmc
cmp
push
cmp
mov
xor
xor
push
adc
push
xlat
fucomip
mov
sbb
cltd
leave
add
jne
xlat
pop
add
mov
mov
cmc
dec
and
add
ficoml
lods
pusha
or
jae
aas
add
add
inc
push
mov
outsl
add
testl
sbb
xor
jns
mov
cmpb
iret
push
jge
das
movl
not
add
mov
lock
adc
and
sub
add
and
inc
pop
mov
cmp
rorl
mov
jg
je
pushl
inc
inc
or
mov
inc
or
fistl
lods
adcl
cmp
dec
sub
jmp
movsb
cmp
mov
sub
mov
push
and
cld
cmp
dec
adcb
xchg
cmp
sub
jb
xor
pop
push
push
jmp
outsl
jecxz
test
inc
in
cmp
iret
mov
jo
adc
push
out
test
pop
push
push
sbb
popa
add
or
jp
jmp
sbb
adc
sbb
adc
pcmpeqw
or
pop
ror
adc
jp
stc
cmp
ret
inc
icebp
add
pop
adc
adc
sub
mov
push
in
dec
sti
mov
add
mov
mov
ret
push
iret
pop
adc
cmpsl
rcll
popf
ljmp
data16
push
jmp
cmp
fadds
push
addr16
pop
test
cmpsl
test
xchg
mov
inc
repnz
leave
pop
cs
push
push
loopne
pop
cmp
hlt
dec
imul
sbb
dec
mov
sbb
fcompl
sub
aam
mov
insb
jge
sbb
jnp
xchg
add
andl
or
xor
mov
sub
inc
xchg
jecxz
add
and
jmp
in
pop
lahf
dec
dec
lods
jb
xchg
sbb
sar
daa
roll
lcall
int3
cmp
pop
pop
add
clc
inc
add
jp
jae
lea
repnz
add
push
add
pop
ret
or
jbe
repnz
leave
adc
push
pop
sbb
jecxz
mov
sbb
and
and
mov
push
fxch
cld
movsb
rclb
out
insl
in
inc
int
movsl
shl
cmpsl
fmull
and
jno
mov
insl
jge
mov
out
inc
std
jb
push
and
mov
lcall
add
loop
dec
push
pusha
enter
inc
push
dec
incb
xor
fstps
scas
lods
add
jmp
in
das
dec
xchg
pop
cli
pop
cmpsb
sbb
mov
pop
jmp
push
sbb
std
call
xchg
mov
push
addb
pusha
mov
jnp
shl
not
mov
mov
gs
push
mov
mov
pop
add
push
push
xchg
push
mov
inc
mov
mov
rorb
jmp
addr16
pop
inc
xchg
dec
or
cmp
inc
std
or
ret
ret
xor
popa
sub
dec
call
add
scas
test
test
pop
jecxz
mov
jp
ret
loopne
aad
xor
add
add
cmc
mov
pop
sub
punpckhwd
inc
cmpsb
inc
or
mov
cmp
shrb
rorl
cmc
pop
dec
dec
pop
icebp
ja
inc
mov
mov
das
xor
fmuls
lret
dec
bound
push
jecxz
test
add
or
lret
mov
add
bound
inc
mov
out
add
cmp
mov
in
rclb
push
dec
xchg
or
dec
jb
add
pop
pop
xchg
sarb
add
xor
adc
and
add
push
sbb
ds
sub
add
jns
dec
ljmp
inc
shrl
popf
loop
pop
pop
pop
shrb
insb
jnp
jmp
lret
sbb
fcomps
pop
int3
out
dec
popf
jo
lahf
shr
popl
dec
xchg
sub
push
mov
xor
inc
ja
aam
scas
test
mov
test
pop
adc
rolb
sar
orl
movsb
ret
dec
movsb
mov
aaa
pop
in
sub
add
das
rcll
xchg
mov
add
scas
adc
pop
dec
shll
inc
pop
and
dec
pop
xor
or
andb
or
das
mov
xor
sub
imul
dec
add
mov
jbe
test
pop
pop
das
sub
or
shrl
push
push
loopne
and
ja
cltd
sbb
add
lods
lea
cmp
sbb
cmp
ljmp
neg
cmpb
add
pop
xor
addr16
movsl
outsl
push
add
mov
mov
mov
ds
sbbb
or
xchg
mov
add
jnp
mov
insb
mov
adc
add
xor
jmp
ljmp
sbb
and
cmp
push
or
mov
repz
call
cmp
rorl
cmp
incl
sbb
pop
xorb
pop
stos
mull
xlat
popa
imul
ds
in
dec
pushf
out
pop
inc
ja
je
ret
xor
or
mov
pushf
gs
jmp
sub
xor
cltd
mov
pushf
inc
aaa
and
imul
mov
adc
sub
fs
daa
pop
push
mov
in
sbb
lcall
or
loop
xor
cmp
push
add
xor
pop
mov
mov
test
hlt
cld
adc
movsl
lods
and
push
jmp
push
ret
dec
iret
add
xchg
mov
or
mov
push
jmp
xorb
push
mov
cmp
jmp
push
push
cmpsl
pop
dec
test
clc
rorb
stos
js
sub
nop
jl
xor
test
and
and
mov
xchg
inc
mov
adc
push
sbb
mov
mov
mov
dec
pusha
js
adc
pop
push
xchg
add
ljmp
rclb
pop
and
add
iret
or
sub
popf
shlb
push
jmp
loope
cmp
push
in
pop
fsubs
add
call
inc
sbbl
cmp
xor
in
clc
stos
inc
clc
push
pop
jmp
stc
ss
inc
mov
decb
sbb
fnsave
das
add
loope
imul
adc
cld
push
add
int
add
enter
jnp
mov
sbb
in
cmp
sub
fsubl
minps
int
movl
mov
sub
cmp
psubsw
adc
mov
add
and
nop
sbb
fmull
add
pop
xor
rcrb
dec
test
daa
mov
push
shl
out
sbb
pop
movsl
mov
mov
call
inc
cmp
xchg
sub
call
or
pop
cmp
push
jmp
ja
aad
popa
js
mov
arpl
mov
ret
cmp
scas
inc
jmp
dec
xor
or
jg
test
nop
jecxz
push
mov
inc
rorb
jb
dec
imul
push
jo
cmpsl
push
jno
adc
pop
sub
mov
pop
mov
push
mull
arpl
jnp
push
lahf
cmp
sub
nop
loope
pop
add
lock
pop
push
stc
push
loopne
pop
leave
ss
test
data16
add
mov
add
in
and
jmp
cmc
mov
mov
cmp
cmp
call
lds
inc
or
and
push
add
mov
mov
orl
loopne
imulb
pop
mov
or
sub
fs
xor
in
sub
and
dec
push
xchg
pop
fcoml
mov
dec
rorb
jle
add
mov
int3
push
test
inc
es
lcall
mov
push
push
jg
clc
lret
popa
jp
sbb
jne
pop
push
sarl
sbb
dec
push
nop
jo
and
inc
js
lods
add
aam
xor
outsb
sahf
xor
fdivs
pop
std
adc
cmp
sbb
push
loopne
jns
add
or
das
pop
sti
outsb
xchg
add
je
sbb
cmp
out
push
xor
pop
xchg
cmp
pop
jl
inc
insb
push
adc
rclb
xchg
jl,pn
push
std
imul
sub
pop
push
push
addl
out
clc
mov
add
add
fwait
and
xlat
mov
fmul
jmp
cmp
addb
or
rcll
sub
lock
arpl
pop
and
adc
jo
lods
jae
out
push
push
fiadds
xchg
add
in
stos
loope
push
insb
cmp
aam
imul
in
sarb
pop
stc
faddp
jp
jb
rorb
gs
add
xchg
pop
sub
mov
das
daa
test
dec
and
popa
movsl
pop
out
push
pop
ljmp
pop
pop
rclb
or
into
fdivr
pushf
mov
xlat
xor
sub
pop
sub
xchg
push
ret
add
dec
add
xor
shlb
loop
lahf
int3
dec
dec
jg
psubsb
sub
loop
jg
push
popa
jmp
ret
or
push
incl
jg
loopne
outsl
mov
pop
push
in
loop
push
or
inc
pop
lahf
dec
insb
das
jmp
sbb
pop
and
ret
loope
inc
scas
dec
call
cmpsb
mov
out
fs
andb
pop
repnz
not
pop
aam
and
jnp
gs
stos
int3
in
inc
out
xor
mov
jae
or
out
mov
jle
xchg
cli
push
pop
mov
movsb
mov
in
push
shlb
mov
dec
dec
mov
stos
or
cs
mov
or
cmp
mov
in
jmp
lret
mov
sarl
std
push
inc
pop
pop
out
pop
sbb
or
push
adc
cmp
xor
inc
dec
sub
je
inc
sub
dec
sub
ds
jl
addb
push
cld
xor
in
insb
jo
or
pop
xorb
dec
and
dec
adc
or
addl
sub
jge
pop
ja
add
pop
aad
out
lods
cmp
faddp
in
fimuls
sbb
sub
mov
adc
mov
push
rcr
es
inc
push
pop
mov
ror
cs
jae
enter
adc
aam
dec
mov
push
dec
lret
adc
jns
mov
cwtl
sbb
jmp
add
mov
jne
or
jmp
outsl
popa
and
xor
gs
or
pop
push
test
insl
mov
and
pop
pop
outsl
mov
aad
dec
repz
add
xor
fisttpll
test
rcl
std
or
ja
aam
in
sub
xchg
jmp
pop
pushf
pop
pop
movsl
jmp
loopne
or
inc
sahf
mov
and
dec
sub
adc
mov
pop
outsl
mov
cs
call
xor
mov
mov
loope
jg
mov
and
insl
popf
mov
jmp
jb
stc
cmc
sahf
push
dec
sub
inc
pop
pop
push
jmp
push
cli
xor
in
into
adc
out
mov
aad
jns
inc
jp
or
aad
hlt
jmp
cmp
repz
mov
es
sbb
inc
ja
mov
add
pop
sub
mov
adc
movsb
sbbb
add
push
int
mov
mov
sub
or
clc
or
daa
jmp
or
repz
out
cmp
movl
dec
pop
push
xlat
rcrl
dec
fmulp
roll
rcll
or
xor
mov
roll
push
idivb
sub
dec
push
sub
call
ficomps
push
mov
mov
mov
xor
pop
dec
sub
fnstcw
mov
les
pop
cli
popf
mov
xor
lret
mov
dec
imul
loop
or
jmp
push
hlt
gs
fstps
push
mov
mov
push
negl
std
pop
nop
cmp
add
add
and
mov
pop
lea
add
inc
gs
or
or
add
lret
xor
repz
stos
orb
pop
add
add
sbb
aam
push
or
xor
lahf
adcb
outsl
inc
sub
xor
or
not
xchg
fmul
jg
cmpsb
out
push
fwait
jb
rorb
mov
add
pop
cld
sbb
das
fsub
or
fs
pusha
sbb
jo,pt
and
lahf
or
vphaddbq
nop
notb
mov
lret
aas
ret
jne
add
push
outsb
pop
mov
push
movmskps
popf
jno
enter
sub
bnd
or
or
xchg
xor
enter
inc
sub
cmp
test
pop
jmp
mov
jmpw
mov
or
sbb
jne
sub
and
nop
xchg
jne
add
sub
or
jmp
das
add
cmp
mov
add
std
inc
jmp
lds
ja
out
xchg
flds
insb
xchg
jmp
mov
imul
sub
xorl
enter
jle
pop
sub
sub
push
lds
jnp
pop
mov
xor
sub
xchg
stos
lods
in
fs
add
mov
imul
mov
pop
push
movsl
xchg
sub
cli
rolb
cmp
mov
imul
cltd
movsl
cmp
push
push
mov
or
push
add
sbb
and
inc
jmp
mov
mov
push
repnz
inc
mov
out
mov
shlb
push
lods
leave
dec
jns
pop
lret
pop
call
jmp
mov
incl
daa
adc
pop
jno
push
repz
xor
xchg
lret
ret
adc
pop
dec
jmp
lods
imul
ror
daa
ss
ret
pcmpeqw
data16
xchg
xor
and
jns
pusha
fsts
inc
and
adc
inc
shr
fsub
mov
jmp
lret
jle
iret
dec
ja
fmull
mov
inc
jmp
push
add
adc
xor
and
out
inc
or
pop
pop
orb
and
int3
sti
sbb
adc
insl
adc
pop
mov
sbb
int3
xchg
inc
pusha
push
ret
add
subl
pop
push
sub
int3
mov
adc
xchg
inc
mov
xchg
inc
push
jne
xchg
fidivrs
dec
imul
loope
pusha
cmp
pop
cwtl
push
jmp
add
cld
cmp
out
or
loope
stos
shl
popa
xor
push
test
and
jg
mov
out
and
loopne
idivb
das
pop
jnp
das
push
pop
inc
and
add
js
push
push
jmp
fsubrp
jge
out
cmp
mov
inc
clc
jns
and
and
rorb
loope
cwtl
mov
pop
cmp
test
or
and
add
push
call
jne
aam
out
je
jb
stc
push
leave
pop
cltd
shll
fwait
js
clc
or
adc
fdivr
inc
movsb
or
xchg
dec
repz
lds
pop
iret
inc
idivl
popf
inc
js
mov
and
loopne
push
fsubp
xor
dec
pop
neg
sti
add
mov
fisubrl
sub
lret
pop
and
or
jmp
das
sti
and
loopne
push
leave
and
push
xor
dec
push
xor
lods
test
pop
jle
pop
orl
imul
xchg
mov
roll
inc
inc
stos
jecxz
sbb
mov
frstor
iret
inc
ljmp
out
and
pop
pop
mov
cs
les
jl
xor
sub
ret
pop
and
sbb
rcll
mov
xor
or
mov
dec
iret
test
sub
push
repnz
orl
in
xchg
xor
sarl
add
sub
jmp
repz
mov
sub
pusha
fildl
or
and
xor
xor
or
repz
pop
sarl
mov
or
push
mull
bound
lds
sti
cmpsl
xchg
pop
xchg
popf
dec
xor
das
cmpsb
je
int
and
jbe
xchg
pop
shr
sbb
xchg
orb
jmp
sbb
cli
pop
sbb
dec
or
mov
incb
mov
scas
mov
jl
pusha
lea
and
pop
neg
push
jmp
std
jnp
test
adc
loop
add
and
decl
push
push
jmp
loop
jecxz
rcl
push
call
leave
pop
call
ds
pop
push
bnd
and
dec
inc
push
sub
dec
lahf
stos
movsb
push
or
adc
test
sub
jo
dec
or
xchg
scas
mov
or
push
push
xlat
lret
int3
mov
dec
adc
cli
lahf
mov
cmp
hlt
fdivrs
outsb
or
lock
push
jae
jle
loop
out
sub
repnz
imul
bound
clc
jo
or
jle
mov
pop
imul
sti
lock
pop
or
dec
mov
jg
add
cli
or
pop
sbbb
data16
xor
fiaddl
pop
push
lahf
pop
add
cmp
push
adc
pop
repz
jge
in
movsb
testl
xor
add
or
or
scas
sub
sub
stc
aaa
les
pop
adc
lea
movsl
cld
adc
push
dec
es
loope
jns
andl
sbb
dec
sti
aam
or
pop
xchg
and
pop
jmp
or
push
fsts
imul
addb
add
jo
xlat
pop
add
lcall
mov
and
daa
shr
pop
js
push
and
je
pop
sub
mov
pop
pusha
out
dec
sub
xor
mov
loopne
mov
pop
cmp
in
lock
adc
outsl
jo
ret
int3
test
iret
shlb
call
cmp
or
imul
pop
inc
push
hlt
cmp
cmp
push
push
jmp
mov
fstpl
inc
subb
pop
fimull
add
mov
sub
jge
addl
pop
cld
cmp
sbb
inc
add
mov
cmp
xor
movsb
mov
or
sub
pop
add
add
loopne
pop
dec
rcrb
ds
add
daa
in
pop
shrb
aad
ja
push
js
and
and
dec
push
and
leave
push
cld
xor
outsl
inc
hlt
mov
pop
fistl
int
xor
adc
adc
insl
sti
std
mov
pop
jmp
or
jno
loopne
inc
add
adc
jb
pop
xlat
nop
scas
rcrb
shll
or
sub
add
movsl
add
mov
push
mov
enter
pop
faddp
mov
fdivrs
push
adc
stc
push
jmp
pop
add
out
adc
adc
sbb
test
or
pop
xor
mov
mov
jne
add
flds
mov
stos
test
jo
add
add
mov
xchg
clc
rol
jmp
mov
and
in
jno
xor
add
psubsw
add
in
xor
push
jmp
out
loopne
pop
pop
aaa
aad
push
xor
sub
aas
push
xor
popa
or
rcll
sub
pop
cli
dec
pop
aas
mov
dec
addb
xor
ds
or
repz
hlt
xor
pop
lock
jne
mov
lahf
pop
pop
xchg
adc
jb
lock
add
sub
divb
fs
imul
mov
jmp
add
inc
xchg
cld
adc
pop
fdivs
dec
or
lods
sub
jecxz
test
sub
jns
push
sahf
inc
je
push
jmp
andb
cli
pop
push
iret
lcall
pop
mov
out
in
pusha
xchg
insb
and
mov
xchg
mov
cmp
fndisi(8087
add
xor
nop
repnz
int3
sbb
cmp
enter
in
jmp
jecxz
les
mov
or
xor
lock
and
jb
or
clc
jmp
adcl
test
pop
mov
shld
cwtl
test
sub
sub
clc
jge
jb
or
les
pushf
jns
and
lods
or
mov
mov
icebp
jo
stc
or
subl
mov
push
cwtl
sub
and
fs
cmp
je
or
mov
and
out
add
cmpsb
out
add
sub
mov
rolb
push
cs
fisubrl
cmp
dec
mov
inc
xchg
and
push
push
lods
gs
bound
popf
pop
popa
dec
or
adc
pop
pusha
mov
shll
outsl
cmp
test
nop
mov
adc
cs
jb
daa
add
adc
inc
or
jno
les
dec
xlat
out
cwtl
jbe
inc
faddl
imul
inc
rolb
leave
dec
mov
subb
xchg
sub
push
repz
or
xor
push
inc
mov
adc
mov
jb
mov
imul
flds
mov
cltd
insl
pop
mov
ds
mov
addb
mov
out
fsubrl
fisubl
pop
into
lods
fstp
andl
add
add
jno
out
or
cmp
inc
dec
scas
adc
decl
push
add
hlt
std
daa
jb
out
shrl
xchg
fisubs
jmp
adc
fidivrs
das
or
lock
xlat
jne
xchg
xchg
popa
shr
ret
mov
pop
mov
movsb
or
fisttpl
out
push
push
add
stc
sbb
and
and
fs
enter
in
mov
out
pop
sub
sbbb
inc
inc
pop
ret
scas
test
adc
add
fcos
bnd
push
fisubs
lret
jmp
popa
mov
jp
int3
pop
shlb
int
rolb
adc
push
jmp
mov
dec
popa
sub
mov
stc
inc
ror
push
push
cs
adc
sbb
aam
mov
into
sub
ret
jmp
loope
inc
addps
sbb
xor
push
bound
inc
pop
add
jl
movsb
dec
cmp
shr
sub
insl
dec
sub
adc
in
mov
mov
pop
sub
test
mov
push
fbld
sti
inc
or
push
jb
mov
mov
sbb
or
adc
or
daa
mov
out
jle
pop
out
pop
add
mov
shlb
ret
dec
mov
jmp
daa
pop
mov
rcrl
sbb
inc
or
dec
ds
fstps
add
sub
loopne
lock
cs
add
cmpsb
rcl
shlb
pusha
adc
sub
push
pop
sub
sub
test
add
add
jmp
sub
mov
sub
sbb
addr16
jg
sbb
out
xor
cli
sbb
adc
ret
loope
cs
ret
push
sub
stos
pusha
in
jmp
call
ret
insb
adc
out
and
cmp
mov
jmp
sbb
pop
stos
repnz
into
test
scas
lret
mov
push
pusha
ret
ss
pusha
das
push
dec
xor
loopne
call
fdivl
xchg
pop
mov
cmp
cmp
sbb
dec
push
aam
add
jnp
outsl
notb
push
inc
repnz
or
pusha
nop
fdivp
or
jge
pop
dec
in
mov
jmp
gs
fdivrp
ret
ret
pop
fndisi(8087
inc
mov
xlat
syscall
jg
push
pop
out
add
call
cltd
xchg
cmp
cli
push
inc
xchg
push
sarb
sub
lahf
cmc
rcll
pop
ss
jl
jmp
xlat
pop
sub
lock
sub
or
inc
popf
sbb
or
call
dec
imul
jo
adc
neg
stc
sahf
test
mov
inc
pushf
adc
dec
jl
push
lds
push
in
enter
add
test
js
push
xor
jbe
shrl
ret
pop
push
pusha
adc
inc
and
add
xor
in
mov
cmp
insb
loop
adc
mov
cmc
outsl
fcom
in
sti
aam
jnp
and
mov
adc
pop
and
imulb
movsl
sub
dec
fsts
cmp
hlt
or
imull
adc
push
pushf
jmp
pop
insb
cmp
xorb
icebp
ljmp
fwait
rolb
and
mov
sti
mov
and
xchg
inc
adc
scas
lahf
subl
cmp
testl
pop
sub
or
jmp
push
out
leave
repz
dec
cs
push
jge
inc
mov
jns
adc
jmp
sub
cld
mov
nop
sub
mov
mov
pop
in
mov
jbe
mov
or
psrlq
iret
push
pusha
testl
cmp
mov
mulb
std
roll
pushf
push
fimuls
dec
or
xlat
cmpsl
aam
add
rorb
sbb
pop
adc
cmp
sar
das
rolb
dec
aaa
insl
sub
test
pop
and
aas
pusha
arpl
mov
add
js
push
repz
lock
cs
sbb
loop
ja
mov
stos
test
gs
sbb
xor
xchg
inc
daa
dec
data16
push
sub
jle
xor
cwtl
mov
dec
pop
loope
jp
adc
sub
add
dec
test
sub
adc
out
cmpsb
add
cmpsl
push
enter
xor
or
inc
pusha
ss
fs
fdivl
repnz
dec
adc
sub
in
mov
rorb
inc
les
pop
push
ret
dec
mov
leave
sub
shr
add
out
jbe
adc
push
dec
jge
pop
loopne
adc
sbb
add
jmp
aam
jmp
mov
js
addr16
mov
xor
es
add
fcoms
dec
add
push
mov
cli
inc
dec
add
repz
aas
in
add
pop
push
fptan
aaa
pop
cs
jns
mov
inc
pop
jbe
push
xor
jne
movb
inc
mov
adc
mov
push
sub
xchg
adc
nop
addb
xlat
sbb
repnz
adc
adc
sub
stos
fidivs
lret
push
add
sbb
int
inc
mov
add
jmp
out
pop
in
and
not
xchg
aad
xchg
add
mov
lds
das
mov
cld
filds
push
cmpsl
dec
add
loope
stos
or
mov
adc
lds
sub
cld
push
cmpl
adc
jmp
cmp
dec
cmp
mov
bound
stos
cmp
and
add
sbb
cltd
add
pop
sub
and
push
jg
cmp
scas
mov
pusha
and
sar
out
orb
jecxz
loopne
sahf
add
dec
pop
lods
and
lahf
jp
add
jne
sub
in
mov
pminsw
test
inc
test
pop
decb
jg
xor
loope
test
or
add
dec
shlb
mov
sbb
pop
pop
call
jo
push
sbb
jne
cmpsl
pop
mov
ret
dec
pop
sub
or
dec
lret
jmp
js
or
jmp
xchg
mov
inc
add
testl
int
jmp
sub
loope
frstor
jg
leave
and
xchg
push
test
cmp
mov
cmp
cmc
dec
out
xchg
jno
xchg
push
or
icebp
in
xchg
out
enter
mov
daa
lahf
ret
mov
cmp
inc
xchg
daa
in
das
std
pop
cmovne
or
xchg
ret
pop
es
pop
xor
mov
rclb
ret
add
jge
das
clc
cmc
pop
add
sbb
add
pop
xchg
js
rcrl
mov
fdivs
aam
and
pop
xlat
xor
xchg
fidivs
pop
xor
ja
add
pop
push
push
fs
test
add
push
fisubrs
cmp
das
and
sub
push
sbb
andb
inc
scas
mov
push
ret
push
jae
add
test
fisttpl
ret
call
add
notl
add
inc
or
pop
loopne
outsl
in
dec
rol
jp
xor
repz
sbb
inc
push
jns
es
adc
lods
hlt
add
loopne
in
xor
add
popf
arpl
sub
cmp
sarl
add
mov
lock
add
dec
dec
clc
add
or
sub
ret
lahf
loopne
cld
or
mov
and
bound
cs
mov
mov
loope
sbb
loop
cld
xor
rcrb
call
sbb
mov
push
es
push
les
lods
cs
inc
push
repnz
mov
pop
push
jns
pop
inc
movl
mov
lret
pop
add
xchg
rcr
pop
push
cs
add
fisttpll
aas
addr16
push
arpl
addb
push
mov
movsl
out
stos
and
jnp
std
or
mov
sub
adc
add
cmpl
mov
add
loope
lea
cmc
sbb
dec
pop
push
in
out
es
lods
cmpl
sub
push
es
mov
es
sub
jae
or
cmp
mov
fsts
cmp
push
loop
lret
or
rclb
add
pop
imul
cld
push
rcr
adc
xchg
ljmp
subb
push
fstp
sbb
js
rorb
xor
sub
xchg
mov
bound
and
js
and
xchg
and
sub
adc
call
push
fwait
les
pop
inc
jmp
jno
add
out
jne
lret
sahf
dec
dec
lock
repz
adc
jmp
sub
push
lcall
add
ficoms
jmp
mov
adc
out
sbb
ret
xor
les
push
lcall
sub
or
push
adc
aaa
test
mov
fsubs
mov
and
jmp
loopne
les
inc
sub
aam
mov
test
or
jmp
aaa
pop
jle
mov
out
outsl
mov
mov
and
jmp
daa
xchg
subb
sub
bound
or
not
jmp
ljmp
fs
pushf
dec
sub
pop
jmp
add
sti
test
int
in
sbb
jb
movsl
fcomps
loop
stos
popa
cltd
mov
scas
xor
in
add
call
xchg
mov
sti
jp
mov
mov
filds
js
js
inc
pushf
xchg
inc
push
mov
push
notb
ja
sub
jmp
push
sbb
cmp
popf
insl
add
mov
mov
fwait
adc
cmp
add
rcr
pop
test
in
push
jo
xchg
hlt
or
pop
les
mov
sarl
push
popf
insb
std
xchg
je
repnz
push
sub
inc
jb
or
or
jg
mov
int3
les
sub
mov
and
mov
push
not
pop
loope
pop
ret
pop
pop
add
inc
xor
mov
call
std
fwait
add
xchg
bound
push
adc
loop
repnz
iret
push
inc
inc
inc
aad
pop
call
rcrb
enter
pop
dec
add
adc
pop
jne
inc
or
mov
cmp
add
push
lret
or
dec
add
push
mov
ss
xor
sub
mov
or
rorl
mov
lcall
add
mov
stc
movsb
inc
push
lds
fs
aam
pop
dec
stos
jl
mov
imul
cmpsl
pop
xor
movl
and
sub
push
xlat
xchg
dec
nop
dec
add
cmc
sub
mov
lock
rorl
xor
in
mov
jmp
jl
sti
cmp
in
in
clc
jg
ret
jnp
enter
jnp
mov
pop
aaa
pop
push
sbb
xchg
mov
ret
mov
and
out
inc
test
inc
lahf
in
sahf
and
rcrl
addr16
push
sub
cmpsb
adc
or
and
les
add
pop
jmp
dec
dec
notb
bnd
add
ret
jmp
adc
sub
pop
or
pop
pop
push
js
cld
das
jno
fdivs
inc
push
push
sbb
sub
jmp
and
enter
cwtl
orb
jnp
mov
aam
loopne
jno
leave
dec
pop
sub
in
adc
in
and
loope
imul
xchg
pop
mov
fstl
jns
inc
ljmp
push
dec
movsb
jecxz
jmp
neg
pop
aad
xor
hlt
repz
push
je
jb
or
aad
aaa
xor
jae
ret
lock
push
cld
testb
data16
sub
lods
bound
mov
and
hlt
aam
out
pop
pop
cli
fnstsw
imul
scas
repnz
sub
jmp
xor
sbb
push
mov
jecxz
lods
je
loopne
lods
inc
pushf
test
xor
sbb
or
xor
sub
pop
xchg
inc
mov
loop
inc
das
lcall
addr16
dec
leave
xlat
inc
iret
xor
inc
aam
inc
pop
jge
in
cmp
out
or
outsl
filds
jmp
stos
lcall
xchg
outsb
clc
jmp
adc
roll
in
addl
xor
int
add
pop
push
aam
add
sub
in
mov
cld
and
dec
mov
push
xchg
arpl
leave
sbb
ret
das
ret
hlt
sbb
scas
dec
cmp
jb
repz
sub
dec
add
xor
dec
les
cmc
pop
es
inc
sahf
insl
aas
cmp
movsb
std
shll
or
mov
cmp
jo
and
sub
popa
dec
or
sub
add
ljmp
pop
dec
lret
jmp
or
push
mov
sub
push
jmp
repnz
or
daa
sarl
stc
mov
idivl
aaa
push
jecxz
icebp
or
pop
in
jbe
bound
inc
lock
dec
mov
loope
bound
push
adc
test
loopne
sub
xchg
dec
add
faddl
mov
addl
daa
lods
jnp
jmp
or
out
or
sbb
push
call
cmp
in
hlt
popf
and
loop
mov
repnz
mov
mov
dec
dec
stos
push
aad
cmp
add
cwtl
jl
mov
cld
sub
pusha
xor
pushf
push
dec
xchg
dec
xor
mov
push
add
inc
xor
or
xchg
sbb
mov
cmp
repz
jge
imul
pop
popf
jo
xchg
xor
cmp
push
jmp
pop
push
inc
das
notb
jmp
cmpsb
sub
das
pop
xlat
adc
inc
sub
ret
dec
rol
push
adc
cmpsl
aas
call
pop
out
mul
adc
dec
rcll
pop
andb
scas
sbb
fildll
ret
mov
xchg
mov
sub
rcl
lds
mov
sahf
sub
ja
notl
clc
sub
pop
out
addr16
sub
mov
nop
je
and
sub
xor
rolb
ja
cs
repnz
dec
xchg
dec
mov
loopne
and
xor
xchg
xorb
addb
sbb
nop
add
cmpsl
in
add
pop
ja
lock
loop
addr16
adc
pop
cmp
jmp
adc
cmp
aaa
add
out
jmp
popa
ljmp
jp
shl
cmp
cmp
pusha
push
outsb
jmp
mov
dec
cli
mov
lods
add
push
dec
pop
fildl
and
sbb
push
add
push
adc
movsb
in
pushf
adc
popa
pop
inc
loop
fucomi
out
gs
daa
repz
sbb
test
inc
jmp
jmp
mov
dec
mov
pop
pop
ljmp
imul
sahf
pop
pop
aas
outsb
and
push
push
jns,pt
dec
ror
xor
xor
mov
pop
lods
orb
push
pop
push
lahf
cmp
mov
cmpsb
jp
subb
es
pop
jmp
xor
in
pop
add
mov
inc
xor
and
xchg
jns
filds
cs
lahf
pop
ljmp
decb
jle
adc
cmp
dec
out
mov
or
leave
push
or
addb
testl
pop
arpl
flds
inc
ljmp
nop
roll
in
mov
adc
xchg
adc
push
sub
adc
int
push
sbb
cmp
fnstcw
xor
mov
adc
test
sarb
jnp
jl
mov
push
or
pusha
hlt
popf
rorb
or
hlt
pop
add
lods
pop
adc
push
out
cwtl
pusha
jmp
dec
push
loopne
adc
dec
in
and
cmp
add
xor
jmp
out
ds
xor
and
outsb
scas
sbb
imulb
shlb
orl
dec
mov
add
popf
mov
mov
push
pop
dec
pusha
jbe
cmp
test
sti
lret
test
cmp
mov
push
xor
xor
xor
cmc
xchg
mov
push
xor
fisubrs
push
js
lcall
sub
pop
push
add
mov
stc
out
xor
test
bound
pop
push
mov
xor
int3
ret
lds
jmp
jmp
xchg
jge
xchg
sub
jnp
shrl
add
or
mov
cmp
cmpsl
je
push
xchg
mov
xchg
cwtl
or
popl
lret
sub
adc
adc
and
ljmp
das
mov
lret
xchg
movsl
jmp
ffreep
dec
push
outsb
push
mov
jl
and
add
ret
pop
xchg
pop
sbb
xchg
push
xor
test
inc
ja
and
and
lret
or
mov
lea
dec
pop
lods
aas
sbb
jmp
adc
add
push
popa
test
mov
mov
and
xchg
je
push
xchg
push
dec
sub
mov
decb
push
mov
mov
lods
rclb
call
dec
mov
into
xchg
inc
push
pusha
pusha
mov
out
dec
sub
inc
jbe
push
pop
es
mov
add
not
test
pop
push
mov
adcb
sub
push
mov
inc
dec
pop
leave
and
or
mov
pop
leave
fbstp
dec
add
push
push
push
xchg
xor
and
inc
sub
ror
cmp
in
xor
sub
repnz
pop
push
out
sub
ret
ja
pop
jmp
js
daa
jmp
pop
sbb
insb
or
aam
xchg
or
xchg
push
adc
xchg
pop
and
or
xor
sti
popf
mov
xlat
inc
loope
movsl
adc
or
push
mov
and
add
jno
and
push
dec
xchg
bswap
pop
int3
dec
jmp
test
xor
notl
mov
add
jne
add
sub
sub
je
je
mov
inc
mov
les
mov
mov
or
mov
leave
and
jmp
stc
pop
sub
lods
or
fcom
outsb
push
dec
pop
mov
cmc
push
insb
in
lock
add
cmp
shr
loope
into
je
fistpl
push
mov
mov
mov
ljmp
imul
movsl
cld
std
rcrl
sbb
notb
push
dec
pop
mov
shrb
cmp
sub
fisttps
into
or
mov
jmp
xor
mov
sahf
or
pop
jmp
popa
subb
outsb
out
add
or
xchg
sbb
sti
lock
mov
shl
or
pop
mov
sub
inc
dec
sarb
in
cmpsl
dec
scas
sub
test
push
int3
inc
mov
daa
add
fsubl
pop
fbld
ja
loopne
call
clc
pop
add
add
popa
cmp
dec
add
hlt
or
jo
in
dec
mov
xlat
outsb
mov
pop
aam
loope
ret
rol
xchg
or
icebp
pusha
cmp
inc
push
cmp
iret
test
lret
adc
mov
xchg
mov
rorb
sti
lock
mov
fsubr
movsb
pop
call
sti
sub
sbb
add
push
inc
shlw
std
jae
js
pop
mov
in
xchg
js
jp
loope
scas
sub
mov
test
lock
subb
dec
sub
movsb
inc
jp
push
push
jo
push
mov
xchg
or
mov
push
sub
clc
dec
scas
lcall
mulb
jnp
enter
mov
xor
or
mov
pushf
notb
popa
insl
cmp
jp
push
xor
sbb
incl
xor
and
inc
daa
fs
add
jne
movaps
jecxz
dec
js
add
dec
fisttpll
movsb
jnp
int
mov
add
mov
dec
sbb
mov
or
jl
jo
add
pop
add
push
pushf
imul
in
dec
xchg
cmovb
or
jmp
dec
jg
scas
sub
nop
or
aas
xchg
test
mov
xorb
dec
pop
into
aad
data16
loopne
add
mov
aas
xchg
sub
mov
mov
scas
pusha
cmp
push
fisttps
push
test
jb
int
testl
add
jl
cmp
jmp
divl
pop
int3
dec
ljmp
scas
stos
sti
int
sub
cmp
or
jns
and
pop
fldt
mov
jecxz
and
mov
das
mov
dec
rorb
outsb
add
repz
push
lock
orb
sbb
jge
clc
pop
popf
push
insl
cmp
hlt
jne
dec
push
push
pop
add
mov
test
mov
and
cmc
push
and
dec
das
dec
jle
shll
sub
jge
shrb
sbb
xor
inc
sub
ds
mov
push
push
mov
and
out
stc
cs
mov
xor
push
push
pop
and
xor
cld
imul
js
sbb
add
ret
add
mov
lret
or
xlat
add
out
mov
xor
cmp
repz
lock
testb
icebp
push
push
cld
mov
lds
leave
fcomps
mov
add
ficoml
imul
cmp
aas
test
lret
pop
pop
jne
sub
test
and
inc
dec
and
addr16
or
jmp
out
jecxz
cltd
jecxz
cmpb
push
ss
sbb
jp
dec
mov
sarl
pushf
xlat
popa
jo
arpl
lods
pop
pop
jl
mov
loop
test
imul
cmp
inc
add
pop
jle
mov
mov
cli
mov
or
adc
sbb
lcall
and
sbb
mov
add
jo
pusha
add
mov
pop
xor
cmp
in
mov
sbb
sti
pusha
lcall
fistl
es
in
in
xor
icebp
ret
mov
fdivr
lds
dec
lahf
inc
std
xorb
jp
xor
or
aas
test
and
repz
outsb
fimuls
add
sub
and
sarl
aas
popa
stos
and
es
adc
adc
mov
je
jecxz
imul
adc
sub
push
push
xor
repnz
inc
push
cmp
gs
daa
and
aam
shr
push
movsb
lcall
push
shlb
inc
sub
or
add
lcall
or
daa
jg
enter
push
sub
in
aad
xchg
iret
cmp
setb
ja
cld
xchg
rorl
call
ljmp
mov
inc
repnz
dec
mov
popa
pop
cmpsb
sbb
out
jle
add
dec
jmp
pop
xor
mov
ljmp
add
jbe
imul
das
push
mov
jo
push
sbb
push
fs
loopne
sarl
adc
imul
sbb
inc
jle
insb
push
inc
fdivl
xchg
in
pop
stos
dec
ds
add
add
dec
fidivl
jmp
cwtl
pop
nop
mov
mov
mov
and
mov
push
or
lods
adc
movsl
test
push
jne
int
cmp
hlt
pop
pop
lods
loop
sub
and
subb
pop
dec
sbb
and
push
stos
mov
sbbl
pop
arpl
pop
sar
addr16
dec
icebp
shrl
js
sub
cld
adc
stos
dec
insb
insb
push
add
sub
push
sub
stos
std
add
in
outsb
pop
cwtl
add
daa
jecxz
ret
out
push
jg
push
lcall
dec
cmpsl
je
das
xchg
imull
bound
test
out
sub
cs
jle
aaa
push
dec
add
push
sbbb
in
sbb
cmp
pop
pop
iret
insb
add
xor
push
add
push
pushf
cmpsl
lds
les
and
js
mov
sbb
and
cmp
popa
dec
mov
push
push
lds
xchg
hlt
pop
push
cmp
cmpsl
inc
jbe
stos
and
pop
sbb
pusha
ja
pop
mov
mov
lds
stos
mov
or
loop
jnp
cmc
icebp
loopne
int3
pop
idivb
loop,pn
cmpb
inc
adc
clc
lahf
mov
pop
mov
push
push
mov
add
xor
inc
fdivrp
int3
and
inc
mov
in
cmp
mov
clc
shl
lods
cwtl
xchg
add
mov
jmp
cmp
push
jno
mov
cmp
push
sbb
mov
bound
fnsave
popa
push
hlt
jge
mov
cmpsb
cli
repnz
and
loope
mov
push
pop
sbb
or
cld
jae
xchg
loop
mov
push
fstpl
repz
incb
mov
pop
dec
sbb
pop
jp
cs
neg
cmpb
nop
daa
cmp
bound
mov
jg
loop
jecxz
jo
incb
or
aas
add
sbb
mov
pop
fists
bound
push
mov
mov
sub
and
mov
std
in
inc
xchg
mov
sub
pop
outsl
mov
sub
imul
inc
jno
xchg
sub
inc
jnp
or
out
jmp
popl
sti
mov
test
jle
pop
pop
cmp
and
aam
addr16
push
add
out
xchg
sbb
or
pop
pop
xor
mov
xchg
out
sub
adc
movsl
or
imul
testb
mov
mov
mov
push
and
repnz
push
jl
cmp
sahf
bound
xchg
pop
mov
andl
mov
adcb
popa
pop
hlt
repz
xor
fadds
mov
pop
pop
shr
xchg
sar
scas
cmpsb
dec
mov
fyl2x
clc
dec
add
or
and
loopne
xchg
bound
cli
mov
addr16
xchg
lock
sub
push
dec
sbb
add
inc
nop
add
data16
inc
adc
cmp
push
sub
gs
and
loop
loopne
mov
fimull
in
inc
mov
push
push
add
addr16
jmp
lods
xor
or
dec
pop
shll
movsl
sar
in
imul
sub
sbb
dec
outsb
subb
xchg
and
loop
movsb
sbb
or
adcb
xor
and
push
sub
add
mov
int
arpl
inc
orl
notb
add
or
xor
xchg
jns
jl
cli
push
scas
scas
push
sahf
mov
pop
mov
mov
hlt
lcall
je
inc
jmp
js
imul
lcall
adcl
pop
sbb
aas
repnz
add
mov
orb
pop
sub
mov
movsl
repnz
push
push
fbstp
push
xor
je
add
shrb
daa
ja
and
repz
jg
les
xor
pop
dec
cmpsb
cli
or
mov
fidivs
mov
loope
mov
pop
mov
aam
mov
inc
inc
add
pop
lods
es
int
and
sbb
dec
into
mov
es
dec
daa
adc
dec
sar
cmp
lret
cs
cmp
dec
sbb
push
lahf
inc
arpl
rol
out
cmp
sub
pusha
and
dec
pop
or
sub
iret
inc
pushf
jl
inc
fdivl
mov
int
gs
rorb
aam
add
out
or
sub
add
xor
dec
cmp
mov
xchg
scas
lret
fisttpll
jg
fwait
mov
push
clc
imul
sbb
push
loop
fucomip
int3
and
ret
or
lock
shll
cmp
js
adc
sbb
loope
push
loopne
lret
addr16
inc
cmp
add
jnp
cmp
test
or
rclb
mov
jmp
fldcw
nop
lret
cld
cmp
jbe
nop
jnp
aaa
cmp
inc
pop
jmp
cld
fdivrl
pushf
sbb
xor
jecxz
and
popa
or
dec
pop
clc
inc
pop
mov
fdivrs
push
and
iret
jae
and
popa
outsb
add
jge
and
jmp
cs
fildl
or
pop
out
add
inc
adc
stc
fcmovnb
lret
cmp
and
ljmp
jmp
inc
push
mul
lods
pop
add
cmp
imul
or
push
sub
lods
nop
xchg
push
subl
add
jne
mov
lock
add
mov
xlat
xchg
jmp
mov
sub
mov
sub
lahf
jb
mov
fstp
fadds
fisubrs
imul
inc
popa
movsl
or
jmp
ljmp
push
js
mov
xor
ret
jg
jg
lds
cmp
scas
xor
aas
shrb
inc
dec
das
jno
push
rorl
and
add
xor
insl
xchg
inc
loop
mov
bound
push
pop
cmp
repnz
aam
xchg
pop
mov
in
scas
xlat
xor
rol
and
cli
and
ret
jb
pop
cmc
inc
pop
into
data16
mov
movsl
je
cmp
push
adc
and
test
push
inc
sub
das
mov
insl
lds
or
inc
pushw
jbe
push
add
mov
mov
xor
fistps
std
pusha
divl
dec
and
cwtl
sbb
inc
mov
cmp
dec
add
pushf
add
aaa
add
ljmp
push
ret
sub
jne
add
out
sub
push
stc
or
sbb
pop
mov
or
add
add
sbb
xor
push
fs
dec
or
adc
aad
mov
inc
out
mov
xchg
mov
adc
adc
or
and
xlat
fcmovb
test
iret
orl
das
call
push
push
ljmp
jp
and
rcll
sub
jmp
leave
sbb
pop
jmp
and
sub
or
or
push
mov
jne
push
mov
lahf
push
repnz
sub
and
rol
push
push
daa
mov
push
push
fs
clc
push
sbb
ja
mov
cmp
dec
cli
test
mov
sub
and
pop
jo
cmp
sahf
fiadds
dec
pop
dec
dec
in
sbb
notb
or
pop
add
push
inc
and
mov
mov
mov
js
fstpt
pop
lods
push
aad
rcll
sub
dec
xlat
stos
pop
call
cmc
xchg
outsl
rcll
dec
pop
dec
xor
out
lea
mov
addr16
jae
dec
and
push
orb
sbb
sahf
xor
jl
into
push
and
out
fstl
cmp
fsts
add
das
popa
push
fcmovne
add
icebp
mov
dec
pop
sti
shlb
fs
sti
push
lock
push
pop
test
dec
xchg
mov
mov
adc
test
sub
and
pop
test
xchg
mov
dec
push
push
pop
mov
cmp
hlt
fcomps
mov
xor
pop
add
pop
das
int
popf
aad
rclb
fcmove
subl
dec
les
adc
pop
jbe
and
rclb
pop
push
sarl
add
xchg
rol
and
push
push
and
jmp
push
stc
cmp
sbb
or
mov
mov
pop
pop
filds
shll
cmp
clc
add
add
push
pusha
pop
push
iret
jne
jmp
loopne
cltd
push
jb
dec
and
push
jo
pop
pop
cmp
loop
xchg
dec
push
jp
movb
jns
add
xor
js
out
jle
aad
mov
leave
es
sub
movsl
cmp
shl
mov
add
mov
lcall
lea
popf
icebp
call
in
sbbl
popa
jmp
pop
popf
cmp
xchg
mov
mov
addr16
and
xchg
mov
inc
enter
dec
and
dec
lahf
or
pop
push
mov
jg
add
add
in
call
mov
push
pop
or
addb
pop
mov
add
out
add
shll
mov
cmp
add
popa
lcall
or
push
lea
fistps
pop
stc
jmp
in
jl
pop
and
repz
test
mov
mov
sub
fcompl
sub
jl
xor
jg
cmove
add
repz
mov
roll
inc
and
movsl
pop
add
jmp
dec
scas
ja
shlb
cmpsb
add
loop
and
icebp
mov
mov
or
imul
lock
or
inc
adc
or
pop
dec
cmp
or
jne
outsb
neg
sub
xchg
fdivl
daa
jge
iret
ffree
sbb
push
jmp
nop
push
es
ds
add
or
into
add
dec
add
xchg
add
xor
cmp
or
push
loop
roll
movsl
jl
xchg
and
xorb
add
mov
iret
notb
dec
pushf
decb
push
lahf
jp
out
inc
pop
jecxz
lds
adc
cmpb
inc
mov
add
pop
test
addr16
inc
sub
add
push
adc
xchg
cli
inc
loop
pop
jge
pusha
test
cmp
add
inc
jmp
daa
cmp
dec
test
cmp
rolb
mov
jmp
std
scas
repnz
sub
fistl
loopne
sub
mov
pop
or
jnp
xchg
aaa
rol
outsl
in
inc
mov
fbstp
push
iret
fs
fnstenv
les
cmpl
dec
xor
sub
jno
enter
add
push
push
mov
or
test
icebp
or
data16
ljmp
push
imul
mov
test
pop
arpl
mov
loopne
lcall
leave
xlat
xchg
out
and
es
add
loop
ja
fs
xchg
push
adc
adc
or
inc
xor
jbe
pop
inc
sti
xor
inc
push
jmp
mov
ret
and
ret
mov
je
ret
add
mov
pushf
int
mov
and
nop
mov
sbb
or
ffreep
sti
adc
pusha
lods
sub
pop
push
idivl
lods
inc
fdivs
movsb
jb
or
inc
rcr
enter
push
into
repnz
les
mov
inc
xor
imul
lret
lods
sub
jge
add
stc
fstpl
aas
sub
pop
dec
mov
aas
jb
sbb
add
in
mov
xor
xchg
adc
push
pop
push
xlat
cltd
sub
shrl
and
push
orl
mov
bound
xchg
je
pusha
xlat
sub
adc
xchg
lret
xchg
mov
cmp
add
neg
in
in
jnp
cmpsb
sub
lret
add
or
hlt
push
test
and
sub
ljmp
fisubl
dec
cltd
cwtl
shl
std
sub
push
stc
inc
xor
lret
add
xor
add
shrb
or
push
dec
mov
push
bound
push
andb
xchg
cld
pusha
fadd
mov
and
in
or
sarb
rorb
push
sub
pusha
gs
inc
cmpsb
out
xor
adc
mov
sbb
ror
sub
xchg
push
js
sbbb
pop
jns
cmp
sub
jecxz
cmp
subb
pop
push
inc
fwait
push
sbb
mov
add
pop
sub
jmp
mov
dec
sub
or
notl
add
pusha
cmp
pusha
loop
mov
push
mov
dec
pop
mov
rorb
dec
mov
push
mov
jns
mov
pop
cmp
add
push
add
xor
popl
imul
lds
push
cmpl
lock
sub
pop
jmp
xor
movsb
hlt
insl
fs
mov
pop
xor
xchg
loopne
not
mov
and
and
fiaddl
lds
and
stos
test
scas
dec
mov
movsl
test
fdiv
roll
cmp
and
mov
pop
xor
into
pushf
clc
in
jle
mov
stc
push
inc
add
ret
mov
push
lock
xor
lret
add
xchg
xor
sub
jns
clc
add
lahf
les
push
cld
add
jmp
sub
or
mov
cmpsl
stos
mov
cmp
jle
out
pushf
mov
mov
adc
jecxz
push
loop
movsb
add
popa
xor
jmp
or
pushf
or
push
push
mov
pop
inc
xchg
sub
mov
mov
jge
lahf
dec
sub
int3
out
push
popf
push
mov
dec
addb
push
inc
lret
cli
loop
cmp
jbe
dec
inc
push
push
cli
pop
pop
repnz
cmpsb
sarl
push
popf
hlt
push
pop
cmp
and
mov
movsl
rorl
ds
das
mov
add
adc
add
flds
fists
mov
mov
jmp
pop
dec
pop
mov
push
icebp
jbe
or
xchg
and
jnp
mov
fmuls
aas
jle
or
dec
mull
mov
rolb
jnp
push
in
add
dec
pushf
jne
ljmp
daa
add
xor
setb
jl
lcall
movsb
push
push
push
jmp
leave
cwtl
inc
or
pop
inc
and
loopne
push
mov
inc
xchg
sti
icebp
adcb
inc
jl
outsl
ds
std
bound
push
les
jp
cs
push
jmp
sub
mov
dec
mov
addl
push
mov
repnz
cmpsb
add
sub
data16
push
mov
pop
mov
pop
outsb
xchg
cmp
ds
jnp
lods
mov
add
or
push
mov
xor
sbb
mov
jo
loopne
pop
inc
popf
add
push
testb
push
scas
pop
out
adc
adc
dec
add
mov
add
ljmp
and
repnz
mov
cmp
lret
push
add
pop
in
imul
inc
rclb
cltd
cmpsl
insb
inc
hlt
mov
out
xchg
fldenv
fldl
aaa
pop
lods
and
lahf
sahf
test
into
cmp
aad
jbe
in
cltd
pushf
or
stos
add
aaa
sub
xchg
xor
jmp
fadds
add
push
jmp
pop
loopne
jmp
push
push
add
push
inc
test
add
sub
adc
movsl
movl
or
mov
adc
cmp
pop
movsb
or
add
inc
jecxz
jecxz
ret
sbb
pop
mov
aad
and
adc
outsl
push
iret
pop
adc
dec
cmp
pop
inc
mov
loope
xor
dec
aad
test
jno
jmp
push
push
mov
sahf
movsb
xor
out
mov
aas
notb
mov
addb
pop
cmp
and
fisttpll
push
outsb
jmp
mov
xor
add
dec
push
stos
movsb
int
das
cmp
out
imul
daa
mov
jo
mov
mov
sub
stos
sbb
subb
lahf
adc
pop
push
outsl
insl
lods
inc
inc
or
jmp
hlt
addl
push
adc
jge
pop
lock
pop
inc
popf
enter
adc
add
ss
push
push
push
stc
movsl
addr16
mov
enter
shlb
add
push
sub
push
fsubrl
mov
repnz
fists
popa
imull
jnp
inc
jle
in
adc
adc
frstor
and
mov
xchg
sub
shlb
shlb
xchg
gs
mov
sub
xchg
mov
mov
mov
cltd
movsbl
test
and
pop
push
gs
cmp
or
xor
fwait
mov
sahf
cmp
add
mov
sbb
pop
int
int3
add
pop
xor
push
pop
mov
out
sub
in
push
insl
in
dec
xchg
pop
fsubp
lock
mov
jg
in
jns
and
mov
test
sub
jns
mov
jle
sbb
inc
sub
add
aad
int
or
and
add
and
push
inc
testl
aam
subl
pop
pushf
sub
or
sbb
out
add
push
and
outsl
dec
inc
call
push
mov
dec
repz
push
rorl
imul
test
push
cmp
jp
add
loope
or
js
xor
popa
addl
adc
dec
hlt
pop
pop
mov
sti
add
in
or
imul
iret
sub
mov
add
pop
shrb
fsubl
ds
jl
fwait
lock
cli
data16
mov
test
jge
not
adc
pop
pusha
xchg
pop
aaa
or
ret
push
sub
ret
shlb
lock
std
jl
lods
fisttpll
sbb
push
sbb
cmp
and
pop
xchg
les
jge
cld
and
nop
repnz
rorb
cmpsb
mov
cmp
sub
les
or
pusha
mov
and
jae
ret
in
pop
adc
mov
mov
sti
mov
lret
pusha
xchg
inc
push
sbb
add
inc
jg
jo
jb
sub
hlt
sar
jge
xor
in
or
xchg
adc
aam
adc
mov
jge
xchg
mov
and
xor
inc
push
lds
sub
jae
mov
dec
mov
mov
daa
pop
out
sbb
pop
mov
cmp
shll
push
int
je
push
js
movsl
lds
xor
inc
mov
cmp
mov
sub
cwtl
out
ljmp
add
mov
push
test
andps
add
sub
mov
dec
mov
push
push
cs
mov
pop
add
xchg
sub
xor
xor
add
jg
push
fldt
fmul
mov
jno
test
mov
adc
inc
aaa
inc
mov
pop
adc
sub
sub
fcoms
push
andl
aaa
loopne
adc
add
and
xor
dec
mov
xchg
jg
and
stos
add
jmp
ljmp
into
push
add
fmuls
in
push
pop
or
addr16
and
jae
adc
or
jmp
ret
je
push
inc
sub
add
and
adc
movsb
inc
adc
mov
xorl
pop
out
lahf
fs
clc
pop
jle
leave
push
testb
jl
add
dec
fimull
push
adc
mov
mov
xchg
and
rorb
xchg
punpcklbw
popf
push
and
pusha
out
lock
popf
outsb
mov
add
xchg
jno
xchg
push
addb
mov
push
aam
add
inc
test
lret
div
mov
push
bound
lock
fiadds
push
mov
pop
sub
jle
jmp
mov
adc
bound
dec
notb
xor
inc
aam
mov
or
add
push
jecxz
stc
jmp
pop
fnstsw
and
mov
dec
jns
and
test
lods
enter
addb
daa
or
dec
jge
in
jb
xchg
out
test
dec
std
push
pushw
xor
les
push
mov
hlt
rcll
inc
sbb
fldenv
push
aad
cmp
les
ss
leave
test
adc
rorl
add
icebp
jno
or
push
mov
push
out
es
adc
out
dec
mov
jp
movsb
mov
fwait
xor
ss
xor
out
inc
push
test
ffree
mov
or
rolb
sub
jmp
clc
xor
in
xlat
or
jmp
or
inc
push
in
in
das
cwtl
stos
notl
add
sub
xchg
out
test
lret
push
mov
xchg
add
push
movsb
scas
lods
hlt
mov
sub
mov
out
roll
loopne
fs
cli
add
jmp
nop
ror
jecxz
adc
add
stos
and
push
ret
repnz
sbb
push
mov
je
popf
pop
scas
cmc
add
jmp
daa
lret
out
lahf
bound
jmp
js
cmp
push
shl
icebp
jecxz
out
addb
push
mov
lret
cmp
mov
pop
and
inc
or
jge
inc
les
mov
imul
push
mov
jmp
inc
jmp
adc
pop
jl
mov
or
pop
fisubl
pop
sbb
mov
lahf
mov
sub
sbb
pop
xor
cltd
enter
xor
dec
cmp
adc
data16
adc
add
push
psubb
adc
push
sub
pusha
xchg
jns
and
push
jp
push
lahf
pop
push
xor
into
adc
dec
jmp
add
jl
pop
xchg
sub
es
pop
aad
mov
xchg
mov
nop
sti
invd
loop
mov
jg
int
mov
jb
and
pop
add
fs
das
jmp
lds
push
ret
sub
xchg
or
jle
push
das
inc
inc
pop
sub
or
dec
popa
mov
and
sbb
pop
xor
fsubr
repz
or
dec
data16
jmp
sub
push
shr
add
loopne
in
jno
inc
xor
cmovnp
push
in
jne
fs
sti
test
out
cltd
inc
add
xor
dec
or
add
or
or
loop
jnp
dec
in
mov
xchg
pop
push
icebp
lret
inc
rcrl
mov
aam
arpl
mov
scas
inc
sub
sahf
mov
inc
insl
jmp
cmpb
adc
cmpsl
xchg
mov
test
pop
sub
popa
mov
jne
add
and
jp
leave
outsl
push
arpl
and
outsb
mov
pop
jmp
scas
fsubs
out
and
addr16
insl
aad
mov
sbbl
ljmp
pop
jno
orb
xor
std
cmpsb
xchg
or
cmpsl
out
test
sti
fs
jg
xor
mov
mov
test
cmp
ficoms
minps
mov
push
xchg
mov
test
or
imul
sub
test
xchg
jns
sbb
jnp
mov
adc
into
add
ret
in
fisttpll
inc
pusha
mov
push
stc
sahf
imul
js
sub
lret
push
jmp
inc
mov
jl
dec
lcall
rcl
push
push
dec
mov
dec
outsl
out
push
add
addr16
popa
imul
mov
cld
aaa
dec
cmp
push
data16
jl
ljmp
or
push
mov
in
lds
ret
xor
sar
dec
xlat
xor
mov
cmp
rcrl
cmp
sub
lcall
pop
sub
mov
jns
cld
pop
out
imul
and
add
shll
or
loope
and
scas
sbb
in
add
pop
lods
clc
add
pop
es
or
or
shl
mov
and
inc
cmp
imul
fldcw
in
in
sahf
mov
inc
xor
add
es
inc
test
sti
pushf
push
dec
and
sub
cmp
sbb
inc
sbb
add
xchg
lock
fimull
shlb
lahf
insb
mov
shrb
mov
enter
xlat
addr16
mov
sbb
enter
xor
mov
iret
dec
addr16
pusha
int
clc
scas
arpl
xor
sub
ja
test
loopne
mov
hlt
imul
adc
sbb
cmc
out
lods
out
cmp
jmp
or
cs
inc
and
mov
jp
fmull
mov
leave
js
sub
mov
pop
pop
or
adc
or
and
mov
jno
aas
push
out
adc
mov
leave
or
xlat
mov
insb
addb
add
outsb
mov
mov
das
sub
or
inc
adc
dec
cmp
mov
fs
dec
es
adc
in
pop
push
out
popa
clc
jmp
and
xor
push
lcall
shll
and
pop
push
push
push
inc
mov
mov
push
stc
cs
mov
out
popf
xlat
imul
dec
stos
fs
mov
pop
mov
cld
jl
jle
xchg
add
ds
pop
inc
mov
cld
xor
mov
sahf
sbb
scas
mov
mov
xor
pop
je
pop
sahf
into
out
add
int3
not
adc
or
pop
mov
stc
ja
mov
pop
pop
lods
ljmp
mov
aam
cli
in
test
cmpsl
pop
out
mov
mov
push
fstpt
cltd
lock
or
mov
xor
push
dec
daa
sub
jo
xlat
shll
sbb
je
pop
mov
ret
adc
mov
or
add
out
push
std
pop
dec
ds
add
add
push
push
shr
and
mov
adcb
inc
inc
stc
jp
sub
pusha
and
jle
push
into
pushf
adc
inc
or
sub
sbb
jmp
cmc
loop
lock
dec
pop
xor
xor
or
sbb
dec
adc
add
xlat
rcrb
stc
push
mov
mov
xchg
jge
mov
inc
fildl
mov
pop
imul
repz
sub
xor
ds
cmp
out
insl
push
jnp
mov
fisubs
notl
inc
xchg
or
aam
fsubr
push
out
cs
out
bound
negl
and
push
pusha
xor
add
stos
xor
dec
ficoms
imul
aam
lds
mov
bound
in
icebp
shrb
mov
or
out
sbb
out
push
in
and
or
lds
repnz
mov
pusha
popf
jns
push
testl
sarl
adc
mov
push
jmp
loop
push
and
dec
pop
shrb
xor
or
jmp
lds
jne
test
movsb
or
adc
shr
lea
sbb
test
outsb
xchg
or
pop
sahf
mov
pop
xchg
add
pop
icebp
in
jp
pop
push
in
sub
mov
repnz
bound
jl
pop
fbstp
movsl
aad
test
push
add
push
rcrb
lds
clc
ja
jmp
imul
inc
add
ljmp
popa
es
fucom
mov
push
jmp
adc
dec
lahf
addl
dec
dec
insb
iret
icebp
sub
adc
pop
mov
pop
and
out
pop
jecxz
in
xor
xchg
sub
call
fsubr
push
out
nop
int3
mov
shrl
pop
push
or
xor
repz
xor
or
addr16
frstor
cmp
sub
fists
popa
mov
push
in
movsb
lret
lcall
sub
xlat
mulb
rclb
jae
add
out
push
outsl
cmp
inc
push
dec
mov
jle
adc
lea
repz
leave
icebp
outsb
inc
cmp
xor
test
and
push
in
insl
and
cli
ds
xor
or
xchg
xor
roll
pop
fbld
mov
jb
mov
xchg
push
pusha
xchg
xchg
xchg
jbe
shlb
mov
adc
lahf
sarl
or
dec
sub
sub
mov
ss
cmc
fistpll
jae
cld
push
mov
mov
add
jo
or
jmp
test
into
out
ljmp
xchg
add
push
dec
stos
pop
cltd
dec
ret
and
push
mov
das
shl
mov
adc
inc
jecxz
add
mov
stos
addb
dec
pop
push
mov
add
out
repnz
pop
push
ja
insl
push
adc
lcall
push
or
pop
sub
repnz
addl
outsl
dec
popa
mov
inc
sbb
stos
inc
or
cmp
adc
negb
aam
push
fnstsw
mov
mov
es
lods
dec
leave
xchg
test
fs
mov
popf
jne
push
push
incl
rclb
pop
xor
jnp
clc
cwtl
movsb
scas
mov
adc
sub
stc
stos
or
cs
push
push
sub
inc
mov
or
addr16
jb
sub
mov
ss
and
cmp
push
add
xchg
inc
push
pop
pop
clc
mov
lcall
dec
push
cs
lcall
or
sub
add
or
or
jg
jb
fs
test
outsl
cmp
movsl
movb
in
xchg
sub
sub
add
pusha
xlat
cmp
test
push
mov
sub
adc
cmp
add
xchg
cmpsb
push
push
pop
xchg
mov
adc
or
icebp
push
test
daa
andl
cmpb
mov
adc
cmp
movl
insb
push
or
xchg
testb
dec
mov
jge
icebp
push
cmp
ficoms
add
push
aas
dec
test
pop
or
fwait
movsb
cmp
pop
xchg
mov
sub
lock
sbb
push
js
cmp
sarb
inc
lret
insb
nop
cld
cli
or
push
mov
divb
into
cmpl
jge
in
xchg
lahf
xlat
out
aas
pop
jne
xchg
xor
dec
mov
mov
aad
xchg
div
adc
aas
mov
inc
add
stos
mov
test
mov
dec
cld
out
dec
std
mov
lds
out
xor
dec
jmp
into
jae
sbbb
or
fisttps
daa
jne
je
or
sbb
push
sub
shl
add
mov
dec
jl
inc
lcall
pop
mov
push
mov
mov
push
fisubrl
add
dec
cltd
inc
nop
insb
inc
adc
fidivrl
inc
scas
and
cld
pop
sahf
mov
clc
sub
daa
movsl
adc
jecxz
jge
sub
insl
adc
mov
jmp
mov
rcll
or
sbb
rcrb
rolb
pop
inc
push
cwtl
push
and
pop
pop
jae
loopne
ds
jle
add
sub
cli
and
xor
or
push
xor
loop
pop
jle
pop
pop
rcrl
cli
lods
push
jns
bound
call
dec
imul
add
jnp
outsl
add
and
adc
pop
jne
adc
inc
inc
sub
mov
fiadds
ss
fcoms
ljmp
jmp
out
cmp
add
outsb
sbb
xor
loopne
xchg
adc
jns
cmp
in
add
pop
inc
adc
lods
ljmp
test
sbb
dec
add
mov
jmp
dec
adc
stos
stc
pop
test
cltd
mov
or
clc
inc
push
mov
int3
test
add
cmp
lahf
bound
jg
shl
aaa
jno
or
add
insl
orl
or
ret
daa
mov
sub
fists
xor
imul
add
lret
sbb
push
fdivl
data16
pop
je
lret
jle
xchg
dec
pop
mov
paddb
notb
inc
aas
shrl
pusha
cmp
pop
push
xor
dec
andb
add
mov
fs
ret
in
push
cs
into
out
jae
push
cmpsl
push
jmp
test
pop
add
xor
xchg
lock
push
and
cmc
cmp
shrb
test
hlt
pop
bound
repz
sbb
push
adc
sub
std
fsubr
pop
and
jmp
call
and
les
mov
push
cmp
pop
xchg
mov
hlt
xlat
adc
push
ja
and
add
jnp
jno
ret
sbb
jg
mov
lods
lods
add
enter
pop
pop
add
sub
mov
pop
jns
into
loop
cltd
fs
push
add
or
fistps
xchg
jmp
pop
iret
dec
movsb
pop
mov
mov
sub
pop
addr16
sub
aas
xchg
pop
pop
jmp
adc
test
pushf
icebp
decl
pop
jl
or
jo
adcb
jne
jns
lret
mov
adc
push
jb
fwait
jp
xchg
jg
push
mov
cmp
xor
mov
sub
popa
or
insb
pop
mov
leave
iret
or
and
outsb
mov
push
xchg
std
pop
and
cmp
push
sub
les
pop
cld
cmp
aaa
add
aad
aam
adc
testb
inc
mov
and
lock
inc
jle
ljmp
add
add
and
mov
push
ret
adc
pusha
clc
ja
jmp
pop
cmc
dec
push
fst
cmpsb
push
jo
xor
mov
fstl
leave
push
mov
aad
push
shrl
cli
pop
add
push
jmp
mov
sub
and
xor
mov
xchg
jmp
outsb
xchg
mov
sbb
pop
pop
pop
das
push
fdiv
push
mov
push
jmp
adc
jge
add
les
je
pop
push
inc
xorb
addl
insb
das
push
int
mulb
aas
adc
and
pusha
push
push
ret
or
push
adc
mov
mov
cmpsb
xor
push
sub
sub
adc
jne
adc
fnstenv
push
xchg
push
or
xlat
sub
sub
and
adc
adc
adc
rorb
aaa
jne
popf
sub
aad
push
scas
fisubs
add
jmp
je
imul
in
shll
adc
std
adc
or
jmp
add
and
sbb
xor
dec
add
add
xor
jo
fwait
adc
xchg
sbb
pusha
jb
mov
adc
push
addr16
or
mov
push
adc
lods
inc
dec
push
add
push
jae
mov
xchg
sbb
sbb
mov
and
jo
int3
xor
dec
jmp
fcom
cmp
pushf
push
flds
mulb
push
icebp
or
jmp
mov
xchg
fdivrl
rcr
adc
xor
in
ds
jo
test
sub
and
les
and
bound
dec
aaa
nop
mov
inc
js
push
stos
xor
or
mov
outsl
jmp
pusha
movsl
loop
sbb
fistps
pop
cs
movsl
fistps
xor
loope
lods
xchg
fbld
ljmp
fists
dec
icebp
push
and
cli
stc
sub
sbb
imul
mov
pop
movsl
push
daa
test
push
loopne
addb
cmc
inc
jbe
mov
add
stc
data16
mov
and
cmp
and
into
push
pusha
dec
adc
iret
outsl
cmp
loopne
ret
jbe
popf
and
pusha
adc
mov
repz
dec
mov
and
pop
mov
or
mov
sub
cwtl
xor
in
clc
mov
xorb
push
mov
dec
add
jp
aas
xchg
xchg
jb
fidivl
test
ljmp
push
test
push
cld
testb
out
mov
mov
ljmpw
add
mov
mov
das
fstps
lds
imul
in
add
ret
xchg
fsubs
or
jmp
inc
push
or
mov
and
and
and
loope
test
sbb
lret
pop
sub
xor
inc
add
inc
lret
and
jnp
addl
popl
into
stc
orl
sbb
jmp
data16
dec
pop
dec
cmp
add
movzwl
xchg
xchg
leave
jge
addb
xor
sub
scas
push
dec
loop
xor
sub
dec
ljmp
and
pushf
cmp
cmpsb
dec
pop
mov
ret
mov
dec
jp
shrb
jb
test
call
adc
mov
push
hlt
jge
sbb
push
mov
popf
push
mov
int
push
mov
aas
mov
mov
ss
imul
jne
hlt
mov
inc
imul
mov
mov
nop
inc
cmpsl
sbb
mov
or
fstps
xor
mov
dec
sub
mov
aam
push
mov
not
and
or
adc
jae
inc
or
mov
lret
adc
daa
nop
in
das
or
mov
shl
mov
inc
inc
sub
xor
mov
jmp
cmp
clc
shll
pop
pop
sbbb
cmp
stos
jmp
adc
pop
repz
jle
mov
inc
add
adc
insl
push
mov
xchg
daa
dec
add
int3
mov
enter
das
in
inc
scas
jbe
jge
xor
sub
mov
inc
icebp
xchg
bound
sub
pushf
mov
sub
cmc
push
push
jns
push
loope
shl
das
push
data16
movsb
mov
cmp
bnd
jbe
aam
cmpsl
roll
lds
cmp
ret
das
in
sub
jmp
push
fwait
loope
and
inc
in
add
mov
jl
and
jno
xchg
test
xchg
pop
leave
adc
push
enter
insl
and
pop
fildl
out
ret
inc
out
xor
adc
jmp
loop
mov
jbe
inc
sbb
negb
int3
add
bnd
sub
jno
loop
adc
scas
pushf
imul
ds
mov
jmp
std
fldenv
jg
ficompl
add
outsb
add
pop
shr
xorl
push
xlat
or
sub
repz
or
loop
pop
cs
xor
jmp
mov
loope
lret
adc
adc
jmp
insl
inc
shl
aas
pop
outsb
add
cmp
dec
pop
dec
dec
adc
sarb
dec
dec
ret
jnp
call
or
push
test
insb
loop
cmc
sbbb
mov
or
push
lea
test
push
loopne
adcb
dec
ret
xchg
popf
icebp
lret
in
xor
and
push
jns
scas
fs
dec
jb
popf
call
in
pop
jge
dec
pop
test
or
loopne
jge
test
rcr
pop
pusha
flds
in
add
dec
imul
bound
push
jge
imull
dec
xchg
mull
or
test
shr
push
add
mov
addr16
add
loop
jmp
sub
push
testb
aaa
lock
aam
xchg
jl
dec
mov
stos
sub
repnz
jns
outsl
movsb
fs
call
mov
mov
int3
jns
test
sahf
xchg
dec
pusha
daa
sub
fstl
push
or
add
cli
pop
cmp
xor
mov
int
lods
sbb
pusha
push
mov
dec
mov
test
lods
pop
xrelease
or
or
jmp
mov
lods
jecxz
add
push
repz
mov
jnp
pop
cli
jns
test
cmp
jae
push
adc
pop
add
pop
rclb
and
jmp
pop
inc
mov
dec
jle
gs
adc
xchg
pop
jmp
cltd
out
dec
stos
pop
dec
jnp
in
loope
sub
cmp
cmp
ret
test
loope
mov
jmp
jge
cli
inc
lahf
je
scas
aam
pop
jae
lret
cmp
pop
sub
adc
mov
inc
lret
xor
ljmp
int
add
and
push
mov
jb
cmp
sbb
mov
pop
push
mov
add
add
xchg
stc
adc
push
ret
jmp
mov
fdivrl
push
mov
mov
jmp
hlt
xor
into
sub
lret
add
mov
cmp
inc
mov
sbb
pop
dec
mov
pusha
fdivl
dec
movsl
pushf
add
rcrb
call
out
jmp
push
pop
popf
push
mov
jne
add
fdivr
or
push
testb
xchg
into
sub
mov
lds
jno
lock
cld
sbb
insb
pop
jns
mov
out
clc
jbe
outsb
testb
inc
dec
push
data16
testb
xor
jg
hlt
lahf
mov
roll
ljmp
aas
div
pop
jmp
mov
jecxz
dec
addb
out
inc
daa
push
jmp
adc
scas
je
out
out
pop
cli
xchg
call
mov
test
pop
sbb
ret
pusha
es
add
cmp
sub
test
xchg
sbb
pop
mov
or
enter
cmpsb
dec
or
mov
push
cmc
and
and
movb
in
lahf
sti
sub
je
loope
loope
mov
dec
inc
xchg
pushl
adc
push
cmp
pop
and
pop
iret
add
add
cmpl
nop
jnp
inc
adc
or
cli
dec
mov
sti
pop
inc
cmp
sbb
out
and
pop
adcb
sub
arpl
cmp
sub
stos
bswap
sub
or
pop
pusha
jbe
orb
and
add
fdivrl
mov
scas
push
push
shr
mov
cmc
outsl
add
mov
add
jge
adc
push
vpsubusw
and
test
mov
notb
jge
cmp
and
cmc
fdivs
hlt
inc
wbinvd
fcomi
sub
jno
sbb
divb
mov
mov
fsubrl
stc
daa
notl
pop
jmp
stos
mov
iret
inc
adc
and
or
inc
call
lods
add
dec
pop
dec
hlt
push
add
mov
xor
pop
pushf
movl
cmp
lock
cmp
mov
mov
xor
addr16
or
in
daa
int
je
ret
and
out
dec
pop
jmp
and
loop
sub
enter
dec
pop
jmp
sahf
imul
stc
inc
in
lock
xor
and
addr16
lea
jl
add
jne
pop
jb
mov
sub
add
jmp
mov
shlb
push
insb
mov
jno
sub
lahf
add
testl
jg
mov
or
data16
inc
pop
das
je
and
sti
mov
push
pop
lock
mov
push
aas
mov
push
loope
cld
sbb
into
addr16
dec
test
mov
and
pop
inc
aas
mov
cmp
in
add
jmp
inc
pusha
outsb
or
je
push
add
inc
or
xor
fbstp
jg
push
imul
insb
xlat
lret
or
scas
popf
pop
call
pop
sbb
out
repz
inc
popf
enter
mov
ss
add
fs
repz
mov
sub
rcr
jb
pop
mov
pop
mov
inc
adc
inc
adc
orb
adc
fstpt
insl
lcall
shll
loope
roll
arpl
add
sub
and
push
adc
addr16
inc
mov
bound
jno
pusha
enter
paddb
xchg
mov
xchg
les
jmp
add
jnp
in
push
not
jnp
xor
out
inc
mov
cmp
inc
mov
add
push
xorb
mov
mov
sbb
out
int
mov
xor
sub
pop
mov
aaa
cwtl
sbb
es
adc
jno
dec
outsb
adc
add
pop
jmp
jmp
test
pop
cmpsl
pop
popf
adc
enter
insb
push
xchg
ja
sub
and
sti
cli
pusha
dec
clc
test
lcall
lret
push
cmc
xor
movsl
cmp
mov
mov
dec
scas
xlat
shll
xchg
push
cwtl
mov
jmp
clc
dec
mov
popa
scas
push
and
push
xchg
cmp
outsl
xor
or
and
cmp
add
sub
jg
daa
xchg
mov
add
inc
out
loopne
mov
sbb
add
in
add
loopne
test
sub
sbb
shl
push
repz
out
add
aaa
sbb
repz
daa
adc
mov
mov
mov
or
jp
cmc
xor
push
jb
pop
push
mov
shlb
sbb
in
add
jns
add
cmp
jg
mov
das
arpl
mov
push
jnp
aaa
pop
jge
aad
mov
adc
push
data16
push
or
imul
xor
aam
notl
jle,pt
and
pop
or
das
dec
jb
ljmp
imul
ljmp
sbb
pop
and
lock
pop
mov
add
push
pop
mov
movsb
ds
xor
xchg
popw
and
test
shl
jae
sub
push
std
jae
xchg
in
jmp
and
cli
jge
mov
pop
nop
enter
aaa
mov
mov
test
repz
pop
cmp
mov
popf
outsl
or
mov
dec
lds
push
push
fiadds
mov
sub
lds
mov
cmp
push
or
mov
adc
iret
sbb
inc
or
push
and
dec
int3
xchg
popf
sti
add
cli
mov
pop
jmp
and
and
jge
xlat
sbb
jne
dec
rol
daa
add
insl
and
jmp
mov
and
push
arpl
inc
sti
cs
push
rorb
mov
daa
push
fwait
jns
inc
cmp
mov
nop
xor
dec
sub
mov
arpl
pop
pop
ss
inc
mov
dec
or
xor
push
jo
sub
push
out
cmp
aam
xchg
sub
jg
or
movb
call
rolb
pop
iret
dec
inc
and
xor
fsubrs
inc
mov
sbb
adc
mov
inc
dec
iret
and
add
pop
dec
outsl
loopne
in
popf
adcb
sub
popf
fists
adc
cwtl
push
cmc
mov
rclb
lret
imul
cmp
mov
or
insb
inc
xor
adc
mov
pop
mov
adc
push
mov
loop
addb
add
jmp
xchg
adc
inc
popf
xchg
stos
mov
pop
aam
xchg
sbb
inc
cwtl
pop
or
adcl
or
mulb
push
mov
jns
xchg
insb
sub
and
out
pop
mov
push
or
push
jo
mov
sub
cmp
pop
lods
data16
aad
push
int
or
add
test
lock
sub
jno
xor
cmp
xor
cltd
mov
sub
pushf
add
push
idivb
dec
xor
or
in
js
lcall
push
add
int
jg
pop
in
push
adc
stos
pop
push
push
adc
and
mov
out
xor
shrb
and
loop
ret
pop
pusha
into
jg
mov
pusha
inc
jmp
xchg
push
mov
in
adc
sahf
or
repnz
cmpb
mov
push
pop
and
dec
sahf
mov
inc
fldt
push
pop
xor
movsl
sub
add
orb
in
loop
ljmp
mov
fsubs
adc
pop
jmp
testl
leave
xor
push
rorl
or
jbe
jp
mov
adcb
sub
mov
adc
in
stos
xor
adcb
inc
movb
out
mov
icebp
xlat
enter
add
inc
mov
sbb
pop
ljmp
int3
sarl
inc
add
add
mov
das
pop
xchg
loopne
xchg
fwait
lods
or
mov
pop
add
push
or
rolb
cmpsl
cs
les
enter
leavew
adc
push
repz
cmp
add
cmp
ret
jmp
inc
jl
shl
fiadds
gs
cli
mov
loope
pop
xor
cli
dec
dec
test
dec
fisubrs
push
pop
jmp
jg
fsub
jge
aad
mov
jmp
dec
iret
mov
fists
xor
shlb
in
pop
outsb
fdiv
pop
imul
push
mov
call
add
jns
mov
jmp
mov
jns
inc
jno
ja
sub
and
or
imul
add
lcall
jp
arpl
scas
add
jmp
mov
adc
cs
pushf
mov
sub
jo
das
sbb
test
pop
xchg
repnz
adc
mov
add
sbb
inc
ret
popf
fistpll
popa
lret
ja
push
dec
ljmp
add
mov
jp
loopne
jecxz
sub
cmp
push
mov
or
test
xor
rcll
or
and
aas
mov
lret
fdivrs
gs
push
mov
add
shr
add
push
inc
fidivrl
lock
std
mov
xchg
je
cmpl
roll
sub
push
pop
popf
je
dec
dec
int3
aaa
pop
mov
add
jp
add
dec
fwait
add
movsb
xor
sub
mov
das
enter
cmp
fstpl
cmpsb
xor
insl
or
lods
or
jl
jo
daa
mov
and
shl
rclb
pop
fucomi
scas
inc
incb
dec
push
lods
add
adc
cmp
cld
xchg
or
jae
push
loop
or
sub
cmp
jne
and
jne
aas
or
jecxz
xchg
add
and
sbb
mov
das
pop
adc
movsl
mov
adc
mov
inc
out
pop
popa
jecxz
push
xor
add
enter
xor
pop
sbb
rorl
cmp
psubsb
sub
adc
dec
pusha
xor
test
mov
inc
pop
pop
push
scas
shrb
adcl
arpl
fldl
pop
mov
push
mov
sbb
arpl
sarb
mov
loop
es
cmp
lahf
fs
jg
add
xor
pop
adc
jmp
mov
jb
nop
jnp
js
pop
cli
add
cmc
aaa
dec
enter
xchg
jae
add
sub
or
pop
shl
cwtl
jle
lods
cmc
mov
add
inc
enter
dec
dec
in
cli
push
cltd
shl
mov
inc
push
icebp
adc
movsb
sub
adc
push
leave
adcb
loopne
repz
pushf
stc
iret
inc
mov
std
sbb
add
push
inc
add
loopne
mov
leave
push
bound
mov
jecxz
xor
scas
divb
cmp
mov
xor
lock
out
pusha
push
mov
and
or
int3
or
sbb
add
push
pushf
adc
push
pop
jl
dec
movsb
xlat
pop
out
addl
cwtl
in
sub
dec
out
push
cld
cmp
mov
xor
pusha
jmp
loope
push
int3
or
cmp
data16
rorb
loopne
jmp
pop
out
int3
add
or
int
test
inc
jge
add
adc
subb
sbb
inc
sbb
mov
sbb
pop
out
test
push
push
add
fcoml
fdiv
cmpsb
xchg
sbb
sbb
gs
jmp
pop
pusha
adc
popa
mov
sub
scas
aaa
mov
rorb
mov
testl
cmpsb
cmpl
xor
or
dec
inc
fucomip
mov
test
popa
out
jmp
fs
fucom
and
jge
adc
jge
fisubs
shr
xchg
or
sbb
cmc
or
scas
popf
cmp
enter
or
call
sub
popa
fnstsw
and
pop
mov
xchg
pop
push
push
les
dec
dec
loope
jg
and
icebp
cmc
dec
jge
rcll
pop
or
cwtl
add
mov
lret
xchg
or
or
push
mov
sar
jbe
js
aas
pop
clc
sti
je
in
cs
fimuls
or
add
shl
fwait
inc
or
outsl
mov
dec
adc
adc
jge
mov
jl
fsubr
loope
add
ret
xchg
lret
add
fistl
fsubrl
fs
cmp
cmp
sub
lods
cwtl
xchg
push
jae
cs
xor
cmp
scas
into
js
adc
jb
scas
push
negl
xor
sbb
mov
cmp
xchg
sub
dec
add
pop
clc
and
inc
cli
out
imul
sbb
adc
xchg
push
add
add
dec
jne
sub
cmpb
add
mov
and
lret
hlt
mov
push
add
jecxz
mov
add
inc
sarl
sahf
insb
dec
inc
jmp
loopne
js
push
ret
repnz
or
and
inc
fs
sbb
in
and
xor
or
add
insl
loopne
mov
test
or
addl
adc
xchg
sti
pop
or
pop
fs
dec
push
jnp
xchg
xchg
inc
pop
insl
das
or
or
jbe
push
sti
inc
out
pop
pop
cmpsl
push
add
pop
jmp
cmp
cmc
cltd
test
jge
pusha
sub
xor
outsl
push
aas
sbb
pushf
add
aam
mov
xor
out
pop
decb
leave
inc
ja
mov
shlb
add
or
add
test
and
popf
jp
xchg
fsts
mov
js
xchg
push
outsb
dec
neg
fimuls
mov
pop
xor
rcrl
pop
jle
cmp
js
pop
rorb
sbb
stc
dec
stos
adcl
dec
inc
lods
mov
fldt
dec
das
adc
xchg
leave
cmp
and
sbb
sub
fcomps
and
roll
dec
pop
insb
das
push
mov
test
not
pop
pop
ja
mov
lds
pop
imul
ret
jo
lcall
orb
push
shrb
dec
scas
push
stos
je
mov
mov
insb
int
flds
call
jmp
mov
inc
sub
in
jmp
xchg
push
xor
mov
fdivs
test
mov
vcvtps2dq
push
pop
mov
inc
inc
push
adc
in
sbb
sahf
push
ret
mov
in
pop
add
jp
popa
jmp
pop
popf
sub
cmpsl
or
cmp
xchg
push
or
fptan
push
scas
mov
cmpsl
pop
jp
add
setae
adc
and
bnd
sub
inc
ret
pop
shll
mov
cmpsb
and
add
pop
mov
jne
outsl
inc
push
add
mov
push
push
sub
mov
xor
adc
pop
fcoms
arpl
xchg
bound
jmp
push
ljmp
push
sub
shl
in
xor
clc
bound
insb
jae
scas
and
adc
scas
in
mov
std
adc
adc
jmp
ja
imul
mov
or
pop
andl
shrb
in
dec
sub
js
loop
adc
in
mov
notl
cmp
pop
inc
andl
js
jnp
sbb
loop
pop
je
and
ss
and
and
dec
insb
xchg
cmp
rcrl
sub
jmp
cmp
sub
fldenv
clc
xor
lock
pop
jmp
jmp
jmp
sbb
cvtps2pd
test
icebp
sub
out
cs
out
inc
sti
sarl
data16
sbb
mov
aaa
jl
push
jmp
sub
ret
pushf
pop
xor
pop
push
push
mov
or
sbb
je
pop
dec
jmp
iret
gs
test
mov
sub
in
sbbl
inc
add
and
inc
jmp
inc
push
mov
dec
or
icebp
dec
je
subb
gs
mov
icebp
popf
mov
jge
pop
add
lds
cmp
pop
push
xchg
ret
adc
jmp
loop
adc
mov
xchg
pop
mov
cmc
sahf
cmc
push
jmp
mov
adc
xchg
adc
shr
repnz
or
adc
in
pop
lea
mov
daa
fnstenv
mov
clc
repnz
push
stos
xabort
or
xor
rorl
jl,pt
adc
push
cmc
dec
push
outsl
loop
jle
sub
adc
dec
mov
out
pop
in
pusha
aaa
in
mov
outsb
and
icebp
das
insb
push
mov
mov
sub
cmp
dec
mov
subb
jne
shl
fs
xchg
push
add
mov
clc
mov
out
adc
push
faddl
mov
sub
push
push
stos
test
inc
or
cld
bound
outsb
out
or
push
out
add
dec
pop
dec
jmp
daa
or
sbb
dec
or
pop
add
lret
or
test
jge
test
insl
daa
loop
pushl
sbb
dec
sarb
inc
xor
and
or
or
and
and
jmp
in
ljmp
pop
add
and
dec
sub
push
adc
rclb
xchg
xchg
jbe
add
shl
call
sub
jmp
mov
add
xor
lea
inc
pushf
xchg
pusha
aas
pop
iret
popl
pop
out
testl
mov
sahf
push
nop
rclb
aam
push
gs
pop
mov
cmp
pop
mov
lret
or
or
jbe
lret
add
add
mov
pop
sub
mov
leave
xor
xor
inc
and
daa
dec
add
mov
dec
das
jmp
sbb
push
fldl
inc
jecxz
push
add
out
sub
mov
add
frstor
clc
xor
adcb
mov
pusha
mov
push
loope
hlt
xor
adc
sub
rorb
jl
and
inc
cli
add
cmp
mov
and
push
jmp
arpl
into
loope
dec
jp
mov
pop
xor
cmpsb
sbb
lock
loopne
imul
mov
mov
xor
dec
dec
sti
push
pusha
mov
icebp
icebp
ror
stos
sub
mov
addr16
xor
sbb
mov
pop
loope
xorb
push
push
sub
jmp
dec
push
imul
lret
cs
pop
push
dec
call
xchg
push
push
add
inc
or
or
cmp
in
mov
adc
mov
or
adc
or
bound
pop
pop
call
xor
adc
sub
jmp
jae
mov
rcr
jno
daa
xchg
psubb
cmp
inc
sub
leave
push
hlt
fmuls
mov
cmp
or
pop
add
cltd
mov
pop
pop
cmp
je
in
mov
lds
adc
aaa
push
sti
repnz
jle
sub
adc
mov
sbb
and
addb
jmp
pop
sbb
andb
inc
ja
cmpsb
push
pop
mov
jp
mov
xchg
and
icebp
jo
jmp
sarl
or
mov
cmc
in
hlt
xchg
fiadds
xor
sbb
cmp
out
cmp
mov
icebp
aam
call
ljmp
cmc
movsl
mov
mov
inc
dec
call
pushl
cmp
lds
clc
popa
lcall
pushf
jo
sahf
popf
add
mov
dec
push
notl
sub
pop
jmp
mov
inc
mov
mov
and
fmul
adc
cmpsl
sub
jl
popa
aad
gs
lds
and
scas
subb
jge
and
cmpsl
xchg
mov
out
cmp
jb
mov
mov
bound
push
sbb
data16
or
mov
xlat
adc
in
dec
add
xchg
mov
bound
jp
fcomps
jmp
fnsave
nop
mov
inc
call
sub
js
sbb
test
jmp
pop
xor
and
pop
xchg
sub
xor
les
sbb
rcrl
hlt
and
and
nop
xchg
jnp
dec
jg
fsubrp
scas
enter
push
shl
and
repnz
mov
add
bound
pop
push
jmp
xor
sub
mov
push
push
insb
cmp
daa
push
add
push
popf
push
adc
cmp
int3
add
outsl
inc
inc
mov
jnp
lods
pop
jl
jecxz
add
jo
in
add
cmp
and
adc
enter
xchg
cwtl
pop
jne
mov
jo
popf
fcompl
daa
mov
sbb
mov
push
xor
lret
sbb
mov
enter
dec
fimull
add
bnd
cli
add
pop
scas
lods
gs
addr16
cmpsl
fmulp
leave
imul
add
xor
shlb
sbb
dec
jno
sahf
inc
push
mov
inc
jge
nop
xchg
orl
jmp
inc
aaa
adc
or
sbb
mov
das
xor
jmp
inc
mov
adc
stos
sti
cmp
pop
pop
loop
pop
adc
pop
push
adc
orl
int
cmp
outsl
push
sbb
push
push
mov
notl
adc
mov
adc
dec
fdivrs
out
clc
in
jmp
mov
andl
test
cmp
les
jmp
out
xorb
pop
jecxz
lret
add
cmp
xchg
sbb
push
jo
das
mov
mov
and
call
pop
loopne
and
ds
adc
sub
mov
fisttpll
add
pop
loopne
add
cwtl
cmp
add
cmp
sub
or
pushf
sbbb
mov
pop
mov
add
sub
jne
das
test
cwtl
and
jno
sub
or
mov
and
sbb
cmp
add
testl
mov
inc
sub
subb
jge
adc
cmp
pop
inc
sahf
add
out
inc
mov
jmp
sub
dec
loopne
shll
lahf
cmp
cmp
sbbb
mov
arpl
pop
pop
and
in
and
push
mov
push
sub
or
sbb
and
lahf
inc
imul
inc
sub
scas
mov
mov
nop
add
loope
pushf
in
sub
incl
movsl
shrl
stos
adc
sub
sub
je
sbb
pop
jle
pop
pop
fsubrl
leave
icebp
sbb
ja
repnz
cmpsl
movsb
mov
pop
fsubrl
shll
push
decl
jge
add
clc
jmp
add
push
pop
push
inc
loop
sub
dec
adc
popf
lret
repz
mov
xchg
xchg
xchg
inc
sub
xor
addr16
or
push
outsb
jg
and
cltd
cmc
jno
lcall
mov
cwtl
or
adc
mov
jge
xchg
jo
clc
or
iret
inc
fstps
cmpsl
stc
pusha
inc
pop
scas
loop
scas
in
mov
xor
popf
inc
push
pop
imul
test
add
data16
xchg
sbb
add
scas
adc
xor
jl
dec
pop
in
and
loopne
imul
xor
sbb
sub
les
or
jmp
push
push
sub
imul
cmp
loopne
in
ljmp
push
fnstcw
aad
out
pop
orl
or
xor
mov
into
aas
add
mov
dec
xor
push
xchg
mov
loope
das
call
push
hlt
sti
les
repnz
stos
dec
mov
or
jecxz
push
gs
loopne
xor
jno
loop
mov
pusha
in
xor
fs
push
inc
in
add
add
out
adc
dec
lods
pusha
jg
clc
pop
les
cmp
pop
stos
je
push
xchg
incl
pop
and
pop
or
xorl
lods
jecxz
loopne
imul
dec
inc
mov
popa
or
jae
sub
pusha
push
push
jmp
lret
test
pop
test
push
jecxz
ss
sbb
incb
test
jg
in
adc
icebp
pop
stos
cmpsb
lret
mov
sub
ret
dec
jbe
scas
je
insb
sbb
lea
pop
imul
imul
cld
arpl
cmpsb
repnz
pop
push
movsl
mov
movsb
jecxz
cmp
jmp
add
std
mov
cmp
out
test
inc
outsl
loopne
mov
loopne
jmp
pop
and
popf
cli
pop
jp
lods
dec
push
add
cmp
pop
fisubrl
mov
and
add
jmp
add
das
dec
std
sahf
push
popa
push
pop
xchg
push
push
sub
push
cli
xor
out
lret
mov
inc
push
xor
shlb
mov
add
add
xchg
add
outsl
shrl
push
test
pop
push
lret
rorb
jmp
shrb
enter
pop
test
push
jg
push
int
mov
jle
pusha
dec
cmp
das
add
int3
dec
push
icebp
or
mov
cmp
and
mov
sub
and
fiadds
mov
shrl
pop
xor
inc
cmp
and
cmp
mov
popa
bound
int3
inc
fsubr
movsl
ds
loope
xor
imul
xor
movsb
sbb
mov
call
scas
push
add
mov
sbb
or
lret
fs
sbb
pop
or
fimull
rcl
stos
das
jmp
out
dec
pop
sbb
aad
in
pop
xor
aam
mov
mov
push
inc
xor
jb
orl
in
pop
add
inc
jo
sub
and
popa
pop
jbe
push
cltd
lds
jne
out
ds
xchg
sub
mov
dec
sub
add
popa
xchg
mov
stc
or
pop
call
adc
fadd
push
test
ljmp
icebp
stc
enter
xchg
pop
mov
sbb
pop
dec
add
sub
sub
pop
pop
xor
jbe
in
jecxz
adc
stos
push
mov
lcall
test
jmp
mov
inc
imul
cld
push
jmp
inc
insb
push
outsl
pop
enter
shrl
push
xorb
cli
cmp
dec
mov
add
icebp
inc
sub
mov
and
dec
jp
jbe
repnz
adc
popl
dec
rorb
add
jmp
sbb
push
mov
xchg
inc
inc
andb
scas
push
mov
jnp
xchg
push
jmp
adc
cmp
add
adcl
test
mov
fldenv
jmp
ret
test
loope
mov
mov
adc
mov
add
roll
mov
movsb
jns
call
xor
add
bound
xor
or
lea
and
push
jl
dec
adc
sbb
mov
ljmp
xlat
adc
sbbb
scas
mov
out
jb
pop
adc
outsb
push
push
add
mov
shl
adc
push
rol
inc
and
jp
sub
pop
xchg
nop
dec
loopne
add
aam
xchg
inc
pop
mov
out
daa
pusha
pop
movsl
ret
cld
add
xor
pop
and
xlat
jno
inc
push
or
push
jle
dec
in
push
lahf
decb
pop
adc
and
push
pop
jmp
push
xchg
and
adc
jmp
rcll
jmp
lret
lea
mov
pop
xchg
adc
out
fimull
sub
loope
pop
xchg
jg
pop
sahf
push
popa
jmp
jns
movsl
jne
push
sbb
in
dec
jg
xchg
mov
fcoms
jne
pop
adc
dec
mov
in
icebp
sti
or
test
push
stos
mov
jg
arpl
cmc
add
inc
sbb
mov
idiv
cltd
out
int
xchg
cld
xchg
mov
push
add
push
adc
push
add
inc
adc
push
or
iret
xchg
xchg
rcrl
lahf
jmp
leave
mov
add
or
sahf
xor
imul
mov
js
orl
push
pop
in
adc
mov
adc
sub
jp
std
icebp
les
add
clc
push
sbb
mov
dec
inc
int
pop
cmc
mov
ss
jmp
pop
dec
xchg
pop
mov
pop
sub
push
stc
push
dec
mov
xchg
add
sub
mov
lret
jbe
lret
mov
addb
adc
mov
sbb
xchg
pop
outsb
stos
cmp
push
sbb
inc
xor
dec
mov
adc
pop
sbb
hlt
or
xchg
scas
push
push
call
nop
cs
scas
inc
push
push
mov
jns
daa
pop
jbe
push
push
test
inc
leave
mov
shrb
mov
sub
mov
movsl
arpl
ret
out
pop
mov
cmp
std
dec
mov
jmp
into
adc
aas
push
xor
in
lcall
add
std
adc
and
mov
mov
dec
xor
push
cs
loope
daa
jle
es
cmp
addl
test
jo
pop
pop
in
popf
test
xor
dec
xchg
dec
adc
loop
sub
mov
fstp
add
jmp
mull
aas
movsl
mov
aaa
adc
daa
sti
mov
xor
sbb
pop
jecxz
out
test
add
or
cli
add
xor
outsb
arpl
inc
fcomps
divl
pop
or
out
sub
inc
cmp
lods
sbb
pop
sbb
xchg
cmp
je
ret
and
pop
add
jmp
sarl
shrl
shl
mov
dec
int3
lret
adc
aas
adc
mov
je
or
call
inc
hlt
jmp
mov
pop
jo
add
test
mov
xor
sub
cmp
push
lods
repnz
push
or
out
and
and
pop
push
push
pop
pop
adc
shll
add
ja
or
mov
pop
and
pop
sub
inc
or
inc
inc
pop
cmp
sub
inc
mulb
stc
test
mov
sub
pop
sub
xorl
push
push
add
out
and
sbbb
xchg
shll
out
pop
mov
jmp
mov
jg
shlb
jmp
in
repnz
ljmp
inc
inc
ds
leave
hlt
inc
orl
in
pop
enter
xlat
subb
jne
mov
sub
push
dec
popa
cmc
mov
push
pushf
rorb
mov
shl
dec
or
pusha
fldl
adc
add
mov
stos
insl
ja
mov
add
add
xor
jmp
ja
mov
xor
jmp
sbb
rol
std
rcr
dec
xchg
sub
test
pop
push
outsl
insl
and
je
mov
stos
daa
ret
icebp
pop
cs
leave
or
push
lret
inc
xor
les
cmp
test
out
cmpb
lret
ret
add
popa
mov
pop
loop
ja
or
iret
and
int
hlt
pop
pop
out
movsl
test
push
int3
cli
lods
dec
and
add
xchg
leave
mov
cmp
sub
mov
fbld
xor
add
dec
push
push
ds
sarl
adc
or
add
xchg
lahf
rcrl
adc
jno
add
pop
mov
jmp
mov
je
es
sub
in
cwtl
and
iret
adc
push
mov
shl
cwtl
dec
pop
shr
and
insb
popa
les
or
dec
or
loopne
popf
jne
inc
testl
call
js
movsl
mov
pop
lahf
js
push
aam
cmp
sbb
xorb
jle
mov
sub
fisubl
xchg
pusha
mov
sub
mov
pop
mov
nop
jmp
mov
mov
jge
mov
push
andl
adcl
xchg
push
in
xchg
add
pop
into
pop
in
hlt
hlt
cmp
adc
sub
push
or
push
push
inc
aas
das
or
sbb
or
sub
popf
pop
mov
pop
mov
add
pop
inc
xchg
sub
aaa
inc
add
fcoml
outsl
test
cmp
or
add
push
mov
adc
lods
out
lret
rcll
cmp
adc
dec
cltd
dec
jne
aad
fstpl
adc
js
cmpsb
dec
dec
mov
xchg
fistpl
fsubl
jmp
cld
push
rorl
cmp
scas
hlt
cli
shlb
dec
push
out
in
or
scas
xor
and
in
cltd
icebp
lods
rcrb
sub
mov
add
mov
cwtl
adc
mov
or
mul
fildll
push
and
orl
jmp
jo
loope
popf
jne
pop
add
xchg
mov
jge
lcall
jns
mov
dec
ds
xchg
out
add
mov
popf
test
mov
rorl
int
mov
cmp
shll
add
fisubrs
cs
sbb
fs
lock
pop
gs
imul
mov
push
je
pushf
int3
sub
dec
push
cwtl
loope
jp
and
sahf
jmp
inc
adc
scas
pusha
mov
push
ss
pop
mov
and
pop
push
fldz
addb
jne
jae
adc
adc
add
adc
aam
cmp
dec
xchg
xchg
mov
add
mov
daa
pop
inc
push
add
add
adc
lret
pop
mov
outsl
sarl
gs
push
je
mov
jmp
bound
pop
push
add
shlb
sub
push
add
sbb
stos
nop
pop
and
nop
pop
loopne
xor
add
jecxz
je
mov
sub
pop
mov
dec
xor
xchg
push
or
or
lods
mov
xchg
or
jp
push
inc
dec
ret
adc
pop
add
shr
jmp
fsubr
mov
xchg
xor
jno
mov
nop
or
mov
jo
es
cmpsl
sub
mov
sub
pushl
mov
inc
adc
lods
test
arpl
dec
add
jmp
cltd
lret
scas
xor
xchg
in
ss
sub
clc
inc
outsb
insb
jg
stc
scas
xchg
out
jmp
add
jae
xchg
add
xchg
xor
ret
cmp
mov
add
and
gs
push
js
loop
mov
xor
push
sub
rcr
fcoms
push
push
add
imul
cmp
and
shlb
cmp
shll
icebp
insb
sub
mov
divb
aad
add
arpl
lret
inc
pop
aad
lock
maskmovq
mull
ljmp
neg
xchg
mov
or
pop
push
sub
cmp
scas
das
mov
or
dec
dec
test
add
cmpl
mov
andb
push
mov
push
sti
adc
push
pop
push
test
adcl
mov
dec
in
adc
push
lods
or
adc
fidivrl
dec
push
cmc
inc
popa
cld
stos
mov
popa
push
outsl
scas
cld
test
and
leave
lea
adc
inc
jmp
repz
lock
pop
pushf
mov
imul
or
dec
pop
adc
sbb
aad
ret
ds
ds
cmp
frstor
and
iret
xchg
xchg
fnstsw
into
sub
mov
or
or
jne
das
push
lock
cmp
inc
or
push
mov
add
dec
in
test
in
ja
cmp
lods
scas
xor
stos
mov
xor
mov
push
les
or
adc
mov
jns
pop
push
mov
adc
adc
inc
xchg
not
xor
pop
fstl
push
mov
sub
mov
pusha
xorb
ds
das
jmp
fsub
push
jle
xchg
cli
in
lods
jge
mov
pop
cli
add
add
hlt
lret
rcrl
mov
hlt
cmp
jno
cwtl
pop
jge
sub
push
jg
fimuls
or
int
pop
out
repz
shrl
or
add
pushf
jns
sbb
cmp
push
pusha
sub
sahf
inc
mov
sbb
xchg
lea
pop
sub
cmc
test
clc
outsl
jge
mov
push
out
inc
loope
aas
lret
out
imul
and
flds
mov
sub
jmp
loope
dec
orl
xor
sub
inc
dec
xchg
and
ss
int3
cmp
add
and
cmc
pushf
mov
mov
push
push
sub
or
shlb
push
adcl
jb
in
sub
pop
scas
add
add
xor
lods
mov
pop
test
sbb
pop
or
ret
jne
pop
cld
das
dec
pop
cli
sub
adc
mov
cmp
cmc
and
pop
jb
add
jb
bound
cli
mov
push
push
inc
pop
push
icebp
arpl
mov
daa
cwtl
arpl
push
pop
pop
inc
jg
add
sbbb
fimuls
ljmp
ret
and
mov
cmc
rorb
xorb
jmp
cmp
aam
adc
xor
dec
andb
rolb
sub
ja
popf
data16
sbb
ss
jno
add
aam
push
add
sub
roll
pop
roll
add
lret
enter
pop
pop
mov
lret
popa
popa
push
mov
inc
insb
push
add
lcall
stos
mov
scas
lea
jge
ret
rcrb
adc
pop
sarb
add
dec
xor
push
fcomps
icebp
add
jge
mov
mov
in
sbb
and
dec
lods
adc
pop
add
jmp
add
stos
inc
push
test
lcall
lret
out
mov
cmpsl
cmp
mov
dec
sbb
and
xchg
ret
jno
outsl
movsb
stos
jmp
and
pop
xor
cld
sub
and
mov
imul
cs
xor
cld
sub
xor
shr
cmc
xor
xlat
mov
test
popa
sub
loopne
ja
das
mov
mov
and
int
inc
xor
and
ljmp
mov
mov
lahf
or
stc
jmp
xor
stos
loop
dec
imul
ljmp
mov
xor
aad
popa
das
push
push
inc
push
ret
push
pop
repz
jmp
pop
fs
sbb
das
ja
lea
fildl
adc
stc
push
movsl
call
cmp
jge
mov
adcb
xor
sbb
jg
jmp
xchg
add
push
push
mov
xor
test
adc
pop
inc
daa
dec
je
xacquire
stc
push
cmpb
jp
fbld
or
add
stc
icebp
daa
out
push
and
aam
push
xchg
out
js
stc
adc
push
lods
sti
adc
neg
adcb
repnz
xor
inc
ds
xor
es
push
adc
icebp
cmpsb
nop
xor
mov
adc
into
or
rorl
mov
sbb
sub
add
and
push
popa
xchg
sub
nop
or
inc
loopne
jmp
xchg
mov
jp
sub
iret
inc
add
lods
lret
mov
lock
xor
pop
sub
ja
dec
add
in
dec
jle
dec
sub
test
push
adc
addb
pop
popf
inc
jns
inc
repz
or
stos
shlb
imul
mov
add
leave
mov
jmp
fimuls
shl
icebp
test
in
aam
incb
rcrb
loopne
dec
dec
or
and
addr16
cmp
push
and
add
sub
inc
ret
push
xchg
dec
pop
test
dec
mov
pop
xchg
popa
mov
pop
divb
push
mov
loopne
stc
pop
xorb
inc
dec
xor
or
pop
fists
sub
jo
and
xor
test
pop
fidivrl
mov
mov
lahf
or
and
ret
push
out
cmp
push
inc
lods
cmp
cmp
repnz
cmpsl
cwtl
sub
mov
idiv
cmp
fidivs
pop
mov
movsb
aaa
leave
push
rcrl
and
lahf
je
push
inc
lods
inc
or
jmp
push
inc
or
inc
and
sub
mov
sbb
jmp
sub
fstps
xchg
xor
push
mov
movsb
dec
mov
dec
icebp
test
cwtl
jle
mov
mov
mov
adcb
ret
pop
xor
add
mov
and
sbb
pop
add
into
popf
jns
outsl
mov
jg
mov
dec
add
inc
dec
sahf
shld
ret
jg
in
andb
sub
loop
xchg
movsb
or
iret
rolb
push
xor
xlat
in
lock
mov
push
mov
lods
sub
setp
sbb
outsl
les
adc
notb
mov
pop
mov
pop
jmp
repz
pcmpgtd
jmp
loope
or
lahf
imul
dec
mov
outsb
and
or
stc
adc
push
mov
cmc
test
out
add
mov
and
sbb
rorl
sbb
icebp
cmpsl
ja
xchg
sub
cmp
add
pushl
mov
mov
cs
subb
sub
add
mov
cmp
mov
dec
jmp
add
mov
adc
sub
add
add
ljmp
adc
push
mov
adc
fiaddl
gs
rolb
adc
pop
sti
pop
mov
test
out
stc
fcomi
fiadds
mov
dec
xor
cmpsb
xchg
enter
dec
fildll
xchg
hlt
sub
sbb
sub
scas
sbb
cmp
repnz
loopne
inc
mov
dec
jge
adc
mov
jg
push
in
cld
xchg
mov
fidivrl
lret
sbb
or
pusha
mov
cli
or
xor
test
jmp
sbb
ret
push
jge
add
imul
imul
dec
aad
filds
test
je
inc
les
mov
mov
jns
or
sbb
and
sbb
in
int3
inc
cmc
cmp
pop
lret
int
imul
rclb
fcmovb
inc
mov
pop
sbb
aaa
mov
sub
test
fists
stos
adc
push
sahf
pop
add
cmc
add
adc
cmp
push
stos
jno
jno
int
inc
je
push
std
add
scas
mov
jmp
fwait
sub
jp
enter
dec
push
jae
push
sbb
push
xor
add
push
pop
rorb
sub
sub
clc
add
nop
mov
cmp
dec
pop
cmc
sbb
adc
mov
call
push
xor
shrb
dec
lret
push
fmuls
adc
nop
pop
push
xchg
sub
jmp
push
push
push
mov
test
xor
movsl
xlat
imul
or
adc
sub
xchg
lds
add
mov
ret
jle
inc
pop
stc
push
adc
leave
add
and
nop
arpl
push
std
sbb
lods
mov
push
dec
sbb
adc
pop
add
jmp
pop
jne
push
dec
iret
pop
push
and
shlb
jmp
cmp
leave
les
mov
hlt
or
ds
outsl
cmp
cli
arpl
pop
das
lods
pop
inc
mov
adc
mov
dec
or
jl
xchg
or
imul
adc
jb
push
xor
loopne
sbbl
mov
push
movsl
jg
cmp
cmpsb
adc
adc
out
stos
inc
daa
or
add
sbb
adc
add
sub
imul
mov
push
push
inc
push
or
in
sbb
cmp
nop
sub
es
pop
inc
fisubrs
aas
jl
and
aas
or
jnp
negb
repz
cmpsl
loope
sbbb
mov
inc
fldl
adc
inc
cmp
inc
test
mov
fldl
jno
push
push
std
ja
sub
ljmp
mov
adc
bound
jne
lea
ds
sbb
lods
mov
inc
and
inc
pop
mov
lock
stos
sbb
or
and
cmp
insb
inc
or
rcrb
xor
jmp
insb
fiadds
gs
call
xchg
insl
nop
jge
jmp
pusha
ror
shr
cmp
and
mov
outsl
inc
shr
sbb
dec
mov
cld
pop
push
out
rcrl
push
lahf
jbe
and
adc
pop
mov
mov
xor
mov
out
push
ficompl
sti
data16
inc
imul
icebp
mov
rcr
lcall
sub
adc
xchg
pop
int3
js
sub
pushl
icebp
jle
sbbb
js
cmp
mov
lods
popf
adc
insb
lcall
loope
jmp
popa
mov
jl
dec
sti
sub
loopne
push
aas
pop
jmp
shll
dec
sub
sub
and
gs
mov
das
push
std
xor
addr16
dec
loop
or
outsl
add
add
push
test
aam
sarl
lock
out
lret
adc
addl
popa
movsb
aam
xor
pop
test
stos
add
repnz
xchg
push
mov
nop
mov
dec
push
add
cvtpi2ps
fadds
push
jmp
push
and
lcall
push
and
rclb
aad
xchg
mov
adc
xchg
shrl
push
jnp
les
adc
pop
xor
xor
add
or
psubsw
fs
or
sbb
xchg
stos
sub
lock
xor
dec
xchg
cmp
aad
rcll
sbb
jle
idivl
out
sub
push
mov
pop
sub
and
rclb
mov
popa
mov
inc
scas
add
roll
sub
jns
inc
xor
dec
lahf
daa
adc
xor
xor
je
lods
jae
or
mov
roll
ret
add
adc
lods
xchg
jg
in
pop
add
cwtl
inc
mov
dec
shlb
lret
jl
pop
je
arpl
sub
enter
sbb
cli
or
roll
add
shll
std
pop
add
jmp
and
pop
add
sbb
aam
inc
mov
daa
pop
repnz
and
leave
loopne
or
xor
pop
push
pusha
push
iret
jo
mov
dec
mov
mov
aaa
repz
out
push
sbb
jno
pop
xchg
fstps
filds
or
xor
add
jmp
addb
dec
loope
add
insb
xchg
and
js
adc
clc
xchg
out
out
xlat
insb
jnp
jbe
xchg
inc
or
lret
xor
push
sbb
or
adc
fidivrl
xor
bound
sbb
cld
cmp
neg
daa
inc
mov
lock
jl
jae
faddl
pop
daa
add
add
or
ret
add
cmp
jo
jns
and
adc
lret
jbe
iret
inc
jnp
mov
mov
sub
dec
std
out
xchg
cltd
addl
cmp
cs
push
hlt
daa
orb
popf
dec
das
pop
push
jnp
jae
aam
xchg
imul
out
sub
pop
inc
cmpsl
mov
push
and
jnp
sub
add
sub
out
pop
jmp
push
pop
sub
pop
or
andb
cmc
dec
mov
adc
sub
push
pop
out
insl
sti
cmp
js
movsl
dec
sbb
out
std
jmp
int3
lret
jge
daa
pop
sbb
std
lret
mov
push
jg
orl
pop
fildl
out
jge
mov
in
adcl
sub
inc
mov
push
push
cmp
mov
into
xchg
pop
cli
add
in
inc
push
sbb
loopne
stc
or
inc
ds
out
imul
pop
dec
pusha
cmp
mov
push
sbb
int3
dec
ljmp
sbb
dec
sbb
cmp
cmp
mov
iret
jb
shrl
insl
xchg
push
test
jg
sub
xor
cld
inc
popa
adc
loop
bound
ret
js
mov
orb
push
mov
cmpsl
out
jl
cmpsl
push
jmp
mov
and
pop
cmpsb
mov
push
mov
push
cmpsl
push
dec
jmp
push
adc
mov
mov
adc
mov
sub
inc
hlt
add
std
add
ds
sub
es
jge
sbb
jb
shlb
test
cli
inc
mov
sub
ja
pusha
adc
mov
in
pop
fwait
pop
mov
std
pop
pop
add
push
repnz
sbb
jp
mov
mov
pop
lods
lods
jbe
outsb
add
test
add
mov
fdivrs
dec
add
cmp
pop
inc
in
test
mov
ret
cmpsl
icebp
aad
cmc
adcl
stc
jns
outsl
nop
jne
sub
daa
pushf
dec
push
add
cmc
iret
mov
stos
mov
mov
xor
xchg
push
clc
and
mov
jge
jbe
hlt
or
cwtl
in
and
hlt
adc
adc
pop
incb
sub
lret
pusha
inc
sub
jmp
out
mov
mov
sub
sbb
incb
sbbb
scas
cld
lahf
imul
pop
lcall
xor
pop
idiv
ret
or
pop
and
mov
jg
gs
push
adc
pop
push
mov
out
inc
or
mov
jbe
fwait
das
cld
push
jne
cmp
cld
or
int
jnp
call
ljmp
inc
push
xor
adc
push
cmp
jmp
out
adc
jne
push
and
js
dec
popf
stc
xor
stc
dec
push
ds
dec
sarl
cmp
push
and
fcmovnu
daa
std
pushf
nop
adc
out
call
dec
jmp
mov
fcmovbe
cli
pop
mov
sbb
or
scas
adc
add
jmp
dec
test
add
dec
pop
and
test
add
jmp
sub
xchg
cs
mov
fimuls
inc
or
and
pop
jmp
das
xor
pusha
repz
xor
ss
adc
or
fdiv
clc
mov
loop
and
sub
dec
fs
shl
add
clc
prefetch
rcrb
or
jl
or
jge
dec
test
xchg
or
loop
add
stos
and
andb
rcrb
das
iret
popa
mov
sbbl
das
add
or
xor
adc
sarl
add
pop
adc
popa
mov
xor
lods
cltd
pop
push
jmp
add
sub
push
sub
push
call
mov
xchg
mov
imul
xchg
ret
pop
sub
mov
daa
ret
cmc
xchg
adc
pushf
mov
adc
stc
das
pop
out
pop
xor
add
sarb
orl
or
dec
es
addr16
sbb
out
icebp
mov
cmp
adc
and
pop
outsb
leave
pop
imul
pop
sub
jecxz
mov
xor
testb
push
push
outsl
enter
or
inc
jmp
or
sti
push
push
int
xor
jmp
lret
xchg
adc
jmp
sub
es
shll
jmp
rcl
dec
push
cmp
push
mov
int3
xchg
xlat
rorb
mov
sub
or
enter
shll
out
cmpb
movsb
aas
jge
sub
mov
mov
test
add
xchg
push
pop
cs
push
sbb
jmp
shl
mov
mov
push
shl
aas
add
jl
push
xor
loop
test
cmc
jo
push
mov
or
cltd
roll
xor
arpl
dec
dec
cli
xor
insb
fildll
es
and
les
insb
lock
mov
jmp
enter
inc
test
jne
dec
jbe
adc
enter
xchg
push
xchg
fs
mov
stc
adc
cmp
loop
mov
add
mov
rorb
incl
mov
aas
ljmp
inc
pop
sub
jne
lods
jmp
cli
fisttps
lock
adc
push
push
lods
push
push
push
fnstenv
add
jmp
inc
push
push
and
inc
enterw
jns
subb
xchg
psubsw
shrl
cmp
fidivrl
sub
fcmovne
fcoml
inc
pop
cmp
int3
fidivrl
mov
push
xchg
and
shlb
or
das
mov
sub
dec
pop
push
sbb
sub
inc
inc
push
push
mov
into
adc
cmp
call
lock
mov
pop
ret
mov
xchg
loop
or
cmc
pushf
jno
notl
into
mov
mov
pusha
push
xlat
ja
pop
mov
pop
jmp
fadd
into
sub
and
mov
ud0
test
cld
aaa
sbb
dec
mov
or
push
xchg
xrelease
sub
push
sub
xor
pop
mov
jle
adc
xchg
es
stc
outsl
or
jbe
orb
xor
or
and
cld
dec
or
jb
dec
pop
xchg
in
neg
xchg
out
inc
inc
hlt
sub
pop
in
imul
js
push
das
xor
push
pop
push
fsubr
dec
pop
mov
imul
or
push
pop
jmp
scas
add
or
inc
push
es
and
mov
frstor
jmp
iret
in
out
sub
es
mov
mov
dec
cmp
and
sub
gs
lods
sarl
cmpsl
xchg
dec
push
cli
sub
sbb
imul
cmp
gs
ljmp
adc
outsb
aas
push
jns
pusha
pop
push
push
jmp
push
call
clc
add
mov
jae
sti
xchg
sbb
or
adc
lea
mov
add
jge
pop
cmp
add
inc
loopne
lahf
adc
mov
movsl
push
add
xor
and
jp
pusha
xor
xchg
push
mov
rorl
push
xchg
fiadds
mov
int
imul
push
pop
pop
xchg
arpl
mov
dec
xor
or
adc
pop
not
jmp
popf
movsb
xchg
into
test
push
jne
test
adc
sub
icebp
mov
mov
pop
or
push
jno
jnp
and
and
arpl
loopne
scas
jns
cmp
jl
or
rcrl
aam
movsb
or
mov
je
addb
nop
rorb
inc
sub
ja
scas
xor
add
lock
ret
rcll
pop
adc
and
outsb
inc
push
add
pop
jo
rolb
sub
and
or
lcall
test
jle
jns
jnp
pop
sbb
inc
mov
or
inc
aas
and
mov
push
pop
cli
int
adc
clc
add
xor
jne
das
xor
push
std
daa
sti
jecxz
push
cmpsb
cmp
add
sub
jno
ret
daa
sbb
ds
pop
das
imul
in
pop
xor
les
jmp
mov
dec
pop
and
sbb
jne
outsb
mov
adc
mov
sub
lds
xchg
add
jmp
xor
pop
add
jnp
sbbb
inc
push
push
cld
ljmp
dec
sbb
lds
es
loop
push
andl
out
rcrb
pop
cmpsl
push
push
int3
loopne
and
sub
pop
pop
and
mov
push
orb
jmp
cmpl
or
inc
into
int3
out
daa
jecxz
pushl
lahf
test
jae
lods
fdivs
repz
pop
jno
pop
pop
bound
or
pop
je
and
js
sub
mov
pop
add
sub
pop
mov
ret
lahf
add
xlat
sbb
dec
mov
xchg
cld
lcall
add
sbb
addr16
add
mov
adc
mov
pop
pop
jbe
sbb
adc
inc
sub
inc
call
dec
lret
cmp
pop
pop
lods
repnz
iret
mov
dec
roll
or
jne
pop
clc
dec
test
push
into
or
sub
or
xchg
std
mov
add
aad
adc
pop
sti
adc
in
int
into
push
dec
or
mov
mov
outsb
in
and
imul
jge
xlat
shlb
push
aad
pop
xor
push
clc
cmc
inc
pop
pop
dec
pop
cmpsl
mov
and
jg
movl
pop
std
dec
mov
mov
push
in
dec
sub
pop
xchg
js
mov
push
or
adcb
xchg
sub
dec
pop
mov
call
jle
fiadds
inc
inc
fildl
push
mov
enter
and
jmp
jg
pop
xor
test
jle
insb
arpl
in
adcb
adc
call
and
or
out
pop
jmp
shr
pop
movsl
ret
dec
fcmove
jp
sbb
jle
ljmp
push
cli
add
jp
sti
arpl
int
das
out
cmp
xchg
lock
mov
sub
mov
notl
dec
inc
adc
test
sbb
dec
int
add
xchg
stc
add
pop
cli
popa
cld
gs
add
cmc
xor
or
xor
dec
cwtl
sub
test
push
shr
mov
mov
nop
fstl
popa
inc
lahf
push
pop
in
int
popa
repz
push
sub
smsw
xchg
jb
add
fnstcw
ret
xor
dec
adc
sbb
ret
xchg
push
lods
xchg
adc
sub
push
aaa
jmp
sbb
mov
mov
shl
push
adc
daa
pop
sub
je
dec
pushl
mov
loope
pop
cwtl
pop
sbb
jb
cmp
rol
dec
dec
icebp
fdiv
aad
pop
test
add
jl
jmp
xor
xorb
pop
push
pop
dec
sahf
pop
push
pop
les
cld
and
push
push
cmp
fcoml
movsl
outsb
outsl
addb
add
out
adc
es
jae
jmp
xor
adcl
xchg
pop
fs
pusha
test
not
cwtl
jo
lret
aam
xor
out
and
xchg
pop
stc
inc
jmp
ret
out
rolb
push
mov
inc
or
fs
repnz
shr
add
cs
xchg
je
cmc
fcompl
push
add
xor
jbe
rcl
dec
fistps
loope
call
shlb
and
inc
fwait
pop
imul
xchg
loop
mov
mov
lret
ss
jmp
mov
std
jmp
mov
mov
adc
in
xchg
fnstenv
leave
and
dec
ret
aas
dec
pop
loope
add
mov
lret
inc
xchg
xor
pop
ret
sub
xor
inc
or
not
lahf
push
aam
inc
xor
sbb
and
cwtl
sbb
nop
rorl
fucomip
push
ficomps
push
fisubl
out
push
cmp
lods
jmp
mov
imul
push
stc
or
ljmp
ja
push
pop
add
cmp
outsl
cs
jmp
mov
or
sti
and
in
cwtl
lahf
ss
rclb
and
fs
adc
fsts
hlt
fisubrl
adc
sti
pop
cmpsl
rcll
stos
cmp
cs
jo
jmp
sbb
jp
xor
mov
and
inc
mov
pop
rcrl
push
xchg
clc
sarw
subl
xchg
pop
or
mov
test
rolb
pop
call
pop
jbe
or
push
mov
push
rcll
push
sbb
mov
xchg
les
icebp
sbb
mov
ds
addb
sub
sub
cmp
mov
pop
icebp
add
fmuls
push
jmp
xlat
push
xor
stos
ret
arpl
mov
dec
scas
or
int
arpl
jo
xor
ret
push
xchg
sbb
stos
push
xchg
adc
push
or
cmp
outsl
push
sub
mov
xor
xchg
cli
push
xchg
jl
and
inc
test
cmp
add
sub
leave
lods
mov
xchg
adc
sbb
daa
dec
out
xchg
cli
xchg
push
into
movhps
mov
dec
pusha
mov
shrb
loop
jns
dec
pop
adc
incl
repz
mov
shll
bound
add
xor
add
dec
stos
push
sti
lods
movsl
cmpsb
mov
push
push
ret
cmpb
stc
sub
ss
mov
out
jmp
daa
stos
int3
sub
mov
popa
fmull
aaa
je
mov
out
jmp
movl
jle
leave
cmp
add
jle
addr16
ja
cmpsl
or
inc
addr16
pop
mov
jg
aad
hlt
pop
xor
shl
imul
jmp
dec
jge
jl
and
mov
inc
adc
dec
jbe
mov
add
and
cmp
or
mov
adc
aad
lahf
les
cwtl
movsb
mov
addr16
push
call
xor
es
dec
icebp
scas
dec
cmp
test
mov
das
test
cmpl
enter
inc
sbb
xchg
inc
and
add
xor
jnp
mov
add
movsb
int3
and
jg
scas
or
xor
icebp
imul
cmp
aas
xor
xchg
add
pusha
lods
cs
add
cmpsl
pushw
push
sbb
lret
leave
or
pop
inc
mov
pop
out
jp
dec
pop
lock
or
sbb
push
or
inc
pop
leave
aad
xor
and
push
dec
push
mov
push
adc
nop
fists
adc
pop
mov
inc
out
loopne
mov
mov
cmp
cli
xor
xchg
aad
or
xor
pop
in
mov
sub
cmpl
mov
sahf
inc
pop
jmp
das
sbb
pop
cmpsb
lret
aaa
es
rorb
sbb
mov
inc
fisubrs
jecxz
xchg
lret
xor
cld
or
push
sub
jg
fsubl
xor
push
adc
push
sub
push
mov
mov
push
mov
into
and
subb
pop
or
decl
mov
xchg
test
or
mov
dec
loop
stc
add
clc
xor
mov
stc
adc
push
nop
ds
xor
cmp
pop
add
dec
or
push
clc
pop
lahf
test
and
inc
jbe
int
enter
push
pop
aad
push
cld
popf
dec
pop
jns
aaa
mov
push
push
rcrb
in
sarl
cld
jmp
pop
imulb
xor
pop
inc
pusha
jle
rcrl
or
ret
pop
jmp
lcall
daa
mov
inc
push
sub
cmpsl
jne
pushf
mov
out
cmp
push
pop
or
bound
ffreep
add
pop
lock
xchg
jle
push
pop
nop
loope
or
lcall
test
jle
rorb
arpl
sub
lahf
fistpl
push
scas
xor
popa
ds
ja
cmp
push
jmp
add
fiaddl
mov
fiaddl
outsb
mov
xchg
jecxz
or
dec
inc
or
push
xor
add
sub
pop
push
adc
int3
jmp
jae
dec
push
lods
xchg
sbb
pop
aam
iret
dec
out
adc
ljmp
or
jns
sub
pop
test
shl
out
mov
dec
adc
out
mov
sbb
pop
int
divl
or
hlt
dec
outsb
or
sub
mov
cmp
dec
std
cld
lods
push
aam
sub
sbb
mov
je
imul
popa
add
sub
jmp
das
mov
pop
repz
icebp
mov
cmp
or
mull
xchg
in
outsl
gs
rcrb
inc
adc
push
add
mov
dec
hlt
stc
or
push
fsubl
clc
outsl
fadds
into
pop
jne
push
mov
addl
andl
lret
and
mov
lods
mov
orl
pop
push
fucomip
and
fists
sbb
jmp
mov
or
repz
nop
or
dec
or
jo
cld
adc
or
push
pop
sbb
in
xchg
pmaxub
mov
pop
stc
scas
sbb
pop
add
pop
inc
add
or
iret
out
xchg
mov
and
jmp
adc
fstps
insl
mov
push
stc
std
pop
fwait
xor
adc
sarb
push
or
add
xchg
adc
rorl
inc
xchg
sbb
out
orb
mov
dec
popf
pop
mov
jecxz
jno
jge
mov
add
or
and
addr16
xchg
ds
cmp
xor
mov
sahf
or
aas
pop
iret
shlb
imul
out
sbb
rolb
test
decb
out
inc
outsb
jo
add
fists
dec
xor
mov
ja
or
nopl
jmp
idivb
dec
mov
les
jp
pop
pop
add
mov
add
xor
sbb
xchg
stos
and
xor
shl
or
sbb
dec
addb
or
sti
xchg
jge
mov
adc
not
int3
testb
or
orb
fisttpll
or
jmp
add
pop
sbb
dec
mull
mov
and
and
sarb
pop
mov
push
push
or
adc
pop
push
push
mov
sub
ja
stc
or
xor
cmp
jmp
jb
daa
mov
adc
and
pop
or
test
pop
lds
mov
pop
sarl
nop
sub
in
dec
xchg
cwtl
iret
dec
lcall
push
add
stos
adc
cwtl
add
out
xchg
sahf
adc
xchg
dec
repz
mov
adc
sbb
rcrb
in
add
pop
pop
aas
mov
fwait
not
or
pop
inc
push
mov
cwtl
insl
add
loop
or
sub
push
loop
add
shrl
push
xchg
pop
loopne
pop
inc
add
bound
addb
aam
add
jmp
jecxz
dec
jbe
jb
xchg
in
cmpsl
lock
pop
mov
std
sbb
pop
push
or
sub
sub
dec
xchg
icebp
xchg
pusha
push
mov
xchg
insb
sbb
add
or
icebp
aam
add
and
jle
rorb
or
imul
mov
push
mov
stc
in
mov
inc
into
cwtl
adc
sarl
pop
orb
pop
mov
pop
sub
push
or
mov
sarb
pop
cmp
and
sub
push
icebp
xor
int
adc
pop
sub
divb
daa
mov
int3
mov
xchg
or
xor
push
push
pop
mov
mov
push
cmp
dec
add
sub
sub
imulb
fmul
add
cli
jmp
out
push
sub
sub
jmp
jnp
pop
jge
cmp
xor
pop
push
les
loopne
clc
rol
push
cmpsl
add
cmp
mov
push
jmp
stos
adcb
push
add
enter
jmp
and
cs
sub
sbbl
or
jns
and
cmp
pop
push
xchg
mov
pop
leave
adc
aaa
cmp
jecxz
rcll
shll
jmp
pop
or
inc
or
and
into
adc
add
sbb
pop
jo
es
dec
out
movsl
dec
sub
inc
cltd
mov
pop
lock
push
add
rorb
not
xlat
orb
mov
jp
inc
jecxz
dec
shlb
and
or
fs
sub
repz
das
fcoms
fists
sub
or
out
and
pop
inc
cmp
xchg
push
push
movsb
scas
adc
mov
test
int
in
cld
and
cmp
shr
clts
pop
push
mov
ret
jb
xchg
or
add
push
lea
or
pusha
stos
mov
pop
jns
mov
sub
fldenv
push
js
dec
or
mov
js
es
addr16
cmp
test
dec
jmp
test
fnsave
cld
mov
jge
pop
popa
mov
sbb
mov
sbb
sbb
sub
nop
pusha
pop
adc
jno
test
je
clc
xchg
leave
pop
hlt
mov
cmpsb
or
xchg
in
sub
and
add
scas
cmp
cli
pop
jge
or
daa
add
aam
popf
lock
pop
repnz
test
inc
arpl
lds
jmp
fiaddl
ficompl
push
mov
mov
mov
and
fdivs
loope
xchg
ss
sub
sti
dec
dec
mov
pop
adc
cmc
stc
push
push
jg
adc
sti
clc
pop
dec
inc
push
or
stos
sbbb
outsb
scas
outsl
jmp
orb
dec
add
pop
add
pop
test
sbb
push
scas
adc
mov
testb
push
mov
shrl
stos
push
inc
mov
aam
shl
js
jmp
pop
and
adcl
dec
pop
lods
dec
push
aam
insl
jnp
push
ret
jnp
ljmp
ljmp
pop
pop
inc
rol
mull
dec
push
adc
mov
xchg
ljmp
push
testl
sbb
das
fidivl
ret
and
lds
adcb
and
inc
mov
pop
shrb
dec
pop
add
push
add
pop
pop
es
push
add
jle
test
imul
gs
and
or
add
test
pop
ret
into
andl
rolb
icebp
adc
xchg
aad
jecxz
xchg
ds
hlt
and
mov
out
imul
mov
stos
std
cmp
push
inc
stos
mov
dec
nop
shll
jmp
mov
add
dec
mov
shll
div
rcll
data16
adc
jge
cmp
jl
lret
sub
inc
add
cmp
sysenter
in
jo
bswap
push
mov
scas
jo
int
stc
xchg
into
push
cmp
cli
mov
loop
mov
pop
sub
loop
lods
dec
test
xor
jmp
ja
ret
dec
mov
and
mov
mov
sbb
push
pop
add
not
adc
sub
shl
std
daa
and
add
push
sub
enter
adc
pop
push
add
pushf
and
jle
sub
mov
xor
xlat
popa
fmuls
dec
fwait
xchg
movsl
test
dec
scas
jge
or
xor
in
cmp
push
push
inc
in
mov
dec
or
xchg
adcb
adc
add
fsubrs
sarl
dec
inc
add
xor
mov
xor
push
call
cli
aad
fildl
adc
pop
jno
test
inc
stos
sub
mov
jle
xchg
insb
out
xor
and
iret
sbb
mov
gs
sub
jmp
testl
or
dec
test
movsb
cld
mov
int
push
les
les
loope
adc
sbb
and
xchg
add
movsl
inc
sub
call
mov
and
pop
add
xor
mov
mov
pop
push
add
pop
mov
jmp
push
test
lahf
xor
shl
and
inc
es
rcrl
push
in
add
movb
push
sub
add
add
jl
sub
out
sbb
sbb
movsb
push
repnz
jmp
jge
jle
sub
bound
mov
mov
lcall
xor
shrl
sbb
sub
fucomip
mov
jg
test
ds
or
pop
mov
std
and
sub
fiaddl
ret
pop
popa
shrl
icebp
and
cs
and
jg
bound
loope
add
loop
scas
xchg
add
mov
cli
int
pop
test
xor
pop
das
mov
addl
jo
xchg
jnp
add
stos
dec
xor
pop
push
xchg
push
adc
cmp
into
loopne
mov
jmp
nop
jmp
sub
xor
pop
jmp
dec
fistpll
testb
add
xor
mov
cmc
jmp
mov
in
push
jmp
movsb
in
inc
gs
inc
add
xor
pop
in
xor
sub
shlb
mov
inc
pop
pop
cmp
pop
out
les
fisubs
test
jbe
lds
mov
ficompl
movl
pop
jmp
imul
ret
fisubl
jno
rorb
xchg
movsl
pop
push
mov
nop
lock
daa
pop
clc
cmp
fildll
adc
or
jge
cli
or
add
out
pop
add
stc
dec
jmp
ds
adc
addr16
fsubl
movsb
icebp
add
or
jle
inc
and
icebp
cmp
sti
jl
adc
xchg
jge
scas
stc
stos
popa
inc
daa
sub
xor
pop
and
repz
or
jp
cmp
fs
and
stos
and
sub
fs
mov
aad
fcomps
add
dec
adc
xchg
std
je
or
out
add
push
jle
cmpb
jb
pop
in
stc
adc
sub
xchg
push
or
rclb
push
or
mov
popa
into
add
jbe
add
jbe
jg
jmp
cmovs
xor
cmp
push
cmp
sub
in
ret
or
mov
pop
add
mov
add
dec
sar
jns
inc
orl
cs
sti
in
outsb
inc
out
mov
dec
pop
pop
or
stos
sub
arpl
inc
test
mov
pop
sub
mov
dec
daa
daa
sarl
jnp
sub
cmp
jp
push
pop
cli
and
or
fmul
repnz
bound
mov
adc
xor
push
pop
lock
inc
xor
adc
and
outsb
test
ljmp
or
jl
loop
add
pop
jmp
xchg
test
daa
xor
and
dec
xor
pop
sbb
shr
or
push
push
sub
sub
rcr
lahf
pop
jecxz
jmp
fdivs
pop
sbb
push
mov
sub
lcall
imul
pop
sub
push
jmp
pop
adc
jae
pop
pop
gs
pop
fistpl
lock
jle
xchg
addr16
lods
xor
xchg
negl
and
sub
ss
out
lock
imul
inc
repnz
sub
and
push
jle
sbb
or
gs
aas
add
and
push
sub
incl
adc
jmp
std
in
jecxz
add
sahf
dec
pop
jmp
divb
mov
inc
orl
sub
xor
jg
call
mov
mov
filds
shl
in
addr16
or
rorl
sub
lret
adc
fmuls
or
push
jno
shlb
out
pop
mov
push
push
scas
push
decl
lea
push
xor
mov
xlat
daa
push
and
pop
jg
lods
pop
dec
mov
sub
jmp
in
or
pop
add
xor
fsubl
pop
aad
clc
add
add
into
add
jns
fs
loope
sbb
jmp
loopne
stc
adc
out
jmp
es
push
jecxz
lret
daa
flds
mov
push
inc
leave
pop
push
push
pop
xchg
adc
sarl
sub
fsubp
jnp
push
inc
das
sti
push
cmpsl
cltd
or
outsl
push
sbb
add
movsl
add
push
jg
sub
sub
mov
cmp
pop
or
adc
aad
outsb
sarb
push
jmp
lods
sub
fsubrs
sbb
push
mov
inc
shl
pop
loope
xchg
pop
xorb
fwait
ds
cmp
movsb
sbb
lock
inc
mov
jno
inc
xchg
push
jl
in
xchg
or
dec
add
lods
cmp
or
or
fistps
fsts
orb
sahf
sbb
pop
sub
mov
cmp
pop
push
xlat
addl
jg
mov
add
pop
movsb
or
add
add
adcb
sbb
adc
xchg
and
rorb
pop
xor
jmp
pop
div
or
adc
cmp
js
xchg
adc
xchg
movsl
push
aam
movsl
cmpsl
jne
inc
loope
es
add
icebp
fmull
inc
mov
imul
sbb
jle
or
and
sub
jg
pop
mov
call
pusha
sbb
inc
push
dec
pop
shl
inc
add
ds
mov
cmp
cmp
cld
sub
xchg
xchg
jb
and
cmpsl
daa
sub
xor
iret
fldcw
ljmp
idivl
ret
fidivl
pusha
addr16
subb
push
neg
xchg
push
jmp
xchg
xlat
mov
scas
mov
sub
push
icebp
cld
cli
pushf
dec
ret
add
rorb
pop
cmp
test
adcl
mov
cld
dec
das
cwtl
cs
and
roll
add
xchg
and
cmp
imul
cli
popf
scas
or
das
sub
not
xor
lods
mov
pushf
pusha
sarb
das
push
cmc
push
inc
sub
icebp
push
mov
dec
push
loope
insl
popf
ds
inc
mov
out
dec
das
add
jmp
sahf
movsb
lret
mov
mov
xor
sbb
cmp
jnp
lea
pop
ret
inc
or
lea
mov
mov
push
or
int3
lret
and
aaa
shr
pop
add
outsb
outsl
add
daa
xchg
push
idiv
jg
push
or
sbb
divl
std
orb
pop
cli
add
addb
mov
ja
jbe
leave
sub
je
or
push
jno
jmp
push
push
sbb
cmp
mov
cs
sub
pop
nop
mov
mov
lds
cmp
push
lahf
or
push
sbb
xlat
addr16
or
or
addb
imul
loop
cmp
repnz
pusha
add
inc
mov
cmp
outsl
lahf
push
shlb
pop
pusha
shl
idivb
dec
stos
sbb
in
cli
pop
mov
rcrl
push
cmc
test
sbb
shll
xchg
loop
inc
or
pop
stos
sbb
mov
cmp
and
out
mov
lods
xor
movsl
xchg
push
mov
sub
adc
dec
lods
inc
mov
cmp
jge
outsb
aam
das
fists
adc
sbb
cmp
repz
add
jmp
mov
sbb
or
cmp
fcoms
or
stos
pop
or
xor
outsb
xor
ret
or
push
jl
jo
rcrl
add
xor
dec
sbb
scas
call
aas
test
add
mov
aad
xor
and
lahf
xchg
xor
and
enter
sahf
leave
inc
dec
and
pop
fdivr
les
inc
loopne
pop
mov
das
scas
add
lret
add
adc
out
daa
jmp
fiaddl
jl
std
enter
iret
ret
lds
bound
jge
sub
push
test
popf
adc
sbb
fisubs
das
scas
pusha
dec
mov
inc
shr
adc
pop
sbb
mov
jne
cmpsb
nop
lock
push
or
pop
aas
xorb
mov
sub
das
dec
or
shlb
shrl
lock
xor
pusha
sbb
sub
ret
mov
jmp
cld
sbb
int
dec
arpl
jmp
push
mov
jno
xchg
adc
out
xorb
inc
pop
cmpb
std
das
bound
dec
sbb
mov
push
sbbl
xor
or
outsl
fistps
and
adc
mov
xor
pop
jne
ret
or
jl
loope
lret
cmc
aaa
jnp
mov
daa
scas
push
mov
hlt
popa
jge
lods
push
daa
sub
in
mov
daa
pop
ljmp
sub
pop
mov
push
daa
mov
ja
jno
xor
xchg
shlb
inc
ds
add
mov
mov
adc
jg
mov
add
mov
push
mov
pop
test
xor
push
xlat
and
or
inc
das
mov
inc
inc
sbb
mov
ror
cmp
mov
push
mov
lock
jnp
adc
scas
xor
pop
mov
shl
xor
repnz
mov
iret
pusha
inc
and
leave
neg
aas
shl
das
pop
notl
xor
push
xlat
nop
pop
adc
and
pop
sub
add
call
mov
xchg
mov
icebp
das
push
mov
pushl
inc
clc
mov
in
flds
sub
pop
das
ja
andb
inc
cwtl
push
gs
daa
and
shrd
adc
xlat
out
mov
pop
xchg
aad
or
mov
mov
dec
mov
das
jno
or
push
pop
or
jmp
dec
sbbb
cmp
or
add
push
sbb
lcall
lahf
pop
hlt
shr
lods
mov
mov
mov
dec
out
mov
cmc
sub
and
imul
sti
arpl
lods
cld
ficomps
inc
mov
cmp
imul
pop
pop
stos
and
cmp
outsb
and
inc
inc
sbb
loop
jne
cmpsl
clc
pop
in
addr16
mov
push
sbbb
jp
sahf
pusha
push
mov
sbb
or
dec
pop
sbb
es
push
stos
fchs
sbb
jmp
add
add
inc
gs
and
cmp
adc
pop
and
jmp
shr
lahf
adc
mov
lret
jb
pop
sub
mov
and
add
inc
mov
and
and
mov
ljmp
loop
push
into
or
das
pop
inc
sub
cwtl
cli
cli
xor
add
and
into
fimuls
mov
int3
test
push
push
int3
sub
push
push
testl
pop
jmp
push
jge
adc
fadds
je
scas
mov
rorl
xchg
repz
dec
mov
rcrb
push
insb
pop
jle
rcll
idiv
jnp
rorl
outsb
sub
xchg
daa
mov
aad
into
insb
out
repz
pushf
outsl
add
cmp
jge
mov
shr
and
mov
push
inc
hlt
mov
daa
outsb
cmp
das
mov
or
cmpb
outsl
das
outsb
popa
adc
push
jnp
xlat
push
xchg
push
cmc
fistl
or
ja
sbb
hlt
fucomp
dec
cld
xor
call
dec
mov
mov
fistps
jns
mov
inc
or
xchg
aam
and
cmpsb
or
leave
arpl
and
add
pop
mov
imul
shrl
ret
push
loopne
fldcw
jl
adc
ljmp
in
and
popa
dec
inc
dec
sub
in
or
jmp
or
repnz
shll
test
xlat
dec
dec
aaa
sub
movsl
jnp
adc
sbb
mov
nop
mov
cld
outsb
bound
dec
scas
mov
xor
mov
stc
add
or
loope
jne
dec
rolb
shrb
sbb
daa
pop
roll
inc
add
sbb
andl
mov
std
or
fwait
gs
icebp
or
sub
std
mov
jo
outsb
inc
dec
jg
pop
sub
pop
and
inc
mov
and
xor
jb
ja
sbb
or
jae
inc
dec
adc
push
cmc
sarb
jno
and
adc
cli
mov
in
dec
adc
std
push
les
mov
mov
or
push
inc
adc
scas
add
out
outsb
ja
dec
in
xor
dec
fildll
je
lret
adc
push
jp
notb
fistpl
sbb
stos
sbb
fldenv
cmp
mov
sub
push
orb
rcl
xor
push
ja
add
fisttpll
xor
daa
jge
xchg
ljmp
inc
jns,pt
neg
cmc
push
push
xor
jle
mov
add
shl
leave
adc
add
shl
jge
push
mov
pop
in
push
push
inc
add
xor
into
fldenv
mov
or
pop
mov
inc
in
mov
xor
mov
scas
and
adc
xor
and
pop
jmp
fs
sbb
dec
add
add
push
cld
pop
pop
inc
pop
push
add
jns
adc
cmp
pop
add
xorb
pop
xor
insl
pop
inc
rclb
mov
mov
adc
shrl
mov
sub
and
xchg
inc
lods
pop
movsl
pop
push
je
cmp
pushf
dec
inc
lods
inc
call
dec
jge
xor
pop
addr16
add
aam
subl
adc
test
test
mov
pushf
and
inc
ret
lcall
mov
push
and
mov
test
mov
and
dec
add
dec
fsubl
pop
xor
push
xchg
pop
push
mov
movsl
outsb
jno
jg
imulb
push
jmp
jb
xor
pop
push
mov
adc
dec
sahf
add
or
ljmp
cmp
pslld
lods
scas
pusha
push
fdivrs
pop
mov
jae
fcmovbe
push
pop
inc
fbstp
shl
pop
clc
xor
xor
cmp
in
or
lods
jno
xor
push
push
or
pop
push
mov
call
aas
sbb
mov
cmp
int3
add
icebp
pop
pop
add
jmp
maxps
push
adc
fildll
mov
xchg
jno
jp
cs
les
jo
push
add
imul
shlb
or
sub
icebp
jge
push
jmp
or
fiaddl
mov
inc
jmp
dec
sub
icebp
push
jge
push
xor
add
cmp
cmp
or
stos
add
add
and
jmp
andl
inc
mov
fnstsw
xchg
fstps
mov
xor
push
in
pushf
lret
ds
pop
enter
das
enter
popf
rcll
mov
xchg
in
gs
adc
mov
sub
in
dec
add
add
add
xlat
add
pop
mov
div
and
add
jg
sub
and
pop
add
add
cli
nop
mov
out
mov
jmp
xchg
cmpsl
rcl
sti
push
popa
or
pop
std
call
cmc
xchg
negb
push
mov
jle
sub
pop
popa
xchg
ret
mov
xchg
pushf
lret
push
push
add
daa
loop
pusha
jno
pop
add
ret
dec
loope
imul
inc
and
pusha
jne
and
idivl
popa
or
shl
pop
not
fildll
dec
push
mov
sbb
stc
cmp
jnp
repnz
push
repnz
or
adc
push
cmp
push
dec
push
or
mov
mov
insl
push
rcrb
or
push
xchg
mov
test
push
pusha
sub
adc
xchg
pop
shl
sbb
lock
cmp
in
sbb
pop
loopne
xchg
mov
push
push
mov
mov
test
dec
cmp
cmp
cmp
icebp
cmp
repnz
or
call
and
add
xor
or
adc
orl
call
les
push
pop
cmp
sub
imulb
push
out
movsb
cltd
or
add
repnz
cmp
sbb
cld
inc
jbe
and
push
xchg
es
inc
stc
in
sti
pop
add
hlt
addr16
in
mov
rolb
js
inc
and
sti
orl
in
in
sbb
mov
lds
or
dec
dec
jl
or
pop
sub
jo
popf
jle
imul
repnz
cwtl
fisttpl
cld
mov
sub
xor
push
add
jnp
fidivrl
mov
ficompl
scas
mov
cmp
push
mov
cmpb
push
jmp
sbb
adc
push
clc
push
pop
pop
data16
push
or
dec
inc
cmp
jmp
nop
push
sub
cld
cmp
sbb
cs
push
mov
pushf
cmc
pop
xchg
lcallw
je
jns
or
inc
shl
inc
sti
les
push
pop
ss
hlt
stos
nop
sub
jo
add
neg
or
in
aas
sbb
iret
iret
adc
movsl
cmpb
jo
daa
jmp
mov
popa
mov
inc
inc
adc
roll
sbb
out
add
je
repz
das
test
pop
mov
outsl
neg
mov
xchg
jge
and
push
aaa
jb
dec
inc
push
rclb
sbb
pop
pusha
rcll
add
cs
xor
xchg
and
push
add
add
lret
test
add
repz
sub
lods
iret
adc
push
pop
push
shlb
inc
xchg
push
cltd
xchg
ror
orb
repnz
jp
test
sbb
lea
cmpsl
jnp
adcl
ret
lds
add
repz
jbe
sahf
xor
call
push
pop
push
js
fstps
dec
lods
mov
insl
or
pop
inc
pop
cli
cld
add
repnz
ret
cmpsb
pop
mov
out
repnz
fwait
pop
mov
decl
xlat
repnz
mov
stos
aam
add
data16
out
add
push
mov
enter
cmp
inc
mov
scas
xor
ds
insb
fcompl
andb
cmpsl
push
sbb
mov
adc
sbb
dec
push
incl
cmp
in
rcrb
inc
xor
add
mov
sar
test
loopne
pop
mov
ret
jo
icebp
jb
inc
lods
aas
mov
fistpll
notl
jae
frstor
les
xchg
mov
add
pop
mov
cmp
jmp
es
ficoms
cmpsl
prefetch
stos
out
lea
add
xchg
adcl
jnp
adc
ds
inc
in
sub
xchg
inc
mov
repnz
mov
std
imul
xchg
push
mov
or
repz
test
push
push
in
inc
dec
dec
pop
xor
sbb
mov
mov
xchg
add
push
or
rcrl
mov
sub
cmp
in
cmp
shlb
jp
idivb
dec
pop
scas
cs
fs
pop
sti
cwtl
mov
sarb
cs
cltd
add
mov
adc
lds
stos
mov
mov
cmp
andl
testb
repnz
and
xchg
icebp
mov
xor
sub
or
sbb
mov
push
subl
adc
xchg
xchg
mov
popf
ret
lcall
sub
sbbb
push
mov
out
inc
inc
jo
int
or
inc
mov
daa
pusha
push
push
mov
sub
ffreep
jbe
fs
jge
shl
xchg
push
or
sub
dec
movsb
sti
shlb
push
push
movl
daa
sbb
pop
dec
ret
aam
movsl
jbe
push
add
or
sub
or
out
clc
lea
fsubs
pop
cld
pop
jmp
sahf
push
loope
add
jae
scas
and
les
mov
push
pop
sarl
jne
jmp
push
popf
fcompl
neg
push
adc
cmp
sbb
dec
lahf
repz
stc
xchg
sbb
xchg
fsub
push
and
add
and
cmp
lahf
dec
adc
fdivrl
cmp
inc
das
std
pop
push
xlat
sub
out
gs
shl
or
push
loopne
std
lret
adc
jl
push
clc
mov
jecxz
frstor
pop
xor
xor
inc
mov
add
pop
adc
xor
jo
or
out
clc
jmp
arpl
subb
or
xchg
scas
sub
jmp
out
insb
pop
adc
add
lahf
cwtl
adc
and
and
jmp
cmp
push
mov
shl
mov
push
mov
lods
pop
cmpb
sub
jg
insb
popa
int
sub
mov
adc
into
cli
jo
pop
mov
and
imul
cli
icebp
sub
call
add
cmp
and
pop
pop
out
pop
rcl
push
outsl
sbb
lods
adc
push
pop
or
out
shr
ss
mov
mov
push
loop
or
pop
stos
hlt
jge
cld
lahf
jns
ret
jmp
push
add
mov
lret
sbb
in
cmc
adc
insl
push
push
pop
nop
out
jle
sub
add
jle
sahf
push
pop
clc
pop
and
push
ret
jmp
or
movsb
loope
cmp
mov
das
mov
out
xor
sub
shlb
das
jmp
rcrb
inc
cwtl
push
dec
out
test
xchg
dec
test
pop
stos
sub
mov
les
inc
sub
mov
xor
repnz
xchg
movb
mov
mov
sub
cli
inc
idivb
pop
pop
mov
push
mov
iret
cmp
pop
pop
push
rorl
out
xor
sub
pop
out
iret
adc
idivl
mov
daa
fdivs
cli
lret
subl
pop
hlt
fmull
add
mov
adc
dec
or
mov
je
pop
or
insb
popl
dec
repnz
popf
out
and
out
dec
es
jp
xchg
mov
xchg
and
mov
fwait
jo
popf
jge
jmp
adc
mov
dec
mov
jle
test
js
or
add
daa
repnz
pop
xor
push
icebp
and
or
push
push
add
insb
adc
add
dec
sub
jo
add
scas
sahf
popf
icebp
or
mov
or
shll
push
pop
movsb
daa
push
bound
add
das
add
jcxz
add
add
push
push
mov
xor
outsl
dec
or
in
adc
or
aam
pop
xchg
nop
lods
popf
jl
das
pop
sub
fiaddl
pop
sub
xchg
aad
jmp
push
cwtl
xchg
repz
lds
push
hlt
cli
pusha
loope
out
mov
jae
mov
add
xadd
or
add
fadds
add
inc
or
lret
mov
adc
dec
inc
or
popf
jbe
inc
sbb
sbb
mov
hlt
cli
popa
push
or
sub
jmp
test
filds
or
daa
dec
in
cmc
repnz
push
lods
stos
inc
aaa
pop
mov
jne
mov
outsb
ds
icebp
mov
popl
push
inc
adc
pop
mov
and
sub
jnp
push
mov
scas
mov
ret
push
jb
roll
and
mov
or
inc
mov
adc
roll
sbb
loope
jmp
out
pop
xor
pop
repz
cs
mov
push
dec
add
fsubrl
out
stos
or
adc
neg
mov
rolb
rorl
cmp
ficoml
roll
adc
mov
dec
ja
test
scas
aam
pop
clc
inc
arpl
insb
cld
daa
xor
add
lret
es
and
or
sbb
popf
je
lods
sub
jmp
dec
push
pop
mov
orps
inc
fsts
lahf
and
neg
inc
mov
mov
loop
inc
loopne
popf
hlt
pop
cmpsl
jbe
jp
gs
jmp
sub
push
leave
test
dec
mov
sub
xor
imul
sbb
cmp
loope
cmp
dec
or
dec
loop
movsb
scas
test
ret
pop
movb
add
push
push
push
mov
xlat
sub
sbb
jb
lods
popf
adc
frstor
out
jp,pn
add
imul
bound
cmovs
lods
push
loop
scas
cmpsl
test
jne
push
add
jmp
out
lret
mov
adc
push
pop
pop
cld
ljmp
push
dec
movsl
or
lahf
xor
pop
add
jns
push
pop
test
and
stos
cld
test
mov
push
pop
push
scas
mov
dec
popa
inc
sbb
and
daa
and
or
dec
and
inc
mov
push
add
cs
add
sub
loope
pop
outsl
lret
loop
jge
dec
dec
push
jmp
add
adc
mov
xchg
add
lahf
pop
mov
add
stos
sub
mov
imul
jb
mov
shrb
stc
sub
cli
imull
sbb
das
idivb
pop
jne
stos
sub
push
cmpsb
cmp
xor
push
les
mov
cld
aaa
mov
repnz
sbb
push
ret
bound
ljmp
mov
xor
push
outsl
out
or
test
dec
cmp
push
shll
pop
jg
iret
push
insl
jle
add
xchg
jmp
lds
xor
js
mov
inc
roll
xor
repnz
dec
xor
or
sub
xchg
xchg
sub
adc
fldl
dec
xor
cmc
out
sbbb
outsb
loop
lret
mov
or
das
push
or
xor
pop
xor
flds
not
rolb
stos
jl
jo
mov
data16
add
jmp
icebp
add
xor
add
loopne
xlat
push
add
test
in
dec
fcoml
dec
pushf
bound
inc
jl
or
inc
cmp
push
dec
mov
mov
icebp
sbb
aaa
mov
out
popa
xor
repnz
jge
dec
push
or
xor
jp
add
stc
aaa
in
lahf
adc
lock
or
mov
rorl
pop
fisttpl
pop
scas
mov
xchg
push
aam
jg
std
xlat
lret
addr16
fsubrl
out
jge
movsl
sbb
stos
fs
sub
jmp
mov
inc
das
push
inc
leave
andb
jle
and
pop
ljmp
jbe
dec
pop
shll
fstps
nop
and
jmp
pushf
scas
fdivl
pusha
xor
inc
shr
and
mov
out
shr
xor
xchg
fmull
or
aam
add
dec
adc
cmpsl
pusha
in
insl
and
mov
lahf
pop
cmc
orl
sbb
inc
fldcw
dec
mov
adc
test
aad
dec
mov
push
rcr
call
add
clc
adc
mov
sar
mov
shrb
mov
mov
xchg
push
fs
xorl
xor
loop
lret
adc
test
inc
push
popf
push
int
rclb
add
jno
xchg
push
jae
or
jnp
push
cmp
and
es
sbb
add
scas
les
test
lock
incl
enter
shlb
and
and
fneni(8087
and
add
dec
ds
addr16
es
cmp
decl
dec
sbb
jne
outsb
adc
das
cmp
sti
xor
xor
add
or
sbb
repz
pop
test
sbb
mov
and
aam
pop
or
icebp
aaa
addb
cmp
add
xor
or
adc
sub
push
xor
mov
lret
shl
push
shlb
push
add
and
xor
sbbb
sub
mov
stc
pop
sub
jl
fsts
pop
movsl
out
pop
push
sti
cwtl
ds
pop
into
in
cwtl
lock
push
lock
outsl
mov
inc
lret
mov
or
mov
pop
jbe
fdivr
das
add
add
sub
or
xchg
shlb
outsl
cmpsl
add
fsub
lret
ret
fbstp
or
push
dec
jne
xchg
cld
or
sub
rorb
push
test
jmp
je
pop
ret
push
daa
scas
repz
push
icebp
shrl
push
inc
sbb
push
iret
aam
xchg
and
imull
mov
mov
out
ret
cmc
push
pushf
push
add
cmp
stos
fdivrp
dec
call
add
sub
ret
ja
jnp
push
stos
add
and
mov
imul
sahf
loope
out
mov
push
in
imul
mov
shlb
pop
popa
push
popf
out
leave
and
sbb
xchg
dec
sti
cs
divb
pop
mov
aam
movsl
or
adc
sti
jge
mov
lds
es
repnz
xchg
xchg
shrl
out
cmp
or
jecxz
int
loopne
push
dec
pusha
mov
jmp
jp
adcb
dec
clc
xor
aas
mov
xor
in
jnp
cmp
jecxz
adc
xchg
cmc
movsb
pusha
pop
stos
movsl
movsl
in
jo
mov
dec
push
mov
adc
loop
cwtl
lea
adc
push
dec
inc
adc
pop
dec
cwtl
scas
jmp
aaa
cli
sbb
out
mov
jns
mov
sbb
mov
jl
cmpsb
xor
jmp
fcomps
pusha
in
push
imulb
adc
clc
jle
sbb
leave
hlt
pop
cmp
movsb
fsubs
pop
fsubrs
push
push
push
pop
mov
dec
rorl
sbb
orl
push
ret
pop
adc
stos
leave
mov
ljmp
pop
jmp
cli
gs
pop
add
sbb
add
fmull
xchg
push
and
mov
fidivrl
jnp
pop
addl
adc
jne
add
jo
clc
or
push
dec
jl
add
sub
clc
lret
add
sti
cli
xchg
adc
sub
and
mov
pop
push
pop
xchg
out
enter
sbbl
sbb
bt
sti
lahf
outsl
dec
add
pop
fdivrs
jbe
pop
inc
xor
lock
inc
xrelease
and
inc
int
dec
pop
or
xchg
enter
bnd
mov
and
daa
cld
sub
adc
inc
mov
jae
and
adc
inc
jl
xchg
lock
pop
jb
adc
jmp
inc
inc
and
or
neg
std
xor
movb
mov
or
int
xor
enter
js
mov
icebp
sub
aaa
push
dec
push
into
das
push
adc
daa
rcrb
or
notb
or
xor
mov
adc
mov
clc
mov
loope
movsb
mov
jno
enter
daa
push
outsb
lea
lret
push
xchg
dec
sbb
mov
push
test
mov
in
cmp
enter
testb
and
sub
lret
mov
push
add
mov
xchg
and
jl
lret
jmp
mov
imul
mov
mov
call
pop
or
pop
not
add
mov
sti
adc
mov
mov
iret
popa
popf
sub
mov
jecxz
or
jbe
or
int3
pusha
ljmp
ds
aaa
adc
mov
mov
mov
rcll
daa
cli
push
fcmovnb
push
and
pop
divl
repz
int3
outsb
adc
les
push
mov
dec
scas
sub
push
mov
mov
shlb
stc
lret
sar
daa
jmp
cmpsw
mov
fsubrs
xchg
jno
daa
ja
pop
add
add
dec
neg
jmp
sub
ljmp
iret
call
aas
fldt
notb
pop
jmp
adc
mov
inc
fldt
movb
sti
les
push
sti
or
push
push
mov
ffreep
adc
ljmp
or
push
and
ja
rcrb
adc
stos
mov
inc
lret
lods
mov
cwtl
scas
push
mov
cmp
icebp
xchg
daa
addb
adc
jb
stc
test
push
sbb
insl
adc
xor
loopne
enter
imul
sbb
pusha
in
lds
mov
and
js
pop
xchg
or
xchg
xchg
std
push
or
mov
out
lods
adc
ja
pop
mov
lcall
pop
push
je
inc
enter
xchg
dec
call
fmull
pusha
ja
mov
mov
push
push
icebp
pop
fisubs
or
popf
aad
adc
sub
sub
daa
and
push
or
sti
in
lea
sbb
into
aas
push
sbb
ljmp
pusha
and
and
loop
add
jmp
mov
dec
pop
fsubr
cltd
sbb
pop
adcb
push
mov
movsl
dec
ds
outsb
add
sub
int3
adc
inc
leave
and
popa
and
aad
jecxz
lret
add
xor
mov
std
dec
fstpl
push
mov
mov
pop
scas
xor
dec
mov
sub
jns
inc
jge
dec
fldcw
bound
mov
aaa
jnp
adc
push
mov
add
mov
push
sbb
addb
and
int
or
or
or
mov
std
jnp
push
pop
or
or
or
or
adc
and
inc
pop
push
cwtl
add
add
add
inc
and
test
test
push
loope
add
push
fcomi
and
xchg
add
mov
jns
add
push
push
clc
cltd
adc
cmpsb
jmp
mov
xor
dec
inc
test
xor
add
add
sbb
jmp
and
push
data16
scas
shr
or
lock
mov
push
or
sbbl
mov
adc
jl
into
add
add
push
sbb
inc
mov
dec
rorb
jns
mov
jno
movsb
subl
inc
subb
int3
mov
cltd
ret
and
cmpsb
and
inc
cmp
inc
lock
add
roll
push
push
xchg
inc
fsubrl
dec
add
sahf
or
or
or
rclb
rol
cli
xchg
mov
add
add
lock
mov
cmpsl
test
add
addb
je
sub
les
xlat
aas
or
mov
mov
adc
lahf
xor
sub
or
pop
fcomps
adc
push
xlat
mov
js
or
jbe
push
sbb
mov
std
dec
fwait
inc
adc
inc
sub
les
jl
pop
fwait
add
or
xchg
fnsave
mov
mov
data16
sub
xchg
or
js
add
or
mov
lock
rcrb
int3
imul
pop
pop
mov
mov
mov
push
jb
in
xchg
test
fstl
jp
inc
jp
xor
xchg
ljmp
add
out
jo
iret
push
fists
cmp
test
mov
lock
push
pop
and
jmp
jmp
sub
imul
xor
ljmp
out
jle
clc
or
orb
push
xchg
pop
mov
xor
mov
dec
ret
sub
pop
lea
mov
imul
sub
bound
int
xor
mov
orl
push
sbb
xchg
mov
jnp
mov
or
push
pop
mov
xchg
test
incb
fucomp
mov
add
loope
in
mov
loope
movb
clc
ret
push
pop
sub
jno
xlat
jnp
xchg
xchg
dec
repnz
loope
scas
adc
add
mov
push
jg
jb
jmp
mov
lods
xchg
sub
cli
fmul
cmp
push
add
test
mov
scas
xchg
add
pop
sub
sub
stc
leave
sub
and
xor
fisubs
ds
add
pop
bound
icebp
dec
aas
jnp
dec
das
hlt
leave
xor
or
adc
push
addr16
xchg
jmp
icebp
and
mov
sub
cs
push
jmp
movsb
and
xchg
add
xchg
mov
mov
jp
jle
push
rcrb
pop
repz
or
sub
sbb
xor
or
inc
push
jge
xor
stos
push
mov
fwait
cmpb
mov
push
adc
stos
out
jnp
movsl
or
pop
ret
cmp
dec
mov
mov
jge
jbe
ss
jp
lds
out
adc
sub
adc
push
pop
push
mov
test
test
mov
cmp
stos
sbb
sub
dec
dec
push
dec
jns
push
dec
inc
xlat
add
push
pop
bound
fsubrs
hlt
cmpsl
pusha
push
mov
push
das
mov
cld
aam
sub
add
jge
and
pop
popl
push
pop
adc
mov
dec
movswl
jmp
or
mov
and
scas
pushf
xchg
out
sbb
dec
pop
adc
cli
and
sbb
cmc
or
loopne
inc
mov
push
orb
cmp
lock
sub
inc
cmpsl
pop
pop
fldl
ds
imul
in
repnz
or
loope
add
clc
nop
lds
aam
push
pop
sbbb
push
mov
outsb
loop
push
in
push
jbe
add
push
jl
push
mov
sbbl
out
push
inc
or
jmp
or
out
add
faddl
rolb
jmp
fdiv
push
sar
and
cmp
xor
mov
and
mov
lea
jmp
dec
mov
mov
mov
scas
jne
clc
lods
push
fs
push
add
jle
cs
push
ret
and
pop
lcall
dec
je
and
loopne
dec
loope
push
outsl
test
loop
test
pop
inc
xchg
daa
xorb
push
pop
call
xor
or
rorl
jmp
cmp
lods
mov
pop
mov
daa
jb
orl
pop
cmp
mov
iret
jns
push
outsl
mov
cmpb
add
cmp
daa
dec
mov
mov
add
stc
mov
stc
adc
adc
lods
jmp
cld
jg
and
add
push
and
or
movsl
and
fcoml
outsl
add
popa
dec
cmp
daa
arpl
inc
add
pusha
xlat
cmp
jp
dec
add
push
shl
push
jge
add
xor
and
inc
movsl
mov
imul
dec
in
mov
outsl
or
mov
mov
cli
rcll
pop
data16
push
dec
mov
clc
lods
stc
mov
enter
inc
rcrb
push
aas
sub
addr16
mov
xchg
or
cmp
or
adc
pop
mov
mov
pop
pop
jbe
test
inc
and
cli
sub
pop
test
inc
pop
push
sbb
js
sub
out
or
cmp
push
push
pop
or
push
and
out
je
xor
ret
add
cmpsl
or
cmpsb
es
pop
gs
sub
push
xchg
popl
ret
adc
add
add
push
pusha
pop
lret
or
loopne
add
mov
xchg
pop
pop
push
ret
jg
add
pop
mov
sub
dec
lock
jo
push
popf
jae
or
lcall
cmp
pop
in
ret
push
sbb
dec
adc
andb
push
xchg
dec
mov
add
mov
xor
fimull
pushf
adc
sbb
int
sub
xor
call
inc
add
push
xor
cmp
jmp
ljmp
daa
pop
xor
out
push
lea
sub
cmp
add
or
repnz
sbb
rep
in
sub
ja
insb
addr16
sbb
sahf
push
popa
add
cli
inc
xor
inc
icebp
mov
push
push
jne
fcoml
incb
xchg
shll
lock
lcall
lret
pop
push
pop
jl
inc
imul
subb
mov
in
dec
inc
push
sub
mov
leave
adc
sub
sahf
inc
push
add
mov
or
adcb
call
ljmp
jl
jno
sub
jb
pop
adc
cs
les
xor
push
divb
test
mov
sub
add
cwtl
or
mov
push
sti
cmp
mov
or
mov
jno
push
mov
sbb
push
sub
add
dec
lods
mov
sbb
outsl
jmp
pop
popf
xlat
mov
mov
pop
add
outsl
decb
ja
rol
adc
rcll
or
mov
dec
imulb
push
sahf
or
movsb
leave
or
jmp
jnp
cli
dec
pop
and
pop
scas
xchg
hlt
mov
imul
cmp
mov
pop
jb
push
pop
and
mov
push
jmp
cli
sub
jnp
xor
test
popf
cmc
test
lahf
repz
cmp
dec
or
and
not
mov
lret
mov
mov
jb
fsubs
fidivs
sub
loope
inc
add
push
pop
and
mov
xor
dec
push
push
xor
neg
aad
cltd
cmc
in
jmp
xor
fsubl
mov
lea
ret
lock
cwtl
adc
jmp
jae
sbb
shlb
or
pop
adc
icebp
pop
add
or
and
lahf
push
in
sub
xchg
ss
xlat
pop
cmp
jle
jmp
push
in
loope
sub
mulb
add
gs
ret
dec
fs
or
sbb
filds
mov
jne
inc
andb
pusha
rcll
pop
xor
test
and
cmp
loopne
xor
push
mov
iret
jle
pop
sub
sub
xor
pusha
call
das
mov
fs
nop
xor
mov
bound
inc
dec
cmp
mov
or
jo
jmp
fidivl
int3
mov
rolb
mov
xchg
iret
pop
xchg
jmp
ret
cld
aas
in
shrl
dec
jp
mov
pusha
clc
jl
ljmp
push
int3
pop
sbb
sbb
jae
push
or
xchg
sub
test
or
mov
das
xor
pop
mov
mov
sub
imul
repz
arpl
or
mov
inc
sub
in
sub
fbld
push
jne
jecxz
and
icebp
xchg
pop
std
jl
stos
lret
and
mov
lds
xor
inc
ret
and
or
imul
pop
pushf
jmp
xchg
das
sub
mov
jle
inc
mov
daa
xor
pop
aad
shrl
push
add
sub
or
ret
push
lret
xchg
out
xor
mov
shl
xchg
pop
mov
xchg
gs
out
test
mov
or
adc
scas
fisubs
mov
mov
xorb
pop
jnp
sub
or
or
mov
nop
xor
jo
mov
sbb
mov
popf
fbld
cmp
pop
dec
fs
cmp
test
icebp
or
into
jbe
push
into
xor
sub
jmp
nop
add
cmp
and
fiadds
popf
testb
cmp
push
inc
push
or
jnp
mov
dec
push
or
mov
gs
hlt
push
test
mov
gs
jge
aam
mov
add
sub
loop
pop
pop
push
pop
add
dec
out
mov
pop
push
xor
pop
imul
mov
cmp
mov
push
mov
sub
repz
clc
mov
mov
ret
mov
and
jmp
pop
ljmp
lock
fsubrp
es
daa
sub
ficoml
ret
or
pop
mov
int3
stos
push
iret
imul
mov
pop
lds
xor
pop
test
adc
add
repnz
inc
adc
adc
imul
fwait
pop
in
data16
mov
sub
xor
leave
not
and
jecxz
or
jle
repnz
out
pop
or
mov
push
gs
or
jecxz
and
daa
hlt
inc
inc
add
lret
inc
dec
fwait
cs
fdivrs
or
cld
xor
push
ljmp
adc
add
mov
adc
or
mov
dec
repz
push
testb
or
bound
mov
or
sti
push
adc
push
or
mov
xchg
adcl
je
mov
xchg
movq
pusha
pop
xchg
dec
imul
insb
orl
sbb
add
decb
pop
and
pop
inc
ret
into
sub
push
push
or
dec
cs
popa
xchg
cwtl
adc
mov
push
ss
mov
pusha
out
push
jns
bound
cld
sub
pop
or
repz
out
pop
jp
xchg
pop
xor
rcrl
aam
lret
arpl
dec
pop
loope
xor
fstps
push
sarb
jmp
mov
mov
out
gs
out
sub
cmpsb
xchg
cmc
or
out
fucomi
cli
shrb
cld
push
mov
xorl
outsl
std
lret
movsb
sbbl
cmpl
ja
shlb
adc
sbb
rcr
pop
rsqrtps
mov
stc
lock
pop
xchg
das
bound
rcrl
sub
scas
inc
ror
sti
add
jmp
mov
mov
stos
movsb
rorw
insl
push
jle
jl
pop
pop
and
pop
push
push
out
out
fnstsw
inc
mov
sbb
add
or
clc
add
dec
xchg
mov
cwtl
bound
pop
lret
jmp
and
mov
xchg
jns
mov
xor
pop
xor
push
decb
pop
leave
and
je
das
push
ljmp
and
pop
inc
inc
outsb
clc
out
xor
ret
test
mov
mov
inc
imul
sbb
xor
rcl
sub
dec
mov
fisttpll
push
add
lods
imul
dec
stos
or
mov
push
and
cli
in
mov
mov
testl
or
popf
xorb
iret
push
idiv
inc
mov
jnp
inc
imul
leave
repz
add
jl
lcall
jae
add
js
pop
mov
dec
jbe
or
mov
inc
push
push
sub
add
push
jmp
xchg
pop
scas
cmpsl
or
and
cmpl
test
outsl
clc
mov
test
lcall
inc
jb
pop
mov
sarb
mov
pusha
push
or
adc
xchg
adc
popa
test
pusha
icebp
rcll
cwtl
jle
or
jmp
jne
inc
iret
jmp
jmp
pop
mov
movl
shrl
jmp
insb
sub
add
jle
jne
adc
dec
insb
test
sub
lock
mov
sbb
shr
nop
dec
xchg
add
add
sub
fcoms
clc
xor
movsb
dec
dec
clc
push
les
sub
pop
sub
mov
loop
idiv
mov
lods
cmp
pop
xor
pop
xchg
nop
sub
out
clc
js
or
cmp
mov
dec
rdtsc
std
jmp
dec
xchg
add
jl
inc
mov
daa
push
and
pop
stos
mov
add
pop
pop
and
stc
das
or
push
adcb
and
int3
negb
in
jns
je
sub
leave
cmpsb
inc
sarl
ret
rclb
mov
mov
jns
dec
sbb
add
out
xchg
pushf
pop
xchg
pop
mov
les
pop
nop
and
sub
or
xchg
dec
or
inc
xor
jp
pop
jmp
decl
movsl
pop
pusha
push
push
cmp
jo
jbe
mov
lock
mov
fwait
popf
add
xchg
dec
xorl
xor
stos
fcompl
mov
sub
add
pop
mov
sub
enter
dec
sub
add
push
aaa
dec
mov
mov
fistps
aad
daa
icebp
xor
mov
xor
inc
out
test
cltd
scas
popa
jno
pop
xor
push
std
pop
in
inc
inc
sub
jbe
incb
ret
dec
mov
jmp
loop
push
mov
fsubr
es
aam
data16
lods
test
jmp
jmp
jcxz
rcr
push
xor
adc
mov
pop
add
cld
div
mov
les
mov
jp
mov
mov
jo
pushf
fisubrl
stos
add
mov
xor
mov
rcrb
mull
jmp
test
or
push
mov
or
jo
aam
push
stos
sub
sbb
add
jmp
stos
inc
bound
cwtl
xchg
pop
sahf
int3
or
jnp
fnsave
lret
or
icebp
jmp
fsubl
arpl
scas
ror
imul
decl
adc
pop
xor
or
stos
popf
adc
add
sbb
jmp
ja
or
xchg
push
leave
pop
pop
pop
add
sub
fwait
shll
cltd
daa
cmp
dec
pop
jmp
dec
je
lret
pop
aad
pusha
dec
ja
fldenv
loop
xchg
mov
inc
xor
test
jg
push
or
pop
dec
pop
push
xor
pop
mov
mov
push
repz
pop
rcrb
int3
les
enter
sub
into
add
dec
andb
into
dec
mov
sub
push
fiaddl
pop
dec
mov
out
mov
fildl
shll
inc
sub
cmc
cmp
stc
sub
jno
add
jo
push
pop
push
nop
xchg
sub
pop
out
mov
xor
inc
push
dec
and
and
jmp
clc
jmp
push
sub
das
stos
mov
pusha
push
cwtl
push
inc
cli
sub
outsl
lock
jmp
xchg
push
repnz
mov
out
adc
xchg
andb
inc
notl
push
js
cli
test
add
sbbl
mov
add
dec
xor
jmp
ds
pop
or
xlat
inc
push
dec
sbb
dec
push
stos
lret
add
pop
mov
mov
add
xor
or
movsl
mov
and
ret
inc
and
cmp
pop
or
push
sbb
and
mov
mov
jg
xlat
jmp
mov
inc
int3
jno
int
or
shrb
and
sub
sbb
dec
das
push
adc
roll
jl
xor
adc
clc
pop
sub
jge
or
in
pushf
neg
push
add
xor
leave
jmp
repnz
sarb
xchg
jmp
mov
fsubrs
pop
jno
ja
dec
push
inc
sbb
sub
mov
inc
add
lret
xchg
add
insl
mov
dec
jbe
or
sbb
pop
insl
outsl
movsl
push
adc
jp
int3
lods
into
or
or
or
pop
or
mov
cmc
icebp
aas
ds
mov
cmp
sbb
xchg
or
mov
adc
sub
push
rcr
sub
sub
test
mov
jecxz
movsl
push
jmp
lcall
pushf
or
pop
xor
mov
sub
daa
testl
jge
mov
gs
pop
mov
add
jnp
xchg
mov
mov
dec
add
jns
sub
cwtl
mov
daa
roll
or
or
pop
pop
mov
repnz
or
push
add
les
or
bound
sbb
pop
cmp
lods
ret
loopne
mov
jmp
push
inc
or
adc
aas
or
adc
jae
sub
test
xchg
pop
xchg
xor
fmul
xchg
dec
fildll
cmp
jecxz
pop
dec
add
or
pop
jmp
int
sarl
mov
je
lds
in
add
fsubr
sti
cmp
pop
mov
sub
mov
xor
jo
or
loopne
push
sub
mov
orl
out
push
addr16
sub
adc
subb
or
out
ds
jno
fiaddl
cmp
lret
push
jmp
stc
jns
fs
aam
shlb
push
inc
imul
lods
dec
mov
mov
mov
addr16
pop
js
pop
sub
push
addb
adc
inc
ja
jns
movsb
lret
push
xor
jno
adc
insl
sbb
mul
sub
pop
sub
dec
addr16
push
add
cli
cwtl
rolb
arpl
jmp
sbb
push
dec
or
xor
in
xchg
xor
fsub
push
jmp
add
sub
jo
mov
dec
push
imul
ret
push
jb
add
mov
mov
not
adcl
mov
add
inc
add
test
pop
fwait
mov
lret
inc
popa
inc
mov
or
mov
movsb
btr
call
out
mov
test
loope
cmp
dec
jmp
cmp
mov
sub
cmp
ljmp
popf
sbbb
testl
mov
fucomp
jecxz
xchg
add
shlb
fneni(8087
adc
sub
lret
pop
stos
rcr
fsubrs
xchg
mov
add
js
imul
jmp
and
push
dec
cmp
loopne
stc
or
negl
sahf
jg
sub
in
adc
insl
add
jno
dec
xor
and
addb
cs
push
incl
sbb
inc
cld
out
sahf
add
sub
jbe
jecxz
xchg
jnp
push
ja
mov
ret
ljmp
push
andb
mov
nop
xchg
popf
in
cmpsl
push
arpl
scas
xor
movb
dec
mov
pop
idivl
fdivrs
mov
js
aas
inc
sub
or
xor
cmp
test
ret
mov
dec
pop
jno
loop
xchg
clc
aaa
mov
or
loopne
jl
pop
rcrb
and
repnz
hlt
out
mov
movsb
and
pusha
repnz
xchg
jl
sub
dec
xchg
dec
jmp
mov
stc
dec
mov
add
xor
aas
aas
gs
cli
fdivs
popf
pop
xchg
jg
push
xor
mov
mov
bound
fsts
ret
jmp
xlat
dec
jge
pusha
subb
subb
std
test
pop
xorb
sub
mov
mov
mov
add
icebp
mov
jae
push
cmpsl
push
test
mov
jns
add
adc
loopne
daa
pop
pextrw
add
cmc
cwtl
leave
jmp
sub
push
scas
sub
push
jmp
pusha
pushf
pop
sbb
mov
dec
push
dec
add
adc
jecxz
xchg
pusha
jae
imul
add
add
clc
push
je
jmp
ljmp
xor
sub
sbb
adc
aad
add
add
jmp
mov
dec
and
rol
jo
adc
addl
jp
jnp
das
orb
or
js
ja
ljmp
jae
sbb
pop
push
sbb
fsubrs
jmp
push
push
pop
nop
inc
shrb
divl
repnz
in
imul
mov
test
mov
insl
add
cmpsl
decb
movsb
mov
fldl
pusha
fisttpl
push
das
xor
lock
jne
cli
or
arpl
and
loopne
iret
jns
add
add
js
pop
pop
cmpl
dec
mov
mov
add
mov
sbb
sub
push
jb
and
jne
adc
mov
je
pusha
cmp
push
dec
pop
sbb
dec
pop
jb
cmpsb
xchg
or
gs
dec
lret
out
mov
jecxz
add
or
mov
and
pop
shl
mov
imul
bound
movsb
addr16
or
add
or
mov
xchg
div
ret
and
jp
xor
iret
icebp
dec
lret
enter
idivl
je
jmp
cmpl
push
push
push
mov
jecxz
ljmp
cmp
fcoml
ret
pop
jne
loop
sub
add
sub
push
or
adc
test
xchg
or
insl
and
inc
cmp
pop
mov
mov
adc
lea
inc
adc
or
inc
sbb
push
fucomi
mov
mov
or
mov
ds
mov
cmp
xor
movlps
lcall
push
outsb
loopne
xor
cmp
test
jle
fadds
xor
add
loope
inc
or
out
jmp
or
xlat
sub
mov
push
adc
mov
ja
mov
shlb
stc
call
addb
sub
xor
sub
sub
push
shrb
push
add
push
or
ja
xor
and
add
into
fidivl
lock
cmp
pop
stos
popa
lds
add
int
ljmp
add
push
insl
sub
add
pop
or
mov
pop
mov
pop
std
sbb
add
xlat
inc
cli
test
push
add
mov
rcrb
clc
lahf
pop
repz
push
popa
sub
sbb
add
jmp
or
push
adcb
jl
mov
add
jp
cli
adc
das
lods
cmpsb
ffree
adc
xor
in
bound
test
pop
stc
test
mov
sub
pop
push
loope
inc
fdivs
pop
arpl
and
popf
pop
int3
sub
push
push
push
addl
xchg
and
push
push
sti
lret
jae
jmp
or
daa
inc
lods
add
mov
sub
rcrb
push
out
int
jle
popa
stos
add
mov
push
fisubrs
daa
cld
inc
in
mov
fnstsw
fcmovnb
jmp
xchg
insb
ret
push
pop
pop
popa
andb
lret
add
stc
pop
inc
jne
sbb
sbb
pop
testl
nop
insl
push
mov
lahf
and
pop
cwtl
daa
add
jb
pop
movsl
ja
add
inc
mov
mov
lds
pop
sbb
pop
pop
jno
or
adc
stos
inc
ja
or
inc
xchg
out
add
fiaddl
add
push
mov
ja
outsl
dec
jbe
pop
sahf
rcll
push
mov
cmp
leave
push
add
push
dec
jno
insl
dec
enter
pop
mov
cli
lahf
movsl
or
negl
ja
mov
nop
or
rcl
frstor
cmp
jne
stos
loop
hlt
inc
dec
ljmp
ficoml
lock
popa
push
add
inc
or
and
jmp
xchg
stos
sbb
or
sub
insl
jmp
out
mov
dec
adc
jne
jo
or
mov
push
sti
test
fsubp
dec
mov
and
sub
lock
add
mov
dec
jecxz
and
in
push
push
fdivrl
loope
daa
inc
hlt
lock
lahf
push
out
pop
arpl
mov
pop
xlat
test
sti
lahf
repz
adc
ret
adc
xor
or
add
push
mov
sub
icebp
push
fcom
stc
cld
enter
sbb
ret
in
mov
shl
jge
mov
arpl
lret
inc
mov
test
adc
sbb
push
loopne
repnz
stos
jns
aas
cmc
rolb
push
in
lret
nop
cld
push
jecxz
lcall
inc
pop
add
jecxz
pop
or
idiv
lret
add
outsb
out
dec
mov
pop
mov
into
add
xor
testl
lock
mov
or
pop
lret
jmp
pop
add
outsb
jmp
mov
popa
or
xor
lods
dec
mov
popf
cmp
repz
fs
dec
mov
ret
fucom
sub
push
and
icebp
and
mov
push
sbb
jmp
mov
sub
xor
ficomps
dec
push
inc
jmp
lds
push
fimull
cltd
imul
leave
mov
adc
sub
xor
lods
out
push
dec
jmp
mov
mov
cmp
pop
ljmp
xor
adc
xor
leave
push
add
mov
jns
mov
pop
pop
out
add
dec
jmp
mov
inc
fnstsw
cwtl
fdivs
faddp
leave
inc
xor
cmp
shr
add
jno
sub
inc
jo
pop
dec
dec
push
and
mov
lea
mov
sub
xlat
inc
and
popf
shlb
cmp
gs
push
pop
mov
pop
std
stc
aad
rcll
aam
push
jmp
mov
addb
jne
xchg
inc
cmp
jnp
hlt
push
cmpsb
ljmp
daa
xor
mov
xchg
test
add
push
add
test
dec
adc
fidivrs
cmp
out
hlt
icebp
test
imul
or
lods
push
cld
or
jmp
and
adc
out
je
ret
aaa
cmp
repz
mov
dec
xor
pop
push
mov
push
fsts
and
outsb
clc
int3
std
shrl
aam
loopne
fwait
adc
and
dec
stos
sub
cmpsb
popa
in
in
bound
and
inc
push
mov
scas
inc
es
ror
in
popf
jge
mull
in
mov
js
push
mov
imul
scas
pop
loopne
lret
cmpsb
push
xchg
cmp
fdivs
popa
xor
sub
dec
dec
int3
mov
js
repz
mov
dec
les
xchg
scas
fiaddl
jo
sub
mov
or
xchg
adc
pop
jmp
adc
push
jecxz
sbb
pop
cmp
jmp
pop
sub
sbb
repz
mov
clc
imul
xchg
jle
aas
notl
inc
or
mov
lock
pop
inc
sub
test
movsl
cmp
aas
adc
sub
scas
out
sub
or
ljmp
xor
hlt
sub
das
sbb
push
sbb
sub
stos
mov
negb
xchg
jne
cld
jns
test
sbbb
sbb
pop
idivl
and
repz
inc
xor
mov
mov
and
call
xchg
jge
imul
or
xor
cmp
add
call
adc
sbb
push
push
sbb
push
inc
push
push
jmp
in
lods
sbb
mov
mov
dec
inc
ffreep
pop
inc
call
sub
jb
fisubs
add
pusha
add
inc
ss
sti
dec
movsl
loope
outsl
fadd
lret
mov
xlat
push
mov
add
cmp
cmpsb
lret
sbb
and
int3
cmpsb
stos
pop
rcrb
stc
insl
xlat
inc
or
stc
bnd
jnp
push
add
ret
pop
outsb
add
mov
dec
cmp
push
sub
daa
loopne
shrb
push
push
or
or
add
xchg
pop
mov
into
jecxz
icebp
and
and
xor
jmp
testb
push
mov
or
jmp
fs
adc
mov
sub
mov
mov
inc
sub
movsb
ja
movl
jge
cmp
int
dec
jmp
neg
orb
push
mov
push
test
cwtl
popw
aaa
sub
dec
add
out
je
leave
out
ss
mov
add
mov
loopne
loope
daa
sbb
ja
sbb
jnp
add
add
jmp
loope
pop
inc
jg
push
sarb
inc
jmp
mov
add
mov
jp
jge
loope
mov
call
adc
cmp
dec
xchg
mov
insl
xor
shll
xor
jbe
push
cmp
imul
or
push
mov
ljmp
mov
mov
movsb
xchg
push
and
ror
adc
adc
fdivl
addr16
arpl
lods
je
xchg
jmp
mov
jo
push
add
mov
xchg
dec
pxor
repz
clc
insb
mov
ss
aaa
cmp
pop
bound
enter
popa
cmp
pop
pop
mov
movl
push
jne
cmp
and
roll
neg
repnz
idivb
cld
lock
mov
push
jmp
mov
repnz
add
aaa
sti
dec
ljmp
mov
xchg
lret
in
mov
push
mov
jge
or
les
fucom
cvtps2pd
rcrb
daa
and
xor
add
dec
inc
push
add
fldcw
xor
push
or
dec
sbb
shlb
mov
dec
jmp
sub
leave
pop
lret
lds
mov
daa
and
aad
dec
and
inc
fcomip
or
push
mov
std
mov
lock
in
rcll
cld
xchg
sbb
movsl
jle
jb
fisubrl
leave
int
mov
pop
add
xlat
icebp
scas
enter
mov
jmp
dec
cli
scas
mov
pop
fisubl
sbb
ds
pop
xor
mov
and
jno
mov
xor
mov
xorb
and
xchg
js
nop
leave
or
dec
adc
dec
hlt
sti
mov
jecxz
lods
fs
sbb
pop
and
push
jno
push
nop
xor
push
push
cmp
push
loope
data16
xor
cmp
rorb
jmp
or
or
jmp
in
sub
out
sbb
orl
inc
cs
jnp
dec
dec
idivl
mov
dec
fistl
add
cmp
pop
pop
push
mov
jno
inc
push
xlat
add
frstpm(287
inc
ds
icebp
bound
add
imul
bound
cwtl
and
dec
push
add
xor
adc
sub
mov
jae
inc
pop
jmp
pop
inc
mov
sbb
xor
push
adc
mov
into
js
mov
jo
les
outsl
inc
or
mov
std
xchg
into
xchg
icebp
lret
mov
test
out
je
call
push
add
pop
push
das
mov
push
xor
mov
les
jns
imul
fidivs
ficompl
les
ss
clc
enter
jmp
adc
jo
mov
mov
xor
js
shr
pop
clc
push
push
push
xchg
lds
subl
mov
pop
imul
push
add
enter
sbb
subps
xlat
out
push
sub
xlat
outsb
orb
call
inc
sub
push
addl
jge
sub
push
jo
loope
stos
movsl
mov
add
xor
enter
sbb
xchg
cmp
or
fldl
inc
cli
icebp
or
push
sbb
jle
mov
pop
mov
cmp
pushf
jecxz
inc
xor
cmp
pop
std
rol
rcrl
roll
cli
mov
mov
dec
jmp
xor
adc
stos
je
rcrl
push
jnp
cmp
jne
das
or
in
cmp
aaa
inc
into
mov
cld
loopne
test
mov
icebp
pop
push
mov
push
push
mov
jmp
jmp
cli
or
push
loopne
pop
out
sub
icebp
mov
inc
rcl
cmp
rolb
add
adc
lds
jbe
cmp
jg
aad
aas
sub
loopne
je
in
cli
ss
outsb
mov
clc
sbb
or
sahf
sub
add
add
icebp
mov
sbb
outsb
in
sbb
add
jbe
lahf
push
add
push
popl
cmp
jmp
loop
call
inc
js
ss
and
pop
ja
pop
jnp
xlat
add
mov
and
add
faddp
xor
clc
fidivs
pop
jp
dec
data16
push
sbb
bt
lret
xchg
cmp
or
test
jmp
push
neg
shr
sub
cli
sub
fists
pusha
sbb
testl
add
das
dec
adc
and
mov
jmp
fs
push
shl
shlb
ret
push
pop
ret
xor
jmp
test
sbb
pop
dec
div
pop
ficomps
lcall
dec
push
stos
sub
dec
mov
hlt
cltd
inc
shrl
pop
and
insl
imul
pop
pop
push
mov
push
int
aam
pop
adc
jo
out
adc
adc
lret
xor
mov
clc
add
push
movsb
iret
aam
loop
test
fnstcw
sarl
mov
add
aaa
sub
pop
mov
pusha
sti
into
mov
dec
mull
sub
adc
pop
jle
lds
je
add
mov
and
fs
push
adc
push
pop
cmpsb
xchg
cwtl
pop
cmp
insl
ds
bound
xor
stc
mov
mov
int3
cmp
adc
ljmp
dec
or
sbb
sbb
lea
fsub
jo
xor
mov
cs
cmp
and
int3
das
mov
ljmp
js
add
lods
mov
mov
push
or
jl
inc
jmp
mov
sub
out
pop
sbb
inc
ltr
test
add
sub
jne
pop
mov
in
sub
jge
ds
cs
and
or
adc
inc
lahf
pop
dec
jmp
cld
sbb
or
add
or
and
adc
addb
and
xchg
fstl
leave
loope
imul
mov
adc
jle
das
add
stos
mov
in
inc
hlt
imul
xchg
add
sbb
or
pop
loopne
jmp
cltd
cmp
jmp
dec
or
jmp
movsl
xlat
stos
lret
mov
out
adc
sbb
xor
call
dec
add
inc
or
mov
or
nop
cmp
in
movsl
push
rclb
mov
mov
adc
mov
pop
dec
lcall
outsl
out
sub
fwait
aad
sbb
jbe
xor
ret
inc
sub
sub
sbb
xchg
or
mov
dec
xlat
mov
dec
leave
xchg
pop
aaa
jmp
outsb
push
stc
pop
mov
adc
pop
jno
repz
sbb
pop
fsubrl
lock
pop
jle
push
out
mov
shl
sbb
data16
jbe
or
push
xchg
push
mov
pop
sub
in
cld
inc
dec
jnp
test
sbb
mov
inc
das
sub
hlt
sub
aas
enter
add
xor
inc
mov
xlat
jl
jge
mov
aad
jnp
hlt
xchg
loopne
add
mov
enter
cmc
ljmp
ficoml
dec
add
out
push
fisubrl
es
add
or
inc
jge
add
in
sub
ljmp
call
jmp
ret
scas
ja
add
xor
inc
xor
and
ds
lahf
and
sub
orl
xor
add
icebp
mov
daa
cld
cmpsl
jns
mov
jmp
or
or
jne
jmp
xor
sbbb
pop
lods
mov
and
adc
stos
mov
jb
mov
insl
movsl
pop
add
pop
push
aam
jmp
jmp
movsb
dec
push
mov
or
syscall
fiaddl
cltd
cmpsb
sub
mov
repnz
dec
ds
movl
add
pop
pop
mov
add
in
sbb
nop
repnz
adc
and
popf
dec
cmpb
push
aam
into
stos
lret
mov
jmp
add
arpl
jge
test
xor
add
add
fldcw
les
jp
xchg
adc
stos
sub
add
dec
jmp
xchg
clc
outsl
and
jecxz
push
adc
rorb
outsb
fbstp
add
xor
pop
inc
sarl
or
jp
inc
adc
cmp
cmpsb
mov
out
imul
negb
push
adc
push
push
jmp
cmc
inc
jnp
pusha
fbld
or
dec
fdivrs
xchg
stos
aam
scas
dec
in
ja
xchg
pop
cwtl
push
nop
dec
neg
adc
ds
movsb
sub
mov
push
add
xor
jmp
jmp
pop
cs
aas
aad
or
jmp
lods
push
dec
inc
or
sbb
add
mov
sub
test
cmpsb
push
or
add
pop
lea
repz
or
pop
pop
mov
rcrl
mov
pop
outsl
or
cmp
mov
fadds
jne
sub
add
mov
push
loop
jge
add
cli
adc
nop
push
into
or
dec
or
rolb
loopne
ljmp
pop
daa
cmp
xchg
fsts
mov
shr
push
aas
div
push
pop
aam
mov
jg
mov
test
inc
in
call
outsl
mov
mov
adc
pop
nop
mov
and
mov
inc
jns
dec
ljmp
jno
pop
jg
cwtl
sbbb
das
clc
dec
nop
leave
dec
add
popf
jns
syscall
dec
ror
mov
rol
push
test
lods
stc
jae
call
push
or
xor
sub
mov
inc
or
jnp
ljmp
push
cli
pop
movsl
or
inc
jl
daa
das
ficompl
or
ljmp
mov
inc
xchg
data16
jae
cmp
pop
nop
and
adc
mov
mov
push
fistps
das
adc
push
test
ljmp
in
arpl
sub
pop
frstor
sysret
pop
inc
sub
pop
jg
test
test
data16
outsb
mov
das
into
lret
sbb
xorb
push
mov
pusha
in
ret
into
add
mov
add
push
pinsrw
mov
jo
cmp
test
jmp
xlat
fnsave
popa
and
push
pop
dec
push
or
dec
inc
xorb
push
adc
in
and
push
fidivrl
pusha
xchg
dec
sarl
sbbl
push
or
not
ja
ljmp
mov
pusha
xor
xor
sub
cmc
push
ret
push
insl
add
cmc
imul
mov
cmc
dec
or
fstpl
insb
sub
dec
aaa
adc
or
push
dec
fbstp
xor
mov
mov
sub
fisubrs
xchg
mov
out
add
mov
cmp
jmp
in
inc
ret
inc
ja
dec
pop
shrb
pop
push
dec
enter
or
xor
sbb
std
jmp
jmp
repz
sub
fimull
inc
push
dec
shlb
nop
in
cmp
jns
sub
sarb
jmp
and
or
mov
bnd
add
out
pop
arpl
and
jb
stos
jne
xor
xor
cmpsb
sub
loope
cmc
mov
dec
nop
in
and
mov
mov
mov
push
cli
push
adc
push
fimull
or
mov
push
adc
es
inc
loopne
mov
lock
jmp
push
mov
pop
sub
jecxz
mov
and
adc
add
cli
icebp
inc
das
mov
mov
dec
add
dec
push
push
and
mull
daa
add
inc
scas
decl
mov
out
inc
cltd
mov
inc
jne
sub
int3
add
inc
pop
test
loopne
jg
adc
cmp
push
stos
in
call
loopne
and
sub
insb
das
cmp
jecxz
mov
mov
dec
xorb
adc
lret
cli
or
push
mov
cmovnp
ljmp
bound
popf
push
mov
xchg
cwtl
sub
pop
mov
repnz
outsl
pop
mov
pop
cltd
xor
dec
sub
mov
arpl
inc
mov
xorb
mov
repz
mov
into
mov
adcb
mov
jne
cli
xchg
nop
dec
mov
es
push
dec
push
je
mov
repz
jnp
push
test
cmp
fsubp
sti
or
cmc
adc
sub
or
add
push
adc
aaa
lods
mov
sub
inc
sub
sbb
push
pop
jmp
lds
pushf
pop
pop
xchg
and
push
pop
lcall
sub
dec
or
fs
mov
dec
and
jns
jnp
pop
push
mov
clc
fstps
sbb
add
mov
add
call
mov
pop
mov
add
daa
out
sbb
scas
sbb
inc
ss
jge
in
and
je
lcall
jo
mov
sbb
dec
pop
cld
sti
movsb
jmp
mov
loope
not
or
roll
aad
loope
jmp
cmp
add
inc
xchg
add
sub
out
xchg
jmp
lods
in
xlat
mov
push
xlat
rol
sub
lock
jbe
fsubs
or
jl
arpl
inc
fs
adc
imul
filds
or
cmp
pop
movsl
jo
add
pop
pushw
jmp
iret
mov
pop
sbb
es
jmp
imul
or
aad
lods
sbb
jmp
neg
fstpl
pop
inc
or
lds
sub
sub
adc
scas
or
cli
xor
in
xchg
sub
push
fisttpl
rorb
or
jbe
push
cmp
shlb
xchg
pop
mov
and
lret
xlat
insb
pop
nop
loope
repz
mov
inc
daa
popa
push
add
cli
stos
test
scas
push
jg
cwtl
pop
mov
add
dec
and
out
adc
pop
mov
cmp
mov
scas
pop
push
cmp
or
cli
cmp
lret
adc
aaa
mov
dec
or
add
or
xor
add
push
dec
testb
shlb
clc
rcrb
mov
je
iret
cwtl
xor
fisubrs
mov
add
inc
flds
sub
mov
mov
xchg
pop
loope
push
call
push
movl
sbb
sub
inc
call
and
stos
cltd
insl
pop
cmc
jae
and
sbb
std
push
ds
es
or
inc
shr
jo
and
inc
add
xor
push
sub
and
xchg
mov
cmp
mull
mov
adc
dec
sub
loop
ret
or
popf
jge
sbb
mov
nop
sti
loop
das
adc
push
mov
inc
andb
add
sub
jmp
mov
testl
ret
pop
push
mulb
lea
mov
pop
or
dec
out
sarb
nop
push
jmp
mov
sbb
ss
addl
ret
movsb
mov
sub
jnp
not
cmc
repnz
das
mov
idivb
lods
mov
jo
sub
xor
push
add
mov
in
add
fnsave
rolb
shlb
bound
dec
push
xlat
add
dec
sub
add
clc
xor
test
dec
stos
and
out
ret
push
sub
or
adc
mov
push
pop
addl
cwtl
loop
cli
out
fisubl
dec
loop
int
in
add
fimull
std
sbb
arpl
sub
aam
sbb
jo
sub
jbe
and
cwtl
les
sub
fidivl
iret
mov
std
pop
jns
imul
test
or
add
or
sbb
pop
adc
das
jp
jle
out
ljmp
xchg
mov
xchg
comiss
ret
fnsave
stos
push
cmp
mov
out
popf
mov
mov
mov
sub
cli
push
mov
push
mov
add
incb
add
push
push
outsb
mov
pop
pop
push
push
push
jmp
xchg
sbb
pop
dec
adc
into
fsubrl
and
cmp
lcall
fmull
or
cld
mov
imul
bound
mov
jle
fcompl
mov
cmpsl
sarb
mov
inc
dec
xor
pop
pusha
pcmpgtb
inc
sub
sub
add
rol
jmp
xor
jl
xor
or
pop
mov
mov
push
mov
xchg
mov
jg
popf
scas
sub
pop
jge
popa
cs
cmp
pop
push
xchg
add
adcl
or
daa
pop
or
xchg
leave
inc
cmp
xchg
add
inc
pusha
or
arpl
push
or
mov
xor
sbb
lret
add
fidivrs
imul
mov
add
sbb
sbb
sub
out
xor
dec
inc
pop
fs
jmp
xchg
jmp
adc
xchg
sub
adc
out
cmpb
ljmp
enter
and
pop
mov
incb
xchg
sub
adc
shrl
adc
enter
push
dec
add
arpl
rcrb
cmp
inc
dec
mov
add
and
sub
mov
in
cmpsb
mov
ror
nop
cltd
pop
xchg
add
fildll
loope
xlat
jnp
or
sbb
pop
js
movsb
jmp
mov
dec
or
xlat
bound
les
xchg
adc
stos
lret
xchg
das
das
or
cmc
pop
les
dec
sbbb
repnz
stc
jb
inc
jno
xor
adc
and
push
testl
push
roll
sarb
jge
aas
xor
subl
subb
pop
push
das
add
add
sub
cmp
jb
or
push
addb
inc
push
lds
pop
mov
subl
mov
inc
repnz
and
add
sub
fstl
or
aad
mov
sub
in
jge
fadds
dec
pop
adc
sub
xor
adc
stos
xchg
hlt
scas
and
mov
or
pop
mov
push
dec
push
call
jmp
in
popa
aad
adc
repnz
ljmp
test
inc
imull
push
jb
call
pop
imul
clc
scas
gs
test
or
ds
inc
call
xchg
adc
sub
push
add
push
ror
dec
ljmp
push
mov
arpl
ficompl
mov
loopne
andb
mov
sub
or
or
mov
xor
sub
fadds
pop
lods
and
sbb
lahf
jbe
xor
or
rcrb
xor
dec
rcr
adcl
lret
ja
or
add
aas
movsb
pop
xor
dec
dec
out
fs
addl
testb
mov
or
loope
sarb
sub
icebp
rcr
sbbb
testl
ss
idivb
xchg
push
pop
jle
cmp
xor
or
sub
pop
fwait
pop
xchg
mov
or
je
scas
rcrb
repz
cwtl
adc
cmp
scas
mov
sbb
xchg
das
mov
and
push
inc
mov
mov
test
loope
dec
mov
lods
jmp
mov
fdivr
fisubl
cwtl
dec
pop
inc
scas
dec
lock
adc
mov
out
mov
jp
loopne
push
fisubrl
aad
cmp
jmp
enter
pop
or
jns
or
cmp
push
cmc
cmp
lret
push
in
es
jae
adc
and
push
pop
add
sbb
mov
adc
lods
push
pop
dec
mov
shlb
jp
or
mov
add
push
sub
add
xchg
push
stos
jne
inc
push
inc
cmp
or
xchg
sbb
mov
xor
inc
xor
inc
shr
inc
sub
mov
push
jb
xchg
add
imul
sbb
pop
fucom
sub
mov
test
subb
lret
mov
inc
fs
fisttpl
and
bound
lret
in
lret
xchg
inc
adc
mov
jno
pop
les
or
dec
bnd
imulb
mov
jnp
scas
in
xchg
push
shl
rolb
jmp
rcrb
jmp
mov
imul
push
xchg
sbb
mov
pop
frstors
pushf
inc
xchg
aad
fisttpl
and
push
and
decb
or
xchg
out
mov
xchg
jle
push
loopne
lds
push
mov
mov
or
fistps
in
cli
mov
lret
test
ljmp
std
adc
cs
outsb
repnz
adc
iret
mov
mov
xchg
rorl
dec
push
sub
or
in
and
addr16
sub
clc
inc
dec
pop
add
scas
pop
test
out
xchg
in
lods
xchg
sahf
adc
jmp
inc
andb
subl
out
lahf
stos
fdivs
sub
push
xor
addr16
jl
add
add
jle
icebp
roll
add
xchg
enter
dec
clc
test
mov
fisttpll
sub
sub
jmp
test
loope
fwait
push
out
ret
xor
aaa
jle
and
in
sti
cld
mov
mov
neg
xchg
in
dec
pop
mov
lock
sub
faddl
push
mov
xor
lret
xor
orl
leave
pop
xor
daa
adc
stos
mov
xchg
dec
stos
stc
aam
sub
pop
push
cs
xor
stc
pop
mov
jmp
jne
mov
stc
bound
pop
fcomps
and
cmp
cmp
xchg
push
lods
jmp
cs
dec
gs
xor
or
outsl
mov
sub
jmp
les
sahf
pop
jecxz
outsb
in
xor
dec
add
aam
testb
push
xor
pop
mov
cmp
pop
add
sbb
sarl
push
sbb
and
add
sub
jmp
in
leave
bswap
paddb
icebp
fstpl
and
xchg
cmp
and
xchg
sbb
shr
xor
fwait
out
jecxz
pop
pop
and
lock
add
sbb
sarl
add
std
mov
aam
pop
mov
push
xchg
movsb
sbb
addr16
testb
out
test
cmp
inc
hlt
rcrl
imul
fcomip
std
jmp
mov
dec
inc
aad
fs
dec
stos
mov
insb
sbb
ficoml
cltd
inc
xor
repnz
in
into
loopne
inc
lret
arpl
adc
mov
stos
rorb
pushl
pop
cwtl
and
scas
rorb
and
and
add
mov
popf
pop
test
mov
jmp
pop
das
ljmp
test
icebp
pop
push
and
cmpsb
push
add
stc
adc
inc
cld
xor
dec
mov
stos
nop
iret
jmp
cmp
addb
mov
adc
inc
or
push
adcl
add
shlb
xor
push
cmc
or
mov
or
sarb
fcomi
push
mov
inc
dec
sub
mov
fldcw
jo
lds
cwtl
push
inc
inc
inc
movsb
addr16
jae
ret
decb
dec
pop
cmp
repz
dec
xor
mov
pop
xchg
int3
inc
inc
inc
xchg
mov
aam
push
ret
sub
cltd
ret
mov
add
je
pop
push
cmp
mov
out
test
test
xor
loope
dec
not
push
jl
hlt
ljmp
cld
popf
push
sbb
in
sub
inc
push
leave
pop
sub
aaa
rcl
loope
stos
jno
in
fdivrl
fucom
stc
and
cmp
push
sar
push
adc
mov
cli
jmp
jecxz
pop
mov
xlat
call
jne
add
dec
push
not
push
mov
cmp
xor
fstpl
cs
adc
stos
sbb
pop
mov
push
mov
leave
and
pop
lods
mov
or
sub
push
sbb
js
sarb
ds
imul
scas
in
pop
xor
inc
pop
lods
nop
xor
cmc
ds
ja,pt
pop
adc
cmpsb
pop
dec
in
bnd
arpl
add
pop
jmp
aas
nop
mov
xor
jmp
add
scas
adc
movsb
jmp
out
andl
jmp
or
xor
cmpsl
push
loopne
push
bound
out
inc
lods
dec
ljmp
pusha
stc
xchg
scas
and
dec
pop
sbb
imul
cwtl
lahf
pusha
adc
inc
and
daa
jp
orl
cmc
inc
es
adc
cmp
adc
cmp
ja
mov
xor
inc
pop
sbb
dec
sarb
push
mov
inc
xor
and
outsl
icebp
adc
call
cmpl
add
sbb
adc
or
dec
insb
je
data16
data16
mov
sbb
xlat
shr
xor
push
fstpl
popf
sbb
adc
or
rorb
inc
les
loope
add
hlt
jge
in
das
xchg
mov
cmp
cltd
push
cmp
addr16
fiaddl
and
adc
lods
aas
ret
shlb
loop
or
and
rol
inc
imul
or
loop
pop
fnsave
cli
pop
push
cmp
xor
aaa
decb
rolb
sbb
or
fsubp
scas
adcb
push
or
ss
loope
add
or
movsb
cli
inc
ja
xor
dec
addr16
roll
mov
fidivs
js
in
add
leave
or
bound
pop
add
mov
addb
mulb
mov
jmp
and
cmp
outsb
int3
or
repnz
add
mov
mov
cmp
pop
or
lcall
push
jecxz
lock
adc
dec
call
clc
imul
push
mov
test
stos
jne
ljmp
hlt
mov
push
xchg
cmp
add
cmc
not
mov
pop
xor
add
rorb
dec
or
pop
insb
mov
push
jae
jbe
rorb
cli
xor
repz
leave
jge
mov
push
push
aam
xor
pop
jecxz
lods
pop
pop
rclb
fisttpll
sbb
jmp
lods
push
cmc
mov
mov
lods
cmp
pop
or
jge
jmp
lds
xchg
pusha
in
jnp
in
lret
pop
push
cwtl
add
leave
sbb
push
mov
pop
repnz
mov
std
push
xchg
idivb
mov
mov
in
mov
ja
pop
lock
sahf
push
jmp
fnstsw
jbe
das
push
outsl
leave
pop
pop
daa
movsl
divl
inc
push
out
loop
lret
movsl
jmp
iret
inc
das
push
pop
loopne
push
ds
cmpb
dec
xor
fwait
xor
inc
mull
adc
popa
dec
fwait
mov
jno
leave
hlt
fimuls
xor
aam
lods
sub
jp
adc
and
sub
stos
cmp
jmp
scas
cltd
xchg
pusha
repz
stos
push
push
fcomps
ja
sar
mov
icebp
cmpsb
jmp
jl
adc
scas
mov
add
cmp
mov
or
movsb
pushf
cmc
sub
xchg
add
shr
or
mov
sub
pop
or
jl
pop
add
cmp
mov
dec
mov
mov
dec
pop
mov
or
adc
pop
sub
push
imull
or
jl
pop
insb
add
jmp
out
pop
mov
add
mov
jne
and
dec
inc
xchg
mov
xchg
or
xor
lahf
xchg
add
mov
jbe
push
outsl
sbb
sbb
mov
jmp
pop
es
cmp
or
sbb
sub
jmp
xchg
xchg
dec
pop
or
xchg
int
add
xor
sbb
cld
mov
test
sti
adc
flds
jp
pop
or
ljmp
xchg
jo
adc
scas
cmp
push
pop
add
scas
mov
push
mov
sti
aad
movsl
dec
outsb
daa
aad
and
or
lahf
daa
push
lret
ds
mov
add
movsb
cld
push
dec
cli
stos
jno
push
es
fmull
push
stos
je
movswl
adc
mov
adc
aam
xchg
clc
es
add
fldt
push
in
mov
xor
sub
jmp
lods
add
inc
jno
lahf
call
jo
cli
call
aaa
cld
add
adc
not
or
sbb
mov
hlt
pop
sub
dec
pop
cmc
mov
lret
add
dec
std
int3
pusha
push
sub
sub
adc
add
sub
repz
mov
jg
xchg
movhps
shlb
iret
testb
ret
mov
add
faddl
add
xchg
push
call
pop
iret
imul
sub
sahf
xor
sub
out
fisubs
leave
and
jmp
std
or
adc
xor
sar
cld
jle
xchg
add
jl
daa
pop
lds
or
lods
lods
mov
jecxz
inc
addr16
or
or
sahf
push
lcall
cld
xor
add
test
repnz
imulb
arpl
add
cmp
test
xchg
pusha
add
sbb
out
adc
and
lea
or
mov
cwtl
lret
icebp
mov
inc
push
add
pop
mov
clc
pop
adc
jnp
jecxz
mov
fs
mov
pop
mov
add
das
cmc
pop
ret
cli
sub
xlat
xor
pop
push
call
mov
xchg
fisttpl
pop
inc
in
push
mov
inc
xchg
mov
and
insb
pop
gs
mov
add
xchg
int3
out
cmc
sub
leave
jecxz
mov
fs
pusha
add
inc
or
jmp
ljmp
jmp
pop
push
in
test
xor
pushf
fdivrp
ret
outsl
push
sbb
scas
pop
xchg
insb
pop
pushf
jge
insl
sti
sbbl
xor
cmp
pusha
or
fimuls
xlat
add
ret
dec
fsubl
gs
out
fildll
pop
repz
jmp
push
add
lahf
mov
dec
inc
xchg
out
dec
hlt
push
push
ljmp
xor
add
adc
pop
add
pop
pop
sbb
imul
adc
push
addb
pop
clc
cmp
jg
inc
inc
and
and
into
mov
add
inc
xor
mov
sti
add
out
aas
in
or
push
mov
mov
or
mov
add
and
jmp
stc
sub
xor
xor
jecxz
in
pop
stc
jne
mov
sub
add
int3
mov
movsl
out
pop
xchg
ret
cmc
jo
adc
loopne
adc
nop
sub
hlt
mov
pop
sub
and
xor
lds
outsl
adc
push
pop
inc
lock
inc
fdivrp
xlat
and
cld
lods
pop
pop
daa
in
pop
jno
icebp
jb
push
mov
pop
es
add
loopne
xchg
inc
mov
adc
sbb
pop
adc
inc
lods
xor
dec
add
add
ljmp
jle
lcall
jns
movsb
dec
mov
nop
ljmp
imul
sub
jge
rolb
mov
mov
adc
rcll
or
cmp
add
je
mov
nop
xlat
dec
push
out
adc
rolb
lret
cmpsl
jecxz
adc
add
cmp
mov
dec
lods
repz
ret
mov
fistpll
push
ljmp
fs
aam
add
push
adc
call
int
sbb
cmp
fldenv
sti
cltd
pop
pop
sarl
xchg
insl
lock
pop
mov
cmc
loopne
insb
dec
dec
fists
dec
add
daa
rcrb
push
mov
icebp
add
vsqrtps
adc
or
push
dec
mov
push
cmp
sahf
mov
lods
push
push
lret
jbe
or
leave
out
outsl
mov
orl
dec
sub
push
in
pop
jo
mov
push
or
jmp
je
les
cld
mov
mov
push
cwtl
aas
and
push
fldl
out
call
sub
and
jmp
xchg
push
mov
test
sub
xor
jne
and
add
push
pop
ror
add
mov
jg
dec
mov
jge
mov
icebp
mov
in
cmp
flds
cwtl
push
jo
push
sti
add
arpl
push
mov
jmp
xor
cwtl
or
mov
jnp
iret
mov
sbbb
loop
pop
popl
xchg
sbb
in
push
daa
cmpsb
sbb
push
push
add
jg
adc
popf
push
mov
fdivl
mulb
ljmp
nop
out
inc
iret
cmp
add
stc
push
outsl
sub
adc
add
mov
and
pusha
sbb
out
jae
testl
imul
les
push
insb
lahf
add
adc
jmp
mov
leave
push
test
mov
movsl
add
lods
pop
sub
mov
jg
je
enter
adc
add
push
pop
out
xor
lods
push
jmp
pop
xchg
out
test
ljmp
push
es
dec
cmp
fcomip
pop
loopne
fmull
js
mov
rcr
push
push
pop
inc
mov
cmpsb
or
pop
push
pop
test
pop
push
push
mov
sti
lcall
fildl
roll
icebp
fdivrl
repz
and
nop
inc
jl
or
sub
sbbb
fs
inc
xchg
xchg
add
pop
cmp
xor
bound
jge
push
negb
xlat
push
in
add
sub
adc
or
add
sub
aam
les
idiv
out
les
inc
dec
mov
add
rorl
push
mov
jb
in
rorl
xor
inc
paddw
dec
test
xor
fistpll
int3
mov
dec
mov
xchg
add
lret
adc
test
adc
push
fwait
stos
mov
out
or
mov
sbb
pushf
dec
scas
jns
or
das
push
inc
xchg
pop
das
sbb
lock
mov
xchg
xor
push
xchg
pop
mov
ret
cmc
lahf
xchg
aam
ljmp
jne
sub
adc
pop
push
xchg
dec
lock
rorl
add
popf
fdivrl
rorb
pop
add
adc
outsb
shlb
jg
xor
pushf
cmp
jmp
mov
shrb
shll
in
inc
mov
adc
pop
sub
out
int
or
das
mov
fmulp
mov
fcomip
push
cmpsl
pop
cmp
or
bound
jo
xor
leave
out
xchg
adc
sbb
sti
add
sbb
or
hlt
pop
fstl
cs
xor
or
pop
jb
in
mov
ret
pop
inc
or
push
sbb
cmp
mov
pop
push
and
pop
adc
add
cmp
adc
add
cld
ss
out
mov
pop
pop
out
js
push
inc
mov
idiv
in
cwtl
mov
sub
xor
cmpsl
and
fldcw
enter
mov
ljmp
aam
push
fsubrl
sub
dec
rolb
mov
das
ljmp
jbe
jmp
push
inc
sub
xlat
xor
mov
jne
ficoms
xlat
adc
loop
xchg
jns
push
jg
out
lret
xchg
cli
cmpb
shl
not
sub
add
push
xor
and
cmp
dec
jmp
adc
mov
clc
sbb
xchg
or
lock
aas
movsl
mov
mov
out
dec
call
sub
xchg
and
mov
lcall
or
sub
add
fstpl
gs
and
and
adc
in
adcb
sub
out
fs
gs
enter
xchg
push
cmp
fcomip
xchg
adc
ljmp
cli
push
ds
jge
push
testl
popf
pushf
pop
jnp
dec
mov
repnz
iret
addr16
dec
push
out
aas
fs
xchg
sub
pavgw
in
cmp
call
icebp
push
xor
xor
insl
jmp
dec
pop
mov
rcrb
cwtl
rcrl
into
bound
mov
add
mov
jne
adc
shlb
dec
push
test
mov
xor
add
cmpsl
cmc
scas
cmpsl
pop
or
test
out
cltd
shl
jmp
mov
popa
adc
mov
arpl
inc
ficomps
jne
decb
lea
scas
in
sub
mov
push
lds
lock
test
or
popa
pop
dec
add
xchg
xor
ja
and
out
fadd
out
neg
or
imul
lret
lret
sub
or
xchg
xchg
std
mov
jmp
es
movsb
pop
int3
mov
add
insl
or
push
and
andl
sub
push
or
scas
rol
push
and
cmp
add
add
fildl
lock
pop
enter
into
mov
jae
das
inc
sbb
jmp
mov
jb
insl
out
cmp
imul
push
ret
aad
jns
pop
xchg
or
push
ljmp
scas
add
pop
jo
jmp
push
addr16
cwtl
pop
xchg
jmp
mov
sub
mov
cli
add
test
mov
push
mov
mov
sub
and
shrl
inc
push
xor
ljmp
push
add
push
pop
loope
jge
stos
xor
fs
xchg
inc
mov
xor
testl
mov
push
daa
adc
mov
jbe
sub
add
adc
adc
ljmp
clc
test
add
scas
xchg
add
stos
jbe
adc
mov
in
rol
repz
popaw
mov
mov
sub
pop
mov
not
imull
xchg
cld
adc
mov
fcoml
xchg
stos
dec
rcll
inc
pushf
inc
movsl
cmpsl
pop
sarb
cmc
subb
push
inc
xchg
jnp
xor
and
dec
cs
aad
inc
inc
push
push
mov
lods
sti
and
jb
dec
aad
and
sub
adc
mov
and
ss
and
mov
xor
adc
jle
and
orb
jmp
push
mov
xlat
push
pusha
push
enter
aaa
es
daa
mov
pop
add
jmp
adc
pop
test
mov
pusha
add
dec
dec
inc
nop
sub
sarb
adc
mov
das
jae
add
out
push
sti
push
push
cld
pop
cmp
addl
adc
sub
jo
jmp
mov
repnz
and
adc
fld
push
in
and
out
cli
jmp
stos
ds
or
addr16
pop
xor
push
in
jae
mov
sub
xor
repz
cli
mov
push
push
and
inc
push
or
xlat
mov
jmp
in
jb
adc
adc
inc
pop
or
xchg
jp
leave
adc
stos
in
movsb
scas
and
pop
dec
out
and
mov
pop
mov
inc
push
adc
jp
cmp
mov
ret
inc
mov
ret
mov
in
int
rcrl
mov
sub
daa
lods
jmp
lods
pop
or
stos
xor
ljmp
inc
loope
lea
mov
cmp
jl
mul
push
and
inc
stos
push
inc
push
sti
ss
cmp
adc
cs
or
sbb
dec
sbb
lock
sbb
inc
or
shrl
pusha
test
ljmp
stos
and
sbb
or
inc
jle
sub
into
and
xchg
lahf
jns
movsl
aad
jne
gs
mov
pop
ficoms
addr16
sbb
add
sub
jl
popf
jae
icebp
sbb
jno
jle
and
jmp
jecxz
or
lret
mov
and
adc
out
sub
sub
inc
loopne
push
jmp
into
add
xor
jno
lret
jmp
adc
fnstsw
mov
cmc
lds
pop
xor
xor
out
popa
push
es
mov
rcr
sub
sti
negb
jmp
rcl
jmp
xor
into
pushf
mov
shrl
sub
fsubr
add
adc
mov
lret
xor
or
mov
outsb
stos
sub
into
mov
add
shll
cmp
xor
or
adcl
fsubrs
or
push
into
nop
sti
sub
sub
xor
xchg
lea
add
xor
jmp
pop
pusha
lret
int3
adc
dec
push
mov
std
xor
test
pop
lahf
rclb
in
imul
mov
popa
dec
and
inc
add
jmp
push
jle
add
dec
and
pxor
sarl
loopne
ret
pop
iret
or
cli
push
rorb
aas
clc
cs
add
in
xor
movsb
xchg
loopne
pop
adc
cs
add
push
in
pop
lret
inc
mov
sbb
sub
push
ds
xlat
jmp
dec
out
dec
and
jg
sbb
push
push
outsl
adc
inc
insb
add
fwait
adc
cmp
mov
sub
xchg
pop
stos
rorl
test
jmp
push
popa
adc
xor
loop
addl
adc
push
jnp
dec
mov
cld
adc
and
pop
es
inc
mov
std
or
inc
jne
cmp
or
testb
call
dec
xor
fnstenv
stos
xlat
push
mov
fsubrs
dec
mov
push
xchg
stos
mov
addl
lea
popa
and
xchg
pushf
addl
jl
inc
es
rcll
ljmp
fstpl
xor
ficomps
es
insl
jbe
pusha
cwtl
dec
inc
sbb
shl
dec
inc
les
xchg
jno
or
cmp
lds
mov
adcl
or
jmp
jbe
adc
dec
and
pop
cmp
pusha
mov
jb
imul
shll
adc
push
and
enter
mov
lock
ret
mov
scas
out
dec
iret
fwait
das
orl
jle
add
sub
push
mov
jmp
add
sub
mov
repnz
shlb
leave
sbb
jnp
add
inc
jmp
and
adc
or
xchg
sub
cmp
xchg
dec
outsb
jg
jmp
push
aas
add
loope
scas
mov
lahf
push
lock
rclb
mov
orb
push
mov
push
mov
sahf
xlat
lret
dec
repnz
pop
scas
dec
shll
aam
test
testb
mov
imul
sub
or
adc
mov
push
jmp
pop
cmp
mov
push
jno
sub
cmpsb
scas
mov
shl
rcrl
add
or
aam
pop
icebp
ds
xchg
in
popf
xlat
ret
dec
sub
hlt
adc
mov
filds
mov
sub
test
mov
cmp
cmp
dec
movsl
test
and
daa
jmp
jno
mov
sahf
push
mov
fnsave
lret
pop
mov
mov
sti
repnz
lea
cmpsl
addl
jno
cltd
push
or
aam
push
mov
inc
neg
je
mov
scas
add
mov
pop
add
jbe
mov
add
lahf
inc
sti
das
test
add
jmp
js
out
pop
add
sub
sub
pop
mov
mov
jnp
call
rcll
xchg
shll
push
or
ret
push
inc
loop
cld
cwtl
push
mov
sti
pushf
sub
pop
lret
scas
bound
icebp
pop
push
imul
jo
outsb
enter
clc
pop
pop
data16
sub
and
pop
xchg
pop
xor
mov
cmp
lret
cltd
lds
push
sahf
shr
repnz
mov
cmp
testl
add
loop
fcomip
xchg
xchg
cld
mov
sub
insb
out
adc
movsb
aaa
push
mov
and
imul
mov
cmc
bound
inc
or
jecxz
in
ds
jns
ds
adc
test
jns
out
or
lcall
movsl
ret
das
repnz
aaa
xor
dec
loope
push
imul
mov
pop
neg
insb
dec
stos
mov
lock
pop
xor
leave
mov
push
dec
xchg
sbb
jne
ljmp
hlt
inc
ss
daa
dec
test
xchg
push
add
push
repnz
ja
stos
pop
pop
add
and
les
pop
in
sti
mov
jmp
imul
jbe
es
sub
mov
inc
mov
adc
icebp
jmp
pop
clc
pop
ljmp
imul
test
out
jb
inc
push
fidivl
pop
mull
outsl
sarb
xchg
xlat
mov
mov
decb
fdivl
test
mov
or
mov
jle
or
movsb
inc
push
nop
jecxz
fnstsw
addl
jge
and
out
push
pop
fildl
cld
or
cmc
or
ja
dec
pop
cld
dec
mov
scas
sarb
push
add
push
jns
push
call
test
sub
adc
nop
lods
rorl
add
call
xor
pushf
clc
push
push
inc
pop
add
rcrl
sti
add
in
dec
bound
adc
int
ds
cs
cmpb
stos
in
push
add
jl
test
pop
cmp
nop
in
push
mov
rcrl
stos
mov
sub
scas
dec
js
pop
jmp
ja
out
pop
pop
in
adc
incl
sbb
faddl
add
mov
xchg
mov
in
lret
mov
push
sub
cmp
adc
mov
push
add
push
sub
push
test
push
iretw
daa
pop
inc
pop
bound
outsb
xor
out
test
mov
stos
pusha
outsb
mov
inc
neg
jmp
fsubrl
xchg
add
jne
cmp
test
xlat
icebp
repnz
cld
int
sub
es
shr
inc
neg
mov
push
pusha
js
mov
std
pop
push
xchg
sub
roll
pop
pop
add
sbb
or
xchg
sub
dec
push
stc
pop
pusha
popf
fnstcw
push
jmp
pop
les
out
rorl
in
inc
jge
mov
xchg
fcmovnbe
cmp
into
lods
and
mov
push
sub
cli
bound
cmp
dec
js
fsts
lea
add
cmp
mov
jnp
into
xchg
pop
push
xlat
dec
subb
lods
mov
cmp
lock
les
dec
mov
arpl
sbb
add
lock
mov
or
ds
cmp
xor
or
adc
cmp
pop
add
clc
lods
rcr
xor
insl
stc
pop
cwtl
or
ret
xor
jne
ds
push
inc
popa
push
subl
js
inc
push
add
call
daa
sub
jle
pop
add
push
jmp
mov
xchg
std
xchg
mov
or
mov
aam
rcll
push
jge
or
add
push
or
sub
out
mov
sbb
test
test
das
pop
mov
movsb
xchg
sti
insl
loop
or
inc
pop
hlt
pop
jle
mov
iret
sub
das
push
and
jno
add
in
pushf
push
push
or
cmp
lcall
or
in
mov
sub
in
lods
xorl
xchg
lret
stos
daa
jmp
movsb
popf
sub
mov
add
sub
push
jmp
repz
mov
aas
push
xchg
mov
push
test
and
rcll
andb
pop
jmp
xchg
aam
add
pop
adc
dec
adc
xlat
cwtl
scas
imul
ret
jne
in
jae
dec
push
cltd
xlat
movsl
cmp
jp
adc
inc
pop
xchg
testl
and
xor
mov
add
add
sub
xor
cmp
or
shll
not
daa
push
or
push
sub
adc
inc
sub
ret
pop
mov
dec
adc
test
inc
arpl
ja
jle
jne
pop
inc
jmp
fists
adc
jb
scas
cmp
jmp
sub
cmp
sbb
adc
jge
scas
outsl
xchg
sub
pop
add
xchg
andl
sti
les
lock
scas
jg
add
stos
push
mov
rcl
ljmp
xor
sub
jg,pn
xchg
das
xchg
call
js
push
push
inc
mov
cmp
and
mov
xor
push
aad
outsl
pop
jns
or
add
aas
mov
pop
cmpsl
mov
mov
pop
pop
push
jp
sub
lods
jno
push
lock
fs
adc
out
in
mov
sbbb
ljmp
pusha
adc
loopne
lds
sub
inc
or
add
dec
pop
cmp
mov
test
jge
dec
add
push
add
push
mov
or
pop
ret
mov
push
cmp
xchg
stc
adc
add
outsl
loope
pop
push
fistl
inc
cmp
addr16
pusha
xlat
mov
add
dec
inc
add
sub
sti
fdivs
add
sub
mov
pop
mov
or
add
or
push
or
xchg
cmp
jmp
push
outsl
add
dec
call
or
inc
std
into
fwait
or
out
and
and
add
jnp
mov
mov
dec
cmp
fisubs
jae
xor
add
push
shr
fcomps
imul
es
push
sbb
cmpb
pop
outsb
jmp
xlat
addb
dec
sub
dec
loopne
sub
jmp
mov
jle
ljmp
test
add
xchg
lods
sub
fmul
push
es
js
inc
push
xchg
std
popf
xchg
cmpb
pop
push
je
mov
jmp
lds
in
insl
add
sub
mov
lret
jg
lcall
mov
js
mov
outsb
cmpsb
dec
clc
ret
flds
movsb
ljmp
lret
lret
sub
xor
sub
sub
cmp
adc
dec
or
pusha
and
mov
add
repnz
xchg
push
pop
jge
cmp
or
fsubrl
repnz
and
ret
adc
adc
mov
cmp
jl
xchg
xchg
xorb
scas
cmp
mov
mov
or
outsb
cs
mov
popa
xor
lds
jne
jne
std
lcall
mov
fstpt
ljmp
test
xchg
fcoml
and
repnz
fists
mov
cmc
ja
jge
adc
push
pusha
add
mov
add
push
rcl
aad
ljmp
mov
in
ret
pop
andl
in
std
or
mov
cmp
stc
pop
sbbl
adc
mov
xchg
pop
or
mov
jbe
and
mov
or
je
add
ret
test
ret
pop
push
push
inc
idivb
int3
push
cmc
xchg
adc
push
in
sarb
cmpsl
jge
testb
test
push
pop
aas
xchg
or
adc
aaa
ret
and
fs
stos
stc
or
jmp
or
pusha
add
jmp
and
or
cld
push
das
in
cwtl
insl
mov
inc
mov
pop
xor
cwtl
inc
mov
js
jmp
sar
dec
sub
outsl
adc
mov
push
aam
jmp
push
das
jecxz
push
jmp
cmp
aad
push
jae
lods
sarl
pop
push
addr16
pop
lcall
mov
dec
mov
mov
ret
jmp
add
sub
jmp
or
or
fcoml
sub
daa
das
and
int3
dec
jbe
data16
nop
pop
pop
mov
jb
add
inc
add
and
add
insb
cmc
dec
xchg
xlat
adc
mov
jmp
pusha
pop
jne
jmp
pop
xchg
outsl
xor
jb
ret
or
jg
sub
push
nop
push
push
adc
add
add
inc
filds
push
push
inc
push
mov
push
lret
xor
push
popf
lcall
js
ret
in
mov
fsubr
mov
push
or
frstor
push
inc
in
mov
dec
insb
push
add
subl
xor
add
pop
pop
psubb
adc
pop
push
mov
test
insb
arpl
push
mov
xchg
shll
jns
jmp
bound
fcoml
cmp
test
push
into
incb
ret
sbb
jmp
cmp
mov
dec
rcrb
sub
pop
dec
xor
lock
jmp
xchg
pop
test
orb
popa
pop
or
jecxz
pop
pop
hlt
or
mov
add
inc
dec
dec
pop
lret
or
imul
pop
mov
imul
dec
out
or
lret
or
add
xor
sarl
mov
and
push
loope
orl
ficomps
mov
popa
xchg
adc
mov
push
add
out
std
daa
xor
pop
push
mov
mov
dec
aaa
lods
add
dec
pop
fiadds
push
jecxz
pusha
ss
loope
cwtl
lahf
pop
mov
jg
lea
not
mull
sbb
hlt
mov
dec
lret
repz
or
cmpsl
xlat
cs
outsl
xor
shlb
popf
fmuls
xor
sti
push
push
out
mov
out
and
lret
aas
lret
add
sbb
es
or
stos
mov
and
cmp
jmp
push
fucom
outsl
gs
mov
cwtl
lret
or
pop
jle
sub
push
mov
hlt
pusha
pop
dec
jo
and
sbb
call
sub
xchg
negl
or
cmp
sbb
inc
dec
jecxz
test
ljmp
or
push
mov
cmpb
leave
xchg
adc
stos
sub
xor
je
jecxz
sti
sub
out
insl
pop
inc
pop
mov
data16
mov
pop
jge
in
stos
mov
dec
dec
dec
shrl
jnp
aad
dec
dec
add
jmp
stos
sub
jae
pop
popa
into
push
jo
jge
adc
jge
mov
sub
mov
shrb
dec
aad
lods
lahf
mov
outsl
push
mov
daa
test
jae
sbb
add
adcb
pop
push
xor
mov
popa
adc
mov
add
out
mov
dec
stc
or
xor
into
popa
repnz
and
push
sbb
jp
adc
in
cwtl
pop
sbb
sub
cmc
or
rorl
jae
enter
sarl
mov
inc
cmp
icebp
rclb
sub
add
or
or
mov
dec
das
jmp
aas
cltd
cmp
dec
dec
out
xchg
decl
fdivl
js
and
and
pushf
sbb
or
mov
rcll
adc
push
mov
adc
jbe
pop
roll
test
jns
xlat
mov
jb
repnz
movsb
leave
add
in
fldenv
jb
mull
cld
lea
stos
add
ret
fiadds
or
pop
xchg
loop
dec
fcomi
stos
or
jnp
xlat
sarb
push
ss
aas
xchg
xor
into
push
pop
lods
pop
test
push
repz
cmp
dec
imul
dec
or
insb
subb
xor
or
sub
enter
mov
mov
inc
mov
sbb
dec
mov
inc
xchg
ljmp
jmp
nop
add
adc
dec
ja
push
fmuls
adc
xor
aaa
push
mov
pop
mov
xchg
and
daa
sub
xor
mov
rcrb
add
repz
xlat
jno
imul
loopne
filds
pop
das
push
xchg
mov
xchg
lret
test
pop
and
xor
ss
loop
lods
leave
sub
jmp
pushl
push
aad
outsl
loop
lds
push
xlat
xlat
loop
int3
data16
stos
inc
test
push
dec
push
pop
jp
imul
ja
test
xor
and
sbb
fs
cs
and
in
stos
mov
insl
loopne
xchg
addr16
jbe
cmp
ds
int
and
sahf
or
dec
clc
push
push
jmp
cmp
and
addb
nop
mov
adcb
shrl
in
inc
ret
popf
jge
mov
inc
jl
or
sub
adc
sub
add
push
test
js
shll
cmp
or
shlb
pop
pusha
fdivs
sbbb
hlt
xchg
in
inc
cmp
or
push
sub
movsl
or
lret
pusha
or
fmul
sbb
xor
mov
pop
push
mov
ficompl
dec
imul
sahf
mov
fsubr
ljmp
or
jg
mov
rclb
adc
pop
out
cmp
fstp
fwait
scas
inc
push
xor
cli
hlt
add
lea
mov
and
imul
nop
dec
pop
mov
rol
inc
xchg
cmp
mov
sbb
ret
cmp
cmp
int
mov
out
add
push
popf
rclb
mov
mov
add
scas
mov
mov
cld
sbb
mov
pop
in
ja
push
push
stos
in
fcoml
jmp
sub
addr16
add
mov
outsl
push
sub
add
jmp
ljmp
push
dec
inc
mov
dec
xchg
adc
movsl
xor
dec
mov
fucomp
cmc
out
or
mov
mov
mov
test
in
push
push
nop
adc
ljmp
pusha
sub
mov
or
ret
pop
xchg
cmp
jmp
xchg
mov
xchg
push
xchg
pop
inc
aad
in
add
imul
add
fwait
or
push
ljmp
jle
or
pop
inc
pushf
or
or
hlt
flds
clc
push
mov
and
loop
in
adcb
push
jle
mov
aas
and
sub
paddusb
push
mov
and
push
push
nop
in
sub
sub
ja
pushf
pop
lret
or
pop
jne
inc
sub
push
xor
insl
addb
push
push
icebp
popa
add
and
lahf
pop
lea
or
addr16
data16
adc
or
in
jmp
pop
pop
insl
ret
out
cmp
div
xchg
and
orb
xor
std
int3
cs
or
jmp
xor
cs
hlt
imul
repnz
in
sbb
sbb
pop
xchg
sti
jmp
pop
mov
test
scas
in
insl
xchg
les
movsl
add
iret
mov
into
xchg
hlt
inc
add
addr16
loopne
sbb
rsqrtps
pop
pop
shl
add
jae
lods
in
scas
repnz
mov
or
dec
cltd
ljmp
adc
das
repz
fwait
push
hlt
push
test
jge
outsb
jmp
mov
xor
mov
mov
out
or
cld
inc
aaa
ret
lock
mov
jo
dec
call
jns
jecxz
jmp
mov
shl
loopne
mov
inc
dec
adc
mov
jmp
lss
push
jns
jmp
repnz
push
or
cld
add
cs
pop
hlt
movsb
bound
aad
dec
mov
xchg
fisttps
ja
pop
cmp
add
hlt
test
push
cmp
int3
fistl
or
pop
jmp
outsb
dec
bound
inc
leave
pop
mov
push
call
and
pop
adc
out
call
sbb
aam
mov
cmp
cmc
mov
out
cmpb
add
cmpsb
inc
mov
inc
incb
jb
xor
xchg
in
add
jmp
sub
mov
push
sub
push
and
mov
pop
mov
cwtl
sub
les
mov
xor
pop
push
push
mov
or
add
adc
cli
aaa
sub
enter
add
dec
add
scas
push
into
pop
dec
les
scas
xor
dec
pop
fs
in
rolb
sti
push
mov
push
aas
xchg
add
shlb
jg
push
dec
dec
leave
inc
movsb
mov
and
push
stos
nop
daa
add
jecxz
and
mov
sti
push
int
add
xlat
aaa
shl
adcb
add
lock
sub
xor
rcrl
pop
xchg
lcall
mov
push
mov
jmp
lods
popa
sti
aaa
in
insb
ja
pop
ret
sbb
dec
xlat
jns
mov
daa
push
pop
cmp
shll
mov
ja
lret
inc
adc
add
cmp
mov
and
inc
int3
dec
sub
push
in
sub
arpl
fadds
push
pop
rcr
jmp
xor
mov
ljmp
mov
out
scas
xor
adc
or
pop
out
cmp
out
pop
add
bound
mov
ljmp
sub
ret
repz
movsb
in
mov
orl
negb
pop
add
cli
lret
iret
inc
imul
cmp
stc
adc
sub
jne
and
test
imul
cvttps2pi
aam
pop
dec
out
test
into
and
sub
push
jbe
xor
testb
jmp
xchg
scas
mov
push
inc
push
ss
mov
sub
int
nop
loop
ja
sub
sub
pop
adc
jb
scas
xchg
push
inc
cli
mov
es
pop
jbe
pop
pop
leave
mov
jg
dec
aad
sti
addl
fnsetpm(287
jmp
sub
cli
inc
pushl
mov
int
pop
inc
xchg
cmp
sbb
dec
call
cmp
mov
xchg
insb
dec
or
or
push
sub
push
gs
aam
sbb
push
je
stos
nop
mov
sbb
cld
jmp
loop
mov
inc
dec
cmp
ret
cmp
and
pop
rorb
add
adc
add
lahf
pop
sbb
or
mov
push
pop
mov
sub
add
pop
hlt
push
push
icebp
sub
lock
scas
movsl
pop
mov
sub
leave
mov
and
add
iret
and
sub
subb
adc
out
fdivr
lret
enter
adc
dec
lcall
sbb
bnd
pusha
sub
add
add
fs
adc
pop
mov
into
pop
push
subl
pop
fiaddl
xchg
ljmp
sub
and
and
jb
cwtl
xor
bound
data16
shl
jp
shl
add
pop
mov
jl
das
mov
dec
sub
mov
add
and
xor
jmp
add
push
push
jns
int
and
pop
popa
adc
test
push
dec
dec
cmpsb
cmp
inc
js,pt
add
jmp
jmp
and
mov
fcomp
daa
mov
cmp
push
cmpsl
notl
out
push
pop
outsl
mov
push
push
shrb
mov
cmp
push
into
mov
sub
jmp
ljmp
repz
pop
jnp
ret
hlt
movsl
adc
jbe
in
pop
movsl
jae
daa
pop
cmp
cld
jno
mov
add
push
push
mov
ljmp
in
pop
xchg
xor
jge
sarb
pop
push
popl
and
in
cwtl
test
shll
fmuls
mov
mov
xchg
jnp
cmp
mov
orl
pop
adc
insb
xchg
jmp
or
xchg
mov
ja
inc
in
xchg
add
push
in
popa
and
cmc
dec
mov
jmp
push
xor
sub
popf
adc
aaa
lds
mov
sub
xchg
mov
pop
cmpsl
cmp
js
lea
pop
sub
jmp
pusha
and
insb
dec
xchg
pop
dec
sub
or
and
popa
sub
mov
pop
scas
or
rcrl
repnz
or
insl
xchg
and
sub
fistps
sti
cmp
icebp
jp
subb
jle
arpl
and
aad
stos
sahf
pop
dec
inc
cmpsl
scas
rcrb
incb
fildl
loope
jne
xchg
push
in
nop
xor
inc
inc
dec
add
jmp
cmpsl
jae
add
loop
icebp
nop
mov
xor
das
cmc
sbb
sub
push
mov
xor
les
xor
jg
mov
adc
mov
adc
call
pop
push
add
and
xchg
xor
cmp
lea
cmp
rclb
inc
daa
rclb
ds
push
xchg
adc
aad
jmp
pop
xor
lcall
rcll
dec
adc
js
jle
ljmp
shr
fbld
sub
ljmp
mov
and
ljmp
subb
inc
adc
and
push
shlb
or
xor
mov
fisubs
xchg
fistpll
xchg
std
or
shlb
and
repnz
jo
mov
negl
xor
iret
fs
or
or
sbb
sub
lret
push
xchg
xchg
jge
xchg
jg
mov
ret
ja
add
push
push
push
pop
push
add
pop
mov
inc
jmp
mov
push
and
je
lcall
xchg
pop
jmp
xchg
stos
cmp
sub
push
cmpsl
mov
int3
ss
ficoms
dec
xor
and
lods
adc
sub
push
negb
cmpsl
outsl
lret
pop
xor
xchg
add
shll
xor
sub
jmp
push
imul
call
cmp
add
incb
stc
pusha
add
pop
and
loopne
dec
mov
mov
ret
fstl
xchg
bound
dec
loopne
dec
pop
or
jmp
aam
clc
sub
add
mov
xchg
mov
neg
loop
cmpsl
idivb
xlat
inc
jecxz
adc
outsb
jns
pop
test
xchg
xor
icebp
insb
stos
cs
jp
or
cmp
push
add
push
mov
jge
or
inc
pop
pop
std
xor
adc
ljmp
sahf
pop
lahf
incb
mov
shrl
bound
xchg
or
addl
jmp
xchg
mov
adc
pusha
imul
jmp
pop
jmp
jmp
repnz
ja
pop
and
pop
push
adc
stc
pop
imul
in
nop
pop
mov
andb
iret
jne
pushf
or
pushf
xor
jnp
sub
jp
jle
pop
sbb
out
push
outsb
push
scas
inc
and
jno
jmp
pop
dec
mov
xor
daa
cs
sbb
push
testb
subb
add
mov
xchg
mov
push
or
push
adc
jmp
jmp
fdivr
ret
push
mov
movb
sbb
ds
pop
sbb
arpl
xor
jl
lret
lods
gs
ret
jo
mov
sbb
jp
pusha
scas
leave
push
das
repz
leave
repnz
pop
xchg
sbb
movsl
jnp
lods
mov
adc
xor
jmp
rolb
das
add
jle
or
mov
fbld
aas
and
mov
inc
pop
jge
adc
push
pushf
out
fisubl
mov
adc
pop
add
sbb
sub
or
fcomip
sbb
dec
je
mov
inc
dec
and
mov
jmp
jg
and
and
cltd
or
addl
test
repz
mov
gs
loope
hlt
lea
fcmovnu
daa
add
test
out
fidivs
rcrl
push
daa
add
cld
xchg
dec
mov
nop
maxps
pop
pop
mov
push
movsb
add
lock
cld
lcall
push
and
ficomps
push
or
mov
add
loopne
jmp
mov
test
pop
adc
dec
fsts
in
mov
jg
mov
mov
jge
pop
mov
jmp
filds
jge
dec
sahf
movsb
pop
mov
lock
sbb
and
jmp
aaa
push
jl
dec
sub
les
sahf
test
jg
xchg
popa
popf
sub
push
nop
add
mov
add
mov
sbb
mov
or
sub
push
jne
sbb
filds
sbb
push
cmp
cmpsl
jge
call
sub
jmp
pop
mov
and
ja
xchg
sub
jg
jle
cmp
cmp
jmp
sub
jmp
rcrl
xchg
jg
rol
add
fcomp
jmp
jne
pop
add
sbb
aad
xor
cmp
movsl
dec
in
mov
adc
cmp
dec
test
push
push
sbb
pushf
push
sbb
fisttps
adc
mov
add
stos
pusha
mov
dec
aam
movsl
dec
add
pop
pop
jnp
popa
div
push
inc
mov
movsl
jg
jnp
xor
pop
sbb
inc
sbb
sub
push
mov
lods
fs
sete
pop
push
add
xor
stos
std
jecxz
push
adc
sub
ja
in
mov
jb
pop
pop
and
mov
cmpsb
ds
cmpl
sti
pop
push
in
testl
pop
js
mov
pop
push
mov
push
test
push
aam
int
add
sarb
je
mov
pop
add
inc
insb
jb
orb
push
add
jmp
je
nop
or
jmp
mov
and
push
jmp
gs
pop
shr
not
dec
sub
pop
out
jge
inc
js
adcl
shl
ljmp
rcrb
cmp
add
inc
cmpsb
in
cmp
sbb
hlt
mov
cmc
mov
push
inc
fiadds
stos
sub
jg
fcoml
cmp
mov
lods
jmp
popa
pop
lahf
pop
imul
mov
pop
add
repnz
cli
cmp
push
adc
dec
cld
xchg
xchg
out
mov
or
out
xor
outsl
incl
or
mov
in
daa
aad
push
jmp
mov
inc
pop
push
addr16
xchg
mov
pop
imul
jno
jmp
inc
stos
add
jle
or
add
jg
inc
cmp
adc
ljmp
adc
aas
add
dec
sub
cmp
movsb
fdivl
ljmp
jmp
jmp
push
dec
pop
fdivp
ftst
setno
xchg
insl
out
add
or
ljmp
pop
mov
pop
pop
push
cmp
test
mov
cli
lcall
and
pop
sub
and
or
pop
ja
jb
mov
mov
add
nop
jmp
clc
jnp
and
or
jno
bswap
outsb
xorb
repnz
dec
daa
dec
addr16
and
cli
out
sahf
mov
sbbb
pop
mov
mov
not
in
jge
xor
subb
clc
lcall
or
notl
jne
loop
jl
andb
sbb
out
or
push
sub
fcoml
frstor
jle
cld
sub
inc
mov
xchg
das
sbb
xorb
pusha
jg
outsb
popf
pop
roll
and
push
pop
jle
aad
fadds
add
sub
insb
jmp
inc
int
dec
sarl
xor
int
cwtl
add
push
dec
and
xor
and
pop
add
idivl
and
jecxz
adc
push
mov
lods
push
mov
hlt
invd
push
mov
outsb
outsb
xchg
stos
in
outsb
inc
mov
ret
sub
nop
xor
clc
in
aam
cmpsl
je
or
mov
push
or
adc
sti
and
nop
or
dec
jmp
test
mov
sarl
fadds
mov
add
loopne
add
xor
push
xchg
fsubl
sub
and
jmp
add
test
idiv
pop
mov
insb
pop
out
lds
outsb
cmp
xor
add
or
jmp
lahf
jno
cwtl
or
lods
lods
js
rclb
or
mov
jbe
jmp
adc
fisttpl
pop
imul
loop
add
xchg
inc
test
mov
mov
clc
incl
and
add
push
stos
mov
adc
in
dec
adc
jmp
pop
stc
push
test
lea
adc
adcl
repnz
xorb
aad
shr
and
inc
cwtl
jge
sub
leave
pop
test
or
into
je
imulb
xchg
xor
sub
test
test
mov
or
outsl
push
ljmp
xor
pop
out
inc
gs
insb
shll
or
jns
xor
repz
xchg
enter
and
std
pushf
pop
cmc
jne
pusha
ja
aam
add
in
sbb
bnd
repz
jg
push
aam
pop
imul
push
popa
jne
add
jae
or
lahf
dec
aas
jmp
mulb
insb
adc
mov
push
cmp
xorb
push
mov
cmpsl
test
insb
add
mov
dec
mov
fists
push
lea
sbb
inc
inc
mov
les
ljmp
add
xor
iret
clc
dec
gs
push
nop
lret
sub
pop
mov
mov
push
mov
push
int
xor
aas
jecxz
pop
in
movsb
mov
push
cwtl
in
mov
imul
fdivl
sbb
outsb
mov
push
and
rcrl
cmp
add
jle
jbe
loope
add
pop
jne
inc
add
pop
cld
cmp
jae
es
inc
imul
stos
arpl
mov
mov
add
cmp
aaa
inc
mov
jmp
pop
pop
pop
jb
sub
cmp
idivl
add
cmp
std
inc
pusha
jb
lcall
lock
and
je
dec
jge
adc
in
dec
in
mov
movsb
push
or
ljmp
insl
push
xor
adcb
xlat
dec
shrb
cmp
sbb
pop
pop
jg
pop
pop
cwtl
aam
push
repz
mov
enter
xchg
call
ds
sub
sarb
dec
out
or
mov
sub
pop
cmc
out
and
push
int3
pop
mov
push
cli
out
mov
iret
adc
mov
sub
push
inc
dec
sub
je
fsubrl
shlb
jg
out
mov
mov
insb
pop
shll
jmp
xchg
push
imul
or
lahf
popa
mov
jnp
sti
out
mov
mov
pop
jmp
push
push
sbb
pop
mov
pop
jno
mov
xchg
dec
movsl
cld
push
std
out
push
movsl
fstps
mov
in
mov
mov
mov
xchg
sbb
xchg
shlb
mov
sbb
ret
insb
mov
mov
jp
ljmp
mov
jp
mov
shrb
out
mov
pop
mov
das
jmp
outsb
sbb
mov
pop
jmp
sub
mov
add
and
jnp
push
cli
adc
dec
movsl
cld
jmp
in
mov
jmp
lods
fsubs
inc
and
adc
mov
sub
pop
stos
repz
push
lahf
jo
mov
lods
int
pop
mov
dec
das
shlb
inc
pushf
add
nop
leave
add
pop
pop
pop
fs
in
scas
pop
jg
pop
fs
dec
pop
mov
imul
push
mov
inc
xor
pop
cld
cmovnp
push
test
lds
pushf
and
jbe
pop
shl
mov
add
jns
adc
out
subb
outsl
jo
fistpll
xor
jmp
xchg
fbld
ds
cltd
lret
mov
das
push
cmp
or
shlb
pop
psubsw
call
int3
push
jmp
xchg
xchg
int
movsl
sub
loopne
in
in
js
push
or
xchg
idiv
jmp
dec
in
mov
sub
push
gs
push
push
test
and
lcall
data16
mov
sub
or
decl
push
push
addr16
mov
jb
int3
pop
incb
xor
cli
mov
out
xchg
ja
les
jge
repz
lds
dec
ret
add
stc
and
pop
clc
cmp
mov
push
mov
imul
frstor
push
insl
enter
xchg
mov
addb
in
lret
or
pusha
testb
sub
add
jno
sub
push
mov
add
pop
mov
movsb
or
sbb
push
push
xor
push
pusha
out
lahf
into
and
xchg
push
cmp
pop
push
push
sub
addr16
jno
cltd
inc
leave
data16
inc
sbb
jb
or
out
inc
lahf
jmp
insb
ljmp
mov
xchg
stc
or
test
je
add
dec
out
xor
mov
jmp
xor
mov
or
add
inc
ret
mov
repnz
imul
xchg
ja
cmc
in
xchg
mov
push
or
add
pusha
ja
xor
pop
pop
movsl
mov
das
push
call
adc
js
mov
ficoms
aad
clc
adcb
pop
jmp
lret
dec
stos
lret
das
add
call
pushf
leave
xchg
adc
push
into
and
or
sub
jmp
push
sahf
inc
inc
push
mov
pusha
sub
sbb
jmp
popw
jns
and
and
jbe
jbe
loopne
xchg
pop
push
loopne
cmp
xor
dec
sub
mov
pop
pop
pop
fcomps
adc
or
daa
imul
xchg
or
or
daa
dec
and
jno
cld
negl
popf
and
or
dec
sbb
int
jmp
das
mov
push
movsl
clc
lret
xchg
mov
cmpsb
cmp
jnp
add
addb
cmp
je
jmp
test
add
fs
lods
add
add
mov
pusha
in
and
loop
ret
dec
jge
inc
or
pop
pop
cld
negb
add
xor
xchg
not
jmp
pop
dec
inc
adc
or
lods
mov
sbb
add
ret
push
push
push
mov
adc
and
mov
add
sbb
adc
je
inc
int3
lods
mov
xchg
cmpsb
fdivl
imul
sub
dec
incl
gs
dec
cmp
cmpb
sub
mov
adc
mov
lcall
dec
call
xor
dec
shr
sti
add
mov
or
shll
cs
add
jmp
xor
xor
add
ds
dec
pop
push
or
movsb
pop
mov
push
mov
and
add
subb
lahf
cwtl
dec
add
clc
xor
out
lret
xorl
push
test
fcmovbe
addr16
add
iret
mov
lock
sub
cmc
xor
mov
add
dec
data16
cmp
add
xor
jmp
mov
mov
pop
cmp
shld
cmp
out
jle
fcmovu
repnz
mov
sbb
out
sbb
dec
arpl
mov
adc
push
pop
xchg
ficoms
jp
and
call
cmp
leave
sub
add
sub
xchg
jecxz
movsl
shl
cld
stc
dec
sub
filds
ret
out
jg
inc
push
mov
nop
sbb
sahf
inc
aas
daa
ljmp
test
jle
add
push
pop
and
mov
fisubs
cmp
test
and
xchg
loopne
jmp
cmpsl
imul
lcall
cmpsl
or
arpl
xchg
in
fimuls
mov
push
or
shl
add
or
or
mov
mov
xlat
popf
insl
push
push
cmp
vpcmpequw
inc
sub
xor
lret
or
push
and
lahf
inc
into
pop
insb
xor
loop
dec
mov
aad
pop
int
popa
setg
jnp
sbbb
add
mov
push
icebp
incb
inc
pusha
cld
jmp
jp
out
lds
push
jnp
es
shrb
jbe
shl
inc
jae
push
push
cmp
popf
daa
cmpsb
xorb
nop
jnp
jmp
aam
fmull
mov
adc
fistps
and
cmp
mov
out
push
jle
loope
cmp
mov
inc
pop
sub
sarb
jge
dec
inc
pop
xor
lret
push
and
dec
push
loop
jnp
call
or
inc
pop
and
in
add
rcl
xor
in
mov
pop
add
aad
cld
inc
in
cmp
jns
sub
imul
mov
stos
cwtl
push
jmp
rorl
aaa
pushf
dec
ss
xchg
dec
fiaddl
add
ds
jmp
cmovbe
leave
inc
push
add
dec
or
lods
adc
push
js
or
cmp
test
sbb
inc
stos
outsb
inc
mov
in
jp
into
inc
add
push
push
sub
in
mov
pop
dec
mov
pop
jo
jl
rcl
and
or
adc
adc
or
andb
sub
sbb
addr16
mov
in
mov
pop
sub
es
push
in
xor
leave
or
ja
jo
bnd
mov
mov
sbbb
add
add
jge
ljmp
inc
movsb
adc
pop
push
inc
inc
sub
lods
test
cmp
xor
mov
push
xlat
xor
fimuls
dec
in
ja
out
xor
jge
push
and
pop
pop
xor
xor
jge
outsb
mov
les
jecxz
sub
aad
xchg
test
vmread
shr
notl
xlat
mov
pop
or
lods
sub
clc
cli
and
faddp
jmp
push
sbb
mov
push
jmp
in
xor
or
das
lds
int3
or
hlt
cmp
fucomi
push
xchg
push
int3
push
inc
add
xor
fs
popl
inc
inc
push
int3
push
dec
cmpsb
or
dec
aad
or
sub
ud2
or
lods
std
add
xor
pop
lods
adc
adc
mov
movsb
inc
mov
test
dec
mov
jne
icebp
adc
sbbl
lods
jl
push
sarb
loopne
or
fldt
add
fsubr
xor
notb
fs
pushf
outsl
and
aam
stos
mov
inc
fstpl
inc
gs
clc
xchg
xor
or
sti
cmpsb
lcall
fucom
sbbb
ret
movb
outsl
jbe
enter
fisubl
jle
imul
and
cmp
aam
movsb
push
mov
or
add
dec
xchg
mov
mov
ret
adc
xchg
push
lahf
add
add
and
in
add
push
xor
add
sub
xchg
mov
cmp
push
pop
enter
ret
push
inc
cli
arpl
jnp
mov
incb
in
insl
cmp
mov
mov
rclb
add
shlb
jno
jns
pop
movsl
hlt
aas
mov
pop
out
sub
sbb
xor
aaa
scas
add
popf
iret
adc
outsb
jns
adc
xchg
mov
sub
les
dec
add
push
or
add
nop
xor
ja
popf
cmp
add
popa
shll
cld
add
test
aas
int
jecxz
or
jno
inc
pop
jg
jo
cmp
stos
mov
ret
jno
repz
cwtl
cmpsl
jno
push
and
jo
lods
add
scas
mov
mov
lahf
ret
lock
mov
repz
add
cmp
pop
jg,pt
add
in
cmc
and
inc
pop
fdivr
clc
mov
dec
jp
stos
fldl2t
mov
es
into
add
jle
jnp
pop
fs
scas
adc
clc
loope
push
enter
lahf
mov
xlat
inc
pop
add
fiaddl
push
xchg
hlt
fldenv
orb
jg
stos
xor
pop
ds
inc
cmp
subb
add
idivl
xchg
xor
pop
add
aam
push
cmpsb
sub
jo
mov
add
xor
cld
aaa
or
mov
mov
and
add
pop
mov
add
push
lock
mov
mov
rorl
das
dec
and
mov
int3
adc
cli
aam
mov
add
test
pop
in
jp
mov
shll
xor
xorb
cwtl
add
ja
pop
loope
int
inc
cmp
aam
arpl
in
adc
mov
push
sub
inc
jle
ret
lret
push
int3
inc
test
xchg
sbb
rolb
sub
dec
testl
lret
shll
cmp
and
inc
in
push
imul
subb
jp
or
and
add
mov
xor
dec
faddp
adc
pop
sbb
jle
and
cltd
inc
je,pn
add
mov
repnz
aad
sbb
pushf
add
ljmp
cli
add
aad
xchg
add
test
add
daa
jb
nop
push
add
dec
pop
rcll
sub
inc
fucom
jl
mov
daa
repnz
or
xor
fisubs
xor
cltd
or
mov
cmp
jae
xor
pop
mov
pusha
adc
mov
lcall
rcrb
add
icebp
lods
shr
leave
push
xchg
or
cmp
imul
test
int3
nop
in
sub
mov
mov
imul
in
dec
mov
lods
iret
sub
inc
lds
das
movb
aaa
loop
stos
aad
cmp
adc
mov
add
sub
adc
dec
test
ss
bound
add
xchg
dec
aam
add
pop
fdivs
enter
fildll
mov
sub
rorb
icebp
push
sbb
in
cmp
cwtl
push
das
std
pop
rol
add
or
push
dec
outsl
jae
or
add
xchg
lcall
mov
push
ljmp
fs
xor
aad
es
leave
out
mov
iret
rorl
pusha
xorl
in
mov
rol
shll
or
xor
sub
sti
bound
mov
cli
out
cmp
inc
aam
popf
scas
jle
nop
aaa
fiadds
sub
mov
sbb
add
test
or
incl
cwtl
aaa
add
add
aas
leave
rorb
test
adc
dec
add
inc
jmp
cltd
rcrb
push
pop
out
add
cmp
add
pop
mov
mov
pushf
add
sub
sub
orb
sbb
int
fldenv
aaa
repnz
adc
in
and
lret
rclb
adc
loopne
add
out
mov
into
fistl
and
sub
outsl
mov
xor
scas
aaa
dec
and
ds
test
cli
ret
fsubr
cmc
push
fildl
jo
sar
out
adc
pop
sbb
add
aaa
push
mov
lahf
sub
jb
mov
cwtl
jnp
inc
add
pop
out
cmp
mov
imul
add
push
and
mov
mov
mov
and
insb
ret
jmp
icebp
mov
pusha
add
xchg
mov
xchg
ret
clc
or
sbb
push
into
add
jge
adc
addb
orps
mov
add
fdivs
cmpsb
push
ret
pop
adc
mov
xchg
add
shlb
sti
mov
and
pop
bound
pop
mov
rcrl
mov
es
aam
cmpb
cmp
add
cmp
push
ljmp
out
sbbb
or
push
pusha
jl
jo
mov
add
or
jae
orw
cmp
mov
jecxz
stos
sarb
and
lods
and
cmp
outsb
loopne
push
scas
and
add
cltd
pop
insl
mov
jo
or
mov
enter
outsl
lods
ds
mov
es
andl
add
adc
das
testb
ds
add
ss
add
imul
lods
add
xor
xor
sbb
xor
es
push
jmp
stos
jne
sbb
notb
mov
and
pop
insb
mov
push
xor
add
xchg
or
mov
fadds
sub
out
rcr
xor
mov
iret
imul
push
fcompp
insl
enter
and
push
outsb
add
out
popa
jnp
das
mov
adcl
cs
pop
shr
and
pop
cmc
add
mov
jne
iret
out
sar
and
mov
inc
fbld
shlb
push
call
cmp
fwait
roll
mov
push
call
push
dec
icebp
or
pop
rcrb
mov
lret
xor
stc
adc
ljmp
inc
xchg
or
jle
cs
loope
sbb
jne
mov
popa
xor
ja
cmc
ds
mov
mov
mov
lods
add
in
push
cmc
int3
and
mov
push
jo
pop
fwait
sbb
jp
push
jecxz
push
add
push
sbb
pop
add
incl
mov
lahf
xor
pop
movsb
mov
arpl
aad
out
cmp
dec
xchg
ja
dec
sub
sbb
and
inc
pop
pop
outsl
or
mov
jo
push
lds
in
jg
xchg
out
lea
mov
notl
add
or
add
xchg
mov
sarb
push
das
es
xchg
rolb
adc
add
lds
repz
cltd
push
pop
in
push
dec
movswl
pop
enter
ss
dec
mov
sub
add
lea
sub
mov
sub
xchg
icebp
dec
lds
in
mov
jp
or
push
xchg
in
dec
ret
gs
pop
cmp
movsb
int
dec
ljmp
jb
ret
mov
add
pop
std
pop
and
lock
pushf
adc
stc
pop
xlat
sarb
adc
add
outsl
jne
js
cmpsb
sbb
movzwl
inc
push
in
cmc
pop
stos
xorb
push
pusha
xchg
mov
fsubrl
movsl
adc
arpl
or
addb
loop
inc
faddl
shrb
inc
jecxz,pt
mov
dec
rorl
outsl
jnp
lods
or
repz
adcb
jge
xchg
add
stos
js
aaa
jo
sbb
mov
cmpb
in
pop
pop
and
imul
xor
fs
orl
outsb
movsb
add
pop
and
push
and
cs
dec
cli
add
jbe
xchg
add
mov
fwait
mov
add
aam
out
cld
sbb
add
repnz
xchg
call
push
sbb
mov
add
mov
sub
out
into
lds
xor
cmp
rcr
shrb
mov
jbe
push
sti
addr16
js
adc
sbb
lea
loopne
pop
add
push
cmp
sub
or
mov
cmp
mov
add
xchg
cli
shll
pop
bound
sbbl
in
and
jno
fildl
or
lea
adc
fmull
in
mov
jnp
ja
xor
addr16
xchg
adc
cli
test
inc
pop
mov
push
es
add
aaa
movsl
aam
in
adc
lods
add
push
adc
cwtl
jbe
daa
or
add
lea
outsb
mov
xchg
inc
inc
out
jg
jge
cmp
aam
adc
pusha
inc
sbb
push
pop
adc
into
xchg
inc
push
loopne
cmpsl
mov
xchg
in
int
push
mov
lock
jb
inc
sub
push
aas
add
sahf
clc
add
lret
js
xchg
pop
sub
out
cwtl
insb
push
jg
arpl
test
or
mov
inc
imul
stos
mov
or
jge
loopne
lea
pop
pop
add
sub
sbb
add
pop
test
popa
scas
addb
cmpxchg
dec
xor
in
mov
add
push
imul
or
sub
mov
dec
cmpsb
push
mov
out
cmc
and
movb
xor
loop
sub
dec
in
movsb
jb
jmp
jne
inc
ret
and
pop
dec
push
lds
pop
xchg
inc
xorb
add
add
sbb
xchg
jo
add
adc
cs
add
cmp
xlat
aaa
dec
push
mov
in
mov
shufps
ss
call
movsl
shr
int3
leave
sbb
jns
fiadds
add
cli
lea
in
leave
imul
mov
int
xor
hlt
js
add
and
stos
in
imul
or
fldl
enter
ds
and
mov
loopne
test
pusha
pop
push
les
inc
movsl
cmp
mov
test
dec
clc
push
popa
mov
mov
or
arpl
pop
outsl
cmp
jbe
jl
dec
cld
iret
xchg
add
testl
and
mov
dec
add
shlb
pusha
push
pop
es
arpl
out
pusha
int
push
push
xchg
add
out
addr16
add
dec
jg
jae
enter
cli
iret
sti
aam
arpl
cmc
daa
mov
lret
cmovs
adcb
or
add
xchg
and
scas
sbb
insl
orb
xor
add
call
clc
cbtw
jp
cmp
imul
sbb
ret
push
add
push
jnp
pop
outsl
lahf
xor
cmpsb
int3
in
int
add
lods
shrb
sbb
add
loope
xchg
jecxz
roll
cmp
mov
ds
dec
sbb
clc
xchg
fidivs
loop
addb
icebp
insl
ja
movsl
cmc
add
sbb
stos
or
pop
mov
add
inc
faddl
jbe
inc
sbbb
je
aaa
pop
add
mov
dec
add
sub
loop
or
pusha
outsb
test
cmpsb
push
jne
add
sbb
xchg
mov
insb
xor
jbe
out
pushl
pop
into
or
daa
mov
jecxz
or
and
popf
cmp
fcoms
add
ljmp
jge
push
movsl
xchg
xor
aas
jae
orb
out
stos
adc
int3
nop
mov
mov
fcoms
mov
add
dec
fld
jle
xchg
lea
sbb
and
into
jns
jbe
inc
bound
add
and
or
out
and
push
sub
jg
subb
icebp
adc
insl
sbb
shll
jle
push
xor
xor
stos
movsb
lds
fwait
add
stos
aaa
imul
add
and
mov
imul
popa
arpl
mov
sbb
and
rclb
jmp
mov
adc
mov
mov
xor
js
mov
dec
fadd
arpl
testb
pop
int3
xchg
jg
sti
and
and
into
and
push
dec
outsb
out
mov
add
aam
push
mov
mov
cld
add
fcmovbe
xor
mov
pusha
jns
mov
add
pop
add
mov
inc
cli
add
stos
sub
or
icebp
jbe
xchg
dec
loop
fsubl
mov
popf
mov
repz
add
or
or
ret
sbb
add
add
popa
insb
jnp
cmp
cmp
lret
inc
clc
int3
add
cmp
call
adc
orb
popa
push
pop
pop
ja
jae
inc
dec
out
ret
sbb
mov
mov
mov
fdivrl
pop
inc
sbb
clc
push
fadds
sub
adc
xor
mov
aaa
out
or
adc
pop
mov
push
xor
push
push
jmp
jb
leave
jns
mov
cmp
jns
data16
mov
push
xchg
xchg
shrl
add
sbb
jno
mov
test
inc
xor
cmpb
fadds
aaa
scas
into
lock
rcr
push
xor
movsl
das
sub
ss
and
sub
mov
aad
xor
cltd
out
inc
sub
movsb
add
pop
jl
js
sbb
adc
push
out
popa
dec
adc
inc
mov
xlat
xor
iret
add
loopne
xor
push
addr16
jo
pop
add
or
sub
test
push
lods
adc
xor
adc
nop
inc
sub
pop
lcall
lock
mulb
in
clc
adc
or
add
push
lds
push
fbstp
adc
mov
lret
push
sbb
enter
sub
sub
aam
add
mov
idiv
pusha
xor
je
or
add
addr16
movsb
in
sbb
sarb
pop
sbb
mov
add
pop
cmp
jge
or
shll
ret
mov
mov
push
sub
int
sbb
mov
push
xchg
jo
mov
dec
add
adc
arpl
mov
fmulp
jge
les
sbb
addr16
fwait
nop
fstl
or
jno
inc
xchg
and
lds
and
jle
movsb
add
cmpsl
cmpsb
inc
lret
inc
dec
push
add
adc
jb
push
leave
sbb
jns
cmpsb
add
inc
cmp
pop
push
dec
add
dec
and
sub
and
adcb
test
into
mov
push
push
js
pextrw
outsl
daa
mov
fmul
add
and
push
push
pop
jbe
or
pop
xor
inc
mov
dec
mov
call
or
adc
fs
adc
push
add
movsl
cmp
add
or
pusha
jecxz
mov
add
xor
jle
add
testb
js
mov
call
pop
mov
pop
loopne
insb
or
xorb
shll
dec
and
imul
and
test
push
xchg
lcall
jo
pop
push
rorl
mov
mov
loope
xsaveopt
in
test
xor
or
and
add
scas
mov
jge
lret
mov
out
rcrb
pop
pop
pavgw
inc
lods
pop
mov
pop
add
add
or
xor
lcall
dec
add
dec
cmp
pop
inc
sub
add
outsl
xor
dec
pop
arpl
push
add
aaa
out
sbb
icebp
jbe
or
jecxz
mov
mov
outsl
add
push
movsl
xor
gs
test
shll
fs
mov
mov
test
test
or
shlb
cmp
sub
inc
sub
enter
xor
adc
cmp
ret
repnz
stc
xchg
mov
add
fsts
sbbl
pop
ds
std
jle
cmp
movsb
aad
jmp
ficompl
or
and
shr
imul
inc
cmp
xchg
xor
and
in
mov
scas
subl
inc
xchg
sbb
adc
mov
add
xchg
jp
mov
push
jbe
sub
or
cmc
cmp
cmp
test
jb
lcall
sbb
push
xor
shlb
xor
outsl
adc
test
xor
sahf
cmp
xor
insb
and
insb
xchg
inc
and
pop
inc
outsl
sbb
jmp
adc
loopne
ljmp
loope
jo
xor
outsb
sbb
je
jne
cld
fs
xchg
or
and
imul
add
sbb
mov
inc
inc
pop
inc
add
insb
je
in
imul
adc
test
xchg
lcall
jg
aaa
mov
test
pop
mov
cmp
ret
jne
jo
or
push
fadds
jnp
mov
sbb
adc
cmp
or
adc
jg
adc
cmp
stos
sub
call
inc
xor
cmp
inc
outsb
push
adc
inc
mov
mov
add
and
cltd
fdivr
fisubs
and
loope
dec
or
xor
js
in
stos
cmp
test
adc
adc
invd
clc
sub
mov
into
or
lret
dec
xchg
mov
jo
and
push
arpl
inc
xor
and
cmp
or
push
in
sub
xorb
pop
push
outsl
dec
mov
mov
inc
stos
push
add
subb
xor
mov
add
cmp
and
sbb
insl
cmp
cmp
cli
scas
push
cli
adc
sbbb
out
add
loopne
mov
sbbl
add
in
daa
and
jb
int3
push
and
add
pop
mov
xchg
dec
loopne
add
adc
shlb
and
and
movsl
aas
or
inc
loop
pop
mov
sub
add
or
add
les
mov
mov
pop
jle
repnz
outsb
daa
add
push
out
jecxz
xor
xor
data16
sbb
push
testb
ds
or
leave
add
fwait
pop
jno
dec
aad
mov
and
push
and
dec
cmp
mov
adc
cmp
mov
outsb
cli
adc
adc
xor
out
sub
ds
xor
adcl
or
rclb
movsb
xor
xchg
mulps
pop
scas
mov
sbb
jle
idivb
call
rcrl
lret
add
fistps
inc
add
dec
push
add
mov
pusha
or
mov
popa
and
stos
sarb
adc
mov
hlt
in
add
fimuls
in
mov
or
into
xchg
cld
cmp
das
mov
enter
dec
call
jns
sub
xor
push
xchg
fs
stos
add
inc
push
cmpsb
outsb
test
test
gs
add
into
in
popf
imul
lds
xor
and
fmul
cmc
dec
int3
pusha
mov
inc
ret
sub
mov
les
or
inc
shlb
and
push
fucomip
inc
enter
add
mov
push
xchg
pusha
add
add
pop
push
sbbb
push
out
xchg
movl
jl
cs
int
jns
cmc
add
rcl
outsl
addr16
or
adc
cmp
andb
jo
push
and
ss
cmp
add
add
stos
das
xorb
aam
mov
arpl
test
dec
push
addb
push
adc
shlb
push
call
mov
xor
xor
pop
fcomp
adc
or
test
test
jb
fidivrs
cwtl
test
and
insl
jne
aaa
lcall
pop
je
add
shll
or
cmp
mov
mov
data16
adc
cmp
jb
mov
shrb
or
andb
and
addr16
jne
addl
add
dec
es
loope
jo
jmp
and
push
adc
es
xchg
fsubs
adc
ss
add
inc
cmp
mov
push
pop
je
jbe
xor
mov
lds
and
pop
jnp
dec
pop
js
fidivs
add
pop
push
push
movsl
in
push
loopne
sub
test
dec
dec
add
stos
es
bound
xchg
add
testb
sar
pushf
xchg
mov
js
idivb
push
idivb
jmp
dec
mov
push
rolb
push
mov
xor
femms
imul
sub
mov
popa
out
or
dec
dec
add
adc
jg
faddl
cmp
in
cs
mov
mov
addr16
lods
and
and
adc
cmp
and
je
pusha
pop
scas
popf
adc
adc
dec
or
rclb
gs
or
push
pop
push
cmp
je
push
mov
sub
mov
pop
cli
shll
shlb
notb
int3
and
add
jb
add
subb
push
mov
dec
or
call
shlb
add
dec
sbb
or
sbb
add
sub
mov
xor
or
mov
cmp
addl
xor
push
add
sbb
push
push
rcrl
xchg
adc
add
dec
iret
lods
lods
push
mov
ja
je
ds
adc
xor
lock
mov
es
push
icebp
aad
rcl
inc
or
dec
clc
shlb
cmpsb
adc
add
add
inc
cltd
push
aaa
rorl
xor
hlt
shlb
pop
mov
cld
cwtl
repnz
cmp
pop
dec
mov
add
push
js
aad
mov
lcall
jne
nop
fsubs
pop
jb
jg
cmp
int3
mov
pop
jmp
jnp
imul
mov
xor
mov
es
int3
pop
out
adc
loope
inc
xor
inc
ret
cld
jecxz
sub
lret
aam
popf
in
push
mov
orb
cmp
jbe
imulb
adc
mov
fs
adc
inc
mov
dec
movsl
mov
inc
ret
les
fs
cltd
clc
add
faddl
dec
cld
pop
inc
mov
pusha
aaa
cltd
mov
in
or
imul
lods
jbe
sbb
or
outsl
fldcw
sub
loopne
dec
nop
fs
add
sub
pop
fldcw
loopne
and
imul
push
andb
mov
adc
push
ds
mov
mov
add
adc
test
es
inc
sub
enter
xor
sbb
inc
sub
and
jge
xchg
or
orb
xor
push
mov
or
arpl
in
loop
dec
mov
inc
les
sub
test
xchg
mov
push
mov
insl
mov
test
adc
mov
inc
xor
xor
xchg
adc
inc
jno
out
inc
xchg
push
clc
test
and
stos
fcom
xchg
dec
imul
jb
cmpsb
sub
fadds
lea
jns
jp
adc
adc
fisubrs
or
push
sub
insl
push
inc
enter
ror
sbb
add
cmp
nop
adcl
or
xor
and
inc
outsl
xchg
cmp
jbe
inc
test
push
jae
dec
jns
je
cmp
adc
inc
sbb
pop
inc
jp
sbb
rcl
lret
mov
imul
sbb
xor
pop
in
add
or
mov
jmp
xchg
es
push
mov
xor
test
or
push
popf
pop
cmp
imulb
pusha
pop
leave
or
jae
pop
pop
roll
jecxz
bound
aad
sti
xlat
pop
cmp
leave
mov
insb
add
jb
mov
push
and
mov
pusha
push
lret
pop
shrl
in
les
inc
add
lds
add
add
mov
out
scas
add
pop
popf
popa
repnz
ret
jno
adcb
loop
and
push
out
fidivs
and
mov
pop
jmp
pusha
push
adc
inc
xchg
cmp
loope
dec
adc
push
lcall
sbb
jo
mov
pop
stc
ljmp
pop
or
ret
adc
jge
movhlps
popf
lcall
rolb
daa
xchg
xchg
jo
push
add
mov
aad
lods
mov
mov
daa
fldt
lret
and
adc
pop
js
mov
mov
push
divl
popa
xchg
pop
and
jo
mov
pop
and
pop
mov
mov
inc
arpl
dec
shrb
xchg
inc
insl
pop
rcrb
add
pop
and
xchg
pop
mov
into
mov
adcl
jne
mov
pop
mov
ret
mov
xor
sbb
in
pusha
addr16
ljmp
add
lcall
sbb
jl
or
shrb
push
adc
and
mov
push
cmc
in
add
mov
add
in
test
xor
dec
xor
sbb
pop
scas
or
xor
sbb
outsb
loop
and
int3
sbb
lahf
imul
and
dec
and
mov
vpunpcklqdq
test
mov
rcrb
or
or
popf
jae
jns
adc
push
scas
mov
outsb
push
or
adcl
xor
inc
ljmp
push
cmpsb
js
out
aam
daa
jmp
mov
pop
fstpt
adcb
sbb
mov
push
mov
mov
clc
rorb
loope
xor
sbb
popl
inc
sub
mov
fnstsw
jle
fs
or
mov
stos
outsb
fs
sahf
clc
jecxz
loope
mov
daa
add
ret
js
mov
mov
push
ret
inc
inc
insl
lret
adc
sbb
test
dec
xchg
lahf
xchg
mov
or
cs
rol
test
pop
dec
or
jl
push
lcall
add
cltd
or
adc
or
out
adc
lods
adc
inc
jo
inc
and
mov
or
imul
bound
scas
fmul
sub
pop
enter
push
insl
inc
insb
mov
popa
and
dec
pop
xchg
jb
jne
je
mov
imul
add
or
shrb
mov
mov
addr16
lret
xchg
xchg
test
jl
jmp
idivb
jae
mov
dec
or
mov
inc
sub
lret
std
inc
test
mov
mov
xor
stos
and
inc
push
test
pop
adc
pop
or
mov
adc
push
or
sub
and
push
faddl
and
jo
and
push
daa
jp
ljmp
loopne
es
add
xchg
sbb
stos
sbbb
test
and
stos
sbb
dec
add
adc
sbb
mov
std
test
mov
stos
ret
rcl
add
ljmp
mov
fyl2x
ja
lods
aaa
add
push
pusha
clac
pop
and
dec
je
enter
add
mov
cmc
add
jecxz
bnd
pop
out
push
pop
mov
push
imulb
std
loop
loopne
dec
dec
cmp
sub
mov
xor
into
jmp
cmp
out
dec
add
dec
jmp
pop
test
add
inc
mov
loope
add
xor
mov
pop
sub
xor
loop
cmpsl
adcb
cmc
xlat
cwtl
dec
fst
dec
cmp
cli
test
inc
adc
dec
add
jle
dec
add
data16
add
xor
add
push
sahf
mov
push
hlt
adc
repz
pop
mov
cmp
cmpb
xlat
push
stos
jne
dec
inc
jb
push
rolb
add
adc
mov
sbb
push
mov
mov
add
mov
mov
add
or
loopne
aas
mov
jo
daa
in
imul
pop
jnp
add
add
cmp
and
jbe
xor
push
cmpsb
outsb
push
lock
add
xchg
sbb
dec
lahf
call
mov
stc
push
mov
inc
test
mov
mov
js
insl
stc
fistpll
sbb
jo
clc
call
cmp
adc
pop
xchg
out
out
xchg
add
popf
mov
icebp
push
push
jnp
xor
jg
cld
rol
fadds
mov
cmpsb
add
imul
shll
insl
push
sbb
add
or
insb
xor
stc
in
lods
adc
sub
add
clc
push
ss
or
mov
js
lret
shrb
xor
pop
adc
xchg
xchg
inc
add
test
and
jb
mov
sub
enter
add
lock
mov
xor
fwait
add
cmp
xchg
stos
mov
ljmp
push
sbb
pusha
inc
test
jno
mov
fdivs
dec
loopw
push
xorb
lcall
lock
and
loope
cwtl
xchg
mov
ret
add
sub
andb
dec
inc
daa
dec
sub
or
xor
outsb
std
into
jo
les
add
movsl
add
mov
divl
inc
add
cmp
mov
and
aas
dec
ret
add
xor
fwait
xchg
sarl
cmpb
or
dec
add
inc
andb
std
addl
mov
mov
fsub
movl
push
or
out
jbe
xchg
sar
nop
mov
shrb
sbb
cmp
add
arpl
add
push
xor
sti
xchg
scas
add
rcrl
lea
cmpsb
inc
xchg
pusha
push
dec
pop
je
test
outsl
ret
cmp
outsb
lret
add
adc
push
push
add
xor
leave
scas
mov
in
jle
int3
fwait
jo
add
xor
int
dec
insl
hlt
mov
or
xchg
add
pop
aam
add
push
outsb
cmp
in
mov
push
pop
pushf
loopne
add
mov
mov
inc
out
addr16
jge
sub
arpl
lock
mov
and
sbb
aas
add
cltd
fisttpll
sbb
sbb
push
cmp
mov
mov
sbb
sbb
gs
pop
cwtl
dec
sbb
fsts
pusha
push
cwtl
add
popa
push
add
stc
movb
lock
pop
pop
movsb
mov
lea
jno
pusha
outsb
sar
mov
sub
jmp
out
mov
fildll
adc
push
or
xor
sahf
pop
xor
push
cmpsb
jae
xchg
xor
and
aaa
sub
fisttpl
cmp
jle
add
inc
add
mov
adc
mov
dec
xchg
js
sbb
add
dec
xchg
clc
cmp
mov
movsb
xchg
jo
xor
push
aas
xor
xchg
dec
out
add
push
test
shl
inc
push
jne
in
sbb
adc
mov
shlb
xor
andl
je
cld
mov
jp
and
js
bswap
sbb
mov
and
pop
add
jno
adc
add
scas
cmpsl
roll
or
imul
je
push
cwtl
sar
lahf
pop
dec
push
loopne
jo
add
and
repnz
add
loope
ds
imul
fnstcw
jb
add
ret
adc
cmc
out
push
adc
and
add
jp
cltd
xchg
adcb
mov
add
xchg
in
pop
fldenv
push
clc
ret
fdivl
mov
mov
add
repnz
pushf
xchg
xor
lret
inc
cltd
int
dec
fidivs
daa
test
cmp
std
add
cmp
pop
lretw
xchg
nop
sub
into
push
loop
jp
in
pop
pop
imul
rcrb
add
add
and
pop
pop
fcompl
xchg
cmpsl
mov
add
or
mov
sub
movd
push
or
lods
lcall
add
sub
inc
sahf
sbb
cmp
call
test
data16
add
mov
inc
std
cli
dec
add
mov
test
mov
and
and
faddl
enter
mov
scas
pusha
or
stos
mov
jle
fwait
call
fcomps
adc
mov
fst
fistpll
add
popf
pop
dec
fs
lock
mov
sbb
test
pop
loopne
mov
ror
dec
fstpl
js
sbb
or
or
je
jae
add
loope
mov
xchg
push
fs
xor
daa
lret
xchg
leave
jb
ret
cmp
cld
jno
add
stos
dec
sub
es
ret
mov
sbb
aam
outsl
xchg
dec
xchg
cmp
sub
or
or
pop
or
lds
mov
enter
or
push
sub
shrb
mov
cwtl
and
push
pop
inc
cmp
adc
or
mov
sarb
rorl
loop
pop
outsl
inc
pusha
push
fwait
aad
or
dec
add
rorb
mov
and
add
data16
arpl
cmp
pop
mov
mov
and
mov
movl
mov
mov
cmp
xorl
daa
inc
stos
ret
cmp
add
pop
divl
and
sbb
mov
push
pop
rolb
mov
jne
sub
push
and
xor
pop
les
sub
andb
mov
leave
iret
mov
in
dec
or
cmp
ljmp
es
sbb
pop
sub
fcmovb
adc
push
es
call
sbb
pmaddwd
daa
xchg
add
fsubp
outsl
popf
int
outsb
bnd
dec
sub
and
repz
scas
xor
pop
xchg
lcall
icebp
inc
outsl
fwait
out
mov
xor
adcb
out
lahf
nop
push
xor
adc
in
sub
stos
movsb
inc
into
jae
ret
adc
inc
ss
cmp
add
sub
mov
ret
inc
orl
xor
adc
push
lcall
int3
inc
mov
adc
shlb
adc
outsb
pusha
xchg
repnz
repz
jp
imul
xchg
jae
ja
lods
adc
mov
loopne
popf
jnp
mov
out
push
or
jae
shrb
stos
pop
add
jge
nop
sbb
lods
sbb
dec
inc
sbb
jno
dec
push
mov
clc
xchg
daa
xchg
and
sub
sbb
rcll
lret
test
je
mov
and
and
mov
inc
aad
and
sub
dec
mov
loop
cmpb
pop
mov
sbb
inc
sub
pinsrw
sub
mov
test
sub
sub
test
into
mov
or
mov
xor
xchg
or
sbb
push
adc
and
popa
inc
mov
cli
aad
jl
cltd
enter
lock
push
or
mov
aad
inc
lcall
cltd
dec
fwait
xlat
or
sbb
dec
mov
movsb
mov
fwait
jecxz
fsubs
out
in
inc
xor
test
inc
mov
adc
mov
ds
sub
enter
pushf
insb
xor
lcall
cltd
fcompl
mov
repz
xchg
data16
incb
and
jge
add
mov
and
mov
push
ret
call
dec
or
nop
lahf
or
pop
jae
jl
ja
mov
pop
adc
inc
rcrb
mov
push
xor
les
sbb
scas
mov
mov
push
ja
inc
les
mov
adcl
js
arpl
clc
sub
out
sub
aam
and
shll
cs
adc
mov
adc
inc
loopne
rcll
add
xlat
inc
insl
mov
push
clc
aam
cmpsb
and
pop
inc
push
adc
int3
jle
push
fists
cmp
add
call
xor
ret
xlat
add
xor
lea
push
cwtl
orb
or
and
subl
jg
rol
int
inc
insb
push
mov
or
lods
je
int
xchg
push
and
xchg
jnp
test
sahf
dec
inc
dec
std
pop
add
dec
pop
shll
push
xchg
loopne
jb
rcrb
mov
xchg
adc
insb
lods
xor
mov
pusha
adc
sbb
mov
shll
jo
sub
cld
xchg
and
inc
pop
sbb
push
pusha
mov
pop
sub
ja
idivl
jae
and
cmp
jge
inc
xor
mov
xchg
rcrl
cmc
repnz
clc
push
iret
sub
xchg
hlt
test
ss
cmp
jbe
mov
mov
daa
mov
pop
lret
pop
insb
pushf
dec
mov
pop
mov
xor
sub
mov
cmp
mov
mov
imul
add
nop
les
mov
mov
int
sar
cmp
outsl
sub
mov
fdivrs
outsl
sub
and
bound
les
rol
pusha
and
mov
and
inc
insl
pop
dec
lea
cmp
and
inc
mov
xchg
sub
cmp
scas
addb
ret
xor
add
sahf
jno
mov
xor
inc
push
push
outsb
imull
mov
rcll
ret
out
scas
inc
cs
dec
loopne
pop
push
rcrb
add
shll
iret
inc
push
sub
aam
push
xor
imul
xor
int
fidivl
pop
jnp
inc
push
add
aad
sub
roll
cmp
in
fidivl
mov
and
cmp
xor
inc
fs
in
cmp
mov
push
shrb
int
cs
pop
add
es
mov
loope
into
fildl
cmp
icebp
add
sub
inc
fdivs
rcr
lock
enter
aad
and
xor
icebp
xchg
mov
inc
loope
into
jo
ror
sub
frstor
int
daa
jne
push
cwtl
pop
dec
fidivrl
sub
rorl
add
and
aad
cs
xor
adc
sub
out
pusha
push
rclb
aad
dec
cmp
roll
int
cs
pop
push
add
add
fs
je
dec
adc
push
cs
call
inc
cmp
cmp
sarb
push
dec
xor
clc
xor
sub
xor
call
sub
out
mov
es
push
dec
fldcw
shlb
pop
cmp
shll
and
sub
sub
mov
jbe
mov
adc
sbbb
inc
or
and
cmp
out
fcomp
mov
and
cwtl
and
inc
and
fdivs
lret
rcrl
movb
arpl
or
dec
jno
mov
push
and
sbb
iret
cld
rcrb
shll
xchg
xor
fsubr
inc
inc
arpl
pop
and
sbb
or
out
xor
je
sbb
add
push
fst
and
inc
clc
cmp
movsb
js
fs
cmp
imul
and
clc
ffree
call
int
shlb
stos
ljmp
aaa
pusha
clc
xor
pop
movsb
mov
es
fcmovnu
or
int
and
cld
xor
pop
adc
add
cmp
cltd
out
or
jp
outsb
adc
sbb
cmp
xor
aaa
push
movsl
xchg
lret
lcall
or
sahf
stc
inc
push
add
dec
add
cmpsl
sub
push
sub
andb
clc
fidivl
pop
scas
mov
aaa
fildl
inc
xchg
jp
in
shrb
cli
shll
outsb
fnstsw
movb
jl
lahf
or
jo
dec
movsb
mov
test
outsb
ret
mov
mov
xchg
mov
sub
ja
cmpsl
and
and
out
pop
fstl
leave
rolb
and
cli
add
push
mov
dec
fstp
dec
je
or
lds
push
rol
test
jne
mov
stc
popf
push
inc
loop
sub
inc
sub
nop
dec
enter
scas
dec
pop
faddl
pushf
out
stos
xchg
jp
das
shlb
test
adc
insb
shl
notb
insl
mov
in
add
jl
nop
inc
or
scas
enter
js
adc
or
fmull
cmpb
mov
lods
xchg
push
insb
jnp
in
rol
add
das
mov
or
jmp
push
adc
fldl
out
mov
shl
les
push
dec
out
int
and
lods
cwtl
inc
push
stc
test
cmp
call
or
test
lds
push
sbb
nop
call
je
mov
hlt
and
add
sub
jnp
mov
xor
cmp
aaa
push
cld
add
mov
loop
push
cs
jae
lods
fadd
xchg
jle
or
fsub
jnp
xchg
jo
mov
and
dec
repz
sub
sub
arpl
add
adc
icebp
mov
dec
push
cmpb
jbe
lock
in
and
jmp
cmp
jge
xchg
loope
pop
and
js
lea
mov
jne
or
jmp
dec
mov
or
in
out
test
jmp
int
add
fld
sarb
stos
and
sti
mov
inc
fdivrs
lcall
dec
add
ss
pusha
cmp
nop
push
jecxz
adc
add
std
fisubrs
cmp
mov
add
pop
mov
fisttps
js
mov
adc
fstp
jge
push
mov
clc
sub
cmp
js
int
dec
pusha
xor
add
xorb
xchg
mov
je
dec
ds
jle
jo
cmp
cwtl
cwtl
jecxz
test
in
fadd
jl
mov
test
dec
mov
pushf
sbb
mov
add
jae
add
xchg
andl
in
cmp
icebp
xchg
cwtl
and
jl
int3
ret
into
adc
les
dec
jns
and
test
add
insb
xchg
sub
test
inc
fmuls
inc
and
push
xor
sub
fsub
clc
xor
in
and
jl
adc
fldl
dec
xorb
add
dec
sti
mov
or
imul
inc
es
nop
call
out
arpl
cmp
scas
sub
ljmp
add
xor
xor
in
mov
add
in
inc
pop
aam
imul
out
cmp
test
dec
pop
int
icebp
and
and
subl
cmpsb
sub
mov
popa
ret
loopne
out
or
inc
mov
sbb
int
jae
or
in
inc
mov
mov
cmp
add
push
pusha
add
dec
xchg
mov
ret
pushf
or
add
mov
daa
pop
sti
imul
inc
pop
and
testb
dec
mov
push
xchg
sbb
loopne
or
jbe
push
test
adc
inc
bound
frstor
out
loope
push
lahf
sbb
cmp
insl
jbe
xchg
add
sbb
mov
jp
mov
inc
inc
add
dec
and
outsb
je
shll
jp
aad
pusha
xor
pushf
add
mov
and
jne
add
xchg
dec
or
add
scas
xchg
call
pusha
xor
mov
fldcw
mov
enter
mov
adc
cwtl
loopne
clc
fs
cvtdq2ps
or
idivb
cld
pop
enter
nop
jl
inc
dec
lock
add
call
ret
adc
aas
mov
add
and
lock
cmpsb
and
call
jne
cld
mov
pop
pop
cli
testl
popl
xlat
inc
sbb
xor
adc
mov
sbbl
add
xchg
faddl
cmp
mov
adc
push
xor
sub
pop
add
lcall
add
mov
popf
aam
nop
lods
xchg
xchg
jl
push
cmpsb
mov
in
test
pcmpeqw
dec
mov
mov
dec
pop
adc
or
out
mov
cwtl
lock
pusha
shr
and
sub
dec
test
push
mov
and
sub
push
add
nop
pop
loope
cmp
movsb
inc
dec
adc
test
or
xchg
fcoms
adcb
or
mov
mov
mov
dec
sub
sub
call
movsb
inc
mov
adc
in
adc
dec
add
lahf
sub
and
test
and
xchg
mov
add
add
int3
sbb
hlt
call
inc
push
xor
or
jae
mov
jmp
repz
add
push
and
mov
pop
in
into
push
and
add
fnsave
aad
ja
into
cld
and
push
or
js
lahf
mov
dec
test
dec
in
fstps
sbb
rcr
add
into
cmp
push
call
and
adc
nop
adc
shrb
orl
or
lahf
call
jl
add
xchg
ficomps
les
jnp
mov
out
in
aam
mov
in
pusha
add
dec
enter
add
scas
outsl
add
mov
jno
mov
or
xor
pushf
cmp
xor
sub
push
cwtl
adcb
add
mov
ljmp
dec
mov
or
aad
sahf
sbb
sar
mov
andb
mov
or
call
in
cmp
cmc
mov
mov
adc
std
pop
test
cmp
adc
call
and
xor
xor
inc
out
push
decb
call
inc
dec
out
in
enter
xor
sub
stos
rorl
in
dec
inc
lret
inc
mov
ljmp
fadds
mov
cmp
jmp
rclb
imul
pop
test
out
aam
push
push
jmp
test
dec
fcoml
out
inc
bound
cmp
sub
out
es
add
cmp
adc
cmp
je
fs
sub
std
aas
ds
mov
jecxz
hlt
xchg
xchg
jae
shrb
daa
loopne
int
pop
pusha
sahf
mov
cmp
xchg
pop
mov
pusha
xchg
mov
cs
loopne
dec
nop
add
stos
pusha
sub
cs
andb
add
scas
xchg
call
daa
cmp
pop
call
out
ds
imul
clc
xchg
sbb
pop
fcoms
adc
inc
testl
cmp
mov
nop
sub
push
jp
and
dec
test
pusha
or
add
lea
adc
loope
inc
mov
xchg
inc
xchg
add
and
jne
xor
adc
dec
xor
and
cmp
add
jae
pop
repz
push
lods
lock
dec
out
pop
and
pop
data16
pop
cmp
fcomps
push
mov
add
mov
dec
xor
pop
imul
adc
inc
mov
call
or
xchg
adc
sub
sub
sbb
xor
cwtl
push
mov
lods
repnz
enter
nop
add
mov
xor
sbb
or
adc
and
sbb
dec
lcall
mov
icebp
pop
sbb
mov
aad
aam
test
pop
add
andl
sub
jo
out
xchg
push
daa
mov
lods
dec
add
incl
cli
xchg
push
daa
xor
jae
testl
jne
push
int
lods
or
add
jmp
push
clc
jnp
push
add
repz
and
pop
or
pusha
jns
clc
jmp
mov
and
push
push
add
inc
shrb
loopne
pop
cmp
pop
pop
fcmovb
loopne
and
push
pop
insl
ds
fld
jmp
mov
add
jo
int3
fidivl
iret
and
call
or
or
push
test
xor
pusha
imul
add
cltd
and
sub
into
inc
and
mov
mov
mov
dec
mov
clc
xchg
fmuls
cli
cmp
or
out
pop
aaa
movsl
icebp
enter
test
andb
movsb
mov
jo
incb
push
add
jle
test
or
enter
and
imul
mov
or
cmp
jnp
xchg
dec
add
jae
sub
add
sub
outsl
and
push
adc
xchg
stos
ret
nop
in
int3
sbb
add
push
mov
sbb
jo
rsqrtps
jne
cs
adc
enter
lret
sbb
pop
in
push
fcmovb
dec
xor
lea
mov
je
push
add
in
xchg
clc
and
out
sub
dec
mov
and
cmp
pop
or
jo
mov
popa
jge
inc
rolb
adc
sbb
scas
adc
or
ljmp
mov
lcall
in
xchg
dec
dec
and
or
lods
cmp
ss
dec
sub
cld
xor
arpl
into
cwtl
mov
loopne
in
and
in
mov
sbb
jmp
test
and
jbe
je
insb
sub
aad
mov
outsb
jae
jno
push
addb
and
xor
shrl
sbb
insl
inc
push
sub
pop
and
imul
hlt
cmp
repz
sub
push
inc
out
jns
fdivl
or
icebp
push
cmp
addr16
jmp
add
add
test
loope
push
dec
sub
jb
push
mov
push
cwtl
sub
or
cmp
sbb
mov
or
adc
cmp
adc
and
popa
in
test
add
cld
cmc
ds
inc
sbb
push
andl
ror
mov
jp
add
or
add
jne
cli
push
subb
pop
aam
stc
and
rcll
push
fs
add
ja
sbb
fstpl
inc
mov
arpl
and
ljmp
aam
cmpb
inc
cmp
loop
cli
and
loopne
inc
xchg
fcoml
jae
push
sbb
sub
ds
ss
cmp
sbb
dec
and
push
mov
and
and
adc
ljmp
sub
inc
or
fcmovb
jne
xchg
arpl
int
rcl
jne
pop
mov
mov
les
shl
pop
and
push
jb
mov
subb
pop
nop
or
mov
dec
sub
xchg
mov
bound
cmp
xor
jbe
jno
and
mov
dec
jns
inc
dec
aam
dec
pop
in
push
or
aad
ret
mov
add
popl
leave
pop
add
xchg
in
loope
or
stos
jb
xor
push
xor
inc
dec
flds
test
jno
pop
mov
xor
add
cmc
loopne
movsb
jmp
mov
stos
or
in
adc
lret
enter
or
mov
mov
clc
inc
addb
sbb
inc
shl
clc
cmp
add
leave
push
add
dec
in
sbb
cli
icebp
inc
fs
push
je
stc
sbb
and
sbb
in
data16
jo
dec
push
sbb
jo
mov
sbb
iret
add
push
sbb
add
lea
or
mov
xchg
xchg
mov
xor
jne
sbb
mov
add
cltd
stc
sbb
loope
rcll
les
out
in
jnp
in
stc
and
cmp
mov
mov
mov
jns
cmp
rolb
lret
push
mov
addb
jae
addl
cmp
jo
xchg
loop
pop
jl
add
outsl
dec
fcoml
jp
cmp
orl
insb
sbb
xchg
and
out
and
pop
dec
push
cmp
js
scas
mov
mul
lods
add
push
push
xchg
sub
push
mov
dec
icebp
fdivs
cs
add
mov
jb
idivb
dec
sbb
sbb
pop
add
sub
and
push
nop
adc
and
insl
add
pop
fwait
add
adc
mov
call
mov
mov
add
add
incl
or
test
je
or
pusha
fsubrs
add
imul
pop
adc
pop
in
jl
push
les
sub
sbb
scas
rolb
jne
inc
fimuls
popa
mov
pusha
bound
call
mov
paddb
jne
cltd
daa
or
imul
adc
rorb
lret
in
addr16
mov
std
jb
mov
repz
in
mov
push
sbb
push
dec
roll
cwtl
fldenv
add
xchg
je
out
clc
fs
popa
sbb
repnz
cmp
mov
jmp
out
js
hlt
or
dec
pop
stos
or
xor
int3
push
and
insl
mov
sub
mov
mov
lret
adc
pop
aam
add
pop
pushf
sbbl
inc
cwtl
add
call
cmp
mov
sarl
and
xchg
push
popf
in
dec
xor
push
icebp
int
xchg
sub
xor
out
xor
pop
pop
cmpsb
adc
add
fidivl
pop
xor
push
je
push
add
call
lock
mov
jmp
jne
inc
call
add
mov
inc
pop
jns
ds
jb
das
dec
mov
loop
and
xchg
dec
add
jnp
pushf
or
test
pop
inc
std
inc
insb
adc
or
sub
add
call
sti
pop
add
sub
cmp
add
mov
mov
xchg
cwtl
mov
jmp
rorb
and
shll
xchg
scas
lcall
lcall
mov
rorl
xchg
pop
pop
mov
add
dec
ret
dec
dec
add
adc
adc
ljmp
sbb
icebp
nop
int3
mov
cld
jne
fldl
mov
add
add
sbb
int
dec
int3
add
mov
mov
xchg
cmp
push
ds
mov
inc
jbe
jecxz
cmp
icebp
loope
jne
les
inc
in
loopne
and
testb
mov
xorl
cwtl
test
adc
ds
lret
js
rcl
add
bound
or
mov
add
arpl
cmp
adc
enter
inc
mov
mov
insl
pop
mov
add
out
cmpsb
fidivrl
ljmp
hlt
pop
inc
push
je
out
es
dec
xchg
sub
aad
loop
or
xchg
mov
inc
cmp
cmp
cld
jnp
in
ljmp
cwtl
push
clc
je
bound
cs
adc
enter
repz
add
or
pop
out
enter
adc
mov
pop
cmp
jmp
cmc
mov
pop
xor
push
dec
inc
add
data16
xorl
push
iret
lods
or
pusha
mov
add
xor
loopne
cltd
or
xor
mov
xchg
jo
xor
xor
mov
ss
and
mov
add
stos
scas
pop
repnz
jnp
enter
ret
fucomi
cmp
mov
fcomip
out
jo
or
mov
sbb
mov
sbb
push
insb
sarl
cmp
sub
cmp
xor
sbb
cmp
adc
xor
mov
add
mov
mov
popa
clc
dec
cmpb
lds
sbb
jns
cmp
imul
dec
sub
dec
pusha
jno
sbb
add
lea
mov
std
inc
mov
in
stc
fs
add
xchg
test
jb
pop
fldt
mov
inc
and
adc
adc
call
pop
out
data16
pop
popa
out
dec
hlt
mov
mov
jbe
pop
xlat
rcrb
sub
pop
sbb
repz
pop
aas
inc
adc
je
loopne
inc
push
stos
arpl
enter
inc
mov
fnstenv
mov
shll
adcb
dec
ret
and
cmp
pusha
enter
sbb
out
xchg
and
icebp
mov
jge
mov
decl
xlat
cmpsl
mov
mov
test
push
jns,pt
jb
lods
push
mov
mov
shrb
sbb
add
cmp
js
fsts
push
push
sub
mov
inc
arpl
pop
lock
in
push
addb
shr
clc
or
add
repnz
mov
add
mov
inc
add
adc
push
aam
lcall
xchg
mov
add
aaa
ss
outsl
add
aas
mov
mov
pop
test
fsubrl
gs
roll
dec
cmc
aas
or
mul
popf
and
xchg
rorb
sub
sti
inc
jp
sub
xor
jb
int3
add
pop
rolb
jbe
ds
dec
dec
call
add
ret
test
jno
imull
rolb
aam
outsl
push
cwtl
adc
mov
xor
outsb
pop
mov
pop
repnz
pop
sub
movsl
cwtl
gs
pusha
push
push
pusha
dec
in
inc
je
outsl
and
out
and
and
imul
and
aad
dec
fcompl
jno
or
jae
rorl
sbb
and
int3
loop
outsb
add
sbb
xorb
aaa
daa
aad
sub
cwtl
inc
inc
mov
clc
mov
lods
call
insl
outsb
cwtl
pushf
or
adc
jg
sahf
cmp
cwtl
push
dec
xchg
stc
push
xchg
inc
adc
repz
xor
out
mov
and
add
push
add
fdivr
inc
bound
or
push
inc
lods
xor
rorl
nop
jp
add
sbb
sbb
bound
xchg
adc
cltd
inc
pushf
mov
int3
xor
dec
loopne
jmp
inc
mov
xchg
rolb
and
fwait
cmp
shlb
add
dec
or
movsb
and
dec
pop
or
insl
icebp
jl
fmuls
fsubl
out
xor
rcrb
icebp
movsb
add
mov
cmpl
jne
rclb
add
and
leave
mov
lods
adc
sbb
ret
jne
aas
jns
mov
sub
pop
loopne
xchg
insl
pop
cmpb
adc
test
mov
popa
outsl
adc
addr16
push
adc
add
jmp
mov
and
sub
fs
ja
and
je
push
push
inc
sbb
std
inc
sub
mov
pop
pop
and
sbbb
and
enter
mov
pop
dec
jb
mov
rol
pop
sahf
mov
mov
sub
and
and
fsubs
jno
pushf
push
xlat
sbb
and
and
inc
inc
pop
ret
xchg
mov
mov
push
ret
dec
cmp
and
daa
xchg
popf
test
or
loopne
sbb
clc
test
stos
rclb
inc
inc
pusha
enter
int
cld
push
add
cmp
inc
outsb
push
arpl
call
adc
mov
and
jmp
mov
push
xor
cmp
jbe
add
pop
or
lods
xorl
or
inc
mov
push
adcl
dec
inc
push
sbb
ret
mov
inc
push
ret
mov
push
ud1
in
bound
test
add
add
shrl
mov
mov
pusha
mov
jno
in
aad
add
testl
xor
aaa
pop
stc
and
jno
dec
jecxz
and
sti
jmp
mov
adc
push
mov
mov
mov
or
lea
fs
and
popa
loope
popa
pushl
adc
cs
sub
sbb
das
and
call
push
lahf
mov
shr
inc
fmull
lds
dec
or
or
adc
dec
movsb
ret
and
ret
enter
add
ret
leave
clc
jge
xor
js
ss
psubw
outsb
in
sub
push
inc
pop
inc
sbb
insl
lret
test
inc
test
arpl
mov
fcoms
mov
inc
cmp
pusha
test
mov
xlat
mov
cltd
mov
pop
mov
rorb
pop
movsb
cmp
jmp
popf
shlb
cmp
roll
fistps
adc
cmp
jmp
rep
int3
lock
addr16
rolb
cmpsb
je
or
sbb
push
add
es
jecxz
leave
add
rorl
lea
jmp
or
loope
and
xor
sbb
sbb
mov
jg
adc
add
shlb
shlb
xor
mov
jns
xchg
push
rolb
dec
or
push
xchg
sub
outsb
add
addr16
inc
jo
cmp
mov
adc
movsl
shr
mov
stos
out
push
movsl
mov
mov
or
mov
clc
std
cltd
xchg
filds
push
inc
outsb
jl
out
push
push
cmp
jmp
pop
mov
sbb
pop
inc
test
and
jle
nop
cmpb
mov
inc
popa
test
or
add
into
mov
dec
andb
add
rorl
mov
push
and
mov
add
jns
jnp
fwait
adc
and
aaa
lods
lods
lcall
sbb
pop
mov
ficomps
push
dec
ja
rorb
add
ja
movsb
ss
mov
jbe
mov
nop
fdivrs
adc
hlt
push
sar
sbb
pop
lods
jmp
loopne
aam
loope
sub
xchg
add
ret
mov
inc
push
ret
or
jb
insb
or
stc
inc
sbb
mov
jb
and
push
inc
push
ret
mov
add
or
pop
loop
int
pop
push
test
cmp
rclb
dec
icebp
push
xchg
aad
cmp
jo
jl,pt
push
add
scas
mov
or
mov
adc
test
push
mov
sbbb
sbb
fmull
rorb
adc
sub
shlb
movb
mov
lds
push
cld
pop
xor
mov
xchg
sub
pop
mov
sti
clc
clc
ss
mov
xchg
pop
or
in
and
faddp
inc
add
mov
cmp
xlat
test
and
and
jbe
and
mov
movlps
insb
jle
sbb
xor
leave
test
mov
inc
pop
loopne
push
add
incb
int
insb
jle
inc
sbbb
add
pop
inc
ja
xor
mov
or
pop
int3
out
or
inc
jmp
pop
add
xchg
inc
push
adc
and
cmp
pop
mov
popa
xor
mov
call
nop
out
mov
daa
in
add
popf
ljmp
mov
xor
fs
add
popf
jo
in
xor
mov
bound
mov
mov
adc
sub
mov
ret
ud1
inc
mov
fistps
outsl
in
sbb
add
inc
xor
pusha
jo
int3
mov
mov
jnp
lods
insl
xchg
fs
xchg
out
pop
push
jmp
mov
mov
add
fsubrl
lahf
std
mov
arpl
and
js
adc
cmp
daa
mov
fiaddl
or
enter
sbb
imul
mov
scas
fcomps
dec
inc
subl
mov
and
inc
pop
sub
mov
cs
sub
sub
cmp
popa
imul
xorb
mov
incb
mov
lea
inc
fptan
fsts
mov
in
xor
sub
andb
mov
lock
andb
add
push
mov
jg
or
mov
fcomps
rolb
mov
adc
push
and
xchg
sub
in
add
or
add
add
call
push
and
inc
movsb
daa
pop
adc
add
enter
and
stos
nop
imul
sub
dec
push
push
and
add
adc
xor
imul
add
add
dec
das
leave
pushf
mov
inc
jae
sub
xchg
inc
mov
div
inc
jecxz
mov
and
xchg
rcrl
adcl
movsl
add
out
xlat
cmp
xor
push
mov
pop
ret
adc
ret
add
push
cmp
lcall
icebp
cmp
out
nop
jmp
mov
pushf
mov
xchg
adc
dec
sbb
les
pusha
jp
imul
jne
cltd
in
xchg
call
jmp
sbb
roll
loop
jl
sbb
xor
popa
fwait
repnz
adc
mov
fyl2x
mov
fists
push
mov
jns
adc
or
cmp
outsl
add
inc
mov
cmp
or
pop
sbb
mov
xor
test
sarb
and
inc
inc
pop
push
cli
mov
shr
sbb
add
xor
cmp
and
add
add
loopne
add
xor
faddl
sbb
rol
arpl
sahf
bound
or
mov
clc
or
add
dec
lds
icebp
mov
jmp
dec
add
sahf
cltd
inc
jmp
or
arpl
sub
dec
mov
pusha
test
pop
sbb
dec
imul
popf
fs
mov
or
add
stc
mov
add
sbb
rcll
jne
or
xchg
leave
jmp
mov
inc
mov
loope
fldl
clc
fldl
in
ficompl
movsl
sbb
jnp
add
sbb
and
xchg
mov
rcrb
sbb
push
stos
sbb
or
repz
ds
cmp
or
incb
aad
and
adc
xchg
cmp
push
cmp
xor
cs
fiaddl
xor
icebp
xchg
or
xor
xor
push
or
cmpsl
sbbb
rcll
cmpl
sub
ret
push
lock
push
cmp
or
cs
cltd
les
cltd
adc
add
pop
add
in
cmp
push
adc
sbb
push
add
and
push
or
push
in
fs
sub
lods
sbb
cmp
bound
push
add
popa
es
faddl
popl
jge
push
push
sbb
inc
push
fldt
cltd
shrb
out
andb
mov
hlt
mov
test
movl
inc
or
sub
cmc
and
mov
sub
xor
mov
push
pop
or
inc
push
pop
adc
cmp
jne,pn
cmpsb
data16
and
push
inc
or
in
xchg
in
mov
pop
dec
fdivl
icebp
hlt
push
push
test
leave
and
add
push
cmovnp
cmpl
xor
cmp
adc
xorb
shll
sbb
sbb
fmuls
dec
adc
insl
les
mov
push
sbb
das
imul
adc
pop
and
sub
pop
mov
cmc
inc
sbb
dec
movsb
push
dec
xor
sbb
xor
mov
or
shl
ret
inc
pop
adc
fs
xlat
or
popa
pop
out
inc
mov
movsl
sti
rcll
imul
jp
push
subb
jnp,pn
sbb
mov
mov
add
xor
insl
xor
sbb
stos
and
out
adc
pop
jmp
icebp
adc
movsb
xor
incl
adc
sub
mov
add
sub
mov
push
add
dec
insb
or
push
xor
pop
sub
int3
cmp
push
push
xchg
dec
jns
pusha
mov
movsl
pop
loopne
jge
xor
mov
std
mov
lret
test
scas
xchg
push
push
sbb
adc
fwait
xchg
add
xchg
sbb
stc
mov
xlat
push
add
fs
aam
xchg
adcl
cmp
pop
dec
push
jne
xchg
xor
xorl
push
dec
into
dec
sbb
cmpb
push
pushf
cmp
cmpb
lahf
add
filds
jl
scas
and
dec
add
sbbl
jle
push
or
mov
cltd
andb
add
add
sub
and
lea
dec
or
call
add
loopne
and
mov
shrb
mov
iret
xchg
add
and
add
mov
mov
jo
test
cld
xchg
dec
mov
outsl
shlb
add
and
pusha
in
icebp
jae
je
cwtl
inc
fldt
cmp
mov
jns
sahf
add
mov
imul
cs
dec
mov
pop
movsl
ljmp
mov
daa
fcmovnb
mov
bound
test
hlt
cmp
xor
enter
add
jnp
gs
popf
jg
or
sti
mov
push
insb
or
push
cld
stos
push
push
mov
push
push
clc
mov
mov
and
xchg
movsl
add
and
push
add
jns,pn
cmpl
sub
insb
and
stc
inc
out
pushf
mov
push
mov
insl
sub
in
push
pop
mov
adc
movsb
inc
add
inc
adc
testl
jle
and
sti
pop
jae
pop
es
add
push
cmpb
pop
arpl
call
push
repnz
pop
into
dec
lods
rolb
xchg
cmp
in
les
movsl
sub
fwait
aam
leave
imul
xchg
push
sub
enter
movsb
rolb
repz
mulb
jmp
jbe
mov
insb
loope
aad
mov
iret
jge
dec
scas
mov
pop
adc
stos
or
nop
and
dec
pop
cmpsb
adc
or
das
popf
jmp
sub
and
mov
add
jnp
pop
es
xchg
adc
mov
decb
ucomiss
and
sbb
inc
jmp
xor
cmp
xor
mov
popa
incb
addb
mov
jge
sbb
inc
js
gs
imul
test
popa
adc
xor
insb
gs
jae
sub
arpl
jns
jmp
push
push
pushaw
cmc
jb
adc
lahf
insb
pop
jo
mov
xor
sbb
sbb
fsubs
jae
out
push
ds
jns
jne
or
sub
xorb
push
sbb
in
jmp
imul
jo
test
insb
imul
sub
and
push
fbld
and
call
movsb
pcmpgtb
push
push
mov
push
jb
call
cmp
repz
cmp
repnz
mov
or
dec
adc
test
sub
mov
mov
inc
push
add
or
push
push
lcall
xchg
daa
ret
pop
movsb
test
aam
pop
xchg
or
push
mov
xor
inc
sbb
into
mov
sbb
sbb
push
in
push
and
pop
lock
and
pop
call
fmull
and
pop
loopne
and
push
xor
jmp
mov
adc
in
leave
addb
and
xor
sub
aam
cmp
pop
test
xchg
push
popf
adc
dec
dec
test
mov
push
adc
mov
adc
repnz
adc
mov
adc
dec
add
xchg
movsb
sbb
adc
enter
xor
sbb
or
xchg
and
nop
fmul
aam
push
stos
cmp
sbb
test
or
adc
adc
or
add
push
sub
sbb
ret
lock
pusha
or
sahf
mov
dec
fwait
sbb
mov
mov
iret
call
imul
and
push
add
daa
call
icebp
std
add
pop
mov
add
pusha
jg
imul
cmp
adc
fisubl
ljmp
or
push
hlt
and
rclb
mov
mov
adc
movl
cld
test
mov
das
dec
pop
pop
adc
xor
lods
cmc
or
adc
scas
add
mov
jecxz
pop
gs
inc
cmc
int3
fiadds
mov
fisttps
roll
add
mov
add
cld
fwait
mov
popa
pop
pop
jge
push
pop
mov
cld
xorl
sbb
push
iret
adc
adc
ljmp
xor
mov
je
jmp
sarb
push
mov
pop
pop
popa
xchg
shld
add
shll
jmp
in
rdpmc
mov
leave
adc
mov
imul
hlt
incl
int
jmp
cmp
mov
mov
sbb
mov
push
pop
aaa
movsl
outsl
add
xor
xlat
mov
mov
add
xor
pusha
cld
or
push
sarb
mov
mov
mov
dec
inc
or
pop
add
mov
pop
test
adc
jl
sti
imul
lcall
jnp
lret
addb
push
push
jae
jl
mov
fiadds
and
pop
dec
adcb
add
push
lock
movzbl
and
enter
mov
aaa
mov
faddl
lea
outsb
sub
icebp
and
dec
pop
mov
dec
xor
jmp
push
cmc
popa
stc
adc
cmp
pop
sbbl
or
mov
lock
nop
push
mov
mov
add
and
test
fmull
mov
add
leave
outsl
cmp
mov
dec
stc
sub
sub
cmp
mov
mov
pop
mov
fwait
xlat
inc
ret
adc
test
pop
mov
dec
jo
inc
testb
jbe
int3
fisubl
adcl
xchg
cmpsb
fnstcw
jae
out
jb
lahf
or
mov
pop
bound
mov
fmuls
adc
nop
aas
stos
sbb
pop
enter
out
sub
adc
jbe
mov
cmp
and
stos
add
sbb
test
add
mov
mov
sub
sbb
rorb
adc
and
adc
pop
jg
roll
push
nop
lahf
dec
in
test
leave
pop
sbb
repnz
add
pop
sub
into
insb
jae
add
mov
lock
or
and
rcrl
mov
andl
out
call
in
jp
ljmp
jns
addl
mov
and
scas
idivl
sbb
cmp
push
lds
pop
ud1
js
xor
xchg
add
lods
or
andb
mov
lahf
and
xchg
fldt
cwtl
mov
push
ret
adc
push
sub
mov
pop
loopne
clc
loop
inc
pop
das
lods
fs
sbb
add
sbb
mov
pop
sub
xor
xchg
loop
jge
aaa
fidivs
pop
dec
les
sti
xchg
or
xlat
cmp
dec
icebp
mov
mov
cmp
loopne
lds
jo
mov
out
test
jne
jns
add
xchg
and
fiaddl
sahf
sbb
into
scas
inc
mov
je
sbb
and
jno
imul
dec
loopne
mov
sbb
pusha
jae
jno
mov
push
and
stos
cltd
xor
and
add
pusha
pop
or
mov
mov
adc
mov
sahf
outsl
nop
mov
jmp
add
test
cmp
sbb
sbb
and
sbb
inc
push
stc
dec
inc
mov
sub
lds
cmp
add
mov
lods
mov
xor
sbb
sub
les
call
shll
roll
and
push
jp
push
xchg
inc
jno
dec
insb
mov
add
sbb
jl
pop
mov
je
adc
dec
dec
sarl
in
cmp
mov
stos
push
pusha
push
cltd
imul
dec
inc
sub
dec
je
cmp
mov
lret
cmp
sub
stos
mov
les
js
clc
jecxz
hlt
pushf
sbb
ds
ljmp
fstpt
jmp
adc
mov
mov
notb
sub
and
dec
xchg
lock
jne
pop
ss
mov
and
pusha
mulb
aam
push
loop
dec
bound
xor
cmc
cmp
lods
test
cwtl
and
popf
movsb
sub
or
scas
push
adc
les
add
sbb
adc
cmp
out
loop
mov
jo
inc
call
and
cmp
icebp
je
xchg
xchg
jae
cmpl
inc
add
out
insl
scas
xor
push
pusha
in
jns
enter
cld
jecxz
sbb
test
add
jbe
jle
icebp
js
test
xlat
cmpb
xor
jbe
jmp
xchg
fwait
inc
sbb
push
pusha
mov
lods
shl
incb
xchg
jnp
cmp
insb
ret
loope
out
sbbb
imul
add
arpl
xchg
jmp
add
outsb
into
and
pushf
mov
xor
xchg
pushf
sbb
test
dec
add
outsb
add
je
inc
mov
in
testb
test
sbb
xchg
repnz
addb
insb
xchg
das
sti
mov
in
and
mov
cmp
sahf
mov
insl
xor
testl
add
add
scas
xchg
les
or
std
xlat
mov
ficompl
call
mov
cld
jnp
popa
je
push
cmp
stc
xchg
shlb
lahf
jae
outsl
cmpsl
cmpb
mov
lldt
and
call
out
iret
divl
xor
mov
out
mov
xor
xlat
out
movsb
add
jge
pusha
mov
add
xchg
aam
nop
add
sbb
jecxz
pop
fildl
inc
sub
push
sbb
aad
push
clc
cld
inc
std
hlt
mov
add
movsb
repnz
push
adc
mov
lods
dec
das
add
adc
add
mov
add
pop
dec
outsl
add
sti
cmc
cs
xchg
fwait
pop
add
call
sub
mov
stos
shlb
out
add
pop
add
nop
mov
sbb
pushf
lsl
sbb
xchg
xchg
xchg
xor
cli
decl
mov
aad
fs
add
pushf
faddl
iret
ficompl
sbbl
push
xorl
inc
mov
push
xchg
add
mov
add
add
xchg
sbbb
cmp
mov
jo
xor
adc
and
cmp
add
pop
xchg
push
add
push
push
jno
loope
xchg
rolb
add
ret
jl
fmull
adc
lods
pop
in
and
add
push
fadd
ja
push
add
repnz
test
lcall
dec
xchg
outsb
cmpsl
lods
xchg
xchg
pop
fs
sbb
pop
cmp
jg
pusha
or
loope
cmp
mov
sarl
aad
push
sub
push
loope
jge
movsb
mov
xor
cmp
inc
dec
ss
mov
mov
jns,pn
divl
shl
addl
fistps
out
out
mov
adc
add
xor
pop
lcall
ret
mov
movsb
ror
mov
add
mov
sbb
clc
or
into
sbb
pop
add
shrb
adc
jle
or
add
push
negb
lock
movl
or
sbb
les
in
loope
sub
ljmp
jns
push
sub
in
lods
xor
add
data16
add
jbe
or
xor
jp
pop
xlat
mov
mov
ja
pop
js
imul
mov
pop
repnz
shll
or
outsl
adc
ja
xchg
mov
adc
or
mov
xor
test
fiadds
cmp
imull
mov
xchg
add
mov
scas
mov
or
roll
jae
sbb
enter
iret
cld
mov
jns
cmp
movsb
faddl
add
iret
loopne
or
incl
sbb
add
arpl
insb
xchg
add
push
inc
sub
cmpl
pop
aas
inc
sub
add
pop
and
xchg
es
pop
pop
jl
ret
cli
movsl
jb
fdivs
insb
test
add
mov
jo
jbe
add
adc
adc
xor
aas
jnp
add
xor
in
or
das
and
push
js
sbb
cs
pop
lret
clc
push
cwtl
xlat
add
mov
mov
adc
cmpl
jb
and
insb
vprotb
cmpsl
testb
push
inc
xor
xor
pushf
scas
pop
and
arpl
cmpsb
and
cmp
pop
xchg
add
mov
rcll
jae
push
add
fcmovb
mov
add
jnp
jbe
daa
and
lock
cmp
in
add
add
sbb
dec
pop
bound
mov
add
dec
fxch
mov
ret
dec
pusha
inc
mov
jmp
loopne
mov
mov
stos
aam
xor
mov
add
fwait
mov
dec
jmp
sub
push
cltd
in
mov
cmpsb
mov
cwtl
mov
push
mov
pop
bound
push
mov
jb
add
movsl
sbb
add
add
xchg
lods
std
sbb
mov
push
ja
call
pop
cmp
inc
adc
daa
movntps
pop
inc
pop
call
sbb
movsl
insl
push
out
aam
inc
push
fdivp
repnz
cmp
push
cli
cmp
or
jge
loope
sub
add
pop
sub
add
sub
xchg
mov
add
test
ror
inc
or
fiadds
inc
cmp
inc
inc
sub
testb
loopne
mov
and
popf
add
adc
or
mov
int
pop
jno
cmc
mov
pusha
xchg
ret
inc
jmp
sub
add
lds
pop
adc
jg
dec
push
in
movups
roll
sub
jecxz
inc
sbb
imul
insb
btr
idivl
and
mov
in
jne
ja
pop
movzwl
adc
and
adc
data16
dec
sahf
add
jo
out
adc
mov
sbb
push
ret
add
cmpsb
add
lock
pusha
adc
dec
mov
popf
scas
pop
push
pop
scas
fwait
loope
aaa
adc
xor
sub
push
add
jbe
jle
aas
aaa
add
cmp
push
or
pop
adcl
sbb
loope
mov
adc
cmp
cmpsb
imul
in
mov
out
shlb
gs
ja
lock
push
jne
xchg
loopne
stos
or
outsb
pop
jl
adc
add
inc
in
aas
pusha
jns
pop
outsl
imul
out
inc
mov
add
jne
and
xchg
add
jae
inc
sub
bound
in
clc
add
mov
popa
xlat
push
mov
sub
add
into
subb
fistps
mov
stc
incl
loop
ds
add
sbb
pop
int
add
sti
xlat
adc
or
out
jmp
xchg
mov
push
mov
adc
mov
and
mov
rolb
mov
sub
push
or
popa
cmp
jns
dec
icebp
test
movsb
and
ljmp
lcall
add
sahf
xchg
push
push
or
pop
jno
push
add
pop
int3
xchg
add
out
popf
add
bnd
add
pop
and
hlt
sbb
repz
dec
mov
stos
testb
and
push
xor
loop
and
jmp
call
add
filds
lret
jp
fstps
or
mov
ret
xor
add
js
mov
sbb
xorl
mov
push
lods
mov
or
mov
mov
and
inc
add
gs
sbb
pop
xor
rcr
dec
cmp
gs
lret
ret
les
add
sub
xchg
add
pop
loop
mov
jp
lds
fstpl
sarb
pushl
mov
popf
out
mov
mov
push
add
jnp
push
cmp
pop
push
stc
fistps
cmc
dec
push
lds
jo
adc
add
fsubs
cmp
mov
pop
cmp
in
xchg
inc
mov
mov
movsb
ret
and
pop
pop
cmpsb
dec
add
mov
lcall
lock
xchg
dec
rcrb
xchg
jg
icebp
pop
cltd
adc
cmpsl
enter
xchg
jl
push
and
xor
lea
outsb
loop
nop
test
pop
into
jb
adc
popf
mov
mov
add
fcmovb
ja
pop
jl
push
fnstcw
ret
js
loope
push
mov
aas
aaa
mov
rolb
dec
das
inc
mov
cmp
repz
fnstenv
xchg
sbb
fsub
add
sbb
lds
aam
or
push
add
fstpl
cmc
outsb
jp
setnp
stos
add
or
xchg
add
and
dec
sub
sbb
pop
stos
jo,pt
rcrl
imul
in
insb
jns
je
dec
xchg
mov
sbb
push
sbb
dec
pop
cltd
sub
add
arpl
aam
mov
negb
in
das
add
lcall
jo
mov
sub
adc
mov
or
mov
sbb
cs
and
ret
test
add
ja
dec
scas
or
dec
add
mov
cltd
add
or
rcll
inc
add
mov
cmc
sub
adc
icebp
sub
xchg
sub
cld
roll
sarl
sub
add
sbb
jnp
push
add
incl
sub
cmpsl
add
or
xchg
mov
jge
rclb
xor
xor
dec
sub
incb
xorl
and
arpl
movaps
dec
push
jge
add
or
cwtl
iret
dec
jbe
cmpb
repz
pop
ljmp
mov
in
xor
sbb
fisttpll
movsb
mov
out
dec
xchg
fadd
pusha
push
add
mov
jge
add
lods
ret
out
xchg
aas
mov
loop
xchg
inc
inc
push
sbb
dec
cmp
into
rcll
sub
inc
adc
pop
pusha
jl
add
ljmp
shll
fs
push
in
nop
scas
in
add
sub
mov
and
loopne
xlat
gs
add
aam
push
sub
jno
mov
stos
add
std
and
ds
mov
add
sub
subl
addr16
in
adc
push
add
fsts
jp
mov
push
out
scas
add
adc
ja
repnz
push
into
inc
sbb
add
rorl
andb
aas
pop
mov
std
mov
cmp
cli
es
adc
add
leave
decb
mov
add
sti
insl
dec
pop
pop
jno
jl
add
sub
ss
hlt
mov
mov
movsl
mov
pop
add
xor
jmp
mov
jno
icebp
test
xchg
dec
inc
xchg
rorb
add
jns
nop
lods
push
aam
mov
shll
push
sbb
mov
js
bound
dec
loopne
daa
pop
addr16
lret
push
jae
inc
ret
cmp
repnz
mov
lea
mov
in
add
xchg
test
pop
roll
adc
jmp
movsb
je
cli
add
test
js
pop
lods
ds
and
xlat
push
pop
xchg
push
jnp
sub
pop
jle
stc
rcr
jecxz
pop
js
add
mov
sbb
lahf
adc
enter
stc
or
rcrb
dec
sbb
out
add
xorb
jle
js
pusha
fcoms
push
pop
sub
mov
push
scas
shl
shlb
fidivs
cmp
test
add
test
add
pop
push
jle
cmpsb
lret
dec
mov
imul
sahf
cmp
mov
pop
xor
call
sarb
fldl
push
mov
dec
in
pusha
pop
sub
leave
inc
mov
pop
add
ret
or
insb
cmp
daa
add
sbb
lret
bound
jae
push
add
fs
xor
lods
dec
add
ret
jns
xchg
out
out
mov
pop
insb
push
mov
xor
fsubl
adc
jle
dec
icebp
xchg
pop
add
repnz
add
sub
lret
add
add
add
inc
test
sbb
add
push
sbb
and
sub
lods
fwait
jb
sbb
xor
sub
ret
and
out
add
and
fsts
hlt
out
rcl
and
add
popa
cli
or
pop
js
and
pop
cwtl
xor
inc
add
outsl
call
sub
add
push
cwtl
and
push
pop
les
sbb
add
jbe
js
mov
jno
fsubrl
mov
mov
cmpsb
aaa
outsl
seto
add
bound
add
push
out
in
das
add
mov
popa
adc
idivl
mov
repnz
jb
adcl
ret
bswap
lret
dec
or
test
and
dec
scas
inc
add
dec
hlt
je
add
and
push
pop
lcall
adc
cmp
jp
lcall
pop
mov
sbb
movsl
pushf
jae
mov
dec
jno
push
out
xchg
sbb
cmp
mov
sbb
xor
add
repnz
lahf
hlt
fildl
sbb
lds
jbe
adc
fildl
in
scas
scas
cmp
xchg
loopne
out
icebp
push
cmp
dec
out
push
jl
call
sub
xchg
jo
push
push
cld
add
aaa
ret
les
dec
stos
pop
leave
inc
push
ds
xchg
cmp
add
mov
sub
ret
inc
xor
xchg
in
add
add
aaa
and
add
sub
test
jno
dec
rcrl
push
add
push
mov
loop
mov
add
sbb
xor
push
maxps
leave
push
sbb
enter
aas
push
out
lock
imul
shrl
xor
lret
add
bndldx
ss
test
jl
add
andl
cld
push
jae
mov
ficompl
add
cmp
lea
lds
movsl
in
add
out
cmc
sub
rclb
sub
pop
clc
cmovp
sub
mov
xchg
jmp
pop
nop
je
xchg
pusha
loopne
sbb
movsb
mov
inc
or
scas
arpl
movsb
loopne
cmp
mov
mov
add
ss
bound
pop
int
jne
enter
addr16
int3
mov
ret
lret
xor
add
adc
sbb
insb
jge
out
test
outsb
in
int3
add
or
mov
fidivs
mov
sete
sub
movsl
mov
adc
pop
and
add
mov
lahf
adc
rcrb
je
and
sbb
cli
cmp
and
and
rclb
adc
xchg
mov
or
es
faddl
clc
int
hlt
inc
fwait
add
mov
jae
pop
sub
lods
incb
bound
pop
insb
adc
sub
mov
jns
orb
dec
add
scas
pop
add
mov
mov
loopne
nop
jo
add
add
xlat
dec
add
inc
push
adc
jae
sarb
cmp
cmp
lea
mov
mov
fildl
mov
jmp
cmp
aaa
or
add
mov
cltd
sbbb
sub
lahf
fnstcw
mov
sub
cmp
add
push
aad
jl
or
repnz
sbb
loopne
inc
nop
add
test
call
sbb
dec
aas
scas
xchg
and
mov
lea
adc
jmp
and
add
pop
ret
or
or
or
ror
cli
sub
adc
loopne
test
insl
repz
dec
cmc
mov
inc
insb
add
sub
cs
test
fdivrs
sbb
mov
add
aaa
xor
xchg
jo
fdivrs
outsb
mov
loopne
xchg
daa
add
push
cwtl
out
inc
jp
mov
jb
fldenv
test
pop
dec
xor
add
fcomps
dec
pop
xor
mov
adc
xor
stc
cmpb
cmp
sti
xor
sub
inc
fsubs
mov
add
or
xor
xchg
add
dec
dec
ret
inc
push
out
add
scas
lret
mov
lcall
cmp
jbe
add
and
mov
je
add
call
cmp
mov
xchg
subb
lcall
addr16
push
dec
xchg
pop
pusha
pusha
sbb
aam
mov
add
je
fs
mov
stos
out
std
push
pinsrw
inc
outsl
test
add
jbe
mov
add
cmpsb
mov
mov
shll
out
call
dec
outsl
dec
pop
sub
jg
add
sbb
pop
sarb
push
push
xchg
add
adc
iret
dec
stos
enter
add
imul
inc
xor
cmp
pop
cmp
jge
stos
pop
push
mov
test
or
sbb
sub
out
lock
mov
push
shll
ja
inc
les
pop
dec
adc
outsl
jns
jo
out
xchg
hlt
sbb
movsb
lret
imull
das
inc
push
stc
sbb
mov
jo
jmp
add
cmp
sub
add
or
push
jb
cmp
cmp
push
add
das
or
or
aas
xor
xchg
dec
ret
lock
push
out
and
cli
cwtl
or
jno
addb
lock
ss
cmp
adc
push
lods
cwtl
mov
nop
mov
mov
xlat
fs
push
add
das
xchg
adc
mov
shlb
addl
ret
rcr
sub
dec
inc
push
in
inc
sbb
sahf
fs
dec
mov
adc
xchg
mov
arpl
inc
jnp
mov
mov
rorl
push
out
cmpsl
adcb
add
pop
test
lock
movsb
ret
ljmp
mov
lds
imul
and
dec
std
loopne
test
das
mov
dec
cmpsb
add
iret
add
pop
pop
jecxz
loopne
sbb
call
lcall
fcmovb
dec
add
push
push
jns
insb
scas
adcb
sbb
hlt
fstpl
xchg
or
mov
add
push
or
ds
outsl
add
dec
lock
mov
icebp
mov
mov
in
xchg
add
lahf
ljmp
add
mov
jge
and
dec
sbb
lds
sub
loop
add
test
cmp
add
mov
shlb
push
imul
aas
fdiv
je
or
jmp
cmpsl
add
push
scas
sbb
add
mov
loopne
sar
push
add
lock
jae
imul
add
adc
jmp
mov
add
add
mov
incb
sub
mov
addb
ja
jbe
cld
lret
inc
add
ret
fwait
xchg
repnz
subb
pop
pop
add
lahf
lds
mov
push
add
or
push
pop
adc
jb
popf
xlat
test
lods
inc
scas
cli
andb
loop
cmc
and
sub
js
add
aam
andb
adc
daa
adc
adc
xrelease
or
inc
sub
test
or
and
sub
adc
mulb
dec
or
push
jmp
in
adc
test
xchg
sbb
cmp
adc
dec
or
xchg
or
cmp
and
xchg
mov
adc
and
jle
orl
inc
mov
and
and
adc
sti
mov
push
inc
movsl
push
mov
enter
add
pop
inc
bound
je
mov
pop
mov
hlt
and
fs
ret
int
fbld
mov
cmp
enter
sub
mov
push
add
pop
mov
inc
out
movsl
pop
pusha
and
jae
xor
loopne
sub
pop
jno
fwait
mov
shrb
adc
add
push
cli
pusha
xorl
icebp
sbbb
iret
ss
inc
vprotd
pusha
leave
adc
not
mov
inc
call
shll
daa
sub
lcall
icebp
jle
nop
push
testb
out
jge
in
gs
add
and
pusha
add
push
sbb
mov
inc
add
or
jbe
imul
push
cmp
or
add
popa
mov
out
repnz
add
lret
xor
into
inc
mov
mov
mov
or
and
add
loop
cwtl
scas
sbb
fs
or
in
add
inc
fwait
imul
sub
les
std
mov
jle
insl
sub
test
push
and
or
call
out
mov
nop
push
and
dec
popa
inc
lock
mov
jno
incb
mov
sub
cmpsl
xor
mov
popa
imul
jno
add
dec
xor
mov
pusha
imul
dec
lods
push
pusha
cmpsl
push
mov
push
loop
clc
cmp
jl
xchg
ret
filds
popa
pushf
add
subl
fisttpll
add
repz
ja
mov
sbb
jmp
lock
cwtl
xor
incl
add
icebp
sarl
xchg
add
adc
push
pop
or
outsl
sub
movsb
out
in
das
popa
jp
add
sub
clc
bound
std
cmp
shrb
cmc
popl
repnz
and
das
test
cli
mov
test
sub
popf
or
jmp
jg
jmp
lahf
mov
roll
test
xor
pop
loope
fcoms
sbb
push
jae
ja
add
idivl
in
mov
add
iret
xlat
addb
add
jo
xchg
push
xlat
loopne
mov
add
mov
call
mov
repz
lods
add
mov
jb
add
adc
cld
xor
sub
dec
pop
mov
pop
sub
jbe
add
xor
addb
fnstcw
add
jns
orl
or
cmc
xchg
sbb
in
xor
jle
add
int3
push
adc
cmc
lret
inc
arpl
mov
inc
add
cltd
xchg
xor
add
push
push
ljmp
cmp
sbb
das
cmc
inc
repnz
xor
add
sarb
or
jbe
flds
inc
add
int3
popw
adcb
insb
xchg
iret
xor
add
ret
cwtl
repz
add
xchg
add
push
cmpsl
adc
jle
add
out
andl
lock
loop
dec
js
push
hlt
add
dec
adc
pushf
add
lahf
push
jmp
test
inc
ja
jecxz
adc
popf
mov
shrb
inc
out
cmp
add
rcrl
xchg
adc
ja
arpl
ret
imul
push
roll
in
sub
mov
in
jae
aam
xchg
lods
movsb
stos
les
add
ret
stos
add
ss
jmp
fsts
cli
mov
cmp
sbb
add
les
fsubrs
inc
popf
xor
add
cwtl
mov
add
rcrl
in
or
add
in
xchg
loop
push
inc
mov
pop
je
jl
xchg
adc
dec
xchg
pop
lret
addr16
loopne
xchg
repz
push
rolb
xor
pusha
and
mov
jbe
pcmpgtd
fbld
cmp
xorb
or
mov
mov
adc
inc
out
movsl
xchg
xchg
and
jp
leave
ret
add
and
inc
mov
fiaddl
cmpsl
movsl
stos
xchg
pop
jmp
mov
mov
loopne
push
scas
push
into
xchg
mov
nop
popa
and
sbb
and
dec
mov
cmp
addl
or
cli
pop
jge
and
cmp
imul
scas
push
js
mov
movsl
add
sbbb
adc
or
add
test
mov
xor
sbb
pop
push
inc
dec
out
les
fisubs
lods
dec
add
sti
cmp
sbb
add
pop
aam
icebp
aas
xchg
aaa
dec
setl
in
inc
jae
fldpi
xor
mov
lock
lock
add
fs
rcl
popw
bound
nopl
or
xlat
dec
jecxz
or
add
cmp
add
push
or
pushf
popa
xchg
add
mov
mov
xchg
sbb
xchg
sbb
andl
aaa
test
fildll
test
sbb
add
xchg
cmc
push
xor
push
mov
clc
pop
lret
add
scas
andl
mov
add
inc
sbb
cmp
loope
pop
dec
and
xchg
add
test
lods
push
jns
or
mov
sbbl
inc
and
xchg
add
and
insl
adc
push
cs
pusha
mov
shll
or
adc
addr16
add
adc
test
add
hlt
lods
xor
ja
pop
inc
jo
ret
add
mov
jnp
mov
dec
and
mov
popa
inc
sti
inc
scas
cmp
testb
fwait
dec
ret
adc
shlb
aaa
iret
add
je
imul
movsb
mov
mov
std
and
call
cmp
add
or
adc
jnp
arpl
mov
cli
add
or
add
pop
pop
insl
push
push
sub
jbe
jo
pandn
es
and
loopne
mov
aas
xchg
mov
pop
jnp
sub
jno
push
add
sbb
push
ret
enter
push
aaa
add
push
push
ficompl
sbb
inc
cli
mov
stos
sub
xchg
cmp
add
loopne
dec
cmc
inc
addl
mov
mov
add
fadds
and
add
cmpsb
ret
pop
add
push
xchg
cmp
mov
xor
inc
les
mov
icebp
cmc
cmp
xchg
imul
bound
add
mov
mov
adc
loopne
jmp
mov
adc
add
ret
push
cmp
mov
xchg
mov
into
ja
sub
loopne
hlt
movsb
sub
and
fldcw
cld
aaa
movsl
mov
out
add
lea
jl
add
fmull
leave
adc
gs
pop
testb
in
xchg
and
jae
lock
inc
mov
pop
and
sub
inc
xchg
add
mov
in
mov
enter
scas
mov
add
mov
mov
movsb
add
jl
aam
mov
add
push
roll
nop
mov
cmp
inc
push
pop
daa
loopne
dec
mov
jl
shlb
shrb
orl
imul
mov
dec
add
imul
dec
or
push
xchg
fiadds
shl
cs
mov
jnp
pusha
xchg
adc
faddl
popf
and
push
lock
test
or
arpl
push
xor
mov
sbb
and
push
mov
add
cmp
sti
add
out
pop
andb
nop
pop
add
fnstenv
pop
imul
andb
ljmp
rorb
lods
xchg
icebp
add
xchg
into
popa
xchg
push
dec
sbbb
xchg
cwtl
mov
int
test
addl
mov
xchg
rclb
int
mov
mov
mov
push
adc
lods
add
jns
sti
stos
sbb
dec
mov
mov
cmp
orb
adc
or
cltd
andl
xor
push
jb
addb
cmpsb
dec
popf
clc
mov
gs
inc
out
outsl
lret
pushf
dec
mov
inc
int
filds
loope
popa
jns
aaa
jo
add
hlt
xor
adc
out
inc
mov
cli
cs
add
mov
ljmp
add
loopne
cmp
pusha
enter
pop
add
test
add
les
dec
cli
insl
ror
imul
xchg
fwait
inc
popl
cld
negl
subb
push
jbe
cmp
dec
clc
add
jmp
int
mov
xchg
jns
or
mov
or
xchg
adc
mov
fdivl
int3
cmp
sub
test
dec
aad
push
outsl
jbe
lcall
mov
cmp
or
xchg
push
xor
sbb
push
mov
test
sub
lret
adc
in
xchg
jns
mov
dec
add
add
jg
jle
jge
cmp
and
xchg
xor
add
ja
int
icebp
add
ljmp
out
nop
inc
add
jne
gs
daa
mov
stc
push
cmp
cltd
mov
sti
cmp
xor
cmc
add
bound
loope
fimull
and
jmp
subb
fcoml
mov
mov
je
push
cmp
add
sbb
popa
add
push
lock
mov
adc
int
lods
jae
addl
mov
loop
jne
lods
inc
mov
mov
mov
test
or
test
aad
jp
add
mov
imul
xlat
arpl
nop
sub
les
les
enterw
testb
sbb
mov
inc
xor
push
push
push
arpl
mov
mov
adc
outsl
xchg
fiaddl
adc
sbb
xchg
push
dec
in
out
add
nop
dec
mov
ficoms
nop
dec
cwtl
mov
xchg
sub
or
mov
adc
loop
mov
pop
cmc
sbb
in
rclb
lahf
pop
cmpb
outsb
negb
cmp
xchg
jmp
addb
jne
sub
push
pushf
aam
les
jl
xor
sbbl
cmc
pop
sbb
sub
fmuls
and
daa
or
fbld
mov
aam
loop
cmp
add
aas
movsl
sbb
jo
inc
push
cwtl
adc
add
mov
sub
out
in
loopne
mov
mov
adcb
xchg
mov
cwtl
sbb
out
sbb
add
add
ret
sub
pop
push
mov
sbb
push
add
add
orl
call
rorb
adc
js
xor
sub
fildl
xchg
es
inc
lods
je
leave
add
lret
fucomp
into
hlt
add
push
and
sub
js
or
test
cli
call
ret
orb
into
cmp
addb
add
hlt
std
outsl
adc
movsb
add
mov
stos
add
cltd
mov
ret
clc
xor
bound
push
add
das
call
push
stc
clc
pop
popf
add
add
fcoms
add
movl
imul
xor
cwtl
ret
jnp
adc
int3
or
pop
mov
sahf
mov
movsb
outsb
lods
adcl
lahf
stos
aas
push
verr
mov
dec
stos
packuswb
inc
test
movsl
cmp
int3
movsbw
out
rclb
xor
inc
loopne
add
scas
cmpsl
mov
cmp
lahf
jne
repz
xor
je
cmp
sub
add
loope
xchg
xchg
out
adc
imul
jo
ds
or
mov
add
push
cmpl
mov
and
test
lcall
add
inc
addr16
inc
push
repnz
out
cmpsl
mov
mov
or
out
lcall
add
andl
nop
addr16
sarb
insb
scas
lea
orb
pop
xchg
add
loopne
adc
adc
inc
pop
mov
out
cwtl
sahf
and
loop
popf
cltd
cld
add
lods
loopne
mov
icebp
jo
pop
rolb
test
cmp
in
add
mov
adc
and
add
dec
mov
mov
loope
shll
xor
add
dec
mov
mov
sahf
and
or
inc
shrb
imul
add
hlt
rclb
sbb
daa
aam
lds
sbb
jnp
mov
cmp
fisttpll
add
sti
pop
jb
loope
inc
add
popa
cmc
call
inc
imul
add
mov
pop
or
out
ljmp
add
xorl
add
mul
and
add
cmpsl
add
std
dec
orl
and
pop
orl
sub
pop
aad
mov
test
sbb
jg
mov
dec
xor
add
jmp
lds
sarb
test
loope
sar
dec
aam
or
xchg
add
push
ljmp
jb
gs
sbbb
leave
xor
jge
jle
mov
int3
lock
xchg
flds
xchg
loop
repnz
stc
fidivrl
out
push
pop
adc
push
xchg
out
pop
mov
mov
jecxz
cmp
inc
mov
jo
add
stc
mov
and
mov
or
fadd
xchg
nop
add
test
jmp
fidivrl
mov
repnz
add
inc
add
mov
cli
jae
aam
adc
add
int
push
iret
pop
add
cmp
add
pop
pop
js
sti
cmp
repz
call
or
xchg
fdivr
sbb
jle
add
push
inc
aad
jmp
cmp
addr16
jle
add
aas
test
mov
ja
cmp
pop
test
cmpsl
dec
sub
sti
push
cmpb
inc
mov
cmp
push
lds
lcall
aad
or
xor
inc
add
add
aas
rcrb
mov
mov
xrelease
outsl
call
mov
imul
pop
jbe
lret
scas
xchg
add
dec
in
sbb
ja
push
mov
cs
add
adc
dec
mov
aaa
lock
mov
mov
repz
sub
and
mov
sbb
xor
jge
mov
add
repz
inc
loope
pushf
loopne
roll
or
or
adc
xor
daa
sub
pop
movsb
mov
inc
pop
aad
loop
or
jg
pusha
jl
add
sbb
jo
or
mov
mov
cwtl
out
jb
sbb
mov
mov
adc
jecxz
testb
mov
mov
mov
add
and
or
and
pop
pop
mov
inc
mov
nop
cmp
into
inc
add
insl
pop
xchg
mov
dec
add
xor
jp
roll
dec
cmp
sbb
add
leave
loop
push
mov
adc
cld
lods
push
jnp
clc
add
lret
fbstp
nop
js
cmp
cmp
jns
dec
add
or
sti
mov
adc
outsb
push
repz
sub
ret
adc
add
ss
iret
clc
pop
inc
je
sub
xchg
fs
xor
adc
fnsetpm(287
cwtl
push
sbb
sbb
add
das
pop
inc
movsb
lods
lock
outsl
sbb
add
ds
into
addr16
add
inc
mov
sti
sbb
mov
andb
jnp
xlat
and
nopl
sub
push
sub
add
xor
mov
data16
fs
cld
pusha
pop
mov
sti
or
push
sbb
cmp
movsl
shrb
outsb
in
lods
mov
imul
pop
cmp
mov
fcoms
cmpb
add
call
sbb
mov
cmp
ror
sti
xorb
mov
inc
adc
xchg
fdivl
cmp
orb
iret
orb
nop
xor
mov
arpl
jp
es
cwtl
add
enter
add
push
in
test
sub
xor
pushf
and
xchg
rorb
inc
push
mov
push
add
orb
loop
out
in
mov
mov
ret
outsl
lods
jl
push
push
add
cmpsb
adc
outsb
cmc
jge
add
daa
shlb
test
mov
fildll
scas
bound
das
add
subl
add
popf
add
cs
cmp
nop
add
inc
stos
clc
aas
jno
xor
or
ret
insb
rolb
jg
lock
inc
jae
loope
inc
add
jno
push
lret
or
inc
adc
ja
rcrb
jne
aas
or
jns
sbb
xor
ss
and
jecxz
adc
adc
movsb
sub
add
mov
pop
inc
or
add
jae
push
jecxz
add
fwait
iret
mov
add
addr16
ss
and
xor
or
pop
loope
aas
arpl
pop
imul
lcall
lahf
sbb
mov
ret
add
pop
and
inc
push
add
dec
and
pop
add
in
popl
out
push
out
ror
in
add
inc
or
popf
xor
sub
fstpl
add
adcb
movsb
or
call
add
and
or
sbb
outsb
mov
lea
add
lock
test
sbb
push
xchg
icebp
cs
subl
add
jae
movsb
mov
xor
jnp
jb
mov
aam
add
dec
test
add
ds
sbb
clc
repz
jge
int
fdivp
inc
jg
push
call
add
sarb
nop
add
shll
mov
inc
sub
mov
adcb
xor
pusha
mov
add
or
add
push
fs
fcoml
sub
mov
mov
push
dec
insl
add
or
sbb
add
movsb
shlb
mov
inc
xor
add
out
imul
cmc
adc
stos
out
cmpsl
aas
in
repz
loopne
and
outsl
pop
out
xor
mov
inc
nop
mov
jge
mov
lahf
aad
out
add
xor
xchg
fcoms
pop
pop
xor
ficompl
add
sbb
mov
add
scas
inc
popa
sarb
test
inc
mov
add
pop
xor
add
ja
stos
int3
mov
sbb
mov
xchg
push
aad
add
ss
arpl
inc
cmpsb
add
mov
or
ljmpw
rclb
mov
pop
sbb
stc
pushf
lock
xchg
add
out
add
nop
mov
sub
mov
lock
test
xchg
push
sub
or
push
add
rcl
xor
rcrl
subb
mov
jp
mov
jecxz
sub
dec
cltd
outsl
mov
ret
xor
lret
or
dec
mov
xchg
jo
add
jns
xchg
push
mov
mov
loopne
add
aad
ja
push
xlat
fs
jno
cmp
fidivrs
jmp
loop
aad
bt
lahf
loope
jns
sbb
pop
jb
adc
jae
add
sbb
scas
add
push
jae
add
icebp
or
jle
add
cwtl
adc
pop
inc
mov
lock
jo
mov
push
mov
sub
mov
cmp
test
cs
add
dec
hlt
in
rcrl
or
xchg
fstps
mov
push
mov
icebp
inc
cmp
pop
sbb
pop
insb
fcoml
fldcw
add
jle
mov
popa
push
push
mov
add
fnsetpm(287
pop
mov
jns
dec
fsts
aas
add
repnz
push
pop
aam
ret
xor
and
add
fistpll
shlb
mov
shrl
fsubrp
cltd
push
add
adc
sub
inc
mov
insb
rcr
loop
rorb
cmpsb
mov
mov
repnz
cmp
pop
push
mov
push
mov
cs
pop
sbb
push
mov
jns
pop
mov
cltd
xor
pop
int
push
dec
cmpsb
mov
f2xm1
and
nop
add
push
and
add
movb
or
lock
add
dec
push
jb
movsl
rorb
jmp
dec
test
pusha
mov
sahf
mov
jne
in
xchg
loop
and
call
mov
ffreep
sub
and
sub
sbb
test
jb
dec
sub
sub
jo
das
and
add
sub
sub
push
in
out
and
in
call
sti
sub
movb
xor
adcl
in
inc
fs
sbb
rep
pop
orb
xchg
jnp
xor
fdivs
daa
xchg
test
push
jp
cmp
mov
mov
push
lea
insb
mov
lods
jle
add
inc
test
mov
hlt
adc
in
rcrb
cmpsb
inc
pushf
mov
mov
cmp
pop
bound
inc
add
mov
lcall
pop
lock
cli
shl
stc
add
sbb
adc
jns
sbb
jge
scas
push
mov
mov
daa
jl
divl
leave
mov
fcomps
mov
mulb
pop
or
ret
fs
add
xor
loop
push
push
shlb
sub
pop
add
pop
aas
mov
sub
and
push
hlt
aas
rclb
cwtl
and
vandnps
repnz
jns
push
dec
hlt
shl
mov
scas
push
xchg
inc
mov
int
sub
test
push
stos
add
adc
adc
scas
add
xchg
test
and
movsb
das
aas
int
add
popa
stc
cli
jbe
sbb
add
sub
add
xchg
insl
jmp
mov
pusha
sarb
outsl
hlt
sbb
imul
cmpsl
pop
test
mov
incl
out
mov
pusha
mov
push
mov
lea
and
cmpsl
pop
xchg
int3
incb
mov
js
add
adc
fadd
andb
cmp
out
in
xchg
ret
xor
push
daa
add
cmp
jb
adc
sbb
scas
leave
pop
jge
cld
inc
or
jbe
push
jl
iret
xlat
cwtl
xchg
repnz
nop
lock
adc
and
lods
jp
cmp
call
adc
test
jns
sub
rclb
mov
ljmp
inc
repz
push
das
add
mov
stc
dec
mov
outsl
sub
gs
add
rcll
es
cld
dec
lea
cmpsl
adc
lock
add
dec
inc
jmp
add
nop
fnstcw
ljmp
aaa
add
pushf
lods
into
lahf
cwtl
shll
repnz
add
aas
xor
scas
jae
cmpsl
add
enter
cltd
cld
int3
and
fildll
adc
sub
add
movsb
add
sub
sub
lea
fadds
test
sub
cmp
sbb
orb
push
lods
xchg
cmc
repnz
jbe
lods
adc
add
sbb
aaa
mov
add
mov
adc
or
add
jo
jb
pop
lods
mov
push
inc
ds
stc
xchg
sarl
pop
scas
jnp
sub
inc
pop
add
cltd
test
mov
adc
movsl
add
ss
imul
push
add
js
xor
cmp
popf
sub
mov
mov
aas
push
inc
cmpsb
ret
shll
in
add
jae
sub
adcl
test
mov
push
fwait
and
icebp
cmp
ss
fisubrl
add
or
ds
push
addb
cmp
mov
sets
or
fnsave
add
insb
test
xchg
ficoml
ja
sbb
push
int3
adc
inc
in
stos
jb
sahf
lods
add
test
pop
add
inc
mov
in
dec
jns
cli
lahf
add
pop
clc
insl
in
shr
xchg
sbb
mov
pop
lods
jmp
fucom
iret
add
pop
outsl
das
enter
dec
jecxz
test
xor
loopne
add
cmp
or
add
int
mov
and
cmp
icebp
push
dec
push
loopne
inc
add
mov
and
jecxz
pop
xchg
and
add
mov
mov
xchg
lds
in
sbb
jbe
cmp
sub
cmp
add
test
add
add
add
xchg
cld
xorl
psrad
leave
rcrl
cmp
adc
data16
ds
jg
xchg
jno
test
es
imul
add
mov
dec
mov
out
mov
js
jb
mov
pop
scas
inc
bound
adc
imul
adc
sbb
jns
scas
sub
inc
call
insl
add
mov
jb
mov
scas
fwait
xchg
jno
jns
push
sbb
jns
fsubs
mov
lret
cmpl
add
pop
or
icebp
inc
mov
and
jl
fstpl
cmp
cmp
jge
fwait
dec
flds
pusha
pop
ret
jno
add
cmp
das
outsl
mov
push
jg
or
cmovo
pop
push
cmp
xor
pusha
sarb
jb
lods
ret
iret
xor
inc
test
cmpb
jno
pop
seto
add
pusha
lret
pop
push
loope
add
push
add
cmp
mov
pop
add
bound
cwtl
gs
fimuls
pop
das
sub
xchg
nop
mov
lahf
inc
imul
mov
rcll
sub
and
iret
adc
add
pop
mov
fistpl
jmp
pop
and
mov
add
fwait
cli
cmp
mov
and
xor
lock
mov
fisubl
xor
notl
add
adc
out
imul
lcall
xchg
fidivl
std
lods
inc
insb
add
mov
push
adc
push
and
cs
loope
insb
adc
icebp
and
sbb
fsubs
adc
in
fs
arpl
aas
xchg
dec
mov
mov
mov
and
cmp
add
mov
xor
mov
cmp
pop
fistl
pop
adc
mov
mov
call
out
mov
xchg
xlat
xor
int3
fwait
mov
add
inc
movsb
jo
cli
sahf
adc
and
in
jp
jb
mov
or
popa
xchg
adc
cmp
sahf
mov
mov
add
inc
mov
xchg
jl
add
push
arpl
xchg
xchg
jge
jb
add
mov
fadds
iret
pop
mov
test
push
add
sub
addr16
imul
test
sub
fisubrs
or
mov
test
scas
push
push
mov
pop
ss
mov
out
test
mov
jb
pushf
adc
dec
dec
pop
add
adc
push
inc
lcall
int3
inc
add
or
ret
stc
cmp
or
les
jmp
cld
pop
add
push
xchg
lahf
add
sub
in
or
mov
idivb
test
xchg
sar
or
xor
cmpsl
jcxz
aam
lcall
inc
add
mov
movsl
add
or
dec
pop
nop
lods
adc
lds
ficompl
je
in
xor
add
ds
add
test
incb
ljmp
mov
and
nop
add
test
cld
lret
add
repz
add
adc
pushl
jmp
sbb
jmp
inc
push
pop
push
xor
loopne
aam
loope
pusha
and
pop
push
sbbb
xchg
xor
hlt
rcl
mov
mov
inc
fdivrl
addb
hlt
sub
push
xchg
lock
jb
or
add
push
repz
roll
std
pop
cmp
lock
add
iret
icebp
cmp
add
das
push
mov
shr
fmull
sub
imul
xchg
and
int3
xor
inc
xchg
pop
fisttpl
cwtl
or
mov
add
vpackuswb
je
inc
mov
rcll
cmc
out
lock
xchg
outsb
mov
push
lcall
fdivl
idivb
inc
pop
mov
lock
cmp
xchg
xchg
loope
push
dec
ds
mov
cmp
sbb
mov
dec
sub
dec
in
int3
xor
pop
ja
mov
add
jb
pop
cmp
stc
out
add
mulb
lret
sbb
mov
push
and
fucomip
xchg
add
cltd
jns
add
sbb
loopne
or
shr
es
jecxz
add
cmp
out
inc
in
pop
and
adc
xchg
mov
fimuls
movsb
test
pusha
ret
inc
out
inc
dec
jnp
add
push
sub
sub
imul
je
loopne
loope
rcrb
je
jns
daa
cwtl
idiv
mov
insl
lcall
sbbb
pushf
pop
insb
sbb
sar
and
and
pop
movsb
mov
and
fdiv
js
into
out
gs
add
jmp
lea
movaps
cwtl
js
adc
push
icebp
lods
loopne
hlt
add
rorl
inc
mov
pop
mov
ret
rolb
aam
dec
or
add
push
stos
dec
insb
int
adc
mov
mov
popl
add
mov
divb
scas
cmc
add
fsubrs
and
repnz
lret
add
scas
popf
push
jp
mov
mov
pop
xchg
std
hlt
aad
cmp
add
dec
fldl
cmpb
out
add
adc
lret
jne,pt
pop
arpl
add
sahf
sbb
pop
inc
add
cmp
sbb
mov
add
add
pop
or
mov
push
lea
pusha
loopne
loope
fsubs
out
lea
sub
pusha
sbb
out
pop
lcall
inc
and
int3
push
cmp
xchg
or
mov
ffreep
jmp
test
push
xchg
lock
sub
cmp
enter
push
jnp
dec
and
cmp
aam
sub
sub
jp
lahf
cmp
adc
subb
pop
test
xchg
mov
jno
jno
add
inc
cmc
movsb
push
mov
xchg
jecxz
bound
andb
add
add
add
sti
mov
repz
xchg
mov
add
enter
dec
push
cltd
add
les
or
scas
add
nop
mov
pop
fcmovb
xor
cmp
clc
clc
add
jns
stc
mov
adc
mov
mov
sub
add
xchg
out
push
test
movsb
xor
cmp
dec
add
jmp
push
stos
cmp
js
xchg
in
pop
pusha
push
mov
je
xor
dec
lahf
xor
xlat
movsb
pusha
lods
rcll
cmp
or
dec
outsl
les
pop
popf
and
test
stos
repnz
dec
lods
into
inc
sarl
mov
pop
push
mov
add
sub
pop
push
pop
dec
xchg
add
xor
push
call
pushf
les
push
mov
xor
movb
push
js
shl
not
add
cmc
sbb
push
clc
jl
and
sub
das
xchg
inc
mov
push
sbb
pop
iret
adc
cmp
pusha
xchg
cmc
pusha
and
sbb
cmpb
fcompl
cs
push
out
and
movsb
stos
push
loope
loopne
imul
pop
add
into
cmp
mov
cwtl
push
mov
xlat
mov
ret
jne
icebp
in
inc
mov
incb
mov
inc
adc
mov
fists
add
pusha
jge
inc
add
push
xchg
and
cs
ret
cs
insb
add
push
in
icebp
sub
pusha
int3
sbb
mov
push
mov
mov
mov
fldl
fcoml
inc
or
push
clc
stc
dec
push
ret
and
xorl
daa
aad
pop
sbb
fistpl
enter
or
adc
aas
xorb
sbb
stos
and
sahf
jbe
out
out
add
repz
enter
mov
cli
mov
mov
add
lret
mov
out
dec
push
pusha
jecxz
and
jo
jb
mov
dec
pushf
cmp
mov
int
add
dec
or
subl
mov
add
dec
ret
jg
xor
adc
fwait
test
push
and
mov
dec
adc
sbbb
cmp
mov
test
in
sub
add
nop
mov
cs
adc
negl
shrl
fdivl
scas
and
sbb
repz
push
jp
sbb
jo
in
addb
ljmp
add
adc
jo
add
orb
add
repnz
or
sbb
add
xor
lret
insb
xchg
jbe
cmpsl
add
cmpsb
jle
inc
loope
sbb
or
fs
add
sti
loopne
shrb
fdivrs
push
inc
xchg
sub
or
xchg
mov
cmp
jnp
adc
adcl
in
xchg
add
test
push
cmp
mov
adc
lock
xchg
inc
sbb
dec
jp
or
call
adc
pop
loop
pop
inc
add
aaa
das
fstpt
jns
add
mov
rclb
bswap
mov
sbb
push
out
sbb
pop
cwtl
ret
in
pushf
xor
and
sti
add
shrl
rolb
xchg
dec
test
mov
push
scas
fwait
cmc
lds
pop
and
cli
xchg
fstpl
add
movd
insb
mov
pop
jne
lea
sbb
shlb
insb
and
ljmp
and
push
data16
mov
jmp
jbe
cmp
rol
add
sbb
inc
aam
mov
jge
add
fcompl
roll
mov
rclb
sbb
insl
push
and
pop
cwtl
movsl
fadds
xchg
cwtl
pushf
sbb
add
mov
cmpb
lock
cld
sahf
and
mov
mov
sti
add
xor
rolb
aam
add
imul
enter
pop
add
movsl
push
imul
push
or
inc
jl
inc
cmp
sbb
push
fistl
mov
popa
jle
testl
add
add
mov
add
sbb
or
and
fwait
in
enter
nop
pop
mov
jno
repz
xchg
push
and
add
dec
cmc
jo
cli
cwtl
aam
pusha
sbbb
or
add
jmp
mov
jae
gs
adc
jne
sbb
xchg
lock
jge
fs
mov
push
ljmp
push
mov
addr16
and
push
push
mov
add
jb
jbe
dec
cmp
in
andb
add
pop
pop
orb
dec
rcrb
fcos
add
faddp
adc
and
cld
push
loop
mov
or
gs
add
out
xor
jle
add
xor
add
ja
add
and
popa
gs
sbb
jo
push
add
sbb
roll
cld
cmpsb
cli
cmpsl
add
pop
pop
lahf
xchg
stos
xor
std
int
push
fnstenv
fistpll
pop
xchg
in
add
xor
mov
fucomi
add
cmp
cmpsl
push
mov
push
jecxz
sub
cwtl
add
imull
dec
sub
cmp
rcr
dec
dec
aam
add
int3
clc
add
gs
add
jle
xlat
dec
outsl
enter
add
icebp
daa
ret
adc
pop
add
mov
add
loope
enter
inc
mov
aaa
mov
jl
ljmpw
dec
push
jecxz
clc
sarl
pop
adc
sahf
push
int3
outsl
or
insb
rcrb
and
cmp
pop
add
dec
bound
imul
sbbb
push
lock
aaa
out
xorl
or
data16
push
and
sbb
je
add
lcall
fcomip
dec
bound
mov
mov
ss
out
data16
dec
xchg
sbb
push
adc
inc
ret
rorb
sbb
fs
jae
jb
movsb
adc
fadds
inc
sti
cwtl
mov
and
loopne
push
add
jnp
loop
sub
test
xchg
outsl
sbb
loopne
icebp
pop
pushf
push
and
les
or
adc
dec
add
sbb
subb
cmp
fstpt
in
xchg
add
test
enter
faddl
mov
xchg
imulb
not
and
jnp
cmp
rcrl
xchg
add
pop
jo
jae
movsb
outsl
mov
inc
mov
bound
popf
out
add
cmpsl
push
repnz
sbb
pop
cltd
cmp
or
or
dec
xchg
fs
add
popf
cmp
aas
mov
dec
jl
cmc
add
aad
adc
xchg
mov
addr16
les
add
fsubrl
sub
test
adcl
scas
repnz
shl
mov
pop
les
repnz
push
and
xchg
shll
sbb
jle
loopne
jo
les
mov
sub
lcall
shlb
outsb
mov
in
in
add
mov
mov
xchg
in
cs
in
add
mov
leave
outsl
sub
jmp
mov
cmc
lret
jno
add
push
testl
leave
adc
mov
sub
jecxz
fimull
ret
jne
mov
ljmp
cmp
jge
or
dec
mov
sub
sub
loope
xchg
mov
xchg
mov
dec
mov
sbb
leave
push
add
in
aas
add
jmp
lret
fiadds
add
sub
pop
stos
and
xor
cmp
jle
fmull
dec
maskmovq
push
pushf
add
aad
stos
mov
adc
inc
jne
push
xchg
jae
mov
sahf
les
adc
fdivrs
in
ljmp
cmc
dec
jge
add
or
incl
mov
inc
test
out
jmp
lahf
cmc
scas
mov
cmpsl
add
mov
add
and
sub
hlt
into
loopne
xor
sub
sub
fstl
xor
push
dec
mov
add
or
add
add
push
dec
cmpsl
lods
repz
inc
add
bound
test
jp
jo
pop
cmpsl
ret
test
sbb
lahf
cmp
fwait
loopne
ret
test
mov
pop
rorb
test
lods
sbb
bound
jo
and
inc
or
or
faddl
jns
insb
sub
mov
and
xchg
cwtl
scas
fwait
nopl
add
fiadds
outsb
adc
inc
adc
outsl
pushf
je
jb
add
stos
inc
jge
dec
inc
lock
jnp
adc
jns
sar
das
xor
stos
loopne
lods
add
fnstcw
add
sahf
clc
cmpb
cwtl
add
adc
popf
in
dec
jg
push
inc
call
out
cmp
pop
add
xorl
cld
push
rorb
cmp
add
sub
add
daa
lods
xorb
fstpl
in
xchg
sbbl
add
scas
cmp
push
mov
aad
sbb
sub
idivb
jo
outsl
add
mov
adc
mov
jecxz
adc
cmp
clc
add
rcrb
popf
lods
lret
or
lds
je
cmp
inc
pop
mov
cltd
inc
add
pusha
push
add
cmp
jae
sbb
mov
jge
inc
repnz
xchg
push
les
dec
pop
lea
dec
sub
scas
sti
or
add
xor
jmp
sbb
rclb
jae
cltd
and
mov
add
das
pusha
sbb
loop
subl
and
and
dec
xchg
add
fldt
add
pinsrw
inc
adc
cld
int
sub
mov
mov
mov
xorb
out
fnstenv
ja
mov
inc
mov
mull
jnp
dec
in
fsubrl
movb
dec
rclb
mov
addb
lds
add
jne
or
or
rorb
call
test
arpl
or
add
inc
push
ret
mov
push
cmp
in
sub
aam
or
xor
shrl
mov
jecxz
shlb
call
mov
in
lret
adc
lcall
jp
in
out
and
add
pop
imul
lock
cmp
std
cmp
das
jle
sbbb
and
rol
push
pushf
aam
jl
adc
add
inc
xor
nop
repnz
cmp
sub
xchg
pop
add
adc
xor
pop
adc
inc
imul
gs
xchg
add
ret
xor
addb
add
in
iret
xchg
add
adc
addr16
loope
add
add
cmpb
sahf
add
ret
push
filds
push
and
jecxz
ss
and
mov
mov
pushf
in
or
sub
andl
ja
fmuls
lock
in
fnsave
pop
xchg
sub
faddp
mul
mov
xchg
or
dec
repz
mov
lret
loop
jp
mov
call
push
or
out
mov
nop
and
dec
jae
add
dec
cmp
rcr
loop
test
cli
bound
iret
hlt
nop
push
jnp
cmpsl
in
sar
xor
aad
mov
jge
mov
add
clc
xchg
adc
xor
outsb
mov
in
rcrb
mov
pusha
and
aam
mov
fcmovnbe
in
lcall
test
lods
loopne
pop
fisubs
add
mov
mov
push
sub
add
xor
push
in
lods
int3
es
dec
stos
icebp
shll
nop
sub
inc
les
mov
repnz
cwtl
cmp
push
push
mov
mov
loopne
idivl
insb
sub
adc
inc
scas
push
cmpsb
or
inc
or
dec
roll
jge
clc
stc
in
and
xchg
cs
cmp
push
ret
inc
or
xchg
or
popa
mov
mov
mov
inc
cwtl
das
repz
jl
loope
dec
xchg
cmc
enter
mov
xor
and
adc
xor
nop
movsb
lods
and
inc
loopne
adc
test
rcl
and
popf
mov
xchg
dec
addl
fnsave
insb
adc
add
sub
loopne
cmp
xor
inc
stc
add
push
and
loop
mov
adc
or
nop
std
dec
les
stos
mov
push
dec
inc
xor
jl
add
lcall
and
inc
jbe
add
lea
fdivl
mov
lods
ds
mov
jecxz
idiv
loop
loopne
mov
call
push
push
enter
cwtl
pushf
add
mov
int
and
jb
adc
xchg
test
and
xor
test
aam
push
lock
add
lret
cmp
insb
fs
insl
xor
push
add
mov
push
and
hlt
and
and
mov
pop
inc
mov
clc
push
and
jmp
dec
sbb
popa
test
dec
frstor
repz
add
adc
mov
add
jnp
sub
and
add
mov
cmp
add
pop
fmuls
fs
and
cmpsb
push
jns
or
mov
sub
pop
inc
mov
fs
mov
mov
loop
sti
rclb
and
xchg
pop
repnz
mov
xchg
add
sbb
sub
and
lods
mov
verw
jge
pop
subl
loopne
bound
stc
js
or
fsubl
pop
cwtl
add
sbb
insl
in
sub
lret
sti
cmp
xchg
sbb
add
data16
add
push
push
test
shr
adcb
iret
inc
mov
rolb
add
mov
push
mov
fbstp
setge
mov
test
cli
movsb
imulb
scas
add
dec
add
mov
roll
movsb
xor
cli
mov
ret
mov
stos
arpl
dec
sbb
cld
sbb
testl
rorb
loopne
or
jp
sub
add
add
push
mov
outsl
ja
push
pop
xor
and
push
xor
mov
inc
and
enter
push
pop
sub
je
add
dec
std
inc
mov
shr
insb
jl
inc
mov
rolb
mov
sub
adc
mov
inc
mov
clc
mov
addr16
sbb
stc
cli
and
add
mov
shll
sub
popa
jbe
push
sarb
pop
sbb
shr
mov
in
in
xorb
cli
mov
lea
and
add
inc
inc
cmp
mov
mov
xor
push
sbb
aad
pop
leave
imul
sub
mov
sbb
mov
add
fs
cmc
add
arpl
js
pop
cmp
mov
add
mov
loop
je
in
shrb
inc
add
inc
xor
or
pop
rcrb
mov
cli
adc
jge
adc
adc
pop
push
sub
hlt
test
sbb
test
mov
adc
add
addb
out
dec
repnz
xor
push
sub
jle
lods
mov
shl
adcb
inc
pusha
loopne
mov
fs
pop
jnp
xor
aas
test
test
and
fsubs
loopne
pop
ljmp
das
aad
dec
enter
and
fwait
add
loopne
clc
add
jae
cmp
pop
jno
out
outsb
pop
adc
push
movsb
dec
bound
ror
push
pusha
push
ss
xchg
testl
pop
jb
test
roll
sub
push
jne
out
out
push
add
dec
leave
xorl
cmpsb
mov
mov
add
dec
sub
sub
mov
out
rcrb
mov
and
popa
fs
push
pop
add
and
sbb
outsb
jge
addr16
jbe
pmaddwd
push
cmp
cmp
mov
jg
pop
mov
xor
int
mov
inc
js
pop
imul
sub
pop
into
jl
pop
inc
fdivs
jbe
dec
push
or
push
pop
add
loopne
jle
cwtl
cmp
pop
mov
inc
lods
aaa
jo
mov
sahf
fistpl
sti
ja
call
iret
mov
add
or
add
jb
or
push
add
mov
xchg
lahf
dec
jo
or
jbe
pop
out
add
xor
les
add
in
add
adcb
inc
add
dec
and
in
faddl
pop
push
mov
sub
dec
and
cli
dec
cld
mov
push
dec
jmp
push
pusha
adc
fsubs
insb
bound
je
xor
mov
ds
add
jb
push
inc
mov
loop
add
cmp
clc
outsl
rcrb
push
inc
aad
sbb
sahf
mov
test
ret
imul
arpl
jne
rcrb
sbb
add
out
movsb
xlat
pop
xor
inc
fdivr
add
inc
scas
cltd
xor
sbb
stc
pop
xor
xchg
cwtl
add
nop
ret
add
xchg
push
push
inc
jge
add
and
iret
scas
int3
mov
les
aam
push
mov
adc
push
inc
push
ja
fdivs
xor
jns
pop
pop
add
sahf
lock
cmp
repz
jmp
sbb
sbb
add
rcll
daa
mov
jno
add
pop
negb
imul
xchg
and
loop
add
lcall
sbb
inc
fs
hlt
adc
push
mov
dec
pop
or
rcrb
and
adc
adc
mov
cmpsb
pop
jns
add
mov
loope
cmc
shr
add
mov
jge
sub
inc
cmpsl
push
test
lock
inc
mov
add
adc
inc
movsb
xchg
std
ret
add
cmpsb
stos
cmpsl
cli
lods
and
and
or
push
sbb
in
jbe
xor
add
add
sub
pop
xchg
mov
test
mov
add
cld
lods
inc
scas
adc
movsl
mov
push
push
fsubrp
jns
add
mov
sub
lcall
push
jmp
into
imulb
pop
pop
lock
push
js
loope
xlat
cmp
pop
iret
hlt
mov
andb
rcrb
xlat
add
fisubl
pop
nop
les
sub
rcl
push
int
nop
pusha
add
mov
jp
mov
pop
pop
pushf
add
ja
andl
fsts
sbb
repz
or
or
mov
inc
rclb
jg
into
rcll
add
mov
pushf
mov
and
outsl
shlb
cmpsb
push
orb
dec
or
mov
mov
xchg
orb
and
add
pop
data16
sti
lahf
daa
insb
pop
test
xor
aas
mov
add
pusha
fidivl
add
push
pop
fdiv
pushf
test
dec
in
cld
add
jae
sbb
push
xchg
cld
movsb
jp
jno
hlt
inc
call
xchg
sbbl
sub
shrb
das
insl
lock
in
pushf
dec
add
lahf
mov
add
pop
out
popl
dec
in
fists
mov
xor
mov
add
shll
sub
xor
mov
xchg
inc
mov
add
pop
add
sub
cmpsb
aad
cmc
pop
sbb
daa
jge
js
or
mov
loop
and
clc
cmp
push
pop
add
adc
fisttpl
mov
loope
lods
add
jge
sub
test
ss
imul
lods
jecxz
add
das
stos
movsb
imul
jne
bound
push
sbb
mov
dec
imul
or
ds
xchg
xchg
addb
push
push
sbb
lock
fstpl
and
sub
ljmp
aas
push
push
imul
rol
les
sarb
add
sub
cmp
pop
or
mov
push
pop
into
pusha
lods
and
jns
std
in
stos
mov
rcr
lods
mov
das
loope
cmpb
frstor
jl
push
pop
adc
jge
dec
dec
inc
add
push
mov
test
cli
mov
test
mov
inc
pusha
out
loopne
jmp
je
xor
push
or
lock
pop
push
cmp
mov
imul
cmp
inc
in
int3
jb
add
fidivl
test
das
cmp
add
mov
stc
cmp
dec
xchg
sbb
iret
mov
inc
add
out
mov
repz
outsb
pop
clc
testb
sbb
stos
pop
addr16
sub
icebp
out
mov
cmc
inc
insb
add
cld
add
jae
subb
pop
push
add
outsl
add
jge
adc
push
mov
mov
sub
xchg
sbb
das
aad
push
pop
out
call
add
dec
mov
mov
enter
cltd
inc
jo
inc
add
pop
sbb
add
dec
dec
adc
mov
or
movsb
fadds
xor
movsb
std
mov
xchg
push
pop
sub
cmpsl
jmp
xchg
nop
add
mov
add
push
inc
fmull
and
xchg
loopne
add
ja
sub
push
jl
int3
adc
cmp
sub
sbb
inc
pop
nop
push
jb
xchg
movb
call
push
xchg
neg
mov
inc
inc
xor
add
pop
shl
dec
jbe
in
pusha
out
and
mov
cli
scas
divb
cmp
or
std
add
sub
add
xchg
in
add
lock
inc
sub
mov
add
xchg
or
push
mov
add
out
mov
imul
push
sbb
sarb
cmp
insb
xor
sbb
pop
test
ret
or
jae
inc
xchg
imul
test
inc
test
pop
push
fcomps
xchg
pusha
test
adc
and
xlat
negb
rcl
cltd
mov
in
cmp
popa
shr
push
popf
pop
or
add
push
jecxz
int
adc
adc
inc
fiaddl
mov
or
and
jno
cmp
push
cmpsl
pop
add
or
xor
pop
bound
push
push
add
pop
cli
cltd
xor
lock
inc
push
mov
add
xchg
mov
aas
push
data16
stos
add
inc
add
ret
cli
or
pop
inc
cmp
pop
pop
xchg
xchg
inc
adcb
dec
iret
loop
adc
mov
jmp
clc
stc
aaa
dec
dec
add
ljmp
dec
test
inc
cli
sbb
fs
add
pop
push
lcall
pop
mov
shrb
jl
cltd
aam
popf
push
loop
pushf
sub
fwait
outsb
jns
mov
mov
test
fnstenv
or
ficompl
loope
pop
bound
int3
add
pushf
mov
nop
cwtl
adc
sbb
mov
push
or
out
add
add
add
sbb
adc
ret
std
xor
add
jge
test
and
cmp
cmp
fdivl
fldcw
shrb
pop
add
cmp
scas
mov
nop
inc
sbb
pop
xor
add
sbb
pop
mov
jnp
xor
sahf
mov
xchg
adc
popf
pop
pushf
movsb
pop
pop
push
addl
mov
enter
and
xchg
loopne,pt
lods
in
add
rcll
in
push
push
ficompl
mov
pop
pop
or
mov
cs
mov
test
mov
add
xlat
xchg
inc
ljmp
xor
je
push
inc
popa
pop
xchg
out
pop
sar
cmp
lock
jge
subl
add
lods
push
add
scas
push
ret
pusha
lods
adc
popa
rcll
add
cmpsl
int3
in
popf
shl
dec
jnp
pop
mov
pop
mov
xchg
testb
lods
add
std
add
ficoml
or
repnz
or
adc
orb
lret
sub
loop
in
call
xor
add
mov
cwtl
cmp
add
fstpt
aas
add
mov
int
mov
inc
pop
mov
movsb
into
mov
test
sub
lea
mov
or
add
add
loopne
loop
pushf
mov
xchg
rcll
cmpsb
dec
fdiv
sbb
nop
pusha
cmp
out
xchg
pop
gs
fcmovbe
xchg
shrb
lret
sbb
js
clc
pushf
jecxz
inc
adc
inc
jp
add
and
pop
sbb
adc
in
shr
mov
subb
dec
rcr
cmpb
pop
sbb
loopne
adc
ja
or
icebp
and
shl
outsb
mov
sbb
inc
leave
das
inc
mov
add
int
aad
mov
inc
rorl
test
add
and
ss
aas
loope
sbb
lods
pop
jp
popa
add
enter
push
and
add
mov
sbb
inc
ds
add
inc
fiadds
ljmp
fldt
lock
jbe
insl
ja
cmp
bound
mov
jp
jns
inc
mov
xchg
cltd
sub
jbe
inc
jecxz
jle
add
xchg
in
out
into
add
fwait
call
cmp
cmp
scas
out
pop
add
fiadds
cmpb
jg
incb
stc
jo
shlb
fiaddl
test
mov
loopne
out
mov
bound
xchg
jno
mov
add
ficoms
adc
push
mov
mov
hlt
sti
add
add
add
xchg
das
dec
add
xchg
pop
push
mov
mov
insl
push
stos
adc
movsl
pusha
imul
and
add
sti
inc
out
jnp
xchg
add
jle
lea
add
mov
fadds
pop
add
fiaddl
pop
jmp
cmpsl
add
mov
es
test
jbe
cmp
xchg
xchg
nop
xlat
dec
out
cmp
xchg
and
or
inc
clc
std
lock
leave
pop
pop
pusha
les
ja
repz
pop
dec
xchg
push
sub
mov
sahf
and
mov
mov
in
int3
jecxz
push
cli
sbb
cmc
push
daa
sub
xchg
es
jne
test
adc
out
add
mov
sub
andb
orl
and
xchg
push
xor
xchg
add
pop
xor
es
mov
mov
out
lea
inc
mov
pusha
push
jecxz
dec
mov
xchg
add
mov
and
into
and
cmp
dec
fidivl
dec
push
cmp
cmpsb
cmp
popf
subb
xorl
pop
xchg
lret
push
in
sti
outsb
icebp
daa
out
add
cmp
sub
loop
lods
insb
cltd
add
xor
add
sub
or
orb
cmpsb
sub
psrad
lds
adc
outsl
xchg
rcll
sbb
ret
and
add
cwtl
inc
push
jbe
cmp
shrl
data16
adc
clc
push
push
mov
in
ffreep
inc
add
ds
pushf
scas
nop
inc
incl
dec
inc
xor
stos
adcb
and
mov
les
daa
call
pop
out
cld
jns
jl
out
popf
cmp
ret
ror
xor
pop
add
mov
lods
add
in
xchg
ret
sub
and
add
enter
pusha
pop
or
test
jbe
add
fsubrp
cmp
pushf
add
ja
jo
pop
ds
inc
loopne
jnp
add
cld
fidivrl
rol
sbb
daa
add
mov
push
stos
adc
fucom
sbb
mov
repz
incb
add
pop
jle
pop
mov
add
cmc
sbb
cmp
and
je
push
push
mov
ret
outsb
lret
adc
adc
data16
add
xchg
and
xchg
fcmovu
xchg
rolb
add
scas
xor
push
rorb
fidivrs
xor
aam
addr16
dec
stc
cmpsl
mov
xchg
jo
repnz
mov
push
loope
idivb
mov
sbb
mov
xor
pop
hlt
xorb
rcrl
cmpsl
push
sbb
or
test
add
adc
rorb
mov
aad
leave
pop
cmp
push
dec
cmc
ret
xor
sahf
add
jne
loop
mov
sbb
add
push
pop
jmp
out
and
sbb
sbb
jmp
ret
or
sub
lret
add
xchg
fstpl
mov
mov
sub
in
fadds
lahf
movsb
pop
lds
jmp
mov
jae
nop
fcmovnu
push
stos
jnp
clc
xchg
loop
cmp
adc
add
test
fistpl
out
inc
lea
addr16
xchg
jnp
loopne
repz
xlat
jl
stos
rolb
sarl
sub
movsb
add
ljmp
add
bound
pop
orb
pop
rcl
mov
call
popf
add
push
sub
cli
add
fwait
jno
repnz
sbb
pop
ret
pop
adc
mov
out
and
push
xchg
cltd
xor
daa
xor
sub
cs
sub
or
arpl
bound
pop
add
push
inc
cltd
leave
sub
add
add
out
lock
push
add
sbb
mov
or
sahf
scas
imul
insb
pop
pusha
lods
and
into
add
js
mov
rclb
cld
sbb
add
clc
inc
loopne
lods
add
jo
pushf
in
loopne
shll
push
pop
mov
add
das
mov
repnz
push
cld
les
and
add
push
dec
add
dec
mov
pavgb
cs
imul
popa
add
dec
add
pop
inc
ja
aam
iret
add
sti
pop
sub
mov
fadds
rorl
fadds
add
mov
or
jmp
pop
loopne
lods
add
les
push
daa
adc
pop
sub
dec
stos
add
outsl
jno
cmp
pop
scas
mov
jne
shrb
add
pusha
xchg
mov
rcrb
adc
loope
andb
push
lret
insb
lahf
adc
pop
add
popf
setae
sub
fcmovu
ja
jno
add
and
mov
pop
cmp
xor
jb
popf
pushf
cmp
mov
test
out
stos
add
in
mov
mov
cmc
add
addr16
sbb
mov
add
sbbl
cmp
xor
inc
out
hlt
leave
sbb
xor
rcrb
mov
xchg
sub
nop
add
ret
sbbb
outsb
outsl
out
shl
xchg
sbbl
mov
xor
jno
mov
gs
loop
mov
icebp
dec
push
xor
dec
mov
jle
std
cmp
aam
sub
into
xorl
add
sub
cld
aam
sbb
jbe
cmpsl
test
cmp
sbb
and
mov
shr
pop
mov
sub
inc
fbld
repnz
push
add
mov
add
cwtl
dec
add
push
or
add
xchg
cmc
xor
add
add
adc
enter
pop
insl
push
icebp
lahf
test
stos
shrb
jp
sub
xchg
pop
fiadds
mov
ds
stc
or
stos
add
sbb
add
shlb
cmp
fs
pushl
clc
fbld
jae
lret
mov
test
and
xor
inc
enter
int3
push
mov
aaa
lods
ja
and
add
xor
fistps
int3
cmp
mov
jecxz
imul
jmp
add
add
addr16
movsb
rcrb
add
cmp
jae
push
mov
invd
jge
cld
aaa
test
js
hlt
sub
lgs
lret
add
adc
cld
push
movsl
inc
xchg
add
icebp
sbb
push
pop
adc
add
outsl
dec
call
cmp
fidivrs
pop
ljmp
add
push
adc
ljmp
stos
add
jmp
pop
add
loop
push
sub
sub
js
sub
xchg
andb
shl
sbb
cmovge
dec
push
addl
add
nop
orb
std
pop
loop
cwtl
pop
sub
icebp
push
ds
out
stc
add
xor
inc
add
cmp
pop
jnp
xchg
sub
inc
xor
fiaddl
xor
divl
adc
out
cmc
lahf
add
jmp
push
in
sahf
fisubrl
loope
rolb
adcb
xchg
mov
adc
mov
nop
and
mov
or
inc
xchg
sub
fildl
call
lret
push
mov
pop
filds
xchg
rclb
cmc
flds
xor
push
insb
cli
jge
push
xchg
sub
roll
jno
xor
xchg
mov
rorl
std
add
dec
out
idivb
lds
pop
lods
outsb
push
mov
xchg
dec
and
fwait
bound
addb
push
ret
or
mov
sti
dec
call
iret
lods
xlat
stos
dec
jo
add
lcall
mov
push
jae
mov
loop
add
add
push
insl
and
jo
add
xor
pop
add
imul
bswap
inc
ljmp
push
into
repnz
or
mov
add
adc
jns
mov
insl
ljmp
add
and
add
mov
andb
ret
push
add
jne
je
xchg
mov
add
mov
add
loopne
fwait
sbb
cmc
cmpsb
add
roll
and
adcb
cmp
sbb
std
xor
jno
add
inc
pop
or
and
sub
xor
cmp
movsb
insb
adc
cli
dec
mov
add
and
and
adc
notl
lea
movl
mov
mov
add
cld
cmp
pusha
add
iret
movsl
cmp
fstps
sahf
repnz
xlat
roll
cmp
loopne
dec
mov
jecxz
add
cmc
call
pop
cmp
mov
dec
mov
loopne
bnd
inc
loope
add
pop
mov
and
mov
cmp
sub
cmp
gs
adc
pop
pop
insb
push
inc
mov
jnp
js
call
sub
mov
arpl
inc
ljmp
shrb
sub
jbe
xor
pop
sbb
inc
add
adc
ljmp
iret
push
mov
enter
mov
and
test
mov
loope
sbb
out
add
movsb
mov
add
push
dec
test
xchg
aas
add
pop
fucomi
iret
jae
add
jb
dec
xchg
jl
into
xor
scas
mov
pop
mov
pop
loopne
lahf
adc
mov
pusha
add
ret
adc
pop
test
xor
test
and
sub
sub
adc
xchg
mov
test
lret
cmp
pop
add
jne
and
aad
add
pusha
aas
jge
cmp
push
std
xchg
add
test
lods
pop
sbbb
pop
xlat
ljmp
jle
mov
add
sbb
jnp
jns
out
scas
dec
cmpsb
adc
jbe
lods
add
scas
aas
pop
mov
mov
cmp
adc
jmp
push
jg
or
mov
cmc
lea
add
stos
cld
add
pop
mov
cmp
in
sub
pop
fldl
mov
out
call
add
push
sbb
jno
inc
adc
add
push
mov
loope
out
movsb
push
sub
push
cmp
add
sbb
mov
push
lds
inc
ljmp
add
jae
add
daa
add
test
xor
pushf
and
cs
add
pop
addb
sub
jp
mov
lea
int
cmc
push
sti
xor
adc
jl
add
mov
int
add
fildll
jb
dec
insb
jo
adc
daa
add
nop
int3
fadds
adc
or
sbb
enter
mov
test
faddl
mov
repz
stc
nop
imul
mov
add
mov
aad
xor
sbb
lret
std
mov
mov
jb
mov
lea
dec
cmc
adc
jo
and
loope,pt
fisttpl
xchg
adc
clc
sub
cmpsb
ds
cs
and
adc
pop
filds
into
sahf
test
jae
cmp
add
xchg
int3
mov
inc
sub
mov
add
loope
xorl
cwtl
lods
dec
add
xchg
inc
sbbb
loope
shll
cmp
testb
lods
jno
call
adc
fdivl
or
leave
jle
and
sub
aaa
mov
cli
repz
adc
outsl
sti
stos
popa
scas
sbb
push
repnz
mov
push
mov
data16
fildl
gs
push
dec
das
fisubrs
adc
add
jp
outsb
add
movsb
in
iret
subl
push
cmp
xchg
sahf
pushf
xor
mov
movsb
andl
inc
mov
subl
pop
ret
mov
stos
enter
out
addb
mov
sub
push
test
add
je
xor
xchg
fildll
add
adc
push
in
mov
sbb
sarb
pop
jge
push
mov
pop
dec
pusha
sub
jo
xor
push
aam
xor
je
adc
sarl
mov
add
inc
or
in
push
add
mov
xor
popa
push
cmp
loopne
popf
adc
in
dec
lahf
shl
xor
add
jne
lods
dec
pusha
fcompl
mov
inc
hlt
mov
add
xchg
pusha
mov
push
or
mov
mov
and
sbb
test
sub
cmp
inc
call
dec
add
outsb
add
push
or
loopne
mov
int3
mov
or
xor
pop
inc
add
mov
lahf
cmp
pop
lds
iret
mov
int3
push
push
sbb
bsf
cmp
adc
mov
and
cli
mov
push
mov
fdiv
adc
sbb
jns
or
dec
add
fdivl
popa
iret
push
rolb
push
mov
add
add
js
jb
jle
jg
dec
push
insl
popa
add
sbb
mov
add
add
ret
loopne
pop
add
repz
jne
sub
lods
push
out
jg
enter
out
rcl
lds
popa
call
add
out
mov
dec
and
xchg
idiv
ss
call
add
cs
or
sub
jnp
out
pop
imul
bound
fisubrl
mov
stos
out
xor
xor
add
mov
add
add
daa
inc
jmp
add
pusha
pushf
sbbl
lock
push
push
std
pop
push
ret
sbb
xorl
cmp
outsl
mov
or
push
lods
addb
je
add
lret
or
stc
push
arpl
jg
cmp
ror
dec
sbb
push
dec
lock
je
gs
or
add
or
add
add
aad
push
bound
pop
aam
dec
sbb
enter
cmp
jle
adc
fs
mov
dec
dec
aas
xor
add
xlat
jle
enter
pop
pop
sbb
lret
popf
and
out
jp
add
in
pop
jo
movsb
xor
mov
add
cmp
sub
sub
aam
addr16
push
mov
sub
mov
addl
sbb
and
jb
fcoml
xchg
add
je
mov
pusha
aas
dec
lcall
xor
enter
jmp
inc
jecxz
sub
add
pop
lea
mov
cmp
pushl
icebp
push
add
arpl
scas
mov
hlt
pop
insb
and
sbb
stos
or
jecxz
orl
call
push
arpl
mov
cmpsl
or
mov
cli
je
es
int3
and
inc
mov
cli
lock
sub
adc
push
lods
cmpl
xchg
cwtl
test
sbb
pop
xor
test
cwtl
in
loopne
push
fld
icebp
je
es
pop
pusha
fucomip
je
add
mov
sbb
xorb
cwtl
xor
sahf
xor
xchg
lods
mov
enter
or
jecxz
push
mov
adc
push
push
psllw
xor
sub
js
pop
add
or
adc
sets
and
xchg
pop
pop
mov
sub
and
aam
lea
dec
pop
shll
jl
movsb
hlt
and
add
add
addb
mov
loopne
pop
xor
cs
fimuls
lods
mov
pusha
mov
cwtl
and
cld
ds
pop
cmp
ror
xor
pop
cltd
mov
cwtl
cmc
shrl
xor
or
dec
call
ljmp
sti
sbb
or
mov
fidivs
cli
sbbl
mov
xor
enter
xchg
ja
add
jmp
dec
bound
mov
xor
int
lods
mov
std
and
jmp
mov
and
jne
aam
xor
and
cmc
je
ljmp
gs
fildll
in
fsubrs
inc
or
dec
mov
sbb
and
inc
xchg
xor
push
out
sbb
jp
add
insl
pop
sub
sbb
incb
or
add
lret
ficoml
xchg
mov
enter
add
int3
and
cmpsl
mov
add
and
xor
or
and
es
enter
and
inc
ljmp
push
lods
add
xchg
iret
dec
sub
mov
xlat
mov
mov
inc
add
mov
cmp
mov
adc
mov
xchg
fdivrs
insl
std
cmp
enter
jmp
jns
add
dec
add
sub
fstps
sbbb
add
xchg
inc
out
notl
xor
imul
es
adc
xor
roll
xchg
sbb
sub
adc
and
xor
je
es
jo
mov
gs
clc
adc
sbb
add
sub
addl
jmp
jg
add
mov
outsb
insb
cmp
mov
jne
push
inc
add
add
jb
call
ja
dec
daa
sbb
add
jo
hlt
pushf
add
dec
call
stos
clc
sbb
jae
or
test
sub
sub
movsb
push
inc
pusha
and
add
mov
cltd
fldcw
gs
mov
sub
mov
xor
loopne
and
add
add
pop
add
subb
adc
adcb
pop
dec
cs
cmp
mov
rep
mov
dec
lods
xor
loope
fdivp
xor
outsb
in
shlb
add
jmp
enter
sub
sbb
jmp
lods
sbb
xchg
add
push
aad
add
and
aaa
or
ja
adc
sbb
inc
sbb
sub
push
les
add
inc
clc
insl
push
push
add
fsts
pop
mov
negl
and
lock
or
push
out
sbb
add
push
lock
fadds
push
dec
cs
fidivs
mov
popf
lahf
dec
loopne
pop
push
push
int3
xor
xorl
mov
mov
pop
loope
cmp
sbb
xchg
adc
sahf
or
mov
loop
adc
in
cmpsl
fs
push
adc
pushl
xor
loopne
stc
sub
xor
adc
pop
rorb
pop
sub
imul
fildl
outsb
mov
cmpsl
outsl
add
lock
and
scas
insb
sahf
inc
js
push
xchg
insl
cmp
popf
push
fadds
je
repnz
xor
sti
and
or
adc
repnz
insb
push
mov
xchg
imul
aaa
lret
add
hlt
inc
fisubs
push
mov
fiadds
push
jmp
cmp
dec
ljmp
cld
leave
fisubs
pop
scas
mov
inc
xchg
add
cltd
mov
leave
scas
test
lret
femms
jbe
je
loopne
jns
pop
test
jb
stos
data16
mov
mov
lock
xor
and
mov
mov
mov
lds
addr16
pop
sahf
loop
ss
mov
clc
mov
mov
jns
sbb
add
push
push
cltd
test
test
inc
int3
lock
xor
lods
sub
xor
and
pop
xchg
out
and
aam
lods
lcall
rclb
movsb
cmp
xlat
sub
dec
testb
addr16
mov
stos
cwtl
mov
fcoml
gs
add
fdivr
xorl
adc
add
pop
insb
les
lock
inc
push
add
clc
sub
cmp
add
hlt
icebp
mov
add
xor
mov
jecxz
adc
les
call
imul
push
outsl
int
fcomps
dec
cs
mov
add
mov
cmova
imulb
jo
push
sahf
pop
in
and
add
ret
push
inc
arpl
add
push
call
ret
add
jae
and
mov
pop
inc
dec
jg
jecxz
inc
cltd
fimuls
cs
cmp
lret
andb
fcmovu
in
add
adc
popa
pusha
jo
andl
sbb
dec
or
mov
xor
jg
test
mov
xor
imul
push
xchg
sbb
loopne
sub
stc
add
lahf
inc
std
jg
cs
out
add
and
xor
jp
mov
push
gs
mov
xor
lret
iret
imul
cmp
and
roll
add
jle
hlt
xlat
push
rorb
pusha
jmp
sub
dec
adc
and
test
sub
push
inc
addb
pop
shll
mov
xchg
cmp
and
jae
add
fxch
enter
int3
add
or
push
arpl
jns
adc
cmp
rcll
add
push
es
stc
push
add
pop
mov
aad
leave
sar
xchg
mov
mov
stos
or
mov
into
xor
movsb
inc
in
inc
mov
add
and
dec
rcll
adcl
cmp
rorl
mov
mov
push
xchg
ds
sub
lock
add
pushf
addr16
out
adc
imull
cmp
add
push
ret
inc
mov
popf
lods
or
jae
add
movq
push
and
cmp
pop
nop
outsl
aas
mov
insb
pop
add
fstl
fiadds
sub
test
cli
ret
pop
enter
push
int3
cld
mov
lock
add
das
mov
cmp
adc
push
cmp
sub
mov
and
and
and
pop
lret
mov
and
xchg
rol
sub
or
cmp
nop
andb
icebp
xlat
adc
push
cmp
push
insl
pushf
adc
xor
xchg
js
jae
dec
scas
jl
cmp
xor
mov
into
dec
loopne
sets
push
and
aas
or
sahf
jle
call
pop
xchg
sbb
jge
dec
js
sbb
or
mov
add
adc
mov
and
fs
lds
xchg
add
cmp
leave
gs
leave
sbb
pop
mov
mov
rorb
es
sarl
aas
fcoms
or
ret
cmp
cmp
add
dec
xor
jp
push
popa
mov
dec
add
or
adc
sti
add
xchg
int
push
enter
mov
xlat
mov
xor
mov
test
push
mov
addr16
xor
orb
and
jb
ss
nop
mov
adc
stc
cmp
jnp
bound
sti
inc
das
popa
sub
scas
cmp
sbb
loop
sbb
or
push
sub
fsubl
fadds
loopne
pop
sbbl
insl
cs
push
fs
ss
adc
or
mov
daa
shll
push
push
or
je
mov
inc
add
out
push
aam
and
repz
add
or
xlat
add
xchg
mov
sbb
cwtl
jp
call
push
fwait
add
jle
mov
pop
pop
repnz
add
pusha
lcall
icebp
mov
incb
dec
pop
push
xchg
jg
and
lahf
call
into
sbb
jbe
insb
sahf
movsb
add
cmpsb
mov
es
sbb
mov
adc
xchg
icebp
fldt
sub
mov
or
mov
lods
loopne
inc
push
cmp
inc
sbb
add
fmuls
and
cmp
pop
add
dec
jmp
dec
fidivs
or
loope
rcrb
movsb
or
mov
dec
jb
mov
ret
xor
push
test
pop
stos
xor
sub
mov
lods
into
fs
popf
cmp
fimull
mov
mov
je
and
xchg
bswap
enter
inc
enter
stos
sbb
mov
mov
lret
jae
or
int3
inc
loopne
and
in
and
and
orl
hlt
inc
fsubs
inc
add
adc
sbb
cmc
xchg
dec
je
outsl
pop
rcrb
mov
dec
repnz
add
fs
mov
sahf
xor
stos
frstor
repz
jle
ret
jl
mov
mov
sub
mov
sbb
mov
jbe
inc
jecxz
je,pt
inc
pop
xor
xchg
faddl
or
dec
jle
push
push
repnz
test
sbb
sbb
mov
sub
sti
loope
inc
je
sarl
adcb
add
dec
addb
adc
movsb
jno
mov
xor
inc
int
push
into
stc
lret
push
les
mov
les
push
sbb
js
add
cmp
test
fsubrs
call
enter
or
ror
lds
pop
push
dec
rorl
fwait
or
push
inc
add
push
xchg
xor
rolb
clc
and
mov
out
add
in
test
mov
cwtl
cld
add
dec
xchg
sahf
mov
jg,pt
push
add
frstor
ljmp
mov
cmp
in
xor
cli
pusha
int3
mov
and
dec
aam
test
into
pop
das
jo
repnz
jb
or
xor
fimuls
arpl
inc
pop
ljmp
nop
and
fadd
mov
addr16
jge
loope
cmp
sub
nop
cwtl
add
jo
mov
mov
sarb
sub
call
dec
jp
int3
nop
and
xor
pusha
lahf
xor
ficompl
push
orb
mov
push
add
loopne
inc
xchg
xchg
sub
cs
mov
int
adc
out
or
in
add
inc
fcomps
das
imul
cwtl
mov
mov
inc
aaa
inc
icebp
pusha
cmp
seta
out
inc
test
xor
aas
fadds
imul
stc
lds
add
add
jle
enter
cmc
sarb
repnz
sub
sbb
add
shrb
cmp
repz
sbb
adc
orl
pop
sbbl
push
inc
loope
mov
inc
clc
cmpsb
mov
je
pop
fcoms
mov
adc
mov
arpl
cmc
pusha
mov
cwtl
inc
test
add
push
inc
sahf
fldcw
je
sub
or
mov
sub
int3
pop
inc
std
add
push
dec
aam
in
call
rorb
sub
in
sub
cmp
sub
add
xor
adc
lret
push
hlt
dec
xlat
test
inc
push
notl
pop
pop
lcall
or
xchg
das
sub
xchg
mov
test
daa
push
push
and
sub
sbb
fimull
mov
lret
out
sbbb
lret
sbb
and
xor
xchg
push
pop
inc
mov
insl
rclb
cmp
popa
icebp
movsb
or
lret
sub
push
cmp
in
pop
or
push
loopne
bound
enter
dec
inc
xchg
cmp
jb
mov
ret
xor
shr
in
pushf
ljmp
add
adc
testl
mov
xlat
dec
cmp
push
jl
pop
cmp
mov
jnp
adcb
ficomps
jecxz
lcall
stos
fistps
push
mov
test
add
push
shrb
lock
cmpsb
adc
inc
insb
ret
mov
add
lahf
xor
cmp
inc
add
js
roll
mov
pop
pop
pusha
popf
fwait
cmpb
mov
xorb
leave
mov
add
jno
hlt
test
test
jecxz
mov
ret
xor
popa
addr16
jp
out
fsubl
add
mov
mov
lret
enter
and
fsub
das
and
jp
pop
jbe
rcrl
rorb
or
xor
add
shll
and
mov
xchg
and
mov
pop
into
fimull
scas
pushf
mov
push
mov
lods
mov
ficoml
add
in
add
js
scas
out
push
add
dec
mov
or
mov
nop
inc
stc
and
dec
decb
push
ss
dec
inc
add
cmp
mov
imul
les
nop
sbb
sbb
xchg
xor
or
inc
icebp
bound
mov
nop
fnstcw
dec
add
mov
int
cmp
fidivl
inc
fsubs
pushaw
push
cltd
hlt
loop
dec
add
punpckhwd
int
mov
cmpsb
loopne
nop
mov
clc
and
xchg
inc
stos
js
xor
push
pop
in
ret
or
jae
push
add
cwtl
sub
and
push
adc
sub
cmp
pop
adc
mov
cmp
mov
loope
mov
inc
cmp
push
cmp
inc
nop
ljmp
out
shlb
das
add
xchg
mov
mov
mov
mov
pop
inc
xchg
ja
dec
mov
pop
or
les
push
push
or
filds
xor
nop
daa
push
add
scas
mov
mov
test
mov
xor
xchg
cli
cwtl
add
add
shr
pop
int3
out
add
xchg
test
mov
add
inc
cmp
sub
mov
xchg
fcomps
pop
je
andl
je
dec
shrb
xchg
pusha
mov
fcoml
pop
mov
into
lret
cmp
add
push
xchg
push
pop
push
and
push
sbb
lods
jno
xor
push
lock
pop
addb
jbe
aad
rol
adc
sub
hlt
sub
test
adcb
push
inc
cwtl
scas
mov
rclb
jbe
add
xchg
inc
cltd
test
jns
sbb
jne
lock
rcrl
xchg
and
pop
mov
pop
and
inc
jb
mov
pop
je
fcompl
xchg
ss
call
inc
or
and
pop
push
mov
cmpsl
add
dec
jo
mov
adc
xchg
lea
int3
cmpsb
add
ror
sbb
fisubs
adcl
jb
shlb
jo
shll
push
test
jp
mov
dec
inc
add
sbb
xchg
movsb
mov
inc
fmuls
sarl
aaa
mov
mov
jo
imul
fnstsw
adc
mov
je
in
loope
add
mov
inc
jp
mov
test
in
rcll
call
fistpl
add
adc
dec
inc
gs
jmp
daa
pop
lods
xchg
xor
clc
and
add
lret
push
out
push
ja
int
pusha
xor
call
or
xlat
cmpb
in
rol
mov
clc
fwait
rorb
sbb
ret
fcmovb
cli
inc
pop
inc
or
push
sbb
or
pop
cmp
movsb
xor
inc
mov
mov
jb
mov
mov
lods
mov
add
lret
leave
pop
dec
cs
inc
je
imul
xor
pop
cmp
adc
fisubl
push
add
lret
lahf
push
lret
sub
outsw
leave
and
and
shrb
addl
add
xor
popf
dec
jbe
sbb
sub
and
dec
int
sarb
es
ficoml
test
mov
adc
push
xor
cmp
je
inc
inc
fimuls
add
inc
add
cmpsl
jnp,pn
sti
in
add
pushf
jmp
scas
push
test
inc
outsb
lock
lret
fs
test
mov
jnp
mov
pop
xchg
enter
mov
pop
inc
pop
add
mov
push
int3
add
pop
xchg
mov
fidivrl
sti
mov
xchg
push
push
xor
add
and
test
xor
push
add
xchg
pop
pop
add
nop
mov
mov
loopne
lods
pop
inc
mov
jle
popf
push
nop
xor
in
lock
add
call
repz
mov
push
xor
mov
or
add
ror
pop
fmuls
and
into
lods
dec
sbb
sub
pop
je
bound
and
js
mov
ja
loop
inc
push
clc
popf
enter
das
pop
mov
xchg
mov
sbb
mov
aam
dec
add
fdivrs
jge
clc
mov
dec
adc
in
adc
or
cmp
add
inc
mov
imul
pop
ret
or
shll
std
cwtl
dec
shlb
add
push
pusha
int3
push
sti
and
mov
lret
dec
stc
cmovno
push
pop
call
test
and
ljmp
ret
mov
addr16
pushf
test
pop
xchg
sbb
pop
dec
mov
inc
sahf
dec
icebp
loop
push
sub
xorb
imul
and
call
test
inc
xchg
into
inc
movsb
sbb
xor
cwtl
add
push
outsb
or
fs
push
mov
add
shlb
test
adc
cmp
mov
jge
jo
test
fistps
nop
cwtl
pushf
mov
pop
xchg
jae
jp
xchg
mov
or
fcomip
and
aad
inc
dec
ficoml
add
in
mov
mov
sbb
fs
mov
sub
adc
jl
enter
mov
lcall
add
and
out
add
add
stos
jne
rorl
insb
pop
ret
inc
mov
pop
and
jae
loope
int3
push
dec
jbe
dec
das
lock
sbb
inc
cmp
scas
sarb
sbb
shl
adc
lret
and
ret
mov
add
mov
cmp
inc
fcmovne
insb
movsl
into
loop
or
mov
dec
das
rcl
push
je
add
cmp
pop
das
mov
mov
testl
call
in
pushf
cmp
out
adcb
and
pop
shlb
adc
adc
sbb
adc
adc
adc
roll
mov
mov
cmp
dec
add
js
add
mov
cmp
lret
dec
out
int3
and
xor
mov
pop
xchg
sbb
push
lods
test
loopne
add
int3
sbb
or
adc
push
fildl
cmp
shrb
lds
and
in
mov
loopne
push
xor
mov
inc
dec
add
mov
sahf
leave
loopne
jl
xchg
sub
bound
pop
push
push
and
add
out
mov
add
rol
les
dec
jg
push
jb
fcomip
aam
adc
testb
adc
les
inc
push
nop
enter
mov
aam
push
mov
jae
push
inc
push
fsubs
stos
cmp
fisttpl
addb
aam
add
push
sbb
in
add
popf
add
rolb
adc
pusha
mov
mov
pushf
fs
outsl
add
cs
dec
inc
and
adc
popa
inc
int3
fstl
and
sub
mov
add
rcrb
add
xchg
divl
cmpsb
cld
and
xchg
stc
xchg
outsb
xor
add
fcompl
jo
inc
mov
add
ja
mov
loopne
and
es
xchg
insb
rcrb
clc
or
dec
inc
test
add
push
and
test
sub
fs
jns
xchg
js
jecxz
dec
fs
leave
popf
paddb
aaa
mov
repnz
xor
loopne
out
aam
fiadds
enter
popf
sbb
insb
add
imul
fistpl
hlt
das
dec
cwtl
mov
xchg
in
xor
shll
addr16
adc
mov
cmp
lods
and
xor
pop
mov
shl
sti
cmp
jmp
sbb
push
xor
mov
ss
xchg
xchg
push
jo
out
popa
mov
cli
fldl
lock
faddl
push
pushf
mov
push
xorl
mov
xchg
dec
adc
pop
adc
xchg
mov
mov
inc
stos
add
add
jmp
mov
sbb
add
movsb
movsl
jecxz
push
add
shrl
flds
mov
add
pop
cli
jne
add
cmp
xor
inc
pop
adc
xchg
and
push
push
add
cmpsl
dec
mov
dec
lods
outsl
sbb
pop
dec
fs
test
shlb
lret
cmp
lcall
imul
das
insb
inc
push
test
leave
and
pop
ja
jp
sbb
movsb
mov
mov
test
xchg
inc
cltd
or
fdivl
sub
repnz
fcomp
addb
xchg
ret
cmpb
testl
cwtl
mov
xor
ret
xor
fnsetpm(287
mov
add
xor
push
sub
dec
cmp
rol
notl
aad
xchg
lock
add
ja,pt
fsubrs
jo
ret
push
stos
imul
jecxz
jb
into
adc
xchg
xchg
aam
clc
mov
icebp
mov
mov
ret
cmpsl
cltd
out
or
es
adcb
xor
hlt
pop
mov
rep
inc
xor
movsb
cwtl
addr16
mov
sub
adc
fdivl
in
lea
dec
or
push
inc
or
clc
or
dec
jecxz
insl
pop
mov
mov
xchg
dec
inc
sub
push
faddl
fwait
ja
popa
add
mov
roll
movsl
push
into
test
insl
pop
in
mov
and
pushw
push
fsub
jb
call
xchg
push
mov
dec
add
cmp
mov
lahf
sub
fadds
mov
insb
dec
sbb
in
adcb
lcall
jecxz
pop
push
into
mov
pop
jge
sbb
xor
je
adc
rcrl
and
inc
pop
add
negb
imul
xchg
lcall
pop
call
cld
addb
jg
popa
cmp
adc
pop
mov
xchg
xor
xor
inc
jns
mov
mov
inc
xchg
dec
iret
imul
inc
dec
ffreep
pop
xor
or
out
mov
pop
aas
adc
fmuls
wbinvd
mov
js
popa
int3
cmc
leave
mov
lock
cmp
cwtl
cmp
popa
cld
pushf
mov
sub
cmp
and
ljmp
adc
icebp
mov
or
sbb
inc
clc
jbe
js
jno
rorl
ficoms
xchg
cmp
jecxz
mov
inc
xchg
jg
mov
push
push
idiv
rcl
imul
and
cmp
fisttpll
push
shll
adc
mov
aas
sbb
mov
add
dec
sub
test
pop
push
ja
push
xor
call
add
mov
inc
and
dec
sbb
icebp
mov
jnp
sbb
sub
xchg
in
xor
mov
xchg
jl
popl
out
xchg
lcall
sub
aas
fisubrl
inc
ja
push
mov
aaa
cmp
mov
cmc
mov
mov
outsb
xor
push
pop
xchg
sbb
add
inc
pause
or
push
xchg
adc
mov
fstps
out
adc
popl
add
jbe
add
mov
into
xor
in
in
mov
test
sbb
in
push
or
js
push
fucomip
xor
testl
sub
add
adc
xor
iret
lods
aas
and
or
dec
jp
sahf
andb
dec
loope
insb
or
outsl
pop
ljmp
jge
sub
add
out
repnz
jb
jg
daa
sub
push
inc
sahf
aad
add
incb
test
lret
inc
and
add
test
mov
add
xchg
cmp
imul
add
cwtl
xlat
out
movsb
dec
int
mov
mov
rolb
mov
adc
pop
inc
ror
pop
inc
mov
add
adcl
sbb
mov
jo
mov
cli
sub
int3
jnp
int
cs
test
aad
and
scas
cmp
lock
mov
jp
and
aas
das
sbb
addl
and
gs
enter
lods
dec
adc
add
xor
cld
mov
cmp
fdivr
sbb
ror
int
sar
loopne
add
fidivrl
sbb
stc
mov
cmp
loopne
cmc
and
dec
lahf
sub
inc
cmp
out
add
cmpsb
ret
add
and
inc
mov
sti
add
or
adc
sub
fcoml
adc
jecxz
mov
popa
push
add
lds
mov
jnp
cmp
pop
out
mov
adc
or
loopne
sub
mov
rolb
xor
movb
lret
andb
or
cmp
pushaw
jp
push
les
add
pop
inc
pop
aas
shr
lods
sbb
or
sbb
adc
movb
mov
iretw
add
loope
fimuls
jns
push
sarl
inc
cltd
pop
outsb
mov
xor
sub
lock
mov
push
aaa
xchg
inc
or
out
jb
cmp
push
andl
add
xor
mov
add
cld
shll
add
add
nop
jne
jmp
push
cltd
stc
cmc
fcoms
inc
xchg
dec
repnz
add
aas
add
xchg
sbb
add
call
xchg
adc
roll
and
dec
mov
add
repz
ds
hlt
js
adcb
cmp
add
ds
pop
ficoms
pop
cwtl
push
cmp
jmp
adc
lret
add
sub
adc
pop
push
jg
sub
pop
sbb
lret
in
or
add
daa
and
jg
cs
cld
outsb
cmp
jmp
mov
sbb
cwtl
inc
adc
jl
sarl
add
and
arpl
mul
xor
and
cmpl
cmp
or
gs
push
fistpll
push
xchg
fwait
pop
pop
lret
cltd
pop
test
sbb
pop
mov
lret
insl
pop
pusha
push
cmp
mov
jge
cltd
sub
or
psubd
dec
in
lock
sti
xchg
jae
xchg
aaa
add
mov
arpl
add
imul
js
add
xchg
add
xchg
idiv
lret
or
xchg
jo
jae
cmc
in
addl
and
lea
dec
sbb
dec
test
rcr
add
pop
inc
mov
dec
test
and
fs
or
dec
jecxz
add
or
xor
mov
nop
xchg
pop
aad
mov
jnp
xor
push
or
add
ffree
mov
fmull
rolb
xchg
subb
add
gs
cmpsl
sbb
pushf
inc
insl
shll
cld
jmp
mov
pop
cmpb
mov
or
dec
lods
daa
and
cmp
sbb
xchg
dec
or
adc
sub
xchg
inc
sub
push
add
aaa
inc
rol
mov
movsl
mov
cwtl
aam
ficompl
ja
lock
pop
lret
xor
inc
mov
jno
jae
scas
add
push
inc
dec
sub
and
movlps
sbb
or
enter
mov
into
cmovns
and
imul
pop
jecxz
test
arpl
shlb
xchg
enter
ret
subb
pop
adc
push
sub
pusha
jnp
push
mov
in
andb
outsl
inc
shrb
addl
and
push
sahf
or
loopne
xchg
add
int
add
inc
mov
rcrl
aad
rclb
push
jg
outsb
pop
pop
sbbl
test
cmp
shl
pop
and
add
mov
add
add
xor
mov
cmc
dec
mov
and
add
sbb
xchg
add
aad
popl
adc
loopne
insl
popf
mov
nop
mov
int
inc
xor
rolb
rorb
in
add
ret
jno
mov
or
js
mov
adc
lock
jecxz
jg
imul
and
sahf
ret
add
mov
insb
mov
mov
ljmp
pop
lret
hlt
adcb
xor
aas
add
pop
mov
and
mov
sub
dec
daa
hlt
mov
jae
add
cmpsb
or
pop
push
jg
arpl
mov
jge
jne
leave
push
hlt
cmp
add
data16
push
bound
jbe
roll
adc
lea
adc
cs
xor
adc
inc
xchg
icebp
cmc
jge
inc
xor
xlat
pushf
sub
sub
sub
outsb
out
add
jo
mov
pop
aas
sbb
cld
pop
and
mov
mov
jae
add
int3
dec
out
loop
sbb
mov
loopne
pop
pop
jl
repnz
inc
inc
mov
sbb
jge
and
sbbb
and
mov
sbb
out
call
push
mov
aas
test
jle
xchg
adc
cltd
adc
filds
js
pop
aad
pop
pop
push
arpl
popa
jle
jo
testb
push
pop
and
aam
add
mov
daa
in
insl
pusha
in
das
test
jg
sub
ror
inc
cmp
add
mov
jno
icebp
cld
xor
or
fadd
enter
lcall
subps
push
push
iret
add
cwtl
subl
sbb
add
mov
dec
pop
ret
add
adc
cmp
pushw
lcall
mov
addb
pushf
insl
scas
xchg
sbb
popf
or
orb
pop
pop
add
dec
aam
cmpsl
inc
fmull
fisttpll
cmp
rolb
mov
movsb
rorb
je
popf
ret
xor
mov
inc
mov
pop
es
mov
js
aad
cltd
aas
movsl
xor
xor
outsl
mov
or
pop
push
add
dec
push
lret
mov
hlt
jno
jno
or
mov
dec
dec
aam
es
add
rcrb
je
test
lods
cmpb
pop
pop
xchg
or
lock
sub
inc
js
shr
pop
int
adc
jp
jae
pop
push
fsubs
dec
mov
mov
in
xorb
mov
dec
push
mov
push
cld
sarb
add
cli
adc
jmp
add
in
enter
or
loope
movsb
pop
ja
add
jecxz
fs
fbstp
add
pusha
pop
push
sub
mov
add
sbb
outsl
loopne
dec
add
inc
std
fwait
movsl
add
or
push
mov
out
mov
dec
aas
add
shrb
add
push
insl
and
filds
xorl
fsin
add
add
add
pusha
hlt
jg
mov
pop
pop
loope
aad
mov
scas
pop
jecxz
imul
xor
outsb
jmp
mov
jmp
push
faddl
add
xor
clc
push
jns
or
jbe
add
dec
lret
js
push
je
push
ja
fwait
sti
add
arpl
jae
ret
xor
jecxz
and
mov
add
les
xchg
jmp
les
sub
gs
std
pop
push
inc
add
lods
or
out
push
xlat
or
int
enter
add
dec
fucomip
add
fdivl
adc
push
cwtl
pop
ret
mov
cwtl
rolb
or
aam
jno
out
adc
add
pop
mov
adc
add
in
std
sub
fwait
xor
rclb
xor
cmp
xor
nop
xchg
aad
out
out
fnstsw
psadbw
faddl
sbb
dec
into
lds
add
and
cmp
loopne
add
lcall
cmp
add
jmp
push
mov
pop
pop
dec
jge
movsl
outsl
test
cmp
and
mov
push
dec
mov
dec
mov
push
inc
cmp
or
cwtl
pop
fidivrs
iret
lret
leave
sbb
pop
stos
sbb
adc
mov
call
pusha
dec
inc
cmp
xor
mov
movsb
xchg
outsb
mov
das
mov
scas
nop
push
mov
ja
mov
mov
jl
xor
andb
das
adc
lds
scas
imul
and
nop
dec
lcall
fadd
shl
cmp
pop
add
and
addr16
add
and
int3
add
repz
xchg
bound
shll
add
into
xor
sbb
aas
xchg
push
jo
shl
decb
pop
sti
push
push
inc
cmp
cmpb
loope
nop
jmp
mov
ss
mov
ljmp
push
jle
iret
sarl
xchg
sbb
push
pop
pushf
int
push
add
mov
ja
and
mov
pop
cmp
mov
clc
out
cmp
push
xor
add
adcl
lods
pop
or
out
mov
xchg
sbbb
add
jnp
jmp
push
cmp
xor
test
and
add
push
jbe
mov
xchg
xchg
dec
push
loopne
cmpps
mov
sub
xor
jmp
lods
and
jno
dec
fs
or
sub
xchg
sbb
daa
or
xchg
cmp
push
ret
into
mov
call
ja
add
lods
mov
addl
loopne
lods
fdivl
orb
push
enter
rol
and
cmp
mov
xchg
sahf
outsl
and
mov
nop
adc
data16
sbb
pop
sub
add
mov
pop
sub
add
and
mov
jl
repz
sbb
fs
dec
pop
push
xor
adc
pop
andl
jno
call
cmpsl
outsl
xor
pop
add
imul
pusha
loop
or
lea
push
or
adc
jnp
movsb
outsl
daa
fadd
and
dec
xor
mov
xchg
icebp
lret
mov
xor
or
inc
sbbb
inc
mov
pop
add
mov
cld
add
jbe
pop
rcrb
pcmpgtd
cmp
add
adc
movsb
cs
mov
sub
inc
das
adc
and
adc
push
inc
adc
ds
sub
lcall
nop
cmp
pushf
pop
dec
adc
outsl
js
push
add
lods
rcr
insb
pop
pop
sbb
sbb
adc
ss
sahf
add
rolb
test
ljmp
add
mov
faddl
bts
lock
scas
sbb
imul
movsl
loop
jp
jno
out
fiaddl
int
mov
aas
sbb
roll
mov
insb
in
fwait
push
sahf
add
cmpsb
mov
cltd
mov
xor
mov
sub
mov
inc
jo
fiaddl
ss
fs
xor
shrb
cs
adc
movsb
test
add
cmp
adc
cmp
fbstp
sbb
mov
pop
jp
aas
cmp
push
pusha
mov
pop
ret
out
aam
fidivrl
inc
lea
out
jbe
push
mov
sub
popa
adc
add
aam
daa
lods
das
cmp
add
xchg
rorb
push
inc
xchg
scas
xor
sbb
mov
pusha
repnz
add
dec
outsl
mov
test
ret
or
mov
mov
leave
stos
xor
test
pop
or
sbb
test
push
aad
add
push
jae
imul
adc
add
loop
adc
js
mov
mov
mov
add
clc
repnz
add
push
test
sub
add
mov
hlt
jno
cmpsb
jmp
sahf
in
test
xor
gs
int3
jae
pusha
push
lods
cmp
sub
add
pop
jle
pusha
arpl
outsl
addr16
push
call
loope
sbb
xor
mov
gs
cmp
daa
jb
inc
nop
or
es
leave
sbb
add
sti
pop
loop
sbb
push
sbb
loopne
and
rcrb
arpl
lods
jns
sub
adc
mov
icebp
sub
lcall
scas
add
push
out
mov
mov
loopne
sbb
jle
mov
push
pop
or
xchg
loopne
call
adc
cld
pop
cmp
push
mov
shlb
addb
push
push
add
xor
stc
mov
test
scas
inc
xor
cmpsl
add
pop
es
ficomps
fwait
cwtl
outsb
cmpsb
jp
cld
mov
and
mov
cmp
mov
or
fimuls
negl
cmp
add
push
jecxz
jo
jle
add
sub
pusha
add
addb
lods
adc
addl
loope
xchg
pop
das
push
jge
inc
mov
jnp
pop
scas
adcl
ror
sub
idivb
pusha
filds
in
mov
jmp
and
mov
sub
ds
jge
out
dec
in
push
repnz
in
hlt
add
pop
jne
leave
scas
jb
mov
imul
mov
xor
outsl
add
adc
sbb
cmp
xor
das
mov
add
xchg
fwait
mov
add
sarb
add
sbb
imul
inc
cmp
nop
lea
and
movsb
cmp
push
imul
xchg
mov
dec
or
data16
mov
es
add
adc
add
in
sbb
jbe
or
aaa
mov
lock
jge
add
cmp
movsl
addb
add
sub
addl
lret
pusha
lock
add
fmull
cmp
flds
lea
rcrl
icebp
add
and
add
cs
lock
insb
rcr
adc
xor
mov
call
xor
in
push
stos
orl
sbb
or
mov
nop
jp
or
add
add
push
add
cltd
lahf
add
outsb
pop
jge
shl
sub
mov
pusha
shlb
lock
pop
fwait
add
stc
push
pop
add
mov
mov
js
dec
mov
push
xchg
mov
test
inc
in
cmpsb
push
fstpl
gs
iret
xor
mov
xor
mov
mov
fs
mov
pushf
sti
push
lret
movsl
int3
cmp
add
clc
insb
jbe
inc
jle
or
into
pop
pop
add
dec
test
mov
xor
jae
add
and
dec
add
sar
push
or
dec
add
movsl
in
data16
mov
xor
ja
sti
add
or
dec
ljmp
mov
sub
les
cmp
fsubs
retw
je
sti
add
dec
pop
add
dec
inc
mov
add
lods
jno
fcmovb
push
in
mov
test
div
add
sti
xchg
lret
or
xor
jbe
dec
lret
dec
add
pop
and
inc
fs
mov
aaa
jg
sahf
jns
jae
adc
fwait
lock
pop
add
ja
cmp
sbb
and
aaa
mov
jle
add
nop
jl
mov
push
popf
adc
jno
mov
lods
test
sbb
or
ds
js
lock
inc
insb
sbb
mov
loop
cmp
adc
aas
sti
and
mov
decl
inc
or
adc
push
xor
mov
movsl
jle
mov
iret
scas
in
pop
add
out
fs
test
fwait
lahf
scas
or
mov
repnz
dec
das
add
mov
mov
aam
fwait
and
cmpb
inc
repnz
push
push
pop
daa
scas
add
add
sub
dec
arpl
add
lds
push
sub
aas
pop
jno
mov
or
ja
mov
in
add
test
dec
add
push
in
arpl
incl
sub
sahf
mov
sbb
jl
mov
pop
add
repnz
add
or
fprem
add
call
mov
adcb
mov
mov
iret
inc
inc
mov
sbb
cli
fs
incb
xchg
outsb
imul
pop
mov
loopne
mov
in
pusha
mov
nop
add
inc
pop
cmp
lret
ljmp
inc
sbb
adc
xor
ret
cld
pop
add
jno
add
mov
pop
negb
mov
add
add
iret
aad
xchg
jno
sbb
or
jg
add
inc
dec
adc
test
sub
pop
ret
mov
jne
in
xchg
repnz
sahf
cmp
mov
popf
sub
sub
or
loop
mov
pop
inc
popl
add
mov
add
mov
dec
pop
adc
inc
loopne
add
mov
add
test
ljmp
xchg
and
jp
add
mov
fcmovnu
add
inc
cwtl
lret
xor
mov
cs
push
int3
xor
jmp
test
fmulp
leave
jno
js
push
arpl
mov
cld
cmp
jne
lret
std
sarb
jno
push
decb
cmp
lret
inc
fnstsw
in
pop
gs
jg
addr16
mov
mov
in
dec
pusha
sbb
sub
lret
imulb
mov
mov
in
clc
push
dec
cmc
sahf
add
cmp
popf
mov
ret
insb
std
sarl
jb
xor
pop
bound
lret
xchg
dec
loopne
push
mov
aaa
out
cld
add
ja
arpl
xor
mov
inc
hlt
mov
leave
pop
sbb
and
loop
adc
adc
pushf
pop
pop
add
add
mov
sahf
iret
add
or
add
cmp
in
add
dec
xchg
insb
sbb
sub
mov
stos
lock
cvttps2pi
xchg
xor
cmp
inc
pop
pop
mov
sub
loopne
add
aad
xor
lock
inc
adc
add
lea
add
pop
push
sub
insb
add
add
rolb
cmp
inc
shlb
ss
lret
sbb
push
rclb
sbb
mov
jmp
jne
pop
sbb
fildl
data16
pop
lock
cmp
xchg
jl
add
aad
jbe
pushf
clc
les
mov
hlt
sub
je
mov
int
add
jp
xchg
inc
rorb
add
mov
scas
lock
dec
subl
mov
sub
jg
rclb
es
mov
sbb
inc
cvtps2pd
inc
mov
jae
cmp
dec
jecxz
sbbl
pop
xchg
add
dec
or
pop
fs
push
mov
inc
jl
into
lahf
mov
cwtl
cmp
jg
in
aaa
jne
add
or
in
cmp
out
or
mov
mov
mov
jo
mov
and
data16
leave
push
or
or
jns
add
pushf
push
mov
and
jecxz
adc
sbb
and
jp
cld
std
or
or
inc
hlt
lret
cmp
cmp
push
add
insl
je
jne
roll
pop
lods
xor
mov
adcb
add
daa
aam
push
repnz
or
adc
add
pop
in
fchs
mov
add
push
xchg
repz
cmp
dec
add
mov
sbb
loopne
scas
sub
add
jbe
popf
add
arpl
and
clc
jmp
imul
pop
cmpsl
add
ljmp
pop
xchg
mov
pusha
sbb
sub
cmc
sbbb
sbb
pop
icebp
xchg
jne
sbb
aam
push
push
cmpsb
daa
push
fst
xor
test
jmp
sub
mov
jecxz
lahf
xchg
nop
adc
imul
add
scas
adc
mov
pop
test
dec
jmp
fimuls
xorb
add
xchg
mul
shrb
dec
and
in
cmpb
fstpt
add
idiv
rorl
mov
ret
enter
mov
pop
testl
aas
push
jle
add
sub
pop
pop
cmp
add
sahf
add
mov
xor
in
mov
das
and
notl
jge
xor
or
add
mov
outsl
xor
hlt
add
adc
sub
cmp
cli
je
stc
mov
pop
jbe
xor
xor
mov
ljmp
push
adc
das
pop
add
imul
cmp
inc
mov
sbb
iret
push
xor
popf
addb
lahf
nop
faddl
nop
jl
ljmp
das
pushf
and
pop
add
sbb
fcmovnb
in
xchg
lock
addl
add
fs
loope
sbb
pop
inc
mov
dec
ret
cltd
fmulp
mov
lods
sbb
cmp
stc
out
push
mov
add
rcl
push
xor
cmp
fsubrl
adc
sbb
fiaddl
fbstp
fildl
outsl
cmp
addr16
cmp
mov
inc
and
xor
jbe
or
cmp
loopne
jo
pop
cmp
test
add
jmp
icebp
clc
pop
jo
add
lods
and
inc
movsl
sub
aaa
sbb
inc
mov
dec
cmp
scas
add
and
sahf
jns
sub
js
sti
inc
je
push
test
jno
pop
and
add
movsb
mov
and
jae
sbb
movsl
loopne
inc
add
or
mov
pop
insb
out
popa
jae
js
imull
cld
es
add
pushf
rcrb
shrb
push
lock
add
dec
out
jbe
add
dec
cmp
imul
shlb
mov
jge
or
jp
outsl
adc
xchg
add
push
and
and
push
std
sbb
adc
mov
in
fldlg2
pop
jae
pop
dec
enter
add
pop
jo
in
in
fnsave
add
shrb
ljmp
xor
add
icebp
leave
or
mov
lock
shlb
pushf
mov
pushw
add
jecxz
push
cmpsl
aas
sbb
cmp
in
mov
push
lods
fadds
add
cmp
subl
lock
pop
inc
push
pop
cs
pop
call
sub
lods
test
mulb
xchg
mov
stos
leave
lret
jg
call
add
mov
pop
lret
add
sub
out
adc
jl
pop
les
nop
in
xchg
adc
dec
add
jnp
dec
out
cwtl
pop
cltd
sahf
add
jmp
xor
pop
clc
or
sbb
adc
mov
js
mov
add
mov
lret
push
mov
jae
push
jno
adc
jge
imul
out
fimull
das
roll
js
mov
add
mov
inc
jns
aad
addb
mov
add
sbb
mul
xchg
sub
ficomps
fdivr
icebp
add
arpl
popa
or
rclb
add
hlt
daa
das
sbb
cmp
ficompl
outsb
inc
sub
lods
out
inc
adc
mov
loope
push
pop
pop
shrb
add
and
xchg
test
flds
js
fcoml
in
add
sub
mov
pop
add
jmp
jae
xchg
shll
sub
test
add
in
adc
xchg
testb
push
int3
xchg
sbb
popa
and
lret
sarb
pushf
shlb
add
sbb
sbb
add
fnstsw
in
addb
inc
jns
xorb
add
mov
push
mov
addb
imul
insl
push
dec
mov
xchg
push
ror
mov
lahf
or
fsubp
out
xor
popa
outsb
or
xor
jnp
pusha
sbb
enter
dec
aad
sbb
push
xlat
stc
arpl
adc
push
mov
add
ja
or
lods
sbb
add
icebp
adc
and
shll
xorb
lahf
pop
dec
sbb
out
das
add
fwait
aas
test
adcl
pop
mov
jbe
lret
xor
dec
mov
inc
and
mov
add
mov
add
add
sbb
popl
sbb
push
inc
andb
pop
fists
pop
imul
or
loopne
test
add
xchg
orb
movsb
mul
movb
cli
push
psllw
call
mov
fists
fistl
and
and
pusha
mulps
sbb
es
imul
loopne
lea
jne
gs
xor
pop
icebp
sbb
inc
aad
imul
pop
cmp
add
jmp
jns
xor
mov
das
push
sbbb
div
ss
or
pop
bound
inc
xchg
lret
mov
sbb
orl
pop
add
andl
pusha
add
add
adc
mov
mov
and
add
mov
add
cli
jo
out
push
push
fcoml
jne
push
adc
add
clc
sbb
xchg
loope
popa
cmp
rol
cmp
in
dec
dec
xchg
dec
sbb
leave
inc
rolb
call
jle
inc
xchg
fdivrs
xor
mov
int
pop
mov
cld
mov
call
jne
push
cmp
pusha
insl
cmpsl
add
adc
scas
push
pop
xor
outsl
push
add
cli
shr
pop
xorb
and
inc
and
lcall
jnp
jmp
jmp
dec
call
sub
movl
jae
shrl
int3
daa
cli
dec
add
test
rcrl
sarb
sbb
xchg
sub
ret
sti
test
mov
push
add
xor
add
inc
gs
and
mov
pop
sub
add
jge
add
aas
das
sahf
out
add
cld
ret
cmp
add
and
out
xchg
popa
out
sbb
and
lds
add
sbb
sahf
mov
roll
jmp
mov
rorb
inc
add
mov
adc
das
test
inc
or
shl
sbb
jecxz
clc
ficoml
or
imul
aaa
ja
wrmsr
mov
mov
add
pop
inc
fiadds
or
push
add
in
fsts
add
test
or
ret
xor
mov
push
adc
pop
adc
ror
or
cwtl
pop
push
imul
test
decb
jnp
jns
push
pop
ret
jecxz
inc
outsl
cli
and
xor
mov
es
fcomp
add
add
loopne
sqrtps
das
mov
pop
add
inc
stc
inc
push
iret
sbb
sbb
arpl
add
pusha
xchg
outsl
lods
mov
add
pop
sub
xor
jns
cmpsb
rcl
mov
cmp
clc
and
adc
inc
xchg
adc
ja
or
dec
repnz
test
and
pushf
sahf
je
movsb
sub
mov
cs
add
pop
les
mov
mov
add
push
aam
les
sub
push
add
inc
xchg
cld
loope
jno
dec
dec
movsb
add
push
cmp
add
and
lods
pop
xchg
add
bound
loope
adc
pop
mov
cld
add
dec
loopne
add
mov
mov
fdivrs
push
or
lods
in
mov
pop
popa
bound
test
daa
mov
mov
lods
shrb
add
repnz
arpl
or
sub
mov
sbb
mov
and
cmpsb
adc
pop
xlat
mov
loopne
int
test
and
mov
aam
fadd
and
push
sub
shl
xor
or
push
leave
scas
cmpsb
add
lea
outsb
jno
add
iret
sti
xchg
pop
xchg
rorb
pop
and
loop
packssdw
stc
inc
imul
adc
add
mov
pushf
mov
or
fildl
dec
repz
js
and
cmpsb
mov
adc
pop
inc
pop
cwtl
pusha
sub
fldcw
xor
inc
cltd
mov
cmp
add
push
fcom
add
mov
and
sbbb
add
cmp
push
pop
in
call
les
loop
lock
popa
mov
mov
xor
mov
or
xor
and
mov
fs
jo
test
add
pop
jle
push
loopne
add
lock
pop
pop
lods
out
sbb
lock
and
sbb
jno
or
movsb
nop
loope
push
add
imul
pushf
inc
mov
cmp
inc
int3
xor
push
cs
push
dec
rorb
mov
add
inc
pusha
stos
sarb
cld
js
mov
xlat
cmc
insb
les
dec
adc
vsubss
enter
cmpsl
push
mov
xor
add
dec
jmp
call
jb
fisubl
loopne
test
adcb
shlb
add
inc
stc
jno
fprem1
add
in
sahf
push
in
xchg
dec
sarb
jg
push
orl
subl
stos
xchg
xor
xchg
mov
push
or
inc
jno
cmpsb
sbb
add
lock
adc
add
lds
outsb
xor
js
add
fs
icebp
dec
cltd
or
cmp
addb
add
push
add
mov
ss
sub
add
aaa
sarb
jmp
add
xor
lods
jbe
push
push
insb
adc
mov
jmp
mov
lret
call
shrb
push
dec
adc
jne
add
pop
xchg
sub
adc
add
jb
daa
test
sbb
scas
enter
add
fchs
fdivrs
add
aad
xor
xorb
add
das
shlb
mov
and
outsb
add
cld
insb
pop
add
dec
push
or
data16
incl
nop
call
inc
lods
loopne
lds
inc
and
dec
fdivrs
sar
ret
cmp
cmpl
lret
inc
adc
mov
fdivl
sbb
or
mov
inc
aad
jbe
push
fs
jl
or
stos
inc
add
mov
push
ret
add
cld
add
shlb
ljmp
mov
adc
jo
ds
add
mov
and
cwtl
add
sub
pusha
xor
test
add
jl
aad
add
or
jnp,pn
add
mov
mov
bound
repz
mov
sbb
cmc
xchg
lock
add
mov
iret
pop
dec
adc
stos
sub
mov
lcall
inc
shlb
je
jmp
add
xchg
cmpsl
push
clc
loop
cmp
inc
ds
sbb
and
or
loopne
fwait
lret
stc
mov
sub
add
shl
mov
pusha
cmp
insl
addr16
sbb
xorl
popl
mov
cs
sub
ss
fiaddl
pop
jno
loop
out
dec
push
aas
mov
xchg
add
in
pop
xchg
dec
xlat
xor
fstpt
push
add
add
xchg
mov
mov
pushf
dec
inc
and
add
in
add
mov
orb
stos
shll
fdivrl
jecxz
loopne
mov
jns
add
sti
lds
pop
cwtl
jae
and
add
lods
push
pop
js
adc
popa
dec
in
icebp
inc
lods
add
xchg
sbb
push
or
pop
pop
test
and
dec
in
adc
lret
and
rolb
pop
sbb
outsl
jne
or
xchg
and
cmpl
adc
push
jae
fsubs
push
ret
push
pop
inc
add
jbe
push
cmpsb
loope
pushf
nop
jns
nop
mov
xchg
lods
mov
andb
mov
sbb
and
mov
jl
es
adc
cmp
pop
jbe
or
push
je
repnz
cmp
dec
dec
mov
out
xchg
popf
dec
push
popa
imul
fcmove
pusha
stos
rorb
fistps
incb
fistps
mov
in
mov
push
dec
push
cmc
andl
pop
adc
les
int3
rcrl
fidivl
popf
andb
daa
add
lea
add
mov
lods
bound
pop
lods
fidivrl
dec
add
inc
adc
test
add
dec
xchg
rolb
mov
pop
pop
xor
push
dec
testl
mov
and
sub
xchg
sbb
xlat
inc
xorb
jmp
enter
inc
dec
sbb
jnp
popl
fmuls
xchg
sbb
rol
mov
int
inc
bound
cld
adc
add
loopne
mov
fisttpll
cmp
sub
jl
add
sahf
and
cltd
adc
jge
xchg
or
test
add
fists
push
aam
jb
add
in
xchg
dec
pop
and
mov
cmp
pop
outsb
jmp
rcll
and
nop
fcmove
mov
js
mov
addr16
cwtl
loopne
adcb
add
add
adc
in
add
sbb
ljmp
mov
xchg
dec
sbb
xchg
test
adc
leave
push
dec
jge
mov
mov
out
mov
add
adc
jg,pt
andb
in
xorl
cli
jle
out
add
pop
dec
push
jne
dec
imul
mov
repz
add
mov
imul
cmp
mov
andb
mov
ret
lret
and
or
lea
mov
pop
repnz
dec
ja
repz
decl
add
mov
adc
repz
add
mov
jg
add
add
or
add
ss
cld
or
jnp
adc
or
lods
adcb
mov
fcomps
cmpb
insb
scas
add
incb
dec
and
in
es
mov
add
push
or
mov
fsts
mov
bound
sub
decb
jmp
mov
imul
xor
stos
popf
mov
lock
ds
xchg
mov
adc
dec
jmp
rorb
mov
xchg
add
or
mov
out
pop
pop
sub
cmp
mov
movsb
mov
mov
xchg
leave
jne
dec
dec
adc
getsec
inc
subb
adc
and
scas
mov
cltd
lahf
sbb
mov
add
mov
hlt
fsts
add
repnz
add
mov
and
int3
js
xor
xor
jnp
lods
fcompl
adc
cmp
cmpsl
movsl
pop
loop
ret
out
xchg
cmp
daa
cld
sahf
loopne
pop
and
mov
dec
push
aad
hlt
xchg
pusha
pop
sbb
cmp
loop
fstp
add
xor
into
sbb
cmp
add
movsl
mov
cmp
gs
mov
or
addl
dec
divb
es
enter
pop
inc
out
and
mov
xchg
imul
sbbb
lock
add
outsb
xor
aam
mov
and
imull
ss
out
pusha
and
inc
scas
add
xor
adc
push
cmp
xchg
mov
jo
xchg
inc
ret
cmpsb
loop
mov
fnstenv
shl
pop
jl
add
and
ss
loopne
mov
fisubl
nop
addb
fcmovne
sti
sub
mov
dec
cltd
push
push
adc
add
mov
mov
icebp
sbb
clc
xor
pop
jnp
stc
mov
xchg
cmp
and
push
inc
sbb
stos
or
or
push
mov
and
ret
adc
nop
fcoms
mov
pop
xchg
push
jle
xchg
adc
leave
lds
subb
mov
mov
dec
fldcw
pop
add
inc
push
cmpsl
fiaddl
add
icebp
lds
mov
sbb
loop
imul
ss
addb
add
movsl
cmp
add
mov
mov
xchg
aam
xor
and
lds
pop
inc
roll
add
enter
popa
xor
stos
xor
adc
pop
push
lret
adc
rclb
add
loopne
inc
adc
cmp
ds
add
xor
adc
cmpsl
addb
icebp
ret
pop
dec
pop
loop
adc
add
xor
add
mov
xchg
and
loop
add
out
nop
adc
loopne
in
sub
lret
es
dec
xor
jnp
cld
sbb
outsb
fldcw
orl
inc
dec
inc
mov
sbb
cli
adc
jo
rorl
imul
mov
sub
into
shlb
cmpsl
cwtl
add
das
mov
jae
add
xor
and
add
pusha
cld
mov
test
out
fs
fcoms
mov
lods
sbb
or
and
adc
inc
pop
xchg
sarb
andl
imul
dec
das
nop
and
add
pusha
mov
aad
dec
stc
push
pop
sub
pop
ds
xchg
adc
push
cld
jecxz
xchg
add
mov
fs
mov
repnz
shrb
push
imul
and
jnp
sarl
lock
test
xchg
adc
sbb
int3
and
push
in
cmp
mov
cld
lods
xchg
sub
cmp
or
stos
pop
mov
jmp
divl
in
mull
or
flds
add
inc
jo
sbb
or
add
les
mov
adc
cltd
mov
jnp
xor
xchg
and
add
cmp
pop
pop
fisubrs
pop
add
xchg
inc
add
mov
mov
xchg
cmp
pusha
shlb
sti
add
or
out
pop
adc
mov
test
subb
aad
inc
and
ficomps
ret
movsb
cli
jmp
jae
xor
inc
cmp
push
mov
add
mov
pop
push
or
mov
and
jmp
xor
in
sbb
adc
add
popl
movsb
iret
lods
adc
je
sbb
js
insb
test
lea
insb
int
daa
fldenv
dec
jns
add
mov
cmp
xor
andl
sarb
je
in
dec
loop
notb
pop
mov
icebp
sbb
je
pop
std
sbb
add
inc
lret
sbb
jbe
add
pop
mov
add
inc
scas
mov
lods
pop
or
or
lock
dec
pop
dec
hlt
sbb
push
js
mov
add
xchg
sbb
cmovbe
sub
jns
mov
xchg
mov
cmpb
adc
movsb
xchg
rcr
fsubs
xchg
js
cmp
adc
fcoml
pop
sbb
and
mov
sqrtps
inc
mov
das
out
mov
add
sub
or
push
aas
jecxz
cwtl
div
rcr
pop
fidivl
mov
push
fnsave
push
dec
cmpsb
xchg
add
jle
into
push
test
or
insb
sbb
inc
sbb
inc
pop
movsl
sbb
pop
push
fsubs
mov
sub
sub
sub
mov
cmp
sbb
cmc
fbld
add
pop
and
add
cs
jmp
pushf
lock
pop
add
adc
in
add
rolb
popf
test
sbb
push
add
push
movsb
loop
fmuls
adcb
mov
mov
or
inc
in
iret
and
test
jnp
outsb
in
fstps
or
stos
aad
call
sbb
pop
add
out
fisubl
enter
mov
in
sbb
sub
mov
xchg
leave
out
lods
daa
add
lahf
jns
add
popf
nop
aad
mov
mov
icebp
pop
dec
je
testb
mov
test
mov
mov
roll
fdivl
mov
movsl
lea
mov
adc
add
xchg
clc
adc
nop
pusha
fnstsw
push
out
icebp
mov
add
sub
rclb
js
add
mov
mov
xchg
push
adc
jnp
aam
test
mov
inc
xchg
add
dec
sbb
jge
add
lods
das
test
and
mov
push
sub
xchg
jb
movsb
push
inc
and
jns
adc
and
sub
add
arpl
inc
jo
mov
adc
xor
aad
test
sbb
and
sub
loop
into
mov
ret
mov
fimull
add
mov
outsl
push
lods
xlat
add
testl
and
mov
dec
and
cmpsl
or
mov
js
pop
mov
call
int3
inc
mov
mov
push
ljmp
push
mov
xchg
xchg
mov
lret
rolb
add
pop
imul
add
shlb
add
and
cs
addb
in
inc
xor
jne
das
xchg
xchg
and
gs
xor
mov
call
stos
xchg
xchg
and
xor
adcb
dec
incb
dec
outsb
mov
xor
flds
sahf
mov
or
movsl
and
pop
rcr
mov
lsl
fcoml
xor
lret
adc
movsb
in
xlat
mov
dec
or
mov
add
sbb
enter
pop
mov
xchg
repz
aam
or
dec
orb
cmpb
sahf
scas
pop
add
lods
mov
pop
cmpsl
adc
call
lret
push
repnz
loopne
push
mov
inc
out
enter
inc
in
mov
bound
xorb
lret
mov
xchg
adc
push
sbb
dec
dec
xchg
add
lods
jnp,pt
das
adc
and
mov
pop
lds
inc
pusha
inc
or
xor
cmovno
cmp
test
js
out
pop
adc
inc
arpl
test
outsl
fnstcw
and
rcll
or
sub
jbe
ja,pt
add
jne
jno
and
pop
adc
js
fisttps
xchg
pop
xchg
fs
cmc
in
xchg
cmp
clc
sub
or
xchg
jae
jp
inc
mov
inc
sub
sbb
divb
ljmp
mov
xchg
filds
inc
int3
push
hlt
mov
or
push
scas
add
ljmp
loope
sub
call
in
sbb
jbe
and
push
pop
add
fidivs
pusha
cli
mov
pop
and
inc
test
pop
push
xchg
lret
ret
pop
es
cwtl
inc
mov
add
fistpl
xchg
adc
pop
push
aam
mov
shlb
or
push
jg
and
in
mov
sbb
imul
add
fildll
sbb
push
sub
mov
mov
add
fisubrl
int3
int
sbb
sub
adc
addl
aad
xchg
and
out
pop
mov
sub
shll
or
jp
adc
cmp
sub
lcall
mov
cmp
and
cmp
jl
xchg
lock
mov
gs
or
xchg
mov
outsb
inc
add
xchg
push
movsb
inc
and
xchg
mov
xchg
xor
push
and
cltd
mov
dec
shll
pop
add
loopne
dec
xchg
fadds
xor
lea
mov
adc
inc
call
ljmp
adc
ja
out
sbb
call
addb
or
fsubrp
fld
or
push
cltd
sub
shrl
jp
add
sahf
xchg
jp
rorb
mov
xchg
sbbb
cmpsb
sub
dec
add
add
pop
and
xchg
loopne
cmp
lods
cmpb
mov
push
aas
xorl
xor
cmc
jmp
xchg
jp
sbb
push
cwtl
or
and
pop
add
cltd
cmp
aaa
dec
fwait
or
int3
push
mov
xor
xchg
or
fadds
lret
loopne
jle
adc
push
pop
in
xchg
cmp
cmc
xchg
xor
adc
stc
fwait
mov
pop
and
pop
inc
imul
jg
pop
call
rorl
imul
inc
rclb
cld
icebp
mov
cli
add
jmp
mov
mov
sub
roll
xor
lret
jge
sbb
nop
test
mov
jge
jp
out
xor
jge
push
sub
stos
test
enter
mov
call
nop
cld
inc
or
add
pop
lahf
insb
add
push
add
subb
mov
es
inc
les
or
pop
mov
sub
shll
mov
popa
out
movb
lcall
add
adc
in
fsubrs
gs
mov
and
jmp
xchg
das
xor
in
into
test
inc
lea
mov
adc
xorb
or
inc
sbb
add
add
sbb
outsl
imul
daa
inc
test
push
pusha
cmp
xor
mov
sbb
mov
or
rol
int
mov
add
push
aaa
cs
int
dec
xchg
addb
lock
jbe
aas
sbb
xchg
push
dec
test
shll
xor
cmp
mov
ja
jno
push
mov
pusha
adc
int
push
inc
mov
sbb
mov
je
bound
inc
mov
sub
test
or
movsb
inc
rep
cmp
loopne
ss
shll
mov
cmp
xchg
and
enter
aas
nop
jp
and
add
pop
jge
dec
mov
sub
adc
mov
cld
xchg
mov
clc
lahf
fwait
addl
cmp
push
lods
sub
sub
pop
cs
sbb
cmpsl
adc
mov
mov
cmp
mov
mov
insb
xor
inc
lds
addr16
pop
jb
pop
xchg
fsubrl
jge
out
inc
and
bound
add
xchg
mov
xorb
daa
add
adc
dec
sub
js
shl
int
push
jl
sahf
adc
fisttpl
enter
ret
mov
inc
int3
dec
add
inc
add
mov
push
or
hlt
push
or
movsb
test
push
inc
inc
test
inc
cmp
push
adc
pop
loope
inc
push
adc
dec
loope
push
push
adc
dec
loop
xchg
sbb
mov
and
or
int3
or
jne
call
dec
xor
inc
js
les
pushl
pop
clc
add
insl
aam
sub
lret
or
testb
mov
pop
in
push
sbb
adc
pop
push
add
mov
shlb
mov
mov
dec
mov
test
leave
mov
das
mov
fdiv
enter
push
addr16
mov
pop
test
or
cmp
mov
lds
es
daa
clc
add
sub
je
shll
add
dec
and
cwtl
mov
pop
and
bound
mov
cmp
xchg
test
inc
jo
sub
rorb
cmp
mov
mov
icebp
jns
push
aaa
xchg
cmp
fdivrl
xchg
push
mov
jl
jbe
in
cwtl
insb
in
pusha
inc
inc
inc
ror
add
jb
jns
jbe
fiadds
rcrb
or
mov
cmp
das
rcll
add
rolb
pushl
cmpsl
mov
test
mov
sahf
add
push
inc
sub
xor
add
clc
ss
sub
jmp
and
je
xchg
ret
nop
inc
jle
jl
push
test
sub
xchg
in
cmp
pop
push
andl
pop
push
dec
mov
cwtl
push
les
add
call
movsb
push
pushf
das
cld
and
add
xchg
jmp
call
int3
xchg
pop
daa
pusha
sub
in
adc
shlb
nop
add
xchg
ljmp
jmp
xchg
sbb
pop
pop
sub
adc
mov
addr16
cmp
push
inc
xchg
add
pop
sub
add
pop
mov
xor
loop
lock
rorl
xor
std
loopne
pop
and
shrl
mov
sbbb
lock
js
das
into
addb
in
jne
add
insl
inc
xorb
mov
mov
cmp
movsl
fistl
xchg
adc
orl
mull
loop
and
push
pop
test
or
or
test
aam
sbb
popa
ss
iret
movsl
cmpl
dec
push
xor
adc
call
xchg
jo
testb
movsl
inc
loopne
xor
pop
adc
adc
mov
push
aas
xor
lods
pop
adc
incl
inc
movsl
test
stos
or
jp
clc
adc
int
imul
inc
mov
sahf
xchg
inc
rolb
xchg
aaa
push
add
repz
popa
outsb
and
pop
mov
push
jle
inc
nop
adc
push
and
pop
insb
leave
test
shlb
daa
mov
adc
mov
inc
sbb
pop
inc
repz
mov
jg
cmp
sbb
pushf
icebp
pop
data16
add
lret
cmp
and
in
orl
pusha
pushf
jmp
inc
lock
xor
int
mov
adc
or
sbb
test
mov
or
loop
popf
and
mov
lret
jmp
mov
fidivrl
mov
or
loop
xor
add
stos
sub
mov
adc
fmull
ffreep
ja
jmp
pushf
insb
adcb
add
out
out
xor
je
push
mov
loopne
jg
add
inc
int3
fs
add
lods
or
sub
mov
scas
xchg
add
xor
leave
movsl
cmp
or
popa
xchg
add
orb
add
shrb
notb
add
push
scas
out
loop
enter
lret
inc
xor
and
adc
daa
sbb
mov
loopne
rcrb
xchg
popa
xor
ljmp
and
pop
jp,pn
mov
add
movsb
mov
aas
mov
or
rol
fstpl
or
and
and
gs
add
lock
cwtl
adc
push
mov
mov
add
pop
in
xchg
push
ljmp
cli
or
popa
shlb
mov
cmpsl
add
cs
mov
popf
xor
pop
adc
adc
fsub
push
lret
pop
sbb
sbbb
sbb
pop
adc
and
cmp
pop
jecxz
or
fldl
fnstcw
adc
pusha
pop
stos
xchg
cwtl
cltd
adc
sub
mov
adc
pop
loop
add
cmp
dec
pavgw
sbb
mov
mov
inc
and
sub
popa
enter
lahf
or
cmp
icebp
cli
sbbl
mov
shrb
in
xchg
nop
fs
add
pop
mov
icebp
pop
ret
or
rorb
add
inc
test
nop
add
and
das
or
scas
scas
sbb
iret
sbb
test
scas
inc
jb
mov
sub
mov
faddl
add
xchg
xchg
dec
add
in
mov
es
add
adcl
sub
mov
cwtl
lret
xor
adc
add
pusha
jge
or
add
add
jg
testb
mov
push
test
dec
cmpsl
adc
add
push
xchg
clc
dec
pop
fs
pop
mov
or
in
inc
jno
sarb
jmp
mov
adc
xchg
and
add
jp
jl
mov
pop
jge
sub
xor
jp
les
cmp
cmp
jo
and
mov
in
mov
pop
push
add
cld
fbld
nop
and
inc
out
or
inc
inc
mov
add
pop
imulb
aas
mov
push
orl
add
sahf
aam
mov
lock
add
cmpsb
cmc
adc
insb
sub
adc
pop
mov
fcompl
xchg
outsb
addl
das
add
call
or
popa
js
xchg
add
dec
imul
sti
sub
inc
sarb
add
sbb
add
pop
je
stc
add
inc
sbb
in
or
repz
push
iret
ror
sahf
rcrb
sbb
push
pusha
cld
add
aas
int
xchg
add
test
xchg
adc
sbb
aas
je
mov
mov
jne
xor
arpl
nop
push
adc
mov
add
and
jno
int3
popa
sbb
add
cli
enter
cmp
fs
jp
in
fidivrs
dec
jecxz
shlb
mov
sub
mov
std
fidivs
dec
pop
inc
les
push
mov
stos
push
mov
rcll
shlb
test
outsb
in
pusha
mov
push
or
fs
mov
and
mov
int3
stos
or
lods
sbb
out
daa
and
xchg
dec
sbbb
adcb
cmc
fidivrl
icebp
sub
inc
leave
fsub
mov
jae
push
and
push
sarl
add
test
mov
cltd
and
cwtl
mov
leave
or
add
jmp
lock
iret
test
dec
in
pop
ljmp
jnp
sbb
mov
dec
sbb
repnz
test
pop
jecxz
pop
push
mov
cwtl
pop
daa
jg
pushf
inc
add
add
sbb
stos
xchg
dec
xchg
das
jo
addl
mov
pop
pusha
sbb
adc
int
cmp
mov
xchg
insb
push
orb
sbb
jle
pop
add
jg
call
hlt
cs
out
mov
mov
pop
xchg
cmpsb
inc
sub
pop
add
std
or
adc
lock
nop
sbb
loopne
dec
stos
addr16
jnp
pop
es
fsub
fildl
push
aas
call
cltd
ds
and
sub
inc
shll
icebp
leave
imul
data16
cltd
aad
fadds
jb
fidivrs
and
inc
fsubrs
pop
les
inc
nop
pop
xor
xchg
pushf
les
lock
adc
xor
push
mov
mov
lock
jbe
mov
shrb
inc
or
stos
mov
popa
sub
and
dec
or
sbb
xchg
pushf
and
add
and
jo
ds
shll
xor
stc
dec
xor
loopne
jae
pop
ds
lret
cwtl
enter
add
pop
add
out
mov
sbb
add
jns
hlt
mov
push
push
dec
lea
int3
fucomi
mov
rorl
cmp
stos
add
outsb
popl
pop
xor
jne
xlat
mov
jno
push
push
int3
inc
cmp
ljmp
mov
or
xor
pop
addr16
cmp
push
stc
decl
stos
and
lahf
xor
mov
add
pop
mov
inc
inc
int
xor
int3
jmp
aas
mov
xchg
xchg
add
and
dec
or
inc
fstpl
out
inc
xchg
iret
rclb
jno
add
jne
aaa
mov
and
adc
pop
xchg
clc
mov
sbb
jg
inc
rcrb
leave
and
add
add
add
insb
lcall
cld
and
jae
pushl
ja
dec
or
repnz
stc
xchg
clc
adc
insl
add
andb
mov
push
mov
int
add
cmp
xchg
sbb
lds
sbb
lock
cli
or
xor
iret
icebp
add
add
add
push
jmp
mov
cwtl
outsb
mov
add
scas
gs
mov
add
mov
and
pop
add
sub
sbb
mov
stos
dec
je
jbe
xchg
dec
adc
pop
int3
aaa
xor
mov
incb
dec
mov
and
outsb
jl
xor
mov
xor
or
cmp
fadds
add
in
aad
sub
mov
mov
mov
pop
scas
imul
adc
sub
test
jo
dec
sub
rorb
sbbb
nop
mov
mov
loop
push
or
add
and
dec
or
stos
add
call
inc
nop
push
shll
aaa
inc
dec
test
lea
xchg
or
xor
and
sbb
add
push
sub
sbb
cwtl
lret
mov
rcrb
sub
je
ret
imul
cmp
stc
ret
ror
push
cwtl
or
and
mov
add
push
xorl
movsb
mov
dec
xor
addb
inc
jecxz
jns
nop
mov
push
lret
pop
sub
int3
and
iret
inc
subb
jne
or
testl
add
pop
push
outsb
jle
jo
aas
adc
pop
jl
mov
and
insl
inc
hlt
or
test
lock
cmpsl
ja
or
jge
addb
mov
fildl
push
jo
shll
sbb
and
and
syscall
jo
mov
addb
mov
mov
xor
pusha
add
imul
jo
xchg
insb
roll
aam
addr16
popf
call
add
cmc
ret
adc
popa
movsl
mov
or
mov
ret
push
faddl
mov
adc
xchg
loopne
es
sub
jo
xor
stos
pusha
rorl
lcall
or
xor
or
xor
cmp
inc
mov
mov
xor
lods
mov
sbb
es
mov
dec
movsl
punpckhbw
ret
sbb
fs
fsubs
add
add
jno
das
arpl
push
and
or
loopnew
fs
inc
xor
gs
ret
cmp
inc
add
arpl
rcrb
or
jmp
push
xchg
push
inc
lret
mov
adc
mov
cmp
xor
jns
cli
ret
mov
sub
mov
xor
inc
xchg
push
inc
or
and
or
mov
add
sbb
repnz
lods
add
pop
adc
pop
mov
push
jg
sub
mov
sub
sbbb
ret
int3
and
xor
movsl
lcall
and
repnz
test
xchg
adcb
cmpsl
decl
sub
inc
adc
add
xchg
fwait
sub
inc
shlb
inc
inc
and
in
push
imul
adc
fwait
gs
dec
or
lock
add
fldenv
icebp
test
inc
or
cmpsl
jle
jnp
dec
les
and
movsl
lret
push
cli
mov
enter
sub
sub
sbb
adc
pusha
nop
sub
jp
iret
xlat
add
or
and
sbb
cmp
mov
sub
mov
push
mov
insl
fiaddl
cmp
push
out
add
xchg
add
pop
aaa
mov
repz
pusha
aaa
shll
fimuls
lret
and
loope
sbb
mov
and
push
dec
inc
mov
jmp
inc
test
test
sub
roll
cltd
shl
repnz
jno
adc
sbb
push
iret
or
cmpsb
xchg
test
movb
adc
in
movsl
into
stos
stc
jo
push
adc
xor
push
arpl
add
mov
mov
mov
je
jg
dec
inc
cmp
call
jp
adc
or
cmp
dec
gs
cmp
xchg
or
inc
push
add
xor
and
add
or
pop
jge
pusha
inc
into
push
add
sbb
mov
repnz
and
inc
insb
repnz
xchg
mov
fisttps
inc
pusha
outsb
into
pop
and
adc
add
ja
and
mov
insl
pop
int3
xlat
fbld
mov
mov
popw
pop
shlb
movsb
mov
mov
and
add
sarl
decb
jne
or
mov
lret
inc
dec
xchg
xorb
cmp
add
sar
rclb
sub
mov
or
add
ret
and
or
inc
sahf
loop
aas
jns,pt
ja
ror
test
sbb
imul
xchg
adc
add
scas
out
dec
adc
xor
lahf
xlat
adc
inc
test
fsubr
mov
cmpsb
xchg
aas
gs
test
jnp
mov
dec
icebp
sbb
mov
inc
push
add
hlt
ret
add
add
cmp
and
inc
dec
cld
aaa
fistps
mov
sbb
and
mov
xchg
mov
dec
mov
jb
into
add
sbb
add
xchg
roll
push
inc
sbb
mov
mov
add
imul
in
pop
xor
mov
mov
adc
iret
mov
or
inc
enter
filds
mov
pop
mov
dec
add
fdivl
sbb
push
adc
lds
mov
mov
orb
xlat
xchg
dec
sbb
xchg
or
jno
jl
jae
daa
jl
push
sbb
sahf
inc
repz
icebp
mov
pop
orb
mov
test
das
pusha
mov
xchg
adc
js
add
xlat
aaa
sarb
dec
sbbb
adc
mov
popa
mov
inc
icebp
xchg
xor
add
movb
cmp
rorb
sub
add
cmp
add
jmp
jae
xor
mov
mov
dec
adcb
aaa
add
mov
pusha
inc
and
ficoml
xor
jb
xchg
movsb
or
mov
adc
mov
cmc
or
sub
add
std
or
je
jle
or
and
insb
jno
sbb
test
subl
pop
mov
inc
int
cmp
cmp
cmp
movsl
xchg
push
data16
pusha
jae
add
inc
xchg
loopne
or
into
fisttpll
inc
lock
enter
add
int
sbb
lcall
bound
stos
loop
add
xchg
or
popf
rcrb
add
inc
sub
int
cmp
jo
cmpsb
lea
xor
xor
push
enter
mov
psrad
scas
andl
add
cmp
or
or
js
jecxz
outsl
ljmp
or
pop
mov
jecxz
add
pop
adc
scas
add
lahf
sbb
jmp
fs
outsb
xor
lods
lret
shlb
xlat
arpl
test
xor
push
ja
out
rcrb
hlt
xor
and
mov
nopl
enter
lock
add
call
sarb
jns
push
cmp
test
or
pop
aaa
add
xor
in
sbb
or
jo
jg
in
fwait
push
test
inc
add
inc
outsl
push
shlb
into
std
add
add
fs
mov
push
clc
pusha
pushf
mov
out
cmpsb
sbb
stc
dec
enter
push
outsb
dec
sbb
in
stos
je
inc
int
push
mov
test
xchg
ss
and
or
cltd
add
xor
nop
adc
add
jl
add
xchg
mov
add
push
push
inc
or
cmp
jbe
jp
ret
setg
and
mov
je
jb,pt
dec
inc
add
sbb
and
addb
mov
loopne
stos
fldl
stos
or
xchg
enter
sahf
shlb
mov
insl
iret
lahf
mov
cmp
push
jo
fimull
rcrb
inc
mov
lock
into
pop
andl
sub
add
cmc
stos
cmp
stos
and
cmp
jl
xor
fnsave
dec
mov
nop
lock
dec
daa
cmp
mov
sbb
sub
and
or
xchg
stc
out
nop
jae
pusha
mov
mov
pop
pusha
dec
or
sbb
sbb
and
cmp
sub
inc
jno
nop
mov
add
xor
xchg
movsb
fiaddl
inc
imul
mov
add
dec
pop
sbb
push
sub
lods
adc
push
add
adc
leave
inc
hlt
fisttps
jg
outsb
lock
add
loopne
call
xor
test
mov
sbb
outsb
xor
call
in
adc
lahf
ret
mov
add
lea
dec
push
pusha
dec
inc
fimull
push
imul
ret
or
cmp
sbb
xchg
xchg
andl
in
scas
add
cmp
push
mov
add
pusha
mov
pop
inc
cwtl
push
add
sub
add
jo
push
adc
rcrb
or
mov
jmp
scas
pop
xchg
sbb
adc
cld
xchg
lock
or
std
adc
out
mov
add
pop
pop
pusha
clc
sub
push
in
pop
mov
dec
xchg
mov
lret
pop
adc
das
add
iret
or
mov
add
ss
add
jg
push
mov
adc
cmp
addr16
push
lcall
xchg
lret
and
dec
ss
add
movsl
inc
fiadds
les
lret
mov
dec
enter
sbb
push
cmp
sbb
movsb
test
rclb
xchg
fistl
mov
mov
xor
sahf
fldl
adc
mov
das
inc
insb
dec
clc
add
mov
sub
fdivl
and
jno
aam
js
inc
int
mov
xchg
sarb
pop
fistl
sbb
sub
and
adc
xor
sbb
aaa
mov
jp
dec
add
inc
inc
mov
mov
jne
xchg
das
dec
lret
mov
add
outsl
cmpl
sbb
inc
rorb
sbb
add
pop
stos
test
cwtl
push
cmp
adc
lods
adc
xorb
inc
sbb
mov
mov
or
sahf
sub
hlt
push
nop
es
sbb
jbe
orl
mov
lret
inc
inc
aas
sbb
into
or
jle
sahf
xor
out
inc
icebp
pop
int
nop
in
iret
mov
shlb
mov
jo
jg
outsl
pop
or
aas
mov
repz
push
dec
dec
daa
cmp
popf
orb
ret
lods
mov
adc
fisttpl
xor
xor
rcll
xor
and
jb
mov
xor
mov
xchg
pop
cmp
sti
clc
mov
into
data16
das
and
ret
pop
xchg
xor
push
xchg
movsl
dec
or
nop
mov
rorb
test
add
jp
push
lods
in
sub
icebp
movsb
icebp
rcrb
sbb
icebp
add
andl
sbb
nop
test
pop
and
or
call
test
nop
rcrl
and
int
lret
outsb
cmpsb
jbe
xchg
or
mov
cmpsl
bound
mov
dec
ror
jne
fs
mov
adc
fistl
and
addr16
fsub
add
adc
jno
cmp
int3
fs
xorl
outsb
push
orl
or
cmp
push
xor
test
cld
lods
or
cli
mov
push
leave
stc
dec
movsl
mov
rorl
mov
mov
mov
adc
xor
adc
mov
sbb
adc
fs
jl
mov
pop
addr16
push
pushf
inc
add
or
js
xor
pop
sarl
jns
sbb
xchg
mov
pop
mov
mov
pop
push
jp
stos
movsb
in
clc
mov
inc
sti
mov
aas
shrb
inc
jne
jle
add
cmp
add
mov
push
adc
subb
popa
inc
outsl
faddl
xchg
jo
cmp
nop
cmc
dec
mov
jmp
fistps
adcl
mov
sbb
arpl
aad
pop
xchg
pop
jo
loopne
push
push
lock
movb
test
mov
xor
mov
sub
imul
xchg
aad
inc
push
inc
jo
jne
pshufw
popl
mov
inc
mov
dec
movsl
into
mov
xchg
in
jge
pop
pop
iret
adcb
das
add
add
xor
inc
pop
mov
mov
divl
mov
mov
or
mov
add
jbe
push
pop
pop
rcrb
mov
sbb
cli
xor
fldpi
dec
cmpb
les
mov
inc
xchg
mov
mov
add
add
jne
les
adc
das
fmull
outsl
lock
les
sub
adc
add
es
push
mov
pop
fs
or
sbb
push
mov
add
sub
addr16
dec
xchg
jl
sub
add
push
ret
mov
push
rolb
dec
jmp
mov
sbb
addl
mov
push
add
and
sub
push
push
and
sub
fsubl
mov
xchg
scas
adc
inc
dec
dec
cmp
ret
xor
sbb
mov
mov
xor
add
pop
cld
es
xor
mov
int
clc
add
in
mov
clc
sbb
push
push
gs
dec
pusha
and
dec
pop
cmp
imul
in
adcb
int
adc
nop
fiaddl
cmp
ficomps
leave
test
add
jbe
out
xor
dec
fisubs
xor
add
test
and
das
push
jle
add
adc
pop
filds
dec
sub
inc
js
jns
adc
mov
call
imul
sbb
jg
ficoms
sahf
push
out
lret
inc
and
ljmp
dec
into
jo
mov
or
shll
or
sub
out
mov
sbb
mul
and
clc
lret
leave
xchg
stos
sbb
pusha
or
sub
faddl
pop
icebp
cltd
std
fstps
sahf
mov
dec
lret
nop
enter
das
sub
add
dec
addr16
hlt
add
aad
add
inc
cmp
ficomps
sarb
add
push
mov
sbb
loope
jno
mov
xchg
add
cmpsb
xor
fistpll
iret
hlt
sbbl
pusha
xchg
cmp
adc
mov
daa
dec
test
enter
push
dec
test
jecxz
jne
fisubrl
dec
mov
mov
cltd
movsb
jno
sbb
mov
jmp
subb
fmuls
clc
xlat
scas
fsubrs
js
xor
inc
in
ffree
mov
mov
pop
mov
sub
cltd
lock
arpl
in
mov
jnp
cmp
dec
push
faddl
popf
jne
add
push
repnz
dec
and
mov
inc
scas
repz
fnsave
shll
mov
dec
leave
sub
mov
int3
rol
sbb
mov
lret
fnstenv
cmp
sub
popa
bndldx
xor
loop
repnz
add
push
rolb
sub
rolb
inc
loop
in
or
mov
clc
add
outsl
movsl
push
push
dec
pop
movsb
and
mov
in
sub
add
dec
push
jns
pop
and
xor
ss
mov
cmp
repnz
mov
mov
and
in
stos
xchg
into
popa
xor
xlat
add
pop
cmpsb
mov
lods
enter
movsl
sbb
mov
push
mov
mov
inc
js
pusha
loop
addl
cmp
push
cmp
mov
add
andb
test
ss
xor
fnstenv
jp
scas
rorl
loopne
enter
jmp
xchg
add
shll
lcall
sbb
int3
push
or
mov
fadds
popa
stos
dec
inc
cmpl
fbld
inc
jbe
mov
push
jne
shrl
lahf
mov
rolb
xor
jae
cwtl
stc
ret
sbb
mov
adc
int
add
inc
push
test
out
sbb
cmp
pop
lcall
clc
cmp
or
adc
mov
add
stc
pop
and
dec
int3
sar
je
pop
arpl
aas
fsubs
mov
std
gs
cmp
lret
mov
inc
sub
lea
std
js
add
repnz
in
fs
xchg
mov
add
insb
jbe
imul
and
sbb
and
dec
rorl
popf
movsb
lahf
jb
xchg
cs
and
ds
cmpl
fxch
add
and
or
xor
mov
aaa
add
add
sub
xor
mov
inc
addl
negl
cmp
rcrb
repnz
push
repnz
mov
and
add
mov
mov
jo
pop
cmpsb
inc
mov
mov
cmpsl
pop
fidivrl
arpl
clc
rorl
push
mov
jns
adc
inc
fidivl
adc
dec
fwait
nop
sbbb
fdivl
sahf
add
inc
js
pop
loope
pushf
hlt
mov
insl
inc
lcall
cmpb
in
or
jno
rclb
fwait
sbb
add
ficoms
jbe
xor
mov
pop
decl
outsb
xor
jae
sbb
adc
testb
sub
sbb
mov
dec
pop
cmp
pop
push
leave
pop
icebp
fstps
sbb
push
push
fwait
cmp
mov
fsubs
les
fcompl
int
lret
push
lock
and
call
addr16
aam
pop
arpl
adc
gs
scas
popf
mov
aaa
inc
jmp
mov
mov
cmp
and
aas
icebp
cs
mov
mov
shrb
lcall
cmp
je
adc
mov
mov
jmp
stos
aaa
add
xor
pop
ds
cmp
jl
jns
mov
lea
out
mov
push
jmp
hlt
mov
addb
xchg
dec
rclb
xor
and
sbb
call
arpl
fs
aas
add
dec
mov
sub
jbe
pop
lahf
push
out
push
aad
dec
xor
in
imul
movsb
push
pop
adc
inc
mov
adc
push
sbb
add
and
iret
sub
hlt
test
pop
mov
mov
ljmp
enter
jno
leave
push
pop
fs
pop
push
cs
out
adc
xlat
loope
movsl
loopne
push
xor
icebp
out
loop
mov
rcrb
popa
adc
sbb
add
add
cmp
xchg
popa
in
jg
or
pop
mov
out
loop
xchg
mov
jp
xor
or
add
pop
add
movsb
sti
rorl
fadd
les
xchg
xor
repz
xchg
in
sbb
pop
vandnps
sbb
dec
or
mov
jb
dec
mov
push
add
rcrb
pop
lcall
sub
push
mov
gs
lods
mov
sbb
and
lock
stos
lods
jo
xchg
dec
fcoms
xor
pop
inc
scas
pusha
shl
cmp
sbb
xor
outsb
shlb
clc
test
and
jne
and
pusha
fdiv
xchg
push
add
pop
jl
in
gs
mov
sbb
popl
cld
mov
ds
jne
movsl
pop
push
sbb
je
pop
pop
lret
clc
add
mov
rclb
addl
lock
inc
ret
add
sbb
fwait
mov
xchg
enter
clc
xor
mov
fcmovne
add
adc
fmul
cmp
lds
ficompl
in
and
movsb
add
push
rorl
or
pop
std
mov
cmp
mov
or
xchg
mov
mov
icebp
cmp
fmuls
mov
jbe
cmp
cmp
rclb
mov
mov
jne
scas
sub
mov
fsubs
and
inc
push
or
pop
push
cmp
into
cmp
inc
mov
sub
and
add
xchg
enter
pop
dec
and
int
mov
xor
into
subb
xor
push
in
add
rclb
iret
insb
lods
es
mov
pop
pop
nop
fcomi
sbbb
in
add
or
loopne
xchg
sti
or
mov
push
dec
out
rolb
int
into
movsl
push
rcrb
inc
push
lds
decl
mov
notl
pushf
aam
push
aam
fsubs
loopne
or
dec
mov
fsubp
add
mov
lods
or
rcl
repnz
arpl
add
out
test
fstpl
pop
lods
rorl
push
or
shlb
rol
in
mov
ljmp
sbbb
mov
pusha
fldenv
data16
mov
mov
mov
js
adcb
or
push
push
mov
into
dec
cmp
cmp
insb
mov
mov
test
inc
movsb
lahf
push
insb
cmpsl
sub
in
pusha
jo
add
jns
int3
and
movsb
pushf
dec
add
sub
aaa
xor
xchg
fdivrs
inc
push
mov
nop
out
adc
je
faddl
pop
test
pop
dec
inc
hlt
test
dec
enter
outsl
shl
adc
xchg
aaa
in
addb
aad
adc
idivb
push
sub
dec
imul
sub
sub
shlb
test
mov
rcrb
cmp
les
leave
sbb
mov
ret
stos
sub
sub
add
out
nop
or
movl
imul
movsb
pop
addr16
jle
and
mov
jmp
mov
rolb
cld
rcl
stos
add
clc
subl
inc
ret
sub
mov
and
imulb
mov
add
rolb
mov
sub
fsubl
ja
mov
cld
or
mov
mov
imul
stc
dec
lods
sbb
mov
mov
mov
adc
fucompp
push
lods
aaa
mov
test
scas
mov
js
dec
repnz
and
les
pusha
mov
arpl
adc
cmp
loope
outsb
aas
dec
stos
add
add
pusha
xlat
xchg
xor
addr16
jmp
add
sahf
stos
xor
add
mov
pop
addr16
and
nop
push
daa
mov
and
les
ficomps
cmp
add
dec
outsb
pop
jbe
ror
aaa
dec
shlb
sbb
sbb
movsl
sti
push
xor
cmc
dec
adc
stc
gs
adc
xchg
sbb
push
jl
movsb
inc
mov
inc
and
dec
adc
jnp,pn
int3
sub
mov
and
in
fmull
inc
ret
mov
inc
rcr
or
lret
add
push
push
xchg
mov
xor
out
xor
xor
fs
mov
lret
arpl
dec
cld
jge
dec
enter
pop
add
lock
das
inc
add
mov
aad
incl
or
mov
bswap
inc
xor
sbb
pusha
mov
cmp
nop
stos
add
sub
cmp
push
andl
cmp
push
lret
pop
pop
xor
testb
add
mov
jl
sub
sub
rorb
or
inc
lods
popf
lock
sub
movsb
jecxz
or
stos
sub
aaa
xlat
push
xor
pop
inc
cld
lret
or
adc
sbb
push
xchg
add
jno
jne
in
xchg
mov
cld
lock
add
xor
adc
push
xchg
sub
lock
inc
or
into
mov
cmp
inc
gs
xchg
insl
xor
push
pop
mov
sub
sub
es
iret
mov
push
pop
jg
add
fs
js
lods
cld
call
fs
add
pushf
or
cld
xchg
pop
inc
pusha
or
inc
mov
jg
aad
push
daa
rolb
mov
adc
sbb
movsb
ret
shrl
rcr
or
inc
loop
xor
mov
jo
enter
orb
lret
push
dec
in
mov
jo
sti
inc
pushf
clc
and
jo
test
xorb
mov
pusha
pushf
inc
push
lcall
mov
adc
sbb
add
mov
sbb
mov
cmc
push
xor
sub
dec
mov
sti
mov
fwait
xlat
xchg
int3
lret
or
hlt
gs
lods
jp
les
loopne
sarb
es
roll
inc
sarb
push
cmp
cwtl
push
aaa
cmp
loope
mov
adc
xor
mov
arpl
sbb
pushf
js
or
cmp
xchg
push
sbb
xchg
cmpsl
scas
and
dec
stc
mov
out
push
jmp
int3
rcrl
clc
ss
in
shrb
out
repnz
push
add
std
jno
jmp
jl
loopne
cmp
jp
cld
or
pop
add
pushf
dec
inc
mov
repnz
xor
xor
xor
pop
pop
rcrb
push
xlat
mov
inc
imul
push
pushf
fmull
lcall
sbb
movsb
out
outsb
adc
scas
push
push
cwtl
inc
int
sub
mov
rcrb
add
jb
lahf
xchg
test
outsl
cmc
push
pop
add
jns
dec
stc
cld
add
push
jns
popf
jmp
pop
add
sbb
nop
mov
xor
add
and
add
idivb
movsb
test
stos
incb
gs
mov
pop
jmp
add
rclb
jne
add
mov
push
pop
dec
jne
enter
and
mov
sbb
clc
mov
rclb
push
sbb
jb
mov
sub
pop
je
loope
or
dec
es
push
cmp
aad
imul
add
into
ret
inc
loope
add
mov
nop
dec
mov
sub
or
push
incl
je
jns
cmp
mov
mov
dec
jno
inc
cmpsl
into
jmp
stc
sbb
add
dec
enter
sarb
push
js
mov
ret
lcall
in
jae
dec
sbb
mov
mov
mov
pop
aam
rclb
jae
ret
pop
xor
cmpb
loope
inc
adc
cmpb
pop
lock
adc
pop
shll
in
iret
cmp
jne
outsb
aaa
xchg
xchg
orb
shl
loop
aad
and
sbb
dec
push
inc
orl
das
mov
mov
add
insb
xchg
push
push
mov
cltd
ret
fcmovnu
push
add
add
pop
add
jns
pop
inc
mov
and
les
dec
and
xchg
dec
dec
into
jo
mov
jecxz
xor
pop
or
mov
sbb
arpl
push
enter
ss
sub
je
adc
and
and
mov
cmp
and
add
push
pushf
fwait
or
loop
adc
jecxz
dec
push
add
inc
loop
mov
push
mov
pop
sub
inc
xlat
loopne
out
or
sbb
and
fadds
ret
mov
enter
daa
mov
stos
or
jp
adc
xor
testl
add
loopne
push
cmpsb
test
lret
data16
jno
xchg
mov
in
inc
add
js
repz
stc
mov
mov
and
les
pushf
test
xchg
ljmp
jo
enter
mov
add
leave
stos
jmp
add
movsl
sbb
add
and
subb
adc
fisttpl
push
push
psrlq
pushf
mov
adc
cmp
add
mov
xor
mov
cs
mov
scas
fneni(8087
or
and
and
cmpsb
shr
add
mov
movsb
ficoms
lcall
daa
sub
and
sahf
inc
orb
sbbb
and
xor
inc
ds
sbb
or
sbb
jecxz
inc
or
mov
sbbb
out
out
xor
or
pop
sub
xor
dec
pusha
test
mov
hlt
add
jle
addr16
clc
pop
imul
pushf
loopne
cmp
push
xor
out
loopne
mov
bound
je
or
fadds
jnp
mov
pushf
pop
lea
pop
sub
xchg
mov
fsubrs
xorl
sub
cld
dec
add
inc
mov
adc
cld
pop
nop
dec
adc
pop
dec
mov
mov
and
pop
test
js
mov
cmp
insb
scas
rol
cmpsb
pop
orb
pop
and
dec
adc
xor
cmpsl
daa
aas
into
lock
inc
mov
add
stos
jge
rclb
aas
adc
cmp
xchg
mov
aad
and
hlt
hlt
aam
mov
scas
mov
cmp
dec
jl
jmp
xor
add
cld
add
fisubrs
and
les
xchg
adc
jg
xor
add
sbb
fdivl
add
scas
xor
gs
repz
push
and
pushf
aam
jnp
inc
loopne
dec
ja
push
idivb
cmc
sub
mov
and
add
clc
pusha
sub
mov
rcrb
add
arpl
stos
mov
push
adc
sub
clc
popa
or
mov
dec
pop
dec
repnz
and
int3
insl
pop
stos
jp
add
sub
ja
inc
inc
js
add
mov
nop
cmp
pushf
add
gs
or
add
or
fdiv
mov
movsb
js
lahf
mov
push
or
stc
aad
call
mov
imul
sbb
dec
adc
adc
or
xchg
push
or
dec
jl
andb
shrb
sbb
rorb
fcomps
mov
mov
push
or
cmp
xchg
in
outsb
fs
aad
mov
cmc
stc
in
in
xchg
cmp
ret
cld
js
lcall
repnz
sub
fisttpl
pop
jge
gs
aam
cld
xor
xchg
or
sbb
add
mov
dec
scas
iret
mov
leave
cmpsl
jg
loopne
xor
add
pop
mov
movzbl
test
loopne
dec
push
mov
rolb
inc
sahf
cmc
mov
sbb
movl
mov
or
call
mov
stc
mul
pop
fsub
cli
data16
or
mov
inc
sbb
nop
cmp
mov
pop
or
stos
pop
inc
and
mov
add
arpl
outsb
xchg
push
push
add
popa
pop
mov
aas
sub
push
call
cmp
pushl
or
jne
or
cmp
mov
out
jb
xchg
add
iret
sbb
ret
stos
mov
sarb
jo
sbb
mov
test
add
cmp
jae
into
icebp
mov
rolb
into
pop
out
movsb
mov
cmc
adc
lea
into
orb
mov
xor
xchg
mov
xchg
mov
cld
dec
dec
clc
and
shll
mov
dec
mov
cli
pop
popa
dec
test
pop
pop
es
jbe
fwait
dec
jp
push
mov
and
jg
pop
pusha
arpl
and
mov
sbb
mov
xchg
cmp
call
iret
mov
pusha
cwtl
pop
push
push
add
fwait
pushl
jl
inc
pop
add
and
add
pop
cmp
jbe
scas
imul
cmp
sub
xor
mov
cs
imul
mov
cmpsl
xor
or
mov
sbb
bound
sub
pop
fidivrs
out
add
fnstenv
jl
sbb
add
imulb
add
sbb
and
mov
push
rolb
lds
xchg
loop
inc
jnp
pop
cltd
pop
sbb
mov
pop
xor
push
ret
lea
push
dec
stos
sbb
fldcw
or
xchg
pop
xchg
xchg
js
jge
cmp
out
add
dec
pop
jmp
rolb
js
fildl
out
out
mov
je
pop
or
sbb
and
adcl
fdivs
and
test
imul
cld
stos
nop
incb
rolb
adc
adc
mov
dec
or
jl
push
mov
cmp
jg
push
jmp
in
subl
insl
adc
nop
arpl
punpckhwd
lock
out
mov
shl
add
fdivr
mov
mov
icebp
rcl
cs
hlt
xor
inc
sbb
mov
and
cs
sldt
jecxz
adc
scas
jge
negl
cmp
mov
out
jl
dec
into
pop
or
jno
clc
fwait
cmp
fst
adc
cld
popa
add
ja
in
and
cmc
mov
and
or
push
shrb
out
jns
bound
dec
adc
add
inc
sbb
sahf
inc
xchg
movsl
dec
daa
pop
mov
sbb
es
ja
loopne
sbb
idiv
insb
add
sahf
repnz
cli
mov
mov
cs
and
add
add
pop
and
pop
stos
push
add
cmp
test
mov
sar
lock
or
popa
jecxz
repz
arpl
add
inc
mov
mov
push
push
negb
and
xor
pop
cmc
adcb
fdivrl
dec
dec
leave
in
cs
shrl
cld
xchg
sub
adc
add
in
test
cmp
mov
mov
mov
add
stc
fsubs
dec
inc
mov
lret
add
arpl
enter
aad
subb
mulb
mov
or
xchg
add
inc
or
bound
sub
push
lds
push
sbbb
push
jnp
sub
nop
dec
je
sbb
dec
movsl
inc
mov
jae
mov
mov
inc
jl
sbb
cmovnp
aam
pushf
call
push
sti
subl
flds
xor
lea
call
call
outsl
aas
add
std
ja
pop
loopne
adc
add
in
lds
adc
into
pop
int3
orl
lock
and
jmp
mov
sbb
xchg
mov
test
jae
iret
loope
cmp
jmp
ss
js
add
scas
mov
inc
xor
lock
outsl
addb
xor
or
push
xchg
or
fs
scas
nop
lea
jmp
jne
mov
es
or
mov
dec
mov
pushf
fwait
lahf
inc
filds
adc
add
jo
sbb
sbb
fstpt
dec
push
mov
sti
adc
test
add
lods
mov
pop
add
andb
repz
push
mov
push
dec
mov
stos
jns
sub
mov
fs
xor
and
mov
in
xor
sti
movaps
cmpsb
adc
sbb
sub
ret
dec
adc
popa
out
data16
andl
mov
dec
fstpt
pop
pop
inc
jle
pushf
push
adc
out
adc
mov
add
pop
and
mov
jo
xor
pop
mov
or
lret
mov
add
push
jmp
cs
in
loop
not
clc
sub
and
hlt
add
push
loopne
inc
sub
leave
mov
popa
or
jo
push
mov
xor
add
mov
into
xor
call
pop
in
out
out
mov
in
sbb
mov
xor
jnp
push
mov
dec
pop
mov
cmp
dec
xorb
adc
daa
ja
or
adc
inc
icebp
mov
icebp
mov
or
adc
stos
loop
aaa
sub
jne
ss
xchg
pusha
pop
ja
pop
push
pop
dec
push
pop
lea
fcmovnb
jle
push
jo
cmp
sahf
mov
mov
fmull
rorl
lods
xchg
dec
mov
outsb
jmp
dec
adc
aad
mov
imul
adc
mov
fldenv
or
sub
cmp
or
lock
addb
and
dec
ljmp
sbb
leave
xor
mov
xchg
jbe
lds
jns
push
jnp
add
stos
cwtl
in
pop
sub
test
aad
push
imul
lods
stc
or
imul
add
xchg
mov
addb
add
mov
add
repnz
mov
je
mov
arpl
repnz
popa
pop
cmc
addl
push
mov
cmpsl
push
insl
lret
pop
mov
dec
loope
cmpl
cwtl
mov
pop
add
and
xor
sub
and
scas
icebp
aam
shlb
cmp
add
addr16
add
insb
inc
xchg
jae
movsl
js
dec
scas
lcall
push
lret
cmp
or
mov
xchg
mov
repnz
outsb
rolb
xorb
lods
loope
push
adc
or
mov
jmp
sbb
lahf
rorl
or
arpl
loope
mov
and
cmp
and
in
inc
and
sarb
sbb
push
xor
stc
cmp
shll
mov
push
in
xchg
test
xor
add
insl
sub
ljmp
cmp
push
jo
sahf
leave
mov
cld
jecxz
enter
inc
in
jmp
addb
data16
out
test
fcomi
test
nop
adc
addl
sub
xchg
jp
inc
mov
pop
cltd
cmp
xchg
push
xlat
add
stc
out
dec
adc
xor
xchg
add
add
sbb
dec
sti
mov
insl
push
sub
inc
adc
sub
andl
or
sub
jae
aad
sbb
adc
loop
add
mov
into
loopne
ss
fldenv
inc
jge
clc
xor
jmp
mov
inc
push
inc
pop
mov
jl,pn
sbb
mov
cltd
mov
mov
pop
popf
jns
xchg
cmp
test
loope
pop
add
xchg
ja
jae
cmp
addb
or
inc
cmpsb
cmp
cmp
fiaddl
adc
pop
jns
sbb
mov
or
loope
xchg
and
iret
pop
inc
lret
xchg
push
addb
jo
jno
jns
repnz
rolb
sub
mov
xor
popf
dec
outsl
sub
outsb
adc
addr16
adc
jno
adc
mov
cmc
sbbb
adc
fcoms
cli
lahf
scas
loop
add
jns
mov
lcall
and
popf
pop
mov
out
test
sub
jo
cltd
pop
pop
loope
mov
cmp
imul
xor
and
imul
pop
xchg
add
jg
stc
movsb
bound
mov
loopne,pt
sub
pusha
xor
stc
xchg
push
and
jmp
lahf
or
cmp
jp
sbb
pop
pusha
gs
xlat
les
das
outsb
xchg
sub
cmc
jecxz
add
sbb
mov
fs
push
sbb
call
push
ds
insb
add
mov
cmp
icebp
fstpl
imul
inc
icebp
ret
pop
mov
popf
inc
mov
mov
movsl
lods
and
push
loopne
sarl
mov
dec
or
mov
sbb
ret
push
add
iret
fwait
pop
ljmp
mov
lods
inc
adc
ficomps
fnstsw
pop
mov
lret
movsb
loopne
call
cmpsl
in
push
ljmp
xor
loop
das
adc
in
fsts
pop
dec
mov
adc
imul
add
aaa
sub
and
jnp
push
in
loop
jo
add
jbe
add
pusha
jmp
decb
push
mov
sbb
cmp
pop
xor
outsl
lea
mov
jo
jmp
pushf
dec
xorl
pop
add
popa
popf
jmp
sbb
jnp
and
outsl
aaa
in
push
incb
out
outsb
add
je
xchg
mull
add
or
adc
xor
sarb
pop
jne
stc
push
test
jo
push
sbb
add
and
add
out
dec
scas
and
add
pop
inc
jb
daa
inc
add
adc
enter
ss
push
lret
push
in
incl
or
scas
mov
xor
sub
sbb
or
add
pop
roll
cs
iret
stos
xchg
loopne
jmp
push
mov
jns
jle
jae
add
outsb
jge
sbb
pop
mov
add
add
in
lods
add
orw
jae
fsubrl
add
push
repnz
ja
inc
inc
notb
add
sbb
sub
add
out
out
lahf
fsub
jle
add
and
push
add
cwtl
mov
out
add
mov
fsubs
fildl
ss
and
add
andl
jmp
lods
lret
andb
imul
add
repz
ds
adc
add
cmp
push
pop
pop
add
push
bound
dec
jb
inc
sahf
add
je
cmp
lcall
push
out
or
sbb
pushf
aas
add
shll
shl
add
inc
rorb
dec
mov
ljmp
lea
or
dec
sbb
jp
add
inc
dec
fs
cmp
add
test
mov
mov
addr16
movsb
fsubs
fsubr
add
es
stos
jne
lahf
mov
mov
add
repnz
or
imul
and
mov
cli
mov
xchg
aam
dec
mov
add
mov
rolb
rclb
es
push
and
outsb
testl
and
adc
add
int
xchg
cmp
mov
loopne
dec
cmp
add
cmp
pop
pushf
push
push
rcrb
cmp
dec
lret
repz
sbb
data16
out
hlt
add
xchg
or
add
sbbb
psllw
cmpsb
sbb
mov
into
mov
push
add
cmp
pop
hlt
jnp
push
push
addr16
not
repz
add
and
movsb
ret
add
pop
test
arpl
stos
fisttps
inc
inc
mov
cmp
outsb
push
pop
ja
jecxz
mov
sbb
mov
adc
xchg
mov
incl
jl
or
push
out
repz
pop
enter
or
mov
out
out
add
clc
pusha
aas
add
mov
es
xor
les
xchg
add
adc
rcr
sub
pop
mov
lcall
jne
mov
push
enter
inc
loopne
add
or
inc
das
cli
arpl
fucomp
adc
sbb
inc
mov
shrb
inc
pop
add
roll
push
mov
fisubl
js
fsubs
xlat
shl
mov
xchg
jo
adc
test
pop
adc
nop
dec
sub
sbb
mov
or
scas
insb
mov
xchg
pop
jl
add
mov
xchg
xchg
sub
loopne
shl
or
push
sbb
sbb
push
cwtl
out
adc
fisubs
insb
flds
mov
ss
add
inc
gs
in
fs
mov
pop
cmp
notb
mov
mov
jl
pop
sub
stos
aad
shlb
sub
mov
inc
push
push
fs
add
xorb
push
movsl
imul
psllw
push
stos
mov
nop
mov
cmp
mov
sbbb
pop
jl
sub
dec
adcb
xor
add
ljmp
out
add
jns
pop
popa
mov
jge
pop
inc
mov
jnp
aaa
xor
andl
iret
mov
and
cmpsb
je
mov
xchg
gs
dec
shr
mov
enter
and
mov
loopne
jb,pt
add
rcrl
add
add
pusha
pop
xor
loope
sti
and
lahf
dec
das
out
inc
add
push
std
popa
push
imul
rol
hlt
pop
loope
mov
pop
lds
aad
pop
xchg
mull
push
sub
leave
push
loopne
pusha
orl
sbb
jo
cmp
loop
and
addr16
push
pop
insl
bnd
pop
cmp
adc
call
mov
sbb
insb
add
loope
pop
add
or
pop
sub
loopne
push
push
pop
ret
add
cmc
dec
push
add
push
mov
xor
sub
es
mov
mov
adc
or
cs
pxor
test
out
sub
push
mov
bound
jne
or
fdivrl
lahf
push
and
ja
cwtl
and
out
push
add
aas
pop
jbe
or
inc
add
mov
add
push
xor
jp
std
jmp
or
cwtl
mov
add
add
mov
add
or
cs
lods
add
mov
test
fsubl
or
cmp
xchg
and
lock
loopne
add
mov
mov
sub
out
push
xchg
sbb
scas
mov
and
neg
push
jmp
jb
icebp
shlb
std
daa
xor
and
or
mov
subl
cmp
gs
add
xchg
repz
rorb
into
mov
add
pop
inc
push
shll
mov
testl
adc
push
sub
mov
push
dec
lret
add
xor
rcrl
int3
cmp
xchg
dec
outsl
add
xor
add
iret
in
add
mov
in
xor
fadds
add
insb
mov
test
and
outsb
inc
rolb
jo
push
or
sbb
add
and
cltd
lret
data16
jns
sbb
cmp
and
pop
mov
rorl
and
mov
mov
sbb
lcall
mov
push
into
imull
outsb
rolb
jle
inc
in
lea
ljmp
inc
out
addr16
and
pop
aam
mov
mov
aam
cltd
dec
xchg
dec
addps
jae
push
cwtl
sbbl
jmp
mull
sbb
hlt
add
jb
mov
sbb
sub
out
cmp
repnz
and
xor
mov
push
mov
add
mov
dec
mov
inc
cmp
lret
adc
xchg
add
sub
mov
xlat
lahf
mov
cmp
push
add
insb
push
mov
out
adc
push
rclb
sbb
stos
jecxz
int3
and
les
rcr
aaa
add
sub
dec
xor
scas
test
repz
lea
xchg
mov
push
arpl
stc
or
std
hlt
insb
or
hlt
dec
add
sub
in
cmp
dec
mov
jo
out
add
or
or
or
pusha
add
jns
mov
lock
sbb
je
lret
jg
data16
movsb
cld
sub
lea
xor
enter
in
add
inc
cmp
add
sbb
xor
sbbb
xchg
popa
xchg
call
dec
pop
push
push
add
dec
pop
test
mov
setle
mov
fisubrs
aaa
loop
jnp
insb
jns
xchg
sub
sbb
rcr
xchg
push
mov
xchg
pop
adc
jno
or
pop
jle
pop
add
pop
mov
ror
inc
stc
inc
and
sbb
adcl
sub
imul
pop
xchg
push
mov
pop
cs
or
inc
out
cmp
fcoml
je
in
mov
xchg
into
sbb
incl
sti
add
mov
adc
data16
js
add
arpl
out
add
in
xchg
and
mov
mov
push
gs
dec
sbb
pop
xor
pop
lock
mov
cmp
sbb
add
sub
pop
xor
add
popl
call
and
mov
add
mov
jmp
dec
out
lret
aad
std
pushf
movsl
or
jge
cmp
cwtl
jae
pop
jmp
mov
mov
push
fidivs
inc
add
add
mov
cmp
adc
push
enter
das
and
mov
xor
add
pop
jmp
jl
pop
add
fisubrl
pop
cs
into
xor
cmc
sbb
daa
push
mov
roll
ffree
sub
pop
mov
cmpsl
add
adc
mov
push
cmpb
xchg
js
pop
fwait
pop
and
sbb
add
dec
adc
jl
and
cmp
or
orl
add
add
adc
ret
aam
xor
or
xchg
add
add
and
or
popf
js
xor
sbb
loope
jecxz
xor
pop
enter
mov
test
mov
jp
jno
sub
sbb
and
hlt
faddl
lods
aam
je
ja
fcoms
push
jmp
leave
xor
pop
push
jae
in
xchg
xchg
sbb
cmovs
mov
cmp
or
pop
test
test
add
ljmp
aas
jae
andb
and
jmp
es
fldl
mov
mov
das
outsb
sbb
mov
mov
pop
mov
sbb
adc
mov
xlat
adc
mov
add
insb
inc
mov
xorb
ja
mov
sarl
test
or
jne
fcomps
nop
push
push
pusha
popa
lret
pop
and
inc
or
pop
sbb
pop
fstl
adc
movups
mov
sbb
pusha
sbb
stos
adc
push
jns
add
std
jle
add
pop
inc
mov
shl
imul
stos
mov
add
cmp
push
sti
adc
pop
mov
enter
mov
jne
popa
ds
ljmp
pop
js
add
sub
add
adc
shlb
mov
popf
add
test
xlat
jno
and
ljmp
cwtl
pusha
mov
rol
add
fcomip
pop
or
adc
ds
insb
sub
fcoms
fnstenv
popf
arpl
and
dec
or
adc
push
mov
mov
add
scas
or
rolb
push
call
aad
push
inc
jbe
roll
mov
cmc
pop
push
enter
jae
scas
pop
iret
fwait
aaa
inc
add
dec
cmp
enter
es
sub
sbb
mov
cmpl
or
in
adc
jne
mov
mov
popf
in
pop
inc
xchg
nop
fisttpl
sub
push
gs
cld
bound
movsl
push
mov
pop
sub
aaa
xchg
cmovbe
jmp
cmp
out
push
cli
pusha
mov
push
insb
jnp
mov
test
mov
xchg
push
data16
mov
add
lret
or
pop
in
mov
xchg
cmp
adc
test
ljmp
leave
jae
cs
or
out
lea
mov
or
jmp
das
jbe
jbe
sbb
mov
sub
xor
into
ja
sbb
adcb
add
mov
xchg
sbb
adc
add
stc
add
mov
adc
je
testb
int3
add
adc
add
push
jmp
lock
push
jnp
js
sbb
xchg
mov
sub
cmp
adc
cmpsb
scas
daa
add
sbb
clc
iret
dec
add
pop
mov
int
dec
imul
and
out
in
mov
mov
popa
mov
push
inc
add
fwait
mov
pop
pop
call
pop
aam
sbb
xor
repnz
xchg
out
add
jmp
loopne
pop
pop
dec
push
sub
ljmp
in
inc
test
scas
test
cmc
nop
or
and
adc
mov
inc
jnp
add
add
mov
es
pop
dec
gs
mov
sbb
jmp
incl
repz
mov
xor
add
inc
std
xchg
mov
mov
mov
cli
sub
mov
inc
sub
stos
xor
mov
rorb
cmpb
push
cld
add
or
adc
ljmp
push
lea
xor
int3
mov
out
jg
adc
xchg
add
es
inc
add
je
sub
scas
add
inc
add
daa
movsl
add
lock
inc
cmp
pop
in
add
sahf
sub
sub
fwait
inc
cmpl
cmp
ret
in
divl
ja
andl
xchg
mov
pop
out
js
loopne
mov
aad
inc
xor
mov
js
cmc
mov
jp
push
pop
sub
call
mov
shll
add
aad
xchg
dec
ret
push
mov
outsl
push
scas
mov
rcrb
ss
xorl
movsl
cs
fs
cwtl
and
std
or
and
je
push
fldl
pop
lods
adc
mov
mov
leave
iret
cs
mov
pop
std
dec
sti
mov
dec
mov
imul
pop
cltd
add
loopne
add
stos
push
stc
and
rolb
jne
dec
mov
jmp
dec
jb
insl
rclb
mov
or
jmp
jle
in
popa
xchg
mov
mov
or
push
push
jo
and
pop
add
popf
mov
cld
adc
xor
mov
fcmovbe
sarl
and
and
push
scas
add
jb
xor
lock
xchg
gs
add
popf
cmc
jmp
std
add
sbb
addl
sub
shlb
out
add
xchg
sbbl
movl
ljmp
push
pop
pusha
or
ret
mov
adcb
add
sub
push
mov
or
cmp
pop
jle
insl
outsb
loope
sub
int
sub
dec
decb
pusha
loopne
dec
add
cmpsb
mov
xlat
call
mov
addr16
xor
mov
out
cmp
lcall
scas
sub
push
sub
nop
jle
mov
xchg
mov
orb
sbb
pop
sti
add
and
inc
mov
ja
sub
daa
pop
xchg
nop
mov
adc
loop
adc
cltd
push
movsl
sbb
aam
mov
or
insl
dec
xorl
pop
jno
add
pop
adc
icebp
add
add
pop
mov
mov
jnp
nop
in
fndisi(8087
hlt
xchg
outsb
and
mov
jge
xchg
xchg
rclb
mov
mov
out
add
test
pop
inc
popf
inc
sub
jmp
xor
xor
loopne
xchg
push
push
mov
adc
shl
add
ret
inc
and
pop
add
mov
pusha
push
inc
mov
dec
jne
sub
orb
shl
outsb
cld
sbb
xchg
daa
out
push
mov
bound
mov
pusha
cmpsb
icebp
daa
movsb
leave
cltd
jle
lds
adc
mov
jle
inc
lret
shll
scas
out
mov
push
sub
js
aas
std
dec
mov
dec
test
loopne
add
repz
hlt
test
sti
call
add
arpl
jg
sbb
push
mov
or
into
xlat
cs
push
bound
mov
shr
pop
mov
imul
rol
in
ret
loop
adc
mov
jmp
push
jle
inc
outsb
lods
add
pop
jl
add
pusha
push
inc
clc
pop
inc
add
sub
je
faddl
xchg
cmp
out
ljmp
inc
lcall
mov
imull
aaa
out
subl
add
clc
ficompl
jecxz
add
and
stos
cmpsb
cmp
lds
lret
sbbb
nop
fldt
inc
icebp
add
xor
inc
add
sub
adc
loopne
gs
push
sub
js
nop
mov
into
pop
mov
mov
andl
sub
push
jb
mov
and
fldcw
sbb
jnp
subb
pop
xchg
pop
sbbl
cmc
andb
xchg
cmp
xchg
rorl
or
or
sti
adc
mov
mov
test
sub
das
xchg
adc
dec
and
sub
push
pushf
imul
dec
sub
sub
dec
add
pop
xchg
imul
in
inc
push
pusha
call
test
ret
ljmp
jg
out
dec
sbb
pusha
pop
aad
add
lods
mov
iret
cmp
push
adc
add
lds
dec
mov
pop
mov
jb
or
xchg
jge
je
push
and
jne
mov
loope
xor
fstpt
ljmp
jbe
or
add
mul
pop
push
adc
test
push
add
dec
lret
loopne
xchg
push
cmc
leave
fimull
das
add
mov
or
fidivs
nop
and
faddl
xchg
faddl
enter
mov
mov
adcb
jne
inc
cmp
add
adc
ss
or
int3
out
mov
shrb
out
and
xor
add
test
test
xchg
lret
or
and
inc
movsb
cmp
dec
xor
push
mov
jmp
jbe
cli
in
inc
leave
call
into
insl
or
mov
nop
push
jbe
mov
shrb
negb
mov
push
daa
ja
sub
or
dec
xor
jb
das
fwait
add
mov
adc
xchg
pop
add
push
fdivrs
sub
nop
fldt
rorb
hlt
xchg
add
in
outsl
inc
rorb
dec
sub
jle
dec
cwtl
nop
dec
mov
adc
popa
cwtl
lea
dec
mov
xor
dec
pcmpgtb
mov
pop
jmp
mov
xorb
pop
mov
dec
subb
mov
idiv
nop
adc
jge
mov
cmp
movsl
dec
outsb
and
int3
jge
xchg
xchg
mull
xor
mov
nop
sbb
mov
jne
enter
leave
mov
imul
cmpsb
js
fwait
pop
adc
add
sbb
sub
addr16
sti
cmp
pop
andl
xchg
adc
or
inc
mov
popa
insb
dec
jne
ret
xchg
push
mov
shl
andl
aaa
sub
jb
add
xchg
sub
and
add
ljmp
dec
xor
fildl
mov
out
inc
jmp
sbb
jo
cmpsl
mov
cli
cmp
jno
sahf
cmp
pop
pop
xlat
dec
and
les
push
mov
jl
pop
loop
mov
lea
les
jl
sub
popf
or
les
dec
rorb
outsb
sub
aas
xor
cmp
mov
movswl
or
pop
jnp
jo
and
lea
loopne
popf
fstpl
push
pusha
shlb
xchg
pushf
mov
xor
add
std
lea
add
jl
jno
xchg
dec
add
mov
or
jbe
sti
pop
js
aam
pop
cmp
sahf
scas
inc
mov
inc
pop
push
push
fldt
inc
stos
and
jo
push
fsts
push
lods
jle
add
outsb
mov
add
cli
data16
sub
jl
imul
and
jecxz
push
clc
push
jmp
push
dec
enter
js
pop
jbe
add
mov
lods
inc
sar
add
int3
add
cmp
mov
xor
pop
cmp
jg
fisubrl
pop
pop
jl
jmp
push
adc
mov
mov
push
mov
push
mov
add
add
adc
push
and
push
xchg
add
mov
pusha
mov
aad
xor
add
sub
xchg
insl
jbe
fisttpll
imul
mov
inc
adc
testl
loope
cmp
cmp
popf
daa
dec
and
push
adc
xor
fcoms
mov
mov
mov
pop
cli
fs
add
movb
inc
xchg
xor
mulb
add
scas
in
sub
or
imul
add
jecxz
inc
das
es
and
sub
push
push
aas
test
dec
add
cwtl
jmp
mov
test
or
xor
and
movsb
pop
dec
loope
orb
push
cmp
add
or
add
jmp
fists
xor
lds
cmp
sub
dec
cmc
dec
iret
push
add
add
shl
jmp
mov
add
push
les
test
cltd
mov
sbb
sbb
pusha
shrb
xor
cltd
add
adc
sbb
lods
dec
loope
cmp
adc
push
shlb
xchg
add
cltd
cs
xchg
das
inc
dec
add
subb
xchg
into
or
bound
dec
nop
or
ss
addr16
jo
push
add
push
inc
or
out
adc
push
dec
adcl
dec
pusha
loopne
jne
xchg
push
mov
sti
xchg
dec
and
jns
push
jmp
sbb
fs
push
int
push
popa
pop
call
les
shll
popa
add
dec
loop
push
pushf
in
push
inc
andb
or
loopne
add
and
cmpl
pop
pop
inc
cmp
inc
cld
add
lods
add
dec
idivl
mov
push
push
mov
xor
movzbl
lret
mov
pop
out
xor
leave
sbb
xchg
mov
fisttps
add
cmp
and
add
jnp
adc
mov
sub
cmp
and
adc
sbb
std
int
lods
cmp
or
test
gs
cmpl
cli
enter
jne
test
cmc
or
arpl
mov
leave
cmp
lret
sub
shr
lods
xchg
jmp
mov
mov
out
mov
ror
addb
add
add
jmp
test
or
mov
push
add
or
fimuls
rcrb
sbb
mov
into
sarl
pop
cmp
lret
xor
xchg
add
jmp
push
mov
push
inc
lds
and
push
add
pop
or
mov
mov
xorb
jo
cmp
enter
sub
sub
filds
or
in
mov
add
shlb
or
insb
jmp
and
adc
or
cmpb
add
fsts
and
or
or
movsb
adc
mov
mov
xor
in
xor
cmp
int3
sbb
pop
cmp
xacquire
adc
cmp
dec
xchg
stc
mov
or
sub
xchg
mov
mov
mov
ret
and
int3
call
dec
dec
insb
xor
jecxz
stc
das
call
add
push
push
add
jae
sbb
pop
sbb
leave
adc
add
dec
adcb
jmp
cwtl
pop
pop
loopne
pop
leave
ret
mov
and
mov
cmc
sbb
cmp
testb
sti
into
ror
cmp
sti
xchg
fnstcw
or
fldt
into
mov
fcmovne
movsl
daa
or
inc
inc
fs
jo
mov
dec
divb
xor
dec
int
inc
adc
add
mov
sub
jbe
jae
lds
pushf
sbb
push
cmpsb
mov
mov
adc
add
loopne
mov
mov
xchg
or
cs
or
aaa
xor
sub
imul
add
and
xchg
test
test
data16
add
adc
dec
cmpsb
mov
imul
push
xor
cmp
push
divb
xchg
aam
mov
insl
es
popf
pop
jg
or
pop
pop
xchg
pusha
imul
push
mov
sbb
cmpsl
fsubrs
mov
add
das
loope
in
outsl
xchg
dec
testb
push
in
fstpt
loop
orl
bnd
cmp
pop
nop
or
dec
xorl
push
xor
mov
jns
lds
stos
jp
add
out
lods
add
cmp
popf
stc
popa
jb
pop
or
push
nop
pop
and
insb
stos
insl
push
pop
xchg
inc
inc
pop
and
fwait
das
adcb
jp
mov
imul
stc
or
std
sbb
mov
faddl
push
pop
mov
pop
xor
addr16
add
outsl
lcall
push
adc
jmp
dec
repnz
xlat
loopne
call
add
fnstsw
sub
mov
and
das
andb
push
sub
xlat
imul
shld
daa
mov
mov
pusha
xchg
sbb
mov
or
sbbb
push
dec
imul
jecxz
call
mov
xor
xchg
add
mov
mov
test
in
mov
inc
and
and
inc
mov
cmp
mov
adc
add
pop
or
mov
xor
mov
cmc
xchg
push
push
mov
mov
mov
popa
cmp
fdivrs
test
push
cld
or
or
fldcw
pop
cmp
das
inc
pusha
mov
add
push
sub
push
rcrl
xor
arpl
jecxz
mov
mov
popa
mov
pop
stc
jmp
or
or
mov
pop
je
bnd
in
sbb
add
xor
mov
xchg
push
jp
loopne
lea
dec
or
bound
xor
ds
call
mov
add
dec
icebp
bswap
ret
inc
dec
add
testb
add
repz
mov
cs
rcrl
loopne
adc
pop
fdivrs
shlb
sbb
xor
or
jmp
dec
mov
cmp
dec
pushf
sbb
lock
adc
adc
movsb
pop
jl
mov
push
xorb
adc
pop
loopne
lahf
imul
pop
push
jl
clc
pop
xchg
mov
cli
mov
test
dec
pop
gs
xchg
ret
xor
in
fbstp
lea
xchg
inc
clc
mov
and
movsl
xor
or
loopne,pt
add
loope
call
std
add
jge
fldt
lds
std
mov
hlt
loop
add
popf
jbe
mov
adc
mov
hlt
xor
add
repz
addb
or
or
jmp
loop,pt
dec
mov
add
jbe
out
daa
dec
push
xchg
inc
rclb
push
xchg
pop
mov
adc
xor
std
and
inc
or
mov
inc
fmull
mov
add
mov
sub
mov
andb
jmp
xor
adc
jbe
mov
sub
xchg
jno
daa
xlat
in
xor
push
push
dec
js
addl
dec
mov
adc
dec
mov
mov
push
ret
negb
loop
pop
inc
and
add
mov
mov
test
dec
fwait
ret
mov
je
inc
xchg
dec
sub
add
mov
les
jmp
mov
mov
add
das
int3
not
ds
stc
add
sub
or
in
into
add
sti
inc
pop
sbb
test
call
push
test
int3
mov
jl
and
sbb
popf
mov
sbbl
dec
mov
ret
popf
dec
outsl
leave
or
sbb
out
icebp
mov
or
xor
test
jmp
stc
enter
push
in
stos
enter
adc
aas
das
jns
ds
insl
fadds
mov
ret
push
mul
pop
xchg
call
pop
in
inc
lahf
movsl
sbb
adc
pop
leave
add
xchg
pusha
out
xchg
nop
xor
movb
aam
rorw
sub
mov
orl
jl
cmpb
ret
adc
add
ss
mov
popf
fisttpll
and
add
aam
movsb
jno
xor
sub
call
push
add
jge
jl
orb
pop
rolb
faddl
mov
mov
out
push
cli
xor
test
inc
or
add
add
sub
cmp
pop
test
sub
push
inc
int
adc
movlps
in
outsl
mov
mov
adc
xchg
jle
fs
xchg
sbb
popl
sub
sub
pop
nop
cmp
ja
and
mov
add
add
ss
or
xchg
add
mov
jmp
das
pop
inc
inc
push
nop
clc
cli
xchg
loop
bound
cmp
les
xchg
decb
mov
mov
add
sti
jmp
add
popa
sar
xor
repnz
pop
aaa
lods
pmulhuw
and
fldl
scas
loope
and
xchg
adc
movsb
pushf
xchg
fidivs
add
jmp
add
fs
cmp
pop
sub
fidivl
xor
mov
addr16
xchg
pop
stos
outsb
add
push
sbb
or
shrb
nop
in
outsl
shlb
pushf
add
jne
dec
jb
xor
adc
stos
or
mov
test
mov
test
mov
ret
sub
xor
add
pop
dec
bound
jb
push
or
mov
xor
cmp
cmc
or
mov
xor
paddq
addr16
add
cltd
aaa
push
and
popf
adc
lods
imul
mov
dec
mov
pop
jmp
lcall
das
adc
mov
daa
push
pop
and
jno
roll
lret
xchg
mov
sbb
js
dec
enter
sti
add
and
xchg
pop
pop
jl
dec
fldl
addr16
data16
cmpsl
fnstenv
cmp
mov
lock
and
and
sub
sub
and
pop
and
repz
shll
popa
data16
les
add
sahf
js
push
mov
or
jnp
and
mov
push
xorb
adc
cwtl
imul
cmp
inc
stos
or
add
cmp
dec
popf
mov
mov
mov
movsl
and
and
test
xor
mov
aaa
cwtl
lods
or
xchg
andl
add
mov
and
xor
rcll
cltd
cmp
jno
orb
popa
pop
lret
loopne
shlb
inc
and
repnz
rclb
int
std
das
lea
lock
xchg
jnp
jo
mov
inc
xorl
push
mov
or
mov
std
mov
in
mov
xchg
lds
test
dec
clc
xor
scas
adc
ret
push
shlb
adc
jb
add
rolb
add
fwait
mov
clc
pop
push
cmp
rorl
movsl
pop
ficomps
pop
jae
add
mov
add
mov
xchg
adc
bound
loope
int
jnp
jns
sbb
inc
adcl
and
loope
jne
les
pop
subb
push
lods
icebp
mov
push
add
xchg
mov
mov
adc
add
adc
and
add
aas
mov
addr16
les
jns
mov
cmpb
and
adc
add
xor
icebp
pop
roll
add
mov
push
pusha
dec
sub
and
stos
add
mov
enter
leave
adc
cltd
inc
or
pop
pop
mov
daa
dec
adc
jbe
or
icebp
imull
cmpsb
xchg
loopne
xor
add
clc
sub
inc
lret
popf
or
pop
addb
jg
cli
or
popa
push
push
push
inc
cmp
loopne
cmp
mov
test
and
pop
nop
xchg
mov
push
popf
add
and
pop
rcll
inc
call
adc
jecxz
ret
aad
or
lds
gs
arpl
js
add
mov
aaa
andb
xchg
xorb
pop
and
mov
adc
jecxz
sbb
test
and
dec
pop
sysexit
aam
sub
test
fs
and
in
mov
mov
in
imul
sbb
push
dec
push
out
loopne
pop
aad
outsl
cmp
cltd
shrl
stc
add
int
dec
jmp
ja
dec
fstpl
scas
sub
add
add
lods
xchg
pusha
sub
adcb
xor
inc
pop
and
test
mov
adc
shrb
sub
push
xchg
xor
push
add
sub
and
enter
xor
std
jp
dec
insb
add
push
jne
pop
mov
pusha
push
inc
push
js
ds
mov
adc
fiaddl
in
hlt
mov
adc
push
xor
sub
jle
inc
jg
out
or
pop
push
push
or
out
movsl
adc
sub
cmp
add
in
popa
xchg
mov
xchg
add
cmpsl
jae
jo
pop
or
test
push
out
jnp
cld
cmp
mov
rorl
lock
in
fimuls
adc
popa
or
add
mov
mov
lock
push
xor
or
inc
lcall
push
fnstsw
dec
adc
pop
nop
push
out
fnsave
loopne
fs
loope
sbb
sub
and
pop
adc
rclb
cltd
scas
sarb
xchg
sbbb
lods
cmovl
xchg
in
or
push
cld
subb
pop
dec
dec
jge
dec
icebp
mov
inc
adc
inc
mov
mov
cwtl
movl
inc
mov
rcl
add
and
xchg
pop
in
roll
mov
js
adc
and
xchg
pop
sub
sbb
mov
leave
adc
mov
js
or
call
cmp
inc
std
pop
xchg
xchg
sub
inc
or
adc
xchg
pop
push
mov
mov
mov
aam
loop
mov
jecxz
sbb
popf
push
adc
mov
push
mov
sub
sub
rclb
adc
push
add
push
daa
adc
popa
xchg
pop
jns
push
pop
lods
mov
filds
cwtl
mov
jne
xlat
sbbb
sbb
jae
pusha
test
orb
mov
pop
push
sbb
in
lret
out
add
or
mov
dec
mov
sub
clc
sub
stos
dec
mov
jl
mov
scas
out
jg
ljmp
and
or
mov
rol
adc
outsl
sbb
xor
es
and
pop
adc
xchg
adc
sub
outsl
shr
das
cmp
nop
dec
adc
pop
ficoms
flds
or
pop
xchg
add
sub
xor
add
sbb
mov
mov
inc
add
dec
sbb
add
mov
cmpsb
sahf
add
out
cmpsl
add
inc
inc
stc
sub
cmpsl
fs
shrb
add
pop
add
loope
mov
sbbl
mov
jmp
add
stos
push
daa
fiaddl
nop
cmp
sub
shll
xchg
xor
cmp
adcb
out
add
jl
jmp
xlat
mov
add
adc
int3
xor
pop
xchg
inc
or
leave
sub
adc
sub
mov
add
sub
ljmp
pop
mov
insl
repz
mov
pop
or
in
popa
jp
ret
shr
movsb
xor
or
xor
pop
adc
les
dec
and
test
daa
push
iret
xor
rolb
movsl
cmp
cmp
ljmp
jge
push
scas
add
sbb
loop
jo
je
inc
cs
cmp
mov
add
push
pop
fbld
cmp
adc
xchg
dec
inc
add
xchg
sub
mov
xor
dec
je,pt
sbb
insl
pop
jno
or
sbb
fildl
push
dec
sbb
or
pop
call
fs
push
inc
mov
jb
jno
add
adc
inc
xchg
data16
shll
or
sbb
adc
pop
mov
and
xchg
lcall
add
add
or
xchg
add
mov
pop
bndldx
push
test
out
adc
nop
add
das
nop
leave
jae
jo
xor
in
andl
cmp
stos
leave
scas
sub
or
and
jmp
mov
and
cld
fldl
pop
mov
inc
mov
push
sub
pop
xchg
sub
outsl
lds
sub
jo
sbb
call
int
pop
nop
cltd
cmp
cwtl
cmpsb
xor
mov
push
imul
add
push
lods
lret
inc
ror
xor
je
subl
inc
sub
fistpl
mov
mov
mov
and
add
sub
cmpsl
inc
gs
mov
in
jno
dec
dec
xor
fimuls
cmp
movsb
nop
lods
pop
and
dec
clc
rcll
and
sub
jae
shlb
and
dec
adcb
cmpsb
add
cmp
icebp
or
sub
add
jmp
std
mov
aas
int3
add
sub
fadds
int3
fimull
add
dec
cli
les
sub
xchg
dec
dec
arpl
cs
mov
inc
inc
aas
movsl
ds
pop
imul
loop
sbb
xor
in
adc
pop
cmpsb
stc
stos
lcall
dec
cwtl
das
pop
inc
inc
add
mov
inc
out
fwait
mov
fldt
mov
add
mov
xor
hlt
mov
and
in
and
sbb
aam
imul
add
fmull
add
pop
pop
jle
or
add
std
sub
pop
jmp
sbb
sub
sub
and
add
jge
sub
jno
xchg
ljmp
cmp
pop
in
jg
pop
stc
mov
sbb
add
in
stc
lods
scas
xchg
lcall
add
or
sub
rolb
movsl
sysenter
adcb
int3
push
out
ucomiss
add
xchg
adc
xchg
and
sub
testb
jnp
jns
adc
add
xor
in
or
call
movb
cmp
xor
mov
cmc
sbb
or
popl
cld
sbb
xchg
imul
les
nop
adc
out
pusha
std
xor
add
cmpsb
stos
xchg
cmp
inc
add
loope
cmp
scas
dec
mov
ds
pusha
xchg
mov
add
out
add
aaa
mov
or
test
fwait
push
std
insb
pop
in
inc
xorl
out
loope
and
lock
or
cmp
pop
add
xor
andl
add
mov
sub
push
faddp
push
repnz
mov
cli
daa
das
jno
adc
stos
push
add
testl
jge
mov
jecxz
pop
popa
loopne
push
dec
pop
adc
mov
or
fistpl
sbb
test
or
mov
ja
or
adc
xor
shlb
sub
cmp
add
imul
dec
ret
outsl
clc
inc
mov
add
mov
jmp
mov
aaa
jnp
fcmovnb
inc
jecxz
add
cld
out
push
andb
jnp
cmpsl
add
popa
jno
and
or
mov
mov
push
pusha
mov
or
xor
maxps
pusha
fwait
insl
jno
xchg
adcl
stos
faddl
jmp
cwtl
cmpsl
add
or
mov
mov
mov
mov
push
mov
or
or
in
push
push
jo
out
stos
in
jle
xchg
arpl
or
pop
movsb
jmp
sub
out
arpl
cs
lret
push
adc
dec
push
add
rolb
xchg
pop
cli
insl
xor
imul
push
and
aas
dec
mov
dec
add
mov
aas
test
out
adc
pushf
mov
sbb
pop
pop
imul
in
popa
imul
adc
mov
pop
inc
xor
push
in
and
push
inc
mov
out
dec
pusha
cmp
cmp
mov
daa
popa
dec
into
fs
movsl
adc
clc
lock
add
cmp
icebp
shlb
es
sbb
loop
dec
clc
test
push
test
roll
mov
cld
pop
enter
popa
xchg
pusha
or
or
cltd
es
rcrb
adc
test
divb
add
in
push
arpl
adcb
jle
add
xor
orb
jnp
and
imul
cmp
add
sbb
arpl
xor
scas
outsb
mov
insb
xchg
fistps
call
pusha
pusha
lea
jp
sub
loope
test
adc
mov
cmp
or
sub
pop
stos
add
cld
test
popf
and
push
cli
lock
or
mov
add
add
pop
xchg
in
push
add
pop
cltd
sub
popf
mov
iret
mov
sub
data16
stos
rcr
jne
or
mov
mov
xor
mov
or
ja
xor
mov
cli
orb
mov
mov
out
mov
jns
inc
dec
xchg
adc
insb
daa
and
jb
mov
scas
call
cltd
pop
mov
push
inc
adc
cmp
movsl
testl
inc
mov
in
inc
js
add
jo
xor
mov
rcr
pop
sub
ja
sbb
push
imulb
test
add
dec
std
fsubrs
xor
insl
cltd
rolb
sahf
sub
inc
add
cmp
pop
out
adc
or
js
inc
dec
popa
mov
xchg
mov
popa
mov
rcrl
inc
mov
adc
adc
popf
imul
adc
int
out
test
jl
scas
adc
test
enter
mov
cmp
es
or
or
xchg
scas
dec
outsb
xchg
int
inc
xchg
pop
xor
fisttpll
test
test
cmpsl
rcl
cmovle
and
sub
push
insl
loop
rolb
or
push
in
es
jno
inc
sub
fists
aad
mov
xchg
jnp
mov
nop
and
cld
roll
xchg
sbb
mov
add
out
and
mov
fbstp
push
or
jp
fwait
shrb
loop
dec
inc
and
cmpsl
arpl
cld
lods
dec
jp
mov
fdivrl
repnz
mov
call
rcr
test
pushf
jmp
xchg
mov
push
jno
add
aam
scas
pop
pop
stos
mov
push
xchg
outsl
outsl
or
ja
add
stc
call
loope
insl
cmp
loope
xchg
push
ljmp
jg
sti
inc
and
pop
pusha
and
fimull
enter
xor
and
popa
dec
lret
imul
sub
mov
loopne,pn
mov
and
movswl
or
adc
adc
insb
icebp
cld
pop
xchg
and
in
or
inc
out
cli
pop
mov
sub
popf
sbb
nop
rorl
test
xchg
add
lahf
mov
dec
roll
sub
mov
std
mov
adc
shlb
sub
and
lods
cmp
adc
adc
pop
or
pop
popf
dec
es
stos
test
shr
or
cmp
lds
nop
push
mov
cltd
inc
imul
cmpsl
clc
and
dec
les
scas
xor
iret
inc
and
push
loop
dec
mov
inc
popf
aaa
insl
lahf
fwait
add
mov
dec
int
and
jp
add
cmp
popf
packssdw
sbb
inc
arpl
xchg
mov
data16
pop
inc
adc
dec
xor
das
les
pusha
fwait
stos
dec
cmp
and
pop
add
sub
jbe
inc
xchg
push
push
addb
sub
loopne
rorl
nop
pusha
adc
scas
jne
fisttpll
in
jle
cwtl
ja
adc
test
imul
xchg
mov
orb
add
dec
ds
in
lea
pop
addr16
mov
sbb
lock
mov
dec
mov
mov
out
push
cmp
rorl
mov
out
inc
xlat
mov
add
std
icebp
xchg
mov
or
je
lahf
inc
sbb
cltd
xchg
fidivl
mov
mov
push
dec
jo
sub
jle
inc
lods
mov
jmp
mov
sbbb
or
int
mov
aad
adc
mov
xchg
imul
hlt
loop
mov
std
outsl
dec
stc
int
sub
imul
decb
enter
mov
aas
fidivl
add
pop
mov
movsl
insb
add
aam
cltd
stc
mov
in
xor
push
inc
stos
pop
push
scas
inc
jb
mov
lods
push
pop
add
pop
mov
mov
or
jo
rorl
dec
mov
jno
cmp
dec
inc
in
pop
bound
add
sbb
sub
inc
sbb
mov
dec
and
sbb
insl
dec
imul
aaa
repz
lods
enter
ffreep
inc
sbbb
call
pushf
adc
mov
mov
mov
jmp
cs
ja
and
int3
add
in
cmp
test
jecxz
out
jnp
orb
scas
inc
scas
mov
daa
jno
imul
sub
and
jg
jmp
pop
daa
dec
sbb
sub
xor
mov
dec
rclb
ficomps
xchg
inc
jo
stc
cmp
xor
add
pop
add
loope
sbb
and
push
add
jb
mov
xchg
mov
repnz
in
xor
aam
aaa
sbb
jg
xchg
mov
sub
xchg
push
or
mov
sahf
inc
orl
lea
add
shlb
lock
lahf
xchg
in
fldt
add
insl
into
rcrb
inc
add
mov
cmp
daa
mov
sahf
stc
jmp
stc
sbb
clc
push
ss
imul
push
push
adc
sub
dec
imul
pop
out
sti
stc
jbe
push
ja
and
das
scas
ficoml
nop
jle
popa
add
pop
loop
jnp
sub
int
jns
add
out
pop
adc
loop
add
insb
jno
mov
cmp
out
inc
in
loope
fwait
push
orb
out
les
pop
mov
subl
mov
mov
adc
sbb
inc
mov
cmpsb
js
adc
repnz
sub
or
pusha
adc
or
add
xor
adc
int
cmpsl
cmp
cmpsb
xor
push
cld
fimull
and
add
cmp
ss
cmpsl
push
and
scas
inc
lock
xor
xchg
int3
xor
push
clc
loop
or
adc
dec
das
mov
arpl
mov
adc
insb
js
in
imul
dec
sub
dec
push
pop
cmp
int3
mov
mov
mov
mov
rcl
mov
lea
push
sub
mov
loop
call
xchg
adc
adc
xor
mov
cs
xchg
fcoml
fwait
mov
or
negl
mov
dec
and
add
pop
lds
cmpsl
rolb
pop
adc
das
outsb
in
push
sbb
ret
test
mov
popa
popf
sbb
mov
ret
sbb
cmpsb
das
je
ficoml
add
xor
negb
inc
xor
xor
in
add
xor
dec
fimuls
dec
inc
or
mov
test
lcall
into
cmp
dec
repz
jg
adc
sub
enter
sbbb
cmpsb
or
ss
xchg
mov
or
jno
outsl
jge
push
xchg
adc
call
test
xchg
je
inc
sbb
popf
push
jle
push
jo
push
pop
popa
data16
ret
add
mov
mov
imul
mov
xor
test
pop
les
push
rolb
imul
add
flds
ficoms
xchg
pop
test
lret
mov
pop
fwait
test
and
or
nop
cmpsl
adc
xor
cmp
fimuls
fcompl
popa
push
mov
push
fs
fstps
add
push
lods
add
xor
gs
pop
rcll
pop
dec
add
add
add
pop
or
repz
sub
mov
adc
and
mov
inc
ror
rolb
jnp
and
fcoms
jl
mov
imul
sbb
rclb
pop
mov
fnsave
sub
xchg
pushf
aaa
cld
pop
xor
add
and
lahf
push
add
push
mov
mov
shrb
sub
mov
xchg
addb
push
shlb
lcall
mov
outsl
pop
inc
push
cmp
add
or
mov
mov
pop
lea
add
xchg
mov
mov
mov
push
add
inc
sbb
mov
call
loopne
lods
inc
sbb
jb
or
cwtl
inc
icebp
cmpb
pop
cwtl
push
sub
pop
push
mov
into
jbe
sub
loop
pusha
stos
push
loopne
out
mov
fidivl
lahf
cs
lret
shl
adc
dec
dec
jl
leave
shlb
dec
cltd
aam
fucompp
in
das
mov
jnp
cmp
out
sub
shr
imul
inc
jb
je
popf
sbb
and
fimull
insl
mov
jle
or
in
movl
addr16
lods
les
call
pop
mov
pop
sahf
repz
lods
aas
and
lahf
fs
add
adc
push
mov
mov
mov
lods
testb
cmpsl
mov
shll
and
sub
push
mov
sub
lods
pop
lods
pop
mov
ja
imul
and
push
lret
adc
add
cmp
fstpt
fadd
sub
roll
adc
sbb
in
out
subl
pop
std
jmp
cmp
repz
pop
pop
das
push
pop
xlat
push
sub
sub
mov
inc
cltd
mov
xor
sub
roll
inc
in
jge
pop
adc
add
mov
nop
pop
mov
popf
sbb
mov
add
or
rorb
xlat
in
daa
roll
inc
jp
pusha
ret
dec
xor
xor
sbb
push
test
test
and
push
dec
sahf
cli
xchg
lods
push
ja
cmp
cmpsl
pusha
add
pop
jle
sbb
pop
in
add
orb
fldenv
icebp
cli
pop
dec
repz
jmp
adc
clc
clc
es
fadds
jne
sarl
int
jp
add
bound
leave
jl
cli
push
xchg
sbb
stc
xchg
jecxz
jo
addr16
mov
push
or
bound
jge
or
ret
jmp
sbb
dec
loope
jl
dec
sahf
jge
pop
add
xchg
or
sub
mov
sti
adc
dec
test
mov
movsl
aaa
leave
xchg
fisttpll
adc
and
das
nop
pusha
cld
mov
pop
and
in
pop
in
mov
adcb
xchg
movsl
pushf
pop
outsl
fbld
cld
cmp
jecxz
or
or
cs
stc
scas
mov
add
pop
int3
ret
pop
sar
add
sub
mov
mov
lahf
stc
jp
cwtl
adc
inc
sbb
mov
data16
ds
xchg
dec
lret
int
cmpsl
and
sti
push
bound
pop
pop
ret
inc
push
daa
popa
popa
fs
inc
lcall
add
mov
loop
jne
mov
xchg
inc
xor
fcompl
stos
scas
push
fstpl
data16
aad
mov
adc
or
adc
or
cld
push
ror
test
add
lcall
movsl
and
lock
sub
rcr
loope
jecxz
inc
fbld
sub
pop
lret
jo
or
add
in
xchg
jnp
clc
cmpb
sbb
lock
xchg
movsb
add
and
out
fs
xchg
dec
sbb
xor
aaa
mov
adc
jbe
popf
cmc
adc
push
mov
inc
fisttpl
add
pop
pushl
aaa
or
xor
and
or
pop
mov
push
push
inc
int3
pushf
pop
jecxz
fsubrl
xchg
sbb
jo
repz
mov
dec
and
leave
es
fmuls
cld
enter
test
mov
jge
inc
inc
bound
jbe
inc
adc
lret
add
add
mov
add
dec
jmp
sti
push
pop
or
pop
push
or
sahf
addl
sbb
mov
cmp
adc
cld
imul
mov
mov
adc
push
loop
pusha
inc
push
pop
sbb
popa
lahf
test
test
addr16
movsl
and
sub
mov
sub
xchg
push
xchg
pop
movsl
imulb
lcall
adc
xor
or
pop
adcb
fs
add
in
popf
inc
clc
popa
jge
icebp
inc
jne
cmpsb
xchg
or
mov
imul
mov
fwait
je
pop
adc
add
inc
push
in
mov
mov
popa
mulb
lds
stos
outsl
std
add
arpl
mov
lock
daa
jb
outsl
lods
xor
fists
fs
dec
idivb
cli
cmpsl
inc
push
xor
out
or
add
into
pop
sbb
xchg
in
movsl
push
cmc
push
xchg
mov
inc
fldenv
pop
dec
clc
loopne
or
aam
sbb
push
stc
leave
inc
sub
and
mov
xchg
add
push
mov
cs
cmp
add
insb
lds
rcrl
xchg
xchg
pop
xchg
inc
and
addb
xor
popa
cmp
dec
xor
add
popf
xchg
sub
mov
xchg
inc
xlat
les
frstor
popf
pushf
inc
imul
cmpb
add
mov
xchg
add
mov
mov
clc
dec
cwtl
rcll
cmp
and
xchg
pop
mov
pop
push
dec
xor
cmpsb
lcall
inc
adc
out
loop
pop
sub
into
insb
js
push
int3
pop
push
sbb
mov
jge
and
pop
rcr
lcall
imul
xchg
das
cltd
shrl
or
xchg
xadd
test
icebp
mov
test
push
mov
enter
sub
push
adc
or
or
jge
ret
dec
pushl
jb
jne
cs
mov
scas
ds
scas
pop
mov
xchg
pop
fimuls
sbb
mov
pop
fiadds
scas
inc
or
shlb
sub
add
jnp
mov
or
and
pop
subb
in
scas
and
ret
pop
pop
lods
pop
xchg
push
rolb
fdivl
jnp
cmp
aam
cmc
rcl
sbb
push
adc
jnp
out
add
insb
inc
gs
fs
pop
inc
fstl
xchg
test
mov
add
stos
inc
je
out
cmp
cmp
push
push
rolb
scas
mov
lcall
mov
push
icebp
fildl
movsb
loop
bound
lret
add
popf
std
sbb
mov
adc
enter
sbb
jg
test
xchg
add
scas
fmuls
cmp
dec
mov
fwait
cmp
popf
mov
push
daa
popa
aaa
jmp
out
xchg
push
hlt
sub
mov
mov
fcom
jae
cld
js
cs
mov
daa
sub
cmc
sbb
stos
addl
or
push
dec
pop
in
mov
xor
xor
dec
add
mov
nop
or
ret
lret
dec
and
pop
add
test
inc
jp
ffree
or
bound
lock
arpl
xchg
or
mov
mov
aad
adc
sahf
bound
xor
adc
jl
scas
pop
lods
leave
into
cmpsb
das
xor
cld
push
aam
xor
scas
xor
test
mov
mov
outsl
push
adc
push
ja
or
inc
test
subl
inc
ja
mov
mov
jns
andb
cmc
sbb
sbb
mov
sub
call
xchg
adcl
adc
xchg
or
cld
sub
add
mov
or
cmp
imul
stc
lods
shll
and
push
add
xchg
pop
mov
pusha
xor
sahf
aam
scas
imul
adc
das
sub
cmp
xchg
dec
stos
add
jp
out
add
add
das
shlb
dec
fcmovnu
push
and
ret
out
sub
sbb
and
push
mov
cwtl
test
mov
dec
jne
push
mov
cmpsl
xchg
mov
inc
ds
jg
in
xor
xchg
dec
push
mov
popf
aas
xor
fcoml
xchg
xchg
imul
adc
and
mov
mov
aad
mov
xchg
cmp
sahf
movsl
rol
pop
push
bound
xor
aad
xlat
sub
mov
adcb
pop
mov
add
fstpl
insl
mov
inc
sub
shll
add
daa
xorb
popf
fisttpll
pushf
movsb
inc
jge
sbb
testb
or
sub
cs
leave
fsubp
cmp
add
adc
ret
faddl
adc
dec
addr16
cmp
sahf
sarl
xorb
and
adc
pop
xchg
lods
adc
jmp
pop
sub
and
in
imul
xor
test
dec
popf
into
sub
iret
xchg
subb
pop
dec
decb
xor
cmpb
xor
cmp
sbb
imul
sub
or
nop
sub
mov
roll
add
sub
push
hlt
rcr
repz
mov
sbb
mov
sub
les
cmpsb
cwtl
dec
repz
mov
aaa
or
js
xchg
pop
or
xchg
or
fdiv
int
cmp
push
xchg
rcl
cmp
test
stos
arpl
roll
push
int
loope
aas
fs
inc
movsl
mov
dec
loop
add
lock
jl
add
and
xchg
xor
pop
scas
xor
hlt
inc
adcl
fcomp
div
mov
xor
daa
pop
xor
rcrb
bound
add
test
jnp
loope
xchg
je
xchg
jb
mov
stos
into
inc
adc
jno
sbb
testb
sub
add
lret
mov
and
rorb
je
lahf
bnd
in
push
cmpsb
sub
sti
mov
jl
enter
jne
add
shr
js
jp
or
call
push
int
loope
add
sahf
xchg
sub
pop
mov
push
mov
lcall
inc
sub
push
sub
add
ret
jg
sub
pushf
sbb
mov
loope
jp
or
pop
xor
in
sub
imul
into
test
pusha
sub
add
mov
jecxz
jle
outsb
mov
in
ss
add
mov
inc
dec
xor
daa
mov
add
or
shlb
mov
lea
repnz
mov
pop
jne
cmpsl
repz
mov
clc
incb
jo
add
roll
loop,pt
jne
xchg
mov
pop
divb
cmp
sub
cmp
fisttpll
add
jo
popf
movsl
push
mov
push
in
jno
mov
and
adc
stos
mov
test
loope
xchg
add
sarb
dec
sub
and
add
add
mov
mov
dec
fstl
nop
and
pushf
pop
mov
icebp
mov
aaa
andb
test
iret
mov
push
pop
sub
add
pop
push
adc
shlb
popa
cmp
and
inc
pop
add
pop
adc
pop
xor
cli
mov
mov
hlt
pop
push
rolb
and
sub
adc
mov
jne
jecxz
xchg
mov
fldenv
dec
push
mov
jmp
clc
mov
add
pop
es
xchg
aam
lea
mov
je
mov
adc
add
pop
mov
xchg
or
push
ss
mov
adc
out
jle
add
aaa
std
add
xor
arpl
xor
fldcw
shlb
pop
xor
adc
in
pop
addb
cmpl
inc
loopne
outsl
cmp
or
movsl
dec
fstpl
and
sub
mov
mov
popf
mov
pushf
mov
push
je
aam
mov
lahf
cli
adc
inc
or
das
and
test
add
test
mov
iret
nop
sub
outsl
dec
cmp
aam
jae
sub
jg
mov
icebp
add
out
nop
push
lock
pusha
negb
mov
sahf
inc
cmp
loopne
sub
jmp
inc
mov
pop
adc
stc
add
imul
lock
das
push
cmp
das
sub
loopne
decb
or
xorb
push
lods
sub
xor
add
jle
add
xchg
xor
pusha
fldt
jb
sbb
in
sbbb
sbb
pop
das
and
jle
aam
scas
pop
mov
inc
push
sbb
sub
cwtl
jl
adc
mov
daa
xor
ljmp
push
pop
aad
xchg
sbb
push
xchg
sahf
cmp
push
or
movsl
xor
mov
inc
es
cmc
pusha
dec
dec
mov
add
push
add
ja
int
or
add
pusha
cmc
mov
pop
movsl
aad
mov
mov
add
xor
mov
xchg
movl
pop
test
dec
gs
scas
mov
and
cmp
xlat
movl
fiadds
push
mov
stos
cwtl
nop
movl
inc
fsub
push
pop
push
add
push
adc
mov
mov
js
xchg
enter
je
or
cli
and
imulb
mov
xor
outsl
mov
push
adc
scas
mov
ds
subb
out
and
jno
adc
test
test
fiaddl
fwait
mov
adc
xchg
jne
out
dec
enter
icebp
mov
jp
jmp
cmp
das
mov
repz
shl
testb
mov
xchg
pop
add
inc
and
in
cmpsb
push
mov
xor
andb
mov
and
fprem
es
adc
add
dec
sbb
inc
dec
loope
cs
mov
xchg
sub
je
pusha
and
push
into
popa
add
pop
pop
jg
je
loop
xchg
jbe
fcoml
test
add
xor
mov
pop
push
sub
and
add
sub
lods
jae
add
mov
or
orb
or
sub
mov
pop
mov
rolb
pop
mov
add
scas
adc
cwtl
loopne
and
sub
lret
js
pop
push
adc
rcll
cmp
adc
mov
repz
cmpsb
pop
mov
daa
pop
aaa
adc
sub
xlat
or
jo
icebp
mov
ss
and
jmp
lcall
gs
rcl
pop
lret
dec
in
pop
or
xlat
popa
jns
inc
pushf
pop
add
dec
pop
and
sub
xchg
out
mov
rcpps
call
cmp
pop
sbb
into
push
push
orl
aam
and
lret
pop
xchg
dec
shll
lock
adc
pop
xor
pmaxsw
sahf
aam
testb
add
sti
mov
and
scas
jne
cmpsb
movsb
mov
out
aaa
fs
rcll
int
sbb
fcoms
add
dec
insb
outsl
test
lds
rcrb
pop
xchg
jmp
jae
jae
imulb
and
pop
ret
add
and
cmp
or
adc
popa
pop
jg
and
movsb
pop
jecxz
push
stc
pop
lock
mov
adc
out
in
les
or
popf
adc
iret
or
mov
negb
pop
js
mov
stos
jae
rolb
sbb
dec
std
inc
adc
outsb
mov
or
lret
inc
xchg
sbb
mov
jne
dec
push
xchg
dec
int
test
sub
shlb
stc
clc
adcl
jnp
xchg
add
mov
cmpsl
sub
xor
cltd
xchg
push
add
and
sub
sbb
push
pop
pusha
xchg
push
mov
pop
mov
loopne
sub
jbe
mov
rcrl
fs
add
push
dec
adc
in
sub
mov
out
insb
dec
mov
push
mov
add
iret
mov
call
sbb
cwtl
stc
sarl
lcall
in
test
inc
jae
ljmp
sar
and
pop
je
cmp
and
and
sbb
or
cmp
mov
pop
cli
push
adc
mov
xor
pop
repz
and
cmpsl
add
pop
insl
and
pop
jns
mov
adc
cltd
or
dec
jmp
cmpb
mov
mov
fildl
repz
and
lds
jecxz
dec
jecxz
xchg
mov
notb
mov
push
outsl
ja
jne
mov
push
jae
jo
pop
add
arpl
push
sub
push
cmpsb
sti
sub
cmp
add
jmp
outsl
xor
and
xchg
je
test
sarb
nop
pusha
not
shll
adc
pop
int3
push
or
repz
das
jbe
pusha
es
or
mov
xor
in
adc
push
in
mov
mov
shl
dec
and
in
push
out
les
leave
cli
inc
imul
jns
pushl
je
xchg
repnz
jp
repnz
daa
pop
dec
xor
aas
mov
jne
push
and
sbb
push
sub
movsb
addr16
mov
push
ds
orl
inc
or
idiv
sbb
xchg
mov
rorl
sub
and
lods
push
cmpsb
xchg
loopne
xor
fcomip
out
mov
ds
cmp
or
jne
aad
into
push
push
popf
rorl
clc
lea
bound
loopne
mov
int
inc
mov
decb
or
popa
and
dec
mov
push
dec
aad
jno
dec
cld
test
daa
dec
inc
add
sbb
lret
inc
inc
in
add
add
sti
gs
ret
push
out
pop
pop
pop
nop
lods
sbb
idiv
mov
ljmp
adc
jae
fists
xchg
mov
or
cs
repnz
repz
rcr
jno
xor
inc
rcrl
imull
mov
ret
add
mov
stc
and
mov
or
mov
std
rcr
outsb
and
pusha
cs
and
rolb
lea
sub
xor
aad
jbe
out
adc
in
add
add
dec
xchg
push
push
push
add
shll
hlt
pop
add
add
or
rcl
cmp
mov
adc
leave
add
push
data16
adc
pop
and
push
cmc
sub
popa
jbe
push
lret
js,pn
sub
or
push
int3
add
xchg
jg
data16
popf
add
push
out
xor
jmp
sub
add
loop
adc
inc
cmpsl
ficompl
push
shll
sub
jmp
jecxz
dec
stos
es
mulb
imul
fsubl
xor
mov
cmc
movsl
sbb
pusha
cltd
push
inc
xchg
icebp
mov
fmuls
adc
inc
cmp
repnz
bound
pop
push
dec
fstps
cmpsl
cmp
mov
pop
jl
and
mov
sub
cs
or
push
insb
sbb
push
sbb
xchg
fwait
pop
lcall
dec
vdivss
dec
in
loope
add
mov
mov
fidivrl
adc
fwait
pop
mov
jbe
fimuls
das
arpl
dec
pop
and
sbb
sub
push
ja
sub
nop
adc
adc
or
jp
out
mov
jb
mov
dec
mov
xor
and
test
mov
add
mov
adc
andl
sti
call
cmp
cwtl
or
test
fcomps
je
cli
lcall
dec
clc
jbe
mov
adc
and
orb
ds
and
fs
sarb
daa
dec
jmp
in
aad
lock
popf
idivl
sub
mov
jle
xchg
xor
xchg
cmp
adc
xor
mov
sub
aas
mov
or
mov
int
pop
jmp
add
arpl
pop
lea
adc
cmp
mov
adc
lcall
pusha
inc
sub
aam
test
and
ss
xchg
movsl
shrl
pop
xchg
leave
pusha
subb
dec
xchg
or
shrb
cltd
dec
cmpb
and
paddsb
enter
or
adc
or
push
cmc
push
pushf
xchg
sbb
mov
xchg
in
subb
dec
mov
cmc
sahf
hlt
icebp
add
mov
xor
sbb
bsf
push
jmp
sahf
rcl
daa
aas
jne
mov
lret
pop
fstps
pusha
push
pop
sbbl
mov
ret
dec
std
lods
mov
dec
out
fldl
in
or
mov
cli
push
jg
repnz
test
mov
addr16
jno
subb
adc
je
loopne
fsubrp
xor
andl
fisttpl
pushf
call
scas
or
sarb
cs
lods
cli
add
sti
das
push
cli
and
lea
add
pop
push
jle
aam
test
mov
fdivrp
pop
mov
test
xchg
jbe
shrl
imul
adc
sbb
add
jbe
pop
cmpl
jo
daa
daa
nop
stc
inc
scas
xchg
cwtl
xchg
adc
pop
dec
notb
or
call
pop
ja
xchg
rolb
jbe
pop
pop
test
pushf
outsl
nop
rorl
add
out
test
dec
mov
pop
das
popf
add
push
das
out
roll
sub
xchg
mov
and
mov
lea
lock
mov
jo
jecxz
loop
sub
aad
repnz
add
data16
jl
fildll
dec
add
xor
repz
lret
jle
xchg
in
scas
icebp
aam
pusha
jns
lret
push
popa
les
ds
pop
dec
mov
xor
mov
in
or
mov
cmp
sbb
or
lock
fcomps
sahf
mov
std
mov
stc
pop
mov
andb
leave
mov
sbb
and
pusha
add
in
cmp
add
dec
pop
in
loope
add
push
pusha
sub
iret
sti
dec
push
and
cmp
adc
jl
jecxz
or
jo
jno
pop
mov
dec
xor
pop
push
popf
ds
inc
pusha
push
popa
popf
mov
xchg
adc
out
aas
or
sub
test
adc
cs
push
repnz
mov
dec
mov
add
and
and
stc
xor
ror
add
mov
movsb
or
jl
jmp
pop
dec
pop
xchg
faddl
jmp
das
lcall
aam
pop
pop
xor
les
lret
dec
sbb
sbb
and
testb
fs
loope
sub
sbb
ficoms
or
mov
mov
repnz
jle
inc
adc
pop
xor
push
mov
inc
lret
sub
push
xchg
push
jle
das
mov
test
les
cmpsb
mov
je
push
pop
sub
jnp
jo
push
adc
addr16
push
push
pusha
xor
mov
jl
xor
dec
sbb
xlat
sbb
loopne
push
jmp
test
add
lahf
mov
adc
xchg
mov
sub
mov
popf
mov
xchg
pop
sbbl
mov
push
or
or
inc
mov
mov
xchg
sbb
xchg
loopne
mov
xor
sub
ficoms
jno
dec
mov
adc
jmp
out
cs
call
cli
and
mov
mov
xchg
jbe
jmp
clc
pop
icebp
and
daa
loop
in
jle
add
adc
lock
mov
shl
sbbb
add
pop
push
jecxz
fsubrl
xchg
nop
mov
rolb
test
dec
mov
lahf
adc
adc
push
stos
mov
xchg
pop
or
mov
cs
pop
inc
xchg
fcmovnu
and
fsts
push
sbb
or
sbbb
lea
and
inc
fiadds
push
leave
cltd
push
int
bound
out
imul
pop
lea
mov
test
shrb
scas
or
xor
xchg
xchg
adc
jne
mov
outsb
mov
mov
subb
jecxz
pop
adc
mov
cmpsl
jae
pop
sahf
popl
mov
movsl
push
movsb
add
xor
add
out
or
rcr
and
jg
outsb
scas
lock
sub
dec
mov
popa
daa
cmc
stc
inc
mov
in
xor
and
fsts
mov
into
dec
mov
aad
dec
jns
jno
jge
ret
xchg
rolb
sub
int
rorb
test
xor
push
sbb
pushf
mov
xor
neg
mov
push
mov
fwait
inc
inc
sbb
pop
add
shrl
pop
call
roll
pop
cmpsb
push
sub
mov
call
adc
sbb
or
and
mov
addr16
jl
cmpsb
das
and
pushf
and
roll
xlat
inc
fwait
cmpsb
inc
enter
push
mov
dec
pusha
in
push
ret
movsb
cmc
xchg
sub
dec
add
and
cs
cmp
add
pop
es
flds
imul
push
jmp
mov
hlt
jmp
insl
lea
aaa
push
adc
mov
adc
pop
cmpsb
pop
mov
xor
lock
test
dec
icebp
and
cmc
in
and
inc
es
mov
js
je
out
jb
lds
fnstenv
mov
sbb
pop
cltd
not
sub
test
pop
mov
mov
lock
sub
std
ljmp
das
xor
cld
pop
out
clc
add
mov
xchg
adc
scas
add
xchg
add
mov
pop
adc
mov
loope
js
xor
xor
and
das
icebp
mov
popa
sub
fwait
push
sahf
jle
xor
and
or
es
mov
mov
pop
jns
xchg
mov
mov
xor
mov
jnp
jmp
mov
in
jle
imul
sti
rolb
out
sbb
xchg
enter
mov
and
xor
xchg
add
xor
sub
fcoms
pop
ss
xor
mov
into
imul
cld
mov
add
shll
mov
pop
jl
rcr
mov
push
or
sub
mov
das
push
xorl
inc
and
mov
cmp
sbb
daa
adc
mov
test
movhps
fcompl
push
sbb
in
mov
sub
out
mov
mov
ret
mov
iret
ljmp
es
add
data16
pop
lea
ret
addb
fdivrs
enter
dec
xor
inc
movsb
jno
xor
in
sbb
add
mov
cmp
lods
test
icebp
out
dec
scas
lods
mov
movsl
call
shll
xchg
dec
subl
add
fisttps
aad
call
out
in
and
or
fisubs
inc
xchg
les
or
pop
or
sub
and
add
or
das
fnstsw
inc
jp
jns
mov
jp
and
mov
lret
sub
outsl
dec
pusha
out
loopne
mov
dec
in
call
xchg
jmp
fwait
mov
inc
imul
in
bound
fwait
inc
aas
adc
or
inc
data16
lods
jno
std
add
mov
push
sbb
jo
lea
fwait
mov
in
or
jp
add
mov
sbb
rolb
add
push
sub
xchg
sub
xchg
fdivrp
addl
lods
les
gs
outsb
sarb
fisttps
fcmovne
cmpsl
fwait
pop
mov
sub
push
das
adc
sub
jmp
mov
jbe
fiadds
dec
ltr
mov
iret
dec
mov
jmp
jae
push
in
es
out
mov
mov
test
subb
cmc
dec
pop
test
cmpsl
pop
pop
mov
in
cltd
mov
and
or
in
fldenv
ss
iret
negb
aad
imul
mov
mov
push
outsl
pop
das
test
dec
jmp
lea
into
pop
adc
divl
push
push
enter
jg
jo
stos
inc
fbstp
cld
aas
xchg
in
jo
xor
push
lock
sub
pop
fists
pop
mov
mov
mov
pop
push
adc
orl
pop
cmp
push
adc
mov
mov
shlb
in
gs
push
dec
pop
testb
adc
mov
mov
adc
dec
mov
shlb
push
sbb
call
xor
sub
shlb
adc
jmp
sub
repz
mov
jno
das
icebp
or
addr16
fildl
data16
jl
fcoms
or
pop
jo
mov
repnz
push
push
nop
jg
icebp
adc
jge
repnz
in
lret
gs
bound
stos
dec
test
pop
add
push
inc
sbb
shlb
push
push
mov
mov
mov
iret
mov
test
pop
in
mov
adc
xchg
scas
mov
add
into
push
aas
or
add
lret
lret
cli
clc
dec
xchg
in
push
xchg
xor
movsb
push
scas
imul
mov
cmp
or
popf
sbb
fildl
xlat
fs
mov
sbb
test
or
not
add
pop
or
jl
pusha
das
xchg
add
lds
pop
push
outsl
shld
mov
pop
xlat
lret
sbb
sti
lcall
jns
and
dec
mov
and
jl
sub
mov
or
aas
pusha
mov
test
fisubs
shrb
jmp
inc
popa
add
inc
shrb
mul
mov
xor
popa
shrb
rorb
ret
imul
dec
lock
mov
add
scas
push
mov
scas
push
mov
inc
xor
and
hlt
pop
inc
mov
xlat
or
add
fstpl
adc
aad
mov
daa
push
sub
dec
dec
xchg
pusha
xlat
add
adc
leave
adc
xchg
rclb
pop
xchg
scas
stos
popf
push
in
dec
popa
loope
and
repz
add
les
std
add
pop
adc
xchg
sub
mov
sbb
sub
rorl
add
loop
inc
lds
adc
mov
lahf
mov
and
mov
inc
mov
mov
dec
jo
xchg
fiadds
addb
test
add
fcoms
sbb
loop
insl
mov
push
xchg
add
fiadds
xchg
ja
lahf
xor
fwait
adc
push
repnz
subb
jmp
sbb
inc
addr16
pop
xchg
mov
shr
mov
cld
repz
mov
dec
sbb
sarb
pop
in
test
push
pushf
sub
faddl
jbe
xor
inc
nop
lahf
dec
mov
add
test
adc
notb
addr16
jmp
sub
pop
add
icebp
add
dec
in
add
aas
iret
outsl
into
mov
inc
bound
fildl
push
jb
sbb
mov
filds
mov
mull
add
inc
pusha
mov
mov
adc
aam
testb
xchg
mov
ret
and
ja
add
dec
jnp
add
shr
fwait
add
mov
xor
cmc
inc
xlat
pusha
add
and
ds
loop
push
sbb
arpl
add
fidivl
adc
stos
xchg
add
outsb
jns
ror
out
add
sbb
pop
dec
loopne
shlb
add
lret
add
adc
imul
push
jmp
daa
mov
push
gs
or
push
popa
je
mov
pop
push
mov
push
xor
sub
jae
add
xchg
mov
das
dec
sbb
dec
inc
xchg
repz
sbb
cmp
in
mov
pop
rcr
loop
push
jge
add
out
jbe
call
xorb
sbbl
shlb
xchg
dec
xchg
xor
xchg
mov
nop
arpl
loope
xor
mov
rorb
fbld
push
test
mov
adc
mov
scas
mov
add
xor
push
mov
lahf
add
les
movsb
aaa
inc
ficompl
pop
das
mov
add
add
pushf
bound
xchg
add
in
cs
xchg
add
add
flds
inc
mov
mov
add
xor
subl
pop
fstpt
idiv
add
jbe
popf
jbe
rclb
sub
push
addr16
xor
fistps
pshufw
inc
jge
or
xor
incb
nop
stos
adc
xchg
loop
dec
popf
push
add
aas
fisubl
bound
pop
in
add
sahf
xchg
xchg
cmp
or
aad
cmp
lods
adc
mov
fsubrs
xor
out
stos
pop
ljmp
mov
cltd
sbb
add
add
je
mov
sbb
xlat
dec
out
icebp
and
and
movsl
dec
adc
lock
clc
je
imul
cmc
pushf
dec
lods
add
lods
shlb
sbb
inc
int3
fs
push
das
or
inc
jecxz
movsl
repnz
sarb
test
add
cmp
cmpb
mov
dec
sub
or
cmpsl
add
or
faddl
aaa
dec
pop
movsb
cmp
dec
add
mov
imul
cmp
xor
mov
into
xor
mov
or
mov
push
daa
mov
cwtl
cmp
int3
add
adc
pop
mov
mov
stc
pusha
lds
es
dec
scas
lcall
out
add
mov
andb
mov
adc
xchg
jl
pop
jge
push
mov
dec
jns
test
ljmp
dec
popa
push
clc
push
xchg
or
lret
mov
add
outsl
cmpsl
jb
push
jne
andl
stc
sub
mov
fdiv
cwtl
xor
xchg
push
inc
jo
cld
xchg
or
mov
or
mov
mov
pop
and
ja
jno
pop
mov
or
out
jl
subb
push
dec
push
sub
cmp
jecxz
scas
adc
cld
shrb
mov
mov
push
mov
dec
push
or
pusha
dec
sbb
push
mov
jno
shrb
xor
imul
cmpl
or
add
push
outsb
mov
cltd
movups
icebp
xor
jne
addb
fs
jl
sbb
outsb
inc
pop
jle
decb
in
mov
xor
add
imul
inc
jae
fists
dec
push
enter
inc
adc
add
push
jmp
lret
inc
int
fisubrs
scas
sub
cwtl
sbb
sub
shr
xorb
leave
pop
dec
fldl
mov
lret
sarb
mov
add
add
testb
ret
pop
mov
push
mov
push
cmp
add
inc
fimuls
lahf
cli
mov
sub
out
cmc
add
pop
add
cmovg
adc
mov
rcll
in
lcall
xor
pop
scas
shlb
mov
es
adcb
pusha
out
leave
push
sbb
js
ds
add
cwtl
rclb
add
sub
mov
adc
in
mov
out
mov
mov
lods
mov
movsb
and
in
inc
inc
faddl
jl
rorb
xchg
repz
mov
insb
add
inc
andb
stc
jne
rclb
cmpsb
jo
mov
push
jno
testb
pop
lret
std
or
xchg
mov
outsb
adc
jno
jbe
dec
mov
fwait
out
imul
xchg
inc
add
sti
or
lds
sarb
rcrl
sub
add
pop
inc
lock
xchg
mov
add
xchg
adc
sbb
add
int
add
pop
and
addb
dec
cmp
xchg
dec
gs
inc
int3
icebp
adc
enter
pop
daa
inc
ror
pop
xchg
cmp
xchg
mov
int3
aad
sub
pop
nop
out
push
xor
mov
mov
scas
jl
or
add
fcoms
enter
fwait
mov
mov
fadds
add
mov
stc
add
cmp
negb
dec
xor
push
fbld
es
add
and
in
add
sti
lcall
add
mov
addl
mov
popa
out
or
arpl
push
cmpsb
aas
xchg
sub
mov
fiadds
cli
cmp
mov
orb
lds
and
fstl
xor
xor
xadd
mov
loopne
imul
adc
filds
dec
test
mov
adc
jmp
hlt
adc
adc
or
jbe
add
mov
inc
add
aad
xchg
aaa
aas
cwtl
movsb
and
and
test
fcoms
mov
add
push
cmpsl
andb
push
push
cmc
bound
lret
cld
or
sbb
adc
shrl
push
push
dec
outsb
in
leave
dec
mov
testb
popf
movsb
pop
fisttpl
lret
push
dec
push
sbb
clc
ficompl
test
sbb
unpckhps
jns
leave
cwtl
xor
or
loopne
xchg
cmpsl
jno
or
jmp
push
sub
negl
ds
inc
dec
aam
sbb
inc
dec
out
pop
sbb
dec
sub
enter
pop
push
adcb
pop
add
cmpsb
pop
sub
pop
xchg
push
dec
dec
popa
xor
loopne
inc
flds
pop
jo
push
je
jnp
test
cmc
jmp
pop
mov
pusha
into
sub
lds
sbb
cmp
jg
or
mov
jns
adc
pusha
addr16
filds
les
outsb
mov
and
nop
cmc
insb
shl
push
jb
jle
add
cmpsb
ret
out
xchg
mov
add
int
std
jmp
add
sbb
jg
sti
mov
adc
sbb
cmp
sub
test
in
cwtl
add
dec
jnp
dec
pop
add
cmp
fimuls
pusha
jp
xor
add
lret
scas
aaa
mov
pop
push
or
iret
add
or
hlt
cmp
jmp
mov
jns
mov
out
xchg
jae
gs
test
xor
call
ljmp
rorb
loop
pop
add
or
insb
inc
push
xchg
inc
pop
xor
add
aam
or
mov
imulb
out
push
jns
mov
lock
mov
push
mov
add
sahf
daa
xor
sbb
sub
mov
imul
shl
xorl
in
out
jecxz
add
sub
lock
jp
pop
add
push
mov
mov
enter
cmp
packsswb
xchg
pop
xorl
mov
push
mov
sub
or
or
pop
jmp
stc
mov
adc
repz
dec
cmpsb
sti
inc
add
sub
or
fsubs
add
sarb
lods
test
jnp
mov
mov
shlb
cmp
jle
fnstsw
icebp
addr16
add
in
idivl
je
popf
lods
push
mov
push
dec
jno
loope
scas
mov
sbb
xchg
test
loopne
lcall
inc
fs
add
push
inc
lcall
cmp
mov
cmp
add
inc
xchg
and
inc
mov
idivb
fwait
and
xchg
clc
std
inc
or
rolb
cmp
pop
xchg
cmovs
cld
xor
repz
or
test
sub
clc
dec
test
and
rcll
mov
jae
jmp
xorl
inc
rcrl
pop
call
mov
mov
lcall
and
cmp
mov
add
add
cmp
mov
icebp
add
or
add
fwait
js
or
add
mov
jne
or
lea
push
jge
cwtl
sarb
lds
inc
mov
add
imul
mov
inc
or
out
adc
mov
pop
test
inc
sbb
mov
daa
cmpsb
xlat
jne
popf
push
mov
push
jp
das
out
mov
pop
or
or
or
js
add
pop
lds
in
lret
jge
test
pop
ljmp
into
arpl
sbb
mov
imul
fidivrs
out
icebp
fprem1
push
rcrb
mov
pop
xlat
imul
and
jg
dec
cmp
std
es
pop
add
das
outsb
fldl
mov
jnp
adc
stos
xchg
add
pushl
mov
add
mov
mov
adc
repz
add
shlb
add
int3
lds
test
adc
push
add
jo
in
pop
into
das
dec
xchg
jmp
xor
jg
mov
xchg
pushf
or
or
rcr
mov
inc
cmpl
pusha
cmpl
mov
sti
sub
or
bound
stos
xor
mov
cwtl
push
push
or
cld
mov
cld
pop
sar
sub
xchg
sub
inc
pop
in
fidivrl
call
mov
clc
jae
push
mov
xchg
add
cs
add
lods
mov
movsl
mov
xchg
adc
mov
sbb
popa
mov
divl
add
or
test
jo
or
xlat
jg,pn
repnz
pop
pop
pop
xor
push
dec
or
add
cltd
roll
push
or
repnz
sti
jno
and
fldl
sub
adc
sahf
das
imulb
or
fldcw
in
sbb
nop
lahf
subb
popf
lcall
imul
xorb
test
mov
out
pop
pusha
add
push
lret
popa
pop
mov
dec
mov
loopne
jl
push
jne
cmp
test
outsb
and
test
sbb
xchg
aad
fcoml
cmpsl
sub
test
shrl
inc
and
jns
xor
or
jmp
enter
daa
fldl
add
nop
mov
rorl
sub
das
sub
outsb
add
push
adc
jno
cmpsl
rcrl
add
xlat
clc
pop
jae
enter
mov
add
adc
loope
sarl
sub
sbb
push
nop
mov
pop
test
add
iret
cmovne
mov
pop
outsl
cmc
mov
push
aaa
mov
or
les
dec
les
cmc
sub
or
xchg
icebp
add
out
pop
add
mov
nop
xchg
pusha
mov
dec
popa
jne
call
icebp
movsl
loope
outsl
fdivrp
iret
pop
in
xor
pop
mov
fcoms
ljmp
imul
cmpsl
test
xchg
pop
test
mov
roll
add
push
xchg
scas
sbb
dec
cmp
lods
and
adc
lds
xlat
dec
mulb
jno
sub
adc
jns
xor
aad
mov
in
add
pusha
xchg
inc
xor
mov
fistpl
cli
inc
arpl
ret
mov
pusha
pushf
cmp
sarb
fldcw
pop
cld
sub
inc
push
test
add
clc
xchg
jb
sbb
dec
stc
orb
sub
sbb
popf
movsl
sub
cmp
inc
jns
rcrl
cs
cmpsl
and
loopne
aam
lods
shrl
into
inc
sub
pusha
adc
adc
sbb
mov
dec
rcll
in
xchg
push
pop
push
or
xorb
divb
call
or
std
and
add
pop
add
scas
clc
fwait
mov
sbb
ss
out
add
clc
stos
xchg
xchg
fstpt
rolb
cmp
push
push
shlb
adc
and
enter
call
daa
push
push
adc
mov
add
sti
subb
mov
mov
pop
fs
pop
push
stc
in
cmc
push
sbb
push
push
inc
ds
cli
mov
mov
stos
adc
addl
jmp
popa
mov
leave
pop
jmp
and
dec
fidivs
icebp
in
mov
pop
push
lret
jp
sub
mov
ret
add
sub
loop
pop
loop
lcall
loopne
sub
ja
hlt
sub
push
test
dec
sub
sbb
adc
in
loopne
or
mov
fists
mov
xlat
mov
or
push
sbb
sbb
add
popf
jmp
fdivp
or
das
in
inc
inc
loope
pop
sub
xchg
or
mov
bound
xchg
test
lea
daa
cmp
insb
movsb
ja
or
scas
pop
rolb
mov
sbb
xor
sbb
hlt
sub
bound
add
fisubl
enter
rorb
inc
or
push
jg
add
js
xor
jge
ljmp
hlt
mov
loopne
loop
add
sub
xchg
add
jmp
or
pop
jne
mov
sbbb
jge
lret
das
or
fistl
push
lea
imul
je
mov
stos
add
into
or
ret
lock
stos
jnp
or
mov
inc
xor
cmpsl
das
add
or
inc
pusha
mov
repz
sub
add
sbb
mov
iret
cli
push
aaa
mov
xchg
jb
pop
cmp
and
xor
lock
loop
cmp
mov
push
inc
adc
add
je
add
and
pop
add
mov
and
pop
inc
pop
and
mov
dec
les
xor
inc
test
fistpl
fildll
mov
or
arpl
rorl
ljmp
jecxz
add
aaa
mov
pop
cld
sub
mov
mov
sbbb
imul
add
sbb
mov
inc
pop
adc
jnp
or
cs
lret
inc
sti
cs
std
stos
xchg
xchg
sbb
pop
and
cmp
leave
nop
stc
push
out
mov
lods
aad
cmpsl
fdivl
icebp
mov
fcoms
movsl
repz
sub
fistpll
push
lock
bound
cmp
mov
jae
adc
lcall
imul
and
dec
les
fs
jecxz
dec
insl
adc
add
mov
mov
add
sbb
cmp
mov
inc
mov
clc
cmp
push
adc
mov
sub
das
loopne
gs
scas
shrb
adc
jmp
mov
add
shrl
add
lds
nop
ja
dec
xor
jo,pt
lea
pop
pop
hlt
fs
les
jg
jb
nop
jno
cmp
pop
sub
add
popa
addb
jno
pop
sub
and
lcall
cmc
fs
and
movsl
add
xor
or
jo
mov
mov
sub
int3
test
pop
add
xor
mov
add
aas
movsb
mov
add
mov
stos
add
test
jmp
les
push
outsb
mov
add
scas
jbe
push
mov
outsb
clc
stos
shl
mov
mov
popf
aad
mov
add
shll
aad
add
adc
lods
jle
adc
cmp
mov
pop
test
mov
push
xchg
xchg
lea
rclb
rclb
out
cmp
add
cli
add
and
xor
xlat
mov
ret
cmp
and
dec
xchg
sahf
cmp
icebp
lret
xchg
xor
or
jmp
push
gs
xor
in
cli
mov
daa
jg
push
sbb
lahf
fwait
daa
aas
mov
push
add
xchg
ret
ss
pop
sub
pop
xchg
push
and
ja
repz
cwtl
cmp
pop
add
mov
or
fists
pop
mov
xchg
cwtl
sub
iret
cwtl
fwait
sub
mov
xor
shlb
cmpsl
frstor
jge
mov
add
nop
andb
mov
divl
mov
shlb
ret
and
push
iret
mov
jb
inc
repz
add
daa
insb
lcall
ljmp
aaa
pavgb
sbb
pop
test
sub
jg
cmpsb
les
add
mov
cmp
mov
adc
push
sub
jo
out
in
fisttpll
cs
mov
dec
aaa
mov
jl
addr16
mov
data16
inc
rcrb
out
repz
sbb
mov
rcrl
clc
clc
inc
mov
dec
xor
or
mov
jno
adc
lock
test
mov
add
jo
add
inc
cli
add
mov
jbe
popf
inc
xchg
stc
popl
mov
je
mov
fildl
xor
mov
inc
insl
sbb
inc
jp
ja
xchg
adc
imul
sbb
stos
xor
or
hlt
adc
sub
movsl
nop
jge
incl
popf
loope
adc
sub
insl
inc
sbb
adc
mov
stc
imul
xor
int
xchg
icebp
test
dec
sbb
aad
fnsave
sbb
test
inc
dec
sarb
lods
mov
nop
xor
mov
stc
xor
rorl
imul
clc
clc
jle
xor
je
sub
incb
outsb
jno
mov
inc
or
out
push
pop
or
stos
shrb
jl
cmpsl
jle
mov
adc
jae
push
jmp
loopne
or
mov
jb
dec
pop
lock
or
pop
pop
stos
and
int3
ss
addl
xor
mov
pop
add
dec
pop
push
shrb
mov
jbe
pop
movsb
xchg
or
arpl
pavgw
daa
or
pop
sbb
add
pop
or
fdivrp
jne
mov
push
mov
mov
mov
sub
call
and
cltd
mov
add
mov
je
pusha
dec
xchg
pusha
sub
stos
sti
fsubrl
rolb
adc
mov
es
popa
and
and
inc
das
add
loope
popf
adc
daa
adc
sti
or
mov
arpl
mov
cmp
xchg
std
push
add
scas
or
loopne
push
mov
testb
fnstenv
push
fs
pusha
mov
jmp
dec
clc
cmp
pop
add
and
mov
call
cmpb
push
loope
add
stc
or
mov
pop
lea
daa
cld
stos
jp
pop
shlb
inc
dec
sbb
xor
adc
push
addr16
in
rcr
add
lcall
adc
push
push
pop
push
jns
cmpsl
or
jnp
aaa
lcall
add
xchg
pushf
jne
addb
test
add
push
jl
cmc
out
aaa
add
push
and
dec
xorb
pop
and
pop
data16
fmuls
enter
xchg
ds
inc
test
mov
loope
jecxz
repnz
not
lods
adc
addb
aaa
std
add
into
daa
mov
adc
pop
jmp
enter
int
movsb
test
adc
inc
add
pop
popf
pop
adc
add
in
jp
pushf
insb
mov
and
push
mov
xchg
mov
pop
mov
sbb
add
pusha
sub
test
popa
jmp
mov
loopne
loopne
add
pop
je
bound
push
int
loop
add
test
daa
mov
mov
in
push
insl
into
lret
cmp
stc
sub
adc
lods
inc
mov
cwtl
mov
jmp
jl
xorb
adc
out
jnp
pop
push
dec
inc
iret
xor
stos
jl
dec
add
cld
loopne
or
dec
jge
adc
adc
out
and
mov
lahf
pop
imul
add
repz
sub
jno
or
push
xchg
scas
outsb
les
xor
out
dec
inc
pop
dec
cmp
mov
push
sbb
aam
sbb
aam
push
dec
lahf
dec
ss
push
lret
clc
fiaddl
das
out
dec
lods
push
fistpll
out
mov
inc
add
ret
repz
pop
stc
push
xor
push
dec
mov
sub
pop
and
mov
xchg
pop
cmc
sti
gs
gs
pop
stos
jle
sub
cld
int3
dec
clc
dec
nop
and
ret
dec
mov
aam
enter
cltd
dec
xor
jns
push
mov
inc
lahf
or
call
pop
xor
dec
sbb
dec
lock
stos
testb
fnstsw
dec
cmp
or
inc
fcmovb
xchg
xchg
mov
inc
mov
jmp
ret
mov
es
add
sbb
cli
cld
addr16
lds
movb
leave
dec
shll
xor
jge
jmp
cltd
lock
add
dec
sub
xor
sub
mov
rcrl
je
in
add
dec
lret
popf
jecxz
xchg
inc
adc
popa
cld
mov
test
add
jbe
add
jbe
dec
sbb
iret
and
xchg
pop
dec
popa
xor
mov
dec
out
mov
cmp
add
inc
xor
pop
xchg
fiadds
jb
push
push
fistl
pusha
movsl
add
fists
orl
push
add
sub
rcrl
and
adcb
pop
cmp
scas
sub
jae
pop
and
jae
std
idivb
mov
jmp
icebp
cmp
popa
jbe
imul
mov
mov
ds
out
dec
jnp
adc
mov
and
jl
popa
loopne
cmovp
xchg
adc
dec
les
mov
shr
and
xor
lret
cmp
pop
cltd
cmp
or
jne
jbe
pop
pusha
mov
sub
loopne
pop
into
or
mov
pusha
or
fnsave
add
movb
adc
loop
xchg
or
or
pop
in
std
lock
cs
daa
cmc
xchg
mov
cmp
pop
cmc
cwtl
leave
pop
push
add
out
add
cmpb
roll
xchg
pushf
int
xchg
stc
dec
mov
das
inc
clc
in
jmp
inc
mov
push
sub
cs
jo
shlb
out
inc
pop
pop
rorb
sbb
and
lret
shrl
outsl
xor
loop
add
pop
xchg
sub
add
mov
dec
nop
cmp
jecxz
sahf
pop
sbb
dec
jno
jmp
mov
add
mov
dec
sbb
addb
lahf
lods
mov
pop
mov
movsl
cmp
popf
xor
scas
imul
push
mov
mov
xchg
mov
mov
bound
cmp
fwait
dec
cmpsl
and
jbe
pusha
xor
mov
dec
mull
mov
ficompl
out
mov
pop
push
jmp
insl
cmpb
scas
enter
mov
xchg
lock
aam
mov
mov
jb
and
and
add
mov
outsl
out
icebp
add
nop
pusha
mov
bound
xchg
push
roll
inc
inc
jns
push
aaa
pop
enter
adc
dec
aad
xchg
sub
cmp
jns
nop
push
ret
jno
outsl
mov
add
in
addr16
add
inc
dec
jmp
repz
inc
lahf
push
test
xchg
mov
rolb
scas
push
pop
addl
mov
pop
dec
jp
mov
or
sahf
faddl
jecxz
add
pop
mov
dec
add
cmc
das
pop
add
add
xchg
clc
and
mov
xor
and
test
and
scas
fistpl
addr16
add
iret
into
pusha
mov
mov
cli
enter
jle
movsl
mov
sbb
mov
jmp
test
adc
jmp
das
inc
push
repz
or
dec
mov
lcall
mov
dec
add
loop
dec
mov
scas
int
insb
add
and
sub
popa
mov
pushf
mov
push
sbb
sub
or
xchg
in
subb
adc
fcomp
sub
dec
iret
cmp
imul
push
sub
add
adc
inc
mov
add
push
sub
adc
popa
stos
dec
or
subb
adc
and
rcl
and
in
cmpsl
jne
aad
out
sub
push
mov
xor
in
mov
inc
mov
ss
sarl
inc
xor
and
xchg
xchg
and
mov
cmp
adc
adcb
cld
in
add
xchg
adc
into
or
or
fwait
xchg
and
sbb
enter
mov
sub
js
sbb
scas
mov
adc
ja
test
mov
or
inc
push
pop
ljmp
cwtl
mov
inc
aad
sbb
and
mov
clc
popf
ficoms
ja
jl
loop
and
mov
sub
pop
xchg
inc
add
test
fbstp
inc
jb
insb
cmc
jecxz
idiv
push
adc
cmpsb
stc
repnz
jmp
mov
add
add
xchg
lods
mov
clc
pop
and
add
js
cmp
sub
push
or
adc
es
xor
xlat
add
into
cmp
popf
sub
jne
imul
jg
bound
xor
sub
or
add
into
mov
sbb
add
daa
cli
cmp
fiadds
xchg
sbb
sbbl
xor
pop
das
mov
or
jmp
lods
pop
adcl
jle
pop
out
mov
sbb
stos
fcompp
rcl
push
or
into
data16
test
int
jno
test
xor
pop
xor
add
add
ljmp
jg
cld
out
stc
add
iret
sub
adc
add
pop
pop
call
lret
je
mov
cld
or
in
clc
cmp
sub
jo
test
mov
mov
mov
xchg
sbb
sbb
add
cld
sbb
dec
popa
fcoms
orps
int3
imul
insl
inc
loopne
mov
jns
cmpb
xchg
in
int3
loopne
loopne
test
xchg
cmpsb
xchg
cmp
sbb
subb
dec
dec
frstor
push
xchg
dec
movsb
add
cmc
and
into
push
push
sti
daa
pop
call
sub
clc
and
mov
jmp
fmull
or
adc
and
add
aaa
imul
pusha
mov
push
dec
xor
mov
push
jnp
ja
insl
mov
mov
pusha
test
pop
lods
jg
cltd
add
pop
pop
sbb
out
lcall
mov
imul
push
aas
divb
dec
out
jg
leave
nop
and
and
les
call
and
cmp
test
mov
cmp
cmp
icebp
mov
ja
sub
cmpsl
xchg
insl
stc
leave
ja
das
cld
fiaddl
popl
mov
call
sub
mov
sub
lcall
sbb
fmul
sti
cmp
daa
dec
imul
sbbb
jb
jle,pn
adc
cmp
ss
xchg
adcw
sahf
lods
xor
pop
push
es
jo
rcrb
data16
ficoms
out
ljmp
lods
cs
sub
cwtl
mov
adc
adc
cmp
add
inc
call
pop
mov
add
xchg
rcll
roll
sahf
mov
xor
es
adc
popa
mov
add
sub
lahf
loop
add
xchg
hlt
pop
daa
mov
add
outsl
and
in
mov
dec
jp
int3
nop
lcall
in
xor
fisubrl
pop
sarl
lret
ret
adc
mov
pop
adc
into
push
xor
push
mov
inc
jle
and
in
leave
aam
add
or
sbb
sub
and
sub
pushf
lea
add
ljmp
or
int3
pop
das
lcall
mov
sbb
mov
ret
cmp
mov
jns
mov
push
loopne
mov
mov
xchg
pop
xor
hlt
rcl
xor
add
sbb
dec
add
push
pushl
inc
adc
mov
add
out
push
inc
mov
aad
addr16
out
stc
xchg
lcall
test
enter
add
dec
test
fsubrl
test
sub
imul
movl
out
mov
inc
xorb
mov
in
fwait
xchg
rcr
in
jae
sbb
inc
or
mov
add
or
sub
aad
mov
sbb
das
aam
in
stos
popa
std
xchg
pusha
jae
add
inc
add
sti
lods
fwait
mov
mov
addl
aaa
mov
fwait
repz
add
fisubrl
imul
pop
jle
push
add
xor
or
mov
sbb
pop
sbb
jo
jg
jge
mov
jecxz
jne
iret
jecxz
xchg
adc
fcomps
mov
and
inc
repnz
sbb
mov
push
stc
xor
and
push
in
scas
jnp
add
add
bound
aad
mov
mov
rorl
cltd
sub
lahf
or
pusha
add
popa
jl
loopne
in
aaa
inc
or
test
imul
sbb
and
popa
fbstp
js
jae
aas
and
imul
lds
and
leave
and
push
pop
mov
jbe
push
jno
idivb
test
add
pop
roll
pop
nop
imul
cmp
aas
mov
sub
add
inc
negb
ds
pop
mov
pop
push
negl
out
mov
dec
xor
inc
add
aad
or
shl
mov
jge
push
pop
hlt
mov
and
dec
pop
les
xor
sub
out
clc
nop
aas
push
fiaddl
mov
mov
daa
fmull
pop
dec
push
mov
cld
dec
jl
or
jg
mov
or
sub
xchg
sub
pop
adc
pushf
lahf
sti
and
int3
xchg
popa
repz
dec
aad
pop
cmp
push
and
adc
and
sub
aas
dec
and
pop
daa
jbe
in
push
cmp
and
insb
add
push
jecxz
jo
jl
xchg
pusha
pusha
jecxz
call
jl
notb
addr16
dec
repz
dec
jbe
mov
dec
or
mov
dec
fcompl
dec
mov
inc
bound
fiadds
xor
pop
cmpl
inc
orb
mov
test
mov
je
adc
mov
test
push
add
stc
int3
or
and
mov
pop
lcall
lahf
cmpsl
cmp
add
pusha
xor
mov
gs
mov
ret
fildl
aad
test
movsl
xor
jo
xor
adc
xchg
add
jbe
jnp
insb
jbe
in
pop
out
enter
push
xor
aaa
pop
lret
ficompl
xchg
add
adc
in
movsl
add
shl
pop
cmp
test
jno
and
mov
mov
dec
lcall
jbe
jmp
ss
fdivs
mov
cld
mov
mov
into
repnz
cmp
xchg
in
cwtl
mov
das
pop
fsubs
inc
mov
dec
add
enter
jle
imul
movsl
fucomip
das
or
and
ret
inc
xchg
stos
cmp
lods
shlb
xchg
xchg
daa
cli
pop
xchg
mov
and
loopne
sbb
movsb
xor
push
mov
out
adc
sbb
add
xor
in
xor
xchg
inc
leave
mov
sbb
shr
aam
shrb
in
cmp
scas
icebp
mov
jmp
cwtl
cmp
dec
sti
pop
jnp
cmp
sub
jbe
int
push
add
cltd
inc
or
xlat
pop
jecxz
int
xchg
jnp
rolb
frstor
dec
das
cmc
adc
pop
push
daa
xlat
sbb
push
jnp
lahf
int
shr
jae
push
rclb
into
sub
enter
test
fildll
sbb
mov
mov
jmp
add
lds
inc
sub
push
jno
fisttpll
sbb
xchg
xchg
ret
das
or
xor
mov
and
icebp
pop
dec
mov
mov
mov
xchg
cmp
test
ficompl
cmc
sub
adc
add
adc
inc
rcr
insb
jo
sbb
pop
xor
add
fcmovbe
inc
enter
nop
dec
and
mov
popf
iret
mov
add
pop
sub
cld
movsl
das
fcoml
fldl
lods
pop
xor
push
pusha
add
or
pusha
sub
jne
cs
cmp
sbb
jo
mov
xor
sti
pop
sub
movsl
and
mov
addb
sahf
lods
aaa
add
cmp
dec
out
in
mov
ldmxcsr
inc
mov
adc
lea
push
jmp
dec
add
add
fbstp
imul
shlb
data16
stos
loopne
loop
add
popf
or
xchg
cmp
xchg
mov
je
pop
cmp
add
mov
subl
testl
mov
out
fsubrs
insb
xor
test
and
pop
cmp
add
es
imul
shll
adc
imul
insb
aad
leave
sbb
out
adc
out
mov
cmp
or
in
add
mov
add
push
addr16
sbbb
inc
sti
addr16
sub
mov
les
mov
or
add
xchg
pop
popf
sub
add
adc
jb
push
les
mov
das
cmc
push
ss
lock
sub
cmp
xchg
js
xlat
lds
xor
pop
ret
das
xor
out
inc
pop
sbb
push
xor
lea
pop
sbb
mov
pop
daa
jbe
push
sbb
mov
add
ret
shlb
mov
mov
mov
inc
xchg
ss
pop
mov
jno
push
adc
xorl
push
adc
stc
lret
into
daa
push
ja
cmpsl
mulb
jmp
mov
jecxz
dec
out
inc
leave
xchg
test
sbb
in
or
cs
mov
cmp
xchg
mov
sub
ljmp
jmp
jmp
pop
out
scas
add
push
mov
inc
add
in
popa
xchg
push
fisubs
pop
pop
mov
push
out
imul
mull
add
int
jne
sbb
xor
test
add
ljmp
pop
push
xchg
jmp
je
leave
xor
and
jo
jnp,pn
push
add
inc
clc
cld
jne
jae
adc
loop
shrb
add
clc
pop
sahf
fisubrl
call
add
jp
stc
xchg
imul
lods
or
icebp
rorl
divb
xchg
in
lret
cwtl
or
and
jl
cld
sub
inc
movsb
aas
pop
cmp
movzwl
push
rcrl
mov
jecxz
test
fs
xor
mov
lret
or
ljmp
enter
jge
push
add
enter
dec
sbb
sbb
std
negl
mov
les
sub
cmp
xchg
mov
mov
cmc
das
jns
call
xor
dec
test
roll
cmpsl
jne
cmp
mov
lds
cmpb
xchg
das
imull
stc
pop
test
subb
pop
ja
mov
jge
shrl
xchg
add
jg
jne
dec
imul
adc
fwait
adcb
sbb
pop
imul
or
pop
enter
mov
mov
xchg
cmp
mov
adc
out
add
aad
xchg
add
pop
stos
mov
movsl
pushf
add
add
mov
fdivrl
push
insl
pop
pop
sbb
jno
push
mov
scas
inc
adc
xchg
adc
dec
cmp
bound
jl
inc
push
add
mov
cmp
cs
scas
stos
jnp
sub
xor
jmp
mov
mov
xlat
mov
mov
mov
rcll
xchg
xor
pop
mov
mov
xchg
jp
xor
leave
cmp
fcomps
movsl
mov
and
dec
pushf
js
jge
pop
mov
mov
push
mov
dec
andl
dec
or
popa
cmp
pop
push
jg
sbb
ss
clc
js
jle
xchg
add
fisubrs
nop
push
aad
clc
pop
popa
pop
push
mov
add
nop
stc
sbb
aam
sbb
jb
clc
push
xchg
push
stos
cmpsb
push
adc
mov
adc
stos
dec
test
push
add
xor
xorl
out
mov
jge
cmp
add
mov
dec
imul
mov
sub
sbb
sub
shll
das
stc
inc
mov
pop
xchg
pop
imul
aaa
sbb
and
imul
aam
fscale
addr16
leave
jnp
push
pop
loope
testb
add
into
dec
daa
cltd
rclb
or
mov
sahf
sub
xlat
loop
push
pop
jmp
jns
pop
ss
clc
int
inc
ficomps
push
mov
dec
cmp
cmp
inc
jae
inc
test
repnz
cmc
movsl
sbb
imul
jne
and
xor
fisttpl
xchg
and
adc
dec
sub
scas
aam
xchg
xchg
aam
or
push
stc
mov
pop
cmpsl
dec
mov
pop
in
mov
inc
sbb
push
mov
int
cmpsb
orl
sub
add
mov
stc
test
add
ds
jae
loopne
dec
pop
aas
decl
lcall
mov
in
or
mov
fwait
jnp
xchg
fldenv
clc
pop
push
ljmp
daa
and
das
pop
sbb
das
hlt
xchg
div
addr16
or
push
adc
test
and
mov
add
shlb
sub
les
nop
and
add
repz
int3
loope
inc
fidivrl
jnp
dec
out
mov
ret
mov
cld
adc
xchg
std
xchg
pop
adc
shl
dec
arpl
sbb
add
shrb
and
sbb
cmp
popf
dec
hlt
dec
shll
sbb
fisubrl
popf
lds
ret
sub
pop
stc
sub
jb
pop
cld
or
dec
cmp
pop
pop
jge
ffree
lock
add
dec
and
mov
daa
cmp
fiadds
and
popf
jl
jmp
dec
fidivrl
sub
jecxz
adcl
mull
fucomi
jns
rclb
call
movsb
out
and
shrb
dec
sub
pop
add
add
popf
es
sbb
and
insl
adc
add
mov
leave
adcl
js
bound
inc
adc
mov
xchg
sbb
sub
add
movsb
icebp
sbb
inc
andl
add
in
add
mov
adc
or
push
jnp
push
leave
sub
cld
inc
faddl
jl
aad
mov
pop
mov
push
jnp
xchg
mov
pushf
push
pop
pop
mov
int
add
icebp
inc
and
adc
loopne
pop
push
add
punpcklbw
jbe
push
ss
adc
mov
sub
inc
out
and
jmp
mov
push
int
and
xor
push
stc
pop
pusha
je
inc
and
pop
lret
clc
jle
mov
jecxz
es
jge
notl
stos
pop
cmp
lods
lds
add
pop
mov
je
ret
push
mov
mov
cmp
push
pop
add
in
xchg
add
add
mov
jmp
mov
cmpsb
dec
push
ffree
mov
cmp
adc
stc
pop
xor
lcall
in
inc
dec
add
sbb
xchg
sbb
pop
or
int
and
aas
ret
pop
mov
cmpsl
je
mov
fidivrs
je
push
mov
loope
andl
adc
dec
test
orb
cmpsl
ja
sbb
int
push
hlt
aaa
out
add
and
out
inc
scas
sub
andl
add
shrl
nop
pusha
outsb
mov
jnp
mov
cld
pop
leave
adcb
aaa
add
sub
popa
ljmp
cmp
nop
mov
mov
cmp
lahf
ja
or
mov
insl
in
arpl
dec
jecxz
pop
sub
cmp
mov
enter
xchg
fnsave
fdiv
mov
clc
pop
cmc
shlb
ror
add
enter
jo
bound
add
add
outsb
sbb
fstpt
jecxz
pop
sub
push
cmpsl
jns
mov
cmc
dec
call
ficomps
mov
sub
mov
popf
mov
hlt
push
outsl
add
cli
jmp
dec
ljmp
inc
cmc
lods
mov
lock
or
out
mov
loop
pop
and
xchg
sub
inc
add
mov
xor
push
aad
mov
mov
cmpsl
inc
loop
jne
adc
imul
sbb
cmp
push
sub
dec
push
cs
inc
mov
sub
sti
push
and
and
inc
int3
xor
add
push
mov
fildl
lret
inc
and
sahf
dec
das
add
leave
add
leave
stc
icebp
push
mov
pop
fdivrl
push
mov
cmc
addr16
pusha
pop
imul
mov
fsubrs
or
popf
jne
add
nop
push
push
imul
aad
out
rcl
pop
bound
aam
pop
inc
cmp
test
push
nop
cmp
jnp
lret
jle
lods
pop
test
sbb
push
mov
in
mov
rcr
pop
cmpsb
or
sahf
mov
aaa
popa
sub
xchg
stc
inc
out
or
hlt
add
movsb
int3
pop
cmp
add
mov
mov
inc
jne
inc
icebp
sbb
das
or
add
or
pop
lods
jo
stc
add
or
in
dec
mov
inc
sub
mov
mov
xchg
in
cmpsl
or
filds
and
pop
push
sub
ljmp
jae
stos
or
add
int3
jns
add
cmp
addl
xchg
jg
cli
sub
in
sbb
std
xchg
andl
iret
mov
mov
lods
mov
inc
adc
mov
pop
inc
or
add
inc
cli
mov
sbb
or
pop
jns
sbb
gs
push
adc
push
and
sub
adc
mov
jg
das
xchg
imul
mov
scas
push
push
stos
sub
sub
test
add
jle
adc
cwtl
xchg
dec
mov
xchg
ror
dec
cmc
xchg
or
pop
je
repz
mov
add
add
jmp
cmp
mov
and
fistps
mov
out
push
adc
xchg
pusha
cli
mov
lahf
pop
mov
mov
or
inc
popa
push
cmp
xchg
cmpsl
loopne
add
xor
in
jns
inc
mov
xchg
pop
ficomps
xor
shlb
subl
movsl
pop
cmp
xchg
sbb
addb
sbb
push
int3
push
add
cld
jle
dec
in
test
les
mov
mov
popa
pop
pop
push
cmp
add
push
pop
xchg
mov
imul
bound
push
in
push
sbb
add
push
fwait
add
jns
cwtl
es
movsl
sub
out
push
xor
idivl
add
imul
add
mov
pop
sbb
jo
mov
mov
and
xchg
insl
into
outsb
cmpsb
jbe
outsb
and
mov
dec
clc
mov
sub
adc
adc
cs
add
pop
je
scas
fwait
adc
aaa
aas
jb
dec
mov
push
xchg
mov
sbb
push
adc
pop
out
mov
ret
cmc
xchg
outsl
jne
add
push
xor
pop
sti
push
push
mul
jns
cmpl
add
mov
cmc
gs
jge
movsb
roll
push
pop
and
repz
add
adc
shll
mov
jns
or
sbbb
and
aad
jbe
insb
sti
pop
sub
or
aaa
add
imul
in
inc
xchg
gs
scas
sbb
jne
sub
mov
pop
divl
jl
mov
push
mov
dec
or
fs
add
sahf
scas
insl
cli
lods
out
pop
add
arpl
pop
popa
fs
popf
or
xchg
sub
or
jns
clc
clc
hlt
jmp
dec
mov
mov
mov
ds
in
add
inc
lret
bound
mov
adc
xor
push
bound
jp
add
repnz
cmpsl
inc
cmp
lock
add
fcmovu
xchg
dec
pop
pop
jecxz
add
nop
leave
out
imul
mov
and
inc
aam
scas
pop
push
mov
sbb
cmpsl
inc
or
add
fsubrs
mov
and
pop
and
mov
jle
mov
daa
pusha
stc
addl
popf
add
mov
popa
mov
int
imul
into
pop
add
ja
sbb
and
xor
stos
cmp
jp
cld
out
mov
mov
fnstenv
das
sub
cmpsl
pop
imul
fisttps
mov
or
and
in
stos
and
pmaxsw
add
inc
popa
jo
mov
pop
cltd
sti
shl
mov
outsb
jmp
sub
gs
shrb
and
jo
mov
jge
or
mov
clc
out
pusha
mov
mov
mov
sub
mov
in
xchg
push
jp
inc
int3
and
sub
lds
xchg
sub
add
js
or
or
jns
movsl
ret
xchg
inc
dec
jmp
lea
dec
enter
mov
mov
sub
push
and
jbe
gs
push
dec
push
inc
pop
mov
icebp
mov
cmp
das
xor
fbstp
pop
idiv
movl
fisttps
or
mov
xchg
xchg
nop
push
adc
outsb
mov
test
das
jmp
pusha
test
or
iret
xor
jo
mov
movsb
cmpsb
or
sahf
pop
mov
das
xor
mov
push
mov
mov
dec
push
add
jp
jp
push
xchg
es
sub
xor
bound
adc
cmc
push
mov
int
adc
aaa
add
dec
outsb
das
mov
dec
add
add
pop
dec
jmp
pusha
add
adc
stos
mov
dec
jnp
sbb
mov
fs
pop
bound
fdivrs
mov
pop
mov
add
xorb
add
mov
mov
dec
xor
rcrb
mov
pop
adc
mov
out
sub
aaa
lret
mov
add
mov
jbe
pop
popf
mov
mov
cmp
enter
xlat
jno
gs
and
add
push
mov
dec
pop
pop
dec
iret
and
popa
xchg
int3
dec
sub
ds
pusha
xchg
dec
iret
mov
adc
sub
mov
jg
ret
dec
subb
popa
loope
and
sbb
pop
jbe
fcoml
rcrl
mov
or
pusha
imul
roll
das
adc
jge
add
jle
loop
sub
lds
das
dec
mov
cmpsb
sarl
or
xlat
xor
lret
jp
cld
push
aam
pop
sbb
aad
int3
xchg
rorb
adc
jle
sbb
shr
cwtl
jb
cs
push
call
cmpl
mov
xor
dec
loopne
roll
pop
push
int3
shrb
jnp
sarb
loope
test
xor
mov
mov
add
sti
add
iret
add
scas
jg
xor
mov
mov
mov
aaa
mov
xchg
stos
add
sub
inc
mov
in
lahf
test
rcll
test
pop
aas
test
mov
sub
ficoml
negl
pop
mov
movsb
sti
pop
mov
sti
mov
adc
mov
je
cvttps2pi
repz
add
sub
cs
adc
and
adc
out
add
mov
out
in
out
and
ret
aad
lahf
mov
and
push
sub
fiaddl
fidivl
add
pop
daa
xchg
jo
mov
xchg
mov
mov
testb
push
aas
mov
popf
xchg
jb
push
popa
push
jns
add
push
mov
push
out
add
adc
fists
stc
mov
in
clc
mov
inc
out
sub
jecxz
sbb
pushf
ret
mov
mov
xor
xlat
ds
push
mov
push
int3
pusha
add
and
fistpl
add
xor
clc
lret
es
shll
js
mov
sbb
xchg
push
inc
or
pop
iret
xchg
das
or
imul
int3
sbb
dec
and
andb
dec
xchg
int
hlt
add
inc
insb
je
into
daa
ss
mov
mov
pop
jg
sbb
jg
out
and
inc
sbb
inc
xor
popa
outsl
out
daa
jge
imull
xlat
push
mov
add
outsl
imul
add
mov
pushf
adc
xchg
lahf
push
xchg
test
lods
jp
jmp
jne
mov
test
xchg
cmp
add
rol
clc
xor
insb
cmp
cltd
push
in
mov
add
movsb
pusha
popf
adc
add
mov
and
and
cld
or
js
xorb
out
mov
leave
push
push
push
cmp
lds
mov
add
loop
neg
scas
push
movb
sbb
pop
and
test
xchg
popa
imul
test
mov
sbb
gs
aas
enter
test
mov
out
movsb
mulb
or
in
mov
adc
mull
dec
mov
adc
lea
inc
push
test
or
cs
add
dec
xchg
dec
scas
sbb
adc
sbb
jns
add
sub
in
add
das
into
sub
imul
xchg
ret
into
sub
stos
movsb
scas
jl
testb
add
loope
lahf
xchg
shrb
jge
nop
or
adc
mov
adc
out
roll
sub
iret
and
mov
inc
insb
lcall
dec
pusha
filds
fidivrl
pop
sub
testb
jnp
clc
js
dec
clc
test
fdivrs
xchg
push
add
cmp
mov
fucomp
aaa
call
jae
test
arpl
push
or
inc
int
cmp
es
rolb
ret
xchg
adc
aas
imul
sbb
out
jne
add
je
add
dec
mov
and
mov
jge
lcall
pusha
stos
add
addl
call
movsl
xor
lret
mov
in
xchg
sub
jl
jbe
cmp
scas
xor
scas
xor
mov
lahf
jmp
js
test
mov
mov
ret
insb
clc
mov
in
cmp
subb
mov
fisubl
push
cltd
fwait
imul
add
rcrb
push
fisttpll
std
jg
dec
inc
mov
sub
mov
mov
sub
mov
xchg
add
dec
cmpsl
loope
aad
fistpl
xor
loope
fdivrl
adc
repnz
mov
adc
xor
ds
xchg
xor
mov
inc
add
mov
add
fnstenv
add
lock
or
dec
movsl
sbb
mov
pop
addb
rorl
movsb
in
icebp
add
addr16
insb
dec
mov
add
scas
andb
jno
ljmp
inc
and
addr16
xchg
mov
lds
or
mov
cmc
cs
fdiv
shrb
fists
mov
js
pop
nop
cld
cs
pop
popf
and
push
imul
leave
push
or
shl
mov
je
push
and
outsl
jmp
jmp
push
mov
xchg
repz
cmp
dec
shl
out
sbb
and
les
sbb
out
add
jl
sub
cmp
xchg
pusha
sahf
sub
mov
std
cs
icebp
fildl
or
mov
pusha
adc
cmp
mov
mov
cmp
and
enter
out
mov
fisubrs
incb
mov
dec
adc
ret
ds
mov
xchg
mov
cmp
push
das
jl
cld
ss
mov
movsl
or
dec
mov
lret
sti
jae
ror
mov
sub
jmp
inc
ret
inc
cmp
or
mov
andb
mov
ljmp
sbb
push
pop
push
test
aas
cwtl
jne
test
out
cmc
adc
roll
mov
das
dec
stos
xchg
repnz
adc
les
je
jmp
lods
dec
mov
scas
popa
cmp
fs
in
pop
rolb
lahf
nop
cwtl
sub
pop
xchg
loope
xor
cwtl
or
out
fwait
push
pop
test
cmc
addl
frstor
jnp
test
imul
in
test
push
mov
pop
jae
xchg
sti
mov
mov
movsb
xchg
lods
leave
in
bound
add
in
lock
sub
test
dec
outsb
test
data16
jl
lods
into
scas
mov
push
jmp
out
outsl
popf
jo
icebp
mov
pop
out
repnz
cmp
mov
or
xchg
mov
jno
inc
mov
or
es
inc
inc
sti
testl
or
pop
mov
rcll
add
fldln2
cmpsl
dec
popa
inc
adc
test
les
push
mov
aas
inc
cmp
jo
add
cmp
and
jne
mov
outsl
sahf
push
sub
cltd
mov
xchg
lds
outsb
pushf
cmp
aad
jne
dec
xchg
pop
scas
repz
in
inc
leave
add
cwtl
add
add
push
and
repz
and
add
adc
fwait
ret
mov
mov
push
popa
xchg
add
push
cli
aaa
pop
pop
clc
mov
jg
inc
fisttpl
repnz
add
mov
sub
call
cmpsb
pop
sbb
add
test
das
ljmp
imul
and
sbb
sbb
jecxz
pop
mov
movsl
stos
loope
jae,pn
or
pop
sub
sub
cmp
xor
add
jbe
dec
adc
test
mov
sbb
and
shr
pop
sbb
mov
sbb
orl
add
pop
aam
movsl
pop
push
jo
mov
jns
xchg
push
cli
insb
fistps
int3
mov
xchg
test
call
push
mov
xchg
cmpsb
shlb
mov
push
xor
mov
push
cmp
lret
inc
sub
push
mov
iret
mov
aas
xor
nop
sbb
push
jp
and
sti
bound
jbe
sub
add
and
popa
push
adc
cld
add
push
inc
sub
jecxz
sbb
xor
mov
rcll
mov
xor
cli
movsl
and
lahf
push
dec
faddl
mov
shrl
mov
pop
adcl
filds
inc
ret
leave
testl
mov
mov
mov
inc
fnstcw
sub
std
push
mov
mov
sub
clc
sbb
sub
test
or
mov
mov
and
jns
movsb
add
xor
jecxz
movsb
scas
jp
add
test
jecxz
sbb
xchg
out
sbb
and
les
add
daa
add
pop
in
adc
sub
cltd
hlt
add
fistps
adc
das
clc
pop
inc
shlb
and
add
sahf
push
outsb
scas
sbb
pop
jmp
pop
xchg
inc
je
inc
sub
or
arpl
add
andb
pop
adc
jne
lods
in
add
jb
stos
or
out
pop
jp
xchg
jnp
shl
dec
lods
jecxz
push
mov
push
das
mov
ja
inc
sbbb
scas
loopne
std
sbb
out
leave
add
adc
xchg
iret
dec
adc
cmp
add
outsb
lret
adc
cmpsb
outsl
movsb
clc
out
push
add
jo
mov
add
jno
add
roll
out
sbb
lea
fs
nop
mov
fistps
pop
iret
roll
lock
stc
dec
push
fcompl
pop
rol
lock
repz
lods
pop
andb
cmpsb
or
dec
dec
mov
mov
push
jl
sub
fiadds
outsl
adc
mov
mov
mov
xchg
imul
aas
ret
push
inc
adc
push
pop
clc
xchg
mov
adc
pop
sub
scas
sbb
mov
or
jae
sub
adc
imull
jge
xchg
dec
pop
loop
rcr
dec
sbb
loop
mov
pop
sub
jnp
and
jecxz
pop
mulb
das
xor
rcrb
stos
sub
imul
fcmovnb
cmpb
adc
or
sbb
or
and
jmp
rcr
lods
jg
int
push
ja
loope
test
in
or
test
sbb
insl
es
repnz
mov
mov
aam
cmp
pushf
cmp
pop
cmpsl
stos
shl
dec
daa
or
aad
sbb
sub
mov
sbbl
ja
cmp
push
xchg
adc
mov
dec
sbb
repz
and
insb
loopne
loop
or
aad
push
pop
jnp
lods
pop
aaa
lahf
icebp
mov
and
rclb
inc
or
testb
dec
loop
aam
std
cld
mov
push
mov
pop
pop
cmp
fldt
sub
xor
adc
push
inc
cmp
leave
push
adc
fiaddl
adc
rcrl
sub
dec
fcomi
sub
and
lock
and
ja
mov
rcrb
mov
imul
add
ja
mov
fwait
pop
das
push
test
mov
jmp
jns
leave
push
mov
pop
sub
lds
mov
popf
jle
aam
pop
rolb
clc
jmp
loope
mov
jle
push
mov
xor
movsl
lds
mov
pop
xor
lret
mov
add
mov
sbb
ljmp
addr16
jb
mov
imulb
or
test
mov
test
jmp
adc
adcb
icebp
addr16
mov
popf
je
ficomps
sbb
dec
dec
ret
dec
out
mov
xor
add
jbe
mov
in
add
fstps
push
lods
xchg
orl
das
pop
hlt
dec
add
mov
ds
adc
mov
out
add
cmc
adc
jp
or
adc
in
sub
or
jns
pop
push
fnstcw
adc
and
popf
pop
cs
repz
mov
shll
jecxz
push
iret
mov
jne
or
mov
push
fs
leave
es
ds
or
out
out
sbb
pop
or
sub
xchg
mov
mov
add
adc
mov
adc
pop
sub
sub
and
aam
dec
inc
or
or
sub
jb
push
xchg
push
pop
xchg
mov
jmp
dec
dec
je
rcrl
push
stc
cs
stc
outsl
sub
dec
add
push
add
dec
lahf
sbb
mov
xor
or
shlb
jl
loopne
add
pop
and
jb
add
in
pmaxsw
push
mov
test
add
je
scas
test
mov
imul
pop
in
push
inc
sub
js
xchg
in
jmp
sbb
cmp
xchg
popf
mov
sub
sub
fadd
jb
sub
add
xchg
xchg
sbb
cmp
push
push
pop
stos
jp
sbb
pop
ss
mov
or
mov
push
out
pop
ficoml
cmp
jmp
loope
mov
sub
jnp
dec
scas
call
add
xor
cld
mov
add
inc
call
dec
jle
add
or
add
adc
pop
notb
push
sbb
jmp
xchg
pop
pop
ud0
dec
push
negb
popa
roll
orl
insl
add
or
adc
push
jl
push
add
pushf
inc
and
mov
inc
sbb
dec
dec
xor
add
pushf
mov
lods
sbb
add
dec
loop
nop
or
pusha
jo
xchg
aam
mov
sub
mov
loope
xchg
testl
push
pop
pop
push
jecxz
jl
fidivs
nop
icebp
dec
movsb
cli
lods
lods
dec
cmc
mov
xchg
cld
add
fsts
push
push
jo
pop
lods
insl
add
mov
xchg
mov
pop
push
or
mov
add
rclb
iret
push
mov
call
mov
imul
in
xchg
test
sbb
cld
add
negb
cwtl
jecxz
or
mov
mov
int
and
mov
xchg
and
icebp
mov
dec
mov
outsl
test
push
push
lock
int3
add
xor
lods
in
sub
test
push
dec
inc
imul
daa
sub
jmp
cmc
xchg
or
push
mov
leave
daa
and
adc
inc
mov
inc
xchg
jno
xchg
mov
dec
repz
pop
push
jno
push
push
jne
js
inc
fadds
cmp
pop
mov
push
leave
push
add
js
in
push
cmp
sahf
clc
cli
pop
sti
xchg
xchg
cmp
lret
add
in
out
add
mov
inc
add
inc
adcb
jne
test
dec
jns
ds
mov
sub
pushf
subb
push
into
idiv
clc
jp
test
dec
lcall
scas
fcoml
lods
add
mov
xor
add
rcl
stc
jp
into
or
xor
loope
xchg
or
and
pop
inc
cmpsl
loope
das
cmp
inc
pop
cwtl
notb
jo
jl
sub
add
cmp
das
dec
test
nop
xor
mov
xchg
cmp
into
inc
adc
sub
pop
add
mov
add
add
ss
pop
sub
or
adc
cmp
ds
inc
andl
push
scas
lea
movb
stc
lahf
out
loopne
mov
dec
data16
ljmp
adc
dec
lret
test
sub
sub
add
mov
test
bound
shlb
stc
xchg
and
mov
cmp
sub
repz
and
fsubr
mov
mov
es
pop
das
imul
aad
sahf
repnz
in
out
adc
mov
pop
stos
mov
xchg
shll
pop
mov
pop
out
push
mov
mov
jo
mov
pop
adc
loopne
icebp
xor
fwait
es
adc
adc
popa
repnz
popa
gs
inc
sbb
sbbl
movsl
mov
ds
cmc
mov
cli
test
inc
add
mov
and
add
cmpsb
icebp
mov
add
leave
mov
sbb
mov
mov
repnz
scas
fbstp
add
sub
xor
add
lret
or
pop
dec
jmp
add
lds
shufps
pusha
add
enter
cltd
insl
sub
sbbl
mov
loope
fwait
in
aam
les
push
xchg
mov
inc
mov
push
pop
in
add
jmp
lock
jle
add
or
push
insb
mov
mov
and
cmp
jnp
mov
les
repnz
adc
mov
cltd
mov
adc
jmp
push
dec
cmc
scas
sub
das
add
cmp
add
mov
arpl
cmp
aam
addr16
test
or
and
sub
or
push
test
shll
or
popa
pop
in
push
xor
push
sbbb
repnz
and
or
mov
cs
nop
xchg
xchg
clc
fwait
inc
sub
lods
or
ja
push
divl
outsb
popf
or
addr16
cmp
jmp
mov
loopne
dec
jl
mov
std
or
rclb
and
leave
jne
leave
cmp
das
adc
cmpsb
mul
mov
jnp
andb
xor
jecxz
xchg
scas
cmp
and
adc
jg
pushf
mov
mov
sbb
ficomps
mov
loopne
jg
or
mov
mov
add
add
test
out
sub
ficompl
out
enter
mov
sub
popa
clc
xchg
loop
in
add
mov
push
mov
shlb
pop
sbb
pushf
frstor
repz
xchg
sub
sbb
add
fsubl
cmp
cwtl
mov
gs
add
popf
in
imull
add
push
xchg
mov
dec
scas
mov
ret
add
inc
jb
scas
hlt
dec
lahf
fcoms
xor
mov
push
add
sub
adc
or
sub
stos
xchg
mov
adc
mov
cs
mov
aad
dec
add
push
pusha
cmpsl
xchg
stos
out
fcompl
adc
mov
push
movsb
cltd
sub
add
out
sti
pop
outsl
mov
or
pop
mov
aam
sbb
push
pop
and
mov
adc
cmc
cmpsl
adc
icebp
test
add
ljmp
movsl
lret
dec
ljmp
push
pop
add
adc
and
int
scas
ret
outsb
inc
lret
inc
and
push
inc
add
aam
mov
cmp
sub
outsl
popf
sbb
cmp
or
xchg
cmp
push
jecxz
arpl
adc
dec
lods
pushf
out
push
pop
pop
sbbb
sub
push
adc
jo
cmp
fiaddl
lods
fldl
pop
call
stc
or
mov
and
xchg
icebp
decl
sarl
sub
nop
movsl
hlt
mov
pop
add
adc
dec
andb
test
pushf
add
sbb
jge
idivl
lcall
jmp
pushf
or
sub
cmp
sub
or
aad
xor
pop
jno
add
loop
std
jge
jo
dec
mov
jle
stc
cmp
xchg
loop
push
mov
test
add
test
clc
mov
pop
cld
add
je
into
les
test
dec
adc
mov
add
in
jmp
mov
push
pusha
jecxz
or
push
mov
push
int
sub
sbb
lock
add
mov
enter
std
mov
pop
divb
clc
into
and
stc
mov
stc
add
std
subb
and
sti
jp
add
and
xchg
jo
dec
pop
xchg
mov
outsl
jmp
out
in
inc
pop
pop
loopne
shll
outsl
jecxz
dec
adc
test
jne
add
stc
into
mov
mov
leave
add
inc
daa
pop
pusha
mov
inc
mov
and
aad
jne
call
aaa
outsb
mov
adc
pop
insl
jmp
dec
fnsave
scas
mov
dec
inc
adc
stos
inc
add
loope
adc
cwtl
outsb
or
mov
cmc
inc
xchg
shll
adc
push
add
sub
xor
lods
xchg
xchg
mov
daa
pop
mov
mov
inc
lea
dec
add
fdiv
add
idiv
mov
and
jl
fsubrl
insb
loope,pt
cmp
stos
dec
sub
pop
mov
fs
xchg
inc
je
rclb
jb
loopne
xor
mov
pop
in
cmp
scas
scas
mov
mov
js
mov
nop
dec
push
and
mov
mov
mov
popf
dec
cwtl
dec
add
add
call
cmpb
inc
loope
ljmp
add
aam
mov
stos
cmpsb
stc
lock
in
cmpsl
xchg
dec
xor
roll
push
jge
sti
push
xchg
in
cmp
add
adcb
xor
rcr
out
sbb
mov
adc
popf
stc
sub
sbb
daa
dec
mul
enter
aad
mov
jno
xchg
arpl
xchg
fcmovnb
adc
mov
decb
stos
inc
xchg
sub
mov
out
fldt
or
and
stos
dec
testb
fs
push
loope
sub
dec
and
sysret
je
ss
shrl
fsubs
or
mov
pop
notb
test
pop
jmp
test
pop
pinsrw
movsb
xlat
push
lock
pop
sub
fisttpll
jmp
or
out
and
negl
and
push
lock
and
add
jmp
cmc
adc
cmpl
or
add
pushf
and
mov
xor
sti
push
push
popf
push
fimuls
flds
call
insb
imul
sbb
jns
sahf
addb
rcll
or
dec
into
arpl
pop
mov
mov
pusha
daa
sub
imul
gs
cwtl
bound
sub
ljmp
jge
out
pusha
mov
sub
pusha
or
lock
inc
addb
mov
pop
aas
jnp
add
ret
fisubrs
loop
lret
insb
jo
or
jge
cmp
add
inc
dec
pop
pop
adc
adc
sub
outsl
test
xlat
or
mov
sahf
call
pop
ret
mov
or
mov
sti
lahf
and
inc
pop
arpl
and
cld
pusha
add
std
daa
push
pushaw
insb
es
or
test
add
test
mov
loop
push
add
in
pop
cmp
jne
adc
call
hlt
mov
and
xor
jg
dec
imul
popa
mov
pop
pop
scas
popf
or
or
in
call
mov
sub
push
jg
mov
popa
leave
int3
cwtl
daa
mov
inc
xor
xlat
rcll
cmp
push
leave
add
mov
ja
xor
mov
js
test
xchg
std
and
pop
adc
and
scas
mov
dec
int
mov
mov
out
sub
jbe
ficoms
imul
adc
jbe
addb
loopne
mov
dec
mov
pop
in
faddp
add
mov
adc
mov
adc
outsl
jg
mov
clc
push
scas
enter
pop
xor
daa
adc
xchg
push
xchg
dec
fadds
lock
lahf
jns
shl
push
sub
and
aam
adc
sarb
decb
pop
movsb
stos
repnz
movb
mov
jg
sbb
sti
pop
mov
mov
inc
inc
or
inc
daa
sub
mov
mov
xlat
cmp
addl
clc
pop
push
sbb
js
xchg
jno
cmpsl
xchg
pop
dec
fsubr
popa
pop
or
mov
mov
adc
movsl
fwait
push
dec
push
pusha
cmc
cld
mov
mov
popf
jns
pop
sbb
pop
dec
fiadds
xlat
jmp
dec
and
fcmovb
mov
pop
pusha
sub
jmp
aaa
cld
mov
mov
mov
jle
add
fnsave
lods
or
adc
xchg
and
repz
shlb
xchg
xor
mov
sbb
cmpsb
mov
pop
ret
mov
add
add
cmpl
jmp
or
sub
xor
addb
data16
push
ret
orl
clc
pop
sbb
add
and
or
jge
lock
jecxz
sub
push
das
nop
loop
mov
test
pop
xor
ret
and
dec
adc
aam
pushl
cmpsl
lcall
push
or
xorb
jmp
mov
lock
add
insb
push
jbe
pop
jg
add
jmp
pop
cmpsl
imul
sarl
xor
and
add
js
sbb
rcrb
jae
add
adc
pop
shl
test
xchg
cmp
inc
jge
or
xchg
xchg
jb
pop
xchg
adc
dec
lds
xchg
sti
int
addl
dec
movsb
add
xor
adcb
call
add
loope
pop
push
adc
scas
roll
jmp
je
add
add
or
outsb
add
dec
lret
pop
pop
add
cmp
sub
sub
fsubr
dec
jmp
add
hlt
pusha
or
mov
icebp
jmp
movsl
aas
sub
insb
inc
std
ds
add
or
cmpsb
xchg
or
pop
jae
and
loopne
pop
xchg
addl
in
or
xchg
and
jl
inc
fcom
xor
sub
cltd
and
hlt
and
out
mov
ret
sbb
pop
loope
add
outsb
push
jno
lea
dec
push
rclb
adc
rol
sub
or
push
xchg
pop
ret
and
inc
and
cmp
xchg
sbb
xchg
or
push
stc
jo
add
sub
cmp
jno
add
pop
mov
cwtl
pop
mov
add
fcoms
adc
in
and
leave
add
movsl
lods
sti
call
sbb
add
mov
inc
pop
jg
in
sub
xchg
jecxz
aad
cmp
int3
or
and
add
jb
faddl
mov
add
jecxz
xor
mov
fdivs
es
add
or
adc
pop
je
add
push
lret
xchg
pushf
in
and
out
int3
or
cmp
rcll
hlt
call
aad
daa
and
cmp
stos
mov
insl
and
jo
sbb
push
dec
or
icebp
pop
adcl
jg
sbb
popa
adc
pop
and
sub
test
push
and
in
inc
jle
leave
insb
mov
out
pop
mov
out
jo
insb
movsb
add
push
jle
hlt
bound
inc
and
add
sbb
movsb
add
or
fmull
andb
sbb
into
inc
loope
jg
outsb
ret
sarb
mov
or
andb
adc
fnsave
add
in
sub
xor
movb
fs
inc
xchg
inc
and
pushf
pusha
loop
xor
lret
jno,pn
xlat
add
xlat
lcall
mov
or
cli
add
and
shl
sub
inc
sbb
mov
push
ror
sbb
shll
jnp
adc
add
adc
sub
or
sbb
fstpl
vmread
mov
bound
ret
outsb
sbb
push
add
mov
cmp
into
add
sbb
inc
outsb
outsl
sub
jo
cmp
add
loope
lock
adc
clc
fldl
xorl
rcrb
dec
xor
mov
cmp
rclb
add
outsl
cli
das
adc
sbb
dec
pop
outsb
je
pop
xor
dec
in
xorb
fwait
add
rolb
xchg
dec
imul
andb
inc
xor
icebp
cmp
cmp
add
jmp
add
mov
movsl
sbb
mov
add
sub
ljmp
or
cmp
int
add
clc
dec
mov
or
rclb
sahf
mov
inc
and
xorb
inc
cwtl
push
sbb
add
push
jmp
xor
out
add
loop
fbstp
add
shr
dec
orl
xor
push
jle
xor
push
lds
adc
push
fidivrl
cltd
popf
fmul
leave
add
cld
test
dec
push
inc
in
iret
pop
js
fists
pop
pusha
sbb
or
add
mov
ds
and
jge
std
xchg
add
xchg
xor
add
xchg
add
insl
ds
xor
xchg
add
jge
cmp
and
ret
sub
push
add
pushf
stos
xor
jmp
pusha
push
out
mov
dec
aaa
push
dec
data16
fistps
cmp
xorb
pushf
fdivrp
imul
pop
nop
in
add
cmp
je
mov
inc
loopne
mov
sbb
inc
pushf
sbbb
bnd
mov
ucomiss
mov
mov
and
push
and
stc
jmp
add
xlat
arpl
outsl
cmp
cmp
xchg
xor
fwait
and
pop
sbb
add
cmp
add
out
xor
add
push
xor
ds
mov
pop
xor
fdivl
bnd
add
adc
mov
fstps
sub
rep
add
in
inc
or
add
jno
dec
push
jg
fiaddl
pop
xor
push
xchg
add
aam
daa
insl
fs
test
inc
loope
dec
inc
sti
les
add
rorb
pop
pop
add
xchg
pop
lea
or
cmp
leave
add
lods
adc
in
add
lea
inc
mov
add
xor
pop
jns
jg
add
xorb
enter
test
stc
mov
fsubs
std
arpl
mov
mov
mov
nop
mov
and
mov
int3
sub
add
leave
pop
aam
mov
dec
xchg
sbb
push
sub
cwtl
jbe
shlb
clc
push
roll
idivb
les
dec
inc
add
jp
xchg
mov
sbb
rcrb
cld
add
sti
jge
imull
aaa
je
test
call
lahf
movsb
stc
add
das
shlb
add
out
lds
insb
dec
adc
add
push
dec
sub
popa
daa
mov
out
test
xchg
es
add
enter
sti
in
pop
add
and
outsl
lret
fistps
push
push
sub
mov
push
jbe
pushf
jp
add
xchg
clc
shll
inc
ret
repnz
xor
iret
adc
repz
mov
ljmp
ret
dec
xchg
call
outsb
std
dec
jle
bound
jo
lods
sub
xchg
adc
ret
test
add
pop
adc
aad
rclb
push
add
popa
push
mov
cmpb
add
add
push
daa
jl
mov
sbb
cli
cs
nop
scas
jl
aaa
pusha
add
mov
sbb
adc
movsb
xor
pushf
mov
add
mov
incl
ret
inc
shlb
lods
jne
cmp
dec
add
pop
inc
dec
push
jae
inc
jmp
xchg
mov
movl
jp
cltd
push
fdivl
push
outsb
push
cmp
dec
or
add
into
pop
insl
dec
dec
push
push
cld
xor
fwait
js
lock
cmpsb
jae
ljmp
mov
add
dec
movsb
adc
leave
jae
iret
dec
andl
add
mov
int
add
jns
call
add
xchg
int3
push
adc
add
sahf
dec
test
sbbb
sbb
fdiv
pop
xor
xchg
inc
cmp
icebp
pop
popa
sbb
pushf
repnz
sub
pop
mov
popf
jbe
mov
pop
test
xchg
cmp
in
shrd
lds
data16
adc
out
inc
xor
pop
add
adc
sbb
callw
out
pop
push
jp
add
std
pop
test
xchg
xchg
sub
mov
sahf
je
jno
inc
xchg
sti
jle
add
out
or
add
push
imul
ljmp
xchg
iret
cmp
cmp
mov
add
mov
pusha
mov
fisttpll
jg
insl
xor
dec
cwtl
bound
les
add
orb
cmp
mov
add
inc
sbb
xchg
add
orb
pusha
cmp
add
push
jg
adc
xchg
add
sti
pop
in
pop
xlat
nop
bound
xlat
cwtl
xor
mov
test
add
gs
adc
inc
jmp
adc
js
insb
data16
repnz
jnp
add
out
push
call
mull
jmp
add
push
icebp
jne
add
mov
adc
cmp
loopne
add
std
imul
lods
das
ss
insl
mov
add
mov
sbb
fists
cwtl
mov
mov
add
cmpsb
inc
dec
addr16
repnz
push
aas
and
pop
stc
out
sbb
push
pop
push
and
adc
data16
add
mov
clc
add
mov
cmpsb
mov
outsb
push
test
push
mov
call
lahf
rcl
icebp
stos
add
fcoms
sub
movsl
aas
mov
sbb
or
inc
and
sub
dec
out
and
cli
inc
pop
jl
dec
push
orl
sbb
faddp
mov
xchg
and
dec
and
sub
loopne
xor
add
js
out
jl
inc
les
mov
lods
scas
cld
shlb
clc
lock
add
cmp
cmp
into
sub
sbb
sbbb
add
cmp
adc
and
daa
icebp
sbb
loopne
mov
sbb
in
mov
sahf
test
out
shll
sbb
mov
jp
cltd
sub
and
fimull
loop
cmp
push
or
pop
and
mov
xor
mov
enter
data16
les
sub
mov
adc
mov
inc
leave
inc
sahf
lock
mov
or
inc
gs
pop
aad
add
xchg
sbb
xchg
push
lret
push
hlt
adc
in
popf
push
push
mov
push
add
inc
jae
fdivrl
nop
mov
jmp
push
pop
xchg
sbb
daa
mov
add
rcrb
nop
sbb
lahf
add
iret
add
sbb
in
mov
add
in
cwtl
mov
sbb
cmpsl
lea
pusha
push
add
arpl
add
lcall
add
pushf
faddl
mov
shlb
cmp
pusha
dec
filds
jnp
sbbb
lods
push
xchg
add
scas
outsl
in
test
mov
add
call
scas
test
loopne
jmp
mov
xchg
test
clc
xchg
call
rolb
pop
mov
add
imul
js
pop
push
pop
rolb
inc
add
shll
cmp
sbbb
xor
bound
ret
cmp
shlb
fs
scas
cmp
dec
push
xor
cmp
mov
push
rcll
add
add
xchg
cmp
pop
mov
ret
xorb
fiadds
pop
test
ljmp
add
xchg
and
sbb
aas
xchg
jp
pop
add
jne
ret
std
or
popl
insl
orb
push
jns
loopne
ds
pop
pop
enter
sarb
leave
adc
test
inc
lcall
rorb
sahf
mov
jnp
fs
mov
fldt
xchg
je
inc
inc
mov
jbe
jp
or
mov
rcl
imul
pop
sbb
into
fwait
inc
pop
cmc
in
imul
jp
lea
push
mov
pop
mov
dec
dec
jns
daa
mov
scas
xchg
or
push
pop
push
adc
jl
pop
test
mov
cmp
lods
xchg
xchg
add
mov
lret
stos
cmc
mov
in
stos
cmpsb
hlt
movsb
repz
imul
sbb
mov
stc
add
mov
dec
stc
jl
aad
mov
cli
inc
add
aas
or
js
pop
mov
mov
shl
cmp
popf
add
jl
push
or
imul
cmp
dec
iret
subl
pushf
adc
pop
mov
xchg
sub
clc
add
vmread
dec
lahf
mov
and
xchg
out
sahf
mov
mov
add
aad
imul
pop
loope
mov
push
add
mov
pop
rorb
mov
xchg
add
stc
sub
imul
push
or
inc
adc
jmp
mov
pop
mov
jle
cmp
push
cmp
push
popl
scas
leave
pop
por
xchg
sbb
rcl
insb
add
outsb
je
fsubl
and
fsubs
xor
sbb
in
clc
clc
add
adc
arpl
xor
js
sbbl
add
push
push
shlb
inc
dec
fcomps
sub
shl
or
sar
push
and
or
inc
stc
and
fmull
xor
or
push
scas
dec
stos
jl
pop
cwtl
or
and
pop
or
setns
sbb
mov
cmp
push
mov
adc
out
or
std
dec
and
cmpsb
and
dec
push
iret
cmp
cltd
or
and
cld
sub
aam
mov
arpl
and
mov
test
outsb
pusha
jne
pop
lcall
dec
divl
shlb
ljmp
mov
jne
outsl
jb
xchg
xchg
cli
mov
pop
xor
or
aam
loopne
pop
add
cli
xchg
lods
js
popf
xor
jno
adc
push
xchg
and
call
pop
mov
sbb
imul
stc
mov
mov
add
dec
dec
jnp
adc
loopne
outsl
xchg
push
jns
sub
add
mov
push
or
mov
inc
push
adc
add
pop
mov
cld
add
adc
add
into
dec
mov
ja
out
and
in
call
and
enter
out
inc
insb
and
addr16
cmp
out
jb
aad
cltd
mov
out
jmp
testl
js
dec
push
add
cmc
dec
iret
and
mov
sub
sarb
sub
out
add
inc
push
fdivl
lret
mov
ret
add
cld
mov
xchg
test
les
add
sbb
jne
or
or
adc
test
movsb
sbbb
sarl
xchg
punpckhbw
and
popf
sbb
mov
add
mov
or
mov
sbb
pop
push
xor
xchg
inc
cmp
dec
cmp
lods
or
bound
loop
xor
adc
cld
in
mov
lods
loope
popf
xor
inc
adc
ror
imul
mov
sahf
sbb
dec
jno
mov
or
sbb
and
pusha
imul
jmp
cmp
xchg
fcmovu
inc
add
movb
cmp
loopne
int3
in
inc
cltd
call
push
mov
lahf
cwtl
add
inc
xor
and
sbb
or
test
divb
popf
jo
add
aaa
arpl
scas
jo
push
adc
shlb
or
cwtl
shrb
sub
xor
test
faddl
mov
lods
popl
shlb
scas
inc
adc
scas
add
inc
add
rolb
aaa
adc
mov
cmp
xor
cmp
dec
inc
movsb
dec
push
add
add
add
add
repnz
into
and
xor
pop
mov
not
nop
testl
cmp
or
and
and
arpl
adc
inc
std
or
addb
push
inc
cmp
xor
inc
inc
push
sub
and
negl
mov
mov
push
sbb
iret
add
in
push
inc
pop
push
add
xor
pop
sbb
mov
cld
and
push
hlt
jg
out
jne
add
dec
add
dec
jecxz
popf
xchg
les
inc
jp
or
mov
mov
lods
dec
mov
jge
jo
lds
in
stos
and
test
and
fwait
sbb
mov
push
sti
mov
shrl
ljmp
jmp
jecxz
dec
dec
setno
aam
nop
orb
xor
push
and
xchg
rclb
jae
push
xchg
push
sub
ret
add
mov
icebp
xchg
addr16
scas
push
lods
fdivrl
sub
add
dec
mov
loopne
clc
test
imul
sub
fs
out
in
add
mov
rorb
lret
push
and
mov
cmc
jo
adc
mov
ret
add
fisubrl
add
xor
cmp
push
dec
add
or
pusha
xchg
mov
idiv
inc
inc
xor
or
or
add
dec
pop
addl
cmpsb
pop
add
jne
setnp
fsubl
adc
scas
ss
cwtl
cmp
and
aam
sbb
jbe
pop
clc
cwtl
and
enter
cltd
in
inc
mov
popa
xor
push
les
ds
pop
push
add
ret
cs
sbb
mov
xor
dec
test
jne
cmp
mov
mov
xchg
add
pop
pop
nop
adcl
adc
scas
xor
addr16
xchg
adc
mov
adc
push
and
fnsave
divl
dec
or
pop
scas
inc
mov
ja
or
cwtl
sub
dec
xor
pop
mov
push
inc
hlt
and
sahf
out
fs
add
data16
sub
pop
clc
je
sar
mov
inc
push
mov
mov
subb
sbb
pop
xchg
pop
xchg
xchg
jb
fidivrl
mov
xor
push
nop
lods
xor
and
xorb
aad
mov
mov
repz
sub
popa
movb
sahf
or
sarl
mov
pop
outsb
sub
mov
rol
add
icebp
aaa
je
xorl
shlb
cmpsl
lds
add
sub
rolb
jmp
nop
mov
add
loop
in
inc
sbb
aam
jge
xchg
mov
fdivp
call
jle
push
dec
pop
cmpsl
jge
push
cmc
fisubs
loope
sub
xorb
mov
and
add
sub
or
sub
cmp
sti
push
sbb
test
inc
add
cmp
mov
and
ret
xor
das
in
add
popf
pushf
inc
aaa
sub
imulb
add
decb
sub
add
stos
jle
and
xchg
sub
xchg
fsubp
cmp
sub
mov
into
notb
shll
sbb
jl
ret
ret
mov
xor
push
add
add
pushf
ror
clc
push
jl
movsb
loopne
push
adc
dec
idivl
js
mov
fs
les
mov
add
cmc
out
dec
test
add
mov
imul
bnd
mov
xor
mov
add
add
jecxz
cmc
inc
or
add
bound
daa
es
jnp
add
pop
out
das
push
push
add
jl
mov
dec
cmp
nop
sbb
add
xor
inc
xor
pop
movsb
pop
pop
pusha
je
stos
sbb
and
mov
push
mov
ss
sub
popa
mov
cltd
pushf
and
fisttps
cmp
dec
aas
sbb
mov
stos
dec
xorb
xor
adc
shlb
or
mov
jno
and
adc
mov
dec
rol
adcb
add
add
loop
or
pushf
inc
and
mov
xor
lret
daa
or
fidivrl
and
adc
or
enter
sbb
mov
fwait
xchg
pop
xlat
dec
add
xchg
adc
enter
je
cmp
mov
mov
fnsave
xchg
push
das
je
lods
add
arpl
dec
ljmp
fmuls
jle
xchg
pop
stc
pop
test
cmp
dec
push
sbb
hlt
mov
push
in
shr
pop
mov
adc
mov
fwait
mov
or
adc
aam
inc
jle
insl
xlat
pop
add
rcll
es
stos
add
inc
clc
add
and
cwtl
inc
ret
nop
cmp
lret
jge
cmp
pop
lcall
clc
jnp
jg
outsl
cmp
or
in
add
xor
pop
add
xchg
inc
int3
inc
rclb
cmp
add
xor
pop
jl
dec
repnz
and
sbb
dec
test
cmpsb
and
mov
jo
popf
hlt
ret
mov
xor
pop
inc
jl
jecxz
add
scas
add
sahf
rolb
inc
test
shr
shlb
movsb
inc
mov
sbb
mov
pop
sbb
dec
push
add
mov
jl
mov
test
cli
inc
scas
in
sub
loope
ret
rol
pop
jnp
notl
xchg
pop
adcb
loop
dec
inc
or
ss
mov
stos
cmp
push
rol
jge
imul
enter
adc
bound
test
mov
xor
mov
shl
xorl
call
pop
hlt
pop
sbb
add
mov
frstor
jl
adc
add
add
pop
or
sbb
cmpsl
and
dec
or
add
iret
fs
xchg
lahf
jae
jnp
sbb
loope
inc
inc
iret
clts
pop
popf
scas
fsubl
shlb
xchg
iret
and
les
xchg
or
mov
add
cmc
arpl
mov
inc
mov
fwait
shrb
loop
pop
xor
mov
in
stos
bswap
je
ja
lahf
inc
jle
mov
xlat
inc
lods
lods
mov
call
cmp
adc
xor
mov
xlat
fs
out
mov
push
lcall
jnp
incb
add
add
inc
mov
xchg
insb
push
movsl
test
sub
mov
mov
pop
test
mov
scas
sub
push
add
outsl
cltd
data16
mov
jb
lret
lods
insb
addr16
pop
enter
mov
ret
xlat
loop
addr16
ds
add
adc
xor
rclb
sti
test
fmull
dec
pop
xchg
sub
add
aam
or
cs
xor
mov
iret
cld
jmp
pop
imul
xlat
out
mov
clc
push
adc
mov
adc
je
add
ljmp
push
add
push
clc
add
jg
test
loope
cmovb
lcall
das
mov
pop
add
dec
sub
repz
cmp
and
repnz
mov
decl
aaa
roll
imul
out
repnz
jb
xchg
andl
loopne
cmp
jno
in
cmp
xchg
in
cmpb
and
jno
scas
add
ljmp
enter
lock
pop
jge
add
mov
mov
adc
sub
mov
fwait
arpl
ljmp
mov
and
fwait
movsb
sbb
movsb
adc
sbb
test
xchg
inc
bound
jmp
or
pop
mov
loope
mov
and
xchg
add
dec
jl
xor
jo
sbb
add
in
fisubl
orl
pop
je
or
mov
xchg
or
aam
xor
fstpt
ja
add
inc
cltd
or
mov
enter
mov
cmc
outsl
dec
clc
mov
xchg
jge
add
loop
mov
cmp
xor
ljmp
mov
pusha
jno
and
xorl
inc
pushf
ja
jno
mov
push
xor
push
xor
adc
xchg
push
push
mov
repz
push
xor
add
aad
push
add
fldcw
mov
jb
ret
sbb
dec
lods
mov
into
pop
out
sub
daa
orl
push
jb
aas
jae
stos
lea
mov
add
in
pop
jno
push
inc
andl
test
bound
sbb
int
addl
xorl
push
aam
push
mov
call
jmp
xchg
fs
pop
testl
mov
sub
push
add
inc
pop
cmc
or
and
pusha
repz
and
mov
movsl
in
sbb
jae
sub
push
test
je
inc
stos
adc
and
loope
adc
cmpsl
adc
inc
adc
ret
in
xchg
cwtl
clc
icebp
push
and
inc
mov
lahf
testl
rcll
arpl
xchg
add
inc
movsl
pushf
pop
inc
mov
fidivrl
into
inc
pop
dec
mov
or
hlt
bound
lods
cltd
mov
cli
inc
scas
xlat
cmp
sbb
sub
fstl
add
sub
mov
xchg
pop
add
jb
iret
add
hlt
inc
aam
stc
cli
lea
xchg
add
push
and
out
sbb
fdivrs
dec
inc
stos
mov
xor
xchg
dec
ja
outsl
dec
and
enter
loope
orb
cmp
daa
pop
adc
test
mov
clc
cmp
or
or
add
aad
push
push
insb
inc
and
test
outsl
mov
shr
jno
cltd
shrb
add
test
add
call
repz
ret
out
mov
xor
cmp
pop
fisubrl
xchg
fnstenv
rorb
adcb
sub
mov
xchg
xchg
aam
pusha
mov
rcl
addr16
sbb
test
mov
add
mov
fsubr
pop
repnz
jae
pop
clc
xor
popa
sbb
int
test
cmp
jae
adc
loop
rolb
mov
pop
shll
or
add
add
pop
add
cmp
in
pop
add
push
loope
jg
movl
pop
push
orl
hlt
add
push
movsb
sbb
mov
push
test
adc
adc
push
test
in
sti
add
cmp
pop
xchg
add
sub
popf
cld
shlb
xor
and
lock
add
jns
inc
jecxz
scas
mov
lea
pop
mov
out
add
sub
xchg
xor
mov
sbb
inc
out
in
jb
and
add
push
xchg
and
mov
ret
adc
int
jno
pop
cmp
jl
add
and
call
outsb
sbb
hlt
xor
push
je
inc
dec
push
fs
sahf
lds
mov
icebp
jns
ud1
cmpsl
outsl
jmp
cmp
sbb
mov
cmp
add
scas
movl
repnz
xchg
add
push
jb
mov
xor
arpl
loope
aaa
pop
pop
sahf
mov
movsl
rclb
adc
pop
or
jle
mov
cmp
add
xchg
push
out
sbb
and
add
jecxz
jmp
jmp
shl
add
cld
pop
and
xchg
and
fwait
sti
jne
inc
cmpsb
add
outsl
lahf
inc
les
xchg
inc
push
loopne
dec
mov
in
add
repnz
mov
into
insb
add
xor
je
ja
es
int3
int
add
stos
mov
and
loope
dec
cli
outsl
add
repz
stc
add
xchg
in
mov
les
popf
xchg
mov
xor
inc
and
mov
movsl
lock
mov
lds
cld
pusha
mov
cltd
jp
pop
inc
popf
dec
xchg
adc
cmp
jbe
rcrl
or
js
cmp
test
cmp
add
pop
sub
mov
mov
roll
div
sbb
cld
cwtl
and
and
aaa
adc
jmp
xchg
cmp
xchg
jecxz
jp
add
add
test
pop
jmp
sub
xor
mov
hlt
lock
aad
fsubl
enter
add
imul
int3
mov
mov
jo
sti
inc
stos
pusha
stos
fwait
cltd
jecxz
adc
fmuls
push
nop
mov
orb
cmp
inc
add
call
mov
cmp
mov
cli
add
pop
fcmovb
dec
cmpsl
icebp
add
imul
cmp
cmp
push
add
nop
out
into
mov
cmp
ss
rclb
push
test
imul
mov
mov
cmovg
xchg
mov
pop
adc
insl
cld
pop
add
pop
adc
cli
dec
inc
add
jb
pop
dec
mov
dec
dec
nop
xor
outsl
mov
popf
pushf
cmp
movsl
add
add
into
stos
aas
or
rolb
add
jl
lret
flds
pushf
inc
clc
add
push
sbb
jae
in
rcl
add
xchg
and
add
sbb
sbb
and
adc
push
mov
jno
add
repz
cmc
es
mov
in
xchg
lahf
push
iret
loopne
sbb
sub
into
leave
mov
sbbl
clc
inc
out
inc
sti
mov
xchg
std
fisubrl
in
add
cs
mov
inc
or
scas
mov
xlat
jge
pop
icebp
push
mov
aaa
pop
mov
lret
jns
scas
aam
add
add
xorl
mov
adc
add
aas
ja
iret
outsl
add
call
out
pusha
stos
int3
inc
pusha
mov
das
leave
sub
movb
lret
dec
and
xchg
mov
mov
pop
movsl
pop
call
dec
mov
shl
xor
sti
xorl
pop
inc
adc
gs
pop
mov
mov
push
frndint
xchg
cmp
push
add
in
in
test
and
ds
pushf
add
jmp
xor
dec
bound
lock
add
add
icebp
mov
or
pop
addr16
insl
pop
ret
xlat
into
bound
stc
ja
jo
add
sbb
xorb
sub
out
add
aam
scas
add
jmp
cld
cwtl
call
adc
dec
xor
lods
popa
lods
or
xchg
or
xlat
jbe
add
imul
pop
insb
rclb
push
bound
mov
jmp
arpl
add
pushf
add
adc
hlt
cmp
fisubrl
sub
shll
or
js
ds
divl
das
add
cwtl
out
inc
aas
add
xchg
outsb
stc
sbb
pushf
adc
nop
xlat
inc
add
pop
mov
mov
adc
xchg
adc
das
mov
in
ds
xlat
nop
jecxz
sbb
add
sub
and
jmp
scas
gs
repnz
sbb
cmc
jae
cmp
in
or
ja
mov
and
cmp
cmp
adc
mov
xchg
add
push
loop
add
jecxz
mov
mov
xchg
fdivl
cltd
cmp
outsb
jp
shlb
icebp
out
mov
ret
lock
testb
iret
xchg
fldenv
inc
inc
shl
mov
cmp
scas
rclb
cmc
shrb
rcrl
add
xchg
xor
pop
or
or
shlb
jno
jne
add
xor
mov
add
out
mov
xor
sub
sbb
fdiv
add
cmc
cwtl
xor
add
push
addr16
xchg
or
fwait
inc
cwtl
mov
roll
mov
je
push
ljmp
or
stos
shlb
in
add
sarb
sbb
sub
repz
cmpsb
test
pop
loope
and
out
loopne
in
mov
pop
outsb
adc
pop
pop
add
aaa
adc
or
jb
adc
in
add
and
push
xchg
pop
test
xor
lsl
cmp
sarb
fcmovnb
cltd
add
push
iret
jge
insl
movsb
mov
fldl
aaa
jl
out
jmp
gs
mov
xchg
mov
cmp
int3
add
repz
nop
or
sub
adc
push
dec
adc
add
das
mov
out
xchg
aas
sbb
jne
add
cltd
dec
inc
jge
ss
jno
fwait
decl
sub
jecxz
add
jg
shlb
lret
lds
cmc
cld
add
jl
or
sub
icebp
ds
cli
call
sbb
insl
add
xchg
sbb
stc
loop
je
lock
out
mov
pslld
inc
add
pop
mov
xor
add
pushf
or
mov
out
add
nop
or
insl
in
add
fdivrs
cwtl
fs
pop
fucomp
test
pop
inc
nop
sub
rcr
fiadds
andb
lds
pop
jb
int3
sbb
fisubs
out
jae
adc
dec
push
fsubrs
adc
sbb
sbb
add
ret
dec
and
add
jl
cmpsb
xchg
push
add
xor
pop
inc
mov
jae
loopne
mov
push
mov
cmc
cmp
cmp
sub
and
roll
pop
gs
call
jb
and
outsl
pop
push
push
in
push
mov
int
pop
divb
xchg
jns
or
mov
ret
pusha
sarb
insl
dec
into
popa
xor
xor
mov
cmpsl
xorl
xor
popl
push
test
cwtl
inc
adc
cmp
loopne
ret
rcrb
int
arpl
inc
lock
add
fadds
xor
xor
add
call
pop
mov
mov
cli
add
test
shrb
addl
mov
stc
test
lods
add
cli
out
fs
test
sbb
sub
jp
add
cmp
sub
jmp
arpl
jnp
test
lock
clc
push
mov
sub
insb
or
cmp
cmp
push
dec
bound
mov
and
out
test
jbe
adc
roll
mov
aam
rolb
sbb
xchg
leave
int
add
xlat
andb
sub
sub
mov
cmp
push
xchg
and
rclb
sub
inc
mov
sbb
cmpb
and
or
call
imul
pop
push
mov
push
pop
add
popf
xchg
call
aam
xchg
cltd
scas
pop
mov
scas
and
mov
leave
test
shlb
cld
ret
cs
mov
xchg
sbb
andb
add
xlat
add
jnp
add
daa
dec
xor
jae
pop
and
jo
add
sahf
push
rclb
jmp
rcll
sub
insl
loop
mov
enter
inc
push
add
ret
subl
pop
jns
jle
and
hlt
mov
fcoms
add
sub
and
out
add
and
mov
imul
add
jle
inc
sbb
faddl
js
outsl
imul
mov
sub
xchg
xor
and
cmpsb
and
fs
jo
add
or
jmp
sub
xchg
fwait
in
pusha
jl
add
fildll
movsl
xchg
sub
ror
add
and
das
inc
fsub
cmp
sbb
cmp
dec
xor
inc
imul
adc
inc
add
inc
fildl
adc
mov
lahf
movsl
add
sub
or
pop
mov
fcomi
test
daa
lock
dec
test
pushf
inc
sub
sbbl
mov
add
push
fwait
jb
js
sbb
fs
mov
xor
jne
outsl
adc
add
push
les
and
cmp
loop
jge
xor
or
pop
mov
mov
out
add
mov
je
mov
or
jmp
or
push
lock
inc
mov
testl
scas
sub
sbb
in
sub
addb
dec
ret
jmp
mov
dec
dec
cmp
rclb
pop
clc
das
mov
icebp
int3
jb
arpl
call
cli
lret
and
pop
scas
mov
adc
add
sti
cmp
scas
cwtl
and
sbb
leave
imul
aad
mov
push
mov
or
lods
xchg
add
in
jecxz
add
fstl
out
ds
pop
fists
cmp
hlt
pop
adc
add
mov
mov
je
adc
add
arpl
mov
ret
pusha
in
mov
inc
and
rclb
daa
mov
orb
pop
cld
pop
pop
add
pop
or
add
mov
add
into
dec
add
pop
mov
and
test
leave
mov
inc
and
xchg
sbb
dec
add
inc
shll
xchg
add
sbb
pop
sbb
inc
push
sub
addb
mov
fwait
enter
add
sub
cmpsb
sbb
add
inc
loopne
jbe
add
fiaddl
sbbb
mov
movb
rcrl
mov
push
cmc
and
loope
sbb
pop
sahf
dec
fst
aam
sub
adc
loope
jb
mov
in
imull
xchg
das
push
jecxz
add
pop
push
pop
jo
adc
adc
add
pop
add
xchg
mov
pop
cmp
add
lret
mov
hlt
add
jmp
add
pop
cwtl
and
xchg
test
jo
push
add
xlat
bound
sub
add
dec
pop
fdiv
mov
iret
mov
or
loopne
cld
dec
jge
add
test
jno
jmp
lahf
sarb
add
imulb
and
inc
dec
inc
add
sti
popf
xchg
mov
cmp
adc
mov
pop
sub
test
lcall
out
bound
or
cmp
cltd
push
and
xchg
iret
pop
inc
cwtl
pop
movsb
mov
fwait
cmp
jle
and
scas
mov
add
mov
add
fcomps
add
cli
add
jge
and
sti
lods
pop
dec
adc
ret
out
push
lret
cmp
clc
pop
add
sti
dec
inc
call
xchg
cld
push
test
ds
mov
push
xlat
test
into
xor
andl
test
sbb
jl
cmp
jp
mov
mov
hlt
pushf
mov
mov
ljmp
int3
test
mov
inc
or
popa
xorb
add
sub
lret
add
cld
sub
cltd
pushf
sbb
jb
out
mov
pop
rcrb
xor
cmp
inc
xor
rcrl
mov
mov
cli
xchg
lock
imul
pop
adc
add
in
fistps
mov
push
repnz
inc
inc
pop
bound
dec
and
sbb
add
les
das
add
aaa
in
jg
xor
or
mov
inc
xchg
das
cmc
mov
cmp
mov
gs
mov
adcl
pop
adc
xchg
xor
aaa
test
sub
mov
mov
addr16
fsubrs
mov
adc
in
jp
add
add
add
inc
repnz
lcall
xor
shrd
out
jmp
cmpsb
movsb
add
mov
inc
pop
rorb
xor
inc
push
inc
pop
adc
adc
pusha
xchg
popf
cmp
cwtl
mov
mov
fadd
xor
imul
cli
out
dec
xchg
fs
push
pop
mov
pop
scas
xlat
fistl
jecxz
rolb
mov
sbb
fists
push
mov
dec
add
mov
push
and
sub
sti
or
add
popf
inc
je
mov
cmp
orb
mov
adc
push
mov
lahf
cmpsb
addb
xlat
add
repz
dec
xor
ljmp
add
dec
or
loopne
or
inc
sbb
rclb
sub
adc
add
jle
or
repz
mov
jl
push
sub
in
adc
frstor
mov
add
pop
lea
xchg
stos
imul
les
mov
or
rorl
pop
mov
add
pop
fxch
sub
fwait
nop
xorb
cmc
adc
add
repz
jbe
add
push
lea
xchg
add
inc
jp
xor
insb
es
scas
inc
mov
orb
add
sub
test
cmp
inc
idivb
add
mov
sar
aam
mov
sub
shl
popa
call
pop
mov
ret
push
out
inc
cltd
sahf
pop
dec
loop
pop
fildl
pusha
push
xchg
sbb
add
sbbb
out
xchg
in
add
add
int
push
popa
aaa
shl
mov
xchg
xchg
or
mov
mov
dec
add
push
sbb
add
sahf
add
add
jae
and
mov
xor
fiadds
sbb
outsb
push
lret
push
loopne
daa
inc
add
lods
sub
inc
push
fdivp
mov
aas
or
jo
ja
inc
roll
aam
imul
add
mov
sub
lahf
inc
add
out
aaa
mov
xor
adc
cmp
lock
clc
inc
mov
mov
pop
fsubs
pop
mov
sbb
adc
jle
add
outsl
fdivrs
xchg
dec
movsb
sbb
gs
jo
movd
outsl
cwtl
enter
mov
into
divl
or
subl
test
pop
loope
add
jo
lds
mov
sar
outsl
nop
mov
mov
mov
add
outsl
subb
pusha
jae
pop
mov
icebp
add
mov
scas
js
mov
cs
inc
sbb
pop
mov
and
mov
or
jp
push
dec
notb
and
or
xlat
xchg
sbbl
cmp
hlt
sbb
fdiv
jg
jns
jle
pop
adcl
add
mov
mov
mov
fnsave
subb
pop
fmuls
xchg
rorb
jbe
aaa
movsl
add
xchg
addb
dec
ds
icebp
xchg
inc
push
cmpsb
xor
inc
shlb
mov
push
push
dec
mov
push
dec
fdivrs
ss
or
aad
fistl
int3
aaa
mov
mov
lret
add
rcrl
mov
jp
insl
pop
subb
mov
add
xor
fists
out
fstl
add
out
add
xchg
jge
jle
xchg
sub
out
pop
into
pop
cld
dec
jg
add
sub
fwait
mov
add
iret
sub
stos
inc
les
cmpsl
sbb
adc
adc
xlat
add
mov
mov
add
test
out
call
lds
mov
mov
push
jne
loopne
mov
loop
sub
into
and
stos
push
mov
decb
mov
add
fsubs
push
add
icebp
mov
nop
outsl
rclb
mov
fldcw
popf
cmpb
mulb
pop
cmovle
push
jbe
mov
pop
mov
push
dec
inc
stos
lods
call
jl
sbbb
push
test
inc
adc
or
mov
jecxz
jmp
or
mov
jecxz
sub
andl
cmpsb
dec
jle
cwtl
addb
sarl
daa
jmp
clc
sub
add
out
sbb
pop
fdivrl
das
add
test
pop
movsl
xchg
add
or
out
stc
or
xor
sub
inc
xchg
mov
push
add
sarb
mov
xchg
add
pop
xchg
js
fmuls
add
fcmovnu
insb
rorb
jge
sbb
jns
add
pop
adcb
in
sbb
adc
jecxz
push
lods
mov
xor
mov
lea
push
inc
out
and
scas
aam
xchg
cmp
hlt
andb
pop
cli
repnz
xchg
jb
mov
pop
leave
clc
icebp
add
iret
and
add
stc
dec
xor
lret
xchg
add
push
xor
cmp
fwait
add
or
sar
xchg
add
stos
push
add
and
js
dec
xor
add
and
xor
popl
pusha
mov
gs
push
or
xor
cmpsl
in
fists
pop
les
jae
sbb
xchg
cmovns
add
out
and
cmp
push
hlt
fsubs
jl
xchg
cs
inc
imul
enter
push
add
out
xchg
bnd
jp
pop
insb
sbb
jb
shr
mov
jbe
in
add
sub
sub
pop
sbb
sbb
ljmp
or
cli
mov
adc
pop
mov
daa
outsb
loopne
shrb
shll
push
lret
mov
in
adc
repz
loopne
xor
and
add
outsl
imul
mov
pop
add
push
and
popf
xchg
sub
lret
pop
imulb
daa
hlt
add
shrl
sbb
in
xchg
cwtl
jecxz
sahf
push
loope
lcall
push
jl
inc
sub
mov
dec
pop
xor
adc
add
fldenv
lea
mov
xor
adc
insl
sub
pop
repz
cmp
movsl
out
adc
inc
nop
js
cmp
fwait
cmpl
sbb
sbb
pusha
add
into
fcompl
pop
adc
movzwl
add
cmp
loopne
push
cs
cmp
push
dec
sub
pop
or
in
mov
push
xor
int
out
jno
xchg
test
jo
xchg
jecxz
or
or
inc
ja
outsb
mov
mov
scas
fs
push
dec
in
mov
js
add
and
push
inc
inc
mov
pop
adc
aas
sub
jno
stos
test
ja
add
jne
push
xor
xor
shlb
or
jnp
sahf
aaa
push
out
push
pop
mov
mov
mov
cmpsb
jp
pop
jnp
movsb
jle
and
lahf
inc
dec
sub
cwtl
jmp
mov
out
xor
jp
cli
add
push
jo
adc
mov
adc
insl
cld
dec
fwait
sbbb
cmp
push
jge
add
aas
sub
shl
adc
add
mov
add
imul
outsb
in
sub
std
stos
sub
adc
jno
shlb
and
cmpsl
in
nop
xor
adc
sbb
dec
add
imul
repnz
rclb
int3
shlb
xchg
shrl
pop
enter
sub
test
add
fstl
xor
addr16
push
roll
insl
lret
pop
mov
push
mov
sub
lock
or
icebp
add
movsl
xor
ret
dec
out
cmc
pushf
das
lods
push
in
lret
lock
imul
add
xchg
sbb
push
aas
mov
or
dec
mov
in
in
addr16
fwait
bound
int3
dec
pop
add
and
pop
xchg
fcoml
cmovs
inc
inc
call
mov
add
jge
dec
imul
pop
sarb
add
in
or
adc
inc
scas
rcrb
incb
inc
and
aad
lds
mov
imul
inc
pop
repz
and
js
add
data16
int3
and
push
add
xsha256
cmpsb
xchg
push
aam
js
and
pushf
inc
push
aas
dec
sub
js
and
icebp
jge
in
add
ret
add
cwtl
mov
add
into
or
clc
push
mov
aad
jle
dec
in
mov
add
movsb
cwtl
adc
divl
es
test
add
les
mov
pop
sbbl
sbb
mov
insb
rolb
lods
in
ret
ret
lea
push
xor
fsubl
mov
inc
pop
push
ja
shrb
fimuls
dec
mov
add
call
stc
cli
inc
popf
xchg
mov
add
fisubl
clc
xlat
leave
or
rcrb
fldcw
psubb
faddl
ja
add
jnp
popf
add
repnz
fwait
lcall
sbb
xchg
lods
enter
and
mov
loopne
cwtl
push
xchg
mov
test
les
movsl
cmp
test
mov
xor
popf
inc
push
cmp
iret
dec
stos
insl
jo
add
mov
ret
pop
lahf
leave
inc
and
add
nop
mov
add
xchg
xchg
cmp
sub
xor
push
jecxz
cmp
fadds
data16
mov
jl
pop
add
jle
xor
cmp
dec
mov
cmp
jae
adc
or
es
divb
test
adc
mov
aam
jnp
xor
jo
dec
es
mov
sub
int3
add
outsl
lret
in
add
jbe
xchg
add
dec
clc
adcb
add
xchg
mov
filds
hlt
js
pop
and
fcompl
push
mov
imulb
sbb
stos
add
rorl
ficomps
jle
add
mov
in
add
shrb
adcb
push
jbe
inc
xchg
add
adc
xor
jl
in
stc
int
notl
sub
xchg
cmp
add
mov
dec
jmp
jo
pop
pop
aad
push
mov
scas
test
cwtl
jle
mov
cmpsl
repz
pop
mov
sbb
cld
push
jnp
add
inc
cs
out
or
or
dec
jo
cmp
mov
add
or
pop
mov
add
and
jmp
pop
push
mov
push
adc
mov
dec
hlt
cwtl
subps
dec
test
pop
add
mov
or
jp
lahf
test
xor
inc
pop
clc
mov
sub
mov
std
inc
jle
nop
cmpsb
push
rol
adc
ret
inc
mov
pop
stos
mov
push
in
repnz
push
xchg
add
sbb
push
mov
cs
and
mov
add
push
dec
insl
js
lods
xor
inc
stos
pop
adc
add
sbb
adc
pop
push
aam
cmp
lds
ficompl
mov
jmp
push
and
pop
nop
outsl
call
sub
cmp
je
mov
sbb
cmpsb
imul
mov
cltd
add
movsl
cs
sbb
add
push
inc
and
call
loopne
add
mov
mov
add
ret
icebp
ljmp
arpl
fcompl
jp
sub
cli
loopne
popl
clc
mov
dec
lods
pop
std
cmpsb
mov
cmp
les
aas
rorb
and
ret
xchg
cmpsl
jg
add
sub
dec
mov
popf
add
adc
clc
iret
pushw
push
mov
ret
pop
sbb
lods
jb
dec
adc
add
push
inc
pop
sbb
inc
sbb
mov
loope
pop
scas
test
popf
dec
nop
push
mov
ret
sub
pop
add
sub
pop
cltd
inc
mov
cli
push
add
mov
loopne
adc
mov
dec
loope
fsts
cmp
mov
aas
test
bound
fnstenv
add
mov
stos
add
xchg
outsl
int
or
add
push
out
mov
insl
cli
add
add
add
outsw
add
icebp
ss
inc
movsb
call
xchg
fsubrl
mov
out
enter
add
mov
lods
push
pop
icebp
xchg
cwtl
push
sub
pop
inc
mov
add
push
ss
aam
pop
jmp
jne
mov
add
call
and
ds
mov
test
mov
in
xor
push
sarl
dec
jg
adc
jo
adc
add
sbb
test
xor
dec
aam
lock
add
hlt
and
xor
fsubs
xchg
sarb
add
jno
sbb
das
lods
and
xor
jl
jbe
dec
cmc
mov
data16
test
push
fidivl
jl
jne
jo
int3
or
pop
mov
jg
inc
lret
andl
fs
jno
scas
dec
add
ljmp
add
popl
or
pushf
or
push
orl
add
testb
pop
in
add
pusha
cmpsl
les
pop
add
testb
aad
cmpsl
js
add
pop
jp
adc
mov
pop
lret
adc
aaa
cmp
add
jmp
nop
add
loopne
push
sub
add
lods
or
and
notl
add
ret
jmp
push
mov
xor
pusha
add
sbbb
add
or
xchg
adcb
jmp
add
shlb
aas
cmpsb
pop
push
pop
push
out
pusha
mov
add
into
cmp
inc
int
stos
inc
or
and
aaa
addr16
sbb
repz
cld
aas
orl
fdivp
pop
pop
xor
push
cmp
test
add
mov
loop
fistl
hlt
scas
mov
mov
add
jecxz
xchg
addr16
xchg
sbb
stos
or
lock
in
jge
fdiv
clc
xchg
dec
pushf
fiaddl
xor
cld
mov
sahf
popa
cmp
out
lcall
pushf
imul
add
andl
inc
test
sub
or
into
mov
sub
sahf
add
xchg
cmp
rorb
add
jmp
aam
cs
add
mov
lcall
addl
push
sbb
out
shrb
inc
sbb
fcoml
jmp
inc
or
cmp
xchg
loop
test
xchg
fldl
sbb
jmp
mov
arpl
stc
mov
push
sahf
outsl
daa
arpl
pop
mov
popa
dec
rolb
std
xor
int
push
xor
xchg
jns
or
inc
mov
fisttps
cmp
les
jl
cmp
stos
fnsave
or
and
sub
xor
and
xchg
stos
xchg
sub
add
adc
leave
or
sbb
mov
cmp
aam
xor
scas
add
or
cmpsl
mov
inc
test
sub
mov
movsb
add
mov
sub
int3
int3
push
clc
add
lret
test
sub
push
mov
cwtl
stos
sub
rclb
ret
int
cmp
sub
lcall
or
or
ret
and
sbb
add
js
adc
xor
pushf
lcall
xor
loop
mov
repz
in
cmp
in
leave
dec
mov
push
popa
jmp
shrl
pop
xor
in
stos
jmp
or
fsubl
inc
xchg
in
fs
pop
push
pop
jle
sbb
adc
orb
push
push
and
sub
mov
shlb
in
inc
mov
adcb
add
daa
mov
dec
sbb
xchg
sarb
in
insb
stos
jecxz
sub
cmp
out
dec
add
sbb
push
xchg
rolb
sbb
mov
lods
cvtps2pd
add
lcall
fnsave
jl
cwtl
add
pop
jne
cmp
dec
mov
mov
or
bound
xor
js
or
mov
nop
shr
add
cmp
fidivs
add
jno
lds
mov
adc
or
cld
adc
cld
add
or
or
mov
lahf
push
cli
into
push
addb
add
repnz
dec
pop
pop
je
adc
in
movb
adc
mov
repnz
jo
outsl
add
gs
sbb
sub
jle
dec
cmp
ficomps
and
aam
mov
hlt
sbb
popf
addr16
enter
dec
push
pusha
aaa
and
jbe
sbb
test
iret
cmp
xchg
adc
and
jp
enter
xchg
inc
nop
add
lods
mov
adc
adcl
arpl
dec
pop
stos
es
add
add
dec
in
fstpt
ljmp
cmp
sub
iret
outsb
leave
adc
in
mov
stc
add
fidivrl
add
int3
mov
ljmp
push
pop
inc
mov
mov
push
insb
sbb
rolb
add
enter
lock
das
lcall
jle
push
out
xor
imul
aaa
shll
pop
mov
or
jp
cmpb
add
leave
adc
addl
push
mov
jb
mov
mov
das
dec
inc
xor
mov
jbe
cmp
test
sti
add
icebp
dec
adc
cmc
pop
mov
lods
popl
out
es
sti
les
mov
lret
shr
shlb
push
sbb
in
jmp
enter
or
and
push
out
pop
leave
nop
gs
xor
add
ss
imul
lock
pop
push
push
mov
das
sub
lret
add
fsubl
mov
mov
cmp
sub
dec
cmp
imul
icebp
mov
cmc
fstl
push
cmp
xor
sub
adc
and
cmp
jl,pn
xor
or
mov
pop
stc
pusha
xor
dec
jbe
sbb
notl
rorl
push
divb
push
ret
mov
cmc
loopne
movsl
add
pop
aam
push
xchg
dec
jb
jl
or
hlt
mov
push
add
or
andb
inc
push
jns
orl
mov
aam
push
sbb
add
mov
lahf
cmp
mov
inc
outsl
sub
dec
roll
fnstcw
movsb
movsl
inc
in
dec
add
mov
add
mov
pop
mov
lahf
out
mov
and
mov
and
inc
inc
imul
and
pop
push
mov
jns
cli
dec
push
ficoms
stc
mov
adc
jg
fsub
or
sbb
adc
mov
xchg
js
test
sti
loopne
std
dec
add
fidivrs
dec
mov
pop
loope
addl
repnz
xchg
xchg
jo
inc
jbe
aas
mov
les
leave
add
add
pop
add
adc
mov
push
setle
repnz
mov
mov
ljmp
sub
fadds
in
mov
cmp
adcb
pop
ss
pop
add
add
inc
inc
imul
es
rol
inc
mov
pextrw
push
sbb
cli
popa
subb
mov
cwtl
cmp
adc
add
ja
mov
jno
out
movsl
scas
mov
cmp
mov
add
or
add
dec
pop
test
loopne
xchg
sbb
adc
inc
jp
rclb
add
lret
jmp
shl
jl
pop
outsb
pop
mov
movsb
sbb
out
add
xchg
sub
shll
les
push
add
and
jle
movl
es
xchg
jp
adc
cmp
xlat
sbbb
xor
and
mov
or
xchg
pushl
popf
sub
loopne
shlb
pop
add
lea
shlb
add
inc
sbb
push
adc
ljmp
mov
in
test
sub
or
cmp
push
pop
push
filds
mov
loop
mov
nop
push
loopne
and
add
pop
push
xchg
push
bound
mov
adc
sbb
sub
cmp
add
add
popf
pop
or
pop
sti
loope
and
lock
movsb
pushl
mov
add
sub
xlat
fs
aam
dec
scas
or
sub
add
mov
sub
lock
push
scas
and
jbe
xor
pop
loop
push
xor
loopne
xchg
lret
enter
jbe
js
incb
or
adc
pop
jge
es
cmpsb
adc
cmp
sbb
add
jle
dec
dec
dec
add
les
lcall
add
pop
push
mov
shrb
jo
sbb
ret
movsb
pop
roll
movsl
mov
out
pop
stos
jp
test
and
inc
call
add
in
and
mov
cmp
add
jge
roll
mov
pop
gs
sbb
cmovns
inc
sub
add
sub
out
leave
add
inc
icebp
lret
push
adc
orb
shll
repz
notb
pushf
out
ret
or
or
int
loop
popf
aam
xor
pop
jmp
jb
jp
push
adc
add
mov
add
mov
pop
add
in
scas
dec
push
adc
and
pop
movsb
add
fldenv
dec
fs
mov
jnp
cmp
test
or
add
xorl
loopne
add
sbbb
push
mov
mov
pop
pusha
jge
je
mov
out
outsl
and
mov
xor
mov
lar
mov
dec
and
je
and
add
mov
jmp
add
xchg
pop
dec
scas
xor
push
jb
or
ret
add
ljmp
cmp
adc
sub
lret
stos
sbb
add
movsb
adcb
inc
mov
ret
inc
mov
xor
aaa
mov
fwait
roll
jne
cli
mov
jmp
xchg
test
hlt
add
mov
sbb
sar
mov
xor
xor
and
shlb
es
add
lds
pop
dec
les
mov
mov
mov
sbb
add
add
pop
loope
ret
cmpsb
fs
lcall
mov
push
cmp
add
xor
ret
aas
cmpsb
add
push
sti
push
pop
enter
add
negb
dec
fcoml
inc
cwtl
or
jge
add
arpl
sbb
push
sub
jl
add
push
mov
jne
sub
nop
add
test
sahf
mov
fcompl
mov
in
mov
and
ficoms
aam
push
or
popa
adc
addr16
xchg
push
add
pminsw
adcb
xor
aad
lret
jo
cltd
mov
scas
out
pop
mov
push
sbb
ja
jmp
xchg
xor
pop
pop
mov
insl
iret
add
mov
testl
leave
and
pop
sbb
dec
pop
jne
add
push
mov
add
aam
fldl
pop
push
pushf
inc
add
jae
and
mov
int
mov
cmp
add
sbb
arpl
mov
dec
into
inc
and
daa
cmp
cli
sbb
in
and
negl
mov
sbb
sbb
stos
add
sub
mov
ret
inc
loopne
jb
add
jmp
sub
or
rclb
test
sbb
and
add
sbb
mov
mov
add
or
push
add
cmp
add
stc
push
jg
test
jb
xchg
mov
and
jle
add
mov
sbb
mov
mov
shr
lret
rcrb
loope
mov
inc
push
cwtl
and
mov
mov
xchg
xchg
incl
add
mov
pop
aam
rol
and
lahf
aad
pop
lret
push
mov
adc
lods
adc
push
cmp
les
out
pop
jge
movsb
ljmp
add
sbb
lea
mov
arpl
fldl
data16
mov
add
orl
repz
test
or
adc
lock
fisubrs
fs
out
adc
add
jo
in
loopne
jl
xchg
jbe
xchg
cmp
xor
mov
neg
or
icebp
or
mov
cmc
inc
dec
sahf
andl
inc
sub
adc
and
loope
add
xor
mov
sbb
xorb
test
or
and
add
les
popf
int
add
add
idivl
push
jns
add
jp
rep
inc
inc
loopne
pusha
inc
movsb
imul
add
repnz
les
lods
mov
ror
jmp
lds
push
movsl
lods
xor
out
push
add
push
insl
cmpsb
data16
mov
xchg
dec
cli
cmp
xor
add
es
sub
add
int3
bound
movsl
js
sbb
push
aas
cmp
arpl
pop
cmp
bound
aaa
loop
add
mov
mov
jecxz
add
scas
mov
lcall
inc
push
pop
push
rol
and
add
fs
rol
inc
cmp
imul
cmp
dec
dec
int3
add
jecxz
addr16
sbb
xor
mov
std
mov
mov
xadd
loope
pop
repz
std
scas
jl
imul
xchg
inc
enter
in
pop
in
lds
aam
aad
fcoml
mov
daa
fisttpll
mov
or
mov
ds
jmp
ja
scas
push
jns
stos
and
test
addb
lds
lock
add
cmp
in
iret
add
push
hlt
add
pusha
insb
aam
or
sti
xor
add
add
jbe
mov
pop
add
push
cwtl
arpl
and
pop
out
ljmp
add
repz
jb
cmp
add
jp
lcall
test
lods
adc
in
jae
xchg
inc
fadds
ja
out
add
xorl
mov
jae
pop
leave
cld
dec
add
stos
movsl
pop
sbb
push
ret
and
pop
test
inc
cmp
add
cmp
inc
pop
xor
add
dec
jecxz
sub
repz
add
leave
xchg
popa
add
xchg
test
pop
or
jge
cmp
dec
cmp
add
aam
adc
arpl
mov
xlat
pop
pusha
sbb
roll
movsb
mov
mov
cs
xchg
cli
ja
pop
pop
jno
push
divl
rcl
cmp
test
mov
xor
mov
push
pop
in
push
push
aam
add
push
test
movsb
sub
ljmp
or
jno
pop
lahf
add
and
dec
push
ret
aam
in
push
or
stos
jo
js
xchg
dec
add
addr16
mov
rcrl
sub
test
subb
pop
push
cmpb
rolb
mov
jle
addr16
add
outsb
adc
mov
sub
jp
lgs
and
pop
xchg
fidivrs
into
fs
call
inc
and
pop
jmp
in
push
and
jmp
cld
add
xchg
pusha
test
outsl
insb
stc
mov
rcrb
jle
xor
adc
es
pop
scas
ds
mov
jl
mov
pop
adc
push
mov
inc
jecxz
push
in
pop
int3
cmp
aaa
fwait
xchg
add
orl
cmp
repnz
leave
dec
clc
in
mov
or
popf
inc
sbb
mov
inc
xor
mov
stc
sbb
xor
xorb
add
lret
or
inc
lahf
clc
fidivs
addl
jle
fidivrl
cmp
outsl
mov
mov
dec
cmpsb
cmp
shrl
xor
loope
pop
inc
nop
leave
lret
add
ljmp
inc
mov
add
mov
test
mov
lea
xor
popa
lods
fildll
scas
cmp
cmp
pop
das
push
sbb
push
hlt
jg
inc
inc
adc
mov
or
add
movsb
lods
sti
fdivr
pop
and
add
xchg
fsubl
scas
push
insb
clc
xlat
mov
xchg
and
dec
add
mov
xchg
test
xor
mov
cwtl
shll
mov
adc
jle
pusha
cli
add
outsl
xchg
add
or
jge
add
int3
pop
pop
rcrb
add
testl
push
mov
xchg
pop
test
into
inc
adc
push
cmp
add
cmc
nop
jle
cld
gs
sub
xchg
loopne
mov
repz
adc
pop
imul
xlat
idivb
sbb
mov
andl
add
cmpsb
inc
xor
fdivl
jecxz
ja
loopne
add
or
jl
cltd
add
push
loop
iret
add
push
mov
jg
mov
dec
insl
push
ss
pop
sub
fldl
ja
mov
arpl
testl
sbb
jne
xchg
adc
add
mov
inc
add
shlb
mov
shrb
mov
sub
movsb
pop
inc
fdivrs
daa
add
mov
pusha
repnz
aad
mov
inc
shlb
sub
in
inc
add
ret
and
addb
fs
arpl
pushf
and
es
or
insb
je
les
lret
hlt
mov
dec
add
clc
int3
sti
sbbl
xchg
push
or
out
inc
pop
inc
mul
je
cmp
cld
push
orb
mov
arpl
pop
add
ret
jo
int
mov
xor
movb
xor
push
dec
push
dec
ret
mov
cmc
jae
push
add
pop
mov
and
stc
clc
inc
in
jle,pn
pop
dec
loop
lcall
in
add
addr16
ljmp
inc
test
imull
movsb
pop
das
sbb
lds
pop
jbe
std
add
xchg
or
data16
lds
add
push
outsl
cmp
mov
ss
das
push
add
xor
test
push
add
addl
cmp
adc
jno
add
xor
int
adc
scas
xchg
add
fnstsw
pop
cmpsl
fld
lret
add
mov
fsubrs
imul
das
dec
out
cmp
ja
sub
sbb
and
add
dec
popl
add
mov
jno
cmp
call
inc
std
adc
nop
xchg
add
jno
hlt
test
cld
test
xor
imul
pop
or
fdivs
xchg
mov
aad
add
ret
add
stos
add
mov
push
mov
xlat
inc
sub
imul
push
jae
or
xor
or
lock
add
int
lock
and
pop
lret
je
pop
pop
xor
leave
cmp
fmull
add
mov
jae
inc
xlat
in
xor
cmp
test
mov
mov
out
aas
and
add
imul
add
pop
rcll
es
cli
and
or
push
idiv
inc
gs
int
loopne
push
jge
bound
lds
or
add
or
xchg
pusha
incl
loopne
jmp
inc
lret
jb
out
jbe
push
mov
sub
imulb
in
icebp
in
je
ror
jae
aad
cmp
and
repz
mov
movsl
push
mov
sti
movsb
ja
jge
inc
or
dec
mov
pop
scas
dec
pop
add
jnp
jle
or
pop
add
lods
ljmp
ret
in
jmp
jno
fldcw
test
add
xor
mov
lods
jl
cmp
jp
pop
rclb
add
jbe
pop
mov
mov
mov
add
lods
push
jecxz
hlt
ret
add
mov
test
and
inc
mov
push
nop
inc
stos
sarl
test
pop
jg
adc
pop
mov
clc
mov
push
xchg
add
pavgb
fcoms
mov
push
mov
pusha
dec
sbb
xchg
sti
aaa
add
pop
mov
movsb
filds
cmpsl
scas
mov
imul
mov
insb
add
mov
jp
add
push
icebp
or
ljmp
adc
inc
xlat
popa
pop
dec
adc
bound
inc
scas
rclb
lock
mov
add
repz
divb
sbb
mov
mov
stos
out
mov
sti
jle
push
mov
scas
outsl
pop
stos
ret
inc
push
add
cmp
mov
mov
cmp
jmp
inc
pop
push
movsb
mov
jecxz
pop
jnp
jno
sub
add
pop
cmp
pop
pop
sub
lods
test
dec
push
popa
add
push
mov
pop
sub
dec
lret
push
repnz
jae
sbb
call
pop
stos
pop
mov
push
mov
je
jo
add
fadd
mov
add
xchg
jl
lahf
int3
shrl
add
mov
jb
pop
mov
into
mov
pop
cmpsl
cmp
mov
cmp
setbe
jle
sbb
loop
pop
cmp
jmp
inc
xor
pop
popa
and
inc
add
shll
add
pop
fisubl
push
mov
stos
or
scas
data16
add
jecxz
push
cltd
add
iret
faddl
ret
adc
mov
dec
outsb
mov
out
lret
sbb
pushf
dec
in
subl
sub
sub
or
loopne
adc
testl
add
xor
dec
dec
cmpsl
dec
shrb
adc
add
bound
test
dec
clc
or
mov
addb
and
popa
cmp
call
or
dec
inc
add
lea
inc
dec
jmp
add
lret
mov
mov
lock
arpl
repz
add
rol
nop
loopne
out
add
mov
enter
add
fistl
lcall
dec
aam
punpcklbw
jb
mov
adc
add
cs
call
add
mov
pop
iret
call
ret
push
mov
in
dec
pop
jbe
pop
mov
add
leave
mov
mov
imul
lret
jge
push
cltd
dec
mov
ror
mov
bound
ret
fcomi
out
mov
into
outsl
ds
add
pop
rcl
jge
add
stc
rclb
loopne
pop
jge
push
xchg
mov
pop
add
test
sub
insb
int
sub
mov
in
shrb
popf
cltd
sub
sub
add
sbb
xchg
int
out
jae
mov
rorb
sub
or
fisubrs
add
mov
cmpsb
lds
lret
xchg
arpl
fscale
dec
mov
mov
pop
cmp
cwtl
dec
rcl
push
enter
mov
xlat
cli
or
pop
pop
mov
mov
xchg
push
add
ficoml
test
es
sbb
push
sub
push
jmp
pop
loopne
aas
mov
lods
jp
jge
push
xchg
add
pop
outsb
je
xchg
enter
add
iret
loopne
addl
mov
jp
ss
lock
daa
popa
pop
faddp
enter
scas
dec
jbe
push
call
in
stc
pop
rolb
sti
mov
jmp
mov
adc
sub
hlt
faddl
shll
in
push
outsb
lds
mov
stos
inc
ja
mov
push
jle
pop
xor
add
mov
lods
mov
ja
add
and
int3
stos
jbe
or
test
testl
push
sbb
mov
cmp
and
or
jae
and
dec
daa
inc
mov
add
rolb
cmp
rcll
xchg
out
and
mov
dec
adc
push
bound
faddl
jns
enter
fsubrs
pop
sbb
into
cmp
loopne
mov
inc
or
mov
add
push
pop
sbb
xchg
out
pop
leave
push
add
push
pop
mov
pop
loope
mov
insl
mov
aam
mov
pop
sbb
nop
inc
dec
add
call
add
dec
sbbb
dec
adc
dec
adcb
lods
lods
lret
hlt
xchg
add
jnp
pushf
sbbb
dec
mov
sarl
popa
lret
mov
dec
sbbb
divb
pop
int
add
fs
ja
jbe
ret
pop
inc
push
sub
xchg
pop
inc
pop
inc
test
add
out
aad
dec
push
jge
pop
cld
or
fwait
rolb
cmpsl
push
mov
subb
ret
push
mov
or
sbb
and
mov
cmp
and
adc
xor
out
cmc
in
lods
sbb
dec
cltd
dec
pusha
push
movhps
lods
cmpsl
push
or
jge
mov
xchg
scas
andb
lea
arpl
sbbb
in
mov
dec
xchg
mov
push
xchg
hlt
add
loope
fbstp
dec
add
mov
xchg
or
in
cs
add
inc
add
mov
pop
sub
rcl
add
cmp
mov
or
mov
clc
push
add
cmc
addl
add
inc
add
lds
fneni(8087
je
sbb
les
sbb
mov
mov
imul
std
sbbb
add
and
jp
sbb
mov
jne
mov
add
push
mov
cmp
add
mov
inc
pop
xchg
and
pop
sbb
das
jg
add
lret
rorb
insb
pusha
xlat
inc
mov
hlt
mov
add
sahf
stos
inc
inc
pop
sub
add
int
xchg
sbb
jb
outsb
sbb
fs
add
test
int3
push
dec
mov
and
call
or
cltd
shrd
add
jg
xchg
xchg
mov
inc
push
roll
add
inc
pusha
xchg
inc
test
xor
and
testl
out
add
mov
stos
adc
movsl
mov
fcoms
pop
and
mov
push
or
mulb
setne
sarb
insb
pop
sbb
jns
ficomps
leave
call
sub
mov
add
in
cmp
jo
pop
data16
lock
outsb
daa
mov
sub
sub
out
rcrb
mov
pop
lret
arpl
xchg
in
sti
rcrb
scas
icebp
mov
fsubs
js
imulb
clc
jb
or
hlt
xor
ret
loopne
stc
leave
add
and
add
sbb
movsb
daa
xchg
int
xor
jp
pop
sbb
xchg
dec
dec
into
add
pushf
xor
adc
out
push
push
mov
add
call
sbb
jle
push
aaa
popa
testb
mov
clc
add
fsubl
cli
adcl
rolb
pop
inc
cli
shrl
sahf
out
xor
adc
test
inc
push
pusha
pusha
sbb
popf
lods
add
sbb
add
leave
pop
sti
shlb
cmp
or
loop
cmp
out
add
inc
lock
out
add
dec
repnz
jbe
or
imul
xor
add
fwait
enter
dec
bound
mov
sarb
push
add
dec
xchg
mov
add
mov
popa
sub
add
inc
in
xchg
mov
ret
add
cmp
jl
pop
push
mov
mov
mov
cmp
ds
add
dec
mov
add
iret
dec
test
out
jae
push
cli
pushf
jne
rcrb
mov
mov
add
shll
jno
jp
ljmp
adc
test
mov
popf
addb
sub
cmp
cmp
mov
mov
xlat
adc
rcll
cmc
add
push
insl
add
or
sbbb
add
push
leave
call
mov
xor
out
pop
mov
pop
ds
add
in
xchg
add
xorl
pop
pop
sti
jb
cmpsl
test
cwtl
pushf
push
cmp
mov
ss
nop
ret
xchg
pusha
pushf
cmp
stc
cli
sub
adc
mov
mov
mov
xor
cwtl
add
stc
loope
test
or
push
out
cmp
push
cmpb
adc
js
aam
pop
add
push
lahf
sub
add
dec
cmp
fnsave
fwait
movsb
xchg
clc
jo
hlt
mov
and
mov
push
add
shr
popf
mov
cmp
push
push
int3
roll
add
inc
dec
and
pusha
enter
push
subl
shrb
sbb
jo
cmp
jmp
inc
out
lods
std
out
dec
lock
xlat
lds
pop
negl
pop
add
and
dec
add
sub
lret
xchg
or
test
sbb
adc
or
cmpsb
lods
mov
gs
js
xchg
shl
inc
sbb
add
test
enter
add
or
add
add
les
pop
ss
movsb
mov
pop
ret
jl
sbb
add
sti
mov
or
pusha
in
ss
adc
aad
stc
sbb
es
cmp
or
cmp
mov
lahf
xor
pop
inc
push
mov
and
sti
cmp
push
daa
fbstp
in
jo
add
test
lock
push
push
or
adc
xchg
or
push
dec
es
pop
incl
pop
test
sub
mov
nop
shl
add
adc
je
faddl
push
or
push
add
xchg
mov
lock
dec
mov
aam
pop
or
sub
push
insl
mov
add
faddl
xchg
ss
jbe
jp
add
and
mov
sbb
sti
xchg
cmp
sbb
inc
rcrb
and
addr16
out
push
or
cs
ficoml
lds
sub
and
or
cmp
mov
dec
insb
ds
in
stc
inc
add
jnp
or
jo
add
fsubrs
push
loopne
add
sbb
inc
aam
lods
stos
push
les
pop
imul
movsb
add
stos
data16
in
xchg
mov
mov
jno
xor
add
scas
push
add
loope
add
int
jge
mov
adc
push
push
hlt
jns
fiaddl
pop
je
xor
stc
call
fwait
ret
inc
sbb
sbb
inc
lods
sbb
adc
es
xor
xchg
lret
xchg
push
add
stc
ret
pop
notb
xchg
jae
and
or
jmp
movl
jbe
add
add
movsl
add
pop
sub
mov
add
rclb
popa
xchg
jns
dec
inc
rolb
js
push
dec
lret
push
nop
add
pop
test
mov
dec
add
cmp
int3
ss
pop
jecxz
push
jl
ficoms
or
pop
jne
add
pop
test
xchg
add
add
sbb
jno
pop
addl
sub
add
ja
pop
out
sbb
xor
fnsave
lods
or
add
aas
xorb
jo
lret
clc
cmp
inc
cmp
mov
rorl
fstl
ss
inc
cmpsb
xor
add
nop
pop
adc
xchg
jmp
aad
pop
int
add
leave
shrb
pop
call
jp
pop
jmp
pop
inc
mov
out
add
icebp
add
pop
sub
cmp
lods
mov
adc
adc
cmp
aam
lcall
insl
shlb
add
les
sbb
ljmp
daa
cmp
ficompl
insb
add
or
out
xor
arpl
push
stc
scas
adc
fidivrl
push
mov
loop
cmpsb
sti
xchg
testb
add
lods
inc
stos
add
testb
xchg
gs
lock
push
mov
xorb
into
stos
xor
aas
popf
cmc
in
adc
sub
inc
jp
stos
jb
xchg
nop
xchg
dec
movsl
out
std
subb
clc
cli
leave
add
fnstenv
xchg
sub
dec
in
mov
add
jge
cmpsb
dec
or
or
cmp
add
ds
movsb
popf
mov
hlt
dec
add
test
rcrl
int
rolb
out
cmp
rolb
rcl
movsb
inc
loope
xchg
enter
xor
hlt
loop
push
sbb
jns
xchg
fs
pop
fdivr
jmp
mov
rcll
mov
push
add
pop
sub
mov
call
pop
add
nop
inc
adc
sub
xlat
das
jns
add
es
out
add
and
mov
movsl
cltd
add
and
pushl
adc
mov
sbb
mov
shlb
push
mov
pusha
add
negb
inc
push
lock
repnz
jnp
adc
mov
pop
cld
stc
dec
testl
rorl
inc
add
call
pop
out
gs
incb
aaa
dec
xchg
xchg
rcl
repz
insb
les
in
xor
xchg
xor
cmp
inc
bound
push
xchg
add
jb
add
cmp
cli
pop
dec
lret
lea
repz
add
dec
imul
mov
sub
mov
lret
ficoml
cmp
mov
pop
mov
mov
or
adc
add
cli
out
dec
xchg
js
int
push
mov
mov
ret
cmp
cld
pop
cwtl
addl
rcrb
lret
add
ficoml
sub
and
jae
scas
mov
cwtl
or
lods
sub
xor
sbb
sbb
jmp
adc
dec
xor
cld
and
jle
pop
mov
leave
ds
mov
add
cmp
mov
pushf
add
inc
xchg
dec
cld
movsl
sub
mov
popa
ret
jno
and
adc
ficompl
and
add
outsl
inc
pop
lods
jbe
dec
add
insl
mov
xlat
rcrb
mov
dec
push
add
lret
jecxz
add
testl
pop
inc
xchg
fiaddl
add
mov
loopne
popa
repnz
sub
mov
add
jg
add
daa
inc
xchg
fcoml
mov
sbb
pop
das
push
sbb
sti
adc
addr16
ds
pop
rcr
pusha
sbb
sub
movntss
test
pop
inc
incb
cmc
enter
jmp
stos
ds
mov
fistps
jnp
mov
mov
test
or
mov
add
insb
xlat
jno
rcrb
pop
sub
xor
out
pop
aas
mov
push
sub
mov
add
cmp
icebp
add
aaa
inc
sbb
add
mov
xlat
push
std
adc
leave
dec
mov
fdivs
aas
jno
add
mov
sub
lock
imul
inc
or
cld
add
aaa
cmpsl
lcall
int3
data16
stos
push
pop
mov
push
add
pusha
fbld
enter
loopne
cmp
mov
jl
stos
inc
xor
fildl
mov
daa
add
les
ffreep
add
cmp
fwait
jl
xchg
aam
mull
jo
add
clc
out
shrd
into
insl
dec
cwtl
add
test
push
mov
mov
ret
rcrl
inc
add
mov
sub
cmp
jbe
and
mov
pop
pop
lret
ror
push
jecxz
sub
xor
or
pop
addb
cmc
icebp
add
mov
rcrb
cmp
sub
scas
jae
shlb
mov
icebp
filds
mov
push
dec
pop
mov
les
mov
inc
push
add
sbb
add
jle
xchg
add
xor
push
test
cwtl
add
addr16
lahf
rcrb
add
mov
loopne
push
pop
cmp
mov
int3
mov
lds
or
dec
and
ret
push
and
orb
lock
jne
push
incb
push
xchg
add
fdivrl
mov
xchg
add
pop
xchg
push
movsb
test
jle
lods
popl
in
stos
popw
pop
jp
ret
sub
mov
js
cmp
push
sub
add
lods
les
mov
jno
iret
rolb
lock
add
jo
fistpl
test
xchg
push
stos
xchg
pop
sub
inc
hlt
stc
sbb
add
loopne
shl
pop
sbb
mov
enter
inc
mov
push
std
flds
or
sbb
push
outsl
cmpsl
xor
sbb
add
jmp
cli
psubsb
push
push
js
push
inc
jne
fisttpll
adc
pop
cld
add
cmp
clc
xchg
push
mov
mov
push
push
mov
je
pushf
pop
xchg
ljmp
hlt
or
pop
bound
jae
pop
xorl
cmpb
scas
mov
shrb
adc
sbb
jmp
lcall
cli
mov
xor
add
inc
sti
mov
dec
sbb
mov
jecxz
xorb
ret
fsts
add
add
mov
test
rcll
mov
xchg
jb
jge
stc
xchg
xorb
punpckldq
mov
xlat
test
add
sti
and
adc
jae
mov
sbb
jg
jns
sbb
adc
test
dec
popa
push
leave
negb
sub
push
mov
jb
push
sub
cmp
subb
loopne
add
sbb
cmpsb
adc
pop
fists
mov
ss
jp
add
adc
ret
stc
mov
repnz
adc
cmp
rol
cmp
lds
fdivrs
das
out
movsl
clc
push
and
dec
jp
jns
lods
clc
stc
enter
xchg
dec
popa
int
cmp
popf
adc
add
mov
mov
inc
pusha
std
ror
dec
jle
push
outsb
dec
lock
add
aas
test
fimull
inc
pop
inc
inc
and
mov
fnstcw
inc
fdivs
std
push
lret
enter
adc
mov
add
adc
rcll
jg
mov
ja
lods
call
fidivrs
or
xor
loopne
add
mov
cmpsb
cmp
sbb
enter
lods
std
add
sbb
insl
add
cmpsb
lcall
enter
mov
ret
ljmp
adc
xchg
in
or
fcomps
mov
movsb
mov
jb
shlb
js
sbb
push
lahf
pop
cs
leave
mov
jnp
push
clc
rcrb
popf
mov
sbb
jecxz
mov
sub
mov
into
adc
js
jle
sbb
mov
xor
daa
popa
push
adc
add
cs
xor
fildl
add
inc
pop
enter
out
mov
jo
add
es
push
pop
or
and
xor
fld
fwait
int
mov
mov
es
les
adc
aad
test
test
cmpsl
jne
insl
inc
pop
mov
add
enter
add
inc
nop
js
roll
push
addr16
xor
and
push
shlb
aaa
pop
cld
sbb
xor
mov
xchg
mov
enter
add
je
cld
outsl
dec
shlb
stos
dec
jge
inc
cwtl
ret
push
or
cmp
lods
or
andb
mov
jno
add
jle
int
mov
enter
aam
fdivrs
sub
sbb
les
icebp
rcrl
xchg
or
dec
pop
imull
sub
push
rcll
lahf
dec
cmc
inc
add
sub
add
jnp
mov
sbb
repz
xchg
lahf
in
or
add
arpl
fwait
add
add
adc
mov
in
add
js
xor
xchg
lock
outsb
fcmovnb
or
and
imul
je
mov
jg
scas
sbbb
add
fs
dec
aaa
xchg
and
rorl
push
sbb
mov
outsl
imul
std
and
ret
in
jne
cmpb
fimull
je
sub
stos
xor
jecxz
push
mov
add
cwtl
addr16
mov
jg
mov
in
dec
hlt
pop
cmc
mov
ret
pop
and
adc
pop
sbbb
je
cwtl
loopne
and
popf
int
dec
pop
jno
xor
cwtl
dec
ret
and
sbb
add
sbb
lcall
ror
cs
or
dec
push
adc
rolb
dec
iret
jmp
fmull
jl
ljmp
lods
subb
sub
in
or
pop
xchg
push
add
fsub
leave
pop
adc
popa
nop
push
push
movsl
sub
mov
add
add
icebp
sub
lahf
add
dec
pop
out
dec
inc
jo
stos
cmpsb
sub
inc
xchg
lcall
pop
xchg
out
dec
clc
jle
xorb
nop
push
into
addr16
testb
pusha
movsb
xor
mov
movb
mov
and
ss
filds
mov
test
add
jge
rcrb
lock
jno
xor
shlb
push
sub
push
out
cwtl
and
jb
jae
sbbl
add
imul
ljmp
jns
incb
out
addb
mov
xor
pop
and
andl
inc
movsb
jl
add
adc
and
test
int3
add
pop
or
testl
leave
js
out
je
xor
jo
lods
or
dec
mov
in
add
dec
cmpsl
out
lcall
jge
pusha
mov
scas
jle
add
fs
roll
xchg
lock
gs
inc
jb
lret
rorb
push
movsb
jnp
push
pop
cmc
cmp
pop
icebp
popf
rclb
repnz
add
daa
frstor
mov
fcoml
adc
and
jg
shlb
ret
int3
into
sti
adc
and
aad
test
addb
and
in
js
pop
xchg
jp
sub
xchg
push
out
xchg
std
push
dec
add
mov
popf
pusha
out
pop
outsl
testl
xchg
mov
ss
mov
add
in
jo
mov
xlat
add
and
pop
fs
push
inc
xor
enter
push
aam
xor
and
xchg
add
mov
js
or
cwtl
and
push
mov
loop
dec
daa
dec
out
ss
sbb
lea
inc
push
ficoms
fs
add
call
xor
jo
icebp
scas
mov
ss
idiv
dec
aas
aaa
adc
and
das
pop
push
mov
adc
ss
add
jge
xchg
and
cs
jl
add
ss
pop
and
fdivl
pushf
and
mov
push
add
mov
pop
xor
pop
mov
cmc
dec
mov
rcrl
aad
xor
lret
adc
fdivs
sub
xor
js
movsb
stc
sub
iret
and
sub
ljmp
adc
mov
pop
mov
inc
pop
dec
fisttpll
xchg
mov
adc
imul
push
cmpsl
add
imul
jne
sbb
loop
sti
sbb
sbb
sti
clc
and
push
pop
rclb
sbb
into
test
scas
call
cmp
push
and
xor
icebp
mov
adc
aam
pop
jbe
cmp
aad
push
sub
sbb
mov
sbb
flds
shll
movsl
xor
push
dec
xlat
xchg
pop
je
dec
sub
cmp
xor
or
add
mov
sub
push
cmpsl
call
add
rol
inc
hlt
add
call
pop
lock
xchg
adc
mov
add
loop
and
xor
xchg
mov
adcb
add
test
arpl
jno
jo
cwtl
or
add
add
sarl
mov
orl
movsl
or
sbb
repz
xor
add
xor
or
and
jae
rcrb
inc
rcll
jae
sbb
aam
add
mov
add
ja
test
jp
cmp
ret
xor
ss
add
dec
mov
add
fdivrs
mov
mov
xor
in
cli
int
loopne
not
adc
adc
iret
or
adc
cmp
mov
adc
out
add
mov
into
and
mov
popa
adc
pusha
cld
mov
mov
jnp
das
add
adc
cwtl
roll
inc
or
sbb
mov
sbb
inc
test
and
fisubl
shrl
cmp
movl
sbb
aad
add
jnp
mov
adc
clc
add
xchg
xchg
mov
mov
mov
cmp
movmskps
daa
insl
inc
cwtl
test
mov
lock
or
pop
fmuls
sub
mov
inc
pop
out
fistpl
xor
leave
clc
fsub
pop
mov
je
sbb
cmp
xchg
roll
add
and
adc
xchg
push
je
add
push
cli
clc
sub
add
and
cs
scas
inc
add
adcb
and
lea
inc
inc
mov
xchg
add
lods
pop
pushf
add
lea
rcl
xchg
outsl
cmc
and
inc
sbb
sub
lret
je
dec
pop
andb
add
push
aaa
or
call
xchg
add
cmp
add
rcl
sbb
sbb
stc
pop
inc
movsb
dec
lret
adc
pushf
ja
outsl
xchg
push
push
fsubl
js
jl
mov
sbb
insb
jmp
sub
lds
pop
adc
lods
add
lahf
nop
pop
pop
cltd
push
loop
popf
out
fs
mov
neg
clc
xor
adc
scas
mov
sub
out
and
xor
outsl
int
xor
push
dec
add
jae
repnz
ljmp
xchg
push
jp
and
sbb
mov
add
xchg
xchg
add
fistps
ja
pop
fiadds
jp
push
xlat
add
gs
and
push
sarb
mov
mov
inc
add
adc
or
and
pop
mov
and
jnp
cmpb
mov
decb
dec
out
adcl
mov
or
mov
mov
inc
sub
inc
outsl
adc
xor
addr16
mov
lret
mov
adcb
pop
jecxz
or
or
jmp
mov
or
mov
les
dec
sbb
mov
add
mov
and
add
mov
add
push
jle
adc
add
and
xchg
arpl
mov
and
cmp
cwtl
add
sbb
mov
mov
pusha
pop
into
sbb
int3
in
cmp
cmp
sub
push
push
jecxz
loopne
dec
nop
rcrb
mov
inc
in
xchg
mov
sahf
add
ljmp
dec
lahf
pop
fstpt
xchg
out
adc
je
sbb
ffree
and
rorb
roll
push
mov
inc
enter
mov
add
xor
cli
cmp
sbb
add
test
mov
push
push
shrb
mov
dec
rorl
jb
add
aad
andb
stos
je
pop
dec
nop
out
xchg
pushf
shlb
test
add
lods
cli
lret
pop
jo
add
insl
adc
and
rcr
pop
pop
aaa
sbb
push
popa
popa
xlat
in
mov
cmp
add
bnd
jae
adcb
xchg
inc
bnd
dec
out
addl
ret
es
pop
lds
jns
in
call
lock
add
mov
loop
js
push
out
xchg
sub
lahf
add
pop
add
cmpsb
mov
fcmovnb
cmp
push
inc
js
cmp
ret
push
lahf
dec
add
repz
sub
mov
aam
sbb
mull
fadds
cwtl
add
adc
lcall
xor
mov
xchg
cli
cs
add
in
pop
arpl
sar
lahf
xor
out
xchg
adc
jp
jmp
push
dec
inc
hlt
sub
push
jns
inc
mov
test
pusha
lret
pop
add
cmp
repnz
bound
xchg
hlt
repz
icebp
push
movsb
in
adc
test
inc
hlt
push
jns
sbb
lock
adc
into
jno
mov
add
ljmp
f2xm1
dec
cmc
test
cmp
inc
push
jns
pop
push
cmp
pop
mov
test
inc
pop
inc
mov
sbb
imul
shrb
mov
mov
xor
jo
fadd
jecxz
popa
and
adc
rolb
and
stc
jmp
out
sbb
adc
fs
adc
shlb
pop
shrb
xor
shrl
add
pop
frstor
andb
xchg
push
adc
lds
sbb
mov
sub
mov
pusha
clc
add
mov
push
mov
xchg
pop
xchg
dec
gs
popf
push
or
shlb
pusha
pop
push
inc
mov
inc
enter
nop
jl
xor
mov
dec
push
jno
xchg
and
pusha
mov
popa
enter
iret
lock
cmp
push
add
test
xchg
sub
mov
or
int3
loopne
jl
sub
or
mov
adc
lea
mov
inc
outsb
test
call
xor
gs
cmp
push
int3
insb
pop
add
adc
cmp
loopne
mov
add
mov
js
or
pop
nop
add
adc
add
mov
xor
and
or
iret
and
lods
add
movsb
pushf
dec
jge
mov
int3
or
and
add
and
in
sbb
jg
js
xchg
inc
or
cmp
add
or
sbb
test
add
push
and
movsb
mov
outsb
mov
mov
jo
or
ds
andb
adc
or
test
test
outsl
shlb
jns
lods
ret
jbe
fisttpll
daa
add
das
sub
inc
cmpb
push
and
or
mov
push
xchg
add
and
int
add
push
cltd
xchg
push
hlt
sbb
cmp
sub
iret
cwtl
mov
or
fadd
sbb
sub
add
pushf
loope
jmp
lret
shrb
fistl
rol
adc
mov
add
add
fstps
and
mov
push
jmp
lret
loopne
add
mov
xor
pop
and
rclb
push
insl
or
pop
dec
orb
xor
add
add
dec
push
adcl
dec
shlb
add
adc
punpckhwd
or
inc
push
inc
inc
push
cltd
mov
push
inc
xor
sub
cmp
adc
je
cmpsl
outsl
in
add
out
inc
shl
mov
push
add
sub
arpl
orb
hlt
add
push
push
loop
inc
out
popa
mov
test
cmp
and
mov
jo
pusha
mov
rclb
and
fs
icebp
jp
dec
bound
inc
cmp
fidivrs
pop
dec
cmp
insl
popf
outsb
add
sub
daa
aad
pusha
sbb
lahf
and
imul
jge
adc
sub
and
mov
sbb
ret
movsb
mov
pop
rcl
add
add
cmp
imul
pop
cmpsb
jno
mov
test
add
bound
lahf
adc
xor
cmp
addb
xor
lds
add
cmp
push
adc
push
push
popf
inc
mov
loope
cmp
jno
xor
aam
popf
mov
or
ljmp
inc
pusha
cmpsb
and
inc
xor
mov
sub
sub
cmp
loope
pushf
push
inc
jmp
xchg
loop
jbe
xor
adc
fisttpll
mov
fidivs
inc
sub
rcrb
inc
fs
and
repz
pop
xor
shlb
sbb
cmp
cmpsl
xchg
test
sbb
fisubrs
sbb
cmp
sbb
cli
dec
rcrb
cli
gs
cld
inc
add
pushf
decl
dec
jnp
popa
sbb
sbb
xchg
loope
outsb
pushf
jo
mov
icebp
or
sbb
andl
mov
lock
add
mov
mov
push
addb
outsl
and
sbb
sbb
xor
adc
dec
mov
stc
and
push
bound
cmp
popf
push
cs
xlat
aas
insb
or
sbb
inc
shll
sub
add
or
and
and
add
mov
das
test
jl
adc
shll
int3
loopne
or
sbb
mov
jg
cmp
mov
jne
rclb
and
mov
in
xchg
xor
sbb
mov
xchg
faddl
inc
jl
cmp
shl
and
inc
sbb
test
cltd
lret
orb
push
dec
stos
jge
popa
adc
add
add
jecxz
inc
lds
mov
push
xor
andb
mov
daa
pusha
ss
add
addr16
fidivl
and
in
negb
loopne
mov
push
fcmovnb
xchg
add
test
add
jle
push
adc
enter
add
fcmovnb
je
test
aaa
cmp
adc
cmp
in
loopne
sbb
pop
stc
js
orb
xchg
jne
decb
dec
pop
xchg
or
aam
daa
jg
xor
push
insl
or
les
add
sub
call
leave
cwtl
mov
inc
test
add
shlb
lcall
cmpl
lret
jo
add
dec
pop
push
sti
and
adc
mov
je
loope
flds
add
sbb
subb
inc
dec
pusha
sbb
loope
jns
pop
sub
sbbb
push
mov
imul
ret
inc
xchg
adc
add
push
pop
out
xor
inc
sbb
inc
inc
and
pop
dec
add
xlat
xor
in
xor
adc
lds
add
enter
xchg
inc
inc
add
mov
mov
insl
fldenv
lret
lret
daa
add
in
inc
xor
or
insb
cld
loopne
inc
enter
pop
mov
mov
jnp
dec
subb
outsb
div
push
sbb
orb
and
rorb
dec
add
cltd
stos
std
lret
push
or
add
fwait
mov
jno
jecxz
nop
adc
bound
cmp
jmp
jno
push
inc
fimull
add
pop
sbb
neg
stos
pop
or
loop
push
add
popa
push
xchg
dec
rolb
scas
out
jbe
push
pop
mov
ds
icebp
dec
jns
add
push
cmp
or
faddp
out
sub
mov
push
in
dec
rcl
mov
pusha
sub
push
adc
in
mov
add
je
xchg
and
imul
cwtl
roll
dec
pop
scas
nop
inc
xchg
mov
mov
js
xor
sbb
ja
jo
movsl
pop
push
pop
insb
arpl
add
out
adc
pop
out
add
test
addr16
mov
add
or
push
add
fsubs
mov
and
mov
fnstenv
insb
dec
imul
inc
aas
adc
mov
bound
adc
add
in
in
enter
or
gs
inc
or
pop
mov
cwtl
add
sbb
inc
jecxz
ffreep
pminsw
adcl
inc
mov
dec
clc
sub
lods
xchg
inc
xchg
stos
pop
filds
icebp
xchg
pop
or
jg
xchg
or
lock
outsl
sbb
inc
mov
dec
dec
jmp
sbb
add
cltd
jle
sub
pop
and
lea
and
pop
popf
add
rolb
mov
add
jge
pop
pusha
daa
adc
inc
dec
pusha
in
xchg
jne
push
push
aam
push
dec
loopne
jl
testb
inc
push
cmpsl
out
test
xor
push
pop
stos
lcall
inc
and
out
mov
cmpl
add
sbb
or
scas
cwtl
popf
jecxz
loope
mov
dec
adc
or
pinsrw
xchg
sarb
sub
jp
popf
pop
scas
js
mov
in
push
shll
mov
stos
add
xchg
iret
sbb
nop
dec
test
add
aam
add
cmpsl
call
or
push
addb
xchg
cmpsl
cmp
or
sub
adc
gs
pop
popf
add
mov
loope
lods
and
fidivrl
cmp
popl
les
sbb
jo
xor
xchg
cmc
add
stc
in
ret
sbb
xchg
clc
lods
add
pop
and
and
testl
lods
pop
jg
arpl
or
sbb
and
scas
ret
sub
sarb
dec
mov
pop
stc
push
enter
clc
dec
push
jmp
nop
aaa
pop
adc
or
mull
or
outsb
hlt
adc
jnp
jne
ja
jmp
xor
and
aad
xchg
cmp
or
jae
out
out
push
fsubs
and
hlt
call
add
push
sbb
popa
xchg
or
lea
pushf
pop
jp
mov
mov
orb
cwtl
out
adc
scas
add
pand
sahf
roll
add
incl
push
cmpsl
or
shlb
es
fwait
add
push
mov
repnz
add
mov
or
add
lret
push
push
lods
cmp
imul
push
andl
loope
mov
add
pop
sub
rol
std
or
xchg
xchg
jae
add
faddp
xchg
add
jno
dec
mov
arpl
xchg
xorb
sbb
fimull
frstor
out
push
add
dec
add
cmp
and
sub
cmp
insb
cltd
test
shrl
xor
es
repnz
or
and
add
pop
mov
or
outsl
mov
aaa
inc
add
sub
mov
add
pop
xor
in
jge
sbb
loop
and
sbbb
add
mov
mov
adcl
js
push
add
cmp
jp
cltd
dec
xchg
out
mov
dec
or
or
cmp
ja
cs
loop
mov
pop
or
pop
shld
sti
or
push
pop
clc
jmp
xor
cwtl
icebp
out
cwtl
jnp
mov
stc
shrl
pop
xchg
adc
insl
addl
push
inc
mov
jbe
fcomps
unpckhps
jns
add
inc
out
shlb
cmc
push
int3
inc
add
in
and
fildl
icebp
xchg
jl
in
adc
xor
xchg
inc
xlat
add
pop
xor
mov
jecxz
and
pop
je
cmpb
xor
cmc
inc
cltd
test
xchg
inc
pusha
in
dec
sbb
pop
clc
add
pushf
add
fistpl
daa
lock
xor
inc
add
call
stos
or
adc
jge
push
arpl
ss
xchg
dec
sub
rorl
pop
cmp
out
bound
xchg
mov
cmp
out
movsl
test
and
xchg
inc
push
push
mov
out
mov
pop
mov
in
push
add
pop
leave
add
cli
cmc
not
lea
cmp
adc
add
dec
add
inc
mov
sub
sub
aas
adc
sbb
mov
data16
out
sbb
jns
inc
lea
in
sbb
adc
shlb
mov
and
dec
fwait
insb
and
jbe
insb
xchg
nop
pusha
test
inc
loop
add
add
inc
push
fwait
dec
pop
orb
stc
mov
fdivrl
iret
daa
cmpl
pusha
cmp
cltd
jge
xchg
mov
xchg
add
popf
xor
repnz
nop
aam
xchg
dec
faddl
js
call
add
mov
inc
add
bound
jne
inc
cmpsb
push
xchg
ret
xor
mov
sub
pop
loop
mov
add
add
inc
dec
and
popa
std
add
arpl
mov
add
dec
mov
dec
pop
mov
ds
dec
adc
imul
sub
inc
int3
add
pop
stos
daa
into
repz
xchg
mov
loopne
inc
sbb
movsb
add
iret
mov
jle
and
add
sbb
mov
add
mov
mov
add
js
push
gs
sti
mov
xchg
jnp
pop
ficomps
push
sahf
aas
xchg
std
or
mov
mov
aas
push
movb
sahf
inc
mov
cmp
addl
movb
into
adc
sub
sub
and
add
jg
cmc
lods
cmp
repz
gs
adc
sub
add
imul
nop
or
stc
mov
shrb
cmpsb
mov
das
and
jmp
in
rolb
pusha
jnp
mov
and
sub
add
repnz
push
adc
push
sysret
in
testb
cs
cmc
rorb
mov
ja
les
rorl
aas
push
mov
out
add
ds
subb
or
dec
pop
lret
fnstcw
movl
sti
sub
or
xor
adc
cltd
xchg
movsl
imul
add
sub
ret
adcb
adc
dec
and
daa
pusha
arpl
pop
and
sbb
outsb
inc
lret
add
xor
fsubrl
pop
aas
shr
push
fisubl
pop
mov
mov
push
jbe
push
inc
data16
xchg
int3
ds
rolb
push
aad
sti
xor
test
outsl
jmp
mov
inc
xlat
out
xor
add
mov
cmp
xor
add
pop
in
rolb
pop
shll
bnd
pusha
mov
xor
adc
filds
xor
adc
jmp
insl
pop
mov
xor
xchg
lret
sub
add
inc
cmpsl
mov
lock
mov
xchg
fsubrl
push
mov
push
add
in
ds
in
inc
call
add
sbb
clc
les
adc
add
sbb
addl
add
sarl
daa
cmp
push
stos
hlt
jp
cmp
add
mov
xchg
jg
das
mov
sbb
loope
fwait
jbe
sbb
sub
xor
add
adc
loopne
test
cmpl
push
push
mov
pop
roll
sub
cmp
push
inc
add
adc
jo
enter
add
popa
into
fmuls
push
cmp
mov
mov
cwtl
mov
push
lock
rolb
adc
icebp
lds
call
jne
sbb
push
sub
push
or
inc
imul
add
and
push
adc
mov
mov
mov
xchg
iret
add
mov
sbb
jno
jns
add
jne
lret
loop
cmp
pop
mov
out
mov
inc
push
cmp
insl
add
pushf
and
adc
mov
aaa
jmp
sar
testl
mov
hlt
sub
sub
add
popf
outsb
pop
sbb
sub
dec
mov
xor
mov
add
stc
pushf
repnz
sbb
xchg
jnp
mov
popf
cltd
add
lock
loope
imulb
add
and
add
loop
sub
add
popa
adc
gs
movsl
xor
xchg
add
faddp
sub
push
je
push
inc
movsl
sbb
inc
faddl
sbb
cmp
pop
sub
jb
jnp
mov
inc
add
xchg
loopne
fbstp
out
leave
mov
cmp
pushf
jbe
push
in
shll
add
xchg
cmp
xlat
aaa
push
mov
loopne
fbld
lret
out
add
push
leave
pop
movsb
push
shll
inc
pop
xchg
sub
sub
jnp
xchg
pop
jo
test
lods
aaa
adc
loop
rolb
imul
push
dec
jns
pop
add
hlt
pop
sub
add
and
mov
sbb
add
in
divl
and
jb
lea
test
pop
add
out
xchg
lret
fmuls
out
mov
rcl
jne
in
loop
dec
mov
inc
cltd
add
cwtl
ds
push
and
push
jmp
jbe
jmp
dec
adc
xchg
aaa
add
push
adc
dec
lahf
jle
mov
add
xor
inc
add
jmp
shlb
mov
test
ja
mov
sysret
add
sarb
add
add
mov
adc
sbb
push
jg
cwtl
cli
mov
mov
push
xchg
add
fiaddl
pop
test
lock
divb
xor
out
js
cmp
push
jp
mov
sub
cmp
inc
add
push
ljmp
add
or
movl
mov
rcrb
adc
pop
dec
sub
push
cmp
packuswb
ret
loopne
or
add
add
loope
xchg
add
xor
push
jge
inc
lahf
daa
add
dec
xchg
test
fisubrs
fldcw
lret
in
sti
sbb
pop
mov
add
xchg
popf
adc
test
push
fldl
dec
cld
adc
sbb
rcll
push
std
mov
add
inc
xchg
sahf
pushf
test
xchg
mov
sub
rorb
hlt
dec
pop
scas
xchg
leave
jl
mov
add
or
add
rcrb
adc
mov
cmc
push
adc
xor
decb
sarl
push
mov
test
bound
adc
cmp
dec
xchg
and
pop
pop
repz
loopne
lahf
subl
add
pop
or
sarb
cld
jnp
cltd
jecxz
pop
aam
xchg
shl
push
leave
mov
call
add
mov
lock
add
sti
xchg
pop
mov
call
cmp
add
push
lret
add
push
out
mov
xchg
sbbb
mov
add
inc
daa
add
cmc
aaa
fnsave
push
mov
mov
pusha
push
les
imul
ret
rcr
xchg
add
in
rolb
add
pop
fiadds
adc
repz
dec
mov
adc
mov
pushf
rorl
pop
cmpb
mov
call
aam
enter
and
mov
dec
ja
add
lods
mov
pop
pop
lret
addb
fs
dec
lahf
add
js
int
scas
add
test
jl
mov
add
xchg
and
mov
test
repnz
sub
rep
push
add
out
dec
or
sbbb
cltd
mov
dec
sub
cli
add
mov
js
add
push
and
adc
shr
pop
adc
orb
cmp
add
shrb
pop
inc
jmp
xorl
cld
in
push
mov
inc
mov
cmp
addb
cld
pop
stos
pop
jecxz
add
arpl
dec
test
into
rorb
clc
sbbl
add
sbb
sbb
shrb
loope
sbb
add
push
push
out
or
or
lea
inc
xor
or
shlb
sbb
and
xor
fsincos
aaa
or
enter
push
adc
sbb
xchg
add
and
add
shrb
lret
outsl
vsqrtss
lcall
mov
icebp
pusha
push
adc
jg
movsb
add
jno
inc
xor
add
cmp
inc
out
pminsw
addr16
lods
xor
or
mov
test
add
mov
cmp
int3
push
roll
fs
push
cmp
mov
movsl
fcomip
aam
mov
test
adc
int
shlb
add
jno
in
pop
into
add
or
and
add
mov
popa
clc
test
call
cld
push
sub
mov
mov
ds
adc
push
cmp
sub
pop
pushf
lock
mov
test
bound
popf
loop
inc
xchg
int3
jne
faddl
add
sti
jnp
sub
add
fs
add
mov
mov
addb
movl
sub
sbb
sbb
ds
mov
mov
sub
jno
mov
pushf
ljmp
icebp
loope
outsb
into
jno
loopne
mov
adc
repz
cmpsl
sub
add
ja
jge
insl
jl
sub
jne
pop
rcrl
add
dec
jae
add
lcall
add
or
lods
add
pop
cld
loopne
pop
adc
add
mov
and
dec
in
cld
std
pop
outsb
lldt
neg
out
out
mov
pusha
loop
int3
mov
call
xchg
cmp
dec
lock
pop
das
push
add
cli
pop
cmp
stos
xor
ljmp
push
loopne
fwait
dec
jge
lret
push
xchg
and
mov
sub
add
lahf
cmp
or
xchg
jbe
jl
sub
push
lds
xorps
jl
loop
jle
add
push
adc
cld
inc
aaa
mulb
popf
sbb
and
dec
stos
push
add
pop
dec
sub
cmp
mov
ljmp
mov
movd
das
add
sbb
call
xchg
dec
lret
mov
pusha
int3
sahf
mov
loop
clc
pop
and
lret
and
test
inc
pop
mov
dec
mov
xor
sbb
ja
into
in
inc
daa
in
sub
push
jns
adc
add
test
xchg
push
mov
pop
add
xor
daa
addb
xchg
jmp
add
loopne
orb
add
lret
dec
push
add
lcall
cmp
lea
cld
add
lcall
dec
push
mov
das
adc
inc
sub
push
cltd
adc
pop
outsl
lds
mov
sbb
cmp
out
movsb
or
popa
push
add
rol
repz
cld
mov
mov
mov
pop
add
cli
jle
and
xchg
fmull
lods
add
mov
jle
cmp
lcall
jne
dec
jae
xor
fdivr
sub
jno
push
jge
mov
adc
jnp
xchg
scas
pushf
add
adc
jb
add
addl
je
pop
ret
push
add
in
cmpsb
scas
pop
pop
jmp
add
mov
sbb
fimull
jnp
jmp
xchg
push
add
repnz
pusha
ret
out
jmp
mov
movsb
push
cwtl
pop
xor
xchg
lea
add
mov
out
add
mov
in
add
mov
stos
adc
mov
inc
loopne
mov
xor
mov
sbb
mov
aas
xchg
or
das
add
in
push
loopne
mov
dec
xchg
insb
dec
call
ds
dec
mov
adc
lock
add
sarb
push
xlat
cmc
addb
sti
add
out
mov
xchg
jle
in
std
inc
mov
popa
divb
andb
in
add
flds
inc
add
jne
js
fwait
stc
int3
mov
or
in
mov
pop
insb
mov
mov
xchg
xor
cltd
loopne
inc
inc
add
nop
dec
leave
in
fprem
das
push
xor
and
dec
pop
pop
call
in
out
call
jp
imul
imul
std
add
repnz
loopne
jns
shlb
addl
repz
mov
mov
imulb
fwait
ret
enter
or
hlt
decl
mov
andb
adc
lahf
movsl
icebp
ljmp
stos
push
add
sub
jno
or
add
insb
mov
out
inc
push
and
lcall
scas
mov
popa
mov
xor
lahf
lock
pop
cmpsb
cmp
fwait
pusha
cmp
xchg
or
inc
int3
xchg
sub
cmp
xchg
xchg
out
test
push
andb
inc
add
dec
rclb
dec
pop
incb
subb
js
leave
fwait
or
pushf
testl
dec
cmp
popa
dec
mov
ljmp
int3
out
dec
add
push
popa
inc
out
dec
lahf
fdivr
pop
mov
hlt
push
inc
add
std
es
add
pop
sub
mov
mov
test
jle
subb
cmp
add
push
stos
lahf
lea
scas
lret
and
nopl
mov
aas
jmp
push
cmp
mul
das
jecxz
int3
insb
cmp
subb
or
daa
stc
add
je
xor
add
inc
or
or
mov
cli
pop
and
xchg
call
in
lds
adcl
cwtl
lcall
push
sbb
mov
jl
inc
jg
aas
jle
add
nop
inc
test
mov
dec
ja
pop
mov
sub
outsb
add
push
adc
adc
cmpb
out
jae
and
pop
cmp
sahf
mov
sub
add
lea
dec
lret
push
mov
add
cmp
loope
vmread
sbb
int3
mov
jp
popf
loopne
dec
out
add
sub
into
jl
cwtl
dec
add
aam
ljmp
es
test
and
pop
mov
jg
pop
mov
lods
shlb
mov
push
mov
and
mov
and
cmp
dec
mov
fucom
push
mov
xchg
in
out
leave
jbe
rolb
adc
or
mov
push
sahf
push
test
sub
mov
cmp
clc
cmpsl
add
xor
xchg
pop
loopne,pn
loop
add
lea
mov
sbb
lret
mov
mov
test
cmp
xchg
ja
dec
pusha
sub
in
push
add
cld
cli
and
cmp
xchg
pop
js
cmp
push
fld1
leave
pop
outsb
adc
enter
add
xor
daa
add
jb
add
stos
movsl
and
call
xor
add
icebp
arpl
add
push
ret
and
cmp
add
jne
pop
cs
clc
test
mov
sarl
cli
or
out
and
pop
sbb
mov
lock
lods
paddq
sbb
inc
mov
hlt
add
jbe
loopne
aad
ret
xor
add
mov
sub
out
aaa
es
lods
mov
add
inc
aas
push
rcrl
or
add
int3
orl
popf
xchg
inc
lock
sub
enter
arpl
add
stos
pusha
or
imul
mov
cmp
cmp
adc
fadd
mov
fwait
hlt
mov
gs
xchg
cmp
leave
testb
adc
sub
fs
pop
add
inc
je
test
jo
cmpsb
jno
add
pop
int3
mov
jl
add
les
out
add
dec
inc
cmp
mov
push
push
fisttpll
inc
sbb
pop
outsl
inc
cmc
pop
xchg
mov
add
xor
mov
dec
sub
add
xchg
cld
pop
jmp
clc
pop
iret
mov
nop
add
xor
add
pop
into
out
insl
add
iret
ljmp
test
stos
filds
cwtl
inc
lret
or
adc
mov
and
or
pop
pop
pusha
lret
and
pop
lahf
dec
and
inc
mov
add
sub
ja
add
mov
insl
out
cmp
mov
push
scas
ret
mov
fsts
cmp
sbb
inc
xchg
cltd
push
cld
add
mov
pusha
xor
push
xchg
xor
inc
fmul
cltd
ds
out
xchg
fisubrs
push
ret
sub
fisubl
sub
add
out
and
add
push
mov
xor
pop
and
sub
mov
jl
in
mov
add
int
jp
std
nop
pop
sbb
mov
imul
mov
and
mov
rolb
push
shl
in
push
ja
aam
cmp
adc
pop
fs
lret
fistpll
subb
add
jnp
pushf
jmp
adc
insl
mov
mov
imul
out
shl
add
mov
push
sbb
jne
cmp
inc
and
cmp
popa
cmp
out
add
je
xor
add
out
pop
jl
add
shufps
inc
add
push
nop
sbb
cmpsl
pop
sbb
add
add
js
and
add
mov
aas
fmul
lret
add
and
cmp
mov
mov
adc
xor
sbb
out
das
dec
setb
pop
mov
data16
inc
and
add
and
or
das
or
lock
mov
inc
add
or
mov
pop
xorl
jg
paddsw
out
add
mov
add
add
push
lahf
xchg
xchg
sbb
add
inc
or
add
add
out
popl
adc
nop
add
adcb
jecxz
or
inc
adc
scas
adc
add
inc
sbb
sbbb
add
inc
scas
jo
rolb
cwtl
cmpb
cli
mov
sub
mov
pop
pop
add
mov
xor
lret
add
testl
fidivrs
xchg
rorb
insb
outsb
and
popa
and
inc
sub
or
dec
inc
aaa
pop
mov
xchg
test
hlt
mov
je
cwtl
cmp
outsw
orb
xor
repnz
icebp
mov
mov
jb
adc
mov
xor
add
rclb
das
jnp
jl
add
stos
push
ret
or
xor
cli
cmp
int3
lahf
into
add
or
ja
sbb
lcall
dec
add
repz
call
jle
mov
or
sbb
xchg
sbb
fs
cmp
pushf
xchg
pop
f2xm1
and
out
int3
repnz
lods
add
mov
neg
fbld
rorb
add
sub
jo
add
fsubrs
movsb
jns
add
nop
inc
sub
add
mov
hlt
popf
movsl
push
jns
mov
push
add
mov
test
sbb
push
jg
shlb
aas
pop
push
pop
stos
pop
int
loope
lahf
aad
add
adc
rolb
mov
xchg
add
xorl
dec
pop
add
or
xchg
dec
mov
rclb
data16
mov
repz
adc
ret
xchg
inc
inc
or
push
jns
adcb
ss
add
mov
and
in
rolb
fcomps
xchg
loopne
popa
es
nop
lds
paddusw
loope
inc
lods
dec
cwtl
in
nop
add
inc
test
inc
divl
addb
mov
test
sub
bound
add
pop
add
fadds
push
sub
add
ret
jb
call
lods
cmpsb
xchg
mov
test
cmc
fiaddl
inc
int3
inc
push
push
loopne
mov
cmpsb
idivl
or
fcomp
shrl
cmpl
aam
addr16
negb
pop
xchg
pop
cmp
adc
aad
cli
test
popf
push
xorb
negl
add
jb
push
jle
movsl
add
sqrtps
push
jae
add
leave
mov
outsb
aam
fbld
bound
pop
xor
xchg
icebp
and
push
clc
pushf
dec
nop
data16
mov
inc
add
xchg
sbbl
add
js
push
inc
pusha
dec
adc
jbe
xchg
nop
clc
add
pop
or
cmp
je
mov
mov
imul
lahf
sub
leave
cli
sahf
sub
cmp
sub
pop
xor
and
rol
add
mov
andl
push
dec
add
popf
xchg
aaa
add
jbe
outsl
or
sub
add
xchg
pusha
mov
je
in
and
int3
add
sbb
jbe
push
mov
push
scas
mov
hlt
and
or
jae
lock
mov
jo
lret
hlt
fs
lods
xchg
loopne
mov
add
push
aaa
ret
mov
xor
loope
xor
and
push
jne
add
icebp
or
push
cld
mov
mov
gs
mov
loop
add
cmp
pop
pop
ret
iret
or
nop
int3
jns
xor
lahf
mov
pop
inc
dec
aas
lods
mov
pusha
in
test
mov
or
das
cmp
adc
adc
and
sub
fs
pusha
cmpb
jo
popf
mov
pop
sub
lcall
popf
adc
imull
aam
cmp
add
clc
mov
je
adc
inc
aad
out
xor
add
xchg
mov
pusha
fcmovnb
scas
mov
aad
add
pop
cwtl
ljmp
scas
mov
js
add
push
mov
int3
inc
and
fstpl
sahf
sbb
mov
aam
push
add
push
xor
cltd
mov
mov
mov
jb
mov
adc
movl
addb
add
insb
dec
or
lret
test
sbb
push
add
jp
enter
aas
dec
cltd
sahf
cmp
pop
mov
push
add
les
adc
pusha
imul
sub
mov
mov
dec
adc
xchg
movl
enter
add
pop
ss
dec
mov
aad
cvtpi2ps
add
pop
adc
dec
clc
inc
aas
arpl
rcl
add
inc
neg
cli
andl
jo
enter
push
pop
add
push
insb
fwait
cmp
add
ljmp
dec
adc
fldt
aaa
pop
jmp
add
pop
mov
mov
adc
cmpsb
jge
cmp
jo
add
xchg
push
std
idivb
xchg
lret
jo
insb
sub
add
inc
mov
je
loope
bound
cs
movsb
xchg
loop
add
shr
loope
fsubs
mov
es
mov
pop
mov
ss
aas
and
pop
push
faddp
push
cmp
inc
add
in
aad
cmp
out
xchg
clc
sti
or
mov
movl
stos
jmp
sub
loopne
js
mov
sbb
mov
scas
addr16
addb
add
pop
add
jmp
movsb
fldl
cmp
fstpt
sbbb
cld
push
cld
add
mov
mov
mov
add
pop
bound
xchg
mov
lcall
dec
add
xchg
in
in
call
cwtl
cmp
icebp
mov
imul
pusha
movsb
push
out
add
les
dec
pop
push
fsubs
adc
mov
outsb
mov
fwait
mov
adc
jle
add
xchg
xchg
xchg
or
test
pusha
add
mov
fcmovne
insl
inc
shl
cli
pusha
jns
in
imul
call
jbe
test
je
push
push
sbb
jmp
js
clc
pop
add
push
test
add
sub
ror
dec
add
sbb
jg
ja
sbb
mov
or
enter
lcall
or
mov
pop
hlt
imul
outsb
movsb
jmp
sbbb
add
pop
testb
mov
jp
in
aaa
add
push
ja
mov
sub
movlps
enter
fdivs
or
sbb
pop
sub
sbb
add
scas
loope
roll
lds
imul
ret
mov
pop
sbb
cmp
mov
sti
aad
mov
sub
mov
out
add
mov
es
mov
into
cld
lret
out
add
xchg
pop
or
add
mov
call
push
stos
out
inc
jecxz
sub
call
pop
mov
test
inc
int3
frstor
and
adc
rcll
rclb
loop
sub
mov
fmuls
aam
mov
adc
and
subl
xor
test
inc
fstl
sub
jo
adc
pop
out
adc
mov
cmp
cmp
dec
pop
push
cmpsl
sbb
imul
je
fsubl
filds
xchg
jp
jbe
fidivrl
add
push
push
xchg
leave
sub
es
xor
add
mov
cltd
clc
leave
push
cmpsb
pop
sub
xlat
jge
mov
pop
add
clc
mov
fbstp
es
xor
cmp
push
push
ret
data16
and
loope
andb
pop
nop
adcb
add
fdiv
sahf
add
or
fnstcw
add
pushf
add
mov
dec
gs
add
mov
clc
jnp
mov
add
mov
mov
inc
xor
jl
sahf
data16
add
or
lods
cmc
mov
js
test
aas
cmp
subb
cmc
emms
xchg
add
cld
sub
dec
push
mov
adc
adc
aaa
mov
loopne
and
ds
or
add
jecxz
insb
jno
insl
xor
mov
mov
in
pusha
and
add
add
jmp
icebp
xchg
hlt
add
mov
imul
add
pop
aad
idiv
pusha
mov
push
jno
les
or
add
adc
ja
popf
mov
fs
adc
xor
push
pusha
inc
jg
add
add
push
xor
inc
dec
sbb
or
mov
test
sbb
shll
lahf
adc
push
insl
bound
pop
add
pop
xchg
xlat
outsb
add
pop
insl
out
iret
aad
xor
mov
sub
out
roll
cmp
mov
xor
ret
and
xor
mov
add
hlt
inc
iret
rcr
mov
cmp
sti
aaa
cld
ret
inc
push
sbb
xchg
and
je
jne
repnz
add
out
inc
add
mov
cmc
mov
mov
popl
adcb
push
xor
js
mov
push
add
and
lock
add
dec
in
inc
mov
xor
sbb
aad
scas
jne
mov
out
filds
pusha
insl
loopne
movsb
push
xor
enter
add
lock
add
cmp
cmp
sub
rcr
cli
cmp
dec
add
pusha
ret
in
cmp
inc
sahf
andb
and
sub
adc
add
das
stos
fnstenv
inc
aaa
xor
sbb
int
pop
rolb
loopne
cltd
sti
pop
jb
jns
dec
push
mov
push
popf
sbb
mov
fdivl
testl
rcr
sub
add
xchg
xlat
test
in
push
sbb
xor
xor
add
inc
and
cmpsb
xlat
imul
test
cmp
pop
clc
nop
mov
adc
add
cwtl
stc
xlat
hlt
push
xchg
add
mov
push
pop
mov
cmp
add
lahf
dec
cmp
add
push
das
lea
js
frstor
and
aad
push
dec
mov
mov
shll
sub
hlt
and
cmovbe
fwait
xor
xchg
cmp
add
in
sbb
lcall
push
add
push
add
pop
repnz
xor
leave
lcall
test
test
pusha
mov
rclb
xchg
jo
jg
xor
scas
sbb
pusha
rorb
fsubs
sub
adc
popa
xchg
lahf
jno
add
sbb
and
inc
dec
and
push
jne
add
mov
movsb
repnz
push
add
call
xchg
mov
lcall
aad
add
call
and
pop
and
out
sub
pop
lods
xchg
rcr
sti
imul
xchg
mov
test
jle
out
add
sbb
add
jo
cmp
cld
push
addr16
add
or
add
mov
imull
out
stos
push
out
jecxz
aas
cmpsb
cmpb
enter
cmp
addb
inc
and
jle
mov
daa
add
fnstsw
inc
mov
mov
movsb
sub
mov
fdivrs
dec
nopl
xor
je
mov
adc
mov
and
push
or
push
push
mov
aaa
sbb
test
adcb
mov
pop
mov
inc
enter
jecxz
mov
hlt
pop
add
push
xchg
adc
push
pop
add
pusha
loopne
and
inc
xor
gs
ficoms
scas
sbb
call
ficoml
lea
push
insb
push
pop
testb
aam
int
push
inc
mov
pop
and
add
fwait
shrl
add
mov
mov
or
xorb
sub
or
jecxz
test
fisubs
push
pop
lret
add
cmp
mov
add
dec
push
mov
sbb
call
je
mov
adc
int3
test
sahf
movsb
cmp
lds
ss
in
dec
sbb
push
pop
inc
movsb
or
shl
jmp
out
add
lods
sbb
pop
push
fwait
rcl
orb
imul
add
dec
or
mov
fists
cmp
pop
add
fiadds
cwtl
push
add
sub
jmp
test
sbb
adc
fstps
lods
mov
aad
bound
arpl
adc
insl
sbb
push
mov
mov
negb
cld
hlt
dec
lods
pop
mov
mov
sti
jnp
add
cwtl
aad
ss
mov
rorb
pop
nop
pop
jne
dec
shl
ds
add
int
cmp
add
push
mov
and
add
out
jp
add
or
add
and
mov
add
jnp
pusha
pop
push
enter
add
jbe
mov
popa
pop
add
mov
int3
cmp
add
popa
aam
out
mov
mov
gs
xchg
mov
rcrb
clc
mov
mov
sub
xchg
jo
add
jle
out
adc
leave
add
rcl
jl
or
adc
hlt
shlb
dec
je
or
pop
push
push
push
adc
call
fmull
sarl
jae
mov
mov
inc
loope
hlt
gs
mov
loope
mov
fsts
push
add
add
mov
rorb
mov
arpl
dec
push
xchg
addr16
cmp
push
xchg
mov
repnz
sbb
rorb
in
addl
add
push
pop
jne
jbe
or
incl
dec
dec
add
daa
outsl
inc
push
cmp
cmpsl
loopne
pop
mov
sbb
mov
shll
lea
out
add
or
xor
add
lods
sbb
loopne
sub
add
int
leave
les
push
sub
roll
imul
mov
pushf
or
test
fcomip
inc
jbe
sbb
loopne
inc
jae
or
dec
gs
in
rorb
stos
add
add
filds
fldz
test
clts
ljmp
int
repz
jne
nop
cld
test
or
mov
idiv
or
ret
ss
outsl
popa
or
int
test
jecxz
xor
add
inc
xchg
mov
or
scas
fidivl
xchg
psrlq
fldt
loope
cmp
mov
int
cmpsb
dec
push
sub
xor
fidivrs
add
mov
mov
call
pop
pop
imulb
mov
push
add
jmp
out
dec
add
out
jmp
dec
movsb
sbb
orb
out
and
sub
insl
adc
or
xchg
jo
imul
pop
insl
mov
sbb
mov
adcl
xchg
jbe
lahf
jp
fwait
roll
inc
lret
les
add
push
enter
fcoms
add
xor
jg
push
lds
add
push
or
jo
mov
stos
add
jge
xor
orb
push
out
dec
cmp
add
mov
inc
dec
jbe
es
sub
lock
movsb
jmp
cltd
pushf
cmc
fnstsw
rcrb
add
cs
ficomps
frstor
out
in
das
xchg
mov
in
adc
into
cmpl
pop
jmp
decb
add
dec
pop
xor
aam
arpl
adc
mov
imul
inc
push
jle
mov
shll
mov
xchg
jo
dec
les
add
imul
movsb
or
pop
and
cmp
push
test
addr16
pop
push
lods
sbb
add
fldenv
out
add
repz
add
jb
mov
mov
fmuls
daa
repnz
inc
das
test
scas
jle
add
fbld
je
pop
mov
fstp
nop
inc
cltd
mov
jb
ljmp
pop
dec
xchg
add
fmul
fidivrs
push
jne
add
mov
loop
jo
fnsave
pop
aam
fcomi
bound
jne
call
inc
add
pop
outsb
sahf
aas
jp
subl
mov
dec
shll
and
mov
add
and
aad
loopne
popa
add
push
mov
outsb
adc
ds
mov
sub
or
cs
xor
xchg
ja
push
pop
push
add
jmp
mov
cmp
add
or
lahf
sub
jl
xchg
fwait
repnz
cwtl
jmp
fs
jbe
imul
or
xchg
in
clc
pop
bound
mov
rorb
rcrb
das
rcr
push
loopne
xchg
cwtl
add
sti
push
mov
test
jbe
mov
sbb
jb
dec
sti
addb
ret
add
xchg
arpl
and
mov
scas
jecxz
lret
add
fimuls
add
cmpsl
mov
fsts
cmpb
push
sbbl
xchg
or
adc
iret
dec
repnz
fimuls
sub
inc
add
cmp
lock
test
or
jmp
xchg
adc
test
pop
add
sbb
xchg
add
insb
call
cmp
lahf
push
stos
lds
dec
cmp
xchg
or
jae
xor
sti
int
mov
push
and
pop
hlt
inc
sbb
cs
jne
inc
das
outsl
xchg
add
and
rcrl
cmpsb
push
add
leave
lock
or
mov
jecxz
popa
pop
lds
hlt
jo,pn
stos
add
pusha
out
ljmp
stos
imul
sub
mov
sahf
aas
jae
mov
push
pop
ds
dec
push
faddl
inc
push
mov
add
push
xorl
test
add
inc
shll
cltd
hlt
ja
add
pop
adc
scas
rclb
push
mov
adc
insl
cvtpi2ps
roll
mov
adc
mov
xchg
out
insb
pop
push
in
add
xor
cwtl
fwait
lahf
out
daa
sbb
das
rorl
push
mov
in
pop
sbb
sub
test
xchg
and
sbb
xorb
sbb
leave
aas
or
mov
inc
inc
jecxz
pop
loopne
push
outsb
cmc
loop
repz
lcall
movsb
push
adc
add
adc
inc
and
repnz
ficompl
jle
add
jmp
add
stos
xchg
shll
fcompl
imul
rclb
cmpb
je
int3
and
js
data16
add
jbe
or
dec
jge
dec
adc
bound
orl
cmp
adc
in
in
loopnew
enter
jle
pop
add
push
push
xor
sub
push
jecxz
cmc
add
push
lock
hlt
cmp
jo
jbe
add
loopne
sub
out
stos
pusha
or
or
mov
push
cmp
lcall
je
push
loop
dec
add
imul
imul
aas
repz
ds
cs
cmp
add
jecxz
movsb
das
or
stos
dec
cltd
lret
mov
pop
inc
cmpsl
imul
shl
andb
popa
inc
adc
repnz
leave
inc
test
ja
pop
push
inc
rcrb
fwait
mov
jb
xor
ret
ljmp
pop
mov
cmp
into
adc
jnp
in
sarb
cli
test
movsb
pop
ds
jl
xchg
inc
dec
loope
push
sahf
es
mov
psubw
fdivl
fwait
sbb
xchg
lahf
inc
std
andb
lods
sbbl
arpl
xchg
addb
xor
xchg
fimuls
sub
push
mov
mov
mov
jge
dec
push
loope
sub
push
mov
loopne
cld
dec
adc
inc
and
lret
movsb
xlat
leave
jge
push
mov
pop
or
add
adcl
sti
mov
cmpsb
popl
mov
dec
inc
and
imul
sbb
in
and
mov
mov
jo
pop
or
add
sti
mov
loop
cmp
push
dec
ffree
or
and
enter
cmp
add
and
scas
test
push
fnsave
inc
rcrl
les
int3
out
add
mov
fsubrs
or
cmp
or
pop
jp
add
cmpsb
sub
mov
mov
add
mov
lcall
je
add
aam
and
ret
adc
data16
push
popf
push
sti
int3
testl
test
xor
repnz
mov
sbb
or
loop
xorb
push
sub
pusha
int
fidivl
rorl
sbb
pop
test
lahf
cltd
add
jecxz
mov
call
lcall
pop
push
imul
ret
lds
cli
cmp
add
and
add
push
or
sbb
div
sub
sbb
xchg
fiaddl
push
test
pop
adc
dec
xchg
pusha
inc
jmp
test
push
cmp
addr16
sbb
and
hlt
sub
jo
add
cmp
xor
and
cli
push
xor
mov
xchg
mov
jp
add
mov
fisttps
cmpsl
out
ds
add
xchg
shl
pushf
call
mov
stc
ja
addr16
loope
sbb
inc
push
add
mov
ss
add
mov
notb
call
popa
call
or
sbb
and
ljmp
hlt
xchg
sub
faddl
or
jo
fsubrs
add
outsl
adc
jecxz
popa
add
dec
imul
xlat
cmp
mov
icebp
sub
out
add
pop
jecxz
xchg
pop
add
std
mov
addr16
cs
lock
in
add
adc
add
cli
decb
sbb
cmp
icebp
cmp
push
in
lock
inc
cli
sub
add
push
xor
jno
push
daa
mov
cmp
mov
jns
in
cld
fnstsw
mov
add
xchg
test
mov
xlat
stos
mov
data16
push
adc
add
push
pop
scas
rolb
sarb
add
or
mov
jo
jne
and
pop
lods
pusha
pop
dec
fimull
pop
sti
xor
inc
push
cli
subps
add
in
enter
push
pop
dec
push
rorb
inc
sub
xor
fstl
jg
lcall
dec
repnz
test
mov
sbb
enter
sar
sub
and
add
pop
scas
sbb
mov
aaa
push
testl
xchg
icebp
cwtl
gs
in
rclb
lcall
jp
or
dec
iret
inc
push
xor
sub
imul
out
jmp
std
sbb
xchg
jecxz
jo
ss
adcb
pop
incl
popf
dec
and
add
jns
pop
inc
xor
add
xchg
into
mov
pop
clc
xchg
mov
sahf
add
repnz
rolb
sbb
das
xor
push
sub
and
mov
add
mov
out
sbb
jmp
add
mov
cmp
add
mov
pop
shll
push
adc
jecxz
add
fsubrl
xor
test
sbbb
test
add
addr16
fdivrl
mov
sbb
xor
pop
and
pusha
pop
jne,pn
pop
mov
and
orl
jg,pt
addb
mov
xor
rolb
xchg
push
aam
push
push
mov
add
jp
fsubrs
cli
jle
lahf
push
mov
add
ja
jnp
sbb
xchg
int3
and
adc
sub
test
lock
inc
add
pop
adc
push
outsl
pop
pop
push
sbb
sub
inc
and
leave
enter
outsb
popa
cmpb
mov
push
sub
in
xchg
insb
push
xchg
and
je
fisubs
in
out
aas
add
pop
aaa
add
xchg
mov
pop
sarl
jmp
mov
add
lods
pushf
lahf
add
mov
stc
mov
aas
pusha
fstcw
push
mov
or
outsb
cmpsb
cmp
insl
jp
add
clc
mov
mov
incb
mov
out
arpl
bound
cmpsl
and
mov
dec
frstor
or
rcrb
add
pusha
jne
mov
cmp
push
nop
push
lret
pop
hlt
add
call
scas
add
pop
imul
inc
int
shrl
stos
fcompl
addl
insl
imul
bound
ret
mov
dec
mov
minps
or
adc
add
dec
les
jmp
add
adc
mov
cmp
dec
dec
pop
shlb
adcb
pop
mov
jl
cld
mov
mov
add
mov
fiaddl
sti
dec
pusha
shrl
pop
addb
outsl
and
pop
xchg
test
into
mov
int3
mov
and
les
add
movsb
inc
mov
push
inc
lea
mov
mov
nop
sbb
add
sub
pop
loopne
add
out
dec
movsl
stos
sub
push
pop
and
adc
mov
mov
jg
sbbb
pop
lock
lds
mov
into
in
daa
pusha
sbbb
sub
add
outsl
rcrb
push
lcall
fldt
cmp
test
jg
sahf
mov
and
jmp
cmpsb
inc
popf
cmp
mov
cmp
add
xorl
mov
add
push
out
pushf
loopne
add
push
add
adc
mov
lods
mov
cmpsb
mov
inc
mov
add
stos
xor
add
out
add
xchg
repz
add
adc
adc
adc
movsl
and
sbb
hlt
iret
xchg
sub
call
dec
scas
cmp
sbb
push
mov
sub
pusha
mov
pop
lds
mov
les
addr16
adc
mov
add
bound
ljmp
push
dec
add
out
loop
dec
in
adc
xor
cmpsl
mov
add
sub
insl
mov
test
adc
ret
jp
js
add
int3
dec
mov
add
repnz
test
test
add
int3
sahf
pop
loopne
inc
popa
jl
icebp
jge
adc
outsb
xchg
sbb
rolb
cmpb
xchg
add
stos
rol
sbb
dec
int
xlat
cmp
pop
ret
push
inc
push
je
add
push
mov
xlat
paddsb
data16
or
mov
jl
pop
insb
adc
fldl
push
jge
fcmovnbe
in
or
dec
xlat
cmp
pop
mov
std
add
lahf
xor
jp
dec
sub
cmp
jg
mov
scas
or
and
sub
jno
test
ja
mov
shrb
xchg
add
les
popa
cmpsl
lods
add
pop
push
rolb
push
pop
das
jno
cmp
loopne
dec
and
jecxz
cmp
sahf
xor
xorb
fldcw
push
xchg
pop
cs
xchg
add
dec
js
add
cmpsl
test
or
xchg
cld
ja
pop
dec
cmp
mov
shlb
sarl
mov
pop
mov
push
fidivrl
in
add
mov
adc
pop
bound
mov
sub
mov
pop
inc
rcrb
mov
xor
dec
jb
inc
in
sarb
xor
ret
pop
cmp
nop
add
pop
cmpsb
imul
sub
cmp
xchg
add
sbb
dec
aad
inc
add
xchg
mov
sbb
mov
sbb
adc
scas
loopne
std
xor
mov
ud1
negl
bound
stc
add
int3
rcr
jge
sub
stc
lock
test
xor
inc
xor
cwtl
xchg
sbb
outsl
sbb
pusha
mov
adc
repnz
add
and
dec
and
dec
lods
mov
rolb
cwtl
rcrb
adc
int3
enter
in
popa
jecxz
lcall
ss
pusha
sbb
mov
dec
stos
add
data16
mov
loopne
mov
xor
aam
je
add
into
mov
addl
push
ret
mov
add
lahf
jmp
fs
pushf
cmp
pusha
pop
pop
push
and
add
xchg
jmp
pop
xlat
movsb
shrb
mov
rclb
add
or
add
and
pop
imul
xchg
in
rclb
push
xor
cs
loop
dec
scas
cmp
in
add
repnz
arpl
add
push
stos
xlat
xchg
out
inc
repz
lds
push
xchg
ljmp
arpl
push
sub
adc
mov
lods
xchg
std
icebp
sbb
addl
and
inc
dec
sbb
add
pop
pop
xor
or
in
and
bound
xor
or
andb
in
repnz
inc
int
mov
cmp
add
cs
inc
out
out
ds
icebp
add
loope
add
xor
inc
in
repz
aad
jbe
jle
inc
dec
leave
xor
add
jne
gs
dec
subb
sbb
lcall
das
xchg
std
sahf
aam
fstps
stc
pop
or
insl
add
push
mov
mov
pop
xchg
push
in
lea
or
arpl
adcb
ret
iret
cwtl
push
jg
repnz
pop
xor
sbb
imul
add
add
mov
call
pusha
mov
dec
add
in
adc
sar
adc
sbbb
and
scas
and
sbb
mov
and
ljmp
push
jg
fcmovnu
test
cmp
cmp
outsb
popa
mov
imull
in
sub
cmp
popf
add
cmp
dec
sti
add
push
icebp
add
dec
xor
scas
xor
loope
inc
fwait
mov
sar
ljmp
fchs
jo
add
in
cld
out
orb
add
test
add
movsl
add
out
jge
push
adc
scas
xor
nop
inc
dec
popf
in
sahf
out
jnp
mov
mov
and
add
adc
mov
fildl
push
and
dec
enter
lods
fstps
mov
mov
lahf
push
jb
xchg
jno
andb
insl
into
fnstcw
add
out
shrb
pop
andb
cs
mov
pop
call
xor
fcmovb
dec
jnp
add
push
out
adc
xchg
cwtl
pusha
add
inc
jg
addr16
enter
insb
fnsave
gs
xchg
cmp
and
mov
orl
sti
mov
popf
push
andb
aad
ret
add
push
inc
mov
jbe
je
add
into
cli
sub
push
icebp
hlt
and
add
imul
jno
sbb
add
out
aas
popf
test
mov
mov
add
dec
stos
xchg
hlt
jmp
xchg
pusha
mov
fdivrs
inc
pop
jns
cmp
inc
into
ja
dec
xchg
mov
and
sbb
and
je
in
aam
jle
inc
popa
inc
jg
int
sub
rep
sbb
xchg
add
or
fildl
jb
test
adc
movsl
inc
jnp
add
movsb
ds
dec
dec
jns
xchg
out
or
leave
int
mov
add
or
push
leave
adc
xor
xor
mov
jns
in
insb
mov
idiv
repnz
lahf
and
xor
add
int3
shl
adc
mov
subb
mov
pushf
lsl
or
in
cltd
push
mov
aas
jo
xchg
xchg
push
fidivs
fs
add
xchg
sbb
inc
popa
cmp
xchg
andb
xchg
das
push
pop
incb
pushfw
sub
stc
cli
loopne
aas
add
cmp
xor
add
divb
and
fildl
and
faddl
dec
es
push
jp
ljmp
nop
add
push
inc
xlat
add
aam
adc
and
adc
dec
mov
add
rcll
push
imul
inc
xchg
pusha
adc
pop
dec
addl
dec
movsl
xor
mov
pop
rclb
repnz
leave
xchg
ds
cmpsb
or
push
adc
aad
pop
movsl
mov
loope
mulb
mov
lock
cmp
mov
add
out
mov
ret
loop
add
lods
leave
adc
dec
push
mov
aam
mov
cmp
sti
adc
stos
imul
sbb
push
repnz
push
lret
cmpl
outsb
sbb
into
sub
jecxz
jge
shll
add
aas
lds
jns
or
pusha
and
or
mov
lahf
add
xchg
lret
cmc
push
pusha
adc
add
mov
in
xorb
or
or
dec
add
push
imul
pop
outsb
mov
or
scas
mov
xchg
mov
cwtl
adc
inc
ret
sbb
fnstsw
test
ja
add
mov
or
clc
outsl
add
in
test
stos
mov
les
scas
dec
sub
add
scas
sub
pushf
add
xor
int
jo
daa
rclb
push
lret
jo
inc
insb
aam
rcrl
adc
stc
mov
inc
in
cli
add
cs
push
clc
sbb
xor
cmp
mov
shlb
lock
pop
shrb
cmpsl
in
ljmp
nop
divl
xorb
jge
jg
es
cmpsb
xor
sbb
ds
xchg
xor
xchg
leave
or
xorb
rolb
add
mov
xor
mov
test
xchg
add
rolb
dec
sbb
cmp
jnp
shl
out
add
hlt
mov
push
pop
je
dec
pusha
pusha
sbb
fstl
mov
add
lock
popa
push
fsts
int
adc
inc
and
jnp
jb
add
test
cmp
xchg
jae
add
cmp
xor
lods
int
shr
add
sbb
aad
push
push
aam
mov
push
or
xchg
add
mov
xor
add
push
mov
ljmp
or
xchg
outsl
pop
paddq
fsubrs
test
scas
mov
add
lds
popf
cwtl
dec
std
loop
mov
test
inc
or
sbb
push
sarb
add
fwait
icebp
pop
movsb
sbb
dec
outsb
push
add
data16
test
sub
fwait
loop
pusha
jno
in
insl
dec
icebp
adc
xchg
outsl
in
add
add
sub
nop
fisttpll
stos
sti
stc
outsl
add
inc
mov
push
sbb
cmpsb
add
fcoms
jmp
sbb
mov
add
scas
jno
sahf
rolb
out
cmp
or
imul
outsl
sbb
or
lods
ds
adcb
jecxz
and
mov
pop
add
shrb
add
out
xchg
imul
cmp
test
pushl
loope
clc
jns
pop
add
loop
push
and
rcll
dec
xchg
xchg
pusha
jae
add
cmp
lock
outsl
aad
add
and
arpl
decb
add
inc
jno
jo
stos
mov
ret
sbb
push
loopne
and
cwtl
push
jae
inc
out
roll
cmp
lahf
mov
add
push
mov
lea
std
dec
pop
lret
in
jmp
cmp
inc
cmpsb
lods
addb
cmp
scas
mov
adc
and
inc
out
dec
mov
or
push
add
or
add
imul
outsl
mov
ljmp
inc
clc
hlt
add
dec
sti
push
lods
in
loop
ds
sbb
sub
aas
inc
aad
cmp
push
inc
daa
js
pop
sub
xchg
fisubl
add
pushf
roll
mov
sahf
or
movsl
add
mov
cmp
jo
rorl
pop
xorb
add
adc
sbb
cmp
stos
push
int3
adc
aad
fadd
repnz
or
push
sub
sbb
add
imul
add
or
adc
bound
jmp
or
inc
xor
pop
loopne
xor
jae
add
mov
or
add
mov
jb
jno
add
cmpsl
arpl
pusha
dec
mov
push
lods
mov
mov
int3
jnp
inc
ss
or
dec
sub
mov
xor
icebp
loope
jmp
pop
add
mov
addr16
sahf
shlb
dec
lahf
fisttpl
aas
rorl
mov
jo
cmpsb
fs
adc
or
lret
xor
push
mov
xor
and
cmpsb
dec
pusha
dec
xor
loop
faddl
jle
pushf
cmp
sub
dec
imul
popa
xor
test
add
lods
sbb
add
shrb
mov
setb
and
xorb
jmp
cs
push
mov
loopne
clc
add
loop
pop
pusha
or
push
pop
std
cmp
das
dec
push
push
push
fdiv
xlat
add
xchg
cwtl
addb
add
out
rorb
hlt
movsb
dec
mov
add
cmp
lret
testl
pusha
into
imul
sub
sub
mov
push
cmp
lods
add
aaa
pushf
jne
ds
add
fs
push
pop
nop
insb
fldl
dec
sbb
imul
xor
movsb
sbb
add
jmp
inc
movsl
lahf
ja
rcl
lods
dec
aad
sub
or
xor
iret
nop
adc
das
add
add
test
sbb
add
cltd
mov
fmul
jbe
add
rclb
inc
inc
dec
lahf
orb
push
cwtl
xchg
call
aaa
push
std
lods
nop
sbb
arpl
popa
mov
dec
dec
add
adc
hlt
ja
ds
fadds
int
add
and
popf
jg
dec
cmp
enter
xchg
add
add
cltd
into
add
sbb
add
xchg
sub
or
cwtl
lock
add
pop
xor
sbb
in
fwait
sti
fisttpl
fidivl
add
pop
mov
lods
add
repnz
mov
pusha
push
cwtl
jl
cmc
dec
stos
cmpsl
xor
dec
shlb
cli
int
pop
fistpl
mov
jns
cmp
fnsave
add
gs
sbb
jnp
add
cmp
add
add
push
enter
push
mov
shlb
mov
mov
push
sub
sarl
clc
sbbb
sbb
hlt
cmp
mov
pusha
inc
jo
in
add
mov
adc
mov
add
mov
cwtl
push
jo
mov
xchg
add
adc
or
fwait
add
dec
andl
ss
add
dec
push
mov
fstps
pusha
fadds
add
push
mov
jmp
adc
add
aas
inc
dec
mov
mov
add
das
repnz
cmpsl
minps
ljmp
dec
pop
inc
add
int3
inc
int
sub
adc
add
mov
dec
in
xor
jmp
dec
and
jno
ret
and
hlt
sbb
dec
pusha
adcb
jg
adc
jmp
pop
cmpsb
in
bound
inc
add
lret
aaa
scas
xchg
fisttpl
add
daa
shll
mov
stos
mov
sti
pusha
inc
inc
xchg
add
jp
jno
add
mov
cmp
cltd
xor
pushf
add
in
cmp
stc
dec
sbb
in
pop
xor
adc
pop
and
pop
mov
add
mov
insb
sarb
rcr
add
sbb
sti
and
pop
ficoms
inc
pusha
xchg
inc
jae
jae
add
mov
and
mov
sub
mov
sqrtps
rclb
inc
daa
add
out
lds
lcall
stos
xchg
xchg
add
cmp
xchg
push
mov
clc
jmp
adc
rclb
cmp
je,pt
sbb
push
jbe
mov
lret
add
push
dec
cwtl
shlb
arpl
add
jb
pushf
cmp
push
fs
jae
dec
sbb
sub
fdiv
bound
add
out
pop
fdivrp
stos
sbb
stc
cltd
xorb
das
mov
add
aas
mov
cli
jp
setb
cmp
shr
cwtl
test
cmp
xchg
pushf
xor
cli
pop
add
dec
out
orl
push
mov
cmpsl
test
call
lret
and
xor
sahf
xchg
das
loopne
push
aas
adc
js
ljmp
dec
addl
cmp
add
add
sti
cmc
push
aam
xchg
dec
add
push
mov
int3
add
pop
cli
or
or
add
xchg
sub
cmpb
xchg
loope
jbe
lea
ja
or
xor
push
pop
or
add
ja
les
add
xchg
lahf
mov
mov
lcall
in
add
arpl
mov
stos
xchg
add
dec
jbe
mov
dec
add
fbld
cmp
sub
mov
repz
std
push
cmpsl
add
in
jmp
repz
pop
add
out
and
push
mov
mov
ficomps
mov
arpl
in
add
jae
adc
sub
add
inc
push
and
enter
sub
sahf
mov
xorb
loope
incb
ss
popf
in
jbe
sub
popw
xchg
adc
and
stos
ljmp
push
scas
cld
inc
add
jo
pop
daa
andb
mov
test
add
push
int
mov
add
aas
lods
inc
sub
aas
icebp
push
enter
xor
mov
and
push
add
xor
in
cmp
cmp
enter
dec
add
xor
and
aaa
aam
insb
mov
dec
mov
aam
cli
add
pop
adc
jg
add
sbb
stc
sbb
mov
adc
dec
stos
dec
bound
cmp
gs
jge
add
fnstcw
cmp
pusha
js
repz
xchg
data16
loope
jge
push
pop
add
icebp
lahf
pop
sbb
and
jnp
shrb
mov
mov
add
fiadds
cmpsl
sub
xchg
add
test
adc
inc
lahf
or
and
repz
je
add
xchg
shrb
xor
mov
inc
mov
lret
lds
pushf
and
cmc
movsb
roll
int3
lods
mov
pop
or
fwait
aaa
push
jmp
pop
xchg
cs
in
sub
push
lods
bound
jmp
stos
mov
xor
inc
pushf
pop
insl
fsts
sub
lcall
add
mov
add
and
test
enter
int
add
push
xor
push
pop
fstpl
push
pop
jmp
push
sarl
xor
ds
jnp
add
outsl
push
cs
jl
sub
add
mov
and
push
shl
inc
outsb
das
jbe
or
dec
xor
add
stc
cld
fdivrs
scas
pop
pushf
xchg
in
mul
loop
rcrb
cmp
rolb
mov
into
stos
testb
mov
add
cwtl
mov
push
jmp
ret
js
test
add
xlat
xchg
mov
pusha
jo
adc
mov
jge
loopne
push
cli
fdivrs
jnp
sub
adc
faddl
pop
push
inc
into
lds
scas
adc
insl
andb
je
xor
dec
loope
imul
mov
loope
shlb
push
in
push
xor
arpl
add
scas
xchg
cld
xchg
clc
jmp
int3
xor
push
popa
add
dec
jo
movsb
and
incl
or
sub
dec
mov
push
rolb
insl
clc
add
push
dec
sbb
data16
orl
xor
inc
aaa
mov
mov
dec
add
jno
cmpsl
gs
sub
mov
adc
cmp
inc
xchg
add
add
jne
xor
jae
push
jbe
out
enter
in
rclb
clc
xchg
mov
call
add
push
xchg
cltd
add
xlat
out
add
adc
pop
rcrb
hlt
mov
je
push
imul
push
add
cmpsb
test
jnp
outsl
sbb
jno
add
lcall
xor
sub
popa
divb
add
xchg
lcall
sub
push
pop
fcompl
out
fcoms
push
in
fidivs
inc
pushf
and
cmc
sbb
add
cmp
mov
inc
push
cld
lea
rol
fnsave
xlat
js
pop
add
and
scas
dec
sub
lods
movsb
cwtl
add
int3
idivl
add
test
pop
mov
test
and
lret
orb
aas
lods
ljmp
and
leave
ffreep
mov
jns
and
pop
push
mov
out
rorl
orb
sub
cltd
xor
sbb
push
xor
pusha
mov
cwtl
cmpb
insb
and
sbb
push
cli
roll
mov
ret
xchg
addb
test
add
push
fmuls
enter
inc
arpl
dec
xchg
cltd
loopne
aaa
jne
jnp
cs
nop
test
in
iret
push
add
lret
or
lods
add
aas
lahf
xor
pop
add
sahf
adc
pop
mov
addr16
js
or
movsb
adc
jle
jns
pusha
jmp
sub
lods
xchg
outsl
mov
push
mov
add
dec
outsb
fimull
add
lods
push
out
hlt
in
sbb
push
negl
xchg
add
pop
mov
test
add
add
lea
ds
lock
or
in
fcoml
jo
mov
xchg
cmp
shr
add
or
inc
dec
or
add
ret
adc
dec
xor
filds
cmc
lds
mov
jae
add
jg
mov
icebp
in
cli
pop
scas
lret
pop
xchg
pop
sti
add
jmp
adc
jmp
cli
push
push
xchg
sbbb
mov
sub
jne
push
jo
pusha
jnp
jle
adc
bnd
test
xorb
sub
adc
and
mov
cmp
arpl
dec
adc
notl
and
mov
hlt
cmc
push
sub
sti
mov
enter
pop
inc
dec
sbb
push
add
shrl
fbld
push
cmpsb
test
mov
mov
add
push
loopne
iret
insb
pop
sub
repnz
vfnmadd231sd
inc
add
lret
out
jo
push
js
in
roll
cmp
imul
mov
cli
and
pop
out
xchg
call
inc
out
pop
cmp
cmpb
sbb
mov
in
xor
in
inc
ficomps
push
daa
inc
inc
lock
jo
lahf
jns
cmp
ret
cmp
inc
sub
in
je
or
adc
dec
and
or
xchg
pop
sub
cmpsl
sbb
push
push
mov
jne
sub
adc
or
mov
test
jp
call
enter
or
push
mov
sti
aas
subb
add
xor
ljmp
push
adc
fiaddl
aam
add
jl
cmpsl
push
mov
pusha
ds
lods
dec
loope
inc
cmp
in
mov
fnstsw
out
xchg
cmp
jg
mov
inc
cmpsb
loope
in
push
pop
cltd
jl
push
pop
inc
inc
xchg
jle
lock
rorl
loope
pop
insl
int
or
jmp
test
push
mov
insb
jne
add
daa
sbb
mov
dec
pop
int
addb
icebp
mov
jb
outsb
out
sub
dec
xchg
stc
rcl
pop
add
xchg
ret
pop
in
sub
call
lcall
pop
scas
mov
cld
add
dec
in
jle
jne
hlt
pop
add
test
in
out
jns
add
test
cwtl
dec
adc
add
xchg
and
push
roll
das
inc
inc
push
mov
push
push
jnp
xchg
jp
mov
xchg
sbb
fidivs
test
cmp
js
js
cmp
cld
add
mov
in
call
adc
outsl
add
sbb
data16
sbb
push
inc
fisubs
repz
add
fwait
popa
jg
add
aad
adc
test
dec
add
dec
bound
dec
adc
cltd
mov
and
outsb
add
sub
xchg
add
test
imul
add
stc
xchg
fnstcw
imul
jnp
rcrl
cmp
inc
add
popl
mov
cli
sub
pop
dec
jae
lcall
test
xchg
loop
addr16
sbb
cmpsl
add
mov
shrb
push
add
and
dec
fwait
xor
or
mov
cwtl
movsl
jge
lock
popa
push
jmp
pop
add
icebp
push
loope
cmp
daa
add
fidivs
xchg
add
std
sbb
out
loopne
mov
add
mov
lret
stos
mov
inc
push
mov
cwtl
test
pop
push
adc
leave
lds
inc
test
in
mov
ds
push
outsb
add
xorb
and
insb
out
dec
push
add
fwait
js
or
dec
or
rcrb
add
aad
add
lcall
ss
add
bound
lods
jbe
push
inc
xor
inc
adc
push
mov
cld
mov
jns
cltd
sub
or
adc
mov
ss
xor
in
pop
add
dec
data16
jg
addb
pushf
movsl
lcall
pop
aad
add
lret
and
add
lods
ffreep
nop
jecxz
pop
aas
mov
jecxz
jp
clc
add
adcb
dec
mov
sbb
repnz
add
add
cmp
lret
and
mov
int
clc
test
ljmp
es
repnz
sbbb
mov
mov
jle
mov
mov
leave
adc
xor
add
aas
pop
jl
push
cmp
dec
push
loope
dec
sbb
and
bound
add
scas
out
hlt
xor
jmp
into
mov
mov
pop
sarl
das
push
adc
xor
inc
pop
sbb
add
cmp
cs
push
mov
lock
push
pop
loope
push
or
data16
test
jbe
cmc
jp
fimull
jb
in
fstpl
iret
lods
inc
push
jle
dec
lock
xchg
push
adc
and
add
frstor
or
jle
out
leave
mov
jno
add
scas
ret
pop
pop
pop
dec
pop
data16
add
mov
jmp
and
pop
jle
incl
aam
sbb
mov
fwait
testb
lds
fs
xor
dec
add
jg,pn
mov
test
jmp
adc
shlb
push
pop
mov
in
push
pop
cmpsb
inc
js
sbb
stos
pop
scas
add
dec
add
jno
add
cmpsl
jl
dec
sbb
ljmp
push
xor
jp
add
loopne
cmpl
nop
mov
inc
rol
sub
pop
push
call
fmuls
add
jno
scas
push
or
icebp
fdivl
xor
pop
add
xchg
cmpsl
pop
or
jnp
aad
add
pop
cwtl
push
ljmp
mov
cmp
cmpsb
in
or
and
lods
pop
push
sbb
sub
lods
cmp
xlat
movsb
xchg
add
fs
jno
fmuls
xchg
mov
lods
mov
popl
rcrl
sub
add
rcr
add
pop
jmp
mov
xor
cld
sar
xor
cmp
jns
xor
cmpl
lock
stc
inc
out
out
and
and
xor
adc
jle
aas
lcall
mov
pop
mov
lea
outsb
mov
mov
fcoms
arpl
add
psadbw
sub
out
shrb
add
lea
mov
push
or
outsl
push
adc
sbb
cwtl
add
leave
scas
add
dec
or
push
inc
rcrl
add
fdecstp
outsb
mov
out
add
mov
cmc
ljmp
hlt
call
adc
jns
mov
xchg
or
xor
add
cli
pop
test
andb
add
jno
adc
xor
fdivrp
dec
and
cmp
mov
add
pop
jo
push
ljmp
mov
add
in
adc
xor
rcrb
mov
iret
adc
xor
cli
jp
push
jnp
add
ret
jb
shrl
add
adc
adc
or
and
mov
add
adc
pop
add
sub
add
adc
das
neg
pushf
cmp
add
in
icebp
jecxz
addb
add
int
das
and
jo
mov
ret
adc
ja
and
aad
je
add
mov
sbb
fildl
loope
rclb
mov
cmp
arpl
scas
add
aam
movb
sub
cmp
and
pop
mov
xor
xchg
clc
add
or
cltd
sbb
pop
int3
mov
pusha
jns
bound
out
push
sub
pop
adc
sub
out
push
pop
dec
add
mov
pop
push
pop
pop
ss
xchg
pop
fpatan
push
nop
lds
pop
or
xchg
rcrl
in
xchg
add
cmp
orb
push
cmp
iret
fiaddl
inc
shlb
dec
add
sbb
and
pop
lock
cmp
mov
les
mov
movsb
negl
push
fwait
in
pop
sahf
pusha
cmp
cmp
pop
adc
xor
xchg
pop
add
pushf
xor
int
xor
in
dec
addb
add
pop
adc
add
cmp
add
lea
mov
rolb
incl
fwait
sbb
cs
pusha
js
sbb
jl
test
daa
mov
cwtl
pusha
xor
int3
mov
leave
add
scas
and
xchg
adc
mov
andl
sub
out
in
out
push
xor
addr16
ljmp
jp
es
popf
mov
mov
push
push
cwtl
mov
ja
pop
bound
fdivs
cld
push
add
clc
jb
push
sti
in
push
jmp
test
adc
add
jle
orb
xor
pop
adc
rclb
clc
add
loopne
sbb
add
and
add
cmp
data16
mov
mov
mov
andl
inc
mov
mov
mov
shr
xchg
enter
jecxz
jp
inc
jb
adc
cmp
adc
movsb
int
icebp
loop
dec
add
js
ret
and
in
out
xor
sbb
inc
or
movsb
out
clc
stos
cwtl
sub
adc
and
icebp
inc
adcb
out
sbb
xchg
movsb
orb
aaa
mov
jo
ja
or
or
int
or
xchg
cmp
out
add
loop
inc
add
clc
clc
add
mov
pop
add
jmp
add
cwtl
sbb
adc
lds
cmpsl
ror
sbbb
add
loope
stos
inc
aas
mov
pop
xchg
orb
bound
xchg
pop
int
mov
filds
loopne
addr16
pop
pop
jmp
rorb
sub
and
or
pop
rclb
push
jae
add
pop
jl
nop
daa
lret
inc
mov
cmp
adc
mov
xchg
push
enter
xchg
and
popa
test
dec
jne
ffreep
and
or
cmp
add
mov
dec
push
push
lock
sarb
pushf
les
push
or
mov
cli
add
outsb
lods
xor
push
cwtl
mov
hlt
mov
js
add
adc
xchg
ja
test
fs
in
mov
sahf
push
cmc
insb
shl
cmpsb
or
testl
orb
add
enter
push
int3
or
insl
xchg
pusha
jge
mov
or
icebp
mov
fcomps
idivl
adc
popa
add
sbb
dec
ds
mov
push
push
sub
pusha
cmp
push
test
xor
incl
mov
cmp
addb
jbe
insl
push
mov
inc
xchg
sbb
shll
sbb
gs
dec
adc
mov
fdiv
mov
das
pop
add
std
jl
xor
push
dec
and
test
mov
or
mov
add
adc
xor
sha256msg1
fwait
cwtl
push
inc
idivl
aad
mov
sarb
or
dec
loopne
and
xorb
cmp
sbb
sub
add
fisttps
adc
pause
add
fdivrs
es
sbbb
xchg
jb
shlb
jae
shll
add
ja
in
nop
stos
jp
mov
xchg
cmp
fwait
add
cs
cmp
cltd
xchg
ror
add
imul
rcr
cmp
ja
cmc
loope
mov
sahf
dec
out
nop
inc
adc
and
out
scas
mov
imul
in
dec
lahf
mov
add
jl
test
mov
and
icebp
add
mov
mov
fld1
insl
sbb
aad
xchg
daa
ja
xchg
popf
push
mov
sbb
iret
inc
xchg
fsubrl
add
lods
xlat
jmp
add
mov
xchg
scas
add
add
jecxz
adc
gs
dec
movsb
mov
add
and
jb
pop
add
pop
jecxz
pushf
jae
add
std
jne
shr
lods
mov
sbb
add
and
add
add
lahf
sbb
push
push
das
jg
push
out
cvtdq2ps
dec
mov
sysexit
out
push
push
jp
lret
cmp
js
add
icebp
or
sbb
mov
js
cmp
test
mov
jl
loopne
or
scas
add
sub
fs
xchg
push
push
into
mul
and
cmp
push
outsl
add
scas
lods
jne
test
xor
inc
add
outsl
sbbl
jp
ja
idivb
push
pop
arpl
inc
sbb
shrb
sti
add
xchg
cmp
mov
mov
cmpl
cmp
push
pop
jne
setg
push
add
test
test
jbe
subb
xchg
sbb
out
add
fbstp
push
cwtl
xchg
paddb
pusha
imul
cs
int
pop
jno
or
test
fiaddl
pop
pop
xchg
les
mov
inc
jo
xchg
xchg
gs
addl
fadds
js
in
cs
ret
push
arpl
push
mov
mov
ljmp
cwtl
adc
fsubr
add
jne
push
popf
popa
mov
push
inc
pop
cmpsb
cmp
add
sub
popa
ja
push
daa
mov
cmp
add
mov
adc
sub
enter
mull
dec
pop
add
lds
inc
add
xor
or
push
insb
push
adc
pop
xchg
add
loope
sti
add
and
sbb
inc
lock
mov
cwtl
cmp
xor
in
addr16
fstl
add
cs
jno
pop
and
dec
lcall
cli
add
sub
or
shlb
jnp
loopne
or
stos
aas
cmpb
jns
int
stos
dec
xor
in
test
or
xchg
pop
andl
mov
jo
xlat
push
mov
and
cmpsb
mov
add
out
and
add
xor
add
clc
mov
sub
jne
mov
xchg
mov
test
movsb
add
push
xchg
push
add
dec
int3
jmp
and
xchg
add
loopne
xor
sbb
dec
es
and
andl
movsb
pushw
nop
add
push
ds
enter
mov
dec
icebp
inc
scas
fwait
data16
hlt
xor
pop
push
jo
or
xor
add
push
adc
pop
iret
addb
cmp
push
pushf
xor
mov
in
jp
negl
pop
cmp
cld
add
sub
lods
js
add
in
test
test
push
sbb
and
mov
inc
rcl
jo
pushf
por
push
and
add
cmpsl
pop
lods
push
inc
or
incb
push
dec
enter
push
and
xor
lea
testl
xor
add
jnp
mov
dec
mov
lds
cmp
or
pushf
and
movsl
fwait
out
mov
pushf
jge
lods
xchg
add
aam
loope
sub
inc
cmpsb
fidivs
sbb
repnz
jmp
and
jp
les
mov
or
lahf
popa
add
add
shlb
out
mov
xchg
inc
sbb
rorl
inc
add
mov
aas
arpl
add
shlb
fnstcw
and
fdivrs
add
ljmp
jo
ja
inc
cmp
cli
cltd
sbb
mov
pop
dec
cmp
faddl
xor
outsb
fwait
dec
inc
pop
cmpl
add
in
dec
push
es
loopne
test
mov
in
lret
push
clc
iret
adc
dec
push
xor
cli
out
sbb
fildl
mov
sbbb
int3
jae
ja
add
pop
gs
test
scas
add
pop
mov
cmp
mov
adc
ret
jns
dec
push
into
add
hlt
adc
mov
fcomps
or
add
scas
sub
subb
mov
test
out
cmp
cld
add
ljmp
mov
out
mov
enter
sbb
cltd
bound
loope
add
and
incl
and
lret
pop
add
pop
push
test
pop
add
add
cld
xchg
add
inc
loopne
addl
in
add
bound
dec
mov
fistl
gs
jb
sub
mov
cli
pop
push
std
or
arpl
cwtl
sub
push
or
adc
and
push
ds
add
lret
pop
idivl
dec
addl
stos
sbb
jns
or
add
je
enter
sub
mov
add
fists
xchg
xchg
pop
sbb
movb
push
cmpsb
cmp
mov
inc
cwtl
dec
xlat
cmp
nop
pusha
jb
jae
add
add
xchg
lea
sets
mov
test
iret
cmpsl
add
or
mov
outsb
sahf
add
test
lret
add
imul
imul
cmp
lret
out
inc
xchg
add
lods
aas
mov
jno
hlt
and
xchg
add
test
or
sub
add
out
ljmp
scas
jle
push
push
xchg
rolb
orl
jb
add
dec
aaa
jmp
add
mov
sbb
lahf
fisubrs
insl
pop
add
orl
add
pop
mov
mov
incb
imul
lock
imul
and
sbb
dec
ficoml
inc
jb
mov
sti
dec
xchg
mov
les
fistpll
daa
cmp
ficoms
mov
int3
inc
inc
xor
call
popa
mov
mov
lret
scas
shrl
mov
loope
mov
loop
add
push
push
sub
jo
add
and
ljmp
aad
xchg
cmp
xor
mov
add
fwait
mov
insb
add
movsb
stc
push
xor
lret
add
lret
shl
add
rolb
add
das
push
and
adc
lods
pop
and
cmpb
and
xchg
xor
add
sbb
cld
push
xorb
test
in
cmpsl
add
cmpsb
sbb
or
mov
scas
add
fs
sub
sbb
enter
add
fwait
push
lods
insl
xorl
pop
add
bound
addb
mov
les
sub
xchg
cwtl
add
imul
xchg
adc
mov
xchg
push
pop
xor
add
cltd
cmp
or
or
mov
add
and
cmovge
sbb
jo
cmp
add
and
das
rolw
sub
cmp
mov
ret
dec
xchg
add
fmuls
mov
fmuls
in
xor
js
int
sub
ficompl
inc
out
scas
into
cmp
add
outsb
insl
xor
cmp
add
lea
dec
stc
mov
mov
dec
pop
mov
or
adc
faddl
pop
add
push
scas
test
aam
subb
clc
cmp
jne
or
sahf
decb
int
rol
or
and
sub
rclb
jmp
fdivs
fistps
sub
int3
inc
dec
mov
xchg
rcrb
add
stos
xchg
fdivr
cmp
fiaddl
mov
push
mov
in
add
pop
pop
nop
add
sets
les
sub
test
xor
dec
sbb
cli
addr16
push
mov
addl
fisubs
and
fildl
adc
xchg
fildll
addl
sub
adc
mov
sti
xchg
popf
jnp
add
int
stc
or
xlat
cmp
es
mov
stc
fbstp
adcl
sbb
rorl
push
push
xlat
jne
add
rol
fldcw
add
in
sub
inc
or
inc
or
adc
cmp
roll
xor
sti
dec
mov
call
push
fnstcw
xchg
add
or
xor
cmpsl
fisttpll
sub
enter
inc
int
insl
cmp
add
test
adc
subb
out
push
add
pushf
and
mov
dec
icebp
sbb
xchg
add
imul
and
outsb
add
mov
and
jno
loopne
push
adc
jge
sbb
insl
mov
ds
stos
iret
lret
sahf
test
push
sbb
inc
jno
push
ret
sub
xchg
pop
aas
cmp
lahf
cli
inc
ja
inc
dec
pusha
daa
and
ret
cmp
out
add
add
jno
sahf
pop
cwtl
mov
add
enter
ret
pop
mov
test
sbb
add
xchg
pusha
mov
cld
mov
xchg
jg
imul
add
outsl
inc
sbb
push
movsb
pop
add
imul
inc
inc
pop
call
jo
xchg
mov
lcall
sub
shll
inc
jo
mov
cmp
cmp
loope
add
mov
ljmp
ret
push
mov
inc
jp
das
sahf
lock
push
shlb
icebp
mov
je
out
mov
aas
adc
add
xchg
das
sub
jbe
xchg
mov
sbb
aam
std
pop
inc
andb
popa
add
test
lea
shll
dec
add
ret
add
dec
and
add
mov
js
jge
ja
push
hlt
mov
loop
lcall
mov
cmp
mov
pop
push
and
push
aas
xor
dec
jg
sbb
add
daa
push
pushf
mov
ret
mov
dec
xchg
sbb
clc
and
and
les
add
cmp
mov
fldl
mov
push
test
add
jp
cld
jne
sbb
add
movsl
inc
call
add
cmpsb
adc
rcrb
push
loop
add
cli
ltr
dec
insl
js
mov
stos
clc
stc
pop
clc
pop
fildll
push
std
leave
scas
jbe
add
sub
andl
test
add
mov
or
cs
xchg
add
stos
and
jbe
mov
loopne
rorb
jno
ss
loope
out
mov
mov
or
or
xor
add
out
repnz
pop
sbb
or
ret
les
push
mov
je
add
imul
lret
pop
mov
push
and
cmpsl
jns
fwait
inc
mov
add
jnp
add
adc
mov
cmpsb
fdivl
sub
push
and
add
xchg
pusha
test
and
pushf
inc
add
les
cmp
pop
push
add
add
sub
insb
clc
cmp
cmp
push
in
adc
jl
movl
mov
in
add
xlat
add
jb
pop
mov
mov
lfs
sbb
dec
iret
sti
loope
les
add
inc
sbb
mov
gs
sub
push
lock
mov
out
repnz
addb
jnp
aas
pop
push
add
popf
jno
insb
jge
sbb
add
cmp
mov
xchg
subl
add
adc
into
test
mov
das
add
in
dec
add
sub
inc
cltd
pop
add
fsubr
add
subl
das
sbb
adcb
mov
inc
xlat
sbb
or
mov
cmp
iret
mov
dec
stc
lea
mov
cltd
or
dec
push
or
add
xchg
nop
inc
fsubrl
cmp
addb
mov
mov
inc
jne
push
es
or
lea
mov
shlb
shlb
sbb
pop
jp
adc
cmpl
ja
test
hlt
scas
sahf
lahf
testl
jge
out
add
push
mov
jae
mov
xchg
sbbb
decl
and
push
sbb
add
jbe
dec
popa
stos
push
push
xchg
pop
inc
int
pushf
popf
aaa
xchg
jae
dec
stos
sub
fidivl
sub
sub
add
mov
or
sti
int3
xor
rclb
sub
scas
jl
lea
pusha
lods
insb
lret
in
mov
out
shll
adcl
push
push
mov
adc
jnp
icebp
add
jmp
lds
push
mov
add
loopne
stos
push
dec
mov
ljmp
sbb
stos
subl
mov
xchg
jg
add
mov
call
add
pop
stos
ret
dec
jno
jo
add
jl
aam
cli
jbe
lock
cmpsl
outsb
test
fidivrl
mov
roll
mov
pop
ja
mov
pop
dec
repnz
xor
add
push
out
loope
cmp
lea
pusha
hlt
mov
mov
and
pusha
scas
jp
push
lcall
add
test
negb
lahf
adc
mov
loopne
hlt
int
roll
and
xchg
jge
stos
adc
mov
lcall
mov
mov
ds
in
jo
push
add
push
push
jno
pop
push
sub
pop
pop
push
insl
xchg
or
xchg
jbe
cltd
sti
pop
push
pop
push
xchg
add
pop
add
pop
inc
rorl
jnp
mov
add
pop
push
loop
jecxz
movsl
mov
add
in
insl
mov
cmp
mov
push
adc
inc
cmp
mov
andb
cwtl
lock
adc
mov
mov
dec
jp
add
jmp
adcb
or
aad
pop
in
subb
loopne
adc
push
test
push
pop
mov
jp
fwait
daa
or
cwtl
xor
je
push
outsb
jmp
pop
insb
push
jnp
cmp
lahf
add
in
aad
inc
jns
mov
push
loope
add
and
add
xor
mov
cmp
xchg
data16
mov
lahf
or
add
xor
xor
add
sbb
mov
lds
int3
stc
push
lret
hlt
or
xchg
sub
inc
leave
add
pop
dec
aas
popa
ret
cmpsl
rolb
adc
jmp
pop
or
xchg
add
adc
lcall
add
mov
orb
add
sar
int3
jbe
std
cmp
test
inc
ljmp
aaa
or
or
gs
ja
dec
stos
add
cld
sub
mov
js
or
jne
leave
dec
and
das
add
fwait
or
shrb
pop
xor
lahf
adc
add
jne
test
movsl
stc
add
add
fucomip
hlt
stos
mov
adcl
pop
add
ja
push
out
rorl
sti
jg
sub
add
mov
adc
inc
pusha
test
dec
divps
cmp
push
and
add
mov
or
out
add
xchg
fst
xor
repnz
add
and
aam
div
add
push
out
add
push
fcomps
movsb
inc
adc
jo
add
scas
pop
add
add
push
daa
push
add
fcmovu
out
sbb
fiadds
push
inc
mov
ret
and
cmp
add
xlat
pop
push
jecxz
xchg
dec
add
loop
adc
js
mov
enter
or
clc
and
rolb
add
jbe
shll
push
jl
mov
jge
add
sub
test
add
hlt
mov
mov
arpl
mov
push
sbb
fstps
js
shl
sbb
fidivrl
adc
cld
daa
cwtl
mov
gs
cs
inc
filds
mov
or
jns
add
jl
pop
pop
mov
push
sahf
leave
pusha
xchg
mov
insl
add
add
lods
push
sub
add
mov
adc
pop
add
jecxz
fsubs
jmp
loopne
jno
jle
jp
add
sahf
aas
repnz
mov
addr16
icebp
add
aam
in
lret
jns
add
pop
mov
mov
mov
pop
inc
mov
pop
adc
add
xchg
xchg
push
push
call
xor
data16
add
orb
add
push
roll
cmp
sbb
outsb
pop
add
add
out
and
cmp
push
outsl
dec
mov
jns
mov
dec
mov
cmp
push
ljmp
push
sub
jo
fsub
or
inc
and
mov
int
mov
dec
mov
fadds
and
jae
inc
fisttpll
call
fs
pop
hlt
cmpl
jecxz
cmp
mov
mov
xlat
subb
in
dec
ss
add
mov
push
lldt
lods
push
pop
xor
lret
call
push
mov
clc
jp
and
std
rolb
sahf
pop
ljmp
xchg
les
scas
or
add
gs
lret
testb
mov
test
ret
mov
mov
and
xchg
inc
jl
sbb
cs
dec
sub
sbb
xchg
xor
movsb
mov
mov
sub
hlt
or
rclb
jge
mov
lcall
sub
popl
and
stc
inc
sbb
sarl
enter
aas
mov
push
add
inc
xor
add
sub
jmp
jecxz
xor
sbb
popa
cld
or
adc
add
ss
sub
fwait
add
stc
add
fstpt
pop
psubsb
mov
or
adc
out
push
insl
jnp
jae
and
xor
gs
loope
cmp
or
inc
loopne
push
cld
cmp
jns
mov
or
mov
adc
xorb
scas
mov
idivb
addl
ret
add
mov
add
inc
pop
mov
cmp
mov
in
pushf
nop
addb
into
adc
pop
add
push
dec
mov
loop
lahf
sti
int
test
fidivrl
faddl
js
cmpsl
std
pop
push
insl
ficomps
or
dec
sub
in
rcl
adc
cmp
shrb
insl
push
pop
dec
out
out
inc
test
lods
insb
cmpsb
push
xlat
enter
add
jmp
icebp
pop
push
cmp
adc
xor
xor
mov
sarl
jecxz
cli
lret
aas
filds
enter
push
add
mov
sub
imul
test
lret
popf
jmp
movsb
mov
pop
dec
xor
cmp
push
add
jmp
inc
jo
add
es
jbe
add
inc
mov
mov
pushf
incl
sub
mov
orl
add
les
adc
xchg
ret
push
popa
dec
inc
lods
sti
cmpl
sarb
jo
hlt
int
cmp
clc
das
add
clc
loop
add
mov
pusha
outsl
mov
lods
push
rolb
sbbb
dec
and
jbe
mov
mov
fwait
cmp
xchg
inc
add
xchg
inc
rcll
aad
add
add
sbb
mov
aas
pop
ret
std
pop
mov
add
insl
and
test
jne
cmp
fildl
enter
fstl
lcall
mov
sarb
and
sub
cmp
add
movsl
xor
push
repz
sbb
ja
mov
jp
nop
cmpsb
lret
test
xchg
push
pop
rcr
cltd
add
aas
in
leave
sbb
jns
loop
sbb
sti
ljmp
clc
in
cld
mov
pop
imul
lret
or
inc
adc
mov
jno
hlt
sbb
not
mov
test
adc
fwait
add
add
jle
cmp
pop
xchg
loopne
adc
add
push
and
mov
arpl
rcrl
lea
mov
pop
pop
and
dec
push
add
sahf
out
ja
mov
imul
sti
mov
mov
push
xchg
rcrl
and
mov
jge
orl
add
imul
mov
lret
sub
in
fadds
push
cwtl
pop
dec
push
movsb
mov
xchg
dec
inc
pop
leave
xchg
pop
mov
add
jo
sub
xor
add
shlb
js
gs
clc
inc
or
add
int3
outsl
add
adcl
add
or
lods
add
push
mov
mov
fisttpl
cwtl
cmp
outsl
jno
add
mov
add
mov
in
fstl
mov
dec
pop
scas
or
add
rcll
mov
add
loope
mov
add
xor
jecxz
adc
pop
jge
movsb
scas
sarb
fwait
je
fdivs
push
imul
lds
or
test
mov
or
jo
movb
cwtl
leave
sub
stc
push
or
xor
jb
pop
cmc
pop
add
push
mov
jbe
leave
dec
fcompl
and
outsb
add
mov
push
add
popf
pop
xlat
addb
push
ljmp
add
mov
loopne
add
das
xor
xchg
in
pop
cmpsl
test
mov
mov
pop
imul
decl
jmp
shlb
out
jnp
inc
mov
mov
mov
xchg
fcmovbe
movsb
cld
add
in
jne
packuswb
jle
sahf
insb
jbe
flds
xchg
loop
and
in
cli
ljmp
fs
fcmove
xchg
aad
jnp
imul
add
inc
mov
test
push
and
cs
pusha
push
mov
mov
pop
jb
sub
mov
sbb
cltd
orb
xor
ja
and
sbb
fidivl
sbb
lret
cmpsb
addb
push
out
push
lock
out
call
aam
outsb
repnz
in
cmp
adc
sub
inc
in
fisttpll
xchg
inc
ret
popa
sub
add
sti
loopne
adc
rorb
add
pop
sub
mov
adc
cwtl
out
add
ret
ret
int3
add
cmp
out
jl
dec
adc
sub
loop
jecxz
add
fcomp
fildl
sbb
testl
fnsave
int3
xlat
lock
decb
push
imul
and
test
push
inc
push
jae
or
movsb
icebp
push
pop
cmp
popf
aam
push
xchg
pop
loopne
jg
add
mov
pop
mov
int3
adc
dec
jnp
add
nop
test
jl
addr16
in
inc
lock
dec
xor
mov
mov
movsb
in
into
add
enter
rolb
push
adc
leave
add
dec
add
jecxz
inc
aaa
lahf
add
mov
jg
or
push
xor
inc
test
adc
mov
lea
adc
dec
jmp
xlat
jno
outsb
jbe
pusha
lret
push
ret
dec
cmpsb
mov
dec
les
imul
js
cmpsl
aad
add
int
push
jecxz
test
and
mov
in
mov
in
inc
inc
push
cmp
add
adc
loop
and
jbe
enter
add
sbb
pop
and
stc
mov
pop
add
mov
dec
stos
push
jmp
adc
cmpsb
xchg
inc
ret
sbb
mov
lret
mov
add
loop
scas
mov
loopne
inc
lret
cmp
add
sar
push
push
jp
dec
loopne
ja
mov
add
outsb
out
xchg
push
jp
rcll
cmp
add
xlat
jmp
test
je
js
cs
rorb
push
or
cmp
mov
in
loope
test
mov
push
add
orb
ret
lods
insb
push
jne
iret
sub
mov
add
jmp
ret
es
dec
xor
mov
aaa
pushf
adc
loop
mov
or
cltd
pop
test
sbb
inc
xor
mov
and
cmp
cmpsb
les
sub
adc
mov
test
lods
mov
data16
sbb
or
into
mov
or
icebp
cmp
add
out
cli
cwtl
dec
add
or
out
cld
xchg
push
pop
cmp
xor
test
mov
add
cli
out
jg
scas
add
cmp
jne
add
pop
sbb
mov
fwait
xchg
das
cmpb
or
add
pushl
add
adc
or
mov
movsl
cmc
test
add
and
or
pop
fcmovnu
lock
loope
xor
pop
mov
testl
add
sahf
fcmovbe
mov
fistpll
cld
test
je
mov
ds
hlt
add
shlb
sub
sub
add
pop
fstps
mov
and
in
rorb
icebp
add
repnz
into
mov
cmpsb
sub
ret
xor
aad
push
shll
mov
jmp
mov
rorb
mov
jge
cmp
sbb
daa
pop
flds
inc
cmp
xchg
dec
ds
add
add
cld
repz
xor
mov
cmp
push
loopne
and
rolb
pop
xor
ss
jo
push
sahf
orl
mov
shrb
cmp
mov
ja
mov
bound
data16
icebp
test
scas
stc
sub
mov
hlt
loope
rolb
lods
cmp
pop
pop
jmp
loopne
sub
dec
pop
js
insb
cmp
ljmp
pop
xchg
pop
je
add
loope
lods
nop
scas
stos
jle
pop
aaa
sar
add
shlb
movsb
nop
sbb
mov
testl
cmpxchg
lcall
pusha
mov
mov
mov
fnstsw
and
lods
and
push
inc
add
iret
insl
cmp
mov
cmp
jo
pop
lods
lods
clc
sub
pop
scas
cmpb
sbb
cmp
call
loop
and
mov
push
xchg
add
push
cs
pop
add
pop
push
add
arpl
adc
jns
ret
repnz
hlt
in
js
push
ljmp
shlb
cmpsl
add
jo
inc
jb
lds
gs
ret
notb
jecxz
scas
add
cmp
inc
xlat
push
pusha
adc
outsl
add
das
or
repnz
bound
fucomi
mov
mov
add
cltd
aad
mov
xor
cmp
mov
popl
outsl
and
sub
repz
je
xor
add
pop
or
add
es
jmp
scas
xor
test
or
dec
negb
imul
pop
test
and
lret
add
push
jnp
add
add
shrb
aam
test
xchg
sub
mov
add
pop
cmp
sub
jb
xor
insb
sub
add
mov
push
cmp
lahf
cltd
inc
mov
xchg
add
in
movsb
arpl
mov
lock
ffreep
in
sub
mov
pop
ds
and
in
inc
call
dec
insl
cltd
xchg
mov
gs
push
mov
je
fisubs
das
movsl
cmp
sub
sar
add
arpl
pop
cmc
xor
or
cmp
push
mov
inc
cmp
mov
out
loopne
cmp
cli
xchg
add
mov
xchg
int3
pop
les
and
lds
dec
imul
push
int
add
jl
loope
es
out
fwait
add
cs
dec
jge
fcmovnbe
maxps
stc
and
mov
ss
sbb
add
sbb
mov
leave
add
xchg
stos
jno
into
add
stos
adc
xor
or
cmp
andl
js
xchg
jns
shlb
loopne
and
add
pop
push
addb
dec
notb
mov
pop
gs
shr
and
lds
push
iret
mov
inc
lods
or
mov
test
add
dec
out
add
fcmovne
lds
pusha
cld
mov
xchg
push
nop
adc
xchg
int3
leave
cs
stos
sti
and
aam
je
jl
adc
mov
adc
xchg
pop
loopne
push
inc
add
fwait
xchg
add
sbb
cmp
add
ret
sub
loope
ds
xchg
cmp
mov
add
sbb
pop
in
push
mov
lret
shrb
setle
test
in
and
jno
xchg
sub
insl
rcrb
xchg
stos
ret
mov
dec
add
aaa
sarl
rolb
jns
stos
es
mov
add
out
jmp
xor
imul
jecxz
mov
add
ret
or
stos
mov
scas
push
or
sub
aam
cmp
lds
mov
jl
add
mov
push
test
popw
jge
nop
shl
loope
clc
pop
repz
jns
pop
test
out
add
popf
inc
xchg
cmp
out
negl
in
fs
das
jo
ja
scas
sub
jp
cmp
mov
mov
into
test
mov
imul
cs
mov
ja
cld
rclb
xlat
sbb
jae
add
inc
pusha
insb
pop
add
test
mov
mov
fcmovnb
jg
pop
jnp
pop
cli
aam
add
rolb
cs
cmp
add
cmpsb
sub
push
or
addb
test
add
sub
movsb
sbb
lret
inc
fiadds
dec
pop
sub
nop
mov
imul
xchg
add
and
mov
push
or
push
test
pop
mov
add
add
into
push
cmpsb
cs
data16
jl
sbb
jns
add
pushf
ja
cwtl
mov
mov
nop
orb
cmp
sbbl
leave
dec
sarb
xor
out
add
outsb
mov
faddl
lods
jmp
sbb
mov
outsb
adc
sbb
push
ja
add
es
and
daa
lock
add
mov
aaa
aam
mov
aad
arpl
and
add
jae
xor
mov
gs
mov
stos
mov
and
int3
rorl
mov
cli
lahf
push
adc
loopne
mov
push
push
mov
or
xor
push
cs
clc
sub
les
cmp
pop
es
rorb
add
pushf
push
hlt
cmp
cwtl
push
add
sbb
mov
jp
mov
lea
sub
outsl
das
pusha
push
in
add
int3
or
std
movsl
loope
push
lret
popa
lcall
out
or
jns
cmp
cmp
add
sub
cmp
mov
or
xor
fiadds
movsl
mov
addb
xchg
jge
inc
adc
incl
pop
sub
add
test
test
cli
lods
mov
adc
add
insl
mov
in
add
mov
fscale
out
cs
push
xor
or
lcall
push
lret
add
or
sub
lods
sbb
push
push
pop
and
xor
pop
add
subl
daa
sbb
int
cld
aam
pusha
cmp
iret
cmp
sbbl
xor
xor
add
es
cli
out
cltd
test
faddl
xchg
mov
fdivs
pop
mov
insl
pop
add
mov
outsb
push
push
aas
test
cmpsl
mov
cmp
dec
xor
add
icebp
fldt
jp
movsl
dec
add
aam
lods
lahf
ror
outsl
cmp
jmp
fucomip
and
enter
add
fisubl
mov
cmpsl
hlt
rcrl
dec
mov
sub
mov
ret
out
lea
stos
dec
inc
pop
push
mov
jnp
int
jl
rolb
add
xchg
push
out
mov
add
imul
and
jbe
jp
sub
stos
xchg
add
mov
add
push
push
pop
pop
xchg
pop
lock
out
push
add
ss
mov
cmc
pop
pop
fisttpl
addl
mov
mov
cmp
inc
jno
mov
arpl
enter
pop
mov
jge
daa
out
fnsave
add
or
add
out
sub
gs
mov
jno
jg
test
lret
push
inc
clc
addl
test
lret
inc
dec
inc
rorl
push
test
and
inc
rolb
xlat
lea
inc
insl
jo
add
loop
cmp
shll
ja
cltd
fwait
ret
dec
psubb
jbe
and
xor
add
xor
cld
shl
mov
add
mov
mov
pop
push
mov
cmc
or
test
xchg
subb
daa
test
add
mov
inc
testl
or
xorl
mov
sub
add
inc
jg
fsubl
and
add
xchg
pop
in
xor
adc
lock
push
movsb
pop
push
add
mov
sahf
test
add
cmpsl
dec
pop
dec
jg
sbb
mov
sub
aaa
les
iret
xchg
push
mov
xchg
mov
add
jmp
int
add
and
addr16
clc
div
add
and
jns
movsl
cmp
stc
inc
enter
xchg
mov
mov
xor
sti
mov
inc
cmp
movb
add
push
pop
mov
or
cmp
mov
mov
sti
out
pop
dec
xchg
add
push
insb
cs
std
clc
js
inc
sbb
hlt
aas
add
cmpsb
mov
add
adc
mov
fnsave
cmpsl
and
pop
or
cmc
ja
arpl
std
add
lods
outsl
enter
pop
add
add
sbb
add
xor
add
ret
ja
test
add
mov
iret
ds
cmp
ret
stos
in
or
add
pop
mov
jbe
scas
add
aad
fs
mov
lldt
xlat
mov
outsb
js
add
je
and
roll
outsl
push
jne
pop
cmp
push
sub
mov
sbb
inc
mov
push
mov
mov
push
xchg
sbb
mov
andl
and
hlt
xchg
movsb
push
inc
mov
mov
inc
mov
outsb
jg
dec
cmc
sub
fsub
dec
mov
sbb
mov
out
js
mov
aaa
mov
repnz
daa
mov
add
loopne
pop
cmp
fwait
pop
jmp
mov
add
and
pop
mov
mov
mov
push
inc
inc
bound
sbb
sub
iret
rcrb
mov
add
ret
cltd
sbb
mov
shll
inc
mov
scas
in
pusha
fdivs
negl
lahf
inc
push
push
pop
das
jns
push
xor
mov
sar
sub
push
inc
pop
sti
cmc
fimull
jp
add
pop
xchg
sbb
mov
or
insb
jae
mov
add
mov
pop
jne
hlt
inc
sbb
add
jl
xchg
xchg
add
cmp
cmpsl
testb
xchg
xor
leave
ljmp
xlat
pop
into
shll
jle
mov
xor
movsb
ret
test
add
sbb
in
dec
add
popf
xor
sbb
inc
cmpsl
push
sti
mov
add
decl
sbb
or
adc
les
xor
mov
sub
cwtl
popl
fdivrl
mov
in
sub
add
jecxz
or
lret
cmp
imul
lock
mov
adc
popf
flds
das
daa
mov
pop
add
call
aam
add
inc
mov
fwait
xorb
dec
adc
repnz
sahf
add
lods
ljmp
inc
xor
rclb
pop
cmp
ja
bound
add
enter
sub
out
add
lds
in
add
push
jb
pop
and
cwtl
sahf
mov
sti
inc
or
inc
mov
xor
ss
add
out
cmpsb
into
add
mov
sar
or
dec
cli
cwtl
rclb
push
push
sbb
fldcw
rorb
or
ds
mov
and
int3
adc
into
cmp
sub
aam
and
jb
mov
aas
cli
lahf
add
shlb
stc
cwtl
les
pusha
call
or
sbb
data16
icebp
les
addr16
jno
jmp
add
frstor
xor
xor
fisubs
fildl
cmp
pop
sub
add
inc
sarb
push
loopne
mov
push
loop
decl
adc
mov
rolb
xor
pop
cmpl
imul
lock
mov
mov
push
sti
or
popa
in
push
ljmp
fcomip
add
pop
pop
pop
psrlw
lret
shll
lock
stos
mov
mov
cmp
stos
sbb
pop
and
outsl
add
pshufw
xchg
jne
push
mov
lock
llwpcb
gs
jo
pop
ret
call
pop
scas
rorl
daa
mov
inc
dec
aaa
sti
mov
pusha
popa
shrb
cmp
mov
mov
or
fnsave
dec
ret
add
dec
add
or
int
aaa
xchg
push
cmp
push
add
push
fistpll
ja
or
cltd
test
sbb
stc
nop
cmpsb
rcrl
fst
inc
jne
pop
jmp
add
in
nop
ud1
lahf
jne
fbstp
stc
add
or
mov
in
add
rolb
insl
cltd
push
aam
lea
xchg
outsb
mov
dec
ja
mov
add
js
inc
jmp
add
scas
movlhps
jl
mov
sbb
add
dec
cld
push
imul
add
daa
mov
scas
test
pop
cmpsb
xchg
pop
imul
dec
jns
or
xor
stos
sub
or
out
xchg
sbbb
jle
std
enter
pop
movsl
mov
lock
out
loopne
push
and
add
fsubr
mov
push
push
inc
push
push
addb
jae
or
imul
inc
pop
jecxz
mov
mov
add
pop
mov
xchg
clc
pop
xor
ret
push
mov
daa
add
test
sarb
add
inc
scas
andb
sub
imul
jle
test
xchg
leave
fnsave
xchg
loopne
sbb
lret
sub
and
std
inc
adc
pusha
xor
fisubs
js
test
stos
gs
aas
push
out
jecxz
cwtl
loop
or
inc
orl
xor
pop
cmpsw
shrl
mov
fdivl
aam
adcb
leave
adc
add
das
dec
dec
lock
dec
adc
inc
sub
mov
pop
fbstp
testb
addl
pop
arpl
js
in
add
lods
ret
in
rcl
mov
jg
andb
xchg
orb
push
in
scas
dec
fwait
push
add
mov
cmpsb
filds
mov
adc
add
pop
add
inc
loopne
push
in
cmp
cltd
cld
sub
rolb
test
xor
add
mov
dec
pop
inc
mov
std
inc
repnz
cmp
sbb
pop
mov
add
lods
mov
cmp
pusha
and
sbb
lret
lcall
mov
or
dec
rorb
mov
call
add
nop
push
xchg
adc
jbe
xchg
pushf
or
icebp
cmp
in
push
clc
add
imul
adcb
iret
or
in
dec
inc
adc
mov
fiaddl
xor
jo
pusha
sub
loopne
enter
sub
sbb
outsl
adc
or
inc
mov
dec
lods
mov
add
jg
stc
test
enter
push
mov
loopne
push
pop
sbb
cmpsl
ret
jmp
in
mov
jo
pusha
pop
sbb
rolb
mov
and
jg
jp
subl
dec
cmp
mov
and
add
shl
in
incl
push
and
xor
or
xchg
popf
sbbl
or
test
scas
or
or
enter
xor
or
pusha
cmp
cmp
mov
fiadds
fisubl
cmp
sbbb
inc
push
adc
stos
push
push
aad
decl
cmp
add
jb
jno
mov
out
add
das
loope
dec
inc
add
orb
add
aas
lret
adc
xor
cmp
and
xchg
leavew
add
add
fucom
xchg
mov
mul
jns
addb
sbb
mov
sbb
into
notb
cmp
dec
dec
push
andb
xlat
add
cmpsl
xor
add
push
jno
and
mov
xchg
test
inc
mov
xchg
lds
add
dec
pusha
xor
adc
int3
add
pop
push
inc
out
out
jl
add
push
popa
repnz
call
push
mov
xchg
add
xchg
or
leave
lds
add
lret
sub
xor
cli
aad
loopne
or
pop
pop
or
mov
dec
mov
sbb
jl
push
add
mov
add
jnp
sahf
or
test
sub
fs
add
scas
sub
add
jnp
cmp
mov
xchg
add
dec
shlb
les
mov
sub
out
andb
pop
add
lds
and
aas
jo
out
cli
sub
iret
movsb
les
out
mov
lret
or
mov
add
push
add
ret
add
and
jl
stc
rclb
out
mov
mov
dec
test
pop
mulps
or
aam
andl
adc
js
enter
or
into
sarb
cmp
dec
sahf
test
sti
add
jb
shlb
mov
movsb
rolb
add
lea
adc
adcl
jecxz
mull
mov
stc
add
sub
mov
mov
andb
adc
int
add
cmc
mov
add
add
daa
stos
xchg
repz
into
nop
or
nop
cmp
xchg
incl
sub
enter
push
xchg
cmp
dec
jns
pop
adc
lods
adc
loopne
sbb
mov
std
xchg
add
icebp
mov
leave
cwtl
cld
sbb
dec
pusha
dec
cltd
xor
and
mov
or
adc
loop
push
xlat
mov
outsl
dec
cmpl
addb
or
lahf
adc
jo
pop
mov
out
shrb
sbb
xchg
add
mov
jbe
bound
dec
push
das
into
enter
dec
pop
cmp
xlat
sahf
fisubl
sub
cmpsb
adc
add
jb
outsb
int
sub
push
je
pop
ja
add
imul
pop
mov
sbb
mov
into
dec
or
sbb
out
jns,pt
clc
roll
and
jp
jne,pn
scas
cmp
or
jecxz
imul
lods
in
push
lock
cmp
dec
add
inc
jmp
sbb
push
add
test
dec
fmull
add
dec
test
lret
mov
pusha
xor
ficoml
mov
add
jb
and
add
xor
fwait
or
addw
incb
imul
push
scas
leave
pop
fdiv
std
jg
mov
ljmp
ret
fucomi
push
sarb
mov
add
andb
int
outsl
cmp
and
mov
lods
addl
jne
jecxz
aaa
push
pop
lds
aam
sbb
pop
imulb
sbb
mov
cmpb
popa
xchg
adc
lret
mov
add
mov
aaa
add
sbb
xchg
or
add
divl
dec
hlt
pop
add
stos
ljmp
add
and
inc
adc
insb
dec
inc
adc
fwait
and
mov
jo
xlat
xchg
xchg
xchg
and
and
adc
mov
nop
or
inc
cmp
sahf
add
or
inc
sbb
xor
push
rorb
pop
test
andb
test
add
sub
jns
add
lds
add
add
xchg
and
xchg
ret
ss
add
mov
outsb
cltd
xor
jae
je
aaa
xor
adc
iret
xor
push
jmp
mov
adc
sub
out
loop
mov
xchg
repz
mov
call
add
in
pop
inc
add
addr16
adc
adc
fwait
xchg
mov
aas
outsb
xlat
xor
nop
repz
rol
and
bound
sbb
insl
dec
xor
repz
add
mov
rolb
cwtl
movsl
mov
pushf
aam
adc
imul
andb
mov
mov
push
shl
and
sbbl
dec
idiv
cli
add
dec
out
ds
mov
stos
in
and
inc
fnstcw
leave
jae
mov
add
jb
lcall
por
lods
adcb
data16
or
jmp
mov
add
mov
add
push
sbb
pop
sbb
fldl
fcoms
xchg
lea
add
test
dec
jmp
add
incl
add
jb
aad
or
add
jp
add
xchg
out
lret
or
pop
orl
xorb
mov
add
pop
fstpt
arpl
inc
jge
cmp
sahf
movsb
cmpsl
add
out
xchg
mov
les
enter
sub
cld
pop
scas
push
loop
loopne
inc
cmp
pop
ret
hlt
add
push
add
inc
data16
dec
mov
out
scas
hlt
sub
dec
mov
mov
je
outsb
rolb
jns
push
add
mov
rcll
sub
sbb
jg
add
loop
add
aaa
add
mov
shrl
lock
pop
cmp
adc
addb
sbb
stos
mov
test
sahf
add
popa
jb
add
mov
je
push
jp
cltd
add
rcl
pop
mov
dec
cmp
sbb
sbb
pop
cld
fdivrp
add
add
add
jne
add
cmpsl
fnsave
jo
jnp
cmp
pop
mov
ret
add
add
loope
or
push
pusha
mov
push
add
sub
mov
pop
movsl
pop
dec
xor
pop
divl
lea
cld
pop
in
rcr
pusha
enter
testb
aam
jbe
xorb
fcompl
add
ljmp
aad
add
test
div
cltd
test
or
loopne
scas
ret
or
mov
loopne
add
daa
inc
icebp
ficomps
and
inc
xor
loop
cmpsb
cmp
add
push
cmp
repnz
inc
bound
mov
add
mov
mov
pop
pusha
add
faddl
jno
mov
cmp
test
fld1
lcall
xor
add
jns
sub
push
inc
pop
mov
jnp
xor
sti
cli
cmp
gs
pop
jb
add
inc
pop
fmull
mov
into
push
and
das
lock
fs
push
fimull
xchg
loopne
sbb
lock
mov
and
or
jbe
add
loop
mov
pop
adc
adc
xchg
cmpl
out
imul
or
sub
ja
cmp
shll
adc
cwtl
inc
data16
adc
add
adc
mov
fstl
mov
jne
pop
inc
sbb
add
movsb
inc
sarl
push
pop
xchg
dec
jp
xor
cld
cmp
js
or
adc
out
ja
add
arpl
popa
icebp
imulb
xchg
call
mov
sub
shlb
pusha
mov
and
cmpsl
xor
mov
adc
icebp
sahf
add
jae
and
or
nop
jge
addb
sub
pop
push
test
sbb
push
add
dec
add
sub
add
inc
stos
test
flds
in
mov
or
mov
dec
inc
mov
push
and
mov
ljmp
add
and
es
dec
ret
sbbb
cmp
pop
inc
push
add
jo
mov
inc
mov
add
mov
les
sub
xchg
clc
vsubss
insl
push
lods
call
or
and
fcoms
adc
and
lds
hlt
adc
cmpsl
sbb
pop
and
cmp
rolb
jno
mov
cltd
insl
lock
idiv
sti
cmp
add
pop
jecxz
cmp
movsb
xor
or
mov
adc
cmpsl
rolb
jbe
push
dec
fs
xchg
test
in
pop
insb
push
ja
pop
lahf
mov
dec
jecxz
test
and
testl
or
out
cmp
sbb
xchg
imul
mov
add
push
jns
mov
aas
andb
mov
pop
cmp
pushf
dec
pop
mov
mov
pop
jmp
mov
lock
or
out
jle
jl
shll
rcrb
xchg
mov
add
cmc
adc
xor
and
mov
js
add
in
clc
add
popa
scas
xlat
rorb
cs
add
dec
mov
jle
sub
mov
cmpsb
add
push
or
outsb
inc
outsl
add
data16
inc
xor
mov
arpl
aam
stos
mov
imul
mov
add
push
fmull
cmp
and
mov
and
popw
lahf
popa
shl
add
icebp
pop
lock
ret
xor
repnz
inc
in
add
jne
pusha
hlt
mov
mov
inc
push
dec
xchg
lcall
and
sarb
ds
mov
inc
sub
jns
push
dec
in
gs
nop
mov
pop
pop
add
shlb
mov
imul
add
xlat
flds
scas
mov
xchg
fdivrl
hlt
fs
pop
and
add
cmpsb
outsb
data16
out
lods
pusha
dec
mov
cmpsl
and
xor
loopne
jg
xchg
ljmp
sub
cltd
cld
mov
cmpsl
push
sarb
add
pushf
test
mov
dec
sub
lods
fwait
lds
xor
ljmp
xor
in
and
xchg
ret
ds
call
add
out
jno
pushf
nop
mov
outsl
sub
insb
jo
rcll
repz
cmp
mov
or
nop
fstps
lret
or
and
jg
add
sub
jge
push
fnstenv
mov
adc
cmp
push
xlat
add
lcall
pop
add
adc
push
jb
into
adc
iret
mov
xor
add
test
fdiv
xchg
jo
mov
rolb
cli
pop
ds
data16
fidivs
dec
arpl
adc
cld
adc
shl
pop
sbb
test
nop
pop
add
test
inc
and
pop
fimuls
popf
jnp
loop
decb
dec
xchg
repz
js
add
scas
mull
lahf
sub
xchg
mov
push
and
out
add
dec
mov
xchg
add
repz
decl
stos
add
xchg
call
jge
fcmovnb
inc
sbb
sbb
mov
fstpl
gs
clc
xlat
pop
add
xor
in
inc
mov
and
sub
add
mov
mov
or
xchg
mov
add
fwait
lcall
add
orl
mov
sub
pop
sahf
pop
or
sub
mov
inc
addb
add
fidivs
insb
fbstp
pusha
mov
sbb
out
and
cmpsb
jo
out
out
ds
cwtl
dec
cmp
add
pop
loopne
orps
ss
lds
jb
pop
or
testl
fsubrp
push
pop
cmp
xchg
sub
shll
ror
add
jle
loopne
jmp
sbb
jecxz
in
mov
shlb
adc
push
add
push
into
mov
add
adc
pop
fwait
or
sbb
insb
add
adc
roll
push
test
pop
sub
add
loop
add
cmp
pop
add
and
inc
mov
mov
adc
mov
cs
xor
bound
dec
cmp
stc
jl
movsb
add
lods
xor
lock
sbb
cmp
fs
cwtl
leave
sti
lock
jb
pop
popa
out
jno
adc
ficoml
lods
roll
dec
xor
xor
add
repnz
pop
mov
mov
mov
mov
aam
mov
fmulp
pop
mov
fcoms
mov
dec
cmp
orl
nop
repnz
cmp
add
push
xor
scas
das
push
mov
or
cmpsl
mov
iret
rol
stos
pusha
rol
adc
movsl
int3
mov
test
dec
add
inc
mov
add
jae
ret
pop
daa
xor
sbb
sub
or
add
mov
push
jg
repnz
mov
xor
jne
insl
xchg
push
mov
and
add
sbb
mov
add
shll
lds
add
int
sub
add
addb
shl
mov
push
xchg
popa
daa
push
loop
add
pop
into
fildl
sbb
xor
fmuls
add
imul
nop
pusha
es
cmp
movl
popf
or
push
xchg
adcb
jb
popl
pusha
cmp
xchg
pop
mov
sti
mov
in
repnz
mov
enter
add
jno
cmp
pop
push
jns
orl
cmpsl
aad
out
inc
ror
icebp
lock
cld
sbb
loop
mov
data16
das
push
lock
in
lea
jecxz
lret
adc
filds
add
fwait
nop
imul
js
jne
pop
hlt
and
push
xchg
cmp
popa
ds
push
add
lea
fbld
stc
fstl
out
add
les
add
enter
rcr
scas
aad
pop
inc
mov
paddusb
adc
sub
in
sub
inc
push
loopne
mov
cmp
xchg
iret
test
pop
movsl
dec
fs
xor
mov
and
ljmp
pop
xor
mov
data16
insl
dec
or
fstpl
sbb
aad
push
hlt
jp
add
cmpsl
adc
fwait
divb
lock
xlat
daa
sub
jl
aam
out
mov
cmpl
stc
jg
nop
mov
push
dec
loope
sbb
hlt
fadds
cmp
inc
xor
insl
test
pop
out
push
cwtl
pop
cmp
xor
push
xor
fs
inc
and
inc
das
add
cmp
cwtl
mov
dec
mov
nop
lds
pop
add
dec
cs
or
mov
mov
je
and
cmp
fs
pusha
inc
ss
cmpsb
dec
repnz
jecxz
sahf
hlt
les
push
and
mov
xor
add
in
xchg
aas
jae
ja
jo
mov
call
sti
jge
add
push
and
mov
add
mov
addr16
fisubs
repnz
add
xchg
jae
sahf
push
jge
cltd
rorl
and
ds
xor
cmp
add
clc
test
adc
adc
lahf
xchg
jo
add
inc
test
sbb
cmpsl
add
lret
xor
xor
and
data16
mov
pop
subl
insl
js
add
sub
cli
pusha
pusha
int3
cwtl
lods
mov
xchg
inc
fiadds
add
movsl
testb
in
cli
mov
hlt
enter
xor
xor
jne
add
ja
cmpsl
outsb
push
adc
pop
push
mov
rclb
add
or
ficompl
jg
add
aad
fs
call
mov
incb
rorl
xor
xchg
sbbb
test
push
dec
filds
add
push
inc
or
dec
mov
cmp
les
push
repz
lods
sbb
pop
jne
jle
or
push
jge
or
xchg
mov
fisttpll
add
mov
cwtl
or
cmp
push
pop
dec
pop
jle
popf
pop
pop
ret
call
mov
in
add
call
shll
xor
sub
inc
mov
ror
or
xchg
addb
shlb
loopne
ficomps
dec
enter
adc
and
jge
lock
mov
cmp
pop
mov
xor
add
mov
sbb
fsub
xor
add
jmp
imul
xchg
dec
cmp
popf
add
xchg
fsubs
jo
push
iret
add
push
lea
add
aam
push
xchg
sarl
mov
out
inc
loop
cs
adc
add
lods
mov
icebp
nop
add
stc
int
pusha
push
and
daa
inc
mov
cmp
std
pop
or
mov
or
jge
and
cmpb
outsb
jnp
lret
pop
push
test
and
adc
pop
push
lock
pop
js
stos
push
adc
mov
sub
add
cld
or
add
mov
cmp
xchg
dec
stos
fimull
adc
xorl
out
add
inc
outsb
and
xchg
xchg
cmp
mov
inc
cli
push
sbb
jb
jne
mov
sub
jae
xor
jg
pop
fstps
mov
add
fnsave
cmp
arpl
inc
xor
sub
loope
mov
rclb
add
cmpl
insb
in
sub
lret
popf
cmpb
jbe
insl
adc
imul
dec
add
nop
negl
add
cmpsl
inc
mov
daa
inc
mov
aaa
push
ja
fwait
mov
mov
mov
fistpll
xchg
and
inc
leave
add
adc
push
mov
andb
addl
testb
addr16
sbb
or
cmpsb
cmpsl
andb
mov
xor
pop
inc
in
jle
jo
arpl
push
push
and
add
mov
and
int3
add
inc
aam
insl
loopne
mov
add
jns
cmp
outsl
out
mov
mov
sub
or
or
sbb
pusha
aam
cmp
ja
sub
pop
pop
or
cltd
inc
add
sbb
mov
daa
lret
mov
addb
rorb
sarb
xchg
add
iret
sbb
ret
dec
or
jnp
lcall
bound
cld
xor
jns
add
call
testb
fimull
inc
fisttpll
add
mov
adc
jo
inc
push
pop
mov
idivl
xchg
sarl
and
or
mov
testl
add
pop
cmp
test
xor
cld
pop
insb
test
scas
xchg
cmp
in
aaa
or
cld
lahf
pop
or
sub
jmp
xchg
push
in
inc
mov
lret
call
imul
add
inc
add
pushf
loop
xor
or
lds
add
in
data16
mov
insb
inc
add
dec
std
and
fdivl
jp
sbb
je
lock
pop
add
dec
xor
push
dec
or
jmp
add
inc
and
es
adc
pop
cmc
ror
enter
cs
dec
xor
daa
or
std
js
into
sahf
jge
jnp
outsl
xor
movsb
push
rolb
and
cmp
dec
sub
inc
andb
fdivrs
arpl
sub
cmc
lock
push
ret
add
rol
insl
xchg
add
xchg
aad
mov
sub
pop
mov
mov
inc
add
dec
enter
loopne
shr
cmpsb
fdivs
loop
add
add
adc
or
rcrb
dec
movsl
sbb
les
push
jns
add
cltd
insb
jmp
cmp
mov
cmp
enter
movsl
pop
mov
aaa
dec
jo
pop
outsb
popf
jge
nop
int3
loop
add
xor
or
xchg
iret
adc
mov
pop
popf
lock
inc
sub
xchg
cmc
fiaddl
push
add
push
int
add
insb
das
arpl
lret
mov
incb
cmp
push
pusha
adc
mov
cmp
cwtl
test
pop
pop
add
push
and
repnz
or
push
clc
jle
jmp
push
or
stos
stc
pusha
fsub
fldenv
add
rolb
add
aam
cmpl
mov
pop
outsl
popa
sub
sub
jo
shll
add
cmp
mov
mov
mov
test
mov
fbld
mov
add
push
and
mov
imul
pop
jnp
add
jbe
jne
test
push
fdivrl
inc
sbb
jge
fcmovnbe
inc
aad
xchg
nop
jne
cs
add
enter
out
mov
add
pop
inc
mov
add
je
into
sbb
cltd
jmp
push
mov
icebp
sub
pusha
fidivs
rolb
mov
jno
add
lahf
bound
clc
mov
xchg
jge
add
out
stos
imul
and
fwait
xor
push
out
add
ret
cmpsl
shld
or
pop
out
scas
pusha
add
sbb
add
sub
lret
sbb
pop
jns
mov
fistl
or
mov
mov
inc
lret
ret
neg
push
stc
jge
add
xor
fisttps
xorb
dec
mov
sub
es
add
insb
or
sub
xchg
push
cld
pushf
movsb
pop
addl
xor
dec
nop
out
loop
add
jno
pop
lahf
and
pusha
push
xchg
pop
add
pop
fs
push
js
cmp
mov
cli
fnsave
jb
and
adc
mov
dec
pop
inc
sub
faddp
dec
xchg
xlat
fcomps
fld
insb
jo
sub
leave
sbb
or
mov
test
mov
aas
dec
cwtl
or
xlat
pop
insb
inc
jle
out
dec
jnp
xchg
addl
pop
int
aas
add
cmpsl
add
into
lds
mov
scas
das
in
dec
adc
or
lods
jmp
nop
cmpsl
cs
lds
rol
or
aas
sub
popf
sub
mov
popa
xchg
test
mov
rcll
fdivrs
pop
xchg
inc
mov
data16
adc
mov
xor
mov
lods
sub
and
loop
add
add
repz
adc
or
and
int
pop
lock
add
pop
add
push
add
out
ljmp
cli
inc
and
icebp
and
dec
mov
fs
jmp
mov
jae
inc
jmp
nop
scas
insb
jnp
adc
or
add
dec
mov
jmp
js
add
dec
xchg
adcb
dec
outsl
int
sbb
inc
in
shl
shlb
add
adc
das
sbb
push
lcall
dec
push
sbb
mov
test
add
sub
adcl
stos
orb
out
jo
lea
dec
push
subb
or
pusha
add
inc
sbb
add
xchg
enter
cli
xor
addl
test
rolb
mov
adc
out
dec
pop
incb
xor
daa
movsl
int3
adc
jle
pop
mov
cmp
sub
push
pusha
test
lock
mov
inc
out
cmp
add
movsl
mov
xor
mov
sbb
and
movb
add
sub
stc
mov
add
aaa
sub
fists
add
pop
jle
arpl
sub
frstor
dec
add
test
add
sbb
pushf
inc
subb
nop
call
fldl
dec
or
out
xchg
xchg
sub
sbb
mov
mov
jo
mov
add
cld
xor
xor
call
hlt
lock
add
xchg
inc
push
cmpsb
push
mov
add
into
lar
test
mov
outsl
adc
testb
and
in
cmp
cmpsb
or
push
and
subb
test
out
aad
mov
loope
mov
rep
mov
sbb
adc
shrl
inc
cmc
jae
addl
int3
and
or
test
pop
mov
cmp
lea
loopne
addl
mov
cld
out
pushf
pop
pop
iret
xor
fldl
arpl
data16
add
repz
dec
add
ljmp
adc
add
repnz
loopne
jne
fimuls
pop
orb
orl
vmovd
bound
xchg
xchg
cmc
gs
sbb
cli
xlat
int3
popf
ret
or
xor
mov
pop
mov
sarb
inc
pop
add
call
aas
push
or
ja
add
mov
lcall
push
pop
add
pop
inc
aaa
ret
or
mov
sbb
push
inc
pop
mov
add
cltd
xchg
adc
shlb
repz
mov
sbb
or
or
cmp
aad
aam
cmc
sub
lahf
mov
mov
and
inc
jg
enter
xchg
add
mov
push
sub
and
pop
enter
iret
add
ljmp
call
sub
fsubrl
dec
lods
adc
jno
jne
lcall
cmpb
jg
or
outsb
xor
test
push
add
pop
icebp
rcrl
dec
add
xlat
dec
mov
mov
outsb
nop
pop
sub
pcmpeqb
pop
popa
pop
shlb
or
jmp
test
cld
call
gs
cwtl
rclb
xchg
add
fucomi
and
cmp
lret
xchg
xlat
cmp
add
call
xchg
mov
adc
pop
nop
jo
sbb
dec
pop
push
and
sub
nop
cmp
pop
stc
cmp
imul
arpl
jp
test
in
cmpsb
xchg
lods
sub
sbb
stc
jbe
push
xchg
aad
das
dec
repz
add
popl
ret
std
cmp
xchg
stc
lods
fdivl
jno
add
jae
push
aas
pushf
lds
mov
mov
das
pop
add
push
add
push
add
push
frstpm(287
add
mov
push
add
pop
les
repz
mov
lcall
sub
sbbb
push
cmc
dec
sti
mov
sub
dec
add
flds
cwtl
and
loope
push
jmp
dec
loopne
pop
nop
addr16
neg
sbb
shl
add
and
add
jb
test
jae
xchg
test
mov
xor
add
adc
or
add
fs
pop
arpl
mov
loop
fdivrs
add
and
jns
and
adc
add
add
loop
mov
cmp
incb
data16
test
lods
dec
or
dec
add
add
loopne
cmp
loope
addr16
cmp
and
and
and
add
xorl
popf
adc
shrb
cwtl
aam
xor
nop
and
sarb
add
sbb
sahf
movsl
aam
dec
push
dec
dec
inc
xlat
add
adc
and
test
adc
xor
or
pop
lock
rclb
push
imul
fildl
jo
out
je
cltd
adc
jge
inc
xchg
xchg
sbb
bound
addl
imul
clc
cld
cmpb
push
dec
test
aas
cwtl
mov
jae
jbe
push
movsb
cld
pop
mov
imul
sbb
test
scas
loope
add
jp
sub
inc
lea
adc
mov
nop
lds
add
mov
add
adc
aam
movsb
add
mov
test
or
adc
rorb
push
mov
push
mov
add
rolb
subb
sbb
outsl
add
mov
or
cmp
add
out
inc
adc
add
aad
jge
mov
push
sub
shrl
dec
hlt
sbb
ds
sbb
or
sti
int3
outsl
adc
ss
rorb
sub
add
fisttps
adc
shl
pop
dec
movsb
sub
inc
pushf
jnp
xor
dec
mov
pop
mov
out
cltd
stos
sbb
cmc
pusha
fs
jg
adc
mov
testb
or
jmp
push
pop
imul
testb
pushf
icebp
lret
shrl
or
adc
cmp
jne
xchg
and
stos
mov
pushf
clc
cmp
pop
mov
add
push
mov
jmp
xor
pushf
cli
insb
in
insb
inc
add
push
mull
rcr
js
add
xor
lret
mov
insb
iret
add
imul
adc
mov
xchg
nop
out
inc
cmp
mov
sub
add
enter
out
les
int3
and
lods
call
sbb
mov
lock
xchg
sti
mov
jl
out
iret
add
pop
arpl
js
jbe
jle
popf
add
cwtl
xor
js
add
inc
testl
movsb
jle
dec
orl
add
pop
xchg
and
test
mov
xchg
sbb
add
adc
jg
add
imul
sahf
in
icebp
add
fdivs
call
into
jne
sbb
add
fisubs
fadds
pop
lods
data16
xor
mov
lods
cmpsb
arpl
bound
add
pop
ss
and
enter
je
into
mov
xor
les
mov
sbb
fisttpll
xor
mov
dec
jb
dec
mov
push
nop
in
orb
fsubrl
xchg
js
add
test
inc
sbb
or
sub
add
add
cmc
sti
add
push
lahf
pop
mov
repz
mov
test
repz
pop
jmp
iret
loopne
sbb
mov
pop
cwtl
loope
inc
stc
into
outsb
add
add
shll
dec
inc
add
rorl
add
mov
int3
cmp
lcall
fdivrl
nop
movsb
dec
pop
movsl
jo
push
fs
sbb
icebp
push
subb
sbb
inc
addr16
add
cli
xchg
pusha
jl
addb
jl
rorl
fwait
add
push
sbb
pop
ret
add
scas
lea
pop
jo
jecxz
aas
incb
clc
loope
mov
shr
xchg
or
and
add
and
cmp
dec
test
shlb
add
icebp
cltd
and
movsl
in
xor
xor
mov
xchg
xchg
push
inc
add
sub
roll
pop
popf
add
mov
push
mov
lock
add
mov
inc
cmpsb
jbe
push
adc
pop
and
pop
pop
xchg
cmp
rol
mov
repnz
pop
sbb
stc
in
test
push
sub
cltd
movsb
dec
mov
pushf
or
mov
int3
mov
jae
add
imul
cld
mov
test
mov
jo
lahf
mov
add
js
xor
pop
adc
push
mov
scas
adc
not
shl
inc
mov
ljmp
pop
push
and
jo
imul
lock
inc
daa
and
dec
sub
mov
inc
or
mov
addb
cmc
or
mov
fidivrs
mov
adc
fcoml
jbe
dec
nop
mov
push
cmp
mov
dec
inc
shrb
add
sub
mov
dec
mov
add
int
mov
ret
pop
mov
mov
sub
inc
mov
add
or
andb
adc
xchg
add
popa
lock
inc
and
inc
cmp
push
sub
les
push
add
cmp
mov
sub
add
dec
mov
add
idivb
add
repnz
pop
lods
nop
test
es
bound
mov
push
cld
pop
jb
icebp
add
out
aad
out
aaa
pusha
rclb
adc
fsubrs
add
or
sbb
movsl
dec
mov
mov
repz
add
sub
leave
and
andl
arpl
dec
push
fcoms
mov
mov
and
or
jne
je
push
sbb
add
sbb
stc
adcl
xor
add
ret
lock
dec
xchg
xor
xchg
add
icebp
sub
in
push
add
mov
out
adc
scas
rol
dec
ret
inc
sbb
dec
cmp
xor
push
mov
or
movsb
xlat
daa
stos
add
jne
sbb
jno
nop
rclb
ds
add
inc
seta
popf
add
cmp
shr
dec
cmp
mov
scas
pop
in
dec
rcrl
test
lds
sbb
xlat
test
dec
cmp
pushf
sbb
cld
xor
mov
test
ljmp
push
daa
std
jg
sbb
push
mov
ss
push
ret
loop
xor
add
aad
cltd
adc
pop
scas
test
push
lea
pusha
mov
sub
and
cmp
adc
test
add
inc
dec
in
call
shll
push
cmp
je
aam
lods
int
add
xchg
mov
and
and
hlt
fbstp
push
loope
cwtl
xchg
icebp
das
add
mov
mov
add
subb
and
and
push
dec
mov
test
es
sbb
fcomi
call
or
dec
add
mov
aaa
inc
sub
add
popf
sti
add
stos
mov
sbb
dec
mov
mov
cmp
pop
add
call
icebp
mov
shrl
jne
nop
pushf
mov
ss
add
cmpsl
or
out
ret
cmp
outsb
cwtl
cmp
sub
pop
sar
xchg
cmp
fidivrs
push
pusha
dec
scas
add
push
popa
pop
fucomip
xorl
jno
ljmp
mov
aas
mov
or
jecxz
add
dec
aaa
test
add
mov
adc
ret
inc
or
mov
outsb
push
stos
sbb
xor
adcb
pop
dec
and
or
lahf
jg
inc
das
loopne
jno
nop
sub
movsl
push
cmp
xor
ja
push
sub
add
pop
mov
add
cmp
mov
das
xor
add
adc
aad
les
test
loopne
mov
inc
addl
cwtl
aaa
jle
push
push
cltd
cmp
xor
mov
shlb
add
jle
cwtl
std
pop
cmpb
jl
lcall
dec
sarl
mov
pop
mull
loopne
jae
or
mov
push
insb
orb
and
addb
pop
mov
scas
imul
aam
loopne
cmc
and
lock
mov
add
negb
imul
ss
dec
xlat
pusha
cli
ret
aam
add
loopne
lret
in
mov
sbb
aas
jl
cmpsl
mov
in
rcrb
dec
mov
xor
pop
pop
and
cmp
daa
cli
sbb
jmp
sbb
jne
jle
and
and
gs
adc
cltd
cmp
push
or
jmp
cmp
shrl
pushf
aaa
out
adc
rcr
sub
add
and
lret
adc
loope
inc
in
sbbb
ja
mov
adc
ret
inc
adc
in
loop
mov
dec
mov
push
mov
jo
nop
xchg
mov
add
inc
dec
js
icebp
add
add
xchg
ffree
negl
ss
add
pop
out
in
loop
test
outsb
jp
mov
add
or
push
pop
ljmp
lds
sbb
sbb
loop
cmp
imul
repz
in
sbb
jmp
mov
add
mov
mov
in
test
loopne
ja
ljmp
lods
and
call
into
stc
fldcw
xchg
loopne
push
test
pop
aas
push
int
mov
pop
arpl
sbb
and
adc
incl
pop
xor
ret
jg
add
inc
and
sbb
cmp
dec
sub
das
aaa
jle
cmpsb
xor
push
mov
test
stos
rcrb
add
negl
mov
sub
sbb
add
and
dec
add
mov
mov
roll
and
test
and
mov
call
sbb
push
add
enter
jecxz
sbb
ret
push
outsb
sahf
cmp
aam
orl
sub
fsubr
add
test
pop
insb
mov
cli
adc
mov
mov
pop
push
in
repnz
rclb
mov
mov
add
pop
ds
add
lods
test
loopne
sub
or
jmp
push
or
pop
jge
incl
push
adc
adc
inc
or
nop
cmp
sbb
daa
and
adc
adc
fstpt
adc
inc
pop
enter
or
add
mov
repz
ret
push
sarl
push
loopne
rcrl
std
jae
sahf
ds
or
add
inc
jp
insb
aam
stos
mov
les
or
push
jle
jb
and
add
je
dec
sbb
cs
cmp
jp
add
rolb
or
daa
outsb
add
xor
push
shll
call
data16
and
push
mov
or
or
jno
mov
data16
dec
arpl
cld
mov
add
outsl
mov
xor
mov
inc
aaa
pop
mov
int3
jnp
sti
in
in
subl
cmp
imull
je
fwait
and
sbb
test
jp
add
stc
adc
sbbb
stos
dec
fisttpl
push
or
sub
sahf
outsb
negl
mov
rolb
xlat
dec
sete
jecxz
pop
movsl
stc
push
sbb
mov
shll
lock
and
xlat
add
out
cmp
cmc
insb
mov
imul
pop
popf
cwtl
and
cld
push
adc
add
sub
mov
pop
mov
cld
mov
rcl
xor
push
repz
mov
jecxz
inc
mov
inc
pop
mov
adc
add
jl
int3
aad
aaa
push
add
fsubs
aas
ljmp
push
jne
cmc
add
iret
stos
mov
jge
or
lret
roll
push
add
jge
adc
mov
and
fiadds
add
xor
cmp
xor
incl
mov
sub
fiadds
fmuls
insb
stc
dec
push
pop
cmp
test
das
aaa
fimuls
outsb
add
bound
pop
in
sbb
xor
fldenv
into
fldl
sti
loope
and
dec
mov
out
lods
add
clc
mov
lods
mov
add
dec
adc
push
xor
movsb
jbe
add
and
add
cmp
prefetcht1
xor
rorb
mov
outsl
stos
add
xchg
pop
jns
dec
std
pop
sbb
sub
ja
push
clc
xor
add
lods
jmp
test
loope
cmp
pop
test
add
add
add
adc
push
lds
xchg
mov
pop
pop
cmpsb
iret
xchg
mov
dec
add
jno
lock
jae
jb
cld
add
push
mov
icebp
mov
push
mov
shrb
add
inc
outsb
mov
dec
pop
xchg
add
cmpsl
lret
jb
int
add
pushf
and
in
xchg
repnz
sbb
xor
and
out
or
jnp
lret
pop
shlb
xor
and
or
lods
lret
rclb
push
and
lret
clc
lahf
lods
pop
cmp
xlat
fadds
test
or
xor
orb
divb
pop
add
repnz
loop
fs
jp
add
fnstsw
pop
lods
mov
stc
and
and
mov
push
xor
push
orl
jge
pop
imul
insb
or
lods
pop
dec
outsl
out
data16
pop
add
mov
add
insb
cmc
jae
rcll
adcb
xchg
insl
sar
lock
dec
movsb
add
stos
xor
xchg
es
dec
pusha
add
ljmp
jp
xor
pop
push
test
arpl
adc
nop
mov
push
xor
push
add
jmp
enter
pop
cmp
test
adc
inc
popf
roll
jg
xor
dec
adc
fsubs
and
add
add
les
mov
cmc
mov
sub
mov
in
filds
icebp
xchg
imul
pop
test
fsubr
add
sub
lcall
xor
push
add
and
xorl
xlat
pop
xchg
mov
les
add
incl
adc
fdivrs
jmp
fs
sbb
inc
sbb
or
add
ds
push
jnp
pop
movd
cmp
aam
lods
test
orb
xchg
and
scas
or
mov
push
mov
mov
jl
pop
clc
jbe
pusha
add
popa
sub
sti
or
jb
loopne
mov
dec
pop
jbe
inc
pop
jl
adcb
mov
mov
stos
jns
in
pusha
mov
dec
fsubrl
imul
and
and
insb
mov
pusha
dec
add
push
rolb
mov
gs
sahf
rol
bnd
mov
movsl
bndstx
rolb
test
repnz
in
or
and
xor
rorb
jbe
mov
sub
mov
push
imul
mov
add
or
mov
dec
push
push
mov
daa
push
adc
add
mov
fcmove
aas
data16
icebp
call
andl
jne
push
js
xor
dec
cmpsl
or
xlat
int
sub
loop
es
js
add
mov
add
ds
dec
push
hlt
mov
push
ja
add
cmp
cltd
sub
xchg
lea
lret
add
test
xlat
fadds
test
adc
xchg
ja
xchg
xor
or
add
in
into
fmull
insb
ja
jmp
pop
lret
sub
pop
add
cmp
or
add
add
inc
mov
ljmp
xor
je
popa
js
fildll
es
add
cld
xor
lock
add
cs
jae
fsubr
testl
movsl
sbb
pop
orb
mov
aam
cmp
pop
and
test
pop
xchg
enter
jo
cmp
push
loope
xchg
mov
inc
loope
add
sub
jl
addb
test
jb
and
imul
and
aam
add
pop
jbe
scas
xchg
xchg
inc
les
xor
daa
clc
imul
in
loopne
sub
out
dec
pop
js
clc
or
and
pop
dec
add
pop
mov
rcll
push
sti
cs
sbb
andl
cmp
iret
pop
sbb
hlt
adc
sub
clc
loope
lods
adc
mov
lret
xchg
pop
roll
sti
clc
pop
mov
cs
mov
inc
int3
mov
push
out
dec
rorl
mov
push
repnz
mov
pop
cmp
jno
cwtl
cmp
add
test
iret
repnz
flds
mov
inc
dec
add
std
out
push
fwait
sti
add
rorb
ja
pushf
push
add
into
stos
xchg
shll
adc
js
sbb
lock
std
nop
push
fmuls
stos
mov
andb
out
add
jle
push
sbb
daa
add
mov
dec
push
xchg
and
idivb
adc
pop
insl
jle
cmp
or
pop
clc
mov
add
std
enter
jg
loopne
push
mov
insb
lods
aas
pop
sbb
mov
dec
adc
test
jnp
xchg
mov
push
xor
jbe
test
mov
pop
inc
lds
cmp
in
dec
cmpsl
add
clc
dec
lods
pusha
xchg
add
add
xchg
mov
inc
or
nop
dec
pop
les
adc
enter
adc
xor
mov
xor
lds
jge
push
movsl
mov
dec
fs
add
sub
inc
push
imul
pop
faddp
fs
pusha
aam
shrb
subl
jb
pop
xlat
jo
dec
shrl
push
adc
test
ret
and
sbbb
inc
sub
jo
push
add
decl
mov
adc
fcmovnb
lods
add
stos
nop
out
in
int3
pop
shrb
shrl
test
int
adcl
xor
repnz
insb
adc
xor
enter
add
outsb
stc
and
pusha
add
lods
mov
or
ds
xchg
es
xchg
loop
std
movsl
jecxz
xor
rcrl
fcompl
cmp
jb
add
adcl
dec
pushf
in
in
add
jecxz
xor
ja
mov
cmp
jbe
adc
loop
punpckhdq
test
adc
add
adc
add
mov
push
pop
dec
and
insb
xchg
or
add
bound
jp
push
jb
add
lods
mov
roll
sub
dec
icebp
xor
and
in
dec
shrl
add
pop
lea
fisttps
add
dec
push
test
loopne
sbb
or
mov
lea
repnz
scas
add
inc
jp
add
and
dec
pusha
lods
rolb
mov
shlb
in
mov
xchg
or
sbb
fcomps
dec
mov
mov
push
or
lods
and
int
jecxz
stc
or
nop
bound
int3
inc
pop
ret
movsb
shrb
add
or
fsubs
pop
mov
daa
mulb
dec
jmp
inc
inc
fs
stos
jg
dec
lahf
mov
cmp
add
cmp
pusha
sbb
fwait
mov
icebp
aas
movsl
cltd
xor
cmc
aam
mov
cmpl
int
fsubrs
mov
out
jnp
inc
cs
test
or
mov
ss
xor
pushl
pop
xorb
mov
bound
or
pop
push
push
lahf
xchg
push
loop
adc
mov
push
dec
xchg
push
in
cmp
pusha
lahf
or
inc
hlt
inc
repnz
sti
jmp
adc
xor
outsb
jge
xchg
sbb
xchg
icebp
pop
and
add
rcrl
mov
adc
inc
jns
and
loop
loopne
xor
cmp
std
es
shll
xchg
jecxz
movsb
cmp
mov
mov
stos
dec
pop
pop
cmp
add
or
pusha
cwtl
inc
add
sbb
int
xlat
or
lret
inc
loopne
repz
inc
mov
dec
in
pop
pop
xchg
add
sub
lret
or
sbb
mov
jno
jecxz
in
cmpsb
push
cli
pop
add
and
mov
xchg
push
popf
rcll
add
inc
outsl
int
mov
faddl
and
xchg
lods
scas
decb
pop
insl
andb
mov
jae
aas
add
sbb
sbb
add
or
sbb
sub
aaa
and
out
mov
sbb
xor
add
dec
jnp
xchg
jno
push
fwait
scas
repnz
sub
mov
mov
mov
sbb
out
sbb
add
jne
lcall
fwait
adcb
sti
pop
enter
int
insb
bound
adc
or
adc
rorl
add
lret
fists
stc
pop
lods
add
or
mov
lea
outsl
js
push
lahf
mov
adc
pop
lock
hlt
test
call
ljmp
out
mov
int3
and
call
push
jb
cltd
daa
jle
jo
dec
add
sbb
jno
and
push
jo
daa
or
out
pusha
mov
dec
aam
push
mov
cmp
and
jns
add
ja
fadd
clc
addr16
lods
test
pushf
push
sbb
fisubrs
adc
sbb
mov
cmpsl
pop
push
outsb
add
shll
mov
sbbl
sbb
add
and
add
mov
mov
fdiv
push
mov
movsb
nop
jmp
jbe
ret
punpckhbw
int3
add
adc
dec
add
fadd
fsubs
sub
push
ja
jmp
xor
shll
aas
and
adc
push
ja
rol
test
add
repz
pop
add
cmp
add
jge
add
push
out
mov
sub
push
movsb
mov
ja
dec
arpl
mov
loop
inc
pop
scas
lret
lahf
xorb
arpl
push
dec
fwait
add
xor
dec
sbb
cmc
outsb
test
test
out
loop
shl
sub
add
aam
enter
pusha
hlt
pop
jne
pop
cmp
pop
test
jmp
enter
adc
add
cmp
pop
inc
pop
scas
mov
or
mov
sub
roll
push
inc
sbb
repz
dec
xor
ljmp
xor
xor
sub
fisubrs
leave
cmp
xorb
sbb
sub
ljmp
xchg
sahf
add
mov
dec
pop
aam
adc
test
mov
mov
fs
adcb
icebp
loop
or
pusha
js
mov
jne
xor
fs
clc
add
mulb
adc
jnp
add
mov
insl
mov
dec
mov
mov
pop
shl
sahf
or
insb
jns
push
in
add
xor
inc
outsb
push
arpl
stc
jmp
mov
add
and
int3
sbb
adc
cld
inc
mov
repz
rcrb
xchg
push
xchg
cs
in
aas
add
lcall
decl
jecxz
push
pop
xchg
faddl
or
das
mov
add
jo
loopne
sbb
jle
xor
loop
xchg
cmp
mov
sbb
sbb
mov
jg
sub
stos
mov
es
cmp
popf
imul
loope
adc
fidivrs
nop
or
or
cld
addb
or
sti
or
or
xorb
aaa
add
hlt
and
push
loope
cwtl
cmp
sub
ljmp
addr16
inc
cmp
pusha
and
cs
in
sbb
jle
inc
sub
pop
sahf
shlb
sub
cmp
test
jecxz
loop
and
sbb
cs
jge
mov
adc
xchg
fmuls
dec
and
popa
stc
in
lods
push
adc
stc
pushf
inc
loopne
fs
xor
les
dec
mov
add
cld
jg
outsb
sbb
adc
xchg
ror
or
xchg
mov
test
inc
xchg
push
je
scas
sub
adc
pop
push
stos
andb
sbbl
sub
lret
or
or
dec
dec
add
jmp
add
roll
push
adc
xchg
ja
and
mov
sbb
cmp
pop
out
pop
mov
dec
mov
jle
fdivs
mov
add
call
or
icebp
cli
add
lods
lcall
test
es
aas
rcrl
lahf
fldl
push
in
pusha
in
imull
ret
cmp
and
fxch
dec
mov
push
daa
cltd
mov
pop
sub
mov
bound
cli
or
mov
ljmp
fiaddl
mov
testb
and
xlat
sbb
dec
out
shl
pop
insl
lock
adc
dec
mov
cmp
pop
sub
into
cmp
add
sub
push
aaa
xchg
sbb
icebp
push
filds
add
inc
leave
add
orb
xchg
test
shlb
inc
adc
sub
fst
insb
jl
pop
xor
mov
sbb
fcoml
imul
push
fsubs
adc
jo
punpckhwd
gs
or
inc
jnp
add
jne
cld
lcall
scas
int3
xchg
sbbb
jb
inc
mov
cmc
test
cmpsl
stc
jl
jo
scas
add
fstps
add
int3
test
out
out
xchg
mov
xor
mov
cmp
pusha
lods
mov
adc
cli
cs
dec
add
mov
pop
outsb
out
sbb
les
and
cld
imulb
jmp
mov
xlat
dec
idivb
out
xor
in
out
lcall
inc
add
in
sarl
jne
ss
sarl
das
dec
stos
rcl
ror
out
enter
xchg
lcall
xor
shr
push
mov
jecxz
mov
mov
scas
and
add
and
out
testl
int3
push
pop
scas
add
and
insl
idivl
add
jb
sbb
repz
mov
jae
mov
gs
add
fbld
push
push
mov
cmp
mov
and
out
jp
pusha
push
rcll
bound
incb
inc
imul
aaa
setbe
push
sahf
xor
inc
hlt
test
add
mov
xchg
mov
test
test
cmp
cmpsl
mov
jns
jmp
clc
adc
sub
xor
dec
ficoml
add
loop
xchg
sbb
sti
cli
aad
out
add
jmp
testl
push
lret
add
aam
dec
add
and
hlt
push
outsb
inc
nop
mov
mov
addr16
add
in
das
cli
lahf
aas
push
xchg
in
cld
push
add
out
ja
fidivrl
or
cli
das
dec
xor
icebp
push
inc
pop
mov
adc
frstor
cmc
push
mov
lock
lds
cltd
out
adc
add
lret
push
in
incl
pusha
adcb
arpl
add
add
jge
xchg
add
sbb
pop
jno
or
pop
pop
inc
xor
loop
sub
daa
fwait
mov
and
add
sub
push
mov
fsubs
daa
ret
sub
pop
adc
inc
pop
sub
lret
mov
pop
lds
loopne
cmpsl
clc
add
stos
aad
cmp
lock
sbb
ss
mov
add
mov
ljmp
adcb
or
mov
inc
fisubs
insb
add
stc
loopne
divb
and
dec
lcall
jle
dec
lock
jne
add
das
sbb
es
xchg
dec
mov
mov
push
sbb
inc
stos
mov
add
mov
rcll
dec
xor
int
cmp
jge
fwait
test
jmp
pusha
daa
push
gs
enter
fnsave
aaa
sbb
mov
or
dec
push
ret
lret
xchg
mov
inc
loope
ss
jae
xor
clc
jae
lds
subb
push
and
ja
pushf
or
jg
and
pop
je
notb
out
inc
enter
push
sti
filds
xor
test
pop
aaa
dec
ffreep
js
xchg
lea
dec
paddusb
arpl
out
movl
push
xchg
push
xchg
sbb
push
and
roll
or
daa
or
outsl
ficomps
pop
adc
push
mov
leave
add
in
or
ficomps
idiv
jmp
int
and
inc
dec
push
dec
inc
push
pushl
pop
lret
add
cmp
lock
jno
mov
add
and
mov
mov
adc
add
push
jnp
and
icebp
cmp
bound
or
dec
or
test
push
cli
add
test
arpl
add
jne
js
sti
sub
pushf
mov
push
cmp
pop
imul
adc
fimull
xor
cld
xor
push
das
nopl
sub
jle
inc
loope
lahf
pop
and
mov
sbb
pop
pusha
mov
mov
fldenv
lds
push
mov
pop
call
dec
xchg
push
cmpsb
adc
add
ret
add
xchg
push
jmp
sbb
outsb
mov
test
or
mov
rcrl
call
add
cmpsb
adc
call
shll
cs
sbb
cld
pop
cmp
lods
or
push
jne
add
in
stos
push
push
test
xor
popl
xchg
mov
subb
mov
stc
cmp
pop
or
lods
jb
scas
add
adcb
adc
xchg
adcb
lods
or
xchg
roll
dec
fcmovbe
lods
push
pop
xchg
loopne
fadds
rclb
rcrl
daa
xlat
jns
jl
add
and
loopne
cli
mov
pop
ret
add
addr16
pop
clc
mov
cmp
movsl
addb
xchg
add
hlt
jmp
push
or
fsubrl
outsb
fildl
cmp
mov
pop
out
leave
xchg
lret
push
test
push
sbb
mov
js
rorl
loopne
or
shr
out
mov
mov
add
inc
ss
mov
addl
je
push
test
xchg
lcall
cmpsb
insl
bound
pop
imul
mov
adc
rolb
dec
sub
mov
pop
iret
roll
add
mov
cmp
aas
popa
lahf
push
mov
mov
stos
or
mov
jle
jp
and
ret
mov
ds
movsl
xchg
mov
xor
sbb
jl
adcb
in
add
movsb
imul
mov
mov
sbb
add
lahf
push
iret
xor
push
sbb
push
lock
mov
cmp
out
ret
dec
add
mov
or
and
jle
pop
push
in
adc
dec
add
roll
aad
into
cwtl
pop
pop
dec
in
and
mov
loopne
ffreep
out
pop
xchg
adc
in
sub
jnp
mov
cmp
pop
movsl
push
sbb
addl
xchg
or
add
sti
inc
jne
lahf
sub
movsb
jge
cltd
add
push
std
mov
jnp
push
push
adcb
push
pusha
sbb
dec
mov
jns
lods
ret
leave
inc
cmpsl
jnp
pop
push
jl
cmp
dec
fcomp
adcb
cmp
cmp
pop
sbb
lret
pop
fs
xchg
and
and
pusha
inc
test
incl
add
mov
xorb
sub
xor
addr16
jp
mov
data16
imull
sub
xchg
fnstcw
test
add
adc
sarb
mov
and
mov
aaa
das
adc
fwait
arpl
add
pop
std
mov
sbb
sub
jle
jle
sbb
lcall
lret
cmp
data16
inc
lock
enter
andl
xor
ror
jne
mov
sub
test
ds
test
jl
adc
add
fisubrs
arpl
dec
or
jmp
loop
enter
inc
push
inc
iret
cmp
add
imul
pusha
fwait
mov
mov
mov
push
sahf
add
lods
and
inc
fsubs
xlat
cmp
cmp
jb
cltd
jne
inc
jecxz
sahf
bound
push
out
push
lods
lock
xor
fldl
mov
ja
sub
scas
jo
dec
ror
or
andl
imul
add
in
pop
mov
pslld
cmp
aaa
sub
add
mov
test
mov
lcall
rcrl
test
xchg
add
inc
es
mov
ret
jne
jg
scas
add
add
push
adc
jge
push
and
iret
cmp
or
addb
inc
ret
dec
jl
fwait
icebp
push
mov
mov
test
cmp
je
gs
pop
pop
mov
insl
add
nop
mov
jge
xchg
punpckhbw
mov
push
mov
stc
jg
inc
cmc
push
mov
je
mov
sbb
test
add
or
cmp
xchg
lock
mov
mov
add
and
pop
mov
adcb
add
add
sbb
pop
sbb
dec
add
and
mov
push
sbb
mov
es
inc
clc
inc
ds
cwtl
push
adc
insl
pop
dec
lret
loopne
jbe
add
aad
add
mov
stc
aas
outsb
addr16
lcall
incb
nop
push
sbb
add
add
push
xchg
flds
mov
aad
cwtl
add
ror
or
cmp
or
inc
mull
stc
and
xor
mov
adc
add
mov
pop
out
inc
lea
je
sub
add
mov
and
daa
js
data16
test
leave
add
dec
out
in
in
mov
cmp
jo
ret
popf
test
fmul
dec
xchg
rorb
add
mov
cs
mov
mov
xor
arpl
add
mov
aas
push
repz
je
jge
imul
push
and
or
xor
scas
xchg
loopne
sbb
in
pop
pop
mov
cltd
cld
add
out
mov
aaa
mov
stc
or
jbe
and
ljmp
inc
add
popf
mov
add
shl
imul
mov
mov
movnti
dec
mov
push
mov
aam
sbb
jae
xchg
pop
push
or
pusha
sbbl
add
adc
mov
pop
add
sbb
out
cli
sub
call
push
and
pop
fcmovnu
mov
mov
repnz
mov
pusha
repz
fs
lds
ljmp
pop
jo
sbb
jmp
cmp
js
inc
outsl
cmp
test
add
sub
icebp
sub
push
dec
add
xchg
addb
mov
movsb
cwtl
scas
inc
sbb
dec
jnp
fsubs
sub
or
push
ret
subb
push
std
push
imul
sarb
jmp
shll
repnz
into
pop
xor
xor
add
xor
std
sbb
or
push
adc
add
push
sub
pop
stos
cmp
add
add
scas
jb
xchg
sbb
add
testb
shlb
imul
pop
and
or
mov
out
add
rcll
add
cmc
jl
add
push
loop
jae
notb
cmp
push
jne
mov
adcb
call
insl
adc
pop
test
adc
mov
lds
imul
jo
sbb
push
setle
mov
out
and
sub
sub
sbb
out
xor
jae
dec
push
dec
pop
pusha
orb
test
shl
dec
adc
in
insb
jns
cmovbe
enter
jle
mov
mov
push
cmc
clc
les
out
jecxz
push
pop
adc
xchg
add
and
jg
add
mulb
orl
ficompl
fidivrl
xor
out
add
mov
mov
adc
pop
or
aas
inc
or
fstpl
ja
orb
je
inc
insb
add
popl
adc
dec
xchg
and
and
mov
pop
hlt
out
inc
push
int3
stc
cmp
sti
out
sub
push
add
and
add
cwtl
sub
ret
sbb
sarb
xor
popf
aam
je
jo
jae
imul
clc
xor
mov
add
aad
aas
punpckhwd
sbb
repnz
pop
fisttpll
xor
cmp
push
sbb
pop
xorb
sarb
shl
mov
inc
mov
fidivs
pop
add
or
loope
pop
filds
ds
xor
repnz
dec
mov
or
cmp
roll
add
hlt
shlb
incl
repnz
push
pop
mov
add
push
in
jns
insl
shrb
out
cmpb
test
loope
cmp
bound
sbb
fsqrt
mov
lods
add
aaa
mov
adc
add
push
call
sbb
push
inc
testl
std
inc
add
inc
stc
fbld
inc
add
lods
outsl
and
adc
shrl
jae
iret
in
pop
test
insb
sub
sbb
hlt
add
xchg
cmp
add
push
push
add
push
orb
out
push
rcrl
inc
sub
add
movl
scas
jmp
push
add
lahf
mov
je
xchg
pop
shll
cltd
inc
in
pop
lcall
mov
cmc
push
sub
ret
es
cmpsl
fists
mov
sti
andl
add
inc
fiadds
push
xchg
sub
mov
or
cld
int3
mov
pop
clc
jb
shrb
mov
jmp
pusha
xchg
stc
rclb
mov
insl
mov
jge
inc
add
mov
add
and
xchg
inc
rcrb
cmp
mov
inc
push
add
mov
lahf
add
xchg
xchg
cs
push
test
test
popa
pop
cmp
int3
scas
pop
in
push
mov
je
add
in
mov
push
add
out
je
stos
call
push
add
xchg
inc
movsl
pop
adc
loop
into
dec
cmp
mov
pop
testl
in
and
test
cwtl
repnz
sbb
or
mov
jb
into
mov
adc
add
out
pop
jge
js
mov
adc
mov
sbb
adc
sbb
movsl
mov
cmp
mov
rcl
inc
mov
scas
arpl
jns
pop
and
cmp
in
mov
call
cli
scas
mov
dec
dec
sbb
or
or
lcall
shrb
in
adc
pop
fcomi
jecxz
cmp
pusha
inc
and
add
sbb
daa
fcompl
stos
sbb
jecxz
sbb
fs
add
sbb
and
dec
faddl
sbb
fwait
rcrl
jmp
pop
mov
add
das
leave
call
add
stos
add
shlb
roll
and
shl
dec
sbb
insl
cmp
popf
adc
xor
pop
cld
cmp
dec
cs
push
les
dec
jne
push
ret
mov
mov
pop
rolb
mov
cmp
add
xlat
add
add
movsb
cmpsl
mov
xor
sub
movsl
xor
repnz
cbtw
sub
loopne
add
jg
fadds
out
pop
ret
fists
add
and
roll
mov
sbb
jns
loope
pop
in
fadds
cmp
rcll
xchg
fldcw
test
ja
add
outsb
int
addl
scas
inc
scas
into
sub
in
add
ret
xor
rorb
jne
lahf
and
jnp
arpl
jb
pop
xor
scas
xor
adc
xchg
lods
movsb
cmp
rcrl
sbb
ss
in
adc
lret
pop
add
out
sub
xchg
in
scas
insb
out
jle
pop
push
call
mov
add
mov
jmp
lcall
jp
js
fstps
pop
sub
insb
mov
gs
push
or
inc
xor
das
inc
jb
es
cltd
or
mov
add
jecxz
pop
and
add
and
leave
cmp
andl
xchg
mov
clc
cmpl
pop
stos
icebp
sti
xor
sub
add
clc
push
pop
nop
jl
adc
mulb
int
push
add
push
jle
mov
push
inc
dec
add
nop
cmp
fcomps
jae
jmp
lods
xor
push
rorb
cli
mov
jo
scas
iret
push
sbb
mov
mov
shr
scas
add
in
lret
or
sbb
lods
sbb
mov
loopne
push
out
dec
sti
loopne
les
xchg
lds
cmc
add
sbb
jo
ficompl
cmp
insb
dec
add
and
push
jnp
mov
cmp
xchg
clc
cmp
mov
das
xor
lea
sarl
or
sub
rcrl
push
jo
aad
jecxz
ret
btc
in
mov
ljmp
faddl
push
mov
aad
stc
or
pop
adc
sti
xor
daa
out
lods
add
add
jnp
ja
cmp
lods
incl
cmp
movsb
adc
mov
mov
adc
addl
or
add
and
sub
adc
mov
mov
mov
mov
adc
outsb
orl
mov
or
inc
xchg
dec
dec
add
and
and
aas
sub
adc
jae
mov
and
adc
mov
push
out
push
jg
pop
lods
popa
mov
add
call
je
pop
icebp
mov
inc
jne
xchg
jb
mov
cmp
int
or
inc
xor
lods
or
mov
popa
fstl
mov
cs
sub
or
cmp
mov
shrl
mov
ds
xchg
ljmp
adc
in
add
mov
enter
fcomp
in
std
filds
movsl
or
add
cmpsl
inc
add
ret
mov
adc
dec
push
sti
vfrczps
aam
jmp
sbb
je
xorl
in
inc
movsb
pusha
adc
icebp
pop
imul
int3
jnp
sahf
add
cltd
mov
cwtl
je
mov
stc
inc
push
cmpl
dec
push
sbb
add
add
imul
jb
sbb
data16
cwtl
rolb
mov
sub
jg
mov
call
sub
sub
jno
adc
mov
loop
in
lds
mov
aaa
mov
jns
mov
lea
mov
insl
cmp
dec
les
pop
xchg
fadds
inc
sbb
xchg
jg
mov
add
sbb
jne
incb
sahf
add
or
dec
js
adcb
xchg
cmp
negl
cld
adc
lods
clc
lret
xchg
mov
ljmp
cld
pop
dec
stc
lea
cld
inc
pop
test
adc
std
loop
and
decb
adc
mov
lea
ret
popa
insl
cmp
push
imul
mov
add
aad
dec
rcll
and
mov
jnp
cmp
push
add
es
out
pop
xchg
add
inc
mov
jp
jno
add
pop
push
fsubr
imul
imul
repnz
inc
dec
daa
stos
push
pop
sbb
add
sbbb
add
in
mov
cmp
or
push
pop
call
sbbb
cmpsl
mov
in
mov
inc
push
mov
jg
add
add
and
pop
dec
add
cmpb
add
cmp
jnp
cwtl
aad
add
mov
addr16
call
mov
sub
loop
test
xchg
sub
nop
clc
xchg
push
jb
out
add
xlat
jp
add
xor
sbb
scas
incb
xchg
fcoml
std
or
arpl
jo
cli
add
shl
pop
into
adc
adc
cs
jl
and
push
add
jge
fs
mov
repnz
xchg
sahf
add
mov
lret
jge
nop
mov
mov
in
push
fidivl
inc
cmp
sarl
cs
add
jnp
xor
js
add
jmp
nop
sahf
xor
cltd
fistpl
gs
insb
and
dec
pop
fst
or
lds
adc
stos
nop
dec
add
pop
dec
jne
dec
daa
add
test
insb
add
add
in
sbb
js
add
push
push
jo
nop
pushf
addb
xor
hlt
push
xchg
sub
or
or
mov
subb
insb
je
mov
test
mov
ljmp
dec
add
cmp
testb
jno
jb
test
sub
and
and
movsb
add
cltd
add
sti
ja
jecxz
test
adc
xor
cmpsb
cs
xor
push
out
call
fs
cs
loopne
push
add
lods
or
rolb
adc
push
add
fsubs
sets
cmp
mov
aad
pop
out
mov
xchg
or
filds
call
out
outsl
or
cmp
aas
mov
pop
inc
pop
pop
mov
mov
xchg
add
push
out
maxps
add
addl
xchg
xor
mov
lods
and
int3
in
std
add
or
pavgb
mov
sbb
and
call
test
popf
push
aas
add
subb
add
jae
push
cmp
xorl
jne
add
sbb
and
and
add
pop
sahf
jg
adc
daa
in
mov
outsl
or
repz
fnstenv
add
mov
jbe
and
in
movsb
cmpsl
lahf
enter
sbb
sbb
imul
lods
aaa
les
rolb
loop
cmp
cmc
cmpsb
data16
xor
movsb
or
add
adc
jae
pop
bound
out
and
add
lods
arpl
add
dec
push
lahf
push
mov
aam
int3
jae
add
push
adc
sub
add
inc
sbb
xchg
mov
ds
lret
add
mov
cmp
and
push
or
dec
stos
fisttpll
cmp
cmp
xchg
add
dec
das
lret
xor
insb
jge
stc
pop
repnz
add
pop
cmp
and
lock
and
add
fwait
lock
cmp
lret
and
jno
sbb
xor
cmp
mov
dec
das
inc
mov
jecxz
stc
test
and
xor
and
cli
and
add
enter
jo
stc
scas
aas
in
int3
insb
mov
mov
loopne
jge
and
add
repnz
shlb
cmp
mov
int3
fildll
sbb
icebp
xor
xchg
xor
out
ja
rol
fldenv
cli
rolb
test
push
ss
add
add
adc
mov
and
in
sbb
sbb
mov
pop
mov
push
sbbl
xor
lods
mul
add
fs
push
pushf
cmpsb
in
inc
mov
add
and
sti
arpl
and
add
jb
lods
pop
adc
jg
add
cmp
pop
add
mov
psraw
ret
bound
jmp
xor
cmp
cmp
inc
imul
and
bound
or
push
scas
add
ds
push
sbb
rcll
xor
cli
add
push
add
mov
sbb
or
sub
rorb
clc
cmp
movsb
and
adc
test
fs
pop
fsubr
pop
add
cmp
jecxz
sbb
push
roll
neg
imul
and
cmp
fisttpll
dec
iret
xchg
shlb
and
shll
sbb
ljmp
push
test
dec
mov
and
in
roll
aas
mov
inc
stc
xorl
ds
mov
xor
push
sbbb
out
aam
cs
sub
pop
xorb
pop
inc
bound
cmpb
roll
lea
fyl2x
fwait
loopne
sub
dec
push
pop
cmp
arpl
cmpsl
popa
mov
out
jo
repz
and
push
int
pop
and
xchg
das
cmp
fimull
test
faddl
fwait
mov
xor
sub
lds
mov
add
push
daa
push
int
dec
add
cmovp
jno
in
cs
add
pusha
and
fucom
fxtract
cmc
xlat
and
mov
mov
mov
or
add
sub
aam
add
mov
sub
cmp
add
jl
push
pop
jp
add
add
cmp
insb
aas
inc
and
jo
inc
loope
dec
pop
dec
jno
add
into
and
shr
cld
add
iret
sar
insl
jmp
add
mov
mov
pushw
add
mov
or
mov
add
sahf
xlat
repnz
movsl
jne,pt
add
ret
or
pop
fiaddl
mov
mov
ret
adc
add
loope
int
xchg
dec
sub
bound
nop
cmovbe
and
pop
and
in
sub
cmp
mov
lock
daa
cmp
dec
adc
inc
aad
das
add
jbe
dec
add
out
rep
mov
out
loopne
push
cmpl
pushf
test
notb
inc
push
into
or
mov
mov
sti
leave
jb
add
add
xchg
rclb
cmp
inc
shl
mov
adc
jle
pop
vmwrite
xor
clc
ds
lods
mov
dec
pop
cli
and
sti
mov
cmp
loope
jnp
out
mov
pop
sbb
movsl
les
js
std
dec
in
xchg
pushf
dec
mov
pop
mov
add
push
mov
out
dec
add
cmp
in
lods
jge
add
les
jno
sahf
xor
and
mov
jo
push
or
test
mov
testb
andb
addb
fstpl
add
adc
push
lahf
pop
rclb
mov
movsb
es
or
stos
pop
daa
out
jno
adc
outsb
sarb
add
insl
fildll
push
mov
push
iret
sbb
xor
push
dec
cmp
mov
fsubrp
pop
sar
outsl
add
movsl
mov
subb
push
shl
add
stos
in
les
add
mov
and
in
aam
add
jae
xor
jl
fsubp
arpl
cwtl
inc
fistl
cmp
ret
add
push
mov
pop
jl
xor
adc
adc
adc
rolb
adc
cmp
ret
mov
dec
nop
and
add
lahf
lea
stos
add
mov
cwtl
xor
jo
faddl
add
nop
lods
mov
lock
xor
fs
cli
mov
loopne
jl
stos
add
mov
roll
dec
subl
sti
sub
cmp
mov
add
aaa
in
mov
cmpsb
add
dec
out
adcl
inc
repnz
fsubp
add
add
in
adc
add
insl
pop
mov
or
jns
add
into
mov
ret
ret
pop
jne
jb
xchg
mov
add
gs
pop
lock
mov
aam
loope
add
cwtl
or
mov
cmp
sub
test
cli
outsb
ficompl
mov
sub
or
ror
mov
lea
loopne
cld
clc
popa
xor
in
rcll
adc
iret
ljmp
pop
cmpsl
jmp
adc
pop
add
adc
mov
inc
cmp
pop
adc
cmpsl
lahf
dec
inc
pop
add
xor
in
in
sbb
outsl
and
mov
movsb
call
add
mov
std
mov
sbb
fistps
mov
dec
dec
dec
add
hlt
insb
cwtl
mov
in
add
xor
push
in
and
outsl
mov
mov
sbb
jmp
std
adcb
xor
inc
cld
mov
add
les
jl
mov
mov
or
int
movsb
or
xor
stc
push
subb
xchg
mov
das
push
push
mov
rclb
insb
pusha
and
inc
cmc
add
cmpsl
xchg
movb
aad
add
sarb
pop
mov
pop
mov
loopne
xchg
add
ret
test
inc
cmc
push
add
or
sbb
xor
jo
add
mov
inc
add
adc
loopne
pop
cmp
popf
mov
pop
jmp
jb
test
add
and
or
incb
push
roll
mov
insb
inc
andb
mov
inc
mov
ss
push
pop
mov
test
add
sbb
push
add
pop
add
sbb
gs
aad
into
add
mov
mov
shr
push
mov
in
dec
and
mov
or
arpl
repnz
inc
subb
jbe
jg
andnps
dec
mov
rcrb
cld
je
rolb
add
add
aad
and
or
mov
test
clc
jecxz
adc
cld
hlt
and
mov
add
fdivs
add
xor
lahf
subb
das
lock
add
stos
loopne
es
mov
and
sbb
nop
sbb
iret
imul
adc
add
test
xchg
pushf
leave
clc
fdivl
aaa
repnz
test
inc
push
add
cmp
hlt
dec
sub
jmp
dec
shrb
or
mov
xor
pop
ds
add
lods
inc
cmp
or
mov
push
add
enter
fnsave
sbb
xor
notl
inc
ret
das
pusha
add
mov
inc
xlat
es
sbb
pop
das
sbbl
out
lret
push
lahf
sub
jne
dec
add
add
clc
xor
mov
call
stos
ficoml
pop
mov
sahf
dec
xor
add
add
pop
shll
adc
xor
movsb
inc
mov
inc
add
pop
aam
mov
icebp
push
adc
test
mov
add
pusha
cmpb
cmp
add
mov
xchg
cmpsl
pop
sti
push
add
cmc
cmp
push
rclb
loop
pop
adc
test
adcb
fidivs
nop
orl
xchg
mov
push
jbe
jecxz
call
in
sub
and
jl
in
mov
and
clc
mov
jge
or
and
adc
call
out
in
xchg
out
xchg
add
sbb
insl
bndldx
pop
fisubs
jge
mov
notb
cmp
rolb
mov
xorb
cwtl
mov
lret
and
add
sub
jb
xchg
inc
cmp
adc
mov
inc
in
movsl
daa
jmp
out
sbbb
ret
sub
sti
pushf
add
pop
mov
outsb
shr
push
das
sbb
data16
mov
xchg
sbbb
or
dec
nop
cmp
add
adc
add
sbb
icebp
push
shrl
add
xlat
jmp
mov
xchg
mov
pop
jbe
insb
and
push
sbb
out
adc
and
push
inc
sub
repz
and
sbb
jae
add
mov
subb
jmp
imul
sub
inc
or
shr
orb
ret
inc
cmp
out
xlat
movb
cltd
jge
push
pop
rorl
inc
pop
cmp
and
sbb
cmp
ja
mov
lock
dec
cltd
xor
imul
sbb
add
jl
imul
mov
pop
add
add
lret
cmp
mov
rol
xlat
adc
lock
dec
sub
int
lds
loopne
and
add
mov
mov
lret
les
add
push
jno
push
insl
xor
jo
mov
outsb
or
lret
aaa
mov
stos
enter
push
mov
lahf
inc
add
dec
xchg
mov
pusha
mov
inc
xchg
test
loope
mov
orb
js
mov
adc
add
inc
add
rclb
add
cmp
insb
in
int
pop
push
mov
into
roll
les
add
jnp
inc
mov
push
push
jno
adc
imul
jp
sbb
fadds
add
imul
int3
inc
jbe
add
add
fcmovb
rcrb
fsubp
pop
pop
call
xchg
mov
add
lods
mov
jns
add
addb
add
pop
dec
cmp
pop
pop
or
movsl
test
and
mov
stos
repnz
jns
testb
in
ds
shl
hlt
add
pop
fs
repz
subb
pop
call
lds
cmp
sbb
sub
pop
dec
arpl
add
test
fstpl
push
sahf
add
sbb
addb
dec
cmc
add
daa
add
mov
cmp
setno
cmp
ds
push
cmpsl
xor
lods
and
adc
fnsave
outsb
ja
sti
push
or
inc
scas
adcb
push
into
adc
ss
mov
test
scas
js
call
mov
lds
xor
ret
or
add
scas
sbb
xchg
lods
dec
cmp
outsb
dec
mov
inc
add
mov
mov
rorl
cmpl
push
jg
xor
mov
mov
add
pop
pusha
push
push
inc
in
add
inc
and
ficompl
sbbl
push
or
ss
sub
cli
sub
adc
mov
mov
nop
in
jnp
mov
add
test
js
pop
push
mov
jns
icebp
and
jbe
mov
fsub
cmp
lds
int3
add
pop
testl
fstps
mov
leave
call
or
mov
nop
and
xchg
sub
fnstsw
es
mov
push
ljmp
add
mov
xor
inc
sub
stos
out
mov
fisubl
and
fistps
xor
repnz
dec
jno
mov
jae
ljmp
hlt
lds
insl
mov
jo
sbb
sbb
lahf
sub
fists
add
sub
inc
test
lods
mov
fsubr
dec
andl
lahf
sub
lock
pop
addr16
andl
fsubrs
js
add
jno
pop
in
dec
jg
or
adc
leave
add
mov
push
pop
sub
fdivs
xchg
xchg
call
fs
inc
push
cld
cmpsb
fldt
addb
pop
add
push
xchg
or
fdiv
test
cmp
adcb
add
push
pop
popf
push
aas
mov
push
mov
shr
insl
leave
mov
mov
cmc
out
mov
sub
jb
xor
call
xchg
les
pop
mov
lods
cld
dec
mov
addr16
mov
cwtl
mov
scas
dec
mov
stc
cmp
and
jnp
mov
or
mull
xchg
rclb
mov
push
mov
jns
fstl
jl
add
pop
into
push
hlt
pop
shl
dec
js
jns
add
xorb
cmp
xchg
mov
xor
pop
arpl
jbe
shl
mov
pop
sbb
adc
test
adc
jb
incl
nopl
jns
aaa
rep
or
or
cmc
cltd
mov
sbb
add
xorl
aam
faddl
fcoms
pop
fidivrs
inc
loopne
add
cs
xchg
cwtl
sbb
jno
fsub
js
shrb
ljmp
das
mov
dec
lahf
jns
push
les
inc
jge
mov
dec
adc
adc
fmull
xor
pop
add
dec
adc
frstor
cmp
ror
push
cli
incb
ret
or
jle
addb
adc
rcrl
inc
push
or
push
sbb
popa
sbb
xor
sahf
lea
imul
sarb
mov
push
and
dec
nop
pop
jno
mov
mov
jae
je
icebp
fiaddl
or
cli
cmpsl
jp
dec
or
cmp
mov
clc
xchg
or
add
imul
sbb
sbb
sahf
dec
xchg
add
daa
mov
sub
add
scas
mov
sbb
stos
mov
movsb
xchg
ljmp
in
fs
mov
and
subb
pusha
aas
sbb
and
xor
mov
dec
xor
add
add
or
add
mov
jmp
dec
aas
xor
mov
test
popf
mov
mov
add
out
sub
rolb
in
das
add
xor
adc
cmpsb
inc
or
pop
cltd
xor
sbb
push
and
pop
dec
aas
adc
pop
xor
dec
pop
outsb
adc
push
pop
mov
adc
hlt
stos
test
mov
scas
or
pop
stos
outsb
add
fisubl
and
xchg
ljmp
aam
psubw
hlt
fs
mov
mov
jne
sbb
sbb
fwait
mov
fs
mov
or
mov
stc
add
repz
sbb
aas
or
pop
movsl
add
lcall
out
pop
or
pushf
push
adc
hlt
or
nop
adc
xchg
jb
inc
fwait
push
cltd
dec
add
sub
push
cld
int
adc
gs
sbb
packssdw
jno
sub
dec
inc
enter
dec
xor
insl
pop
std
sti
mov
add
inc
add
push
add
aad
xor
cmp
sahf
out
xor
int3
daa
inc
int3
ss
dec
xor
jbe
xchg
cmpsb
push
sub
add
flds
filds
inc
jb
adc
sarb
jae
pusha
inc
sub
jo
push
mov
into
frstor
fnstcw
repnz
jno
std
out
popf
mov
ficomps
sbb
insb
mov
mov
inc
sub
sarl
loopne
jge
popa
add
sbb
sbb
jo
testl
pop
push
cmp
cmovo
movsl
imul
sbb
mov
xor
sahf
insb
add
scas
jg
subl
into
mov
sbb
fcomps
mov
mov
leave
icebp
mov
mov
clc
mov
sub
push
push
and
das
mov
add
pop
jns
add
push
jl
sbb
call
mov
cmp
push
cmp
sub
es
xor
mov
add
in
and
ror
mov
cmpsb
sub
clc
in
add
roll
jae
rcr
inc
sbb
bound
add
pop
into
loopne
push
xchg
mov
jne
lock
jno
add
cs
add
or
sub
inc
and
mov
jns
add
xchg
mov
or
int3
ljmp
in
ds
inc
int3
pop
jmp
inc
pop
xchg
das
pop
inc
xchg
pop
stc
add
gs
add
es
daa
popa
jns
jnp
mov
inc
add
add
xor
mov
ljmp
mov
es
test
fstpl
add
stos
push
xchg
popa
repz
mov
scas
mov
sub
repz
sub
xor
loop
bswap
out
inc
das
and
cmp
mov
test
mov
xor
mov
arpl
pop
sub
out
mov
adc
adc
jno
rolb
aas
cs
push
pushf
add
xor
hlt
ret
int3
mov
sub
adc
add
push
pop
lds
aam
faddl
scas
and
jl
dec
or
test
add
mov
lods
add
jnp
rolb
ds
pop
sub
loopne
push
push
and
in
push
adc
add
sbb
shl
pop
pop
fbld
mov
sub
xor
mov
lahf
push
xchg
testl
jl
xchg
in
or
add
fidivl
sbb
lods
stc
cmp
scas
cld
xchg
pop
sbb
add
push
cmp
fildl
adc
into
popa
test
mov
repnz
sbb
stos
leave
shl
mov
add
mov
cmpb
pop
ret
or
sub
int
add
cmp
mov
mov
xor
mov
add
test
shll
xchg
leave
or
aaa
jge
shll
sbb
cs
shrb
xchg
adc
shr
jl
enter
sub
adc
push
or
cmp
les
aas
cmpsl
pop
ret
test
mov
xor
cmp
jl
sarl
jle
push
mov
sub
add
push
shlb
enter
shll
mov
loop
aam
mov
fidivl
cmp
sub
outsl
incb
fstl
dec
ljmp
inc
orl
leave
mov
cwtl
mov
sub
addr16
xor
mov
sbb
shrb
test
adc
pop
adc
jae
lods
hlt
cmp
psubsb
push
push
adc
mov
pop
call
push
pop
div
pop
sub
in
xchg
in
add
scas
mov
lahf
into
dec
inc
jns
add
lods
xchg
sub
lea
sarb
je
cmpl
rorb
seta
pop
jno
dec
lock
rclb
fnstcw
loope
imul
imul
loopne
cmp
sub
adc
add
mov
fwait
aaa
pop
dec
pop
mov
push
pop
sub
pusha
shlb
loopne
xor
add
mov
fiadds
push
add
pusha
and
or
jb
cs
or
cmpsb
jo
out
add
out
orl
icebp
enter
fstpl
or
add
hlt
cwtl
in
rorb
lret
negl
nop
or
aad
enter
jns
push
xor
and
repnz
add
and
add
pop
shll
sub
popa
adc
out
stos
add
stc
leave
cs
xor
hlt
incl
shlb
mov
scas
dec
pop
int3
mov
ss
lock
in
fucomip
add
add
stos
stos
ret
cmpsb
mov
hlt
xchg
int
lock
adc
lahf
inc
cld
mov
sti
add
testl
jmp
push
add
dec
aaa
and
push
mov
mov
adc
add
push
out
inc
lret
and
xor
inc
fcmovb
mov
mov
dec
pop
mov
ret
dec
loopne
nop
xor
sbb
pop
js
shlb
xor
jno
sbb
cwtl
inc
inc
insl
popw
inc
cmp
fidivs
mov
or
add
test
test
inc
cmp
lret
or
adc
jl
jo
push
mov
add
ja
sysret
mov
inc
pop
adc
pop
sbb
add
imul
pop
outsl
aaa
add
push
pop
popf
xchg
stos
push
add
or
jmp
lock
add
insb
addr16
daa
xor
and
cwtl
shr
add
je
orl
jb
pop
dec
or
leave
xchg
ds
sbb
xor
push
mov
leave
or
inc
roll
popl
jbe
out
pop
or
or
and
and
jmp
push
loop
bound
cmp
pop
inc
rcr
sbb
mov
jnp,pn
mov
call
dec
aaa
sbbb
add
int3
add
or
les
add
dec
jnp
inc
mov
sbb
jecxz
pop
movsb
xchg
mov
add
imul
xor
pop
mov
add
sbb
push
mov
add
or
cmp
sub
test
jecxz
pusha
sub
add
sbb
jmp
xor
loop
test
dec
rolb
das
repz
cmp
or
test
mov
stos
add
scas
add
stos
nop
outsb
add
pop
or
loopne
shl
jge
mov
cmp
and
icebp
pop
jno
lods
push
popa
cmp
lods
xchg
pusha
mov
inc
shlb
push
imul
cwtl
fsts
insb
cmp
adc
lret
faddl
add
call
pop
gs
testl
ret
ljmp
insb
pop
mov
add
jecxz
push
mov
pop
fcompl
mov
out
push
dec
mov
dec
pusha
cld
je
add
mov
pop
enter
ret
add
and
into
movsl
movb
outsl
lods
loop
lcall
push
lret
rcl
call
mov
dec
in
mov
xor
pop
movsb
add
data16
or
incl
ret
jle
sbb
insl
add
ss
fldl
push
lret
mov
repz
mov
cmp
xchg
sbb
cmp
pop
cmp
xchg
mov
aas
inc
sbb
loop
cwtl
clc
add
add
arpl
pop
ds
add
ret
scas
jns
lods
es
or
push
or
sbbl
mov
addr16
ds
or
test
in
add
xchg
mov
mov
into
insl
idiv
sbb
cld
pusha
push
dec
subl
cmp
test
rclb
adc
push
in
loope
lret
cmp
les
add
or
cwtl
add
pop
adc
cmpsl
pop
cwtl
xor
inc
aad
add
xor
sbb
add
gs
pusha
sbb
jp
adc
sub
add
fcoms
xor
test
rol
in
cmpb
mov
add
sbb
pop
xchg
aad
add
scas
js
in
adc
push
push
out
mov
pop
ljmp
mov
imul
jg
pop
pop
jae
mov
push
cmp
movsl
fs
flds
pop
xor
jne
bound
pop
ljmp
outsb
mov
test
mov
scas
mov
clc
mov
lods
jmp
inc
mov
testl
test
add
sbb
mov
adc
add
jle
xor
add
inc
shr
sbb
sub
xlat
add
ret
or
add
sbb
jns
outsl
jae
in
mov
leave
mov
inc
pop
mov
int3
push
lahf
clc
movsb
pop
cmc
mov
push
fisubrl
cmp
pusha
add
data16
push
xchg
add
hlt
dec
and
add
and
sbb
dec
add
pop
or
adc
sbb
adc
in
fcomip
mov
xor
add
js
adc
mov
shrb
cli
jne
sbb
insb
fst
adc
add
jb
xchg
dec
sub
add
push
sub
jae
add
sbbb
pop
mov
ja
addr16
inc
scas
mov
insl
loopne
pop
add
in
orl
repnz
dec
inc
push
pop
adc
push
xchg
popf
dec
loopne
inc
jo
sahf
jns
add
mov
lret
loopne
je
nop
imul
sbb
adc
rolb
mov
in
mov
xor
xchg
leave
orb
mov
in
sbb
sbb
pusha
enter
and
adc
xor
ss
pop
xor
add
fidivrl
fwait
inc
cmp
jecxz
mov
imul
inc
xorb
rcrb
add
mov
pop
gs
xchg
push
cltd
lcall
sub
cmpsb
fwait
mov
cmp
rolb
testl
xchg
pusha
mov
cwtl
int3
add
or
arpl
inc
mov
dec
add
add
jecxz
movaps
enter
sbb
sti
popa
dec
dec
popf
int
adc
mov
mov
std
jl
js
dec
iret
pusha
xchg
mov
sub
add
jmp
adc
and
sub
inc
xor
shlb
or
icebp
mov
cwtl
cmp
test
fsubs
mov
jmp
shrd
stc
push
das
ja
push
clc
mov
xchg
nop
int3
and
aam
ljmp
push
add
call
out
scas
cmp
xor
add
cs
addb
and
adc
out
add
mov
add
fsub
cmc
scas
inc
icebp
jge
mov
aas
sub
push
sahf
sub
mov
push
and
mov
pushf
bound
mov
mov
out
sbb
and
add
push
lock
out
inc
add
dec
ljmp
pop
inc
xchg
inc
adc
fbld
add
add
mov
sahf
es
cmp
imul
add
push
es
push
and
dec
sub
movsb
sbb
dec
stc
xlat
mov
cmp
pop
popf
pop
add
loop
rcrb
ret
adc
add
lcall
or
add
add
loope
and
movsb
ss
rcrb
ror
add
aad
or
xchg
xchg
test
rcrl
sbb
mov
sub
jp
add
lods
in
lret
adc
add
mov
sub
insb
decb
fwait
popf
fmuls
adc
add
addl
fistpll
mov
add
push
adc
cmp
xor
in
mov
push
jp
mov
sub
add
mov
and
fidivs
nop
add
dec
test
movsl
xchg
mov
xor
inc
and
push
pop
mov
pusha
andb
sarl
xchg
lea
pop
xor
cmpsb
mov
add
lret
lahf
scas
add
jae
xor
int
push
andl
or
xchg
inc
and
mov
adc
movsb
xchg
jae
decl
insl
test
mov
or
out
daa
inc
stc
push
mov
add
push
mov
nop
jne
dec
add
lds
xchg
sub
cmp
int3
push
mov
out
ds
cs
out
rclb
ds
pop
add
int
adc
cwtl
push
mov
inc
hlt
ret
popl
call
cmp
pop
or
xchg
push
jge
fdivrl
aad
lahf
fwait
inc
push
push
leave
add
or
cltd
dec
call
add
jne
pop
lods
push
push
xchg
add
push
clc
ja
push
pop
mov
sub
loope
ret
adc
icebp
les
adc
jle
jp
pop
es
pop
cmp
shl
andl
mov
gs
push
pop
mov
inc
arpl
mov
mov
sbb
and
mov
out
inc
in
fwait
mov
pop
dec
xchg
aad
dec
mov
test
daa
sbb
xor
inc
mov
mov
rcl
icebp
jae
enter
push
add
xor
sahf
sub
xor
lods
sub
mov
inc
pushf
pop
push
cmp
or
in
in
stc
je
ljmp
fnstcw
icebp
cmpb
in
lcall
mov
and
add
sub
mov
cmp
jno
lret
insl
mov
loopne
push
dec
xchg
sub
dec
bsr
decb
int
dec
fsubl
cmp
pop
stos
mov
xorl
jmp
ja
push
hlt
je
into
sub
and
and
mov
repnz
sbb
mull
cltd
insb
jp
inc
sub
daa
aaa
out
and
sbb
jb
loop
push
inc
add
call
jl
call
clc
and
mov
insb
pop
loopne
fsub
jp
or
mov
push
sub
aad
mov
mov
add
adc
xchg
je
cmp
sbb
imul
push
in
pop
cli
sbb
mov
mov
in
add
nop
jbe
cli
sbb
jecxz
jmp
fimull
daa
int3
dec
mov
loopne
push
leave
shll
or
sub
fiadds
sub
mov
add
clc
fstl
jl
add
or
inc
sbb
push
imull
mov
sarl
fcompl
add
adc
andb
jmp
loop
jle
sbb
push
xchg
add
jp
mov
ret
outsl
clc
adc
loope
mov
addb
test
sub
mov
fadds
fs
mov
loopne
xorb
add
mov
in
add
dec
jle
add
push
clc
pop
cmp
rorb
mov
mov
out
ss
push
or
std
pop
sub
or
and
push
or
xchg
jne
cmp
decb
jge
aaa
push
push
mov
rolb
and
sbb
lcall
xor
or
add
lods
adcb
pop
les
mov
mov
dec
js
push
ret
fldcw
out
inc
sbb
xlat
faddl
mov
inc
ds
mov
and
clc
pop
cmp
fistps
std
dec
xlat
rolb
shl
xor
test
adc
or
lods
int3
inc
imul
aam
fbld
fcom
push
inc
daa
add
jg
mov
jle
jecxz
test
inc
add
out
inc
shll
xor
in
add
pushf
rclb
add
test
test
jnp
stos
andb
inc
jg
inc
cli
cmp
xlat
sahf
jmp
add
cmp
push
mov
inc
adc
mov
rolb
mov
jecxz
shlb
sub
lret
mov
ds
aas
xchg
fidivrl
aaa
mov
popf
adc
fisttpl
leave
inc
mov
inc
aas
mov
mov
rolb
and
insb
push
imul
add
es
push
mov
aam
jnp
jne
lock
jg
sbb
fsts
mov
push
icebp
pop
push
dec
inc
js
cmp
xor
nop
arpl
loope
loopne
ret
push
cmp
ficoms
xor
mov
sub
mov
add
nop
iret
repnz
inc
adc
add
jg
mov
dec
dec
ss
add
dec
pop
movsl
add
stos
arpl
insb
push
and
das
movsl
sbb
aas
pushf
add
mov
fmuls
inc
add
lods
jne
add
mov
mov
pop
hlt
lahf
jge
and
fs
adc
cmp
xor
xchg
inc
add
add
mov
xor
pushw
loope
dec
ret
jle
ljmp
mov
andb
test
sbb
sbb
ficompl
inc
add
iret
mov
or
stc
cli
test
push
lock
mov
popa
sbb
adcl
loope
push
aaa
in
mov
push
loopne
rcll
or
or
in
cmovae
in
xor
cmp
imul
mov
or
add
jo
stc
and
pushf
adc
lds
sbb
add
or
add
fcoml
add
aaa
dec
stos
cmc
lret
push
lahf
aam
jne
roll
outsl
pop
divl
lret
enter
ret
js
pop
mov
push
into
add
push
add
ja
jb
jle
std
clc
push
jge
add
cmpsl
leave
in
cmp
icebp
outsb
pop
sub
xor
lea
mov
add
pop
shrb
mov
or
mov
pop
rcrl
cmpsb
add
addr16
sub
jns
test
mov
mov
cmp
cmp
add
mov
out
nop
mov
pop
mov
add
cmp
xchg
loop
add
stos
mov
mov
ds
cmp
cltd
and
or
mov
mov
jge
dec
adc
sbb
pop
cmpsl
push
adcb
add
sbb
popl
aaa
shlb
sub
into
stos
add
xlat
addr16
scas
xchg
add
mov
jmp
call
pop
or
repnz
xor
daa
rcrl
push
rorb
test
pushf
loopne
pop
mov
push
sbb
or
outsl
add
in
and
jecxz
cmp
cmp
fs
jnp
cmp
sub
fcomi
lods
inc
add
add
loopne
div
pop
aad
mov
jo
xchg
cmp
xor
fisttpll
inc
test
xorb
mov
fcompl
adc
add
xchg
add
rcr
inc
add
repnz
idivl
push
loopne
cmp
daa
and
pusha
test
sbbb
inc
push
dec
imul
rolb
and
aam
add
dec
outsl
ljmp
dec
dec
pop
lahf
stc
adc
ljmp
cmp
lock
push
push
rorl
sub
pusha
aas
jmp
aam
inc
addb
adc
addr16
pusha
sub
leave
sarb
add
mov
add
xchg
adc
out
cmp
add
pop
shl
push
movsb
nop
lock
adc
fiadds
in
lods
add
xor
and
cmp
push
movl
xchg
ja
add
pop
lods
in
sub
mov
add
out
aam
ljmp
cli
jbe
add
scas
jae
cmc
pop
rclb
fwait
jge
or
cmp
dec
mov
xchg
mov
test
dec
add
mov
lret
mov
popf
sarb
add
lods
popa
ljmp
fs
shlb
push
cmp
loop
and
xor
push
ret
roll
movb
and
add
out
movsl
push
dec
jo
xchg
cmc
nop
cmpsb
sub
repz
cld
data16
jecxz
push
mov
mov
adc
and
sbb
into
data16
add
mov
and
inc
push
or
sbb
push
lcall
or
stos
xchg
flds
not
movsb
fs
adc
mov
pop
icebp
ret
dec
arpl
add
fldl
shlb
fcomi
test
loop
dec
pop
inc
ret
push
pop
cmp
rolb
xchg
sub
dec
loopne
call
mov
xchg
enter
stos
push
or
nop
cltd
adc
pop
das
add
sbb
ret
insl
and
cld
jnp
xchg
lcall
pusha
xor
icebp
aam
add
push
mov
rolb
dec
and
mov
lods
mov
loopne
or
ret
call
loop
or
cwtl
mov
mov
push
push
jp
sub
enter
mov
add
sti
mov
aaa
pop
pop
mov
das
daa
adc
push
int3
xchg
stos
xchg
lret
movl
lcall
lods
mov
mov
enter
lods
outsb
xchg
cmpsl
filds
add
mov
add
mov
mov
shll
xlat
icebp
inc
jecxz
fs
mov
adc
subb
dec
test
outsb
xchg
cmp
cli
push
push
lods
sbb
mov
add
daa
pushl
cmp
pop
cmp
push
js
mov
pop
jb
adc
pop
sbb
sbbl
add
push
arpl
outsl
add
insb
jne
pop
cvtps2pd
int3
jo,pt
cmp
lods
add
das
out
add
ficoml
sbb
inc
cs
mov
push
xor
mov
xchg
jno
movsl
add
out
lea
mov
rorl
pop
sub
test
loopne
cmpsl
push
cs
rcrb
add
mov
lods
add
enter
fwait
iret
sbb
pop
jne
dec
xchg
dec
sub
adc
leave
mov
lock
mov
das
aaa
cld
pop
out
or
loope
adc
xchg
mov
xor
out
sbb
stos
xor
pusha
dec
add
mov
add
xchg
lcall
adc
inc
xor
xchg
add
and
add
mov
cmp
add
nop
lcall
mov
jns
adc
or
enter
cmp
add
and
inc
add
and
lock
dec
and
pop
popf
inc
add
or
movsb
mov
pop
mov
or
aam
jle
pusha
fsubrp
fwait
adc
add
cmp
pop
out
add
adc
loope
or
les
pop
cld
pusha
sub
add
cwtl
enter
dec
add
bound
jl
cmp
rolb
pushl
jge
or
dec
stc
lock
test
rorb
sub
loopne
xchg
cmc
xor
adc
or
lea
push
push
add
cmpsl
test
add
repnz
cwtl
aam
jo
and
fcmovne
jle
dec
lods
mov
lret
fdivs
add
jbe
sbb
aas
in
movsl
adc
sub
add
dec
mov
add
xchg
test
inc
bound
rcll
lock
rorb
xchg
mov
aaa
rolb
mov
inc
adc
das
stos
push
fwait
push
sub
mov
inc
adc
aas
test
sub
and
mov
adc
icebp
sub
add
imul
inc
xor
out
add
jne
xchg
cmpsl
fmuls
add
stos
aam
mov
adc
outsb
push
jmp
mov
add
inc
fistps
add
lods
repnz
push
inc
add
notb
loopne
loop
dec
sbb
mov
jns
mov
or
add
stos
ljmp
pop
scas
mov
jg
roll
test
aad
pop
cmp
mov
mov
fimull
add
mov
xchg
shlb
call
sub
test
mov
loop,pt
out
lahf
push
sub
aas
lret
ljmp
dec
ret
push
stos
outsl
jno
jns
cwtl
and
in
mov
pushf
push
mov
pusha
xchg
popf
flds
push
inc
cmpl
add
shlb
dec
lret
add
jb
les
mov
and
cmpsl
ss
inc
add
sub
mov
sub
or
shll
iret
stos
jecxz
mov
mov
pop
repz
scas
xor
xchg
pop
jle
popf
jecxz
adcb
loop
xchg
xchg
adc
jmp
or
pop
xor
cli
outsl
adc
or
pop
mov
loopne
jae
push
add
mull
add
push
leave
or
cwtl
aas
add
adc
pop
incb
cmp
loopne
jnp
cwtl
jge
lock
insb
popf
pop
add
pusha
test
cmp
aas
push
sub
and
andb
fdivrl
xor
mov
mov
add
xor
ljmp
in
aam
xor
aad
cmp
jp
sahf
mov
subl
inc
call
cmp
enter
icebp
xchg
mov
jmp
aas
mov
or
movsl
xor
mov
mov
pop
out
outsb
out
add
push
add
sub
lods
cmp
inc
add
pop
lahf
jns
jp,pn
mov
xchg
rcrb
sub
mov
and
add
pop
add
cmpsl
mov
add
out
xchg
in
mov
push
mov
test
jo
xchg
movl
pop
fbstp
cwtl
inc
call
punpcklbw
aam
movsb
add
sbb
loope
pop
faddp
mov
mov
jmp
xor
add
mov
clc
add
sbb
cmp
popf
sbb
out
add
les
leave
push
and
sub
sub
add
mov
xchg
lret
nop
rol
jnp
mov
jg
ret
lds
mov
repnz
fcompl
inc
scas
shlb
in
mov
add
pusha
cmp
xor
pusha
mov
adc
sub
sub
add
std
push
test
sbb
xchg
sbb
sub
jp
cmp
jae
sbb
out
fisttpll
loopne
insl
and
cld
imul
mov
pop
xor
loop
repnz
pusha
sub
fisttpll
cmp
xchg
std
imulb
add
bound
fs
cld
sbb
fistpl
xchg
dec
scas
mov
rorb
xor
sub
xchg
std
jno
sbb
mov
lock
adc
adc
lea
cwtl
add
int
jne
mov
or
mov
dec
mov
sbb
add
mov
popa
shrb
test
fwait
jnp
pmullw
sub
loope
pop
aaa
call
or
xchg
pop
push
sbb
inc
aaa
ret
fwait
add
mov
add
jecxz
pop
xlat
and
test
add
into
movsl
pop
push
mov
jb
rcll
mov
add
cli
lahf
mov
add
add
inc
ljmp
lret
pop
sub
cld
mov
and
add
push
push
sub
js
or
jo
jp
or
out
rclb
jno
lcall
inc
dec
and
add
add
cs
subb
adc
out
add
sbb
sbb
sahf
cmpsb
jecxz
mov
push
push
push
inc
add
and
add
negl
jns
push
or
aad
sub
pop
cs
out
add
bound
mov
add
adc
dec
movsb
in
cld
or
pop
push
das
nop
loop,pt
or
mov
add
mov
pop
jns
das
orb
nop
pop
dec
adc
and
pop
add
cmp
xchg
into
sbb
decl
xor
cmp
scas
cmpsl
or
imul
js
add
bound
mov
sbbb
dec
add
sbb
and
mov
sahf
scas
movsl
ret
fildl
fisttpll
mov
adc
jns
and
fs
or
jmp
pop
sti
nop
jns
push
pop
xchg
sub
inc
mov
aas
cmpl
scas
sub
mov
ljmp
sbb
sbb
and
into
out
push
fdivrs
jno
jae
paddsw
mov
ja
add
sbb
ret
jae
add
push
lods
jnp
mov
pop
or
cmpb
inc
out
mov
sbb
add
fnstcw
pop
testb
dec
shrb
xchg
addb
mov
jb
jbe
mov
inc
hlt
jp
and
mov
lret
adc
xchg
sbb
repnz
and
cmp
xchg
push
jl
pop
xchg
ja
add
xor
pop
jp
mov
add
rcll
mov
stc
dec
test
je
hlt
ss
les
out
push
inc
add
mov
fs
adc
loope
iret
and
int3
xor
add
inc
lcall
sbb
mov
add
enter
jo
nop
push
popa
and
sbb
xor
jo
mov
push
sbb
rolb
icebp
ds
push
cld
lret
add
test
mov
add
hlt
movsb
pop
push
leave
xchg
std
js
ds
sbb
sbb
mov
mov
xor
fdivl
add
mov
or
add
fisttpl
add
lahf
jecxz
pop
push
push
js
add
pop
inc
jmp
xchg
out
lret
out
sbb
add
pop
cs
and
repnz
fmull
dec
and
add
pop
arpl
mov
jl
ljmp
sbb
lods
loope
subb
add
cld
cmp
repnz
pusha
sbb
jnp
icebp
add
int
addb
lock
pusha
jbe
lea
rclb
into
dec
add
cmp
add
rorl
imul
popa
xor
push
ss
adc
push
mov
call
lret
cltd
enter
add
adc
in
es
cli
loopne
movsl
sub
leave
in
mov
stc
loopne
xchg
pop
mov
add
fbstp
icebp
add
adc
and
push
out
cmp
std
and
insl
aam
movsl
add
adc
cmp
add
call
inc
adc
mov
inc
pop
xchg
pusha
add
pop
aam
mov
inc
and
in
pusha
mov
dec
and
sbb
int3
push
inc
daa
dec
fidivl
xchg
mov
add
mov
or
data16
fildll
ja
mov
mov
add
rol
aaa
psubsw
clc
mov
dec
rcr
push
push
das
and
xor
repnz
ja
add
jle
jne
adc
and
aam
or
cmp
mov
add
push
leave
pop
ficoms
lock
mov
add
sub
jns
and
add
ds
xor
mov
add
mov
sahf
shlb
dec
ds
jle
clc
mov
lret
ss
out
mov
xchg
xor
pusha
in
jg
rorb
fs
cmp
and
lods
or
mov
sarb
aaa
mov
in
jp
fdivrs
inc
je
xchg
xlat
lock
dec
push
cld
push
pusha
mull
mov
or
loopne
pusha
and
mov
cmpsb
cmp
add
insl
sarl
mov
cs
mov
push
outsl
pop
pop
nop
out
ljmp
add
jl,pn
mov
into
mov
rorb
sbb
xchg
fiaddl
adc
jecxz
ret
aam
jmp
lods
pushf
sbb
cltd
add
test
arpl
mov
stos
mov
les
fdivrl
cmc
mov
rcll
jno
and
push
sub
ret
cmpsb
and
imul
adc
and
inc
fiaddl
out
in
add
sahf
push
or
xchg
add
xchg
sbb
mov
push
mov
sahf
sub
inc
mov
and
mov
cwtl
aas
cmpsb
add
add
add
xchg
not
and
xchg
cmc
jmp
in
notb
cmp
ljmp
mov
ds
pop
mov
dec
add
dec
add
pop
pop
inc
cmpsl
outsb
push
pusha
jo
test
add
cmp
fldl
push
je
aad
bound
jbe
mov
add
movsb
jg
push
jge
sbb
pop
std
shlb
jge
add
fadds
add
js
jo
mov
jno
jmp
popf
pop
lock
call
add
add
gs
cmp
add
sub
sbb
test
nop
and
stc
sbb
add
jg
add
imull
push
push
cmp
rolb
xchg
cmp
pop
pop
in
xor
pop
ret
inc
arpl
dec
mov
or
or
xchg
sbb
and
nop
lret
push
dec
adc
xorb
dec
mov
int3
push
push
sbb
jns
mov
add
mov
fnstsw
fcoms
push
or
lcall
jae
movb
mov
test
pop
aas
loopne
dec
icebp
add
ss
pop
mov
lods
int3
addr16
cmp
pop
cmpsl
sahf
xorb
pushf
iret
and
add
scas
shlb
push
mov
push
jbe
stos
aam
xchg
sub
add
fs
aaa
filds
push
mov
xor
pop
outsb
test
cwtl
decl
inc
dec
aam
xchg
repz
sarb
inc
cmpsl
push
es
jo
sub
xchg
movsl
pop
mov
dec
sbb
jecxz
in
jo
sbbl
mov
xchg
fadd
jno
mov
mov
or
add
push
sub
idiv
mov
jae
lahf
add
loop
push
pop
adc
and
flds
clc
fs
hlt
jmp
push
xchg
xor
mov
mov
add
add
ja
add
inc
aaa
and
cld
cmp
xchg
ret
iret
add
add
std
negb
cmp
ja
pop
xchg
or
mov
cmc
sbb
dec
rclb
cld
add
data16
lds
gs
xchg
add
cmpsl
push
int
stos
mov
jb
jbe
xchg
in
sub
lret
dec
sbb
popa
stos
lods
cmp
xchg
cwtl
fadds
xor
cmp
aaa
add
call
jae
pop
pop
adc
rcrl
stc
mull
mov
xor
xchg
addr16
add
inc
jmp
jmp
cli
fldcw
dec
cs
enter
push
mov
mov
movsl
adc
xor
mov
mov
orl
int
xchg
mov
cli
jl
xor
inc
pushf
xchg
sub
das
lock
mov
push
mov
cmpsb
popa
mov
add
movsb
xor
test
add
add
pop
idivl
outsl
dec
mov
hlt
loopne
and
sysret
es
inc
push
jae
fidivs
push
mov
xor
mov
sti
in
inc
imul
fsubrs
js
add
insl
sub
sub
inc
addb
or
lods
mov
jge
xor
pop
mov
add
sbb
jo
xlat
xor
cmpb
call
xor
outsb
loope
mov
ss
add
jnp
cmp
xor
inc
jmp
xchg
xor
loopne
xor
iret
xchg
es
mov
add
js
or
jno
add
and
ljmp
add
and
gs
enter
mov
and
cltd
cmc
rcll
adc
cmp
in
scas
mov
xlat
mov
mov
sub
sbb
subb
or
inc
clc
flds
lcall
icebp
sbb
add
test
lods
dec
pusha
or
sbb
and
insb
add
add
add
or
mov
sub
nop
pusha
jp
iret
movb
pop
outsb
je
jg
or
mov
sbb
je
push
push
push
and
cli
mov
inc
push
clc
mov
call
repnz
decb
add
push
imul
ret
xchg
add
inc
popf
sub
popa
push
rcrb
fbstp
add
mov
add
inc
ljmp
rcrb
mov
mov
insl
cmp
cmp
pop
out
pop
dec
lea
sub
xchg
subb
push
dec
mov
add
inc
je
pop
nop
mov
and
push
push
xchg
add
sbb
mov
xchg
cs
add
in
sub
push
cmp
cli
push
pushl
mov
cwtl
push
das
fs
mov
in
sbb
imul
out
adc
cld
mov
mov
sbb
pusha
lea
lahf
ja
push
rcl
push
shlb
ret
aas
add
cmp
xchg
add
push
testl
mov
iret
jns
add
inc
pop
dec
call
ljmp
mov
mov
add
nop
jg
mov
push
jno
and
sbb
out
xchg
sbb
sbb
insl
push
inc
sbb
mov
rcrb
push
pop
sarb
enter
out
inc
add
push
pop
pop
mulb
out
cld
and
add
xor
sub
jae
sbb
into
flds
icebp
lock
sahf
cli
ret
xor
push
rorb
xchg
scas
arpl
jp
add
add
iret
mov
test
pop
cltd
sub
mov
add
repz
add
pop
rcrb
scas
xchg
sbb
fstps
cltd
sub
jb
mov
loop
xor
and
mov
fadds
inc
cmp
inc
mov
jmp
rclb
add
xchg
jbe
add
or
adc
test
mov
push
push
mov
mov
xchg
int3
inc
or
popa
cwtl
cmp
add
ss
inc
xor
pop
aad
inc
addr16
shl
mov
das
add
adc
jle
dec
pop
dec
fildl
scas
adc
lea
sbb
imul
outsl
pop
sub
lcall
push
aad
jge
xchg
fdivs
insl
rcrl
add
sub
push
xor
xchg
dec
or
jle
xorl
ljmp
or
ja
mov
push
add
aaa
lods
mov
add
sbb
ljmp
and
jo
add
lea
loopne
cld
add
aaa
jae
add
daa
add
fs
add
loope
scas
mov
dec
lret
mov
lea
mov
add
or
imul
sub
push
dec
adc
dec
aad
add
loopne
test
mov
add
gs
int
push
push
and
sbb
mov
arpl
pop
sahf
mov
out
test
inc
mov
out
adc
xchg
push
sub
sbb
sub
sub
mov
mov
adc
stos
adc
out
xchg
in
xchg
icebp
call
xor
add
flds
cmp
push
pusha
adc
pcmpgtb
mov
repnz
js
into
mov
jo
push
outsb
leave
call
add
cs
jle
mov
jb
push
xchg
xchg
outsl
add
push
daa
mov
and
dec
add
shlb
addl
mov
xchg
add
mov
test
push
mov
sub
in
xorb
jmp
aas
sbb
jmp
cltd
adcb
lds
add
cwtl
decl
ret
and
pcmpgtw
jle
pop
pop
out
xchg
or
aas
fistps
mov
jecxz
inc
pop
bswap
das
add
jle
sub
mov
arpl
leave
nop
stos
xchg
jbe
xchg
sbb
mov
fnsave
or
add
insb
jecxz
inc
in
hlt
add
mov
add
inc
push
xor
mov
je
jecxz
in
mov
addb
bound
fbstp
xchg
cmpsl
mov
sbb
cmpsb
inc
sti
test
pushf
stc
or
popf
sbb
mov
add
push
dec
dec
out
insl
fistpl
push
fimuls
jo
xchg
mov
xchg
add
xchg
dec
xor
sbb
xor
mov
scas
adc
inc
cmc
add
jo
das
pusha
mull
lcall
mov
je
mov
mov
dec
orl
add
sahf
inc
movsb
push
pusha
adc
test
pop
add
out
dec
add
and
repnz
adc
xchg
pop
mov
or
push
and
dec
jecxz
jp
add
pop
mov
jae
sub
or
adc
add
fisubl
add
mov
pop
lock
mov
cld
sub
mov
pusha
xor
std
mov
jbe
ss
or
cmp
add
fsubrs
pop
add
stc
movsl
js
push
jo
lea
mov
cmpl
call
mov
or
pusha
mov
out
cli
rcrl
mov
dec
push
xchg
jbe
add
mov
cmpsb
jl
add
out
arpl
xor
push
pusha
mov
aas
add
dec
inc
lret
rorl
jnp
mov
xchg
incb
adc
mov
cltd
jo
notb
data16
sarb
inc
lods
cmp
xchg
mov
cwtl
lods
shrl
sahf
ret
repnz
add
mov
xor
and
pop
pop
jb
jns
add
movsl
daa
cmpsl
dec
mov
cwtl
xlat
xchg
xchg
pop
pop
cmp
fiadds
jne
fwait
popa
xchg
inc
testb
cltd
sbb
fdivl
dec
movsb
jo
fs
push
sarb
orb
nop
cmp
fisubl
cmp
std
aam
pop
add
sbb
jb
add
xlat
mov
and
js
add
and
loopne
jg
jne
cmpl
ds
add
xchg
fisubrl
or
add
cmp
hlt
and
add
ffreep
popa
into
stos
adcb
lds
addr16
rcrb
xchg
loope
fcompl
leave
push
lret
pop
inc
add
xchg
movsl
out
arpl
dec
inc
nop
mov
shll
wrmsr
nop
push
add
jbe
mov
dec
scas
inc
sub
mov
fs
mov
inc
movsl
jmp
loope
popa
inc
pop
dec
out
or
je
mov
fmull
inc
xor
scas
lret
scas
xlat
and
dec
xchg
movsb
add
adcb
and
adc
push
cmp
add
mov
or
add
mov
stc
add
les
je
push
add
lea
inc
sbb
pop
dec
mov
pop
pushf
mov
loop
popa
orb
mov
add
hlt
and
jo
iret
repnz
out
jne
popf
mov
roll
push
cmpsl
les
fwait
push
cmp
xchg
lahf
mov
sarb
lods
jmp
cmpsb
add
mov
add
or
stos
out
add
pop
pop
int
xor
dec
shll
lcall
or
sub
test
push
push
je
insb
cmp
sti
mov
aaa
inc
add
mov
and
les
mov
cmp
subb
scas
push
add
mov
mov
add
icebp
fiaddl
insl
flds
jmp
rcll
loope
add
call
add
jae
insl
in
mov
push
add
dec
insb
inc
mov
and
or
add
sub
mov
lds
pop
in
sti
dec
in
ja
push
cmp
add
hlt
imul
sub
mov
cmc
xlat
add
aam
sbb
jae
clc
xchg
push
add
jo
imul
je
pop
loope
sub
loopne
aam
xchg
out
sub
mov
add
inc
ja
lock
dec
loop
popa
xor
das
pop
jnp
pop
push
shll
xchg
add
icebp
imul
inc
popf
insb
fsubrl
popl
lahf
push
jo
les
lret
or
xorl
mov
in
sub
jns
in
movsl
sub
add
add
into
cmp
dec
add
sbbb
jg
inc
das
xor
call
inc
aad
popf
add
sbb
cmp
xchg
pop
das
cmpsb
dec
push
mov
jae
xor
dec
and
dec
out
int3
add
lods
jp
les
ja
mov
lahf
cmp
sub
js
add
mov
mov
push
dec
ret
cltd
lock
xor
add
add
xchg
mov
pop
add
aad
movsl
sti
lahf
mov
xor
outsb
push
rcrb
sbb
movaps
scas
cmpb
pushf
mov
pop
add
sub
test
xchg
test
jno
cmp
mov
inc
add
call
and
pop
xor
and
mov
add
mov
dec
out
or
jbe
add
mov
test
int3
in
add
ret
shll
push
hlt
add
jo
cwtl
cmpsb
les
add
sub
xchg
pop
or
ror
test
cmp
add
mov
pop
and
jge
flds
pusha
pop
cltd
test
jae
test
hlt
mov
add
ds
or
sub
fcoml
mov
inc
out
pusha
js
adc
adc
inc
out
add
add
shl
rorl
pop
pop
pushf
cmp
mov
loop
xchg
mov
mov
ljmp
or
roll
inc
sbb
inc
into
add
imul
push
daa
and
shrb
mov
push
dec
xor
dec
ret
jl
jno
adc
lods
pusha
mov
divl
je
sahf
pop
in
push
sarb
pop
sarl
add
call
add
popf
add
in
subl
out
add
fsts
jp
sbb
cli
mov
loop
add
adc
inc
cli
dec
add
div
dec
imul
xchg
sbb
lods
test
outsl
cmp
cltd
data16
jmp
push
inc
push
int
and
lds
pop
sub
mov
imul
push
scas
xchg
test
sub
lods
psllq
pop
jo
into
add
mov
cwtl
frstor
add
dec
pop
jne
sbb
scas
xor
nop
add
mov
cmc
imul
lahf
add
sbb
mov
add
or
add
inc
aaa
push
out
fdivs
add
cmc
xchg
iret
cmpsb
mov
pusha
add
add
sbb
mov
add
mov
shrb
shrl
rcrb
ja
lds
pusha
mov
and
imul
movsw
cltd
mov
adc
dec
cmp
xorb
imul
pop
add
lods
jnp
int3
sub
push
xchg
fdivr
pop
cwtl
inc
and
xchg
push
out
and
and
iret
add
adc
cmp
inc
push
aas
xchg
addl
into
aad
pop
les
out
adc
ja
jno
in
dec
cli
sub
mov
das
aam
mov
subl
cld
pop
lock
add
push
data16
jae
ret
es
cmp
or
test
movsl
jle
and
inc
sub
add
add
ret
add
out
fmuls
or
icebp
ds
mov
xchg
push
cmpsl
lods
pop
add
enter
xor
sub
add
push
and
testb
pop
loopne
pop
cmp
add
inc
adc
fsts
add
dec
dec
lods
jb
add
add
int3
add
inc
sub
pop
lcall
or
lock
addb
dec
mov
pushf
nop
add
add
stos
cmp
cmp
inc
mov
pushf
xchg
mov
adc
es
sbb
or
jg
add
fdivl
or
fwait
repnz
je
jb
mov
or
mov
dec
sbb
cmpsl
js
shlb
push
sub
lret
mov
inc
push
stc
lcall
jp
xchg
sub
add
xchg
push
mov
xor
push
fdivl
add
mov
sbb
incl
mov
aaa
jp
hlt
int
xorl
xor
jno
adcb
jae
in
lret
jmp
gs
push
imul
ja
in
adc
lea
add
incb
lahf
mov
daa
push
mov
hlt
jbe
mov
mov
xor
add
popa
adc
add
pop
dec
add
popa
ror
sbb
mov
jl
rclb
call
push
les
cs
inc
cltd
mov
xchg
add
stos
inc
dec
lcall
leave
sbbb
push
jb
fs
add
mov
mov
daa
push
add
and
pop
les
sbb
xchg
out
sbb
shlb
roll
inc
sub
cltd
aam
daa
add
or
mov
fidivrl
xchg
outsb
jne
loopne
add
adc
lret
add
stc
sub
imul
cli
or
inc
pop
pushf
mov
inc
or
jno
in
add
push
or
cmpsl
lahf
jae
hlt
push
jge
add
fistl
add
add
sahf
mov
sbb
roll
aam
push
inc
pop
mov
lcall
pushl
add
push
ret
cmp
int3
cmp
cmp
sub
push
sbb
rolb
andl
out
insb
mov
dec
lods
mov
adc
shlb
cmp
add
jg,pt
jo
mov
loop
lock
clc
xor
into
jb
jnp
dec
dec
pop
adcb
add
and
aad
pop
arpl
xlat
jo
sbb
sub
pusha
xchg
test
add
call
and
dec
xchg
test
inc
pop
inc
subb
cmp
fnstsw
cld
mov
call
xchg
stos
jns
test
into
sub
add
sbbb
mov
loopne
or
add
push
enter
sub
pop
or
pop
jp
push
cmp
mov
mov
std
jno
sub
pop
add
xor
test
lahf
mov
add
enter
xor
cmpsb
add
dec
iret
es
loope
inc
add
mov
dec
out
lret
cmp
fldl
inc
fsubrl
data16
sbb
rolb
mov
or
add
call
inc
add
dec
dec
outsb
add
or
aad
xor
lods
push
mov
sub
xor
rcr
jl
jo
pusha
enter
jecxz
out
mov
push
mov
loope
into
outsl
stc
cli
and
jo
jae
add
jbe
cmp
add
stos
add
je
andb
inc
sub
cmpsb
in
cmp
add
jmp
shll
int3
lds
xchg
rcrb
sub
leave
dec
push
shlb
andb
xchg
sbb
pop
in
inc
fwait
in
fisubrl
jl
add
jg
idiv
jns
pusha
ret
mov
xor
sahf
fsubl
mov
cwtl
popa
ss
add
out
lcall
cmp
test
mov
push
sbb
out
jno
cmc
add
xchg
pop
sub
enter
cmp
jecxz
andb
in
subb
add
dec
pop
mov
in
jb
push
gs
lods
push
push
test
inc
dec
jo
movsb
out
sti
test
cmp
jle
insl
hlt
shl
push
icebp
push
xchg
add
pop
push
clts
rclb
in
nop
fimull
mov
mov
jle
sub
and
jmp
mov
adc
add
aaa
loope
mov
lret
push
push
arpl
sbb
sub
mov
dec
and
add
hlt
inc
inc
add
outsb
aad
inc
add
mov
cmp
add
mov
adc
pop
stc
stos
fs
sub
shll
xor
insb
cmp
dec
cmc
lods
sbb
add
int
test
outsb
xchg
lea
adc
ret
add
enter
std
aad
add
xchg
outsb
sbb
es
data16
repz
and
bound
sub
lds
cmp
xchg
stc
leave
inc
data16
arpl
jmp
adc
in
xchg
and
and
add
fdivr
adcb
maxps
fs
mov
mov
hlt
jns
or
inc
addr16
orl
std
pop
loope
jo
repnz
inc
push
mov
dec
scas
mov
mov
pop
ret
into
pop
mov
adc
into
test
jp
out
xchg
rolb
jg
add
xchg
lock
orb
mov
add
dec
fcomip
push
push
mov
out
push
mov
xchg
or
dec
sub
clc
sbb
mov
outsb
testb
and
xchg
dec
or
inc
fildll
outsb
rsqrtps
cbtw
and
daa
inc
lret
lea
imul
dec
inc
cmpsb
ja
fcoms
icebp
out
dec
push
dec
sbb
daa
inc
imul
mov
and
dec
out
pop
push
cld
ljmp
jmp
adc
hlt
pop
fmulp
insb
jl
add
sub
cmp
sub
push
lods
push
cmp
push
pop
or
pop
pop
mov
aaa
aam
xor
mov
js
add
out
pop
dec
inc
imul
nop
inc
ret
push
inc
add
ss
outsl
sbb
jbe
shrb
add
mov
sub
push
mov
inc
and
jmp
movsl
jne
ret
mov
mov
mov
add
out
fwait
sarb
and
dec
adc
mov
inc
insl
ret
or
xor
push
sbb
ljmp
out
lret
rcrb
pop
or
cwtl
addl
ljmp
mov
jne
repnz
and
ljmp
xchg
ret
lods
das
aas
lods
cwtl
icebp
nop
je
stc
aaa
jnp
push
in
int
out
push
mov
jae
pop
xchg
in
add
ljmp
add
aas
and
add
jl
or
mov
pop
and
insl
enter
add
mov
push
je
and
jno
imul
loope
fldl
add
push
mov
push
mov
add
mov
adc
clc
cs
push
add
sti
rolb
lock
cmp
add
add
cmpl
rcr
lret
add
mov
pop
flds
add
dec
sbb
or
sub
push
or
aaa
fdivr
adc
fimuls
or
orb
loope
or
push
xchg
sbbl
aas
sbb
es
and
in
add
mov
dec
in
mov
inc
bound
mov
cwtl
pop
inc
shll
add
mov
fnstsw
add
xchg
rorl
cmp
movsb
sbbl
cmp
scas
orb
and
test
xor
dec
mov
jmp
addl
inc
je
iret
dec
adc
add
xchg
fistpll
dec
mov
pop
push
divb
sbb
das
or
xchg
sbb
mov
add
call
jo
add
outsl
sbb
and
lock
add
loop
pop
push
mov
mov
jge
mov
add
adc
js
pop
cmp
add
jae
nop
dec
test
movb
pop
add
xchg
outsl
pop
pop
mov
adc
push
arpl
loop
mov
aas
and
cmp
add
nop
sub
or
insl
pop
or
inc
pop
adc
inc
cmc
cltd
std
xchg
add
je
or
les
xchg
mov
lds
and
add
or
jg
add
out
push
int3
ljmp
test
shl
imul
pop
sbb
fldz
lods
or
xchg
xchg
into
pusha
add
fistps
xorb
sbb
inc
add
loop
cmpsw
scas
mov
push
pop
mov
aaa
int3
int
sbb
add
mov
cltd
xlat
mull
adc
mov
jmp
pop
lret
pop
out
repnz
mov
popa
js
inc
cmc
xchg
lock
mov
jo
ficomps
mov
mov
pop
inc
add
pusha
cmp
shlb
add
push
scas
loope
sbb
verr
roll
pop
pop
inc
mul
ljmp
fildll
out
mov
push
repnz
sbb
add
cltd
fld
xor
and
fiaddl
jle
ja
std
ljmp
pop
cmp
inc
sub
push
mov
and
cmp
adc
gs
mov
jge,pn
shlb
and
mov
add
cltd
js
add
jp
jne
add
negl
mov
pusha
and
add
dec
add
adc
sbb
add
sbb
or
push
jns
loopne
pop
push
add
jmp
or
and
lret
arpl
add
pop
push
cmp
popa
rcrb
inc
stc
mov
xorb
cmp
sarl
add
addr16
cs
int3
xor
push
add
mov
addr16
jle
icebp
aaa
add
xor
jl
dec
dec
lret
fadds
pop
jle
jo
adc
cwtl
adc
sub
lds
ja
ret
stos
add
mov
jge
vpacksswb
les
sub
mov
mull
fsubrs
insb
dec
and
dec
xlat
mov
lock
clc
ljmp
cmp
je
out
les
movsl
loop
and
pop
test
jo
add
mov
popa
pop
add
xchg
rcll
jne
add
notl
stos
das
jecxz
rol
roll
ret
or
outsb
bound
jl
mov
jmp
pop
out
add
je
iret
shll
inc
mov
shrl
jg
or
repnz
pop
add
iret
xorb
mov
push
sbb
or
sti
add
je
xor
and
cmc
fsub
dec
jecxz
es
and
add
lds
xchg
cmp
mov
mov
inc
xor
cwtl
add
outsb
cmp
cmp
add
roll
mov
cld
push
bnd
sbb
mov
mov
test
fldenv
lahf
pop
cmp
sbb
imul
xorb
adc
mov
cmp
stos
sti
add
rol
pushf
xor
push
mov
popa
es
pop
add
inc
mov
inc
jo
mov
rclb
push
xchg
test
jge
mov
pusha
push
push
mov
add
and
add
lcall
sti
shrb
or
clc
mov
cmc
lock
add
mov
add
mov
scas
push
insb
or
add
lea
and
mov
add
mov
dec
fldt
cltd
and
scas
loopne
cld
push
out
mov
icebp
xor
pop
pcmpgtb
and
cmp
add
adc
dec
add
pop
insl
cli
dec
addr16
cmpsb
lods
add
js
inc
lods
ret
adc
out
add
inc
sbb
push
mov
add
sbb
les
test
add
adc
out
fsubp
add
divb
sub
push
lahf
and
add
testb
sbb
icebp
out
xchg
add
xor
aam
dec
cmp
sbb
movsl
hlt
lock
add
pop
add
mov
xchg
add
sub
outsl
and
leave
sbb
mov
and
mull
scas
jo
dec
imul
push
outsl
addr16
in
jge
dec
aaa
cwtl
es
add
mov
xor
mov
dec
cmpsl
faddp
xor
pop
fs
fisubrl
mov
mov
add
jnp
dec
add
add
sbbb
clc
add
push
pushf
lds
xchg
ja
dec
es
or
fwait
std
mov
xor
push
dec
jle
xor
lcall
ljmp
jae
test
enter
add
shl
outsl
and
out
sahf
add
push
push
pop
mov
sub
add
inc
leave
std
cmc
movsl
shll
mov
mov
jl
jle
int
cmp
cmpsb
add
ja
pop
mov
jbe
add
in
aam
addr16
and
jle
mov
stos
add
leave
push
mov
inc
inc
xchg
out
sbb
add
add
xor
sti
clc
add
cmc
xchg
and
pop
mov
inc
dec
es
adc
cmc
xor
jae
or
call
jae
push
dec
js
hlt
mov
stos
add
pusha
add
iret
dec
push
sub
and
arpl
cmp
jmp
and
jmp
icebp
shlb
ss
jle
and
aas
addl
mov
xchg
add
stos
sub
add
xchg
pop
or
cmpsl
push
mov
test
repz
lds
inc
rcrl
xlat
in
pusha
daa
mov
cmp
and
in
add
pop
cwtl
add
or
dec
xor
xor
in
xchg
loope
bsr
mov
out
add
ss
add
cmpsb
sub
imul
scas
mov
xor
in
mov
push
out
pusha
push
loopne
dec
add
cmp
mov
add
stos
mov
call
or
mov
and
iret
ss
nop
test
orb
clc
insb
imul
inc
aaa
je
mov
mov
aam
data16
pop
mov
mov
cld
movsb
add
pop
jl
shl
scas
stos
add
ja
jnp
mov
cs
pop
sbb
jl
iret
or
fnstcw
mov
push
divb
add
jmp
mov
lret
lock
aad
add
jl
adc
mov
ret
mov
xchg
push
add
xchg
and
add
addb
rolb
nop
and
jmp
insl
mov
inc
mov
clc
mov
divb
or
je
cltd
lods
and
adc
adc
jne
cmc
mov
sbb
add
das
rcll
nop
pop
dec
sbb
in
in
xchg
ss
dec
lds
mov
fcomps
pop
aam
dec
fsubl
mov
mov
cmp
push
jnp
inc
adc
cwtl
sub
xor
cmp
sbb
loop
dec
adc
aaa
jle
cmp
daa
sub
out
push
fildll
lret
popa
xchg
mov
jecxz
add
adc
rcl
scas
shlb
adc
add
mov
add
cmpb
mov
cmp
xchg
sbbl
xor
and
add
and
add
fwait
add
aad
js
sbb
xorb
add
or
sub
add
shlb
enter
pusha
mov
call
imul
movsl
sbbb
loop
push
inc
mov
push
pusha
clc
cmp
xor
and
cmp
cs
es
repnz
pushf
inc
jb
add
push
sub
clc
ss
or
loopne
add
xor
das
mov
call
push
xchg
mov
js
nop
or
jp
dec
sahf
inc
add
jno
xchg
addl
popa
test
divl
movsb
sub
pop
xor
enter
cmp
add
xlat
xor
sub
inc
mov
add
jecxz
inc
stos
jo
jle
rdmsr
test
add
icebp
cmp
add
mov
adc
mov
push
ja
add
add
xchg
pop
dec
add
cmp
sbb
sub
sub
int3
xchg
cmp
movsb
xchg
out
add
and
mov
call
jnp
cmp
js
or
popa
push
jns
add
mov
das
stc
shlb
fwait
adc
mov
cmp
loope
jbe
push
jo
and
out
fildll
ds
add
into
inc
iret
pop
inc
insb
push
mov
inc
push
mov
outsl
add
rclb
jbe
push
push
xlat
stc
jnp
or
push
push
mov
sub
pop
sub
pop
pop
sub
jmp
js
add
push
bound
outsb
imul
icebp
mov
cli
or
xchg
add
pop
mov
xor
fucomp
in
cwtl
add
push
addr16
sti
pop
jmp
xchg
pushf
xor
xor
movsl
add
push
iret
sub
out
or
sahf
test
and
mov
loop
into
frstor
add
mov
push
repnz
pop
pop
dec
stc
movsb
sti
loopne
dec
jge
pop
shrb
inc
inc
cwtl
push
sub
stos
mov
cld
roll
mov
adc
dec
lret
addb
test
ficoms
jne
xor
addl
inc
lds
into
js
pop
and
and
mov
inc
fsts
lahf
dec
lods
ret
add
push
mov
xlat
into
lea
lret
mov
cwtl
push
jg
add
jg
adc
lret
jb
or
xor
lcall
jnp
xchg
jle
add
mov
adc
cld
push
loop
notl
xchg
popa
stc
add
add
stos
xor
cmpsb
inc
std
nop
aam
sbb
sub
push
mov
jp
pop
cmp
and
into
mov
aas
push
sbbb
aas
mov
outsb
add
pushf
dec
lret
cmc
cmp
push
test
hlt
push
enter
dec
xor
add
push
or
cld
cwtl
aad
fstl
nop
int
adc
outsb
fs
cmp
and
out
inc
leave
nop
pusha
dec
sub
js
add
sbb
add
adc
daa
add
lods
jo
or
pop
test
push
lea
xor
verw
cmpl
mov
mov
sbb
jnp
sub
test
and
inc
jp
add
mov
ja
mov
add
out
cmc
mov
and
rolb
add
bound
std
sarb
add
je
fnsave
cs
dec
lods
lcall
xor
adc
jns
add
pop
cs
xchg
ja
push
jno
dec
les
mov
gs
and
dec
lods
fs
inc
push
add
xchg
scas
push
push
lods
sub
add
lea
sti
dec
loope
loopne
lock
into
adc
cmp
and
add
shll
and
sbbl
xor
inc
inc
mov
inc
and
push
fldl
inc
scas
add
adc
xorl
or
cmc
inc
and
jae
adc
aas
adc
mov
mov
inc
adc
adc
mov
nop
push
loop
mov
xor
xchg
push
loope
lea
add
xchg
mov
or
cmp
fdivrp
roll
jl
push
xchg
repnz
out
icebp
push
cltd
or
jbe
or
inc
faddl
and
inc
mov
sti
and
out
and
and
add
aaa
outsb
popa
add
popf
jb
shr
mov
adc
pop
hlt
cltd
nop
mov
push
jb
movsl
add
adc
xor
mov
inc
cmp
fmull
add
add
add
sub
or
xchg
daa
add
mov
sub
add
sbb
popa
rol
jno
dec
jp
or
cmp
cli
add
idivb
rorb
out
call
pop
mov
dec
mov
sti
fcompl
sub
rol
push
adc
adc
lcall
xor
jg
addr16
aaa
sahf
cwtl
add
fistl
pushf
test
lods
mov
add
push
jmp
inc
and
stos
and
mov
dec
jp
add
mov
adc
out
fiaddl
repnz
inc
movq
cmp
pop
xchg
add
pop
sahf
dec
js
insl
stos
add
mov
push
jp,pn
or
push
into
loop
jb
sar
sbb
pop
add
ret
xchg
popl
push
push
rcrl
gs
jmp
lods
dec
in
rcrl
or
pop
jns
add
xor
orl
adc
test
push
mov
add
xor
shl
icebp
jae
push
jp
mov
out
jb
cmp
lahf
lea
loopne
mov
jno
aaa
imul
sub
push
mov
cmc
outsl
push
adc
inc
ds
out
dec
movsl
mov
mov
mov
jle
xchg
xchg
sub
aad
inc
push
movsl
push
inc
lret
aas
cmp
bound
push
adc
sbb
add
sub
jno
add
jmp
pop
addr16
arpl
stos
add
lahf
add
push
jo
clc
out
add
mov
outsl
mov
lock
addb
ja
add
add
les
loopne
loop
sbb
stos
aam
ljmp
inc
shll
push
mov
cmp
incl
ja
loop
cmp
add
imul
and
xchg
xor
sub
hlt
mov
add
rcrl
mov
test
add
bound
mov
aad
daa
mull
push
sub
adc
dec
inc
loop
mov
jle
lds
sub
and
adc
pop
je
insb
mov
fndisi(8087
enter
add
repz
jne
pusha
imull
add
pop
inc
test
ja
mov
add
shlb
jns
mov
add
cmp
iret
sub
jmp
in
in
mov
xchg
push
pop
sbb
pop
cwtl
adc
mov
inc
add
ss
jns
pop
pushl
andl
sub
pop
shlb
and
pushf
pop
sbb
in
aas
xor
fdivp
mov
adc
outsl
add
mov
imul
add
stos
and
dec
or
test
sub
add
lods
push
roll
adc
mov
mov
es
or
or
jg
jnp
add
mov
jb
or
adc
sti
pusha
ja
jp
fdivl
dec
fmuls
shrl
add
cmpb
testl
sbbb
loopne
add
sub
ret
fdivl
mov
jne
add
int3
add
inc
adc
imul
sbb
push
pop
cmpl
dec
or
xor
jb
add
dec
pusha
add
or
cmp
mov
mov
out
push
jo
cmp
push
adc
popf
mul
lds
test
in
pushf
cmp
jle
push
out
fsubrs
sbb
test
inc
cmp
lret
mov
repnz
push
leave
or
aam
xchg
adc
mov
pop
sub
push
sub
and
icebp
call
sbb
sbb
and
mov
mov
scas
add
pop
test
add
lods
cmpsl
ss
fdivrl
add
inc
pop
loop
int
push
inc
lds
movsl
inc
ret
imul
or
mov
mov
popa
adc
pushf
add
push
orb
xor
test
xchg
cld
and
add
xor
cmc
dec
adc
add
inc
pop
inc
push
nop
add
loopne
push
add
push
cld
in
bound
stos
adc
sub
cmpsl
adc
insl
add
decl
jo
repz
or
insb
test
fisubrl
jae
mov
cmp
push
or
rolb
add
enter
call
mov
insb
mov
mov
and
shl
sbb
jo
xor
jl
jge
ljmp
sbbb
lret
pop
mov
loope
mov
out
lret
jmp
dec
dec
fwait
push
mov
mov
or
pop
pop
js
les
aad
pop
daa
jl
pop
lret
and
stos
cwtl
enter
push
push
addr16
jmp
ret
inc
mov
orb
adc
aad
movsb
adc
sbb
push
andb
or
pop
push
stos
push
add
sub
push
outsl
leave
xor
cmc
push
movsl
mov
add
js
inc
sbbl
outsl
lock
je
or
and
or
sbb
jle
jl
add
in
sahf
rolb
mov
sub
addb
ret
arpl
or
insb
fs
mov
lods
insl
push
cmp
adc
in
mov
shrl
xchg
mov
jne
push
int3
insl
xchg
lods
enter
out
fbstp
mov
push
xchg
xor
ret
out
push
movsl
sub
rorl
or
add
clc
mov
inc
add
jecxz
sarb
je
imul
xchg
popf
xchg
sti
pushf
mov
jnp
add
sub
xlat
divl
loop
add
pop
inc
or
adc
pop
int
pusha
jae
pop
add
push
lret
pop
addr16
adc
insb
mov
add
pop
pop
aam
dec
ljmp
adc
and
adcl
xor
imul
and
jbe
add
push
ljmp
mov
in
enter
lds
xchg
shrl
cli
cld
sbb
jmp
mov
add
std
or
pop
or
cmpsb
push
faddl
mov
inc
add
jl
aam
cltd
dec
and
sar
ss
bound
cmpsl
adc
jl
add
cltd
dec
add
mov
add
in
and
mov
cld
cmp
xorl
pop
mov
mov
popf
cmp
lock
cs
cmp
mov
cmp
sbb
and
arpl
or
sbb
cmp
xchg
sub
sub
mov
loop
cli
mov
xchg
add
xchg
jb
ds
sar
mov
add
sahf
mov
imul
call
clc
std
push
mov
pusha
mov
push
mov
cli
lcall
popa
sub
pusha
and
gs
mov
mov
add
sub
in
sbb
fcoml
pop
iret
mov
inc
and
jo
daa
mov
lods
add
movsb
aam
sti
add
mov
ret
inc
scas
out
fsubl
dec
jg
sbb
cmpsl
push
sahf
cltd
sub
loop
pop
test
pop
inc
pop
out
adc
adc
decl
push
inc
xchg
out
or
adc
dec
es
pinsrw
dec
jb
push
pop
add
mov
rorl
add
mov
cmp
imul
daa
ljmp
push
andl
push
push
insb
cmp
xchg
test
dec
in
and
add
cmp
pop
popf
cmp
or
add
cmpsl
adc
xchg
mov
cs
ljmp
decl
loopne
clc
add
push
mov
fsubrp
dec
mov
pushf
imul
call
outsl
popa
jo
mov
push
faddl
nop
dec
add
imul
in
orb
push
popa
insl
xchg
or
sbb
jns
and
mov
pushf
dec
sub
mov
ret
add
pop
push
or
pusha
push
xchg
jo
add
mov
jmp
and
rcr
pop
xor
and
faddl
mov
add
filds
shrl
xbegin
xor
cmpl
mov
xchg
push
add
pop
jge
xor
sub
in
lds
pusha
shrl
decl
xor
movsl
pusha
lcall
movb
arpl
lock
std
in
jl
pop
call
icebp
gs
xor
jmp
dec
test
ljmp
imull
test
sbb
add
fdivrs
in
mov
fs
iret
pop
nop
and
cltd
mov
cmova
aad
inc
daa
xor
into
cmp
call
rorb
aad
fadd
add
jg
xor
add
or
sub
push
push
imul
sahf
mov
scas
ret
cli
xor
stos
insl
push
mov
shrl
lods
dec
jl
pop
cmp
cmpb
mov
rcrb
xor
sti
cmp
pop
mov
loopne
sub
jno
sbb
add
insb
arpl
add
sbb
fimull
jecxz
push
and
pop
fistpl
movsb
add
adc
cmpsl
adc
add
bound
xchg
jge
aad
popa
or
adc
nop
leave
mov
cmpsb
mov
dec
cld
adc
adc
cmp
push
add
dec
pusha
add
lret
dec
fidivrl
and
add
pop
rorl
add
addr16
ficoml
push
jno
cmc
mov
jne
sbb
in
add
es
add
or
pop
mov
lock
sti
adc
lcall
add
mov
xor
out
xchg
pop
mov
sub
xchg
fcmovbe
rorb
data16
xchg
push
sub
adc
mov
dec
addb
scas
pusha
xchg
addl
pushf
inc
add
push
bound
cmpsl
pop
push
std
out
enter
add
add
je
push
xchg
pop
lods
loopne
frstor
mov
jge
jl
push
lock
push
add
rorb
and
and
xchg
aaa
pusha
adc
jbe
pop
dec
push
jge
addl
mov
and
stos
xor
xor
dec
or
cmc
inc
sub
dec
loopne
das
test
push
int3
or
cmp
sub
scas
fimull
and
cmp
shlb
roll
mov
jg
fwait
add
lods
fnstenv
push
mov
add
xchg
or
mov
cmp
mov
call
scas
in
add
andl
aam
xchg
adc
or
imul
add
push
mov
xchg
sbb
mov
xchg
fists
push
hlt
xchg
mov
or
pop
sbb
fildll
xchg
nop
mov
fwait
push
dec
outsb
add
inc
test
add
add
and
push
mov
cmp
dec
jo
insl
add
push
loope
arpl
add
jbe
aam
sbb
push
hlt
in
mov
add
jg
inc
add
mov
gs
ss
push
call
cmp
shrb
mov
scas
add
sub
add
and
pop
fdivrl
sahf
add
mov
bound
add
mov
lret
mov
add
add
jae
pop
mov
addr16
adc
scas
inc
or
pop
lcall
and
mov
xor
faddl
js
sti
xor
pop
add
outsl
test
mov
fwait
idivb
add
sbb
test
aam
xchg
jo
jge
lret
cmpsb
inc
add
loope
mov
add
pop
add
jle
push
jo
scas
add
movsb
or
mov
inc
mov
inc
cli
sbb
mov
stc
push
xor
push
cmpsb
hlt
fldenv
sbb
mov
orb
cmp
sub
loop
dec
cmp
mov
sub
dec
add
fwait
inc
push
les
mov
adc
xchg
jb
outsl
add
cld
pop
adcb
fs
mov
mov
dec
push
jbe
add
sub
orl
sti
add
ljmp
fwait
rolb
cmpsb
xor
sub
adc
jne
rcrb
enter
and
inc
mov
or
inc
test
inc
mov
xor
outsl
push
push
jb
add
shrb
dec
pop
sbb
and
mov
and
add
sbb
xchg
push
repz
fs
nop
sub
push
int
jge
push
cvtps2pd
push
shlb
mov
sbb
add
pop
adc
aas
mov
popl
or
add
xchg
jmp
lcall
or
inc
mov
data16
addb
jge
lret
and
adc
pop
pusha
pop
push
adc
and
sbb
and
mov
mov
in
add
rcll
lods
repz
mov
inc
add
push
xchg
add
adc
or
loop
and
stc
rcrb
into
sbb
ss
clc
mov
push
orb
loope
sbb
jns
and
in
mov
jp
mov
and
sbb
jo
pop
xor
out
movl
aaa
sub
jecxz
add
pop
enter
mov
sbb
rorl
popa
add
push
sub
stos
xchg
xlat
fiaddl
jns
add
loope
popa
jg
enter
shrb
popa
and
or
les
fstps
xchg
inc
loop
inc
je
add
mov
adc
rolb
cmp
mov
cmpsl
mov
aas
push
jge
cmp
inc
fildll
les
xchg
cli
or
test
push
add
fs
or
and
xor
ljmp
sub
lock
mov
lock
push
fimuls
pushl
adc
call
lea
xchg
mov
mov
mov
cmp
lret
iret
xchg
dec
outsb
jg
clc
mov
xchg
sbb
into
inc
rcl
mov
arpl
sub
out
mov
and
out
jno
sub
fs
sbb
sarl
movsb
or
jae
in
mov
xchg
sub
insb
test
xchg
roll
in
jp
je
add
or
pop
and
add
aas
add
mov
and
and
or
add
iret
jp
stc
add
lret
add
mov
stos
xorl
pusha
inc
dec
mov
adc
inc
mov
add
gs
inc
sarb
push
add
scas
cld
mov
or
mov
lock
jmp
add
inc
dec
ret
scas
dec
or
dec
enter
bound
dec
adc
cmpsl
adc
add
jle
push
mov
sbb
jae
add
out
pusha
push
mov
xor
dec
jmp
and
mov
fisttps
inc
lock
mov
test
pop
or
add
pop
call
add
sbb
pop
xor
cmc
mov
out
cmpsb
add
mov
xor
add
incl
fnstenv
xchg
push
arpl
mov
xor
pop
scas
inc
andb
shlb
pop
xchg
clc
add
rorb
lock
je
shrl
add
mov
cs
pop
or
add
insl
xchg
push
xor
dec
insb
dec
xacquire
call
add
addr16
jp
orb
out
mov
push
cmp
data16
xor
pop
cmpb
out
cmp
aad
jo
out
leave
int3
xchg
xor
insb
push
mov
dec
addb
mov
add
mov
or
add
mov
xchg
jnp
dec
add
aaa
push
or
xchg
andb
pop
inc
cmp
add
pop
adc
push
jge
or
js
aas
add
dec
lods
lock
sarb
add
mov
push
push
scas
sbb
lea
imul
mull
mov
dec
xchg
adc
arpl
or
stc
xorl
inc
mov
int3
leave
lea
mov
inc
nop
and
mov
test
into
xor
insl
movsb
sarl
stc
jnp
in
stos
ss
imul
aad
add
or
inc
cltd
sbb
mov
sbb
pop
ljmp
lds
cmp
in
add
pcmpeqw
add
je
in
jmp
hlt
icebp
push
lahf
push
or
lods
or
jno
push
push
push
xchg
mov
test
pop
aam
or
jae
sarb
aad
add
sbb
mov
dec
and
sbb
pop
aas
and
call
and
sbb
add
test
fcompl
sub
xchg
push
je
pop
add
or
mov
dec
lret
pop
testl
push
push
or
dec
add
pop
in
sub
dec
cmp
stc
and
cmp
cld
dec
cmp
repz
add
lock
jp
cmp
adc
pop
mov
je
repnz
xchg
add
shrb
dec
in
xor
pusha
js
js
jmp
ljmp
push
and
jl,pn
inc
jno
jle
add
pop
rcl
cmp
movsb
cmp
add
mov
sub
orb
add
stos
mov
pusha
dec
add
add
cmpsl
and
lock
mov
mov
stc
add
lods
pushl
fldcw
aad
in
sti
std
mov
clc
popf
nop
mov
daa
fcompl
mov
out
pop
imul
cmp
jo
push
add
scas
repz
pop
inc
add
pop
and
xchg
hlt
cmp
xlat
je
add
hlt
mov
andl
pushf
or
add
popf
cs
adc
js
add
pop
lock
insl
imul
pusha
mov
jnp
and
cltd
or
mov
jne
xor
rcll
orb
es
into
flds
add
adc
hlt
faddl
out
bound
scas
xchg
aad
push
inc
mov
mov
in
out
or
xchg
sbb
jp
iret
dec
sub
addl
out
mov
call
repnz
xchg
cwtl
or
lods
mov
in
out
add
aas
jo
hlt
insb
cmp
mov
hlt
roll
idivl
orb
stos
lret
in
stc
mov
lcall
add
movl
es
and
cmc
hlt
mov
enter
add
sbb
ds
adc
mov
add
mov
lods
add
ret
add
insb
popa
aad
out
or
inc
and
aaa
lret
sbb
stos
xor
daa
add
sub
insl
idivb
ja,pn
movsl
mov
out
sbb
aam
push
rclb
cs
fstp
pushf
fldt
cwtl
orb
add
mov
pusha
push
icebp
int
sarb
pop
sub
sahf
sbbb
mov
add
sub
jge
xchg
dec
loope
jl
add
push
fisttpll
push
add
faddl
testl
push
cmc
lock
adc
sbb
inc
flds
das
push
add
adc
add
xorb
mov
mov
add
jo
ret
add
jbe
call
cmc
add
mov
pop
pop
and
push
push
push
sub
cli
or
cmp
ficompl
or
mov
dec
push
mov
es
add
sub
xor
push
imul
jb
mov
ja
je
subb
inc
shrl
movsb
mov
push
ja
rcrl
mov
stos
imul
xor
das
sbb
or
cld
push
and
push
mov
lods
inc
adc
ss
or
out
clc
cld
mov
mov
mov
mov
cwtl
add
testl
mov
pop
in
les
jno
sub
jmp
sub
outsb
mov
adc
test
dec
push
add
sbb
push
mov
cwtl
inc
sbb
mov
pop
addr16
test
cwtl
std
add
out
movsl
pushf
mov
sbb
jle
not
cltd
rcrb
ret
test
lock
fsubl
in
add
jns
out
leave
lods
mov
or
ss
icebp
adc
add
pop
xor
push
loope
mov
pop
nop
adc
rorb
lahf
fdivrl
sub
add
shlb
add
jb
pusha
push
pop
loop
call
lods
fwait
mov
dec
idiv
in
mov
xlat
and
ss
push
inc
adc
ja
call
mov
imul
psubsb
cmp
add
daa
leave
xor
ljmp
cmp
adc
jo
mov
leave
out
fiaddl
ja,pt
inc
movsl
lret
add
xchg
cmp
jle
mov
andb
pop
mov
lock
pop
lahf
sbb
jb
daa
push
insl
mov
pop
lods
xchg
add
sbb
jno
push
dec
push
mov
insl
xor
push
ds
dec
cmpsl
idiv
jns
add
test
add
mov
aaa
loop
cmp
add
iret
mov
pop
adc
packssdw
inc
cwtl
add
rorb
aas
out
pusha
jecxz
lea
and
dec
push
mov
jg
and
jo
mov
sbb
cld
sbb
lods
mov
test
pop
out
add
pop
addr16
sahf
daa
push
push
pusha
add
int
sbb
lcall
insl
and
pop
shll
push
aad
adcb
add
hlt
and
adc
xchg
mov
jmp
fwait
mov
scas
daa
add
ret
push
outsl
mov
jne
adc
inc
sub
push
xchg
int3
add
leave
mov
in
test
mov
add
in
pushf
out
push
pop
stc
pop
int3
dec
out
ror
daa
ror
mov
add
cmc
pop
cwtl
addb
add
fsts
jl
out
testb
jmp
mov
lods
stos
ficomps
insl
test
dec
jge
stc
push
dec
mov
in
add
inc
stos
pop
mov
sbb
jmp
push
ret
aas
lods
xchg
add
jp
adc
mov
arpl
sub
aaa
lods
into
add
adc
fst
pop
pop
push
pop
outsl
orb
lret
dec
adc
adc
ror
repnz
mov
or
repz
popa
les
cmp
pop
bound
sbb
out
imul
adc
test
cmp
mov
dec
fdivp
dec
scas
pop
test
scas
insb
popa
test
cmp
add
adc
test
sbbb
lret
jns
add
imul
add
or
int3
imul
or
ror
xchg
int
loop
pop
clc
inc
or
jle
sbb
or
daa
add
cmp
lods
cmp
or
add
mov
adc
xchg
call
nop
and
mov
cmp
add
xchg
repnz
or
push
adcb
mov
ds
jl
mov
add
ss
scas
shlb
daa
or
popl
arpl
jl
mov
in
push
pop
sbb
push
dec
int3
ss
dec
mov
sbb
sarl
add
pop
or
loope
jnp
add
mulb
testl
loopne
cmp
and
cmp
cmp
inc
js
push
aam
out
sbb
adc
mov
cli
fwait
cmp
xchg
lock
mov
dec
xorb
aam
out
cld
call
add
pop
add
jge
cmpsb
xorl
mov
add
or
inc
int3
repnz
js
xor
out
pop
fcoms
sbb
xchg
lock
negb
and
sbb
loopne
cmpsb
fisubrl
divl
mov
call
and
stos
lock
int
pushf
movsl
aad
mov
in
lods
sahf
mov
push
sbbl
clc
cmp
lea
sub
sub
mov
mov
add
jbe
xor
imul
sbb
adc
lahf
addr16
repnz
es
test
aam
sti
mov
mov
jo
pop
nop
lret
shl
cltd
add
test
call
add
ja
dec
scas
sarb
in
hlt
lret
lahf
gs
dec
mov
shlb
jo
add
mov
nop
xchg
add
cmc
daa
ljmp
pop
mov
pop
mov
orb
inc
outsl
movhlps
add
or
mov
outsl
lods
push
mov
cld
out
mov
pop
pusha
xchg
repz
inc
adc
pop
add
xor
out
ds
mov
add
pop
jbe
pop
sub
int
push
pop
sbb
xchg
xchg
push
mov
sub
jle
add
sbb
out
mulb
out
testl
xlat
pop
cmp
xchg
cmp
xchg
nop
imul
xor
ds
xchg
outsb
sub
mov
orb
and
pop
jle
aas
ret
rclb
push
add
jl
fs
arpl
loopne
test
pusha
movsb
sahf
dec
jo
push
push
shlb
xrelease
pop
and
adc
inc
mov
inc
add
inc
mov
test
and
xchg
inc
mov
cmp
adc
mov
or
popf
mov
xor
jo
mov
add
in
xor
xchg
fcoml
movsb
adc
push
or
mov
cld
test
or
jmp
push
xchg
xchg
adc
jge
xor
push
and
adc
jge
or
add
lock
fimull
push
push
and
mov
lock
insb
bound
mov
cmpsl
or
push
jmp
sbb
add
enter
sub
iret
lods
movsl
jle
bnd
jg
add
lds
loop
subb
add
jnp
inc
inc
add
cld
loope
lock
sbb
popa
sahf
inc
loopne
add
rcrl
add
jo
std
xor
jecxz
int
dec
jmp
call
outsb
push
mov
ret
and
add
adc
and
add
aam
sti
add
xchg
out
sbb
flds
adc
aaa
pop
je
add
mov
out
incb
leave
or
es
nop
rolb
mov
xchg
repnz
out
jno
icebp
xchg
dec
jle
jno
add
es
pop
sbb
add
ret
mov
adc
cwtl
loope
push
adc
jnp
mov
sbb
adc
add
xchg
cmp
pusha
iret
add
js
je
push
sbb
fistps
jo
scas
and
adc
scas
adc
or
mov
mov
movsb
dec
and
nop
or
scas
pusha
mov
sbb
cmp
dec
es
push
or
dec
jecxz
adc
out
fbstp
add
xchg
ret
or
push
rclb
ret
mov
cli
and
test
dec
rclb
sbb
ja
bound
sub
int3
add
imul
mov
fwait
aam
jo
cmc
sbb
xor
stc
test
dec
fsubrs
out
pusha
pop
js
ds
dec
dec
push
cmp
scas
xchg
or
mov
add
fisttpl
mov
mov
push
lods
inc
jo
add
ds
push
nop
inc
jmp
pusha
add
cmpl
dec
mov
dec
xor
mov
and
enter
add
lock
in
std
jmp
pop
mov
xchg
das
add
mov
push
jnp
mov
and
lahf
repz
add
xor
rolb
xchg
leave
lcall
in
mov
mov
call
adc
repz
aas
mov
push
add
aam
cmpsb
xchg
jae
shll
mov
fiaddl
std
mov
imul
push
pusha
mov
loope
cld
stos
add
test
sbbb
daa
sub
sbb
adc
cmp
sbb
inc
fdivrl
jb
call
sarl
mov
incl
fstl
mov
shrd
adc
add
loop
repz
push
or
pop
add
pop
cltd
cmp
sub
jne
add
xor
addr16
cmp
jae
shll
lcall
add
or
sub
mov
add
lods
jnp
add
int
xchg
cmp
xchg
add
inc
adc
loopne
xlat
stos
adc
in
jbe
fmull
insl
inc
jmp
xchg
inc
push
iret
pusha
mov
addl
fadds
outsb
mov
or
push
out
pushf
dec
sbbl
push
jb
test
rcrb
out
fdivl
inc
jle
lock
loopne
adc
nop
mov
add
mov
cmp
push
pop
inc
xchg
dec
sub
fadds
lea
xor
aaa
sbb
mov
call
roll
rolb
fistpll
out
dec
push
push
adc
inc
add
jmp
fmul
movsb
or
pop
out
push
in
add
pushf
push
and
inc
fwait
pop
cmp
pop
int3
lock
xor
addr16
mov
cmc
xchg
shlb
movsl
div
shll
cmp
outsb
xor
xor
adc
fwait
out
loopne
test
pop
and
mov
dec
inc
in
imul
cmp
dec
das
into
push
outsb
cwtl
pop
mov
ret
push
stc
in
adc
ljmp
test
mov
xchg
mov
pop
sub
and
insb
inc
push
jns
inc
sbb
fimull
push
add
ljmp
xchg
push
add
xchg
dec
das
xchg
enter
adc
push
xor
test
nop
pop
cmp
fcom
lods
mov
add
cmp
and
aam
sbb
or
outsb
push
rcr
cs
xor
jmp
cmc
and
cmpsb
inc
outsb
push
or
jne
add
mov
push
jae
push
add
add
insl
mov
loope
push
sub
xchg
cmpsl
xchg
pop
sbb
movsb
je
add
sub
xor
jg
insb
shr
or
dec
outsl
pusha
mov
out
adc
jno
pop
xor
or
mov
adcb
push
or
je
inc
xor
aad
ljmp
lahf
add
stos
in
add
and
inc
pusha
pop
sbb
jl
add
loope
mov
push
repz
inc
xor
popa
flds
xchg
stc
mov
jb
pop
iret
add
aaa
jecxz
lods
clc
lods
sub
loope
lcall
add
pop
add
inc
xchg
sahf
test
dec
leave
inc
and
jp
pushf
icebp
pop
test
jle
aad
cmpsl
push
and
daa
add
sbb
out
icebp
add
nop
aam
cltd
sub
jne
mov
mov
lods
add
or
push
loop
cwtl
sarb
fmull
and
xchg
or
xchg
cmp
mov
mov
xor
add
aad
emms
jno
orl
in
add
daa
loopne
into
clc
or
push
notl
xchg
sub
sbb
les
lcall
xor
dec
add
pop
ret
pushf
add
into
xor
subb
dec
lods
jecxz
add
jle
mov
aam
inc
fs
pushf
and
lods
addl
shrb
lret
enter
add
lock
or
mov
ljmp
fnstcw
icebp
cmp
sub
adc
xorl
out
add
add
add
sub
aaa
add
inc
push
jb
adc
push
shll
call
sub
push
jnp
int
inc
xchg
mov
fcoml
popf
sbb
hlt
movb
rolb
sbb
jns
add
fadds
pusha
and
add
sbb
xchg
xor
jg
idivl
loope
ss
ljmp
mov
imul
into
rcrl
add
ret
ret
add
xchg
jae
je
mov
sub
push
mov
add
ja
aas
adc
loopne
or
mov
loop
pop
testb
into
add
xchg
jecxz
and
mov
adc
test
lcall
jbe
mov
push
or
push
rolb
shlb
mov
push
jo
and
sub
xor
pop
jle
add
inc
sub
dec
add
push
mov
ja
inc
mov
aam
leave
pop
mov
nop
or
test
out
inc
jnp
push
cmp
mul
jg
shrd
aaa
aas
cmp
imul
fcomp
pop
outsb
cltd
sarl
out
mov
cmp
or
add
adc
add
xchg
lods
pop
xchg
stos
cmpsl
sub
lods
push
mov
sbb
dec
pop
jle
imul
cmovl
int
addr16
pop
jo
int3
inc
mov
push
cmpsb
add
sub
add
cmp
add
cmp
add
or
cmp
cmp
and
add
insb
lahf
adc
nop
add
xchg
jo
mov
sti
push
lock
insb
cld
ret
cwtl
pop
add
js
lea
adc
push
test
and
pop
clc
out
sub
std
mov
mov
push
add
xlat
add
cltd
repnz
jb,pt
leave
enter
add
sbb
roll
jge
pop
scas
mov
mov
in
or
mov
fmuls
cwtl
add
mov
or
add
mov
roll
in
add
out
add
aaa
loopne
sub
sub
xchg
movsb
orb
add
mov
mov
add
add
inc
add
jae
out
fldl
add
and
ds
cmpsl
outsl
lret
lods
mov
xchg
stos
ja
addr16
lods
faddl
jno
cmpsb
add
fs
pop
add
leave
cmpsl
adc
jne
pop
add
or
xor
cs
mov
out
push
popa
sarl
insl
jo
lret
add
clc
sbb
ret
xchg
add
cmc
mov
add
sub
mov
sbb
es
or
add
lock
in
xchg
add
dec
les
push
mov
inc
jl
jo
xlat
add
mov
add
rorb
addl
insb
lock
pop
dec
cmp
mov
fucomp
in
mov
dec
push
or
jg
int
xchg
sub
xorl
pushf
fimull
roll
scas
cli
and
shlb
lock
or
mov
add
adcl
mov
push
daa
and
sub
in
dec
fisttpl
add
cmp
inc
adc
jg
or
add
jg
cs
xor
cmpsb
mov
add
in
jbe
adc
push
js
loope
jo
xor
arpl
adc
ret
test
add
xchg
cmp
sbb
sbb
lret
mov
xor
mov
sbb
push
add
cmpsl
fsubs
ds
push
mov
mov
add
int3
add
lock
or
push
out
mov
sub
dec
inc
xchg
push
pop
cmp
iret
adc
pop
jo
pop
pop
lea
mov
xor
roll
lods
filds
es
stc
jno
outsl
pushf
hlt
add
cmp
inc
fdiv
push
add
mov
dec
mov
add
scas
lahf
shrl
adc
xor
lods
dec
push
pop
add
bound
fcmovnbe
into
or
jno
or
enter
xor
es
dec
fadds
loop
pushf
sub
imul
stos
cld
shlb
or
out
dec
jne
or
jnp
gs
jp
push
and
jnp
pop
dec
jbe
add
dec
and
int
mov
lcall
fidivrs
add
inc
xchg
jo
add
fadds
mov
add
xor
andb
pop
jge
add
lahf
call
add
mov
mov
jg
add
cmpsb
lret
stos
fimuls
xor
imul
add
mov
lret
aam
mov
jbe
jb
popf
xchg
add
or
daa
add
test
jnp
clc
scas
mov
or
pop
bndldx
push
add
in
ret
imul
clc
icebp
jae
loopne
xchg
mov
pop
pop
dec
test
pop
loopne
movb
add
xchg
add
outsb
pushf
add
iret
push
dec
divl
in
in
into
sub
mov
mov
add
mov
mov
lahf
test
adc
movsb
jp
pop
pop
das
cmp
lahf
lcall
and
cli
ret
inc
xchg
cs
cmp
addr16
cmp
or
add
xchg
jmp
ret
push
mov
add
dec
jge
add
sub
jge
loope
lock
add
popa
sbb
cmp
xchg
sub
xchg
add
icebp
or
gs
test
mov
xchg
int3
xor
add
sbb
mov
std
roll
add
rcl
mov
add
xlat
fdivrl
lret
aad
in
pop
mov
inc
lds
push
icebp
adc
mov
add
gs
out
rorb
jle
mov
xchg
mov
dec
pushf
nop
add
cmp
test
jae
mov
jb
jno
jns
add
scas
mov
jle
je
imul
xchg
das
test
iret
punpcklbw
dec
push
loop
loope
inc
adc
or
push
aad
add
sbb
sti
cwtl
push
add
ja
xor
clc
or
inc
mov
and
add
out
loope
add
push
sahf
pop
pop
push
lcall
mov
clc
add
xchg
movsl
push
xchg
jle
add
cmp
and
in
or
test
add
loopne
lcall
fstpl
adc
cmpl
add
fwait
mov
add
rorb
xchg
outsb
add
fbstp
stos
mov
arpl
loop
fnstsw
add
mov
add
mov
push
dec
hlt
or
popf
insb
imul
sub
add
loop
mov
jp
push
ds
mov
pop
insl
loopne
out
mov
in
add
push
inc
mov
push
push
outsb
xchg
pop
mov
add
leave
sahf
shll
scas
mov
insb
add
enter
pop
add
inc
dec
fldcw
imul
xchg
call
in
lock
nop
adc
adc
nop
lods
adc
or
xor
outsl
mov
mov
mov
sbb
adc
imul
daa
add
mov
cmc
xchg
aam
adc
push
dec
psrad
xchg
jb
jg
mov
or
in
aad
mov
andl
jno
repnz
jl
addr16
cmp
orb
xor
scas
inc
mov
idiv
add
std
fsubp
into
xchg
enter
add
pop
xor
dec
ror
mov
sahf
cwtl
loopne
mov
imul
and
fbstp
jb
inc
faddl
sub
lods
xor
loopnew
xchg
insl
je
in
sbb
shll
xchg
fs
shlb
pop
mov
ret
and
inc
and
cmp
lahf
push
xor
fildl
xchg
pushf
pop
dec
loopne
mov
inc
in
xor
mov
cmc
adc
lods
push
mov
in
insb
add
add
stc
out
and
sub
sbb
rcl
test
sbb
add
stos
hlt
add
mov
jg
pusha
enter
addl
add
ja
stos
das
movsl
dec
xchg
add
and
cmp
inc
js
add
push
cmp
mov
btc
loop
inc
jo
adc
js
mov
ds
sbb
and
sub
incl
jo
xchg
fs
mov
sti
inc
js
xor
out
add
sbb
cld
add
pop
jg
ljmp
add
ljmp
notb
fistpll
or
pusha
cmp
add
aad
dec
sbb
sub
jge
add
stos
movsb
in
push
ret
out
sub
lods
arpl
std
cli
push
orb
movsl
add
pusha
in
and
push
insb
into
ds
sbb
or
sbb
pop
cwtl
aaa
add
popa
inc
xor
adc
pop
push
fiaddl
popf
movsb
add
add
mov
xchg
lock
mov
dec
decl
dec
outsl
push
gs
add
add
dec
add
cmpsl
lea
sbb
sbb
inc
loopne
jg
fstps
aad
cmp
and
daa
mov
add
insl
lods
int
outsl
mov
mov
enter
add
add
fwait
mov
test
mov
fildl
add
bound
xor
lcall
sub
ja
fdivr
mov
sub
pop
ja
fcoml
add
sbb
clts
fwait
ret
fisttpl
fimuls
testb
insl
dec
lret
test
add
xchg
mov
adc
push
lea
mov
pusha
int3
xchg
stos
mov
test
and
add
negl
add
mov
cmp
and
loopne
dec
add
div
sub
es
fbstp
inc
dec
sahf
add
leave
xlat
add
jp
pop
test
push
dec
aam
cmpb
and
ja
scas
cmp
xor
adc
jno
stos
push
sub
testb
cmp
das
add
push
pop
js
es
nop
shl
mov
xchg
jno
pushl
cld
adc
inc
add
cmp
test
sbb
cmpsb
inc
clc
adc
push
je
testb
jg
mov
arpl
popf
test
loopne
fucomp
adc
add
push
mov
mov
movsl
out
add
jo
and
js
add
jne
pop
inc
cmpsl
or
popf
cld
xchg
and
cmp
mov
push
lret
xchg
cmp
pop
ss
add
add
movsl
and
xlat
jecxz
int3
add
adc
add
pop
incl
lcall
mov
jno
inc
mov
call
sbb
fdivrs
shll
popl
xor
pop
lock
pop
cld
mov
xchg
ds
stos
adc
push
scas
xchg
out
pop
jns
add
repz
test
in
loopne
pop
xchg
xchg
jne
rorb
enter
std
shll
mov
cld
mov
adc
pop
xchg
jecxz
mov
and
cld
and
adc
ret
and
add
sbb
daa
fs
mov
call
cmp
xor
aas
cmp
test
sub
push
pop
clc
sbb
call
or
clc
add
lods
sub
sub
ja
repz
sahf
mov
dec
pop
jge
add
fidivrl
dec
jne
xchg
push
xchg
mov
cmp
cmp
mov
or
popf
adc
lret
fiadds
sbb
sbb
mov
or
push
dec
imul
ds
repz
xlat
inc
mov
stos
rcl
pop
incb
add
imul
test
add
xor
jnp
mov
mov
dec
adc
movb
or
roll
add
fs
pop
inc
push
sbb
je
cmpsb
add
andb
incl
or
dec
cmc
xor
js
add
dec
shrl
mov
popa
jp
sahf
sub
add
shrb
pop
mov
jle
and
mov
inc
scas
fsubr
push
xchg
imul
stos
dec
or
movsb
jb
fs
sub
cmp
mov
sbb
sarb
add
ffreep
cltd
loop
or
sahf
mov
add
adc
lahf
or
mov
data16
popa
add
dec
inc
repnz
add
mov
inc
loop
add
mov
jne
rcr
push
loope
jl
add
fiaddl
mov
jns
adc
mov
fiaddl
jb
imul
add
out
mov
repnz
ja
mov
jne
idivl
mov
pop
cmp
adc
xor
insl
repnz
mov
int
xor
sarb
sbb
mov
inc
xor
repz
cmc
dec
lret
aas
fldcw
jecxz
das
jns
aam
add
jb
jmp
and
adc
and
cs
cmp
in
cmp
cltd
sbb
jae
lock
lods
lret
adc
or
push
jg
lahf
add
outsb
and
fneni(8087
sbb
push
mov
outsl
ror
mov
in
dec
add
jbe
insl
jle
mov
movsl
add
adc
cmc
add
jno
or
add
lock
pop
add
loopne
adc
cmp
pop
dec
pop
and
add
dec
iret
inc
test
lcall
xchg
push
sbb
shll
xchg
sub
inc
es
ret
add
rcr
popa
pop
movsl
jae
sbb
cmp
inc
aad
fstpl
cmpl
xor
sbb
pop
in
cmp
mov
adcl
sti
les
pop
ds
sahf
add
clc
enter
pop
hlt
mov
popf
and
add
cltd
mov
outsb
mov
dec
mov
js
mov
sub
add
nop
lods
daa
add
push
or
mov
add
lea
popa
add
dec
jge
cmp
cmp
jnp
out
rol
lgs
loopne
mov
push
push
aam
add
adc
orl
sbb
or
jge
add
testb
dec
shll
fidivrs
push
mov
mov
jnp
xchg
pop
ja
add
cmp
inc
imul
int
scas
add
ja
rcrb
std
lock
add
sbb
pop
or
testl
sbbb
bnd
adc
and
movsl
cmp
lret
imulb
add
repz
into
add
push
cmpsl
fmul
xchg
inc
xchg
add
pop
filds
and
insl
cld
lds
loope
xchg
pop
jno
mov
addr16
jns
or
jl
mov
xchg
push
dec
cmp
push
mov
inc
add
push
sbb
fiadds
int
pop
inc
and
jno
adc
add
mov
aad
movsb
shll
fwait
lds
mov
mov
clc
add
inc
in
mov
ljmp
mov
ss
jo
loop
ljmp
pop
cmp
test
dec
out
and
mov
push
add
add
xchg
outsb
roll
mov
rcrb
dec
pop
aaa
add
stc
inc
xchg
mov
hlt
pop
sub
xchg
repz
mov
cs
add
mov
and
fiaddl
mov
pop
cmpsb
jb
jp
pop
je
add
call
fldenv
push
add
or
mov
cmp
testb
xchg
scas
fwait
pop
add
pop
mov
add
push
fdivl
jno
jmp
les
in
cmp
daa
das
jle
adc
lahf
dec
pusha
sub
cmp
jne
or
les
jg
jecxz
pushf
mov
add
ja
pop
inc
mov
inc
les
cwtl
in
or
push
sbb
in
pop
shlb
cmc
xchg
add
jae
cwtl
push
loope
add
aam
out
mov
in
mov
loop
jmp
incb
out
add
outsl
repnz
insl
std
add
orb
mov
and
mov
and
out
mov
lds
or
addr16
lcall
jb
pop
stos
faddl
sbb
add
pop
imul
add
lcall
adc
mov
inc
aam
test
sub
rclb
add
adc
push
pop
fwait
mov
popf
clc
ds
dec
scas
sub
push
int
mov
cmp
add
repnz
frstor
adc
insl
push
mov
mov
or
push
cwtl
stc
enter
jnp
push
rol
dec
add
push
dec
bound
pop
test
pop
stc
jg
mov
in
sub
cmc
clc
outsb
mov
xchg
lret
jae
dec
rolb
mov
aam
js
push
mov
add
fwait
or
mov
add
dec
sti
add
fdivp
sub
test
xchg
pop
xchg
int3
pop
arpl
and
cmp
ror
add
mov
inc
mov
loopne
add
add
inc
xchg
xchg
movsb
or
dec
jle
sub
inc
mov
pushf
or
movb
sub
add
in
mov
pop
dec
rcr
add
rcll
cmp
fs
fldt
pop
mov
adc
dec
add
outsl
test
add
idiv
shlb
xor
out
outsb
xlat
mov
movsl
jns
std
call
insl
cmpsb
lcall
jmp
aaa
push
dec
xor
sti
mov
push
arpl
pop
bound
movsb
adc
mov
add
cli
pusha
pop
xor
andb
jl
sbb
xchg
ret
leave
fdivr
cmp
sub
mov
into
movsb
jmp
std
sub
clc
fidivl
and
cmp
daa
jl
jb
or
sbb
cld
lock
mov
add
and
inc
cmpsl
imulb
addr16
push
add
aam
mov
dec
lcall
pop
aad
xchg
subb
or
addl
push
addr16
jmp
pop
adcl
sahf
je
add
mov
sar
push
out
add
dec
sub
fsubl
mov
jge
xor
or
and
pop
push
js
add
ret
out
dec
mov
add
adc
cmp
mov
iret
mov
xchg
adc
mov
call
jnp
add
cmp
inc
and
cmp
or
mov
pop
aaa
dec
movsl
adcb
cld
pop
icebp
and
mov
mov
adc
add
popa
outsl
pop
lea
mov
mov
adc
add
push
pop
jne
in
into
xchg
fsubrs
sbb
or
fsub
cwtl
outsl
shlb
sub
in
sahf
dec
pop
inc
jg
ret
scas
mov
cld
add
xchg
jmp
push
pop
std
pop
sbb
lahf
test
add
jl
leave
add
cli
adc
ficoms
and
dec
mov
call
pop
xor
mov
test
ds
mov
data16
sti
add
loope
and
cmp
je
add
lea
loopne
adc
and
out
inc
cld
jae
jnp
fs
xor
pushf
jl
push
cmp
add
dec
push
add
jne
mov
cmp
cmp
pop
insl
pushf
add
gs
mov
xor
or
scas
dec
mov
jnp
add
jle
xchg
adc
add
into
inc
add
jg
adc
or
repz
inc
add
mov
out
push
push
push
rcrb
js
pusha
xchg
adc
add
addr16
outsl
mov
mov
cmp
push
or
fwait
imul
andb
nop
add
dec
add
stc
testl
mov
aad
add
and
aas
jecxz
or
sbb
test
in
dec
pop
xchg
sbbb
cli
mov
shll
ret
mov
add
sub
rclb
add
mov
aas
fwait
push
in
add
das
mov
dec
pop
push
lds
pop
add
dec
pop
or
add
rol
lock
add
add
add
ljmp
push
push
std
lret
dec
imul
in
adc
lock
nop
or
push
xor
jp
rclb
ds
dec
inc
pop
sub
enter
push
scas
or
xchg
dec
add
cmp
inc
int
add
cmp
push
cmp
jmp
popf
sar
xchg
in
add
mov
repz
fisttpll
push
cltd
sub
mov
adc
push
loope
mov
mov
mov
shl
cs
add
rolb
mov
je
in
mov
je
cmpsl
push
add
or
mov
subl
shrl
stc
push
dec
inc
cli
adc
sbb
pushf
jl
pusha
sub
pop
mov
pop
inc
inc
jp
in
and
sbb
incl
mov
add
xor
and
jge
add
outsb
leave
xchg
add
xor
sbb
add
pmulhuw
lret
add
mov
std
add
mov
js
pusha
jl
add
add
sub
into
add
dec
addl
or
test
mov
sahf
dec
adc
mov
pop
push
or
jno
dec
xor
jge
sub
add
pop
leave
cmp
pop
jo
xchg
cmp
cmp
mov
mov
fwait
add
or
push
jl
rolb
add
push
into
dec
add
rcll
inc
xorl
movsb
push
pop
fwait
xchg
dec
jno
xchg
mov
adc
fs
sub
notl
dec
cmp
add
sbb
dec
or
arpl
jbe
mov
jo
cmp
mov
lea
pop
add
loope
jcxz
add
je
jno
cmp
icebp
faddl
outsb
adc
loop
nop
pushl
cmp
add
test
add
xor
in
pop
insb
ds
mov
stos
dec
add
sqrtps
fidivrl
add
roll
dec
or
xlat
enter
adc
dec
dec
add
xorl
jmp
loope
push
sti
shrb
fwait
cltd
pushf
jl
add
xlat
dec
add
sbb
into
dec
int3
roll
shrb
pop
cwtl
mov
cmp
fwait
gs
pop
or
add
sahf
cltd
add
push
push
icebp
or
mov
cmp
and
sub
mov
add
adc
pop
mov
es
pop
pop
ja
cld
inc
mov
aaa
js
imulb
add
test
fsubp
sbb
fwait
rcrb
adc
sbb
push
aaa
lret
add
outsb
mov
cmp
subl
push
std
je
cmp
pop
fld
adc
fs
andb
mov
int3
lock
repnz
in
xor
push
aas
and
xor
ret
cld
in
inc
daa
icebp
sbb
pop
dec
cli
jmp
daa
rorb
jg
cmp
lret
dec
add
call
lret
mov
and
ss
aad
mov
popl
add
test
or
mov
jae
sub
inc
ja
add
adc
sub
sbb
cmpsb
cwtl
imul
sub
xchg
sub
cmp
scas
adc
mov
add
push
or
add
fxch
pop
mov
or
or
add
xchg
xchg
orb
mov
jne
lret
std
xor
or
inc
scas
push
sub
lcall
lret
mov
push
add
pop
push
or
cmp
sub
fidivrl
into
addb
fbld
mov
sarb
out
ret
rorb
ja
add
pop
call
jnp
dec
in
imul
insl
fdivs
jns
add
pusha
lea
xchg
orb
lods
movsb
jge
data16
gs
add
hlt
loopne
js
cmp
pop
mov
xchg
pop
mov
mov
mov
shll
sar
and
or
dec
dec
std
pop
lahf
mov
adc
add
mov
ja
ret
andnps
adc
sbb
enter
leave
pop
stc
ret
mov
jg
dec
pusha
xor
aam
shll
mov
or
cmp
push
sbb
cmp
pusha
fdivr
xchg
adc
sub
mov
add
mov
add
negb
dec
popf
sti
inc
pop
add
add
xor
fbld
push
pop
cmpsl
cld
stc
pusha
cs
cmp
add
pop
es
jns
and
mov
add
push
rorb
dec
adc
pop
je
adc
in
inc
add
add
out
dec
mov
add
dec
lahf
pop
add
jb
inc
mov
inc
shrl
test
add
outsb
push
push
fsubrs
jae
sbb
adc
movsl
data16
dec
and
cmpsl
in
frstor
dec
pop
call
sbbb
repnz
out
or
pop
out
addb
test
ljmp
adc
pop
add
jno
inc
inc
orb
mov
scas
test
pop
jb
dec
rorb
sub
pusha
pop
or
rorb
push
inc
inc
mov
push
dec
add
xchg
jmp
add
test
sbb
mov
mov
inc
lcall
xlat
push
cmc
out
mov
add
es
cld
push
cmp
mov
inc
in
add
int3
and
pusha
jecxz
mov
loopne
add
addr16
nop
roll
into
push
pop
adc
jbe
jge
add
add
sarl
addr16
loope
dec
aam
adc
mov
or
cmpsl
add
or
mov
in
out
shrb
out
in
mov
sub
jbe
xlat
ja
mov
aam
mov
cmpsb
out
mov
mov
enter
sub
xor
sti
push
cld
movsl
adc
sbb
call
add
cmpb
pusha
or
mov
fildl
add
and
stc
dec
mov
sub
in
movsb
mov
add
add
daa
pop
cmp
bnd
cli
js
jmp
push
mov
into
es
dec
mov
rolb
dec
and
inc
rclb
add
addr16
add
mov
add
fwait
pusha
out
add
incl
call
or
pop
cmp
sbbb
inc
cmpb
add
and
mov
xor
pusha
add
jbe
ja
cwtl
jp
add
and
sti
bound
hlt
sarl
jge
xchg
jae
add
scas
cmp
sbb
arpl
xchg
cld
push
std
mov
add
add
add
pop
mov
xchg
or
push
sbb
xor
xor
add
push
js
mov
add
in
stc
jae
loopne
outsb
leave
xor
sbb
bound
jbe
sbb
movsl
add
mov
inc
insb
or
or
scas
dec
xor
fs
roll
jno
aam
dec
lods
out
cmpsl
ljmp
mov
lods
add
inc
inc
ret
and
jno
add
arpl
sub
and
dec
add
lock
jge
add
stos
pop
jle
outsb
aaa
add
fsts
adc
cld
popf
outsl
mov
in
jge
loopne
add
lahf
jbe
adc
shll
and
in
add
stos
ret
jnp
jo
add
add
jns
rolb
dec
sub
decl
add
or
jne
jmp
sahf
adc
mov
adc
rcl
pushf
push
add
mov
inc
test
fsub
insl
add
shl
iret
add
cmp
scas
lret
cmpsb
sbb
mov
into
out
lds
mov
jae
xor
popa
push
cmpb
and
dec
sbb
pop
out
mov
fwait
imul
stos
shl
mov
push
mov
xchg
bswap
dec
lret
push
add
aaa
sbb
adc
push
jbe
mov
rorl
or
mov
jge
inc
pop
xor
loopne
daa
add
xchg
jo
inc
xchg
out
xor
sbb
and
cwtl
lcall
adc
loopne,pn
shl
cmc
pop
xor
ss
scas
loopne
call
inc
cli
out
shll
add
mov
xor
add
pop
mov
movsw
dec
add
lret
mov
pop
aas
xchg
jmp
inc
pushf
repnz
cld
and
andl
inc
xchg
sbbl
imul
push
fcoml
ljmp
add
sub
cwtl
inc
pop
mov
mov
call
add
aas
sub
add
adc
add
and
inc
aad
push
pushf
icebp
dec
sahf
dec
into
leave
pop
fisttpl
mov
adc
adc
mov
sbb
sti
sbb
fisttpl
adc
jl
loopne
test
ret
je
nop
add
cli
imull
pop
pop
or
mov
aad
push
mov
add
sub
dec
in
and
add
fwait
jno
add
aaa
push
orb
add
lret
sbb
xor
aam
push
or
mov
inc
jg
sub
scas
jno
sahf
sbb
add
dec
inc
and
clc
mov
inc
pcmpgtw
jns
add
xchg
test
dec
add
add
loopne
jg
lds
and
mov
pusha
std
add
subl
mov
pop
jbe
lods
cmp
dec
es
add
add
movsb
inc
sbb
add
std
jno
inc
xor
push
add
cltd
push
xchg
add
out
inc
and
jnp
add
dec
daa
add
gs
push
js
push
mov
scas
and
out
popa
xchg
sub
add
adc
jb
add
sub
vrcpps
push
cs
mov
add
insb
in
mov
test
mov
add
xchg
mov
jo
sub
stos
movsl
cltd
dec
lods
add
mov
cmc
fidivl
xor
bswap
int
enter
rclb
bound
mov
mul
mov
xchg
xchg
pop
push
ds
dec
mov
add
pop
lahf
sub
jnp
inc
cmp
and
xor
rolb
mov
popf
dec
int3
ror
jg
dec
stos
repnz
pushf
jmp
out
xor
add
mov
xchg
xor
aam
add
xchg
adc
add
in
add
int
js
shrb
hlt
pusha
negb
cwtl
xor
dec
xchg
ret
dec
xor
add
and
sqrtps
negb
pop
push
inc
xlat
and
pop
xor
pushf
dec
and
push
shlb
push
adc
stos
add
arpl
loopne
scas
mov
pop
mov
icebp
pusha
out
cwtl
push
pop
subb
fcomp
push
cmp
in
insb
loopne
ret
add
pop
cmp
sarb
outsl
xchg
sbb
rorb
call
add
dec
out
aas
les
push
aam
pushf
lds
mov
inc
pop
mov
inc
add
les
popaw
loopne
stos
fstpt
jne
add
sbb
shll
andnps
pop
adc
push
xor
push
sbbb
fiadds
iret
std
jne
pop
xchg
addb
push
xchg
mov
xor
push
nop
cs
int3
sbb
loopne
enter
xchg
jne
xor
mov
inc
add
add
stc
mov
xchg
add
pusha
ss
aaa
lcall
inc
jns
push
push
xchg
iret
ret
les
cmpsl
into
pop
cmpsb
fidivl
dec
cmc
add
jge
push
add
jl
and
pop
movsl
add
leave
jne
fildl
ljmp
test
sub
pop
add
fstl
xchg
or
push
pop
push
sub
mov
lock
xchg
mov
mov
jge
addb
cwtl
or
add
inc
lret
cli
adc
rorb
adc
fwait
push
or
xor
ja
fst
mov
sbb
mov
adcl
movsl
add
add
add
incb
loope
das
data16
pushf
stos
xchg
sbb
sub
insl
jg
nop
dec
lcall
loope
mov
pushf
in
add
xor
sub
nop
add
inc
and
arpl
sbb
and
lret
fnsave
cmp
dec
popa
stos
inc
mov
pop
hlt
cwtl
mov
dec
add
lret
adcl
adc
xchg
mul
js
push
push
testl
mov
push
std
repz
clc
ss
add
fidivrl
push
push
aad
add
inc
daa
jle
jmp
mov
add
lcall
jae
inc
add
jne
cltd
add
push
repz
xor
add
pop
outsb
in
inc
stos
pop
xchg
dec
outsl
in
push
xorb
clc
test
add
sub
addr16
std
cmp
arpl
xchg
sbbb
and
cmp
jge
lods
or
orb
cld
add
inc
mov
mov
jg
xor
xor
out
movsb
lods
mov
or
add
adc
lock
dec
dec
inc
sbb
mov
add
loopne
cmp
pop
adc
lret
jg
cmp
aam
or
movsl
movl
dec
mov
pop
aaa
pop
or
push
mov
xchg
mov
mov
ffreep
loope
mov
ss
mov
or
add
aas
inc
aam
mov
xor
sti
xor
sbb
cmpsb
out
pop
out
shll
sbb
and
push
xor
clc
sbb
ljmp
mov
xor
add
in
sbb
xor
add
idiv
movb
lock
sub
mov
mov
xor
shll
add
subb
inc
xchg
jnp
sarb
shll
cmp
sbb
pop
mov
add
inc
mov
jno
cs
mov
add
mov
fisttps
cmp
cmp
cmpl
pop
sarl
mov
loopne
shlb
sbb
movsl
push
hlt
dec
mov
movl
adc
fadd
in
xchg
mov
das
mov
lidtl
shlb
iret
jmp
inc
and
loopne
andl
xor
stos
or
push
mov
test
pop
pop
fwait
or
push
nop
mov
cmp
sub
ficompl
sbb
syscall
or
test
mov
inc
add
icebp
mov
add
cld
pop
xchg
and
mov
dec
xchg
pusha
jb
add
ret
call
imul
je
sbb
cmp
and
insl
add
or
xor
xlat
push
mov
inc
and
mov
stos
enter
testl
jo
cmp
cmp
lds
push
xlat
cmp
and
pop
xor
in
leave
or
xchg
testb
in
dec
cs
xchg
lods
pusha
popf
adc
add
je
rorb
cmp
mov
mov
mov
movnti
jbe
rsm
aad
mov
mov
rolb
push
push
hlt
rclb
mov
movsl
or
or
mov
or
mov
and
repnz
lahf
fwait
dec
in
and
or
xchg
inc
push
mov
cmc
push
nop
push
fnsave
andl
adc
inc
shr
push
mov
jbe
inc
das
adc
pop
jecxz
fadds
fadds
pushf
aam
push
pop
add
xchg
shrl
movl
das
add
pop
pusha
add
ficomps
mov
loop
add
test
ss
es
sbb
jnp
shll
add
cmp
enter
int
das
pop
mov
inc
lret
inc
les
add
sub
dec
mov
out
rol
pop
outsb
push
ja
xchg
dec
lds
push
add
adc
sbb
dec
psubd
push
jecxz
cs
test
xchg
inc
add
xchg
or
jmp
pusha
jle
add
loope
in
shrl
jo
add
fsts
arpl
mov
js
lock
add
push
shl
sbb
sbb
fcompl
gs
flds
roll
jbe
push
or
clc
in
pop
push
mov
add
in
mov
push
iret
hlt
adc
mov
add
addr16
jle
pusha
mov
mov
add
clc
pop
jmp
mov
add
lcall
sti
mov
sbb
clc
jl
cmp
mov
sbb
int
pusha
mov
mov
imul
and
sub
mov
sar
mov
push
sti
lcall
aaa
add
jmp
addr16
arpl
fdivs
hlt
add
xor
jno
and
sbb
fsub
scas
pop
pusha
mov
mov
jle
nop
xchg
add
icebp
popa
loopne
call
push
sti
pushf
jns
add
out
xchg
mov
push
je
lds
sub
incb
cmp
es
pop
in
jo
adc
push
jnp
adc
add
add
repz
das
add
pop
insl
stc
add
int3
add
jecxz
dec
pop
jo
jbe
pop
out
or
and
or
mov
out
pop
mov
fiaddl
sub
mov
decl
dec
lods
mov
pusha
sti
imul
xchg
subl
out
repz
loopne
add
sbb
push
rcrb
pusha
in
sub
xchg
ljmp
sub
loopne
in
das
mov
hlt
les
pslld
and
out
push
mov
inc
ljmp
stos
ja
mov
dec
xor
adc
dec
in
movb
aad
sbb
cmc
mulb
push
jo
jmp
xor
std
shll
shrb
pop
scas
out
scas
in
sub
popf
aaa
cmp
sub
pushf
and
fldt
movsl
lea
cwtl
jns
iret
aaa
or
rolb
dec
ficoml
orl
aad
and
add
cmp
add
nop
pop
pop
xor
add
mov
mov
add
push
pop
pop
jae
lock
ret
xchg
data16
sub
aas
inc
sbb
cli
in
xor
cltd
sub
cwtl
inc
add
jecxz
fcom
fsubrl
lods
pushf
and
mov
or
push
xchg
xchg
enter
and
movl
dec
mov
adc
movsl
mov
sbb
mov
add
lcall
nop
mov
push
pop
or
mov
into
orb
fs
cmp
cltd
dec
push
test
add
push
add
lock
enter
mov
mov
push
test
mov
les
rol
cmp
or
mov
in
out
push
and
daa
sahf
pop
cmp
add
dec
push
shlb
fcmovne
dec
bnd
std
pusha
sbb
pusha
add
pop
pop
fnstsw
xchg
imulb
jnp
push
jg
cltd
dec
call
add
rcl
pop
and
imul
mov
cmp
or
ret
int3
jg,pt
pusha
mov
cmp
lods
insb
push
in
cmpsb
or
in
xor
push
loopne
add
adc
add
cs
imul
jg
pop
stc
out
js
aad
clc
and
xchg
mov
sub
addps
or
and
or
xlat
rcr
xchg
imul
jnp
xor
cs
ljmp
cmp
addb
push
add
out
and
arpl
in
dec
inc
add
repnz
push
les
sbb
mov
testl
sarb
add
mov
xchg
jl
or
xchg
sub
pop
dec
dec
scas
lock
push
push
loopne
push
in
inc
shrb
sub
jge
push
mov
adc
add
inc
dec
push
add
in
fsubrs
mov
neg
add
mov
leave
dec
jo
mov
sub
das
mov
ljmp
adc
mov
call
add
addr16
pushf
lods
inc
scas
pop
enter
fcoml
insb
sbb
imull
mov
mov
stc
je
or
test
xor
jle
dec
xor
sub
mull
test
repnz
or
add
xor
pop
fcmovnbe
dec
push
mov
sbbl
nop
dec
adc
jb
dec
mov
push
loopne
add
fdivs
fistl
xor
mov
ficoms
add
pop
js
jbe,pn
sbb
lods
xchg
add
pushf
int3
push
fwait
sbb
cmpsb
stos
cmovs
mul
jl
or
rcrb
push
add
inc
pop
popa
jl
and
jp
shlb
ja
mov
mov
push
js
xchg
add
data16
add
jp
push
vpmaxsw
inc
cmpsb
jecxz
sub
sbb
add
add
ret
mov
fs
push
mov
arpl
test
fs
adc
jg
les
sysexit
rorb
add
or
popl
push
inc
sbb
and
cmpsl
pop
jo
nop
sarb
push
add
hlt
xchg
sbbb
movl
cmp
lcall
insb
add
in
or
orb
dec
in
dec
test
loopne
xchg
add
xchg
push
hlt
jle
lods
mov
xor
adc
sahf
jne
sub
push
and
fldenv
ja
rcrl
mov
int
je
sbb
xchg
lcall
dec
add
inc
jge
sti
fs
mov
jns
push
push
popa
or
stos
sub
and
sbb
pop
dec
mov
or
sbb
jo
add
shll
hlt
popf
push
cmpsb
call
xchg
mov
aas
push
mov
add
ret
pop
dec
mov
pop
jne
pop
hlt
mov
mov
cmp
pop
mov
adc
andl
imul
test
cld
or
inc
cltd
mov
push
cli
aas
mov
inc
xchg
push
or
dec
or
xor
mov
jne
popa
mov
and
lahf
add
mov
push
cmc
lcall
dec
add
outsb
sub
add
mov
clc
add
int3
add
mov
push
add
dec
sbbl
or
xor
stos
push
pusha
xor
mov
mov
inc
cmp
pop
movsl
in
pusha
pop
and
xor
mov
pusha
xchg
xchg
pop
shlb
adc
push
push
cld
jo
or
push
shlb
mov
jl
test
bound
cwtl
and
orl
jnp
cmpsl
xor
add
popf
stc
sbb
add
mov
inc
mov
pusha
sbbb
or
pop
dec
add
mov
adc
add
lret
add
mov
sub
push
push
sbb
push
lock
stos
add
sbb
xchg
add
or
xor
push
fwait
or
jmp
aad
jb
add
cmp
fadd
loopne
add
stos
inc
mov
pop
scas
pop
add
aam
movb
sub
adcl
add
mov
pop
sbb
inc
push
in
loop
mov
mov
ds
inc
and
test
mov
mov
add
lret
cld
xchg
imul
leave
xchg
fsubl
jns
ret
mov
sub
movsl
mov
or
je
and
iret
jl
cmp
outsb
add
les
loopne
mov
inc
add
into
lret
mov
es
sbb
add
lock
or
xchg
pop
sbb
push
adc
inc
out
stos
mov
mov
mov
faddp
in
jo
xor
sub
mov
scas
daa
xchg
andb
inc
cmpl
subl
jo
mov
fwait
inc
pop
mov
add
or
nop
aam
jnp
or
hlt
jo
addr16
add
push
pusha
mov
xchg
xor
mov
ffreep
add
add
aad
rorb
clc
jno
cmp
push
sub
adc
push
push
es
test
and
sbb
jae
inc
and
scas
cwtl
in
pop
ret
cmpsl
out
fdivr
add
jmp
aad
mov
fwait
or
pushf
push
lret
inc
push
jg
nop
insl
and
arpl
push
add
mov
inc
push
add
jl
loopne
loopne
imul
ja
fdivl
xchg
js
adc
inc
jecxz
mov
pusha
sti
xchg
add
pushl
adc
mov
mov
add
add
rcrb
push
cs
shlb
jge
je
into
xchg
and
fxch
lea
adc
mov
dec
dec
lods
mov
loopne
jecxz
push
add
inc
push
stc
push
js
cmova
push
adcb
adc
add
ljmp
out
out
and
mov
pop
or
sub
imul
shld
or
inc
sbb
ds
enter
sti
xchg
pop
stos
xor
stc
in
add
push
outsb
mov
mov
mov
sbb
xorl
paddsw
andb
push
mov
sub
push
subb
inc
test
mov
enter
icebp
xchg
cmp
call
loopne
jns
or
add
sbb
mov
push
add
cld
pop
cmp
ret
dec
rolb
imul
fstpt
aad
pusha
cmc
cli
insb
dec
add
push
mov
push
pop
pop
shll
sahf
xchg
repnz
divl
add
jb
and
dec
pop
daa
addr16
pop
and
inc
add
mov
jb
xor
ss
mov
adc
add
hlt
aaa
mov
adcb
loopne
rorl
aad
test
gs
inc
add
jnp
mov
adc
xchg
pop
add
mov
mov
mov
scas
fldt
das
shll
xchg
iret
fsubp
pop
push
push
sub
int3
or
dec
add
mov
cmp
sbb
cmp
incb
adc
decb
sub
in
jne
adc
mov
pop
inc
add
stc
pop
nop
out
int3
fildl
cld
cwtl
aam
in
add
push
pop
ret
arpl
add
mov
or
jbe
dec
push
icebp
add
roll
mov
xchg
pop
dec
icebp
clc
xchg
add
insb
mov
sub
scas
xchg
push
andb
out
mov
push
movsb
xor
test
and
add
je
lcall
push
jg
jp
mov
pop
mov
pusha
repz
lock
mov
call
xor
leave
roll
scas
movq
stc
imul
xor
std
leave
cmp
mov
out
aas
jae
mov
stos
sbbb
jo
mov
cmc
pop
xor
icebp
add
inc
pop
ret
movsl
jno
mov
adc
mov
xorb
loopne
lret
add
insb
je
cwtl
and
leave
out
mov
add
or
jnp
nop
jne
push
cltd
push
or
and
jo
mov
xchg
div
cli
pop
add
in
add
jg
push
aam
push
gs
mov
mov
loopne
lar
add
int
and
shlb
fistps
aas
lret
add
pop
add
repz
or
push
cmc
mov
cmpsb
add
add
jnp
loopne
enter
nop
xchg
shrl
cmp
add
and
leave
jbe
incb
lea
inc
cmp
arpl
sbb
aas
xchg
loop
pop
lret
mov
cmc
js
and
insb
adc
sub
sub
xchg
push
jae
adc
aas
adc
xor
test
clc
add
popf
mov
addb
inc
add
ffree
sbb
xchg
cmp
mov
imul
shl
jg
and
addr16
frstor
and
sbb
inc
xchg
arpl
incb
pop
in
rcr
jae
push
xchg
add
lret
pop
stos
fs
adc
push
adc
add
mov
fldl
cmp
sbb
hlt
push
add
mov
mov
insb
add
pop
pop
mov
sbb
inc
in
sub
mov
adc
jbe
fstl
lock
add
mov
cmpsl
ljmp
mov
mov
cltd
in
stos
aas
sub
push
pop
mov
aad
add
cs
pop
xchg
mov
adc
scas
imul
js
ficomps
fildl
mov
xchg
pushf
jo
pop
add
push
aas
into
decb
jne
add
jmp
pop
add
shl
iret
add
mov
lret
icebp
jecxz
push
push
cmp
movl
mov
and
xor
xchg
jns
sahf
mov
fcmove
sub
hlt
nop
shlb
popa
fisubl
mov
jno
enter
fiadds
jns
jecxz
mov
jmp
test
mov
sub
mov
jmp
jmp
and
fbld
cld
loop
add
clc
push
add
mov
inc
mov
popa
aad
aaa
mov
fcoml
ror
ret
loop
add
push
mov
cmp
cmpb
std
aad
rolb
gs
sahf
ds
outsb
leave
arpl
adc
mov
das
push
sub
inc
push
push
pop
lret
andb
adc
je
and
mov
xchg
adc
in
mov
xor
cld
mov
sbb
jbe
jae
mov
inc
dec
pop
pop
ret
xor
shlb
add
lret
movsl
add
lret
in
inc
cld
out
imul
dec
sbbb
popa
and
inc
jp
sbb
in
roll
aam
ds
push
addb
lret
and
xor
sbb
mov
int3
push
pop
cmp
pusha
ltr
mov
and
xchg
xor
clc
scas
mov
movswl
mov
jno
dec
rcrb
inc
push
sahf
bound
add
and
fdivl
xor
dec
pusha
gs
push
and
add
xor
or
sbb
xor
ror
cmp
xor
rorb
jnp
bound
rolb
test
cld
xor
stos
pop
add
push
jns
outsl
fcoml
jg
push
cmp
xchg
call
je
add
cmpsl
lret
and
bound
xchg
aam
out
inc
dec
jl
sarb
testl
dec
call
ss
insb
and
or
lock
pop
fwait
inc
fisttps
mov
dec
insb
cltd
add
jge
test
es
adc
clc
push
aam
fwait
add
rorl
xchg
add
mov
push
push
xchg
repnz
jns
mov
push
jecxz
sti
ljmp
adc
out
js
and
lods
mov
negb
outsb
jp
pusha
jnp
push
arpl
and
dec
sti
sbb
add
pusha
adc
and
sbb
add
sub
icebp
jno
insb
mov
dec
popa
orb
mov
outsb
cvtps2pi
stos
test
add
imul
lods
mov
popf
jbe
add
xor
and
push
xchg
xchg
adc
xor
and
sub
xor
add
roll
adc
cltd
jle
add
scas
fcmove
and
inc
rolb
jle
xchg
xchg
test
out
fsubr
jo
dec
push
pop
push
jae
negl
sbb
add
fimuls
les
popa
fbld
orb
and
into
add
fisubrs
and
cmpsl
lock
aas
xchg
add
push
cmp
and
js
add
lods
inc
test
xchg
push
cli
ljmp
divl
xchg
add
xchg
sbb
es
add
loopne
mov
ret
inc
iret
dec
sub
xchg
jo
jno
sbb
mov
lcall
add
lods
xor
jne
pop
pop
dec
clc
mov
xor
push
pushf
add
notl
shlb
dec
rolb
mov
sub
ffreep
pop
ja
pop
pop
inc
xchg
push
adc
cltd
sub
cmp
xor
sbb
and
imul
rolb
xchg
or
mov
arpl
scas
sarb
out
lods
add
jmp
mov
push
ficoms
add
loopne
add
shl
addl
das
jo
aas
add
pop
and
cs
loopne
add
mov
addl
adcb
xchg
xchg
add
add
cltd
or
jle
insl
lret
jecxz
std
loope
mov
and
cld
rclb
in
adc
add
jmp
nop
or
xchg
sbb
sub
cmpsl
mov
loopne
pusha
pushl
sahf
fisubrs
jo
fsubrl
mov
or
dec
fisubs
mov
lock
sbb
insl
or
mov
push
mov
mov
cmp
cmp
jae
xchg
fsubr
fbstp
add
jle
pusha
jbe
mov
in
orb
popa
jge
in
sbbb
in
mov
pop
outsl
sbb
or
or
imul
dec
ret
mov
sbb
fstpl
imulb
lea
add
lcall
add
in
leave
shrl
loop
xchg
mov
xchg
mov
dec
mov
xchg
add
ror
mov
fnsave
add
mov
sub
mov
pop
add
sahf
dec
imul
pop
add
sbb
jb
clc
pop
push
inc
rcr
out
lcall
lock
aas
into
orb
faddl
cs
mov
fwait
sbb
mov
std
jb
xchg
jmp
add
pop
test
adc
fwait
sub
rorb
jecxz
mov
push
xor
pop
mov
sub
rorl
or
xor
inc
mov
inc
jbe
rcrl
xlat
adc
add
insb
add
js
jnp
sub
not
inc
xor
mov
add
mov
into
popf
out
imul
bound
mov
orl
push
and
add
das
insl
xchg
jo
cmpb
sbb
sub
ljmp
insl
jl
add
fstpl
jmp
cmpsb
adcb
add
mov
sbb
pop
inc
dec
enter
inc
mov
hlt
imul
xchg
nop
fsubp
test
aas
add
scas
sbb
xor
sub
pushf
jge
inc
mov
rorb
inc
enter
push
cmp
jns
outsl
pop
es
arpl
cmp
and
cli
cld
insl
cmp
sbb
std
add
daa
insl
mov
mov
xchg
cs
loop
and
add
dec
je
add
aaa
add
and
sbb
pop
sub
inc
add
popa
push
inc
scas
mov
dec
pusha
sahf
sbb
adc
add
jbe
mov
jne
hlt
push
es
pavgw
in
add
dec
inc
add
and
mov
sbb
mov
insb
fidivrs
push
add
xor
or
xor
add
add
leave
andl
js
mov
pop
in
add
adc
mov
pop
in
dec
rcrl
mov
add
pop
or
insb
pop
or
xor
in
call
in
in
or
leave
sub
pop
inc
cld
repz
add
mov
fs
jmp
jbe
jl
cmp
int3
into
pop
pop
mov
loopne
push
jo
add
adc
add
pop
or
xchg
or
sar
test
mov
xor
cmp
sub
cmp
loopne
fldl
out
je
adc
sub
or
sti
adc
pop
in
incb
jns
xchg
cmp
movsb
sub
mov
loope
repz
popf
fwait
add
pop
sbb
add
jns
cli
add
enter
mov
adc
inc
sbb
xchg
leave
mov
aas
push
push
hlt
add
mov
adc
mov
dec
xchg
xchg
fisttps
fcoml
xor
rolb
lods
inc
xor
out
jno
pop
xlat
int3
cmp
gs
imul
pop
mov
and
dec
add
push
js
iret
popa
mov
or
stos
jp
outsl
add
xchg
and
pop
dec
fildl
or
push
dec
mov
pushf
add
mov
mov
lahf
pop
dec
into
pop
add
jp
in
dec
jnp
add
push
ds
add
mov
out
in
xchg
das
add
sti
adc
ret
int3
les
imul
loopne
add
test
push
pop
repz
mov
bound
loopne
jl
sti
lods
jg
or
cs
pop
ds
out
aaa
addr16
das
imul
fnstenv
add
xchg
cmp
mov
jo
xor
mov
mov
adcl
push
or
scas
push
test
xor
sub
out
icebp
lret
lret
int3
pop
out
es
les
jmp
add
sub
insb
pop
push
xlat
clc
adc
data16
jns
jno
fwait
cli
xor
fstps
jmp
add
inc
jmp
jp,pn
add
stc
mov
jge
xchg
dec
cmp
rcrl
gs
add
out
cld
push
and
and
ds
add
jmp
lock
add
nop
add
inc
lock
mov
inc
add
adc
cmp
or
mov
mov
push
sbb
mov
enter
jo
fisttpll
dec
rclb
pop
sub
inc
decl
lret
adc
xor
mov
add
nop
outsl
cwtl
inc
sarb
rcll
into
int3
xchg
push
outsb
out
push
iret
adc
add
add
mov
pop
add
daa
out
movsb
andl
push
or
push
rcrl
movsb
jg
add
mov
jne
inc
movsl
add
push
call
sub
sub
pusha
dec
cld
test
stos
jo
xchg
movsl
outsl
xchg
mov
xchg
cmp
add
or
push
inc
pop
pusha
popf
jl
add
call
lock
sub
push
jnp
addr16
pop
cmp
adc
inc
clc
jb
je
adc
inc
adc
in
add
lods
sahf
sbb
fidivrl
jae
add
sbb
outsb
popl
push
jb
push
inc
or
lret
out
daa
push
and
es
cmp
or
dec
mov
js
or
divl
mov
cmp
aad
cld
add
icebp
xchg
pop
pop
std
add
shl
or
add
adc
mov
or
cmp
pop
and
push
call
lret
jmp
cmpsb
pop
mov
pusha
cld
xchg
sbb
inc
xor
and
je
sub
mov
leave
das
les
or
inc
sbb
cmp
lods
fnsave
adc
mov
nop
mov
xor
lret
push
xchg
negl
adc
std
sub
mov
push
aad
cmpsl
test
dec
mov
add
dec
cs
test
inc
add
mov
add
xlat
xchg
fld
adc
in
inc
sbb
lock
stc
pop
fwait
xchg
call
inc
dec
icebp
imul
mov
cmpsb
pop
pop
scas
adc
fsubl
movsl
sar
add
sbb
repz
ds
rcll
xorb
mov
or
sahf
lock
stc
pusha
loop
and
mov
int3
loopne
inc
push
aad
push
pop
jmp
in
mov
xlat
push
popa
adc
pop
mov
je
testb
leave
mov
pop
add
or
rol
loopne
xor
mov
mov
outsb
lock
aam
and
jb
push
xor
or
pop
loop
jmp
xchg
fdivr
dec
cld
add
adc
clc
mov
pop
fdivs
cld
mov
js
xchg
add
stos
shl
dec
push
in
or
mov
roll
dec
outsl
insl
lea
shlb
hlt
add
push
cmpb
cmp
ja
fldcw
outsl
push
or
cmp
mov
mov
mov
add
inc
xor
out
or
xchg
jmp
ja
inc
push
mov
mov
add
lret
push
pop
fistpl
xor
add
ret
test
add
es
aaa
add
loope
int
push
int3
repnz
dec
xchg
testb
mov
cmc
add
push
add
adc
add
dec
xor
adc
or
add
orb
sub
shl
xchg
icebp
cmc
popf
add
lods
mov
xor
and
daa
lock
xchg
jb
lcall
rolb
test
xchg
cmp
dec
setg
jne
shlb
fisubs
add
fldcw
clc
ljmp
int
movsl
sbb
enter
insl
xor
sub
jo
jg
out
mov
add
fnsetpm(287
dec
in
dec
add
sub
cmp
add
daa
push
mov
mov
mov
add
xchg
je
add
sbb
inc
dec
xchg
out
xchg
pop
adcb
pop
in
jmp
jecxz
fldlg2
add
adc
lea
in
mov
push
and
fsubr
shlb
mov
fadds
lcall
add
inc
sbb
outsb
mov
inc
pushf
data16
pusha
ret
add
dec
jp
lock
clc
xchg
imull
popf
imul
mov
xor
push
dec
inc
xchg
rolb
test
xor
stos
call
movsl
add
lret
in
xchg
filds
dec
push
pop
cmpsb
sub
loope
inc
fwait
cmp
cs
mov
or
pop
mov
ljmp
jg
dec
test
dec
mov
test
fstl
movsl
add
pop
sbb
push
shlb
push
or
dec
mov
jnp
hlt
divb
mov
mov
js
jmp
add
das
cmpl
mov
in
std
in
ret
clc
xlat
inc
das
shlb
pop
push
add
push
addb
and
daa
ja
popf
push
pop
add
mov
shll
cmpsl
pop
dec
pop
mov
out
popa
push
xchg
jge
in
sbb
cmpb
inc
mov
push
pop
dec
mov
into
inc
cs
mov
mov
jns
jo
push
decb
add
cmpl
dec
add
mov
inc
add
pop
iret
cmc
nop
insb
add
in
imul
mov
mov
shr
mov
adc
xchg
jae
add
into
pop
hlt
shr
jmp
add
push
mov
jl
data16
push
test
mov
xor
ljmp
pop
lds
lahf
nop
mov
add
jnp
xor
push
movsb
pop
inc
and
cmc
out
lds
add
imul
mov
pop
push
add
pop
jmp
cld
ljmp
or
xchg
cmc
sbb
xor
das
xchg
imul
andb
jne
add
movsl
push
outsb
outsl
aaa
or
pop
sub
fdivs
pusha
xor
stos
xor
aad
mov
cmp
gs
je
icebp
push
and
and
and
jp
cmp
xchg
mov
mov
std
pop
ja
add
and
stos
inc
test
dec
push
dec
or
and
and
add
sub
dec
cwtl
in
test
in
test
and
jge
insb
mov
jle
es
roll
lret
push
and
push
and
test
inc
cld
jmp
or
cmp
subl
or
fiaddl
xchg
xchg
je
xor
push
xor
sbb
shl
mov
cmp
and
inc
xchg
mov
push
dec
lret
dec
pop
jnp
js
rcrb
lock
cmpsl
rolb
and
insb
push
mov
add
in
mov
add
pop
out
xor
mov
loopne
and
ret
jmp
sarb
dec
or
rol
fiaddl
js
adc
out
add
enter
outsb
add
jmpw
mov
mov
mov
add
lret
jno
add
cmpb
add
gs
mov
icebp
aas
mov
add
in
dec
add
mov
inc
mov
aaa
jb
sub
or
cli
pop
ret
cltd
add
fs
pusha
in
mul
aas
add
mov
mov
lds
int3
daa
push
xchg
test
andb
cltd
ds
out
pop
fsubrs
push
cld
mov
out
cmp
inc
jo,pt
aas
js
adc
mov
jmp
popf
inc
fnsave
add
rep
jle
mov
lds
add
cmpsl
jb
jno
test
aas
pop
jns
repnz
rcr
push
outsb
dec
shll
dec
mov
cmp
inc
out
mov
or
stos
jg
add
loopne
sub
aaa
cmp
dec
pop
push
addb
pop
and
lcall
mov
push
loopne
add
xchg
sub
add
mov
or
ljmp
jno
jo
clc
insb
je
mov
fsub
movsb
add
or
mov
ja
clc
insl
cltd
insb
out
and
pushl
les
xorb
xchg
inc
add
aad
subb
lea
jg
ret
pop
mov
mov
test
or
add
pop
pop
jne
repz
add
inc
adc
je
mov
loopne
add
push
imul
in
stos
jmp
add
mov
dec
cld
sbbb
add
xlat
lds
pushf
jo
lock
pop
push
or
out
sbb
out
xor
jg
sub
add
repnz
xchg
add
fs
cmpsb
inc
test
test
inc
lock
dec
mov
add
mov
push
nop
stos
jge
cltd
sub
mov
hlt
ss
jne
add
jo
xor
mov
jmp
push
loop
push
lock
decb
and
data16
ljmp
adc
sbb
and
mov
xor
dec
pop
daa
data16
movsb
repz
lods
testb
inc
hlt
in
mov
lods
mov
add
sbb
add
and
mov
sbbb
cmp
jb
jns
pop
dec
xor
in
loope
addl
pop
sbb
lods
rcrb
nop
dec
out
xor
je
stos
lcall
sti
cwtl
push
jb
imul
pop
inc
add
push
xor
lods
cmp
add
cltd
jmp
fstpt
or
pop
stc
adc
or
pop
or
cld
cli
cmpsl
nop
add
sti
dec
pop
mov
andb
out
stos
les
mov
mov
out
mov
insb
add
lret
scas
xchg
shl
adc
and
out
xchg
shll
pop
iret
js
add
es
xlat
arpl
aas
jnp
add
cmp
insl
sar
adc
inc
lcall
push
push
pop
pop
mov
pop
jae
js
lock
test
mov
xlat
divl
add
dec
mov
or
xchg
sub
xorb
into
loopne
pop
mov
push
add
mov
jae
das
sahf
shrb
js
es
jo
outsl
cmp
addr16
and
sub
add
cld
repnz
dec
mov
movsb
imul
pop
shl
aas
lods
xlat
xor
fwait
loope
ret
adc
sbb
jns
dec
std
pop
push
add
dec
mov
jae
jg
ficompl
movsl
inc
les
sarb
shrb
push
xor
aam
sub
lcall
push
add
imul
add
jns
cld
cmc
jg
mov
add
das
mov
xor
add
push
jp
pusha
xchg
inc
add
sub
jb
pop
jno
cmpsb
fstpt
xchg
mov
clc
loope
and
add
fiaddl
lods
inc
scas
aas
xchg
mov
adc
ret
int3
pop
fbstp
or
pop
insb
testb
mov
cmp
add
cld
inc
adc
adc
lcall
sbb
scas
jne
mov
hlt
xchg
ds
daa
add
add
orb
mov
int3
add
neg
pop
mov
inc
aaa
cwtl
enter
lds
sub
inc
push
pop
pop
loopne
mov
insb
xor
adc
pop
cltd
jle
mov
imul
nop
mov
sbb
or
data16
cmpsl
add
dec
inc
adc
inc
movsb
iret
stc
push
pop
das
in
addr16
jns
sar
dec
lods
sbb
pop
jne
imull
adc
adc
addl
scas
inc
inc
les
mov
es
cltd
shlb
shll
outsl
xor
pop
or
sub
outsb
stc
and
test
cmp
aaa
movsl
iret
jb
add
into
push
mov
fnsave
daa
nop
sub
adc
add
scas
out
repnz
shrb
pop
cmpsb
adc
bound
pop
add
lock
cmovno
xlat
pop
mov
xlat
sub
imul
adc
xorl
out
lcall
jle
divb
inc
out
xor
jne
hlt
movsl
adc
push
enter
out
clc
fisubs
insb
xchg
rclb
mov
add
add
inc
jp
shlb
sub
push
movsb
ja
add
mov
xor
jl
push
test
pop
rcl
ljmp
pop
lahf
xchg
out
sbb
mov
cmp
add
gs
out
stc
scas
in
ror
fcompl
sbbb
mov
gs
jbe
sub
xor
js
notl
insb
data16
cli
nop
jp
pop
ja
pushf
xor
pop
jle
pop
flds
or
je
add
pop
xchg
sgdtl
inc
add
or
inc
push
mov
and
bound
sbb
sbb
jg
mov
adc
adc
add
or
ret
xor
cmp
and
xor
push
jns
add
cmpsb
pop
sub
inc
dec
out
pop
add
loope
mov
lahf
clc
enter
fstl
cmp
xor
enter
add
pop
xchg
mov
data16
les
xorl
lcall
leave
sub
test
outsl
popf
dec
pop
jge
cmp
enter
out
pusha
jbe
sub
or
outsb
push
fistl
sub
mov
xchg
sbb
mov
add
ja
stos
jle
jmp
jp
inc
cltd
xlat
mov
pop
or
pop
dec
clc
push
mov
bound
aas
mov
mov
mov
jle
jo
loope
adc
push
jae
sarl
sub
clc
scas
pop
lods
xchg
loopne
lock
add
test
dec
jb
shlb
imul
mov
shl
add
es
fmul
das
inc
add
xchg
pop
dec
into
pop
jle
hlt
lock
xchg
pop
movb
sub
pop
mov
push
mov
adc
inc
aaa
cmp
shll
pushf
cmc
lcall
mov
adc
add
cwtl
jns
lds
or
jo
xor
jbe
arpl
inc
mov
sub
mov
insb
inc
pop
mov
sbb
mov
loopne
in
repz
add
adc
dec
loopne
jbe
cmp
aaa
cmp
xor
popf
add
mov
add
sarl
add
in
push
push
ljmp
dec
push
mov
push
into
loope
add
add
inc
jo
and
add
out
jmp
into
loop
or
mov
lods
cmp
dec
pop
mov
sbb
ljmp
mov
dec
sbb
popl
outsl
pop
aad
xor
gs
loopne
pop
mov
sbb
and
int3
add
lret
jbe
add
nopl
nop
sbb
nop
jb
test
mov
and
and
adc
lahf
mov
test
jl
jb
movb
inc
xchg
cmp
add
push
fisubrl
lds
xor
adcl
cmp
mov
ret
sbb
mov
push
dec
sbb
xor
cmp
push
add
mov
in
clc
ret
push
or
xorb
push
cmp
movsl
idivl
fstp
and
sahf
mov
adc
fldt
pusha
mov
push
add
adc
and
jbe
leave
add
push
sub
push
pop
sub
add
cld
imul
and
add
inc
lock
add
ds
mov
add
loopne
sti
js
aaa
or
js
mov
sahf
lods
and
cmp
xchg
in
mov
ret
bound
repnz
push
call
add
sbb
hlt
fcompl
test
lock
rclb
mov
add
sbb
and
int
fs
add
cmp
sbb
clc
sbb
ss
push
cld
add
bound
arpl
movsb
pop
push
pop
sbb
mov
sbb
loop
inc
pusha
test
cmp
popf
mov
mov
es
jge
repnz
and
test
or
shl
jb
mov
sbb
xlat
lock
sub
and
sbb
arpl
stc
out
or
filds
add
les
sbbb
pop
loop
mov
inc
inc
pop
je
pusha
xor
sub
push
mov
sbb
dec
cld
sbb
sub
test
mov
leave
mov
pop
add
sub
ss
dec
inc
push
out
inc
add
lahf
pop
mov
imul
jbe
pusha
int
aam
jp
push
mov
movsb
orb
sbb
pop
das
movsl
mov
rclb
push
jo
xor
push
sub
lods
cmp
loop
iret
mov
add
add
fcomps
sbb
xchg
arpl
adc
cmc
pop
pop
dec
rorb
cmp
cmp
test
in
sbb
rorb
mov
clc
push
iret
pop
add
outsl
call
push
sbb
lcall
cmp
xchg
enter
cmp
pop
dec
or
loop
rorl
fcomps
add
and
cmpsl
xor
vmovups
add
fisttps
ret
fadds
fs
mov
out
pop
pop
pusha
mov
mov
jle
faddp
addr16
push
shr
test
sub
xchg
test
push
jg
cmp
lea
adc
and
dec
add
cmpsb
shrb
out
data16
iret
sbb
fcomip
aas
mov
outsb
subb
and
pop
mov
enter
iret
scas
fnstsw
jl
and
insb
add
scas
xor
sub
cli
lahf
out
les
cbtw
lock
je
test
sbb
rcll
add
and
jg
pushf
movsl
popa
mulb
dec
dec
xor
filds
or
jle
imul
lret
inc
pop
je
add
add
pushf
cwtl
xor
dec
cmp
outsb
aas
add
and
lds
xchg
mov
xchg
in
add
mov
clc
add
xlat
jp
int3
pop
xorb
lcall
scas
push
jecxz
push
or
mov
aas
shlb
dec
repnz
dec
pop
fwait
shlb
fstpt
inc
ds
push
shrb
pop
pop
push
inc
loopne
aaa
lcall
and
out
push
sbb
jmp
sbb
mov
mov
stos
cmp
and
pusha
xor
rolb
jo
cmp
sbb
out
cmp
int3
mov
xchg
add
dec
push
enter
les
or
add
icebp
int3
pop
push
shll
inc
push
outsl
lret
add
cwtl
xlat
and
mov
icebp
or
sub
and
cmpsl
adc
imul
xchg
or
lds
sbb
mov
fwait
mov
add
leave
repz
clc
dec
cmpsb
sbb
loop
push
and
lcall
fstl
add
je
cmpsb
sub
pusha
push
mov
rclb
xchg
jnp
cmp
dec
add
mov
in
add
stos
sub
js
mov
loope
mov
fiadds
push
idivl
inc
xor
out
xor
ret
test
or
adc
or
iret
stos
lcall
adc
popa
pushf
pop
add
cmp
pop
bound
dec
sahf
xchg
data16
xchg
pop
loope
pop
loop
cmp
add
sbb
mov
and
and
fsub
dec
enter
lret
mov
jge,pn
cmp
mov
add
cmc
jmp
fldcw
scas
es
mov
pop
adc
or
add
outsb
xchg
mov
or
pusha
add
sar
es
out
cmpsl
nop
rclb
lods
outsl
xor
pusha
mov
fstps
dec
xor
ret
adc
jae
repnz
lods
lret
cmpb
rorl
pop
leave
jbe
pop
aas
and
dec
sub
test
mov
ror
data16
hlt
shrb
test
xchg
add
stc
pushf
lret
sub
dec
rclb
icebp
mov
mov
mov
lahf
mov
xor
and
jg
nop
mov
sbb
lods
nop
mov
movsb
push
loop
lods
shl
mov
mov
rolb
add
fstpt
les
enter
fs
mov
inc
movsl
pop
push
or
add
and
pusha
rcll
mov
aas
pusha
cld
clc
pop
and
pusha
pop
sub
mov
xchg
or
ja
sbb
dec
cltd
xchg
lock
pop
pop
js
add
enter
inc
aas
movsl
sbb
and
insl
mov
cli
ds
and
push
shl
and
push
in
mov
sbb
adc
adc
sbb
int3
pop
push
xchg
add
mov
xchg
movsl
nop
xchg
aas
push
dec
lods
xor
int3
push
add
pop
popf
xor
ret
pop
push
or
inc
loop
out
insb
mov
sub
add
mov
and
fadds
in
jmp
cli
in
repnz
lahf
and
pop
jle
xchg
push
cld
shr
push
mov
adc
fs
and
sbb
and
gs
dec
addb
or
bound
cmp
and
push
inc
subl
sub
lds
cmp
adc
jne
push
sub
test
movsb
push
fsubs
cwtl
sbb
rol
es
aam
int
gs
sub
pop
jo
xor
pop
and
dec
and
push
mov
cmpsb
push
outsl
lret
dec
fmuls
sbb
pop
mov
sub
and
ds
cmp
inc
or
fimuls
cmp
lcall
fcoms
sbb
iret
and
jge
adc
mov
adc
dec
scas
mov
cltd
or
subb
clc
push
mov
andb
add
pop
enter
add
lret
rcll
inc
dec
and
sub
test
inc
sbb
xchg
mov
fiaddl
sub
loop
insb
add
lea
or
sbb
cmpsb
mov
enter
rclb
outsl
aam
mov
pop
dec
sub
fdivl
rclb
out
cmp
fmull
insb
jno
pop
sbb
in
rolb
adc
adc
dec
out
push
xchg
xor
shlb
mov
push
add
notb
es
stc
bound
les
fcmovnu
push
push
add
pop
pop
in
subb
ret
pop
mov
aad
adc
test
rcrb
ds
sbb
stc
mov
das
movsl
push
nop
xchg
adc
loope
jecxz
cmpsl
pop
dec
and
mov
add
adc
inc
jo
mov
fmull
fwait
mov
orb
mov
sbb
lret
dec
pop
bound
mov
mov
cwtl
mov
dec
nop
dec
adc
enter
clc
mov
out
scas
xor
mov
pushf
cmp
lahf
add
mov
add
add
in
cmpsl
out
sub
or
arpl
or
popa
push
lahf
push
nop
insb
fwait
imul
jecxz
cmc
movsb
add
fstp
jne
cmpsb
out
ret
add
negb
mov
data16
sbb
and
lcall
sbb
mov
ljmp
stos
mov
nop
jecxz
jg
aaa
sub
jp
jo
jge
inc
mov
cmp
lahf
push
or
sbb
lds
cli
cld
xchg
sub
add
mov
or
subl
cs
scas
in
cmp
adc
xchg
fstpl
rorb
xor
fs
inc
or
cmc
lea
dec
push
adc
mov
adc
jns
push
ret
or
loop
dec
sbb
cmp
stc
xchg
fildl
inc
insb
dec
inc
or
add
test
xor
xor
jle
add
mov
jnp
ret
dec
rolb
xchg
aad
xor
js
cmp
pop
ljmp
xor
arpl
cmp
lds
ret
xchg
push
push
sbb
adc
aam
lret
mov
orb
sbb
or
popa
fnstenv
and
subb
mov
out
mov
or
or
cmp
addr16
rdpmc
xchg
mov
cmpsb
cmp
mov
push
arpl
sbb
fstps
pop
xor
mov
jno
add
push
int3
inc
adc
std
mov
and
add
pop
and
bound
addb
jl
arpl
jnp
mov
fiadds
cltd
mov
add
mov
cwtl
ljmp
and
xlat
icebp
sub
mov
xchg
add
aad
inc
inc
jp
mov
fcmovu
mov
jl
out
insb
mov
add
mov
sub
push
and
arpl
int
xor
pop
insl
mov
idiv
jno
punpcklbw
push
or
xor
mov
mov
jb
mov
loop
xchg
dec
or
sbb
adc
leave
daa
sbb
push
cwtl
dec
cltd
ljmp
call
lods
push
inc
push
int3
lods
in
dec
nop
mov
inc
mov
xorl
ljmp
cs
sub
popa
dec
push
fwait
pop
adc
test
enter
clc
xchg
lock
stc
jle
push
add
into
les
aam
xor
add
pop
ror
or
loope
add
jns
divb
sub
mov
or
xchg
test
ud0
push
adc
add
adc
fwait
pop
testb
push
aad
ror
test
lcall
cmp
mov
nop
mov
sti
mov
mov
fcmovbe
sbb
addb
jg
mov
xor
add
and
adc
les
or
adcl
pop
jmp
adc
adc
xchg
cmp
ljmp
and
pop
outsb
jno
clc
and
add
and
add
sub
stc
pop
scas
movsb
cmp
rolb
sub
orb
outsl
mov
jo
ret
pop
and
clc
add
dec
xor
pop
adc
or
cmp
sbb
mov
dec
lods
fbstp
xor
push
mov
dec
add
cltd
xchg
jmp
aam
adc
repz
ror
mov
cld
adc
and
jno
pop
dec
leave
aam
xchg
or
sbb
out
pop
sbb
add
and
xchg
stc
add
and
jmp
rorl
add
or
lret
add
dec
nop
rclb
jl
mov
add
enter
call
jno
rcll
jo
mov
xor
addr16
mov
push
cli
add
push
dec
vpunpckhwd
call
xchg
mov
mov
cmpsb
ret
test
imul
cwtl
xor
int3
nop
iret
add
int
xor
mov
sbb
mov
adc
les
pop
inc
dec
cmp
sub
test
sar
adc
xchg
cmp
inc
popf
and
mov
adc
push
add
mov
xor
int3
js
mov
andnps
dec
les
mov
pop
jae
add
lods
je
jecxz
pop
subl
and
in
call
push
ret
mov
pop
sbb
mov
xchg
add
cli
sub
cwtl
or
adc
test
shrb
enter
add
lcall
aad
rcr
cli
adc
add
in
xchg
adc
xchg
insb
sub
xchg
ds
or
pushf
mov
mov
or
scas
cwtl
sbb
xchg
shrb
cmp
fisubrs
mov
cwtl
fcoml
ficoml
aad
sub
inc
xchg
push
jo
adc
pop
aaa
nop
fdivs
xor
out
inc
add
into
dec
shl
ljmp
pusha
insl
cwtl
or
arpl
imul
mov
sub
mov
cs
test
pop
lds
bound
sbb
inc
pop
cmp
add
imul
sub
lea
fnsave
imul
cld
gs
pusha
movsl
in
pop
xchg
movsb
shlb
push
lcall
fwait
add
cmp
cmp
lret
cmp
xor
pop
fadds
push
adc
mov
sbb
cmpsb
push
es
or
repz
cmp
adc
xorb
xchg
adc
ret
cld
adc
xor
or
call
xchg
ret
addl
dec
loopne
dec
mov
mov
mov
insb
or
cwtl
lock
add
dec
decb
add
pop
push
mov
ljmp
movsl
aam
insb
fmuls
lret
or
dec
scas
retw
arpl
sar
aad
pusha
inc
push
inc
mov
shlb
push
subb
pop
sbb
mov
cmpsb
mov
pusha
pop
mov
icebp
add
bound
pushf
jno
add
pusha
cmp
stc
adc
xchg
ror
scas
outsl
add
into
hlt
stos
or
sbb
cli
push
add
mov
cmovne
dec
add
inc
mov
xorb
xchg
add
xchg
or
scas
sti
les
add
jge
mov
sbb
ljmp
js
xor
xor
ljmp
ds
dec
add
sbbl
lahf
repz
pop
mov
gs
hlt
icebp
dec
push
inc
negl
insb
push
js
jecxz
call
mov
and
mov
xor
push
subl
add
inc
cld
mov
jns
inc
fsub
add
shll
lcall
cmp
nop
and
jbe
jg
mov
pop
pop
jb
push
call
xor
int3
adc
dec
lock
cwtl
int3
movl
ficompl
call
sbb
xor
or
lock
mov
lods
xchg
add
sbb
inc
mov
inc
add
jecxz
mov
mov
rol
jg
dec
roll
pop
outsl
push
adc
inc
or
mov
mov
je
sti
sub
sbb
inc
shrb
in
inc
pop
and
loop
lds
cmp
jo
push
lret
fwait
pop
cmpb
jp
cmpsl
data16
pop
inc
and
pusha
or
cli
dec
ret
and
pop
mov
rorb
mov
cmpb
mov
push
cwtl
or
push
adc
add
arpl
cwtl
add
push
mov
dec
cwtl
xchg
and
adc
add
jae
lods
cltd
mov
cmpl
and
add
mov
dec
adcl
incl
pop
push
push
sbb
addl
cwtl
cld
xchg
jb
cmpb
cmp
cmp
ds
cwtl
inc
inc
mov
or
mov
xchg
xchg
es
mov
shlb
pop
add
or
fwait
inc
shll
test
adc
fsubl
inc
sti
mov
or
sub
loope
dec
or
sbb
xor
or
mov
jecxz
jb
xor
fwait
mov
ljmp
inc
jns
inc
mov
out
xchg
fadd
pop
xor
enter
sub
flds
dec
pop
inc
sbb
pop
mov
push
xor
cmp
mov
rclb
push
xchg
or
mov
out
jl
add
nop
fwait
push
ror
adc
js
push
imul
add
je
aad
adc
mov
add
and
jmp
sbb
cmpl
mov
xchg
add
enter
outsl
sbb
mov
aas
gs
es
add
sbb
dec
xchg
lods
or
pop
movsl
movsb
loopne
repz
pop
shlb
lock
leave
fidivs
mov
dec
xor
or
adc
add
dec
cmc
pop
shrb
lock
cwtl
push
mov
subb
cld
xchg
sub
add
leave
aas
cs
mov
mov
mov
std
add
mov
add
clc
pop
mov
and
cmp
fs
jmp
add
roll
mov
jmp
sub
sbbl
push
add
push
cli
idiv
loope
cld
xor
or
les
arpl
or
repnz
adc
jl
lds
jnp
push
je
xchg
ljmp
mov
or
xchg
mov
in
mov
mov
add
sbb
enter
cmp
pop
fldenv
je
and
sbb
and
scas
leave
cmpsl
loope
push
add
sub
pop
and
xor
push
jnp
add
xor
call
leave
aad
inc
dec
sbb
cmc
push
movsb
bound
or
xchg
dec
outsb
xor
addb
add
nop
lods
movsb
and
in
add
les
add
dec
mov
mov
pop
and
add
popf
dec
sbb
in
les
xor
in
xor
or
pop
es
add
das
fcmovbe
lods
xchg
fld
cmpsl
adc
sbb
js
fmull
rcll
dec
pushf
add
adc
push
jno
dec
or
int3
adc
jne
cmpsl
xor
cmc
rcl
leave
daa
into
xlat
xchg
add
sti
out
dec
inc
mov
and
adc
scas
mov
or
enter
mov
in
popa
adc
insl
or
add
xchg
sbb
add
bound
mov
in
insb
adc
add
es
mov
lock
add
insl
jecxz
orb
sti
hlt
add
dec
outsb
add
dec
aad
and
xchg
addb
cmp
inc
lret
add
aad
and
fdivr
add
enter
and
call
std
pop
adc
outsl
repz
mov
pop
xor
aad
mov
stos
std
sarl
cmp
imul
call
xchg
test
xor
cld
mov
cmp
mov
mov
shrl
addb
in
inc
or
in
repnz
enter
xchg
or
rolb
dec
gs
jae
cmpb
out
mov
cli
pusha
movsb
stos
and
stos
data16
imulb
or
icebp
ja
fidivs
bound
add
push
xor
or
add
sub
push
les
imul
stos
xchg
sbb
and
mov
xor
sub
outsb
pop
fs
das
pusha
add
xchg
rolb
enter
pop
mov
xor
push
add
aaa
mov
nop
pushf
loope
add
adc
out
pop
push
outsl
jle
push
aam
cmp
xor
scas
insl
bound
int3
xor
cmp
mov
ss
inc
in
movsl
add
test
psubd
rolb
jbe
scas
jo
or
lods
jp
jg
add
decb
adc
cltd
xchg
stos
xchg
add
sbb
add
es
rorb
xchg
negb
sbbb
xchg
jle
add
pushf
mov
cltd
push
lods
or
out
cld
sbb
inc
xor
push
xorl
mov
dec
mov
lret
cld
movsl
xor
pop
sbb
mov
pop
mov
xchg
pop
cmpsb
pop
push
outsb
pop
rolb
data16
add
jb
dec
sbb
nop
cwtl
sub
movsl
sub
lret
insl
add
fwait
mov
cli
stos
jns
inc
and
rol
add
xchg
inc
je
cmpl
cmc
mov
jmp
orl
dec
adc
cld
add
nop
out
sbb
shll
shlb
xchg
mov
imul
xor
cwtl
inc
popf
daa
or
subb
subb
cmp
inc
lahf
jle
mov
jae
pop
mov
sbbb
dec
add
pop
xor
xchg
or
adc
jnp
popf
cmp
les
jbe
push
loop
out
fdivrs
mov
lock
imul
mov
int3
loope
cmp
add
shll
in
mov
pop
dec
nop
lea
adc
rolb
aam
push
pop
jp
lahf
add
sbb
les
lods
inc
add
cmp
dec
cli
mov
inc
lods
and
push
mov
rcll
mov
and
jns
shll
add
cmc
cs
or
lds
push
cld
add
mov
orl
or
js
sti
sahf
add
push
pushf
shrl
enter
sub
inc
jp
lods
das
push
lret
add
mov
sub
nop
pusha
xchg
loopne
lock
inc
pop
push
scas
add
nop
ljmp
pop
add
mov
mov
or
mov
repnz
enter
inc
aaa
and
push
loop
sarl
into
or
xchg
int3
mov
jns
mov
cmp
or
jo
daa
cmp
xchg
mov
add
and
and
or
loop
test
sti
enter
and
cltd
rclb
lock
scas
pop
divb
je
and
and
sbb
xor
add
clc
mov
sahf
pop
and
add
add
repz
sub
and
sub
adc
mov
or
lret
imul
pop
data16
adc
sbb
xchg
test
xchg
or
pop
jl
sbb
call
mov
ds
jns
cmp
push
ljmp
cwtl
nop
lods
sub
addl
cli
neg
les
jns
push
jl
mov
dec
mov
movsb
add
arpl
pop
pusha
xchg
sbb
add
mov
jp
popf
add
jg
dec
or
ficompl
in
xor
call
test
shr
lods
cmp
rcrb
loope
cmp
insb
mov
adc
jno
out
shrb
add
bound
mov
mov
cmp
adcb
dec
sbb
in
test
and
aas
xor
or
push
lock
negb
stos
ja,pn
and
adc
mov
pop
push
and
or
loopne
add
xor
mov
and
dec
enter
dec
nop
push
cmp
fsub
mov
ss
test
jnp
sbb
insl
sahf
push
ds
sbb
insb
xchg
and
mov
jp
add
int3
sub
cmp
scas
out
sbb
xchg
xchg
xchg
add
pop
cld
add
pop
outsl
out
jp
add
pop
sub
int
or
xchg
add
mov
cwtl
add
mov
adcl
add
push
enter
cmp
sbb
adc
scas
cmp
jns
sbbl
xor
lds
sbb
leave
add
push
shrb
loope
jle
jo
sbb
add
pusha
outsl
dec
push
mov
aam
xchg
or
add
mov
push
or
add
pop
pop
cmp
lods
add
aad
mov
jns
addl
add
dec
sbb
jno
mov
xor
adc
shll
push
push
fdivrl
and
lahf
cli
aam
test
enter
sub
pop
mov
rclb
mov
adcb
call
stc
xlat
std
sbb
cwtl
pushf
dec
or
pop
push
cmp
pop
int3
sub
enter
xchg
test
nop
cmp
fildll
addb
add
into
ret
outsb
cmp
mov
inc
movsb
mov
cmp
out
int3
fwait
xchg
adc
add
pop
cltd
pop
cmp
popa
pop
add
mov
test
add
xor
outsl
loope
dec
xor
add
xchg
pusha
mov
xor
mov
mov
jbe
jmp
faddl
xchg
fildll
mov
mov
add
sti
fimull
and
jmp
sbb
xchg
jns
fs
popf
mov
cmc
add
and
leave
add
xchg
xor
add
xchg
pop
sub
jne
movsl
pop
mov
or
mov
xlat
cwtl
pop
push
test
inc
mov
push
icebp
shlb
add
ss
sbb
sbb
loopne
pop
add
lcall
xchg
lock
xchg
jmp
or
xor
push
daa
jne
nop
js
dec
cmp
out
cwtl
or
std
adc
test
popa
or
adc
pop
lods
mull
test
mov
ss
nop
add
jmp
test
pop
fiadds
or
gs
and
cmp
jae
cmp
jo
shr
mov
ds
outsb
cmp
add
sarb
out
test
rolb
adc
rep
pop
mov
pushf
faddl
dec
push
stc
test
push
lock
xchg
add
mov
and
outsl
xlat
pop
jne
pop
fwait
insb
add
arpl
adc
jo
sbb
sub
js
pop
cmp
add
sbb
icebp
xchg
into
xor
or
gs
push
ja,pt
dec
int3
hlt
sarl
sub
push
pushf
iret
add
lods
sub
inc
repnz
mov
mov
imul
das
xchg
add
jmp
inc
push
rorb
or
and
push
sbb
or
jns
add
out
and
push
stc
icebp
add
ljmp
and
cmp
pop
lea
out
push
inc
int
and
mov
fisubl
or
fs
divb
adc
jecxz
or
push
pop
jmp
and
inc
adc
sub
xchg
ret
push
mov
mov
ficoml
out
add
push
icebp
mov
xchg
or
mov
adc
subb
shll
das
sarb
cld
jmp
dec
jnp
or
les
adc
popf
xchg
add
test
add
ja
sbb
add
gs
lock
jge
cld
fiaddl
iret
lret
sbb
daa
mov
das
mov
repz
or
cli
mov
pop
push
in
sub
loopne
xor
push
hlt
pop
pusha
shll
mov
or
dec
sbb
xor
dec
popa
or
add
cmp
dec
push
call
arpl
xor
jg
adc
push
xchg
cmp
fsubrs
nop
mov
test
pop
mov
in
dec
add
faddp
dec
mov
mov
andb
add
mov
insl
out
scas
js
rolb
divb
jne
sbb
fidivs
jl
imul
outsb
inc
outsl
rcrb
bound
adc
test
scas
mov
fwait
cwtl
xlat
and
push
addr16
je
or
je
push
xor
push
xchg
out
flds
dec
popf
std
imul
rolb
addb
xor
add
xor
cmp
and
sub
xor
sub
into
add
mov
in
jae
sub
xchg
and
push
mov
add
fwait
xchg
dec
subps
cwtl
add
xor
push
out
addb
jo
mov
hlt
fwait
aas
mov
sbb
adcb
push
out
enter
pusha
xchg
xor
dec
add
js
jbe
mov
add
or
cwtl
and
jo
or
in
xorb
fadd
and
lock
and
or
xor
adc
mov
ljmp
push
in
fisubl
pop
and
cwtl
jmp
push
mov
out
xchg
scas
iret
std
add
rclb
xor
and
mov
sub
icebp
add
pop
call
mov
cli
popa
sbbb
scas
xchg
testb
stc
dec
dec
xchg
and
fsub
add
adc
xor
fidivrl
ret
sub
push
mov
adc
mov
mov
or
cwtl
inc
dec
xlat
ret
and
lcall
and
cltd
call
pusha
sub
mov
mov
or
sub
inc
sub
test
and
in
xor
notl
pop
mov
out
in
pushf
add
adc
cld
pop
hlt
cmp
dec
mov
fsubp
pop
xchg
add
nop
or
xchg
ret
xchg
sub
dec
call
xchg
mov
sub
pop
dec
data16
divb
mov
sbb
leave
add
and
mov
mov
pop
push
cmpsl
and
loope
addb
adc
xchg
add
and
xchg
sbb
or
push
int3
nop
xchg
loop
dec
lds
sub
cld
add
inc
mov
fs
icebp
sub
push
idivb
and
add
mov
add
push
or
pusha
ds
mov
popf
jl
daa
adc
lods
call
and
scas
add
sbb
push
outsl
sub
fsubrl
or
pop
shll
std
fwait
inc
add
sbbl
clc
hlt
jl
add
jb
add
stc
add
addl
out
rcll
xor
inc
dec
add
mov
push
mov
popf
add
test
aad
cwtl
sub
or
lds
add
add
inc
and
mov
inc
xchg
xchg
ds
imul
loope
sbb
mov
xor
cwtl
pop
dec
stc
js
arpl
movsb
xchg
adc
jl
fistps
xor
pop
cmpb
and
add
fs
fidivrl
add
negb
xchg
push
fstps
adc
mov
rol
pop
mov
jge
out
pusha
shrb
xchg
test
aaa
aaa
shlb
jmp
cli
mov
aaa
mov
mov
mov
lods
pop
pop
test
ret
shrl
mov
jnp
dec
addl
mov
stos
xor
subb
xor
rolb
push
push
sahf
mov
mov
pop
inc
cmpsb
ret
xchg
pop
pop
pop
inc
dec
mov
addl
lcall
rcrb
data16
add
xchg
pop
aad
out
in
mov
xor
shlb
mov
push
xlat
jae
movsl
xchg
mov
mov
loopne
clc
rorb
sub
hlt
mov
shll
inc
sbb
jl
rorb
insl
in
cmp
mov
mov
mov
adc
mov
add
inc
and
andb
mov
scas
cltd
loop
dec
cmp
mov
insl
xchg
andb
adc
ret
or
lock
andb
push
mov
push
sbb
sahf
inc
cmp
xchg
nop
test
fbstp
add
push
inc
jb
mov
movsl
or
sbb
scas
fwait
clc
mov
add
xor
adc
ljmp
lock
bound
faddp
movsb
sbb
fs
xchg
mov
or
lods
inc
add
mov
jmp
fdivrs
mov
pop
and
inc
pop
pop
and
xchg
push
add
ljmp
jl
shl
cmp
test
cli
call
jecxz
adc
or
mov
insb
je
and
add
inc
push
add
in
movsb
lret
daa
bound
les
std
or
sbb
or
bound
movsl
ud0
mov
xlat
movb
int3
mov
xor
mov
jge
pusha
adc
add
fmul
adc
lods
xchg
rcrb
fisubrs
or
test
lcall
pop
and
and
adc
pushf
movsl
in
adc
aas
add
pushf
int3
mov
inc
lock
pop
dec
rclb
cmp
mov
cmp
test
and
jo
add
fs
xchg
addr16
inc
popf
inc
mov
pop
sti
xchg
cmp
cmpsl
add
jmp
pusha
add
fs
leave
mov
sbb
or
pushf
sbbb
mov
pop
fsubs
mov
in
jecxz
jg
jmp
or
addr16
sbb
push
enter
and
ja
add
inc
sub
arpl
pusha
xchg
add
sub
push
movl
insl
ret
push
cld
fstl
out
or
add
negb
mov
add
lds
mov
xchg
fmull
mov
fstl
cltd
call
fwait
aam
add
mov
popf
mov
mov
cli
aam
pop
mov
xchg
into
add
jmp
clc
cli
lahf
xchg
and
lods
out
adc
inc
stc
sarb
daa
fadd
or
adc
add
xchg
and
or
add
adc
add
rcll
sub
and
adcl
js
inc
sbb
push
test
push
fnstsw
cmc
fidivrl
stc
mov
cmp
and
mov
in
cmp
jne
push
std
cld
orb
jnp
sub
sub
adc
repz
xor
jg
or
pop
add
gs
mov
inc
and
add
movsl
gs
and
or
push
dec
add
mov
mov
sbb
popa
repz
loope
add
pop
xor
pop
orl
sub
call
inc
push
xor
inc
pop
mov
test
leave
dec
fsts
mov
mov
jno
cmp
mov
push
and
les
enter
inc
add
mov
xchg
adc
or
mov
movsb
adc
add
add
push
addl
adc
jle
sbb
push
popf
add
xchg
cld
lret
add
push
dec
add
and
test
or
mov
pop
dec
arpl
dec
and
lods
out
jb
add
mov
xchg
adc
add
pop
rclb
stc
pop
popa
cmpb
add
fwait
inc
mov
xchg
pop
out
cmp
or
pop
add
rclb
sahf
lret
shr
sbb
mov
mov
mov
dec
in
adc
add
ds
hlt
and
cwtl
ds
add
mov
cli
add
scas
cltd
pop
mov
cmp
sbb
nop
jge
mov
cwtl
xchg
xor
and
mov
push
and
or
sbb
jl
mov
push
pop
jns
xchg
mov
mov
cmp
mov
jne
lock
mov
ja
jmp
daa
pop
add
pop
push
sub
add
xor
and
mov
pop
repz
mov
aam
jns
add
cmp
add
add
insl
dec
ja
shlb
add
sti
aaa
hlt
lock
or
adcb
mov
shlb
int
loop
push
in
loopne
mov
sbb
aam
arpl
mov
lret
xorb
repz
lret
mov
jae
add
mov
push
shlb
sub
add
pusha
pop
hlt
inc
cli
add
mov
imul
mov
or
xchg
int3
xor
add
pop
add
test
scas
jo
and
pop
add
movsb
mov
adc
jo
or
pop
adc
add
sub
outsb
aam
add
xor
add
mov
cltd
fidivrl
incl
sub
dec
stos
iret
or
fs
sbb
cmp
cmpb
sub
lahf
iret
in
pop
loopne
fdivrs
clc
add
adc
cmpsb
mov
push
fs
outsb
mov
add
loop
add
std
or
lret
pop
fisubs
jle
jne
arpl
daa
in
pushf
add
inc
push
insl
inc
pop
mov
inc
out
add
loope
popa
repz
mov
pop
arpl
and
add
subl
std
adc
sbb
adc
js
jns
and
scas
mov
or
pop
cltd
rolb
mov
mov
hlt
pop
pop
add
sub
pop
dec
adcb
adc
fidivrs
inc
push
das
add
orl
cmp
adc
cld
adc
adc
stc
ret
mov
pop
xor
repnz
cmp
mov
inc
mov
jle
inc
or
shll
mov
add
sub
xorb
lock
testl
jl
ljmp
xchg
stc
js
jmp
mov
ret
xchg
xchg
and
or
fdivrs
jae
dec
and
adc
pop
sbb
imul
addl
clc
pop
dec
mov
test
cmp
lea
jbe
les
shlb
push
inc
xacquire
pop
icebp
stc
sbb
movsl
inc
lods
ret
scas
sbb
rcrb
xor
enter
push
inc
xorl
movsb
aas
repz
aaa
jmp
mov
sbb
push
add
sbb
xor
nop
add
popa
push
and
push
mov
or
add
rorb
xor
rorl
jno
adc
jecxz
aad
push
inc
sbb
test
cmpb
es
mov
out
jb
or
popf
inc
mov
mov
push
inc
in
and
xchg
shlb
loop
dec
jo
sub
jmp
add
jge
or
mov
je
mov
sbb
ret
adc
pushf
je
or
mov
insb
in
add
ljmp
add
es
aam
mov
fists
sahf
hlt
xorl
jo
dec
pop
cmp
outsl
aas
scas
rcr
adcl
push
fwait
push
mov
sbb
fadds
fsts
push
fs
add
push
movsb
jae
out
loopne
add
jb
stos
mov
fistps
lods
mov
or
xlat
movsb
push
mov
ficoml
pushf
mov
sub
hlt
add
insl
pop
lret
movzbl
mov
roll
sub
add
iret
and
mov
sbb
jb
or
je
push
int3
mov
faddp
imul
cltd
push
pop
jmp
jmp
fwait
push
or
iret
and
sub
adc
pop
fisttps
idivl
fdivrl
sbb
sub
rorl
mov
inc
mov
cmpsb
int3
sub
ds
add
outsb
push
push
inc
out
xlat
pop
pop
fcoms
popa
or
push
add
xor
jg
int
dec
xchg
inc
js
lds
cmp
mov
leave
add
xchg
inc
inc
adc
mulb
adc
aad
nop
or
add
sbb
cmp
scas
insl
sbb
rcll
aaa
bound
push
push
fwait
scas
fisttpl
adc
stc
sbb
add
ds
xlat
imul
inc
test
iret
repnz
stos
dec
andb
movsl
push
fs
pop
add
xor
pop
sbb
fcoms
lds
add
sub
mov
jl
test
int3
pushf
or
pusha
enter
dec
xchg
lods
and
pop
adc
cmp
cmp
add
les
call
sbb
add
dec
mov
arpl
cltd
lods
pop
dec
test
mov
loopne
pop
push
jno
mov
sub
inc
push
add
lcall
aaa
sbb
ret
daa
popa
clc
test
cmpsb
adc
cld
clc
lods
iret
scas
rolb
cmp
iret
sbb
pop
sbb
sub
es
add
inc
test
xor
pop
push
out
popa
mov
mov
push
rorb
insb
push
out
add
scas
cltd
out
xchg
push
inc
xor
push
sub
arpl
pop
push
push
pop
add
mov
test
mov
add
aad
fdivrl
xchg
adc
mov
and
inc
xchg
iret
cmp
add
nop
adc
ss
adc
jnp
lds
inc
call
pushf
and
movsb
in
and
jg
push
imul
cmpsl
sbb
mov
add
mov
call
aad
test
popl
xor
stos
imul
add
mov
add
loopne
sbb
pop
sub
pushf
push
cltd
roll
dec
lret
dec
adc
nop
mov
cmp
fs
sbb
dec
mov
fdivs
push
xor
jp
in
push
mov
xchg
xlat
dec
mov
and
mov
test
add
in
cwtl
rcrb
ja
adc
lahf
cltd
loopne
nop
nop
mov
push
mov
dec
xchg
cld
ret
push
popf
scas
out
add
out
mov
das
xor
xchg
bound
mov
xchg
jl
or
mov
test
mov
daa
adc
push
int3
mov
pop
cwtl
nop
loop
add
adcl
xor
loopne
int3
rcrl
and
sbb
hlt
pop
pop
jmp
jp
rolb
les
out
add
sub
test
loop
nop
fwait
add
push
cmp
add
push
add
in
pusha
add
mov
icebp
add
inc
jecxz
mov
adc
pop
and
mov
mov
cmpsl
cmp
push
or
mov
movsb
test
mov
sbb
xor
lock
hlt
fsubl
or
stos
faddl
dec
pop
xchg
dec
out
add
sub
sbb
add
add
sbb
push
repz
sub
test
rolb
cli
inc
add
xlat
shll
rcrl
cmp
jns
data16
icebp
mov
and
repnz
and
addl
dec
popl
add
mov
jl
out
stos
nop
movsb
mov
adcb
dec
loopne
loope
stc
adc
push
lahf
pusha
scas
or
cwtl
xor
scas
push
fiadds
shr
and
je
mov
das
ror
aam
adc
mov
mov
test
mov
mov
cwtl
lods
inc
adc
jmp
dec
inc
outsl
loope
cmp
adc
in
add
hlt
not
jbe
cmp
hlt
push
jecxz
mov
xor
or
in
das
and
insl
add
adc
fwait
xchg
add
sahf
ja
les
add
dec
outsl
shrl
jo
push
sbbl
sub
mov
inc
pop
adc
inc
xchg
jge
jnp
cltd
cwtl
stos
js
in
push
pop
mov
aad
divb
pop
stc
xor
stos
xor
in
adc
cld
adc
subb
pop
fcomps
lcall
push
jbe,pt
adc
repnz
add
mov
xor
addr16
fiaddl
push
jbe
jp
sub
xchg
cmp
or
pop
pusha
bound
xchg
nop
inc
cmp
push
sbb
or
xchg
push
test
mov
mov
dec
pop
xlat
push
call
inc
sbb
mov
fs
lods
test
out
add
cli
nop
enter
mov
in
jecxz
in
mov
pop
mov
movsl
insb
sub
adc
mov
jo
cmp
pop
test
mov
mov
adc
mov
add
xchg
inc
sub
cmp
jae
scas
cli
jmp
fsubrs
xor
mov
adc
fnsave
repz
push
xor
out
or
add
sahf
push
lods
dec
fprem
add
mov
or
fs
inc
mov
mov
testl
mov
add
scas
fwait
insl
xchg
mov
pushf
adc
cmpsb
mov
add
lods
mov
mov
lret
add
jbe
mov
sbbb
jne
insb
sub
push
lods
std
js
mov
push
push
and
sarl
stos
loop
mov
push
sbbl
nop
rol
adc
xchg
daa
cld
pop
xchg
in
sub
scas
icebp
xor
mov
pop
fcompl
arpl
adc
dec
dec
inc
xor
and
sbb
pop
push
lods
adc
fwait
call
sbb
in
add
scas
lea
mov
movsl
movsb
fwait
or
daa
rol
jno
xor
or
pop
ljmp
cmp
mov
add
loope
addl
inc
jl
or
lock
push
push
aas
daa
inc
mov
data16
add
cmp
inc
add
testl
repnz
fisubl
cmp
xchg
cmp
sub
aaa
add
xchg
xchg
arpl
movsb
xchg
sub
and
jno
addl
pop
cli
xchg
loopne
and
mov
adc
xor
mov
push
loopne
in
adc
sbb
and
sbb
xchg
lcall
daa
arpl
add
mov
mov
mov
test
mov
add
imul
xchg
add
cltd
js
or
inc
lds
push
mov
adc
into
pop
or
xchg
adc
cmp
add
inc
shlb
rcrb
loop
sbb
and
add
sbb
push
xchg
enter
xchg
sub
mov
cmp
xchg
subb
shll
enter
test
add
adc
add
cwtl
sbb
shll
rolb
stos
test
add
sub
cmpsl
icebp
daa
push
sbb
push
xchg
or
lods
pop
test
std
add
mov
das
xor
nop
fcom
dec
pop
jg
dec
xor
or
sbb
xor
pop
int
arpl
xor
les
xor
cltd
mov
fsubl
popf
bswap
leave
test
or
lahf
dec
mov
inc
loopne
pop
jmp
jl
add
mov
adc
mov
sbb
or
xor
or
lret
xchg
or
and
add
js
inc
orb
iret
cmp
mov
ret
aad
or
add
pop
push
xchg
lock
mov
add
mov
xlat
cmc
scas
fwait
das
xor
cmp
add
cmpsl
arpl
mov
add
adc
in
add
add
test
inc
mov
dec
bound
inc
ss
sub
inc
push
mov
jbe
loopne
jmp
push
andl
mov
push
lret
andl
and
std
adc
popa
test
adc
nop
mov
add
pushl
or
lcall
add
mov
or
enter
mov
insb
push
mov
iret
loop
shlb
and
mov
loop
add
popa
adc
push
std
mov
cld
jne
mov
inc
aam
push
shlb
popw
orl
bound
xchg
jmp
les
add
and
mov
add
sbb
xor
mov
mov
jmp
mov
in
call
mov
es
inc
arpl
nop
loop
and
mov
aaa
shlb
cmc
add
or
ret
cmpb
in
or
fptan
jmp
add
rcrb
cmp
sbb
mov
adc
pop
clc
mov
push
nop
hlt
dec
mov
mov
rcll
aaa
push
movsb
test
sbb
inc
repnz
adc
movsb
adc
mov
cli
lock
and
mov
sbb
inc
add
or
scas
xchg
ljmp
fnstsw
sub
sbbb
xor
sbb
arpl
pop
mov
enter
xor
jb
add
pusha
adc
sbbb
or
lcall
mov
ficompl
arpl
negb
rcll
sbb
jo
xchg
stc
enter
gs
std
aad
daa
lret
nop
in
xchg
and
inc
ds
lods
inc
ret
add
push
inc
aam
pusha
pop
or
arpl
sub
cld
mov
mov
sub
adc
rolb
out
jne
mov
scas
jo
and
xchg
or
push
mov
cmp
in
dec
or
test
or
enter
mov
jge
cwtl
imul
sub
and
adc
push
andl
fs
cltd
adc
rcr
aam
stc
call
add
mov
add
cmp
xchg
repz
add
pop
fcomps
test
fwait
nop
bound
sbb
cmp
push
test
jmp
mov
imulb
sbb
cwtl
or
push
jmp
lgdtl
cwtl
xchg
in
sbb
sbb
lock
sahf
cmp
hlt
lods
pop
inc
aaa
insb
inc
mov
mov
mov
dec
por
mov
sub
jo
sbb
adc
jecxz
arpl
imul
and
loopne
xor
push
sub
sbb
mov
push
xchg
sbb
fadds
sahf
mov
mov
add
fstps
xchg
mov
add
popa
incl
mov
mov
push
loope
pop
adc
cmpl
mov
sub
sbb
ficomps
jae
pop
xor
and
mov
pop
xor
lock
xchg
sbb
loope
aaa
jmp
and
mov
mov
insl
mov
adc
inc
popf
or
maxps
inc
inc
or
inc
js
dec
in
cmp
xchg
std
mov
mov
loope
lret
pop
js
lock
add
rcr
xchg
mov
mov
fcoms
test
arpl
add
sub
lock
inc
fdivrs
mov
mov
inc
outsb
cltd
xchg
and
call
in
subb
push
mov
lcall
fs
andb
jmp
test
push
push
add
mov
mov
ljmp
leave
test
xor
shll
xor
cld
push
mov
sbb
xor
adc
orl
push
push
add
in
push
inc
or
movsl
and
jmp
scas
dec
lret
loope
in
fcmovbe
jo
pop
sbb
gs
push
arpl
sub
add
pushf
mov
sbbb
inc
shlb
cltd
pop
push
in
cmc
nop
add
xchg
sbb
shlb
cld
xchg
mov
pusha
xchg
sub
in
loopne
movb
outsl
mov
cmp
insl
aaa
addr16
in
xor
dec
or
push
jecxz
cmp
dec
fsubr
jno
add
loopne
aaa
lcall
xorl
js
pop
add
int
insb
jno
xchg
andb
in
add
sbb
aaa
sbb
xlat
bound
dec
ret
sub
ror
das
nop
mov
stos
push
mov
test
or
push
shll
mov
popf
sbb
pop
xor
lcall
mov
sbb
imul
adc
mov
sahf
lock
lret
and
cmp
sti
and
inc
and
imul
inc
jg
and
fs
out
fmuls
pushf
nop
push
add
sub
mov
jbe
insb
mov
enter
sub
cmp
xlat
rcl
stos
push
das
push
cmp
es
sub
test
cmp
insl
fwait
mov
push
mov
mov
push
xchg
cwtl
out
jns
mov
es
les
jo
inc
dec
dec
ss
lods
add
mov
xor
pop
pop
sbb
dec
add
shl
stos
mov
inc
pushf
mov
mov
mov
mov
mov
inc
in
push
pop
xchg
cld
add
pusha
cmp
add
aam
push
and
je
add
xor
std
adc
add
cmpsb
or
cwtl
xor
wrmsr
push
test
cmp
iret
rcr
mov
faddl
in
cmp
pop
jl
push
xor
js
inc
dec
push
mov
aaa
push
sub
aas
les
mov
sub
bound
insl
cs
rolb
aam
mov
sbb
sbb
movups
xor
rorl
insb
shlb
call
pushf
sbb
notl
cmp
call
add
into
dec
fcoml
sub
jae
xchg
int3
cmp
movsl
mov
cmpsb
rolb
xchg
into
sti
cmp
cmp
mov
and
outsb
xchg
xor
cmp
repnz
xor
jle
imul
inc
and
mov
push
inc
js
in
and
fdivrs
arpl
xlat
fldl
xor
pop
pop
jmp
movsl
sbb
clc
data16
cmp
js
or
xor
fwait
pop
cs
stos
mov
cmp
and
mov
adc
jo
push
push
adc
add
cld
sub
sbb
jl
inc
sti
mov
xchg
aaa
mov
push
jp
add
add
test
les
push
add
and
call
ds
fisttps
shl
cmp
and
movsb
add
mov
or
cmp
or
xchg
enter
std
inc
mov
in
mov
adc
jno
add
xchg
or
mov
mov
xor
mov
stos
sub
cmp
and
sbb
fstp
add
arpl
dec
mov
jl
and
pop
sbb
ret
add
push
lahf
int
add
mov
add
mov
out
add
stc
cld
andl
and
jp
mov
stos
std
sub
aaa
jecxz
movsb
ret
or
pop
mov
les
mov
dec
cwtl
inc
and
mov
int3
and
stc
hlt
push
add
mov
sahf
pop
aas
sbbb
inc
test
cwtl
add
and
or
lret
jne
lea
mov
mov
adc
shll
adc
cmpb
sbb
push
or
xchg
das
outsb
mov
rcl
xchg
enter
lret
add
fstl
sti
hlt
rcrl
push
cmp
add
and
addb
pop
sub
shrb
push
inc
sbb
movsl
into
push
cmp
jge
push
je
aas
push
jle
out
pop
cmp
adc
push
adcb
int3
out
adc
add
xor
fnstcw
imul
inc
add
fildl
add
jle
scas
or
add
pop
ss
std
push
push
cmp
sahf
fucomi
or
xor
pop
sbb
push
fisubs
addr16
rorb
jl
loopne
ret
push
pop
decb
add
xor
cmp
or
movsb
loope
into
cmpsl
data16
or
lret
cld
adc
je
jne
xchg
imul
testb
data16
pop
loope
in
xchg
sbb
push
inc
std
negl
loop
mov
aad
xlat
rclb
jo
cli
sub
leave
in
std
push
dec
pop
popa
je
add
dec
gs
adc
pop
imul
cmpsb
pop
inc
data16
mov
rcrl
movsb
popf
jp
add
push
scas
dec
xor
sbb
stos
jo
sbb
cwtd
popa
jo
shlb
add
cwtl
and
add
adc
jae
daa
xchg
or
jg
ficoms
mov
dec
add
neg
int3
adc
dec
filds
xchg
dec
jp
xor
rorl
and
lock
adc
and
fsubr
add
add
lret
cwtl
lahf
xor
or
fisubs
js
push
pop
fmuls
icebp
pusha
rolb
pop
pop
mov
fadd
outsl
sub
adc
and
cld
iret
inc
add
xor
sub
loop
fcoml
add
loope
fmull
cs
imul
jecxz
push
xor
leave
iret
push
sti
adc
ljmp
mov
push
pop
in
xor
aad
dec
and
cmp
repnz
cmp
jne
ljmp
ret
jle
loopne
push
imul
add
cwtl
ror
inc
mov
mov
mov
mov
adcb
addb
jbe
arpl
rcl
aas
jmp
add
push
xchg
out
popf
sahf
or
push
dec
cmp
cmpsl
loopne
xchg
add
mov
mov
xchg
inc
mov
lock
push
lock
fidivs
jle
incl
shrl
addb
cmpsl
mov
mov
ljmp
fildl
sbb
and
mov
fs
push
jne
xchg
mov
push
out
cltd
adc
pop
andb
dec
mov
pop
xchg
or
movsb
add
test
dec
xchg
orl
testl
dec
dec
pusha
xchg
and
push
out
test
adc
dec
lret
xor
in
orb
xor
subb
or
or
push
push
lea
jmp
xlat
push
in
in
mov
pop
or
lea
push
mov
cmp
addl
or
add
mov
nop
or
push
jmp
loope
xor
cmp
jae
mov
sbb
rcrl
test
inc
push
ret
add
cmp
loop
sbb
testb
xorl
dec
dec
adc
add
ja
inc
inc
imul
movsb
inc
call
ds
sbb
push
repnz
ja
add
imul
or
lcall
xor
jmp
les
dec
inc
add
xor
or
inc
and
and
mov
bound
jmp
jge
adc
add
loopne
nop
add
mov
outsb
pop
leave
mov
push
add
sub
xor
leave
xchg
ja
push
mov
inc
sbb
adc
xchg
std
pop
ret
int
imul
inc
out
arpl
or
add
jle
add
cmp
gs
mov
and
add
inc
push
out
jp
xorl
or
add
outsl
div
mov
addb
adc
adc
dec
mov
xor
mov
and
adc
push
out
and
adc
in
xchg
add
dec
jno
sahf
insl
and
xor
add
dec
inc
ret
and
mov
mov
lret
push
pop
rcll
cmp
dec
dec
clc
aas
pop
outsl
repz
pop
adc
or
cmp
push
sbb
xor
insb
add
mov
jmp
add
ret
or
lret
add
push
and
mov
iret
adc
mov
int3
adc
das
pusha
cmp
jecxz
je
add
cmc
lods
mov
add
lds
or
imul
jne
psubusw
jp
adc
mov
dec
xchg
push
push
sahf
push
je
adc
fistpll
dec
pusha
mov
stos
add
test
jge
test
arpl
sub
mov
xor
mov
cmp
push
xchg
enter
dec
enter
jmp
cmp
dec
adc
jno
add
cwtl
pop
fbld
enter
mov
lods
cmp
mov
ror
mov
or
test
cli
loope
cmpsl
lods
mov
dec
test
lret
cmp
and
jg
xchg
dec
xchg
dec
pop
dec
cwtl
xor
lods
add
arpl
push
cs
add
pop
push
lods
jbe
int
pop
cmpsl
push
daa
push
nop
enter
fadd
push
xor
cmp
cli
sbb
pusha
sbb
pusha
das
and
mov
shl
push
push
ret
push
and
add
js
adc
and
pop
outsl
cld
add
out
xchg
mov
clc
mov
enter
pushf
add
lea
adc
sub
add
lock
mov
jmp
cmpb
rcl
int
adc
jge
mov
xor
adc
sbb
jge
add
pop
js
or
xchg
popa
add
jnp
mov
adc
mov
cmp
push
add
sub
xchg
and
popf
inc
outsb
adc
jne
add
sbb
faddl
gs
xchg
in
xchg
xor
dec
ljmp
cmpb
and
lea
pop
mov
add
cltd
push
cmc
xchg
nop
loop
inc
hlt
pop
jo
sub
insl
in
out
cmpl
mov
roll
je
add
pushf
sbbl
movsb
addb
lret
mov
cmpsb
in
mov
adc
mov
xor
test
pushf
pushf
inc
xor
mov
add
xchg
cwtl
cmp
pop
and
iret
xor
cmpb
and
mov
inc
or
test
and
dec
shll
and
mov
xor
lahf
xor
push
jns
shlb
pop
std
lods
shl
xchg
sub
sbb
adc
pcmpeqw
pop
pusha
test
push
inc
inc
inc
jno
mov
or
dec
pop
repnz
push
loopne
clc
add
sbb
fwait
fs
mov
ret
xchg
sbb
lock
dec
push
iret
or
xchg
push
jb
stos
jle
fsubs
rcrb
subl
movsb
mov
cmp
cmp
adc
add
in
jo
mov
or
inc
mov
adc
push
push
pushf
pop
push
out
mov
push
or
js
sysret
lock
cwtl
lods
and
outsl
push
into
inc
inc
loop
add
sub
cmp
jecxz
sub
sti
cmpsb
pop
adc
mov
mov
fnstsw
out
add
lret
sub
das
dec
xchg
fs
xor
movsl
fidivrl
inc
ds
stos
rorw
xchg
jnp
cmp
xchg
fldcw
je
cwtl
arpl
add
lock
daa
loopne
fsts
cld
imul
mov
test
or
jge
adc
and
test
pushf
pop
lods
adc
mov
aas
pop
inc
cmpl
inc
cmp
sbb
cmp
push
ds
fiadds
mov
inc
clc
and
add
fists
es
pop
push
xchg
inc
dec
add
mov
test
nop
rclb
fsubrs
pop
dec
push
lock
xorb
add
jo
lea
inc
fwait
arpl
bswap
sbb
inc
mov
adc
jne
inc
nop
pop
xchg
insl
add
std
dec
subb
mov
pop
arpl
push
popf
pop
orb
add
call
lret
cltd
push
pop
nop
ja
test
mov
pushf
adc
xchg
cmp
movsb
data16
jb
dec
mov
ds
add
sub
int
mov
mov
cmpsl
ret
rorb
cltd
cmp
lock
dec
sub
xlat
pop
adc
dec
sub
cmp
stos
xchg
or
repnz
int3
add
jp
adc
cmp
add
mov
mov
call
stos
xchg
call
dec
cwtl
sbb
inc
or
arpl
jp
jne
jno
das
push
cmc
pop
sub
cwtl
push
xchg
mov
adc
push
dec
orb
push
jl
inc
mov
loop
sbbl
inc
push
rolb
fs
jge
adc
leave
imul
adc
faddl
dec
sub
cmp
sbb
mov
dec
sbb
mov
mov
add
pop
xor
add
neg
inc
xchg
fwait
addb
jns
cmp
lods
dec
lock
sub
sbb
mov
fcmovb
nop
cmp
xor
xchg
sahf
cmp
mov
jns
mov
fs
add
xchg
inc
add
mov
mov
add
ret
add
loope
sbb
repnz
rcrb
add
cmp
aam
loop
loopne
ret
popa
push
adc
cmpsb
jb
adc
sub
add
mov
jbe
add
stos
loop
jle
sahf
add
pop
jo
dec
jmp
push
fimull
fcoml
sbb
lahf
or
hlt
fwait
xor
xor
shrb
std
pusha
das
imul
mov
mov
pop
push
xchg
adc
rclb
add
test
xor
mov
cmpsb
cwtl
dec
jae
mov
loopne
orl
xchg
adc
mov
fldl
jecxz
cld
push
test
sub
cld
test
fisttpl
inc
and
jmp
push
add
push
dec
xchg
xor
sbb
aas
push
adc
pop
adc
mov
dec
das
mov
add
mov
inc
push
jp
cwtl
adc
addl
add
clc
call
mov
sbb
mov
jno
ljmp
adc
pusha
cmpb
pop
sarl
add
xchg
mov
addb
sbb
push
or
and
xor
cli
int
mov
cmp
add
xor
jb
jmp
push
or
mov
shlb
xor
jne
pushf
fwait
xchg
pusha
sbb
orb
pusha
filds
sarl
inc
push
jne
xor
add
push
mov
ljmp
push
sbb
mov
cmpl
pusha
inc
adc
aas
dec
xor
push
sbb
arpl
add
loope
stos
add
ljmp
cmp
push
ss
jle
and
add
inc
fldt
adc
ljmp
mov
and
pop
lock
and
add
imul
mov
mov
adc
insb
xchg
xchg
in
and
jmp
mov
and
ds
lods
pop
adc
mov
add
jg
cld
dec
cmpsl
mov
in
lds
test
xor
rcr
inc
or
push
xor
hlt
lcall
jle
sti
and
or
rorb
push
mov
orb
test
mov
and
es
pop
adc
lcall
push
insl
pslld
cmpl
cmpsb
adc
push
nop
out
push
add
mov
cli
xchg
add
leave
cmp
mov
dec
adc
scas
and
xor
pushf
rclb
add
jnp
inc
sbb
jae
add
adc
arpl
pop
pop
stc
adc
lea
add
mov
jns
sbb
int3
xchg
push
sbb
cmp
aam
in
xlat
add
fcompl
mov
and
jmp
mov
mov
rcrb
in
jmp
sbb
ss
adc
xlat
adc
scas
fldl2e
ret
lods
cmpsb
test
mov
xorb
loop
xchg
mov
arpl
xor
lods
jg
add
call
add
cmpsb
push
into
fldl
push
icebp
mov
cli
cwtl
cld
sub
adc
fs
mulb
push
pop
xchg
add
pshufw
pop
cld
xor
nop
add
sahf
test
inc
jno
ds
xchg
out
dec
rorb
adc
jp
es
push
js
fwait
insb
cmpb
test
xor
xchg
jecxz
sbb
jns
sub
sbb
enter
add
pusha
mov
outsb
sub
add
popf
push
inc
mov
int
jo
ficomps
aas
mov
movsl
rcll
mov
pop
mov
and
adc
fs
ljmp
nop
jmp
mov
add
sbb
ss
add
mov
cmp
loopne
sahf
pushf
xor
cmp
dec
cli
xor
imul
xchg
dec
flds
loop
nop
pop
gs
adc
imul
sbb
xchg
jecxz
add
sti
jo
add
mov
stc
add
push
adc
pusha
jmp
dec
sub
xor
pop
lods
adc
lret
pop
add
imul
shll
add
adc
dec
mov
insl
add
dec
xchg
fnstsw
add
outsb
jnp
test
mov
and
add
add
mov
inc
xchg
dec
push
inc
shrl
pop
xchg
xchg
add
add
insl
pop
addb
daa
or
pop
rolb
sub
pop
mov
sahf
cmpxchg
push
rcrb
sarl
mov
out
stc
add
orl
or
mov
push
mov
push
lods
in
int3
sbb
mov
xor
pop
cmpsb
jne
sbb
lret
mov
mov
mov
add
jg
push
push
mov
out
add
dec
push
in
inc
push
jg
mov
cli
cld
faddl
repnz
mov
inc
or
jae
testb
test
xchg
loopne
add
ds
or
jl
xor
sarb
sub
pop
in
xchg
cwtl
ret
verw
int3
cld
loope
not
xor
jno
shlb
add
insl
dec
add
mov
in
xchg
mov
fsubrs
pop
scas
bnd
mov
gs
pop
ss
loopne
add
adc
or
inc
and
stc
or
pop
sub
or
insb
sub
jmp
mov
jae
int
mov
loop
insl
xchg
mov
and
les
sbb
and
aas
sbb
push
lds
adc
pop
test
jb
push
out
jo
xor
mov
xchg
jle
rcl
sbb
jmp
jmp
add
outsb
movsl
add
push
stos
pop
add
mov
mov
cltd
data16
cmovge
ds
js
add
jno
in
aas
or
jl
icebp
cld
movsb
add
jmpw
and
xchg
push
xchg
insb
movsl
cmp
push
fistl
add
dec
mov
dec
add
je
pop
dec
mov
push
pusha
test
add
addb
fwait
clc
fldln2
adc
mov
test
lret
jae
push
inc
push
cwtl
and
jne
sbb
add
lock
loope,pn
and
es
jbe
std
xorb
or
add
sub
ds
fisttpll
fsubrl
dec
es
addb
push
and
or
dec
xchg
mov
sub
loope
add
jmp
mov
push
push
or
add
mov
testb
and
icebp
mov
pusha
cwtl
xor
dec
jo
test
cltd
push
scas
xchg
mov
jb
add
int3
movsl
pop
mov
aad
mov
xor
repnz
pop
cltd
add
mov
add
mov
mov
add
and
nop
cmp
andl
push
sub
cmpl
mov
sub
out
pop
loop
pop
pop
add
adc
icebp
add
ret
rcll
adc
cmp
mov
dec
rclb
cmpxchg
push
shrl
in
mov
add
test
mov
sbb
mov
jmp
inc
sbb
add
jno
nop
sbb
mov
aad
or
xchg
pop
js
shlb
notb
mulb
xor
add
inc
xchg
scas
loope
hlt
jbe
add
int3
sbb
pop
mov
nop
add
sbb
shll
fsubl
aam
push
imul
add
mov
lahf
cmp
add
sub
push
in
add
insl
pop
pop
jns
sbb
pop
out
jg
mov
pusha
or
repz
mov
cmp
rcrl
jb
loope
pop
inc
mov
js
xlat
mov
das
out
and
xchg
sub
leave
push
inc
mov
xchg
push
repz
iret
shl
jecxz
mov
out
add
push
aam
or
cmp
adc
sub
dec
les
cmc
xchg
cmp
add
rol
mov
test
jne
mov
pusha
insl
adc
enter
jg
cmp
add
shl
in
pop
xchg
add
loop
xchg
psadbw
jb
pusha
shlb
add
mov
xorl
lock
cmp
idivl
hlt
ja
xor
enter
dec
aad
mov
add
sub
bound
insb
add
jp
mov
movsl
dec
xchg
inc
cld
jl,pt
push
xor
lock
fst
sti
dec
out
add
xor
mov
cmc
icebp
in
xchg
mov
pop
sbbl
or
jp
jnp
or
lret
push
aam
jb
pop
mov
inc
cli
and
add
mov
push
pop
push
mov
mov
es
out
sub
aam
add
inc
sarb
mov
addr16
add
out
shr
mov
rorl
cld
movsb
add
cmpsl
in
outsb
and
sbb
lock
push
les
push
jge
add
out
mov
das
add
stc
in
or
call
add
mov
pop
mov
rolb
jg
in
jmp
aad
subl
mov
or
add
cmpsl
mov
mov
push
orb
push
xchg
cmp
add
dec
sub
movsl
push
cmp
out
pop
xorb
push
cmp
jg,pt
cmp
sahf
add
jge
sbb
push
test
xor
adc
arpl
adc
or
and
or
sbb
fisubrl
mov
pop
xchg
arpl
rorb
pushf
mov
sbb
add
or
add
pop
mov
je
xchg
in
add
test
and
ficoms
or
int
pop
mov
add
add
and
xor
outsb
mov
cmp
insl
and
fcmovnbe
and
gs
movsl
add
loop
add
jo
repz
nop
addr16
arpl
clc
pop
aas
ret
es
inc
xchg
cwtl
loopne
cmp
and
jnp
mov
pop
outsl
sbb
lods
test
cmpb
push
add
lret
andb
into
fs
insl
mov
or
add
fidivl
jne
or
mov
hlt
adc
inc
fdivr
pop
jns
cmc
mov
mov
dec
std
jne
add
sub
jecxz
lods
shll
lea
push
andl
sarb
add
xor
fsubrs
dec
pop
es
dec
push
pop
inc
stos
pop
nop
sub
faddl
out
movsb
xchg
mov
xchg
mov
cld
repnz
pop
jecxz
stos
in
pusha
test
lret
add
insl
sbb
adc
jmp
andb
nop
mov
add
cmp
push
add
gs
mov
push
jge
in
pop
mov
and
fucomip
sub
mov
adc
add
lret
and
loopne
fidivs
loopne
and
cmc
divb
sub
cmp
inc
lods
adc
mov
lock
iret
add
incb
mov
adcl
lods
mov
cwtl
mov
jle
fst
dec
add
adc
mov
inc
add
xor
test
add
xor
repnz
aas
popa
stos
insl
sub
sbb
add
out
leave
aam
fiadds
dec
sahf
inc
adc
fs
mov
ret
je
push
fisubrl
add
ljmp
adc
addr16
add
mov
xchg
jo
adc
pop
ja
inc
add
mov
adc
xor
add
ret
loop
add
loop
cmp
js
sbb
add
jmp
je
add
lea
xchg
int
add
mov
xor
dec
and
mov
mov
add
mov
aad
stc
mov
imul
cmp
and
fs
rcl
jl
cs
lock
out
jne
add
outsb
mov
or
cltd
push
sub
jp
add
js
push
mov
sub
sub
mov
ljmp
jo
pop
repnz
jecxz
subb
icebp
jno
push
dec
addb
fcompl
loopne
lret
ja
aaa
add
sub
leave
dec
cmp
je
or
subb
test
mov
and
sub
iret
fstpl
rorl
aas
cwtl
inc
pop
mov
lock
ss
ret
pop
adc
adc
movsl
push
jbe
push
ret
jae
pop
loope
cmp
iret
mov
push
stos
repz
cmp
mov
mov
dec
repz
pop
adc
out
adc
test
orb
xorl
pop
rcll
pop
add
add
enter
cmp
push
push
lods
sub
sub
push
adcb
push
xchg
loopne
lock
mov
clc
mov
push
xor
repz
out
mov
outsl
add
icebp
xchg
shrb
leave
dec
adc
mov
add
cmpsl
mov
popf
push
fwait
lea
rolb
mov
xor
cmpsl
sub
leave
not
jmp
lret
add
imul
add
or
clc
mov
mov
jno
out
outsl
fcomps
fildl
jge
push
fsub
mov
or
and
mov
push
repz
leave
movsb
add
sahf
mov
mov
and
in
sbb
dec
adc
insl
aaa
inc
dec
or
and
cmp
push
sub
jbe
dec
lret
adc
push
pop
jg
lret
add
movb
orb
les
pop
push
and
xchg
ja
lahf
mov
subb
hlt
adc
mov
adc
xor
jge
add
or
add
mov
mov
pop
xchg
pop
add
mov
adc
repnz
loope
adc
cmp
jp
icebp
fwait
xor
add
xor
fadds
add
mov
xchg
pop
cltd
pop
cmp
adc
rolb
mov
pop
cwtl
or
and
add
es
mov
pushf
xchg
mov
cmp
xor
mov
mov
push
movb
inc
les
pusha
mov
or
cli
xchg
dec
lods
adc
test
cmp
xor
xor
or
fcompl
push
imul
mov
sbb
inc
push
push
testb
or
stos
pushf
inc
jle
ja
add
cmp
xor
push
xchg
jmp
faddp
sbb
jo
adc
and
fimuls
lret
les
add
mov
push
mov
test
push
lret
or
call
fsubr
push
inc
imul
inc
jno
loop
and
xchg
mov
lret
cmp
addb
jmp
addl
ficompl
dec
cmovge
dec
faddl
jnp
pop
gs
and
test
mov
and
lock
stc
mov
push
mov
sbb
dec
cmp
add
xchg
jns
leave
and
aad
popf
pop
mov
add
into
pusha
test
fcoml
lods
push
cmp
push
add
xor
pop
or
faddl
sub
test
sbb
out
sub
test
ja
inc
cmp
pusha
mov
movsb
lds
rclb
test
mov
stc
rcr
add
fistl
testb
pop
cmp
and
add
cmp
mov
push
outsl
mov
push
pmaxsw
pusha
popf
aas
push
cmpl
imul
adc
out
bound
cmc
shll
dec
and
mov
int
nop
inc
push
les
mov
ds
jmp
icebp
jo
pop
add
jle
add
pop
in
xor
jne
push
fwait
add
xor
into
inc
lret
cmp
je
fisttps
add
cmp
add
push
dec
test
inc
int3
mov
push
dec
xchg
adc
mov
push
or
jmp
mov
lods
add
inc
jb
test
mov
ss
or
mov
adc
mov
mov
ja
inc
push
ret
ss
adc
and
mov
lea
lcall
movb
fwait
mov
push
dec
lcall
pop
loop
mov
data16
push
ss
cmp
clc
push
test
xor
add
das
adc
pop
lds
mulb
nop
push
ds
add
or
add
add
push
xor
xchg
xor
in
xchg
adc
cld
lods
incb
js
xor
jae
stc
scas
add
shll
jecxz
mov
inc
faddl
hlt
cmp
pop
add
imul
sti
rcrb
ret
add
lock
push
es
mov
popa
dec
cwtl
pop
jmp
jo
in
push
inc
arpl
sub
ficomps
cmp
mov
xchg
daa
loope
sub
sub
mov
cltd
les
icebp
aaa
mov
add
push
iret
repnz
push
fsubrl
mov
pop
mov
add
rolb
or
mov
add
push
pop
je
lods
into
xchg
cmp
xor
xor
pmulhw
jg
outsb
mov
rcll
cmp
mov
xchg
dec
cmp
loope
add
enter
nop
movl
pop
mov
add
orb
add
fstp
or
rolb
add
xlat
sbb
and
icebp
add
sub
cltd
pop
xor
or
cli
clc
add
add
aaa
cwtl
data16
push
xlat
daa
mov
fisttpll
call
adc
cs
sbbb
mov
push
pop
adc
out
pop
dec
mov
inc
stos
add
inc
insb
push
pushw
repz
add
cmp
lahf
jecxz
cmp
add
add
cmp
add
or
mov
cmc
loopne
jmp
gs
out
ja
or
aas
push
and
pusha
mov
mov
ret
test
cwtl
aad
jnp
mov
insl
add
pusha
rclb
add
jecxz
pop
daa
push
lcall
sub
in
add
imul
mov
faddl
sbb
add
sub
das
add
pop
mov
xchg
pusha
int3
in
adc
pop
add
and
test
and
int3
sbb
push
pushf
hlt
or
sarb
es
adc
mov
daa
inc
and
lods
add
mov
lret
add
test
inc
stos
je
adc
testb
mov
cmp
jnp
add
jno
pusha
and
add
jle
movsl
sti
mov
xor
or
imul
fwait
nop
sbb
xchg
adc
addb
notl
in
mov
push
jp
add
imul
stc
test
pop
adc
mov
cltd
add
cld
sti
sub
test
lret
add
push
sub
cmp
stos
add
push
into
das
add
test
sub
aaa
out
inc
xchg
in
add
cmp
push
add
jb
inc
inc
int
add
leave
sbb
mov
jns
jl
push
sahf
cli
sub
mov
add
cmp
lods
mov
xor
cmp
orl
inc
or
mov
nop
imul
push
xchg
clc
hlt
pop
mov
aam
mov
nop
sbbb
ret
and
xlat
bound
jnp
aam
js
xor
pop
fisttpll
sbb
fcoms
hlt
sarb
movl
repz
or
sub
andb
pusha
add
and
inc
mov
shl
icebp
or
cmp
out
and
add
loopne
xchg
stos
inc
cmpsb
fldl
jns
shrl
cmp
push
cmp
or
jae
push
push
sbb
mov
js
pusha
sub
and
ljmp
and
jecxz
xor
dec
mov
add
pop
xor
mov
dec
jle
fldcw
sbb
data16
mov
mov
stos
cmp
sbb
inc
pop
fdivrl
xor
lret
inc
add
jl
dec
vmread
and
mov
mov
mov
outsb
sbb
lods
popl
push
sbb
xchg
or
pop
adc
neg
shrb
int
jge
add
cwtl
mov
or
rclb
mov
mov
test
or
cmp
aam
scas
mov
ds
addr16
es
clc
add
mov
pop
popa
out
xor
aam
test
enter
mov
cli
cmp
pop
and
adc
pop
push
fnsave
lcall
push
rcr
repnz
sbb
cmp
lar
dec
pusha
push
xchg
push
je
scas
add
fs
inc
loop
add
jae
pop
sbb
cmc
cmp
pusha
mov
and
dec
cmp
in
or
mov
add
rcll
add
jns
sti
and
in
adc
addb
mov
dec
jl
into
pop
sbb
loopne
adc
jae
xlat
cwtl
pop
das
inc
push
insl
fdivrl
lahf
xchg
repnz
push
inc
hlt
es
add
cmc
push
hlt
dec
and
mov
jb
add
jno
cmp
fisubl
stos
xchg
xchg
mov
adc
inc
pop
inc
mov
stos
xchg
lret
mov
jecxz
imul
popf
aam
pop
les
loopne
arpl
adc
pop
out
mov
pop
xchg
in
xchg
adc
push
cltd
xorb
or
add
loop
sbb
or
push
mov
cli
ja
lcall
or
lock
inc
nop
pop
sbb
xchg
adc
hlt
xlat
mov
sbb
jnp
mov
add
xor
dec
dec
roll
cmpb
cmp
sub
xchg
xchg
jbe
lret
outsl
add
cmc
pop
add
sub
inc
add
pop
out
push
ret
add
push
mov
cmpsl
mov
cmp
mov
and
mov
pop
jns
fwait
imul
lock
push
jo
sbb
ret
mov
mov
ljmp
lret
push
nop
bound
enter
rcll
std
out
inc
das
mov
or
cmp
clc
push
jp
add
xor
add
ljmp
pop
dec
loop
jb
pop
xchg
fimuls
mov
pop
subl
xchg
jo
inc
add
rclb
fsubs
cli
push
sbb
imul
mov
mov
or
fnstenv
or
inc
xchg
loopne
mov
xor
add
push
popf
push
shll
push
jle
cmp
xchg
sub
xor
push
sub
sub
add
sbb
stc
fs
sarb
add
es
bound
sbb
das
movsb
xor
pusha
mov
cmp
xorb
cmc
pop
arpl
test
cmp
mov
repz
shlb
in
mov
add
ds
jae
pop
and
inc
jg
not
inc
or
mov
sbb
inc
hlt
xchg
push
add
sbb
sbb
subps
xor
mov
add
inc
add
or
sub
push
add
lahf
adc
lret
roll
sub
test
sti
or
insb
das
add
push
movsl
mov
and
add
shlb
lcall
inc
jl
popa
cmp
inc
or
aam
or
push
mov
pop
jo
xchg
add
adc
xor
bound
add
sar
add
add
pushl
add
in
jge
xchg
test
and
inc
mov
stc
jns
add
add
cmp
xchg
loope
pop
addb
hlt
push
fninit
sbb
add
xor
mov
xorb
imul
add
add
dec
loopne
in
adc
fldl
push
lret
enter
add
mov
mov
filds
mov
cs
sub
inc
adc
aas
add
idiv
xor
je
pop
mov
insl
addb
cmc
mov
ror
movl
cmp
mov
mov
add
mov
jg
add
js
lahf
xor
jo
stc
add
out
rolb
pop
add
xlat
mov
add
data16
add
jbe
xchg
incb
sahf
jo
das
movsl
xorb
ljmp
sbb
sbb
mov
sub
imul
push
movsl
add
leave
cwtl
dec
jmp
add
lahf
inc
out
and
rolb
push
or
out
imul
daa
xchg
rolb
jbe
dec
cmp
or
mov
jg
jmp
ja
xchg
mov
subb
scas
lret
xchg
clc
hlt
lcall
jne
sub
push
add
sbb
in
jns
clc
aas
cltd
insb
add
dec
jle
mov
dec
mov
pop
repnz
and
inc
xchg
xor
jg
dec
cld
cmp
adc
lret
mov
mov
fs
call
pop
fildll
lret
jmp
fimull
xchg
dec
inc
add
adc
leave
pop
shrb
add
jmp
inc
fwait
mov
clc
stos
add
add
incl
push
lea
mov
xchg
add
stos
adc
adc
in
ss
jbe
pop
sub
add
daa
test
cmp
popf
test
loope
add
popa
mov
jno
hlt
sbb
repz
cld
mov
add
mov
sbb
sbb
addr16
cld
test
xor
in
xchg
add
clc
flds
subb
scas
cs
add
dec
ret
xchg
add
pushf
add
addr16
icebp
lret
mov
sbb
mov
add
pop
loop
jg
and
pop
fcoml
sbb
pop
jmp
iret
shrb
xor
sbb
add
and
inc
push
dec
add
jbe
testb
xchg
test
pusha
push
les
adc
sbb
cmpsb
inc
mov
mov
leave
out
xchg
cs
jg
mov
jmp
pusha
xlat
dec
mov
out
in
mov
out
addb
cmp
jge
push
lock
cmp
add
adc
les
jno
hlt
pop
or
adc
add
js
or
icebp
and
mov
popf
add
push
mov
adcb
mov
loop
inc
pop
es
push
push
aam
adc
insl
dec
subb
add
test
dec
call
add
stos
dec
xchg
fcoml
shrb
mov
or
xor
mov
add
popa
sahf
movb
cld
xorb
adc
out
add
mov
xchg
nop
and
je
or
and
fnstenv
jno
mov
push
adc
mov
cli
and
mov
outsb
mov
or
aaa
jl
test
or
mov
pusha
out
pop
arpl
sbb
and
fs
inc
add
xchg
or
add
andnps
lock
in
mov
dec
das
call
and
andl
push
repnz
mov
cli
fsts
icebp
jno
in
fidivrl
add
pop
jl
ds
add
and
jmp
dec
mov
pop
idiv
fstpt
out
push
scas
jb
mov
add
pusha
cmp
mov
xchg
icebp
mov
mov
or
roll
orb
aad
jge
and
insb
addr16
add
xchg
adc
popa
add
push
jle
or
aaa
lret
int
inc
je
adc
out
fildll
add
mov
sub
les
inc
mov
in
aad
add
inc
scas
xchg
cmpsb
int3
popl
inc
lods
xchg
xchg
cmp
cmp
mov
push
push
add
je
ltr
adc
jnp
leave
out
stos
add
sbb
sbb
add
int3
arpl
popa
cmp
les
fsubr
in
jae
ret
mov
adc
into
jns
xor
add
mov
outsb
in
in
sub
push
dec
inc
fistpl
or
nop
in
mov
lahf
mov
loopne
hlt
push
out
xchg
adc
add
pop
jae
add
push
adc
pusha
shrl
pop
in
faddl
push
dec
mov
jp
mov
lea
nop
push
jl
rolb
or
add
ret
mov
dec
es
mov
jl
fcomps
dec
test
test
addl
xchg
push
dec
ret
cmp
mov
xor
pop
sbb
std
pusha
jge
pop
das
fwait
call
gs
pusha
lock
sbb
sub
xor
mov
dec
pushf
xlat
or
mov
cmp
cmp
mov
xchg
or
test
imul
sbb
and
inc
dec
popf
fidivs
jo
add
lahf
push
jmp
sub
mov
add
xor
mov
pop
xchg
addr16
xor
cmpsb
cltd
inc
sbb
inc
push
cmpl
cmpsb
clc
mov
ret
add
mov
insb
scas
xor
shlb
pusha
movl
cmovge
mov
fisttpl
cmp
pushf
sbb
or
add
jbe
sub
add
jge
mov
inc
add
ror
adc
fs
add
or
jmp
cmp
cmc
jne
or
iret
cmpsl
loope
adc
push
cmp
js
mov
sbb
je
sahf
sub
and
imul
jecxz
dec
add
xor
pop
pop
xor
aad
repnz
add
outsb
cld
jns
add
std
lock
pop
loop
into
adc
mov
inc
cmpsl
mov
push
lahf
mov
pusha
shlb
sbb
cmpl
fs
lds
scas
jge
add
in
ficoms
nop
incl
addr16
sbb
fdivrs
insl
add
jmp
jbe
cld
xchg
dec
add
js
push
or
push
shll
push
test
mov
inc
movsl
jg
mov
stos
shll
imul
xor
imul
aad
in
add
in
xchg
ret
and
mov
sarb
test
sub
xor
jl
sti
sbb
adc
xchg
in
mov
repnz
fwait
adcb
lea
popf
outsl
mov
loope
push
clc
add
mov
std
add
pop
and
sti
outsb
mov
push
idivl
cltd
movsl
cli
xchg
mov
enter
sbb
mov
les
jle
and
pop
fwait
mov
data16
bound
lahf
cmp
pop
or
iret
loopne
xchg
add
cmp
sub
addr16
in
adc
push
mov
inc
andb
add
ds
ret
sbb
mov
out
jle
aaa
mov
inc
jo
lock
push
add
cmpl
jl
je
idivl
insb
mov
jl
add
inc
lods
mov
stc
bound
decb
push
jae
imul
pop
lahf
shlb
fimull
push
fcom
pop
sub
mov
jle
mov
pop
and
in
shrb
les
pop
add
lea
pusha
add
in
test
mov
fcomps
andb
xchg
pop
dec
ljmp
inc
push
mov
pop
iret
call
sahf
add
aaa
sub
add
xchg
sbbb
and
je
pop
fldl
dec
in
add
mov
incl
ret
or
pop
mov
and
or
push
add
movsb
femms
pslld
shl
pushf
add
mov
sbb
imul
nop
jo
fstpl
pop
ljmp
cmp
fsubl
movsl
and
cmpsb
cmp
test
jno
popf
test
and
std
int3
add
mov
add
dec
popf
sbb
sub
push
push
mov
shlb
xor
sub
add
push
and
leave
fcmove
movsl
pusha
add
push
pop
daa
addr16
jp
cli
add
addr16
push
add
mov
push
hlt
mov
xor
mov
add
out
outsb
fwait
xchg
lret
stos
es
xor
add
pop
add
jge
add
cmp
nop
loope
bound
add
xchg
pop
push
add
or
call
or
pop
and
repz
bound
insb
pop
push
or
sbb
std
mov
call
cmp
push
aam
ret
pop
push
jecxz
dec
movsb
adc
lods
faddl
dec
xchg
xor
sub
and
add
inc
cmpsb
mov
mov
into
push
scas
daa
xchg
ja
or
aaa
lock
js
add
sti
inc
mov
neg
insl
cmp
add
lret
dec
int3
out
push
lds
and
stos
mov
push
push
pop
pusha
faddl
dec
cmc
movsb
mov
js
cld
mov
dec
dec
enter
and
xlat
mov
je
add
imul
or
outsl
std
mov
pop
jmp
insb
pusha
out
add
pop
cld
ja
mov
or
jbe
jecxz
out
adc
cltd
clc
rorb
cmp
pusha
adc
mov
jmp
pop
loope
inc
mov
cmpsl
out
jo
cld
sbbl
call
lock
stos
test
xor
xchg
pop
inc
testb
jnp
or
cwtl
xor
pop
je
loopne
adc
out
cmp
test
push
and
mov
leave
sub
mov
ss
sbb
add
mov
sbb
cli
add
test
sbb
mov
rcr
mov
or
add
adc
out
cli
mov
hlt
loopne
or
fwait
xchg
push
adcb
push
sbb
xor
inc
cmp
sbb
addl
add
neg
aas
in
enter
add
inc
mov
inc
push
push
mov
inc
fs
gs
mov
adc
loop
or
lock
mov
das
xor
movsb
add
push
and
inc
add
xor
lret
imul
adc
mov
pop
adc
cwtl
mov
jg
jecxz
sahf
jle
adc
mov
xchg
or
das
sub
dec
bound
or
pop
fists
add
cmp
rclb
cld
xor
push
xor
push
adc
repz
cmp
add
int3
sarl
lock
out
and
pop
push
loopne
cmp
dec
add
jno
xchg
push
xor
or
movsl
in
sbb
push
sub
pop
dec
xor
cmp
inc
lods
subb
lods
jg
movsl
out
enter
mov
out
sub
xor
cmp
add
mov
xor
sbb
dec
out
inc
inc
dec
and
ss
dec
adc
xchg
int3
pop
mov
inc
pop
addb
push
andl
shr
js
add
in
dec
adcl
popa
mov
loope
rolb
push
mov
add
fwait
cmp
jno
decb
scas
jecxz
jl
repnz
and
faddl
daa
bound
in
mov
mov
sbb
sub
or
cmpsl
test
fnsave
add
mov
cs
cmp
push
int
addl
out
arpl
daa
jmp
pop
je
sbb
xchg
lret
add
push
sub
dec
in
cmp
mov
icebp
add
adc
clc
push
inc
insb
add
xor
fsubs
lret
pusha
mov
jge
aas
xor
pushf
push
dec
push
xchg
pop
aam
lcall
cmp
jns,pt
add
jle
into
in
cmp
mov
pop
in
pop
mov
sbb
into
dec
mov
push
xor
test
lods
xchg
add
xor
xchg
add
jle
add
pop
dec
aad
sahf
xchg
sub
push
pushf
ret
rcll
inc
pop
mov
loope
push
daa
jns
jae
mov
call
push
mov
pop
xchg
add
dec
in
mov
inc
ljmp
int
add
jge
mov
mov
js
xor
out
inc
scas
xchg
jnp
sub
enter
loopne
ja
js
add
mov
jnp
pusha
loopne
in
push
fadds
xor
xor
pop
bswap
sbb
fidivs
sbb
pop
mov
mov
push
subb
mov
xor
push
psubb
push
insl
fstp
loopne
pop
or
or
mov
iret
pop
orb
mov
add
or
push
jl
adc
sbb
mov
cwtl
jmp
out
add
out
xchg
shlb
pusha
add
mov
mov
mov
jle
jae
fnstsw
rorb
in
cmp
dec
push
popl
dec
jmp
add
sti
pop
imul
add
cwtl
inc
les
and
adc
add
aas
cmp
loopne
shr
lret
mov
stos
sbb
clc
cmp
push
adc
mov
bt
and
mov
mov
lret
mov
add
jmp
xorb
sbb
lcall
push
pop
jns
out
scas
sarb
pop
push
sahf
sub
pop
push
cmp
mov
xchg
sub
mov
in
int
add
pop
cmp
push
add
cmpsb
sbb
mov
dec
add
jmp
xlat
add
scas
in
add
test
clc
mov
sti
lret
cld
adc
loopne
ja
pop
add
mov
push
cli
xchg
in
xor
sar
incb
add
inc
leave
jae
mov
cmp
loop
adc
out
mov
sar
pop
leave
jns
in
rclb
mov
adc
inc
in
pop
cwtl
add
push
add
out
pop
stos
cmp
sbb
add
xchg
hlt
ret
or
ficomps
mov
add
jno
in
clc
xchg
add
loope
or
and
mov
hlt
add
leave
sub
pop
or
bound
mov
add
push
pop
lods
cs
jmp
adc
ret
adc
add
arpl
jb
iret
lea
adc
pop
outsb
sti
rcrb
fimuls
mov
jns
test
cs
cli
lds
inc
subl
and
pop
test
fidivrs
jge
mov
pop
mov
lcall
push
incb
dec
jle
mov
cmp
add
mov
and
in
inc
test
mov
xchg
iret
cmc
mov
pop
or
adc
aad
les
out
xchg
pop
pop
add
dec
fstpt
addl
std
mov
ljmp
scas
inc
xor
xchg
ret
nop
or
aaa
sbb
fdivrl
push
cwtl
push
ficomps
rolb
out
aaa
scas
lcall
xchg
aas
xchg
ss
pusha
add
or
movsb
add
dec
aas
mov
das
adc
jae
mov
addr16
cltd
push
pop
xchg
jle
in
enter
cli
leave
ret
decb
jb
pop
add
filds
cmpsl
push
orl
pop
loop
jb
add
pop
and
jmp
or
push
jmp
sahf
in
jo
add
sbb
iret
inc
or
push
xchg
mov
jge
sbb
arpl
or
ja
stos
enter
bound
dec
scas
les
jae
pop
mov
adc
mov
bound
xor
add
daa
arpl
xlat
add
dec
add
xchg
inc
cwtl
push
mov
stos
leave
xchg
pushf
and
sbb
fstpl
fists
into
lahf
push
and
jae
imul
jle
add
dec
cmp
js
pop
pop
rcll
sub
dec
mov
stc
mov
pusha
je
cltd
in
out
add
mov
aas
mov
addb
adc
loopne
cs
cmp
jns
clc
mov
pushf
dec
adc
clc
movsb
leave
inc
pop
imulb
ljmp
test
xchg
cwtl
push
or
cmpb
jb
add
pop
sub
add
in
inc
sub
pusha
push
inc
add
in
mov
enter
or
inc
nop
push
mov
inc
sub
addr16
xchg
pop
arpl
aad
sbb
pop
inc
push
inc
add
cmp
jo
out
mov
add
mov
inc
in
add
cmc
popa
loopne
decl
lcall
dec
daa
add
pop
sub
cld
shrb
inc
out
add
inc
cmp
cli
repnz
push
int3
imul
pop
and
xchg
adc
pop
pop
add
jp
or
sbbb
mov
push
xor
and
and
xlat
mov
cmpsb
adc
imul
and
aad
mov
das
xchg
in
inc
push
pop
scas
mov
int
outsl
jo
loope
cld
pop
add
aas
dec
cmp
cmpsb
enter
adcb
inc
cmp
adc
testl
xor
lods
fists
jnp
leave
popa
aas
xor
roll
repnz
outsl
loopne
xor
xchg
inc
mov
lea
stos
fcoms
imul
push
and
sbb
cmp
in
js
and
cld
inc
insb
ljmp
negb
arpl
mov
fwait
pushf
mov
es
or
shlb
js
repz
in
add
dec
or
add
dec
into
imul
stos
bound
lcall
xor
out
add
repnz
sbb
insb
psrlw
outsl
push
das
jle
push
mov
mov
popa
lahf
inc
add
jo
jo
pusha
fbld
push
pop
mov
push
push
int3
mov
pop
enter
cmc
and
mov
mov
cmp
jg
mov
cmp
mov
cli
jecxz
mov
in
loopne
xchg
outsl
add
fcomi
test
cld
jg
setae
aam
xchg
hlt
aam
pop
push
outsb
or
pusha
inc
xchg
fistpll
ljmp
mov
pop
jns
pop
cmp
sub
add
and
out
xor
in
push
ja
clc
add
call
xor
js
popa
stc
sbb
imul
xorb
or
lods
call
pop
daa
lock
es
inc
add
mov
repz
inc
add
jnp
add
mov
jge
add
sub
push
and
sbb
dec
lds
adc
test
mov
shlb
jmp
inc
add
es
add
cmp
lea
cmc
sub
inc
sub
jb
dec
add
fcom
and
sub
sarb
mov
cmpl
inc
add
scas
sub
jo
add
aad
addb
mov
fstps
insl
xchg
test
frstor
pop
sub
push
pop
and
cmp
add
mov
xacquire
popa
ds
roll
mov
out
xor
in
gs
add
popf
jae
stc
stos
outsl
pushf
adc
jmp
repnz
add
xor
int
verw
das
sub
adc
mov
add
pushf
std
cmp
stc
add
out
jg
mov
push
leave
mov
inc
std
insl
or
mov
cmp
pop
pusha
test
or
pusha
ror
xchg
pop
mov
push
pop
jo
iret
xorb
aaa
or
mov
fdivrl
xchg
sti
mov
mov
dec
add
add
lret
aas
mov
stc
insl
add
stos
and
inc
mov
pushf
pop
add
xchg
dec
xor
adc
jl
jl
cli
data16
cmp
jle
roll
aam
cmp
test
sub
and
popa
into
xor
mov
jl
add
iret
aaa
dec
jne
add
push
or
xor
stc
xchg
lods
clc
xor
addb
jg
pop
xchg
cmp
jo
mov
rorb
add
cli
pop
mov
fistpl
adc
push
push
aaa
mov
xor
pop
addb
clc
xor
mov
fsubs
jne
orl
push
pusha
push
cmp
jns
sbb
out
inc
add
frstor
add
insl
jo
fs
movsb
cmp
push
insb
outsb
inc
and
cli
addb
scas
or
out
mov
lret
lahf
mov
clc
mov
add
sti
jl
psrlw
sub
cmp
nop
repz
mov
xlat
scas
incb
ljmp
dec
add
sbb
push
inc
sbb
movsl
mov
xor
imul
xor
push
xchg
or
insl
add
movsb
out
cmp
add
mov
mov
dec
outsl
sahf
sub
test
push
push
in
xchg
cltd
mov
pop
rorb
cmpsb
std
nop
or
xor
dec
and
cltd
mov
add
scas
mov
push
imul
add
pop
jne
cltd
xorl
add
test
addr16
mov
out
cwtl
sbb
dec
inc
mov
xor
test
int3
or
pop
sub
out
inc
je
xor
push
add
scas
lret
pop
lods
mov
push
inc
xor
add
sub
pop
add
jno
xchg
and
pop
add
and
sbb
jb
cmc
adc
inc
test
pop
in
pop
cmp
jbe
jo
add
or
pop
cmpl
mov
test
pop
cli
sub
xchg
divb
add
sub
add
mov
scas
gs
dec
fimull
imul
lahf
xor
add
or
test
or
mov
lcall
or
pop
pushf
pusha
jns
xor
aas
add
inc
pop
add
daa
cmp
lcall
out
adc
pop
je
or
mov
xchg
mov
outsl
add
dec
and
in
call
xor
outsb
mov
dec
mov
add
or
mov
out
adc
iret
js
sbb
jb
lock
adc
dec
loopne
outsb
jge
add
enter
jmp
cmp
pop
add
fbstp
popf
out
pop
fs
fcomps
sub
gs
jno
sbb
outsl
ret
shr
xor
inc
and
das
in
sbb
pusha
xchg
adc
inc
xchg
push
ss
mov
shll
shrl
xor
pop
cmpsl
push
mov
outsl
sub
int
orb
lods
iret
and
fsubrs
add
jns
idivb
loope
shlb
mov
inc
mov
xor
ss
bound
rolb
inc
pop
mov
cmc
ret
xor
push
aas
test
adc
jl
push
sbb
inc
inc
and
fistl
jns
or
push
xor
and
adc
mov
sbb
push
dec
jne
jno
add
je
scas
mov
call
push
add
and
mov
in
call
je
add
jg
movd
and
popa
daa
cmp
js
mov
das
jl
lahf
sbb
mov
aas
rcrb
pop
mov
dec
dec
add
and
mov
and
mov
inc
ret
test
mov
cld
inc
cmpsl
push
lods
addl
inc
inc
xchg
mov
test
lret
push
push
mov
jge
inc
iret
inc
fs
mov
mov
push
lret
mov
push
sahf
add
into
sbb
add
pop
dec
out
test
and
loop
movsl
xchg
dec
add
lea
insb
push
sti
add
jge
out
sub
add
adc
pop
pop
rcll
fstpt
cmp
sub
jo
or
in
adc
pop
pop
loope
mov
aaa
cmp
movb
pop
push
stos
add
xchg
mov
adc
outsl
imul
int
imul
xchg
incl
mov
fiadds
leave
xor
fsubr
add
xchg
xor
pop
int
pushf
notb
mov
decb
xchg
andl
and
leave
js,pn
push
add
jp
daa
rorb
add
inc
jnp
icebp
pop
cmp
mov
shlb
daa
add
mov
imul
std
adc
lret
sbb
sub
jno
adc
jae
iret
pop
and
sbbb
mov
add
cwtl
and
cltd
ljmp
cmc
push
shll
pop
cmpsl
lods
mov
repnz
jl
in
shlb
scas
mov
jecxz
push
pop
xchg
sub
add
cmp
cmp
daa
jb
stos
rcrb
es
in
xor
mov
hlt
add
push
out
cmpsb
xlat
mov
add
sti
xor
or
mov
xlat
push
jae
jno
pop
sbb
cmp
add
add
pushf
out
leave
pop
int3
sbb
xor
cmpsl
test
clc
mov
mov
pop
dec
mov
outsl
pop
data16
ja
aas
ficoms
add
cltd
adc
xor
dec
xorb
add
xlat
adc
add
mov
call
xchg
std
aas
xchg
jno
outsl
aam
mov
sbb
inc
jge
dec
pop
jo
out
pushl
jb
add
push
cwtl
xchg
pop
dec
add
leave
xlat
xor
and
sub
add
insl
cmp
sub
lock
dec
cltd
add
and
mov
call
sbb
inc
cmp
adc
add
lods
inc
test
xor
ret
mov
mov
jnp
or
loop
sbb
inc
xchg
jp
xchg
xchg
mov
je
add
popl
push
jbe
cmp
sbb
ffreep
push
jmp
pop
pop
add
nop
add
mov
xor
push
daa
push
add
and
enter
fsubrs
cltd
add
in
mov
cmp
sub
pusha
add
popf
xor
adc
and
cmp
xchg
mov
cmpsb
fists
adc
add
cmp
or
sbb
pop
jg
xchg
add
scas
pop
clc
and
or
int3
sahf
cs
fadds
in
add
adc
aam
js
push
push
add
aad
ficoms
add
insb
lods
dec
cmp
shrb
mov
sbb
pop
lret
subl
add
push
mov
inc
mov
add
sahf
add
xor
and
mov
scas
pop
loopne
int3
icebp
xor
cs
jg
dec
sahf
add
jecxz
jns
add
jne
add
pop
in
add
dec
xor
add
mov
cld
sbb
push
cltd
jecxz
add
scas
aad
pop
jnp
movsl
test
shll
enter
jle
and
pop
enter
add
in
dec
ljmp
sarb
xor
out
rol
fiaddl
roll
bound
js
cmp
add
addr16
add
xchg
mov
sbb
add
lock
adc
pusha
dec
orb
sbb
and
add
mov
loope
dec
dec
and
adc
add
insl
shr
mov
arpl
outsl
cli
push
mov
add
outsb
xor
add
jl
nop
dec
pushf
and
add
popf
test
cmp
lods
add
ja
jno
add
jecxz
movsw
adc
pusha
in
and
sub
jbe
adc
push
adc
mov
mov
mov
shll
pop
xor
lahf
mov
push
repz
fnstcw
outsl
out
fistps
xor
and
mov
pop
inc
mov
xchg
jne
sub
clc
add
lock
movsl
scas
sbb
aad
adc
push
loopne
pop
shlb
cmp
cmpsb
push
or
push
hlt
dec
push
testb
dec
mov
dec
testl
push
and
xor
add
adc
add
setb
add
xor
cwtl
push
sbbl
xor
xchg
add
mov
sub
sub
lods
and
add
mov
rclb
iret
sbbb
loop
xchg
lods
pushw
pop
add
inc
xchg
pop
xchg
sub
add
push
pop
data16
add
cld
aam
jmp
sub
inc
jns
inc
pop
pop
sub
add
sbb
cmpl
daa
out
pop
cmpsb
mov
add
jg
mov
or
imul
pop
cwtl
test
cmp
push
jp
xor
jmp
xlat
and
mov
xchg
mov
mov
push
add
push
xchg
mov
insl
or
in
add
jle
cmp
out
add
inc
push
and
ja
add
fisubrs
sub
ljmp
gs
add
xchg
add
dec
lock
shlb
add
xchg
jo
cmp
ret
rclb
xor
mov
in
insl
xchg
pusha
fistpl
fadds
jge
repnz
into
add
add
sub
jp
add
xchg
pop
int3
out
sarb
pop
add
pushw
adc
mov
mov
adc
add
int3
dec
add
sbb
test
nop
daa
cs
hlt
mov
adc
push
add
pop
sahf
mov
pop
icebp
loop
ja
rclb
add
insb
jae
rcrl
dec
pop
jmp
cltd
and
pop
fnstsw
sar
fisubl
mov
js
shlb
or
imul
jo
inc
and
aaa
das
dec
xor
add
or
or
xchg
and
arpl
mov
imul
inc
mov
or
fs
rcrb
aas
jg
mov
or
mov
and
incl
and
or
into
imul
test
movsl
cltd
vpsubb
jle
dec
cmp
add
addr16
xchg
dec
sahf
jae
pop
jl
cmpsl
xchg
bound
faddl
cli
xor
nop
je
sbbl
jb
sbb
jbe
add
je
lods
jp
call
loopne
dec
iret
testb
mov
or
mov
sbb
imul
pop
movsl
gs
xchg
jl
es
scas
sarb
and
jge
das
mov
push
mov
outsl
add
pop
lret
rolb
adc
fisttpll
int3
jl
add
in
add
adc
popa
sub
imul
inc
ja
and
add
mov
push
and
sub
jne
add
out
pop
inc
popf
cmp
loope
je
bswap
xchg
incl
xor
inc
jl
scas
xchg
stc
bound
sbb
rclb
js
add
cmp
push
push
daa
push
inc
jl
mov
lock
and
pop
bound
fldenv
rorb
popa
cltd
dec
push
add
pop
cmpsb
das
repz
xchg
incl
fidivrs
and
pop
aam
out
cmp
ljmp
rorl
mov
rolb
inc
mov
jne
enter
mov
gs
ss
dec
dec
cwtl
cmp
cmpsb
xchg
cld
add
repnz
outsl
adc
pop
das
jle
shlb
adc
cmp
add
fnstcw
movsl
add
cmpsl
jle
prefetchnta
jmp
inc
sub
add
and
fnsave
adc
pop
lcall
ret
repnz
andb
xor
sub
jae
or
outsb
stc
mov
add
lret
sub
add
sbb
xor
cmp
mov
stc
adc
jbe
cmpsl
inc
and
ror
scas
add
lahf
jb
add
lock
adc
push
and
cmp
lea
je
not
sarl
add
lret
xchg
sahf
add
je
insb
cld
inc
cmp
jle
cmc
mov
mov
push
in
fs
mov
imul
js
ret
pop
stos
mov
pop
jno
lods
sbb
push
add
movsb
lea
jae
loope
cmp
jl
out
cld
add
push
inc
pop
cmp
aam
ja
mov
fs
std
mov
push
mov
jecxz
mov
int
sbb
imul
push
ljmp
int
adc
test
outsl
mov
jo
xchg
push
arpl
cmp
push
sbb
inc
jb
pusha
pop
lock
mov
xlat
adc
shrb
add
adc
addr16
xchg
jo
lds
shl
push
mov
cmpsb
sahf
popa
ret
mov
cmp
jo
pop
mov
shr
sub
add
in
popl
int3
xchg
jae
popa
ffree
and
sbb
dec
xor
pop
pop
inc
out
push
out
nop
inc
cwtl
jne
sub
or
ljmp
cmp
add
sbb
xor
sti
clc
xlat
or
inc
mov
sub
shr
push
jecxz
aaa
add
fs
outsl
test
shll
push
ret
sub
mov
mov
add
dec
lea
jnp
call
pop
out
dec
insl
add
aam
test
pop
notb
mov
int3
imul
movsl
xor
jle
clc
inc
mov
jns
mov
dec
in
mov
inc
enter
std
dec
sub
add
push
xchg
imul
in
add
pop
or
cmc
mov
into
das
mov
cmp
lret
inc
cmpsl
cltd
or
or
lock
mov
xor
mov
add
flds
mov
addb
add
leave
rcl
pop
sub
lock
subl
shll
cmp
hlt
mov
subl
out
rcll
or
addb
pop
dec
adc
lahf
out
cmp
fistl
push
jbe
shlb
push
stos
movsb
fiaddl
pop
dec
add
cmpb
add
test
js
sub
add
pop
aaa
arpl
repnz
jo
and
sub
loopne
dec
or
add
test
inc
mov
xor
push
bound
fwait
mov
mov
lahf
adc
inc
add
aaa
sti
cli
push
add
mov
mov
ja
jo
add
mov
loopne
nop
sbb
adc
adc
repz
mov
mov
inc
xchg
je
mov
cs
add
push
shlb
jge
cmp
fsubrs
add
rol
loop
mov
add
loopne
negb
sbb
sub
inc
loopne
sbb
or
pop
mov
mov
jae
jle
lahf
inc
sbb
add
jb
jmp
dec
xchg
adc
inc
test
dec
mov
inc
mov
mov
adc
mov
push
inc
sub
addr16
xchg
cmp
jns
xor
or
movsl
pop
aad
xor
ja
xor
xchg
add
xchg
jg
int
js,pt
call
lret
mov
add
or
pop
inc
push
add
jmp
fadds
cltd
aaa
out
outsl
data16
or
sbb
pop
popa
or
jp
cmp
mov
pop
jns
add
fs
xchg
and
ja
cmp
add
jp
loopne
add
hlt
lds
and
cmpsb
pop
or
fstp
test
add
push
cmp
jno
push
xor
xchg
mov
push
xchg
jle
js
add
adc
sbb
jne
xchg
dec
in
cld
sahf
xor
pusha
out
xorb
mov
and
lret
mov
testb
add
adc
xchg
adc
xlat
and
mov
and
repz
out
pop
or
popf
mov
pop
stos
inc
inc
push
and
mov
enter
add
lock
mov
xor
jbe
mov
inc
out
add
fsubs
addr16
inc
add
mov
dec
clc
jo
or
ds
jl
lock
pop
add
cltd
rcl
cmpsl
jnp
mov
add
sbb
mov
fistl
mov
add
mov
dec
inc
popf
and
enter
sub
push
push
cld
jle
mull
dec
ret
imul
mov
mov
jp
mov
outsb
cs
push
int3
pop
dec
cld
jae
pop
mov
add
loope
ficomps
popa
push
in
lcall
xchg
or
inc
into
pop
loope
jns
mov
in
dec
mov
xchg
cmp
jl
adc
xchg
mov
ss
in
ljmp
pop
inc
subb
add
xchg
add
in
inc
mov
push
cmp
add
ja
cmc
cmp
je
pop
pop
pusha
pushf
sub
sub
hlt
dec
cmp
cmp
int3
scas
cli
popw
push
mov
sub
loopne
ljmp
movb
mov
cmp
js
shll
add
xor
mov
push
nop
dec
icebp
inc
in
int3
ja
fistpl
cmp
jbe
pop
negb
inc
into
add
xchg
ret
jecxz
fiaddl
jbe
cli
pop
stos
inc
inc
cmp
pop
testl
popl
pop
pop
add
aaa
add
sub
xor
cmp
lret
rcll
jmp
in
push
mov
std
divb
add
loopne
and
jecxz
mov
pushf
cmc
out
jge
mov
sbb
into
sub
adc
cmp
movb
and
cld
xchg
add
scas
add
out
add
push
jo
add
fwait
testl
sub
xor
pop
pop
add
jg
mov
push
iret
frstor
adc
push
sub
adc
lret
add
push
pusha
push
cmp
int3
or
dec
add
fucomip
mov
jle
sbb
sub
pop
aam
cld
pop
xor
in
fs
xchg
mov
imul
rcrb
cwtl
mov
bnd
iret
dec
add
push
or
xchg
and
push
add
and
xlat
push
std
pop
fcmovb
movsb
dec
enter
cmp
add
in
pop
xor
lods
cmp
mov
dec
pop
adcb
repnz
aad
push
ss
bsf
arpl
add
cmp
inc
jns
pop
add
adc
xchg
cmp
lods
fwait
dec
sub
mov
jge
test
mov
ret
jmp
add
dec
mov
add
jecxz
sbb
cld
pop
cmp
orb
rclb
sbb
jl
jo
incl
mov
push
subb
mov
fmuls
push
std
pop
sbb
ret
roll
test
arpl
mov
lcall
mov
cmp
outsl
add
xchg
out
mov
mov
roll
add
xchg
mov
inc
add
sub
add
dec
stc
cmc
push
outsb
std
cmpsl
scas
pusha
jo
in
sub
call
pop
fdiv
sbb
push
nop
rorb
push
mov
fisubs
mov
add
cmpsb
inc
fwait
ds
psubsb
icebp
pop
and
dec
rclb
add
cmpsl
sbb
cmpl
jae
mov
or
aaa
xor
or
xor
push
cwtl
sub
or
lods
lret
in
dec
sbb
filds
cmp
dec
pusha
mov
xchg
lock
dec
jno
ljmp
rcrb
inc
and
or
add
movsl
nop
shrb
add
dec
fiaddl
nop
icebp
push
das
loopne
jnp
add
jle
mov
rorl
rclb
scas
ja
imul
add
fildl
jns
pop
add
loopne
pop
scas
mov
aas
dec
sahf
xchg
pop
xchg
cmp
das
test
jmp
add
push
jns
stos
sub
add
fs
in
lret
add
adc
arpl
add
lock
sbbb
incl
fldenv
push
add
mov
jmp
adc
dec
add
push
xchg
pop
sarb
adc
add
enter
data16
add
or
ljmp
sub
popa
rol
cld
jne
add
fstl
lahf
add
outsl
mov
add
adc
xchg
inc
je
bound
std
imul
imul
sbb
addb
ret
lods
and
cmp
add
fwait
repz
jecxz
call
push
cmp
loopne
pop
xor
mov
insl
jo
add
mov
bound
pop
or
push
lea
sub
loopne
mov
clc
pop
ret
inc
sahf
xchg
push
mov
jl
loopne
adc
ja
ljmp
mov
lret
adc
scas
test
inc
add
icebp
pop
aas
mov
movsl
shlb
mov
gs
jo
int3
add
ja
nop
add
in
lret
and
or
pop
pop
cs
shl
xor
mov
addl
sarb
push
add
and
movsb
add
sub
lcall
mov
pop
jnp
mov
mov
in
xchg
or
and
xchg
mov
jl
dec
shll
sbb
std
add
sub
stc
push
add
int3
fdivrs
jp
test
sub
adc
rclb
cmp
xchg
lock
mov
ds
shll
xchg
cltd
and
rcr
xor
mov
mov
push
push
les
out
sbb
xlat
sbb
dec
ja
pop
xor
rcr
in
add
ds
es
xchg
pop
push
aad
punpckhbw
cmc
add
adcb
scas
flds
insl
push
pop
ljmp
jns
xchg
push
mov
fsub
ret
aaa
fmull
nop
popf
bound
xchg
dec
notl
push
cmp
aaa
push
mov
hlt
loopne
repz
subb
jecxz
and
iret
inc
fmull
xchg
and
add
pop
loopne
jge
jb
add
xchg
or
add
push
shlb
jo
dec
fsts
push
data16
add
mov
mov
mov
in
addb
setns
or
scas
test
inc
and
bound
insl
jbe
push
ret
sbb
cli
out
fiaddl
lods
and
push
add
ret
pushf
popf
movsb
aaa
jne
cs
push
je
test
jge
in
dec
sbb
dec
dec
cmpsl
adc
or
add
loop
sbb
jnp
pop
mov
shrb
inc
bound
repnz
out
divb
into
sbb
and
and
add
popa
vsubpd
cmp
xchg
loope
xor
daa
bound
jnp
imul
xlat
out
shrb
add
dec
shll
add
je
pop
add
rep
jo
fwait
jp
add
pop
fimuls
sub
lret
lock
sub
and
pop
clc
leave
mov
xor
fisubl
arpl
stos
add
adc
adc
adc
lods
je
adc
out
psubb
out
sarb
outsb
xor
loop
add
pop
cmp
push
pop
add
daa
pop
push
cmp
mov
pop
sub
fs
mov
in
jb
loope
test
loopne
and
mov
add
xor
mov
jg
add
sbb
adc
mov
sub
int3
sub
dec
push
imul
or
xor
leave
mov
idivb
add
aas
mov
cmp
test
xor
pushf
fldpi
add
push
cmp
xchg
jns
orb
adc
test
jl
push
cmp
outsb
inc
dec
loope
pop
call
sbb
sub
mov
cmp
add
fistps
sti
mov
xchg
mulb
cmp
push
js
xlat
xchg
fsub
roll
xchg
test
dec
sub
out
aas
xchg
sub
ficoml
push
hlt
and
add
outsl
js
add
jae
cld
jle
dec
popf
test
lods
int3
sbb
pop
or
push
ret
mov
mov
xlat
call
mov
mov
mov
pop
cmp
pusha
add
inc
push
pminsw
push
lods
adc
loope
enter
adc
push
repnz
stc
or
jle
or
add
test
push
lcall
mov
xor
out
push
dec
cmp
mov
add
fsubs
mov
movsb
inc
add
push
in
insl
idivl
pop
add
add
jnp
rorl
incl
loopne
fldcw
push
popf
addb
inc
outsl
lcall
and
fs
push
gs
xchg
idivl
mov
lcall
es
in
dec
popf
jo
add
xchg
xchg
lds
fbstp
andb
lahf
les
insl
cmpsb
rolb
repz
aad
add
insb
cwtl
adc
xchg
jo
add
pop
mul
jecxz
ljmp
mulb
add
fsubrs
mov
inc
dec
inc
mov
sbb
ljmp
fcoms
sbb
imul
mov
inc
subb
les
push
aas
out
add
lds
pop
arpl
xchg
mov
imul
xor
add
repnz
arpl
xor
imul
in
xor
out
lret
push
add
insb
sti
cmpsb
ror
das
mov
fcompl
xchg
stos
cld
inc
add
mov
lods
mov
add
mov
popf
ss
add
jne
mov
sbb
mov
pop
lock
ljmp
jno
mov
andb
roll
subb
jl
and
pop
movsl
lock
pushf
and
ret
out
pop
mov
add
adc
shr
lea
mov
fisubs
jmp
adc
jb
shl
push
push
inc
jbe
adcb
sti
pusha
aas
pop
inc
xor
loop
dec
pop
rclb
xchg
arpl
addr16
addb
add
mov
push
mov
jno
add
lret
addr16
cld
xor
pop
pop
xor
inc
sub
mov
int
outsb
repnz
shl
movsl
sub
or
enter
push
int
xchg
insl
jp
in
pop
popa
adc
jne
or
add
pushf
push
dec
push
mov
das
or
add
inc
mov
pusha
insl
pusha
mov
in
subl
cs
out
enter
inc
sub
int3
push
xchg
cmp
jb
inc
repnz
and
cwtl
xor
cmc
out
sbb
loopne
sbb
add
add
gs
sub
add
call
push
clc
add
dec
or
pop
xchg
fstl
inc
push
cmovp
aas
iret
insl
dec
cli
jecxz
sub
jecxz
jnp
xor
pop
mov
pop
loop
loopne
pop
cli
add
rsqrtps
mov
jns
je
pushf
std
inc
mov
icebp
and
movl
sub
repz
cld
mov
repnz
adc
inc
inc
jns
add
add
das
mov
sbb
data16
xchg
faddl
push
out
out
jae
imul
or
mov
sub
add
into
push
int3
enter
add
push
and
add
and
lcall
jno
push
dec
mov
sub
add
lret
jg
in
sahf
pop
xor
loope
comiss
in
cmp
outsb
and
pop
pop
sub
ja
sbb
in
add
jp
add
dec
sbb
xchg
xchg
add
lock
pop
jns
rdmsr
pop
dec
ret
dec
shl
pushw
cmp
orb
in
add
pushf
mov
cs
and
js
fwait
jo
aaa
lods
mov
mov
ljmp
and
dec
or
sub
and
add
push
push
or
sub
mov
pusha
sbb
aam
jo
addr16
dec
jo
stos
outsl
pop
add
lret
push
dec
and
and
inc
fs
frstor
aad
movsl
push
pop
xchg
subb
movsl
aam
add
imul
in
cli
mov
sbb
adcb
popf
add
mov
int
inc
sub
push
stos
and
add
push
jg
aaa
ljmp
sub
pop
lock
sbb
call
loopne
sub
sbb
inc
and
outsl
add
push
int
xchg
xchg
add
and
pop
test
inc
dec
sbb
add
cs
rorl
xchg
dec
mov
fsubs
popa
inc
fs
push
lock
insl
arpl
ret
nop
pmaddwd
jns
cmpsl
jp
jo
cmp
sahf
push
enter
decb
add
add
leave
pop
out
sub
pop
inc
or
js
movsb
popa
cmp
insb
add
fs
adc
subl
cmpsl
mov
sub
or
mov
add
and
in
push
clc
jmp
cmp
or
mov
orb
pop
jp
add
mov
testb
sub
inc
shl
add
mov
scas
incl
mov
mov
addr16
aas
popf
add
pop
xlat
mov
fs
sarl
sub
pop
mov
adc
in
lock
xor
ljmp
pop
daa
enter
mov
sub
xchg
ljmp
int
stos
push
icebp
inc
xchg
mov
jo
out
repz
in
add
xchg
add
jmp
js
push
jg
bnd
cmp
popa
or
sarb
sbb
jbe
enter
fadds
xchg
call
mov
and
add
push
add
and
pop
fisttpl
fwait
mov
jnp
add
loop
inc
add
scas
cmp
aaa
add
lods
inc
or
push
les
iret
enter
xlat
lea
stos
add
sbb
ja
test
jns
sbb
popa
cmpl
fnstenv
fiaddl
xor
inc
popf
add
fadds
pop
mov
fwait
add
xchg
cmp
pop
jecxz
repz
stc
insb
add
fnstenv
dec
push
or
repnz
cmp
rclb
enter
cmp
aaa
int3
popl
dec
imul
mov
mov
fs
pop
jno
iret
es
popf
xchg
pop
jp
jmp
andb
add
enter
lock
je
xor
cli
clc
add
mov
fidivs
sbb
fsubl
scas
inc
rclb
loopne
mov
push
adc
int3
or
out
ret
xor
loopne
fiaddl
ss
mov
sarl
hlt
or
mov
je
sarb
fs
insl
dec
or
and
pop
sarb
sub
xchg
jae
data16
or
mov
push
cmpl
clc
pop
add
push
nop/reserved
adc
sbb
lcall
and
pop
jbe
pop
fstpl
aas
std
cmp
adc
mov
aaa
mov
fistpl
add
aam
lds
in
outsb
push
cmp
subb
mov
filds
shlb
sarl
insb
mov
add
jo
dec
mov
aad
adc
mov
jmp
add
nop
jb
mov
or
pop
cmp
cmpl
mov
iret
popl
and
test
lock
sbb
push
mov
add
repnz
popa
addr16
xor
outsl
movsb
xor
sub
add
push
jne
ret
xchg
fcoms
cld
and
mov
loope
icebp
ljmp
xor
pusha
popf
push
mov
or
mov
dec
add
push
mov
add
adc
subl
lods
adc
xor
mov
mov
sub
outsb
andb
push
dec
xchg
pop
pop
sbb
mov
add
iret
pop
cwtl
mov
push
push
adc
fbld
push
out
and
or
mov
dec
and
pop
pop
push
mov
shll
dec
scas
clc
xchg
nop
mov
inc
ja
add
std
xor
or
into
lret
mov
jg
push
push
add
jge
add
sub
in
fdivs
push
imul
pop
or
ficoml
and
sbb
cli
or
negb
outsb
jo
cmp
push
subb
push
cmpsb
lds
pop
add
cwtl
negl
sbb
cmp
mov
cmp
pop
out
add
outsl
js
flds
into
popa
fwait
or
jnp
sahf
aad
xor
inc
jmp
xchg
ficomps
push
shll
xchg
mov
add
sti
mov
cmpsb
ret
nop
dec
push
push
aas
cwtl
popw
or
leave
das
subl
pusha
lcall
pop
or
mov
jmp
popf
call
cwtl
repz
mov
adc
sbb
cmp
xchg
mov
add
cmpl
mov
mov
lods
js
mov
add
push
add
mov
push
xadd
sahf
int3
rolb
sub
mov
dec
xchg
add
mov
mov
negb
stc
cmpb
rolb
adc
xorb
hlt
test
push
aas
pop
in
pop
sub
shrb
je
sbb
hlt
jg
rolb
cmp
jno
cmp
adc
add
xor
push
mov
sar
lret
mov
jl
inc
or
and
pusha
stos
add
mov
jecxz
arpl
shl
add
or
cli
and
das
in
push
jmp
adc
push
or
loop
xchg
cmp
xchg
pandn
sub
aas
in
sbb
or
mov
aad
jg
jg
ljmp
adc
mov
push
cmp
mov
xchg
or
mov
fcmovb
inc
push
gs
clc
hlt
cmp
pop
cld
subb
add
cmc
rcl
add
aam
and
ficoms
jae
lret
rolb
jno
dec
and
lret
popf
pop
sbb
pop
inc
jp
rol
mov
arpl
lea
lods
mov
push
xor
xchg
pusha
pop
lret
testb
lret
faddl
cmp
jl
sbb
xchg
int3
popa
repz
add
or
lret
test
mov
sub
andb
ret
mov
pop
sbb
mov
notb
mov
cwtl
mov
add
sbb
lret
sub
and
jle
movsl
cmc
push
sub
and
xchg
and
or
shlb
es
loope
xchg
ja
aaa
mov
cmp
sahf
lahf
pusha
sub
or
scas
nop
push
push
jecxz
or
and
xchg
mov
add
adc
les
subl
clc
xor
sbb
fstpl
mov
sbb
sub
pop
clc
mov
fdivl
add
mov
jbe
push
orb
xor
jns
jl
divb
ror
xchg
add
in
jp
movsl
mov
aad
iret
sub
add
adc
mov
push
ret
cmc
xchg
sbb
xchg
xorl
mov
je
add
add
es
sbb
cltd
add
push
orl
mov
add
mov
jnp
add
or
fs
pop
pop
inc
add
cmpsl
or
add
inc
fwait
push
inc
add
fisubrl
lock
mov
mov
mov
inc
add
or
add
pop
xor
xchg
and
add
or
push
stos
jg
jno
test
add
mov
mov
push
pop
pop
xchg
adc
mov
sub
mov
pusha
lcall
add
add
push
sub
imul
push
int3
cmpb
jns
ret
add
and
add
mov
cmp
pop
mov
std
pop
subb
pop
xor
add
sbb
sub
push
mov
add
push
add
push
xchg
pop
mov
ljmp
add
mov
push
les
cmp
in
nop
mov
add
stos
pop
out
sar
imul
movsl
or
add
fisubl
mov
das
push
jae
push
ficomps
add
nop
int
cwtl
pusha
sub
add
lock
inc
cli
cmpsl
scas
cs
jo
clts
pop
addb
lret
int3
idiv
aad
xor
dec
or
ds
cwtl
lret
popa
insl
push
mov
orl
jle
mov
or
lock
push
icebp
sbb
aaa
incl
add
das
xchg
push
out
adc
xor
add
bound
popa
mov
lcall
mov
mov
lahf
leave
adc
pop
cmpb
fstps
test
sahf
pop
push
jno
arpl
lds
daa
mov
test
add
xchg
loope
inc
sahf
insl
xorl
xorb
push
and
push
inc
add
sub
push
mov
and
shrb
or
jmp
mov
adc
xchg
bound
js
mov
dec
mov
popf
enter
sbb
dec
leave
stos
jp
mov
movsl
add
inc
das
ja
rolb
push
xor
movsl
adc
inc
pusha
sub
jl
insb
lods
push
les
insl
dec
pop
lcall
xchg
sahf
lret
add
cld
jae
lcall
pop
lea
add
sub
mov
add
sbbb
out
mov
bound
les
sub
out
les
std
rol
movsl
hlt
add
es
add
xlat
mov
mov
add
mov
push
xchg
or
in
pop
leave
mov
and
push
push
aaa
loopne
orps
add
cld
cmp
xchg
xchg
inc
aas
add
dec
mov
add
mov
stc
in
test
aam
cmp
outsb
gs
incl
sub
dec
add
mov
mov
int
addl
outsl
jbe
js
stos
lods
popf
adc
out
add
mov
mov
xor
fwait
mov
pop
ret
xchg
jle
push
mov
mov
gs
inc
adc
mov
les
test
push
xor
mov
pop
sbb
sub
sbb
loopne
inc
cmp
roll
jmp
add
cmpb
jnp
and
pushf
dec
out
sbb
pop
decl
aas
pop
xor
dec
push
clc
orb
mov
fs
jecxz
jmp
fadds
add
sbb
scas
ret
push
sahf
fidivrl
out
stc
mov
adc
mov
xchg
and
push
jl
xchg
pop
lods
pop
scas
mov
mov
movsl
cwtl
jge
mov
ljmp
add
xor
mov
aas
pop
add
shlb
adc
push
add
movl
ljmp
cmp
subl
nop
sub
xor
sbb
xor
add
mov
inc
push
xor
add
stc
dec
sbb
and
repnz
jnp
inc
aad
add
and
cltd
ret
sub
add
fsubs
ja
cmpsb
push
add
flds
leave
and
adc
push
adcb
push
push
orb
add
dec
enter
ret
sar
movsl
sub
pusha
mov
or
add
xor
cld
adc
call
xchg
cltd
xor
mov
fidivl
add
call
pop
add
push
add
repnz
mov
add
cmp
addb
enter
cmp
flds
stos
push
nop
add
push
jo
into
add
pop
jb
and
sub
xchg
add
int3
scas
leave
mov
jp
add
decl
push
push
pop
aaa
xchg
cmpb
mov
push
ret
sub
in
je
add
loope
xchg
push
jl
add
mov
iret
sub
mov
in
add
inc
inc
mov
push
cmpsl
pop
testb
mul
popf
daa
faddl
mov
fildll
push
or
jbe
and
xor
dec
enter
and
add
push
lret
into
stc
shl
or
xlat
xor
add
test
popl
insb
mov
jnp
dec
xor
mov
add
mov
negb
test
test
repnz
movsb
mov
loopne
mov
jb
arpl
les
icebp
inc
test
fistps
outsl
pop
xor
jle
cmpsb
fildl
jo
pop
shlb
dec
pop
inc
mov
cmp
lahf
add
pop
sub
xchg
pusha
pop
dec
sbb
adc
arpl
fistps
sub
in
xlat
cmp
push
add
rorb
add
sbb
and
mov
clc
mov
cmpb
sbb
arpl
outsb
shr
loopne
les
popf
test
in
imul
flds
cmp
push
push
xor
imul
mov
das
lahf
in
into
cmp
xchg
lock
mov
adc
mov
push
push
stos
and
sub
int3
and
pushf
imul
or
add
or
scas
mov
adc
ja
mov
sbb
xchg
pop
and
js
add
and
cltd
aad
fsubl
xchg
xchg
adcb
add
mov
ss
jo
push
xorb
dec
and
add
mov
push
lds
aas
dec
call
aad
mov
adc
push
popf
jb
pop
dec
add
sub
fwait
jb
add
lds
lea
sarb
in
push
jle
add
loop
inc
rcrb
rorl
fs
add
scas
inc
in
cld
mov
clc
loopne
xchg
cwtl
add
and
les
adc
add
xor
sub
adc
cltd
stos
rolb
cmp
pop
pop
lahf
cmp
inc
iret
xchg
rolb
inc
xorl
add
jp
adc
mov
pop
aam
mov
push
loope
xor
mov
add
add
jp
rcrb
xor
ret
xchg
ficompl
jg
inc
call
xchg
cmp
sub
outsl
jne
js
mov
test
sbb
pop
cmpb
pop
mov
ss
jae
cmp
mov
add
outsl
or
mov
fsubl
add
cld
ret
ficompl
movsb
es
insb
xchg
outsb
pop
imul
cs
movsl
push
jo
sbbb
pop
push
mov
aaa
mov
jnp
aas
lea
cmp
outsl
stos
call
mov
xor
movb
add
dec
loop,pt
imul
cmpsl
dec
or
int3
add
lret
rcr
add
outsl
daa
and
sbb
push
or
test
ja
adc
decb
fistl
shl
sub
bound
pop
sbb
sub
outsb
jo
xchg
pop
dec
out
jno
mov
add
adc
jge
mov
add
adc
cmp
in
add
sbb
or
fs
or
sbb
sbb
xchg
outsl
add
xor
and
lock
test
push
ds
or
and
sahf
cwtl
or
lahf
loope
mov
pop
mov
add
mov
cltd
add
mov
outsb
aad
mov
sbb
jmp
aas
add
mov
cmp
and
ljmp
add
in
add
test
cmp
lods
push
add
dec
cs
shrb
add
or
fadd
dec
mov
add
test
push
jle
add
out
sbb
call
and
cwtl
out
add
or
pusha
pushf
mov
add
jno
adc
xchg
leave
add
xchg
jnp
add
pusha
pop
cs
mov
das
xchg
sbb
out
repz
call
in
add
dec
addr16
je
add
jle
inc
lea
fwait
add
lods
pop
aaa
or
and
xchg
mov
mov
xchg
js
add
subb
xor
mov
daa
add
negb
mov
add
sub
test
out
in
cmpsl
dec
pop
mov
cmp
aam
fsubl
mov
sarb
add
lods
adc
inc
xchg
pop
xchg
bound
mull
orl
add
mov
push
pop
stos
cmpl
stc
jae
mov
or
add
fmuls
add
lea
mov
mov
jnp
pop
clc
addr16
add
or
pause
fs
into
test
mov
test
cwtl
out
push
aam
ret
dec
mov
xchg
mov
lahf
add
and
sub
push
lock
movsb
cli
sbb
cwtl
das
pop
ss
add
inc
xchg
inc
mov
dec
pushf
dec
pop
push
mov
sarb
mov
insl
dec
insb
cmc
xor
test
cwtl
insl
add
movsl
icebp
xchg
cltd
js
and
inc
push
or
insl
mov
pop
pop
xor
mov
mov
pushf
imul
cwtl
jge
pop
mov
aam
inc
add
and
pushf
popf
add
in
pop
or
fsubrl
loop
int
sub
cmpsb
stos
aaa
scas
xorb
paddq
pop
in
clc
es
xchg
iret
fsubs
cmp
fisubrs
cwtl
and
jle
frstor
push
or
pusha
scas
cmp
mov
ja
dec
stos
or
sub
mov
add
mov
mov
xlat
sub
jl
enter
testb
fiaddl
adc
mov
add
sub
cmp
or
int3
cmp
outsb
cld
add
call
fistpll
and
rcrb
mov
imul
xchg
movsb
add
mov
lock
ja
add
xchg
inc
ds
jmp
xchg
add
ret
js
lods
inc
add
mov
xor
sbb
ja
inc
cmpsl
iret
push
mov
rolb
int3
frstor
lahf
pop
mov
adc
in
ljmp
aas
jg
cmp
adc
mulb
push
mov
mov
xchg
adc
add
test
lods
test
scas
pop
shlb
xorb
pop
push
push
stc
mov
push
popf
mov
pop
dec
inc
jg
sbb
mov
pop
jl
xor
and
dec
loopne
add
dec
jle
dec
mov
and
add
in
sbb
aad
add
inc
fdivrl
jp
add
cmp
pop
cmp
dec
mov
add
jno
and
add
mov
sub
mov
ljmp
icebp
mov
mov
sub
int
testl
pusha
dec
incl
popf
icebp
inc
xor
add
mov
xchg
sbb
cmp
jge
push
inc
data16
jbe
pop
push
enter
leave
jmp
dec
imul
jns
adc
dec
lret
jno
mov
fs
movsl
fstpl
xchg
leave
cld
arpl
lds
pop
arpl
scas
out
repnz
inc
fdiv
jle
adc
jmp
adc
mov
inc
jne
cli
out
and
in
pop
push
mov
jmp
bound
sub
xor
dec
shll
xchg
or
es
das
jnp
add
lahf
stos
inc
movl
push
mov
xor
push
aam
jl
leave
add
and
mov
adc
testb
pop
mov
cmp
imul
or
hlt
add
enter
test
cs
mov
jo
add
sbb
das
mov
xor
lods
cmp
mov
xchg
jecxz
sahf
arpl
sbb
lock
dec
xchg
shr
mov
jmp
push
xor
test
jecxz
and
sbb
xor
jno
add
jecxz
adc
jg
mov
xor
sarb
in
mov
push
aaa
lods
push
inc
xchg
fadd
cmp
xchg
ja
dec
out
sbb
adc
je
push
test
pop
push
mov
push
std
pop
sarl
adc
add
xchg
sbb
cmp
and
push
insl
mov
add
pop
movsl
rcll
push
aam
jmp
aam
dec
popa
xor
js
out
jle
lods
add
test
mov
push
add
popf
stos
sti
cmc
das
loope
xor
mov
mov
xlat
or
inc
fidivrs
add
jb
shl
push
sbb
jmp
inc
stos
adc
add
jl
or
lock
test
xor
fwait
inc
add
push
fnstenv
pusha
or
add
sbb
add
or
je
and
push
shlb
add
xor
das
add
xchg
cmp
leave
and
add
fs
rcl
mov
into
pop
es
mov
xchg
add
jg
add
push
sub
cmp
test
mov
lods
add
cmc
es
add
loop
jmp
add
push
and
cwtl
outsb
sub
add
pop
aad
add
stos
xor
sbb
out
jge
mov
adc
add
cmp
fs
addb
mov
in
add
xchg
adc
jbe
daa
call
cs
lock
inc
cld
xorb
cmpsb
add
rcrb
shlb
roll
dec
push
sbb
sub
add
lcall
pop
adc
fimuls
mov
arpl
in
push
out
leave
lock
and
inc
ds
adc
test
sti
ljmp
add
pop
insb
mov
dec
loopne
mov
xchg
call
jecxz
xchg
lahf
imul
fists
add
adc
mov
add
std
enter
push
mov
dec
jnp
add
mov
cld
dec
add
pop
xor
dec
sti
scas
leave
cwtl
dec
push
jge
dec
mov
stos
cli
lahf
mov
or
sar
mov
lods
add
push
in
cmc
inc
sub
add
arpl
ljmp
push
add
pop
fldl
fdivrl
add
cltd
sub
add
adc
xchg
fldt
cmpl
add
or
call
inc
jnp
icebp
jns
lret
jbe
jmp
cmp
add
outsb
das
daa
hlt
mov
push
sbb
loopne
clc
lahf
loopne
cltd
lea
add
lcall
daa
out
dec
jmp
inc
loop
jo
rclb
sbb
fdivrs
or
mov
cmp
outsl
jmp
int3
mov
or
lds
imul
sub
lock
movb
push
negl
add
push
in
in
fmuls
test
jne
lahf
pop
ret
sub
jl
pop
mov
push
cmpsb
add
mov
pop
cmp
lret
bnd
out
loope
std
and
xchg
push
sub
mov
daa
and
iret
adc
jl
dec
add
jge
dec
push
mov
xchg
ds
push
sbb
add
jg
pop
in
data16
xchg
add
add
sub
jne
xchg
add
fnstcw
jl
jbe
add
adc
stos
xor
pusha
test
lret
mov
push
push
and
popl
xchg
outsb
ja
test
pop
sbb
mov
add
aas
dec
pop
inc
sub
and
push
lcall
jp
in
or
xchg
jbe
insl
fstpt
enter
jmp
lock
sub
sbb
add
jno
add
int
xlat
jmp
lahf
jb
adc
xchg
aas
movsb
push
daa
and
mov
or
rclb
arpl
ret
adc
xor
test
mov
jnp
adc
mov
pop
add
mov
jb
and
sbb
lahf
push
dec
jne
sbb
mov
and
jmp
ds
lahf
xchg
add
mov
cld
sbb
inc
clc
dec
jecxz
stos
test
xchg
pop
push
popa
xor
cs
adc
clc
stc
icebp
mov
sub
add
dec
jle
std
cld
popf
sbb
lock
in
test
scas
popa
or
lcall
inc
jge
es
jl
mov
sbb
xchg
rolb
add
adc
loop
test
push
mov
ljmp
or
sub
add
mov
mov
xchg
ds
add
add
in
leave
mov
fsubs
mov
pop
pop
ret
xchg
cmpsb
dec
dec
sbbb
lahf
xor
cli
mov
imul
inc
push
mov
jne
jmp
cwtl
sub
jbe
scas
mov
out
add
shll
push
mov
test
sbb
cmp
pop
les
add
icebp
sahf
add
out
inc
jno
shlb
xor
scas
ret
add
xchg
mov
sub
add
mov
mov
aad
roll
jl
dec
jge
inc
jns
and
test
repz
outsl
add
dec
pushf
imul
pop
pop
adc
xor
loopne
clc
cmc
add
push
lods
mov
cs
add
jg
stos
imul
xchg
not
rcrb
pushf
out
add
addl
popa
insb
hlt
push
outsl
add
in
jne
mov
cmp
pop
adcb
inc
jge
cld
add
fldenv
cmp
data16
or
add
pop
fstpl
scas
fists
add
repnz
pusha
mov
loop
pop
rolb
ficoml
ret
jecxz
mov
sub
jo
loopne
cmp
xor
mov
pop
inc
pop
adc
loopne
pop
gs
aad
dec
and
sahf
inc
add
sub
roll
dec
push
in
lds
out
out
jbe
cmpb
stos
mov
fdivrp
dec
lret
imul
mov
jge
mov
dec
in
xor
mov
sbb
xor
dec
es
xchg
stos
popa
cltd
fmuls
jne
daa
adc
rcrl
or
xor
adc
sbb
or
dec
or
movsl
int3
adc
jae
scas
pop
pop
add
mov
imul
inc
sbb
inc
pop
pop
leave
or
pop
loope
movsl
cmpsb
fwait
rolb
out
xchg
test
pop
xchg
out
push
movsb
cld
add
leave
icebp
jmp
add
xchg
lcall
aad
push
clc
add
std
cmpsb
add
or
add
lods
rorb
mov
add
mov
jns
push
jb
mov
jle
lahf
mov
nop
js
push
aam
test
loop
dec
mov
test
add
adc
xor
xchg
negl
jnp
aas
adc
dec
in
push
js
add
push
sub
sub
fists
lret
cmpsb
add
lret
fidivl
jge
xchg
add
jg
movsb
repnz
and
andb
rcrl
mov
add
pusha
adc
lcall
add
lods
ret
or
xchg
push
lock
loopne
or
push
jle
dec
aas
pop
jbe
rol
jge
add
or
lock
cmc
and
repz
outsl
test
or
add
jle
xor
xor
dec
xchg
add
rorb
mov
fstps
mov
daa
les
cmp
aaa
sub
fadds
mov
into
and
jbe
add
popf
popa
ret
add
xor
sbb
pushf
sarb
gs
shlb
fldt
mov
add
jmp
int3
dec
xchg
add
hlt
shl
mov
or
ret
std
mov
rclb
mov
mov
call
push
jnp
fistpl
cmp
arpl
fdivs
dec
mov
dec
pop
test
out
push
fiadds
cmpsb
cmp
dec
arpl
push
roll
outsb
rcrl
add
xchg
pop
cmpsb
cmp
jg
shl
rolb
pop
jae
add
sub
cmpsb
add
ss
cmp
fmuls
jnp
scas
adc
loop
xor
mov
mov
sbb
mov
out
jae
test
push
in
sbb
in
adcb
add
stos
call
cs
and
pop
leave
pop
add
push
test
fs
add
mov
or
fmull
mov
add
inc
mov
lret
add
mov
sbb
fld1
xchg
int
popf
and
leave
fwait
push
mov
pop
out
out
pop
cmp
cs
mov
mov
adc
cmp
jb
xchg
insb
jg
add
push
add
jl
jno
sub
sahf
sbb
clc
add
filds
add
into
sub
add
ljmp
inc
sub
outsl
int
add
cmp
sbb
mov
dec
stc
pop
mov
adc
xchg
pop
and
in
movsb
add
rorl
push
test
int
xorl
push
dec
mov
and
add
test
cmp
pop
push
adc
mov
or
jl
mov
roll
fs
cwtl
mov
in
pusha
pop
pop
push
icebp
out
dec
add
mov
add
int
frstor
jae
aas
or
sbb
pop
jl
jmp
or
lods
inc
add
or
and
pushf
add
out
xor
jp
dec
test
enter
add
es
add
add
fistpll
add
push
fdivr
xor
out
adcb
push
stos
sbb
push
or
test
mov
mov
dec
dec
repz
push
loop
pushf
push
movsl
jecxz
and
pop
pusha
jns
add
bound
movb
icebp
cmp
pop
jae
pop
jb
push
orl
and
call
leave
push
imul
add
push
lahf
sub
fdivrl
cmp
fildl
dec
shrl
dec
jmp
sarb
ljmp
hlt
insl
and
jecxz
inc
test
mov
add
or
js
add
xchg
mov
jno
add
out
std
hlt
mov
imul
sub
inc
cmp
xor
call
xchg
sub
inc
pop
jo
xchg
add
sbb
push
xor
inc
repnz
test
pop
ss
mov
mov
subb
xor
sub
push
pop
int
icebp
add
ljmp
pusha
negb
data16
push
aas
out
cmp
lret
add
pop
movsl
imul
xchg
mov
xor
dec
mov
popa
out
add
idivl
dec
cwtl
aam
cmp
lods
add
dec
int3
call
jle
add
push
cmp
je
xchg
add
shll
test
scas
or
inc
sub
pop
add
stc
add
jle
test
in
out
pop
pop
cmp
add
add
sub
arpl
popf
insb
mov
and
sub
in
adc
loop
subb
add
std
fstpl
push
outsb
inc
subb
xchg
in
pusha
fiaddl
movsl
cmp
inc
cmpb
pop
fcmovnu
pop
shrd
xor
jne
loop
test
mov
pusha
lcall
jno
aad
mov
cmp
push
xlat
inc
bound
sub
jle
and
shll
gs
sti
pop
add
push
popa
cmp
cmpsb
orl
dec
adcb
or
ja
jb
mov
add
pop
and
repnz
std
jp
and
lock
fs
adc
dec
lcall
pop
add
sub
fs
add
mov
repz
add
push
and
cli
pop
enter
inc
sub
cld
mov
call
add
daa
pop
xchg
mov
dec
sub
cmp
dec
adc
xor
stos
inc
pop
add
jle
inc
pop
jb
jge
arpl
pusha
lods
xlat
xchg
ja
fistl
xchg
mov
fwait
sub
ljmp
mov
inc
fimull
adc
and
nop
in
add
sbb
xchg
add
fmull
mov
mov
add
mov
aaa
add
bound
add
mov
and
sbb
gs
hlt
pusha
lar
mov
adc
lret
test
repnz
lahf
daa
add
dec
pop
and
dec
insl
add
add
loope
push
fs
ror
dec
xchg
loopne
repnz
hlt
daa
stos
scas
insb
xchg
clc
out
mov
dec
sbb
je
cmp
lods
nop
cmp
mov
lret
pavgw
pop
roll
push
xchg
mov
outsb
or
push
sbb
pop
xor
shrl
push
inc
xor
scas
push
jnp
jno
or
aas
sbb
mov
dec
mov
pop
add
adcb
pop
stc
add
push
aaa
mov
pushf
inc
xlat
les
sub
scas
xchg
lahf
add
xor
cmp
negb
xchg
jb
cltd
leave
add
jmp
ret
dec
inc
pop
and
inc
nop
cmpb
popf
outsb
dec
jecxz
or
fldt
add
or
cmp
cwtl
inc
sub
icebp
add
fldl
add
fs
mov
push
add
xlat
jns
stos
lock
add
shl
cmp
lret
add
jo
mov
cmpsl
sbb
xchg
adc
push
outsb
daa
flds
dec
inc
and
xor
loop
jb
andb
and
sub
lock
sub
nop
in
push
xchg
cmp
add
movsb
and
loope
add
mov
pop
mov
pop
scas
pop
pop
test
dec
test
mov
pop
jnp
fstpt
cmp
lret
sub
sub
pop
inc
xor
mov
jb
jecxz
outsl
cwtl
add
jae
add
clc
shrb
out
add
cmpb
xchg
add
loop
xchg
aas
jnp
add
dec
sbb
add
add
push
clc
pop
int
stos
dec
add
mov
add
push
jmp
or
and
or
roll
add
xor
xor
and
add
push
xlat
jae
mov
jo
add
adc
sahf
push
xchg
lock
je
or
ret
add
in
cmpsl
cli
mov
jp
xchg
jl
aaa
and
push
rcr
popl
js
add
adc
or
pop
pop
pop
jg
lret
daa
and
add
sub
les
lods
sbb
cmp
pop
loop
subb
jle
add
rcll
movsl
cld
xlat
insl
or
dec
scas
lds
jo
lock
or
and
fcoml
mov
pop
int
call
push
push
or
xor
or
or
pand
and
enter
xor
mov
add
sar
mov
cmp
mov
rorb
push
loop
mov
adc
push
sub
sub
push
dec
int
jae
jge
iret
xor
pop
call
adc
movsb
jecxz
stos
les
mov
jae
mov
sub
pop
stos
push
add
pop
cwtl
xchg
lods
int3
xor
popa
adc
cmp
add
int
xchg
jae
add
xlat
sub
das
rclb
sahf
cmp
fildl
icebp
inc
dec
xor
mov
addr16
add
scas
int
xchg
mov
pop
or
ret
jno
cltd
les
cli
aaa
xchg
xor
test
hlt
adc
cs
dec
insb
add
mov
xchg
sbb
lret
test
fists
pop
inc
adc
in
sub
sbb
minps
push
mov
les
xchg
add
dec
imul
mov
mov
movsbl
adc
mov
imul
sub
sti
bound
aam
cmp
ds
clc
mov
or
cmp
add
sbb
imull
unpckhps
mov
dec
dec
inc
js
les
cmpsl
fwait
sbbb
aas
insb
cli
pop
lock
jmpw
jp
stos
addb
sub
jnp
xor
stos
cmp
sbb
or
cmp
subl
mov
out
sbbb
rcrl
jmp
xor
fldcw
loopne
movsl
addb
push
push
inc
je
sub
add
adc
leave
pop
inc
rolb
test
mov
push
xor
loop
add
sub
mov
xchg
push
nop
mov
push
push
xchg
xor
dec
or
cmpsb
filds
popl
int3
insl
pop
outsb
int
inc
scas
add
adc
xchg
add
jg
jnp
insl
pop
push
pop
push
xor
mov
popa
add
pop
jle
sbb
push
pop
add
lret
sub
call
add
and
jp
add
cmp
popf
pop
add
jae
scas
fldcw
popa
xchg
inc
fs
mov
add
sbb
adc
out
add
lret
cltd
push
xchg
in
mov
clc
je
jmp
lret
xorl
cmp
cmpsl
jns
lcall
mov
jnp
call
lea
sbb
je
movsb
dec
shlb
and
add
into
jno
test
inc
fiadds
mov
inc
insb
push
dec
jmp
ss
mov
mov
xchg
jb
dec
adc
inc
or
divb
add
xor
sar
andb
pop
push
mov
cmp
subb
pushf
imul
ljmp
aad
cwtl
add
xchg
inc
sbb
lods
pop
jo
add
insb
aam
push
outsb
fcoms
inc
mov
jb
push
jnp
add
clc
mov
pop
mov
scas
push
jnp
js
mov
sbb
and
xor
add
data16
ss
ficoml
cld
jo
add
daa
inc
sti
pop
pop
or
pop
mov
rcll
xchg
xor
add
or
push
fs
push
cmp
pusha
loopne
add
out
test
fistpll
xchg
jbe
ret
shl
fwait
invd
bound
inc
pusha
sbb
push
iret
popa
arpl
jno
stos
inc
call
cmp
inc
mov
jmp
dec
add
mov
cmp
jge
add
xchg
jns
dec
add
scas
inc
xorb
test
rcrl
jae
push
add
and
ds
or
jno
adcb
or
clc
xor
cli
shrl
xor
cwtl
pop
or
je
js
in
out
aad
sbb
addl
add
add
sub
movd
sbb
in
dec
movsb
cltd
lods
aam
mov
cltd
push
sti
xchg
mov
add
mov
mov
cli
aas
pusha
jno
inc
fstl
nop
gs
jle
push
cmp
mov
loopne
test
jg
ja
psrlq
fmuls
mov
and
bound
data16
insl
nop
mov
mov
std
je
lock
lret
repnz
sub
inc
sbb
packsswb
ret
out
sbb
dec
mov
jmp
sub
xor
std
int3
addr16
fisubrl
add
out
rcll
aas
adc
push
in
pop
pop
mov
ret
movsl
das
les
mov
int3
cmp
xor
into
pop
fisttpl
adc
mov
add
repnz
mov
add
outsb
jmp
inc
fcmovbe
je
and
add
mov
add
dec
int
cmp
pop
add
xchg
add
jns
ds
add
push
int3
add
pop
cmp
pop
xchg
cmp
in
pop
xchg
adcb
and
scas
aam
and
int3
mov
aas
rorb
add
in
bound
inc
insl
movsl
lods
out
mov
nop
imul
pop
pop
fisubs
mov
bound
fucom
shr
cmp
repz
jbe
dec
pusha
fldcw
sbb
std
and
je
cmp
sbb
cmp
mov
sbb
test
call
movsl
cmp
mov
pop
lret
mov
xor
mov
jo
stos
clc
jmp
or
in
bound
xor
mov
mov
dec
fwait
mov
test
popa
loope
xchg
fsubrs
sbb
mov
fiaddl
mov
nop
inc
les
ss
mov
adc
loopne
add
lods
sub
cltd
push
sub
mov
pop
jne
ret
inc
gs
inc
lds
add
dec
or
push
lods
or
mov
pop
push
mov
cmp
fildl
or
push
in
sub
push
mov
jecxz
lret
xchg
movb
xor
push
cmc
sti
xor
add
sub
pop
mov
cltd
out
and
sub
inc
pop
pop
pop
xchg
push
rcrb
inc
or
add
fwait
dec
decb
test
gs
or
fbld
pop
mov
fstl
and
repnz
mov
inc
push
jmp
and
add
xlat
mov
push
nop
add
mov
mov
cs
or
xchg
jle
rcrl
xor
lods
jg
sti
test
cmp
jb
sahf
lds
lea
cmova
cmp
or
add
push
sti
fists
dec
movsb
add
pop
or
cmp
dec
cmp
xchg
add
jns
pop
jp
xchg
add
movsb
stc
push
imull
cmp
or
pushw
jae
push
pop
sbbb
dec
mov
test
subb
jno
add
push
cmc
pop
cmp
pop
test
test
dec
and
rolb
int3
xchg
xor
push
inc
jecxz
push
cmp
out
push
add
mov
sub
mov
cmovp
add
push
inc
add
mov
out
jg
add
rclb
add
jo
add
lahf
sbb
cmp
add
lea
or
in
add
add
and
adc
xchg
and
jnp
jno
mov
fbld
cmp
inc
xorb
mov
or
add
push
mov
imulb
mov
int3
mov
xlat
ja
ret
lock
cmp
sub
inc
sbb
inc
enter
lods
dec
cltd
jg,pn
decl
sub
and
pop
sub
add
ss
mov
fsubrs
notl
inc
mov
imul
arpl
jl
jge
cwtl
scas
add
xorl
pop
add
div
and
lret
mov
xchg
movsl
push
inc
adc
insl
mov
inc
adc
in
adc
sarb
mov
add
cld
mov
test
repz
xor
outsl
lods
cmp
stos
add
ficoml
cli
add
iret
add
push
mov
sub
mov
pop
inc
lcall
pop
stc
pop
roll
in
fistps
pop
and
push
inc
aad
icebp
shrb
cmp
cltd
jne,pt
nop
mov
push
rcll
mov
cs
call
add
push
lret
cltd
pop
push
mov
sbb
das
push
sarb
push
xor
adc
push
push
pop
jl
je
mov
add
scas
addr16
sbb
mov
pusha
imul
aaa
pop
or
jb
lds
loopne
mov
out
adc
cmp
sbb
add
push
loop
inc
cmc
mov
dec
inc
add
pusha
sbb
mov
and
sub
repz
mov
cmp
ljmp
cmc
and
call
push
outsl
xchg
int3
push
dec
jmp
and
pop
out
setne
xor
data16
enter
or
notb
or
pop
push
adc
and
xor
ret
or
add
cmp
das
xchg
lcall
adc
inc
adc
mov
add
mov
or
pushf
add
jmp
js
xor
add
les
adc
sbb
push
lret
and
xchg
pusha
or
jge
add
pop
test
add
mov
lcall
scas
adc
add
in
sbb
rcrb
sbb
inc
add
or
xor
xchg
cmc
cmp
pusha
add
std
jbe
push
popa
push
push
mov
cmp
sub
imul
or
jo
inc
sbb
add
int3
mov
fcmovnu
cltd
xor
mov
insl
pusha
mov
stos
or
ja
rorb
jmp
std
add
pushf
add
sub
pop
add
movsb
cmc
jl
out
roll
xor
cmp
xchg
pop
rcrl
mov
inc
imul
adc
add
test
fwait
pop
xchg
add
repz
pop
popa
sbb
push
outsb
xchg
add
sbb
add
call
dec
dec
inc
add
aaa
mov
sub
add
aam
leave
mov
add
sub
adc
add
es
xchg
mov
call
popf
and
pop
loop
cmp
stos
push
lods
fimull
add
call
movsb
arpl
add
stos
push
lock
mov
cmp
cmpsl
or
js
mov
sub
mov
mov
mov
push
xchg
sbb
fnsave
push
insb
mov
nop
shll
call
adc
bound
je
xchg
push
ja
mov
mov
ret
xchg
cltd
push
pop
popl
cmpsb
and
dec
int3
dec
jl
aam
mov
dec
add
stos
or
rorl
push
cmpsl
dec
mov
xchg
aam
mov
es
add
int3
test
loopne
and
cmp
cmp
push
shl
sbb
sub
pop
lea
add
out
lcall
fdivl
pusha
jb,pn
sub
mov
add
jo
inc
loopne
add
xor
add
arpl
dec
mov
cmp
push
pusha
in
nop
mull
cltd
insl
in
arpl
push
mov
xchg
js
jne
add
sahf
push
orb
xchg
stos
lcall
inc
fdivl
aam
dec
clc
mov
lret
leave
pushf
xor
dec
pop
jns
add
inc
xor
or
loopne
xor
and
lcall
enter
add
fbstp
push
icebp
xchg
inc
lods
push
cwtl
pop
adc
lds
enter
iret
xor
out
stos
sub
sti
fcoml
test
lock
jo
mov
mov
pop
mov
cmp
and
mov
add
cmp
flds
jg
jle
das
sub
jb
pop
add
xchg
out
add
pop
xchg
mov
adc
aas
in
xor
add
pushw
xchg
out
mov
clc
pop
pop
mov
sub
loopne
subl
arpl
pop
les
mov
sub
pop
int3
dec
pop
hlt
or
jmp
inc
bndldx
push
mov
xor
repnz
or
or
dec
ret
adc
mov
pop
add
les
gs
push
lods
ret
jle
and
push
or
repz
orb
pop
mov
add
pusha
clc
pusha
and
outsl
in
add
xor
mov
add
jo
daa
je
sysenter
add
jl
shll
mov
ja
or
jns
pop
shlb
inc
sub
mov
mov
lret
std
das
inc
movsl
add
mov
cltd
lods
clc
in
dec
mov
add
adcl
adc
or
mov
mov
test
jno
add
push
add
or
movsb
clc
xchg
add
roll
add
inc
fcomip
dec
mov
aaa
lea
fs
shll
inc
sarb
lea
add
or
cltd
and
jl
add
jg
sub
pop
jo
add
mov
test
sar
stc
cwtl
add
lods
fs
hlt
scas
cmp
popf
xchg
outsb
mov
adc
push
loop
dec
cmp
inc
rcl
xchg
mov
cmpsb
imul
add
or
xchg
push
adc
loope
leave
add
loopne
jmp
stc
daa
inc
pop
lret
enter
test
sahf
in
fiadds
xor
aad
into
pop
sbb
sbb
testl
pop
mov
int
cli
sub
mov
and
jp
bnd
mov
call
xchg
push
cmp
mov
outsl
jae
ljmp
push
sbb
add
icebp
popa
sbb
into
std
out
je
xor
xor
add
gs
add
inc
fistps
push
mov
shrb
mov
sbb
mov
cmp
xchg
sbb
adc
inc
mov
push
xchg
add
repz
fcmovnu
fs
or
lods
popl
push
test
mov
and
mov
push
add
lret
push
and
lock
xchg
push
add
sbbl
and
inc
add
fs
mov
movb
mov
add
cmp
in
push
or
mov
xor
ja,pn
push
outsb
cli
or
loopne
xchg
dec
lods
or
out
aam
sbb
jbe,pn
mov
sbb
mov
cmp
mov
mov
inc
cmp
sub
jmp
sbb
mov
nop
arpl
xor
cmpsl
mov
and
mov
cmpb
addr16
sbb
stos
fs
in
adcl
add
repnz
faddl
rorl
popf
lcall
out
ja
sub
mov
add
adc
push
mov
in
pop
xchg
subl
add
repz
lods
xchg
fadds
int3
adc
jl
sub
jo
leave
or
in
cmp
or
adc
pop
xorb
push
mov
inc
add
rorb
sar
test
sbb
fistpll
or
and
pusha
adc
add
iret
out
pop
js
sbb
aad
adc
lret
bound
fisttpll
sub
sub
fdivrl
sbbl
mov
xchg
repz
or
rcll
sbb
outsb
ja
and
cmpsb
outsl
push
leave
pop
or
and
cld
jno
jo
add
shll
test
mov
add
jp
pop
jecxz
dec
and
xchg
sti
xlat
mov
cwtl
mov
popf
mov
fidivrs
add
jne
push
inc
pusha
ds
pop
repz
xchg
paddsw
in
add
lock
or
inc
jno
push
xor
or
push
xor
push
xchg
inc
pop
cmp
icebp
lret
adc
outsl
cmpb
ljmp
out
loope
or
loope
cmpb
dec
test
enter
adc
add
in
ljmp
jnp
inc
test
out
inc
push
fwait
lahf
cmovnp
ljmp
add
in
mov
cli
mov
je
adc
int
mov
cmp
jl
mov
adc
add
add
movsb
and
add
ret
jg
aaa
sub
adc
mov
sbb
add
add
add
xor
add
rcrl
lret
push
bswap
clc
jne
dec
add
mov
add
mov
xlat
aam
inc
pop
add
fstpl
into
stos
add
jp
mov
iret
sub
lcall
loop
dec
cmp
pop
pop
xchg
fstpt
adc
dec
scas
les
lds
add
jg
lock
add
iret
fmuls
fnstsw
shlb
cmp
adc
repz
xor
fwait
in
add
sub
cmp
es
xchg
arpl
push
loopne
mov
pop
dec
sbb
data16
push
movsl
sub
stc
rorb
cwtl
sbb
aam
les
dec
out
push
mov
ret
inc
or
or
out
mov
pop
cld
out
xlat
popa
in
jb
inc
cltd
adc
das
jnp
push
addb
push
add
and
insl
mov
jnp
add
aad
fnstenv
mov
dec
sub
icebp
mov
mov
shr
hlt
jbe
push
mov
cli
pushf
pop
jns
dec
shr
cwtl
mov
adc
out
aaa
iret
sbbb
loope
xchg
jl
iret
movsb
cmc
add
fwait
mov
jge
ds
aas
jmp
hlt
xchg
test
sbb
sub
jecxz
add
sahf
stos
adc
dec
aaa
add
push
out
cmc
orb
mov
dec
push
je
out
dec
pop
inc
mov
in
shl
xor
idivl
cltd
out
pusha
sbb
fldl
pusha
mov
mov
add
jge
test
lods
cld
daa
movb
sbb
jecxz
dec
dec
sti
add
enter
dec
gs
add
sti
movnti
jmp
dec
loopne
scas
mov
stos
sbbb
jno
push
int
sti
or
xor
add
je
xor
rolb
add
js
push
aaa
and
add
adcb
xchg
sbb
loopne
mov
add
hlt
iret
dec
push
xor
add
cmc
pop
out
fcomps
fldenv
mov
fs
fisubrs
or
fadds
inc
std
sub
cmp
int
sbb
mov
mov
shrb
push
xchg
mov
sbb
inc
sub
fst
lea
lahf
adc
sub
imul
fstl
fcoms
ss
scas
mov
jbe
cmp
and
ja
in
movsb
jmp
add
mov
cs
jecxz
cld
jo
popa
xchg
dec
add
mov
je
into
mov
xchg
dec
mov
lret
inc
fs
add
pop
push
sarb
js
pop
mov
dec
mov
push
sub
fnstcw
ljmp
mov
imul
cmpb
jne
push
pop
xor
stos
scas
mov
in
nop
mov
test
sbb
iret
sbb
push
jp
mov
push
ljmp
mov
sbb
ds
jmp
lahf
and
add
push
jle
aad
fbld
sub
addr16
in
cmp
outsl
and
mov
inc
jo
fwait
insl
pop
rclb
test
cli
out
sti
jp
add
imull
add
stos
mov
cmc
jo
fadds
js
test
push
add
movsl
addr16
push
test
push
add
imul
and
fildl
iret
dec
add
das
out
sbb
aam
clc
push
cmp
lret
test
and
sarb
mov
adc
xor
sbbl
jnp
in
add
stos
push
dec
roll
and
std
add
dec
gs
stos
xchg
mov
inc
iret
and
adc
daa
fcom
add
enter
cmp
out
xor
dec
negl
adc
mov
push
pop
pop
stos
xlat
lret
jle
cmpb
add
scas
call
add
cs
add
xor
add
ja
mov
int3
pop
aaa
cmp
imul
pop
cmp
rorl
mov
ficoml
lret
in
stos
adc
add
sub
adc
int
jb
inc
pop
cmp
mov
mov
push
push
rclb
dec
icebp
add
pop
test
sub
sub
and
or
push
add
imul
es
sbb
push
cmovnp
fwait
outsb
sub
mov
mov
sbb
fcompl
jmp
icebp
add
mov
xchg
popf
add
aam
scas
push
xchg
jo
inc
add
loop
punpckhdq
in
or
flds
cmpsb
inc
rep
add
adc
daa
outsl
xor
xchg
add
pop
aas
and
cmp
icebp
sub
mov
pushf
add
sub
or
popf
jge
add
sub
jne
push
clc
or
inc
mov
fldl
cmp
mov
dec
in
cli
fwait
or
lret
faddl
cs
push
in
mov
icebp
rclb
mov
pop
leave
loopne
std
imul
and
jg
xor
xchg
jp
push
push
loope
mov
add
mov
mov
mov
or
push
add
int
sbb
jno
mov
jb
movsl
mov
stos
insl
adc
and
sub
stos
aas
xor
fwait
add
xchg
pusha
clc
js
roll
ds
mov
addb
pusha
mov
jo
push
mov
outsb
sarl
call
arpl
lds
pusha
mov
les
insl
mov
daa
shrb
jb
add
sbb
lods
jo
add
cmc
scas
iret
push
adc
pusha
jo
add
xlat
rolb
or
fildll
sbb
push
ret
addb
jp
jmp
pop
xor
test
jg
out
dec
cmp
test
shlb
in
aaa
repnz
push
add
lahf
jg
xor
test
xor
sbb
push
subb
pop
test
lret
stc
adc
mov
pop
out
loop
aas
mov
mov
add
mov
inc
fsubr
insb
add
ret
adc
dec
int3
dec
pop
add
dec
jge
flds
add
xor
add
jmp
mov
int3
cltd
cmp
sbb
and
inc
bound
push
dec
repnz
sbb
push
dec
icebp
pop
mov
sub
stos
push
adc
repnz
mov
push
xchg
or
rcll
aaa
aam
pop
outsl
jge
add
xchg
push
jbe
add
sbb
add
mov
fwait
add
in
cld
in
xchg
sti
dec
hlt
je
add
sub
push
add
iret
cmp
push
out
or
divl
and
icebp
popf
js
xor
fmul
xor
add
mov
imul
negb
lret
xchg
inc
or
test
mov
add
inc
add
add
mov
pop
add
mov
mov
enter
sbb
aam
rorb
out
adc
push
jmp
push
pop
inc
jb
xchg
mov
cwtl
sub
jge
and
add
adc
or
outsl
das
scas
push
cld
sub
mov
and
mov
je
mov
mov
sub
insl
aaa
scas
dec
lock
push
sti
lcall
mov
and
add
and
cmp
mov
addr16
test
add
cltd
mov
jne
ret
fcmovne
dec
jecxz
add
fwait
pop
aas
mov
in
lret
pushf
sub
jl
ljmp
add
xchg
mov
roll
jnp
mov
jmp
add
lret
xchg
fimull
jecxz
xchg
fisubs
mov
pop
out
pop
push
add
daa
adc
das
jl
cwtl
mov
add
negl
sub
push
and
mov
pop
lcall
add
cs
jl
push
loopne
clc
or
inc
out
push
add
pop
lea
add
pop
mov
jge
add
xchg
mov
add
inc
in
add
push
nop
int
jns
aaa
cwtl
cmp
addl
inc
mov
push
add
cli
fists
lods
int3
dec
mov
jnp
push
rcl
cmp
add
cs
dec
adc
inc
mov
xchg
add
cmp
out
add
jge
pop
add
cs
add
adc
lods
push
xor
mov
dec
xor
jo
stc
mov
out
sub
insb
pop
jp
lock
and
xchg
add
add
into
cmpsl
mov
pushw
ja
fwait
das
xchg
push
add
and
enter
mov
mov
inc
mov
sub
cli
js
jnp
or
and
adc
adc
subb
pop
ds
xchg
pop
orb
mov
mov
mov
mov
push
add
pop
adc
mov
stc
add
push
imul
or
jo
add
xor
mulb
popl
enter
xor
sti
out
add
dec
sub
adc
inc
cmp
fiaddl
add
inc
ss
std
popa
mov
push
mov
pop
xchg
dec
andb
xor
push
or
inc
fistpll
jns
dec
out
add
jmp
mov
and
out
clc
rorl
add
xor
mov
nop
adcb
and
aam
push
outsb
sbb
jecxz
enter
xor
pop
ret
rcll
shrb
mov
add
mov
cmp
loopne
add
test
insb
sub
and
scas
fisubs
adc
inc
cltd
cwtl
inc
aam
adc
mov
decl
adc
xorb
mov
popl
loopne
popf
pop
mov
sbb
cld
cli
add
in
test
add
enter
mov
adc
add
jl
sbb
push
cmp
mov
stos
adc
lds
dec
pop
imul
cmp
sub
sub
in
push
leave
sub
add
ret
and
lods
aam
cmpsl
pop
adc
cmp
cld
pusha
out
out
testb
shl
loopne
mov
add
mov
pusha
mov
mov
sbb
add
pop
jbe
dec
inc
jo
mov
nop
inc
gs
inc
aad
pusha
rcr
cmpsb
shr
enter
int3
inc
ja
inc
shll
jnp
add
push
movsb
and
mov
cs
mov
movsl
add
lock
pop
cmp
sar
cmp
cmc
or
inc
shlb
adc
adc
mov
xchg
or
jecxz
dec
jnp
mov
pop
push
pop
inc
outsb
fistl
aas
rcrb
sbb
es
lock
ror
mov
xlat
sbb
add
mov
sbb
mov
test
scas
xor
bnd
popf
xchg
xor
loop
push
dec
scas
jmp
outsl
add
test
sub
xchg
lds
clc
inc
push
lea
ret
push
sarb
and
push
andb
addl
repz
pop
lds
sti
add
xor
shlb
sbb
pushf
in
add
lods
adc
pmaddwd
fchs
enter
xor
lods
mov
pushl
fdivr
pop
jo
push
inc
repnz
dec
loop
add
inc
sbb
adcl
cmpsl
fiadds
push
mov
pusha
into
add
mov
inc
add
mov
xor
adc
andb
jp
sarb
push
xorb
das
in
imul
test
sub
scas
adc
aaa
movl
jno
adc
out
fisttps
and
sbb
add
xchg
rcl
and
aas
mov
add
mov
adc
push
mov
lds
inc
lods
stc
call
xor
or
sub
into
dec
add
mov
add
fsub
jecxz
fadds
loopne
or
shlb
stos
pusha
cmp
or
and
dec
jne
or
jmp
jno
popf
xchg
xchg
insb
xor
mov
add
pop
jmp
add
jmp
lods
and
loopne
add
lret
imul
pop
pop
add
call
insb
pop
inc
xchg
inc
sahf
mov
js
packsswb
pusha
pop
outsb
add
test
imul
cmp
int3
push
mov
loopne
fwait
iret
mov
add
jp
add
stc
loop
repnz
sub
add
add
fsubp
mov
mov
pop
fmull
out
add
les
cmp
mov
sahf
add
xchg
push
and
jmp
roll
inc
dec
in
jo
das
das
test
jge
mov
jns
sub
shrb
ljmp
sbb
or
pop
mov
sbb
pop
shl
sbb
call
cmpsl
lcall
jbe
sarb
push
or
jno
adc
add
incl
jae
in
outsb
out
filds
dec
rorl
idiv
pop
add
sub
enter
in
aaa
popa
lods
pop
fsubs
mov
add
pop
pop
xor
test
ret
jecxz
lcall
adc
ret
xor
xor
add
aas
xchg
inc
dec
adc
cmc
or
push
nop
add
sub
and
cmpsl
cmp
lock
testb
xchg
loop
or
repz
mov
ds
movl
mov
inc
loopne
fsubl
mov
adc
clc
enter
add
or
add
jae
fisttps
and
popw
rcrb
or
jbe
addl
pop
mov
cli
sub
icebp
cmp
mov
xchg
fldl
fmuls
cwtl
js
add
lret
insb
lea
shll
add
aaa
or
cmc
mov
je
popa
pusha
pop
jge
test
out
add
or
aam
aas
or
movsb
test
mov
push
inc
repnz
rolb
out
push
imul
ror
in
add
test
les
adc
jmp
or
push
dec
test
iret
push
jb
insl
mov
lret
add
push
in
add
adcb
std
mov
roll
rorl
outsb
inc
arpl
loopne
xchg
movsl
add
jl
mov
ljmp
add
mov
loopne
insl
pop
add
leave
pop
or
jp,pn
cwtl
mov
mov
jmp
repz
lods
xchg
xchg
cli
push
add
loopne
jl
nop
sbb
mov
fs
pop
pop
leave
pushf
test
sub
cmp
pop
jae
clc
push
inc
cmp
mov
add
add
cmp
pop
fldenv
cwtl
fmuls
incb
data16
pusha
addb
je
pop
mov
mov
and
add
inc
out
fldl
enter
mov
and
mov
das
xchg
mov
outsl
into
push
in
test
inc
call
xor
mov
add
add
add
xor
lea
dec
pop
xor
jbe
xchg
push
sbb
clc
cmpsl
add
xor
sub
out
les
xlat
xchg
nop
filds
mov
pop
pop
and
mov
cld
cmp
xchg
enter
int
adc
jns
add
aaa
lret
push
dec
pop
push
add
dec
sahf
jne
int
mov
cmp
jecxz
lods
add
push
xlat
push
inc
imul
bound
inc
xchg
pushf
mov
sbbb
cmp
ja
sahf
pop
cmp
lahf
mov
jo
ds
int3
insb
add
inc
pop
xchg
lret
add
push
daa
inc
jge
rclb
jb
in
mov
push
jns
xchg
inc
pop
icebp
mov
das
pop
xchg
jno
mov
pusha
mov
push
push
ret
add
jne
mov
adc
cmp
xor
add
ret
pop
sarl
pop
pop
dec
xchg
aaa
and
iret
push
inc
sbb
push
pop
mov
sbbb
hlt
lldt
cmp
add
cmp
or
cld
pop
je
leave
cmp
test
or
add
ret
cmp
sub
cmp
mov
cwtl
pop
cmpb
push
cli
adc
nop
das
bswap
mov
or
movsl
lea
mov
inc
xchg
and
adc
push
movb
sahf
xchg
mov
icebp
aaa
jp
cmp
leave
inc
or
add
movsb
sbb
add
addb
in
das
pushf
cltd
inc
stc
daa
hlt
fs
add
enter
rcll
in
add
jno
cmp
sahf
jbe
popf
ljmp
mov
xchg
add
or
add
dec
popa
icebp
mov
or
aas
ljmp
es
mov
int3
mov
dec
add
sbb
pop
flds
mov
and
jns
add
push
sub
fildl
jp
add
cmpsl
into
clc
xor
sub
das
xor
dec
lea
sub
xchg
add
sarb
iret
xchg
mov
clc
or
insb
pop
add
enter
mov
add
negl
enter
enter
cmp
adc
lods
lods
add
rolb
ss
pop
cmp
mov
pop
in
mov
aas
or
adc
and
cmp
xchg
pop
add
cmp
add
in
loope
mov
jo
test
adcb
cmp
add
stos
dec
orb
add
and
loope
scas
xchg
sbb
sbb
pop
in
jo
call
movsb
movsb
testl
sbb
add
sbb
mov
add
add
push
addb
mov
jge
add
mov
add
cmp
xchg
mov
push
add
in
sub
xchg
shl
pop
mov
mov
lea
call
mov
add
xchg
sti
gs
add
lods
mov
adc
sahf
test
fdivr
mov
xor
aas
adc
flds
sbb
xor
add
nop
or
roll
gs
subb
out
lock
jnp
out
cmc
out
jb
jp
add
repnz
int3
xchg
or
repnz
mov
mov
push
icebp
cs
rclb
test
add
add
dec
fidivl
add
ret
iret
mov
dec
adc
xchg
idivl
xchg
add
test
mov
lret
fs
jns
loopne
pop
pop
sbb
add
shrb
sbb
pop
jo
nop
add
into
jno
push
insb
cs
mov
imul
int3
sbb
mov
sbb
adc
adc
faddl
je
rcr
enter
add
mov
outsb
add
pop
lret
pop
sbb
add
repnz
xchg
jle
in
lods
add
stos
mov
add
add
dec
enter
add
insb
stc
add
pop
mov
cmp
jae
stos
scas
fadds
ucomiss
leave
dec
push
cmp
test
jg
pop
mov
push
dec
add
sbb
fs
add
std
xchg
test
mov
pop
aad
push
sub
adc
int3
test
dec
scas
shr
ss
push
adc
js
test
movsl
leave
in
dec
or
pop
jno
jb
callw
cmpb
out
repnz
nop
pop
repz
lret
or
icebp
mov
lcall
adc
sbb
sti
sarb
iret
add
or
mov
sub
fs
adc
adc
nop
pop
movsb
pop
cmpxchg
pop
mov
jmp
dec
loopne
xchg
mov
shl
or
sub
scas
xor
mov
popf
rclb
fwait
test
ret
mov
sarl
nop
or
mov
clc
sbb
negb
aad
mov
nop
xor
adc
popf
daa
add
dec
in
cmp
sahf
pop
adcb
lret
inc
add
xchg
sar
adc
int
or
ja
nop
or
add
pusha
push
orb
pop
int
das
aas
xchg
addb
sbb
imul
mov
loopne
in
rorl
ret
ret
pop
add
xlat
xor
jo
push
stos
cmp
or
stc
lds
sbb
ficompl
mov
mov
adc
inc
insl
jp
gs
push
shlb
stc
or
or
dec
sarb
inc
sub
ljmp
cld
lods
shrb
cmp
addb
or
fucom
pop
adc
sub
cmpsb
aam
test
push
insl
inc
mov
push
add
insb
in
mov
mov
sub
push
mov
cmp
add
je
xor
test
stos
jbe
repz
dec
add
imulb
insb
sub
roll
push
int
movsl
roll
sbb
xchg
aaa
dec
add
leave
bnd
faddp
lods
add
movsl
mov
arpl
add
loopne
fsubs
movl
or
push
and
pop
or
cwtl
stos
add
xchg
push
mov
and
hlt
add
sbb
je
or
or
jnp
or
lret
lret
loop
adc
stos
and
cmpsl
add
adc
movsb
or
inc
push
ret
add
pusha
out
nop
xor
add
jno
cmp
addl
sbb
lret
mov
fistpll
or
mov
sahf
add
or
ret
pusha
je
and
addl
push
add
mov
aas
movsb
movl
jle
stc
mov
cmp
add
xchg
add
test
outsl
cmp
or
jge
xor
lods
loopne
cmp
add
enter
xor
jnp
or
add
push
repnz
shll
fstl
inc
pop
inc
xchg
ret
mov
fildl
xor
test
frstor
inc
add
imul
cld
add
clc
and
push
mov
jmp
leave
cmpsl
lock
je
shlb
inc
mov
ds
and
fimuls
test
test
int3
add
std
sub
add
xchg
jo
popf
mov
sti
or
aas
nop
or
lods
mov
into
int3
out
mov
pop
push
test
in
cmp
jle
out
orb
add
pop
cmpsl
mov
stc
je
pop
add
xchg
dec
pmuludq
push
in
sbb
filds
cmp
movsb
xchg
bound
push
push
in
aas
add
push
enter
sbb
rorb
orb
mov
enter
into
pop
add
push
aam
mov
loopne
mov
sahf
movsl
mov
jo
or
inc
shl
outsb
je
sub
sbb
cmpsl
popl
cmp
js
add
ss
add
pop
test
out
dec
add
mov
pushf
cwtl
mov
loop
outsl
es
push
cmp
xchg
push
mov
or
jno
fwait
jnp
and
jae
sbb
cmp
sub
mov
mov
test
test
jl
push
rolb
push
stos
cmp
pop
add
insl
ja
out
push
sub
loop
mov
sbb
add
and
clc
mov
xchg
mov
push
inc
js
sahf
add
mov
lock
jmp
psubusw
repz
mov
aam
or
dec
push
push
cmc
rolb
sbb
roll
sbb
inc
jecxz
xchg
mov
sbb
dec
inc
nop
ljmp
add
ja
push
mov
hlt
out
mov
adc
adc
xorb
add
sarb
addr16
mov
movsb
cld
or
scas
fidivrl
imul
fnstsw
mov
pop
mov
subb
hlt
sbb
pushf
aas
out
je
fimuls
mov
stos
add
js
sub
imul
xor
inc
add
cvtps2pi
arpl
mov
cmpl
aaa
mov
xchg
addr16
add
xor
pop
push
jbe
mov
jns
add
out
js
push
fistl
inc
add
sarl
sbb
stos
adc
mov
loopne
xorb
xorb
jmp
test
repnz
bound
inc
call
jl
adc
xor
and
shll
adc
jg
call
push
mov
inc
bnd
inc
jl
adc
sbb
add
cwtl
push
daa
insb
jg
or
sbb
js
xchg
add
mov
jl
jne
inc
adc
sub
xor
xor
in
movzwl
dec
cmc
mov
ljmp
in
int3
imul
xchg
fdivr
push
mov
add
mov
fisubrl
add
pop
jo
pusha
ja
dec
xacquire
das
mov
sub
xor
inc
test
and
add
push
jo
add
pop
cmpsb
mov
fildl
add
std
jnp
inc
adc
cmovle
movl
pop
cmp
loopne
ds
insl
cld
xlat
into
std
mov
jp
add
nop
mov
push
cld
subb
fbld
push
mov
shll
loop
data16
and
jle
jno
inc
add
mov
push
mov
pop
pop
jmp
sub
out
xchg
add
sbbb
mov
fdiv
dec
add
psubb
fidivl
ret
inc
lock
test
cld
ds
xor
cmp
rorl
xlat
add
icebp
mov
mov
inc
pop
cmp
xor
hlt
mov
and
pop
dec
jge
mov
pusha
mov
fcmovnu
sub
out
aad
insb
jns
push
sub
adc
insl
bound
fcomip
add
jge
pop
xchg
cmp
inc
jnp
cmp
xchg
jo
add
xchg
add
out
aam
in
sbb
cmpsb
push
jae
mov
fwait
sbb
movsl
mov
adc
add
push
pop
jmp
dec
and
adc
insl
add
add
xor
xchg
lock
fstpt
repnz
inc
jns
add
pop
adc
js
cmp
add
jmp
push
ljmp
and
push
sahf
std
sbb
push
lock
mov
cli
lahf
idivl
add
sub
add
fadd
fimuls
xchg
out
add
fbld
ljmp
pop
xlat
scas
mov
das
add
and
roll
addr16
iret
adc
arpl
movl
imul
mov
add
xchg
cwtl
add
or
insl
gs
cmp
inc
add
dec
in
push
or
cmp
add
dec
add
outsl
adc
xchg
mov
rcrb
mov
and
or
packuswb
out
mov
loopne
pop
fstp
ucomiss
fdiv
adc
or
add
in
sbb
mov
ja
add
pop
add
test
adc
bndstx
mov
rorl
nop
imul
jb
or
mov
sbb
stc
stos
add
jg
xchg
cmp
ja
add
and
add
sahf
jecxz
mov
jp
add
cmp
sarl
push
dec
adc
scas
add
enter
movsl
xadd
push
popf
pusha
mov
lret
mov
sbb
mov
enter
add
fwait
sahf
jns
pop
lahf
addb
push
push
mov
jecxz
popa
adc
push
cmp
sbb
das
in
jmp
out
dec
add
out
cltd
ja
add
add
mov
fldcw
push
stos
jnp
aaa
sarb
or
xchg
clc
jnp
xor
sub
lods
add
or
push
jmp
jp
xor
xor
insb
mov
rol
ret
mov
inc
nop
mov
in
pusha
inc
push
add
rcrl
cmp
lcall
xorb
add
mov
lods
xor
test
je
pop
mov
jns
in
add
push
jp
inc
add
mov
lcall
add
push
inc
sub
sub
hlt
mov
negl
fimuls
jns
js
movsl
jo
sbb
ljmp
lcall
sar
jle
out
push
add
enter
pushf
mov
xor
stos
jb
jae
cmp
addl
pop
add
clc
mov
inc
cmpb
inc
adc
test
mov
nop
fcomps
adc
push
cmpl
add
outsl
shr
fwait
pop
cmc
mov
jmp
cmp
add
mov
cmp
ss
js
inc
negb
mov
and
xchg
fnstsw
ljmp
add
mov
add
es
adcb
lea
int
jle
xchg
nop
xchg
dec
repz
xor
shl
push
addl
adc
xor
rorb
push
aam
adc
stc
repz
cwtl
push
add
scas
pop
std
add
sbb
mov
add
nop
fildll
nop
loop
jle
test
xor
add
jns
add
cmp
push
outsl
pop
mov
mov
add
pushf
loop
add
or
out
jnp
push
add
int
or
imul
test
xor
xor
xorl
aad
lea
arpl
and
nop
add
jo
jge
aas
or
xchg
mov
or
and
out
add
js
fisubrl
add
pusha
fstpl
jae
add
xchg
or
or
aam
sub
int
sub
cltd
clc
dec
ljmp
adc
shll
inc
or
sub
addr16
push
test
imulb
mov
add
dec
or
add
xor
dec
mov
std
add
loope
insb
add
and
int
dec
add
gs
mov
xchg
lods
pop
cmp
cmp
sub
dec
sbb
aas
js
scas
dec
adc
ret
or
imul
or
mov
ror
add
daa
lahf
sub
lds
and
movsl
mov
out
aam
jo
sahf
pushf
jmp
jnp
dec
inc
xor
adc
repz
subb
sub
xor
or
lcall
xor
pinsrw
mov
flds
pop
popa
sbb
vmovlps
xor
or
jmp
inc
mov
lret
cld
dec
les
pop
fwait
stos
rclb
jno
testb
adc
fcmovbe
mov
sub
sahf
mov
add
or
xchg
cmc
sbb
jo
inc
inc
add
pop
and
sbb
jae
xor
popl
data16
fistpl
mov
loope
inc
push
add
inc
es
jbe
add
pop
push
push
xor
mov
in
inc
out
jmp
adc
add
add
dec
rclb
cmp
bound
add
sub
lahf
inc
sbb
mov
stc
cmp
cmp
pop
in
mov
scas
shlb
stos
dec
add
loope
nop
pop
lods
push
jp
pop
pop
mov
mov
pusha
stos
ret
cmpsl
lcall
pop
push
test
pop
dec
xchg
insl
add
or
test
stc
pop
xor
mov
add
jmp
mov
stc
pop
add
fcoms
out
mov
sarb
pop
add
add
jl
in
popa
adc
pop
call
ficompl
stos
add
fwait
or
idivb
push
sub
loope
inc
idivb
sub
push
hlt
in
mov
and
cld
push
mov
rsm
sub
add
or
mov
inc
sub
std
lock
inc
add
arpl
and
aaa
lret
mov
cwtl
mov
fmul
test
mov
gs
cli
test
push
cmpb
cmp
xchg
xchg
icebp
orb
mov
ljmp
xor
adc
mov
add
jo
lcall
jmp
fmull
adc
and
dec
add
into
stos
imul
pop
add
jge
loopne
pop
push
nop
ss
cmp
adc
sbb
lret
cltd
mov
mov
xchg
addb
or
dec
cmpsl
scas
add
xor
std
xor
xchg
xorb
xchg
add
lods
insl
repz
scas
mov
shl
das
es
add
inc
cli
jno
mov
add
andl
pop
pop
ljmp
cmpsl
inc
jl
fadds
add
int3
out
loopne
out
popa
mov
loop
mov
ljmp
cmc
fucomi
sbb
dec
push
add
mov
cwtl
pop
xor
add
roll
test
jge
hlt
mov
mov
pop
outsl
outsb
mov
add
sub
flds
rclb
sub
stos
pop
push
jecxz
dec
sub
adc
adc
adc
jge
push
push
out
fwait
adc
pop
inc
in
in
leave
iret
repz
cmp
mov
mov
dec
mov
ret
in
lods
mov
dec
testl
cli
mov
insb
cmp
mov
xor
lcall
xchg
fsubrs
mov
les
stc
gs
aad
stc
inc
popf
out
sub
add
xor
sti
cmpsb
fiaddl
lret
lods
inc
jecxz
lret
add
cmp
mov
add
frstor
cs
pop
jnp
cs
add
in
stc
mov
sub
cmpsl
pop
xlat
pop
int3
add
jmp
hlt
pop
add
xchg
mov
jb
roll
popf
sahf
out
in
les
enter
sub
filds
mov
iret
cmp
jle
add
push
test
push
bnd
out
adc
or
sbb
mov
add
mov
movsb
out
cs
rcll
add
and
add
xor
pandn
sub
add
lods
fildl
mov
daa
aaa
add
mov
cld
add
sub
add
sbb
jns
icebp
add
mov
push
xchg
jl
pop
sar
or
faddp
sub
inc
orb
mov
ret
fadds
bound
cmp
inc
pusha
rcrb
jb
pmaxsw
pusha
jmp
jae
add
mov
add
scas
mov
jnp
lods
inc
or
inc
push
or
in
mov
aad
pusha
cmc
cld
dec
cmp
lock
add
imul
insl
rcrl
add
add
inc
negb
mov
or
orb
fcompl
add
dec
fnsave
add
outsb
loop
sub
and
pop
jmp
hlt
mov
mov
pop
dec
add
stos
out
push
nop
in
mov
mov
sbb
cld
add
rcrl
aad
sub
out
into
ss
or
pop
pop
adc
cmp
sbb
ja
add
sbb
sub
dec
fnstsw
inc
aas
into
stos
dec
and
pop
data16
and
and
jle
in
loope
add
dec
push
sub
jg
sarb
in
add
std
insb
out
je
dec
cmp
pop
jne
pop
mov
xor
js
or
jne
pop
lret
mov
mov
cli
rcl
sahf
je
dec
add
das
loopne
mov
pmovmskb
pop
push
into
mov
outsl
ficoms
ret
add
or
and
sub
in
add
mov
xor
sarb
and
pop
sarl
xchg
adc
xchg
pop
cld
leave
jno
idiv
bound
add
std
mov
arpl
mov
and
insb
rcrl
fldl
xchg
mov
mov
and
add
daa
inc
adc
cwtl
or
es
ljmp
or
dec
cltd
xchg
add
xor
inc
add
jle
and
xchg
or
fisubs
mov
jb
add
add
push
imul
mov
add
inc
cs
or
jnp
add
hlt
sahf
jo
pop
aas
mov
addr16
js
inc
cmc
sbb
adc
icebp
clc
pop
cmp
loop
data16
push
das
dec
add
lahf
in
je
shrb
add
lods
call
gs
fcoml
add
mov
xchg
scas
pop
lcall
test
sub
jl
pop
xchg
pop
addl
jbe
adc
cmp
add
mov
jge
adc
xchg
add
mov
add
insb
or
inc
fiaddl
mov
divl
mov
pop
mov
lds
mov
fwait
jo
add
adc
and
std
add
sahf
mov
add
jns
add
inc
xchg
iret
add
outsl
repnz
cmp
pop
lcall
push
fsubs
mov
mov
jne
pop
in
add
cmc
push
mov
popa
pop
mov
add
inc
and
out
push
or
popf
in
mov
jl
je
nop
dec
jl
add
mov
movsb
push
cwtl
and
push
sub
sbb
adc
dec
cmc
or
add
je
jl
add
sbb
sbb
xchg
fldcw
cmp
imul
pop
mov
inc
or
push
mov
outsl
add
aad
inc
sbb
add
cmp
add
movsl
cmc
fsts
pop
inc
mov
pop
clc
sub
rcr
in
lsl
mov
push
out
cmpsl
add
or
stc
sbb
or
push
lods
pop
sub
inc
call
aam
push
xchg
pop
dec
xchg
in
and
les
faddp
fcmovne
sbb
sbb
xor
pop
mov
lods
add
test
add
rorl
and
sbb
inc
lods
mov
cwtl
lcall
sbbb
pop
inc
pop
popa
pushf
aam
lcall
and
lock
dec
jmp
jne
adc
add
push
cmp
out
cmpsb
test
mov
add
push
xor
add
lret
mov
or
cli
or
scas
rclb
push
adc
insl
shlb
lock
add
jle
ljmp
hlt
fsubrl
call
aaa
in
fstl
pop
cmp
xor
test
call
mov
repnz
mov
or
mov
adc
jl
mov
lds
clc
adc
loopne
add
sbb
add
adc
daa
jno
pop
xlat
pusha
pop
ja
pop
fiadds
xorb
sub
fisttpll
popa
pop
cld
sub
push
stc
rolb
mov
pop
pop
fstps
pop
inc
shr
sub
into
add
lea
adc
aam
mov
je
add
pop
inc
shll
loop
outsb
cld
mov
sub
add
add
inc
lds
push
fadds
dec
mov
repnz
mov
arpl
jae
push
aas
je
xchg
mov
xchg
sbb
inc
sti
cmpsl
inc
stc
rorb
jae
mov
cltd
push
jge
xchg
sub
add
repnz
xor
push
cli
pop
into
mov
sarb
xchg
mov
rolb
sub
mov
dec
mov
mov
add
dec
repz
push
push
add
jge
and
adc
and
lock
pop
adc
shlb
int3
add
sub
and
cmp
unpckhps
out
sub
mov
dec
add
mov
xor
mov
xchg
jl
lcall
sti
sbbl
or
nop
pushf
jo
add
jmp
push
xor
push
call
push
xor
sub
incb
and
add
and
mov
mov
popa
call
mov
pop
mov
fisttpll
xchg
rolb
fiadds
test
and
insb
sub
in
ds
mov
mov
push
popf
sub
push
xor
mov
sub
adc
loop
adc
aas
lahf
test
mov
test
and
and
push
sbb
push
stc
pop
fs
adc
dec
push
iret
add
xlat
aaa
sti
push
jecxz
test
push
or
mov
cmpsl
add
sbbb
mov
sti
dec
pop
or
pop
xchg
inc
enter
gs
ljmp
test
test
jno
add
movsl
and
fwait
lret
pusha
inc
xor
add
inc
addr16
stos
xchg
sub
sbb
cmp
jnp
pop
push
inc
aaa
add
add
push
inc
sar
add
test
repnz
into
xor
or
fisubs
xchg
mov
add
in
sbb
mov
and
loop
xchg
aad
aaa
gs
cwtl
test
in
negb
or
mov
aad
jg
add
push
rorb
push
test
push
add
ja
adc
add
int3
jae
cmp
sub
in
cwtl
loope
lds
sbb
loope
sbb
aam
call
sub
roll
adc
cmp
icebp
mov
lods
cli
test
sar
or
adc
mov
jle
sarl
pinsrw
add
shrl
test
movsb
push
mov
imul
mov
call
jl
fsts
ss
test
sub
enter
mov
andl
pop
sub
add
icebp
add
mov
adc
add
ss
pop
lds
push
mov
push
lods
movsl
imul
inc
add
stc
outsb
add
rorl
es
lret
daa
push
fdivl
test
ljmp
sub
lods
aad
xchg
xor
add
shlb
daa
popa
mov
xor
cmp
pop
sub
push
dec
add
dec
bound
movsl
mov
mov
jns
xor
lret
nop
dec
add
lcall
and
movsbl
xchg
add
cmp
and
iret
push
add
test
push
pushf
add
nop
xchg
shrl
fcoml
and
pop
arpl
ret
fdivr
inc
mov
cmc
add
cmp
sti
pop
data16
inc
aam
rolb
or
xor
lea
add
nop
mov
hlt
aaa
add
jl
dec
pop
and
inc
pop
jge
in
mov
roll
lock
add
push
pop
adc
sbb
and
mov
loop
and
mov
adcl
pushf
dec
in
mov
loopne
xor
dec
adc
imul
xor
inc
setle
and
or
stos
cmp
movsb
shll
sbb
imul
and
mov
push
push
xor
jb
dec
inc
pushf
loopne
xor
aaa
mov
sbb
in
mov
adc
popf
les
dec
faddl
dec
loope
xlat
or
mov
mov
fmuls
push
sbb
xor
enter
sbb
and
and
xlat
push
cmpsl
mov
cltd
mov
and
mov
cltd
rcll
insl
sbbl
fidivs
movsb
add
jb
push
call
sub
popa
lret
cmpsl
dec
loope
push
mov
mov
mov
fisubrs
and
and
inc
pop
fcmovne
xor
sub
and
cltd
sub
sbbb
int3
call
adc
ljmp
xor
lcall
push
int3
jo
adc
call
adc
cli
jmp
iret
xor
xlat
push
cmc
mov
or
xor
call
loopne
or
xor
rol
inc
lds
adc
inc
cmp
mov
inc
cmpb
fdiv
adc
std
fcoms
icebp
adc
std
xchg
sub
pushf
sbb
mov
and
stc
mov
sbb
mov
sbb
sbb
nop
in
jp
dec
mov
js
lcall
xchg
cmp
push
fsubr
dec
push
inc
sbb
push
enter
daa
xor
or
les
mov
sub
sbb
mov
aas
nop
adc
pop
clc
ljmp
mov
dec
in
negb
pop
cwtl
or
xchg
sub
adc
pop
lret
push
or
das
jb
sbb
pop
movsl
lea
in
iret
inc
cmp
fistpll
je
jg
js
xcrypt-ecb
cmpsl
dec
arpl
xchg
out
je
scas
sub
in
mov
lds
xor
inc
sbb
out
push
subb
jb
hlt
aaa
xchg
das
cmp
aas
clc
iret
cmp
adc
sub
lods
cli
clc
add
in
fists
roll
adc
add
and
into
stos
cmpsl
sbb
sbb
out
mov
cmpps
lods
lock
dec
cmpsl
dec
inc
jg
mov
lret
jbe
pop
dec
lock
dec
adc
push
pop
jecxz
jmp
and
push
pop
adc
mov
cmpsb
push
outsb
test
xor
push
or
xchg
lcall
xchg
adc
pop
inc
dec
js
loopne
inc
add
popa
dec
pusha
dec
out
ud2
or
mulb
js
cs
notl
ret
hlt
sub
push
inc
and
or
jo
sbb
dec
add
xchg
insl
lock
jg
loopne
loopne
or
shrb
andb
cmp
mov
sub
xchg
lods
cmpsb
insl
or
bound
cmp
mov
pop
jg
popf
movsl
push
stos
push
lahf
xchg
stos
in
and
jle
and
pop
and
shll
ss
jecxz
inc
adc
jmp
xor
sub
gs
xor
inc
insb
mov
sbb
les
bound
lea
pusha
and
notl
adc
jmp
sub
add
sahf
shlb
cli
and
and
adc
mov
adc
dec
push
sbb
and
movsl
jo
mov
adc
add
rorb
or
add
scas
cmpsb
mov
push
fldl
xchg
jo
inc
inc
mov
pusha
ficoms
pop
xchg
jp
xor
xchg
or
push
xchg
or
add
bound
push
adc
jno
test
push
mov
fsubs
push
daa
loop
xchg
push
cmp
in
js
lock
push
inc
sub
insb
shrb
ret
in
in
lahf
mov
andl
mov
flds
mov
xsave
repz
sbb
pop
and
xchg
adc
adc
rolb
inc
sbb
adc
sbb
dec
pop
pusha
push
adc
push
sub
mov
popf
push
mov
jbe
sub
stos
mov
sahf
push
jecxz
insb
mov
mov
sbb
jmp
sbb
ja
int
mov
or
xchg
or
ljmp
out
xchg
int3
ror
xor
and
aad
xorb
ss
rorb
push
fldcw
icebp
mov
cmpb
xor
inc
jle
lea
xor
aam
in
pop
repz
cmp
xlat
int
std
jecxz
or
mov
pop
andb
iret
push
adc
lea
ja
lock
xchg
push
fwait
push
jo
mov
sarb
xor
xlat
js
and
sbb
pusha
and
int3
rorb
xor
gs
lods
push
test
icebp
push
jae
lahf
add
dec
cmp
pop
add
shlb
fildl
push
dec
cmp
jge
aaa
push
cmp
cld
pcmpeqb
push
lods
orb
inc
add
inc
sub
fnstsw
cli
push
dec
jl
sub
mov
or
rorb
pop
add
cli
sbb
jno
jge
popf
lea
test
xlat
adc
loop
add
adc
and
pop
jecxz
or
sub
hlt
add
mov
ds
sarb
nop
pop
cmc
jae
and
shlb
cld
pop
rcrl
nop
push
addl
add
inc
mov
add
mov
cld
jmp
rclb
add
jp
and
adc
filds
frstor
pushf
add
add
and
sub
lods
fsubl
sti
dec
add
int
mov
or
xor
sub
xorps
arpl
mov
xchg
jmp
inc
test
dec
stos
dec
clc
xchg
push
fwait
jbe
push
and
lret
mov
jge
add
cwtl
rorl
nop
ret
fldenv
fsubs
add
add
fidivs
out
test
sahf
add
mov
movsl
add
lock
in
dec
add
and
and
les
add
add
je
in
push
or
adc
jmp
aam
pop
add
xchg
adc
into
ltr
jmp
mov
xchg
ja
bound
mov
mov
xchg
add
popf
push
int3
pushf
das
push
hlt
in
call
jp
xlat
loopne
adc
ljmp
iret
sub
add
add
add
mov
aam
add
dec
sub
imul
fisubrs
pop
add
fsubs
push
add
xor
adc
outsl
gs
pushf
jecxz
out
das
mov
mov
cmpsb
call
sub
popf
les
int3
adc
gs
fisubs
dec
sbb
int3
test
lahf
mov
pushf
add
sub
addl
adc
data16
adc
fsubrs
movsl
sbb
daa
inc
icebp
out
add
push
idivb
cld
mov
push
add
adc
push
push
add
pop
aas
ror
in
add
lock
push
popl
sbb
ret
inc
aad
adc
cmp
outsb
jmp
sbb
inc
or
adc
mov
rorb
iret
jle
lret
repnz
add
je
rcll
cmp
pop
ficoml
imul
fsubl
add
or
nop
add
inc
mov
pop
adc
inc
enter
fcoms
add
cld
fbld
sti
sbb
sub
inc
mov
lahf
adc
xor
arpl
cs
loope
loopne
lea
push
out
add
mov
scas
mov
add
movb
and
inc
pop
popa
add
push
outsb
stos
and
subl
mov
testb
mov
and
sarb
add
dec
fdivrs
xchg
add
ds
lea
pop
jmp
ret
xor
mov
scas
jp
mov
or
add
int3
add
dec
jae
dec
add
sub
and
bound
mov
jb
add
pop
and
push
iret
aam
lock
ja
test
out
mov
add
scas
push
inc
pop
loop
and
leave
push
lret
popf
pop
and
int3
in
adc
cmp
cmp
jle
inc
push
push
movsb
sub
jne
fwait
inc
mov
lds
fldl
test
loope
mov
pop
in
sbb
cmp
or
sub
cmp
aad
nop
add
lret
es
and
xor
and
add
sbb
push
pop
nop
call
jecxz
xorl
xor
mov
push
out
mov
ljmp
cli
add
xor
inc
ja
mov
cmp
cmp
adcb
pop
pop
shll
add
jge
xchg
pop
mov
mov
add
add
fnsave
in
notl
mov
test
sub
fistpll
add
fisubrs
out
add
cmpsb
xor
pop
jns
mov
mov
xchg
add
movsb
mov
ja
adc
stos
xor
and
cmp
mov
lock
mov
insl
iret
push
add
push
jecxz
or
cmp
stos
int
add
sub
cmp
icebp
pop
mov
enter
arpl
jle
cltd
sbb
mov
push
hlt
mov
xor
faddl
loopne
ljmp
cmc
dec
mov
lcall
xchg
pop
test
movsl
sbbl
sub
lods
mov
lahf
dec
add
inc
ret
pop
test
outsl
cld
add
es
fiadds
mov
std
cmp
add
leave
pusha
fwait
pop
add
or
or
loop
jae
dec
add
icebp
test
cmpsl
repnz
add
or
sbb
push
inc
add
out
int3
repz
in
add
or
pop
fidivrs
inc
lret
test
mov
add
jo
lock
cli
shll
adc
incl
fimuls
jmp
jge
cmp
addb
insb
jne
mov
jp
test
xlat
add
sub
and
add
mov
adcb
xchg
add
rorw
add
leave
fldl
push
jns
cmc
cmp
cmp
fs
ja
pusha
mov
jle
cltd
jne
add
xor
push
mov
cmp
movsl
xlat
scas
add
and
aam
sub
xchg
cmc
push
roll
mov
inc
rcll
std
add
dec
ds
rorb
jns
dec
add
jno
add
dec
mov
adc
call
jnp
add
fwait
adc
in
inc
inc
not
xchg
jne
add
push
add
or
jmp
sbb
mov
and
imul
mov
jno
and
clc
add
lds
divl
sbb
add
popf
sbb
sub
or
and
add
jne
insb
arpl
aas
test
cmpsl
xlat
das
aam
scas
imul
adc
cmp
jo
add
stos
xor
or
pop
loopne
pop
dec
mov
sarl
add
jmp
or
and
movsl
ja
repz
ror
sti
push
push
add
push
mov
jg
shufps
xor
jae
add
adcl
dec
repnz
jge
lret
pop
lss
pop
inc
pop
jge
sbb
out
test
cmc
pop
add
and
add
jno
dec
es
cmpsb
pop
ljmp
iret
sub
in
hlt
mov
jbe
add
xchg
push
inc
stos
movl
ret
add
js
xor
outsl
add
cmp
out
inc
push
lret
mov
pushf
pop
adc
test
jp
add
jge
cmp
mov
repz
add
rcr
arpl
sub
test
shll
adc
jne
add
mov
xchg
add
iret
ja
mov
jo
or
fnsave
xchg
cmp
aad
xorl
cld
adcb
mull
out
loope
pop
fs
jo
jp
add
sub
lds
enter
mov
fldl
xchg
add
pop
push
hlt
xor
inc
jp
into
inc
mov
add
mov
mov
jb
jecxz
cwtl
sbb
out
sub
or
adc
adc
lahf
push
ret
mov
movsl
shlb
setp
inc
shr
mov
add
jecxz
test
adc
lahf
pop
mov
dec
in
xchg
sbb
lods
add
sub
incl
cltd
xor
repnz
push
pop
sbb
stos
add
push
fldt
push
stos
nop
lock
sub
jno
lahf
repnz
imul
adc
sub
add
push
inc
clc
xchg
in
inc
lock
and
add
loop
repz
aad
fadds
push
sahf
pop
xchg
clc
push
cmp
adc
push
jl
movsb
mov
in
jecxz
pusha
cmpsl
inc
dec
test
adc
dec
jp
in
pop
cmp
mov
mov
mul
lock
mov
xchg
push
pop
jo
js
jl
or
orps
adc
push
and
stos
mov
mov
ljmp
pusha
loope
call
test
xchg
dec
lods
dec
lock
rorl
mov
add
mov
fldcw
icebp
xor
rol
scas
addl
in
add
enter
enter
add
rolb
xchg
in
flds
lcall
xor
dec
xchg
imul
mov
or
test
addr16
aam
jo
in
cmpb
push
or
mov
pop
cmp
sbb
stos
sub
orb
pop
sub
mov
push
mov
lock
mov
add
xchg
add
cmp
cmpl
arpl
dec
popa
add
xchg
sbb
sub
out
jno
pusha
mov
sbb
fldl
stc
xchg
mov
or
mov
pushf
insl
rcrl
bound
adc
bnd
ss
or
sub
outsl
sub
add
jbe
test
adc
lret
add
inc
inc
dec
aad
add
xor
int3
lret
mov
inc
cmp
add
aas
pop
add
sub
out
mov
subb
mov
cltd
add
mov
add
jbe
lret
popa
xchg
mov
xor
cmp
fmull
or
andb
clc
mov
int3
push
aaa
nop
loopne
stos
cmp
or
aam
pop
test
cmpsb
pop
imul
xchg
mov
icebp
add
mov
mov
shll
inc
mov
sub
ds
adc
test
in
pop
pop
les
mov
shll
pop
sub
push
insb
popa
stc
sub
daa
or
push
lret
idiv
inc
xchg
jle
add
shrb
shrb
pusha
mov
aaa
and
xorl
add
fisubrl
int
xor
ficoms
shll
fcoms
jle
xchg
inc
lret
add
out
mov
or
out
int3
add
mov
adc
cli
fisubl
sbb
orb
add
repnz
test
mov
add
xchg
inc
add
les
fldcw
pusha
loopne
mov
add
int
xor
sbb
dec
push
jmp
sbb
sbb
mov
dec
cmp
test
or
push
fiadds
jl
pop
leave
pop
imul
cmp
dec
mov
and
mov
rcrb
mov
insl
jg
sbb
inc
pop
fstpl
jl
rcl
adc
add
sbb
add
es
cmp
jb
or
out
rcrb
mov
cmp
mov
clc
jp
xor
lret
push
arpl
adc
and
aad
adc
cmc
mov
add
mov
lahf
roll
add
loop
mov
rcr
xchg
mov
movsb
push
ret
xor
jl
pop
gs
sub
dec
sbb
icebp
jb
outsl
negb
cmp
mov
lods
sbb
mov
test
add
push
dec
cs
mov
in
std
cld
pop
jno
mov
push
into
sub
sub
add
out
fcmove
push
rolb
sub
cmp
mov
cmovno
xchg
adc
mov
xchg
dec
add
lds
add
dec
insl
lcall
mov
das
insb
ds
cmp
xchg
push
mov
inc
cmp
cli
fstps
sbb
jge
dec
sub
and
daa
imul
push
jmp
and
cmp
add
jl
inc
ret
lock
mov
sbb
pushf
jae
into
stos
dec
jno
add
fsts
cmp
movsb
or
je
cwtl
push
scas
add
inc
mov
add
pop
and
enter
pusha
scas
mov
add
jbe
pusha
mull
aam
adc
cmp
loop
fcom
lock
jae
inc
mov
aam
jl
enter
aam
dec
mov
jae
pop
mov
push
push
cmpsl
shlb
sbbl
out
out
hlt
or
fmull
inc
xor
sbb
daa
sbb
inc
adc
or
add
aas
lret
sbb
mov
or
add
jl
nop
lret
add
jge
inc
jle
mov
clc
push
add
mov
mov
pop
and
rorl
xchg
jp
imul
xor
mov
lods
or
loopne
cmp
push
xor
xorb
ds
pusha
pop
adc
fimuls
fdivs
stos
or
leave
xor
mov
mov
mov
sub
filds
jg
outsl
adc
fstpt
sti
cli
add
inc
and
pop
lret
insl
mov
test
pushf
popf
in
mov
stos
pop
add
lods
pop
movsb
movsl
or
jae
aas
lahf
cmpsl
mov
mov
xor
out
aam
repnz
add
fidivl
pop
adc
cmp
sub
in
cld
pop
dec
arpl
mov
stos
fsts
inc
call
jnp
adcb
mov
pop
dec
jp
icebp
repnz
shl
push
test
insl
adc
push
xorb
sub
dec
in
jo
mov
ret
sub
xlat
dec
shlb
dec
call
out
fnstenv
fs
add
stos
lahf
arpl
mov
add
ss
jecxz
mov
rorb
bound
mov
mov
push
mov
loope
dec
xor
stos
mov
mov
test
sub
imul
in
sbbb
mov
add
xor
sub
add
aaa
ret
sub
sbb
je
add
in
dec
adc
jbe
test
push
dec
mov
or
add
push
sub
xor
clc
clc
sub
repnz
push
popa
dec
loopne
xchg
rclb
mov
fiaddl
mov
jmp
inc
and
lods
mov
clc
inc
sub
add
or
and
or
lods
inc
xchg
adc
sbb
mov
cmp
push
dec
dec
shlb
cli
xor
push
sbb
and
add
push
jl
test
sub
push
sbb
push
or
xor
rcll
movsl
xor
xor
je
nop
lock
jmp
jns
push
mov
in
add
add
jg
nop
push
xchg
add
scas
sti
nop
adc
fnstcw
in
lock
out
fisubl
or
pop
sub
shl
mov
adc
or
dec
or
stos
psrlq
pusha
orb
xchg
lcall
outsl
enter
std
push
jp
adc
loopne
fldl
subb
or
pop
jne
insb
cmpsl
add
dec
adc
nop
sbb
and
jbe
pop
cltd
push
movsl
nop
test
repnz
add
lock
pop
cmp
jecxz
flds
cwtl
push
addb
sub
inc
insb
pop
std
in
enter
out
insl
mov
jno
cmpsl
repnz
lds
xor
cmp
loope
lret
cmpsb
add
lods
push
cli
adc
and
lods
add
das
sub
push
add
outsl
cmp
inc
test
mov
sarl
sub
pop
adc
push
mov
mov
lods
sub
out
or
and
addl
push
xchg
inc
loope
sti
mov
enter
sub
stc
inc
mov
imul
rcrb
sbbl
test
lret
or
add
sarb
vrcpps
mov
inc
cmc
movsl
ret
test
insb
das
and
les
lock
addr16
movl
sub
test
cmpl
mov
sub
stc
cmp
test
add
movsb
xchg
push
push
xor
xchg
add
jno
or
sbb
push
xchg
sbb
sub
mov
insb
roll
mov
sub
aas
mov
push
xchg
push
add
in
and
mulb
fldt
enter
out
xchg
test
add
xchg
push
lret
subb
sub
xchg
cmc
fsubs
cmp
jl
ltr
xchg
sbb
jge
mov
jge
push
call
jno
add
cmp
aaa
sbb
test
addr16
add
pop
sti
shlb
test
push
pop
mov
or
scas
out
nop
int3
pop
stc
mov
mov
cmp
dec
pop
in
pop
rorb
lds
fsubl
adc
push
xchg
add
add
or
dec
mov
sub
cs
or
jge
xor
sbb
adc
mov
in
lcall
fadds
push
xchg
cmc
mov
test
add
cltd
mov
shl
adc
sub
push
cmpsl
or
or
sbb
add
xchg
bound
test
outsb
xchg
test
xchg
dec
add
dec
mov
cltd
xor
aam
int
xor
add
xor
lods
push
cltd
and
aaa
sbb
xor
xchg
test
push
push
jmp
loope
mov
cmpl
sbb
push
dec
or
mov
cld
mov
add
and
lcall
xor
loope
pusha
mov
xlat
pop
fadd
and
sub
pop
xor
test
test
ror
add
mov
dec
jae
pop
and
lock
mov
inc
inc
sub
pop
sbbl
or
orb
daa
pop
testl
jbe
mov
push
or
popf
push
and
outsl
mov
and
sbb
mov
xchg
add
cli
push
mov
add
dec
inc
add
enter
rclb
add
das
jnp
add
xchg
es
xchg
outsb
notb
mov
sub
inc
and
stos
call
jg
ret
inc
nop
add
clc
dec
inc
jns
push
enter
and
jns
rorl
hlt
inc
sub
push
filds
psrad
add
lods
dec
xchg
int3
sub
push
mov
mov
inc
dec
add
outsb
dec
icebp
js
addb
ja
inc
lods
xchg
cwtl
jne
lcall
cli
sbb
sahf
in
testl
mov
scas
aam
fcmovnb
xor
cli
inc
push
leave
add
outsb
xor
hlt
sbb
push
adc
pop
dec
add
mov
js
cmp
push
lahf
pop
mov
inc
sbb
arpl
dec
xchg
leave
repnz
sahf
push
add
push
adc
add
add
xchg
add
adc
cmp
inc
adc
bound
inc
mov
sub
incb
add
jns
or
jge
add
loop
les
sbb
pop
dec
clc
lock
mov
inc
aad
xchg
add
adc
jae
push
aaa
jle
pop
mov
xor
fldl
dec
jo
adc
mov
aad
mov
sbb
add
in
xchg
in
fcomps
rolb
aad
jbe
push
fstpt
in
insb
add
and
subl
lcall
adc
mov
dec
push
pop
add
inc
adc
add
and
icebp
add
outsl
xchg
inc
add
and
add
lods
push
test
icebp
cld
bound
add
sbb
xchg
inc
mov
shr
or
sbb
fstpt
hlt
fnstsw
add
int
inc
inc
lods
cmc
dec
add
push
testb
hlt
sbb
out
insb
add
fwait
stos
dec
dec
add
in
or
jge
add
xchg
negb
push
fldt
inc
jl
or
aas
inc
cmp
fcoml
sbb
push
cmp
sbb
test
pusha
movb
fistpll
sbb
or
or
pop
pop
mov
cmp
sbb
dec
hlt
outsb
add
cltd
jae
xlat
xchg
int3
add
push
fists
dec
xchg
xchg
add
iret
aam
dec
lahf
mov
or
push
mov
cmp
and
and
aad
fsubl
fs
imul
loop
or
push
outsb
ret
xchg
adc
pop
push
jo
cmp
fstl
addl
xchg
int3
xchg
xchg
cmp
add
cwtl
pop
cmp
loope
movsl
sbb
clc
push
or
xchg
push
es
add
add
add
aad
out
test
ret
push
add
in
test
in
add
test
inc
xchg
packssdw
push
loop
push
sub
add
push
mov
out
jb
sbbb
lea
pand
mov
gs
sbb
xor
mov
leave
add
in
lcall
mov
shlb
imul
notl
jg
sbbb
jno
mov
cld
decl
inc
cwtl
lock
xor
or
xor
sbbl
leave
push
or
push
ret
mov
iret
cmp
in
fsubl
xlat
pop
push
and
test
pop
das
dec
ror
insl
adc
gs
mov
pop
mov
mov
mov
adc
sbb
add
jg
add
sub
mov
mul
sbb
mov
out
jo
mov
jno
add
iret
mov
push
push
jle
dec
loopne
loop
mov
popf
xor
sub
fucomip
jecxz
test
std
or
dec
insl
push
add
int
add
mov
mov
mov
stos
add
cmp
push
mov
push
cmp
and
sar
roll
push
inc
fst
push
imul
fnstcw
jle
pop
mov
sti
lret
roll
popf
sbb
mov
in
cmpsl
int3
imul
cmpsb
push
xor
add
jl
shlb
jg
lds
sub
add
xlat
stos
cmc
lock
lret
cmp
xchg
mov
out
jle
mov
add
lods
inc
mov
cmpsb
adc
jo
cld
test
ljmp
mov
sub
cmp
jg
add
sbb
sub
jmp
scas
js
mov
cld
push
mov
xor
loopne
mov
inc
add
fmul
je
stc
shlb
mov
lret
rolb
ss
lret
add
iret
mov
jo
cmp
ret
stc
cvtps2pi
mov
loopne
jo
or
push
outsb
jns
xchg
add
xor
lea
mov
nop
jge
push
push
add
mov
lahf
es
vpcmpgtb
push
rolb
mov
jle
mov
add
imul
mov
mov
and
adc
jg
icebp
or
outsb
add
outsl
inc
fsubl
popa
stos
add
pop
enter
add
je
fildl
adcb
and
add
ficoml
aas
lcall
pop
call
add
dec
sbb
mov
push
aaa
mov
dec
cmp
add
call
repnz
push
clc
cmpsl
adc
xchg
sub
jp
add
int3
ret
ja
loopne
mov
jmp
mov
and
xchg
adc
push
push
add
or
pushf
cmpsb
cld
rclb
or
jecxz
bound
mov
mov
ljmp
jb
leave
js
add
and
push
xchg
fsubr
add
je
mov
dec
pop
or
pop
mov
test
sbb
fbstp
adc
sbb
add
cmp
mov
inc
mov
pop
xor
in
xchg
add
ret
adc
pcmpgtb
lahf
fcomps
das
jle
ja
cmp
sbbl
insb
fs
pop
sbbb
dec
add
sbb
lahf
jge
sbb
fdivl
iret
xor
ds
ret
sbb
cwtl
xor
add
dec
imul
add
inc
fidivrs
jnp
add
xchg
pop
adcb
js
add
push
xchg
sub
and
insb
add
lods
shrl
scas
push
add
data16
mov
mov
aam
insb
out
mov
jge,pt
jle
add
andl
xchg
aas
mov
inc
cld
xchg
and
lods
or
fists
sub
jp
in
dec
adc
xor
or
cmc
sub
pop
push
pop
ljmp
push
add
sarl
out
or
jo
and
add
pop
cmpsb
int3
rcr
addb
cld
and
add
sub
jmp
mov
add
pop
mov
imul
aad
cmp
jno
add
insl
push
movsb
in
mov
mov
pushf
push
add
adc
or
loopne
mov
imul
repz
push
xchg
add
inc
nop
jl
xor
add
pop
test
outsl
jecxz
add
mov
adc
arpl
pop
stos
adc
rcrb
lea
mov
push
xor
jae,pt
rclb
add
std
arpl
pop
mov
repz
or
mov
fwait
add
xor
ret
sbb
repz
add
fsubrs
pop
xor
jae
call
scas
enter
add
cmc
cmpsb
pushf
sti
aaa
mov
in
out
je
in
mov
movsl
cmp
xchg
add
ljmp
daa
and
imul
lea
sbb
dec
add
pop
xchg
fisubrl
loope
lods
jae
mov
jecxz
adc
sbb
scas
cmp
arpl
popf
add
jbe
jnp
test
mov
inc
add
outsb
popa
and
sbb
sbb
sub
mov
pop
lods
add
and
add
mov
fnstenv
push
jmp
jge
jecxz
lock
movb
add
test
and
add
fsubl
pop
repnz
lods
and
add
pop
dec
ret
sbb
sbb
imul
add
jo
jl
dec
out
daa
add
or
rcrl
sbb
divps
hlt
dec
add
xchg
imull
in
dec
or
and
scas
lods
add
lock
cmpsb
rorb
aaa
out
call
in
fiadds
jle
add
adcb
push
push
mov
adc
fcomps
lock
in
jge
xchg
push
insb
xor
and
outsl
lret
fdivrs
int3
add
js
cmp
fsubrs
mov
stos
and
mov
mov
push
sub
sbb
sub
aad
pop
add
mov
out
clc
xchg
xor
fcompl
mov
imul
shrl
pop
add
shlb
insl
add
aaa
popa
aas
push
sbb
add
in
mov
add
dec
sub
add
jmp
test
sbb
into
int3
xchg
lods
jecxz
push
jbe
and
call
rcrb
add
xor
add
fwait
mov
aam
mov
adc
imul
enter
mov
pusha
mov
scas
jle
xchg
shlb
adc
mov
mov
sbb
test
pusha
sbb
push
xor
lods
mov
popf
out
jg
fidivrl
clc
add
xchg
xchg
rol
in
cmp
and
rolb
cmovl
ds
repz
scas
test
xor
mov
sub
inc
mov
add
pop
idivl
or
faddl
sbb
je
add
test
fwait
scas
or
aam
jnp
xor
inc
push
sub
rorb
loop
jae
and
and
add
push
lock
add
fs
push
ret
leave
jns
mov
sbb
or
mov
xor
scas
dec
xor
add
das
mov
add
pop
dec
in
or
fiaddl
ret
dec
sbb
test
or
mov
inc
pop
jae
loopne
push
outsb
cmpsb
dec
and
shrb
add
push
sub
popf
add
outsb
sub
sbb
shll
xchg
lret
add
or
xchg
add
mov
sbb
push
and
mov
loopne
cltd
push
pop
jmp
nop
xchg
pop
adc
jecxz
pop
add
icebp
int
dec
cmpsl
cmpsb
sbb
loop
push
or
repz
jbe
push
mov
fmuls
dec
cmp
adcb
push
add
push
add
pop
aam
mov
imul
sub
testb
and
rolb
mov
lret
pop
push
xor
add
or
addl
mov
jbe
aad
fcmovbe
int3
add
sub
mov
lods
push
push
mov
jo
test
aaa
ds
lea
sbb
fs
push
sbb
ja
pop
out
sbb
jns
dec
jno
lret
add
popf
lret
fisttps
shrb
add
loopne
leave
mov
std
sub
mov
clc
push
movl
gs
lret
icebp
push
xor
sbb
out
outsb
out
add
or
fs
clc
divb
ret
sbb
adc
andb
sbb
push
lea
or
add
push
or
in
sub
ljmp
lea
push
sti
and
pop
xor
test
cmc
xlat
repnz
icebp
push
sbb
inc
cwtl
out
xor
add
pop
jo
ja
clc
jb
add
jmp
cltd
adc
insb
inc
and
sbb
xchg
fmulp
add
iret
stos
jo
mov
lret
popf
in
or
cmp
lea
push
aas
mov
fcmovb
rolb
or
and
add
inc
xchg
adc
fwait
int3
add
lods
cwtl
jg
pop
add
insb
stos
sbb
pushf
add
rorb
iret
add
push
mov
jb
add
nop
pop
pop
add
xor
xor
mov
dec
imul
in
pop
cltd
dec
inc
sbb
cwtl
or
add
pop
inc
scas
daa
adcb
lods
pop
jle
add
and
cmpsl
mov
incl
jle
aam
mov
and
shl
mov
in
out
xorl
xorps
sub
cmp
mov
mov
cmp
add
das
pushf
mov
into
and
add
mov
add
sbb
sbb
push
cmc
jp
in
push
push
fcoml
add
stos
xchg
jbe
sti
push
jne
scas
push
daa
cmp
test
cwtl
xorl
mov
stc
add
ds
repnz
sahf
push
or
mov
add
cli
pop
shlb
cltd
inc
jp
sar
mov
jo
or
push
mov
popa
add
ds
inc
xchg
rcl
add
mov
mov
scas
add
jns
imul
pushf
pop
push
negb
rol
add
enter
pop
addr16
sub
jae
pop
test
sbb
cs
add
mov
inc
add
insl
leave
faddl
lret
in
je
push
xlat
mov
mov
mov
test
inc
push
testl
add
in
xchg
pop
jae
mov
cmp
jo
unpcklps
pop
dec
add
fs
mov
cld
pop
clc
cs
xor
in
mov
nop
lcall
jne
add
faddl
loopne
and
dec
add
mov
in
cmp
jae
aas
sub
dec
mov
into
add
ss
or
mov
lock
xor
jle
lock
mov
add
out
fisttpll
mov
xor
pop
mov
outsl
add
into
mov
mov
lods
push
xor
xchg
xchg
and
jne
mov
rorl
add
add
jno
pop
xchg
dec
add
addr16
jns
test
fs
jbe
xor
fisubs
dec
in
nop
and
dec
mov
adc
sub
and
xchg
faddl
dec
in
outsb
scas
push
cmpsb
push
pusha
mov
inc
stos
mov
cmp
push
lcall
jo
jmp
lds
push
xlat
cli
adc
push
add
daa
pop
mov
dec
and
loopne
fiaddl
sarb
xor
pop
add
js
push
add
jle
lret
mov
add
f2xm1
clc
xlat
cmp
not
out
mov
and
cmpsl
cmp
jge
testl
pusha
add
loop
adc
add
lds
dec
xchg
adc
fildll
dec
cmp
cmpb
cmp
stos
or
int3
shrb
test
add
and
add
push
lods
divb
mov
push
cld
outsb
or
or
lea
cmpsb
stc
add
and
ljmp
jl
shlb
mov
popa
sbb
sbb
lret
aaa
adcb
push
and
out
add
adc
or
imulb
mov
mov
lds
stos
fmull
mov
xor
add
and
fidivrl
enter
daa
or
ja
lods
testl
add
fcoml
repnz
mov
rolb
ljmp
xchg
add
jmp
hlt
cmp
stos
xchg
mov
data16
push
lods
daa
fcoms
jle
add
xlat
add
jp
add
inc
adc
and
test
add
nop
and
add
pop
push
jnp
mov
add
ja
push
stos
jno
add
pop
sbb
add
call
pop
cld
or
leave
cmpb
inc
flds
mov
add
cmc
mov
sbb
add
sarl
ljmp
add
cmp
add
xchg
or
inc
cmp
iret
add
pop
loopne
mov
pusha
jecxz
xor
cmp
mov
add
dec
mov
add
in
out
lds
repz
enter
sub
add
and
add
call
sahf
test
cmp
and
add
cmp
add
loope
or
add
sub
cltd
insb
adc
add
cmp
rolb
add
sub
in
xor
add
push
mov
add
sbb
shr
and
mov
or
adc
xor
mov
sbb
aam
insb
inc
dec
push
pcmpeqb
push
add
loop
pop
andl
adc
jns
mov
pop
xchg
shrb
pusha
dec
mov
xor
in
xor
mov
cmp
dec
call
out
add
xchg
mov
dec
add
or
sahf
pop
in
mov
cs
aad
cmp
pop
out
lahf
push
loopne
mov
push
dec
mov
cs
mov
add
fs
jo
filds
mov
adc
cmpsl
adc
jno
add
cmp
ret
in
mov
add
push
testl
sub
mov
rcrb
cmpsl
test
subb
adcb
fldl
ja
ss
std
add
or
rolb
add
sti
add
pop
pop
lock
sub
imul
cmp
enter
cmp
roll
mov
add
pop
in
orps
pusha
adc
xchg
xchg
test
pop
out
mov
adc
lock
add
pusha
jg
cs
fildl
mov
or
add
flds
pop
addb
adc
inc
outsb
mov
pop
cmp
lds
rorb
or
js
add
jecxz
and
sub
add
pop
or
fsubrl
mov
movsb
jle
clc
sti
pop
xchg
jns
add
dec
sbb
popf
mov
ljmp
add
push
add
or
outsl
nop
fildl
mov
mov
lods
sti
xor
sub
flds
cmpb
push
lret
mov
addl
dec
or
pop
or
cmp
out
add
sub
daa
add
xchg
out
ljmp
pop
add
insl
push
dec
mov
xchg
cmp
mov
jecxz
push
xchg
dec
mov
xor
add
ja
cmp
lahf
jge
adcb
dec
mov
sbb
clc
andl
test
add
add
jmp
movntps
fucomi
add
adc
rcrb
mov
or
cmc
mov
add
in
jno
loop,pt
xchg
xchg
lds
loop
repnz
push
push
add
pop
js
pop
cwtl
fs
je
pop
push
pop
jnp
add
jg
cmp
test
mov
add
sahf
push
ret
ret
sysret
or
sub
stc
add
fnstsw
jno
cmc
sub
add
out
push
push
in
gs
inc
add
push
push
stos
or
mov
xchg
sbb
bound
outsl
pushf
xor
jbe
mov
lock
mov
pop
in
xor
ss
jo
int3
add
mov
shrb
cmp
pop
adc
jns
xor
mov
add
std
mov
testb
test
pop
ficomps
dec
fmull
mov
jge
cwtl
mov
jns
popa
sar
enter
int3
insb
aad
add
out
cmp
bound
imul
aam
add
adc
pop
into
mov
inc
or
add
dec
je
xchg
fsts
in
mov
sbb
cld
fidivs
pusha
sub
sbb
fistpll
inc
sahf
int3
pop
add
mov
pop
je
xchg
jecxz
fsubrl
or
or
inc
add
dec
mov
cmpsl
jmp
or
fs
mov
xor
add
test
pop
jmp
cmc
enter
jne
aad
inc
aaa
pop
jl
xor
sub
mov
xchg
jnp
and
mov
int
add
push
fsts
in
pop
pop
pop
pop
out
mov
xchg
xor
imul
dec
push
xchg
roll
mov
jbe
jns
or
call
add
aad
jne
stos
add
test
sahf
cmpl
clc
add
adc
pop
cwtl
and
ficoms
inc
bound
andb
or
inc
sbb
ret
pop
jno
sub
pop
lock
in
nop
jae
jl
pop
test
cs
inc
lea
iret
cmp
dec
lret
pop
mov
jno
shll
add
cld
mov
loopne
addr16
pop
movsl
xor
add
ret
mov
jo
cmp
add
add
dec
cmp
jbe
cmc
daa
shl
lret
add
popf
cmp
add
mov
mov
subl
call
aad
sbb
in
sti
inc
push
es
loopne
and
cmp
aas
outsl
ja
pop
int3
pop
and
jmp
cwtl
jae
xor
sarb
sbb
add
push
fsubr
stos
js
stos
xor
push
add
shll
movl
clc
loopne
push
add
xchg
sub
add
addl
sub
or
outsl
into
lods
mov
adc
in
and
in
pop
jmp
ret
cmovnp
inc
outsl
loopne
cmc
cmp
push
dec
sahf
shll
movsb
jl
cmp
andb
push
sub
push
add
aas
lret
shrl
les
adc
mov
add
sbbb
pusha
xor
aas
push
icebp
or
cmc
shr
xor
lock
sti
lret
sub
pop
add
xor
push
out
fdivs
or
popf
andb
adc
push
mov
cmp
jg
add
xchg
cmpsb
add
ds
xor
dec
arpl
add
pop
push
jp
stos
mov
pusha
daa
mov
lods
loopnew
add
xchg
mov
cli
xor
sub
test
push
cltd
xor
add
sbb
cli
add
lret
mov
ljmp
jno
pusha
mov
lcall
cmp
xchg
mov
sbb
jg
je
popf
loopne
sub
push
xor
mov
lea
mov
movsl
pushf
gs
add
push
es
ficompl
out
leave
mov
pop
in
mov
ljmp
and
loope
out
add
mov
inc
stos
shlb
outsl
call
push
pushf
sub
or
scas
cmp
jbe
pusha
xchg
jne
mov
xchg
xchg
ja
add
fwait
cltd
push
jmp
into
push
jge
add
sahf
call
pop
add
push
insl
or
les
add
gs
addr16
sub
sbb
add
inc
xchg
jmp
inc
cmpsb
adc
push
loopne
rcrb
hlt
mov
aam
imul
sahf
dec
imul
jno
add
or
inc
mov
dec
mov
mov
fstpl
or
scas
ficoms
addr16
lods
add
add
fstps
pop
jecxz
lahf
in
stc
popf
shl
jnp
es
inc
mov
inc
leave
daa
testb
out
popa
cld
ljmp
mov
push
sbb
cmp
sub
add
call
scas
inc
clc
add
ljmp
test
push
repnz
adc
xchg
loopne
jbe
cmp
pusha
pop
jnp
cmp
and
add
push
les
addr16
mov
add
stos
ret
lock
inc
leave
xchg
lock
adc
in
mov
xor
aam
sbb
inc
sbb
mov
cmp
loopne
inc
ret
out
or
cmp
mov
sbb
add
loop
push
jge
psubsb
movsb
addr16
xor
add
xlat
sahf
in
cld
call
add
jb
daa
dec
dec
lahf
enter
add
push
test
loopne
imul
mov
jecxz
in
daa
jl
cmpsb
mov
cli
cmp
add
out
add
push
mov
incl
xchg
push
fisttpl
pop
pop
fcomps
js
and
loopne
sub
or
cmpsl
fcomps
add
add
push
add
enter
mov
pusha
pushf
sbb
in
repz
mov
insb
add
dec
sahf
sbb
dec
repnz
pop
orb
sbb
and
aas
cmp
add
dec
pop
sub
or
adc
sub
add
xchg
jecxz
inc
loopne
decl
mov
add
insb
jne
add
out
mov
pop
ds
add
out
add
jle
mov
xchg
test
mov
add
jbe
mov
inc
add
add
jne
and
idiv
mov
jp
test
dec
sbb
xor
addr16
sub
ds
pop
orb
pop
add
in
test
add
imul
fnsave
aad
add
jo
pop
and
xchg
sar
clc
lods
mov
jbe
xor
dec
inc
push
jo
pusha
push
push
add
cld
add
xorb
sbb
fstpt
jno
fsubl
xor
inc
mov
repz
insl
dec
movsl
xorps
out
push
mov
lods
inc
mov
add
in
rol
jne
ds
xchg
add
repnz
pop
les
adc
cmpl
out
mov
mov
out
mov
dec
xor
dec
jnp
add
out
or
lods
aad
or
pop
add
popf
fwait
cmp
inc
add
cld
mov
bound
xor
add
adc
cmp
pop
push
push
jg
test
xchg
fwait
andl
loope
xchg
outsb
push
and
mov
add
jo
roll
gs
sub
add
mov
cmp
sub
pop
lds
push
sahf
orl
mov
sbb
sub
icebp
inc
xor
jg
hlt
paddusw
push
addl
add
das
repnz
add
dec
pushf
insb
fnstsw
mov
hlt
inc
loop
cmp
push
cmpb
mov
and
push
xchg
popa
add
xchg
sub
xchg
movsl
dec
loop
jnp
mov
add
jmp
mov
or
sub
and
aaa
test
pop
jo
sub
in
sbb
movsl
mov
decb
add
bound
dec
jns
shlb
sub
notb
ss
sub
lds
mov
aaa
pop
shlb
js
stos
sub
stos
mov
xor
push
cmp
mov
push
push
mov
dec
xor
stos
push
xlat
mov
pop
add
and
mov
adc
fs
pop
add
jbe
loope
pop
inc
test
lods
cmp
pusha
cmp
pop
jp
icebp
testl
ljmp
inc
jb
mov
cmp
cmp
xor
movsb
pop
cli
add
rcrl
mov
sub
and
popf
add
xor
aam
leave
nop
sarl
cs
fcompp
add
pusha
aad
roll
shlb
mov
xchg
mov
dec
test
sub
negb
inc
clc
aad
mov
cmp
outsb
addl
xchg
xchg
pop
lret
orb
insl
add
test
out
xor
cli
add
cmovle
mov
call
lock
in
loopne
add
lret
cli
mov
xlat
add
sti
out
loop
add
int3
cmc
push
lods
in
faddl
sub
movsl
aas
jecxz
or
lcall
xchg
insl
in
out
mov
and
pop
add
cmovo
movsl
push
push
dec
inc
sbb
inc
pushf
or
lods
add
fsubrs
xchg
and
or
push
fiadds
stos
push
or
dec
mov
enter
mov
cld
add
call
in
adc
adc
mov
int3
add
shrb
pop
rcl
cmpsl
add
sti
push
xchg
cmp
and
clc
aad
outsl
sub
add
in
adc
lock
mov
in
add
fildl
jae
cwtl
int3
lret
dec
jg
lock
cltd
xor
test
aad
jb
test
adc
imul
push
notb
or
push
cwtl
inc
int3
cmp
add
bound
in
xchg
es
loopne
sub
cld
lret
ret
sub
lahf
test
mov
js
shr
test
push
popa
add
gs
lods
shll
inc
fdivs
ret
enter
rolb
push
in
pop
pop
repnz
in
push
call
movsl
push
fsts
fs
inc
ljmp
add
pop
push
and
inc
xchg
popl
sub
xchg
hlt
xor
sbb
jl
push
add
cld
dec
add
scas
adc
or
pop
add
mov
add
dec
push
rcll
ss
test
stc
dec
or
mov
imul
faddl
aaa
mov
xor
out
xchg
inc
add
lods
test
inc
out
sti
mov
jo
push
out
ds
add
ficoml
enter
outsl
pop
loopne
mov
cmp
sub
add
scas
inc
jmp
int
xchg
push
lods
cmpsl
pop
shrb
fs
pushf
cmp
xor
sti
and
jmp
in
xorb
mov
nop
cmp
dec
pusha
les
cmpsl
adc
shl
xchg
add
int
test
sub
or
dec
pop
sub
or
pop
jo
ret
adc
stc
clc
popa
scas
addb
push
push
mov
dec
dec
xor
mov
xor
adc
sbb
xor
xor
or
mov
add
imul
in
xchg
sub
add
mov
outsl
jl
mov
add
jbe
adc
push
sub
bound
add
xor
roll
ds
push
adc
ret
roll
das
xchg
mov
popf
cmp
orl
xor
dec
lock
add
cli
nop
sbb
ret
out
inc
and
inc
sahf
or
inc
out
xchg
add
inc
push
neg
dec
enter
pop
dec
jb
lret
rorb
dec
faddp
out
mov
lods
loopne
push
pop
add
xchg
std
jb
cmp
add
jmp
imul
push
add
ss
mov
xor
pop
scas
sbb
daa
xchg
std
ud2
fldl
shlb
aad
pop
insl
jno
loope
cmp
pop
neg
lea
jle
adc
mov
mov
xchg
aam
outsb
stc
or
and
sub
jbe
cmpb
outsl
add
sbb
sub
xchg
cmp
lret
iret
cmp
lea
loopne
pop
ljmp
add
iret
push
jne
pusha
adc
shr
jg
lahf
js
lods
push
fmul
ds
inc
jne
adc
cmp
mov
add
cs
inc
xor
jl
inc
adc
mov
test
into
movb
loop
aad
lret
idivb
dec
shl
push
and
mov
je
insb
inc
addb
jae
hlt
inc
loopne
sti
pop
test
leave
add
push
add
dec
es
push
jns
jge
fistl
stos
dec
jle
es
lret
ljmp
or
or
dec
jle
push
mov
or
call
push
push
mov
leave
dec
add
mov
push
loope
mov
inc
cmpsl
pop
lcall
mov
xchg
inc
sbb
test
fadd
mov
sub
add
sbb
jmp
push
adc
mov
sahf
add
jecxz
xchg
cwtl
add
jbe
xor
into
push
pop
mov
pusha
repnz
mov
xchg
add
xchg
adc
mov
bound
cli
mov
jo
and
mov
icebp
mov
add
aaa
fs
add
sbb
dec
push
xor
gs
add
or
add
sub
pop
lcall
jmp
xchg
push
add
fimull
cmpsb
sbb
sub
adc
inc
cwtl
jb
rorl
arpl
jmp
and
cmc
ljmp
clc
mov
push
fldt
mov
or
or
std
sub
add
cmpsl
daa
xchg
or
imul
mov
xchg
lahf
dec
push
enter
dec
repz
xchg
mov
je
cld
mov
in
add
xchg
aam
add
popa
sub
in
inc
cmp
in
add
push
decl
dec
aam
pop
aad
icebp
cmp
pop
and
mov
loopne
scas
dec
adc
mov
jl
addb
test
mov
ret
fwait
das
ret
ficompl
cmp
pop
mov
lcall
ret
push
sub
orb
cmp
int3
mov
xor
bnd
sbb
stos
mov
add
and
sbb
xorl
or
and
cmpsb
insb
inc
mov
mov
rcl
add
mov
ljmp
sahf
cmpsb
and
jne
sbb
add
outsl
mov
aaa
repnz
test
inc
testb
push
lcall
rolb
ret
xor
leave
mov
in
jp
mov
dec
jae
add
pop
adc
out
inc
jl
daa
icebp
add
dec
add
sub
and
in
pop
mov
jo
add
dec
jnp
daa
je
push
cmp
xchg
inc
add
push
mov
adc
cmp
popa
pop
rcr
jno
add
daa
xor
or
lret
clc
loopw
add
rolb
mov
int
mov
sti
jne
xor
cmpsb
add
jo
xor
int
push
aas
jnp
iret
jl
test
out
es
pop
orl
stos
out
dec
lret
aaa
inc
scas
mov
pusha
out
in
popf
sub
cmpsb
cmp
push
xchg
dec
cmp
fwait
adc
sbb
and
ds
stos
xor
or
sbb
dec
xor
pusha
inc
pop
sub
or
arpl
add
sub
loopne
mov
jl
adc
jle
add
or
daa
cmp
aas
andl
leave
js
add
addr16
inc
enter
add
mov
imul
daa
movsl
loop
cli
jnp
jae
enter
inc
or
push
jb
int
push
push
jne
dec
pop
xor
lods
and
sbb
adc
cwtl
pop
loop
cmpl
stos
mov
mov
pop
cmpsb
loop
lahf
out
mov
mov
rcr
add
mov
hlt
add
sub
sbb
sub
les
inc
jae
cld
loop
jne
jmp
rolb
push
push
dec
push
popf
mov
push
clc
mov
es
loopne
or
adc
ljmp
push
dec
jnp
inc
xlat
mull
add
pop
fwait
shlb
push
out
pop
inc
add
fisttpl
mov
inc
cmp
lock
push
adc
mov
mov
mov
pop
xor
xchg
mov
pop
adc
mov
rcrb
mov
in
add
out
mov
mov
cmp
pop
and
mov
js
add
into
jb
add
lods
xchg
std
movsl
scas
add
pop
test
leave
xor
test
je
ds
cmpsb
ss
sbb
mov
and
mov
mov
out
lcall
inc
faddp
je
nop
jmp
fs
or
cwtl
fnstsw
sbb
test
adc
out
aam
adc
cld
imull
fsubr
orb
js
pop
add
leave
into
add
pop
sub
cmpsl
sub
cmp
sub
dec
pop
add
ja
inc
call
add
fs
sub
gs
cmp
jecxz
add
sbb
mov
scas
sbb
cmp
sarl
pop
dec
or
and
and
in
stc
mov
jne
and
rorb
callw
nop
and
or
stos
cmp
cs
out
add
cmp
adc
push
addl
cwtl
and
fdivs
pop
adc
fistl
ffree
movsl
add
mov
cld
int3
enter
sub
test
add
sub
movsl
orb
sahf
sub
inc
nop
xchg
cmp
out
sbb
and
pop
enter
inc
dec
pop
sar
adc
rclb
dec
jmp
add
and
clc
or
clc
pop
imul
and
dec
int
xor
test
sbb
inc
jl
adc
push
add
pusha
push
pushf
mov
mov
in
adc
lock
sbb
add
lods
sbb
mov
subl
pop
aaa
movsb
in
mov
cltd
cmp
sub
out
jae
inc
jo
cmc
stc
inc
pusha
and
or
aaa
hlt
pop
and
scas
pusha
push
dec
dec
xchg
and
xchg
jg
in
out
jecxz
mov
or
xchg
mov
cmp
or
sbb
je
or
add
cs
sbb
add
fcompl
jne
test
dec
add
xor
lock
popa
out
pop
xchg
pusha
sbb
adc
lods
mov
adc
adc
pusha
lock
les
rcll
andb
fsubr
cld
push
lds
and
push
xor
cs
push
rorb
lcall
sbb
aas
int3
shrb
into
sbb
jne
sub
dec
enter
aaa
rcll
xchg
dec
add
sub
faddp
xchg
or
shlb
aas
rolb
sub
or
loopne
add
shl
mov
and
loop
jb
lds
mov
shr
mul
in
cwtl
or
mov
add
push
lock
pop
push
imul
clc
mov
out
lret
pop
sar
push
aas
sbb
xchg
add
jl
jmp
or
push
pusha
fcomps
inc
pop
daa
add
sbb
push
int
xchg
cmp
lock
and
cmp
mov
pop
xchg
pop
jnp
mov
cmpsb
scas
fadds
push
adc
or
xor
inc
and
and
stc
jl
add
testl
pusha
rclb
cmpsl
rcll
das
sub
enter
clc
xorl
test
jl
rclb
mov
add
inc
and
jle
call
adcl
aaa
add
inc
sub
mov
dec
mov
fsubrs
inc
add
daa
dec
add
push
pusha
std
sub
inc
mov
push
rorl
or
push
subb
jb
push
jl
dec
adc
and
cmp
daa
add
je
fldl
shll
add
or
sub
xchg
popf
pop
nop
dec
add
out
mov
cmp
fldl
loop
xchg
push
enter
xor
sub
movsl
test
dec
mov
add
sbb
dec
pushf
frndint
push
xor
mov
and
sub
and
cs
add
dec
orb
mov
jne
cs
inc
cmp
sub
mov
sbb
bound
sub
pop
pop
test
adc
xor
out
xor
sbb
lock
int
sbb
xor
popa
pusha
mov
fs
push
jo
arpl
out
mov
sarb
dec
movsb
pop
add
dec
or
add
arpl
incl
fs
pop
movsb
pusha
pusha
add
mov
add
xchg
or
hlt
popf
xchg
mov
or
movsl
fwait
push
xchg
inc
test
fildl
push
push
adc
les
cwtl
loopne
or
pop
inc
mov
cmpsl
pop
push
add
sbb
xor
or
lods
xchg
xchg
insl
sbb
sbb
out
xchg
inc
je
inc
mov
lcall
pop
jo
aam
sbb
out
les
cmp
add
rorb
ds
ja
pop
add
ljmp
mov
sub
mov
mov
xchg
cmp
mov
icebp
or
outsl
and
add
repz
pop
pop
cmpb
aam
xor
shl
sub
jge
push
xchg
daa
cmp
jne
sbb
lea
in
mov
rcrl
push
lcall
mov
or
cmp
xor
jmp
adc
or
in
add
push
loopne
mov
pusha
mov
int3
das
jecxz
add
movsl
ds
int
in
sub
lds
or
mov
int3
cld
xor
loop
add
add
pop
sbb
sub
jg
ret
bound
sarl
and
mov
hlt
or
or
cwtl
dec
popf
inc
and
dec
decb
inc
jg
dec
pop
sbb
sbb
xor
mov
call
ds
rorl
mov
std
orb
out
sbb
pop
movsl
dec
xor
mov
fiaddl
mov
add
mov
dec
push
inc
ss
je
add
or
bnd
inc
add
xchg
jg
mov
bswap
orb
scas
xor
cwtl
adc
and
xor
pop
add
or
pop
mov
clc
pop
xor
lods
dec
jmp
addl
iret
mov
cli
rcrl
js
push
jns
cmp
sub
mov
dec
and
cmpsb
in
out
clc
gs
add
repnz
push
push
pop
xchg
pop
cmpsb
rorb
mov
aaa
push
cmp
or
adc
push
mov
subb
aam
pop
pop
insb
test
pushf
mov
push
push
lods
imul
mov
mov
pop
add
cmc
inc
and
repz
loop
jp
xchg
mov
in
dec
inc
add
sub
cld
iret
xchg
insb
js
mov
add
sarb
push
add
test
stos
pop
xchg
cmpl
lahf
adc
jno
movsb
std
sub
dec
add
xchg
xchg
xchg
enter
je
cs
mov
mov
lahf
arpl
addr16
mov
and
add
mov
mov
roll
adc
and
sub
in
xchg
or
mov
or
pop
cmpsl
je
rcrb
dec
push
cmp
ja
lret
dec
cwtl
sbb
cmp
mov
stos
add
mov
mov
mov
cmp
addb
adc
pop
les
adc
jno
and
repnz
pop
xor
inc
pop
rcrl
add
jp
dec
jbe
add
mov
jo
dec
fadds
aaa
add
arpl
add
aas
cld
test
in
mov
mov
mov
add
out
addb
mov
in
in
xchg
inc
sub
add
sbb
test
insl
mov
call
in
in
rcl
add
gs
dec
dec
or
imul
ja
add
loopne
mov
add
jmp
xchg
ret
xchg
in
push
jge
add
push
mov
jb
popf
pop
addl
test
repz
lret
adc
ret
cmp
jp
sub
push
jl
sbbb
add
shlb
loop
jae
pusha
mov
add
jecxz
mov
mov
pop
add
clc
sbb
mov
pop
add
gs
shrb
jnp
cld
cmp
push
add
lcall
ds
lahf
clc
dec
xchg
js
sahf
and
sbb
add
jl
inc
sbb
adc
add
fucomp
mov
dec
test
stc
scas
xor
cmp
loopne
add
ficomps
jg
add
fistl
adc
mov
mov
lock
jmp
jo
lret
ret
test
mov
jge
pop
movlps
pop
push
push
lods
fiadds
nop
pusha
mov
test
add
mov
fwait
push
loope
in
cmc
es
shl
push
imul
in
cmpsb
add
iret
out
int3
cld
add
clc
cmp
mov
pop
cmp
ja
add
orl
icebp
add
adc
ret
and
mov
mov
cmc
imul
subb
pop
jg
sahf
out
loopne
test
cmp
loopne
in
pop
sbb
xor
popa
sbb
push
sub
in
add
imul
cmp
push
pop
icebp
movsb
data16
out
pop
add
cmpsb
lock
addr16
adc
popa
inc
add
test
cmc
inc
mov
lcall
imul
lret
xor
int
lret
jl
add
or
mov
dec
notb
pop
dec
or
lcall
sahf
rolb
out
leave
fcmovnbe
jo
jp
stos
cmpsl
dec
in
out
rclb
mov
inc
nop
fdivrp
cmp
add
outsb
push
into
add
pop
pop
popa
mov
push
lods
enter
jmp
mov
addl
xor
mov
rcrl
mov
lcall
out
jle
sbb
dec
and
add
mov
add
and
or
mov
int3
rorb
pop
push
rolb
cli
test
imul
ja
add
mov
push
bnd
jge
add
dec
mov
add
les
add
test
adc
cmpsb
cli
push
dec
jmp
sub
pop
shrb
pusha
push
push
scas
pop
inc
push
mov
push
push
mov
mov
xor
aam
jle
sbbb
lret
nop
out
in
add
imul
data16
push
test
push
shll
mov
sub
addl
add
je
dec
jmp
andb
movl
adc
xor
enter
and
push
ss
mov
sbbl
fdivs
in
insb
sbb
dec
add
jp
fcoml
repnz
movsl
adc
or
add
and
add
xchg
pmaxub
popa
sahf
cmpsl
add
testl
add
popa
mov
jo
inc
add
jae
popf
hlt
mov
jmp
filds
imul
xchg
xchg
cmp
popa
movhps
sub
lods
add
rcl
test
sbb
adc
sbb
mov
hlt
add
jbe
arpl
insl
push
mov
out
and
add
push
dec
test
xchg
cmp
bnd
mov
add
scas
adc
roll
lds
push
cmp
and
mov
ja
mov
push
inc
push
jnp
rclb
sub
mov
mov
sbb
pusha
aam
cmp
sub
add
orl
in
push
add
xor
and
sti
out
aas
lahf
sub
das
xchg
push
add
mov
and
jg
or
add
clc
push
pop
mov
push
add
fdivr
pop
pop
outsb
lock
out
add
and
xor
sbb
inc
loopne
mov
pushf
mov
leave
add
seta
and
inc
pusha
dec
rolb
repz
push
add
out
cwtl
or
fcomp
sti
add
cmp
add
aam
xchg
inc
lods
fcomps
orl
outsl
xorb
cli
iret
jne
add
cmp
sbb
push
or
mov
lea
mov
rorb
xchg
test
ds
pop
xchg
stos
sub
add
mov
int3
add
pusha
push
data16
lods
cmp
xor
add
dec
sub
add
or
pusha
add
jecxz
fidivs
add
cmpb
lcall
mov
in
int3
dec
xchg
fadds
xchg
subl
add
fwait
mov
mov
roll
xchg
jo
clc
inc
out
mov
mov
mov
push
jecxz
nop
pusha
xchg
int3
std
call
pop
inc
aas
imul
dec
fidivs
adc
add
lret
test
outsb
xorb
mov
jp
add
jge
stos
jne
fdivr
aam
mov
or
push
add
pop
sub
inc
nop
lods
jle
add
jle
repz
sub
rsqrtps
sbb
loopne
pop
mov
push
rorb
roll
out
mov
pop
scas
jle
inc
pop
and
movsl
in
and
sub
std
mov
or
xchg
out
adc
shrl
pusha
push
xchg
xchg
xor
xchg
mov
jae
pop
mov
add
adc
jp
or
dec
shr
mov
or
ret
push
ja
mov
jge
or
push
jmp
and
movsb
mov
inc
mov
mov
adc
pusha
clc
aas
mov
add
popa
ss
add
sbb
ljmp
gs
in
mov
pusha
pop
sbb
xchg
je
add
pop
mov
bound
jle
mov
unpcklps
mov
xchg
in
sbb
sbb
mov
jb
loope
inc
mov
inc
jae
mov
rorb
xchg
xor
sti
inc
pop
movl
add
ja
cltd
int3
jbe
pop
lahf
or
in
loop
push
add
sbb
pop
add
inc
in
add
out
popf
out
pop
cmp
push
test
gs
fcompl
out
add
cltd
testb
adc
jb
sbb
pusha
sub
mov
add
mov
sbbl
add
bound
push
add
mov
movsl
add
mov
push
add
iret
cmpb
xchg
repz
fs
pop
insl
adc
rorb
aaa
stc
sbb
mov
lock
in
rcrl
int
mov
sub
add
pusha
shll
push
add
rcll
xchg
push
sti
scas
xchg
cmp
lret
les
xchg
jb
cwtl
cmp
xchg
dec
push
fnsave
add
pop
stos
or
push
sub
rclb
add
cmc
add
xchg
or
inc
sub
add
cs
mov
loop
hlt
inc
movsl
rolb
sub
pop
mov
shr
push
adc
sbb
mov
mov
roll
fcmovnbe
mov
fs
sub
dec
dec
hlt
xchg
rcl
mov
add
loope
mov
xchg
add
mov
icebp
add
add
sbb
movl
cmpsl
inc
jle
add
enter
pop
cmp
sbbb
dec
sub
add
xchg
mov
loope
sub
aas
jmp
push
xchg
sub
jmp
dec
pushf
mov
punpckhwd
sahf
mov
mov
mov
add
iret
test
call
lds
mov
psrad
push
mov
lcall
push
lock
add
fistpl
sbb
lret
add
clc
jne
inc
jmp
in
add
js
pop
pop
repz
lock
xchg
cmc
push
push
rcrb
inc
add
inc
fmul
mov
insl
outsl
and
xchg
popf
cmp
clc
add
das
int
bound
pop
es
mov
mov
jp
jbe
add
lea
pop
push
xor
inc
jo
jb
dec
add
repnz
sub
add
adc
scas
push
adc
repnz
enter
call
add
shlb
fs
pusha
pop
cwtl
es
rolb
mov
add
jg
je
lock
dec
test
shlb
ret
dec
leave
shrb
sbb
dec
movb
push
inc
ret
xor
andl
push
or
pop
mov
sbb
and
jae
outsb
pusha
ds
pop
add
mov
loop
sub
sbb
jp
jo
js
cmp
sub
lock
clc
adc
jmp
out
add
add
outsl
imul
pop
mov
out
in
mov
jbe
add
lods
iret
mov
cmp
inc
inc
sbb
xor
jmp
push
loopne
call
or
jmp
add
into
dec
out
add
arpl
add
loop
or
mov
mov
jnp
jns
add
sbb
cmp
push
cmpsb
inc
xor
inc
cli
ja
jg
or
popa
inc
aam
add
dec
sub
out
mov
clts
mov
jo
cltd
mov
imul
mov
mov
mov
addb
outsb
and
lods
add
lret
add
rol
iret
out
adc
outsb
ret
push
sub
inc
jecxz
fmuls
or
nop
push
in
jge
cmp
loopne
jo
repnz
add
sbb
lahf
or
inc
push
int
xor
pop
dec
test
pusha
addr16
out
filds
adc
and
add
pop
sbb
dec
cmp
sahf
enter
sbb
cmp
insb
jmp
mov
mov
daa
cld
add
push
push
push
add
popf
mov
leave
in
add
outsb
dec
inc
nop
sbb
sbb
in
popa
mov
iret
fistpll
clc
in
jo
int3
or
and
sahf
or
push
jge
test
imul
add
and
mov
lea
push
movsb
icebp
push
test
xor
add
popa
sbb
add
mov
mov
pop
mov
mov
add
sub
rorl
and
mov
pushf
pop
dec
mov
and
add
cld
jmp
jle
sbbb
scas
bound
xchg
pop
push
daa
lret
clc
mov
ja
add
pop
stos
xor
ss
or
pop
mov
rclb
add
cmpsb
shlb
and
xor
sub
int
push
jmp
sbb
dec
sub
pop
leave
icebp
jg
inc
sbb
movsb
jnp
push
hlt
test
cmp
jl
sbb
mov
shlb
pop
mov
mov
xor
ret
or
sbb
and
fildl
or
cmp
push
ret
pop
inc
add
loop
sbb
in
arpl
int3
addb
xor
inc
out
das
add
out
add
push
adc
outsl
xor
mov
loope
and
test
rolb
or
xchg
fprem
mov
stos
jo
movsl
and
xchg
test
jle
fmuls
add
adc
and
mov
xor
cld
fsub
andl
jne
inc
lret
pop
fistl
loopne
ret
ljmp
jecxz
sbb
cmpsl
sub
adc
mov
movl
sub
stos
pop
mov
xlat
adc
push
cmpb
mov
push
jne
sbbb
xor
jo
addb
push
xor
cwtl
sub
push
rcrb
and
bound
ljmp
sbb
loopne
or
mov
scas
sub
mov
cwtl
loopne
test
aas
les
cmpl
bound
push
sub
lcall
mov
mov
shrb
cmp
mov
add
lock
jmp
xchg
jo
inc
pop
cmp
or
repnz
les
nop
pop
mov
xor
shrl
xchg
lock
out
add
insb
dec
or
and
loopne
mov
nop
mov
loop
insb
pushf
add
in
push
or
lret
pusha
ret
jo
cmp
lcall
jle
bound
pusha
add
in
and
outsb
mov
or
inc
insl
jl
cmp
jo
pusha
or
cmc
xor
cwtl
add
adc
es
test
jnp
and
adcb
mov
ljmp
sub
fmuls
pushf
stc
add
mov
add
imul
lds
dec
ss
lock
push
adc
hlt
rcrb
mov
mov
mov
lock
cmp
mov
push
bound
das
sbb
xlat
jno
push
sub
bound
popa
sub
fwait
cmp
jbe
lcall
les
sub
aam
push
aaa
inc
mov
mulb
sub
cmp
fidivs
imul
mov
cwtl
push
lret
xor
or
cwtl
mov
xchg
pusha
dec
pusha
fdivr
dec
adc
inc
pop
adc
lock
sub
bound
pusha
or
nop
idivl
pusha
shl
xchg
lahf
rolb
add
jns
xor
js
sbb
popa
ljmp
test
push
mov
or
lds
mov
push
add
pop
lods
pusha
xchg
dec
ret
or
push
pusha
pusha
shr
aas
push
mov
pusha
pusha
fcomp
xchg
loopne
dec
push
and
and
mov
push
inc
and
aam
push
push
pop
add
in
xor
sbb
jmp
mov
lock
or
scas
inc
negl
cmp
sbb
lock
dec
xor
xor
imul
adc
inc
lock
fiadds
dec
shl
mov
add
push
ds
cmp
dec
add
push
jl
sbb
insl
xor
adc
pusha
lcall
scas
and
mov
pop
xchg
imul
push
pusha
mov
fbstp
jl
or
call
adc
push
inc
sbb
inc
pop
shl
ja
adc
out
xchg
ficoms
dec
pop
lods
push
add
lock
xor
adc
int3
insl
pusha
xor
outsl
pop
dec
pusha
push
cmpsl
inc
lds
dec
pop
jl
sub
das
in
inc
xor
pop
lcall
pop
add
jp
in
sbb
je
pusha
subl
stos
and
iret
xchg
pop
mov
jne
add
adc
inc
jnp
adcl
ljmp
std
xchg
xchg
dec
jns
pusha
cmp
adc
mov
loopne
pop
sbb
loop
sbb
adc
out
adc
sbb
iret
mov
pusha
or
and
pusha
push
or
xor
punpcklbw
outsl
mov
fcoml
add
test
dec
scas
lock
lret
das
inc
jle
loope
jle
std
orl
adc
adc
js
repnz
stc
popa
iret
js
pusha
add
ja
jae
add
jg
rcrl
cmp
cmp
lea
push
push
lock
jge
aam
in
pop
push
popf
insl
fnstenv
mov
mov
xchg
sbb
pmulhuw
loop
sub
inc
mov
ss
bound
push
out
mov
push
dec
jle
xchg
scas
in
pusha
sub
or
adc
mov
push
fsubl
popa
outsl
in
pusha
jbe
xor
arpl
dec
jecxz
pusha
pop
xor
das
mov
mov
fildl
cmova
scas
xor
pusha
test
or
iret
pop
clc
out
mov
scas
mov
mov
mov
add
fsubrl
pusha
jno
mov
mov
adc
mov
js
lret
fmuls
cmp
pop
pop
movb
xor
pushf
cmc
xor
inc
mov
push
test
mov
iret
mov
jecxz
rolb
sbb
sub
cmp
and
xor
nop
mov
inc
rorl
into
scas
es
adc
inc
das
cmovs
out
test
dec
rcrb
jge
xor
xchg
cmpsl
ds
pusha
adcl
pop
and
scas
xchg
or
enter
xchg
ja
xor
js
inc
insb
cmpsb
sahf
popa
es
int3
js
dec
xor
xchg
lock
sub
cld
hlt
and
out
inc
int3
fistpll
sbb
mov
lcall
dec
mov
mov
push
repnz
adc
inc
pushf
stc
pop
add
loope
stos
inc
outsl
lahf
jl
mov
popf
inc
or
clc
pop
fnstenv
scas
shlb
sub
mov
rorb
ljmp
out
jmp
add
xchg
movl
cmp
or
pop
pusha
sub
lahf
sbb
adc
pusha
fwait
sbb
jb
mov
andb
xchg
bound
lock
sbb
pop
xor
or
jo
mov
arpl
or
push
scas
adc
clc
mov
jne
popa
roll
mov
clc
les
insb
pusha
push
sbb
and
cmp
repz
lock
insb
and
xorl
rcr
mov
mov
inc
les
ja
lret
outsl
rcr
xchg
outsl
add
jl
sbb
adc
pusha
les
sbb
xor
adc
pusha
jae
pop
add
adc
add
mov
out
sbb
loope
mov
into
xor
bound
pusha
jnp
push
xchg
jne
mov
pop
sub
gs
jo
out
mov
mov
out
pusha
xorl
shlb
inc
xchg
js
adc
inc
pusha
shl
mov
pop
push
mov
inc
or
and
aad
clc
or
dec
xor
gs
inc
adc
mov
inc
and
and
mov
pop
adc
mov
push
aam
in
inc
xchg
loope
push
inc
lea
and
jecxz
out
cld
rcll
loope
aas
add
fcomip
jo
aam
adc
fcmovu
inc
mov
mov
decb
fwait
out
sbb
push
rorb
sbb
fistpl
sbb
repnz
xchg
fcomi
mov
pop
add
xor
pop
sbb
jl
ds
stc
pusha
shll
inc
mov
test
sbb
popl
adc
test
ds
xor
lods
pusha
addl
xor
pusha
or
add
test
add
add
pop
xchg
test
into
dec
ds
jnp
loope
mov
add
fsubr
outsb
inc
rorb
add
mov
cmp
jmp
inc
jno
js
repz
lea
loopne
adc
outsb
xchg
push
sbb
dec
js
addr16
pop
sbb
add
lock
hlt
bound
js
dec
and
mov
or
xor
push
xchg
mov
jns
push
ljmp
add
mov
test
dec
jmp
aas
sbb
aam
pop
adc
push
cmp
insb
sahf
inc
iret
xor
aas
and
sbb
mov
iret
clc
inc
imul
adc
fdivrs
cmp
lock
outsl
outsb
ja
popl
sub
jge
cwtl
inc
mov
test
popl
and
adc
push
pop
or
xorl
mov
mov
cmp
sbb
rclb
ret
or
jmp
test
push
call
mov
pop
or
loope
xchg
fcomps
cmp
mov
cmpb
cmp
clc
or
jne
test
add
mov
int3
movl
in
fstpt
rolb
sbb
jb
iret
jo
sub
jae
fcomps
rclb
sub
clc
add
add
les
js
adc
mov
cwtl
add
dec
cmp
push
sub
je
adc
cwtl
inc
jp
in
inc
int3
ds
and
nop
sbb
sub
sbb
clc
or
or
aas
aas
adc
loopne
repz
dec
fwait
mov
cmp
pusha
ja
mov
xchg
inc
nop
mov
inc
push
sub
xor
push
xor
mov
jecxz
adc
ds
inc
shlb
js
inc
lret
pushf
adc
data16
fiadds
inc
sarl
push
lock
sbb
and
ja
push
lcall
je
inc
fwait
shrl
pop
cmp
adc
lock
inc
dec
rolb
roll
sahf
pop
add
adc
push
inc
adc
stos
jl
cmc
sarl
repnz
ja
repz
push
stc
ja
lock
add
stc
popl
lods
dec
icebp
clc
insl
popa
adc
mov
xor
sarl
ja
hlt
ds
adc
and
jno
stos
rcr
in
jns
stos
pop
cmp
inc
test
lds
mov
cmp
and
cli
inc
jne
mov
jo
or
dec
xor
push
inc
and
lods
out
ret
mov
ds
sbb
stc
mov
add
adc
push
or
call
mov
mov
xor
scas
mov
push
mov
fldz
inc
dec
sarl
popa
lea
lds
nop
and
push
pusha
repnz
pusha
pop
aad
fdivl
push
fsubs
xchg
setno
dec
and
daa
loope
les
xchg
sarb
sub
cmp
pop
sbb
lcall
adc
rol
xchg
fcomps
addr16
call
xchg
push
cmp
push
lcall
sbb
pop
enter
fsub
adc
mov
push
popa
mov
loopne
mov
pushf
or
in
or
jo
lea
shll
jl
add
pusha
pop
or
pop
adc
js
or
and
in
js
sbb
popa
sbb
pusha
add
outsl
sbb
inc
cld
adc
rclb
pusha
cmp
cmp
and
mov
adc
inc
add
in
adc
outsb
enter
add
loopne
dec
icebp
inc
mov
lock
or
sbb
cmp
loopne
jmp
sbb
lock
xor
test
add
dec
pop
mov
add
outsb
mov
jl
testb
push
xchg
push
out
shlb
xor
xchg
cmpb
adc
push
adc
popl
mov
xchg
cmp
pusha
mov
andb
cs
insl
enter
pusha
out
decl
fcoml
rol
shl
stos
xchg
and
jl
cmp
sbb
adc
add
mov
pop
push
jbe
mov
popa
sub
pusha
mov
loope
enter
pusha
loopne
jl
jp
xchg
sbb
lock
xor
xchg
popa
cld
leave
pop
pusha
push
add
lds
popa
sub
enter
cmp
mov
sbb
inc
nop
pushf
and
in
sarb
xor
xor
jl
or
xor
pusha
sub
xchg
add
cmp
js
sub
push
dec
push
sbb
sbb
popa
cld
cmp
stos
jmp
push
xor
cmp
sbb
xchg
mov
hlt
cmp
jnp
add
lock
nop
rclb
add
js,pn
adc
popl
imul
jo
pusha
js
xchg
pusha
loopne
leave
faddl
inc
sub
hlt
mov
and
hlt
lret
movsb
rclb
iret
inc
bound
das
ds
mov
jl
jl
in
add
js
cmp
das
movsb
subl
jns
or
in
daa
adc
das
pop
or
in
inc
fsubrl
jnp,pt
xor
es
mov
lcall
push
clc
mov
adc
movsl
jp
jl
lock
std
bound
popa
pop
push
mov
sbb
test
popa
cmp
pusha
js
mov
or
inc
sbb
lret
bound
call
cld
push
pop
push
dec
push
pop
push
adc
push
lock
adc
or
mov
arpl
jp
and
add
pop
daa
push
insb
add
iret
sbb
icebp
push
xor
pusha
rorl
sub
cmp
push
xor
jge
sbb
pop
rolb
bound
jl
or
xor
divb
mov
inc
add
mov
xor
xor
ds
insb
and
in
sarb
jg
cltd
pusha
push
jae
jne
orb
sbb
lock
mov
push
jge
jno
push
inc
xor
xor
push
push
adc
sub
mov
pop
pusha
jae
bound
xor
sub
ficompl
add
das
ret
cmp
sbb
mov
inc
sub
lcall
and
pop
add
es
pop
lock
xor
pop
js
inc
sti
std
or
popf
clc
sub
test
jecxz
xchg
ret
xor
notb
out
xor
add
clc
pushf
pop
pop
adc
icebp
cwtl
and
mov
ds
add
xchg
inc
add
outsb
cltd
je
insb
mov
adcb
dec
lea
inc
mov
xchg
dec
mov
mov
fisubl
out
xchg
lock
popa
les
sub
das
mov
arpl
rol
pop
adc
xor
popa
outsb
popa
clc
mov
push
popw
push
push
jno
jne
and
stos
das
xchg
sarb
in
lret
and
jl
or
jge
mov
mov
jnp
mov
sbb
ss
xchg
movsb
rolb
mov
xchg
mov
add
and
jl
or
arpl
das
xchg
addr16
das
inc
inc
shrb
add
pop
xor
sbb
xor
adc
je
mov
jnp
in
add
scas
inc
mov
js
movsl
mov
jle
add
mov
ljmp
jne
add
mov
jns
dec
dec
imul
popa
movl
xchg
test
leave
push
inc
enter
orl
daa
jg
loopne
int3
aad
faddl
xor
not
add
lret
cmp
mov
lock
pop
cmpl
push
lcall
fadds
xor
lock
xchg
fst
imul
mov
fdivr
jg
aaa
inc
lahf
mov
cmpsl
cmp
scas
add
fstpl
bswap
lea
push
js
and
add
rorb
sbb
and
test
and
add
pusha
inc
sbb
mov
sti
jnp
cltd
call
mov
movsl
push
sbb
or
and
xchg
xchg
lods
push
inc
nop
jle
jecxz
in
in
jae
mov
add
push
lret
test
cmp
mov
ret
pop
test
push
imul
bound
add
movsl
jg
xchg
mov
push
jmp
repnz
test
outsb
int
pop
pop
flds
cmpsb
mov
mov
add
popf
xchg
aam
cmp
add
and
add
xor
out
outsl
mov
das
dec
subb
inc
idivb
push
xchg
pop
out
inc
push
adcb
xchg
mov
cmp
pop
mov
loop
nop
mov
mov
cmp
sub
movb
jecxz
das
and
movsl
les
cmp
dec
mov
hlt
ret
sub
jg
inc
rolb
aas
add
pushf
rol
aam
sbb
dec
add
mov
mov
inc
mov
sahf
rclb
push
divb
flds
push
ret
add
ret
push
imul
push
lods
fs
pop
sti
mov
fisubl
test
fs
inc
add
dec
scas
sub
adc
cmp
sbb
clc
dec
icebp
pop
mov
fcompl
addl
mov
xor
mov
cmp
in
in
int
sub
inc
xchg
push
pop
test
add
out
jae
stc
ss
int
stc
mov
movsl
pushf
jns
cmp
or
jb
sbb
fiadds
cmp
xor
ja
iret
add
divl
push
mov
or
pop
add
lcall
ret
or
sbb
fnstenv
ljmp
push
test
or
sub
xor
mov
aas
adc
xor
cmp
push
iret
cld
addb
imul
inc
mov
add
repz
add
outsl
add
adc
sub
fwait
ret
jl
pop
sub
test
in
jge
and
inc
les
add
push
mov
mov
inc
sbbl
mov
ret
repnz
add
cmp
shld
rolb
and
mov
in
xorl
inc
add
xor
mov
add
mov
add
je
push
rcrb
add
mov
add
xchg
adc
outsb
push
lock
pusha
gs
cmp
sbb
dec
push
add
mov
lods
xor
add
divb
cwtl
cwtl
or
cmp
and
jne
ljmp
add
mov
add
add
cld
dec
loop
adc
cmpsb
mov
shll
jmp
sbb
repnz
cwtl
lock
hlt
pusha
enter
xchg
addl
repz
or
movsb
in
dec
and
scas
add
add
dec
ljmp
mov
jge
jle
jmp
pop
sub
pop
test
mov
cmp
hlt
f2xm1
mov
rclb
mov
shl
inc
popa
pop
outsb
clc
cmp
adc
orl
dec
dec
mov
in
sbb
repnz
sub
int3
out
or
dec
nop
mov
test
cmpl
push
mov
arpl
add
pop
xchg
push
fstpl
mov
jg
inc
pop
inc
hlt
cmp
xchg
add
clc
push
add
mov
cmp
dec
push
ret
and
cmpsl
mov
fcomps
xchg
push
or
add
xchg
es
fsubrs
dec
sub
aam
flds
ret
wrmsr
pushw
pop
and
add
dec
lahf
jno
mull
mov
add
shlb
loope
mov
pop
cmp
stc
adc
inc
dec
push
push
pop
mov
loopne
outsl
data16
push
adc
and
jmp
add
jge
add
stos
imul
data16
popa
lock
dec
js
mov
dec
jno
pop
leave
sub
loopne
inc
lea
sbb
add
out
cwtl
pop
sti
jmp
addb
push
sub
insb
push
test
xor
call
or
adc
loop
push
adcb
out
or
add
mov
mov
xchg
jecxz
ffree
inc
adc
ss
rsqrtps
lcall
repz
add
sbb
orb
mov
add
idiv
cmp
loopne
mov
notb
je
lds
add
nop
push
mov
cwtl
test
or
sarb
cwtl
addl
inc
test
ja
add
push
adcb
mov
jmp
clc
aad
xchg
add
push
or
mov
sbb
mov
or
in
lock
cmp
imul
add
adc
sub
pop
out
shrl
adc
lock
xchg
das
cmpl
pop
pusha
pusha
add
pop
pop
pop
push
sub
rclb
xchg
pop
or
add
outsb
roll
add
aad
dec
or
lock
idivl
push
loop
sti
pop
popa
loopne
je
add
cli
pop
adc
jb
sub
or
cmpsb
ss
xor
test
inc
wrmsr
int3
mov
adc
mov
add
or
out
imul
add
mov
les
jno
xchg
mov
decl
push
mov
int
movsb
and
push
sub
or
pop
jno
add
cmp
jp
sbb
mov
stos
sub
pop
cwtl
dec
add
add
test
jge
out
sbb
mov
and
or
adc
out
push
mov
xchg
push
cmp
jo
mov
out
push
inc
rclb
cltd
adc
jo
or
aam
andb
jbe
add
cmpb
ret
nop
fs
fmulp
jle
mov
jo
xor
and
sub
test
jle
dec
xor
and
jecxz
lock
inc
sbb
icebp
fst
sbb
dec
cmp
stos
adc
pop
addl
aas
fcoms
out
push
jge
mov
fistpl
pusha
out
dec
js
psllw
or
adc
inc
int3
jno
cmp
ja
add
adc
stos
fucomi
xor
mov
adc
shlb
xchg
pop
cwtl
push
or
ret
or
push
nop
mov
lods
idivl
mov
outsb
into
sbb
ljmp
jle
sub
fldcw
ret
mov
jp
add
dec
scas
jno
and
arpl
xor
inc
xchg
add
mov
adc
divb
lahf
jnp
shlb
mov
ja
call
mov
dec
cld
push
test
movsl
insb
inc
js
add
lds
add
sub
mov
push
loop
push
mov
jl
movsl
aad
adcb
mov
or
push
add
inc
fidivrl
fidivrs
enter
jg
js
add
sahf
and
jmp
cmpb
jg
push
fadds
jp
xchg
adc
pop
mov
add
sub
das
xchg
lock
dec
jbe
icebp
add
mov
mov
and
mov
pop
cmp
push
pop
out
and
sub
xchg
jb
fmuls
hlt
jg
sbb
ds
fistpll
mov
mov
into
add
sbb
and
pop
sti
add
or
jo
fs
sub
repz
loopne
es
jno
test
aam
fidivl
jge
and
loop
sbb
hlt
pop
mov
lahf
sbb
mov
es
push
add
sbb
dec
add
nop
hlt
jns
gs
arpl
mov
mov
jbe
ret
and
dec
push
daa
sub
cwtl
add
push
push
xor
add
dec
aad
ljmp
fcmovbe
and
sub
int3
jmp
testl
stos
les
lcall
and
mov
getsec
adc
jle
loope
sbb
add
jecxz
in
push
pop
push
pop
aaa
inc
pop
shrb
xor
cli
pop
add
imul
pusha
iret
sbb
xor
je
sbb
mov
movsb
add
daa
mov
imul
sbb
mov
jne
insb
addb
pusha
cmp
dec
imul
inc
scas
into
int
jo
insl
aas
xchg
jle
add
sbb
ds
loop
add
popf
push
mov
cmp
faddl
xlat
push
add
sbb
fcomps
jb
push
les
cwtl
das
fmull
cltd
scas
addps
sbb
mov
addr16
mov
in
js
loopne
cmp
push
mov
cmp
pop
xchg
sub
enter
orb
adc
mov
int3
pop
in
loop
addr16
popa
int
lcall
xor
mov
add
sub
cmp
paddq
and
scas
and
add
mov
rcrb
fwait
or
inc
in
add
in
mov
pop
jno
jo
test
or
add
ret
inc
jns
mov
into
lret
add
aas
imul
adc
test
xchg
hlt
dec
adc
xchg
aam
int
cwtl
adc
xor
jns
mov
insb
loop
add
xchg
xchg
into
pop
div
add
frstor
add
lds
loope
fiaddl
leave
cmc
cmovno
push
xor
add
cli
je
xlat
add
lahf
ret
sbb
adcl
out
scas
ret
pop
rcl
pop
pusha
jo
add
pop
and
roll
mov
cs
ds
pop
pushl
stc
dec
mov
sub
in
add
pop
xchg
push
cmp
test
lock
add
inc
and
jl
aas
pop
ja
leave
lods
push
js
scas
and
mov
fidivrl
add
adc
add
les
or
inc
mov
and
dec
imul
jo
inc
sahf
pop
hlt
or
mov
lret
inc
pop
cmp
loopne
ret
jns
movsl
sbb
mov
outsl
pop
loop
popa
insl
cwtl
adc
negb
add
mov
out
roll
jbe
loop
or
mov
add
sti
test
xlat
rcl
test
fs
fchs
push
pop
xchg
cwtl
cmp
xor
mov
cli
gs
add
cmp
fnstcw
ja
repz
xchg
jmp
ss
push
bound
add
pop
jge
mov
push
lods
int
mov
push
pop
xor
out
push
out
add
movsl
push
sbb
cli
stos
mov
stos
test
add
cmc
lret
testl
aaa
adc
jmp
xor
add
jge
popa
pusha
adc
aas
nop
es
push
and
das
shll
push
xchg
out
mov
outsb
inc
std
jecxz
bound
in
ljmp
fldl
mov
rorl
cmpsl
das
mov
les
push
push
xor
mov
dec
cmpsl
pop
lret
add
data16
add
add
push
in
pusha
das
push
dec
in
leave
push
jp
es
enter
pop
aas
xchg
add
nop
cwtl
mov
je
mov
cmpsl
xchg
lret
mov
negb
cltd
and
sbb
or
sbb
mov
in
rolb
call
xlat
inc
pop
cmp
add
push
add
sbb
inc
jp
aam
push
sub
nop
push
lods
cmp
mov
sbb
or
cmp
loopne
mov
adc
subb
sbb
add
loopne
seto
outsb
data16
ret
pop
or
cmp
lods
add
jmp
sub
xchg
cld
add
inc
adc
inc
repz
adc
rcl
add
lcall
nop
and
adc
mov
sub
add
mov
jmp
imul
add
subb
outsl
dec
daa
in
add
inc
imul
sbb
xchg
inc
and
pop
or
sub
add
sbb
or
loopne
lret
enter
pushf
fwait
and
test
cmpb
in
push
shr
jg
jne
aas
addb
xchg
dec
or
std
xchg
mov
xor
push
popf
lret
mov
add
lea
push
mov
pop
mov
cmpsl
sbb
in
cmp
add
jmp
fmuls
fwait
dec
loopne
add
ss
out
or
jl
cwtl
nop
inc
mov
adc
add
addl
cmp
push
add
sahf
fnstsw
add
lret
jmp
in
pop
out
cmp
add
sub
jo
loop
add
fsubs
jp
sub
cmp
in
mov
ret
addb
xchg
cmpl
xchg
jg
dec
xchg
push
cmp
repz
in
subl
pop
mov
mov
jge
sbb
mov
pushf
pop
fistl
push
or
sbb
flds
mov
movsl
cmpsl
lcall
pop
std
fwait
stos
sub
mov
insb
sarb
arpl
enter
pusha
sbb
repnz
fisttpll
push
mov
add
mov
xchg
mov
mov
sub
dec
push
cmpl
nop
cmc
enter
add
sbb
cmp
rcrl
xchg
sbb
loop
dec
sbb
enter
ret
add
jne
cwtl
xchg
sbb
xor
call
icebp
test
ror
nop
cs
add
pushf
ficompl
jb
add
push
les
cmpxchg
outsl
shlb
inc
add
push
pop
mov
jg
or
mov
sbb
cld
xor
sub
shrb
in
dec
mov
je
pusha
jb
mov
adc
push
mov
pop
cli
idivb
cmp
adc
movsb
lahf
fldl2e
add
icebp
test
es
cmp
pop
xor
lcall
ds
in
add
push
cmp
adc
push
cmpsb
mov
inc
add
stos
adc
add
sbbb
sbb
xchg
in
dec
cmp
and
inc
pusha
into
stc
in
mov
cmp
loope
pusha
sub
pushf
add
iret
scas
xor
rclb
push
and
push
sbb
fcomps
xor
std
inc
pop
js
push
scas
andl
cld
dec
jmp
stc
aad
pusha
mov
sub
mov
outsl
int
leave
sub
add
in
movsl
pusha
and
cmp
es
jbe
add
data16
lods
push
paddw
scas
outsl
pop
or
cli
and
leave
nop
dec
sbb
cs
shlb
idivb
sbb
jmp
push
fldl
mov
addb
adc
push
lret
push
and
push
in
adc
add
xchg
lds
mov
add
cs
pop
fst
inc
jo
and
sbb
data16
cs
sahf
ljmp
in
sti
cmp
in
arpl
dec
fnstenv
jne
int
imulb
sub
hlt
mov
adc
add
ds
add
roll
dec
repnz
dec
jo
add
push
cs
out
mov
mov
call
dec
lahf
xor
mov
cli
popa
cmc
sti
add
mov
or
add
sub
xchg
cmp
mov
outsb
popa
nop
mov
std
rcrb
jb
inc
ret
imul
add
dec
jmp
lret
sub
cmp
mov
orl
mull
shlb
aas
out
and
daa
jns
rcrb
add
mul
add
cmpsl
ret
insl
push
or
mov
hlt
outsl
arpl
push
sub
rcr
pop
xchg
movsb
fdivs
bound
mov
scas
popf
es
push
fstl
inc
jo
lods
pop
add
xchg
xor
pop
add
inc
inc
hlt
push
fdivrs
repz
add
pop
jb
sub
clc
imul
icebp
mov
lcall
addb
shll
out
sbb
fdivrl
push
mov
and
cmc
fstpl
fwait
mov
push
adc
cmp
pusha
sub
inc
jge
loopne
add
out
mov
jns
inc
fiaddl
pop
push
lahf
mov
int
shrl
arpl
fiaddl
push
out
xlat
pop
mov
addb
cmc
testb
jnp
clc
cltd
sti
cli
pop
jae
add
or
fdecstp
sub
mov
sbb
dec
add
pop
or
int
xchg
xchg
or
xor
add
pop
mov
flds
adc
cmpl
xchg
enter
push
push
lret
test
push
mov
pop
or
dec
jne
jl
lret
add
jnp
cmpsb
clc
fbstp
add
or
pop
nop
shlb
cmp
add
push
fcoms
or
add
repnz
cmpsb
pop
ss
fdivr
mov
daa
xor
aam
lret
lret
movsl
inc
add
aad
lods
or
or
imul
add
nop
xchg
scas
add
lret
stc
add
sbb
cld
inc
cvttps2pi
repz
cmp
push
jge
movsl
and
add
push
scas
roll
xlat
push
mov
fsubs
add
clc
add
fildl
add
leave
icebp
pop
pop
adc
in
add
xchg
in
mov
adc
add
push
test
ret
ror
jae
lods
test
add
sti
fnstsw
imul
sbb
icebp
mov
cwtl
add
repnz
and
jp
adc
shl
imul
lret
add
mov
sbb
jns
and
push
dec
ret
popa
or
pop
inc
incb
adc
jo
or
lret
es
pusha
lock
add
icebp
out
or
stos
je
inc
lcall
xor
push
mov
enter
add
fwait
push
lret
pop
cld
inc
and
popf
and
rclb
mov
pop
aad
or
loopne
xor
mov
adc
mov
rorl
add
lea
xchg
pop
pop
jo,pt
adc
outsb
mov
push
out
or
jb
mov
cmp
add
mov
mov
cmp
mov
xchg
lret
je
inc
pop
sub
or
loopne
add
pop
aam
adc
mov
add
jecxz
arpl
mov
and
adc
roll
jo
ja
cmp
out
jne
add
fcmovne
enter
into
insb
jp
xor
xor
mov
lea
mov
movsl
dec
mov
and
inc
and
cmp
sub
or
rclb
lea
mov
adc
cmpsb
jo
lcall
inc
dec
jmp
insl
lret
in
pop
mov
incl
inc
mov
lock
add
lods
orb
fldl
cltd
jne
sbb
stos
fiadds
sub
fcmovnb
add
jecxz
xchg
mov
shrb
inc
adc
push
add
sbb
mov
xchg
sbb
mov
dec
fucomp
jo
js
ja
pop
pop
add
iret
xchg
push
push
lret
bound
adc
icebp
add
in
call
add
fiaddl
pop
gs
mov
test
es
inc
es
movzwl
inc
mov
or
dec
push
rclb
jp
cmp
xchg
xchg
lret
add
out
lock
mov
inc
lahf
in
faddl
roll
mov
or
stos
dec
dec
push
jb
sbb
xor
mov
add
xchg
fiadds
cmpsb
add
in
adc
push
add
cwtl
xor
jno
lock
repnz
add
lds
jne
mov
jg
popf
xor
add
into
xor
sbb
add
mov
loop
cmpl
aas
push
cmpsb
addb
adc
adc
or
cmp
in
mov
push
xchg
or
inc
ret
aas
dec
scas
dec
aaa
push
or
pushf
repnz
int
nop
xchg
cmc
fmul
aam
dec
add
mov
sub
data16
add
pop
or
lahf
jle
push
and
test
or
pusha
test
data16
loop
add
lahf
cmpsl
cmpl
xor
sub
adc
mov
fdivs
adc
and
add
xor
lock
das
add
lcall
out
add
sub
cwtl
call
dec
test
in
lret
call
lods
or
imul
push
negl
enter
cli
add
cmp
and
or
push
cmpsb
xor
mov
sbb
add
fcom
ret
push
daa
mov
add
loope
pusha
in
add
scas
xor
xchg
aaa
dec
adc
sbb
jb
test
add
out
js
nop
xchg
xchg
std
cs
je
add
fsubrs
shrb
dec
les
adc
loopne
add
pushw
les
orb
add
andl
sti
test
pop
nop
add
in
imul
and
pop
adc
sub
inc
adc
fwait
jecxz
in
sub
mov
fildl
lcall
cwtl
mov
popa
cmp
rclb
mov
fcomip
xchg
add
push
sub
add
out
pusha
enter
fbstp
xor
pushl
or
sete
or
add
pop
push
bound
lahf
arpl
inc
dec
fisubrl
lds
outsl
jecxz
adc
or
je
jnp
add
aaa
pop
out
aas
dec
mov
mov
andb
or
out
sahf
and
rclb
add
xchg
aas
ja
inc
ljmp
subb
roll
add
adc
test
adc
pop
sbb
subl
inc
daa
add
loop
lods
pusha
pop
sub
sbb
ljmp
mov
xchg
fsubl
push
and
add
das
mov
mov
ljmp
mov
or
call
xlat
inc
jmp
movsb
or
sub
mov
fnstenv
mov
rorl
int
xor
je
sar
ss
lret
jns
filds
iret
add
pop
inc
shrb
xchg
adc
pop
add
les
or
repnz
add
sbb
ret
ret
dec
cmp
aaa
add
mov
push
xchg
push
push
test
cmp
dec
shlb
jae
mov
andb
jnp
inc
xor
pusha
pop
and
sahf
sub
gs
nop
insl
pop
bound
cmpsb
shl
pop
jecxz
push
mov
jb
mov
mov
movsb
addl
repz
lods
sub
iret
mov
cmp
push
loope
and
add
xchg
add
stc
dec
fwait
inc
fucomip
rcrl
jg
push
pop
call
add
xchg
std
leave
jae
jp
add
shrb
push
fists
sahf
fs
push
xchg
mov
add
mov
insl
add
pushf
jo
mov
xor
add
fisttpl
data16
sub
mov
and
subb
cmp
jb
and
dec
mov
fst
xor
xchg
icebp
dec
insb
mov
xor
negl
jno
add
or
stos
inc
out
add
sub
add
add
into
out
filds
and
jp
sbb
push
xchg
je
add
rcrb
les
jl
idivb
cmp
mov
in
call
mov
add
sahf
push
add
jns
shll
add
fiaddl
aas
add
sbb
or
push
es
scas
cmp
xor
dec
popl
sbb
sbb
cmpl
or
addr16
les
or
shll
cmp
fincstp
dec
add
int
mov
pop
mov
jp
movsb
mov
cmp
arpl
xor
push
xor
mov
add
mov
inc
leave
aaa
jnp
jo
sahf
push
sbb
xchg
scas
pushf
lcall
in
fiadds
xorl
pop
pop
out
cmpsb
lgs
rolb
aam
test
movsl
and
cwtl
push
add
push
add
subl
add
jle
cmp
add
mov
test
leave
rcrl
movsl
in
pusha
xor
add
xchg
push
cmp
mov
movsb
insl
ds
mov
jo
cs
pop
fsts
inc
adc
mov
adc
int3
repz
adc
jo
jne
outsl
adc
push
ss
sbb
mov
pop
sbb
sub
pmullw
flds
add
and
xor
scas
ja
stos
and
clc
lea
push
fadds
in
nop
aam
mov
bound
repz
inc
dec
dec
xchg
and
cli
clc
xchg
sbb
pop
lock
push
sbb
and
and
add
dec
lea
int3
xor
cmp
add
cmp
and
fcoms
aam
mov
lds
mov
mov
and
mov
cmove
push
fisubl
gs
ss
add
push
int
nop
call
adc
lds
in
xchg
xor
push
pop
xor
cmp
or
push
jb
add
lcall
pusha
pop
add
add
mov
add
decl
cmp
sbb
xchg
divl
data16
add
jecxz
cmp
push
cmp
std
and
pop
cmp
push
cwtl
mov
sbb
sub
fcomps
aaa
fsubrp
mov
es
sbb
adc
pop
scas
mov
fadds
cwtl
or
add
jnp
lods
dec
insl
fadds
inc
and
add
filds
jb
lds
call
repz
jne
add
mov
or
adc
jb
in
test
pop
inc
push
dec
scas
mov
out
mov
jle
imul
les
dec
sbb
jmp
stc
and
push
xchg
push
cmp
pop
add
inc
aam
fsubrs
out
and
cmpsl
pop
out
std
push
jmp
jmp
aam
int3
in
imul
mov
xchg
sub
loop
add
mov
stos
add
js
jmp
imul
shll
ret
sub
cmp
mov
adc
int
pusha
and
jo
cmpsl
int3
mov
mov
shrb
shlb
add
lahf
add
frstor
add
jp
pop
push
aaa
jno
jecxz
fldl
xor
stc
sub
adc
jnp
ja
jmp
add
jp
jbe
dec
xchg
lret
sbb
adc
add
mov
jo
enter
pop
pop
scas
call
xchg
or
pushl
mov
movsb
cmp
add
add
mov
add
xchg
js
iret
xchg
sbb
add
enter
cmpsb
add
dec
cmpl
inc
add
add
repnz
push
add
sbb
rcrb
add
test
pop
stos
cvttps2pi
pusha
mov
and
xchg
test
dec
call
pop
and
sub
roll
and
out
call
xchg
cwtl
adc
pop
push
ret
pop
jp
into
cli
xchg
bound
ds
psrld
push
pop
inc
ret
dec
xorb
adc
add
pop
mov
iret
jns
shrb
mov
in
sub
mov
xlat
daa
add
jp
xchg
es
cmp
push
mov
adc
lods
imul
fs
dec
enter
insl
shr
inc
filds
dec
sbb
faddl
pop
mov
enter
inc
inc
cmp
inc
adc
fsub
sbb
inc
add
fs
push
cmp
add
test
inc
push
fisubl
jecxz
add
sbb
cmp
inc
xchg
mov
sbb
jb
test
rorb
sbb
rol
sbb
add
in
mov
cmpsb
jnp
lods
add
jbe
push
cmp
pop
jae
or
cmp
nop
and
popf
sbb
xlat
adc
dec
lods
mov
aas
add
daa
xlat
add
sbb
out
cmp
adcl
lock
push
pop
mov
jnp
ds
aaa
add
ljmp
lods
or
sbbb
push
inc
xchg
jcxz
test
icebp
mov
in
hlt
sub
sub
pushf
jg
add
pop
leave
icebp
push
addl
pop
cmp
cmp
movsl
sbb
jle
subl
xor
add
sbb
jg
add
or
lret
xor
pop
add
les
aas
add
mov
xor
pop
add
sbb
pop
in
add
push
arpl
adc
dec
scas
test
aaa
stos
movsb
testb
nop
add
inc
push
add
or
cmp
xchg
iret
and
adc
mov
cmp
mov
xor
and
xchg
out
push
adc
sti
sti
andl
adcb
lods
dec
jno
add
jl
pop
jns
icebp
mov
and
xor
outsb
mov
mov
jbe
pop
mov
and
popl
or
imul
out
clc
ja
add
push
jns
cmpl
inc
adc
cli
dec
js
and
iret
xchg
inc
mov
sbb
lods
mov
and
cmp
add
jg
enter
js
jae
pop
push
fwait
ljmp
push
sarl
adc
rclb
mov
push
out
add
push
into
jmp
test
xchg
nop
outsb
or
xor
xchg
add
jbe
add
in
xchg
add
in
pop
shlb
outsb
jmp
push
cltd
in
add
mov
lods
lcall
pop
pop
pop
cmp
push
push
push
inc
shl
inc
mov
add
mov
frstor
or
jmp
pusha
push
mov
jmp
add
xchg
cmp
cmpsb
mov
jno
push
pop
ret
test
add
xor
rclb
es
clc
rolb
push
in
iret
shrl
imul
pop
or
mov
inc
mov
cltd
out
repnz
outsb
sbb
stos
sub
dec
int3
push
xchg
adc
shll
add
push
mov
dec
jnp
xlat
loopne
add
inc
dec
popa
add
add
jle
adc
cmp
xchg
add
sub
ljmp
jne
icebp
cs
pusha
cmp
movsb
lret
dec
lcall
add
je
sbb
dec
shlb
add
dec
mov
ja
mov
cmc
aam
cmpsb
jo
adc
inc
add
add
pushf
push
sub
cli
push
push
xchg
mov
rcrl
outsb
add
mov
sbb
mov
cmc
add
or
jo
mov
repz
inc
shlb
push
cmp
add
fcoms
add
cltd
inc
and
scas
add
or
cli
add
imul
cmpsl
repnz
mov
subl
ds
mov
sar
aaa
xchg
dec
rolb
add
pop
cmc
inc
xor
sbb
addr16
mov
mov
rcrl
aad
cmp
xlat
add
mov
jns
dec
aad
adc
lea
add
xchg
shll
jp
xorb
sahf
push
cld
dec
add
cmp
push
cwtl
dec
mov
or
and
sarb
repnz
inc
push
pushf
or
ror
adc
add
sbb
push
mov
jnp
dec
pushf
sbbl
inc
xchg
cmp
dec
mov
push
mov
out
test
pop
cmp
shlb
pop
shrb
mov
sub
xor
rclb
filds
push
mov
jg
push
jmp
sahf
repz
mov
sub
jb
into
mov
mov
in
jg
inc
add
aaa
mov
je
addr16
jp
cmp
dec
push
test
in
cmc
push
inc
sbb
je
clc
into
in
push
loope
dec
dec
andb
cmpsb
cmp
sbb
pop
mov
jge
pop
sahf
or
mov
add
into
lods
hlt
add
lcall
arpl
rcrl
rolb
lds
mov
adc
push
dec
jb
pop
sub
mov
inc
test
mov
add
scas
orl
mov
push
cmp
aaa
add
ja
jmp
mov
add
or
push
inc
xchg
cmp
add
jno
js
or
xchg
cld
add
pop
or
add
ret
add
cld
out
add
icebp
mov
pop
imul
push
rorb
in
int3
mov
dec
dec
jae
rclb
mov
pop
add
xchg
push
insl
lret
lock
mov
and
lock
rolb
pusha
push
sbb
xchg
dec
cld
jge
into
push
inc
lret
call
inc
add
mov
jge
sub
add
repnz
addb
mov
bound
jns
xchg
jo
mov
in
xchg
in
fnsave
xor
adc
jle
testb
or
mov
ds
sub
cmp
adc
jae
fsubrl
sub
out
aam
push
xchg
ret
jl
lods
add
pop
test
je
stos
xchg
jmp
jg
sub
and
cmp
cmp
dec
lret
or
mov
xor
mov
pop
dec
pop
and
add
arpl
mov
out
pop
pop
add
push
add
mov
xor
mov
fnstcw
add
dec
aas
cmp
shl
pop
pop
int
lock
and
xor
push
jo
insl
out
in
adcl
push
cmp
mov
add
adc
lods
sahf
rcrl
in
add
add
xchg
and
sbb
lods
pop
imul
in
and
sbb
repnz
and
xor
gs
sbb
jns
add
shll
or
xchg
push
cmpl
lods
cmp
jge
cmpsb
add
addr16
dec
or
mov
fs
sbb
aam
and
add
cwtl
loope
out
xor
enter
or
mov
cld
add
xor
negb
lock
fcmovu
mov
repnz
sub
sbb
daa
push
cmp
and
icebp
int3
sahf
fwait
add
push
sbb
jbe
cwtl
jmp
mov
fwait
in
fcomip
rolb
add
dec
jns
faddl
xchg
cmpb
add
lret
push
or
test
xchg
xor
es
and
add
mov
enter
cmpsl
adc
adc
add
xchg
mov
add
out
mov
sub
add
bound
push
mov
iret
sbb
fdivs
mov
sbb
fstps
inc
add
push
sbb
les
ds
xorl
outsb
or
mov
add
arpl
nop
push
push
ja
fcoms
add
imul
out
aas
pop
jbe
xchg
add
popa
pop
fwait
and
add
test
xor
nop
sub
push
push
popa
inc
add
outsl
pop
push
xor
push
inc
pop
gs
lock
mov
jns
leave
push
sarb
cld
cmp
xor
sub
aas
mov
cs
mov
cmp
dec
add
xor
cmpsl
cmp
repz
mov
in
nop
fs
shlb
sbb
enter
mov
dec
pop
mov
fsubs
add
fstps
mov
ss
pop
mov
sbb
fiadds
sbb
pop
add
cmp
fucomi
cmp
jmp
push
fdivr
sbb
add
cmc
or
add
push
stc
sbb
jmp
pop
add
mov
popf
ret
xchg
cmc
and
mov
dec
rcr
inc
mov
jge
add
push
sub
sub
cld
or
xor
pushf
cmc
mov
xchg
add
pop
jbe
jnp
pop
pusha
add
aad
xchg
roll
lods
jmp
orb
loop
cli
cmpsl
xchg
mov
movsb
add
jl
les
insb
add
lods
outsb
mov
fcmovbe
push
add
mov
dec
add
in
les
add
dec
add
fisubl
pop
sti
fidivs
inc
fbld
je
add
xor
aam
popa
popf
scas
loop
mov
dec
cmpl
mov
add
mov
fistl
and
outsb
xor
add
xor
test
ljmp
xchg
adc
mov
lahf
pop
push
xor
sub
daa
loope
div
pop
pusha
lcall
aaa
cmp
in
cli
add
sti
pop
inc
cwtl
adc
cltd
jb
ds
jle
add
hlt
in
mov
lods
push
outsl
andl
sub
addr16
sbb
jno
mov
movsl
mov
pop
ret
add
inc
in
aam
push
add
loope
andl
mov
add
jns
arpl
shlb
cmpsl
push
pop
addb
dec
mov
in
aam
rol
cmpsb
cwtl
das
cwtl
cmp
push
idivl
dec
mov
je
in
rolb
divl
fnsave
and
pusha
sarl
inc
lods
aam
enter
xchg
mov
and
or
or
nop
add
loope
add
mov
xchg
mov
popf
std
in
pop
lock
sbb
and
movb
adc
and
loopne
es
test
add
fisubl
xor
sbb
jno
pop
jecxz
sahf
add
mov
cwtl
stos
inc
adc
add
jb
xchg
lcall
addr16
adc
shrb
push
and
divb
paddsb
ret
mov
leave
add
call
iret
xchg
sbb
inc
fistpll
xor
mov
aam
fidivrl
jns
mov
clc
add
mov
cmp
xor
testl
cwtl
push
sub
push
xor
mov
imul
jmp
push
adcl
ljmp
movaps
pop
add
cmc
out
stos
cltd
jecxz
inc
sub
iret
ret
push
mov
cmp
mov
sahf
inc
sub
xlat
adc
aam
insb
push
xchg
arpl
push
inc
dec
sub
jo
fldenv
pop
mov
jne
pushf
add
mov
pop
in
movsb
shr
scas
lret
cmpsl
fs
fdiv
mov
loopne
lds
xchg
ljmp
xlat
je
jnp
test
sbb
aam
mov
add
add
add
mov
loope
jle
bsf
repz
rcl
loop
pop
add
in
pushf
imull
and
dec
lret
add
cwtl
lds
je
dec
int
add
iret
test
and
or
and
fdivrl
insb
xor
insl
cmpsl
inc
adc
fs
push
mov
or
dec
pop
pushf
jbe
daa
jl
adc
out
sub
mov
test
inc
in
enter
mov
nop
sahf
cmp
aam
xor
dec
cltd
lcall
add
sbb
mov
or
mov
cli
daa
xor
jo
mov
and
movsb
adc
xlat
lret
loope
loopne
nop
or
pop
pop
dec
mov
add
pushf
js
fmul
inc
push
add
cmpl
mov
or
and
add
test
mov
cmpsl
jp
mov
or
and
push
inc
sub
dec
mov
in
add
pop
cmp
shrb
dec
add
nop
add
inc
add
repz
add
jmp
dec
add
sti
filds
adc
push
sbb
add
and
dec
cld
aam
sub
pop
ja
jle
push
mov
jo
dec
in
add
cld
lret
loopne
mov
outsl
test
cmp
mov
add
scas
pop
cmpsb
jmp
out
mov
mov
in
out
mov
daa
andb
fldt
out
mov
mov
dec
cmp
and
shlb
xor
je
jmp
fwait
lods
test
sub
sbb
ret
aad
inc
adcb
rcrb
jb
dec
daa
or
mov
mov
pop
sub
push
imul
rcrl
xchg
setge
test
mov
sahf
hlt
cmp
adc
clc
imul
sbb
add
push
xchg
cmp
fstps
and
jae
adc
ds
push
add
imul
es
add
fstps
jecxz
orb
dec
mov
add
pop
xchg
in
sbb
daa
or
in
add
aad
int
mov
insl
mov
jo
gs
mov
les
or
dec
fwait
jle
pop
add
out
xchg
push
lock
out
loopne
lods
arpl
mov
inc
imul
cmp
add
push
aaa
stos
add
push
cmpsl
sbb
mov
inc
add
xchg
xorb
or
stos
cld
inc
or
pop
cmp
mov
cs
mov
or
pop
jbe
or
stc
push
aam
sldt
push
inc
pop
cmpsb
scas
test
inc
in
add
dec
ficomps
add
pop
cmp
push
lret
cmpsl
push
push
insl
cmc
add
mov
xchg
out
pop
in
ficoms
dec
out
nop
sbb
pop
jle
negb
inc
xchg
nop
mov
add
popf
inc
lea
in
and
mov
call
mov
jp
outsl
or
cli
dec
add
aas
insb
mov
std
out
icebp
mov
clc
cmp
imul
sahf
jnp
add
or
vmread
xchg
repnz
into
pusha
sbb
mov
int3
sahf
iret
arpl
push
ja
loope
xor
push
and
inc
inc
psrad
pop
popa
in
xchg
pop
xor
xchg
mov
xorb
jp
mov
add
jno
hlt
mov
add
es
test
int
mov
ret
sub
and
sarb
mov
test
cmp
or
add
and
sldt
pop
mov
js
mov
pushf
fadds
lods
loopne
cwtl
xchg
push
in
or
mov
xlat
cmp
pop
cli
pop
xchg
and
addl
mov
pop
fistl
jmp
add
jecxz
popa
jl
jae
add
ds
add
push
int
add
pmuludq
jg
xor
fildl
jmp
pop
je
add
arpl
pop
cmp
sbbb
popa
sbb
movsl
dec
pop
sub
mov
add
xchg
dec
add
aas
xchg
bound
xor
int3
or
cltd
xorb
daa
lahf
sbb
int
add
mov
popa
in
call
scas
xlat
fstpt
sub
cld
inc
jno
ror
dec
rorb
jae
add
sahf
fsubs
push
add
les
inc
bound
pop
dec
pop
movsb
inc
push
push
mov
inc
inc
mul
adc
add
push
inc
mov
sbb
mov
dec
lcall
mov
mov
sbb
jl
sbb
add
mov
add
xor
mov
loope
cmc
sub
enter
xor
loop
pop
cmpsl
mov
and
es
push
test
xorl
and
dec
stos
mov
les
inc
xor
mov
sub
adcl
mov
mov
mov
jle
lods
aam
add
and
mov
add
aam
xlat
jg
add
loopne
jge
call
xchg
pop
inc
mov
pop
je
inc
dec
bt
mov
ljmp
test
and
dec
add
pop
mov
cli
shr
mov
aas
add
xchg
inc
cmp
add
neg
ficompl
add
pop
in
fs
out
or
loopne
stos
mov
mov
sub
xchg
mul
pop
imul
sbb
fidivrs
incl
mov
sub
pop
in
pop
das
mov
xor
add
sub
sbb
sub
jecxz
rclb
jp
add
add
mov
xor
ds
add
fcoms
out
xchg
add
out
insb
mov
add
ljmp
je
daa
add
negl
stos
cmp
inc
mov
inc
mov
add
jmp
fisubs
fucom
out
jnp
call
add
lods
sarb
mov
push
cmp
mov
and
xchg
call
in
inc
push
lahf
adc
mov
jb
mov
sahf
or
int3
jle
cli
jno
dec
negb
icebp
das
aad
jae
rorl
shl
in
inc
add
dec
daa
jbe
test
ret
and
add
shlb
bound
push
sti
sub
or
jno
ret
lea
push
sub
pusha
ret
or
inc
push
pop
add
es
incl
int
jb
xchg
xchg
add
push
jno
mov
mov
push
clc
adc
or
adcb
mov
cmp
mov
or
popf
arpl
cld
pop
add
pusha
lahf
in
jb
mov
jo
outsl
mov
fs
shl
es
pop
add
into
xor
push
sub
add
addr16
sbb
add
mov
jno
sub
mov
add
js
pusha
loopne
jnp
sbb
sbb
out
add
dec
lea
add
mov
cltd
pushf
add
push
add
shrb
adc
mov
lret
sub
xor
leave
cmp
xor
lds
mov
cmp
jb
stos
loopne
add
lcall
fsubrp
inc
sti
aad
insb
shrl
insb
and
test
xchg
int3
cmpsl
shrb
xchg
in
cli
pop
cmp
sbb
jl
xchg
push
hlt
dec
sbb
push
xor
add
xorb
push
flds
cmp
jmp
pop
leave
popf
jae
int3
adc
addl
mov
into
jno
stos
js
sub
adcb
dec
hlt
cmp
mov
aas
movsb
pushf
inc
in
maxps
inc
mov
stos
les
rorb
mov
or
sbb
ja
mov
mov
or
add
mov
add
out
test
sahf
ret
push
sbb
cld
daa
stc
dec
in
cwtl
popa
in
push
sbb
inc
int3
pop
fwait
scas
in
popa
ret
out
and
aad
inc
fs
mov
es
jae
int3
sbb
lds
dec
arpl
xor
xor
and
add
pop
cmpsb
xchg
pop
jp
roll
mov
lcall
inc
pop
cs
fwait
xlat
cmp
orb
int
mov
addl
dec
fildl
enter
jl
sub
mov
test
enter
push
and
add
sahf
push
pop
aas
gs
mov
mov
dec
mov
and
mov
shlb
sbb
add
inc
je
or
and
jb
jno
add
cli
push
cmp
push
hlt
aam
mov
inc
adcl
xchg
mov
and
push
sbb
call
andb
pop
out
cmp
in
mov
inc
ret
and
add
rolb
arpl
add
dec
call
jnp
push
rcl
mov
mov
loop
cld
icebp
or
clc
mov
add
in
mov
pop
pop
movsl
pop
ret
lods
int3
sbbl
sub
je
mov
mov
inc
fmull
inc
mov
adc
orl
dec
pop
mov
xor
iret
add
or
xchg
add
pusha
xor
push
mov
leave
push
push
fs
lock
and
xor
pop
pusha
xchg
fsubs
ds
and
sub
out
jmp
xor
movsl
pop
add
fstps
mov
in
xor
mov
call
pop
shr
mov
lds
cmovbe
push
sub
add
out
decl
add
ret
xor
cmp
mov
pusha
pop
mov
shlb
add
cmp
sbb
add
jne
pop
xor
hlt
mov
loopne
inc
shll
inc
add
mov
jno
jbe
and
popa
adc
fs
add
push
test
test
mov
ds
add
daa
lcall
mov
cmpsb
xor
imul
adcb
inc
and
mov
aam
sbbb
mov
les
adc
aas
pop
in
es
add
lods
push
xor
jnp
sbb
xor
sbb
call
mov
scas
sahf
pop
xor
shll
jle
dec
icebp
sbb
adc
add
and
mov
jge
adcb
xchg
jmp
call
sbb
jb
xchg
movsb
adc
adc
in
inc
sbb
out
cwtl
push
jbe
repnz
jg
add
pop
sahf
sbb
mov
jnp
adc
lret
sub
add
movsl
add
aas
lcall
adc
call
xchg
dec
sbb
mov
enter
add
call
inc
ret
mov
add
push
mov
inc
ret
nop
clc
mov
push
ret
imul
adc
addl
lds
xor
int
jmp
xor
shl
add
or
mov
and
mov
xchg
mov
cmp
sbb
push
int3
mov
ljmp
lock
and
sub
add
xchg
sub
and
push
mov
loope
dec
jns
add
xor
outsl
int3
mov
adc
adcb
adc
sub
add
mov
mov
aad
xchg
je
pop
xor
out
in
or
sar
jmp
and
sbb
icebp
test
iret
subb
dec
leave
pop
fidivl
inc
clc
and
lret
icebp
or
movsb
and
jo
pop
push
mov
pushf
cltd
mov
xor
add
add
push
test
jmp
je
xchg
cmp
in
cmp
xor
mov
mov
out
mov
add
jbe
mov
add
sub
push
jg
or
sbb
stos
mov
and
and
pop
push
xor
aas
cld
inc
dec
mov
int
scas
push
and
dec
js
add
popa
clc
jmp
mov
int
inc
push
ljmp
xor
adcb
sbb
lcall
or
jo
leave
add
test
xor
scas
clc
xor
fs
xorl
jmp
cwtl
scas
mov
sub
push
fsubp
lret
shll
je
mov
or
inc
xor
and
nop
lock
int
jns
mov
adc
fiadds
sub
pop
pop
hlt
std
scas
pushf
add
ret
out
sub
mov
and
dec
jmp
sub
add
lret
mov
out
adc
jmp
push
in
pusha
roll
add
dec
data16
add
mov
lcall
in
mov
xchg
mov
addb
call
push
mov
movsl
push
fwait
and
mov
jecxz
push
push
sbbb
fisubs
jb
xor
and
ljmp
leave
gs
or
pop
pop
inc
dec
adc
arpl
in
or
loope
addb
jne
je
clc
push
add
cmpsl
xor
in
adc
pop
in
imul
repz
scas
mov
mov
jg
aas
out
dec
sti
in
add
xchg
or
out
shrl
inc
filds
ja
pop
jbe
sarb
inc
pusha
outsl
popa
stc
aaa
cwtl
sbb
sbb
cli
js
pop
ret
cs
adc
arpl
lcall
lea
mov
in
in
push
add
sti
rorl
mov
pextrw
ds
xchg
mov
mov
mov
ficomps
lret
push
dec
rcrb
inc
daa
lock
or
test
sub
dec
dec
daa
stc
adc
cmp
rorl
mov
jg
adc
jno
cwtl
push
jb
add
or
mov
adc
sbb
rcll
in
mov
in
pop
add
mov
or
scas
test
insl
pop
in
push
jno
fimull
shrb
lock
mov
int3
out
sbbb
jno
pop
out
xor
icebp
sub
push
add
cmpsb
cwtl
test
mov
sub
dec
push
xor
push
jle
test
pop
sbb
dec
test
lcall
loopne
xorb
inc
adc
rolb
cmc
push
push
jb
mov
popa
push
jmp
popf
arpl
int
xor
jmp
inc
decl
dec
imul
cs
jmp
stos
ja
jl
dec
insl
mov
enter
mov
dec
push
rcrl
ficomps
add
lahf
dec
ljmp
ret
insl
aad
imul
cmp
fcmovb
lret
sbb
sbb
mov
mov
test
dec
test
mov
clc
in
cmpsb
aam
rcrb
mov
out
and
jge
addb
nop
sarb
movswl
arpl
adc
clc
mov
and
daa
inc
addb
lods
shr
pop
add
jne
or
or
ret
aam
adc
push
pop
xor
push
pop
jmp
sub
pop
mov
daa
or
adc
and
mov
xor
or
sbb
repnz
mov
subl
add
fwait
test
in
dec
xchg
add
insb
jmp
inc
jne
and
xorl
or
loopne
sbb
shrb
push
in
jge
jnp
es
das
arpl
dec
and
fistps
mov
arpl
pop
icebp
inc
imul
xor
sub
pushf
push
push
push
test
push
jo
jge
into
stos
repnz
aam
stos
lret
and
dec
or
cmp
mov
and
or
adc
and
imul
lret
add
sbb
scas
push
rolb
pop
sbb
xor
add
js
lret
cmpb
inc
mov
aaa
push
xor
lcall
adc
add
int3
fistpl
and
dec
push
popf
mov
dec
cmp
xor
jnp
push
add
test
ljmp
cmp
pop
jno
xor
in
inc
les
mov
in
add
subl
out
add
sub
int
and
or
xchg
inc
dec
push
xchg
lahf
sub
loope
xor
or
inc
jg
cmp
dec
mov
addr16
push
inc
pop
add
adc
pusha
aad
dec
and
xor
sbb
lds
sub
jl
add
fbld
pusha
adcl
fcoms
dec
push
xchg
sub
aad
jle
test
inc
jo
movsb
inc
pop
dec
insl
jg
sbb
xchg
cmc
cltd
popf
add
add
data16
mov
cli
pop
xor
jbe
lahf
cmpsb
fadd
jge
and
das
adc
movsb
push
inc
push
mov
xor
jnp
insl
or
jl
and
jo
mov
in
pop
imul
or
xchg
sub
sbb
in
pop
cmp
add
xchg
mov
fbld
add
or
pop
test
fs
clc
lret
xchg
mov
or
in
add
hlt
xlat
sahf
lods
cmp
sbb
inc
xchg
out
fs
shr
and
divb
pusha
int3
shll
pop
adc
mov
addr16
rorl
int
loopne
and
add
jmp
shll
xchg
fwait
loope
mov
inc
jp
pop
adc
enter
and
xor
outsl
fnstsw
and
out
adc
arpl
or
pop
stos
aad
cmp
sbb
add
adc
ds
sbbb
mov
or
adc
inc
enter
mov
sbb
mov
inc
lret
sarb
or
ret
cltd
xchg
pushf
ret
dec
mov
jp
or
nop
jae
adc
and
inc
mov
mov
int
push
adc
ss
clc
mov
or
add
test
aas
fmull
xchg
or
lods
mov
orb
xor
aam
or
orb
inc
test
add
and
hlt
dec
cwtl
adc
leave
pusha
and
pop
aad
out
jmp
push
inc
mov
es
push
jo
in
add
addb
loop
test
aaa
inc
lock
and
cmp
lock
xor
or
cmp
stos
fsubrs
mov
mov
pop
fxch
push
cltd
mov
jb
sbb
call
push
and
inc
and
flds
lock
add
sbb
outsl
mov
mov
rolb
enter
sbb
push
je
and
insl
mov
loopne
test
mov
cwtl
enter
in
test
fwait
xor
mov
dec
cmpsl
or
imul
jp
and
pop
jge
jmp
enter
xor
dec
and
add
mov
int3
mov
incl
adc
movsl
or
mov
cltd
and
rorl
shll
pusha
jl
mov
and
das
pop
es
adc
adc
leave
add
ja
push
jmp
jno
or
adc
or
sbb
gs
sub
push
add
mov
push
adc
int
loopne
movsl
push
inc
pop
dec
mov
lret
fs
or
movsl
inc
out
outsl
lcall
sbb
adc
jo
and
mov
cmp
or
popf
push
rcrl
sahf
xor
push
cld
adc
insb
shlb
in
add
lock
popf
dec
push
rcl
xor
pop
xchg
mov
xor
psllw
jge
add
pusha
int3
mov
fs
bound
insb
gs
mov
jns
cmp
aam
xor
daa
sbb
fs
inc
inc
pop
cld
jno
xchg
bnd
out
sub
ds
mov
data16
dec
sub
insl
inc
mov
pusha
mov
repnz
addb
daa
int
test
ret
and
jnp
cld
and
out
pop
int3
dec
mov
mov
add
pop
rorl
inc
mov
cld
or
int
sbbb
aaa
push
add
cli
lret
sub
mov
or
addr16
cmpsl
hlt
je
cmpsl
rolb
das
cs
mov
test
rolb
mov
cmc
cld
add
lahf
or
pop
ds
xchg
mov
cwtl
add
jl
cltd
lods
es
adc
xor
lods
outsl
mov
stc
add
push
out
push
cmp
xor
sub
ret
push
or
std
inc
ror
adc
xor
pop
jl
jg
sbb
shlb
popa
push
fiaddl
icebp
lock
sub
adc
sar
adc
add
xchg
cwtl
inc
stos
jno
pop
in
cmp
out
lret
add
dec
xchg
sbb
loop
ret
shrb
cld
daa
sub
cmp
rclb
rolb
js
xor
fwait
imul
mov
iret
dec
imul
enter
xchg
das
xor
dec
call
es
cwtl
mov
mov
xor
lds
jecxz
push
aad
subb
ret
add
loopne
pop
pop
add
mov
mov
mov
out
add
dec
shrb
adc
outsb
addb
int3
sub
lods
dec
add
sti
lahf
lcall
lret
add
sub
add
add
sub
fsubs
insl
xor
mov
hlt
add
pop
repnz
adc
xor
or
pop
jno
shlb
sarb
xchg
ljmp
or
add
add
cwtl
pushf
mov
sub
mov
and
ja
pop
imul
mov
push
jns
and
mov
mov
xchg
adc
mov
xor
jb
dec
aaa
inc
rolb
push
mov
push
fs
or
push
adcl
test
popa
int
and
jbe
inc
xlat
repz
inc
xor
pop
sarb
dec
loopne
push
mov
push
adc
jmp
fdiv
rclb
cwtl
mov
data16
shr
mov
lret
ds
fstl
cmpsb
fs
add
insb
mov
push
inc
ret
push
movsb
cli
ret
imul
loop
xchg
mov
sub
add
insl
and
loope
add
xor
leave
xchg
sub
or
fbstp
add
xor
adc
call
mov
mov
xor
insl
add
test
sbb
mov
lds
pushf
test
pusha
sub
or
fs
aas
repnz
adc
mov
mov
mov
cmp
xor
sub
and
mov
sbb
mov
andb
daa
bound
pop
mov
clc
add
fwait
adc
shr
rclb
adc
add
out
aas
out
inc
ds
or
insb
xor
add
pop
dec
arpl
addr16
cmovne
in
andb
dec
pop
in
cmp
mov
insb
xchg
mov
sbb
push
add
push
test
mov
inc
dec
pop
cmp
adc
dec
xor
cwtl
pop
test
push
adc
mov
mov
push
icebp
xor
xor
mov
mov
dec
je
mov
les
dec
push
pop
in
and
pop
iret
push
mov
dec
add
xchg
mov
mov
xor
and
or
or
js
mov
pusha
mov
dec
movsb
orb
ja
sub
into
dec
push
mov
in
and
cmp
call
fcmovu
arpl
push
sbb
mov
add
cmp
aam
lahf
and
mov
add
xchg
insl
ja
daa
bound
mov
add
cmp
mov
cmpsl
add
xor
nop
cmp
sbb
stos
pop
adcl
iret
dec
test
out
test
sahf
sbb
mov
push
lea
add
xchg
push
inc
aad
aaa
mov
sbb
xchg
mov
enter
xchg
mov
and
cmp
movsb
pop
cmpsb
adc
xor
inc
pop
loopne
jnp
imull
movsl
aas
repnz
add
test
jg
xor
sbb
out
jo
adc
pop
cli
fisttpll
jnp
mov
mov
inc
mov
aam
jae
xor
add
jo
out
cmp
dec
dec
js
cmpb
adc
mov
aaa
cltd
call
lods
loopne
jl
mov
push
push
and
jns
dec
out
hlt
sub
cmpl
clc
addb
sahf
push
clc
or
adc
mov
cld
dec
movsb
fsubs
inc
out
fxam
ltr
push
lds
push
rcll
xlat
stc
xor
inc
xchg
lods
sbb
dec
lea
data16
cmp
inc
mov
dec
cmpsl
repz
lods
rorb
pushf
mov
insb
inc
call
arpl
loopne
addl
je
mov
outsb
push
out
mov
sbb
mov
cmp
jmp
sbb
inc
inc
pop
push
leave
imul
inc
cmp
mov
int3
jbe
inc
mov
jl
lea
mov
ret
add
gs
and
xor
mov
sahf
add
mov
push
mov
add
mov
cwtl
xor
repz
dec
adc
test
popa
cmpsl
add
mov
sbb
adc
scas
push
int3
mov
cli
rolb
lock
insl
mov
mov
sub
jl
push
dec
les
cld
add
out
xchg
pop
mov
mov
shrb
mov
stos
mov
fisubs
jns
nop
dec
cmp
mov
outsb
mov
mov
add
inc
pop
add
enter
jg
add
sbb
mov
nop
jl
lea
dec
js
jns
add
addr16
cli
into
sbb
add
inc
orb
divl
icebp
enter
adc
add
das
push
out
scas
inc
push
add
push
push
pusha
cmpsl
cmp
add
add
cmpl
stos
movl
xchg
cltd
fstps
inc
push
mov
sub
jbe
je
arpl
jmp
mov
cbtw
push
mov
sub
in
jmp
inc
push
call
add
fiadds
dec
dec
jbe
mov
jl
adc
sti
in
loopne
lock
adc
and
sbb
jno
mov
dec
pop
add
push
loope
cmp
out
push
leave
into
mov
and
inc
das
xor
out
js
clc
jle
add
or
jne
dec
int
cmp
mov
pop
jno
dec
add
mov
adc
push
test
ret
popa
push
pop
stos
mov
cmp
into
js
dec
ret
sub
xor
xor
in
insb
or
jp
pusha
fbstp
add
adc
lods
pop
divl
cltd
xor
pop
mov
int
mov
adc
push
and
mov
pop
stos
out
js
dec
jl
gs
orb
incl
out
push
enter
or
movsl
sub
jbe
mov
cmp
nop
shl
mull
pushf
and
mov
add
pop
sbb
sahf
lahf
insl
inc
fstl
sub
mov
rcrb
test
mov
cltd
cld
shrl
mov
popa
add
dec
add
mov
xchg
push
cwtl
mov
xchg
add
push
xchg
cmp
and
es
popf
jo
and
call
mov
imul
jmp
roll
and
in
add
pop
pop
sub
push
popa
into
scas
mov
mov
sub
movsb
and
push
inc
mov
xor
push
mov
sub
test
pusha
cmp
add
pop
popa
xor
push
orl
xor
daa
lret
jnp
div
scas
mov
int3
push
enter
inc
dec
out
push
sub
mov
lods
scas
sbb
mov
add
xor
and
enter
and
movsl
into
lock
jl
push
mov
std
jno
sub
dec
mov
ret
hlt
dec
lahf
into
sbb
add
jg
adcb
add
push
decl
icebp
jne
pusha
test
ret
ds
dec
mov
push
std
repz
mov
mov
and
push
inc
mov
into
in
imul
add
and
sub
cwtl
jl
loop
sub
jmp
lcall
and
mov
shlb
es
xor
std
dec
push
es
lret
sbb
sbb
cwtl
mov
add
xchg
pusha
xchg
xchg
and
test
add
sub
add
mov
mov
enter
lods
mov
sahf
adc
fsub
or
loopne
cmp
pop
add
pusha
sbb
adc
mov
sbb
cwtl
je
push
or
inc
dec
push
in
push
mov
rcll
stc
les
inc
and
mov
mov
adc
inc
push
jge
pop
nop
stos
sbb
sub
dec
xlat
inc
and
leave
in
jnp
loopne
js
lcall
into
and
xor
out
sbb
js
mov
add
into
test
pop
int3
adc
mov
sbb
and
inc
sub
adc
je
push
jle
lock
add
cmp
mov
je
pop
lock
cmp
pop
adc
adc
lods
pop
adc
cmp
mov
scas
push
icebp
jl
jecxz
inc
stc
rorb
xorb
pusha
cmpsb
pop
test
dec
ds
xchg
mov
add
mov
loop
adc
add
daa
inc
or
add
jg
adc
push
adc
sub
sbb
stos
sbb
cmc
and
and
mov
jecxz
hlt
mov
mov
jmp
inc
mov
fcomps
inc
imul
inc
dec
sbb
lret
push
jno
mov
mov
popf
addb
sub
mov
lods
xlat
add
shlb
movsb
inc
mov
push
push
sub
lahf
sbb
adc
and
jge
push
pusha
xor
xor
mov
xor
nop
hlt
and
and
cs
sbb
ss
add
adc
stc
fbld
lock
insl
orb
or
sti
and
fiaddl
jmp
lods
pop
inc
mov
sub
mov
loop
insb
add
jl
lahf
add
aaa
popa
and
int3
addr16
mov
pop
jo
loopne
xchg
shlb
addb
mov
and
add
push
dec
mov
sbb
out
pop
cltd
dec
les
aam
arpl
push
push
test
ljmp
inc
loope
lds
cmp
insb
cwtl
shlb
pushf
rclb
push
lret
jl
test
jmp
sub
test
pop
imul
xor
adc
dec
pop
and
cmp
out
lock
ret
dec
pop
xor
add
and
clc
lods
orb
divb
mov
push
xchg
add
add
xchg
push
fucomi
jg
xchg
adc
mov
add
cmp
fbld
popl
ljmp
pop
xor
popa
lods
dec
adc
push
add
pop
rol
shlb
mov
out
clc
roll
adc
and
lahf
cmove
mov
ret
jb
add
cs
and
fdivs
mov
xor
call
pop
pushl
test
or
push
jecxz
add
sbb
mov
decb
loopne
mov
lea
push
xchg
pop
pop
xchg
pushf
add
les
loopne
mov
sbb
sbb
aas
push
sub
es
add
add
sub
loop
pusha
cli
inc
rol
daa
clc
adc
push
les
orb
push
xor
mov
and
in
dec
lret
mov
pop
daa
mov
cld
aas
add
push
test
push
cwtl
mov
inc
js
push
es
into
sub
or
call
fsubr
test
inc
adc
push
insb
dec
mov
icebp
and
cmp
add
pop
xchg
dec
add
jmp
cmp
pop
xor
sbb
jne
add
sbb
or
call
repnz
add
push
mov
rcl
add
sub
aad
add
adc
lret
stos
pop
int
adc
inc
mov
sarb
mov
andl
jle
fs
xchg
pop
andb
fldcw
lods
movsl
sub
out
repz
imul
push
or
adc
mov
mov
mov
nop
mov
fwait
dec
sbb
enter
push
scas
dec
mov
and
xor
cwtl
clc
repnz
fwait
insb
sbb
xchg
push
repz
push
push
shrb
das
fsubs
and
sbb
cmp
je
lcall
mov
push
ret
pop
mov
jns
lods
outsl
stc
xchg
nop
inc
js
inc
dec
and
pop
and
cwtl
lahf
cmpb
mov
sti
out
and
add
rcrb
lret
hlt
jecxz
xor
loopne
dec
fs
pop
divl
jl
sbb
and
out
test
add
add
rolb
sub
inc
cld
mull
mov
push
outsb
mov
jmp
xor
add
jge
mov
add
and
push
inc
or
jno
subb
xor
test
cmpsl
xor
sbb
out
jno
inc
shrb
inc
fisttpl
inc
lds
push
jg
adc
mov
out
jl
push
cmp
xchg
nop
out
add
xlat
in
lds
cmpsl
rol
enter
pop
andb
push
jno
add
test
pusha
shlb
push
mov
xor
pop
fcoms
cld
or
mov
jae
cli
dec
push
and
mov
sti
lret
stos
add
sub
mov
mov
stos
insl
add
adc
add
mov
add
es
and
mov
test
push
xchg
sbb
aad
cmpb
sbb
jmp
das
sub
dec
pop
rcll
cli
lods
dec
and
add
rcrb
sbb
jmp
pushf
xchg
sub
fs
cmpsb
test
int3
sbb
rolb
add
adc
and
sarl
add
dec
jle
add
mov
loopne
rol
mov
cmpsl
shll
jecxz
sbb
xor
pop
fdivp
adc
sub
sbb
movsl
adc
mov
aaa
jno
add
xor
stc
adc
dec
add
cmp
or
and
fnsave
mov
mov
and
ret
mov
aas
cmp
sbb
sbb
cmpsb
add
inc
cld
test
scas
cmp
xchg
out
shll
mov
les
jnp
sub
mov
jno
add
out
jo
cmp
cmp
mov
das
dec
outsb
nop
insb
jl
push
movsl
int3
adc
adc
adc
sub
sbb
push
add
dec
pusha
xor
insl
push
fistps
dec
lock
ja
arpl
or
or
inc
dec
add
jbe
rolb
sbb
aam
pop
jno
loop
test
mov
xor
inc
movsb
cmp
jns
stc
les
xor
cmp
je
add
in
and
sbb
ret
jmp
add
lock
mov
pusha
out
mov
js
iret
out
std
sub
test
sbbb
scas
leave
ds
adc
jmp
mov
or
adc
sub
lcall
add
sub
rcrl
mov
push
mov
push
into
mov
dec
rolb
add
loope
es
add
cmp
clc
adc
into
or
psubusb
push
or
mov
outsl
test
hlt
mov
mov
add
inc
iret
adc
jg
mov
lock
jo
dec
mov
in
inc
idivb
rolb
outsl
inc
xor
sub
fisttpll
sub
les
jnp
dec
divb
mov
push
inc
imul
and
push
adc
add
cld
rorb
lods
nop
add
lret
xor
sbbb
add
cld
mov
push
add
add
mov
adc
xor
inc
and
push
add
add
jl
and
jge
mov
jmp
test
jmp
jecxz
ljmp
mov
sub
negl
cs
les
jbe
xchg
orb
vcvtsd2usi
and
dec
mov
test
or
and
in
jno
add
jmp
pop
sub
add
scas
les
nop
loope
out
jo
test
add
push
xlat
psubq
and
loopne
js
shlb
cmp
jno
pop
cmp
fmulp
rol
lods
and
adc
push
add
xor
test
lods
mov
cwtl
pop
push
sbb
or
jg
ds
cmp
outsl
xchg
test
add
inc
inc
mov
mov
fs
push
pop
adc
sti
add
pop
pop
xor
inc
and
mov
stc
or
es
fsts
js
jns
and
dec
inc
push
les
and
xor
mov
cli
add
xchg
out
add
xor
imul
inc
lea
int3
jge
pop
adc
sarb
ja
mov
xor
ficoms
imulb
sub
adc
jl
imul
push
arpl
or
fs
xor
hlt
or
jle
xor
loopne
add
push
adc
addr16
adc
xor
add
xchg
pop
dec
mov
xchg
or
cmpb
cmp
cltd
out
andb
mov
or
mov
aam
jl
adc
gs
add
cmp
movsb
add
inc
loope
adc
out
dec
orb
test
mov
xor
shrl
mov
nop
dec
fcoml
add
mov
cmp
shrb
inc
add
xor
mov
rolb
add
ss
or
pusha
inc
mov
xchg
push
ja
sbb
lds
test
lcall
pop
lea
mov
aas
push
out
push
dec
in
rolb
push
test
rclb
inc
pushf
scas
mov
push
in
sub
addr16
into
dec
dec
jbe
sbb
call
dec
add
loope
jb
fldcw
and
pop
mov
pop
sub
xchg
int
clc
add
inc
push
mov
rclb
fadds
sub
mov
test
jmp
xchg
jo
in
add
int3
js
jge
cwtl
js
fidivs
mov
arpl
jge
js
sarb
and
mov
cwtl
add
imul
push
mov
jb
nop
sub
dec
insb
pop
cmp
dec
cltd
imul
dec
ficomps
ficoml
cmp
fs
and
push
pop
adc
fcomp
and
jo
fs
shlb
lea
cmpsb
movsb
repnz
mov
cmp
sahf
shr
pop
movb
cwtl
lcall
inc
and
sbb
xchg
imulb
adc
sub
lahf
and
daa
jo
adc
mov
sbb
insb
pusha
and
aam
fsubl
xchg
sbb
sbb
jo
ficoms
xchg
movb
sbb
mov
push
ds
push
mov
add
pop
mov
iret
test
test
jno
sbb
sbb
mov
and
mov
push
imul
mov
nop
pop
xorb
mov
cmc
test
or
shlb
jmp
pop
sbb
roll
jle
cmp
adc
mov
cmp
rolb
sub
inc
push
add
and
ss
xor
dec
enter
testl
aaa
add
cld
xor
addr16
push
xchg
mov
loopne
movsb
pushf
fstps
scas
add
xchg
jl
insl
sahf
adc
mov
lods
call
jne
mov
test
xor
imul
pop
mov
jp
sub
sbbb
add
shlb
ljmp
addl
xor
pop
loop
push
fs
cmc
and
mov
pop
jns
add
punpckhwd
pushf
or
cs
cmp
inc
mov
mov
gs
cwtl
test
shlb
bound
xor
imul
lret
lods
or
fmull
push
nop
add
mov
cwtl
xor
imul
dec
clc
adc
ds
xchg
mov
ret
enter
adc
bound
xchg
cmpsl
add
jg
mov
push
popl
icebp
mov
pop
mov
das
adc
dec
test
ret
mov
aas
icebp
xor
arpl
es
pop
sbb
lock
lods
mov
imul
add
pop
test
jns
iret
pop
fistpl
js
or
mov
loope
sbb
or
insl
cld
add
adc
adcb
lock
icebp
cmp
out
outsb
pop
mov
inc
rcrb
lds
adc
cmpl
lock
push
cmp
cmpsb
sbb
jb
stc
inc
cwtl
fnstenv
mov
add
and
dec
rcrb
insl
cmc
push
fsubr
adc
js
adc
mov
cmpsb
int3
fnstsw
dec
pop
imul
jmp
mov
bound
pop
cmpsb
push
into
mov
sarl
mov
pop
fpatan
add
push
or
jnp
repnz
cmp
adc
add
and
cmpsb
mov
in
xor
add
jns
cmpsl
pusha
mov
inc
cwtl
add
dec
jne
adc
je,pt
xlat
mov
cmp
pushf
add
pop
bound
or
pop
cmp
mov
push
add
aam
push
ret
aad
add
fidivl
cltd
movsb
push
mov
lahf
cld
add
push
adc
ds
negl
cmp
les
add
hlt
cmp
mov
cmpsb
add
jo
mov
add
mull
mov
adc
cwtl
fs
addr16
cmp
xchg
js
outsl
sub
adc
scas
aam
push
int3
leave
jge
lret
pop
sbbb
pop
push
mov
test
loopne
adc
ljmp
xchg
testl
sbb
and
repz
arpl
lods
pusha
mov
or
add
sub
cmp
dec
xchg
and
loopne
lods
mov
sub
rcl
clc
inc
xlat
fwait
out
mov
mov
xchg
push
mov
fcomps
insl
adc
int3
push
test
pop
mov
sub
push
cltd
jb
or
cwtl
mov
add
in
mov
ljmp
cmp
mov
aad
add
jno
ret
int
ds
or
shrb
bound
jnp
pusha
mov
mov
xchg
inc
and
out
out
std
push
xor
mull
aam
test
cli
mov
fs
test
in
int
cmp
push
push
cmpsb
enter
cmp
call
into
xor
test
pop
iret
add
add
insl
outsb
movsl
call
sbb
xor
mov
xor
and
cmpsl
add
sti
push
je
inc
loope
ret
inc
in
sub
in
incb
sub
mov
sub
in
pop
movsb
pop
filds
mov
xchg
dec
ljmp
pop
iret
xchg
mov
je
push
test
inc
adc
mov
push
xchg
insb
inc
cmp
rorl
push
lret
or
jl
jle
mov
aam
cwtl
push
leave
add
lods
sbb
adc
push
test
in
pop
ja
mov
xor
addb
lea
lret
xchg
inc
mov
js
jp
cmp
mov
dec
sub
inc
lahf
pop
fdivrs
insl
push
pop
add
adc
hlt
add
shlb
rcrb
add
outsl
loope
ret
dec
xchg
jns
adc
push
and
pop
addl
jbe
jp
gs
push
jbe
add
mov
xor
add
lea
insb
add
cmpsl
add
movsb
pop
cwtl
add
ret
push
add
jae
mov
mov
push
aaa
fsubrs
ret
and
andb
das
jae
nop
push
shl
add
sarb
xchg
mov
adc
and
enter
mov
loop
fucomip
push
loopne
mov
add
gs
scas
dec
adc
fcompl
pop
pop
lock
pop
push
insl
inc
xchg
lods
pop
or
cmpsb
test
pusha
mov
test
int
sub
push
in
jge
cwtl
sahf
add
outsb
sbb
sub
int
filds
inc
mov
jae
leavew
stos
sbb
in
jne
cmp
adc
jns
add
inc
lods
fs
and
add
push
mov
les
lds
inc
xor
xor
pop
jb
pop
xor
add
test
test
push
inc
push
imul
shrl
xor
adc
or
daa
xchg
push
and
adc
jp
cmp
add
bound
and
add
xor
pop
pop
fadds
das
fcomi
cmp
insb
xchg
cmp
mov
aaa
sub
fsubrl
adc
inc
subl
xchg
outsb
add
inc
xchg
fsubrs
cmp
jns
ficompl
xchg
movsl
adc
fsubrs
and
xchg
mov
mov
test
adc
and
xor
push
addr16
mov
pusha
es
sub
incl
adc
jno
je
fsts
mov
lcall
lock
or
pop
xchg
in
mov
mov
xchg
add
sub
mov
pop
and
jno
or
dec
sub
and
inc
loopne
cmpsl
or
push
pop
bound
imul
pop
mov
daa
and
lods
inc
mov
nop
mov
adc
jp
add
cmp
popa
mov
adc
outsl
dec
jo
bound
xorb
xor
insb
aam
dec
das
sarb
mov
shlb
adc
jb
imul
cmp
sub
pop
add
adc
idivl
add
or
mov
and
nop
dec
xor
into
mov
ret
shrl
mov
in
jno
and
setne
sub
fadds
jb
pop
mov
mov
jmp
add
and
in
fists
add
imul
cmp
nop
pop
xchg
enter
mov
mov
lods
int
xchg
sbb
inc
jo
shrb
pop
inc
inc
aas
sub
fucomp
pop
shll
adc
pop
loope
inc
or
bound
dec
cld
inc
xchg
clc
nop
arpl
mov
insb
or
nop
xor
scas
add
cs
sub
or
iret
not
cld
aam
jnp
ss
repz
lahf
mov
or
clc
xor
add
test
sub
mov
adcb
add
sbb
stos
add
into
push
daa
push
adc
enter
lock
daa
jmp
ljmp
xor
aas
cmp
call
mov
jl
add
jno
add
add
adcb
insb
call
enter
les
fs
xchg
mov
std
sub
mov
out
xchg
lock
or
rep
rcll
add
xchg
rcll
or
pushf
rcr
adc
les
out
push
mov
push
xor
fdivp
add
insb
xor
sub
jne
sub
adc
and
outsl
sbb
std
and
mov
mov
dec
pop
cmp
loopne
dec
adcb
fwait
dec
daa
lea
fdivrl
add
jl
jae
jle
mov
inc
lahf
or
lahf
pop
aam
sbb
into
xor
popf
punpcklbw
fildl
test
adc
pop
inc
js
dec
outsb
in
dec
add
cmp
and
movsl
nop
adc
hlt
add
sbb
inc
add
mov
call
cmpsb
popf
mov
movsb
adc
inc
pusha
es
ret
inc
loopne,pn
and
xlat
add
insl
push
xchg
and
add
jle
loope
mov
add
popf
xor
add
test
or
inc
into
jo
subl
add
aad
sbb
imul
subb
and
mov
ds
dec
inc
ret
mov
enter
jns
mov
jae
add
pop
mov
daa
into
mov
add
or
ljmp
push
repnz
add
popa
fistps
aad
sub
addr16
pop
xor
and
push
in
js
ja
xchg
jo
jl
pop
mov
lock
loope
xchg
add
sbb
dec
jecxz
jno
adc
push
xchg
mov
mov
dec
dec
mov
push
mov
cmp
push
fidivs
cmpsl
push
cli
mov
jno
cs
jl
sbb
sub
sti
in
call
push
nop
test
and
adc
popf
lret
shrl
dec
stc
sub
pop
xor
adc
call
pop
movsb
fsubs
xor
push
fsubs
rcrl
inc
leave
or
mov
mov
adc
push
pop
enter
dec
push
fsubs
bound
mov
sbb
jl
scas
mov
sub
adc
jl
sbb
adc
jl
push
leave
loopne
repz
pop
test
pop
push
nop
in
add
or
jl
mov
sub
pop
sti
mov
xor
adc
stos
test
add
neg
lret
shlb
jmp
or
fnstsw
and
sbb
sbb
in
pop
scas
mov
add
rcrl
add
add
lret
repz
or
shl
jnp
or
add
les
adcb
nop
push
rorb
in
ds
movsl
arpl
aad
hlt
inc
mov
dec
pop
and
adc
cmp
movsb
dec
dec
int3
mov
scas
addr16
outsl
call
insb
and
and
xchg
inc
arpl
xor
call
lds
std
inc
into
popa
pushf
nop
or
stos
js
mov
add
push
mov
push
lahf
pop
xor
loopne
mov
add
xor
lds
add
adc
dec
rclb
stc
xor
mov
push
lds
or
adc
jecxz
add
lods
test
addr16
andb
clc
cmp
sbb
and
int3
movsb
jl
shlb
fisttpll
or
add
mov
cmp
mov
in
sbb
ret
and
inc
xor
adc
into
push
nop
loopne
stc
add
insb
aam
add
xorl
loopne
xlat
in
inc
aas
leave
add
push
sahf
mov
mov
xchg
pop
mov
ret
jne
add
mov
jg
xor
addr16
in
jno
fcmovnu
repnz
sahf
shrl
adc
movsb
and
sbb
jns
shlb
rcll
push
mov
cmp
mov
mov
adc
jo
cmp
outsl
or
in
shrl
xlat
inc
add
mov
mov
sub
lcall
lock
ljmp
and
adc
jns
pop
fadd
jo
and
and
sbb
or
hlt
rorb
add
jp
call
insb
adc
push
push
or
cld
mov
mov
stos
popf
fisubrl
xor
addb
lret
cmpsl
dec
mov
pop
cmp
rcll
jae
inc
adc
mov
out
pop
fwait
icebp
sub
roll
testb
inc
and
in
jns
nop
cmp
scas
mov
insl
mov
cmp
add
loopne
adc
insl
sub
jecxz
and
and
das
fmull
lret
xchg
jecxz
sbb
je
js
clc
test
sbb
lcall
push
scas
loop
add
mov
aas
sub
pop
int3
dec
jae
add
add
jmp
xchg
aaa
sbb
outsb
cltd
mov
sar
add
sbb
ret
xchg
orb
gs
sbb
and
mov
ret
mov
mov
orb
int3
daa
lods
add
orl
ret
push
stc
push
cmp
lcall
leave
rcrb
mov
xchg
repz
aam
data16
push
aaa
dec
ficompl
lock
mov
cltd
cmp
sbb
in
inc
int3
xchg
popa
adc
or
and
nop
sti
rcrb
adc
sbb
lahf
inc
insb
mov
xlat
addl
icebp
xchg
add
popl
cmp
adc
pop
push
adc
outsl
sub
adc
lret
jge
sbb
aaa
enter
nop
push
scas
mov
sbb
out
dec
add
std
jb
andl
jle
add
or
xchg
add
cli
dec
in
adc
add
jp
aaa
push
dec
addr16
shlb
push
and
xlat
out
push
ret
xor
andb
adc
hlt
inc
outsb
or
aam
dec
loope
xchg
xorl
movsb
sbb
push
sbbb
xor
mov
sqrtps
jnp
fs
push
sub
sbb
xlat
xor
cmp
pop
pop
push
imulb
pop
jmp
lock
jge
adc
in
cmp
jae
out
sbb
std
inc
ljmp
test
lock
insl
xor
pop
movsb
imul
cmp
xchg
add
push
mov
jle
jl
xor
int
ret
or
pushf
mov
add
push
and
and
fs
inc
ret
or
pop
add
sbb
sub
int3
ret
pop
icebp
and
jo
popf
test
jnp
sub
and
daa
aam
ja
push
into
push
cmc
xor
xor
and
fcmovb
insb
sti
mov
shrl
ficomps
data16
adc
arpl
adc
stos
in
imul
and
add
dec
jne
mov
addr16
sbb
add
or
or
sahf
out
add
add
fmuls
mov
mov
inc
fcmove
adc
sbb
fs
adc
push
mov
add
adc
pop
jns
jl
or
mov
stc
fiaddl
mov
stc
sbb
dec
cli
pop
or
mov
adc
and
add
push
test
insb
push
cwtl
or
sub
cmpl
in
adc
es
sbb
gs
aad
or
pop
add
fisubl
dec
je
stos
into
test
sub
pop
mov
aaa
inc
call
pop
lcall
fwait
repz
xor
loop
or
test
mov
mov
insb
add
outsb
pop
subb
aam
shlb
cmp
sbb
add
pusha
pop
xchg
daa
std
in
pop
xchg
rorb
inc
nop
cwtl
pop
les
mov
mov
dec
mov
ficomps
insl
shlb
outsl
icebp
roll
sarb
adc
push
das
sbb
repnz
fs
inc
cld
mov
mov
or
mov
pop
scas
int3
roll
ja
outsb
cmp
shrl
inc
xchg
outsl
or
adc
and
xchg
mov
dec
fsubr
cli
fstpl
mov
sbbl
mov
and
adc
sub
stc
add
out
icebp
testl
pusha
xchg
inc
add
fnstcw
dec
sub
mov
out
sub
sbb
add
ret
fcmovnb
xchg
adc
add
inc
call
add
sub
sub
nop
ljmp
fstpl
mov
popa
add
adc
inc
ss
cmp
mov
jle
mov
lcall
add
scas
mov
add
das
push
int
pop
sbb
xchg
inc
loope
dec
mov
rcrb
push
roll
sti
fwait
push
outsb
or
testl
adc
test
arpl
js
punpckldq
xor
pop
mov
xchg
sbb
mov
mov
int3
mov
out
inc
jmp
cmpb
adc
sbb
or
adc
stos
or
sub
cltd
inc
or
test
adc
dec
fdivl
cld
sbb
iret
fldcw
out
test
pop
add
cs
lea
rclb
inc
lock
inc
mov
test
push
pop
shlb
add
mov
loop
dec
inc
and
pop
testb
jle
pop
insl
mov
add
cmp
lds
ljmp
or
movsb
xchg
mov
pop
imul
aam
sbb
push
das
jb
mov
mov
adc
pop
loopne
mov
adc
mov
sbb
adc
aad
mov
mov
into
sbb
aad
sub
test
push
cmp
outsl
imul
adc
in
enter
test
or
jge
mov
or
imul
push
aaa
adc
lods
push
addb
xchg
icebp
sbbb
xor
dec
insb
andl
push
cmpsb
pushf
dec
inc
mov
test
cmp
inc
xor
cld
push
sub
pop
mov
call
mov
adc
xchg
xor
out
pop
mov
push
ss
pop
pusha
pop
jge
lret
sub
jb
rclb
nop
nop
dec
and
mull
or
roll
dec
into
pop
sbb
daa
add
adc
cld
jnp
sub
sub
add
fcmovne
int
rep
out
adc
sub
fdivl
sbb
push
out
stos
inc
loopne
rcl
cmp
adc
adc
or
dec
call
xor
fwait
bound
mov
adc
cmpsl
test
dec
movsb
xor
dec
and
add
push
push
mov
pop
arpl
add
pop
fwait
jg
dec
clc
xchg
add
rorb
add
add
push
add
ret
notl
and
outsl
lods
inc
loopne
repz
add
cli
sub
jmp
inc
jae
test
xchg
inc
jl
inc
and
sbb
hlt
not
cmpsl
imul
inc
pop
sbbb
dec
test
cmc
sub
lods
inc
mov
into
add
xor
rcrl
and
pop
mov
pop
add
loope
mov
add
xlat
pop
std
and
ss
adc
addb
out
in
mov
mov
xchg
cmp
mul
add
ret
jae
sub
jecxz
pushf
leave
jp
rorl
mov
shll
stos
xchg
mov
adc
sbb
xor
or
xchg
cmp
test
lea
aaa
adc
fld
pusha
add
shrl
sarb
scas
mov
sub
xchg
xchg
add
cli
pop
insl
push
mov
lret
lds
jnp
fisttps
data16
cmp
lods
bound
cwtl
test
imul
jp
fbstp
js
and
jo
lods
dec
call
adc
les
adc
fistpll
leave
or
stc
inc
push
shr
mov
ss
ffreep
pop
mov
inc
je
jmp
xor
xor
jnp
jg
or
lock
sahf
dec
inc
mov
outsb
sub
into
inc
add
jb
addr16
xor
push
ret
outsl
mov
loop
jl
xchg
test
jle
jge
and
ret
test
push
and
pusha
add
hlt
add
cmp
fisubrl
lahf
and
mov
ret
push
add
fucomip
push
add
inc
popf
int
sbb
inc
cmp
jo
xchg
stos
mov
inc
mov
inc
push
adc
xlat
mov
ss
rclb
inc
out
cmp
mov
adc
imul
aas
jns
cltd
push
mov
jne
dec
add
and
inc
add
jo
xchg
outsl
std
aam
repz
jno
imul
sub
les
inc
sahf
push
mov
jle
shlb
mov
hlt
call
add
imul
ds
or
sbb
and
pusha
filds
adcl
lods
dec
xchg
lock
or
daa
inc
ja
inc
push
lahf
cmp
and
bound
inc
adc
and
sub
xchg
pop
popa
call
mov
data16
insb
vpsubusw
cltd
addb
push
in
or
lods
arpl
mov
push
or
ret
jno
add
call
aam
mov
scas
addb
mov
pusha
out
outsb
test
sub
inc
pop
repz
std
xlat
mov
jo
sbb
cmp
lods
push
and
les
and
inc
mov
sub
pushl
imul
mov
add
xchg
pop
nop
cmp
das
mov
rcll
xchg
inc
hlt
mov
cmp
adc
add
into
add
add
jae
jl
mov
xlat
adc
sub
std
outsl
xchg
cli
sbb
ret
cmpsl
imul
push
mov
mov
mov
sbb
leave
inc
aad
cmp
lret
and
adc
test
test
inc
insb
push
and
call
punpcklbw
pop
push
sbb
push
mov
xchg
fdivrs
push
push
aas
mov
sub
hlt
loop
ja
sub
enter
lock
cli
sbb
sbbb
leave
das
repz
push
pusha
icebp
in
iret
fs
fidivl
adc
jl
mov
les
jne
push
cwtl
add
mov
out
jecxz
and
xor
aaa
inc
xor
ja
scas
insl
iret
and
gs
xlat
movzbl
cmp
jmp
cmp
sbb
inc
loopne
rcr
add
mov
sti
add
arpl
inc
and
aaa
iret
cmp
das
rclb
js
inc
push
setb
push
mov
mov
mov
adc
jl
add
lock
mov
jb
andb
mov
dec
add
test
cmp
and
add
movsl
push
jmp
mov
add
inc
xor
popa
add
lods
inc
push
pop
out
add
leave
iret
loope
lret
aas
jae
mov
rorb
fdivr
mov
test
aas
mov
add
aas
das
adc
rorb
js
jb
sar
jle
mov
adc
xor
js
in
rcrb
mov
sub
outsb
popa
ret
push
xor
fcoms
mov
cmpb
inc
and
bound
int
mov
or
xor
or
test
pusha
aad
loopne
add
fsubs
jae
add
push
inc
xor
mov
adc
mov
xchg
sbb
or
mov
and
pusha
daa
into
xchg
push
inc
test
add
ficoms
jno
sub
fbstp
dec
enter
scas
je
inc
inc
mov
mov
cmp
add
shrb
and
pop
cli
add
iret
xor
mov
jge
mov
hlt
inc
cmpsb
cmp
mov
xchg
cli
add
shr
add
adc
ret
push
ljmp
lea
inc
pop
inc
nop
add
xor
in
ljmp
sub
mov
je
xchg
jl
sbb
dec
les
or
adc
push
les
cmp
sub
mov
jg
pusha
xor
mov
push
jp
movsb
shl
sbb
loopne
or
stc
add
mov
lret
shr
mov
push
xor
ja
adc
ret
add
cmc
fldl
cmp
and
aam
add
fcoml
mov
call
add
push
push
xor
sbb
std
xor
or
xor
mov
popa
imul
or
jno
sahf
push
repnz
pop
dec
add
mov
aaa
scas
inc
pop
mov
lods
mov
dec
mov
jle
sub
ljmp
xorb
pop
jb
or
or
xor
flds
aas
mov
xor
and
cmp
or
lret
lcall
xor
push
lret
jno
pop
add
push
jge
stc
pop
mov
xor
inc
sbb
xlat
int
hlt
sbb
gs
adc
mov
stos
daa
dec
xor
sbb
adc
js
and
stos
pop
es
int
jl
insb
mov
jnp
xor
jae
enter
sbb
bound
mov
xor
add
sbbl
imul
and
cmp
dec
ret
or
inc
and
ja
add
fsubrs
cmp
shll
xchg
cmp
xchg
inc
mov
dec
fadds
or
dec
cmp
xor
push
pop
and
adc
sub
add
in
lock
and
cmpsb
jl
fcoms
sub
adc
shl
add
dec
pop
and
or
cmp
inc
sub
test
adc
adc
xchg
mov
outsb
test
add
addb
or
adc
subl
xor
fiadds
inc
xchg
add
ret
fdivs
jne
add
push
jp
test
aam
jle
fs
pop
out
push
mov
mull
ret
mov
and
pop
dec
adc
inc
test
jp
nop
xor
inc
push
inc
cmp
push
out
les
and
clc
push
test
mov
pop
add
pop
push
adcb
adc
inc
xchg
add
lods
dec
test
mov
stos
xchg
addl
inc
lret
repnz
popf
and
adc
add
add
int3
or
xor
sub
mov
mov
outsl
mov
push
daa
lret
mov
add
inc
cmp
daa
xchg
cmp
mov
and
mov
mov
cmp
sbb
aas
mov
inc
pop
jb
jae
enter
loopne
or
mov
push
loopne
aad
add
push
inc
loopne
mov
mov
pop
daa
inc
xor
pop
jne
scas
push
inc
and
and
and
push
test
imul
push
nop
sub
ljmp
or
add
clc
movsb
pop
push
call
loope
pop
add
xor
inc
adcb
pop
xorb
imul
pop
or
stc
push
sbb
jecxz
mov
pop
jne
mov
js
inc
test
add
jle
cwtl
divl
icebp
in
and
or
jnp
mov
push
adc
rcl
iret
push
add
fstpt
lret
xlat
adc
cltd
push
mov
loopne
push
pop
clc
jno
out
push
add
enter
sbb
mov
pop
test
mov
add
aam
out
mov
test
and
pop
xor
or
leave
cltd
dec
arpl
in
pop
add
mov
mov
ror
xor
adc
iret
or
add
sub
ds
stos
add
sub
ret
xor
cmpb
or
pop
std
rol
stc
add
sbb
xchg
mov
xchg
or
pop
ljmp
stc
jmp
iret
pop
sub
push
mov
movsl
addl
cmp
jle
aad
rclb
out
adc
daa
fidivl
xorb
rclb
scas
faddl
testl
or
mov
add
add
test
adcl
in
cmp
ja
mov
mov
jl
mov
test
xchg
imul
add
je
mov
cmp
testb
sub
mov
mov
add
loop
test
pop
mov
faddl
mov
add
pop
dec
repz
in
shll
fildll
mov
sbb
incl
addr16
mov
loopne
movsb
cmp
cmpl
jno
xchg
pop
bound
pop
stos
rclb
nop
inc
pop
mov
cli
xchg
enter
mov
sbb
xorl
fucom
sbb
inc
cmpsl
and
mov
loopne
dec
lret
or
out
cmpsl
imul
decl
pop
pop
hlt
ret
xor
xor
adc
daa
stc
jp
jmp
xor
jecxz
imul
xchg
or
loope
fs
xchg
or
adc
push
mov
lea
push
in
jno
mov
xor
pop
push
mov
pop
mov
jecxz
insb
stos
out
mov
fs
es
popa
bswap
aam
mov
mov
add
mov
or
aas
or
pop
cwtl
fildll
clc
loopne
mov
gs
movsb
movsb
jnp
pusha
fstl
push
std
inc
test
jecxz
add
fs
pop
bnd
pop
sbb
jle
inc
es
cmpsb
inc
fadds
test
add
popf
addr16
cmc
mov
mov
add
xor
in
xor
inc
pop
int3
add
scas
adc
sub
adc
adc
or
add
data16
sbb
loop
aas
add
xor
mov
dec
sbb
pop
in
and
lock
ret
add
insl
test
test
loop
jae
cli
cmp
xchg
test
mov
or
inc
insb
xchg
data16
ficoml
sub
pop
sbb
push
clc
add
aad
sbb
and
std
ljmp
add
jle
pushf
xchg
lea
test
inc
movsl
ljmp
push
mov
shlb
adc
sub
xchg
xchg
in
cmp
movsb
xor
add
pop
cmp
fnstsw
mov
add
pop
ret
mov
fildl
daa
sbb
mov
or
xlat
xchg
fsubrs
add
pop
addb
mov
enter
xchg
dec
pop
mov
jb
rcll
scas
and
lods
loope
push
xor
faddp
fldt
dec
sbb
int3
xchg
inc
mov
mov
cmp
inc
loopne
in
inc
popf
inc
test
out
xchg
movl
mov
mov
das
pop
std
pusha
sbb
sub
jmp
or
mov
testl
test
inc
pop
inc
outsb
ss
or
data16
mov
xor
ret
cli
mov
lahf
sahf
push
or
sub
push
hlt
lds
filds
add
sti
mov
popa
scas
call
mov
mov
or
stos
in
hlt
orb
pop
push
adc
stos
ljmp
pop
imul
push
mov
pop
das
inc
call
push
int3
inc
fwait
cmp
data16
repnz
repz
inc
add
sub
pusha
sahf
pop
negb
andb
mov
sahf
and
std
ret
mov
inc
and
add
in
sub
cli
adc
dec
pop
clc
dec
sbb
xchg
test
test
or
push
add
add
xor
cld
addr16
cmp
fldl
test
addb
mov
add
xor
fwait
xlat
mov
in
add
arpl
adc
in
mov
rolb
sbb
mov
pop
sti
xorb
sub
lahf
stos
sbb
test
iret
jnp
sub
push
dec
test
add
popa
mov
sub
and
dec
mov
add
enter
or
mov
xchg
jo
pop
pop
pop
and
or
clc
inc
add
cwtl
cmp
push
aaa
stos
movsb
sbb
jno
enter
xchg
xor
cmc
mov
or
mov
or
fnstcw
or
push
shrl
dec
and
ret
adcl
mov
pop
ret
outsb
jo
cli
cmpsb
hlt
dec
cmp
idivb
mov
add
icebp
pop
rcrb
add
sti
rol
and
clc
in
jge
mov
ljmp
std
pop
jbe
sti
aas
cmp
sbb
leave
rcrl
lock
mov
fimull
xor
cwtl
inc
dec
dec
xor
fneni(8087
andl
pusha
pop
cmp
gs
adcb
in
xchg
sahf
add
sbb
in
fistps
divl
fwait
push
mov
rol
adc
xchg
push
jo
andl
call
add
lahf
fs
sbb
jbe
sub
dec
pop
push
into
add
inc
cmpl
je
clc
jge
inc
push
xchg
jg
adc
mov
dec
add
xchg
in
divb
nop
fisubs
roll
inc
test
mov
jl
xorl
jge
jno
nop
loopne
enter
dec
add
dec
pop
mov
push
loop
or
incb
ss
add
xor
out
popl
pop
repz
adc
sbb
inc
add
xchg
fldt
lret
pop
test
fsubrs
lods
sub
shll
nop
in
lods
fs
xlat
mov
in
inc
mov
and
lock
aad
inc
mov
rcr
or
nop
inc
arpl
jbe
sar
rclb
adc
pop
pop
jecxz
add
fbld
push
rcr
je
cli
lcall
xchg
sub
clc
add
mov
fcmovnb
xchg
pop
dec
dec
loop
add
popa
ljmp
mov
mov
bound
repz
or
mov
mov
dec
lods
loopne
neg
xchg
push
pushf
mov
add
lds
inc
test
inc
add
add
inc
imul
addb
or
fadds
add
cs
ds
test
pop
and
mov
mov
jae
adc
clc
stos
in
mov
cmpb
lcall
xor
out
enter
sub
enter
add
push
pop
cmp
addr16
mov
cmp
dec
add
add
mov
mov
pop
mov
sub
enter
sub
fsts
push
and
rcrb
pop
addr16
mov
add
outsl
push
pop
sbb
adc
call
add
mov
shlb
xor
lds
sbb
inc
jo
or
fbld
stos
xchg
in
js
lcall
adc
andb
sub
sbb
cli
pop
adc
pushf
add
xchg
lea
add
int3
dec
aaa
arpl
and
add
orb
jns
sub
xor
cmp
mov
dec
cmp
adc
cmpsb
pop
pop
jo
xor
push
inc
pop
enter
mov
or
xchg
mov
mov
bound
sarb
or
je
stos
arpl
stos
out
xor
lods
dec
outsl
dec
shrl
push
cli
stc
mov
pop
jae
dec
xor
add
movsb
cli
cld
add
lods
cltd
pop
sub
xor
ja
xchg
movsb
inc
outsl
jecxz
aas
icebp
mov
mov
inc
mov
ret
jle
inc
pop
add
dec
test
arpl
xor
int3
in
enter
and
insb
inc
xchg
in
xchg
push
add
dec
mov
mov
lea
adc
sbb
mov
inc
enter
ljmp
jg
pop
mov
pop
mov
adc
mov
cmp
pop
inc
push
call
pop
and
xor
mov
mov
jmp
mov
shufps
arpl
xor
test
lods
sub
add
add
roll
or
les
xchg
mov
jno
lret
or
add
jge
jmp
shr
scas
adc
fmull
popf
push
mov
mov
jp
or
cmp
negb
imul
inc
orb
fcomps
flds
outsl
hlt
xorb
in
call
add
inc
int
scas
mov
nop
cmp
out
inc
int3
push
test
roll
in
xchg
inc
push
mov
mul
gs
into
loope
fmuls
adc
inc
jp
pop
int3
fimull
pusha
sahf
fdivrp
push
jae
clc
out
sbb
lret
xchg
xor
enter
stos
jmp
inc
sti
mov
or
jbe
popa
sbb
iret
addb
ficomps
push
inc
mov
aaa
lahf
movsl
lock
enter
arpl
xor
cmp
xor
lods
add
ss
in
addr16
sbb
lock
incl
mov
jbe
mov
or
dec
adc
pop
mov
cmp
inc
or
and
das
roll
call
inc
in
cmp
aaa
add
loopne
mov
je
add
movd
fidivl
sub
shld
cmpsl
push
add
push
add
roll
je
jecxz
stos
sbb
jbe
dec
insl
inc
test
and
int3
iret
loopne
test
add
iret
clc
push
popa
jb
sahf
insb
dec
inc
fadd
int3
jp
or
test
roll
rcll
enter
sub
push
push
adc
and
push
leave
xchg
dec
pusha
inc
mov
jmp
cmpsb
int
cltd
jbe
and
pop
popa
xor
add
mov
mov
xchg
shlb
jl
fidivl
jmp
mov
sbb
add
fmull
mov
mov
sub
test
sbb
shll
push
add
inc
inc
sbb
aam
clc
dec
jb
lock
hlt
sbbl
addr16
pop
rol
inc
mov
pop
adc
icebp
adc
add
in
pusha
cmp
ljmp
aad
xor
cld
add
push
les
int3
mov
add
mov
add
push
jno
xlat
sbb
repz
imul
or
pop
leave
push
mov
add
lret
sub
rorb
mov
xor
jg
jnp
imul
fs
dec
rcl
addr16
or
or
cwtl
jo
adc
outsl
dec
cmp
clc
clc
adc
jne
sbb
rorb
es
sub
xchg
add
cmp
adc
or
add
push
dec
rolb
es
xor
inc
add
stos
or
adc
mov
stc
out
add
loopne
add
push
testb
enter
insb
paddusb
stc
aam
popa
test
mov
mov
inc
push
std
adc
in
call
lahf
xchg
fldt
mov
arpl
adc
inc
pusha
fs
jnp
push
nop
out
fwait
aaa
mov
shll
adc
enter
mov
sub
or
inc
cld
add
add
adc
and
mov
jp
sbb
jbe
leave
pusha
push
push
lods
or
push
daa
loop
add
stos
stc
adc
or
xor
and
ja
enter
std
leave
lea
cmp
in
in
jle
aaa
push
sahf
fsts
imul
loope
out
test
call
xchg
sub
loop
pavgw
add
test
nop
lahf
xchg
es
jo
mov
xlat
ljmp
insl
dec
and
inc
aaa
iret
popa
andb
add
outsl
popf
add
arpl
jg
adc
push
adc
pop
mov
ss
subl
dec
and
orb
and
push
cmpb
test
xor
aad
std
mov
pushf
mov
inc
lods
sbb
mov
add
into
mov
imul
cwtl
rorl
cmp
push
stos
cmc
mov
cltd
xchg
jnp
mov
or
add
sbb
dec
or
aaa
push
add
movsb
popf
push
orb
cmpb
add
inc
rorl
jle
push
mov
inc
in
mov
mov
movsb
xchg
or
ret
adc
adc
add
mov
lcall
add
and
addb
repz
fistps
fs
or
test
push
inc
out
adc
pop
mov
xchg
sbbl
inc
push
fcomps
dec
add
cmp
inc
jno
dec
or
movsb
test
repz
test
push
cltd
add
les
call
cwtl
mov
xor
lock
xor
popf
inc
pop
inc
push
out
ror
mov
fcoml
mov
imul
jo
enter
inc
pop
cmpsb
add
sar
mov
inc
or
call
or
sbb
hlt
imul
pop
clc
adc
aas
mov
aad
lret
outsl
enter
mov
mov
lret
mov
bound
push
sti
xchg
cld
ljmp
mov
mov
xor
inc
int
js
add
push
adc
int3
add
jmp
mov
inc
xchg
arpl
loop
push
testb
or
adc
push
insl
lahf
mov
arpl
adc
dec
xchg
enter
arpl
lret
and
scas
dec
cmp
xchg
xchg
sub
fstl
ss
mov
push
and
add
add
in
std
add
in
mov
cmp
bound
imul
xchg
mov
pop
inc
lock
or
leave
pop
and
stc
inc
adc
xor
cmpsl
add
adc
add
stos
pop
and
xchg
popa
add
scas
and
adc
enter
or
xor
add
stc
xchg
hlt
repnz
int3
cmp
je
testb
xor
inc
and
aam
rcrb
adc
mov
clc
popa
inc
aas
add
sahf
or
icebp
dec
xor
pop
adc
mov
xchg
int
mov
popf
jle
pop
pusha
and
loop
fs
add
sti
cmpl
insb
lcall
or
enter
loopne
xchg
or
cmpl
testb
cmc
cwtl
aam
mov
outsl
dec
and
mov
add
sub
lret
mov
pop
ss
lea
loop
jecxz
mov
pop
pop
jecxz
dec
pop
sub
rorl
cmp
out
sti
ret
jmp
shrl
sub
dec
and
and
pop
and
imul
test
sub
mov
sbb
loop
sbb
scas
cmpsb
mov
cmp
in
iret
xchg
pop
sub
ror
jmp
mov
fmull
jecxz
leave
add
xlat
pushf
jbe
dec
inc
jl
mov
faddl
xor
rolb
out
jp
out
int
rolb
jbe
mov
into
add
iret
das
inc
inc
mov
inc
xor
push
push
cmp
cmpsb
add
std
and
mov
dec
xor
add
lcall
sub
dec
mov
decl
jmp
mov
imul
push
add
neg
fistl
rclb
sub
test
fisttps
xor
pop
std
adc
repnz
dec
in
hlt
hlt
and
add
xchg
xor
out
imul
add
popa
lds
sub
je
lods
cmp
cmpsl
or
das
push
add
test
and
mov
addr16
jmp
and
and
push
cli
aaa
aas
add
jno
aas
pop
push
scas
or
mov
sbb
repz
dec
sti
iret
adc
xor
or
in
insl
and
pop
imul
xor
out
shll
mov
add
in
pop
lahf
fucomi
pusha
out
cmp
jle
lret
push
sahf
movsb
nop
inc
add
adc
std
vucomiss
add
js
stos
jns
dec
jg
adc
adc
push
pop
popa
sahf
jecxz
outsl
pop
or
add
xchg
cwtl
sub
addr16
add
ret
scas
int
int3
mov
leave
popf
test
add
or
into
daa
mov
jp
add
mov
jecxz
jnp
call
xor
cmc
sub
insb
sub
jne
jb
call
test
repnz
add
sahf
ja
jns
push
and
clc
fadds
mov
mov
fcoml
shlb
and
sbb
adc
add
mov
add
test
cltd
jmp
jnp
cmp
movsb
adc
out
cmpsl
xchg
xchg
outsb
push
xlat
rclb
lcall
testl
xlat
dec
pop
mov
gs
arpl
sbb
addb
cmpb
cmp
inc
lods
sti
adc
xchg
test
gs
faddl
lret
add
bound
scas
and
inc
ds
aaa
fisttpll
xchg
xor
mov
fildll
out
int3
mov
scas
mov
or
adcl
xor
out
orl
sub
loopne
jp
jbe
jnp
add
lret
adc
andb
adc
jmp
cli
inc
lret
add
mov
push
inc
nop
jno
dec
enter
lret
mov
or
rcll
cmp
movsl
lret
fisubl
pushf
test
ja
inc
mov
call
jae
add
roll
xor
add
and
push
add
rcl
adc
int3
fadds
or
mov
or
add
add
fdivrl
inc
sub
je
adc
in
lea
arpl
dec
sub
inc
add
sbb
cmp
mov
mov
stos
adc
or
cmp
loope
or
and
xchg
and
add
sbb
mov
xchg
or
dec
xor
xchg
rorl
bound
fldl
bound
add
jns
adc
jnp
rolb
ljmp
rcrb
add
repz
mov
add
or
add
pop
xor
add
xchg
inc
fdivrl
rolb
test
cwtl
mov
xor
fdivl
faddl
outsb
insb
add
ds
mov
push
roll
add
pop
mov
cli
or
test
jns
adc
inc
test
xchg
pop
mov
mov
sub
scas
nop
pop
add
xor
clc
adc
insl
push
sti
mov
call
inc
dec
sbb
dec
js
mov
mov
iret
add
imul
adc
or
pop
mov
aas
push
add
xchg
popa
ljmp
mov
loop
int3
push
add
pop
test
pop
sti
ljmp
or
push
andl
jl
int
add
lahf
repz
jmp
adc
push
pop
std
dec
dec
and
in
add
ja
add
sub
push
adc
jbe
les
push
adcb
add
jg
xchg
cmp
cld
add
rcrb
bound
movl
popl
push
inc
outsl
jae
leave
or
arpl
popa
imul
fcomi
addr16
jb
daa
int
jae
push
add
jae
mov
rorb
cmpsb
mov
decl
in
inc
push
mov
or
fcompl
adc
and
mov
in
and
movsl
gs
loope
add
js
pusha
lahf
inc
mov
insl
movsl
mov
add
xchg
dec
dec
or
and
nop
pusha
adc
add
xlat
movsl
pop
xor
adc
inc
xor
clc
mov
int
add
rorl
inc
call
cld
push
mov
pop
outsl
xor
rolb
or
add
test
push
and
xchg
pop
push
call
psrld
sbb
mov
cmp
and
imul
push
inc
in
rolb
jecxz
pop
xchg
dec
enter
push
add
inc
and
mov
xchg
push
jns
mov
js
jmp
mov
cmp
fists
mov
dec
bound
out
sarl
cli
in
cmpsb
mov
daa
inc
add
sbb
shlb
xor
xor
adc
push
adc
insl
pop
xchg
les
add
cmp
out
add
sub
push
and
add
les
iret
pop
andb
bound
pop
pop
sub
push
xor
add
ret
in
xchg
outsl
dec
add
popa
xchg
sbb
dec
cli
dec
pop
arpl
gs
mov
add
mov
ss
out
add
cld
cmp
flds
movsl
push
add
test
scas
pop
fwait
sti
enter
fiaddl
out
dec
fdivr
arpl
sbb
fldenv
sti
dec
xor
cmp
lods
aas
mov
outsb
xor
fsubl
add
pop
rorb
xchg
pop
stos
jo
imul
out
xor
sub
mov
push
adc
push
inc
cmpsl
jns
shll
in
jb
rolb
sbb
jecxz
scas
outsl
xchg
fmull
pop
leave
addr16
ret
inc
das
push
pop
xor
lods
js
imul
dec
or
in
orb
pop
daa
or
add
xchg
andl
add
mov
out
inc
je
add
mov
dec
pushf
enter
add
xchg
add
sub
ljmp
xorl
and
popa
bound
test
fs
ljmp
and
adc
dec
xor
fs
add
gs
aad
mov
adc
add
jbe
inc
add
mov
pop
push
mov
pusha
jmp
add
jno
outsb
lods
dec
enter
int3
jo
add
push
stc
pop
inc
fadd
dec
pusha
in
pushf
imul
mov
enter
ja
and
fwait
clc
mov
and
push
mov
dec
add
and
arpl
shll
pop
enter
pop
push
pop
add
mov
jmp
ds
fld
push
xchg
push
sti
test
pop
mov
pushf
testb
iret
pop
push
adc
jle
push
test
hlt
aaa
and
andl
jae
mov
dec
imul
cmp
sub
divl
push
jno
xchg
push
fwait
addb
cmp
add
or
add
mov
ud1
inc
repz
jg
mov
or
push
adc
push
cwtl
pop
inc
cmp
lods
push
test
outsb
sub
or
add
sub
add
insb
pop
pop
mov
cwtl
sbb
inc
cmp
mov
xchg
add
roll
inc
in
adc
push
add
and
or
les
testb
fninit
add
cld
and
pushf
outsl
add
lock
add
stos
or
bound
add
push
dec
shlb
js
lods
sti
and
fcoml
mov
bound
or
test
icebp
lock
std
mov
inc
xchg
lds
enter
sarl
popa
cmp
pop
into
scas
push
jo
aam
int3
adc
rclb
push
ret
addb
adc
js
sbb
pop
add
nop
mov
cs
cmpsb
sub
mov
push
cmp
shlb
imulb
enter
movsb
fcmovnb
nop
movsb
dec
jbe
and
cmp
mov
cmp
mov
cmp
mov
push
push
mov
outsl
sub
push
mov
dec
mov
inc
add
mulb
and
popa
leave
xor
add
pushf
clc
fcmovnbe
add
dec
pop
bound
fdivrs
push
or
fcmovne
push
cmp
subl
add
mov
loope
cmp
test
stc
into
jb
pop
inc
rcll
js
mov
pop
adc
shll
ret
addb
add
popa
out
rcrb
add
push
int
nop
inc
push
enter
pop
push
iret
jnp
movsl
fldenv
dec
popa
inc
imul
push
int3
push
aad
enter
into
jp
sbb
mov
or
inc
push
add
mov
adc
loope
cmp
fs
mov
pop
push
push
dec
push
and
xor
jb
xor
test
ret
out
sarb
push
enter
loop
cmp
push
data16
aam
loopne
mov
xor
movl
in
or
add
lret
mov
cmp
xor
sti
xor
cmp
push
adc
movsl
fisubl
pop
cli
cld
pusha
jo
mov
fisttps
pop
jle
aam
es
or
test
outsb
bound
add
adc
and
xor
sub
insl
or
cli
out
lret
push
cwtl
dec
xchg
inc
pop
mov
je
adc
pop
aam
mov
pop
gs
cwtl
jne,pt
dec
fs
add
nop
fdivrs
or
pop
shr
fisubl
sbb
jle
push
mov
cwtl
inc
cmc
pop
lcall
add
aad
out
out
scas
dec
jo
icebp
add
add
je
mov
pop
popa
push
or
add
dec
scas
mov
cld
fistpl
in
stc
xor
popa
loopne
adc
cmp
xlat
stc
xor
movsb
inc
cmpsl
push
cwtl
push
xchg
add
rorb
data16
pop
jge
add
cmpsb
mov
inc
insl
mov
rcrl
mov
aad
or
or
add
addb
int
ja
push
scas
add
fmulp
pop
ljmp
mov
inc
mov
pop
loope
pop
int3
pop
fs
or
cmp
mov
fsubrl
pop
add
push
scas
in
push
clc
test
sbb
push
sub
out
mov
pop
test
push
sti
in
or
jnp
pop
insb
popl
mov
jg
inc
dec
add
imul
and
pusha
pop
outsb
xchg
add
push
lods
xor
cld
cmpsb
loop
mov
or
push
adc
sub
and
mov
push
insl
into
jo
frstor
cmp
fmul
xchg
pop
pop
int3
adc
inc
jecxz
mov
imul
orl
inc
sbb
mov
push
mov
addb
lahf
inc
fdivl
mov
js
dec
adcb
sbb
sub
imul
push
faddp
add
adc
mov
ljmp
add
or
mov
cmp
shlb
enter
jnp
add
stos
int
imul
and
cmp
pusha
cs
insb
sbb
cmp
shlb
add
and
pusha
inc
lods
addb
cmovno
and
push
xlat
in
lods
push
push
push
add
scas
jnp
adc
adc
mov
cmpl
jge
js
andb
jecxz
add
mov
adc
add
arpl
inc
jae
loopne
in
test
sub
shrb
cmpsb
push
push
dec
inc
xorb
in
xor
imul
sub
inc
inc
lret
jl
out
ds
bound
lea
inc
jo
mov
add
add
popa
or
test
ret
inc
mov
jl
inc
jecxz
add
dec
std
inc
shrl
pop
andb
addl
inc
out
mov
pop
pop
aas
clc
cmp
xchg
outsb
add
out
mov
int3
sbb
xchg
xor
mov
push
add
imul
movsb
aam
nop
sub
inc
bound
xor
js
dec
cli
iret
jnp
cmovno
sbb
pop
pop
fadd
jne
push
pop
test
out
inc
dec
movl
push
inc
das
arpl
fcomps
add
ljmp
incl
xchg
add
sbb
sub
xchg
add
add
add
dec
or
cmp
daa
adc
fsubrl
hlt
mov
inc
mov
jnp
cmp
addb
add
test
jo
pop
mov
test
add
and
pop
inc
add
lret
mov
add
push
pop
loope
rcll
loopne
mov
ret
add
aaa
cld
jmp
or
in
aam
or
push
mov
add
js
les
ret
mov
lods
or
sub
cwtl
imulb
or
stc
add
aas
fs
add
mov
add
cld
mov
or
fcoml
inc
int
loop
adc
int3
cmp
add
sub
popf
add
xchg
inc
lahf
mov
je
add
mov
mov
adc
bound
js
icebp
adc
push
inc
jo
sbb
adc
popa
add
ja
push
xor
add
shll
gs
dec
faddl
xlat
mov
inc
es
jg
sbb
notl
imul
sarl
mov
push
or
aad
out
pop
in
or
adc
mov
cmp
cmc
add
lds
mov
add
shll
sti
bound
jl
inc
and
ds
add
lahf
xor
pop
push
jg
ljmp
iret
xchg
xchg
cmp
cmpsb
cltd
mov
js
fmull
cmp
or
les
pusha
mov
xor
sub
bound
add
sub
fs
jae
dec
adc
pop
jbe
push
pusha
xor
mov
sahf
mov
aas
test
jne
sub
std
inc
movl
mov
test
out
pop
enter
or
idivl
cwtl
nop
mov
dec
dec
dec
rclb
dec
sub
popf
pop
pop
mov
sub
push
das
and
mov
or
pop
out
or
add
sti
mov
dec
insb
inc
pop
movsl
xor
pop
dec
loopne
jbe
xchg
movl
adc
pusha
aas
sti
add
rclb
pushf
vmwrite
repz
sub
sub
mov
inc
inc
mov
sbb
pop
lret
dec
pop
repz
int
sti
out
fisubrl
or
sbb
cwtl
inc
or
jg
or
or
mov
jns
add
cmpsl
sarb
cmp
pop
add
adc
and
clc
mov
iret
mov
into
adc
fdivr
popa
add
adc
mov
pop
xchg
sub
shrb
loopne
push
add
lock
out
rorl
inc
inc
faddl
push
xor
and
xor
push
jl
in
push
andb
pusha
sub
fucomip
cmp
fwait
jge
pop
pop
fmull
mov
xor
xor
add
leave
xorb
mov
inc
nop
inc
xchg
pusha
mov
add
mov
cmp
add
push
divb
push
xchg
rorl
pusha
pop
adc
xchg
loope
jmp
in
in
std
arpl
add
sbb
mull
cmp
les
and
ficoml
imul
cmp
ror
cmpsl
fs
or
call
inc
mov
inc
jmp
xchg
pop
lock
pop
dec
and
ss
mov
pop
fdiv
das
add
frstor
lock
outsb
pop
mov
fldenvs
dec
cmp
ret
lret
mov
movsb
add
mov
add
sbb
ss
mov
add
jae
movsb
sbb
cmp
adc
push
cmp
leave
and
mov
cmp
std
pop
dec
ljmp
add
mov
insb
mov
insb
mov
in
cmp
add
or
inc
adc
dec
or
insb
xor
jns
adc
movsb
adc
insb
shlb
mov
loope
test
or
cmpsl
sub
jne
add
sbb
cmpsl
movb
push
shlb
lock
insl
jae
icebp
dec
add
mov
dec
sbb
cmpsb
movsl
xchg
xchg
sti
pop
ljmp
in
nop
add
cmp
pop
push
ror
add
add
hlt
jne
sbb
pop
add
mov
das
mov
add
pop
xorl
inc
test
sbb
sub
mov
adc
sbb
cld
out
jp
push
cmp
xor
add
mov
cwtl
addb
bound
aas
popf
and
clc
test
add
cmpb
dec
adcl
fistpll
in
enter
jae
aam
and
movsl
cld
mov
sarb
adc
cmp
sub
add
mov
push
rolb
cmp
push
cld
xor
stc
enter
ds
into
xchg
icebp
xor
icebp
add
sarl
movsl
leave
and
dec
push
aam
testl
cmpsl
push
sbb
js
dec
inc
subb
dec
ss
fcomps
add
inc
loope
add
inc
fldenv
das
out
and
add
xor
pop
dec
xor
and
adcb
push
lcall
rorb
inc
add
sub
lea
mov
mov
add
or
push
adc
sub
mov
inc
cmc
sub
sbb
and
aaa
inc
or
xlat
rolb
mov
lds
add
mov
push
add
test
add
cld
movsb
inc
dec
inc
lret
cwtl
scas
mov
inc
lock
jo
pop
sbb
gs
or
cld
cmc
mov
inc
push
out
enter
nop
and
add
in
aas
xor
dec
flds
push
inc
xchg
inc
add
push
xor
dec
rol
leave
mov
add
push
fs
popa
in
lcall
dec
pop
imul
pusha
in
pop
stos
rolb
mov
fst
es
adc
add
cmp
add
push
mov
and
out
lret
je
mov
pop
jno
pusha
or
fadds
or
loope
and
or
jnp
jae
or
hlt
xchg
cld
push
or
pop
decb
aaa
sbb
iret
inc
mov
inc
dec
fisubl
fcmovne
gs
xchg
mov
and
or
mov
cmpsb
sub
addr16
and
int3
bnd
pop
fildl
arpl
push
cli
cmp
xor
hlt
xor
and
pusha
mov
lahf
icebp
rcrl
js
adc
fcomps
fdivl
add
out
pop
or
cmp
or
mov
mov
outsl
and
add
leave
mov
subb
jmp
scas
push
xor
adc
push
test
movsb
mov
adc
sbb
incl
sbb
mov
push
ds
add
adc
sbb
add
cmp
inc
xor
lahf
imul
dec
imul
mov
lock
add
popf
push
decl
and
adc
cmp
mov
mov
xlat
sbb
jg
add
call
mov
fnstcw
outsl
jb
notl
mov
xor
movsb
fstpt
mov
mov
cmp
adc
lods
out
add
inc
mov
lods
dec
rcr
adcb
or
rol
xchg
or
mov
sahf
and
pop
mov
xchg
dec
arpl
add
push
les
cmp
aas
lret
push
nop
pop
add
inc
mov
sub
pop
js
dec
cld
decb
jg
lods
movsl
xchg
cld
and
mov
or
add
cltd
push
daa
enter
movsl
in
push
mov
test
in
imul
sbb
rcr
lret
rorb
lret
mov
faddl
pushf
or
dec
and
subb
push
xchg
or
push
add
cmc
loop
push
roll
push
jns
mov
es
aam
pop
cmpsb
leave
add
lret
or
enter
cmp
add
test
mov
sar
ret
mov
add
sbbb
outsb
filds
pop
cmp
dec
rcpps
mov
add
xor
mov
andb
bound
pop
loope
jle
cmp
jo
out
cwtl
sub
mov
push
out
fs
add
pop
push
shrb
imul
jne
xchg
and
cmpsb
sbb
cmpsl
sarl
cmp
xor
subl
mov
cld
add
push
add
sbb
les
jp
add
pop
add
mov
inc
add
popf
nop
stos
test
notl
dec
and
lea
les
fldenv
push
mov
out
mov
fdivrl
mov
and
sti
or
divb
or
leave
sub
pop
cmp
mov
rolb
cmp
xchg
and
bound
test
mov
mov
add
in
mov
add
cmp
xchg
xchg
popa
inc
push
mov
sbb
arpl
fs
icebp
inc
dec
fisttps
sbb
sti
xchg
mov
pusha
xor
js
popf
add
dec
mov
pop
and
pushf
adc
adc
leave
dec
call
jbe
mov
les
test
lret
xor
mov
jp
enter
test
cs
js
das
jge
negb
add
popa
or
cmpsb
add
popa
fadd
pop
std
leave
cmp
dec
jl
cmp
mov
loope
mov
pop
or
jno
adc
inc
movb
add
bound
pushf
or
push
push
dec
and
fdivs
test
mov
jg
adc
cwtl
add
bound
jnp
popa
add
fwait
inc
mov
push
popf
call
add
int
or
arpl
push
cld
ret
lret
cmp
add
adc
out
xor
jo
mov
adc
adc
test
into
loopne
pop
sub
jno
mov
mov
mov
shlb
add
jnp
mov
dec
adc
mov
aad
mov
inc
stos
xor
or
das
aas
loop
dec
and
add
stos
ror
lret
mov
add
pop
popa
pusha
das
sub
mov
cmp
adc
or
dec
mov
jecxz
lock
or
and
rcrb
icebp
cmovge
mov
add
pop
dec
xchg
sub
lcall
fadds
sub
addr16
popa
adc
add
mov
inc
in
in
int3
add
in
inc
mov
bswap
sub
out
out
dec
inc
mov
loopne
sets
cmp
pop
adc
xor
push
cmp
mov
mov
and
fs
cltd
mov
rolb
fildl
pop
jecxz
pop
ss
mov
test
jo
inc
mov
dec
pusha
jb
push
popa
add
cmp
mov
mov
dec
cmp
dec
nop
in
inc
addl
das
ja
jl
push
addb
shlb
jo
jne
ficompl
cmp
mov
jno
xchg
loop
out
lret
test
add
push
cwtl
bound
movlps
pop
arpl
nop
stos
push
mov
dec
sbb
mov
adc
pop
xor
cmovns
shlb
rcr
and
rcrb
adc
fimuls
push
push
xchg
mov
std
test
cmpsl
add
add
or
int3
cmp
or
int
ds
add
cltd
mov
das
add
mov
ret
pop
loopne
sub
pop
and
dec
lcall
pusha
cmp
mov
add
aam
mov
add
pop
add
or
sub
rorl
or
inc
fcoms
mov
and
pushf
ds
add
arpl
jecxz
mov
mov
ret
cwtl
xor
or
mov
mov
add
leave
mov
inc
pop
and
push
pop
sbb
pop
pop
rorl
mov
loopne
and
cli
add
adc
insb
scas
add
adc
adc
and
sti
xor
out
dec
iret
int
jl
and
cmp
mov
stc
or
je
mov
les
test
cld
loope
cltd
fcomip
pusha
add
and
jo
mov
pop
popa
and
out
push
mov
rolb
cld
iret
or
loopne
test
call
inc
adc
popf
xor
call
bound
mov
fcoml
shrb
mov
bound
mov
mov
test
test
dec
mov
fucomi
add
inc
jl
repz
loope
ss
call
add
shrb
cli
mov
add
into
shr
sub
add
add
out
loope
xchg
xor
ds
pusha
nop
out
in
test
nop
fwait
pop
outsl
add
or
cld
les
loopne
cmp
out
add
mov
js
iret
fisubrl
mov
push
out
add
out
faddl
mov
jp
cmp
int3
inc
pop
xchg
ss
shl
xbegin
cmp
push
cld
bound
dec
adc
ja
mov
popf
mov
stos
sti
leave
repnz
fstpt
mov
push
and
and
pop
push
add
xchg
lock
insb
cmp
in
rolb
sub
push
ds
loop
repnz
in
addr16
sbb
and
mov
call
fldcw
push
adc
or
adc
cmc
cs
aaa
fdivr
adc
mov
lahf
out
daa
jae
nop
sbb
ss
add
pushf
cmp
andb
cmp
push
mov
std
mov
aas
lods
leave
adc
or
inc
add
lods
mov
inc
ljmp
test
mov
pop
in
je
ss
inc
add
xorb
or
movsb
jnp
jo
mov
cwtl
sub
jo,pn
push
adc
xchg
mov
mov
push
mov
mov
orb
cwtl
clc
pop
dec
mov
pop
mov
nop
add
fidivrl
adc
jo
sti
pop
data16
cmp
addr16
push
daa
jmp
aas
cmpsl
arpl
jl
or
mov
mov
mov
mov
and
js
xchg
push
hlt
mov
lds
pop
dec
mov
adc
test
xor
push
xor
jl
mov
cmpsb
add
test
xor
rcrb
push
mov
push
xor
out
cmp
add
add
fcoml
int3
cli
jecxz
rolb
shlb
add
pusha
cmp
push
cmp
ja
pop
cmp
jmp
stos
leave
push
inc
mov
xor
add
or
add
jne
in
stc
and
out
push
clc
mov
mov
jnp
lock
rolb
dec
sub
jp
mov
inc
mov
xorb
pusha
sbb
adc
adc
imul
dec
add
mov
dec
add
inc
xor
scas
and
shl
notl
jmp
mov
out
sub
rcrb
les
push
xchg
jae
pop
pusha
daa
lods
addr16
in
push
adcl
inc
inc
cmpsb
sti
iret
xor
xor
shrb
mov
sbb
push
push
inc
or
das
mov
cmp
js
ljmp
mov
cwtl
call
rclb
packssdw
shl
sub
loopne
mov
nop
adc
add
mov
pusha
lock
andb
jmp
adc
cli
adc
or
add
pop
xchg
jnp
xor
adc
pop
flds
scas
jecxz
jb
sbb
mov
faddl
lods
mov
pushf
cmp
dec
add
sub
xor
xchg
popa
add
cmpsl
mov
or
leave
mov
mov
pop
loope
mov
sbb
adc
aad
lret
jns
rcrl
pop
std
jbe
cmp
mov
mov
inc
lret
inc
add
cmp
pop
pushf
popf
xchg
jae
out
popa
mov
inc
jp
fprem
pop
mov
test
leave
xchg
jecxz
rcr
lret
push
jne
add
add
adc
orb
add
lret
fsubrs
and
cmp
roll
mov
xchg
fiadds
std
jno
pop
ffreep
pcmpeqb
add
aas
pop
pusha
loopne
fmull
jno
add
cmpb
in
subb
arpl
int3
clc
add
sbb
sub
bound
inc
xor
pop
or
je
ljmp
add
adc
mov
mov
incb
add
sbb
ss
inc
arpl
cmpsb
fisttpl
jmp
cltd
add
icebp
inc
sub
sahf
cmp
andb
outsl
dec
push
lcall
push
dec
sbb
pop
int3
jnp
dec
out
inc
ret
pusha
notl
and
add
ljmp
fwait
bound
push
jne
and
xor
add
sbb
outsl
bound
repz
loope
mov
mov
fisttpl
js
sub
push
inc
mov
test
xor
jge
stos
in
enter
mov
fs
mov
and
xchg
or
in
fucom
bound
sub
divb
sti
pusha
and
roll
mov
nop
push
call
in
call
jle
inc
dec
dec
push
hlt
jmp
xor
inc
jns
add
sti
add
cmp
add
jmp
lahf
or
mov
nop
nop
enter
test
jp
push
sub
out
sub
insl
add
enter
out
cmp
and
mov
sbb
sbb
fldt
push
popf
nop
insb
push
adc
dec
add
mul
and
add
cmp
jns
add
sub
dec
fisubrs
fwait
adc
push
lock
mov
dec
cmp
add
data16
test
or
or
out
mov
jbe
mov
dec
test
les
ret
shlb
push
les
mov
addl
das
lret
cltd
jae
mov
test
cmp
adc
sub
or
pop
jo
arpl
js
dec
xor
sub
jge
fs
mov
mov
add
xorl
mov
outsb
movsl
fcom
dec
pop
enter
cmpxchg
sub
sub
pusha
sbb
xor
jmp
insl
xchg
jo
push
or
inc
mov
mull
xchg
pop
test
fisttpl
push
add
lock
scas
mov
and
dec
shlb
push
les
popa
aaa
push
xor
sub
popf
mov
xor
add
xlat
ficompl
rclb
clc
cmp
pop
sti
loop
add
std
adc
icebp
cwtl
ret
or
hlt
pop
add
arpl
xchg
outsb
fstl
mov
in
adc
dec
lahf
clc
cmp
dec
ljmp
add
pop
pop
in
imul
movsb
add
outsl
adc
ljmp
xchg
enter
inc
out
pop
pop
ss
lret
aaa
xor
loopne
hlt
imul
and
movsl
int3
add
xchg
int
mov
xchg
clc
mov
cmp
ja
je
pop
sbb
xor
dec
fildl
test
out
mov
ficoml
orb
leave
or
in
cmp
inc
mov
mov
xchg
test
push
enter
mov
add
push
pop
test
pop
pop
fs
inc
inc
cmp
xchg
jbe
stos
rolb
fs
aas
fsubl
sbb
dec
adc
mov
adc
dec
out
and
add
fistpll
sub
pop
les
sbb
ds
fwait
out
jo
and
inc
pop
popa
dec
orl
lods
loop
xor
xlat
add
adc
aam
fdivs
rcll
cwtl
loopne
out
into
xchg
push
inc
loopne
xor
mov
mov
pop
adcb
add
xchg
rcll
inc
sub
add
push
in
adc
mov
mov
or
cmp
cs
adc
or
out
and
lods
jbe
addr16
inc
adc
les
stos
mov
sahf
inc
fucompp
enter
lods
mov
push
ja
add
lods
pop
popa
cwtl
or
jb
jns
js
leave
inc
scas
add
loop
or
add
mov
rolb
lods
in
out
add
insl
add
pushf
push
inc
cmp
repz
add
mov
cli
shl
fwait
dec
cltd
mov
pop
dec
lods
rolb
shrl
or
test
sti
or
nop
movsb
bound
je
cmpsl
sub
push
cmp
xor
ret
pusha
cmp
leave
mov
cld
adc
push
sbb
xor
mov
sahf
in
add
pop
cwtl
push
je
js
pop
push
inc
mov
add
cmp
orb
add
fsts
or
aam
xchg
shl
sub
call
sub
nop
mov
cmp
mov
add
and
movsb
and
add
mov
dec
sbb
popa
jno
add
in
mov
cmp
xlat
or
mov
add
shrb
rolb
cld
lock
es
mov
cmpsb
fcmove
pop
xor
shlb
mov
cltd
add
insb
mov
pop
cli
xchg
pusha
sbb
sahf
cmp
mov
inc
mov
adc
add
rorl
pop
cmp
mov
push
mov
fwait
xor
sub
movb
xor
int3
dec
xchg
push
cld
mov
jl
add
cld
cmp
fiaddl
subb
arpl
test
repz
fistpll
or
pop
loop
or
or
test
cmp
imul
add
lcall
push
mov
sub
int3
xor
and
scas
cltd
int
jnp
insb
cwtl
xor
and
sti
adc
push
or
inc
add
into
data16
icebp
cmp
gs
cmp
mov
enter
mov
stos
add
arpl
jb
cmpsb
jbe
xchg
call
jae
xor
jge
inc
add
int3
mov
insl
loope
aad
fdiv
outsb
mov
int
stos
adc
mov
sbb
adc
or
adc
popa
pusha
sub
sbb
cmpsl
add
mov
or
cli
add
and
sahf
push
or
inc
lock
adc
dec
bound
fsubs
mov
shl
jl
lahf
xor
fadd
mov
add
rol
sub
push
xchg
repz
mov
outsb
lahf
adc
add
push
add
arpl
mov
sahf
sub
clc
jl
inc
jae
cmp
movsl
mov
stos
xor
mov
jbe
das
out
rcll
add
mov
mov
cld
mov
insb
dec
ds
sub
cld
popa
dec
xor
or
xor
sub
in
pop
cld
lods
xor
sbb
push
and
jno
add
adc
sahf
loop
push
add
mov
fs
push
addb
pop
insl
test
mov
pop
shlb
push
mov
xor
gs
inc
scas
xchg
pop
fldcw
iret
add
int3
xor
add
xchg
push
sub
arpl
scas
rolb
subl
xchg
push
lods
mov
xor
mov
or
cmp
hlt
ss
enter
push
rcr
mov
stos
adc
or
push
lcall
add
ss
lods
xor
lea
jo
xchg
icebp
lret
imul
fisttps
inc
in
pusha
add
call
xchg
lahf
orb
pop
out
mov
mov
sub
fdivs
xor
stc
mov
xchg
fmull
mov
or
mov
pop
mov
add
enter
xor
add
jmp
adcl
in
add
fstpl
in
loopne
popf
mov
jnp
push
mov
nop
lea
and
mov
xor
incb
mov
inc
push
or
push
adc
jbe
xchg
add
bound
dec
push
nop
and
mov
test
or
mov
adc
fstpl
adc
je
shl
add
stos
ss
mov
cli
or
out
add
stc
xor
push
bound
inc
cmp
add
popa
das
and
mov
pop
or
sti
ljmp
mov
loope
add
sub
jecxz
in
jno
arpl
insb
add
popa
inc
push
mov
lcall
bnd
ja
adc
leave
daa
out
stc
mov
mov
mov
fwait
and
clc
shll
xor
movsl
shlb
loopne
hlt
test
inc
sbb
jl
jmp
xor
add
ljmp
leave
inc
add
inc
aam
subb
inc
xor
fdivl
aad
sbb
test
adc
daa
mov
mov
jae
cwtl
add
push
jno
dec
ret
stos
or
in
out
testl
inc
outsb
adc
inc
stos
adc
cmp
andb
xor
pop
sub
in
push
push
or
pop
scas
cltd
movsb
xchg
cmp
inc
popa
sub
mov
shlb
mov
pushf
inc
mov
cltd
add
rorb
ljmp
push
add
jmp
add
aaa
pop
add
and
push
pop
lret
js
inc
mov
mov
add
inc
mov
repz
adc
test
data16
push
shrb
pop
add
xchg
sti
xor
add
add
pop
mov
push
pushf
xor
push
pop
stos
sti
xchg
mov
and
cmp
loopne
xchg
addl
movsl
push
lock
jmp
cmp
add
inc
and
mov
out
jno
dec
jp
cmp
cmp
aad
mov
jle
loopne
sbb
and
or
cmp
and
and
mov
inc
or
mov
push
mov
daa
sti
dec
test
int3
scas
add
mov
fs
mov
and
or
movsb
sub
pop
and
xchg
addr16
sbb
dec
or
xor
add
js
and
xor
lret
cmp
push
jae
push
mov
jge
je
jecxz
xor
push
shufps
inc
hlt
shlb
mov
mov
clc
fcmovb
or
pusha
inc
push
rorb
fwait
cmp
add
lods
into
mov
cmp
add
mov
mov
xor
int
hlt
mov
xchg
cwtl
cmc
or
push
add
xor
mov
inc
add
shrb
mov
in
shlb
repz
push
clc
add
jne
cwtl
push
adc
aad
xor
daa
js
jge
and
lock
mov
minps
pushf
add
inc
dec
pop
fdivrl
repnz
lea
shll
dec
dec
aas
xor
add
dec
push
int3
fnstcw
jle
push
adcb
mov
imul
psadbw
xchg
mov
dec
js
add
adc
xchg
pusha
add
xor
lea
fsubl
xor
dec
add
add
out
loopne
xor
ss
pop
fiadds
sub
data16
jl
mov
aas
sub
sbb
movsb
sarl
xchg
roll
and
jg
pop
adc
insb
mov
inc
sbb
push
xchg
push
push
pop
aas
adc
outsb
push
mov
movsl
push
sub
or
xchg
jns
mov
push
dec
cmp
add
sub
sbb
sbb
cltd
loope
push
sbb
loop
push
in
add
sbb
pop
jno,pn
movsl
pop
addl
pop
shlb
push
lret
out
sbb
sbb
sbb
mov
sbbb
xor
and
add
push
sbb
or
add
sub
enter
cmp
call
sbb
pop
mov
xlat
mov
pop
sbb
cmp
lds
or
push
inc
adc
rclb
and
sub
cmp
jns
add
push
fstpt
sub
push
add
insl
out
call
mov
outsb
and
mov
lock
cmp
test
push
cmp
sbb
cli
push
cmpsb
pop
lret
mov
add
xchg
mov
add
push
mov
mov
data16
xor
aad
add
pop
add
jo
faddp
sub
and
mov
xchg
fs
out
int3
adc
add
xor
aam
sub
pop
pop
sbb
insb
sarl
outsb
addl
fsubl
aad
mov
int
add
pop
jo
cmp
sahf
pop
cmp
cmp
subl
add
sbb
cmp
add
and
dec
xor
mov
lds
ljmp
or
jle
rorl
les
lcall
in
cmpl
subb
xor
pop
jle
add
mulb
aas
lea
or
add
xchg
lods
adc
repnz
idivl
dec
mov
add
sbb
jle
add
cmpsl
adc
push
popa
fwait
add
in
jo
fisttpll
out
fsubrs
sahf
mov
push
insl
add
shll
pop
ds
psubd
rclb
add
in
cmp
movb
sub
inc
jo
cmp
testb
jp
bound
cli
gs
std
into
push
add
adcl
in
stos
inc
fwait
push
lret
arpl
in
push
cwtl
mov
push
xchg
test
fldl
int3
in
xchg
xchg
fisttpl
leave
add
push
xchg
and
add
pop
xchg
dec
insb
and
das
cmp
xor
daa
sbb
sub
ret
pop
or
inc
xchg
pop
xor
add
sbbb
cmp
mov
adc
mov
popf
add
xor
lret
fdivr
mov
int3
add
fwait
sbb
popf
jl
add
xchg
pushf
out
jne
loop
add
sarb
and
add
int3
mov
push
pop
mov
imul
sub
cmp
jmp
adc
xor
jl
orb
lods
clc
jmp
mov
stc
enter
iret
xor
rcr
mov
out
push
pop
outsb
inc
addb
mov
popa
or
and
pop
cld
add
js
out
mov
jno
fdivs
xchg
mov
mov
aam
addr16
pop
into
stos
sbb
add
fistps
out
dec
enter
scas
and
cmp
pusha
test
call
mov
cmp
fsubrl
mov
out
mov
xor
mov
and
sub
mov
sbb
loopne
adc
stc
add
push
fildll
push
jle
pusha
jmp
ficomps
inc
es
push
pop
in
jbe
add
sub
dec
iret
add
pop
inc
test
jns
jp
adc
add
loope
divl
insb
cli
bound
fidivrl
jnp
fstpt
hlt
add
pop
iret
jle
xor
leave
inc
lahf
add
mov
cmp
add
pusha
int3
add
das
xor
in
ds
scas
mov
negb
lea
pop
pusha
add
add
pop
mov
and
add
add
sahf
add
fwait
xchg
les
sbb
addr16
pop
imul
and
outsb
jg
xor
rorl
xchg
cs
sub
loop
cltd
push
dec
pop
jo
add
fiaddl
leave
add
sbb
clc
mov
cmp
cmp
pop
lods
push
add
mov
jo
rolb
dec
add
int3
shlb
mov
xchg
imulb
or
cmp
cmp
add
sbb
rorl
push
jge
or
jg
jl
mov
fdivrl
andl
pushf
in
clc
push
inc
sbb
subl
dec
mov
aam
xor
add
dec
jg
add
test
or
lret
ficomps
scas
das
or
and
add
lret
popf
xchg
sar
sahf
call
and
testl
pop
data16
cmpsl
adc
cwtl
repnz
adc
dec
loop
in
cld
add
mov
rorb
or
mov
cltd
sahf
mov
mov
std
mov
rcr
cltd
add
adc
enter
addr16
mov
inc
pop
or
jb
lds
enter
pop
jae
movsl
inc
and
push
add
add
pusha
push
xor
xchg
adc
sahf
adc
je
out
pop
ja
int
repnz
lock
sub
sub
adc
push
add
adc
clc
dec
inc
add
imul
mov
inc
clc
repnz
jmp
jp
into
push
xchg
les
push
mov
add
push
dec
adc
and
inc
lods
mov
and
lock
jle
scas
aam
mov
pop
xor
ret
add
out
cmp
enter
nop
cmpsb
into
cld
scas
mov
int3
fsubl
push
lds
stos
and
add
and
andb
lret
loop
add
pop
js
push
add
mov
add
in
mov
xor
xchg
pop
out
and
adc
psllw
das
jb
pop
cmp
fsubs
loope
call
leave
cwtl
nop
xchg
in
hlt
xor
pop
ror
add
dec
pop
xchg
dec
push
test
stos
mov
add
cltd
adc
data16
xchg
imul
push
shll
sbb
pop
xor
sahf
sub
cmp
cmp
push
adc
sar
jmp
movswl
pop
daa
xchg
add
sbb
outsl
loop
out
jb
add
jns
jg
dec
jge
add
or
inc
mov
adc
jae
es
push
das
ret
lock
nop
sub
mov
test
xchg
add
fistpll
out
push
mov
enter
mov
push
mov
inc
add
mov
or
add
popa
out
scas
push
xor
mov
xor
and
scas
inc
movsl
test
cltd
rcrl
nop
fs
imul
cmpsb
xorb
daa
push
lods
fs
mov
xor
hlt
scas
or
aaa
xchg
pop
andb
adc
sbb
test
mov
pop
add
pop
out
pusha
add
adc
xchg
ss
add
add
lds
add
pop
leave
lcall
cmp
testb
jl
pusha
in
dec
or
sahf
imul
add
pop
sbb
aaa
nop
push
add
inc
cli
pop
push
pushf
arpl
dec
mov
lods
ss
sub
lods
sysret
outsl
insb
jae
shrb
inc
add
or
or
mov
aad
incb
add
and
or
mov
xchg
sbb
mov
or
xchg
jle
arpl
nop
pop
sub
adc
call
add
add
js
jecxz
add
fwait
mov
sar
adcb
add
out
js
cmpb
je
mov
cmp
inc
adcl
scas
add
in
jge
dec
rolb
adc
push
jnp
lds
or
mov
pop
and
lods
cmp
or
sbbl
cmp
mov
jle
add
sub
jge
inc
add
aam
ret
les
pop
hlt
push
stos
mov
aas
cmpl
es
add
lea
pop
int
fstpl
inc
jns
push
push
inc
xchg
sbb
add
mov
pushf
mov
dec
lods
sarl
jmp
cli
jne
pop
add
jno
xlat
shll
pop
stc
js
push
in
rorb
pop
xor
and
mov
int3
imul
je
pop
enter
mov
adc
push
add
insl
int
pop
punpcklbw
scas
jbe
cmp
push
es
iret
jns
jecxz
add
and
xor
sbb
jecxz
add
fbld
add
vcmpordpd
xlat
xor
js
add
mov
pop
dec
mov
lea
imul
lock
je
ss
subb
in
jne
adc
cwtl
or
jo
icebp
xchg
jecxz
out
push
add
cmp
insb
fcmovnb
jo
pop
jl
add
cmp
inc
fisttpll
aam
ret
add
sub
mov
sbb
jmp
cmp
jmp
add
frstor
xchg
push
gs
cmpsb
scas
mov
std
jo
jbe
int
push
push
inc
lods
data16
sbb
pushf
orb
mov
cmpsb
sbb
xchg
pop
cmp
mov
dec
movl
test
call
sbbl
sbb
pop
ret
mov
push
cmp
sti
mov
sub
add
dec
pusha
jg
xor
add
cmp
fiaddl
cmpsl
xchg
xchg
push
imul
cmp
call
mov
push
imul
roll
outsl
pop
push
jge
push
rcrb
stos
mov
add
mov
or
or
and
push
sbb
adcl
loop
lret
fdivl
out
mov
or
mov
push
pop
insl
rolb
cmp
mov
mov
out
or
cmc
mov
jno
add
sub
stc
fistpl
mov
out
aaa
mov
jg
jl
js
fs
test
loopne
and
mov
jno
pop
es
lret
shrl
nop
lds
adc
sub
cwtl
rorl
add
std
dec
add
insb
insl
cmc
add
mov
adc
mov
mov
pop
pop
xchg
cmp
add
leave
adc
add
fidivrl
cli
outsl
add
mov
inc
push
dec
in
nop
jns
std
hlt
imul
jecxz
add
jno
loopne
popl
mov
or
add
jecxz
xor
bound
add
cmpsl
fbld
jle
jne
adc
jnp
aas
in
add
hlt
cmpsb
lock
add
xchg
stos
adc
inc
xor
adc
call
jns
pop
aas
in
add
jae
popf
lcall
jmp
mov
sub
or
addb
and
push
clc
and
and
mov
mov
adc
adc
mov
pushf
adc
xchg
lret
adc
jmp
leave
inc
inc
and
icebp
adc
push
sahf
mov
mov
push
int3
jmp
inc
adc
add
lahf
mov
jae
add
leave
sbb
cwtl
mov
imulb
shll
shl
int3
add
mov
jle
dec
std
pop
inc
add
and
fs
ljmp
insb
cld
out
stos
in
mov
in
adc
stc
push
push
sub
add
mov
negb
rolb
pop
ja
dec
dec
inc
xchg
or
in
cmpsl
cwtl
jmp
scas
iret
test
aad
call
fcoml
int
jno
lret
ds
arpl
rolb
stc
mov
call
imul
jne
mov
fnstcw
cmp
jecxz
cld
push
pushf
inc
ror
lea
jmp
mov
sti
dec
adc
mov
call
jae
jl
push
cmp
jecxz
inc
sub
dec
mov
out
aas
andb
cmpsw
sub
mov
imul
ret
dec
mov
cmp
stc
add
ljmp
add
push
adc
add
jge
xchg
ds
jnp
add
xchg
sbb
and
xor
add
push
test
mov
std
loop
lock
push
push
cmp
jmp
je
rolb
jae
mov
inc
and
xor
ljmp
fucomip
loopne
outsl
add
xchg
ds
hlt
nop
shlb
dec
int3
jl
xchg
incb
idivl
pop
lods
rolb
addl
fcomps
iret
mov
cmpsl
push
cwtl
dec
rclb
sbb
push
cmpb
adc
clc
jg
xlat
lcall
lahf
cmp
jge
inc
pop
or
cmp
or
inc
and
sub
push
ljmp
je
mov
hlt
int3
cmp
sub
jge
sbb
cmp
mov
mov
sbb
and
in
add
adc
test
add
mov
mov
mov
aam
icebp
loope
push
sbb
inc
jo
int3
push
popa
lds
arpl
in
mov
movl
addr16
inc
imul
stc
movsl
push
loopne
or
mov
push
cmpb
jbe
cmp
xchg
or
xchg
add
push
lods
fbld
je
and
sbb
stos
cmp
add
repnz
push
jmpw
fwait
mov
sahf
add
jge
or
mov
cmpsb
mov
mov
dec
or
pop
add
pop
stos
lods
jge
add
bound
testb
fnstenv
andb
cmpsl
dec
jae
add
mov
or
imul
add
hlt
ds
add
mov
pop
movsl
xor
sbb
and
ja
fadds
and
int
test
ficoml
test
add
xchg
cmpl
ret
pop
mov
dec
push
sbb
xchg
push
lcall
dec
pop
leave
push
fsubs
shll
xchg
lock
loope
cmpsb
call
dec
je
js
sub
push
xor
inc
std
aas
jbe
testl
cmp
fildl
loopne
data16
pop
sbb
mov
dec
push
loope
sub
add
mov
clc
push
hlt
loopne
jecxz
nop
adc
dec
add
push
out
inc
movsb
mov
repnz
faddl
mov
insb
ja
cmp
stos
loopne
subl
and
add
inc
ss
add
enter
imul
mov
xchg
andb
stos
jmp
lret
jns
push
push
add
out
or
add
push
arpl
das
push
nop
pusha
add
into
rolb
push
shrl
cmpsb
jns
nop
jl
andl
sub
mov
pushf
cmp
cltd
dec
inc
fbld
dec
push
or
pop
fdivrs
or
sbb
inc
mov
push
add
lret
pop
loopne
rcrl
mov
adc
les
and
aas
xor
cmp
and
cmp
cmc
js
jae
fnsave
les
mov
addb
aaa
pop
pop
es
outsl
xchg
add
loopne
inc
dec
movsb
orl
scas
shl
aad
add
hlt
pop
decb
dec
into
add
ret
cmp
popf
out
mov
nop
imul
and
sbbb
pusha
add
jge
add
cwtl
cmpsl
add
out
xor
sbb
dec
add
icebp
xor
sbb
inc
loopne
imull
pop
or
adc
xor
cmpsb
das
mov
inc
out
leave
mov
sub
sub
xor
lock
inc
ss
add
testl
mov
mov
add
dec
ficoms
add
cmp
imul
lods
pop
or
push
xor
andb
shl
adc
jle
add
shl
dec
lret
cmp
mov
shlb
pop
and
add
inc
dec
cld
mov
sub
jmp
dec
es
or
ffree
ss
add
cli
dec
pop
out
xor
cld
hlt
add
pop
pop
adc
divb
add
push
lret
sahf
scas
ds
add
in
cmpb
xchg
add
decl
popf
clc
inc
add
xor
push
lock
fistpll
fdivrl
jno
push
dec
or
aas
dec
std
push
ret
jmp
and
nop
les
test
add
add
mov
fs
adc
aad
pusha
rorb
sbb
cmp
fisttpll
fldcw
push
lods
adcb
or
jmp
and
das
xor
clc
std
es
push
dec
adc
add
pop
ret
jae
call
adc
fldl
sbb
push
sub
rorb
clc
sub
gs
pusha
es
inc
dec
or
nop
and
roll
xor
sub
pop
call
jge
repnz
movsb
call
iret
mov
sub
add
sub
pop
fildll
nop
jge
push
push
icebp
outsl
jecxz
nop
add
ds
mov
mov
sub
add
add
inc
dec
cmp
add
fstps
in
add
in
dec
add
pushf
push
repnz
push
addb
fisubrs
je
xor
js
leave
scas
jb
clc
sti
mov
add
cld
jbe
mov
in
mov
aam
pop
imul
out
add
das
fldenv
mov
add
cmp
cmpsl
stos
pop
arpl
mov
sub
adc
movsb
xchg
add
push
mov
mov
std
leave
pop
imul
mov
shrl
insb
faddl
add
or
mov
fdivr
add
sub
arpl
add
or
jnp
add
lock
enter
inc
adc
jnp
js
idivb
mov
adcb
aam
loop
dec
mov
rorl
dec
jo
into
add
xchg
push
mov
cmp
mov
add
jle
inc
cli
xor
mov
inc
pop
inc
lret
xchg
mov
push
addr16
faddl
es
jno
pop
fnsave
jecxz
pushf
inc
cmpsl
mov
loop
or
sbb
stc
and
mov
or
outsl
cmpsb
scas
add
ja
inc
xor
in
adc
cmp
enter
icebp
xchg
lsl
aas
inc
xchg
lock
imul
mov
ret
out
outsb
addb
mov
dec
mov
pushf
add
divl
add
sub
test
mov
cld
add
fisttpl
mov
jo
and
les
add
cmpsl
test
jl
dec
sbb
movsl
xchg
ud2
icebp
cld
pop
add
sub
pop
and
jae
mov
sub
rcrb
cmp
inc
dec
jge
andb
dec
pop
leave
xchg
mov
xor
cmp
in
insl
add
dec
aas
in
dec
mov
dec
push
sub
sub
mov
roll
std
jle
adc
lcall
push
movsb
std
test
dec
cmp
add
jp
pop
mov
lret
stc
hlt
in
and
adc
xor
pop
fsub
mov
mov
sti
or
frstor
ja
mov
add
test
or
sub
pop
pop
xchg
mov
pop
shrl
sub
call
jmp
popa
xor
and
out
pop
sub
push
lret
add
repnz
in
add
push
iret
cmpsl
cmp
mov
insb
cmpb
cs
fidivrl
icebp
mov
adc
push
xchg
es
cmp
loopne
out
jnp
jge
add
mov
add
cmc
pop
test
add
out
add
mov
pop
add
iret
inc
arpl
xchg
add
adc
dec
mov
lcall
test
dec
or
in
pop
ja
hlt
imul
mov
xlat
adc
repz
pusha
push
add
dec
gs
and
dec
insl
test
loop
cmp
add
mov
daa
lods
mov
add
dec
mov
sub
sti
andb
jns
add
xchg
sub
dec
sbb
add
cmpsb
mov
jnp
popa
mov
inc
or
and
or
dec
add
adc
mov
pop
out
add
nop
sti
jg
sbb
aad
mov
jnp
push
add
repz
lods
and
or
add
dec
cmp
call
xor
fldcw
add
fs
iret
pop
hlt
popf
cmp
xchg
std
sbb
mov
sbb
repz
jmp
popa
inc
xchg
add
cmp
sahf
and
or
cld
outsl
xchg
cmc
and
shlb
pop
out
cmp
pop
in
add
repnz
inc
dec
mov
sbb
cltd
ret
into
jmp
lods
jo
sarl
xor
inc
daa
pusha
notb
adc
dec
rolb
aam
bound
or
out
cmc
ja
sub
aad
add
imul
dec
aas
xchg
sub
lret
sbb
and
cs
je
mov
push
mov
jns
xor
cwtl
push
add
or
sbb
sub
push
xchg
fwait
pop
les
push
arpl
aaa
or
cmp
mov
inc
cs
clc
inc
lret
cmp
int3
add
sbb
dec
out
nop
mov
int
fnstcw
nop
xchg
andb
push
and
pop
pusha
lods
push
sub
fistpl
mov
ja
lds
jge
pop
stos
mov
mov
aaa
pop
nop
js
sub
add
and
adc
and
pop
pop
jle
out
and
cmp
shrb
dec
in
push
addr16
or
jo
push
inc
test
rol
insl
push
cli
inc
or
out
sti
push
stos
fstpt
dec
xchg
push
repz
fadd
sbb
daa
jp
lret
pop
adc
hlt
pminsw
mov
pop
pop
cmpsl
adc
or
dec
mov
mov
add
xchg
shlb
popf
add
pop
push
test
ret
xor
xorb
cs
add
or
and
and
cs
mov
add
pop
push
iret
into
inc
outsb
out
fs
aas
rolb
loopne
add
push
mov
lods
loope
aam
cmp
mov
add
sti
adc
jo
xor
rcr
cs
daa
out
add
cld
cmpsl
add
int
add
ja
jb
jno
add
psubsw
xor
fcmovnu
sub
xchg
push
outsl
hlt
into
movsb
add
js
aas
outsb
mov
loop
or
addr16
sub
test
scas
fcomps
dec
mov
call
dec
ds
pop
push
aam
iret
out
add
xchg
lds
or
add
stos
inc
in
out
nop
rclb
add
ffree
mov
pushf
adc
add
adc
pop
inc
icebp
pop
adc
fwait
add
lds
pop
push
add
add
aas
add
add
cmpb
addb
dec
jne
in
inc
add
mov
sarb
addr16
in
dec
call
insl
add
sbb
roll
push
add
repz
cmp
pop
andl
add
sarl
movb
scas
push
dec
inc
subl
mov
loopne
pushf
push
add
sbb
push
shrl
add
nop
stos
and
add
cli
fwait
jo
adc
cmp
inc
xor
sbb
add
sub
push
dec
cli
push
or
in
sub
or
dec
ret
jnp
add
int
mov
sbb
xchg
iret
mov
sahf
dec
clc
out
scas
and
jae
cmp
add
ret
add
das
push
sub
int3
aaa
sbb
lock
xor
or
xchg
out
clc
jnp
inc
add
js
add
mov
mov
or
std
mov
lahf
out
sbb
jecxz
add
push
movsl
mov
mov
add
psubsb
lock
or
push
out
inc
lret
or
xor
addr16
mov
je
push
mov
repz
or
jo
pop
std
leave
lods
jno
xor
popf
daa
mov
movsb
or
push
jle
addb
sti
int3
mov
dec
out
repnz
filds
jl
ss
jbe
add
jae
add
lret
cmpsb
mov
cmp
out
inc
and
popl
out
add
xchg
negl
scas
and
das
push
test
mov
jne
hlt
stos
push
add
je
pop
push
sbb
mov
pop
sub
inc
sub
out
or
pop
pop
xchg
cmp
push
jbe
adc
sbb
add
fnstcw
jne
pop
mov
xchg
jnp
clc
repz
pusha
or
push
es
test
iret
pusha
cld
aaa
test
lahf
jle
jb
stos
paddb
add
mov
mov
add
shrb
push
mov
imul
mov
loope
add
dec
out
sub
jbe
xchg
jnp
add
or
mov
fldenv
test
cmp
cmp
push
cld
pop
stos
add
sub
cmp
pop
daa
inc
inc
outsl
push
mulb
cli
and
add
mov
add
mov
xchg
jnp
pop
pop
push
sbb
mov
ljmp
cmpsl
xchg
call
stos
add
mov
push
hlt
and
jge
xor
cmp
push
and
dec
orl
loopne
mov
pop
adc
stc
movsl
sahf
inc
push
lock
xchg
js
add
jae
xor
sub
out
push
rorb
bswap
push
jns
add
movb
xorb
test
loopne
jle
dec
mov
mov
enter
mov
addl
add
push
pop
mov
add
or
stc
loope
shlb
dec
push
adc
lret
int
mov
mov
popa
add
outsb
imul
jne
mov
jle
lahf
add
push
xchg
mov
dec
scas
js
cwtl
cmp
jecxz
sbb
mov
pop
add
xchg
lods
sbb
add
adc
dec
add
test
lock
cld
rolb
cmpsb
repnz
test
jo
mov
jnp
sahf
add
rolb
inc
dec
dec
add
inc
or
test
movsb
add
push
cs
shll
cmp
push
shrb
out
in
popl
iret
add
subl
mov
push
and
dec
inc
in
sub
mov
ret
call
or
add
cmp
add
adc
mov
cmp
add
xchg
inc
adc
mov
or
add
les
mov
lahf
sar
and
mov
xchg
imul
add
mov
inc
xor
sbb
fwait
sbb
insl
xor
pop
add
std
sub
sub
js
cmpsb
mov
and
xlat
sarl
sbb
mov
lods
ficoml
xor
out
into
jecxz
flds
test
gs
ljmp
lea
push
daa
shll
jl
add
sbb
mov
push
or
add
add
add
into
pop
unpcklps
inc
cmp
outsl
flds
cmpsb
mov
lock
mov
and
add
popa
sbb
add
lret
enter
ficoml
std
or
add
push
ja
or
sbb
add
dec
rorl
loop
js
add
add
fldcw
and
iret
xor
ja
icebp
mov
dec
ds
add
mov
mov
dec
xchg
add
decb
popf
mov
lea
xor
addr16
rorb
enter
ljmp
push
and
mov
pop
lods
pop
push
or
jae
mov
add
daa
jp
dec
jmp
sub
cpuid
mov
mull
and
repz
hlt
jge
das
insb
cmp
push
sub
xchg
add
fstl
je
test
dec
addb
add
adc
out
inc
popl
push
cmp
fisttpll
inc
popa
sbb
jle
sub
or
pop
call
inc
add
push
dec
bound
clc
loope
lahf
sar
nop
cltd
sbb
lds
mov
mov
add
jnp
jne
sub
xlat
flds
movsl
and
inc
mov
xchg
cmp
xor
mov
dec
insb
add
pushf
cli
jmp
cmp
cld
dec
loope
repnz
pop
lods
hlt
test
cmp
ss
pop
dec
nop
imul
sub
hlt
xor
arpl
mov
and
bound
jnp
icebp
in
add
add
jbe
mov
cmp
seta
cmp
icebp
loope
dec
inc
jp
add
mov
ret
xor
mov
sub
xend
mov
push
mov
xor
push
jns
jo
and
pop
fwait
add
addl
dec
cmpb
shll
subb
xchg
sbb
sub
ret
ds
cmpl
mov
pop
jbe
psrlw
mov
jl
jmp
fs
dec
vmovddup
cmp
out
xchg
repnz
cmovbe
xorl
sub
mov
js
inc
mov
add
fwait
rol
lods
ss
xlat
sahf
pop
sub
cmpsl
movl
inc
shrb
add
cmc
inc
inc
or
sbb
into
test
out
roll
cli
je
xorb
adc
push
or
aaa
test
movb
scas
fidivrl
incl
dec
cmp
loopne
push
in
in
hlt
cmp
add
movsl
enter
mov
jne
sbb
dec
stc
mov
gs
adc
fucomip
dec
pop
out
or
inc
cmp
sub
out
sbb
mov
push
cmp
test
pop
sbb
adc
pop
xchg
js,pt
mov
lock
movb
incl
pop
or
xchg
test
jns
or
push
clc
je
push
push
sub
fisubl
rclb
mov
int
dec
inc
mov
inc
push
in
mov
add
fistl
in
adc
push
push
xor
out
jno
add
sbb
add
inc
mov
add
movsb
mov
sti
data16
push
cmp
mov
in
adc
js
and
lock
pop
inc
aam
es
daa
cmp
jl
fcoml
scas
push
pop
inc
jge
dec
mov
les
bound
bnd
in
dec
clc
push
or
jo
jbe
incl
xchg
loop
sub
add
sti
shlb
add
ljmp
add
test
loope
pusha
repnz
leave
and
gs
int
pop
push
or
xor
xchg
orb
pop
dec
mov
xchg
aam
add
cmpb
jbe
add
roll
add
mov
and
fnstsw
leave
xchg
js,pn
push
add
subl
mov
jnp
push
pusha
add
in
sub
pop
ds
les
mov
shlb
test
mov
lret
fnsave
mov
lock
ror
and
add
sbb
mov
fs
add
aas
adc
mov
mov
cmp
lock
popa
mov
inc
and
jge
add
imul
xchg
mov
cld
add
dec
imul
lret
pop
jnp
mov
jl
inc
dec
add
xchg
add
in
xchg
and
add
sahf
push
gs
sbb
sbb
pop
inc
sub
in
push
sub
shlb
or
inc
add
lods
popa
mov
js
cmp
je
sahf
imul
aas
popl
popa
inc
fwait
push
and
scas
iretw
sub
adc
add
cwtl
aam
cmp
cmp
imul
testl
mov
insl
lret
pop
jnp
dec
hlt
cmp
dec
pushf
in
push
or
xchg
mov
dec
cmp
mov
pop
inc
shrl
lock
inc
movl
push
xor
gs
add
mov
or
sbb
push
cmp
mov
and
jne
int
add
scas
mov
cmpl
push
dec
dec
addr16
divb
pop
repz
add
enter
test
in
int3
add
in
fadds
stc
and
fadd
adc
jle
add
cmp
add
rcrl
imul
loope
vsubps
mov
cmpsb
add
mov
or
jo
lock
sti
in
into
add
imul
and
add
xchg
mov
outsl
push
push
mov
mov
aas
mov
mov
inc
mov
adc
js
or
adc
add
mov
sbb
xor
mov
add
mov
add
and
add
out
test
xchg
adc
pop
pop
popf
bound
jecxz
in
int3
clc
or
jg
adc
inc
mov
add
aaa
cmp
out
dec
add
ss
mov
mov
cmpsl
and
ret
mov
arpl
push
popf
pop
cmpxchg
lret
sub
xchg
cmp
add
jns
aad
pop
movb
test
pop
pop
sbb
popa
push
push
mov
daa
bound
sub
sbb
imul
mov
addb
and
call
cmc
add
cmpsl
lock
outsl
xor
sub
cmp
cmp
rcrl
stos
sti
bound
add
add
iret
sub
mov
test
scas
daa
mov
mov
jae
adc
cmpsl
andb
xchg
cmp
lods
test
out
aas
xchg
mov
ds
or
and
xor
popa
sbb
xor
cmp
test
and
in
je
ds
in
sbb
sahf
outsb
xchg
scas
ljmp
push
bound
shrl
nop
out
aad
test
outsl
fldl
jb
sbb
lods
call
sbbb
mov
add
leave
ja
sbb
fwait
add
pop
pop
aad
pop
fildl
sub
mov
add
clc
test
lds
lcall
sbb
add
mov
add
aas
imul
xchg
sbbb
sub
add
sub
mov
mov
aas
decl
cmp
mov
push
jns
iret
add
imul
push
xchg
or
add
push
int3
push
adcl
and
add
in
xchg
inc
xlat
aaa
hlt
ja
int3
inc
cmp
outsb
sub
jne
adc
sub
rolb
cmpsl
ret
lods
aas
add
xchg
insb
fld
mov
sub
pop
jle
push
cli
add
sub
xor
out
in
fldl
mov
adc
aad
add
push
mov
xor
or
movsl
adc
add
pop
scas
dec
add
and
sub
jae
xor
cmp
shlb
add
fidivrs
add
jnp
test
int3
push
mov
sti
mov
in
jmp
loop
out
repnz
xchg
mov
add
fisubs
jmp
or
es
adc
add
movq
aas
sahf
and
sbb
negb
aam
add
scas
mov
and
test
int3
add
lret
inc
into
pop
ja
add
xor
cmp
addb
enter
add
aad
adc
mov
jne
outsl
jmp
push
lock
movsl
dec
ret
loopne
mov
inc
mov
add
jbe
movsl
add
jl
icebp
xchg
add
lock
add
dec
cmp
mov
add
push
sti
jmp
shlb
adc
subl
shr
push
aaa
cld
pop
fildl
xlat
stos
jl
sbb
rcrb
je
mov
js
mov
adc
cmp
loopne
add
or
mov
scas
loopne
in
subl
add
imul
push
add
mov
pop
fldl
mov
out
movsb
xlat
dec
loop
neg
stc
movsl
ss
sarl
xchg
cld
fwait
push
mov
push
jnp
xchg
xorb
dec
sub
and
roll
xchg
mov
add
jle
inc
aad
add
cli
movsl
jnp
rcrb
add
in
cmpsb
jg
xchg
into
add
mov
mov
out
and
dec
mov
push
add
imul
imulb
out
add
xchg
test
enter
pop
stos
hlt
add
push
pop
int3
adc
rcrb
leave
lcall
push
jbe
loopne
xchg
mov
pushf
add
cwtl
out
andb
jae
xor
xor
jp
les
adc
frstor
lahf
out
cmp
ret
adc
dec
jne
add
or
sub
mov
add
cmp
fwait
mov
mov
xchg
push
out
shlb
xor
iret
cmpsl
add
cmp
in
js
cmovae
dec
std
dec
roll
test
icebp
jp
mov
gs
dec
push
pusha
mov
loopne
test
mov
sbb
cmpl
popf
add
lods
cltd
add
lahf
js
sti
push
add
jmp
in
les
add
add
and
lret
xchg
add
enter
adc
jp
in
inc
jae
in
mov
push
dec
sub
inc
mov
cmpsb
out
inc
sarl
mov
mov
js
loope
fdivr
lods
shlb
jns
add
sti
mov
sub
sub
jp
loopne
mov
add
leave
mov
xor
ljmp
lock
dec
sbb
add
pop
ljmp
xlat
inc
pushf
add
in
pop
pop
int
fadds
jne
ljmp
cli
testb
mov
aaa
jno
add
cmp
mov
pop
add
lea
imul
xchg
ds
rol
aam
add
in
lea
add
push
cs
jnp
push
xor
xchg
fcoml
add
ret
pop
and
mov
filds
sbb
stc
or
mov
or
mov
sbb
mov
add
call
popa
pusha
int
mov
add
adc
insb
loopne
adc
in
lcall
lret
enter
or
and
pop
jno
pop
pushf
add
sub
mov
cli
pop
add
test
mov
pop
add
mov
repz
inc
test
fstps
sti
scas
mov
cli
fwait
and
mov
repz
sub
adc
inc
mov
mov
cld
mov
add
mov
popa
jo
aad
cli
popf
test
lahf
test
pushf
push
shlb
add
out
push
psubsw
push
add
dec
aam
arpl
xchg
fwait
test
mov
pop
add
push
stos
pop
cmp
add
or
pushf
jno
jp
add
sbb
nop
pop
mov
fdivs
dec
insb
xor
pop
push
mov
insl
sbb
adc
shl
fisubs
xchg
out
add
out
jbe
imul
sar
or
fldl
js
mov
pop
popf
mov
mov
jle
lahf
adc
std
and
sbb
push
loop
mov
in
cwtl
loopne
sbb
lock
adc
or
add
mov
insb
mov
pop
mov
imul
xchg
fistpl
push
xor
jmp
pop
insb
and
aas
jecxz
add
cmp
inc
lret
gs
mov
inc
push
dec
inc
push
loopne
btr
dec
sarb
mov
sbbb
adc
add
nop
dec
add
push
daa
das
aam
jb
movl
test
mov
inc
jg
sbb
fldl
ret
jnp
add
sub
sub
scas
dec
test
xchg
bswap
add
sub
inc
add
aam
xchg
popa
xor
call
loopne
stos
sbb
shlb
mov
bound
out
cmpsb
and
adc
push
mov
or
pop
push
cmp
ret
sbbl
and
test
push
pusha
xor
jmp
or
pop
fwait
inc
sub
add
push
popf
push
das
pusha
or
and
lds
add
clc
movb
xchg
fbstp
arpl
push
sub
cmc
mov
mov
js
fisttpll
adc
sub
cli
dec
iret
mov
ror
xchg
jno
mov
or
jecxz
addr16
sti
jmp
mov
dec
int3
add
pusha
lahf
add
cld
jne
add
scas
inc
cltd
cld
push
pop
sbb
out
mov
xchg
dec
cmpsl
insb
mov
dec
pop
sbbb
les
push
xor
fsub
call
mov
aam
test
pop
popf
sbbb
dec
hlt
addr16
push
add
jno
add
ficoml
cmp
add
mov
int
add
push
push
pushf
imul
add
xchg
sub
add
or
aaa
dec
lahf
add
pop
sub
enter
dec
int3
dec
jp
sbb
xor
add
cmp
mov
add
sub
stos
pop
es
addr16
cmp
dec
or
push
mov
call
rol
mov
jbe
add
lret
bound
push
aas
and
xor
je
das
pop
js
jae
xchg
loopne
orl
add
sub
rcrb
loope
jns
iret
repnz
inc
fmull
mov
int3
add
es
js
add
xor
mov
enter
lods
mov
push
fwait
push
mov
mov
aam
push
fwait
sahf
sbb
out
stos
je
push
lahf
in
push
jne
imul
xchg
xchg
pop
mov
stc
and
ret
inc
xchg
or
push
setne
adc
repnz
xor
and
mov
jle
add
mov
dec
filds
sbb
hlt
insb
or
xor
cmpl
mov
push
inc
hlt
sbb
idivb
add
aam
add
and
aad
xor
fld
pushf
pop
ltr
scas
inc
pop
add
add
mov
sbb
leave
test
jp
mov
stos
dec
rcrl
push
sbb
pop
push
sti
and
mov
pop
sub
xor
faddl
scas
or
push
sub
loopne
mov
jns
xchg
mov
push
add
ret
jl
or
mov
xchg
fldl
mov
ds
jb
mov
imull
pop
shlb
ret
dec
mov
in
mov
inc
add
loopne
pop
out
loope
or
sarb
adc
addr16
add
out
dec
test
pop
insl
arpl
mov
xor
and
add
les
popf
dec
sbb
add
test
mov
xchg
add
daa
scas
mov
mov
xor
sarb
stos
cmpb
cmp
push
xor
sbb
inc
scas
test
mov
lret
inc
stos
or
cld
popf
cmp
cmp
pop
and
or
pushf
mov
or
cmpsb
test
add
pusha
stos
imul
loop
jne
cmpl
enter
inc
and
lret
stc
pop
imul
mov
pusha
adc
cmpb
pusha
mov
jnp
adc
add
add
subb
loop
int
push
add
push
inc
adc
cmp
ja
fimuls
dec
pop
lods
rolb
mov
inc
sti
push
sbb
jge
call
stos
ficoms
hlt
shll
and
sub
and
das
and
js
add
cmp
movl
inc
add
pop
mov
jg
mov
fistps
add
inc
mov
push
test
dec
xchg
pop
fistpll
cld
sbb
xchg
xchg
ret
inc
flds
add
loope
add
inc
sbb
stos
out
sbb
inc
iret
xor
xor
fcoml
add
xor
cmpsl
add
mov
push
sbb
add
mov
mov
data16
and
arpl
dec
sub
rcrl
aad
and
push
les
lods
xor
loop
and
inc
sub
lds
movsb
sub
cmp
jmp
les
int3
or
adc
cmp
stos
pop
pop
inc
leave
arpl
push
add
adc
orl
push
lods
pop
ss
mov
fstps
mov
push
cmp
ret
ret
rclb
or
pop
pusha
int3
mov
dec
es
out
invd
leave
in
inc
push
push
or
loopne
dec
sub
loop
adc
sbb
int3
dec
add
mov
lock
pop
mov
add
out
rcr
and
add
lods
cld
call
push
jecxz
lahf
repz
add
or
and
sbb
mov
push
mov
cmp
add
aaa
fdivr
mov
outsb
sbb
xor
lock
scas
int
lods
cmp
add
xlat
mov
add
enter
mov
jecxz
or
inc
test
pop
mov
cwtl
push
hlt
enter
add
and
jle
adc
jnp
setae
lods
sbb
pop
add
stc
ficoml
test
int3
add
jae
ss
out
fdivs
aam
pop
fimuls
add
fldt
push
movsb
repnz
fnstenv
cmp
jo
loop
test
hlt
in
cli
outsl
jmp
sahf
imul
nopl
sbbb
stos
lret
sbb
fisttpll
mov
shlb
ds
mov
jo
pop
xlat
pop
mov
gs
call
ds
cmpsb
push
xchg
fs
int
lahf
mov
lret
xor
pop
mov
dec
fstps
aad
sbb
icebp
sbb
or
in
daa
in
jo
or
mov
add
stos
ret
cmp
icebp
add
int
mov
lds
mov
test
out
scas
jle
push
cli
adc
cli
sahf
add
sbb
ljmp
push
push
cli
pop
adc
loopne
adc
add
sbb
dec
lret
xchg
jl
adc
mov
fmulp
test
sub
into
push
mov
cltd
mov
or
sbb
std
xor
sbb
and
leave
fistl
mov
pop
lret
int3
and
lock
dec
cmp
jge
fcmovnu
sbb
mov
dec
mov
mov
add
pop
cmp
pusha
loopne
shl
enter
jmp
popa
js
shrl
mov
pushf
jns
cmp
add
dec
in
xchg
pop
fdivs
pop
mov
jae
lock
icebp
stos
ds
inc
daa
adc
cmc
je
movsb
or
aad
fisttpl
mov
dec
ss
add
int3
xchg
inc
enter
push
insb
push
push
pop
xor
mov
fiaddl
call
repnz
leave
add
orl
nop
cmp
lret
dec
arpl
cmpsb
add
scas
inc
push
leave
mov
lock
cltd
dec
xor
and
test
or
and
inc
xor
mov
add
ja
xor
xchg
jnp
icebp
add
mov
or
lock
mov
sbb
and
mov
adc
sbb
movsl
push
in
cmc
sub
repnz
and
pop
inc
sub
pop
xchg
in
add
cmp
dec
mov
xchg
ret
loop
in
leave
mov
xorb
into
pop
cmp
popa
movl
mov
movsl
sub
xor
aam
sub
cmp
loope
push
dec
rcr
push
mov
lea
call
ficomps
adc
pop
adc
and
je
les
jge
pop
or
aas
bound
add
in
pusha
add
shll
aas
jl
add
movsl
mov
and
nop
lods
ret
cld
or
nop
dec
into
dec
gs
icebp
mov
dec
dec
pop
adc
nop
mov
daa
addb
inc
sub
jmp
add
mov
je
pop
adc
and
cwtl
insl
add
mov
cli
ret
push
push
int3
outsl
rorl
xchg
icebp
mov
sbb
adc
mov
scas
or
add
pop
testl
add
sbb
dec
jmp
dec
add
out
sbb
cmpsl
das
add
or
daa
dec
fists
add
mov
add
inc
in
cmpsl
not
lds
add
scas
call
enter
loop
lret
or
xor
hlt
inc
cwtl
dec
js
test
dec
ja
pop
les
inc
jge
dec
mov
push
ret
and
pop
stos
fsubrl
add
sub
rolb
fucomi
adc
jb
out
imul
div
mov
dec
hlt
add
push
outsb
cmp
mov
push
jno
aaa
add
lret
cmpsb
pop
mov
ja
pop
sub
inc
or
push
push
jecxz
icebp
cmp
xchg
mov
adc
in
hlt
jnp
lahf
in
push
xchg
jp
test
ror
add
mov
add
xchg
leave
in
xor
mov
pop
lods
mov
or
jae
mov
add
dec
in
push
mov
and
inc
out
test
cmpb
jbe
xlat
insb
adc
push
push
test
andb
out
aas
into
bound
pop
icebp
scas
shl
lods
int3
sbb
sbb
jge
leave
inc
filds
faddl
stc
adcl
call
call
add
add
mov
or
push
add
push
dec
fsubs
mov
inc
data16
and
mov
mov
jno
shll
sbb
pop
xchg
out
loopne
mov
dec
lea
mov
fcomps
jns
fisttps
add
mov
loopne
push
adc
scas
int
pop
test
mov
and
add
jne
packuswb
cmpsl
call
add
jns
pushf
int
sub
stos
jl
xor
popa
dec
mov
mov
sbb
and
xchg
cld
fsubl
notl
daa
jne
or
rolb
and
sbb
mov
mov
clc
push
data16
add
jg
push
ret
pusha
jecxz
dec
sub
lock
mov
movsb
rorb
cmpsb
dec
out
add
adc
inc
pop
add
adc
ret
sbb
insl
sub
mov
mov
xor
inc
or
sub
enter
or
dec
inc
xor
ljmp
mov
sub
dec
outsb
dec
mov
add
sbb
pop
mov
dec
lret
sbb
sub
js
pop
mov
add
loope
mov
imul
jae
and
jmp
fstpt
stos
sub
xchg
test
lcall
andl
adc
or
test
push
dec
or
sub
lods
fs
push
cli
in
inc
push
push
scas
add
lods
pop
test
out
mov
shl
rolb
or
mov
fcmovu
or
rolb
lds
sbb
adc
mov
or
xchg
xchg
add
mov
mov
andl
sub
lahf
pop
mov
enter
adc
sbb
pop
push
push
repnz
fs
push
adc
adc
sub
mov
outsl
mov
pusha
jmp
add
sub
dec
dec
pusha
add
test
xor
mov
jl
addl
lock
loopne
pcmpeqd
adc
adc
or
insl
int3
gs
or
xchg
sbb
mov
lss
xor
stos
adc
out
mov
pushf
clc
stos
add
shlb
dec
push
mov
inc
and
into
ljmp
cmp
enter
imul
dec
add
stos
fimuls
lahf
pop
mov
ljmp
cmp
sbbl
loopne
sub
add
sbb
fisttpll
shl
mov
add
int
add
mov
jge
or
mov
rolb
dec
dec
fldenv
and
lret
into
add
push
rclb
aaa
mov
cmp
add
xor
push
shlb
into
push
push
aas
add
out
jns
inc
pusha
pcmpeqb
imulb
push
sub
jb
repnz
stos
mov
fdivrs
rcll
mov
inc
orb
dec
bnd
add
pop
jle
movsb
add
push
push
inc
pop
xchg
mov
fcomps
ret
testl
insl
pop
sarb
andb
cwtl
sub
jae,pt
pusha
mov
lds
cmc
fstpl
lea
pop
outsb
mov
out
add
mov
aam
jnp
sarb
push
jne
in
orb
arpl
lds
cltd
rcll
inc
mov
adc
les
sub
mov
lock
add
js
lods
mov
push
push
dec
jo
mov
daa
aad
mov
add
or
xchg
psubusb
mov
jmp
mov
mov
pop
fisttps
sub
cmp
mov
or
sub
in
gs
mov
add
dec
dec
ds
push
push
or
hlt
aad
orb
in
sub
in
jmp
mov
push
in
mov
lcall
cmc
test
fistpll
rcrb
add
jmp
js
ja
push
shll
dec
cmp
mov
pop
popa
xor
and
int3
pop
ljmp
push
cwtl
adc
int3
add
push
xor
add
push
inc
add
pop
repz
lea
ljmp
cmpsl
loopne
jns
js
add
mov
jg
mov
std
iret
cmpsl
jo
or
add
imul
call
int3
push
fwait
pop
add
lock
lret
pop
or
inc
add
stos
outsl
pop
dec
mov
pusha
push
xor
insl
mov
aas
jle
push
addb
out
sub
push
sbb
rolb
xor
dec
sub
cmp
imul
and
test
pop
jo
cmp
pushf
icebp
push
mov
add
in
add
inc
push
je
mov
and
sub
lods
pusha
std
xor
hlt
pop
xor
or
nop
iret
imull
add
xchg
add
out
loopne
pushf
jmp
pop
mov
mov
call
icebp
call
push
jae
lock
in
sub
add
leave
sbb
out
dec
add
into
mov
shl
test
les
jns
add
xor
mov
out
int
aaa
lahf
sbb
aas
push
fbstp
push
ret
dec
mov
jbe
cmp
lret
add
dec
add
lcall
add
mov
lock
add
aad
imul
adc
jne
mov
adc
jmp
push
mov
shrb
xchg
pop
cmp
lock
mov
pop
push
pop
ja
cltd
inc
roll
dec
movsl
lret
jl
add
xorb
jl
mov
fwait
loope
lea
cmc
dec
sub
loopne
pop
add
push
fiaddl
lods
popl
mov
lret
pop
loop
test
jb
sbb
and
xchg
mov
popf
adc
hlt
push
sub
and
bound
add
adc
push
adc
inc
cmpsl
stos
xchg
jnp
or
or
xchg
nop
movsl
cmp
push
add
cltd
hlt
mov
stc
xchg
add
popw
inc
std
scas
and
ret
lea
or
jo
xchg
xor
mov
or
mov
lret
and
xlat
les
and
mov
sub
cmp
jecxz
jmp
popf
jp
add
enter
add
sti
clc
lds
int3
dec
cmpxchg
push
or
lock
add
jb
outsl
fcomp
push
lret
inc
jle
add
jmp
arpl
test
dec
lods
add
mov
and
add
mov
addb
roll
dec
je
nop
add
push
sub
or
jg
mov
rolb
jl
nop
data16
es
fiadds
xchg
sub
testl
fists
in
rolb
popf
cmp
xchg
pop
cmp
call
sti
dec
ljmp
movsb
mov
mov
cmc
data16
ljmp
add
cwtl
leave
or
pop
cltd
jl
add
lods
inc
jg
jge
ret
rcl
and
cmpl
test
mov
pcmpeqw
sbb
xchg
roll
add
xchg
jbe
jmp
in
adc
cli
dec
movsl
cs
int3
pusha
or
addr16
or
repz
and
std
ds
and
fisubl
mov
je
nop
add
stc
fwait
xor
stos
in
add
xor
popf
in
test
sub
pop
jg
ss
mov
js
mov
rcr
dec
inc
pushf
fbstp
inc
push
ror
sub
fdivs
les
or
imul
or
sbb
sbb
cli
incb
mov
lods
mov
xor
les
mov
aaa
push
sbb
enter
pop
mov
loop
and
test
testb
test
and
stc
shrl
popa
mull
cwtl
in
aas
sub
adc
outsl
pop
xor
pop
inc
bound
dec
xchg
inc
negl
test
mov
pop
and
xor
cmc
lahf
inc
mov
rorb
repnz
push
pop
fists
dec
push
adc
fsub
call
dec
mov
fimuls
sbb
xchg
and
pop
adcb
es
lods
sarb
or
repnz
add
mov
das
cmc
adc
mov
arpl
aas
test
shlb
gs
inc
andl
jmp
and
and
add
dec
repnz
or
ret
stc
mov
xorl
xlat
xchg
add
sbb
arpl
cltd
mov
mov
sarl
stos
add
jbe
add
lret
xor
pop
in
add
jle
dec
jns
mov
nop
xor
repnz
mov
mov
and
std
pop
xchg
sbb
mov
popf
rcll
push
inc
lds
adc
scas
mov
sbb
int3
leave
imul
ja
in
das
add
inc
inc
jmp
adcb
push
hlt
add
cmp
ja
das
add
dec
add
fisubl
popf
sub
cld
cmp
jl
adc
mov
cli
lock
int3
jmp
aaa
test
loop
jl
sbbb
push
lods
xchg
mov
cltd
dec
add
push
faddl
pop
outsb
sarl
lret
add
lods
mov
add
mov
movl
jecxz
push
add
iret
mov
push
imul
jmp
add
sub
xchg
add
adc
inc
pop
sub
stc
fs
and
inc
add
jmp
test
push
lock
out
sbb
sub
add
and
or
lods
jnp
call
fiadds
push
cmp
shrb
add
cmpl
add
insb
inc
cltd
push
imul
jnp
dec
sbb
call
and
nop
repnz
mov
movsl
test
pop
cmpsl
std
cmp
pushf
lock
call
inc
mov
mov
sub
dec
test
enter
pop
pop
or
or
sahf
pop
sarb
jbe
push
mov
das
xor
pop
shlb
and
add
mov
shlb
cmp
mov
js
add
in
aaa
xchg
mov
fildl
or
adc
add
incl
mov
pop
cmp
popf
mov
out
cmp
mov
pavgb
test
in
test
scas
lock
in
lods
pop
mov
or
and
les
mov
dec
cs
inc
add
xchg
out
flds
inc
mov
and
into
adc
mov
iret
les
aad
lret
dec
and
test
icebp
andl
and
test
mov
xlat
cmp
xor
adc
cmpsl
sahf
cmp
cmpsl
mov
or
add
mov
add
push
xchg
sub
mov
sbb
popf
test
flds
dec
jnp
inc
jne
mov
add
lock
lds
fcoml
dec
mov
add
xchg
push
sbb
and
pop
dec
fbld
push
jmp
fadds
dec
add
mov
mov
add
add
cmpsb
push
nop
hlt
enter
adc
lock
lea
add
test
and
jb
cmp
bswap
pop
add
push
add
sub
mov
push
cmp
cmp
stos
pop
and
mov
cli
inc
jmp
iret
adc
push
cmp
adc
stos
cmpsb
std
xchg
cmc
add
sar
cwtl
mov
dec
sahf
insb
jo
pop
sub
xchg
add
add
xor
jb
ret
push
fnstsw
inc
add
add
push
inc
icebp
mov
test
sbb
add
adc
call
add
xor
pop
stos
xchg
aas
dec
jns
rolb
sub
sbb
adcl
cli
sbb
pushf
repnz
xor
xchg
icebp
lret
push
dec
shl
pusha
stos
jns
xchg
and
mov
aad
add
int3
or
clc
push
add
sub
ret
or
lock
fwait
add
add
sbb
in
or
mov
xlat
xor
pop
std
sbb
mov
out
and
out
loope
les
xchg
xor
xor
clc
rdpmc
pop
in
hlt
mov
testb
sbb
cmpl
sub
std
pushf
mov
lcall
iret
sbb
jbe
enter
sbb
ret
cld
leave
nop
dec
pop
mov
inc
or
mov
sbb
xchg
std
mov
cmp
and
pop
pop
mov
push
add
ror
andb
mov
scas
out
xor
add
leave
inc
in
movb
cli
mov
lods
fwait
xchg
cmp
add
push
int
cmpsb
call
add
push
lahf
and
mov
pop
inc
test
icebp
add
sub
comiss
add
shrb
sbb
rcll
dec
or
scas
ret
xor
mov
push
sbb
jns
frstor
mov
mov
aas
loop
sbb
in
fadd
repnz
pop
push
je
fiaddl
stos
push
push
pop
in
add
addl
and
cmp
fmuls
mov
push
lret
adc
in
ret
push
add
inc
mov
lock
inc
into
xchg
pusha
adc
adc
jmp
add
out
mov
and
xchg
call
movb
mov
loop
lock
int3
add
cld
sti
mov
jecxz
testl
lcall
dec
in
pop
popf
loopne
jno
add
imul
adc
mov
movsb
add
push
sub
incb
je
adc
clc
repnz
in
lods
pusha
sub
mov
sbb
xor
addr16
add
sbbb
leave
pop
cmp
inc
dec
mov
in
ficompl
bnd
inc
push
ret
add
loop
int3
jle
sub
nop
hlt
add
jl
aaa
pop
scas
xor
mov
sbb
push
ret
inc
sbb
int3
inc
mov
sbbl
mov
mov
sahf
add
lea
jmp
test
or
or
nop
mov
add
pop
hlt
adc
or
lods
mulb
clc
test
pop
jge
in
pop
add
adc
mov
mov
lds
mov
fcmovu
pop
push
adc
test
outsl
jns
lods
jae
cmc
addb
lea
sbb
das
dec
lods
push
pop
add
pushf
add
insb
mov
cltd
std
ficoml
push
sbb
into
stc
add
cld
mov
mov
lahf
mov
xchg
jl
xchg
sbb
popf
inc
mov
cltd
add
orl
add
stc
xchg
lds
lods
sbb
mov
subb
out
add
push
add
nop
test
aad
mov
cli
xor
push
cld
add
fsubs
jl
sub
pushf
add
sub
sub
pushf
addb
outsb
cwtl
mov
add
adc
push
add
data16
sbb
iret
mov
add
sbb
inc
xchg
adc
popa
daa
inc
add
adc
stc
pop
inc
shll
rolb
test
sbb
and
outsb
jae
jmp
imul
rcl
add
push
ljmp
inc
dec
gs
add
pop
sbb
push
adc
xor
dec
add
lods
inc
sbb
mov
cli
sub
aas
aas
and
add
sbb
inc
lea
gs
pop
testl
xlat
movups
add
popa
ret
sub
ja
cmpb
shll
cmp
push
stos
pop
xor
sbb
add
dec
aad
add
adc
mov
dec
add
lds
xchg
add
dec
mov
icebp
lahf
scas
fildl
cmp
popl
push
push
xor
and
and
sbb
inc
add
jo
or
sub
cmp
pop
dec
pop
adc
add
in
push
mov
xchg
inc
and
test
dec
or
sub
push
pop
pop
testb
mov
mov
fidivrs
jl
and
jp
fs
pop
inc
jnp
pushaw
aad
in
add
push
xchg
push
pop
cli
inc
andb
pop
push
bound
rclb
out
mov
inc
pop
shlb
dec
fisubrl
xchg
lcall
mov
hlt
xchg
testl
leave
in
adc
add
dec
add
in
int3
test
push
jp
in
out
addl
sbb
mov
push
rcrl
pop
add
cmp
aas
jp
addb
sub
jmp
inc
sbb
fldl
inc
and
xchg
sar
imul
int
jmp
adc
add
pusha
mov
xor
rorb
jne
mov
add
out
mov
ret
insl
dec
cmpsl
and
lret
mov
inc
push
rcr
mov
in
jg
pop
sub
jmp
add
mov
insb
cmp
aad
add
dec
sti
sbb
pushf
add
fcomp
outsb
jno
mov
fxch
jne
rclb
negb
fwait
stos
cmp
movsl
inc
xor
and
stos
cli
iret
lret
test
cwtl
inc
add
lods
mov
aad
or
add
or
pusha
push
mov
dec
sahf
cmp
ret
es
out
add
rcrb
cmp
pusha
fmull
xchg
sub
mov
jg
andl
add
mov
add
or
lods
imul
sahf
mov
sbb
xchg
add
rolb
push
movl
and
je
add
jecxz
lcall
cli
mov
add
push
jo
sub
mov
jecxz
add
jp
fstps
pop
push
add
aas
or
loop,pt
pop
insb
fnstenv
movsb
jo
xor
jmp
cmpsl
pop
pusha
mov
lret
cld
add
imul
xor
jno
add
ja
inc
outsl
add
hlt
fsts
ss
add
imul
inc
xchg
xor
bound
pop
sub
nop
popa
add
rcr
jb
add
push
cmpsb
cmpsl
pop
scas
rolb
dec
arpl
lcall
sbb
push
xlat
jp
inc
xor
shlb
push
fsub
pop
data16
or
mov
and
push
mov
add
jl
lahf
xor
inc
fcmovnbe
jo
iret
jns
add
xchg
imul
ret
mov
mov
mov
lds
bound
dec
dec
shrl
pop
inc
jae
filds
fsubrs
mov
mov
mov
mov
js
add
sbb
daa
lock
mov
sarb
adc
cmp
mov
in
pop
fs
mov
adc
cli
sti
adc
xchg
stos
inc
les
outsl
and
mov
xor
dec
xor
test
pop
ljmp
into
xor
jle
push
xchg
add
add
mov
cmp
jo
jbe
es
ret
jge
adc
ljmp
pop
test
xlat
and
sub
mov
jp
add
dec
fistl
add
imul
or
lds
movsl
add
movsb
imul
xlat
add
add
cmp
push
pop
xor
add
leave
mov
sbb
lret
push
data16
xabort
add
push
and
jne
pop
push
adc
inc
sbb
loope
mov
leave
xor
and
in
sar
dec
lret
pop
add
pop
jb
sub
add
cmpsl
cmp
xor
or
lldt
hlt
out
pop
sbb
movl
loopne
and
add
aad
pop
sub
cld
adc
xchg
xor
out
sarb
pop
xchg
and
xorb
dec
cmc
cmpsb
add
xlat
lahf
push
andl
repnz
jne
sbb
push
mov
andb
in
add
mov
pop
sarb
lock
pusha
icebp
scas
aaa
sbb
sub
cld
mov
xorl
decl
jge
add
pop
lds
loope
mov
mov
jmp
sbb
inc
icebp
sub
sbbb
test
adc
in
je
xor
mov
cmp
dec
add
fiadds
adc
inc
pusha
paddd
mov
shlb
scas
sbb
loop
xchg
add
add
fsubs
mov
pop
mov
pop
repnz
lock
push
ret
inc
jge
add
fbstp
dec
imull
and
xorb
add
pop
int
ja
add
and
aas
jnp
aam
push
fcmove
sti
and
pop
xchg
outsb
jo
outsl
and
mov
cmp
dec
push
jmp
inc
loop
addb
xchg
in
inc
push
sub
lds
enter
inc
int3
loopne
mov
add
sub
and
add
cmp
adcb
pop
cmp
lret
mov
shlb
bound
adc
insl
arpl
push
jle
pop
sbb
and
jns
mov
out
add
and
dec
mov
jne
push
lcall
xlat
out
ret
fyl2xp1
cmp
push
sub
loope
nop
insl
icebp
jle
lret
ja
sbb
clc
fwait
inc
xchg
stos
pop
cltd
add
lds
les
addl
insb
insl
or
dec
pushl
xor
add
xor
jmp
xchg
add
mov
lea
mov
jns
movsl
sub
add
inc
xor
pop
add
sub
add
xlat
push
inc
in
sbb
mov
add
and
pusha
xor
inc
insb
into
add
dec
mov
orb
pop
mov
ja
jo
sbb
test
and
mov
imull
enter
cmp
lahf
add
mov
push
ljmp
xor
mov
add
jne
or
or
sub
repz
dec
nop
adc
push
mov
rolb
popf
xor
scas
add
adc
mov
pop
lahf
cmp
and
icebp
add
pushf
xchg
xlat
shlb
xchg
or
lods
std
aad
cmc
jnp
jp
add
popa
xlat
sbb
add
test
inc
mulb
pushf
dec
insl
repnz
mov
pusha
sub
in
mov
add
les
call
fsts
rclb
cmc
adc
dec
mov
ret
iret
push
adc
repz
popa
xor
std
js
add
mov
push
push
test
in
scas
push
and
inc
add
and
sub
outsb
mov
push
js
lahf
faddl
in
pop
mov
inc
sbb
mov
je
sbb
scas
add
and
push
hlt
andl
daa
pusha
sub
push
jle
cld
pop
pusha
clc
repz
cmp
add
stos
cmp
jns
cmp
add
pop
jmp
sub
add
iret
mov
mov
lcall
add
mov
mov
inc
lods
das
leave
in
out
add
fcompl
push
mov
add
dec
jb
int3
out
add
popa
test
in
pop
adc
xor
push
push
and
sub
add
xor
pusha
fwait
jge
ja
jnp
or
push
int3
std
scas
add
inc
test
shl
jo
jne
outsb
add
sbb
add
movsl
or
sti
mov
filds
pushf
ret
out
shrb
aad
pop
inc
and
jnp
lcall
sti
add
sbb
push
cli
sarl
pusha
mov
xchg
pop
pop
das
divl
nop
mov
call
fisttpl
add
js
pop
enter
mov
mov
ss
mov
add
mov
adc
lret
gs
nop
cmp
insl
mov
clc
cmp
add
andb
or
jg
push
sub
add
in
add
es
jno
push
cmpsl
add
fwait
movsl
mov
sahf
imul
cs
loop
imul
mov
inc
pop
sub
push
incl
push
into
push
aad
adc
add
movsl
add
xchg
js
aad
ljmp
clc
in
cld
aas
or
pop
cmpsl
add
pop
nop
lds
dec
sbb
add
cmp
mov
add
ficomps
scas
div
sbb
es
fs
mov
fcmove
cmp
inc
lea
push
add
mov
xchg
std
xchg
mov
add
adc
enter
lods
push
xchg
or
cmp
rorb
cmpl
dec
add
add
xchg
lods
cmp
dec
rclb
inc
jmp
mov
in
insl
aam
nop
and
repz
in
pushf
jle
pop
ja
xchg
add
push
mov
pop
ss
out
fwait
mov
daa
or
sbb
stc
cwtl
in
iret
icebp
push
in
pop
cmpsl
shrb
call
fcompl
icebp
sbb
mov
mov
loopne
mov
and
lods
push
xchg
push
ljmp
jbe
sub
clc
hlt
jb
jl
pop
cmp
sub
inc
mov
mov
adc
fnstenv
fidivrs
das
inc
imulb
sbb
add
xorl
icebp
outsb
test
imul
insb
pop
lcall
mov
cmp
stos
or
cmpsb
jmp
mov
ret
mov
gs
adc
sbb
loope
push
cmp
xchg
add
fistpl
sti
inc
ljmp
xor
ja
jno
scas
sbb
push
outsb
adc
mov
adc
jnp
gs
fs
sub
movsb
push
mov
mov
mov
inc
add
iret
cmp
repnz
sub
bswap
orb
hlt
mov
add
mov
mov
sbb
add
adc
mov
pop
lock
pop
pop
rclb
int3
xchg
cmp
inc
add
cwtl
test
dec
adc
push
xor
int3
jne
pusha
in
in
push
mov
testb
jae
add
gs
imul
add
and
fisttpll
movsb
lock
add
jg
ljmp
repnz
mov
xchg
shll
into
add
push
lock
das
daa
push
push
jb
cwtl
int3
add
cmp
add
and
cs
adc
and
int
sbb
pop
and
mov
aaa
add
xlat
loopne
lret
test
xchg
sarl
sti
pop
repz
add
jno
cmp
cld
add
int3
wrmsr
xchg
lea
sbb
push
lahf
adc
pop
cli
sahf
scas
and
xor
cmp
nop
dec
sbb
sub
and
andb
jo
dec
sarl
popa
and
mov
mov
sahf
movsl
movsb
test
adc
mov
push
sbb
iret
mov
adc
add
xor
in
cmpb
jbe
and
mov
sti
add
lret
inc
ljmp
push
pop
loopne
jo
add
jmp
lcall
cmp
sub
push
adc
push
imulb
repz
push
add
in
cmp
stc
hlt
test
add
add
adc
repz
jmp
pop
add
xor
xorb
ror
cmp
rcl
xor
jbe
mov
mov
push
adc
add
popf
dec
js
or
imull
jecxz
rolb
lock
mov
and
fldenv
js
sub
dec
add
int3
mulb
lods
and
sbb
dec
mov
mov
adc
jbe,pt
sub
or
jl
repnz
mov
iret
out
mov
dec
sbb
cld
test
jno
add
and
outsl
push
jp
out
adcb
aad
cmp
lcall
rorb
xor
sti
repnz
pop
xchg
pop
push
mov
das
add
rclb
xchg
and
dec
and
ret
xchg
jbe
add
xchg
sub
and
ret
loopne
add
or
stc
iret
push
movsl
mov
push
xchg
add
xlat
push
push
push
cmp
es
adc
xor
stc
xor
pop
cmp
stos
add
add
cmp
int
mov
jmp
add
ja
cmp
jl
rclb
inc
aas
aad
or
pop
mov
inc
test
dec
pop
stc
popa
and
add
test
stos
fwait
xchg
test
imull
xchg
mov
sbb
xor
xchg
insl
sub
loopne
or
shlb
jae
or
ror
sbb
movl
jmp
pop
ljmp
dec
cltd
push
dec
fcmovnbe
mov
sub
sbb
cli
sbb
cs
dec
adc
sbb
rorb
cld
popf
dec
in
rcr
pop
mov
cltd
loop
add
jo
dec
notl
pusha
sahf
pushf
stc
add
rcr
clc
shrb
and
in
inc
ss
inc
jmp
pusha
dec
aaa
cwtl
add
data16
jae
xor
std
inc
push
xlat
pop
xor
xchg
dec
call
mov
mov
mov
or
push
dec
xor
inc
subb
dec
das
and
jp
sahf
push
xchg
mov
add
lahf
add
fstpt
faddl
outsl
mov
push
scas
jle
dec
add
jo
out
ds
loop
test
out
test
adc
dec
pop
loope
or
add
jg
mov
and
into
push
adc
xor
and
sahf
std
es
pop
nop
push
and
mov
push
sub
cwtl
add
push
jp
out
fmull
add
or
push
push
push
stos
xor
dec
push
daa
sub
add
movsb
jnp
fimuls
scas
std
sub
mov
dec
xor
xchg
pop
mov
and
es
lahf
pop
lds
test
lods
sub
and
pushf
pop
add
and
push
hlt
jg
fldt
add
ds
push
inc
mov
push
dec
pop
sbb
scas
outsl
xchg
inc
mov
push
mov
aaa
rorl
ret
add
in
sbb
push
test
mov
cmp
xchg
mov
add
adc
add
pusha
inc
cli
mov
repz
push
loopne
or
mov
xchg
dec
out
sbb
pop
fcmovnb
leave
mov
and
daa
jmp
lock
lret
ret
push
roll
jb
js
movsb
das
hlt
pushf
add
cmc
sub
aas
flds
and
xor
add
mov
cli
xor
les
pop
inc
inc
add
mov
and
push
in
jo
lods
int
add
xchg
jno
mov
dec
xor
je
je
jae
movsb
add
push
push
shl
fistl
add
jp
push
fmuls
or
push
jae
aaa
cltd
aam
xor
test
shrb
mov
xorl
cmp
enter
into
mov
stc
add
dec
mov
das
xor
add
inc
std
ffree
outsl
testl
into
xor
xchg
ret
pushf
pop
xor
pop
mov
aad
adc
add
out
fdivs
jle
and
pop
lea
hlt
iret
and
jp
cmp
scas
cmc
jae
call
idivl
loope
loopne
dec
or
cli
jnp
clc
movb
sbb
sub
sub
out
or
rclb
push
pop
xchg
sbb
int3
inc
push
aas
into
mov
nop
add
xchg
not
lahf
jne
sub
ret
lcall
sbb
add
lret
shl
jmp
mov
das
dec
mov
sub
mov
imul
lahf
cmpsb
ja
pop
movsb
or
bound
xchg
add
sbb
sbb
loopne
mov
add
add
shlb
mov
push
jecxz
pop
daa
hlt
adc
mov
loop
flds
jbe
sub
xor
pop
adc
jne
jecxz
rcrb
adc
lret
sub
test
or
cld
fidivrl
and
mov
fdivs
push
pop
in
add
jecxz
xor
shr
push
in
push
bound
sub
dec
loopne
cmp
aaa
orb
cmpsb
add
xor
outsl
sub
or
xlat
and
imul
pop
test
add
out
adc
pop
mov
loope
xor
cld
cld
add
and
sbb
mov
lcall
sub
andb
push
add
push
adc
sub
popa
mov
ud2
inc
addr16
andb
cmc
pop
and
mov
adc
mov
cmp
inc
cli
ret
mov
or
sti
jmp
add
mov
je
dec
addb
fisubrl
lds
add
xlat
inc
out
jp
and
stc
xor
push
punpckhbw
push
aam
jl
jmp
sbb
nop
rolb
adc
dec
dec
aam
lahf
cltd
call
test
xor
scas
adc
ret
pusha
xor
pop
xchg
xchg
jg
ja
jp
cmp
sub
xor
sbb
add
mov
jecxz
loop
in
add
clc
test
andl
xchg
push
pop
add
jmp
adc
fsubrl
into
int3
cmp
add
mov
push
dec
fwait
clc
add
iret
inc
xchg
push
loop
clc
dec
mov
shr
jle
add
mov
loope
push
dec
call
add
cmp
mov
or
in
cmpsl
shlb
xor
or
add
jmp
in
das
dec
add
fstl
pop
andl
push
or
pushf
xor
cmc
shll
mov
das
pusha
es
daa
inc
sbb
add
push
mul
ror
cltd
lret
push
mov
add
pop
pusha
pushf
ret
add
inc
mov
xor
xlat
mov
adc
and
testl
rclb
add
sub
or
or
pop
fcmovnb
add
and
hlt
adc
movsb
jbe
in
sahf
mov
add
maskmovq
xlat
test
jae
add
jl
or
add
mov
dec
mov
add
jae
jb
pop
jne
pop
sub
cmp
fadd
shlb
je
pop
add
pop
add
jg
push
cmp
popa
cltd
aam
xchg
add
mov
enter
jnp
add
and
repz
or
dec
lock
pop
jno
fldenv
popa
inc
cmp
imul
push
and
xchg
fisubrl
int
xor
fstpl
mov
sbbb
pushf
or
or
aad
jle
pop
adc
cmp
jb
adc
xchg
add
popf
sub
daa
imul
xor
or
push
jp
cmp
xchg
popa
cmpsb
clc
adc
shrl
loop
lds
add
jae
dec
inc
xor
pop
into
movsb
or
scas
sbb
testl
nop
or
inc
ret
shrb
cmp
xchg
pop
push
je
jmp
lock
sub
inc
lahf
cmp
mov
mov
movsl
inc
jg
dec
pusha
int3
lods
xchg
inc
inc
pop
mov
xor
pop
and
xchg
nop
adc
pushf
add
ja
cs
sub
aad
cmpb
cltd
loop
sub
sub
mov
mov
dec
lahf
cli
lea
into
mov
decb
out
jno
xchg
xchg
or
add
pop
inc
subl
ret
push
popa
lcall
pop
insb
neg
push
xchg
aam
mov
mov
sbb
enter
or
and
rcrb
and
loope
add
xor
xchg
cli
clc
add
enter
and
add
push
lahf
and
roll
popf
or
jbe
fwait
sub
cmp
inc
xchg
cs
test
dec
adc
jnp
or
sub
jmp
mov
and
adc
int
cmp
push
cmp
cmpsl
mov
inc
xchg
mov
cmpl
push
loope
movsb
and
add
fs
mov
add
gs
cli
shlb
cld
adc
rcl
xor
test
or
lahf
push
or
mov
lock
fisubrl
pop
mov
les
and
mov
push
xor
rclb
xor
mov
dec
ficoml
adc
mov
adc
push
mov
xlat
lock
and
xor
test
add
push
leave
into
jl
negb
jle
pop
popf
xchg
mov
ret
leave
nop
in
or
add
mov
out
es
add
lods
mov
add
cld
cmp
push
jg
xchg
or
cli
sbb
fsubrl
cltd
adc
loopne
mov
insb
and
dec
enter
lcall
pusha
iret
xor
jge
jp
jmp
mov
ds
insb
sbb
push
xchg
mov
mov
pop
aam
loop
fldcw
adc
xor
sarb
add
aaa
push
jbe
loope
push
movsl
pop
pop
xor
pop
jb
add
sub
enter
cltd
or
add
adc
and
jg
addl
and
jo
movsb
xor
add
daa
movsl
iret
int3
mov
add
lds
aam
mov
shlb
icebp
lahf
int
dec
shlb
stos
in
lds
stc
or
test
cwtl
adc
pop
and
add
jno
call
xchg
cwtl
or
sub
pop
sbb
loop
clc
or
lea
scas
es
xlat
into
mov
dec
jg
or
orl
add
mov
mov
mov
fldt
mov
testb
popf
subb
or
dec
mulb
cmp
inc
pop
add
add
cmp
ret
and
mov
arpl
cs
add
ja
icebp
jns
adc
out
lock
ds
int3
xor
aam
push
add
insb
outsl
sub
mov
outsb
mov
into
sbb
movsb
xor
ficomps
add
faddl
shrb
and
add
push
shrb
nop
fistpll
mov
add
add
xor
sahf
xlat
int3
push
jae
sbb
pop
add
mov
addb
mov
xlat
pop
ljmp
das
and
cli
add
jp
ret
cwtl
or
pop
sub
cld
mov
mov
add
lods
fidivs
add
idivl
adc
cltd
mov
in
ret
mov
pxor
lods
xor
mov
inc
daa
mov
add
mov
dec
mov
movsl
sbb
add
jle
xor
add
mov
int
das
add
aas
stos
insl
stc
sbb
add
push
add
test
add
xchg
add
fwait
inc
cmp
decb
xchg
or
pop
add
pop
cmp
je
mov
mov
jne
xchg
fisubrl
inc
adc
lds
xlat
sub
test
add
or
push
cltd
adc
out
dec
shrb
rcl
and
jbe
adc
or
adc
adc
mov
cs
shlb
inc
and
into
repnz
sbb
out
pop
ds
jge
add
int3
sarl
cltd
or
clc
mov
mov
call
sub
dec
push
add
aam
rcll
sbb
add
xchg
pop
repnz
add
fnstsw
pushf
js
mov
adc
leave
mov
cmp
mov
pop
adc
dec
add
push
mov
hlt
in
add
inc
das
mov
mov
lods
sahf
ret
xchg
je
dec
jle
adc
add
inc
pop
sarb
add
push
pusha
enter
jecxz
imulb
dec
loope
cmp
fnsave
test
imul
dec
in
add
rol
xlat
jp
test
jbe
shrd
aam
nop
test
push
sbb
dec
or
pop
add
xor
sbb
cmp
imul
sarl
xchg
sub
fnstsw
fsubs
cmp
pop
mov
add
addb
push
sbb
hlt
arpl
sub
jbe
dec
arpl
fdiv
lea
lret
ret
mov
adc
lods
or
fcmove
jo
test
lret
or
push
loope
xorl
ret
add
int
and
orb
xlat
xor
add
pushf
or
ret
xchg
xor
loopne
lock
aas
je
push
pop
jl
mov
lods
dec
mov
lret
jo
pop
sub
mov
cld
add
xchg
sbb
xor
test
dec
push
xchg
xlat
rol
ror
xchg
add
xchg
out
sub
ljmp
lahf
push
xorb
add
push
xchg
fwait
mov
xchg
les
movsl
inc
mov
clc
shrb
or
jmp
bound
sbb
sbb
aad
xor
inc
outsl
dec
mov
das
inc
push
pushf
mov
clc
add
mov
xor
jae
mov
xchg
lret
and
adcb
xchg
xchg
call
fwait
add
sbb
mov
jg
push
dec
in
add
gs
cld
dec
add
jb
jle
mov
mov
push
cmp
sub
adc
jge
inc
mov
push
out
xchg
cmpsl
dec
cmc
add
sbb
andl
add
ret
sar
cld
and
cmp
fs
mov
adc
xor
imul
notb
ret
jno
jns
fbld
scas
repnz
or
jle
jae
popf
add
lea
hlt
push
mov
xor
in
push
adc
or
inc
cmp
cmp
mov
sbb
mov
pushf
stc
int
cmpsl
andl
in
and
adc
ficoms
in
dec
xor
inc
jecxz
jl
ficoml
sbb
push
outsl
jp
movsb
add
es
pushf
mov
sub
xchg
jns
or
lods
push
dec
xor
mov
ss
data16
pusha
add
sbb
xchg
add
stos
nop
repnz
and
cmp
mov
and
fisttps
push
dec
mov
daa
pop
xor
add
lock
cli
mov
addb
mov
inc
xchg
push
mov
lret
rol
or
mov
and
push
add
enter
mov
or
push
psubsw
sbb
mov
in
inc
outsl
rolb
and
add
push
test
adc
push
sub
dec
sub
in
cmp
pushf
pop
js
mov
adc
add
pusha
insl
cmp
and
sub
js
lea
jb
xor
inc
loope
add
es
dec
fisubrl
add
lods
or
push
add
in
rcl
fnstsw
fcmovne
dec
in
dec
mov
lret
je
ret
jmp
sahf
dec
add
mov
bound
lahf
add
mov
cwtl
movsb
pop
push
inc
add
test
movsl
mov
and
sub
sbb
pop
fs
add
sub
jo
xchg
push
mov
and
push
dec
daa
adc
movsl
add
daa
xchg
push
add
cmpsl
push
xchg
push
xor
loope
test
sub
sub
mov
arpl
dec
int
loop
hlt
push
shlb
push
jg
xor
mov
add
outsb
jge
add
mov
and
pop
push
add
mul
and
add
pop
add
add
dec
pushf
xchg
adc
js
fbld
repz
stc
add
shll
or
dec
mov
ror
popa
inc
push
and
cld
jno
nop
cli
add
jo
or
or
xor
lock
rorl
stos
xchg
mov
fcomps
test
adcb
adc
aaa
cs
lock
rcll
jle
lret
and
cmp
sbb
xchg
fs
in
iret
aas
sub
mov
mov
mov
sub
lahf
loopne
sbb
pop
add
in
imul
psubd
adc
mov
ror
inc
add
sub
xchg
mov
sbb
inc
out
jmp
icebp
fcos
xor
js
leave
or
lret
dec
sub
xchg
int
popa
xlat
cmpl
add
out
sbb
in
test
add
dec
inc
xor
cltd
mov
dec
add
push
pop
shl
add
mov
mov
loop
add
xchg
test
xchg
rolb
stos
xor
jp
xor
xchg
inc
mov
add
push
cmp
mov
and
pusha
in
imul
scas
iret
arpl
push
out
add
std
fidivs
in
dec
xor
mov
push
cmpsl
lock
les
xorl
mov
pop
rsm
cmp
stos
cmp
rorb
test
and
int3
mov
cmp
inc
iret
or
insb
push
or
test
add
xchg
xchg
fistps
push
push
out
aas
mov
xor
outsl
jns
adc
outsb
stos
mov
ljmp
mov
dec
sbb
and
mov
sbb
adc
mov
jecxz
jmp
pop
cld
xchg
cmp
sub
push
lods
mov
pop
cmp
in
sbb
cmp
sub
or
sahf
idivl
gs
mov
inc
and
cld
dec
adc
inc
incl
add
lds
inc
pop
sbb
pop
loope
jae
pop
ret
cmp
jne
nop
popl
xchg
outsl
xor
adc
lret
inc
xchg
out
sbb
call
outsb
mov
adc
out
mov
sbbb
pop
mov
repnz
dec
mov
mov
cmp
push
sbbb
inc
shrb
add
movsb
adc
test
je
cmp
fistpl
das
dec
ja
mov
cwtl
inc
adc
add
roll
add
jmp
add
mov
dec
cmp
mov
pop
inc
or
movsl
push
and
sbb
jo
xchg
test
inc
inc
pop
cld
lcall
aas
movsb
push
mov
and
jmp
adc
lock
push
incl
pop
xor
push
test
mov
mov
push
and
shll
enter
sub
inc
je
or
push
sub
and
movsb
iret
adc
jmp
test
push
fildl
xchg
pushf
jo
or
add
into
lods
sbb
int
push
lock
loop
cmpsl
add
pop
jmp
xchg
dec
mov
push
rorl
jns
push
or
adc
inc
pop
iret
aaa
add
mov
or
inc
jmp
jno
pop
shll
sub
cwtl
pop
lcall
cmpsl
in
test
cwtl
popa
int3
add
aas
jae
add
xchg
push
inc
test
lcall
loop
inc
xchg
cmp
std
mov
js
and
pop
or
adc
ret
sub
outsl
stos
cmp
pop
and
das
push
add
jno
stc
cltd
subl
mov
inc
add
add
xchg
jmp
add
in
arpl
mov
faddl
mov
hlt
pushf
push
loope
cmp
jae
push
adc
cld
or
sub
das
mov
popa
ds
std
and
mov
push
out
sbb
or
shl
adcb
in
bound
add
ds
or
dec
lds
push
scas
shll
test
es
cmc
loope
repz
es
sub
and
mov
inc
dec
cmp
cmp
and
lods
add
mov
test
sbb
sar
add
mov
fldenv
repz
loop
pusha
loopne
mov
and
adc
js
add
mov
ud2
test
adc
adc
push
xor
scas
fstl
adc
jmp
cmp
test
push
enter
imul
pop
mov
mov
mov
lods
add
movsb
add
xchg
scas
dec
cwtl
int3
add
je
sbb
sub
imul
les
push
roll
xor
pop
xchg
loop
inc
dec
push
repnz
ja
add
js
xor
pop
stc
xchg
rorb
fisubrl
sbb
mov
lea
or
adc
dec
pop
cmp
into
or
pop
inc
add
out
xchg
xor
incb
sarl
aam
in
push
adc
or
pop
into
scas
out
inc
mov
adc
andb
add
insl
in
pop
pushf
xchg
inc
dec
mov
dec
in
add
gs
lock
push
or
cmp
add
aas
testl
inc
pusha
fldenv
mov
hlt
mov
cwtl
dec
ja
adc
xchg
movl
lods
subl
adcb
add
jmp
and
popf
add
es
dec
in
inc
jae
movsb
pop
add
push
and
cmpl
call
in
xchg
xchg
jnp
or
addb
sti
jbe
sub
dec
insl
fildll
int3
ljmp
dec
fisttpll
or
ret
and
pop
aam
hlt
lret
pop
and
sbb
outsl
ja
roll
sub
arpl
pop
sbb
xchg
imul
nop
cmc
and
hlt
mov
js
or
pop
xchg
nop
test
mov
xor
out
add
popf
add
popa
es
add
jl
mov
dec
insb
add
iret
aas
int
inc
push
mov
jb
lds
aad
clc
jnp
xchg
fisubs
jo
add
push
jbe
pop
add
mov
add
jecxz
roll
push
xchg
shrb
hlt
pop
aad
fstps
loope
add
out
rcrb
lods
and
lods
je
jle
paddsb
sti
fimuls
stc
daa
sbb
push
and
jmp
mov
xor
add
add
out
and
mov
cmpsl
adc
xlat
std
cld
mov
das
decb
xchg
cmpsl
inc
cmp
popa
push
faddl
mov
dec
add
iret
cmpsb
in
push
pusha
or
mov
mov
add
out
flds
lahf
pop
loopne
outsb
dec
mov
jle
mov
dec
xchg
mov
mov
sbb
sbb
inc
lcall
outsl
pop
or
pop
loop
jl
fidivl
jmp
or
sarb
push
xor
fildl
mov
repz
cmpb
sub
out
cltd
dec
adc
and
dec
push
mov
test
cmp
into
or
add
push
call
adc
stos
roll
les
out
dec
pop
push
loope
int
jb
sub
sub
int3
inc
cmp
mov
fwait
push
add
neg
add
jmp
adc
outsl
cmp
es
jecxz
lahf
add
cmc
test
ss
push
mov
or
mov
dec
xchg
push
orb
lcall
xchg
sqrtps
out
inc
hlt
rcrb
pop
sub
inc
loopne
dec
jno
mov
loop
cmp
bound
pop
test
dec
lds
mov
jg
or
lcall
add
mov
mov
jns
push
dec
sub
xorb
ljmp
push
shlb
in
test
xchg
in
or
adc
xchg
xchg
xchg
insb
in
jo
nop
pop
je
lock
mov
pop
clc
add
mov
mov
or
out
add
lods
and
dec
inc
adc
in
ljmp
push
mov
ret
sub
scas
pushf
mov
add
jecxz
cltd
lds
nop
push
mov
xor
cwtl
sbb
test
cli
mov
cmp
inc
nop
pop
mov
xchg
popf
add
xchg
xor
and
sub
outsb
pop
out
stc
or
dec
or
hlt
ja
inc
fcoms
dec
btc
pop
jno
sti
add
ss
add
iret
insl
inc
nop
cld
xchg
add
add
fnstenv
in
push
in
xchg
aas
shrb
out
pop
jmp
jb
push
add
pushf
iret
js
cmpsb
shlb
lret
lods
cwtl
add
adc
pop
pop
mov
jp
mov
daa
sbb
pop
lods
jecxz
push
stc
std
dec
dec
stos
loopne
pop
xor
sbb
cmpsl
daa
sbb
pushf
inc
outsb
adc
lcall
pop
out
cmp
dec
scas
xor
test
mov
sub
pop
pop
pop
cmc
in
mov
rolb
iret
add
or
loopne
das
and
movsb
enter
nop
lret
pop
jp
inc
xchg
test
in
pop
xchg
add
scas
mov
pusha
pushf
mov
das
xor
pop
into
icebp
int3
js
lcall
push
mov
rcl
cmpsb
add
xor
sub
addl
adc
or
iret
sbb
incb
pushl
pop
out
shll
push
mov
add
push
or
xor
add
das
mov
insb
pop
outsb
sbb
jp
xchg
testl
xchg
adc
iret
jns
popa
adc
sbb
and
cmp
pop
push
stos
sbb
mov
leave
add
lret
pusha
jne
push
mov
jo
scas
cld
xor
mulb
and
fadds
mov
jg
dec
shll
dec
enter
add
xor
cmp
xor
lods
dec
rclb
sub
imul
fmull
push
addb
mov
sbbb
add
fimull
add
js
into
andb
imul
xor
cs
cmc
xchg
and
ja
add
push
out
add
leave
jnp
cld
push
rolb
cltd
xchg
mov
add
mov
xor
add
lcall
cltd
pop
jne
insb
push
or
mov
pusha
fstps
adc
add
cwtl
std
imul
xchg
shlb
or
rorb
out
mov
pop
lahf
or
subl
xor
or
subb
into
std
add
sbb
movsb
call
mov
inc
lods
cmc
aas
inc
push
or
js
adc
rep
dec
adc
jge
shlb
les
inc
pop
or
jo
int3
mov
movsb
ret
cmpsb
sbb
jmp
mov
cltd
mov
dec
xchg
dec
adc
jae
pushf
and
stos
shll
inc
repnz
sub
stos
loopne
fwait
adc
sub
nop
dec
and
mov
xchg
add
psubsb
inc
icebp
or
jns
mov
iret
adcl
push
ficoml
xchg
cmpb
aaa
sbb
xchg
mov
add
aas
inc
and
inc
add
subl
pop
movb
ljmp
dec
insl
icebp
xor
cmp
idivb
add
pushf
add
ret
dec
pop
outsb
fwait
mov
sub
sbb
dec
and
adc
inc
jae
xor
fildll
pop
out
add
fisttpl
cmp
shl
lret
mov
add
mov
sahf
mov
xchg
call
push
pop
push
mov
pop
ror
push
mov
je
test
push
jmp
jmp
call
addb
or
test
andb
and
outsl
inc
sub
nop
inc
arpl
mov
cwtl
ds
pop
icebp
loop
js
sbb
aad
sbb
dec
mov
jge
add
pop
arpl
lea
imul
aaa
loop
pusha
cmovns
jmp
adcb
jp
and
adc
mov
je
notb
add
popf
add
cmp
inc
shlb
lcall
imul
push
ljmp
cmp
adc
sbbb
cmp
cmpb
test
rorb
js
sbbb
pushf
or
add
pop
mov
in
stos
leave
sub
aas
mov
mov
adc
ret
loopne
xor
addr16
jo
sub
xorb
lods
pop
sub
pop
addb
inc
cmp
cwtl
xchg
xor
jecxz
loop
pop
testl
je
dec
mov
lea
and
cs
pop
xor
sahf
lcall
sub
lock
rcrb
inc
test
adc
sbb
enter
push
pop
adc
out
push
mov
add
ret
mov
jl
cmpsb
add
mov
or
loop
add
push
fcmovne
testb
push
imul
add
loope
movsb
dec
repz
push
mov
ret
sub
int
les
add
xor
cld
pop
aad
test
ret
mov
add
mov
sbb
rol
cmp
jge
add
mov
add
adc
inc
dec
mov
adcl
jae,pn
pop
pop
psubw
cltd
adc
cs
sub
add
push
xchg
movsb
sub
dec
and
lock
cwtl
add
jle
xor
ret
add
push
cld
shll
ljmp
push
or
xor
lea
jnp
movntq
inc
adc
pop
dec
xchg
add
test
test
lea
add
dec
cmp
xchg
lds
cwtl
aad
cmc
and
pop
sbb
int
rep
fs
adc
mov
pop
cmp
cmpb
lods
pop
add
mov
addb
jae
mov
add
add
clc
sub
sub
dec
lds
push
ret
cld
push
xchg
add
aaa
jmp
add
out
push
add
add
es
mov
dec
xor
lock
rcll
inc
mov
insb
or
or
sub
sub
add
jecxz
xchg
call
in
mov
loope
add
jnp
mov
lret
pusha
dec
jno
adc
pop
add
iret
push
push
repnz
das
pop
aam
xor
add
or
mov
push
push
xchg
test
inc
divb
cs
dec
add
sub
pop
push
outsb
xchg
add
iret
mov
and
fwait
sbb
add
mov
scas
push
jecxz
icebp
dec
subb
xor
cmp
sbb
das
out
dec
loopne
jae
add
or
out
scas
sub
insb
cmp
push
jmp
pop
repnz
jnp
cld
jns
hlt
lods
xor
sti
jecxz
cmp
push
jp
sbb
addb
mov
sub
insb
push
jmp
xor
mov
pop
lret
xchg
add
les
dec
in
xor
add
loope
and
mov
sarl
add
jae
push
sub
jmp
jecxz
cmc
or
cltd
and
lock
adc
andl
xchg
xlat
lea
sub
push
jp
mov
fstpl
sbb
stc
mov
lods
push
data16
sahf
pop
in
rorb
inc
jmp
mov
inc
or
add
in
mov
push
sbb
jo
mov
add
mov
xchg
mov
lret
add
jo
test
repnz
mov
bound
jnp
add
pusha
push
cmpsl
jmp
leave
lret
jno
or
loop
mov
sub
pop
dec
add
je
ret
test
pop
in
rolb
aas
shr
xor
jns
and
lcall
add
cmp
and
pop
addb
mov
and
sub
add
pop
mov
jmp
inc
jae
roll
xor
sbb
cltd
or
rcrb
and
jecxz
cld
cmc
add
es
mov
add
adc
adc
loopne
inc
rorb
cmp
inc
pop
ds
add
mov
repz
int3
or
or
gs
and
pop
fidivrs
sub
in
fimull
xor
cmp
push
sbb
or
adc
xor
notl
jnp
push
jge
and
cmp
xor
loopne
out
xchg
hlt
fwait
or
cmpsb
sub
fdiv
xchg
dec
insb
xchg
pop
add
stc
inc
pop
xchg
in
rcrb
add
in
xchg
mov
lea
cmp
push
lret
and
add
lea
add
mov
push
add
lret
push
push
sub
xor
sarl
scas
out
jge
push
test
sbb
push
imul
loopne
sbb
je
sbb
add
test
lahf
hlt
push
dec
mov
call
or
add
stos
jo
and
in
jb
and
sbb
xchg
scas
add
enter
dec
call
and
jb
or
mov
imul
dec
cmp
add
test
es
xor
or
stos
push
dec
push
push
aam
or
inc
sbb
or
inc
dec
data16
cltd
cs
xor
pusha
add
jo
movsl
jl
add
pop
aad
cmp
imulb
mov
push
mov
push
push
jae
ror
lods
loopne
das
xor
or
repnz
sbb
in
out
cmpsl
into
clc
scas
mov
loopne
and
fisubl
xor
inc
call
jae
sbb
bound
and
movsb
lock
mov
scas
jmp
sbb
push
dec
jmp
movl
xor
jo
mov
bound
aam
ljmp
mov
ret
bound
mov
sbb
adc
jecxz
loopne
mov
dec
repz
pop
and
adc
out
pushf
fbld
scas
jae
cli
push
movsb
test
xor
jl
jp
pushf
aam
call
add
int3
push
enter
add
cmp
pushf
je
mov
sub
lcall
idivl
xchg
dec
andb
gs
mov
push
repz
mov
nop
mov
or
add
cltd
mov
inc
add
jge
ss
mov
jmp
add
stos
cld
je
sbb
adcb
add
cltd
sbb
cmp
jae
dec
dec
pop
add
inc
nop
or
pop
add
andb
out
dec
pop
mov
mov
lods
stos
adc
lods
rolb
mov
jae
out
cs
or
add
lret
int3
roll
std
mov
subb
pop
shll
cmp
cltd
cmpb
dec
xchg
or
push
pop
mov
jl
adc
mov
mov
aam
cmp
cmpsb
nop
adc
fs
sub
cmc
dec
add
insl
pop
jmp
pushf
inc
jl
aas
cmp
bound
out
and
lret
js
push
aas
cmp
add
jecxz
add
xlat
add
xchg
dec
pusha
mov
mov
fldl2e
xchg
neg
add
adc
and
or
cmp
subb
rolb
enter
xor
push
pop
shll
es
mov
mov
xchg
add
xchg
jmp
and
dec
loop
int3
sahf
in
fwait
and
movb
sbb
push
iret
stos
jne
push
cwtl
xor
dec
push
lds
inc
push
aas
mov
addr16
shlb
cli
inc
shl
jnp
add
ret
push
lock
ss
dec
lock
add
or
mov
cltd
cmpsb
and
cli
addl
out
sbb
add
pusha
ficoml
nop
add
stc
pushf
add
cltd
xor
rcrb
mov
js
jb
ret
mov
repz
push
movsb
mov
inc
jg
push
mov
inc
leave
out
push
adc
out
dec
xor
mul
bound
andb
pop
sbb
mov
sahf
scas
push
xor
cmp
stos
aaa
ja
xlat
inc
and
dec
fcompl
int3
sub
sbb
dec
xor
mov
je
add
pop
cmc
add
inc
stos
xor
jg
mov
push
cld
sub
gs
dec
orl
cwtl
fs
jae
je
add
inc
or
jg
mov
movsb
push
fildl
xchg
jbe
push
adcl
add
rcr
jl
jno
pop
repnz
iret
fwait
int
fsubs
jmp
cld
arpl
or
push
cmp
pop
xchg
gs
mov
pop
push
sarl
xchg
xchg
cmp
add
jle
aam
add
ds
int
lret
imul
rcrl
fs
xchg
xor
fcomps
pop
or
pushf
or
mov
jno
xorb
or
fwait
aam
xchg
and
shll
cs
add
iret
xorb
and
jg
add
dec
mov
pusha
test
hlt
push
aad
sbb
je
mov
adc
mov
add
lcall
pop
mov
mov
mov
or
movsb
cmp
add
adc
add
fcmovne
iret
movsb
cmp
xor
lcall
sub
push
add
push
push
sub
xor
jl
xchg
cwtl
pop
push
add
dec
popf
fstpl
add
sub
add
lcall
lock
add
in
aaa
pop
andl
mov
add
shll
add
mov
xchg
sub
cli
sbb
in
mov
mov
sbb
add
xor
mov
je
xchg
and
add
mov
jae
add
ds
fsubrs
xchg
add
xor
inc
arpl
mov
aam
push
pop
and
pop
dec
inc
add
call
mov
mov
add
pop
dec
and
loopne
xchg
frstor
mov
and
add
pop
xchg
icebp
cmc
inc
push
sub
xor
shrb
in
push
xor
and
call
out
xor
inc
push
or
and
xor
sbb
arpl
inc
inc
add
push
inc
dec
inc
cmp
xchg
les
mov
add
leave
call
xchg
or
mov
ficomps
add
add
mov
add
rorl
or
mov
int
cmp
divl
pop
add
dec
sbbl
fsts
add
daa
mov
mov
cmp
sbb
pmuludq
xor
sbb
js
pushf
call
jecxz
movsl
sbb
cmp
and
idivl
imul
jb
jmp
cld
clc
in
add
pop
popa
adc
lods
add
mov
fwait
dec
push
icebp
insb
dec
or
adc
mov
mov
insl
mulb
adc
mov
jp
cmp
add
xor
sub
mov
cs
subb
mov
push
jns
adc
xchg
out
outsl
addl
out
daa
popf
add
mov
cli
add
mov
int3
push
push
dec
pop
cltd
add
int
fwait
add
mov
xchg
out
jns
enter
iret
or
push
jo
xchg
fs
pusha
loop
dec
sbb
xor
rclb
add
pushl
bound
aad
dec
call
sub
movsb
sarb
pop
fidivl
cmpsb
xlat
movb
js
mov
pusha
out
adc
xchg
and
lea
add
and
sbb
push
pop
and
jo
rol
jbe
daa
lea
sub
pop
lds
jno
dec
or
inc
ret
adc
push
mov
shrb
loop
xchg
mov
add
das
xor
lcall
mov
jno
cmp
xor
inc
aaa
dec
mov
mov
in
pushf
dec
repnz
hlt
orl
inc
xor
stos
dec
cmc
adcb
test
mov
add
xor
in
ja
adc
dec
inc
sbb
dec
iret
xchg
bound
adc
das
addr16
in
and
ljmp
sub
xchg
mov
and
idivl
mov
int3
int
cmp
jecxz
jno
add
jnp
imul
je
loopne
sbb
adc
jmp
or
add
add
mov
pusha
mov
loop
lcall
cmp
mov
jecxz
pop
icebp
int3
shlb
cmc
jnp
out
add
lods
dec
ret
aam
mov
rol
cmp
or
sbb
dec
jo
stos
mov
out
mov
and
repnz
jmp
das
icebp
mov
mov
incb
xchg
imul
adc
pop
push
addr16
and
mov
nop
lahf
cmpsb
jae
dec
cmp
sub
cmpsb
and
dec
daa
iret
mov
rclb
cld
test
sub
dec
sbb
daa
add
addr16
orb
cld
pop
jb
seta
daa
mov
sbb
gs
outsl
inc
jno
xchg
nop
and
pusha
jae
add
mov
syscall
gs
or
mov
shlb
ror
xchg
cmp
daa
mov
pop
subl
std
aad
xor
xchg
iret
mov
push
mov
mov
ds
xchg
sbb
and
cmc
je
jae
icebp
xchg
add
cmp
jno
jbe
cltd
cmpsl
hlt
imul
add
lret
xchg
test
adcb
sbb
xchg
jge
shll
je
push
mov
add
shr
jecxz
adc
test
xor
add
jmp
mov
ret
push
call
adcb
lods
pop
pop
out
push
dec
leave
mov
mov
add
sub
lret
adc
xor
adc
mov
orb
in
scas
cwtl
insb
dec
xchg
insb
add
sar
mov
lret
pusha
les
rcll
mov
jmp
xlat
gs
add
mov
in
cmp
sahf
subb
rcrb
add
fildll
add
mov
sbb
add
arpl
es
fadds
fs
mov
bound
add
cld
out
aam
lock
dec
sub
in
pop
cld
jmp
dec
sub
add
mov
push
add
rcll
je
cmp
and
adc
inc
xor
add
mov
jns
stos
add
add
and
dec
in
xor
ljmp
loopne
clc
pop
pop
mov
add
pop
mov
scas
mov
cmpxchg
popa
xor
adc
dec
pop
push
jmp
dec
mov
fwait
or
sti
sbb
add
nop
imul
xchg
scas
xchg
jne
add
sbb
pusha
popa
mov
adcb
cmp
pushf
pop
add
dec
les
cmp
adc
pop
loop
cwtl
sbb
cld
adc
add
fimull
pop
movsb
dec
sbb
xchg
mov
add
cmp
add
dec
xor
jecxz
cmp
inc
and
fidivs
pushf
les
xor
in
pop
inc
inc
imul
sub
loope
sbb
sbb
mov
add
in
jns
lock
push
rep
add
in
xchg
clc
inc
add
test
dec
pop
cwtl
pop
mov
pushf
add
sahf
jecxz
add
xchg
daa
sub
add
fstl
inc
out
popa
or
push
xchg
flds
sahf
je
xor
in
std
jge
and
aad
cmc
pushw
add
push
fdivr
jno
incb
pop
mov
jb
std
data16
mov
rolb
call
movsl
stos
jmp
or
nop
sub
aaa
pop
imul
and
dec
push
sub
xchg
lods
mov
fldcw
insb
out
faddl
in
inc
ds
pop
inc
les
add
test
insb
xor
nop
adc
xchg
mov
jno
into
dec
or
and
add
adc
test
xchg
cmpb
and
xor
add
add
dec
outsl
or
adc
pop
leave
in
mov
mov
fwait
mov
fs
das
add
sar
push
jmp
lock
and
xchg
xchg
test
mov
add
lret
sbb
mov
mov
icebp
mov
lods
mov
sub
movl
push
cmp
or
or
sub
sarb
cmpb
stc
loope
add
je
in
or
mov
lods
dec
arpl
js
xor
adcb
and
arpl
rolb
push
dec
adc
pop
jno
xor
int3
push
mov
jb
jg
sub
cmp
popa
and
dec
loopne
pop
dec
add
lcall
and
dec
inc
xor
mov
pop
add
outsb
lea
gs
add
out
jp
fldl
lds
add
xchg
add
data16
dec
femms
ljmp
lret
push
push
sbb
push
xor
aas
rol
jmp
xchg
in
int3
inc
xorl
clc
orl
pop
cmpsb
inc
aaa
movsb
jle
add
xchg
mov
sub
cmc
bound
cmpsb
lods
loop
or
jnp
sub
add
push
add
cmpsb
jp
jae
or
repz
jl
out
jae,pt
ja
orl
push
in
push
lods
add
mov
push
icebp
xorb
testb
dec
mov
cmp
cmpsl
fisubl
cmp
mov
lahf
inc
into
dec
pop
stos
mov
or
out
and
cwtl
std
lock
jns
mov
dec
aad
imul
mov
add
jb
mulb
cmpb
add
les
add
add
and
mov
mov
cs
push
repz
cmp
lods
rol
mov
push
cmp
mov
orl
pop
xchg
cmp
adc
mov
mov
cmp
into
push
jne
inc
add
cmpsb
ficomps
ret
or
shll
repnz
mov
pop
mov
sti
pop
xchg
mov
rclb
mov
pop
es
pusha
fs
shl
sti
and
pop
push
inc
cltd
adc
call
in
nop
insb
imul
mov
cld
aam
mov
sub
mov
mul
xorb
cld
call
push
jnp
stos
movsl
cmp
add
pop
mov
cmp
mov
bound
fdivs
xchg
add
stos
push
inc
mov
mov
add
notl
xchg
mov
outsl
jmp
and
add
add
pop
jnp
inc
inc
push
sbb
xor
mov
ja
sti
call
roll
cmp
add
push
test
mov
or
hlt
fwait
in
pop
add
cmpsb
das
lea
jae
inc
inc
jb
mov
and
jge
popl
sbb
icebp
mov
add
aas
loope
testl
inc
jae
cmp
sbb
or
rclb
lods
and
adc
andl
push
cltd
adcb
lret
in
les
cmp
je
xor
stos
pop
add
cmp
movsl
lret
cmp
gs
icebp
shrl
cmpsb
aaa
rorb
je
or
push
inc
mov
sbb
add
loop
cmp
mov
fiadds
add
and
fldt
mov
lods
fbstp
out
pop
loop
sub
fldt
je
adc
push
out
cld
call
sbb
xor
xchg
enter
stc
inc
shrb
add
pop
inc
adc
or
into
test
rolb
addb
cmp
pop
fwait
cwtl
jge
insb
or
js
add
add
push
jp
inc
popf
sbb
dec
push
icebp
lahf
xchg
add
push
sbb
xchg
je
mov
aam
jge
or
dec
cld
adc
loopne
sbb
cmp
ds
dec
lret
mov
add
insl
lods
pop
adc
xor
adc
fwait
push
dec
sbb
cltd
or
jl
in
add
gs
mov
je
pop
arpl
jo
rclb
adc
dec
out
add
push
add
fisttpll
sti
and
jecxz
rcrl
ret
xchg
pop
mov
loopne
cmc
xchg
pusha
jge
rclb
mov
pushf
pop
fsubr
pop
and
xchg
movl
adc
cmp
leave
add
mov
and
shlb
push
and
cmpb
or
insl
gs
push
sbbl
js
or
push
addr16
mov
aas
mov
iret
push
add
dec
shl
and
adc
jnp
in
xor
and
or
mov
xor
in
imul
je
mov
add
rep
sub
popf
pop
xor
pusha
push
loop
adc
imul
movsb
jmp
mov
int3
xchg
jmp
fnstenv
add
sub
enter
lods
cmp
cli
cmp
add
inc
lret
std
hlt
xor
jnp
bound
adc
adc
dec
xor
dec
jmp
adc
xchg
stos
fldt
pop
pop
mov
aad
aas
cltd
add
imul
pushf
add
adc
ret
in
add
push
sbb
jb
inc
jp
loop
add
stos
scas
mov
push
mov
push
gs
mov
mov
push
les
jle
sar
add
ja
cld
and
pop
dec
xor
inc
rorl
aam
xor
mov
push
lretw
xlat
xchg
ret
loope
xor
test
add
cmp
mov
push
add
scas
stos
data16
imul
lds
xchg
xlat
enter
pushf
out
addr16
pop
push
cli
pusha
inc
cmp
xchg
das
lock
imul
cwtl
stc
mov
and
lret
cltd
sbb
je
clc
adc
inc
in
icebp
and
std
dec
ljmp
int3
add
add
add
push
dec
add
dec
