cmp
cmp
xor
aaa
xor
adc
aam
xchg
daa
test
bnd
and
jne
inc
push
push
mov
fidivrl
jne
fcmovne
out
mov
add
es
sub
arpl
roll
push
icebp
lret
test
or
xchg
and
mov
or
cmp
clc
cmpl
and
rorl
pop
leave
xor
mov
push
stos
lds
insb
cmp
jae
shll
and
fs
out
xor
xor
inc
mov
imull
jae
test
mov
add
mov
das
mov
push
jp
cmpsl
push
test
jb
add
andb
int3
cmp
push
ror
mov
lret
sbb
iret
loopne
negl
adc
cwtl
mov
xchg
movsl
or
pop
loopne
xchg
jns
xor
and
cmp
cltd
xor
aaa
out
arpl
or
rorl
shll
dec
js
pop
lret
fwait
push
jl
movsl
bound
bound
shl
fisubs
les
test
jle,pn
cs
test
mov
pop
out
mov
cmpsl
lret
fistpll
pop
ret
push
leave
shufps
mov
inc
jnp
inc
inc
dec
jmp
push
jg
mov
rcrb
test
incb
xor
imul
in
ret
push
pop
negl
stc
in
xor
stos
xchg
and
ss
stos
in
jle
push
sti
push
add
xchg
inc
xor
mov
cmp
lcall
les
sahf
xor
mov
scas
adcl
je
ret
popa
add
adc
jl
push
inc
stos
pusha
dec
inc
xor
jl
sbb
aad
mov
inc
outsl
int3
lret
add
lds
clc
push
fldl
adc
out
lret
inc
mov
pcmpgtb
out
mov
out
lahf
mov
out
pushl
xchg
mov
lret
fdiv
jp
xchg
addr16
mov
jne
or
adc
mov
insl
mov
fiaddl
sub
sbb
or
mov
das
xchg
mov
mov
lret
test
xchg
stos
in
shrb
push
sbb
cs
pushf
cmc
mov
lods
jg
and
shrb
mov
mov
int
cltd
in
stos
jae
lahf
adc
pop
lods
inc
push
aas
add
scas
inc
cwtl
fcmovnu
jb
dec
les
mov
movsl
cmp
adc
inc
mov
lret
sbb
jo
adc
daa
clc
push
outsl
push
xchg
mov
int
insl
mov
aam
rcl
adc
xchg
ficoml
or
mov
aas
mov
add
push
ljmp
push
int3
mov
and
ss
add
mov
hlt
sbb
mov
mov
add
shrl
push
xor
mov
rcll
out
or
xor
mov
jae
jle
sbb
movsb
cmp
repnz
mov
scas
cmpsl
das
inc
call
mov
imull
xchg
jmp
dec
das
cmp
push
fmul
mov
lds
sarl
jnp
js
lret
mov
js
jle
adc
xchg
push
push
lods
arpl
in
iret
arpl
shrl
ljmp
add
push
inc
cs
add
rcrb
inc
push
adc
xor
add
cmp
mov
test
lods
jns
mov
insl
mov
cmp
xchg
outsb
add
cwtl
mov
out
out
lcall
mov
in
or
add
pop
sbb
mov
push
movsb
lret
repnz
psubd
into
test
adc
adc
mov
adc
pop
or
jae
ljmp
jecxz
mov
add
mov
bound
dec
xchg
or
fwait
repnz
in
xchg
lahf
mov
iret
movl
cwtl
adc
sub
movsb
pop
adc
imul
mov
jmp
dec
jecxz
test
in
call
outsl
mov
outsb
int3
jnp
mov
rorb
fwait
popf
jmp
out
je
inc
add
cmpb
mov
cld
xchg
inc
mov
adc
xor
xor
insl
insl
shr
add
mov
test
push
push
xor
cmp
xchg
dec
xchg
js
jmp
sahf
pop
adc
imul
fwait
sti
add
cmp
dec
xchg
mov
add
clc
xor
add
in
adc
mov
xchg
xchg
repz
xor
jb
hlt
sbb
outsb
mov
icebp
or
add
shl
pop
mov
add
mov
outsb
repz
sbb
lcall
ja
aad
adc
pop
cmp
jbe
sub
sbb
in
fidivrs
cltd
jle
cmpl
pop
mov
test
add
out
pop
xor
lock
stc
in
mov
jg
call
jle
cwtl
lds
sub
shlb
mov
inc
inc
lock
stos
arpl
push
xorb
mov
lahf
push
inc
rcrl
out
scas
sub
enter
sub
cli
je
push
mov
dec
ret
inc
lret
into
lea
clc
adc
inc
adc
xor
mov
in
pop
pop
in
movsb
ja
inc
pusha
popf
loope
lret
sub
mov
add
mov
mov
mov
lret
pop
xor
test
xlat
rclb
nop
test
in
cmp
out
push
and
xchg
or
pop
jecxz
ss
jp
mov
rcll
aad
xchg
dec
icebp
sub
jnp
out
cmp
sub
or
push
pop
push
dec
out
rcrl
dec
cltd
lret
dec
add
mov
lret
lods
sbb
iret
inc
imul
int
xor
xlat
jmp
fcmovb
sub
loop
cmp
pop
pop
imul
pop
outsb
out
frstor
add
mov
cmp
adc
dec
inc
dec
sbb
fldt
aas
neg
shrl
rorl
add
pop
mov
in
push
mov
in
mov
inc
clc
inc
dec
testb
cmpsl
adc
lcall
mov
sbb
and
sbb
mov
lods
rcll
call
cld
stos
cmp
or
dec
nop
clc
pop
pop
lcall
xor
movsb
aas
sbb
pop
lds
arpl
int
hlt
push
movsb
adc
xchg
int
in
aaa
int
nop
loop
aam
jle
and
icebp
or
mov
mov
push
add
mov
outsb
xchg
dec
or
fs
cmp
mov
cli
daa
fmuls
incl
inc
or
into
out
push
sbbb
loopne
hlt
mov
test
mov
sub
scas
test
pushf
and
rclb
repnz
repz
into
sti
inc
mov
mov
and
xor
xor
sub
and
sbb
sbb
sarb
push
adc
mov
push
add
in
mov
xlat
pop
mov
cld
jbe
push
arpl
daa
rorb
insb
add
gs
add
arpl
lock
cmpsb
cld
mov
sbb
jl
fnstsw
pop
scas
test
scas
scas
push
dec
imul
cmp
cli
call
cmp
jg
mov
mov
mov
sbb
xchg
cs
out
lcall
stos
stos
pop
add
cli
mov
xor
out
lret
call
aad
stos
data16
pop
jo
enter
sahf
jmp
insl
and
scas
ss
push
test
filds
repz
movsl
mov
mov
jno
add
dec
pop
mov
test
cltd
cli
test
test
imul
js
movsl
scas
icebp
lahf
mov
mov
sbb
push
xchg
sti
cmp
lods
pop
jnp
insl
sahf
fwait
clc
xchg
fsubp
shlb
loope
dec
adc
pusha
push
lds
les
in
sub
jge
push
lret
inc
add
cmc
jno
pop
or
insb
popa
int3
mov
or
mov
popf
and
xchg
shll
lahf
mov
aaa
mov
mov
mov
sub
pop
cmpsb
inc
in
mov
pusha
xchg
or
test
cwtl
addr16
leave
push
into
pop
add
add
sub
inc
movsb
jno
xor
or
cli
data16
mov
imul
xchg
pop
add
sarb
sbb
cltd
xchg
test
in
add
std
mov
pop
pushf
fistl
cmp
scas
sub
sbb
es
nop
pop
incb
mov
test
mov
sbbl
in
jmp
mov
jmp
stos
xchg
mov
jnp
bound
ja
inc
nop
ljmp
rclb
das
test
inc
lock
addl
cltd
movsb
pop
lahf
je
adc
je
xchg
loop
fstp
xchg
dec
mov
je
mov
push
scas
out
lcall
push
jmp
rclb
bound
jl
cmp
cmp
js
sbb
xchg
push
scas
adc
sarl
cld
jbe
ret
ret
neg
test
jl
add
iret
xchg
xlat
mov
fsubl
xchg
sbb
addr16
inc
jle
repz
ja
cltd
xor
pusha
push
pop
push
adc
js
sahf
mov
cmpsb
jae
cli
bound
es
or
sbb
sub
repz
enter
filds
cmpsl
cmp
add
outsb
fcomps
adc
add
jae
mov
test
scas
mov
pop
push
sub
repz
pop
inc
dec
dec
into
and
popa
sub
xchg
sub
mov
mov
sub
cmpsb
fbld
add
aaa
fdivr
icebp
insb
fisubl
fbld
dec
xchg
outsl
pop
roll
inc
in
leave
cld
push
jle
jno
dec
fwait
in
add
lds
cmp
cmc
sub
adc
inc
nop
xor
pop
push
inc
gs
push
add
xchg
loopne
push
pop
cltd
shrl
out
or
mov
add
repnz
jnp
adc
cli
ret
out
lcall
cmpsb
mov
jecxz
les
data16
rorl
imul
mov
test
adc
add
test
out
sbb
jbe
in
sbb
bound
nop
push
adc
push
xor
cmpsl
mov
lret
pusha
cmpsb
sub
push
inc
pop
test
or
aas
loope
and
in
inc
inc
mov
pusha
jmp
mov
or
ss
movsl
inc
pop
outsb
jg
cmp
ficomps
xor
mov
pop
add
aaa
fildl
or
repnz
stc
jne
in
push
in
lret
test
push
in
jp
jmp
or
adcl
sbb
adcl
rcrl
in
test
repnz
mov
leave
push
sub
je
xchg
mov
pop
add
shlb
test
arpl
in
shlb
or
movsb
xchg
sahf
and
mov
push
cmpsl
push
xchg
stc
jns
mov
not
bound
sbbb
mov
mov
mov
push
clc
leave
mov
arpl
jmp
inc
cltd
lret
pop
mov
cmc
in
jnp
cmc
insl
and
es
mov
pop
lods
shl
add
sbb
mov
mov
xor
sarl
cmpsb
mov
sarb
adc
and
add
je
scas
test
adc
repnz
nop
in
inc
ds
lock
push
push
sub
loop
inc
lret
adc
and
add
push
mov
jl
dec
rcll
mov
lods
inc
dec
jo
int
sar
fildl
lock
sub
push
dec
aam
xchg
incb
mov
xor
outsb
jb
lods
fisubs
pop
and
pop
jmp
lcall
bound
outsl
mov
sbb
aam
fadds
fstl
jg
movsl
inc
sub
shll
xchg
or
mov
inc
push
xchg
dec
stc
push
scas
jle
push
add
push
xchg
rcrl
jmp
cmpb
ficomps
test
cmc
jmp
cmp
das
jmp
ss
mov
in
or
inc
scas
in
dec
push
jmp
push
neg
push
adc
dec
sbb
add
fwait
outsl
jbe
mov
fdivs
inc
mov
enter
int3
mov
in
xchg
testl
aad
sub
test
cs
es
mov
icebp
xchg
cmp
mov
cmpsb
jecxz
punpcklbw
cmp
or
mov
mov
test
xchg
dec
test
and
xchg
xchg
push
xor
test
xchg
andb
movsl
test
ss
stos
imul
fmuls
insl
dec
test
les
mov
xor
das
pop
add
xor
fmul
into
xchg
aad
enter
xor
jp
mov
push
sbb
repz
jp
rclb
daa
pushf
push
push
mov
cmp
stos
jg
jg
imul
addr16
jp
addr16
lea
push
lods
movsb
ret
adc
in
push
ret
movsb
shrb
addr16
add
ret
insb
mov
inc
lea
jl
mov
js
add
gs
fcompl
xor
addl
push
sub
testl
inc
cltd
out
and
and
add
popf
les
sbb
loope
sub
add
jno
sbb
xor
jne
or
pop
lahf
rcrb
repnz
gs
add
leave
hlt
xchg
cmp
arpl
mov
dec
jne
dec
cli
adc
adc
and
sbb
cmpb
lods
enter
add
xchg
lcall
mov
loope
jg
repnz
sbb
testl
call
sbb
sbb
pop
out
pop
mov
jp
add
sbbb
aas
mov
testb
add
lods
insl
jle
clc
push
pusha
bound
popf
push
inc
sbb
lret
lcall
mov
aad
xchg
pop
jecxz
adc
add
fisubs
ds
mov
sbb
xchg
lea
aas
insl
das
mov
xor
jne
sub
mov
ror
sbb
subb
jbe
push
mov
loop
ss
cwtl
icebp
jmp
mov
cmc
ss
adc
jo
lret
dec
dec
mov
add
pop
push
add
pop
mov
clc
je
mov
test
daa
lahf
cmp
xor
scas
mov
inc
mov
pop
ror
rolb
sarl
jge
inc
ret
lret
push
push
mov
mov
out
adc
push
stos
sbb
xchg
sbb
mov
sbb
fimull
inc
popf
pop
jns
add
push
and
lods
in
inc
fimuls
popf
pop
cwtl
out
rorb
xchg
imul
mov
aam
jae
fwait
test
mov
out
fwait
pushf
testl
mov
and
push
pop
outsb
cwtl
ljmp
dec
add
je
sbb
jb
push
dec
add
mov
rclb
add
pop
in
push
inc
cmp
stc
dec
popf
inc
bound
jne
jmp
or
in
push
adc
rcll
popf
push
push
aam
fnstcw
out
stos
sbb
xchg
xor
shr
cmp
inc
out
or
mov
or
les
add
add
add
sbb
leave
push
xor
dec
inc
adc
je
lods
test
insb
mov
aas
arpl
add
fnstsw
dec
orb
cwtl
xor
adcb
xor
mov
aaa
add
scas
imul
xor
pop
stos
sbb
push
dec
xor
mov
xabort
imul
add
xor
lds
inc
mov
and
dec
lds
jge
hlt
xchg
loope
rcrb
push
lcall
mov
and
in
xchg
cmp
imul
test
scas
adc
add
or
shr
cmp
jge
icebp
lret
shll
pop
push
sahf
movsl
mov
or
xchg
mov
and
ds
jg
cltd
mov
sahf
and
js
xchg
cltd
rclb
jge
cmp
cmp
ss
cmp
pushf
stos
cs
adc
popa
xorl
jge
mov
ficompl
repz
dec
mov
xor
cmpsl
adc
rclb
stc
int3
inc
push
stc
xchg
jle,pt
sub
xchg
add
fwait
dec
xor
imul
ret
xchg
out
iret
clc
xchg
push
jl
push
std
inc
mov
inc
sbb
jno
pop
cmpsl
xchg
xchg
notl
cli
out
lret
pushl
fwait
push
pushf
dec
clc
jnp
rcll
and
dec
lods
add
sbb
or
int
pop
aas
loop
adc
and
movsb
lcall
dec
pop
pop
imul
mov
pushf
jbe
popa
cmp
insl
push
cli
prefetch
das
aaa
push
clc
cpuid
xchg
test
xchg
jle
cmpsb
push
mov
mov
repz
jae
mov
lock
lock
dec
cld
mov
frstpm(287
jnp
pop
leave
ljmp
jle
lock
push
fstl
in
out
je
add
in
sub
pop
pop
scas
sub
sub
sbb
pop
cmp
lea
std
stos
mov
lret
pop
cltd
jae
cmpsl
cmpsl
adc
jp
shlb
cs
bound
lods
jg
daa
lahf
inc
mov
lret
mov
cmp
scas
stos
mov
mov
ja
jl
cmc
les
sbb
sbb
fisubl
insl
or
and
xor
mov
pop
popf
ljmp
or
out
mov
sub
inc
dec
cmovno
lret
lret
jg
sar
cmp
in
pusha
inc
pop
jnp
imul
into
add
push
fwait
lahf
sub
dec
cmpsl
fdivs
push
adc
ljmp
outsl
mov
jmp
pop
test
lds
jmp
and
cmp
inc
jne
outsl
mov
inc
push
cli
ret
push
movsl
pop
outsb
sub
imul
push
fsubp
xlat
xchg
adc
jnp
movsb
pop
push
lods
push
lahf
into
xchg
es
add
sbb
mov
push
ljmp
aad
cs
mov
lret
aaa
ret
sub
pop
loope
jg
rcrl
sti
or
scas
adc
rcrb
jne
jns
jge
adc
inc
pushf
out
add
adc
in
push
cmpsl
lock
xchg
jmp
dec
sbb
clc
test
popf
mov
sbb
sbbb
outsl
adc
mov
int
stc
inc
in
insb
psubusw
out
pop
pop
xchg
sub
xchg
popa
sub
jno
fstl
jle
shrb
outsl
sbb
pop
sarb
add
nop
aas
js
push
lock
mov
fsubs
mov
sub
pop
popa
mov
mov
sub
sbb
adc
mov
outsl
insb
sbb
xor
aas
cmp
fcoms
hlt
mov
mov
cmp
test
std
out
push
fildl
sbb
aam
mov
jo
lcall
inc
and
mov
and
mov
mov
movl
mov
xor
jae
mov
dec
xchg
dec
push
jb
mov
adc
dec
and
test
add
dec
repnz
ljmp
gs
subl
in
inc
imul
mov
sub
out
mov
ret
jae
adc
movsb
xorb
stos
lea
js
ret
rol
xchg
mov
repnz
pop
into
test
mov
ret
icebp
mov
incb
cmp
mov
add
flds
gs
add
aad
add
inc
xor
push
scas
mov
outsb
daa
pop
movsl
pop
sub
loope,pt
or
adc
test
in
mov
mov
or
xor
jbe
jl
cltd
sarb
jg
add
push
cmp
movl
lret
shrl
xchg
pushf
mov
pop
sub
xor
icebp
add
out
xor
or
adc
inc
pushf
and
sbb
lods
cli
test
sbb
pusha
sbb
dec
xchg
in
ret
imul
stc
popf
inc
inc
inc
mov
imul
inc
loop
pushl
scas
bound
dec
inc
mov
aaa
filds
inc
lret
jle
sbb
repz
inc
pop
inc
add
out
or
mov
xchg
inc
xchg
xchg
sbb
or
jecxz
pop
mov
xor
je
and
movsb
scas
daa
outsb
jl
ret
cmc
jg
or
int3
xor
pop
xchg
add
orb
pop
lods
inc
xor
mov
shll
cli
sbb
jl
cmpsb
outsb
movb
dec
pop
inc
mov
popa
mov
loop
xor
pop
filds
sahf
movsb
pop
or
sbb
push
leave
jmp
xor
dec
enter
xchg
nop
jo
sub
mov
inc
pop
adc
pop
sub
add
cmc
or
cmp
jge
add
cmc
lret
idivl
je
icebp
js
and
push
sbb
rorb
sahf
pop
shr
pop
add
insb
imul
div
or
std
fcmovnu
xchg
mov
fwait
mov
sub
fisubrl
dec
pop
adc
jp
xor
out
mov
aam
xchg
fwait
and
dec
lock
test
aaa
jae
gs
fstpl
decb
neg
es
andl
aad
mov
jns
mov
cwtl
loop
ljmp
dec
adc
stos
scas
xor
fistpl
sub
push
lods
push
iret
cltd
adc
mov
adc
scas
mov
inc
push
dec
aad
mov
mov
mov
sbb
mov
imul
cmc
pop
aam
and
aaa
mov
daa
inc
xor
and
shll
into
orl
adc
mov
ljmp
lods
cmpsl
inc
push
inc
or
sbb
in
cmp
in
js
pop
data16
push
test
or
aad
sbb
lea
jmp
mov
fists
pop
or
jg
jmp
adc
sarb
cmp
lahf
push
mov
sub
mov
and
stc
inc
fmul
ret
xchg
push
cmpsb
out
stc
mov
cmp
out
fidivl
xor
lock
sub
push
add
fists
sub
clc
les
jecxz
and
in
stos
push
dec
jle
cmp
adcb
cmp
lds
mov
adc
xchg
cltd
std
test
addr16
xchg
test
fisubs
scas
das
enter
mov
lds
pop
jg
mov
mov
jns
lret
jns
stos
or
mov
hlt
loop
loope
movsb
rorb
pop
das
psrad
cmp
movsl
cmp
jl
dec
loop
aaa
mov
xchg
es
jp
mov
jecxz
and
fisubl
shrb
adc
lret
jo
dec
push
xor
mov
xchg
mov
arpl
insl
scas
movsb
mov
repz
inc
mov
add
ljmp
frstor
movl
add
pop
jnp
les
les
lods
pushf
js
mov
mov
not
addr16
jmp
test
outsb
add
sbb
fidivrs
fcmovnb
jb
mov
mov
data16
dec
mov
mov
incl
push
adc
inc
out
xlat
adc
dec
shll
xor
pop
cmc
into
lahf
into
lret
jle
inc
cmp
dec
sub
xchg
xor
fsubrl
sbb
xor
dec
jns
idivb
sub
push
std
inc
cwtl
std
pop
fdivrs
xchg
pop
fsubrs
mov
aad
mov
mov
test
sbb
leave
jp
jne
pop
in
int3
push
dec
sahf
stos
ficoms
int
pop
push
lds
outsb
cmpb
les
mov
cld
push
mov
imul
mov
mov
out
cmp
out
imul
jmp
mov
dec
enter
addb
sub
inc
lret
xchg
ds
leave
or
add
mov
or
lods
and
adcl
inc
fists
sub
or
mov
adc
jecxz
adc
xor
jne
stos
ja
enterw
inc
scas
fwait
cli
imul
jl
push
cwtl
repnz
inc
sub
inc
mov
and
xor
xchg
adc
movsl
data16
cld
dec
mov
mov
rorb
sbb
test
and
lcall
or
ljmp
lret
mov
mov
sub
in
into
aas
aad
dec
cltd
clc
mov
xchg
mov
roll
push
out
dec
je
xchg
mulb
mov
ret
rcrb
mov
add
and
mov
cmp
mov
and
cmp
xor
jo
inc
sbb
stos
push
push
mov
test
aam
ret
cltd
repz
inc
add
imul
and
scas
cmp
loop
inc
inc
shrl
cli
js
adc
mov
pop
adc
fstps
push
xchg
aaa
cld
mov
stos
inc
cmp
add
clc
inc
push
stc
pop
inc
adc
dec
test
div
and
lods
lods
sahf
or
and
mov
sub
ljmp
and
dec
and
ret
xor
inc
mov
fstp
lods
jp
andb
icebp
push
cmp
and
mov
ret
push
cmp
and
dec
cmp
cmc
fdiv
adc
lock
gs
inc
lret
cwtl
sub
push
out
lret
mov
ret
or
test
out
andl
pcmpeqb
rcl
mov
and
xchg
sbb
xlat
test
inc
and
mov
xor
cmpsl
xchg
dec
nop
int3
add
cmp
xchg
and
inc
push
adc
test
mov
lahf
xchg
pop
ffreep
fwait
test
repnz
jg
jmp
lcall
pop
addr16
cwtl
adc
sub
popf
jecxz
rcrl
ret
pop
push
mov
jb
aam
roll
cmp
push
cmp
cmp
cmpsl
cld
mov
test
jle
mov
mov
jnp
and
lret
fisubs
aas
mov
adc
pop
rcl
jle
cmc
sub
sbb
fldcw
and
mov
sub
call
imul
movsb
movsl
cmpsl
jnp
adc
xor
jb
arpl
inc
sbb
nop
sti
sti
dec
out
popa
mov
insb
pop
jo
inc
repnz
cmp
cmp
jg
repnz
es
jle
lret
data16
jae
test
mov
sub
ja
fwait
cmpsb
xor
enter
adc
testb
cmp
mov
sbb
lds
cmp
and
movsb
call
inc
imul
mov
clc
dec
popa
xchg
dec
pop
mov
sub
nop
inc
nop
dec
hlt
cmp
icebp
lahf
and
aaa
xchg
je
repnz
movsl
das
mov
lcall
add
mov
shrb
cmp
cmc
cmp
adc
and
mov
mov
inc
outsl
icebp
pop
out
push
cmpsl
push
scas
fadds
push
jne
or
test
stos
mov
insl
inc
xor
pop
test
fbld
pop
inc
ljmp
pop
mov
cmp
pop
push
outsl
inc
js
clc
or
lods
jno
lds
and
xor
sbb
aad
sarl
pop
aaa
shll
lods
xchg
adc
mov
fucom
xor
xchg
adc
mov
and
arpl
mov
data16
jl
sub
aaa
int
pop
ret
shrb
lock
cmp
sbb
push
inc
and
or
mov
mov
cs
pop
fwait
sub
pop
flds
test
or
jns
ret
shl
jno
clc
push
insl
repz
and
sbb
jmp
add
js
lods
enter
xchg
insl
cltd
sub
je
pop
push
push
repnz
jne
inc
pop
xchg
inc
cs
test
cmpsb
pop
invd
popa
scas
add
arpl
inc
inc
cmpsl
xchg
and
push
push
push
fdivrs
call
cs
inc
sahf
jno
outsl
mov
add
jl
xor
les
mov
sbb
add
jb
icebp
pop
aam
push
in
mov
out
push
adc
pop
fimull
pop
inc
pop
mov
xor
sub
ja
pop
sbb
jmp
cmpsb
and
xchg
or
push
test
mov
fmuls
movsb
dec
mov
ret
les
cmpsl
xchg
es
and
in
and
stc
fwait
popf
pop
aas
sbb
insl
mov
dec
cmp
lds
push
cmp
test
in
pop
movsl
inc
jno
xor
mov
mov
cli
xor
push
mov
repz
jp
push
xor
test
pop
xchg
xchg
ss
inc
jp
addr16
push
movsb
pop
sbb
push
adc
and
push
jnp
pop
adcl
jge
jne
jo
dec
inc
roll
icebp
ja
sub
cltd
add
jne
into
repz
loope
out
pop
sub
mov
cmp
push
aad
ds
je
jae
cli
push
mov
insb
ret
imull
loope
adcb
add
imul
xchg
jmp
xchg
stc
push
fldenv
pop
pop
jo
sti
stos
dec
out
inc
std
adc
cmc
cmpsb
ret
ljmp
dec
test
xchg
int3
iret
cmp
xor
mov
pop
mov
sbb
out
sbb
jle
inc
jg
push
pop
push
dec
add
lahf
inc
fs
or
adc
sbb
sar
adc
push
popa
xor
outsl
dec
inc
jnp
mov
push
push
aad
mov
inc
push
stos
mov
loope
inc
testl
inc
cmp
fmulp
sbb
xchg
popl
gs
and
gs
or
jbe
inc
loope
push
sbb
mov
cmc
pop
add
dec
ds
push
jne
scas
scas
nop
mov
shlb
shrb
paddsb
icebp
lods
xchg
imul
adc
insb
test
lret
in
inc
add
test
paddw
jl
mov
mov
data16
nop
mov
cwtl
sbb
and
movsl
add
adc
mov
mov
mov
addb
sbb
out
jle
cs
popa
jl
scas
mov
stos
sub
mov
pop
sub
fnsave
outsl
mov
dec
adc
shrl
cmc
scas
or
push
add
xlat
jns
add
cmpl
sub
int
jbe
loope
mov
es
xchg
rcrb
test
or
pushf
xlat
and
mov
lret
jecxz
mov
cmp
jno
lods
xor
cmp
and
es
dec
xchg
ret
in
adc
scas
pop
sahf
xchg
xchg
and
stc
xchg
sub
cmc
dec
sub
sti
outsb
test
clc
pop
es
arpl
iret
mov
mov
loopne
push
sti
cmp
mov
cmpsl
adc
mov
xchg
or
dec
inc
test
fmuls
mov
sub
out
pushfw
int
mov
arpl
aam
mov
xor
test
daa
sub
pop
rcrl
arpl
mov
jp
xchg
dec
mov
insb
insl
or
lds
into
adc
add
push
sub
jmp
fwait
cmp
adc
mov
gs
fisttps
stos
aaa
pusha
sub
cmpsl
mov
js
adc
and
lahf
adc
xor
lock
dec
outsb
xchg
dec
dec
mull
sub
or
push
jge
nop
mov
sahf
push
gs
mov
push
add
mull
and
js
imul
pop
push
dec
adc
in
in
outsl
cmp
sub
add
rolb
aad
mov
sti
outsb
test
loopne
inc
loop
testl
add
mov
div
sub
xlat
push
or
or
jmp
and
sarl
call
adc
loope
lock
enter
ret
mov
ljmp
pop
int3
imul
jmp
mov
shlb
idivb
or
daa
sbb
lods
pop
in
mov
pop
in
xchg
fcomps
mov
insb
js
dec
xor
cmp
outsb
xchg
adc
movb
adc
lret
stc
dec
adc
ljmp
cwtl
sub
xchg
ja
jne
push
sub
fidivrl
call
dec
lds
lcall
jg
loopne
pop
pop
inc
loope
ljmp
or
lea
inc
rolb
mov
mov
pop
pop
mov
vpminub
mov
xchg
xchg
push
adc
jb
add
adc
cltd
push
pop
jnp
mov
test
ja
daa
outsb
jmp
flds
insb
dec
jle
shlb
shr
hlt
lret
cltd
or
in
mov
jns
lock
out
dec
sub
jle
jl
js
ficoms
fcmove
fisttpl
ds
and
adc
mov
clc
mov
inc
xor
lret
lahf
gs
sub
negb
pop
sbb
das
lods
andb
outsb
adc
jo
pop
std
int
jle
cmp
pop
and
movl
ljmp
push
inc
mov
jmp
out
stc
shr
into
int3
scas
or
call
mov
push
jl
and
jb
pusha
test
outsb
imul
pushf
jne
push
ljmp
clc
push
jo
push
and
xor
push
add
jae
pop
cld
mov
int
mov
std
pop
enter
fisubs
in
pop
movsb
push
sub
jg,pt
xchg
jb
sbb
cmc
inc
sub
dec
and
sbb
cmp
cmp
pop
xchg
enter
pop
sub
mov
mov
sub
gs
popf
aaa
imul
bound
mov
mov
mov
mov
cmp
and
sbb
fmul
xchg
stos
inc
rcl
test
add
xorl
imul
mov
movsb
in
sbb
dec
loop
filds
movsb
mov
sub
add
lcall
push
dec
xchg
into
mov
adc
jno
addr16
xchg
popf
lods
or
adc
sbb
stos
jg
mulb
dec
push
lahf
push
sbb
fmuls
mov
mov
test
fiadds
sti
std
adc
lds
mov
jns
lret
cmpsl
lcall
out
inc
sti
lahf
mov
idiv
popa
out
xor
loop
xchg
jnp
sti
cmpsb
inc
jmp
sbb
adc
mov
movsl
inc
cmp
icebp
cmp
mov
lock
cmp
push
pusha
or
dec
fidivrs
or
arpl
mov
cmp
push
call
test
in
xchg
sarl
inc
lods
ret
inc
or
mov
js
cld
dec
xor
pop
aas
mov
sbb
pushf
divl
fwait
sub
js
mov
mov
jae
dec
inc
push
xor
cli
sbb
xchg
test
icebp
lds
sub
inc
xor
inc
adc
xchg
fucomi
jl
add
and
add
fwait
adc
cltd
push
popf
add
mov
jae
mov
mov
jns
jns
pop
mov
adc
mov
push
xchg
mov
int3
bnd
cwtl
mov
push
pushf
sub
mov
sbb
loope
rcll
mov
xchg
cmpsb
divl
mov
or
std
add
sub
repnz
je
dec
push
rol
frstor
xor
xor
sub
sub
sarb
leave
ss
xor
imul
gs
sahf
aam
cli
cli
repz
sub
pop
sbb
lea
bound
repz
xrelease
mov
mov
mov
arpl
inc
iret
pop
jl
sub
inc
frndint
mov
mull
or
sub
sbb
pop
xchg
rcl
sahf
and
decb
sub
adc
out
sub
repnz
jo
dec
pop
ja
sub
sbb
mov
je
push
iret
push
out
sbb
inc
xchg
mov
pop
fisttpl
fisubs
push
xchg
iret
mov
test
and
mov
xchg
insb
out
leave
xor
in
jp
adc
push
jae
mov
outsl
aad
cltd
imull
mov
cmp
pop
sahf
cmp
call
mov
push
cmp
mov
mov
mov
sub
jg
ljmp
mov
enter
cmp
cmp
out
data16
add
iret
or
fidivrs
mov
push
mov
push
shlb
hlt
pop
xorl
mov
ficomps
insl
pop
pop
sti
add
into
lret
fidivs
repnz
je
js
pop
pusha
in
clc
xchg
nop
hlt
xchg
stos
in
aam
xor
test
xlat
and
xor
jg
push
bound
aaa
mov
test
sbb
scas
or
mov
mov
sub
and
xchg
mov
lahf
shlb
push
or
sbb
and
pushf
or
lods
pusha
xor
jecxz
xchg
pop
cmp
and
out
lods
loope
dec
cwtl
loope
push
cltd
jp
and
xchg
and
sbb
sbb
hlt
addr16
pushf
adc
add
mov
mov
cmpsb
mov
inc
push
mov
ja
lcall
in
cmpsl
cmp
popa
xor
cmp
sub
loop
bnd
cs
sbb
popa
fsubrl
popa
stos
mov
dec
sub
xchg
pushf
bound
jne
inc
pop
adcl
xchg
pop
cltd
adc
dec
lods
ret
push
lock
adc
adc
cmp
dec
in
xlat
repnz
fadds
icebp
adc
sub
xor
and
scas
sbb
xchg
add
out
icebp
jp
pop
fcomps
outsl
fwait
shlb
mov
pop
jecxz
leave
add
test
or
add
xor
push
fs
cld
xorb
fidivl
sbb
in
lcall
jle
add
xchg
add
dec
movsb
jmp
jle
push
sub
add
aad
shr
imull
mov
fmull
dec
lret
leave
adc
pusha
inc
repnz
inc
or
push
enter
xchg
sbb
jo
push
and
cwtl
xchg
aas
imul
mov
icebp
punpckhbw
fnstsw
cmpsl
scas
pusha
sub
ds
ds
cmp
lods
mov
inc
ja
ljmp
pop
ret
in
jmp
aad
fadd
mov
ror
pop
mov
andb
mov
adcl
dec
loop
inc
jnp
xor
push
lds
jg
jge
sub
daa
and
push
aaa
inc
aaa
xchg
or
adc
jp
xchg
add
add
or
aaa
mov
lret
test
or
arpl
push
jo
movsb
cmp
leave
inc
jne
aas
pop
sub
inc
jg
nop
mov
out
or
push
xchg
outsl
out
std
xlat
dec
xchg
stc
mov
sarb
mov
addb
arpl
push
ljmp
pop
inc
xor
sarb
scas
sbb
and
addr16
lods
mov
sub
cmp
dec
dec
dec
andb
mov
lret
or
dec
int
sbb
lcall
xchg
mov
cmpsl
inc
xor
pop
jmp
hlt
xchg
mov
roll
add
cs
jns
mov
mov
and
aad
inc
dec
jmp
jno
inc
push
leave
mov
xor
movsl
data16
lcall
pop
ret
lahf
mov
rep
in
imul
scas
and
and
jmp
cld
jl
icebp
or
ss
dec
pop
popf
daa
arpl
ret
lret
xchg
test
iret
mov
sbb
outsb
lods
sub
xchg
jbe
test
sbb
jbe
and
stc
mov
push
jmp
imul
in
xchg
inc
jb
mov
dec
pop
mov
in
addr16
and
push
xchg
and
in
pop
push
idivb
sub
push
add
mov
dec
jmp
sbb
xor
mov
push
xor
cmpsl
mov
pop
scas
sub
push
test
sbb
jns
in
cmp
mov
test
dec
mov
ss
xor
adc
lret
mov
mov
mov
or
nop
scas
js
jns
and
sbb
mov
mov
out
xor
jp
xor
xor
jne
imul
clc
dec
push
dec
int
and
insb
out
xchg
mov
sub
mov
add
pop
cltd
inc
or
dec
jmp
lods
mov
cmpsb
dec
sbb
xchg
mov
push
iret
inc
mov
cwtl
lcall
fwait
cmc
dec
or
lods
xchg
push
pop
mov
mov
xchg
jmp
xchg
movsb
add
xor
mov
ja
and
push
rcrb
fisubl
cltd
adc
dec
xor
or
outsl
sub
rorb
stc
lods
mov
cmp
sub
xor
sub
in
mov
and
mov
push
in
sbb
leave
das
lahf
sub
lods
dec
mov
mov
add
scas
jp
xchg
inc
mov
shll
hlt
sbb
cld
add
test
sbb
cmp
add
inc
add
lcall
sahf
xorl
cmp
fwait
jg
bound
and
sbb
add
xor
sbb
mov
jg
sub
dec
jle
pusha
iret
pop
les
or
jl
push
jl
mov
and
nop
jecxz
push
mov
mov
pop
cmp
les
idivb
adcl
adcb
test
outsl
push
jg
insb
sbb
jno
testb
lcall
add
mov
mov
push
inc
cmpsb
push
mov
jl
aaa
les
mov
pusha
dec
aam
cmovbe
xchg
mov
subb
mov
mov
icebp
sub
dec
pop
mov
pop
push
lds
push
cs
sbb
mov
push
enter
push
cwtl
mov
cmpsb
push
lock
jp
push
mov
dec
mov
pop
dec
je
mov
pop
xchg
out
cs
mov
rorb
in
aas
pop
push
push
xlat
in
roll
mov
push
pop
xor
mov
push
push
jp
jge
out
mov
inc
sarl
sahf
xchg
jle
loope
cmc
and
subb
std
das
cli
out
out
into
imul
jle
std
push
gs
add
sbb
mov
push
adc
push
push
enter
mov
mov
pop
lock
ret
cmp
xor
rcrl
inc
scas
push
out
roll
jl
ret
clc
in
sub
dec
pop
divb
inc
inc
mov
not
add
sti
inc
dec
jge
dec
in
and
push
stos
dec
bound
inc
mov
repnz
mov
stos
clc
mov
sahf
fidivrl
and
dec
lea
bound
mov
subb
imull
pop
push
ficompl
insl
icebp
decb
adc
mov
in
xchg
sbb
inc
inc
or
js
iret
into
dec
cmpsl
cmp
notl
sbb
xor
xor
adc
aas
aaa
mov
sub
rorl
cwtl
mov
pop
inc
jo
sbbl
or
pop
push
cltd
sub
pop
push
mov
xchg
jns
popa
enter
xor
jmp
pop
frstor
and
inc
in
mov
repz
frstor
pop
sbb
mov
pop
dec
test
pop
psrad
or
in
leave
mov
inc
leave
cmp
popa
dec
push
xlat
rcrb
mov
into
inc
ljmp
mov
popa
cmc
arpl
cli
mov
cmp
pop
push
sub
shll
cwtl
addr16
add
fdivrp
push
cmp
das
cmp
int
repz
pop
insl
faddp
lea
out
stc
mov
repz
leave
fisubrs
outsb
lods
inc
add
mov
shll
pop
icebp
stc
je
mov
out
scas
sub
dec
fidivrl
popa
std
loope
mov
pop
movsb
repnz
fcompl
int
fs
xor
ret
movsb
popf
inc
jl
jecxz
mov
or
subb
movl
mov
mov
push
out
iret
in
mov
ds
out
fcmovbe
arpl
call
cwtl
xchg
dec
not
std
gs
outsb
fucomi
repnz
movups
iret
lock
cmpb
mov
hlt
cmp
subl
pop
loopne
loopne
mov
repnz
sub
ja
fistpll
mov
int3
add
push
mov
jg
sbb
cwtl
xchg
sbb
pop
out
mov
cli
sbb
lahf
aam
pop
insb
sub
inc
push
roll
mov
pop
cmp
xchg
popf
mov
sbb
hlt
or
push
mov
jle
add
cmpsl
insl
std
dec
popa
inc
dec
jl
outsb
push
testl
imul
mov
stc
jo
adc
leave
out
dec
test
orb
dec
mov
cmpsb
cmp
pop
and
mov
negb
ret
enter
xchg
pop
rcll
out
popf
int3
jnp
leave
cs
into
in
inc
daa
and
movsl
or
mov
push
push
mov
ds
inc
sbb
dec
adc
cmc
or
les
jne
shll
hlt
shrl
pop
pop
cmp
mov
mov
dec
inc
fs
dec
mov
mov
stos
sbb
cld
jns
cltd
das
mov
add
out
int3
jp
push
movsb
lahf
push
sub
mov
cmpsl
jge
push
and
push
notl
sti
sbb
mov
out
jne
insl
insl
push
mov
push
dec
mov
mov
lds
mov
repnz
dec
fcmovnbe
mov
jge
lahf
imul
or
enter
gs
insl
movsl
push
sub
cli
jne
test
sbb
xor
mov
xor
xchg
dec
nop
das
mov
push
int
mov
pushf
mov
das
fwait
push
outsb
inc
fsts
adc
jns
test
mov
out
mov
xchg
xchg
pop
or
jns
cmp
fwait
jbe
jb
cltd
jnp
jnp
fwait
leave
cmp
enter
pop
lea
ret
xor
mov
call
jnp
vpcmpeqw
outsb
cmp
sub
inc
mov
cmp
nop
inc
sbb
push
enter
cmp
mull
push
inc
aam
insb
leave
push
sahf
add
shrb
mov
add
push
mov
adc
adc
adc
out
mov
sub
outsl
rcrl
mov
mov
sbb
mov
xchg
add
sub
das
pop
mov
sub
je
pop
lahf
out
sbb
fsubrl
out
test
push
mov
mov
and
leave
cli
mov
cmp
cmp
pop
push
jo
pop
mov
mov
adc
mov
shrl
xor
or
adcb
xchg
cmpsb
inc
jns
sbb
jno
pop
lock
imul
dec
push
inc
mov
xor
jge
push
ret
outsb
das
sbb
jns
xchg
dec
aam
ja
idivb
sbb
aam
or
cmp
fnstcw
xchg
sahf
popa
lret
xchg
push
mov
shrl
lret
mov
lods
jo
add
mov
std
cli
mulb
pusha
imulb
push
daa
outsl
push
popa
movsl
push
in
sahf
decb
stos
cmp
jns
fisttps
push
xor
mov
icebp
inc
pop
pushf
mov
loopne
cltd
pop
xchg
loope
push
sbb
add
daa
mov
jge
cmpsl
mov
mov
mov
mov
cmp
and
pop
shl
dec
and
jno
cmp
xor
or
insb
or
mov
fs
dec
lods
loopne
lret
sbb
insl
push
rol
sti
push
cli
mov
xchg
pop
push
mov
mov
sub
jmp
jno
imul
sbb
lods
push
mov
push
push
sub
push
sbbl
mov
ss
fildl
push
or
nop
addr16
std
sub
push
or
or
ret
cmpsb
mov
push
call
mov
test
lds
dec
loopne
scas
das
cltd
and
lock
adcl
ljmp
push
mov
pop
rcr
or
jae
push
mov
pop
cmp
cmp
adc
jmp
lahf
xchg
jp
fdivl
pusha
sarl
cmp
sarl
imul
and
in
xor
aam
xor
lods
mov
jno
or
mov
pop
and
push
stos
mov
xor
or
test
add
je
out
xor
mov
fadds
pop
arpl
sti
adcb
push
call
mov
inc
mov
mov
ljmp
inc
pop
idivb
and
iret
repz
jne
mov
xchg
test
dec
out
insb
adc
mov
pop
sub
fisttpll
rcrl
add
mov
pushf
jno
mov
dec
repz
inc
daa
add
cld
testb
sbb
rcll
mov
add
test
push
mov
dec
mov
int
xor
out
sub
or
xor
ret
mov
cmpsl
loop
movsl
cmpsl
xor
mov
jno
mov
imul
mov
notb
popf
and
hlt
inc
push
lret
mov
adc
stc
leave
movzwl
repnz
dec
sbb
inc
sub
xchg
inc
cltd
push
mov
ror
inc
xlat
or
cmp
sub
pop
fs
xchg
insb
sbb
jno
xchg
ficoml
ret
int
mov
inc
sub
xor
xchg
rorb
cmc
pop
ja
xor
mov
std
enter
ss
lock
aam
lea
bound
jo
outsl
lahf
cmpsb
rolb
outsl
test
stos
mov
dec
inc
outsb
std
lea
mov
jg
mov
cltd
in
jge
mov
dec
shll
mov
mov
aas
cmp
cmp
pop
std
pusha
cltd
pop
cmp
aaa
pop
std
or
daa
mov
adc
sub
test
sub
sbb
sub
push
sbb
das
inc
imul
xor
imul
nop
gs
lret
cltd
xchg
adc
mov
sbb
sub
mov
repz
jbe
or
les
sub
scas
ret
dec
out
xor
sbb
dec
ljmp
add
and
sub
negl
sub
aam
mov
inc
fcmovu
xchg
xchg
or
outsb
add
das
push
sbb
out
push
cmpsl
adc
dec
or
out
and
xor
jo
fmul
mov
ljmp
mov
or
ljmp
cmpsl
sbb
repnz
notb
pushf
jle
aam
pop
rcrl
sbb
pop
xchg
es
aas
scas
das
pop
dec
mov
repnz
cs
mov
mov
rcl
mov
fmul
or
out
or
jbe
mov
mov
shl
fdivrl
mov
adc
dec
cli
or
outsb
mov
adc
push
icebp
xor
pusha
fcmovnbe
dec
bound
or
and
stos
pop
xchg
xchg
call
rclb
iret
ror
lods
cli
cli
repnz
or
dec
into
cmp
cmp
cmp
dec
pop
rolb
xchg
aas
jecxz
clc
rcrb
clc
cwtl
aad
cwtl
movsb
sbb
orb
subb
sbb
push
jmp
cmp
sbb
add
xor
mov
rcrl
cld
push
jno
movsl
xchg
adc
sbb
adc
jb
arpl
stos
push
cs
xor
xor
cs
adc
dec
lea
dec
aaa
jb
rorb
xor
scas
fiadds
jg
and
daa
inc
pushf
stos
mov
ret
inc
loop
fistl
push
dec
movsb
fsubl
mov
and
xor
xchg
pop
ds
mov
mov
sub
imull
xchg
pop
jnp
pop
adc
lock
mov
and
lcall
imul
push
cs
add
sub
iret
xor
sub
pusha
add
pop
xchg
ja
fwait
add
and
scas
pop
xchg
jmp
test
lock
insl
mov
mov
and
call
and
xchg
pop
mov
push
in
push
mov
inc
and
jae
mov
mov
pop
inc
sub
xor
pop
inc
mov
inc
and
adc
xor
push
addl
mov
outsb
jle
mov
test
pushf
fs
add
cmp
pusha
mov
stos
mov
outsb
rcr
xchg
jg
addr16
bound
lahf
out
xchg
add
and
lea
hlt
cmp
aaa
jns
mov
test
mov
fistl
or
pop
icebp
pop
push
mov
clc
jg
jmp
daa
pop
xchg
fsubs
fildl
ljmp
dec
stc
out
inc
enter
cmp
add
mov
cwtl
jne
add
cs
sahf
jae
dec
repz
xchg
lcall
cmp
mov
scas
or
and
and
iret
aam
cli
rorb
dec
push
xchg
push
mov
movl
sarb
cmpsl
mov
mov
pusha
cmp
icebp
or
enter
xchg
xchg
sub
leave
lds
mov
xor
sbb
aad
shll
xchg
mov
insl
negb
call
in
dec
push
aad
outsl
in
cmpsb
andb
xchg
insl
fisubrl
adc
or
testl
sbb
shl
push
gs
and
mov
imul
and
test
pop
jp
xchg
pop
fistpll
mov
cmp
pop
mov
cli
sub
cvtps2pd
mov
pop
sahf
push
repnz
pusha
leave
mov
movsb
outsb
and
aad
enter
mov
stc
cmp
mov
or
sbb
cmp
dec
xchg
xlat
cmc
mov
ja
icebp
or
mov
ret
adc
outsb
aas
sti
push
xor
add
add
fsub
and
popf
xor
subb
add
mov
jmp
cmp
adc
outsl
xchg
jb
sub
fildl
dec
in
iret
fistpll
fcomps
sti
dec
inc
mov
js
mov
or
cld
xor
dec
inc
inc
lods
mov
xor
test
enter
rolb
int
aaa
leave
lds
test
or
push
imul
sbbb
pop
sub
repz
sbb
jae
test
insb
imul
fwait
movsl
cld
push
or
mov
out
push
icebp
or
mov
push
push
fstpl
fdivp
or
test
sar
les
jecxz
or
adc
mov
push
pop
jecxz
inc
mov
mov
int
pop
popf
shrb
shll
cmp
mov
sbb
xchg
push
mov
inc
pop
sbb
pop
aaa
mov
fisubl
out
pop
fiadds
mov
dec
dec
xchg
hlt
sbb
pop
hlt
jnp
sahf
subl
jge
xchg
cmp
sub
pushf
sbb
mov
sahf
sbb
call
in
test
inc
bound
inc
jmp
mov
dec
test
test
out
push
adc
stc
fwait
and
xor
inc
fs
es
stos
push
sarb
lret
inc
jns
mov
imul
test
mov
push
lock
jge
sub
lahf
lock
ljmp
xor
movl
or
sub
insl
scas
mov
add
pop
subl
or
subl
js
adc
mov
inc
mov
pop
dec
cmpsl
movl
add
in
and
jle
sub
outsl
or
lock
dec
jl
inc
loope
inc
push
cmpsb
jmp
inc
test
sub
cld
mov
lcall
cltd
cmp
outsb
lods
mov
jnp
in
mov
movsl
push
sub
add
mov
cmpb
add
loope
xchg
lcall
fiadds
pop
insb
hlt
adc
decb
cmp
lods
adc
and
mov
ss
clc
cmp
sbb
push
xor
lret
mov
lcall
jmp
jg
aas
fsts
outsl
imul
rcll
movl
cmp
sahf
pushl
add
test
adc
xchg
stc
xor
adc
not
xor
mov
jb
fists
sub
stos
push
fcmovnu
xor
lds
xchg
lds
shr
push
test
jb
mov
leave
daa
jl
test
push
mov
xchg
je
in
sub
incb
jmp
sub
sub
xor
inc
jae
dec
movsl
pop
ja
mov
mov
rclb
dec
outsl
cmp
adc
sbb
out
xor
test
xchg
lret
es
jb
rcll
push
mov
nop
in
sbb
ret
and
inc
jo
or
test
pop
push
lds
subl
mov
in
aad
in
aas
arpl
lret
pusha
xchg
ret
xchg
in
push
adc
inc
stos
pop
je
sub
mov
and
lahf
and
mov
mov
adc
jno
or
pop
push
test
pop
push
or
fimull
jge
pop
push
lfs
cmp
mov
repnz
and
push
ds
cmp
rorb
jecxz
scas
sbb
lcall
mov
mov
testb
mov
mov
or
dec
push
insl
clc
test
lea
pop
mov
mov
out
dec
pop
mov
jmp
xacquire
xchg
xor
add
mov
fwait
iret
push
fwait
cltd
mov
inc
cmpsl
outsl
or
inc
decl
push
xor
aam
add
fistps
xlat
leave
fiadds
call
sub
movsb
or
mov
cmpsb
inc
ror
xchg
lahf
xor
sti
dec
xchg
aam
bound
jnp
in
cmp
dec
hlt
jne
popf
sbb
or
mov
mov
lcall
mov
test
cld
and
jl
rorl
jno
popf
pop
sbb
addr16
dec
mov
dec
xchg
cmc
mov
push
in
enter
or
mov
mov
and
jle
pop
out
adc
and
incl
scas
sbb
lret
xor
cwtl
loop
call
hlt
adc
pusha
mov
into
cli
mov
xor
aad
jb
push
add
aam
mov
pop
mov
lea
les
pop
sbb
out
push
addr16
bound
mov
pop
mov
bound
sbb
lds
addl
xchg
mov
sarl
and
push
movsl
jg
data16
adc
cltd
sub
cs
rol
and
xorb
xchg
int3
arpl
add
jno
inc
gs
jge
inc
mov
insl
xor
std
mov
dec
rcl
iret
sub
shrb
cmp
sbb
ja
xor
mov
mov
stos
test
cltd
dec
int3
inc
push
frstor
cwtl
scas
ret
push
pop
rcll
sub
imul
push
insl
push
sub
sub
jecxz
in
push
mov
addr16
test
cmpsl
sar
movsb
sub
cwtl
mov
lods
mov
shll
inc
mov
cltd
enter
cmp
inc
lcall
pop
pop
out
sahf
lock
aaa
or
sub
jno
out
mov
sub
fisubl
ret
movsl
sahf
pusha
adc
ret
dec
mov
xchg
add
andl
insl
fldl
adc
pop
jl
push
js
xor
dec
movzbl
dec
dec
stc
or
cmp
daa
and
insl
or
sub
jg
addl
repnz
jo
addr16
insl
arpl
adcl
gs
iret
out
aad
shll
mov
fwait
adc
and
jo
dec
sub
mov
xor
out
push
stc
add
adc
and
lea
js
push
dec
mov
aad
push
fsubs
add
sbb
call
lahf
and
or
push
xchg
jecxz
fdivrs
pushf
inc
aaa
inc
insb
test
jp
jecxz
cs
adc
movl
stc
scas
add
mov
fmull
adc
adc
rcll
js
fld
dec
lret
dec
xchg
call
push
loope
sbb
cmp
and
jne
cmpsl
sub
icebp
pop
insb
enter
ja
movsl
arpl
mov
mov
sub
jbe
orb
push
push
mov
cmp
loope
dec
out
dec
mov
sbb
shl
out
mov
inc
call
jge
jbe
cmpsl
or
inc
test
cmp
clc
leave
push
mov
dec
test
cwtl
adc
pop
inc
mov
cmc
push
pop
dec
sub
hlt
mov
rclb
sub
ret
cmp
std
jnp
cmpsl
sbb
stos
pop
push
dec
inc
cli
or
mov
adc
mov
gs
and
and
jnp
repz
daa
movl
jae
dec
sbb
nop
vmaxss
jg
mov
pop
lods
cmp
and
ret
mov
mov
mov
inc
fwait
jo
in
mov
jecxz
sub
dec
cld
imull
sub
xchg
jo
repnz
sbb
xchg
mov
jo
int3
sub
xchg
pop
lock
pushl
repz
flds
dec
jo
hlt
jge
pop
push
fiaddl
jmp
and
popa
enter
adc
mov
loopne
aaa
mov
orl
cwtl
insl
adc
jae
push
add
xchg
test
mov
push
mov
ret
lds
fists
sub
testb
fmull
mov
xorb
aam
mov
add
sbb
leave
and
push
push
add
std
aam
in
push
addb
jp
mov
mov
push
inc
push
push
jno
mov
add
pop
clc
daa
sbb
outsb
push
adc
xchg
mov
loope
mov
dec
scas
jp
mov
mov
and
xchg
test
pop
out
pop
inc
jae
mov
dec
aad
loope
push
push
test
popf
pop
sub
push
jb
jle
arpl
out
mov
and
icebp
cmp
cmpsl
mov
or
lods
add
adc
cs
sub
cmp
and
and
rorb
out
inc
xchg
insl
jge
cmp
pop
out
push
sbb
ljmp
mov
imul
popa
pop
mov
and
pop
push
sbb
aam
push
jne
rcrb
mov
imul
iret
jmp
sub
pop
pusha
xor
jae
xchg
dec
or
jle
lcall
stos
outsl
jmp
loope
outsl
xor
or
cltd
push
xor
imul
rol
mov
inc
sahf
cmp
test
mov
mov
popa
lret
daa
mov
cmp
or
or
lret
mov
pushf
gs
repz
mov
sub
rcrl
cltd
rcrl
les
push
cmp
sahf
mov
fldz
push
mov
add
repz
rcrb
setbe
imull
jle
sub
ss
out
ja
call
shll
imul
or
out
outsb
pusha
mov
int3
pop
xchg
lcall
jae
jge
cmpsl
xor
test
int3
dec
dec
mov
add
mov
cmpsl
pop
or
mov
nop
pop
dec
sub
adc
push
mov
les
call
or
lahf
dec
jae
push
dec
enter
scas
push
adcl
loop
xchg
adc
stos
mov
sbb
test
fs
in
lds
and
das
pushf
mov
test
pop
adcl
cmp
adc
push
arpl
cmp
outsl
dec
mov
mov
gs
mov
cs
pop
mov
int
out
sahf
push
cmp
dec
out
mov
test
pop
push
enter
test
outsl
dec
push
cwtl
ljmp
daa
add
pop
sub
inc
ficoms
jg
sub
and
cli
lahf
fsub
dec
push
add
insb
sbb
in
in
inc
aad
xchg
xchg
lahf
ljmp
icebp
ljmp
shll
fwait
sub
inc
dec
xchg
and
jl
and
push
fs
xlat
mov
imul
fsubs
repz
imul
stos
add
mov
scas
divl
lahf
ds
mov
jnp
mov
xadd
sbb
xor
les
or
xor
mov
repz
movsl
xchg
jl
sub
movsl
mulb
xor
stos
inc
mov
shll
push
popa
enter
je
dec
xor
and
add
cmp
scas
push
xchg
cwtl
xlat
or
or
mov
aam
outsl
jl
movsl
out
mov
fs
cld
jae
cmpsl
inc
mov
xor
in
inc
xor
cmp
loop
xchg
jne
into
push
xchg
shr
jge
inc
insb
jnp
sarb
adc
jb
in
push
enter
xchg
mov
lods
fwait
sub
inc
fdivrp
fucomp
nop
mov
xchg
mov
pop
push
lods
sub
lds
insl
flds
mov
push
mov
jb
movsb
cmp
icebp
mov
sti
push
in
cmp
xchg
out
dec
cmovge
push
into
dec
stos
std
aam
test
rorb
and
xchg
stos
fnsave
sarb
data16
out
les
jne
ds
bound
ds
cmp
into
jmp
adc
movsl
push
xchg
sub
mov
sbb
cmp
push
aaa
jecxz
mov
loopne
dec
sub
xor
daa
jo
addr16
dec
mov
adc
and
inc
adc
icebp
mov
jecxz
mov
into
cmc
ret
arpl
push
fstp
nopl
jmp
mov
loop
outsb
fnop
mov
lcall
into
jbe
jle
leave
mov
and
or
jo
les
or
mov
add
push
sub
lret
fcoml
xlat
jl
inc
jecxz
and
cmp
out
bound
jg
xchg
cmp
jp
dec
lret
out
scas
push
and
js
pop
lea
outsl
pushl
adc
mov
popf
add
sbb
sbbb
pusha
nop
cmp
sarl
and
push
sbb
push
jbe
int3
int3
and
and
push
adc
dec
inc
lea
and
sbb
and
stc
mov
mov
shrb
cwtl
fimuls
sub
sbb
mov
int
or
fcomps
and
and
dec
cmpl
ret
movsb
out
xor
pushf
fwait
lcall
mov
test
pop
cmp
popf
jae
mov
cmpsb
repz
cmpsb
testb
fcmovbe
pop
mov
mov
push
xchg
mov
dec
sbb
sub
sbb
rorb
mov
mov
inc
icebp
add
xchg
scas
lods
jbe
jo
imul
jbe
enter
push
mov
or
cmp
ret
cwtl
out
mov
outsb
sub
pop
adc
aam
sbb
ja
jl
out
ja
inc
xor
add
adc
mov
push
stos
cmp
std
push
pushf
inc
jle
popf
xchg
mov
mov
dec
xchg
les
lods
add
out
ja
jecxz
nop
mov
cltd
int3
adc
fisttpl
out
lahf
inc
loop
ret
inc
sub
jo
mov
movsb
sub
ljmp
or
rcrb
push
fidivs
cmp
icebp
dec
flds
int
push
sub
outsl
ljmp
jo
into
mov
movsl
lods
pop
mov
sti
xor
sub
or
mov
push
xchg
test
push
pop
out
shlb
clc
movsl
xchg
addl
add
jecxz
idivb
aas
lret
test
push
cmpsb
inc
mov
xchg
and
inc
push
scas
cmp
call
or
outsl
adc
in
mov
outsl
ljmp
adc
rorb
lds
cmp
cmp
adc
insl
aad
movsb
xchg
rclb
insb
and
insl
repnz
jge
add
xchg
cmp
xchg
jae
leave
aad
imul
jp
push
adc
xor
jmp
xchg
xchg
or
lods
jmp
mov
enter
jecxz
xorl
call
add
mov
push
ljmp
mov
jb
jne
jnp
or
xchg
cmp
in
lea
lock
xchg
xor
and
mov
cltd
cmp
push
ret
xchg
mov
int3
dec
popa
pop
pop
or
js
shlb
adc
loopne
adc
mov
push
mov
test
in
test
xchg
aaa
cmpsb
sub
pop
sbbl
in
sbb
loopne
repnz
fsubr
mov
xchg
mov
fsubl
xchg
xor
mov
inc
xor
xor
or
pop
orb
fisubrl
xchg
xchg
jp
hlt
xchg
adc
adc
mov
push
pop
cmpsl
xchg
aad
insb
push
push
mov
dec
xchg
bound
pop
leave
adcb
or
subl
sbbl
mov
xchg
js
aas
js
and
mov
mov
mov
mov
lea
add
div
xchg
and
fdivs
pusha
dec
mov
push
mov
pop
xor
cmp
mov
adc
hlt
xor
push
hlt
test
loop
and
sub
cmp
push
inc
cwtl
fldt
jp
pusha
push
xchg
xchg
sbb
xor
jp
add
pop
loope
dec
sub
add
mov
mov
or
clc
adc
repz
sub
call
jae
push
push
les
jecxz
rcrb
lcall
jno
test
sub
mov
add
mov
cli
shlb
jb
sub
cmp
cwtl
xor
ds
test
lods
push
or
push
mov
test
cmpsb
push
inc
mov
insl
iret
call
loope
xor
mov
push
std
mov
push
ljmp
jae
lds
mov
out
daa
jg
orl
cmpsb
dec
cmp
jmp
hlt
mov
dec
jno
jno
in
add
dec
scas
and
and
mov
mov
dec
in
mov
xor
pop
sbbb
popa
cld
in
jp
mov
xor
lds
and
sbb
fildll
mov
pop
int
je
cmc
loop
icebp
sbbb
shlb
add
jnp
fisubrs
jns
adc
xor
jns
fstpt
test
test
mov
xor
out
ljmp
fwait
xor
mov
arpl
ficoml
rcrl
fdivrs
iret
pop
xlat
jmp
xlat
xor
outsb
pop
fwait
jnp
idivb
push
or
xchg
mov
pop
sti
or
jp
cmp
test
add
xor
test
xor
or
sbb
jle
into
jg
inc
and
jl
outsb
lea
push
iret
add
test
aas
xchg
pop
push
mov
dec
jo
es
inc
cmp
pop
cmpsl
ja
xchg
xchg
add
or
sub
test
insb
jecxz
push
les
mov
jbe
and
mov
orb
cmp
adc
mov
bnd
inc
mov
addr16
xchg
push
rcll
jnp
insb
bound
insl
sub
outsb
cli
sbb
adc
nop
xor
mov
mov
div
push
sbb
cmp
lea
imul
jecxz
and
aas
repz
add
mov
daa
pop
rol
dec
lcall
dec
xchg
sbb
inc
ss
repnz
xor
scas
push
xor
fstpt
inc
mov
scas
fistpll
es
in
mov
jmp
daa
std
out
inc
mov
xchg
ficoml
ret
cmp
push
xor
lret
sahf
movsb
loope
and
xchg
ret
and
rclb
cmpsb
xor
lahf
fdivp
aam
std
lods
cmp
cmp
push
repnz
adcl
imul
sbb
lret
es
xchg
cld
jl
fstp
daa
ficoms
cli
fldcw
pop
inc
xor
outsl
movsb
xchg
jo
fs
out
pop
add
movsl
and
xor
popf
jns
sbb
cwtl
popf
rcr
divl
stos
jne
out
jo
outsl
sbb
sub
sahf
mov
adc
pop
js
mov
pop
adc
cltd
test
cltd
adc
cpuid
pusha
sahf
fldenv
jg
into
cmc
jb
rorl
outsb
dec
xor
subb
test
pop
push
mov
push
pushf
cli
das
or
mov
mov
repnz
dec
shlb
mov
add
fwait
jp
mov
jns
lea
inc
imul
jno
adc
je,pn
mov
xor
pop
xchg
popf
mov
jg
loope
fisubl
sbb
popf
std
shll
push
add
les
hlt
ret
pop
dec
mov
push
push
sub
add
cs
repz
fsubrl
sub
push
lock
aas
mov
in
test
and
movsl
nop
and
stos
fcmove
out
push
cs
lods
push
mov
ljmp
sub
mov
pop
or
and
push
test
sbbb
add
addr16
mov
das
loopne
adc
test
testb
lods
pushf
jbe
test
dec
shlb
inc
sbb
fstpl
cmp
lea
mov
enter
xchg
add
faddl
lcall
xor
jle
dec
push
loopne
adc
pop
gs
xchg
imul
jbe
out
xchg
jg
das
mov
test
or
add
lock
push
out
mov
mov
push
mov
pop
pop
stos
pop
pop
add
and
mov
outsl
and
out
in
mov
insl
dec
outsl
ljmp
arpl
mov
ljmp
or
inc
adc
jl
dec
mov
sbb
in
scas
push
out
dec
xor
fdiv
lods
jl
dec
add
int3
mov
nop
dec
jge
xchg
and
scas
lds
aas
aas
lret
lahf
es
js
jmp
mov
jle
xchg
cs
adc
test
add
repz
mov
cli
jp
loop
in
out
je
fsub
adc
xor
xchg
ret
clc
into
add
out
add
mov
ds
sarb
arpl
js
adc
mov
jmp
add
xor
jge
leave
sub
movsl
ds
fisttpll
mov
gs
sbb
sbb
mov
dec
mov
push
ljmp
ja
sti
pop
dec
inc
sub
adc
xor
aad
lret
push
daa
movsl
ja
sub
jns
loop
sbb
jno
cmp
mov
js
cwtl
mov
push
leave
xor
pop
in
adc
sub
or
ret
push
pushw
sahf
lods
adc
xchg
mov
push
inc
add
outsb
mov
xchg
gs
inc
mov
jg
inc
inc
clc
aaa
inc
sub
outsb
mov
shl
imul
xchg
aas
dec
aad
les
outsb
jnp
js
push
xchg
pop
sti
push
sbb
imul
push
pop
movsb
lahf
adc
or
dec
dec
cwtl
fbld
dec
out
pusha
sbb
fstl
jmp
mov
lcall
xor
pop
mov
pop
rep
fiadds
cli
inc
sub
test
add
add
fists
je
lods
xchg
cmp
jo
jge
inc
cmp
movsb
mov
xchg
das
inc
or
outsl
or
fwait
jno
jnp
push
add
fdivr
jmp
in
addb
cmp
lret
dec
dec
or
cltd
fwait
aaa
cmp
mov
ja
jp
pusha
sbb
mov
fcmovnu
dec
daa
pop
fidivrs
xchg
hlt
cmpsl
pop
mov
sbb
data16
call
and
sbb
lods
xor
cmp
pop
xchg
ds
lcall
inc
cs
jbe
xor
dec
movsb
test
jmp
mov
cld
call
xor
dec
les
fcmovb
add
lea
push
shlb
iret
sbb
ficoms
xlat
sub
stos
and
ret
xor
add
jbe
bound
xchg
pop
test
mov
ja
mov
clc
rcrb
mov
and
sahf
mov
loope
out
mov
xchg
das
fnstcw
adc
cmc
push
sub
inc
test
lods
push
or
push
aad
or
mov
or
xor
cs
or
outsl
mov
jnp
or
jge
mov
std
pushf
outsb
or
mov
outsb
push
leave
mov
stos
jecxz
sahf
or
jae
xor
ljmp
sbb
and
arpl
int
adc
sub
pop
adc
cmp
push
out
fcompl
or
clc
outsb
xor
mov
inc
adc
cmp
out
inc
pop
mov
repnz
loopne
fdivs
add
aam
rcrl
xchg
nop
mov
adc
xchg
adcl
push
mov
pop
jle
mov
insl
pop
cmp
jae
sub
in
push
mov
sub
daa
or
sti
in
mov
mov
aam
adc
xor
and
or
es
mov
cmp
lret
or
sub
jae
add
push
mov
xchg
aam
mov
andb
mov
out
fildl
sub
dec
jg
lret
pop
cmp
cwtl
aaa
adc
mov
and
fistl
mov
add
cmp
push
repnz
jecxz
sub
stos
push
imul
sub
sbbl
cmp
dec
loopne
std
push
sub
xor
pop
int3
ja
lcall
dec
cwtl
cs
loop
outsb
movsl
sbb
sub
lret
pop
shlb
xchg
or
cmp
dec
mov
xor
mov
cli
das
dec
mov
add
ret
in
add
sub
fstps
sbb
add
pop
sbb
jecxz
xlat
dec
inc
xchg
mov
loopne
inc
and
dec
idivb
outsl
shll
loop
mov
xor
gs
mov
in
in
push
xor
ss
les
jg
xor
mov
mov
cmc
aaa
xor
aaa
fldenv
push
sbb
pop
mov
or
jmp
lods
lahf
xchg
and
es
mov
push
aam
xchg
das
mov
inc
outsl
sbb
je
sbb
test
pop
push
in
in
dec
mov
in
push
mov
adc
push
or
lcall
test
lds
sbb
xchg
jnp
ret
add
pop
or
xchg
or
sbb
or
and
stos
jle
sbb
add
loope,pt
lods
sub
pop
mov
dec
pop
ss
sarb
pushl
jb
imul
sbb
jle
dec
push
xchg
cs
xor
or
dec
outsl
enter
pop
jne
mov
in
lgs
xchg
jae
lods
icebp
push
sub
or
push
cltd
xor
addr16
mov
int3
xor
lcall
outsb
lds
pop
popf
ljmp
ds
sub
mov
xor
loop
push
ss
scas
and
hlt
add
xor
mov
and
jecxz
cwtl
loop
movsb
decl
sub
loopne
std
xlat
call
and
xchg
je
xchg
inc
cs
push
lods
inc
adc
arpl
aam
xchg
out
jg
push
sub
sub
dec
test
jno
aaa
mov
xor
scas
test
mov
into
mov
push
addr16
cmp
les
out
adc
jno
adc
sub
jmp
lret
clc
cmp
cld
xor
cltd
and
add
inc
mov
inc
into
sub
add
inc
xchg
pop
sub
bound
idivl
insb
adcb
fcmovu
stos
push
in
test
cmp
jb
mov
loopne
cmp
cmp
lret
mov
or
fildll
popf
mov
outsl
dec
push
test
pop
add
cld
repnz
pop
adc
enter
stos
mov
fcoml
into
negl
cmpsb
or
mov
lock
push
add
rorb
sbb
pusha
pop
lret
loop
pop
fcmovnb
daa
add
es
sbb
dec
inc
insb
sbb
out
push
cli
inc
pushf
mov
mov
jb
mov
or
add
sbb
cmp
add
mov
ja
hlt
mov
sub
mov
mov
inc
and
in
sbb
popa
and
out
test
and
leave
adc
mov
ret
cmp
dec
jae
jns
xor
push
mov
lret
and
rol
adc
inc
xchg
into
repz
fs
test
and
jno
pushf
sahf
push
cmpsl
movsb
fwait
daa
cvtps2pd
mov
imul
out
inc
andb
cmp
fs
out
mov
mov
gs
push
inc
test
jb
xor
das
push
cli
lret
dec
ss
out
lds
xor
int
inc
add
ds
sahf
mov
pop
inc
arpl
ret
inc
adc
lods
ret
lds
sub
es
jno
imul
shl
fisttpll
data16
lods
inc
or
aad
cs
hlt
je
mov
push
push
aam
stc
xchg
iret
jae
push
fs
sti
out
sbb
push
dec
pop
xchg
add
adc
lahf
xchg
dec
call
ss
xchg
aas
inc
sti
fistps
outsb
mov
stos
test
sti
sarl
mov
lret
sbb
sub
sub
clc
mov
jp
ja
jae
xlat
and
adc
ret
cli
jg
xchg
dec
jae
hlt
mov
pop
add
and
js
out
rdmsr
sub
xchg
push
sbb
and
pop
shr
inc
das
push
repz
std
lcall
ficoms
mov
imul
nop
data16
lods
jns
push
mov
jns
fcmovb
clc
cmp
push
xor
pop
sbb
mov
ja
test
push
and
push
cmp
mov
fwait
push
out
adcb
lcall
jb
fstl
jns
pushf
sbb
jp
xchg
xor
ss
mov
and
jge
sub
std
lret
push
sub
stc
cmp
push
adc
stos
inc
shlb
int
sbb
out
rcrl
insb
push
clc
pop
dec
push
xchg
jns
mulb
xor
pop
add
jo
mov
lahf
jae
std
fistpl
enter
lods
cmp
jne
mov
push
sbb
ret
xlat
scas
push
inc
nop
cmpsb
cmpsb
negl
push
mov
jp
pop
push
ljmp
pop
andl
and
ret
cmc
movsb
ss
negl
int
bound
pop
sahf
push
push
inc
pop
xor
repnz
js
lahf
add
int
xchg
aaa
nop
xor
jb
pop
xor
outsb
mov
scas
mov
mov
add
pop
shlb
test
fnstenv
sub
divl
push
xchg
push
adc
xor
jb
push
test
dec
xchg
adc
cmp
cmp
push
pushl
adc
inc
mov
das
mov
xchg
or
jno
int3
xchg
fwait
pop
fcmovu
push
outsb
sahf
aam
lock
sbbl
sbb
xor
js
test
push
std
dec
jmp
and
imul
jecxz
pop
iret
hlt
mov
pushf
push
sub
xor
push
add
les
mov
push
idivl
out
add
adc
xor
test
sub
rclb
loop
cltd
clc
iret
push
push
pusha
inc
outsl
jecxz
or
ret
add
divb
sti
push
jbe
fistpl
pop
and
and
cmpsb
lret
jmp
addr16
pop
xchg
sbb
push
adc
icebp
je
pop
cmp
push
cwtl
out
pop
jne
inc
or
sub
lea
mov
lds
jne
fmul
jl
sahf
loop
test
inc
push
icebp
push
cmpsb
daa
xchg
mov
pop
xchg
mov
arpl
mov
pop
cmc
xchg
fdivrl
sbb
push
mov
les
adc
daa
mov
sub
out
or
and
push
and
push
sub
outsb
lds
xor
fimuls
add
in
sti
hlt
pop
sbb
xchg
jmp
fmuls
mov
cmp
cmpsb
lret
das
sbb
cld
xchg
addr16
leave
xlat
fwait
leave
mov
mov
mov
jp
nop
out
jb
sbb
inc
popf
imul
inc
stos
jp
ret
mov
call
loop,pn
insl
fstpl
sbbb
test
test
xchg
push
loop
aad
fneni(8087
xchg
mov
pop
imul
imul
xor
xor
pushf
mov
xlat
mov
fsubl
gs
es
test
sbb
push
fbstp
cmpsl
mov
lods
jmp
ds
sahf
test
sub
test
sub
lcall
dec
andl
mov
add
adc
jnp
xchg
stos
inc
in
aaa
dec
arpl
arpl
cmp
or
test
inc
bound
insb
out
in
xchg
aad
std
mov
pop
and
test
fisubs
lret
cmp
int
jne
xchg
and
mov
sbb
add
cwtl
movsb
lret
add
xor
movsl
push
inc
lret
push
dec
inc
xor
sarl
inc
push
rcrl
pop
xchg
pop
or
xorl
lock
mov
les
inc
mov
lods
ja
and
loopne
and
pusha
adc
or
imul
loopne
adc
add
mov
mov
paddb
cmp
adc
ret
and
add
fldenv
cmp
sti
ds
stos
mov
sbbl
scas
ss
jo
sar
push
movsb
out
in
cltd
call
cmp
jae
imul
jnp
call
stos
cltd
pop
lods
mov
sti
mov
out
xchg
aas
and
xlat
ljmp
mov
mov
xor
test
sub
dec
push
inc
pushf
call
sub
jg
sbb
shrl
in
sti
adc
or
xchg
es
cmpsl
mov
pop
mov
outsl
or
mov
mov
jbe
mov
mov
pusha
sbb
arpl
or
dec
add
jl
pop
jg
mov
imul
mov
xor
lea
mov
mov
xchg
jno
es
sub
or
jb
jns
jmp
cmc
pop
scas
test
jp
imull
xor
lret
xorb
lds
aas
jl
pushf
push
xchg
and
mov
ja
lahf
ret
sbb
cltd
jle
test
dec
and
test
push
sbb
icebp
pop
cmpsb
ret
pop
lods
pop
jmp
out
ja
jnp
movsl
xchg
jp
mov
mov
imul
xchg
xchg
fwait
cmp
mov
sub
iret
inc
adc
fildll
lahf
lods
push
inc
fcoml
jmp
add
and
cltd
push
insl
pop
into
mov
das
inc
or
pop
scas
push
mov
mov
adc
movsl
lahf
jne
push
pushf
insl
inc
push
add
xchg
xchg
or
jp
adc
pop
dec
add
jmp
jmp
cmp
test
outsb
xchg
xchg
mov
insb
aas
mov
adc
or
xor
pusha
data16
stos
sub
lods
orl
shl
insl
jl
repz
repnz
insb
push
outsl
add
xchg
mov
cmpsb
pop
mov
gs
push
ja
push
pop
icebp
pop
adc
ror
cmp
aaa
push
pop
lret
gs
adc
movsb
mov
lods
bound
mov
jbe
es
clc
cmpsb
ss
xchg
inc
mov
mov
adc
repnz
xchg
sub
push
sub
pop
jbe
jle
add
insb
imull
push
adc
pop
cmpsb
jne
fcmovb
sbb
out
sarl
test
xchg
imul
or
cli
adc
and
fisttps
jmp
cltd
outsl
sbb
mov
pushf
pop
jne
lock
in
aam
out
dec
dec
iret
int3
cli
xor
sbb
cli
xlat
scas
push
das
pushf
inc
or
sbb
add
dec
cltd
std
jle
fimuls
cmp
jp
fisttps
and
sub
and
xor
mov
in
test
leave
mov
mov
xor
rcrb
xlat
movsl
pop
cwtl
add
jp
ljmp
and
mov
lods
mov
jmp
adc
pop
das
xor
stos
xchg
cli
pop
add
cwtl
push
and
pop
cmp
out
jge
sub
jl
cmp
jbe
ds
aad
shrb
cmp
sbb
bound
inc
xchg
cmc
in
fwait
cltd
loopne
sbbb
aam
sbb
push
add
push
test
in
mov
movsb
mov
jecxz
push
push
xchg
test
fldcw
cmp
jecxz
test
rorl
arpl
xor
gs
and
fwait
inc
jae
adc
mov
xor
jle
clc
or
fldl
jne
add
ja
or
xchg
dec
xchg
sub
mov
and
out
sbb
sbb
rcrl
adc
mov
xor
cltd
sbb
imul
ret
shlb
rcrb
arpl
out
cmp
sub
inc
mov
je
mov
iret
ss
movsb
fs
push
jmp
push
jmp
xchg
cli
lret
dec
xchg
ficompl
movsb
mov
ja
jecxz
pop
rolb
dec
outsl
repnz
jp
lcall
mov
popf
fisttpl
xchg
and
push
popa
outsl
shl
dec
cmpsb
cmpsl
dec
mov
add
xor
sub
sub
or
jecxz
cmp
mov
dec
call
sbb
nop
shlb
pusha
imul
mov
shll
pop
sub
movsl
fimuls
xchg
or
ror
mov
push
fs
xor
xlat
jl
and
push
fadds
cmp
add
push
sbb
push
mov
cli
icebp
xchg
andl
adc
test
mov
dec
in
pop
xchg
nop
enter
ret
mov
push
movsl
js
out
push
das
les
std
push
aam
repz
mov
stos
mov
mov
cmp
test
pop
push
cmpsb
sbb
std
mov
xor
andl
mov
inc
sbb
nop
ja
ds
pushf
cmp
out
jp
push
shll
sar
sbb
jp
out
testl
xor
ja
data16
mov
or
inc
mov
in
mov
sbb
xor
mov
xchg
mov
repz
xchg
in
mov
test
mov
sub
mov
das
imulb
mov
fcmovb
jne
ss
mov
xchg
std
push
sbb
mov
addr16
mov
mov
pop
lret
xchg
dec
sub
add
fcoml
leave
lock
fistpll
in
outsl
mov
push
sbb
sbb
or
movsl
cmpsl
mov
outsb
mov
into
dec
mov
cwtl
in
sub
xor
jl
mov
xor
mov
cwtl
xchg
cmc
cmpsb
rclb
xchg
push
fldl
mov
fcmovb
push
outsl
or
sub
popf
xchg
shlb
jecxz
cmp
mov
xchg
int3
add
push
pusha
pop
sbb
cmp
inc
enter
jne
addr16
lock
sbb
cmp
sar
cmp
outsl
push
sarl
adc
pop
adc
sub
inc
push
fmull
push
inc
lods
jae
call
fwait
or
sub
xlat
fadd
lret
and
adcl
mov
sub
sbb
xlat
inc
dec
mov
cli
cmpsl
std
lahf
push
and
idivb
stos
cmp
cwtl
xor
pop
mov
jb
enter
icebp
adc
sub
mov
lahf
add
loope
adc
mov
cmp
and
xchg
out
inc
mov
in
shrl
sub
rclb
jns
sar
mov
rclb
pop
outsl
xchg
xchg
mov
and
adc
fs
sbb
add
cmp
lea
adc
xchg
repz
dec
insl
add
cmpl
pop
mov
inc
or
ljmp
imul
pusha
cmp
pop
sbb
adc
rcl
sbb
and
pop
lods
adc
jmp
xlat
dec
xor
scas
and
and
xor
pushf
dec
xor
fnsave
data16
pop
and
add
push
ja
shrl
adc
cmp
push
add
stos
mov
clc
inc
sbb
mov
testl
jae
sbb
lods
mov
adc
jmp
xor
std
push
mov
out
stos
mov
or
xchg
xchg
mov
add
bound
or
in
and
mov
mov
sbb
xlat
fildll
pop
andb
mov
mov
push
push
xchg
mov
repnz
jbe
mov
pop
xchg
test
lock
pop
cwtl
dec
arpl
andb
push
lcall
sbb
nop
mov
mov
jg
roll
movsl
nop
or
mov
mov
cli
test
push
jl
mov
xchg
jo
mov
std
xor
mov
imulb
xor
jne
addr16
dec
pop
popa
fstl
xchg
scas
mov
jbe
test
jmp
push
push
mov
or
out
in
clc
xchg
or
out
ljmp
test
mov
mov
scas
sahf
cltd
movsl
outsl
loop
jo
sub
sbb
outsl
sbb
xchg
ss
sub
shrl
push
test
pushf
adc
adc
push
repnz
jbe
add
jo
ja
jp
icebp
xchg
out
cli
jbe
ret
mov
mov
pop
and
cli
ret
insb
lods
cmpsb
iret
ds
es
add
rcrb
dec
nop
ss
dec
movsl
test
mov
push
sbb
xor
and
mov
dec
adc
and
mov
repnz
jge
test
add
inc
sti
pop
pop
popa
xor
lret
ja
out
addr16
cmpsl
std
xor
xchg
jnp
jb
pop
nop
leave
sub
mov
fwait
sub
fldt
xor
dec
sahf
and
lock
test
enter
lock
add
sbb
pop
mov
nop
mov
std
cmp
inc
sahf
cmpl
push
jno
xchg
cli
xor
pop
je
insb
xchg
scas
cltd
out
fnstsw
jo
in
and
pop
xchg
pop
scas
fwait
cmp
mov
mov
pop
test
xor
and
pop
orl
adc
dec
fildll
xorb
mov
pop
dec
cli
arpl
aam
cmp
sub
popa
mov
push
sub
lods
jo
push
repnz
push
aaa
mov
jmp
clc
mov
xlat
lods
xlat
rol
jns
sub
mov
test
aad
adc
xchg
mov
ret
sub
mov
sub
mul
std
jg
leave
mov
out
dec
pop
jle
sarl
pop
cld
mov
jb
mov
sub
sbb
mov
mov
stc
inc
push
sub
out
mov
rcll
jg
sbb
xor
test
jg
fsincos
mov
and
test
xchg
push
outsl
mov
or
sbb
pop
inc
or
cmp
ror
add
and
mov
jmp
jmp
jnp
add
sbb
shll
cmpsl
or
ds
icebp
dec
out
push
push
sub
sub
mov
sbb
lods
jmp
xchg
das
mov
cmp
imul
repnz
mov
dec
or
lret
jnp
pop
and
dec
mov
fistps
das
xchg
jg
int3
addr16
and
jo
dec
jg
xchg
js
and
cmp
sarl
loope
adc
loopne
adc
inc
mov
scas
add
xchg
cmpb
xchg
addb
fdivp
push
rcrl
adc
or
jne
sbb
fists
sbb
mov
mov
cmp
mov
mov
jge
add
repz
inc
insb
xchg
outsb
fs
xchg
adc
mov
pusha
shll
pushf
test
clc
jo
scas
dec
mov
addr16
rol
push
int3
in
nop
xor
jp
jl
pop
jp
jge
stos
adc
or
cltd
rolb
sub
scas
out
clc
or
jl
lods
jbe
fsubs
dec
fsubl
mov
rorb
xchg
aam
sub
mov
push
sub
lret
xchg
mov
xchg
lods
push
push
pshufw
in
js
lds
int
mov
adcl
leave
lahf
jo
xor
fistl
out
outsl
mov
lock
cmp
in
int
enter
jnp
pop
sahf
mov
mov
and
scas
int3
jns
mov
inc
out
jecxz
ss
sbb
popf
inc
mov
dec
add
or
andb
int
pusha
mov
sahf
gs
movsl
mov
sbb
xchg
push
das
xor
xchg
popf
push
or
mov
and
xor
sub
dec
lcall
test
jmp
cwtl
inc
divl
push
xor
lcall
jle
push
add
pop
push
adc
pushf
jns
mov
aaa
lret
movsb
mov
lret
test
andb
pop
xchg
mov
popf
or
dec
or
dec
pop
cmp
xchg
or
inc
push
imul
loope
repz
mov
insl
xchg
movsb
out
data16
mov
mov
jmp
out
int3
push
les
mov
mov
jae
cmp
push
pop
outsl
dec
daa
pop
dec
xchg
jno
loope
xchg
xor
or
ja
shrl
arpl
mov
adc
xor
lret
sbb
xchg
pop
mov
lods
fcmovne
mov
mov
aam
test
or
and
xor
jns
jno
sub
add
dec
notl
adc
mov
mov
or
lcall
jbe
icebp
mov
cld
and
lods
js
jns
loopne
addl
leave
push
inc
lret
imul
pop
fxam
mov
test
jo
jae
or
daa
pop
std
lahf
lock
fucomip
push
lods
and
ljmp
and
jp,pt
sbb
xor
jge
add
push
je
inc
pop
push
push
fldl
mull
mov
pop
xchg
cmp
ret
leave
insb
or
out
pusha
mov
test
or
cmp
adc
int
dec
cs
out
dec
stos
xchg
and
in
ds
ret
fidivrs
or
mov
fimuls
fmull
fisttpl
mov
pushf
or
std
cmp
add
mov
jns
jae
popa
nop
cmpsb
mov
popl
mov
push
cmpsb
inc
sub
int3
sbb
popa
push
nop
icebp
jne
shl
stos
mov
sub
addr16
push
sub
repz
cmpb
pop
cmpsl
test
cmp
add
mov
cs
lods
jbe
mov
repz
sub
in
and
dec
ljmp
lock
mov
movsb
jmp
pushf
sub
adc
outsb
pop
push
sbb
mov
mov
popf
or
and
push
mov
adc
call
and
jne
clts
popa
aam
xor
gs
mov
mov
call
js
cmpsl
in
imul
push
dec
nop
jns
pop
and
mov
dec
insb
out
inc
sbb
stos
into
rcrb
push
mov
or
dec
jmp
mov
imul
xor
in
insb
jo
push
or
lods
test
insb
adc
insb
jae
mov
pop
bnd
mov
mov
int3
outsl
mov
xchg
roll
in
jp
ret
mov
outsl
imul
push
rcr
push
stos
mov
leave
nop
sbb
popa
dec
test
into
fisubs
add
sbb
mov
xor
dec
ror
and
cmp
sti
push
mov
or
outsb
jo
cmpsb
and
xor
fimull
cmc
in
sbb
mov
mov
into
cmc
das
and
add
sub
pop
nopl
dec
mov
mov
and
fisttps
push
in
dec
jge
std
rol
dec
scas
pop
inc
xchg
mov
out
sub
dec
insl
add
inc
inc
pop
cmp
xchg
add
push
inc
cs
stos
push
dec
xor
adc
icebp
pop
pop
sbb
lahf
cmp
sbb
push
xchg
pop
fsubrs
sarb
subl
push
lret
sub
xor
mov
cld
sbb
test
cmp
bound
mov
xchg
or
jae
xor
pop
scas
jb
dec
mov
mov
mov
cmp
mov
imul
in
int3
enter
cmp
dec
jl
mov
mov
les
out
mov
test
jle
dec
movsb
scas
call
cmp
pop
jo
in
imul
xor
mov
xchg
xor
inc
adc
sbb
repz
sbb
mov
lret
push
stc
sub
cltd
mov
cld
xor
iret
scas
sti
push
movsl
lods
dec
outsb
or
lcall
subl
dec
loopne
sahf
icebp
sbb
cmp
add
jmp
in
insb
add
dec
sbb
int3
shll
shlb
adc
add
loope
cmpl
dec
xor
movsl
mov
stos
pop
pop
mov
call
js
out
jno
hlt
test
jbe
sub
and
jne
sbb
imul
sub
xlat
jnp
push
imul
push
pop
push
jbe
push
mov
stos
shrl
push
inc
rclb
inc
xor
shrl
test
arpl
pop
stc
js
loope
out
sbbb
mov
sbb
test
in
jnp
or
mov
ja
jae
std
fs
or
inc
and
stc
mov
xor
stos
mov
sub
stos
mov
movsl
dec
pop
aam
aad
rorb
inc
fsubp
stc
imul
popa
aad
test
add
in
xor
fisttps
cmp
jle,pn
add
add
in
jge
jbe
xchg
iret
movsl
inc
mov
xor
rcr
scas
mov
add
arpl
lret
outsl
frstor
ljmp
add
int3
ja
dec
and
cmp
es
dec
aas
sti
push
jae
aas
int
or
dec
pop
dec
outsb
sub
mov
dec
push
mov
sub
or
mov
cltd
mov
test
fcomps
or
ljmp
mov
in
cmp
cmp
pop
dec
or
mov
dec
outsl
inc
arpl
icebp
pusha
clc
xchg
mov
mov
lds
out
repz
mov
cmc
mov
or
sub
imul
adc
and
js
fidivrl
stos
jge
lods
sub
push
add
es
fs
inc
outsl
mov
es
dec
loope
fnclex
ss
or
loope
stos
jbe
jmp
pushf
mov
outsl
mov
lods
fimuls
mov
add
ror
int3
sub
push
mov
das
movsb
mov
and
sbb
in
insl
mov
popf
fistps
fidivl
inc
fnstsw
out
push
mov
push
idivb
rcl
cmovp
into
cli
shlb
fs
ret
ftst
test
adc
hlt
add
push
fidivrl
loope
out
cs
pop
add
push
divb
scas
sti
xor
jnp
call
addl
sbb
sti
sub
ret
mov
fidivl
sub
add
iret
ss
les
mov
into
lods
popa
mov
shrl
xchg
frstor
test
lods
push
cli
icebp
mov
jb
or
mov
or
aaa
add
dec
inc
adc
xor
mov
dec
add
push
scas
popa
xor
xor
dec
or
in
push
mov
dec
xchg
mov
add
out
test
jecxz
mov
inc
das
test
nop
mov
cmp
mov
jp
cltd
fld
js
in
xlat
ss
push
and
cmc
mov
xor
dec
rorl
call
push
xorb
pop
jg
add
xchg
mov
mov
popf
addl
fnstenv
sbbl
xlat
mov
xor
or
in
in
test
out
mov
mov
mov
lods
xchg
mov
mov
sbbb
add
push
daa
lcall
dec
into
cld
outsl
rolb
sbb
call
cmp
fcmovnu
pop
mov
fmuls
sub
repnz
enter
leave
or
mov
jns
dec
mov
outsl
faddp
in
cltd
fwait
shll
xor
add
push
or
lcall
ret
inc
fcomip
dec
xchg
sbb
add
sub
mov
insl
ret
in
mov
filds
fdivrs
cmc
sub
cmpsb
mov
std
xor
addr16
sahf
jecxz
pop
out
dec
mov
pop
lock
cmp
xchg
xor
mov
mov
outsl
sbb
sti
xchg
inc
add
lods
push
jmp
iret
insl
mov
nop
popf
inc
pop
xlat
sbb
adc
mov
stc
data16
mov
cmpsl
mov
dec
insb
add
inc
add
dec
mov
sbb
add
xchg
and
lret
sbb
lock
imull
or
imull
mov
add
ja
push
sbb
jg
mov
ret
leave
ret
loop
mov
push
es
pop
movsl
dec
xor
test
stos
aaa
aam
scas
aad
sub
mov
icebp
push
mov
shlb
mov
scas
mov
add
mov
or
arpl
lea
jecxz
push
movsl
mov
and
jecxz
aaa
jg
and
adc
fwait
mov
iret
and
lahf
imul
or
mov
dec
call
sub
mov
mov
sbb
sub
mov
jle
inc
jae
cmpsb
cld
inc
repnz
mov
dec
clc
and
and
xchg
cmpsl
mov
int3
add
xchg
ret
daa
sbb
mov
movsb
ja
lds
lret
dec
add
jecxz
rclb
inc
jle
fcmove
out
sub
sbb
in
adc
fdivrl
dec
xor
das
pop
repz
mov
mov
jno
mov
pop
add
popa
int
jns
lods
adc
push
or
mov
pop
sbb
xchg
sub
pop
lods
mov
xor
cmp
mov
push
mov
jle
or
enter
ficomps
pop
rorl
cmpsb
ret
sbb
add
mov
rorl
fs
xor
dec
dec
mov
popa
sysenter
inc
dec
sub
or
mov
stc
inc
mov
test
dec
jp
xchg
sub
inc
sbb
and
adc
sbb
jbe
nop
cwtl
jg
or
sbb
mov
mov
inc
inc
lea
push
inc
cmc
lods
iret
dec
jle
dec
mov
mov
lods
test
mov
sub
into
xor
outsb
push
jle
xlat
inc
mov
mov
jnp
lcall
jbe
push
lcall
inc
adc
lahf
fsubrs
mov
push
lahf
popf
inc
div
call
pop
mov
mov
xchg
push
mov
dec
add
mov
sub
imul
cs
or
mov
repnz
mov
je
aam
lds
ja
faddp
mov
adc
daa
sub
xchg
dec
loop
xor
xchg
push
jge
mov
push
pop
push
jecxz
movsl
fisubs
out
aam
or
mov
and
jae,pt
insl
mov
dec
add
and
lret
mov
insl
sbb
add
js
and
into
xor
test
mov
dec
push
loopne
jl
sbb
mov
dec
pop
jl
ljmp
push
pop
jge
xlat
mov
je
pop
or
ds
cmp
mov
imul
and
fisttpll
aas
rcrl
adc
lods
pop
lods
lret
xlat
push
jo
mov
mov
lds
mov
stc
fildl
ja
hlt
bound
mov
sbb
push
ja
ja
inc
imul
xor
sub
sub
es
mov
xor
push
add
mov
rcrl
jecxz
imull
jo
inc
fildll
cltd
push
test
mov
fdiv
jnp
pop
and
cmp
cmp
lods
inc
les
jns
adc
jp
fldenv
sbb
leave
lds
pop
xor
pushw
scas
outsb
push
popa
fsubl
push
in
sub
cmpsb
pushl
imul
cmp
push
xchg
out
mov
cld
fucomp
test
or
loope
pop
or
aad
pop
sub
dec
ljmp
cs
push
add
cli
cwtl
push
or
and
mov
je
jmp
mov
imul
and
not
xor
or
sub
jl
cmc
lock
adc
mov
aad
push
fdivrs
adc
sbb
push
dec
mov
mov
mov
push
rolb
mov
and
xchg
push
fwait
mov
clc
movsb
lock
rol
scas
mov
cmp
cmp
scas
icebp
xchg
cmp
push
call
repnz
or
cmp
inc
lahf
orl
inc
or
push
inc
xchg
sub
inc
add
imul
sbb
in
and
outsb
mov
xchg
xchg
mov
inc
out
sbb
adc
aaa
lret
jno
push
pop
cmpsl
adc
outsb
cwtl
cmp
inc
ficompl
sti
cmpsb
popa
pop
out
add
fldenv
rcrb
daa
shl
cld
je
out
mov
mov
aam
testl
sbb
in
push
dec
fwait
add
cmp
add
ret
imul
adc
stc
sti
ljmp
test
cli
mov
and
vshufps
shrl
pop
push
cmp
icebp
std
dec
int
idivb
and
cld
pop
int
rol
push
sub
and
lea
push
hlt
sbb
lret
sbb
jb
xchg
loopne
mov
or
scas
xlat
mov
arpl
lea
insl
orl
into
mov
lods
jl
xchg
push
test
and
imul
mov
unpcklps
add
mov
psrad
insb
shlb
jl
jns
dec
loope
pushl
dec
pop
ljmp
xchg
into
adc
mov
or
adc
int
out
mov
cmp
ja
adc
in
mov
aas
mov
jns
dec
movsl
cmp
jne
icebp
and
push
sbb
jmp
adc
ja
mov
add
aam
sar
mov
mov
inc
push
jne
rcrl
mov
cmp
xchg
push
mov
cwtl
dec
lods
leave
test
mov
nop
cli
sub
xchg
out
divb
in
sub
xchg
cltd
inc
or
add
mov
lock
add
call
aas
cli
repz
sbb
mov
jnp
dec
enter
lods
icebp
lock
sbb
insl
sbb
enter
push
test
bound
jmp
and
pop
or
scas
fbstp
sarl
enter
mov
fistpll
mov
decl
jle
pop
loope
and
test
jnp
xor
mov
out
negb
fs
cmp
pushf
test
aaa
cld
iret
test
mov
mov
mov
cs
dec
or
cwtl
insb
test
xor
icebp
jbe
lods
dec
dec
lds
mov
inc
rorb
push
sahf
adc
data16
insb
xor
leave
rorl
xchg
in
jle
lahf
cmp
adcb
stos
push
add
pop
lcall
loopne
sub
out
in
mov
inc
out
sub
ret
and
scas
fidivl
pop
imul
pop
imull
cwtl
mov
push
push
xchg
sub
aad
daa
jnp
lahf
in
jo
sti
popf
sbb
and
add
es
inc
jl
cltd
mov
jl
jnp
add
push
or
xchg
pushl
push
leave
xor
jmp
jns
push
mov
sahf
add
jbe
mov
imul
or
and
das
jp
stos
enter
cmp
xor
or
subb
mov
pop
in
dec
pop
lds
pop
clc
mov
lock
jge
inc
xor
loop
rcrl
mov
xchg
sbb
movsb
and
jp
movb
xchg
aad
adc
cmp
nop
sbb
loopne
cmp
dec
js
jne
xor
pop
push
imulb
clc
adc
xor
xchg
lret
inc
aad
push
mov
lcall
leave
mov
out
mov
jae
push
jl
pop
mov
mov
mov
int3
mov
dec
or
cs
test
sub
sti
adc
stos
jp
shlb
shlb
cmpsb
enter
mov
mov
sbb
pop
in
into
sub
movsb
cltd
cs
js
stos
and
and
nop
add
xlat
xchg
cld
clc
pop
pop
sub
and
dec
int
and
mov
cs
cmp
ror
xorb
ret
mov
mov
and
fmull
or
data16
sbb
cmp
loope
bound
outsb
sub
add
test
ds
cwtl
aam
cwtl
movsl
pop
mov
mov
adc
test
arpl
sbb
cld
aam
inc
ss
cltd
add
push
pop
or
mov
xchg
imul
sahf
fisttpll
jp
or
push
js
xlat
movaps
add
arpl
out
adc
sub
sti
and
out
les
fisubrl
cmpl
xchg
push
xor
cwtl
push
cmc
mov
add
adc
add
bnd
add
jo
loopne
fadds
les
pop
push
imul
add
pop
fs
addr16
nop
jle
jne
sbb
xchg
jno
xchg
clc
jb
pop
mov
ror
fwait
inc
xchg
push
mov
or
dec
or
ret
cmp
shl
outsl
cs
loopne
outsb
jbe
lret
xchg
push
lahf
dec
push
sbb
pop
insb
jle
fimuls
cmc
sbb
push
and
jmp
xor
sti
bound
icebp
les
pop
cltd
repz
sub
mov
xor
data16
push
cwtl
cwtl
or
imul
push
mov
std
jnp
jp
sub
in
fistpl
xchg
dec
das
mov
xor
add
fsubrs
mov
sub
mov
stos
dec
xchg
loope
pop
leave
test
pusha
out
ljmp
movsb
mov
jge
sbb
das
jge
outsb
cld
xor
hlt
fdivr
js
mov
or
dec
fcoms
fdivp
addl
or
adc
aaa
inc
jb
xchg
in
sub
adc
jp
mov
bound
pop
ja
fdivrl
les
bound
pop
ljmp
call
pop
cmp
movsb
mov
xlat
inc
cmp
ljmp
dec
int
loope
sahf
cmp
cli
icebp
test
aam
add
push
mov
add
pop
cs
insb
mov
mov
imul
lahf
and
and
or
push
decb
jno
and
call
mov
in
aam
mov
jb
into
and
mov
jmp
int
sarl
in
pop
push
push
xchg
push
arpl
pop
inc
lea
notb
cmp
jo
mov
dec
movsb
xor
fisttpl
xor
in
test
lahf
sbb
lods
mov
inc
sub
xchg
sbb
inc
negl
adc
aam
ja
mov
jg
aam
inc
ret
test
flds
mov
lods
bound
jns
int3
sub
mov
pop
dec
aas
sbbl
dec
imulb
adc
add
adc
sub
sahf
cli
int3
rol
imul
in
inc
mov
add
cmp
nop
push
push
clc
mov
dec
add
push
jg
in
mov
and
into
into
sbb
jns
sub
sub
mov
xchg
mov
paddd
repnz
mov
movsb
test
jnp
pop
imul
lock
cmpsl
ret
mov
mov
mov
xchg
or
repz
leave
shl
imul
ficoms
cmc
enter
jg
jb
test
scas
test
push
ljmp
mov
cmp
fnstenv
hlt
pusha
jmp
inc
fildll
adc
loop
push
cmp
scas
sbb
cmp
xchg
insb
ljmp
or
pop
add
jl
sbb
fdivs
pop
pop
mov
push
fbstp
add
insb
sub
movsl
and
out
es
fmuls
ja
push
sbb
mov
mov
jg
insl
dec
or
leave
sub
push
cltd
pop
sbb
cmpb
adc
arpl
mov
ret
dec
iret
ja
es
dec
adcl
daa
ss
cmpsb
loopne
and
sbb
test
nop
push
jo
jge
push
lcall
mov
aad
loopne
mov
jae
sti
inc
andb
inc
cltd
ret
dec
mov
jg
xor
xor
int3
stos
cmpsb
xchg
xchg
jle
hlt
mov
push
jmp
xor
inc
sub
xchg
sbb
and
subb
test
iret
in
imul
sbb
clc
add
mov
cmpb
inc
ret
jae
mov
cltd
scas
push
jecxz
and
inc
stos
dec
popf
mov
scas
outsb
jno
adc
sbbl
dec
adc
cmp
movsl
pop
mov
jnp
mov
test
out
stos
test
out
cmpsb
movsl
mov
cmp
loope
jg
fistps
les
out
das
jbe
cmpb
test
lods
xor
mov
sahf
divl
out
xchg
popf
xor
inc
movsl
dec
mov
jae
mov
mov
xchg
pop
cmpsb
jnp
scas
push
mov
cmpsl
adc
repnz
cltd
mov
sbb
lcall
add
mov
inc
mov
fs
repnz
inc
out
cs
clc
fsubrl
fldcw
inc
adc
xchg
and
or
and
outsl
lods
adc
negl
xlat
cmp
stos
addr16
adc
icebp
pop
test
subl
or
popf
pop
pop
adc
iret
out
mov
and
xor
sbb
nop
jb
rcrb
jg
in
ficomps
and
dec
xor
xchg
xor
push
adc
gs
add
xchg
or
jne
imul
jne
repnz
mov
sbb
lahf
rorl
jnp
add
mov
js,pt
adc
or
fcoml
jmp
popl
mov
mov
movsl
orl
inc
leave
cmp
mov
notb
stos
jno
xchg
jp
and
inc
and
mov
loopne
and
xor
call
jno
or
bound
mov
cmp
jo
push
mov
inc
cmpsl
sbbb
jmp
inc
jg
test
fcomi
or
mov
inc
xchg
loop
xlat
imul
mov
outsb
jmp
and
pop
push
clc
and
insl
mov
scas
dec
and
out
lods
adc
push
xor
adc
mov
jp
aas
inc
push
test
int3
add
mov
stc
add
jno
and
bswap
adc
mov
push
sahf
dec
jns
jp
aaa
aad
test
hlt
push
fdivrp
enter
dec
push
mov
push
or
mov
mov
fwait
int
ret
loopne
mov
mov
mov
cmp
or
popa
mov
pushf
arpl
enter
mov
dec
inc
xchg
pop
xor
out
mov
dec
xchg
test
loope
push
fsubs
cmp
iret
std
and
add
push
jl
sub
jne
lods
aam
ret
mov
mov
ss
hlt
mov
sub
out
lds
cmp
cmc
push
ljmp
lea
in
xor
or
lret
incl
aad
cmpsw
jge
fidivs
dec
ficompl
into
pop
jb
jge
insl
dec
fwait
sbbb
mov
cld
and
jl
or
pusha
sbb
sbb
jbe
out
push
lods
loop
sbb
add
js
dec
dec
xchg
cmp
popa
mov
and
jae
scas
and
mov
imul
rol
jo
enter
mov
jbe
add
ds
lds
lcall
push
fnstenv
jne
outsl
pop
fimuls
jle,pt
out
pop
sbb
or
cmc
sarl
pushf
call
sub
sahf
jo
cmp
movsl
mov
ret
dec
test
mov
test
ja
test
cmp
xchg
push
and
mov
std
xlat
mov
roll
std
pop
test
lcall
or
xorb
cmpsb
mov
dec
fidivs
icebp
cmpsb
rcr
or
xchg
pop
adc
in
popa
sti
cmp
and
inc
dec
jns
sahf
and
lret
push
out
cli
popf
add
xchg
mov
xchg
lret
mov
fnsave
cltd
rorb
les
dec
cmpsl
or
pushf
in
lret
cli
aam
push
ja
decl
inc
out
jl
orb
jae
inc
sub
rcrl
mov
andl
pop
ret
jns
roll
andb
or
lret
jmp
pop
cmc
or
jae
int3
mov
leave
cmc
int
xchg
push
stos
leave
stos
sbb
stos
dec
inc
inc
cwtl
aad
xchg
fnstcw
data16
jecxz
mov
add
jge
or
pop
stos
mov
cmp
pop
sahf
fs
cmpsl
mov
mov
pop
into
mov
mov
mov
pushf
loop
adc
and
jle
dec
fstps
gs
push
lcall
cmp
insb
repz
lcall
pop
repnz
dec
sub
pop
dec
xchg
in
insb
iret
push
inc
sbb
rol
insb
mov
stos
or
fiaddl
aad
pop
cltd
xchg
jp
xchg
jo
pop
sub
push
add
xchg
sbb
shrb
imul
add
sbb
push
add
jne
test
and
sbb
sarb
mov
fwait
push
mov
sub
cmp
sahf
mov
testb
xchg
mov
stos
xor
sbb
inc
cmp
in
inc
mov
xchg
pop
push
and
repz
rcll
mov
cmp
icebp
add
sub
xchg
jo
lret
and
jne
sub
dec
iret
push
mov
mov
movsb
inc
lods
arpl
aas
scas
inc
jb
cs
push
dec
mov
lret
mov
divb
imulb
std
in
loopne
andl
ja
mov
dec
stc
ss
iret
jbe
aad
mov
dec
cwtl
mov
pop
dec
pop
pop
xor
xchg
es
insl
mov
testl
pop
cs
cmp
loopne
jecxz
adc
jp
inc
dec
inc
mov
in
in
andl
icebp
stos
pop
xor
mov
and
jp
addl
sbb
mov
out
cmp
and
mov
push
cmpsl
mov
stos
insl
out
jp
mov
jl
int
fcomp
pop
pop
rclb
inc
push
out
loope
test
fildl
hlt
jne
int3
loopne
and
ficompl
inc
or
mov
inc
rorb
push
mov
mov
test
lock
add
adc
and
imul
adcl
pushf
flds
mov
adc
mov
addr16
movsb
cmp
mov
mov
das
mov
fldl
xlat
push
fistpl
mov
add
ja
mov
loopne
stos
ss
pop
ret
jle
mov
aam
pop
push
in
jecxz
xchg
push
push
xlat
add
inc
insl
or
addb
fldt
addb
in
cmpsl
pop
inc
das
shll
add
dec
sbb
jae
xor
xchg
push
ret
sub
sub
aaa
repnz
int3
mov
mov
imul
or
mov
std
icebp
in
mov
mov
xchg
out
shlb
xlat
pop
inc
wrmsr
fbld
jmp
icebp
shlb
dec
imul
jmp
jns
test
push
mov
dec
mov
mov
jo
mov
outsl
lods
insl
dec
push
fdivrp
mov
push
mov
mov
hlt
or
xchg
rclb
push
cmpsl
mov
xor
add
ljmp
in
ss
xchg
pop
aas
in
addr16
nop
pop
shl
jns
push
insl
xor
ljmp
in
leave
push
dec
pop
pop
xlat
sbb
push
rcll
lahf
fistpl
mov
dec
cmp
mov
dec
adcb
fcmovnb
imul
jnp
stos
das
mov
sbb
std
inc
std
mov
dec
lret
push
repnz
mov
ret
shrl
inc
sbb
sbb
pop
stc
rcll
adc
mov
push
xchg
mov
imul
xor
pop
sbb
inc
inc
cli
std
or
xor
dec
sbb
and
add
scas
and
push
add
dec
cmp
rol
pusha
test
mov
cmpsl
and
dec
sub
push
and
jo
cmp
xchg
jle
sarb
sub
jp
sub
or
inc
or
bound
fimull
lahf
imul
and
leave
ret
mov
pushf
jmp
notl
shll
sub
inc
popa
xchg
in
icebp
add
negl
sarb
or
lock
pop
jp
mov
mov
cmc
ret
aam
sbb
mov
pop
daa
cmpsb
mov
or
rcll
mov
inc
add
jo
pop
int
arpl
setne
sbb
in
xchg
lret
in
cmpsb
leave
mov
je
outsl
nop
addr16
xchg
pop
jb
pop
xor
inc
jg
test
inc
jae
lahf
dec
iret
adcb
dec
scas
cltd
add
daa
test
inc
inc
push
lcall
ftst
xor
xchg
addr16
pop
mull
dec
mov
xchg
sub
inc
fld
pusha
movl
leave
lods
int
repnz
push
mov
call
js
ds
add
sbb
dec
imul
push
or
pop
xor
adc
add
sub
mov
aas
hlt
ret
inc
ds
inc
jmp
jno
ret
cmpsb
cmc
imul
sub
jbe
push
xlat
std
dec
icebp
adc
std
cltd
cmp
jo
test
cmp
mov
jmp
push
pop
ss
add
fs
cmpsb
push
repz
into
repnz
dec
sub
inc
scas
mov
pop
fwait
or
cmp
test
jnp
add
pop
and
jg
addr16
outsl
xchg
mov
popf
and
inc
stos
std
ret
adc
dec
fst
cltd
mov
pop
mov
xor
add
testb
pushf
xchg
daa
dec
mov
pop
into
mov
dec
pop
sbb
jnp
mov
push
push
clc
cmp
push
pop
fsubrs
xchg
adc
data16
fists
cmpb
cmpb
rorl
mov
ret
mov
pusha
dec
es
pop
jle
xlat
sbb
mov
adc
mov
push
dec
movswl
add
push
lcall
or
xor
addr16
jb
sbb
cltd
jl
gs
pushf
movsb
inc
mov
sub
xor
pop
test
inc
pop
dec
push
xor
das
and
and
shll
add
test
cmp
xchg
pop
dec
arpl
jnp
je
cmc
fwait
imulb
and
stc
and
add
mov
pop
mov
xor
ret
sub
sub
fisttpl
popf
lahf
pop
or
cli
xor
or
and
rorl
push
ds
aam
mov
adc
add
jne
lds
ljmp
dec
scas
mov
in
add
pop
pop
mov
dec
adcb
mov
test
cli
pusha
mov
lret
fsubrs
ljmp
out
sbb
cmp
add
ljmp
icebp
adc
or
jmp
cwtl
ljmp
arpl
and
mov
jle
xlat
push
mov
mov
pushl
push
jbe
xchg
testb
mov
cwtl
push
add
pop
dec
cmp
dec
call
test
pop
push
aam
cltd
stos
push
fnsave
gs
push
stos
repz
lahf
mov
rolb
hlt
jns
jl
xor
imul
ret
cmp
andb
inc
mov
push
sbb
inc
js
jg
dec
loope
dec
stc
das
push
aas
jb
in
mov
inc
pop
sbb
in
pop
pop
mov
jnp
insl
sub
lds
fcmovbe
movsl
scas
pop
fisubrs
aad
lcall
outsb
jo
lds
ret
aas
pusha
stc
or
arpl
mulb
inc
inc
mov
movsl
gs
loop
lock
pop
jmp
mov
leave
repnz
int3
pop
je
enter
lods
leave
pushf
lret
sti
xchg
mov
ljmp
das
mov
cmp
imul
test
xchg
mov
mov
ja
aaa
jge
dec
dec
aad
test
cmp
int3
mov
cltd
rcr
inc
add
xchg
dec
xchg
add
out
shrb
mov
mov
mov
insb
or
push
xor
xor
repnz
jo
cmp
pop
mov
adc
cmpsl
test
aam
aas
fists
and
xor
cmp
sub
mov
mov
cwtl
or
into
lcall
test
imul
icebp
shrb
mov
xchg
clc
push
xchg
out
sub
xor
mov
cmp
outsb
adc
inc
ret
fistpll
mov
sbb
add
xor
mov
lcall
cmp
xor
xor
sub
lcall
jmp
mov
gs
xor
shl
or
xor
mov
jns,pn
inc
jno
scas
jp
or
mov
sbb
ficoms
sub
cmp
mov
adc
sbb
call
add
sub
out
sahf
add
cli
push
popa
mov
imul
das
mov
mov
out
lret
outsl
dec
out
pop
repnz
ret
aad
sub
fbld
inc
cmp
divl
xchg
pop
cli
inc
lahf
mov
dec
lods
sub
sbb
cmpsl
mov
mov
loope
popf
popa
int3
les
ret
jne
in
adc
xchg
cwtl
std
and
pop
mov
arpl
std
ja
inc
pop
dec
mov
xor
popa
cmp
jg
jb
into
add
cmp
lods
cld
pcmpgtw
cli
pop
repnz
ret
pop
test
inc
xchg
imul
mov
insb
popa
lods
xchg
inc
or
lret
cmp
mov
jmp
push
test
rorb
cmp
fistpll
scas
or
jmp
inc
add
push
cmc
notl
sarb
mov
and
sar
adc
inc
call
dec
orb
and
sbb
mov
pushw
inc
sub
cmc
pop
xchg
xchg
frstor
mov
sbb
cs
push
xor
loopne
xorb
jecxz
add
dec
jno
mov
mov
fidivrl
and
gs
dec
mov
mov
inc
add
cli
loope
sub
jle
les
mov
iret
xor
pop
xor
jge
push
addr16
and
xchg
lea
pop
addb
shrl
aam
xchg
sbb
inc
inc
cmc
movsl
rcll
xchg
loopne
mov
repnz
mov
xchg
xchg
fwait
sbbb
inc
jge
cld
jno
notl
xchg
repz
lods
mov
test
incl
xor
mov
push
jns
test
and
adc
insl
sahf
lahf
dec
dec
pop
xchg
dec
mov
test
test
and
int3
cmpsl
jno
cwtl
scas
sub
mov
mov
shr
aas
jmp
mov
arpl
adc
mov
in
dec
inc
incl
js
jl
pop
jle
jp
sub
xchg
insl
icebp
bound
repnz
es
push
in
les
adc
subl
aas
divb
jl
ss
mov
mov
icebp
roll
in
sub
mov
jecxz
push
jns
mov
inc
pop
xchg
out
lock
cmp
cltd
lret
fdivr
push
add
les
jno
push
mov
pop
sub
dec
push
xchg
add
xor
testl
lret
or
out
insl
cwtl
push
mov
or
jg
ret
stc
or
pusha
or
lds
enter
pop
movsl
sbb
data16
dec
mov
loopne
jge
jbe
inc
scas
test
fistpll
jge
sub
ds
mulb
xchg
test
push
dec
cmp
xchg
and
xor
sar
lcall
jb
pop
inc
xchg
sub
cld
std
sbb
cmp
lret
jg
iret
rcll
clc
lods
scas
sbb
imul
push
mov
cmp
loope
xchg
inc
in
sub
push
fistpl
mov
and
clc
test
scas
pop
sti
clc
mov
std
aam
scas
aam
cli
dec
push
ret
inc
stos
enter
std
in
jge
jns
arpl
lret
sbb
cmpl
pop
xor
clc
jl
sbb
stos
jno
sti
movsb
add
cmp
movsb
sbb
mov
mov
stos
xchg
cmp
shrb
movsl
and
xchg
pop
dec
xchg
dec
and
mov
data16
mov
mov
xor
cld
mov
call
jb
cld
mov
hlt
mov
mov
push
xor
nop
imul
adc
hlt
mov
insb
sub
loop
jno
out
sarl
mov
outsb
push
or
pop
jecxz
stc
stos
cmc
in
mov
or
jmp
inc
mov
jg
adc
sbb
mov
test
push
cmp
or
xor
loope
xor
sahf
sbb
movsb
insb
mov
scas
mov
xchg
push
dec
in
push
mov
fnstcw
add
fiadds
cwtl
mov
imul
mov
push
test
and
pmaxsw
loop
push
in
cmp
lock
mov
dec
cmpl
fbstp
pop
and
gs
flds
sbb
mov
leave
pop
or
jmp
aad
test
js
inc
dec
push
mov
rdmsr
add
inc
lret
daa
fmulp
jo
jns
push
dec
fidivs
cwtl
adc
push
insb
insb
push
lea
lcall
push
sbb
xchg
and
xor
pop
incb
cld
push
jmp
jnp
cmpsl
outsb
daa
popf
adc
pushw
inc
mov
movsb
rcl
sti
pop
data16
xchg
rorb
idivl
test
sub
insb
fwait
pop
cli
dec
pop
dec
mov
enter
int3
iret
mov
jbe
ficompl
lds
cmp
cmp
inc
cli
adc
mov
aam
mov
sbb
cmpsb
cmp
leave
pop
pop
lods
add
add
pop
cmpsl
test
scas
insl
adc
mov
push
test
pop
out
nop
pop
mov
mov
int
or
out
adc
and
cld
pushl
or
push
add
xchg
adc
add
add
mov
add
dec
loop
bound
lods
pop
push
sub
add
es
cld
add
popf
popa
int3
out
notb
pop
jb
and
dec
cld
cli
xor
test
in
cld
cbtw
loope
cltd
mov
js
mov
sub
jl
inc
cltd
pop
xchg
add
aam
call
push
add
sbb
and
rep
xorl
stc
fldlg2
and
in
add
jne
and
lock
shrl
mov
arpl
movsb
push
mov
add
xchg
xor
outsl
dec
cmpsb
and
xor
addl
pushf
sub
or
repnz
inc
hlt
cmp
xlat
rcll
cmpsb
push
cmp
push
cltd
cmp
push
push
lock
mov
dec
out
ret
hlt
jns
sub
roll
adc
push
jmp
jmp
mov
or
test
sub
ljmp
xor
push
cmp
sub
xor
js
jae
insl
xor
push
fsts
insb
pop
inc
xor
inc
aam
push
sahf
int3
push
pop
fsts
jne
int
sbb
fsts
popa
pusha
sbb
mov
jae
jb
icebp
ror
adc
push
inc
rcll
fwait
aad
pop
insb
mov
xchg
inc
out
jne
js
aas
int3
andb
cmp
mull
push
je
stc
aaa
rorl
cmp
push
pop
out
push
jno
dec
rorb
mov
xor
sti
inc
pop
aas
mov
in
cmpsb
lahf
daa
push
test
xchg
stc
adc
nop
into
add
dec
adc
in
xor
adc
mov
and
fs
dec
leave
int3
push
rcl
pop
push
pop
enter
mov
jge
sbb
xchg
xchg
xchg
jmp
lds
jle
and
jae
xor
gs
inc
or
push
xor
and
jns
pop
add
dec
aas
add
std
xor
sub
cmp
fiadds
or
sub
lahf
hlt
pop
outsl
sbb
sahf
je
xor
xor
fidivs
bound
lods
push
nop
loop
imul
pop
push
iret
rorb
lret
jmp
stos
dec
outsb
in
mov
ljmp
mov
adc
ficompl
movsl
xor
jae,pt
sub
std
xchg
jl
mov
mov
dec
movsb
mov
push
mov
jno
or
adc
stc
mov
stos
pop
jo
rcl
in
or
ja
outsb
inc
aaa
ret
repz
sub
outsl
ret
orl
test
pop
test
inc
or
in
inc
xor
fwait
call
mov
mov
lcall
xchg
lahf
xor
pop
cld
jl
sbb
add
xchg
jno
addr16
jle
push
pop
lods
cmp
push
xor
ss
cld
ja
ss
cltd
push
mov
add
sub
mov
xchg
jmp
sub
or
mov
lea
xchg
cld
cld
fwait
sbb
sbb
ret
mov
pop
mov
jmp
hlt
adc
pop
or
pop
inc
xchg
insb
or
mov
sbbb
mov
cmpsb
sub
push
push
dec
cmpsl
adc
fildl
pop
das
fildl
test
add
fsts
xchg
cli
into
jmp
shlb
nop
cs
scas
add
adc
loopne,pn
push
mov
cmc
push
popa
mov
std
adc
mov
arpl
xor
inc
mov
ja
jl
xchg
dec
jl
nop
test
push
movsl
mov
test
xor
cli
in
adc
xchg
pop
mov
pop
clc
sbb
lods
mov
and
popf
dec
or
adc
add
mov
pop
imul
das
push
dec
inc
dec
leave
adc
cmpb
imulb
jnp
or
cmp
pushfw
or
cmp
xor
mov
insb
cmp
rcl
stos
mov
pop
dec
repz
jns
sub
xchg
pusha
iret
inc
je
xchg
mov
fmul
mov
ret
imul
mov
dec
lea
fistps
push
push
in
and
data16
inc
inc
aam
mov
in
outsb
sbb
in
xchg
test
push
jl
call
jle
jnp
sbb
dec
push
into
hlt
inc
push
insb
movsb
add
sub
jmp
test
ja
mov
cld
xchg
iret
sub
add
and
mov
mov
mov
ljmp
movsb
and
adc
xchg
sar
xor
int3
fsubrp
sbb
sbb
jbe
and
cmp
rcrb
movsl
mov
or
xchg
aas
mov
stos
xchg
leave
push
cmp
pop
pusha
out
clc
scas
jmp
jo
add
insb
sub
pop
insl
ds
out
dec
aaa
mov
jnp
jbe
insl
mov
das
icebp
cli
xchg
dec
inc
jbe
nop
mov
stos
and
push
add
dec
fwait
lods
xor
and
mov
mov
fs
xor
cmp
fnstenv
ss
add
out
cmc
sahf
dec
rol
add
xlat
or
xchg
sub
mov
in
push
movsl
mov
push
mov
outsb
fucom
ds
dec
sub
jg
xchg
jne
add
pop
cltd
add
jmp
loop
inc
fnstenv
mov
mov
gs
in
push
pop
push
fnstsw
daa
std
sub
sub
incb
mov
push
xchg
and
pop
pop
inc
je
aad
jp
mov
scas
test
dec
jl
jle
inc
add
inc
cmc
inc
pop
and
imul
ret
pop
addr16
bound
in
out
mov
jb
in
rcl
stos
dec
push
xchg
or
fnsave
jl
add
imul
mov
pop
pushf
leave
and
repz
push
movsl
dec
das
jnp
daa
xchg
pop
fdivrs
popa
popa
inc
lods
out
xor
mov
sbb
mov
rorl
int3
mov
popa
cmp
test
adc
xchg
push
jno
or
fucomp
stos
pop
repz
lds
dec
mov
xorb
pop
icebp
hlt
jno
cs
cwtl
sbbl
out
adc
mov
aaa
or
xor
jne
rcl
sbb
in
cmpsl
hlt
stos
les
pop
or
fisubs
lret
push
out
das
push
xchg
loope
dec
cmp
fdivl
xchg
mov
divl
mov
sbb
frstor
rolb
out
lock
dec
cwtl
cli
cmc
aam
dec
jle
dec
pop
adc
cmp
xchg
sbb
js
bound
js
lahf
lret
push
cwtl
push
shrb
mov
aad
in
push
jae
pop
inc
rcrb
sub
pusha
ret
mov
add
fisubrs
notb
and
add
cmc
and
cmpsb
and
inc
ja
je
cld
mov
iret
ret
sbb
ror
pop
mov
push
mov
inc
push
dec
cmpsl
js
xor
ljmp
xchg
mov
inc
mov
in
mov
arpl
xchg
mov
add
xor
adc
push
xchg
fdivr
jnp
pop
xor
int3
jl
jb
filds
fs
jge
pop
jecxz
imul
or
mov
fistps
pop
lahf
idiv
push
pop
dec
xchg
inc
scas
pusha
out
fldcw
cmp
scas
sbb
jae
cs
pop
lahf
add
and
outsl
and
xchg
or
mov
aas
popf
push
xchg
in
test
and
jb
cs
sub
js
mov
mov
fisttps
xor
inc
xlat
lock
mov
jne
hlt
and
repz
divb
xchg
loopne
js
push
ffreep
out
jmp
push
sub
push
cmp
mov
xor
sub
roll
dec
jno
dec
std
ret
xor
adc
push
insl
jle
pop
xchg
adc
cmpsl
shl
xchg
jo
mov
push
lahf
data16
mov
cmp
pop
mulb
lret
dec
cmp
dec
xchg
fidivrs
fdivs
cltd
cmpsb
inc
out
jae
xchg
cwtl
push
sbb
aam
push
mov
push
push
movsb
fistpll
and
xor
addr16
test
jo
jge
out
mov
mov
lods
lods
repnz
int3
mov
ficompl
mov
and
mov
imul
cwtl
imul
ja
cltd
push
popa
fadd
jecxz
cmpsb
addl
in
lods
test
daa
out
aad
xorl
addr16
mov
cmp
cwtl
loopne
push
lock
dec
sbbb
es
mov
mov
jmp
mov
push
cmc
adcb
mov
jecxz
aad
pop
hlt
stos
sub
shlb
jae
push
jg
jo
leave
mov
pop
test
rorb
movsb
into
pop
outsb
mov
pop
inc
pop
and
adc
dec
jae
jmp
pushf
cmp
test
cli
ss
lcall
loope
jae
fsubr
dec
pusha
xchg
push
ret
aad
loopne
pushf
inc
add
out
inc
lea
cld
sub
dec
pop
mov
xchg
jecxz
sbb
xor
inc
std
or
pushf
sub
xor
dec
adc
inc
repz
sbb
xlat
dec
push
insb
cmc
or
jbe
data16
mov
cmp
pop
outsb
into
sbb
loope
imulb
daa
jo
add
mov
xlat
cmp
and
sbb
stc
out
movsb
or
movsb
push
cwtl
xchg
lret
pop
push
xlat
call
mov
jmp
ficomps
fisubl
call
jl
mov
and
lret
fdivrl
xchg
sbb
pop
ja
iret
mov
mov
fs
insl
nop
shll
bound
shrb
sub
into
push
jae
adc
mov
push
int3
rorl
mov
pop
lret
lahf
stc
arpl
ret
adc
aas
mov
testl
adcb
jae
mov
inc
int
pop
and
sbb
in
pop
mov
loope
repnz
sbb
mov
mov
push
xchg
push
arpl
cwtl
stc
jnp
das
add
or
movsb
pop
push
cmp
je
cmp
mov
sbbl
xchg
xor
in
movsl
jb
mov
and
fnclex
mov
or
or
xor
insl
scas
mov
aaa
insl
dec
int3
mov
cmp
insl
pop
ss
xor
out
loope
push
pop
sub
push
test
roll
mov
bound
or
xor
stc
xchg
jg
bound
pop
sbb
iret
ja
ret
sub
insb
movsb
pop
mov
push
scas
stos
xchg
fdivs
mov
sbb
fmull
jle
rorb
pushf
repz
fldcw
int
mov
cmp
bound
out
int
nop
jns,pn
sub
and
jecxz
enter
cli
call
fcomip
adc
or
rolb
dec
cld
mov
xor
std
in
mov
add
push
arpl
or
sbb
push
imul
mov
cmp
loope
ficompl
inc
xor
mov
pushf
in
and
or
adc
cmp
addr16
cld
pop
aam
mov
daa
cmp
mov
cmc
push
add
adc
mov
lret
jns
js
dec
sub
push
in
bound
add
aam
inc
outsl
xchg
rol
push
push
dec
ret
inc
jp
leave
add
aas
xchg
xchg
fs
cmpsl
sbb
stos
xchg
repnz
cmp
jnp
pop
test
fstpt
into
add
pop
aam
and
pop
mov
sbb
mov
pusha
imul
cmpsl
cltd
pop
inc
shrb
fildl
enter
mov
aas
pop
xchg
fisttpll
subb
cmp
sbb
movsl
mov
test
xor
or
add
or
xchg
dec
stos
dec
fadd
jae
imul
mov
inc
lea
vmread
pop
andb
idiv
int3
mov
fiaddl
cmp
aaa
lea
adc
mov
mov
cld
sbb
or
pop
call
mov
mov
mov
out
jge
arpl
pop
xor
lcall
pop
adc
das
rorl
jb
push
loopne
sarl
push
imul
xor
xor
mov
cmc
mov
imul
in
mov
xchg
add
dec
mov
jnp
int3
lds
iret
icebp
mov
js
dec
sub
loopne
dec
loop
loop
out
into
and
js
repz
xor
dec
push
ror
mov
pop
data16
cltd
lret
imulb
sbb
lahf
pop
cmpsb
mov
sub
into
pushf
cld
mov
pop
and
xchg
iret
pop
pop
rcll
pop
icebp
mov
mov
and
int3
push
adc
add
pop
in
int3
pop
jnp
jns
lea
cwtl
out
sahf
test
das
pop
push
popa
cs
sbb
fsubs
push
sbb
dec
lock
xor
jnp
mov
aaa
mov
fisttpl
jp
adcb
les
mov
loop
stc
mov
and
addr16
mov
aad
idiv
ja
push
fs
mov
insl
push
lret
fldt
adc
or
fstps
adc
outsb
ret
adc
stc
and
mov
cwtl
int3
roll
inc
mov
popa
xchg
add
push
and
push
adc
les
aad
inc
fs
loope
fbld
xchg
stc
ret
ret
sub
cmc
adc
movsb
clc
ljmp
mov
divb
cmp
dec
mov
mov
inc
fidivs
mov
testl
inc
adc
clc
adc
call
dec
add
add
data16
jne
push
inc
sbb
outsb
mov
imull
sbb
or
inc
sbb
mov
jno
xchg
jo
add
sub
pop
test
mov
das
mov
xor
lcall
jp
xor
cwtl
xchg
imul
mov
push
fsubl
pop
das
jns
mov
out
sub
push
ficoms
popf
jo
pop
push
add
xchg
add
cmp
xor
jo
lahf
jge
jno
fcomip
push
arpl
jl
xchg
sbb
rcrl
imul
cmpsb
sub
or
ds
cmp
or
divb
sub
pusha
nop
jae
aaa
fnstcw
jmp
outsb
nop
jae
xchg
jnp
cli
xorl
stos
nop
sbb
test
imul
adc
in
xchg
mov
loopne
popa
dec
imul
sub
inc
leave
inc
or
pop
mov
sub
add
and
lahf
add
jge
jmp
mov
cmc
outsl
ret
dec
mov
fnstenv
jo
inc
mov
cmpsl
fmul
cmp
add
sahf
popl
mov
pop
adc
divl
orl
mov
inc
lret
sarl
adc
ljmp
repnz
rcl
fstpt
ljmp
xchg
sahf
fdivl
adc
outsl
fidivrl
daa
cmpsl
clc
shl
mov
push
or
call
cmc
sub
loop
mov
lock
dec
push
inc
mov
ss
inc
cmp
bound
and
or
mov
jp
insb
inc
dec
stc
pop
mov
inc
mov
jg
inc
xchg
repnz
arpl
cmp
xchg
sbb
pop
mov
jle
inc
pop
repnz
aad
jne
lods
jne
out
jecxz
xchg
sahf
adc
int
jnp
jne
mov
or
sub
pushf
mov
ja
insb
cltd
mov
pop
rcll
imul
add
inc
in
test
bnd
push
cmp
xchg
xchg
fld
push
test
mov
mov
sti
adc
jge
icebp
pop
dec
push
enter
mov
mov
cmp
pushl
into
push
enter
lock
mov
sub
or
je
int3
lcall
enter
shr
je
push
mov
mov
pop
inc
mov
pop
push
push
fisttpl
adc
fisttpl
lret
pop
adc
and
stc
test
mov
mov
sub
dec
jl
sub
das
inc
inc
xchg
adc
mov
push
sti
test
jno
dec
sbb
and
outsl
add
xor
loope
mov
push
push
stos
adc
aas
mov
cmpb
insl
jno
jns
or
lret
sahf
mov
xor
scas
sbb
jns
cmp
mov
lods
sar
jnp
mov
lock
mov
fnsave
xor
jae
add
inc
ljmp
fbld
pop
pop
test
jge
in
push
sar
cli
xchg
mov
fsubs
mov
stos
sub
cs
xor
ret
xchg
sub
jle
fstl
in
mov
add
not
add
scas
test
test
cmc
in
lock
lods
pmaxsw
ficoms
out
testl
scas
pop
adc
xor
stos
push
jb
push
cld
and
pop
dec
push
inc
movsl
push
xchg
subl
xchg
into
inc
mov
mov
cmp
ljmp
dec
add
in
adc
push
xlat
mov
cmp
cmc
mov
rcrb
cmp
jno
sbb
shll
jo
mov
out
sub
jns
add
mov
aam
push
daa
inc
sbb
push
lock
ror
or
inc
pop
dec
test
int3
xor
pop
ljmp
sbb
push
and
std
pop
mov
scas
negb
xor
in
cmp
fcmovu
into
repz
fwait
jecxz
pop
orl
mulb
sahf
fists
ffree
jo
add
xchg
xchg
out
movsb
sbb
jmp
imul
into
cli
ficoml
or
adc
dec
inc
mov
add
jle
push
pop
bound
inc
or
mov
das
out
mov
cmp
cmpb
cmp
rorl
cmp
insb
add
mov
xor
cmp
sbb
ja
out
dec
jns
dec
push
add
pop
add
nop
outsl
cmpsl
and
push
outsl
or
imul
rcrl
imul
pushf
jb
push
inc
out
sub
or
pusha
push
pop
adc
fisubrl
fcomps
sahf
lcall
in
mov
cltd
or
mov
inc
shlb
push
imul
sahf
jp
mov
or
jb
lods
ret
jb
mov
das
jg
push
pop
sbb
jge
jno
add
jno
into
push
sbb
pop
mov
mov
jecxz
roll
in
sub
stos
fbstp
divb
test
cli
aam
sub
jo
in
loope
push
adc
add
adc
xor
adc
enter
jg
fimuls
jle
jl
sbb
lret
div
insl
aaa
andl
test
cli
gs
cmpsb
scas
dec
push
mov
push
push
ret
fisttps
sbb
xchg
jecxz
ror
inc
jle
js
jbe
test
js
and
mov
dec
imul
loope
xchg
jg
xchg
xchg
cmp
cmc
movsb
dec
adc
popf
dec
push
in
inc
adc
push
mov
xchg
xchg
popa
sbbl
and
dec
sub
xchg
dec
mov
and
push
sub
mov
pusha
aas
cmc
sbb
lea
sbb
fmuls
mov
sbb
sbb
in
stos
cmp
out
movl
adc
xor
lret
in
mov
insb
sub
push
inc
push
cmp
ss
outsb
std
or
js
sub
adc
mov
cmp
jle
xor
mov
movsb
push
or
out
and
mov
fcompl
out
mov
int3
add
out
adc
add
pop
insb
jo
mov
imul
adc
jnp
out
pop
lods
jg
xor
popa
dec
add
repz
movsb
test
xor
movsl
andl
mov
fmuls
inc
outsb
xchg
stos
loop
fimull
data16
mov
pop
sahf
push
sti
xorl
mov
cltd
and
mov
and
loop
inc
cmp
std
push
and
fld
add
inc
xlat
jmp
xchg
test
mulb
add
add
fistpl
adc
or
cmp
or
rcrl
push
arpl
ljmp
fadds
dec
sbb
xor
repz
lret
push
lock
add
xlat
cmp
jns
cltd
mov
mov
jnp
scas
add
pop
mov
test
clc
and
mov
jo
rcl
cmpsb
cli
dec
pop
leave
js
mov
and
mov
xor
enter
add
imul
push
lock
repnz
cld
xor
and
xorl
in
and
sbb
push
adc
jb
rcll
lods
mov
jecxz
and
shrl
aaa
ds
inc
out
push
jno
ljmp
or
lds
outsb
clc
rorb
mov
mov
or
aaa
rolb
inc
and
mov
xchg
out
mov
out
cmp
pop
sbb
xsavec
or
imul
popa
pop
repz
dec
in
jmp
nop
dec
jnp
aaa
mov
adc
or
pop
sub
mov
out
and
xor
rcl
adc
dec
cld
cmp
sbb
mov
inc
pop
cmpsl
or
das
and
ret
xor
jmp
mov
rclb
mov
cmp
in
or
mov
cli
dec
mov
mov
es
cmp
jge
mov
outsl
pop
inc
xor
mov
adc
lret
fdivl
and
push
into
sub
xor
mov
or
aas
out
mov
scas
in
mov
popf
sub
daa
in
push
rcrb
pop
mov
jmp
int3
insb
in
xchg
pop
in
mov
out
inc
cmpsb
fldcw
sub
imul
gs
inc
add
sbb
clc
add
mov
mov
push
xchg
cmp
or
out
pop
pop
pop
mov
inc
mov
imul
aaa
pop
inc
and
mov
xor
movsb
ret
push
sub
cli
add
cmpb
add
xchg
sub
fcomi
loopne
mov
jnp
mov
or
notb
add
adc
mov
aaa
adc
jne
cmp
dec
fmull
jae
mov
jbe
int
in
cwtl
dec
mov
rcr
movsl
scas
sahf
int3
xchg
ret
cmp
push
outsb
pop
or
xchg
pop
jp
leave
cltd
mov
lea
mov
pop
mov
imul
mov
lods
push
int
addr16
mov
and
stos
sub
pop
xchg
dec
mov
roll
mov
js
add
mov
mov
int3
cld
fdivrl
ficoms
cld
stc
xchg
xor
lret
hlt
ret
sar
dec
sub
les
in
mov
sti
and
test
popf
mov
lods
out
dec
xchg
jg
test
out
mov
push
xor
cmp
cli
les
fmull
pop
daa
inc
xchg
xchg
lret
pop
mov
sar
xchg
test
xchg
mov
scas
test
fcom
pop
mov
mov
lods
sub
jnp
jl
repnz
enter
aas
sub
pop
or
cmp
pop
push
arpl
jge
aam
repnz
jb
or
cmc
test
push
sarb
and
add
lahf
insl
push
mov
pop
ds
mov
pop
fisttpl
sub
jmp
leave
or
ja
inc
test
or
or
into
push
lcall
dec
xchg
or
and
cmpb
xchg
xchg
adc
dec
jecxz
lds
fcoms
jg
jae
lods
push
je
insb
hlt
lahf
cmp
stos
test
mov
test
or
movsb
subb
std
jo
jb
mov
fdiv
push
rcrb
xchg
mov
repnz
pop
pusha
inc
xor
xor
cmpsl
paddb
es
iret
cmp
sbb
orl
add
mov
scas
arpl
add
lods
xor
dec
out
jae
stos
xchg
pop
shlb
insl
ss
jle
cmpl
jmp
sbb
push
jno
jo
out
cmp
sbb
test
jbe
push
aam
in
sub
xor
mov
xchg
mov
ret
shlb
ljmp
and
push
lea
mov
lcall
inc
out
dec
or
and
cmp
shl
out
in
mov
push
insl
pop
xchg
ret
in
lret
xchg
jns
fucomp
fstps
xor
sbb
push
inc
adc
pop
mov
mov
or
pop
daa
push
cmp
aam
daa
jnp
cmp
out
dec
insb
ret
push
sbb
std
xchg
pop
pop
addb
xchg
es
nop
pop
pop
dec
xchg
fwait
shrd
js
jae
jle
dec
xchg
sbbl
inc
mov
lds
xchg
jo
pop
mov
cmpsb
mov
pop
jne
clc
pop
sub
adc
jmp
insb
out
popl
ljmp
jmp
xchg
fcmovb
inc
int3
sti
es
mov
mov
lcall
cmp
std
xchg
inc
fsts
pop
std
in
inc
mov
pop
pop
jge
jne
jmp
and
sub
loopne
pop
cltd
push
jge
xor
js
cmp
pop
pop
push
push
pop
pop
mov
jp
mov
ret
push
test
sbb
pop
hlt
out
arpl
xor
repnz
test
aaa
test
mov
or
ljmp
fldlg2
je
mov
inc
in
jecxz
jbe
ficoms
cli
es
movsb
mov
cli
loopne,pt
mov
or
push
insb
in
jle
pop
into
push
jecxz
icebp
sub
rcll
sar
insb
pop
imul
out
pop
or
imul
xchg
push
jo
xchg
inc
jo
mov
fstps
cmpsb
test
sub
dec
xor
adc
adc
ret
leave
sub
and
add
lret
cmp
sahf
or
fcomps
loope
adc
test
xor
dec
out
inc
arpl
jg
cmp
mov
out
ljmp
ret
push
dec
sbb
lret
mov
and
push
ret
mov
scas
rorl
scas
and
rorl
das
repz
mov
out
sub
nop
mov
mov
test
xchg
push
dec
mov
pushf
std
sub
mov
imul
and
shl
push
push
cltd
sar
xor
and
negb
cmp
insl
sub
sub
sbb
lret
rcl
aad
add
pop
xchg
sub
aas
push
mov
sbb
leave
das
stos
xchg
mov
mov
xor
orb
nop
or
or
shrb
jo
xchg
jmp
dec
repz
pop
mov
or
pop
mov
shll
js
mov
mov
out
adc
xor
mov
insl
jbe
add
and
popf
out
fsincos
xor
sub
mov
inc
or
andl
and
jl
outsl
in
sahf
in
ficoml
xchg
pop
addl
lods
and
dec
mov
mov
test
mov
add
bound
imul
rolb
mov
scas
jnp
add
add
and
xchg
and
cmpsb
sub
fwait
mov
outsb
out
nop
and
int
out
fdivrl
in
mov
jns
lahf
mov
dec
mov
adc
out
flds
insb
pop
pop
outsl
adc
adc
inc
and
sub
inc
ss
in
imul
push
push
iret
sub
popa
cmpsl
or
sti
popa
fsubrl
dec
add
das
leave
sub
les
fs
dec
push
in
dec
sbb
sbb
lret
jmp
xor
cmpsl
xchg
sahf
sbb
inc
fisubl
mov
cmp
cld
fsubrl
int3
aam
lds
sbb
call
xchg
mov
cwtl
xor
push
pop
jnp
add
ds
jmp
add
mov
fidivrs
inc
in
push
mov
notb
cmp
xchg
and
and
xor
jns
mov
andb
xor
gs
mov
add
mov
hlt
jae
mov
add
jp
xor
sub
loopne
xor
sbb
push
shll
jecxz
xor
adc
clc
jecxz
adc
dec
je
fcompp
pop
jnp
daa
jge
jns
js
mov
push
rcrb
jno
jmp
and
cmp
or
jo
iret
mov
and
stos
inc
movsb
cmp
inc
data16
mov
jns
pop
addl
addr16
jmp
fstl
push
xlat
mov
shll
xor
and
dec
scas
cltd
mov
mov
push
adc
int3
dec
cmp
clc
and
jl
shl
pusha
sbb
mov
xchg
push
mov
cmp
test
push
stc
jae
mov
adc
mov
cmp
loopne
outsb
enter
mov
int
dec
cmpsl
mov
mov
sti
insb
pop
scas
or
ja
dec
ds
mov
push
pop
xchg
leave
mov
cmp
mov
jg
rol
xor
mov
push
jne
movsl
add
std
dec
ffree
jo
push
scas
and
fmul
shll
dec
stos
insb
andb
vpaddsw
loope
inc
iret
lret
out
std
jmp
mov
pop
hlt
movsb
xchg
lds
pop
and
lahf
in
scas
popa
mov
push
mov
xlat
jnp
mov
cmc
lods
iret
push
push
xchg
jmp
jle
add
les
sub
popa
push
inc
mov
pushf
mov
dec
xchg
pop
sub
movsl
jb
stos
popf
fucomp
mov
or
pop
into
mov
test
shl
push
jle
adc
cmpsl
repnz
lahf
jecxz
pop
or
ret
negb
daa
dec
jle
orb
xchg
mov
xlat
xchg
repnz
or
pop
insl
jg
jmp
jg
dec
pop
imul
fpatan
xor
std
mov
aaa
pop
xor
mov
mov
rcr
mov
xchg
pop
test
dec
mov
fdivrl
mov
out
mov
js
in
cmp
loopne
sub
mov
mov
mov
jbe
push
mov
bound
add
repz
loope
jmp
or
inc
mov
sub
mov
mulb
fcmovbe
insb
jg
push
push
or
pop
or
popa
jp
pushf
pop
hlt
jb
loopne
mov
dec
and
daa
cld
xchg
xchg
shll
push
dec
pushf
and
mov
aad
shrb
jle
pusha
mov
int3
push
cmp
sub
pusha
mov
popf
movsl
arpl
sti
shll
aas
cmp
out
lods
ss
rolb
cmp
pop
push
scas
jae
in
push
out
dec
lcall
inc
testb
xor
aad
addb
pop
inc
mov
bound
repnz
aad
sub
pop
movsl
popf
add
pop
pop
ljmp
es
jns
fs
call
cmpsb
in
lock
cmp
pop
hlt
mov
push
pop
out
lea
xchg
jmp
fnstenv
pop
adc
rolb
icebp
sub
cmc
add
dec
test
push
rolb
xchg
cmp
rclb
or
inc
xchg
lea
inc
sub
sub
int
jbe
fs
sbb
jle
sub
das
testb
or
inc
ljmp
cmp
dec
out
dec
adc
push
mov
sub
lds
jne
adc
adc
and
mov
jecxz
fwait
push
sbb
adc
xor
or
jmp
pop
loopne
push
mov
scas
lcall
inc
sub
or
lahf
pop
pop
push
ss
out
inc
loope
jl
sub
mov
pop
xchg
fs
das
adc
pop
or
clc
mov
or
jg
insb
sti
movsl
mov
test
jne
xor
pop
ror
in
or
ret
es
dec
xorb
sbb
sarl
bound
xlat
roll
int
fnsave
stc
sbb
and
movsl
mov
xchg
movsl
jne
fbstp
imul
jae
push
and
mov
sti
daa
lock
add
repnz
cmp
movsb
into
pop
adc
std
mov
jne
add
daa
rol
jae
push
adc
daa
ljmp
mov
loope
mov
add
dec
jae
xchg
std
xor
adc
enter
scas
xor
inc
mov
adc
outsl
in
mov
sbb
xchg
outsl
int
std
or
jge
cmp
jns
sub
icebp
mov
mov
push
mov
xchg
push
jnp
sbb
fsubrl
shlb
decb
inc
inc
fisttpll
mov
test
aaa
iret
ljmp
test
mov
hlt
add
xchg
inc
mov
jmp
pusha
add
pop
adc
push
jnp
je
pusha
adc
lea
lahf
sbbb
push
stc
testb
mov
out
jmp
gs
fstps
pop
lock
push
jl
leave
adc
or
add
gs
adc
leave
pop
or
xchg
pop
test
jl
push
xor
xor
mov
js
push
lret
cmp
ljmp
jns
adc
xor
sbb
shl
divl
sbb
push
mov
cmp
std
out
add
push
stc
jp
inc
out
xchg
mov
or
xchg
aas
stos
lods
lret
pop
cmpsl
mov
push
cli
add
lods
cmpsl
pushf
aad
ja
dec
xchg
push
mov
inc
out
mov
cmp
jle
cwtl
jmp
sub
and
test
adc
sub
data16
imul
push
and
sub
imul
sarl
pop
dec
nop
xor
loop
sti
or
add
std
fidivrs
jne
daa
sbb
and
xchg
mov
add
popf
add
mov
ret
jmp
ja
stos
push
or
pop
adc
mov
cmp
pop
shrl
mov
push
pusha
jb
mov
and
in
pusha
and
aaa
or
ljmp
shl
sahf
cli
into
lds
sub
fcoml
hlt
inc
cmp
mov
mov
popa
dec
inc
repnz
leave
in
es
ja
add
and
mov
cmpsl
dec
xchg
mov
mov
mov
in
dec
mov
sub
shlb
popf
cli
in
pop
rcrl
push
fbld
out
push
lcall
cmpsb
sbb
fdivl
lret
aaa
in
or
adc
dec
and
arpl
sbbb
or
push
sub
push
push
daa
aad
icebp
imul
cwtl
push
pop
pusha
daa
ret
sarb
je
in
mov
test
mov
pushf
xchg
sbb
adc
daa
stos
adc
cmpsb
insb
lds
mov
mov
into
pop
enter
pop
movsb
add
dec
shll
clc
inc
push
mov
xchg
decb
pushf
mov
mov
push
mov
cli
lds
daa
dec
xor
adc
push
cmp
push
dec
dec
pushf
fsub
dec
jb
insb
pusha
mov
orb
pop
ret
out
je
adc
lcall
scas
mov
mov
inc
push
mov
jne
push
adc
arpl
and
sub
imul
out
lock
ss
outsb
int
fsubrs
incb
or
icebp
mov
or
test
jge
jne
cmp
mov
pushw
cmp
add
push
sub
xchg
jmp
xchg
push
xor
or
or
push
or
pop
ret
pop
dec
sub
push
es
ficoms
dec
gs
dec
dec
and
sbb
xchg
push
add
mov
aam
jne
sub
and
sbb
sub
repnz
lods
jg
dec
xor
popa
dec
adc
xor
pop
mov
pop
cmp
pop
cmp
xor
cmpsb
adc
jne
mov
pop
addr16
sub
and
sub
or
dec
rcll
pusha
and
leave
jle
loop
aaa
push
inc
data16
mov
in
jle
in
mov
rolb
inc
lret
bound
fisttpll
into
roll
arpl
mov
lods
mov
call
fdivp
stos
sarb
idivb
push
adcb
cwtl
daa
ja
jne
insl
dec
cld
fnstsw
jo
addr16
push
mov
jne
mov
jle
into
pop
xchg
jle
inc
dec
xchg
fimuls
adc
pop
adc
or
dec
cmp
sbbb
ret
mov
mov
add
jmp
imul
push
fisubrs
mov
lds
adc
fucom
loopne
xchg
mov
lea
stc
mov
or
repnz
bound
into
cmp
cmpsb
push
popf
aaa
xchg
lods
push
cmpsl
mov
lret
ret
icebp
aam
pop
fs
insl
push
pushf
hlt
cmp
in
repz
push
or
outsl
sub
mov
jge
dec
jne
lahf
add
push
jecxz
mov
mov
add
cltd
jg
add
sbb
adc
push
mov
add
icebp
jmp
cmc
mov
add
testb
iret
add
cmp
sub
xchg
push
inc
cmp
int
mov
loope
stos
je
push
daa
addr16
fdivs
inc
lret
pusha
mov
sbb
dec
sbb
repz
mov
sbb
stos
aas
mov
dec
mov
inc
cmpsl
cmpsb
cmc
and
sarb
jle,pn
mov
jp
mov
sarl
add
dec
into
dec
cli
sub
sahf
sti
dec
clc
jecxz
push
mov
cld
dec
fisubs
xchg
jnp
jle
lcall
gs
jl
xchg
loopne
push
iret
or
stc
push
push
pop
push
scas
xchg
dec
push
xchg
jge
add
or
rcll
retw
mov
pop
jb
jl
loop
stos
and
subl
pop
pop
cmp
dec
shl
dec
jg
and
mov
fwait
orl
cmp
push
xchg
cs
pop
xor
inc
jle
test
cld
dec
push
stos
push
dec
push
push
in
xor
xor
lret
divl
jecxz
or
xorl
xchg
call
movsl
sbb
popf
negb
mov
and
in
xor
inc
xchg
cmp
test
xchg
rcrl
push
jmp
add
mov
popf
stc
fisttps
adc
fbstp
add
fldenv
test
lods
ss
pop
mov
out
and
sbb
push
dec
adc
lods
cmp
sarl
xchg
push
imul
sbb
ret
iret
out
je
mov
cmpsb
imul
loope
jg
loopne
jl
pushf
adc
inc
mov
mov
sarb
add
push
dec
jne
jmp
in
ja
mov
adc
xchg
push
insl
pop
ss
jl
or
lret
sti
in
test
mov
jno
imul
pop
sub
jle
scas
lds
ret
cld
out
or
and
mov
int
insb
je
and
aas
mov
and
inc
dec
test
push
rorb
pop
ret
sbb
xor
xor
js
push
pop
dec
lock
mov
xlat
jg
call
data16
out
stos
mov
xor
jg
add
sub
xchg
ljmp
call
dec
xor
fnclex
push
dec
cmpsl
in
sub
mov
adc
mov
jl
fimull
or
jbe
pop
mov
xchg
popw
in
push
iret
mov
es
cltd
scas
fimuls
lret
arpl
ja
imul
mov
mov
inc
or
add
aaa
mov
das
and
cld
testb
xlat
adc
js
inc
xor
pop
orl
jbe
int
or
testl
sar
dec
sub
lea
inc
sub
rclb
cmpsb
cli
xchg
or
pop
xor
inc
ljmp
lea
dec
push
test
add
daa
push
xor
sbb
std
gs
pop
das
mov
and
insb
lock
adc
insb
dec
das
fadd
cmp
xchg
push
pop
cli
mov
mov
lods
jle
cwtl
outsl
sub
stos
aaa
sub
mov
mov
mov
mov
inc
jo
mov
inc
int3
les
and
mov
push
push
adc
xchg
adc
sub
xchg
icebp
movl
outsl
repnz
cmp
push
and
and
and
das
push
sbb
into
stos
cld
dec
mov
push
adc
es
add
repnz
jne
and
dec
mov
addb
sarl
inc
imul
enter
call
mov
arpl
shl
push
inc
jns
cs
xchg
xchg
xchg
cltd
iret
mov
cwtl
insl
mov
shll
jmp
dec
jae
in
mov
jg
cmc
outsb
in
mov
mov
mov
dec
insb
sbb
cmc
fimuls
xorb
push
pop
mulb
mov
repnz
lret
push
aam
add
fistl
or
fstps
jmp
dec
inc
adc
dec
mov
aaa
cmpsl
mov
jl
and
jno
mov
sub
ja
fldenv
mov
sahf
insl
decl
gs
loope
pop
jl
mov
divl
sbb
int3
rcll
fsub
add
rorl
jns
sub
rcll
lret
sbbl
and
mov
movaps
mov
icebp
ljmp
xchg
inc
jo
xor
sub
xor
fldt
divb
push
icebp
out
cltd
jecxz
and
jbe
roll
push
std
jecxz
push
js
mov
push
fists
fstpl
add
in
mov
movsl
lahf
sub
testb
or
mov
test
aad
leave
test
mov
xchg
fstpt
shll
xchg
out
lret
mov
scas
pop
mull
ret
lock
testb
pop
sub
pop
ja
cltd
fldcw
loope
cli
outsb
dec
lcall
add
js
mov
bound
dec
cmp
pop
das
jmp
jns
sub
sbb
xchg
in
push
pop
and
inc
test
mov
loop
sti
cltd
and
jb
mov
mov
nop
cmpsl
mov
jg
scas
mov
fmuls
pop
das
push
push
cli
cmp
shl
fwait
loope
or
push
add
out
sbb
xchg
loop
add
xchg
cmp
lods
lods
jne
or
xchg
shlb
out
and
andb
addl
jp
sahf
xchg
add
test
lret
pop
stos
cmc
xchg
push
shll
daa
int3
adcb
push
xor
mov
jle
mov
dec
sbb
pop
jno
pop
sbb
sub
cld
iret
mov
pop
in
jns
adc
xor
in
imul
shl
mov
push
xorl
add
dec
das
or
jno
push
rolb
lret
pop
rcll
inc
sarb
lret
sub
push
lea
mov
xor
cmp
stos
lret
sti
test
sbb
and
addl
xorb
orl
add
sub
adc
je
push
sub
inc
daa
in
aaa
pop
bt
xor
inc
inc
xor
pushf
mov
lret
loop
movsb
ret
cmp
test
addb
ret
push
out
loopne
fiaddl
xchg
xchg
mov
sub
push
mov
xchg
cwtl
inc
jns
hlt
aaa
xchg
pop
push
outsb
sub
int3
repz
cmp
imul
imul
cmp
mov
mov
adc
mov
pop
jecxz
fildl
test
lods
pop
inc
pop
xchg
lods
add
cmpsb
or
jmp
fstps
daa
scas
ja
mov
xor
stos
jne
cmp
fsubrl
divb
nopl
jns
jae
cltd
mov
inc
repz
cmp
fnsave
int3
sbb
test
lock
push
or
shr
jnp
push
sbb
sub
sbb
fildl
test
lcall
adc
jp
shlb
push
pop
xchg
lcall
ja
xchg
in
mov
xchg
adc
and
jnp
cltd
pop
cmpxchg
lds
stos
int
sub
or
in
outsl
sahf
xor
pop
jmp
xchg
data16
mov
lea
xor
lock
cs
cmp
sbb
jecxz
fistl
sahf
dec
lock
dec
adc
add
repz
xchg
fcomps
mov
lods
pop
outsl
sarb
xor
shll
adc
adc
mov
xor
inc
add
fldt
add
ja
repz
adc
sub
dec
sbb
mov
test
xchg
out
mov
cltd
adc
das
xchg
sbb
iret
fdivp
movsb
jge
dec
inc
in
xlat
sub
push
outsl
lods
push
sbb
xchg
bound
pop
xchg
push
mov
mov
xchg
js
arpl
icebp
clc
jb
xlat
test
into
outsb
sbb
xchg
xchg
push
test
xlat
push
jmp
pusha
cmc
pop
jl
add
jg
xchg
jmp
flds
jb
or
inc
lret
movsb
rorb
mov
dec
mov
sub
dec
aas
push
das
or
insl
lock
addr16
and
ljmpw
xor
mov
jb
mov
in
and
sbb
test
push
scas
xor
ljmp
je
or
lret
adcl
xchg
cmpsb
xor
subl
clc
enter
sbb
lea
jne
jp
imul
cmc
not
sbbl
xlat
mov
paddw
jae
pop
jno
outsb
mov
mov
test
inc
lods
mov
les
test
ret
adc
mov
add
aam
adc
sub
dec
ret
inc
stos
xchg
push
inc
lock
fucomi
jg
outsb
scas
inc
icebp
inc
lahf
xchg
inc
pusha
arpl
jmp
inc
bound
in
mov
sub
push
leave
outsl
jg
and
test
adc
inc
mov
jns
and
cmp
cmpsb
mov
mov
in
dec
icebp
pushf
das
fldenv
jae
push
icebp
iret
sbb
scas
mov
movsl
dec
lods
int
cmpsb
or
xor
negb
add
jecxz
in
fmull
mov
scas
les
adc
ljmp
out
mov
insb
cwtl
fs
mov
dec
dec
repnz
or
mov
cs
pop
jnp
hlt
test
jo
repz
shrb
in
pop
lcall
mov
jg
jae
in
fs
push
adc
imul
and
enter
ss
imul
or
mov
jecxz
enter
rorl
movsl
dec
sbb
xlat
out
movb
mov
and
add
mov
test
push
je
pop
daa
and
fnsave
cli
lock
inc
mov
into
loope
inc
xlat
outsb
xor
test
jns
sub
das
lret
pop
or
mov
mov
mov
addr16
pop
add
addr16
push
outsb
cmp
sbbl
arpl
aas
mov
iret
cld
test
es
aas
adc
fidivrs
inc
mov
adc
dec
pop
and
mov
dec
aas
loopne
out
dec
rcrb
add
popf
ljmp
sbb
mov
mov
and
insb
mov
pushl
int
in
sub
mov
lret
lcall
jbe
dec
cmp
push
cmp
cmp
pushf
icebp
push
jl
int
insb
out
pusha
and
lret
inc
jge
fidivrs
clc
jb
mov
jmpw
adc
in
lds
jne
sbb
outsb
xchg
xor
pop
and
inc
mov
lods
xchg
in
imul
sbb
ja
loopne
sbb
pop
fnsave
int3
or
mov
popf
loop
pop
daa
cltd
loop
mov
sub
xor
xor
test
dec
or
mov
shlb
xchg
daa
inc
or
adc
in
inc
popf
sub
leave
push
jns
adc
loop
loopne
scas
les
push
xchg
sbb
lock
out
xchg
push
add
adcl
sbbl
or
mov
in
cli
pop
in
test
std
cmp
enter
rcr
jo
jbe
pop
mov
cld
aad
dec
in
mov
cs
addr16
dec
cltd
std
inc
jne
jne
inc
xchg
dec
xchg
int3
push
xor
shl
incb
add
lock
ficoms
add
mov
dec
sbb
iret
lea
xor
in
add
cmp
filds
cmc
jbe,pt
icebp
xor
cli
sbb
in
scas
jo
in
add
cmp
leave
add
lret
fucomp
addr16
and
mov
cmp
cmp
repnz
leave
nop
sub
int
jb
xchg
cmovg
mov
or
sub
mov
leave
sbb
mov
into
clc
imul
sub
adc
pop
lods
mov
rcrb
inc
sbb
pop
push
jge
inc
mov
pop
sub
mov
stos
pop
adc
mov
fcmovnbe
test
leave
into
push
mov
mov
je
lods
xor
call
sbb
aas
in
popa
dec
into
pop
aad
mov
sbb
inc
insl
dec
sub
data16
jb
js
jmp
xor
sub
popf
fdivrs
sub
sbb
adc
mov
cmp
movsl
or
or
pop
mov
sbb
dec
and
addb
ret
data16
adc
mov
add
movsb
push
clc
cmp
popf
mov
adc
fwait
xor
cmc
xor
jnp
cmp
sub
mov
aas
call
sub
std
lcall
outsl
mov
les
pop
push
outsb
mov
xchg
leave
lea
mov
pop
inc
lret
cmp
js
stc
fcmovnu
pop
subl
adc
aas
and
lea
aaa
ljmp
or
cmpsl
sub
imul
ficoms
adc
xchg
and
movsb
mov
and
add
mov
or
cwtl
fmull
jmp
fildl
cmp
pop
push
mov
or
xor
mov
jbe
xchg
inc
xchg
mov
sbb
adc
mov
jae
inc
jne
gs
jge
jmp
ss
shrl
xor
xor
push
cmp
lods
mov
mov
lea
xorb
sub
movsl
fcmovnu
out
jmp
dec
jge
mov
dec
sbb
rcll
fbstp
push
push
inc
aaa
add
jno
cmovg
sub
dec
mov
les
les
and
inc
nop
lock
in
scas
push
lds
dec
cs
pop
fildll
sti
xor
dec
mov
dec
iret
aad
and
sub
test
and
rclb
xor
jb
icebp
jbe
mov
mov
mov
mov
sbb
dec
lock
push
mov
enter
cmpsl
push
sbb
mov
pop
jge
lahf
lcall
or
sbb
pop
in
out
outsb
mov
dec
cmc
or
jmp
or
in
ds
ja
jnp
int
mov
pop
inc
fidivl
sub
or
mov
aas
push
xchg
fildl
loope
mov
sarl
mov
sub
inc
fcmovnbe
inc
cmp
xchg
cmc
test
pop
je
adc
sbb
sub
cs
into
mov
sub
push
fstpl
lds
pop
in
inc
push
loope
enter
sbb
sbb
inc
mov
loop
xor
fwait
popf
movsb
out
mov
adc
jb
jb
xor
adc
mov
or
rcll
xchg
inc
inc
pop
movsb
xor
mov
out
mov
add
in
and
mov
push
enter
mov
bound
fwait
jo
xchg
sahf
out
dec
stc
lea
out
mov
mov
or
jecxz
enter
mov
ljmp
gs
xchg
xor
gs
jns
jmp
jo
arpl
nop
lcall
push
jp
gs
mov
jg
fsubrs
in
jl
cmpsl
sub
sti
mov
call
aad
xor
inc
dec
loope
fistps
punpckhdq
cli
pop
das
pushf
lods
xchg
mov
push
adc
ret
mov
sub
es
inc
sub
xor
int3
sbb
outsl
sub
adc
mov
pop
jmp
lcall
cmp
pop
add
dec
mov
dec
ret
push
push
xor
scas
mov
cmp
pop
jbe
mov
jno
xchg
call
inc
addr16
add
pop
sub
stc
jp
ss
cmc
fs
outsl
and
aad
adc
aaa
xchg
jae
je
mov
mov
stos
inc
movsb
and
adc
jo
push
xor
fiaddl
inc
dec
mov
mov
inc
movsl
pop
dec
insl
call
ss
and
imul
psllq
hlt
in
ljmp
das
pop
jb
fcompl
cmpl
andps
andl
arpl
adc
xchg
jmp
xchg
fsts
pushf
fisubs
lret
and
mov
aam
shlb
mov
mov
outsl
out
xlat
andb
pop
cmp
push
mov
lret
mov
repnz
daa
inc
jge
adc
hlt
shrl
test
jbe
cmp
mov
cwtl
xchg
sti
xor
sub
shll
sarb
push
cmc
sbb
mov
movsl
cmpsl
or
pop
jo
jbe
clc
mov
push
sarl
push
xchg
pop
dec
js
movsl
stos
lds
iret
mov
mov
lcall
or
je
test
bound
dec
push
push
sub
scas
jbe
jbe
ret
cmp
repz
jp
mov
and
push
fwait
cmp
add
xchg
ja
cmc
mov
adc
mov
mov
aam
add
in
inc
stc
test
sub
shl
push
jmp
lea
adcb
jp
jbe
stc
test
jo
movsl
mov
adc
or
aas
dec
es
stc
flds
cmp
fcomip
mov
idivb
out
aas
fistl
sbb
jl
lahf
xor
mov
adc
add
movb
push
in
push
outsb
xchg
pop
aam
ljmp
sub
mov
rclb
jecxz
jo
adc
cmp
mov
pop
jb
es
xlat
or
push
pop
cmpsb
mov
outsl
fwait
addr16
test
jge
jp
movsb
sub
sub
jo
mov
jnp
fnstcw
loope
dec
lods
pushf
pushf
dec
push
ja
rorl
sub
dec
inc
cwtl
cs
push
daa
push
cmp
shll
cmp
or
xchg
inc
adc
stc
push
scas
in
icebp
jae
repz
lahf
data16
imul
xorl
outsb
fs
add
movsb
in
ss
iret
sub
mov
inc
xor
into
dec
imul
or
lcall
popa
and
bound
pusha
lods
hlt
das
push
gs
mov
int
imul
mov
out
stos
leave
imul
pop
out
loopne
into
pop
dec
dec
sbb
inc
inc
iret
pop
popf
dec
jge
aad
mov
pop
clc
adc
pop
cmpb
insl
cmp
sbb
into
dec
enter
lock
pop
cmpsb
sbb
popa
or
fisttps
jmp
mov
fbstp
mov
cmc
pop
fs
daa
lock
sbb
mov
or
cmpl
sub
mov
mov
loopne
sbbl
lret
test
jbe
cmp
test
mov
and
mov
sahf
pop
sbb
xchg
mov
push
dec
and
cmp
icebp
xchg
adc
lock
ljmp
roll
in
scas
outsb
out
dec
jmp
adc
jbe
das
jb
test
adc
loope
jns
push
or
pushf
iret
imul
sbb
sub
leave
decl
jecxz
inc
gs
int3
mov
scas
adc
data16
cmovge
sbb
push
and
aas
adc
cmp
xor
imul
jb
dec
ja
in
dec
sti
leavew
add
outsl
sub
pop
test
add
add
jmp
inc
mov
xchg
insb
pop
fiaddl
jae
loope
xlat
gs
adc
loope
test
std
pop
push
adc
inc
test
xor
mov
rorl
jnp
mov
imul
dec
xchg
xchg
and
xor
cmp
mov
lods
mov
xchg
clc
ret
mulb
or
pop
int3
sbb
mov
mov
mov
mov
mov
std
xor
mov
xor
fmuls
cmpsl
pushf
stos
loope
stos
mov
mov
nop
cld
mov
sbb
dec
lock
lea
in
fidivrs
cmp
sbb
fimull
bound
sbb
fcoml
mov
mov
cmpsb
mul
adc
xchg
fcmovnb
adc
fnstcw
sub
repz
cltd
adc
in
decl
fwait
mov
pop
inc
cmp
xchg
cmp
bound
out
nop
sbb
or
test
adcb
add
dec
xchg
push
daa
out
push
jb
push
cmp
mov
xor
push
into
ss
sub
dec
aaa
std
push
movsb
into
imul
stc
lea
jmp
mov
sub
ja,pt
sbb
aam
add
add
mull
aam
cmc
add
les
jge
mov
cwtl
loop
sahf
cmp
inc
push
in
movsb
enter
std
nop
push
xchg
mov
mov
jns
pop
adc
sub
jg
and
ret
test
test
pop
aaa
dec
outsb
or
add
xor
shll
addr16
jg
std
cmp
jns
adc
add
out
mov
cmp
dec
xchg
dec
mov
jmp
cmp
inc
and
mov
imul
into
mov
cmp
je
xchg
les
aad
stos
jo
loop
pop
negl
call
jae
out
mov
outsl
ljmp
insb
daa
incb
fst
jbe
sti
mov
movsl
jg
push
sbb
fstpl
test
xlat
shrb
aad
fs
imulb
mov
push
dec
xchg
sti
dec
and
sahf
jl
lds
jecxz
push
push
rcr
sub
into
push
inc
mov
out
or
fcoms
hlt
icebp
mov
add
cmp
stos
sbb
enter
and
or
sub
push
cmp
fwait
cmpsb
cwtl
and
jge
mov
xchg
mov
rolb
rcrb
test
movsb
or
fwait
push
fwait
ret
gs
jle
sti
dec
fisttps
aad
nop
add
and
inc
inc
and
pushf
daa
stos
addl
dec
mov
cmpsb
and
arpl
jnp
lods
dec
and
pop
jp
pop
mov
cmp
mov
mov
js
addr16
dec
in
idivb
xchg
xor
aaa
sbb
rcl
xchg
in
fs
bnd
sub
movsl
inc
inc
push
cmc
pop
and
inc
mov
out
enter
mov
mov
pop
mov
adc
in
add
mov
xor
or
jbe
xchg
and
lds
movmskps
and
cld
cli
idivl
add
movsb
repnz
bnd
into
ja
cmp
cmp
xor
xlat
adc
pop
jno
sbb
inc
or
iret
in
imul
or
and
out
movsb
hlt
sbb
sub
ljmp
insb
sub
xor
cmpsb
aad
int
jae
clc
mov
inc
push
xchg
pop
test
into
mov
test
call
cmovbe
das
insb
xor
or
xor
cwtl
sti
jge
xchg
mov
xchg
clc
push
fmuls
xor
movsb
ja
mov
sbb
inc
lahf
aad
jb
imull
scas
sbb
popa
mov
fbld
fcmovnu
jne
mov
addb
test
jbe
sahf
sbb
pop
or
shll
mov
jle
lea
arpl
aad
in
std
inc
sbb
xchg
add
jle
mov
in
mov
sub
push
sar
add
push
jle
jecxz
popl
mov
jmp
lcall
sti
cmp
mov
mov
rolb
data16
std
js
fcmovnu
or
stos
fs
or
out
mov
inc
adc
push
enter
loopne
sub
imul
iret
sahf
mov
sahf
popf
lret
push
mov
pop
sahf
and
mov
mov
in
lcall
xor
push
cmp
iret
jl
call
sbb
js
and
imul
sbb
cmpsb
push
fsubs
and
push
iret
pop
jnp
mov
jecxz
aam
xchg
mov
sti
cmp
ficoml
sti
inc
hlt
mov
gs
pop
jne
in
icebp
and
mov
pop
jnp
mov
lret
je
loop
xor
int
dec
xchg
mov
mov
mov
or
push
cmpps
pop
jo
mov
fs
cmp
outsb
sbb
xchg
inc
push
lcall
nop
test
cmp
cltd
xchg
pop
outsl
pusha
sub
add
jg
cmp
cld
xchg
push
iret
movups
push
jae
mov
mov
fildll
mov
lahf
pop
mov
movsl
jno
lea
dec
ret
pop
xor
shll
xor
imul
mov
nop
add
pop
fistps
adc
add
insb
shrl
mov
sbb
hlt
jg
les
fiadds
and
sub
lods
dec
int
jno
loope
jg
mov
xchg
fisubrl
xor
test
jmp
ja
out
insb
js
adc
pusha
fstpt
ret
push
cwtl
jo
dec
xchg
and
push
xchg
leave
dec
or
push
flds
movsb
cmp
loop
jns,pt
and
xchg
jmp
in
popf
adc
mov
push
stos
sub
lods
xchg
cmc
adc
fstps
sbb
pop
outsb
into
sub
push
arpl
mov
cltd
xlat
test
daa
xlat
lea
aas
add
push
into
test
imul
jne
pop
sbb
lcall
popa
hlt
cmp
lahf
daa
adc
push
mov
clc
sti
jmp
pushf
movsl
mov
adc
fstl
sbb
es
mov
xor
ret
mov
inc
xlat
hlt
push
insl
shll
insl
lret
mov
fstpt
test
pushf
andl
jecxz
adc
lret
lret
pop
loop
cs
cld
aas
ret
mov
shll
lahf
mov
jae
addr16
cwtl
mov
and
sub
jno
call
add
xchg
sub
scas
inc
arpl
andb
jbe
clc
int
mov
lahf
and
ja
jecxz
xor
int
inc
test
xchg
ss
out
xchg
pusha
movsb
sbb
jne
addr16
das
movsb
loop
dec
or
fmull
mov
and
lock
xor
add
jmp
cmc
jnp
pop
sar
or
in
cld
sbb
jbe
xchg
xchg
incb
das
enter
pop
in
scas
mov
cld
or
daa
sub
bound
and
or
sti
shlb
jae
xchg
stos
xchg
dec
sbb
mov
enter
push
jecxz
fcomp
loop
add
add
push
insl
sti
adc
dec
push
or
sahf
push
test
addr16
mov
sti
push
test
lods
adc
mov
sti
ja
je
xor
test
popa
imull
inc
int3
mov
test
fwait
shr
dec
pop
in
and
and
xor
mov
cmpsl
xchg
sub
fsubrl
inc
dec
lahf
and
aas
cmp
in
iret
sbb
lods
jne
or
adc
xchg
test
adc
mov
stc
xor
test
stos
xor
cmp
les
and
rcrb
sub
int3
sbb
xchg
pop
adc
scas
fwait
jae
icebp
pop
mov
cwtl
mov
pop
sub
pusha
punpckldq
mov
call
cmc
sbb
mov
in
mov
push
aas
dec
das
mov
iret
mov
dec
jmp
xor
test
fldcw
orl
adc
xor
mov
jmp
xlat
test
inc
push
pop
mov
insb
insb
in
cwtl
xor
out
add
aam
push
xor
loope
sub
adc
cmp
xor
call
sub
pop
and
hlt
je
sub
xchg
fldl2t
push
loopne
sbb
shrl
inc
push
or
pop
dec
imul
icebp
push
push
out
mov
shlb
addr16
fstps
insl
lcall
iret
xor
sub
in
ljmp
test
or
pusha
jmp
dec
cmp
addr16
cltd
push
aam
or
pop
mov
mov
add
push
and
add
outsl
mov
rclb
addb
and
popf
setg
sub
and
aad
mov
sub
sti
dec
in
push
mov
adc
in
jl
fmull
jb
stos
xchg
sbb
in
pop
psllw
ret
inc
or
mov
data16
lahf
add
mov
mov
inc
mov
cmp
mov
sub
pop
jge
mov
push
fistl
lret
push
and
cwtl
shrb
cmpb
roll
lods
dec
xchg
pop
popl
mov
test
cmp
scas
inc
prefetch
xor
imul
out
add
push
cmp
fbld
inc
sub
pusha
jo
shlb
hlt
enter
add
pop
add
outsb
sub
fs
mov
sbb
sbb
sbb
or
int
mov
lahf
loope
fiadds
fisubs
dec
in
mov
mov
das
lock
test
lods
xor
mov
nop
ret
imul
adc
xchg
xor
aam
adc
imul
sub
jg
push
sub
or
clc
or
test
jno
cs
lret
add
js
add
lds
jle
cmp
scas
sbb
xchg
jecxz
push
call
add
clc
repnz
mov
cmpsb
repnz
or
push
sti
cmp
lret
cs
mov
push
pop
mov
xchg
xor
ja
jmp
add
out
mov
xchg
push
sbb
filds
movsl
inc
xchg
sub
sar
popa
mov
ljmp
dec
push
add
or
pop
lock
cld
xlat
pop
jg
repz
push
or
jge
or
push
out
sbb
pushf
in
mov
xchg
push
cmp
icebp
mov
jp
gs
push
jecxz
xchg
xchg
push
pop
test
mov
cmp
jmp
dec
in
jmp
xchg
jns
push
sbb
adc
cmp
ret
and
icebp
stos
jns
cli
enter
fstps
sub
repz
fisubs
pop
aam
lcall
sti
push
pushf
mov
popf
push
or
jle
loopne
ljmp
dec
int3
insl
pop
push
scas
popf
mov
ret
xlat
dec
lret
cmpsb
cmc
xor
add
loopne
and
out
gs
nop
in
xchg
dec
lds
inc
xlat
jb
and
mov
sbb
push
add
inc
cli
loope
pop
outsb
adc
and
dec
ret
pop
jo
xor
or
sahf
and
imul
mov
push
jg
mov
adc
movsl
mov
mov
rorb
adc
iret
mov
add
inc
xlat
push
sahf
pushf
lds
mov
es
xor
xchg
inc
sti
ds
push
sub
in
aaa
add
or
mov
fucomip
shrd
jmp
cmp
jno
pop
dec
sub
stc
leave
xabort
addr16
sahf
xor
cli
inc
cmc
and
fdivrs
mov
cmp
inc
orl
mov
dec
xchg
jp
lock
dec
adc
insb
lahf
pop
and
repz
push
les
adc
dec
pop
push
popf
ficoms
xchg
mov
push
lock
add
movsl
mov
sbb
mov
jbe
push
es
pop
les
jg
rol
mov
xchg
in
jno
and
xchg
sti
shlb
and
insl
xchg
andl
std
xor
mov
stc
arpl
push
fs
insb
cld
addr16
subb
testl
lock
roll
lds
dec
les
mov
sahf
xchg
mov
mov
lods
not
jbe
leave
xor
inc
sbb
cmpsl
fs
loop
xor
dec
lahf
fdivrs
cmp
xor
mov
outsb
fisubrl
mov
mov
ss
dec
pusha
sbb
mov
imul
cmp
cmp
push
jl
shl
decb
cmp
xor
fisubrs
insl
and
ds
adc
ja
scas
sbb
mov
xor
xchg
sbb
test
mov
push
lcall
push
and
sub
adc
rclb
aad
divl
in
inc
into
mov
sti
movsb
cmp
popf
push
mov
add
xchg
popa
and
nop
xor
rcll
insb
sbb
xor
mov
mov
jno
cmc
adc
imul
mov
jo
jl
sbb
cmp
or
and
xor
push
xor
movsb
outsb
cmpsl
lcall
add
sub
and
inc
pusha
mov
jp
sub
imul
adc
sub
sbb
hlt
add
dec
std
mov
cmp
pop
sub
adc
and
mov
xor
push
jnp
sbb
cmp
xchg
push
inc
js
mov
repnz
loope
lds
pop
aam
lahf
sub
divl
xchg
xor
popf
mov
xor
xchg
rcl
lahf
cmp
jne
aaa
xor
outsb
jmp
push
add
rcr
cmpl
sub
jge
cmpsl
and
movsb
imul
xchg
inc
pop
in
mov
pop
mov
mov
push
in
sti
adc
shlb
xchg
imul
push
mov
scas
iret
cli
push
pusha
adc
inc
xor
xchg
cltd
std
bound
cmp
sbb
inc
mov
mov
or
pop
jmp
test
mov
pop
sub
and
sub
sub
jl
insb
aas
jo
or
pusha
scas
jo
rolb
cmp
leave
add
mov
cmp
mov
mov
scas
inc
mov
rcll
ljmp
addb
data16
sub
cmp
aas
xor
cld
push
sub
jns
add
add
push
fidivrs
cmpsl
push
int
std
cmpsb
std
pop
gs
sahf
imul
xchg
jmp
xor
rcrb
int3
add
aaa
ja
lock
push
es
push
fiaddl
sub
movsb
mov
sbb
into
inc
sub
out
jns
push
jmp
cmp
iret
leave
xor
or
adc
dec
cs
jo
lret
repz
fcmove
sarl
das
call
icebp
sbb
insl
inc
pop
dec
adc
pop
cmc
leave
aaa
add
dec
into
aaa
sbb
in
mov
test
jle
rorl
dec
sti
xor
mov
popf
sub
xor
pop
xchg
add
cmp
dec
inc
pop
imul
jo
fcom
mov
out
shl
out
mov
mov
mov
hlt
icebp
scas
bnd
rcr
or
push
cwtl
fidivl
or
jge
stos
ljmp
lods
xor
pop
fbld
sub
sub
inc
movb
punpckhdq
mov
or
mov
das
xor
sbb
ja
mov
jp
adc
dec
adc
xor
mov
inc
xchg
push
test
add
insb
jge
jp
in
xchg
out
fwait
cli
testl
sbb
push
xor
into
mov
aaa
xchg
sub
push
nop
and
xor
pop
and
es
ss
adc
jns
inc
or
in
adc
sub
nop
mov
sub
pop
leave
movsl
mov
bound
jb
insl
aad
or
or
mov
jp
pop
and
pusha
push
jmp
push
fmull
sub
mov
divps
or
jmp
mov
aad
dec
cs
jge
pop
and
push
push
push
xchg
out
push
jmp
sbb
jo
mov
fs
lcall
loopne
addr16
pop
mov
cmpsl
push
adc
mov
js
or
jge
popf
scas
adc
mov
mov
jp
push
ficomps
xchg
or
mov
cli
mov
mov
pop
xor
push
cmp
pop
ret
test
or
daa
ret
mov
jg
xor
xchg
cmp
repnz
and
cs
movsl
lods
pop
sbb
adc
into
ss
cmp
xchg
mov
movsb
outsb
and
jmp
jecxz
std
jae
cltd
mov
clc
mov
je
lods
popa
lret
insb
pop
push
pop
adcb
or
mov
imul
sti
or
jno
push
mov
test
or
push
push
in
inc
xchg
adc
les
pushf
mov
mov
fwait
mov
movsl
adc
das
mov
push
cmpl
mov
inc
lret
out
add
cmc
xchg
xchg
leave
cwtl
jecxz
sbb
adc
lods
mov
jle
test
es
xor
add
lahf
mov
push
pop
idiv
ja
cwtl
sub
ss
iret
lahf
dec
hlt
inc
ret
mov
sub
push
call
dec
lret
xchg
js
imul
loope
dec
xlat
jne
sarl
push
fcmovnbe
jo
and
inc
adc
stos
inc
dec
sub
xor
cmp
cltd
sub
lock
lcall
push
xor
mov
aam
lahf
push
cmp
std
stos
mov
fildl
std
inc
subl
inc
inc
xchg
push
dec
lea
add
and
inc
mov
pop
fadds
and
daa
outsl
sub
sbb
push
incb
in
adc
xchg
mov
cmp
cmp
mov
cwtl
aam
jae
out
repz
das
mov
es
push
jb
adc
into
cmp
cld
popa
dec
push
insb
cmp
jae
add
jae
inc
in
mov
clc
xorl
mov
mov
inc
mov
cmpsb
test
push
sbb
bound
repnz
xchg
sbb
cmc
pop
sbb
jg
push
js
scas
dec
aad
in
pop
inc
jmp
push
jle
in
pop
jge
pop
push
in
inc
enter
ret
push
roll
test
mov
fisubrl
xchg
jg
scas
and
jle
mov
or
mov
in
add
jnp
mov
xchg
dec
sub
push
mov
ret
std
fnsave
add
adc
cli
push
nop
xchg
push
pop
into
push
push
ret
sub
pop
xor
loope
sub
add
outsl
popf
jbe
rcpps
add
xchg
adc
pop
mulb
aaa
fdivs
pop
cwtl
imul
andb
jo
lea
lods
pop
fistl
xchg
fwait
mov
in
jp
cli
sar
pusha
adc
sbb
jp
pop
add
inc
xor
and
jge
jae
pop
rorb
leave
push
loop
shlb
cld
icebp
lahf
mov
fildl
shll
fwait
push
mov
pop
pop
bound
cld
inc
fidivrs
ret
adc
xchg
sbb
call
mov
jb
add
pop
out
and
test
xchg
and
jl
or
adc
hlt
xchg
cwtl
out
adc
in
mov
or
or
jae
mov
lret
shlb
aas
mov
mov
lret
mov
repnz
rcll
xor
push
cmp
in
or
dec
sub
loopne
xsaves
lret
pushf
test
sub
xor
add
mov
fstpt
aas
mov
mov
stos
push
xchg
mov
sbb
test
ja
lret
flds
mov
jb
data16
sub
push
aas
hlt
push
push
mov
roll
out
and
pop
in
cmpsb
pushf
jmp
cmp
xchg
and
xchg
addr16
pop
mov
sub
sti
in
ss
xchg
cmc
pop
scas
pop
mov
out
cmp
cmp
mov
mov
xor
inc
out
dec
dec
adc
push
daa
in
sub
lret
scas
aas
loopne
pusha
cwtl
inc
in
dec
pop
mov
dec
xchg
fcompl
inc
scas
inc
pop
inc
dec
xchg
andl
jns
or
pushf
sbb
adc
test
mov
mov
bound
xchg
outsl
repz
xor
mov
addr16
pusha
aas
xor
mov
cmp
mov
jmp
inc
addr16
ds
bound
adc
add
gs
add
inc
stos
paddusb
xor
cld
repnz
lods
mov
mov
inc
xchg
shlb
jnp
std
push
shlb
add
mov
mov
rolb
push
leave
mov
shrb
cld
jae
gs
adc
mov
mov
adc
cmp
sub
xor
xlat
stos
or
outsl
or
into
xor
lods
jge
cmp
sbb
mov
cmp
or
pop
adcb
push
inc
xlat
pop
and
sbb
xchg
sti
or
mov
fists
out
push
inc
pop
jbe
sar
sbb
add
sub
cld
sub
mov
and
jge
sarb
jne
and
into
mov
in
pop
xchg
push
int3
cwtl
adc
cmp
movsb
xchg
rcrb
mov
pop
push
mov
inc
jge
xchg
lods
movsl
dec
rclb
fisubs
cmpsl
push
cld
jmp
movsb
xchg
in
push
sahf
loope
xchg
enter
adc
testb
mov
xor
test
push
popa
loop
enter
jno
xor
les
mov
in
lds
movsb
pushl
dec
fwait
repz
iret
stos
cmp
xchg
mov
test
cli
adcl
pop
sub
jecxz
test
adc
sbb
sub
ret
scas
cs
in
jo
mov
jo
sbb
and
mov
rolb
std
mov
enter
in
imul
and
das
jns
xchg
int
cmp
push
call
mov
rcll
mov
inc
push
sbb
pusha
push
scas
pop
or
or
cltd
repnz
shlb
add
xchg
test
inc
push
cmc
gs
mov
jmp
les
inc
test
fists
popf
bnd
add
jb,pt
sub
pop
inc
insb
in
mov
arpl
sub
js
getsec
sub
mov
mov
stc
cltd
fnstcw
lcall
sub
xchg
fcoms
scas
sub
daa
fisttpll
fbld
arpl
std
insb
or
int3
stos
push
pop
pop
lods
jns
fprem
sub
dec
sbb
sub
jge
mov
cwtl
pop
ljmp
lock
test
xchg
in
ss
pushf
push
and
test
fs
loop,pn
stos
mov
cli
cmc
stos
out
or
inc
jg
xchg
or
adc
into
sub
pop
mov
cmp
repz
lods
jl
jmp
mov
mov
jo
clc
scas
out
mov
sub
lock
or
pop
stc
mov
xor
std
pop
les
aam
adc
scas
shl
and
loope
mov
ja
push
stc
xchg
repz
inc
outsl
scas
push
in
lcall
enter
push
icebp
jae
mov
aas
enter
push
mov
add
in
xchg
add
cmpsl
push
jne
out
xchg
pop
mov
clc
imul
lahf
lds
shll
imul
push
scas
mov
sti
mov
mov
les
lret
jl
xlat
mov
jns
xor
test
mov
dec
scas
and
xchg
mov
mulb
and
xchg
cmpsl
inc
lods
aam
aam
pop
pushf
adc
ljmp
sahf
fwait
test
mov
ds
incl
scas
fiadds
leave
cmp
imul
stos
inc
fsts
jl
xchg
insb
lahf
test
repz
rcl
cld
mov
inc
push
ret
dec
pop
mov
dec
xchg
cltd
sarb
adc
movsb
and
aaa
and
xor
scas
mov
xchg
mov
push
push
test
mov
bound
pop
inc
pop
sub
in
decb
cmp
xchg
push
imul
jecxz
xor
je
cld
lock
popf
data16
xor
dec
xor
js
test
push
dec
insb
rcll
jecxz
mov
sub
lods
out
xor
jge
inc
mov
adc
out
mov
jmp
dec
pusha
sbb
lods
sbb
lds
xchg
js
dec
sub
or
xchg
add
gs
jae
repz
sbb
outsl
bnd
mov
call
jle
mov
mov
push
stos
xchg
in
insb
mov
mov
jno
enter
xchg
xchg
pop
jae
mov
sbb
or
jecxz
push
sub
loope
add
and
pop
dec
lods
ret
idivb
test
ljmp
out
fistpl
sub
and
int
enter
inc
jbe
scas
jg
inc
sbb
pop
dec
pop
sub
sub
lret
dec
popf
and
cmp
cmp
fcoms
mov
pop
loope
or
push
inc
pusha
inc
pshufw
xchg
test
insb
xor
adc
xor
xor
and
sbb
das
fcoms
sub
add
das
je
vpaddsw
adc
mov
pop
sub
pop
pop
sub
popf
ret
lahf
jns
rcrb
sub
mov
sbb
mov
std
test
rclb
in
lret
xor
cltd
mov
ljmp
mov
test
cld
cmp
in
or
in
xor
fcompl
stc
movsl
jbe
adc
aad
rcrl
and
cmp
pop
inc
fs
jge
sub
fmuls
jl
ds
loope
mov
ss
mov
cwtl
in
popa
fwait
adc
mov
push
and
sarb
or
and
aas
movsl
jp
fisttps
loope
jg
jle
inc
into
jbe
daa
push
mov
fbld
aad
cld
in
and
fiaddl
dec
and
inc
daa
lret
cmpsb
js
js
cld
push
push
test
movsb
jns
mov
push
loopne
sub
imul
push
push
xor
out
xchg
andb
test
mov
inc
fdivl
dec
inc
cmp
aam
rcr
out
rcll
xchg
mov
addr16
jns
cmp
in
inc
mov
cmpsb
mov
adc
cmc
inc
sub
pop
jecxz
mov
outsb
xor
mov
or
cmc
push
mov
daa
xchg
cltd
mov
stc
stos
ljmp
sub
dec
out
push
sbb
push
dec
dec
popa
or
jl
cmpsl
cmp
in
dec
sub
daa
insb
jp
lods
inc
les
leave
inc
out
xor
ljmp
iret
into
add
sub
add
mov
test
jae
sbb
pop
lods
jecxz
jl
mov
xor
mov
xor
inc
pusha
cmp
push
in
mov
into
mov
test
cmp
imul
add
pop
cmp
hlt
idivl
mov
mov
mov
mov
mov
ficompl
push
adc
mov
and
shll
test
sbb
loop
xor
rorb
lcall
xor
jnp
jmp
push
imul
cmp
adc
inc
leave
sbb
pop
push
pop
adc
shll
mov
andb
inc
ljmp
leave
xchg
shll
mov
mov
negb
lds
jecxz
lcall
test
jp
lds
push
adc
jmp
in
out
out
fidivs
push
imul
adc
test
clc
into
sub
sbb
jmp
loope
fstps
addb
mov
inc
in
jne
jle
cli
jle
mov
sbb
cmpl
pop
hlt
outsb
mov
sti
sbb
clc
xchg
sti
les
aaa
mov
or
loopne
gs
enter
push
xchg
mov
sub
pop
sub
rorb
mov
push
addr16
mov
inc
hlt
xor
lret
bound
adc
adc
push
shrb
jp
dec
mov
jns
or
xor
popf
int
out
push
popl
cmp
test
inc
aad
sub
repnz
rorb
shrb
scas
jne
jl
and
mov
xor
lahf
pop
inc
sbb
fwait
sub
xchg
sub
add
push
inc
sti
scas
cmpsb
cmp
stos
sub
sbbb
inc
sub
pop
add
fucom
or
adc
out
js
stos
jp
cmp
or
cmc
pop
lret
adc
insb
xor
je
mov
cmp
sub
jg
mov
adc
popf
cli
adc
mov
xor
mov
imul
sbb
cmp
fistl
out
ret
pop
loop
or
dec
add
movsb
push
adc
movsb
sub
sbb
push
mov
mov
test
out
into
jnp
add
outsl
push
scas
cwtl
xchg
sbb
daa
imul
leave
adc
mov
xor
add
int3
or
adc
aad
pop
pushf
out
fsubrl
das
lcall
rcl
outsb
cli
add
ds
sub
stos
stc
inc
movsl
mov
jge
mov
pop
mov
pop
jg
les
pop
sub
cwtl
data16
out
js
fs
sub
adc
sbb
adc
pop
or
sub
adc
scas
mov
aas
daa
rcl
rcpps
xlat
xor
ja
cmp
shlb
push
fs
cmp
lock
xchg
jl
inc
cmp
pusha
mov
push
sbb
jmp
sub
adcl
movsb
sti
xor
scas
stos
inc
and
mov
cmp
repz
lsl
mov
aam
sbb
mov
jle
inc
fwait
cld
loopne
inc
xor
fidivrl
sti
sub
sbbb
cmc
jo
cmpsl
adc
rol
add
insb
dec
lcall
jle
sub
cli
loop
gs
xor
lods
cs
mov
push
sub
sahf
mov
or
add
xchg
mov
daa
in
fstps
stos
shrb
cmp
push
or
mov
insl
sub
sbb
mov
add
adcl
adc
mov
jne
sti
aaa
lahf
fdiv
setb
shl
rep
icebp
into
loopne
pop
xchg
jae
bound
test
sbb
hlt
mov
push
test
imul
mov
mov
cmc
into
mov
repz
rcrl
addl
dec
hlt
out
cld
mov
mov
sbb
out
add
popl
and
jae
jne
add
or
sbb
push
into
sti
inc
sbb
push
xor
sti
out
incb
xchg
lret
les
cmpsl
test
loop
push
add
push
and
jmp
dec
xchg
sbb
pop
pop
mov
mov
sub
packssdw
pop
shll
scas
popf
test
pusha
fildll
xchg
xlat
xchg
movsl
rol
fwait
cmp
pop
pop
or
cmp
mov
add
ds
push
popf
cmp
sahf
dec
push
mov
inc
sub
js
pop
test
ss
insl
push
sub
rcrb
das
fidivrs
fnstenv
enter
loop
sbb
fisttpll
mov
push
jb,pn
pop
mov
pop
push
push
inc
js
fidivs
in
mov
add
stc
test
adc
cmpsb
push
lea
pusha
cs
cmpsb
icebp
arpl
fadds
sub
dec
sub
xor
lods
xchg
das
pop
in
cltd
fildll
std
mov
cmp
jmp
testb
cmp
cli
fprem1
lea
popa
leave
mov
ja
cmp
pushf
inc
cmp
mov
ret
stc
add
popa
stos
mov
push
mov
sbb
je
je
daa
dec
push
test
add
pop
inc
sbb
push
lret
pop
out
out
cmp
pop
xor
push
push
jb
js
pop
inc
pusha
sub
adc
loop
mov
js
jb
movsl
xchg
push
pop
or
stos
out
fwait
aam
dec
cmp
popa
xchg
dec
cmc
jle
cmc
fistps
jmp
lret
shlb
addl
push
es
dec
cltd
mov
sbb
bound
test
cwtl
hlt
out
cmova
pop
jg
lret
mov
sub
xchg
jo
popf
pop
xchg
je
inc
aaa
loope
xchg
push
xor
test
jle
mov
daa
push
push
rol
shl
clc
decl
arpl
lock
or
xor
jg
and
xchg
cmpsb
xor
mov
stos
dec
mov
jnp
insb
mov
insb
popf
roll
xchg
lds
jg
cs
add
xchg
push
imul
dec
mov
out
cld
cmpsb
pop
std
xchg
mov
inc
in
jnp
sub
push
mov
pop
incb
cwtl
out
jbe
data16
and
dec
mov
loopne
stc
xchg
popf
pop
repz
mov
add
lods
mov
enter
or
xlat
cmpsl
aad
mov
nop
in
ret
dec
cmp
inc
aam
dec
ljmp
jecxz,pt
pop
notl
mov
fld
fwait
cmpsb
into
nop
xchg
in
pop
rclb
ds
out
into
pop
pushf
mov
mov
clc
xor
push
outsl
shll
xchg
or
clc
cmpsb
push
sub
jnp
repnz
fldl
sarl
lods
cmc
testb
push
lcall
pop
xor
xlat
push
andb
push
scas
adc
pop
lds
mov
fidivrl
fstl
or
sti
iret
push
dec
xchg
fists
xor
fimuls
mov
popf
adc
bound
repnz
lcall
sub
movsl
shlb
mov
sbb
std
add
imul
or
xchg
das
xchg
jg
adc
clc
icebp
rorl
lock
xchg
pusha
push
sub
sbb
orl
add
cwtl
std
mov
sub
shl
je
lock
sub
cmp
mov
jmp
push
mov
add
pushf
mov
push
mov
rcrb
mov
xlat
push
popf
push
cltd
pop
pushf
mov
mov
fcomi
pop
sub
adc
jo
and
or
sbb
aaa
loope
fs
jno
and
not
shlb
pop
push
push
sahf
push
pop
clc
pop
hlt
xchg
mov
inc
and
js
pop
movsb
aas
jp
xor
push
nop
xchg
or
mov
jl
mov
xchg
ds
xchg
sqrtps
push
gs
test
dec
fcoml
ljmp
xor
xchg
xchg
mov
lea
mov
or
jge
nop
and
dec
in
mov
pop
inc
sahf
das
scas
xchg
inc
cmp
loopne
pop
outsb
push
inc
inc
ja
and
aas
mov
clc
addb
sub
pop
test
jmp
inc
xchg
cmpsl
movsl
aam
jecxz
cmpsb
mov
push
lret
fcomi
clc
movsl
mov
dec
jnp
sbb
jg
jge
jns
push
cmc
lret
pop
test
push
dec
popa
scas
ret
sbb
shrl
mov
lret
into
lret
or
cmpsl
xchg
jmp
add
fs
frstor
mov
jo
xor
xor
ja
dec
test
ja
out
imul
inc
fcoms
mov
cltd
repnz
mov
lock
cli
sbb
lret
add
fimuls
lea
cmc
sub
bsf
sbb
cmp
icebp
insl
sub
inc
loopne
push
cmp
repz
mov
xchg
jle
mov
cltd
jecxz
sub
cmp
adc
icebp
or
inc
sbbl
or
push
cmp
mov
and
arpl
add
push
hlt
gs
push
clc
lahf
es
and
mov
sub
mov
cmpsb
xchg
fwait
out
lret
scas
xor
lea
sub
pop
test
sbb
mov
mov
pop
mov
pusha
ljmp
and
xchg
lret
call
jbe
and
leave
and
pop
jl
inc
fcoml
test
jp
cmp
fadds
pop
lahf
dec
jl
adc
leave
hlt
adc
jl
lret
pop
dec
lds
aam
cmp
mov
movsb
push
sahf
pusha
push
or
out
mov
jo
ljmp
adc
inc
in
dec
movsb
add
popf
or
lret
sub
jno
push
mov
je
pushf
sub
cmp
mov
mov
cmp
sbb
lods
xchg
jp
cmp
sub
sbb
roll
mov
pop
nop
fiaddl
divb
xchg
dec
xor
pop
pop
aam
jno
gs
sahf
xchg
daa
ja
add
inc
inc
jns
test
arpl
sbb
add
add
and
leave
and
dec
in
mov
push
loope
popa
push
jl
sbb
xlat
mov
push
push
sub
test
push
and
inc
dec
ror
pop
mov
inc
movsl
ljmp
cwtl
aaa
dec
ret
jne
xchg
hlt
mov
push
roll
inc
std
ret
inc
inc
fsincos
movsb
fs
fistl
inc
mov
sarl
and
movsb
ljmp
sub
repz
dec
or
fldenv
jns
dec
and
jmp
sahf
nop
pop
add
xchg
rol
pop
push
jmp
add
imul
outsl
adc
inc
push
popf
adc
ret
aam
cld
icebp
stc
fldt
or
xchg
fs
lahf
pop
push
js
or
push
addr16
nop
xchg
and
mov
dec
mov
roll
insl
cmp
int
out
push
aam
lret
xchg
push
xor
dec
inc
insb
inc
loopne
add
lret
xor
test
test
push
lcall
add
pop
ret
sbb
call
cmp
cmp
jmp
movl
push
push
mov
fdiv
mov
and
or
int
fisttpl
aas
andl
ljmp
out
jae
movsb
mov
arpl
movsl
insl
mov
mov
lds
pop
gs
sub
mov
test
xor
mov
stos
cmpsb
je
das
cmp
cmpsb
mov
shlb
mov
lahf
sahf
or
and
hlt
mov
cmpsl
pop
iret
xchg
adc
rcll
js
jmp
aam
add
out
sbb
pop
xchg
loopne
mov
and
imul
sbb
push
and
and
dec
fs
or
mov
mov
mov
sub
jo
jle
loop
roll
outsb
scas
lret
sbb
call
inc
push
mov
cmpb
sbb
or
pop
lods
cmc
dec
lea
jae
sub
stos
rcl
test
fdivrs
xor
push
es
mov
cmp
mov
mov
dec
mov
jae
sbb
lds
cltd
pop
sub
jp
sub
sbb
scas
inc
int3
or
xchg
in
cs
xor
hlt
mov
cmc
jb
lahf
dec
dec
jbe
push
push
sub
push
jno
pop
push
jg
mov
je
mov
sub
test
or
in
mov
cmp
add
out
sbb
push
je
lret
jmp
rcrl
dec
sub
add
add
fwait
jle
lret
dec
popa
and
adc
in
inc
dec
push
and
aad
popf
data16
jne
pop
incb
out
pop
inc
xorl
xor
sahf
pop
and
ficomps
xchg
call
cmp
xchg
fidivrl
ret
or
add
dec
ret
pop
xchg
loopne
and
sub
xor
mulb
daa
mov
pop
sbb
std
cmp
js
add
lea
cmp
jns
lret
push
jbe
js
addb
jge
xchg
and
mov
xor
movsb
ret
mov
xchg
ret
cmc
fsubl
and
pop
jae
mov
fistps
cmp
pop
cltd
pop
insl
aad
leave
aad
arpl
mov
sub
aad
mov
or
leave
mov
dec
je
dec
stc
xor
loopne
adc
int3
xchg
in
sbb
cltd
fcoml
or
lret
in
fdivl
inc
xor
mov
jmp
out
dec
in
mov
or
das
fsts
jl
sbb
push
sub
adcl
jp
dec
scas
xchg
adc
mov
adc
xchg
sbb
jge
lahf
test
cmp
fsubrs
add
jns
ret
sub
jmp
push
cs
pop
rolb
add
adc
call
test
jecxz
xor
xchg
or
jle
stos
cltd
stc
subb
mov
sbb
sbb
push
and
insb
jbe
mov
push
mov
pop
ljmp
xor
pop
pop
pop
inc
mov
je
adc
in
xlat
into
in
push
rdtsc
mov
sub
out
movl
jns
jns
jg
sub
sbb
out
sub
pushf
addl
fldl
subl
sarb
jo
leave
ljmp
lea
push
movb
add
sbb
movsl
push
jae
push
lock
mov
dec
xorb
sarl
dec
sbb
test
cmp
xor
dec
popa
or
and
cmp
dec
pop
clc
fwait
lods
clc
pop
cmp
sub
pop
sub
add
pop
cmp
ja
mov
dec
push
into
jns
mov
push
mov
fcomps
jno
popaw
adc
gs
shll
je
xchg
ret
cmp
pop
pop
in
ja
nop
stos
adc
cld
dec
loopne
fimuls
mov
jae
int
sti
shl
adc
sub
cs
sub
pop
out
adc
fisttpll
adc
xchg
jg
pop
add
xchg
mov
lcall
lret
cmp
pop
rorb
cld
xor
pop
jp
xchg
inc
lods
or
rcrl
scas
iret
dec
hlt
jbe
jbe
sub
mov
xor
enter
icebp
dec
mov
inc
ror
pop
aas
xchg
adc
pop
sub
or
stos
aas
mov
ljmp
insb
icebp
sub
rcll
sbb
xchg
out
fisubs
and
pop
int3
inc
xor
ret
xrelease
and
add
or
add
adc
jmp
lret
or
test
adc
push
cld
or
pushf
cmp
in
xchg
lods
lea
test
je
add
inc
je
jmp
xchg
in
sbb
xchg
shlb
stos
aam
or
xor
xor
jae
mov
inc
push
std
andb
adc
test
sub
mov
dec
punpckhbw
dec
in
fsubs
aas
push
mov
lds
enter
mov
sub
ljmp
add
clc
xchg
xlat
mov
iret
sub
jns
jo
pop
cmp
psubsw
push
xchg
movsb
ret
lea
icebp
outsl
inc
xor
es
inc
add
pop
jl
cwtl
mov
fdivrl
xchg
sahf
mov
mov
cmc
pop
rorl
jmp
int3
xchg
pusha
aam
loop
test
lods
push
std
add
add
pop
fistpll
adc
adc
xor
imul
mov
mov
pop
mov
sbb
sub
outsl
dec
cmp
aad
sub
xchg
jb
mov
adc
mov
mov
nop
push
std
push
inc
pop
outsl
mov
jge
imul
ror
mov
add
stos
push
push
xor
sub
mov
dec
dec
jecxz
mov
inc
inc
adc
mov
ror
fisttpll
mov
or
adc
xlat
fdivr
mov
out
repz
data16
sbb
inc
push
jb
scas
mov
jl
lea
or
cmp
cmpsb
cmp
adc
int3
inc
mov
ja
loope
and
insl
ret
sub
in
incl
push
mov
sbb
xchg
loop
sbb
insb
cs
stos
add
jecxz
sub
xchg
mov
test
cli
je
push
lods
xchg
dec
push
push
cmp
sarb
mov
mov
rcrl
pop
mov
aam
xchg
je
adc
sarb
fstl
inc
negl
sub
mov
jmp
leave
jnp
sbb
mov
mov
jnp
das
fists
rcrl
shll
cmpsb
or
cltd
xchg
arpl
popf
dec
or
add
pushf
mov
sti
and
mov
in
mov
clc
adc
mov
jmp
jecxz
dec
cmpl
imul
adc
cmc
cmp
mov
repz
pop
or
cmpsb
jbe
jge
out
shll
ja
hlt
movsb
pop
inc
xor
jne
push
mov
mov
or
adc
sbb
aam
pushf
repnz
jecxz
and
aas
cli
ror
cmp
in
push
nop
fwait
adc
fnstsw
leave
test
shlb
test
sub
clts
data16
adc
inc
adc
mov
lcall
sub
or
mov
es
aam
fdiv
sub
jb
aas
xchg
jne
push
and
and
mov
fdivp
or
push
push
jg
test
push
add
fsubrs
inc
and
cmp
push
int3
lret
imul
int
testb
ret
stos
enter
ss
dec
inc
jno
pop
jle
push
adc
push
mov
jnp
xchg
mov
pop
push
cmp
cwtl
mov
cld
inc
dec
inc
loope
popf
xorb
or
push
out
or
push
or
enter
add
testb
stc
fisttpl
int
in
daa
vpshld
lret
insl
cld
sbb
fmuls
jbe
sub
jno
fcoml
lahf
and
ss
sbb
ret
dec
daa
mov
movsb
mov
dec
inc
out
push
outsb
popf
cmc
out
dec
in
mov
stos
add
int3
stc
jmp
repz
fstpl
repnz
xchg
add
out
push
aas
testl
inc
das
scas
sbb
sub
cmp
pop
std
xchg
imulb
xchg
mov
fs
and
stc
sbb
dec
rorb
loop
jecxz
mov
test
mov
jge
jl
push
stc
push
cmp
jecxz
data16
lock
test
hlt
jnp
sub
pop
inc
jge
dec
adc
repnz
lea
out
and
loopne
lret
sbb
pusha
pop
cmp
and
bound
negl
fsts
test
cmp
push
sub
xchg
add
inc
int
xchg
push
aas
jne
jne
fstl
pop
dec
gs
sbb
cs
icebp
pop
xor
lock
and
in
jle
xor
xchg
cs
aad
das
xor
je
push
xchg
insb
nop
fisttpll
js
ljmp
mov
adc
cli
outsb
mov
lods
mov
addl
daa
cld
push
pushf
jbe
xchg
aaa
dec
popf
sub
enter
jg
push
mov
add
leave
fisttpl
xorb
pop
xlat
pop
sbb
jbe
icebp
mov
jg
jl
leave
mov
pop
xchg
cmp
test
inc
mov
jl
shlb
push
pop
pop
ljmp
jg
pushf
adc
adc
scas
popa
xchg
pop
adcb
mov
ror
or
sub
push
dec
in
pop
outsl
jns
js
out
inc
adc
xlat
cmp
movl
and
mov
mov
mov
dec
mov
xchg
loop
mov
jne
dec
pop
pop
dec
pusha
clc
mov
mov
lds
in
insb
xlat
enter
aam
lds
pusha
mov
cmc
xor
xchg
mov
xor
xchg
push
xor
pop
daa
popf
repz
jbe
lds
sbb
inc
adc
ja
push
ret
outsl
test
push
js
repz
enter
aad
pusha
outsb
push
push
sbb
xor
daa
jmp
mov
fildll
xchg
mov
and
aaa
mov
sub
add
pop
mov
xor
xor
cmpsl
ret
sbb
fnstcw
xor
and
sub
mov
scas
orl
pop
mov
add
dec
xlat
clc
jmp
fdivl
cli
pop
loopne
sub
fmulp
push
push
daa
jns
mov
push
adc
pop
lret
sar
xchg
adc
es
add
adc
mov
les
add
dec
stc
mov
jns
xchg
add
mov
mov
sbb
imul
xchg
addr16
in
roll
call
ret
outsb
mov
mov
xchg
leave
lea
cmp
sbb
movsl
movsb
push
imul
cli
xorl
inc
std
shr
mov
jle
movsb
lcall
fstps
fs
iret
mov
push
cld
icebp
push
xchg
pushf
sub
mov
fcmovbe
sbb
ljmp
test
jmp
sub
scas
mov
test
ficompl
gs
addr16
arpl
dec
cmp
xlat
data16
adc
adc
je
mov
inc
sub
insb
sub
and
mov
and
pop
dec
and
std
test
lcall
add
cwtl
mov
andb
mov
into
lds
fs
push
test
ret
jo
loopne
inc
out
lcall
insl
pop
mov
adc
ret
mov
pop
mov
or
out
aam
or
jns
or
sub
fdivrl
lea
xchg
in
dec
icebp
in
cld
repnz
lods
xchg
or
adc
rcl
out
pop
int3
add
push
adc
inc
push
bound
cs
xor
imul
cmp
lock
add
vmovaps
dec
ret
rcr
fildll
sahf
fstpl
mov
xlat
lods
mov
cmpsl
xor
xchg
nop
lea
mov
mov
cmp
cli
and
mov
js
dec
mov
sub
push
mov
out
xchg
inc
and
pusha
jmp
mov
js
mov
jp
mov
inc
insb
and
popf
fisubl
lods
mov
or
or
dec
xchg
inc
or
sbb
add
lods
jns
adc
sub
mov
ds
addr16
shrl
daa
loope
add
out
fistpl
mov
fs
ret
cs
dec
jo
leave
repnz
xchg
scas
andl
xor
ret
iret
imul
and
cmp
mov
mov
dec
push
pop
nop
cmp
imul
addr16
push
ds
ret
xchg
adc
repnz
nop
inc
pop
mov
lock
mov
xchg
xor
mov
and
and
sbb
cmp
sub
mov
or
mov
jns
movsl
pop
and
or
aaa
push
stos
xor
adc
inc
pop
andl
adc
icebp
cmp
fwait
lea
addl
in
dec
inc
and
fldl2e
xor
pop
aam
dec
loope
sbb
cmp
cmp
mov
xchg
imulb
pop
fstpl
stos
jno
pop
add
lcall
popa
fisubrl
mov
pop
mov
bound
int
sbb
les
fs
loop
stos
mov
mov
push
gs
in
enter
xchg
lods
mov
jae
ffree
and
sub
lret
popf
jb
rol
mov
pop
fnstcw
sahf
arpl
inc
pop
cmp
mov
sbb
mov
adcl
sahf
jnp
xor
xor
sub
scas
inc
adc
cmp
jae
stos
jmp
lcallw
jle
fdivr
in
and
xor
neg
repnz
and
insl
sub
mov
push
iret
clc
cmp
cwtl
xchg
xlat
in
int3
out
js
insb
mov
loopne
aas
lret
xchg
repnz
and
inc
cld
jns
sarl
imul
fwait
jge
mov
lock
add
push
call
pop
lahf
repnz
adc
inc
dec
test
or
fistps
add
adc
sti
call
das
inc
arpl
sbb
aad
lods
fwait
pusha
orb
outsl
pop
sbb
addr16
push
pop
push
insl
stos
ds
sahf
mov
inc
mov
sub
jno
push
jmp
rcl
flds
negb
mov
ss
pop
mov
mov
xor
mov
sbb
jb
mov
xchg
jge
pop
jl
daa
inc
arpl
cmp
js
bound
adc
push
and
test
mov
cltd
icebp
and
lahf
movsb
loop
call
mov
push
add
or
ret
mov
pop
stos
mov
fcomip
sub
xchg
fbstp
out
call
mov
inc
nop
les
add
stos
push
cmpsb
xchg
or
sub
jno
mov
jmp
cmpsb
sub
aad
fists
mov
push
lcall
add
dec
mov
mov
pop
mov
pop
adcl
mov
adc
jmp
in
ret
and
addl
andb
dec
insb
sbb
sbb
imul
mov
cmp
mov
pop
in
mov
mov
rep
sbb
push
addr16
push
lods
inc
movsb
mov
fildl
xchg
in
outsl
daa
ss
inc
aaa
inc
lods
adc
sub
dec
sbb
xchg
in
test
mov
lcall
adc
fists
sbb
stos
out
xchg
mov
jle
rcrb
ja
aad
push
dec
ds
pop
inc
icebp
push
xlat
out
stos
cld
dec
add
cltd
imul
enter
aas
xlat
pop
mov
push
mov
out
xor
cmc
jecxz
popa
sti
shl
xor
jbe
cmp
lahf
mov
jae
mov
pop
xchg
mov
xchg
rclb
mov
out
add
mov
shl
insl
fcoms
aam
mov
fwait
ds
xchg
and
lds
sub
clc
popf
mov
adc
inc
pusha
push
xor
mov
jb
roll
lods
lds
test
sub
lret
cmpsb
adc
test
sub
pushf
pop
sbb
cmp
push
psrad
pand
inc
loop
pop
xor
or
test
lret
pop
mov
out
mov
sti
mov
pushf
scas
adcl
push
into
frstor
nop
inc
or
repz
add
cmp
pop
test
jl
addr16
lcall
or
mov
ficompl
cmp
lds
loop
ljmp
lahf
pop
mov
mov
pusha
lods
dec
ret
inc
movsb
movlps
jne
fiadds
pushf
mov
out
mov
in
jecxz
fisubl
fs
push
push
jecxz
pop
sub
push
mov
xor
outsb
xchg
sbb
sub
test
xlat
sub
out
fisubs
push
cmp
jns
lea
shl
xor
lock
xchg
xchg
mov
mov
adc
stos
rcl
adc
cmp
mov
sbb
jo
rolb
add
insl
dec
add
or
daa
shrl
pushf
push
imul
fildll
jge
insb
cmp
aas
aam
add
jl
inc
fistps
inc
and
sub
sbb
xor
cli
jnp
out
in
loop
data16
stos
fs
in
xlat
aad
das
lahf
mov
cmp
jl
xchg
cmp
and
mov
dec
in
mov
aas
sub
outsl
sarl
mov
les
ljmp
mov
imul
and
dec
daa
pop
pop
lods
cmp
cltd
add
jmp
sub
test
into
sub
data16
sub
ljmp
test
pop
jae
add
sub
outsl
outsl
adc
mov
sti
pop
push
pop
imul
inc
jge
movzwl
push
scas
lock
adc
shrb
mov
fdivl
dec
dec
adc
mov
movsl
cld
popf
inc
cs
insb
adc
loop
xor
lds
sbb
and
pushf
dec
rorl
in
mov
leave
fmul
jl
xor
dec
mov
pusha
jg
ss
pop
stos
xchg
jl
jle
xchg
cmp
stos
popf
pop
test
lret
dec
stos
lcall
cli
pop
xchg
xlat
popf
lea
add
sub
enter
mov
fisttpl
mov
aas
pop
push
lcall
xchg
jb
arpl
cli
pop
mov
add
push
mov
repz
push
jae
in
jno
clc
jecxz
pop
xor
iret
fdivrs
fldcw
divl
loope
and
stc
adcl
jbe
pop
mov
lret
push
push
out
ja
xchg
addr16
xchg
das
loopne
pusha
les
lret
jl
les
incl
mov
push
mov
cmp
ljmp
dec
xor
xchg
leave
jns
flds
inc
dec
dec
rorb
aam
push
xor
and
jge
out
adc
subl
xchg
sub
mov
mov
cmp
push
ret
lods
push
push
jnp
xorb
adcb
shll
adc
ja
inc
pop
arpl
test
inc
mov
neg
repz
mov
pop
lahf
and
cwtl
mov
in
nop
js
push
jae
cmp
scas
dec
in
out
xchg
fmulp
push
filds
adc
data16
fcoml
addb
jno
idivl
jo
sub
sub
jno
mov
nop
inc
hlt
rorb
mov
lods
or
pop
sub
mov
pop
jae
fnstcw
mov
je
push
mov
jae
xchg
aam
shlb
mulb
xor
call
mov
adc
ficomps
or
lret
inc
movsb
and
pop
mov
mov
or
insl
movsl
or
scas
sub
aas
pop
das
pop
xchg
int
push
or
sbb
scas
cmp
aaa
pop
cmp
pop
mov
lock
hlt
push
into
scas
ret
push
xchg
push
xor
mov
lret
inc
xor
push
jmp
ret
mov
cli
mov
fwait
testl
in
mov
or
or
xchg
pushf
mov
sbb
push
imul
inc
ret
fistps
movsl
cmp
pop
pop
cwtl
scas
sub
add
sub
xor
ja
mov
test
test
test
fs
inc
sbb
gs
push
push
or
xchg
xorb
and
out
cmp
jnp
cmp
jl
mov
push
iret
cmpsl
or
loope
je
cmp
cmc
pop
ret
scas
jb
push
cwtl
test
mov
jne
lcall
cmp
std
xchg
inc
sbb
xchg
push
jg
jno
adc
stc
movsb
xor
mov
cltd
pop
cmp
aas
or
xor
or
cmp
xlat
push
ljmp
dec
xor
ss
das
inc
iret
inc
lods
bound
mov
or
cmp
arpl
xor
stos
int3
push
clc
pusha
ljmp
xchg
push
vpsubsb
aam
inc
push
mulb
jl
aad
int3
arpl
ja
jle
in
mov
cmp
shl
and
sti
cmp
jbe
enter
pop
jne,pt
dec
push
inc
cmp
popa
int
ss
test
mov
sarl
out
inc
and
lahf
cmpsl
dec
js
insl
out
mov
mov
or
xor
fs
mov
std
xor
fcoml
cwtl
inc
pop
push
dec
mov
mov
lods
mov
push
popf
mov
or
xor
test
outsb
and
pop
push
adc
sub
pop
dec
or
push
dec
cmpl
fcoml
mov
adc
rolb
aam
jno
adc
lock
cmc
xor
pminsw
cmp
ret
jg
jo
or
adc
ret
mov
adc
xchg
arpl
in
imul
mov
clc
inc
and
inc
ja
dec
jne
xchg
jecxz
mov
sub
sub
xchg
push
lret
test
shrl
int
lahf
ds
clc
in
push
lods
inc
loope
daa
sbb
xchg
xor
in
pop
ds
xchg
push
sbb
scas
jecxz
or
mov
stos
mov
push
and
lret
outsl
push
push
add
mov
pop
in
fisubs
mov
divl
sub
outsb
pop
lock
jmp
iret
xchg
cli
shrl
adc
adc
add
mov
mov
sbbb
repz
cmp
sahf
fisubrl
add
pop
mov
inc
inc
jae
call
xlat
lea
ret
sub
aam
cmp
repz
xchg
pushf
pushf
cmp
pop
or
pusha
leave
mov
adc
inc
sub
adc
mov
es
pop
and
mov
xor
outsb
cmp
test
dec
insl
popf
add
pop
mov
mov
push
aas
mov
sbb
dec
and
push
lret
mov
and
idiv
jle
push
out
out
daa
pop
mov
jae
lahf
adc
sbb
sbb
testl
cmp
pusha
loopne
jmp
cmp
xor
pop
jecxz
push
int
mov
pop
push
rcll
push
outsb
shr
aaa
cmp
jnp
das
je
mov
sub
cmc
mov
addr16
jae
sbb
ja
stos
cmp
repz
pop
push
or
xchg
inc
je
inc
jge
dec
in
mov
dec
xchg
scas
lock
jmp
int3
jmp
inc
mov
loopne
mov
rcll
push
cmp
adc
sub
fs
sbb
mov
stc
mov
xor
addps
das
adc
pop
mov
ret
shll
jecxz
out
xor
std
dec
shrl
pop
jne
je
jl
dec
sbb
int3
idivb
out
repnz
cwtl
pushl
xor
xor
mov
gs
or
in
clc
mov
adc
setge
test
es
lock
mov
fistpl
dec
mov
inc
inc
hlt
and
mov
and
test
es
or
push
sub
je
or
into
inc
dec
into
stc
or
pusha
fldenv
mov
into
je
add
push
xlat
stos
lahf
mov
cltd
jge
pusha
jne
push
out
adc
popa
das
jg
popf
pop
mov
xor
or
add
mov
dec
jno
push
sub
jb
lock
movsb
scas
or
out
push
insb
xor
inc
push
inc
inc
in
leave
shr
adc
jbe
std
pusha
icebp
sub
out
cmp
cltd
loop
xchg
mov
push
std
pop
mov
rcrb
mov
jl
in
push
aaa
into
mov
rcll
or
or
aam
cmp
push
sbb
ret
add
xchg
out
add
int3
jo
lock
sub
clc
jge
xor
sbb
push
cltd
movsl
sbb
cmc
xchg
sbb
mov
sbb
jle
hlt
xchg
add
xor
lret
out
xchg
imul
aaa
stos
cwtl
cmp
jns
inc
out
mov
outsl
orl
mov
orb
popa
fdiv
and
movsb
ret
jmp
in
insb
inc
es
test
pushf
test
mov
add
out
sarl
pop
clc
out
ja
loope
les
dec
cmp
js
ret
push
dec
cmp
cld
repnz
mov
pop
das
inc
sbb
mov
mov
stc
inc
int3
mov
jge
cwtl
add
mov
in
pop
lea
shrb
cmp
out
mov
dec
dec
jno
dec
push
ss
and
adc
mov
jbe
fcompl
ret
jo
cmpsl
ret
cmpsb
jg
cmp
cmp
xlat
jo
sub
leave
fdivrl
sub
lock
fiadds
or
in
in
pop
pop
mov
fsubrl
and
add
rcll
sahf
jnp
adc
and
mov
mov
mov
mov
push
push
push
cmp
ja
mov
test
jmp
insl
mov
and
outsl
aaa
ret
out
pop
dec
fmull
add
rorb
fidivrl
inc
bound
stos
popf
lret
lods
aam
out
cltd
sbb
inc
mov
mov
ret
pop
rorl
dec
les
push
xor
das
mov
lock
dec
ss
clc
adc
jp
inc
fsts
lds
cmpsl
out
mov
pop
cmpl
cltd
xchg
addr16
int
fucomip
mov
and
lcall
stos
jmp
roll
test
inc
cmp
inc
mov
insl
fcmovnbe
stos
inc
and
or
pop
rcrb
push
and
loop
mov
imull
push
sbb
push
and
or
in
mov
rcrl
pop
mov
sub
out
inc
and
loope
push
add
ret
add
sbb
outsl
push
xchg
int3
dec
mov
mov
addr16
or
daa
jle
sub
mov
jle
pop
xor
dec
xor
hlt
or
pop
add
ret
dec
jmp
xchg
cmp
fstpl
push
les
je
in
out
int3
jp
imul
jb
out
das
jno
cwtl
lret
mov
push
pop
mov
dec
shlb
mov
inc
jecxz
dec
sar
add
or
int3
xchg
std
and
pushf
jg
jle
xchg
xchg
pop
xchg
add
aad
mov
xchg
aaa
enter
loope
and
frstor
and
xchg
out
jp
jne
pop
mov
push
xchg
ja
lock
adc
sbb
cli
cmp
sahf
imul
imul
cmp
push
lea
xchg
pop
inc
inc
inc
push
and
cmp
dec
add
cmpsl
lods
int3
dec
scas
bound
aad
cmpb
adc
movl
jb
hlt
test
xchg
sbb
fwait
ret
inc
sbb
mov
enter
ss
inc
mov
loop
bound
inc
xor
xor
xchg
fs
jne
dec
push
lret
dec
inc
lea
inc
stos
in
or
push
fistl
jl
push
flds
sti
js
jge
sahf
adc
lahf
mov
or
leave
xchg
mov
and
mov
mov
and
inc
les
xor
cltd
adc
ret
cmp
and
xchg
adc
out
xchg
dec
rolb
js
shr
shlb
sub
dec
shlb
sahf
add
popf
test
pop
inc
lods
test
inc
test
jp
sar
dec
inc
mov
push
popf
ds
pop
mov
gs
int
lret
ds
pop
xchg
fldl
fnstsw
mov
lods
pop
pusha
dec
jmp
jmp
adc
xor
sub
and
xchg
mov
ljmp
call
out
pop
xchg
cmpsl
popf
pushf
sub
jbe
xor
popa
xor
xor
lahf
mov
enter
jns
bound
adc
jne
dec
mov
or
and
sbb
push
xchg
movsb
inc
subl
popf
shrl
inc
and
daa
lahf
push
adc
ss
lock
ljmp
movsl
outsl
imul
inc
add
shll
pop
or
sbb
pushf
in
cmp
mov
daa
in
mov
lods
repz
add
pop
push
xchg
dec
dec
or
mov
mov
xor
imul
in
xchg
cs
sub
out
aad
nop
xor
add
addr16
dec
cmc
idivl
rorb
jge
mov
xchg
mov
js
aam
pop
adc
mov
outsl
aaa
push
sarb
jbe
and
mov
ss
xchg
add
nop
adc
rorb
ss
aad
call
ljmp
xor
dec
add
sub
cwtl
fisttps
out
sbb
aaa
stos
pop
mov
and
int
ds
push
dec
mov
and
add
sub
sbb
sbb
sbb
out
test
fstpl
and
dec
insl
les
iret
ss
push
popf
inc
enter
sub
dec
pusha
jecxz
sti
inc
mov
lea
aaa
fisttpll
jp
int3
push
out
xor
cltd
cltd
stos
or
lret
hlt
mov
mov
hlt
into
test
xor
ljmp
push
or
xchg
inc
or
pop
adc
cmp
mov
xchg
fcmovnb
in
outsb
fildl
jg
mov
add
dec
pushl
test
mov
je
or
and
adc
enter
out
mov
lret
and
push
aam
ljmp
or
lea
add
mov
inc
mov
push
lds
xchg
mov
addr16
sbb
sar
lcall
cld
movsb
rcrb
and
xchg
mov
jmp
lods
fimuls
mov
nop
push
inc
lcall
adc
testb
stos
pop
jmp
sub
sub
and
mull
loope
sahf
ljmp
pop
xor
jae
pushf
inc
mov
aas
lock
xlat
enter
mov
ficompl
xor
shl
std
rorb
lret
jg
mov
ret
popf
pop
jg
cmpsb
mov
pop
out
enter
roll
insb
adc
push
sahf
xor
mov
cmc
push
inc
lds
add
push
jl
or
cmp
cltd
cmp
movsb
sub
mov
je
xchg
test
and
test
stc
add
add
mov
mov
add
or
pusha
or
loope
pushf
pusha
mov
dec
sbbl
popa
test
dec
mov
and
push
pop
inc
xor
fwait
cwtl
xor
xchg
std
mov
movsb
int3
arpl
xchg
in
push
loop
lods
cmp
jge
gs
popf
sbb
push
jge
xchg
jp
or
adc
out
sbb
mov
push
test
in
add
pop
add
fcomp
push
adc
add
cmp
sub
sbb
dec
mov
jns
neg
mov
lahf
sub
and
testb
pusha
and
sbb
cmp
cmp
xchg
mov
inc
add
cmpsl
repnz
fwait
inc
cmp
and
dec
cmpsl
shlb
push
jae
test
jo
jl
dec
sbb
cmp
mov
insl
fidivrs
ret
nop
shrl
mov
mov
pop
cmp
loope
ss
mov
dec
or
or
js
jae
jno
lods
push
fnstsw
fmul
xchg
mov
xlat
ds
ja
xchg
cmp
sub
push
lods
jne
enter
adc
jl
pushf
mov
js
push
jne
inc
pop
leave
aaa
pop
loop
and
sub
push
mov
lods
xchg
jg
fildll
pop
cltd
add
gs
clc
aaa
test
push
pushf
cmp
sub
stos
cmp
aaa
lea
popf
pusha
adc
fisttpl
ja
jb
inc
push
lea
xlat
jg
shrb
aam
or
pop
std
jg
hlt
mov
icebp
testl
inc
add
testl
xchg
and
es
jo
mov
fcmovnu
push
pop
cmp
std
pop
aam
mov
pop
jge
ret
inc
lock
insl
fstl
pop
decb
insb
jnp
cmp
sbb
and
mov
mov
xchg
push
std
mov
shrl
mov
setne
stos
cmp
jecxz
sub
adc
add
xor
mov
jo
gs
cmp
or
nop
add
mov
fildl
mulb
lret
clc
lds
mov
xchg
out
add
lods
lret
xchg
xor
xor
scas
outsl
inc
inc
stos
pushf
scas
pushf
imul
mov
inc
inc
iret
push
sbb
aaa
cli
sbb
xchg
ljmp
movsl
add
es
mov
std
mov
cli
psllw
push
dec
cs
xchg
insb
pop
insl
jp
jo
dec
push
cltd
enter
fs
stos
lret
jns
dec
mov
fsubs
fistpll
mov
add
mov
adc
pop
fs
push
lcall
inc
out
mov
cli
popf
nop
stos
fcoms
pop
orl
mov
sbb
in
dec
mov
xchg
lea
les
jle
xor
jge
jmp
scas
fdivrl
pop
outsb
add
cmp
clc
popa
sti
or
ja
aaa
insb
jae
fisubrs
pop
sub
jae
xchg
push
loope
movsb
xchg
lock
adc
out
pop
test
hlt
xor
shll
mov
pusha
repz
imul
mov
lret
shrb
cmp
xchg
mov
xor
lea
imul
push
leave
das
inc
aad
subl
or
mov
test
adc
push
decl
in
cmpsl
inc
outsb
sbb
sbb
jb
cltd
sbb
cs
cmp
nop
push
icebp
adc
push
nop
mov
jns
xlat
sub
xor
popa
mov
dec
sti
or
cmp
add
cmpsb
ljmp
adc
xchg
and
int
in
cmp
jp
dec
mov
xchg
test
sbb
iret
aad
inc
repz
pop
or
cmp
xchg
bound
pop
mov
fistpll
mov
test
into
sub
and
xchg
test
sub
pop
lret
test
inc
hlt
lret
je
ss
mov
mov
ss
lods
icebp
sbb
in
out
pusha
dec
cld
int3
fisttpll
fwait
lds
xchg
into
leave
jmp
mov
xlat
sbb
shll
std
xor
gs
sarl
or
loop
adc
aas
and
xor
popl
scas
push
popa
insl
add
sar
lcall
imul
cmp
aad
fwait
mov
mov
push
push
in
cmpsb
sbb
push
xorl
adc
mov
push
or
push
or
shll
mov
lods
scas
inc
lods
jl
sbb
or
inc
out
push
mov
mov
addr16
inc
lods
shl
in
lret
mov
cmp
lods
fbstp
xor
loopne
or
pop
iret
int3
ret
pop
loopne
out
mov
shll
out
lods
sub
pop
mov
scas
loopne
or
or
dec
loope
push
fisttpll
push
or
mov
sbb
js
add
xchg
jge
jb
xchg
cmp
push
xchg
mov
shrl
pop
jo
push
push
sahf
dec
popf
pop
mov
icebp
shlb
cmpsb
je
dec
cmp
arpl
ret
ss
notb
lods
fcompl
lock
aas
dec
add
in
mov
dec
cmp
or
push
pop
xor
pop
xor
cmp
cld
in
dec
mov
push
add
sahf
push
or
cmp
cmpsl
sub
pop
cmp
les
and
repnz
std
inc
ds
cmpsl
test
and
test
dec
cmp
sbb
jge
cmp
mov
dec
jo
pop
add
out
add
or
bnd
leave
fs
nop
stc
pop
add
inc
sub
xor
repnz
mov
pop
mov
in
mov
es
jne
sub
lret
sarl
add
out
push
sub
pop
int
test
mov
push
repz
cwtl
les
add
inc
bound
rep
mov
jnp
push
fimuls
push
scas
sub
mov
ret
and
fsubp
mov
push
inc
cmc
jg
iret
adc
inc
or
enter
xchg
sbb
fiaddl
xchg
cmp
cmp
sub
mov
xlat
xor
icebp
and
mov
xor
inc
popf
dec
data16
xor
add
test
pushf
jmp
push
inc
push
push
jle
sbb
and
push
outsb
insb
or
test
xor
xchg
mov
push
cmpsb
lcall
push
shr
fnstsw
movsb
jp
lea
and
dec
sbb
adc
lret
leave
sub
sub
scas
mov
in
lods
movsb
or
dec
movsl
jge
ja
jg
lahf
clc
mov
mov
xor
push
or
mov
mov
in
repz
idivl
outsb
adc
adc
icebp
pop
js
jecxz
cld
aas
mov
xor
cmp
jg
imul
repz
nop
mov
nop
cmc
jne
xchg
push
push
loop
push
ljmp
jnp
sbb
pop
lds
adc
es
lods
lcall
rclb
test
stc
mov
push
jg
pop
test
mov
and
aad
xor
push
xchg
push
mov
cmovp
bound
movsl
or
in
or
ret
and
movsb
add
scas
sub
addr16
hlt
mov
cwtl
jg
add
orb
jnp
hlt
mov
jl
fs
mov
pop
pushf
movb
ror
xlat
fisubs
add
or
les
mov
push
sahf
xor
out
ds
loop
inc
mov
bound
push
cmp
sbb
lret
int
jecxz
inc
in
inc
jg
test
repz
repz
daa
add
xor
repnz
jb
adc
movsl
aad
dec
pop
cmp
push
mov
mov
subb
lods
push
jp
sbb
jb
imul
je
imul
orl
insl
inc
out
mov
repnz
in
in
sub
jge
jo
and
cmp
mov
adc
and
pop
mov
jl
loope
fisttpl
dec
cmpsb
jae
xchg
stc
sbb
cli
jle
mov
loope
in
scas
or
dec
shrb
jne
mov
roll
sub
sti
sub
and
jns
pop
sub
mov
test
dec
repz
push
cld
pop
sbb
hlt
jbe
xchg
out
repnz
cli
push
or
lds
mov
mov
fnsave
movsl
aaa
cltd
repz
xor
add
sub
jne
xlat
ss
into
ss
push
js
or
imul
jo
aam
fldcw
mov
movsb
stos
dec
xor
in
jnp
fwait
lea
sub
inc
add
or
xchg
ja
sbb
loop
cs
arpl
inc
into
or
gs
subl
clc
mov
imul
and
add
push
pop
fdivs
cmc
mov
popa
adc
ja
jge
sahf
enter
mov
push
inc
adc
xchg
and
push
pop
repz
sub
shlb
rorb
push
add
sbb
adc
into
jg
mov
faddl
loope
out
pop
jmp
aad
mov
and
pop
test
out
scas
stos
pop
mov
cmp
pop
popa
in
add
mov
push
push
inc
lods
testb
inc
pushf
inc
pop
test
push
in
aam
sahf
test
lret
mov
in
sbb
mov
lods
cli
cmp
ja
mov
out
js
sti
dec
fisubs
push
sbb
movsb
lds
jge
stos
cmp
fstps
add
pushf
sti
add
sub
aas
xor
lds
lea
add
jle
out
add
mov
mov
popa
and
push
iret
cmc
dec
adc
out
std
fisttps
adc
retw
pop
dec
popa
dec
aaa
ret
jne
adc
dec
push
stos
or
sbb
in
inc
sahf
jge
ret
push
pop
adc
adc
cmpsl
lods
mov
mov
cmp
mov
icebp
adc
sbb
rcl
sbb
test
jecxz
test
xchg
sbb
add
mov
sub
push
fidivrl
in
rorl
ret
ret
mov
sub
movsl
insb
mov
addl
cmpsb
lods
repnz
adc
int
cmc
push
cmp
pop
xor
xor
and
ret
mov
pusha
push
mov
xchg
in
sub
push
imul
inc
imul
dec
les
fldenv
push
out
cli
and
invd
mov
stos
sbb
mov
and
xor
lock
xchg
xchg
mov
ret
jne
adc
jle
jae
jmp
sbb
cmpsl
loope
repz
pop
ret
mov
pop
insl
test
movzbl
fs
sahf
arpl
ret
outsb
shrb
mov
xchg
xor
iret
xchg
sub
test
fidivrs
mov
push
pop
add
adc
lea
cmc
cmpsl
jns
jp
xchg
xor
pop
lahf
mov
fdivr
nop
inc
outsl
ljmp
lds
mov
pushf
inc
jo
test
inc
inc
or
js
push
adcb
das
lret
mov
es
cmp
cwtl
or
jle
fistpl
ret
clc
cmc
sbb
cwtl
imul
cmp
xchg
outsb
fists
sbb
ds
adc
into
fiadds
test
push
rcrb
xor
std
xchg
or
dec
xor
dec
enter
aad
sub
cmp
imul
ret
mov
jmp
lock
add
dec
shrl
icebp
xor
adc
xchg
mov
inc
out
pop
xor
jno
imul
sbb
sahf
jmp
dec
sub
icebp
jg
cs
or
xchg
int3
shrl
fcomp
add
mov
sbb
addr16
xchg
push
adc
or
add
clc
cmpsl
repnz
fcoms
xchg
dec
addb
lock
xor
or
rcr
mov
andb
xchg
ljmp
xchg
cltd
je
jns
xor
push
or
stos
shlb
jns
push
or
repnz
fwait
adc
or
test
adc
outsl
stc
mov
inc
notb
pop
mov
mov
insb
dec
xlat
push
pushf
loop
inc
push
and
cwtl
notl
pop
stos
loopne
fidivrl
or
mov
fcoms
sub
mov
xchg
xorps
mov
mov
add
aas
mov
fs
je
cmp
shrl
xlat
xchg
push
lock
xchg
jae
js
bound
pusha
xchg
subl
lret
bnd
sbb
shrl
bound
push
push
push
dec
adc
fisubl
in
daa
pop
xor
in
xchg
cmp
jbe
sahf
inc
push
add
xchg
add
cs
pop
mov
add
pop
cmp
cs
sarb
dec
outsl
pop
cmp
push
or
mov
cld
or
aaa
arpl
lret
pop
push
mov
aad
jp
or
adc
cmp
rcl
loopne
dec
addr16
push
scas
out
or
int3
push
or
pop
dec
stos
int
sub
and
shl
or
dec
int3
push
aam
movsl
add
pop
popf
icebp
cmp
je
jmp
mov
xchg
ror
popl
lret
push
cmp
xchg
push
or
bound
int3
testl
mov
mov
and
out
int3
inc
add
and
int
push
inc
sbb
in
jecxz
xchg
sbb
cli
pop
mov
mov
lock
cwtl
popa
xchg
dec
mov
incb
aaa
dec
test
dec
arpl
add
sbb
pop
repz
rorl
clc
push
test
loope
xlat
push
mov
sti
cs
xchg
lock
lds
std
dec
jns
mov
xor
std
and
ss
ds
fistpll
insb
fdivrs
test
push
leave
sub
jp
test
int3
pop
lods
mov
pop
push
xchg
jge
mov
dec
bound
push
push
adc
dec
sbb
in
sar
addr16
insl
and
mov
and
arpl
push
insl
add
and
movsl
add
xchg
popf
ja
addr16
test
jge
sbb
jle
dec
cmc
repz
sbb
fcoml
scas
mov
mov
inc
pop
mov
push
and
add
jg
cmpsb
mov
dec
fsub
mov
test
fprem
int
loop
fs
adc
popa
stos
push
mov
or
add
cmp
cmp
or
fidivs
test
xchg
push
jb
pop
mov
shrl
xorl
loope
xor
cmc
fcmovbe
xchg
loope
mov
fnstcw
test
pop
jl
cmp
shlb
pop
in
pop
xchg
fisttps
fs
fdivp
sti
sub
pop
in
push
or
pop
insb
dec
or
in
dec
mov
dec
nop
or
add
xor
adc
inc
jmp
mov
add
ljmp
jl
cmp
xor
leave
and
fists
mov
aad
in
inc
adc
xchg
sub
mov
pop
mov
mov
inc
pop
mov
mov
mov
int
int
pop
out
inc
sub
fnstcw
adc
xchg
cmpsl
dec
pop
in
test
mov
mov
or
jns
aad
aad
sbb
insb
dec
ljmp
xor
cs
nop
leave
xchg
sub
fiaddl
ljmp
iret
enter
sarb
int3
rcrb
cmp
jno
jo
pop
add
and
fdivl
aad
mov
stc
sbb
xchg
sub
sub
jnp
daa
xor
dec
pop
push
xchg
gs
jmp
push
cmpsl
shl
sbb
mov
push
rcl
cmpsl
fnstsw
mov
cltd
insb
push
insl
pop
and
jae
lcall
sub
jg
jp
and
testl
imul
push
jno
or
jp
outsl
xchg
add
jb
dec
faddl
push
cmp
xor
ja
xor
test
lcall
aam
and
ja
cmpl
sbb
jo
mov
mov
mov
add
subl
scas
dec
mov
or
jp
sbb
das
inc
stos
scas
lods
jmp
mov
mov
cmpsl
aaa
jbe
lods
stos
push
test
mov
int3
and
loope
push
ret
aaa
jecxz
inc
loope
inc
inc
jmp
pop
std
int3
pop
and
out
mul
int
sbb
outsb
adc
fmuls
jp
ficomps
outsb
push
sbb
push
and
or
fcmovne
sbb
pop
lock
shll
cmp
fs
aaa
pop
insb
inc
adcb
insl
call
lahf
pop
lods
fistpll
orb
cs
fsts
mov
push
out
cli
test
xor
aad
and
fmuls
hlt
mov
xor
incl
push
sub
popw
jbe
into
ss
popa
mov
mov
cmpsb
mov
lret
adc
jg
lret
shl
ret
aas
je
jmp
jo
or
lcall
or
push
pop
push
or
fucomp
imul
xchg
mov
inc
xor
jecxz
test
sub
outsl
rorl
aad
addb
lahf
pop
rorb
fucomip
xchg
cld
push
jo
push
shll
jp
cmp
adc
mov
sarb
pop
pushf
pop
inc
mov
jno
or
or
scas
orb
inc
imul
mov
cltd
stos
add
sbb
rorl
or
decb
and
mov
pop
stos
push
dec
shlb
jmp
sahf
sbb
push
arpl
add
adc
es
les
pop
gs
adc
cmpsb
ss
fs
ljmp
iret
dec
aaa
mov
jecxz
lcall
inc
and
dec
clc
es
jb
mov
mov
adc
je
jge
push
ss
test
fcompl
mov
cltd
sub
cld
movsb
add
pop
icebp
mov
pushf
fcoms
call
mov
pushl
jl
lret
cmc
xor
xlat
bnd
and
lods
in
ret
or
or
pop
and
popf
mov
mov
xchg
sub
mov
fistl
pop
cld
loop
jae
cmp
loope
cmpsl
shll
lret
push
fcoms
xor
imul
sbb
movsl
pop
pusha
icebp
pushf
adc
mov
es
inc
xor
pusha
dec
jl
fwait
addr16
ljmp
ret
inc
pushf
mov
lcall
dec
add
mov
jl
push
sbb
mov
int
sbb
inc
mov
aas
mov
adc
ret
je
and
aam
dec
stos
insb
sub
mov
inc
jle
int
lret
and
les
mov
sbb
add
outsl
fisttps
pop
loop
mov
sub
mov
adc
push
cltd
dec
lea
sbb
push
je
addr16
sub
in
rolb
mov
jns
dec
mov
inc
cmp
es
test
lret
mov
jns
jbe
popf
mov
mov
sub
mov
lods
les
stc
ljmp
hlt
fs
jbe
add
iret
gs
pop
mov
loop
or
je
popa
inc
lock
jne
inc
test
lahf
mov
cmc
dec
test
scas
ret
add
movsl
pop
shr
rorb
das
addr16
cmpsb
dec
hlt
psrad
xor
ss
or
pop
movsl
mov
int3
scas
pushf
xchg
pop
mov
mov
lret
mov
cltd
mov
lods
pop
cwtl
fldenv
repz
jae
sbb
int
das
int
ja
mov
sbb
dec
mov
shrl
sub
jb
add
xor
iret
mov
xchg
ja
int3
imul
or
adc
add
inc
pop
cmpsl
lcall
fs
and
adc
arpl
in
xchg
cltd
xchg
mov
add
in
sub
out
sti
dec
inc
orl
js
or
mov
popa
mov
cmp
lcall
icebp
ljmp
sub
test
push
hlt
inc
roll
lret
inc
mov
push
push
pop
repnz
popf
sbb
mov
into
push
push
int3
into
pop
pop
push
xchg
shlb
leave
pop
insl
fiadds
lods
or
ror
sahf
test
sub
mov
shlb
ss
daa
pop
sbb
inc
call
ja
ds
sbb
xchg
mov
leave
out
pop
int3
jge
hlt
push
ss
sub
dec
jns
popa
inc
call
in
xchg
pop
cmp
aas
xor
cmp
fistps
adc
faddp
scas
pop
pop
enter
mov
pop
and
sbb
in
sbb
push
lret
movsb
adc
or
loope
and
xchg
sub
test
dec
cmp
mov
push
mov
xor
pop
inc
sub
dec
sbb
sbb
test
out
jo
xor
into
out
adc
in
sbb
addr16
out
push
lds
mov
jne
dec
inc
aam
adc
dec
push
mov
xor
pop
sbb
aad
roll
scas
inc
sub
push
test
jne
pop
cwtl
pop
ja
jns
ret
add
inc
jbe
je
icebp
repnz
subl
into
out
add
shrl
test
and
cmp
lock
cs
frstor
movl
shrb
mov
pop
jle
mov
mov
pop
rcrb
fsubs
fldenv
aad
mov
insl
ficoms
das
adc
xchg
aam
rdpmc
adc
jl
aas
movsb
lret
fwait
dec
push
fwait
push
adc
jmp
scas
inc
add
fldcw
stc
adc
lret
fwait
pop
xchg
dec
out
rol
push
mov
test
dec
mov
rclb
dec
sahf
fsubl
insl
lcall
adc
inc
adc
push
xchg
xor
ds
out
xchg
je
mov
lret
scas
push
in
dec
test
xchg
jl
in
dec
lcall
out
inc
int3
push
pop
or
push
call
pop
adc
mov
jecxz
dec
jb
int
jo
stos
dec
adc
push
push
sub
jo
popf
xchg
xchg
std
mov
and
mov
sbb
inc
dec
mov
xor
cwtl
loope
into
push
imul
cwtl
xor
xchg
in
inc
mov
mov
pop
push
imul
cmp
push
cltd
cmp
mov
cmp
pop
out
push
and
fdivrs
cli
push
lock
jg
mov
leave
outsb
mov
jp
cmp
rolb
iret
cli
out
es
repz
fs
fisubrl
cmpsb
ljmp
rorb
xchg
jo
cmpsl
mov
or
push
movsl
les
mov
jle
pop
into
push
push
outsb
lahf
ror
push
jno
inc
jmp
mov
xchg
fwait
pop
xchg
stos
test
mov
in
movsl
insb
add
cmpsl
jae
adc
push
fwait
in
jg
fdiv
inc
out
jo
cmpsb
lods
and
loope
pushf
ret
hlt
or
xor
jg
mov
sti
or
arpl
sub
dec
iret
fldt
cmp
mov
int
in
shlb
scas
sbb
add
cli
inc
dec
cmp
iret
dec
cmpl
dec
rcrl
push
adc
or
pop
mov
repz
inc
loop
mov
in
pop
sub
mov
pop
xchg
mov
or
and
jo
inc
push
mov
pop
aad
mov
cmp
in
aad
and
dec
sub
and
mov
mov
push
out
xchg
dec
pop
cmpsb
sbb
ljmp
clc
jnp
jnp
popa
pop
xor
xor
push
sti
xchg
cltd
mov
push
sub
sahf
push
sbbb
mov
je
pop
lcall
adc
sub
or
loopne
shll
repnz
cmp
xor
mov
mov
pop
cs
test
cmpsb
adc
cwtl
mov
aas
pop
ret
jge
das
loopne,pn
push
xor
cmp
push
mov
or
out
mov
dec
sbb
call
cmp
dec
into
inc
lea
in
or
jnp
cwtl
out
mov
inc
dec
mov
inc
add
call
ljmp
or
xor
inc
cltd
adc
add
addl
jbe
mov
jmp
cmpb
lds
jge
jle
leave
ret
jp
pop
cmp
lret
adc
pop
icebp
sub
ja
lret
jl
dec
stos
rolb
std
inc
rcll
pop
sbb
cmpsb
stos
adc
sub
jb
inc
popa
jo
fs
in
xor
push
lcall
ja
or
xor
mov
ret
xchg
out
popa
out
sub
push
dec
pop
mov
xchg
imul
sbb
xor
shll
or
pop
cmp
lcall
push
mov
mov
imul
pop
dec
and
sbb
jmp
out
stos
pop
bnd
and
loopne
lahf
xchg
add
lahf
insb
ficoms
push
ja
pop
into
mov
shrl
lcall
loop
outsb
ja
add
mov
jp
in
mov
loop
push
xlat
jb
mov
mov
daa
adc
xchg
int3
sub
lods
popa
jbe
push
pop
xchg
push
sbb
add
inc
pop
push
jmp
ret
xchg
dec
ljmp
xchg
loopne
in
mov
mov
cwtl
out
aam
test
pushf
jg
incl
scas
pop
std
jge
jns
mov
or
push
insb
pusha
push
cwtl
jg
jp
push
sbb
fstpl
repz
pop
imul
add
dec
jo
lods
lret
push
jmp
push
xchg
push
inc
testl
pushf
in
sbb
ret
push
mov
cmp
push
xor
jl
dec
cmp
sbb
pop
in
inc
mov
mov
loopne
mov
insb
gs
pop
sub
push
dec
pop
insl
lock
stos
rclb
xchg
sbbb
mov
cmp
daa
push
pop
mov
sub
shll
fs
in
pop
scas
inc
push
out
shrb
sti
in
push
cmc
popa
dec
nop
push
js
imul
lret
jmp
iret
je
pushf
rorb
xor
ds
sbb
test
push
aam
lret
xor
mov
outsb
inc
jo
test
xchg
cmc
data16
sub
lods
sbb
mov
sub
adc
cmp
lret
cmpsb
sbb
lds
cmp
loope
adc
push
dec
lret
shlb
std
pushf
jmp
jmp
mov
ret
sub
mov
sbb
jmp
dec
pop
jno
jbe
inc
add
push
xchg
int
add
movsl
inc
lret
pop
dec
loop
and
jle
ja
jp
xor
cmp
sahf
lahf
jbe
mov
cmp
dec
add
les
push
pop
xor
cmp
mov
sub
call
sbbb
mov
ret
arpl
push
int
sub
xor
sarb
mov
loop
stc
mov
adc
gs
sub
dec
xor
sub
pop
repz
xchg
add
pop
lds
push
cld
mov
mov
pop
pop
in
sbb
std
ljmp
lahf
xchg
and
stos
push
add
lret
jns
sar
mov
test
and
repnz
push
nop
test
adc
mov
nop
mov
sahf
cli
andb
xchg
sbb
std
rcll
mov
jns
and
out
pop
mov
xor
mov
js
push
outsb
jmp
out
aas
pusha
mov
inc
dec
and
dec
mov
icebp
sub
inc
aaa
adc
or
in
push
jl
in
sub
pushf
shrb
popl
pop
xbegin
pop
sub
and
ja
cmp
repnz
dec
inc
and
adc
ss
mov
mov
add
jo
in
pop
add
movsb
jp
fwait
sbb
loop
cmp
movl
fwait
sub
lds
aas
lret
vpaddusb
dec
movsl
cmp
mov
loope
jb
cltd
cmp
popa
sub
lods
push
rcrl
inc
add
sbb
ss
cmp
test
in
jge
jle
jmp
inc
outsb
sbb
jne
push
fldenv
testl
jl
dec
in
cli
mov
add
jmp
movsb
jns
out
in
pop
rorb
and
test
push
and
lock
ret
movb
popf
adc
int
cmc
pop
out
push
cmp
mov
jns
pushl
int
pop
gs
int3
mov
push
xchg
fxch
cli
imul
cmp
xor
add
mov
fwait
add
pop
sub
inc
leave
dec
test
js
mov
or
insb
jns
js
cmc
push
jns
not
fmuls
sub
aam
inc
cmpsl
mov
pop
add
loope
and
add
push
add
pop
xor
push
inc
rcrb
xchg
pop
stc
aaa
dec
dec
push
test
push
xor
inc
xchg
sahf
or
jbe
jbe
mov
mov
and
jge
jb
dec
pop
in
xchg
mov
and
push
js
out
aad
test
mov
mov
cld
add
sbb
sbb
adc
int3
push
mov
gs
mov
xchg
in
dec
jl
add
shl
subb
or
add
mov
scas
jge
jle
pop
movsl
ds
push
in
fists
stos
cwtl
push
dec
sbb
rcll
sti
pop
insb
add
aad
inc
push
pushf
xchg
fistl
popf
and
jge
mov
les
mov
in
imul
dec
add
repz
sbb
js
jl
or
data16
xchg
int
xor
hlt
xor
or
sarb
push
xlat
sub
push
lret
test
jbe
insl
jle
cltd
imul
scas
cmpsl
rorl
xor
nop
cmc
mov
inc
and
arpl
rolb
mov
xor
or
dec
mov
call
mov
in
pop
inc
movsb
xchg
idivb
int
icebp
repz
sub
in
cltd
inc
jmp
lods
jno
add
int
xchg
cltd
cmp
lock
mov
fimuls
mov
mov
iret
push
ja
daa
iret
pop
clc
push
sbb
mov
mov
popf
xchg
mov
sbb
stos
adc
jae
mov
mov
pop
ja
aad
sti
add
leave
push
sti
sbb
movsl
jp
aam
pop
mov
addr16
int
push
rorb
dec
sti
iret
inc
mov
sub
cmpsl
shlb
mov
pop
dec
pop
push
pop
jg
movsb
sub
fwait
add
pop
decl
add
pop
cmp
ds
pop
out
test
lds
fxch
into
xor
mov
addb
popa
mov
es
lds
cmp
addr16
aaa
mov
inc
shrb
aad
sub
out
icebp
push
jl
dec
xor
pushf
aam
aaa
js
mov
and
dec
sbb
mov
xor
test
and
mov
adc
adc
scas
cli
aaa
cmpsb
mov
setg
add
cmp
int3
cmp
lret
push
or
or
mov
fisubs
jbe
lds
pop
dec
in
mov
mov
rcr
or
xlat
neg
or
cmp
stc
pusha
mov
bound
std
and
jne
xchg
adc
xchg
dec
xor
mov
sbb
pop
test
sbb
ss
jne
pop
push
bound
sti
add
dec
sti
fbld
mov
movl
stos
or
sub
jecxz
xchg
jge
popf
out
xchg
inc
cmp
mov
mov
insl
ret
mov
mov
mov
out
je
scas
adc
cwtl
ds
add
xchg
sub
lret
clc
jecxz
rcll
mov
push
inc
xor
jl
clc
or
in
ss
daa
enter
ds
or
ss
mov
addl
jge
adc
stc
movsb
pushf
arpl
stos
sbb
aas
arpl
add
mov
out
aaa
scas
into
loopne
scas
dec
adc
adc
inc
and
fs
sub
iret
sbb
mov
lock
jecxz
or
adc
jb
shll
sbb
test
hlt
cmp
out
iret
xlat
adc
xchg
mov
cmp
cmp
sub
cmpl
add
lcall
adc
jp
cmp
push
push
scas
add
lret
dec
fwait
mov
xchg
dec
and
out
bound
sbb
repz
aas
ss
jle
pop
gs
stos
mov
or
jnp
hlt
dec
aam
subb
mov
push
int
int3
inc
jbe
cmc
pusha
or
inc
add
dec
mov
addr16
mov
push
jbe
pop
mov
xchg
cmp
pop
fistpll
fsubs
int
xchg
aas
sahf
xor
popa
orl
les
inc
rcrb
pusha
repz
imul
dec
jo
into
jl
xor
add
dec
mov
fs
mov
add
lods
in
sub
or
test
arpl
fnsave
mov
mov
adc
dec
mov
mov
jecxz
sahf
jp
outsb
outsb
dec
mov
loope
test
jbe,pt
add
xor
or
lret
imul
xor
fisttpll
jbe
out
sti
filds
lods
sbb
mov
daa
mov
icebp
push
dec
adc
stc
xchg
sar
and
iret
hlt
inc
push
out
pop
dec
or
out
leave
cmp
mov
push
mov
pop
in
in
movsl
in
xor
cmp
or
cltd
lock
add
roll
inc
rcrb
out
testw
mov
xlat
lcall
sahf
cmp
testl
xor
pop
enter
adc
ficoml
push
mov
and
aad
dec
addr16
mov
add
das
enter
in
and
pop
arpl
sbb
pop
inc
adc
push
pushf
pusha
adc
das
lret
push
xor
and
xchg
movsl
sti
insb
jecxz
cmp
ret
sti
jnp
inc
inc
sbb
pop
cmp
sbb
push
dec
std
lret
adc
out
sub
inc
das
mov
lret
sbb
jle
je
push
cmp
and
lcall
cltd
jo
test
ror
repnz
test
cmp
std
pop
cmc
xchg
les
xchg
aam
xor
xchg
pop
xor
addb
iret
adc
mov
lahf
clc
shll
xchg
xchg
fistps
mov
sub
mov
xor
jecxz
fistpll
fisttpl
das
cwtl
cs
adc
sbb
repz
add
push
add
mov
fidivs
mov
in
mov
push
cmp
and
lcall
out
std
cmpsb
lods
sub
cmp
or
stos
sub
outsb
inc
sbb
adcl
jmp
aas
lret
add
lret
xor
in
jmp
and
or
cmp
push
das
adc
or
mov
inc
jmp
out
jmp
mov
mov
pop
inc
pop
sub
mov
jne
jmp
icebp
push
xor
ds
pop
arpl
mov
mov
xchg
lock
sub
rcr
insl
aaa
lds
sbb
cmpsl
test
fmull
das
jmp
or
pop
ja
adc
arpl
jbe
adc
inc
divb
repnz
cli
arpl
cld
mov
adc
adc
scas
adc
cmpsb
adc
xor
cmpsb
outsb
repz
pop
int3
insb
mov
cmp
xchg
dec
aam
pop
push
lock
and
mov
lock
cmp
cmc
push
sub
adc
xchg
stc
mov
shl
cltd
inc
push
pop
xor
jecxz
das
into
in
cmc
inc
cmp
xor
pop
mov
sarb
sub
lea
add
jb
and
sti
xor
add
testb
mov
insb
or
out
and
pop
push
xchg
ljmp
loope
sbb
jno
comiss
sub
cmp
add
sti
mov
push
repz
outsb
scas
xchg
xlat
repnz
xor
jmp
dec
aad
sbb
ja
mov
lahf
mov
sbb
dec
and
jbe
mov
hlt
sbb
cli
mov
and
xlat
shrb
lock
mov
and
imul
xor
cmp
std
outsb
and
adc
cmp
in
daa
aas
or
jle
lock
imul
xor
sahf
xor
xor
ret
push
flds
push
aaa
mov
mov
pop
or
xchg
pusha
inc
cmc
testl
mov
dec
fistl
rcr
pushf
mov
lret
lcall
mov
xor
fistpl
jmp
imul
xchg
add
ja
inc
mov
jmp
movsb
cld
add
sub
add
push
arpl
pop
xor
pop
pop
dec
sahf
fisubrs
in
aas
mov
lret
adc
fimuls
fwait
or
xchg
cld
daa
mov
pop
mov
inc
aaa
out
jne
adc
insl
xor
outsb
loop
in
fisubrl
imul
lock
fwait
mov
cli
and
sbb
jg
sub
jne
mov
aad
dec
mov
xchg
push
imul
xchg
aas
xchg
push
aam
sub
in
in
cmc
lock
das
js
sti
xlat
jbe
pop
int
mov
sbb
div
xlat
push
aad
aad
mov
push
mov
mov
xor
xlat
push
xchg
aam
sub
fbld
and
cmp
sahf
cmc
hlt
data16
jne
decl
or
in
into
pop
mov
sahf
pop
out
repz
mov
or
mov
ja
mov
ljmp
mov
pop
mov
push
add
or
pop
ljmp
popa
push
lret
lcall
mov
sbb
pusha
cmpb
or
xlat
xor
dec
dec
fsubrl
outsl
int
fsub
xor
add
add
fisubl
mov
sti
xchg
cltd
xchg
cld
and
fnstcw
xchg
or
add
scas
inc
test
push
fwait
mov
mov
cld
aam
push
xchg
mov
sub
aaa
add
cld
mov
ret
push
orl
jne
xchg
adc
xor
insb
faddl
cmc
ret
enter
jecxz
push
and
adc
fbstp
loopne
aas
mov
iret
cmp
std
hlt
pop
jno
shll
imul
sbb
cmp
jae
inc
jne
leave
mov
adc
out
inc
dec
cmpsl
xchg
sti
jb
inc
addr16
sar
push
jle
mov
test
push
lea
mov
ja
leave
and
lds
push
mov
sbbb
mov
fdivp
xor
cmp
hlt
push
insl
jle
inc
int3
test
push
fs
and
cmp
xchg
or
xlat
mov
jecxz
loopne
xchg
in
mov
mov
ljmp
cmp
addr16
aaa
idivb
orl
xchg
push
jecxz
pop
lret
adc
jne
in
out
dec
xor
dec
ljmp
mov
lret
fsts
push
fscale
add
mov
js
dec
push
sahf
pop
lahf
dec
rol
cmp
jge
shlb
lods
lods
xchg
test
jno
imul
pop
push
in
xlat
movsl
clc
push
aaa
push
xor
iret
lods
outsl
test
push
test
test
push
imull
test
push
in
je
xor
inc
jp
ds
dec
xorb
mov
sbb
jbe
sbb
pop
es
decb
stos
dec
fnstenv
lret
mov
push
aaa
xchg
mov
lds
mov
in
push
jg
lods
xlat
or
bnd
ret
addr16
adc
pop
dec
rcr
mov
jmp
les
das
lock
fcompl
jnp
inc
orl
add
mov
fnstsw
mov
mov
dec
mov
out
cltd
lcall
inc
cmp
push
addl
imull
aam
outsb
cmp
mov
test
fsubr
add
or
mov
and
daa
repnz
or
fdivr
pop
lock
outsb
mov
mov
pusha
dec
icebp
je
ret
dec
mov
lock
pop
mov
add
xchg
cmc
clc
stos
or
ret
dec
cmpsl
fistps
mov
out
insb
outsl
xor
push
and
les
ret
std
xor
mov
push
mov
incl
dec
push
mov
mov
push
pop
mov
inc
add
cs
fldl
xor
sbb
and
add
add
fmuls
fwait
sbb
sbb
mov
shrl
inc
cltd
and
sbb
lahf
or
inc
push
adc
push
xchg
es
in
push
orl
rcr
lret
js
mov
outsl
fists
push
dec
add
lcall
push
xchg
cmpb
cmc
int3
insb
or
ds
lds
mov
cmc
aas
out
scas
cmp
adc
xchg
cli
sarb
jecxz
sbb
dec
lock
sbb
xchg
in
or
ror
xchg
rcrl
mov
fstps
pop
jns
xor
mov
dec
jmp
popa
ficoms
shlw
fldl
std
xlat
pop
sub
mov
rolb
cmpsb
xor
xor
xchg
push
pop
xor
jle
adc
xor
insl
xor
mov
cmp
sub
ja
aas
aad
sub
dec
mov
fst
out
pop
push
add
push
mov
iret
fcmovnu
dec
mov
add
ret
inc
mov
or
or
or
aam
aaa
add
je
mov
das
insl
or
in
add
iret
data16
pop
cmp
mov
mov
xor
mov
mov
test
xchg
jae
lahf
pop
pusha
adc
ljmp
jle
jge
mov
sbb
pop
call
lds
pop
mov
dec
push
mov
xor
ja
inc
popfw
out
adc
leave
aad
mov
imul
pop
loop
or
ljmp
mov
mov
shll
ret
push
call
aam
fwait
lret
push
add
sub
iret
add
push
mov
pop
addr16
jno
dec
pop
inc
lret
or
xor
adcl
mov
adc
lods
xor
int
adcl
fnstenv
add
xchg
and
int
dec
add
mov
push
popf
es
int
inc
in
shl
pop
roll
or
outsb
sbb
xchg
jge
or
outsb
shlb
or
dec
add
rclb
add
out
sbb
rcrl
sub
mov
in
adc
in
ljmp
fistpll
inc
fcoml
arpl
lret
inc
and
and
sub
mov
les
cmpsl
aam
and
out
outsl
pop
in
test
or
mov
mov
pop
call
lods
stos
push
sbb
mov
dec
gs
and
ss
imul
xor
ret
cmp
leave
xor
cmp
sarl
hlt
or
mov
ss
push
fnstcw
fldenv
add
addr16
adc
dec
bound
xchg
push
lods
sbb
and
mulb
cmp
push
mov
sub
cs
inc
aam
mov
jg
gs
call
jg
mov
push
inc
mov
sbb
sbb
pusha
ja
call
pop
mov
into
cmp
pusha
lods
pop
pushf
sub
and
pusha
lahf
pop
push
lock
nop
nop
popf
nop
cli
fst
inc
sbb
aad
or
fstps
lods
stc
lret
incl
jbe
mov
mov
jg
lea
pop
in
xor
arpl
ret
inc
mov
mov
daa
ret
cmpb
sbb
lahf
loope
lcall
dec
ja
pusha
movsl
sbbb
sbb
push
in
dec
mov
mov
mov
jg
rclb
adc
xchg
jno
xor
dec
pop
sbb
lods
das
lahf
outsl
adcl
test
xchg
out
ja
int3
outsb
sbb
cld
in
add
and
mov
fs
fisubrl
cltd
shlb
es
jp
xor
jne
or
es
unpckhps
ss
push
xchg
and
lds
mov
xchg
mov
xor
and
pop
pop
xchg
addl
ja
jmp
ja
movsb
xor
pop
mov
jle
pop
daa
sub
out
mov
sbb
dec
adc
xchg
jb
inc
xchg
xor
push
sahf
cmpsb
cmp
iret
xor
add
das
xor
das
push
arpl
les
cmp
pop
test
addb
xor
inc
jl
loope
fistl
in
push
or
sbb
add
scas
xchg
popa
pushf
ljmp
sub
jb
and
ljmp
xchg
lea
inc
je
and
aaa
pop
mov
test
sbb
mov
and
or
inc
push
cld
out
mov
mov
int3
xchg
inc
dec
xchg
stos
add
imul
push
push
dec
mov
or
add
cmpsl
jo
lock
push
jae
in
push
inc
dec
pop
ret
hlt
out
jp
es
aaa
sub
xchg
mov
xchg
ja
mov
cltd
fs
test
xlat
rcll
pop
jle
pop
fimull
sub
pop
dec
mov
sbb
stos
inc
les
cmp
mov
outsb
sub
lds
pop
hlt
outsl
aam
cmp
mov
pop
jecxz
sbb
jb
repnz
fbstp
fcoml
icebp
test
repnz
lahf
jnp
pop
shll
push
sti
rol
xchg
call
push
outsl
aaa
dec
icebp
jbe
ffree
test
cmp
pop
lcall
mov
stos
mov
mov
push
jb
int
sti
mov
xchg
or
jne
shrl
xorl
movsb
aas
outsl
pop
or
push
mov
mov
cld
xchg
icebp
jg
mov
ret
mov
das
cmc
cli
push
sbb
pop
sub
pop
mov
les
lods
lret
xor
cmpsb
cmp
dec
fistps
inc
cs
scas
jns
dec
mov
lret
scas
iret
and
xchg
or
mov
adc
nop
sbb
sarl
xchg
sub
push
ja
mov
cwtl
into
mov
loope,pt
stos
jo
fcompl
mov
mov
adc
push
in
loope
ljmp
inc
lds
push
ljmp
lret
dec
xor
mov
or
loop
pop
and
adc
iret
fistpll
jp
pusha
cltd
cmc
test
fs
lahf
repz
cmc
or
pop
sbb
clc
mov
pop
xchg
frstor
mov
movsl
push
inc
jecxz
xor
aas
aas
ret
cmp
pop
jae
ss
je
mov
push
into
pop
push
leave
orb
dec
mov
jmp
movsl
mov
fimuls
movsb
xor
pop
in
inc
jmp
fbld
pop
xchg
test
xchg
cmp
adc
or
pop
push
mov
jmp
cmp
push
sub
daa
push
jge
fwait
ljmp
aas
cmpb
mov
sti
mov
rcll
data16
popa
xchg
pop
jo
or
add
sti
inc
mov
addr16
jg
jl
jmp
xchg
sbb
fs
xadd
mov
or
pop
sub
hlt
aas
lea
mov
push
xor
nop
xchg
push
cld
idiv
mov
bound
and
ret
scas
sub
jge
cmp
adc
lfs
lds
jecxz
inc
testl
mov
ljmp
push
call
rorb
inc
dec
mov
std
insl
push
mul
out
jo
push
loop
push
nop
push
jbe
push
dec
xchg
aad
pop
xchg
inc
rcll
imul
dec
xorl
pop
leave
mov
loope
cmpb
mov
enter
lock
addr16
cmp
inc
pop
fistpll
dec
pop
cld
add
or
cmpsb
or
or
out
push
fmuls
call
mov
or
xchg
insb
adcl
mov
shlb
mov
jae
fistpll
fldl
repnz
stc
or
cmpsl
rorb
or
push
enter
cs
mov
sub
out
mov
mov
xchg
mulb
enter
ljmp
ljmp
fdivs
stc
jmp
mov
cmp
dec
push
mov
popf
loopne
pop
jmp
loopne
mov
jmp
aad
mov
push
jg
lret
rcrb
cmp
fcoms
mov
jecxz
push
push
test
dec
sub
aaa
sbb
inc
movl
out
cmp
fdivl
shlb
push
sbb
or
and
mov
scas
ss
adcl
data16
push
add
xor
and
mov
dec
adc
rcl
imul
push
dec
faddl
push
cmc
lret
mov
ds
inc
xchg
leave
mov
dec
iret
mov
mov
rolb
sub
jns
xor
push
rorl
mov
out
adc
xchg
and
sbb
jo
insl
and
imul
push
sbb
add
sbb
or
mov
ss
pop
cmp
imul
cli
loop
pop
pop
dec
out
or
fistps
sti
pushw
mov
sahf
pushf
clc
mov
cli
adc
frstor
sub
jl
loop
xor
or
xor
rclb
cs
jbe
lods
in
inc
and
in
xchg
lahf
repnz
ljmp
dec
je
aam
adc
push
mov
mov
jp
sbbb
pop
ljmp
clc
fnstsw
ja
and
mov
mov
lock
fisubrs
test
ficomps
and
inc
mov
mov
pushf
jo
dec
daa
aam
negb
mov
cmp
dec
loopne
mov
iret
sub
lret
test
push
scas
lahf
rcr
push
test
mov
cmp
lcall
xor
out
sbb
pop
pop
mov
xor
xchg
test
or
push
sbb
loope
imul
scas
stos
fcmovb
pop
xor
mov
xchg
fs
sbbb
icebp
xchg
ljmp
sbb
mov
and
inc
dec
push
popw
movsb
dec
and
ds
xor
mov
inc
movsl
test
dec
pop
and
mov
lcall
test
inc
or
out
fwait
add
ljmp
sti
mov
push
push
adcl
fistl
fdivrl
sbb
jae
and
loop
xor
imul
mov
mov
xchg
pop
addr16
out
xchg
test
inc
or
sbb
jne
xchg
aas
add
lret
inc
mov
jns
mov
sub
mov
insb
cwtl
ret
std
jmp
sub
jecxz
sbb
xor
movb
dec
mov
aaa
ljmp
sub
adc
sub
aam
add
hlt
orl
adc
fwait
dec
sbb
jae
or
lahf
je
sub
test
clc
add
inc
jle
cld
popf
cmp
cmpsb
addb
and
mov
stc
sub
test
shll
mov
popa
lods
jnp
cvtpi2ps
push
ds
lea
clc
cmp
jne
mov
xchg
and
add
lea
rcll
mov
xchg
fmuls
cmp
sbb
popf
sti
int3
scas
stos
ja
or
adc
adc
pop
adc
out
out
and
sti
lds
cmp
loope
es
or
adc
lcall
inc
lahf
scas
ret
add
aas
or
in
imul
xor
iret
in
aas
mov
push
jl
pop
cltd
mov
cmc
pop
std
out
scas
and
inc
mov
xor
inc
pop
fwait
mov
out
or
pop
push
and
add
push
jmp
inc
in
sbb
dec
and
xor
add
ja
movsb
pusha
cmpsb
inc
jl
fildl
or
dec
jmp
pushf
loopne
jne
nop
push
ljmp
out
xchg
les
adc
mov
cmp
or
lds
cli
xchg
enter
pushw
mov
iret
xor
jbe
jecxz
push
popf
std
cld
or
enter
sti
shr
xor
add
lock
pop
push
std
ss
out
xchg
stc
lea
loope
fld
add
sahf
stos
push
sub
sub
cmp
fbld
cmp
mov
imul
js
inc
int
push
shlb
or
repnz
pop
popa
push
pop
dec
xor
je
and
repz
insb
add
ds
das
xor
js
push
inc
negl
or
lods
push
out
mov
ljmp
gs
mov
jp
mov
es
push
jp
lret
xor
mov
sub
or
add
mov
xchg
add
addr16
push
movsb
pop
mov
cmp
popa
or
mov
test
div
sti
mov
mov
test
mov
jns
jmp
std
push
repnz
cmp
lret
jns
out
xchg
lahf
enter
ror
jbe
inc
ljmp
and
fstpl
push
fidivrl
int
orl
data16
fsubl
ret
into
aas
and
jg
shll
outsl
fistpl
test
push
int3
std
cmpsl
add
mov
inc
inc
push
mov
cmp
js
testb
in
test
aaa
andl
push
push
stos
add
add
fldcw
cmp
and
int
loop
cld
mov
sub
pop
idiv
sub
inc
xor
fmull
mov
arpl
cli
inc
in
push
fcmovbe
das
cmp
adc
adc
xor
xor
cmp
sub
sti
icebp
mov
andl
inc
fistps
ja
push
xor
mov
mov
pop
sarl
xchg
movsl
add
jnp
jns
jg
popa
inc
inc
cmp
push
addr16
enter
pop
mov
divps
sahf
adc
int
inc
in
mov
pusha
push
mov
ficoml
sub
and
outsb
pop
adc
inc
movsl
xor
orl
mov
add
pop
in
mov
xor
iret
test
cwtl
push
or
inc
mov
shrb
mov
lock
xlat
cmp
fisubrl
push
xor
jo
ds
imul
pop
fmuls
js
add
cltd
xchg
dec
insl
ret
rcll
icebp
arpl
or
xchg
sbb
mov
sub
subl
popa
sub
fnstenv
push
fisttpl
adc
jns
frstor
push
out
dec
sbb
sbb
ss
popa
test
mov
iret
inc
mov
jg
lea
xor
push
testl
fisubrl
and
mov
pop
dec
sub
jne
jae
es
sub
ja
es
fwait
bound
xor
cmpsb
psllw
es
jb
mull
rol
push
push
outsl
arpl
jne
decb
loop
add
xor
or
dec
pushf
and
mov
sub
mov
or
push
sub
ja
sub
lea
and
sbb
in
add
fs
clc
xchg
mov
nop
popf
enter
mov
jnp
push
shr
loope
adc
je
lds
xchg
xor
jp
cs
stos
loopne
pushfw
sbb
jae
lea
xor
mov
les
rcrl
xorl
into
aad
dec
aaa
cwtl
xlat
movsl
push
sbb
lret
push
in
cwtl
iret
pusha
sbbb
adc
cs
data16
push
xlat
test
repnz
mov
and
mov
adc
out
xchg
neg
mov
and
cmpsb
mov
stc
xchg
dec
fiaddl
inc
jbe
das
cmp
push
bnd
cltd
jge
xor
xor
mov
stc
mov
idivb
inc
and
cmpxchg
dec
xchg
adc
pop
int
aas
jmp
mov
outsl
add
add
pop
xchg
add
adc
lods
xor
xchg
arpl
lea
sbb
or
mov
cltd
cmc
or
mov
cmc
ds
cli
sbb
add
xchg
aaa
outsl
push
dec
add
cld
ret
fisubs
xor
mov
into
sbb
aam
les
adc
test
push
lahf
pop
insb
fdivl
jp
push
sub
mov
pop
adc
xchg
cmpsb
leave
movsl
in
xchg
cmp
lahf
cmp
or
das
push
jo
adcl
in
adc
les
cmpsb
lds
pop
cmp
inc
pop
addr16
imul
dec
inc
negb
cld
mov
leave
mov
push
cwtl
jbe
ja
adc
jae
push
sbb
lea
cmp
es
xor
in
es
xlat
sbb
dec
lcall
mov
cwtl
dec
ds
out
mov
cmp
sahf
stos
dec
inc
test
fs
sbb
test
cmp
pop
inc
sub
add
outsb
push
outsl
push
push
mov
js
out
mov
pop
push
sub
push
fimuls
pop
mov
ret
dec
xchg
daa
pop
adc
call
jl
test
rol
jb
mov
out
push
dec
xchg
push
das
mov
aas
jae
cmp
call
out
and
cmp
rol
mov
enter
or
aam
dec
dec
dec
inc
ja
rcrl
dec
dec
adc
mov
cs
pop
dec
mov
ss
mov
sub
test
lods
pop
xor
mov
icebp
jecxz
sub
jecxz
cwtl
cmp
in
test
jge
jp
imul
popa
rolb
cmp
mov
cmp
aaa
jbe
inc
aaa
push
jl
insl
sub
xor
stos
rcrl
push
call
adc
push
or
jg
add
lahf
cwtl
adc
ss
out
cmpsb
out
fiaddl
push
out
and
popf
nop
fidivrl
push
mov
jae
cmpsb
mov
xlat
add
xchg
mov
mov
imul
lds
jb
push
dec
xchg
mov
mov
sbb
jno
pop
sub
in
js
mov
jo
and
enter
mov
movsl
sub
shr
test
inc
lret
jecxz
pop
rol
nop
repnz
dec
lods
xor
scas
lods
int3
cmp
rorl
push
xor
sbb
mov
add
outsl
jbe
pop
les
push
test
je
or
arpl
add
in
lds
in
jge
lahf
sahf
lea
mov
into
xchg
cmp
xor
dec
outsl
mov
fisttpl
popf
in
inc
iret
cmp
arpl
mov
dec
ret
pop
cmc
cmpb
addr16
push
arpl
dec
adc
inc
push
dec
lret
outsl
sub
pop
test
popa
iret
mov
and
notb
mov
mov
hlt
mov
repz
cmc
aam
dec
jbe
rorl
shrl
rclb
add
push
sub
adc
fldl
pop
aad
push
ss
adc
arpl
dec
mov
cli
and
loopne
push
and
xlat
fbld
fdivrl
push
call
xor
jg
xor
lock
movsl
sbb
in
int
out
pop
push
push
xor
mov
adc
jg
pop
int3
mov
mov
sub
dec
nop/reserved
push
mov
cwtl
outsb
or
repnz
repz
imull
push
addl
mov
pop
movsb
sub
in
xchg
pop
popf
fisttps
and
imul
and
adc
dec
pop
pusha
icebp
nop
imul
fcomps
xor
ret
adc
jb
pop
cmp
sub
push
jo
idivl
push
clc
addr16
loop
shl
mov
xor
mov
arpl
adc
sbb
push
sub
push
mov
mov
lcall
arpl
add
or
out
ss
out
ja
mov
mov
jns
in
lods
add
jns
pop
iret
clc
enter
inc
xchg
repz
in
mov
dec
lret
aaa
jge
xchg
jge
and
inc
aad
add
jne
sub
stos
cmp
dec
cmp
jno
mov
enter
or
xchg
aas
or
in
xchg
mov
lock
filds
insb
stos
lret
xor
cmpsb
jl
repnz
cmp
xor
inc
inc
mov
pop
jmp
iret
fnsetpm(287
cmp
cld
dec
xchg
mov
lods
test
popa
mov
sub
xchg
mov
sbb
int3
or
and
mov
dec
cwtl
xchg
jp
dec
mov
xor
enter
add
jns
ljmp
or
jno
sub
imul
mov
cmp
pop
aad
loop
push
mov
xor
loop
enter
sbb
or
mov
sbb
dec
lods
sub
imul
mov
mov
mov
test
cwtl
push
inc
nop
mov
subl
sbb
inc
cmp
dec
push
xchg
push
sti
fwait
les
sahf
gs
sti
mov
in
mov
mov
push
dec
rorb
sub
push
xchg
mov
xorl
mov
or
movsl
push
mov
or
xor
push
mov
fmuls
pusha
and
stos
out
adc
ficoml
and
push
scas
pop
call
pop
in
ud1
add
add
jbe
mov
fsubr
clc
in
mov
out
jmp
lea
fwait
mov
push
loop
insb
cwtl
icebp
cmpsl
mov
inc
xor
xchg
cmp
mov
sub
and
mov
xor
dec
cmp
mov
jg
jnp
dec
out
pop
dec
outsl
lea
das
cmp
xlat
int3
sub
sbb
clc
ret
insl
cmc
int3
sub
es
push
lea
pop
jle
add
mov
das
lret
mov
enter
sbb
in
add
test
adc
cltd
mov
sub
cwtl
outsl
sarb
ffreep
stos
pop
notl
jle
add
xor
cmc
and
aas
mov
push
pop
mov
ds
in
cmc
lcall
jmp
mov
xchg
push
xchg
mov
push
mov
nop
push
je
mov
fs
and
js
pop
stc
mov
mov
xchg
push
mov
in
scas
sbb
sahf
add
pushf
repnz
imul
or
xor
add
outsb
sbb
and
aaa
pop
dec
jno
mov
dec
ds
mov
movsb
movsl
mov
je
add
roll
sbb
repz
push
test
ss
xlat
push
or
repz
xchg
add
mov
popf
sahf
cld
mov
sbbl
ret
fidivrl
xor
cmp
inc
mov
mov
shlb
pop
out
aas
nop
push
test
jns
scas
fisubs
push
xchg
lret
int
pop
cwtl
pop
mov
mull
fs
test
push
fs
mov
sbb
outsl
das
sarb
loopne
loope
mov
xlat
or
and
in
pop
xchg
or
push
and
mov
mov
sub
inc
inc
mov
dec
inc
mov
cmp
insl
jb
cmpsl
leave
mov
push
pusha
and
jno
enter
loopne
sahf
mov
mov
in
push
pop
xchg
lods
pop
lea
and
mov
push
out
sahf
dec
inc
das
cmp
dec
mov
mov
aad
lods
pusha
jnp
cmp
and
std
cwtl
sbb
pop
scas
mov
sub
mov
je
cmp
adcl
xchg
push
nop
std
mov
fisttps
and
hlt
in
loope
dec
push
test
mov
cld
movsb
pop
dec
out
sub
mov
fldenv
movsl
adc
ljmp
aas
aam
lret
mov
daa
cmpl
repz
clc
aad
leave
or
popa
inc
inc
and
sbbl
lods
fildll
xchg
xchg
inc
or
sub
sub
jmp
pop
cmp
fwait
mov
dec
in
adc
fcmovnbe
js
adc
push
add
fldl
in
dec
fs
mov
add
jae
ds
cmpsb
push
add
mov
ja
mov
mov
sbb
pop
mov
pop
mov
mov
adc
sub
mov
ret
pop
iret
adc
inc
movsb
sbb
sub
dec
xchg
and
or
call
add
fildl
nop
rolb
push
jg
push
pop
jbe
cli
movsl
add
loop
popf
movsb
call
jo
mov
mov
pop
iret
jb
insb
sub
mov
popf
ret
add
pusha
jns
mov
lock
xchg
movsb
push
xchg
or
inc
ss
mov
mov
sub
inc
xchg
fwait
jmp
push
inc
ds
aas
int3
cwtl
sbb
out
jae
xchg
cmpsl
push
out
push
mov
jnp
adc
fwait
mov
lods
add
xlat
mov
mov
pop
and
hlt
xor
xchg
shl
mov
iret
sub
out
ja
inc
loopne
inc
push
fcoml
gs
adc
mov
and
push
les
imul
mov
mov
or
lret
jmp
and
push
jne
jbe
aas
shl
push
lea
dec
lret
push
push
cmpl
jle
push
xchg
rcll
test
jb
notl
sbb
pop
lret
sarb
icebp
in
orl
dec
dec
lret
cmpsb
daa
in
inc
sub
clc
pop
push
sbb
sub
mov
mov
or
filds
dec
insb
mov
pop
xchg
insb
sar
in
cltd
loope
xchg
cmp
sti
cld
xor
outsl
push
aas
ds
movb
enter
fcomip
es
mov
mov
push
dec
ret
jne
pop
push
filds
push
pop
sbb
inc
push
push
inc
aad
inc
xorl
cmp
adc
es
call
jnp
popl
in
xchg
xor
push
sub
lods
inc
xor
outsb
bound
cmp
dec
mov
rcrb
bound
cmc
inc
mov
adc
add
popf
mov
outsb
popa
mov
add
sbb
pop
jb
fadds
sbb
push
sub
sub
sub
imul
scas
adc
sub
dec
sbb
inc
or
mov
daa
es
out
push
imul
cmp
mov
adc
add
adc
jnp
inc
inc
inc
xchg
sub
cmp
bound
jge
jno
dec
jae
mov
out
int3
xor
mov
sbb
add
inc
jge
outsb
aaa
lods
into
fwait
mov
into
addr16
xor
pusha
mov
mov
cmp
sub
sbb
std
addr16
dec
add
pop
loope
ljmp
clc
pop
push
dec
pop
xorb
stc
add
in
shl
cmc
dec
push
je
jl
lods
divb
push
adc
lcall
jne
add
popf
push
aad
cli
test
lret
mov
sub
cmp
cli
roll
test
shl
xchg
pop
add
int3
imul
movsl
pusha
xlat
call
mov
push
jp
lea
divb
jae
sbb
push
fbld
xchg
cli
jmp
jns
jnp
jg
scas
dec
xor
rcll
lds
push
test
test
iret
test
jne
fucomp
enter
pop
pop
in
jb
jg
xchg
xchg
mov
mov
pop
daa
aad
inc
add
jbe
dec
push
push
repnz
or
sbb
in
dec
in
test
jno
push
add
jg
out
lods
adcl
js
jno
adc
movsl
dec
xchg
mov
dec
cmp
insb
dec
push
imul
fxch
xor
cwtl
cmp
mov
add
testl
and
jmp
jo
mov
push
jle
mov
loopne
cli
lret
mov
sub
lea
cmp
out
xchg
lods
fs
out
repnz
jecxz
in
testl
icebp
dec
or
inc
and
sub
fwait
xorb
inc
add
in
jae
negl
inc
jnp
das
addl
jnp
insl
xchg
je
jge
push
dec
jne
movsl
in
add
negl
shl
mov
fprem
orl
xchg
pop
jmp
adc
das
repnz
icebp
fcmovu
push
bound
loop
xchg
and
xor
jle
aas
divl
sub
clc
sti
or
mov
pop
cld
lds
or
mov
pop
push
mov
out
fsubp
cmp
outsb
adc
aad
jle
out
jae
add
loope
lods
in
int3
int3
sub
imulb
or
push
sbb
xor
das
loopne
divl
stos
mov
and
loopne
xchg
decb
icebp
mov
popa
add
mov
mov
pop
insb
sub
sbb
clc
hlt
icebp
or
ficoml
or
fisubrl
clc
jmp
mov
mov
sbb
push
add
and
cld
mov
adc
cltd
mov
aam
sahf
xor
sub
sbb
adc
stos
push
enter
rcrb
jmp
xchg
cmp
lret
push
lods
test
pop
loope
pop
inc
fdivrs
mov
jo
fldcw
jle
mov
jl
cwtl
pop
cmp
jo
dec
or
orl
clc
and
mov
std
mov
push
pop
xchg
xor
dec
jne
icebp
dec
into
stos
and
cmpsl
push
mov
pop
sarb
push
pop
fldcw
cld
nop
pop
sub
mov
test
fsubs
pop
rcrb
pop
cld
sbb
mov
sub
xchg
cmp
sub
adc
mov
adc
loope
sbb
dec
test
pop
jle
jle
ret
das
mov
data16
repnz
sub
jo
lock
mov
jp
pushf
push
sbb
jo
mov
mov
jb
adc
xor
orl
mov
mov
xor
call
add
fstps
jmp
outsl
inc
ja
movsb
imul
in
mov
or
xlat
daa
cmp
mov
pop
mov
fs
inc
sbbb
fnop
cmp
jbe
mov
push
ja
sbb
loope
mov
outsb
inc
or
roll
mov
dec
cmp
aas
fidivs
mov
fs
mov
mov
scas
lret
push
mov
pop
loop
push
sbbb
je
movsl
pusha
adcb
fcmovnb
mov
pop
xor
mov
mov
out
mov
sbb
ret
rorl
mov
out
aam
jnp
mov
mov
in
imul
cltd
mov
ret
shll
out
mov
stc
add
bound
cli
cmp
add
aaa
out
dec
lods
push
scas
mov
lods
sahf
test
add
xor
xor
pop
sbb
sub
xor
outsb
push
mov
out
sub
xorb
rorl
aaa
mov
insb
leave
lds
dec
imul
or
xor
adc
mul
stc
xor
push
pop
pushf
stc
adc
adc
jns
xor
iret
xchg
cmpb
test
pop
sub
sub
shrb
and
iret
test
mov
repnz
fwait
insb
adcl
fisubl
jne
mulb
inc
inc
xor
clc
and
iret
movl
dec
shufps
add
orb
and
subl
out
add
add
cmp
mov
roll
fdivl
mov
and
dec
int3
mov
rcll
sahf
popa
jne
jno
iret
movb
orb
clc
addl
or
cmp
nop
cmp
in
dec
jmp
mov
popw
pop
jl
mov
neg
push
sbb
cmp
push
mov
sub
call
push
push
push
call
mov
push
call
mov
xor
sub
add
cmp
inc
and
xor
xor
add
xor
cmp
sub
pop
call
inc
cmp
jne
and
cmp
and
mov
add
call
xor
xor
mov
add
and
add
xor
call
call
xor
mov
xor
and
sub
xor
not
xor
cmp
neg
add
inc
push
call
nop
cmp
cmp
sub
mov
sub
xor
mov
and
call
pusha
add
mov
xor
lea
mov
add
and
add
mov
mov
lea
and
xor
sub
and
call
sub
cmp
xor
add
mov
add
cmp
mov
add
xor
sub
mov
mov
sub
xor
inc
cmp
dec
sub
lea
cmp
add
mov
add
popa
cmp
jne
call
mov
add
mov
mov
lea
pusha
nop
add
add
add
add
xor
xor
cmp
add
sub
sub
sub
push
push
call
mov
xor
sub
dec
lea
xor
xor
xor
add
mov
or
sub
xor
popa
mov
add
add
and
pusha
xor
and
lea
not
sub
add
mov
or
mov
nop
and
cmp
popa
add
push
push
push
push
call
pusha
mov
mov
mov
cmp
cmp
cmp
xor
mov
lea
add
xor
xor
mov
add
or
cmp
and
push
push
call
sub
sub
xor
or
push
call
lea
xor
or
mov
add
cmp
xor
mov
popa
test
je
mov
mov
mov
lods
test
je
mov
stos
jmp
mov
mov
mov
rep
mov
add
jmp
push
mov
sub
call
pop
lea
push
add
mov
mov
mov
push
push
call
mov
mov
pop
push
mov
add
rep
lea
movzwl
pushl
push
push
call
pushl
pushl
call
push
push
mov
and
push
mov
add
push
jmp
mov
sub
and
xor
cmp
cmp
rdtsc
cmp
lea
add
cmp
sub
lea
mov
mov
lea
nop
nop
nop
mov
add
add
mov
sub
add
and
add
xor
neg
xor
mov
inc
or
mov
add
lea
sub
push
mov
pusha
mov
add
push
mov
mov
test
je
test
jne
mov
mov
add
add
mov
add
cmpb
jne
inc
jmp
push
call
mov
lods
test
je
bt
jae
and
jmp
add
add
push
push
push
call
pop
stos
jmp
pop
add
jmp
pop
popa
leave
ret
and
dec
cmp
mov
sub
cmp
xor
sub
sub
nop
and
sub
and
push
mov
pusha
mov
mov
push
mov
add
mov
mov
add
rep
pop
add
dec
jne
popa
leave
ret
cmp
cmp
xor
cmp
add
and
xor
not
add
sub
mov
mov
mov
cmp
mov
mov
neg
add
and
nop
nop
lea
and
mov
sub
add
push
mov
pusha
mov
mov
add
push
call
push
push
push
call
push
push
push
push
call
test
je
add
cmp
jl
popa
leave
ret
sub
sub
mov
cmp
xor
xor
add
mov
neg
add
or
pusha
mov
xor
mov
std
stos
dec
jns
cld
xor
mov
xor
divb
xchg
xor
add
add
add
mov
movzbl
mov
mov
mov
inc
cmp
jne
popa
ret
sub
sub
lea
lea
and
lea
sub
mov
mov
cmp
not
cmp
mov
mov
add
lea
sub
sub
sub
push
mov
pusha
mov
and
push
mov
add
pop
mov
movzbl
mov
mov
mov
mov
add
mov
popa
leave
ret
sub
and
xor
cmp
xor
mov
cmp
mov
mov
sub
sub
add
push
mov
mov
and
xor
push
call
leave
ret
mov
mov
sub
inc
add
cmp
xor
cmp
mov
mov
cmp
sub
sub
cmp
and
add
and
add
push
mov
pusha
movb
mov
mov
mov
lods
stos
test
je
loop
sub
neg
mov
call
popa
leave
ret
add
lea
add
and
xor
mov
nop
nop
mov
mov
add
rdtsc
cmp
mov
xor
sub
xor
neg
and
add
cmp
sub
xor
mov
cmp
lea
neg
mov
add
xor
lea
add
push
call
mov
mov
mov
lods
push
call
stos
loop
ret
mov
mov
add
cmp
inc
lea
and
cmp
add
mov
and
add
add
and
call
lea
xor
cmp
cmp
and
mov
lea
mov
add
sub
inc
rdtsc
or
push
pop
mov
ret
mov
add
dec
cmp
add
and
mov
mov
xor
cmp
xor
not
lea
sub
add
sub
xor
mov
add
sub
call
add
xor
and
sub
sub
dec
and
sub
mov
mov
add
cmp
not
mov
xor
cmp
push
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jmp
mov
int
int
int
push
call
int
loop
test
test
xor
push
push
pushl
mov
test
xor
pop
pop
pop
mov
jmp
call
xor
push
push
pushl
mov
test
xor
pop
pop
pop
mov
jmp
call
nop
xchg
inc
ror
xor
imul
xor
push
push
pushl
mov
imul
xor
pop
pop
pop
mov
jmp
call
mov
nop
xchg
inc
ror
xor
test
mov
mov
test
xchg
inc
dec
xor
test
mov
mov
test
xchg
inc
ror
test
imul
mov
mov
test
xchg
sub
ror
test
test
xor
push
push
pushl
mov
test
xor
pop
pop
pop
mov
jmp
call
mov
nop
xchg
sub
dec
xor
test
xor
push
push
pushl
mov
test
xor
pop
pop
pop
mov
jmp
call
xor
push
push
pushl
mov
test
xor
pop
pop
pop
mov
jmp
call
nop
xchg
inc
dec
xor
imul
xor
push
push
pushl
mov
imul
xor
pop
pop
pop
mov
jmp
call
mov
nop
xchg
inc
ror
xor
fwait
mov
mov
test
xchg
inc
dec
xor
test
nop
xchg
inc
ror
xor
imul
mov
mov
nop
xchg
inc
ror
test
imul
inc
inc
test
xchg
sub
dec
test
test
inc
mov
test
xchg
sub
ror
xor
imul
mov
mov
nop
xchg
sub
ror
xor
imul
mov
mov
nop
xchg
inc
dec
xor
dec
mov
mov
nop
xchg
inc
ror
test
test
xor
push
push
pushl
mov
test
xor
pop
pop
pop
mov
jmp
call
mov
nop
xchg
sub
ror
test
imul
inc
inc
test
xchg
sub
test
xor
imul
mov
mov
fwait
xchg
sub
ror
xor
test
mov
mov
nop
xchg
inc
ror
xor
imul
mov
mov
nop
xchg
inc
test
test
imul
xor
push
push
pushl
mov
imul
xor
pop
pop
pop
mov
jmp
call
mov
nop
xchg
sub
ror
test
test
inc
mov
test
xchg
sub
ror
test
imul
mov
mov
test
xchg
sub
test
xor
imul
mov
mov
nop
xchg
inc
dec
xor
test
mov
mov
nop
xchg
inc
ror
xor
imul
mov
mov
ret
xor
mov
inc
xor
inc
cmp
jne
ret
xor
mov
inc
xor
inc
cmp
jne
ret
and
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
inc
add
mov
add
mov
add
inc
add
add
add
inc
add
mov
add
cmpsb
mov
add
add
mov
add
add
add
jo
add
jo
add
fs
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
inc
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
loopne
add
out
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
jb
add
test
add
add
add
loopne
add
out
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
jb
add
test
add
add
add
add
inc
jo
outsb
fs
outsb
jne
add
add
fs
imul
add
jne
insb
push
arpl
add
outsb
fs
imul
inc
add
add
je
outsb
jne
add
inc
gs
gs
popa
addr16
outsl
jae
add
dec
outsb
jbe
insb
imul
je
add
add
inc
push
jo
jb
add
add
dec
outsl
popa
fs
jne
jae
jb
add
add
jae
push
jne
je
gs
popa
add
add
jb
outsb
push
outsl
inc
insb
imul
add
je
popa
jb
je
outsl
jae
add
push
jb
arpl
outsl
jo
jo
outsb
jne
js
add
mov
add
add
add
jo
add
test
add
test
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
and
add
cmp
add
dec
mov
add
ds
add
add
add
jo
add
test
add
test
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
and
add
cmp
add
dec
mov
add
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
insl
jo
jb
inc
imul
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
imul
push
jo
arpl
add
add
je
js
je
outsl
fs
jb
arpl
jae
add
add
je
imul
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jb
arpl
fs
jae
add
add
inc
gs
imul
je
add
add
fs
imul
add
add
push
gs
jb
push
inc
add
add
gs
add
push
outsb
insl
popa
jo
imul
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
jb
popa
je
add
add
insb
jae
jb
insl
jo
add
add
insb
jae
jb
outsb
inc
add
mov
add
mov
mov
add
out
add
add
add
mov
add
mov
mov
add
out
add
add
add
add
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
outsb
imul
add
inc
gs
gs
dec
bound
arpl
add
inc
gs
gs
arpl
popa
jo
add
add
je
imul
outsl
jb
add
add
je
gs
inc
outsl
insb
outsl
jb
add
add
nop
mov
add
add
add
adc
add
push
add
sbbb
add
and
add
nop
mov
add
add
add
add
add
cmp
add
nop
mov
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
nop
mov
add
add
add
add
add
jl
add
nop
rolb
jmp
add
add
add
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
insl
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
and
arpl
jae
data16
inc
jne
insb
inc
outsl
jo
and
jbe
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
ds
jo
outsb
fs
arpl
or
jo
outsb
fs
je
jae
gs
bound
or
jae
insl
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
jo
outsl
arpl
jae
jb
jb
push
je
jb
cmp
ds
gs
outsb
fs
je
jae
gs
bound
or
gs
outsb
fs
arpl
or
jae
gs
bound
nop
nop
nop
mov
add
mov
add
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
or
add
or
add
add
add
add
add
add
add
sbb
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
hlt
add
add
add
add
xor
cmp
xor
xor
inc
add
add
js
sub
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
nop
nop
inc
add
outsb
add
jb
imul
dec
add
jae
je
and
push
add
outsl
add
add
jae
and
data16
jb
and
push
add
outsb
add
add
add
add
add
jbe
imul
jae
add
push
and
add
outsl
add
add
je
dec
add
insl
add
add
nop
nop
dec
add
arpl
jb
outsl
add
outsl
add
je
scas
add
add
imul
outsl
add
jae
scas
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
nop
nop
addb
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
nop
nop
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
nop
nop
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
pop
add
jo
xor
pop
add
je
insl
add
add
add
xor
cmp
xor
xor
sub
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jbe
arpl
push
add
add
js
add
add
push
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
jae
jbe
arpl
push
add
add
js
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
