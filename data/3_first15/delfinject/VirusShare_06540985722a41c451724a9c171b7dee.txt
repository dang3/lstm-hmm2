pop
data16
incl
add
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
jmp
jae
add
jb
lea
sub
add
push
jg
pushl
add
dec
outsb
je
addr16
and
rcrb
push
jle
add
jns
insb
daa
push
outsl
jb
add
sti
xor
incl
imul
add
or
push
je
sub
jb
std
or
push
imul
push
imul
cs
push
add
add
imul
lock
hlt
clc
jg
sub
in
xor
push
mov
push
dec
bound
arpl
fidivl
pop
sbb
and
aas
mov
cmp
or
jb
popa
arpl
outsb
xchg
inc
pop
add
add
and
clc
jmp
adc
in
dec
imul
outsl
push
jns
xchg
pop
adc
add
loope
mov
or
jns
in
push
out
pop
in
pop
cld
pop
pop
xor
fs
clc
jge
jg
jle
or
xor
mov
and
in
or
das
andps
xor
mov
dec
aas
insb
inc
enter
inc
cmp
and
xor
sub
or
enter
adc
enter
or
enter
fs
inc
push
cmp
cld
xchg
jl
or
fs
je
hlt
enter
mov
mov
test
aas
call
xor
and
fcoms
les
or
call
sub
je
movzwl
out
mull
mov
aaa
inc
pop
ret
data16
jae
enter
xor
and
dec
in
flds
push
add
add
ffreep
pop
leave
mov
mov
ret
lea
mov
sti
decl
cmp
jne
mov
mov
push
nop
mov
mov
ret
scas
negl
idiv
mov
mov
xchg
aam
rclb
mov
or
sti
mov
mov
adc
add
or
or
cmp
push
push
push
divb
mov
mov
mov
mov
rcrb
mov
out
jnp
xchg
push
or
push
or
ret
and
inc
lea
or
add
jmp
add
pop
jne
aaa
sub
shl
mov
cmp
jne
mov
sub
cmp
cld
addr16
pop
pop
push
fidivs
push
mov
mov
xchg
cmp
jb
mov
add
call
ja
hlt
mov
clc
and
mov
aaa
or
mov
push
sti
xchg
ret
jmp
pop
mov
add
pop
sbb
jg
repz
orb
cli
sbb
sub
mov
lock
aam
xchg
jo
jmp
sbb
scas
sbb
sti
cld
orb
jne
sbb
nop
es
mov
cmp
fidivrs
mov
cmp
out
xchg
add
add
and
push
jg
or
jg
mov
mov
test
je
mov
mov
push
lock
mov
push
dec
lods
lock
insb
sti
sub
push
mov
sub
mov
push
lahf
sbb
rcr
fcoms
jne
icebp
push
adc
popf
cmpl
in
loop
inc
or
and
push
loopne
mov
or
mov
faddl
lds
pop
push
cmp
jmp
in
daa
out
ja
mov
add
out
in
cmc
cmp
ja
cmp
jnp
sub
sbb
lods
jecxz
rcr
movl
filds
mov
ljmp
outsl
jg
sbb
push
mov
int3
pop
popa
sbb
pop
push
adc
inc
xor
hlt
outsl
mov
mov
and
decb
jae
sbb
loop
mov
xchg
mov
or
sub
mov
call
cmp
add
and
mov
cmp
or
pop
cmp
scas
jne
ja
out
sti
push
push
andb
ss
mov
push
jb
inc
add
xor
out
cmp
add
xchg
out
sub
or
out
daa
cmp
sbb
jae
mov
cmp
jae
xchg
inc
sar
sbb
inc
addl
xchg
add
dec
jg
jmp
clc
mov
outsl
xor
aas
or
add
bnd
xor
insl
cmpsb
cmpsb
inc
idivl
inc
xlat
mov
pop
or
cmpsb
ja
je
mov
inc
ds
fwait
push
xor
push
pop
add
jle
mov
jne
cmpl
movsl
and
mov
mov
push
nop
insl
jo
jp
pop
mov
cli
jge
jecxz
inc
and
cmp
xor
adcb
mov
loopne
push
sub
add
mov
cmp
xor
lea
xor
sub
and
fcoms
or
and
sbb
aas
lea
test
xchg
jmp
cmp
icebp
int
aaa
cmc
jne
nop
cmp
fisttpl
scas
xlat
js
inc
cmpl
sub
push
mov
xchg
xchg
int3
mov
ret
incb
mov
sti
cli
mov
loope
adc
fidivs
mov
ret
add
rorl
pushf
push
lock
jno
pop
pop
test
je
imul
push
cmpsb
add
push
adc
adc
ja
jmp
push
addb
pop
sbb
add
aas
cli
shr
push
push
pushl
mov
push
ja
add
jge
and
sub
jbe
in
adc
push
and
cmpl
hlt
das
mov
xor
jg
hlt
inc
cmp
pusha
and
jnp
add
lock
les
pop
pop
pop
pop
adc
jge
stos
inc
sub
sub
in
mul
out
loopne
pop
xchg
push
xchg
test
rolb
andb
decb
iret
add
sub
sbb
adc
dec
addl
popa
or
add
outsb
imul
push
jo
sub
sbb
enter
int3
fistpl
or
ds
jne
add
adc
pop
js
jb
or
add
pop
test
jns
add
sar
test
jnp
hlt
jmp
sub
hlt
mov
loop
test
sbbl
cmpl
fld
jb
add
or
push
loopne
push
mov
cmp
mov
incl
sbb
add
sbb
cmp
jl
movl
aaa
ret
mov
jb
insb
lahf
daa
add
or
sti
mov
add
mov
mov
and
mov
sub
das
mov
cld
sbb
adc
stos
cmpsb
lcall
or
push
or
push
rolb
xchg
xchg
or
ret
decb
fsubp
mov
xor
adc
je
push
jae
push
add
cmpsl
sub
enter
ret
aas
cwtl
arpl
sarl
add
dec
jb
sub
cmp
cmp
jo
cltd
push
testb
test
cli
mov
xor
add
mov
clc
add
and
mov
jne
mov
bound
and
mov
sbb
xor
fisttpll
xchg
jno
sbbb
lock
xchg
into
jge
pop
shrl
cld
jg
clc
sub
sub
cmp
jge
out
cmp
push
mov
or
out
in
sbb
adc
xlat
cld
lea
and
xchg
fnstsw
in
mov
aad
lds
mov
or
in
mov
xlat
jae
jnp
or
pop
pop
rorl
iret
mov
jmp
mov
add
sub
jo
pop
cmp
mov
adc
cmp
cli
xor
adc
mov
jge
mov
sbb
cmp
inc
adc
sbb
pop
add
sub
cmp
or
testl
pop
mov
push
or
insl
sbb
inc
adc
sbb
xor
mov
into
mov
pop
or
sbb
cmpsl
sbb
inc
add
lock
mov
inc
hlt
inc
stos
push
or
mov
mov
cwtl
or
push
push
mov
cmp
jbe
cld
shll
sub
add
adc
lock
sub
das
icebp
sbb
adc
or
sti
cwtl
subl
add
sbb
mov
std
adc
out
push
loope
or
fwait
mov
cmp
les
cmovo
popa
pop
pop
dec
fcoms
inc
stos
pop
int3
rol
push
pop
or
mov
xor
mov
sar
cmp
movsl
push
adc
or
jne
jmp
xor
mov
add
sbb
sbb
pop
push
jle
mov
lods
jg,pn
pop
mov
pop
je
sbb
arpl
or
out
jne,pt
sbb
int3
pop
pandn
add
inc
cmp
movsb
sub
cmpl
sub
inc
sbb
gs
xor
dec
or
sub
xor
lret
mov
mov
push
jae
cmpsb
roll
xchg
leave
jmp
repnz
jne
lea
inc
leave
js
pop
xor
fwait
pop
xlat
test
out
inc
sub
or
je
sti
clc
stos
jle
inc
mov
jbe
iret
xor
push
push
mov
push
cld
cli
xchg
add
or
sti
mov
mov
cmpsb
test
jg
mov
pop
or
jle
mov
pop
inc
scas
shlb
push
adc
js
mov
jmp
mov
jge
clc
jmp
cmp
mov
add
lcall
and
mov
jbe
jmp
pop
daa
js
mov
sbb
dec
movzwl
lea
sbb
enter
adc
arpl
and
xor
pop
pop
push
push
sbb
push
jb
sub
loop
push
stos
out
mov
and
jb
pop
push
jbe
sub
mov
test
jne
test
ja
decl
push
ret
and
add
push
add
loopne
push
or
divl
dec
addl
push
mov
cmp
add
roll
pop
in
xchg
clc
cmp
stos
fadds
and
add
sbb
dec
lock
loopne
mov
ret
sbb
cli
add
jmp
or
or
orl
jmp
mov
cmpl
in
jmp
push
clc
push
adc
pop
fnsave
sbbb
shll
and
mov
mov
out
movb
pop
jle
add
shrl
mov
ret
jl
mov
jge
push
jecxz
add
cmp
icebp
sbb
stc
mov
xlat
sub
iret
ret
sbb
cmp
adc
subl
jge
jnp
sub
mov
mov
add
cmpsb
mov
rcrl
fnstsw
pop
and
sub
data16
pop
sbb
xor
pop
cmpb
insl
push
and
iret
adc
dec
outsl
fnstenv
add
or
and
dec
or
mov
nop
test
add
xlat
js
sub
mov
js
movsb
push
pop
mov
loop
fsubl
jmp
push
or
mov
or
mov
clc
add
cmpsl
jmp
movsb
mov
test
and
fdivrs
or
clc
xchg
in
sub
inc
das
sbb
xor
inc
mov
lret
cmc
adc
pop
adc
adc
jle
pusha
test
mov
jmp
insl
cli
ret
adc
mov
hlt
test
xor
cmp
jge
aaa
inc
adc
lret
xchg
dec
sbb
mov
add
adc
inc
lock
cmpsb
test
jle
call
or
loopne
sbb
add
pop
push
imul
mov
test
je
das
sbb
enter
or
sbb
pop
xor
das
jne
sub
bound
sarb
cwtl
mov
out
mov
lahf
mov
add
dec
sbb
push
fcmovb
or
rol
add
pushf
dec
insb
pop
inc
sbb
sbb
inc
or
cmpsl
clc
push
out
mov
sub
push
sub
dec
popf
jecxz
cmp
in
loope
dec
sbb
out
in
sub
push
jo
mov
mov
sub
aas
and
adc
lods
adcb
xor
push
push
push
xor
or
jle
pop
jne
xor
pop
orb
mov
jge
sbb
xchg
test
nop
lds
dec
rcrl
push
je
jae
sbb
ret
sub
inc
paddd
pop
cmc
jl
cmp
jg
add
mov
inc
rep
jmp
mov
and
in
mov
jmp
mov
push
ret
mov
adc
cmp
mov
call
daa
pusha
add
jo
and
pop
das
js
mov
stos
cmp
ja
je
mov
js
rep
filds
jae
test
je
cld
lea
xor
std
xor
cmp
jnp
jge,pt
mov
fwait
jge
jmp
mov
hlt
add
mov
cmpb
pop
cmpb
add
out
in
mov
jmp
dec
fcmovnu
inc
cmp
xor
push
shrb
roll
ljmp
call
mov
ja
sub
adc
fisttps
divb
imul
push
outsb
cmp
cmp
addr16
pop
dec
mov
mov
inc
inc
adc
scas
inc
dec
mov
pop
into
test
shll
aad
lret
lret
xor
icebp
into
nop
lea
repnz
arpl
adcl
lock
popf
fdivl
enter
or
or
aas
push
add
call
test
jne
push
push
std
or
ja
fsubrs
mov
rcll
ljmp
orb
add
jmp
cmp
mov
jg
push
pusha
ja
add
or
mov
nop
inc
fadds
push
mov
add
cs
jb
cmp
loopne
in
divl
sub
mov
fnclex
fldcw
std
arpl
cmp
pop
psubusw
fnstsw
sahf
jp
fstp
fldz
data16
std
jle
pop
sub
fists
pop
pop
in
or
jg
aam
fwait
orw
insb
sub
dec
jg
fldcw
pop
inc
movsl
sub
or
push
popf
adc
jmp
sub
mov
jae
mov
stos
dec
sub
mov
shrl
sbb
pop
fstpl
jb
je
cmp
and
jno
jp
jns
jb
jnp
mov
sbb
sub
out
pop
fisubs
cmp
mov
outsb
out
xlat
ja
and
adc
jne
call
imul
xor
adc
lahf
sub
std
jmp
cmp
mov
lcall
inc
pop
mov
mov
xor
mov
inc
add
jb
cmp
ja
push
jge
mov
mov
jecxz
add
or
testl
leave
mov
inc
xchg
pop
testl
lret
mov
inc
inc
and
jle
scas
mov
inc
jmp
lods
push
xchg
inc
inc
lds
ret
ljmp
mov
mov
cmp
jne
dec
je
mov
mov
sbb
stos
call
or
loop
push
adc
loop
je
mov
cmp
out
pcmpeqw
push
adc
add
adc
jge
add
add
int
cmp
cmp
jne
shr
and
dec
cmp
sbb
call
mov
shr
or
pop
push
inc
pop
jle
add
or
movsl
stc
mov
out
mov
cmp
jne
dec
dec
shll
dec
dec
sbb
mov
jecxz
cmpb
es
fdivrp
ret
rolb
dec
das
or
outsl
jo
pop
mov
in
fwait
inc
js
add
adc
add
aas
aad
mov
fcmovnu
add
mov
neg
xor
and
jmp
jge
call
mov
ficompl
js
add
and
sbb
pop
mov
add
insl
xor
insb
adc
pop
jae
mov
rorb
test
sbb
lea
mov
dec
adc
call
cmp
jns
insl
incl
fmuls
por
jnp
push
and
lahf
fwait
leave
fisttpl
xchg
lea
push
mov
jbe
jmp
sbb
into
mov
shlb
add
and
adc
mov
shl
or
in
rcr
or
stos
adc
pop
out
xor
imul
mov
adc
pop
jne
in
pop
es
lock
sub
mov
jg
or
push
inc
cmp
clc
mov
or
sub
das
aas
lret
je
and
je
pop
je
xor
fistl
jbe
and
test
jmp
or
fucomip
xor
or
cmp
ja
lea
addl
push
clc
notl
out
int
or
jge
jmp
inc
mov
addr16
pop
sub
jmp
inc
inc
jmp
mov
fcomip
testb
cmpl
and
xor
adc
or
mov
xlat
cltd
pop
xor
mov
filds
mov
cmp
mov
inc
mov
dec
jne
pop
push
stos
xor
mov
fistps
cmpsb
mov
mov
inc
or
inc
dec
jne
jmp
in
femms
inc
jge
dec
je
adc
mov
orl
push
mov
mov
add
je
das
fnstenv
jl
xchg
je
and
xor
push
cmp
cmp
jae
jge
mov
xor
and
xchg
stc
sbb
jmp
push
pusha
popa
jg
fldt
dec
imul
mov
aas
enter
inc
enter
and
repnz
or
ret
bswap
dec
jle
and
adc
mov
xor
sub
sbb
xchg
and
inc
mov
mov
and
movsl
aam
bound
sub
test
incb
sub
pop
jecxz
add
leave
sbb
inc
cs
jbe
imul
cmp
mov
mov
das
jmp
outsl
bound
cmpb
xlat
fadds
outsb
dec
jg
xor
xchg
push
or
push
push
int3
into
sbb
rorl
jmp
push
pop
test
enter
mov
inc
cmp
and
daa
lret
into
pop
inc
test
call
pop
inc
in
mov
mov
addr16
leave
repnz
bound
and
incl
outsl
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
inc
mov
call
stos
mov
cmp
or
mov
pop
out
sub
imul
idiv
das
pushl
jl
xor
cmp
call
mov
sti
jmp
stos
push
inc
mov
push
lcall
sarb
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
jmp
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
mov
push
cmpsb
scas
mov
pop
or
addl
cmp
xor
call
pop
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
mov
fsubs
addr16
push
daa
mov
subb
and
and
outsb
bound
xor
jmp
pusha
cs
xor
mov
shrb
testb
pop
jne
push
pop
and
cmpl
mov
xchg
test
jbe
movzwl
lahf
adc
icebp
mov
movsb
xor
push
or
dec
dec
push
xor
fs
movl
sahf
xor
add
mov
sbb
add
hlt
mov
loopne
and
push
clc
pop
aas
or
jmp
adc
push
dec
inc
push
push
inc
call
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
fmuls
fninit
fwait
inc
mov
outsb
cmp
mov
jne
mov
cld
iret
inc
xlat
mov
xor
mov
inc
incb
mov
rclb
mov
or
dec
cld
jne
dec
mov
xor
mov
out
jne
ret
repnz
mov
or
roll
scas
sub
or
lds
pusha
outsl
sbb
pavgb
outsb
jbe
rcr
test
or
scas
nop
insl
sub
cld
push
xor
push
fs
sbb
lret
pop
sub
das
mov
push
pop
mov
or
push
cld
loopne
pop
in
push
mov
jge
mov
xor
push
shr
dec
rep
pop
clc
bsr
mov
mov
sub
pop
fsub
sti
decl
jmp
cmp
je
pop
mov
add
jae
insb
xor
addr16
mov
mov
pop
sbb
cmp
jo
push
cs
lods
mov
mov
mov
outsl
js
sub
ds
mov
jecxz
inc
xchg
cmp
jae,pn
paddd
dec
cmp
pop
mov
fnstcw
insb
js
popa
add
add
sahf
or
add
testl
clc
pop
aam
shlb
ret
sub
es
lock
inc
adc
adc
clc
mov
sbb
cmp
push
add
pop
lea
push
sbb
imul
sbb
hlt
xlat
jae
je
dec
setne
scas
fstpt
mov
or
mov
sub
sti
mov
cmp
jne
jb
cmp
fisttpll
or
xchg
sub
jne
or
pop
inc
inc
xchg
mov
cmp
pop
call
add
add
jmp
les
test
mov
mov
cmp
je
mov
leave
jne
mov
add
nop
push
xchg
jmp
lret
xor
lds
push
add
repnz
je
pop
in
negb
pop
add
adc
mov
pop
cs
xchg
add
fs
pop
insb
xor
pop
mov
scas
mov
xor
lock
jne
das
mov
enter
dec
out
es
les
dec
orb
pop
push
sahf
sbbb
aad
or
icebp
push
ret
ds
push
stos
pop
mov
fdivs
pop
in
popa
lock
xor
lds
fisttpll
xchg
adc
jg
movb
dec
push
cmp
sbb
add
dec
jne
icebp
fucomi
sbb
cs
pushl
push
xor
jecxz
dec
cmp
mov
sbb
out
lahf
lods
lock
cmp
adc
add
lods
mov
fisttpll
push
arpl
pop
push
sbb
adc
leave
rcll
repnz
mov
fcompl
sbb
jmp
pop
in
jg
cli
std
push
pop
add
sahf
push
push
push
jecxz
add
hlt
xor
aas
pop
add
mov
mov
mov
movl
ret
pop
cmpsl
mov
rorl
mov
adc
js
sub
or
or
xchg
stos
ljmp
or
aas
mov
call
in
sbb
add
jg
shll
pop
pop
sbb
lcall
pop
mov
incb
pop
in
push
call
mov
cmpsl
or
push
popa
push
push
cmp
inc
lcall
das
add
loopne
pop
fs
or
jae
fcmovnbe
push
cld
sub
push
leave
push
aas
or
inc
add
or
jne
movsbl
inc
inc
adc
mov
dec
sbb
push
jecxz
in
inc
jo
mov
adc
jo
xor
loop
fdivrl
adc
ret
scas
pop
jecxz
pop
cmp
inc
add
sbb
or
jne
fiadds
sub
push
push
aaa
dec
adc
outsb
cwtl
and
mov
jl
xor
test
push
mov
aam
std
adc
es
sbb
ltr
cmpl
je
dec
test
lock
and
sbb
fdivrl
cmp
pop
ja
std
outsb
mov
jmp
adc
je
push
jne
push
xor
push
sti
push
jns
je
orl
xchg
dec
cmp
push
cmp
jecxz
add
push
cmp
pop
out
sbb
sub
cli
mov
movl
fcoms
ret
loopne
jecxz
jbe
insb
dec
out
mov
mov
in
adc
and
outsl
cmp
xor
add
ret
or
cmp
pop
add
hlt
jno
mov
add
aas
test
jo
jb
addl
jne
testb
sbb
inc
inc
mov
sbb
fsubl
jne
lahf
dec
jne
sub
ficoml
rcll
inc
jmp
sbb
enter
mov
lahf
jno
lds
daa
adc
bound
add
lds
adc
clc
addl
int3
jmp
mov
pushf
pop
xor
sbb
jmp
pushf
ret
push
push
outsl
cmpsb
or
roll
inc
or
mov
inc
pop
std
pop
push
push
push
push
push
mov
aad
js
and
mov
ja
mov
sahf
sub
or
incl
andl
testl
out
rcl
jne
frstor
das
mov
mov
cmc
loopne
subb
fs
test
mov
xor
dec
ljmp
loop
xor
mov
cmpsl
pop
dec
xchg
xor
xchg
ret
dec
mov
xchg
jle
add
je
cmp
push
sub
xor
sub
je
jmp
add
sub
jnp
jnp
jb
je
jmp
cmp
sub
adc
and
cmp
cmp
mov
jmp
mov
jmp
mov
jmp
pop
sar
mov
jmp
push
sbb
into
jmp
mov
mov
mov
fldpi
push
mov
and
add
nop
push
or
pop
popa
adc
xchg
or
psubsw
pop
enter
push
mov
jp
adc
pop
rorb
push
pop
inc
sbb
clc
lods
sub
or
push
inc
cli
sub
or
push
sbb
add
mov
sbb
js
sub
imulb
inc
inc
or
enter
push
stos
mov
adc
sbb
cmp
jecxz
sbbl
cmp
je
cmp
jne
lock
xchg
add
xlat
mov
xchg
add
pop
dec
mov
mov
outsb
jg
lea
jle
dec
mov
inc
fiadds
mov
je
shlb
jg
arpl
ja
popa
test
jns
mov
js
add
mov
das
pop
dec
mov
or
sti
cmc
loope
cmp
jle
add
sbbl
insb
mov
movl
sbb
das
xor
mov
fsubs
inc
push
ds
push
jnp
cmp
into
ret
sbb
add
std
add
sbb
ss
jne
pop
pop
pop
out
pop
stos
inc
pop
sbb
mov
dec
add
mov
xchg
or
sbb
xchg
mov
sbb
adc
lahf
andb
mov
ss
or
idiv
add
lock
testl
daa
mov
jg
std
daa
jg
mov
mov
mov
pusha
adc
mov
push
push
das
inc
sti
xchg
adc
out
imul
cld
neg
sbb
inc
fstpl
jge
test
divl
mov
mov
leave
mov
push
fisttps
cmpw
adcl
adc
add
cmp
cmp
and
push
data16
and
inc
xor
add
ret
mov
fmulp
scas
xchg
push
push
js
or
push
sbb
dec
cs
adc
jne
addl
mov
mov
aad
jne
dec
pop
mov
xchg
xor
xor
mov
add
fstp
mov
inc
or
sub
jbe
push
lods
push
add
in
sbb
push
cmp
or
push
insl
mov
pavgb
pusha
mov
jg
je
js
mov
jne
cmp
fisttpl
adc
adc
push
ss
ret
pop
push
xor
pop
mov
dec
scas
aad
loopne
add
mov
push
xor
push
minps
cld
jno
inc
or
adc
sbb
dec
stos
xlat
pop
pop
ja
decb
pop
pop
call
rcl
stc
mov
dec
cli
movsb
mov
mov
mov
in
adc
pop
sbb
cmp
push
push
mov
xor
or
je
and
pop
int
sbb
aas
fdivr
push
xchg
mov
dec
jl
lock
outsb
pop
enter
inc
mov
push
sbb
add
or
dec
add
imul
testb
inc
jg
mov
inc
push
pop
pop
dec
mov
push
mov
xchg
int3
push
in
notb
xchg
jle
das
incb
xchg
push
add
loopne
jo
jle
push
adc
add
clc
ret
adc
inc
clc
lods
loopne
add
iret
mov
loopne
aaa
mov
and
aas
mov
adc
pushf
cmp
fisttps
lea
push
push
adc
adc
sbb
inc
pop
insl
out
aaa
add
sahf
add
cmp
cld
jo
lea
jmp
lea
addl
incl
movaps
mov
mov
clc
fdivs
cvttps2pi
mov
add
dec
cwtl
lds
fistpl
fbstp
pop
sbb
add
mov
clc
icebp
pop
jecxz
cmp
loop
or
jle
in
and
or
add
out
xchg
add
iret
push
mov
call
pop
sub
jmp
idiv
pop
sub
and
pop
pop
or
mov
or
data16
in
add
xor
xchg
nop
push
push
pop
add
adcl
pop
add
mov
rcrl
mov
aas
jmp
mov
adcl
fstps
addl
or
sti
stos
lds
xchg
add
inc
aas
je
dec
popa
lock
push
mov
push
cld
add
cmp
pop
nop
fnstsw
and
mov
adc
mov
sub
loopne
out
xchg
cmp
adc
or
out
sbb
sub
jnp
mov
loope
cld
add
je
ja
jnp
mov
mov
lds
push
sbb
xlat
dec
ja
dec
clc
mov
mov
jmp
adc
mov
mov
xchg
adc
or
xchg
mov
dec
jmp
dec
sub
add
cmp
gs
dec
jne
mov
mov
test
cld
jge
and
aaa
add
dec
jmp
sbb
push
adc
push
aaa
inc
pushf
sbb
lock
out
into
pop
dec
jne
mov
adc
add
scas
lds
lea
jmp
xchg
dec
pop
xchg
jecxz
cmp
add
imul
mov
addr16
jns
enter
push
cmp
andl
adc
and
jbe
or
and
jmp
aam
jp
inc
xor
icebp
pop
imul
lods
fiadds
ret
add
cld
jl
setle
je
push
cmp
adc
pop
adc
xchg
out
loope
inc
daa
pop
sub
add
mov
out
cmp
dec
sub
dec
jl
js
and
pop
sub
aas
sbb
adc
push
mov
adc
shr
in
mov
jmp
mov
sub
fmul
xor
pop
push
fisttpll
sub
jge
mov
mov
adc
out
jle
inc
sub
add
lea
inc
dec
pusha
nop
loop
movsb
push
pop
cli
mov
stos
or
sahf
cltd
mov
push
mov
xlat
adc
imul
add
gs
cmp
pop
cmp
mov
lea
lock
push
add
mov
cmc
jmp
fcomip
mov
mov
push
insb
dec
js
mov
or
adc
adc
push
lret
aaa
fstpl
pop
mov
arpl
cmp
xchg
or
out
and
sbb
jo
mov
pusha
pop
sub
pop
and
in
jmp
out
mov
gs
arpl
cli
pop
cmp
or
push
pop
jg
mov
jle
jmp
test
je
in
fsts
test
dec
mov
pop
add
shl
push
in
pop
enter
incb
push
cmp
push
push
sub
push
fistl
incl
call
sarb
scas
mov
adcl
roll
aam
pop
dec
repz
inc
pop
xor
orb
rcrb
in
sub
sbb
sarl
jo
sbb
into
or
dec
push
das
int3
pop
outsb
clc
add
pop
pushl
mov
and
pop
shll
ret
jno
adc
add
pop
mov
xor
add
add
dec
add
mov
cmpsb
add
je
push
push
push
add
inc
cmpsb
inc
xor
not
or
fdivrs
sbb
or
enter
xchg
cmp
movsl
xor
jl
ret
or
jge
pop
dec
cmp
mov
outsl
mov
mov
ret
cmp
push
mov
jg
int3
add
add
or
xor
jne
scas
jne
pop
daa
cltd
cmp
adc
enter
enter
sub
xchg
mov
mov
aaa
sbb
gs
pop
sub
mov
ss
mov
push
jmp
adc
mov
int
cmp
adc
lods
aad
out
decb
xchg
push
add
cmp
je
cmp
je
jmp
je
cmp
je
cmp
das
cmp
je
mov
and
mov
in
jle
clc
jmp
adc
or
adc
jmp
dec
aad
push
or
pop
cs
gs
cmpxchg
adc
cmp
pop
jmp
shl
fwait
cmp
pop
sub
sub
push
jmp
daa
lods
cltd
aas
rclb
adc
pop
fwait
arpl
call
add
insb
fldt
cmpsb
sub
and
faddp
popa
pop
pop
aam
jnp
and
xchg
in
mov
sti
and
cmp
xchg
neg
ja
cmp
jmp
daa
push
mov
jle
xor
or
ds
jmp
outsl
or
sbb
cmp
jo
jmp
jp
pusha
mov
xchg
daa
aas
in
xor
adc
pusha
ret
push
push
jnp
imul
dec
lcall
js
or
loopne
movsl
cmp
add
push
dec
inc
pop
enter
aas
movsb
sbb
sahf
mov
inc
mov
scas
sbb
cmpsl
mov
inc
add
jle
outsl
cld
in
clc
push
pop
add
sarl
add
add
mov
push
out
loopne
sbb
xor
in
cmp
or
dec
or
push
or
dec
cmp
repz
jo
adc
bound
pop
or
mov
and
fadds
jmp
and
adc
push
iret
pop
inc
lods
mov
push
pcmpeqd
push
or
sub
loopne
jmp
aas
add
sarl
in
aaa
les
and
js
xchg
and
jl
cmovge
test
pop
rolb
or
ficoml
sbb
decl
mov
and
mov
in
sbb
addr16
push
popa
jge
loopne
inc
push
pushf
fdivs
and
dec
jne
sub
lret
mov
dec
imulb
iret
repnz
daa
adc
les
mov
add
daa
or
ja
sti
or
xlat
sti
add
add
inc
ljmp
testl
je
cmp
out
pop
mov
or
adc
loopne
loope
adc
in
pop
or
nop
push
jns
push
adc
push
adc
cwtl
pop
das
shr
xlat
dec
xchg
xchg
mov
and
cwtl
mov
into
xchg
pop
push
imul
or
inc
pushf
fldl
aas
sub
test
imul
cmp
pop
inc
mov
dec
clc
outsl
loope
xchg
push
mull
mov
cld
int3
incb
sub
and
add
dec
adc
pop
pop
ret
mov
sbb
je
mov
xor
push
sub
faddp
imul
mov
stos
inc
xchg
inc
cmpb
mov
add
jne
sbb
inc
jmp
cmp
jne
mov
negl
std
inc
and
sub
ret
pop
je
es
fwait
test
add
sub
pop
lret
inc
pusha
in
pop
add
ljmp
jb
out
add
loop
cmpsl
mov
and
jmp
je
subb
jno
push
std
pop
xor
or
jb
jmp
jl
cmp
es
jbe
jmp
jg
mov
cltd
push
aas
add
aas
std
adc
movsb
popa
mov
clc
push
pop
add
adc
and
xor
mov
cmp
fucomi
inc
add
test
rcll
xor
addb
neg
push
cmp
adc
bound
xor
push
loop
inc
dec
jne
adc
rcll
jg
cmp
sub
dec
inc
push
dec
push
add
cmp
jmp
sub
mov
inc
jmp
loop
in
setb
jmp
setl
cmp
add
xchg
rorb
push
fsubrs
mov
imul
cmpb
inc
test
dec
ljmp
pop
or
sbb
push
push
loopne
mov
cwtl
repnz
pop
psllw
jp
sbb
test
jg
out
mov
xor
ss
lods
rolb
mov
lock
shr
mov
fists
push
scas
push
icebp
add
mov
test
jno
xchg
push
mov
dec
testb
call
jnp
jle
icebp
cmp
je
andl
nop
ds
incl
add
mov
cmp
jge
adc
out
adc
inc
imul
cld
ret
lock
add
lea
mov
mov
mov
pop
decl
stos
cltd
int
shl
adc
in
xchg
jge
or
push
in
test
js
loope,pn
push
mov
mov
inc
dec
push
dec
sarl
faddl
inc
movl
not
mov
or
cmpl
mov
cmpsl
cmpl
jle
cltd
pop
clc
loope
or
xchg
dec
jno
and
scas
mov
or
jo
push
test
lcall
dec
jne
pop
mov
sbb
in
push
subl
cmp
xor
das
jecxz
aaa
lock
jne
das
push
push
adc
jmp
pop
stos
in
loope
jmp
scas
sbb
cmpsl
clc
das
scas
scas
adc
dec
push
push
push
mov
incl
out
pop
pop
les
push
jae
stos
daa
nop
sbb
in
sbb
mov
sbbl
xor
xor
daa
mov
inc
sbb
shlb
add
sub
sarl
mov
pop
fsubrl
and
add
mov
add
xor
adc
roll
and
or
add
out
adc
jmp
jbe
loopne
call
jecxz
jmp
pop
js
jmp
frstor
pop
jne
sahf
xchg
mov
clc
shll
push
clc
js
mov
sub
mov
mov
jne
mov
inc
push
das
push
ret
and
pop
test
mov
sar
rcll
sub
dec
push
popa
neg
fistpl
cmpb
cmp
js
pop
jne
scas
lret
divb
lret
cmpb
testl
jmp
sbbl
add
inc
add
iret
movl
jmp
add
inc
cmp
cmp
push
push
std
fisubl
mov
out
and
std
popf
in
js
push
call
inc
cmp
lcall
pop
mov
push
push
inc
xlat
mov
push
xchg
push
jl
negl
decl
ret
imul
gs
xor
aas
cli
xor
fs
insb
jbe
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
adc
fisubrs
outsw
xor
sbb
fadd
movb
outsl
mov
sbb
add
and
add
and
ja
mov
push
pop
loopne
mov
mov
push
push
xchg
call
or
inc
clc
int3
or
pusha
cmpsb
lods
aas
into
mov
or
mov
repnz
pop
pop
inc
dec
nop
and
scas
sti
lret
jnp
in
and
popf
push
lods
repz
jno
jnp
enter
testb
fiadds
stos
and
repz
or
jmp
jnp
sbb
jbe
pop
imul
dec
cmpb
stos
pop
cmp
jne
push
mov
popf
inc
addb
sub
sbb
jnp
push
testb
lods
rol
push
inc
jb
in
je
das
outsl
repz
in
ret
xor
cmc
add
mov
mov
outsl
data16
popa
jb
stos
fnstsw
mov
arpl
gs
aaa
mov
push
adc
inc
cwtl
fisubl
push
mov
in
xchg
ret
mov
call
xor
ss
or
pop
push
add
adc
sbbl
and
imul
jnp
out
xor
push
loopne
fbld
sbb
mov
shlb
mov
pop
push
out
or
fadds
shlb
neg
dec
arpl
adc
addr16
lds
inc
loop
mul
pop
mov
in
cmp
cmp
mov
or
dec
cmp
jno
pop
loopne
adc
mov
pop
add
pop
int3
mov
sub
push
pop
stos
dec
rol
add
mov
mov
cmp
mov
ret
fcompl
mov
cmp
jne
ljmp
ss
decl
mov
adc
popl
jno
sub
mov
pop
mov
mov
in
popa
add
inc
ficoml
andb
sbb
push
mov
std
pusha
or
out
push
push
mov
pop
mov
pop
pop
xchg
divb
fdivr
mov
pop
pop
ret
sbb
sub
insl
dec
push
shlb
and
movsb
pop
cmp
inc
loope
jmp
xchg
add
or
sbb
fnstcw
dec
jbe
lock
in
xor
les
mov
adc
cmp
lea
and
or
andb
xlat
and
mov
pop
mov
adc
xor
or
test
movzwl
inc
cmp
ja
mov
inc
jmp
aas
clc
out
cmp
pop
add
pop
cld
ja
fcmovb
jmp
mov
lret
loopne
sbb
adc
and
sbb
and
lret
add
jmp
popa
add
mov
gs
popa
rolb
lock
fwait
repnz
or
cmp
jb
or
faddp
add
or
xor
frstor
clc
jbe
pop
add
cmp
lea
sub
rol
mov
hlt
and
mov
push
divl
lock
jb
rclb
pushl
add
inc
test
je
sub
subl
sbb
loope
and
je
std
pop
sbb
mov
add
jne
cltd
cmp
cwtl
and
jg
loope
or
mov
pop
lea
fsubr
sbb
mov
fsts
or
inc
fwait
push
adc
or
xorb
adc
dec
cmp
add
and
inc
inc
mov
fstps
dec
ret
xor
cs
cli
xorb
sbb
xor
cs
jb
inc
sbb
xor
scas
es
xchg
shl
xchg
push
mov
test
pushf
lock
ja
je
adc
push
popa
fisttpl
popa
and
cmp
and
in
lock
cmp
or
dec
xorb
enter
shlb
or
inc
xchg
push
dec
jp
or
aam
pop
cmp
rolb
subb
pop
inc
cmp
inc
inc
mov
adc
dec
outsl
inc
lods
data16
inc
cmp
into
cmp
inc
pop
arpl
pop
cmp
loope
or
and
add
add
push
pop
loopne
sub
add
jmp
add
fdivs
mov
jle
shlb
xchg
push
add
xlat
push
lock
arpl
enter
push
cmc
push
push
push
cmp
lock
push
pop
push
cld
sbb
shlb
das
pusha
cmp
dec
cwtl
nop
out
arpl
ret
loop
pop
repnz
cmp
mov
out
mov
fildl
call
mov
inc
jp
clc
subl
add
or
add
add
add
push
push
mov
shrb
je
jle
cmp
mov
mov
adc
jb
jae
mov
inc
dec
add
cmp
cmp
aam
sub
push
cmp
jbe
rorb
mov
in
inc
sti
jbe
js
sub
mov
push
mov
dec
push
jmp
xchg
inc
xchg
cwtl
xchg
push
push
pop
lret
andl
xchg
icebp
pop
mov
inc
inc
cmpl
mov
jmp
cmp
or
jmp
push
mov
std
icebp
ss
mov
fisubrl
leave
jne
mov
jns
push
cmp
add
mov
fsubs
test
xchg
fsubrl
mov
dec
ljmp
mov
mov
mov
mov
or
lods
adc
int3
mov
sahf
je
and
insb
jle
mov
data16
sub
xor
xchg
aaa
push
add
or
dec
stos
cmp
lods
jg
out
cmpl
push
xchg
inc
add
add
jb
jl
push
or
mov
and
je
int
sbb
add
xor
shrb
outsl
fs
gs
mov
or
inc
jb
jns
es
imul
inc
push
cmp
inc
outsl
arpl
inc
gs
jne
je
mov
outsl
je
imul
lea
gs
outsl
inc
arpl
xlat
imulw
ret
or
mov
pop
xor
outsl
insl
bound
outsl
js
fidivrs
clc
ljmp
pop
push
imul
test
push
andps
outsb
dec
inc
roll
rdtsc
ja
je
add
insb
nop
out
enter
and
and
lods
push
cmp
enter
cmp
sbb
xor
sub
nop
inc
push
sub
nop
inc
push
sbb
adc
push
sbb
or
cld
xchg
clc
xor
and
and
and
aam
or
enter
les
enter
mov
mov
lods
enter
test
mov
pushf
cwtl
xchg
and
mov
cmpb
enter
insb
xor
and
and
and
dec
orl
inc
inc
cmp
or
enter
sub
enter
and
enter
sbb
adc
orl
or
dec
push
xor
add
cld
xchg
clc
sbb
hlt
lock
fs
inc
push
call
push
sbb
fcom
orl
push
xchg
dec
dec
test
fs
xchg
xchg
cmpb
inc
push
je
insb
nop
inc
push
sbb
pusha
inc
push
sbb
push
push
sbb
dec
dec
inc
sbb
inc
cmp
fs
inc
push
xor
sub
inc
push
sbb
and
inc
push
sbb
adc
sbb
or
add
jb
inc
add
xchg
clc
enter
hlt
lock
and
loopne
or
enter
rorb
enter
les
enter
mov
or
mov
and
mov
pushf
cwtl
xchg
nop
or
enter
test
enter
jl
enter
je
insb
and
pusha
dec
push
xor
pop
pop
and
and
fs
inc
adc
add
nop
inc
push
add
or
inc
push
sbb
cld
xchg
orl
clc
hlt
lock
or
enter
loopne
enter
fcom
enter
ror
enter
xor
sarb
mov
or
enter
mov
pushf
cwtl
xchg
enter
nop
mov
test
enter
insb
or
enter
pusha
xor
and
and
and
cmp
or
enter
sub
xor
and
and
xor
and
and
xchg
orl
add
xchg
push
sbb
hlt
lock
sbb
in
xchg
fdivs
fmuls
aam
inc
push
sbb
int3
enter
sbb
sarb
mov
sbb
test
mov
pushf
cwtl
xchg
fs
inc
push
nop
mov
test
fs
jo
sbb
push
nop
inc
pop
pop
push
fs
inc
push
push
dec
dec
nop
inc
push
sbb
inc
push
sbb
xor
sbb
sub
sbb
sbb
adc
nop
inc
push
adc
leave
inc
push
sbb
cld
xchg
orl
clc
hlt
lock
or
enter
loopne
enter
fcom
enter
ror
enter
xor
sarb
mov
or
enter
mov
pushf
cwtl
xchg
movsl
push
mov
insb
dec
mov
or
scas
movzwl
cli
scas
add
sbb
call
pop
sbb
pop
nop
movl
les
xor
mov
or
or
enter
xor
sbb
push
xlat
lock
outsl
adc
xor
mov
fbld
xor
ret
pop
or
mov
add
or
cvtps2pd
mov
and
and
inc
add
sub
shll
out
pushf
ret
out
rolb
push
scas
adc
mov
fdivs
push
adc
sbb
add
and
ds
mov
arpl
movsb
mov
or
pop
test
scas
cmpsb
pop
add
mov
mov
mov
sub
dec
pusha
int3
je
loopne
jb
cwtl
pop
xchg
jp
push
pop
pop
push
arpl
jne
pop
sbb
adcl
xchg
imull
push
fs
or
add
lods
and
xchg
aas
xchg
addl
or
add
add
ljmp
loopne
mov
popa
gs
push
and
push
dec
inc
inc
dec
jg
or
pop
push
and
dec
std
jecxz
jnp
inc
push
dec
pop
and
add
push
pop
std
mov
sub
push
inc
dec
pop
dec
dec
dec
inc
push
das
orb
dec
jne
ja
test
push
jne
push
outsb
xchg
add
nop
test
stos
adc
jl
lock
push
sbb
push
icebp
repnz
sbb
cmc
div
sbb
clc
stc
cli
fs
inc
push
sti
cld
std
nop
inc
push
sbb
jmp
inc
push
sbb
jecxz
sbb
in
out
fs
inc
call
inc
push
jmp
in
nop
inc
push
sbb
out
rolb
sbb
roll
sbb
aad
xlat
sbb
fcomp
fisubl
push
fcmovnu
fstl
ffreep
inc
push
sbb
ret
push
sbb
sbb
enter
nop
inc
push
lret
int3
int
inc
push
sbb
iret
mov
push
sbb
mov
sbb
mov
mov
fs
inc
mov
inc
push
mov
push
sbb
sbb
mov
movsb
movsl
cmpsb
cmpsl
sbb
test
stos
fs
inc
push
stos
lods
lods
sub
sbb
cltd
fs
js
push
sbb
inc
imul
nop
in
push
or
popa
jb
push
fsts
shrb
cmp
movsl
mov
dec
jns
push
and
mov
pop
ss
jg
arpl
ret
or
arpl
je
outsl
outsb
mov
sub
rolb
ds
add
mov
incl
inc
inc
bound
je
or
adc
je
push
inc
dec
inc
jo
test
sub
fs
mov
pop
incl
inc
or
dec
jne
dec
dec
gs
imul
loopne
xchg
outsl
rolb
inc
outsb
sarl
inc
jb
mov
jnp
aas
popa
xor
jae
rclb
fcmovb
das
mov
scas
ds
int3
jp
xchg
pop
and
inc
in
sarb
sbb
sbb
jl
in
sub
xor
mov
imul
nop
subb
jg
popa
outsb
fdivs
adc
aam
fmuls
dec
jbe
insb
outsl
ja
xor
lds
add
loope
pop
dec
in
in
inc
in
nop
mov
mov
imul
outsl
scas
in
mov
and
insb
jle
gs
sub
outsb
shrl
sbb
xlat
rcl
scas
aas
add
xchg
pop
push
mov
in
scas
aas
cmp
mov
push
outsl
imul
pop
fwait
addb
or
inc
popa
jae
mov
add
movsb
mov
sbb
test
mov
cmpsl
push
scas
shll
xchg
adc
addb
loopne
jae
adc
jbe
test
or
mov
insb
inc
nop
mov
scas
mov
cli
or
imul
adc
adc
daa
in
loope
ret
or
je
insb
inc
xlat
insb
scas
mov
loop
aas
popl
xor
mov
xchg
inc
addb
loope
leave
mov
cmpb
sub
out
mov
aam
rcrb
out
test
test
mov
mov
aas
cmp
adc
stos
mov
cmp
pusha
pop
adc
popa
data16
sub
add
aaa
xor
sbb
jbe
add
jbe
jge
push
inc
insb
jae
je
cmp
xor
addl
or
inc
mov
dec
adc
jb
popa
fs
mov
lds
int3
add
enter
sarb
in
rorl
dec
adc
cmpsb
mov
int3
and
dec
rcrl
sbb
push
mov
call
jnp
sbb
push
loopne
sbb
mov
push
pop
test
in
mov
add
pop
and
sub
test
imul
pushf
test
push
fld
sbb
jmp
imul
in
ret
adc
repz
sti
mov
add
aam
lretw
mov
mov
popa
test
sbb
fs
ret
fiadds
dec
clc
push
aas
xchg
popf
sub
inc
cmpsb
addr16
call
pop
and
jno
mov
adc
xchg
mov
adc
add
or
mov
call
xchg
mov
outsb
lcall
fdivrp
cmp
and
add
sub
pop
or
fadds
jne
mov
xchg
inc
loop
mov
push
inc
inc
dec
aaa
ja
xchg
out
inc
pop
add
xchg
rcl
or
std
add
or
jbe
call
leave
repz
je
movzbl
pop
push
dec
nop
cmp
add
movsb
fildll
js
repz
jne
xchg
mov
xor
inc
inc
aas
push
mov
add
pop
dec
or
cltd
out
cmp
mov
jmp
and
sti
je
loope
add
jge
mov
sbb
in
push
imul
js
arpl
arpl
pop
adc
lahf
loop
sbb
sbb
cmp
ret
push
inc
mov
int
mov
xor
push
push
dec
insl
outsl
loope
add
sbb
adc
inc
jmp
pop
les
outsl
and
imul
fdivrl
push
fsts
push
push
adc
addl
inc
stos
push
lock
inc
out
cmp
jl
cmpb
jbe
adc
xlat
mov
sub
clc
imul
lret
inc
sbb
outsl
adc
addr16
sub
ret
push
push
mov
shrb
adc
mov
mov
add
iret
push
push
pop
in
mov
in
push
add
cmp
add
push
push
cmp
jne
ja
out
mov
pushf
mov
jmp
sub
adc
inc
je
push
pusha
das
ds
add
cmp
mov
std
daa
and
mov
jne
mov
dec
xor
push
sub
xlat
daa
jo
stos
jnp
jmp
cld
xor
add
sbb
lret
call
mov
jecxz
mov
inc
aad
sbb
call
xor
add
popa
pop
dec
imul
xor
idivl
adc
mov
sub
je
ljmp
cmp
jl
inc
mov
stos
mov
cmp
mov
or
jae
inc
dec
jne
jmp
mov
leave
jne
pop
or
mov
jp
mov
inc
dec
pop
inc
ljmp
push
xor
div
dec
aas
incl
cmp
sysret
mov
cmp
icebp
sub
sti
outsl
pushl
add
mov
sub
jmp
mov
dec
jne
push
mov
sub
xor
push
outsl
cwtl
inc
xchg
pop
test
fiaddl
shr
xor
stc
or
pushl
pushl
mov
divl
and
in
das
movsl
sub
hlt
std
sub
dec
add
cmpsl
mov
dec
and
adc
mov
add
or
daa
andl
mov
and
fistps
ret
add
add
sub
add
rorl
scas
fdivr
mov
xor
add
add
sub
xchg
xchg
dec
shlb
inc
fldl
addl
rcr
pop
aad
aad
mov
rorb
adc
and
or
pop
jb
shlb
xchg
inc
mov
mov
movsb
push
push
xlat
adc
sbb
scas
or
rcrb
and
insl
cld
xorb
mov
sbb
in
mov
jp
or
fidivl
test
js
imul
int3
mov
push
cmpsl
idivb
xchg
pop
fisttpl
dec
aas
inc
js
subl
push
xor
mov
push
mov
mov
mov
dec
mov
sbb
nop
insl
jns
in
nop
jo
cld
lock
dec
or
es
xchg
or
add
and
rorb
loopne
das
cmpsl
movb
repnz
jl
inc
add
testb
mov
test
addb
jmp
dec
jecxz
pop
sbb
dec
mov
dec
cld
or
lea
lahf
xchg
jl
jg
lods
mov
adc
insl
lock
jge
adc
xchg
add
dec
ss
push
mov
dec
pop
jge
pop
addr16
in
push
in
nop
nop
add
sbb
dec
ret
push
mov
or
pop
mov
ret
sbb
xor
fsubs
mov
cmc
unpckhps
mov
aaa
jmp
and
mov
iret
add
adc
cmp
sub
dec
clc
inc
or
and
jle
popa
or
adc
fwait
mov
fidivrl
lock
mov
mov
xor
es
mov
nop
daa
add
adc
adcb
pop
andb
add
mov
sub
clc
mov
xor
ss
sbb
pusha
pop
ljmp
out
add
inc
and
loope
or
repz
call
cmp
ja
mov
and
mov
xor
push
push
adc
scas
loope
sub
mov
mov
loope
xchg
inc
test
into
pop
or
fadds
jae
sahf
dec
movsl
popf
sbb
dec
sub
js,pn
jg
pop
push
dec
out
sbb
pop
mov
mov
xchg
mov
mov
mov
xor
mov
fwait
push
mov
bnd
das
clc
pushf
pop
cmp
sbb
call
add
sti
pop
rcll
cmp
je
adc
mov
and
out
mov
pop
push
and
sub
and
mov
iret
scas
andb
pop
pop
iret
out
lock
cmp
or
ret
outsl
mov
xchg
test
jge
nop
pop
ss
adc
insl
testb
adc
pusha
dec
lock
and
loopne
inc
sub
add
pop
arpl
add
cmpsl
xorl
das
rorl
add
mov
cmp
out
clc
not
and
mov
aam
pop
subb
adc
xchg
push
int
adc
call
adc
shr
sahf
push
ret
xchg
pop
je
jae
faddl
aas
add
sbb
inc
or
and
rolb
pop
push
xchg
pop
clc
outsl
lods
adc
mov
loop
pop
mov
add
mov
dec
cmc
scas
push
adc
mov
test
incl
in
test
test
rcrl
mov
popf
jne
dec
mov
pop
loop
inc
pop
pop
and
mov
rclb
and
or
cmpsb
cmp
inc
sub
cmp
roll
mov
sbb
mov
cmp
ret
xchg
xor
cmpsb
push
outsl
xor
or
lahf
leave
enter
or
mov
das
call
or
rol
push
scas
data16
out
hlt
clc
cld
push
jnp
push
cld
imull
inc
ret
filds
mov
mov
adc
sar
add
lock
fs
adc
jmp
add
xor
mov
mov
ret
das
lea
movsb
mov
int
xlat
popa
xor
jne
dec
add
xchg
ds
mov
popa
lret
add
shld
or
lret
dec
imul
ljmp
lret
pop
lret
jbe
and
xor
adc
mov
shrb
fwait
pop
adc
es
fxch
push
adc
call
inc
jmp
xlat
xor
repz
mov
mov
xchg
and
fbld
cli
inc
cli
ljmp
addl
or
das
mov
xchg
pop
jmp
insl
add
or
pop
adc
shll
add
inc
inc
movlps
xchg
inc
dec
je
mov
into
mov
pop
sub
jbe
sbb
lods
xlat
aam
or
push
add
sbb
loop
jne
jo
cmpsl
push
dec
sub
pop
inc
add
aas
sti
add
mov
inc
pop
xor
or
mov
imul
sbb
xchg
xor
jbe
xchg
aam
push
lahf
stos
lock
inc
sti
pop
jbe
mov
popf
out
cli
push
jg
cmp
jne
les
lock
mov
add
cmp
icebp
and
mov
and
iret
sti
fildll
lock
sub
mov
cmp
je
mov
ljmp
imul
inc
xchg
jb
js
push
mov
test
into
daa
mov
sbb
adc
mov
gs
lods
cmp
int
dec
fildl
shll
xchg
sub
mov
sub
jg
dec
bnd
mov
in
std
mov
popl
xchg
das
hlt
and
fisttpll
loope
mov
xchg
aam
movsb
inc
mov
fdivrs
das
ds
pop
push
push
jae
fildl
jge
xchg
or
lret
shl
movsb
xchg
pop
push
jle
aas
mov
rep
sbb
cmpl
push
sbb
push
dec
xchg
call
aad
cmp
pop
xor
cmp
ja
movsl
loopne
shrb
mov
xor
mov
add
and
dec
mov
dec
out
cmp
sarb
or
repz
loope
ret
je
xchg
ret
and
mov
lahf
in
adc
push
pop
pop
jne
xor
xor
mov
fwait
push
add
and
add
inc
lret
mov
xor
push
cltd
psubq
cltd
cs
insl
pop
rcr
or
aaa
push
mov
daa
adc
pop
sub
xor
xchg
xchg
jno
fsubrs
ror
cmpsb
and
jne
cld
dec
or
and
jmp
repnz
add
cmp
enter
or
jmp
into
into
cmp
imul
icebp
pusha
pop
repnz
mov
adc
fbld
mov
stc
push
jne
fld
sbb
add
mov
aad
mov
lock
xor
inc
inc
in
add
ret
lods
and
jmp
mov
popf
mov
cld
aas
and
push
cld
call
pop
jns
mov
jp
adc
outsb
or
rorl
dec
fdivl
or
dec
je
scas
jmp
jecxz
jbe
add
mov
rcrl
leave
inc
xorb
and
push
jmp
mov
outsl
mov
std
adc
mov
or
add
adc
add
hlt
dec
jge
mov
mov
loope
pop
cmp
jbe
mov
loope
mov
xchg
adc
fdivrl
xchg
cmp
pop
mov
push
mov
repnz
iret
dec
mov
stc
xchg
ret
xor
and
pop
mov
ds
pop
pop
inc
add
daa
xlat
ljmp
push
es
and
mov
push
cld
xchg
lret
mov
jg
mov
pop
cli
jg
test
jg
inc
ds
sub
mov
add
movsl
or
sbb
fdivrl
imul
lea
insl
sub
inc
out
or
inc
std
add
ret
jmp
add
add
inc
dec
lea
adc
lea
sbb
iret
mov
lea
ficoms
sub
push
xor
stos
or
incl
clc
mov
or
push
mov
neg
jmp
or
mov
mov
stos
xchg
push
mov
dec
mov
aas
ljmp
inc
dec
dec
in
or
fsubl
dec
xor
clc
pop
pop
ja
add
mov
cmp
fwait
sti
mov
test
hlt
mov
repnz
fsub
or
adc
sbb
inc
add
pop
hlt
mov
mov
cs
daa
jmp
adc
jb
rorb
xor
mov
movzwl
sub
cmp
jae
lea
mov
pushf
jp
add
fildll
xlat
fstpl
sti
add
ja
movswl
fimuls
add
lea
sbb
or
dec
cld
lds
fwait
inc
fidivs
mov
xor
popf
pop
pop
dec
dec
jl
add
inc
dec
inc
dec
lods
or
dec
xchg
jge
lret
ds
pop
jno
ret
std
mov
call
loope
aam
adc
stc
std
jl
pop
aas
jl
mov
je
mov
stos
neg
out
fistpl
rep
jmp
inc
inc
mov
loop
push
adc
fdivrl
mov
inc
stos
push
pop
inc
clc
dec
test
fistpl
mov
mov
gs
mov
sbb
sub
cli
rcll
xlat
add
leave
mov
mov
mov
fildll
mov
insl
cmp
add
shll
fistpl
sbbl
or
repz
inc
test
dec
je
dec
jne
sbb
in
in
stos
xor
inc
add
sti
add
outsl
mov
inc
jne
pop
dec
jne
ret
xchg
repz
cli
int
jecxz
or
repnz
incl
lea
pushf
fwait
sub
push
lock
inc
je
sbb
push
push
cmp
xlat
sbb
mov
testl
add
mov
insl
fildll
popa
repz
and
inc
add
and
and
sti
mov
and
sub
inc
sub
sub
cmp
push
sbb
and
sub
mov
orb
wrmsr
sub
sub
sub
cmpsl
mov
aam
clc
js
inc
xchg
add
cmc
pop
inc
lds
je
shll
or
out
xor
or
sti
adc
jb
dec
or
xchg
je
xor
push
and
sub
ret
cmc
fwait
dec
mov
mov
dec
shlb
call
leave
je
into
jne
adc
push
jle
jno
xchg
punpckhdq
pop
pop
jnp
fs
jmp
push
lret
push
mov
cmp
mov
dec
mov
inc
fs
pop
mov
jecxz
lods
cmp
mov
cmp
in
cmp
out
loop
mov
push
add
pop
data16
or
add
xor
pushf
fsubp
mov
out
lahf
mov
jp
shll
mov
mov
add
jg
and
xor
je,pn
cmp
je
mov
xor
cmp
je
xchg
je
mov
add
add
jmp
inc
jmp
sti
add
dec
xor
movl
movb
add
mov
scas
adc
sub
out
sub
aaa
out
add
pop
cmp
and
mov
les
fdivrs
push
add
push
add
in
daa
push
ljmp
shrb
jo
mov
jg
ror
lcall
jne
inc
jne
imul
and
lcall
and
push
js
mov
inc
dec
jns
adc
int
cmpsl
shrb
insl
sub
andl
idiv
mov
sub
les
adc
stc
pop
pop
mov
add
pop
jmp
add
xor
mov
xor
push
cmp
dec
mov
incl
arpl
loope
adc
inc
test
or
les
jl
xorb
imul
add
mov
lret
iret
jo,pt
cmc
xchg
lahf
jle
mov
repnz
push
imulb
in
rcrb
push
cmp
gs
out
daa
add
mov
aaa
aaa
push
sbb
cmpsl
adc
into
imul
and
sbbb
inc
push
pop
adc
cmpl
add
movb
xchg
mov
fisubs
fldt
sub
dec
jno
adc
fpatan
das
scas
clc
test
sti
and
pop
frndint
push
fldt
pop
icebp
fcomp
fstsw
fwait
mov
add
or
outsl
call
mov
lcall
jne
lea
mov
inc
sub
jmp
call
add
stc
inc
jle
jmp
shrb
jns
sbb
fdivr
jnp
cmp
test
cmp
jae
cmpb
jb
movb
decl
decb
and
ja
jmp
data16
popa
xor
aaa
insb
lock
enter
dec
sbb
test
pop
jns
notl
out
shr
adc
mov
ret
mov
or
pop
adc
mov
mov
push
rorl
je
pop
pop
maskmovq
inc
fisubrl
add
or
or
aam
add
fcos
in
ret
pop
mov
cmpsl
sbb
jae
dec
add
popf
rolb
in
insl
or
mov
pop
or
mov
ret
mov
rorl
fwait
or
jne
mov
call
loopne
pcmpeqw
dec
jne
jmp
mov
add
stos
aas
js
mov
inc
or
ljmp
roll
cmpb
divl
xchg
xchg
ljmp
push
sbb
pop
lods
rorb
cmp
test
jo
testl
fwait
push
jl
fldz
aas
fst
scas
cmpsb
xchg
mov
pop
add
mov
insl
mov
cmp
inc
hlt
popf
ds
and
inc
jne
inc
push
sub
subb
aad
xchg
lods
cld
adc
add
loopne
add
aas
jmp
fstpt
clc
dec
jge
frstor
or
adc
xchg
test
insl
lock
add
push
lods
mov
mov
icebp
jg
lods
sub
add
jae
fimull
jp
rolb
mul
xorl
daa
push
push
inc
imul
sbb
hlt
jns
ljmp
popa
sub
add
cmpsl
je
das
lea
rclb
dec
std
aam
mov
mov
mov
mov
mov
or
mov
icebp
cltd
subb
xor
andb
cmp
test
add
mov
data16
scas
popf
or
pop
xchg
mov
add
cmpsb
int3
cmp
adc
jnp
push
fwait
adc
pop
push
push
fstps
imul
dec
xor
jae
inc
or
xor
xchg
idivl
xor
pop
xchg
add
and
dec
leave
or
movsb
clts
xchg
in
sbb
or
cmp
inc
stc
inc
pop
sbb
cmp
pop
sub
add
imul
cmp
xchg
ret
cmp
or
fdivs
rorb
or
sbb
js
pop
cmp
lret
movsb
dec
mov
fcmovu
cmp
subl
mov
dec
sub
fnstsw
cltd
lods
xchg
inc
movq
push
pop
add
dec
pushl
jp
loopne
or
jp
jecxz
sbb
inc
sbb
in
mov
ficompl
sbb
push
cmp
and
sbb
and
mov
roll
fldenv
fs
and
sbb
and
lahf
scas
sarl
idiv
mov
mov
movsl
jg
add
lea
sbb
jge
add
addb
adc
and
or
jb
sti
inc
fcos
sub
cmp
ja
adc
lahf
rcl
push
push
add
inc
dec
jne
sub
lock
clc
leave
dec
mov
aas
cltd
idiv
imul
xchg
inc
shll
aas
sub
stc
add
popa
ret
or
adc
jne
inc
std
std
lahf
dec
jbe
mov
inc
dec
xchg
cwtl
dec
fs
pop
pop
sub
mov
dec
mov
dec
and
dec
in
cmp
gs
test
jg
mov
mov
clc
loopne
and
push
dec
or
cltd
iret
sahf
pop
inc
idiv
and
lods
cmp
jl
addl
shrl
jge
shl
push
jl
je
lods
mov
mov
decw
cmpl
fs
push
sub
repnz
xor
lahf
fcomps
shl
cmp
xchg
sub
lock
pop
mov
mov
ficoms
jns
mov
sbb
insl
pusha
jecxz
cmp
jb
adc
mov
test
filds
icebp
out
xchg
and
jecxz
mov
stc
pop
outsl
lret
mov
xlat
jbe
hlt
add
add
add
fwait
lret
cmp
mov
cld
mov
ret
or
sarl
mulps
dec
and
or
sub
mov
sbb
push
cmp
push
adc
icebp
cli
jge
rcr
sbb
sbb
lret
or
xor
js
mov
fwait
mov
mov
cltd
cld
cwtl
roll
hlt
and
loopne
xchg
and
lea
arpl
out
cwtl
xor
cmp
xchg
cmpsl
add
lea
pop
aas
inc
fildl
or
loopne
hlt
lods
inc
popa
in
adc
das
and
out
insl
std
daa
add
sub
push
mov
test
mov
mov
jnp
pop
jns
mov
push
cmp
je
lea
pop
inc
hlt
out
roll
mov
shrl
mov
ss
outsb
out
jo
add
out
or
xchg
repnz
fistpl
in
add
jecxz
sbb
push
jge
call
ljmp
cmp
mov
pop
rclb
pop
add
fs
jmp
test
arpl
fsubr
adc
lock
out
repnz
dec
jmp
fdivrs
push
dec
xchg
in
fistl
stos
adc
fisubrs
push
push
lea
loopnew
dec
popa
std
add
mov
and
pop
js
or
push
mov
lods
enter
cmpl
ja
jne
sub
cmp
imul
xor
inc
dec
adc
mov
daa
loopne
push
mov
pop
and
adc
jl
xor
xor
or
cmp
iret
and
es
ds
adc
jg
int3
cmp
sub
ret
inc
jmp
ljmp
je
jecxz
push
inc
cmpb
jne
sbb
ret
pop
push
or
add
fsubr
lock
notb
add
lret
xor
dec
or
or
jnp
rcl
adc
nop
mov
cmp
pop
mov
ja
jge
pop
incl
pop
sbb
lcall
push
mov
bt
test
mov
pop
jmp
dec
jbe
dec
mov
cmp
shl
xchg
jns
add
pop
and
mov
gs
aas
or
cmp
jne
mov
xor
mov
fisubs
push
outsl
xorb
fimuls
and
insb
or
into
or
or
or
or
or
or
add
add
or
imul
or
push
sub
sarl
xchg
ret
xor
sub
fsts
push
adc
ds
fs
mov
filds
icebp
mov
cltd
mov
adc
pop
std
inc
mov
pop
insb
popf
dec
push
lea
repnz
int3
pop
xchg
out
fcomps
rcll
adc
stos
loopne
or
sbbl
xchg
mov
into
shll
fmul
mov
sti
dec
je
add
add
sub
out
push
fistpl
or
or
pop
mov
dec
and
add
mov
dec
xchg
lods
inc
popl
loope
ret
sbb
cmpsl
or
push
ja
jl
push
repnz
loopne
add
adc
and
add
sti
std
sbb
pop
or
pop
je
push
cmpb
lods
in
jne
mov
pop
add
dec
sub
nop
out
adc
sbb
add
adc
loope
add
or
test
stos
sti
scas
ljmp
pushw
mov
add
jmp
movsl
xchg
ret
adc
jle
sbb
push
out
or
xorb
fcoms
mov
add
add
sbb
in
jno
shrl
sub
ljmp
jle
cmp
addl
enter
daa
jns
or
cmp
add
rcr
lds
jns
adc
and
shll
inc
jmp
and
nop
add
xor
lods
mov
outsl
cmc
xchg
lea
inc
sahf
cld
add
rcll
add
out
xor
cmp
test
adc
out
adc
sysenter
dec
call
jge
orl
movsb
flds
cmpb
mov
sbb
ja
cwtl
push
in
js
jmp
sbb
push
test
clc
cmp
or
sbb
inc
sbb
mov
lds
loop
mov
fistpl
or
mov
adc
push
jnp
cli
push
shll
inc
mov
jb
ret
fdivr
popa
fcomp
push
xchg
rorb
mov
adc
das
push
dec
ret
adc
add
xchg
mov
cmpps
ja
push
mov
ja
sahf
push
sub
fwait
loope
js
ret
jne
or
mov
jne
push
test
inc
outsb
insb
out
or
imul
xor
xchg
and
out
jecxz
ja
jg
fdivrs
sbb
mov
xor
cmp
not
inc
add
mov
test
mov
mov
cmp
push
lahf
add
cltd
push
pop
sti
nop
ja
pop
ljmp
adc
mov
or
and
or
sbb
jle
xlat
pushf
adc
ret
add
ret
fiadds
loopne
mov
test
ffreep
rolb
xor
cmp
xor
pop
xor
notl
fs
sbb
ret
inc
sub
nop
add
push
push
mov
lods
shlb
xlat
cs
mov
push
mov
out
or
and
inc
adc
push
cmp
jne
incl
push
and
mov
sub
jmp
sub
je
dec
je
call
rorb
outsl
sub
je
jmp
mov
jmp
push
jge
aaa
mov
jmp
inc
mov
jle
loopne
dec
mov
or
add
xor
jge
inc
lahf
les
add
jg
jl
push
gs
mov
pop
movb
les
sub
push
pop
popa
shll
jo
add
mov
loopne
pop
inc
jae
pop
pusha
fisttpl
sub
push
jp
shlb
mov
pop
inc
jmp
fcoml
jne
cmp
jg
lret
lahf
lcall
sub
add
push
std
mov
movl
add
jne
std
cmpl
jle
adc
pop
dec
push
push
dec
cld
gs
xor
fmuls
fmuls
mov
loopne
push
push
ljmp
sbb
xchg
dec
adc
adcl
xor
mov
xor
xor
rorb
mov
dec
sub
outsl
and
in
js
push
cmpl
test
push
sbb
adc
dec
cmp
icebp
or
mov
mov
dec
hlt
lods
cmpsb
test
test
out
or
and
enter
cltd
sbb
repnz
pop
jmp
inc
shll
sub
jg
movl
cmp
push
mov
and
cmp
call
jns
fsubs
push
jmp
aaa
es
mov
hlt
jmp
mov
enter
push
cld
mov
push
jmp
cmpb
ja
fists
fsubrl
push
ljmp
fmull
outsl
mov
add
cmpb
jle
and
fs
roll
gs
testb
or
sbb
repz
ja
xor
cmp
xchg
pmaxsw
xor
cmp
push
fwait
test
cltd
and
jmp
lret
in
jne
cmpb
shll
pop
cmp
daa
in
imul
add
fsubrl
pop
sahf
adc
mov
fsubrs
xor
adc
mov
out
test
sub
push
add
jecxz
adc
pop
sbb
xchg
adc
ffreep
frstor
outsb
fs
lock
push
aad
repnz
fildl
xchg
aas
mov
arpl
outsl
adc
and
in
aas
jmp
push
mov
je
mov
sub
and
add
inc
fildl
and
add
cwtl
cmp
pop
pop
fadd
dec
cmpsl
push
cmpsl
enter
je
or
add
nop
inc
push
inc
or
add
test
add
test
insb
push
das
and
popf
inc
cvtdq2ps
repnz
jne,pt
add
xchg
push
jnp
or
push
adc
or
mov
shr
mov
and
cli
addr16
cmpsl
and
sbb
add
arpl
into
shll
inc
add
xchg
test
or
insb
pop
lods
mov
jo
pop
call
cwtl
add
movl
sbb
lock
jne
mov
mov
scas
mov
daa
fnstsw
sbb
out
movsl
jb
sbb
stos
fstpl
fwait
jmp
sbb
push
and
sbb
lahf
adc
out
mov
push
jae
fstpl
pop
shlb
out
decl
clc
pop
jo
add
push
add
sub
jb
or
je
or
xchg
shll
sbb
icebp
stc
in
add
outsb
mov
mov
inc
lods
les
push
adc
or
fsubs
cltd
negl
push
sahf
pop
addl
mov
dec
mov
adc
loope,pt
adc
mov
mov
mov
outsl
adc
push
and
dec
push
or
cs
mov
repnz
push
adc
or
or
jle
mov
mov
lea
dec
push
mov
pop
cltd
or
or
xchg
sbb
cmp
pop
js
cwtl
inc
inc
subl
cmp
mov
sarl
testl
xchg
or
pop
xchg
push
in
in
faddl
mov
loope
dec
call
mov
sub
call
or
je
mov
cmp
scas
std
data16
push
xor
add
jge
je
or
xchg
cmp
insb
int
cmp
enter
mov
cmpb
xor
imul
mov
sbb
cmp
mov
or
xchg
fists
andl
adc
hlt
es
ucomiss
push
ret
fcmovb
ja
sbb
mov
push
push
outsl
loop
xchg
loope
xchg
dec
push
cmp
jb
pop
outsl
sti
dec
jne
push
pusha
enter
rclb
or
inc
pop
inc
lea
nopl
ret
inc
push
jbe
sub
and
clc
ficoms
addb
sub
out
pop
xorb
and
imul
je
scas
imul
lcall
add
mov
sbb
sbb
mov
cmc
ret
fsubs
lock
jg
or
add
jle
mov
inc
sub
mov
pusha
fisttps
dec
mov
jle
in
dec
pop
rorb
add
cld
add
cwtl
in
sti
jmp
mov
lds
push
imul
sbb
cmpsl
fs
sbb
in
jle
jle
leave
lds
fildl
mov
inc
addr16
or
out
insb
add
sub
and
test
aas
xchg
or
add
sub
cmp
es
lds
jge
scas
test
addl
mov
pop
jne
sti
dec
loopne
imul
cwtl
test
dec
mov
adc
subl
std
dec
js
mov
jmp
fs
hlt
mulb
je
rolb
lea
lock
sarb
loope
or
cltd
mov
and
and
mov
imul
add
add
push
pop
mov
pop
sarb
orb
mov
inc
add
mov
pop
xchg
pusha
test
xchg
out
mov
call
movb
addl
mov
push
outsw
inc
sahf
xor
mov
sarb
imul
int3
jle
mov
clc
push
cmpsl
push
add
mov
imul
mov
or
cmp
sub
mov
sbb
rclb
mov
xchg
inc
add
dec
adc
ret
fistl
dec
mov
lcall
pop
mov
sti
out
xor
or
das
nop
mulps
adc
lods
jo
mov
enter
loopne
inc
pop
dec
or
lcall
or
cmpsl
xor
jns
fs
adc
insl
mov
lea
and
fistl
sub
nop
pusha
sub
orl
and
dec
or
fsts
jmp
movsb
std
les
les
or
add
pop
daa
ja
pop
or
add
push
arpl
push
push
add
xchg
xchg
or
add
push
shlb
push
sbb
mov
or
js
js
pop
and
mov
inc
cmp
mov
dec
and
inc
xor
shrb
cmp
cmp
sbb
es
xor
jp
pushf
jmp
arpl
fs
dec
into
icebp
pop
in
or
xchg
mov
pop
pop
inc
add
and
jne
ds
mov
loopne
dec
insl
push
test
adc
adc
ljmp
cld
or
jnp
jmp
setl
sbb
mov
loope
or
mov
ljmp
loopne
enter
cld
xor
shlb
and
ljmp
in
cs
jae
mov
or
enter
loope
outsb
push
loopne
popf
insb
js
loopne
jl
fmul
adc
ret
xorl
mov
cmp
add
mov
jo
push
pushf
adc
jmp
add
mov
dec
push
iret
movsb
mov
and
pusha
loope
arpl
dec
enter
dec
je
jmp
jle
push
stc
xor
inc
xor
xchg
imull
and
add
mov
add
gs
pop
or
or
adcl
pop
mov
adc
mov
cmp
and
adc
mov
mov
sbbb
enter
cld
cmpl
jne
sub
addr16
xchg
cmp
or
dec
inc
or
cmp
faddl
mov
repnz
and
addps
rcll
dec
mov
add
pop
mov
inc
or
fs
lret
jnp
jae
sti
sbb
or
enter
shrb
aam
sbb
icebp
loopne
loopne
or
lea
flds
fldcw
jg
pop
sub
cwtl
mov
mov
sbb
sub
mov
into
xor
leave
rcll
adc
test
aad
dec
push
inc
loop
gs
cli
pop
mov
std
rolb
or
sbb
dec
jae
jae
cmp
cltd
cmpb
pop
adc
xchg
gs
sahf
sbb
mov
mov
jnp
adc
ud1
push
cmp
add
dec
push
mov
and
xorb
popf
cmp
je
movsb
scas
mov
mov
jle
sahf
inc
push
sbb
and
adc
mov
scas
xchg
aaa
mov
push
ficomps
mov
test
add
into
sbb
mov
push
movb
adc
or
and
lods
pop
test
repnz
inc
cld
inc
pushf
adc
mov
into
inc
aaa
inc
sbbl
or
adc
adc
loope
inc
outsb
adc
aad
push
insb
jae
xchg
pop
loop
xor
js
add
inc
mov
sbb
in
mov
xor
add
or
sub
repz
mov
das
fstps
or
adc
orb
ret
int
fidivrs
add
cwtl
jl
pcmpeqw
cmp
mov
mov
fucomip
clc
lods
xchg
sbbb
add
leave
jnp
movsb
adc
inc
mov
fcomps
jae
ds
mov
lock
rclb
not
lock
mov
rcrb
xchg
inc
sbb
dec
push
sarb
dec
xor
cmp
pop
add
pop
dec
adc
rorb
shll
imul
icebp
push
loope
ret
data16
sbb
mov
adc
pop
rcrl
xchg
adc
jae
mov
and
mov
sub
and
data16
dec
or
inc
testb
add
add
add
xchg
add
or
ret
sbb
je
imul
sub
fs
push
mov
daa
ret
lods
and
shll
into
dec
push
fdivrs
adc
push
js
nop
dec
ljmp
jg
mov
scas
das
mov
inc
sub
push
add
and
xor
sbb
jnp
inc
inc
inc
jge
loopne
push
add
pushf
push
das
shlb
inc
dec
sub
fmull
in
or
sub
pop
hlt
jge
mov
and
addr16
dec
dec
cmpsb
or
xchg
adc
push
faddl
sbb
daa
mov
mov
dec
lahf
mov
push
fstpt
dec
jle
nop
fidivrs
fildll
push
sub
dec
aam
ret
ret
cmp
or
iret
mov
xor
or
or
ficoml
mov
mov
mov
sbb
iret
es
fidivl
pop
mov
mov
sub
sub
jbe
daa
jb
sub
das
pop
and
ret
clc
cmp
add
dec
or
xor
test
insb
movsl
jae
push
mov
jae
emms
test
pop
xchg
cmp
sub
xor
mov
add
mov
fldcw
jge
mov
dec
push
inc
lahf
fsubs
in
push
cmp
xchg
ret
ret
xchg
sbb
aaa
lds
add
shrl
mov
sub
inc
xor
jne
pop
push
xchg
gs
sbb
insl
xlat
and
fnstsw
jmp
pop
push
test
test
push
sbb
cmpsl
cmpsl
adc
in
adc
jmp
jp
in
es
push
push
sarb
andb
mov
jge
lods
sub
ja
fucomip
and
mov
je
clc
or
js
jge
jb
cmp
inc
mov
mov
pusha
das
adc
xchg
call
mov
mov
adc
out
and
mov
in
xchg
add
add
gs
pop
ret
sub
sub
cmp
jbe
cmp
sub
fidivs
mov
rolb
inc
daa
mov
cmc
xor
test
xor
jle
or
inc
inc
inc
inc
insb
pusha
jno
jne
dec
push
fs
hlt
inc
xlat
stc
add
ret
cmp
cmc
jno
mov
mov
dec
lods
dec
dec
xlat
subb
mov
hlt
out
clc
xor
mov
lock
fcompl
aaa
push
mov
sub
push
pop
cld
fdivs
inc
mov
inc
sti
stos
es
sbb
sbb
push
or
pop
pop
jne
jmp
jecxz
sub
pop
or
sbb
repz
out
push
or
dec
add
into
add
inc
jnp
sbb
sbb
mov
mov
pusha
dec
std
ds
or
ret
test
mov
xor
mov
mov
jne
adc
add
push
in
or
push
push
add
std
cmp
mov
enter
mov
sbb
inc
sub
insl
popa
mov
xor
add
cmp
test
shll
sub
scas
cld
ret
scas
jae
imul
cmp
pop
mov
mov
jg
xchg
jmp
sbb
movsb
jge
xchg
shlb
ficoml
sti
add
mov
xor
adc
dec
jne
push
mov
dec
jecxz
add
daa
add
mov
lcall
js
leave
mov
add
push
mov
and
sahf
inc
mov
inc
call
sbb
out
pop
and
mov
mov
mov
cltd
or
xchg
in
repnz
inc
in
insb
das
mov
add
rorl
or
mov
aam
cmp
xchg
jb
fcomp
mov
or
cmp
jg
out
xchg
jbe
pushf
int3
inc
pusha
pop
repnz
xor
enter
or
enter
adc
sbb
inc
push
jns
sbb
enter
aas
inc
shl
sbb
mov
test
rclb
and
cld
push
mov
xor
aaa
dec
cmp
test
or
mov
add
or
dec
outsb
sarb
push
cmpsl
pushf
insl
das
fs
js
popa
add
insl
add
fs
mov
orl
pop
push
in
add
inc
push
mov
and
mov
sbb
aaa
cmp
dec
loopne
mov
push
cmp
add
je
ret
sbb
jg
stos
subl
inc
or
je
add
lods
push
ds
in
adc
adc
sub
sub
adc
daa
or
dec
jmp
int
ss
add
sbb
lds
sahf
adc
or
jge
ss
or
andl
arpl
sti
cmpsb
fcoml
push
or
es
xor
daa
inc
in
testl
lock
push
xor
inc
add
fnstsw
or
pop
inc
sbb
add
in
push
dec
lock
xchg
fisubs
jb
mov
std
iret
in
icebp
loope
add
xor
cld
leave
outsl
std
pop
aam
add
xchg
orb
fstl
sub
pop
adc
cmp
adc
pop
add
mov
in
test
movsb
push
incl
mov
iret
mov
imul
test
fidivs
pop
mov
xor
add
adc
cld
jmp
push
rorl
pop
sbb
and
jmp
xor
inc
or
inc
mulb
ret
loopne
iret
orl
jb
gs
jo
add
cmpsl
clc
inc
js
add
xchg
lock
inc
in
testb
fcos
pop
dec
ret
xchg
divb
mull
jo
mov
and
or
lods
mov
sbb
inc
cmp
jne
loopne
mov
sti
and
and
insb
add
adc
call
rcrb
icebp
ret
add
pop
or
iret
filds
arpl
dec
or
idivb
fldpi
add
ljmp
in
mov
push
rorb
sbb
mov
mov
movl
lea
negl
or
in
add
pop
mov
dec
jecxz
jno
rorb
pushf
push
xorl
pop
sbbl
lea
cmp
dec
lock
cmp
les
loope
jmp
fsubrl
push
adc
lock
ds
rclb
and
cmc
inc
rcrl
mov
aam
dec
fildl
push
fdivl
jb
and
daa
dec
jno
imul
rorl
in
stc
lds
enter
adc
cmp
in
in
sub
mov
pop
sub
fcoms
push
sbb
nop
dec
xor
mov
adc
jle
sahf
out
clc
mov
jnp
ja
je
push
mov
dec
mov
add
iret
les
cld
add
xchg
ret
mov
lea
ja
mov
sbb
mov
mov
jl
xor
xorl
scas
orb
mov
dec
cmp
sete
incl
xor
incb
mov
decb
decl
cmpl
or
sub
in
popa
xor
or
cmp
add
sarb
dec
lock
daa
sub
scas
add
loopne
add
inc
cmp
inc
cmp
insb
jmp
inc
aad
mov
xchg
dec
call
push
inc
sarl
push
inc
inc
iret
ja
dec
or
fistl
inc
xor
data16
or
stc
rorl
stos
sahf
les
je
sbb
adc
loope
mov
roll
xor
xchg
arpl
scas
push
xchg
rorl
test
test
push
jbe
push
add
pushf
inc
or
out
adcl
pop
adc
mov
xor
xor
cwtl
cmp
or
jne
cmp
jns
mov
in
jne
jo
sub
cmc
sub
push
gs
inc
fiadds
in
jge
and
jo
dec
loopne
cmpsb
cmp
and
insl
pop
jmp
or
out
rol
cmp
int
je
sbb
fmull
lret
push
test
push
mov
pop
pop
xor
pop
div
push
fnstenv
loopne
pop
pop
shll
and
push
and
sub
shrl
aam
dec
hlt
pusha
mov
int
rorl
test
cmpsb
push
add
cwtl
lcall
out
mov
sbb
fdivrs
xor
sub
imul
fsubl
push
pop
jle
pop
dec
shrl
push
test
dec
add
mov
mov
push
pop
shrb
dec
sub
and
xchg
add
jbe
imul
cs
daa
int
inc
adc
pop
or
imul
add
mov
fstps
popa
add
xor
sbb
push
in
hlt
adc
mov
xlat
lock
lods
cmp
xchg
push
lock
in
lods
sbb
jbe
and
mov
pop
or
mov
shrb
and
mov
push
enter
mov
sbb
cmp
leave
out
cld
gs
daa
fwait
inc
fidivl
pop
test
imul
pushf
insb
adc
pushf
or
xor
movsb
sbb
mov
ss
in
out
test
inc
xor
lcall
leave
jmp
fiaddl
addb
mov
into
mov
mov
mov
cmp
inc
cmpsl
sub
lods
mov
nop
and
inc
cmp
add
xor
mov
sbb
pop
push
jo
mov
dec
fcom
out
and
ja
jge
sub
cmp
push
or
jbe
add
and
dec
xor
mov
and
leave
and
dec
xchg
nop
test
dec
push
cmp
xor
cmp
mov
lret
rorb
out
xchg
lcall
subl
jae
add
in
push
outsl
adc
cmpb
mov
in
mov
mov
inc
dec
mov
fsub
leave
cmp
jmp
out
js
pop
xor
and
andps
add
cmpl
dec
popa
mov
ss
sub
or
fiadds
mov
flds
jo
mov
cltd
ficoms
ds
mov
push
mov
ret
xor
and
add
sbb
adc
repz
and
inc
ljmp
fdivrs
xlat
stos
xchg
in
enter
jmp
add
and
and
scas
in
adc
add
inc
xchg
lock
jne
add
lret
adc
loop
in
sub
stc
clc
lea
jge
cmpb
cmc
sbb
xchg
out
fdivl
add
in
clc
adc
inc
push
push
ret
or
and
push
sub
repnz
jb
cmp
xchg
out
and
fcom
popa
nop
fists
and
nop
pop
cmpsb
pop
push
in
bound
add
in
leave
or
adc
pop
lcall
fsub
adc
adc
pop
nop
movl
stos
test
lods
roll
je
sub
push
xchg
dec
pop
and
mov
add
ret
push
mov
lea
loopne
or
lock
mov
leave
and
inc
pop
repnz
dec
mov
leave
and
leave
and
mov
insb
shlb
leave
les
pop
jb
and
pop
repnz
xchg
aam
imul
jns
fdivrl
inc
sub
int3
in
lcall
in
in
dec
sahf
xchg
dec
in
cmp
and
xchg
lock
hlt
sbb
xchg
out
in
sbb
sbb
jne
pop
or
inc
push
pop
push
jns
or
dec
add
inc
push
jns
outsl
je
fs
jne
xor
lods
or
ud1
idiv
cmovns
outsl
fs
outsb
daa
iret
mov
pop
outsl
jb
inc
insl
jo
in
fdivrp
inc
jb
insl
push
je
push
push
cmp
and
or
mov
sarb
mov
adc
dec
add
adc
or
mov
push
icebp
cld
ja
icebp
mov
ret
mov
ficomps
pop
orb
out
adc
pop
fiadds
jmp
add
push
adc
icebp
nop
shll
add
mov
and
inc
or
pop
jnp
and
and
pop
mov
in
les
add
sarl
pop
in
imul
clc
lods
mov
adc
dec
dec
inc
adc
inc
cmp
or
adc
or
jae
rorb
cmpsb
aam
fnstcw
cmpl
or
xchg
push
inc
mov
xchg
xorl
mov
adc
adc
cs
pushf
pushf
ret
inc
insb
pusha
lret
movl
hlt
aas
push
mov
inc
jb
inc
jb
lret
fs
gs
nop
or
inc
popa
fisubl
inc
leave
lret
jnp
enter
and
adc
frstor
cmp
sub
aas
cmp
add
dec
sbb
jle
test
mov
xchg
iret
adc
sub
sbb
test
sti
add
dec
insl
jo
or
idivb
addr16
aaa
test
add
sbb
enter
sub
inc
adc
sub
push
mov
sbb
ss
daa
arpl
nop
in
jns
ds
mov
sbb
and
xchg
insb
insb
jg
subb
add
negl
gs
or
popa
pop
in
repnz
aam
adc
mull
faddp
aam
outsl
in
in
add
pop
in
clc
lret
adc
jg
or
aas
js
jbe
scas
xor
daa
fsubs
call
xor
in
sub
hlt
inc
push
fs
xchg
clc
addb
jp
mov
sbbl
clc
xchg
fadds
or
addl
pop
xchg
enter
lock
add
stc
sub
and
in
fistps
cmc
mov
cli
out
sarb
pop
jns
or
cmp
fidivs
fimuls
dec
cmp
daa
clc
sub
pop
jmp
sub
dec
je
sbb
or
and
push
xchg
daa
loopne
and
aaa
dec
ja
add
test
and
in
in
dec
mov
gs
lock
mov
dec
pop
call
pop
mov
clc
pop
stos
hlt
mov
xchg
fs
jl
data16
lock
lock
rorl
dec
in
mov
int
pop
inc
call
adc
mov
test
dec
in
or
jp
jmp
adc
xchg
nop
pop
xchg
jmp
mov
adc
int3
or
scas
push
mov
mov
pop
fmul
mov
mov
scas
jns
and
and
cld
into
rclb
mov
insb
daa
push
imul
fildl
lea
mov
or
cld
jmp
adc
jmp
je
fbld
xchg
mov
adc
test
rclb
mov
pop
jno
dec
lock
xchg
inc
pop
jg
cld
dec
jb
push
lock
sbbl
daa
in
pop
loopne
popf
std
jae
xor
lcall
movsb
decl
cli
add
roll
rcll
lods
das
or
xchg
adc
lahf
ret
mov
jge
xchg
fucomp
xor
addl
insl
jp
arpl
pushf
pop
clc
jl
xchg
jne
pushf
xchg
fnstcw
aam
pop
jmp
test
subb
ffree
xchg
shr
loopne
in
pop
mov
add
cld
test
test
data16
dec
clc
testb
scas
push
add
pop
test
ror
bndldx
jne
xor
je
dec
jnp
ja
mov
xchg
clc
jmp
and
or
fimull
mov
lock
or
mov
xor
lea
or
xchg
mov
inc
add
shr
or
ret
and
fcmovnu
insl
shl
adcl
sbb
dec
inc
lock
jmp
and
out
sbb
mov
shl
in
sub
mov
repz
dec
jnp
mov
push
jbe
scas
subb
in
test
call
cmp
push
insl
loopne
in
mov
mov
push
fnstenv
test
jle
in
pop
push
xchg
adc
or
js
push
shrl
add
testl
sub
or
mov
sub
js
cmpsl
idiv
sbb
mov
push
cmp
push
into
adc
adc
loope
roll
xchg
inc
or
and
or
rclb
jne
fdivrl
mov
sahf
je
ret
aas
enter
lock
mov
xor
inc
xor
jb
aaa
add
pop
mov
sub
jmp
sbb
add
and
or
dec
mov
loopne
lcall
adc
out
mov
sub
gs
or
into
xorb
sub
stos
lock
dec
call
in
cmp
outsb
adc
outsb
cmp
xchg
das
push
sub
push
aad
aam
jmp
push
popl
out
leave
add
pop
sbb
in
fiaddl
add
jmp
adc
decl
push
popf
cmp
pop
push
jo
and
mov
adc
cmpsb
jmp
adc
cmp
xor
inc
adc
xor
fsubr
sub
xchg
nop
ja
aas
cs
mov
or
rorl
pop
iret
lock
je
pop
adc
cmp
jne
imul
xor
pop
xchg
in
or
or
int3
addl
int3
jo
lock
push
sbb
add
xor
test
sahf
dec
cmp
iret
jecxz
or
roll
push
sub
xlat
pushf
xorb
fdivs
dec
xor
sub
fidivl
adc
fwait
push
and
pop
pop
xchg
adcl
ret
clc
mov
xchg
and
pushf
fs
mov
dec
pop
xor
or
xor
xchg
inc
dec
cmp
add
jge
jb
mov
into
adc
dec
stc
push
imul
mov
ret
push
xor
jae
pop
push
push
and
push
es
or
adc
xchg
add
popf
std
hlt
xor
mov
sbb
lds
jne
xlat
push
loopne
inc
popa
jmp
loope
fwait
add
push
ss
sbb
or
cmc
cmp
lock
sarb
lret
dec
loopne
cmp
sahf
rorb
cmp
js
in
clc
dec
mov
movsb
ja
pop
fbstp
pop
push
cmpsb
pop
ss
lock
adc
es
int
imul
jns
mov
nopl
es
push
fmul
inc
shll
cld
data16
cmpb
pushf
addr16
repnz
mov
pop
in
pushf
cld
lret
ret
insl
ljmp
add
mov
stc
in
add
adc
add
xor
flds
xor
xadd
fldl
adc
fistpll
cwtl
dec
enter
xor
shrl
hlt
or
or
nop
cmpsl
sub
cmp
sbbb
jnp
imul
mov
inc
jmp
pop
stc
nop
and
fs
jmp
add
push
push
sbb
jmp
jmp
mov
add
adc
aas
insb
lea
xor
adc
mov
enter
mov
dec
aas
iret
sti
or
imul
rcrl
push
jb
test
imul
rcll
hlt
mov
clc
mov
std
jg
sub
xor
pushf
jno
sti
hlt
lods
test
jl
ds
push
fs
test
add
pop
addl
push
rolb
call
add
lock
dec
imul
test
push
aad
push
adc
aam
fisttps
add
cmpsb
cmp
pushf
or
adc
cmp
add
hlt
mov
or
push
orl
mov
shlb
rcl
push
outsl
loope
rcrl
and
jge
daa
mov
sahf
xor
push
sbb
daa
lods
or
inc
and
stos
and
dec
or
push
add
add
and
ja
xor
roll
andl
or
dec
fucomp
push
pop
sarl
jbe
shll
cmp
add
or
sub
movswl
les
sbb
out
icebp
fbld
fcoml
clc
pop
cmp
pop
xchg
fdivr
inc
leave
rolb
push
add
test
push
jl
push
insl
and
repnz
sbb
push
jo
arpl
mov
adcb
mov
mov
mov
insl
inc
cwtl
je
data16
sbb
dec
je
jmp
outsb
fs
adc
je
xchg
and
dec
mov
cltd
clc
inc
mov
or
in
fwait
push
lods
push
mov
or
mov
dec
or
push
dec
shll
mov
add
or
mov
lds
inc
fisttpll
sub
adc
adcb
lods
and
or
sbb
xor
sub
mov
cmpsl
and
aaa
or
daa
popa
arpl
fistps
dec
add
subb
out
mov
adc
lret
add
add
fbstp
sbb
pop
in
addr16
call
push
or
add
or
pop
add
rcll
mov
arpl
pop
or
test
int3
push
dec
or
jns
and
rcl
addb
add
andl
adc
fldt
stos
loopne
leave
nop
pop
push
cltd
nop
add
je
pop
and
dec
jae
inc
add
pusha
push
dec
adc
dec
and
scas
pop
xchg
daa
and
adc
mov
fs
rorb
add
mov
push
xor
adc
xor
push
popa
cwtl
cmpsb
mov
push
push
push
pop
sub
add
sbbl
int3
push
cmp
and
cmp
push
jl
and
aas
add
adc
out
in
fcmove
mov
lds
jae
rcr
add
adc
xor
push
sti
andl
fisttpl
push
cltd
nop
adc
mov
pushf
in
push
and
push
xor
adc
push
mov
daa
nop
and
mov
adc
imul
lds
fucomip
and
adc
icebp
cli
adc
push
es
mov
mov
dec
jle
and
test
in
pusha
mov
cmpsb
out
adc
xchg
gs
sbb
push
js
mov
pop
add
push
insb
add
push
adc
lret
loop
jo
test
adc
in
xor
aaa
sbb
fisubl
sub
lahf
or
add
mov
movsb
sbb
adc
or
in
adc
sbb
sbb
in
xor
fistpll
push
lea
dec
xchg
sbb
test
jns
movsl
add
bnd
dec
call
and
aaa
and
fcoml
mov
adc
shrl
orl
adc
icebp
adc
hlt
enter
lea
callw
adc
add
sbb
call
lcall
adc
xor
inc
rorl
dec
mov
adc
sub
and
inc
add
xchg
inc
lea
adc
rcrb
out
cmp
dec
ja
pushf
mov
ss
ror
in
cwtl
push
stos
imul
push
pop
push
and
repnz
lcall
or
stos
jae
adc
mov
jbe
rclb
cmp
lock
inc
mov
xor
mov
push
arpl
insb
sub
add
mov
pop
leave
pop
and
mov
and
push
or
enter
dec
jmp
iret
dec
jnp
sbb
sbb
imul
mov
test
or
mov
pop
lcall
push
mov
add
inc
add
jbe
pop
fdivs
push
arpl
mov
lds
mov
or
mov
push
imul
or
mov
aaa
sub
push
movsl
jmp
and
mov
mov
test
and
out
sub
pop
jmp
cltd
inc
fs
pop
in
sbb
cmp
jb
sub
adc
arpl
ljmp
sbb
dec
scas
sbb
dec
pushf
pop
enter
cmp
lahf
jmp
loopne
or
xchg
pop
mov
loopne
jle
add
or
inc
cmp
test
ljmp
mov
sbb
push
daa
add
out
push
sbb
out
inc
xor
and
sub
xor
sbb
in
add
nop
mull
or
or
push
xor
test
pop
in
or
sarl
pop
daa
inc
push
popa
ss
shll
mov
xchg
lods
pop
cmp
es
xor
out
cld
or
xchg
mov
or
mov
cmp
fldl
sbb
inc
pop
mov
adc
sbb
push
sub
fildll
popa
jg
add
or
mov
or
jo
push
incl
sbb
jbe
cmpsl
sahf
add
rclb
aad
or
inc
xorl
push
das
pop
cld
enter
push
arpl
inc
rcr
insl
ret
mov
lret
sbb
push
pushl
rcrl
push
sub
inc
push
imul
adc
xchg
pop
incl
push
sbb
pop
adc
adc
push
mov
pop
sbb
mov
jne
cmpb
pop
dec
sbb
sbb
cwtl
pop
inc
cmpl
add
rorb
and
stos
cmp
aam
mov
nop
int
mov
sub
cwtl
icebp
aaa
mov
fadd
ud1
lods
bound
clc
sbbl
jmp
outsl
jle
sbb
adcl
int3
andb
pop
and
add
add
sahf
rclb
aaa
push
fwait
rorl
orb
add
das
roll
das
imul
nop
xchg
mov
jo
jb
xor
pop
add
imul
sub
ss
loopne
xor
pop
inc
data16
imul
sub
rcrb
push
dec
and
xor
push
adc
and
push
xchg
lods
stc
adc
leave
adc
ss
sahf
aad
fisttpl
push
inc
push
fsts
fiaddl
imul
loope
popf
jbe
inc
mov
add
mov
inc
or
push
sub
scas
push
mov
subl
mov
cmpsl
popa
fildll
inc
ret
pusha
dec
push
and
pusha
in
or
les
testl
and
pop
inc
jns
xor
push
mov
adc
cmpsb
imul
in
fidivl
inc
xchg
incb
sahf
shlb
or
sbb
and
xchg
nop
fldcw
loop
push
sbb
sbb
mov
inc
add
dec
pop
or
jg
cmp
repnz
mov
sub
jmp
js
int3
adc
xor
and
pop
fcmovnbe
sbb
je
xor
sub
adc
push
xor
or
rorl
add
mov
andb
lcall
fdivr
or
inc
dec
mov
popf
sub
fdivs
addr16
and
pop
mov
mov
adc
mov
aas
out
inc
mov
push
fs
movb
xorl
aaa
push
xor
fimull
enter
lock
dec
xchg
nop
nop
lds
and
and
out
lret
ss
add
or
and
push
test
loopne
aad
in
jb
and
dec
test
jl
ret
outsb
inc
in
pusha
pushf
test
test
jecxz
pushf
cld
adc
adc
pop
iret
push
cmpsb
sbb
cmpsl
sbb
jecxz
movw
fcoml
mov
ret
adc
pop
inc
inc
push
jb
mov
dec
stc
push
lock
ss
mov
lcall
sbb
mov
loopne
pop
push
pop
andl
cmpsb
imul
sarl
and
pop
push
xor
or
sbb
mov
fists
and
das
pop
fisttpl
mov
test
mov
nop
in
call
add
mov
in
mov
xor
daa
pop
xor
adcl
aam
push
or
adcb
xchg
pop
cmpb
xchg
test
sub
sub
outsl
push
jge
mov
insl
pusha
int
scas
inc
mov
xor
push
add
adc
sbb
mov
lods
sub
outsl
sbb
popa
push
cmp
push
jb
jne
into
adc
gs
push
fwait
mov
inc
xchg
cmp
xchg
xchg
pop
adc
push
in
xchg
push
and
ja
cmp
adc
dec
jb
xchg
add
clc
push
aaa
push
mov
push
add
dec
push
rcr
iret
push
sbb
cmp
mov
cs
push
mov
sub
sub
and
add
jge
sub
scas
pusha
shlb
int
inc
cs
pop
sbb
rorl
xor
bound
imul
movsb
push
dec
cs
rcrl
push
notb
push
xor
jb
mov
iret
and
out
add
iret
fmuls
cmpsb
and
and
lds
pushf
pop
out
in
mov
push
sbb
pop
mov
or
inc
or
aas
cmpl
jae
and
adc
repz
insb
mov
inc
into
pop
call
pushf
jle
mov
xor
adc
and
cmp
insl
das
inc
imul
daa
lcall
aam
or
lds
adcl
and
mov
jnp
cmp
mov
pop
pop
leave
add
lods
pop
adc
push
and
in
mov
xor
pop
imul
dec
notb
sbb
adc
cmp
fwait
mov
add
repnz
nop
bound
and
pop
seto
mov
sarl
popf
push
mov
aad
adcb
cs
repnz
je
and
cs
clc
jbe
xor
sti
adc
pushf
cmp
jmp
inc
lock
jne
hlt
add
hlt
mull
push
aad
fs
xchg
sbb
mov
jno
mov
adc
dec
jo
sbb
inc
inc
pushl
dec
xchg
popa
xor
inc
cmp
add
arpl
and
jg
pop
loopne
or
inc
xlat
xchg
jno
rcll
inc
xor
bound
and
sub
inc
cmpl
or
and
xor
lds
in
xor
test
mov
inc
adc
ljmp
jge
dec
pop
call
xor
mov
in
pusha
lods
jo
cmove
adc
push
or
in
shll
sti
xchg
sub
nop
cmp
xchg
dec
imul
sub
mov
lcall
xor
repnz
lcall
dec
sub
dec
push
popa
adc
sbb
push
leave
popf
mov
sub
rorl
addr16
add
mov
mov
fisubrl
xor
and
push
imul
sbb
les
fnstsw
nop
inc
push
lock
jno
xor
add
sub
stc
cmp
pushf
call
xchg
into
push
or
inc
xchg
loopne
xchg
mov
data16
xor
jbe
test
aam
aaa
imul
ss
rcl
insb
add
pop
jmp
popa
test
in
enter
pop
inc
fldt
cli
int
adc
stos
dec
cwtl
push
les
mov
sbb
shrb
shlb
ds
cmpsb
mov
add
push
mov
stos
jbe
imul
aaa
inc
aas
push
imul
sbb
cmpsb
mov
sbb
xchg
mov
enter
clc
inc
sbb
mov
inc
fldl
enter
inc
ds
and
shrl
cmp
and
adc
lock
gs
movsb
negl
movsb
mov
nop
ja
pushf
cmp
cs
mov
xor
cmp
stos
xchg
jno
fcoms
nop
aaa
nop
repnz
loopne
dec
mov
pop
mov
sub
and
and
adc
mov
sbb
les
std
and
loop
or
popf
xor
mov
xlat
xorl
cmp
cmp
add
mov
dec
adc
in
dec
mov
in
iret
sub
inc
cmp
ret
inc
sbb
jns
cmp
mov
dec
and
test
loopne
stc
inc
adc
aam
cmp
inc
scas
and
fs
cmp
inc
adc
jne
mov
addb
add
adc
cmp
test
nop
dec
cwtl
movsb
or
push
push
mov
sub
lret
mov
push
cmp
xor
repz
adc
push
outsl
nop
fnstenvs
cmp
cmpsb
jns
fwait
push
mov
pop
push
sub
imul
push
das
push
insl
fsts
stos
or
dec
or
or
mov
popa
mov
bound
inc
push
inc
insb
daa
cwtl
adc
adc
adc
lods
es
cmp
in
or
sbb
lcall
pop
adc
aaa
pop
sbb
aaa
aam
shrl
add
aaa
rcl
iret
add
cmp
imul
nop
rorl
adc
cwtl
aaa
cmp
and
sub
aaa
jbe
adc
cmp
push
fwait
shll
sub
dec
fwait
mov
inc
pop
push
or
js
insb
lcall
ds
cmp
es
xor
mov
dec
es
mov
bound
ja
bound
mov
and
jne
cmp
ss
mov
jecxz
aaa
test
movsb
aam
cs
mov
loope
pop
mov
es
pushf
cmp
cwtl
imul
jno
aaa
loopne
mov
outsl
ss
mov
ss
popf
nop
outsl
inc
scas
inc
jbe
aaa
sub
push
mov
jns
pop
sarl
mov
dec
sahf
add
sbb
pop
jb
loopne
test
push
adc
and
sub
inc
test
repnz
push
mov
movsl
adc
inc
es
dec
pop
or
jg
je
mov
push
pop
or
popf
jbe
imul
sub
mov
jmp
enter
movsl
pop
jmp
cmc
or
cmp
js
insl
sbb
sbb
clc
sbb
and
les
ds
xchg
add
aam
loop
test
ss
lret
or
push
fistl
lea
sub
xor
xchg
inc
insl
or
xor
push
dec
inc
cmp
or
or
inc
rorl
add
out
jp
jne
testl
addr16
add
mov
mov
pop
jmp
movw
in
lock
push
sbb
mov
jae
call
lods
out
jno
push
adc
mov
arpl
es
xchg
adc
dec
or
push
add
push
adc
scas
pop
cmpsl
fiadds
daa
fildl
bound
inc
inc
xchg
push
enter
and
enter
add
inc
bound
loope
je
ror
inc
dec
out
jg
outsb
xor
fwait
and
pop
movsl
add
negb
inc
jmp
dec
inc
sbb
and
sbbl
lahf
sbb
outsl
sbb
push
or
and
mov
fs
adc
adc
sti
popa
sbb
pop
leave
aad
fdivl
xor
dec
cmc
ret
pop
in
pop
lahf
inc
mov
es
movsb
jnp,pt
rcll
movsl
jns
cmp
pop
jae
cmp
nop
inc
filds
repnz
fdivrs
iret
cmp
inc
sbb
push
or
mov
cmpsb
inc
xchg
aas
cltd
pop
sub
and
js
add
add
sbb
push
push
mov
mov
xlat
mov
push
je
dec
je
dec
adc
orb
ss
mov
xchg
loope
je
sbb
mov
mov
adc
adc
scas
or
cmp
add
mov
cmpsl
repz
or
lea
sar
cwtl
push
inc
add
pop
js
jne
ds
leave
adc
jns
adc
sub
sbb
dec
ud2
xchg
out
sbb
mov
or
cltd
cmp
cmp
dec
and
loopne
jge
add
scas
sub
inc
and
adc
push
jnp
dec
or
and
xor
sbb
jbe
or
lods
jle
neg
not
xor
fcompl
inc
adc
jbe
nop
dec
fildll
mov
mov
flds
insb
int3
and
cmp
arpl
inc
sarb
dec
enter
adc
add
sbb
ss
add
add
fidivl
lods
lret
ret
fucomp
mov
sbb
sti
xor
es
bound
cmp
shlb
mov
adc
imul
add
jo
movzbl
cmp
ja
xor
cmp
mov
insl
jnp
imul
sub
nop
ret
push
push
push
sub
mov
lods
sbb
pop
daa
dec
ror
rol
xchg
dec
mov
mov
pop
shll
xchg
mov
adc
mov
add
sbb
mov
in
pop
xor
dec
fcoms
divl
and
pop
inc
pop
sbb
insb
loopne
inc
dec
jmp
les
and
xor
xor
loopne
mov
gs
dec
mov
lock
pop
add
sbb
fsubs
pop
and
lret
mov
test
int
mov
pop
insl
pop
mov
and
dec
push
adc
pop
inc
sahf
jbe
xor
shr
adcl
sub
adcb
push
rcll
mov
lock
scas
cmp
ret
dec
jnp
sub
cmp
loopne
dec
fs
dec
add
add
xor
pop
lea
clc
mov
cmp
push
fadds
addb
or
cmp
xchg
dec
or
dec
xor
loopne
inc
cmp
push
jb
sbb
aam
pop
daa
pop
xchg
sbb
lret
mov
shrb
mov
cmp
adc
push
jnp
sti
repnz
jo
in
lock
out
lods
pop
fnstcw
inc
je
or
enter
dec
repnz
pop
std
lea
jbe
pusha
lds
sti
addl
cld
push
ss
gs
mov
daa
fwait
dec
cwtl
imul
cmpsb
pusha
sbb
xor
and
lahf
and
pop
mov
mov
inc
dec
enter
dec
adc
push
mov
mov
xor
jmp
cmp
push
pop
xor
jns
les
or
push
testb
jle
add
jmp
and
and
arpl
pop
stc
sub
into
out
pop
ficoms
filds
sbb
xchg
mov
shrb
mov
rcrb
inc
insl
jo
jns
inc
add
outsl
add
mov
pop
push
ret
popa
and
xor
daa
adc
into
insb
xchg
inc
push
aas
insb
gs
aaa
in
pop
inc
outsl
jne
xchg
jb
outsb
arpl
sbb
pop
or
addr16
insb
or
sub
imul
inc
mov
add
push
btr
xorb
aas
push
outsb
imul
inc
arpl
push
lock
mull
inc
iret
push
mov
mov
and
xor
addl
inc
sarb
aaa
ss
pop
inc
movsb
or
clc
jl
pushfw
cmp
fs
shrd
push
xchg
xor
aaa
in
adc
push
add
pop
std
adc
cwtl
jge
mov
push
insl
and
nop
enter
mov
jno
out
aam
and
das
and
movsl
or
mov
mov
les
ret
cmp
sub
cmp
or
mov
jge
adc
test
fbld
cmp
aam
inc
in
dec
adc
stc
and
mov
sbb
lock
xchg
mov
ss
inc
outsb
jns
scas
mov
push
push
gs
roll
ret
jmp
js
mov
imulb
add
mov
addl
out
fnstenv
xchg
movsl
add
adc
mov
sub
shr
js
push
or
sbb
cmpsb
or
fwait
int
cmp
push
add
and
xchg
loopne
jmp
in
pop
add
cltd
jbe
and
xchg
jno
and
push
adc
sub
js
and
and
sbb
and
sbb
jg
add
iret
xchg
add
cmp
and
xchg
cmpsb
fistpl
or
bound
add
inc
mov
sbb
sti
or
psubusb
mov
testb
setne
push
inc
or
rcll
lcall
popl
loopne
out
mov
outsb
pop
ret
jns
sti
xorb
scas
aam
fdivl
or
cmp
adc
adc
jg
add
fldenv
xor
mov
inc
pop
mov
and
enter
push
xor
push
jl
mov
dec
cmp
pop
stos
and
imul
and
jne
int3
cmpsb
add
jb
pop
fadds
out
push
dec
bound
push
sbb
push
push
adc
pusha
mov
or
into
cltd
rcl
aaa
push
mov
sub
jge
sbb
jnp
je
aaa
adc
les
xchg
inc
clc
xchg
pop
mov
xchg
xchg
lret
aas
ja
clc
mov
push
add
subb
mov
decl
enter
push
or
adc
mov
dec
push
push
mov
mov
sti
xor
adc
cmc
popf
and
or
push
mov
pop
pop
movsl
repz
jo
mov
and
sbb
dec
adc
movb
outsb
rcl
mov
setne
or
sbb
test
in
dec
insl
sbb
int3
addr16
loop
fsubrs
cmp
roll
sub
cltd
dec
xlat
testb
xor
js
xor
pop
or
xchg
ss
fildl
cmp
nop
call
push
mov
imul
sti
cmp
cmp
setg
iret
xchg
inc
mov
repnz
flds
ret
fidivl
loope
push
or
movsb
xchg
mov
push
repnz
lock
jmp
enter
push
dec
leave
mov
pop
mov
dec
sub
xor
inc
sbb
out
test
sbb
enter
in
addl
pop
dec
setnp
in
mov
or
or
loop
cmp
jne
xchg
les
or
cmp
inc
test
nop
icebp
push
adc
repnz
pop
sub
cmp
mov
loopne
fildl
jne
data16
adc
add
jmp
test
xor
arpl
rolb
adc
loopne
cmp
dec
inc
jp
nop
ret
rolb
out
sbb
repz
add
adc
pushf
clc
adc
lods
adc
test
aas
bnd
push
jno
clc
dec
sbb
pusha
add
arpl
pushf
dec
ret
fnstsw
js
jmp
movsl
shr
mov
adc
and
negb
jbe
and
xchg
fs
inc
push
xchg
xchg
xchg
nop
inc
push
sbb
sbb
fwait
push
sbb
popf
sahf
lahf
sbb
addb
addl
xchg
mov
nop
mov
nop
inc
jo
jb
dec
push
xchg
pop
inc
mov
insb
xor
add
in
pop
popa
adc
lea
mov
pop
or
test
or
mov
dec
les
pop
push
add
cmp
adc
in
pop
cmpb
add
jmp
je
loope
aam
cmp
mov
lock
cmpsl
and
jge
mov
dec
sbb
cli
mov
xchg
mov
cmp
pop
xor
xor
jo
mov
nop
inc
add
lea
fistl
xchg
in
add
out
pop
rol
add
outsl
movsb
and
push
dec
add
adc
mov
xor
push
mov
ljmp
adc
sbb
test
jne
or
negl
jmp
das
inc
dec
xor
cmp
jle
popf
lea
adc
jle
icebp
insl
or
fsubrl
ret
push
pop
add
xor
or
shll
cmp
ret
test
jmp
orl
pop
add
test
into
das
fs
push
pop
inc
gs
ja
mov
daa
test
aaa
mov
adc
jg
test
mov
movzwl
push
or
jge
data16
inc
ljmp
je
mov
dec
and
sbb
fisubl
pop
std
inc
add
and
jmp
aas
clc
std
jle
and
jne
jmp
cmp
sbb
testb
out
inc
clc
js
xchg
dec
aas
mov
cld
pop
pop
add
pop
ret
adc
push
add
mov
mov
push
imul
xchg
outsb
xchg
cmp
dec
push
or
stos
mov
push
dec
inc
push
or
out
fstl
cmp
jl
or
dec
sbb
cmp
bndstx
fs
mov
jbe
test
mov
mov
jmp
jmp
lret
test
movsb
jle
jp
decb
or
inc
ljmp
mov
hlt
ljmp
lds
mov
mov
cmpb
je
fidivrs
movsb
dec
lar
ja
inc
or
jmp
jge
sbb
mov
cmp
mov
jp
fldenv
jae
es
or
cltd
dec
sbb
mov
imul
sbb
inc
out
aaa
xchg
jbe
fisubl
ds
pop
in
push
push
loopne
fistpll
jne
mov
mov
cmpb
ja
jb
jns
imul
call
out
mov
or
or
pop
mov
jp
adc
mov
ds
mov
leave
sbbb
adc
orl
add
call
call
or
cltd
scas
icebp
je
mov
sbb
or
mov
lods
cmp
and
stos
mov
out
adc
inc
xlat
out
fldcw
push
xor
dec
push
cmp
not
daa
test
ss
and
fst
les
bound
xorl
pop
pop
iret
lds
adc
ret
and
in
scas
or
enter
and
out
sub
inc
xor
sbb
sbb
pop
dec
hlt
movsb
bound
scas
aad
pop
stos
dec
fadds
sub
dec
test
scas
adcl
sub
xorl
or
aas
jns
je
jmp
mov
fsubrp
sbb
nop
iret
cmpsb
adc
fsubr
fildl
jg
mov
mov
sub
or
cltd
adc
adc
or
or
xchg
cwtl
dec
xor
adc
lock
data16
loopne
pusha
xchg
outsl
sub
push
adc
push
jmp
fisttps
lahf
mov
push
xorb
shlb
jecxz
jne
test
mov
add
mov
ljmp
sub
mov
add
in
pop
xchg
ss
xor
dec
sbb
fcomps
es
test
xchg
cmp
pusha
out
ja
cwtl
hlt
xlat
hlt
ret
dec
add
iret
or
sub
jmp
pop
push
ds
cmc
hlt
jmp
or
push
fs
adc
add
les
clc
aas
jne
in
es
xchg
cmp
cld
xor
ja
adc
lods
pop
das
popa
adc
lods
inc
jmp
popa
mov
clc
cltd
inc
cmp
stc
jne
ret
cltd
add
mov
loop
mov
dec
repz
jne
lods
or
adc
cmp
imul
fstpt
mov
imul
shll
int3
jle
xor
cs
psubusb
insb
or
jo
push
jmp
aad
mov
mov
rclb
xor
add
jge
imul
push
jnp
sub
mov
xchg
jle
cmp
test
mov
cmp
out
inc
pop
xor
ret
dec
adc
xchg
push
dec
adc
pushf
xor
sub
ja
push
mov
arpl
imul
sub
and
sub
popl
xchg
rolb
inc
mov
in
ds
mov
inc
fistpll
pop
fmuls
sbbb
aaa
pop
lret
add
add
push
ss
jge
jecxz
cmpl
pushf
mov
push
fldz
add
mov
sbbb
les
fcomps
sbb
xchg
mov
nop
dec
push
jnp
fiaddl
jg
xor
sub
jp
inc
push
inc
or
mov
sub
sbb
dec
pop
jmp
sbb
sub
jmp
or
cmp
pop
push
div
pop
lea
daa
push
sarb
or
mov
jle
and
mov
fildl
sbb
adc
rcrl
fisubl
jg
clc
je
jne
jae
pop
add
test
pop
or
jae
pop
add
jno
pushl
jo
insb
xchg
popa
pop
clc
mov
push
fs
add
ja
add
add
jo
sti
fstl
inc
mov
ret
gs
pop
int
adc
in
pop
orl
add
cmp
push
movsl
and
add
ficoml
adc
xor
inc
mov
add
or
dec
add
and
arpl
mov
sbb
xlat
mov
pop
loopne
jbe
sbb
fsts
jbe
stc
sbb
cmp
lock
or
inc
add
nop
ror
std
jmp
and
sbb
rcr
ret
push
jp
leave
outsb
addr16
pop
mov
dec
jo
jmpw
jne
outsl
pop
cmp
sub
or
popa
add
pop
inc
inc
push
mov
in
or
mov
dec
and
insb
push
sbb
pcmpgtb
jo
xchg
inc
je
mov
jmp
pop
dec
mov
dec
push
sbb
dec
sub
add
push
adcl
incl
imul
add
ret
mov
xor
gs
arpl
std
add
imul
push
xchg
or
gs
inc
insb
popa
inc
mov
nop
js
or
inc
imul
int3
xchg
add
push
outsl
test
mov
sbb
adc
dec
outsl
mov
les
sbb
sub
fdivrs
insb
jns
fs
dec
testl
mov
and
aaa
push
push
int3
into
mov
inc
je
insb
or
cmpsl
add
add
or
dec
mov
insb
gs
ja
adc
cmp
test
or
push
push
add
xor
hlt
add
dec
push
outsl
add
out
mov
je
add
nop
jo
and
out
ss
cmpl
dec
gs
out
pop
cwtl
cmp
test
add
dec
loopne
cld
inc
jne
jo
in
sbb
out
addr16
int3
inc
jbe
popf
or
push
fldenv
or
jge
testb
cltd
fdivr
push
add
loopne
cmpl
or
sti
shrl
dec
ficompl
mov
nop
sbb
xchg
inc
adc
mov
lock
sub
mov
pop
dec
imul
sub
dec
lods
outsb
mov
push
xor
aas
daa
or
dec
and
cld
cld
popf
pop
and
inc
pop
shrl
lods
nop
push
insb
scas
aas
scas
jbe
xor
pop
repnz
and
lods
scas
lods
push
mov
and
inc
sbb
mov
push
in
nop
or
aas
cmpsl
lods
and
xor
mov
fs
add
inc
fs
dec
imul
scas
fcmovnb
inc
enter
jae
and
leave
adc
aas
pop
inc
push
popa
mov
mov
dec
push
je
je
rcl
movswl
mov
push
mov
ss
sbb
test
xor
cwtl
xchg
jb
or
rcrb
outsl
mov
or
add
lret
jge
or
jg
mov
pushf
adc
pop
mov
cmp
cltd
dec
fisubs
mov
lock
mov
ds
js
or
jbe
pop
mov
fadds
testl
xchg
or
and
fsubs
dec
pusha
shrb
je
inc
xchg
mov
cs
mov
outsb
enter
adc
aam
lock
inc
int3
test
dec
imul
outsl
add
xor
shll
shll
gs
decl
dec
jne
out
ljmp
stos
mov
add
dec
mov
jb
cs
pusha
jno
hlt
jo
call
adc
xchg
js
das
xor
dec
mov
and
aas
fistps
stos
movl
aas
adc
mov
sbb
sub
or
add
aas
andb
cmpsl
pop
cwtl
lods
push
add
decl
lods
test
cmpsl
jb
jae
mov
out
pop
and
or
insl
scas
test
push
test
pusha
or
cmpsb
mov
cmp
int3
popa
jbe
push
jns
inc
sub
ljmp
lods
adcl
adc
push
mov
xor
and
jno
inc
xor
adc
test
xor
sub
adc
adc
in
lods
fucom
pop
xor
xor
inc
into
xorb
clc
pop
aam
loop
mov
inc
and
stos
mov
mov
push
mov
stos
outsl
mov
dec
cmp
outsl
insb
sub
pop
dec
aas
insl
ja
adc
sub
push
lock
insb
je
shll
sbb
mov
jb
lods
mov
mov
imul
rorb
std
pushl
sti
stos
sarb
push
rorb
sbbl
pop
and
or
js
inc
jne
mov
pop
push
adcl
and
and
daa
pop
roll
inc
lock
je
lahf
or
cmovns
inc
fs
sar
mov
xor
pushf
jae
push
rclb
sahf
cmpsb
jno
negl
sti
scas
cmp
outsl
xor
fimull
lods
pop
mov
aam
add
push
adc
leave
add
mov
popf
pop
ret
daa
pusha
mov
enter
mov
mov
dec
mov
mov
lret
push
mov
push
mov
es
push
cld
mov
outsb
aam
cmpsb
mov
negl
push
push
mov
hlt
loopne
push
inc
mov
or
pusha
sbb
nop
scas
pop
sbb
ljmp
xor
or
jmp
mov
ja
js
ss
pop
cld
xor
jne
out
test
mov
fadd
les
movb
push
fstpl
push
sbb
pop
cmp
dec
ret
fidivl
push
and
ds
pop
and
ficoml
insb
lds
jbe
dec
fwait
ja
push
rolb
shl
jbe
cmp
iret
mov
dec
pop
add
jbe
jl
add
jo
inc
cwtl
js
insb
add
mov
int3
enter
jne
insb
leave
mov
fsubs
pop
movsb
cs
mov
adc
sbb
adc
or
movsb
lods
int3
pop
shlb
jne
xor
orb
push
dec
inc
inc
mov
cmp
or
aam
movsb
les
into
out
sub
daa
cld
xlat
sbb
or
jb
into
adc
popa
adc
out
jns
jp
adc
jns
and
sbb
add
je
add
iret
rep
loopne
push
hlt
notl
jnp
xchg
add
mov
es
fcom
push
shlb
push
adc
ficoms
cmpsb
test
jl
add
pop
in
and
roll
incl
pusha
rol
push
add
enter
mov
or
or
enter
adc
test
sbb
mov
dec
enter
mov
and
mov
in
in
inc
jl
dec
mov
lcall
jnp
dec
shll
std
or
fs
insb
sbb
bound
adc
jge
dec
xchg
sbb
push
or
cmp
adc
push
add
push
imul
test
mov
nop
jge
icebp
push
sbb
xchg
add
or
add
mov
mov
add
lock
jns
call
loopne
push
pop
jle
jle
sbb
sub
ss
jo
mov
or
stos
jl
popf
cmp
xor
sbb
xchg
lret
in
push
adc
sub
add
xor
and
push
fwait
insl
add
ds
fs
jo
pop
push
pop
add
arpl
es
out
add
pop
mov
fists
push
adc
push
inc
pop
add
sub
cmpsb
lea
sbb
adc
inc
mov
inc
aas
out
push
jmp
cmpsl
cld
or
andl
fidivs
lea
mov
lahf
fadds
sbb
into
inc
pusha
jo
push
movsl
rcl
incl
into
pop
call
xchg
cmp
mov
mov
sub
imul
and
adc
xchg
dec
es
aam
cmpsb
imul
push
jno
jnp
outsl
push
mov
mov
xchg
pop
inc
int
dec
scas
push
popf
cld
addb
sahf
addb
scas
lret
xchg
rcl
ss
inc
cmpl
push
arpl
inc
fisttps
cmpsl
in
add
das
fs
insb
es
xor
jo
pop
pop
mov
push
orb
xor
scas
pop
push
mov
and
call
call
stc
clc
push
push
push
push
imul
push
out
push
jmp
sub
xor
jl
push
pop
lods
mov
mov
ficoms
and
inc
into
push
push
xor
and
scas
mov
mov
sbb
mov
xchg
xor
int3
sub
jg
stos
pop
add
dec
or
cmp
sbb
push
add
test
push
popa
addr16
movsb
addb
inc
mov
jl
xor
or
push
mov
adc
in
subl
call
enter
pop
hlt
roll
arpl
dec
imul
and
pop
insb
push
sbb
mov
push
push
mov
push
enter
sub
mov
mov
mov
pop
xor
push
hlt
push
enter
push
mov
cmp
mov
or
mov
sub
stos
sbb
data16
push
sub
fs
pop
les
jns
and
push
pop
or
mov
push
xor
test
insl
daa
mov
sbb
lahf
les
cltd
js
cmp
jne
add
mov
pushl
test
pop
jo
and
pop
fs
or
inc
jb
jne
sbbb
incl
or
pop
mov
xchg
lods
jae
or
mov
sub
orb
xor
inc
sbb
in
js
jo
dec
sarl
and
bound
cmp
iret
or
jecxz
jmp
xchg
lret
mov
push
pop
pop
fs
aas
fadd
xchg
cmp
or
push
daa
mov
mov
xchg
test
push
mov
or
fcomp
das
or
and
jmp
sbb
mov
jmp
dec
add
enter
pop
fidivrs
and
adc
stc
mov
jg
inc
or
fisubl
aaa
and
pop
or
sbb
ja
cmp
dec
or
mov
mov
sub
inc
add
mov
mov
out
add
cwtl
or
insb
lods
push
lods
jg
pushf
roll
push
inc
add
adc
lret
and
sbb
clc
addr16
and
std
add
rol
and
sub
mov
jl
and
push
sbb
test
sbb
add
xchg
nop
pop
mov
in
addl
or
push
inc
or
lds
jns
sub
mov
gs
jne
pop
add
jb
hlt
imul
adc
cli
cld
cld
xor
sub
ficoms
lods
xchg
cld
or
push
mov
and
add
or
push
stos
sbb
sub
fsts
ljmp
push
mov
popf
mov
cmp
ss
repnz
loopne
fcomps
mov
cmp
and
cwtl
sbb
adc
inc
cmpsl
mov
repnz
jno
es
popa
add
and
fmuls
or
mov
imul
pop
inc
and
and
divb
push
adc
imul
sbb
imul
incb
mov
inc
mov
dec
and
pop
dec
shrl
inc
pop
clc
enter
or
sarb
pop
mov
in
fiaddl
movb
in
push
mov
push
lea
scas
pop
into
stos
pop
and
jl
inc
hlt
cltd
jbe
push
dec
jne
rclb
mov
and
mov
movl
mov
xchg
push
hlt
jg
roll
test
inc
rcr
xchg
dec
enter
xchg
mov
dec
cmpb
insl
and
inc
xchg
dec
mov
and
repz
imul
out
nop
pop
mov
fdivr
inc
outsb
mov
or
xchg
mov
mov
sub
ds
sub
lock
sbb
rcr
scas
ss
jne
push
sbb
insb
add
xor
inc
xlat
xor
rcrb
dec
xchg
jp
push
call
jo
jbe
cmp
cmp
push
imul
lock
fisubrl
ret
icebp
cmp
push
xor
jg
fidivl
jecxz
dec
call
mov
pop
cmp
cmp
mov
add
ja
iret
mov
and
sbb
or
into
xor
ja
lret
out
fisttpll
pop
pop
ja
inc
daa
xorb
sbb
pop
int
ror
sub
pop
fcoms
pop
xor
cmp
push
or
add
pop
mov
xchg
add
hlt
xchg
cmpsl
dec
or
and
cli
cltd
jns
push
call
les
enter
mov
sarb
and
add
dec
sub
xor
enter
call
cmp
daa
rolb
push
push
add
inc
and
jae
insl
pop
cwtl
mov
jno
imul
das
pop
mov
arpl
inc
lahf
pop
inc
test
aaa
push
shrl
add
jo
xor
xor
rcll
jae
add
inc
push
fildl
cmpsl
mov
push
adc
and
adc
sbb
xlat
mov
sub
mov
or
stos
sub
popa
pushf
loopne
pusha
insb
ja
ja
cmpsb
push
or
sahf
leave
cmp
ja
push
adc
push
jp
mov
test
inc
push
es
push
filds
jg
or
shlb
mov
sbb
out
cmp
nop
jmp
jmp
sub
cmp
and
dec
inc
rol
cmp
push
shll
xor
xchg
hlt
aas
clc
mov
test
js
sbb
dec
push
jns
mov
xchg
je
jl
adc
push
test
js
jl
repz
cld
das
lock
dec
or
mov
sbb
push
add
enter
jns
and
hlt
popf
das
xchg
push
adc
es
addr16
ss
pop
or
xchg
pop
dec
jb
push
inc
mov
jmp
cld
mov
enter
inc
orl
xchg
adcb
scas
or
roll
sbb
imul
add
or
or
sub
orb
pusha
leave
mov
pop
push
fcomps
pop
xchg
adc
scas
shll
sub
mov
leave
mov
xchg
cmp
gs
ja
or
and
push
and
push
notl
xchg
mov
rolb
inc
xchg
and
shlb
xchg
lea
inc
cmpsl
add
ret
movsbl
pop
sahf
jle
or
or
loope
jnp
or
and
outsl
cmp
inc
mov
add
jnp
mov
sarl
mov
or
sub
mov
pop
shlb
lods
xor
clc
fs
adc
test
sub
stos
mov
mov
aaa
in
push
je
sbb
push
aaa
pop
rcrb
xor
cmc
lahf
or
pop
xor
sbb
pop
adcl
sbb
call
pop
cmpl
ja
inc
divl
aaa
movsl
aaa
jmp
pop
sbb
je
incb
mov
sbb
sub
push
test
sbb
pop
push
push
xor
adc
sbb
icebp
add
test
sub
inc
subl
aas
push
loopne
ret
add
sub
fdivrs
mov
popa
pusha
aam
decb
shlb
sbb
sbb
adc
push
je
jmp
imul
and
mov
push
cmp
mov
jno
adc
js
mov
push
or
push
and
adcb
inc
arpl
loopne,pt
imul
xchg
xor
cmp
jg
push
adc
jo
je
ljmp
test
sub
cvtdq2ps
add
les
fmuls
xchg
mov
in
dec
sub
dec
xchg
pop
push
cmp
xchg
jge
lahf
push
in
sbb
and
pop
pop
add
icebp
or
shlb
cmp
enter
push
cs
and
cltd
ss
pop
sbb
push
divl
pop
rol
lea
xchg
outsl
aas
push
sbb
stos
test
xchg
adc
push
cmpsl
xor
rorl
ret
je
sbb
xor
push
ljmp
pop
leave
sub
clc
jns
xchg
xchg
or
and
cmpsb
sahf
ret
iret
sbb
mov
arpl
pop
xor
fs
push
das
roll
dec
add
sbb
cwtl
mov
inc
xchg
rorl
mov
push
mov
frstor
inc
adc
and
cmp
jne
cmp
mov
cmp
xchg
push
push
pop
js
adc
sub
sub
and
cmp
clc
xorb
data16
and
lds
popl
jmp
push
pop
cli
ret
xor
cmp
push
push
jmp
incl
or
leave
push
pusha
mov
fldl
mov
pop
test
mov
push
orl
orl
inc
into
insb
mov
adc
add
dec
or
jge
sti
mov
sbb
shl
loop
adc
or
mov
push
hlt
mov
insb
cmp
lock
dec
jg
pminub
adcb
inc
movsl
xchg
sbb
sbbb
imul
fnstenv
cmp
or
into
sbb
sub
into
popf
mov
xor
inc
push
in
sbb
xor
xchg
or
xchg
jnp
push
adc
iret
fimull
mov
mov
adc
scas
sub
ret
dec
or
outsl
shrb
fldcw
push
jp
shll
add
or
iret
imul
icebp
in
hlt
sub
jmp
inc
dec
jno
and
cmp
add
jnp
or
shrb
cmp
jne
sbb
leave
ffreep
cmpsb
adc
add
jle
jae
xor
mov
cmp
inc
mov
rorl
or
aas
push
sbb
mov
inc
mov
addr16
and
mov
mov
add
mov
sub
inc
stos
or
loopne
int3
add
cmp
je
push
mov
cmp
mov
sbb
fldl
adc
inc
jmp
movsb
cwtl
sub
pop
or
icebp
out
add
cmp
shl
imul
add
cmc
mov
jns
jns
popa
jle
dec
xorb
mov
test
je
loopne
add
inc
arpl
xchg
push
call
std
jg
dec
mov
dec
dec
inc
jne
filds
inc
and
push
daa
pop
mov
pop
dec
mulb
inc
mov
push
cmovbe
add
add
test
daa
push
push
ljmp
sbb
aas
out
xor
fmull
mov
xor
xchg
cmp
jo
imul
and
jmp
inc
jne
cmc
in
pop
jl
jmp
dec
add
add
pushf
adcb
or
mov
xchg
jnp
mov
mov
mov
inc
mov
aaa
shll
or
cmpsl
push
and
add
jl
flds
push
icebp
lea
add
lods
jne
xchg
pusha
mov
push
shlb
nop
inc
sub
lahf
ficoms
adc
dec
pop
imul
or
and
cwtd
out
sbb
push
in
xlat
cmp
js
sub
push
roll
add
shrl
jo
nop
and
pop
rorl
and
shr
mov
insl
pop
push
pop
pop
add
push
ret
lcall
mov
pop
test
lret
ret
in
inc
xchg
clc
fwait
add
adc
hlt
inc
addr16
lahf
nop
add
push
leave
aam
add
mov
mov
and
push
and
or
adc
cwtl
push
mov
nop
nop
shll
inc
sub
xchg
add
xchg
push
sub
pusha
loope
mov
fnstenv
test
sub
leave
mov
out
nop
imul
mov
push
mov
sub
aas
movsb
pusha
sub
mov
push
inc
push
mov
rorb
sub
sbb
cmpsl
bound
sub
xor
mov
repz
test
cmpsl
insl
push
add
and
lahf
imul
movsl
push
lods
mov
shrb
mov
xchg
dec
pop
fiadds
sub
cmp
loope
xchg
xor
inc
orb
je
push
or
cmp
jo
enter
add
add
rcll
add
test
jge
and
adc
mov
clc
add
in
sbb
push
dec
sbb
call
out
je
dec
jmp
or
jno
loop
movsb
inc
push
inc
jge
xchg
es
push
insl
fcomps
les
stos
mov
and
jnp
andl
ficoms
pop
inc
fcoms
add
cmp
jae
icebp
fistps
pop
fs
je
stos
adc
btr
cmp
jl
push
sub
push
inc
adc
jp
lods
jmp
xchg
fdivs
mov
push
mov
jl
jl
lahf
add
sbb
ja
test
pop
ja
dec
bt
sub
xlat
jb
add
jmp
in
sti
push
adcl
jmp
inc
cmp
jne
inc
decl
jne
les
lods
fisubl
leave
nop
sbb
push
adc
shrl
test
or
lcall
cs
mov
push
or
mov
test
and
add
cmp
pop
cmpsl
test
push
sbb
pop
cmp
jge
scas
nop
push
mov
add
ljmp
xorb
mov
lock
mov
ret
mov
loope
loop
xchg
fbstp
sbb
lret
pop
outsb
jmp
icebp
enter
cmpsb
pushl
jns
sub
xor
adc
cmp
mov
cs
andb
in
add
inc
add
arpl
aam
add
push
adc
aam
pop
jns
pusha
mov
icebp
fisubrl
aaa
aas
add
push
mov
pop
movsl
std
adc
adc
js
inc
daa
adc
mov
mov
pop
outsb
aaa
inc
testb
gs
sarb
test
jmp
xor
daa
push
push
adc
jo
lea
mov
test
xchg
fwait
or
dec
push
call
adc
push
repnz
js
mov
mov
sub
sub
mov
mov
scas
popa
jnp
and
mov
jo
adc
add
pop
cmpl
out
cltd
inc
outsb
les
dec
sbb
loop
add
xchg
xlat
sbb
push
pop
and
mov
jb
rcll
data16
in
mov
mov
cmpsb
xchg
dec
sarb
or
xchg
mov
sub
out
sti
sub
rorb
jl
push
in
cmpsl
test
sbb
in
in
in
dec
dec
insb
stos
in
loopne
dec
sub
pop
shll
sub
and
lock
insl
mov
sarb
repz
push
dec
sbb
lock
movsl
pop
dec
jno
into
jne
loop
mov
xor
jmp
add
or
adc
sub
push
xchg
neg
cmp
xchg
cltd
dec
mov
lea
sub
xchg
cs
insb
adc
sbb
aam
or
scas
and
xchg
and
mov
and
add
mov
cmpsb
pop
mov
and
mov
inc
pushf
jl
rorb
in
ret
sub
icebp
mov
nop
imul
ret
mov
mov
js
hlt
jp
test
adc
popf
or
rorb
dec
inc
cmpsb
jmp
add
xchg
cmp
or
or
jg
shrd
dec
mov
cmp
add
jne
cmp
or
icebp
fcomps
inc
inc
jp
inc
mov
add
lcall
push
mov
add
out
mov
andl
or
cmpsl
sahf
shl
pop
add
and
mov
psubb
shrl
out
inc
xchg
or
add
pop
cmpsb
push
adc
cmpsb
inc
or
movsl
sub
loope
add
cmp
loope
test
mov
add
pop
and
add
movsl
xor
add
in
sbb
insb
leave
mov
shrl
popa
sub
dec
cld
pop
jae
bound
add
or
cmpb
jne
sbb
cmc
loopne
test
gs
nop
ds
das
mov
lea
aad
dec
jne
and
sub
or
bound
sub
inc
mov
lcall
pop
mov
add
aam
loope
xchg
lock
loop
pop
pop
push
adc
decl
cmpsb
ja
jbe
adc
adc
lret
cmp
and
and
fisttps
push
mov
add
pop
mov
xor
or
mov
ja
xchg
mov
scas
pop
mov
sub
jb
dec
or
adc
scas
and
into
pop
ret
in
adc
and
xor
inc
adc
fimuls
mov
xchg
sbb
xchg
andl
sbb
add
xchg
sar
rclb
mov
jo
mov
arpl
frstor
test
jmp
cmp
sbb
sbb
and
test
icebp
and
sub
int3
sub
mov
push
sbb
cmp
pusha
cmp
jae
call
or
fildl
and
dec
mov
outsb
xchg
pop
mov
add
jne
addb
jp,pn
sbb
repz
jbe
inc
add
enter
pop
pop
push
push
add
add
jb
xchg
dec
jmp
test
xlat
fbld
dec
mov
xor
inc
sub
add
outsb
pop
jmp
add
ja
fsubrp
pop
daa
es
dec
clc
sarb
repz
adc
jecxz
lahf
push
ret
mov
dec
mov
xorl
cmp
adc
jl
sub
shld
mov
cltd
ret
addl
xor
test
dec
in
add
adc
mov
xor
scas
xor
xor
fnstcw
mov
lock
push
jecxz
jl
in
push
in
dec
aaa
aam
cmp
mov
or
mov
push
add
cmp
xchg
pop
movsb
add
fs
inc
or
push
fucomip
mov
or
popa
movsb
push
push
repz
add
or
add
push
ss
inc
fidivl
dec
push
adc
xchg
enter
inc
or
popf
ja
ljmp
sbb
and
mov
nop
add
daa
enter
cwtl
mov
nop
or
xlat
das
mov
pop
imul
lea
test
cmp
int
mov
in
and
cmp
and
dec
push
imul
mov
into
icebp
add
fcoml
inc
dec
sbb
lret
sar
mov
pop
aaa
and
pop
movsl
scas
adc
les
lcall
sbb
push
mov
cmp
sbb
inc
loopne
shrb
sub
push
sbb
sub
jne
xor
pusha
xchg
mov
iret
dec
pop
xchg
shll
shl
and
adc
push
psubb
push
add
sbb
xor
mov
popa
fwait
pop
call
mov
call
sub
push
sbb
insb
leave
sarl
in
mov
adc
jle
xor
lds
xor
mov
jo
mov
mov
xor
sub
or
daa
mov
add
or
cld
pop
inc
jno
dec
icebp
or
mov
cmp
or
dec
mov
jmp
inc
inc
cmp
hlt
out
pop
add
repnz
and
xor
or
sbb
fcoml
push
mov
push
movups
xchg
and
mov
dec
mov
ret
inc
test
in
dec
inc
test
lods
cmp
push
xor
cmp
cmp
push
pop
add
xchg
sub
jg
lret
popa
cwtl
mov
adcl
adcb
pop
add
insl
out
dec
dec
ffreep
or
pop
addr16
test
mov
mov
xchg
jle
mov
push
lret
xor
and
lahf
cmpsb
mov
sbb
sub
in
or
mov
outsl
push
clc
push
nop
inc
rorl
sbb
mov
enter
into
push
push
jg
add
sub
jae
sub
mov
adc
add
pushf
cmp
or
sbb
clc
shlb
bound
dec
push
and
pusha
loopne
fs
and
mov
lea
inc
pushf
loope
adc
sub
push
fistps
sub
inc
mov
mov
fildl
gs
mov
mov
cmp
andb
inc
and
lret
lock
push
mov
int
scas
sub
imulb
push
xor
leave
xchg
js
mov
inc
sub
aad
cmp
repnz
mov
fdivrl
push
mov
sub
call
mov
adc
xor
mov
adc
cmpsl
inc
xchg
sbb
lret
and
scas
outsl
movsl
adc
cmp
xor
mov
push
mov
mov
repnz
sub
ret
rorb
call
cmp
pop
mov
fiadds
pop
pop
jmp
or
ljmp
sub
out
ds
imul
or
dec
dec
shll
add
adc
xchg
sbb
mov
test
lret
std
pop
adc
aad
xchg
push
mov
stos
add
push
call
fs
sarl
fwait
cmp
shll
test
cltd
mov
inc
push
mov
test
add
and
outsl
das
lods
in
jae
in
mov
cmp
jne
pop
or
add
add
jnp,pt
push
xor
mov
xor
mov
or
mov
jnp
jae
loopne
std
mov
cmp
jne
mov
insl
rol
into
shlb
hlt
test
sbb
test
adc
mov
cs
je
call
movsl
mov
rolb
cmpsb
das
add
aas
and
outsl
das
push
cmp
jne
neg
in
push
testb
orb
sbb
pop
inc
inc
add
push
jae
mov
inc
mov
fs
lret
dec
cmp
inc
popf
gs
pop
outsl
ja
sbb
add
xchg
sub
call
inc
or
hlt
jbe
jnp
adc
test
sub
sub
mov
cmp
jb
lcall
sbb
adcb
inc
sub
cmp
xchg
cmp
sub
imul
jmp
aam
push
cmpsb
nop
push
hlt
jno
fistpl
add
sbb
mov
mov
sbb
adc
add
or
fdivs
mov
jmp
aaa
sub
mov
sub
test
jne
mov
xchg
xchg
test
pop
add
inc
ret
push
and
xorb
push
sub
adc
test
lea
aas
cwtl
inc
stos
and
stc
add
lock
sub
int3
and
xor
push
loopne
scas
or
subl
cld
jmp
mov
rorl
mov
scas
inc
rorb
dec
add
pop
add
popl
lock
adc
or
dec
mov
cmp
aas
mov
loopne
sarb
mov
mov
add
rorl
xchg
xor
xchg
pop
or
or
repz
and
mov
and
push
shll
out
imul
or
pop
addr16
test
push
cs
adc
aas
aam
loop
pop
fildl
dec
push
sbb
cld
xchg
adc
sbb
add
inc
cmp
cmpl
xor
xor
cmpsl
push
xor
cmp
test
mov
pusha
xorb
sbb
shl
addl
movb
mov
push
cli
test
jle
sbb
or
clc
mov
add
jg
aaa
pop
je
call
push
repnz
push
and
sbb
mov
dec
push
fisubs
adc
frstor
xchg
aad
and
xchg
push
cmp
mov
pop
mov
xor
addl
jge
pop
xchg
add
shr
mov
inc
xor
inc
inc
insl
or
and
inc
xlat
xor
jg
jl
jg
jnp
and
add
aam
xchg
inc
adc
arpl
pop
pusha
ljmp
jle
jge
push
cmp
inc
mov
popa
hlt
jl
adc
jmp
cwtl
sbb
lea
sbb
sahf
add
adc
xor
adc
cwtl
nop
push
jno
add
push
xchg
or
rorl
shll
test
dec
sahf
stc
lret
or
js
mov
cmpsb
push
push
jge
or
jle
push
add
pusha
out
xchg
cmpb
mov
js
cmovb
dec
add
jbe
xorb
mov
pop
mov
fldcw
sub
cltd
jo
dec
insl
ret
insb
mov
insb
jno
sub
pop
xlat
into
add
mov
mov
adc
cs
fcompl
lea
cmpl
cmpl
xorb
adc
hlt
fildll
inc
sahf
jbe
and
fsubl
cmpb
imul
add
je
xchg
xor
xor
xchg
aaa
inc
push
data16
inc
ds
jo
sub
push
lock
stos
mov
xchg
cs
mov
lret
add
sar
data16
or
cmp
jle
call
pop
mov
fstp
or
jne
loopne
jbe
arpl
xor
lds
mov
jecxz
and
pop
add
add
jno
jnp
in
inc
inc
or
call
lcall
sbbb
imul
scas
pop
outsl
adc
or
adc
sbb
repz
das
xor
push
push
pusha
fsubl
or
or
and
jecxz
mov
xorl
sub
rcrb
in
nop
adc
xor
ljmp
jge
in
in
mov
pop
arpl
lret
movsb
shl
into
stc
mov
and
fdivrl
cltd
sub
imul
push
lret
mov
add
mov
inc
mov
inc
cmpsb
leave
fldl
lock
and
inc
pop
and
adc
fstps
call
sub
xchg
mov
shrb
inc
sub
int
mov
lods
xchg
arpl
mov
data16
adc
inc
or
pop
mov
sbb
xchg
out
adc
mov
in
fbstp
jg
test
pop
cmp
into
mov
or
shl
push
sub
bound
in
sub
lret
fwait
in
faddl
jae
cmpsl
icebp
iret
cmp
xchg
push
into
xorl
imul
or
pusha
xchg
icebp
mov
loop
add
jmp
push
mov
sbb
and
in
jl
and
fucomp
pmulhuw
mov
cld
movsb
push
arpl
push
or
or
fs
ja
dec
leave
loopne
faddl
xchg
inc
fsubrl
pop
add
push
repnz
add
pop
into
fcoml
out
or
xchg
scas
xor
add
dec
imul
ds
inc
aad
or
shrb
jae
sub
jecxz
clc
inc
jg
cmp
dec
icebp
and
mov
adc
or
lods
cmpw
je
dec
or
adc
out
add
add
sbb
inc
bound
jo
mov
adc
or
sahf
push
ljmp
andl
inc
mov
add
enter
mov
add
adc
mov
out
lods
rcll
lock
or
xor
cmp
pop
cmp
icebp
or
rorl
add
cmp
jb
test
in
pop
cmp
xor
xchg
cmp
je
push
jne
je
push
adc
ror
inc
adc
mov
out
loopne
xchg
adc
lods
shrb
pop
fmull
pop
js
mov
or
inc
push
lods
xchg
fimuls
mov
out
xor
add
js
mov
jle
or
ret
fiaddl
cmp
xchg
ret
lds
and
dec
mov
mov
add
nop
daa
stc
or
inc
sub
sbb
mov
outsb
movb
xchg
cwtl
push
loop
icebp
inc
popa
cmp
lea
shlb
jae
pop
inc
subl
xor
and
dec
jmp
sbb
lods
sbb
enter
adc
and
inc
movsb
jge
dec
rol
fs
xor
sub
jge
scas
inc
adc
cltd
outsl
in
fstpt
test
int
xor
push
paddsw
je
and
scas
shrb
add
dec
mov
push
adc
push
add
nop
mov
add
jne
stos
dec
fwait
repnz
test
loopne
dec
fwait
inc
sbb
mov
adc
ret
push
and
fsts
pop
call
out
mov
adc
rcrl
and
adc
push
cmp
popa
pushf
pop
pop
cwtl
xchg
push
bound
mov
pop
fisubrl
sbb
dec
push
dec
icebp
movl
or
mov
das
outsl
lahf
mov
pop
clc
popf
or
adc
popf
rorb
scas
sbb
cmp
cmpsl
cmp
add
add
lock
fs
adcb
push
lcall
push
push
jb
jo
imul
add
cltd
fsubr
mov
shrl
mov
out
mov
retw
lahf
cmp
pop
test
fisubl
out
mov
ficoml
push
mov
arpl
out
and
jge
ja
fiadds
add
pushf
jne,pn
test
and
int
adc
js
pop
jge
inc
sbb
jmp
adcl
js
sbb
dec
hlt
aas
jmp
pop
add
das
rolb
add
shlb
aaa
push
bound
ljmp
lods
add
test
mov
movsb
in
jmp
aad
cmp
xchg
inc
jo
inc
sahf
adc
jl
addr16
jmp
mov
fyl2x
ljmp
adc
dec
loope
pop
cmp
mov
or
sbb
test
jnp
lret
ds
out
das
push
add
pop
cwtl
sub
add
xchg
cmp
shlb
rclb
lods
sbbl
lods
aam
aam
or
outsl
and
inc
push
cld
xchg
dec
dec
xchg
xor
push
add
inc
sbb
mov
inc
add
jg
cmp
jno
sbb
inc
dec
fwait
dec
dec
mov
xchg
cmp
xor
test
push
stc
mov
dec
xorb
sub
jo
imul
sti
push
mov
pushf
sar
gs
aaa
hlt
pop
inc
cmp
in
jecxz
jl
imul
fldcw
and
cwtl
or
add
inc
lsl
addr16
pushl
xor
mov
inc
test
jns
sbb
inc
hlt
aam
push
dec
loop
xor
imul
push
aam
fnstcw
xor
lock
dec
loop
or
sub
jbe
cmp
fstl
pop
sbb
repz
push
xor
adc
dec
mov
push
lock
inc
or
sub
into
inc
inc
cmp
inc
enter
adc
test
faddl
lods
ret
arpl
adc
popf
xchg
cmpsl
lahf
mov
outsl
jl
rorb
hlt
pop
push
mov
imul
add
add
add
movsb
subl
push
lock
js
jecxz
ds
mov
ret
mov
out
jmp
into
push
or
mov
test
cmp
jo
or
push
jne
jge
add
scas
pop
pop
push
inc
call
inc
jo
lods
dec
xor
push
fistl
ret
popa
mov
int3
mov
ds
aam
or
jbe
dec
lock
jg
push
movb
adc
stos
pop
lods
aad
aam
imul
pop
out
lea
jne
hlt
aaa
aad
lods
sub
push
pushf
inc
dec
add
daa
lods
pop
mov
pop
mov
test
decl
add
xchg
lret
add
ret
jp
pop
mov
xchg
pop
pop
pop
push
sbb
clc
and
rolb
cwtl
or
pop
push
mov
xchg
jle
imul
add
jno
movsl
cmp
pop
mov
test
shrb
dec
add
fld
nop
and
cld
fsubrl
jge
push
add
push
or
push
add
sbb
adc
add
pop
xchg
ficoms
xor
xor
int3
cltd
in
xchg
cli
fisttpll
mov
dec
negb
xor
or
lea
push
sbb
clc
arpl
adc
fmuls
int3
mov
push
lds
cltd
dec
int3
and
notb
in
push
mov
jmp
mov
inc
ljmp
inc
cmp
push
filds
fidivs
in
into
dec
push
fdivrp
inc
popf
and
push
mov
push
loopne
xor
sbb
add
dec
je
push
inc
jge
add
in
daa
gs
jne
sbb
loop
and
jbe
inc
inc
cmpsl
mov
out
or
les
mov
jmp
out
mov
ret
mov
out
lahf
or
inc
xchg
pop
mov
add
mov
idivb
pushl
dec
jne
jp
call
insb
mov
jne
insb
je
je
and
or
rcrb
lds
shll
jle
push
sbb
sub
ret
mov
xor
jecxz
popf
mov
fxch
cmp
xchg
lret
call
push
dec
ja
popa
jnp
add
sbb
fsts
sub
push
sub
cmc
fldl
sbbb
xor
jp
jns
aad
sub
pop
incl
test
and
xchg
cmp
popa
jmp
mov
sub
add
nop
cmpsl
push
cmp
enter
add
aas
loopne
cwtl
test
orb
dec
jle
push
mov
and
outsl
and
inc
inc
mov
insl
in
lds
mov
dec
jmp
lods
xor
add
add
add
fimull
aas
jmp
movl
mov
in
je
cmp
mov
dec
push
mov
repz
cmp
mov
adc
adc
jmp
dec
daa
add
push
or
sub
mov
fsubrl
pushf
push
popa
out
sbb
push
or
jo
inc
xchg
push
pop
shll
je
mov
push
pop
cltd
add
add
movsl
clc
inc
mov
cmpsb
test
xor
dec
push
pop
gs
cmpsl
jmp
mov
sbb
sub
add
xchg
outsb
cmpb
test
dec
add
cwtl
mov
push
popf
fstp
pusha
out
gs
shlb
sub
int3
ret
adc
or
xchg
add
add
push
xor
in
xchg
cmp
and
jne
xchg
das
push
outsl
push
imul
pop
test
jo
dec
bound
push
popf
adc
jae
pusha
mov
mov
mov
ror
int3
sahf
jecxz
sub
add
bound
shlb
sub
ret
mov
sbb
in
cmpsl
stos
lret
into
xchg
jo
imul
fs
push
jno
push
hlt
pop
and
jle
push
pop
cs
pop
mov
dec
sbb
adc
inc
inc
push
or
dec
sub
xor
or
and
dec
or
cwtl
xchg
xchg
in
push
inc
ret
jae
subb
inc
push
fisttpl
in
push
sub
mov
test
sbb
sub
bound
in
dec
cwtl
sbb
pop
pop
in
pop
sbb
xchg
or
jne
in
mov
pusha
inc
pop
jecxz
or
in
adc
pop
sarb
mov
pop
cmp
loopne
je
nop/reserved
xor
xchg
cltd
mov
inc
daa
fdivs
pop
sbb
es
push
ret
sub
dec
xchg
testl
push
cmc
mov
in
pop
mov
fisubrs
sbb
es
std
out
mov
rcr
push
negb
fs
ds
pop
jmp
shlb
sbb
pop
mov
js
out
shll
clc
jae
adc
mov
mov
inc
into
fmulp
pop
pushf
jne
rol
cmp
sbb
add
loopne
mov
mov
inc
in
adc
jl
leave
inc
aam
roll
mov
sbb
push
jne
xchg
jno
mov
adc
add
or
adc
fldlg2
sub
xor
mov
and
sbb
shll
xor
and
pop
aaa
pop
aaa
andl
roll
push
jo
fmull
sbb
and
mov
or
in
adc
jne
xchg
imul
fwait
add
inc
daa
and
xor
xor
mov
jbe
mov
int
push
mov
arpl
push
pop
xlat
dec
fmul
adc
jmp
cmp
popf
jo
enter
push
inc
or
rorl
sbb
sub
cmpb
sub
rclb
cld
push
mov
and
jge
popa
sub
sbb
outsl
or
sub
imul
adc
adc
xchg
jmp
push
add
ja
les
and
sbb
mov
jb
push
jnp
movsb
addl
inc
inc
jns,pn
hlt
int
cmpsb
cltd
add
add
sbb
add
enter
lock
or
jle
lock
push
sbb
out
adc
fs
push
mov
adc
fsubl
sbb
inc
xchg
push
dec
pop
inc
pop
mov
pop
mov
xchg
sbb
xchg
fwait
push
jmp
fidivs
add
ljmp
push
inc
add
add
pop
nop
xchg
call
and
stc
or
inc
cmp
dec
rolb
das
sbb
rorb
jns
popa
and
inc
filds
dec
ret
call
pop
jno
xor
and
jmp
enter
lea
movsbl
xor
mov
add
xor
sbb
movb
cmp
bound
sqrtps
cltd
sti
out
add
push
icebp
movsb
mov
popl
fbld
fmuls
cmp
jne
mov
push
or
fwait
add
mov
pop
dec
cwtl
arpl
sub
pop
push
in
pop
insb
push
xor
leave
adc
dec
lds
jmp
jne
or
paddq
sub
fdivrl
mov
or
daa
in
or
inc
cmp
pop
add
cmp
mov
xor
repnz
in
xchg
hlt
lret
add
rclb
out
ljmp
stc
nop
out
lods
je
lcall
test
add
inc
xor
pusha
test
pop
or
cs
insl
add
js
sti
test
jge
sarb
xor
jmp
or
push
pop
sub
add
push
jmp
jae
sahf
push
push
xchg
std
iret
nop
cmp
pop
or
cmpsb
jecxz
mov
sub
mov
pop
lea
fsubl
cmp
push
in
frstor
rcrl
lock
iret
loopne
jmp
mov
scas
lock
jo
je
faddl
movsb
sbb
stos
jno
jl
push
push
fildl
xor
push
mov
out
js
push
ficoml
sbb
ss
enter
out
adc
push
imul
inc
and
aad
or
call
mov
mov
enter
sbb
or
test
and
popf
hlt
les
sbb
push
lahf
cmp
fcoml
pop
insl
push
pop
lock
adc
or
cmpsb
hlt
push
inc
push
xchg
mov
jle
xchg
xor
test
inc
and
sbb
lock
sub
sub
aad
adc
mov
repnz
mov
addr16
clc
jge
xorb
fldenv
out
fs
jb
inc
cmp
adc
xor
add
cmp
lea
aas
repz
pop
jge
sbb
es
sub
mov
sbb
clc
jnp
dec
addl
stc
subl
xor
sub
test
pop
paddusb
icebp
pop
pop
js
ss
rcrl
test
repz
inc
es
pop
push
or
or
pop
icebp
push
mov
jo
ret
call
xor
enter
add
fwait
aaa
add
adc
insl
loop
cmp
dec
pop
jno
push
enter
jb
push
jb
dec
fsubr
lods
fdivl
push
jae
aam
inc
or
sub
and
cmp
insb
adc
iret
xchg
push
mov
and
mov
sub
dec
inc
push
jnp
and
in
fisttpl
sbb
xor
push
push
xchg
jmp
mov
adc
gs
jo
data16
xchg
inc
rolb
loop
aaa
jp
push
add
shlb
fbld
push
ficoml
aas
pop
pop
aas
nop
out
jecxz
pop
adc
jp
sbb
in
inc
or
daa
incl
xlat
mov
push
dec
por
inc
pop
jge
mov
insb
loop
test
rol
add
test
or
pop
fmulp
adc
and
add
pop
fcomp
cs
push
adc
out
xor
pop
or
inc
xchg
xchg
movsl
dec
sbb
xchg
je
test
out
add
movups
or
mov
jns
push
sub
pop
xchg
lods
cmp
adc
shlb
pop
mov
fdivl
sub
sti
mov
daa
fsubr
xor
loop
aaa
shlb
xchg
out
jecxz
aam
adc
loopne
sbb
dec
xchg
jge
loop
jge
fdivrs
je
and
ss
or
xchg
mov
test
in
jbe
or
call
cmp
repnz
jmp
cmp
pop
loop
adc
mov
mov
mov
scas
sbb
jmp
mov
das
xchg
and
or
adc
or
sub
adc
inc
xor
movsb
dec
fstl
or
adc
push
cwtl
dec
std
pushf
ror
cmp
je
fcoms
aaa
cmp
xor
push
shrl
cwtl
push
cld
mov
adc
dec
or
dec
cmp
in
pop
hlt
add
and
and
into
not
mov
sbb
cwtl
inc
mov
aam
fiaddl
push
sbb
or
sbb
add
jecxz
sbb
clc
loopne
sub
or
cwtl
lea
loopne
stos
ret
jmp
lds
and
mov
sbb
inc
aam
cmp
add
je
mov
ret
xor
inc
cmp
fwait
mov
and
sbb
mov
mov
test
cmpsb
pop
add
mov
adc
inc
mov
and
adc
mov
sub
jmp
and
mov
xchg
jnp
arpl
das
push
sub
enter
aam
inc
adc
jae
stc
rclb
cmp
push
int
or
daa
shll
call
push
mov
and
add
mov
leave
dec
cmpl
add
xchg
imul
sub
out
push
mov
push
movsl
ret
push
in
ja
or
incb
add
pop
and
stc
sbb
pop
call
add
bnd
nop
inc
pop
and
xchg
add
xlat
add
or
les
rclb
inc
hlt
and
in
mov
sbb
das
adcb
cmp
adc
mov
mov
cmp
jecxz
inc
dec
inc
lcall
sti
pop
inc
push
fs
fiadds
cwtl
cmpsb
cmpsb
mov
dec
mov
push
movl
inc
imul
insb
sbb
in
ss
xchg
mov
pop
fsts
dec
leave
xchg
fsubl
add
mov
mov
xchg
addr16
jmp
adc
mov
pop
push
adc
jmp
test
inc
mov
xchg
or
mov
sbb
or
stos
xchg
pushf
add
cld
push
push
xor
inc
das
add
mov
cld
and
sbbl
jbe
mov
inc
jmp
incl
and
mov
lock
or
and
adc
daa
jmp
mov
shrb
xchg
daa
std
add
push
xchg
or
and
cmp
fidivs
shll
jae
dec
cmpsl
mov
pop
inc
add
repnz
push
notb
push
call
cmp
insl
or
mov
cli
mov
pusha
jg
std
mov
dec
aam
sbb
lret
aaa
xor
dec
rorl
in
push
adc
stc
inc
add
adcb
cmp
inc
call
mov
jbe
call
sbb
into
test
popf
lea
mov
sbb
cmova
imul
cmp
rorb
hlt
push
sub
mov
std
fldt
out
loop
push
fwait
das
fcompl
jle
cmp
filds
push
sub
push
popa
and
out
or
add
adc
shll
imul
xchg
aaa
push
pop
cld
pop
push
xchg
cli
inc
dec
inc
popa
adc
movsl
shll
jge
mov
mov
pop
add
inc
push
pop
leave
fwait
test
push
hlt
rolb
jp
in
push
lock
imul
clc
mov
lock
or
sbb
fistpl
adc
bound
ss
pop
add
cmpb
push
mov
or
outsl
cmp
stc
dec
sbb
das
aam
ret
or
aas
pop
mov
inc
pop
sub
aas
sbb
xor
and
dec
pop
nop
cmpsb
add
popf
and
inc
out
loop
add
imul
or
cld
das
sub
inc
add
lcall
aam
call
adc
pcmpeqw
movsl
mov
inc
call
sbb
rorb
mov
xor
ss
sahf
and
cmp
mov
sbb
push
inc
dec
push
pop
shl
clc
es
push
xor
jmp
or
insl
leave
insl
dec
popa
sti
xor
jmp
daa
pop
pop
inc
aas
mov
xchg
jmp
push
mov
pop
je
cli
test
repz
jmp
leave
ret
sbb
test
jmp
inc
add
add
mov
add
loop
jl
divb
or
mov
test
je
orl
popl
adc
pop
adc
dec
sbb
cmp
shrl
push
inc
add
sub
inc
pop
sbb
scas
xor
jmp
sbb
sarb
repnz
lods
adcl
out
pusha
inc
xchg
mov
int
in
cmpsl
dec
or
dec
clc
lock
insl
xchg
sbb
loope
fbstp
and
cmp
dec
outsb
cmpsl
pop
jp
add
add
xchg
lods
mov
xor
imul
xor
adc
test
ss
mov
lcall
cmpsl
insl
cwtl
sbbb
adc
jecxz
inc
mov
mov
fnstenv
or
outsl
pop
dec
push
push
out
dec
out
dec
dec
dec
orb
idivb
mov
outsb
xchg
loopne
adc
mov
and
cmp
mov
movsb
dec
inc
ret
je
arpl
rcrb
pop
add
xor
mov
mov
movsl
cwtl
les
and
sarb
mov
inc
addr16
adc
lea
dec
aaa
daa
test
imul
jecxz
daa
xlat
in
fs
mov
inc
pop
mov
push
jo
adc
fcomip
insb
ret
daa
lock
pop
les
mov
sub
test
daa
inc
mov
add
aaa
or
dec
fisttpll
je
push
xor
ljmp
and
xor
aam
fisttpll
inc
inc
mov
les
imul
mov
jg
arpl
sahf
sub
push
cmp
rolb
call
push
shll
and
add
cmp
sbb
pusha
jbe
xor
dec
dec
mov
mov
mov
mov
int3
jbe
push
xorl
xor
fs
push
pusha
std
lods
mov
and
fadds
je
sbb
dec
sbb
mov
inc
lods
push
adc
add
pushf
psllq
mov
fstpt
adc
daa
add
sbb
sbb
add
dec
daa
push
orb
mov
dec
push
xor
or
xor
add
jg
es
sbb
xor
popf
std
mov
push
pushf
cmp
dec
cmp
fistl
ret
insb
incb
sbb
lods
dec
jns
push
or
cmp
loopne
sar
mov
push
jbe
fistpl
push
int3
int3
and
ljmp
push
or
adc
jmp
enter
in
enter
xchg
jmp
cmp
movsl
lcall
cmp
mov
fstpt
adc
xchg
cmpsl
xchg
call
loopne
and
or
push
push
add
jae
cmp
movl
leave
fs
outsb
sbb
jnp
fs
mov
push
xor
dec
sub
pop
ret
cs
sub
rorl
nop
push
inc
jl
out
mov
addr16
cmpb
or
pop
in
add
out
in
adcb
fidivs
push
inc
xchg
push
mov
add
adc
cli
loope
stos
repz
loopne
fmul
lcall
idiv
mov
xor
lahf
js
or
lea
fdivs
sahf
sub
and
nop
jbe
call
fildll
fwait
jo
pop
push
push
mov
cmp
out
mov
dec
and
inc
adc
and
leave
test
adc
or
test
adc
pusha
or
pop
mov
mov
addr16
dec
sbb
jo
or
sub
mov
jge
sarb
sub
adc
test
sbb
mov
xchg
ljmp
push
jl
or
sbb
add
xor
adc
sub
cmpl
fdivrs
adc
mov
push
jb
xchg
pop
add
pop
mov
mov
fdivl
push
outsb
jns
and
jb
fbstp
and
cld
nop
jmp
mov
dec
orl
fstl
push
mov
mov
mov
inc
add
and
cli
or
ret
add
push
add
add
in
enter
and
or
mov
mov
dec
inc
push
pop
aam
mov
movsb
sub
popa
push
mov
inc
and
lock
push
push
jo
pop
and
pop
ret
cmp
test
filds
push
inc
inc
cwtl
in
mov
mov
sbb
outsl
fisttps
xor
add
and
push
mulb
test
test
imul
lcall
push
jbe
fsubs
insl
test
testl
jno
in
xchg
add
and
adc
lods
popa
lahf
dec
add
ret
je
pop
ja
sti
inc
dec
mov
mov
jge
fwait
mov
push
xor
nop
cmp
stos
adc
fadd
jmp
rclb
mov
and
push
dec
xchg
int3
mov
mov
mov
or
cwtl
or
sbb
cs
add
stos
aaa
adc
cmp
bound
dec
hlt
leave
and
mov
into
jge
cmp
mov
sbb
sbb
leave
jne
cmp
mov
iret
mov
roll
pop
in
cmp
mov
inc
in
sbb
movsb
bound
and
fsubrs
fistl
mov
pop
cmp
pop
fdivp
push
add
xchg
and
int3
sub
xchg
xchg
xorb
cmp
dec
sbb
add
int3
cmp
or
push
jle
int3
and
fs
add
jbe
loope
je
and
and
sbb
mov
or
mov
adc
bound
xor
pop
sti
jecxz
mov
push
mov
jmp
cltd
mov
cmpsl
bound
cmp
xchg
push
sbb
pushf
push
add
ss
inc
pop
inc
arpl
add
adc
test
push
or
sub
xor
fwait
jmp
aad
addr16
inc
hlt
push
clc
jne
js
pop
mov
aas
lock
rcrl
cltd
and
fiadds
pop
or
jo
cltd
shr
test
lock
mov
loopne
mov
xchg
push
sbb
dec
sbb
pop
mov
mov
mov
lock
lock
loopne
pop
loopne
lea
xor
testl
mov
insb
dec
xor
cmpsl
scas
popl
lods
ljmp
or
jb
or
adc
pop
jle
inc
jo
pop
jno
imul
or
push
cmp
and
adc
and
push
addr16
lock
lea
xor
gs
add
adc
ret
sub
sti
js
mov
inc
mov
inc
sbb
test
jne
adc
jne
sub
leave
mov
dec
mov
cld
sub
ret
add
int3
je
pop
push
sub
mov
movsb
push
xor
dec
adc
das
in
push
push
pop
imul
inc
jmp
test
dec
adc
aaa
xlat
xor
adc
mov
add
adc
lea
sub
add
jl
adc
pusha
outsl
pop
sub
add
lret
mov
mov
enter
scas
pop
imul
in
sbb
or
push
xchg
sbb
loopne
add
fcomip
and
enter
push
hlt
adc
add
cmp
or
xor
xor
add
mov
into
or
int3
std
sti
rcl
add
jne
and
fwait
sbbb
and
movsl
add
or
pop
addr16
dec
jmp
jmp
adc
mov
out
cmp
bound
ret
sub
or
subl
adc
daa
push
sti
push
out
mov
add
sub
shrl
rorl
push
pop
dec
roll
out
jno
adc
xor
in
sbb
imul
cs
sub
in
push
inc
lea
cltd
mov
adc
push
fldenv
adc
test
sub
inc
mov
shlb
leave
in
xor
add
xor
nop
adc
pop
jb
addr16
clc
hlt
add
rorb
or
insl
xorl
incl
mov
inc
and
sbb
push
sahf
rclb
ret
cmpsb
and
jl
mov
ret
mov
cmp
loop
and
cmc
or
shrl
sbb
gs
pusha
push
push
mov
ud0
add
or
add
popa
pusha
jbe
xor
jnp
push
aam
gs
pop
xorb
xorb
fmull
out
hlt
mov
mov
push
sti
lock
and
inc
nop
decl
or
cmp
adc
push
mov
mov
aam
pop
fistpl
and
orl
inc
fdivrs
push
cmp
mov
inc
test
sbb
daa
or
dec
or
and
test
cmp
popa
lock
popa
adcl
jp
lcall
and
push
shlb
push
repnz
mov
inc
adcl
push
shl
lods
jmp
pop
sbb
cs
mov
or
or
or
pop
roll
cmp
pop
xor
xor
sbb
sub
hlt
fwait
cwtl
or
cld
dec
dec
out
adc
sbb
add
push
loope
add
lea
testl
sbb
mov
cmp
push
je
daa
pop
les
jns
pusha
sbb
icebp
bound
sbb
dec
xor
in
jmp
in
adc
sbb
adc
stos
pop
mul
hlt
shll
or
xchg
sbb
push
sub
jmp
add
and
clc
push
mov
pop
xlat
jge
adc
movnti
cmp
mov
adc
dec
ss
andl
cmp
cmp
and
mov
add
jmp
inc
jl
popa
imul
push
inc
dec
or
sub
nop
xchg
inc
adc
lock
add
xchg
inc
lock
cmp
cmp
add
pusha
test
aaa
mov
sbb
and
out
icebp
ja
cmp
hlt
push
xchg
push
pop
cltd
inc
fiaddl
push
push
pop
popa
out
ret
outsb
inc
es
ja
mov
mov
jmp
lahf
gs
adc
xor
mov
or
fs
sub
or
loop
imul
or
es
les
repnz
vpcomuw
jo
add
jae
cmp
mov
mov
inc
inc
call
or
xor
lret
mov
movsb
movsb
imul
arpl
jb
sbb
cmpsb
sbb
out
and
adc
mov
or
jge
lods
dec
cld
or
add
jl
mov
and
orb
sub
adcb
mov
fcomps
add
js
xorl
add
je
nop
fstps
push
in
jb
dec
rclb
test
adc
daa
sub
adc
xor
sub
mov
cmp
jb
mov
xor
test
in
xor
or
lahf
dec
jmp
sbb
pusha
lret
jne
fcoms
std
add
adc
dec
rolb
and
inc
push
adc
inc
cmp
mov
and
ret
lea
dec
enter
or
add
cmp
mov
inc
je
inc
mov
and
inc
xor
lcall
leave
jmp
les
les
cmp
rclb
cs
push
inc
add
call
scas
xlat
mov
sub
hlt
loope
or
or
cmp
imul
or
lock
adc
cmp
jge
aam
mov
lea
ja
dec
faddl
shlb
dec
mov
add
pop
call
and
mov
jb
mov
adc
call
mov
sub
or
xor
push
bound
cwtl
add
pusha
adc
add
add
mov
xor
dec
rcrb
mov
push
jmp
or
cmp
pop
push
add
rorl
mov
dec
xchg
or
jno
js
cmp
and
push
rcrb
fs
add
in
and
or
mov
addb
pop
arpl
cmp
add
sbb
mov
sbbl
shll
fsubl
js
adc
mov
adc
pop
pusha
sbb
fwait
cwtl
pop
mov
aaa
popa
cmpsb
and
insl
adc
adc
or
cmp
clc
adc
daa
mov
les
lahf
or
mov
fsub
test
aaa
icebp
add
insb
adc
inc
popa
std
push
mov
mov
or
push
add
pop
test
xor
sbb
jle
lahf
sbb
scas
pop
mov
add
dec
pop
mov
jge
dec
dec
ret
push
nop
pop
pop
mov
enter
xchg
adc
add
test
add
cli
and
lahf
lea
int3
arpl
push
test
push
in
push
pop
jmp
push
rcll
jnp
mov
inc
cmp
sub
hlt
push
fldt
push
cmp
ss
or
fwait
je
add
fsubs
inc
dec
ret
arpl
sbb
and
dec
aad
sbb
lods
stc
call
pushf
movsb
push
xchg
mov
mov
sti
inc
adc
add
add
ret
dec
imul
sbb
test
pop
and
sub
xor
test
mov
imul
mov
jns
mov
sub
cmpsb
mov
lods
adc
cld
test
cs
pop
jo
pop
jl
jbe
add
add
push
xor
inc
dec
and
xlat
rcrl
add
lock
and
sbb
sub
lcall
pop
push
add
pop
out
dec
mov
mov
sarb
imul
jnp
lock
ffree
dec
dec
xor
add
adc
jno
icebp
nop
mov
fidivrs
cmpb
mov
jo
or
in
mulb
js
inc
lods
lcall
cmp
je
mov
mov
mov
or
sbb
popa
fisubl
sub
add
outsb
pop
dec
inc
mov
pop
add
inc
ret
pushf
popa
setge
sahf
inc
enter
push
int
add
and
and
outsb
testl
shrb
and
mov
mov
fadd
mov
sbb
repz
jno
pop
enter
call
jmp
xchg
push
rolb
push
sbb
bound
gs
pop
mov
outsb
pop
cwtl
mov
nop
or
pusha
les
fiaddl
cmp
shrb
cmp
out
push
and
pusha
or
rolb
je
mov
pop
test
cmp
inc
and
aam
hlt
rclb
xchg
lea
mov
loopne
or
or
loop
xor
call
ret
dec
jne
movb
jecxz
inc
jge
add
movsb
icebp
inc
popa
lock
aaa
pop
pop
inc
sub
adc
cld
pop
adc
sbb
pusha
lock
dec
int
pop
or
dec
jmp
xor
xchg
out
lods
dec
aam
sbb
cmp
jmp
xchg
movsb
sbb
mov
fadd
adc
mov
rolb
and
add
orb
loope
icebp
mov
and
adc
jbe
xlat
imul
mov
popl
cmp
dec
dec
jno
xor
mov
xor
jmp
xor
dec
pop
push
mov
add
mov
push
jg
lea
xor
xor
outsl
fs
dec
dec
addl
test
ret
insb
jne
sub
or
adc
jp
xchg
push
add
je
xchg
xchg
inc
mov
mov
adc
daa
jne
mov
jo
shl
sbb
lahf
int
xorl
sub
cli
dec
leave
sbb
add
xchg
movsb
cmp
sbb
dec
leave
rorl
adc
inc
sbb
jne
fucomip
insl
sub
inc
sub
pop
xchg
mov
lahf
or
dec
pop
push
cmp
sbb
xchg
cmc
cmp
ljmp
lds
jb
out
and
testb
xchg
or
and
rorb
dec
lods
dec
sbb
mov
mov
adc
xorl
ja
bound
clc
aad
hlt
jg
jne
mov
and
insl
and
mov
adc
adc
mov
ss
pop
adc
mov
add
mulb
scas
mov
sub
pop
enter
xor
push
xor
cld
xor
and
pop
or
adc
aaa
sub
clc
stos
adc
inc
sub
rorl
mov
icebp
test
and
dec
and
adc
adc
je
jp
popa
xlat
adc
pop
cmp
movsb
test
les
jge
loope
ljmp
mov
subb
push
ds
out
insb
jno
data16
mov
mov
add
pop
mov
inc
incb
sbbb
xor
pop
add
pop
push
outsl
jo
rcrl
push
fistpll
movsb
or
push
mov
ss
inc
add
movsl
mov
arpl
mov
dec
push
xlat
inc
xchg
add
and
add
test
mov
mov
cmp
jne
es
outsb
js
mov
in
pushf
sbb
push
pop
sub
popa
pop
test
je
loopne
inc
js
push
push
add
push
icebp
xchg
vmwrite
mov
hlt
inc
adc
cmp
mov
lock
jl
cmpl
imull
sbb
add
sbb
or
out
pop
inc
dec
jne
add
or
pop
sbb
jbe
out
dec
push
lock
or
push
addr16
orps
push
xchg
lods
out
jmp
sbb
sbb
stos
outsb
adc
fbld
inc
sub
lahf
fbld
add
inc
sbb
xchg
push
stos
xor
xchg
andl
dec
addl
and
jge
cli
std
andb
jg
push
dec
cmp
outsl
xlat
out
jmp
fs
pop
fwait
lock
lds
dec
fwait
loope
out
jmp
or
and
outsb
aad
adc
inc
lock
add
add
ljmp
or
movsb
sub
ret
mov
sub
out
mov
jmp
sub
cmp
lea
xlat
cmp
inc
scas
or
pop
or
cmp
add
mov
je
es
or
cli
rol
dec
dec
xchg
jge
jne
mov
jnp
jne
in
out
adc
pop
adc
cmpsb
lock
or
inc
and
or
fsubs
jle
shrb
add
je
fdivrs
or
cs
xor
jns
adc
aad
xlat
test
push
loop
lock
mov
daa
test
sub
fcomps
jno
loope
jns
mull
jl
push
jg
xchg
mov
or
shll
loopne
jmp
mov
fists
push
or
addl
or
les
sbb
clc
lds
andb
sbb
push
clc
rcrb
aas
dec
decb
sbb
push
push
out
inc
push
or
push
jo
insl
mov
or
dec
bound
cmp
js
and
fs
fiadds
xor
pop
ficomps
push
jbe
outsb
lock
and
rcrb
cmp
lock
or
inc
je
push
fwait
out
push
xlat
sahf
jo
xchg
sub
repz
cmp
xchg
inc
push
and
int3
add
add
or
xchg
test
xlat
lock
pop
sbb
sbb
lret
cmp
jne
cmp
lcall
ret
cmpsl
btc
enter
mov
pop
jo
pop
bound
push
xor
add
in
test
or
or
inc
pop
push
adc
iret
adc
push
out
xor
btc
add
inc
arpl
dec
icebp
xor
testl
outsl
sub
and
les
iret
and
adc
pop
insl
jo
add
iret
fcoml
mov
pusha
aam
rcrb
inc
daa
leave
jle
push
add
scas
add
lret
xor
cmp
mov
push
or
adc
ja
imul
inc
xor
xchg
clc
xlat
pop
sti
xor
inc
mov
mov
in
cwtl
push
fsubrs
es
dec
push
adc
or
add
xor
inc
cltd
lret
or
adc
xchg
and
rclb
js
xchg
movl
jns
popa
or
outsl
loope
pop
push
cmp
lret
xor
adc
adc
loopne
and
sbb
adc
add
xor
add
movsl
sub
sbb
or
mov
xchg
sub
fstps
add
pop
sub
or
fwait
add
xor
push
sbb
push
scas
sub
sbb
lock
add
fcomp
xor
popa
call
adc
or
inc
pusha
dec
pop
fiadds
in
xchg
in
ret
lea
mov
cld
xor
sub
cmp
sbb
push
push
outsb
popf
rcrl
adc
jno
and
add
mov
or
sbb
pop
ret
repnz
sbb
push
push
repz
in
call
sub
rcll
mov
mov
xchg
fcmovnb
mov
jnp
dec
adc
push
adc
pop
daa
cmpsl
mov
aad
sub
adc
mov
xchg
add
inc
and
cmp
or
sbb
loope
add
arpl
pop
dec
xchg
and
insl
test
lea
or
daa
ja
add
test
add
jnp
movsl
inc
xchg
mov
insl
test
and
mov
adcb
xchg
dec
xor
push
adc
or
add
adc
dec
dec
fs
adc
ret
aaa
xor
mov
gs
add
call
arpl
mov
mov
test
adc
daa
lock
push
sub
mov
pop
or
add
out
outsl
test
stc
and
add
push
add
mov
add
cmp
fucomi
jge
fisttpll
mov
pop
mov
or
jge
pop
sbb
adc
push
sbbb
push
mov
push
mov
shll
and
lods
aaa
add
pop
mov
add
mov
cld
pop
mov
lret
insl
lods
cmp
pop
add
out
inc
pop
push
bound
lods
cmpsl
push
push
push
popa
sbb
inc
xor
push
ud1
and
inc
adc
arpl
dec
mov
push
cld
push
xchg
call
aaa
add
aaa
push
pop
fmuls
pop
xor
imul
inc
pop
xor
add
jge
push
sub
adc
add
cmpsb
xchg
lea
push
pop
mov
jmp
popl
mov
lds
fs
addb
ucomiss
sub
aaa
pop
addl
sub
add
add
jl
add
mov
or
ljmp
je
mov
adc
jbe
adc
pop
xchg
mov
sbb
xor
jae
je
enter
jbe
enter
js
jp
orl
jl
orl
jle
pusha
popa
or
enter
fs
and
and
and
insl
orl
outsb
outsl
push
push
or
enter
push
xor
and
and
and
pop
orl
pop
pop
inc
inc
or
enter
inc
xor
and
and
and
dec
orl
dec
dec
xor
or
enter
xor
enter
ss
enter
cmp
cmp
orl
cmp
orl
ds
and
or
enter
and
int3
and
adc
push
inc
nop
lahf
pop
xor
and
arpl
xchg
add
sub
cmpsb
push
outsl
dec
push
push
add
rorb
inc
aaa
adc
test
mov
mov
sub
sub
and
adc
xchg
push
mov
inc
sbb
jecxz
mov
pop
das
ret
mov
xor
data16
or
imul
xor
test
and
ret
push
adc
or
xchg
in
lcall
sub
insl
or
jae
je
scas
dec
mov
mov
push
je
insb
sbb
mov
push
data16
leave
sbb
dec
je
arpl
adc
cmpb
adc
testb
mov
aas
cmc
jns
pop
jnp
add
insb
or
sbb
sti
sbb
int
mov
cs
jo
outsl
sbb
xchg
mov
decb
inc
popa
jae
add
sbb
or
push
scas
pop
add
inc
jge
or
out
mov
cmp
or
add
test
or
xchg
jbe
adc
inc
insb
mov
push
push
push
je
iret
insl
dec
outsl
cs
je
pop
inc
jns
sbb
lcall
addr16
and
mov
rcrb
imul
adc
mov
mov
xor
vpmadcswd
push
aas
mov
loopne
lret
imul
ja
inc
add
sbb
das
inc
jb
fisttpl
fwait
shll
cmp
bound
add
imull
or
dec
jge
jp
aaa
or
push
fstpt
lea
addr16
pop
cmp
sbb
inc
outsb
jb
jae
es
pop
inc
scas
and
inc
mov
sbbl
call
pop
push
std
incl
andps
xor
lret
and
enter
mov
sbb
sub
add
ja
pop
imul
and
mov
imul
rorl
fadds
mov
incb
and
mov
cmpsl
push
pop
add
rcr
push
andb
insb
das
push
sub
jl
add
jp
sbb
sub
mov
cmc
insl
and
arpl
add
sbb
aad
pop
pop
aas
fs
pop
in
call
pusha
inc
pop
add
push
mov
rcrb
push
dec
rolb
imul
push
xor
int3
aam
jo
jb
cmp
adc
bound
push
jecxz
add
mov
mov
xor
inc
sahf
dec
lahf
pusha
push
pusha
sbb
push
sub
push
add
leave
ret
gs
mov
les
pop
pop
outsb
adc
shlb
popa
mov
andb
lds
sbb
pushf
cmp
push
sarl
ds
pop
adc
push
inc
xchg
pushw
rclb
pusha
pop
jb
sbbb
cmp
pop
fdivrs
nop
sahf
pop
sbb
mov
xchg
cmp
add
cwtl
push
xchg
push
pop
mov
mov
enter
dec
cmp
in
mov
mov
add
jae
push
inc
jb
push
fstp
jnp
inc
popa
sbb
pop
sbb
mov
movsl
push
xor
push
imul
and
push
aas
pop
int3
mov
or
cmp
jo
mov
pop
push
sbb
shl
jo
add
cmpsl
loopne
dec
adc
sub
pop
addr16
jae
daa
inc
sbb
aas
pusha
sbb
or
or
dec
jge
jne
outsb
adc
inc
outsb
fs
mov
sub
sbb
push
add
rcr
or
arpl
sti
andl
gs
outsb
pop
clc
ja
outsl
ja
adc
push
or
push
xchg
add
cmp
or
jb
push
mov
add
nop
int
jle
fcoml
push
adc
cmp
xchg
ret
sbb
jbe
movsb
fcmovu
fcoml
mov
rorl
lcall
jnp
push
icebp
jmp
es
sbb
pusha
mov
bnd
and
je
int
scas
mov
pop
fsub
inc
jle
push
sub
mov
mov
nop
daa
in
add
repnz
cmpsl
pop
xor
jl
pop
fdivrl
jno
cld
punpcklbw
and
mov
cmp
xorb
daa
pop
sub
ret
test
cmpl
or
pop
jb
jae
jg
repnz
fcomp
idivb
and
das
push
pop
xor
adc
dec
cmpsl
inc
or
cmpsb
mov
sbb
xchg
sbb
ljmp
pop
pusha
cmpsl
dec
nop
dec
js
and
pop
aam
push
mov
mulb
adc
call
ret
or
cs
add
jb
out
pop
jo
or
and
das
je
jno
insl
add
lock
xor
adc
adc
dec
push
aam
test
dec
imull
dec
jp
or
push
or
fidivrl
movsw
ret
nop
xor
pop
xor
xor
sub
xchg
add
inc
negb
jg
push
jle
push
das
fidivrl
jg
cwtl
sbbb
lock
add
popf
pushw
cmp
push
xchg
jg
fmuls
push
mov
andl
cmpsl
xorl
inc
shrb
sbb
adc
jg
je,pt
or
sarb
outsb
push
or
adc
and
insl
mov
int
xchg
pop
in
jg
mov
dec
mov
mov
pop
sahf
pop
pushf
mov
mov
mov
mov
adc
mov
jbe
pop
lds
xor
mov
jmp
push
mov
mov
pop
inc
push
ss
xchg
pop
popw
nop
sbb
arpl
mov
clc
xlat
pop
push
pusha
sbb
nop
lret
cltd
push
or
outsl
lds
in
mov
sub
in
inc
int
xor
sub
xchg
xchg
mov
mov
shr
push
sub
add
mov
pop
fmuls
faddl
ss
and
xchg
lret
jl
das
hlt
sbb
pop
xchg
daa
dec
pop
inc
push
insb
sbb
idivb
add
subb
nop
movsb
push
imul
push
pop
dec
popa
outsb
nop
decl
inc
cs
mov
xor
rol
xor
inc
dec
jne
mov
or
mov
push
xchg
sbb
inc
cmpsl
bound
test
or
adc
cmpsl
rcll
and
inc
mov
or
inc
sub
sbb
dec
push
fsubrs
test
or
jne
and
aam
shlb
rorl
cmp
xor
add
xchg
cli
loope
pop
and
mov
adc
inc
lea
ret
dec
or
cwtl
cmp
imul
decl
jge
cmp
cmpsb
adc
pop
cmp
mov
add
pop
sbbl
fwait
or
jg
push
adc
dec
sbb
sahf
mov
pop
cs
cmp
add
mov
icebp
inc
rclb
xlat
sub
and
test
adc
or
dec
pusha
sbb
repz
inc
and
decl
adcl
push
fisttpl
and
aaa
jno
or
mov
dec
xlat
xlat
cmp
and
sub
dec
push
pminub
adc
ja
mov
sbb
inc
pop
pop
or
push
jle
aad
adc
xchg
mov
sbb
int
sbb
mov
sbbl
int3
adc
adc
or
xor
test
pop
leave
imul
push
outsb
sbb
aaa
adc
lds
adc
jmp
shll
or
je
adc
adc
jg
mov
in
add
mov
pop
jmp
into
push
cmpsb
adc
jg
rolb
pusha
mov
dec
rcr
sarb
jne
inc
outsl
arpl
or
or
outsl
mov
add
cwtl
inc
gs
pop
je
addl
repnz
test
jns
push
sti
mov
add
jo
xchg
gs
insb
pop
cmp
addr16
imul
addr16
or
dec
aad
in
mov
sbb
xchg
outsl
ja
or
pop
lahf
jne
or
arpl
jae
popa
inc
jno
popa
mov
jbe
or
pusha
pop
sbb
jns
add
jne
or
insl
mov
addl
push
ret
es
fmull
sbb
pop
das
add
addb
or
out
sbbl
push
pop
imul
lock
add
inc
push
addr16
mov
dec
cld
das
inc
je
inc
push
aam
ficomps
es
insl
insb
cmp
in
je
or
fdivrl
js
mov
or
lods
add
pop
daa
pop
adc
imul
and
pop
or
or
fsts
es
imul
pop
jg
faddl
add
fildll
lods
popa
repz
adc
lods
ss
adc
outsl
inc
imul
push
iret
push
outsb
jne
sub
fcompl
or
and
bswap
or
addl
lahf
dec
cs
xlat
jno
push
arpl
add
mov
inc
inc
imul
das
sbb
inc
inc
inc
pop
es
ret
das
or
add
dec
or
cmp
mov
push
mov
mov
in
loop
pop
dec
ret
outsl
or
mov
rcrb
and
jg
test
inc
dec
push
dec
pop
inc
dec
inc
push
push
inc
push
add
inc
inc
inc
push
dec
push
xor
notl
dec
inc
dec
dec
arpl
decl
inc
inc
push
adc
inc
push
dec
dec
push
mov
and
inc
push
xchg
inc
cld
imul
popa
out
inc
inc
xor
xor
or
int3
test
and
dec
in
mov
inc
xor
inc
dec
sub
clc
or
push
push
push
dec
sub
fisubrs
arpl
cs
idivb
inc
das
mov
push
push
test
ret
mov
pop
adc
push
leave
push
ret
xchg
push
push
dec
push
inc
scas
dec
inc
dec
pop
sbb
push
mov
dec
mov
mov
mov
adc
jg
sub
cmp
stos
shlb
pop
sbb
or
add
mov
and
dec
or
sbbb
add
add
add
or
mov
in
test
adc
pop
sbb
and
outsb
fistpl
mov
sbb
mov
pushf
mov
ret
ret
or
add
add
mov
mov
pusha
daa
mov
shlb
and
mov
xor
shll
and
xchg
es
push
xchg
jg
inc
adc
dec
inc
mov
cmpsl
and
movsl
and
pop
ret
adc
rorb
sub
das
js
dec
push
pusha
add
xchg
imul
push
sbb
sub
push
mov
pushl
jno
jmp
daa
mov
cmp
adc
cmp
sub
mov
das
jecxz
cmpl
jo
cli
addl
movsl
mov
jne
and
inc
aam
scas
inc
add
push
sbb
outsb
add
mov
mov
cmp
mov
test
lret
inc
push
add
push
icebp
aam
xor
sub
add
sub
iret
mov
inc
or
enter
jl
push
sbb
je
ror
mov
pop
adc
in
push
xchg
push
inc
in
loopne
inc
sbb
xlat
lea
mov
xor
mov
pop
shll
dec
mov
mov
xor
pop
repnz
dec
jno
xor
mov
inc
fiaddl
pop
fcomp
add
enter
imul
jmp
sub
dec
or
mov
cmp
or
xor
push
mov
or
ficompl
xlat
pop
out
call
pop
dec
pop
push
mov
inc
sbb
xor
es
fiadds
fisttpl
dec
dec
adc
xor
jo
xor
adcw
push
inc
push
movsb
pop
pop
fcoml
popa
adc
testl
sbb
cmpsl
mov
sbb
mov
sub
mov
movsl
lret
popf
hlt
mov
inc
addr16
mov
push
mov
add
fcomps
push
adc
xor
push
das
jg
mov
fcomip
ficoml
jp
mov
mov
add
or
in
pop
out
cmp
pop
mov
or
iret
inc
push
outsb
inc
sbb
adc
or
inc
ret
add
pop
sbb
push
mov
xor
dec
in
inc
sbb
shrl
add
in
xchg
or
aaa
gs
pop
and
gs
add
cmp
gs
push
and
movsl
inc
xor
rolb
scas
cs
add
lods
gs
add
pop
add
push
lock
dec
push
xchg
gs
test
or
pop
push
jne
fidivrs
and
add
mov
sbb
mov
inc
inc
shrb
pusha
ss
leave
enter
sub
dec
in
inc
jp
popf
or
inc
or
lock
pop
jb
shrl
sbb
sub
push
and
cs
and
and
pop
sbb
mov
or
push
call
adc
dec
cmpl
lock
shll
jno
sbb
dec
fisubl
push
nop
outsl
push
push
loope
imul
call
pop
and
mov
mov
cld
mov
pop
and
mov
test
insb
ss
in
cmp
xor
xlat
lock
and
dec
movsl
mov
or
orb
orb
insb
das
cmp
add
ss
inc
mov
and
sti
inc
jge
je
jmp
fsubrp
sbb
fidivrl
out
pop
adc
mov
in
call
lock
add
shll
aas
pop
clc
push
gs
sbb
ret
or
add
mov
or
scas
and
insb
movsb
cltd
inc
cmp
cmp
mov
std
inc
lock
xchg
rorl
or
daa
inc
out
rcrb
sbb
push
sub
nop
xchg
adc
push
hlt
or
repnz
movl
fsubs
shlb
push
popf
lock
push
push
enter
pop
add
bound
jns
xor
movups
xchg
lea
pop
pop
mov
dec
jno
cmpsl
pop
lea
jge
dec
loope
sub
imul
imul
mov
push
mov
sub
or
sub
or
or
xchg
aaa
add
push
xor
fldcw
rorb
pop
popl
cmp
movb
cmpsb
popa
or
repnz
in
testb
data16
ja
mov
xchg
pushf
inc
insb
push
sub
iret
rcrl
in
les
pop
sbb
add
test
pop
cmp
jns
daa
add
or
jae
inc
sub
adc
pop
sub
mov
push
pop
or
in
xchg
je
rcrl
jae
rcl
xchg
addr16
rorb
jns
jbe
stc
inc
adc
addb
dec
adc
inc
push
or
inc
push
mov
pop
orb
push
sbb
cmp
adcb
imul
dec
jmp
arpl
jns
inc
push
incl
sbb
dec
pushf
and
dec
xor
mov
pop
jnp
enter
jo
punpcklbw
inc
mov
scas
sbb
imul
jne
mov
pop
dec
push
pop
mov
push
fcmovnb
cwtl
es
mov
push
fs
xchg
push
pop
and
paddusw
dec
cmc
ja
testb
je
push
xchg
popa
rcr
mov
or
cmp
cli
xchg
pop
inc
jne
or
test
icebp
pusha
and
inc
or
adc
adc
push
add
xchg
popf
dec
mov
xor
repz
push
mov
pushf
pop
or
lock
jns
jge
lcall
fdivrl
or
stos
loopne
loopne
mov
cltd
iret
add
inc
orl
loop
pop
or
pop
add
pop
inc
add
xor
daa
or
jo
leave
cmp
mov
push
lea
pop
enter
ret
or
sbb
jne
dec
xor
orl
mov
idivl
out
and
mov
adc
cltd
andl
lods
pop
pop
xchg
in
push
add
nop
mov
pop
adc
dec
or
xor
aaa
lods
gs
sbb
adc
dec
mov
jno
cs
inc
rol
insl
jb
xorb
jmp
in
xchg
pop
js
mov
imul
shlb
pop
rcrl
pop
add
in
push
add
dec
sbb
jae
inc
pop
and
dec
mov
and
imul
cmp
je
mov
enter
mov
test
add
rcrl
mov
mov
and
xchg
and
es
jecxz
mov
adc
fcomps
xor
pop
cld
adc
or
and
orb
xor
shrb
push
sub
aas
mov
scas
lcall
and
mov
and
cmp
je
push
outsl
xchg
rorl
scas
lods
lds
xchg
pusha
push
loopne
aaa
push
das
and
or
mov
or
mov
jle
adc
xor
scas
mov
dec
mov
in
mov
nop
data16
push
cmpsl
or
lods
pop
inc
push
pop
or
in
or
jge
inc
test
add
push
adc
add
dec
mov
and
push
cmp
or
xor
sti
xor
push
sub
and
in
jo
or
cwtl
repnz
mov
aas
cmpsb
fadds
cmp
jl
pusha
pusha
sbbl
cmp
cwtl
and
leave
push
fs
and
stc
or
je
test
adc
or
add
xor
inc
sbb
adc
shll
push
or
push
sbb
out
test
cmp
and
adc
lea
or
es
fmul
adc
dec
fs
push
adc
cmp
inc
jne
gs
push
int3
rolb
mov
lcall
in
push
dec
mov
sbb
push
push
push
mov
cmp
test
dec
or
add
lods
inc
mov
test
ss
inc
jae
lcall
cmp
mov
mov
outsb
add
bound
popa
cmp
xor
sbb
jns
lock
push
jns
aam
jle
push
out
fimull
mov
push
sub
fimull
push
jmp
adc
pusha
cmp
xor
neg
ljmp
cmp
pusha
jmp
ljmp
enter
and
or
jl
sbb
xor
not
and
jg
sar
add
add
faddl
xchg
xchg
or
mov
add
or
adc
jne
mov
xchg
js
out
fs
adc
inc
jg
in
js
xor
and
jae
xchg
imul
push
mov
lahf
jo
jl
push
cmpsl
fcoml
xchg
loopne
sbb
inc
jo
push
jge
xchg
mov
xchg
dec
push
es
mov
and
push
push
shrw
lock
jmp
jns
sbb
cmp
sbb
sbb
mov
sti
leave
lock
das
inc
roll
addr16
mov
xor
js
pop
shl
push
divb
pusha
or
add
dec
out
adc
add
xor
pop
push
movsb
leave
call
fwait
and
add
adc
push
imul
sti
push
es
mov
push
add
push
mov
mov
or
add
hlt
xchg
add
faddp
inc
add
add
out
pop
sub
cmp
aas
adc
jle
in
gs
aas
fwait
mov
mov
pop
pop
inc
les
xchg
pop
push
add
jne
push
mov
sub
adc
adc
mov
mov
inc
add
lods
xchg
and
inc
pop
inc
push
pusha
lcall
or
sti
add
inc
and
idiv
ja
adc
bswap
shr
cmovns
jmp
jg
add
and
mov
sub
shl
dec
adc
sbb
jmp
sbb
push
add
in
pop
add
adc
or
sub
movsb
inc
jae
shlb
lods
cld
xor
jnp
push
ja
outsl
jno
fdiv
adc
mov
sub
cmp
push
jp
or
ds
sub
add
push
add
add
sub
ds
xchg
mov
lea
and
testl
mov
daa
jmp
addr16
movl
dec
lcall
xor
testb
cmp
xchg
xchg
rcrb
adc
clc
and
jl
out
mov
or
nop
negl
push
mov
sbb
inc
mov
and
movsb
jo
mov
arpl
push
dec
pop
cmovb
adc
push
ret
dec
dec
clc
mov
xor
es
enter
mov
aas
and
adc
dec
mov
bound
enter
lret
xchg
lret
sahf
add
or
fstps
movups
add
inc
adc
push
xchg
mov
popa
ret
insl
and
xor
pop
loope
add
add
add
add
dec
stc
je
ja
in
jo
and
sub
xlat
rolb
push
adcl
insl
daa
mov
and
nop
sub
dec
enter
push
push
mov
adc
addr16
sub
lret
test
mov
cs
das
lods
inc
sub
add
push
jg
sub
add
in
leave
mov
in
addl
add
movsb
mov
ret
hlt
bound
mov
sub
enter
xchg
and
inc
sub
add
cmp
add
or
mov
shrl
movl
push
dec
subb
enter
out
insb
pop
cld
push
push
xchg
adc
jg
add
sub
and
add
jg
and
add
push
lock
int3
sbb
add
fidivs
ret
fisubs
adcl
adc
push
lock
push
or
pop
or
dec
add
mov
sbb
dec
pop
cmp
mov
mov
adc
cmp
jg
outsb
scas
jmp
test
jle
cmp
jl
mov
mov
mov
or
inc
add
inc
jle
xor
xor
lea
pop
add
adcb
aad
adc
in
pop
inc
repz
mov
xor
adc
and
out
push
or
ds
cmp
pop
pop
pop
xchg
or
push
dec
rcrl
fcoms
in
mov
inc
movsl
xchg
sbb
push
and
icebp
pop
push
dec
ret
cmpsl
in
or
mov
dec
add
in
sbb
or
aaa
xchg
inc
jae
out
outsl
pop
sbb
ret
jge
test
jecxz
lea
pop
ds
sti
sti
loope
ret
imul
sub
loopne
es
cmp
sbb
lea
jno
push
mov
shl
inc
dec
jne
cmp
pop
roll
xor
andl
add
push
in
add
sub
fwait
ret
sbb
adc
push
rclb
dec
lds
in
jmp
sahf
add
int3
subb
pop
arpl
mov
leave
enter
pushf
xchg
pop
cwtl
lock
mov
mov
push
mov
xchg
addb
xchg
push
call
rcl
push
testb
add
push
push
mov
push
mov
sbb
jo
jo
mov
xchg
sbb
inc
mov
stos
or
dec
in
mov
mov
dec
mov
or
xchg
cwtl
sarb
aas
ficompl
and
push
in
aam
test
in
push
sub
sub
pusha
out
xor
xchg
adc
push
xor
inc
sarb
sbb
ret
fildll
outsb
sbb
test
aad
pop
jo
jmp
sbb
sbb
add
cvtdq2ps
sub
jmp
je
or
jmp
mov
sub
add
add
xor
push
jg
add
jb,pt
jmp
add
das
in
and
test
adc
ljmp
imull
outsl
imul
cmp
and
ljmp
fmull
mov
into
mov
andl
and
inc
adc
jmp
adc
movsb
ss
push
mov
stos
push
gs
lret
push
jae
add
out
adc
cmp
negb
add
or
inc
lcall
xchg
add
xor
pop
xor
push
add
outsl
or
cld
xlat
hlt
jmp
shrl
nop
add
pusha
inc
cmp
mov
pop
cmp
push
jecxz
movsb
jmp
imul
xorl
push
add
ficoml
rcrb
inc
call
test
imul
hlt
ret
and
test
mov
je
das
adc
jne
int
xchg
cmpsl
lods
loop
push
xor
out
and
adc
pop
adc
out
xchg
clc
mov
pop
adc
ja
adc
in
hlt
int3
adc
xor
loopne
add
dec
repnz
clc
fs
in
mov
cmpsl
fsubr
mov
dec
mov
faddl
and
mov
loopne
add
cmpb
sbb
movsl
add
push
dec
leave
scas
mov
add
or
xor
aam
push
fisttpll
lods
or
or
lods
data16
push
jecxz
popw
insl
mov
lods
cmpsl
mov
mov
xor
sub
sahf
adc
mov
and
or
dec
hlt
test
or
lret
in
fistl
mov
hlt
loopne
sbb
fcoml
mov
stc
daa
in
xorl
adc
lahf
outsl
jge
movb
scas
inc
xchg
loopne
adc
out
and
addb
scas
nop
mov
jns
dec
or
sbb
shrl
popf
inc
or
sbb
mov
mov
inc
xor
nop
mov
sbb
adc
push
or
ja
sub
add
pop
push
pop
xchg
mov
adc
into
addr16
add
dec
inc
and
cmp
xor
adc
imul
clc
or
jns
inc
inc
xor
movsl
int3
and
mov
sub
xor
dec
inc
iret
or
dec
hlt
rorb
and
sbb
mov
outsb
cmp
lods
adc
inc
and
pusha
mov
into
mov
fwait
cltd
push
ror
push
inc
ss
adc
std
dec
xor
push
pop
adc
xchg
fcoml
cwtl
or
pop
ret
add
lea
pop
pop
mov
call
push
and
mov
cmpsb
or
out
pop
lahf
rclb
test
roll
insl
mov
adc
adc
mov
push
loopne
mov
inc
rorb
add
xlat
add
xchg
cmp
mov
adc
dec
out
pusha
push
add
fldenv
jmp
jmp
push
movsb
mov
scas
in
add
nop
daa
stc
clc
mov
xor
push
adc
and
hlt
mov
in
push
lock
add
push
add
jo
push
sti
lcall
popw
dec
repnz
outsl
bound
pop
or
outsl
and
and
add
adc
adc
call
add
bound
xor
call
fst
and
or
test
icebp
push
mov
mov
fimuls
mov
inc
lock
mov
lea
ss
jmp
pusha
ds
test
xor
push
fwait
xor
scas
and
cmp
imul
clc
mov
jb
or
push
dec
mov
sub
data16
mov
dec
or
addr16
and
push
pushf
xchg
mov
dec
pop
xchg
dec
inc
lcall
mov
ds
cld
rclb
in
dec
adc
adc
mov
imul
or
add
popf
jg
repnz
dec
mov
push
add
add
sbb
push
push
call
push
mov
mov
pop
sbbb
fistpl
call
fisubrs
fwait
add
mov
mov
sub
add
ja
cmp
in
negl
mov
aas
mov
mov
mov
loope
push
xchg
mov
mov
sub
or
push
aad
jmp
daa
data16
or
and
or
cmp
add
mov
push
rcrb
inc
mov
or
push
dec
loop
les
mov
aaa
jns
bound
lods
lahf
and
mov
in
dec
inc
popa
pop
xor
pop
outsl
adc
test
subb
outsb
cs
lock
dec
and
inc
stos
pop
adc
sub
push
data16
or
repz
mov
das
sbb
arpl
cld
sbb
mov
leave
rclb
daa
mov
xchg
pop
out
or
sbb
mov
vmovq
lret
lods
cmp
jnp
add
push
cmp
mov
dec
addr16
fstpt
or
jmp
pop
insl
cwtl
dec
inc
shlb
or
sbb
sub
pop
lock
into
inc
test
out
inc
and
inc
xor
test
jb
enter
dec
ficoms
ss
sub
adc
pop
ljmp
jo
sbb
pop
repnz
out
outsb
and
pop
and
out
shlb
mov
sbb
in
cmp
push
popf
mov
or
aad
mov
inc
imul
punpcklbw
sub
inc
arpl
aaa
mov
test
xchg
jno
sub
pusha
mov
loopne
mov
test
mov
shlb
je
mov
sar
and
aas
data16
add
mov
xchg
dec
andb
or
adc
lods
push
xchg
inc
add
aas
push
sub
mov
jns
sbb
cmp
insb
je
test
mov
mov
notb
or
inc
sub
sub
and
inc
sbb
movsb
push
je
jg
dec
or
sbb
pop
or
add
xor
and
xlat
push
or
je
idivl
ja
movb
pop
and
and
mov
add
inc
sub
cld
mov
inc
adc
add
sub
js
xchg
dec
aam
mov
ds
push
sub
lods
adc
jnp
pushf
mov
push
pop
daa
add
inc
jae
pop
clc
jg
rorl
adc
test
and
sarb
xchg
outsb
outsw
test
sub
adc
xor
in
or
push
and
sti
aam
bnd
pop
add
xchg
or
dec
adc
adc
addl
sbb
inc
sub
leave
sub
negb
jne
mov
lret
test
mov
fidivrs
lds
jmp
push
push
sti
call
mov
faddl
jmp
adc
in
xchg
cwtl
and
xchg
pop
ja
std
cmp
arpl
cmp
dec
clc
pop
push
inc
js
lock
cmp
push
popf
jo
popa
pushaw
inc
out
data16
ss
cwtl
xorl
mov
sbb
rorb
or
sbb
add
jle
loope
outsl
mov
sbb
push
rclb
xor
add
aaa
mov
or
enter
inc
cmp
sub
xchg
add
je
lock
add
movsb
adc
daa
cmp
roll
mov
test
imul
push
add
ja
sbb
inc
dec
inc
je
jp
mov
push
cli
and
fs
sub
xchg
lcall
call
xchg
add
lock
or
push
or
mov
sbb
xchg
in
lock
adc
mov
movsl
sub
dec
sbb
jo
imul
mov
addb
int
lcall
insb
sbb
pop
inc
push
cmp
subl
sar
hlt
add
aam
fwait
and
iret
inc
fstpt
and
subl
jae
jg
movswl
add
ds
sub
int
cmp
lea
into
lahf
xlat
or
fimull
sub
hlt
clc
ret
jl
sub
push
push
xchg
xchg
cmp
imulb
xchg
inc
push
push
cld
add
xchg
and
pushf
jae
std
xchg
add
push
rolb
adc
lock
lods
rclb
inc
sti
mov
xchg
in
xchg
or
nop
movl
into
mov
or
mov
je
or
add
add
sbb
sti
mov
leave
add
sub
imul
sarb
dec
add
shll
mov
nop
inc
mov
pushf
std
inc
out
in
js
mov
mov
jmp
pop
sbbb
push
pop
fs
jae
adc
lea
push
aaa
xchg
fimull
and
xlat
loope
xchg
incb
cmp
xor
xchg
scas
addr16
adc
ja
in
xchg
sbb
or
and
adc
sbb
xor
pushf
inc
lsl
fidivl
cmp
popl
sub
pop
and
mov
pushf
loopne
mov
sbbb
dec
pop
adc
push
imul
xor
jno
mov
movups
or
hlt
inc
mov
cli
cmp
pop
lock
pop
adc
adc
adc
or
or
cli
enter
add
sbb
sbb
test
lret
and
loope
pusha
cs
dec
std
pop
movl
or
fdivl
or
sub
xor
insl
nop
push
push
mov
es
imul
pop
fnstcw
add
and
lahf
add
test
imul
or
add
push
xor
or
jns
test
mov
mov
data16
andb
push
xor
lret
jmp
arpl
sub
push
or
inc
mov
sub
bound
jnp
cwtl
leave
jmp
push
imul
xchg
add
ljmp
repnz
sub
pusha
mov
inc
pop
dec
sbb
pop
pop
sub
dec
mov
andb
std
cmp
test
mov
xrelease
adc
push
test
adc
jg
outsb
or
cmp
mov
sbb
jns
lods
adc
mov
mov
inc
xor
or
orb
fmul
pop
push
jmp
push
cmp
mov
out
pop
insl
loop
imul
pop
jle
rorb
fs
int3
dec
add
cmpl
pop
adc
loope
vmovntps
movb
or
adcl
cmp
adc
nop
aaa
popa
jle
or
test
pop
sub
loope
mov
add
and
push
xor
pop
xor
nop
ret
mov
data16
test
pusha
pop
test
movsl
inc
lahf
fs
mov
loop
fwait
push
test
sub
or
dec
sti
test
add
cmpsl
add
mov
lods
sub
mov
pop
out
pop
aam
dec
add
das
lods
cmpsb
xor
movb
add
pop
or
adc
pop
sub
punpckhdq
xor
mov
xchg
inc
cmpsb
inc
xchg
mov
mov
jae
pop
or
dec
pop
inc
pop
mov
in
fldt
pop
xor
add
xchg
and
fimull
mov
dec
jo
adc
push
pop
stos
jmp
adcb
es
dec
jb
xor
adc
int
enter
ss
pop
nop
pop
rcl
cmp
mov
aad
lock
dec
lret
stc
xchg
dec
add
jne
add
pop
sbb
inc
xor
sub
je
js
popf
daa
fs
or
insb
push
aas
jg
sub
adc
lret
test
and
shrb
adc
inc
or
cs
lock
mov
mov
or
jnp
shlb
ds
cmpsl
lahf
insl
dec
stc
jp
and
ret
pop
sbb
dec
cltd
dec
lock
loope
mov
ja
test
adc
mov
dec
cmp
or
push
dec
or
xlat
pop
das
cmpsb
out
not
add
add
nopl
cli
adc
movl
push
or
pop
into
out
and
adc
or
xchg
push
rcrl
push
and
adc
and
nop
jbe
es
jne
sub
mov
sbb
add
sbb
popa
add
sbb
push
push
adc
imul
mov
jo
sbb
lods
mov
and
loop
scas
sub
mov
xchg
or
jno
add
es
fdivrs
or
dec
or
mov
aas
fisttps
inc
rcrl
mov
add
cmp
sub
mov
inc
idivl
jnp
sub
and
lahf
fadds
sbb
imul
es
adc
and
push
fmull
or
and
in
and
lods
ss
fistpl
int
or
sub
fiadds
sub
lods
add
loop
mov
lcall
sbb
lea
cmpsl
hlt
mov
xchg
cld
pusha
stos
aad
xchg
in
nop
add
or
scas
push
dec
adc
pop
inc
cmp
and
xor
jbe
repnz
mov
mov
in
inc
sub
clc
adc
adc
mov
pop
daa
sub
push
adc
dec
das
push
imul
inc
mov
xor
push
in
jne
and
sbb
pop
jge
or
adc
push
mov
test
sbb
dec
dec
cmp
jne
adc
fsubs
jbe
xchg
test
or
or
nop
mov
sahf
and
sub
lds
jl
lock
xchg
or
in
jns
pop
iret
lods
sbb
and
fldt
ja
mov
outsl
jg
xor
nop
push
int
xchg
pushf
lea
mov
pop
nop
or
pop
fsubrp
mov
out
into
sbb
arpl
jmp
sub
mov
jo
fldl
lods
xor
test
pop
rclb
pusha
pop
push
inc
bound
orb
lock
in
test
add
fsubs
or
and
inc
inc
xlat
mov
xor
or
mov
push
jb
loopne
test
sahf
sbb
fcoms
aaa
jne
adc
lock
xor
loopne
loopne
fsubrl
jo
and
dec
adc
call
jge
push
stc
push
inc
jp
add
xchg
jns
xor
mov
cmp
mov
inc
sahf
sub
push
sub
inc
or
lock
popa
cmp
and
inc
pusha
push
addb
into
mov
lock
iret
inc
sub
mov
insl
jb
lea
lret
mov
addr16
addb
incl
fisttpll
xchg
rcrb
or
movsl
mov
sbb
pop
out
nop
dec
fildl
jmp
push
pop
arpl
arpl
adc
iret
xor
push
mov
cmp
mov
orl
addr16
aam
and
mov
mov
cmp
scas
nop
mov
dec
mov
cmp
xchg
movsb
mov
push
pop
es
test
or
sbb
out
xchg
int3
sbb
cmpb
mov
iret
ficoms
push
sti
push
fwait
mov
sub
lock
insb
inc
lods
imul
push
xchg
nop
xchg
push
test
call
mov
mov
mov
mov
or
sbb
rorl
test
fwait
jnp
or
mov
add
enter
dec
or
mov
insb
add
jg
sub
xor
push
sub
aad
sub
popa
repnz
test
or
adc
shlb
mov
cmp
dec
or
movsb
adc
arpl
and
xor
sub
and
xor
push
xchg
outsl
bound
lret
push
xchg
bound
and
imul
xor
xor
nop
or
mov
xlat
movsb
les
inc
or
xchg
push
cmp
pop
flds
jge
and
mov
out
aad
lcall
je
icebp
test
icebp
sub
sbb
sub
or
subb
jo
repz
sbb
add
test
dec
lods
fidivs
insb
xor
push
or
cmp
mov
push
or
or
hlt
push
add
dec
dec
xchg
icebp
icebp
xor
enter
push
cltd
pop
cld
push
adc
dec
mov
out
add
mov
push
or
push
movsl
add
addr16
adc
lea
xchg
lret
int
scas
push
push
push
lods
mov
and
and
aam
mov
ret
shlb
adc
and
sbb
or
dec
popa
mov
jecxz
sbb
imul
idivl
popa
popa
jmp
dec
sub
scas
rcll
mov
jnp
sbbl
cmp
cld
pusha
jbe
push
dec
pop
loopne
sbb
andl
push
push
xor
or
mov
sbb
pop
gs
or
dec
inc
bound
xchg
ja
xchg
insl
inc
pop
pusha
inc
dec
call
xchg
pop
dec
inc
test
inc
leave
xlat
inc
push
shlb
sbb
pop
and
add
mov
aaa
pop
mov
add
in
add
mov
sbb
inc
andl
ret
mov
das
adc
dec
mov
fcomip
movsb
lock
cmpsl
test
loopne
mov
inc
cmpb
adc
jnp
and
ss
sbb
push
dec
mov
xor
ljmp
adc
push
or
push
sub
adc
jo
add
imul
and
sub
mov
movsl
xor
clc
sbb
testb
out
cwtl
add
mov
shl
ja
sub
clc
jbe
or
cs
addl
xchg
add
mov
xchg
cwtl
loopne
adc
push
adc
pop
sbb
inc
add
jb,pn
mov
orb
add
sub
inc
sub
das
scas
and
sbb
sahf
or
jno
loope
sbb
xchg
pop
sbb
jbe
lods
pop
or
pop
adc
mov
or
cmpsb
aam
add
rcl
lea
inc
repz
sbb
clc
mov
daa
dec
je
sub
je
pop
adc
inc
in
inc
push
sbb
or
je
jmp
mov
xor
loope
add
xor
sub
push
pop
push
sub
pop
push
jmp
mov
out
lahf
pop
cmp
jp
xchg
mov
jmp
mov
or
cwtl
and
add
fmuls
add
call
insl
mov
jl
mov
test
mov
fstp
call
mov
or
mov
icebp
sub
adc
dec
imul
add
push
jg
xor
pop
movsl
push
push
jne
lds
arpl
and
pop
dec
and
loop
add
pop
out
dec
add
jb
popl
cmp
pop
shlb
mov
add
mov
enter
inc
cmp
jmp
add
js
in
mov
or
jno
sbb
cmp
dec
adc
push
ja
jae
lret
hlt
rolb
dec
xchg
lods
adc
xchg
and
jne
dec
sbbl
fsubrl
adc
or
pop
enter
fwait
mov
mov
xor
pop
xchg
xchg
mov
loope
jb
test
push
mov
inc
daa
stos
xor
or
xor
shrb
dec
popa
mov
aad
mov
sub
lock
adc
add
push
cmpsb
mov
xlat
out
shrb
subb
jg
cmp
mov
adc
cmpl
fstps
sub
aaa
mov
arpl
lea
sub
jne
push
push
mov
adc
add
push
sub
ljmp
testl
pop
adc
cmp
inc
xor
addr16
cmc
sub
lods
loop
push
add
test
add
adc
dec
add
arpl
mov
mov
rcrl
mov
mov
jo
mov
js
mov
xchg
test
cs
mov
out
mov
addl
aas
fs
inc
and
push
mov
xlat
or
lock
rorb
lea
mov
push
add
push
test
rorb
sub
cmpsl
and
inc
mov
pop
adc
jnp
dec
daa
insb
pop
clc
lods
adc
bound
cmp
and
cmp
gs
mov
pop
mov
mov
pusha
push
inc
cmc
mov
push
or
call
or
sub
icebp
loopne
ljmp
or
ffreep
test
add
loopne
adcb
dec
or
add
xchg
or
mov
rol
dec
repnz
subl
or
mov
mov
nop
mov
sbb
mov
stos
mov
cmpb
ret
out
or
scas
cmp
insb
mov
mov
cltd
sub
xor
inc
dec
xadd
add
push
dec
inc
test
mov
cmp
pushf
or
aad
inc
dec
fsts
sti
pop
sbb
sbb
or
shrb
pop
pop
sub
add
daa
or
mov
mov
fiaddl
inc
rcrb
sahf
jo
stos
or
cmp
mov
add
inc
in
or
or
sub
jne
imull
sbb
adc
inc
adc
pop
imul
lock
mov
or
cwtl
or
das
and
mov
xchg
loop
movzbl
mov
or
mov
je
jle
jcxz
icebp
mov
and
sub
push
jbe
mov
mov
inc
hlt
push
or
add
inc
sub
test
cmp
adcb
into
mov
je
pop
lods
jmp
in
or
outsl
pop
jmp
jbe
mov
push
dec
je
daa
lcall
inc
jmp
cld
inc
pop
sbb
sub
testl
or
mov
jns
ror
rorl
loopne
pop
xor
leave
mov
shlb
jae
loope
jp
or
add
dec
shl
cmp
add
in
push
add
cmp
rcl
shll
adc
fcoms
rcll
xchg
xor
mov
sub
sbb
rclb
jae
sub
dec
and
pop
fs
fcmovbe
adcl
lods
xchg
adc
and
mov
jo
xor
shrl
adc
or
out
in
add
mov
icebp
mov
push
dec
and
mov
mov
add
inc
push
mov
imul
sub
inc
mov
mov
pop
inc
out
mov
int3
push
lods
pushf
xchg
lea
push
mov
sub
jle
dec
stc
mov
xchg
push
cmp
dec
push
jle
pusha
pop
push
jl
adc
jbe
movsb
xor
fisttpll
jns
jo
jmp
xor
adc
mov
inc
add
je
xchg
stos
or
mov
pop
outsl
loopne
pop
loope
fcom
cmp
xchg
and
jmp
push
pop
jle
lods
jne
or
sbb
sti
add
decb
mov
shld
fwait
sbb
cmp
inc
cwtl
xchg
fadds
or
outsb
cmpsb
sub
loop
push
jge
push
cltd
push
sub
push
adc
push
jo
daa
test
push
xchg
int
xchg
push
fbstp
jle
pop
lea
dec
push
sarb
ja
or
adc
je
xchg
lea
loop
aam
or
sbb
pop
lret
in
loop
inc
adc
in
sbb
add
ss
xor
cmp
sbb
push
mov
xchg
or
adc
and
or
sti
push
push
and
or
push
or
adc
push
cmpsl
cwtl
sub
mov
inc
xor
push
add
xor
loope
cmp
rcll
ret
loope
scas
or
fcoms
or
adc
xlat
adc
or
js
je
pop
dec
ret
lock
pop
pop
arpl
daa
adcb
stc
jge
and
test
mov
lret
jp
xchg
xchg
ffreep
mov
stos
pop
iret
xor
das
pop
nop
lcall
sbb
stc
js
cmp
xchg
movb
rcrl
sbb
adc
sub
cmpsl
push
inc
loop
and
mov
push
sub
lock
out
sbb
mov
mov
push
pop
sbb
in
mov
fldenv
mov
jnp
icebp
mov
inc
mov
mov
out
sub
jl
sub
fnstenv
pop
push
cs
clc
sub
loopne
dec
add
xor
dec
out
cs
mov
movd
fcoms
call
add
jmp
mov
repz
js
insb
or
lock
inc
jmp
imul
mov
jb
inc
add
adc
inc
xchg
inc
test
orl
mov
movsl
shl
push
cmp
je
cmp
xchg
movb
or
mov
sbb
outsb
call
inc
movsb
xchg
mov
lret
ret
mov
pop
mov
lcall
sub
rolb
push
mov
mov
rcrb
mov
and
addb
outsl
push
lds
pop
mov
push
add
shlb
dec
pop
insb
dec
in
pshufw
add
jmp
daa
lock
pushf
and
cltd
inc
inc
dec
add
push
push
js
pushf
movsl
outsl
lahf
or
aad
mov
lock
jne
ja
inc
sbb
cmp
sub
pop
fwait
imul
in
in
adc
sub
aad
dec
push
sub
adc
or
xchg
js
imul
jae
pop
adc
loopne
bound
stos
jne
dec
pop
movsb
xorb
cmpsb
sub
pop
add
daa
or
adc
push
mov
or
or
sub
xor
test
xor
dec
jo
adc
in
daa
and
inc
or
push
lar
mov
mov
sub
in
sub
pop
inc
and
or
inc
cmp
into
inc
push
mov
inc
imul
adc
xchg
push
push
lahf
ficompl
xlat
pop
jmp
inc
push
xor
imul
add
pop
jns
adc
jecxz
aaa
jle
mov
xchg
mov
cmp
adc
inc
ficompl
sbb
xlat
imul
pusha
adc
dec
arpl
inc
inc
mov
inc
adcl
dec
stos
mov
sbb
pop
add
fiadds
cmpb
lret
cmp
mov
dec
sbb
in
sbb
or
or
and
inc
xchg
and
xorl
lcall
xor
push
cmp
nop
pop
or
push
add
or
add
pop
jge,pn
cmpsb
sti
mov
popf
sahf
js
pop
pop
in
or
mov
xor
push
xor
xlat
add
mov
jo
int
loop
mov
adc
inc
test
fwait
cmc
mov
outsb
sbb
jne
or
lahf
inc
adc
mov
pusha
mov
mov
xchg
dec
inc
mov
int
bound
sbb
rclb
loop
fidivrs
mov
pop
in
and
adc
add
sarl
nop
test
outsl
clc
jbe
jae
inc
movsb
test
push
imull
push
xchg
or
sbb
loopne
xchg
js
andl
push
rolb
aas
inc
testb
imulb
mov
or
popa
pop
push
sub
popf
pop
jne
das
push
sbb
xlat
cmp
push
xchg
cmp
iret
lock
add
push
js
fwait
xchg
jp
ret
popf
xor
stos
pop
xor
mov
ret
pop
adc
mov
jns
cltd
and
dec
cmp
notl
outsl
je
jo
shl
in
ret
cmp
sbb
pop
sub
insb
xor
push
rclb
xor
addr16
outsb
lahf
sub
inc
dec
fnstcw
mov
ret
dec
les
loopne
clc
pop
xchg
sbb
sbb
push
aaa
sub
xchg
mov
mov
xchg
or
cmpsl
sub
or
mov
daa
add
fildl
pop
aam
mov
xor
mov
add
add
pop
and
add
add
call
fwait
pop
xor
inc
add
xor
or
pop
and
jmp
push
sbb
dec
mov
push
mov
or
xorb
pusha
sarb
xorb
and
cmp
dec
or
mov
aaa
subb
subb
sub
rcll
bound
stos
push
dec
das
and
les
jne
addb
sbb
push
xor
stos
push
adc
sub
mov
and
pop
and
shr
test
test
adc
sbb
cmp
jne
push
jnp
dec
pop
inc
jge
jne
sub
inc
and
dec
out
aaa
rol
mov
pop
shlb
adc
or
out
psubb
lock
adc
add
rcll
sub
pusha
and
sbb
mov
fdivrl
adc
pop
pushf
dec
mov
dec
inc
js
sbb
popa
and
fistl
mov
je
fstpt
dec
js
and
incb
fwait
lret
add
sbb
inc
add
jge
cmc
movhlps
rdmsr
mov
or
pop
sbb
jne
out
or
psubusw
aaa
push
or
pop
sbbl
mov
jecxz
aam
add
xor
aam
xchg
dec
mov
inc
dec
test
jmp
jne
mov
and
cmp
lock
fimuls
push
cmp
pop
mov
ret
out
xchg
push
jle
aad
sub
adc
jne
inc
fiadds
adc
nop
fidivl
adc
mov
cltd
call
or
adc
xchg
pop
xor
mov
jge
movsl
adcl
add
sub
sub
mov
notb
rolb
pop
shlb
mov
and
mov
and
or
call
adc
mov
mov
sub
mov
push
inc
enter
ret
add
and
ror
mov
adc
mov
and
popa
mov
mov
dec
xor
cmp
xchg
inc
add
addb
jle
inc
fldt
leave
mov
sbb
enter
cld
xchg
adc
pop
cmp
jg
xchg
jbe
fisubs
jl
or
adc
push
int3
jo
mov
dec
sub
sbb
addr16
hlt
rcrb
int3
cmp
ret
and
fstl
dec
xor
adc
xchg
fcomps
loope
add
jecxz
inc
lods
fwait
dec
mov
cwtl
xlat
push
cmp
pop
das
clc
fcoms
scas
mov
movaps
or
mov
lods
add
hlt
iret
push
int
push
add
inc
dec
iret
add
xor
mov
xor
je
mov
push
inc
and
and
sbb
dec
mov
push
pop
imul
lret
xor
pop
insl
jmp
mov
pop
cmp
add
inc
and
inc
inc
dec
sub
rcrb
dec
and
add
mov
outsb
icebp
or
add
sbb
add
mov
fnstcw
xchg
pop
jb
xchg
fprem
add
adc
or
rclb
or
enter
mov
push
or
leave
mov
ss
mov
sbb
test
mov
pushf
cwtl
xchg
nop
inc
push
sbb
sbb
out
and
in
mov
test
outsl
cmp
mov
imul
fucomi
adc
cmpb
bound
adc
je
lahf
xor
sub
mov
or
sbb
push
aas
and
outsb
mov
mov
add
jge
add
lods
imul
or
push
pop
iret
testl
dec
pop
xchg
xchg
out
pop
and
and
jg
stc
imul
push
add
mov
mov
mov
jge
push
jmp
jg
inc
jl
sub
jb
je
push
imul
dec
adc
adc
jmp
daa
xchg
cmp
leave
or
and
je
mov
cmp
dec
push
adc
adc
and
jo
or
jns
iret
xor
ja
mov
shll
aaa
push
push
sbb
cmp
add
adc
lock
loopne
jle
pop
mov
push
push
popa
cmp
jle
push
pop
and
jg
cmp
mov
fdivs
das
sub
or
into
or
push
mov
repz
sub
mov
addr16
mov
add
jae
add
lock
sub
rorb
xor
cmpsl
push
pop
lock
mov
ficoms
clc
push
adc
int3
add
daa
adc
pop
xlat
mov
dec
adc
sub
or
push
push
xor
xor
mov
ss
popa
dec
lods
and
lock
pop
pop
inc
xchg
les
or
adc
sbbl
sbb
mov
sub
int
sub
fdivrp
mov
xor
outsb
cmp
call
cmpl
jb
push
fistpl
ljmp
cmp
dec
push
lock
inc
lock
insl
pop
sub
mov
lea
lea
add
movl
push
push
add
mov
dec
repz
sarl
dec
dec
push
push
dec
inc
pop
cmpsl
sahf
out
push
sub
add
rorl
adc
aad
jns
jae
sub
in
es
sbb
push
cmpsb
sbb
cmpb
push
adc
xlat
test
jge
cmpsb
das
aaa
jns
cs
push
sbb
or
mov
add
mov
mov
in
inc
aad
dec
inc
dec
gs
pop
xchg
outsl
mov
pusha
push
push
fcoms
das
and
frstor
pop
sbb
stos
jo
rcpps
mov
sub
mov
push
mov
cmc
sub
shll
push
push
push
and
adc
jno
add
insl
inc
insb
popa
jns
and
pop
jae
push
push
cmp
mov
jl
cmp
mov
adc
fmull
add
lcall
les
rep
cwtl
ficomps
insb
fists
adc
inc
push
imul
fmull
incl
loop
jns
or
dec
or
cmp
repnz
xchg
roll
jle
push
jb
add
inc
or
pop
prefetchw
inc
int3
or
in
outsl
fcmovnb
decl
mov
pop
rcll
mov
std
sbb
cmp
inc
mov
jns
or
outsb
or
cltd
lea
push
push
xchg
nop
add
pop
xor
adc
sti
push
imul
push
adc
out
jecxz
dec
and
scas
sbb
shrb
and
sub
or
imul
jnp
add
jl
push
sub
or
sti
repnz
insl
add
cld
jecxz
mov
mov
push
adc
aad
xchg
insl
test
sbbb
psrad
adc
xchg
andps
loop
push
dec
leave
sbb
mov
cmpsl
mov
push
and
adc
inc
dec
aam
fmul
and
paddusw
filds
or
sbb
loopne
pusha
xchg
imul
cmpsl
push
mov
cmpsb
imul
imul
and
ja
in
fwait
and
fsts
and
nop
rcrb
inc
push
sbb
jno
ret
push
fucomip
daa
ret
lock
add
shlb
or
and
xor
or
fsts
mov
sub
sub
sahf
outsl
adc
into
clc
clc
lcall
iret
loope
jo
jns
test
xlat
out
mov
sub
es
adc
mov
das
dec
je
es
push
imul
lods
or
cmp
adc
add
push
cmp
cmpl
movsb
sahf
lods
mov
stc
or
push
adc
sub
add
js
das
enter
aaa
jle
xchg
adc
lea
pop
aam
lret
hlt
movl
sub
and
and
mov
and
lock
sbb
adc
or
pop
js
sarl
or
lea
subb
and
or
adc
adc
fcomps
shlb
hlt
jmp
mov
lods
mov
push
test
fldcw
or
sub
je
int
adc
ret
mov
int
add
push
cmp
jg
push
and
pop
add
cmp
xlat
clc
xchg
rcr
sbb
sbb
xchg
push
rol
sub
ljmp
pusha
lret
dec
repnz
ljmp
les
mov
xchg
inc
jg
push
xor
fisubrl
sbb
adc
test
inc
or
jmp
sub
or
loope
iret
push
xorl
into
xor
imul
sti
gs
nop
popf
mov
push
sub
ret
dec
xor
pop
sbb
roll
xchg
test
inc
dec
push
xchg
sbb
cmpb
je
and
jmp
mov
pop
test
pop
int
push
push
or
inc
lcall
adc
jge
xchg
fcmovnb
fistpl
out
or
inc
mov
cmp
mov
jg
jne
mov
sbb
and
cmp
data16
jns
mov
ss
jmp
xlat
add
data16
and
test
sbb
jge
add
inc
xchg
inc
subb
adc
xchg
sub
fisttpll
dec
dec
jmp
das
adc
popf
cmp
rcl
add
movsl
loope
adc
in
pop
add
int3
or
push
mov
push
push
imul
xchg
fisubl
xor
inc
lods
pop
shl
inc
stos
addb
ret
sub
sub
movsl
filds
adc
or
mov
push
ret
cmp
shll
mov
dec
add
add
in
pop
insl
add
mov
in
and
cmp
adc
fwait
lret
divl
push
pop
lret
das
fdivl
jb
jmp
jmp
in
sbb
popa
andl
out
dec
mov
out
test
mov
mov
outsl
in
push
add
outsb
fmuls
xor
lock
loopne
cmp
jmp
mov
add
and
movsb
jns
xor
call
lods
in
aas
fstps
es
push
dec
test
cli
out
adcb
dec
xor
cmp
mov
jne
mov
sbb
xor
inc
test
lcall
lcall
mov
aad
sbb
inc
es
sub
cld
push
cld
loope
in
fs
mov
dec
fs
jne
fidivrs
adc
add
inc
dec
cmpsl
popa
call
out
inc
ret
ret
push
push
or
and
cmp
and
push
call
test
push
clc
out
out
xor
push
or
or
xorl
repnz
in
stos
out
out
lock
movsb
cmpsb
inc
and
and
fimuls
data16
push
lock
test
mov
dec
test
adc
push
xchg
adc
xor
rcrb
add
movsl
stc
lock
xchg
scas
loope
mov
inc
iret
sti
push
dec
je
or
sbb
fwait
push
or
daa
lahf
mov
flds
jmp
xor
adc
cmpsl
ret
scas
fcmovbe
mov
push
jb
dec
add
pop
add
and
and
je
push
and
jmp
or
not
bound
cltd
push
or
mov
jne
sbb
fsubp
push
adc
adc
es
sbb
shlb
sbb
jo
sub
fadd
cmpl
bound
or
mov
xor
dec
pop
iret
cmp
cmp
test
mov
shl
mov
add
inc
repnz
add
jno
pop
fadd
xchg
js
inc
outsl
mov
test
sbb
in
xor
xchg
pop
jo
leave
mov
call
dec
jge
fcomps
rclb
push
pop
lea
push
test
outsb
dec
mov
dec
push
sahf
imul
push
dec
sahf
dec
sahf
insb
fdivs
jl
pop
adc
xor
mov
xor
or
in
push
jb
and
dec
and
outsl
push
cmp
jae
test
push
repz
and
pop
lcall
jno
out
or
pusha
int3
cmp
pusha
nop
fs
sbb
outsl
insl
arpl
push
push
out
pop
les
inc
mov
push
inc
das
push
inc
es
sub
push
shrb
test
pop
xor
lcall
mov
adcb
lds
stos
add
sub
pop
das
or
adc
pop
outsl
jae
mov
lods
mov
jg
fbld
imul
and
aam
push
imul
pop
add
aas
inc
sub
push
push
push
adc
sbb
sbb
mov
adc
call
testl
clc
adc
imul
pop
push
sub
test
das
add
insl
sub
xor
pushf
les
inc
lods
fisttpll
add
xor
ret
mov
and
jns
fimuls
enter
cmp
cli
jl
fimuls
out
enter
insb
xchg
stc
inc
xor
decl
adc
cmp
pop
mov
and
mov
jns
in
test
in
xchg
cwtl
pushf
mov
movsb
test
mov
in
in
mov
in
enter
in
in
fcomp
loopne
in
in
call
in
hlt
clc
cld
add
jb
xor
or
jb
jb
adc
sbb
jb
jb
and
sub
bound
jp
dec
inc
and
sub
dec
mov
aad
pop
mov
sbb
jnp
in
shrd
test
std
lods
insb
sahf
out
or
sub
pusha
cmpsl
dec
and
jne
sub
in
nop
out
cmp
push
xchg
add
mov
jns
in
xchg
sbbb
pushf
test
push
in
nop
mov
lahf
add
lods
add
repnz
xor
cmpl
sbb
jae
shrb
pop
bnd
mov
jae
iret
int3
cwtl
shrb
rcr
jae
iret
sbb
sbb
lock
call
sbb
sub
in
lock
push
out
sahf
add
push
nop
js
and
add
or
mov
jae
adc
sbb
cmp
bnd
fiaddl
add
in
sub
out
sahf
sub
xor
mov
test
ja
std
incl
jne
je
gs
gs
pop
rclb
cwtl
push
mov
mov
sbb
insb
outsl
jae
and
sbb
jne
test
ret
adc
mov
arpl
fcmovbe
aas
push
or
push
daa
test
test
mov
je
jne
test
inc
xchg
shrl
gs
addr16
cmp
in
test
dec
arpl
jae
imul
sbb
inc
outsl
fs
shl
pop
or
outsb
jae
sbb
pop
fwait
pop
pop
pop
dec
adc
pop
pop
mov
jg
popa
out
adcl
xor
push
sbb
test
sbb
xor
xor
pop
dec
xor
push
mov
js
jecxz
aas
and
sub
ss
pusha
sub
pushf
xorl
and
ss
insb
aam
fcompl
mov
xchg
aas
lds
mov
pop
xchg
push
nop
sbb
ja
movlpd
xchg
sbb
out
jle
je
addr16
jne
insb
mov
ret
pusha
imul
sub
repnz
das
mov
es
pop
xchg
cmp
js
inc
outsl
arpl
xor
adc
arpl
ljmp
outsl
pop
adc
sbb
adc
adc
arpl
insl
add
pop
addr16
and
add
xlat
xor
jne
xchg
push
add
jne
repnz
jbe
cmovbe
subl
add
lea
add
out
mov
mov
insl
dec
addr16
mov
push
je
out
nop
sbbl
cmp
inc
loopne
fdivr
in
and
hlt
enter
push
and
in
push
sub
pop
pop
dec
push
fs
pop
fs
push
fs
xchg
pusha
sbb
dec
push
pushf
cmp
in
push
jbe
sub
jmp
in
in
leave
add
push
sbbl
leave
adcl
cs
and
in
adcb
or
pop
loopne
stc
jo
add
lods
mov
cmp
int3
scas
hlt
dec
push
inc
js
ffreep
push
add
or
and
cld
cs
int
xor
sub
and
xor
pusha
xchg
sub
push
add
and
xchg
inc
fcompl
cmpsl
dec
incl
dec
fstpt
popa
mov
inc
movsl
inc
push
imul
cwtl
dec
imul
ja
dec
mov
cmpb
dec
outsb
repnz
push
push
lea
inc
jo
call
inc
movb
push
push
pop
xor
mov
inc
mov
adcb
or
sahf
push
scas
cmp
cmp
mov
cmp
adc
pop
sbb
inc
cmp
add
jmp
jp
inc
cmp
ljmp
clc
xor
daa
loop
test
sbb
inc
and
daa
pop
or
adc
inc
cmpsl
adcl
xchg
cmp
mov
sbb
pusha
in
inc
ss
aam
dec
insl
and
out
adcb
lods
pop
ficompl
cmp
out
add
pop
mov
out
sub
push
mov
inc
push
sub
add
sbbl
mul
adc
sub
lock
imul
mov
cmp
sub
or
and
inc
test
pop
in
pushf
lea
insl
pop
pop
or
mov
lock
popa
push
or
push
inc
decl
xchg
in
inc
push
es
add
test
adc
aas
mov
inc
inc
cmp
jne
add
and
pop
sbb
popa
push
push
decb
inc
and
lods
cmp
mov
xchg
xor
jnp
std
faddl
pop
in
pop
rcr
xchg
mov
loopne
add
push
js
jns
add
sbb
pop
cwtl
filds
add
mov
mov
xchg
fcoml
sbb
fstpt
rcl
xchg
xor
cmp
je
dec
inc
pop
enter
fcomip
pop
mov
pop
das
movsb
cmp
je
fidivs
pop
pop
xchg
testb
xchg
inc
int
lds
mov
pusha
pop
jl
pop
fcompl
insl
fidivs
data16
pop
mov
sets
xor
push
inc
jne
pop
pusha
ja
xlat
mov
pop
fdivrl
fdivrs
rcl
pop
cs
subb
cmp
xchg
dec
cmpsb
jl
stc
mov
iret
add
les
pop
jae
enter
xchg
jle
or
adc
add
addr16
jns
pop
sub
sub
lcall
add
test
fmuls
aaa
lods
aad
inc
add
xchg
faddp
test
lea
inc
push
adc
fadds
push
dec
inc
or
push
mov
cmpsl
jmp
out
dec
sbbb
xor
lods
jmp
enter
lock
mov
mov
ds
fnstenv
sub
add
adc
out
mov
in
or
push
imulb
addl
pusha
xor
xor
call
inc
sbb
cmp
and
push
xor
clc
rorl
add
lahf
ret
js
mov
mov
pop
jl
clc
jp
xchg
push
xor
xor
rolb
insl
adc
inc
mov
pop
aam
xchg
jbe
inc
sbb
repz
dec
aad
ljmp
or
mov
mov
mov
pop
pop
and
xchg
mov
xchg
add
sub
dec
and
mov
test
or
adc
fwait
inc
aam
inc
pop
ror
dec
jp
arpl
dec
mov
pop
addb
xor
in
enter
in
mov
and
call
rcll
dec
fadd
adc
scas
mov
or
iret
sbb
orb
mov
adc
insl
mov
pop
jne
inc
cwtl
or
aaa
js
sahf
ret
pushf
mov
xchg
pop
xchg
movsb
test
push
lods
mov
or
pusha
sub
pop
mov
jb
mov
mov
imul
adc
hlt
aas
int3
shlb
mov
loopne
jl
mov
and
cwtl
mov
add
mov
sbb
call
lock
rorb
leave
sbb
ss
xchg
scas
mov
test
es
add
rorb
pushf
divb
dec
dec
les
adc
js
push
lcall
mov
addb
push
push
daa
inc
stc
pop
dec
outsb
inc
gs
ficoms
movl
or
mov
pop
or
and
into
mov
lret
cmp
xchg
cwtl
pushf
push
add
push
pop
mov
sbb
or
xor
push
nop
pop
pop
stc
add
aam
loope
mov
in
cmp
popa
add
fcompl
loopne
fcoml
pusha
loopne
movb
add
mov
add
movl
add
idivl
jge
sub
lret
push
lock
pop
in
gs
ja
cmp
loopne
sbb
dec
inc
xor
fstpt
mov
cmp
cmp
inc
cld
bound
out
stc
jae
inc
test
cs
mov
loop
add
xchg
add
clc
or
xor
inc
ja
ret
fcmovnbe
pushf
ret
sbb
mov
test
arpl
into
cmp
jle
or
or
xorl
sti
or
inc
inc
jo
xor
orb
aam
dec
lcall
pop
mov
data16
sub
clc
jne
aaa
jo
rolb
lods
push
rcr
aam
and
push
imul
add
cmp
out
ret
test
jne
shrl
adc
mov
and
or
mov
cli
push
push
add
sub
mov
xor
sub
jl
pop
cmp
insl
rolb
fcom
or
add
enter
enter
pop
test
aas
int3
add
add
andl
lret
imul
push
into
rolb
loopne
jmp
sub
mov
sbb
dec
xchg
pop
xor
and
fildl
xor
dec
je
jne
sub
mov
xchg
out
mov
aaa
xchg
and
rorl
jns
push
in
or
dec
mov
mov
mov
sarb
push
and
mov
pop
ficomps
sub
movsb
push
add
call
cmp
xchg
inc
mov
inc
rcll
add
shlb
sub
insl
sarb
lds
push
fimull
push
mov
int3
add
adc
mov
adc
movsb
jbe
pop
push
jo
cmpsl
add
fbld
mov
cmp
pop
call
cmp
sub
lods
test
jl
xchg
pusha
lods
push
aaa
pop
add
sbb
mov
sti
and
adc
add
in
cmp
or
add
pop
add
ret
ret
cmpsb
inc
adc
dec
pop
popf
lcall
sahf
or
jae
pop
les
mov
fcoms
pusha
push
sub
or
xor
mov
fstpt
pop
ret
jne
popf
cmp
sbb
daa
pop
sti
adc
in
aam
jns
xor
enter
rcrl
cmp
int
add
or
xor
subb
stos
movsl
push
adc
subl
or
arpl
jo
test
push
clc
aad
mov
adc
add
dec
and
mov
sbb
adc
mov
std
or
movsl
fdivl
lea
push
cmp
adc
dec
push
add
inc
mov
sbb
mov
test
sbb
jp
xchg
inc
js
push
aas
jge
add
inc
pushf
scas
imul
or
inc
xor
mov
adc
aas
add
inc
insb
xchg
push
into
mov
je
js
add
sahf
push
add
in
dec
les
sub
mov
xor
mov
push
cmp
jmp
mov
nopl
insb
addr16
ss
pop
inc
imul
jo
push
adc
shll
je
and
pop
sub
jl
test
or
push
cmp
je
dec
jo
dec
jae
inc
mov
int
out
mov
mov
inc
lcall
popa
mov
or
xlat
or
add
pop
pop
lods
mov
cltd
ja
adc
jo
mov
cmp
adc
add
addr16
nop
mov
in
or
dec
pop
xchg
add
mov
scas
dec
xor
and
push
mov
sbbb
cmpl
add
in
pop
cmp
imul
lods
push
xor
sub
xchg
cmp
out
jmp
enter
repz
outsb
cwtl
push
mov
cwtl
sub
sbb
lcall
dec
and
jo
inc
movsb
dec
mov
add
jbe
rorb
outsl
mov
ds
add
out
mov
movsb
test
lock
jnp
inc
ljmp
xor
push
push
daa
mull
in
and
pop
sbb
adc
mov
xchg
gs
mov
push
xchg
jae
test
sbbl
add
jbe
mov
popa
cmp
addr16
add
add
inc
int
inc
inc
mov
mov
clc
cmp
push
incb
je
test
je
jns
leave
mov
fimull
push
add
out
enter
cmpsl
mov
clc
inc
orb
sub
jae
test
push
dec
hlt
sub
or
call
add
fiadds
dec
fwait
push
sbb
adc
lock
xchg
sbb
nop
adc
pusha
adc
imul
lods
bound
fs
clc
repz
xorl
out
pusha
addr16
cmpsb
jp
mov
rdtsc
jb
mov
cmp
mov
lcall
adc
shrb
fmull
imul
adcb
ss
imul
nop
icebp
mov
pop
add
push
outsl
jo
jo
shll
and
pop
inc
or
sbb
insl
jl
cltd
cmp
sbb
pop
add
xchg
sbb
pop
in
adc
inc
js
faddl
sbb
or
xor
scas
inc
jnp
sbb
ficomps
push
bswap
xor
sbb
inc
imul
js
enter
mov
addr16
imul
push
or
add
mov
add
xchg
sub
fisttpl
adc
xlat
fwait
jo
xor
push
ja
jae
dec
and
xchg
nop
and
call
and
insb
jns
dec
jbe
sbb
xchg
andl
dec
movsb
jns
rorb
inc
sbb
out
inc
xchg
xchg
test
sbb
imul
ja
cld
dec
fcomp
sbb
and
sbb
int3
loopne
fbld
dec
adc
dec
xlat
jo
mov
daa
inc
fmuls
adc
push
repz
lods
insb
xor
xchg
or
adc
rclb
pushf
add
mov
mov
pop
dec
push
push
push
inc
loopne,pn
and
add
xlat
mov
je
mov
cmp
daa
sbb
push
popa
outsl
jb
testb
cs
xor
add
add
rolb
imul
sub
jl
xor
mov
xor
xchg
mov
cmp
test
inc
push
divl
nop
jmp
subl
je
mov
fwait
mov
sbb
xor
mov
mov
inc
adc
lret
stc
jnp
and
sarb
mov
pushf
rorb
enter
xchg
and
dec
aam
add
add
scas
pusha
mov
dec
and
pop
inc
loope
call
js
and
adc
test
add
add
sub
add
adc
sbb
xor
jg
stc
and
or
jl
mov
jne
jp
jbe
das
sub
jb
adc
sbb
imul
fdivrp
fucomp
subl
mov
cmp
inc
call
mov
or
fmull
jmp
jbe
pop
subb
jle
xchg
pop
and
push
xchg
jno
mov
cmp
dec
leave
or
and
imul
add
push
rclb
aas
sbb
call
dec
push
test
add
pop
push
cwtl
not
cmp
adc
mov
push
cltd
js
dec
jb
add
pusha
outsb
push
cmpb
pop
lea
pop
jnp
dec
lea
adc
jae
pop
sub
fwait
dec
sti
js
mov
mov
ret
test
xchg
mov
push
test
jns
out
pop
shr
inc
sbb
out
cmpsl
outsl
cmpb
imul
lea
out
and
jp
cs
dec
cmpb
in
rolb
add
shlb
outsl
jne
mov
and
inc
cmpsb
bswap
loop
mov
push
dec
xchg
rorl
mov
les
push
sbbl
fiaddl
xor
pushf
and
mov
les
xchg
mov
addr16
and
pop
mov
jb
push
mov
pop
sbb
imul
call
add
nop
jns
or
lret
rclb
lahf
mov
inc
cmpsb
xchg
aad
in
fs
js
das
jnp
nop
and
jnp
jge
pushf
pusha
and
shl
fcompl
ret
xorl
pop
shrb
mov
xor
mov
dec
icebp
aaa
test
rorl
pop
xor
push
and
xor
xchg
pop
add
pushf
shrl
inc
sub
shrb
fidivrl
movsl
jge
cmc
ret
cmp
inc
dec
jl
adc
xchg
add
dec
jl
mov
rcrb
fnstenv
and
loop
cmp
or
inc
xchg
lret
jecxz
jl
or
dec
mov
aas
aaa
testb
sbb
mov
sbb
pop
out
add
sub
jae
sub
mov
push
mov
xor
inc
adc
sbb
adc
inc
add
push
mov
push
sbb
add
or
out
mov
lods
mov
das
sbb
test
test
xlat
add
pop
xor
add
and
jbe
mov
nop
mov
daa
adc
adc
or
sbb
scas
push
in
loopne
or
push
add
or
aas
push
xchg
push
pusha
orb
sub
imul
outsl
xor
inc
popa
loopne
and
add
ss
push
jg
push
inc
and
sbb
or
sbb
mov
pop
push
in
stc
sbbb
sub
ror
sbb
and
sub
sub
cs
adc
adc
inc
push
sbb
push
push
sbb
sbb
sbb
fs
inc
sbb
push
pop
add
add
inc
push
sbb
push
push
sbb
or
or
fs
inc
or
push
and
repz
hlt
cmc
div
inc
xor
and
stc
das
ror
push
and
shll
add
lcall
lock
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
nop
push
cmpsb
imul
cmpsb
imul
imul
imul
cmpsb
imul
lock
loopne
cmpsb
imul
cmpsb
imul
cmpsb
imul
cmpsb
imul
mov
test
mov
lods
cmp
aam
inc
das
test
and
add
dec
movsl
push
and
or
int3
sbb
out
add
and
cmp
mov
mov
loop
dec
mov
rcl
mov
daa
push
mulb
and
mov
pop
mov
sbb
mov
push
rcr
and
pop
imul
and
shll
lock
jb
cmp
ja
pop
sub
les
lock
repnz
push
aam
mov
insb
out
pushf
insb
dec
mov
push
test
xchg
pop
inc
out
cmp
add
bound
insl
fcomps
cwtl
xor
das
xor
mov
lcall
aam
jb
add
sub
xchg
xchg
cld
icebp
add
ret
sub
in
lcall
mov
mov
xchg
xor
sub
dec
push
enter
lock
pop
inc
ficomps
mov
mov
cmp
mov
loopne
subl
hlt
iret
fdivl
xchg
mov
adc
adc
mov
push
sarl
fisubrl
pop
daa
push
or
push
aaa
or
add
ficompl
sti
xchg
or
or
xchg
je
call
insl
aaa
enter
clc
or
shrl
adc
sbb
in
adc
popf
mov
pushf
loope
add
clc
add
sahf
test
jle
jne
aaa
scas
pop
into
adc
add
jmp
add
insl
ret
inc
or
daa
loopne
ret
push
aas
cmp
stos
aas
or
insb
add
xor
xor
mov
sub
jmp
dec
sbb
fst
or
mov
pusha
push
popa
sbb
fs
inc
pop
loop
mov
data16
inc
pop
ja
sub
or
xlat
dec
add
jo
cmp
add
pop
xchg
or
daa
hlt
and
nop
std
sub
test
test
andb
pop
xorb
nop
sub
loope
add
pop
cmp
adc
cmp
lds
nop
inc
sbb
movb
xchg
fstps
push
pop
add
mov
add
xor
push
sub
sbb
jbe
sbb
add
ret
mov
adcl
inc
adc
add
mov
loopne
push
sahf
das
sub
mov
fs
dec
ds
test
lock
or
aad
lock
and
or
movsb
pop
and
and
insl
sub
jns
cmp
dec
in
rol
sbb
enter
or
mov
movsl
mov
loop
nop
jle
inc
int3
inc
ss
mov
mov
or
ret
xchg
lcall
mov
ret
push
pusha
sbb
movsb
sbb
mov
inc
pusha
insb
enter
call
mov
dec
data16
adc
mov
hlt
pop
mov
sub
jmp
das
and
adc
iret
xchg
add
push
mov
cmpsl
and
pushf
pop
pop
or
sbb
add
mov
mov
cmp
pop
testl
mov
add
or
add
push
popf
and
lret
lea
mov
sbb
mov
fmuls
push
jge
push
add
sbb
sbbb
pop
mov
and
addr16
rclb
add
jns
jo
and
sbb
jae
xor
imul
or
xchg
popa
mov
and
cli
jle
pop
insb
dec
adc
inc
push
cmp
jmp
push
adc
pop
cmp
popf
add
repnz
mov
adc
mov
aas
dec
or
pop
jecxz
xchg
or
xchg
xor
test
and
loopne
jge
mov
lock
or
loopne
iret
lfs
push
dec
enter
jne
addr16
cld
xor
lret
ret
out
cmp
aas
jb
and
xor
pusha
and
xor
enter
add
mov
mov
out
es
fdivrs
xor
sub
test
mov
push
pop
cmp
ret
les
daa
sti
dec
sbb
in
aas
out
enter
xor
pop
mov
xchg
add
clc
scas
imul
fadds
fld
cld
push
iret
xchg
popf
inc
sti
enter
cmp
pusha
adc
mov
and
repz
ret
into
cld
scas
xor
jnp
leave
idivl
cmp
add
push
shrl
cmpsl
pusha
xchg
xor
add
and
scas
imul
jo
or
subb
pop
daa
imul
inc
sti
aas
call
jl
or
bound
popa
ja
pop
rcrb
ja
pop
sahf
nop
movsb
fwait
call
sbb
mov
and
push
or
or
out
jae
sub
push
adc
stos
or
test
pop
sbb
inc
pop
aas
inc
aas
comiss
adc
add
cmp
shlb
mov
popf
inc
or
test
loope
push
shll
mov
daa
mov
mov
adc
movsl
adc
xor
in
sbb
je
addb
cmp
pusha
mov
mov
fwait
ds
xchg
ss
stos
data16
jo,pt
fdivrl
adc
push
push
fstpl
push
in
fnstenv
mov
push
and
and
sti
xor
xor
sub
xor
dec
imul
sbb
push
movl
mov
add
imul
insl
inc
outsl
insl
out
int
js
arpl
pop
push
daa
jo
jb
jb
popa
or
adc
fisubrl
popa
dec
es
sahf
mov
data16
daa
ja
imull
rcrl
pop
jb
xchg
mov
sahf
addr16
push
mov
out
movsl
mov
arpl
insb
daa
push
subb
sub
stos
outsb
in
insl
ss
das
je
cmpsl
sbb
int3
add
mov
imul
xchg
cmp
pop
je
and
pop
jb
arpl
in
cwtl
int
jns
outsl
dec
pushw
das
add
push
imulb
jb
popa
rorb
and
add
out
cmp
mov
addb
jmp
aam
outsb
add
pop
arpl
add
das
call
dec
sub
dec
dec
sub
pop
mov
cmpb
daa
aam
jl
or
icebp
sub
adc
and
ret
movl
mov
dec
pop
sbb
or
sarb
js
push
or
add
subl
push
push
out
mov
xchg
mov
pop
bound
ret
sbb
iret
ret
adc
or
pop
js
lods
movntq
out
movsl
mov
jg
jge
adc
subl
and
in
mov
mov
xchg
xchg
outsb
push
pop
ja
or
jge
sub
pusha
outsb
mov
mulb
addb
and
ret
xor
into
in
adc
arpl
or
nop
jge
xchg
xor
or
pop
jno
rcrb
xor
sahf
cmpsl
jge
jmp
sbb
or
nop
xor
dec
fcompl
or
mov
xchg
aad
pop
fs
aaa
fidivrl
adc
add
or
add
add
xchg
gs
add
push
pop
pop
or
or
or
or
cmpsb
imul
lcall
adc
cmpsb
imul
xor
sti
mov
and
and
cmp
and
xor
roll
addr16
dec
shll
fsubrp
lcall
and
inc
imul
imul
lcall
xor
jno
cwtl
cmpsb
push
pop
xchg
jmp
inc
outsl
fwait
add
or
or
add
push
push
adc
or
xor
adc
push
iret
cmpb
sbb
sbb
xor
or
cmpb
push
or
iret
push
and
sub
repnz
sub
xor
and
adcb
adc
repnz
cmp
adc
inc
push
inc
repnz
xor
dec
sbb
cmp
sbb
push
or
xor
sbb
cmp
sbb
imul
out
lcall
imul
sahf
stos
out
and
and
pop
mov
sahf
and
fs
popl
test
pop
call
insl
loope
into
xor
dec
mov
into
inc
leave
pop
lret
cwtl
loopne
fstpt
add
pop
clc
push
lea
mov
push
loope
pop
inc
das
js
lock
je,pn
or
pop
push
mov
clc
push
adc
push
add
call
sbb
mov
les
lahf
lock
lock
rorb
jae
int3
mov
push
loope
subl
sbb
sbb
pop
push
loopne
ftst
sub
dec
add
add
pop
js
dec
int3
mov
dec
sub
and
lds
mov
dec
cmp
cmp
out
sbb
xchg
into
xchg
lea
sbb
lods
mov
pop
rorb
inc
inc
jg
adc
clc
add
xor
shl
adc
push
dec
inc
pop
fs
nop
insb
and
sub
add
jns
jne
dec
mov
pop
push
xor
xchg
nop
mov
inc
outsl
je
xor
push
je
xchg
loopne
push
inc
pop
je
mov
stos
xchg
xchg
add
add
loop
fisubl
pop
and
inc
mov
pusha
incl
adc
add
mov
mov
lods
loopne
push
mov
mov
mov
inc
mov
mov
lcall
cmp
cld
mov
setno
insb
xchg
adc
pop
sub
inc
imul
inc
mov
les
mov
mov
xchg
inc
outsb
pop
adc
push
stc
nop
scas
pop
sbb
pfcmpeq
inc
adc
daa
sbb
inc
aad
dec
enter
insb
lds
es
or
fxch
add
mov
ss
dec
push
push
dec
je
mov
mov
or
cmovne
popa
push
test
enter
push
js
shll
adc
mov
rolb
pop
imul
mov
or
add
add
cmpsb
xchg
test
les
inc
test
andl
out
stos
and
imul
push
loopw
and
sbb
fwait
sbb
xchg
pusha
insb
add
mov
pop
pop
insb
xchg
pop
lods
sbb
or
repz
loop
outsb
cmp
out
jno
and
sbb
cmp
call
bound
andl
mov
add
xor
sahf
mov
imul
mov
pop
mov
dec
popa
and
push
push
enter
and
or
and
mov
push
fnstenv
add
dec
xchg
es
sub
add
sub
add
ret
xchg
add
pusha
mov
lahf
cs
test
inc
out
dec
js
sbb
leave
nop
das
dec
gs
jbe
sbb
or
inc
xor
xor
xorl
adcb
mov
xor
arpl
push
lret
push
fsubrl
jo
inc
push
dec
lods
dec
sbb
les
outsl
dec
scas
xor
mov
push
and
jp
mov
add
adc
dec
add
add
mov
adc
aaa
dec
test
dec
jmp
pushf
arpl
adc
inc
dec
xor
daa
les
add
int3
imul
mov
call
dec
mov
dec
test
add
fcomp
and
mov
mov
push
and
push
cwtl
push
dec
data16
call
or
dec
clc
sbb
adc
mov
jns
pop
fsts
sub
movsb
pop
push
loopne
insb
adc
or
push
mov
fs
pop
mov
or
add
movsb
mov
cmp
popa
bound
inc
mov
loope
dec
mov
push
mov
dec
mov
adc
push
pop
sbb
sub
inc
sti
add
sub
sub
inc
push
aas
cwtl
or
xchg
add
push
bound
lar
into
sti
xor
fmuls
pop
or
jbe
sarb
xchg
dec
arpl
mov
fnstenv
or
xchg
int
stos
or
fdivs
pop
adc
stos
xchg
lds
clc
and
xorb
xchg
rcl
aas
xchg
pop
rorb
lock
sbb
dec
aam
or
mov
test
sbb
adc
add
dec
movsl
adc
sub
stos
and
enter
xchg
dec
and
xchg
sbb
sbb
sbb
adc
andl
nop
rorb
mov
adc
push
push
dec
adc
pop
fiaddl
rcrb
dec
insl
gs
mov
jno
jge
fadds
cld
arpl
clc
jne
js
outsb
addr16
add
mov
fs
inc
mov
sub
push
add
and
outsl
test
rolb
xchg
add
rclb
sub
dec
hlt
test
sub
ja
or
and
push
inc
mov
xchg
cmp
adc
inc
pushf
xor
shlb
or
xchg
inc
jbe
inc
add
dec
xor
lods
inc
pop
pop
sub
fnstenv
fs
and
or
aaa
cmp
add
add
xor
add
add
xor
in
sbb
hlt
add
rol
aaa
add
enter
pushaw
jmp
inc
js
je
mov
fcoms
ret
fdivrs
xor
lods
inc
loopne
test
andb
loopne
nop
call
jbe
push
jo
cmp
add
add
sub
jb
inc
mov
sbb
push
mov
xchg
inc
mov
xor
mov
mov
shrl
push
push
clc
insl
int
pusha
daa
cmp
cs
lods
push
pushf
xchg
ss
push
push
clc
pop
and
loopne
add
jmp
push
je
push
xchg
mov
mov
push
cmp
push
mov
push
mov
dec
incb
mov
push
push
fcoms
dec
shl
inc
jne
fcmovb
mov
outsb
loope
mov
mov
pop
mov
fs
jle
or
jns
repnz
insb
adc
insl
add
nop
outsb
push
or
mov
add
ficoml
subl
cmp
filds
add
cmp
ret
imul
push
push
xchg
fiaddl
outsb
pop
sub
mov
ret
leave
mov
push
or
sbb
inc
ss
fdivl
push
push
sbb
dec
push
jns
leave
mov
outsb
fsubrl
daa
inc
sbb
push
outsl
jo
pop
mov
jmp
incl
push
cmp
xor
mov
sub
push
push
pop
sbb
test
lahf
xchg
pop
sbb
rclb
add
loop
pop
movl
push
xor
pop
or
test
mov
mov
inc
movlps
inc
xor
and
or
rolb
pop
inc
xchg
sub
adcb
push
in
jno
adc
push
sti
add
popa
stc
jae
lods
mov
stc
sbb
nop
add
sbb
xchg
and
sbb
sbb
mov
leave
xchg
sbb
or
mov
inc
jb
and
add
adc
and
push
leave
add
pop
daa
sub
and
sub
sub
sbb
sub
jb
sbb
cs
test
jb
xor
adc
scas
dec
inc
sbb
hlt
cmp
mov
mov
mov
xchg
ret
add
jo
sub
adc
and
fnstenv
push
jmp
popf
xor
and
pop
jno
inc
xchg
dec
inc
mov
adc
mov
addr16
mov
jb
mov
xchg
nop
js
pusha
loopne
and
sub
mov
adc
cwtl
out
es
add
xor
movsb
test
loopne
push
cld
dec
jne
or
mov
out
lahf
push
push
dec
xchg
movsb
roll
adc
sub
dec
mov
and
movsl
das
stc
mov
test
push
imul
mov
movsb
shlb
adcl
pusha
daa
inc
jmp
roll
stos
and
out
mov
xchg
decl
adc
movsl
or
sub
rol
sub
jo
pop
pushf
das
lcall
faddl
adc
xor
mov
cmp
cld
negb
subl
mov
outsl
xchg
add
inc
es
or
add
jb
movzwl
insl
outsb
pop
push
jg
push
adc
iret
or
mov
fwait
mov
mov
mov
adc
jmp
imul
push
pusha
add
out
sbbl
cmp
jne
and
xlat
in
jl
ljmp
add
xor
pop
cmp
arpl
sti
pushf
xor
mov
xchg
jno
pop
or
mov
cmp
notl
pop
mov
pop
inc
jns
push
push
push
push
mov
dec
sbb
les
les
or
jne
in
imul
inc
loopne
outsl
xor
xchg
test
adc
push
rol
or
cmp
xchg
mov
sarl
push
push
cmp
insb
loop
xchg
testb
push
sbb
nop
dec
cmp
nop
inc
cmpsb
or
and
jmp
test
xchg
int
in
popa
or
xor
iret
mov
and
sbb
out
xchg
mov
outsl
cmp
mov
pop
and
repz
dec
ljmp
inc
push
adc
mov
imul
push
das
jge
add
inc
das
push
mov
xor
and
cmpl
push
test
add
rolb
test
add
adc
add
cmp
push
jo
xchg
push
add
movl
fldl
mov
in
sbb
sbb
adc
out
dec
mov
inc
sbb
fs
jp
js
les
in
mov
jae
or
xchg
int3
adcl
mov
scas
and
or
pop
sbb
test
xchg
add
cmp
out
pop
inc
jl
and
xchg
jbe
lret
aad
cmpl
lds
negb
cmp
mov
out
jle
pop
lods
movsb
cmp
push
insb
nop
xchg
loop
xor
pusha
imull
xor
fwait
pop
push
das
ret
daa
adc
je
jge
cmp
push
pushf
loope
imul
pop
adc
and
mov
add
sub
sub
cltd
and
mov
mov
ss
mov
mov
and
pop
adc
ja
gs
or
inc
ret
mov
sub
rorb
rcr
arpl
pop
add
insb
add
enter
sahf
push
out
sub
stos
push
jb
into
push
xchg
sbb
add
mov
and
xchg
jl
pop
push
xor
mov
add
xor
xor
inc
test
mov
bound
or
add
mov
leave
push
testb
aaa
push
mov
imul
es
xor
outsb
outsl
scas
and
pop
int3
mov
mov
cmp
jns
xor
adc
es
xor
pushf
shlb
cmp
jg
dec
mov
and
inc
or
add
rcll
add
addl
adc
sbb
and
jb
int3
and
dec
xchg
fs
sahf
cld
scas
cld
inc
add
inc
add
sub
aas
add
scas
sbb
ja
cli
dec
mov
sub
stc
in
shrb
scas
dec
loopne
dec
or
ret
mov
sbb
add
inc
jle
or
adc
xor
mov
mov
and
jg
call
andl
or
addl
pop
push
rcrb
fsubrs
stos
inc
push
inc
mov
inc
and
add
cld
mov
test
adc
pop
cmp
mov
repz
dec
mov
jp
pop
shll
jmp
inc
rcll
in
lahf
adc
mov
es
imul
sti
fldcw
xor
adc
aam
fadds
dec
adc
pop
nop
add
jo
movsb
mov
adc
xchg
jl
add
or
stos
dec
sbb
pop
testb
mov
loopne
out
or
aam
jns
sbb
movsl
adc
pop
loopne
pop
ror
push
nop
dec
inc
es
mov
rorl
rclb
inc
inc
fisubrs
cmp
inc
push
cmpsl
and
adcb
xchg
mov
mov
lock
ds
lods
add
imul
mov
arpl
mov
push
nop
push
push
mov
mov
test
mov
cld
xor
ret
add
sti
add
cmp
rol
cmp
mov
lock
adc
out
sbb
xchg
inc
rol
add
call
mov
adc
enter
jbe
jo
pop
cmp
or
ja
sub
and
test
jne
push
orl
inc
pop
ja
push
jl
std
add
fcomps
jne
hlt
fistpl
sbb
inc
push
lods
push
cmp
test
push
or
pop
loopne
xorl
cmpl
and
or
mov
fimuls
adc
sub
js
cmpsl
push
fs
sarl
pop
pop
je
mov
adc
xchg
sbb
mov
out
cs
xor
test
adc
call
and
sub
jl
push
loope
jo
imul
pop
and
add
cmp
jmp
dec
sub
pop
push
and
xor
hlt
add
lods
mov
int3
push
push
dec
in
cmp
inc
add
jge
dec
adc
sarb
pop
adc
clc
popa
scas
movb
sbb
ss
cmpsl
xlat
and
push
rorl
push
adc
shlb
dec
rorb
xor
repnz
sub
or
rol
sub
jmp
mov
cmp
mov
xor
mov
daa
add
idiv
xchg
test
ret
inc
xlat
pop
add
cmp
mov
xchg
and
into
ds
dec
add
sub
mov
mov
jmp
jmp
mov
mov
jno
sbb
cmp
fwait
inc
mov
aas
cmc
xchg
fiaddl
or
dec
dec
or
push
loope
outsl
mov
arpl
add
sbb
mov
xchg
pop
mov
or
fsts
outsb
push
fidivrl
es
dec
pop
jecxz
mov
or
cmpsb
ret
cmp
dec
cli
lds
aas
iret
cmp
je
jns
hlt
test
adc
mov
push
sbb
mov
pusha
push
dec
pop
jno
lret
outsb
pop
aas
int3
mov
adc
lahf
jg
scas
lock
sub
or
iret
inc
push
push
push
dec
dec
jl
and
adcl
out
pop
push
adcl
jno
inc
jmp
inc
xor
test
jne
push
inc
adc
sbb
call
adc
jne
sbb
adc
shlb
ffree
mov
stos
dec
jmp
and
inc
lcall
adc
repz
cmp
sbb
xor
nop
and
pusha
movsb
lods
sub
push
cli
or
jmp
push
les
jno
test
xor
shlb
fs
xor
shlb
test
jg
add
xor
sbb
or
ret
mov
daa
xor
xor
addb
or
and
mov
push
inc
loop
fs
insb
xchg
iret
jl
sbb
pushf
add
xor
ss
jnp
rclb
les
or
js
fadds
pop
and
nop
fst
rclb
add
popaw
and
mov
ja
push
clc
push
add
push
movb
and
jae
pop
xchg
and
jae
hlt
mov
loopne
in
add
imul
mov
nop
daa
orl
addr16
test
js
push
cmp
push
push
loopne
dec
xor
je
daa
push
xor
jae
in
cmc
lods
imul
push
mov
push
add
mov
push
and
aaa
popa
sbb
jne
and
in
outsl
push
pop
das
es
cs
push
inc
loopne
jg
iret
adc
inc
push
dec
xchg
js
push
push
mov
outsl
sbb
pop
inc
xor
inc
insl
mov
rclb
or
iret
leave
inc
sbb
sub
loopne
dec
push
cmpl
decb
adc
and
and
clc
sbb
clc
push
pop
xchg
pop
loopne
add
dec
cmp
mov
roll
addb
lock
cmp
sbb
jl
aas
pusha
es
fcoml
imul
add
sub
or
dec
inc
mov
rorb
xchg
test
test
xchg
pusha
push
fimull
push
and
ss
hlt
pop
ja
mov
sbb
je
loopne
mov
push
xchg
out
bound
and
test
test
scas
cmp
dec
leave
and
lret
inc
or
outsb
nop
rclb
movb
inc
clc
jp
shl
fs
dec
mov
add
add
adc
test
xor
loopnew
and
pop
in
adc
imul
scas
and
movsb
bound
inc
or
mov
fwait
pop
rorb
adc
xchg
in
in
jo
adc
jns
adc
pop
gs
jbe
sbb
mov
jno
call
xor
sbb
add
xchg
pushf
add
mov
stc
add
in
test
divl
dec
inc
sub
sub
and
sub
push
pop
xchg
out
sti
sbb
cmp
sub
sub
and
xor
das
sub
ffreep
frstor
mov
incb
sbb
rcr
push
adc
andl
or
or
scas
mov
movsb
jecxz
pushf
sbb
test
test
stc
popa
mov
add
sti
jns
mov
lock
cli
jp
mov
sub
movsb
add
and
mov
fs
add
push
push
add
sbb
insb
mov
pop
fisttpll
mov
cmp
lock
dec
jne
jo
adc
jmp
xchg
scas
sbb
pop
mov
push
mov
inc
push
in
or
adc
pop
add
out
cmp
jl
ret
les
or
daa
add
sbb
sbb
cmp
jl
imul
sbb
add
pop
jge
inc
adc
and
das
movsl
or
sbb
and
add
adc
js
addb
pusha
inc
mov
sbb
movsl
dec
cmp
push
jp
dec
cmpb
pushf
mov
sbb
inc
lock
xchg
shlb
sbb
in
inc
popa
or
xchg
jbe
cli
sbb
or
jb
xchg
and
dec
mov
imul
lods
inc
xlat
adc
mov
inc
and
test
test
add
mov
xor
mov
add
pushl
dec
inc
dec
push
add
adc
cli
and
or
aaa
inc
push
fcmovnbe
inc
decl
or
pusha
dec
inc
sbb
push
adcb
mov
aam
aad
jle
rorl
aaa
mov
or
test
icebp
das
sub
cmp
jne
sub
adc
mov
push
adc
xchg
ds
or
sti
jmp
int3
aam
mov
inc
sbb
mov
stos
mov
dec
or
es
add
inc
insl
adc
xor
cmpsb
mov
cmpb
lods
les
daa
popa
lods
adc
insb
pop
js
aam
mov
xlat
jne
sbb
loop
adcb
adc
push
lock
mov
insl
jg
inc
pop
cmpsl
aaa
mov
xchg
in
push
lock
js
sub
cmp
lcall
fwait
inc
scas
roll
adc
add
jmp
mov
pushf
sub
dec
loopne
or
add
mov
push
shlb
and
cmp
mov
adc
clc
sbb
and
daa
fidivrl
or
ret
push
repnz
shlb
sub
loope
add
lret
fisubrs
jns
rcr
and
aaa
filds
adc
mov
enter
mov
pop
mov
jl
inc
lret
nop
in
pop
push
push
adc
fdivrp
sub
sub
push
lahf
dec
insl
inc
or
popa
sub
popa
dec
popa
testb
pop
cmp
xor
pusha
insl
push
push
shrb
inc
insb
lcall
or
mov
adc
ds
aam
or
daa
insl
lods
jns
or
aaa
push
dec
push
push
push
mov
les
push
or
adc
jp
aam
pop
adc
pop
and
loope
incb
scas
xorb
jge
and
or
xor
in
push
test
or
int3
gs
or
fiadds
cmp
cmpsl
test
sbbl
inc
xchg
xchg
stos
lods
dec
sahf
mov
fsubrs
adc
pop
rolb
clc
stos
and
jbe
insb
js
js
and
pusha
cmpsl
js
xchg
pusha
stos
add
in
nop
stos
in
dec
cld
andb
in
aas
jbe
nop
inc
mov
je
shr
pusha
mov
sub
and
inc
add
test
sub
shll
inc
adc
aaa
lret
in
test
les
sub
add
cs
push
sbb
ficompl
mov
imul
push
mov
sub
xlat
sub
add
rcrl
add
push
xlat
push
cmpsl
popa
add
push
xlat
test
sbb
cwtl
dec
adc
push
mov
mov
push
fimull
mov
in
cmp
bound
and
xchg
add
push
mov
clc
jle
test
jmp
sbb
gs
outsb
jne
adc
mov
jae
movsb
mov
jbe
sahf
dec
pop
mov
repz
addr16
popa
pop
call
rcr
mov
push
fcoms
jo
xchg
les
cs
imul
popf
out
imul
out
xor
addr16
or
push
ljmp
or
pop
add
imul
jo
inc
add
inc
nop
or
test
fbld
and
pop
or
cmp
add
dec
xchg
mov
jns
or
push
mull
pop
mov
in
push
sub
inc
rolb
outsb
jmp
sbb
or
adc
xor
movb
adc
mov
xor
adc
dec
push
nop
mov
sub
jnp
inc
pop
inc
or
push
or
mov
adc
enter
lea
adc
or
cmp
nop
lea
mov
xor
mov
and
jmp
and
inc
rolb
pop
and
pop
xchg
mov
into
or
mov
xor
inc
and
mov
movups
leave
insl
testl
pop
inc
jb
inc
jge
add
pusha
dec
or
or
push
jnp
out
push
pop
mov
add
gs
mov
lret
push
inc
mov
push
mov
add
pop
popf
rcll
mov
jo
mov
fsubrl
cmp
in
mov
xchg
movsb
call
movsb
adc
inc
sbb
pop
jo
sbb
in
test
dec
dec
push
rol
push
int
je
add
cmp
js
pop
mov
inc
add
pop
pop
or
dec
mov
jo
pop
add
or
mov
sub
sbb
divl
sbbl
xchg
push
outsb
and
mov
jns
gs
int3
add
sub
jno
pusha
cmp
enter
xchg
or
fmull
add
sti
or
sub
loop
dec
cmpsb
xchg
loopne
adc
dec
or
jp
js
mov
insb
jne
arpl
push
lret
rcrl
ljmp
mov
pop
das
pusha
adc
add
xchg
adc
mov
xchg
or
lea
or
sbb
add
in
aas
outsb
inc
dec
add
sbbl
add
scas
out
and
pop
push
and
sbb
jle
cmp
gs
imul
popa
inc
add
sub
jns
fs
push
test
test
dec
pop
movsb
push
push
push
jo
add
add
out
inc
push
pop
pop
test
mov
stos
xchg
shl
push
int3
xchg
pop
push
push
ss
mov
pop
lds
jg
lds
mov
out
adc
test
ret
ja
pmuludq
test
iret
ret
add
add
add
add
or
mov
pop
add
or
or
and
xor
cmp
inc
mov
jmp
in
in
jmp
ljmp
jmp
jmp
jmp
jmp
pop
sar
jmp
jmp
jmp
fdivrp
fdivr
fdivr
mov
call
call
call
call
call
call
cld
pop
pop
ret
ror
dec
dec
dec
dec
push
jp
mov
pusha
ljmp
mov
enter
fstps
in
in
or
sub
shll
les
movsb
rcrl
fdivl
outsl
sub
pop
add
or
cmp
repnz
fs
push
mov
lret
in
es
testb
jmp
insl
xor
cwtl
fisubs
lock
imul
fnstsw
ss
push
dec
fistl
loopne
repz
rep
shl
ja
cmc
data16
movsb
mov
or
xchg
xchg
mov
hlt
push
enter
out
mov
mov
in
lret
xchg
cwtl
mov
outsl
sbb
das
mov
cmp
cmp
leave
nop
pop
pop
sbb
lcall
cmp
add
pop
mov
fwait
sbb
jl
int
jecxz
dec
cmp
out
movsb
xor
push
rcrl
xchg
enter
fs
xchg
inc
hlt
aad
push
push
cmp
push
mov
sbb
push
push
pop
cwtl
imull
inc
or
or
and
xor
mov
loope
fs
orl
cltd
adc
sarl
dec
pop
dec
sbb
adc
and
loopne
repnz
push
and
fadds
mov
adc
push
jg
cs
push
adc
movsl
pop
cld
jle
insb
mov
or
lea
imul
pop
adc
push
rsqrtps
xor
sysexit
or
stc
mov
inc
dec
jb
push
dec
popa
je
popf
mov
or
inc
push
test
loope
mov
jne
sub
push
and
jle
add
push
mov
jecxz
mov
cmp
nop
mov
pop
cs
shlb
xchg
bound
jp
xlat
or
jnp
adc
popf
adc
je
je
out
add
xchg
pop
xchg
cld
fisttpll
gs
or
je
inc
cmovne
mov
push
or
js
adc
orl
dec
imul
insb
inc
cwtl
sbb
rorb
xor
clc
daa
mov
outsl
inc
sub
jns
sbb
popa
fcmove
pusha
mov
cmp
cwtl
imul
jbe
enter
daa
or
lock
push
dec
xadd
push
or
xor
pop
pushf
mov
push
roll
ljmp
add
add
adc
adc
add
rclb
sub
sub
incl
loope
pop
dec
pop
dec
add
add
add
es
idiv
add
mov
add
sbb
dec
rolb
inc
fwait
or
dec
jmp
add
aaa
mov
mov
decl
orb
adc
and
loope
dec
negl
andl
mov
or
pushl
add
add
push
mov
xor
cmp
lock
mov
add
inc
inc
inc
inc
inc
inc
adc
xchg
std
mov
loope
call
mov
pushl
xor
xor
pushl
pop
aam
imul
pop
ss
cmpsb
hlt
sbb
mov
imul
dec
sub
xor
sub
cld
movsb
sub
in
push
sbb
sub
push
mov
mov
sub
cmp
and
cmpsb
pop
cs
and
dec
jbe
dec
shll
push
pop
mov
fnstenvs
and
pushf
pop
fsubl
xor
mov
mov
push
in
imul
insb
je
xchg
lret
cmpsb
jl
xor
jl
negl
adc
or
sub
sub
repnz
int
inc
mov
dec
pop
push
inc
movsb
cmp
mov
int
ss
pop
xor
and
and
fwait
loopne
add
jl
nop
data16
xchg
cwtl
lock
inc
test
pop
repz
inc
cmp
cmp
mov
pusha
add
in
push
sub
add
mov
mov
or
push
pop
clc
xchg
add
pop
mov
nop
push
shlb
cmpsl
sbb
inc
cmp
mov
dec
add
xchg
xchg
ficoml
inc
push
pop
and
add
icebp
movb
xchg
push
loopne
ret
addr16
pop
daa
and
inc
pop
and
addb
push
add
inc
push
adc
pop
enter
cmp
mov
pop
insl
mov
cs
jne
jne
in
and
pop
sub
lahf
je
jns,pn
mov
lahf
push
push
outsb
push
inc
push
leave
xchg
mov
pushf
in
and
lock
pop
dec
pop
jnp
mov
push
push
ss
lfs
pop
rclb
es
rcr
sti
adc
enter
mov
sbb
pop
inc
pop
push
jnp
pop
and
mov
cmp
add
ret
push
pop
jno
jp
push
sbb
mov
out
mov
sbb
test
insb
lret
cmp
xchg
mov
sub
sbbl
jecxz
sbb
les
daa
xchg
sbb
mov
mov
push
std
lahf
add
imul
dec
xchg
sbb
mov
sbb
je,pn
ret
test
lahf
mov
js,pt
inc
popa
bound
or
sbb
push
xor
repz
jb
aaa
shlb
push
out
push
xchg
mov
shlb
lahf
hlt
subl
add
add
add
push
jmp
movb
mov
daa
lea
mov
push
dec
adc
andb
insb
adc
push
add
push
adc
or
push
push
and
push
adcb
enter
testl
mov
add
shll
nop
adc
xchg
adc
loopne
rcll
sbb
inc
push
mov
pop
jne
sarl
mov
popa
arpl
sbb
add
fs
fcoms
jne
xor
pop
insb
add
xchg
dec
cmp
lock
loopne
adc
hlt
mov
das
or
add
pop
daa
sbb
push
sbb
and
sbb
push
or
dec
imul
inc
and
daa
add
sbb
ret
pop
sarb
mov
mov
add
jo
or
xchg
pop
mov
xchg
daa
push
and
bound
adc
push
inc
pop
lock
push
inc
daa
push
jo
daa
lock
jb
dec
fildl
popa
out
and
push
or
dec
outsl
dec
xchg
daa
and
push
jo
imul
mov
btc
push
movb
andb
stos
jb
das
add
pusha
sub
mov
adc
add
call
outsl
and
mov
or
aas
adc
dec
movsl
sti
rcrl
mov
jmp
test
clc
inc
lret
dec
popf
pop
sub
fs
jl
mov
js
lea
push
inc
sub
xchg
hlt
inc
jle
cmpl
xchg
add
inc
mov
or
clc
xor
sub
out
sub
sbb
pusha
arpl
mov
push
or
dec
cmpsb
sets
inc
pop
aas
lahf
inc
add
add
pusha
xor
cmpsl
add
push
inc
dec
add
jg
and
or
xor
adc
adcb
push
or
add
sub
push
or
rcrb
pop
rcr
xchg
cltd
add
fcomps
push
rcrl
insl
mov
rcrl
inc
xor
pop
lret
aaa
test
dec
das
and
dec
sub
frstor
dec
fs
mov
mov
lahf
jno
jb
add
sbb
mov
aad
adc
cs
test
ljmp
mov
jne
ds
cmp
cmp
xlat
clc
push
aam
adc
inc
dec
xor
cmpsb
cs
sbb
push
or
push
dec
js
test
gs
pop
daa
pop
xchg
pop
mov
or
adc
xchg
adc
sbb
xchg
gs
xchg
and
and
sub
and
scas
adc
add
lret
push
jg
dec
pop
sbb
or
jbe
addb
and
pop
push
sbb
mov
aam
cmp
lods
jg
je
sub
ffreep
scas
inc
or
je
fistps
dec
sbb
push
dec
je
ja
shlb
fwait
xchg
insb
add
int3
cmpsb
dec
sbb
mov
stc
dec
push
jmp
mov
inc
pop
les
sbb
orb
sbb
sub
adc
sbbb
inc
ljmp
xor
xor
iret
push
pusha
pop
cmp
scas
mov
nop
mov
push
pop
test
dec
hlt
jmp
or
incl
add
popa
ss
test
pop
stos
inc
enter
jae
bound
push
in
sub
loope
push
nop
adc
dec
push
xchg
mov
push
add
sbb
movb
push
sbb
pop
xchg
cmc
sbb
mov
inc
mov
andb
pop
out
and
jmp
and
repnz
fucomip
xor
dec
test
inc
dec
out
add
inc
es
or
lea
bound
push
xlat
cwtl
adc
pop
pop
ja
fisubrl
orb
push
or
sbb
pop
mov
test
add
xor
loope
mov
sbb
inc
mov
adc
stc
fadds
std
xor
pop
mov
pop
insb
adc
pop
movsb
insb
xlat
inc
lea
jmp
dec
jnp
push
pop
pop
inc
sbb
icebp
add
mov
mov
movsl
push
or
mov
movsb
sar
cmp
daa
test
push
jns
add
sbb
dec
inc
das
inc
mov
mov
or
mov
movsb
mov
xchg
lock
xchg
jle
out
xchg
or
rorb
push
out
cmpsl
inc
push
jmp
neg
xchg
inc
inc
xor
adc
push
xor
push
mov
push
test
dec
and
cmpsl
lea
and
arpl
cmp
or
jo
pusha
and
cmp
ja
add
addl
ja
sarl
jb
dec
clc
pop
dec
adc
inc
adc
jmp
cmp
jne
and
insl
dec
outsl
jno
mov
xorb
cmp
pop
jmp
mov
and
push
rcr
add
mov
sub
cmp
sub
dec
ljmp
insl
std
cmp
pushf
ja
popa
fnstsw
cmp
pop
and
xor
pop
movsl
loopne
testb
jmp
push
mov
test
sub
xor
outsl
or
sbb
hlt
xchg
lret
lcall
pop
fwait
jl
mov
xorl
xor
and
adc
dec
jno
pusha
jb
enter
mov
inc
in
sub
add
cmpl
loopne
mov
sbb
dec
inc
add
push
movsb
les
andl
adc
and
add
sub
inc
cmp
sbb
ret
jo
lock
or
and
cs
adc
and
add
aaa
iret
xor
push
or
mov
xchg
jno
adc
and
mov
inc
sub
push
cltd
jp
and
lock
ss
push
cmpb
roll
sub
push
or
lock
cmp
lock
xor
lock
jle
sub
jno
incl
mov
daa
mov
push
sti
add
cmp
fmuls
pop
cld
inc
mov
dec
and
fdivs
xchg
dec
and
int
loope
loopne
es
pusha
jmp
mov
test
push
psrlq
pop
ret
or
mov
lds
jne
and
mov
mov
call
push
subl
add
sbb
adc
imul
decb
shlb
aas
push
pop
mov
imul
test
aad
enter
sahf
xor
mov
push
push
pop
inc
imul
jne
sarl
dec
dec
jmp
mov
push
mov
aam
add
mov
mov
xchg
iret
or
inc
movsl
test
sub
test
push
mov
ja
fadds
mov
mov
xchg
sbb
adc
fstpl
fidivl
mov
das
fdivs
test
jb
les
pop
xchg
and
sbb
mov
lea
fsubs
xchg
std
mov
mov
cmpb
js
rolb
adc
push
mov
pop
adc
xchg
outsb
shlb
je
out
cmp
mov
aas
test
mov
js,pn
add
pop
xor
mov
repz
xchg
aas
push
inc
sbb
mov
jo
sub
fsubrl
jl
sbb
push
pusha
fbld
sub
mov
data16
mov
mov
or
mov
mov
dec
or
or
adc
or
inc
cmp
mov
lea
js
pop
adc
add
adc
add
cmp
je
cmpsl
jmp
xor
mov
out
rorb
pop
jns
mov
sub
test
or
adc
sub
fildll
mov
into
mov
call
pop
and
cmp
sbb
das
push
adc
aam
fs
or
mov
mov
setl
inc
and
adc
inc
pop
adc
rcl
std
jge
xor
jne
jmp
dec
cmovno
xor
jle
and
and
jmp
pop
cwtl
stos
shrl
pop
fwait
push
insb
mov
cltd
test
xchg
push
mov
xadd
push
cmp
push
setns
push
mov
pop
pop
and
fists
lock
dec
ficomps
xor
add
jo
push
jl
adc
ret
dec
out
cmpsb
xchg
sti
xor
lret
xchg
inc
call
adc
inc
or
sub
cltd
idivb
xor
xor
js
mov
mov
fcmove
cmp
mov
push
daa
mov
loopne
aam
xorl
and
call
insb
ss
sbb
repz
lea
js
pop
mov
lds
sub
sub
mov
adc
test
dec
daa
xor
das
adc
pop
and
sarl
add
lret
imul
cli
dec
adc
ret
imul
add
insl
pop
sub
xor
rcll
sbb
mov
sbb
ret
aam
or
pop
sub
mov
push
adc
lret
cld
je
push
dec
cmp
xor
fs
and
sub
enter
push
xor
mov
mov
cs
aad
mov
push
dec
ds
mov
dec
out
push
out
or
daa
cs
mov
mulb
popf
inc
leave
mov
add
jecxz
push
lea
pop
inc
mov
aam
add
sbb
inc
push
jmp
clc
loop
pop
cmpl
jbe
adc
imul
lret
dec
jecxz
nop
inc
dec
jmp
cmpb
dec
jecxz
jmp
daa
xchg
mov
fildl
data16
mov
sub
cmp
push
dec
mov
add
pop
jno
dec
inc
lods
leave
inc
push
sbb
and
test
into
push
adc
movsl
add
push
fstl
ror
jmp
push
adc
movl
mov
cltd
sbb
sbb
cmp
add
sub
sahf
mov
aas
push
or
pop
pop
or
mov
inc
outsl
or
cmpsb
fcmovnb
inc
incb
or
cmp
xor
nop
pop
lcall
fbld
inc
xor
adc
adc
and
jecxz
push
push
cltd
cwtl
cmp
xor
lock
sub
adc
xlat
cmp
shlb
sub
cwtl
xchg
popa
das
cli
jmp
and
jecxz
loop
clc
pop
je
push
adc
insl
adc
adc
pushf
jo
mov
popf
add
arpl
lods
hlt
sbb
push
test
and
adc
push
cmp
xchg
pusha
xor
sub
add
les
sub
cmp
lcall
add
loopew
sub
ds
sbb
pop
mov
add
rcrb
sub
dec
mov
sub
arpl
ret
daa
xchg
movsl
xor
orl
or
mov
cli
mov
or
notb
sbb
or
mov
inc
jb
fldl
movsb
mov
mov
insl
sub
movsb
xor
adc
adc
or
xor
add
dec
ret
jecxz
xchg
sub
push
repz
mov
jp
or
lds
out
add
add
dec
mov
lods
test
cmc
push
pusha
mov
repnz
add
sbb
xor
lods
xor
add
cmp
mov
and
lcall
xor
lahf
add
or
and
sbb
push
add
fsts
jg
mov
mov
in
adc
push
or
icebp
jp
xor
mov
test
out
mov
sbb
and
cmc
sbb
imul
hlt
aas
jp
mov
sub
mov
sbb
or
dec
jne
fstpt
lahf
sbbl
cmpsb
dec
or
cmp
mov
hlt
add
sub
mov
insl
hlt
imul
lea
cwtl
or
rorb
mov
dec
daa
pop
pop
loope
adc
jmp
gs
inc
push
dec
mov
out
xchg
sbb
jnp
add
lods
lods
lea
xchg
test
add
mov
ss
jge
mov
jb
pop
imul
push
outsb
push
pop
fadds
sbb
scas
aas
pop
testb
roll
push
dec
js
pusha
sarl
cmp
cmp
dec
data16
mov
outsl
sbb
popa
add
sub
fwait
pusha
in
orl
jle
andl
mov
movsb
mov
inc
pop
pushf
push
mov
and
mov
lret
repnz
or
or
fwait
insl
cmp
sbbl
xorb
xchg
mov
ljmp
dec
out
pop
enter
jmp
cmp
je
mov
test
jbe
pop
adc
ja
sbb
cmp
push
jl
sahf
xchg
or
adc
je
repnz
dec
jmp
sarl
jns
pop
pop
je
cmp
or
cmpsb
xor
sbb
add
adcb
push
arpl
in
adc
mov
stc
rolb
push
dec
jbe
mov
fs
jge
inc
clc
cmpb
mov
arpl
dec
and
xchg
pop
sbb
ljmp
inc
mov
add
das
inc
in
mov
jae
inc
sbb
jo
aaa
sbb
int
and
lods
in
sti
int3
add
pop
pop
and
pop
in
test
sub
lds
in
or
push
lods
sub
add
jmp
adcb
or
lcall
roll
loop
rorb
push
addr16
push
pushf
ficoms
jl
sbbb
nop
out
outsl
xchg
sbb
adc
pop
loopw
cmp
sub
js
mov
jbe
cmp
add
inc
mov
pop
pop
add
and
js
xor
inc
add
outsl
mov
pop
or
fstpl
fs
push
lods
mov
jp
mov
rolb
jg
push
movb
sbb
shll
pop
xchg
adc
inc
arpl
sbb
gs
cvtdq2ps
fdiv
or
xor
pop
je
inc
mov
cmp
cmp
mov
dec
popa
stos
scas
cmp
push
xor
xchg
rolb
xchg
xchg
push
pop
aas
dec
addr16
mov
movsl
ds
mov
stos
add
add
pop
cmp
je
das
adc
leave
mov
stc
lds
jae
mov
fs
inc
mov
ficoml
pop
pusha
je
add
jns
sbb
push
jecxz
inc
jo
sarl
add
pop
pop
pop
cmp
imul
pop
add
jp
jmp
sub
aas
push
mov
stos
popa
and
lret
or
sbb
ja
jo
mov
mov
sbbb
push
aas
cmp
js
rcr
ret
pop
movsb
nop
test
sbbb
scas
popf
lea
sub
inc
fiadds
je
or
in
push
sub
mov
and
sub
add
pop
ret
push
sbb
adc
and
cmp
push
xchg
push
xchg
and
push
add
or
mov
and
add
insl
xlat
movb
adc
lock
movsb
into
arpl
mov
mov
pop
enter
or
rol
dec
test
xor
popa
aaa
push
cmpsb
lds
cmp
mov
jo
ss
iret
aas
fcmovb
leave
adc
fdivrs
add
popa
push
and
mov
xchg
xchg
adc
andl
push
jmp
orl
test
fnop
cmpl
push
cmp
mov
and
mov
or
fildl
ret
and
push
imul
push
or
inc
pop
andl
push
inc
sti
ds
pop
testb
shl
cmp
repz
sbb
adc
sbbl
clc
or
dec
dec
push
mov
int
xlat
testl
jl
sbb
arpl
push
call
or
pop
or
xchg
and
and
sub
cmpsl
add
sub
cmp
jne
push
sbb
pushf
jmp
cmp
clc
jne
sub
scas
xchg
and
or
mov
test
sub
nop
jo
ret
xor
or
cld
or
xlat
push
je
ret
mov
push
out
dec
sub
imul
inc
dec
pop
out
ret
ljmp
cs
adcb
stos
xchg
add
mov
jne
and
or
pop
dec
push
inc
adc
xor
or
push
rolb
stc
loope
adc
js
cs
inc
ja
jnp
jne
ds
adc
jne
invd
in
xchg
movsb
rorl
push
push
push
dec
mov
jns
inc
inc
mov
inc
iret
or
and
fdivrs
inc
add
add
dec
lea
dec
push
les
dec
cmpb
mov
testb
testl
adc
xchg
addl
and
xchg
mov
mov
das
rcrb
adc
or
sub
or
dec
mov
mov
inc
adc
inc
adc
imul
cli
fmulp
pop
and
pop
xchg
jle
test
int
mov
pop
add
push
mov
pop
fistpl
or
sbb
inc
dec
das
and
mov
push
dec
xor
push
popa
adc
rolb
mov
dec
roll
insl
bound
inc
inc
lret
inc
dec
fcmovu
pop
je
dec
dec
push
xchg
dec
mov
xchg
push
inc
or
adc
rclb
setae
cld
inc
shr
gs
pop
sub
fstl
sbb
mov
cmp
test
cli
dec
push
mov
dec
out
adc
mov
in
mov
in
cmp
cli
clc
dec
and
mov
push
bound
xchg
lds
nop
mov
out
gs
pop
push
cmp
mov
push
out
repnz
push
lods
mov
mov
mov
imul
push
or
dec
adc
xchg
imul
jo
inc
mull
roll
dec
addb
cmp
pusha
xor
out
call
lret
or
outsl
dec
add
notb
outsb
adc
dec
dec
mov
bound
inc
sub
loopne
stos
dec
ljmp
adc
out
es
xchg
pop
mov
call
cmp
sbb
mov
notl
and
xchg
or
xor
add
call
mov
ret
xchg
sbbb
adc
ja
pop
xlat
hlt
hlt
andb
pop
lret
nop
mov
ds
icebp
add
leave
fcompl
js
test
outsb
sbb
hlt
push
or
add
or
xor
addb
push
hlt
push
jo
outsl
repnz
mov
push
xchg
xchg
adc
dec
dec
insl
mov
inc
add
nop
inc
xchg
sub
les
inc
mov
andb
fsubl
xchg
cmp
add
jne
pop
adc
mov
nop
mov
aaa
mov
jecxz
lds
mov
pop
and
mov
popa
sbb
nop
repnz
enter
pusha
and
or
push
or
mov
lock
cmp
xcrypt-ofb
cmpsl
imul
sahf
jle
push
mov
inc
push
bound
push
mov
pop
mov
or
rorb
inc
xor
inc
into
jbe
cwtl
ret
sbb
repnz
pop
add
pop
xor
sbb
push
sbb
dec
xchg
sahf
or
add
and
ret
sub
cmp
in
or
jnp
andb
dec
adc
adc
rcrb
mov
or
cld
test
jnp
add
push
or
lea
or
loop
pop
push
mov
sbbb
push
cmpb
push
dec
inc
aad
roll
into
dec
sub
push
nop
mov
ljmp
jg
adc
je
pusha
and
dec
or
rcr
imul
jp
cmp
ret
testb
je
sub
addb
inc
pop
adc
pop
aas
ja
cwtl
test
pushf
addr16
or
stos
inc
in
sbb
ljmp
xchg
push
jmp
add
pop
add
add
jne
or
andl
push
add
jnp
inc
cmp
sbb
mov
fimuls
jl
cmp
mov
clc
cmp
out
test
pop
lea
clc
cmp
je
pushf
int
dec
jl
les
xor
mov
les
sti
vunpckhps
adc
in
dec
into
es
pop
push
add
or
cmp
sarb
in
mov
cmp
add
dec
daa
mov
fmull
or
adc
outsb
add
aaa
push
mov
mov
push
xor
mov
cmp
dec
or
insb
pop
mov
loopne
and
insl
aam
mov
aad
mov
push
lret
jg
sbb
pop
aam
cld
std
and
je
mov
movb
ja
out
dec
andb
sbb
sbb
loop
cmp
adc
mov
push
xchg
cs
push
add
lock
jmp
sbb
mov
out
pop
ja
xor
das
pop
je
mov
clc
pop
loope
pop
adc
aad
mul
dec
es
or
nop
cltd
sbb
mov
pop
xchg
fldcw
add
inc
push
rol
sub
fwait
out
loopne
fs
cmp
mov
or
jnp
pop
adc
push
cmp
pop
pop
pop
sub
xchg
or
pusha
js
out
xchg
cmp
data16
ret
inc
es
pmaxsw
xchg
mov
xchg
push
dec
add
or
xor
mov
adc
cmp
cmp
out
sub
aaa
in
push
sub
addr16
insb
adc
loop
sbbb
cmp
xor
mov
jno
cmp
adc
mov
aaa
push
and
mov
cli
shrl
ja
mov
leave
je
int
sub
mov
push
push
shlb
adc
adc
pop
adc
inc
test
xchg
xlat
cmovs
les
das
mov
pop
lods
pop
and
dec
jl
dec
mov
xchg
push
es
dec
dec
fsubrl
insl
pusha
daa
mov
push
cmp
cmpl
sbb
fstpt
dec
push
scas
dec
and
inc
push
inc
push
mov
cmp
fsubl
dec
out
pop
pop
mov
nop
inc
or
mov
xchg
rcrb
jne
mov
inc
loop
jmp
out
andl
push
add
popa
add
xor
push
add
or
fcmovnbe
adc
cld
add
pop
aas
sbb
jne
mov
std
inc
loop
dec
movsl
mov
outsb
or
push
push
and
clc
das
bound
je
jo
ds
inc
cmp
jmp
sar
add
inc
pop
mov
jmp
mov
call
xor
dec
cmpsl
push
or
inc
out
pop
inc
inc
sub
jne
sbb
fbld
dec
add
pop
cmpsb
adc
push
scas
xorb
add
xchg
dec
mov
fcos
cmp
add
push
popa
outsb
mov
push
push
pop
cwtl
aad
or
ds
mov
mov
pop
push
cmpsb
dec
adc
dec
flds
nop
pusha
jae
xor
psubsw
push
dec
ds
xchg
sbb
in
das
add
mov
jnp
pop
xor
flds
jnp
and
mov
cmp
les
push
mov
mov
sbb
shlb
fistl
or
pushl
add
arpl
sti
testb
cmp
jmp
mov
xor
push
xchg
call
add
test
mov
loopne
push
jp
cmpb
xor
xor
cmpsl
xchg
cmp
icebp
sahf
addr16
rol
add
pop
aad
jg
dec
adc
dec
or
ss
cmpsl
fdiv
lock
mov
mov
or
inc
mov
call
or
inc
mov
adc
adc
jbe
and
sbb
sbb
xchg
pop
mov
or
inc
mov
cmpb
int3
xor
mov
sbb
mov
or
inc
or
mov
and
sub
lea
fnsave
lcall
jmp
mov
add
mov
daa
int3
mov
pop
mov
sub
pop
inc
ljmp
adc
fnstsw
inc
mov
push
insb
push
mov
sar
add
stos
mov
shlb
mov
or
and
bnd
add
add
push
addr16
inc
add
adc
in
or
mov
data16
sbb
negb
jns
xor
shlb
cmpb
stos
adc
pushf
shlb
sbb
sub
mov
test
icebp
cld
neg
pop
push
dec
not
sub
and
mov
adc
loopne
scas
xor
mov
js
xchg
mov
int
push
fcomip
hlt
add
pop
dec
and
daa
xor
jmp
nop
push
dec
push
push
or
dec
and
push
sarl
inc
push
pushf
xor
jge
test
push
xchg
dec
add
jb
dec
add
loopne
mov
or
cmp
push
neg
js
dec
pop
loope
jmp
sbb
int3
mov
inc
mov
fcomip
or
or
fildll
addb
adc
loope
pop
mov
hlt
sbb
cmp
push
into
insb
xchg
jno
dec
js
fsubrs
cmp
lea
push
aaa
call
inc
loopne
fidivrl
ss
or
inc
in
push
xor
orl
imul
sub
pop
adc
adc
leave
call
jmp
mov
iret
adc
in
outsl
or
add
mov
pop
adc
ljmp
dec
jo
jns
cld
aas
loopne
inc
jne
mov
sub
jb
je
mov
ror
pop
add
ret
adc
adc
push
mov
sti
lods
or
inc
adc
fimuls
push
inc
orl
sbb
or
nop
or
in
pusha
xor
push
cmpsl
int3
pop
add
jp
inc
test
test
mov
xlat
nop
shlb
lea
shll
push
adc
in
add
scas
idivl
in
outsl
inc
icebp
insl
call
loopne
ds
movsb
push
sbb
push
adc
dec
fistpll
popa
fcomi
mov
push
pop
xchg
xchg
mov
jne
stos
in
inc
mov
mov
sbb
xor
inc
call
movb
adc
adc
dec
popa
inc
cli
or
adc
adc
dec
cmpsl
loop
mov
lret
jno
add
mov
enter
xchg
js
in
inc
lret
or
adc
nop
add
pop
adc
js
push
cmp
push
push
jg
ja
and
adc
push
nop
xchg
mov
xor
mov
push
loopne
mov
push
xor
xor
pop
ds
and
push
or
adc
dec
xor
sub
push
gs
mov
pop
xor
xor
mov
and
sub
test
inc
punpckhbw
push
adc
adc
jl
popf
dec
sub
les
shll
sti
mov
add
fld1
lods
mov
into
adc
pop
in
movsb
movl
movsl
inc
or
cmpsl
adc
sbb
xchg
cmc
mov
sub
inc
imul
push
bound
int3
adc
jmp
pop
xlat
cltd
xor
and
sbb
push
aam
out
cmp
inc
adc
out
or
jb
daa
jle
int3
enter
add
sbb
loop
push
sub
inc
lock
or
inc
outsl
sub
or
cmp
bswap
repnz
add
add
sub
mov
aad
inc
nop
loope
jbe
insb
inc
rorb
sti
nop
mov
push
push
sub
sub
or
or
xchg
ret
push
fnstsw
add
mov
cmp
adc
or
mov
adc
sub
sahf
jbe
mov
add
pop
or
xchg
jbe
add
jmp
sub
push
add
fiaddl
sub
sub
mov
cmp
xchg
cmpsl
adc
xor
inc
mov
xchg
pusha
push
xchg
cmp
cmp
push
imul
scas
jae
mov
mov
add
pop
xchg
insl
negb
inc
jae
addr16
jmp
imul
pop
decl
inc
mov
push
xchg
hlt
mov
or
dec
pop
out
dec
or
add
cmp
es
push
inc
or
fiadds
push
andb
sbb
xchg
icebp
pop
faddl
icebp
xchg
jb
cmp
cmp
bound
addr16
mov
je
fstpt
pop
arpl
fidivrl
jb
loop
and
adc
daa
push
dec
pop
lahf
insl
iret
sub
roll
aad
add
jge
jmp
je
add
out
pop
jmp
ret
rcl
js
sub
dec
pop
inc
jg
xchg
es
in
sub
push
dec
push
add
add
mov
jmp
xchg
stos
insb
adc
sbb
cmp
jne
or
cs
fidivrs
xchg
into
sub
fs
sbb
aaa
add
jp
cmpsl
and
cmp
push
popa
pop
movsb
outsb
push
ror
test
addl
pop
je
test
addr16
mov
mov
and
xchg
add
xor
jle
dec
inc
das
aas
mov
lcall
sbb
sbb
xchg
and
push
mov
xchg
or
inc
or
adc
aas
iret
fmull
cmc
xor
xlat
pop
lock
xchg
pusha
add
nop
ja
orl
cmp
add
inc
pop
or
shrl
pusha
fsubp
add
mov
mov
int
mov
add
xchg
or
add
inc
add
push
lea
jmp
xorb
test
sub
adc
mov
or
and
xor
cmpsb
and
dec
loope
ret
adc
aaa
or
sbb
sbb
push
arpl
sub
add
xchg
sub
sub
enter
dec
jp
push
pushf
xchg
push
sbb
or
aam
rolb
mov
orl
cmpw
add
outsl
jg
adc
or
pop
loope
and
ret
xchg
rolb
ret
fsubs
hlt
and
aad
and
mov
imul
mov
test
js
push
mov
pop
ret
add
cs
sbb
or
out
adc
pop
ret
test
inc
sbb
push
adc
rorb
imul
jb
add
jmp
outsl
xor
xor
clc
and
jl
addr16
stos
pop
add
xchg
or
shll
call
es
das
cmp
das
dec
mov
pop
shr
test
or
pop
add
bound
mov
lcall
adc
mov
inc
sbb
roll
pop
movsl
shll
inc
addl
in
dec
or
inc
ss
sbb
add
shrl
stos
es
fiaddl
cmp
andb
xor
loope
xchg
in
mov
jnp
sub
mov
pop
cmpsb
or
ret
pop
aam
jge
rcrl
push
rcrb
dec
or
add
or
mov
pop
in
mov
and
sub
inc
add
adc
dec
sub
ficoms
mov
aam
jnp
xchg
orl
adc
lea
aad
stos
jmp
jo
es
fnstsw
pop
shlb
sub
and
in
inc
aas
add
xchg
jne
xchg
mov
add
xor
loopne
inc
mov
sbb
mov
add
jo
ss
and
inc
jecxz
prefetch
add
xchg
pop
daa
inc
sbbl
stos
pop
ret
clc
add
adc
insb
out
pop
and
jle
je
scas
les
push
dec
jge
or
adc
adc
jns
fmulp
jle
adc
or
popf
xchg
or
dec
lds
loop
scas
je
mov
arpl
dec
sbb
push
add
sbb
inc
sbb
push
imul
push
call
add
sub
pop
push
aad
add
je
pushf
push
push
inc
loop
dec
push
dec
leave
clc
fadds
inc
lcall
add
pop
insl
and
imul
lret
lds
pushf
inc
fdivs
fisubl
pusha
pusha
jne
and
outsb
clc
or
or
mov
ljmp
push
ljmp
dec
or
rcl
imul
movsb
push
and
mov
aad
sub
or
lahf
sbbl
jne
mov
add
lcall
add
insb
pop
out
pop
sbb
or
sbb
xlat
fwait
pop
push
in
pop
sbb
push
ret
mov
push
aaa
adc
push
push
movl
loopne
push
insb
ret
push
das
push
or
es
test
jne
pop
xor
add
pop
adc
cmp
dec
daa
andl
rorl
add
or
push
or
imul
loop
adc
sub
lret
add
sbbl
loopne
mov
loope
cld
scas
dec
and
sti
mov
sub
push
clc
push
xor
pop
add
jne
loope
ljmp
test
es
sub
clc
cwtl
jecxz
mov
dec
dec
imul
push
inc
add
clc
add
add
inc
push
pop
loop
sbb
dec
test
adc
add
xchg
jo
adc
rcrb
jmp
xor
pop
pop
sbb
sub
and
push
or
and
mov
je
xchg
lock
push
inc
fidivs
fcoml
mov
or
mov
sub
or
jnp
mov
push
ficomps
mov
adc
loopne
mov
mov
cmpb
or
dec
mov
mov
mov
pop
inc
and
fs
enter
and
mov
movsl
shlb
pop
sub
lret
ret
movaps
jmp
cmp
or
insb
fmull
xor
aas
xchg
xor
dec
inc
or
adc
cwtl
insb
sti
add
push
cltd
push
shlb
inc
dec
movsl
nop
lea
sbb
cmc
aaa
inc
fildl
sbb
adc
push
sub
xor
movsl
popf
sbb
mov
cli
push
pop
jecxz
adc
push
sbb
ljmp
mov
jae
xlat
es
mov
sbb
fldl
sub
sbb
out
mov
outsb
adc
test
xlat
les
enter
sbb
push
jo
js
add
pop
mov
enter
add
add
push
js
push
jns
mov
add
insl
cmp
movsb
imul
xor
or
or
in
pop
mov
cmc
pop
and
sub
nop
xor
xor
cmpsb
jns
sbb
and
xor
fwait
std
lea
adc
jae
in
sub
std
pop
add
dec
je
add
jmp
in
adc
push
aam
int
pop
pusha
cwtl
adc
pop
push
sbb
test
sbb
insb
test
xchg
sbbb
xor
cbtw
jmp
clc
push
jns
dec
fstl
sub
fcmovnb
add
sbb
loopne
std
loopne
data16
and
jmp
sbb
aaa
add
jecxz
lret
or
cwtl
mov
stos
inc
sub
xlat
jmp
sbb
fldt
xchg
shrb
adc
shlb
pop
aas
mov
sub
ret
or
dec
adc
sub
loop
js
mov
repz
call
or
inc
mov
mov
aaa
mov
jmp
ss
ret
xor
xchg
or
test
jne
inc
ret
stc
push
mov
dec
arpl
testl
jne
xor
sbb
pop
or
popa
pop
pop
rorl
out
pushf
mov
inc
sbb
and
mov
adc
mov
fs
imul
or
daa
cwtl
sub
enter
js
adc
xor
hlt
inc
mov
add
je
pop
mov
sarb
lea
xor
push
ss
insl
pop
xor
inc
mov
push
pop
mov
sbb
sbb
mov
push
push
subl
dec
add
xor
inc
int3
jo
pushf
movb
cli
mov
sarl
test
or
adc
orl
and
clc
shlb
sub
loopne
cmp
test
cmp
iret
jle
andl
arpl
lret
fs
ss
push
in
add
stc
jmp
pop
dec
add
add
jbe
std
dec
push
mov
adc
orl
lea
and
js
jmp
call
std
divb
or
lret
shlb
add
xor
lock
popa
fstpl
rorb
mov
adc
mov
jbe
cld
push
jne
shll
loop
adc
mov
adc
mov
daa
and
cmc
xchg
and
pushf
insl
cs
pop
cltd
repz
xor
sti
rcll
push
and
mov
int
pop
sub
dec
pop
mov
inc
aaa
nop
ljmp
pop
jge
enter
add
jge
shrl
push
rol
mov
sbb
inc
out
scas
sti
add
lods
stc
ljmp
xor
sbb
add
outsl
arpl
ljmp
adc
adc
fiaddl
add
mov
jecxz
or
pop
push
mov
dec
pop
ja
jmp
push
imul
cmpsb
imul
loopne
push
cmp
setg
jmp
fdivrp
icebp
inc
add
inc
add
cmp
setle
xchg
in
inc
es
dec
inc
cs
dec
adc
cld
mov
cld
adc
and
out
shlb
inc
and
stc
add
inc
inc
pop
mov
or
repnz
mov
cmp
jne
adc
ret
dec
in
adc
and
fcmovnb
and
dec
push
ret
ds
fs
push
dec
mov
adcb
jne
push
imulb
popa
add
inc
adc
xchg
nop
add
orb
in
daa
add
jmp
aaa
hlt
fimull
fsubr
xor
es
mov
sub
mov
sbbl
or
xchg
adc
iret
enter
aaa
cmp
in
lock
add
mov
fisubs
icebp
pushf
jmp
mov
and
inc
sub
and
pop
lcall
or
mov
stc
icebp
test
dec
mov
xor
dec
sub
aaa
jl
and
add
push
xchg
sub
fldt
inc
sbb
xchg
jne
add
popa
or
ja
xor
add
cmp
nop
hlt
lock
and
scas
lahf
shll
incb
jb
lcall
sarl
jnp
adc
jle
sub
lods
dec
sbb
sbb
jmp
xor
pop
fisubl
jmp
sbb
rcrl
stos
push
push
loope
test
sub
add
loope
mov
loope
cmovno
add
or
lods
stos
adc
cmpsb
pcmpgtb
movsl
das
xchg
add
xchg
in
push
inc
cli
add
not
xor
roll
mov
loope
push
ret
push
sub
jno
dec
push
or
cmp
in
inc
cmp
sbbl
cmpl
ret
push
pop
sbb
push
mov
and
adc
mov
push
sub
loop
fdivr
fistpl
cmp
jne
popf
cltd
or
sbb
ret
sub
xlat
xchg
mov
xchg
jno
add
mov
add
jg
push
mov
cmp
mov
or
xorb
dec
or
dec
push
cmp
sti
dec
or
add
bound
imul
and
inc
in
xor
and
sarl
iret
push
inc
clc
inc
insl
inc
cmp
pop
xor
inc
inc
push
hlt
idivl
mov
int
into
test
int3
mov
cmp
add
ret
xchg
xor
mov
sub
mov
pusha
cmp
test
or
data16
icebp
fstps
sbb
sub
cmp
jne
push
pop
mov
test
add
push
sub
lods
pop
stc
add
mov
sub
sbbb
adc
vaddsubpd
inc
mov
les
sub
push
sub
insb
pop
xchg
jne
adc
dec
sbb
add
cmp
jge
lock
pop
adc
add
in
inc
add
add
adc
notl
stos
pusha
pop
stos
mov
dec
xchg
cmpsb
or
iret
pop
cwtl
push
das
in
and
jbe
neg
dec
sbb
insl
fs
pusha
prefetcht0
roll
dec
add
lea
and
pop
add
test
push
pop
pusha
push
out
lods
mov
push
incw
rol
js
std
jne
xorl
add
mov
adcl
add
int3
les
pop
adc
test
mov
xchg
inc
adc
mov
dec
push
and
xor
lret
dec
sub
mov
shll
dec
mov
dec
inc
or
push
xor
add
mov
pop
gs
add
pusha
pop
cmpsb
int
inc
nop
sub
push
movsb
mov
mov
rcr
fs
sub
popf
adc
cs
dec
push
test
adc
dec
jmp
pop
dec
aad
rorb
jl
mov
rorl
loopne
call
pop
mov
fbstp
roll
xor
fstpt
test
out
fsubrp
inc
nop
adc
pop
xor
jne
xor
mov
into
jg
sub
or
jne
andps
or
sbb
pop
aas
add
out
in
cmp
les
push
inc
and
fcomps
xchg
jmp
sbb
hlt
mov
scas
adc
add
es
lcall
cmp
icebp
mov
mov
inc
rolb
imul
and
push
or
pop
jne
inc
adc
hlt
sbb
mov
inc
jmp
mov
dec
add
mov
dec
mov
aaa
sbb
mov
aas
jmp
or
xchg
mov
pop
add
inc
fists
pusha
xchg
cmp
sub
test
mov
and
ret
stos
fsubrs
pop
cmp
jle
imul
jmp
adc
and
mov
leave
je
add
sbb
mov
jo
push
adc
add
es
call
clc
cmp
push
cmp
push
loop
mov
movzwl
lds
int3
add
adc
push
imul
cmovno
push
push
sbb
jecxz
jne
and
js
add
push
mov
and
pop
inc
push
or
enterw
push
sub
filds
orl
mov
popfw
inc
fwait
sub
jae
jbe
ret
inc
adc
cmp
add
es
mov
inc
push
rolb
or
loopne
enter
inc
and
mov
and
mov
inc
in
add
dec
sub
loopne
adc
or
cld
data16
sub
call
movsb
jbe
ja
stos
push
dec
mov
dec
lods
xor
jp
sub
xor
or
pop
data16
sbbb
nop
je
add
mov
sbb
inc
mov
aad
mov
ss
add
mov
push
pop
xor
add
sub
add
in
inc
push
inc
call
sbb
or
js
inc
adc
cwtl
xchg
nop
aad
testb
sub
pop
add
mov
sbb
shrb
mov
push
test
or
sbb
imul
dec
call
jno
sbb
adc
daa
test
subl
fdivl
fstp
idivb
xchg
push
inc
je
and
mov
loopne
xchg
pop
ds
cmpsb
cwtl
jmp
add
push
pushf
add
dec
scas
mov
or
pushf
mov
adc
dec
xchg
sbb
sbbl
pop
pop
nopl
call
sub
adc
std
push
sub
push
inc
sub
and
insl
cmp
pop
inc
cs
cmp
fwait
push
imul
or
cmp
adc
or
sbb
and
adc
or
bnd
push
inc
js
les
arpl
es
pop
sbb
jmp
dec
push
inc
or
add
pop
mov
push
xchg
rcll
fdivrp
nop
sbb
inc
dec
stos
outsl
adc
cmp
fisttpll
mov
lds
ret
xchg
out
or
js
in
lea
mov
push
rcr
sub
mov
das
xchg
sbb
mov
aaa
loop
adc
lods
sub
cmp
mov
add
mov
popa
jne
inc
jb
adc
xlat
lea
or
jg
mov
or
fadd
xor
and
adc
test
sub
adc
lea
fs
imul
mov
aaa
adc
mov
mov
jmp
adc
movsb
out
test
inc
xor
or
stos
or
adc
test
fadds
inc
add
popa
adc
pop
or
xchg
movsl
adc
pop
or
int3
cmp
and
pop
mov
outsb
pop
addr16
push
or
mov
ds
pop
repnz
xchg
sbb
mov
or
shl
pop
add
rcr
sti
rcrl
movsb
mov
les
repz
xchg
testl
popa
mov
mov
fcomps
movsb
jnp
add
add
dec
loope
xchg
xor
test
jbe
add
jne
or
or
xor
ja
lea
and
sbb
fdivl
out
and
mov
mov
mov
scas
mov
cmpl
adc
pop
les
push
inc
mov
and
pop
pop
and
cmp
nop
pop
push
or
jne
test
adc
or
jno
iret
adc
sbb
rolb
xor
cmc
shll
and
adcb
sbb
xchg
pop
xor
je
dec
les
cmp
je
xchg
andb
and
adc
dec
ds
sbb
cmpsl
xor
mov
xorb
lock
push
ret
fsubrp
or
int
sub
xor
shlb
mov
pop
divw
js
mov
cmp
aad
arpl
inc
mov
pop
cmp
push
ret
mov
andb
loop
xor
jl
dec
sub
nop
xor
mov
stos
add
mov
adc
jmp
adc
mov
inc
outsl
subb
sbb
inc
fcoms
sbb
stos
push
sbb
out
andl
ss
or
sub
test
dec
sub
or
push
inc
mov
jne
movb
mov
mov
lods
push
pushl
add
lock
xchg
or
loope
add
and
jne
pop
loope
cmp
sarl
xor
enter
repz
loop
dec
orl
add
or
mov
aam
xchg
adc
adc
sub
out
stos
push
shll
dec
add
and
cmp
inc
mov
test
daa
insl
cwtl
jmp
inc
bound
pop
sub
push
mov
xor
dec
out
add
test
adc
test
call
sbb
adc
addb
lcall
lods
sbb
sub
inc
pop
inc
push
mov
dec
xchg
add
or
push
cmp
js
sub
call
pop
movhps
ret
vpsrlw
daa
add
mov
or
adc
or
or
inc
mov
and
idivb
and
lcall
or
outsl
and
test
jno
push
nop
lock
pusha
and
sub
incl
cwtl
xchg
push
mov
cmp
add
sbb
fwait
xor
or
adc
orl
dec
xor
and
sbb
or
and
mov
mov
incb
jecxz
cmp
call
jle
aam
add
dec
xchg
mov
xchg
loope
test
pop
rcll
into
xor
icebp
jg
jb
add
out
popf
clc
or
imul
mov
sbb
daa
jecxz
iret
popa
pusha
imul
shlb
dec
pusha
or
jmp
jmp
sub
cmp
testl
push
push
sub
movsb
int
jo
inc
clc
or
sbb
roll
cmpsl
push
adc
in
inc
push
insl
or
fwait
js
add
push
movsl
adc
ret
mov
pop
and
xchg
mov
cmpsb
addr16
pop
adc
adc
mov
push
inc
inc
xchg
pop
mov
sbb
sbb
neg
shrl
out
mov
pop
ds
and
loop
leave
cld
mov
mov
dec
ficoml
js
adc
fnsave
insb
xor
push
adc
sub
je
nop
and
adc
ret
xlat
inc
xor
pop
js
je
xor
pop
mov
scas
adc
sub
and
sub
lahf
pushf
inc
shll
mov
pop
sbb
imul
cwtl
movl
sbb
rol
push
shll
xor
mov
cmpb
popa
loope
push
incb
out
adc
push
xchg
sub
mov
loopne
adc
pop
lods
les
fistps
cmp
movsl
popa
mov
inc
lea
add
mov
sub
or
xor
inc
push
inc
jne
loop
rcrb
aaa
or
insb
or
push
dec
sub
loope
test
xchg
inc
pop
lods
rcr
add
mov
rcrb
inc
pop
push
fdivr
int3
adc
in
adc
cltd
xor
inc
stos
inc
push
pusha
or
mov
leave
inc
fldenv
fs
push
push
pop
arpl
lods
push
fwait
or
dec
or
unpcklps
inc
pop
mov
adc
mov
fadds
inc
test
loopne
pop
dec
sbb
les
pop
loopne
or
push
xchg
inc
or
aaa
add
push
test
push
dec
add
xor
ss
or
inc
push
pop
and
inc
add
sub
shl
push
dec
call
in
sbb
xor
loopne
mov
sbb
into
mov
xchg
push
cmp
push
add
lock
mov
fwait
loopne
jo
repz
inc
dec
or
or
shlb
jne
sub
mov
xor
xor
push
sub
je
dec
sub
and
mov
in
leave
push
test
push
jmp
mov
daa
jns
push
sbb
dec
adc
ds
push
xchg
or
lea
mov
psubusw
dec
xor
test
mov
insb
and
das
or
inc
push
add
aaa
add
call
or
addb
sbb
add
pop
fabs
test
xor
adc
push
dec
fadds
mov
inc
mov
popa
and
stos
inc
and
dec
enter
dec
inc
call
and
push
es
pop
adc
addr16
rorl
inc
nop
inc
or
push
test
inc
pop
lcall
ja
imul
push
test
push
mov
push
sub
ja
rorb
or
inc
mov
jne
scas
sbb
pop
xchg
sbb
add
cmp
mov
adc
mov
adc
ds
cmp
je
cmp
int
or
inc
fs
sbb
movsb
sbb
inc
or
adc
adc
or
adc
enter
mov
adc
pop
inc
faddp
push
sbb
mov
gs
das
outsl
mov
and
lods
adc
fcompl
lods
rcl
sbb
or
movsl
inc
mov
outsb
jecxz
mov
cmp
or
add
hlt
subb
xor
add
pop
dec
and
cmp
mov
adc
add
repnz
or
js
data16
mov
sbb
push
inc
or
lods
test
or
mov
iret
cmpl
inc
stos
xor
jmp
bound
or
or
add
mov
pop
sub
in
js
push
lss
or
mov
xor
dec
mov
push
scas
in
push
sbb
adc
adc
pop
cwtl
xchg
clc
movb
popa
sub
add
fadd
or
daa
adc
jno
mov
inc
mov
cld
sarb
cmp
ficoml
sub
cwtl
loopne
lea
orb
cltd
es
cmp
test
dec
xchg
jle
ret
sub
jl
mov
xlat
cmpsl
push
mov
dec
jno
xchg
xchg
adc
xor
cmp
add
jne
xor
pop
sarl
daa
lret
je
ret
and
or
popf
inc
cmp
and
xor
xchg
sbb
lods
lds
nop
aaa
xor
and
and
jns
in
ret
cmp
rorb
lret
xchg
xchg
cmp
mov
jmp
inc
test
popa
jl
mov
mov
pop
or
sbb
fwait
mov
push
mov
mov
movsb
sbb
jmp
cltd
fnstcw
roll
jg
inc
xor
mov
push
mov
orb
addb
pop
mov
data16
push
hlt
jmp
rcrl
jno
and
inc
in
mov
inc
and
popf
or
xor
pop
cmp
ret
and
cmpsl
mov
test
sub
or
ljmp
push
add
pushf
xchg
clc
push
add
lret
sbb
mov
sub
add
bextr
cmc
daa
sbb
sub
dec
fsubp
dec
add
xchg
push
lahf
adc
arpl
int
lret
daa
adc
mov
and
or
cmp
mov
je
pusha
adc
dec
addl
pusha
xor
mov
dec
fimuls
cmp
push
ret
xor
adc
pop
or
pop
bound
pop
es
cmpsb
mov
mov
les
dec
add
cwtl
sub
jno
dec
adc
and
scas
mov
aam
enter
or
jp
or
inc
mov
add
js
in
pop
sbb
jbe
cmp
test
xor
add
adc
mov
addb
mov
or
pusha
popa
adc
cmp
pusha
fcoms
jp
and
adc
rolb
inc
fcomps
movb
sub
add
inc
and
loopne
shlb
enter
pop
sbb
dec
xchg
inc
fs
sub
add
mov
push
mov
loopne
jmp
jecxz
dec
inc
in
int3
adc
jecxz
out
add
mov
ja
lds
push
mov
loop
cmpsl
and
and
mov
test
dec
and
mov
fcomps
sub
xlat
xchg
testl
aas
or
add
dec
sbb
adc
inc
cmp
or
mov
mov
mov
pop
test
xchg
push
shlb
data16
cmp
and
push
push
iret
and
mov
or
cld
mov
nop
or
sub
push
inc
sahf
or
loopne
test
les
jns
lea
aam
mov
aaa
pusha
xor
pop
inc
mov
inc
fs
nop
or
push
outsb
mov
ficomps
add
xor
dec
arpl
push
pop
stc
push
test
sbb
add
add
int
rorl
dec
add
adc
xchg
loopne
and
push
xorl
cmp
inc
mov
sbb
popl
fcomps
and
nop
xor
sub
mov
or
mov
xor
adc
testb
push
cmp
add
fnstcw
pop
inc
pusha
std
add
mov
mov
cmp
or
xor
add
push
mov
jo
cmpsl
pop
jae
inc
dec
sub
fisttps
in
sub
dec
mov
or
xor
cmp
test
pop
ret
aas
sbb
into
push
xor
xchg
int3
test
data16
jae
lea
ja
in
xor
push
out
mov
xchg
pop
sub
cs
jl
pop
xor
and
and
sbb
mov
fadds
jne
movsl
xchg
and
jle
add
imul
or
lds
push
inc
dec
inc
sub
jno
push
pop
xchg
pop
or
outsl
loopne
outsb
sbb
iret
jle
mov
pop
pop
imul
das
adc
sarl
or
xor
lds
xchg
imul
jmp
dec
cmp
sbb
fs
cmp
ret
sub
mov
add
cmpsl
mov
xor
and
fyl2x
jle
aad
sbb
pushf
rcpps
or
test
mov
repz
ss
outsl
xor
mov
xchg
aaa
pop
mov
loop
mov
in
sub
repz
popa
clc
ret
scas
xchg
xchg
pop
mov
push
imul
sbb
push
mov
push
xlat
fildll
inc
xor
push
dec
dec
mov
sub
popa
leave
pop
sbb
push
es
sub
sub
jo
les
sbb
mov
pop
pop
outsl
mov
clc
mulb
push
xor
cmpsb
scas
dec
clc
cmpb
xor
and
pop
je
dec
and
push
push
adcl
cmp
mov
test
push
imul
push
cwtl
push
dec
pop
xor
adc
test
jg
pusha
adc
dec
jg
mov
sub
jb
add
and
cmp
dec
or
lcall
call
jo
icebp
push
or
sbb
stos
jne
and
pusha
lods
pop
jg
mov
xchg
push
adc
pop
ljmp
int
movsb
xlat
stos
je
xor
in
cwtl
rcll
push
adcl
inc
adc
adc
xchg
mov
test
dec
imul
jl
dec
sbb
test
inc
rcll
mov
add
jmp
inc
out
add
xchg
pusha
addl
insl
and
outsl
push
sbb
mov
adc
lods
dec
add
jae,pn
and
pushl
inc
add
clc
sbb
sub
sub
push
inc
sti
push
lahf
and
adc
jmp
add
adc
fcmovnb
cmpl
mov
out
and
add
inc
pop
mov
push
push
xor
xchg
daa
clc
xor
add
gs
popa
add
stos
aaa
pop
inc
lds
or
jle
pop
dec
push
sbb
insb
push
stc
por
add
dec
sbb
cmpsl
movsl
cmp
jns
test
sbb
push
jb
out
cwtl
pop
pusha
or
mov
xor
sbb
fbstp
sti
jg
insb
lds
and
or
daa
sbb
dec
mov
enter
sbb
je
push
jecxz
jne
scas
push
rol
push
stos
nop
dec
loopne
adc
pop
sub
sub
movl
stos
mov
xchg
les
lds
xchg
inc
popa
lock
and
or
outsl
incl
jbe
nop
push
loope
and
shufps
lds
xchg
sub
inc
les
sahf
scas
test
and
aaa
into
pop
mov
cmp
test
sbb
inc
adc
mov
push
push
cmp
sub
mov
sbb
ficompl
add
add
inc
sub
add
mov
sbb
shlb
data16
test
daa
add
jl
sbb
je
pop
pop
jno
sub
sbb
mov
enter
or
xlat
adc
cmp
push
and
inc
in
inc
jmp
lret
jne
inc
ret
cmp
out
and
int3
add
cmovo
imul
hlt
subb
fwait
add
or
xchg
rclb
and
sbb
sub
nop
cwtl
cmp
add
jb
shll
cmp
add
push
inc
sub
loopne
adc
jg
les
cmpsl
add
lret
ret
sub
add
sub
test
cmp
fnstenv
mov
pop
fstpl
or
xchg
dec
aaa
add
mov
cmovnp
test
add
lahf
xchg
pop
enter
jno
mov
mov
xor
mov
add
push
pop
adc
dec
mov
out
add
cmp
ret
mov
dec
jne
dec
sahf
sbb
add
mov
sbb
lahf
push
jl
test
mov
adc
mov
push
sarl
lods
sub
movsb
and
push
scas
pop
sbb
jne
inc
fbstp
jecxz
cmp
xor
sub
and
sub
addl
mov
sbb
pusha
test
notb
or
mov
push
ja
pop
and
xor
add
rclb
add
cwtl
add
lods
loopne
fistl
push
orb
push
xor
jne
dec
pop
add
xor
es
shl
mov
call
scas
daa
addl
lea
shrl
loop
mov
jnp
fcomps
jmp
push
andb
jo
dec
or
mov
jp
mov
push
and
and
pushf
mov
inc
imul
aaa
adcb
clc
jns
mov
mov
or
cltd
adc
or
iret
dec
inc
sub
jle
add
add
sarb
or
push
aas
push
or
adc
repz
or
daa
or
cmp
push
lahf
dec
fimull
push
mov
inc
push
jge
sbb
xlat
push
lahf
enter
mov
jnp
and
sub
pop
sub
cmp
imul
cmp
mov
sbb
add
push
add
push
movb
dec
adc
push
add
push
scas
push
or
push
inc
scas
adc
lock
nop
iret
xor
ffree
dec
enter
bound
out
rol
ds
bound
divl
ss
inc
loopne
cmp
dec
adc
push
sbb
jo
sub
xlat
scas
pop
lret
add
inc
cwtl
pop
repnz
data16
cmp
cmp
mov
pop
cmp
bswap
les
sub
and
sahf
fcomi
or
mov
out
adcl
int
push
add
ds
cmpsl
das
lock
xor
test
je
xchg
sbb
pop
out
addl
inc
fadd
xchg
mov
add
ja
cmc
out
and
enter
inc
sub
jns
arpl
add
jmp
push
xor
rcrl
dec
flds
jp
popa
scas
pop
adc
popa
push
inc
sahf
mov
fstl
xchg
or
push
add
cs
add
mov
iret
push
mov
adc
test
js
outsl
cmp
es
push
ss
adc
mov
je
imul
sub
mov
repz
in
sti
in
inc
inc
push
push
add
in
adc
inc
mov
push
sbb
scas
xchg
xlat
sbb
sub
mov
int3
sbbb
mov
imul
popf
jge
lock
and
or
ret
push
loope
inc
adc
dec
sub
mov
mov
mov
pop
lods
aam
inc
xor
sub
les
add
es
jmp
mov
push
aaa
ficompl
sub
add
das
xchg
and
push
adc
pop
xor
push
outsb
mov
jecxz
outsb
inc
adc
sbb
push
mov
adc
fsub
pop
stos
add
cs
cmpl
xchg
out
push
push
rcrl
je
inc
and
push
popa
or
add
mov
fld
nop
ja
pop
daa
adc
adc
hlt
pop
pop
xchg
adc
adc
or
sbb
mov
out
or
insb
add
ficoms
add
nop
push
roll
mov
dec
mov
test
pop
dec
iret
lcall
xor
adc
pop
popf
mov
mov
or
cltd
stos
sub
push
cltd
scas
sub
aam
hlt
dec
cmpsl
sub
mov
sbb
xchg
test
mov
fists
sub
jb
lock
in
stos
sub
cmp
or
in
cli
inc
add
loopne
sarb
out
fmul
fmul
aam
sub
xlat
cltd
mov
mov
inc
or
pusha
mov
cmp
mov
xorl
scas
or
or
mov
xchg
push
test
rcr
xor
or
jmp
movb
or
dec
cmp
add
cmpb
or
cmp
mov
movsb
cmp
or
cmc
jo
jne
popf
or
rclb
sbb
shrl
pop
lcall
xchg
mov
in
adc
adc
inc
dec
mov
xchg
xchg
test
adc
ja
js
cs
mov
dec
or
xchg
in
mov
pop
add
cs
add
sub
mov
add
daa
aaa
mov
jmp
inc
and
jle
pop
test
sarb
dec
js
sbb
or
loopne
adc
ja
rep
das
das
or
out
popa
out
jns
mov
push
in
testl
int3
dec
sub
and
andb
shlb
pop
xchg
mov
and
add
mov
into
adc
ss
push
mov
and
into
cmpsl
test
into
inc
dec
and
cs
dec
jns
xor
jge
ss
pushf
add
jns
mov
sbb
fsubl
pop
pop
and
or
int
ficompl
dec
fadds
in
popf
clc
sbb
lret
sbb
dec
les
sbb
push
nop
or
lds
add
or
or
add
insl
and
mov
repnz
out
jge
pop
add
xor
add
sub
leave
inc
and
xabort
or
stos
pop
push
das
add
mov
mov
ja
ret
push
cmpsl
dec
mov
adc
sub
jmp
push
rorb
cwtl
mov
sbb
push
dec
sub
sub
add
sbb
mov
testl
jns
xor
aaa
sub
cmp
push
dec
mov
aam
dec
popa
sub
mov
mov
add
push
or
fmul
xlat
push
sub
fdivl
push
mov
sbb
xlat
pop
jmp
cmp
imul
repnz
icebp
push
ret
mov
mov
jl
fnstcw
push
adcl
mov
mov
mov
pop
adc
dec
pop
push
clc
xchg
sub
test
iret
mov
mov
dec
aam
hlt
push
iret
xchg
cmp
hlt
mov
sub
or
pop
add
cmp
mov
xor
xor
mov
aaa
pop
cmp
lret
push
adc
pushf
subb
lea
gs
push
fwait
scas
add
cmp
daa
and
pop
xor
xchg
adc
push
mov
mov
adc
mov
fs
inc
orb
div
sub
push
fistpll
cmp
je
rclb
fsubr
sbb
sub
pop
or
les
aad
jne
inc
cmpb
insb
sbb
dec
and
insb
mov
rcl
and
imul
aam
and
popl
aam
push
push
inc
out
xchg
mov
xor
bound
jne
lea
enter
sub
inc
push
insl
sbb
and
xchg
in
xchg
rolb
mov
xchg
sub
lcall
mov
jp
pop
aam
cmc
or
into
add
test
testl
mov
pop
in
xchg
dec
or
inc
add
cmp
adc
dec
int3
dec
rclb
xchg
xorb
and
xor
enter
scas
add
sbb
lock
popa
jg
cmp
pop
pop
jb
and
jne
and
pop
xor
cmpsl
into
xor
nop
dec
and
fcoml
sbb
mov
popf
mov
pop
test
cvtps2pi
adc
mov
jl
shlb
dec
in
call
inc
adcl
rcrl
adc
sbb
lods
xchg
outsb
loop
inc
or
inc
pusha
xchg
inc
jmp
pop
jecxz
or
or
add
adc
mov
sub
bound
cmp
call
cmpl
roll
adc
cmp
fimull
adc
push
sub
add
pop
or
fwait
shlb
test
or
pop
les
ds
mov
and
test
pop
in
js
popf
shlb
or
push
xchg
adc
pop
dec
scas
cmp
test
mov
xchg
imul
les
xor
sub
mov
outsl
fisttps
cmp
cmp
bound
ss
xchg
jbe
out
cmp
sub
cmpsl
rol
pusha
inc
out
or
addl
cmp
loopne
subb
dec
outsl
lds
pop
xchg
add
adc
lret
cmp
push
mov
in
cmc
pop
enter
dec
and
adc
mov
sub
sbb
cmp
push
push
push
rcll
jo
inc
xchg
in
push
add
fs
mov
ss
gs
test
loope
loopne
inc
fsubrs
inc
or
hlt
push
adc
xchg
test
inc
xorl
jns
sub
pop
out
adc
lock
or
xchg
movsb
pusha
cmpsb
pusha
popa
int3
jl
push
sbb
outsb
inc
add
lahf
cmp
pop
pop
jbe
andl
jns
cmp
add
add
cmpl
mov
cmpsl
pop
sub
scas
cmp
adcl
iret
or
adc
test
and
pop
jmp
push
mov
cmpb
mov
inc
mov
push
lods
dec
shlb
xchg
cmp
les
add
pop
pop
xchg
add
pop
daa
repnz
mov
cmp
or
ljmp
push
vunpcklps
push
pop
pop
push
fiaddl
in
or
daa
pop
jmp
inc
jb
xor
dec
call
xor
inc
cmp
jle
pop
and
mov
xor
xor
dec
adc
sbb
jb
mov
fcmovb
inc
hlt
push
dec
clc
adc
and
out
aam
sahf
out
mov
jge
cmpl
ja
insb
mov
sbb
xor
pop
das
sbb
and
sub
sbb
and
adc
mov
arpl
sub
push
cmp
hlt
add
cmp
push
push
pop
stos
dec
cmp
sub
xor
xor
inc
js
pop
mov
inc
shrb
mov
mov
and
int
sub
adc
and
lock
shrb
addr16
pop
push
movb
lcall
or
push
add
xor
mov
push
in
pop
shlb
add
dec
dec
mov
rorb
add
push
sub
jmp
cmp
add
sub
push
aas
inc
add
daa
jbe
ret
sbb
add
sub
pop
inc
rsqrtps
or
shlb
leave
inc
adc
or
jnp
and
ja
adc
mov
push
paddsb
inc
add
mov
jae
arpl
mov
sub
push
out
or
pop
ds
pushf
ss
push
movswl
cmp
and
scas
fcom
xor
js
inc
insl
sbb
and
notb
cmp
add
arpl
test
test
inc
mov
xchg
pushf
mov
mov
mov
pusha
push
mov
xchg
shll
mov
test
mov
mov
xchg
sbb
jno
clc
addr16
shlb
mov
sub
adc
movsb
mov
idivl
cmpb
scas
jbe
idivb
xor
inc
arpl
arpl
inc
pushf
int
call
adc
or
in
movsl
lods
ret
cmp
je
jne
pop
int3
pop
inc
inc
fimuls
ret
cmp
pushf
inc
shrb
xor
shrb
or
mov
arpl
mov
dec
popa
adc
sub
and
fxch
test
xor
jb
fisttpl
loop
sub
push
adc
decl
das
add
dec
stos
lahf
das
daa
pop
cmp
sub
fcompl
pop
mov
and
roll
test
push
imull
jecxz
xlat
orb
lcall
movl
jecxz
jle
pop
popf
fsubs
and
jne
cs
inc
aaa
roll
fidivl
or
sbb
enter
les
dec
shll
or
inc
pop
or
add
and
mov
dec
sarb
sti
dec
pop
out
jp
push
push
sbb
inc
fs
js
dec
insb
cmpsb
mov
cmp
orl
or
inc
inc
sar
sbb
mov
fmuls
or
out
jo
mov
inc
repz
or
incl
and
nop
dec
inc
jge
or
inc
cmp
cmp
dec
cmp
int
outsl
mov
cmp
ss
or
ret
pop
insl
pop
sahf
movsb
inc
fstpl
jmp
call
add
daa
fisubl
out
dec
add
les
insl
jns
inc
adc
jmp
enter
es
adc
aas
add
enter
push
loope
sbb
fs
mov
push
sahf
sub
mov
jmp
lods
into
add
fmuls
flds
sbb
add
jo
adc
lock
inc
outsl
mov
jne
into
inc
adc
addl
mov
orb
scas
out
jmp
dec
and
cmp
add
pop
rcrl
pop
xchg
sub
jmp
aam
cmp
iret
adc
lret
sahf
fs
popa
inc
or
inc
inc
sbb
cwtl
and
jle
xor
fmuls
cmpsb
mov
xlat
add
mov
ret
xor
int
add
int3
lods
mov
int3
mov
dec
pop
mov
hlt
jo
add
xorb
data16
mov
add
jno
dec
fs
sub
dec
inc
and
dec
loop
leave
pop
and
push
mov
xor
sub
inc
mov
vfixupimmps
je
xchg
mov
aam
xchg
or
mov
or
add
mov
popl
mov
loop
pop
jecxz
dec
fs
fistl
les
add
inc
push
sbb
xor
lret
mov
mov
roll
sbb
movsb
and
out
xor
out
aam
or
dec
push
add
adc
jl
xchg
jp
pop
test
and
mov
push
mov
fdivrs
cmp
pop
lock
mov
and
mov
adc
enter
pop
pop
fistpl
or
push
jne
popa
fidivl
pop
and
inc
adc
add
adc
push
fcoml
jl
je
mov
loope
fs
push
or
and
pop
dec
dec
push
inc
inc
sahf
imul
jb
js
lret
pop
lret
les
rolb
jae
loopne
pop
in
scas
cmpsl
mov
test
add
mov
add
sbb
test
sbb
push
mov
ss
jne
jmp
pop
or
and
mov
js
hlt
inc
pushf
add
jne
popa
jnp
mov
iret
mov
out
jl
daa
dec
and
fwait
jle,pn
cmc
mov
les
scas
push
mov
mov
sbb
cmp
cmp
pop
sbb
sbb
adc
add
jl
fs
out
adc
xor
jo
cmp
sbb
sbb
sarl
mov
mov
call
cltd
shll
jl
fs
mov
aas
adc
sub
lds
jns
xchg
lods
ret
and
hlt
sbb
add
lds
addb
add
xchg
mov
shl
out
sbb
gs
movsl
jmp
mov
push
mov
loopne
mov
mov
or
roll
cmp
aam
adc
cmp
jae
mov
pop
mov
mov
push
xor
dec
xchg
add
sbb
pushf
fstpt
push
in
popa
test
cmpsl
push
xchg
and
mov
add
add
inc
add
adc
jle
incl
pop
dec
insb
notb
cmp
sarb
in
sub
test
and
mov
in
or
aam
call
dec
xor
pop
aaa
or
add
loopne
mov
inc
xorl
fs
imul
fmuls
cmp
aam
mov
and
mov
adc
add
fs
xor
add
mov
and
rorl
ret
sbb
ja
insl
in
cmc
shlb
in
jle
cmp
mov
inc
cwtl
mov
hlt
cmp
xor
dec
add
ret
dec
push
adcl
ret
cltd
cmp
or
out
add
fs
or
loopne
cli
mov
inc
jge
sub
inc
mov
mov
inc
mov
fwait
jp
pop
repz
lock
cmp
sbb
jo
mov
inc
add
jg
and
int3
insb
adc
ret
inc
jne
or
or
inc
pusha
push
pop
ret
mov
sub
jne
imul
test
pop
shll
sub
outsl
data16
fidivrs
fidivrs
dec
jne
mov
xor
cli
fcomps
jmp
push
int
popf
adc
push
mov
dec
pop
inc
enter
inc
pop
sub
add
and
cmpsl
xchg
lahf
pusha
movsl
dec
or
jmp
jg
lret
add
push
add
mov
cmp
or
jl
jne
add
xchg
push
addb
jge
push
sbb
das
notl
push
cmpb
sub
sub
sbb
out
adc
mov
dec
or
or
push
xchg
inc
daa
or
inc
pop
imull
inc
inc
dec
loopne
pushf
xor
pusha
inc
mov
or
or
xor
pop
mov
pop
and
mov
sbb
sbb
and
or
popa
inc
dec
inc
and
imul
loope
cmpl
sbb
inc
dec
stc
ja
sbb
lds
pop
jge
mov
or
sbb
or
xchg
sbb
mov
adc
sbb
repz
mov
sbb
sub
sbb
fisubs
js
mov
sbb
or
mov
sub
inc
sub
je
hlt
andb
punpckhdq
pop
ret
test
inc
pop
inc
add
jne
ja
mov
sbb
sub
pop
cmp
pop
push
inc
mov
mov
sub
xchg
add
lcall
pop
jbe
or
add
push
push
pop
adc
inc
ja
in
inc
lock
subl
clc
sub
jne
add
movl
mov
testb
cltd
add
add
adc
and
xchg
adc
pusha
lcall
xor
cmp
jns
inc
or
cmp
in
cmpsl
aad
clc
sbb
jnp
add
cmp
xor
push
cmp
cmpsl
sbb
add
aaa
mov
mov
aam
push
testb
adc
popa
sbb
add
and
add
jg
push
add
jp
jg
pop
rorl
sbb
jg
cmp
out
or
inc
add
fadds
sti
jmp
cmc
fs
and
and
addl
or
inc
xchg
dec
pop
dec
enter
mov
jo
add
mov
stc
daa
rolb
es
push
sbb
dec
xchg
sub
mov
addb
add
pop
inc
jp
orb
add
arpl
push
adc
gs
sub
aad
mov
xchg
push
imul
pop
orb
sbb
xor
dec
leave
adc
jo
xor
and
sub
mov
mov
daa
jne
insl
inc
mov
ja
shlb
inc
jmp
or
sbb
aas
cmc
insl
enter
inc
mov
js
aas
mov
push
ja
rcl
insb
adc
ret
repz
mov
sbb
inc
mov
mov
and
in
inc
mov
js
daa
rcrl
jge
rcrb
dec
and
push
pop
push
or
jo
adc
pop
ret
mov
pop
inc
jp
adc
ljmp
clc
lock
mov
jne
sub
in
and
testb
mov
pop
xchg
loope
or
cmp
lea
jo
push
fs
push
and
aam
rclb
pop
xchg
dec
pushf
sbb
adc
jo
adc
fs
call
js
cmp
fcomip
jnp
in
pop
or
or
ror
jge
and
jecxz
pop
sbb
fldl
sub
negl
sbbb
pop
adc
mov
mov
and
or
inc
and
xchg
dec
pop
test
lock
mov
ffreep
std
push
inc
xchg
add
add
iret
add
jmp
mov
jo
inc
mov
cmpsb
add
ja
xor
or
popa
mov
adc
push
mov
inc
and
pop
pushf
xlat
sub
dec
pop
mulb
lret
dec
and
pop
cmp
push
pop
add
pop
cmp
push
rolb
inc
jo
loopne
jbe
std
sbb
add
inc
add
xor
cli
inc
adc
add
cmp
cmp
inc
add
leave
push
jmp
inc
inc
js
add
inc
mov
testb
add
sbb
idivl
mov
or
cltd
push
jnp
sub
sub
add
cld
pop
push
xor
ficomps
rol
fcmovu
inc
push
or
xchg
mov
int3
push
sub
push
add
inc
fwait
adc
inc
add
cmp
lods
shlb
jne
xor
inc
lea
daa
push
and
shrb
xor
sahf
in
call
and
sub
push
in
dec
lock
inc
or
mov
mov
jbe
ret
or
andb
mov
add
inc
and
push
xor
loopne
fxch
pop
sbb
adc
inc
dec
or
ss
lret
dec
lods
and
or
cmp
mov
pop
xchg
cltd
add
sbbb
sbb
mov
imull
inc
push
push
or
sub
dec
mov
fcoms
pop
or
and
or
add
imul
or
add
inc
pusha
push
or
dec
movsb
and
clc
sar
jns
daa
rcr
adc
inc
pop
into
sbb
mov
daa
adc
pop
jne
add
push
mov
xchg
or
iret
sub
sub
popf
push
lock
ret
jecxz
push
pop
pop
push
or
lret
pop
fistpll
imul
and
in
mov
test
dec
push
push
adc
outsl
push
or
adc
adc
movsb
shll
mov
scas
mov
mov
jg
push
invd
and
inc
je
jo
mov
adc
rolb
xchg
xlat
dec
inc
nop
das
and
mov
popa
pop
dec
inc
popa
mov
add
mov
les
rclb
repnz
lock
cmp
push
push
adc
mov
je
mov
fdivrl
mov
xchg
aam
fnstsw
dec
clc
push
pop
mov
jp
sub
inc
or
sarb
and
xchg
cmpsb
dec
imul
out
jmp
mov
add
cmp
and
cs
adc
loopne
fwait
divl
fsubrp
push
lods
push
adc
cmp
jb
jecxz
and
in
test
sbb
fidivrs
ret
inc
cmpsb
mov
adc
ficompl
pop
mov
out
sbb
pusha
out
adc
mov
sbb
sbb
mov
xchg
or
pusha
inc
and
sahf
push
shrb
shll
das
sub
dec
mov
and
xchg
js
popf
dec
add
rol
fdivrs
pop
jg
arpl
xor
into
cmp
or
test
sub
fs
pop
pop
adc
adc
pop
cmpb
faddl
cld
xchg
xchg
pop
mov
dec
dec
push
sbb
xchg
xor
mov
jge
lea
sub
outsb
hlt
xor
leave
jle
movsb
adcl
jecxz
fcoms
loopne
xchg
or
mov
fldt
stos
inc
add
inc
dec
add
sbb
fistps
and
push
dec
inc
mov
sbb
clc
stos
and
add
sub
add
xorl
cli
stos
jle
icebp
es
xor
sub
dec
jbe
dec
lea
push
lea
mov
lcall
xchg
mov
add
dec
dec
mov
xchg
movups
popa
gs
mov
cwtl
push
pop
inc
sub
or
sbb
mov
daa
outsl
sub
jmp
ja
pop
dec
jb
xchg
in
in
inc
js
xor
xlat
sbb
dec
les
ret
ret
cmp
sub
lods
cmp
add
int3
adc
or
inc
cmp
push
in
sub
and
push
push
repnz
sbb
mov
in
xor
or
in
sti
ja
rcl
lea
sbb
sahf
ret
xor
dec
es
sub
js
cli
push
dec
jbe
jne
and
and
sub
jae
cmp
jne
pop
adc
adc
loope
push
cmpsl
cs
mov
push
add
or
inc
push
enter
sub
push
and
in
lret
push
adc
sbb
or
and
je
pop
adc
add
xor
mov
icebp
mov
push
pusha
cmp
cld
insl
and
mov
adc
inc
mov
and
inc
iret
inc
mov
mov
pusha
pop
xor
out
shlb
pop
orl
imul
jae
sub
cmpb
cltd
push
mov
clc
add
andl
mov
xchg
and
add
push
and
nop
lcall
xor
pop
dec
inc
fsubs
push
add
js
retw
pop
imul
mov
sbb
push
iret
inc
inc
cmc
pusha
xchg
cmp
sub
pop
rorl
std
imulb
cmpsb
aaa
add
inc
arpl
push
push
adc
repnz
push
mov
popf
lods
cltd
xor
pop
adc
mov
sbb
imul
sub
pop
mov
adc
enter
arpl
xchg
jbe
push
arpl
pop
or
xor
in
mov
fadds
xchg
xchg
lock
sbb
sbb
loop
or
gs
fs
jno
imul
and
clc
lret
push
js
test
in
add
mov
rcr
lea
lea
add
loopne
cmp
mov
inc
or
adc
pop
cmp
pop
mov
adc
and
dec
notb
or
mov
es
jl
xor
lock
insl
mov
ss
es
pop
sub
lahf
and
xchg
add
xor
and
or
push
and
add
add
push
shrl
pop
cmp
popa
int
unpckhps
xchg
lods
adc
and
sbb
or
or
mov
jo
aas
aad
insl
pop
popa
shrb
pop
adc
mov
sub
dec
mov
insl
outsb
xor
ja
es
add
mov
in
or
ds
cmp
aas
pop
pushf
subb
mov
jge
jbe
mov
pop
sub
add
sub
jo
pop
jmp
sbb
into
ret
aaa
adc
inc
inc
scas
data16
fadds
inc
repnz
or
xchg
adc
or
mov
sbb
inc
ret
lret
and
push
pop
add
ss
lods
push
aaa
mov
inc
or
imul
pusha
add
out
loopne
push
test
popa
pusha
adc
mov
fmuls
outsl
testb
adc
ja
pop
ss
repnz
test
pop
cmp
jl
or
mov
push
pop
xor
sub
pushf
pop
dec
cmp
xor
add
nop
cwtl
mov
test
movb
cmpsb
or
mov
add
and
aam
jnp
shr
and
add
sub
xchg
inc
adc
jb
mov
aas
fistpll
sub
test
adc
test
and
cmpsb
xor
shl
aaa
dec
in
mov
or
outsb
pusha
jns
pusha
outsb
pop
test
stos
fnstcw
xor
mov
inc
xchg
mov
mov
jb
pop
push
test
in
add
mov
mov
out
jno
mov
lock
pop
add
inc
lods
insl
mov
lock
add
popf
dec
in
cs
hlt
xchg
sbb
mov
cmp
lahf
imul
dec
fwait
sub
in
enter
add
dec
pusha
mov
in
mov
mov
add
jae
push
loope
cmc
mov
adc
cli
leave
decl
adc
jno
cmp
mov
inc
adc
sub
jno
out
fbld
or
add
jae
outsl
and
push
inc
sbb
loopne
bound
jns
mov
clc
mov
mov
nop
pop
xor
inc
add
jnp
mov
dec
daa
sub
fmuls
aas
sbb
push
call
divl
aas
xchg
test
inc
pop
ret
lock
shll
dec
dec
sub
inc
xor
push
xor
adc
cmp
ss
lods
inc
clc
or
xchg
ror
cmpsb
jnp
cltd
dec
xor
xchg
xchg
out
movsl
or
orb
sbb
mov
loopne
inc
loopne
mov
repnz
call
jne
rclb
inc
dec
jo
sbb
mov
sbb
js
test
hlt
and
jmp
and
or
and
int
mov
mov
inc
add
cmpsl
loopne
or
xchg
or
fbld
add
sub
fld
push
cmp
daa
jg
adc
adc
aaa
cmc
or
inc
or
sbb
add
out
or
and
es
lods
ret
dec
add
cmp
adc
xor
fs
mov
or
adc
dec
cmp
sub
mov
mov
out
inc
adc
call
lldt
cmpsb
hlt
add
dec
fs
xor
jp
outsb
fdivl
push
xchg
je
aam
inc
push
and
push
or
jo
je
sti
xlat
movsb
pop
or
and
push
popa
inc
ja
sbb
xor
mov
nop
jmp
adc
or
lret
das
add
dec
add
inc
jmp
push
inc
dec
pop
test
sub
out
mov
pop
add
mov
xchg
shlb
in
dec
or
xchg
push
pusha
pop
shrb
add
popf
mov
les
inc
cmp
shrb
cwtl
iret
arpl
aam
loopne
sub
test
loopne
int
xor
pushf
push
in
mov
addr16
sahf
and
sbb
dec
sahf
and
mov
addr16
xor
daa
mov
adc
ds
cld
xchg
addb
xlat
invd
jmp
dec
test
mov
dec
dec
dec
dec
inc
add
insl
addl
fcomps
mov
int
mov
xchg
inc
mov
cltd
lods
xchg
cwtl
rcl
and
push
mov
jo
lods
pop
sub
in
inc
out
sub
insl
das
lret
sbb
loopne
inc
xchg
dec
jae
pop
loope
lret
inc
negl
jno
aas
mov
jno
cmc
sbb
push
mov
push
xor
sbb
mov
dec
add
mov
testb
aad
in
mov
mov
sbb
xor
push
stos
test
jl
sub
sub
add
sub
arpl
xor
cmp
adc
add
hlt
lods
xchg
fwait
loop
ret
rol
inc
or
add
adc
push
adc
loopne
mov
test
rol
sub
sub
sahf
lods
lds
and
jbe
push
arpl
xor
and
jb
push
push
or
pop
pop
js
push
aad
dec
pop
sarl
loope
pop
mov
jge
sub
sarb
sbbb
in
push
add
pop
fisttpl
out
and
or
inc
xor
dec
nop
push
lcall
adc
in
insl
add
mov
adc
loop
adcl
stc
and
add
inc
xchg
lret
jae
jno
mov
loope
adc
pusha
add
jb
ret
sub
pop
or
shrb
aas
xor
call
movsb
xchg
mov
inc
sbb
xchg
insb
movb
add
pusha
cmpb
add
rclb
decl
addb
cmpsb
mov
mov
cmp
cs
ja
dec
jp
inc
outsb
pop
sbbl
int
push
adc
aas
dec
cmp
cwtl
imul
outsl
nop
clc
mov
push
sarl
mov
test
xchg
movsb
imull
std
pushf
jbe
iret
subl
in
sbbl
xchg
add
and
jns
pop
sbb
add
pop
or
sbbb
push
mov
sbb
push
loopne
push
enter
leave
inc
pop
fadds
pop
sbbb
aam
inc
pop
xor
or
test
xchg
push
clc
out
push
cmp
and
scas
pop
push
adc
movsb
mov
pop
arpl
mov
add
mov
mov
outsb
inc
add
jmp
xchg
dec
push
aaa
or
insb
sbb
or
pop
lret
pusha
pop
mov
lret
in
dec
cmpsl
test
fisttpl
sub
mov
cmpsb
mov
adc
push
das
lock
sub
and
or
xchg
lret
lods
sbb
sub
dec
mov
scas
xchg
enter
in
ficomps
ja
test
test
inc
sbb
das
movb
or
repnz
js
add
lods
mov
or
and
in
es
iret
pop
xchg
add
sbb
cmpsb
dec
add
cmpsb
and
jl
out
outsb
and
xchg
cmp
or
rorl
pop
sub
fdivl
vmread
add
movsl
stos
or
pop
mov
dec
leave
mov
pusha
mov
xchg
imul
xor
roll
sub
xor
xor
sarl
cmp
inc
dec
mov
daa
and
push
or
xchg
aaa
jp
and
pop
or
pop
xlat
add
push
jno
xor
dec
enter
aaa
sub
dec
xor
inc
iret
xor
pop
rorb
and
dec
and
and
push
sbb
inc
cmp
leave
subl
pop
mov
inc
inc
xor
jo
or
test
and
inc
mov
add
mov
push
mov
mov
sub
sbb
jmp
scas
inc
xchg
mov
es
add
or
push
mov
and
sti
in
ret
xor
add
fwait
leave
inc
and
adc
dec
add
imul
adc
cltd
dec
aas
orb
pop
cwtl
fsubl
add
sbb
sahf
add
mov
xor
aas
pop
mov
inc
pop
and
stc
and
and
das
ja
add
or
mov
icebp
and
mov
mov
into
pop
sub
inc
enter
and
xor
pop
popa
loopne
or
imul
test
push
enter
jno
insl
loop
xor
xor
pop
aaa
pop
mov
cmpsl
cmp
outsl
fwait
dec
xor
pushf
push
add
jno
lods
andb
cmpsb
jno
jle
push
cmp
jle
and
jle
push
sbb
lods
adc
push
movb
lods
pop
add
aas
mov
and
test
mov
mov
outsb
or
cli
dec
sbb
rolb
mov
and
cli
mov
cmpsl
push
daa
rorl
dec
cmp
cmpl
mov
dec
add
dec
incl
out
dec
add
sub
xor
mov
sbb
xchg
stc
push
and
sbb
es
das
pop
sub
pusha
arpl
out
cmp
push
lock
daa
mov
xchg
aad
clc
inc
ss
or
push
int
push
icebp
add
pusha
pushf
xor
xchg
add
test
imul
xchg
push
push
push
bound
daa
jae
movb
adc
pop
dec
es
add
mov
test
fdivrs
push
add
test
jb
ds
pop
icebp
movsl
mov
lea
add
clc
xchg
adc
test
aas
push
cmp
aad
push
push
sbb
mov
imul
adc
push
and
rcrl
clc
adc
nop
iret
jl
inc
movsb
sbb
cmc
lret
popa
push
ja
inc
add
int
scas
inc
dec
or
mov
dec
cmp
cmp
add
out
insl
movsb
mov
lret
mov
aaa
xchg
inc
push
sti
jns
leave
enter
sub
test
jb
dec
pop
xor
mov
fs
fbstp
or
dec
sub
xchg
sahf
aad
or
dec
cmp
jmp
lcall
test
pusha
add
sub
adc
xchg
adc
add
in
dec
jne
test
int3
pop
andb
cmc
jnp
nop
push
mov
test
sub
sub
sbb
aad
and
insb
sbb
fsubrs
shll
rolb
push
and
fistpl
mov
icebp
mov
je
cmp
mov
mov
fnsave
add
or
leave
add
push
add
test
pop
out
bound
dec
into
pop
into
or
sbb
rcrl
out
adc
aad
push
faddl
pusha
call
int
push
sub
push
pushf
mov
jle
inc
je
aas
test
jo
je,pt
aas
dec
push
dec
push
jl
jl
inc
nop
inc
outsl
or
cltd
mov
je
jne
inc
enter
mov
mov
push
iret
inc
xchg
or
jo
and
imul
mov
test
pop
push
cmp
daa
clc
mov
mov
pop
mov
mov
mov
sbb
sub
mov
scas
push
cmp
cmp
dec
daa
and
inc
iret
fidivs
lea
outsb
adc
pusha
pop
push
and
add
out
sbb
lods
orl
mov
sbb
inc
mov
and
int
push
sub
sbb
add
cmp
orb
in
inc
pop
or
lds
pop
fs
dec
mov
jne
rcr
xchg
or
add
add
jns
add
sbb
push
inc
sub
or
pop
xor
outsl
es
xor
ds
adc
call
addr16
pushf
jmp
daa
pop
inc
add
les
mov
insb
xor
int3
and
push
jne
mov
xor
pop
inc
dec
punpcklbw
dec
mov
incb
incb
lahf
or
lds
inc
xchg
push
push
fmul
pop
test
mov
xlat
fiadds
dec
int3
stos
imull
mov
outsl
xor
cmpsb
push
push
or
push
test
sbb
adc
inc
add
imul
ss
xor
xchg
addr16
imul
int3
dec
push
adcl
in
cmp
test
mov
je
inc
shr
movsl
idivl
dec
xor
test
xor
adc
lahf
out
mov
cmp
or
loop
out
fwait
add
inc
shrl
xchg
cmp
dec
and
sbb
dec
sbb
daa
addr16
sub
xchg
mov
mov
or
push
push
xor
jge
pop
jb
sbb
pop
loopne
dec
cmc
hlt
movl
filds
lea
sti
sbb
das
inc
je
dec
xorb
nop
mov
pushf
sub
cmp
into
and
push
add
mov
xchg
and
mov
pop
loope
xor
sub
lods
or
test
stc
mov
jmp
out
pop
pushf
and
insb
fld
mov
aaa
mov
sub
adc
or
sahf
jns
lock
fs
xorb
or
adc
inc
or
clc
orl
out
fldenv
push
dec
cwtl
nop
sub
xor
test
or
pop
out
andl
cmp
xchg
je
jae
pop
test
movsl
push
mov
dec
sahf
and
cmpl
inc
add
imul
push
paddusb
mov
adc
cmp
xchg
movsb
adcl
mov
aas
or
mov
inc
stos
mov
xor
push
mov
ret
cmp
inc
jb
jne
or
imul
inc
ret
or
scas
cwtl
aaa
lock
leave
rorl
xchg
sbb
sub
lock
loop
add
mov
ss
xor
lods
sbb
dec
lock
push
cmp
mov
and
movsb
or
sub
movsb
sub
mov
pop
jno
sbb
inc
lods
inc
test
pop
or
movsl
jg
xchg
and
xlat
cmp
pusha
cmp
lahf
lock
dec
inc
mov
lea
add
pop
stos
das
ret
jae
in
fadd
sbb
popa
jmp
add
jecxz
inc
mov
fiaddl
push
sbb
cs
lea
lcall
dec
rcr
out
fdiv
xchg
sbb
dec
and
loope
jmp
sbb
rcll
xor
jo
sbb
aam
aas
jp
les
add
push
and
xchg
inc
jp
add
outsb
add
xor
mov
cltd
or
mov
aaa
inc
push
imull
sub
add
sti
mov
or
jmp
lds
in
mov
rcrl
sbb
mov
loop
sub
rolb
adc
leave
sbb
lcall
xchg
xchg
add
mov
pop
inc
push
inc
fnsave
or
loop
hlt
movl
push
scas
push
and
into
adc
adc
sub
jo
or
add
mov
inc
or
adc
jne
and
in
inc
pop
xchg
dec
adc
push
cs
pop
scas
in
aam
repnz
clc
push
jns
sbb
and
rolb
repz
push
mov
lock
inc
scas
lds
adc
test
adcb
insb
int3
divl
cmpsl
es
mov
sbb
outsl
cmp
lcall
call
adc
xor
adc
add
sub
xchg
stos
test
cmp
in
xor
jno
das
mov
orl
or
leave
sti
cwtl
fildl
or
sub
sbb
pop
add
mov
or
mov
dec
pop
fiadds
pop
inc
inc
ret
or
push
cmp
mov
jmp
sub
lret
rol
push
test
adc
insl
cwtl
dec
lods
ficoml
pop
loope
call
push
or
inc
mov
mov
cmpsl
outsl
inc
dec
push
in
and
mov
inc
jl
pop
adc
xor
add
shr
aam
sbbl
adc
rcll
cmp
lret
mov
or
or
jg
mov
and
scas
outsl
sbb
daa
enter
ds
jmp
add
jmp
sub
loop
dec
int
cs
dec
bound
or
xchg
xchg
xchg
inc
dec
dec
rorb
js
cmp
orb
mov
arpl
pop
sahf
cmp
inc
mov
mov
fldt
test
jae
lods
xor
out
scas
movl
les
cltd
popf
out
jmp
xchg
test
adc
enter
imul
cmp
gs
mov
dec
hlt
mov
adc
lea
pushf
rclb
lods
or
les
push
push
xlat
jl
stos
adcl
popf
dec
out
and
xchg
cmp
setg
js
adc
lahf
add
xchg
mov
sub
pop
cmp
into
nop
icebp
sub
push
cmpsb
hlt
add
test
xchg
push
xchg
pmovmskb
lea
pushf
je
jbe
mov
dec
out
mov
stos
sbb
sbb
mov
adc
jo
xchg
add
inc
mov
xor
push
mov
jge
lock
inc
jno
mov
dec
dec
push
test
cmp
push
dec
sbb
rorb
pop
rolb
lock
dec
xor
cmpsb
call
or
xor
fcoms
xor
int3
sbb
cld
push
mov
inc
jo
xor
add
and
scas
xlat
scas
ret
mov
clc
mulb
dec
js
push
jno
rcrb
in
mov
pop
or
lock
shrb
arpl
dec
in
out
jne
dec
adcl
pop
loopne
push
imul
dec
push
std
mov
test
xor
dec
scas
nop
fistps
mov
mov
adc
adc
dec
cmpsl
xchg
shlb
lods
mov
daa
jne
jbe,pt
and
sub
fdivrl
mov
or
push
arpl
test
inc
mov
sub
mov
inc
cmp
in
xchg
out
fisubl
lea
sub
out
mov
lock
push
adc
dec
jne
movl
inc
jb
cmp
es
call
inc
out
xchg
inc
dec
and
inc
arpl
add
pop
nop
xchg
lock
add
mov
fnstsw
fwait
inc
andb
xchg
mov
adc
cwtl
fs
test
lock
movl
test
rcr
pop
mov
and
call
testl
push
xor
cmp
jne
sarb
push
mov
int3
adc
xchg
xchg
mov
fsubp
aas
and
cmp
xorl
mov
pop
mov
pop
adc
popa
or
dec
mov
and
cmc
sbb
and
in
dec
cmp
cld
cmp
sub
adc
cmp
dec
test
popa
push
in
aad
jmp
outsl
xchg
or
xchg
sbb
in
push
das
xchg
mov
and
inc
dec
daa
mov
sbb
in
add
call
inc
pop
ret
push
add
decl
cmpb
or
inc
mov
inc
or
xchg
stos
push
adc
add
dec
test
lcall
setb
xor
insl
mov
je
inc
add
pop
cmp
ret
int3
mov
or
mov
fbstp
faddl
lock
xchg
fwait
mov
fsubrl
aam
inc
mov
fs
dec
fdivs
data16
and
inc
incb
or
aaa
fisttpl
popa
jb
add
and
sbb
jg
adc
nop
mov
add
jmp
fxch
push
cwtl
add
push
bound
insb
add
push
push
xor
into
add
xchg
xlat
add
inc
mov
fildll
mov
movups
push
addl
xchg
mov
outsl
xor
sbb
jns
arpl
out
push
stos
insb
sub
inc
lcall
mov
and
cmp
and
add
aad
das
fisubrl
adc
fiadds
adc
icebp
and
addr16
push
in
or
xor
sub
or
mov
adc
xchg
hlt
insl
dec
filds
clc
or
mov
lret
out
add
int
ss
push
mov
lret
mov
lret
mov
out
jo
outsb
pop
inc
insb
lcall
int
mov
into
sysenter
int
push
je
xchg
mov
lcall
jbe
pop
pop
mov
pop
push
adc
mov
and
pop
jl
divl
push
jo
add
sbb
adc
mov
xchg
mov
out
jmp
insb
repnz
lock
add
push
xlat
pusha
pop
xor
pop
pusha
je
daa
sbb
int3
in
and
out
push
adc
sbb
push
in
cmp
lods
sbb
lods
xchg
mov
repz
test
mov
imul
jno
sti
cmp
decl
test
inc
popf
daa
jbe
sti
imul
dec
cmp
stc
dec
add
pushf
adc
fs
shll
in
ja
repz
or
nop
fdivs
scas
dec
cwtl
add
inc
mov
add
sbb
add
call
leave
cmpsb
imul
fldenv
lods
inc
cmp
les
cmp
notl
adc
and
inc
jne
out
or
xchg
cmp
push
add
xchg
or
cmp
sub
or
add
cmpsb
xchg
push
out
popa
add
sub
mov
push
add
push
dec
push
nop
and
push
or
dec
rcll
cld
sahf
dec
adc
lcall
inc
cwtl
inc
fisttpll
xor
pusha
cmp
pop
xchg
cwtl
movsb
sbb
lods
xor
iret
pop
sbb
orb
hlt
enter
mov
push
call
add
movsl
add
pop
cwtl
pop
adc
rcrb
dec
xor
arpl
and
mov
mov
pop
fistpl
mov
mov
in
mov
ficomps
mov
add
fmull
pop
js
add
imul
or
pmuludq
cmp
push
daa
and
mov
in
push
adc
cld
add
sub
pop
adc
add
mov
pushf
mov
orl
mov
fistpll
mov
aaa
xor
inc
mov
add
jbe
pusha
imul
jbe
inc
in
or
stos
or
add
push
dec
int
add
add
or
and
add
pop
push
add
les
shlb
sbb
xchg
in
or
testb
stos
jne
iret
push
jnp
lods
iret
sarl
and
add
sbb
push
xor
or
or
sub
out
andps
ror
mov
ss
push
jo
movsb
or
or
push
movsl
or
push
das
fisubrs
popa
lods
cmp
or
xchg
fnsave
or
xchg
sbb
shrb
jg
call
sbb
ror
push
fdivs
add
sub
add
sbb
push
add
add
xor
adc
sub
faddp
mov
nop
lock
push
push
test
or
mov
test
fisubrl
nop
pop
push
sbb
adc
inc
jle
push
or
pusha
pop
push
pop
and
push
cwtl
bound
daa
pusha
xor
test
add
jmp
push
or
cmp
mov
pop
and
mov
in
push
fbstp
add
xor
push
imul
lea
jecxz
enter
or
leave
or
push
shr
or
loopne
or
adc
jo
jo
in
loope
test
add
or
or
add
or
cmp
fisttpl
adc
dec
test
fisubl
jo
pop
and
fisubrs
mov
out
icebp
dec
mov
xor
xor
inc
push
call
stc
inc
dec
dec
dec
dec
dec
dec
dec
dec
add
jg
test
push
pop
pop
pop
mov
dec
mov
aam
push
rcl
pop
movsl
xor
stos
aad
icebp
xchg
aad
test
clc
adc
fcoml
sbbb
inc
xchg
int
jmp
xor
fstl
jno
sbb
insb
imulb
pop
les
ja
sti
and
add
popa
movsb
sbb
sbbb
cmp
js
push
add
xor
shl
and
cli
fidivrl
push
xor
mov
sbb
push
orl
jbe
jge
mov
inc
ret
xor
sub
lock
jnp
push
gs
and
sub
repnz
mov
push
inc
jge
pop
pop
repz
shrl
xchg
dec
aas
or
sarb
stos
imul
popw
cli
push
sbb
jno
test
pop
inc
inc
cld
mov
inc
jb
daa
mov
lods
and
ret
inc
xchg
mov
sbb
cmp
imul
jge
ret
xor
rorl
inc
inc
inc
dec
pusha
inc
cmp
sub
xor
test
adc
loop
lahf
enter
orl
pop
shlb
jmp
movsb
mov
ss
and
inc
dec
push
in
sub
dec
sbb
xchg
xchg
je
test
push
hlt
jo
dec
and
fsubrl
roll
mov
inc
inc
unpckhps
xor
cmp
push
bswap
or
sbb
pop
xchg
mov
mov
ret
adc
inc
pop
adc
add
mov
mov
inc
iret
enter
mov
or
pop
dec
mov
andl
sbb
out
mov
jmp
mov
iret
pusha
inc
xor
dec
sub
mov
sub
inc
insb
add
nop
lods
mov
xchg
or
jmp
inc
arpl
push
add
or
loope
add
orb
dec
fwait
mov
loopne
loope
inc
xchg
xchg
add
mov
mov
and
and
dec
ret
jae
inc
pushf
dec
clc
adc
xchg
mov
mov
push
mov
imul
pushl
sbb
testl
mov
add
popa
test
add
and
xor
mov
hlt
mov
and
fcmovnbe
or
inc
js
insl
stc
jmp
or
push
cmpl
mov
adc
pop
jmp
jecxz
ja
fwait
inc
push
arpl
jbe
jne
insb
in
outsb
sub
lods
cmpsb
out
sbb
cmp
ja
jo
idivb
xchg
cmp
mov
jmp
aaa
jmp
out
mov
imul
lcall
std
adc
enter
jbe
ss
adc
movsl
outsl
and
in
cltd
inc
mov
jb
or
movsl
je
out
inc
testl
stc
push
mov
inc
pop
dec
daa
dec
xchg
fsts
shl
inc
dec
pop
xchg
mov
movb
clc
cmp
insl
sub
das
sbb
inc
imul
add
pop
push
daa
mov
xchg
lods
jbe
adc
push
jns
and
inc
arpl
cs
imul
movsb
mov
sbb
aad
fsubrs
mov
aas
cmp
fucomip
gs
xor
je
push
jo
addr16
inc
imul
inc
inc
xor
and
aad
jmp
pop
adc
xchg
jbe
cmp
inc
add
mov
aaa
and
mov
ds
cmp
sub
xor
mov
shlb
aaa
or
add
aas
mov
cmp
xchg
pcmpgtb
js
fdivrl
inc
fdivp
push
mov
mov
and
xor
and
mov
inc
add
cmp
ljmp
lret
pop
enter
inc
icebp
xor
js
clc
daa
jmp
jg
aas
lahf
mov
test
dec
pusha
and
sbb
loop
xlat
and
inc
push
jmp
int3
filds
cmp
push
mov
fsubl
cmpl
adc
sbb
sbb
je
jmp
movsl
cmc
adc
push
cld
mov
mov
leave
add
xchg
fistl
sub
sbb
cs
clc
push
repnz
dec
jecxz
mov
cmpb
adcl
call
rdmsr
xchg
or
loopne
clc
add
jmp
pop
pusha
sbb
fs
shlb
mov
or
or
mov
jnp
mov
dec
daa
sarb
jnp
or
addb
inc
sub
or
sbb
loop
aas
jno
jecxz
aam
aam
jns
cmpb
and
mov
in
dec
test
adc
in
imul
xor
mov
pop
xor
inc
cmp
push
cmp
int
push
leave
mov
or
incl
shll
dec
jmp
rorb
mov
ret
sbb
mov
pop
cmp
inc
repz
xlat
or
ffreep
je
ret
jmp
add
xchg
pop
or
push
or
dec
roll
xor
or
dec
sub
fdivl
cld
cmp
cmp
cmp
test
or
mov
jbe
adc
in
sbb
ret
push
or
push
in
jmp
inc
push
cmp
sbb
xchg
and
and
pop
cltd
sarb
pop
test
push
add
lea
sti
lods
inc
inc
mov
js
sub
and
orb
fistl
push
sti
dec
add
out
fs
daa
adc
adc
mov
sub
ret
outsb
icebp
dec
push
mov
and
imul
or
add
mov
shrb
pop
push
lods
testb
mov
mov
movsb
aad
icebp
and
icebp
jbe
xor
insb
mov
mov
sbb
mov
pop
mov
and
ret
dec
xchg
sbb
ret
push
push
adc
pop
push
je
push
or
jp
or
pop
inc
sbb
mov
adc
je
je
outsb
fnstcw
pop
and
ret
sub
sahf
push
scas
jae
loopne
stc
or
push
cmp
dec
push
inc
push
setbe
sub
es
call
cmpl
dec
cmp
jo
and
push
mov
pop
addr16
xor
inc
cmpsb
push
inc
mov
sbbl
fnstcw
mov
or
cmp
insl
aad
loop
mov
mov
jmp
xor
les
jbe
sbb
cmpsl
mov
es
mov
gs
or
push
lret
pop
aaa
or
rcr
add
push
repz
add
popw
jecxz
push
and
inc
adc
mov
aam
inc
rolb
ljmp
roll
and
test
nop
fs
cmp
mov
clc
jmp
inc
sbb
xchg
jecxz
pop
jmp
js
and
or
and
add
add
je
push
stos
and
sub
lahf
dec
or
xchg
hlt
hlt
ficoms
cmp
fidivrs
outsl
add
leave
lock
clc
aad
lret
addl
pusha
xor
pop
mov
roll
sbb
lcall
cmpb
sbb
js
stc
sti
insl
pusha
add
rorb
adc
cmpb
or
dec
jp
movsb
xchg
sbb
nop
je
pop
xor
sub
pop
add
jge
adc
rolb
or
mov
jmp
enter
adc
cwtl
out
and
mov
pop
xchg
mov
or
faddl
dec
and
xchg
shlb
icebp
scas
xchg
pop
add
dec
add
push
or
mov
xchg
jo
nop
jno
jle
fisubrl
mov
test
fadd
mov
or
adc
lea
add
fsubs
xor
mov
push
imulb
xchg
sbb
mov
sub
or
mov
xchg
rclb
ret
shlb
mov
stos
inc
cmpl
inc
iret
fisubrl
stos
daa
dec
cmp
pop
adc
or
sbb
enter
xlat
inc
iret
dec
pop
das
loopne
fs
inc
aas
push
loopne
das
std
test
inc
add
mov
cld
call
or
inc
int3
jmp
rolb
icebp
out
mov
adc
and
out
pusha
jnp
mov
cmp
test
loop
jo
aaa
push
xor
call
mov
xchg
mov
add
sub
adc
retw
cmc
mov
xor
mov
add
sub
mov
rcrb
xchg
sub
xor
push
shll
cld
jno
and
adc
sbb
decl
mov
xchg
mov
mov
mov
imul
addr16
sbb
sub
jo
lock
dec
leave
mov
pushf
adc
ret
dec
in
push
mov
or
push
cwtl
or
inc
cwtl
pop
push
xor
aaa
pop
push
int
ret
inc
adc
cmp
dec
sbb
cmpsl
popf
icebp
push
fsubrs
shrb
je
jmp
mov
addr16
and
mov
jl
clc
rcrb
push
xor
pop
lcall
jbe
jb
mov
mov
push
dec
or
sub
lea
ret
lds
inc
push
nop
aas
and
sub
ret
xor
sbb
or
pop
js
and
mov
lea
movsb
mov
dec
cmc
sub
loopne
push
lock
push
dec
add
shrl
push
movsb
cmp
sbb
mov
fdivrs
fdivs
pop
into
hlt
cmp
hlt
hlt
pop
lret
das
iret
hlt
sub
inc
add
rep
roll
inc
or
imul
cmpsl
in
dec
clc
or
pop
jns
jb
aad
inc
jne
sbb
andl
xor
leave
lock
rorb
and
or
or
out
sahf
sbb
ds
pop
filds
add
push
push
add
sbbb
mov
lea
or
add
adc
test
repz
jo
add
jge
aaa
shll
arpl
push
addl
xor
jmp
push
sbb
fmuls
imul
xor
mov
nop
xchg
inc
cs
data16
fwait
loopne
ret
call
xchg
fidivrs
push
or
or
adc
ds
pushf
fwait
sbb
add
or
pusha
leave
xor
arpl
dec
enter
and
or
mov
xlat
xchg
pushf
or
add
add
sub
ss
enter
mov
push
adc
jmp
lock
xor
repz
inc
add
test
adc
pop
cli
loope
pop
pop
pusha
adc
lock
jb
call
bound
ret
out
es
and
push
lock
cld
in
rcrl
inc
push
pavgb
wrmsr
jmp
adc
adc
daa
call
repnz
xor
fadds
mov
clc
xor
cltd
mov
aad
mov
lods
clc
sub
mov
adc
xor
int3
xor
pop
and
and
dec
lock
clc
leave
or
adc
test
cmpsb
dec
push
adc
and
sbb
clc
arpl
rclb
and
push
pop
cltd
adc
test
pop
clc
sub
lock
inc
repnz
lock
call
test
enter
leave
adc
inc
add
into
and
cmp
pop
push
out
inc
mov
pop
flds
xor
dec
loopne
and
dec
or
sub
pop
gs
icebp
cmp
or
push
inc
stos
add
loop
rcr
add
mov
in
fimull
mov
shll
ficompl
and
ret
cmp
push
push
push
xchg
xchg
rolb
push
sbb
adc
pop
sbb
stos
mov
aaa
aas
mov
rcll
sub
lea
jnp
push
je
and
xchg
add
pop
pusha
add
in
push
sbbl
and
adc
inc
mov
shlb
push
add
push
cmp
fs
jp
repz
cmovo
ret
jmp
insl
hlt
pop
dec
dec
inc
push
or
pop
xchg
xorb
dec
test
gs
sbb
dec
aam
sub
mov
fdivl
in
in
nop
push
lret
push
in
pop
or
fldenv
and
sub
pop
hlt
arpl
shll
push
cmp
mov
cld
incl
clc
inc
or
xchg
lcall
push
mov
inc
push
movsb
cmp
mov
mov
add
jne
scas
dec
cmovno
cltd
pop
pop
mov
fisubl
int
loope
lcall
bound
add
mov
leave
adcb
jge
sbb
add
in
ja
mov
push
cmp
sahf
mov
mov
xor
loop
sbb
push
mov
fs
push
and
fiadds
xor
add
xchg
add
xchg
shl
dec
gs
xor
lock
and
sub
add
popa
mov
pop
mov
iret
add
insb
and
or
out
lods
jmp
dec
dec
lock
roll
mov
dec
mov
lds
ds
cmc
add
dec
xor
insl
and
lea
addb
mov
lea
adc
cmp
push
cltd
js
lcall
dec
inc
pusha
fs
jae
fcom
jg
pop
jp
aas
jge
pop
ret
arpl
pop
roll
imul
or
je
fmuls
loop
cltd
add
rcrl
addl
push
dec
arpl
dec
xchg
dec
pusha
mov
mov
mov
out
mov
fbld
pop
push
xchg
or
xor
add
shll
subb
add
inc
enter
cmp
popa
or
jno
out
lea
insb
dec
aas
je
shl
lods
pop
lcall
fmull
push
imul
dec
into
inc
mov
xorl
xorb
cld
add
push
ss
add
sbb
pusha
mov
iret
lds
adc
mov
inc
sub
jne
outsl
sbbb
xor
rcr
sbb
lea
pop
ss
and
fists
inc
popa
inc
jecxz
jnp
andb
xor
adc
test
out
mov
leave
sbb
xchg
sbb
sbb
xchg
fimuls
sub
or
cmp
cmp
xor
push
lret
xor
std
pushf
and
movsl
repnz
xchg
push
pop
movb
jo
fcmovnu
mov
imul
add
push
bound
pushw
mov
mov
je
call
push
cmpsb
aad
xor
aas
jbe
and
popa
fsubs
mov
popa
or
sarb
ret
mov
mov
test
mov
or
lods
pusha
sbb
sbb
daa
adc
aam
mov
push
cmp
pop
mov
pop
jmp
or
dec
fcmovbe
dec
lods
jmp
cmp
cmp
sahf
gs
dec
js
js
popa
loop
sub
mov
inc
and
mov
xchg
jne
xor
imul
sub
xchg
xchg
mov
adc
xchg
in
inc
inc
popf
push
arpl
movsl
mov
mov
jo
aam
push
xchg
rclb
rorb
push
mov
rorl
sbb
pop
and
mov
fistpl
push
jl
test
push
xor
xchg
push
in
mov
jo
push
xchg
mov
jl
pop
fdivs
adc
pop
adc
add
movsb
xor
sub
pop
jno
push
mov
iret
nop
pushf
push
rorl
inc
dec
es
xchg
loope
cmpsl
push
lcall
dec
mov
imul
inc
inc
dec
xchg
dec
push
cmc
add
cmpb
insb
addr16
xor
cmpsb
dec
dec
and
or
lea
in
lods
out
scas
out
nop
add
lock
loop
ret
iret
jmp
loope
int
xchg
aaa
enter
or
fnstcw
and
sbb
push
push
ss
xlat
pop
out
adcl
lret
fidivrs
push
into
pop
dec
idivl
cmp
test
dec
pop
aam
mov
sti
mov
nop
jne
xchg
pop
mov
lods
xchg
xor
lods
daa
aas
pop
dec
es
mov
sbb
sahf
daa
cmp
push
ja
jnp
cltd
jb
leave
xlat
push
pop
xchg
hlt
xor
inc
pop
enter
fbstp
movsl
aas
or
shrb
fiadds
je
fbld
pop
data16
pusha
xchg
outsb
mov
xor
leave
pushf
jae
lcall
push
mov
sub
adc
ret
pop
sub
sub
pop
and
xchg
jl
sbb
push
inc
xor
and
xor
xchg
or
inc
pusha
and
leave
inc
or
je
nop
and
lock
dec
fsubp
pop
adc
nop
loope
and
dec
ds
xchg
jns
mov
test
jno
inc
xor
or
jecxz
jmp
mov
loop
shr
push
push
pop
shl
jl
sbb
fs
js
fcmovb
imul
inc
divb
roll
or
mov
push
add
xchg
rclb
xchg
sub
lods
lods
mov
inc
lea
xor
xchg
pop
or
xchg
test
push
ret
es
xchg
add
jg
or
arpl
mov
adc
sbb
adc
bound
push
sub
mov
dec
pop
popf
xor
rcll
cmp
or
ffree
ljmp
clc
cli
push
add
push
mov
repnz
mov
mov
popa
and
jae
sahf
or
mov
loope
arpl
mov
pusha
insl
jne
add
mov
add
xchg
mov
cli
inc
push
lock
out
dec
and
add
insl
jg
rorl
lock
or
popf
lahf
or
cld
push
xchg
aaa
pushl
dec
inc
or
xchg
add
insb
add
mov
imul
xor
pop
mov
or
xor
cmpsl
sub
pop
or
lret
dec
les
filds
gs
xchg
int3
outsb
add
in
cld
call
ljmp
inc
out
out
adc
pop
pop
push
and
or
mov
imul
loopne
in
les
int3
scas
mov
hlt
sbb
or
clc
adc
rolb
enter
or
fiaddl
and
jns
pushl
rorb
insl
dec
gs
inc
nop
sarb
test
out
adc
adc
fildl
push
jne
dec
push
pop
dec
xor
loopne
fs
sbb
push
je
push
sbb
orb
xor
inc
js
pop
rorb
mov
pop
lret
arpl
xlat
iret
enter
cs
pop
or
cmp
inc
aas
cld
int3
push
push
test
or
lds
ja
add
dec
mov
ja
sbb
cmc
mov
push
push
rclb
aaa
cmp
add
js
fwait
cwtl
xor
sbb
dec
mov
or
sbb
aaa
test
outsb
ficomps
or
sbb
and
in
mov
gs
sub
xchg
adc
shrl
pop
mov
sub
scas
xor
jle
call
sub
orb
inc
sbb
adc
jmp
or
or
loopne
sub
aam
pop
iret
add
cltd
jo
mov
sbbl
and
shll
addr16
fdivr
xor
add
inc
les
aas
fistl
add
test
adc
or
test
or
aam
enter
mov
sub
pop
adc
and
stos
daa
test
or
imul
xor
xchg
add
add
sbb
popf
into
mov
cmp
sub
ret
pop
cmp
xchg
add
mov
inc
lods
rol
iret
xlat
lea
or
sbb
or
jae
call
es
lods
add
pop
xor
sub
jl
inc
test
mov
xchg
xchg
rcrl
and
inc
movb
sbbb
popf
fcmovb
jno
ret
inc
cmpl
cmpb
movb
sub
aad
pushf
out
inc
add
pop
jne
or
movsb
push
add
add
aaa
dec
cmpsl
fs
and
mov
jne
mov
cmpsl
and
nop
out
cmp
mov
into
cmp
xchg
pop
cmpl
call
das
testb
push
cmp
push
or
aam
lods
adc
add
xor
mov
cmp
and
pop
jo
inc
mov
jge
mov
or
xor
vaddsubpd
add
cmp
incb
dec
xor
mov
cmpsl
xor
inc
push
lret
jae
dec
mov
xor
fisttpl
fisttps
and
scas
inc
stc
dec
mov
sub
add
push
mov
ret
adcl
sub
xchg
adc
or
push
cltd
ret
and
notl
pop
sub
imul
sbb
sbbb
pusha
xchg
inc
xor
xor
lock
and
push
mov
cmp
or
fs
filds
or
lcall
pop
orl
inc
aaa
pop
mov
ljmp
add
pop
sub
push
xor
gs
inc
xor
outsl
or
call
loopne
xor
jmp
aad
imul
cld
jmp
int
fisubrs
add
js
int3
js
nop
cs
mov
pop
push
add
and
push
mov
jecxz
jg
add
inc
jle
mov
rorb
addr16
mov
adc
or
fdivl
mov
and
aas
mov
shrl
das
incl
cmp
pop
adc
xchg
scas
xor
adcl
xchg
and
test
pusha
addl
sub
addr16
xor
add
and
add
xchg
aam
mov
dec
xor
les
in
hlt
scas
sbb
nop
push
dec
add
or
sub
adc
std
fstps
lea
xor
subl
mov
imulb
lar
xchg
xor
adc
mov
sbb
push
ret
inc
cmp
mov
fstl
in
pop
bound
mov
lods
mov
insl
xchg
sub
lret
jmp
pop
push
ret
loop
or
push
xchg
xor
add
inc
nop
test
pop
int
jmp
add
sbb
add
xchg
mov
push
add
lea
or
pop
mov
shlb
and
cltd
mov
add
or
pop
cld
and
loop
push
cli
in
add
imul
adc
jge
outsb
jg
mov
adc
inc
testb
je
sbbb
and
outsl
pop
in
pop
lea
mov
pusha
xchg
repz
sbb
enter
imul
pop
enter
inc
cmp
repz
lcall
lods
xchg
test
mov
mov
dec
sti
repz
add
stos
or
popa
pop
rcl
add
inc
xor
ja
pop
push
lods
or
orl
and
fistl
fcmovne
inc
jecxz
push
lcall
push
mov
push
call
sbb
xor
cmp
mov
ret
xor
pop
shl
in
sbb
lcall
pop
les
ret
mov
fdiv
fs
cmp
sbbl
out
cmp
movsl
fdivl
lea
hlt
adc
xor
nop
xchg
dec
shr
xchg
push
shlb
cmp
and
jg
je
popa
xor
std
loope
push
lahf
push
add
pop
add
in
inc
add
or
jmp
pop
clc
jb
pop
out
aaa
sbb
int3
push
mov
mov
test
lcall
add
push
sbb
fmuls
mov
insb
dec
cmp
fucomi
cmp
cmp
fimuls
lea
pop
mov
sarb
lcall
sub
test
test
dec
cmp
xor
dec
sbb
or
mov
jb
sbbl
xchg
rorl
sbb
sub
das
push
in
add
cmpsb
testl
mov
inc
or
sbb
adc
mov
mov
js
sbb
ja
cmpb
inc
push
into
inc
shr
addr16
test
int3
std
or
xchg
cmp
dec
popa
mov
addr16
test
sbb
sub
cmp
xchg
pop
cmpsl
adc
cs
cmp
stos
loope
dec
ds
nop
iret
xor
enter
inc
js
xchg
sbb
jno
fiadds
push
push
cmp
push
xorl
and
pop
push
or
in
sahf
jne
ret
sbb
mov
test
adc
xor
push
pop
cmp
xchg
push
popa
gs
add
lea
repnz
xchg
call
imul
push
and
inc
sbb
jp
addb
inc
das
dec
jecxz
dec
inc
ljmp
imul
add
hlt
cwtl
movsl
ret
jle
mov
and
pop
pop
pop
fisubl
loop
xor
sub
add
out
add
push
mov
jb
lret
lock
pop
pop
das
cmpsb
call
test
jp
in
jb
lock
fisttps
or
sbb
xorl
ja
adc
dec
rclb
arpl
clc
push
mov
adc
add
fs
cli
mov
inc
lahf
add
sarb
hlt
inc
fldpi
cs
out
push
fcmovb
scas
rolb
pusha
pop
cmpb
jl
adc
rdtsc
call
dec
sbb
or
adc
insl
mov
repnz
adc
add
jbe
fwait
jmp
and
mov
or
test
dec
orl
into
sbb
adc
ret
test
in
aaa
in
sub
stc
push
sub
xorb
add
push
lret
mov
ret
popf
lods
data16
aam
mov
pusha
inc
dec
push
sbb
and
add
push
add
push
aam
cmp
nop
call
jno
lcall
jne
dec
cmp
movb
lcall
inc
adc
inc
push
push
aaa
sbb
and
adc
jne
and
mov
inc
mov
lds
outsb
pop
mov
add
add
push
cli
cmp
mov
cltd
std
xor
cmc
ret
aas
cmp
mov
and
cmp
mov
jp
pop
fldcw
push
jle
adc
mov
filds
xchg
pop
adc
sbb
nop
mov
sbb
rcrl
or
arpl
or
rcrb
lret
adc
and
cmpsl
xchg
jo
fmuls
jne
cmp
inc
outsl
adc
xchg
dec
push
push
xor
or
pop
stos
or
inc
push
and
popa
roll
push
pop
and
add
nop
or
xchg
out
syscall
adc
or
in
vmaxps
sbb
inc
inc
jg
loope
sub
test
sub
dec
or
sub
add
je
and
pop
ja
pop
add
fs
or
sub
xchg
es
insb
movsb
add
dec
and
and
cs
jae
repz
mov
shrl
imul
inc
push
ret
dec
test
add
dec
push
jg
add
lea
push
xchg
or
sbb
rcrl
cli
lcall
leave
jp
add
lea
xor
cli
orb
dec
mov
ret
dec
les
and
sub
mov
dec
push
add
addl
mov
sub
enter
inc
or
adc
call
xor
jne
or
sub
jge
or
out
stos
js
push
outsl
mov
push
pop
mov
xor
or
pop
mov
or
clc
mov
ficoms
enter
insb
sub
lock
add
sbb
inc
or
add
and
in
jg
jae
pushf
in
fmull
mov
inc
adc
jbe
inc
jecxz
adc
push
test
pop
mov
mov
push
lret
cmp
lods
dec
sub
nop
mov
push
lea
fwait
or
pusha
pushf
inc
sbb
pop
mov
sbb
adc
inc
fimuls
andb
adc
adc
fadds
nop
sub
je
fdivr
lret
sbb
and
push
in
fidivrl
fiaddl
xchg
cmp
dec
test
pop
fwait
ja
push
in
xchg
xchg
and
fmuls
cmp
dec
inc
inc
cltd
sbb
cmp
mov
adc
sbb
popa
cmp
cmc
push
dec
mov
mov
pop
jmp
push
vorps
cmp
fsubrs
mov
mov
sti
mov
pop
xchg
xchg
mov
add
or
shrb
mov
es
push
cwtl
cmp
popf
add
push
rolb
aaa
sub
mov
pusha
add
add
iret
add
pop
jle
jns
pop
xor
fwait
mov
adc
cmp
or
insb
sub
inc
int
add
aam
push
daa
fistpl
adc
cmpsb
not
shrl
and
lea
push
push
je
jo
pop
test
push
ret
cmpsb
addl
xchg
mov
sub
xor
adc
mov
jmp
test
jmp
fldt
adc
ss
xchg
fisubrl
popf
nop
sub
xchg
xor
imul
lods
push
pop
adc
cmp
dec
xchg
mov
mov
jb
loope
sahf
movsb
fsub
lods
bound
add
pusha
sbb
pop
inc
xor
adc
push
jp
gs
inc
insb
pop
cmc
jmp
stos
pusha
fwait
sub
fdiv
out
notb
xchg
sub
js
movzwl
push
imul
enter
dec
insb
xchg
and
push
stos
add
bound
stc
mov
clc
and
adc
inc
cmp
and
out
mov
fucom
outsl
je
dec
mov
call
loope
add
xor
adc
and
pop
testb
mov
or
xor
sbb
push
jbe
imul
lods
adc
or
jmp
and
sbb
dec
add
sbb
aad
jno
bound
jo
sbb
dec
daa
lock
aad
and
push
mov
or
es
je
rclb
ss
xor
sub
sbb
rcl
ud1
adc
sub
fldenv
jle
mov
sbb
ljmp
test
test
mov
rcl
loopne
inc
cmp
jl
mov
xor
and
ljmp
jl
inc
sbb
imul
jge
mov
push
mov
mov
cmpsb
or
ret
sbb
xor
orl
js
gs
push
jge
int
insl
adc
int
pop
mov
xchg
in
pop
in
pop
pop
loopne
pop
fmull
insb
dec
call
aam
rcrb
aam
int3
nop
pusha
enter
pop
shrl
and
sahf
in
mov
dec
test
push
cmp
mov
push
lods
jle
test
push
movsb
stc
sub
cmpsb
shlb
sbb
fdivrl
pop
cmpsb
mov
sub
pop
xchg
scas
fcmovu
and
mov
shrl
pop
pop
jnp
xor
mov
fs
mov
add
jg
mov
mov
and
pop
subl
mov
xchg
ret
add
xchg
test
fstl
push
fdivl
add
or
test
or
or
gs
insb
aaa
push
adc
or
loopne
loopne
sub
inc
test
add
dec
rolb
xchg
dec
xchg
pop
inc
insl
add
je
sbb
push
aas
inc
or
loopne
adc
pusha
mov
dec
outsl
mov
xor
push
pop
rolb
in
rcrb
cmp
and
rorb
inc
add
fld
rcl
out
sub
movsb
push
cmp
dec
je
or
ret
scas
pop
mov
decb
push
push
dec
and
or
fidivl
ret
push
iret
add
sbb
cltd
add
enter
lock
add
test
adc
mov
and
or
pop
push
movsb
jo
inc
push
dec
std
gs
lcall
ss
loop
insl
outsl
gs
mov
add
fidivl
mov
or
mov
cmp
xchg
inc
push
push
and
xchg
mov
push
imul
repz
ja
sbb
dec
push
mov
pop
pop
mov
je
cs
fbstp
jo
or
add
add
insl
fdivs
stc
push
cwtl
push
popa
js
pop
jnp
std
pop
add
pop
sbb
pop
fcoms
add
xlat
rcrb
inc
pop
test
dec
xlat
orb
clc
rol
adc
or
adc
sub
jno
dec
dec
push
pop
jbe
mov
mov
imul
pop
rcrl
mov
push
in
push
mov
mov
sub
inc
jp
inc
cmpb
ljmp
movsl
or
inc
adc
xor
add
or
cmc
inc
jp
dec
or
test
cwtl
ss
cmpsb
dec
xchg
idivb
outsb
aad
bound
cmp
mov
inc
outsb
or
test
adc
cmpsl
or
test
fcoml
int
inc
and
pop
mov
cmpxchg8b
shlb
jbe
dec
pop
and
prefetch
xor
sbb
test
sub
dec
mov
das
mov
popa
mov
pop
data16
cmpsl
sub
mov
andb
mov
cmp
data16
pop
add
mov
out
je
adc
or
adc
gs
add
test
pop
or
pop
stos
popa
jns
outsb
rcrl
sahf
or
scas
mov
aam
imul
outsb
jne
sbb
adc
and
xchg
push
adc
xlat
sub
lahf
push
or
add
mov
add
xchg
add
or
addr16
add
adc
ljmp
cbtw
adc
inc
and
push
insb
dec
add
lea
pusha
fneni(8087
imul
or
and
sub
imul
ss
mov
sbb
fdivrs
or
adc
cmp
push
icebp
stc
jns
adc
push
test
sub
push
outsb
pusha
popa
shrl
lahf
sub
push
adc
outsb
loopne
add
or
jecxz
loopne
pop
aas
inc
add
push
push
nop
divl
inc
je
mov
or
xchg
insb
or
push
or
push
iret
rorb
sbbl
dec
insb
fildl
xchg
adc
jno
xchg
fs
and
outsb
dec
fidivs
sbb
add
insb
or
popl
adcb
or
out
stos
mov
call
jbe
fsubrl
int3
and
loopne
add
adc
add
popa
negl
movsb
add
dec
pop
add
imul
loopne
add
and
out
sbb
pop
shlb
ds
clc
add
subl
mov
or
sbb
in
push
push
push
fs
pop
adc
daa
add
add
push
cmp
adc
pop
add
add
jmp
cmp
add
add
test
and
sub
add
sbb
push
push
or
or
mov
pop
mov
pop
dec
or
cmp
add
sbb
mov
out
mov
or
mov
pushl
pop
rolb
lods
ljmp
shl
pop
stos
add
sub
xchg
and
fimull
sbb
inc
push
test
mov
test
push
cld
movsb
xchg
fldt
add
inc
push
adc
ds
add
xor
cmpsb
pop
xor
pop
mov
dec
lcall
fwait
push
pushf
aas
mov
pop
in
push
lret
clc
push
lock
jno
xchg
sahf
cmpsb
cltd
out
lea
or
push
xor
imul
cmp
pop
ss
lcall
cmp
add
ss
insl
into
popf
mov
mov
mov
pusha
fisubs
paddb
rcrb
stc
add
jbe
pop
and
and
dec
das
jbe
dec
sub
pop
and
pop
ret
or
in
and
push
xlat
ret
xchg
popa
outsb
pop
sbb
xor
pop
push
adc
paddw
and
test
insl
sbb
dec
adc
ret
or
mov
and
mov
mov
sahf
push
sub
mov
inc
insb
imul
lods
lods
adc
popa
cmpsb
sbb
adc
add
mov
pop
mov
cmp
insb
or
xchg
dec
adc
xor
stc
adc
sub
sub
push
lods
or
push
add
repz
ret
sub
add
cwtl
xchg
add
xchg
adcl
add
arpl
cwtl
sub
insb
jne
sbb
mov
into
cmp
rcr
mov
mov
inc
xchg
or
inc
add
lret
aaa
and
xchg
aaa
dec
in
int
sbb
push
test
imul
call
and
pop
mov
xchg
in
push
rcrb
movsb
sbb
add
xchg
sbb
addl
pop
and
inc
loopne
enter
pop
and
push
push
jae
cmpsb
loop
inc
dec
fcoms
push
mov
push
and
mov
or
test
les
mov
push
and
add
andl
fucomi
sub
das
int3
xor
add
mov
push
rclb
push
add
and
push
sub
xchg
sub
add
mov
and
pop
mov
push
pop
inc
dec
clc
insb
or
mov
cwtl
fwait
sub
push
pop
sub
add
pop
jbe
ja
pop
enter
jl
sub
out
xchg
pop
cs
inc
pop
aad
insb
fs
or
lock
jecxz
lock
jg
inc
add
sub
fsts
sbb
mov
xor
js
jae
and
add
les
repz
mov
jb
jo
push
test
cmpsb
jecxz
pop
xor
inc
xor
sbb
mov
rorb
xor
push
cmp
into
addb
add
mov
out
push
sbb
mov
aaa
cmp
in
fisttps
or
addb
gs
push
orl
jmp
ficoms
jle
hlt
xor
push
popa
fbstp
adc
dec
jae
dec
movsb
sbb
adc
jle
jno
ljmp
dec
lcall
push
push
fldt
adc
fcmovb
ror
push
dec
cmp
shll
pop
xchg
mov
push
push
test
or
push
dec
or
adc
cmp
les
mov
mov
xchg
mov
inc
out
inc
aas
or
mov
loopne
enter
and
and
lods
dec
dec
inc
add
or
dec
adc
add
cli
rolb
and
ret
jb
inc
cwtl
fsubrs
in
add
xchg
test
dec
daa
sbb
inc
mov
jo
fiadds
cmc
je
ja
and
or
and
adc
mov
dec
and
mov
inc
xlat
loope
pop
mov
adc
dec
add
inc
cmp
daa
call
rcrb
pusha
push
or
leave
dec
call
or
add
or
dec
lcall
or
rcll
sub
orl
push
add
inc
push
sub
add
adc
push
add
lds
fldl
push
and
inc
fisttpll
imul
sub
inc
inc
sarb
inc
inc
push
jp
rcrl
ss
dec
lods
popf
and
dec
push
push
xor
mov
xor
mov
test
push
pop
pop
mov
jbe
jo
jne
sub
in
addl
or
xor
imul
insb
dec
lock
push
xchg
sub
pop
xor
popf
or
pop
shlb
xor
mov
fists
adc
test
sub
inc
loop
add
outsl
or
outsl
sar
and
in
mov
cmpsb
cld
jl
pusha
ss
push
prefetch
ss
or
out
pop
push
mov
rorb
sbb
ret
out
or
add
loopne
sub
mov
pop
mov
loopne
scas
sub
xlat
cmp
push
daa
test
push
mov
lock
movsl
add
andl
pusha
xchg
adc
cmp
or
pusha
in
push
pop
sbb
aam
jle
pop
add
xchg
in
or
nop
aam
scas
add
push
cmp
fwait
scas
cmp
inc
enter
mov
hlt
cwtl
and
mov
orl
pop
dec
pop
push
andps
or
cmp
xorb
nop
popw
and
stos
adc
jbe
pop
mov
out
mov
add
or
clc
push
loopne
push
xchg
or
fucomi
or
je
and
popa
call
pop
and
fs
in
or
push
hlt
or
je
dec
fs
xchg
add
pushf
adc
shr
sbb
lcall
adc
or
fldl
rorl
push
mov
xchg
shlb
inc
xchg
jge
pop
mov
lods
cmpsb
jae
hlt
mov
and
sarb
cmp
shl
fnstenv
sbbb
mov
les
mov
ss
pop
incb
outsb
test
loopne
add
or
fiadds
cmp
outsl
lcall
or
les
lret
aam
bound
or
ja
shll
je
mov
jecxz
lds
lds
or
cmp
mov
mov
push
adc
adc
lahf
pop
nop
or
cmp
cmp
loop
mov
sbb
push
push
push
or
sub
lock
in
mov
cmp
das
outsb
xchg
ljmp
inc
jmp
std
inc
mov
and
dec
sub
mov
mov
cmpsb
popf
test
xchg
inc
aas
pushf
and
repz
outsl
subb
cmp
pop
inc
sub
and
dec
addr16
imul
mov
xlat
xchg
lock
xor
sub
adc
add
and
dec
add
add
ss
and
adc
mov
pop
mov
inc
add
mov
fsubrs
movsb
testb
sbb
adc
add
add
and
enter
pop
add
or
mov
push
or
aam
mov
cmp
xchg
pop
push
aam
add
je
inc
or
or
daa
pop
dec
adc
mov
add
add
lods
cmpsb
jno
cmc
xor
dec
inc
subl
inc
and
hlt
add
xchg
dec
add
adc
mov
push
aas
std
pop
dec
or
push
lock
inc
or
adc
sbb
sbb
cmp
sub
sub
inc
adc
pop
inc
add
mov
inc
pop
pop
popl
hlt
xlat
lock
popa
sub
in
repnz
pop
cmp
adc
hlt
daa
adc
popa
ss
adc
or
lea
addr16
sbb
clc
int3
add
dec
xor
imul
add
mov
sub
test
inc
subb
xor
or
ds
fists
cmp
inc
sub
mov
inc
popa
and
jnp
xchg
subb
js
ficoms
add
cmc
xor
stc
or
add
mov
push
xlat
aaa
xor
lret
add
xchg
test
nop
es
enter
sbb
lds
push
xlat
add
stos
or
pop
add
push
mov
and
lret
cmpsl
enter
aam
pop
cmc
hlt
jmp
xchg
add
and
push
push
cmp
leave
jp
aam
jmp
sub
sbb
xor
lds
push
mov
mov
fsub
pop
mov
or
xlat
fadds
lds
lcall
or
mov
test
jnp
add
adc
movsl
addl
outsl
fmuls
xchg
daa
test
pop
fistps
xchg
orl
sti
pusha
adc
add
mov
adc
mov
sbb
mov
or
in
aas
push
sub
neg
jmp
arpl
push
mov
enter
and
cwtl
movsb
jg
lds
dec
rcll
and
xor
cltd
sub
dec
jg
push
mov
int3
rcrb
jmp
sbb
jp
xchg
mov
fstps
imul
sahf
insb
mov
sub
add
outsl
iret
sbb
ljmp
icebp
inc
xchg
add
cmp
js
mov
sub
pusha
in
in
xor
push
sahf
dec
and
ss
mov
cmpsb
adc
enter
pop
jae
sahf
adc
mov
pop
fcmovnb
inc
notl
add
cmp
push
outsb
or
mov
inc
or
dec
cmp
adc
or
lea
or
arpl
cmpsb
fwait
lods
adc
mov
ljmp
rclb
mov
sbb
and
mov
mov
mov
cmp
dec
xor
aad
in
aaa
and
lods
dec
leave
adc
fildl
inc
mov
in
mov
mov
or
je
ss
jmp
push
ss
sub
je
add
push
pushf
xorb
pop
ja
shll
popa
sbbb
or
sbb
fsubrs
adc
cltd
popa
sub
add
inc
mov
and
fisttpll
xor
xchg
mov
ss
dec
test
adc
jmp
sub
fs
push
pop
mov
mov
iret
je
jno
mov
mov
xor
rorl
adc
mov
shl
pop
fdivrs
push
and
add
xor
xchg
sbbb
pop
dec
jl
pushf
lahf
inc
adcb
rcrb
movb
xchg
add
xchg
adc
dec
push
pop
dec
inc
push
xor
inc
inc
int
sub
push
pop
out
pusha
adc
jo
lods
sub
pushf
push
fcmovb
push
daa
or
popa
or
dec
call
scas
add
or
add
add
int3
cs
fidivrl
das
xchg
mov
jg
cmp
js
enter
insl
pop
lods
cmpsb
hlt
sub
xchg
nop
inc
cs
inc
mov
vpaddd
cmp
popa
fucomp
xor
rcrb
pop
or
dec
cmp
cmp
ja
movsb
lret
sbb
push
xor
aas
xor
bound
decl
outsl
add
mov
das
mov
enter
xor
inc
arpl
push
xor
inc
clc
dec
jp
push
add
cmp
les
xchg
lds
and
insb
call
cld
inc
and
aam
adc
std
xor
aam
sbb
and
add
les
cmpl
sub
xor
and
mov
cmp
cmp
xor
push
sub
adc
enter
inc
jo
push
fisttpl
and
mov
sub
push
js
stos
icebp
lods
push
stos
sub
pop
xlat
and
push
ljmp
push
mov
clc
sbb
divb
cmp
mov
inc
loop
movsb
shl
inc
sti
out
idivl
xchg
or
sbb
ljmp
fwait
xchg
push
jns
lret
out
ds
negb
and
push
loope
pop
adc
add
xor
add
movsb
arpl
fsubs
pop
cmp
into
js
sarb
xor
mov
movsl
xor
push
inc
or
inc
inc
dec
adcl
scas
cmp
ret
sarb
sbb
je
sub
mov
jle
push
sub
add
and
and
sbb
movsb
ss
adc
je
cli
xor
cld
pop
inc
cmp
and
bound
sub
movsb
sub
mov
add
jmp
cmp
pop
mov
pop
adc
pop
fiadds
in
div
push
seto
mov
aaa
aaa
xchg
popf
add
cmc
arpl
cvttps2pi
add
pop
dec
aaa
inc
push
sbb
inc
jg
or
mov
lock
fstpl
push
mov
xorb
or
cltd
add
and
xchg
mov
and
dec
pop
testb
data16
sbb
ja
xchg
sub
sub
packuswb
ss
stos
outsl
loopne
mov
aam
or
fldcw
or
ja
pop
movsb
inc
xchg
or
xchg
lret
gs
test
in
or
inc
or
and
pop
add
loope
mov
repnz
sbb
sub
and
mov
jmp
dec
outsl
or
mov
dec
andl
push
xor
inc
dec
xchg
or
adc
aam
xchg
mov
or
andl
xor
rolb
jns
cmpsb
cmp
xchg
je
inc
add
aam
push
fscale
add
and
add
sbb
push
cmp
push
push
scas
int3
add
lea
push
mov
xchg
xorb
adc
sub
adc
rorb
sti
inc
movq
cmp
jge
sbb
out
sbb
arpl
push
add
mov
push
in
cmpsb
dec
mov
mov
sub
cs
mov
pusha
mov
test
ffree
xchg
mov
pop
mov
xchg
add
push
mov
popa
roll
adc
in
or
push
jp
outsl
sti
stos
inc
fstpl
shll
lret
add
mov
add
sub
lret
scas
jl
add
int3
popl
add
insb
mov
push
fwait
cmp
and
adc
add
pop
dec
je
cs
mov
cmp
shlb
mov
test
push
stc
push
cmpsl
sub
add
add
imul
fs
jne
sbb
mov
ret
and
cli
out
pop
jle
push
insl
jns
or
xor
cmove
adc
and
inc
or
fs
lods
ret
pop
xor
nop
je
cmp
adc
jns
push
insl
test
inc
hlt
out
adc
mov
sbb
fmuls
out
sbb
js
jbe
icebp
in
sub
sub
cmp
push
mov
pop
inc
push
jno
inc
inc
add
or
adc
sub
cmc
gs
cmp
or
xchg
pusha
add
ret
sub
adc
and
cmpsb
addr16
sbb
or
popf
adc
popf
rclb
sti
in
fcoms
add
mov
or
add
sbb
inc
push
or
add
fiadds
in
inc
inc
pop
test
orb
push
sub
mov
movsb
jne
arpl
xchg
movsb
sub
push
mov
xor
andb
push
popf
imul
fimull
fnstenv
and
inc
popa
aam
push
xchg
in
inc
fistps
add
pusha
mov
in
xchg
bound
xor
sbbl
je
push
mov
jg
sub
fistpll
add
pop
pop
js
push
jmp
outsl
push
xor
js
mov
mov
test
test
fcoms
or
mov
das
rcr
bound
mov
cs
mov
insl
mov
orb
mov
mov
repz
les
rorb
cmp
inc
mulb
int3
add
fisubs
mov
daa
mov
or
adc
arpl
stc
add
adc
jno
int
inc
add
mov
xchg
sbb
and
aam
mov
mov
stos
mov
sbbl
push
jl
mov
je
fdivrs
movsb
sbb
or
push
dec
pop
test
add
hlt
xor
outsb
jge
pop
test
or
jmp
push
sbb
push
xchg
xchg
scas
ret
movsl
dec
lcall
lcall
imul
push
jns
mov
and
inc
add
hlt
mov
sbb
out
or
nop
rcrl
push
jmp
adc
pop
ljmp
jne
test
clc
add
push
pop
pusha
adc
xchg
add
shl
dec
cmp
pop
inc
lods
sub
or
sbb
jmp
mov
mov
inc
and
push
repnz
outsb
jb
cmp
xchg
or
lea
adc
and
lar
pop
sbb
dec
cmp
adc
xlat
sbb
mov
pop
ja
dec
add
push
inc
jecxz
cmpl
lahf
sub
aaa
xchg
jnp
inc
push
cmpl
dec
jp
jle
jne
lods
outsl
inc
add
pop
js
add
mov
sbb
sbb
pop
ja
pop
sbb
jbe
jo
pop
push
xchg
sbb
sub
iret
and
aaa
rorl
xchg
xchg
test
sbb
dec
sbb
data16
xor
jp
leave
in
outsb
adc
mov
nop
movsl
mov
mov
xor
xchg
jmp
fwait
add
mov
mov
popw
jo
dec
or
les
adc
push
std
imul
inc
adcb
jo
pop
lods
adc
mov
sbb
dec
push
ret
mov
daa
dec
pop
dec
and
cmp
dec
mov
outsl
mov
orb
push
and
cmpsl
aaa
add
and
push
adc
push
inc
sbb
nop
or
pop
aam
and
aam
stos
xor
and
mov
add
adc
adc
cwtl
inc
push
cwtl
leave
mov
roll
sub
cmp
pop
xchg
xchg
pop
mov
divl
stc
push
mov
xor
mov
xchg
cmp
pop
cmp
mov
jne
das
inc
test
push
dec
pop
arpl
sub
sbb
xchg
pop
fs
enter
stos
add
jno
imul
xor
rcrl
xlat
das
mov
js
in
mov
and
mov
std
addr16
dec
cmpsb
and
mov
pop
in
mov
adc
ss
inc
mov
sub
jne
test
dec
lods
cmp
jecxz
imul
sbb
cmpb
shrb
pop
and
mov
push
jae
jo
cmpsl
and
pop
test
pop
mov
mov
xchg
jo
nop
jo
or
mov
dec
pop
sbb
outsb
sbb
ret
jmp
pop
dec
mov
dec
add
push
repz
xorl
and
shlb
outsl
pop
test
push
addl
call
int3
push
out
adcl
out
add
nop
add
ds
sbb
mov
mov
inc
push
push
aas
int3
enter
adc
sub
and
cmp
push
cmpl
sub
pop
rcl
outsl
or
or
in
dec
jnp
adc
add
push
mov
out
mov
sbb
mov
xor
mov
xchg
mov
push
sbb
push
ss
xor
sub
icebp
jge
and
pop
lods
sbb
xchg
add
jne
pusha
or
dec
xor
add
lods
jne
or
loop
jne
push
pusha
cwtl
or
ffree
mov
xchg
cli
push
push
rclb
and
mov
cmp
arpl
pushl
mov
add
xor
into
int3
es
ficoml
stos
sahf
adc
outsb
rolb
inc
sub
or
sbb
add
orl
xchg
cmc
adc
in
fmul
pop
insb
mov
adc
inc
or
xchg
mov
lock
jmp
andb
push
push
test
popa
shll
add
aam
cmp
popf
jecxz
xor
lock
or
or
arpl
arpl
dec
out
and
or
xor
sub
or
movl
and
arpl
das
subl
sub
sub
or
fistps
add
dec
sarb
and
in
ret
jb
or
stc
adc
push
dec
or
loop
cmp
sub
dec
je
add
iret
daa
cmpb
cmp
jbe
jp
mov
add
or
pop
orl
sub
ret
shrb
in
or
sbb
dec
fisttpll
cmpsb
pop
xchg
push
nop
mov
cmp
repnz
and
out
in
mov
inc
hlt
and
nop
inc
mov
psrad
dec
or
cmp
je
call
insl
push
dec
push
adc
cwtl
jbe
sbb
sbb
inc
sub
or
add
sub
mov
add
inc
ficoms
ret
adc
mov
jge
jnp
cmp
dec
xchg
popa
push
or
jp
lea
ret
ja
and
hlt
push
fs
clc
cmp
xchg
nop
cmp
hlt
in
imul
out
in
in
sub
adc
aas
xchg
aaa
sarb
push
or
xchg
test
inc
mov
jae
ds
nop
adc
mov
push
out
push
or
arpl
arpl
repnz
test
pop
adc
or
daa
aas
mov
push
lock
lret
or
dec
or
pop
push
ret
mov
mov
pop
adc
add
rolb
leave
jl
cwtl
cli
cmp
and
and
or
xchg
or
daa
or
outsb
or
adc
push
sub
add
jbe
mov
xchg
adc
mov
add
or
inc
fst
inc
ljmp
dec
test
sub
jecxz
mov
push
and
pop
adc
shll
call
jns
add
cs
movl
pop
cltd
mov
loope
xchg
cltd
lods
sub
rcl
mov
and
adc
shll
push
inc
mov
and
xor
test
lret
inc
jnp
enter
inc
xorb
dec
push
or
dec
mov
add
inc
xor
mov
or
jmp
push
pop
rclb
pop
enter
mov
pusha
sbb
jmp
outsb
push
xor
pop
shrb
imul
xchg
out
inc
or
sub
neg
pop
jo
mov
xor
sbb
adc
xchg
or
adc
xor
in
xchg
addb
fcoml
sub
mov
cmp
xor
jle
call
push
adc
addl
push
fbstp
and
insb
imul
daa
pusha
cmp
inc
loopne
pushf
cwtl
push
cmp
sahf
dec
mov
or
mov
daa
les
loopne
pop
cmp
add
popa
call
or
pop
push
add
add
das
insb
adc
sbb
insl
aaa
loopne
add
in
jne
xchg
pop
jp
push
push
add
add
call
dec
push
adc
inc
ss
mov
xchg
or
pop
movsb
pop
and
xor
or
mov
adc
in
add
je
adc
and
dec
or
sbb
push
adc
cli
mov
mov
popf
pop
loop
shl
xchg
and
cmp
jnp
pop
jo
adc
mov
adc
xor
add
xor
lods
popa
arpl
xor
mov
mov
arpl
mov
call
fisttps
add
hlt
pop
xchg
enter
and
push
rcrl
fsubrs
or
add
scas
jecxz
and
lods
leave
cmp
add
jno
clc
sbb
pushf
movl
mov
xchg
mov
inc
mov
nop
cmp
and
cli
jno
and
or
adc
pop
aaa
add
push
imul
sbb
adc
xchg
mov
loopne
xchg
push
shrl
int
add
sbb
test
faddl
sbb
and
fs
add
pop
adc
es
mov
clc
xchg
imul
sub
loopne
push
mov
imul
mov
xor
mov
pop
and
and
sti
add
loopne,pn
scas
push
jno
xor
pop
adc
pop
inc
inc
and
jo
lahf
push
lcall
fsubs
hlt
je
xor
mov
xor
idivb
nop
inc
icebp
pusha
xchg
sbb
jp
xchg
pop
pop
add
adcl
sbb
inc
stc
jne
aaa
mov
adc
daa
fbstp
iret
cmpb
lock
adc
enter
sub
and
and
dec
stc
dec
rcll
cmpsl
push
int3
and
inc
mov
mov
mov
fistps
aam
xor
push
sub
jne
bts
mov
xor
inc
push
mov
jo
xor
popa
loopne
imul
cmp
fdivs
mov
fsubl
les
cwtl
or
lock
mov
xchg
jne
bound
movsl
jmp
sub
cmp
stc
mov
inc
adc
mov
sbb
push
iret
xlat
ret
and
push
sbb
xor
xchg
mov
push
mov
pop
sub
ret
clc
je
fadds
cmpl
adc
pusha
jmp
int
sub
into
mov
xlat
dec
jmp
aaa
cs
pusha
mov
sahf
popf
imul
xchg
inc
fcomi
adc
sbb
sub
mov
sub
cmpsl
pop
push
dec
sub
jnp
jl
fsubl
or
pop
loope
mov
les
and
and
adc
sahf
adc
adc
push
ss
inc
sbb
mov
mov
cmp
mov
mov
dec
cs
add
and
sarl
or
sbbb
orb
mov
mov
jnp
add
icebp
push
addr16
mov
jo
daa
std
push
ja
cld
and
mov
aad
mov
sbb
pop
fildll
popa
add
mov
jmp
sub
mov
and
nopl
and
nop
mov
shrl
lods
sbb
pop
lret
dec
cli
sbb
shl
xor
mov
inc
add
and
orb
test
pop
jns
xor
ja
add
outsl
call
push
fwait
stos
cmp
push
cmp
cltd
xor
xchg
pusha
mov
sbb
movsl
mov
adc
orl
jb
fcomps
cmp
sub
outsb
sbb
jecxz
mov
inc
cmp
mov
sub
mov
add
jp
mov
push
jl
or
sub
idivb
rclb
xchg
mov
subb
arpl
call
push
pop
test
outsb
in
adc
cmp
sti
adc
inc
xor
imul
inc
jnp
das
sub
push
lea
test
lds
ret
xchg
or
push
popa
pop
sub
in
popf
and
inc
cli
add
movsb
mov
inc
lock
and
or
push
dec
rcl
add
sub
pushf
pushf
mov
mov
lods
adc
push
mov
sbb
sbb
and
xor
ret
inc
push
add
cmp
cmp
adc
test
jne
cmpl
add
sbb
addb
mov
xchg
xor
rolb
outsb
mov
iret
cmp
mov
movsl
sub
mov
sub
imul
mov
xor
cmp
movups
xchg
xchg
cmp
mov
dec
add
cmp
jne
xor
pop
sub
push
pop
outsl
jo
add
adc
push
rcrb
push
ja
jmp
sbb
xchg
int
mulb
add
jne
dec
clc
pushf
sub
sbb
dec
fnstsw
dec
push
cli
mov
je
mov
xor
add
sbb
mov
add
pop
ficoms
rol
inc
and
fdivs
sub
add
add
xchg
pop
loope
xchg
test
icebp
inc
mov
add
lods
and
add
add
and
jo
add
and
adc
int3
and
jle
fisubrs
mov
add
push
or
add
mul
cs
sbb
jecxz
mov
add
sub
and
lahf
cmp
or
cmp
or
das
push
rolb
mov
repz
aas
push
loop
push
pop
pop
out
mov
push
mov
les
aaa
push
lods
jmp
ret
adc
xchg
call
push
mov
mov
add
push
dec
adc
push
inc
aad
js
cld
dec
fidivrl
call
jo
push
xor
push
push
or
mov
adc
dec
inc
dec
push
and
call
in
mov
rcrb
add
out
or
lret
mov
sbb
jne
lea
test
push
rcrb
lea
inc
out
or
std
in
dec
loopne
out
or
add
or
sbb
sub
inc
adc
es
es
sti
insl
sub
or
popa
jbe
mov
adc
lock
sub
filds
or
movsl
pop
incl
idiv
or
xchg
sbb
adc
out
push
lea
shll
cld
mov
mov
iret
je
adc
cmp
sub
lea
mov
push
pop
inc
and
clc
cmpl
jne
iret
or
cmp
pusha
es
mov
call
add
cli
ds
adc
mov
lock
and
jb
jne
adc
mov
or
nop
mov
mov
iret
or
roll
adc
add
or
daa
add
xlat
xlat
sbb
cltd
js
xor
sub
sub
fisttpll
adc
shrb
dec
mov
rcll
lods
sbb
pop
xchg
mov
incl
subb
cmp
pop
sbb
push
adc
fs
and
sub
aas
pop
sbb
sbb
xchg
dec
sub
gs
mov
or
xor
or
aam
arpl
iret
notl
add
jne
add
sbb
js
pushf
rolb
cmpsb
in
adc
adc
or
sub
and
daa
cmp
xchg
dec
add
cmp
mov
mov
adcl
and
sbb
adc
sbb
popa
push
jl
mov
lods
inc
daa
hlt
adc
jmp
dec
lret
add
das
inc
fwait
push
mov
addb
sbb
jne
pop
xchg
jbe
jle
mov
sbb
mov
or
lret
sub
jbe
mov
enter
jl
add
fsubrl
mov
mov
cmp
and
push
mov
test
or
and
int3
mov
push
and
sbb
mov
es
icebp
fiaddl
in
sub
mov
mov
lock
fsubl
popa
sub
or
xchg
adc
sub
outsw
sbb
aaa
cmpl
nop
les
mov
sbb
das
data16
nop
ljmp
jmp
lea
cmc
sbb
xor
push
and
pop
fisttpl
test
push
adc
jo
in
push
mov
or
in
dec
imul
dec
inc
cmpl
inc
inc
je
ja
jnp,pt
lea
mov
mul
mov
gs
scas
stc
rorb
mov
xchg
dec
shlb
cmc
and
dec
movb
adc
sub
add
add
inc
and
ficoms
mov
ds
js
mov
cmp
sbb
xor
lock
push
xchg
push
mov
test
in
add
and
mov
leave
orb
movsb
add
leave
cmpsl
scas
mov
ja
cmp
adc
add
sti
mov
dec
pop
test
and
repnz
cmp
or
adcb
inc
sti
sub
pop
pop
xchg
cmc
lods
dec
bound
movsl
lahf
lds
in
test
popf
push
daa
lods
pop
add
push
and
scas
or
inc
pop
add
sahf
dec
mov
mov
inc
inc
dec
cmp
lods
push
fdiv
fcomip
pop
push
xchg
xchg
inc
lds
or
mov
pop
mov
arpl
gs
mov
push
cmp
push
mov
lock
push
outsb
pop
shlb
aas
or
or
push
dec
ljmp
adc
sub
arpl
push
adcb
and
popf
xchg
mov
inc
hlt
in
or
dec
popl
shll
das
adc
shll
les
bound
mov
sbb
adc
movl
mov
mov
addr16
rcrl
rclb
mov
and
fisubrl
and
int3
test
and
push
add
jge
add
inc
js
cld
lds
icebp
es
call
push
push
sbb
inc
leave
sbb
add
pusha
add
cmp
arpl
xor
pop
pop
aaa
sub
loope
xor
jmp
jp
nop
mov
nop
mov
add
lds
testl
jne
fwait
add
xor
cmp
push
rcrl
inc
inc
in
imull
pusha
adc
clc
scas
popf
rclb
dec
stos
arpl
or
dec
xchg
or
mov
rclb
sbb
xchg
js
and
shlb
dec
inc
add
je
xor
lods
adc
fisttps
mov
inc
xchg
mov
pop
repz
int3
pop
pop
addr16
mov
fidivs
cmp
inc
mov
push
jae
movsl
push
cld
mov
or
fiaddl
xchg
ds
xchg
pop
fs
xor
call
scas
insl
pop
push
data16
sub
add
lds
inc
add
inc
movsl
and
or
xlat
inc
sti
mov
push
xor
push
cs
daa
mov
rcrb
adc
xor
sahf
xchg
push
jg
mov
and
orb
scas
push
icebp
es
jp
mov
imul
xor
sbb
pop
loopne
xor
dec
in
jo
add
inc
pop
xchg
mov
call
push
or
push
push
adc
and
inc
jae
push
adc
cltd
or
lods
pop
fbstp
bound
push
push
daa
inc
test
fdivl
loopne
cmpb
mov
imul
adc
movl
jno
clc
inc
fidivrl
icebp
popw
adc
add
push
pop
or
outsb
mov
jmp
pop
mov
loop
iret
movb
inc
pop
jb
add
xor
jmp
nop
cltd
push
mov
into
call
add
bound
or
add
mov
cmp
arpl
in
xor
inc
aaa
add
add
in
rorl
mov
fdivrs
pop
mov
or
test
pop
ret
clc
daa
insb
cmp
sbb
neg
pusha
leave
cmpsb
hlt
xor
push
arpl
scas
inc
pop
insl
add
out
add
rcll
pop
mov
out
or
mov
add
outsb
lret
cli
jns
lods
push
add
xchg
cmp
adc
xchg
xchg
divl
sbb
mov
jnp
xchg
add
mov
rol
jge
sbb
enter
mov
fs
dec
mov
xor
and
movsb
fwait
add
pop
jne
loope
fistpl
xor
and
loopne
cs
idivl
rcrb
push
out
sub
fcompl
xchg
fstl
dec
push
mov
cmp
pop
testb
inc
jl
cmp
add
mov
xor
jmp
jne
in
mov
adc
or
sub
test
sub
add
push
xchg
lock
pushaw
xchg
imul
je
and
pop
lock
sub
inc
dec
dec
out
dec
pop
mov
inc
je
dec
in
adc
xor
sbb
adc
mov
add
or
fiadds
push
pop
and
sbb
xchg
mov
or
jle
cmp
pop
pcmpeqw
add
sub
xchg
fwait
xor
sub
mov
ret
and
subl
cmpb
dec
pushf
xchg
xor
add
add
adc
xchg
int3
push
and
xlat
and
cmp
or
pop
aas
loopne
lock
lea
gs
and
dec
dec
clc
push
orl
mov
push
mov
lcall
test
xchg
mov
shrb
jl
inc
xchg
xchg
aam
mov
jbe
jp
sub
xor
addr16
jl
sub
cmpsl
lret
add
ret
adc
popf
or
mov
jnp
movsl
push
cli
daa
mov
sub
test
rorl
jbe
xchg
imul
push
inc
cmp
jge
leave
add
xchg
clc
sub
mov
adc
sar
insl
call
shlb
sbb
pop
std
aam
imul
loope
sbb
mov
dec
cmovp
ja
add
ret
xchg
adc
dec
mov
mov
or
es
and
push
mov
subb
jae
pop
and
adc
jne
pop
inc
iret
rcrb
sub
sar
xchg
rorl
mov
jnp
sbb
enter
insb
mov
aam
xor
imul
sbb
sub
pop
fs
mov
or
inc
cmp
dec
push
test
xchg
test
popa
shlb
pop
ljmp
shlb
cmp
sti
jo
movsb
int
push
jmp
jne
sub
mov
shl
loopne
mov
aam
pop
dec
add
or
pop
cmp
add
mov
in
nop
cmp
inc
popf
mov
or
pop
dec
and
adc
mov
ss
enter
sbb
sarb
push
dec
jmp
arpl
xchg
fcomps
mov
and
push
ja
sub
inc
dec
lods
add
adc
sbb
and
push
and
xchg
scas
jmp
and
insb
stos
push
or
or
or
xchg
jle
loope
pop
push
adc
xchg
push
lods
adc
and
jbe
rorl
and
pop
sub
and
and
adc
push
vphaddbw
xchg
loopne
pop
aam
dec
add
or
std
lock
dec
adc
or
dec
push
orl
mov
add
cmpl
inc
mov
mov
shlb
mov
jle
jmp
mov
pop
daa
fs
pusha
and
fld
inc
and
nop
ja
ljmp
cltd
adc
push
add
push
sub
mov
movsb
aaa
xchg
in
add
or
xchg
or
orl
or
test
jmp
jbe
cmpb
stc
jmp
or
pop
aam
mov
jp
adc
int
pop
xorl
dec
fisubrl
inc
jmp
add
or
jge
lea
lods
rolb
fiadds
sub
sbb
or
sbb
arpl
xchg
add
add
sub
lcall
lret
cwtl
and
rcr
inc
add
repnz
cwtl
xchg
push
sbb
scas
adc
loop
mov
jg
por
cmp
or
and
adc
xor
cmp
aas
sbb
aam
push
adc
pop
add
insl
and
mov
cmpsb
arpl
xor
pop
sub
daa
pop
xchg
cmp
and
enter
loopne
cmpsl
inc
push
inc
cltd
xor
nop
mov
aas
shlb
je
or
jg
and
loopne
sbb
add
leave
loopne
pop
xchg
int
je
mov
sbb
push
ret
xor
stos
test
daa
cltd
push
fbld
sub
pop
mov
xor
jge
js
lcall
pop
stos
pop
xor
test
fwait
nop
mov
pop
sbb
out
add
sbb
sub
add
xchg
push
dec
sbb
int3
adc
inc
mov
test
jns
inc
aam
adcb
rol
nop
lea
test
add
add
fsubs
add
cwtl
pusha
imul
test
ret
ret
push
aaa
jl
push
out
xor
rcrb
popa
loop
sub
pop
jl
sbb
adc
mov
lods
test
mov
pop
sbb
or
sbb
shrl
xchg
cmp
lock
add
movl
je
cs
aam
shll
loop
xchg
jbe
dec
loope
outsl
mov
pop
enter
inc
dec
sbb
add
subb
push
push
ljmp
iret
add
mov
faddl
push
fdivs
pop
dec
lea
lcall
sub
dec
and
sub
dec
pop
xlat
sub
insb
inc
shl
lods
insl
shlb
sarb
mov
mov
movups
sub
cmp
loopne
in
push
dec
stos
pusha
dec
repz
pop
orb
dec
rolb
xor
push
mov
jecxz
shll
mov
sub
addr16
mov
push
and
pusha
cs
ds
dec
shll
sbb
xor
nop
and
xchg
mov
add
nop
sub
xchg
mov
add
cmp
and
cmp
popf
cmp
stos
adcb
add
movl
xchg
rorb
sahf
ret
push
cmp
cmc
fwait
xchg
sarb
sub
imul
push
stos
adcb
out
shrb
mov
or
ss
jge
xchg
or
daa
adc
das
add
sbb
popa
pop
dec
sbb
push
lods
mov
dec
xlat
mov
push
sbb
test
xor
cli
or
cmpsl
call
cmp
inc
mov
dec
dec
lods
mov
dec
sub
mov
inc
bound
or
xchg
sar
in
push
or
insl
popf
add
pop
sbb
or
pop
or
push
mov
jmp
cmp
and
sub
out
loopne
dec
test
push
jl
mov
cmp
xchg
push
in
ret
daa
lea
mov
nop
in
mov
dec
call
inc
bound
aas
je
fwait
pop
adc
add
daa
and
push
test
push
addl
outsb
sub
push
ret
ljmp
rcll
mov
sbb
popa
jge
out
add
and
lock
push
mov
sbb
jecxz
push
mov
inc
mov
jne
add
addr16
push
push
aaa
cmpsl
daa
movsb
dec
and
call
lods
arpl
or
push
dec
cmp
mov
inc
std
es
ss
mov
fwait
sbb
add
xor
andb
rcr
xchg
mov
inc
ret
lods
jne
out
adc
add
mov
adc
rcrl
int3
iret
fldl
and
into
popl
inc
mov
jo
inc
xor
jecxz
popa
pop
push
fs
push
into
inc
arpl
sbb
jns
dec
jge
je
mov
loope
pop
fnstcw
inc
xor
fsubp
pop
mov
jo
sbb
aas
push
test
xor
fildll
test
and
mov
pop
add
lahf
inc
adc
add
mov
push
test
dec
sbb
shlb
fwait
inc
push
adc
sbb
mov
sbb
stos
mov
dec
sbb
sub
loop
sbb
sbb
sub
mov
mov
mov
push
dec
push
add
xchg
sbb
cld
cld
sbb
xor
cld
sbb
ljmp
inc
cmp
cmp
mov
pushf
inc
sbb
sbb
lds
andl
addl
ret
dec
jmp
mov
add
push
pop
push
ret
das
cmp
sti
push
imul
sbb
rcrb
and
out
sti
push
fwait
pop
test
jg
pop
push
add
adc
or
mov
add
and
jp
jecxz
mov
xor
sub
test
pop
jno
les
or
push
sub
push
stc
inc
shlb
xorb
sub
mov
les
lahf
add
insl
popa
aaa
add
jns
mov
mov
pop
ljmp
adc
mov
xor
and
inc
shlb
cmpl
das
push
lret
and
leave
and
cwtl
adc
je
jne
or
arpl
ret
vmovntdq
inc
jmp
add
ret
pop
sbb
dec
insl
rclb
mov
outsl
pop
pop
arpl
xor
jne
push
push
xchg
imul
pop
test
push
imul
aaa
push
mov
sarb
or
lcall
arpl
sub
jo
hlt
push
iret
mov
inc
fisubrs
notb
rorb
mov
mov
fnstenv
pusha
les
and
ret
in
icebp
sub
fwait
inc
xor
ja
outsb
pop
push
leave
cs
xchg
inc
and
pop
push
xchg
or
pusha
mov
adc
test
out
jl
or
jle
xor
cmp
adc
fistpl
cmp
and
pushl
out
push
and
or
cld
xor
dec
xchg
jle
xchg
clc
or
jmp
into
dec
push
mov
xchg
xchg
addl
pop
shll
gs
sub
add
adc
jbe
mov
jle
push
push
sbb
add
repz
in
mov
push
mov
sahf
dec
or
push
test
dec
mov
mov
push
pop
test
add
xor
mov
dec
popf
mov
std
xchg
adc
add
sub
xor
xchg
ljmp
dec
pop
inc
xor
add
pop
sbb
xor
pop
lock
jg
js
cmp
push
std
and
mov
mov
pop
or
push
dec
add
testb
and
repz
push
mov
pop
scas
push
sbb
dec
dec
xchg
sub
xor
fadds
and
inc
sti
cmp
jne
cmp
lea
inc
jmp
inc
sbb
or
cmp
push
jne
out
jno
mov
inc
call
cwtl
mov
xchg
nop
incl
dec
lock
negb
mov
mov
xor
mov
mov
adcl
insl
ret
mov
sub
in
and
cmp
gs
adc
aaa
push
test
imul
inc
lods
inc
int
and
sub
test
aas
cwtl
loopne
sbb
sub
add
cmp
pop
jne
cmpl
mov
mov
push
pop
lahf
inc
push
in
ss
push
xor
iret
les
cmp
jns
pop
decl
inc
add
test
ljmp
and
pusha
mov
test
add
shll
mov
pushw
pop
push
sbb
or
adc
test
mov
inc
lcall
adc
inc
and
jo
or
fidivrl
push
sub
adc
stos
or
dec
pop
pop
aaa
jne
mov
jne
in
jnp
mov
sbb
fwait
dec
mov
jnp
xchg
mov
adc
or
jmp
pop
push
out
dec
fmuls
ret
mov
dec
or
push
add
inc
out
mov
xchg
sbb
inc
bound
add
lahf
cli
jmp
lds
scas
push
adc
test
outsl
roll
outsb
dec
xor
nop
aaa
in
push
popf
xorb
cmpsl
mov
fwait
mov
and
test
lods
mov
mov
pop
dec
xor
push
fs
enter
rclb
or
icebp
or
mov
inc
loop
es
pop
dec
ret
adc
aam
js
jmp
icebp
testb
in
mov
and
popa
lcall
sbb
testl
nop
test
das
push
lcall
xor
pop
enter
pop
xchg
mov
cmpsl
fs
into
add
loope
cmpsl
and
xor
and
pusha
jnp
fbstp
das
pop
inc
inc
test
leave
add
inc
imulb
jl
dec
lock
pushf
xor
ja
mov
or
imul
clc
hlt
push
popa
mov
popa
daa
push
add
adc
int
cmpsl
sbb
cs
cmp
sbb
lock
inc
pop
xchg
push
cmp
icebp
insl
repz
pop
je
jmp
sbb
xor
push
and
jge
jo
scas
andb
dec
sbb
jge
push
mov
fs
sub
sub
in
xchg
mov
je
ds
dec
loopne
and
scas
lcall
movsb
mov
shlb
sbb
imul
sub
and
inc
and
pop
add
jmp
sub
inc
sub
pop
add
sbb
rorb
inc
mov
add
insl
add
hlt
push
hlt
in
mov
repnz
pop
cmp
dec
inc
pushf
lods
dec
xlat
ret
fnstcw
cmp
rclb
and
jo
and
push
inc
iret
mov
xchg
loope
nop
inc
mov
pop
and
inc
popa
mov
pop
push
pop
rclb
in
es
pop
hlt
je
ret
cltd
clc
sbb
pop
push
in
sbb
adc
lret
ficompl
mov
call
adcb
and
imull
outsb
nop
imul
filds
add
mov
push
rcrl
cltd
xor
xchg
popa
push
rcl
cltd
sbb
das
pop
lea
lods
push
mov
xor
jno
cmpsb
push
lock
sub
add
adc
mov
inc
fs
push
mov
push
mov
adc
add
pop
xchg
inc
add
pop
inc
add
imul
flds
jecxz
xlat
inc
sbb
pcmpeqd
sbb
mov
mov
in
or
out
dec
cmp
out
xchg
xchg
add
es
cli
add
and
adc
add
repz
xor
xchg
push
or
fisubrs
sbb
add
inc
jl
cltd
mov
add
rorb
sbb
push
and
and
mov
adc
or
mov
mov
sub
adc
scas
mov
adc
jmp
xchg
sbb
stos
shlb
push
push
mov
adc
pop
push
add
outsb
enter
mov
clc
jnp
cmp
mov
add
sub
adc
push
adc
scas
and
pop
or
sbb
daa
push
push
rorl
xchg
cltd
mov
jne
push
out
mov
movsl
bound
xor
jbe
enter
repnz
lds
orb
cmp
adc
push
aam
or
aaa
out
xor
push
es
je
imull
mov
dec
shll
or
push
lock
dec
mov
dec
xchg
jno
adc
ret
mov
sbb
adc
ret
fsubrs
fsubl
push
popa
pushf
lea
enter
mov
pusha
loopne
adc
cmp
imul
xor
dec
mov
push
ret
or
xchg
add
jbe
mov
movsl
or
adc
mulb
jo
js
outsb
and
addr16
scas
cwtl
or
mov
jmp
push
pop
into
outsb
in
repnz
xor
xor
scas
frstor
mov
add
inc
and
mov
and
inc
pop
sbb
repnz
test
mov
int3
out
jbe
je
or
popf
xchg
add
rolb
mov
addl
shrb
cmpl
mov
mov
cmpsl
cmp
adc
or
xor
cmc
jmp
adc
or
mov
pop
insl
mov
lea
daa
cmp
arpl
pushf
add
mov
mov
pop
les
xchg
mov
adc
rcll
aas
inc
pop
enter
pushf
lcall
iret
test
adcl
dec
dec
dec
add
inc
mov
or
popa
dec
cmpb
rcrb
cmpb
insl
movsl
mov
pop
sub
outsb
mov
xchg
lods
enter
mov
push
ljmp
mov
xchg
xlat
lret
data16
push
sbb
push
push
daa
and
push
sbb
add
dec
mov
les
mov
popa
loope
inc
inc
and
xchg
adc
cmp
dec
or
test
adc
nop
lock
push
sub
loope
lock
sahf
aam
cmp
and
sbb
fmuls
sub
imul
mov
sub
xor
add
mov
bound
add
insb
repz
js
push
mov
mov
stos
gs
sbb
daa
add
test
nop
mov
cmpsl
int
shrl
lret
push
sub
pop
sbb
adc
lret
loopne
rcrb
je
inc
jmp
cmp
ss
cld
inc
pusha
das
bnd
arpl
push
imul
mov
test
inc
add
pop
add
aam
mov
repnz
and
and
in
cltd
inc
adc
negl
fs
sbb
fldt
push
insb
inc
js
xchg
js
pusha
or
add
iret
xchg
into
inc
or
cmpsb
fwait
pop
fsubs
lock
jnp
cltd
jne
xor
js
dec
adc
mov
int
push
jbe
sbb
inc
and
or
pop
pusha
add
enter
pop
ss
mov
leave
add
xchg
popa
sub
cmp
mov
iret
jle
dec
inc
xor
cltd
push
sbb
lret
pusha
adc
pop
pop
aad
dec
mov
add
jp
dec
cmp
mov
sbbb
and
push
inc
mov
jnp
mov
mov
jns
fs
ret
push
mov
or
inc
inc
ljmp
stos
clc
ret
std
loope
jo
comiss
je
sbb
push
xchg
jle
lea
jne
adcb
adc
xorb
and
sub
sub
mov
pop
xor
pop
cltd
add
sti
inc
mov
push
pmuludq
pop
push
mov
daa
mov
mov
test
pop
es
mov
xor
imul
add
pusha
movsl
andb
pop
adc
out
adc
xor
loopne
mov
sub
fadd
dec
mov
hlt
adc
imul
sbb
mov
mov
sub
mov
clc
mov
clc
cmp
push
push
loopne
and
dec
xor
mov
xor
call
mov
pop
jmp
mov
xchg
lods
fistps
fisubrl
mov
cmpsl
jmp
mov
mov
jg
xor
add
aam
adc
mov
test
pop
test
push
push
das
inc
push
inc
fsubp
std
sbb
call
lret
iret
jle
mov
sbb
stos
sub
pop
add
dec
push
imul
sbb
cmc
sub
pop
mov
pcmpeqd
add
and
cmp
cmp
mov
sub
adc
add
and
jl
mov
dec
icebp
add
and
push
lret
repnz
push
add
shll
or
or
dec
int
icebp
mov
dec
test
mov
adc
enter
pop
xor
popf
test
mov
cmp
das
xor
or
push
pusha
addr16
pop
jg
movl
xor
and
js
adc
mov
rcl
push
clc
addr16
xor
pusha
stos
and
adcb
pop
or
inc
add
mov
mov
lods
cltd
xchg
add
insl
and
es
xchg
add
mov
mov
mov
mov
test
sub
or
add
mov
clc
cmp
shll
xor
inc
sbb
arpl
jno
add
sbb
push
in
sbb
add
push
inc
push
ficomps
or
inc
dec
fcomps
cmp
jns
xor
cmp
adc
mov
in
inc
sti
jne
or
xor
mov
shrb
and
dec
jo
xchg
or
pop
clc
sbb
push
add
xor
dec
popa
xchg
dec
or
hlt
into
insb
xchg
loope
fsubrp
jno
mov
insb
sub
inc
outsl
cmp
sarb
xchg
inc
and
sbb
sub
jo
add
add
inc
or
add
add
ret
js
mov
jns
cmp
dec
test
inc
xchg
push
mov
adc
add
pop
jb
or
and
mov
jecxz
stos
add
fadd
cmp
sbb
and
jbe
cmpsb
andl
xchg
js
add
push
add
mov
loopne
jne
int
outsl
sub
inc
mov
or
mov
jnp
stc
inc
mov
jmp
arpl
mov
xchg
fildll
arpl
in
mov
jne
add
lods
xchg
es
add
jmp
out
and
sub
rcrl
test
adc
loop
mov
or
fprem
mov
sbb
jbe
insb
je
mov
dec
andl
adc
pop
imul
pop
imul
and
push
test
and
adc
push
xchg
xchg
dec
adc
je
push
insl
dec
dec
call
push
inc
xchg
shlb
clc
aas
lea
push
or
cmpsb
push
mov
or
nop
dec
xchg
pop
nop
mov
test
mov
mov
inc
push
or
or
and
mov
mov
iret
adc
xor
in
popa
lods
cmp
mov
aas
jo
or
push
lea
adc
sbb
adc
movsl
inc
push
pop
nop
inc
dec
loope
push
sbb
push
push
inc
cwtl
jmp
mov
pop
and
test
add
lods
add
or
sub
pop
xchg
lods
fld
jmp
push
jmp
pop
jae
mov
loopne
iret
insl
sbb
sub
xchg
add
push
sbb
add
fldt
loope
fiadds
adcb
bound
mov
aas
inc
loope
add
or
mov
push
cmp
mov
dec
mov
sbb
test
lock
mov
shll
sbb
mov
xchg
jne
pusha
jmp
mov
mov
add
or
clc
pusha
push
mov
call
pop
dec
mov
or
jecxz
aam
pop
pop
mov
inc
xchg
and
bound
pop
addr16
and
setae
mov
xor
or
or
add
iret
pop
add
mov
push
jecxz
mov
adc
outsb
pop
add
push
loope
add
shl
mov
verw
dec
adc
mov
ficompl
pusha
pop
cmc
roll
ret
es
daa
cmp
mov
xor
lcall
out
stos
ss
adc
pop
adc
dec
sbb
mov
faddl
in
sbb
repz
in
and
or
ret
in
jne
pop
movsb
xor
gs
or
cmpsl
xor
sbb
iret
sub
jecxz
pop
les
dec
mov
rolb
cmp
sub
xchg
sbb
dec
imul
fstpt
loope
mov
shll
cmp
in
dec
ja
or
sbb
mov
bound
fwait
jge
sbb
dec
andb
mov
sbb
fldcw
or
lret
into
rcl
movsb
jno
jge
and
push
test
jle
add
ret
fnstsw
sahf
mov
rcrl
gs
dec
mov
xchg
inc
pushf
cmp
jne
fstps
inc
sbb
mov
inc
jl
mov
insl
loop
loopne
add
jo
js
mov
insb
sub
mov
xchg
jno
test
ret
mov
out
push
add
or
fimuls
int3
push
dec
js
inc
movsl
or
jnp
add
mov
subl
push
xchg
idiv
rorb
addl
fadds
push
rclb
sbb
inc
pop
cmp
mov
bound
jmp
sub
push
mov
push
sub
pop
stos
sub
dec
sub
mov
jns
adc
adc
jecxz
in
add
mov
sub
call
mov
sub
and
adc
adc
sarb
rcll
stc
xor
loop
push
push
sarb
add
clc
pushf
sbb
dec
lock
gs
mov
pusha
lret
addl
adc
push
xchg
mov
mov
enter
add
push
dec
jno
and
mov
lods
push
push
fs
fwait
mov
in
sbb
fstl
adc
lds
iret
adc
push
mov
icebp
je
sbb
adc
adc
cmp
xchg
adc
mov
jbe
xor
ss
push
outsb
or
roll
stc
out
ret
pop
mov
jmp
fistpll
clc
add
sub
mov
jo
xor
xor
xchg
add
push
dec
jl
sbb
out
shll
cs
daa
push
pop
insb
in
mov
and
jnp
add
stc
test
testl
add
es
sub
sti
add
adc
inc
mov
or
xor
xor
test
lret
sub
cmp
mov
lock
inc
in
sub
push
and
or
dec
push
push
aam
or
push
dec
dec
lea
mov
in
orb
jns
adc
jecxz
adc
stos
shlb
push
adc
add
inc
add
shlb
xor
test
sbb
xchg
ret
into
xor
dec
push
sbb
push
push
pop
mov
ret
je
inc
enter
pop
rcll
dec
enter
scas
inc
fs
pop
mov
sbb
pop
cmp
cltd
aas
add
add
mov
push
dec
mov
pop
sub
jmp
mov
pop
sbb
xchg
mov
adc
sbb
xor
sub
nop
sbb
adc
xchg
jl
mov
fdivs
or
ret
pop
clc
xchg
push
cmc
jnp
jmp
add
or
out
test
push
cmp
jne
adc
dec
add
dec
leave
inc
dec
pop
mov
sbbl
adc
sbb
push
cmp
loope
shll
dec
mov
rol
rcl
nop
das
orb
and
push
dec
hlt
pop
mov
sub
push
jmp
and
lfs
popa
mov
inc
and
paddusw
int
ror
hlt
xchg
add
and
adc
adc
test
add
dec
or
and
cmp
xchg
loopne
xorb
sub
cmc
lret
int3
push
inc
cmp
sub
and
pop
addr16
cmp
sbb
dec
inc
outsb
and
fnsave
push
mov
cli
inc
pusha
or
rcll
ds
or
cmp
arpl
lods
add
xchg
xchg
test
aam
or
fs
cld
cmp
add
push
hlt
inc
add
popf
push
mov
xchg
cltd
add
sbb
inc
movsl
add
or
xchg
inc
ja
rcl
lods
dec
mov
and
inc
add
inc
push
shrb
and
cmc
cs
addl
or
xlat
cmp
pop
jmp
inc
mov
xchg
sbb
adc
jp
test
nop
or
pop
fildl
and
movl
jno
les
loopne
mov
push
xchg
jo
fdivrs
rorb
push
xor
shlb
jbe
jo
andb
add
mov
mov
adc
inc
push
enter
mov
adc
mov
hlt
and
fimuls
cltd
stc
or
std
pop
frstor
jg
pop
pusha
jne
xchg
lock
inc
insl
adc
add
push
adc
inc
pop
sub
test
sbb
inc
pusha
imul
dec
jmp
push
cmp
pop
xor
and
daa
or
mov
add
mov
mov
loopne
push
jge
add
or
sbb
sub
es
sbb
mov
icebp
pop
or
and
mov
ss
xorl
fdivrl
mov
shlb
sbb
bound
ret
test
xlat
and
or
lret
inc
push
mov
insb
mov
repz
mov
xchg
test
mov
or
or
or
mov
ljmp
ja
rcrb
je
orl
incb
xorl
cmova
ljmp
les
sbb
jne
mov
sbb
add
and
add
sar
mov
push
dec
pusha
clc
das
jge
mov
sub
jp
je
rcrb
sub
lcall
cmpsb
mov
add
inc
adc
inc
push
jo
inc
dec
cmp
jge
loopne
push
and
sub
hlt
jecxz
shlb
inc
mov
sbb
sbb
ret
adc
jg
push
xor
add
mov
mov
push
push
adc
jmp
sub
and
mov
xor
ret
mov
adc
fldl
js
out
clc
rorb
jecxz
pop
pop
jmp
repz
or
sbb
add
and
push
outsl
add
push
rcll
sarl
add
mov
jle
inc
call
push
inc
xor
int
inc
adc
sub
out
jo
call
and
rcrb
leave
fldenv
loope
adc
ficomps
add
pop
adc
add
out
xor
or
sub
movsl
mov
lods
push
into
add
adc
mov
in
add
mov
inc
or
fnstsw
cmp
jns
fst
movntq
mov
pop
and
andb
push
outsb
sub
sub
in
lcall
jnp
inc
data16
aas
stos
inc
popa
cmp
das
jo,pn
inc
mov
adc
sbb
leave
push
es
jp
sbb
sbb
js
iret
mov
mov
xchg
enter
lea
mov
sub
or
adc
cmp
paddq
xchg
xor
fcoml
and
mov
jno
les
jge
mov
fistps
pop
popa
shrb
jecxz
xor
in
xor
clc
jno
pop
push
pop
adc
mov
xchg
xor
jnp
jbe
fcoms
adc
in
subb
pop
repz
popa
push
add
inc
insb
sub
push
sub
xchg
push
jmp
xor
test
flds
ss
dec
adc
mov
sbb
fdiv
pop
sbb
mov
add
rcrb
mov
adc
cmp
repnz
rclb
in
jo
or
push
test
nop
pusha
in
cwtl
and
lahf
iret
shlb
pop
adc
push
or
jmp
add
fsubrs
mov
inc
inc
sbb
and
mov
push
shrl
movsl
ja
adc
pop
fiaddl
cmp
push
pusha
push
popf
movq
dec
dec
sbb
push
pop
push
and
add
and
and
or
dec
xor
add
pop
dec
std
outsb
inc
cmp
je
test
aaa
push
or
lds
imul
sbb
and
xchg
stos
adc
lods
pcmpgtd
pop
adc
sub
mov
lds
pop
mov
das
in
cmpsb
lods
dec
lret
rorb
enter
add
movsl
sbbb
popf
dec
pop
movsl
clc
dec
push
jae
jb
adc
push
jnp
and
add
xchg
or
inc
je
mov
punpckldq
adcb
popa
cltd
jae
adc
movb
add
cmp
or
add
xor
mov
sub
mov
je
mov
push
test
dec
movb
sub
mov
ds
aam
xchg
aaa
mov
or
xor
dec
xor
cmp
stos
rorb
push
das
push
and
jg
fwait
bound
insl
dec
cmp
arpl
jg
and
pop
mov
or
mov
xchg
ret
outsl
jmp
or
inc
xchg
pop
pop
cmp
inc
push
test
pop
push
mov
das
sarl
and
inc
sub
ret
push
pop
pop
inc
in
popf
inc
inc
push
push
and
inc
push
inc
inc
lahf
cmp
dec
push
and
or
imul
adc
mov
psubusb
insb
sbb
adc
lcall
pusha
push
dec
add
repnz
or
imul
enter
enter
loopne
in
int3
pop
test
sbb
jno
outsl
orl
aam
xchg
cmpsb
or
andl
fstl
push
lds
enter
fstpl
jp
jns
in
pop
dec
pop
fildll
mov
sbb
hlt
les
nop
insl
clc
pusha
and
mov
stos
clc
es
outsb
push
jg
sbbl
sbb
add
hlt
inc
xor
imul
mulb
push
push
mov
jo
or
movsl
addl
daa
xchg
lret
dec
pop
cmp
adc
mov
add
push
test
push
aaa
sub
cmpsb
dec
xor
mov
pop
dec
pop
rcrb
pop
loopne
mov
adc
fsubrl
fsubrs
pop
aam
pop
ss
pusha
popl
enter
int3
push
or
push
pop
mov
pop
adc
mov
pusha
lea
jg
movsl
ret
lods
jg
and
imul
out
and
adc
or
adc
push
inc
jecxz
mov
push
lods
sbb
ret
ljmp
lds
jl
rcrb
pusha
pop
cmp
fs
test
inc
inc
adc
mov
sysenter
out
andl
jmp
fmuls
imul
scas
mov
xor
ret
push
xchg
pop
add
les
rol
pop
pop
push
repz
out
rorl
adcb
dec
popa
xor
lds
pop
mov
add
jle
sbb
fists
push
mov
das
jmp
jne
popf
fisubrl
and
sub
or
xor
ds
xor
inc
or
pop
fcoms
out
or
xor
xchg
fwait
xchg
add
daa
mov
add
or
or
or
push
mov
adc
jns
out
lea
xchg
sti
jle
jno
and
pushf
or
loop
insb
cmp
inc
nop
dec
mov
mov
xchg
cmp
push
faddl
outsl
loopne
add
leave
add
mov
mov
adc
filds
movsb
mov
xchg
out
dec
cmp
insb
ss
lea
push
jge
push
add
push
lahf
rcll
out
dec
adc
js
cwtl
outsb
and
rcrb
scas
pop
out
xchg
imul
aam
jmp
dec
shlb
sbb
adc
hlt
xchg
movsl
mov
and
popf
ret
xor
sbb
push
je
or
inc
jmp
lret
sub
inc
pushf
adc
mov
push
xor
jno
cmp
adc
and
adc
jl
mov
push
cli
sub
movzbl
or
push
sub
out
jecxz
jg
sbb
pop
nop
dec
jge
sbb
push
sbb
mov
cwtl
adc
push
bound
or
loopne
push
negb
fcomp
test
clc
hlt
push
or
lret
adc
xor
ja
movsb
les
cli
psubsw
cmpsb
incl
mov
sub
pushf
xchg
test
mov
xor
push
insl
adc
mov
mov
scas
cmpsb
sub
or
jle
sub
sub
cmp
lea
xlat
pop
test
inc
jnp
and
pop
outsb
cmpsb
fistl
and
fsubs
xchg
dec
pop
into
arpl
inc
icebp
pop
ljmp
xchg
lea
orl
pop
xchg
xchg
mov
and
push
inc
addps
inc
adc
inc
or
clc
adc
lret
inc
in
xor
aaa
adc
aas
sub
jne
push
xchg
sub
xchg
js
dec
clc
sub
or
add
stc
mov
inc
cmp
mov
cs
jb
push
sbb
shrb
adc
push
or
lds
addb
xchg
cld
cmp
lock
jl
or
incl
add
cli
out
add
mov
inc
sub
mov
add
sub
jle
js
xchg
loopne
mov
jns
or
push
cmp
adc
lock
aas
pop
mov
add
lcall
je
or
sub
dec
xchg
cmp
lcall
mov
or
xorl
xchg
jle
aaa
jbe
cmp
sub
mov
test
or
mov
loope
mov
cs
roll
ja
ret
push
xor
sub
inc
inc
or
or
and
ja
rcll
push
in
pop
sub
add
bound
push
sbb
out
jge
mov
add
stc
lahf
mov
sahf
pop
fs
push
imul
je
outsl
movsb
scas
daa
loopne
add
add
aas
cmpsb
xor
aaa
mov
cmpsl
fstl
or
imull
xchg
popa
pop
or
push
rcrb
out
mov
mov
mov
and
rorl
lret
shr
icebp
lret
incb
adcb
addb
pop
add
add
cmpsb
icebp
jne
cmpsb
daa
inc
cltd
add
mov
inc
jle
sub
enter
test
imul
nop
pop
or
sbb
dec
jg
in
inc
mov
xor
hlt
inc
add
jle
pmulhw
lock
mov
sbb
ljmp
data16
fimuls
addb
mov
rcrl
xor
dec
adc
xchg
push
in
sbb
mov
add
jecxz
mov
arpl
pop
pop
clc
fwait
lods
mov
out
nop
or
or
jb
dec
fists
add
push
sbb
icebp
incl
stc
adc
jne
or
adc
popa
sub
inc
jl
sub
in
push
xchg
int
cmpsl
add
xor
dec
xchg
pop
fidivrl
jge
cmp
xchg
jle
adc
insb
cmp
nop
inc
xchg
sbb
sbb
jbe
jge
or
mov
or
push
call
xchg
sub
jnp
mov
jo
ficompl
sub
iret
sbb
ret
jl
push
repnz
add
mov
pop
sbb
pop
xor
shll
mov
mov
jo
mov
sbb
jns
cmpsb
or
or
fisttpll
mov
pop
add
mov
int3
add
jae
enter
pop
dec
pop
xor
hlt
or
loope
inc
and
sbb
push
inc
rolb
adc
fnsave
or
adc
push
aam
jne
rcrl
arpl
rclb
add
loopne
dec
cmpsl
call
shlb
inc
fwait
add
mov
cmp
shrb
mov
je
into
inc
add
add
adc
in
jnp
add
or
xchg
jae
pop
sub
stos
cmpsb
fsts
mov
je
add
pop
lock
movsb
das
push
dec
mov
xchg
mov
mov
push
test
sbb
ret
cli
test
push
addl
std
dec
ja
add
and
jae
push
das
pop
jp
mov
or
leave
jne
sbb
and
add
mull
sbb
mov
sbb
sbb
mov
add
mov
and
add
movsb
in
es
pop
lods
push
ret
popf
inc
add
mov
inc
cmc
cmp
std
mov
pop
scas
inc
inc
inc
or
mov
andb
andl
push
mov
aam
adc
add
push
test
lock
jmp
add
push
pop
cmp
ljmp
mov
les
push
push
lahf
jne
outsl
push
mov
xor
push
mov
push
mov
pop
add
cltd
adc
mov
adc
jne
inc
decb
roll
add
add
xchg
mov
inc
mov
stc
or
popa
pop
pop
mov
flds
sbbl
xor
aaa
cwtl
xor
rcll
lods
add
stos
mov
xchg
mov
inc
push
inc
or
or
fwait
lret
gs
jb
dec
xor
jg
pop
leave
inc
jle
leave
add
das
mov
or
repz
lret
and
mov
cld
mull
test
and
sbb
sbb
and
xor
and
in
dec
outsl
xor
add
jnp
jae
testl
test
and
sbb
in
nop
push
and
sbb
rorb
sti
jae
stc
adc
rclb
adc
cmpsb
push
cmpsl
lods
sub
enter
xor
xor
or
stc
and
test
pop
mov
lds
outsl
arpl
daa
mov
mov
mov
paddsw
aam
add
cli
inc
jne
pop
ret
addr16
or
and
ret
pop
ja
add
in
in
xchg
push
sbb
ret
fsubs
push
sbb
lds
mov
xchg
pop
sbb
jo
jmp
mov
jmp
and
sbb
pop
sbb
sbb
xor
add
dec
jae
sbb
or
rcrb
xor
bound
lahf
add
inc
popa
mull
dec
adc
movzbl
div
out
mov
mov
imul
mov
or
dec
jns
lea
xor
jle
jo
pop
add
mov
jge
push
lahf
xor
push
push
cmp
adc
loopne
sbb
inc
mov
push
imull
push
dec
cmpsl
in
mov
mov
pusha
cmp
push
or
pushw
mov
add
or
hlt
pop
inc
inc
inc
inc
mov
fwait
push
and
rorb
xor
xchg
out
out
mov
call
daa
xchg
xor
adc
pop
cltd
insl
xchg
daa
push
sbb
mov
or
xchg
data16
or
push
add
out
cmc
loopne
xchg
mov
mov
in
cmp
mov
enter
push
mov
xor
in
or
adc
or
or
or
mov
cli
aaa
jne
jmp
push
dec
mov
sbb
mov
jo
adc
adc
cmpsb
mov
orl
or
or
idivb
mov
rcrl
sub
jbe
dec
sbb
sub
add
adc
pusha
adc
push
sbb
mov
mov
xor
pop
mov
data16
sbb
inc
les
cmp
or
popf
hlt
xchg
adc
sbb
sbb
dec
nop
loop
scas
out
jo
imul
mov
adc
pop
add
lock
pop
xor
out
rolb
mov
cmp
jl
cmp
xchg
jg
xor
add
subb
movsl
arpl
fdivs
out
pusha
loopne
imul
out
dec
xchg
and
xchg
or
push
rolb
xchg
sti
xchg
jne
sub
or
pop
outsb
add
std
xchg
cmpsb
mov
add
fcmovu
push
movl
xor
or
std
mov
pusha
addl
or
or
hlt
pop
and
mov
sbb
sub
add
jnp
and
mov
movsl
stc
sub
roll
psraw
jmp
shl
cld
adc
jge,pt
xor
adc
push
inc
out
or
in
int
pop
test
mulb
and
mov
pop
popa
ljmp
xor
inc
mov
out
in
mov
out
push
cltd
out
jmp
xor
fisttps
test
lret
roll
lea
icebp
mov
in
jne
adc
call
jne
in
arpl
daa
push
push
shr
shr
int
mov
xlat
push
icebp
jbe
mov
rorl
inc
sbb
and
dec
in
inc
popa
dec
imul
cmpsl
rorl
adc
stos
pusha
insb
or
push
dec
or
bound
sar
decl
js
lret
iret
cmp
mov
cmp
jae
mov
gs
or
or
add
lds
sbbl
jmp
insl
inc
sbb
dec
adc
jmp
and
sahf
fnstenv
shlb
shrb
dec
xchg
cmpsl
mov
arpl
insb
inc
add
or
aas
or
loop
lods
in
nop
jl
movl
push
inc
xchg
movsl
test
mov
sbb
push
adc
adc
push
mov
addr16
adc
es
add
and
push
sbb
lds
in
adc
sub
jle
repnz
scas
push
push
mov
xchg
dec
or
scas
inc
hlt
adc
fs
ds
cld
xor
push
adc
or
adc
ja
cmc
cmpsl
add
jo
scas
mov
add
push
and
inc
or
xlat
xchg
lea
xchg
or
nop
out
add
pushf
movsb
sbb
stos
mov
loopne
sbb
in
sbb
add
dec
jmp
add
add
mov
enter
testl
je
inc
add
sti
inc
jnp
mov
push
jnp
push
adc
sub
mov
scas
xchg
sti
cmp
add
rol
aad
dec
mov
push
mov
mov
add
push
lcall
je
pavgb
push
xor
adc
push
dec
jmp
mov
repz
sub
dec
dec
add
icebp
push
or
xor
mov
sub
out
out
mov
add
in
movsb
orl
iret
rol
xchg
out
loopne
aam
nop
add
dec
jp
adc
pusha
sbb
imul
push
and
sbb
aam
fcomps
jno
mov
rcrb
push
btr
andl
je
frstor
addr16
jne
loope
push
push
in
in
ret
icebp
and
fsubrl
pushf
and
ss
aam
push
xchg
xchg
and
gs
push
xor
lret
mov
adc
loope
add
mov
pop
into
push
clc
push
sbb
push
jnp
mov
pop
xor
rorb
inc
bound
rclb
mov
and
mov
jecxz
inc
xchg
fs
in
in
in
sub
inc
sahf
cmp
pop
jecxz
fcoms
lods
hlt
and
jmp
push
ret
imul
test
or
pop
scas
mov
add
js
hlt
mov
ret
xchg
std
movsl
ret
or
pop
and
testb
outsl
add
mov
xor
sbbb
dec
pusha
add
xchg
out
adc
xor
clc
adc
ret
enter
jbe
mov
xchg
or
cmp
enter
icebp
outsl
and
push
mov
imul
xor
sbb
mov
or
sbb
cmp
pushf
daa
dec
clc
add
js
xor
mov
es
add
popa
mov
xlat
aaa
pop
pop
jb
pop
mov
mov
cmp
xor
sub
xchg
inc
cmp
add
int
pop
mov
aad
in
sub
das
push
mov
enter
sub
mov
faddl
les
ss
mov
mov
sub
cld
xor
xchg
inc
push
xchg
dec
adc
movsb
xchg
call
xor
and
add
add
xor
rcrl
or
inc
rorb
pop
and
add
adcb
push
cmpsl
cmp
xchg
test
pop
cs
test
pop
push
data16
push
data16
cmc
mov
pop
scas
pop
and
and
dec
pop
test
push
ds
mov
dec
idivb
or
mov
sbb
add
mov
ds
rcrb
sbb
imul
testl
outsl
pushf
mov
cmp
popa
pop
cmp
xchg
push
aas
bound
inc
push
fisubs
movsb
lea
push
mov
jmp
inc
add
mov
or
mov
test
inc
clc
fisubs
adc
lahf
lods
mov
loopne
shrb
adc
xor
stos
pop
mov
mov
mov
sbb
dec
or
adc
xor
add
sti
rol
pop
cmc
loopne
add
lret
lods
mov
xchg
and
je
inc
sub
and
lret
dec
or
mov
pusha
or
cmp
dec
sbb
push
adc
int3
push
or
jno
lcall
mov
and
addl
xchg
jnp
or
outsl
js
or
xor
add
inc
add
lea
in
adc
mov
mulb
test
sbb
lock
pextrw
popa
ret
jle
sbb
out
inc
rolb
clc
or
in
loope
push
mov
add
addr16
inc
dec
jmp
inc
jmp
sub
push
jb
sub
in
mull
js
adc
inc
xorb
jns
test
jl
xor
pop
clc
adc
fprem
cmpb
imul
push
xchg
stos
mov
sbb
pop
sub
enter
aad
hlt
jg
jmp
xor
popa
pushf
add
test
inc
movsl
gs
cmp
adc
mov
maskmovq
imull
sub
lods
rcrl
inc
cltd
or
jo
inc
mov
xor
cltd
jb
aam
ss
out
cmp
pop
imul
add
add
arpl
popf
ja
daa
add
inc
shrb
add
or
xor
pop
in
test
lret
pop
cmp
test
je
and
sbb
add
inc
sub
or
or
popf
push
mov
mov
lea
aas
popf
cwtl
fs
test
in
insb
sbb
add
adc
int
insb
pop
nop
xchg
mov
sbb
add
mov
sbb
mov
xor
xor
add
addb
loopne
jae
push
or
jmp
or
notb
pop
fwait
fwait
add
jno
push
mov
fnstcw
xor
test
push
shlb
inc
testb
je,pn
fnstenv
or
fldl2e
mov
mov
daa
cmp
adc
mov
sub
and
jb
inc
lea
jge
jns
pop
rcrb
add
lret
jno
movb
jmp
loop
incl
mov
in
lds
shr
xor
sbb
lea
orl
incl
push
andl
shl
sub
mov
dec
inc
push
jbe
pop
mov
sub
push
insl
pusha
or
cmp
inc
xchg
inc
jae
shlb
adc
frstor
xor
mov
add
fs
je
mov
rclb
jnp
add
push
adc
shl
cmpl
or
sub
or
into
and
shr
out
fldcw
jbe
pop
and
pop
or
or
or
jge
sub
dec
jge
add
enter
jmp
xchg
cli
push
pop
adc
ljmp
in
roll
dec
ret
sbb
and
jg
and
jecxz
sbb
xor
jecxz
jae
mov
mov
arpl
outsl
int3
xor
adc
or
andb
sbb
lret
jle
cmp
add
dec
add
insb
scas
rol
cli
pop
cmp
dec
or
dec
sub
imul
and
mov
imul
push
or
xor
mov
fs
fisttpll
inc
fimuls
or
and
stc
cli
testl
test
fmuls
fidivl
cs
xor
or
dec
insb
imull
sub
loope
jno
push
xchg
cltd
cli
fdiv
xchg
or
sbb
es
ret
xchg
cli
mov
dec
or
out
mov
sbb
xor
loopne
push
mov
adc
push
jmp
fisttpl
mov
outsl
mov
push
jns
arpl
dec
cwtl
pushf
xchg
daa
xor
shld
xchg
or
mov
test
xchg
add
movsb
jo
adc
lahf
dec
cltd
xchg
daa
ja
lahf
xchg
lahf
xchg
mov
sbb
lock
data16
sbb
push
js
dec
lods
ljmp
push
pop
rcll
in
push
out
in
add
sub
mov
movsb
and
roll
aas
jns
pop
jne
in
push
shrd
add
push
mov
jl
jg
loopne
popa
dec
aaa
inc
cmpl
dec
mov
and
sub
or
or
gs
nop
addr16
fcomp
mov
or
sarb
inc
lret
jb
sbb
jmp
data16
lods
pushf
rclb
lock
jmp
add
das
jbe
push
int
ds
and
cmpsb
mov
adc
adc
vfrczsd
pop
lahf
or
inc
mov
and
xor
jg
and
add
mov
pop
std
mov
and
fistl
mov
jge
adc
and
xor
mov
xchg
in
dec
fmulp
inc
ljmp
pushw
cmp
hlt
jl
sbb
mov
push
and
shll
stos
and
iret
add
and
adc
inc
jbe
pop
popa
dec
addb
jle
push
test
fstpt
and
sbbb
insb
cwtl
mov
push
and
or
mov
mov
mov
xchg
push
sub
je
cltd
pop
pop
icebp
mov
mov
cmc
mov
loopne
xor
jne
enter
test
sub
outsb
ficoml
adc
and
adc
icebp
sub
sub
gs
js
das
add
jmp
sub
loopne
sub
sub
outsb
xchg
mov
es
dec
mov
outsb
cmp
add
fsubrs
mov
mov
je
and
mov
fsubr
insb
dec
xor
enter
stos
insl
xchg
mov
loopne
and
notl
adc
dec
add
shr
mov
test
clc
scas
or
add
cmpl
mov
icebp
aam
xchg
fmuls
sub
xor
sbb
adc
pop
cmp
sahf
lea
cmc
incl
jl
pop
pop
pop
adc
es
push
into
insb
xor
fwait
hlt
jbe
leave
ret
xorb
add
les
adc
faddp
orl
mov
push
mov
mov
mov
dec
adc
mov
mov
sti
or
pop
pop
js
add
fwait
shl
adc
jo
push
and
clc
clc
push
adcl
test
movsl
subb
arpl
xchg
mov
jno
push
aam
lcall
xor
push
inc
sarb
std
add
call
mov
movb
cld
dec
test
sbb
add
push
lret
imul
or
inc
push
dec
xor
push
pusha
and
xrelease
loopne
rcrb
lea
rol
shr
push
add
stos
mov
push
sub
test
pop
jne
or
mov
mov
shlb
adc
or
mov
arpl
sti
sbb
out
mov
xor
xchg
or
orl
sahf
mov
dec
sbb
or
adc
mov
add
jns
push
notb
das
icebp
push
xchg
and
xor
push
pusha
insl
mov
xor
xor
add
add
cmp
mov
shr
ds
ret
push
mov
push
in
xor
push
lahf
ret
or
mov
mov
dec
add
int
les
jne
pop
mov
mov
sbb
fists
push
cmp
inc
notb
inc
add
and
enter
adc
incl
add
imul
xor
lock
data16
and
or
mov
pop
and
in
pop
mov
sbb
xchg
jge
or
gs
xchg
jmp
cmpl
add
cmpsl
push
mov
push
sbb
sbb
pop
mov
pop
jmp
loopne
inc
jg
dec
out
test
push
mov
push
or
test
and
fildl
jge
xchg
inc
fidivrs
sub
cmpl
add
sbb
mov
xchg
cmc
shrb
dec
inc
lods
shrb
fbld
test
sbb
or
add
test
mov
xchg
lea
orps
stos
inc
int
pop
pop
push
rcl
vpshad
sub
paddb
cli
xor
stc
in
imul
andb
dec
dec
ja
or
sub
inc
clc
xchg
ret
cmpsb
xor
mov
inc
or
dec
insb
cmp
inc
imul
mov
push
aam
sbb
inc
ss
or
add
pop
fdivr
das
jp
inc
or
gs
dec
push
and
das
imul
out
je
cmc
or
add
inc
and
cltd
sub
mov
rol
fisttpll
cmp
mov
inc
jle
pop
dec
rorl
jmp
rolb
adc
clc
fwait
rorb
test
cmp
test
or
lods
ja
pop
xchg
jmp
daa
dec
loopne
sti
ljmp
xor
or
rolb
rcrl
mov
push
test
xchg
popfw
sub
sbb
adc
outsl
in
and
adc
push
bound
sub
sbb
add
fadds
and
push
xchg
test
mov
sbb
rcl
lods
push
lock
jmp
outsl
enter
xchg
mov
mov
xchg
daa
or
fists
insb
mov
mov
inc
imul
add
mov
pop
sbb
dec
push
inc
inc
xchg
fildl
or
inc
mov
push
dec
ror
add
sub
dec
mov
imul
sub
push
enter
daa
and
sub
test
xchg
fisubl
call
or
adc
inc
movsb
test
xlat
xor
add
xchg
lods
dec
xchg
push
hlt
int
pop
push
and
nop
mov
and
jne
and
inc
jae
imul
jne
rcl
sub
inc
jo
idivb
ljmp
nop
cmp
mov
add
daa
mov
push
nop
dec
addl
or
adc
rcrl
or
or
pop
adc
push
push
or
das
add
sub
inc
xor
int3
or
int
movaps
or
inc
fcmovnbe
push
addr16
adc
add
xchg
gs
ja
subb
das
mov
sbbb
fdivs
add
mov
divb
cmp
and
jge
add
mov
aam
sbb
add
adc
sub
mov
adc
pop
sub
cmpsb
jb
mov
inc
or
fisubrs
pop
fisttps
adc
aaa
mulb
add
pop
mov
movsb
xchg
ret
push
pop
ja
xchg
jne
pop
sbb
sbb
mov
roll
add
lods
rcrl
loope
inc
or
iret
xor
add
rolb
mov
adcb
pop
lds
stos
jne
push
adc
enter
loopne
xor
add
or
hlt
arpl
scas
add
mov
inc
cmpb
add
push
test
mov
call
dec
popf
movsl
add
rolb
fildll
adc
xchg
vpmaxub
pop
mov
popf
adc
faddl
sbb
add
xor
jmp
andl
insl
push
inc
add
lock
ret
dec
add
push
fdivrl
sub
inc
inc
dec
jno
push
loopne
stos
sbb
dec
mov
adc
popf
inc
cmpsl
sbb
dec
sub
mov
ret
movsl
pop
ss
cwtl
popa
add
sub
pop
push
pop
cltd
sbb
inc
jmp
fmuls
fiaddl
scas
push
insl
push
push
jp
dec
xor
rcrl
push
pop
ja
pop
dec
pop
adc
pop
and
test
pop
xchg
mov
adc
popf
add
or
daa
jae
loop
push
push
jl
add
adc
bts
arpl
fisttpl
je
mov
es
flds
or
or
adc
sbbb
mov
jo
or
push
mov
xor
pop
cmp
les
mov
jb
dec
cmp
push
adc
inc
inc
cmp
xchg
bound
cmp
loopne
lods
mov
pop
xorl
aaa
or
jno
push
pop
adc
push
test
add
cmpb
add
lret
sbb
pop
push
out
cmp
lret
std
out
mov
inc
add
lock
wbinvd
nop
lods
pop
addr16
sbb
mull
test
or
in
adc
adc
xchg
sub
pushl
push
in
mov
or
cmpsl
add
lds
inc
adc
mov
vpmullw
cmp
xor
sar
ja
leave
xorb
adc
push
fidivl
adcb
data16
sbb
sbb
fsts
pop
pop
add
adc
dec
adc
into
rolb
dec
push
xchg
lret
mov
fcmovnbe
std
adc
sbb
jp
dec
in
outsl
je
add
dec
jo
push
rorl
add
pop
lods
xchg
rcrb
enter
inc
dec
or
dec
mov
or
push
inc
push
je
xchg
iret
sbb
jmp
cld
fwait
nop
orl
loopne
or
add
sub
bound
jne
cmp
or
push
push
adcl
xchg
or
push
arpl
clc
imul
cs
pop
push
in
dec
loop
push
pop
push
push
das
pop
or
rorb
imull
and
and
adcb
sbb
lock
push
adc
in
fadd
jecxz
cmc
and
pextrw
mov
add
test
mov
fwait
xlat
or
loope
jns
inc
dec
mov
mov
sbb
sub
sbb
lea
xor
fnstenv
dec
fcmovnu
cli
inc
addl
hlt
fwait
sub
add
add
and
mov
mov
add
adc
add
je
repz
xchg
cli
push
in
pop
mov
push
add
or
loop
pop
xchg
mov
mov
push
mov
sub
pop
add
sbb
mov
fadd
stos
shl
popf
or
add
xor
loopne
aam
sub
int3
push
les
or
rcr
les
roll
push
xor
adc
mov
fs
cmc
cmp
add
push
enter
lods
xchg
call
or
in
adc
mov
idivl
xor
ror
cmc
sub
loope
arpl
dec
mov
pop
add
stc
mull
adc
dec
fsub
lock
aas
push
mov
push
and
nop
in
sarb
sub
adc
daa
dec
cmpsl
or
sub
mov
fwait
mov
xor
faddl
hlt
jnp
inc
and
mov
adc
push
adc
or
jl
icebp
pop
adc
dec
add
jecxz
jl
cmc
bndldx
mov
ss
cmp
xchg
data16
sbb
mov
dec
pop
mov
and
inc
dec
mov
inc
inc
dec
bswap
jno
and
cmc
sub
push
cmp
cs
sub
dec
xor
add
nop
popl
inc
dec
jo
jnp
pop
and
je
aad
push
lcall
cltd
pop
jnp
rclb
jg
sbb
push
enter
jno
pop
or
insb
jmp
imul
loopne
add
xchg
mov
aaa
mov
aam
pusha
pop
add
addb
inc
mov
cwtl
icebp
mov
sbb
sub
daa
adc
and
pop
sbb
les
stc
test
inc
xor
xchg
hlt
es
adc
xor
rcrl
fsts
push
cld
and
or
adcb
push
push
fimuls
and
inc
insb
add
cmp
add
xchg
cmp
inc
or
inc
inc
or
outsb
adc
les
js
imul
mov
movb
ror
loope
or
jg
inc
sbb
dec
imul
sbb
lods
movsl
pop
daa
push
sbb
or
scas
mov
and
imul
push
stos
inc
xor
adc
je
lret
inc
in
lret
sti
les
aas
push
sub
or
cs
xor
mov
sarb
test
add
cltd
or
test
inc
pop
or
pop
sub
dec
add
movsb
adc
mov
adc
stos
fstl
fs
jmp
bound
test
push
mov
cmp
insl
sub
daa
inc
inc
add
and
inc
sbb
mov
lret
push
xor
pop
adc
sahf
jne
xchg
into
pop
jo
inc
das
nop
pop
push
imul
psubd
out
jle
out
and
or
xchg
add
xlat
push
add
xchg
fadd
inc
int
aas
sbb
cli
arpl
mov
sbb
or
rclb
push
sub
movsl
sub
roll
mov
pop
call
lcall
pushf
adc
sub
mov
ffree
push
push
add
repz
lods
scas
inc
or
cmp
mov
add
bound
bound
sbb
adc
jb
sub
sub
dec
outsb
push
rcrl
outsl
lock
fisttps
gs
jne
test
xchg
inc
and
xchg
add
lds
pop
ret
xor
nop
pop
jno
xorb
ja
scas
repz
cmc
add
add
add
or
insl
push
adc
cmp
cmpl
std
mov
mov
inc
mov
jl
popa
xor
ds
movd
aas
xor
ja
adc
add
scas
and
or
loope
adc
cli
inc
enter
xor
pop
nop
push
sti
xor
imul
scas
sub
mov
or
hlt
xor
daa
imull
cmp
and
push
xor
sub
add
add
test
rolb
and
pop
cs
pop
enter
addl
cmp
xchg
lock
pop
xchg
orl
rol
lea
xor
popf
sbb
test
dec
fists
jp
dec
and
sub
movb
fsubs
cmp
sub
adc
inc
repnz
or
pop
je
dec
movb
lods
int
in
or
or
cmp
sbb
cmp
cltd
in
out
fwait
sbb
arpl
xor
xlat
arpl
add
add
or
cwtl
inc
call
add
scas
jl
lahf
inc
cmp
dec
invd
incb
loop
mov
inc
inc
push
std
and
xor
pop
mov
push
pop
jecxz
mov
cmp
mov
dec
jbe
sbbb
ret
push
lret
add
pop
adc
dec
gs
or
sbb
push
adc
mov
xor
imul
dec
pop
sbb
pop
push
stos
dec
jle
mov
cmp
push
lock
pushf
mov
push
pop
insb
adc
add
dec
popa
movsl
sub
or
adc
adcl
push
pop
sbb
std
out
mov
data16
aaa
lock
loopne
and
inc
inc
popf
dec
add
xorl
xchg
mov
mov
es
pop
call
rorb
fadds
push
in
adc
pop
mov
push
movsb
icebp
repz
add
je
dec
je
and
in
pusha
outsb
pushf
mov
add
gs
movsl
fs
enter
or
mov
fs
or
jmp
hlt
popf
mov
dec
mov
sbb
out
sub
mov
or
loop
inc
dec
lea
insl
aad
aam
push
iret
xor
jmp
sti
inc
std
xorb
sub
icebp
ja
mov
xor
mov
add
movzbl
mov
xor
add
shl
test
pop
mov
cmp
fildll
pop
mov
inc
mov
in
cmp
pop
movsl
pop
ret
cmp
sub
cmpl
ret
xchg
mov
leave
push
dec
mov
mov
jmp
xorl
push
adc
jl
leave
sub
movsl
cmpsl
idivb
addb
push
mov
lahf
outsb
cmp
add
xlat
and
inc
mov
xchg
rcr
loopne
sbb
fsub
sub
shlb
push
test
fwait
sub
out
push
add
in
sub
push
fistps
test
fldt
adc
inc
mov
dec
cwtl
sub
or
mov
jmp
fiadds
or
and
and
dec
inc
xor
test
bound
shr
cmp
xchg
hlt
repz
xchg
adc
pop
std
sbb
enter
jno
movb
jge
loopne
iret
sub
jge
pop
lret
mov
jne
xor
aas
and
les
shll
cmp
in
movsb
dec
and
test
dec
fsub
sub
loopne
xchg
jo
inc
ret
jbe
lock
mov
daa
add
aaa
sub
bound
daa
loop
pop
aad
dec
jns
inc
add
add
mov
daa
lock
xchg
icebp
add
bound
push
cmpsb
imul
adc
leave
ret
pop
lods
test
sbb
inc
xchg
adc
lea
aas
out
shrb
jl
add
push
adc
cmp
mov
and
and
inc
xchg
add
push
ret
mov
int
sub
inc
push
push
cmp
lds
data16
sub
sets
hlt
loope
insb
dec
mov
hlt
testb
fwait
cmp
sub
mov
pop
dec
jnp
mov
push
push
or
cltd
inc
mov
lahf
jge
cltd
add
and
daa
push
daa
dec
pop
sarb
arpl
lods
pop
adc
add
js
push
notl
daa
dec
push
sbb
pop
sub
aaa
add
push
push
pop
ds
arpl
pop
adc
mov
pop
adc
shrd
sbb
shr
out
push
add
sahf
push
sbb
mov
inc
push
sbb
or
lods
mov
in
or
xor
in
xchg
test
and
orb
push
jg
push
movsl
and
or
xor
and
roll
xor
xlat
aaa
mov
jae
test
xchg
sub
mov
xchg
leave
imul
fldl
adcl
sub
mov
sub
jo
sbb
mov
pusha
into
inc
inc
enter
repz
cmp
out
loopne
fcomps
fdivrl
outsb
push
xor
mov
push
movsl
xlat
in
std
loop
std
nop
test
dec
dec
inc
pop
test
push
loop
popa
pop
pop
mov
adc
xor
dec
pop
cmp
fmuls
cmp
sub
mov
adc
mov
daa
in
sbb
and
push
mov
call
xor
out
mov
or
inc
sub
cmpsl
nop
xor
sub
mov
mov
push
sub
loope
mov
inc
xchg
sub
jmp
add
push
xor
pop
mov
and
mov
lret
add
jl
roll
xor
shlb
sbb
mov
add
imul
adc
cmp
mov
mov
frstor
push
adc
sbb
cmp
adc
sbb
sbb
nop
xchg
adc
or
stos
rclb
pop
rorb
xlat
sbb
and
cmp
gs
stos
add
jbe
mov
std
adc
daa
mov
dec
popl
sub
arpl
adc
push
jmp
mov
or
add
or
ja
inc
push
or
fwait
testb
add
clc
orb
xchg
add
lahf
mov
inc
addr16
inc
cmp
add
push
outsl
in
adc
adc
scas
mov
pop
stc
mov
inc
add
int
jnp
fmull
add
jae
xor
test
or
clc
popw
lea
pusha
int
mov
mov
out
std
inc
xlat
or
inc
sub
mov
arpl
loopne
test
mov
ds
sti
add
sbb
adc
push
int3
lea
sub
fwait
lods
cwtl
pop
xor
add
sbb
adc
adc
sbb
and
sbb
mov
dec
add
xchg
shll
or
inc
repnz
js
mov
insb
adc
ss
ret
ret
inc
addr16
inc
call
cmp
lock
mov
fsubrp
cmp
xchg
push
enter
dec
xchg
ds
dec
icebp
push
shlb
and
add
or
repnz
or
or
loopne
pop
add
add
and
sub
jmp
push
sbb
inc
leave
adc
mov
ret
in
and
je
pop
or
pusha
mov
jo
cmp
lea
add
inc
in
loope
adc
jle
int
push
in
mulb
fdivrp
cmc
mulb
cmc
or
rcr
jns
push
dec
cmc
and
push
lret
inc
mov
sbb
fidivrl
sbb
push
mov
push
add
testb
mov
xor
and
push
adc
pusha
push
data16
sbb
add
aam
scas
loop
mov
pop
xor
dec
fsubl
adc
cmp
xor
in
add
movsl
mov
and
pop
push
lahf
shlb
lock
or
pop
adc
ja
sub
sbb
repnz
inc
stos
andb
dec
stos
mov
or
outsb
and
mov
mov
cmp
xchg
xchg
adcb
out
cmp
ds
mov
clc
fisttpl
push
lods
inc
dec
xor
dec
push
faddl
bound
loop
daa
les
test
inc
cmp
sbb
xchg
sbb
movsl
rclb
movsl
inc
dec
xchg
jbe
dec
or
jne
dec
push
dec
shrl
inc
add
test
test
push
dec
lret
sub
sets
pop
dec
sbbb
mov
test
lahf
xchg
mov
add
mov
ror
jo
adc
adc
pop
sbb
inc
pop
pop
inc
test
and
pop
cli
xlat
dec
imul
xchg
pusha
pop
ds
pop
or
jp
fs
dec
lods
mov
push
je
cwtl
ss
push
adc
mov
je
nop
jl
ds
rclb
inc
cmpsl
mov
sbbb
hlt
leave
sbb
xchg
adc
add
push
lret
mov
inc
dec
mov
jae
movq
insl
pop
add
je
mov
adc
and
push
jb
adc
rcll
ficoml
xor
inc
dec
outsb
pop
push
leave
sbb
addl
add
mov
aas
xlat
adc
sbbl
enter
int
int3
adc
mov
cmp
test
jecxz
insb
incb
in
ror
xor
push
repnz
dec
jl
sbb
push
cs
dec
aad
pushf
xlat
jae
ret
test
outsl
adc
ret
imul
adc
pop
dec
mov
aas
mov
test
push
mov
mov
dec
pop
xchg
sti
jno
insb
add
leave
outsb
xchg
jl
jmp
mov
sbb
inc
in
jbe
roll
add
fs
lods
ror
in
iret
in
xchg
xor
cmp
test
addr16
push
and
or
xchg
jecxz
aam
pop
jmp
push
or
test
sbb
sbb
sub
outsl
leave
sbb
mov
push
adc
jl
or
adcl
or
push
in
pop
enter
sbb
cli
add
cmpsl
push
push
pop
roll
or
fstps
data16
sti
arpl
ffreep
and
and
popa
mov
dec
outsl
jae
xchg
xor
add
and
popa
add
jge
push
in
cwtl
pop
sbb
cmpsl
movsb
out
add
inc
movsb
jg
ret
negb
push
push
dec
inc
js
imul
push
jne
aas
jg
sbb
adc
pop
xchg
or
inc
fs
dec
outsb
inc
loopne
loopne
sub
orb
adc
test
push
out
inc
cltd
add
inc
push
pushf
add
shll
sub
movsl
inc
cmp
andl
dec
ss
pop
or
mov
xor
pop
or
in
movsb
push
sti
cld
paddw
xor
and
and
and
out
or
enter
jmp
xor
and
in
out
xor
and
and
and
xlat
orl
fcomp
fcmovu
or
enter
fidivs
enter
rol
and
and
movl
xor
and
int
xor
and
and
and
mov
or
enter
mov
mov
and
and
and
cmpsl
orl
test
stos
stos
or
enter
scas
xor
and
and
and
xchg
orl
cwtl
cltd
lcall
popf
sahf
enter
scas
popa
pop
cmp
dec
push
push
int
rcl
pop
daa
ficompl
adc
addb
xchg
push
adc
xor
xor
jne
and
js
or
mov
or
mov
pop
mov
adc
daa
mov
cltd
or
imul
aaa
pop
mov
adc
subl
sarb
adc
jno
xchg
push
push
aam
add
push
inc
jno
xchg
int
xchg
les
pop
lret
addr16
push
in
sbb
outsl
pop
and
mov
pop
adc
insb
jmp
leave
nop
or
push
add
add
or
nop
or
add
nop
pop
or
nop
or
or
or
nop
or
or
nop
movups
nop
or
adc
adc
nop
or
adc
nop
pop
sbb
nop
or
sbb
sbb
nop
or
sbb
nop
pop
and
nop
or
and
and
nop
or
and
nop
daa
sub
nop
or
sub
sub
nop
or
sub
nop
das
xor
nop
or
xor
xor
nop
or
xor
nop
aaa
cmp
nop
or
cmp
cmp
nop
or
cmp
nop
aas
inc
leave
nop
or
inc
inc
inc
or
nop
or
inc
inc
nop
or
nop
inc
dec
leave
nop
or
dec
dec
dec
or
nop
or
dec
dec
nop
or
nop
dec
push
leave
nop
or
push
push
push
or
nop
or
push
push
nop
or
nop
push
pop
leave
nop
or
pop
pop
pop
or
nop
or
pop
pop
nop
or
nop
pop
pusha
leave
nop
or
popa
bound
leave
nop
or
gs
or
nop
addr16
imul
insb
insl
outsb
lods
pop
enter
push
inc
inc
add
outsl
cmpl
jo
popa
out
movsb
outsl
inc
punpckldq
arpl
push
sub
outsb
jae
pop
jg
mov
sbb
pop
jo
gs
insb
sub
fcoml
sub
repz
negl
jno
push
jae
pop
call
popa
fwait
pop
outsb
cmp
ret
xor
insb
ss
fnsave
pop
jb
jbe
xadd
push
shlb
push
jae
sbbb
push
dec
push
sbb
scas
fstpl
out
jae
jne
xchg
scas
je
and
push
sbb
fisttpll
xchg
test
jo
mov
add
and
daa
dec
mov
add
dec
push
inc
sarb
cmp
dec
jae
leave
arpl
into
xor
pop
push
outsb
add
daa
popa
mov
mov
xchg
mov
xchg
lock
inc
jae
arpl
pop
int3
add
sbb
xchg
das
push
lea
pop
mov
or
mov
xor
das
inc
inc
xchg
orb
mov
mov
lahf
pop
sbb
sbb
pop
and
daa
fcmove
sub
dec
mov
push
leave
les
cmp
push
inc
jne
fmuls
gs
inc
daa
push
push
mov
ja
imul
das
jg
xor
push
jae
daa
push
push
jg
sub
insb
popa
jo
fs
xor
das
push
jnp
push
cmp
push
cmpsb
dec
sub
pop
sbb
mov
dec
lods
data16
sub
popf
xchg
dec
cwtl
mov
mov
inc
fs
cmp
xor
in
sbb
es
outsl
pop
imul
pop
push
cltd
pop
sub
pop
inc
outsl
adc
inc
dec
xchg
ret
gs
movsl
outsl
popf
mov
stos
test
unpckhps
ss
and
dec
mov
lea
gs
jb
out
inc
push
das
push
orb
push
add
xchg
inc
inc
dec
push
push
cwtl
imul
mov
inc
das
push
xlat
insl
sbb
cmp
sub
sbb
cmp
bound
aaa
pop
jnp
mov
fs
or
aaa
push
iret
test
icebp
mov
jp
inc
fwait
fs
push
push
inc
pop
add
sbb
iret
in
push
imul
orb
insl
push
fstl
jo
cmp
es
jle
frstor
push
or
xchg
ja
popa
aaa
fimull
repnz
sbb
cld
lahf
movsb
mov
ds
inc
push
insl
mov
jno
popa
popf
enter
and
push
mov
inc
jg
dec
jo
rol
addr16
dec
call
dec
fcoml
cwtl
mov
pop
xor
or
xchg
or
mov
xchg
nop
sahf
ret
xorb
dec
adc
add
push
imul
rcrb
cs
bound
out
adc
test
inc
sti
xchg
inc
lock
push
mov
cmp
stos
fmuls
pop
fcmovnu
add
frstor
subb
add
rorb
mov
movsl
xor
popa
sub
daa
and
cmc
or
and
das
subb
cld
addl
fsubl
xchg
pusha
cmovl
je
dec
adc
roll
enter
test
andb
sub
aas
xchg
inc
jo
pop
adc
or
push
test
pop
in
adc
daa
popf
fadds
adc
je
iret
js
mov
sbb
mov
mov
aam
hlt
or
mov
loop
js
loop
outsb
shrl
sub
out
stc
cs
insb
sbb
or
mov
rorl
insl
xlat
enter
aas
xlat
pop
mov
xor
shll
js
lret
cmp
mov
xchg
sub
push
out
mov
insl
insb
adc
pop
inc
push
sbb
lahf
ror
sbb
add
movsb
adc
or
mov
outsl
adc
jmp
or
and
jecxz
adcb
lret
cmp
push
mov
xor
je
push
push
inc
dec
aam
adc
xchg
pop
mov
pop
push
inc
outsl
dec
xchg
jno
push
popf
mov
fimull
and
jno
inc
pop
orb
int
adc
inc
inc
or
pushf
mov
mov
adc
add
cmp
mulb
push
je
rorb
rcll
sub
cwtl
dec
decl
inc
dec
dec
dec
push
les
xor
aaa
xor
lret
ds
cld
add
mov
imul
push
out
dec
jmp
in
fadds
xchg
jbe
filds
pop
mov
fcom
xchg
mov
pop
pushf
push
andb
lods
dec
pop
push
lcall
icebp
add
and
lcall
jns
imul
imul
push
and
imul
imul
leave
rolb
bound
bound
inc
fwait
xchg
mov
data16
and
pop
pushf
pop
inc
or
dec
xchg
nop
adc
dec
in
dec
xchg
insb
pop
test
in
push
push
popa
and
lret
add
fisubl
sbb
in
in
mov
in
sbb
pop
push
pusha
call
je
and
enter
dec
jmp
sbb
cmp
outsb
lock
xchg
in
push
jo
inc
xchg
xor
insb
mov
ss
xchg
xor
insb
cmpsb
adc
pop
or
and
pop
dec
or
dec
pop
imul
lea
imul
sbb
roll
addl
or
pop
inc
jle
je
sub
xorl
sarb
jp
adc
ret
sbb
outsl
cmpl
mov
and
dec
adc
leave
int
in
mov
pop
hlt
cmp
lock
xorb
cmpsl
icebp
rclb
lcall
cmp
movsb
flds
inc
or
popa
test
adc
lcall
stos
je
lds
mov
sbb
dec
jbe
fnstenv
je
xchg
iret
nop
or
jne
pop
fsubs
ds
aam
mov
mov
faddl
pusha
jo
push
adc
inc
lods
popa
test
js
into
mov
inc
imul
ja
mov
sub
addb
cmpb
fsubl
insb
js
lret
cmpsb
jns
fsub
xor
loopne
int
jns
push
inc
call
jp
lock
mov
mov
push
inc
push
sarb
pop
repz
lcall
xorb
movsb
lret
mov
pop
mov
jns
lds
insb
adc
stc
fidivs
or
les
rcl
mov
adc
sbb
lea
mov
setno
add
mov
or
sbb
insb
pop
push
push
lods
mov
outsb
call
lods
adcb
shlb
lea
jp
lcall
push
add
or
sub
clc
add
xorb
dec
std
mov
sbb
gs
push
arpl
adc
sub
fdivs
mov
jno
hlt
sbb
push
push
mov
in
lea
sbb
xor
insl
pcmpgtd
push
mov
les
xchg
sbb
les
daa
test
pop
adc
push
cld
pop
test
sub
jne
mov
xchg
fwait
ret
fs
pop
rclb
imul
push
imul
push
push
daa
jns
sub
negl
mov
out
push
pop
cmp
cltd
xchg
cmpsl
xchg
cmpsb
mov
repnz
jg
les
nop
mov
xlat
lods
xor
jne
add
popa
out
scas
movb
repnz
jmp
adc
adc
adc
mov
adc
add
xor
mov
add
xor
inc
mov
mov
xchg
xchg
sub
mov
cmp
xor
push
cld
in
or
mov
inc
adc
push
xchg
ret
mov
movsb
mov
or
or
orb
push
pop
cltd
cmp
push
mov
cmp
or
jl
xlat
lea
repnz
jp
pop
and
cmovo
mov
pop
adc
add
or
sbb
xchg
dec
inc
or
inc
mov
fimuls
icebp
jbe
push
cmpsl
dec
sbb
es
jnp
pop
push
gs
jg
inc
jle
push
and
and
gs
jae
and
shr
mov
add
sub
sbb
imul
lods
push
push
rolb
xchg
movsb
xchg
cld
jmp
jge
test
leave
mov
or
and
std
sbb
mov
and
loopne
imul
pusha
xor
push
jae
shrb
cmp
push
addl
mov
das
jmp
xchg
mov
loop
clc
ss
scas
sbb
adc
push
dec
push
add
xor
and
push
jo
xor
in
xor
ja
push
pusha
push
lcall
mov
jmp
jno
sub
jmp
lahf
push
pop
dec
pusha
push
sbbl
leave
adcl
pop
adcl
testl
adc
mov
mov
es
mov
add
das
add
push
adc
sub
inc
sbb
inc
xchg
sub
mov
test
add
mov
lods
ficoms
rcrb
xchg
adc
es
push
dec
lss
push
lock
add
ret
mov
add
mov
adc
cs
adc
push
lea
push
dec
mov
and
subl
lret
shrb
push
mov
jbe
addb
push
aam
and
jle
xor
mov
lahf
or
cmpsb
mov
push
pop
add
xor
test
cmp
lcall
or
jb
jg
dec
dec
jb
fstp
je,pn
xchg
mov
mov
mov
sub
inc
mov
cmc
and
dec
adc
icebp
das
jno
and
movsb
pop
adc
rorb
aam
movsb
jl
mov
fiadds
cmpl
fldt
add
movsb
jns
xor
shrb
aaa
push
rcrb
pusha
fcomip
or
ljmp
xor
pop
or
add
inc
rcrb
mov
pop
push
iret
mov
and
add
sbb
daa
outsb
call
xlat
insb
js
adc
add
in
add
out
mov
xchg
ftst
add
push
subb
xchg
mov
cmp
hlt
or
and
lock
and
in
in
add
pop
or
test
pusha
pop
nop
or
pop
xor
das
sub
jb
cmp
mov
sbb
sbb
mov
cmpl
in
loope
jne
out
sub
sub
xorl
dec
aas
stos
in
nop
push
loopne
mov
mov
test
xor
mov
mov
push
mov
xchg
fwait
inc
jl
cld
test
leave
cld
dec
adc
cwtl
dec
jmp
xchg
loopne
sub
inc
dec
bnd
push
rcrb
scas
or
push
mov
pop
nop
or
jecxz
jbe
and
movsl
test
add
mov
cmp
xorl
or
pop
push
pop
adc
loopne
lods
fstpl
inc
dec
jne
sub
or
popl
hlt
sub
addl
gs
aam
xor
cmp
cmpsl
ja
mov
test
adc
lea
leave
test
jne
pop
xorb
std
test
adc
add
mov
sub
adc
adc
add
add
subb
push
xchg
push
pop
daa
cmp
cmp
in
adc
mov
orl
nop
mov
sbb
xor
mov
dec
ds
add
aas
jg
xor
enter
xchg
push
xchg
mov
jle
adc
ja
cmpsl
xchg
add
fisttpll
add
and
pop
mov
pop
jne
pushl
rcr
dec
das
inc
jmp
lea
bound
ret
pop
mov
cmpsb
ret
sbb
inc
aam
lea
or
cmp
and
pop
sbb
gs
sbb
nop
inc
push
add
sbb
inc
push
sbb
and
pop
stos
rorb
xor
mov
pusha
clc
call
insb
mov
into
popa
inc
ss
sub
mov
dec
add
xor
pop
inc
or
and
test
cltd
cmp
and
cld
sarl
jl
lahf
dec
mov
sahf
test
and
repnz
sub
rcll
in
addr16
fwait
rclb
jge
nop
out
dec
sbbl
or
push
sub
adc
push
pop
int3
clc
daa
js
adc
or
push
aam
xor
add
subl
lds
pusha
sbb
xchg
adc
sar
adc
enter
push
and
in
xchg
push
push
test
bound
push
shl
or
jp
adc
adc
or
jl
and
push
xor
sub
in
insl
or
add
or
xor
dec
ja
das
jmp
adc
xor
inc
xor
add
cmp
cmp
sub
or
xchg
pop
add
sbb
enter
jl
jb
jns
xor
popa
leave
sbb
arpl
rcr
xchg
fisttps
lea
jl
add
bound
inc
mov
push
cmp
sub
rolb
and
and
nop
sbbl
jae
xor
fisubs
fistps
mov
es
inc
adc
lock
fst
pop
rclb
adc
mov
adc
add
sub
rcll
enter
je
enter
jns
shrb
inc
or
add
cmp
pop
jb
dec
out
icebp
lea
rorb
push
sarl
out
outsl
pop
push
jne
das
push
fisubl
jns
gs
add
popa
je
popa
inc
bound
popa
jb
inc
jo
jns
mov
push
insb
pop
jne
jl
imul
jbe
dec
mov
cmpsl
das
cmp
dec
jg
add
test
andb
out
sbb
sbb
pop
pop
ret
adc
bound
je
pop
push
fwait
call
push
rcrb
out
out
xchg
xchg
faddl
push
adcb
push
aas
fucomip
int3
inc
cltd
pop
adc
sub
dec
mov
sub
pop
xor
sahf
cmp
xor
cmp
dec
fnstsw
inc
ja
dec
xchg
movb
xlat
pop
cld
add
rolb
popa
push
jmp
and
fidivl
lea
mov
mov
adc
mov
add
pop
xchg
or
add
push
mov
fimuls
inc
leave
and
xor
push
and
cmp
xchg
and
cltd
ljmp
cmp
or
sbb
je
or
js
xchg
call
inc
cld
inc
loopne
movsb
pop
test
loope
sub
xor
xchg
xchg
shl
loope
mov
inc
xchg
aam
mov
rorl
mov
in
dec
jle
and
or
xchg
inc
movntps
fwait
adc
xorl
leave
mov
sti
rolb
adc
mov
push
sbb
or
adc
js
lahf
jns
insb
pop
fcom
test
dec
in
lret
ss
jne
xor
or
leave
sti
push
test
mov
call
or
fs
push
fsubs
data16
pop
pop
dec
or
imul
and
ljmp
test
add
mov
and
pop
inc
enter
jb
lock
nop
mov
les
cmpsl
rclb
rcr
enter
inc
jg
rorb
and
and
add
out
shrb
xor
lods
jae
inc
push
sbb
push
ja
sbb
or
enter
xchg
push
xchg
mov
cli
mov
adc
adc
sub
lods
pop
adc
adc
inc
add
addb
std
adc
inc
pop
cld
cmp
fdivr
mulb
sub
push
les
xor
jo
mov
xchg
xchg
push
lea
negb
jno
enter
ja
push
cmpsl
lock
icebp
aam
mov
and
dec
dec
and
and
or
mov
pop
mull
fs
sbb
arpl
jns
bound
call
xchg
sub
and
inc
add
gs
in
pop
pushf
dec
mov
xchg
cmp
das
movsb
in
mov
push
fmul
inc
xlat
pop
js
push
fsts
xchg
or
add
inc
xor
mov
mov
xchg
sbb
adc
movb
imul
das
jmp
and
shlb
ss
jl
hlt
or
in
sbb
scas
dec
add
lods
lods
add
xchg
pop
mov
jno
push
xor
sarb
or
or
or
cwtl
imul
jno
es
pop
lcall
add
in
jmp
lea
iret
mov
and
mov
lret
popf
mov
popf
fs
and
popa
adc
inc
inc
add
cmp
add
repz
ljmp
mov
loopne
pop
jne
cmpb
and
flds
clc
push
mov
lea
and
inc
mov
sbb
andb
in
cltd
mov
bound
int3
add
and
mov
cmp
hlt
pop
dec
aam
mov
sbb
outsl
mov
lock
or
inc
or
push
jo
or
sbb
jecxz
sbb
cmp
add
fidivrs
nop
cltd
dec
hlt
rol
pop
mov
push
inc
add
ja
push
sbbb
adc
jge
or
test
sbb
sub
inc
xchg
sub
xlat
test
dec
cmp
mov
pushf
add
insb
repz
sub
outsb
pop
int
adc
aas
jg
lcall
xchg
icebp
inc
cmc
aas
jbe
lcall
hlt
mov
xor
and
adc
xchg
adc
ret
fs
lds
inc
jbe
into
cmpsb
sbb
or
stc
xchg
ret
test
ror
aad
adc
push
out
ja
rorb
push
pop
lock
dec
and
mov
xchg
fwait
gs
mov
lods
fwait
ds
push
mov
cmp
enter
in
enter
in
mov
lock
clc
outsb
cmp
mov
pop
je
push
inc
lods
in
loopne
jg
fwait
jns
inc
inc
cmovbe
pushf
in
daa
dec
dec
push
inc
inc
inc
dec
jb
xchg
dec
push
push
dec
inc
push
add
enter
scas
pushf
int3
lret
mov
shrl
paddq
mov
mov
popf
sbb
leave
xchg
daa
dec
sub
dec
and
fmull
int3
mov
and
inc
inc
inc
das
push
in
sahf
dec
inc
push
inc
push
push
pop
mov
dec
push
dec
dec
jb
ror
push
inc
inc
push
inc
push
cmpb
dec
dec
push
inc
inc
dec
inc
mov
ljmp
sbb
or
sub
mov
gs
dec
cli
or
adc
mov
inc
or
xlat
stos
ss
les
subl
ret
ret
add
jae
jp
cmp
ret
pop
sub
in
movsb
test
dec
fiadds
enter
xor
xor
dec
and
mov
in
in
loope
add
cmp
inc
inc
xor
arpl
subb
addl
sub
push
popf
stos
add
mov
popf
popa
jge
sub
nop
fldl
movsb
push
or
fisubrl
pop
or
xchg
loope
out
lock
insl
push
sub
je
mov
aas
jl
sub
fchs
and
cmp
arpl
xor
add
mov
je
test
xchg
mov
cmp
and
push
andl
sub
inc
mov
dec
cs
push
mov
ja
sbb
loope
fstpt
in
fsubl
push
dec
push
fcomps
pop
das
dec
fstpl
fs
cmpsb
icebp
or
out
jbe
daa
push
sub
pop
lock
add
clc
jne
sbb
loopne
sub
mov
dec
out
dec
lock
inc
sbb
add
stos
and
inc
jmp
inc
aam
jbe
sahf
out
jmp
and
inc
mov
xor
lods
cwtl
and
mov
jmp
push
fnsave
dec
mov
lock
mov
test
test
mov
xchg
sbb
mov
sbb
mov
cmp
bound
leave
arpl
jne
mov
pop
shr
and
insb
mov
lea
pop
push
or
sbb
outsl
dec
fiaddl
movsb
cmp
ret
pop
dec
insb
insb
and
dec
fildll
inc
xchg
movb
test
imul
cmpl
mov
decl
sub
or
sbb
sbb
sub
sbb
adc
push
mov
fiaddl
je
bound
jns
cmp
mov
inc
loopne
jp
mov
fisubs
ss
adc
xlat
mov
jl
mov
add
push
sbb
sbb
xor
cmp
xorl
outsl
pop
sti
xor
push
xorb
cmp
push
adc
pop
lods
loopne
jno
inc
movl
nop
lea
jl
ljmp
cmp
enter
lahf
test
das
push
sbb
shl
fdivrs
or
pop
ret
push
mov
sti
jbe
sub
cmp
add
aam
and
jb
mov
rcl
or
and
jmp
xor
lods
in
idivl
clc
mov
jns
mov
push
inc
out
enter
in
sbb
adc
or
insb
cwtl
mov
repnz
add
push
or
or
outsl
add
add
mov
xchg
dec
pop
arpl
cmpsl
sub
jne
add
mov
add
inc
ret
les
data16
nop
ss
in
or
adc
add
add
push
repnz
movsl
ja
and
add
aas
cmpsb
jp
repnz
jge
push
cwtl
into
pop
xchg
mov
mov
cmp
jne
insb
add
xchg
or
jnp
jne
movl
aad
dec
lock
jnp
mov
and
test
sbb
repnz
xor
test
push
adc
sub
orl
pop
inc
add
push
and
ficompl
jns
fdivs
aaa
cmpsl
pop
or
sub
mov
add
daa
inc
outsb
shll
clc
mov
pop
incb
ret
test
inc
fwait
cmpsl
rdpmc
enterw
pop
jne
sub
fwait
xchg
orb
aam
and
pop
or
cli
scas
or
test
sbb
int3
pop
adc
inc
test
shll
jp
lods
aaa
push
jbe
pusha
mov
xor
push
imul
rcll
xchg
rolb
dec
inc
xor
and
fnsave
xchg
cltd
push
jb
sub
dec
sti
add
xor
add
fs
int
std
insb
repz
add
stc
lods
cmp
clc
or
fisttps
mov
push
lea
inc
jg
bound
and
push
imul
sub
out
adcl
dec
xchg
push
mov
test
pop
xor
shl
xorb
push
xchg
jg
test
inc
jo
sub
adc
int
cmovbe
and
lcall
mov
adc
fcoms
in
adc
mov
push
pop
pop
xchg
or
dec
mov
adc
or
pop
repnz
stos
xor
in
push
inc
mov
push
mov
inc
je
dec
mov
ljmp
mov
aam
xor
xor
sbb
pop
jbe
sub
pop
cmp
rorb
or
jo
sbb
push
nop
insl
push
mov
push
mov
pop
mov
adc
addb
push
shlb
pop
inc
sbb
add
inc
lea
or
or
xchg
outsb
jo
out
rcll
push
cli
sbb
insb
cs
ja
xor
and
inc
ret
sub
enter
outsb
or
hlt
test
ss
jmp
leave
add
sub
sbb
push
cmc
mov
mov
xchg
add
lea
inc
in
nop
dec
xchg
cmp
or
in
lods
pop
mov
pop
sub
stos
push
xor
das
and
mov
or
sbb
push
pop
sub
add
push
sub
add
cmpl
xchg
and
add
sbb
mov
and
imul
dec
xchg
lods
adc
cli
lods
inc
shlb
lods
jae
or
mov
nop
mov
adc
lods
or
imul
add
mov
adc
add
test
or
sub
sub
in
scas
or
cmp
sbb
and
xchg
stos
inc
sahf
test
rclb
add
cld
inc
push
mov
es
mov
xor
inc
or
xor
xchg
cmp
push
hlt
adcl
push
cmp
mov
test
push
hlt
rorb
xor
dec
and
lock
insl
and
incl
adc
iret
rcr
sbb
and
inc
cwtl
pop
cmpl
mov
mov
je
push
addl
jg
push
lret
movq
addr16
aaa
sbb
dec
mov
adc
jp
cmp
mov
int
pusha
jl
cmp
sarl
or
jl
jb
divl
dec
dec
decl
xchg
test
xchg
out
dec
dec
orl
push
or
or
mov
or
cld
inc
push
xor
fsubrl
dec
in
inc
sbbb
movsb
sbb
inc
xor
lock
or
sbb
add
mov
dec
es
mov
sbb
mov
xor
fimull
lods
push
fs
add
sub
inc
repnz
cmpsl
push
sub
pop
test
mov
les
movl
xchg
or
and
sbb
or
inc
cmp
pop
sub
orl
and
push
pop
cmp
xchg
scas
movsb
jns
or
dec
sub
pop
jo
xchg
popa
js
xor
sub
sti
adc
dec
push
mov
fbld
xchg
fnstsw
test
or
aas
or
cmp
adc
mov
adc
mov
or
es
sub
inc
add
ret
xor
inc
fucomip
adc
add
sub
adcl
dec
outsb
xchg
add
cwtl
iret
cwtl
inc
add
inc
adc
inc
lret
and
xchg
cmc
fsts
dec
push
test
cmp
mov
and
test
andb
or
sub
and
push
jmp
or
mov
daa
sbb
sbb
sbb
andl
push
mov
test
or
outsb
pop
push
dec
ds
sbb
add
loop
add
js
jns
sub
dec
incl
andl
cld
in
sbb
mov
and
xchg
rorb
test
push
or
dec
or
add
pusha
push
push
jmp
mov
mov
xchg
xchg
inc
lods
or
and
xchg
sahf
or
and
lea
or
push
xor
mov
adc
popa
mov
hlt
push
enter
in
dec
mov
je
sub
sub
push
imul
call
xchg
or
and
mov
mov
imul
push
mov
xchg
inc
push
loop
jmp
inc
mov
pop
aas
push
mov
xlat
jb
lea
push
lea
sbb
mov
movsb
adc
shrl
or
sbb
mov
sbb
pusha
or
nop
les
push
insl
je
movsl
movb
and
sbb
sbb
inc
and
add
shlb
addl
sub
insl
mov
xor
xor
test
data16
in
mov
pop
xor
mov
lahf
xchg
push
mov
jne
mov
sub
xchg
cmpsl
cmp
sbb
add
jmp
dec
lea
cmp
jp
lds
scas
pop
jne
dec
jo
push
jo
push
push
push
dec
pop
mov
or
or
adc
inc
mov
push
dec
inc
sub
jnp
ret
cltd
int3
loop
repnz
mov
push
push
mov
ret
or
and
and
sbb
xchg
xchg
inc
xchg
imull
inc
sbb
sbb
and
addl
pop
sbb
insb
adc
adcl
mov
inc
inc
sbb
xor
cltd
jo
push
cmp
cmp
lret
sbb
xor
negl
popa
sbb
and
jno
scas
push
inc
scas
cmp
adc
add
test
cmp
sub
out
xlat
sar
sub
idivl
dec
mov
jg
or
lds
add
inc
stos
mov
shlb
xor
xchg
add
leave
icebp
mov
cs
sbb
mov
jno
mov
mov
movsl
adc
mov
stc
push
inc
loope
mov
mov
add
jg
xchg
xchg
inc
sub
ds
aad
jne
into
test
lock
mov
rolb
pop
inc
fnstsw
insb
das
mov
and
mov
mov
lcall
push
pushf
pop
inc
or
int3
daa
nop
inc
pop
je
adc
sahf
push
push
pop
mov
add
inc
push
inc
mov
adcb
pop
inc
dec
fwait
inc
mov
xchg
lods
xor
dec
dec
lods
sbb
inc
pop
mov
repnz
pop
loop
cmp
scas
xor
or
fs
cli
ljmp
push
jne
test
daa
xor
push
sbbb
xchg
test
insb
xchg
test
popa
xor
rcl
push
pop
out
mov
pop
pop
xchg
addb
and
sub
xor
sbb
dec
dec
aaa
push
xor
mov
shll
inc
sub
enter
push
enter
xchg
mov
jne
dec
inc
hlt
mov
pushf
fs
insl
mov
les
insl
inc
pop
jbe
push
out
movsb
xlat
mov
or
dec
movl
pop
sub
cmp
ret
aas
outsb
test
xorb
xor
jb
xorl
mov
mov
xchg
pop
add
jnp
aam
dec
and
insl
fsts
xor
sbb
mov
loop
inc
in
or
testb
cmp
push
pop
or
shrb
test
adc
cmp
push
imul
push
fs
push
add
cmp
xor
cmp
das
add
push
lret
adc
psubq
mov
push
mov
jo
pop
stos
lea
pop
mov
ret
xor
bound
or
mov
xorl
adc
out
jge
inc
out
mov
and
std
outsb
scas
in
push
dec
arpl
shrl
cld
jmp
inc
add
cmpsl
shr
sub
xchg
inc
push
cli
add
push
inc
or
xor
incl
inc
fimuls
add
mov
je
test
dec
push
cmp
mov
dec
ja
addb
xchg
add
in
inc
pop
push
xor
jne
popf
push
ret
mov
lahf
and
mov
pop
ret
clc
inc
add
adc
movb
pop
and
mov
sbb
outsb
sub
push
cmpb
mov
data16
lock
test
push
aas
scas
leave
ret
nop
dec
dec
rol
mov
dec
adc
in
pop
dec
or
dec
popf
sub
inc
sbb
and
jl
jae
or
or
int
movsb
cmp
adc
sbb
fdivs
adc
xor
push
imul
xchg
and
lods
fsubrl
adc
aas
dec
sub
and
jae
xor
lods
xorl
mov
inc
jnp
pushw
test
jns
jb
ss
lds
enter
add
dec
stos
sbb
pshufw
pop
add
add
nop
dec
pop
fadds
or
sub
xchg
mov
mov
dec
jmp
xlat
insb
add
mov
dec
pop
int
lcall
inc
je
xor
push
cpuid
or
repz
or
cmp
sub
adc
and
push
or
movsl
cmp
aam
and
inc
lcall
dec
dec
gs
sbb
inc
pop
jo
je
inc
je
js
pop
pop
fs
jl
or
mov
jg
pop
ja
push
popf
test
inc
test
xor
inc
je
add
mov
or
in
ret
call
pop
add
enter
add
add
icebp
add
sub
test
test
sub
in
inc
jmp
jle
mov
jg
sub
jle
sub
dec
or
lea
add
in
iret
xchg
daa
pop
cmc
xor
sub
add
in
rcrl
or
testb
sbb
or
lock
ret
or
rcl
push
out
lret
hlt
xor
nop
pop
mov
pop
es
mov
andb
pop
out
adc
fldl
lock
push
jmp
jge
es
repnz
mov
dec
dec
bnd
jns
in
pop
in
lret
test
dec
enter
cmp
movsl
outsb
leave
mov
in
push
mov
mov
in
dec
sbb
xchg
inc
pusha
je
inc
sub
push
adc
inc
xor
mov
xor
sub
and
and
cwtl
in
add
into
push
data16
rcr
mov
adc
mov
cmp
mov
sbb
addb
add
jne
inc
xor
test
inc
gs
fimuls
insb
enter
shlb
xor
push
sub
in
insb
fucomi
nop
aam
jb
lret
add
inc
icebp
cmp
xchg
xchg
inc
icebp
cmp
jne
mov
pop
adc
fnsave
mov
js
dec
sub
sarl
and
sbb
xor
scas
fucomp
in
jo
cmp
fmull
xchg
into
lahf
sub
xor
or
in
jp
out
cmpb
xchg
mov
inc
out
dec
xchg
add
das
or
mov
hlt
outsb
mov
ljmp
sub
xchg
pop
add
cwtl
inc
push
inc
xor
nop
sbb
cmp
movb
cltd
mov
add
xor
pop
fsubr
push
enter
add
ja
adc
fcoml
pop
add
jns
xor
mov
in
cld
lods
pop
flds
mov
add
repnz
daa
xchg
jl
push
aam
pop
aam
dec
fwait
sbb
push
shl
sbb
add
int3
cmp
pushf
dec
int3
je
add
cltd
in
pusha
enter
ss
mov
pop
push
rorb
inc
les
adc
nop
sbb
mov
xor
pop
mov
add
sbb
movlps
rcrb
dec
add
jmp
mov
sarl
xchg
test
jmp
xor
add
ds
in
cmc
xor
xchg
mov
addl
adc
movsb
orps
test
and
xor
mov
out
scas
pop
into
nop
sbb
dec
push
pusha
into
fs
mov
push
push
fs
push
cwtl
push
leave
dec
push
fs
pop
rcrb
sub
pop
pushf
pop
leave
inc
xor
test
sub
fs
les
aam
shlb
and
add
push
push
test
adc
icebp
cmp
imul
pusha
sahf
adc
imul
add
nop
push
arpl
les
mov
push
add
fwait
fs
xchg
shrb
xor
dec
jp
repnz
fildll
shlb
test
aam
xchg
mov
nop
rclb
nop
aaa
adc
daa
push
cli
adc
jge
test
imul
add
mov
cs
cmp
adc
lret
push
movl
sbb
lcall
cmp
jge
and
xor
add
lea
inc
fcomps
cmc
outsl
das
add
lea
cmp
or
adc
and
je
clc
sbb
rcrl
imul
mov
inc
in
dec
add
xor
cmp
jo
adc
sub
and
or
push
orl
rclb
in
mov
jp
xorl
adc
jl
and
lcall
pushf
xchg
lahf
pusha
and
js
jmp
mov
das
jge
sbb
adc
inc
pop
push
mov
scas
mov
sbb
adc
and
jno
cmp
or
and
or
inc
movsl
xor
add
xor
mov
jne
sub
xchg
mov
outsl
js
fcoms
mov
add
aas
inc
push
je
push
outsl
jne
mov
lods
inc
incb
fnstsw
movsb
enter
lods
popf
imul
xchg
xchg
pushf
cmp
mov
push
mov
shrb
fstps
sbb
loopne
cltd
dec
inc
popa
xchg
inc
movsl
loope
cwtl
push
mov
cli
adc
adc
clc
rcrl
push
mov
ror
add
push
nop
rorb
call
insb
sbb
mov
enter
adc
mov
inc
mov
ficompl
xor
add
push
mov
xchg
pop
push
cs
sub
jnp
outsl
sbbl
mov
enter
or
dec
outsb
dec
ja
pop
mov
stos
incl
inc
xchg
jno
movsb
inc
push
orb
into
and
mov
pop
es
xor
icebp
ret
sarb
adcb
add
mov
push
fadd
mov
loope
mov
daa
mov
inc
mov
adc
mov
mov
jbe
pop
sbb
je
call
inc
dec
or
fwait
punpckhbw
add
roll
xchg
iret
jo
call
insl
loope
or
inc
add
xor
inc
das
popa
outsl
call
or
jne
bound
repnz
add
das
lods
dec
or
out
add
leave
cmp
add
or
fisubl
cmpsl
dec
ds
sub
mov
xchg
inc
repz
sub
push
xchg
shlb
and
adc
inc
mov
sub
push
inc
test
mov
jl
testl
push
rcl
mov
mov
lar
pop
xor
stos
or
incl
jmp
es
sub
test
enter
adc
insl
dec
mov
jmp
dec
jo
and
in
sub
ds
push
loope
and
addr16
in
int
lcall
pushf
aam
iret
adc
stos
into
add
cmp
lea
rdpmc
or
mov
add
loopne
dec
dec
mov
or
xor
sbb
mov
movsb
jne
push
jl
dec
add
cmp
mov
inc
mov
or
or
test
imul
mov
jnp
dec
or
sub
or
sbb
fs
test
adc
gs
or
push
or
adc
and
inc
and
or
xor
add
mov
mov
or
test
rcll
addl
or
loope
lods
xlat
push
lcall
fcmovnbe
mov
ret
dec
xchg
add
jno
jbe
jle,pt
xor
rorb
addr16
xchg
xchg
pop
pop
fmul
xchg
mov
pop
add
dec
pop
or
push
cwtl
mov
and
seta
mov
imul
test
add
fucom
add
push
movsl
jo
xchg
xchg
mov
add
inc
sbb
nop
cwtl
adc
mov
mov
insl
mov
js
lods
xor
push
mov
mov
daa
xor
mov
pop
jb
lock
outsl
jg
or
add
outsb
pop
fdivrl
call
add
sahf
pushf
pop
cmp
fcompl
dec
sbb
pop
or
pop
jo
fcmovbe
add
mov
mov
icebp
jl
pushl
xchg
add
clc
clc
push
leave
arpl
sbb
mov
cwtl
mov
clc
mov
movsb
cwtl
mov
pop
pop
sti
xor
inc
jbe
push
mov
mov
and
addb
push
xor
loop
movsb
pop
movsb
in
cmp
push
push
xchg
jbe
push
aam
shlb
sub
inc
mov
fisttps
popl
and
push
sbb
and
je
popa
or
in
adc
xor
les
ds
cmpb
lea
and
inc
sbb
je
ja
adc
insb
inc
mov
push
pop
fs
cmc
out
cmp
sbb
xor
push
ss
xchg
push
sub
rcrl
add
sbb
outsl
cmpsb
out
pushf
loop
push
dec
les
pop
push
mov
xor
test
xchg
pop
push
mov
xor
and
fld
add
dec
or
cs
dec
push
leave
lods
or
xor
dec
and
push
jmp
sub
xchg
lds
test
or
sbb
popa
cltd
inc
mov
jmp
ja
jg
cmp
out
mov
bound
cmpsb
out
test
push
add
add
mov
xor
sbb
popa
mov
sbb
jbe
add
add
sahf
fadds
sub
iret
cmp
orb
imulb
jl
sbb
cmp
dec
adc
push
cmpl
dec
mov
push
cltd
outsb
in
xchg
leave
shll
out
orb
in
mov
mov
pop
adc
int3
dec
jecxz
nop
faddl
in
imul
les
mov
or
subb
fbld
test
add
mov
arpl
or
stos
int
adc
mov
sbbl
xchg
js
loop
lods
mov
push
inc
js
adc
xor
lock
push
cmp
shlb
sub
imul
xchg
movsl
call
pop
lea
pop
mov
inc
dec
jne
inc
lret
xchg
rolb
push
add
ret
lret
dec
dec
mov
pop
add
pmulhuw
dec
aam
add
jns
cmp
ret
ret
cmp
test
daa
and
loopne
add
cmpsb
sub
mov
xchg
fisttps
jecxz
sbb
push
outsb
fidivl
sub
push
shll
imul
xchg
pop
pop
scas
in
push
orl
or
out
or
dec
or
and
bound
aam
add
jne
ljmp
sub
popf
ja
add
or
adc
sbb
shlb
sub
mov
and
fs
pushf
and
xchg
hlt
pop
sbb
dec
push
dec
shl
dec
dec
sub
mov
lcall
dec
cmp
orl
adc
clc
ret
rcll
jns
movsl
xchg
xor
push
and
in
xor
mov
sub
hlt
lret
stos
ret
jmp
insb
push
into
das
inc
or
fistpll
dec
adc
outsb
push
aad
jmp
fs
not
dec
enter
insl
mov
sub
cmc
push
jo
push
sbb
gs
inc
inc
or
ret
out
lods
cmpsb
jge
sbb
popf
in
shrl
pop
mov
lahf
dec
pushf
dec
adc
out
mov
add
and
incl
aas
mov
les
jo
and
add
jne
cltd
add
xor
out
loopne
xor
enter
mov
and
adc
stos
icebp
arpl
and
cmpb
adcl
pop
dec
push
pop
jb
bound
and
and
mov
pop
xchg
and
xchg
mov
inc
jle
repz
mov
xlat
in
lds
jno
adc
mov
jmp
insl
and
dec
call
fwait
rclb
and
dec
das
subb
daa
mov
shll
into
xor
and
and
pop
int3
outsl
or
sub
aam
sub
push
js
es
mov
xchg
out
in
jns
out
frstor
addl
fs
sahf
jmp
rclb
nop
and
outsb
jns
lods
pusha
push
sub
adc
sbb
call
testl
sbb
sbb
dec
popa
and
sbb
sub
jecxz
loope
or
xchg
or
aaa
into
cmpsl
dec
xchg
mov
pushf
ljmp
clc
sbb
xor
xor
xchg
icebp
stos
lds
add
stc
cmp
add
inc
imul
pop
dec
mov
mov
push
push
popa
movsb
andb
les
adc
ja
js
add
adc
popa
popa
inc
ret
cmpsl
js
loopne
mov
mov
adc
sbb
subl
fmul
dec
fstpl
add
xor
arpl
or
cmpsl
add
and
jno
enter
pop
mov
mov
inc
roll
es
in
cld
mov
push
in
mov
inc
sbbl
out
int3
call
or
daa
and
adc
punpckhwd
mov
jg
test
sbb
and
stc
js
popl
dec
dec
mov
pop
push
mov
jp
test
pop
inc
mov
notl
hlt
lea
or
push
push
inc
sbb
sub
dec
pushf
push
insb
pop
add
or
adcb
and
and
xor
insb
mov
in
scas
xor
hlt
pop
rol
adc
jnp
jmp
sub
ret
mov
inc
pop
addl
sti
add
xlat
js
jg
roll
jns
ljmp
cmpsb
nop
in
std
in
adc
and
ds
push
aas
xchg
out
movsb
orb
cmpl
xchg
scas
popa
mov
jne
mov
std
ja
cmpl
lret
jno
and
and
mov
call
xchg
aam
add
and
add
test
lea
aad
xchg
cmp
push
mov
pusha
sub
ret
lock
adc
fstl
adc
out
out
adc
out
leave
rorb
mov
ret
ret
icebp
mov
mov
push
gs
cwtl
sbb
jno
cwtl
rcl
sub
mov
add
push
xor
dec
repnz
mov
cmpsl
aad
icebp
pushf
imul
or
cmp
mov
mov
sub
add
adc
xchg
sub
adc
add
jecxz
jne
add
in
mov
rol
lock
xor
inc
test
sbb
cmp
jo
addb
xchg
adc
add
fists
subb
in
cli
in
mov
sub
pushf
outsl
in
or
aad
xchg
and
lock
and
cltd
imul
or
icebp
and
mov
add
rolb
add
shlb
test
xchg
xor
xlat
out
or
inc
inc
add
xchg
mov
or
cmpl
cmpb
lahf
mov
cmp
and
pop
test
or
sub
cmp
mov
add
iret
xor
popa
mov
cld
into
cmp
daa
jmp
jo
dec
pop
sbbb
adc
xchg
sbb
mov
add
add
push
sub
or
insb
scas
inc
and
jne
aas
ss
mov
daa
adc
pop
repnz
add
fucomi
push
aam
mov
mov
push
and
sub
sub
int3
mov
enter
and
hlt
nop
sbb
push
dec
add
enter
fwait
lock
loop
out
lea
stc
outsl
sub
push
insb
jnp
sbb
sbb
imul
popa
test
and
idivw
arpl
mov
pop
cld
jl
inc
jo
jne
ja
add
mov
pop
out
and
icebp
test
lock
inc
call
int3
fbstp
adc
cmc
clc
adc
xchg
sub
jb
push
ret
xchg
std
xlat
xor
cmp
jnp
sbb
ss
cmp
add
mov
imul
sub
add
cmp
in
add
xchg
or
shlb
adc
add
rcll
mov
push
fcomip
rolb
mov
xor
adc
sarl
add
and
dec
cmpb
inc
xchg
push
fsts
mov
mov
je
test
call
cmp
jae
add
xor
and
sub
inc
inc
lret
xor
push
ret
idivl
pop
xchg
jmp
sbb
stos
xor
adc
jg
addl
add
jl
adc
mov
mov
push
inc
inc
or
ljmp
jmp
add
and
lock
jmp
sahf
xlat
pop
xchg
pushf
inc
sarl
pusha
lahf
and
and
clc
pusha
js
pusha
daa
loope
adc
pop
push
inc
sbb
push
in
daa
xchg
push
lahf
pop
fsubrs
ja
nop
adc
sti
je
pop
icebp
add
mov
pop
sti
adc
or
dec
mov
mov
lret
loopne
loop
and
and
inc
das
cmp
or
sub
xor
xchg
test
push
ss
rorl
inc
das
add
icebp
adc
add
pop
xor
dec
and
adc
fmull
xor
notl
cmc
cli
mov
pop
jl
int
sub
xchg
jecxz
mov
xchg
clc
xchg
dec
popf
dec
test
push
les
loop
cmp
loope
jl
add
xor
les
ljmp
cmpsl
sub
inc
leave
and
daa
dec
push
adc
rclb
fdivrl
sbb
add
sarb
int3
dec
or
sub
push
cmpsl
lock
test
cmp
fdivr
xchg
nop
out
cmp
sub
mov
movsl
clc
ficomps
cmpsl
inc
stos
in
inc
pusha
cwtl
jmp
add
add
repnz
test
test
sbb
testl
and
cld
aas
fs
xchg
cmp
cld
fs
mov
pop
mov
add
push
cmp
adc
inc
xchg
inc
add
push
push
loope
add
loopne
xor
rolb
pop
and
sub
or
fmulp
pop
cmp
dec
xchg
xchg
add
pop
mov
adc
js
inc
xchg
addr16
imul
mov
inc
adc
insl
or
lret
js
outsl
push
adc
dec
mov
test
sbb
cwtl
xchg
imulb
add
sbb
cmc
std
cmp
jne
cmpb
pusha
mov
xchg
jge
mov
mov
mov
jmp
call
dec
dec
and
pop
mov
fwait
inc
shlb
push
sub
sub
jne
ficomps
out
push
push
jmp
xor
mov
cmp
mov
jne
cmp
cmp
add
sbb
sub
loopne
xchg
insb
lock
xchg
sub
sub
dec
push
jmp
pusha
fs
je
pop
loopne
xor
cmovge
sbb
cmpsl
cwtl
pusha
clc
adc
sahf
push
push
cmpsb
add
fcomps
inc
adc
roll
jb
pop
adc
jnp
add
cwtl
scas
inc
hlt
loope
xchg
mov
nop
mov
dec
xchg
push
clc
adc
xchg
addr16
or
mov
lret
xlat
add
add
leave
and
dec
gs
xor
xor
inc
xor
add
xor
je
cmp
inc
sub
cmpsl
pop
loopne
pop
mov
add
inc
add
jnp
sub
je
push
aaa
and
das
clc
cs
outsb
je
je
daa
hlt
hlt
or
sub
rcl
iret
or
aaa
sub
push
lret
mov
mov
pop
sub
push
repz
xor
imul
cmpsb
loopne
or
dec
jne
inc
roll
push
inc
in
addr16
and
mov
cmp
mov
fiaddl
ret
imul
loopne
fwait
pop
add
cmpl
xor
cmc
mov
pop
mov
sub
xlat
rolb
movsl
test
test
pop
dec
dec
fwait
loop
pop
cmp
mov
pushw
mov
or
loope
icebp
in
clc
jmp
std
hlt
test
sub
lds
insl
dec
xor
jne
popa
cltd
imul
mov
orl
add
lods
cmpsl
adc
push
imul
mov
jnp
add
aam
push
iret
xor
dec
loopne
fsts
insb
insb
andb
adc
xchg
movsl
adc
push
adc
in
push
dec
mov
outsl
sub
push
mov
out
pop
orl
add
cmp
hlt
les
xchg
sbb
mov
ret
mov
add
mov
fs
adc
and
je
jae
add
push
and
sub
jne
mov
insl
pusha
inc
aaa
mov
sub
and
adc
test
mov
jae
mov
setb
push
imul
dec
and
aaa
add
push
js
push
push
clc
push
jb
push
cmpsl
daa
repz
lcall
shlb
lret
pushf
mov
dec
sub
xlat
pop
xor
jge
cmp
inc
push
cmp
sub
and
xchg
push
pushl
adc
test
outsb
mov
icebp
aam
ds
or
int3
mov
lods
or
sbb
xchg
push
pop
jmp
pop
xchg
inc
xchg
mov
push
ljmp
inc
fdivs
ljmp
adc
inc
adc
push
pop
add
sbb
arpl
inc
pusha
out
leave
nop
testb
xor
mov
mov
dec
or
roll
push
inc
out
testb
ss
inc
or
xor
nop
das
mov
mov
or
adc
cmp
push
xchg
and
fdivs
mov
test
push
xchg
pop
jo
mov
aaa
pusha
push
ja
mov
push
loope
insb
into
imul
cmpsl
add
and
or
and
or
cs
mov
or
add
aam
cmp
xlat
mov
fmull
push
shll
outsl
xor
test
push
es
sub
or
es
sub
stos
fwait
push
mov
shll
or
mov
add
mov
or
cs
sbb
pop
pusha
sub
pushw
mov
mov
push
xor
in
mov
jne
mov
loopne
mov
sub
dec
or
inc
mov
add
cmpsl
xchg
or
jae
scas
scas
add
mov
mov
adc
or
add
inc
dec
jne
ja
and
jl
sbb
popl
js
insl
push
in
dec
pop
inc
add
in
xor
or
add
repz
je
add
add
into
cmp
xor
cmp
pop
in
xor
mov
inc
loope
movsl
clc
push
and
pop
sub
jmp
call
sub
or
or
jp
cmc
push
mov
js
push
out
mov
and
movb
cmp
orl
mov
fisubs
loopne
sub
add
sbb
add
iret
fwait
in
iret
xor
inc
fcompl
cmp
add
cmp
xor
and
sub
ss
sub
dec
jb
mov
inc
daa
fcmovnu
sbb
jb
aas
shll
fidivrs
adc
shl
jge
sbb
sbb
or
shll
sbb
sbb
push
incl
and
dec
mov
clc
add
jg
mov
mov
add
setnp
inc
ljmp
shrb
ret
aas
les
sub
xorl
in
mov
push
or
adc
fdivp
loop
jmp
add
jns
out
adc
insb
imul
sub
cmpsl
jecxz
xchg
or
in
mov
sub
dec
cmp
jecxz
xchg
out
inc
sbb
cwtl
sbb
push
or
fcmovbe
push
js
push
mov
and
add
adcb
adc
mov
add
sti
movl
add
inc
mov
xor
push
cmp
shrl
loopne
push
dec
decb
inc
mov
cpuid
xor
das
dec
orb
jg
sbb
and
pop
mov
mov
add
cmp
jns
xchg
flds
and
pop
adc
mov
sub
jge
adc
jmp
aaa
xchg
test
xchg
push
pop
xchg
push
or
add
shll
cmp
adc
xor
and
and
in
sbb
test
adc
pop
mov
dec
cmpxchg
inc
adc
push
mov
xchg
xor
inc
xor
jo
push
or
sub
jbe
mov
bound
addr16
imul
jo
insb
loope
jno
jae
jne
ja
jns
xor
dec
inc
loope
pushf
adc
lcall
xchg
inc
or
cmp
ja
mov
xchg
hlt
arpl
xor
daa
rclb
cli
callw
adc
mov
inc
mov
xor
aaa
je
pop
inc
or
pusha
inc
pop
xor
pop
push
fisttpl
test
int3
push
call
dec
cmpsl
fisubs
pop
push
push
testb
dec
adc
inc
std
add
sbb
xor
or
sbb
adc
push
dec
adc
lcall
pop
or
nop
dec
imul
push
dec
push
xor
dec
aaa
subl
xor
fadds
sbb
jo
mov
dec
adc
add
or
sub
gs
adc
gs
lcall
ds
or
cmpsl
andps
push
adc
jo
sbb
add
popa
or
cmp
addr16
dec
jge
push
adc
rorb
push
pop
push
rclb
dec
ror
or
mov
movsl
mov
dec
enter
sbb
cmp
sbb
mov
pop
pop
sub
and
dec
and
jo
mov
push
test
jno
pop
lret
test
or
push
outsb
xchg
lea
rclb
aaa
aad
dec
xor
out
fdivs
bound
jne
data16
shll
incl
fistps
mov
xlat
xor
mov
pushf
or
ret
xchg
test
scas
xor
test
push
adc
push
jmp
xchg
or
iret
scas
pop
sub
and
ss
jae
inc
dec
dec
sbb
mov
dec
or
clc
pop
aad
ljmp
shr
aas
mov
xlat
dec
add
inc
add
adc
push
add
jne
int
sub
rcl
sbb
dec
and
addl
jmp
or
sbb
jo
add
pushf
jne
cmpb
sub
les
push
dec
idivb
inc
test
jb
inc
in
and
leave
push
mov
test
mov
mov
sub
mov
icebp
jns
sub
pop
pop
js
enter
and
dec
lock
pushf
loopne
pop
mov
and
sbb
aam
sbb
mov
dec
and
push
into
pop
sarb
adc
lea
insb
pusha
addl
mov
and
sbb
mov
loope
jle
mov
sbbb
aaa
inc
sbb
inc
fs
xor
xor
xchg
push
adc
or
mov
ret
mov
loop
fistpl
iret
ss
sub
add
cmc
fdivl
and
lret
lock
cmp
inc
in
and
push
movsb
sbb
sbb
pop
adc
dec
nop
xchg
addl
jmp
push
fs
iret
sub
das
xor
pop
mov
scas
cld
adc
add
add
fbld
mov
lds
aam
stos
cltd
clc
xor
test
cmp
sub
bound
aam
fidivs
dec
inc
xchg
aaa
pop
int3
sbb
mov
clc
push
xchg
and
cs
jle
dec
sbb
pop
fwait
and
fs
rcrb
scas
mov
iret
mov
mov
data16
scas
and
test
push
and
pop
adc
arpl
jo
jo
adc
sub
pusha
rorb
pop
xor
imul
dec
faddl
out
incl
jae
inc
fcoms
mov
adc
sub
lea
mov
sbb
adc
pusha
test
lea
add
lahf
rorb
or
popa
addr16
jbe
pop
dec
jmp
aaa
pop
or
xor
jl
and
cmpb
movsb
jns
jmp
and
cmpl
adc
movsl
adc
jle
pop
and
sub
dec
or
data16
sub
push
dec
sub
scas
jmp
imull
call
or
or
bound
jae
adc
dec
out
adc
push
or
gs
sbb
xchg
mov
in
adc
cs
jge
and
mov
push
adc
or
dec
scas
jmp
jb
insl
popa
pop
push
pop
push
push
test
add
adc
sub
shrb
push
or
mov
js
imul
cmp
test
pop
cmp
cmp
xchg
sbb
adc
subb
or
daa
pop
or
fs
dec
dec
push
dec
ficoml
xchg
lcall
adc
sub
jno
lods
bound
hlt
pop
setns
test
addl
push
cmp
ficoms
or
cmp
push
lods
sub
sub
mov
or
fadds
pop
cs
pusha
out
adc
faddl
pop
je
addl
lret
sbb
push
addr16
sbbb
add
stos
sub
mov
test
addb
imul
push
push
add
ret
adc
sub
mov
lds
push
dec
mov
pop
push
pop
adc
jl
push
nop
inc
xchg
adc
sbb
xlat
adc
fs
adc
mov
scas
add
sub
adc
pop
push
and
push
xchg
outsb
lsl
push
mov
and
movsl
outsb
and
je
repz
pop
sbb
mov
push
nopl
jg
mov
and
adc
xor
cmp
push
sub
add
lock
mov
roll
js
mov
frstor
sbb
fisttpll
dec
inc
and
js
mov
sbb
adc
gs
in
cmp
aaa
push
icebp
cwtl
pusha
sbb
xchg
mov
in
push
add
pop
mov
xchg
and
mov
leave
insb
les
loope
mov
sub
jmp
test
dec
cmpsl
inc
and
test
xor
imul
xchg
or
add
dec
lods
and
ljmp
sub
in
out
dec
and
sub
jnp
nop
sub
or
sub
mov
cmp
cmp
inc
add
mov
inc
inc
subb
bound
pop
push
add
and
rcrb
adc
in
iret
jnp
or
sysenter
inc
mov
div
lret
adcb
mov
add
xchg
das
push
push
xchg
dec
lret
daa
and
fadds
gs
mov
push
bound
dec
out
outsl
rol
lock
in
mov
sbb
mov
sbb
outsl
shr
xor
mov
lss
mov
sub
lock
dec
inc
push
ret
pop
repnz
popa
testb
fdivrs
fildll
cmp
pop
xor
aam
inc
outsb
push
inc
sarb
cs
inc
je
cmp
int3
mov
movsb
jb
imul
rcll
cmp
sub
cli
fmull
xchg
loopne
or
sbb
and
inc
les
cs
adc
ffreep
rorb
cld
pusha
cmp
mov
xor
pop
frstor
inc
mov
or
mov
imul
cs
lcall
enter
fstl
inc
jnp
push
aaa
ret
mov
xor
addr16
jbe
xchg
addb
sub
pop
lds
add
inc
movsl
pop
and
sub
mov
adc
aas
lret
mov
dec
push
setno
mov
mov
enter
mov
mov
add
adc
jnp
or
shll
add
push
cwtl
shlb
testb
add
mov
mov
sub
les
cmpsl
mov
pushl
pop
and
pop
pop
jge
outsb
test
push
jbe
cmp
cmp
push
dec
xchg
cmp
in
jmp
dec
dec
mov
test
inc
push
inc
or
adc
cmp
std
dec
add
sub
xor
and
divb
aaa
push
lods
push
cltd
hlt
sbb
arpl
pop
or
push
outsl
aas
lods
push
mov
xor
add
sub
popa
js
add
xchg
roll
pop
daa
sbb
aas
and
xchg
add
jns
add
jb
sub
and
mov
lahf
fld
push
test
adc
mov
or
adc
jo
sub
sti
and
pop
xor
sbb
sub
cld
jmp
movsl
pop
clc
adc
push
mov
sub
in
sbb
inc
dec
xchg
push
insl
or
pop
pusha
pop
mov
push
jmp
rol
mov
pop
xchg
mov
and
sub
adc
ja
add
mov
sub
adc
shll
push
pop
push
loopne
sbb
push
xchg
dec
enter
xchg
outsl
cmpsb
repnz
mov
das
lods
add
ja
jo
insl
xor
inc
push
xor
push
jo
enter
pop
mov
pop
in
nop
or
das
js
xor
lss
fs
shlb
add
xor
jo
in
test
pop
or
xor
fwait
cmp
das
sub
add
jne
xchg
inc
ficoms
xchg
inc
rorb
add
adc
divl
mov
lds
dec
jb
out
push
sub
aas
das
rdtsc
and
sub
iret
call
push
adc
dec
add
pop
fsubl
scas
sub
out
test
dec
lret
jnp
jg
in
cmp
lods
adc
nop
gs
pop
pop
pop
nop
gs
gs
inc
xlat
inc
mov
mov
divb
jl
icebp
and
push
mov
cli
add
add
lds
int3
ja
add
jg
pop
aaa
sub
sub
sub
es
adc
and
jp
popa
das
xor
mov
and
das
insl
jo
jmp
cmp
repz
dec
pop
jb
ljmp
sti
dec
cmc
and
sbb
or
sbb
pop
shll
js
lar
xor
nop
pop
fs
xor
push
in
cmp
mov
jns
pop
mov
inc
push
fs
invlpg
nop
insb
jo
jl
repnz
test
xor
adc
into
inc
inc
mov
mov
jnp
mov
dec
or
adc
mov
cmp
test
mov
sub
in
in
mov
je
adc
int3
mov
jmp
xchg
in
inc
mov
jno
pusha
add
mov
int
je
jo
iret
and
je
cmpb
dec
lds
inc
idiv
mov
int
je
mov
push
dec
es
rorl
adc
jmp
movsb
sbb
stos
inc
jecxz
inc
add
mov
ja
pusha
or
lea
dec
add
ror
push
bound
sub
sub
jae
jg
cwtl
test
les
add
test
xor
das
adc
push
pusha
sbb
pop
daa
pop
inc
cs
mov
shrb
mov
pop
in
pop
pop
pusha
enter
daa
and
xchg
adc
ret
and
daa
int
mov
in
pop
sbb
in
xchg
aaa
call
push
orl
in
jmp
cmp
pusha
ja
pusha
ret
loop
pusha
repnz
xor
pop
xchg
cwtl
dec
xchg
lods
sub
imul
or
inc
sub
push
push
xchg
or
push
testb
mov
sub
xlat
das
popa
adc
stos
jg
mov
lods
xchg
imul
mov
rcrl
or
jns
pusha
outsb
outsl
mov
xchg
pop
popa
jg
jmp
ret
dec
ds
inc
es
cmp
xor
adc
sbbb
xchg
xchg
mov
mov
sub
lods
sbb
mov
mov
push
inc
repnz
sahf
cmp
xchg
leave
aam
out
sub
sub
cmc
nop
ja
in
cmp
cmp
push
sbb
cmp
cmp
mov
lods
inc
pop
or
das
inc
fists
push
es
adc
push
mov
sbb
mov
in
dec
hlt
and
inc
sub
sub
xor
xor
cmp
cmp
inc
mov
cltd
in
inc
cmc
sbb
dec
and
dec
imul
push
rcrl
pop
les
sahf
dec
sahf
pusha
call
and
and
iret
and
jo
je
and
and
js
jl
and
and
sbbb
iret
mov
mov
xchg
out
iret
nop
add
xchg
sbb
addr16
addr16
cmp
pop
xchg
addr16
addr16
nop
xchg
addr16
addr16
lods
enter
mov
mov
inc
leave
xor
jae
and
shlb
repnz
repnz
mov
stc
dec
repnz
shl
aam
inc
jns
jns
fdivrs
fcompl
mov
out
js
in
nop
lret
es
call
sbb
lock
sbb
xchg
mov
cld
or
inc
xchg
notb
push
dec
xchg
mov
dec
or
or
cmp
cmp
adc
adc
sahf
inc
ds
pop
and
dec
sahf
sbb
push
mov
pushf
push
xchg
cmp
sub
cmp
xor
xor
dec
mov
sahf
inc
cmp
cmp
cmp
cmp
sbb
add
dec
or
jecxz
cmp
and
out
jnp
and
sub
and
and
daa
and
cmp
daa
and
and
inc
add
sahf
daa
and
push
ljmp
pop
rorb
dec
inc
pop
ret
pusha
mov
inc
dec
inc
fs
dec
inc
insb
jo
dec
inc
dec
inc
je
js
dec
inc
dec
inc
jl
orb
dec
inc
test
xor
inc
dec
inc
mov
nop
sbb
dec
inc
xchg
or
dec
inc
pushf
repz
mov
pushf
mov
pushf
mov
pushf
mov
pushf
mov
jno
fs
mov
pushf
mov
pushf
mov
sahf
mov
add
sbb
jns
out
hlt
loop
and
nop
sbb
add
daa
and
and
mov
daa
and
mov
daa
and
xchg
jle
enter
and
insb
sub
inc
sub
arpl
adc
xor
enter
xor
gs
xor
cmp
pop
inc
xchg
sub
into
int3
insb
rclb
adc
test
push
mov
out
insb
imul
mov
jae
insb
pop
jle
call
scas
push
pop
pop
jae
int3
jmp
gs
aas
or
testb
data16
xchg
and
fnstsw
sbb
or
aas
pop
push
jb
adc
lods
inc
or
imul
dec
mov
mov
push
adc
clc
subl
pop
gs
aad
inc
push
adc
adc
je
xor
and
sbb
xchg
test
pop
adc
ficomps
and
pop
jmp
aaa
pop
adc
cltd
lcall
adc
or
pop
fadds
bound
adc
fs
adc
and
mov
fistpl
frstor
pop
xchg
or
lcall
or
packuswb
pop
inc
bound
ja
sbbl
mov
xor
adc
or
xchg
cs
xor
mov
adc
jae
fcomp
inc
fidivrl
ficompl
inc
push
xchg
and
xor
add
sbb
mov
push
pop
mov
andl
xor
adc
aaa
push
sub
mov
pop
out
imul
lods
mov
ljmp
aas
adc
scas
inc
stc
insb
xchg
mov
testl
mov
subb
push
push
pop
aaa
outsw
sbb
push
sbb
sub
fs
push
stos
pop
es
xor
push
dec
push
inc
or
lcall
push
mov
fbld
dec
dec
dec
push
imul
sbb
inc
adc
test
xor
outsl
outsl
jo
inc
cmc
push
pop
rcll
dec
inc
dec
insl
cmp
ret
les
push
icebp
xor
cs
shl
and
add
jg
lods
lea
cmp
inc
aas
ud1
or
popf
es
inc
dec
notl
les
xor
xlat
loop
or
pop
jg
mov
inc
add
sbb
xchg
and
inc
jae
repnz
addl
rolb
pop
notl
xchg
jo
mov
cmpb
pop
ja
jae
fs
nop
cmpsl
rcr
sbb
punpckhwd
fiadds
bound
outsb
jns
sub
add
aas
mov
das
imul
dec
addr16
das
xor
pop
adc
pusha
test
mov
cmpl
inc
xchg
inc
jae
xchg
dec
pusha
jg
or
dec
push
dec
inc
push
movsb
sbb
dec
aam
imul
mov
cwtl
push
lret
jno
sti
mov
push
mov
ss
sbb
jno
or
lock
nop
push
push
pop
pop
adc
inc
sbb
and
and
mov
out
push
sbb
inc
push
leave
sbb
jmp
adc
call
cmp
ss
add
sub
jg
test
add
mov
mov
mov
jb
add
call
and
mov
sub
xchg
push
dec
and
cmpsl
inc
and
fcmovbe
into
aam
int3
mov
inc
push
out
nop
ret
push
es
xor
push
fwait
ret
jnp
aaa
xlat
inc
and
dec
std
leave
add
add
jb
sbbl
pop
xor
and
je
and
xor
pop
lods
sbb
and
in
xchg
pop
xor
and
sbb
and
push
push
mov
jno
ss
sub
or
jbe
imul
xor
adc
or
and
out
fnstsw
mov
xor
int3
sub
pop
outsb
push
clc
inc
jae
mov
sub
std
mov
mov
mov
dec
jb
fcompl
out
fsts
mov
adc
push
jae
adc
xor
dec
outsl
and
xor
mov
jo
sub
xor
cmp
push
adc
add
inc
jl
inc
stos
add
leave
mov
fdivrs
mov
dec
add
or
push
scas
fisttpll
insb
dec
pop
pop
or
pop
cltd
adc
adc
call
cmp
cmp
xlat
dec
rclb
xchg
mov
mov
push
and
add
pusha
add
xchg
add
mov
invd
or
mov
mov
orl
xchg
push
mov
add
or
adcl
add
rcr
add
lahf
or
mov
or
mov
or
repnz
loope
cmp
sti
adc
push
sbb
scas
jecxz
inc
add
add
adc
inc
mov
inc
loope
xchg
inc
imul
add
or
dec
bound
pop
lds
pop
daa
jbe
stos
imul
cmpsb
mov
pop
not
inc
and
divl
sar
add
push
inc
and
das
clc
insl
inc
shlb
dec
mov
in
bound
rcrb
xchg
cld
xchg
shlb
test
arpl
aam
pop
and
outsb
fs
je
fstps
push
test
cmp
hlt
data16
lcall
push
mov
push
adc
adc
xchg
pop
cmp
ds
cwtl
iret
push
ja
mov
lods
test
push
xchg
mov
push
adc
or
or
test
lea
movsb
imul
or
nop
fcoms
push
testb
nop
xor
inc
repnz
hlt
dec
shrb
punpckldq
pop
js
push
lcall
inc
bound
adc
rorl
pop
cmp
mov
add
add
stos
sbb
adc
pop
adc
pop
ljmp
push
les
lahf
pusha
addr16
push
jo
insl
mov
enter
cmpsb
jp
xchg
cs
jle
aas
and
and
sbb
inc
xor
out
outsb
push
mov
xor
aas
iret
inc
or
in
sbb
mov
xchg
dec
mov
in
jg
adc
flds
mov
fistpll
mov
ljmp
push
and
outsl
pop
pop
les
rcrl
xlat
push
dec
xorb
sub
inc
enter
lods
mov
pop
jb
mov
xchg
sbb
or
test
insb
adc
mov
bound
aas
das
iret
xchg
fildl
push
int3
xchg
iret
hlt
inc
push
inc
xchg
pop
mov
pop
pop
aas
and
jb
push
fwait
mov
xchg
mov
aas
das
sbb
ret
sub
add
dec
mov
pop
pop
sbb
mov
rcr
int3
push
and
lret
mov
inc
push
inc
xchg
inc
leave
push
call
or
adc
nop
in
and
rorl
inc
stos
jg
loopne
mov
sub
jge
das
mov
and
mov
xchg
dec
loopne
ret
rorb
and
add
xchg
sub
mov
shlb
addr16
add
mov
adc
lea
andl
stos
pusha
arpl
sti
pop
and
jge
adc
cmpsb
cmp
add
cmpsb
adc
or
pop
sub
push
pop
adc
push
cmp
jbe
pop
daa
movl
test
clc
imul
xchg
jge
insb
dec
add
imul
and
rcrb
cld
pop
inc
test
int
out
and
pusha
mov
pusha
pop
mov
mov
arpl
shl
arpl
repnz
and
ja
addr16
xor
adc
push
ret
mov
dec
jnp
or
es
cs
add
mov
cmpsl
add
pop
scas
cli
mov
xor
pop
pop
xchg
mov
inc
test
mov
sbb
pusha
mov
sbb
ret
lcall
mov
cmp
test
mov
cmp
pop
dec
repnz
stc
cmpb
popf
push
loope
mov
mov
cmpb
dec
mov
adc
inc
jle
es
xor
jo
jle
dec
push
mov
cld
push
or
mov
pop
or
and
lret
sbb
inc
negb
pop
xor
dec
inc
mov
or
push
mov
and
inc
or
mov
adc
and
inc
jae
enter
or
adc
push
pop
fiadds
inc
adc
sbb
and
repnz
or
addb
adc
insb
inc
mov
ret
and
dec
enter
sbb
jbe
dec
ja
clc
push
scas
push
mov
xor
xchg
inc
out
push
add
or
xchg
inc
inc
or
or
push
insb
in
mov
mov
pop
sbb
adc
fs
or
mull
adc
enter
test
sub
lret
in
sub
xchg
adc
adc
xchg
pop
pop
adc
xchg
rclb
mov
jo
ret
adc
or
pop
push
rcl
lock
adc
inc
push
push
cmpsb
jo
and
mov
jl
test
pop
data16
je
addb
js
push
das
add
pop
and
push
mov
aas
rolb
jl
push
or
lea
add
lret
jae
push
addl
mov
xorb
adc
adc
push
les
xchg
sbb
dec
mov
xchg
jae
jmp
and
rol
or
sbb
jbe
dec
add
push
je
push
pop
enter
cwtl
nop
arpl
shrb
push
push
or
sub
mov
push
pop
sub
je
in
adc
scas
mov
sub
push
pop
fmull
and
and
xchg
adc
shrl
lds
dec
mov
jo
loope
nop
push
xchg
fsubl
cmp
rolb
jno
or
iret
push
pop
and
lods
inc
inc
mov
ss
sahf
fsubrl
or
mov
pop
bound
loope
ja
gs
push
scas
lods
mov
shll
mov
or
jnp
pushf
ss
cmp
or
in
js
fs
push
jl
jl
in
dec
jl
jl
push
fs
jl
nop
jmp
xlat
out
int
pop
or
in
dec
loopne
dec
pop
push
lea
imul
mov
adc
ret
scas
sbb
mov
xchg
nop
fs
add
shrb
shrb
mov
adc
lcall
stc
ljmp
loope
push
movsb
ds
lods
sti
test
mov
inc
xchg
and
out
addr16
mov
sbb
mov
sub
incl
dec
adc
or
fcom
sub
pushl
dec
dec
cmovbe
cmpsb
je
or
les
mov
pop
sarb
popf
test
xchg
mov
lock
nop
push
mov
adc
stos
inc
add
in
or
cmp
lock
mov
or
shrl
sbb
mov
pop
push
and
ret
sub
add
push
enter
and
push
mov
and
cmpsb
mov
pop
lret
hlt
inc
pop
add
pop
or
inc
lahf
dec
xor
mov
xchg
fs
or
cmp
sarl
arpl
jae
and
bound
shlb
push
cs
dec
into
dec
push
gs
xchg
repnz
jmp
call
adc
dec
call
cmp
add
or
mov
xchg
lcall
inc
sub
xor
and
lock
or
xor
adc
or
or
popa
adc
push
or
cmpsl
jge
push
pop
incl
cmp
inc
inc
dec
cmp
xor
push
push
inc
cmp
dec
dec
inc
fisttps
cli
sbb
dec
inc
push
dec
cmovl
fistps
mov
inc
pop
push
mov
es
xor
dec
push
push
push
movsb
cmpsb
sbbb
cs
adc
xorb
in
sub
xor
test
xchg
pop
xchg
adc
movsl
scas
and
insb
pop
js
mov
mov
imul
loope
or
je
dec
sub
push
bnd
add
mov
test
sbb
dec
and
sti
mov
pop
mov
xor
movsb
fs
stc
rcll
leave
lods
arpl
adc
enter
inc
addl
sbb
xchg
pop
sbb
stos
imul
rcrb
xchg
out
enter
cs
fsubs
xor
je
push
push
andb
or
xchg
mov
pop
push
pop
loop
movsl
jecxz
data16
ret
imul
fs
xchg
test
dec
cmp
ss
pushf
inc
adc
hlt
in
inc
lcall
add
and
sbb
inc
add
pop
aam
test
mov
pop
or
cmpsb
scas
push
jmp
xchg
and
add
sub
les
popa
aas
push
cld
sub
sbb
cli
push
ja
in
loop
or
arpl
jg
lcall
lahf
xchg
mov
mov
or
add
and
adc
pop
sub
jo
ret
hlt
xor
sbbl
fwait
sub
xchg
xor
adc
cmp
hlt
sbb
sbb
fdivs
outsl
leave
add
pop
push
enter
arpl
pushf
je
movsl
addb
dec
lock
inc
inc
cltd
or
dec
cmpsb
arpl
push
xorb
fs
leave
leave
repnz
cmp
jl
inc
jp
xor
out
outsb
jns
loopne
aaa
loopne
inc
jp
push
or
add
and
shrl
test
add
add
sub
mov
and
push
and
mov
scas
orb
pusha
mov
loope
push
adc
inc
out
push
push
jb
add
add
add
and
cmp
popa
call
xor
test
fs
xor
or
sub
aaa
inc
icebp
in
or
aaa
call
and
inc
xorb
adc
jmp
and
mov
pusha
and
mov
loope
push
sub
push
add
rclb
divps
add
inc
add
ss
add
sub
adc
dec
xchg
jecxz
mov
aaa
pop
pop
adc
loopne
jge
nop
fcomps
xchg
or
or
or
insl
bound
xchg
loop
rolb
lods
pop
or
or
pop
nop
nop
test
add
add
addr16
push
lods
mov
test
pop
sbb
test
popf
orb
jo
push
or
aaa
pusha
daa
arpl
jl
pop
xchg
arpl
mov
cmp
mov
or
scas
sub
in
inc
dec
xchg
and
cmp
leave
rorb
pop
xor
jbe
lds
sub
push
pop
adc
xchg
outsl
imul
mov
scas
movb
fsubs
ret
jg
mov
enter
call
push
pop
dec
xor
scas
mov
leave
dec
mov
xor
daa
mov
lret
movsb
jge
add
inc
jg
rorb
pop
mov
adc
cmpsl
and
aad
push
cld
jae
popa
jo
mov
inc
roll
xlat
int
mov
in
adc
idiv
inc
sbb
or
test
cmp
imull
subl
fneni(8087
push
hlt
test
add
adc
jns
pop
incl
cmp
adc
inc
mov
mov
inc
push
add
pop
and
imul
inc
inc
push
dec
aas
js
leave
adcb
jns
dec
pusha
ja
enter
xchg
xchg
ljmp
dec
cmp
xor
inc
rcll
adc
mov
push
pop
and
hlt
sub
pop
fdivrs
add
nop
fiadds
and
jp
push
test
stos
dec
mov
das
jno
in
push
cltd
psubb
mov
jg
cmp
call
sbb
jp
mov
add
mov
push
aam
sbb
inc
insb
jne
hlt
imul
lods
bound
loop
ja
and
adc
xchg
pop
or
jnp
inc
inc
jle
clc
mov
ret
push
cld
ret
sbb
dec
mov
dec
inc
aaa
add
filds
mov
sbb
adc
adc
movb
push
inc
je
insb
sub
cmp
cmp
mov
xor
and
pop
push
adc
push
enter
inc
jle
dec
popa
cmp
dec
or
sub
xchg
ss
mov
push
inc
dec
psubusb
ret
pop
cmpsl
imul
add
das
popl
push
or
lds
inc
stos
adc
add
test
mov
sti
jmp
rdtsc
test
pop
jo
mov
mov
int3
add
push
pusha
js
jns
jge
and
xchg
push
adc
push
mov
lea
icebp
cmp
xor
or
adc
adc
push
mov
repz
scas
cmp
insb
push
cmp
xchg
hlt
ret
test
ret
cmpsb
xorb
in
inc
dec
dec
xor
repz
jge
pop
mov
sub
jae
cmc
jle
inc
add
bnd
push
stos
add
pop
incl
outsb
dec
ret
int
rclb
pop
imul
push
adc
inc
mov
and
outsl
fcomps
sbb
sbb
das
enter
hlt
adc
dec
jb
mov
inc
add
enter
mov
insl
mov
paddq
jge
push
push
rolb
mov
arpl
dec
pop
shlb
jae
ret
cmpsb
lock
addb
enter
cmp
bound
test
xor
adc
popa
sub
aas
push
cmpb
jne
ss
inc
mov
jl
mov
fiadds
incl
and
dec
xchg
cmp
dec
subl
movsl
adc
fldenv
sub
ret
lahf
xchg
jb
sbb
andb
add
call
push
dec
or
push
dec
push
inc
push
inc
dec
sti
sbb
and
cmpsl
inc
inc
push
aas
addl
jns
pop
stos
fwait
mov
insl
iret
jnp
adc
or
adc
or
pop
jl
imul
dec
adc
cmp
es
adc
push
or
and
adc
gs
ret
or
dec
sub
jmp
add
sub
and
sbb
sbb
and
and
shlb
push
push
leave
xor
outsb
mov
movsb
dec
ret
xchg
fdivrs
and
cmp
inc
ret
mov
notl
das
pop
pop
dec
sti
enter
dec
enter
push
mov
ror
dec
or
int3
mov
and
pop
push
test
or
adc
xchg
andb
hlt
in
sarl
mov
push
adc
cmp
xlat
outsb
sub
imul
popa
test
or
es
sub
ja
pop
cs
push
mov
lahf
mov
mov
fmuls
fmull
decl
push
rcrl
inc
xor
push
xor
lcall
mov
mov
subl
sbb
fwait
sbb
push
addl
adc
insb
imul
pop
or
out
popa
popa
or
cmp
orb
loope
sub
add
add
loopne
mov
mov
lcall
hlt
mov
xchg
dec
lock
sub
sbbb
insl
popa
js
ja
push
push
test
arpl
mov
testl
and
test
or
adc
fsubl
inc
xchg
sub
lods
add
push
and
add
pusha
cmp
repnz
cmp
xchg
inc
sbb
movb
fiadds
add
jl
rcl
add
call
xchg
int
loop
out
or
fildll
addr16
movsb
fstpt
xchg
fldt
faddp
pop
data16
jg
fistl
add
xchg
bt
xchg
outsb
dec
inc
pop
sub
dec
rclb
pop
inc
jp
sub
dec
dec
dec
xor
dec
xor
fsubl
xchg
jae
aaa
loop
and
lds
mov
je
inc
sub
mov
inc
mov
jne
inc
popa
mov
xor
call
xchg
nop
adc
push
mov
mov
lods
cmp
andb
aad
push
movsb
jecxz
xor
adcl
stos
nop
hlt
or
push
aaa
push
sub
inc
cmp
lods
in
cmp
xor
mov
js
test
movb
test
call
pop
jne
sbb
inc
lcall
dec
lds
fucomi
ret
push
shl
rcll
pop
inc
jnp
scas
or
inc
push
push
dec
out
mov
pop
inc
inc
push
inc
xchg
pop
ss
pop
mov
mov
test
cwtl
push
mov
shl
push
fdivrl
add
and
scas
pop
add
mov
insb
int
mov
push
inc
and
outsl
data16
ss
imul
inc
or
or
or
lods
inc
jmp
into
push
out
sbb
dec
sbbl
adc
push
aad
pop
inc
mov
andb
adc
sbb
and
lock
loopne
inc
fimuls
ja
and
pop
mov
in
pushf
xor
lcall
adc
loop
push
outsl
add
adc
xor
js
sbb
ficoml
fidivs
sbb
fiadds
pop
inc
lret
imul
andb
fildl
psrlq
add
repz
cwtl
add
jne
cmpl
and
pop
ret
nop
pop
js
mov
sahf
orl
js
xchg
and
sarb
or
rorl
das
inc
xchg
inc
in
adc
dec
repnz
aaa
cmpsl
sub
test
sub
inc
pop
sub
inc
xor
inc
and
add
out
inc
andl
xor
lret
gs
mov
or
inc
mov
rolb
push
jge
out
cmp
add
test
xorps
and
dec
mov
mov
sub
test
cli
inc
nop
inc
lea
pop
push
adc
inc
xorb
xor
xchg
imul
xchg
adc
inc
sub
push
pop
xor
inc
popa
nop
bound
or
insl
push
movsb
cmp
sbb
pop
xor
inc
inc
or
inc
orl
mov
add
pop
filds
dec
leave
pop
add
or
daa
insb
xorl
xlat
and
mov
stos
fs
aam
adc
xchg
aam
enter
pop
fwait
add
loope
cltd
das
xlat
loopne
les
mov
in
lea
int
in
aam
xor
push
mov
and
push
mov
js
stos
pop
js
inc
stos
aam
push
adc
mov
pop
add
and
sbb
and
sbb
and
sbb
shll
insl
xor
sbb
adc
sbb
addr16
push
mov
xor
sbb
adc
sbb
addr16
xor
hlt
and
inc
negl
pop
insb
sbb
pop
aas
push
adc
sbb
mov
lock
add
test
mov
xor
pusha
ss
test
inc
sbb
jmp
lock
lahf
popf
jo
movsl
pushl
push
cmp
pop
jo
imul
inc
test
push
cmp
inc
hlt
lock
and
inc
add
fcoml
jo
mov
in
ja
xchg
int3
push
out
out
aam
pop
sarb
adc
test
fidivrs
sbb
sub
pop
ljmp
sub
mov
dec
int3
sbb
or
pop
rolb
out
fstpt
adc
jmp
add
xchg
les
movsb
or
or
daa
lods
inc
das
out
pop
and
xchg
jno
inc
add
test
lods
push
jbe
repnz
adcb
subl
add
leave
adc
mov
add
sbb
sahf
push
data16
mov
dec
inc
ficoms
nop
cmp
mov
rorl
outsl
adc
cmp
dec
xlat
cmpb
mov
sbb
pop
push
popw
or
push
sbb
lock
fisttpl
arpl
push
push
ret
push
adc
xchg
adc
shll
push
nop
push
sub
push
jno
push
cmpsb
adc
mov
movl
xchg
cltd
in
aam
adcl
jbe
lret
mov
cs
pop
push
add
add
sbb
pop
sub
rorb
rorb
push
rolb
adc
pusha
sarl
iret
jno
xor
pop
cmp
mov
xchg
xchg
push
push
int3
sub
and
mov
xchg
and
cs
sahf
out
sub
jnp
pop
or
sbb
sbb
push
and
leave
js
sbb
pop
sete
ret
iret
dec
dec
loopne
push
scas
call
mov
lea
aam
push
or
inc
sub
mov
mov
xchg
cmp
mov
mov
sbb
addb
xchg
xchg
inc
dec
aam
and
push
and
mov
das
shlb
push
push
in
or
movsl
jnp
pop
or
mov
cmp
add
mov
or
dec
gs
enterw
mov
mov
sahf
xchg
iret
jnp
ljmp
icebp
dec
popa
add
and
testl
jo
push
aaa
pushf
cmpsb
adc
lods
inc
arpl
test
icebp
insl
jae
pushf
push
push
cmp
je
in
xchg
notb
mov
sub
rcr
pop
or
or
mov
jbe
sub
aaa
adc
imul
popf
add
pop
mov
mov
xor
imul
mov
stos
mov
or
pop
test
fs
mov
cwtl
add
adc
rolb
push
out
sahf
sub
or
sub
dec
nop
cwtl
and
pop
movsb
jns
mov
push
push
or
and
mov
xchg
jo
sbb
xchg
push
and
insl
add
pop
es
subb
and
xlat
test
sub
jo
adcb
xchg
push
mov
push
pop
incb
sub
cmp
imul
into
push
dec
xchg
push
mov
inc
cmpsb
push
pushf
ljmp
dec
inc
mov
fldt
sub
pop
sub
inc
nop
and
nop
sub
add
adc
aas
lahf
mov
pmulhw
pop
cmp
xor
add
clc
mov
or
dec
in
mov
push
mov
add
or
outsb
pop
push
pop
insb
jb
sahf
test
pop
mov
mov
and
cmpsl
lcall
out
pop
sub
sbb
adc
dec
mov
test
jns
cwtl
or
pop
pop
outsl
push
pop
sbb
inc
push
and
mov
adc
pop
or
jg
popa
jmp
adc
dec
pop
mov
pop
rclb
bnd
mov
add
mov
dec
add
dec
imul
or
rclb
jae
add
push
fmull
dec
add
pop
push
mov
repnz
or
pop
imul
mov
insl
movsb
push
cmpsl
sbb
cwtl
or
adc
sbb
aad
fstpt
mov
xchg
addl
test
and
adc
sbb
lock
and
sbb
aam
push
test
lds
push
jno
add
negl
sub
fadds
pop
xchg
imul
loopne
sarb
inc
mov
push
inc
adc
push
mov
adc
jo
add
push
in
push
push
mov
xchg
test
or
fwait
outsl
pop
mov
aas
inc
jbe
adc
aad
push
idivb
xchg
nop
mov
mov
ss
es
push
push
pop
js
mov
add
add
movsb
jg
xor
xor
adc
and
pop
xor
xchg
jne
add
mov
aas
adc
pushf
cwtl
sti
xchg
adc
clc
jo
push
jmp
mov
int3
stos
xchg
adc
in
inc
lock
xchg
lock
shll
in
imul
jnp
xchg
or
test
jno
and
int3
or
fwait
jmp
loopne
outsb
scas
test
jnp
sbb
ljmp
add
and
lcall
ja
lea
loop
jno
pushf
adc
stos
xor
in
sub
sbb
les
cmpsb
mov
shlb
adc
xchg
and
gs
mov
outsl
sbb
shrl
imulb
roll
hlt
insb
loop
xchg
mov
mov
les
cmp
int3
mov
test
fsubrs
jne
and
xchg
xor
sub
aaa
adc
insb
ljmp
lods
pop
lods
dec
rol
jmp
inc
bound
rorb
cli
nop
jno
inc
mov
lea
cli
ficoms
call
sub
rcrb
repnz
sbb
aas
push
mov
cwtl
cwtl
push
push
mov
pop
cmp
mov
or
jl
test
add
rcr
mov
push
adc
test
in
inc
and
mov
addb
dec
lods
ret
lods
roll
enter
cmpsl
cmp
fsubr
sub
es
xchg
jns
enter
adc
sbb
pop
or
ret
xor
movsb
sbb
sbb
adc
xchg
push
popf
imul
mov
push
adcb
test
mov
mov
call
xor
pop
jne
xor
inc
dec
cld
mov
push
push
push
adc
mov
popa
outsl
xor
add
popf
push
jne
pusha
inc
jo
nopl
push
xchg
mov
popa
clc
data16
daa
aas
jg
push
xorb
cmp
lods
xor
push
mov
and
les
pusha
mov
jb
jmp
movhps
cmp
or
je
sbb
repnz
push
sub
adc
push
ds
mov
ljmp
sbb
cld
mov
push
cld
dec
dec
addr16
xor
jbe
and
imul
push
stc
test
push
push
pusha
fcoml
mov
in
inc
push
pop
and
xlat
dec
push
add
adc
arpl
js
aam
mov
sti
dec
inc
pop
xchg
mov
adc
push
nop
add
lret
sbb
xor
movsl
mov
mov
bound
xchg
or
push
mov
sti
adc
mov
loope
xor
sub
cmpsb
sub
and
scas
sbb
add
pop
pusha
xor
inc
loopne
push
push
js
adc
call
dec
mov
rolb
push
cmp
cwtl
clc
loop
inc
jmp
cmpb
cs
loop
enter
pop
sbb
add
and
mov
leave
ja
movnti
outsb
jecxz
push
or
dec
xchg
adc
shlb
lea
xchg
push
mov
push
inc
pop
add
push
je
insl
lret
les
and
pop
push
sub
flds
sub
add
mov
and
and
enter
sub
and
in
nop
sbb
cmp
nop
arpl
or
adc
mov
adc
arpl
push
or
cmpb
fwait
xorb
test
adc
and
dec
je
sub
add
dec
mov
and
shll
jge
push
sbb
enter
fdiv
mov
test
jge
pushf
rclb
mov
adc
loop
mov
add
lea
lea
jne
mov
jnp
inc
add
push
push
cmc
and
testl
inc
xchg
sub
mov
test
sbb
push
mov
jecxz
ss
ret
xchg
loop
hlt
jmp
enter
in
pop
aaa
lock
movsl
xor
lock
jns
es
and
jg
dec
jl
sti
cmpsl
lods
xlat
getsec
inc
js
mov
lcall
push
stc
mov
jo
inc
comiss
adc
sub
pop
add
jae
sub
sub
hlt
and
imul
adc
jae
xchg
hlt
mov
and
mov
and
pop
test
or
lods
add
sub
sbb
mov
movsb
fadds
movsl
mov
rolb
push
in
imul
mov
push
sbb
xchg
adc
xchg
icebp
cli
mov
inc
add
xchg
aam
mov
imul
xor
or
and
add
fstps
push
aaa
dec
jge
insb
jge
jmp
sbb
loope
add
dec
push
rcll
or
mov
mov
jbe
and
sub
add
adc
scas
fcompp
lcall
dec
out
add
xchg
ret
inc
sub
mov
inc
enter
js
lea
and
xchg
push
xor
mov
jno
mov
jne
push
adc
addr16
inc
add
rorl
lea
fwait
dec
hlt
js
mov
and
lcall
inc
popf
sub
pop
mov
adc
fcoms
in
inc
mov
adc
out
fistpl
jo
aas
mov
cwtl
jo
cs
mov
dec
or
mov
cmp
scas
mov
and
sarb
jmp
mov
mov
mov
lahf
jge
ss
add
or
imul
loop
sbb
sbb
lret
dec
rolb
add
sbb
cmp
outsb
sbb
push
xchg
mov
or
xchg
dec
inc
loope
mov
add
shlb
pop
and
loopne
jbe
outsb
outsl
sub
arpl
je
xchg
ud0
jo
inc
mov
dec
pushf
leave
push
or
addb
mov
hlt
call
pop
or
mov
xchg
movsb
mov
int3
movsl
dec
fstpt
adc
arpl
pop
cwtl
out
sub
jnp
pop
push
nop
dec
inc
or
xchg
inc
and
jge
mov
iret
mov
or
rclb
cltd
test
fcmovnb
mov
xor
dec
xor
lock
ret
mov
mov
or
sbb
sbb
fwait
je
ja
pop
xchg
push
dec
dec
and
lcall
push
mov
test
or
shlb
mov
xlat
or
fstps
cld
sbb
mov
vmovhps
shrl
and
mov
inc
mov
mov
test
add
fidivl
mov
mov
ja
or
rcll
pop
outsb
fs
mov
or
icebp
xchg
sbb
cmp
leave
or
add
das
cmpl
mov
mov
popa
addr16
mov
sub
pop
sub
push
lret
stos
icebp
pop
sub
sbb
push
or
and
sbb
xor
add
mov
sbb
mov
sub
or
incb
add
clc
sub
push
orb
les
push
cmp
mov
add
nop
mov
out
aam
push
jmp
or
jecxz
xor
xlat
insl
imul
cmp
mov
pop
shll
lock
cltd
rol
sub
ja
mov
push
add
add
add
and
cmpsl
inc
mov
addl
add
push
dec
insb
cmp
call
pusha
add
dec
add
jp
pop
adc
push
in
andb
add
scas
mov
push
js
imul
pop
mov
push
aad
sbb
push
mov
push
sbb
jne
ret
ret
xchg
mov
add
add
or
cmp
adc
stc
test
fadd
adc
adc
ja
mov
loopne
mov
adc
jb
inc
push
cmp
pop
inc
sub
sahf
ja
cmp
pushf
lret
loope
je
fdivrl
sbb
xchg
push
xor
sbb
cmp
jo
ret
je
adc
loope
nop
inc
loope
pop
bnd
cs
xor
dec
shlb
fsubrs
cmpsl
lods
lea
xorl
lods
mov
xor
test
push
or
lods
adc
mov
nop
pop
test
aam
icebp
outsb
xchg
test
fwait
pop
mov
mov
mov
je
pop
and
add
xchg
inc
ss
loop
popf
jb
outsb
pusha
sti
cmp
and
jb
pop
pop
shlb
mov
xchg
mov
scas
fiadds
cmpl
loop,pn
add
or
inc
aaa
fsts
arpl
pop
cmpsb
fstpl
and
sahf
pop
fisttpl
rclb
inc
pop
sbb
sahf
inc
push
mov
mov
sbb
stos
adc
shll
imul
movsb
or
roll
pop
insb
or
std
adc
adc
inc
mov
sbb
dec
test
add
dec
popa
xchg
iret
jecxz
lods
xor
mov
jo
and
and
mov
sbb
inc
pop
pop
ret
arpl
shlb
jo
pop
pop
pop
push
nop
and
xor
add
add
pop
sti
xor
dec
movb
or
cmp
adc
or
and
adc
pop
push
in
jo
insb
sub
nop
popa
fdivrs
mov
jbe
test
or
mov
dec
iret
mov
adc
repnz
test
mov
xor
pop
mov
mov
hlt
out
int
sbb
and
test
cmp
push
adc
pop
add
nop
cmp
pop
fiaddl
mov
pop
je
lods
xor
hlt
push
xor
push
sub
aaa
and
and
jecxz
fbstp
cmp
enter
nop
testl
xchg
in
nop
gs
sahf
in
mov
les
fwait
call
movl
mov
mov
ffree
or
test
incl
dec
pop
sar
dec
dec
inc
inc
push
sub
inc
mov
fwait
mov
and
popa
jb
and
mov
dec
outsl
adc
sbb
out
lods
push
inc
or
loope
scas
lock
sub
lea
jg
sbb
mov
or
add
js
fists
sub
aas
push
push
insb
loope
div
into
add
dec
cmp
dec
add
jo
add
lods
sbb
add
pop
push
dec
and
xlat
cmpsl
sbb
lcall
aas
ljmp
adc
nop
add
mov
add
pop
inc
inc
xchg
inc
mov
sub
sub
xor
adc
mov
xlat
adc
mov
sub
int
add
pop
shll
push
xor
dec
ret
push
mov
or
push
cli
dec
mov
hlt
pushl
test
jl
jl
mov
push
cmp
in
scas
lock
nop
add
shrb
cltd
push
inc
lcall
jmp
and
pop
icebp
in
jne
mov
je
bound
push
xor
inc
and
xchg
test
push
andl
cld
ret
xor
je
and
or
xlat
rorb
and
xchg
mov
dec
add
jmp
cmp
push
cli
cmp
jne
aaa
dec
push
push
stc
das
in
inc
xor
push
inc
inc
inc
and
mov
inc
popa
dec
inc
inc
daa
mov
clc
pop
les
ret
orl
mov
jo
pop
jo
mov
shrb
jmp
insl
dec
cmp
enter
jl
push
mov
cmpsl
sti
jg
and
enter
daa
lret
ret
pavgb
push
or
inc
rorb
jns
rcrl
mov
xchg
mov
shrl
sbb
or
movl
mov
pop
cmpsb
pusha
xchg
adc
jp
outsl
enter
sbb
lds
jbe
push
imul
lock
xchg
ss
test
jns
jo
xchg
add
leave
mov
repz
rclb
pop
mov
mov
dec
cltd
and
jnp
dec
sbb
mov
inc
mov
das
fisttpl
movb
push
dec
in
dec
inc
sbb
loope
and
lock
adc
xorl
dec
sub
xchg
jg
or
xor
inc
jne
sbb
in
clc
mov
lds
das
add
outsl
or
mov
pop
inc
cmp
cmp
and
sub
adc
inc
inc
mov
std
inc
add
addr16
push
inc
sub
jge
pop
cmp
arpl
add
jmp
paddq
lret
pop
mov
sarl
xchg
or
jne
jns
jmp
mov
add
mov
into
mov
add
and
cld
xchg
cmpsb
mov
pop
les
dec
loope
orl
daa
inc
pop
inc
jmp
movsb
inc
add
mov
inc
js
dec
sub
aas
adc
xchg
imul
mov
xchg
add
adc
testb
fs
pop
rorb
xchg
dec
jge
test
inc
sbb
pop
pushf
push
push
mov
sbb
ret
testb
mov
imul
xchg
ret
test
pop
aaa
cmpsb
xorb
mov
push
push
and
sub
leave
mov
cmpsb
sbb
int3
into
pop
push
lea
jnp
xlat
and
pop
xor
dec
dec
mov
push
pop
lds
lret
nop
xor
cmp
addl
shlb
das
or
add
jle
lahf
insb
add
sbb
add
mov
arpl
dec
mov
xor
arpl
nop
movsl
xor
adc
addl
inc
jb
sbb
into
call
and
outsb
adc
push
or
sbb
or
popf
and
adc
int3
mull
gs
and
insb
and
test
push
outsl
js
arpl
fsubr
inc
nop
cld
clc
addr16
bound
lret
pop
mov
aaa
adc
push
xchg
pop
loopne
pop
or
xor
shll
mov
pop
sub
pop
ret
dec
mov
sub
xor
mov
add
in
inc
mov
or
icebp
dec
insb
sub
and
or
inc
xor
roll
nop
push
fmull
add
fs
or
fisubs
adc
sbb
gs
orb
js
adc
mov
int3
xchg
rcll
or
movb
mov
add
repz
add
test
sbb
andb
sub
ljmp
gs
rorb
inc
and
lods
adc
adc
mov
pop
pop
dec
add
mov
aam
mov
xor
mov
mov
daa
sub
mov
test
push
add
sbb
add
or
push
push
add
mov
mov
in
sub
add
test
sub
cmp
shrb
or
xor
mov
dec
or
sbb
or
mov
mov
push
rolb
enter
mov
cmp
shll
popa
mov
dec
ss
push
adc
aam
outsl
mov
mov
jbe
in
cmp
mov
or
andl
sarl
lods
xor
push
cltd
scas
sub
imul
inc
sub
pop
fmulp
insl
inc
and
and
lock
or
ret
sub
jo
add
dec
dec
sub
sbb
insb
pop
insb
outsl
push
push
lea
imulb
leave
mov
fs
cmpsl
pop
mov
imul
imul
xlat
add
push
inc
adc
in
add
jp
pop
pushf
dec
or
das
cmp
rclb
jge
mov
rcll
push
lea
popa
inc
xchg
sub
and
pop
xchg
push
fadds
daa
xchg
pop
push
xchg
pop
cmp
ja
inc
jne
inc
sub
cmpsl
div
sbb
push
test
jle
xchg
xchg
cmp
pop
jmp
add
mov
dec
divl
add
in
add
sbb
mov
cmp
jnp
sub
mov
add
pop
xchg
dec
iret
pop
add
sbb
inc
mov
adc
sub
rcrl
push
das
pop
pusha
aaa
ret
push
aas
sbb
and
popa
mov
push
add
inc
jnp
xor
xchg
imul
inc
mov
lods
jmp
push
jo
jns
repnz
push
js
jge
adc
xor
imul
push
lods
cmpsl
mov
mov
sarl
test
xorb
fldenv
roll
inc
loopne
es
xchg
test
flds
push
xlat
push
ret
shrl
cmpsb
cli
mov
fsubrs
orl
rolb
dec
cmp
imul
in
out
lods
lods
sbbb
stc
mov
push
hlt
popf
adc
fistps
cmp
xchg
insl
aaa
outsl
adc
fdiv
lret
fcomi
leave
cmp
cmpl
fcmovnbe
xlat
add
sub
call
fimull
loopne
insl
lock
lods
add
mov
popf
xchg
xchg
ljmp
xchg
pop
repnz
scas
jmp
into
popa
repnz
fildll
mov
xor
imul
rep
imul
inc
adcb
pushl
cmp
jbe
pop
xor
enter
inc
inc
repnz
lahf
mov
gs
inc
push
push
mov
sbb
imul
repnz
jo
mov
add
and
push
sub
pslld
jnp
ds
mov
mov
or
jo
add
scas
nop
and
in
div
jne
sub
jmp
xadd
sbb
pop
subl
sbb
add
adc
jno
mov
cmp
adc
push
xor
pop
add
pop
xchg
fisubrs
mov
mov
mov
and
fcomps
fwait
es
cld
inc
std
outsb
cmp
or
enter
and
call
and
fwait
mov
shl
and
fldl
icebp
adc
sbb
in
sbb
sub
inc
pop
adc
dec
and
cmc
push
push
inc
xor
call
add
into
sbb
push
es
dec
les
cmp
mov
sahf
pop
or
call
callw
insb
inc
cmp
orb
aam
jb
es
mov
fisttpl
fldt
sub
inc
cmp
xor
mov
lahf
orb
addb
dec
xchg
push
fsubrl
test
ds
add
inc
pop
or
jl
push
iret
test
ds
add
loope
or
addr16
cmp
dec
sbb
or
mov
daa
push
addb
imul
pop
mov
or
mov
or
inc
dec
mov
inc
lods
ret
adc
outsl
dec
movsb
or
shlb
pop
insb
add
dec
sbb
daa
orb
sbb
dec
sub
sbb
loop
add
pushl
mov
sub
jb
sub
je
sub
dec
aaa
xlat
push
test
loopne
mov
mov
fimuls
mov
pop
xor
movsl
pop
add
es
jecxz
cltd
sub
pushf
adc
adc
ret
mov
adc
mov
lea
mov
xor
or
sbb
int
mov
push
mov
push
imul
adc
sbb
rol
sub
popa
and
inc
fs
shrb
lret
sbb
jecxz
sbb
jl
sub
add
test
shrb
push
sub
rorb
xchg
rolb
lock
sbb
pop
add
pusha
push
xlat
int3
mov
mov
xchg
rclb
xor
int3
xchg
xchg
add
mov
inc
outsl
insl
popa
popf
jmp
add
and
xor
dec
sub
stc
lret
mov
shll
fiaddl
mov
mov
test
lret
inc
cltd
pop
cs
jne
jo
inc
mov
mov
and
loope
xchg
adc
lret
xor
add
inc
mov
or
enter
adc
adc
jl
push
sbb
push
mov
xor
xor
adc
mov
mov
push
rcr
push
pop
mov
daa
sbb
mov
cmc
add
icebp
loope
arpl
imul
mov
nop
sub
bound
mov
jns
test
jge
xor
push
jle
andb
and
loope
in
lock
inc
testl
jle
cmp
pusha
mov
adc
inc
add
ss
rorb
sbb
mov
cmc
adc
faddl
insl
call
mov
imul
and
push
or
jne
sub
mov
adc
addb
mov
or
xor
pusha
inc
and
gs
adc
push
mov
insl
mov
and
inc
add
or
and
xor
call
xor
mov
push
push
sbb
add
add
outsb
in
repnz
inc
cli
or
and
and
push
iret
rorb
sbb
or
dec
fwait
cltd
gs
mov
add
cs
in
push
inc
popa
dec
xor
loopne
sbb
mov
pop
adc
fmuls
xor
push
call
dec
or
call
adcb
push
add
jg
or
mov
dec
add
data16
pop
jno
cmc
dec
test
outsl
aas
lret
dec
cwtl
aam
jge
add
dec
pop
mov
mov
fcomps
push
lock
mov
sbb
loope
sbbl
push
or
cmpsb
out
mov
aam
jmp
mov
mov
out
add
dec
fs
push
add
mov
push
jmp
mov
cmpsb
sbb
movsl
mov
mov
lods
push
test
and
sub
cmp
frstor
or
test
push
or
imull
jo
adc
push
test
mov
out
jns
ret
rcrb
lds
imul
enter
fs
mov
push
jo
test
fs
jnp
std
mov
mov
inc
or
sub
sbb
adc
jge
xor
jb
or
pop
dec
push
rolb
sbb
adc
cwtl
mov
jb
jmp
xchg
sub
inc
or
jb
xchg
lret
pop
mov
pop
jg
aas
inc
inc
push
stos
inc
add
inc
cmp
jne
push
jmp
push
and
push
std
test
sbb
stos
in
push
or
rorb
aam
pop
jmp
les
jae
pop
push
gs
sbb
push
loope
mov
pop
xchg
cwtl
jnp
inc
jbe
arpl
and
pusha
js
mov
loopne
pop
sbb
add
frstor
sbb
cld
aad
sub
test
push
fiaddl
inc
add
enter
push
pusha
cmp
adcb
dec
imul
idivb
lea
rcll
add
enter
imul
inc
cmp
push
enter
pop
lcall
test
adcb
inc
adc
xchg
push
inc
scas
outsl
lock
clc
stos
mov
cwtl
jmp
push
in
xchg
xor
cltd
or
sub
sarb
and
fldt
push
adc
lcall
pmullw
shlb
xchg
sarb
movzbl
pop
sbb
and
test
sub
je
cmp
jb
cmp
ja
pushl
je
jnp
ss
push
add
jmp
pop
or
or
pop
insl
adc
adc
push
inc
scas
ja
jg
dec
jne
mov
lock
mov
adc
cld
or
sbb
pop
inc
je
cld
mov
pop
in
adc
loopne
jno
add
or
cmp
hlt
push
mov
fwait
divl
mov
sbb
lock
movsb
xor
and
push
ss
in
cmp
bound
mov
mov
mov
rclb
adc
xlat
fs
adc
pushl
lea
xor
sub
fildl
jge
call
or
in
es
stc
ud0
jbe
movsb
inc
adc
jmp
mov
xchg
cwtl
pop
fisttpll
push
fildll
and
mov
jmp
daa
imul
daa
daa
mov
dec
mov
xor
bound
shr
push
pop
and
pushf
pop
aas
andl
shl
sub
mov
inc
mov
sbb
aas
and
pusha
push
sahf
fcoms
pop
daa
push
testb
cmc
jns
aaa
adc
mov
ret
adc
adc
mov
mov
int
out
pop
inc
ljmp
add
shlb
mov
inc
pop
adc
push
mov
lcall
add
dec
sar
push
mov
xchg
add
iret
mov
mov
scas
mov
iret
movl
adc
cs
or
jbe
jbe
xchg
mov
fs
mov
pop
fisubrs
add
pop
and
adc
push
popa
pop
sti
insb
pushw
rcrl
je
and
jl
cmp
test
popf
add
mov
mov
and
iret
xchg
xor
in
pushf
pusha
mov
add
lods
mov
cwtl
mov
cmp
repnz
mov
iret
mov
dec
lret
sbb
adc
dec
mov
or
iret
loope
out
inc
add
fistpl
insb
sub
push
mov
lret
daa
cwtl
or
sub
cltd
inc
push
push
push
pop
sub
jb
pop
and
or
rcrb
mov
imul
imul
loopne
and
jae
das
or
mov
push
inc
sbbb
cmpsb
inc
jne
mov
test
xchg
inc
xor
sbbl
pop
js
rcrb
rcl
mov
xchg
xor
sbb
push
and
int3
fidivs
fldl
xchg
scas
pop
orb
imul
nop
sbb
out
xorl
jbe
jne
in
pop
enter
outsb
mov
fistps
ja
outsb
or
push
or
inc
inc
ljmp
mov
pop
stos
cwtl
adc
adc
in
shrb
adc
push
adc
xchg
sti
pop
add
repnz
and
add
push
xchg
outsl
imul
js
inc
add
add
imul
pusha
jbe
push
call
pop
pop
xchg
ja
and
fidivl
push
lods
or
movsb
adc
out
push
pop
cwtl
adc
andl
popf
jno
push
add
movsb
pop
push
add
jb
pop
inc
in
mov
mov
dec
jl
and
push
enter
push
jge
addb
imul
test
jne
dec
fcomps
adc
daa
and
xchg
fstpl
ffree
add
mov
js
mov
ds
inc
add
lock
inc
andl
pushf
bound
icebp
negl
sbb
add
mov
nop
dec
sub
stos
es
ljmp
loope
out
mov
mov
jl
add
or
or
mov
das
sbb
lods
adc
mov
mov
aas
mov
or
mov
lret
ds
add
xlat
inc
inc
or
cmp
add
xor
lods
xchg
lods
xor
adc
sbb
mov
es
inc
inc
add
dec
jl
jg
fucomip
pop
push
fimuls
dec
sub
or
fidivl
rorl
fcoml
push
lea
add
nop
sbb
jge
in
lcall
add
mov
test
daa
dec
and
mov
jle
mov
jp
out
aam
dec
std
and
enter
decb
cmp
inc
xchg
js
add
cwtl
jno
jecxz
adc
sub
mov
xchg
mov
sahf
and
sbb
push
outsb
adc
jmp
cld
dec
or
fildl
add
cmp
rcrl
mov
sub
xchg
fiadds
mov
shl
xchg
into
mov
scas
inc
jmp
add
and
jle
lret
jae
insb
or
inc
pop
push
fucomip
sub
or
inc
lea
std
dec
or
movsl
xor
and
add
int3
xor
mov
enter
or
push
add
push
mov
fprem1
jo
xchg
lods
xor
shl
insb
or
sbb
int3
fwait
andb
les
outsb
sbb
addr16
pop
fistpl
pop
adc
shll
mov
pop
clc
cmp
add
movsb
bound
in
enter
add
cmp
orb
in
add
jbe
pop
pop
and
and
sub
jns
popf
inc
aas
and
push
mov
mov
pop
mov
sub
insb
les
xchg
sbb
adc
sbb
pop
stc
test
add
imul
fimull
sbb
leave
mov
dec
or
mov
inc
and
js
in
icebp
mov
sbb
xchg
sbb
or
loopne
outsl
div
ret
sahf
cmc
test
mov
adc
and
jmp
movsb
xor
xchg
inc
inc
insb
inc
in
inc
loopne
push
dec
jmp
out
adc
sbb
in
or
xor
pop
popa
inc
pop
push
dec
inc
lea
rcll
cmp
or
mov
mov
mov
dec
pop
sbb
hlt
push
pop
xchg
and
movsl
inc
mov
sub
movsb
adc
xchg
addr16
in
and
dec
mov
stos
xor
sbb
inc
test
and
cmp
xchg
mov
push
sub
sub
scas
sbb
inc
sub
cmp
sub
repz
xor
das
mov
mov
and
roll
adc
sahf
out
pop
xchg
xchg
xor
insb
testb
mov
adc
sbb
mov
sub
mov
fisubs
in
lods
inc
ss
sbb
insl
sbb
fiadds
or
mov
xchg
ret
cmpsl
fsubs
imul
leave
sub
adc
dec
jmp
or
pop
xchg
vucomisd
dec
sbb
cmp
cmc
and
cmp
orw
mov
mov
xchg
mov
jns
sbb
add
and
pusha
inc
or
out
cmp
mov
stc
cmpb
jb
dec
mov
sub
dec
xchg
loop
adc
pusha
or
cwtl
inc
jb
aas
mov
aaa
movsb
or
scas
pop
xor
mov
xchg
popf
cmp
lret
leave
aad
xchg
cli
add
push
inc
sbb
xor
xor
inc
popa
adc
test
xor
pop
inc
push
adc
xlat
adc
aam
ja
cmpl
inc
sub
ret
push
mov
adc
push
push
pop
mov
and
mov
daa
std
das
lods
and
add
movzwl
xorb
leave
or
add
std
cmc
or
inc
add
filds
and
sub
pop
cmp
inc
or
add
xchg
add
roll
lret
adc
add
test
push
orl
lahf
mov
push
negl
mov
add
bound
dec
or
and
imul
pop
and
sub
mov
dec
sbb
out
rcll
dec
add
push
lea
mov
and
mov
or
or
jecxz
ljmp
mov
shll
movsb
and
out
shlb
sbb
roll
sbb
mov
jnp
shl
fwait
or
xor
pop
outsl
cmp
or
mov
mov
inc
sub
inc
fwait
push
fs
dec
and
cmpsl
imul
or
add
arpl
jecxz
push
add
dec
test
dec
and
xchg
fisubs
outsb
xchg
xchg
xor
sub
add
lock
test
orb
push
cmp
xor
fisttps
sub
div
mov
mov
adc
ret
sti
movsb
repnz
and
push
cmpsl
and
or
fucomi
js
add
adc
sbb
shrb
lret
aam
addr16
sbb
xchg
ficoml
insb
ret
adc
adc
clc
movsb
or
jge
mov
test
popa
push
sbb
lahf
loopne
js
mov
test
or
dec
or
mov
sub
jne
pop
repz
aad
sub
enter
lea
inc
out
pop
leave
push
shlb
in
jg
imul
mov
lea
inc
fdivs
in
sub
push
shrb
jl
or
and
inc
push
imul
nop
fcmovb
daa
add
clc
or
jae
mov
push
cwtl
sbb
sub
orl
add
mov
pop
les
cmp
stc
jo
les
jmp
idivb
mov
ret
call
call
or
push
movsb
dec
imul
jne
fucomip
orps
rorb
pop
cmp
imul
mov
or
pop
pusha
sbb
pop
out
nop
push
push
fs
cs
xor
rcrb
dec
shlb
cmp
jne
add
xor
push
aas
mov
inc
fs
pushl
and
daa
adc
add
pop
dec
out
pop
lret
rolb
sub
sbb
fisttpl
movsb
std
lahf
arpl
mov
add
sub
sub
add
hlt
sub
add
push
jmp
repnz
mov
push
sub
pop
cld
lea
mov
mov
test
push
or
jno
test
sbb
inc
adc
les
int3
adc
cmp
mov
push
mov
shrl
inc
testb
or
lds
or
and
cmpsb
cmc
sbb
enter
cmp
movl
xchg
xorl
or
cwtl
jg
jnp
dec
shrl
loope
insl
inc
dec
aaa
bound
std
dec
cmp
cmp
pop
sub
movsl
xor
push
pop
ljmp
dec
cmp
insl
xor
movb
mov
lock
or
cmpsl
aas
ficoms
sub
pop
add
sub
jo
inc
sbb
or
pushf
and
xchg
xchg
adc
leave
or
imul
cmp
push
fcoms
adc
or
and
mov
jmp
lret
mov
xchg
pop
jle
ffreep
and
jmp
adc
cli
ds
popa
add
inc
adc
cmpsl
shll
or
pop
insb
xor
push
inc
adc
repnz
jo
mov
and
jnp
push
movsb
pop
xchg
mov
sub
das
jno
add
stc
popf
xchg
xor
out
and
dec
sbb
pop
inc
fnstsw
mov
jl
sbb
sub
sub
xor
nop
xor
stos
inc
xchg
add
or
js
cwtl
wrmsr
adc
sbbb
cmp
adc
fsubs
jp
dec
cmpb
sub
or
out
and
cmpl
imul
sub
mov
pusha
lret
push
jmp
inc
add
sbb
sbb
ret
xor
arpl
sub
push
ret
loopne
sbb
xor
push
arpl
call
push
jns
mov
mov
push
inc
scas
dec
pop
in
in
das
xor
ret
inc
ret
arpl
shrb
inc
xlat
sbb
enter
insl
xchg
dec
mov
or
adc
rcl
add
aaa
adc
insl
mov
pop
jno
or
jno
sub
xchg
xor
add
sbb
dec
cmp
inc
cmp
and
push
inc
inc
inc
xor
mov
push
push
pop
cmp
pusha
aam
inc
adc
andb
cmc
jecxz
add
or
xchg
push
cmp
adc
mov
xchg
adc
push
ret
test
or
shlb
add
lock
movsb
jmp
jo
mov
mov
adc
insb
pop
cwtl
stos
push
enter
xlat
adcb
sub
ja
mov
div
and
add
add
pop
mov
imul
push
and
out
mov
nop
push
push
sbb
invd
xchg
add
stos
dec
out
sbb
push
insb
addb
notb
lret
mov
or
sbb
stc
xor
push
push
sub
shlb
and
adc
addr16
add
lret
lods
ror
je
and
ret
loope
lret
ret
sub
punpckhwd
mov
ret
inc
mov
movsb
out
pop
or
ret
inc
cmpl
push
cwtl
arpl
xor
dec
lods
popa
xchg
jne
clc
mov
push
cmpl
loop
xor
cmpb
and
push
sbb
push
jg
cmp
gs
and
ljmp
shlb
pop
cli
pop
sbb
fstps
fcmovnb
mov
adc
rolb
repnz
lock
dec
jl
or
jl
pop
dec
push
and
dec
mov
mov
xor
adc
xchg
add
scas
inc
dec
repz
and
xor
ficoms
fistpl
inc
or
add
pusha
jo
push
test
lret
lahf
sub
jbe
in
add
nop
add
add
and
and
leave
add
sti
xor
mov
addl
sti
or
lret
add
mov
sbb
or
mulb
or
xchg
mov
xchg
cmp
mov
add
ret
cltd
xor
loope
or
pop
popa
mov
lods
xchg
out
add
fmul
add
lea
jp
jge
sbb
aas
or
pop
dec
dec
add
add
mov
sub
xchg
mov
pop
pop
or
pop
xor
push
arpl
xor
leave
pop
jbe
ljmp
divl
mov
add
fiadds
cmc
lret
es
idivl
jo
loop
test
push
sarl
xlat
push
xor
push
cmp
stc
cli
jl
push
jne
data16
cwtl
xchg
test
mov
inc
adc
js
pop
dec
sub
imul
shl
jne
lods
stc
jmp
sbb
lea
dec
ja
imul
out
mov
iret
adc
test
push
inc
cmp
stos
inc
sub
lods
aas
inc
cmpsl
mov
push
pop
push
sub
es
mov
incb
leave
push
adc
or
xor
aaa
in
and
pop
addr16
enter
jmp
mov
and
dec
lods
lds
jae
mov
adc
push
mov
mov
rol
xorb
gs
and
mov
dec
cltd
dec
push
mov
addb
pop
jb
inc
adc
adc
jo
mov
enter
cmpsl
and
mov
outsl
add
mov
pop
loop
pop
inc
sbb
sbb
fs
cmp
dec
mov
and
pop
sub
dec
repz
fistl
sub
pop
cmp
insl
push
shl
call
inc
mov
mov
inc
inc
fiadds
rcl
jmp
lahf
cmp
pop
mov
loopne
shrl
addb
outsb
add
jno
mov
mov
or
mov
sahf
inc
and
icebp
cmpsl
fcomi
imul
cmp
push
xor
mov
add
scas
mov
icebp
lret
xorb
xor
dec
xor
cld
dec
frstor
push
dec
dec
adc
inc
lds
or
add
popf
or
outsb
loop
inc
adc
and
jmp
std
and
pusha
dec
mov
shlb
or
mov
loope
imul
ja
cmp
out
lcall
inc
out
fnstcw
sbb
lret
jl
adc
sbb
insb
mov
dec
mov
dec
test
jl
pop
mov
push
cmpsl
loope
dec
lock
mov
cmc
or
push
xor
sub
in
out
xor
gs
jae
aam
addb
pop
sub
add
inc
mov
pop
jle
add
cmp
ja
mov
push
dec
mov
icebp
push
mov
xor
test
add
jbe
dec
adc
or
dec
pushf
movsb
add
pushf
mov
or
push
sbb
ret
cmp
adc
rol
sub
mov
rcrb
jae
jae
mov
addr16
or
jne
jmp
jae
inc
add
jnp
repz
jle
mov
jbe
mov
mov
and
ja
jmp
data16
xor
sahf
and
je
cltd
sub
mov
pusha
sub
mov
inc
fwait
add
pop
inc
push
push
inc
xchg
adc
jb
and
bound
sub
dec
ja
cmp
sub
pop
adc
jl
mov
and
dec
nop
or
dec
jecxz
add
mov
pop
sbb
push
sbb
sub
cmpb
inc
dec
dec
clc
adc
or
sbb
sub
dec
xchg
xchg
and
mov
add
ret
or
push
add
or
mov
xchg
sbb
xchg
fldt
xor
jne
pop
sub
subb
lock
push
xchg
rolb
paddusb
es
mov
adc
fmuls
pop
xchg
hlt
fwait
add
push
cmp
sbb
push
cmp
nop
arpl
testl
mov
sbb
enter
or
fists
cmp
add
repz
or
or
and
inc
mov
adc
sbb
iret
iret
iret
and
adc
or
and
adc
push
scas
push
iret
pusha
adc
addb
mov
jbe
rcll
mov
pop
adc
jmp
pop
inc
push
dec
mov
dec
mov
out
add
addr16
pop
ret
sete
or
daa
mov
xor
pusha
sbb
and
cmp
xlat
lods
pop
fdivr
popa
mov
adc
subb
xor
dec
inc
jns
aam
mull
sbb
cmp
in
add
cmp
loopne
lahf
imul
movl
adc
add
pop
cmc
pop
js
arpl
jle
xchg
jg
imul
or
shlb
enter
mov
jae
lcall
ret
jl
and
ss
or
aaa
repz
cld
in
dec
or
adc
cmp
cwtl
idivl
dec
sbb
or
mov
cmc
mov
add
stos
or
pushf
lret
and
sbb
fdivs
ja
daa
sub
bound
sub
rcr
fistl
sbb
dec
jl
stc
sbb
push
xchg
dec
dec
inc
or
dec
adc
in
gs
jne
sbb
xchg
dec
jmp
jb
xchg
inc
jg
pop
mov
push
pop
jo
orw
daa
push
sbb
pop
push
and
xor
cltd
inc
or
ret
adc
inc
inc
sbb
inc
test
mov
sub
rolb
nop
mov
out
fs
push
pop
or
dec
mov
bound
loopne,pn
in
cmc
add
push
mov
fcomps
pop
adc
mov
in
out
add
xchg
xor
mov
or
or
mov
xor
mov
clc
push
movsb
loope
imull
sbb
mov
testl
cmp
jl
and
imul
aaa
enter
jmp
pop
mov
inc
mov
incl
mov
inc
cmp
cmp
push
or
inc
clc
jns
rcl
lea
xchg
test
mov
stos
cld
daa
push
js
jle
pusha
incl
arpl
lods
das
and
mov
jnp
out
add
push
or
or
or
cmpsb
add
sub
cmp
sbb
pop
fwait
into
sub
fldcw
les
xchg
or
jecxz
ficoms
lods
mov
mov
cmc
add
add
add
stos
inc
fildl
push
out
mov
xchg
cmpb
cmp
test
mov
insl
jp
ret
xchg
data16
jo
sbb
push
int3
sbb
jmp
jmp
movsl
test
das
adc
adc
cmp
pusha
adc
popa
cmp
pop
or
inc
cmp
push
adc
mov
movnti
adc
test
adcb
inc
cmc
adc
mov
adc
jmp
mov
sbb
sti
or
pop
call
mov
addl
or
dec
push
add
inc
adc
testb
and
inc
bound
pop
ja
or
daa
push
es
add
js
add
pop
mov
pop
fscale
mov
adc
les
dec
jle
hlt
incl
dec
out
fisttpl
jmp
sub
ss
mov
jg
add
sub
jo
fwait
add
ds
mov
sbb
call
shl
cs
pop
sbb
sbb
cmp
loopne
mov
fistpll
andb
inc
pop
xor
repz
testb
mov
adc
mov
popa
or
mov
push
stos
cmp
cmpsl
cmp
and
pop
cld
sbb
insl
mov
mov
rclb
lret
inc
ds
push
les
and
lret
hlt
xor
adc
jne
mov
mov
or
dec
or
sub
jo
in
aas
push
push
mov
mov
jl
push
jne
add
int3
inc
or
nop
mov
mov
repnz
jae
movsb
mov
jmp
lods
xchg
push
xchg
push
icebp
or
lahf
je
sub
hlt
or
mov
push
fcmovnb
mov
enter
add
enter
fimull
addb
mov
loope
adc
jecxz
fmulp
cmp
mov
dec
inc
mov
cmp
mov
lock
test
mov
in
cwtl
sub
pop
aas
jnp
orl
mov
jb
loopne
inc
rorb
leave
inc
push
add
pusha
jo
in
mov
add
cwtl
lods
mov
pop
adc
repnz
dec
sbb
into
cli
xchg
pop
fstl
mov
scas
mov
cmc
jbe
test
or
sub
mov
jmp
add
or
test
inc
gs
mov
loopne
out
push
sbb
add
mov
mov
ret
je
sbb
sti
fs
and
shlb
xchg
jg
test
roll
bound
je
mov
js
lret
repnz
or
sub
pop
dec
sbb
js
add
fimuls
bound
stos
or
push
lock
mov
iret
cmpsb
adc
punpcklbw
loop
ror
mov
jmp
dec
inc
cwtl
and
jne
inc
nop
testb
out
out
and
xor
loope
jo
or
ja
push
out
fdivrs
and
ret
add
add
sub
add
in
sbb
add
imul
xor
add
xor
mov
dec
jo
cs
add
mov
dec
mov
jmp
add
adc
or
adc
icebp
fldl
rolb
jp
sarl
lock
push
jns
or
jle
or
loope
xor
xor
outsb
and
imul
das
les
jnp
or
ret
fadds
testl
dec
je
dec
adc
or
jmp
pop
js
sbb
add
adc
into
add
pop
or
mov
add
xor
lock
push
imul
and
adc
addb
adc
lock
inc
mov
lea
mov
cmpsb
or
call
mov
stos
mov
fnstsw
das
and
push
test
subl
les
stos
ret
mov
and
dec
aad
mov
cmp
insb
sbb
pop
inc
les
xor
adc
or
cmc
lea
xor
adc
dec
sbb
dec
mov
sbb
xor
bound
xor
xchg
ss
out
dec
and
add
aaa
fwait
xchg
add
inc
mov
int3
sahf
in
gs
sbb
int3
lds
xchg
adc
ficoms
push
aaa
push
pop
movsb
sbb
jne
push
loop
sarb
ss
jmp
cmp
mov
mov
or
jne
xor
into
or
adc
and
and
fstl
and
xor
xor
dec
jne
inc
push
int3
cmp
jae
inc
jb
push
mov
popa
mov
lods
add
or
add
mov
xlat
adc
cmp
dec
in
or
push
aam
cmp
inc
cmpsl
sub
orb
adcl
cmpl
lret
cmp
or
cmp
xor
fnsave
call
sbb
enter
pop
push
dec
jno
out
inc
insl
jne
pop
sbb
cmp
nop
in
scas
jmp
push
dec
jno
jns
imul
movsb
xlat
or
dec
dec
xor
scas
shll
pop
push
add
inc
enter
dec
les
add
or
pushf
in
mov
cmp
adcl
inc
add
adc
dec
jae
inc
xchg
adc
sbb
roll
xchg
adc
push
scas
adc
stos
add
add
lock
cmp
push
jl
xchg
incl
pop
mov
xchg
dec
xor
mov
jbe
cmp
lods
cmpsl
mov
cmp
pop
lret
arpl
repz
sub
xchg
xor
add
daa
mov
adc
loop
cmp
push
dec
rcrb
stos
mov
adcl
adc
xchg
push
push
or
sub
xchg
mov
push
cmp
outsb
mov
shll
loope
lret
nop
sub
dec
push
pushf
push
insb
add
or
fadd
adc
mov
sbb
pop
pop
sbb
and
pushf
and
and
jmp
lea
add
cmp
mov
pusha
cmp
ja
je
shl
add
mov
add
lret
jo
imul
cmp
int3
lret
mov
lea
mov
ffree
inc
adc
jge
jmp
sbb
mov
xor
and
mov
push
dec
xorl
mov
xchg
push
cld
mov
lock
add
sub
lods
fstps
jmp
adc
sbb
cmpsb
pop
shlb
leave
lea
jae
dec
add
lea
jg
mov
cmpsl
xor
adc
into
lea
cwtl
jmp
es
jmp
das
sbb
cltd
shrb
das
pop
mov
mov
stos
add
or
jmp
jl
mov
dec
ficompl
dec
shll
clc
test
mov
or
dec
scas
inc
inc
dec
cltd
xchg
push
outsl
sbb
push
sub
or
sbb
sbb
pop
stc
leave
inc
mov
lock
sbb
js
or
test
sub
or
rorl
gs
dec
fcoml
pushf
cmpl
decb
dec
mov
and
sbb
popa
pusha
jl
sub
xlat
push
ret
push
aad
rol
rorb
mov
js
or
testl
inc
loope
push
jo
add
mov
sbb
sbb
addr16
xorb
inc
jge
inc
add
dec
pop
xor
pop
sarl
adc
jge
add
in
push
pop
rcrl
enter
sub
xor
mov
dec
sahf
orl
shl
push
outsl
out
mov
xchg
xorb
add
loope
stos
mov
adc
in
fnstcw
bound
or
rcll
sbb
add
push
fucomp
sub
sub
nop
inc
bnd
mov
and
sub
movsl
cld
filds
push
not
loop
and
cmp
sub
jge
xlat
popf
les
add
jg
inc
shrl
add
mov
mov
add
jecxz
mov
sbb
jmp
es
xchg
fs
fstpt
pop
lods
inc
inc
roll
jo
adc
xor
jb
sub
fdivl
cmp
cmp
sub
push
cmp
das
int3
push
cmp
aam
lods
cs
dec
push
popf
orl
sub
or
addb
mov
adc
jl
fsts
pop
add
jmp
mov
mov
mov
and
sub
push
or
pop
int
jp
pop
and
jl
cmp
arpl
lock
ss
sti
cwtl
xor
ds
cs
or
xchg
ss
rcrb
sub
mov
lea
ret
xchg
mov
icebp
mov
sub
and
mov
add
mov
jnp
push
push
ret
clc
jge
jp
xchg
mov
sar
out
jl
cld
adc
je
sti
xchg
and
fistps
sub
test
sar
mov
icebp
gs
inc
iret
and
movl
cmp
pop
out
arpl
sbb
pusha
lock
cmp
jmp
push
psubsw
and
out
add
xor
repz
push
adc
or
in
ja
lds
dec
inc
das
or
sub
mov
js
push
imul
addr16
popa
sub
and
sbb
adc
sub
mov
pop
and
xchg
mov
pop
xchg
imul
or
popa
cs
mov
mov
call
lea
xchg
adc
pop
mov
inc
inc
sub
cmp
xchg
adc
stos
jge
push
xchg
add
pusha
or
icebp
frstor
cli
sar
test
and
sub
or
inc
aas
add
mov
cmp
xor
dec
jne
pop
jno
into
mov
sbb
stos
xor
jb
or
sbb
and
pop
aaa
mov
pushf
jno
rcrl
and
push
nop
aaa
nop
stos
and
and
js
fucom
pusha
lock
jge,pt
mov
cmp
popa
lock
or
mov
mov
xchg
and
mov
sbb
sub
sub
mov
int
push
aas
lea
cmp
xchg
mov
cmp
push
add
lods
cmpsb
cmp
sbb
stos
imul
frstor
addr16
fiaddl
push
push
mov
push
data16
adc
inc
popa
push
dec
sbb
mov
mov
pop
and
push
fistpl
jae
pop
or
pop
or
jmp
pop
and
push
cmp
xor
bound
popa
and
jmp
push
movsl
rolb
mov
test
lods
and
add
mov
int3
xchg
pop
add
mov
enter
xor
in
shll
add
cmp
mov
jno
movswl
and
roll
push
jl
inc
call
call
inc
or
cld
out
fistpl
or
add
pop
jmp
jne
xchg
mov
in
adc
inc
sbb
xor
in
adc
sbb
rorb
outsl
aaa
adc
xchg
add
jb
sbb
nop
pop
xchg
add
sbbl
add
jl
cmp
dec
push
adc
inc
xor
and
cmp
mov
sub
sub
sub
xchg
dec
jle
testl
sar
pusha
sbb
push
dec
dec
mov
out
cmp
inc
rolb
dec
xlat
inc
push
cmp
fists
icebp
movl
lea
shr
aas
xor
shl
xchg
cmp
insb
leave
loopne
js
mov
jge
or
fisubrl
inc
push
dec
pop
sbb
fisubs
sbb
call
fucomi
or
push
sbb
and
sbb
dec
sub
das
cli
ror
xor
or
inc
clc
jmp
mov
mov
pop
sub
xchg
sub
or
test
stc
push
mov
pop
push
aam
and
or
test
or
clc
push
cmp
xor
lea
negl
xor
push
mov
dec
xchg
jmp
lret
sarl
mov
fcoml
pop
js
push
xor
out
popa
or
mov
and
setg
ds
mov
mov
dec
mov
add
shll
pop
add
movsb
add
cmp
jne
les
jno
xchg
dec
push
in
and
mov
rorb
push
outsb
out
push
xor
mov
xorb
jo
xlat
addb
xbegin
mov
mov
lock
in
frstor
push
and
jne
in
pop
cmp
nop
jo
ret
push
mov
push
xchg
push
mov
or
mov
movsb
mov
lea
add
imul
in
add
cli
jl
or
or
addl
fstp
mov
jnp
in
jne
out
add
roll
adc
push
fcmovnb
test
dec
add
mov
outsl
in
xchg
daa
inc
lea
xchg
xchg
push
jnp
pop
fisttpl
push
or
icebp
je
mov
addb
jg
icebp
sbb
fildl
cmpb
test
movups
mov
loopne
lea
notb
sub
sbb
push
mov
add
repnz
dec
mov
inc
mov
and
inc
stos
mov
rolb
lock
cmp
add
or
movsl
or
les
notl
daa
rorb
jo
incb
faddl
pop
xchg
fdivrl
sbb
mov
push
inc
test
shll
xchg
test
jbe
adc
mov
popa
icebp
pop
loope
lods
xchg
jle
mov
dec
jl
xor
dec
mov
mov
inc
inc
jg
or
sbb
insb
fwait
xchg
sar
into
fsub
jge
dec
mov
mov
pushf
inc
pop
loopne
xor
rcrb
add
pop
ss
jle
sbb
in
xor
loopne
mov
xor
loop
pusha
clc
movd
mov
mov
stc
cwtl
pop
jl
inc
or
mov
xchg
add
or
sarl
inc
movsl
fwait
mov
jno
sbb
out
pop
mov
or
pusha
hlt
or
sarb
sbb
pavgb
mov
pop
push
pop
fmull
das
jmp
orb
sbb
addl
loope
or
push
pop
or
mov
mov
and
jle
mov
andl
xchg
daa
inc
fs
pop
movsb
xor
sbb
push
pop
cld
sbb
sbb
shll
in
lods
pop
xorb
add
push
cmp
add
or
clc
lea
stc
pop
hlt
or
pusha
or
xor
sbb
mov
rcll
push
inc
clc
cmpsl
aaa
mov
mov
mov
fstpl
aaa
loope
in
inc
add
je
push
mov
jl
fwait
addr16
sar
push
mov
lock
push
lcall
out
inc
out
sub
dec
loop
jnp
or
push
or
sahf
icebp
xchg
int
mov
test
xchg
fwait
xchg
sbbl
xchg
adc
push
sub
sbb
cmp
pop
mov
and
cmp
xor
xchg
in
mov
ror
and
or
xor
fisubs
sbb
or
into
dec
inc
dec
in
aam
frstor
call
add
popf
and
sub
loop
popa
adc
lret
mov
or
xor
jno
and
dec
mov
xor
xor
test
rorb
lock
jge
push
jge
push
jo
push
sbb
lret
inc
push
nop
inc
or
add
mov
loopne
in
dec
repnz
sti
femms
rolb
test
push
dec
mov
mov
es
js
inc
add
xchg
shll
push
shrl
and
adc
adc
pop
cs
xchg
xor
lret
xor
sub
loope
clc
and
push
fs
push
sub
shlb
xacquire
inc
jmp
scas
xlat
sti
es
add
lds
inc
cmp
fstp
mov
cmp
sbb
sub
in
sbb
add
or
loopne
sub
jne
fistpl
sub
xor
xlat
dec
in
popf
lcall
arpl
xor
loop
test
xchg
jle
decl
xlat
push
jg
mov
sbb
push
mov
popa
ds
cmp
mov
lock
lock
push
add
popf
rcrb
lea
loop
inc
push
nop
mov
adc
loope
test
add
mov
mov
sub
mov
adc
stc
nop
dec
mov
sub
fcomi
cs
xor
pop
out
sbb
mov
and
lds
addl
loope
add
pop
fisttps
add
mov
add
or
sub
add
or
lret
mov
push
loopne
mov
adc
mov
sub
cmp
jae
icebp
or
or
subb
jbe
daa
addb
arpl
add
shlb
sahf
xchg
inc
rcr
push
inc
cmp
add
sub
push
jne
xor
pop
imul
pusha
shll
sub
les
cli
imul
test
daa
shl
leave
adc
addb
pop
jne
mov
aam
pop
sbb
mov
rorl
sbb
lods
cmpsb
pop
add
call
rorl
in
dec
cmp
adc
jmp
add
jnp
ficoms
adc
imul
int
add
jne
xchg
jg
jne
out
add
or
sar
cmpsl
sbb
gs
in
push
cmpsb
lock
jge
lea
mov
negl
dec
fistl
lea
xor
adc
mulb
push
or
inc
xchg
je
inc
jo
je
adc
or
cmp
dec
mov
push
add
js
adcl
xchg
es
add
in
dec
cli
andb
js
test
mov
adc
cli
xchg
adc
mov
mov
push
xchg
push
int
push
adcb
es
cmp
mov
sbb
mov
and
xlat
aam
sub
call
cs
ljmp
xchg
in
xor
sub
in
xchg
xchg
gs
fcom
in
hlt
les
xchg
enter
adc
in
fidivrs
xchg
adc
pop
mov
lea
sub
mov
adc
mov
gs
int3
bound
scas
loopne
xor
pop
mov
mov
or
aaa
fcoms
movsl
sbb
ret
arpl
sbb
repz
push
cmp
mov
mov
xchg
adc
pop
push
or
lahf
mov
mov
lock
cmp
add
push
add
adc
and
pop
add
sbb
out
movsl
add
xor
mov
pop
icebp
pop
mov
movl
andl
loope
or
sbb
cmc
sub
out
popf
sbb
jno
or
inc
icebp
and
jns
mov
and
jo
cmp
or
rolb
xchg
lods
xor
mov
add
scas
or
nop
add
adc
mov
adc
xor
inc
pop
or
jo
bound
dec
dec
mov
xchg
adc
cld
add
push
and
sub
push
adc
lea
scas
add
push
add
ljmp
ret
sbb
addr16
xor
mov
jae
push
rcll
mov
mov
in
xor
push
and
out
xchg
fadds
sub
sar
rcrl
add
cmp
divl
lods
filds
nop
mov
jns
or
xor
and
repnz
lahf
dec
or
jge
and
aam
sbb
adc
outsl
push
clc
mov
add
inc
sbb
cmpsb
icebp
ja
push
dec
add
mov
mov
repnz
pop
and
add
push
repz
jmp
xor
or
add
push
paddb
sub
ret
mov
repz
push
cs
or
sub
fadds
es
shlb
in
les
loopne
fwait
xchg
xchg
aam
xchg
or
pop
sub
aam
icebp
add
int3
pop
jo
fs
loop
jae
mov
sub
enter
xchg
loopne
push
add
sub
mov
iret
sti
aam
aas
fwait
xor
inc
add
add
test
fbstp
nopl
lods
les
xchg
popl
les
mov
or
les
and
sbb
add
and
and
test
pop
inc
sub
jle
xchg
aam
or
jmp
sbb
je
inc
or
mov
mov
movsl
sub
mov
mov
sub
jp
add
daa
movsl
leave
pop
cmp
into
andb
adc
or
test
add
dec
cmp
sbb
add
and
inc
fisubs
add
xor
xchg
or
daa
jns
push
adc
inc
push
aam
adc
fnsave
add
shrb
and
test
or
je
aaa
sbb
cmp
out
jne
jo
jmp
js
icebp
add
clc
cmp
jne
inc
jb
and
dec
paddsw
cmp
push
or
jl
or
inc
cld
imul
jl
call
xchg
push
js
and
cmp
pop
or
inc
scas
jge
shlb
inc
jge
in
sbb
cmc
adc
loop
and
inc
jae
jge
dec
adc
cmp
iret
rclb
mov
nop
sbb
aam
out
or
inc
repnz
insl
popa
icebp
jecxz
in
cvtps2pd
adc
js
mov
dec
add
pop
sbb
add
rcr
and
aam
lock
cltd
not
adc
inc
cltd
jg
test
pop
lock
xchg
adc
mov
add
add
xchg
jns
inc
mov
push
shl
inc
fmull
shl
mov
sti
pop
lsl
dec
mov
aas
imul
inc
add
add
add
aad
roll
std
sbb
xchg
jne
inc
add
rol
push
push
lock
sbb
add
and
mov
pop
or
fisttps
aam
xlat
cltd
mov
and
dec
or
pop
or
cmp
or
out
loope,pn
xor
std
sub
fsubrp
rcrl
xchg
ret
lret
aas
inc
push
icebp
mov
fsubs
lret
add
mov
sbb
add
dec
push
pushf
mov
jae
dec
inc
in
scas
push
pop
mov
add
outsb
es
mov
cmpsl
push
lock
sbb
cld
mul
add
inc
rcr
pop
sbb
out
add
mov
fidivrl
jl
inc
push
or
sub
outsb
cmp
hlt
dec
js
adc
fcmovnb
out
leave
je
sbb
xchg
and
xchg
pavgb
inc
pavgw
pop
lahf
adc
sub
mov
outsb
xchg
lcall
dec
enter
loop
push
inc
xchg
je
or
adc
jo
pop
jmp
xchg
mov
lret
data16
mov
test
rorl
push
mov
lret
sub
test
inc
or
icebp
mul
testb
lock
mov
into
test
xlat
shlb
insb
ret
jge
mov
dec
test
adc
js
inc
das
jl
inc
jno
stos
and
adc
cmp
add
repz
lock
xor
lahf
sarl
neg
add
mov
outsl
adc
mov
jns
inc
add
jg
adc
call
mov
add
inc
mov
xor
ficompl
loope
pop
bound
in
add
gs
loopne
test
ror
or
pop
sub
pushf
fadds
out
or
outsb
add
mov
les
xor
dec
div
shl
cmp
rcll
push
test
xchg
inc
lahf
jl
inc
test
int3
lea
cwtl
les
dec
ret
and
cmp
pop
clc
sub
das
or
pusha
jo
xor
mov
xor
jbe
mov
cmp
jle
cmp
dec
push
lahf
push
or
and
pop
lock
shlb
imul
fdivl
das
bound
mov
and
cmp
sbb
push
jbe
inc
js
mov
mov
push
or
adc
or
sub
js
daa
jbe
sbb
sub
mov
test
fistps
jp
add
add
sub
mov
adc
inc
xchg
imul
adc
add
in
sarl
xorb
lahf
addr16
in
sbb
mov
or
shrl
jle
addl
sahf
es
in
dec
fisubl
xchg
lock
lock
mov
and
and
pop
or
cmp
jl
jno
mov
xor
adc
ja
cmp
jg
inc
cmp
adc
arpl
inc
pop
ja
dec
and
lock
cmpsl
pop
adc
int3
sbb
sbb
jns
mov
jns
movsl
adcb
sub
rorl
or
aas
inc
xor
jle
pop
sbb
inc
lret
add
or
sbb
push
in
jge
pop
adc
push
cmp
push
inc
stos
cwtl
pop
xchg
js
push
push
lock
mov
ret
pop
mov
loopne
jmp
mov
dec
lea
sbb
loope
mov
shl
movnti
cmp
adc
add
in
jl
jno
lds
jno
jns
push
push
xchg
dec
in
leave
cmp
cmpsb
fsub
lahf
xor
pop
add
mov
sbbb
lock
pop
or
lock
jo
mov
add
cltd
lock
xchg
ficoml
int3
sbb
push
xchg
dec
xor
loop
sub
cs
cmp
call
push
mov
aam
fcoms
fcoms
push
je
in
jmp
lea
das
push
lods
adc
xchg
loope
sbb
call
lock
je
xor
xchg
mov
inc
jmp
ja
ljmp
cmp
inc
fsubl
push
cs
je
lods
and
fmul
inc
int
enter
shl
enter
rcl
add
sbb
enter
mov
inc
push
mov
rcll
lret
repnz
mov
insl
aam
adc
push
add
inc
adc
out
adc
sub
enter
arpl
imul
dec
mov
repz
jnp
push
loop
push
js
jmp
dec
xor
adc
or
mov
adc
and
inc
adc
clc
pop
mov
in
ljmp
and
ret
push
rcrb
in
sbb
and
adc
add
inc
das
je
cltd
sbb
xchg
dec
add
dec
add
or
push
rcr
jne
or
pop
das
dec
push
lret
xchg
call
add
dec
mov
repz
xor
cmp
mov
mov
ret
or
jns
cmp
test
xor
sbb
mov
cmpsb
xor
lahf
push
decl
pop
mov
aad
push
out
jo
test
ret
cmp
mov
jl
sbb
mov
inc
adc
adc
arpl
or
out
jae
pop
sub
clc
test
push
es
je
stc
dec
pop
fs
mov
push
dec
push
push
in
push
test
sbb
cmp
xor
jle
push
jne
cltd
push
int3
inc
pop
sub
iret
inc
sbb
or
jo
jge
jns
xor
inc
sub
dec
dec
or
add
dec
inc
scas
and
enter
in
add
sahf
push
add
rorl
out
jmp
xor
xor
aaa
ret
xlat
cs
sub
addps
imul
outsl
xchg
pop
and
push
dec
add
add
aaa
imul
aam
cmp
lock
jnp
add
jg
rclb
mov
pop
sbb
adc
mov
push
lret
hlt
xchg
pusha
xchg
lock
add
mov
push
shl
pop
add
sub
mull
pop
incb
add
adc
testl
adc
push
jl
call
outsb
mov
je
xor
ficomps
sbb
imul
nop
push
mov
fiadds
sbb
or
sarl
push
adc
in
data16
cmpsl
adc
scas
mov
adc
daa
dec
cmp
pushfw
in
bound
mov
xchg
notb
je
or
adc
push
xor
js
jno
or
add
push
xchg
mov
jnp
fs
cmpb
pop
js
enter
xor
cmp
jg
pop
adc
les
push
test
movlps
cmp
add
sub
popa
aam
sbb
xchg
jge
inc
jl
roll
jnp
cs
dec
adc
loope
jne
mov
pop
adc
sub
and
enter
sbb
loope
xchg
or
cli
adc
xchg
in
dec
inc
cld
mov
aad
add
sarb
push
adc
xor
je
add
in
fdivs
mov
mov
pop
jmp
and
or
xor
ret
clc
sarb
gs
dec
les
dec
xchg
cmp
cs
fmull
or
lret
ret
mulb
mov
sbb
sbb
pusha
and
jmp
inc
aad
movsl
cmp
cmp
ffree
int
rorb
cmp
cmp
cmp
mov
or
rol
push
jno
imul
rcr
and
mov
mov
push
pop
xchg
xor
mov
rcll
icebp
sbb
cmpsl
dec
add
pusha
push
sti
int
ret
mov
add
sar
add
adc
hlt
cmp
loop
and
xor
push
std
inc
cmp
into
sti
jg
sub
push
push
andl
or
aad
xor
out
inc
addr16
push
mov
jge
fisttpl
pop
inc
bound
push
cmp
adc
jne
testl
mov
adc
decb
dec
dec
jmp
pop
je
dec
cmp
ret
fiadds
push
mov
dec
or
adc
mov
or
or
sahf
ficoml
adc
pusha
mov
add
dec
sub
xchg
loope
icebp
sub
pop
adc
pusha
inc
sub
xor
sbb
hlt
outsl
mov
cs
pop
je
icebp
sub
ds
add
adc
dec
or
inc
mov
fldt
ret
cmp
sub
out
jmp
add
pop
jns
adc
adc
adc
inc
pop
sub
pushf
xchg
adc
in
mov
test
and
xchg
addb
dec
sbb
jmp
sbb
xlat
inc
inc
jb
push
pop
pushf
dec
pop
fcmovb
pop
or
or
adc
cs
stos
xchg
in
push
adc
or
fs
lret
addr16
shlb
cli
jae
jl
data16
movsb
orl
loope
inc
and
add
jmp
aaa
icebp
cmp
test
addb
add
mov
cmp
das
std
jp
test
add
loopne
adc
sar
mov
add
pop
lcall
in
add
cmp
cmp
cwtl
fisubrl
and
inc
mov
adc
cmpsl
mov
ror
add
flds
notrack
push
cmp
adc
jmp
pop
dec
pop
pop
or
adc
test
mov
push
pushf
adc
push
mov
aas
sbb
adc
mov
jge
cmp
adc
sub
or
out
outsb
inc
dec
mov
jg
mov
nop
adc
push
andb
pop
push
repz
xor
pop
rcrl
lret
jnp
mov
clc
mov
andb
jns
xchg
mul
dec
or
leave
sub
sub
test
cwtl
xchg
sub
daa
and
push
lcall
iret
sbb
shr
mov
xor
xchg
test
dec
fdiv
fcomp
std
sbb
ret
shlb
add
xchg
ret
sub
pop
xlat
mov
adc
enter
pop
out
jmp
xor
lcall
in
pop
fcompl
in
or
cld
cld
inc
clc
jge
clc
sub
loopne
inc
fdiv
aaa
mov
xchg
xchg
out
adc
lret
jmp
inc
in
jle
clc
fsts
inc
and
pop
daa
or
pushf
mov
rorb
sbb
fildl
mov
inc
or
shlb
fdivrl
outsl
push
dec
mov
adc
dec
aam
iret
or
out
inc
daa
sbbl
fwait
jae
jne
rorl
shl
test
push
or
aad
push
aam
pop
mov
inc
pop
and
adc
ss
stos
add
or
popa
scas
std
pop
testl
xor
add
mov
jge
popf
rorb
push
in
dec
ficoms
fldenv
jnp
sub
bound
inc
or
xchg
sub
push
push
dec
icebp
addl
sub
jne
sbb
pop
cmp
xor
and
addl
lea
lahf
inc
fwait
mov
pop
add
push
or
mov
lret
mov
mov
mov
pop
add
pop
or
push
dec
in
enter
dec
and
add
lret
add
pop
xchg
xchg
and
fsubrs
cmp
jge
mov
imul
pop
test
sti
loopne
pop
add
mov
cli
inc
loopne
fdivp
cmp
rolb
orl
test
dec
mov
mov
mov
loopne
jb
push
sub
push
dec
or
adc
test
nop
xchg
lea
xor
push
jne
jnp
inc
sub
xchg
jge
add
mov
pop
or
test
clc
xchg
les
shl
jns
push
jecxz
jnp
movb
jl
in
rcll
push
mull
jle
mov
mov
inc
test
xchg
cmpsb
jge
movsb
shll
gs
faddl
add
hlt
rcl
push
add
inc
shll
sub
sbb
lahf
icebp
inc
mov
cltd
add
out
inc
ja
cmp
outsl
jl
leave
or
inc
adcb
mov
cmp
in
inc
ss
pusha
enter
adc
xchg
outsb
add
adc
sbb
mov
loopne
arpl
in
jbe
into
mov
ja
adc
jo
inc
sar
mov
sar
les
xor
outsb
pop
icebp
repz
push
or
shll
sbb
lock
sbb
xor
push
xchg
jp
lahf
xchg
and
loopne
cmpsl
jl
test
in
mov
js
das
nop
pop
mov
mov
xchg
mov
jo
xchg
loope
cmp
xchg
xchg
inc
lods
sub
sbb
movsb
inc
add
mov
xchg
dec
pushf
jae
sbb
nop
or
xchg
xchg
loopne
inc
mov
in
hlt
sbb
sub
jns
aas
and
jmp
mov
test
ret
rol
cmp
fstpt
and
or
mov
arpl
loopne
fs
and
pop
push
sbb
or
and
aam
push
jne
adc
push
cli
add
mov
sbbl
stc
jbe
dec
stc
xor
sbb
cli
std
mov
add
repnz
push
add
fcmovb
or
incl
ret
imul
pop
adc
sti
stos
pop
add
cmp
sbb
mov
fdivrl
rcll
or
lods
addr16
outsb
repz
test
add
cmp
or
push
adc
into
jmp
loopne
push
mov
mov
push
push
mov
out
adc
inc
xchg
test
insb
mov
add
scas
adc
imul
in
mov
rclb
sub
mov
loop
cwtl
sahf
out
andb
mov
pop
adc
jnp
add
dec
sub
outsb
pop
mov
fadds
lock
push
push
mov
add
xchg
sbb
push
mov
clc
pop
push
aam
fcom
fmul
jo
pusha
ss
adc
pop
mov
lahf
add
or
je
jno
cmp
xor
js
mov
lret
mov
cmp
cmp
icebp
sub
shlb
and
nop
xchg
mov
ljmp
es
mov
or
inc
mov
imul
inc
sbb
mov
neg
mov
neg
mov
mov
add
jl
lea
wrmsr
jge
in
pop
mov
cmp
ss
test
and
mov
xchg
loope
movsl
pusha
dec
jl
pop
jbe
sbb
xchg
push
dec
cmpsl
cmpsl
mov
add
sbb
fstp
test
lods
pop
sahf
inc
sbb
pusha
test
incl
data16
inc
add
pop
or
imul
aas
int
not
int3
gs
add
mov
and
lods
mov
adc
inc
outsb
aam
sti
push
add
fnstcw
mov
jle
or
hlt
inc
scas
cmp
pop
shrb
sub
loop
daa
stos
sub
mov
sub
cmp
pop
push
and
and
lock
mov
sub
xor
and
adc
dec
sub
push
icebp
and
lods
js
popf
in
call
and
jg
inc
or
push
inc
lods
pop
mov
push
sub
jno
jnp
dec
lock
test
inc
sbb
sub
sub
or
popf
cs
or
loopne
mov
adc
pop
jnp
sub
jge
adc
xchg
xchg
cmp
decl
push
imul
push
jle
insb
adc
add
faddl
lock
ret
addr16
xchg
addb
pop
daa
adc
or
das
mov
pop
filds
or
mov
xchg
cmp
fidivs
push
jns
and
fisubl
mov
loopne
xor
inc
loope
pop
lret
mov
mov
or
dec
push
movsb
inc
fdiv
push
mov
cmpsl
cli
mov
test
adc
adc
mov
push
movsl
pop
push
cmp
sbb
rorl
push
dec
rol
push
add
inc
add
cmp
jl
int3
rorb
cmpsl
and
fwait
and
and
xchg
dec
scas
cmpsl
adcb
xchg
fs
hlt
aam
pusha
xchg
and
pusha
test
ja
or
jbe
or
test
out
or
inc
cmp
sub
mov
or
into
cmpsb
cs
inc
mov
bnd
jl
or
jmp
cmp
mov
mov
adc
or
cmp
lea
xlat
push
test
cli
cmp
jl
jnp
cli
dec
adc
sti
push
or
stc
add
mov
cmp
xor
add
sub
push
adc
insb
notb
dec
inc
ss
roll
mov
daa
jmp
mov
stc
mov
sbb
jmp
xor
out
js
int3
pusha
pop
les
mov
xchg
pop
mov
jne
cmp
in
pusha
xchg
ss
or
jle
mov
add
sbb
sub
lods
mov
xchg
imul
mov
dec
and
inc
in
add
testl
sti
popa
insl
add
xchg
xor
jg
cwtl
cmp
push
pop
inc
pop
loope
jo
adcb
push
stc
jmp
mov
repz
movsb
test
add
lret
mov
jmp
inc
and
adc
dec
inc
sbb
cli
test
sbb
cmp
dec
lahf
lea
sub
aas
scas
out
test
adc
out
lahf
or
jb
jecxz
add
jmp
push
pop
loopne
inc
rcrb
dec
push
data16
shrb
jo
adc
fwait
xchg
cmpb
xor
xor
in
mov
adc
shr
loope
es
scas
sahf
out
and
js
cli
arpl
pop
xor
push
fisttpl
andb
lea
xor
and
or
mov
xor
add
adc
sub
stc
test
nop
fadds
push
inc
nop
add
add
rorl
enter
xchg
dec
je
dec
jne
imul
mov
push
xchg
mov
adc
adc
orb
sub
out
xchg
sbbb
pusha
and
mov
nop
push
pop
mov
xor
xchg
pop
rcl
ss
dec
into
cld
push
mov
fdiv
push
out
push
fisubs
jge
adc
jb
cmpsl
dec
add
sbb
lahf
lret
sub
sbb
or
dec
das
fucom
pusha
pop
popa
lret
mov
call
aaa
dec
fiaddl
lock
or
aas
cmp
mov
outsl
sti
sub
test
add
mov
cmpsl
jns
cmpl
jge
das
xchg
aam
outsb
pop
les
cmp
sahf
ljmp
dec
clc
jnp
inc
orb
imull
mov
pop
nop
push
adc
add
mov
clc
inc
stc
pop
dec
and
mov
add
ret
sbb
inc
and
mov
jae
aam
lret
das
push
xor
pop
sub
cs
cmp
popl
mov
and
push
filds
mov
or
clc
dec
adc
or
sbb
cwtl
pop
mov
bound
cs
push
push
push
ds
add
or
cmp
ja
pushf
ljmp
addr16
stc
lods
or
andb
es
dec
jb
lods
add
gs
scas
or
push
ja
sbb
ja
rclb
movsb
xchg
cmpsl
add
rcrl
mov
sub
adc
add
sbb
imul
or
jg
cmp
lods
dec
pop
shlb
out
andb
push
xchg
cmp
fdivl
sbbb
rclb
sub
xor
adc
dec
mov
cmp
sub
dec
cmc
mov
scas
push
stc
mov
sub
mov
mov
or
lcall
insb
enter
mov
dec
mulb
or
add
push
push
pushf
mov
mov
xchg
sbb
jmp
cmp
jnp
inc
dec
jl
bound
in
add
fldl
mov
jl
xchg
add
ds
dec
aam
popl
jns
movsl
jbe
sbb
sub
cmp
sbb
adc
push
cmp
mov
cmp
adcl
bswap
mov
xchg
adc
push
sub
hlt
or
out
fnstenv
inc
and
pop
xchg
dec
xchg
dec
lea
inc
push
or
cwtl
dec
mov
pop
push
add
fs
jp
push
push
sbb
mov
sti
or
iret
je
orb
xorl
scas
push
and
lods
and
scas
mov
inc
fsubl
xor
push
data16
je
daa
shlb
jl
in
andl
pop
sbb
add
cs
xor
adc
into
adc
cmp
icebp
mov
xchg
mov
stc
pop
mov
push
lea
lods
sbb
mov
add
and
inc
les
dec
xor
ljmp
jo
mov
test
dec
mov
mov
jae
sub
pop
inc
or
or
fisubrl
stos
int3
test
outsl
cld
dec
lods
and
and
mov
jo
adc
jmp
xchg
add
cmp
mov
mov
add
vcvtss2si
mov
arpl
shrl
in
andb
mov
mov
jne
xchg
push
push
or
int
jp
lcall
lods
mov
and
mov
lock
jge
or
add
cmp
js
inc
xchg
jo
shlb
ret
lods
xchg
cs
cmp
insl
xchg
jmp
icebp
dec
push
mov
lea
adc
adcb
nop
add
sub
sub
lea
dec
fistl
cmp
xor
pop
cwtl
lret
icebp
into
aad
jmp
mov
fimull
push
test
rorb
sbb
push
into
and
adc
sbb
adc
outsl
movsb
rcll
stos
push
and
lret
and
and
dec
xchg
or
ret
xor
sub
adc
fstps
cwtl
xchg
add
cmp
ljmp
adc
mov
sbb
dec
sub
popf
mov
sbb
mov
ret
jae
add
push
or
and
lock
xchg
bound
xor
sub
adc
and
adc
jne
fcoml
mov
les
shlw
add
inc
mov
mov
mov
cmpsb
or
sub
add
daa
cmpl
cmpsb
imul
inc
push
sbb
ds
xor
cwtl
dec
mov
mov
xchg
sbb
xchg
outsl
sti
daa
jbe
lret
mov
sub
mov
xor
shll
push
or
imul
daa
adc
insb
or
nop
xor
cli
jl
xlat
mov
sub
fidivl
sub
jae
jo
push
ret
fidivl
add
cmp
and
and
jb
push
orb
push
sbb
cmp
imul
cwtl
add
sub
dec
mov
push
dec
aas
mov
mov
nop
ljmp
fs
xchg
push
fistl
sub
sahf
popf
xor
or
and
push
dec
mov
or
inc
xor
jo
add
jbe
pop
push
scas
dec
adc
inc
push
frstor
imul
adc
add
pop
inc
push
xchg
inc
inc
mov
inc
adc
mov
imul
scas
mov
test
insb
sbbb
push
push
scas
lods
mov
mov
push
or
push
test
xchg
sub
sub
mov
rcl
dec
pop
or
push
cs
or
mov
dec
dec
cld
dec
xor
lods
dec
xor
add
dec
mov
push
movl
stos
xor
mov
push
mov
and
jl
mov
or
daa
cmp
int3
lcall
add
xchg
test
dec
push
adc
popf
cmpb
in
push
pop
test
and
loop
loopne
cmp
jae
jp
movsb
push
js
sbb
dec
xor
and
pop
xor
iret
stos
xor
clc
sub
mov
jecxz
and
into
sub
fsubs
cli
pop
mov
jb
pop
push
shrl
push
sbb
jle
out
andl
xor
sub
dec
pop
or
fsubs
cmp
adc
lcall
daa
xchg
je
test
or
into
enter
inc
add
and
xor
xor
test
cltd
mov
mov
add
shrb
ret
push
push
pop
dec
shrb
and
cmp
pop
mov
xchg
daa
lea
mov
dec
cmp
or
and
push
mov
inc
das
cmp
nop
andl
shrb
je
mulb
pushaw
pusha
arpl
pushf
cmp
pusha
jnp
in
lea
and
cs
dec
push
pop
push
das
ja
mov
and
loop
add
mov
or
xorb
mov
pop
mov
push
pusha
xor
movsl
cmp
dec
add
push
cmpsl
mov
pop
pop
mov
and
lret
sbb
jg
push
or
add
test
movsl
imul
mov
or
add
je
mov
or
test
jb
or
or
pusha
dec
add
ret
or
xor
mov
mov
mov
cmp
adc
roll
jnp
push
dec
pop
and
dec
rol
inc
sarl
jno
mov
pusha
mov
jg
fildll
or
sbb
dec
repz
adc
pop
adc
pop
iret
test
enter
and
fadds
fldenv
jl
cmpb
xor
cmp
adc
movsl
stos
gs
xor
or
shr
add
dec
je
add
out
mov
push
je
iret
fadds
rol
mov
cmp
pop
jo
cmp
insb
addr16
pop
mov
test
call
and
mov
cmp
mov
sub
sbb
das
or
xor
xchg
sbb
push
nop
push
scas
and
mov
rcr
stos
push
mov
outsb
jb
sub
push
nop
js
push
scas
bound
push
popl
ret
or
sbb
xor
mov
popa
nop
movsl
pop
mov
bnd
cltd
mov
imulb
int3
pop
sub
cmp
push
fdiv
adc
xchg
loope
dec
adc
adc
movsb
sahf
jne
cmpsb
sbb
cltd
loope,pn
cwtl
cli
push
mov
cmp
xchg
push
sub
fidivrl
or
inc
adc
sbb
push
fwait
aas
jo
dec
mov
pop
mov
mov
xlat
test
repnz
fstpl
je
rorl
mov
add
jmp
dec
loopne
int3
es
add
pop
lods
lahf
add
push
inc
rcrb
dec
or
ja
pop
and
aad
xor
shrb
inc
inc
sbb
std
mov
jnp
outsl
or
cmc
or
outsb
js
inc
mov
pushf
and
push
pop
stos
jle
sbb
and
inc
dec
adc
pop
adc
push
out
in
mov
popf
xchg
enter
or
xchg
arpl
add
cs
dec
sbb
add
push
mov
dec
xor
insl
dec
or
stos
xchg
push
ja
and
pushf
cli
sahf
les
pusha
push
je
push
mov
push
mov
dec
je
sbb
jmp
cmp
push
ss
xchg
out
pop
inc
and
popl
xor
fimull
jb
loopne
sbb
sbb
ret
imul
cmp
shlb
add
mov
insl
inc
jmp
bound
push
mov
pusha
and
mov
loop
sub
cwtl
lret
in
sub
fdivrl
cmp
push
mov
orb
pushf
dec
sbb
and
ja
jbe
leave
jmp
out
dec
dec
cmp
xchg
push
movswl
inc
fiadds
add
and
sti
mov
and
scas
dec
cmp
not
jmp
xorl
and
adc
or
out
testl
lea
shrl
mov
add
cwtl
sahf
cli
std
dec
or
fmull
fmull
mov
icebp
cmp
jl
xchg
sub
adc
clc
cltd
mov
mov
adc
lret
lds
pop
mov
lods
adc
pop
inc
mov
mov
mov
cwtl
dec
rolb
js
xchg
into
add
push
add
sub
rorb
push
jmp
pop
mov
pop
mov
stos
rcll
jl
push
sub
inc
popf
imul
or
xor
loop
add
push
adcb
add
inc
add
sti
mov
jmp
and
pusha
pop
jecxz
and
ret
adc
push
call
pop
pop
dec
xor
inc
or
sbb
sub
pop
lret
xchg
add
xor
pop
dec
push
dec
inc
mov
mov
not
mov
dec
jae
adc
push
dec
pop
adc
push
or
jbe
std
fisubl
dec
enter
pop
jo
adc
push
fmul
jbe
lret
push
hlt
pusha
sub
mov
test
add
pop
shrl
es
pop
mov
add
mov
rorb
ljmp
or
mov
push
loop
je
jne
test
stos
xchg
unpckhps
in
lea
pop
and
or
cld
inc
or
test
jo
clc
jbe
mov
inc
sti
dec
inc
or
inc
dec
xadd
fstpt
ja
rclb
arpl
or
add
dec
push
jae
mov
mov
stos
arpl
mov
mov
and
inc
cmpl
loopne
xchg
add
adc
mov
popl
and
int
pop
out
jns
cli
cmp
jbe
mov
inc
add
mov
rcrb
je
jbe
in
mov
enter
insl
xchg
aam
mov
cmpb
add
roll
mov
add
inc
sti
fldl
jno
arpl
inc
lea
ffree
xor
rolb
repnz
jo
hlt
lock
pop
aad
or
hlt
jg
push
push
pop
popf
ja
jo
inc
or
pop
fistpll
test
inc
rclb
mov
outsl
inc
cmc
daa
pop
push
add
ljmp
jo
sub
jbe
dec
cmp
fsubrp
testb
push
add
inc
jecxz
sbb
gs
imull
jbe
cmp
pushl
mov
jnp
adc
out
aas
aam
inc
cmp
and
arpl
mov
clflush
nop
ret
dec
loopne
dec
in
and
rorb
add
mov
sbb
fimuls
adc
fimuls
or
sub
lock
jno
sbb
push
sub
cmp
xor
sbb
xchg
sbb
fisttps
movl
xor
jp
popf
test
or
jbe
lea
mov
ja
pop
in
jp
cwtl
jns
jge
add
pop
fdivl
roll
ja
mov
sbb
jecxz
add
jne
jge
jl
and
mov
sub
in
pop
nop
popaw
add
outsl
mov
add
movl
loopne
adc
testl
sub
xchg
shlb
or
xchg
fwait
sarb
add
loopne
jg
pshufw
ret
mov
rcrb
add
sub
mov
jnp
lock
imul
lahf
mov
and
loope
or
enter
add
pop
jp
mov
js
cs
out
cs
inc
inc
adc
inc
rcrb
mov
test
cltd
inc
mov
sbb
cwtl
js
pushf
or
cmp
or
lret
adcl
or
rorb
push
je
imul
pop
inc
push
jo
sbb
test
adc
or
xchg
inc
jmp
mov
xchg
cwtl
mov
adc
pop
mov
and
sub
mov
mov
cmp
jmp
xchg
cltd
or
es
daa
fwait
dec
or
test
jo
jo
or
dec
lahf
xor
push
and
test
out
and
xchg
imul
sahf
mov
or
mov
cmp
sar
xchg
xor
pushf
jne
movsl
pop
lcall
inc
cwtl
movsl
pop
lcall
dec
js
mov
sti
sbb
or
fstps
mov
or
jbe
enter
or
mov
adc
cmp
loopne
out
push
mov
lahf
cltd
xchg
cld
filds
fdivrs
pop
fimuls
adc
inc
fdivr
pop
hlt
rcl
xchg
gs
shl
imul
pop
pop
repz
and
lock
shll
mov
out
dec
xor
cld
neg
shr
and
mov
mov
dec
and
in
xor
call
push
pop
pop
in
jns
repnz
dec
ja
in
adc
enter
adc
gs
lretw
imul
les
sub
rcrb
int3
flds
gs
sbb
sbb
cmpsb
mov
cwtl
pusha
in
aam
push
in
call
out
in
cld
sbb
inc
fwait
push
or
pop
and
pop
fwait
push
jo
ja
arpl
pop
inc
adc
mov
sub
pop
andb
sub
pop
pusha
push
jnp
mov
push
outsl
xchg
inc
bound
jge
jns
cmp
inc
pop
cmp
sbb
aas
xor
jne
pop
sbb
inc
or
inc
xor
adc
arpl
repz
jns
bnd
or
mov
push
ret
out
sbb
les
lahf
mov
andb
adc
and
adc
pop
and
das
and
fadds
mov
sbb
or
inc
insb
lds
aaa
cmp
cmp
add
iret
adc
mov
lds
dec
inc
inc
add
js
ljmp
ljmp
aas
pop
sub
aam
mov
jne
daa
rolb
aad
push
sbb
test
or
dec
push
add
jp
movl
dec
cmp
gs
pop
xor
mov
dec
inc
push
push
dec
pusha
inc
aam
call
mov
pop
xor
imul
stos
xchg
xlat
pop
pop
and
rolb
or
shr
rcrb
std
mov
lock
stos
sbb
int
and
sbb
inc
fwait
xor
add
and
pusha
xchg
add
movsb
lret
sahf
ds
aas
mov
dec
jmp
in
sbb
xor
imul
add
sbb
lock
in
fistl
lea
sub
xor
ja
jns
loopne
jns
mov
jnp
fcomp
mov
pop
sbb
js
fdivl
sub
cld
and
loopne
jg
loopne
jge
repnz
rorb
mov
ficoms
arpl
sti
xchg
xor
add
adc
adc
push
jp
sti
add
idivb
adc
inc
into
add
xor
pop
imul
loopne
push
mov
push
sub
mov
and
sub
and
inc
add
and
imul
inc
loopne
push
sub
push
xchg
les
mov
push
lock
sbb
arpl
les
fwait
rcr
add
and
ds
scas
dec
mov
out
inc
or
sub
mov
sbb
xchg
call
mov
and
call
or
add
add
add
inc
pop
lret
fisubs
fidivs
pop
incb
xchg
mov
sbb
lds
xchg
fdivrs
mov
mov
fdivr
scas
and
add
add
jne
adc
mov
dec
jmp
sub
shl
ss
fs
pop
pop
in
mov
in
fisubrs
ret
shrb
movsb
mov
popf
jns
sbb
add
xchg
pushf
enter
push
mov
sub
add
sub
xor
mov
mov
call
faddl
loopne
xor
flds
add
fmull
out
mov
or
cmp
xor
xor
push
sub
xchg
pusha
jmp
cmp
adc
arpl
inc
pusha
push
mov
aaa
jmp
stos
mov
inc
iret
push
dec
xchg
and
sub
fidivrs
shl
or
loop
lea
add
sti
pop
out
neg
lea
shl
negl
xor
jecxz
push
cmp
dec
adc
jo
xchg
test
hlt
and
enter
lock
jo
mov
and
mov
xor
fimull
cmp
imul
xchg
cmpl
adc
jns
cmp
inc
call
add
cmp
jae
neg
insl
ja
shll
imul
push
in
int
lock
outsl
addl
js
emms
sub
add
and
cmpsl
psllw
push
or
xor
sub
in
das
xor
clc
add
add
loope
lcall
lea
in
fsubl
push
mov
pushf
in
jp
lea
test
inc
aas
cmp
add
xchg
xchg
xor
xchg
rolb
xor
loop
bound
js
mov
add
add
mov
aaa
or
enter
lret
lret
lret
lret
add
sar
fcmovnu
xchg
cmp
sarb
sahf
jecxz
sbb
adc
pop
or
adc
pop
in
add
scas
mov
mov
pop
fsts
imul
adc
adc
or
pop
shrl
pop
sbb
or
gs
push
xor
aaa
loop
dec
push
push
dec
sub
mov
popa
adc
pop
stos
rcl
inc
adc
push
or
cmpsb
rolb
imul
js
xor
popa
mov
shrb
mov
enter
adc
popa
lret
adc
jns
or
mov
xor
pop
jo
mov
push
sbb
push
pop
lds
imul
add
inc
sbb
lock
popf
cmpsl
sahf
imul
push
fidivs
mov
repz
sub
lcall
inc
xlat
inc
and
inc
adc
add
or
add
cmp
aam
and
xor
or
mov
scas
clc
sbb
inc
arpl
cmpsl
adc
or
add
adc
dec
shr
mov
xchg
jle
add
xchg
adc
jne
xor
mov
mov
imul
shrl
adc
add
nop
imul
movsb
inc
shll
pop
add
imul
push
or
or
sbb
rcll
add
inc
je
or
dec
jp
ret
add
aam
ja
mov
ret
dec
or
clc
cmpsl
xor
mov
pop
nop
daa
adc
sbb
test
xchg
mov
or
xchg
xorb
lock
inc
inc
inc
imul
dec
or
pause
aam
jle
xchg
sub
pop
cmp
sbb
sbb
mov
adc
mov
outsb
cld
lretw
mov
sbb
sbb
leave
cmp
inc
sbb
xor
les
jle,pn
call
sbb
xchg
loopne
je
ret
call
cmp
sbb
mov
outsl
dec
movzbl
shl
inc
jns
mov
call
sbb
out
sub
mov
adc
inc
and
or
sbb
xor
and
pop
mov
push
adc
dec
push
into
xchg
inc
outsl
add
or
loop
leave
andl
cmp
add
push
shll
lods
jg
and
cmp
je
or
push
inc
fld
push
and
cmp
pop
push
mov
stos
push
mov
or
inc
add
iret
lods
shrd
shrb
cli
add
call
or
push
pop
mov
inc
sub
lock
adc
stc
mov
dec
adc
mov
out
pop
dec
or
mov
sbb
mov
add
stc
cmp
or
loop
es
jne
cmp
and
test
add
aad
testl
cmp
xor
cmp
aaa
iret
inc
pop
jl
add
pop
add
pop
test
loopne
push
dec
pop
inc
rolb
push
imul
mov
cmp
pusha
cmp
ds
mov
ss
sub
xor
sti
or
les
popa
or
adc
jge
add
jmp
jbe
inc
pop
xchg
mov
ret
mov
mov
inc
lds
add
out
leave
add
sbb
divl
and
and
xchg
inc
inc
and
mov
jbe
xchg
inc
repnz
mov
dec
arpl
or
pop
sub
sahf
ret
sbb
or
fiadds
sbb
and
fucom
stos
insb
leave
jns
add
xor
daa
inc
addb
dec
nop
mov
jo
push
push
or
inc
add
add
lock
inc
or
cmp
sbb
xchg
and
mov
cmpsl
iret
mov
xchg
ja
push
xchg
or
test
call
cwtl
push
or
ja
daa
dec
pop
cmp
add
mov
clc
popa
mov
mov
subl
cmp
nop
data16
inc
jne
push
xor
cs
movb
push
fimull
add
lds
pushl
leave
inc
mov
mov
add
dec
jno
pop
adc
jle
bound
icebp
loop
dec
inc
cmp
cmpsl
adc
sbb
and
xchg
xchg
cmpsb
cmp
sbb
sbb
inc
push
and
sbb
mov
and
adc
sbb
and
and
cmp
nop
and
es
add
cwtl
push
loope
js
je
xlat
outsb
xchg
mov
adc
sub
jle
fisubs
or
jno
or
adc
jae
add
sub
xchg
inc
adc
or
or
cmpb
in
out
add
xor
xor
iret
push
inc
push
movsl
xor
push
or
lods
test
push
lea
add
sub
xor
out
sti
add
adc
in
lea
mov
out
aam
pusha
or
sbb
sub
out
inc
sub
pop
loopne
aam
js
popa
fwait
jle
in
jno
pushf
dec
roll
in
mull
pusha
push
inc
mov
loopne
xchg
or
fistpl
inc
xor
enter
je
inc
jg
xor
xor
dec
lds
enter
sti
jmp
dec
pop
vandps
into
in
popf
and
fs
in
nop
mov
pop
js
popf
adc
adc
adc
adc
and
adc
in
cmp
adcb
jmp
jmp
mov
addr16
mov
les
int3
pop
loop
les
jbe
int
add
or
stos
outsl
cmc
aad
sbb
or
adc
dec
sub
push
adc
sbb
or
sarb
cmpsb
sbb
mov
push
cli
mov
pop
test
cwtl
vpmuludq
mov
aam
test
jl
test
push
add
inc
push
add
adc
cmp
lea
adc
or
imul
cli
fld
outsl
mov
sub
dec
out
adc
movsb
lods
or
adc
arpl
bound
add
inc
mov
push
add
mov
mov
mov
push
or
ja
add
sbb
jge
or
jb
loop
test
inc
adc
mov
add
push
insl
sub
je
xor
orb
cwtl
negl
sbb
pop
mov
xor
and
orb
cmpsb
xchg
push
mov
das
or
loope
enter
jp
icebp
sarb
testl
mov
mov
mov
into
adc
push
inc
negb
sti
fadds
xchg
into
in
mov
repnz
and
jno
mov
pop
adc
pop
or
sub
cltd
testb
and
and
cmc
push
inc
ret
or
push
lock
inc
cmp
imul
push
pop
or
xchg
shl
push
cmp
or
push
stos
add
cmp
pop
xchg
add
adc
adc
sbb
je
xchg
and
add
xlat
ds
cmpsl
dec
aad
leave
test
outsb
xor
inc
adc
jb
cmp
add
pop
jb
inc
and
add
sbb
stc
or
int
cmp
bnd
inc
mov
xchg
add
enter
add
add
jne
fbstp
es
inc
add
iret
dec
enter
and
mov
xchg
sub
clc
or
aaa
push
jb
xchg
cld
xor
or
or
test
xchg
mov
mov
imul
data16
repz
mov
pop
xchg
lret
add
mov
mov
pop
in
or
faddl
mov
push
jl
mov
inc
push
dec
bound
dec
pop
pop
test
dec
rorl
sub
pop
adc
mov
jle
xchg
pop
xchg
xor
sub
sbb
sub
xchg
pop
mov
fucomip
xor
lea
aam
jnp
adc
adc
das
sahf
or
mov
adc
add
xchg
movsl
loop
inc
bound
cmp
push
loopne
std
aaa
and
lods
cmp
or
movsb
and
test
add
adc
jl,pn
jne
jo
xor
ljmp
cs
shll
loope
pop
rorb
push
insb
sub
pusha
gs
jbe
adc
mov
rcll
adc
or
cmp
orl
sub
ret
sbb
inc
push
insb
cmp
fcmovnb
push
add
rcrl
test
aaa
out
lds
test
fiadds
mov
sub
pop
mov
out
inc
icebp
or
sub
dec
jmp
loopne
hlt
shrb
add
notb
adc
mov
push
arpl
aas
xchg
movsl
xor
clc
adc
mov
adc
out
pop
fistpl
daa
std
sub
push
inc
mov
lods
or
sbb
fldpi
or
jge
mov
and
dec
inc
fwait
addr16
push
mov
test
dec
cmp
xchg
mov
mov
fbld
arpl
jmp
mov
sbb
adc
clc
mov
or
adc
or
add
mov
pop
push
hlt
cwtl
push
sarl
sub
mov
bound
pop
aad
inc
sbb
xor
xor
inc
rcll
popf
pop
mov
xor
sbb
dec
notb
mov
sbb
add
int3
imul
imul
sub
cs
pop
in
dec
inc
push
add
xchg
and
and
pusha
in
xchg
pop
test
xchg
test
or
scas
dec
adc
lods
cmp
or
sbb
push
add
leave
movzbl
inc
dec
cmp
idivb
incl
or
add
jne
dec
je
inc
mov
imul
addl
enter
ror
push
sub
sbb
mov
shll
push
int
popf
xchg
lock
mov
fwait
dec
or
pop
dec
xor
test
lds
sbb
enter
inc
cmp
push
lret
or
push
and
add
xchg
repnz
imul
xchg
and
imul
daa
test
mov
add
xlat
adc
push
xchg
cmpsl
adc
pop
movsb
mov
mov
dec
cli
int
jge
pextrw
inc
ret
test
dec
mov
or
inc
add
mov
xor
push
xchg
addr16
test
adc
dec
fmuls
dec
iret
lret
das
push
cmp
in
fcoml
test
push
mov
adc
mov
pop
push
push
and
in
fistl
xchg
or
add
mov
pop
mov
fsubl
lock
adc
pop
xor
loopne
or
es
dec
mov
xor
enter
clc
mov
lds
or
imul
push
mov
cmp
cmp
jno
imul
mov
and
push
andnps
push
xchg
mov
lock
mov
mov
nop
out
cmp
cwtl
in
xchg
xor
pushf
fwait
mov
rorb
mov
cmp
add
or
lret
pop
jo
scas
sbb
sub
sbb
sub
mov
jo
andl
or
cmp
dec
dec
push
arpl
mov
mov
arpl
cmpb
mov
subl
ss
adc
loope
divb
jne
sarb
roll
adc
inc
or
jge
cwtl
ljmp
repz
aam
push
xor
pop
int
jo
push
push
sub
or
mov
mov
scas
imul
fcompl
fidivl
sub
inc
xchg
sub
decb
sahf
cltd
sub
popa
imul
add
popa
jns
dec
mov
push
loopne
mov
mov
or
mov
adc
push
dec
cltd
enter
mov
fcoml
or
push
imul
cmpsb
inc
pop
aaa
add
mov
and
rclb
push
movsl
not
inc
call
inc
and
add
mov
mov
or
cltd
pusha
hlt
sub
ja
add
inc
cmp
pop
in
dec
and
aam
mov
or
cwtl
dec
jl
jo
xchg
sub
pushl
mov
inc
sub
pop
ret
push
or
push
jae
mov
jb
daa
out
es
and
sbb
inc
add
lahf
mov
lock
adc
dec
jl
dec
mov
stc
out
adc
adc
les
mov
xchg
inc
fimuls
mov
mov
cmp
or
leave
js
lret
mov
stc
push
cmp
pop
xchg
jo
inc
decl
loopne
push
lcall
pop
adc
push
icebp
add
add
inc
fldenv
push
loope
add
push
dec
sbb
push
jne
ret
cld
jecxz
sbb
or
nop
sub
fnstsw
mov
push
or
push
and
sub
dec
dec
popa
insl
jns
aam
adc
or
pop
or
xorb
and
and
imul
sti
mov
mov
adc
mov
adc
and
dec
test
cmp
enter
orb
jle
daa
pop
fwait
inc
pusha
mov
dec
adc
jae
xor
pop
lahf
je
cltd
adc
push
adc
and
and
or
loopne
or
xchg
mov
sub
push
mov
xor
fwait
adc
inc
jecxz
enter
sbb
add
xor
and
sbb
dec
enter
and
add
mov
adc
mov
mov
pop
out
push
not
mov
inc
pop
add
adc
pop
jo
add
icebp
lea
jae
mov
pop
push
pop
insb
loop
movsl
ficompl
xor
in
or
cmp
aam
or
push
fwait
mov
push
clc
push
mov
mov
movl
lock
icebp
dec
ud1
pop
push
fisubrs
and
aam
cmc
mov
movsl
fs
fs
inc
jg
jmp
mov
or
mov
xchg
fs
popa
inc
fisttpl
mov
adc
push
mov
add
push
xor
adc
push
sub
or
popa
inc
iret
inc
js
jl
stc
add
jno
repz
cmp
or
mov
push
inc
in
jbe
aaa
mov
dec
adc
test
dec
mov
outsb
add
dec
fucomip
or
nop
xchg
divl
lret
addr16
xchg
lods
pop
mov
dec
mov
inc
nop
push
js
sbb
clc
jno
fimuls
inc
and
xchg
inc
out
orb
fisttpll
xor
in
mov
push
pop
and
pop
push
cld
sub
loope
leave
and
fisubs
adc
mov
jnp
jle
negb
and
push
add
ds
dec
loop
mov
sub
aaa
sub
xor
mov
shlb
rcl
add
jns
mov
aam
adc
pop
sbb
pop
imul
repnz
dec
ret
cmpsb
imul
imul
and
ljmp
flds
bnd
bound
pop
gs
mull
mov
inc
cltd
notb
jl
mov
and
push
test
jo
mov
push
xlat
lds
cltd
out
inc
cmp
pop
mov
jbe
push
daa
dec
or
fcmovu
into
dec
es
cmp
out
adc
fadds
ret
xor
dec
ja
inc
lods
loopne
adc
mov
cwtl
or
cli
cmpsb
and
or
inc
sbb
add
leave
add
sahf
and
mov
sbb
adc
cmp
sbb
and
popa
add
loopne
cmp
inc
std
movsb
xchg
xchg
mov
ss
movsb
pop
cld
xor
adc
sbb
les
and
andb
add
ret
and
ds
addl
addb
add
sbb
test
sbb
and
in
std
lret
add
xchg
loop
andb
and
mov
inc
pop
aas
or
jo
into
mov
addr16
xchg
jge
inc
ja
adc
inc
jg
and
jbe
ffreep
jbe
mov
sub
orb
push
mov
add
jo
mov
dec
sbb
sub
push
je
loope
mov
cmpb
add
jle
jle
out
scas
cmp
push
push
fs
add
inc
cmp
loop
fdivs
daa
add
or
leave
or
and
dec
dec
and
loop
add
cmp
inc
dec
cmc
pop
add
bound
adc
jge
add
pop
mov
inc
lcall
mov
add
fnstcw
imul
or
adc
xor
cmp
enter
lret
pop
xor
mov
sbbl
shlb
movsb
scas
pop
xchg
jbe
dec
push
daa
sub
xor
adc
add
mov
add
xchg
add
insl
jnp
dec
rorl
add
fildll
add
jmp
mov
push
push
sub
fisubl
pop
fstps
sbbb
mov
inc
sub
inc
adc
push
test
xor
ds
push
gs
aas
inc
pushf
and
fsubl
jb
inc
dec
bound
loop
shlb
inc
xor
sbbl
or
aaa
push
add
insb
data16
push
adc
add
lods
xlat
push
les
test
ret
dec
adc
mov
pop
xor
pop
mov
jo
dec
and
jg
dec
push
addr16
and
pop
push
add
push
push
dec
jbe
add
and
je
mov
push
enter
rclb
xchg
inc
sbb
push
pop
dec
lods
push
xchg
mov
mov
aam
dec
and
push
cmp
cmp
xchg
pop
pop
das
stos
cmp
ds
mov
inc
mov
xor
dec
mov
xchg
adc
dec
rcr
ret
and
gs
icebp
mov
daa
movsb
jl
add
xor
xchg
or
jns
dec
sbb
addr16
std
loope
pop
cmpsb
pop
and
jmp
out
adc
pop
in
push
push
or
shrl
fdiv
and
cmp
inc
ficoms
sub
or
xchg
and
mov
lock
pop
jle
data16
fisttpll
sbb
hlt
inc
mov
jmp
jno
sub
inc
addl
push
lods
add
in
pop
shl
or
pop
and
and
adc
cltd
shll
pop
add
xor
arpl
mov
push
cmp
add
push
ret
into
ds
push
in
or
test
mov
dec
hlt
mov
and
or
out
add
pop
jbe
or
adc
jecxz
fbld
jo
test
lods
pop
movsb
aam
test
lret
pop
aas
push
add
add
pop
dec
add
lock
mov
cmp
lcall
jl
xchg
outsb
xor
or
dec
jo
inc
pusha
sbb
inc
cmpsb
outsb
insb
xchg
test
adcb
mov
sbb
mov
and
movsb
or
inc
xor
inc
sbb
stos
mov
testl
lods
xor
mov
or
scas
fs
fwait
add
adc
xor
xor
movzwl
lcall
ljmp
sbb
push
add
dec
test
fdivl
xor
popa
pop
loopne
mov
cmp
into
jl
orl
mov
cmpl
mov
les
in
mov
std
rolb
add
clc
dec
sub
std
lea
movl
adc
cmp
adc
das
add
cli
add
mov
addb
adc
pop
dec
or
jmp
leave
bound
dec
inc
sbb
lods
xor
in
rcll
xchg
les
fists
ja
fcomps
jg
lahf
xor
ljmp
and
das
in
jno
push
xor
push
and
fsubs
cmp
jae
jnp
mov
insb
mov
xchg
out
ljmp
adc
or
jl
shrl
lea
mov
lods
lock
pop
fcoms
push
lret
and
in
lea
cld
dec
mov
inc
push
mov
or
jne
adc
xor
inc
push
jne
aam
loop
test
addb
filds
pop
shlb
jl
enter
or
sbb
jecxz
sbb
mov
out
loopne,pn
and
sbb
pop
int3
mov
in
mov
add
mov
rcrb
xor
pop
enter
xchg
aam
sub
mov
mov
out
push
push
and
inc
fs
outsl
roll
inc
bound
xchg
hlt
shrb
repnz
xchg
xor
out
mov
pusha
repnz
sub
add
data16
sbb
cwtl
inc
xchg
xor
roll
jns,pn
mov
push
test
xor
jae
pop
das
btr
push
pop
ret
into
adc
xor
mov
fcoms
addb
or
mov
adc
adc
ljmp
loopne
jno
sub
je
stos
inc
ret
mov
jg
jle
add
or
jmp
mov
adc
lds
or
mov
in
aas
xchg
push
shr
xor
and
push
push
mov
rorb
dec
dec
and
sbb
add
jno
xor
cmpsb
outsl
dec
mov
int
shll
jge
je
ret
pop
mov
jns
xchg
pop
adc
fsubr
sub
mov
fidivs
and
sbb
or
popf
xchg
xor
sbb
xchg
pop
adc
adc
rorl
fsts
inc
clc
mov
loopne
iret
ja
cmpl
shll
cwtl
out
add
mov
fidivs
dec
push
or
lea
push
daa
add
mov
out
out
and
and
ror
xchg
out
fnstsw
aam
pop
aad
or
adc
inc
xchg
in
in
adc
inc
sbb
or
sbb
or
daa
popa
cmp
sbb
dec
mov
insl
mulb
inc
or
sbb
and
mov
aam
and
out
pusha
xor
dec
minps
xor
adc
mov
push
lods
out
sbb
cmp
and
and
in
xchg
jno
and
xchg
cmpsb
fsubrl
sbb
adc
je
and
lea
jle
or
dec
or
loop
push
mov
movb
fs
mov
or
sti
in
lds
jbe
pop
cmc
cs
pop
packsswb
popa
pusha
jg
mov
adc
mov
js
inc
xor
adc
nop
fisubrl
std
sbb
je
movl
popf
xor
pop
add
jp
data16
lcall
cmp
loop
pop
dec
popf
adc
daa
mov
or
or
inc
mov
les
popa
xchg
out
cmp
movl
aam
pop
or
lea
adc
mov
or
js
popa
xchg
test
xchg
adc
push
cmp
out
ret
sub
adc
xchg
xchg
insl
ret
cmp
jg
outsb
or
and
bound
or
scas
dec
addl
int
testl
ret
and
inc
jge
pop
jl
and
pop
add
or
shrl
sbbl
rcrl
fcoms
adc
pusha
push
gs
add
and
test
cli
or
adc
jge
lcall
nop
add
fbld
cmp
jge
xlat
das
and
imul
add
jg
push
sbb
cmp
adc
js
cmp
test
sbb
mov
mov
inc
cmp
jle
add
push
ret
xchg
ret
sub
aas
jne
mov
repz
or
stos
inc
cmp
aaa
dec
push
pushf
and
xor
cmp
inc
xor
enter
shll
fnstsw
mov
mov
negl
sarl
iret
push
pop
push
and
cmp
mov
cltd
lcall
mov
sbb
xor
loopne
loop
iret
add
cmp
push
pop
xchg
test
sbb
insl
lods
lea
and
dec
and
xor
adc
sbbl
popa
shl
cmp
fistpll
dec
jnp
jl
add
shl
add
mov
add
shrl
push
daa
or
ret
sbb
inc
mov
lock
jmp
cmp
adc
and
mov
adc
stos
mov
mov
xchg
jp
xchg
xchg
cmp
addr16
jo
mov
adc
lock
fisttps
add
push
test
add
movsl
nop
inc
or
push
inc
pop
or
ret
and
outsb
sub
jmp
xchg
pop
push
add
xor
xchg
inc
dec
inc
pop
into
mov
and
leave
inc
add
pop
or
mov
or
adc
sbb
je
leave
enter
mov
data16
cmp
sbb
and
push
mov
inc
add
inc
cmpb
mov
loop,pt
ss
or
push
cmpsb
int3
push
rcrl
mov
lds
xchg
pusha
ret
add
jns
push
adc
fs
push
mov
dec
lock
xor
test
shr
xor
sub
lahf
or
in
mov
imul
jecxz
push
aam
sub
mov
inc
sbb
outsb
mov
jnp
rorl
add
fwait
mov
mov
stc
add
or
adc
xor
dec
sbb
ror
add
jge
fbstp
bound
or
and
or
xchg
xor
xchg
adc
lods
lahf
push
dec
inc
xor
jns
jo
inc
roll
sub
popa
jnp
mov
add
ljmp
into
lock
mov
lea
les
movl
jl
scas
add
loopne
or
movsb
mov
pop
rcrb
enter
out
loope
add
and
in
push
sub
jmp
pop
data16
ret
add
jge
push
cltd
push
sbb
mov
fisttpll
mov
sbb
mov
mov
jne
mov
or
or
jle
popa
push
pop
ljmp
loop
push
add
pop
nop
jmp
mov
shlw
lea
loopne
add
cmc
or
push
ss
pop
popl
fincstp
add
dec
inc
dec
or
adc
sbb
nop
or
push
testl
adc
sbb
cwtl
or
cmpsl
add
sbb
cmp
cmp
sbb
push
ret
xchg
scas
js
js
dec
inc
fcmovbe
loopne
scas
leave
dec
rcr
lahf
addr16
mov
shlb
sbb
jmp
or
push
add
icebp
inc
and
dec
and
negb
and
mov
push
jno
add
roll
test
sahf
in
sub
adc
xor
cmp
or
movb
aas
mov
inc
ljmp
push
mov
add
into
fadds
jl
and
sbb
rclb
mov
xor
add
aam
or
sbb
xorl
daa
dec
xchg
addb
test
inc
xor
sub
dec
cltd
add
je
dec
push
add
mov
les
add
mov
inc
in
mov
addr16
outsb
cmp
mov
xor
call
ljmp
cs
push
insl
pop
sti
aaa
push
add
push
fisttps
test
jge
jne
faddp
or
sti
jno
push
or
pusha
pop
add
in
out
or
add
imul
adc
jecxz
jmp
push
xor
cmp
popf
xchg
inc
sub
push
pushf
pop
or
push
addb
sbb
shll
js
or
jae
or
sub
mov
in
xor
pop
xchg
push
mov
rcrl
dec
hlt
adc
subl
xchg
dec
lock
dec
dec
inc
cli
lock
and
xor
cld
in
std
push
aas
inc
push
jne
test
and
xor
jmp
cmp
push
outsl
add
add
push
sbb
push
enter
cmp
ds
sub
inc
in
filds
outsb
lahf
cmp
mov
add
outsl
push
or
sarl
or
or
xchg
mov
cmp
jge
adc
in
lret
jp
lods
movl
cmp
xorb
mov
mov
pop
icebp
adc
imul
dec
cmp
jp
adc
adc
leave
cmp
ret
or
cld
dec
sbb
rorl
in
dec
add
pop
push
mov
push
nop
cwtl
or
cmpb
sarb
jo
xor
push
call
mov
or
and
xor
sub
and
mov
call
stos
mov
mov
test
cwtl
adcb
mov
fwait
inc
and
clc
loop
adc
inc
ret
rcll
lcall
adc
adc
pushf
dec
jp
popf
add
cmp
mov
sets
bound
push
or
mov
push
pop
mov
lret
lock
icebp
pop
or
push
jns
mov
or
adc
es
add
mov
mov
or
filds
and
mov
mov
push
xor
test
adc
in
lods
std
push
lods
jmp
push
test
pop
dec
popa
aad
or
mov
lcall
or
jae
and
sbb
jbe
or
dec
fs
push
sub
mov
mov
dec
cmp
add
dec
or
sbbb
cs
adc
adc
inc
or
and
call
mov
lods
push
fsubr
add
dec
je
or
adc
xor
xchg
mov
inc
cmp
fiaddl
pusha
jmp
sub
sbb
lcall
test
sub
ficompl
xor
sub
rcll
sbb
inc
push
adc
test
xor
je
add
enter
sub
adc
push
jg
ficompl
or
xor
lods
pop
push
inc
inc
mov
imull
adc
cmpsb
div
add
iret
imull
cmpl
fimuls
jge
rorl
mov
and
sbb
shlb
add
shll
and
sbbl
and
sub
scas
mov
add
dec
xchg
add
lock
jne
jmp
int3
mov
inc
inc
les
mov
mov
cmp
out
adc
test
sti
mov
push
adc
stc
cmp
enter
fdivp
imul
cmp
cli
add
push
mov
cmpl
push
lcall
push
sub
daa
mov
and
inc
xchg
inc
push
sahf
lret
inc
adc
and
loopne
and
jmp
sbb
adc
jbe
inc
fld
sub
cwtl
and
mov
mov
lcall
faddl
xchg
mov
icebp
or
pop
dec
jno
pop
je
sbb
arpl
in
andl
push
lea
cmp
frstors
push
inc
or
jo
lret
popa
mov
cmp
add
sub
outsb
jae
imul
push
and
sub
inc
dec
inc
sub
sbb
pop
jae
mov
adc
sbb
jp
div
pop
adcb
jb
push
stos
lock
outsb
or
mov
mov
lea
mov
sub
push
push
and
mov
pushf
imul
pushf
mov
adc
arpl
movsl
int3
out
mov
add
xchg
sbb
mul
lock
push
jle
mov
ret
icebp
sub
inc
and
outsb
dec
inc
loopne
adc
adc
or
push
repz
dec
cmpsl
mov
cmp
inc
inc
jmp
stos
xchg
test
dec
adc
xadd
push
out
sbb
adcb
popa
pop
mov
add
stos
loopne
inc
cmp
popaw
push
inc
fsubrs
mov
lock
inc
lock
aam
lds
ret
or
add
push
sub
rolb
rolb
out
mov
call
inc
jecxz
insb
test
loopne
nop
or
add
iret
push
sub
aas
iret
jo
add
ret
dec
or
in
or
and
dec
enter
enter
fistpll
fistps
and
adc
roll
push
pop
test
sbb
pop
pop
adc
adc
and
mov
incl
nop
lock
and
mov
mov
rcl
scas
xchg
call
adc
enter
add
sbb
inc
lret
roll
add
movsl
dec
iret
add
sub
mov
pusha
sbbl
add
inc
int3
add
mov
xor
mov
mov
add
cmp
mov
test
and
and
mov
ljmp
jb
add
shrl
repz
inc
sbb
cmovbe
int3
bound
das
sbb
loope
and
int
push
or
mov
xor
xor
sqrtps
jg
cmp
xchg
fs
and
jmp
sbb
sarb
xor
cli
push
lea
adc
dec
inc
pop
es
xor
or
inc
jb
pushf
pusha
push
pop
jge
cld
jo
push
sarl
adc
jns
xorb
outsl
inc
jecxz
popa
jge
sbb
out
sarl
or
lods
lock
dec
cmp
adc
js
mov
sub
hlt
jl
sub
leave
add
fimuls
fs
lahf
mov
pop
mov
fists
xchg
sbb
xchg
mov
lock
sbb
adc
sar
adc
lret
test
add
and
cmpb
adc
xor
loopne
lock
xchg
fcom
or
dec
mov
inc
mov
mov
adc
add
sbb
dec
insl
sahf
push
test
cmp
in
int
sbb
xor
fdivrs
shrb
and
fcomps
cmpsb
adc
daa
sbb
or
sahf
pusha
inc
in
sub
fsubr
fadd
adc
sbb
mov
cmp
cld
push
cld
pop
sub
loopne
push
push
sbb
lret
into
add
sti
andl
sti
sbb
test
push
xor
and
cmpsl
fdivl
cltd
les
add
lahf
clc
test
cmp
cmpsb
sbb
rorb
add
data16
mov
fidivs
xchg
push
mov
inc
mov
test
int
rcll
repnz
jge
lret
enter
cmp
or
hlt
jmp
jge
dec
jl
inc
lds
mov
ja
aas
lods
roll
adc
clc
lds
and
inc
push
mov
hlt
jb
jmp
lret
add
adc
push
or
scas
pop
inc
jb
and
or
add
or
or
jl
pop
out
sti
add
test
push
cmc
call
testb
imul
enter
dec
addl
lds
pand
and
dec
mov
notb
cmp
xchg
je
sub
add
bound
push
or
xor
add
adc
cmp
test
adc
cltd
sbb
push
nop
add
insl
push
insl
xchg
imul
add
sub
sbb
into
pop
sub
jno
and
pcmpeqw
out
data16
scas
hlt
lods
mov
sbb
sbb
aam
dec
std
cld
xchg
pop
rcrb
dec
mov
test
mov
aad
hlt
rolb
pusha
clc
aaa
sub
jl
sbb
ja
or
xor
dec
test
or
or
inc
push
add
xorl
cltd
cmpsb
loopne
xchg
in
jo
jnp
adc
push
pusha
fsubrs
arpl
pop
dec
iret
jo
pushf
call
inc
xchg
enter
push
movl
mov
push
adc
push
sub
or
insb
mov
cltd
call
push
mov
inc
sub
and
sub
rolb
dec
sbb
push
and
mov
lock
int3
jmp
mov
push
cmp
fdivl
fdivs
xlat
out
aam
push
bound
jge
data16
imull
push
mov
push
fucomi
decl
jge
movzbl
add
inc
inc
push
jl
inc
dec
jl
lock
int3
rcrl
add
fs
aad
mov
adc
aam
scas
cmp
add
add
in
lock
pusha
sub
cmpsb
xchg
and
sub
dec
cli
xor
xchg
inc
add
xchg
mov
pusha
pushaw
inc
ds
add
nop
leave
or
lss
fs
and
outsl
add
leave
adc
mov
call
add
xchg
and
push
dec
cmp
adc
pop
es
fwait
icebp
add
push
mov
mov
pop
cmp
js
cs
push
loop
ret
clc
jg
inc
jo
sbb
daa
and
leave
xor
lock
in
xchg
inc
addb
lods
pop
imul
adc
push
add
mov
loopne
jae
inc
inc
sbb
or
pop
js
jp
or
add
and
jb
inc
es
adc
sbb
sub
cmpsl
aam
icebp
add
inc
lahf
lea
push
lock
ds
adc
into
jnp
add
mov
inc
stc
and
shlb
ror
addr16
dec
dec
loop
jb
dec
inc
test
adc
in
out
lret
aam
or
das
pop
add
test
insb
test
mov
stos
cld
mov
repnz
xor
jns
and
xor
fdivrp
or
or
or
push
out
je
arpl
add
add
sub
sbb
mov
mov
out
mov
outsb
cmp
inc
scas
jge
pop
pop
es
mov
aad
in
fisttpll
sub
mov
push
adc
rcrl
lds
adc
or
cmp
and
push
jo
call
lcall
cmp
jle
pop
decl
xchg
dec
data16
movzwl
fcomps
push
fsubs
dec
inc
mov
cs
decl
xchg
xor
adc
push
cltd
push
inc
or
popa
cmc
xor
bnd
sub
cltd
dec
ret
mov
fmuls
insl
popa
cltd
clc
out
push
ret
sbb
push
sub
inc
les
or
adc
enter
fmul
shlb
adc
lret
pop
dec
lods
cld
cmp
mov
lea
mov
inc
pop
popf
dec
stc
add
dec
in
add
and
pop
xor
fs
cmp
mov
dec
fidivrs
jecxz
mov
mov
or
mov
stc
clc
add
inc
add
push
ljmp
dec
jbe
aad
mov
pusha
cmpsl
add
mov
ss
and
mov
ja
xor
jne
roll
add
clc
imul
and
adc
push
lahf
ret
sbb
fwait
and
adc
mov
sub
enter
cld
notb
and
enter
fwait
test
jae
fsubrp
jmp
lock
cmp
loopne
fmulp
or
jnp
adc
repnz
in
in
xchg
or
mov
jl
rolb
dec
add
jbe
fsub
pusha
dec
xor
rcl
and
cli
jmp
jns
adc
dec
fidivs
leave
sbb
call
and
mov
inc
xor
cmp
mov
jne
adc
adc
lods
add
push
or
sbb
lock
add
xor
test
shlb
test
pop
sub
adc
cmp
cwtl
inc
push
leave
pop
test
adc
cltd
inc
scas
es
pusha
push
cmp
or
pushf
popf
pop
jle
adc
pusha
sti
ljmp
inc
lcall
or
fcompl
push
filds
scas
dec
mov
mov
fbld
add
sar
call
and
cmp
jl
ret
outsb
xor
dec
and
adc
adc
xchg
leave
xchg
insl
and
mov
mov
sbb
mov
add
add
cmp
xor
nopl
or
or
aam
or
fdivrs
inc
sbb
inc
mov
inc
iret
mov
and
sbb
mov
lds
sti
or
test
cltd
subb
out
ljmp
stc
andb
das
push
sbb
loopne
imul
stos
dec
call
pushf
add
or
push
and
jl
enter
inc
std
adc
xor
pusha
push
pop
pop
inc
dec
out
pop
rep
add
xchg
lea
pusha
push
cmp
xchg
out
outsl
aaa
pop
sbb
ficomps
faddl
jge
testl
and
cmp
jg
dec
dec
jmp
push
sub
mov
xor
loopne
xor
dec
data16
icebp
adc
add
jge
xor
lcall
hlt
pop
enter
aam
sbb
xchg
jb
inc
call
dec
mov
sbb
and
jns
and
loopne
das
loopne
inc
jb
fcomp
inc
jb
and
aam
outsb
jb
daa
ror
or
add
loop
dec
cs
dec
enter
mov
das
push
je
psubsb
imul
or
lock
push
loopne
movl
mov
imul
adc
sbb
dec
xchg
mov
ret
adc
rcl
daa
or
mov
jmp
popa
ror
fildll
stos
pop
mov
ret
mov
stos
aam
sbb
xchg
adc
cld
insb
xchg
lahf
hlt
or
pop
push
xor
sbb
adc
pop
outsb
rclb
movsb
icebp
and
or
jo
mov
add
xor
adc
sarb
dec
dec
or
mov
inc
sarb
xchg
jo
in
sti
pop
cmp
faddp
add
or
xor
adc
or
xor
or
adc
test
adc
xchg
mov
jg
add
cld
sahf
add
pop
or
pop
adc
adc
rcpps
adc
outsb
xor
test
fwait
adc
sub
ja
mov
loope
xor
adc
push
adc
xor
dec
cmp
pop
pop
popa
jae
push
mov
sub
fldl
inc
xor
xor
ret
outsl
test
mov
xchg
arpl
xor
or
add
aas
ss
cltd
push
xor
sbb
mov
cmp
ds
les
lock
stc
pop
nop
loopne
xchg
je
jmp
ficoms
sbb
jno
push
inc
inc
stos
xchg
push
inc
shr
mov
imul
pop
sub
mov
jnp
out
mov
dec
aas
sub
int
out
jae
adc
mov
leave
lcall
adc
jb
aad
icebp
and
das
pop
dec
adc
test
mov
push
subl
and
add
xor
insb
nop
jge
fbstp
mov
ss
es
sub
jo
xchg
loop
push
outsb
or
shl
aas
sub
pop
incl
or
sbb
movsbl
xchg
arpl
push
sub
jg
adc
andb
and
mov
xlat
dec
inc
ja
xchg
mov
push
movsb
xchg
jg
sar
jne
testl
sbb
xchg
hlt
dec
push
xchg
imull
adc
mov
repnz
or
pop
mov
aaa
sub
add
xchg
or
xor
fdivs
sub
ret
adc
sbb
adc
lcall
pop
inc
and
popa
iret
cmp
cmp
inc
adc
push
js
call
xchg
jo
lahf
push
scas
or
inc
add
push
mov
jle
loop
mov
dec
adc
push
leave
lea
into
or
stc
rorl
rorl
mov
sub
fistpll
rol
testb
pop
faddl
push
addl
js
add
jmp
ret
test
jle
cmp
jle
sub
nop
push
mov
adc
xchg
lcall
orb
push
mov
xchg
push
out
push
mov
hlt
pusha
xorl
mov
hlt
sbb
incl
dec
pop
decl
adc
or
popa
arpl
mov
or
adc
inc
fwait
xchg
divl
stos
inc
adc
loopne
jbe
jnp
aad
inc
push
dec
adc
and
xchg
test
push
adcb
add
mov
cmp
cld
lods
js
jnp
inc
add
pop
adc
neg
or
pop
add
loope
not
js
idiv
or
or
jmp
icebp
inc
mov
jb
pop
or
mov
bound
jg
cld
flds
mov
jge
inc
shrl
xor
mov
divb
cmp
mov
ret
add
jns
add
inc
andb
sbb
mov
sub
mov
adcl
daa
add
inc
cmpsb
mov
inc
inc
and
nop
data16
ja
jno
push
mov
jmp
xchg
out
adc
lahf
mov
nop
mov
push
adc
fldl
stos
cltd
and
push
movsb
push
sar
mull
adc
sahf
jno
add
scas
movl
mov
addr16
adc
mov
mov
orb
dec
inc
enter
dec
add
pop
push
xor
arpl
sahf
push
mov
push
js
test
xor
std
movsb
or
outsb
daa
jge
negl
shrb
rcrl
les
adc
and
mov
inc
popf
jle
loop
stos
call
imul
repz
or
mov
pop
aam
cli
and
repz
inc
mov
inc
aas
push
out
adc
add
roll
sbb
or
jle
pop
jle
les
cmpsb
and
cmp
add
iret
push
or
cmpsl
xchg
and
sbbl
test
addb
icebp
fstps
mov
adc
mov
pop
out
jae
xor
mov
cmp
add
arpl
jbe
and
adc
aaa
adc
cwtl
fwait
inc
outsb
push
cmp
mov
add
in
in
add
je
iret
xlat
jno
mov
dec
mov
popf
test
test
mov
or
in
scas
mov
and
cmp
xlat
mov
rolb
jno
mov
das
pop
sbb
icebp
aaa
push
mov
sbb
push
lea
xchg
push
add
or
enter
std
xor
pop
outsb
lcall
loope
cmpxchg
adc
enter
mov
mov
sbb
xchg
sti
aaa
insb
add
popa
inc
enter
rcrl
movl
inc
dec
xor
aam
popf
pop
xor
sbb
adc
pop
faddp
or
arpl
repnz
repz
inc
mov
xlat
dec
add
add
push
mov
add
mov
mov
add
sub
mov
sub
cmpsb
ja
fyl2xp1
cmpb
lea
inc
mov
xor
in
mov
or
shr
or
sub
dec
int3
jo
sahf
push
shlb
test
ficomps
sti
add
push
jge
cmc
inc
sarb
incl
aad
fildl
sbbl
jmp
add
sti
add
lea
push
sbb
fcmovnb
sti
daa
xor
loopne
mov
lds
xor
xchg
loop
push
daa
dec
fldl
jo
or
cmp
sbb
pop
idivb
push
push
push
cmp
ret
adcl
pusha
cmp
ret
add
nop
or
dec
nop
mov
out
sub
shll
mov
mov
addl
loopne
sbb
movsb
jae
popa
xor
pusha
and
jns,pn
inc
or
sbb
shlb
sub
jg
flds
fadds
fstps
push
filds
jns
rcr
inc
add
sbb
add
sbb
or
adc
bound
or
loopne
into
rcll
or
pop
cmp
test
dec
adc
adc
fs
sbb
imul
and
sub
fisubl
dec
and
sbb
fs
adc
sub
outsl
sub
or
xor
sbb
or
sbb
adc
pop
pop
sbb
rcrl
fstpt
xchg
pushf
inc
flds
icebp
inc
and
fimuls
xor
ljmp
mov
cltd
cmp
push
inc
fs
jge
lea
dec
jg
adc
fs
in
or
inc
cmp
add
and
and
push
mov
cli
in
or
dec
repz
and
rcrb
mov
add
xor
cmp
ja
pusha
xor
loop
sbbb
cwtl
in
lcall
lcall
and
dec
and
je
jg
out
aas
adc
mov
cmpsl
aas
orb
xlat
lock
inc
or
xchg
push
sub
sbb
push
cmp
sbb
rorb
add
xchg
or
add
je
xor
sbb
rcrb
out
incl
js
inc
push
or
and
inc
dec
dec
xchg
push
mov
jno
movsl
aaa
adc
mov
sbb
outsb
cmpsb
add
mov
aaa
outsl
ds
and
pop
out
jmp
lea
sub
iret
jge
push
push
movb
inc
and
cmp
call
inc
push
bound
call
in
sub
xchg
push
loope
xchg
rcl
xchg
loope
and
cs
inc
sub
inc
add
inc
mov
add
test
xor
add
pusha
adc
fidivrl
push
sar
jne
and
push
in
jmp
push
stc
lea
xchg
loope
inc
popf
test
aam
and
shl
inc
popa
cmp
enter
inc
and
pop
push
movsbl
xor
inc
lea
arpl
add
dec
call
ret
loope
or
in
mov
movl
test
lods
add
mov
sub
das
js
mov
fmuls
xchg
or
daa
jg
popa
mov
sub
jge
add
aaa
pop
stc
aaa
adc
jne
jg
or
lret
xor
or
pop
pusha
fdivl
out
add
sbb
mov
mov
xchg
faddl
adc
inc
call
adc
add
pushf
sbb
leave
dec
aaa
lcall
mov
or
mov
cmpsl
mov
inc
popf
mov
sub
cmp
cmpsb
not
fstpl
pop
push
ret
mov
dec
cmpsl
shrl
and
sbb
fbstp
push
cmp
aad
pop
decl
dec
pusha
popa
clc
mov
pop
rcpps
hlt
mov
lahf
ficomps
adc
incb
or
js
lahf
decl
mov
or
pop
push
popa
mov
or
cmp
js
mov
mov
iret
xchg
mov
or
aaa
jne
mov
push
je
push
insb
or
xor
loop
inc
dec
xchg
sbb
movd
cltd
aad
outsl
mov
icebp
xchg
shl
pusha
push
adc
sarb
push
cmp
mov
and
cmp
or
push
scas
xchg
jb
ret
adc
and
pop
lahf
orb
adc
js
xchg
sub
outsl
mov
mov
push
fdivrs
pushf
out
imul
xlat
rcrl
sub
jb
out
and
in
lods
addr16
or
dec
mov
stos
adc
rep
addl
lahf
scas
test
or
mov
mov
jno
inc
ret
pop
test
ret
popa
push
mov
push
sub
adc
rorb
jo
ljmp
test
sbb
xchg
sub
pusha
lea
push
and
lea
repnz
clc
mov
dec
insb
mov
cmc
jl
int
xchg
lea
jb
jge
nop
sbb
or
and
and
pop
arpl
clc
push
pop
xchg
inc
and
xchg
pop
rcll
or
xor
or
movsl
pop
fisubs
sbb
sbb
add
sbb
lods
mov
sub
or
les
subb
sub
jns
mov
push
add
jb
sbb
pusha
cmpsb
je
sti
jb
out
imulb
push
sub
orl
cmpsb
lds
inc
mov
stos
cmpsl
sbb
push
jp
inc
insl
cwtl
dec
aas
mov
popa
repnz
add
xchg
nop
pusha
lret
or
repz
mov
iret
mov
jl
loop
mov
lahf
daa
and
push
mov
mov
inc
jmp
and
inc
inc
rolb
test
mov
fcmovb
inc
aaa
lock
push
incl
popl
leave
rcl
mov
mov
dec
sbbl
and
push
xor
sahf
pop
aaa
adc
fs
pop
lea
cmp
lods
sub
add
aad
das
das
xlat
dec
sbb
and
mov
shll
mov
daa
dec
jecxz
sbb
test
ljmp
push
sti
add
pop
movl
mov
es
or
clc
sarb
ret
decb
out
lret
xor
mov
add
cmp
push
ret
je
mov
shl
mov
push
jae
dec
popf
mov
add
mov
shr
paddsw
mov
jecxz
out
mov
xchg
sarb
test
js
adc
lock
cmp
push
xlat
add
adc
daa
insl
push
movsb
push
jb
incb
adc
xchg
andb
mov
decb
test
mov
addb
incb
addb
decb
jmp
das
cmpb
ja
dec
dec
ja
rol
adc
int3
fistpl
dec
dec
cmpb
sbb
pop
inc
pop
xchg
adc
inc
and
jg
jmp
pop
mov
cmp
sbb
push
inc
inc
dec
sub
and
in
inc
rcr
loopne
pop
aam
test
cmp
cwtl
adcb
pop
aam
in
xchg
push
dec
aas
or
test
das
and
test
stos
sbb
aam
ja
out
push
sbb
xor
inc
push
mov
jge,pn
push
cmpb
sbb
popa
lods
sbb
fs
pop
inc
cmp
push
popa
jne
inc
mov
dec
mov
cmpsb
dec
sub
inc
pop
adc
fnsave
cmp
test
or
adc
testl
or
adc
sbb
inc
fadds
nop
out
add
add
pusha
loop
adc
mov
dec
or
mov
dec
clc
ss
pop
pop
sub
les
jns
cmpsb
inc
inc
xchg
dec
cmp
add
pop
addb
xchg
mov
inc
cmp
or
ljmp
xchg
add
aam
aam
sbb
rcrb
fs
xchg
nop
inc
push
mov
sbb
sbb
jb
sbb
je
jbe
fs
inc
ja
jns
nop
inc
push
jp
jl
inc
push
sbb
jg
push
sbb
bound
sbb
fs
addr16
push
push
insb
nop
inc
push
sbb
outsl
inc
push
sbb
push
push
sbb
push
push
push
sbb
push
pop
pop
fs
inc
push
pop
pop
pop
nop
inc
push
sbb
pop
inc
push
sbb
inc
push
sbb
inc
inc
inc
sbb
inc
dec
dec
fs
inc
push
dec
dec
dec
nop
inc
push
sbb
dec
inc
push
sbb
xor
sbb
xor
sbb
aaa
cmp
fs
inc
push
cmp
cmp
inc
push
sbb
sbb
and
sbb
and
sbb
daa
sub
fs
inc
push
sub
sub
inc
push
sbb
sbb
adc
in
inc
aas
insl
daa
fdivl
ss
fmul
cs
sub
hlt
aas
or
adc
pop
ja
adc
mov
fnstenv
cmp
ficoms
push
mov
adc
or
testb
dec
and
ss
mov
push
nop
mov
inc
jo
mov
outsl
push
cwtl
sub
clc
inc
dec
push
inc
dec
dec
pushf
cmp
add
mov
out
sub
push
mov
sbb
xor
scas
mov
push
adc
lods
mov
insb
mov
xor
pop
pop
and
mov
stos
pop
repnz
lods
je
cmp
aaa
push
adc
adcl
sub
add
pop
and
mov
dec
fwait
rolb
sub
push
lcall
fsubs
testl
or
mov
inc
lahf
imul
adc
daa
adc
adc
pop
xlat
gs
xlat
outsl
sahf
daa
mov
es
cmp
addl
mov
dec
lcall
aad
or
adc
add
scas
and
or
subl
xor
ss
or
cmp
or
mov
jg
push
jmp
aaa
or
or
xchg
xor
pop
or
xor
mov
outsb
imul
mov
mov
inc
jno
cwtl
or
cmp
jne
xor
aad
les
pop
out
push
add
xor
fdivrl
push
ret
loope
push
jg
dec
sbb
pop
cs
adc
ret
adc
push
add
adc
dec
popa
jbe
pusha
pusha
add
je
add
mov
insl
adc
decl
orl
pusha
movsb
and
mov
aaa
or
bound
add
daa
or
mov
lods
add
inc
sub
rorb
or
push
xor
mov
stos
add
add
sub
push
push
adc
pusha
jb
punpcklbw
mov
add
push
add
pop
add
mov
mov
insb
and
pop
jge
and
addr16
inc
add
push
adc
sbb
lcall
push
outsb
jno
or
adc
jo
add
das
sbb
adc
push
xor
movsb
xchg
mov
adc
fwait
dec
loopne
mov
dec
loopne
popl
adc
ficompl
xlat
lock
sub
add
and
nop
adc
jo
mov
mov
pop
sbb
inc
adc
sbb
ss
data16
push
inc
pop
adc
add
fs
push
inc
pop
in
dec
imul
lods
pop
aam
pop
enter
jbe
push
mov
xor
mov
pop
ss
pop
dec
pop
rcrl
andb
add
push
sub
mov
push
fisubs
xor
cmp
sub
mov
cmpsb
outsb
push
adc
or
js
cmpsb
jns
mov
dec
lock
mov
insb
lcall
cs
mov
mov
nop
test
fcomps
nop
push
mov
push
pop
mov
dec
loopne
push
and
pusha
movsb
push
dec
shll
push
and
scas
xor
je
imul
sbb
or
enter
hlt
push
data16
psubsb
data16
mov
or
les
in
mov
xor
jnp
adc
push
pop
dec
xchg
cld
mov
mov
jo
pusha
fs
shll
fs
sbb
inc
sub
rorl
xor
mov
repz
cmpsb
sbb
scas
adc
add
lcall
das
js
push
cmp
lods
pop
mov
loopne
push
enter
mov
push
mov
push
fadds
push
dec
mov
adcb
gs
push
loopne
mov
pop
lahf
push
push
inc
pop
call
jno
mov
push
iret
adc
push
andb
sub
inc
hlt
or
inc
es
scas
lds
xchg
cmp
int3
xor
ja
jp
ds
in
cld
in
ljmp
push
in
and
in
in
push
xchg
pop
loopne
rcrl
jb
in
xchg
jecxz
in
sti
pusha
sub
in
int
imul
mov
dec
mov
xor
mov
pop
adc
dec
mov
shlb
cmp
pusha
mov
cltd
inc
test
dec
mov
inc
ds
fldcw
mov
xor
testl
xchg
addl
mov
xchg
fistpl
mov
arpl
cs
inc
mov
movsb
push
adc
push
imul
fwait
adc
push
pop
or
sbb
in
test
lahf
mov
fildll
shrb
add
sub
leave
inc
mov
cmp
stos
xor
add
xor
adc
xchg
push
test
stos
test
dec
xor
mov
or
add
hlt
in
push
fs
inc
aam
or
clc
gs
in
jo
cld
and
es
mov
xor
daa
dec
and
inc
xchg
push
adc
aas
test
inc
ss
mov
xor
jae
pushf
xor
cmpsb
add
lock
push
addl
ds
mov
adc
sub
lea
es
xor
je
mov
subl
cmp
inc
scas
adc
mov
fs
js
or
enter
ror
out
sub
cmp
cmpsb
push
test
flds
test
pop
or
std
sti
bound
push
roll
or
cmp
jne
add
popa
fisubs
pop
sbb
mov
jl
sbb
sbb
pop
inc
add
inc
dec
jne
xor
pop
movsb
adc
mov
outsl
rcrb
cs
leave
or
adc
mov
xchg
mov
mov
and
nop
dec
add
loope
xchg
ret
shl
movlps
pop
inc
mov
insl
lods
sbb
xor
xlat
fcompl
jge
ljmp
int3
mov
rclb
insb
mov
sbb
ret
jp
jns
les
xor
sti
in
and
jae
icebp
call
xor
xchg
shll
adc
xchg
xchg
insl
pop
inc
ljmp
dec
dec
daa
or
imul
inc
sub
cs
test
jmp
sub
push
aam
sbb
fsubrs
push
nop
out
clc
sbb
call
mov
push
pop
lcall
int
stos
movsl
in
adcl
add
daa
cmp
xchg
les
ret
add
aam
xor
dec
imul
adc
adc
and
mov
jmp
push
jno
mulb
clc
or
jo
adc
mov
test
mov
xchg
pop
jg
test
or
and
pusha
xor
cltd
js
insb
xlat
add
mov
add
adc
add
add
fnstenv
in
pushf
cmp
cld
pop
clc
mov
fld
stc
flds
pop
aaa
or
pop
fwait
pop
nop
push
add
or
push
add
mov
or
dec
inc
outsl
jo
add
and
divl
lret
and
gs
xor
mov
test
pop
or
ret
xchg
jp
dec
pop
xor
dec
shll
sbb
push
test
aaa
push
sbb
loope
flds
sbb
or
js
call
or
pop
sub
add
cmp
rcll
push
mov
subb
add
xor
mov
pop
and
sbb
xor
lock
xor
pop
sbb
xor
inc
xchg
inc
push
sbb
sbb
sbb
sbb
push
pop
add
push
add
add
add
fs
or
push
sbb
or
push
std
enter
icebp
repnz
testb
stc
cli
or
enter
std
xor
and
and
xchg
or
in
lahf
xchg
inc
dec
push
enter
inc
adc
insl
in
lods
adc
push
inc
jns
dec
inc
ret
enter
add
pop
dec
popa
arpl
leave
add
nop
std
cld
add
sbb
add
push
and
inc
jne
aam
xor
cmp
or
pop
adc
nop
xlat
imul
test
fcoms
add
cltd
xchg
add
nop
loopne
lock
xchg
cmp
and
push
ja
inc
out
or
jb
mov
or
dec
push
fs
outsl
adc
rolb
dec
or
roll
ret
into
adcb
push
lahf
test
fstp
pop
push
dec
push
inc
mov
lods
sbb
and
icebp
pop
dec
push
fs
cmp
sub
pop
adc
aas
stc
mov
and
add
fistps
dec
ret
aad
lahf
push
fsts
pushf
add
insb
iret
aam
and
imul
mov
test
sbb
mov
sahf
lock
add
nop
push
add
dec
fdivs
add
jmp
and
xor
push
mov
xor
ffree
mov
mov
add
or
jle
testb
xchg
inc
daa
add
jl
add
cmp
or
pop
and
sbb
sbb
sahf
add
add
testb
ret
mov
and
add
leave
orl
test
mov
stos
imul
mov
pushf
shlb
nop
fistpl
mov
inc
sub
nop
inc
sub
jne
sub
push
jbe
inc
sub
lods
dec
push
fs
xor
in
pcmpgtb
in
xor
dec
dec
push
enter
dec
fs
push
in
push
cmp
fs
push
pop
cmp
cs
cwtl
cmp
inc
inc
add
into
arpl
int3
xchg
mov
cmp
and
mov
pop
push
fisubrs
xor
xor
dec
scas
xchg
in
cmp
mov
or
or
flds
inc
adc
and
imul
add
add
add
pop
add
add
dec
fisubrs
add
addl
xor
pop
dec
lcall
jle
hlt
adc
je,pn
jnp
or
cmp
or
inc
ja
jmp
mov
jp
or
jbe
test
inc
adc
push
pushf
jmp
mov
lcall
jmp
data16
dec
push
inc
xor
xor
fcos
jle
add
or
jmp
rorl
insb
lods
jo
lahf
arpl
sbb
dec
sbb
aam
and
pop
jno
add
xor
push
in
rclb
gs
fimull
sbb
xor
add
xchg
cmpsb
jo
mov
dec
rcrl
das
out
push
add
inc
adc
fwait
rorb
dec
popa
in
and
pop
rcll
jg
jbe
jne
aaa
mov
or
add
cwtl
dec
pushl
int
inc
push
clc
dec
adc
adc
and
ja
pusha
and
pop
jne
cwtl
inc
jle
hlt
mov
push
loope
mov
xchg
add
scas
rorb
sbb
cmpb
aaa
leave
test
xor
fildl
add
popf
mov
add
cmp
mov
imul
jbe
dec
pop
sub
cmpsb
imul
imul
cmpsb
imul
faddp
add
out
add
lahf
add
nop
mov
dec
inc
fidivrs
mov
mov
xchg
mov
xchg
mov
mov
mov
les
and
enter
and
enter
sbb
adc
enter
pop
fsubrl
dec
sbb
sbb
in
nop
cmp
or
push
push
fadds
xchg
aaa
les
mov
addr16
and
dec
es
pcmpeqb
and
faddl
pusha
pop
add
or
mov
adc
dec
imul
jle
push
cmp
lods
imul
sahf
cwtl
ds
cmpsb
mov
test
scas
jo
mov
lcall
push
and
jo
pusha
fwait
or
cmp
push
push
xchg
imul
rorb
xor
pop
dec
mov
pop
test
add
dec
xchg
pop
pusha
and
lcall
rorb
dec
test
push
adc
outsb
data16
or
lcall
cmp
push
shrb
imul
jle
push
mov
movsb
fmuls
dec
imul
les
push
scas
push
jle
inc
add
dec
cwtl
outsl
mov
sbb
push
test
lock
cltd
in
adc
cmpsl
or
jmp
js
push
or
add
rolb
je
add
arpl
sbb
add
scas
cli
pushf
bound
call
addr16
in
pop
push
test
xchg
fcmovb
addr16
outsl
push
xchg
add
nop
rcrl
xor
pop
mov
mov
and
fadd
gs
shrl
pop
das
jo
mov
push
call
pop
movb
clc
enter
aas
push
cwtl
xlat
xchg
test
jmp
shrb
sbb
adc
cmpsb
xchg
push
mov
xchg
push
sbb
xor
adc
xor
call
addr16
inc
xchg
ss
jb
adc
leave
orl
add
xchg
and
stos
cmp
inc
stc
std
push
out
inc
jmp
and
jne
add
push
negb
je
inc
sbb
add
sub
inc
leave
sahf
add
hlt
mov
arpl
jnp
in
add
jle
cmp
rorl
jb
push
jmp
arpl
sub
add
push
call
les
fsubl
pop
inc
addr16
out
leave
xchg
xor
xchg
je
test
xchg
sub
jne
jle
loopne
pop
or
repz
cltd
add
add
loop
adc
push
cwtl
xchg
jg
xchg
cmpl
jnp
stc
jbe
push
pusha
cmovs
cmpsb
nop
xchg
rorl
xor
jb
das
pusha
adc
mov
test
insb
mov
and
or
out
in
jmp
inc
fisubrs
push
pop
addb
ljmp
mov
and
and
pop
push
sbb
add
shlb
mov
xor
loopne
inc
pop
mov
jo
push
scas
fwait
cmpsl
fimull
push
sbb
scas
ss
inc
int
adc
sbbb
or
sbb
das
push
leave
int
adc
aaa
adc
mov
and
aaa
push
push
inc
dec
or
xor
insl
jb
jg
rorb
mov
sarl
das
nop
in
insb
in
pop
adc
and
or
pop
add
sbbb
xchg
pop
lds
sbb
ret
xor
fdivs
insl
cmpsb
lea
imul
cmpsb
jno
xor
sbbb
sub
ror
mov
cmc
je
outsl
mov
add
xchg
pusha
cs
push
jo
xor
cmpsl
loope
pushf
addr16
jo
shll
lahf
dec
mov
and
js
pop
xor
sbb
push
xchg
or
push
pop
mov
fstl
and
inc
out
sbb
inc
rolb
mov
mov
pop
pop
or
imul
inc
int3
pop
hlt
jbe
xlat
ret
int3
push
push
or
or
push
sbb
sub
repz
idiv
clc
movl
adc
rcl
insb
test
or
push
add
push
test
and
or
inc
dec
cmp
push
add
int
push
movsb
cmp
or
push
or
jg
sub
and
es
out
inc
dec
xor
and
sbb
add
scas
pop
push
adc
mov
outsb
add
jo
xchg
test
sub
dec
in
inc
dec
cmp
add
xchg
dec
xor
ss
pop
push
jmp
and
sbb
stos
fildl
sub
xor
mov
mov
cmp
inc
repnz
rolb
or
outsb
add
or
das
sbb
mov
je
xchg
mov
sbb
je
loop
xchg
enter
xchg
mov
mov
or
dec
inc
push
add
mov
mov
add
mov
mov
insl
inc
mov
mov
pusha
dec
jnp
ja
mov
fs
push
cs
jnp
outsl
pop
gs
push
xor
mov
add
xchg
push
jl
ret
pop
adc
cwtl
sbb
aas
jmp
mov
mov
insl
add
cld
orb
stc
insl
inc
push
pop
mov
and
add
dec
je
xchg
dec
sahf
notb
jl
clc
inc
or
mov
fistps
add
xor
and
pop
sbb
inc
add
ret
adc
push
pop
adc
inc
add
push
ss
xor
push
push
roll
inc
rcl
mov
daa
sbb
bound
adc
xor
mov
cmp
push
cwtl
xor
test
and
ret
push
repnz
dec
or
push
dec
js
or
je
dec
inc
or
popa
inc
add
inc
leave
and
jl
gs
jne
xchg
or
pop
mov
and
aas
mov
add
inc
outsb
or
add
mov
and
add
adc
and
and
andb
pop
sub
daa
sbb
add
mov
es
adc
add
add
sbb
xor
push
add
das
or
and
mov
lods
mov
addb
daa
or
enter
adc
test
or
push
andb
push
daa
add
daa
or
push
add
je
daa
das
andb
jno
inc
push
xchg
or
pop
je
or
call
pop
or
pop
push
inc
sarb
mov
repnz
or
mov
sbbb
popa
jl
xor
in
jp
add
das
outsl
nop
rorb
rclb
js
dec
add
or
dec
xor
fcmovu
and
push
add
out
add
cmp
jle
push
repnz
jae
mov
adc
mov
nop
and
add
adc
das
adc
loope
push
shrb
je,pt
lods
add
jp
fdivrl
add
xchg
jg
add
sbb
mov
or
mov
je
jo
add
or
mov
push
and
pop
jb
movsl
push
lods
push
orl
and
jae
stc
mov
call
movsl
jne
rorb
adc
adc
dec
aam
or
call
adc
and
xorb
cmp
je
sub
lret
adcb
xchg
xchg
daa
sbb
pop
sbb
in
aam
shl
insb
imul
or
add
stos
imull
andb
mov
fidivs
ja
mov
fldl
push
pop
pusha
push
jl
add
or
add
lret
addr16
push
in
inc
pop
pop
sub
push
enter
and
fcoms
mov
pop
je
inc
inc
sub
outsl
enter
inc
leave
or
jmp
sbbl
pop
inc
leave
adc
pusha
fcmovnu
leave
mov
adc
adc
rorb
inc
imull
jg
inc
xor
adc
add
push
sbb
pop
xchg
aam
add
dec
add
dec
mov
fs
ret
pop
and
adcl
fwait
xor
pop
add
subb
add
add
mov
sub
ror
or
pop
push
rorb
push
mov
adc
inc
push
mov
insl
aam
xchg
xor
into
and
stos
and
adc
arpl
nop
scas
cmp
sbbl
lds
hlt
adc
es
ret
mov
mov
push
stc
repz
or
adc
lods
test
arpl
nop
arpl
dec
sub
insb
gs
fs
mov
pop
int
pop
pop
jl
jl
mov
cmp
mov
adc
cmp
or
in
aaa
cmpl
adc
addr16
adc
push
dec
pop
adc
jno
sub
jne
repnz
pop
das
cmc
jp
leave
dec
dec
orb
aas
or
xchg
inc
sbbb
or
and
inc
xchg
addb
dec
push
scas
pop
sub
repz
adc
outsb
imul
jb
fdivrs
addr16
scas
loopne
jl
test
mov
in
add
xor
jnp
jg
sbb
or
psubw
in
or
xchg
or
imul
xchg
pop
es
mov
je
je
imul
insl
xchg
dec
xchg
pop
fdivs
nop/reserved
faddl
fbstp
jnp
push
loopne
sbb
fs
and
rclb
imul
dec
pusha
and
and
add
stc
add
mov
and
cld
ret
aas
loop
dec
cmpsb
nop
outsl
ss
jge
cmp
popa
sarb
add
lcall
pop
mov
add
in
mov
nop
imul
test
and
mov
add
in
es
roll
or
les
mov
pop
pop
or
xchg
push
add
push
js
mov
pop
and
fmulp
cmp
rolb
fmul
pop
test
sub
mov
mov
xchg
push
and
cmp
pop
sbb
mov
jno
add
adc
add
mov
xchg
add
mov
aad
jo
or
dec
movsb
mov
lfs
mov
cld
icebp
dec
add
mov
in
daa
fsub
or
fwait
sbb
lods
or
fildll
ljmp
add
inc
loope
sub
jo
inc
inc
add
push
push
mov
pop
push
popf
adc
insl
sub
or
popf
insb
dec
inc
sub
iret
fidivs
xor
insb
out
in
xor
and
adc
mov
jbe
jle
ss
sub
cwtl
fs
inc
jmp
push
mov
mov
xor
test
mov
lods
int
int
fs
pop
cs
js
cmp
cwtl
addl
jecxz
mov
test
jge
xchg
mov
leave
and
inc
push
lods
ror
push
sbb
loop
shrb
add
aam
mov
dec
push
inc
jbe
adcb
or
and
aas
subl
and
hlt
dec
ret
shll
lret
leave
mov
mov
sbb
and
pop
and
and
inc
pop
jne
or
mov
fisubs
insb
rclb
inc
fisubrl
pop
cmp
lods
pusha
xchg
xchg
fs
inc
xchg
addb
mov
cmp
sub
inc
and
sbb
jae
add
clc
dec
or
cmp
ret
cmp
mov
cwtd
mov
icebp
pop
daa
pop
inc
pop
pushf
cld
adc
adc
adc
cmpsb
dec
dec
jmp
addl
leave
test
fwait
pusha
jno
inc
outsl
cltd
push
adc
push
lcall
sub
dec
addl
mov
xor
sbb
jne
and
hlt
xchg
and
add
fiadds
push
mov
xchg
test
aaa
xchg
sub
xchg
mov
loope
leave
aad
fistpll
ja
imul
inc
popa
fdivrl
test
movsb
lods
adc
es
lods
adc
and
xchg
addl
out
and
loope
das
xchg
add
xchg
xchg
das
and
enter
or
test
mov
nop
aam
mov
cmp
repz
and
ret
pop
gs
mov
push
and
mov
adc
push
push
inc
inc
andl
cmp
bound
into
mov
sbb
push
or
lods
and
inc
pop
and
pop
aam
loopne
int
data16
adc
inc
popl
dec
imul
dec
push
movl
mov
jae
push
xchg
or
push
roll
inc
sbb
xchg
shll
inc
dec
ret
push
sbb
and
imul
mov
pop
jl
pop
push
movsl
fwait
jmp
mov
incb
sub
in
popa
insl
inc
add
orl
mov
pop
ficomps
insb
push
movsl
or
or
cmp
xchg
mov
jnp
xchg
insb
or
push
adc
push
adc
sbbl
dec
dec
pop
and
inc
out
pusha
imul
cmp
adc
or
inc
push
fistl
xchg
push
sbb
aam
fcoms
rcr
pusha
or
inc
add
lcall
popf
fwait
mov
xor
add
mov
js
jne
add
sbb
sbb
and
mov
sbb
push
repz
in
lock
lcall
push
aaa
nop
inc
or
or
hlt
movsb
inc
shlb
add
dec
cs
adc
lret
mov
shl
sub
insl
cmp
pop
data16
jne
push
add
sarl
push
or
xor
xchg
mov
in
cwtl
ret
rorb
pop
push
inc
popf
cmp
or
ret
in
rolb
and
dec
test
xchg
mov
lock
mov
ss
mov
lret
rcrb
and
sub
pop
subl
nop
add
lods
inc
lret
mov
clc
in
sbb
movl
jle
jno
js
push
loop
loope
loope
sub
add
add
stos
xchg
and
fstpl
mov
dec
xchg
xor
mov
jle
mov
repnz
leave
sti
and
outsl
fcomp
mov
outsl
adc
xchg
dec
sub
outsl
nop
dec
mov
add
rclb
push
add
add
sub
sub
mov
je
mov
dec
sahf
aam
dec
and
inc
xchg
test
sbb
dec
imul
xchg
sbb
sarb
out
rcl
inc
mov
icebp
xchg
inc
incl
mov
push
bswap
or
add
int3
in
or
or
mov
mov
pop
inc
sub
popf
enter
popa
ficomps
mull
aaa
iret
xchg
cmp
insl
add
les
ret
in
out
icebp
add
lret
fldl
xchg
lock
lret
mov
repz
jmp
mov
movsb
rolb
push
push
pop
mov
or
js
cmp
lods
pop
sbb
and
cmp
out
lret
rclb
add
outsb
and
das
add
lret
es
in
mov
dec
and
mov
ss
faddl
lea
cs
or
out
lea
add
sahf
dec
repnz
mov
pop
pop
and
shll
push
rcl
xor
lea
aam
repz
jmp
lret
popa
bound
adc
or
cld
addr16
jge
nop
sub
xchg
push
mov
imul
push
inc
shrl
cmp
in
fadds
adc
andl
dec
repz
mov
push
add
inc
jle
add
xchg
pop
popa
outsb
imul
lahf
nop
pop
enter
gs
dec
dec
push
push
ror
in
pop
imul
pop
cmp
das
cmpsb
or
inc
dec
inc
push
sahf
mov
xchg
push
das
mov
mov
or
add
add
add
insb
pusha
mov
fwait
push
iret
push
pop
cmp
xchg
js
rorb
call
adc
rcrb
cmp
nop
jle
mov
enter
adc
add
and
fsubrl
neg
jmp
pop
xchg
test
push
add
xor
jp
cs
jnp
add
leave
xchg
adc
adc
sub
mov
addr16
cmp
in
push
add
out
fadds
pop
push
add
fsubs
sarl
pushf
sbb
push
push
push
add
fsubr
adc
push
pop
call
or
lods
or
pop
and
cld
int3
xchg
mov
mulb
and
enter
push
inc
cltd
cltd
lock
aas
int3
jns
add
sahf
je
es
push
into
or
mov
add
les
mov
les
in
aas
mov
and
test
call
stos
push
and
int3
lea
push
fbstp
xchg
inc
test
mov
es
dec
jbe
push
inc
cmp
adcl
test
add
push
sub
xchg
cmp
into
imul
pop
push
add
or
push
add
xchg
xchg
adc
dec
cmp
fistpll
xor
adc
and
les
mov
arpl
test
xlat
fcomp
sub
lahf
cmc
dec
adc
clc
add
jle
xchg
fdivl
mov
into
or
cld
jp
mov
xchg
dec
testb
adcb
dec
mov
sub
cmp
xor
lea
test
push
mov
fwait
leave
xchg
sbb
jmp
xchg
pop
cmpsl
lods
mov
pop
and
dec
and
fistps
xchg
jecxz
adc
jge
push
add
inc
sbb
push
test
xor
xor
test
fisubrs
push
push
push
sub
sub
or
mov
aad
pop
cwtl
mov
xchg
or
jb
sub
mov
sub
ljmp
inc
jne
dec
sub
xor
das
test
lock
adc
jge
xor
cmp
dec
es
mov
ret
xor
dec
scas
pop
jge
je
sub
outsl
add
ficomps
sbb
rorl
inc
sbb
iret
cmp
int3
adc
aaa
sbb
sbb
notb
imul
xor
pop
insb
fsub
jg
inc
xchg
ret
mov
xchg
pop
loope
push
inc
xchg
fcomps
xchg
mov
movb
das
inc
sbb
sbb
push
je
popf
cli
call
mov
decl
add
mov
test
jo
inc
arpl
nop
push
stos
cwtl
xor
into
subl
mov
xchg
mov
jns
test
push
insb
leave
leave
leave
cwtl
gs
dec
mov
ret
cmp
mov
push
je
lock
lahf
sbb
clc
ret
iret
fstpt
leave
xor
jl
pop
int3
push
mov
js
pop
fwait
cmpsb
pop
sbb
mov
lret
sbbb
or
push
and
je
daa
stc
ss
sbb
pop
lock
aam
and
insl
inc
pop
popa
or
rorl
sbbl
xor
xchg
sub
ficoml
test
or
push
mov
test
jnp
cs
mov
lods
push
cmc
test
in
popf
or
into
adc
add
insl
inc
aaa
cld
aas
lahf
fildl
cwtl
push
call
push
fwait
mov
aas
fiadds
mov
mov
push
mov
dec
lahf
or
addb
pusha
outsb
or
xchg
and
pushf
pop
mov
xor
aaa
clc
ja
mov
mov
xchg
dec
je
shl
xchg
lahf
rcrb
in
add
mov
fildl
cmp
mov
cmpsb
pop
and
add
xor
pop
movsl
xchg
mov
and
inc
orl
sub
add
insl
xchg
mov
nop
and
jns
nop
xchg
inc
inc
and
mov
bound
loop
xchg
test
mov
jle
fcoml
adc
push
adc
cmpsl
or
add
add
add
inc
mov
jnp
inc
imul
jnp
jecxz
dec
shr
in
jmp
mov
loope
push
test
or
jnp
outsb
or
jnp
orb
cltd
call
jp
xchg
int3
jg
jb
pop
jnp
mov
mov
or
xor
pop
mov
sbb
shll
xor
call
test
pusha
mov
test
je
shr
or
cmpsb
and
data16
mov
push
xchg
fsts
or
pop
and
mov
jae
mov
in
imul
outsb
or
mov
pop
lods
test
inc
push
aad
inc
int3
sbb
inc
scas
push
jno
sarb
inc
cmpb
fwait
cmpsl
or
pop
cmc
add
xchg
jmp
adc
mov
or
mov
push
fcoml
inc
xor
or
adc
push
inc
or
repnz
outsb
enter
outsb
inc
in
stos
mov
sbb
or
aam
in
outsb
inc
or
lret
push
sbb
and
sbb
insl
jbe
or
xchg
sbb
repnz
cwtl
js
cltd
lods
jno
nop
or
pop
rcrb
outsb
or
pop
stos
nop
scas
or
insl
inc
aas
sbb
push
adc
aas
ficoml
jns
cmp
ja
push
aas
or
adc
jnp
sbb
sub
loopne
and
add
pop
cs
adc
cmp
lcall
aas
mov
mov
mov
scas
loopne
movsl
push
jmp
and
call
daa
xchg
mov
jnp
or
adc
gs
pop
pop
push
cmp
imul
subl
adc
mov
or
movsl
loopne
mov
aas
or
add
mov
outsb
or
aas
std
mov
add
or
mov
sbb
aas
insl
inc
adcb
pop
nop
pusha
sarl
rclb
repnz
jno
or
mov
pop
or
or
in
and
and
or
stc
mov
or
or
or
leave
pop
push
sub
push
das
and
aas
sub
shrb
aas
inc
mov
loope
les
aas
movsb
mov
and
pop
xchg
movsb
push
pop
sbb
push
hlt
fdivrs
adc
add
xchg
sub
add
mov
mov
pop
push
aas
dec
pop
test
mov
cmp
or
mov
or
orb
mov
clc
hlt
mov
sbb
and
push
jo
inc
mov
add
roll
or
push
mov
pop
jno
pop
add
adc
mov
icebp
add
push
rolb
sub
lcall
add
sub
fcoms
sub
xlat
cmc
lsl
sbb
jge
lods
mov
adc
sub
jns
inc
push
add
inc
mov
or
nop
sbb
nop
int3
adc
psubq
repz
sbb
add
xchg
sub
and
gs
subl
push
icebp
movzbl
in
js
jge
jae
scas
fsubr
mov
jg
inc
add
mov
and
xor
jmp
scas
popf
cmp
scas
add
call
add
lea
pop
lods
aam
mov
add
add
hlt
cmp
or
test
cmpsl
or
inc
leave
add
loopne
or
ret
shlb
add
lahf
dec
add
lods
mov
and
xor
inc
add
or
jmp
adc
lahf
leave
pop
cmpb
or
add
imul
loope
add
rcrb
into
lahf
inc
dec
movsb
adc
or
add
test
jg
je
adc
adcb
sti
inc
or
adc
adc
push
add
add
loop
test
gs
mov
sub
mov
adc
cmpsl
add
mov
jmp
es
movsb
inc
cmp
cmp
dec
adc
add
sbb
loopne
inc
push
rol
mov
fbld
hlt
enter
fisttps
scas
in
inc
addb
push
inc
fists
fbld
add
inc
add
mov
mov
add
or
add
adc
filds
inc
mov
sbb
fisttps
sbb
sbb
push
sub
icebp
addb
fbld
xchg
inc
sahf
inc
sahf
pop
enter
or
or
add
add
cmpsb
movsl
mov
and
add
movl
movsl
rcrb
dec
call
test
mov
inc
fistl
xlat
add
add
add
out
fstl
mov
dec
pop
test
xlat
dec
or
add
inc
add
push
es
inc
xlat
xchg
adc
add
sbb
lods
mov
xlat
and
inc
add
or
add
in
xor
or
test
xlat
and
and
movsl
push
cmpsl
addr16
xchg
test
jmp
add
mov
or
push
inc
loopne
sbb
fnstcw
adc
inc
mov
shll
cmp
push
stc
jnp
imul
lock
and
shrl
sbb
add
or
mov
in
fwait
int
outsb
cmp
or
adc
adc
push
xor
sub
sbb
xlat
cmp
into
or
out
in
pop
or
scas
cmp
or
pop
sub
add
inc
leave
or
scas
pop
ret
and
pop
add
adcb
push
add
fs
sbb
mov
and
or
push
std
rorb
stc
add
rorb
mov
add
push
or
add
xchg
sub
rorl
inc
push
sub
or
aam
hlt
addl
or
out
or
ret
repz
pop
adc
test
pop
push
or
xchg
sub
mov
les
pop
dec
hlt
adc
in
ds
push
add
or
mov
add
adc
ret
add
inc
add
gs
pop
inc
cli
adc
or
dec
mov
add
or
adc
cltd
into
inc
pop
add
push
sbb
add
cmp
add
and
adc
daa
ret
mov
rcrb
or
cmp
pop
adc
cmp
test
in
add
das
pop
test
fldcw
sbbl
and
or
or
leave
test
aad
pop
sub
mov
add
lea
sub
imul
sbb
insl
dec
xor
pop
mov
lds
nop
inc
incl
push
adc
jno
fadds
or
mov
add
xchg
and
push
in
add
mov
das
mov
das
hlt
add
cltd
add
add
addb
scas
mov
add
mov
add
sbb
daa
or
sub
inc
das
add
and
pop
or
repz
enter
sbb
add
mov
add
mov
or
daa
and
daa
or
mov
pop
or
and
inc
dec
scas
pop
mov
push
fstpt
mov
or
mov
jmp
addb
or
pushf
lcall
adc
add
daa
scas
pop
add
push
mov
and
roll
and
adc
daa
add
adc
and
pop
daa
mov
sub
sbb
fstpl
xor
fistl
mov
mov
fcomps
xor
sarb
sub
das
sub
test
add
ret
je
add
mov
push
xchg
pop
fst
ret
fcoml
hlt
movsb
adc
and
mov
stos
cmpl
push
push
iret
rcrl
add
fwait
dec
aaa
push
lahf
nop
test
push
mov
or
into
and
jle
cmpsb
lock
shlb
xchg
daa
adc
fidivrl
dec
getsec
inc
adc
pop
mov
inc
adc
mov
push
int3
es
adc
aas
fimull
or
jb
outsl
orl
sbb
inc
movsl
fldl
jg
inc
jb
push
jmp
cmp
sub
xor
ds
dec
popa
jp
aaa
push
adc
mov
addl
and
lea
out
push
and
pop
dec
je
jg
leave
insb
push
mov
popa
cs
je
cmpsb
addr16
gs
lock
pop
out
ds
arpl
outsl
adc
xor
out
jne
shlb
xor
inc
fsubrs
cmp
push
imul
or
push
jl
push
cmp
scas
push
clc
arpl
pushf
jo
popa
cli
outsl
inc
jne
outsl
sub
add
pop
insl
jo
int3
inc
push
jb
xor
addb
rclb
ret
or
imul
loop
mov
addr16
and
repnz
jle
dec
add
arpl
or
mov
aaa
adc
or
xlat
and
dec
sbb
push
jae
outsl
fcmovb
mov
mov
mov
repnz
adc
jecxz
adcb
ss
notl
ret
mov
outsl
je
mov
mov
push
lahf
adc
pop
push
mov
stc
outsl
inc
mov
arpl
or
dec
and
mov
fidivl
rcrb
movsl
sub
push
aaa
inc
insb
cmp
xor
sbb
dec
cmpsl
inc
aad
dec
or
fs
jb
mov
iret
or
and
xchg
jne
or
pop
inc
jne
cmp
push
xlat
pop
push
xor
xlat
jle
aaa
jmp
xor
scas
inc
push
jo
outsl
mov
dec
inc
aad
xor
insb
scas
sub
add
push
push
mov
pop
rol
popa
bound
cmpsl
into
push
movl
popa
fs
or
mov
sub
test
je
and
adc
imul
out
inc
imul
jle
insb
xchg
and
mov
push
push
popa
roll
out
dec
jne
push
sbb
imul
insb
into
or
scas
dec
in
xor
iret
push
sub
inc
or
ret
pop
iret
ja
sub
inc
stos
and
cmpsl
add
outsl
bound
rolb
outsb
pop
xor
pusha
jno
aas
dec
inc
cmp
inc
arpl
addr16
push
pop
cmp
out
popa
insb
pop
sub
addr16
testl
mov
xor
xchg
mov
gs
push
scas
jns
jo
sbb
adc
pop
inc
imul
pop
push
xchg
jnp
ljmp
fldenv
dec
lds
ja
mov
stos
scas
mov
out
sub
xchg
gs
xor
cmp
dec
or
dec
xchg
jbe
and
mov
sbbb
add
jns
or
cmp
outsl
mov
shlb
imul
aad
mov
mov
rorb
cmpsb
iret
mov
mov
lahf
inc
loopne
lcall
cmp
popa
scas
aam
xchg
lea
lea
loop
lea
shrb
das
push
push
and
cmpb
mov
and
js
xor
mov
in
arpl
inc
adc
or
cwtl
insb
rorl
xor
popa
repz
jg
sbb
mov
mov
and
push
loope
or
sbb
xor
fisubs
xchg
jno
mov
ret
outsb
add
aas
mov
mov
jnp
pop
jmp
and
or
scas
or
add
movsb
mov
mov
call
fdivrl
jbe
xlat
es
sub
inc
movl
or
xorl
loopne
imul
mov
cmp
outsl
or
and
push
pop
stc
dec
lods
or
test
push
ss
pop
push
es
jmp
push
jb
dec
pop
xchg
aam
ror
shlb
int3
enter
mov
push
lea
and
ljmp
or
cwtl
sbb
loop
add
jb
in
inc
sbb
inc
inc
xchg
sbb
addr16
pop
inc
dec
sbbb
pop
xchg
add
push
leave
jecxz
icebp
dec
add
ljmp
and
or
xchg
inc
pushf
and
pop
mov
sbb
mov
ret
xchg
sbb
movsb
mov
inc
or
add
push
daa
pop
inc
or
or
dec
out
inc
adc
adc
inc
cmpsl
dec
pop
lods
or
add
xor
sbb
test
aas
xor
xor
push
xor
jl
pop
test
xchg
mov
test
lcall
aas
jg
inc
inc
popa
out
push
out
adc
xor
push
mov
inc
xchg
xor
xor
subl
inc
out
lods
rorl
lods
outsl
leave
orl
lcall
rcrb
out
bound
sub
jmp
add
add
add
syscall
addb
or
cmp
test
jp
inc
or
in
movsb
je
lock
xchg
notl
xchg
inc
fadds
sbb
popf
lods
and
addl
lea
xchg
out
and
xchg
mov
out
and
cmp
jb
push
jb
mov
add
cmp
dec
clc
push
pop
inc
sub
or
add
push
mov
sbb
dec
xchg
sbb
mov
pop
xor
cld
pop
hlt
adc
xchg
cmp
and
and
mov
mov
popa
imul
jb
aaa
f2xm1
shl
mov
loopne
rclb
outsl
sbb
add
and
push
xchg
cltd
push
mov
push
fmuls
adc
dec
and
aam
xor
xlat
cmp
xor
mov
jo
push
rol
je
jae
push
add
push
fwait
xchg
pop
xor
jno
and
cwtl
shl
sbb
or
mov
and
std
mov
repz
inc
cmp
sbb
push
call
ja
sub
rol
and
insb
dec
sbb
jne
add
sahf
dec
inc
cmc
insb
push
pusha
stos
insb
je
sbb
jb
in
pop
rcrb
je
cmp
aas
shll
cmpl
std
jg
sbb
or
stos
and
push
popa
add
call
sub
push
add
push
pop
dec
stos
sahf
and
mov
add
lods
fwait
das
cmpsl
gs
pop
or
inc
popf
jge
dec
pop
xor
xor
add
imul
scas
or
adc
int
loop
add
add
dec
ss
dec
aaa
call
cmp
and
and
mov
jo
sbb
push
das
dec
pop
add
mov
repz
addb
add
or
lret
sbb
pop
push
mov
fimuls
push
xor
push
clc
int
adcb
imul
xchg
cmp
xor
add
sbb
pop
and
js
xchg
pop
and
sub
mov
push
and
xor
sub
adc
lcall
push
push
mov
in
rcrl
rolb
sbb
mov
pop
add
push
jne
add
test
faddl
xor
aaa
iret
hlt
pusha
and
rol
jge
push
inc
cmpsl
or
lock
mov
imul
cmpl
dec
jo
test
loopne
cmp
mov
mov
xor
frstor
sbb
mov
mov
ds
pusha
adc
adc
test
xchg
ja
sbb
jb
pop
and
cmpsl
mov
adc
leave
dec
enter
mov
cmc
enter
or
in
sbb
outsl
inc
fstps
push
andb
push
mov
lahf
mov
or
insb
fadds
ds
fmuls
daa
pusha
jnp
add
sbb
add
push
jns
sub
or
inc
js
imul
xor
aam
pop
cs
test
or
mov
and
fsubrl
cmp
mov
test
mov
sub
test
sbbb
aad
xchg
in
lods
and
std
mov
call
aaa
or
nop
pop
mov
daa
ds
subb
add
inc
iret
push
loopne
add
imul
leave
and
or
mov
in
add
sbb
mov
lcall
push
fwait
mull
jns
mov
stos
sarb
sarl
cs
xchg
and
sbb
mov
sbb
pop
shlb
push
xchg
jo
or
dec
push
mov
loop
adc
sti
add
push
or
dec
add
lcall
dec
mov
mov
mov
fmull
nop
push
mov
add
or
sbb
in
and
xor
add
add
nop/reserved
inc
or
add
mov
jo
mov
mov
xchg
mov
push
dec
jp
or
xor
nop
cmpsb
addl
into
push
mov
mov
cs
pop
sahf
pop
sbb
mov
popf
xor
lods
push
and
adc
or
pop
inc
jmp
xchg
lods
stos
or
push
inc
adc
push
adc
inc
nop
inc
inc
pop
aas
pop
or
fwait
mov
cmp
xor
mov
test
sbb
mov
mov
push
push
mov
add
push
push
out
push
push
int
scas
sti
mov
xchg
cmp
scas
mov
int
dec
int3
inc
or
adc
sar
push
sbb
add
or
je
jmp
adc
jb
or
and
jo
add
add
popa
add
dec
or
push
cld
mov
sti
dec
and
pop
sbb
sahf
ss
sub
add
aaa
mov
imul
add
shl
shll
sbb
inc
jmp
lahf
push
clc
repz
daa
in
orb
inc
fidivrs
sub
enter
insb
or
or
xchg
xor
mov
enter
inc
mov
push
xchg
das
sbb
adc
and
arpl
pushf
mov
cmp
mov
les
aaa
repnz
mov
sbb
adc
xchg
sub
adc
leave
adc
mov
xor
sub
sbb
lahf
leave
and
mov
sub
enter
lea
nop
cmp
push
ret
iret
add
xchg
xor
sarb
dec
es
sbb
fisubrl
xor
addl
xchg
lods
add
shl
insb
popf
pushf
mov
pop
sub
rolb
and
push
jno
inc
sbb
inc
jb
repnz
ret
pop
or
xor
xor
or
pop
jle
mov
cmpl
mov
and
insb
mov
and
push
fcom
xor
sbb
xchg
ljmp
into
mov
int3
and
xlat
dec
add
ret
orb
xorb
dec
cld
or
test
mov
dec
in
add
in
adc
add
adc
xor
sbb
jbe
fcmovnu
push
fsubl
inc
and
fsts
cmp
nop
mov
mov
dec
dec
mov
add
jmp
push
or
pop
mov
movsl
and
add
add
push
pusha
popl
imul
cmc
push
cltd
js
cmpsb
cwtl
movsl
cmp
ret
lret
sub
mov
out
pop
jns
popa
aad
repnz
data16
daa
or
inc
cvttps2pi
or
mov
fs
xchg
es
insl
movsb
icebp
movsl
mov
push
add
add
mov
cmp
sub
add
lods
leave
js
lods
dec
or
jmp
and
inc
mov
pusha
jecxz
repz
fiadds
or
imul
mov
xchg
jmp
sbb
data16
testl
xor
insb
fsubs
outsl
dec
sbb
inc
movsl
pop
nop
addr16
aaa
xor
ret
aad
nop
addr16
rorb
mov
pop
xor
adc
shrb
jbe
sub
dec
mov
mov
add
add
ss
push
sbb
outsl
aam
push
jb
mov
jb
add
fsubr
jns,pn
push
fcomps
add
and
inc
and
fdivl
add
loopne
add
and
mov
lcall
dec
cwtl
fs
xor
push
and
adc
nop
cwtl
jno
pop
pop
add
in
pop
xor
stc
sbb
mov
enter
nop
mov
in
in
push
mov
adc
push
in
xor
mov
iret
add
push
adc
test
cmpsb
dec
bound
adc
or
fisubrs
sbb
or
xchg
nop
sub
cmovns
mov
mov
jle
xchg
leave
das
mov
adc
jo
or
scas
jae
pusha
sbb
pushl
xchg
sti
and
inc
mov
mov
mov
jle
inc
pushl
leave
repnz
cmp
mov
loope
and
sbb
lock
aas
stos
and
icebp
mov
xchg
add
push
mov
shll
rcrb
and
push
dec
test
fldenv
repnz
bnd
out
jae
jmp
ljmp
jle
ds
mov
push
lds
fdivrs
ljmp
sti
inc
sbb
mov
leave
fistl
mov
add
inc
jl
pushf
mov
nop
fdivs
sbb
enter
data16
or
shl
dec
push
sbb
call
jb
dec
adc
mov
test
int3
and
add
mov
ficoml
or
push
pop
push
inc
faddl
adc
in
aaa
cmpb
pop
mov
mov
inc
or
mov
rolb
push
in
mov
adc
xor
push
push
dec
push
pop
adc
fmuls
mov
jno
pop
dec
jae
sbb
pop
inc
ret
jg
sbb
mov
pop
mov
sub
sahf
inc
inc
pushf
add
lret
cmpsb
push
lock
dec
adc
mov
stc
jnp
fiadds
and
imul
or
pop
jo
scas
loopne
dec
addr16
or
movsb
or
push
pop
fcomps
or
add
clc
jnp
mov
loopne
or
pop
sub
mov
or
or
or
mov
xor
sub
pop
inc
xchg
and
pusha
mov
xchg
daa
ret
jle
iret
shl
or
pcmpgtb
loope
nop
adc
push
push
adc
daa
jns
pop
enter
and
or
mov
mov
pop
loop
or
push
xchg
push
popf
movsl
adcl
or
out
push
data16
cmpsb
movsb
adc
ss
femms
sbb
jbe
push
add
pop
pushf
daa
das
xchg
push
mov
popa
je
xchg
loop
and
in
sbb
or
stos
sub
cld
xchg
mov
ljmp
xor
out
mov
pop
mov
ret
pop
push
inc
pop
mov
mov
fidivl
add
cmpsb
dec
rclb
orl
adc
movb
push
or
sbb
inc
adcl
mov
test
jb
pushl
pusha
jg
in
push
cli
xchg
sbb
push
inc
mov
adc
fidivl
or
iret
orl
test
cmpsl
push
and
pop
sub
pop
das
pop
popf
pop
push
jmp
pop
cmp
or
ret
adcb
in
xchg
sub
xor
js
inc
xor
imul
loopne
jge
cmpsb
in
cli
push
or
xlat
and
jmp
mov
adc
pop
je
ud2
les
and
sbb
cld
push
sub
daa
sbb
lock
jle
sbb
inc
jp
adcb
xor
xchg
in
mov
rclb
adc
das
mov
nop
lahf
movsb
push
push
pop
add
jae
inc
cmp
test
push
pop
dec
aad
add
push
das
jo
pop
inc
insb
adc
pop
adc
mov
or
rcr
enter
cmp
mov
cmovno
lsl
or
in
test
push
sahf
in
fmul
xor
ret
aas
shll
shl
dec
shll
test
lcall
jg
fcompl
cmp
ret
dec
mov
mov
cltd
add
aaa
and
lret
insl
mov
or
inc
adc
pop
pop
pop
mov
sub
and
nop
xchg
push
in
dec
mov
push
dec
pop
mov
in
pop
mov
dec
add
fmul
shrb
push
outsb
jo
push
ret
adc
jae
sbb
movsb
jbe
pop
sub
movsb
cmp
orl
fnsave
fdivs
cwtl
movsl
adc
lcall
hlt
nop
movsb
dec
iret
jl
inc
stos
es
and
jmp
ljmp
dec
adc
loop
mov
adc
insb
outsl
sub
push
xchg
faddl
mov
rorb
add
push
cmp
mov
lds
inc
sub
pop
and
aaa
test
lcall
push
pop
add
jg
cmpsb
imul
rcrb
int
add
lcall
sbb
icebp
xchg
sub
outsl
adc
nop
pop
repnz
push
push
xor
or
sbb
inc
push
mov
jae
push
push
pop
inc
push
popa
mov
adc
inc
xlat
push
in
xrelease
popa
sarl
push
push
jae
lods
or
mov
test
dec
jae
mov
and
scas
das
in
pop
int3
pop
push
dec
push
sub
pop
jae
in
mov
pop
inc
or
push
or
aaa
jo
xchg
aam
pusha
in
pushf
push
enter
push
adc
push
and
aam
pop
in
stos
orb
call
inc
and
cmp
mov
rcrb
xor
or
push
addr16
popa
and
addr16
or
iret
fs
xor
js
data16
imull
sbb
cmpsb
push
xchg
sbb
and
and
lods
aas
addl
push
pop
cmp
aaa
xchg
mov
xchg
add
sub
or
jo
jmp
lods
dec
mov
sub
add
nop
add
push
xchg
out
dec
xor
add
sub
push
movl
ret
call
int3
fcomps
and
pop
push
sbb
xchg
je
subb
inc
push
mov
add
rcrl
jne
or
push
pop
cmp
jo
movsb
adc
push
add
loopne
push
leave
xchg
sbb
adc
cmp
outsl
pushf
es
aad
ret
test
sbb
cmp
cs
dec
xchg
les
mov
scas
hlt
pop
mov
and
insb
adc
add
inc
pop
jo
cmpsl
lods
adc
push
enter
cmpsb
les
cld
sbbl
adc
inc
sbb
fidivrs
mov
inc
mov
sbb
sub
movsb
sbb
pop
mov
mov
mov
insb
pop
xchg
out
loop
test
push
pop
dec
xchg
sub
addb
sub
xchg
fwait
gs
sbb
pop
and
pop
sub
pusha
test
sub
sbb
cmp
push
pop
inc
cmp
addb
call
add
mov
or
push
add
sub
jmp
testl
ja
out
outsb
pop
add
inc
nop
jg
enter
test
cwtl
add
cmp
mov
add
cmp
lahf
push
lods
dec
push
pop
aas
mov
dec
push
test
push
xchg
pop
mov
ljmp
cli
inc
xchg
inc
lock
mov
loop
push
insb
iret
and
cwtl
push
aam
mov
pop
push
mov
adc
imull
sarb
mov
xchg
inc
sti
xchg
push
push
unpckhps
push
loope
loopne
add
or
ret
ss
vmread
and
sub
xchg
inc
push
sbb
dec
jnp
aaa
and
inc
push
push
add
rcll
ss
push
scas
in
sbb
mov
and
and
push
sbb
mov
test
add
in
push
add
cwtl
jb
push
adc
inc
es
xor
jbe
nop
les
xchg
and
or
out
nop
pop
leave
add
push
jae
mov
fiaddl
jne
clc
add
add
jbe
out
jb
sbb
pusha
jo
es
sub
dec
adc
shlb
test
xorb
push
hlt
cmpsl
ficomps
pop
subb
pop
jle
mov
push
test
push
pop
adc
roll
jns
call
sub
add
sub
loope
cs
push
dec
and
lcall
and
fsubs
push
sbb
ss
mov
xor
push
pop
and
sbb
and
and
and
fcmovb
ja
push
and
and
and
sub
jg
sbb
pop
pop
out
pop
cmp
push
push
lds
mov
push
loopne
xor
nop
sbb
dec
add
shrb
inc
imul
push
pop
xor
add
jg
pop
add
daa
xchg
adc
xor
fucomip
push
sbb
push
pop
cmc
cmpsb
dec
push
add
adc
dec
pop
or
push
cmp
ds
xorb
sbb
xor
int3
pop
dec
shll
sbb
sub
cmp
dec
loop
fbstp
xor
xchg
imul
pop
push
sub
movsb
mov
dec
pop
xor
nop
movsb
movsb
test
leave
andl
mov
pushf
shlb
pcmpeqb
cltd
nop
or
pushf
pushf
pushf
xacquire
paddb
cmp
rcll
sbb
jp
xor
imul
pop
push
dec
shll
repz
imul
push
jmp
push
fbstp
dec
sbb
scas
stos
adc
inc
call
mov
fildl
cmpsb
or
cs
or
rolb
pop
lret
sub
arpl
inc
or
pusha
nop
out
jg
sbb
dec
mov
and
mov
jg
mov
xchg
ss
ljmp
sbb
insl
jle
clc
sub
loop
insb
cmp
scas
lcall
test
lods
jp
mov
gs
inc
jl
sub
pusha
shll
cwtl
mov
sbb
daa
or
add
push
cmp
lods
addl
pop
add
loope
sbb
mov
lods
ja
int
movb
pop
xchg
or
cwtl
xchg
addb
cmp
pop
or
das
int
out
add
cmpsb
push
adc
dec
shll
xchg
mov
data16
mov
sbb
cmp
dec
adc
xor
shlb
jg
nop/reserved
testb
jns
mov
push
xchg
imul
icebp
popa
inc
sti
cmp
fstpt
dec
call
sbb
xor
sub
mov
sbb
sub
je
in
sub
lea
andb
jo
add
sbb
fsubs
jle
cmp
loopne
test
push
rol
push
jnp
aas
sbb
outsl
adcl
sbb
nop
inc
push
and
orl
sbb
jl
negb
inc
xor
test
and
xchg
xor
xor
and
movsb
test
and
xor
mov
and
xor
pop
sbb
popa
jns
cld
push
xchg
dec
shll
add
and
xor
inc
dec
pop
imul
mov
xor
leave
fldl2t
stc
or
roll
sub
dec
pop
imul
gs
fnstenv
mov
or
mov
sahf
nop
mov
jns
test
jo
push
and
add
add
lahf
inc
nop
jns,pn
in
nop
and
flds
lahf
xor
sbb
inc
mov
dec
xchg
addr16
add
xor
or
call
dec
ret
pop
xor
popa
pop
ds
dec
pusha
ljmp
and
push
add
outsl
inc
mov
inc
adc
jae
lods
lds
aaa
adc
mov
push
xor
sub
pop
adc
xor
fs
and
cmp
in
loop
adcb
int
pushf
popf
sahf
lahf
or
mov
pop
mov
test
lcall
mov
sub
cmpsb
xchg
enter
js
pop
xchg
dec
mov
movsl
pop
pushf
addb
cmpl
jnp
push
cmpsl
push
pop
cmp
mov
xor
test
jbe
xchg
sub
popa
loopne
jmp
cwtl
add
and
sbb
stos
jle
andb
xchg
dec
xchg
xor
cmpl
sub
dec
inc
jg
or
mov
cmp
hlt
sbb
andps
pop
xchg
fucomi
pmuludq
mov
aaa
push
mov
and
and
and
add
jl
or
daa
sub
xor
lahf
jb
or
push
xor
xchg
in
dec
sub
inc
push
sub
mov
adcb
sbb
and
xlat
cmp
lock
xchg
cli
das
xor
lahf
adc
shl
jo
add
scas
xchg
push
imul
pop
fwait
movl
push
or
push
dec
mov
adc
adc
add
call
insb
imul
add
rcrl
push
adc
bound
sbb
and
adc
or
mov
popa
sbb
cmp
call
mov
or
enter
jmp
cs
incl
cwtl
inc
xor
addps
push
fcomps
ficoml
aam
pusha
inc
xchg
cmp
pop
pslld
inc
and
cmp
fcomps
repnz
sbb
pop
ss
lret
adc
add
sbb
movsl
push
scas
inc
nop
sub
push
add
iret
push
inc
sub
and
pop
iret
mov
and
xor
add
mov
add
mov
mov
or
inc
push
push
outsb
aaa
imul
inc
add
or
cmp
inc
mov
aaa
cmp
jmp
adc
int3
mov
or
rolb
mov
data16
push
and
mov
cmp
push
mov
mov
and
push
mov
inc
inc
dec
xchg
out
inc
daa
mov
jno
push
adc
and
sahf
add
dec
or
adc
cmp
jo
sub
bound
cmp
xor
xchg
push
xchg
mov
jle
lods
and
mov
cmp
or
jbe
mov
mov
or
std
inc
imul
or
sbb
out
pusha
mov
push
xchg
pop
and
jo
jg
divl
out
idivl
sbb
lods
xchg
or
sbb
pusha
inc
sub
fucomp
outsl
inc
and
les
test
fistpl
imul
adc
insb
or
push
mov
inc
or
out
in
mov
fmuls
lods
add
push
adc
add
cmp
cld
and
sub
sub
push
dec
and
loop
xchg
add
mov
out
add
push
sub
mov
subl
ds
or
push
sub
sub
or
xchg
sbb
xchg
inc
xchg
stos
or
and
xor
dec
pushl
fdivs
pop
mov
mov
mov
xor
sub
and
inc
or
sub
enter
test
lods
mov
xor
cmp
imul
add
mov
mov
shll
mov
xor
jnp
cs
xchg
add
mov
dec
or
sarb
pop
push
jns
outsb
aas
dec
test
bound
rclb
mov
nop
ret
mov
add
cmp
or
stos
mov
mov
or
and
add
jl
mov
movsl
enter
loopne
sbb
in
call
call
add
shlb
rclb
or
lods
sub
les
adc
add
jmp
or
dec
mov
fiaddl
pusha
xor
mov
add
mov
enter
inc
xor
mov
mov
das
pcmpeqd
xchg
fistl
and
adc
loopne
bound
xchg
sub
mov
inc
adc
cmpsb
loope
lods
pop
adc
movnti
inc
dec
jle
cmp
ret
ret
pop
fadd
dec
push
or
add
ret
ret
test
sbb
sbb
inc
xor
xchg
sbb
inc
add
add
or
ret
popf
push
movsb
lock
sbb
das
in
push
sub
cmp
adc
fdiv
aaa
inc
push
or
outsb
pop
nop
inc
movsl
and
insb
test
orb
or
and
xchg
popl
xor
arpl
pop
mov
movsb
adc
pusha
jnp
xchg
push
push
shlb
adc
sahf
js
lods
jae
test
push
push
call
aaa
pop
lret
fs
insb
mov
test
clc
loopne
push
pop
fistpl
loope
and
inc
sub
push
popa
popa
out
mov
cmp
das
and
insb
or
pop
or
cmp
scas
inc
or
inc
and
pop
add
scas
inc
dec
xor
mov
lods
popa
roll
sub
xchg
xchg
and
jecxz
sub
popf
jns
or
sub
test
in
add
adc
mov
test
and
pop
aam
xor
mov
sbb
je
add
push
or
mov
mov
inc
test
or
aaa
inc
push
push
jnp
xor
xchg
mov
xchg
push
loop
push
adc
dec
jb
jns
pop
test
rcl
cs
sbb
sbb
pop
ret
push
sub
enter
mov
out
fwait
dec
pop
fldenv
pop
cs
aas
sbb
pushf
nop
sysret
test
fldl2t
mov
ss
daa
or
pop
in
mov
inc
arpl
leave
daa
je
and
pop
and
mov
add
jne
xchg
pop
data16
scas
mov
pop
inc
cmp
or
lock
dec
adc
or
andb
dec
dec
shll
adc
or
imul
jno
pop
pushf
pop
sub
dec
leave
ds
pop
mov
sarb
adc
mov
mov
fcoms
test
mov
pusha
inc
sub
push
push
cmpsl
mov
cmpl
es
lods
sub
jl
jg
jo
xor
or
cmp
pusha
push
nop
stos
push
or
sub
inc
in
sub
popf
std
adc
push
and
mov
test
inc
xchg
testl
push
or
aam
les
sbb
or
mov
rclb
sbb
test
mov
or
cmpsl
sbb
sub
xor
cmp
xchg
and
les
jno
push
cld
add
ss
stos
mov
movsb
addr16
js
imul
cwtl
movsb
pusha
das
lock
jp
movsb
xor
ja
xor
and
pusha
out
or
pop
or
and
sub
inc
cmp
add
aad
dec
mov
push
xchg
sbb
loope
dec
mull
mov
addr16
popf
mov
shlb
mov
rcrl
mov
adc
adc
push
pop
sub
sub
aad
and
inc
call
inc
mov
or
adc
into
movsb
adc
aad
inc
or
sub
adcl
xchg
mov
or
cmpsl
inc
pop
pop
pop
mul
dec
in
inc
mov
popa
ss
orl
or
dec
lds
xor
sarl
fs
dec
and
xor
push
push
xor
xor
pop
cmpsb
test
xor
leave
je
sub
inc
add
pusha
add
and
fadds
lock
push
sarl
dec
jbe
or
in
sbb
jo
xchg
or
bound
rolb
aad
mov
fucomi
or
xor
mov
push
push
jo
or
ret
sbb
xchg
xchg
inc
adc
push
addb
addb
and
mov
add
iret
push
jge
scas
inc
push
pop
dec
sub
orb
hlt
push
add
cmp
repnz
push
xor
push
js
mov
ds
fwait
dec
push
test
inc
mov
and
or
fnsave
daa
jb
adc
mov
add
clc
clc
cmp
les
push
mov
test
xor
fmull
inc
or
cmp
mov
gs
aad
sbb
and
arpl
sbb
jno
pop
ret
mov
les
call
inc
push
int
add
inc
dec
jnp
push
and
lret
lock
movsb
add
int3
and
adc
out
jmp
xor
clc
ret
dec
dec
andb
int
ja
cmp
testl
dec
cmpsb
or
lock
test
xchg
xorl
and
enter
sbb
inc
xor
lds
xchg
repz
les
aad
dec
in
xor
loopnew
jb
cmp
or
mov
and
cmp
nop
in
lock
add
mov
xor
loopne
fisubs
add
faddl
faddl
gs
add
lock
daa
lret
mov
add
dec
dec
jo
aad
fcoms
enter
sub
mov
dec
inc
push
push
push
cmp
push
push
xchg
jg
sbbb
rcrb
adc
lods
push
enter
xchg
inc
xchg
push
or
inc
int3
insl
cltd
lcall
push
aam
fcoms
sbb
fmull
rclb
fiaddl
inc
in
out
dec
sub
xlat
stos
push
adc
jne
or
cmpsl
shrb
int
leave
pop
fstpl
sbb
inc
xchg
ss
cmpsl
or
sub
cwtl
imul
and
imul
fdivs
sarb
mov
dec
jnp
dec
xor
aas
mov
insb
and
jbe
sbb
dec
or
enter
inc
add
or
pop
mov
and
jae
xchg
or
xchg
jae
or
and
dec
pop
dec
shll
bound
ret
fnsave
push
rcl
sbb
rcrl
add
inc
lock
xor
enter
or
mov
xor
sub
mov
cmc
mov
sub
sbb
lock
jp
aam
das
xlat
cmp
inc
and
adc
sbb
aad
pop
or
mov
push
push
xor
ret
mov
push
lret
mov
push
lret
push
test
ljmp
add
lcall
in
xor
rcrl
or
push
push
adc
add
adc
cmp
lcall
jne
xchg
out
cmp
pop
or
jae
aam
loopne
lock
in
fisubs
pusha
inc
addl
or
xor
mov
jo
sub
pushf
clc
das
movsb
push
lods
add
jmp
and
cmp
jmp
mov
clc
push
dec
mov
lock
lock
sbb
cmpb
int3
xchg
iret
xor
and
inc
push
stos
push
clc
scas
test
sbb
es
or
lock
scas
dec
sub
adc
xor
jmp
adc
lcall
mov
dec
sbb
or
or
add
stos
je
push
imul
pop
push
cld
fiaddl
fucomi
push
mov
jae
popf
or
xor
sbb
push
mov
nop
inc
pop
loope
mov
inc
sbb
sbb
scas
aam
add
sub
sarb
andl
sbb
fbstp
jb
pop
jge
and
pop
mov
sbb
fdivs
addr16
sub
cmp
push
shrl
ss
pop
jo
ret
xor
dec
ret
movsl
loop
cmp
mov
sub
xor
nop
sbb
mov
or
outsb
xor
push
pop
dec
mov
jo
sbb
mov
mov
sbb
adc
dec
fs
sbb
lds
mov
pushl
aam
mov
xorl
ret
push
xchg
testl
lcall
pusha
xor
pushf
call
dec
stos
pushl
aaa
ret
and
pop
mov
sub
dec
movsb
loopne
or
lock
add
add
xchg
aaa
sub
xchg
stc
or
iret
sbb
pusha
mov
mov
enter
fcomp
fdiv
into
mov
xor
rorb
jae
pusha
add
cmp
and
push
xor
sbb
cmpsb
xchg
aam
sub
mov
and
mov
sub
pop
dec
adc
dec
and
or
and
adc
mov
mov
add
add
test
cmp
pop
or
jbe
pop
and
repnz
or
inc
pop
mov
jns
pusha
vcmppd
inc
pusha
shll
outsb
das
pop
and
aaa
jl
movsl
cmp
xchg
inc
popa
leave
sti
add
ret
push
add
pop
dec
push
and
add
cmpsb
jne
mov
insl
inc
mov
popa
push
nop
adc
mov
scas
aam
cmp
jbe
cs
pop
xchg
jnp
inc
pop
add
pop
add
aaa
add
push
dec
push
pop
repnz
cs
pusha
sub
loope
xor
adc
add
pusha
sbb
inc
push
and
popa
xor
adc
scas
xor
enter
jnp
daa
popa
add
inc
rsqrtps
movsb
loope
sub
push
push
fsubrs
xor
or
loopne
cmpsl
mov
cmp
and
mov
cmpsl
dec
xchg
xchg
outsl
cmp
test
pop
cli
enter
bound
or
pushf
pusha
bound
mov
mov
int3
ss
push
inc
pop
test
adc
sbb
lea
sbb
jmp
lret
arpl
inc
les
inc
int
fisubs
xchg
and
sbb
mov
lock
push
or
pcmpgtd
cmp
std
dec
sahf
movsl
adc
jno
xor
adcl
cmp
fiaddl
jp
inc
mov
jg
test
xor
lahf
xchg
loopne
roll
inc
mov
mov
adc
jo
or
pop
pop
fiaddl
loope
rcrb
ret
adcl
mov
inc
or
push
jnp
push
add
sbb
and
shll
sbb
adcl
test
pop
mov
xor
or
xchg
mov
data16
push
enter
dec
jae
clc
cld
data16
hlt
add
and
insb
adc
sbb
adc
test
lcall
xchg
cmpb
aas
adc
mov
xchg
inc
test
in
fcoms
sbb
adc
jmp
stos
out
xor
mov
xchg
xchg
inc
lret
cmp
or
mov
mov
outsl
jae
push
pop
push
push
pop
enter
pop
fsubrs
mov
in
sub
adc
and
or
and
dec
jle
ret
add
xor
or
push
addb
adc
loope
insb
or
mov
std
nop
out
or
add
mov
ds
gs
xor
stos
popa
xor
or
dec
lock
adc
and
mov
push
clc
push
sub
jg
clc
pop
and
add
inc
data16
and
and
sbb
jne
push
es
filds
sbb
in
and
xchg
adc
push
jecxz
clc
inc
adcb
movl
mov
fistps
adc
cmc
insl
adc
push
add
jg
jge
std
popa
in
xor
dec
lds
dec
sbb
addr16
pusha
add
jns
imul
add
xor
and
jno
cmp
xor
sub
inc
sbb
enter
loopne
and
add
out
fsubrs
fidivrl
dec
and
xchg
out
fs
test
stos
lea
or
or
mov
adc
dec
and
cld
movsb
xchg
inc
jle
sbb
mov
add
nop
fs
or
push
mov
imul
stos
or
adc
or
stos
mov
push
inc
mov
cltd
or
mov
nop
or
adc
mov
outsb
lods
or
mov
mov
mov
nop
aas
mov
pusha
adc
scas
xchg
rolb
jge
and
push
dec
rcll
xchg
and
cltd
in
adc
sub
push
push
inc
or
mov
or
push
das
orl
jo
test
dec
xor
pop
jo
fistps
roll
xchg
hlt
std
lock
mov
jb
pop
xchg
mov
mov
shrb
push
adc
push
dec
mov
dec
sub
push
mov
sub
add
push
gs
flds
cvtps2pd
adc
xor
dec
repnz
and
mov
and
sbb
dec
mov
test
rolb
stos
push
sub
pusha
int
push
ret
add
push
push
and
add
cmpsl
adc
or
int3
int3
fwait
int
adc
rcrb
mov
add
sub
inc
dec
shlb
inc
rol
adc
stc
mov
les
inc
ds
sbb
jo,pn
mov
rcrb
test
pop
int3
xor
out
fsubrl
adc
fadd
in
mov
mov
or
pop
xor
xchg
jmp
loopne
sub
fistpl
push
lods
popa
aaa
or
add
jle
inc
bound
dec
loop
mov
dec
in
dec
push
subl
push
adc
je
sub
out
or
rcrb
sub
mov
mov
push
and
rcrb
mov
lea
inc
pop
icebp
pop
jb
sub
rolb
mov
cmpb
js
sub
dec
cmp
fs
shll
push
add
and
loop
repnz
popa
bound
orl
cmp
adc
lret
add
mov
lahf
mov
and
or
xor
inc
lea
push
nop
mov
sub
loop
movsl
roll
adc
jle
mov
and
dec
bound
cwtl
adcl
xor
push
popf
shll
cld
and
les
out
inc
ljmp
sbb
lods
xor
adcb
test
mov
pop
push
cli
es
dec
aam
xchg
mov
call
sbb
inc
mov
pusha
stos
mov
sub
xlat
or
into
sub
and
out
dec
shll
pop
bound
bound
ret
fs
sub
shrl
lock
or
lock
movsl
sahf
mov
rorb
clc
or
rolb
add
sub
and
ss
push
adc
cmp
pop
pop
mov
addb
jne
jmp
out
mov
cs
xchg
or
dec
jbe
adc
adc
popa
nop
inc
sarb
push
jbe
add
sub
popf
jbe
lods
or
push
bound
out
movl
jecxz
sbb
jns
mov
icebp
clc
adc
inc
pop
gs
sbb
jp
or
xchg
ljmp
sbb
mov
scas
jle
imul
movsl
push
xchg
in
add
repnz
dec
dec
push
push
and
addb
xor
xlat
addr16
pop
cmp
mov
aaa
push
lock
mov
loope
inc
loopne
in
and
rolb
fcoms
or
push
insl
mov
inc
imul
in
mov
mov
or
inc
inc
test
lcall
push
pop
cmp
js
adc
jns
inc
add
push
inc
jle
push
adc
nop
lret
and
inc
sub
dec
add
adc
in
imul
pop
rcll
sbb
adc
testl
fsubs
mov
aaa
push
add
inc
dec
lds
add
dec
fisttpl
out
add
and
imul
xor
sbb
and
push
push
push
dec
sub
xor
sub
lret
bound
enter
das
xor
lods
aad
or
test
cmp
xchg
mov
or
lods
leave
adc
xor
mov
cmp
insl
adc
add
mov
xchg
clc
or
fsubr
sub
jp
adc
orl
add
add
or
pop
sbb
outsl
cli
inc
jnp
adc
out
outsl
rorb
inc
imulb
dec
dec
adc
sub
and
dec
sub
outsb
xor
popa
out
in
nop
and
pop
add
cmpsb
dec
lods
and
out
fiadds
sbb
das
push
push
jle
movsb
andb
popf
pop
jb
add
add
push
out
xor
std
pop
int
dec
adc
xchg
mov
jne
pop
xchg
jge
xorb
push
in
imul
ds
push
xchg
popl
cmp
inc
mov
hlt
adc
clc
mov
pop
jne
loope
sbb
adc
cs
inc
shlb
sub
mov
pop
fwait
and
mov
adc
and
sub
or
adc
popa
sub
dec
push
or
sub
xor
stc
jo
and
outsb
dec
setae
nop
push
mov
out
movb
mov
and
mov
inc
cwtl
jns
scas
sbb
cli
sarl
cmpsb
mov
mov
mov
mov
mov
mov
push
adc
mov
xor
and
stos
pop
jg
mov
ss
iret
sbb
push
pop
and
pusha
cmp
aad
adcl
icebp
dec
adc
movsb
pusha
in
lcall
inc
push
cmp
adc
mov
xor
ret
xor
movsb
sub
call
imul
loop
or
pop
nop
xchg
pop
aaa
mov
add
shrb
loop
orl
subb
dec
scas
ret
pop
cld
jne
and
xchg
fsts
or
or
adc
loope
in
sub
mov
mov
cld
add
rolb
sbb
cld
inc
xorl
loope
sub
clc
in
pop
arpl
dec
jmp
lcall
arpl
add
fwait
jge
dec
jae
inc
fildll
ret
outsb
lret
pop
jb
ja
sub
cs
xor
dec
xchg
dec
pop
push
sbb
imul
imul
or
in
lret
shrb
mov
xor
and
mov
xchg
cmp
cmp
push
inc
or
mov
rolb
int3
inc
add
pop
mov
sub
call
sbb
aas
add
pusha
and
jne
les
xor
or
sti
dec
or
sub
stc
pop
pop
rclb
sub
dec
add
addr16
adc
sbb
pop
je
sbb
ja
or
dec
jno
xorl
mov
pop
jb
mov
sub
pop
test
je
or
mov
or
add
imul
faddl
jnp
pop
xchg
xchg
cmp
maskmovq
testl
add
fcoms
es
das
pop
shrl
mov
pop
cmp
or
or
adc
or
daa
inc
mov
jp
jnp
mov
loopne
test
and
loope
push
orb
fstl
xchg
inc
movsb
not
pop
out
shrb
call
scas
inc
sbb
aad
lock
clc
ljmp
jne
mov
test
aaa
push
cmp
and
adc
or
or
arpl
test
add
shrl
test
sbb
insl
sub
xchg
xor
pop
sub
js
or
push
adc
push
negl
jne
loope
int
xchg
mov
dec
aas
jne
mov
push
popa
pop
sub
cmp
sbb
xchg
push
jo
mov
outsl
pop
cwtl
mov
mov
inc
and
inc
adc
int3
fs
ret
or
adc
test
mov
push
inc
inc
xchg
dec
mov
cmp
mov
imul
insl
aaa
das
pop
mov
bound
cld
shrl
xchg
push
and
ret
jne
lods
jne
dec
cmp
in
pop
leave
test
nop
push
jb
ja
push
mov
pusha
fisttpll
daa
add
pop
outsb
mov
pop
jp
cli
imul
insb
sub
xchg
and
sub
and
add
shr
xchg
mov
mov
add
sub
mov
xor
pop
ja
add
dec
dec
push
add
and
sbb
and
and
jp
add
arpl
mov
dec
loop
push
cmpsl
or
and
adc
cwtl
jg
dec
and
and
enter
ror
aaa
in
dec
mov
mov
xor
add
dec
out
addb
cmpsl
push
or
fmull
inc
imul
mov
cwtl
jne
sarb
xchg
jmp
arpl
xchg
add
sub
pop
mov
cmpsl
outsb
push
jle
push
sbbl
or
adc
jg
pop
ret
or
filds
dec
lahf
aam
sub
call
lret
in
xchg
mov
mov
sbb
and
sbbb
pushf
sarl
push
arpl
and
or
xchg
dec
xchg
and
push
inc
dec
bswap
mov
mov
loopne
mov
jae
or
or
jo
jmp
pop
movb
add
xor
cmp
jne
imul
sub
mov
mov
incl
and
adc
imul
dec
inc
add
int3
xor
mov
jno
cwtl
popa
add
ja
mov
push
lock
and
sbb
jae
leave
dec
ss
mov
xchg
mov
sbb
add
push
or
fstp
in
xor
xor
aam
inc
pop
pop
popa
adc
mov
mov
les
adc
pop
jns
insl
mov
and
mov
sti
jmp
xor
mov
mov
jns
lahf
add
push
xchg
pusha
cltd
push
xchg
movlhps
jne
call
push
pushf
ja
lret
or
lret
and
and
mov
sub
jne
sbb
pusha
jb
rclb
push
out
nop
mov
popa
xchg
test
leave
adcl
mov
test
dec
jecxz
adc
cmpsl
sbb
leave
dec
aad
movsl
push
pushf
jge
fidivl
cs
test
je
icebp
xchg
xchg
adc
fldl
dec
cmpsb
or
ljmp
xor
push
dec
push
js
ds
fisttpll
es
pop
loope
push
test
andb
das
mov
in
adc
mov
or
mov
out
push
pop
sub
or
icebp
lahf
scas
sub
mov
je
mov
stc
add
cmp
mov
cmp
clc
jl
cmp
pop
sbb
push
iret
incl
jnp
jge
sbb
or
mov
sarb
mov
pop
sbb
lods
inc
scas
pop
adc
pusha
insb
mov
test
mov
adc
and
push
sbb
adc
xchg
mov
nop
lds
xchg
in
or
mov
pop
in
pop
push
add
mov
mov
cmp
dec
mov
or
push
sub
test
adcb
inc
push
lods
pop
sbb
adc
pop
xchg
aam
and
push
je
inc
add
xchg
cltd
sbb
and
pop
jmp
pop
cmp
nop
xor
clc
push
pop
dec
add
test
je
dec
fimull
or
or
hlt
nop
lock
outsb
sbb
pusha
push
test
push
xor
imul
lahf
inc
and
mov
ror
mov
test
enter
push
ljmp
dec
or
inc
mov
mov
push
jecxz
sbb
test
cmpsb
jg
out
out
call
sti
and
xchg
mov
inc
enter
in
cmpl
mov
dec
dec
repnz
inc
pushf
arpl
lahf
mov
call
inc
cmpsl
rclb
add
add
mov
lret
mov
push
add
sbb
out
mov
cwtl
pusha
cmp
imul
and
sbb
mov
jne
ja
and
inc
clc
xchg
lret
and
inc
bound
mov
inc
popl
xlat
test
sahf
sbb
pusha
xchg
shlb
xor
outsb
dec
aas
mov
xor
out
fisubl
lock
insb
sub
cmp
lods
and
notb
sbb
xchg
je
inc
outsl
xchg
push
sbb
jle
push
xor
out
jmp
cmpl
or
jle
in
lock
or
sbb
push
or
movsb
test
inc
or
mov
scas
or
lret
and
push
dec
inc
dec
inc
orb
and
or
add
enter
push
fisubrl
dec
sbb
pop
lds
cmc
dec
bound
jb
shl
push
lds
cmp
popa
leave
xor
je
ljmp
cli
jecxz
sbb
and
jmp
jmp
sbb
xor
rcl
pop
pop
movsl
adc
mov
pop
cltd
mov
into
aam
adcb
movsb
sub
lock
pushf
rcr
adc
sbb
or
fcoms
inc
sbb
testb
dec
push
or
ret
pop
rolb
add
inc
push
or
orb
sub
dec
mov
ret
pop
xor
cmp
dec
push
sub
imulb
fmul
clc
and
frstor
inc
fisubs
orl
stos
inc
fisttpll
dec
or
pop
push
loopne
xchg
ret
xchg
insb
in
and
jns
fsubrs
sbb
jno
xchg
enter
push
aam
and
aam
in
and
addl
xor
sub
sbbb
les
pop
dec
in
sbb
faddp
adc
rorl
or
jne
cmc
cmpsb
jle
jno
inc
add
and
xor
or
cmc
popa
test
xchg
in
addl
or
push
sub
adc
push
or
xchg
stos
es
stc
pop
or
xchg
pop
jb
popf
or
cmpsb
and
rolb
xor
xlat
stos
mov
imul
shrb
scas
hlt
and
inc
push
clc
test
loopne
xorl
jb
mov
mov
into
clc
push
dec
lret
cmpsb
xchg
and
nop
pop
sub
or
mov
sahf
xorb
or
dec
cmp
and
fadds
inc
fcoms
shr
lock
and
test
push
popa
test
dec
adc
or
insb
les
and
daa
ret
pop
add
jecxz
sub
arpl
and
xor
push
andl
pop
or
popf
and
clc
aaa
mov
arpl
call
rorb
mov
leave
inc
and
jle
fadds
fcoms
mov
out
sub
ficompl
lds
addl
ja
dec
mov
sbb
aaa
or
mov
or
cmpsl
mov
je
inc
push
inc
ret
not
and
and
or
add
pop
inc
loop
rolb
scas
and
inc
cld
lcall
mov
adc
fs
inc
leave
fisubl
and
sbb
mov
xor
mov
or
mov
movsb
sbb
test
mov
xor
dec
pop
ret
fstps
push
inc
adc
ret
cltd
mov
mov
mov
pop
mov
add
or
pushf
sub
and
in
mov
mov
or
and
mov
loope
add
or
in
popa
dec
movsl
add
pop
in
rcll
jne
dec
sub
das
add
and
and
imul
or
pushf
adc
mov
daa
lret
and
add
sbb
xchg
inc
mov
xchg
xor
jp
pop
mov
aam
adc
shlb
push
or
mov
testl
clc
addl
push
testb
cld
rclb
into
xor
addb
push
xchg
out
cmp
das
xchg
mov
stos
or
mov
pusha
aaa
jl
inc
test
loop
movsl
es
sahf
sbb
lret
adc
ret
or
cmpsb
xor
push
insb
int3
lods
dec
leave
js
pop
ret
das
inc
inc
dec
and
sub
mov
sbb
mov
add
cmc
dec
dec
popa
testl
and
adcl
inc
popa
sbb
inc
and
lock
or
mov
shrb
cmpl
adc
add
repnz
push
xor
test
outsb
jge
scas
cs
jb
xor
int3
or
pop
xor
sub
idivb
pop
mov
push
push
mov
mov
mov
pop
sbb
pop
fs
jge
mov
or
and
pop
stc
enter
mov
and
sbb
fsubrs
addr16
in
and
and
lret
enter
and
or
pop
and
in
and
sbb
mov
and
jnp
dec
sub
or
sbb
add
push
mov
loopne
add
adc
outsb
pop
les
cmp
jae
adc
mov
addr16
adc
sbb
loopne
mov
or
push
and
mov
inc
mov
add
push
pop
push
push
movsb
stos
gs
or
imulb
mov
and
dec
insb
dec
jnp
pop
pop
pop
mov
push
imul
or
xor
sbb
inc
nop
jbe
outsb
cmp
es
rclb
es
fs
daa
loopne
hlt
cwtl
ss
inc
ret
adc
enter
or
cmp
xchg
add
cmpl
xchg
and
shll
push
pop
ljmp
sbb
cmpsl
mov
lcall
nop
xor
xchg
and
in
push
inc
test
lcall
cld
lahf
add
nop
mov
in
lock
pop
cmpb
mov
pusha
jnp
fs
pop
adc
clc
lods
pop
into
pushw
push
insb
mov
pop
mov
leave
pop
or
mov
sub
int3
xchg
mov
mov
outsl
xchg
lods
cmp
call
jmp
xchg
mov
int
mov
sub
sarb
push
pop
rolb
jge
nop
xchg
mov
and
shl
loope
mov
iret
lds
jo
pop
in
mov
push
mov
mov
push
pop
and
push
inc
inc
or
xor
cmp
or
mov
loop
push
dec
insl
pushf
add
lret
inc
inc
pop
xor
test
push
push
jbe
pop
add
add
adc
insl
and
xchg
add
inc
push
add
sub
and
dec
addl
cmpsb
xchg
and
jge
pop
or
adc
sbb
mov
sbb
loopne
jo
add
xor
add
sbb
mov
and
ret
inc
and
and
sbb
cmpb
inc
lods
lret
push
cmc
cmp
and
mov
insl
sbb
add
or
or
imul
and
push
xchg
jo
mov
aad
and
xchg
popa
xor
fstps
mov
mov
test
sbb
push
dec
dec
inc
adc
cld
add
push
popf
or
sub
popa
dec
jnp
pop
cmpsl
inc
push
pop
leave
and
mov
test
mov
xchg
sub
and
inc
imul
sub
insb
lea
add
inc
or
add
test
icebp
cmpsb
add
nop
adc
fsubrs
nop
test
and
add
cs
test
das
jmp
xor
inc
dec
and
add
add
xor
pop
mov
enter
xor
addb
jg
sbb
sbb
inc
inc
xor
xchg
jle
xchg
addl
sbb
or
dec
in
cmp
adc
push
cmp
cmp
cmp
je
mov
sbb
xor
aam
clc
sarl
aas
fdivrl
sub
ret
or
add
or
aaa
fmul
xorb
dec
aaa
faddl
xor
negb
pop
cmp
add
bound
mov
das
ret
fadds
push
inc
dec
ss
adc
cld
sahf
inc
lods
lock
and
push
inc
xchg
mov
inc
sbb
pop
adc
dec
aam
lea
push
sbb
sbb
test
add
packssdw
incl
dec
sbb
push
and
sub
lea
add
xchg
push
bound
xchg
xor
xor
jne
les
jb
mov
sbb
or
addb
xchg
lods
adc
xlat
movsl
movsl
push
add
jbe
cmp
jmp
dec
or
lret
push
pop
outsb
xor
js
cltd
inc
or
movsb
inc
pop
cmp
mov
push
xor
mulb
jge
jnp
inc
adc
or
mov
jmp
cmp
rol
inc
and
call
leave
lock
adc
dec
mov
ja
xchg
arpl
inc
mov
ret
and
or
and
inc
and
ret
xchg
mov
jmp
mov
xchg
dec
leave
insl
insl
jmp
cmp
ret
add
add
test
pusha
adc
push
or
das
hlt
pop
adc
rorl
call
ds
xor
mov
movsb
lock
sbb
lods
shrb
ret
mov
pop
fldcw
jmp
arpl
cmp
push
add
outsb
sbb
sbb
ret
sub
aas
fstpt
in
jge
daa
cmp
fwait
sbb
aas
push
int3
fldt
leave
mov
daa
insl
in
and
mov
push
dec
pop
pop
cmp
jnp
and
mov
mov
xchg
ja
add
or
mov
out
or
nop
in
add
sub
enter
aam
ror
loopne
xchg
mov
dec
aam
pop
mov
out
jnp
lahf
jbe
or
jmp
fldenv
out
int3
sbb
sbb
sbb
in
mov
or
or
insb
sub
pop
sbb
shrb
daa
sub
bound
and
jmp
idivb
push
cmp
pop
adc
inc
or
push
pushf
out
add
push
cwtl
pop
jbe
pop
mov
jmp
sarb
add
jmp
pminub
jmp
xor
add
xor
ss
imul
and
subb
adc
or
sub
pop
imul
adc
in
test
mov
add
lods
cmp
adc
movl
lods
incl
loop
and
fnsave
jp
add
pop
aam
mov
cmp
rcrb
insl
dec
jecxz
mov
clc
addb
mov
pusha
push
mov
dec
dec
push
test
adc
push
in
or
adc
cmpsl
fstpt
fdivs
and
mov
add
jae
enter
jmp
inc
jmp
xchg
cmove
loope
or
ret
les
les
out
aam
and
cwtl
xchg
cmpsl
mov
pusha
imul
sbb
aad
insl
xor
out
push
push
pop
xchg
ret
mov
lea
adc
dec
or
cmp
mov
lods
fstpt
dec
xor
imul
jns
cmp
xor
call
mov
clc
mov
mov
cmpsb
inc
jp
ret
pop
mov
pusha
push
inc
lods
pop
and
push
sbb
loope
mov
inc
sbb
adc
mov
pop
inc
pop
dec
add
or
adc
jae
mov
push
out
aaa
insl
mov
mov
cmp
xchg
cmp
sarb
xchg
lret
sbb
sub
movsl
xor
and
xchg
mov
pop
cmp
data16
push
jo
xor
ret
movsb
pop
or
cmp
jo
pop
orb
inc
dec
das
sub
adc
push
je
or
pop
or
sarb
sbb
xor
call
pop
insb
int
push
xor
add
adc
xor
push
xchg
xchg
adcl
sub
cmp
mov
sub
or
add
mov
adc
push
in
cmpsl
orb
ss
outsl
mov
ret
rcrb
mov
nop
inc
cmp
mov
imul
pusha
clc
clc
mov
mov
clc
shrb
fisttpll
xor
or
sub
xor
loop
jmp
and
loop
mov
aam
incl
stc
sub
mov
add
dec
rclb
cmpsl
mov
adc
mov
pop
xor
xor
cmp
pop
add
divb
lea
test
loope
movb
mov
jo
fdivrs
enter
add
inc
mov
rclb
fwait
or
push
testl
into
cmp
test
xor
inc
rcll
push
test
pop
cmpl
jne
mov
sarl
stos
or
outsl
inc
aaa
mov
push
das
cmpl
xor
mov
es
orl
out
pop
into
mov
adc
jo
or
adc
and
push
sbb
mov
mov
es
xchg
iret
ds
mov
dec
adc
push
sbb
fcmove
pop
mov
fisttps
push
les
cmp
out
adc
inc
inc
xor
dec
jno
ret
jns
pop
cmp
xchg
bound
scas
cmp
pop
bound
mov
in
xchg
bound
aad
test
and
lea
add
mov
mov
mov
fisubl
nopl
hlt
ljmp
fistpll
rcll
pop
add
or
sub
pop
xor
decl
jae
shrd
mov
fwait
and
mov
or
lea
cmc
adc
inc
xchg
jg
or
push
ret
fadds
cli
fstps
out
push
repnz
pop
cmp
inc
outsl
sbb
mov
mov
sbb
jo
enter
adc
aaa
fisubl
mov
cmp
pusha
lods
xchg
pop
inc
fimuls
adc
insb
imul
sbb
pushf
inc
add
cld
inc
add
add
fs
inc
or
jge
ficoml
sbb
add
mov
cltd
cltd
lock
insl
add
into
xchg
inc
xchg
or
jns
inc
and
sbb
out
insb
jnp
add
sbb
adc
mov
mov
mov
arpl
sbb
sbb
and
sub
sub
sub
jmp
mov
add
fdiv
adc
sub
enter
xor
mov
push
lret
je
loopne
sbb
mov
test
or
push
xor
xchg
jbe
and
add
and
adc
adc
or
out
add
enter
lcall
fmulp
notb
subl
stos
mov
fcmovu
roll
or
cs
dec
push
jge
ds
or
test
sub
dec
fstpt
push
add
mov
mov
test
popf
xchg
jno
int3
jo
sbb
push
inc
mov
mov
fistpl
mov
ja
add
add
mov
jp
lcall
add
es
ljmp
cmp
push
sub
sub
adc
pop
bound
inc
adc
push
cmp
sbb
mov
sub
sub
mov
aaa
pusha
mov
cwtl
mov
int3
xchg
sub
vshufps
insl
cwtl
pusha
xchg
xor
adc
jne
movsb
cmp
inc
psubusb
loope,pt
jmp
inc
orb
jg
adcl
cmp
mov
icebp
sahf
adcb
push
adc
sbb
mov
add
popa
inc
or
popa
fwait
aaa
mov
sbb
mov
cmp
popa
in
lock
in
adc
mov
xchg
fs
je
incl
mov
repz
andl
and
into
inc
es
or
movzwl
mov
or
mov
xchg
cmp
orl
faddl
into
jecxz
pop
sub
inc
nop
andb
pop
adc
in
mov
aam
and
and
mov
cwtl
push
mov
test
push
sub
mov
lods
add
inc
rorl
jne
inc
sbb
cmpsb
dec
test
je
fmull
add
jmp
aaa
fdivrl
jns
mov
mov
xor
lret
xchg
add
xchg
inc
add
in
jb
ret
jge
adc
mov
lret
addl
in
add
outsl
or
hlt
or
dec
inc
cmp
in
xchg
sub
dec
ficomps
loope
test
or
hlt
or
lret
outsl
jg
ficoml
add
mov
loop
xchg
mov
cld
add
and
xor
pop
pop
in
sbb
dec
and
add
testb
jbe
mov
sbb
cmpsb
xchg
adcb
inc
aad
xchg
inc
inc
mull
add
cmp
nop
add
stc
es
pushf
fucom
cmpsl
pop
addb
loope
mov
jbe
test
push
push
sahf
sub
mov
inc
push
cmpsb
mov
mov
les
mov
js
mov
xor
mov
daa
ja
xchg
mov
ja
or
movsb
push
mov
xchg
xchg
add
movsl
add
andl
cmpsb
iret
inc
mov
dec
sbb
roll
es
inc
cmpsw
cmpsl
cmpsl
xchg
test
dec
ja
adc
aam
out
and
adc
mov
xchg
lcall
cmp
test
dec
push
out
sti
cmp
push
add
std
loopne,pn
data16
and
mov
outsb
add
lret
jecxz
inc
pop
and
mov
xor
aaa
movsb
ljmp
mov
inc
push
push
add
out
add
mov
mov
pusha
icebp
nop
jnp
and
mov
xchg
popf
je
insl
pop
imul
sub
xor
sub
inc
pop
push
or
mov
out
insl
lods
and
sbb
jmp
dec
nop
addl
cmp
jmp
add
gs
in
roll
lods
sarb
test
mov
jle
lret
lock
hlt
in
mov
sbb
cwtl
inc
ret
push
add
push
add
mov
cmp
dec
push
pop
das
sbb
out
adc
mov
push
xor
je
jmp
or
adc
or
xor
add
imul
fadds
es
push
and
dec
les
cli
dec
and
xor
mov
mov
insl
movsl
dec
nop
das
pop
sub
sub
lret
jae
dec
and
jno
push
jg
xor
aaa
lcall
adc
sahf
adc
fwait
add
cmp
add
mov
outsl
and
and
or
push
jne
add
inc
add
lock
inc
sbb
xor
loope
xchg
mov
test
xrelease
in
jo
dec
test
cmp
stos
sbb
inc
jnp
sahf
mov
lds
in
lods
xor
inc
adc
xchg
push
outsl
aam
xchg
or
jo
inc
inc
pop
or
adcl
add
cmp
pop
xchg
sbb
loopne
sbbl
call
out
ja
or
pop
inc
lock
push
or
lcall
xchg
pop
out
pop
and
pop
dec
out
rorl
add
sub
fistl
mov
in
cld
roll
hlt
dec
bound
xor
pop
or
movsb
inc
rcrb
xorb
dec
xchg
sarl
movsl
adc
rolb
xchg
adc
enter
jge
mov
push
shrb
sarl
adc
rcrl
lcall
lcall
xchg
push
mov
cmp
or
pop
addl
pop
push
mov
lods
mov
sub
jb
rorl
add
insb
mov
add
sub
mov
push
inc
sbb
xchg
mov
cmp
nop
inc
ret
clc
cmp
mov
and
je
pusha
sub
inc
movsb
push
scas
mov
out
jmp
nop
pop
dec
cld
adc
sbb
mov
sbb
pop
mov
push
add
mov
jb
fisttpll
lahf
xor
dec
outsb
loopne
aaa
in
lret
xchg
xor
jge
jl
in
add
mov
xorl
outsb
clc
decl
add
imul
push
and
out
inc
movsb
or
xchg
orl
gs
sub
roll
mov
mov
lret
mov
mov
lret
pop
push
test
jl
out
fs
cmp
sub
or
es
repz
pop
fs
js
inc
insb
xchg
xchg
popa
mov
push
inc
insb
aam
mov
pop
inc
fsubs
sub
lret
enter
loopne
repnz
jo
incl
in
mov
sub
ret
movsl
mov
pushl
repnz
bound
test
jge
xor
sbb
add
xchg
add
rcll
push
insl
push
cld
nop
cltd
xor
pop
fnstsw
les
inc
add
or
jnp
outsl
dec
cmp
dec
jns
mov
push
pusha
fidivl
push
idivl
add
sbb
cmpsb
mov
stos
inc
adc
lea
pop
push
popa
jb
inc
add
mov
mov
pop
jb
mov
jne
sub
je
add
pop
mov
inc
and
add
fst
sbb
fwait
lcall
aaa
or
mov
nop
inc
mov
xor
fimull
jge
in
cmpb
and
add
pop
add
lea
or
and
xchg
push
repnz
sub
pop
rclb
inc
inc
adc
cmp
jbe
inc
mov
adc
dec
mov
adc
bound
xchg
mov
addl
add
mov
js
mov
popf
jb
pop
jbe
insl
mov
mov
enter
arpl
cmp
jmp
xor
pusha
les
xchg
out
test
add
movsb
cmp
stos
inc
movsl
andl
into
jo
aaa
fistpll
cmp
pop
sbb
shlb
in
jbe
push
inc
add
rorb
pop
cwtl
adc
inc
in
subl
sub
orl
jmp
stos
add
sub
fsubr
adc
inc
adc
and
popf
movsb
push
fcomps
dec
push
pop
addr16
call
and
mov
lock
pop
pop
adc
rcll
psadbw
aad
xor
cwtl
jmp
jnp
mov
and
rol
leave
xor
push
in
aaa
sbbb
in
sarb
and
aaa
mov
pop
and
bound
add
adc
mov
jmp
add
mov
mov
cmpsb
mov
mov
pop
imul
mov
je
adc
out
cltd
mov
je
sbb
pop
pushf
testb
inc
test
cmp
popf
push
xchg
gs
sub
jb
imul
jp
enter
fmull
hlt
push
mov
jo
lea
clc
and
add
and
push
lods
add
add
rorb
orb
sub
sahf
fisttpll
xchg
push
adc
dec
mov
les
loope
push
je
dec
sbb
int
cld
push
jns
mov
or
or
jp
mov
xor
lret
mov
push
sbb
and
add
imulb
pop
mov
mov
fs
pop
jge
pop
pusha
cli
lahf
in
pusha
rolb
jmp
mov
jmp
lock
or
jne
mov
jmp
mov
jmp
mov
jo
je
dec
je
add
jmp
mov
jmp
mov
jmp
fwait
test
mov
and
jmp
or
mov
mov
out
cmc
and
push
inc
jnp
mov
sub
adc
jmp
mov
cmp
dec
add
cmp
pop
inc
ret
push
jb
das
or
je
add
add
xlat
enter
outsl
push
add
pop
xor
or
pop
jo
add
adcl
xor
sbb
iret
into
mov
jns
inc
sbb
mov
pop
dec
add
jbe
add
add
xor
jne
rcrb
pop
or
leave
daa
out
add
push
or
cld
push
pop
xor
sbb
and
repnz
insb
adc
sbb
inc
sbb
cmp
xchg
sbb
xor
out
mov
and
xor
or
call
sub
add
push
jo
xor
mov
xor
push
add
leave
mov
lea
cmp
aam
add
or
pop
or
leave
pop
enter
dec
ja
adc
inc
sbb
or
stc
push
and
imul
str
jns
sbb
popa
or
mov
neg
adc
das
aaa
push
adc
and
add
or
insb
or
incb
add
pop
ss
sbb
push
fsts
lret
jp
dec
or
or
in
push
fcmovbe
cmp
and
pop
sbbb
push
inc
movb
mov
pop
scas
test
jecxz
call
inc
pop
cld
int3
inc
inc
and
add
mov
sbb
inc
in
jp
lock
push
pop
xchg
and
push
mov
xchg
data16
js
les
in
cmp
fsubrs
mov
imul
mov
inc
add
push
sub
add
je
call
push
sub
dec
xchg
cmpl
mov
jbe
add
and
mov
mov
dec
inc
and
addr16
sbb
mov
pop
add
js
pop
movb
xchg
add
push
cmp
and
rorb
jb
mov
aam
jne
pusha
push
sbb
dec
in
es
in
push
icebp
aad
adcb
lret
in
push
outsb
sub
sbb
and
sti
lea
enter
les
movsb
pop
lods
fisttpll
dec
lea
add
push
xchg
pop
inc
mov
cmp
and
mov
cs
incl
lahf
jae
jae
insl
jns
arpl
cs
das
jo
dec
pop
xchg
mov
add
aaa
sbb
lea
dec
sub
sbb
pop
and
add
push
xchg
xchg
dec
or
jo
inc
or
add
dec
jecxz
call
sbb
push
push
adc
cmp
dec
dec
ljmp
sub
sbb
movsb
call
add
or
xorb
mov
mov
adc
and
jmp
scas
or
push
add
xor
push
int
or
orb
xchg
addb
pop
xor
mov
push
and
mov
mov
test
jp
jo
and
cld
and
call
mov
push
xor
loopne
sbbl
fmull
and
fcom
add
fiaddl
nop
inc
mov
xor
fmul
int3
es
or
movsl
enter
popa
in
les
mov
adc
orb
inc
mov
push
stos
addr16
and
in
mov
or
in
sahf
sbb
test
push
cmp
lods
mov
sbb
dec
push
cmp
mov
fdiv
std
rolb
rol
push
pop
dec
xchg
mov
adc
lods
or
cltd
or
xor
xchg
cmp
dec
dec
lods
pop
ds
add
and
cmp
xor
insb
push
add
adc
xchg
movsb
adc
pop
push
adc
in
test
rcr
adc
leave
or
dec
push
shl
aaa
and
jnp
inc
test
loop
orb
pushf
mov
sbb
movsl
sub
or
clc
push
testb
loopne
mov
pushf
xchg
imul
test
mov
inc
mov
fildl
outsl
pop
in
xor
loope
mov
and
fisttpl
and
pop
xor
mov
mulb
xorl
and
aas
push
and
repnz
pop
cwtl
mov
pop
push
add
roll
mov
xchg
nop
mov
les
mov
cmp
test
sbbb
and
hlt
inc
pop
jg
js
mov
repnz
push
mov
iret
roll
insl
push
dec
insb
mov
test
xlat
test
dec
push
stos
mov
sbb
faddl
dec
pop
pop
mov
aas
xlat
pop
ffree
and
lea
mov
pushf
and
inc
and
loop
or
or
lock
js
mov
nop
lea
leave
int3
push
je
jae
dec
cmp
fmull
jb
test
popa
sbbl
scas
dec
inc
scas
and
adc
push
inc
inc
xchg
inc
addb
sbb
inc
nop
mov
pop
cmp
call
adc
sti
cmp
mov
xor
dec
and
shll
loope
inc
lea
xor
add
sub
sub
arpl
xchg
aas
sub
and
and
push
lea
xchg
dec
sahf
sbbl
sbb
pushf
cmp
leave
adc
push
in
mov
out
dec
adc
sbb
stc
sbb
in
je
or
insb
jo
roll
adc
cli
adc
rcll
add
daa
sub
cmpsb
in
call
popa
leave
xchg
add
adc
lods
or
aas
fildl
inc
test
je
insl
and
dec
add
cld
jne
mov
les
mov
dec
push
mov
fsubrl
enter
dec
pop
repnz
lock
test
roll
call
iret
in
cli
in
adc
mov
dec
push
pop
push
fwait
nop
fmull
mov
incb
and
pop
pop
out
bound
addr16
dec
add
stos
lea
inc
xor
mov
pop
ja
cmp
inc
cmp
pop
push
lea
push
shrb
sub
mov
rcl
mov
mov
mov
test
lea
push
or
push
shll
dec
loop
or
xchg
add
or
mov
mov
stos
xor
test
push
or
sub
pushf
sbb
pop
cwtl
mov
and
sbb
dec
dec
and
aaa
nop
scas
dec
outsl
lcall
nop
bound
adc
nop
mov
mov
dec
mov
sbb
test
adc
pushf
add
dec
jecxz
sub
imul
sub
idivl
inc
mov
pop
mov
rcll
add
iret
mov
cwtl
pop
or
insl
or
imul
and
or
lods
push
push
outsl
mov
sti
inc
outsl
cmpsb
and
cmpsb
mov
aad
iret
mov
cs
inc
shll
ror
mov
ffreep
into
mov
and
sti
std
decb
cli
imul
mov
cs
fsubrs
dec
dec
popa
arpl
xor
sub
or
aas
xor
pop
iret
mov
fcomp
push
sbb
roll
adc
push
jne
or
lret
fs
out
scas
fiaddl
jnp
and
and
xor
and
addr16
insl
fisubrl
or
push
fsubl
sub
or
jo
push
sub
or
mov
add
and
sub
psubsb
rolb
ja
mov
iret
ds
mov
push
aas
push
loopne
gs
popa
jo
jae
outsb
je
adc
clc
xor
inc
cmpsl
pop
pop
outsl
arpl
sbb
add
movsb
mov
addb
movsb
hlt
pusha
aas
jne
lret
or
pushf
or
adc
pop
push
dec
dec
nop
mov
and
push
xor
fisttpll
pop
or
mov
and
aaa
sbb
inc
dec
mov
popa
xorl
push
and
gs
sub
mov
jbe
adc
outsb
adc
and
ss
popf
dec
scas
pusha
insb
cmp
adc
stos
and
or
dec
or
inc
push
fcomip
andb
pop
inc
sbb
cwtl
ret
fildl
cld
es
or
pop
cmp
mov
jne
lea
pushl
cmp
sbb
scas
add
bound
addl
and
push
movsb
out
dec
xchg
dec
and
hlt
or
adc
orl
dec
lock
and
mov
add
add
or
scas
scas
push
cli
push
mov
lret
or
push
adc
outsl
jne
mov
xchg
push
pop
pusha
cmp
inc
icebp
inc
lcall
aam
xchg
ss
mov
sub
imul
mov
lods
shr
adc
fstps
mov
adc
pop
inc
mov
xchg
insl
addl
sub
mov
and
mov
lock
sub
in
shlb
fs
add
lcall
cltd
test
sbb
cwtl
addr16
inc
nopl
repz
add
les
arpl
mov
inc
xchg
pop
mov
out
or
push
cltd
pop
sbb
mov
push
pavgb
xor
mov
test
cmp
push
mov
je
jo
pop
xor
repnz
das
xor
add
mov
aam
clc
sti
mov
enter
hlt
fdivrp
mov
push
mov
adc
aam
aaa
lock
xchg
pop
and
mov
dec
rorb
adc
mov
aam
mov
mov
sbb
add
push
and
and
movsb
jns
sub
pop
gs
jl
add
inc
dec
sbb
inc
movsb
sub
sub
sbb
fsubs
cmp
popa
mov
sbb
jmp
pop
add
out
loopne
dec
and
pop
ret
adc
mov
enter
inc
sub
je
lea
adc
unpcklps
das
mov
loop
adc
push
pop
test
adc
pop
add
imul
mov
jnp
mov
inc
pop
inc
dec
pop
and
xor
insl
popa
arpl
add
imul
pop
inc
cmp
xchg
jae
icebp
and
jmp
shlb
ficoml
mov
test
jg
fidivs
sub
aad
jno
mov
out
dec
add
leave
cs
add
fadds
call
jb
jbe
push
jmp
aam
dec
imul
pop
mov
adc
pop
sub
inc
xchg
mov
outsb
cltd
and
cmp
insl
xchg
lods
push
lret
dec
xor
xor
outsb
adc
iret
lods
sbb
insb
es
mov
bound
inc
or
or
cmp
or
dec
imul
mov
popa
pop
add
mov
hlt
pop
jl
fs
or
rorb
les
iret
sub
push
push
and
lock
pop
mov
jbe
xorb
popa
dec
or
dec
mov
in
les
pop
pop
nop
pop
mov
jns
or
dec
cltd
nop
arpl
add
mov
es
movsb
add
repnz
and
add
outsl
add
mov
dec
dec
leave
add
push
cmp
jae
andl
addb
or
mov
sub
test
adc
cmpb
ret
out
fistpl
mov
adc
mov
dec
sti
sarb
and
jnp
dec
cld
fsubrs
mov
hlt
adc
ret
xchg
sub
nop
and
sbb
add
inc
push
pop
into
add
push
pop
add
inc
and
cs
pop
stos
lea
dec
push
dec
inc
pop
jnp
xor
idiv
pushl
inc
xor
aaa
sub
sub
sub
sub
xor
sub
xchg
sbb
inc
inc
jge
xchg
xor
add
jbe
adcl
adc
cs
add
es
rcrl
roll
adcl
movsb
fisubl
add
sahf
daa
imul
mov
adc
test
or
push
cmp
dec
rcl
and
scas
push
sbb
push
mov
out
or
dec
pop
add
ljmp
xchg
loope
mov
clc
push
out
insb
add
ljmp
adc
lds
add
ret
push
mov
in
aas
fcomp
and
inc
dec
sbb
ja
nop
inc
xor
mov
fisubl
pushf
and
add
pop
cmpsb
xor
add
jmp
loop
or
pop
mov
or
adc
add
ret
mov
mov
sbbb
xor
pusha
jp
test
int
sbb
jno
dec
shll
mov
aam
push
sbb
aad
or
sbb
jne
imul
or
bound
or
paddw
pop
dec
inc
cmpsb
in
hlt
sbb
jns
and
out
add
cmp
out
adc
jecxz
jns
pushf
xchg
or
inc
nop
out
xor
repnz
lea
or
xor
xchg
cwtl
pop
out
adc
insl
mov
loop
loopne
arpl
jbe
outsb
sbb
mov
adcl
fmuls
mov
enter
adc
and
dec
or
pop
ret
cmp
xor
mov
mov
cwtl
repnz
cmp
pusha
pushf
xchg
and
add
fs
or
testb
pop
sub
das
jb
or
daa
mov
nop
or
and
pop
bound
popa
mov
pcmpeqw
xor
insb
jmp
pop
sbb
imul
shrb
add
adc
insb
and
adc
aas
rolb
or
cmp
fidivl
out
mov
adc
pusha
scas
dec
rolb
iret
inc
and
aas
adc
sub
sub
fbld
and
jg,pn
mov
out
add
aad
inc
mov
sub
repz
add
dec
scas
iret
pop
sahf
iret
mov
and
adc
mov
and
adc
cmp
dec
dec
orl
and
add
or
xor
loopne
or
inc
sub
sub
lcall
loop
dec
mov
inc
push
in
adc
xorb
xchg
add
aam
push
pushf
adc
cmc
sbb
sbb
arpl
dec
out
adc
fsubs
xchg
or
pop
ret
mov
or
test
adc
or
ds
pop
or
movsb
fwait
push
xchg
mov
add
mov
leave
cmpsl
pop
add
adc
sbb
gs
add
fucomi
aam
arpl
dec
ret
cmc
lock
dec
loop
shrb
push
add
fstps
sub
cmp
insb
push
inc
imull
leave
adc
mov
xor
pop
arpl
jmp
add
mov
pop
jmp
inc
push
nop
adcb
cmp
xchg
add
lock
clc
ret
dec
dec
subl
mov
inc
xchg
sbbl
aam
xor
cmpsl
addr16
ret
mov
inc
je
iret
add
fmul
xor
aad
push
enter
mov
nop
in
cmp
push
pop
leave
out
xchg
push
clc
aam
push
jl
clc
mov
sbb
movsb
test
push
out
out
pop
hlt
mov
mov
sub
les
add
fcomps
int3
ficomps
fbstp
mov
call
out
in
jle
push
push
in
cmp
jmp
cmc
xchg
add
outsb
push
and
dec
xor
sub
ret
ja
das
movl
ja
test
aas
adc
add
sarb
mov
lock
in
mov
mov
and
fnstenv
stos
mov
mov
add
mov
sub
and
adc
or
sub
pop
xor
and
lahf
aaa
xchg
aaa
mov
mov
test
pop
push
or
adc
mov
add
push
nop
sbb
enter
sbb
add
ret
mov
out
lea
mov
pop
xchg
and
mov
cmp
repnz
stos
cmp
cmpsl
add
inc
out
adcb
es
lock
xor
add
ss
push
mov
out
jmp
mov
sub
inc
xchg
mov
cmp
loopne
mov
loop
mov
mov
mov
and
cmp
pusha
jbe
mov
insl
movsl
sub
movsl
add
xchg
add
loope
test
int3
outsl
push
xchg
test
mov
adc
cmp
out
or
andl
fistpl
sbb
sub
cmovns
mov
pop
dec
jbe
testl
in
pop
xor
inc
fisubl
mov
xor
xchg
xor
pop
jle
nop
or
add
fistl
sub
addb
or
aas
sub
and
sbb
inc
out
and
adc
adc
mov
mov
mov
in
sbb
sbbl
ds
mov
cld
pop
movsb
pop
test
rorb
add
pusha
imul
in
scas
fs
add
push
inc
in
rcrl
stos
xchg
ds
push
xchg
or
sbb
sbb
jbe
mov
dec
push
mov
mov
or
lods
popa
loope
sub
neg
or
aaa
dec
adc
idiv
or
mov
fcomp
cmp
flds
movsl
xor
xchg
aaa
and
aam
fmulp
int
aad
test
popf
jb
mov
and
lods
or
inc
in
divl
sbb
jne
mov
sbb
jbe
cs
ret
jle
and
dec
int3
ret
lahf
inc
push
jae
pop
orb
or
add
orb
daa
mov
bound
or
pop
xor
inc
clc
movsb
inc
mov
aas
ja
and
pop
sub
cmpsl
or
or
and
xor
cmpsb
outsl
out
cwtl
nop
imul
pop
sbb
and
lods
jns
in
clts
inc
lock
enter
out
cmpsb
imul
filds
xchg
add
std
pop
jo
mov
pop
cs
icebp
sub
push
aaa
add
jo
or
inc
js
sub
clc
aas
mov
mov
testl
fnstcw
inc
repnz
loop
loope
sub
jb
ficompl
inc
aad
add
lods
out
repnz
imul
dec
sbb
xor
add
notl
push
cmpsl
and
insb
push
sub
mov
dec
shll
mov
xor
imul
call
xor
shrb
inc
xor
add
push
dec
push
xor
test
dec
lock
mov
jno
or
lods
adc
lcall
dec
mov
data16
js
out
enter
int
mov
lock
sub
push
fstps
push
cmp
mov
and
mov
insb
pop
fwait
stc
testl
push
jo
pop
add
andb
lret
mov
insb
push
cmp
pop
pop
pop
mov
pop
fdivs
push
mov
pop
fnstcw
out
push
push
in
mov
shll
les
data16
mov
jo
push
push
push
pop
insb
pop
xor
dec
jae
pop
lea
mov
push
int3
data16
push
je
aam
nop
dec
jae
fisubrl
movsb
jg
cmpsl
push
cmpsl
stos
rcrl
mov
dec
mov
mov
pop
ss
or
fadd
fs
xor
lods
xor
aam
movsb
push
mov
pop
imul
clc
cmp
hlt
idiv
push
enter
insb
xchg
int
push
dec
pop
sbb
sub
gs
les
mov
sbb
pop
mov
nop
push
pusha
push
cmp
ss
pop
mov
test
dec
psubusb
mov
inc
adc
call
lret
cmpsb
mov
push
mov
addb
push
dec
and
mov
lods
xor
inc
jne
cmp
push
int
mov
enter
je
sub
mov
push
int3
dec
ljmp
out
data16
mov
or
insl
lcall
cs
mov
xor
add
jp
cmp
shrb
mov
aas
pop
je
inc
lods
cltd
mov
lods
jl
sahf
inc
push
or
fsubs
int
mov
push
push
push
mov
cmpsb
insl
lcall
push
cld
int
mov
int3
dec
add
int3
dec
pushf
in
fistpl
mov
pusha
dec
pop
xor
pop
imul
clc
inc
xchg
inc
and
lock
rolb
fistpl
push
add
mov
repz
fs
push
pop
fisubrs
fldt
add
pushf
push
es
in
push
ficoms
inc
cmpsb
imul
insl
fidivrs
push
aas
cld
mov
push
lods
cwtl
insb
insb
imul
and
outsl
loopne
push
xor
aam
ficomps
int
push
or
paddusb
jmp
push
clc
push
mov
imul
push
sbb
mov
in
cmp
mov
pop
pop
mov
roll
push
and
push
cwtl
insl
dec
mov
add
shl
mov
sbb
and
in
shl
push
jl
xchg
lret
jbe
dec
push
sbb
in
pop
sub
mov
pop
add
hlt
ds
push
fnstenvs
add
scas
stc
ss
jo
inc
and
push
aam
fldl
les
stos
cwtl
push
cmp
add
mov
ret
push
fdivs
bound
andl
adc
pusha
loop
loopne
mov
mov
add
adc
cli
add
mov
add
push
pop
dec
push
and
pop
dec
mov
and
clc
incl
lret
int3
enter
enter
fcomp
fxch
loopne
jecxz
popa
imul
lods
das
ret
xchg
scas
xchg
and
and
popa
je
xor
mov
ficoml
or
sahf
pop
dec
fiadds
pop
pop
push
push
sbb
aad
jb
loopne
or
int3
fmuls
int
inc
gs
add
jbe
mov
sub
and
jo
or
mov
and
ja
push
js
shll
mov
xor
mov
xor
rcr
loopne
lock
cmpsb
imul
cmpsb
imul
cmpsb
imul
push
cmpsb
orb
adc
in
cwtl
les
fs
mov
push
sbb
sbbl
jb
jae
xchg
dec
jg
punpcklbw
sbbl
repnz
pop
enter
orb
rcrl
and
into
leave
imul
outsl
pop
fisttps
push
add
pop
sbb
data16
fisubrs
sbb
add
scas
or
aam
sub
adc
adc
adc
outsb
lcall
or
ficomps
push
pop
or
add
stc
sub
add
add
add
add
add
fimuls
add
pop
addb
lcall
insl
or
or
sub
add
xchg
xor
inc
cmpsb
imul
imul
dec
shrl
and
push
popf
or
je
add
pop
adc
mov
roll
mov
xor
jmp
cmpsl
pop
jg
dec
pop
add
add
inc
xorb
les
shlb
push
outsl
orb
mov
dec
in
fwait
pop
push
push
adc
and
push
xor
xor
add
je
push
rolb
push
push
imul
fnstsw
adc
and
push
mov
loopne
fsubrl
cmpsb
lret
pop
cs
nopl
int
mov
or
xor
shll
jo
mov
fidivl
dec
shll
push
adc
cwtl
cmpsb
imul
int
in
pop
pop
sbb
push
sbb
push
adc
xor
shll
push
mov
xor
sbb
dec
shll
lock
pop
pop
imul
insb
lcall
fistps
xor
sbb
push
adc
rcll
les
ss
in
or
lahf
orb
shll
dec
enter
dec
sbb
clc
adcb
cmpsb
imul
cmpsb
imul
lcall
sbb
imul
popa
push
mov
or
add
ja
add
push
dec
insl
xor
or
or
pop
punpckhdq
ljmp
stc
loopne
pop
mov
sbb
nop
push
mov
or
in
out
xor
fimull
in
rclb
adc
add
mov
outsl
pop
or
hlt
push
cld
dec
xor
fadds
mov
jg
add
mov
push
inc
pop
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
repnz
pop
add
or
cmp
mov
or
xorb
loope
orb
cmp
test
mov
adc
and
xor
push
xchg
dec
das
mov
cmovle
dec
push
add
enter
add
enter
adc
adc
xor
push
jns
or
sbb
sbb
add
xor
and
rcll
orl
sbb
push
xchg
test
pushf
mov
movsb
mov
xor
cmp
and
sub
aaa
subl
xor
fs
cmpsb
imul
xor
shrl
xor
pusha
shll
mov
dec
aam
lock
cwtl
cmpsb
imul
jne
cmova
fabs
or
push
shrl
imul
add
xchg
add
or
nop
push
cmpsb
imul
js
cmpsb
imul
cmpsb
imul
subl
call
xor
sarl
icebp
shll
out
jo
shll
in
test
dec
shll
mov
mov
xchg
rcrl
or
fisubs
push
mov
test
or
add
push
push
xchg
and
lods
or
add
or
or
iret
add
pop
mov
add
xchg
lcall
add
mov
xchg
test
movl
jo,pn
mov
adc
daa
adc
push
push
loop
in
mov
movsb
add
mov
or
pop
pop
add
outsl
xchg
stc
mov
xor
sti
cld
std
call
xor
sar
add
addb
mov
xchg
lret
fs
adc
cs
push
stos
jg
out
xor
int3
sub
stos
aad
pop
and
insl
fimull
lock
mov
ljmp
pop
mov
gs
or
xchg
add
decb
dec
inc
push
dec
push
inc
xor
xor
rcrb
rolb
lcall
sbb
les
add
pop
jbe
mov
ficoml
fimuls
lock
inc
in
add
shll
cld
and
or
push
adc
cmpsb
imul
imul
imul
cmpsb
imul
imul
imul
cmpsb
imul
mov
xchg
adc
dec
and
dec
shll
xchg
mov
dec
rol
pusha
pushf
int3
jo
shll
in
nop
ss
shll
clc
mov
lcall
mov
imul
imul
dec
shrl
insb
adc
test
xor
shll
int3
cwtl
xor
dec
shll
push
fdivs
fdivr
jo
lcall
in
cmpsb
imul
imul
cmpsb
imul
lcall
movsb
cmpsb
imul
cmpsb
imul
cmpsb
imul
push
shll
and
dec
shll
sub
xor
shll
xor
xor
xor
shrl
js
dec
shll
nop
loopne
dec
shll
pushf
lock
movsb
imul
cmpsb
imul
imul
cmpsb
imul
shll
xorb
xor
and
xor
shll
mov
fs
dec
roll
shll
cwtl
mov
add
aam
movsb
sub
cmpsb
imul
xor
xor
shrl
shll
mov
xor
les
enter
rcll
imul
mov
in
mov
out
call
ret
rorl
lock
sbb
or
jo
add
insb
jle
jl
inc
sbb
daa
xor
xchg
xchg
notl
mov
and
pusha
push
rclb
mov
jg
fsubs
push
in
or
push
in
push
push
imul
cmpsb
imul
imul
lcall
insb
js
imul
addr16
xchg
cmpsb
imul
mov
lcall
sub
dec
shll
inc
push
pop
push
je
cld
adc
cmpsl
xor
inc
inc
adc
push
loopne
outsl
push
clc
add
lcall
xor
dec
imul
insl
lcall
xchg
mov
cmp
neg
push
pop
push
pop
inc
add
repnz
adc
repnz
dec
ljmp
aaa
es
fdivl
mov
fldl
lcall
icebp
loope
jns
cmpsb
roll
imul
stos
inc
xor
or
cmp
add
xor
bswap
aas
incl
pushl
dec
mov
jae
dec
mov
sub
sbb
and
adc
das
out
lcall
fbld
insb
pushf
pop
mov
outsl
lahf
pop
or
cmp
add
xor
or
cmp
pop
pushl
testl
dec
mov
ja
call
adc
sub
sbb
daa
out
call
xlat
test
cwtl
pop
movsb
fs
push
stos
imul
add
xor
push
into
incb
shll
or
cmp
jb
dec
mov
jno
dec
mov
shrb
out
push
fisubs
loope
shrl
lcall
push
scas
outsb
sahf
pop
mov
insl
popf
pop
or
cmp
push
testb
cmp
add
pushl
jp
inc
mov
mov
jns
inc
mov
sub
sbb
es
sub
sbb
and
call
pop
cmpsb
xchg
push
test
gs
push
idivl
lds
push
inc
dec
cmovns
mov
and
mov
bound
mov
sbb
sbb
push
bound
mov
inc
in
mov
pop
push
aaa
sbb
mov
mov
mov
push
aaa
jb
or
daa
mov
bndstx
inc
out
out
out
cmpsl
mov
aaa
sbb
std
mov
popa
dec
mov
xor
aas
lret
xchg
scas
out
aas
stos
adc
shl
aas
stc
decl
shrb
aas
mov
push
loope
pop
stos
jb
push
test
adc
xchg
xchg
and
or
mov
or
mov
lret
adcl
and
xor
sub
sub
sbb
mov
xchg
ja
push
adc
dec
and
xor
cmp
xor
shll
and
push
psrlq
sub
dec
shll
es
xor
shll
cs
dec
shll
das
aaa
ds
fdivs
or
adc
or
mov
ret
lock
xor
or
ss
ret
push
dec
cmp
aaa
das
movsb
imul
inc
cmp
mov
sbb
pop
sbb
sbb
dec
push
adc
and
lcall
xlat
lcall
push
mov
outsb
jns
js
lcall
jo
and
movsb
arpl
adc
and
es
ss
mov
aas
outsb
cmp
shll
repz
mov
dec
jbe
inc
xchg
add
cmp
cmp
test
add
xor
lods
adc
incl
adc
pop
and
xor
inc
mov
adc
xor
xorb
or
call
sbb
sbb
sub
cmp
ret
popa
sbb
incl
test
mov
call
lcall
test
stos
mov
mov
mov
mov
enter
dec
lret
aam
xlat
fcomp
loop
in
out
call
repz
cmc
div
clc
stc
cli
loopne
or
fs
test
pop
or
fisubs
sahf
adc
aas
sbb
adc
or
imul
lock
lret
lock
loope
icebp
push
pop
inc
nop
imul
adc
arpl
and
mov
push
addr16
mov
or
dec
lret
or
push
cwtl
sbb
push
mov
xchg
not
pop
add
pop
pop
lock
pusha
or
mov
pop
out
pop
sbb
pop
shlb
sbb
push
not
ficompl
das
xor
add
mov
pop
pop
mov
pop
pushf
cs
mov
pop
enter
jb
adc
pop
cltd
xor
xor
inc
push
and
roll
dec
sub
cltd
add
popa
je
xchg
sbb
pop
pushl
das
das
dec
sbb
mov
push
enter
push
mov
mov
scas
loope
inc
or
xchg
pop
cltd
inc
xchg
subl
int3
dec
mov
testb
icebp
pop
pop
dec
insb
pop
lea
ret
data16
nop
ja
arpl
lods
inc
movsb
mov
enter
pop
sbb
fcoms
add
ja
popa
pop
sbb
mov
sub
pop
cmp
pop
sbb
sbb
push
push
pop
int3
xchg
lcall
mov
mov
cmpsl
mov
mov
and
in
xchg
in
hlt
rcrb
add
rorb
or
cmp
rorb
or
fs
js
or
or
nop
or
mov
rorb
in
or
das
movsb
sbb
movsb
sbb
movsb
sbb
movsb
sbb
movsb
sbb
lcall
sbb
inc
lcall
inc
lcall
inc
lcall
rcrl
or
sbb
shll
pop
fs
ss
mov
jecxz
xchg
imul
mov
dec
testl
and
mov
pop
insb
inc
pop
add
ss
sbb
aas
stc
in
or
mov
add
mov
add
cltd
ss
dec
adc
add
leave
jbe
in
add
add
sahf
xorl
nop
out
sub
in
mov
xchg
stos
mov
daa
mov
push
inc
out
jae
andl
inc
pop
repnz
enter
inc
pusha
ret
test
push
divl
sbb
es
jl
nop
push
jbe
add
scas
in
add
pusha
ss
shrb
adc
add
rorb
push
inc
jo
fidivrs
jno
imul
js
lahf
jns
adc
xor
jp
daa
jnp
cmp
add
fadds
jge
fistpll
xlat
mov
and
fcmovnb
es
test
daa
pusha
xor
xchg
orb
stos
popf
mov
push
mov
icebp
daa
add
push
push
push
pop
and
dec
imul
fstps
push
sbb
cmp
mov
addr16
imul
cld
or
xor
shrl
sub
dec
pop
mov
outsb
or
daa
fcmovbe
shll
jnp
push
lahf
dec
shrl
push
nop
lods
rclb
clc
or
sbb
cmpsb
imul
cmpsb
imul
imul
imul
cmpsb
imul
mov
in
add
adc
xor
xor
rorl
push
xor
movsb
mov
in
loop
cmpsb
imul
cmpsb
imul
hlt
data16
push
xor
cmpsb
imul
lcall
dec
shll
or
sbb
cmp
pusha
xor
shll
mov
rcl
loopne
add
outsb
push
sub
dec
shll
fs
movsb
fnstenv
lock
cmpsb
imul
imul
cmpsb
imul
and
xor
sarl
pusha
je
dec
shll
in
lcall
sub
push
imul
insb
lcall
and
xor
cmp
sbb
sub
inc
dec
pop
fs
lcall
lods
shll
nop
pushf
test
shll
in
lcall
adc
xor
lcall
test
movsb
mov
aam
lcall
jle
and
imul
imul
sub
and
add
push
nop
in
dec
mov
outsl
sbb
outsb
pop
inc
push
shlb
jo
into
adc
mulb
xor
sahf
and
scas
cmp
xlat
les
push
xor
push
out
add
scas
add
popl
fs
es
pmuludq
insb
adc
sti
nop
lcall
fildl
mov
pop
and
pop
mov
push
adc
or
dec
fldt
dec
pusha
out
push
or
xchg
test
mov
into
push
scas
mov
outsb
push
insl
aad
push
rcl
jle
mov
pusha
xor
lods
mov
pop
fcompl
inc
rolb
jns
jmp
lods
xchg
sbb
aaa
insb
push
cmpsb
push
pushf
inc
pop
cld
in
push
push
lcall
add
cmp
aaa
mov
mov
dec
inc
sahf
in
sbb
data16
dec
pop
test
test
int3
inc
dec
andb
outsb
mov
in
push
jbe
ja
in
out
lods
sbb
aam
je
jbe
pop
inc
call
jle
out
or
sbb
sub
test
sub
les
mov
jmp
inc
lock
inc
push
dec
fdivs
pop
imul
outsb
fadds
pop
outsb
and
sarb
push
dec
insb
lods
mov
ret
jbe
mov
push
rcrb
mov
push
push
xorb
mov
sbb
sub
stos
outsb
jl
ror
nop
cs
pop
repz
add
dec
jbe
pop
js
push
push
or
es
jo
pop
test
lods
jo,pn
mov
es
in
inc
imul
mov
sahf
push
sub
sbb
rcrl
push
sbb
xor
lods
push
pop
fs
push
push
push
inc
lods
pop
inc
inc
and
orb
sbb
fdivr
mov
loopne
xchg
data16
xor
cmp
fcomp
pop
xchg
push
lcall
cmpsb
movsb
pusha
push
rclb
data16
cs
inc
mov
les
cmp
lods
xor
adc
or
je
lods
imul
push
xchg
ss
mov
inc
inc
sub
test
dec
repz
sahf
int3
cmpsb
pushf
push
push
push
add
rorb
add
xchg
adc
sub
or
les
push
fs
dec
adc
pop
ret
insb
imul
mov
into
cmp
mov
es
push
jbe
xchg
xchg
mov
dec
push
pop
push
mov
aas
or
popa
out
ds
push
rorb
data16
test
call
ret
in
inc
mov
sbb
fcoml
cmp
pusha
and
xchg
mov
data16
js
lods
sub
enter
jle
pop
push
stos
jbe
adc
rcrb
dec
mov
into
pop
into
cmp
fadds
pop
imul
loopne
hlt
push
lods
jo
lods
or
nop
outsb
data16
cmp
add
push
or
pop
mov
xor
cmpb
pop
imul
xor
pop
outsb
adc
lods
push
adc
xchg
call
or
jle
out
xor
or
add
and
clc
sahf
mulb
into
mov
test
inc
push
adc
xchg
pop
inc
mov
push
aad
push
inc
lock
adc
in
inc
push
sub
mov
xchg
mov
push
cmp
hlt
cs
cwtl
dec
fcomps
sahf
test
sub
data16
lock
int3
pop
imul
out
push
clc
cs
dec
clc
out
rcl
dec
ficoms
sahf
enter
mov
mov
imulb
aam
mov
mov
mov
into
loopne
push
nop/reserved
fisubrl
pop
jbe
inc
mov
lahf
fidivs
aad
in
cmpsb
inc
jne
push
push
xchg
les
inc
pop
inc
jecxz
pusha
push
push
push
xlat
inc
insl
sub
cwtl
mov
aam
sub
data16
push
hlt
dec
mov
jbe
dec
push
push
pusha
loopne
xchg
adc
sub
jle
push
push
imul
fisubl
jo
add
dec
out
pop
in
lcall
outsb
out
cmpsb
mov
inc
imul
sub
inc
pop
push
mov
or
sbb
sub
push
and
xchg
lcall
push
add
xchg
pushf
mov
push
sub
les
sbb
adc
dec
outsb
push
sbb
out
fadd
sbb
insb
push
call
into
dec
push
test
fsubs
xor
xchg
inc
jbe
mov
or
mov
lods
sbb
shlb
cmp
push
hlt
outsb
out
out
or
sub
mulb
dec
mov
mov
into
dec
stos
sbb
and
inc
cwtl
loopne
xchg
fcmovbe
sahf
dec
push
push
ret
pop
adc
movsb
outsb
mov
mov
mov
fs
imul
push
andb
inc
pop
inc
mov
rcl
int3
mov
mov
cmp
and
into
ss
shll
adc
xchg
clc
out
popa
int
inc
mov
push
add
sub
or
jo
push
sbb
call
xchg
out
pop
push
add
push
pusha
ret
sahf
int3
push
imull
push
into
or
inc
xor
push
andb
ds
jle
xor
push
imul
js
inc
shl
movsb
add
xchg
out
mov
jl
xor
nop
rcrb
inc
jnp
or
clc
inc
xor
sahf
cmp
es
out
adc
adcb
and
popa
lods
push
clc
out
data16
push
adc
fdiv
dec
push
mov
or
inc
push
out
push
cmp
in
sahf
pop
jns
jo,pn
dec
out
out
in
rorl
push
jle
test
imul
xchg
push
add
cmpsb
xor
sub
inc
inc
pop
cwtl
inc
scas
in
outsb
js
mov
ss
mov
negb
outsb
nop
sahf
sub
stos
lea
adc
sub
add
add
add
and
mov
xlat
adc
adc
add
push
xorl
adc
add
add
add
push
dec
xchg
add
add
insl
add
pop
inc
sbb
inc
and
fsubrs
dec
pop
push
and
pop
dec
aaa
push
pop
mov
add
sub
sbb
es
test
push
loop
mov
mov
push
inc
mov
dec
dec
add
lods
mov
mov
inc
dec
push
inc
cmp
insl
out
xchg
pop
push
inc
in
fldenv
push
scas
dec
dec
inc
xchg
push
add
inc
imul
or
cmp
mov
mov
or
push
pop
push
ss
ss
xchg
or
iret
or
xor
pop
jnp
push
push
push
inc
xor
adc
inc
push
xchg
dec
dec
ds
in
pop
push
add
or
dec
sti
dec
imul
jbe
xchg
inc
imul
fiaddl
cs
and
or
inc
sbb
cmp
cmp
sbb
dec
add
dec
dec
outsb
cmpsb
insb
or
push
outsl
push
mov
out
int
adc
xchg
insb
sub
pop
imul
or
dec
and
add
pop
inc
push
popa
addl
mov
nop
gs
mov
in
pop
loopne
nop
aas
clc
jl
shrl
out
iret
cld
ss
pop
sbb
in
xor
xchg
iret
cmp
lock
loopne
in
rolb
add
jae
testb
and
rolb
push
enter
inc
in
pop
or
addb
js
fadds
pop
into
mov
push
mov
shrb
mov
psubb
lods
jg
add
pop
out
ss
mov
out
cmp
push
ret
or
lock
pop
cs
pop
clc
paddb
aas
popa
sbb
out
push
cs
xchg
jle
andb
xor
pushl
add
std
cmp
sti
jo
add
jl
imul
jbe
cmpsb
or
sbbb
push
js
lret
jo
xlat
jb
fdivl
pop
lock
and
aas
lahf
pop
xor
int3
in
lods
or
push
cwtl
pop
int
dec
sahf
xor
jg
add
decl
decl
out
iret
xchg
dec
mov
or
pop
and
cmp
mov
push
ds
pop
outsb
or
aaa
xchg
lret
cmpsb
jns
std
clc
lock
aas
rcrb
in
lret
es
pop
mov
outsb
es
jecxz
push
or
lahf
mov
loopne
pop
sbb
sub
addb
push
insb
xchg
fcomp
push
cs
jle
in
adc
shll
push
mov
push
in
les
test
adc
aas
push
pop
mov
mov
ds
dec
in
inc
or
pop
cld
push
push
stos
leave
in
push
fsubrl
aaa
inc
push
insl
add
push
push
jo,pn
cmp
les
iret
inc
jb
jle
jl
cmp
sbb
push
cs
lret
in
add
inc
add
inc
rcll
pusha
xor
sbb
push
sbb
fisttpll
sbb
cmpsl
out
push
loopne
je
ret
roll
mov
xor
jl
sbb
out
jb
pop
push
sbb
or
test
and
xor
xchg
add
or
cs
cmpsl
push
sbb
xor
gs
pushf
sub
cmpsl
push
arpl
and
dec
jle
lock
lods
insl
sub
cmovbe
add
inc
pop
lea
push
push
bound
nop
xor
aaa
push
push
sysret
enter
incb
incl
ss
aad
cmpsl
pop
rolb
sbb
xchg
aam
sbbb
adc
fldl
cld
cmp
pop
aas
cmpsl
pop
pop
scas
fisubs
cld
add
pop
or
imul
aas
jne
bnd
outsb
push
and
add
add
adc
loope
add
imul
or
add
rolb
and
frstor
add
xor
add
mov
mov
adc
daa
sbb
mov
fnstcw
repz
and
cs
clc
xor
and
or
push
adc
cmp
clc
dec
push
outsb
mov
movb
mov
lret
adc
jbe
shlb
push
sbb
mov
dec
addl
mov
add
es
mov
push
hlt
sbb
incl
push
and
jb
lahf
adc
in
xor
cmp
nop
and
mov
xor
and
lods
pop
daa
inc
push
movsl
fistpll
sub
aas
push
xor
addr16
cmp
mov
sub
nop
mov
aas
js
dec
and
insb
iret
out
pop
push
lds
icebp
fnsave
push
cmp
jo
repz
mov
pop
push
mov
mov
cmp
push
das
insb
mov
xlat
push
lret
push
and
mov
jbe
push
mov
or
push
daa
loop
insb
cmp
push
clc
repz
push
addr16
imul
clc
mov
push
aas
xchg
inc
inc
inc
or
ja
hlt
xorb
daa
or
daa
daa
inc
aad
sbb
pop
popf
push
pop
dec
dec
pop
daa
mov
sbb
xchg
dec
out
in
dec
push
and
push
mov
or
inc
add
add
clc
daa
add
jbe
nop
jecxz
add
insl
fcmovb
sahf
pop
repz
or
mov
aas
insl
add
test
fisttps
ss
outsl
stos
rolb
ds
shll
xor
es
mov
add
pop
arpl
cmp
lahf
cmp
add
out
fs
sbb
push
mov
daa
mov
data16
es
lret
jmp
fisttpl
ja
lcall
mov
add
jle
xor
jl
ret
repz
xchg
mov
xor
xor
inc
push
xor
xor
fiaddl
movsb
sub
pop
repz
cmp
cld
xor
pop
fnstsw
arpl
aas
cs
bound
repnz
inc
in
push
inc
sub
popf
mov
out
push
xor
rcll
fldenv
push
sub
fucomp
lock
je
stos
inc
push
shll
fldt
out
push
inc
mov
and
inc
mov
call
stos
sub
pop
lock
loope
jmp
dec
push
pop
cmpsb
push
dec
xchg
pop
mov
daa
subl
adc
xlat
or
mov
xchg
ret
lret
mov
adc
lea
or
sub
cmp
sbb
arpl
push
xchg
sbb
sbb
out
lods
es
daa
cltd
jno
push
jl
and
mov
or
sbb
daa
fcomps
ficoml
daa
dec
xor
dec
xor
flds
dec
daa
dec
daa
xlat
out
mov
dec
jne
dec
sarb
dec
or
push
rorb
addb
xchg
or
clc
lahf
mov
sarb
lock
cltd
cltd
jmp
cltd
cltd
and
push
jne
out
sbb
rclb
daa
repz
xor
jno
aaa
mov
or
dec
sbb
push
fadd
sub
push
sbb
outsl
inc
push
shll
pop
daa
cmp
add
movsb
das
aaa
push
xchg
mov
lods
adc
popf
pushl
inc
popa
and
cmp
add
and
cmp
ja
imul
inc
cmp
jne
mov
or
daa
fcmovnbe
or
mov
aaa
into
pop
imul
inc
cltd
or
add
cltd
stos
sub
xlat
sub
mov
mov
push
ja
les
push
and
lds
sbb
aaa
outsb
clc
fdivl
push
push
mov
push
dec
andb
xchg
add
cmp
mov
xchg
and
inc
and
push
and
inc
add
or
adc
pop
add
int3
in
arpl
xchg
or
jae
adc
jo
pop
push
pop
jg
and
xchg
js
push
add
lds
data16
nop
vmread
or
ja
or
sti
mov
or
repz
or
or
shlb
mov
or
mov
mov
int3
ud2
jnp
mov
mov
iret
add
cmp
adc
and
lock
add
push
mov
sbb
movq
mov
insb
div
testl
add
in
push
out
add
aas
mov
xchg
add
incl
mov
aas
jo
add
imul
ja
inc
mov
mov
add
cvtps2pi
fadds
mov
pop
cld
int3
iret
popl
or
js
arpl
jo
push
push
or
js,pt
jo
or
lods
mov
pop
xor
cmpl
mov
aaa
dec
dec
dec
fs
les
adc
adc
and
add
daa
and
adcl
daa
popf
xor
loope
mov
out
xor
cld
jg
outsb
add
js
xor
pop
mov
lock
cmp
call
add
movb
pop
or
add
dec
pusha
mov
stos
iret
pop
add
jo
frstor
push
add
aas
xchg
mov
mov
sbb
fsubs
ffreep
push
pop
les
add
mov
add
std
lds
aad
sbb
les
inc
addb
mov
lahf
roll
sub
popl
fadds
mov
clc
incl
jnp
mov
add
add
arpl
repz
popl
mov
in
incl
mov
mov
push
fwait
dec
punpckhbw
or
add
orb
push
add
nop
push
add
add
addb
popa
dec
jle
lret
add
mov
es
add
push
punpckhbw
xlat
mov
imul
inc
jnp
add
pop
iret
andb
mov
push
jbe
test
in
pop
data16
xchg
fimull
ret
inc
xchg
jbe
lcall
dec
pop
insl
ja
mov
ficoms
xor
sub
and
mov
add
sbb
adc
lods
push
fs
push
xchg
push
push
sbb
fiaddl
jo
and
into
or
js
mov
jb
bnd
sahf
pop
adc
xor
xor
cmp
imul
addb
data16
xor
mov
inc
insl
jae
dec
outsl
sub
jo
imul
sub
xlat
push
pop
and
mov
pop
sbb
outsb
or
mov
xlat
pusha
aas
mov
xchg
add
xlat
inc
mov
and
xchg
lock
xor
inc
out
xchg
push
out
sbb
push
mov
xchg
pop
jmp
sub
scas
jne
loopne
dec
scas
push
dec
add
sub
inc
gs
insb
mov
lock
mov
fs
inc
and
push
jbe
jb
daa
bound
push
jns
mov
subl
fadds
xchg
lahf
int
insl
sbb
scas
dec
jne
xchg
jnp
mov
mov
mov
ss
es
sub
pusha
pusha
pop
mov
into
jle
sbb
lods
cwtl
test
jne
je
psllw
aaa
mov
imulb
pop
insl
outsb
mov
into
inc
testb
push
and
in
mov
jl,pt
push
aas
sbb
pusha
add
cmp
push
or
bound
jae
or
pop
sbb
push
pop
or
adcb
jnp
xchg
inc
xor
out
add
ljmp
and
lcall
pop
add
aas
push
je
add
add
add
cmpsb
outsl
repz
push
jns
loopne
push
mov
dec
jns
andl
push
jae
push
imul
jnp
ss
push
jg
outsb
or
dec
push
out
inc
or
adc
test
dec
cmp
rclb
scas
je
popa
inc
rol
push
cs
jmp
jb
mov
pop
push
fwait
jae
js
shlb
stos
cmp
jecxz
mov
push
out
mov
mov
or
inc
mov
or
lret
outsb
push
sub
push
dec
xchg
jecxz
sub
repz
mov
fildl
addb
fiaddl
jmp
or
je
sub
jb
gs
loopne
add
mov
and
sub
push
roll
jno
sbb
sub
push
pop
inc
mov
sub
mov
lea
sub
jp
sahf
fs
and
sbb
sub
imul
and
dec
add
pop
adc
and
mov
cmp
fs
inc
stos
es
cmp
or
adcl
mov
dec
inc
sti
inc
sbb
add
push
je
roll
ja
pop
adc
sti
xor
push
and
leave
push
inc
fs
xlat
dec
fildl
xor
mov
dec
adc
push
pop
imul
or
je
inc
jo
xor
aas
mov
mov
cmp
aaa
dec
or
fidivrl
mov
pop
dec
sub
pushl
popa
xchg
sub
cmp
decl
xor
test
inc
mov
or
push
xor
mov
sarb
pop
xor
mov
inc
adc
dec
and
xchg
mov
rcll
pop
xor
pusha
sbb
adc
test
push
mov
xchg
add
sub
inc
inc
or
jbe
cwtl
pop
out
dec
mov
xchg
xor
push
jne
pop
stos
jp
push
and
insb
stos
jne
imul
lcall
jo
pop
and
aad
xlat
das
adc
lahf
jo
or
lds
or
nop
dec
cmpsw
bound
ss
mov
rcr
xor
push
and
inc
add
jp
movl
or
xor
mov
and
lods
sbb
cmp
stos
or
mov
or
pop
add
or
xchg
jb
pop
andb
jecxz
adc
lods
das
fbstp
adc
pop
sbbl
mov
adcb
cmp
sub
nop
loop
pop
xchg
inc
dec
push
iret
rorb
loopne
mov
orb
or
fs
adc
je
je
cli
stos
ja
int3
add
jbe
push
or
dec
bound
dec
or
andl
test
pushaw
je
or
mov
cmp
inc
mov
dec
mov
addr16
outsb
insl
or
xchg
das
push
or
je
xchg
stos
adc
xor
shll
pop
cmp
js
dec
mov
inc
mov
mov
or
push
or
adc
das
pusha
rclb
fisttpl
in
aaa
inc
sbb
imul
jo
sub
jnp
inc
pop
jne
inc
or
loop
xorl
mulb
comiss
mov
nop
shll
jno
outsl
push
pushf
imul
pop
or
mov
pop
imul
adc
data16
jbe
mov
dec
push
rcl
jo
xchg
sbb
outsl
xchg
inc
movl
mov
les
and
adc
push
jmp
nop
sbb
inc
or
jnp
imul
inc
sub
sbb
adc
jae
mov
dec
or
inc
or
push
or
pop
xor
lds
adc
ret
dec
jno
jne
mov
or
sar
mov
imul
add
or
inc
dec
and
or
pop
and
or
insl
mov
out
push
dec
dec
add
dec
rcl
popa
scas
pop
imul
popa
xchg
fsubrl
push
mov
add
sub
mov
mov
or
imul
add
push
das
mov
adc
pop
mov
fsubrs
add
dec
inc
dec
jb
mov
xchg
sub
push
xlat
sub
fwait
lret
insb
daa
psrad
adc
mov
cmp
push
xor
xor
jecxz
bound
adc
inc
rolb
insl
daa
cmp
xor
fisubs
insl
sbb
jp
pop
cmp
push
js
push
inc
outsb
inc
sub
sub
push
adc
ds
add
pop
mov
xchg
push
dec
jbe
sbb
push
icebp
and
cmp
imul
lds
mov
add
pop
les
push
push
subb
adc
add
dec
es
jnp
insl
add
pop
push
fisubrl
faddp
mov
push
cmp
jo
nop
jbe
jno
stos
je
cmp
ret
inc
scas
outsl
adc
rcrl
dec
into
xor
mov
lahf
out
outsl
sbb
jmp
adc
pop
lea
jbe
repz
mov
out
loopne
adc
lret
adc
add
movsb
mov
pop
jo
push
ja
imul
es
sub
or
repz
pop
mov
insb
dec
out
insb
fucomi
xor
push
neg
push
xor
sbb
insb
xchg
mov
data16
cs
dec
fwait
inc
ret
dec
sub
jp
adc
add
das
inc
jo
adc
adc
dec
add
repz
dec
movsb
mov
outsl
test
and
addr16
dec
inc
dec
cmp
jbe,pn
outsl
jp
pop
test
adc
cwtl
mov
imul
mov
push
das
loop
push
push
loope
or
insl
and
xlat
gs
mov
push
divb
sbb
out
jbe
add
add
adc
fwait
pop
pop
add
fisubrl
out
sub
ffree
jbe
lahf
inc
es
leave
add
dec
jae
mov
add
inc
dec
mov
sub
pop
and
cmp
sarb
fsubrs
stos
pusha
xor
stos
fisttpll
scas
jbe
or
aaa
outsb
fildll
sub
outsb
in
xor
mov
inc
or
add
stos
rclb
arpl
cmp
pop
cmp
fs
dec
inc
mov
sbbb
push
push
or
jecxz
xor
xor
addl
xlat
lods
add
cs
insb
jnp
movsb
or
and
add
inc
mov
and
pusha
adc
shlb
or
addr16
and
mov
mov
iret
sbb
lods
dec
mov
inc
mov
add
popa
xlat
jg
push
cs
mov
inc
mov
jmp
fcmovnu
mov
mov
stos
xchg
adc
outsl
and
mov
mov
fwait
orb
das
outsl
and
inc
inc
imul
repnz
ret
cmp
mov
and
cmp
repnz
push
rcl
adc
and
and
mov
sub
xor
repz
aad
js
push
fistps
subb
ja
fimull
lret
adc
popa
and
push
aad
test
xchg
testl
sbb
aam
mov
ja
rcrl
pop
dec
sub
cmp
stos
xchg
ret
adc
jb
adc
orb
inc
imull
rcrl
cmp
js
fistpl
fistps
xlat
cmpsb
adcl
mov
sub
outsl
xchg
xor
jno
ljmp
push
push
mov
jg
push
test
mov
adc
and
sbb
int
jb
shlb
ret
insl
add
ljmp
mov
data16
sbb
sub
sub
jae
or
adcb
les
loop
jecxz
and
push
ljmp
lret
lea
pusha
lret
mov
adc
arpl
inc
pop
xchg
or
pop
xor
xor
sbb
rorl
lea
mov
push
popa
dec
fistl
popa
mov
imul
into
insl
adc
inc
ljmp
sbb
stos
inc
adc
cmp
pop
or
add
push
sbb
inc
xor
add
addl
mov
fs
outsl
shll
add
adc
adc
adc
fsubrl
push
and
inc
loop
sub
daa
lds
jb
and
dec
insb
pop
fwait
xor
cmp
cs
sbb
push
dec
iret
inc
out
inc
pop
xor
cmp
jle
jne
and
push
and
ret
or
jbe
pop
sbb
push
imul
adc
sbb
rcll
arpl
mov
mov
mov
or
popa
cmpsl
stos
and
arpl
and
inc
dec
and
add
jns
jae
pusha
adc
push
cvtps2pd
notb
pushf
and
andl
push
and
insb
mov
lahf
insl
punpcklbw
xor
fistl
pop
je
push
sbb
or
icebp
pop
pop
cs
jb
cmc
ss
cmpl
into
inc
stos
mov
jns
cmpsl
scas
or
bswap
fildl
cwtl
push
shrb
push
sbb
leave
les
in
mov
pop
lods
test
pop
stos
push
imul
pop
imul
push
sbb
clts
sub
mov
add
testl
pop
jb
pop
test
testl
sbb
pop
jnp
jmp
arpl
aaa
mov
inc
xor
addb
pop
sub
and
xor
jae
mov
sub
loop
fdivr
stos
push
cmpsl
cmp
je
add
jns
sbbl
mov
ret
pop
addl
adc
lds
addr16
pop
inc
pusha
xchg
leave
adc
pop
inc
test
pop
inc
sbb
sbb
aaa
or
mov
dec
mov
or
push
shll
push
push
jno
popa
ret
inc
xchg
imul
xlat
ret
pop
push
addr16
loopne
inc
jmp
xchg
inc
push
push
xor
cwtl
andl
sbb
mov
mov
mov
mov
xor
ds
xchg
xor
jae
sahf
pop
cmpsl
ja
and
movsb
push
inc
dec
sti
sbb
mov
addb
in
lea
xor
pop
adc
out
cs
es
pop
cmp
popa
repz
jp
inc
lcall
ja
addr16
xor
xchg
orb
add
mov
iret
outsb
arpl
mov
add
push
push
and
or
jp
pop
imul
xchg
mov
mov
push
sub
push
popl
ret
add
xorl
outsb
test
fsubrl
dec
xor
add
xchg
inc
mov
test
jmp
popa
daa
in
push
dec
decb
dec
jg
pop
push
xor
mov
mov
mov
sub
ss
fwait
cmp
dec
iret
add
xchg
mov
xchg
push
mov
fwait
sub
cs
ss
push
jae
mov
ds
scas
out
pop
ret
sbb
xor
and
test
outsl
xchg
and
movsl
mov
imul
stos
add
adcb
mov
loopne
fsubrl
xchg
loop
or
push
cmpsb
jg
mov
xor
stos
push
fmuls
add
or
bound
xor
or
mov
adc
addr16
sbb
ret
or
bound
shr
inc
cs
push
sub
dec
stos
fs
fiaddl
and
add
xlat
sbb
pop
push
adcb
prefetch
or
push
fisttps
or
addr16
aad
lahf
push
or
inc
imul
cmovo
xchg
cmp
shll
shrb
xchg
mov
jno
das
xor
mov
shrb
push
mov
jo
sahf
fnstsw
mov
jg
lods
push
mov
mov
mov
or
inc
dec
or
mov
xor
mov
insl
call
push
adc
push
push
sub
iret
sub
mov
jg
push
aam
xor
lods
pop
js
ficompl
or
mov
mov
or
push
or
push
push
out
jmp
cmpsb
cs
inc
jae
mov
inc
inc
mov
sub
pop
jne
jg
inc
movsb
mov
jecxz
leave
xchg
or
inc
adc
sub
sbb
lods
das
inc
cmpsl
jo
push
out
push
cmp
sti
bound
push
dec
repz
cmpsb
adc
or
rcl
das
add
and
mov
mov
mov
jecxz
sbb
rcrl
pop
ljmp
stos
mov
aam
mov
pop
adc
sub
adc
fwait
mov
pop
out
adc
or
cmp
bound
pusha
add
jnp
xorl
sub
adc
lret
out
mov
xor
mov
pop
lods
pop
inc
xchg
adc
xor
imul
cmpsb
mov
fstl
popa
movlps
pop
pop
insb
and
xchg
aam
or
mov
into
cmp
and
push
sbb
es
add
add
mov
add
mov
jbe
data16
jecxz
into
outsb
adc
jb
dec
jbe
adcl
fstl
adcb
out
outsb
rolb
cli
push
mov
xor
push
imul
das
mov
push
add
sub
add
fisubrl
scas
pop
pop
xor
es
jno
and
adc
dec
add
and
inc
rcr
out
cli
add
push
inc
push
loope
or
sbb
jns
sub
popa
mov
test
jp
fidivl
insb
cmp
and
or
sub
pop
les
or
xor
add
stos
pusha
inc
imul
jae
adc
add
scas
cmpsl
adc
jp
mov
sub
dec
mov
adc
xchg
cmpb
push
roll
loopne
outsl
jo
push
push
into
outsb
and
aas
sub
push
adc
adc
jnp
and
repz
xchg
pusha
xlat
stos
sub
sbb
pop
adc
mov
xchg
or
sub
pop
insb
xchg
pop
sub
pop
mov
mov
sbb
inc
imul
cltd
mov
jbe
imul
and
and
out
sub
pop
mov
fs
dec
fsubp
or
aam
xor
inc
or
push
jo
inc
mov
push
sbb
jp
sub
in
jbe
inc
mov
dec
out
and
insl
iret
imul
mov
ss
dec
inc
adc
push
dec
dec
jg
mov
je
fnstenv
scas
push
inc
sti
sub
lods
pop
bswap
cmp
and
stos
sbb
decl
or
mov
pop
jo
jg
pop
adc
bound
mov
andw
xchg
mov
or
daa
xlat
xor
jecxz
pop
movl
jno
or
push
and
mov
icebp
test
inc
aaa
or
mov
fbstp
shll
inc
xchg
daa
stos
sub
iret
aaa
lds
lret
punpcklbw
test
fiaddl
lret
adc
sbb
out
sub
or
pop
mov
andl
mov
mov
adc
movsb
les
or
adc
mov
and
sub
and
pop
dec
pusha
mov
sub
mov
lods
outsb
lods
cmpsl
cmpsl
sbb
fiaddl
dec
pushf
jnp
dec
sahf
xor
pushf
subb
movsl
mov
hlt
or
cmpl
push
pop
fwait
ja
xor
addl
scas
inc
xor
and
sub
jmp
nop
fcmovb
add
sbb
adc
pop
xchg
adcb
fmul
daa
imul
aaa
lahf
ja
addl
inc
xor
inc
inc
ja
push
insl
or
dec
insl
outsl
sbb
mov
cmpsb
scas
adc
mov
dec
lods
push
sbb
jno
sbb
pop
pop
sub
adc
and
sti
push
ja
pushf
scas
sbb
xor
arpl
mov
call
rcll
test
xchg
outsl
cmpsb
adcl
push
cmpsl
add
jp
sbb
imul
test
repz
ret
cmp
mov
ret
and
pusha
push
lret
inc
adc
test
pop
add
pop
add
lods
pop
xchg
xor
xor
xchg
sbb
push
cmp
popa
cmp
pop
pop
addr16
adc
iret
shrb
pop
scas
pop
popa
pop
shrl
pop
inc
stos
fsubrs
xor
xor
dec
ljmp
push
shl
out
push
or
sub
mov
inc
dec
mov
mov
out
idiv
xchg
mov
jo
mov
pop
dec
push
inc
add
out
and
add
inc
shlb
add
push
mov
xor
and
adc
insl
ret
addb
inc
outsb
daa
push
jo
pop
add
inc
or
pop
ret
xor
imul
scas
fmuls
mov
sub
shl
nop
imul
daa
adc
push
cmpsl
push
test
adc
push
pop
or
insl
test
push
or
and
or
cmp
push
ret
loop
test
dec
push
fimuls
inc
pop
hlt
aam
out
mov
jp
pop
xchg
int
popa
pop
or
fdivs
jbe
and
jbe
iret
inc
and
imul
mov
outsl
pop
push
addr16
decb
adc
sbb
dec
dec
rcr
jae
jne
out
mov
add
pop
jle,pt
inc
ret
sub
loop
adc
fadds
mov
jae
push
pop
subl
add
mov
push
add
loop
xchg
fstpt
jmp
ficoml
sbb
mov
pop
cmp
adc
pop
xchg
mov
add
sti
les
mov
jbe
aad
sbb
xlat
sub
jnp
pop
es
push
dec
adc
dec
adc
lea
pushf
xor
jecxz
mov
arpl
sbbb
push
adc
dec
and
out
scas
xlat
lcall
les
pusha
fnsave
or
pop
pop
ja
jp
mov
pop
push
or
sahf
sub
popa
sub
ljmp
pop
xor
pop
add
pop
sub
jo
and
add
dec
sbb
test
mov
and
xorl
adc
dec
jmp
mov
lahf
push
mov
xor
push
push
and
mov
adc
ljmp
push
lahf
pusha
movsb
xor
adc
fcmovb
inc
arpl
jg
ficoml
push
addr16
scas
fs
jnp
sbb
and
sub
or
adc
iret
je
mov
sbb
data16
pop
adc
mov
repz
cmp
add
push
out
sbb
adc
add
sub
xchg
sti
adc
cmpsb
loopne
pop
dec
stos
test
bound
imul
xor
pop
insl
fcoml
fisttpl
or
inc
test
loopne
jb
jg
mov
pop
pop
pop
dec
mov
pop
dec
test
add
addb
lcall
sub
bound
or
add
or
mov
push
and
push
jmp
lds
dec
fisubs
inc
pop
cli
lahf
adc
bound
sub
movsb
or
add
sub
insl
xor
push
fiadds
push
adc
popa
jno
lcall
sub
sbb
mov
and
pop
pop
or
dec
inc
ljmp
movsb
aaa
popw
and
dec
push
lret
sub
jae
arpl
push
cmpsl
xchg
and
mov
pop
jne
sti
addr16
ljmp
add
inc
insb
int
jg
dec
insl
idivb
adc
ss
xor
arpl
orl
adc
mov
mov
xchg
les
adcl
push
sbb
or
pop
add
nop
rorl
xchg
int
shrl
push
jg
push
adc
lret
adc
adcl
sub
and
pop
push
testl
cmp
aaa
mov
pop
fwait
cmp
out
or
push
sbb
xlat
fs
imul
cmp
sbb
stc
cmp
cmpsb
cmp
popf
pop
mov
dec
push
and
pop
mov
adc
push
push
dec
mov
mov
loop
popf
bound
xor
mov
imull
add
push
inc
ret
dec
fildl
push
lcall
add
bound
xor
pop
pop
xorb
pop
mov
sub
cmp
dec
push
dec
dec
add
push
jb
out
imul
repz
push
push
jo
aam
add
adc
mov
xlat
push
ljmp
adc
insl
or
sub
adc
pop
out
andl
jp
jo
sub
cmc
and
sbb
push
push
cmp
dec
sub
push
mov
mov
push
xor
adc
mov
or
fcoms
mov
repnz
jo
inc
xchg
mull
cmp
jbe
fwait
fwait
push
icebp
sahf
xchg
int
xor
dec
sbb
data16
inc
fwait
xchg
sub
jbe
sbb
inc
insb
mov
adc
sub
inc
cwtl
sub
adc
sbb
fcomi
pusha
jns
in
push
addr16
insb
or
xorl
adc
sub
ret
out
push
push
js
adc
shlb
or
push
pop
dec
pop
xchg
insb
push
adc
es
loopne
inc
aam
rcll
inc
aaa
pop
push
lret
sub
jno
fldenv
adc
adc
imul
gs
cmp
and
imul
dec
dec
sbb
insl
imul
add
mov
aam
jns
cs
jbe
dec
dec
jge
ficomps
lods
or
push
in
test
cmp
out
adc
repnz
jae
cmp
push
jmp
adcl
sarb
xor
fdivs
adc
cmpsb
dec
inc
xchg
sbb
inc
cmp
mov
pop
jbe
test
adc
rcrl
outsl
and
decb
lods
jo
adc
cltd
adc
lea
add
adc
cmp
pop
and
inc
cmp
or
sbb
das
lcall
add
addl
les
mov
mov
sub
das
adc
add
push
inc
andb
mov
add
or
pusha
pop
arpl
pop
mov
adc
pop
push
popa
data16
fisubs
and
pop
in
fwait
mov
mov
push
js
ss
sbb
lahf
push
inc
test
and
leave
push
xlat
adc
pop
dec
addr16
xchg
mov
repnz
xor
daa
mov
or
lret
xchg
xor
push
ficomps
sub
push
cmpsl
pusha
loopne
dec
aad
sbb
lock
filds
lret
xor
std
adc
and
std
jp
adc
adc
adc
fimuls
rcrl
test
sub
or
xchg
mov
adc
adc
mov
in
xchg
adc
ficoms
adc
sub
or
xor
aaa
inc
fimuls
sarl
dec
in
ret
sbb
popl
cmp
ficoms
pusha
dec
mov
jno
inc
je
or
divl
sahf
mov
sbb
sbb
sbb
pop
jne
popa
or
pop
mov
sbb
outsl
subb
pop
fsubp
stos
adc
xor
aaa
mov
and
dec
add
xor
jge
fadds
mov
aad
mov
pop
inc
out
push
mov
sahf
or
sub
lds
into
rorl
xlat
cmpsl
lahf
push
in
push
mov
lods
sub
addr16
pop
js
lods
adc
fildl
sbb
cmpsb
add
fistl
icebp
in
adc
sbb
cmpl
daa
cld
and
sbb
sbb
notl
daa
pop
adc
mov
rcll
sub
xchg
imul
jo
js
enter
push
js
jb
push
add
fsub
outsb
dec
add
gs
in
jns
pop
jne
scas
adc
fiadds
aam
out
in
lret
lock
sti
pop
lods
rcrb
mov
jle
fnstcw
fists
psllw
adc
add
add
jae
test
push
test
or
and
push
add
add
cs
cmp
pop
daa
movsb
mov
orl
jecxz
mov
pop
setp
adc
or
addr16
push
or
add
xor
pop
push
xchg
jge
cmc
or
jp
mov
and
aad
inc
mov
or
sti
sbb
mov
or
movl
insl
or
or
nop
gs
daa
pop
mov
mov
pop
mov
pop
mov
js
pusha
or
or
add
or
add
add
pop
movsb
add
lea
or
sub
adc
adc
add
ja
push
push
div
outsb
or
sbb
lea
inc
stc
outsl
and
push
xchg
cli
fnstcw
mov
cld
xchg
addr16
mov
mov
fs
push
stos
clc
imul
and
adcl
lds
mov
lea
fucomp
aas
cmp
hlt
mov
fcmovu
cli
leave
mov
in
repz
std
popf
cli
lods
inc
fs
call
jecxz
jmp
lret
xchg
lcall
fstp
int
into
in
icebp
clc
sti
cmc
ljmp
das
call
xchg
pushf
cmpsb
out
call
mov
jecxz
ret
mov
shl
div
sti
adc
int3
rcl
repz
add
cmp
cmp
in
xor
movsl
scas
mov
push
mov
test
iret
shrb
dec
jne
sbbb
mov
and
fs
mov
in
jg
stc
xlat
iret
int
scas
popf
out
push
out
dec
xchg
pop
add
add
mov
mov
das
lret
mov
jmp
jecxz
pop
add
aad
and
stos
in
sub
cmc
jle
test
ljmp
test
rcl
in
jmp
sti
ja
mov
jg
xchg
mov
in
icebp
es
mov
mov
movsl
mov
push
inc
cltd
incl
jae
push
mov
lcall
scas
cmc
mov
bound
mov
idiv
incl
jecxz
aam
cs
mov
fwait
in
call
mov
call
shl
in
dec
add
fcmovu
lret
jnp
dec
fwait
mov
cli
adc
call
mov
arpl
pop
pushf
pop
push
mov
add
call
inc
jl
inc
xlat
adc
adc
shll
lea
dec
xchg
std
xchg
jg,pt
incl
iret
rcl
sub
cli
stc
stc
pop
cmp
add
push
gs
mov
inc
mov
leave
out
cmp
gs
xchg
std
stc
sti
clc
cli
lock
mov
icebp
out
out
pop
icebp
repnz
adc
add
ja
imul
in
out
add
pop
sbb
ljmp
push
add
divl
testl
icebp
test
jnp
jmp
mov
jno
mull
movsbl
out
cli
sti
cld
loop
ljmp
hlt
out
repnz
clc
jmp
out
push
call
cmpsl
je
lds
inc
mov
push
divl
xor
sti
cli
iret
loope
sar
mov
pop
jno
cli
mov
cmp
in
lods
test
sti
decl
fbstp
fmuls
jmp
push
pop
paddd
movsl
lods
lods
stos
test
rep
dec
repz
push
stc
lock
out
sarb
push
fwait
mov
pushf
dec
push
jae
push
test
call
stos
mov
sub
mov
dec
pushf
dec
mov
inc
mov
xor
enter
or
cld
out
cwtl
mov
add
lret
xchg
xor
lcall
cmp
fmul
mov
iret
lahf
inc
orl
dec
je
pop
pop
pop
or
lods
mov
mov
stos
aad
pop
mov
test
ret
mov
jg
pushl
add
cwtl
or
xchg
cld
fwait
xchg
mov
fnstsw
mov
pop
mov
cmc
adc
push
in
sub
adc
pop
dec
addb
inc
inc
mov
iret
mov
push
xchg
lods
jbe
add
jmp
pop
push
sbb
sti
daa
lret
add
lcall
inc
push
push
add
sbb
call
mov
pop
dec
dec
inc
sbb
jg
or
cmp
cmpb
pushl
jp
mov
fcoml
jmp
sub
jb
adc
lcall
test
iret
mov
xchg
daa
sbb
lahf
xor
call
mov
scas
or
cvtps2pi
cmc
ret
ret
cwtl
pusha
add
into
mov
xorb
and
push
int3
jmp
xor
push
xor
push
add
je
dec
pop
mov
and
ss
decl
les
ds
dec
adc
push
add
push
push
in
int3
je
ss
test
jmp
pop
add
pushf
and
sub
fs
adc
pop
pusha
std
lcall
fsub
xorl
cld
jae
sbb
sub
popf
popa
dec
leave
bound
add
cmc
ret
aas
xorl
sar
decl
xor
xrelease
out
and
rolb
pushl
or
dec
call
lcall
and
in
enter
push
bts
jmp
rol
je
ljmp
inc
or
stos
add
insb
movsb
mov
adc
movsb
loopne
mov
push
repz
shl
mov
cmc
xor
clc
dec
test
push
pop
cmpsl
sahf
sub
testb
add
push
jb
sub
jmp
jmp
dec
rorb
pop
sbb
push
and
sub
iret
push
je
jg
incl
adc
adc
in
adc
stos
ss
lock
xchg
sub
add
xor
jl
addl
outsb
adc
xor
and
shrl
inc
push
pushl
add
push
pusha
dec
adc
cmp
pop
js
mov
cmp
jno
pop
insb
and
loopne
dec
daa
lea
in
or
sub
cmc
aad
sti
add
adc
aaa
incl
loope
xlat
xchg
mov
clc
ret
or
pop
sbb
xchg
cmpsb
cwtl
xor
adc
pusha
jge
or
jmp
rcrl
call
loopne
add
loope
insb
xchg
lds
test
sbb
cli
incl
dec
ficoml
xchg
cmc
out
ja
stc
out
xchg
cli
call
jmp
call
cmp
push
push
or
lods
fsubl
add
jle
sub
and
daa
outsl
push
std
cmp
cmp
adc
or
daa
leave
ja
xchg
dec
mov
sar
incl
mov
sbb
int3
jae
psllw
xor
loope
mov
pop
bound
scas
pop
dec
lret
jmp
xlat
outsl
sub
out
cld
inc
cmp
mov
incl
add
shlb
mov
orl
sbb
or
scas
pushl
adc
sbb
sbb
loop
push
loopne
adc
dec
inc
sbb
and
lcall
sub
call
test
pusha
add
clc
test
add
mov
les
jp
jg
repnz
out
inc
test
addb
sldt
sub
call
jbe
lock
mov
dec
incl
adc
pop
pop
shlb
mov
and
and
adc
cld
mov
in
inc
sbb
icebp
cmpl
incl
bnd
xor
or
repnz
nop
mov
sub
push
int3
ret
adc
ret
and
lret
cmp
and
adc
inc
mov
popa
or
and
push
inc
and
inc
add
sub
and
add
or
push
add
push
ljmp
add
add
pop
pop
pop
jae
mov
inc
or
dec
nop
xchg
or
ss
int
jp
je
cld
and
cmp
cmp
lcall
repnz
push
cmp
add
rorl
xchg
xor
cmp
jg
lahf
jle
and
inc
adc
add
mov
and
jg
aam
add
or
sbb
notb
adc
pusha
cmpsb
and
incl
add
les
jb
test
movsb
sub
dec
sti
pop
into
jno
scas
pushf
or
jns
decl
and
sbbl
rorb
mov
lahf
mov
andb
nop
mov
sbb
cmpsl
orb
fs
cmp
and
and
xor
jg
lcall
test
inc
adc
rolb
add
add
jmp
pusha
addb
call
int
icebp
pop
test
mov
and
clc
xchg
push
jge
jg
xor
sbbb
jecxz
test
cmpsl
cmp
and
incl
pop
loopne
adc
nop
ret
pop
addl
jg
test
cld
adc
aas
fcmovnbe
and
and
push
inc
inc
setae
insb
or
or
xchg
add
jb
test
ss
decl
fcmovnu
sahf
adc
lahf
rcrl
push
loopne
pop
add
dec
mov
jg
inc
and
inc
push
adc
and
andb
incl
sbb
ds
xor
rolb
sbb
add
inc
cmp
orb
adcb
and
xor
add
adc
sahf
mov
or
lock
inc
cwtl
mov
xor
loopne
enter
aas
jp
adc
mov
out
sbb
sbb
aad
divps
adc
jo
cld
inc
or
push
addb
pusha
smsw
sbb
or
mov
sub
adcb
jl
lcall
or
push
mov
sub
nop
loope
je
dec
sar
pop
cmp
add
sbbl
fcos
cld
std
or
or
push
test
add
dec
mov
ds
stc
mov
and
mov
and
loope
xchg
sbb
sub
add
pop
dec
je
fadds
roll
dec
ja
adc
xchg
mov
rcll
adcb
iret
jg
mov
sbb
aam
inc
or
cs
or
rcll
jl
jmp
ds
pop
jecxz
xor
imul
sti
dec
aad
call
fucomp
sbb
js
rorb
in
push
sti
ficoml
in
outsb
out
inc
mov
sub
dec
out
jb
sti
fsubr
dec
mov
xlat
int
jbe
sti
mov
jp
jmp
fdivrp
into
mov
test
add
xor
mov
aas
jg
sub
push
push
or
xchg
test
mov
loop
mov
mov
jnp
jecxz
ud1
inc
dec
repnz
fwait
cld
in
decl
lret
repnz
mov
mov
clc
inc
push
lcall
jno
pop
add
out
mov
push
mov
dec
mov
cmpsb
cmp
jmp
cmpsl
dec
cmc
stos
pop
std
ljmp
incl
pop
out
or
fwait
std
in
push
into
divb
in
jo
mov
mov
iret
mov
pop
jo
loop
xchg
mov
inc
sbb
lock
loop
iret
clc
cmp
icebp
nop
mov
lret
repnz
iret
mov
addb
dec
into
xor
loope
incl
pop
test
mov
mov
mov
idivb
cli
loope
ja
and
div
mov
popf
or
pop
cld
push
xchg
iret
cld
out
stc
rorb
pop
pop
cli
fmul
mov
lcall
pop
jnp
sti
loopne
mov
mov
xchg
pop
jecxz
sub
iret
xchg
mov
std
lock
mov
clc
iret
mov
xlat
and
sbb
jg
icebp
setb
jl
loopne
clc
cmp
cli
aas
adc
adc
adcl
sbbl
sbbl
fistpll
divl
es
mov
jae
gs
ljmp
clc
xorb
xorl
xorl
ss
cmp
cmp
cmpl
addl
inc
call
cmp
test
or
daa
adc
push
cmp
lcall
push
js
pop
cwtl
test
test
pop
clc
test
xchg
xchg
data16
push
pop
clc
or
push
clc
psrld
or
xchg
jbe
xchg
xchg
rcrb
xchg
jle
xchg
cmpb
pop
mov
std
mov
pop
sub
outsl
dec
or
mov
mov
mov
sahf
clc
mov
mov
test
mov
jg
je
sbbb
xorb
inc
imul
cwtl
mov
mov
clc
lods
sbb
mov
js
enter
mov
into
clc
call
fsubrs
jae
jo
fcomps
pushl
loopne
mov
cmp
js
call
mov
fmuls
sbb
pop
ljmp
sarl
jp
sub
mov
cli
mov
adc
call
add
nop
add
nop
push
jns
cltd
nop
or
push
stc
nop
adc
xchg
adc
call
cwtl
jno
push
sbb
push
stc
xchg
and
xchg
and
call
jns
sub
sub
xchg
cs
xchg
xor
xchg
adc
or
jns
cmp
cltd
xchg
cmp
ds
xchg
inc
sbb
xchg
inc
jns
dec
cltd
xchg
dec
mov
neg
xchg
dec
stc
adc
xchg
xchg
call
xchg
pop
cltd
xchg
pop
mov
pop
stc
xchg
pusha
sbb
pop
xchg
data16
push
out
xchg
insb
fsts
sub
cmp
jns
js
xchg
jp
xchg
jl
xchg
jle
xchg
sbb
pop
pop
jns
cltd
mov
mov
mov
cmp
pop
test
ljmp
cltd
cltd
lcall
negl
xchg
and
xchg
jno
jns
test
fstps
scas
cmp
jmp
cli
fwait
mov
nop
cwtl
fwait
mov
push
mov
pushf
enter
push
lcall
pushf
lahf
rcrl
js
popf
cmpsb
imul
popf
loopne
lcall
sahf
pop
jmp
popf
sahf
sub
inc
sahf
call
sahf
in
stc
sahf
loope
sahf
lock
lcall
imul
lahf
mov
lahf
add
mov
jp
mov
cld
mov
or
mov
cmp
jp
mov
sub
sbb
fisubl
sbb
pop
mov
lcall
mov
sbb
lds
mov
inc
mov
andl
movsb
jbe
movsb
inc
pop
movsb
adc
jmp
mov
dec
cli
movsb
pop
loope
push
cmp
test
and
std
fisubl
or
cmpsb
pop
cmp
cmpsb
dec
lcall
insb
fisubl
xchg
jb
cmpsl
cmp
js
cmpsl
xor
pop
cld
pop
jle
cmpsl
sub
test
and
mov
mov
test
fisubrl
test
cltd
xchg
jp
or
sbbl
cli
test
cmp
jp
test
stos
repz
ljmp
in
imul
sahf
mov
stos
ror
stos
jmp
sarb
jmp
ds
lods
lret
int3
fisubrl
lods
jge
ljmp
push
fdivrs
fidivrl
ficomps
aam
mov
pop
scas
mov
lcall
mov
stos
scas
out
cli
lcall
hlt
sub
cltd
scas
and
fisubrl
dec
jno
cmp
or
mov
or
mov
inc
ljmp
mov
sbb
mov
push
fwait
mov
mov
lcall
pop
mov
jp
sub
stos
sub
cmp
lret
mov
lcall
mov
jmp
fldt
xor
loopne
stos
add
loop
sub
decl
mov
mov
fwait
add
ljmp
pop
xchg
pushl
mov
bound
data16
jg
mov
lret
pop
ret
push
shll
decl
mov
loopne
jae
xor
sub
mov
lret
mov
shll
cmp
add
xor
push
mov
fwait
imul
pop
pop
inc
mov
mov
out
incl
sbb
jae
outsl
or
mov
mov
sbb
sti
ljmp
push
stos
mov
push
js
pop
pusha
jnp
mov
mov
cmp
jl
fwait
fwait
push
jnp
dec
mov
loop
cmpsl
lcall
xchg
sub
cmpl
mov
pushl
aad
mov
fwait
dec
cld
cmpsl
pushl
fstpt
stos
mov
mov
fstpt
sbb
jnp
stos
mov
mov
mov
mov
xchg
imul
add
std
jg
mov
lret
mov
mov
sbb
mov
jnp
mov
sub
rcl
xlat
sbb
ficompl
lods
mov
lock
mov
mov
cmpsb
sub
pop
dec
ret
mov
jle
cwtl
or
pop
dec
idivb
mov
xchg
fcmovnb
and
sti
mov
cmp
mov
outsb
sti
ud1
ljmp
jne
xor
lds
push
rolb
xor
aas
mov
decl
push
insb
fadd
outsb
cld
jo
jb
je
jbe
js
jp
jl
das
dec
call
sbb
subb
mov
adc
loope
imul
lock
and
adc
pop
leave
xchg
jl
cwtl
lcall
fmul
fwait
mov
and
add
adc
test
lret
lret
lret
mov
lods
int3
sbb
xchg
cmp
sbb
add
sub
and
sub
test
aam
mov
sbb
invlpg
pop
push
cltd
xor
shrb
cltd
or
add
add
cwtl
or
int
and
jmp
subl
and
or
add
add
add
mov
add
inc
or
sub
or
lock
add
leave
and
in
adc
add
mov
mov
cmc
inc
sarl
les
lret
add
xchg
rcr
loopne
add
aaa
mov
inc
popa
add
push
aas
adc
movsb
enter
shlb
scas
lret
sarb
in
mov
fsubs
in
jo
daa
cltd
hlt
adc
mov
ret
shll
add
in
inc
nop
push
adc
or
mov
or
or
adcb
or
adc
and
add
movsl
sarl
push
pop
xor
cmp
pop
ror
xlat
add
shll
mov
xor
sbb
and
les
or
fs
xchg
xchg
xor
sub
or
adc
das
push
das
out
je
test
and
pushf
pop
jmp
inc
testl
orl
xor
add
inc
stos
subb
daa
push
mov
and
fs
add
xor
aas
dec
xchg
rorl
nop
mov
scas
or
inc
adc
add
or
fldl
sbb
in
and
inc
pop
jb
jmp
imul
and
loopne
jmp
movb
js
lds
je
mov
test
enter
adc
mov
wrmsr
scas
sbb
cld
enter
movb
gs
or
in
mov
inc
loopne
dec
aas
mov
inc
lcall
add
fcoms
inc
adc
mov
xor
add
adc
popl
sbb
add
jns
adc
mov
cmp
sbb
mov
rorb
sbb
mov
flds
push
movsl
jmp
cmp
dec
cwtl
cmp
pop
xor
or
iret
add
mov
sbb
popa
or
adc
jae
xor
cmp
and
jne
pop
test
orb
rcrl
dec
or
mov
adc
insl
cs
or
adcl
pop
das
add
inc
or
arpl
xor
leave
cmp
inc
lcall
push
or
sbb
mov
push
push
adc
adc
inc
xor
fiaddl
or
or
out
or
and
add
mov
and
push
add
push
inc
xor
adc
arpl
outsb
mov
add
cmp
dec
inc
or
mov
adc
insl
loopne
loopne
mov
add
inc
or
xor
or
add
add
or
xor
and
enter
lea
xor
xchg
mov
and
inc
inc
add
or
xchg
fs
loopne
add
cwtl
stos
add
sar
incl
push
js
nop
sbb
push
pop
mov
sysret
mov
or
sti
fistpll
in
add
fadds
pushf
add
adc
inc
mov
std
mov
pop
or
addr16
push
movsb
add
cmpb
sti
out
flds
dec
push
add
add
and
xchg
add
clc
std
out
sti
outsl
or
push
insb
add
sub
int3
imul
pushl
xchg
add
xchg
and
mov
mov
add
mov
jge
or
or
mov
fadds
push
test
sti
pop
push
or
or
test
add
or
add
sti
mov
movsb
pop
or
add
cmp
fcoms
jns
pop
hlt
adc
decl
faddl
mov
or
add
mov
cwtl
adc
pop
jge
adc
cmovns
cmp
iret
cmp
pop
or
scas
insl
dec
clc
sub
add
bswap
data16
jg
clc
int
or
dec
fmuls
add
add
dec
jnp
mov
jns
lret
or
idivl
sub
push
insb
and
inc
test
fidivrs
test
or
pop
mov
idiv
inc
adc
outsl
or
adc
daa
clc
rorl
mov
add
push
jl
adc
add
sub
mov
incb
jbe
pusha
outsl
popa
outsb
in
test
pop
mov
or
push
cld
sti
or
iret
faddl
sete
mov
or
hlt
loope
xor
scas
incl
fsub
or
or
cld
loopne
lock
ror
shrl
xchg
xor
push
push
or
loope
test
or
or
js
mov
push
jl
rcrb
and
sub
shr
fcomip
jg
lock
or
shlb
push
in
mov
lock
adc
in
test
sub
inc
neg
xchg
add
adc
adc
rcll
sbb
test
or
std
arpl
add
or
fwait
lea
pop
and
add
jbe
pop
or
add
cmp
movhps
fidivs
adc
inc
adc
out
mov
lret
or
adc
adc
push
or
xor
sbb
jnp
sbb
jo
jns
sarl
mov
sub
out
dec
sbb
cmp
out
roll
loopne
dec
or
and
sub
pop
jnp
cmp
mov
mov
rcrb
xor
xor
cwtl
nop
add
lods
fstp
ja
sbb
pop
add
and
ds
push
push
xor
jo
or
adc
sbb
out
push
flds
sbb
mov
in
cmpsb
pusha
add
add
sub
into
daa
js
xor
adc
adc
and
sbb
dec
or
cmp
gs
test
shl
loop
sbb
aam
or
test
cmp
cltd
mov
out
xor
outsb
andb
addr16
sti
lret
or
sbb
or
add
fnsave
pop
and
push
imul
hlt
xor
mov
scas
sbb
and
and
sbb
ret
rol
add
and
sbb
bound
mov
or
mov
push
add
inc
push
lods
add
loop
push
or
sbb
and
into
lods
loope
and
add
sub
adc
pop
pop
mov
clc
or
sahf
loope
xor
or
push
inc
xor
jnp
jnp
leave
pusha
sbb
inc
add
inc
popa
cmp
sbb
add
fadds
cmp
scas
shr
in
xchg
imul
pop
and
inc
and
and
sbb
cmp
mov
pop
je
inc
int3
lods
adc
fisubrs
jp
inc
cmc
clc
dec
adc
out
jnp
divl
jp
cmc
sbb
add
in
shl
and
mov
fldl
pop
push
adc
mov
mov
or
push
xor
adc
pusha
es
mov
je
adc
mov
or
add
or
sub
cmpsb
in
cmp
push
loope
cmpsb
sub
push
dec
adc
pushw
int
je
add
loop
or
enter
push
mov
inc
pop
pop
jo
cmp
and
aam
mov
scas
in
das
out
mov
or
loope
sub
xchg
and
lods
loopne
adc
pop
pop
lods
inc
movsb
push
push
cmp
sbb
iret
aad
and
test
stos
test
flds
inc
pop
ds
mov
jnp
loop
xor
pop
or
add
mov
jbe
repnz
sbb
or
out
lds
outsl
pop
mov
in
inc
mov
push
sbb
lret
out
ss
ficoms
aas
popl
cmp
mov
add
cltd
sbb
add
jnp
push
pop
js
sub
mov
test
sbb
xorb
add
mov
sbb
bound
adcb
and
scas
sub
sub
testb
lock
sbb
sbb
xchg
divl
add
mov
sbb
sbb
int
mov
jae
or
push
push
lock
adc
adc
push
insb
xlat
inc
cmc
or
cs
lea
adc
aaa
jp
adc
out
inc
and
stos
mov
push
in
ror
mov
cmp
in
out
fst
or
add
or
xchg
adc
or
push
insb
paddusb
les
xchg
sbb
cmp
xlat
lahf
sub
or
mov
lods
arpl
pop
fistpl
insl
fisttpl
adc
pop
adc
lods
loop
xorl
ret
fistl
or
jge
sbb
outsb
sbb
sub
fwait
inc
sti
je
xchg
jge
sub
push
sub
mov
adc
gs
adc
cmp
xchg
call
mov
imul
and
xor
cmp
adc
add
iret
gs
push
insb
push
aad
push
mov
call
sbb
fsubr
adc
pop
or
xchg
insb
dec
push
orb
mov
sbb
stos
lock
add
or
jge
sbb
mov
add
loop
mov
mov
push
lcall
test
flds
fwait
negl
dec
sub
cmp
cmp
xor
add
or
sub
imul
push
mov
push
andb
adc
int3
add
stos
sub
add
sbb
adc
lock
pop
adc
lds
sahf
in
pop
add
cmp
push
testl
sar
lods
sbb
sbb
mov
inc
jno
sub
fcompl
or
je
xor
mov
shrl
xor
and
or
jbe
fiadds
push
inc
mov
repz
lret
push
push
inc
inc
ret
dec
xor
scas
aam
pop
hlt
add
addr16
xchg
add
add
fs
popa
add
arpl
clc
push
cmp
jo
sub
enter
inc
pop
dec
int3
sti
and
cmp
out
push
add
or
cmp
lock
xor
daa
mov
or
int
push
lods
xor
adc
or
push
cmc
les
pop
hlt
add
neg
xor
sub
cmp
pop
ret
stc
xchg
movsb
cwtl
cmp
js
roll
ret
adc
add
add
in
ss
or
outsb
js
fmull
out
mov
inc
faddl
xor
add
mov
sbb
daa
or
add
mov
rorl
mov
mov
or
jmp
nop
es
xor
or
and
cmp
cmp
ret
das
pop
cmp
cmp
decb
mov
loop
rcl
mov
mov
mov
lods
fstps
xor
icebp
fnstcw
popa
or
lcall
sti
decb
or
add
or
scas
outsb
sbbl
js
leave
sbb
daa
out
inc
rorl
mov
or
jne
adc
or
mov
imul
insb
pop
push
mov
cwtl
dec
iret
cmc
and
push
xchg
ja
add
dec
pop
cltd
add
fadds
aaa
mov
or
add
mov
sbb
mov
syscall
in
push
xlat
into
and
rorb
arpl
push
or
add
adc
push
cmp
ret
lds
pop
cld
sub
enter
xor
xchg
aaa
das
and
mov
jno
xor
or
inc
dec
xor
push
loopne,pn
mov
mov
sbb
cmp
sbb
add
dec
rorl
fsubr
lods
enter
push
xor
dec
pop
hlt
mov
or
or
jecxz
cmp
lret
cld
push
inc
or
lods
jns
in
pusha
out
pop
rolb
das
mov
fisubl
push
xchg
or
pop
das
cmp
enter
mov
mov
pushw
mov
inc
out
mov
add
push
shlb
mov
sub
sub
push
ja
lcall
sbb
or
inc
xor
sub
rcrb
mov
out
cmpsb
pushl
sbb
mov
rorb
pusha
scas
xchg
in
dec
je
push
sbb
add
popa
add
dec
push
out
popaw
pop
cmp
stos
push
mov
mov
mov
mov
aaa
rol
and
or
or
roll
out
push
sub
test
je
cmp
ret
subb
adc
sub
mov
xor
or
aam
add
or
call
cmp
popf
pop
pop
scas
testl
xchg
loopne
adc
add
adc
cmpsb
mov
cwtl
std
clc
jb
sbb
sets
or
jg
je
mov
cmp
push
std
cld
pop
mov
aad
or
mov
push
xor
sbb
cmp
dec
call
jl
pop
pusha
imul
decb
pop
inc
add
sub
xor
cmc
jmp
lret
mov
push
sbb
scas
stos
pop
add
pop
insb
sti
mov
inc
scas
lods
or
push
in
or
cmp
sbb
dec
dec
push
push
rcrl
fiaddl
int
int
mov
jno
fiaddl
push
mov
in
shll
xor
sub
push
adc
sbb
psubq
cmp
test
jl
add
out
mov
fstps
sbb
imul
xadd
mov
adc
push
mov
out
aas
push
and
ficoml
add
pop
mov
pusha
sti
pop
outsl
stos
push
repnz
or
xor
push
ds
and
aas
sahf
hlt
pop
add
insb
pusha
mov
out
xchg
fisttps
jo
add
stos
sub
movl
mov
add
fcmovnu
sti
xchg
mov
cs
ss
mov
push
jo
in
jnp
verr
pop
inc
add
fists
ret
ja
sahf
and
push
out
test
sub
je
repz
mov
adc
and
add
dec
loope
imul
adc
push
xchg
rolb
push
jp
test
ja
adc
stc
stos
jmp
cltd
push
jns
and
or
jp
inc
loopne
and
sbb
fnstcw
mov
mov
stos
push
sub
inc
ljmp
dec
dec
mov
test
jmp
push
adc
std
push
push
mov
cmp
clc
ja
and
add
sbb
or
push
decb
jp
outsl
ja
push
add
fldcw
in
and
add
pop
jl
lahf
pop
sbb
fisttps
jno
mov
sbb
sub
adc
mov
lods
mov
pop
call
orb
add
sbbb
outsl
fsubrp
test
mov
and
scas
cld
xchg
loope
aam
jnp
stc
jae
or
lds
jge
test
imul
sti
lea
push
push
cltd
shrb
popf
addr16
es
or
adc
addr16
adc
pop
mov
fs
xor
stc
add
test
idiv
fcom
adc
imul
add
rorl
js
xor
add
in
call
mov
pop
cmp
out
push
push
into
out
add
xchg
pop
mov
mov
push
xchg
filds
xchg
pop
cli
shl
out
mov
out
and
inc
sbb
cmpsb
mov
rcll
mov
inc
dec
addl
jp
fcompp
xchg
mov
add
rcrb
or
jbe
arpl
xchg
fimull
add
and
cwtl
dec
sbb
lods
fwait
call
leave
lcall
fwait
js
cmp
adc
mov
cltd
hlt
jle
rcrl
add
or
sbb
in
shrl
scas
nop
cld
ret
dec
and
mov
cmpsb
mov
sub
rcll
movsb
mov
inc
in
fsts
sbb
rcrl
or
jo
pop
lret
ja
mov
lret
cld
pop
sbb
jnp
lods
fstps
add
movsb
jge
adc
andl
mov
test
and
test
or
js
or
adc
inc
daa
ljmp
lahf
push
cld
xchg
add
push
in
xor
add
aam
add
dec
cli
push
push
mov
cmc
add
das
inc
cmpsb
or
or
enter
xchg
ljmp
fadds
push
das
cs
sbb
jecxz
pop
xlat
mov
push
sti
jp
inc
jbe
or
les
and
jbe
inc
repnz
out
mov
push
jl
add
in
xchg
push
setne
jne
cld
xor
xlat
idiv
cld
jl
push
roll
scas
pusha
lods
and
jl
decl
mov
and
adc
and
mov
stos
add
orb
hlt
test
sbb
jge
add
push
xchg
scas
loopne
test
mov
das
ds
or
loop
mov
jle
cld
xchg
lods
mov
int
jmp
jmp
lds
jecxz
cmp
cmpsl
mov
stos
xchg
pop
out
jmp
pop
mov
xchg
adcb
cmp
ret
nop
dec
dec
icebp
jle
cmc
cmc
imul
or
add
mov
xor
jle
bound
in
add
add
add
inc
or
sbb
jecxz
insb
sbb
adc
fistl
popf
adc
loop
jnp
sub
jle
xor
or
jle
enter
addb
xor
cld
pop
mov
or
sbb
inc
aam
cli
cld
pop
sbb
pop
sti
daa
mov
insb
add
add
sti
sbb
push
push
scas
xchg
je
jne
rcll
rolb
and
mov
daa
inc
mov
xchg
gs
scas
push
movsl
addr16
push
or
hlt
rolb
mov
lods
std
out
adc
or
or
jo
pop
xchg
pop
adc
js
lds
xchg
scas
or
data16
xlat
adc
mov
mov
rorb
mov
jl
mov
fisttps
sub
mov
pop
or
cmp
loopne
fisubrl
mulb
push
incl
xchg
jecxz
insb
xchg
cli
xchg
orb
clc
or
or
loope
rorl
addr16
inc
xchg
icebp
mov
insb
xor
sub
add
nop
add
or
mov
push
mov
push
sub
std
mov
push
cli
xchg
xor
mov
mov
icebp
mov
orb
mov
jae
mov
or
xor
mulb
lods
sbb
aam
shlb
sbb
cmp
popf
cli
addr16
adc
call
test
add
mov
ss
faddl
ljmp
pop
jns
mov
xor
ljmp
aam
loope
mov
push
or
xchg
adc
add
mov
sub
sbb
cmpsl
fistps
js
sbb
push
jo
mov
mov
pop
inc
sahf
push
mov
or
scas
lods
sbb
icebp
and
mov
add
or
sub
sub
outsl
ficoml
sarl
xor
mov
test
sbb
insl
cmp
jae
outsb
or
mov
inc
test
xor
ds
and
jge
push
out
loopne
bound
lock
pop
mov
jo
pop
adc
enter
jecxz
jge
scas
pop
fisttps
pushf
xor
ss
push
mov
sbb
gs
dec
adc
pop
test
add
jo
fistps
and
mov
xor
cmpsl
and
clc
adc
mov
jns
movl
std
sbb
add
out
ja
ja
xchg
or
jl
add
fistpll
lea
jge
or
or
test
movsl
ds
loop
loopne
imul
aas
xchg
add
loopne
jge
and
adc
push
adc
js
mov
or
xor
sbb
arpl
sar
add
je
push
sbb
loope
adc
xchg
and
or
loop
push
mov
jecxz
insb
and
lret
jl
sbb
movsb
les
hlt
mov
mov
pop
popf
and
add
in
stos
cld
leave
mov
xor
loop
inc
pop
cmp
sub
das
jbe
mov
test
dec
or
add
icebp
lea
push
jo
loope
and
cld
mov
and
repnz
sub
xchg
pop
push
and
pop
sub
xor
push
mov
mov
sbb
push
aas
pop
sbb
nop
mov
mov
int
xor
lods
js
test
in
movsl
add
insb
adc
int3
and
jbe
push
test
pusha
addb
loopne
jl
pop
cmp
pop
mov
mov
inc
bnd
je
pusha
int
testb
out
push
mov
mov
scas
adc
adc
dec
ja
push
sysexit
mov
js
popa
cmp
int
stc
in
add
sub
imul
sub
movsb
cmp
in
cmp
push
lahf
cmp
arpl
clc
shlb
or
cmp
ret
nop
rcrb
std
fcmovu
mov
lods
notb
or
not
testl
dec
cli
into
sub
cmpsb
add
or
push
into
test
adc
sar
push
add
pop
aad
or
or
cwtl
repz
ret
or
lock
push
jo
cmc
rcrl
cmc
mov
or
lock
std
add
add
jmp
jecxz
fidivs
pushf
call
add
enter
pop
faddl
orb
inc
vandpd
inc
xchg
jmp
aam
jns
add
add
add
cmp
xor
pushf
or
mov
or
les
adc
push
xor
cmp
add
cmp
in
or
sahf
fstpt
lock
test
scas
gs
mov
pop
loope
inc
pop
in
stc
inc
sti
add
xchg
cs
mov
clc
fsubr
daa
pop
xchg
movsb
aas
imul
xchg
ljmp
xchg
inc
fldt
mov
repz
rcrb
mov
xchg
mov
adc
xchg
jl
div
add
and
aaa
cwtl
xchg
repnz
or
loopne
push
sbbl
shrb
mov
add
insl
subb
rorb
add
sahf
push
mov
mov
add
push
pop
or
ljmp
jae
and
mov
dec
std
test
or
mov
jmp
sub
pop
or
push
mov
sete
das
adc
xchg
add
paddb
rcrl
out
mov
xor
ret
sbb
outsb
int
add
inc
lret
jecxz
mov
adc
pop
cmp
cmpsl
test
mov
sub
add
sti
push
jmp
jmp
or
stos
scas
xchg
or
and
sbbl
movsb
lods
sbb
loope
out
inc
clc
mov
jmp
rcrb
push
out
adc
hlt
js
mov
mov
popa
test
or
mov
mov
xchg
daa
outsl
cmpb
lcall
adc
xchg
ret
dec
sub
add
cmpsb
push
cmp
lea
pusha
cmp
add
add
insb
adc
int3
loopne
imul
inc
adc
add
or
mov
stc
mov
movsb
or
cs
add
fisttps
pop
stos
or
movsl
mov
arpl
jmp
mov
pop
subl
or
lock
lea
or
mov
pop
idiv
mov
add
cmp
or
arpl
cmp
mov
fimuls
mov
xor
mov
int
in
cmp
sub
ret
rcll
mov
mov
or
mov
sub
dec
outsl
sbb
rolb
shll
mov
in
sub
mov
xor
cmp
je
bound
lods
clc
daa
and
insb
xchg
repnz
inc
lahf
loopne
das
lock
cmpsb
cli
les
xchg
sahf
add
int3
mov
fstp
push
mov
pushf
call
jae
out
add
cmc
cmp
adc
xchg
jle
ss
aas
mov
ljmp
add
xor
xor
test
dec
jl
cmc
push
and
xchg
xchg
out
in
leave
cmpsl
fadds
sarb
mov
orl
dec
out
in
mov
push
aas
repz
in
or
adc
sbb
lds
loope
bswap
std
mov
icebp
lods
pop
push
pushf
data16
mov
cmpsb
addr16
xchg
push
jbe
mov
push
shr
sbb
adc
add
adc
cmpsb
stc
mov
push
lods
fstps
xchg
leave
pop
shlb
les
jge
mov
adc
mov
inc
cmp
iret
test
bound
fdivrl
or
aaa
sub
and
mov
push
roll
sbb
mov
loop
call
and
in
mov
push
xchg
rcl
iret
mov
test
stos
mov
mov
adc
std
lods
inc
into
imul
adc
jecxz
ss
add
cmpsb
push
pop
bts
test
cli
test
mov
cmpl
test
cmp
cmpsb
or
subl
xor
test
push
add
sub
repnz
lahf
repz
in
adc
mov
dec
jp
jns
push
push
addb
add
js
test
movsb
push
adc
shl
inc
dec
jo
mov
lcall
inc
in
dec
lahf
js
adc
mov
outsl
fadd
or
inc
xchg
cmp
mov
lds
or
and
mov
ret
aam
cmp
and
pop
cmpb
fld
cmp
pushf
and
js
scas
loope
pop
call
incb
sub
dec
fimull
sti
xchg
mov
sbb
insl
movd
dec
cmp
fistl
and
cwtl
lcall
or
pop
and
mov
shlb
and
push
jmp
add
clc
jle
andl
add
inc
fwait
out
jb
shrl
clc
add
xchg
aas
cwtl
rolb
push
pop
aas
add
test
push
mov
pop
xor
fadds
ljmp
clc
xor
imul
loopne
xchg
mov
sub
mov
icebp
loope
jmp
xchg
push
not
aas
push
mov
jp
jge
adc
not
repz
enter
cmp
sub
pop
cmp
jmp
mov
loop
push
repz
mov
adc
jge
or
jecxz
ljmp
hlt
xor
insb
testl
fldl
rolb
mov
daa
adc
xor
sub
mov
aad
fcoms
aas
and
loopne
sub
inc
sub
pop
sbb
sbb
decl
out
mov
pop
clc
pop
lock
lcall
fldcw
das
cli
mov
sbb
push
jg
addb
xchg
xor
mov
cli
xchg
mov
add
lock
rolb
fsubr
imul
and
adc
je
or
test
sbb
dec
mov
je
aad
xchg
flds
mov
mov
add
movsb
hlt
lock
icebp
sahf
sub
and
sahf
insl
xchg
mov
enter
or
aas
adc
dec
call
test
decb
mov
repz
mov
add
cmpb
mov
adc
icebp
or
add
cmc
mov
dec
xor
testb
lret
iret
aad
adc
inc
or
add
loop
xchg
add
or
lds
adc
cli
call
cmp
sub
data16
or
mov
xorb
neg
xchg
mov
pop
jne
mov
mov
mov
add
shlb
mov
jecxz
sbb
clc
data16
hlt
or
aaa
in
adc
inc
and
fimull
test
dec
push
or
insl
push
inc
pusha
mov
or
jmp
js
jae
rcr
mov
jge
inc
add
mov
jmp
pop
pop
testl
fstl
jo
and
enter
sbb
cld
jmp
or
ret
mov
fdivrs
pusha
sub
xor
adc
mov
testb
add
adc
xchg
cmp
loop
or
inc
sarl
mov
jp
and
cld
adc
scas
sbb
js
mov
or
pop
mov
push
or
or
xlat
imul
pushf
loope
pop
dec
pushf
or
mov
mov
in
movl
pop
adc
daa
pop
push
sarb
imul
test
xchg
hlt
or
lret
loop
cmc
pusha
lahf
mov
in
roll
lahf
fisttpll
or
xor
cmp
inc
cmpsb
or
mov
mov
sbb
jnp
aaa
int3
sbb
sbb
adc
int
mov
dec
mov
jmp
jg
pushl
rorb
fistps
add
popf
int3
adc
shl
aas
into
mov
test
or
clc
mov
xchg
mov
add
add
fs
cmc
fsubl
add
enter
or
dec
movsb
mov
push
mov
pusha
xorl
nop
pop
push
pusha
je
add
sub
jg
adc
push
adc
or
inc
arpl
add
stos
ss
js
aam
add
inc
dec
xchg
mov
pop
xor
repz
lret
test
pop
adc
push
insb
js
pop
push
mov
inc
add
test
sti
mov
mov
sub
cs
outsl
fiaddl
fs
aad
decb
pop
andb
add
movb
aas
xor
ds
test
daa
std
add
aam
les
mov
hlt
fucomip
jmp
rcrb
icebp
aam
add
jle
mov
push
sarl
adc
adc
xchg
ljmp
in
rep
dec
call
clc
outsb
lods
and
in
ffreep
mov
sub
xor
add
inc
clc
push
loopne
and
or
push
fisttps
out
pop
repz
xchg
push
stos
test
in
daa
in
mov
xchg
aaa
sti
orb
push
pusha
sub
stos
lcall
adc
clc
fsqrt
addr16
fisttps
test
cmc
pusha
sub
cmc
mov
in
ljmp
test
jecxz
icebp
sub
mov
or
push
adc
mov
sub
push
into
mov
out
pop
incl
out
out
incb
xchg
jo
mov
popa
in
adc
lock
in
test
cmc
xchg
loopne
sub
or
or
cld
fdivl
and
fildll
in
aam
fdivrl
clc
call
stc
ret
mov
mov
mov
pop
push
add
aad
fists
insl
mov
jecxz
mov
pop
test
clc
xlat
es
jg
sbb
and
sti
mov
inc
or
int3
add
xchg
shr
ret
mov
adc
shl
inc
or
dec
inc
push
xorl
out
wrmsr
xchg
sub
fildll
and
jg
mov
cltd
lcall
ret
aaa
mov
inc
and
mov
mov
mov
jb
xchg
pop
sub
sbb
loopne
add
lock
call
pusha
cmpsl
into
movsl
or
pop
stos
notb
or
add
jmp
mov
les
repnz
jle
clc
popf
insl
sub
mov
hlt
mov
add
out
into
ffreep
pop
dec
in
nop
cmc
dec
add
sub
shlb
push
roll
jle
sub
and
ljmp
or
ljmp
pop
push
jge
xchg
in
ret
or
pop
push
es
mov
push
adc
cmp
fidivrs
lret
scas
ljmp
enter
testl
scas
mov
sub
shlb
jmp
popf
sub
ret
jle
flds
aad
js
cmpsl
sbb
roll
push
out
add
push
fisubs
xchg
lcall
in
out
and
rolb
call
leave
jp
inc
hlt
sti
add
add
push
add
repz
or
mov
enter
ret
push
dec
stos
iret
cld
mov
mov
add
mov
pop
pop
sbbl
outsl
inc
sbb
repz
int
jo
lret
jo
jmp
xchg
popa
inc
ds
add
mov
fidivs
pop
cs
movl
jne
inc
xor
push
cmp
lcall
test
cmp
dec
mov
mov
push
outsl
jo
lods
sub
pushf
mov
sti
movsl
mov
fwait
jns
inc
divb
sbb
fsub
mov
pop
cld
adc
negb
stc
mov
repnz
enter
iret
push
jns
jmp
mov
add
mov
cmpsb
inc
pusha
xchg
cmpsb
xchg
mov
mov
push
dec
clc
into
rcrb
leave
int3
dec
loopne
xchg
scas
mov
fmuls
or
roll
std
loope
dec
mov
jmp
push
loop
fcoms
rorb
mov
pushf
hlt
dec
fdivp
dec
pop
jnp
pop
sub
popa
add
mov
imul
subl
adcl
dec
push
mov
mov
inc
sbb
mov
testb
mov
fs
mov
pop
jne
sahf
ret
or
inc
cld
mov
add
xor
mov
ret
std
jb
pop
or
sbb
ret
mov
pop
bound
push
mov
idivl
aas
cld
jmp
add
andb
das
mov
mov
cmpsl
fistpl
cmpsl
push
jge
mov
das
test
test
imull
mov
andb
jmp
and
mov
fiaddl
loope
pop
ljmp
xor
or
test
out
sbb
xor
mov
mov
jnp
fdiv
and
add
and
push
cmp
mov
or
adc
adcl
jge
rcrb
nop
xchg
clc
pop
iret
mov
addb
pop
ffreep
xchg
mov
ret
xchg
pop
sub
push
add
fidivs
scas
in
movsl
xor
xor
in
cmpsl
shr
inc
data16
test
movsl
subb
xchg
jnp
leave
xor
lret
pop
add
lea
xchg
fcoms
jmp
xchg
fwait
iret
aam
cmpb
jae
mov
fnstsw
nop
lock
sti
lret
in
and
xor
and
pushf
add
icebp
enter
lods
ja
and
movsl
adc
in
icebp
mov
test
cmp
mov
jecxz
lock
test
jb
mov
dec
adc
cmc
cmp
cmpb
adcb
out
ss
into
sub
dec
negb
sbb
jp
dec
jo
mov
and
shlb
in
lahf
ret
cld
jmp
cmp
cli
or
add
decl
add
add
mov
fistpll
enter
adc
jmp
mov
jmp
add
xchg
cli
or
cmp
test
or
jecxz
cli
dec
mov
add
rcll
gs
enter
enter
inc
js
cmp
movsb
pushf
or
mov
and
jae
mov
mov
fstl
inc
and
inc
das
sbb
adc
cmp
cmpsl
stos
fwait
lds
loopne
ljmp
enter
and
push
jmp
scas
xchg
test
ds
faddl
lahf
aam
xlat
xlat
dec
cld
mov
mov
ds
ja
or
lock
xchg
cld
sbb
mov
add
es
adc
imul
or
push
add
je
xchg
rcrl
rcl
or
mov
mov
test
xor
sub
cmp
mov
pop
mov
cli
test
js
mov
mov
cmp
movsl
je
xchg
fmull
aam
pop
dec
push
cmp
enter
xor
loope
jo
dec
mov
stc
jo
or
orb
ljmp
into
and
imull
sub
rclb
add
pop
test
jle
loopne
les
xchg
mov
pusha
stc
decb
loop
sub
clc
add
ljmp
pop
stos
cli
test
push
xor
into
sub
cmp
or
pop
outsl
pop
ror
cmp
jb
add
add
loopne
js
out
mov
xchg
mov
jecxz
and
cmc
frstor
push
add
shll
cmp
or
rcll
or
and
cs
loope
cmpsb
pop
fisubl
out
adc
sti
movsl
sub
pop
jno
cld
idivb
loopne
add
sti
movl
addb
sbb
mov
push
jl
jae
and
out
mov
dec
js
lahf
jp
mov
lahf
sub
out
sbb
bound
push
mov
pop
push
std
xor
push
add
push
mov
adc
std
js
xchg
dec
insb
jnp
mov
mov
das
sub
inc
sbb
cltd
decb
mov
loopne
cli
ret
imul
test
jmp
hlt
mov
mov
add
test
mov
jp
scas
sub
jg
or
movsl
add
lcall
or
fwait
lock
sti
jmp
dec
or
mov
pop
jb
add
scas
in
loop
mov
or
sub
lea
cmp
cmp
js
packuswb
subl
mov
ds
cmp
daa
out
inc
sbb
or
popa
mov
adc
pop
mov
sub
adc
dec
xor
loope
mov
push
jle
mov
insl
in
xor
add
cltd
or
adc
insb
out
xchg
out
jb
sub
fldt
in
lock
test
xchg
mov
mov
lock
aad
std
out
test
jb
rolb
push
and
adc
pop
and
pop
push
fnstcw
inc
mov
jnp
imul
test
pop
cld
fidivrs
nop
and
mov
ret
add
xchg
push
popf
lods
hlt
loopne
mov
fstl
ret
ret
shl
and
ss
mov
push
clc
mov
pop
mov
loope
inc
xor
push
jl
shll
add
loop
cmc
sar
shll
add
push
fadds
je
mov
and
nop
movsl
jmp
mov
aaa
and
pop
shlb
xor
push
jl
enter
mov
aaa
add
mov
mov
filds
aaa
lret
xorb
jp
xor
adc
aas
adc
xor
push
sub
or
loop
shll
ljmp
in
ds
mov
inc
shrb
push
sbb
ficoml
fisttps
sbb
das
adc
adc
dec
stos
es
xchg
cmp
pop
sti
add
mov
xchg
outsl
leave
push
das
xchg
mov
iret
pop
pop
jge
inc
push
jae
or
fwait
test
popf
mov
cmp
mov
or
test
rolb
je
and
mov
xchg
pop
sbb
loop
push
pop
mov
clc
mov
xor
inc
subl
or
mov
rclb
push
ss
cmp
push
jnp
sti
mov
icebp
in
jno
jns
pop
incl
int
pusha
pop
rclb
out
pop
les
adc
pop
add
ds
fildl
or
xor
loopne
clc
xor
test
ljmp
std
repnz
lds
cs
test
mov
loopne
xchg
lods
add
inc
pop
fs
and
fnstenv
std
shrb
js
lret
xchg
mov
fiaddl
cmp
hlt
popf
ja
add
daa
jp
or
xchg
jge
cmp
and
sbb
imul
xchg
outsb
and
loopne
mov
adc
pop
idivb
icebp
outsb
or
jbe
ljmp
add
sub
rorb
dec
sysret
idivl
fmulp
add
push
movsl
jl
add
push
std
add
inc
or
mov
dec
js
rolb
mov
xor
scas
icebp
dec
fisubl
out
in
loop
xor
ret
cld
ficomps
out
pop
pushf
push
adc
adc
push
adc
cmpl
sub
jns
inc
cmp
mov
enter
cmp
ja
addr16
and
leave
insb
inc
mov
add
pop
xor
push
int
andb
pop
fmull
pop
adc
rcll
mov
ret
mov
xchg
pop
fdivrs
adc
inc
xor
xor
mov
inc
jnp
ljmp
mov
pop
mov
movsb
cmp
push
adc
mov
jo
out
pop
popf
imul
cmpsb
pushf
in
arpl
stos
movsb
mov
mov
out
pop
xchg
divl
pop
jl
add
dec
lods
frstor
shlb
sarb
sbb
inc
mov
aas
mov
movsb
jne
add
sahf
and
pop
or
sbb
sbb
add
dec
or
or
jl
jbe
insl
mov
mov
sbb
mov
fmul
stc
dec
add
mov
lock
pushf
fwait
pop
in
fs
sbb
sti
cmp
or
enter
add
ja
lcall
repz
stc
test
dec
outsb
loope
loope
sbb
popf
pop
call
mov
or
sbb
pushf
jmp
leave
ret
cmpsb
lock
orb
in
push
rorl
pusha
cmc
fldt
in
test
add
inc
shr
push
inc
pushf
test
in
pop
pop
jmp
mov
xchg
dec
jmp
or
adc
xor
push
jno
pop
dec
inc
lds
xchg
rclb
fsubp
lret
std
ljmp
inc
cmpl
mov
pop
cmp
bound
inc
dec
mov
out
lods
lock
cwtl
test
xchg
popf
inc
dec
test
mov
test
movsb
sbb
syscall
cli
xor
xor
out
loop
shlb
xorl
mov
adc
decb
sti
add
ret
incl
sub
adc
shrl
add
mov
lods
insl
sbb
sbb
ja
sbb
adc
inc
pop
pop
or
mov
adc
adcl
add
mov
iret
sub
or
mov
cmc
adc
pop
push
fistpl
sub
sbb
cmp
sbb
xlat
mov
dec
adc
hlt
sbb
push
js
mov
adc
jae
sub
adc
sub
jg
or
add
popf
inc
aam
lods
loop
addb
pop
out
stos
jecxz
mov
or
hlt
std
mov
pop
xchg
daa
clc
cmpsb
jnp
jne
div
add
mov
repz
xor
add
sbb
inc
movsb
inc
cwtl
popa
insb
push
add
loope
das
or
cmp
sti
dec
xor
push
pushf
add
bnd
sbb
mov
cwtl
lea
dec
ss
or
jmp
mov
fildl
sbb
out
test
cmp
in
or
inc
mov
adc
jg
arpl
push
and
add
loopne
mov
test
jecxz
les
lods
or
fwait
add
mov
dec
lahf
sahf
sub
inc
mov
arpl
cmp
pop
mov
sti
sti
mov
jo
add
enter
xor
faddl
testb
add
add
add
push
inc
pop
daa
mov
fiadds
pop
shrb
add
push
pop
lock
cmp
adc
pop
fwait
stos
mov
outsl
in
ja
imul
cmp
mov
clc
in
add
push
xchg
js
arpl
lock
mov
mov
jnp
add
sbb
mov
xchg
out
dec
loope
cmp
dec
pushf
push
shr
cmp
or
cltd
sarl
xlat
xchg
shr
pop
xchg
outsb
jge
in
in
push
fadds
add
icebp
pop
std
jmp
adc
mov
push
pop
add
mov
xor
mov
sahf
andl
es
ret
in
es
mov
mov
adcl
jmp
in
jecxz
pop
xor
clc
add
repz
lea
fisttpl
test
mov
pushf
cli
in
xor
call
popa
in
subl
push
or
mulb
xchg
pop
jle
movsb
add
jo,pt
sub
imul
lock
mov
sub
jl
jmp
mov
inc
out
ret
hlt
and
add
xlat
lock
mulb
in
mov
ret
loopne
out
test
add
loope
setle
jle
xlat
xchg
lds
leave
add
xchg
xchg
xchg
shlb
mov
loop
mov
rolb
push
pinsrw
lret
xchg
cwtl
jmp
nop
add
dec
ret
or
cmpsb
xchg
inc
xchg
sbb
dec
into
xchg
push
mov
lret
sub
add
repz
adc
aas
ret
mov
mov
lcall
push
inc
js
ljmp
pop
sti
loop
mov
pop
mov
ret
dec
jae
nop
insb
fwait
mov
popf
lret
sub
ja
loop
lcall
gs
or
jg
and
push
or
push
mov
movsl
insb
and
sbb
in
fdivr
call
ja
stos
cmpsl
pop
rolb
roll
xor
pop
cmp
jbe
push
mov
pop
out
adc
jns
cld
add
leave
xchg
add
shl
adc
test
or
callw
mov
ficoml
xchg
mov
add
lahf
cmp
sbb
adc
jnp
adc
fucomi
xchg
out
add
test
lea
imul
add
cli
cwtl
add
sarb
mov
and
add
and
mov
nop
lret
testb
lock
xor
mov
jl
nop
push
lods
cli
and
mov
xchg
into
dec
call
xor
cmc
xor
mov
psubd
aam
mov
scas
or
hlt
enter
sbb
and
mov
sbb
out
into
or
sbbl
imull
cli
mov
mov
push
jb
mov
lcall
and
andb
jmp
stos
call
pop
jmp
add
in
adc
divb
call
mov
cmp
pop
in
jo
scas
movsb
or
test
xor
cmp
dec
lahf
jecxz
frstpm(287
ficoms
push
clc
push
push
dec
aam
push
push
jl
outsb
dec
fadds
lea
push
call
aas
cmpsl
adc
push
cmp
add
add
fs
fsubl
rol
mov
dec
lcall
fwait
js
cmp
xchg
clc
fcompl
xlat
aam
dec
sub
subb
scas
stos
push
hlt
and
mov
lods
js
mov
cs
dec
mov
mov
rorb
push
or
and
rcll
daa
push
testl
aad
cwtl
add
arpl
out
or
insl
dec
mov
inc
or
mov
filds
xchg
mov
nop
call
imul
ja
cmp
fcomp
cmp
pop
push
dec
xlat
cld
ficoms
mov
mov
rcl
jnp
inc
add
hlt
add
add
popf
mov
mov
cli
lds
stos
gs
rorl
popa
lods
xchg
in
mov
shl
in
jmp
sbb
ljmp
and
adc
sti
std
xchg
adc
lea
push
jo
scas
in
cmpsb
jnp
popa
or
lret
xchg
popa
lock
mov
data16
lcall
iret
lods
xchg
xchg
xchg
inc
pop
fbstp
das
inc
les
sahf
ja
es
adc
test
andps
into
add
jl
in
sbb
cmp
fidivrs
mov
ret
dec
in
hlt
lcall
ret
addr16
cmp
inc
clc
mov
lcall
lea
xor
int3
add
fwait
add
outsl
adc
and
stc
xor
test
adc
sub
xchg
or
and
rclb
jno
xor
dec
adc
cmp
lods
test
test
add
mov
push
inc
xorb
cs
popf
test
loope
insb
pushf
mov
lock
xchg
cmpsl
mov
add
scas
or
icebp
loope
push
inc
aas
jo
sahf
pop
or
lods
xchg
js
in
sub
dec
insl
iret
add
push
test
adc
add
xor
mov
outsl
ljmp
and
or
cli
test
clc
mov
jmp
or
pop
sbb
mov
xor
mov
sahf
lock
pop
orb
test
xchg
pop
xchg
ljmp
sarb
repnz
fiadds
addb
lea
hlt
add
repz
add
mov
xor
xorl
sub
push
xchg
ret
and
xchg
add
stos
xchg
pushf
pop
scas
or
mov
sbb
repz
faddl
push
adc
pop
mov
in
push
or
push
dec
mov
inc
repnz
push
push
jnp
add
push
adc
add
fstpl
out
insb
out
sbb
cltd
ds
push
inc
cmp
adc
or
inc
push
cmp
je
std
popa
inc
cmp
xchg
push
or
sub
sar
add
xchg
test
xor
enter
add
mov
jecxz
out
cli
mov
adc
aam
pop
push
inc
push
sbb
xchg
add
mov
push
sbb
xchg
ss
andl
dec
ret
inc
imul
popa
rcll
xor
hlt
xchg
dec
cmp
imull
out
pop
adc
push
xchg
jne
in
mulps
xchg
jge
aad
out
lods
push
shrb
or
stc
sti
inc
or
pushf
or
push
inc
fsts
rcrb
mov
js
xor
push
mov
shrl
jle
xlat
ss
cmc
clc
or
loope
xor
ss
and
mov
cli
pop
imul
jbe
negl
std
shlb
in
or
faddl
cmpsb
inc
outsb
push
mov
pop
mov
and
pop
cwtl
lret
mov
sbb
or
jge
jns
movsl
mov
add
imull
rcrl
aam
xchg
jl
sbb
or
cwtl
add
pop
mov
pmaddwd
lock
aaa
lock
push
inc
pop
push
je
cmp
xchg
jmp
dec
mov
mov
sbb
mov
cmovo
sbb
mov
call
rclb
pop
adc
ret
adc
adc
loope
bsr
adc
jbe
in
outsb
enter
pop
loopne
xor
jns
or
lea
push
xchg
cli
int
or
sahf
pop
cwtl
stos
aas
aad
pushf
or
gs
sbb
cld
inc
inc
repz
push
lcall
cmp
lahf
mov
call
andb
adc
push
in
xchg
out
sti
lock
test
add
in
jbe
adc
mov
out
or
fld
add
mov
in
arpl
mov
out
dec
bound
mov
cmc
and
cmp
mov
shrb
fwait
mov
movsl
test
ljmp
pop
push
loope
xchg
mov
or
js
jne
push
pop
cmp
push
jecxz
mov
sbb
ds
or
shll
loop
pushf
add
or
mov
int
jnp
lods
mov
pop
cmp
mov
cmp
ret
enter
jae
aam
es
cmp
fisubl
jb
adc
dec
ljmp
sub
xorb
iret
lock
cmc
pop
dec
std
addl
cli
and
sbb
push
imul
fwait
adc
movsb
cmp
movsl
fldt
xor
sub
in
add
inc
mov
pop
jns
sub
mov
mov
mov
into
adc
dec
fidivrs
sub
jge
push
cmp
mov
outsl
jmp
xchg
jl
aam
popf
scas
jl
pop
dec
testb
aaa
sbb
sbb
stos
imul
js,pt
sbb
adc
and
add
jmp
mov
addb
adcl
mov
xchg
fsubl
cmp
repz
in
mov
mov
ljmp
pop
cwtl
mov
or
dec
or
repz
fadds
js,pt
pop
add
and
cmpsl
subb
cltd
push
xor
stos
arpl
xor
cmp
adc
inc
in
inc
pop
and
in
cli
push
sub
in
mov
dec
add
or
sbb
add
mov
js
mov
inc
rcrb
ficoml
fisubrl
sahf
or
cmpsb
rorb
incl
mov
or
enter
add
jne
or
movb
jmp
adc
loop
xor
ljmp
sbb
lret
xchg
cld
lret
das
add
inc
stos
fbld
and
inc
and
les
and
add
add
cmp
pop
adc
add
testl
mov
jns
xor
enter
or
add
add
inc
in
cmp
ds
add
test
mov
mov
cmpsl
ds
adc
cmp
jle
repz
inc
scas
repz
mov
test
int3
pop
jo
sub
lcall
lret
dec
mov
jo
rolb
fcompl
out
adc
lods
jo
mov
daa
dec
mov
std
addl
jb
pop
mov
xchg
cmp
jmp
stos
lret
inc
xor
jecxz
jle
shll
xchg
out
pusha
or
mov
cmp
xor
lock
cmp
mov
shrb
mov
clc
imul
sub
dec
pop
lret
pshufw
jp
lds
add
shr
pop
dec
es
and
lahf
add
mov
xchg
jecxz
insl
add
rorb
sahf
ficompl
sbb
mov
test
cs
lret
push
cmp
in
int
loop
add
out
lcall
pop
leave
sarb
cwtl
xchg
out
lret
movsb
cmp
push
fmulp
lret
xchg
mov
push
stos
jo
andps
adc
or
cmp
das
cmc
mov
sbb
test
into
in
and
adc
or
in
flds
sub
pop
das
push
sub
cmp
negb
lods
int
aad
jmp
dec
test
inc
ljmp
call
push
pop
push
or
aas
shll
jo
ljmp
mov
lea
notb
mov
sbb
mov
dec
or
add
mov
sahf
iret
cmpsb
popf
cmpb
push
ja
sub
push
push
and
hlt
scas
add
roll
adc
dec
cmc
shl
aaa
add
int
xchg
sub
rorb
pusha
mov
sahf
sbb
aas
xchg
movsl
add
pop
push
scas
dec
mov
icebp
adc
xchg
mov
test
movsb
pop
xchg
in
in
mov
push
jbe
jge
lret
mov
mov
pmaxsw
jle
cmp
dec
adc
mov
pusha
movsb
jg
adc
sbb
add
ret
scas
xchg
popa
aaa
pop
cs
xor
pushf
test
pop
jns
xchg
aam
frstor
mov
ljmp
add
mov
sbb
rcl
xor
or
movsl
or
enter
adc
ljmp
fs
in
mov
push
test
inc
adc
rolb
enter
adc
bound
pop
push
mov
inc
es
icebp
lds
mov
cmc
push
test
pushf
inc
or
mulb
xlat
std
push
in
dec
pop
add
add
shrb
stos
loopne
in
ret
jle
pop
rcll
fs
ljmp
fsubs
push
ja
xchg
fwait
sub
push
loope
clc
lahf
sbb
inc
adc
leave
outsb
sbb
outsb
bswap
loopne
add
sbb
pop
sarb
mov
in
sbb
xchg
movsl
mov
xor
scas
jns
clc
mov
mov
mov
cmc
mov
and
adc
mov
xchg
dec
xor
or
push
adc
mov
jle
enter
jecxz
popa
jecxz
cwtl
add
test
xchg
sbb
jp
fcompl
xchg
mov
sti
add
or
jecxz
mov
in
jo
pop
cmp
imul
loopne
addb
xchg
xor
pop
iret
call
cmpsb
insl
call
pop
in
sub
mov
add
ret
add
into
aaa
rcll
sbb
loopne
fimuls
xor
js
adc
inc
jecxz
cmc
xchg
sub
mov
popl
jle
mov
xor
rolb
bound
inc
cmpsl
add
movsl
dec
pop
pop
das
push
mov
lcall
sbb
test
pop
or
mov
or
flds
in
bound
dec
lea
inc
stos
lcall
icebp
fwait
aam
pop
sar
daa
or
sub
addl
cmp
lcall
or
or
imulb
dec
add
ret
shr
sub
sub
movsb
inc
adc
and
faddl
sbb
cmp
add
pop
lcall
clc
std
jnp
inc
pushf
mov
dec
test
and
add
or
test
dec
popf
sbb
push
inc
push
sbb
sub
clc
xchg
mov
sarb
xlat
jne
xor
xchg
in
xchg
add
in
xchg
mov
lret
es
lods
add
aam
push
jl
push
xchg
cwtl
mov
dec
fdivl
mov
cmp
inc
jbe
mov
stos
pop
shll
adc
jl
mov
daa
shlb
mov
cmp
jge
push
push
sub
fisubrs
decl
roll
sbb
icebp
sbb
push
test
movb
push
push
push
and
rolb
fdivs
push
mov
mov
daa
xor
clc
out
xchg
nop
loopne
mov
or
rolb
nop
push
jecxz
fdivs
sub
mov
push
or
mov
push
fcoms
push
lods
por
gs
sub
stc
push
cld
cwtl
adc
push
lea
fiaddl
or
test
icebp
pop
jl
cmp
scas
cmpb
negb
push
add
leave
decl
sub
mov
rcll
std
add
add
cmp
scas
or
or
push
add
add
add
add
pop
cmp
sbb
aaa
add
cltd
add
or
add
mov
or
add
add
mov
adc
push
daa
add
add
mov
add
add
add
add
push
scas
or
imulb
pop
push
mov
adcb
aaa
add
popf
push
adc
pop
daa
push
push
push
in
mov
and
add
or
add
or
sbb
jge
push
add
or
notb
adc
add
add
sub
xor
data16
in
addb
or
jg
lcall
jnp
std
cmpl
add
or
mov
add
mov
add
fbstp
push
mov
daa
sub
or
or
mulb
pop
and
xchg
ret
mov
or
and
pop
test
or
dec
sbb
push
addl
insl
out
orb
or
mov
sbb
add
aaa
inc
xchg
cmp
sbb
pop
add
pusha
pop
xchg
and
sub
iretw
add
xor
sbb
sbb
add
sbb
jbe
pusha
lock
add
daa
push
or
data16
add
or
sahf
mov
jp
or
pop
xor
mov
shrb
inc
ja
xlat
pop
insb
sbb
mov
or
or
mov
push
adc
dec
jle
andb
dec
pfadd
addb
add
pcmpgtb
sbb
sbb
add
pop
or
jl
push
mov
or
add
xor
ss
pop
sahf
pop
adc
add
push
inc
push
or
jb
pop
sbb
jle
or
imul
out
and
dec
dec
or
mov
sub
stos
or
jge
push
mov
pop
xor
add
in
mov
or
adc
adc
sbb
int
or
or
iret
sbb
mov
dec
add
jbe
cmpsl
std
mov
arpl
aas
jp
sbb
push
adc
mov
add
or
roll
add
and
add
jl
add
adc
outsb
pop
mov
sbb
mov
push
xor
aad
scas
pop
pop
or
cmp
or
mov
push
xor
out
fldl2t
lcall
adc
sahf
jecxz
or
add
xor
addl
pop
addr16
shll
adc
inc
xchg
xorl
bound
or
push
add
or
mov
invd
sbb
push
adc
mov
sbb
add
stos
xlat
pop
adc
adc
out
push
push
pop
xchg
ds
jl
or
inc
pop
ds
add
rorb
pop
fisttpl
scas
push
rep
inc
push
xor
and
adc
adc
psadbw
sbb
push
loopne
add
add
push
and
push
or
mov
cmp
adc
jle
and
push
dec
mull
jae
scas
xor
fstpt
push
push
or
push
mov
xchg
or
fmuls
cmp
jle
sub
jne
nopl
or
insb
pop
jns
or
or
push
and
or
or
mov
or
aad
pop
arpl
das
add
push
mov
out
lahf
or
repnz
add
je
fisubs
out
add
add
mov
xor
scas
aaa
or
scas
addb
xchg
and
dec
icebp
xor
jo
and
xchg
mov
pop
add
jbe
mov
scas
and
mov
add
inc
dec
pop
bound
pop
push
jo
mov
dec
sbb
ret
jecxz
mov
es
notl
push
mov
pop
pop
mov
daa
stos
or
data16
xchg
daa
add
and
mov
rcll
daa
mov
push
pop
xchg
mov
popa
push
or
mov
or
push
lods
loopne
shlb
push
ss
daa
mov
sahf
dec
lock
xor
mov
dec
js
push
adc
loope
xor
add
sarl
ds
pop
push
or
test
mov
loop
jbe
sub
push
add
mov
add
inc
add
in
mov
cmp
fcomps
add
ret
add
sbb
push
mov
or
sub
rcrb
jae
es
xchg
or
bound
push
add
pop
int3
test
adc
arpl
or
mov
xor
sub
sub
fidivl
sub
add
cmp
or
jnp
loope
stc
pop
addl
scas
adc
pop
adc
in
adc
out
loop
lret
loope
dec
mov
pop
push
and
pusha
ds
das
mov
jnp
addr16
jae
add
sub
jo
mov
popa
je
inc
ja
push
fs
adc
add
sbb
sbb
sti
push
cltd
sbb
sti
or
js
pop
pushf
sbb
jg
or
insl
pop
mov
pop
cwtl
jle
in
push
cltd
cmpl
or
or
cwtl
mov
loopne
mov
les
jg
push
in
add
mov
xchg
mov
or
push
adc
shlb
adc
or
sbb
fdivl
mov
test
dec
sub
mov
mov
in
add
inc
shll
pop
andb
scas
inc
into
test
imul
addr16
sti
xchg
adc
ljmp
pop
and
adc
cwtl
jge
xor
inc
xlat
adc
sub
inc
xchg
cmp
enter
mov
pop
push
add
or
pop
xchg
call
adc
in
or
adc
cmovb
in
mov
add
ud2
jnp
mov
mov
movsb
les
adc
cmp
lcall
cs
xchg
mov
or
ljmp
or
sbb
in
adc
xlat
push
add
and
xchg
lea
ds
clc
or
rcrl
push
push
lcall
bound
sbb
add
pop
popa
addl
mov
call
jne
fmuls
jmp
test
daa
or
ret
rolb
xchg
sbb
push
fldl
or
mov
adcb
add
xchg
add
jl
fnstcw
inc
rcrl
fimuls
xchg
pop
mov
pop
hlt
cmpsb
add
mov
lock
lock
push
or
pusha
mov
mov
jo
xchg
adc
je
push
pusha
xchg
ss
outsl
add
push
sbb
dec
or
adc
push
int3
das
or
xor
int3
dec
inc
sbb
adc
test
add
add
in
add
loop
scas
test
xor
inc
or
add
xor
inc
daa
add
pop
in
pop
adc
imul
in
push
in
test
adc
mov
cmp
mov
std
xchg
add
subb
adc
call
sbb
ret
fisttpl
and
sub
and
mov
nop
push
cmpsb
adc
lds
jns
mov
testb
add
xchg
fiaddl
push
mov
cmp
sub
ljmp
pop
add
stc
lret
push
or
xor
insl
pop
adcb
cmp
sahf
cltd
pusha
or
mov
adc
dec
push
push
push
adc
pop
and
push
adc
enter
movsl
adc
loop
pushf
lods
or
mov
xchg
push
add
add
pop
imul
inc
pop
inc
xor
pop
fwait
loope
xchg
add
xor
and
bound
or
sahf
cmp
push
jo
push
pushf
and
push
sbb
addl
icebp
inc
dec
movsl
pop
add
pop
sub
sub
das
roll
adc
sahf
shlb
xorb
sub
mov
cwtl
in
aaa
cmp
add
jle
pop
out
or
add
dec
cmpsl
inc
pushf
lods
mov
adc
xchg
cmp
jbe
into
imul
push
sbb
dec
jo
inc
test
lods
sbb
sbb
push
lock
pushf
and
adc
sbb
sbb
push
adc
push
mov
ss
fstpt
add
push
stos
xor
shll
es
jnp
idivb
push
xchg
nop
lret
and
outsb
xor
cmp
jle
or
adc
xchg
loopne
sub
shlb
adc
add
and
pop
loopne
loop
adc
movl
fimull
mov
push
sub
jb
orl
add
mov
mov
pop
xchg
mov
mov
mov
das
jle
or
sbb
sbb
add
scas
add
ror
js
or
push
mov
fdivrl
pop
sub
stos
add
mov
sbb
cs
sbb
jecxz
xchg
int3
mov
cmp
loop
fdivrl
mov
add
inc
and
sbb
mov
cmp
out
inc
fistl
mov
lahf
addr16
or
addb
scas
scas
pop
add
add
pop
mov
inc
cmp
sbb
or
pushf
or
jb,pt
aas
mov
sbb
cli
xor
add
cs
add
loopne
mov
add
adc
push
es
or
add
xor
push
mov
mov
push
cmp
mov
xchg
addb
sub
or
push
adc
pop
fsubrl
aad
pop
mov
sub
inc
lcall
push
lds
sbb
lcall
lret
adc
sbbb
add
dec
inc
mov
or
adc
mov
rorb
and
add
scas
notb
loop
sbb
inc
or
out
arpl
add
xor
push
daa
pop
pop
andb
push
cli
xor
lret
lcall
xor
add
sbb
test
or
out
push
ljmp
inc
lock
cmovb
sbb
xchg
inc
icebp
push
mov
pop
xchg
sub
fisubrl
jne
fmuls
pop
push
lea
cmp
ja
mov
push
sbb
add
and
or
push
push
subl
into
push
adc
pop
in
or
or
xchg
push
or
enter
jne
flds
push
cltd
mov
push
or
add
push
xchg
mov
loope
add
rcll
cmpsl
addr16
adc
roll
adc
idiv
sub
mov
stos
push
adc
or
scas
and
mov
add
sub
mov
testb
pop
pop
or
loop
or
adc
adc
enter
cmp
mov
jmp
add
ret
adc
and
add
sbb
jno
scas
add
add
in
or
adc
add
lods
fsubs
sub
les
push
clc
dec
sub
push
daa
xor
cmc
aam
pop
fs
mov
inc
sbb
repz
mov
clc
imul
scas
jecxz
pusha
mov
mov
adc
out
lds
and
mov
add
add
testl
mov
sub
add
das
inc
adc
enter
mov
add
add
adc
cmc
sti
cmp
lock
inc
and
cmp
add
dec
adcb
jge
lock
mov
sbb
sub
sub
xchg
inc
and
adc
mov
inc
sbb
add
cld
xor
xchg
or
adc
inc
pop
pop
lea
mov
adc
mov
aaa
adc
push
pushf
xchg
sbb
lock
cmp
notl
ffree
insl
inc
or
or
hlt
ret
pop
and
fidivl
and
hlt
in
cmc
test
int3
test
push
push
adc
push
adc
lods
push
out
insb
fdivl
cmp
mov
jecxz
nop
mov
or
dec
cs
xorl
dec
xor
orb
mov
add
cmp
or
adc
mov
add
movb
sub
sbb
xchg
sub
cltd
sahf
dec
xor
and
in
loope
pop
mov
cmp
sbb
test
or
aam
sbb
mov
in
mov
inc
rclb
sub
push
xchg
adc
movsb
cmp
add
loope
pop
outsl
mov
jp
sub
loope
gs
add
jmp
scas
push
push
jb
mov
xor
aad
xor
repz
stos
mov
or
jle
pop
xor
clc
in
add
xchg
sub
out
pop
sub
test
out
ret
adc
loopne
pop
icebp
divl
insl
andl
cmp
mov
repnz
and
xchg
inc
or
push
aaa
ret
insl
adc
sub
mov
and
rorl
and
pusha
jb
test
fcmovu
xchg
xchg
add
fwait
add
addr16
sbb
and
fldl
pop
and
adc
les
inc
jl
adc
and
addl
movsb
or
or
fimuls
sbb
outsl
pop
inc
ja
push
data16
and
xchg
inc
adc
add
je
lock
or
stos
xor
add
dec
movsl
xchg
shrb
add
stc
jns
xchg
pop
mov
or
sbb
sub
pusha
shl
cmpsl
add
cmpsl
xor
inc
adc
push
es
push
imul
xor
adc
jb
divl
push
and
aaa
dec
jnp
dec
pop
xchg
sub
jo
cmp
rorb
sbb
insb
mov
lea
scas
sti
insl
fs
lcall
pop
lds
mov
push
mov
pop
insb
push
addr16
cmp
mov
cmp
sbb
xor
rcll
xorl
push
sahf
lock
je
mov
inc
pop
pop
lock
inc
sbb
or
movsb
fistpl
das
push
mov
push
jns
inc
mov
add
test
and
mov
jecxz
enter
popa
cld
or
popf
into
mov
cmp
in
addb
sbbb
or
inc
loopne
rcll
nop
xchg
clc
popa
cwtl
inc
mov
pop
lahf
sbb
ss
sbb
cmp
pop
push
bound
adc
or
mov
sbb
push
cmp
sbb
or
or
aam
cmp
sub
rcrb
orl
inc
cmp
adc
push
cmp
lods
std
test
data16
xchg
adc
in
insb
adc
ret
jne
cld
pop
mov
das
pop
cwtl
sub
xor
movsb
hlt
add
mov
sbb
sub
lock
leave
sbb
sub
sbbl
es
in
or
rcll
pmullw
add
fldt
add
mov
add
movsb
add
fmull
int3
cli
shlb
adc
push
out
pop
mov
or
and
roll
outsb
arpl
dec
loopne
fisubrl
push
ja
add
dec
aas
mov
insl
cmpsb
sbb
sbb
cmp
add
les
add
sbb
add
sub
loopne
xchg
scas
cmpsl
insl
adc
pushf
jge
icebp
sub
sub
pop
inc
js
out
pusha
dec
add
or
cs
cmp
setne
push
jbe
daa
lcall
xor
pop
sbb
sub
cmp
xor
pop
test
mov
or
mulb
cmp
xor
add
cld
sub
daa
adc
mov
adc
repnz
stos
push
or
or
loop
push
mov
push
cmc
xchg
lds
sub
add
adc
sbb
xorl
nop
pop
int3
add
pop
arpl
roll
add
js
jecxz
jne
push
sbb
add
adc
sbb
sub
push
test
or
fnstsw
in
mov
mov
adc
adc
jbe
push
adc
mov
test
sbb
stos
iret
lds
mov
cmp
je
and
add
mov
add
add
test
sbbb
lcall
jne
mov
rorb
dec
or
mov
ficomps
sub
push
dec
lods
add
insb
xor
xor
aad
nop
imul
dec
xor
or
scas
ja
sub
xlat
adc
aad
je
add
or
or
arpl
jb
mov
and
xchg
push
or
mov
sbb
ret
mov
adc
add
dec
rcrb
ds
adc
and
add
cmp
shrb
or
or
push
shlb
add
xor
loope
mov
std
into
jle
mov
cmp
mov
mov
or
dec
pop
and
jg
hlt
or
scas
outsl
mov
sbb
add
push
dec
ja
xchg
cmp
or
in
jecxz
dec
dec
push
lea
repz
mov
sarb
in
lea
xor
unpcklps
lock
add
mov
or
test
subl
pop
paddusw
or
test
mull
lock
adc
cs
sahf
cmp
pushf
push
pop
push
pmulhuw
rcrb
push
outsb
pop
push
repnz
ret
test
and
or
sub
adc
sbb
xchg
popa
and
outsb
or
cmpsb
adc
mov
fwait
sbb
sub
lds
sub
add
or
sbb
push
cmp
adc
movhps
lods
mov
xor
xor
mov
rolb
xor
sbbb
lret
add
push
pop
daa
loopne
aad
or
ss
cmp
cli
inc
sbb
pusha
xchg
in
add
cmp
push
sbb
push
mov
data16
rorl
add
pop
adc
push
push
push
adc
test
dec
adc
adc
pop
mov
loopne
mov
push
adc
shrl
dec
mov
out
into
add
add
les
ret
push
lods
push
cmpsb
scas
loope
inc
and
rolb
adc
or
imul
add
mov
adc
xor
pop
fsubrl
repnz
sub
nop
mov
or
pop
and
movl
xor
faddp
push
jbe
rorb
add
mov
mov
and
and
add
cmp
push
aaa
mov
or
xchg
ret
sub
inc
sbb
and
add
mov
fsubrl
scas
lahf
dec
test
stos
cmp
jnp
mov
mov
lods
push
mov
loop
and
add
mov
add
lret
aad
jmp
jp
sub
mov
dec
sub
mov
test
adc
outsl
cltd
jo
das
fisubrl
pop
and
notb
xor
loopne
pop
mov
pandn
push
adc
shll
popa
sub
test
ficomps
aam
pop
xchg
cmpsb
jo
add
add
inc
sbb
adc
xchg
pusha
mov
or
pop
pop
cmp
test
sahf
fmuls
pop
mov
add
xor
sbbl
add
testb
pusha
mov
sub
cmc
jo
out
rolb
out
sbb
sub
xor
stos
mov
in
mov
adc
ds
push
fiadds
jns
push
push
sbb
sub
ss
dec
or
pop
add
dec
sub
test
mov
into
push
lea
outsb
mov
jecxz
push
mov
cmovae
or
push
mov
add
and
outsb
cmp
inc
arpl
addb
xor
mov
sbb
mov
aad
adc
mov
push
or
adc
fcomp
dec
pop
es
push
adc
lcall
sbb
or
adc
mov
flds
dec
outsl
push
fadds
sbb
or
movsl
or
mov
xchg
add
fwait
sahf
mov
das
cs
ret
mov
test
xlat
pop
emms
or
lods
mov
mov
je
jae
sbb
push
xor
xchg
mov
cs
or
jp
pop
sub
ss
adc
flds
inc
push
scas
ficoml
mov
pop
in
add
add
ffreep
imul
outsl
push
sbb
sbb
jbe
js
sub
adc
cmp
adc
push
pop
fsubrl
add
rcll
mov
fcoml
and
or
stos
push
movd
outsb
test
outsl
and
imul
pop
or
jl
call
sbb
sub
add
stos
shl
add
popa
test
rorl
xor
add
jnp
mov
sub
ja
out
outsl
jns
xorb
jae
fiaddl
es
push
dec
cmpsb
mov
sbb
ret
adc
inc
loope
icebp
sub
cli
jnp
pushf
pop
add
rcll
testb
mov
test
out
imul
xchg
pop
and
lods
xor
push
inc
mov
aad
push
adc
and
test
fisttpl
add
pop
push
cmp
push
push
sbbb
and
fstps
push
push
push
sarb
fwait
pop
inc
mov
xchg
jecxz
sar
fisubl
mov
cmpsb
push
jg
pop
jp
cmp
daa
inc
mov
mov
sub
out
rcrb
and
data16
repnz
mov
ret
aam
lcall
inc
in
lods
lods
sbb
push
add
ucomiss
repz
add
adc
xchg
ret
xorb
and
clts
movsb
data16
shlb
sub
xchg
loope
mov
dec
or
stos
cmpsb
inc
jne
jmp
shrb
or
sbb
jp
cmp
add
mov
repnz
jo
mov
lret
inc
mov
sbb
popa
int
or
js
jne
ljmp
decl
xor
jbe
add
inc
inc
xor
bound
sub
jnp
jno
or
push
add
dec
and
or
adc
sbb
ret
xchg
sbb
arpl
push
pop
xchg
mov
es
cmpsl
or
fidivl
dec
mov
sbb
mov
lock
sahf
add
pop
xor
mov
cltd
sbb
push
and
sub
stos
add
jbe
dec
pop
scas
cmp
jne
pop
pop
sub
sbb
pop
pop
ljmp
push
clc
or
or
mov
std
int3
push
mov
xor
mov
dec
cmp
dec
test
pusha
cmp
mov
jecxz
cs
cmpsb
and
aaa
adc
fwait
push
push
adc
mov
in
or
mov
sub
hlt
push
adc
rolb
dec
outsl
sbb
adc
or
or
pop
outsb
cmp
sbb
sti
pminub
adc
dec
int
lahf
or
push
sti
arpl
adc
inc
or
sub
loopne
add
adc
sahf
cmpb
cmp
pop
xchg
xchg
pop
mov
ret
iret
add
adc
repnz
add
adc
popf
or
mov
lret
add
mov
and
fwait
sbb
outsl
and
add
sbb
xor
das
xor
sub
cmp
rcrl
sti
sbbb
and
mov
lock
mov
inc
mov
jnp
stos
mov
addr16
xchg
out
pusha
insb
jns
push
xchg
dec
push
cmp
imul
fs
loop
xor
incb
add
push
in
dec
mov
pop
imul
ficomps
sbb
push
rcrb
ljmp
mov
data16
rcl
cli
popa
cmpsb
inc
mov
dec
lcall
rolb
aaa
rcrl
or
das
add
xor
test
cmp
dec
jbe
or
packuswb
and
fisubs
mov
adc
mov
jmp
inc
inc
pop
and
cmp
pop
push
inc
jecxz
sahf
adc
jb
es
lret
mov
subb
pslld
sbb
jge
cmp
inc
push
leave
sub
es
and
xor
loopne
push
mov
in
xor
sahf
inc
push
jbe
inc
cwtl
add
or
cmp
adc
aad
xchg
test
and
xlat
mov
mov
adc
mov
adc
xor
subb
call
push
js
mov
sub
sbb
add
mov
mov
pop
lret
pop
pop
and
xchg
adc
or
icebp
xor
repz
cmp
jb
cltd
nop
in
sbb
sbb
push
push
adc
loopne
xorl
mov
and
cmp
add
or
cmp
inc
les
sbb
cmpb
nop
loop
iret
sbb
xchg
push
loop,pn
and
inc
imul
mov
rolb
sbb
sahf
test
xchg
loop
je
push
dec
xor
and
fldcw
push
inc
sbb
sbb
mov
cmp
rorl
inc
out
daa
adc
mov
inc
mov
aas
mov
mov
repnz
adc
fimull
xchg
fbstp
mov
adc
ret
mov
pop
adc
push
sbb
pop
push
sbbb
icebp
push
and
cmp
inc
lret
int
sbb
mov
sub
push
aas
adc
or
enter
xchg
daa
and
daa
jnp
and
and
push
or
bound
rcll
repnz
dec
scas
cmpsl
pop
mov
and
push
adc
outsl
hlt
push
or
jg
adc
or
inc
adc
mov
jno
sbb
ss
push
cmp
mov
test
jno
push
bound
scas
xor
insl
xchg
inc
inc
pop
mov
mov
or
push
es
cmp
and
pop
roll
push
and
xchg
adc
lret
inc
and
xchg
cmp
insl
sub
ret
adc
sbb
sbb
push
scas
enter
add
cmp
mov
inc
pop
inc
add
pop
xor
ds
or
pop
xor
sahf
aam
push
mov
adc
or
and
mov
pop
pop
sub
mov
inc
fimull
fildl
cli
dec
cmp
lds
dec
push
or
adc
xor
push
push
xor
add
ret
mov
out
dec
cmp
add
arpl
ja
push
sbbb
adc
ds
mov
stos
or
cmp
xchg
add
push
xor
loope
sbb
es
mov
sbb
outsb
ds
fcoms
ud2
das
or
mov
fidivs
scas
lds
loope
mov
push
mov
pop
jmp
aad
jo
dec
daa
push
push
inc
push
sub
mov
test
pop
daa
sub
cs
sub
add
dec
bound
test
mov
mov
adc
dec
push
xchg
sub
push
push
mov
jbe
sub
adc
adc
fiadds
loop
adc
ficompl
sti
adcl
sub
jo
inc
pop
cs
mov
adc
out
pop
outsb
dec
xor
enter
xchg
add
pop
jae
add
pop
mov
push
movb
xor
cs
aam
dec
cmpsl
outsb
adc
cs
addr16
test
test
loop
sbb
or
mov
or
test
sbb
dec
inc
inc
bound
xor
rorb
jne
aas
mov
add
arpl
aaa
pop
mov
sbb
ret
or
xchg
push
ret
addl
popf
push
popf
or
and
stos
add
das
or
sub
mov
jo
movb
jne
xchg
xor
add
push
cmp
lret
push
pop
and
mov
sbb
add
inc
sub
xor
or
jp
jb
int
or
sbb
or
adc
add
pop
test
lods
addr16
imul
pop
push
jp
xchg
adc
add
shlb
jbe
scas
pop
adc
das
or
xchg
xchg
adc
or
js
or
jnp
adc
inc
imul
fisubl
mov
test
insl
adc
test
divb
or
sub
cmp
or
aas
or
xor
ds
jp
arpl
mov
xorl
add
inc
loope
enter
push
mov
add
scas
push
pop
adc
add
and
add
inc
popa
inc
cltd
lcall
sub
push
or
jbe
or
daa
xchg
push
cmp
xchg
pop
add
xor
arpl
popf
das
aad
std
xor
outsb
xchg
or
rcpps
lcall
sbb
push
adc
sbb
push
add
or
inc
cli
sub
or
ret
or
inc
sub
and
inc
fxrstor
add
ror
cmpsb
mov
insb
adc
mov
adc
mov
addr16
dec
jge
arpl
lods
hlt
pop
xchg
jo
mov
daa
stos
add
arpl
push
imul
ds
xor
add
push
insb
sub
subb
push
mov
push
inc
call
sbb
cmpsl
dec
or
push
push
add
add
xchg
inc
inc
or
fidivrs
xchg
sbb
out
ja
or
sub
or
pop
fldcw
ds
cmp
es
sbb
xchg
loop
add
cmpsb
xchg
push
sbbb
into
add
mov
fldt
mov
sti
add
add
data16
cmp
mov
pop
push
or
cli
dec
or
pop
lods
sbb
mov
pushl
mov
notb
inc
xor
and
les
push
fistps
andb
lods
add
outsb
test
or
adc
ret
mov
sub
fiadds
jmp
bound
sub
sbb
mov
add
push
or
popf
add
and
or
add
ja
pop
cmpsb
xchg
xchg
mov
adc
pop
rorb
insl
test
lods
adc
xchg
ret
cmp
adc
and
inc
or
mov
nop
sbb
ja
cmpl
lret
inc
jae
jp
adc
xchg
xor
loop
test
jns
sub
cmpsb
xor
in
cmpsl
popa
push
pushf
mov
push
add
das
or
fwait
in
and
or
test
or
jp
stc
sub
les
dec
mov
push
sbb
or
sbb
add
and
push
ljmp
push
rclb
jge
push
and
scas
mov
faddp
inc
cmpsl
clc
inc
add
jbe
dec
mov
repnz
es
addr16
and
xor
add
inc
push
add
jo
add
fbstp
scas
sbb
add
mov
pop
and
pusha
inc
arpl
lret
push
xor
rcrl
cmpsl
add
testl
nop
sahf
sahf
adc
rdtsc
mov
adc
dec
arpl
popa
adc
xchg
pop
or
ss
sbb
jnp
fstps
rcrb
jl
cmovae
add
jne
sbb
inc
punpcklwd
fimull
movl
adc
data16
push
cmp
popa
dec
jbe
pop
and
push
and
stos
push
adc
sbb
pop
add
mov
call
xlat
stos
lea
ss
jb
pop
into
rcrl
add
sahf
add
sti
xor
mov
cmpsl
mov
mov
fidivrl
push
roll
jmp
das
es
stc
or
pop
xor
adc
add
add
popf
cmc
sub
nop
stos
sub
scas
xor
pop
pop
push
adc
xor
inc
notb
out
push
loop
mov
add
push
cmp
and
jle
adc
pop
mov
into
sub
cmp
inc
jne
dec
push
mov
jbe
shrb
mov
mov
mov
js
data16
xchg
movsb
aam
pop
mov
dec
jb
fidivrs
popa
sub
mov
sbb
sub
and
mov
inc
mov
or
ret
loope
jne
and
fdivs
adc
and
add
cmp
or
sbb
mov
inc
cmp
xor
cmp
fisubl
xor
stos
and
outsb
mov
push
jle
adc
test
xchg
pop
rcl
dec
sub
add
or
test
sbb
pusha
xchg
fidivs
and
lock
xor
es
sub
cmp
mov
dec
mov
cmpsb
sbb
xchg
xor
mov
sub
or
cli
jmp
fimull
mov
or
dec
cmp
cli
jp
cmpsl
adc
sti
mov
mov
push
pop
cmp
xchg
cli
sbb
pminub
sub
pop
push
outsl
imul
push
cs
push
js
jbe
daa
clc
jp
testl
push
add
mov
adc
push
loope
add
aaa
add
pop
add
jp
inc
or
jo
mov
xor
and
ds
mov
or
or
shlb
sbb
inc
add
sbb
mov
mov
or
adc
jnp
aaa
and
sub
mov
or
mov
push
push
dec
cli
or
popl
add
cmp
cmp
pop
jnp
mov
dec
scas
add
adc
xchg
push
sbb
lock
adc
lods
sbb
cmp
mov
popa
adc
push
sarb
inc
imul
loope
mov
scas
sub
pusha
lock
add
xchg
inc
mov
xor
xor
icebp
add
and
pusha
mov
add
or
lods
sub
sub
xchg
sub
fisttpll
rorb
mov
and
push
mov
das
cmp
rclb
jns
dec
or
test
adc
adc
loope
adc
cmpsl
add
add
pop
sbb
or
sub
mov
and
or
sub
add
xchg
or
out
adc
enter
das
mov
shrb
out
and
push
inc
mov
mov
sarl
inc
lret
inc
dec
sub
or
add
add
add
adc
sahf
pop
loope
sbb
mov
andb
movsb
adc
cmp
xlat
dec
inc
outsb
rcll
sbb
push
aas
cmpsb
inc
fsubp
add
scas
daa
stc
or
push
and
mov
and
stc
add
mov
ja
add
mov
pop
xchg
mov
roll
xor
and
or
mov
xor
fwait
or
adc
and
ret
mov
and
ret
pop
cmp
enter
adc
adc
ljmp
stos
test
pop
aas
dec
xlat
add
inc
fst
jbe
cs
sub
xchg
bound
sbb
icebp
popf
sahf
inc
daa
jmp
and
in
sbb
subps
jns
jp
mov
cmp
lea
push
mov
shlb
sbb
inc
or
rolb
in
jno
cmp
pop
adc
jl
and
mov
or
imul
sbb
sub
cmp
cltd
inc
shl
sbb
xor
jp
mov
das
push
into
cmp
into
or
inc
ret
popf
stc
xor
sub
shrb
jl
mov
mov
out
decb
mov
sbb
insb
movsl
popa
pop
test
pop
sbb
popf
loopne
jne
leave
adc
sbb
add
inc
mov
out
sbb
lods
sbb
dec
xor
in
lods
insl
mov
ds
scas
addb
add
sbb
sub
data16
pop
sbb
sub
test
loopne
mov
pop
stos
shrl
mov
inc
add
push
or
jmp
xchg
mov
test
or
ljmp
add
xchg
ret
lods
imul
push
and
fildl
xchg
pop
push
inc
add
out
dec
mov
loopne
fisubs
lret
or
inc
daa
adc
jnp
mov
insl
or
adc
push
dec
sbb
dec
pusha
cwtl
lret
mov
into
lock
xchg
or
fimull
into
cmp
add
pop
pop
adc
fsubl
inc
dec
sbb
scas
cmp
pop
or
pop
dec
mov
sub
mov
adc
sbb
cmpsl
hlt
xchg
sbb
add
cmpsl
mov
sbb
pop
rclb
sarl
sbb
xor
adc
and
adc
sbb
aad
fcoms
push
loope
enter
cmpl
lahf
movsl
sub
adc
cmp
loopne
int3
lahf
xchg
mov
ljmp
sub
and
add
faddp
xchg
inc
fwait
sbb
dec
shl
test
sbb
sbb
in
sbb
and
or
mov
das
fnsave
test
mov
xchg
and
int3
or
cmp
and
test
jno,pn
xorl
xchg
sbb
sbb
add
nop
pop
mov
fmuls
adc
dec
movsl
std
inc
sbb
xchg
xor
dec
add
nop
add
or
jl
and
push
insb
enter
add
ret
cmp
sbb
xlat
jae
inc
inc
jl
icebp
aam
or
cmp
mov
imul
add
xor
arpl
jne
cmp
icebp
pop
mov
sbb
mov
add
pop
cmp
test
add
adc
call
jmp
add
rorl
or
push
enter
or
adc
notl
popf
jl
imull
adc
jmp
sbb
jno
pop
icebp
jno
sub
inc
pop
adc
dec
add
and
test
shrl
ret
sbb
adc
repz
add
jmp
scas
dec
and
pop
mov
and
jl
outsb
test
test
mov
ss
dec
lock
ds
outsb
push
inc
cmp
sub
jecxz
mov
dec
xor
mov
orl
adc
aas
mov
daa
mov
js
or
add
mov
inc
and
and
add
rorb
and
ljmp
or
and
les
mov
push
cmp
daa
xchg
and
in
aam
push
sub
fmuls
adcb
add
sbb
jo,pn
mov
dec
xor
mov
loop
mov
adc
adc
in
dec
dec
popf
fcoms
mov
pop
sbb
lods
sbb
flds
add
dec
mov
pop
data16
fmull
dec
sbb
inc
repz
xchg
or
push
out
or
sub
or
sub
sub
pop
dec
inc
cwtl
mov
int3
sbb
adc
bound
adcb
lods
or
test
push
pop
xchg
mov
xchg
pop
add
gs
xchg
cwtl
mov
sbb
lcall
lea
in
add
aam
dec
cld
loop
xchg
rcr
dec
mov
aam
sbbl
mov
ficoms
sbb
or
adc
addl
jge
mov
int3
add
xlat
and
out
andb
fimuls
push
movsb
or
push
int
bound
rcrb
mov
sub
xchg
xchg
or
in
sub
add
xor
pop
cs
dec
xchg
or
or
push
dec
or
inc
or
inc
or
push
add
push
loope
pop
mov
inc
cwtl
mov
and
push
adc
push
loopne
pop
enter
push
outsl
je
pop
sub
dec
test
out
mov
aam
popfw
sbb
test
adc
xor
nop
cmpsb
push
movsl
sub
inc
mov
pushf
xor
imul
ljmp
cmp
aad
push
sbb
or
mov
sbb
sub
or
lret
sub
adc
aas
in
add
movb
push
jo
arpl
cmp
cwtl
sbb
pop
loopne
xchg
pusha
inc
xor
dec
ja
flds
or
push
or
js
jbe
data16
mov
xchg
outsb
fisttpll
mov
aam
mov
call
or
push
pushf
xchg
dec
mov
push
cli
xor
sub
lods
or
ja
imul
pop
shll
mov
push
xchg
fnstcw
stc
sbb
push
or
or
wbinvd
mov
daa
and
ret
mov
push
jl
int
mov
add
cmp
or
pushf
into
add
mov
push
test
mov
mov
popa
sub
orl
sbb
sbb
or
aad
out
inc
es
or
out
sbb
pminsw
movsb
add
sub
push
daa
jnp
lds
sbbb
push
rorb
xchg
jne
adc
cmpsb
push
xchg
mov
adc
movsl
lcall
mov
add
and
or
dec
or
and
sbb
les
mov
mov
push
fwait
push
rolb
pop
fsubr
xchg
sbb
push
push
mov
cmp
sbb
gs
pusha
dec
enter
dec
push
lea
or
je
shrb
mov
add
flds
xchg
fdivrl
inc
pop
adcb
clts
ljmp
inc
mov
push
aaa
mov
jne
push
mov
sub
popf
test
xorb
and
adc
inc
sbb
sbb
sahf
imul
adc
cmp
sbb
pop
cmpsl
aaa
aam
fs
adc
call
push
push
in
or
dec
inc
andps
xorl
mov
sbb
sbb
aad
inc
mov
imul
mov
push
mov
pusha
xor
sbb
aaa
push
xchg
xchg
call
divl
xlat
xchg
jbe
lods
movsl
mov
int3
ret
add
popa
xchg
subps
fstl
rorb
flds
lcall
aaa
jne
or
mov
push
pop
add
push
mov
or
push
sbbl
pop
pushf
icebp
add
pop
jmp
xor
push
repz
xor
add
jg
outsl
pop
into
aas
addl
mov
hlt
arpl
mov
or
in
mov
pop
push
mov
pop
and
mov
adc
cmp
jmp
test
lock
push
xchg
sub
push
mov
sbb
cmc
cmp
push
ljmp
jle
cmpsl
daa
mov
pop
les
loop
inc
ljmp
sbb
push
pop
mov
add
push
rcrl
push
or
dec
out
or
mov
mov
inc
add
xchg
add
cmp
adc
ja
imul
sub
sub
add
pop
pusha
test
out
ret
pop
lcall
jo
cmpsb
jns
sarb
sbb
push
mov
add
adc
sbb
dec
adc
or
xor
sub
inc
sbb
pusha
adc
dec
and
inc
fnstsw
add
cmp
dec
dec
sarb
mov
push
jae
push
pop
imul
xchg
adc
test
jmp
repz
shr
add
mov
add
ficompl
and
ljmp
stos
adc
sbb
push
xchg
add
adc
xor
pop
lret
xchg
sbb
mov
push
insb
adc
outsb
pop
pop
ficoml
sahf
xor
fildl
fcmovbe
loope
cltd
mov
push
sub
cs
js
adc
ss
inc
push
movsl
test
in
stos
les
or
or
icebp
push
mov
pop
push
adc
gs
push
add
sbb
inc
and
out
sbb
out
ret
ret
sub
dec
pushf
cld
loope
stos
xchg
xchg
sbb
mov
jo
cmpsl
inc
dec
lods
and
sarl
xor
or
xchg
xor
jg
out
jne
pop
sti
jmp
push
adc
pusha
mov
or
mov
xchg
or
int3
in
gs
pop
or
int3
and
test
sti
xchg
out
or
sbb
fsub
loop
test
add
jne
pop
subb
addb
xchg
mov
inc
sbb
lock
add
aam
mov
push
mov
dec
add
inc
and
cmc
test
xor
je
sbb
insl
andl
xor
adcb
enter
cwtl
sub
subb
cmp
bound
cltd
and
fisubrl
sub
add
or
insb
or
movsl
je
jno
mov
jns
insb
dec
incb
add
add
push
xchg
fcoml
inc
add
inc
stos
das
or
or
aam
push
and
and
pop
jecxz
pop
mov
jne
dec
ss
pop
pushf
out
pop
mov
enter
loopne
insb
fcmovnb
cs
jo
das
stos
add
cmp
out
fsubs
stc
jne
es
or
cmpsb
shlb
shlb
mov
inc
adc
push
add
and
mov
push
jns
cld
add
and
and
loope,pt
push
or
aaa
xor
mov
inc
pop
add
stos
mov
enter
sbbl
add
xor
dec
xchg
pop
mov
ret
dec
shl
or
hlt
jbe
es
xor
pop
inc
add
cs
inc
dec
pushf
sbb
or
pop
push
mov
loopne
jnp
lret
cmp
cmp
add
xor
lea
add
pop
inc
pop
es
out
sub
jmp
xor
mov
and
test
or
test
mov
sarb
xor
mov
mov
loope
push
inc
lahf
fisttps
push
push
or
inc
sbb
cs
xchg
lret
dec
add
cmp
mov
sarb
pop
sbb
adc
or
or
push
arpl
lods
ss
push
inc
add
adc
xor
nop
loopne
xlat
and
jecxz,pn
in
adc
or
iret
xorl
mov
xchg
mov
loop
pushf
sub
add
jno
push
mov
mov
push
add
xorb
mov
push
ljmp
popa
xchg
jno
xor
xchg
inc
int3
cmp
pop
push
in
mov
sbb
les
dec
push
or
sub
out
and
xchg
sbb
or
in
lods
mov
in
insl
inc
add
dec
sbb
or
push
add
or
push
mov
jo
jb
or
dec
lods
ljmp
repnz
xor
add
pop
dec
in
dec
add
adc
inc
mov
roll
inc
popa
xor
cmpsl
pop
or
loop
mov
out
jb
or
or
out
mov
sub
add
jl
lods
push
dec
out
aam
inc
or
cmc
jmp
incl
and
xor
xchg
ret
rolb
adc
ss
mov
or
push
js
dec
sbb
in
and
sub
and
adc
mov
xor
mov
int3
sbb
xchg
xor
cmp
subps
adc
addb
cs
cmp
mov
mov
or
xor
cli
adc
pop
shlb
fimuls
push
and
scas
inc
pop
add
pop
imul
cmp
inc
mov
aam
lods
sbb
mov
mov
into
and
out
lock
sbb
imul
ret
jb
fs
cwtl
mov
sub
outsl
push
cmc
xor
and
cmp
push
cmp
cmp
aam
rclb
jo
js
sub
adc
adc
add
push
mov
es
mov
popf
movsb
pop
lcall
mov
add
cmc
ficoms
into
sub
sub
fld
xchg
ror
add
pop
lret
push
and
add
add
pop
push
push
and
test
mov
pop
cs
test
or
shlb
pop
mov
add
jne
pusha
push
call
fiadds
cmpsb
jb
inc
loopne
push
or
inc
xchg
inc
jne
or
xchg
xor
jne
es
adc
pop
mov
pop
sub
popa
add
push
testb
test
ret
sti
push
mov
sahf
adc
nop
shlb
neg
add
rclb
dec
pop
mov
loope
lock
sbb
les
call
daa
xchg
repnz
sbb
pop
cmp
add
sbb
add
repnz
popf
mov
push
cmpb
das
sub
and
mov
bound
jle
ret
and
add
fmuls
or
loop
mov
scas
sub
xor
dec
sub
cmp
imul
jne
mov
xchg
jbe
cmp
cmp
mov
lret
ja
dec
outsl
push
ds
scas
in
inc
data16
mov
in
loope
push
jb
ds
ret
xor
popa
mov
mov
and
lcall
or
ret
sbb
pop
xchg
pop
push
or
jo
bswap
cmpsb
lret
xor
out
lock
and
push
ret
sub
or
or
add
hlt
jbe
int
cwtl
pop
add
adc
adc
and
sbb
pop
push
inc
xor
sub
out
lods
pusha
push
jne
and
pop
jb
push
push
push
aaa
inc
fimuls
test
cmp
or
mov
sahf
lcall
mov
add
or
movups
movsb
mov
pop
aaa
inc
mov
das
pop
rcll
sbb
or
pop
or
loope
cmp
pushf
aam
add
xchg
inc
je
iret
inc
sahf
pop
inc
jo
xor
pop
or
sub
pop
int3
or
ja
popf
adc
jno
push
daa
fcoml
jecxz
xchg
sbb
adc
iret
and
arpl
xorb
or
ss
xchg
ret
cmp
test
imul
add
jo
jp
pop
cli
sub
or
xchg
aaa
outsb
add
cmp
js
mov
ss
mull
push
push
cmp
mov
lods
inc
fldcw
xor
sbb
pop
add
mov
dec
or
add
xor
xor
popa
and
ds
xchg
das
out
nop
jp
cmp
lahf
loop
aaa
push
fdivrl
and
mov
xchg
setae
loope
add
add
and
bound
mov
sub
add
shlb
push
scas
mov
cmp
mov
pop
mov
sub
inc
stos
mov
cs
bound
add
cwtl
lea
and
xlat
sarb
mov
or
push
push
adc
test
sbb
aaa
dec
xlat
js
sbb
add
add
or
out
scas
ljmp
cmpl
repnz
sahf
push
js
stos
adc
sarl
in
push
or
dec
push
and
cmp
and
jno
je
pop
xor
cmp
scas
lret
pop
push
fwait
mov
and
repnz
aam
xor
add
jnp
dec
scas
xchg
sbb
sahf
nop
nop
inc
add
fwait
mov
lea
pop
jp
cmpsb
test
mov
push
adc
pop
jne
sbb
mov
sbb
add
lods
and
xchg
jb
dec
add
pop
mov
cs
xchg
je
and
stos
cmove
dec
sbb
fidivs
xor
mov
mov
inc
add
daa
repz
xchg
cmp
and
jecxz
push
and
mov
bound
or
sub
sbb
das
inc
inc
shl
push
divb
mov
push
fiadds
lcall
xor
pushf
jo
sahf
sbbb
mov
mov
paddq
sbb
sbb
inc
sbb
mov
jb
inc
or
jmp
out
out
aaa
jle
pop
jnp
mov
adc
jns
or
into
lcall
cmp
mov
or
test
and
fisubrl
test
sti
rorl
in
mov
loope
mov
sub
add
cmp
loop
xchg
or
or
lods
mov
jbe
testl
dec
push
es
hlt
in
imul
push
rcrb
popa
setb
xchg
ret
cmp
jl
pop
jecxz
dec
sub
xorl
mov
hlt
insb
fs
call
adc
mov
inc
dec
daa
add
ret
xor
or
aaa
pop
cld
sub
sbb
cwtl
cmp
pop
ljmp
push
adc
mov
push
adc
inc
add
es
mov
xchg
inc
jae
xchg
sbb
and
or
bound
pop
cmpsb
ja
dec
push
and
inc
sub
insb
ret
or
push
inc
or
inc
movsl
in
or
or
or
daa
xor
inc
add
add
sub
pusha
movl
js
or
and
xor
inc
push
adc
xchg
xor
insb
cs
sbb
and
mov
loopne
add
and
pop
push
mov
pop
mov
push
popa
adc
inc
cmp
adc
push
add
dec
or
aam
ljmp
test
jp
mov
add
pop
data16
sub
add
ffreep
add
subl
mulb
add
sarb
jnp
or
fisubrs
sub
or
jmp
and
nop
xor
cwtl
mov
adc
cmp
pop
jp
rorb
insb
es
xor
xor
push
and
xchg
pop
or
mov
jp
pop
mov
orl
shrb
sub
xor
adc
sbb
push
and
mov
cmpsl
sbb
adc
scas
sub
stc
and
sub
fcomp
or
fiadds
lar
test
popa
push
add
push
pop
in
ds
or
ret
pusha
mov
sbb
adc
xchg
dec
jnp
push
divb
xor
mov
or
inc
sbb
aam
add
dec
lar
jb
dec
ret
jp
or
mov
mov
mov
imul
adc
mov
jnp
jne
scas
xor
cmp
jmp
sub
cwtl
or
cwtl
adc
dec
push
sub
ret
out
push
lcall
push
add
cmpsl
or
pop
fdiv
loopne
test
sub
les
or
es
push
add
add
daa
xor
dec
pusha
cwtl
daa
leave
test
jmp
add
add
pop
insl
xor
sbb
inc
sarl
and
cmpb
lods
movsl
push
mov
push
adc
jnp
inc
shlb
cwtl
ljmp
nop
xorl
or
aam
or
or
mov
cltd
fiadds
in
sub
mov
xchg
movsb
jae
inc
jae
push
mov
popl
ret
ud1
in
sbb
and
mov
in
push
mov
jnp
sti
in
in
cli
popa
mov
jle
nop
add
or
repnz
aam
add
pop
and
xchg
loopne
fmul
testb
jecxz
sbb
mov
and
jle
dec
or
adcb
xor
cmp
es
aad
call
mov
cld
or
mov
cwtl
jecxz
push
and
mov
stos
add
push
adc
cmpsl
xchg
adc
xor
pop
and
adc
jg
into
or
fcmovnbe
and
pop
mov
xchg
jno
cmp
inc
inc
rolb
jmp
aaa
dec
add
pop
inc
test
lock
clc
loope
jne
addb
pop
add
xor
mov
mov
or
sbb
sub
loopne
sbb
sub
clc
flds
push
or
les
pop
mov
lret
add
lods
inc
xchg
ret
sbb
scas
pop
pop
mov
jmp
add
mov
or
sbb
out
push
je,pn
movsb
pop
pushf
nop
daa
movsl
and
insb
test
dec
mov
adc
add
fimull
xchg
les
xor
or
or
mov
fbld
xlat
pop
and
sbb
or
pop
lar
jb
into
dec
mov
or
sub
add
fbstp
jg
outsb
sub
and
jecxz,pt
mov
sbb
push
or
repz
mov
pop
mov
jo
fidivl
es
outsb
add
scas
pop
push
cld
outsl
add
sub
mov
mov
xor
ss
sub
push
je
fdivrl
mov
fisttpll
sub
xor
test
sbb
xchg
adc
lret
lahf
icebp
add
sbb
mov
and
inc
add
xor
or
or
and
inc
testl
shll
sub
and
or
pusha
adc
pushf
mov
fwait
in
dec
repnz
adc
pop
or
mov
cmp
sbb
push
inc
sbb
popa
adc
adc
lea
cmp
adc
sahf
les
jge
add
pushf
sub
add
push
sub
inc
sbb
xor
sub
jl
outsl
adc
bound
push
pop
push
inc
jbe
inc
aam
bound
dec
push
fnstsw
xor
pop
jl
push
mov
adc
sahf
dec
add
dec
lock
hlt
dec
adc
dec
and
add
enter
in
insl
or
or
das
jl
jno
das
add
dec
gs
jg
sbb
mov
push
mov
scas
test
lret
pushf
sub
inc
mov
cmp
das
add
insl
adc
lea
inc
sbb
mov
push
and
push
stos
jmp
cs
das
adc
add
sbb
xor
sub
pavgb
rol
cwtl
rclb
sbb
xor
add
clc
pop
jmp
shlb
pop
sub
add
and
das
cwtl
addr16
fwait
and
imul
mov
or
jecxz
jl
pusha
in
ljmp
cmp
daa
or
pop
jg
imul
pop
dec
cmpsl
aaa
add
div
jmp
mov
jp
in
fisubrs
aaa
mov
jecxz
jg
or
add
out
in
in
mov
mov
dec
mov
add
mov
ja
add
sub
clc
or
div
pop
shrb
push
mov
jge
sbb
or
negl
xor
push
or
xchg
mov
xor
js
scas
adc
in
lahf
cltd
jmp
jo
pushl
jnp
pminub
add
dec
push
in
fwait
ret
mov
lock
jbe
or
lahf
or
out
ss
sbb
lret
add
repz
mov
aaa
dec
fildll
mov
cmpsb
lea
add
outsb
dec
mov
cmpl
mov
inc
sub
aaa
outsb
testl
mul
imull
daa
cs
push
jnp
mov
aaa
jle
push
fwait
pop
fdivrl
sbb
cs
pop
dec
sub
cmp
cmpsl
ss
or
bound
sti
jge
mov
sub
jge
insb
or
jg
cld
aad
inc
mov
repnz
setle
mov
mov
sbb
fldenv
popf
mov
fidivrs
sub
adc
call
mov
sub
or
adc
adc
lock
mov
sub
lret
pushf
loope
sub
fstl
mov
out
add
and
stc
cmp
lahf
or
or
shll
ja
fcos
lock
int3
xor
mov
ljmp
jl
sub
int
fwait
loop
sub
leave
aas
lahf
sub
outsl
out
or
push
inc
or
jg
insl
jns
ja
lret
in
cltd
imul
ljmp
ds
movb
outsl
lock
repz
cmpsb
sarl
lret
jb
loop
ret
mov
mov
sub
add
divb
clc
pop
sbb
in
fwait
repz
cmp
js
test
sahf
bound
sti
jg
push
inc
cmpsl
jb
pop
push
pop
mov
jmp
push
loop
std
cmp
dec
movsl
mov
ficoml
xchg
xor
pop
sbb
jge
jbe
outsl
mov
xchg
insl
dec
nop
negb
cmpsb
orl
fadds
imul
aas
sub
aas
and
xor
shlb
cmp
addl
push
add
fpatan
push
test
sbb
fld
or
fidivrl
push
comiss
add
popf
scas
add
sub
std
xchg
push
mov
xor
into
jmp
out
mov
cmc
je
xlat
aad
aaa
sahf
sub
xchg
mov
jns
pop
faddp
aaa
push
pop
frstor
jmp
in
negb
popf
add
pop
pusha
das
cwtl
lds
lret
jns
add
xchg
shll
push
sub
fcmovu
jmp
push
pop
repz
inc
orb
and
into
add
std
std
dec
mov
cmp
cmpsl
rorl
movsl
xor
repz
arpl
or
leave
ljmp
push
sti
cmp
cltd
fldt
jp
pushf
lcall
jle
jp
aaa
add
sub
js
pop
cmp
out
loope
popf
pop
mov
jbe
repz
incl
outsl
insb
mov
out
je
aaa
or
pusha
call
outsb
xchg
repnz
cmpsb
ja
cmp
jle
push
and
mov
xor
add
aaa
cmp
cld
jo
lods
sahf
jae
or
dec
out
mov
call
sbb
ds
push
pop
fsubl
imul
lret
jnp
mov
clc
out
jo
xchg
mov
jnp
add
adc
pop
pop
scas
xchg
dec
mov
xor
mov
xchg
pop
mov
jno
or
jle
lods
sbb
jle
out
jl
fxch
pop
add
psubq
jmp
flds
fmul
fcmovb
ret
leave
sbb
fadd
mov
fmulp
fdivr
vshufpd
sbb
ret
lret
xor
rcr
jmp
sahf
stc
sbb
dec
mov
mov
enter
pop
jnp
cmpsl
imul
fidivs
sbb
inc
iret
iret
pop
sbb
xor
imul
iret
ret
iret
fldl
aaa
negb
pop
push
rcrb
jecxz
int
push
sti
mov
out
fisttps
adc
sbb
stc
fld1
lret
mov
sbb
int3
cltd
cwtl
sbb
or
ret
into
sub
fucom
lret
int
lret
int
sar
pop
gs
rcr
iret
sbb
lock
or
and
dec
leave
iret
fisubl
and
sbb
mov
or
mov
ret
iret
add
aaa
push
outsl
mov
mov
adc
and
repnz
lret
enter
pop
clc
iret
int
aas
fcom
ret
jle
fmul
rol
jno
aaa
clc
ffreep
cmp
loope
rol
push
ljmp
div
aas
std
pop
pop
adc
adc
cli
jmp
fcmove
lret
cwtl
add
mov
outsl
test
fcmovu
add
ja
sub
lock
jg
lods
sbb
in
mov
sarl
push
jae
xchg
xor
and
shll
mov
in
mov
push
loopne
or
jecxz
lea
push
imul
call
lcall
xor
dec
mov
jp
in
xlat
loop
xlat
push
sub
push
push
imul
xchg
nop
mov
cmpsb
push
imul
aaa
sbb
jae
xchg
xor
jb
pop
out
in
jg
pop
in
aas
mov
fistl
repz
ret
stos
xor
xor
pusha
jo
sub
test
sbbb
std
imul
cs
or
cmp
mov
lods
sti
test
lahf
and
iret
aas
cmp
mov
outsb
mov
int
add
aaa
outsb
xchg
or
aas
loopne
clc
sub
mov
insb
imul
jl
push
clc
psllw
sub
push
add
pusha
or
jl
push
ja
sub
jp
popa
mov
and
jl
xor
jecxz
or
cld
idiv
and
lahf
fsubrs
xor
jae
add
repz
out
add
inc
jbe
sub
xchg
mov
ss
dec
repnz
fbstp
ss
adc
lds
mov
movsl
jl
aaa
or
cmpsb
int
lret
mov
ss
lock
xor
mov
push
fnstsw
in
or
xor
insl
nop
loopne
aas
xor
or
pop
incl
xchg
fsub
insl
or
sahf
and
lock
cmp
or
mov
jo
sahf
sti
cmp
stos
movsb
push
pop
ljmp
std
lock
xor
dec
jp
push
stc
cmpsb
dec
dec
jecxz
fldenv
cmp
and
shr
clc
aas
pop
push
push
sub
iret
out
test
mov
icebp
testb
or
pop
sahf
sub
pop
daa
bound
inc
add
mov
iret
inc
mov
sahf
mov
cmpsl
out
mov
or
addr16
fstpl
sar
fsub
out
clc
insb
add
or
imul
ret
dec
stos
into
add
xchg
xor
mov
ret
sbb
sub
out
jle
out
jbe
rolb
fnsave
cmpsl
push
dec
xor
cmp
roll
data16
or
std
inc
ss
mov
ret
add
imul
pop
mov
and
decl
lcall
daa
fcmovnb
and
sahf
fisttpll
lea
xor
movsl
xor
and
pop
jp
in
xor
adc
add
or
push
add
pop
pop
ret
addr16
movq
adc
mov
sti
mov
lret
pop
out
popf
ds
cltd
rorb
jmp
cs
ljmp
pop
insl
iret
notb
or
add
xchg
jns
std
addr16
orl
jecxz
rcrl
out
dec
aas
cli
jge
int
ja
movsl
ja
add
jmp
push
xlat
call
dec
scas
lods
inc
enter
xchg
add
xchg
jno
out
out
mov
fistpl
pop
test
sub
cli
sub
in
fs
fstl
fwait
cmp
lar
add
fldl
add
std
addl
mov
jbe
loop
pop
mov
fwait
shlb
or
int
pop
pop
add
push
loop
or
fstpl
dec
or
push
push
stos
test
add
not
popf
loopne
and
mov
std
jg
int
jns
xor
arpl
fucom
ss
aas
xor
nop
ss
test
mov
addb
jmp
cmp
sarb
lea
mov
pop
in
dec
daa
adc
aas
cmp
dec
or
repz
mov
push
xlat
shll
aaa
dec
pop
into
fimuls
jmp
jge
stos
cli
pop
cld
dec
repnz
jecxz
add
pop
jmp
pop
or
sti
popa
and
dec
jae
lods
iret
hlt
push
cmp
outsl
cmp
xor
movsl
add
or
in
jl
jne
stc
add
ffree
in
pop
cmp
mov
into
sub
cwtl
jmp
das
xchg
scas
adc
loopne
xchg
int3
cmpsb
jbe
fists
loopne
aad
into
push
test
dec
stos
xchg
cmp
mov
int
jge
cmc
adc
out
nop
ljmp
hlt
shll
mov
mov
clc
fwait
sahf
adc
fwait
ret
mov
xchg
mov
arpl
xchg
fidivrs
dec
sahf
lods
add
iret
movsl
adc
mov
push
sub
ret
leave
rcrl
adc
loope
push
pop
mov
fwait
sahf
das
adc
rcll
xchg
xor
sbb
movsl
jbe
popf
or
adc
leave
insb
adc
sub
add
int3
rcrb
lcall
in
mov
cmp
sbb
adc
sub
add
hlt
lret
inc
lods
movsl
jo
sub
xor
fwait
xchg
mov
xchg
adc
and
xchg
jns
test
clc
repz
pop
jo
idiv
clc
cmp
add
add
cmp
subl
inc
mov
jle
adc
sub
inc
adc
lea
push
or
fstps
cli
jge
negl
in
or
add
lock
jne
ja
rcrb
and
pop
sbb
mov
imul
scas
xor
add
insl
xchg
fcmovnu
and
sar
cmp
mov
sbb
test
jno
into
pop
ret
xchg
mov
lret
sub
xchg
sbb
or
adc
pop
fmuls
aas
fdivs
push
test
or
insb
mov
sbb
cltd
or
add
or
arpl
neg
dec
sub
mov
sub
pop
jns
xchg
adc
and
pop
mov
in
subl
popa
inc
in
jl
push
cltd
fcmovbe
loope
sbb
out
scas
sub
push
pop
popa
leave
popa
sbb
xchg
popa
popa
mov
popa
jne
mov
adc
lea
mov
cmp
movsb
loope
outsb
mov
push
popa
daa
not
cs
lret
insb
mov
flds
sbb
mov
sub
sbb
fnsave
or
mov
insl
adc
adc
jo
cmc
sbb
loope
dec
sub
loope
js
jnp
inc
pop
add
pushf
testl
pop
sbb
ljmp
cli
pop
mov
aas
cmp
aas
or
sti
imul
cmp
or
jle
cmp
das
mov
testb
arpl
cmp
mov
pop
pusha
or
xor
adc
inc
sbb
insb
mov
les
jle
outsb
cmc
and
js
jmp
aaa
pop
lret
incl
pop
or
xchg
fidivs
lahf
jmp
incl
iret
mov
pop
add
insb
int
stos
jmp
push
out
push
imul
pushf
sbb
and
daa
ret
jae
push
jl
add
int
push
xor
or
and
jg
in
mov
and
out
sahf
ficoml
pop
jno
xchg
test
stos
movsl
or
mov
dec
jns
stos
pop
xor
and
lods
xchg
mov
fwait
sahf
cmp
and
sbb
xor
addb
xchg
ret
sti
rcl
insl
sahf
and
stc
pop
scas
es
leave
in
jbe
std
out
cmp
jl
push
iret
je
out
mov
loope
add
ja
push
xor
lds
push
mov
xor
xchg
sbb
jl
sub
xchg
jo
add
ja
loope
bound
cmpsl
pop
fisttps
jge
fstl
iret
dec
lock
popa
dec
mov
ljmp
push
daa
lret
mov
popa
lock
rolb
in
decl
imul
clc
loope
adc
pop
ret
jb,pt
arpl
fdivrp
inc
jo
mov
je
cmp
in
sbb
jbe
ds
mov
test
sbb
movsl
popf
fsts
adc
call
test
push
mov
int3
cli
xchg
cmpsl
xor
rep
pop
sbb
fcomps
mov
loop
xlat
sti
and
addr16
push
movsl
xchg
je
push
sbb
lea
and
add
repz
repnz
push
xchg
inc
int
ficoml
and
sbb
testl
xchg
arpl
aad
lea
lcall
and
cmp
data16
in
lock
fistl
sbb
into
bound
adc
fdivrl
cmp
stos
xlat
shl
pop
das
xor
lea
add
jb
ret
lret
js
inc
or
mov
dec
mov
decl
cld
cmp
mov
out
sbb
iret
xor
movsb
jo
cmpsl
or
cmpsl
test
or
xor
rclb
mov
mov
mov
adc
loope
mov
movsl
daa
adc
imul
xor
incl
cmp
lret
pop
mov
xor
pop
imul
loope
clc
mov
jno
aad
jbe
jo
lcall
ret
xchg
cmpsb
adc
pop
mov
sbb
sub
pop
aas
pop
add
pop
xchg
dec
add
outsb
inc
sbb
pop
push
lods
pop
xchg
iretw
addr16
jecxz
adc
lock
push
aas
into
pop
imul
daa
decb
sbb
popa
popf
ja
mov
into
sbb
jnp
mov
push
pavgw
xlat
addb
sbb
dec
sbb
aas
lret
shll
dec
mov
xor
es
jmp
pop
sub
add
mov
pop
rolb
or
sti
addr16
stc
int
xor
fcmovbe
sbb
mov
loop
and
dec
and
push
dec
add
cli
xlat
mov
dec
or
xor
leave
push
sbb
mov
iret
jb
adc
sub
cld
andl
movsl
repnz
lods
popf
movsb
subl
into
lods
xor
std
fcmove
jo
xor
popa
ljmp
or
in
xchg
loop
negb
lcall
cmp
mov
popl
cmp
xchg
adc
jnp
cmp
adc
mov
jl
shrb
adc
es
xlat
cltd
mov
push
fisttps
adc
or
int
mov
or
scas
cmp
adc
int3
lock
jnp
lahf
insl
xchg
test
rclb
loope
cmp
mov
clc
or
add
pop
pop
sub
addr16
and
jbe
ficoms
and
test
arpl
aad
rol
cmp
inc
addr16
scas
loop
cli
mov
mov
data16
loope
mov
xor
push
add
rcrl
je
insl
pusha
cmp
cmp
lret
mov
dec
lcall
call
or
pop
pop
sbb
sbb
into
jnp
nop
testb
aaa
add
add
sub
mov
in
or
pop
mov
andb
sub
ret
jbe
pop
pusha
push
mov
xor
mov
jecxz
popf
cmp
clc
mov
daa
faddp
sub
rorl
push
mov
outsl
xor
dec
mov
and
ret
lds
adc
pop
cli
ss
pop
or
fdivrs
in
popf
loop
lret
sar
or
xor
add
adc
fsts
idiv
lock
pop
add
jnp
xor
push
push
sbb
aas
ja
ljmp
mov
or
out
add
xorl
push
ja
ds
mov
shr
sbb
adc
push
jecxz
add
icebp
or
notl
pushf
movsl
icebp
add
pop
dec
jmp
sbb
xchg
lret
cmpsl
xor
int
push
les
dec
cmp
add
mov
xchg
push
scas
pop
mov
enter
cmp
mov
jp
jb
stos
int
dec
pop
test
inc
jbe
je
sbb
aam
sub
or
daa
sahf
dec
fimull
imul
and
mov
xchg
lea
cmp
mov
add
mov
btl
sbb
jg
jb
nop
pop
imul
sbb
lock
test
add
adc
jmp
and
push
loope,pt
pop
xchg
push
ficompl
push
sbb
shrl
jecxz
mov
aaa
sbb
sbb
dec
popf
xchg
xor
adcl
adc
pop
lods
jle
jo
sbb
cs
ljmp
add
jns
mov
mov
pop
adc
adc
lret
inc
aam
mov
cmp
mov
fists
or
lock
cmp
std
loop
sbb
or
jg
cmp
stc
scas
negb
sbb
adc
ljmp
push
cltd
divb
gs
out
sbb
add
jbe
sti
fstp
bound
lcall
in
sub
sbb
cltd
sbb
adc
repnz
ja
adc
mov
call
popf
cmc
push
testb
mov
push
adc
out
insb
dec
cld
adc
push
lret
mov
add
sub
lea
insb
rorl
cmp
shlb
jnp
out
clc
mov
jge
mov
sub
addr16
push
test
xor
imul
push
cmp
jb
jbe
add
fadds
cmp
mov
fisttps
mov
mov
push
inc
rcr
or
std
dec
xor
shr
mov
cmp
mov
push
cld
negl
fcompl
les
add
arpl
mov
fimull
loope
and
call
dec
into
jae
mov
ss
popf
and
fbstp
adc
jns
subl
and
xchg
addr16
decl
test
imul
mov
jge
jo
jecxz
icebp
icebp
lcall
jnp
and
sub
sub
daa
or
out
fisubrl
add
mov
cld
jmp
fsubp
pop
sbb
leave
xor
mov
in
sub
in
and
xor
add
std
jne
dec
mov
pop
push
in
ss
push
loopne
jno
mov
js
sti
sbb
xor
dec
in
int
iret
outsb
pop
pushw
push
iret
xor
pop
sub
aad
or
dec
not
sub
adc
pop
pop
dec
je
aaa
lahf
pop
pop
in
pop
jbe
mov
mov
dec
scas
test
cmp
pop
sahf
ljmp
test
sbb
insb
icebp
adc
mov
sbb
fldcw
cmpsl
test
rolb
sub
ss
pop
pop
adcb
lods
xchg
xchg
pop
das
pop
js
jmp
pop
sub
loopne
pop
lret
loop
in
or
cltd
ret
lock
in
int3
into
repz
fsubs
fmul
xor
pusha
pop
lea
pushf
movsb
xlat
lcall
fnstenv
int
mov
mov
psadbw
fcoms
hlt
imul
and
icebp
fs
adc
push
sub
cmpsl
xchg
aad
loope
push
pop
cmpsb
adc
and
or
cmova
pop
pop
ret
std
not
or
ja
or
add
aad
sbb
push
fisubl
jg
or
mov
mov
pop
fildl
adcl
shrb
pop
mov
orl
dec
stos
pop
xor
jmp
add
decb
scas
adc
sar
aam
or
in
push
out
daa
cld
daa
cld
movb
cld
lock
jl
imul
add
or
jbe
inc
mov
mov
or
pop
pop
adc
xchg
outsl
xor
imul
in
outsb
insb
add
sbb
pop
push
xor
xor
movb
stos
push
lock
mov
frstpm(287
mov
push
push
xlat
rorl
dec
or
mov
sbbl
jne
cli
sbb
shlb
and
or
push
rclb
adc
decl
loopne
add
fsub
mulb
gs
or
orb
xchg
ret
imul
cmpsb
into
test
sub
test
xchg
sbb
sbb
or
in
sub
push
add
sbb
out
les
or
sbb
lret
sbb
lret
dec
mov
sti
mov
ret
mov
jle
and
mov
call
scas
and
sub
pop
sub
or
out
or
or
sbb
fstps
in
dec
cmp
pop
ds
dec
xchg
xor
sarb
xchg
dec
jns
push
ret
mov
ret
or
dec
cltd
jne
outsb
or
sahf
popf
push
nop
cmpsl
xchg
cs
cmp
fnstenv
jae
dec
jb
subb
sahf
push
ja
sub
cli
or
std
adc
sub
or
mov
jmp
lahf
or
dec
iret
ja
jbe
fdiv
insb
add
push
xchg
mov
cld
cmp
pusha
push
faddp
imul
in
outsb
inc
xor
push
add
dec
aas
or
pop
mov
cmp
adc
jae
mov
pop
pop
cmp
fld
insl
fbstp
or
jae
inc
xchg
movsl
cmp
jbe
fcmovnb
lahf
xor
jbe
adc
inc
sti
push
inc
pop
cmp
loope
dec
inc
push
cmpsl
mov
repnz
mov
int3
test
movsl
and
sbb
mov
push
loop
mov
sbb
adc
jno
sub
sbb
fldenv
cwtl
cmpsb
das
add
mov
in
add
pusha
mov
cltd
jge
scas
add
push
outsb
or
adc
dec
sub
jbe
push
sbb
adc
mov
pop
loop
add
sbb
adc
lret
lret
and
inc
adc
fwait
test
rcr
into
in
data16
and
mov
std
sti
rorl
cmp
popf
test
pop
jp
cwtl
or
imul
clc
adc
and
daa
sbb
pop
test
insl
imul
fcompl
sti
jo
loop
and
push
inc
jg
arpl
fidivrs
inc
cmp
adc
adc
push
fnstsw
xor
cmp
aaa
xor
pop
das
sub
lahf
repnz
dec
and
lods
pop
inc
out
mov
jecxz
cmp
xor
rol
pop
jp
test
aaa
unpcklps
add
loopne
movsl
xor
xchg
xchg
hlt
add
cs
pop
mov
mov
jne
lds
sub
imul
cmp
jge
inc
insl
and
sbb
dec
push
ficoml
pop
cmp
subb
jb
outsl
shrb
xor
sbbl
jle
xchg
sbb
adc
push
cmpb
outsl
fmul
les
cmpsb
neg
cmp
aas
and
pop
lock
mov
jecxz
sarb
sub
or
sub
cmp
shlb
ret
or
int3
hlt
sub
pusha
xchg
push
or
scas
insb
imul
add
add
cli
push
xchg
mov
lahf
aad
xchg
cmp
movsb
jo
mov
mov
xlat
lahf
push
jp
ret
push
cmp
fadd
sub
roll
sub
in
fidivs
mov
push
loope
sbb
test
inc
and
adc
adc
add
push
pop
mov
jg
pop
cmpsb
xor
iret
cmp
mov
mov
xchg
js
loop
sub
cmp
gs
clc
adc
js
cmp
inc
ret
cmpsb
xor
pop
pop
sbb
add
orb
mov
ljmp
xor
scas
sahf
in
dec
sub
out
lea
push
and
testl
daa
push
ficoms
cli
lock
xchg
sahf
xchg
cmpsl
sbb
mov
mov
push
ret
jb
imul
data16
fimull
add
jbe
sub
mov
jge
ret
jb
mov
mov
sbb
xchg
adc
mov
mov
xor
loopne
lods
ljmp
aaa
jo
rcll
xchg
lock
fdivs
aaa
add
jo
popa
add
leave
xchg
jbe
lret
aas
lret
enter
jle
sbb
jo
in
aaa
sahf
mov
dec
ret
imul
pop
jae
push
inc
negb
sbb
ss
xchg
mov
push
adc
or
push
psadbw
pop
xor
xor
popw
fistpl
roll
sbb
adc
rol
clc
add
adc
adcb
push
add
in
jo
jns
pop
mov
xchg
cltd
dec
sub
ret
lahf
push
adc
sub
jle
call
dec
mov
ret
rorl
addr16
stos
lock
inc
insb
cld
or
loope
out
pop
sub
mov
aaa
fdivs
popf
inc
pop
loope
dec
je
ficoml
insl
and
xlat
lahf
outsb
push
into
jbe
movsb
arpl
or
int3
int3
mov
jl
mov
ljmp
push
adc
dec
inc
add
cmp
out
movsl
push
daa
add
pop
in
daa
pop
push
mull
testl
loop
push
jb
fld
pop
pushl
add
mov
fidivs
inc
pop
outsl
mov
subl
adc
cmp
add
popa
test
lret
fstpl
sbb
sbb
scas
addb
add
jmp
iret
adc
into
ss
cmp
xor
pop
divb
xor
sub
fldt
in
fucomip
and
jg
add
in
mov
cmp
cmp
jg
in
ds
out
sub
dec
lock
xchg
or
pop
pop
xor
jg
cmp
jo
sbb
sbb
aas
push
popl
es
xchg
imul
movhps
stc
lea
fwait
add
lods
loopne
cmp
pushf
aaa
lahf
jmp
sahf
sbb
jae
ficompl
sub
push
adc
ja
sub
lahf
std
xchg
and
and
mov
sbb
push
pushf
jnp
lock
sbb
out
pop
push
aam
mov
or
mov
lea
test
fldenv
push
push
push
loop
outsb
adc
add
call
push
adc
arpl
mov
scas
jl
ret
sbb
adc
push
adc
sbb
insb
int
insl
mov
sbb
das
mov
popw
jg
xchg
adc
pop
jmp
adc
xor
fimull
jno
pop
ret
fwait
hlt
adc
lcall
add
fistpll
and
xchg
jbe
test
mov
je
popf
pop
push
ret
lods
bndldx
mov
mov
add
aaa
dec
aaa
hlt
adc
fwait
bound
neg
dec
imul
lods
fidivl
lret
test
dec
popa
pop
fwait
cmp
gs
inc
enter
fiaddl
ja
cmpsl
movsl
ja,pt
adc
add
icebp
and
mov
mov
adc
js
test
cmp
xchg
js
push
push
mov
xor
inc
cld
add
jecxz
xchg
pop
adc
pop
notb
xchg
xor
and
lock
roll
pop
lock
dec
mov
add
cmp
data16
pushf
rcll
mov
lcall
fcompl
iret
jo
fisttps
fidivs
jmp
mov
sbb
mov
iretw
icebp
mov
lahf
pop
fidivrl
add
inc
adc
pusha
imulb
mov
xchg
in
std
insb
mov
xlat
cmp
imul
push
outsl
adc
sbb
adcl
push
addr16
and
push
mov
rolb
pop
dec
clc
aad
cmp
mov
mov
xchg
loop
lods
mov
pop
das
jl
mov
movsl
push
popa
cmp
pop
and
push
ja
sub
loopne
lods
pop
sbb
pop
loop
pop
adc
ret
and
push
push
lahf
scas
insl
pop
int
cmp
icebp
xor
adc
sub
cltd
adc
sub
sub
ficoms
lods
jae
mov
std
pop
imul
xor
push
fidivs
inc
pusha
cmp
aaa
push
pop
jle
imul
aas
add
push
xchg
scas
xchg
cmp
movsl
imul
lods
add
loop
sub
cmpsl
pop
add
pop
sbb
jae
imul
mov
ret
js
dec
repnz
loopne
add
scas
movsl
hlt
gs
xchg
shl
cmpsb
xchg
icebp
and
filds
lcall
push
or
xor
xchg
testl
ljmp
ss
pushf
fcmovnbe
add
lret
sub
sbb
xchg
fisubs
mov
mov
or
icebp
sbb
loope
jge
imul
sub
test
data16
mov
movsl
sbb
adc
jne
nop
sarb
or
mov
shrb
ja
sar
lds
leave
insl
popf
cmpsl
and
xchg
lock
mov
cmp
or
mov
leave
or
mov
cld
jg
lret
std
mov
insb
xchg
mov
xchg
push
adc
adc
sbb
xor
hlt
sub
pop
dec
clc
add
imul
or
jmp
in
aas
jne
add
push
call
pop
in
mov
jg
movsl
mov
lcall
ljmp
add
xor
xchg
imul
sahf
adc
inc
movq
sbb
out
shrw
push
push
push
sub
sub
rolb
es
std
dec
fimull
sahf
xchg
fidivl
pop
test
mov
dec
adc
int
lea
int3
inc
mov
push
or
mov
test
sbb
jmp
loope
int
mov
xor
pop
sub
sbb
lcall
dec
ret
gs
mov
loop
or
ficomps
push
jno
adc
repnz
mov
jl
jle
pop
and
pop
xchg
sub
add
jo
sbb
out
scas
outsb
add
mov
pop
inc
xor
adcl
rorl
fs
dec
jl
lcall
lret
sub
int3
xor
xorb
rolb
add
pusha
lods
xor
enter
lcall
adc
mov
popa
mov
adc
or
daa
fs
and
gs
pop
subb
fwait
pusha
mov
fwait
jl
faddl
mov
adc
std
inc
mov
mov
outsb
push
push
sbb
pop
imul
and
xchg
mov
cmpsb
jne
add
pop
daa
pop
insb
ret
or
add
adc
pop
dec
xchg
jbe
xor
popa
xor
adc
lock
jae
xchg
mov
adc
ficomps
or
sub
test
out
es
dec
fmul
cs
imul
test
fstpl
pop
adc
cmpb
fisttps
push
add
mov
jb
stos
push
imul
fnstcw
aam
push
xchg
popf
xchg
xor
push
loope
adc
add
aam
enter
mov
aam
push
cmc
ficoms
adc
pop
adc
push
jg
mov
js
adc
bnd
mov
aam
pop
lock
aas
cmp
and
cmpsl
lods
mov
mov
jb
lcall
aas
sbbb
dec
insb
jp
sub
std
inc
sub
stc
inc
lods
insb
adcl
les
jmp
push
mov
jnp
aas
push
pop
scas
ret
idivb
jg
insl
and
inc
or
xchg
lcall
pop
dec
push
arpl
mov
pop
xor
mov
adc
mov
imul
jno
data16
ret
or
loopne
fnsave
and
sbb
push
lret
adc
aaa
in
movsl
adc
mov
inc
test
outsl
pop
aaa
xor
insb
cltd
inc
stc
mov
pusha
divb
adc
cld
or
mov
adc
fnstenv
fcomip
pop
pop
adc
and
fwait
or
pop
sar
inc
les
js
push
cwtl
hlt
test
pop
cmpsl
xor
out
add
adc
cmp
sub
and
adc
pop
inc
push
adc
jl
mov
mov
dec
jbe
adc
mov
push
or
jo
push
mov
inc
jne
rcrb
test
pop
insb
xchg
pop
mov
sbb
adc
dec
inc
mov
out
xchg
jg
jno
jnp
stos
cmpsb
mov
jge
jnp
add
dec
mov
cmp
mov
cmp
sahf
fldt
and
sub
popa
fs
adcl
lock
rorb
xchg
push
pop
sub
inc
push
pusha
mov
cmp
pop
xor
addr16
test
xorb
mov
insb
loopne
pop
mov
insl
jns
xchg
push
nopl
fdivrp
pushf
ror
cmp
pusha
cltd
xchg
adc
adc
pop
adc
jg
add
jmp
xchg
insb
adc
sub
pop
pop
cs
adc
xor
xchg
scas
lods
inc
jl
mov
pop
clc
and
lret
pusha
sbb
fists
je
jecxz
jmp
pop
or
inc
movsb
push
ret
js
mov
aam
cmp
jp
jnp
sti
sar
movsl
mov
js
enter
xchg
aam
fcomp
clc
leave
mov
mov
stos
xor
fimull
lods
or
mov
push
add
jo
push
sbb
fnstcw
mov
sub
fdivs
test
sub
xchg
mov
sub
add
or
jb
stc
cmp
add
dec
xchg
xchg
push
das
mov
xor
pushf
jecxz
aad
sbb
push
mov
jno
cld
out
dec
cwtl
test
rorb
cmc
repnz
inc
cld
leave
fidivl
add
popf
sahf
xchg
pop
adc
mov
mov
push
mov
loop
xor
aaa
inc
dec
mov
imul
xor
leave
test
push
xchg
cs
adc
hlt
cs
cltd
in
pop
into
mov
add
adc
add
scas
and
sub
gs
mov
inc
je
lods
rcll
cli
pop
xchg
pushf
loope
mov
xchg
stos
cmp
roll
roll
test
sub
inc
stc
sbb
inc
mov
popf
mov
mov
aad
xlat
aam
imul
stos
fcomps
mov
ss
stc
and
inc
sub
lea
fs
pop
sbb
fs
or
adc
aas
inc
rorb
or
push
sbb
pop
jecxz
and
and
clc
pop
mov
movaps
gs
sbb
and
jmp
push
mov
sbb
dec
push
aaa
adc
lods
adcb
inc
bound
pop
out
and
push
popa
add
sahf
cmp
mov
adc
imul
xchg
sub
icebp
sti
push
push
fsubrp
mov
or
shrb
dec
popa
cmp
or
leave
fidivrl
lods
cld
lret
bnd
cmpsl
mov
rclb
jne
adc
imul
xchg
negb
loop
clc
and
mov
inc
mov
mov
jb
ficoms
push
int3
stos
mov
out
and
mov
mov
lret
scas
mov
lret
jo
fsubrs
jp
leave
lock
mov
inc
das
xchg
mov
jo
push
dec
int3
dec
or
jb
cmp
or
mov
inc
shlb
test
test
inc
adcl
xchg
int
xor
int3
fsubp
push
lret
js
pop
sub
out
int3
pop
jbe
mov
jbe
jne
xlat
xor
je
outsl
aaa
jae
or
dec
pop
xor
icebp
aas
adc
pop
fs
xor
sahf
ja
mov
jp
sbb
push
inc
insb
cs
daa
lock
mov
xor
shrb
loop
pop
or
outsb
push
les
push
imul
pop
jle
mov
or
jle
sbb
mov
jbe
sbb
pop
adc
xor
mov
popa
aas
mov
sbb
or
jl
cwtl
icebp
cmpl
jp
adc
or
js
leave
iret
sub
dec
sub
xor
xchg
push
pop
std
dec
cmp
cmp
lods
xchg
iret
std
lea
pop
mov
sub
or
cmp
popa
mov
push
push
fisubrl
mov
pop
add
fucom
fildl
lods
int
push
mov
xchg
and
adc
mov
sub
add
jle
jae
outsl
xchg
aaa
arpl
ljmp
push
fdivr
insl
sbb
dec
mov
or
xor
dec
and
mov
inc
mov
sub
rclb
xor
mov
push
dec
jae
sbb
xchg
fcompl
mov
mov
fiaddl
ret
jo
and
mov
pop
mov
adc
mov
test
add
insb
or
addr16
mov
inc
pop
shlb
jae
cmp
add
nop
imul
inc
negb
and
push
mov
ds
dec
mull
mov
insb
repnz
mov
push
adc
cld
loop
or
lcall
popf
notl
dec
and
jno
and
jne
outsb
sub
ret
or
or
dec
add
dec
xchg
je
daa
pop
pusha
sub
sub
ror
fbstp
scas
out
aaa
xchg
pusha
rclb
fsubrs
push
pop
and
adc
cmpsl
cmp
cltd
xchg
mov
sahf
js
or
rclb
fisubrs
cmc
mov
cmpsl
ljmp
cld
inc
sub
xchg
loop
fcmovb
jmp
dec
push
add
stos
sub
aas
xor
jno
cmpsb
insl
ret
mov
jne
loope
ret
aas
in
xchg
xchg
mov
mov
ja
inc
aad
dec
add
ret
push
fcom
cmp
sub
inc
stos
xor
push
lahf
push
imul
push
stos
shrb
cmp
mov
sahf
repnz
push
dec
bound
mov
ret
aaa
dec
popf
fistpl
aad
lock
and
push
mov
sub
clts
dec
dec
in
in
xchg
test
push
call
insb
xchg
insl
or
pop
cltd
mov
mov
push
addr16
test
fwait
jecxz
jo
lock
mov
inc
or
push
dec
sbb
jecxz
into
adc
sub
adc
lock
jmp
or
into
les
ljmp
sub
lods
sbb
scas
pop
mov
sti
pop
in
mov
insb
inc
pop
rcrl
mov
ficoms
adc
cmpsb
push
hlt
ja
insb
int
repnz
sub
mov
enter
frstor
inc
cmpsl
aad
push
mov
out
nop
sbb
inc
fucompp
xlat
sub
mov
lcall
int3
cmp
inc
jp
add
jg
mov
fimull
ja
mov
into
adc
pushf
pop
or
push
rolb
mov
add
out
orb
sbb
movsl
clc
lods
fadd
cs
int
and
push
inc
loope
cmpsb
test
stos
ss
jnp
sarb
mov
call
push
pop
sti
cmpsl
jge
lock
icebp
lods
cmpsl
sbb
add
dec
test
xchg
sub
enter
icebp
mov
push
movsl
in
sbb
dec
hlt
out
or
mov
imull
add
pop
pop
aad
int
or
iret
xor
jmp
and
pop
pop
push
andl
and
push
loopne
mov
add
loop
jl
fldl
cld
xor
mov
xchg
pushw
sbb
cld
jl
xlat
sub
clc
insb
out
pusha
add
pop
das
xor
ffreep
out
aad
mulb
cmp
adc
jno
xchg
fwait
out
jo
test
das
xchg
fistps
cmpsb
jnp
arpl
push
hlt
fbld
jg
mov
into
fmul
sub
mov
out
int3
mov
movb
shlb
in
movsb
sahf
aam
sbb
sub
int3
fildll
and
or
enter
ret
mov
mov
jle
fimuls
out
ror
jbe
stc
push
mov
imul
mov
inc
add
repz
fimuls
mov
adc
and
shll
xor
jg
push
push
outsb
imul
pop
dec
mov
mov
and
jl
fistps
jmp
mov
lcall
xchg
clc
add
xor
xchg
inc
fs
icebp
in
cwtl
sbb
inc
xor
mov
stos
insl
int
mov
rorl
icebp
sub
cmp
bndldx
repz
add
jecxz
jp
pushf
or
in
loope
leave
sub
es
adc
xchg
add
xlat
mov
mov
popf
or
pop
pusha
mov
adc
lock
mov
add
mov
in
stc
add
cmpl
mov
test
mov
xor
cli
xchg
test
add
cmp
lods
adc
sbbb
lock
and
cmp
pop
fprem
into
cmp
mov
movb
lods
or
xchg
pop
or
pop
xlat
fisttpl
sarl
mov
jno
lock
cmp
pushf
sahf
xlat
bnd
lods
jle
mov
dec
push
jb
cmp
jp
push
mov
loope
fs
push
aas
add
add
sbbb
pop
push
outsl
jp
or
movsl
sub
loopne
ret
fmulp
movsl
stos
cli
insl
mov
fstpt
adc
subps
stos
lock
movsl
cmp
and
xchg
gs
les
ds
in
sub
xor
out
cli
dec
test
mov
inc
nop
jne
jl
int3
ret
or
fsub
xor
cmp
jp
mov
or
loop
inc
stos
sbb
mov
cli
cmpl
imul
cmpsb
jno
sbb
enter
jmp
hlt
xor
mov
push
xchg
sub
out
je
adc
dec
ret
mov
jmp
mov
pop
test
out
jecxz
or
and
out
movsb
js
nop
pushf
xor
pusha
movsl
pop
add
or
call
pop
movsl
cltd
cwtl
sbb
jno
sti
fsub
out
pop
or
stos
adc
call
lret
lahf
push
push
cs
repnz
adc
mov
push
int
push
xadd
jbe
in
fimuls
ss
syscall
loop
in
icebp
pop
rclb
int
popf
or
lahf
jle
addl
mov
pop
movsl
clc
clc
rclb
push
bnd
xchg
xor
orl
dec
mov
mov
bound
aad
dec
push
mov
mov
imull
imul
out
xchg
ds
cmc
sub
mov
xor
ljmp
xor
nop
adc
insb
fwait
adc
sti
adc
xor
ss
scas
outsb
test
mov
adc
ret
sbb
add
add
add
movsl
test
fwait
loope
lret
cs
aad
cmp
fcmovnu
hlt
arpl
aad
loope
jnp
int3
jno
jo
cmc
sbb
or
shlb
push
xchg
jecxz
sub
mov
lret
sbb
push
dec
jmp
outsl
mov
aad
or
jbe
aaa
mov
or
mov
jmp
pop
out
mov
outsl
cmc
adc
jbe
push
pop
shl
jo
fucom
sti
popl
add
mov
imul
jb
js,pt
dec
fimuls
fimull
cmp
or
mov
rorb
loopne
loope
lret
dec
add
outsb
into
pop
fmul
nop
and
icebp
ja
or
jge
fwait
jecxz
mov
mov
mov
pop
dec
lcall
xchg
xor
mov
daa
mov
push
popa
subl
push
aas
inc
jge
mov
fstpl
mov
xchg
inc
test
lods
les
lahf
dec
pop
dec
jns
fisubl
fstl
rclb
icebp
pop
rorl
sub
mov
ja
cs
ret
sub
test
inc
stos
jle
pop
pop
test
dec
mull
loope
pop
pop
fimull
push
push
or
xchg
xor
jae
je
sti
ss
jmp
mov
jo
jmp
int
mov
mov
push
sub
push
inc
aaa
mov
mov
mov
cmp
add
lods
adc
xor
loop
push
fnsave
data16
insb
dec
dec
jecxz
shlb
adc
aaa
pop
aaa
adc
notl
cmpsb
sub
mov
or
mov
xchg
sub
rorb
or
testb
sbb
dec
lock
xor
pop
lods
or
out
int3
jbe
rcrb
jl
lds
and
mov
xchg
faddp
das
iret
rorb
aas
cmp
inc
pop
imul
xchg
test
scas
push
dec
push
shl
imul
ret
addb
push
mov
mov
js
mov
pop
fwait
adcb
xlat
out
scas
mov
int
or
stos
mov
sub
dec
jl
fistl
lret
lcall
cmp
dec
aaa
cmp
fimuls
loopne
mov
movsb
adc
sbb
mov
iret
dec
pop
jp
jbe
out
pusha
arpl
add
imul
or
jle
sbb
fldcw
push
dec
mov
dec
stos
mov
pop
repnz
je
and
mov
addb
ja
mov
xor
cli
imul
jbe
lret
pop
rolb
or
mov
mov
adcb
das
std
enter
jnp
test
sub
inc
or
pop
mov
test
cmpsl
adc
scas
lods
mov
pop
das
insl
mov
pop
hlt
or
push
insl
pop
ljmp
mov
loope
outsb
repnz
into
arpl
mov
cmp
mov
dec
arpl
pop
jmp
out
push
data16
loopne
das
add
mov
jecxz
pop
roll
daa
pop
sbb
inc
mov
icebp
mov
call
pop
adc
imul
mov
pop
je
cli
mov
data16
sub
mov
pop
insb
inc
jmp
aam
fidivrl
outsb
lret
rol
cltd
jb
xor
dec
and
mov
outsl
adc
mov
lods
mov
pop
inc
cmp
mov
int
add
add
ficompl
jg
mov
aas
leave
out
dec
cmpsb
into
mov
ja
insb
dec
or
or
cmc
xchg
jle
xorl
xchg
jae
cmpsl
scas
movsl
sbb
sub
inc
rorb
push
xchg
jg
mov
xchg
sbb
stos
cmp
out
fcmovb
sub
outsl
sbb
sbb
pushf
fildll
cmpsb
sub
lock
pop
dec
xchg
add
jl
mov
movsl
and
push
imul
rcrb
call
cmp
in
push
adc
stos
or
or
mov
ret
into
nop
fs
cld
push
sub
mov
xchg
rolb
mov
or
mov
das
addr16
adc
insb
lcall
adc
mov
dec
mov
adc
sub
and
jp
jo
sub
cmp
js
dec
ja
arpl
frstor
clc
mov
sub
adc
add
jg
sarl
jb
incl
je
mov
stos
sbb
test
sbb
adc
pusha
jg
push
mov
add
cmpsl
pop
outsl
push
enter
sbbb
sub
fnsave
loop
outsb
xchg
push
or
dec
ja
or
jnp
fs
jle
cmp
add
gs
mov
mov
push
xor
sub
fstpl
rorl
inc
scas
scas
xchg
scas
pop
jnp
out
sbb
insl
lds
jne
fistl
jmp
mov
cmp
and
or
add
repnz
fidivs
xchg
adc
fadds
js
aad
cltd
ret
adc
xchg
in
int
inc
mov
aam
mov
cmp
pop
dec
movsl
fldt
add
in
jbe
pop
fiaddl
dec
jmp
mov
int
jne
lds
movsl
push
mov
or
in
ljmp
imul
and
in
pop
aam
mov
mov
lea
push
clc
sbb
jg
aam
mov
adc
cmpsl
mov
loopne
int
test
je
cmpsb
int
pop
sub
jo
js
or
ficoms
popf
leave
shrl
sub
call
ds
xchg
pop
jo
cmp
add
lock
fs
dec
inc
imul
pop
scas
aaa
and
xor
or
insl
mov
movsb
sar
cwtl
sub
xor
mov
xor
loopne
insl
mov
inc
aas
add
mov
lcall
mov
repnz
mov
mov
mov
decb
add
fsubrl
push
int
loop
mov
adc
xor
loopne
call
jp
into
jns
sbb
add
adc
rorb
rcrb
pop
xchg
fdiv
push
rcrb
sub
or
add
mov
lods
mov
fdivrl
cmp
js
push
lock
mov
fistl
icebp
add
jl
data16
les
xor
add
clc
or
cmp
mov
nop
and
and
test
dec
xor
dec
repnz
clc
popf
fidivrl
xchg
stos
iret
and
inc
mov
icebp
ja
inc
pop
or
mov
xlat
sbb
movsl
cmpsl
jge
aas
fimuls
pop
flds
aaa
adc
sbb
aad
mov
cltd
ret
movsl
dec
in
lock
test
sbb
es
jbe
adcl
cmp
pop
lods
jne
mov
negb
or
lret
pusha
hlt
shl
and
test
rorb
loope
sub
xor
dec
push
adc
mov
es
mov
cld
jae
lahf
add
fsub
test
jne
in
fnclex
dec
mov
orl
inc
or
or
jmp
mov
lahf
stc
or
or
or
pop
dec
das
cld
sub
and
and
shlb
adc
pop
push
clc
adc
add
sahf
into
int3
xor
jae
add
movb
cmp
mov
es
push
mov
ficoml
pop
and
mov
push
insl
ss
and
ja
mov
cmpsb
cwtl
cmpsl
push
add
jnp
jb
fadd
data16
sub
outsl
leave
push
push
fisubrl
ljmp
aas
adc
xchg
notb
jg
add
cmp
xor
loopne
subl
mov
fdivl
xchg
sahf
pop
ljmp
mov
sub
add
inc
sahf
fs
loope
sub
jge
push
push
jmp
mov
test
pop
enter
jno
cltd
or
cmc
mov
call
dec
mov
add
int3
lea
rcl
or
and
xor
adc
int
aaa
cs
int
push
inc
jmp
aad
adc
rcl
push
orl
ret
or
adc
xchg
ret
mov
cmp
nop
hlt
mov
jp
mov
pushf
sahf
test
hlt
fisttpl
add
mov
andb
mov
je
mov
movb
ret
test
cmpsb
movsl
cltd
fnstenv
xor
xchg
data16
jecxz
icebp
test
adc
loope
jg
sub
lea
dec
popa
xor
movsb
xchg
inc
xchg
dec
push
push
jnp
mov
pop
lock
xor
xor
add
jg
push
popa
pop
pop
test
adc
aas
pop
in
jno
adc
call
adc
cli
dec
dec
push
stc
sbb
mov
xorb
sahf
out
push
and
or
sub
push
or
andb
jle
add
inc
dec
movsb
test
shlb
add
sbb
insl
es
inc
ljmp
popa
and
mov
std
das
fwait
lods
pushf
cmp
orl
call
or
adc
adc
loope
sub
adc
dec
and
pop
lods
sahf
lahf
cmp
sub
flds
pushf
adc
outsb
add
aas
dec
insl
fsub
pushf
adc
nop
in
movsl
sub
scas
out
pop
mov
xor
push
imul
jmp
add
mov
mov
xor
sahf
inc
adc
jecxz
andl
js
add
orl
aad
and
popa
test
mov
mov
loope
insl
rcr
or
sub
sbb
mov
mov
aam
adc
aam
and
loop
aam
xor
imulb
or
push
add
sub
outsb
jmp
dec
mov
mov
cmpsb
es
lods
mov
mov
jno
imul
loope
fistpl
sahf
push
push
xchg
pop
lcall
pop
jl
inc
inc
cmp
and
add
lods
fnstcw
add
lock
push
sub
mov
sub
and
mov
cmp
mov
loope
cmp
sub
inc
shl
fldt
mov
movsb
xor
push
xchg
sbb
mov
adc
insl
or
inc
leave
sbb
xchg
aam
jecxz
push
or
dec
sbb
movsl
pop
fnstcw
out
sub
dec
jge
push
xchg
or
dec
mov
nop
call
mov
mov
std
enterw
and
mov
enter
cmpsl
jecxz
mov
xchg
jns
jne
jb
test
icebp
adc
data16
cmp
test
pusha
test
sbb
ret
je
xlat
aas
aas
shrb
adc
rorb
jp
into
clc
stc
into
jbe
cs
scas
mov
cltd
inc
cmp
mov
cwtl
push
imul
sbb
jmp
mov
lods
jnp
ret
cmp
mov
push
pop
push
loopne
adc
sub
mov
sti
adc
cmp
xchg
sarl
push
push
pop
pop
mov
pop
mov
sub
inc
negb
and
adc
sbb
dec
xchg
loop
dec
jmp
enter
xor
js
aaa
jne
lahf
mov
fsubp
xchg
rcrb
pusha
jbe
fcompl
mov
test
xor
andl
push
inc
loopne
jno
mov
lcall
xor
push
cmp
shrl
and
add
loope
or
ja
dec
dec
xor
shll
pop
or
inc
and
adc
rclb
push
shrl
into
pop
mov
fimull
movsb
out
imul
sub
mov
jmp
fiadds
inc
mov
popa
call
xor
adc
jmp
pop
test
xor
clc
fsub
push
adc
cmpsl
sub
popa
mov
jb
xchg
int
adc
jo
cmpsl
aam
out
sbbb
into
and
subl
adc
adc
pop
std
into
fcomps
pop
dec
popa
pop
add
mov
or
dec
clc
aad
push
pop
fidivrs
hlt
pop
adc
outsb
lret
pop
imul
sub
ficomps
pop
adc
push
leave
dec
or
outsb
push
cltd
mov
cmp
add
xchg
js
fcmove
lock
push
inc
lea
lods
xor
sbb
fcmove
aad
mov
pop
lcall
add
mov
sub
clc
fwait
testb
pop
les
ror
movsb
aaa
frstor
xor
aas
in
inc
and
mov
cmpsb
std
or
mov
pop
shrl
inc
jg
mulb
sbb
jb
lcall
arpl
rolb
pusha
faddp
push
inc
sub
fmuls
sahf
xor
das
cli
xchg
pop
in
jb
inc
add
into
push
test
sub
adc
addl
dec
faddp
call
jge
es
sbbb
rclb
test
rcr
adc
xchg
mov
mov
push
lret
pushf
or
sub
fnstenv
pop
add
push
sub
sub
inc
jns
add
pusha
pushf
lods
or
push
mov
rorl
cmpsb
mulb
sbb
sbb
mulb
test
pop
lcall
pop
aaa
imul
test
xor
sbb
pop
fnstenv
push
mov
stos
or
movsb
mov
popf
aam
jecxz
outsl
fiaddl
jmp
addr16
daa
enter
cmp
mov
clc
push
xchg
add
shlb
xor
inc
jecxz
inc
pop
jge
pop
in
mov
jl
or
dec
out
push
jp
std
mov
ljmp
mov
std
lds
lock
shrb
call
jbe
lret
outsl
fwait
shrb
xlat
aaa
lcall
lods
mov
inc
dec
insb
imul
mov
popf
add
pop
xor
add
insb
stos
loop
xor
add
int3
sbb
or
add
popa
inc
sbb
xor
or
fstps
stos
stc
fwait
dec
mov
add
subl
pop
and
xchg
add
cmpsb
lods
call
adc
mov
mov
movsb
les
mov
or
movsl
je
add
lods
xchg
orl
mov
push
xor
lret
add
roll
call
insl
movsl
xor
pushf
sbb
mov
pop
mov
jecxz
aam
insb
inc
push
or
jmp
addl
sbb
mov
mov
cmp
inc
mov
adc
stos
jge
hlt
sub
xchg
into
sbb
jl
sub
call
scas
jne
inc
dec
fsubs
pop
xor
sub
repnz
add
imul
dec
sbb
ret
cmpsb
das
negl
sub
sbb
or
pop
cmp
mov
cmpsl
add
jmp
add
mov
jnp
add
push
mov
testb
jecxz
lods
mov
ja
mov
sbb
into
aam
addb
ljmp
fsubl
mov
dec
mov
sbb
pusha
imul
decl
pop
stos
fucompp
int
into
je
lret
pop
test
xchg
sub
mov
cmp
mov
jl
sbb
mov
inc
pusha
xchg
cmovge
adc
jne
dec
sbb
push
mov
jnp
xchg
aaa
sbb
cmp
mov
add
stos
into
addr16
add
push
sub
dec
fisubrl
aas
cmp
sub
pusha
into
mov
cmp
dec
pop
sahf
js
cld
adc
ret
push
arpl
sbb
rorb
dec
inc
out
cmc
add
push
adc
pusha
push
xlat
mov
addb
imul
int
and
mov
adc
xchg
mov
ret
jne
cmpsb
lahf
aas
xor
pop
jle
mov
je
fisttps
cmp
hlt
insl
and
cmp
jb
lods
stos
test
cmp
shrb
adc
pusha
es
fcmovnb
add
push
xchg
xchg
jnp
mov
pop
sarb
clc
aad
cltd
and
sbb
cmpb
in
adc
gs
pop
and
dec
lret
adc
mov
fstpl
or
xor
clc
adc
cmp
dec
add
fnsave
test
mov
add
aaa
add
add
sbb
jl
out
mov
insl
or
jg
sub
inc
mov
or
jbe
lcall
pop
and
fisubrl
mov
xchg
shrl
xor
xchg
or
pop
dec
bound
adc
or
int3
in
jecxz
push
dec
mov
add
scas
add
rorb
bound
aaa
loopne
cmp
pusha
add
adc
mov
xchg
jbe
ljmp
sub
test
and
mov
add
gs
add
andb
movsb
insl
mov
rcr
push
xor
icebp
or
nop
mov
mov
add
sbb
jge
xchg
lods
adc
idivl
sub
mov
add
add
testb
sub
test
inc
mov
addb
arpl
sub
adc
fistpl
cmpsl
pop
adc
data16
sbb
addr16
add
fwait
adc
es
outsb
loopne
lret
jp
or
bound
and
adc
loop,pn
or
sub
repz
sbb
aaa
dec
sub
nop
jbe
fmull
pop
adc
mov
repz
shll
lds
mov
adc
aaa
push
sbb
sarl
mov
rorl
mov
aam
shll
cli
pop
xlat
push
pop
pop
sbb
sbb
fisttps
adc
adc
inc
adc
shrb
in
add
mov
or
push
sub
adcb
or
jmp
cld
pop
jg
jge
or
movsl
std
jne
cmpsl
nop
cmp
sub
xor
rorb
xor
xchg
lods
sahf
jecxz
or
add
jo
cmp
ficoml
adc
adc
or
movsl
or
adc
push
push
dec
jp
loopne
xlat
sbb
jl
mov
data16
cmpsl
xor
pusha
test
xchg
lds
inc
mov
shrl
mov
mov
test
fwait
nop
mov
in
rolb
jnp
sbbl
mov
pop
jo
aad
lods
mov
and
shrl
add
mov
add
shlb
cmc
sub
outsb
popa
push
cmpsb
dec
push
or
dec
shlb
xchg
fwait
out
insl
add
push
rcr
pop
imul
add
or
jl
and
mov
repnz
xchg
ds
cltd
xchg
push
shrb
dec
dec
movsl
cmp
adc
or
sub
push
arpl
mov
subl
or
sbbb
jecxz
pop
lret
cmpsl
xor
daa
lods
xor
jnp
and
fisubl
pop
ss
xchg
in
es
stos
sbb
sbb
lret
pop
pop
fisubrl
push
loop
popf
insl
adc
decl
dec
adc
ja
pop
add
mov
testl
rol
push
out
inc
or
nop
add
daa
adc
aad
xchg
add
idiv
sahf
fst
sub
pshufw
mov
cld
xor
fld
mov
fdivrp
mov
mov
in
adc
in
jg
push
leave
adc
jecxz
push
les
mov
or
test
fdivrs
push
mov
orb
mov
mov
sub
mov
or
ss
outsl
jnp
jg
jg
fmulp
inc
or
sub
sub
mov
jecxz
jl
adc
pop
push
shrl
xor
mov
add
dec
xchg
fldl
xchg
xor
mov
pop
sahf
imul
dec
push
ss
push
les
xchg
fisttpl
or
mov
inc
sbb
add
imul
aam
pop
xchg
enter
gs
push
lods
outsl
ss
jbe
or
xor
mov
adc
dec
jg
add
xor
test
add
sbb
mov
ss
ficoml
outsb
inc
scas
cmpsb
mov
ljmp
test
mov
and
ret
into
mov
jecxz
cltd
imul
int3
stos
adc
adc
push
arpl
lret
mov
cmp
or
popf
add
insb
ficoms
push
out
push
cld
out
cmp
adc
cmpsl
fs
adc
sub
dec
add
add
push
loope
scas
jb
push
and
jmp
in
fisubrl
jmp
int
rorb
add
test
mov
dec
push
cs
jp
xor
cmpsb
jo
xchg
ljmp
cs
sub
aaa
jl
cmp
std
nop
push
decl
je
outsb
popa
xchg
ja
or
sbb
retw
sub
cmp
pop
sbb
repnz
lock
loopne
add
sbb
into
shrl
xor
sbb
sbb
mov
sbb
or
xlat
ds
xor
mov
adc
adc
cmp
in
cmp
in
mov
adc
popf
ja
popa
jmp
aaa
aaa
fwait
jecxz
mov
mov
fadds
jge
xchg
inc
outsl
and
xor
add
lods
fwait
cmp
dec
insb
popa
rcll
shlb
and
sub
sub
sub
ss
fs
testb
xlat
cmp
das
in
sbb
popf
daa
stos
xor
xchg
into
xchg
mov
inc
and
inc
lahf
in
xor
push
ret
ja
lahf
push
loop
cmp
cmp
insb
lock
jp
add
insb
inc
das
mov
lds
xor
mov
sub
adc
lock
repnz
movsl
jne
fsubrp
pop
mov
pop
jbe
in
ja
loop
out
rcrb
jbe
aas
inc
pop
sahf
lret
sub
and
dec
mov
aad
xor
and
inc
mov
and
pop
fstl
sub
add
inc
iret
idiv
push
add
loopne
xchg
sub
movsb
and
daa
and
bound
pushf
scas
xchg
lret
xchg
hlt
and
xchg
xor
mov
xor
aas
mov
and
sub
mov
sbb
dec
xrelease
push
sbb
dec
sti
jae
pop
imul
std
pop
mulb
jo
add
cmp
jge
mov
sahf
cmp
pop
inc
cmpl
inc
popf
rcrb
xchg
test
add
fidivrl
jg
jp
daa
incb
dec
jae
mov
jns
add
les
iret
sub
mov
adc
int
mov
push
sbb
mov
mov
sub
jecxz
popa
je
enter
loop
das
jb
add
or
and
jecxz
xor
fcoml
imul
fdivrs
das
inc
jo
cmp
mov
xchg
rolb
sbb
pop
mov
das
sbb
mov
lods
je
jmp
lcall
pusha
das
ja
fwait
out
hlt
mov
test
cmp
es
add
imul
push
lods
mov
sbb
lods
add
les
jnp
sbb
or
or
lds
xchg
aaa
sub
or
test
add
push
push
ja
loop
dec
add
lock
push
or
jne
sub
mov
jne
popa
shr
aas
cmp
xor
or
xchg
adc
enter
ljmp
jbe
jns
push
fstpt
enter
mov
cmp
mov
ss
sti
xchg
pop
lock
lea
sti
ret
and
sub
ja
rcrl
add
pop
jae
and
fldl
into
jb
aas
and
das
xorb
pop
pushf
hlt
popa
mov
aad
pop
adc
cmp
sbb
loopne
pop
movsl
mov
pop
sahf
ret
mov
pushf
addr16
xorl
jae
mov
sti
rorb
or
mov
or
or
or
mov
inc
jecxz
mov
jae
dec
sbb
sub
divl
dec
sbb
xor
jo
orb
imul
inc
add
pop
adc
jle
jle
mov
dec
and
mov
inc
adc
jl
mov
leave
or
mov
mov
into
arpl
das
ret
imul
or
mov
std
xchg
sub
add
lods
lea
push
or
aas
mov
imul
jp
xor
or
cmp
int
lret
popf
adc
mov
out
adc
add
mov
movsb
ds
mov
dec
fiadds
and
push
pop
mov
add
cld
jns
mov
cmp
push
sub
add
add
jnp
push
jle
mov
or
repnz
jmp
lds
stos
pop
loop
add
data16
mov
out
pop
aas
shl
jle
and
push
pop
xor
mov
aas
call
dec
dec
inc
sbb
xorl
loopne
xor
aaa
les
xor
sub
sbb
cs
adc
sub
mov
jbe
cltd
ds
fnsave
push
push
scas
cmp
mov
inc
ror
inc
ja
clc
sbb
or
mov
add
and
in
inc
sub
lea
dec
addr16
add
lcall
je
push
mov
lea
imul
pop
lea
mov
push
arpl
add
in
or
es
loopne
mov
fisubrl
mov
adc
jle
aam
xchg
jmp
lcall
out
and
cmpsb
lods
sahf
add
mov
adc
idivl
pop
sbb
cmp
loopne
fisubrl
inc
dec
cltd
and
loop
cltd
push
add
xor
sbb
popa
xor
fisttpll
faddl
add
xlat
add
test
fxch
push
aaa
or
cmp
ret
xor
fisubl
mov
orb
or
notb
out
cmp
nop
ss
xchg
mov
adc
pop
adc
pop
in
jp
add
mov
add
adc
jl
and
mov
inc
fdivr
xor
xlat
sub
repnz
add
int
mov
loop
adcl
negb
rcrb
adc
or
sbb
jb
dec
mov
loopne
sbb
jp
mov
push
les
repnz
and
ret
sti
fsubrp
pop
aaa
cmc
sbb
imul
lcall
jae
sbb
lcall
add
pushf
lods
movsl
mov
aam
loopne
add
jg
or
ljmp
lcall
cmp
jns
and
mov
xor
inc
arpl
xor
movsl
clc
add
xchg
je
rcrb
push
aas
cmp
lock
scas
add
mov
sbb
clc
xor
jbe
loop
in
inc
mov
adc
inc
gs
sub
add
pop
sbb
xchg
dec
mov
dec
les
fldt
cmp
pop
loopne
add
cwtl
popf
rorb
lahf
mov
jb
addl
leave
daa
jbe
cmpsb
bound
mov
jge
loop
or
dec
mov
sbb
movsl
movsl
cmp
mov
popa
and
xchg
cmp
cmpsb
fwait
sahf
dec
js
lea
fld
jp
fiadds
or
pop
xchg
push
adc
cmp
subl
jnp
inc
xchg
mov
in
or
ss
pop
into
mov
push
lcall
fsubrl
loop
xchg
sub
xor
mov
sbb
add
cli
adc
add
pop
lahf
int3
idivl
and
gs
hlt
and
sbb
mov
popf
pop
cs
int
or
insb
outsb
ljmp
loope
sbb
rolb
push
or
dec
or
outsb
xchg
outsl
imul
adc
aad
sbb
adc
jo
loop
dec
insb
ret
inc
add
xchg
add
lock
test
mov
ss
insb
mov
xchg
lds
shll
cmpsb
pop
fidivrl
or
test
aas
dec
das
lods
pop
sub
jnp
cli
arpl
jae
pop
xchg
fists
in
or
rcrb
fnsave
ja
mov
cmp
fidivs
std
xchg
lock
fldt
andl
rol
push
in
sysret
jnp
cmp
loope
xor
inc
pusha
or
clc
mov
ror
mov
orl
ss
fsub
rolb
push
push
fxch
ja
jne
call
push
dec
push
adc
adc
leave
push
push
cmc
clc
adc
mov
insl
lock
mov
push
test
insl
pop
jmp
add
mov
popf
std
push
and
sub
sub
neg
pop
or
sub
and
movsl
inc
inc
adc
icebp
cmp
fidivrl
enter
inc
or
fwait
add
pop
ficoml
adcb
nop
add
pop
jns
xor
jb
lcall
pop
clc
dec
cld
ror
cmp
insl
cmc
into
hlt
sbb
cmpsb
cmpsb
in
mov
xchg
out
int3
jno
lret
mov
sub
movsl
imul
insb
sub
pop
lock
mov
test
les
jb
addl
inc
bound
add
cli
inc
mov
test
cmpsl
imul
xchg
pop
mov
fdivs
inc
or
pop
mov
sbbb
add
das
xor
js
fwait
lret
outsl
sub
cld
movsl
cli
mov
popf
shlb
out
and
mov
adc
cmp
or
jp
mov
mov
fstl
mov
jecxz
insb
inc
dec
ffree
shlb
notb
mov
xchg
or
dec
in
sub
fdivp
jno
lea
das
jo
and
inc
xchg
fisubrs
add
jg
cmp
insl
stos
cmpsl
aam
bound
xchg
inc
dec
xor
fwait
in
fsubrs
mov
loope
roll
leave
xchg
movsb
xchg
push
enter
sbb
loop
mov
jbe
movsl
dec
cmpsb
and
mov
or
jbe
nop
out
lock
pop
dec
push
cmpsl
mov
add
xor
pushf
push
adc
outsl
out
ss
mov
lods
fmul
sbb
mov
call
add
push
outsl
imul
cmp
mov
adc
pop
add
addr16
pop
out
in
pop
mov
std
dec
dec
mov
mov
ss
cltd
orb
inc
dec
mov
mov
sub
mov
mov
inc
add
push
xor
adc
sub
push
or
jg
pop
add
mov
add
pushf
ja
add
jge
pop
pop
stos
mov
stos
ret
ret
ljmp
scas
pop
add
sbb
dec
fcompl
sub
and
xlat
jns
jmp
cmp
repnz
mov
rcrl
xor
pop
cmpl
insl
cmpsl
testl
in
dec
dec
push
or
test
adc
outsl
mov
push
clc
imul
lea
rol
jns
mov
mov
sub
and
lcall
sahf
jae
and
movsl
call
cmp
ja
cmpsl
jg
jg
loope
lret
ficoms
ret
js
jg
lahf
movsl
jl
mov
jae
push
add
outsb
sub
insb
idivl
addr16
sbbb
or
jle
xor
movsl
lahf
xor
pop
fimull
xor
xchg
fdivrs
outsl
psrad
decl
outsl
xchg
arpl
loope
jmp
fistpll
insb
jne
rcll
sahf
fidivl
stc
je
test
loope
jmp
or
cltd
js
or
std
mov
or
xchg
ss
mov
xor
xchg
or
jb
aas
iret
cmp
sub
pop
mov
pop
cli
cmp
out
popf
jecxz
fcmovb
mov
fistl
stos
andl
es
pop
mov
pop
sbb
or
cld
dec
mov
mov
out
and
fwait
stos
ljmp
or
or
cli
mov
movsl
xor
gs
stos
scas
and
into
lock
jmp
push
xor
in
pushl
flds
aas
adc
and
lods
fnsave
sub
and
hlt
jl
mov
dec
inc
std
in
icebp
sbb
shll
rorb
mov
fildll
add
dec
repnz
lock
lock
pop
ret
shll
jl
clc
cld
jge
shrl
negb
pop
ljmp
aaa
pusha
mov
in
and
add
std
jg
dec
loopne
cmp
sbb
stc
idivb
scas
xchg
ss
imul
sub
daa
sti
push
xlat
jns
loop
in
jno
pop
fisubs
sbb
sbb
mov
cld
push
popf
loop
popf
push
jnp
xchg
outsb
cmp
aaa
sbb
shl
cltd
mov
ffree
xor
mov
outsb
lods
aas
dec
sarl
mov
cli
filds
fidivrs
ss
hlt
dec
sub
lahf
rcll
pop
ficoms
push
push
and
std
or
std
fnstsw
lds
jecxz
std
lahf
outsb
jne
cmp
and
mov
rcl
and
cwtl
in
pusha
fwait
into
mov
push
out
sbb
inc
jecxz
popf
andnps
mov
lods
xor
addr16
jg
divps
cmp
jecxz
pop
ret
shll
adc
js
imul
and
das
mov
test
xlat
inc
shlb
loope
sub
cs
or
or
or
addr16
xor
adc
psignb
mov
mov
cmp
pushf
cmpsb
lock
in
lds
push
adc
cmpsl
push
dec
aam
sub
push
or
shll
adc
repnz
sub
add
inc
xor
or
clc
daa
xchg
sbb
xchg
loop
insl
mov
dec
inc
loope
or
fsts
aam
adc
sbb
xchg
lea
lahf
inc
shrb
xor
rclb
into
sbb
insb
subb
or
pop
daa
cmp
arpl
loopne
xor
stos
jecxz,pn
or
std
and
inc
add
ja
mov
mov
je
push
in
mov
imul
xchg
sub
mov
jmp
jno
imull
in
mov
jg
adc
faddl
decb
pop
mov
mov
ljmp
xor
mov
dec
fsts
fmul
or
adc
inc
rorl
jb
push
or
dec
or
adc
adc
mov
push
loopne
sbb
pop
stos
stos
ret
and
adc
jns
adc
div
push
insl
or
popf
jbe
inc
fld
xor
sub
mov
or
aas
and
and
pop
push
add
xor
add
mov
lock
test
std
push
push
shlb
xor
xchg
jbe
cli
call
or
bsr
lret
dec
sarb
jns
lret
inc
dec
sbb
loope
fs
xor
jbe
aam
shrb
or
pop
inc
push
loop
fidivs
in
loopne
shll
pusha
fsubs
mul
sbb
or
lret
cmpsl
push
mov
imul
mov
aaa
mov
loopne
pop
mov
jecxz
and
repnz
dec
in
fcmovnb
sub
mov
add
and
jno
mov
adc
mov
mov
sub
mov
shr
pushf
xlat
mov
jle
dec
xor
jbe
xchg
pop
push
sub
pop
inc
pop
sub
or
mov
jl
adc
shll
ds
or
dec
push
in
ret
in
test
add
push
lock
dec
jp
lds
fidivs
sbb
nop
cmpsb
testl
loop
cltd
js
mov
jp
loop
rcr
lods
push
lret
push
xor
popf
divb
xor
pop
cli
and
xchg
push
data16
repnz
test
fsubrl
cs
dec
add
jp
sbb
in
xor
cmp
scas
or
and
int
ja
paddsb
je
xor
movsl
cmp
je
negb
inc
sbb
movsb
sub
sahf
outsl
sub
lods
add
sbb
rolb
mov
in
ret
mov
outsl
popa
jne
das
jmp
cmpsl
imul
pop
imul
arpl
insl
sub
test
push
loop
pop
out
adc
int3
in
adc
jmp
mov
data16
mov
ja
imul
sub
dec
add
ret
push
mov
xchg
mov
sbb
adc
dec
ret
inc
repz
addl
fiadds
mov
mov
add
push
mov
push
jecxz
adc
xor
push
std
imul
test
jb
jo
add
add
rcr
and
mov
mov
ja
ljmp
xor
add
pop
mov
jbe
dec
stos
and
imul
aaa
clc
ret
add
or
cmp
mov
adc
nop
mov
mov
std
inc
iret
mov
or
pop
adc
sub
pop
sbb
adc
or
data16
test
push
mov
cmp
jl
rcr
jmp
cmpsl
mov
or
sbb
xchg
xchg
gs
loopne
inc
popl
fimull
insl
adc
adc
push
fisubrl
mov
mov
adc
xor
std
loopne
aad
sbb
and
out
imul
cmpsb
mov
or
lds
add
bound
insl
popf
add
imul
or
loop
add
add
add
aaa
add
roll
bound
mov
push
scas
lahf
jmp
xor
scas
jle
dec
fbld
mov
push
lock
hlt
mov
add
xchg
dec
cmp
lea
xchg
ret
push
dec
fldenv
sub
mov
add
pop
int
xchg
sahf
xor
in
add
mov
dec
jmp
dec
jl
call
cmp
lods
lret
data16
dec
dec
sbb
xor
cmp
push
int
push
pop
popf
jle
out
adc
in
cmpsl
lahf
imul
sbb
hlt
jecxz
imul
xchg
adc
inc
shlb
shlb
sub
sub
and
test
arpl
push
sbb
je
dec
sub
insl
xchg
push
lcall
in
push
popf
popa
mov
popa
or
cmp
mov
mov
shlb
xchg
or
dec
lds
xchg
pop
les
and
push
cmp
adc
jmp
arpl
push
or
jmp
stos
out
cmp
repz
fisttpl
stos
jns
xor
push
or
xor
pop
adc
xor
addl
pop
addl
scas
sbb
xchg
fdivl
xchg
test
jmp
push
inc
cld
comiss
or
ret
xor
fisttps
jo
cmp
mov
xchg
adc
gs
popa
test
xchg
decl
or
jp
mov
imul
enter
push
pop
lods
sub
sbb
lahf
adc
pop
fidivrl
jb
pop
mov
ljmp
sbb
jo
sbb
add
mov
pop
push
lds
or
fistps
adc
popa
sub
mov
jl
in
adcb
out
call
das
lahf
test
or
push
push
xor
pop
je
sub
or
push
jns
push
add
push
or
dec
adc
adc
adcl
lock
cmp
pop
add
in
sbbb
or
cld
ja
pop
mov
add
std
les
pop
mov
jno
popa
nop
jnp
in
jnp
pop
int3
pop
xor
xchg
jbe
add
mov
cmp
jne
mov
std
mov
emms
insb
mov
jnp
pop
mov
adc
movsl
xorl
inc
push
loopne
outsb
fstpt
xorb
pop
add
out
les
cltd
sub
sub
pop
orb
lea
data16
xchg
subl
cmp
les
ret
xchg
insb
mov
addr16
adc
fisubl
push
test
push
imul
mov
ja
aaa
or
das
sub
sub
outsb
aaa
rorl
sub
dec
jno
inc
sub
sub
addr16
xchg
push
jecxz
loope
adcb
popf
test
fdivrs
push
out
push
mov
aam
out
push
daa
xchg
mov
popf
les
or
btl
ljmp
adc
xchg
pop
mov
and
cwtl
adc
mov
push
jns
mov
das
sub
sar
or
sub
push
push
dec
add
pusha
fs
mov
xchg
mov
jb
adcb
ret
xor
or
test
xchg
add
cmpsb
xchg
cld
add
xor
out
adc
outsb
cmp
outsl
adc
cmp
xchg
out
loope
mov
adc
pop
xorb
jo
adc
insl
das
push
test
add
dec
jmp
mov
add
inc
gs
inc
or
push
xor
insb
gs
aam
insb
add
pop
sbb
arpl
inc
add
inc
fsub
mov
in
movsb
inc
cmp
add
movsb
mov
inc
es
mov
jb
jne
insb
fisubl
push
sarl
sbb
or
pop
cmpsb
je
aas
jnp
mov
cmp
sbb
mov
popa
or
sub
push
shrb
rol
or
mov
cmc
and
loope
or
outsb
and
or
sub
cltd
push
pop
adc
and
sbb
dec
data16
pop
mov
mov
mov
sbb
popa
and
nop
add
orb
ss
push
outsl
push
sub
push
outsl
popf
pop
inc
and
int
add
push
mov
out
push
cmpsl
push
shrl
loope
xor
add
pop
mov
sbb
pop
rorl
sbb
stos
cmp
push
or
pop
out
popa
mov
and
and
jbe
arpl
stos
inc
fs
aas
and
mov
adc
xlat
push
lcall
mov
add
xor
xor
out
adc
xchg
inc
and
cs
adc
ret
push
mov
inc
pop
mov
or
daa
pop
enter
pusha
pop
mov
gs
sbb
insb
cmp
inc
jno
jnp
sub
mov
inc
inc
add
movsl
call
pop
sub
pushf
jo
pop
xor
fildl
imul
inc
dec
sub
fisttpll
pop
paddq
cmp
inc
bound
sub
inc
bound
and
dec
pusha
and
sbb
dec
sbb
lods
je
popa
arpl
rcl
dec
mov
jecxz
dec
pop
sbb
insl
pop
out
pop
xor
mov
lea
sbb
ret
xorl
push
dec
sub
test
outsb
xorl
ficoml
mov
ret
loope
inc
sub
aaa
ss
sbb
mov
sbb
jns
rorl
sub
jo
inc
adcl
cmp
mov
dec
mov
dec
cmp
addr16
adcl
jbe
sub
push
fstl
mov
gs
stos
fnstsw
addl
out
mov
out
cs
mov
adc
ret
test
mov
sub
dec
out
push
mov
inc
loop
add
mov
push
ja
shrl
test
mov
cmc
sbb
mov
sbb
push
outsb
push
xor
cs
shlb
sti
rclb
ja
adc
and
sub
loope
jl
ficoms
cmp
mov
inc
fstps
or
or
aad
and
fwait
and
gs
negl
insl
sbb
nop
test
dec
lea
int3
push
fldenv
mov
inc
add
jge
jae
mov
fs
imul
orb
or
cmp
and
push
enter
sub
sub
popf
xchg
add
mov
cltd
add
dec
sub
mov
outsl
scas
add
cmp
outsl
mov
push
sub
xchg
sub
sub
cs
mov
outsb
popf
ja
adc
jbe
and
inc
jb
test
std
sub
movsb
lea
mov
pusha
xchg
sub
cmc
pusha
sbb
and
leave
mov
test
dec
fdivs
and
out
adc
adc
xchg
mov
dec
jb
stos
and
add
daa
dec
call
or
loop
add
xchg
dec
sbb
rcr
sbb
jg
dec
push
xor
icebp
mov
in
je
addr16
in
mov
inc
movsl
inc
mov
sub
add
fsubr
adcl
push
jno
rolb
sbb
aad
cmp
fstl
outsb
sbb
inc
inc
test
inc
fildl
adc
loope
xchg
shlb
loop
xchg
scas
push
fstpt
dec
push
xchg
lods
loopne
jns
xor
xchg
rol
loopne
sbb
xorl
push
and
insl
jae
xor
mov
mov
shrb
xchg
insl
test
sub
xor
sbb
out
test
lea
push
jno
inc
adc
bound
pop
adc
mov
and
aad
cmp
or
in
inc
mov
loope
mov
inc
xor
dec
lods
jg
fimull
stc
pop
mov
ja
outsl
cs
add
adc
shll
addr16
int3
cmp
xlat
mov
outsl
mov
and
push
xor
ficompl
push
and
call
pusha
cwtl
or
mov
ds
fs
sub
gs
dec
mov
fcompl
sub
or
sbb
icebp
mov
push
daa
mov
je
mov
push
adc
sub
cmp
or
shll
or
jmp
mov
xor
in
mov
push
fcomps
cld
pop
ja
mov
dec
inc
add
and
pop
inc
push
dec
inc
sub
push
das
mov
rcrl
jecxz
mov
add
insl
add
adc
lea
mov
mov
push
lahf
stc
sub
sub
dec
jbe,pn
test
dec
shlb
je
stc
and
or
mov
insb
pop
or
dec
fcomps
and
mov
mov
and
cli
push
dec
je
mov
sbb
cmp
dec
xchg
sub
lret
scas
faddl
rcr
stc
and
push
test
dec
insb
sbb
push
call
hlt
lods
ja
xor
int
mov
shll
or
test
inc
sarb
sbb
ret
insl
adc
dec
cmp
or
mov
sub
jno
and
ret
xchg
fldenv
loope
cld
aaa
sub
push
xchg
or
cmp
lods
movsl
fldcw
and
cltd
fildl
jo
mov
cwtl
inc
ret
imul
lods
jb
push
or
and
mov
ret
mov
and
and
scas
cwtl
xor
or
clc
pop
in
pusha
add
lods
or
shl
cmp
stos
mov
icebp
pop
xchg
inc
test
add
xor
xchg
aam
andb
leave
cmpsl
es
ss
mov
sub
jb
or
addb
divb
fnsave
mov
and
add
add
test
movsl
getsec
mov
mov
jne
fsubs
outsl
mov
insb
and
jbe
mov
sbb
loope
xchg
mov
pop
add
mov
jmp
shll
test
adc
add
or
push
jne
mov
jo
and
push
jne
sbb
aad
data16
mov
xchg
les
and
fadds
enterw
xchg
xor
mov
inc
sbb
cltd
or
lea
push
fisubs
addl
or
adc
sbb
sbb
pop
popf
aaa
mov
adc
sbb
pop
pop
andl
add
jle
loopne
arpl
test
out
push
mov
pop
fnstenv
adc
and
xor
test
push
fadds
sbb
bound
inc
cs
jo
leave
push
jne
inc
pop
sbb
xor
jl
lcall
sbb
push
pop
pop
insl
adc
cmp
bound
inc
test
inc
loope
dec
rcll
inc
pop
cmp
pop
movsb
inc
adc
pop
ljmp
mov
mov
and
iret
inc
daa
pusha
adc
rclb
mov
or
adc
inc
adc
mov
aaa
arpl
mov
popa
dec
leave
adc
in
xchg
in
out
sbb
and
inc
inc
lock
mov
test
sub
mov
sub
mov
mov
adc
popa
lret
inc
sbb
xor
xchg
add
mov
push
xchg
add
adc
cmp
outsl
sbb
push
add
shll
or
popa
stos
xchg
and
outsl
enter
int3
fs
xchg
push
adc
imul
xchg
jbe
sbb
add
jbe
dec
data16
ret
enter
insb
or
and
dec
subl
or
dec
insb
jmp
lods
or
loope
push
ds
mov
push
mov
lods
daa
and
adc
test
popa
inc
pop
sbb
jae
add
inc
adc
ss
xchg
push
jo
loope
jo
add
inc
fs
pop
and
fstpt
rcrl
or
dec
dec
movsb
loope
push
pop
sbbl
inc
add
sbb
push
lods
add
jmp
fists
dec
mov
mov
push
inc
out
inc
rolb
push
add
pop
inc
sub
add
and
call
sbb
or
rolb
mov
add
int3
push
outsl
insl
mov
add
push
add
push
inc
movups
mov
lahf
push
push
mov
orl
xor
add
loopne
or
sar
sub
aas
sbb
bound
inc
push
scas
and
add
add
mov
inc
push
push
and
testl
add
ficoml
push
adc
jo,pt
test
push
dec
add
cs
push
shrb
sbb
nop
dec
sub
insb
sbb
sahf
je,pn
jae
rcrb
jb
dec
rolb
adc
imul
push
dec
adc
shlb
jl
push
sub
jae
dec
push
daa
inc
or
ud2
inc
dec
popl
notb
cmp
sub
jg
mov
add
pusha
cmp
add
and
add
add
incl
add
add
pusha
mov
lea
movl
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
mov
push
adc
mov
